
61c7cfde98b46c168609d32f87cee590ae0947752dde7d0ce7e10893317c119e.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	mov    DWORD PTR [ebx+0x2b],eax
  411003:	xlat   BYTE PTR ds:[ebx]
  411004:	in     al,0xaa
  411006:	pushf  
  411007:	xor    DWORD PTR [ecx-0x6f4b8a9b],eax
  41100d:	or     DWORD PTR [ebx],edi
  41100f:	jne    0x410ff9
  411011:	pop    ecx
  411012:	in     eax,dx
  411013:	xor    eax,0x2437b36b
  411018:	or     eax,0x3b7b7ea3
  41101d:	and    DWORD PTR [edi+ebx*2-0x649dd82d],ecx
  411024:	xchg   esi,eax
  411025:	cmp    eax,0x6bb93728
  41102a:	lods   al,BYTE PTR ds:[esi]
  41102b:	cmp    eax,0xa516b439
  411030:	ret    0x4a9b
  411033:	test   BYTE PTR fs:[edx+0x3],al
  411037:	jb     0x41100d
  411039:	dec    ebx
  41103a:	add    eax,0x3433f89a
  41103f:	addr16 pop ebp
  411041:	mov    bh,0x2e
  411043:	pop    ds
  411044:	mov    ch,0x25
  411046:	xlat   BYTE PTR ds:[ebx]
  411047:	sub    eax,0xeebb40c8
  41104c:	xchg   ebx,eax
  41104d:	add    eax,0x7bf6b250
  411052:	sub    al,0x32
  411054:	dec    esi
  411055:	rcl    ebp,cl
  411057:	jno    0x411018
  411059:	mov    BYTE PTR [edx+0x7a],ch
  41105c:	inc    ecx
  41105d:	cld    
  41105e:	loope  0x41107c
  411060:	add    BYTE PTR [edi],ah
  411062:	mov    edx,0x93155b7
  411067:	xchg   ebx,esi
  411069:	dec    eax
  41106a:	jno    0x411054
  41106c:	dec    edx
  41106d:	pop    ebp
  41106e:	fadd   DWORD PTR [ebx]
  411070:	and    bh,dh
  411072:	aam    0xa
  411074:	pusha  
  411075:	push   0x1d
  411077:	mov    ds:0x487297ac,al
  41107c:	js     0x4110e6
  41107e:	mov    ebx,0xa594a8ee
  411083:	in     al,dx
  411084:	into   
  411085:	ret    0x7424
  411088:	outs   dx,DWORD PTR ds:[esi]
  411089:	gs enter 0xe61b,0x47
  41108e:	sar    DWORD PTR [ebp+esi*1+0x2d4bb30f],0x8c
  411096:	jnp    0x4110d8
  411098:	out    0xaa,eax
  41109a:	inc    edi
  41109b:	ds (bad) 
  41109e:	mov    ds:0x80aa8770,al
  4110a3:	stos   BYTE PTR es:[edi],al
  4110a4:	push   esi
  4110a5:	sti    
  4110a6:	fist   WORD PTR [esi-0xd]
  4110a9:	cmc    
  4110aa:	test   BYTE PTR ds:0xece93df1,dl
  4110b0:	imul   DWORD PTR ds:0xa31d53a1
  4110b6:	push   ebp
  4110b7:	arpl   WORD PTR [edi-0x1a9ac154],cx
  4110bd:	lahf   
  4110be:	xor    DWORD PTR [edi],eax
  4110c0:	(bad)  
  4110c1:	loop   0x411121
  4110c3:	sbb    ecx,DWORD PTR [edx-0x3f9ff03b]
  4110c9:	pop    esp
  4110cb:	jne    0x41108e
  4110cd:	dec    eax
  4110ce:	inc    eax
  4110cf:	xor    eax,0xd50779b0
  4110d4:	mov    ds:0x11700a1a,eax
  4110d9:	or     BYTE PTR [eax-0x4c],bh
  4110dc:	add    dh,ah
  4110de:	stc    
  4110df:	mov    ebx,0xa55363db
  4110e4:	out    0x7c,al
  4110e6:	jmp    0x59a84bc7
  4110eb:	fdivr  DWORD PTR ds:0xe0bbc1bb
  4110f1:	cmp    BYTE PTR [ebp+0x6670c9de],cl
  4110f7:	jns    0x41108d
  4110f9:	test   ch,cl
  4110fb:	xchg   edi,eax
  4110fc:	add    ebx,edi
  4110fe:	inc    esi
  4110ff:	dec    eax
  411100:	pop    esp
  411101:	das    
  411102:	aam    0x7e
  411104:	mov    bh,0x36
  411106:	popf   
  411107:	cmp    al,0x8d
  411109:	in     al,dx
  41110a:	cwde   
  41110b:	call   FWORD PTR [ebp-0xf]
  41110e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41110f:	mov    cl,0xc9
  411111:	(bad)  
  411112:	fisttp DWORD PTR [ebp-0x61]
  411115:	outs   dx,BYTE PTR ds:[esi]
  411116:	int3   
  411117:	adc    esp,DWORD PTR [eax+ebx*1]
  41111a:	sahf   
  41111b:	ror    dh,cl
  41111d:	push   es
  41111e:	fadd   DWORD PTR [ebp+edi*4+0x69]
  411122:	mov    WORD PTR [edi+0x19],cs
  411125:	out    0xdd,al
  411127:	and    eax,0xb9184454
  41112c:	xor    BYTE PTR [eax+0x7c0f1f62],ah
  411132:	fiadd  WORD PTR [edx+0x42]
  411135:	xchg   ebp,eax
  411136:	outs   dx,BYTE PTR ds:[esi]
  411137:	scas   al,BYTE PTR es:[edi]
  411138:	or     dl,al
  41113a:	iret   
  41113b:	mov    ecx,0xe7ba9635
  411140:	pop    eax
  411141:	hlt    
  411142:	mov    dh,0xdc
  411144:	mov    ebp,0xe1135fb2
  411149:	and    eax,0x6c45d5a8
  41114e:	popf   
  41114f:	add    edx,esi
  411151:	bound  edx,QWORD PTR [edi-0x7]
  411154:	test   BYTE PTR [edx+0x7d],al
  411157:	mov    es,WORD PTR [eax]
  411159:	test   eax,0x42bc63b4
  41115e:	pop    esp
  41115f:	in     al,dx
  411160:	xor    al,0xf3
  411162:	ud1    ebx,DWORD PTR [edx-0x1b895229]
  411169:	test   DWORD PTR [edi],ebx
  41116b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41116c:	jl     0x4111ab
  41116e:	mov    esi,0x924d7a49
  411173:	adc    ah,dl
  411175:	push   0xb
  411177:	mov    esp,0x2d94d59a
  41117c:	(bad)  
  41117d:	xrelease xchg DWORD PTR ds:0x3f2375a3,ebx
  411184:	jle    0x41119b
  411186:	mov    esi,DWORD PTR [eax]
  411188:	pop    edi
  411189:	icebp  
  41118a:	ss dec esp
  41118c:	call   0x11f2:0x988b3e86
  411193:	stos   DWORD PTR es:[edi],eax
  411194:	and    al,0xf7
  411196:	dec    eax
  411197:	sub    al,0xca
  411199:	xchg   ebx,eax
  41119a:	pop    esi
  41119b:	rcl    bh,0x5b
  41119e:	add    BYTE PTR [ecx-0x19],ah
  4111a1:	sbb    DWORD PTR [esi],0xffffff84
  4111a4:	lods   al,BYTE PTR ds:[esi]
  4111a5:	addr16 xchg ecx,eax
  4111a7:	aam    0x3e
  4111a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111aa:	mov    ecx,0xd3ae46bb
  4111af:	add    DWORD PTR [ebp+ebx*4-0x62],eax
  4111b3:	neg    BYTE PTR [edi+ebx*4-0x8a83ef4]
  4111ba:	imul   ebp,DWORD PTR [edi+0x74dc3b29],0xffffff92
  4111c1:	sti    
  4111c2:	mov    ds:0xd3152299,al
  4111c7:	aad    0xbb
  4111c9:	pop    sp
  4111cb:	mov    eax,ds:0xb66b1549
  4111d0:	sbb    DWORD PTR [ebp+0x7f8e9c84],esi
  4111d6:	sub    BYTE PTR [edi-0x4],bh
  4111d9:	inc    eax
  4111da:	jno    0x4111a8
  4111dc:	or     eax,0x57ad89f7
  4111e1:	jns    0x411258
  4111e3:	mov    ds:0x38061033,eax
  4111e8:	test   BYTE PTR [ecx],ch
  4111ea:	push   ss
  4111eb:	inc    edi
  4111ec:	iret   
  4111ed:	ja     0x411230
  4111ef:	test   eax,0xce27d0e4
  4111f4:	inc    edx
  4111f5:	std    
  4111f6:	jb     0x4111b7
  4111f8:	mov    fs,WORD PTR [eax]
  4111fa:	out    dx,al
  4111fb:	ds dec edi
  4111fd:	hlt    
  4111fe:	retf   0x2a2c
  411201:	stc    
  411202:	mul    BYTE PTR [esi+0x568d395e]
  411208:	push   ecx
  411209:	sub    al,0x21
  41120b:	pop    esp
  41120d:	mov    esp,0x842d6ca0
  411212:	push   edx
  411213:	jecxz  0x4111b8
  411215:	popf   
  411216:	nop
  411217:	xchg   BYTE PTR [esi],ch
  411219:	imul   ebp,DWORD PTR [ebp+0x5a459bb0],0x9a80acd9
  411223:	in     al,dx
  411224:	(bad)  
  411226:	mov    ah,0xeb
  411228:	add    BYTE PTR [edi+0x6fcff902],dl
  41122e:	mov    esp,DWORD PTR [ecx]
  411230:	lods   eax,DWORD PTR ds:[esi]
  411231:	inc    edx
  411232:	mov    cl,0xff
  411234:	(bad)  
  411235:	sbb    al,dl
  411237:	cmp    al,0x4d
  411239:	mov    ch,0xd8
  41123b:	adc    dl,ah
  41123d:	test   BYTE PTR [esi-0x55],0x8d
  411241:	lds    ebx,FWORD PTR [edx+0x9]
  411244:	inc    ebp
  411245:	sub    al,al
  411247:	mov    edx,0xe5eb564c
  41124c:	push   ds
  41124d:	mul    DWORD PTR [edx+0x68]
  411250:	call   0x5ea8:0x58717fce
  411257:	fisttp DWORD PTR [edi]
  411259:	mov    edi,0x33ffd595
  41125e:	(bad)  
  41125f:	fcmovnb st,st(3)
  411261:	sub    dh,BYTE PTR [edx]
  411263:	(bad)  
  411264:	and    DWORD PTR fs:[esi],ebp
  411267:	mov    esp,0x81c5763f
  41126c:	sbb    cl,BYTE PTR [esi]
  41126e:	and    eax,edx
  411270:	hlt    
  411271:	jmp    0xcbfa9563
  411276:	aaa    
  411277:	stos   DWORD PTR es:[edi],eax
  411278:	in     eax,0x1a
  41127a:	std    
  41127b:	mov    dh,BYTE PTR [ecx]
  41127d:	xor    cl,BYTE PTR [esi+0x10]
  411280:	or     cl,al
  411282:	xchg   BYTE PTR [esi-0x79cdd1dc],dl
  411288:	pop    ss
  411289:	fwait
  41128a:	loop   0x4112ef
  41128c:	call   0x34671024
  411291:	xchg   ecx,eax
  411292:	pop    ebp
  411293:	out    0xda,al
  411295:	mov    ch,0xc
  411297:	mov    bl,0xf9
  411299:	jge    0x411275
  41129b:	xchg   edx,eax
  41129c:	and    eax,DWORD PTR [ecx-0x466a0591]
  4112a2:	gs xchg ecx,eax
  4112a4:	dec    ebx
  4112a5:	adc    eax,0x5c03f195
  4112aa:	xor    eax,0xcdad5f70
  4112af:	cli    
  4112b0:	shr    DWORD PTR [ebx+0x44094e29],1
  4112b6:	test   eax,ecx
  4112b8:	push   es
  4112b9:	push   eax
  4112ba:	inc    ebp
  4112bb:	inc    edx
  4112bc:	inc    ebx
  4112bd:	cmp    cl,BYTE PTR [eax+0x659401ee]
  4112c3:	pop    ecx
  4112c4:	dec    edx
  4112c5:	add    BYTE PTR [ebp+ecx*1-0x4086221c],bl
  4112cc:	xor    DWORD PTR [edx-0x482e69a8],esi
  4112d2:	ret    
  4112d3:	jge    0x411305
  4112d5:	mov    dh,0x21
  4112d7:	imul   ebx,DWORD PTR [edx+0x1],0xd5ad043f
  4112de:	mov    ebx,0x25c2b587
  4112e3:	imul   edi,edi,0xffffff8d
  4112e6:	push   ecx
  4112e7:	sub    bh,BYTE PTR [edx]
  4112e9:	aam    0x53
  4112eb:	inc    ecx
  4112ec:	arpl   di,si
  4112ee:	enter  0x82c4,0x3
  4112f2:	lahf   
  4112f3:	jmp    0x40ed:0x458a476e
  4112fa:	dec    edx
  4112fb:	enter  0xc07f,0x9
  4112ff:	out    0x88,eax
  411301:	icebp  
  411302:	sub    bl,ah
  411304:	loopne 0x41129e
  411306:	in     al,0xc4
  411308:	push   esp
  411309:	mov    bl,0x6a
  41130b:	nop
  41130c:	xchg   edx,eax
  41130d:	pop    edx
  41130e:	and    eax,0x5c0088a5
  411313:	icebp  
  411314:	retf   
  411315:	and    esp,esp
  411317:	and    BYTE PTR [esi+eax*8-0xe6e77d0],ch
  41131e:	xor    ch,0x50
  411321:	pop    esi
  411322:	dec    ecx
  411323:	pop    ecx
  411324:	lods   al,BYTE PTR ds:[esi]
  411325:	mov    ds:0x247f38b,eax
  41132a:	cld    
  41132b:	cmp    DWORD PTR [edx+0x217da9ab],eax
  411331:	mov    BYTE PTR [ebp+0x2a],bl
  411334:	(bad)  
  411335:	loopne 0x4113a4
  411337:	pop    es
  411338:	add    eax,0xa391dfbd
  41133d:	fwait
  41133e:	pusha  
  41133f:	jnp    0x411352
  411341:	pop    eax
  411342:	in     eax,dx
  411343:	mov    eax,ds:0xa638906c
  411348:	pop    ds
  411349:	pop    esi
  41134a:	inc    ebx
  41134b:	pop    esi
  41134c:	nop
  41134d:	addr16 fwait
  41134f:	mov    ah,0x77
  411351:	jnp    0x411373
  411353:	pop    esp
  411354:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411355:	jmp    0x41132d
  411357:	cmp    eax,0x15f826c
  41135c:	scas   al,BYTE PTR es:[edi]
  41135d:	push   ss
  41135e:	lea    ecx,[eax+ebp*8+0x31]
  411362:	dec    esi
  411363:	repz xchg ecx,eax
  411365:	xchg   ebx,eax
  411366:	(bad)  
  411367:	bound  ecx,QWORD PTR [ecx]
  411369:	in     eax,0xec
  41136b:	adc    DWORD PTR [edi-0x37fda3aa],ebx
  411371:	lods   eax,DWORD PTR ds:[esi]
  411372:	sub    esp,edx
  411374:	mov    edx,0xfbb32f45
  411379:	ins    BYTE PTR es:[edi],dx
  41137a:	fdivr  QWORD PTR [eax+ebp*8+0x33]
  41137e:	sub    DWORD PTR [ebp-0x4a7b45c6],0x5e
  411385:	test   DWORD PTR [ecx-0x7bbf3335],0x30519ba
  41138f:	adc    DWORD PTR [ebx],eax
  411391:	lea    eax,ds:0xbae44c8f
  411397:	inc    edx
  411398:	jno    0x41139f
  41139a:	fcom   QWORD PTR ds:[esi+0x64dad70f]
  4113a1:	idiv   ebx
  4113a3:	sbb    cl,BYTE PTR [ebp+eax*8-0x633037e7]
  4113aa:	hlt    
  4113ab:	push   esp
  4113ac:	ret    0x155a
  4113af:	xor    eax,ebp
  4113b1:	jp     0x411361
  4113b3:	sub    eax,0xbc890318
  4113b8:	cmc    
  4113b9:	push   edx
  4113ba:	xor    DWORD PTR [ebp+0x68],ebp
  4113bd:	ins    BYTE PTR es:[edi],dx
  4113be:	call   0x1e7d:0x28694a9
  4113c5:	push   ebx
  4113c6:	jne    0x4113f8
  4113c8:	fndisi(8087 only) 
  4113ca:	mov    cl,0x24
  4113cc:	stos   BYTE PTR es:[edi],al
  4113cd:	fisub  WORD PTR [esi+0x2d]
  4113d0:	ins    DWORD PTR es:[edi],dx
  4113d1:	and    cl,dl
  4113d3:	loopne 0x411429
  4113d5:	fdivr  st(2),st
  4113d7:	sbb    esi,esi
  4113d9:	dec    edx
  4113da:	push   ebx
  4113db:	cdq    
  4113dc:	jmp    0xe1c82ce6
  4113e1:	mov    bl,BYTE PTR [edx]
  4113e3:	inc    eax
  4113e4:	mov    bh,0x50
  4113e6:	mov    cl,0x60
  4113e8:	jns    0x4113ab
  4113ea:	imul   ebp,edx,0x4db34699
  4113f0:	pop    ebx
  4113f1:	lods   eax,DWORD PTR ds:[esi]
  4113f2:	jbe    0x411463
  4113f4:	dec    ebp
  4113f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113f6:	adc    BYTE PTR [eax+ebx*4-0x5c56bbee],ch
  4113fd:	cmp    al,0x97
  4113ff:	pop    edi
  411400:	repz or esp,DWORD PTR [esi+0x19]
  411404:	mov    bl,0x87
  411406:	rol    BYTE PTR [esi-0x1f],cl
  411409:	fld    TBYTE PTR ds:[esi-0x75]
  41140d:	scas   eax,DWORD PTR es:[edi]
  41140e:	bnd jmp 0x4113b5
  411411:	inc    esi
  411412:	(bad)  
  411413:	push   ss
  411414:	(bad)  [ecx-0x10]
  411417:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411418:	mov    dl,0x8a
  41141a:	sahf   
  41141b:	ret    
  41141c:	shl    ecx,1
  41141e:	imul   edi,DWORD PTR [ebp+edi*4+0x627cc191],0xffffff9c
  411426:	mov    ah,0xff
  411428:	fidivr WORD PTR [edi]
  41142a:	cdq    
  41142b:	mov    ds:0x8d502294,eax
  411430:	les    ax,DWORD PTR [edx+0x6a0a8326]
  411437:	mov    al,ds:0x8d79f92
  41143c:	int3   
  41143d:	pop    ebp
  41143e:	repnz adc bh,BYTE PTR [bp+di]
  411442:	retf   
  411443:	sub    al,bl
  411445:	imul   eax,ecx,0x4d4181b
  41144b:	repnz outs dx,BYTE PTR ds:[esi]
  41144d:	gs or  al,0xce
  411450:	es add al,0xb7
  411453:	out    dx,eax
  411454:	into   
  411455:	jmp    0x5467:0x7b0fdc75
  41145c:	sub    ch,al
  41145e:	sub    BYTE PTR [ebx+0xb],ch
  411461:	arpl   WORD PTR [ebp-0x3b],dx
  411464:	bound  edx,QWORD PTR [edi]
  411466:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411467:	(bad)  
  411468:	sbb    al,0x8a
  41146a:	add    eax,DWORD PTR [ebx]
  41146c:	lds    ebx,FWORD PTR [edx-0x5cb11ef7]
  411472:	push   ebx
  411473:	in     al,0xdd
  411475:	call   0x4ab7:0x3b4c54ac
  41147c:	mov    cl,0xec
  41147e:	inc    ecx
  41147f:	(bad)  [edi-0x69]
  411482:	enter  0x94a4,0xb
  411486:	cdq    
  411487:	mov    al,ds:0xbea92313
  41148c:	jmp    0x4114dd
  41148e:	pop    esi
  41148f:	sub    al,dl
  411491:	pop    esi
  411492:	f2xm1  
  411494:	xor    BYTE PTR [ebp+0x45],cl
  411497:	xchg   edx,eax
  411498:	clc    
  411499:	stc    
  41149a:	mov    edi,0xdfa50b4a
  41149f:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114a1:	loopne 0x411511
  4114a3:	or     BYTE PTR [eax],cl
  4114a5:	or     al,0xb
  4114a7:	js     0x4114a7
  4114a9:	sub    al,BYTE PTR [esi+eax*8+0x5b]
  4114ad:	stos   BYTE PTR es:[edi],al
  4114ae:	bswap  ebx
  4114b0:	(bad)  
  4114b1:	out    0x84,al
  4114b3:	xor    BYTE PTR [ebp+0x67],ah
  4114b6:	push   0xbb02a840
  4114bb:	and    DWORD PTR [esi+0x682e9f48],edi
  4114c1:	xchg   ebx,eax
  4114c2:	adc    ah,ah
  4114c4:	mov    dh,0xec
  4114c6:	test   BYTE PTR [esi+0x4c4a4b02],bh
  4114cc:	lock sti 
  4114ce:	add    dl,dh
  4114d0:	fwait
  4114d1:	mov    eax,ds:0x2ebedd52
  4114d6:	lock jae 0x4114f8
  4114d9:	mov    bl,0x72
  4114db:	retf   0xb8bf
  4114de:	fiadd  DWORD PTR [edi-0x80]
  4114e1:	jnp    0x4114b2
  4114e3:	aam    0x5f
  4114e5:	sub    DWORD PTR [esp+edx*4+0x625e3edf],0xffffff89
  4114ed:	jns    0x411522
  4114ef:	loope  0x41155b
  4114f1:	lahf   
  4114f2:	test   BYTE PTR [esi+esi*1+0x3],ch
  4114f6:	jle    0x4114f8
  4114f8:	loope  0x411516
  4114fa:	out    dx,eax
  4114fb:	stos   BYTE PTR es:[edi],al
  4114fc:	nop
  4114fd:	adc    esi,DWORD PTR [eax-0x50]
  411500:	lods   eax,DWORD PTR ds:[esi]
  411501:	sbb    DWORD PTR [ebx-0x47],esp
  411504:	popa   
  411505:	sbb    DWORD PTR [esi-0x60e06e7e],ebp
  41150b:	sub    ah,dl
  41150d:	mov    ecx,0x47ddafa9
  411512:	rcr    edx,0xa8
  411515:	push   esi
  411516:	mov    WORD PTR [esi-0x33],fs
  411519:	fisttp QWORD PTR [edx]
  41151b:	and    edx,DWORD PTR ds:0xfe593674
  411521:	sub    eax,0xb5e25a93
  411526:	shr    DWORD PTR [esp+edx*4],cl
  411529:	(bad)  
  41152a:	mov    esp,0x3353fcc9
  41152f:	test   al,dh
  411531:	sub    eax,DWORD PTR [ebx-0x74e3fa81]
  411537:	xlat   BYTE PTR ds:[ebx]
  411538:	push   esi
  411539:	out    dx,eax
  41153a:	push   cs
  41153b:	aas    
  41153c:	lea    edi,[esi]
  41153e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41153f:	xchg   ebx,eax
  411540:	and    al,0x8a
  411542:	(bad)  
  411543:	sti    
  411544:	sbb    edi,ecx
  411546:	ret    
  411547:	cmp    cl,cl
  411549:	jmp    0xb1072e4a
  41154e:	xchg   ebp,eax
  41154f:	mov    ecx,0x26f0e794
  411554:	inc    eax
  411555:	in     al,dx
  411556:	scas   eax,DWORD PTR es:[edi]
  411557:	jmp    0x4114fb
  411559:	mov    esp,0xcbe52e
  41155e:	mov    eax,0x23f0e81b
  411563:	sbb    al,0x90
  411565:	xchg   esi,eax
  411566:	adc    al,0xfd
  411568:	lods   eax,DWORD PTR ds:[esi]
  411569:	pop    esp
  41156a:	icebp  
  41156b:	test   DWORD PTR [esi-0x40c4094c],edx
  411571:	cmp    eax,0x6539bf8e
  411576:	inc    ecx
  411577:	and    BYTE PTR [ecx+0x7876a266],bh
  41157d:	sbb    al,0xac
  41157f:	or     bl,cl
  411581:	dec    ecx
  411582:	pop    esp
  411583:	ret    
  411584:	repnz (bad) 
  411586:	jbe    0x411586
  411588:	push   ebp
  411589:	or     ah,al
  41158b:	jle    0x411524
  41158d:	mov    ds:0xde4ba3e4,al
  411592:	jl     0x411535
  411594:	imul   ebx,DWORD PTR [bp+si+0x5006],0x3674a323
  41159d:	xor    eax,0x28950d60
  4115a3:	repz mov esp,0xb7bd70ea
  4115a9:	adc    eax,0xa2098660
  4115ae:	mov    dh,0x18
  4115b0:	and    al,0xac
  4115b2:	xor    al,0xf3
  4115b4:	sar    DWORD PTR [eax],1
  4115b6:	not    DWORD PTR [ecx]
  4115b8:	retf   
  4115b9:	ds clc 
  4115bb:	sub    cl,BYTE PTR [eax+ebp*2]
  4115be:	add    DWORD PTR [eax],edx
  4115c0:	push   ebp
  4115c1:	xchg   ebx,eax
  4115c2:	xchg   edi,eax
  4115c3:	and    DWORD PTR [esi-0x32],esp
  4115c6:	or     DWORD PTR [ebx-0x66],eax
  4115c9:	add    eax,0xbd3ca09c
  4115ce:	inc    ecx
  4115cf:	sbb    al,0xda
  4115d1:	push   ds
  4115d2:	ss push es
  4115d4:	jl     0x411632
  4115d6:	call   0xd7efb2ec
  4115db:	inc    BYTE PTR [ebx]
  4115dd:	pop    ebp
  4115de:	sbb    eax,DWORD PTR [eax+0xe]
  4115e1:	lea    edx,[eax+0x2eb60921]
  4115e7:	xor    esi,DWORD PTR [eax]
  4115e9:	adc    DWORD PTR [edx-0x30],edi
  4115ec:	mov    edx,0xfbee790f
  4115f1:	mov    dh,0xa4
  4115f3:	aad    0xbc
  4115f5:	mov    bh,0x4d
  4115f7:	lahf   
  4115f8:	jp     0x4115d6
  4115fa:	enter  0x63db,0x15
  4115fe:	(bad)  
  411600:	cmp    eax,esi
  411602:	mov    eax,ds:0x99ddfe6c
  411607:	loopne 0x4115e6
  411609:	jmp    0xa15:0x3b9994da
  411610:	test   eax,0x5f539b3d
  411615:	cmp    BYTE PTR cs:[edx+0x10f73b86],0x36
  41161d:	adc    al,BYTE PTR [eax+eiz*8]
  411620:	mov    ebx,0x40ee2819
  411625:	cmc    
  411626:	call   0x189e1a8c
  41162b:	stc    
  41162c:	dec    edi
  41162d:	test   ebx,0xbd2b5084
  411633:	scas   eax,DWORD PTR es:[edi]
  411634:	pushf  
  411635:	ja     0x4115ec
  411637:	fucom  st(4)
  411639:	imul   esi,DWORD PTR [edx+0x58],0xffffff8a
  41163d:	pop    ds
  41163e:	dec    edx
  41163f:	int3   
  411640:	mov    ebp,DWORD PTR [edx]
  411642:	mov    eax,0x18709db5
  411647:	jb     0x411642
  411649:	adc    al,0xd8
  41164b:	mov    dh,0x80
  41164d:	xchg   ebp,eax
  41164e:	push   ebp
  41164f:	adc    bh,bl
  411651:	popf   
  411652:	in     al,dx
  411653:	xor    eax,0xd741a61
  411658:	inc    esp
  411659:	sub    DWORD PTR [ebx-0x32ee6903],0x52
  411660:	out    0xf3,eax
  411662:	mov    ds:0x95f100f1,al
  411667:	inc    edi
  411668:	fistp  QWORD PTR [esi]
  41166a:	int    0xc8
  41166c:	xlat   BYTE PTR ds:[ebx]
  41166d:	(bad)  
  41166e:	repz popa 
  411670:	add    bh,al
  411672:	pop    esi
  411673:	pop    edi
  411674:	pushf  
  411675:	jp     0x4116c2
  411677:	mov    ebp,0x504e80d3
  41167c:	dec    edx
  41167d:	xor    DWORD PTR [edx-0x79],ebp
  411680:	fidiv  WORD PTR cs:[edx]
  411683:	mov    ss,WORD PTR [esi]
  411685:	stos   BYTE PTR es:[edi],al
  411686:	(bad)  
  411687:	xor    eax,0x30d5aaf6
  41168c:	dec    esi
  41168d:	jo     0x4116d6
  41168f:	mov    al,ds:0x627da2d8
  411694:	pop    esi
  411695:	inc    edx
  411696:	aam    0xf6
  411698:	or     ah,BYTE PTR ds:0x681bb936
  41169e:	hlt    
  41169f:	sub    al,0xb2
  4116a1:	dec    edi
  4116a2:	push   ebp
  4116a3:	push   cs
  4116a4:	pop    ss
  4116a5:	or     DWORD PTR [ebx+0x1fb4c32d],eax
  4116ab:	mov    al,ds:0xd78a57c1
  4116b0:	xor    al,0xf
  4116b2:	jnp    0x41165e
  4116b4:	mov    al,0xf6
  4116b6:	jb     0x411726
  4116b8:	mov    gs,ebp
  4116ba:	das    
  4116bb:	jns    0x411678
  4116bd:	and    bl,BYTE PTR [ebx-0x529bd585]
  4116c3:	nop
  4116c4:	sub    ecx,DWORD PTR [edi+0x1d]
  4116c7:	jecxz  0x411665
  4116c9:	push   es
  4116ca:	sub    al,0x57
  4116cc:	xor    BYTE PTR [eax],bh
  4116ce:	rcr    dh,cl
  4116d0:	or     ebp,edx
  4116d2:	adc    BYTE PTR [edx-0x40],0x2b
  4116d6:	out    dx,eax
  4116d7:	or     eax,0xa0994544
  4116dc:	out    dx,eax
  4116dd:	outs   dx,BYTE PTR ds:[esi]
  4116de:	mov    ebx,0x1d302b1c
  4116e3:	cs in  al,dx
  4116e5:	lock pop edx
  4116e7:	mov    DWORD PTR [eax-0x57],esi
  4116ea:	jle    0x41174a
  4116ec:	push   DWORD PTR [ebx-0xf]
  4116ef:	iret   
  4116f0:	jmp    0x8b3c:0xfb2cd0fd
  4116f7:	jbe    0x411728
  4116f9:	bound  edi,QWORD PTR [esi]
  4116fb:	xor    eax,0x72e27995
  411700:	cmp    DWORD PTR [ebp-0x5135e048],ecx
  411706:	test   DWORD PTR [edx+eax*1+0x18],ebp
  41170a:	fild   WORD PTR [ebp+0x3ec47de]
  411710:	and    al,0xbe
  411712:	sub    edx,DWORD PTR [ebx+0x4d181f5]
  411718:	sti    
  411719:	jmp    0x4116a8
  41171b:	jns    0x41170e
  41171d:	into   
  41171e:	mov    es,esp
  411720:	mov    bh,0x8e
  411722:	pop    ecx
  411723:	in     eax,dx
  411724:	jne    0x411778
  411726:	mov    ds:0x8dcc14f6,al
  41172b:	xor    DWORD PTR [edx],esi
  41172d:	fisubr DWORD PTR [ebx+0x4f]
  411730:	sar    BYTE PTR [ebp+0x2d612c09],0xfb
  411737:	call   0x58bb:0x37d6065
  41173e:	and    BYTE PTR [esi-0x19],al
  411741:	jl     0x411774
  411743:	test   al,0x28
  411745:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411746:	sbb    BYTE PTR [ebx],ch
  411748:	jmp    0xa58d18a7
  41174d:	inc    ebp
  41174e:	aad    0xc1
  411750:	jg     0x4116e9
  411752:	sbb    BYTE PTR [edx],bh
  411754:	inc    edx
  411755:	push   ebp
  411756:	test   DWORD PTR [edx-0x56fad497],eax
  41175c:	xchg   BYTE PTR [ecx+0x4d012cd1],dl
  411762:	imul   ecx,DWORD PTR [eax],0x67
  411765:	pushf  
  411766:	sti    
  411767:	rcr    BYTE PTR [eax+0x13],cl
  41176a:	adc    eax,DWORD PTR [ebp+0x5]
  41176d:	test   esp,esi
  41176f:	cmp    al,0x57
  411771:	inc    edi
  411772:	cmp    cl,cl
  411774:	cld    
  411775:	sub    dh,BYTE PTR [edi+0x69]
  411778:	out    0xee,eax
  41177a:	push   ecx
  41177b:	ja     0x411701
  41177d:	les    edi,FWORD PTR [esp+esi*2-0x80089c6]
  411784:	rol    cl,0x92
  411787:	xor    dl,BYTE PTR [ecx]
  411789:	ja     0x4117f4
  41178b:	adc    eax,0xed1584cc
  411790:	loopne 0x41173a
  411792:	in     al,dx
  411793:	xor    BYTE PTR [ebp+0x67a72925],ah
  411799:	cmc    
  41179a:	ds inc eax
  41179c:	inc    esp
  41179d:	sub    al,0x44
  41179f:	push   ds
  4117a0:	ins    BYTE PTR es:[edi],dx
  4117a1:	jl     0x4117e0
  4117a3:	gs jp  0x4117e6
  4117a6:	std    
  4117a7:	addr16 pusha 
  4117a9:	sub    BYTE PTR ds:0x90099f57,cl
  4117af:	(bad)  
  4117b0:	fs mov edi,0x3f6a187d
  4117b6:	jbe    0x411741
  4117b8:	xor    ch,dh
  4117ba:	imul   ebp,DWORD PTR [esi],0xffffffea
  4117bd:	inc    edi
  4117be:	jo     0x4117b9
  4117c0:	sub    al,0x6b
  4117c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117c3:	jmp    0x1814:0x370204e1
  4117ca:	(bad)  
  4117cb:	cdq    
  4117cc:	mov    ebp,0x7cf06483
  4117d1:	in     al,0x36
  4117d3:	push   esp
  4117d4:	or     al,0xeb
  4117d6:	inc    eax
  4117d7:	(bad)  
  4117d8:	xchg   edi,eax
  4117d9:	int    0x21
  4117db:	out    0xb0,al
  4117dd:	inc    eax
  4117de:	xor    al,0x77
  4117e0:	out    0xa9,al
  4117e2:	dec    edx
  4117e3:	inc    edx
  4117e4:	ds xor cl,0x74
  4117e8:	gs xlat BYTE PTR ds:[ebx]
  4117eb:	loopne 0x41185b
  4117ed:	in     al,dx
  4117ee:	retf   
  4117ef:	jnp    0x411860
  4117f1:	ins    DWORD PTR es:[edi],dx
  4117f2:	mov    bl,0x1a
  4117f4:	xchg   edi,eax
  4117f5:	call   0x1f7697a3
  4117fa:	ja     0x411812
  4117fc:	jecxz  0x411810
  4117fe:	fild   DWORD PTR [eax+esi*1-0xb]
  411802:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411803:	leave  
  411804:	aas    
  411805:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411806:	xchg   edx,eax
  411807:	jbe    0x4117b0
  411809:	adc    esi,DWORD PTR [edi-0x61050c96]
  41180f:	test   edi,ecx
  411811:	xchg   BYTE PTR [eax+0x67],bh
  411814:	mov    ch,0x79
  411816:	repz inc ecx
  411818:	mov    esp,0xbf7531
  41181d:	mov    eax,ds:0x1518f01c
  411822:	cdq    
  411823:	jg     0x41185c
  411825:	mov    ebx,0x7f96cf9f
  41182a:	push   edx
  41182b:	cmp    eax,0xdf18daac
  411830:	out    dx,al
  411831:	and    ebp,DWORD PTR [eax+ecx*2-0x55]
  411835:	in     al,0xb4
  411837:	aad    0x58
  411839:	sbb    eax,0x3f6e41ec
  41183e:	test   al,0xdf
  411840:	sub    cl,dh
  411842:	fs ds or eax,0xd7696908
  411849:	(bad)  
  41184b:	cmp    ch,BYTE PTR [edi]
  41184d:	pop    edx
  41184e:	mov    ah,0x48
  411850:	rcl    BYTE PTR [ecx-0x3b],0xd7
  411854:	in     eax,dx
  411855:	int3   
  411856:	cmp    al,0x67
  411858:	in     eax,dx
  411859:	ins    BYTE PTR es:[edi],dx
  41185a:	or     DWORD PTR es:[edi-0x6cd7eb0a],ebx
  411861:	rol    DWORD PTR [ecx],cl
  411863:	xchg   ebx,eax
  411864:	add    eax,0x14335668
  411869:	enter  0x8631,0xf7
  41186d:	mov    ecx,0x74bb3fe5
  411872:	dec    esi
  411873:	jmp    0x7350d61f
  411878:	repz popf 
  41187a:	jge    0x41189c
  41187c:	jnp    0x4118ef
  41187e:	das    
  41187f:	hlt    
  411880:	inc    ebp
  411881:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411882:	popf   
  411883:	inc    ebx
  411884:	and    bh,BYTE PTR [eax-0x63]
  411887:	mov    ecx,0xf40557dd
  41188c:	int3   
  41188d:	lods   al,BYTE PTR ds:[esi]
  41188e:	pop    ds
  41188f:	bound  edx,QWORD PTR [esi+ebx*2+0x24]
  411893:	jns    0x41188d
  411895:	mov    ds:0xc692551a,eax
  41189a:	adc    eax,0x6e2eabe5
  41189f:	scas   eax,DWORD PTR es:[edi]
  4118a0:	imul   ebx,edi,0xf
  4118a3:	outs   dx,BYTE PTR ds:[esi]
  4118a4:	or     DWORD PTR [ecx+0x4],esp
  4118a7:	jo     0x411860
  4118a9:	call   0x81c9:0x343edbe3
  4118b0:	adc    bh,bl
  4118b2:	cmp    eax,ecx
  4118b4:	sbb    eax,DWORD PTR [edx+0x5b]
  4118b7:	add    BYTE PTR [eax-0x4dba3e3f],cl
  4118bd:	mov    edx,0xb2f1788e
  4118c2:	cmp    eax,0xf0c09894
  4118c7:	jbe    0x411942
  4118c9:	mov    ds:0xcda0f65b,eax
  4118ce:	mov    ds:0xffe552ce,al
  4118d3:	xchg   edx,eax
  4118d4:	outs   dx,BYTE PTR ds:[esi]
  4118d5:	or     edi,ebp
  4118d7:	sub    DWORD PTR [ecx+0x1b5bf294],edi
  4118dd:	add    eax,0x3bf72f6a
  4118e2:	cs int 0x4
  4118e5:	dec    esp
  4118e6:	mov    cl,0xd5
  4118e8:	pop    eax
  4118e9:	fisub  WORD PTR [ebx]
  4118eb:	outs   dx,BYTE PTR ds:[esi]
  4118ec:	add    dh,BYTE PTR [esp+ebx*2]
  4118ef:	jmp    DWORD PTR [eax+ecx*4+0x6c6acb82]
  4118f6:	por    mm1,QWORD PTR [esi]
  4118f9:	inc    edi
  4118fa:	push   ecx
  4118fb:	mov    ds:0xaa5033cc,al
  411900:	jmp    0x1095:0x5810fb15
  411907:	iret   
  411908:	sub    cl,BYTE PTR [esi]
  41190a:	sar    DWORD PTR [ebp-0x5b],cl
  41190d:	stc    
  41190e:	dec    edx
  41190f:	lea    edi,[eax+0x25]
  411912:	daa    
  411913:	add    bl,dl
  411915:	and    DWORD PTR [edx],esp
  411917:	adc    eax,0x770b3361
  41191c:	ret    
  41191d:	xchg   edi,eax
  41191e:	shr    DWORD PTR [esi-0x29],1
  411921:	push   0xffffffc1
  411923:	mov    eax,0xd4fbf235
  411928:	dec    ebp
  411929:	cmp    DWORD PTR [ecx-0x38],eax
  41192c:	sub    al,0x39
  41192e:	jg     0x4118da
  411930:	outs   dx,DWORD PTR ds:[esi]
  411931:	add    al,0x9f
  411933:	xchg   DWORD PTR [ebx],edi
  411935:	inc    eax
  411936:	xchg   DWORD PTR ds:0x218833fb,ebp
  41193c:	int    0xb3
  41193e:	mov    ecx,0xf57c87e
  411943:	test   DWORD PTR [ebx+0x740ef4d7],0x4d842811
  41194d:	jbe    0x411986
  41194f:	dec    ebp
  411950:	in     eax,dx
  411951:	je     0x411994
  411953:	sbb    DWORD PTR [ebx+0x25],ebx
  411956:	or     ch,al
  411958:	dec    ebp
  411959:	mov    ds:0x40f70a90,eax
  41195e:	cmc    
  41195f:	repnz or bh,BYTE PTR [ecx]
  411962:	xor    al,0xd6
  411964:	scas   eax,DWORD PTR es:[edi]
  411965:	mov    esi,0x982af175
  41196a:	jge    0x411982
  41196c:	jmp    0xd200d0da
  411971:	cmp    DWORD PTR [edi],0xffffff8e
  411974:	ja     0x41195e
  411976:	retf   0x7a6e
  411979:	cmp    al,BYTE PTR [ebx]
  41197b:	fwait
  41197c:	push   ss
  41197d:	inc    ecx
  41197e:	dec    esi
  41197f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411980:	cmp    cl,dl
  411982:	fwait
  411983:	pop    ss
  411984:	and    al,0x39
  411986:	hlt    
  411987:	sbb    BYTE PTR [eax],0xfc
  41198a:	push   ebp
  41198b:	pop    edx
  41198c:	nop
  41198d:	or     BYTE PTR [ebp+0x50563ab],0x4
  411994:	call   0x926:0xf66ba1cc
  41199b:	int    0xe2
  41199d:	bound  esi,QWORD PTR [ecx+ebx*1]
  4119a0:	fstp   QWORD PTR [eax-0x49]
  4119a3:	xlat   BYTE PTR ds:[ebx]
  4119a4:	es push edi
  4119a6:	mov    ch,0x3e
  4119a8:	popf   
  4119a9:	sub    al,BYTE PTR [edi+0x537e2b71]
  4119af:	xor    DWORD PTR [esi-0x525de537],ecx
  4119b5:	cdq    
  4119b6:	dec    ebx
  4119b7:	sbb    DWORD PTR [ebx-0x14],edx
  4119ba:	imul   ebx,DWORD PTR [ebx+0x6dfd3c63],0xfffffffc
  4119c1:	ins    BYTE PTR es:[edi],dx
  4119c2:	cmp    ebp,DWORD PTR [edi]
  4119c4:	dec    esi
  4119c5:	xchg   ecx,eax
  4119c6:	int    0x36
  4119c8:	mov    bl,0xd7
  4119ca:	inc    ebp
  4119cb:	mov    eax,0x7de11720
  4119d0:	xor    al,0xd7
  4119d2:	nop
  4119d3:	imul   eax,ebx,0x586a87d3
  4119d9:	push   eax
  4119da:	push   0xffffff9f
  4119dc:	jmp    0x2be2:0x82b3a05d
  4119e3:	test   al,0xbc
  4119e5:	(bad)  
  4119e6:	(bad)  
  4119e7:	mov    al,ds:0x27aa8bd0
  4119ec:	cmp    esi,DWORD PTR [ecx-0x1]
  4119ef:	fwait
  4119f0:	sar    DWORD PTR [esi],0xd
  4119f3:	pop    ebp
  4119f4:	sub    bl,BYTE PTR [eax]
  4119f6:	dec    esi
  4119f7:	stos   DWORD PTR es:[edi],eax
  4119f8:	ror    DWORD PTR [ebx+eiz*8+0x11faa064],1
  4119ff:	xor    DWORD PTR [ebp-0x37],esp
  411a02:	retf   0xf088
  411a05:	das    
  411a06:	jecxz  0x411a3a
  411a08:	fnstcw WORD PTR [edx-0x6ff06ee2]
  411a0e:	mov    dl,0xc8
  411a10:	jl     0x411a35
  411a12:	fcomp  DWORD PTR [eax-0x26]
  411a15:	pushf  
  411a16:	and    al,0x59
  411a18:	aas    
  411a19:	(bad)  
  411a1a:	(bad)  
  411a1b:	mov    ch,0x1c
  411a1d:	fisubr WORD PTR [esi]
  411a1f:	shl    DWORD PTR [edi-0x2c],cl
  411a22:	push   edx
  411a23:	xor    ecx,esi
  411a25:	mov    cl,0x6d
  411a27:	xor    edi,DWORD PTR [ebp-0x63]
  411a2a:	arpl   cx,dx
  411a2c:	popa   
  411a2d:	repnz xlat BYTE PTR ds:[ebx]
  411a2f:	add    BYTE PTR [edi+ebx*1-0x5f040316],bl
  411a36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a37:	sub    cl,BYTE PTR [edi-0x61]
  411a3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a3b:	xor    edi,esi
  411a3d:	out    0x61,ax
  411a40:	cmp    eax,0x9df05e56
  411a45:	sbb    edi,esi
  411a47:	gs xchg ebx,eax
  411a49:	mov    ds:0xecd4050b,eax
  411a4e:	jge    0x411a19
  411a50:	or     BYTE PTR [edi-0x6e],al
  411a53:	jmp    0x6c58:0x1602c03b
  411a5a:	cwde   
  411a5b:	ds pop es
  411a5d:	int3   
  411a5e:	pushf  
  411a5f:	call   FWORD PTR [ebx-0x2174355]
  411a65:	aad    0xbc
  411a67:	inc    ecx
  411a68:	bound  ebx,QWORD PTR [edx+0x7c]
  411a6b:	sbb    dl,0x14
  411a6e:	aas    
  411a6f:	fnsave [edx+ebp*2]
  411a72:	jbe    0x411a95
  411a74:	and    ebx,esp
  411a76:	lahf   
  411a77:	out    dx,al
  411a78:	cmp    BYTE PTR [ecx+0x46],cl
  411a7b:	leave  
  411a7c:	xor    al,0x7b
  411a7e:	inc    esi
  411a7f:	mov    al,ds:0xe989bc99
  411a84:	div    cl
  411a86:	add    al,0xac
  411a88:	fsub   QWORD PTR ds:0x19e1fdbb
  411a8e:	and    esi,ecx
  411a90:	(bad)  
  411a91:	out    0x33,al
  411a93:	push   ds
  411a94:	mov    BYTE PTR [edi-0x717d7cd],dh
  411a9a:	jecxz  0x411aaf
  411a9c:	or     ah,BYTE PTR [esp+esi*8]
  411a9f:	xchg   edx,eax
  411aa0:	add    ebx,DWORD PTR [edx+0x1c8ce6b0]
  411aa6:	pop    ss
  411aa7:	pop    ecx
  411aa8:	outs   dx,BYTE PTR ds:[esi]
  411aa9:	test   eax,0x8d4b3629
  411aae:	cdq    
  411aaf:	sbb    dh,bl
  411ab1:	inc    esp
  411ab2:	push   ecx
  411ab3:	ret    
  411ab4:	pop    eax
  411ab5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ab6:	dec    eax
  411ab7:	aad    0x54
  411ab9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411aba:	outs   dx,DWORD PTR ds:[esi]
  411abb:	out    0x15,al
  411abd:	jb     0x411b1d
  411abf:	jbe    0x411af1
  411ac1:	mov    ah,0xa7
  411ac3:	jge    0x411aea
  411ac5:	js     0x411afc
  411ac7:	lock adc DWORD PTR [esi-0x32],esi
  411acb:	hlt    
  411acc:	loop   0x411aa7
  411ace:	repnz test eax,0xa0832381
  411ad4:	push   es
  411ad5:	push   esp
  411ad6:	add    BYTE PTR cs:[ebx],al
  411ad9:	cmp    DWORD PTR [edx+0xecaa545],edi
  411adf:	cmp    al,0x74
  411ae1:	mov    ch,0xae
  411ae3:	mov    dh,0xcc
  411ae5:	call   0x58afd09
  411aea:	div    BYTE PTR [ebx]
  411aec:	xor    eax,0x7f2043f9
  411af1:	add    esp,DWORD PTR [bx+si-0x56]
  411af5:	cmp    al,0x96
  411af7:	dec    esp
  411af8:	adc    DWORD PTR [eax-0x61],eax
  411afb:	std    
  411afc:	mov    ebp,0xd7b8363f
  411b01:	mov    ?,esi
  411b03:	inc    edx
  411b04:	enter  0xe4f7,0xdc
  411b08:	sub    ebx,0x9b6622c1
  411b0e:	sahf   
  411b0f:	shl    BYTE PTR [esi],0xe4
  411b12:	icebp  
  411b13:	neg    DWORD PTR [ebx]
  411b15:	je     0x411b81
  411b17:	nop
  411b18:	and    ah,BYTE PTR [eax]
  411b1a:	sahf   
  411b1b:	or     ebx,edx
  411b1d:	dec    ebx
  411b1e:	mov    BYTE PTR [ecx+esi*4-0x77],al
  411b22:	and    DWORD PTR [edi+0x7a0a9066],ebp
  411b28:	mov    al,BYTE PTR [eax+0x1c06b401]
  411b2e:	scas   eax,DWORD PTR es:[edi]
  411b2f:	mov    ecx,0xb53032ce
  411b34:	mov    esp,0x73a956ac
  411b39:	(bad)  
  411b3a:	repz adc edi,ebp
  411b3d:	sbb    DWORD PTR [edx],eax
  411b3f:	outs   dx,DWORD PTR ds:[esi]
  411b40:	dec    edi
  411b41:	dec    edi
  411b42:	pop    esi
  411b43:	xor    al,0x4
  411b45:	mov    bl,0x1d
  411b47:	(bad)  
  411b48:	mov    edi,0x2fa33a56
  411b4d:	or     ebp,DWORD PTR [edi+0x5b81077d]
  411b53:	cmc    
  411b54:	jg     0x411ae3
  411b56:	in     eax,dx
  411b57:	mov    cl,0xad
  411b59:	gs jecxz 0x411b6e
  411b5c:	jno    0x411ae5
  411b5e:	ss pop ebx
  411b60:	test   BYTE PTR es:[esi],dh
  411b63:	add    eax,DWORD PTR [eax-0x2]
  411b66:	stos   BYTE PTR es:[edi],al
  411b67:	and    BYTE PTR [ecx-0x1],ch
  411b6a:	or     al,0xb3
  411b6c:	test   BYTE PTR [esi+0x76],ah
  411b6f:	inc    esi
  411b70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b71:	xlat   BYTE PTR ds:[ebx]
  411b72:	sub    al,0xd2
  411b74:	push   ecx
  411b75:	inc    esp
  411b76:	loope  0x411b17
  411b78:	sub    eax,0xd5c99649
  411b7d:	jmp    0x80d:0xbdc3d96b
  411b84:	fcomp  DWORD PTR [edi+0x58]
  411b87:	add    DWORD PTR [eax],esi
  411b89:	jns    0x411bf1
  411b8b:	scas   eax,DWORD PTR es:[edi]
  411b8c:	and    bh,BYTE PTR [edi]
  411b8e:	inc    eax
  411b8f:	pop    esi
  411b90:	(bad)  
  411b92:	ret    
  411b93:	xchg   ecx,eax
  411b94:	adc    eax,0x6fe0e00b
  411b99:	mov    ecx,0x7418c7b8
  411b9e:	add    DWORD PTR [ebp+0x46],0xffffffb1
  411ba2:	push   cs
  411ba3:	scas   al,BYTE PTR es:[edi]
  411ba4:	and    eax,0x353f6cff
  411ba9:	(bad)  
  411baa:	lahf   
  411bab:	nop
  411bac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bad:	fidiv  DWORD PTR [eax]
  411baf:	(bad)  
  411bb0:	loopne 0x411ba7
  411bb2:	ja     0x411b44
  411bb4:	jmp    0x411bac
  411bb6:	bound  eax,QWORD PTR [ecx-0x78]
  411bb9:	dec    edi
  411bba:	imul   ebp,DWORD PTR [edx],0xffffffae
  411bbd:	ins    BYTE PTR es:[edi],dx
  411bbe:	mov    DWORD PTR [edi],esi
  411bc0:	mov    gs,WORD PTR [eax]
  411bc2:	pop    ecx
  411bc3:	push   es
  411bc4:	test   eax,0x615f701
  411bc9:	outs   dx,DWORD PTR ds:[esi]
  411bca:	fstp   QWORD PTR cs:[edx+0x5b7b97cc]
  411bd1:	add    eax,0x97f7578a
  411bd6:	int3   
  411bd7:	aas    
  411bd8:	mov    al,ds:0x2c951c1e
  411bdd:	push   0x63
  411bdf:	rol    bl,1
  411be1:	pusha  
  411be2:	mov    cl,0x1d
  411be4:	adc    BYTE PTR [esi],dh
  411be6:	lock xchg DWORD PTR [ebx],ecx
  411be9:	imul   ecx,ebp,0x54
  411bec:	xor    al,0x7f
  411bee:	add    edi,DWORD PTR [edi+0x28]
  411bf1:	rcl    DWORD PTR [edx+0x69f64971],cl
  411bf7:	xchg   edi,eax
  411bf8:	loopne 0x411be5
  411bfa:	test   al,ch
  411bfc:	mov    WORD PTR [esi],ds
  411bfe:	xchg   ebx,eax
  411bff:	stc    
  411c00:	cmp    BYTE PTR [esi-0x493ec185],bl
  411c06:	xchg   BYTE PTR [ecx-0x5e909158],dl
  411c0c:	cld    
  411c0d:	pop    eax
  411c0e:	mov    bl,0xf
  411c10:	add    al,BYTE PTR [ebx-0x21140c64]
  411c16:	mov    dl,0xd6
  411c18:	mov    esi,0xc19b747e
  411c1d:	hlt    
  411c1e:	repnz sbb BYTE PTR [eax-0x4d],al
  411c22:	ss push eax
  411c24:	out    0x16,al
  411c26:	adc    edi,DWORD PTR [esi-0xa]
  411c29:	sbb    al,BYTE PTR [esi]
  411c2b:	sbb    BYTE PTR [ebp-0x33a3083c],ch
  411c31:	pop    eax
  411c32:	stc    
  411c33:	pop    esi
  411c34:	mov    dh,0x19
  411c36:	mul    DWORD PTR [eax-0x42a3cad]
  411c3c:	jl     0x411c09
  411c3e:	add    dl,ch
  411c40:	outs   dx,DWORD PTR ds:[esi]
  411c41:	and    al,0x5
  411c43:	and    DWORD PTR [eax],0xcf35f60a
  411c49:	fistp  QWORD PTR [edx-0x8]
  411c4c:	rcl    al,0xfa
  411c4f:	pop    eax
  411c50:	outs   dx,DWORD PTR ds:[esi]
  411c51:	in     eax,0xc1
  411c53:	(bad)  
  411c54:	cld    
  411c55:	in     eax,dx
  411c56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c57:	scas   al,BYTE PTR es:[edi]
  411c58:	pop    ecx
  411c59:	call   0xb811:0x97415700
  411c60:	xchg   esi,eax
  411c61:	dec    ecx
  411c62:	out    0x5e,al
  411c64:	out    dx,al
  411c65:	jnp    0x411cb8
  411c67:	test   DWORD PTR [esi+eax*4],ebp
  411c6a:	out    dx,eax
  411c6b:	retf   0x164a
  411c6e:	cdq    
  411c6f:	jge    0x411c31
  411c71:	les    eax,FWORD PTR [esi]
  411c73:	inc    eax
  411c74:	cwde   
  411c75:	fdiv   QWORD PTR [edx+0x4]
  411c78:	into   
  411c79:	sub    eax,0xb99ebaf5
  411c7e:	adc    DWORD PTR [ebp+0xf],eax
  411c81:	imul   esi,esi,0xcf9761f0
  411c87:	(bad)  
  411c88:	pop    ebp
  411c89:	addr16 pop ss
  411c8b:	xor    esi,DWORD PTR [edi]
  411c8d:	add    BYTE PTR [edx],bh
  411c8f:	retf   0x8ff9
  411c92:	dec    eax
  411c93:	mov    ah,0xf
  411c95:	lahf   
  411c96:	or     dl,BYTE PTR [eax-0x12e9e4ad]
  411c9c:	add    eax,DWORD PTR [ebx+0x7c]
  411c9f:	cmp    BYTE PTR [edi+0x3a7fb221],bl
  411ca5:	retf   0x9518
  411ca8:	add    al,0xf9
  411caa:	aam    0x9c
  411cac:	ret    
  411cad:	fsubrp st(5),st
  411caf:	aas    
  411cb0:	into   
  411cb1:	push   es
  411cb2:	xor    ebp,DWORD PTR [eax-0x6f]
  411cb5:	add    bl,0xe1
  411cb8:	(bad)  
  411cb9:	mov    bh,0x4b
  411cbb:	lahf   
  411cbc:	adc    eax,DWORD PTR [esi+0x5d]
  411cbf:	mov    dl,0x5d
  411cc1:	jne    0x411d37
  411cc3:	test   DWORD PTR [ecx],esp
  411cc5:	jmp    0x5515:0xdeae18ec
  411ccc:	mov    al,ds:0xc8a06363
  411cd1:	pop    ebp
  411cd2:	repz mov ch,0x7f
  411cd5:	sbb    eax,0x107da437
  411cda:	sbb    DWORD PTR [edx-0x53e51917],0xffffffdb
  411ce1:	aas    
  411ce2:	cld    
  411ce3:	repz sub eax,0x821d2e0f
  411ce9:	mov    esi,0x294c0dab
  411cee:	pushf  
  411cef:	cli    
  411cf0:	sbb    ebp,0x36
  411cf3:	dec    esi
  411cf4:	lea    ebp,[esi+0x2c]
  411cf7:	sub    dh,BYTE PTR ds:0x75519ef8
  411cfd:	push   ds
  411cfe:	hlt    
  411cff:	adc    cl,dl
  411d01:	cwde   
  411d02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d03:	mov    edi,0x35945e69
  411d08:	mov    al,ds:0x8e799cf0
  411d0d:	test   eax,0xfceb74b3
  411d12:	outs   dx,DWORD PTR ds:[esi]
  411d13:	out    0x82,al
  411d15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d16:	cmp    eax,0x7e543051
  411d1b:	jno    0x411cc8
  411d1d:	fnstenv [ebp+0x390a8adb]
  411d23:	pusha  
  411d24:	les    ecx,FWORD PTR [ebp-0x4a9aaed4]
  411d2a:	cdq    
  411d2b:	pop    ecx
  411d2c:	and    BYTE PTR [ebx-0x20dae69c],cl
  411d32:	cmp    DWORD PTR [ebp-0x6a],ebp
  411d35:	xchg   ebx,eax
  411d36:	mov    esp,0x3bff9e7d
  411d3b:	pop    edi
  411d3c:	(bad)  
  411d3d:	xor    al,0xf5
  411d3f:	adc    al,0x79
  411d41:	je     0x411d20
  411d43:	(bad)  
  411d44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d45:	push   edx
  411d46:	rcl    BYTE PTR [ecx-0x4f],0x85
  411d4a:	cmc    
  411d4b:	jmp    0xa751:0xf25505eb
  411d52:	jo     0x411da8
  411d54:	imul   ebx,DWORD PTR [ebx+0x3ce62129],0x6bc635f6
  411d5e:	std    
  411d5f:	adc    ebx,DWORD PTR [esi]
  411d61:	mov    ch,0x3f
  411d63:	pop    eax
  411d64:	cmp    DWORD PTR [esi],esp
  411d66:	sub    al,0x67
  411d68:	dec    ebx
  411d69:	dec    edi
  411d6a:	add    ebp,DWORD PTR [ebp-0x42]
  411d6d:	or     al,BYTE PTR [edi]
  411d6f:	(bad)  
  411d70:	push   ds
  411d71:	loopne 0x411d15
  411d73:	jmp    0xf679b617
  411d78:	aad    0x8f
  411d7a:	xchg   edi,eax
  411d7b:	stos   DWORD PTR es:[edi],eax
  411d7c:	data16 xor al,0x5b
  411d7f:	xor    eax,0xeafdd03
  411d84:	retf   
  411d85:	dec    ebx
  411d86:	jge    0x411d10
  411d88:	fisttp DWORD PTR [ecx+0x1dcd6cd4]
  411d8e:	inc    ecx
  411d8f:	popa   
  411d90:	popf   
  411d91:	call   0x854e8821
  411d96:	inc    esp
  411d97:	push   0xffffffe8
  411d99:	aaa    
  411d9a:	push   ds
  411d9b:	adc    ah,0xd7
  411d9e:	cs sahf 
  411da0:	enter  0xce0c,0xce
  411da4:	pop    es
  411da5:	xchg   ebp,eax
  411da6:	xchg   esp,eax
  411da7:	mov    eax,0xea270b31
  411dac:	xor    esi,ecx
  411dae:	or     edx,DWORD PTR [edi+0x7d]
  411db1:	test   al,cl
  411db3:	cmc    
  411db4:	sub    ebx,0xffffffe4
  411db7:	xor    DWORD PTR [ecx-0x71],ecx
  411dba:	sbb    BYTE PTR [edi-0x58],bh
  411dbd:	push   edi
  411dbe:	jp     0x411d73
  411dc0:	push   ds
  411dc1:	and    BYTE PTR [edi],dh
  411dc3:	jle    0x411dcb
  411dc5:	ret    
  411dc6:	(bad)  
  411dc7:	cmp    DWORD PTR [edi-0x37],ebx
  411dca:	test   BYTE PTR [edx],0x24
  411dcd:	jg     0x411da3
  411dcf:	xchg   ebx,eax
  411dd0:	out    0x25,al
  411dd2:	icebp  
  411dd3:	fnclex 
  411dd5:	shl    DWORD PTR [ecx],1
  411dd7:	push   eax
  411dd8:	push   esp
  411dd9:	cmp    al,0x29
  411ddb:	pop    ebp
  411ddc:	sub    eax,0x8d4821ab
  411de1:	sub    al,0xfe
  411de3:	sbb    BYTE PTR [esi-0x3a],0x88
  411de7:	jp     0x411e5e
  411de9:	ss mov bh,0x8c
  411dec:	mov    ds:0xb5ee0506,al
  411df1:	jne    0x411e48
  411df3:	sub    BYTE PTR [esi+0x5f],0x21
  411df7:	mov    dh,0x34
  411df9:	repz test al,0x51
  411dfc:	cs popf 
  411dfe:	push   es
  411dff:	rcl    DWORD PTR [edx-0x28],cl
  411e02:	mov    eax,0xece17e3c
  411e07:	sub    ecx,ebx
  411e09:	adc    BYTE PTR [edx+0x22],cl
  411e0c:	pop    edx
  411e0d:	in     al,dx
  411e0e:	or     al,ch
  411e10:	test   eax,0x3dbdcb51
  411e15:	jo     0x411e23
  411e17:	cmp    bl,ch
  411e19:	out    dx,al
  411e1a:	ss es out 0xf4,al
  411e1e:	and    bh,BYTE PTR fs:[edi+0x2f]
  411e22:	icebp  
  411e23:	call   0xd29e476b
  411e28:	pop    ebp
  411e29:	xchg   edx,eax
  411e2a:	lahf   
  411e2b:	add    eax,0x9c7b22af
  411e30:	ins    DWORD PTR es:[edi],dx
  411e31:	pop    edx
  411e32:	adc    eax,ebp
  411e34:	or     BYTE PTR [ecx+0x5b3ec8b6],ah
  411e3a:	std    
  411e3b:	jecxz  0x411e32
  411e3d:	ficom  DWORD PTR [esi+0x26]
  411e40:	mov    ah,0x7a
  411e42:	push   0x5304910f
  411e47:	aam    0xae
  411e49:	aas    
  411e4a:	mov    bh,0x13
  411e4c:	sbb    DWORD PTR [ebx+esi*8-0x6dcd9849],0x745bd425
  411e57:	fwait
  411e58:	mov    eax,ds:0xc8ec751d
  411e5d:	(bad)  [ebp-0x10]
  411e60:	ror    DWORD PTR [edx+0x2435d1f2],0xb0
  411e67:	outs   dx,BYTE PTR ds:[esi]
  411e68:	jne    0x411e30
  411e6a:	adc    DWORD PTR [esi+0x11c2ba8d],edx
  411e70:	push   edx
  411e71:	aam    0xd5
  411e73:	out    dx,al
  411e74:	pop    es
  411e75:	dec    esi
  411e76:	arpl   WORD PTR [ebp-0x59e42c7b],cx
  411e7c:	xor    al,0xd8
  411e7e:	xchg   ecx,eax
  411e7f:	aas    
  411e80:	shl    DWORD PTR [eax],0x56
  411e83:	sub    BYTE PTR [ebp-0x71bd2391],dh
  411e89:	mov    cl,0x6e
  411e8b:	jp     0x411e38
  411e8d:	div    bl
  411e8f:	inc    edi
  411e90:	sub    BYTE PTR [ebp-0x3b91ae41],cl
  411e96:	aaa    
  411e97:	add    eax,0x5684238
  411e9c:	mov    eax,0x1c3d52db
  411ea1:	iret   
  411ea2:	push   0x4
  411ea4:	fwait
  411ea5:	sub    eax,0x87be7c44
  411eaa:	inc    ebx
  411eab:	imul   ebx,DWORD PTR [edi+0x11],0x21
  411eaf:	fnstcw WORD PTR [ecx+0x7f]
  411eb2:	dec    ecx
  411eb3:	sbb    al,0xe4
  411eb5:	or     esp,edi
  411eb7:	fld    DWORD PTR [edi-0x2f5cc6a2]
  411ebd:	test   edx,ebx
  411ebf:	int    0x99
  411ec1:	push   ecx
  411ec2:	jg     0x411eb9
  411ec4:	lea    esi,[edi+eiz*2-0x3f]
  411ec8:	mov    ebp,0xb8644969
  411ecd:	aam    0xf9
  411ecf:	mov    ds:0x4939e001,al
  411ed4:	xchg   BYTE PTR [eax],dl
  411ed6:	mov    bl,0xc6
  411ed8:	call   0x6aca5221
  411edd:	fld    QWORD PTR [ecx-0x5e]
  411ee0:	pusha  
  411ee1:	mov    dh,0xfc
  411ee3:	mov    bh,0xcd
  411ee5:	dec    edi
  411ee6:	mov    dl,0xe3
  411ee8:	popa   
  411ee9:	jmp    0x6310:0x11ce5cf6
  411ef0:	(bad)  
  411ef1:	mov    WORD PTR [ebx-0x21],cs
  411ef4:	data16 shr BYTE PTR [ecx+0x628205ed],cl
  411efb:	inc    ecx
  411efc:	or     edi,DWORD PTR [ebx-0x46af8597]
  411f02:	push   es
  411f03:	xchg   ebp,eax
  411f04:	neg    BYTE PTR [edx+ebx*4+0x74717411]
  411f0b:	leave  
  411f0c:	popa   
  411f0d:	jmp    0x60419ef9
  411f12:	inc    ebx
  411f13:	mov    ebx,0x82c3c848
  411f18:	cmp    ah,bh
  411f1a:	and    eax,ecx
  411f1c:	(bad)  
  411f1d:	ret    0x4a0
  411f20:	or     BYTE PTR [edx+0x39],al
  411f23:	loope  0x411eea
  411f25:	std    
  411f26:	mov    ebp,0x46fe756d
  411f2b:	xor    ecx,DWORD PTR [edx]
  411f2d:	adc    al,0x91
  411f2f:	rcr    ecx,1
  411f31:	xchg   esp,eax
  411f32:	sbb    ecx,DWORD PTR [ecx-0x1e]
  411f35:	dec    esi
  411f36:	mov    ecx,0xe4841608
  411f3b:	lock xchg ebx,eax
  411f3d:	mov    edx,0xe663199b
  411f42:	(bad)  
  411f43:	(bad)  
  411f44:	sbb    BYTE PTR [edx-0x1eca4e4a],ch
  411f4a:	sbb    DWORD PTR ds:0xee444302,ebp
  411f50:	das    
  411f51:	cmp    al,0x9b
  411f53:	out    0xbf,eax
  411f55:	adc    DWORD PTR [eax-0x630dd3b4],ebx
  411f5b:	hlt    
  411f5c:	pop    ebx
  411f5d:	addr16 xchg esp,eax
  411f5f:	jle    0x411eee
  411f61:	pop    es
  411f62:	sub    edi,ecx
  411f64:	xchg   ebx,eax
  411f65:	out    dx,al
  411f66:	inc    edx
  411f67:	inc    esi
  411f68:	popa   
  411f69:	repnz (bad) 
  411f6b:	adc    DWORD PTR [eax],ecx
  411f6d:	pop    edx
  411f6e:	jl     0x411fb6
  411f70:	aaa    
  411f71:	retf   0xf041
  411f74:	sbb    eax,0x23c67c02
  411f79:	mov    ds:0x52b82060,eax
  411f7e:	jecxz  0x411f42
  411f80:	cdq    
  411f81:	xchg   edi,eax
  411f82:	test   al,0x71
  411f84:	mov    BYTE PTR [edi-0x2cd98334],bh
  411f8a:	dec    ebp
  411f8b:	adc    eax,0xb0ce7ae4
  411f90:	mov    bl,0x12
  411f92:	or     eax,0xe5529012
  411f97:	lods   eax,DWORD PTR ds:[esi]
  411f98:	cmp    ebp,edi
  411f9a:	je     0x411f68
  411f9c:	dec    edx
  411f9d:	or     bl,BYTE PTR [ecx-0x3c]
  411fa0:	cmp    eax,DWORD PTR [esi+0x51a7cacf]
  411fa6:	(bad)  [eax-0x56]
  411fa9:	not    BYTE PTR [ebp-0x4]
  411fac:	adc    dl,al
  411fae:	lock xchg edi,eax
  411fb0:	fdivr  DWORD PTR [ebx+0x64]
  411fb3:	cdq    
  411fb4:	std    
  411fb5:	or     BYTE PTR [ebp+eax*4-0x32],al
  411fb9:	retf   0xc9df
  411fbc:	jbe    0x411fbb
  411fbe:	and    DWORD PTR [ecx],esi
  411fc0:	repnz aam 0x6b
  411fc3:	inc    eax
  411fc4:	mov    dl,0x52
  411fc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fc7:	out    0xcf,al
  411fc9:	outs   dx,BYTE PTR ds:[esi]
  411fca:	inc    esi
  411fcb:	and    edx,edi
  411fcd:	outs   dx,DWORD PTR ds:[esi]
  411fce:	sub    al,0x1e
  411fd0:	push   es
  411fd1:	mov    dl,0x98
  411fd3:	pop    eax
  411fd4:	and    DWORD PTR [ebx+eax*2+0x566379a9],0xffffffeb
  411fdc:	(bad)  
  411fdd:	sbb    eax,0xb9caec00
  411fe2:	lods   al,BYTE PTR ds:[esi]
  411fe3:	rcpps  xmm5,xmm1
  411fe6:	inc    edi
  411fe7:	adc    BYTE PTR [ebp+eiz*2-0x250ff651],al
  411fee:	mov    eax,0x6679f56e
  411ff3:	pusha  
  411ff4:	sub    eax,0x1dfc8b31
  411ff9:	ins    BYTE PTR es:[edi],dx
  411ffa:	ds push ds
  411ffc:	add    bh,BYTE PTR [ebp-0x5c]
  411fff:	xor    cl,BYTE PTR [edx+0x3f]
  412002:	ret    0x8ed6
  412005:	lahf   
  412006:	lds    esi,FWORD PTR [ebx+0x67be7e9a]
  41200c:	out    dx,al
  41200d:	mov    esp,0xc496d11
  412012:	mov    ch,0x4e
  412014:	pusha  
  412015:	inc    edx
  412016:	fcmovne st,st(3)
  412018:	js     0x411fa4
  41201a:	je     0x41206c
  41201c:	xchg   esp,eax
  41201d:	repnz fcom st(3)
  412020:	inc    ecx
  412021:	xchg   BYTE PTR [esi+0x5e],al
  412024:	jbe    0x411fa8
  412026:	dec    edx
  412027:	xor    eax,0x3d4011c9
  41202c:	mov    edx,0xe33d6900
  412031:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412032:	mov    eax,?
  412034:	rcl    BYTE PTR [edi+0x7c9f5d25],cl
  41203a:	dec    esp
  41203b:	shl    DWORD PTR [esi],1
  41203d:	dec    eax
  41203e:	inc    edx
  41203f:	pop    edx
  412040:	pushf  
  412041:	dec    esi
  412042:	sub    BYTE PTR [ecx-0x76],dh
  412045:	jae    0x411fdf
  412047:	push   ecx
  412048:	dec    ebp
  412049:	sti    
  41204a:	add    al,0x98
  41204c:	xor    al,0x7f
  41204e:	jno    0x411fd5
  412050:	adc    edx,eax
  412052:	and    BYTE PTR [esi-0x9],0x39
  412056:	xor    al,0xf5
  412058:	sti    
  412059:	out    dx,al
  41205a:	cmp    dh,BYTE PTR cs:[eax+0x79]
  41205e:	inc    edi
  41205f:	xchg   edi,eax
  412060:	mov    eax,0xa0cc362a
  412065:	sbb    DWORD PTR [edi],ebp
  412067:	popf   
  412068:	cs xor ebp,esi
  41206b:	sub    eax,0xda397c17
  412070:	loope  0x4120b8
  412072:	fidivr DWORD PTR [ecx-0xe]
  412075:	inc    esp
  412076:	xor    BYTE PTR ds:0x26383458,ch
  41207c:	push   ss
  41207d:	or     DWORD PTR ds:0xd128e32e,esi
  412083:	test   BYTE PTR ds:0xb123853b,ch
  412089:	cmp    DWORD PTR ds:0x9d5ac61f,0x7d3af9f4
  412093:	cmp    eax,0x9a1e751e
  412098:	or     eax,0xa035cdd1
  41209d:	cli    
  41209e:	cs pop edi
  4120a0:	inc    ebx
  4120a1:	mov    BYTE PTR [ebp+0x46dc6636],0xf1
  4120a8:	xor    eax,0xb4db0e2e
  4120ad:	mov    al,0xfb
  4120af:	cmp    BYTE PTR [eax],bh
  4120b1:	shr    ecx,1
  4120b3:	jmp    0x41203d
  4120b5:	addr16 sub al,0x3
  4120b8:	cmp    edi,esi
  4120ba:	fcmovnu st,st(2)
  4120bc:	xor    BYTE PTR [esi+0x29],dh
  4120bf:	inc    ebx
  4120c0:	retf   0x6b67
  4120c3:	or     eax,0x432624c1
  4120c8:	push   ds
  4120c9:	stc    
  4120ca:	nop
  4120cb:	sahf   
  4120cc:	dec    ebp
  4120cd:	mov    esp,0xb83de3a9
  4120d2:	xchg   edi,eax
  4120d3:	ret    0xaa52
  4120d6:	stc    
  4120d7:	mov    ecx,0xf4ce48ec
  4120dc:	call   0x62de76ad
  4120e1:	jns    0x41210f
  4120e3:	inc    DWORD PTR [ecx-0x12a3a152]
  4120e9:	mov    cl,0x9
  4120eb:	out    0x27,eax
  4120ed:	(bad)  
  4120ee:	stc    
  4120ef:	pusha  
  4120f0:	or     eax,0x5f1d3014
  4120f5:	jmp    0x597619a4
  4120fa:	test   ebx,edx
  4120fc:	shl    DWORD PTR [eax-0x5430febf],0xdc
  412103:	and    WORD PTR [esi+0x2],0xffe3
  412108:	fidiv  WORD PTR [edi+0x65]
  41210b:	mov    esp,0x41f7c00
  412110:	mov    ah,0xec
  412112:	pop    ss
  412113:	outs   dx,DWORD PTR ds:[esi]
  412114:	mov    bl,0x90
  412116:	retf   
  412117:	aaa    
  412118:	mov    ecx,0x27c5100f
  41211d:	xor    al,0xe9
  41211f:	test   ah,0xfd
  412122:	cmp    dh,BYTE PTR [ebp-0x2e]
  412125:	jmp    0xf1571a2d
  41212a:	mov    ch,0x3d
  41212c:	fisub  DWORD PTR [eax]
  41212e:	ror    esi,1
  412130:	ins    DWORD PTR es:[edi],dx
  412131:	imul   ebp,DWORD PTR [esi-0x2b],0x56
  412135:	retf   
  412136:	adc    ecx,ebp
  412138:	les    eax,FWORD PTR [ebp-0x6d6c0d0a]
  41213e:	pop    ebp
  41213f:	sbb    BYTE PTR [esi-0x3],bh
  412142:	jle    0x4120d1
  412144:	xchg   DWORD PTR [ebp+0x6aab9b8e],ecx
  41214a:	mov    esp,0xd2142bd7
  41214f:	mov    ebx,0x46477259
  412154:	xchg   ebp,eax
  412155:	inc    ecx
  412156:	mov    al,0x4b
  412158:	clc    
  412159:	inc    edi
  41215a:	mov    esi,0x8dcb3189
  41215f:	adc    ch,BYTE PTR [edi-0x12f5f10a]
  412165:	jmp    0x447f6382
  41216a:	or     eax,0xf6573448
  41216f:	nop    DWORD PTR [esi+0x44]
  412173:	pmaxsw mm6,QWORD PTR [esi+0x1f0f1deb]
  41217a:	in     eax,dx
  41217b:	js     0x4121ad
  41217d:	cmp    al,0xdc
  41217f:	fwait
  412180:	pusha  
  412181:	cdq    
  412182:	push   cs
  412183:	adc    DWORD PTR [ebp+0x38],0xffffffab
  412187:	enter  0xb0b2,0x65
  41218b:	test   DWORD PTR [edx+0x583417b6],ebp
  412191:	les    esp,FWORD PTR [ebp+edi*2-0x32]
  412195:	mov    WORD PTR [edx+0x4f7b913],ds
  41219b:	adc    dl,bh
  41219d:	sbb    DWORD PTR [esi],edi
  41219f:	fistp  WORD PTR [esi+0x79]
  4121a2:	jbe    0x412156
  4121a4:	and    BYTE PTR [esi-0x3bb2bb8],cl
  4121aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121ab:	lock js 0x412182
  4121ae:	lods   al,BYTE PTR ds:[esi]
  4121af:	mov    ch,0xee
  4121b1:	out    0x46,al
  4121b3:	inc    edx
  4121b4:	inc    ebx
  4121b5:	jnp    0x4121b9
  4121b7:	dec    BYTE PTR [edx-0x60]
  4121ba:	jae    0x412225
  4121bc:	lahf   
  4121bd:	sbb    BYTE PTR [ebx+ecx*2-0x2a976b13],al
  4121c4:	ja     0x41222c
  4121c6:	push   edx
  4121c7:	lods   al,BYTE PTR ds:[esi]
  4121c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121c9:	out    0xda,al
  4121cb:	xchg   edi,eax
  4121cc:	or     eax,0xc2843d26
  4121d1:	inc    esp
  4121d2:	hlt    
  4121d3:	and    eax,0xe015d28e
  4121d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121d9:	loope  0x4121e7
  4121db:	mov    bl,0xf5
  4121dd:	ret    
  4121de:	scas   al,BYTE PTR es:[edi]
  4121df:	push   ebx
  4121e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121e1:	dec    ebx
  4121e2:	nop
  4121e3:	mov    ecx,ecx
  4121e5:	arpl   WORD PTR [ecx],dx
  4121e7:	xchg   esp,eax
  4121e8:	push   cs
  4121e9:	lea    edx,[edx]
  4121eb:	out    dx,eax
  4121ec:	mov    BYTE PTR [ebx+ebx*8+0xc4448ba],bh
  4121f3:	(bad)  
  4121f5:	cmc    
  4121f6:	cld    
  4121f7:	in     al,0xd7
  4121f9:	mov    bh,0x55
  4121fb:	mov    edi,0xdabf0965
  412200:	inc    esp
  412201:	shr    DWORD PTR [ebx-0x7935fae1],0xd8
  412208:	test   BYTE PTR [eax+0x2b],al
  41220b:	mov    ah,0xa9
  41220d:	cmp    ebx,ebp
  41220f:	test   DWORD PTR [edx+edi*1-0x7a],eax
  412213:	mov    ebp,edx
  412215:	scas   al,BYTE PTR es:[edi]
  412216:	inc    ebx
  412217:	or     DWORD PTR [ecx+0x56],0x9751fa13
  41221e:	jo     0x41228b
  412220:	xor    BYTE PTR [ebx],ah
  412222:	rol    BYTE PTR ds:0xcbfee631,1
  412228:	pop    edx
  412229:	ins    BYTE PTR es:[edi],dx
  41222a:	out    0x6a,al
  41222c:	pop    edi
  41222d:	jg     0x412208
  41222f:	sub    al,0x1
  412231:	xchg   esp,eax
  412232:	iret   
  412233:	call   0xd6cb:0xb4d8bc87
  41223a:	pop    esp
  41223b:	pop    edi
  41223c:	aam    0xb2
  41223e:	out    0x78,al
  412240:	daa    
  412241:	pushf  
  412242:	mov    cl,0x73
  412244:	pop    esp
  412245:	(bad)  
  412246:	std    
  412247:	ins    BYTE PTR es:[edi],dx
  412248:	js     0x412297
  41224a:	sub    ebp,DWORD PTR [esi]
  41224c:	dec    esi
  41224d:	push   eax
  41224e:	mov    ebx,0xd449c510
  412253:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412254:	xor    edi,eax
  412256:	pop    ebx
  412257:	sbb    esi,edi
  412259:	push   edi
  41225a:	addr16 dec ebx
  41225d:	push   ds
  41225e:	int3   
  41225f:	push   0x6b2c5dba
  412264:	ins    BYTE PTR es:[edi],dx
  412265:	stos   BYTE PTR es:[edi],al
  412266:	mov    bh,0x2a
  412268:	out    dx,al
  412269:	pop    ebp
  41226a:	rcl    BYTE PTR [edx],cl
  41226c:	xchg   esi,eax
  41226d:	cs mov bl,0xfa
  412270:	cmp    DWORD PTR [esp+eax*8],ebp
  412273:	cmc    
  412274:	dec    edi
  412275:	jmp    0x9f60:0x70e983c5
  41227c:	dec    edx
  41227d:	mov    ebx,0xc4b5c42c
  412282:	mov    ecx,0x1ad7e4e0
  412287:	pop    edx
  412288:	dec    edx
  412289:	lds    esp,FWORD PTR [edi-0x639ad0]
  41228f:	jne    0x4122cc
  412291:	lods   eax,DWORD PTR ds:[esi]
  412292:	adc    al,0x25
  412294:	inc    BYTE PTR [ebx-0x770987ee]
  41229a:	rol    DWORD PTR [edi-0x2172e3cc],cl
  4122a0:	inc    ebp
  4122a1:	outs   dx,DWORD PTR ds:[esi]
  4122a2:	sbb    al,0x3c
  4122a4:	mul    eax
  4122a6:	jmp    0xa7dc:0xcc83f9d4
  4122ad:	rcl    al,1
  4122af:	pop    ebx
  4122b0:	push   edi
  4122b1:	inc    edi
  4122b2:	mov    edx,DWORD PTR [ebx+0x22]
  4122b5:	xchg   BYTE PTR [esi+0x5164e4f4],ch
  4122bb:	cmovno esp,DWORD PTR [ebp+0x1ca104c1]
  4122c2:	jmp    0xa8541762
  4122c7:	push   ebp
  4122c8:	daa    
  4122c9:	xor    cl,BYTE PTR fs:[esi]
  4122cc:	scas   al,BYTE PTR es:[edi]
  4122cd:	(bad)  
  4122ce:	or     al,0x92
  4122d0:	fs in  eax,0xf1
  4122d3:	pop    ebx
  4122d4:	dec    ebp
  4122d5:	and    BYTE PTR [ebx+0x1fa0e2ca],bl
  4122db:	push   0xb751645d
  4122e0:	push   0x92a2ace1
  4122e5:	fcom   QWORD PTR ds:0x13fc49fd
  4122eb:	ss dec ecx
  4122ed:	or     BYTE PTR [edx-0x7ac51a66],ch
  4122f3:	jl     0x41228c
  4122f5:	and    al,0x6f
  4122f7:	mov    cl,0x6d
  4122f9:	test   BYTE PTR [edx+0x3f870029],bh
  4122ff:	cmc    
  412300:	push   ebp
  412301:	jge    0x41230a
  412303:	sti    
  412304:	test   eax,0x87cbcd6a
  412309:	les    ebx,FWORD PTR [esi-0x2e]
  41230c:	lods   al,BYTE PTR ds:[esi]
  41230d:	or     al,BYTE PTR [ebx+0x12]
  412310:	in     eax,0xa4
  412312:	sbb    eax,0x9f089d48
  412317:	scas   eax,DWORD PTR es:[edi]
  412318:	push   ds
  412319:	rcl    BYTE PTR [ebp-0x6e],1
  41231c:	cs cld 
  41231e:	cld    
  41231f:	jno    0x412384
  412321:	inc    edx
  412322:	pusha  
  412323:	pusha  
  412324:	into   
  412325:	jbe    0x412382
  412327:	dec    ecx
  412328:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412329:	or     bl,BYTE PTR [esi]
  41232b:	mov    ah,0xd9
  41232d:	gs gs jl 0x412358
  412331:	int    0x71
  412333:	and    ah,cl
  412335:	mov    ebp,0xac1345
  41233a:	jb     0x4122bf
  41233c:	mov    ecx,0xd69bfcbf
  412341:	push   0x3f
  412343:	je     0x4123ba
  412345:	inc    ecx
  412346:	and    DWORD PTR [ebp-0x776db5da],ecx
  41234c:	fcom   QWORD PTR [ebx]
  41234e:	pop    esp
  41234f:	out    dx,eax
  412350:	sahf   
  412351:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412352:	shl    BYTE PTR [ebx+0x705ef48a],1
  412358:	sub    eax,0xb4a1753b
  41235d:	addr16 ret 
  41235f:	into   
  412360:	jmp    0x4122e9
  412362:	out    0x3,al
  412364:	cwde   
  412365:	out    0xc1,eax
  412367:	push   edx
  412368:	or     al,0x62
  41236a:	dec    ebx
  41236b:	outs   dx,BYTE PTR ds:[esi]
  41236c:	and    eax,0xffd56a7b
  412371:	repnz or esi,DWORD PTR [eax]
  412374:	and    al,0x6a
  412376:	ins    DWORD PTR es:[edi],dx
  412377:	lods   al,BYTE PTR ds:[esi]
  412378:	ficomp WORD PTR [esi+0x77]
  41237b:	mov    esi,0x3b543482
  412380:	pop    eax
  412381:	bound  ebx,QWORD PTR ds:0xf0754e1
  412387:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412388:	loop   0x4123de
  41238a:	or     DWORD PTR [edi+0x6c],0x61
  41238e:	sub    edx,esi
  412390:	adc    ah,BYTE PTR [ecx]
  412392:	stos   BYTE PTR es:[edi],al
  412393:	and    BYTE PTR [edx+edx*1],ch
  412396:	test   BYTE PTR [ebp+0x26],dl
  412399:	lods   eax,DWORD PTR ds:[esi]
  41239a:	mov    ecx,0xfa57e053
  41239f:	jb     0x4123e7
  4123a1:	js     0x412403
  4123a3:	xchg   esi,eax
  4123a4:	out    0x90,al
  4123a6:	stos   DWORD PTR es:[edi],eax
  4123a7:	call   0xeaa8:0xa82f33bc
  4123ae:	mov    al,ds:0xce12624a
  4123b3:	lock cwde 
  4123b5:	and    al,BYTE PTR [eax-0x54]
  4123b8:	icebp  
  4123b9:	jmp    0x975a9c35
  4123be:	pop    edx
  4123bf:	xchg   BYTE PTR [edi],bl
  4123c1:	jne    0x41242c
  4123c3:	and    ebx,DWORD PTR [edi-0x4f92f2ea]
  4123c9:	retf   0x9af5
  4123cc:	clc    
  4123cd:	add    edi,0x74
  4123d0:	out    0xe1,al
  4123d2:	jl     0x412409
  4123d4:	fs retf 0xeac
  4123d8:	repnz pusha 
  4123da:	cmp    ebx,DWORD PTR [ebx]
  4123dc:	mov    eax,0x12c71f16
  4123e1:	mov    dl,0x9c
  4123e3:	or     dh,bl
  4123e5:	popf   
  4123e6:	nop
  4123e7:	mov    cs,WORD PTR [edi-0x51dc3592]
  4123ed:	repz inc ebx
  4123ef:	add    BYTE PTR [edx+0xbc3478],ah
  4123f5:	repnz into 
  4123f7:	cmp    dl,ch
  4123f9:	push   edi
  4123fa:	aad    0x93
  4123fc:	enter  0xcb55,0x7f
  412400:	xchg   ebp,eax
  412401:	jne    0x41244c
  412403:	fs mov edx,0x475f1e26
  412409:	jp     0x4123c0
  41240b:	aam    0xd2
  41240d:	mov    esp,0xd5fbb848
  412412:	sub    al,0xdc
  412414:	pop    esi
  412415:	bound  eax,QWORD PTR [edi+0x3a9603fc]
  41241b:	loop   0x4123c9
  41241d:	mov    bl,0xf1
  41241f:	mov    al,0x50
  412421:	sahf   
  412422:	jecxz  0x4123de
  412424:	and    esp,DWORD PTR [edi+0x78]
  412427:	inc    edx
  412428:	and    al,0xf4
  41242a:	push   ebx
  41242b:	mov    eax,esi
  41242d:	fisubr WORD PTR [eax+0x5e]
  412430:	cli    
  412431:	in     al,0x35
  412433:	mov    ch,0x6e
  412435:	outs   dx,BYTE PTR ds:[esi]
  412436:	(bad)  
  412437:	(bad)  
  412438:	(bad)
  41243c:	scas   eax,DWORD PTR es:[edi]
  41243d:	mov    bh,0x2c
  41243f:	ror    BYTE PTR [eax+0x8479085],0x72
  412446:	inc    ebx
  412447:	cwde   
  412448:	ja     0x4124bc
  41244a:	push   ebx
  41244b:	or     BYTE PTR [ecx-0x52d9e1ec],0xe
  412452:	out    0xb1,eax
  412454:	jge    0x4124a8
  412456:	jmp    0xc2f2d341
  41245b:	add    dl,BYTE PTR [edx-0x4]
  41245e:	and    bl,bh
  412460:	sbb    BYTE PTR [eax],bl
  412462:	mov    ecx,0xeeeea93c
  412467:	neg    BYTE PTR [ecx-0x336e556]
  41246d:	(bad)  
  41246e:	jp     0x412468
  412470:	add    DWORD PTR gs:[ebx+0xd],esi
  412474:	ja     0x412469
  412476:	add    bl,cl
  412478:	jle    0x41240c
  41247a:	pop    ecx
  41247b:	xchg   ecx,eax
  41247c:	adc    eax,0x7c56098f
  412481:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412482:	push   cs
  412483:	sbb    al,0x88
  412485:	adc    BYTE PTR [edx],al
  412487:	and    bh,0xee
  41248a:	in     al,0x97
  41248c:	fsub   QWORD PTR [ebx-0x4bb61ef5]
  412492:	add    bl,BYTE PTR [ebx]
  412494:	inc    edx
  412495:	xchg   edi,eax
  412496:	into   
  412497:	dec    eax
  412498:	je     0x412515
  41249a:	(bad)  
  41249b:	addr16 pop ebp
  41249d:	push   0x9dca382a
  4124a2:	ja     0x4124b0
  4124a4:	(bad)  
  4124a5:	ror    BYTE PTR [eax],cl
  4124a7:	imul   esi,edi,0x1
  4124aa:	shl    DWORD PTR [ebx-0x5a],1
  4124ad:	push   ss
  4124ae:	push   ss
  4124af:	inc    ebp
  4124b0:	push   ss
  4124b1:	retf   0x7c78
  4124b4:	out    dx,eax
  4124b5:	mov    edx,0x818cecbe
  4124ba:	jge    0x4124a3
  4124bc:	mov    bl,0x2
  4124be:	arpl   WORD PTR [eax],ax
  4124c0:	mov    esp,0x34bd4555
  4124c5:	call   DWORD PTR [ebx+eiz*1+0xb]
  4124c9:	jnp    0x412525
  4124cb:	sub    BYTE PTR [edx-0x79e35e4f],ch
  4124d1:	int    0xbc
  4124d3:	jecxz  0x412477
  4124d5:	gs or  ebp,edx
  4124d8:	test   BYTE PTR [ecx-0x2d],al
  4124db:	fistp  WORD PTR [ebp+0x59092277]
  4124e1:	pushf  
  4124e2:	jecxz  0x4124e5
  4124e4:	mov    ds:0x1a732084,al
  4124e9:	and    BYTE PTR ss:[eax],cl
  4124ec:	das    
  4124ed:	dec    eax
  4124ee:	dec    eax
  4124ef:	or     ch,bl
  4124f1:	jae    0x41255c
  4124f3:	or     DWORD PTR [eax+esi*4],ecx
  4124f6:	ins    BYTE PTR es:[edi],dx
  4124f7:	mov    WORD PTR [esi-0x54],?
  4124fa:	push   0x5b745b7e
  4124ff:	cwde   
  412500:	stos   DWORD PTR es:[edi],eax
  412501:	xchg   esi,eax
  412502:	stos   DWORD PTR es:[edi],eax
  412503:	out    dx,eax
  412504:	ins    DWORD PTR es:[edi],dx
  412505:	push   esi
  412506:	xor    BYTE PTR [edx-0x7a],bl
  412509:	mov    dl,0x67
  41250b:	int    0xf1
  41250d:	jp     0x412581
  41250f:	add    ebx,DWORD PTR [ebp-0x51e7fab1]
  412515:	(bad)  
  412516:	adc    DWORD PTR [ebx-0x2519ff7b],edi
  41251c:	sbb    ecx,DWORD PTR gs:[ebx+0x5d]
  412520:	das    
  412521:	inc    ebx
  412522:	ret    
  412523:	and    dh,bl
  412525:	dec    edx
  412526:	ja     0x41254c
  412528:	mov    bl,BYTE PTR [esp+ebp*1-0x63]
  41252c:	pop    DWORD PTR [ecx]
  41252e:	pop    edi
  41252f:	xchg   ebx,eax
  412530:	xchg   esi,eax
  412531:	xlat   BYTE PTR ds:[ebx]
  412532:	mov    ecx,0x70c65aee
  412537:	and    DWORD PTR fs:[eax-0x7ebfee1],ecx
  41253e:	gs push 0xbe91b319
  412544:	add    ebp,DWORD PTR [esi+esi*8+0x675b1eb9]
  41254b:	gs loope 0x41250c
  41254e:	mov    bl,0xf9
  412550:	xchg   esp,eax
  412551:	inc    ebx
  412552:	cld    
  412553:	arpl   WORD PTR [eax+0x30],bp
  412556:	and    eax,0x9894dc7c
  41255b:	loop   0x4124ea
  41255d:	scas   ax,WORD PTR es:[edi]
  41255f:	xchg   BYTE PTR [edi],dl
  412561:	push   ds
  412562:	adc    esi,DWORD PTR ds:0xe324e37b
  412568:	div    DWORD PTR [ebx-0x50533840]
  41256e:	sbb    DWORD PTR [ebx-0x24],esp
  412571:	(bad)  [ecx+edx*1+0x2]
  412575:	push   ecx
  412576:	fdivp  st(2),st
  412578:	aas    
  412579:	xchg   edi,eax
  41257a:	imul   ebx
  41257c:	cmp    bl,BYTE PTR [ebp+edi*1-0x7]
  412580:	popf   
  412581:	add    al,BYTE PTR [edx-0x1e85b581]
  412587:	and    DWORD PTR [ebx+0x1c3cc1e4],ebx
  41258d:	je     0x4125a0
  41258f:	fidivr WORD PTR [esi]
  412591:	push   edx
  412592:	pop    es
  412593:	mov    ebx,0xde305013
  412598:	push   esp
  412599:	mov    ah,0xd2
  41259b:	jmp    0x4125de
  41259d:	mov    edi,db0
  4125a0:	inc    ecx
  4125a1:	adc    esi,DWORD PTR [eax-0x1730df5d]
  4125a7:	ins    BYTE PTR es:[edi],dx
  4125a8:	jb     0x4125c6
  4125aa:	add    BYTE PTR [esi-0x35],cl
  4125ad:	xlat   BYTE PTR ds:[ebx]
  4125ae:	xor    DWORD PTR [ecx],esp
  4125b0:	fs mov bh,0x88
  4125b3:	and    DWORD PTR [esi-0x6f],ebx
  4125b6:	mov    cl,BYTE PTR [eax]
  4125b8:	cdq    
  4125b9:	mov    ds:0x7ff698de,eax
  4125be:	imul   edi,DWORD PTR [ecx+0x1b794368],0xa7d91469
  4125c8:	repnz mov BYTE PTR [ebx+0x3d9f4e4f],dl
  4125cf:	push   ebx
  4125d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125d1:	pop    ebx
  4125d2:	adc    esp,edi
  4125d4:	dec    edi
  4125d5:	jo     0x41264d
  4125d7:	mov    edi,esi
  4125d9:	sub    al,0x68
  4125db:	or     eax,0x7a8f0ee0
  4125e0:	jmp    0x4125e5
  4125e2:	pop    edx
  4125e3:	push   edx
  4125e4:	cwde   
  4125e5:	es cmp cl,0x99
  4125e9:	or     eax,0xdbb5dbb8
  4125ee:	jae    0x4125c5
  4125f0:	shr    DWORD PTR ds:0xc6a2d088,1
  4125f6:	sbb    BYTE PTR [esi-0x6f503a8d],al
  4125fc:	adc    BYTE PTR [ebp-0x2a],al
  4125ff:	jp     0x4125b9
  412601:	lods   al,BYTE PTR ds:[esi]
  412602:	fdivr  QWORD PTR [edx-0x40]
  412605:	dec    ebp
  412606:	je     0x4125fb
  412608:	push   eax
  412609:	jbe    0x412613
  41260b:	pop    eax
  41260c:	loop   0x41261d
  41260e:	mov    edx,0x280e2e22
  412613:	out    0x75,eax
  412615:	xor    cl,BYTE PTR [esi-0x5c5cba02]
  41261b:	dec    ecx
  41261c:	add    edi,ebp
  41261e:	pop    esi
  41261f:	jno    0x4125f0
  412621:	mov    dh,0xa4
  412623:	or     al,0x43
  412625:	xchg   DWORD PTR [edx],esp
  412627:	jle    0x41264e
  412629:	push   0xede71d7d
  41262e:	lods   eax,DWORD PTR ds:[esi]
  41262f:	pop    ecx
  412630:	dec    esi
  412631:	pop    eax
  412632:	push   eax
  412633:	jmp    0x53166912
  412638:	pusha  
  412639:	fadd   QWORD PTR [ebx]
  41263b:	jbe    0x412674
  41263d:	(bad)  
  41263e:	fsub   QWORD PTR [ecx+0x99a80d4]
  412644:	xor    edi,ebx
  412646:	ins    DWORD PTR es:[edi],dx
  412647:	xor    DWORD PTR [edi+eax*1-0x6f],esi
  41264b:	lahf   
  41264c:	int    0x9d
  41264e:	pop    es
  41264f:	and    DWORD PTR [eax],edi
  412651:	(bad)  
  412652:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412653:	push   cs
  412654:	hlt    
  412655:	xchg   DWORD PTR [ecx+0x25a49ad0],esp
  41265b:	adc    esp,DWORD PTR [eax]
  41265d:	ja     0x4126bc
  41265f:	in     eax,0x76
  412661:	lahf   
  412662:	mov    ds:0xa2a6d0d8,al
  412667:	jg     0x412662
  412669:	arpl   WORD PTR [esi+0x46],di
  41266c:	test   al,0x66
  41266e:	out    dx,al
  41266f:	fcompp 
  412671:	lods   al,BYTE PTR ds:[esi]
  412672:	into   
  412673:	pop    edx
  412674:	sar    BYTE PTR [ebx],1
  412676:	enter  0xf4b2,0x73
  41267a:	out    0x45,al
  41267c:	imul   edx,DWORD PTR [edx-0x3],0x176003a3
  412683:	or     eax,0x63536e47
  412688:	dec    esp
  412689:	mov    ds:0x4ff15e36,eax
  41268e:	sub    DWORD PTR [eax-0x50],ebp
  412691:	dec    DWORD PTR [edx+0x3940a82f]
  412697:	dec    ecx
  412698:	neg    DWORD PTR [ebx-0x6b9e74fd]
  41269e:	arpl   WORD PTR [ebp+0x3b853ad9],ax
  4126a4:	cli    
  4126a5:	jl     0x412647
  4126a7:	sbb    eax,0xaf4a7b82
  4126ac:	and    cl,BYTE PTR [ecx-0x9cdd7b5]
  4126b2:	imul   esp,DWORD PTR [eax+edi*1],0x33
  4126b6:	dec    ebx
  4126b7:	inc    edi
  4126b8:	xchg   ebx,eax
  4126b9:	sbb    esp,DWORD PTR [esi-0x76493162]
  4126bf:	mov    esp,cr4
  4126c2:	xor    eax,0x4b044814
  4126c7:	push   esp
  4126c8:	jmp    0xb7c2:0xf270df5d
  4126cf:	aam    0x25
  4126d1:	enter  0xe58c,0xe7
  4126d5:	mov    ds:0xc8b01e75,al
  4126da:	dec    ecx
  4126db:	ret    
  4126dc:	mov    al,ds:0x78f38f56
  4126e1:	retf   
  4126e2:	jp     0x4126c0
  4126e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126e5:	test   ebx,esp
  4126e7:	repz stc 
  4126e9:	pop    es
  4126ea:	xchg   ebp,eax
  4126eb:	cmp    DWORD PTR [edx+0x5b],edx
  4126ee:	sub    ecx,edi
  4126f0:	es aaa 
  4126f2:	sbb    al,0xaf
  4126f4:	xor    dh,BYTE PTR [edx]
  4126f6:	nop
  4126f7:	(bad)  
  4126f8:	(bad)  
  4126fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126fb:	dec    esi
  4126fc:	push   edi
  4126fd:	shr    DWORD PTR ds:0x822d3e43,cl
  412703:	and    eax,0xd603b7f3
  412708:	jnp    0x4126a3
  41270a:	mov    ebp,0x3393f4e8
  41270f:	add    edi,DWORD PTR [ecx+ebp*2-0xf1980cf]
  412716:	das    
  412717:	fmul   DWORD PTR [edi-0x40]
  41271a:	clc    
  41271b:	dec    ebx
  41271c:	and    eax,0xedd8c42b
  412721:	mov    WORD PTR [ecx+ebx*1],?
  412724:	xor    BYTE PTR [edx+0x43],0x9
  412728:	scas   al,BYTE PTR es:[edi]
  412729:	out    dx,al
  41272a:	pop    esp
  41272b:	or     BYTE PTR [edi],bl
  41272d:	sahf   
  41272e:	ins    DWORD PTR es:[edi],dx
  41272f:	add    edx,DWORD PTR [edi-0x2b]
  412732:	ret    0xa87a
  412735:	mov    eax,0xd8f0c713
  41273a:	jne    0x4127b7
  41273c:	pop    ss
  41273d:	aad    0x79
  41273f:	fstp   DWORD PTR [eax-0x53]
  412742:	mov    BYTE PTR [edx-0x39],ah
  412745:	xor    eax,0x4d8be641
  41274a:	push   0xffffffd7
  41274c:	pop    ecx
  41274d:	sub    bh,al
  41274f:	or     BYTE PTR [edx+esi*1],dh
  412752:	aam    0x4c
  412754:	xchg   DWORD PTR [edi-0x78],esp
  412757:	mov    bh,0xb6
  412759:	jl     0x41276a
  41275b:	cli    
  41275c:	inc    ecx
  41275d:	dec    ecx
  41275e:	xchg   ebp,eax
  41275f:	jbe    0x41279a
  412761:	mov    edx,0xbcb147d
  412766:	cmp    BYTE PTR [edx+0x79],ch
  412769:	push   ebx
  41276a:	retf   0xb8b
  41276d:	fcom   QWORD PTR ds:0x7c84d403
  412773:	imul   esi,DWORD PTR [eax+0x30],0xb2173dd0
  41277a:	fstp   DWORD PTR [ebx]
  41277c:	daa    
  41277d:	in     al,dx
  41277e:	jg     0x4127a9
  412780:	(bad)  
  412782:	repnz popf 
  412784:	cld    
  412785:	xor    eax,esi
  412787:	cmp    eax,0x41429c96
  41278c:	(bad)  
  41278d:	pop    ss
  41278e:	dec    ebp
  41278f:	fisub  WORD PTR [ebp+0x4aa92622]
  412795:	inc    ecx
  412796:	mov    bl,0xe6
  412798:	jbe    0x41276a
  41279a:	(bad)  
  41279b:	fisttp QWORD PTR [ebp+0x39493023]
  4127a1:	mov    edi,ebx
  4127a3:	inc    esp
  4127a4:	sub    DWORD PTR [esi+0x6e107086],esp
  4127aa:	mov    esp,0x36ffefd7
  4127af:	sub    al,0xe1
  4127b1:	add    cl,BYTE PTR [edx+eax*2]
  4127b4:	pop    edi
  4127b5:	xchg   ebx,eax
  4127b6:	cmp    eax,0x5dfa04c4
  4127bb:	mov    WORD PTR [edx+0x724e506b],ds
  4127c1:	test   eax,0x95682737
  4127c6:	repnz adc BYTE PTR [esi],bl
  4127c9:	push   0xffffff8e
  4127cb:	imul   edx,edi,0xffffff80
  4127ce:	xchg   DWORD PTR [ebp+0x7778b449],ebx
  4127d4:	add    eax,0x1fc0675b
  4127d9:	xor    eax,0xa80a0973
  4127de:	sub    BYTE PTR [ebx-0x3b7ff7df],0x1c
  4127e5:	xchg   esi,eax
  4127e6:	jmp    0x7ef077a7
  4127eb:	mov    ecx,DWORD PTR ss:[ebp+0x7f]
  4127ef:	lea    edi,[eax-0x608732c5]
  4127f5:	not    DWORD PTR [edx]
  4127f7:	xchg   DWORD PTR [esi+0x1a2200d6],edx
  4127fd:	cmp    bl,ah
  4127ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412800:	adc    eax,0x532ca0f1
  412805:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412806:	sub    BYTE PTR [edi+0x55],0x34
  41280a:	push   edi
  41280b:	cli    
  41280c:	dec    esp
  41280d:	mov    ecx,0xc8563958
  412812:	dec    ecx
  412813:	xchg   esi,eax
  412814:	or     ch,BYTE PTR ss:[ecx+0x2a7ce362]
  41281b:	or     BYTE PTR [esi+0x13],ch
  41281e:	inc    ebx
  41281f:	or     DWORD PTR [ebx-0x6],esi
  412822:	dec    edi
  412823:	jmp    0x412848
  412825:	arpl   di,cx
  412827:	fs out dx,al
  412829:	test   BYTE PTR [edx],al
  41282b:	into   
  41282c:	adc    edx,DWORD PTR [eax+0x3e]
  41282f:	call   0x4b3a7bc2
  412834:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412835:	or     al,0xd8
  412837:	out    dx,eax
  412838:	or     ebx,DWORD PTR [ebp-0x4b]
  41283b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41283c:	cli    
  41283d:	adc    al,0xaf
  41283f:	rcl    BYTE PTR [edi+0x22],1
  412842:	sub    BYTE PTR [edx-0x5f8d4cc2],cl
  412848:	in     eax,dx
  412849:	out    dx,eax
  41284a:	jae    0x412847
  41284c:	jns    0x4127fb
  41284e:	sbb    al,BYTE PTR [eax]
  412850:	retf   0x200d
  412853:	push   ecx
  412854:	int3   
  412855:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412856:	and    al,0xec
  412858:	test   DWORD PTR [edx+0x615b4afd],ebp
  41285e:	(bad)
  412862:	hlt    
  412863:	outs   dx,DWORD PTR ds:[esi]
  412864:	mov    eax,0x67d66c45
  412869:	call   0xd416:0x183c525c
  412870:	or     DWORD PTR [ebp+0x1d1859f8],eax
  412876:	test   eax,0x2e7b5c65
  41287b:	pop    esp
  41287c:	cmp    al,BYTE PTR [esi]
  41287e:	inc    ecx
  41287f:	pop    es
  412880:	and    al,0x6c
  412882:	xchg   edi,eax
  412883:	xor    DWORD PTR [ebp-0x47],0xa8ae4ad0
  41288a:	mov    ds,ecx
  41288c:	test   al,0x34
  41288e:	stos   BYTE PTR es:[edi],al
  41288f:	mov    eax,ds:0x9b804a2d
  412894:	sub    al,0xa
  412896:	cmc    
  412897:	sti    
  412898:	out    0x98,al
  41289a:	test   eax,0x44963af8
  41289f:	loop   0x412848
  4128a1:	shl    DWORD PTR [ecx-0x4dbb1812],0x84
  4128a8:	fst    QWORD PTR [esi+0x37aea08e]
  4128ae:	or     edi,DWORD PTR [ebp-0x42ce4551]
  4128b4:	add    bl,BYTE PTR [eax+esi*1+0x5f43f60]
  4128bb:	push   edi
  4128bc:	mov    edi,0xb2751f8c
  4128c1:	fdivr  st(2),st
  4128c3:	and    al,0xeb
  4128c5:	mov    bh,0xd7
  4128c7:	into   
  4128c8:	retf   0x1263
  4128cb:	js     0x412921
  4128cd:	sub    DWORD PTR [ecx-0x5ab09d10],eax
  4128d3:	loope  0x41292e
  4128d5:	and    eax,0x273cc82c
  4128da:	push   esi
  4128db:	jb     0x41290b
  4128dd:	xchg   ebp,eax
  4128de:	cmp    DWORD PTR [esi+ebx*4+0x27d3dd28],ebx
  4128e5:	nop
  4128e6:	add    ebp,DWORD PTR [edx+0x64]
  4128e9:	test   BYTE PTR [eax+0x123ff3fd],ch
  4128ef:	or     eax,0xcf1e2679
  4128f4:	xchg   edi,eax
  4128f5:	icebp  
  4128f6:	(bad)  [eax+0x34]
  4128f9:	(bad)  [edx]
  4128fb:	and    BYTE PTR fs:[ebx],ch
  4128fe:	jmp    0xd1a8:0xcca2369f
  412905:	aad    0x83
  412907:	loop   0x412959
  412909:	cmc    
  41290a:	addr16 cmc 
  41290c:	jne    0x4128b0
  41290e:	jne    0x412975
  412910:	fcom   QWORD PTR [eax+0x60]
  412913:	popf   
  412914:	cs retf 0xa855
  412918:	add    eax,0x499398d4
  41291d:	stos   DWORD PTR es:[edi],eax
  41291e:	shl    dl,0x7a
  412921:	fiadd  WORD PTR [edx-0x7a]
  412924:	xchg   edx,eax
  412925:	ror    BYTE PTR [ecx],0xb8
  412928:	pop    edx
  412929:	setbe  BYTE PTR [edi+ecx*2+0xf09ad2f]
  412931:	cmp    BYTE PTR [ebx],0x16
  412934:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412935:	sbb    eax,0x9aa7107c
  41293a:	test   BYTE PTR [edx],bh
  41293c:	cmp    eax,0x4fc05123
  412941:	fistp  WORD PTR [esi]
  412943:	dec    ebp
  412944:	scas   eax,DWORD PTR es:[edi]
  412945:	push   ds
  412946:	not    bh
  412948:	sub    ch,ah
  41294a:	(bad)  
  41294b:	jg     0x41292f
  41294d:	lods   eax,DWORD PTR ds:[esi]
  41294e:	sbb    esi,DWORD PTR [ecx+ecx*4+0xa]
  412952:	mov    al,ds:0x7db13d08
  412957:	mov    edi,0xac664f93
  41295c:	sub    DWORD PTR [esi-0x1f],esp
  41295f:	shl    bl,cl
  412961:	cmp    DWORD PTR [edi+0x61],eax
  412964:	jae    0x41299a
  412966:	repz repz xchg ebp,eax
  412969:	xor    eax,0x38781c76
  41296e:	pop    esp
  41296f:	cwde   
  412970:	jnp    0x412994
  412972:	cmp    cl,BYTE PTR [eax+0x25cff1cb]
  412978:	lock mov ebp,0xf73626d0
  41297e:	inc    esp
  41297f:	lock inc edx
  412981:	add    eax,DWORD PTR [edi-0x1822537f]
  412987:	inc    esp
  412988:	aas    
  412989:	adc    al,0x51
  41298b:	and    eax,0x6952bc71
  412990:	inc    esi
  412991:	push   cs
  412992:	jns    0x412968
  412994:	dec    edx
  412995:	add    BYTE PTR [ebx-0x7f],ch
  412998:	frstor [eax+0x2966c313]
  41299e:	pop    ss
  41299f:	add    BYTE PTR [ecx+0x417511d4],al
  4129a5:	imul   esp,DWORD PTR [ebx],0x571d7f6
  4129ab:	pop    esi
  4129ac:	fstp   QWORD PTR [ebx-0x505d62e3]
  4129b2:	dec    esp
  4129b3:	sub    al,0x8d
  4129b5:	ds xchg esp,eax
  4129b7:	jmp    0x41299a
  4129b9:	aaa    
  4129ba:	xor    dl,BYTE PTR [eax+eiz*8+0x3daee42]
  4129c1:	or     edi,esp
  4129c3:	jno    0x412971
  4129c5:	dec    ecx
  4129c6:	lds    eax,FWORD PTR ds:0xc2f2a137
  4129cc:	mov    edi,0x62af2d47
  4129d1:	xor    al,0x5a
  4129d3:	push   0xb06ea611
  4129d8:	inc    eax
  4129d9:	xor    al,BYTE PTR [edi+0x692e5f2c]
  4129df:	icebp  
  4129e0:	iret   
  4129e1:	inc    edx
  4129e2:	cmp    BYTE PTR [edx],al
  4129e4:	inc    ebp
  4129e5:	test   eax,0xad6a2876
  4129ea:	stc    
  4129eb:	and    al,0xdc
  4129ed:	or     al,bl
  4129ef:	and    DWORD PTR [eax+eax*4+0x25],edi
  4129f3:	mov    WORD PTR [ecx+0x20],ds
  4129f6:	inc    ebx
  4129f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129f8:	mov    eax,ds:0x9ae5fc36
  4129fd:	and    eax,0xad790378
  412a02:	(bad)  
  412a03:	hlt    
  412a04:	cmp    al,BYTE PTR [ebx-0x24]
  412a07:	std    
  412a08:	sub    ah,BYTE PTR [ebx+ecx*4-0x69]
  412a0c:	in     eax,0xbe
  412a0e:	inc    esi
  412a0f:	sub    eax,0x856bd5ba
  412a14:	fistp  DWORD PTR [ebp+0x84f5684]
  412a1a:	cmp    ah,BYTE PTR [esi+0x408f0cfa]
  412a20:	cdq    
  412a21:	loopne 0x412a1e
  412a23:	push   0x40
  412a25:	(bad)  
  412a26:	mov    ah,BYTE PTR [esi-0x80]
  412a29:	(bad)  
  412a2a:	jle    0x412a3e
  412a2c:	mov    al,0x67
  412a2e:	into   
  412a2f:	test   al,0x26
  412a31:	lock fwait
  412a33:	(bad)  
  412a34:	xor    ecx,DWORD PTR [esi-0x6ade116b]
  412a3a:	push   eax
  412a3b:	sbb    dl,dl
  412a3d:	lods   al,BYTE PTR ds:[esi]
  412a3e:	and    al,al
  412a40:	gs (bad) 
  412a42:	div    bh
  412a44:	dec    edi
  412a45:	mov    edi,0x1bc152
  412a4a:	cmp    DWORD PTR [ebp-0xb],edi
  412a4d:	push   ecx
  412a4e:	arpl   WORD PTR [ecx-0x1d],bx
  412a51:	mov    eax,ds:0x899e5ba5
  412a56:	pop    ds
  412a57:	xor    BYTE PTR [ebx+ebp*4],dh
  412a5a:	pop    ebx
  412a5b:	rcl    BYTE PTR [esi],1
  412a5d:	push   edx
  412a5e:	nop    ebx
  412a61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a62:	fstp   TBYTE PTR [eax]
  412a64:	lock mov al,0xba
  412a67:	in     eax,dx
  412a68:	out    dx,eax
  412a69:	inc    edi
  412a6a:	aas    
  412a6b:	or     ecx,DWORD PTR [ebx]
  412a6d:	lods   eax,DWORD PTR ds:[esi]
  412a6e:	and    bl,bl
  412a70:	xchg   edi,eax
  412a71:	lods   eax,DWORD PTR ds:[esi]
  412a72:	inc    ecx
  412a73:	adc    al,0xc6
  412a75:	pop    ecx
  412a76:	or     DWORD PTR [edi+edx*1-0x2cede6dc],0xdd3f9d47
  412a81:	cs iret 
  412a83:	jle    0x412a1d
  412a85:	pop    ss
  412a86:	test   DWORD PTR [ebx+eax*8],eax
  412a89:	in     al,0xe0
  412a8b:	es sub al,0x2d
  412a8e:	fild   DWORD PTR [ebp+0x6]
  412a91:	popf   
  412a92:	cmp    eax,0xcf2a813d
  412a97:	(bad)  
  412a98:	je     0x412b0f
  412a9a:	xor    ebx,DWORD PTR [ebx-0x543e43b9]
  412aa0:	and    DWORD PTR [eax],eax
  412aa2:	retf   
  412aa3:	ret    0x6437
  412aa6:	(bad)  
  412aa7:	into   
  412aa8:	pop    esp
  412aa9:	add    cl,BYTE PTR [eax+esi*4]
  412aac:	cs fwait
  412aae:	pop    ecx
  412aaf:	pop    edx
  412ab0:	fs mov bl,0xd0
  412ab3:	ret    
  412ab4:	cmp    BYTE PTR [ecx+ebp*4-0x5ab5cd0a],al
  412abb:	pop    ds
  412abc:	xchg   bh,cl
  412abe:	pop    ds
  412abf:	mov    dl,0xb9
  412ac1:	(bad)  
  412ac2:	push   0x2e27ebeb
  412ac7:	outs   dx,DWORD PTR ds:[esi]
  412ac8:	inc    esp
  412ac9:	fbstp  TBYTE PTR [ecx]
  412acb:	jl     0x412a58
  412acd:	mov    bh,0xbe
  412acf:	ret    
  412ad0:	call   FWORD PTR [edi]
  412ad2:	mov    bh,0x97
  412ad4:	push   ss
  412ad5:	push   0x76
  412ad7:	jae    0x412b0e
  412ad9:	xor    BYTE PTR [esp+ebx*4],cl
  412adc:	add    bp,WORD PTR [ebx-0x67f81bcc]
  412ae3:	std    
  412ae4:	out    dx,eax
  412ae5:	jb     0x412b4f
  412ae7:	cmp    eax,DWORD PTR [eax-0x3beae8e5]
  412aed:	fist   DWORD PTR [esi]
  412aef:	and    edx,DWORD PTR [ebx]
  412af1:	dec    esp
  412af2:	stos   DWORD PTR es:[edi],eax
  412af3:	adc    al,0x1
  412af5:	loope  0x412b5c
  412af7:	repz mov bl,0xa4
  412afa:	or     cl,BYTE PTR [ebp-0x6939f62f]
  412b00:	mov    dh,0xc4
  412b02:	jp     0x412b78
  412b04:	xor    DWORD PTR [ebp+ebp*4-0x79],edx
  412b08:	fsubr  DWORD PTR [eax-0x55d02679]
  412b0e:	leave  
  412b0f:	jmp    edi
  412b11:	cmc    
  412b12:	cs addr16 jmp 0x412ae5
  412b16:	inc    edx
  412b17:	xchg   BYTE PTR [ecx],bh
  412b19:	xchg   edx,eax
  412b1a:	or     BYTE PTR [ecx-0x5f],al
  412b1d:	fcomp  DWORD PTR [ebx]
  412b1f:	stos   BYTE PTR es:[edi],al
  412b20:	mov    bh,BYTE PTR [esi+eiz*1-0x2c]
  412b24:	ror    DWORD PTR [esi],0x1f
  412b27:	push   edx
  412b28:	in     al,0x4c
  412b2a:	or     DWORD PTR ds:0x2301f223,0xffffffa4
  412b31:	lea    edi,[eax-0x2]
  412b34:	dec    DWORD PTR ds:0x71ec0848
  412b3a:	cmp    edi,DWORD PTR [ebx+0x4c]
  412b3d:	push   ebx
  412b3e:	rcr    ah,cl
  412b40:	test   al,0x10
  412b42:	jae    0x412b55
  412b44:	mov    ebp,0xe34a298f
  412b49:	sbb    eax,0x71ab3812
  412b4e:	dec    BYTE PTR [esi]
  412b50:	mov    ah,0xa8
  412b52:	mov    bh,BYTE PTR [ebp+0x52]
  412b55:	sbb    al,0x32
  412b57:	sub    dh,dl
  412b59:	sar    BYTE PTR [edi+edi*8+0x687861cb],cl
  412b60:	sub    eax,DWORD PTR [edi+0x574b73d7]
  412b66:	jp     0x412b1d
  412b68:	cmp    ah,BYTE PTR [esi]
  412b6a:	or     DWORD PTR [ebx-0x341cb3c5],0x3d
  412b71:	xor    al,0x76
  412b73:	int    0x3a
  412b75:	dec    edx
  412b76:	pop    esi
  412b77:	or     DWORD PTR [ebx-0x172c5989],ebx
  412b7d:	add    al,0x7a
  412b7f:	sub    al,0x9
  412b81:	scas   al,BYTE PTR es:[edi]
  412b82:	(bad)  
  412b83:	in     al,dx
  412b84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b85:	les    esp,FWORD PTR [esi-0x45]
  412b88:	sar    DWORD PTR [edx],0x9a
  412b8b:	mov    ebp,0x440c22d6
  412b90:	sahf   
  412b91:	sub    edi,DWORD PTR [eax-0x38969ffa]
  412b97:	repnz lods al,BYTE PTR ds:[esi]
  412b99:	test   DWORD PTR [ebx],ecx
  412b9b:	fbld   TBYTE PTR [eax-0x40fc628f]
  412ba1:	or     eax,0xaeff3c5f
  412ba6:	mov    cl,0x39
  412ba8:	add    dh,BYTE PTR [ecx+0xd]
  412bab:	inc    esi
  412bac:	inc    edx
  412bad:	inc    esi
  412bae:	data16 jl 0x412bd2
  412bb1:	addr16 popf 
  412bb3:	add    eax,0x314494ed
  412bb8:	inc    edi
  412bb9:	scas   al,BYTE PTR es:[edi]
  412bba:	retf   0xe80f
  412bbd:	dec    ecx
  412bbe:	in     eax,0x4f
  412bc0:	je     0x412b6b
  412bc2:	sti    
  412bc3:	test   DWORD PTR [eax],ecx
  412bc5:	pop    ebp
  412bc6:	adc    eax,0xad0e5a14
  412bcb:	not    BYTE PTR [eax-0x6555c9b6]
  412bd1:	cli    
  412bd2:	mov    esi,0xd4d58916
  412bd7:	pop    ebx
  412bd8:	push   ebp
  412bd9:	arpl   WORD PTR [ebx+eax*4],bx
  412bdc:	cld    
  412bdd:	mov    ds:0x82ad3b8f,eax
  412be2:	adc    ch,ah
  412be4:	popa   
  412be5:	cmp    ebx,DWORD PTR [ecx-0x71]
  412be8:	mov    bh,0x74
  412bea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412beb:	out    0xd5,al
  412bed:	cmp    eax,0xbc21204d
  412bf2:	add    bh,bl
  412bf4:	push   es
  412bf5:	mov    al,0xd1
  412bf7:	inc    ecx
  412bf8:	cdq    
  412bf9:	jmp    0x3804932c
  412bfe:	pushf  
  412bff:	aaa    
  412c00:	mov    ds,WORD PTR [esi]
  412c02:	(bad)  
  412c03:	neg    BYTE PTR [eax+0x7d]
  412c06:	mov    al,0x31
  412c08:	fneni(8087 only) 
  412c0a:	outs   dx,DWORD PTR ds:[esi]
  412c0b:	idiv   BYTE PTR [esi-0x4c19879d]
  412c11:	mov    bl,0xe
  412c13:	adc    edx,eax
  412c15:	inc    edx
  412c16:	loopne 0x412bad
  412c18:	push   eax
  412c19:	fs mov esp,0xf670b180
  412c1f:	inc    edx
  412c20:	cld    
  412c21:	mov    ebp,0x26801d45
  412c26:	loope  0x412bdb
  412c28:	mov    ah,0xd4
  412c2a:	jl     0x412bf0
  412c2c:	xchg   esi,eax
  412c2d:	pop    ds
  412c2e:	jo     0x412bc1
  412c30:	fist   DWORD PTR [eax+0x4375dd73]
  412c36:	outs   dx,DWORD PTR ds:[esi]
  412c37:	and    dh,BYTE PTR [ebx-0xa4104ac]
  412c3d:	sahf   
  412c3e:	fcompp 
  412c40:	jo     0x412c67
  412c42:	mov    bh,0xad
  412c44:	add    al,0x6b
  412c46:	jbe    0x412c68
  412c48:	enter  0x40c6,0x8c
  412c4c:	push   edx
  412c4d:	push   ebx
  412c4e:	out    0x44,eax
  412c50:	icebp  
  412c51:	cmp    DWORD PTR [ecx-0x40],0x5dd9cc22
  412c58:	test   BYTE PTR [ebp+0x4a],bh
  412c5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c5c:	stos   BYTE PTR es:[edi],al
  412c5d:	lea    edi,[esi+ecx*8+0x5e019018]
  412c64:	jecxz  0x412c96
  412c66:	lock push ebp
  412c68:	(bad)  
  412c69:	retf   0x7e0b
  412c6c:	or     DWORD PTR [ebx],edi
  412c6e:	fstp   TBYTE PTR [eax]
  412c70:	xchg   BYTE PTR [esi],cl
  412c72:	icebp  
  412c73:	jo     0x412ce1
  412c75:	aaa    
  412c76:	pop    ebx
  412c77:	dec    edi
  412c78:	adc    cl,BYTE PTR [ebp+0x4e]
  412c7b:	outs   dx,BYTE PTR ds:[esi]
  412c7c:	loopne 0x412cbd
  412c7e:	out    dx,eax
  412c7f:	call   0xc19ef630
  412c84:	jns    0x412cb4
  412c86:	lods   al,BYTE PTR ds:[esi]
  412c87:	jns    0x412c2c
  412c89:	dec    esp
  412c8a:	jmp    0x412c39
  412c8c:	xchg   ebp,eax
  412c8d:	push   edx
  412c8e:	sahf   
  412c8f:	pop    ds
  412c90:	adc    eax,0xf8b742a9
  412c95:	mov    esp,0xac78b1ac
  412c9a:	inc    eax
  412c9b:	pop    esp
  412c9c:	test   DWORD PTR [edx],0xf303858a
  412ca2:	cmp    BYTE PTR [esp+eiz*2],ah
  412ca5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ca6:	pushf  
  412ca7:	or     ah,cl
  412ca9:	xchg   edx,eax
  412caa:	xchg   edx,eax
  412cab:	mov    edx,0x2d4b29ea
  412cb0:	mov    dl,0x9f
  412cb2:	jle    0x412d1f
  412cb4:	fcmovb st,st(0)
  412cb6:	push   edi
  412cb7:	out    0x46,al
  412cb9:	jecxz  0x412ca4
  412cbb:	sahf   
  412cbc:	rol    DWORD PTR [edx+0x79],cl
  412cbf:	pop    esi
  412cc0:	sub    dh,dh
  412cc2:	fidivr WORD PTR [edi+0x39c8def8]
  412cc8:	or     DWORD PTR [ebp-0x34],0x4478daaf
  412ccf:	mov    esp,?
  412cd1:	mov    DWORD PTR [ecx-0x38],0x83d18aa1
  412cd8:	adc    eax,0xce12eed4
  412cdd:	inc    ebp
  412cde:	cmp    eax,DWORD PTR [eax]
  412ce0:	icebp  
  412ce1:	mov    ecx,0xbc556753
  412ce6:	and    DWORD PTR [esi-0x3f19875b],ebx
  412cec:	adc    eax,0x139729d0
  412cf1:	push   ebp
  412cf2:	pusha  
  412cf3:	cs (bad) 
  412cf5:	vandnpd xmm1,xmm4,xmm2
  412cf9:	ins    BYTE PTR es:[edi],dx
  412cfa:	pop    ds
  412cfb:	adc    BYTE PTR [ebx+0x74],dl
  412cfe:	pop    ss
  412cff:	mov    eax,esp
  412d01:	push   ebp
  412d02:	xchg   edi,eax
  412d03:	fild   QWORD PTR [ebp+0x1]
  412d06:	xlat   BYTE PTR ds:[ebx]
  412d07:	adc    DWORD PTR [edx-0x3b],0xe2e1b5d9
  412d0e:	popa   
  412d0f:	popf   
  412d10:	pop    es
  412d11:	mov    dh,0xa9
  412d13:	mov    al,ds:0x24cae4ff
  412d18:	scas   al,BYTE PTR es:[edi]
  412d19:	and    BYTE PTR [ecx],dh
  412d1b:	cmp    BYTE PTR [ebp+0x76b71d16],dl
  412d21:	mov    bl,0x19
  412d23:	idiv   BYTE PTR [ecx]
  412d25:	xor    BYTE PTR [ecx],0x4d
  412d28:	xor    dl,bh
  412d2a:	dec    ebx
  412d2b:	add    al,0xf8
  412d2d:	sbb    DWORD PTR [edx-0x19],ecx
  412d30:	int3   
  412d31:	sub    al,0x9
  412d33:	push   cs
  412d34:	jb     0x412d6d
  412d36:	jmp    0xcd021ffe
  412d3b:	(bad)  
  412d3c:	cmp    al,0xec
  412d3e:	fistp  DWORD PTR [ebp-0x18]
  412d41:	sub    ecx,ecx
  412d43:	aad    0x6
  412d45:	or     DWORD PTR [ebx+esi*1+0x366ab38],edx
  412d4c:	pop    ds
  412d4d:	xor    DWORD PTR [ebx-0xb],edi
  412d50:	xlat   BYTE PTR ds:[ebx]
  412d51:	out    0xaf,eax
  412d53:	push   ecx
  412d54:	test   DWORD PTR [eax-0x74985d3],0xc15b83a6
  412d5e:	mov    esi,DWORD PTR [ebx+0x7c355ef9]
  412d64:	dec    ebp
  412d65:	loop   0x412ddc
  412d67:	cmp    eax,0x1310ef81
  412d6c:	mov    al,ds:0x27659324
  412d71:	jo     0x412d50
  412d73:	push   ebp
  412d74:	out    0xae,al
  412d76:	pushf  
  412d77:	aaa    
  412d78:	push   cs
  412d79:	shr    DWORD PTR [ecx-0x6c8fa5d2],cl
  412d7f:	ins    DWORD PTR es:[edi],dx
  412d80:	out    dx,al
  412d81:	mov    cl,0xaf
  412d83:	xchg   edi,eax
  412d84:	jne    0x412d49
  412d86:	xchg   ecx,eax
  412d87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d88:	sub    al,0x37
  412d8a:	adc    ah,dl
  412d8c:	sbb    edx,edx
  412d8e:	js     0x412d30
  412d90:	sbb    eax,0xef4674cd
  412d95:	dec    edi
  412d96:	or     cl,BYTE PTR [ebx]
  412d98:	pop    eax
  412d99:	(bad)
  412d9c:	cmp    cl,BYTE PTR [eax+0x62]
  412d9f:	cmp    bh,BYTE PTR [eax]
  412da1:	imul   esi,DWORD PTR [esi+0x47925a2c],0xffffff94
  412da8:	nop
  412da9:	dec    ebx
  412daa:	in     eax,dx
  412dab:	xchg   ecx,eax
  412dac:	fwait
  412dad:	ins    DWORD PTR es:[edi],dx
  412dae:	dec    eax
  412daf:	repz adc bh,BYTE PTR [ebp+0x429c1d4b]
  412db6:	mov    eax,0x6b233aaa
  412dbb:	pop    eax
  412dbc:	fimul  WORD PTR [ebx+esi*2+0x6dc1b81a]
  412dc3:	adc    BYTE PTR [edx],cl
  412dc5:	jbe    0x412dd8
  412dc7:	arpl   WORD PTR [esi-0x41748b75],cx
  412dcd:	cli    
  412dce:	and    eax,0xeb7e607d
  412dd3:	inc    ebp
  412dd4:	mov    bl,0xdb
  412dd6:	repnz sti 
  412dd8:	mov    esp,0xfecbbef1
  412ddd:	mov    cl,0x24
  412ddf:	ins    DWORD PTR es:[edi],dx
  412de0:	sbb    eax,0xfc63d480
  412de5:	popf   
  412de6:	int3   
  412de7:	or     al,0x25
  412de9:	sbb    eax,0x4556d667
  412dee:	mov    bl,0x7b
  412df0:	inc    ebx
  412df1:	cmp    DWORD PTR [ecx+0x2],edi
  412df4:	shl    BYTE PTR [esp+ebx*8-0x31b059f0],1
  412dfb:	cli    
  412dfc:	pop    ebp
  412dfd:	loopne 0x412ddb
  412dff:	int    0x6f
  412e01:	jge    0x412e11
  412e03:	mov    ds:0xfe2c1a43,eax
  412e08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e09:	mov    esi,0xbed226a3
  412e0e:	sar    BYTE PTR gs:[ebx+0x7d],cl
  412e12:	mov    esi,0x4ebfb8af
  412e17:	js     0x412e2e
  412e19:	xchg   ebx,eax
  412e1a:	ret    0xcc5a
  412e1d:	imul   ebx,DWORD PTR [ebx],0x2b
  412e20:	sahf   
  412e21:	and    DWORD PTR es:[ebp+0x2d],ebp
  412e25:	dec    edx
  412e26:	test   esi,0x49641f0
  412e2c:	or     BYTE PTR [esi+0x28a2e007],dh
  412e32:	sub    eax,0x311635b3
  412e37:	shl    DWORD PTR [eax+0x2],1
  412e3a:	test   al,0x8e
  412e3c:	pushf  
  412e3d:	sbb    esp,eax
  412e3f:	test   al,0xcf
  412e41:	cmp    esi,DWORD PTR [edx-0x1a]
  412e44:	or     DWORD PTR [ebp+0x26],esp
  412e47:	icebp  
  412e48:	sub    ebx,0xfffffffe
  412e4b:	push   es
  412e4c:	clc    
  412e4d:	sub    edx,DWORD PTR [edi+0x4e]
  412e50:	imul   esi,DWORD PTR [esp+ebp*8-0x3c],0x10
  412e55:	mov    ecx,0x6f6a30fb
  412e5a:	push   cs
  412e5b:	jb     0x412e1f
  412e5d:	push   esp
  412e5e:	les    edx,FWORD PTR [ebp+edx*8-0x5a1bc05b]
  412e65:	js     0x412e54
  412e67:	pmullw mm4,mm2
  412e6a:	jb     0x412e08
  412e6c:	jo     0x412e5c
  412e6e:	and    al,0x45
  412e70:	and    al,BYTE PTR [ebx+0x1b709b6b]
  412e76:	xor    esp,DWORD PTR [edi+edx*8-0x6a]
  412e7a:	imul   edx,DWORD PTR [esi+0x23a8a4f6],0x9
  412e81:	cmp    esi,DWORD PTR [edi]
  412e83:	aas    
  412e84:	out    0xc5,eax
  412e86:	xchg   esi,eax
  412e87:	popa   
  412e88:	jo     0x412e55
  412e8a:	adc    esi,DWORD PTR [esi-0x28cf84ed]
  412e90:	int3   
  412e91:	add    al,0x8a
  412e93:	xchg   esp,eax
  412e94:	cs jecxz 0x412e6b
  412e97:	ret    0x17cc
  412e9a:	push   ebx
  412e9b:	mov    edi,0x9ad988a0
  412ea0:	scas   al,BYTE PTR es:[edi]
  412ea1:	push   0xffffff9f
  412ea3:	pop    ecx
  412ea4:	out    dx,al
  412ea5:	sub    DWORD PTR [eax+0x500b4ba8],eax
  412eab:	cwde   
  412eac:	mov    bl,0x50
  412eae:	inc    ebp
  412eaf:	sub    eax,esp
  412eb1:	shl    DWORD PTR [edx-0x40],cl
  412eb4:	mov    esi,0x3e0ef707
  412eb9:	shl    BYTE PTR [edx+0x6d395cba],0x24
  412ec0:	adc    al,0x68
  412ec2:	and    al,0x29
  412ec4:	mov    ebp,0x1fc6e0fd
  412ec9:	aas    
  412eca:	cdq    
  412ecb:	ds push edi
  412ecd:	jp     0x412f03
  412ecf:	nop
  412ed0:	push   ds
  412ed1:	push   ecx
  412ed2:	pop    ebp
  412ed3:	adc    dl,BYTE PTR [edi]
  412ed5:	and    esp,DWORD PTR [edx+eiz*4+0x64]
  412ed9:	pop    esp
  412eda:	ins    DWORD PTR es:[edi],dx
  412edb:	inc    BYTE PTR [eax+0x67]
  412ede:	inc    edi
  412edf:	or     eax,DWORD PTR [ebx+0x1094f7f6]
  412ee5:	call   0x5be7:0xd0eb2d74
  412eec:	aas    
  412eed:	cs addr16 pop ebx
  412ef0:	test   eax,edi
  412ef2:	mov    ch,BYTE PTR [ebx]
  412ef4:	xor    al,0x71
  412ef7:	cmc    
  412ef8:	test   al,0xbc
  412efa:	add    BYTE PTR [eax-0x5f640dc6],bl
  412f00:	sub    eax,0xba2c03f9
  412f05:	jp     0x412f81
  412f07:	sub    esi,esp
  412f09:	xor    al,0x8f
  412f0b:	popw   ds
  412f0d:	and    al,0xf8
  412f0f:	enter  0x352c,0xd9
  412f13:	adc    dl,BYTE PTR [edx-0x30c418e5]
  412f19:	mov    ebp,0xd4f10736
  412f1e:	imul   edx,DWORD PTR [ecx-0x1c74be24],0xffffffe6
  412f25:	xchg   edi,eax
  412f26:	jae    0x412f68
  412f28:	out    dx,al
  412f29:	mov    ds:0xa9f7f798,eax
  412f2e:	cmp    DWORD PTR [esi+0x22],edi
  412f31:	fwait
  412f32:	mov    dl,0xfd
  412f34:	icebp  
  412f35:	(bad)  
  412f36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f37:	call   0x9685dba3
  412f3c:	ds mov ebp,0xfe03ac96
  412f42:	jmp    0xccdb3e67
  412f47:	jg     0x412f8a
  412f49:	cdq    
  412f4a:	int    0xb6
  412f4c:	mov    ebx,0xa6cd1d82
  412f51:	shl    DWORD PTR [ebx+0x273547a7],0x5a
  412f58:	dec    ebp
  412f59:	jmp    0x412f6e
  412f5b:	out    dx,eax
  412f5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f5d:	std    
  412f5e:	inc    edi
  412f5f:	inc    edi
  412f60:	sahf   
  412f61:	(bad)  [ebx+0x2758aae]
  412f67:	int    0xd6
  412f69:	(bad)  
  412f6b:	sub    ebp,ecx
  412f6d:	std    
  412f6e:	mov    dl,BYTE PTR ds:0xecf0130c
  412f74:	sub    eax,0xbe87afde
  412f79:	lds    esi,FWORD PTR [esi+0x10e5f0a6]
  412f7f:	push   es
  412f80:	mov    ds:0x57355ea5,al
  412f85:	enter  0xdbcd,0x9d
  412f89:	div    ecx
  412f8b:	jnp    0x412fc8
  412f8d:	jg     0x412f4b
  412f8f:	inc    ebp
  412f90:	sub    esp,DWORD PTR [edi-0x41]
  412f93:	sub    al,0x9
  412f95:	jge    0x412ff1
  412f97:	dec    esi
  412f98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f99:	cmc    
  412f9a:	xor    dh,BYTE PTR [edx-0x2c8401da]
  412fa0:	or     al,0x3
  412fa2:	aaa    
  412fa3:	push   esi
  412fa4:	mov    eax,0xc516dbae
  412fa9:	stc    
  412faa:	sahf   
  412fab:	cli    
  412fac:	jmp    0x99ae:0xf81becac
  412fb3:	jle    0x412fbb
  412fb5:	es call 0xe41da495
  412fbb:	xor    DWORD PTR [ecx-0x2d],edi
  412fbe:	xchg   ecx,eax
  412fbf:	push   ds
  412fc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fc1:	fisubr DWORD PTR [edi]
  412fc3:	xchg   ecx,eax
  412fc4:	(bad)  
  412fc5:	imul   BYTE PTR [edx-0x6d]
  412fc8:	(bad)  
  412fc9:	out    dx,al
  412fca:	dec    esi
  412fcb:	push   cs
  412fcc:	or     DWORD PTR [eax+0x3e],edi
  412fcf:	jae    0x412fd4
  412fd1:	cmp    bh,BYTE PTR [ebp+0x76]
  412fd4:	add    BYTE PTR [ebp-0x47485bd1],0xd5
  412fdb:	in     al,0x1b
  412fdd:	in     eax,0xa2
  412fdf:	(bad)  
  412fe0:	stc    
  412fe1:	sti    
  412fe2:	mov    al,ds:0x5cf60247
  412fe7:	cmp    eax,0x3fa0821b
  412fec:	dec    eax
  412fed:	int    0x41
  412fef:	mov    ebx,0xd4b5add
  412ff4:	push   esp
  412ff5:	mov    al,bh
  412ff7:	jns    0x412fd0
  412ff9:	pop    esi
  412ffa:	mov    esp,0x7f423a4b
  412fff:	stos   BYTE PTR es:[edi],al
  413000:	clc    
  413001:	sbb    BYTE PTR [edi+0x59afd66],al
  413007:	or     ebx,DWORD PTR [ebp+0x4c910018]
  41300d:	sbb    BYTE PTR [ecx+0x3c],0xea
  413011:	sub    BYTE PTR [ebp+0x29],cl
  413014:	(bad)  
  413015:	cmp    al,0x8a
  413017:	popf   
  413018:	fstp   TBYTE PTR [eax+0x1e0b6343]
  41301e:	pusha  
  41301f:	(bad)  
  413020:	push   0xfffffffc
  413022:	add    eax,0xf8f770ff
  413027:	sbb    esi,esp
  413029:	mov    edx,0xace40589
  41302e:	push   ecx
  41302f:	mov    ah,BYTE PTR [edi-0x3a]
  413032:	jmp    0xaf94:0xeb34b4e1
  413039:	xchg   ebx,eax
  41303a:	dec    ecx
  41303b:	dec    ecx
  41303c:	push   es
  41303d:	jnp    0x412fc3
  41303f:	inc    ebx
  413040:	xchg   esi,edi
  413042:	add    ecx,0x313ce515
  413048:	scas   eax,DWORD PTR es:[edi]
  413049:	jb     0x85a4601b
  41304f:	dec    eax
  413050:	pop    esp
  413051:	out    0xcf,eax
  413053:	push   es
  413054:	cmp    edi,DWORD PTR [ebx+ebp*2-0x25d6480d]
  41305b:	mov    ss,WORD PTR [esp+esi*1+0xdae21dc]
  413062:	mov    ebp,0x73e5a9b8
  413067:	test   al,0x2f
  413069:	das    
  41306a:	jbe    0x4130d1
  41306c:	in     eax,dx
  41306d:	or     edx,DWORD PTR [edx]
  41306f:	mov    dh,0xbe
  413071:	or     DWORD PTR [edi+edx*1+0x1213f704],esi
  413078:	inc    ecx
  413079:	adc    DWORD PTR [edx-0x6f],esp
  41307c:	punpckldq mm2,mm0
  41307f:	mov    ds:0xc9599a87,al
  413084:	rcr    BYTE PTR [esi],cl
  413086:	mov    bl,BYTE PTR [eax+0x58e7d8c1]
  41308c:	outs   dx,DWORD PTR ds:[esi]
  41308d:	dec    ecx
  41308e:	mov    dl,0x77
  413090:	data16 or dh,al
  413093:	jae    0x4130b1
  413095:	xor    DWORD PTR [ebp+0x6b],edx
  413098:	xchg   edi,eax
  413099:	fwait
  41309a:	jo     0x413112
  41309c:	rcr    DWORD PTR [edi+eiz*1-0x140036d2],cl
  4130a3:	jmp    DWORD PTR [esi]
  4130a5:	stos   BYTE PTR es:[edi],al
  4130a6:	ja     0x413121
  4130a8:	imul   ebp,DWORD PTR [edi],0xf59e4110
  4130ae:	lds    edx,FWORD PTR [ebp+0x5eb400e8]
  4130b4:	push   eax
  4130b5:	sub    al,BYTE PTR [ecx+0x114eccc0]
  4130bb:	dec    edx
  4130bc:	aas    
  4130bd:	out    0xf2,eax
  4130bf:	shr    DWORD PTR [edx],0xff
  4130c2:	mov    edi,0x10ff54eb
  4130c7:	sbb    eax,0x1a647dc1
  4130cc:	mov    dl,0x53
  4130ce:	or     DWORD PTR [edi+0x9],esi
  4130d1:	sti    
  4130d2:	mov    dl,0x35
  4130d4:	data16 scas al,BYTE PTR es:[edi]
  4130d6:	js     0x413154
  4130d8:	jle    0x4130f5
  4130da:	je     0x41313d
  4130dc:	push   0x9ac94a6d
  4130e1:	sti    
  4130e2:	push   ecx
  4130e3:	(bad)  
  4130e4:	pusha  
  4130e5:	fwait
  4130e6:	popf   
  4130e7:	lods   eax,DWORD PTR ds:[esi]
  4130e8:	dec    edx
  4130e9:	loop   0x4130e5
  4130eb:	jb     0x41307e
  4130ed:	mov    ecx,0xd0930af4
  4130f2:	fdivr  DWORD PTR [ebx-0x6aa37a70]
  4130f8:	mov    ch,0xb8
  4130fa:	xchg   esi,eax
  4130fb:	inc    edi
  4130fc:	push   esp
  4130fd:	cmp    ah,BYTE PTR [esi-0x1ac4668e]
  413103:	jmp    0x413089
  413105:	jno    0x413104
  413107:	in     eax,0xf8
  413109:	idiv   BYTE PTR [ebx-0x60]
  41310c:	adc    eax,0x8df99a7c
  413111:	xor    DWORD PTR [esp+edi*1+0x481db925],esi
  413118:	mov    esi,0x6a5ec6d0
  41311d:	and    bl,BYTE PTR [ecx+esi*1-0x51beecf5]
  413124:	adc    bl,bh
  413126:	retf   0xc93a
  413129:	in     al,0x5d
  41312b:	mov    bl,0xbc
  41312d:	xor    al,0x34
  41312f:	mov    eax,ds:0x5a664806
  413134:	jecxz  0x413148
  413136:	pop    eax
  413137:	test   al,0xeb
  413139:	lock pop ecx
  41313b:	jge    0x413173
  41313d:	popf   
  41313e:	add    cl,BYTE PTR [eax]
  413140:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413141:	shl    edx,1
  413143:	jmp    0x41311c
  413145:	sub    ecx,DWORD PTR [eax-0x4b]
  413148:	push   ebp
  413149:	retf   
  41314a:	sti    
  41314b:	call   0xdb4:0x8b91618
  413152:	repnz and eax,DWORD PTR [ebp+0x42df193a]
  413159:	push   0x16
  41315b:	dec    edi
  41315c:	push   ecx
  41315d:	dec    edx
  41315e:	popa   
  41315f:	outs   dx,DWORD PTR ds:[esi]
  413160:	lods   eax,DWORD PTR ds:[esi]
  413161:	sub    DWORD PTR [bp+si],edx
  413164:	sti    
  413165:	push   es
  413166:	jae    0x4131ab
  413168:	pop    ecx
  413169:	std    
  41316a:	cmp    eax,DWORD PTR [esi]
  41316c:	add    ebx,eax
  41316e:	add    BYTE PTR ds:0x4ffc6688,dh
  413174:	aad    0xa7
  413176:	push   0x176c7e02
  41317b:	ins    BYTE PTR es:[edi],dx
  41317c:	not    DWORD PTR [ecx]
  41317e:	aad    0x10
  413180:	mov    esi,eax
  413182:	sbb    BYTE PTR [eax],ah
  413184:	push   ebx
  413185:	adc    ebx,edi
  413187:	adc    bl,BYTE PTR [eax+0x39a17c42]
  41318d:	mov    dl,0x49
  41318f:	xor    edx,0xffffff89
  413192:	shl    BYTE PTR [edi+0x3d],1
  413195:	mov    DWORD PTR [eax+0x7f],esp
  413198:	mov    al,ds:0x57cf91c
  41319d:	push   ds
  41319e:	popf   
  41319f:	dec    ebp
  4131a0:	pushf  
  4131a1:	pop    esp
  4131a2:	pop    edx
  4131a3:	fdiv   st,st(5)
  4131a5:	cmc    
  4131a6:	int3   
  4131a7:	nop
  4131a8:	inc    ebp
  4131a9:	sbb    eax,0x512f2e1
  4131ae:	mov    ecx,0x47eba81a
  4131b3:	cmp    DWORD PTR [ebx-0x28],edi
  4131b6:	aad    0xcf
  4131b8:	nop
  4131b9:	cmp    bh,bh
  4131bb:	mov    ebx,DWORD PTR [edi+0x67]
  4131be:	inc    esp
  4131bf:	retf   0x397c
  4131c2:	fist   DWORD PTR [eax]
  4131c4:	aad    0x89
  4131c6:	sahf   
  4131c7:	retf   
  4131c8:	cwde   
  4131c9:	xchg   esp,eax
  4131ca:	mov    ebp,0x1b0873ca
  4131cf:	jge    0x4131cd
  4131d1:	lods   eax,DWORD PTR gs:[esi]
  4131d3:	test   BYTE PTR [eax],0xce
  4131d6:	das    
  4131d7:	outs   dx,BYTE PTR ds:[esi]
  4131d8:	test   DWORD PTR [ecx+0xe],0x82967c47
  4131df:	jnp    0x413217
  4131e1:	jmp    0x41316f
  4131e3:	and    edx,0xcf618c74
  4131e9:	std    
  4131ea:	inc    eax
  4131eb:	push   esi
  4131ec:	leave  
  4131ed:	sbb    ah,BYTE PTR [ebx]
  4131ef:	mov    cl,BYTE PTR [esi+edx*8-0x254490ae]
  4131f6:	loop   0x413179
  4131f8:	mov    dl,dh
  4131fa:	shl    BYTE PTR [edi],0x9e
  4131fd:	push   0x5c
  4131ff:	inc    edi
  413200:	mov    esi,0xb5889502
  413205:	(bad)  
  413206:	fcom   DWORD PTR ds:0xa49480c2
  41320c:	jp     0x4131af
  41320e:	add    eax,0x6c3d63f5
  413213:	adc    DWORD PTR [ecx],ebx
  413215:	sub    eax,0x4d348e25
  41321a:	xchg   ebx,eax
  41321b:	cmp    ecx,ebx
  41321d:	mov    dh,0x2a
  41321f:	test   BYTE PTR [esi],0x14
  413222:	sub    eax,0xb74972f
  413227:	push   edx
  413228:	je     0x4131c9
  41322a:	nop
  41322b:	xor    esp,esi
  41322d:	push   ds
  41322e:	sbb    DWORD PTR [edx+0x661ff718],0x20
  413235:	or     ah,BYTE PTR [edx-0x23]
  413238:	jbe    0x4132ad
  41323a:	jecxz  0x4132ae
  41323c:	mov    dl,cl
  41323e:	es daa 
  413240:	shr    BYTE PTR [ebx+0x340ece18],1
  413246:	and    al,0x31
  413248:	ss leave 
  41324a:	push   ds
  41324b:	inc    ebx
  41324c:	sub    BYTE PTR [ecx],cl
  41324e:	cmp    DWORD PTR [ecx+0xb],eax
  413251:	push   ss
  413252:	cld    
  413253:	ins    BYTE PTR es:[edi],dx
  413254:	in     al,dx
  413255:	enter  0xf3d6,0x17
  413259:	mov    ch,0xcc
  41325b:	(bad)  
  41325c:	aas    
  41325d:	push   eax
  41325e:	cmp    DWORD PTR [ebx-0x63],esp
  413261:	push   0x33
  413263:	shl    BYTE PTR [edi+0x393fb71a],0xfb
  41326a:	cmp    DWORD PTR [ebx-0x24],0xffffff8c
  41326e:	xchg   ebp,eax
  41326f:	mov    ebp,DWORD PTR [eax+0x63]
  413272:	mov    al,ds:0x5e61c315
  413277:	xchg   edx,eax
  413278:	push   ecx
  413279:	mov    dl,0x7e
  41327b:	mov    ebx,0x9a176df6
  413280:	gs xchg ebp,eax
  413282:	scas   eax,DWORD PTR es:[edi]
  413283:	adc    BYTE PTR [esi-0x66a3330],cl
  413289:	jb     0x4132a5
  41328b:	ret    
  41328c:	mov    ds,WORD PTR es:[esi+edi*8]
  413290:	push   0x4b2bbe10
  413295:	sbb    BYTE PTR [ecx],ch
  413297:	sbb    eax,0x12d6c3e4
  41329c:	or     eax,0x89fde079
  4132a1:	xor    ebx,DWORD PTR [ebx+0x26]
  4132a4:	loop   0x41322f
  4132a6:	dec    ebp
  4132a7:	or     ch,BYTE PTR [ebx]
  4132a9:	push   ebx
  4132aa:	lea    eax,[esi-0x51]
  4132ad:	jbe    0x41326d
  4132af:	mov    eax,ds:0xeeddfdc9
  4132b4:	scas   eax,DWORD PTR es:[edi]
  4132b5:	retf   
  4132b6:	outs   dx,BYTE PTR ds:[esi]
  4132b7:	mul    eax
  4132b9:	push   ds
  4132ba:	call   0xdf59:0x37f49b12
  4132c1:	repnz mov edi,0xa002e6b4
  4132c7:	mov    ecx,0x9bce9d90
  4132cc:	nop
  4132cd:	icebp  
  4132ce:	cmc    
  4132cf:	(bad)  
  4132d0:	sbb    DWORD PTR [ecx+0x4d],ecx
  4132d3:	pop    ebx
  4132d4:	and    eax,0x9e82c41a
  4132d9:	mov    BYTE PTR [ecx-0x27],bh
  4132dc:	xor    al,0x5c
  4132de:	or     BYTE PTR [ebx+ebx*4-0x3],ch
  4132e2:	scas   eax,DWORD PTR es:[edi]
  4132e3:	popa   
  4132e4:	clc    
  4132e5:	mov    ch,0x24
  4132e7:	ficom  DWORD PTR [ecx+0x6ccdc3fd]
  4132ed:	dec    edi
  4132ee:	pop    ss
  4132ef:	dec    esp
  4132f0:	ficomp DWORD PTR [edi-0x22]
  4132f3:	xor    BYTE PTR [ebx-0x27b5be54],dl
  4132f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132fa:	stos   BYTE PTR es:[edi],al
  4132fb:	cmp    BYTE PTR [eax],dh
  4132fd:	test   al,0xb8
  4132ff:	pop    ebx
  413300:	xchg   edi,eax
  413301:	ss inc ebp
  413303:	pusha  
  413304:	pop    es
  413305:	push   eax
  413306:	mov    ecx,0x31f51643
  41330b:	loop   0x41331d
  41330d:	adc    ecx,edi
  41330f:	push   0xd098c982
  413314:	mov    bh,0xa3
  413316:	mov    bl,0xe0
  413318:	mov    dh,0xc5
  41331a:	xchg   ecx,eax
  41331b:	inc    ecx
  41331c:	mov    edi,0x79e417f6
  413321:	push   ss
  413322:	add    DWORD PTR [edi],ecx
  413324:	in     eax,dx
  413325:	mov    edx,DWORD PTR [edi+0x43]
  413328:	xor    DWORD PTR [eax-0x4],esp
  41332b:	push   ebx
  41332c:	lahf   
  41332d:	(bad)  
  41332f:	out    0x6c,eax
  413331:	jno    0x4132e4
  413333:	inc    edx
  413334:	popf   
  413335:	jmp    0xd6aa04b7
  41333a:	bound  esi,QWORD PTR gs:[eax]
  41333d:	jns    0x4132e4
  41333f:	xor    edi,DWORD PTR [eax+0x5a275d67]
  413345:	and    BYTE PTR [esi-0x3a],dh
  413348:	cdq    
  413349:	cld    
  41334a:	jecxz  0x4133bd
  41334c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41334d:	inc    edi
  41334e:	(bad)  
  413350:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413351:	aaa    
  413352:	mov    al,BYTE PTR [eax-0x65]
  413355:	fdivr  QWORD PTR [eax+eax*2]
  413358:	push   edx
  413359:	jns    0x413303
  41335b:	push   ecx
  41335c:	dec    edi
  41335e:	cmp    eax,0x87bb9f49
  413363:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413364:	pushf  
  413365:	fsub   QWORD PTR [ebx-0x32]
  413368:	mov    dl,0xcd
  41336a:	inc    edx
  41336b:	or     al,0x6b
  41336d:	ds or  eax,0xb7e6b727
  413373:	mov    eax,0x4d9aa7b3
  413378:	inc    ebp
  413379:	sbb    dl,bl
  41337b:	fistp  WORD PTR [esp+edi*4]
  41337e:	dec    esp
  41337f:	pop    edi
  413380:	shr    edx,0x12
  413383:	inc    esp
  413384:	aam    0xf9
  413386:	and    al,0x19
  413388:	xchg   esp,eax
  413389:	pusha  
  41338a:	fist   DWORD PTR [ebx-0x257bfe84]
  413390:	addr16 mov ds:0xcb8c,eax
  413394:	xchg   eax,eax
  413396:	cmp    al,BYTE PTR [esi]
  413398:	add    eax,0xf1b3c0fd
  41339d:	push   ebx
  41339e:	and    DWORD PTR [ebx-0x2a],0xfffffffe
  4133a2:	mov    eax,0x4dface93
  4133a7:	pop    eax
  4133a8:	cli    
  4133a9:	mov    BYTE PTR [edi],dl
  4133ab:	dec    edx
  4133ac:	ret    
  4133ad:	ror    DWORD PTR [ebx],1
  4133af:	push   edi
  4133b0:	adc    edi,DWORD PTR [edi-0x625580ad]
  4133b6:	jno    0x41334c
  4133b8:	sbb    eax,0xcfa8bbf9
  4133bd:	mov    edi,0xbe463814
  4133c2:	xchg   esi,eax
  4133c3:	popa   
  4133c4:	mov    DWORD PTR ds:0x29d1fba3,ebx
  4133ca:	(bad)  
  4133cb:	sub    eax,esp
  4133cd:	push   es
  4133ce:	xchg   ebp,eax
  4133cf:	sub    DWORD PTR [ebx],ebp
  4133d1:	push   DWORD PTR [edi+0x43]
  4133d4:	xor    DWORD PTR [eax-0x3301a2ff],edi
  4133da:	mov    ebp,0x88c288d9
  4133df:	outs   dx,BYTE PTR ds:[esi]
  4133e0:	pop    edi
  4133e1:	aas    
  4133e2:	aad    0x90
  4133e4:	int    0x1b
  4133e6:	cmp    al,0x8b
  4133e8:	add    BYTE PTR [ebp-0x5d],ch
  4133eb:	jl     0x4133ec
  4133ed:	inc    ebp
  4133ee:	mov    edx,0xda0b30fb
  4133f3:	mov    ebx,0x438641fa
  4133f8:	xchg   edx,eax
  4133f9:	(bad)  
  4133fa:	xor    eax,0x1644fb2f
  4133ff:	enter  0xebdf,0x99
  413403:	push   ebp
  413404:	mov    esp,0xa89cc2c0
  413409:	add    ebp,edx
  41340b:	cmp    DWORD PTR [ecx+0x7],ebp
  41340e:	jg     0x41341e
  413410:	scas   eax,DWORD PTR es:[edi]
  413411:	xchg   ebx,eax
  413412:	or     al,0x0
  413414:	aam    0xb1
  413416:	or     ecx,DWORD PTR [edi-0x42]
  413419:	in     al,0x1e
  41341b:	sub    al,0x8
  41341d:	jbe    0x4133ae
  41341f:	inc    ebp
  413420:	pushf  
  413421:	fld    DWORD PTR [ebx-0x5c]
  413424:	pusha  
  413425:	call   0x8791:0xd310ef84
  41342c:	mov    ah,0x0
  41342e:	xchg   ecx,eax
  41342f:	add    eax,0xba96b2a2
  413434:	sbb    BYTE PTR [ebp-0x1334050a],cl
  41343a:	fbstp  TBYTE PTR [eax]
  41343c:	push   ss
  41343d:	mov    ebp,0x669df6d3
  413442:	xchg   DWORD PTR [edx-0x6c],ebp
  413445:	cwde   
  413446:	test   al,0xe6
  413448:	dec    edx
  413449:	std    
  41344a:	out    dx,al
  41344b:	loope  0x4133f2
  41344d:	mov    ds:0x6efe6dc5,al
  413452:	js     0x413409
  413454:	mov    dl,0xad
  413456:	out    0x2f,eax
  413458:	(bad)  
  413459:	xchg   edx,eax
  41345a:	ror    BYTE PTR [ebp+0x7c],0x69
  41345e:	add    BYTE PTR [edi-0x5d1989a0],0xdc
  413465:	xor    BYTE PTR [ecx+0x7c],al
  413468:	xchg   edx,eax
  413469:	jl     0x413412
  41346b:	fdiv   DWORD PTR [ebx]
  41346d:	jne    0x4134c5
  41346f:	cmc    
  413470:	add    dh,BYTE PTR [ebx]
  413472:	jle    0x413487
  413474:	xchg   esi,eax
  413475:	fisub  WORD PTR [edi+ecx*1-0x876e8f2]
  41347c:	call   0xe11fe15d
  413481:	(bad)  
  413482:	retf   
  413483:	xchg   BYTE PTR [eax-0x72118f2c],bl
  413489:	jge    0x4134ed
  41348b:	jbe    0x413424
  41348d:	stc    
  41348e:	in     eax,dx
  41348f:	lahf   
  413490:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413491:	jbe    0x413465
  413493:	pop    esi
  413494:	inc    ecx
  413495:	stos   BYTE PTR es:[edi],al
  413496:	leave  
  413497:	mov    al,ds:0x1b4bf98e
  41349c:	jne    0x4134c2
  41349e:	mov    ch,0xd
  4134a0:	je     0x413427
  4134a2:	cmp    bl,0xd
  4134a5:	ja     0x4134ca
  4134a7:	retf   
  4134a8:	jnp    0x41346c
  4134aa:	xchg   esi,eax
  4134ab:	jo     0x4134b1
  4134ad:	stc    
  4134ae:	xchg   ebx,eax
  4134af:	dec    ebp
  4134b0:	lds    ecx,FWORD PTR [esi]
  4134b2:	outs   dx,BYTE PTR ds:[esi]
  4134b3:	stos   DWORD PTR es:[edi],eax
  4134b4:	outs   dx,DWORD PTR ds:[esi]
  4134b5:	into   
  4134b6:	xchg   ebx,eax
  4134b7:	call   0x12cbf780
  4134bc:	jg     0x4134b2
  4134be:	add    BYTE PTR [ecx-0x27],dl
  4134c1:	inc    edi
  4134c2:	inc    ebp
  4134c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134c4:	push   0x65
  4134c6:	mov    ebp,ebx
  4134c8:	out    0x72,eax
  4134ca:	xor    al,0xad
  4134cc:	outs   dx,DWORD PTR ds:[esi]
  4134cd:	push   ebx
  4134ce:	lahf   
  4134cf:	inc    esi
  4134d0:	inc    esp
  4134d1:	add    al,0x3c
  4134d3:	mov    edi,0x3e95f4a0
  4134d8:	sub    bl,BYTE PTR [ecx]
  4134da:	jne    0x4134b3
  4134dc:	add    al,0x1e
  4134de:	jl     0x41353f
  4134e0:	out    0xea,al
  4134e2:	aad    0x69
  4134e4:	adc    dh,cl
  4134e6:	inc    esi
  4134e7:	mov    ebx,0x34eb5a0f
  4134ec:	shl    ch,cl
  4134ee:	push   esp
  4134ef:	mov    esi,0xd9b2acf2
  4134f4:	mov    bh,0xd8
  4134f6:	ror    BYTE PTR [eax],cl
  4134f8:	pop    ecx
  4134f9:	dec    ecx
  4134fa:	mov    edx,0xaf5e4998
  4134ff:	sub    al,0xca
  413501:	mov    BYTE PTR [eax-0x1b],cl
  413504:	adc    eax,0x769683c4
  413509:	imul   edi,ecx,0x32168ecb
  41350f:	test   DWORD PTR [edx+0x39],edi
  413512:	mov    cl,0xb4
  413514:	mov    al,0x28
  413516:	jmp    0x4134da
  413518:	pusha  
  413519:	cs push ds
  41351b:	outs   dx,DWORD PTR ds:[esi]
  41351c:	(bad)  
  41351d:	sbb    eax,0xd21eea18
  413522:	shl    DWORD PTR [ecx+edi*1],1
  413525:	pop    edi
  413526:	call   0x43540423
  41352b:	rcl    DWORD PTR [ecx-0x65],cl
  41352e:	aaa    
  41352f:	mov    WORD PTR [esi-0x158db037],ds
  413535:	data16 cmc 
  413537:	je     0x4134db
  413539:	jg     0x413514
  41353b:	cwde   
  41353c:	or     al,BYTE PTR [ebx-0x68bcbc4f]
  413542:	mov    ebp,0x2297b8e9
  413547:	fsub   QWORD PTR [edi+eax*1+0x78]
  41354c:	add    DWORD PTR [edi],esp
  41354e:	push   ecx
  41354f:	outs   dx,DWORD PTR ds:[esi]
  413550:	and    eax,0x67d219ee
  413555:	or     eax,DWORD PTR [edx]
  413557:	jbe    0x413586
  413559:	xor    BYTE PTR [eax],0x69
  41355c:	sahf   
  41355d:	or     ebx,DWORD PTR [edx-0x220c27ed]
  413563:	pop    esi
  413564:	out    0x7,al
  413566:	bound  edx,QWORD PTR [eax-0x4d]
  413569:	(bad)  
  41356a:	xlat   BYTE PTR ds:[ebx]
  41356b:	test   cl,dl
  41356d:	dec    ecx
  41356e:	in     al,0x1d
  413570:	mov    ebp,0x572d644b
  413575:	lods   al,BYTE PTR ds:[esi]
  413576:	int3   
  413577:	inc    ebp
  413578:	ds jl  0x41357b
  41357b:	pop    esp
  41357c:	and    al,0x43
  41357e:	mov    dl,0x75
  413580:	add    esi,DWORD PTR [esi+0x18]
  413583:	loopne 0x4135da
  413585:	and    al,0xe3
  413587:	in     eax,0x8c
  413589:	and    al,0xb2
  41358b:	pop    esi
  41358c:	lods   eax,DWORD PTR ds:[esi]
  41358d:	(bad)  
  41358e:	loopne 0x413544
  413590:	test   bl,dl
  413592:	push   eax
  413593:	push   cs
  413594:	xchg   esi,eax
  413595:	jle    0x4135fc
  413597:	mov    ah,0x33
  413599:	imul   esi,DWORD PTR [edx],0xffffffad
  41359c:	xchg   edx,eax
  41359d:	ja     0x4135d1
  41359f:	stos   BYTE PTR es:[edi],al
  4135a0:	push   edi
  4135a1:	in     eax,dx
  4135a2:	inc    edi
  4135a3:	jb     0x413533
  4135a5:	mov    ebx,0xb55f8cfc
  4135aa:	shl    BYTE PTR [ebx+0x7ac58db4],1
  4135b0:	test   BYTE PTR ds:0x94fc,0xec
  4135b6:	stos   DWORD PTR es:[edi],eax
  4135b7:	adc    ebx,0x71
  4135ba:	pushf  
  4135bb:	xor    dl,bl
  4135bd:	cmp    ecx,DWORD PTR [esi-0x21c533ae]
  4135c3:	div    BYTE PTR [edx-0x39f24dd4]
  4135c9:	mov    ch,0x60
  4135cb:	test   al,0x91
  4135cd:	adc    al,0xcd
  4135cf:	or     al,BYTE PTR [ecx+0x55154bf1]
  4135d5:	pop    es
  4135d6:	jne    0x4135fb
  4135d8:	inc    ebp
  4135d9:	add    al,0xc4
  4135db:	mov    ebx,0xf1cca906
  4135e0:	and    cl,BYTE PTR [edx-0x4b]
  4135e3:	je     0x413589
  4135e5:	sbb    bh,BYTE PTR [ecx-0x3e]
  4135e8:	std    
  4135e9:	push   ecx
  4135ea:	test   cl,dl
  4135ec:	ret    
  4135ed:	nop
  4135ee:	xor    esi,ebp
  4135f0:	loopne 0x41357c
  4135f2:	sub    bh,dl
  4135f4:	in     eax,dx
  4135f5:	pushf  
  4135f6:	sar    BYTE PTR [ebp+0x2e],1
  4135f9:	retf   0x5c41
  4135fc:	fisttp WORD PTR [eax+0x8c4b2b9]
  413602:	dec    ebp
  413603:	(bad)  
  413604:	mov    ds:0x63eaf04d,eax
  413609:	test   DWORD PTR ds:0xc46b9718,edx
  41360f:	cdq    
  413610:	mov    ebx,0xaee95d22
  413615:	xor    BYTE PTR [ebx-0x7c],dl
  413618:	jae    0x41363e
  41361a:	pop    eax
  41361b:	outs   dx,DWORD PTR ds:[esi]
  41361c:	xchg   edi,eax
  41361d:	cpuid  
  41361f:	in     eax,dx
  413620:	(bad)  
  413621:	shr    BYTE PTR [esi+0x3],1
  413624:	and    eax,0xb4d092da
  413629:	sahf   
  41362a:	pop    ecx
  41362b:	jo     0x413681
  41362d:	xor    eax,0x9c2aeff2
  413632:	inc    ebp
  413633:	xchg   esp,eax
  413634:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413635:	pop    ecx
  413636:	mov    ah,0x28
  413638:	clc    
  413639:	inc    esp
  41363a:	sar    DWORD PTR [edi-0x53],0xc2
  41363e:	xchg   edi,eax
  41363f:	out    dx,eax
  413640:	dec    esp
  413641:	push   ebx
  413642:	out    dx,al
  413643:	ja     0x413693
  413645:	xchg   ecx,eax
  413646:	stc    
  413647:	xchg   edx,eax
  413648:	outs   dx,BYTE PTR ds:[esi]
  413649:	jne    0x4135e6
  41364b:	loop   0x41365c
  41364d:	inc    edi
  41364e:	add    ebx,DWORD PTR [edi-0x45]
  413651:	sahf   
  413652:	or     esp,edi
  413654:	mov    BYTE PTR [eax],bh
  413656:	lods   eax,DWORD PTR ds:[esi]
  413657:	jb     0x4136b2
  413659:	test   eax,0xe02e9d4f
  41365e:	or     eax,0xda8c6181
  413663:	leave  
  413664:	ds ja  0x4135ec
  413667:	mov    bl,0x26
  413669:	fcmovb st,st(4)
  41366b:	js     0x413673
  41366d:	fs jle 0x4136b2
  413670:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413671:	jecxz  0x4135fa
  413673:	sub    DWORD PTR [ecx+eax*2],esi
  413676:	or     cl,BYTE PTR [edx+0x6a0d831f]
  41367c:	dec    eax
  41367d:	push   ss
  41367e:	mov    ch,0x54
  413680:	out    0x1f,eax
  413682:	pop    esi
  413683:	inc    ebp
  413684:	xchg   ecx,eax
  413685:	ins    DWORD PTR es:[edi],dx
  413686:	dec    edx
  413687:	jge    0x4136f6
  413689:	cmp    bh,al
  41368b:	inc    ecx
  41368c:	or     ch,BYTE PTR [esi-0x6af9daa4]
  413692:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413693:	xchg   edx,eax
  413694:	sti    
  413695:	sti    
  413696:	jmp    DWORD PTR [ecx+0x4c]
  413699:	daa    
  41369a:	fbld   TBYTE PTR [eax+0x7d279cb5]
  4136a0:	dec    eax
  4136a1:	das    
  4136a2:	dec    esp
  4136a3:	inc    edx
  4136a4:	ret    0x1bdf
  4136a7:	daa    
  4136a8:	cmp    ch,dh
  4136aa:	pop    ebx
  4136ab:	mul    DWORD PTR [ecx+0x6e5c0c0b]
  4136b1:	and    al,cl
  4136b3:	cmp    eax,0xf5cd113d
  4136b8:	int3   
  4136b9:	dec    edx
  4136ba:	pusha  
  4136bb:	mov    ebx,0xc490d70f
  4136c0:	arpl   cx,ax
  4136c2:	aad    0x52
  4136c4:	cmp    eax,0x57f7dd18
  4136c9:	ins    BYTE PTR es:[edi],dx
  4136ca:	and    BYTE PTR [edi],dl
  4136cc:	in     eax,dx
  4136cd:	push   es
  4136ce:	scas   eax,DWORD PTR es:[edi]
  4136cf:	push   0x8
  4136d1:	sbb    ebx,ecx
  4136d3:	and    eax,0x5e1d10a8
  4136d8:	xor    DWORD PTR [eax-0x2672bc9c],ebp
  4136de:	push   es
  4136df:	adc    esi,esp
  4136e1:	jno    0x4136aa
  4136e3:	push   cs
  4136e4:	(bad)  
  4136e5:	pop    ebp
  4136e6:	in     eax,dx
  4136e7:	add    BYTE PTR [esi+0x42],dh
  4136ea:	mov    ebx,0x5299cb3b
  4136ef:	cmc    
  4136f0:	hlt    
  4136f1:	sbb    ecx,DWORD PTR [edi-0x6e074768]
  4136f7:	sub    eax,0x94a1b506
  4136fc:	xchg   ebp,eax
  4136fd:	dec    eax
  4136fe:	fild   WORD PTR [ebp+0x4c]
  413701:	into   
  413702:	sub    ah,BYTE PTR [edx+0x6a2c349]
  413708:	pop    ds
  413709:	leave  
  41370a:	xlat   BYTE PTR ds:[ebx]
  41370b:	push   ds
  41370c:	inc    edi
  41370d:	push   0xffffffec
  41370f:	dec    ecx
  413710:	mov    eax,ds:0x9ea6fd2
  413715:	pop    edx
  413716:	push   ebx
  413717:	mov    edx,ss
  413719:	jmp    FWORD PTR [ebx+0x457f5406]
  41371f:	push   ebx
  413720:	fcom   QWORD PTR [esi-0x3afc24f1]
  413726:	pop    ss
  413727:	or     eax,0xdc6111cb
  41372c:	mov    ds:0x16b9886d,al
  413731:	xor    BYTE PTR [ebx-0x4],cl
  413734:	fwait
  413735:	sti    
  413736:	fidiv  DWORD PTR [ebp-0x4]
  413739:	fwait
  41373a:	cld    
  41373b:	xchg   BYTE PTR [edx],al
  41373d:	add    edi,DWORD PTR [esi]
  41373f:	add    eax,0x2de54dcf
  413744:	rol    DWORD PTR [esi-0x39f16cdf],1
  41374a:	push   0x130d8e04
  41374f:	mov    edx,0x801388c3
  413754:	es js  0x41378d
  413757:	popa   
  413758:	and    DWORD PTR [ebp-0x88c9b32],edx
  41375e:	xchg   edi,eax
  41375f:	sub    BYTE PTR [edx],cl
  413761:	push   eax
  413762:	jbe    0x4137c6
  413764:	xchg   DWORD PTR [ecx-0x29],ecx
  413767:	fstp   st(5)
  413769:	jno    0x413754
  41376b:	addr16 mov edx,0xe4a4f83c
  413771:	xchg   ecx,eax
  413772:	cmp    dl,0x4a
  413775:	pop    ds
  413776:	(bad)  
  413777:	ins    BYTE PTR es:[edi],dx
  413778:	sti    
  413779:	jne    0x4137f0
  41377b:	iret   
  41377c:	call   0xe74e:0xbddbc40b
  413783:	loope  0x4137f4
  413785:	or     eax,0x983d94f4
  41378a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41378b:	fnsave [esi+0x823524b]
  413791:	sub    ebx,DWORD PTR [ebx+0x41]
  413794:	je     0x413716
  413796:	jno    0x4137ec
  413798:	mov    al,0xb4
  41379a:	add    esp,ebp
  41379c:	fcom   DWORD PTR ds:0xcce4299c
  4137a2:	adc    DWORD PTR [edx+0x53],esp
  4137a5:	dec    ebp
  4137a6:	sbb    dh,BYTE PTR [edx]
  4137a8:	pop    esp
  4137a9:	stos   BYTE PTR es:[edi],al
  4137aa:	data16 clc 
  4137ac:	stc    
  4137ad:	pop    ecx
  4137ae:	pop    eax
  4137af:	mov    ecx,0xa0f4471c
  4137b4:	mov    bl,0x19
  4137b6:	sbb    BYTE PTR [edx-0x4b235cf6],ah
  4137bc:	(bad)  
  4137bd:	mov    cl,0x87
  4137bf:	icebp  
  4137c0:	aad    0xfe
  4137c2:	shr    BYTE PTR [edx],cl
  4137c4:	xor    dl,BYTE PTR [edi+0x76dfe843]
  4137ca:	aas    
  4137cb:	rcr    BYTE PTR [ebx+0x793913a8],0x67
  4137d2:	js     0x41384b
  4137d4:	sbb    bl,BYTE PTR [eax-0x3b]
  4137d7:	loopne 0x41377b
  4137d9:	jae    0x4137e9
  4137db:	repnz mov dh,0x20
  4137de:	xchg   ah,dh
  4137e0:	xchg   edx,eax
  4137e1:	cmc    
  4137e2:	aad    0x9b
  4137e4:	gs stos DWORD PTR es:[edi],eax
  4137e6:	test   BYTE PTR ds:0x9024041,al
  4137ec:	call   0xbb64:0x1e6e12b5
  4137f3:	push   es
  4137f4:	mov    bh,0x48
  4137f6:	cmp    edx,ecx
  4137f8:	xor    eax,0xde63d98e
  4137fd:	jmp    0x48c4:0x9d9b62d1
  413804:	outs   dx,BYTE PTR ds:[esi]
  413805:	fsub   st(1),st
  413807:	inc    edx
  413808:	jae    0x413838
  41380a:	fst    DWORD PTR fs:[esp+edi*2]
  41380e:	jne    0x41385d
  413810:	je     0x41382d
  413812:	mov    bh,0x66
  413814:	leave  
  413815:	outs   dx,DWORD PTR ds:[esi]
  413816:	(bad)  
  413817:	sbb    eax,eax
  413819:	jmp    0x71c1:0x73185108
  413820:	mov    ch,0xc0
  413822:	pushf  
  413823:	outs   dx,BYTE PTR ds:[esi]
  413824:	sbb    ebp,0xc415d26e
  41382a:	pop    edx
  41382b:	xor    BYTE PTR [edi+ecx*4+0x4645fd9d],0x76
  413833:	test   al,ah
  413835:	enter  0x502a,0x6c
  413839:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41383a:	jle    0x4138a2
  41383c:	gs in  al,0x5e
  41383f:	ror    BYTE PTR [edx+ebx*2-0x39fd61ba],0x66
  413847:	mov    eax,0x213af46c
  41384c:	dec    ebp
  41384d:	leave  
  41384e:	in     al,dx
  41384f:	aam    0x82
  413851:	arpl   WORD PTR [edi],bx
  413853:	jle    0x4138b2
  413855:	or     eax,0xd74658df
  41385a:	bound  ecx,QWORD PTR [ebx]
  41385c:	xor    al,0x9a
  41385e:	fist   DWORD PTR [edx-0x2a057431]
  413864:	fbld   TBYTE PTR [edi+0x17]
  413867:	xor    DWORD PTR [ebp-0x4dde140],esp
  41386d:	out    dx,eax
  41386e:	sbb    al,BYTE PTR [esi+0x31643e3f]
  413874:	cli    
  413875:	sbb    WORD PTR [ecx],dx
  413878:	inc    edx
  413879:	jno    0x413895
  41387b:	rcl    DWORD PTR [ecx-0x20],1
  41387e:	aam    0x53
  413880:	fadd   st(1),st
  413882:	retf   0x3787
  413885:	jg     0x4138e3
  413887:	jne    0x4138a2
  413889:	lds    esi,FWORD PTR [ecx+0x14]
  41388c:	call   0x2dededf8
  413891:	imul   edi,DWORD PTR [edx],0x10
  413894:	mov    esi,0xb55d377f
  413899:	xor    al,ch
  41389b:	sub    eax,0xea35f6e9
  4138a0:	lahf   
  4138a1:	imul   eax,DWORD PTR [ebp+0xd1e18d1],0x66
  4138a8:	out    0x19,eax
  4138aa:	in     eax,dx
  4138ab:	and    al,0x5a
  4138ad:	push   es
  4138ae:	cmp    eax,0x9f1ba7d7
  4138b3:	repz in al,dx
  4138b5:	mov    DWORD PTR [edx+0x4],0xe0d7b59
  4138bc:	std    
  4138bd:	arpl   WORD PTR [edi-0xf],bx
  4138c0:	sar    ah,1
  4138c2:	pushf  
  4138c3:	out    dx,eax
  4138c4:	fild   WORD PTR [ebp+0x7e]
  4138c7:	dec    ecx
  4138c8:	pusha  
  4138c9:	cdq    
  4138ca:	cmc    
  4138cb:	mov    edi,0x19200c55
  4138d0:	cmp    al,0xa4
  4138d2:	hlt    
  4138d3:	in     al,dx
  4138d4:	enter  0xebf9,0x73
  4138d8:	xchg   edx,eax
  4138d9:	xor    eax,0x6245b90b
  4138de:	inc    edx
  4138df:	add    cl,BYTE PTR [ecx+0x3e87989d]
  4138e5:	xor    eax,0xfc283fd1
  4138ea:	leave  
  4138eb:	sub    BYTE PTR [esi-0x6e],dl
  4138ee:	fild   QWORD PTR [eax]
  4138f0:	gs ret 0x9a12
  4138f4:	das    
  4138f5:	mov    ebp,0x9a1ed900
  4138fa:	fimul  DWORD PTR [esi+edi*2+0x5067d0b7]
  413901:	(bad)  
  413902:	mov    cl,0xd
  413904:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413905:	cmp    al,0xe1
  413907:	cwde   
  413908:	lods   eax,DWORD PTR ds:[esi]
  413909:	jge    0x4138a0
  41390b:	xchg   ebx,eax
  41390c:	jnp    0x4138ba
  41390e:	pop    ss
  41390f:	cmp    eax,DWORD PTR [esi]
  413911:	out    dx,eax
  413912:	lds    ecx,FWORD PTR [esi]
  413914:	popa   
  413915:	adc    DWORD PTR [ebp-0x2a0fc4fc],0xffffff85
  41391c:	sbb    ch,BYTE PTR [edx-0x766d72d7]
  413922:	pop    esp
  413923:	sub    al,0x51
  413925:	pusha  
  413926:	push   0x40a2f6f1
  41392b:	jne    0x41393e
  41392d:	jecxz  0x4138e8
  41392f:	repz mov eax,ds:0x3718f5e7
  413935:	cwde   
  413936:	pop    esi
  413937:	(bad)  
  413938:	ds das 
  41393a:	sub    eax,0x36935e69
  41393f:	dec    edx
  413940:	xchg   edx,eax
  413941:	fs xchg esp,eax
  413943:	mov    ebp,0xf6dc30e2
  413948:	sub    DWORD PTR [esi+0x29],0x36a80f70
  41394f:	cdq    
  413950:	cmp    ch,BYTE PTR [esi-0x6860072f]
  413956:	inc    edi
  413957:	mov    eax,0x5c895cd
  41395c:	in     eax,0x81
  41395e:	and    BYTE PTR [edx],ch
  413960:	sub    eax,0xca00175d
  413965:	leave  
  413966:	addr16 pop ecx
  413968:	dec    ecx
  413969:	dec    esp
  41396a:	mov    esi,0xfdf9572f
  41396f:	fcmovbe st,st(4)
  413971:	pop    ebx
  413972:	retf   
  413973:	scas   al,BYTE PTR es:[edi]
  413974:	xor    eax,0x6e98b4d8
  413979:	adc    al,0x43
  41397b:	sub    dh,BYTE PTR [esi-0xd]
  41397e:	sbb    ah,BYTE PTR [esp+ecx*2]
  413981:	mov    ebx,0x7a2157b2
  413986:	adc    al,0xef
  413988:	ins    DWORD PTR es:[edi],dx
  413989:	xlat   BYTE PTR ds:[ebx]
  41398a:	adc    eax,0x82b6d68d
  41398f:	push   eax
  413990:	test   esp,esi
  413992:	int3   
  413993:	mov    dl,0x1e
  413995:	xor    al,0x9d
  413997:	mov    edx,0x571a70f4
  41399c:	fisttp DWORD PTR [ecx+esi*8+0x7dc45a2e]
  4139a3:	push   es
  4139a4:	cmp    DWORD PTR [edx-0x211bc6a9],0xffffffac
  4139ab:	jge    0x413a08
  4139ad:	pop    ds
  4139ae:	adc    edi,DWORD PTR [edx+0x8ad8d79]
  4139b4:	xor    DWORD PTR [ebx+eax*8],0x77
  4139b8:	aaa    
  4139b9:	nop
  4139ba:	or     ah,bh
  4139bc:	pop    ds
  4139bd:	or     al,ah
  4139bf:	aad    0xbb
  4139c1:	cmp    ebx,edx
  4139c3:	push   esp
  4139c4:	dec    ebp
  4139c5:	in     al,dx
  4139c6:	ja     0x413a37
  4139c8:	cmp    BYTE PTR [edi],ah
  4139ca:	jge    0x4139f4
  4139cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139cd:	pop    ecx
  4139ce:	inc    eax
  4139cf:	ins    DWORD PTR es:[edi],dx
  4139d0:	cmp    BYTE PTR [edi+0x1fbf8f60],bl
  4139d6:	stos   BYTE PTR es:[edi],al
  4139d7:	inc    esi
  4139d8:	sub    DWORD PTR [edx],edi
  4139da:	dec    ebp
  4139db:	jmp    0x413a16
  4139dd:	lods   al,BYTE PTR ds:[esi]
  4139de:	dec    eax
  4139df:	fwait
  4139e0:	adc    edi,ebp
  4139e2:	sti    
  4139e3:	xor    al,0xc3
  4139e5:	daa    
  4139e6:	jne    0x41398e
  4139e8:	aas    
  4139e9:	jmp    0x2cce:0x524ddabc
  4139f0:	sub    ecx,ebx
  4139f2:	shr    ecx,1
  4139f4:	ds popf 
  4139f6:	mov    esi,DWORD PTR [edi+0x71]
  4139f9:	lods   eax,DWORD PTR ds:[esi]
  4139fa:	(bad)  
  4139fb:	sbb    esi,esp
  4139fd:	les    ebx,FWORD PTR [ecx-0x2d]
  413a00:	mov    esi,0xc26262f0
  413a05:	jmp    0xa091:0xedaaa8e9
  413a0c:	in     eax,dx
  413a0d:	or     eax,0xf4ecef2c
  413a12:	ret    0x4ea
  413a15:	icebp  
  413a16:	ins    BYTE PTR es:[edi],dx
  413a17:	or     BYTE PTR [edi+edx*4+0x65],ch
  413a1b:	lea    esi,[ebx+edx*4-0x4f2a80a5]
  413a22:	aaa    
  413a23:	(bad)  
  413a24:	out    dx,al
  413a25:	or     al,0xf8
  413a27:	inc    esi
  413a28:	mov    al,0xc6
  413a2a:	(bad)  
  413a2b:	repz pop ebx
  413a2d:	xor    BYTE PTR [edx+0x6],bh
  413a30:	sti    
  413a31:	scas   eax,DWORD PTR es:[edi]
  413a32:	xor    ah,BYTE PTR [edi+0x6c]
  413a35:	fld    TBYTE PTR [ecx-0x66d7998c]
  413a3b:	mov    cl,0x9d
  413a3d:	sahf   
  413a3e:	push   ebp
  413a3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a40:	mov    eax,0x256c8803
  413a45:	sub    al,0x16
  413a47:	fwait
  413a48:	pop    es
  413a49:	and    al,0xd
  413a4b:	xchg   esp,eax
  413a4c:	push   ebx
  413a4d:	cmc    
  413a4e:	pop    ebp
  413a4f:	std    
  413a50:	call   0x6e7:0xb4fb0d29
  413a57:	mov    al,ds:0xc9013cc7
  413a5c:	push   eax
  413a5d:	clc    
  413a5e:	or     dl,cl
  413a60:	fldl2t 
  413a62:	pop    ds
  413a63:	dec    esp
  413a64:	retf   
  413a65:	ss mov ebx,0xdf23d991
  413a6b:	mov    esi,0x13291aef
  413a70:	(bad)  
  413a72:	mov    esp,0x351c2e39
  413a77:	or     eax,ebx
  413a79:	mov    dh,0xe3
  413a7b:	jb     0x413ae2
  413a7d:	inc    eax
  413a7e:	xor    ebx,DWORD PTR [ecx*4-0xd2e0820]
  413a85:	popa   
  413a86:	add    edx,edi
  413a88:	adc    ebp,DWORD PTR [edx-0x63f2e126]
  413a8e:	adc    DWORD PTR es:[eax-0x1c],ecx
  413a92:	adc    ebx,ebx
  413a94:	jecxz  0x413a69
  413a96:	in     eax,0x4b
  413a98:	xchg   ecx,eax
  413a99:	nop
  413a9a:	fstp   QWORD PTR [edi]
  413a9c:	sbb    dh,BYTE PTR [edi]
  413a9e:	leave  
  413a9f:	mov    ecx,0x981f25ff
  413aa4:	sbb    DWORD PTR [edx-0x207a06ec],eax
  413aaa:	ret    
  413aab:	clc    
  413aac:	xor    BYTE PTR [edi],al
  413aae:	jmp    0x58146e7
  413ab3:	add    eax,DWORD PTR [edx+edx*8+0x46643fb4]
  413aba:	sahf   
  413abb:	out    dx,al
  413abc:	int    0xc9
  413abe:	pop    esi
  413abf:	xor    al,0xae
  413ac1:	cmp    DWORD PTR ss:[eax],0xfffffffa
  413ac5:	adc    BYTE PTR [ecx-0x35623017],bl
  413acb:	adc    al,0x16
  413acd:	and    edi,DWORD PTR [ebx]
  413acf:	out    dx,eax
  413ad0:	repnz mov edx,0xab9b09a1
  413ad6:	repnz cwde 
  413ad8:	ins    BYTE PTR es:[edi],dx
  413ad9:	pusha  
  413ada:	push   ss
  413adb:	push   ebx
  413adc:	or     eax,0x5003b7b1
  413ae1:	jns    0x413a85
  413ae3:	cmp    eax,0x66f06f15
  413ae8:	adc    eax,0x4fdd9f70
  413aed:	fmul   QWORD PTR [edi-0x17]
  413af0:	(bad)  
  413af1:	mov    ds:0x7ff406c4,eax
  413af6:	fdivrp st(0),st
  413af8:	mov    eax,DWORD PTR [esp+eax*1-0x109c7204]
  413aff:	shl    DWORD PTR [edi-0x4ae65de1],1
  413b05:	push   0xd1f52f5d
  413b0a:	inc    DWORD PTR [edi-0x9]
  413b0d:	push   0xffffffc3
  413b0f:	icebp  
  413b10:	push   ebx
  413b11:	and    edi,ebx
  413b13:	inc    esi
  413b14:	push   esi
  413b15:	push   esi
  413b16:	ret    
  413b17:	jb     0x413ae6
  413b19:	push   0xffffffa1
  413b1b:	mov    eax,ds:0xaeb1a6c1
  413b20:	popa   
  413b21:	sbb    eax,0xd2bac54f
  413b26:	cmc    
  413b27:	rcl    al,cl
  413b29:	lds    edx,FWORD PTR [ecx-0x67]
  413b2c:	mov    dl,0xa2
  413b2e:	dec    esi
  413b2f:	inc    edi
  413b30:	mov    cs,WORD PTR [ebx-0x56]
  413b33:	ret    
  413b34:	xchg   ebp,eax
  413b35:	mov    ecx,0x7640cf4
  413b3a:	sub    BYTE PTR [esi-0x76],al
  413b3d:	rol    BYTE PTR [ecx+0x53],1
  413b40:	or     esp,ecx
  413b42:	lock and ch,BYTE PTR [ebp-0x2c871bac]
  413b49:	sbb    al,0x85
  413b4b:	aas    
  413b4c:	and    cl,dh
  413b4e:	jb     0x413b7c
  413b50:	jb     0x413b9e
  413b52:	pop    ecx
  413b53:	sbb    eax,0x12c9ca7d
  413b58:	xchg   esp,eax
  413b59:	push   ebx
  413b5a:	in     eax,dx
  413b5b:	fadd   DWORD PTR [esi-0x17f51abe]
  413b61:	mov    ebp,0x2dc7cbf
  413b66:	jle    0x413bdc
  413b68:	sbb    BYTE PTR [edx-0x55cd18a7],dl
  413b6e:	pop    esi
  413b6f:	(bad)  
  413b70:	fwait
  413b71:	jns    0x413ba6
  413b73:	call   0xa554:0x9c3ce150
  413b7a:	pop    ebp
  413b7b:	into   
  413b7c:	jl     0x413bce
  413b7e:	fild   WORD PTR [edx+esi*8+0x3cf60dd6]
  413b85:	cwde   
  413b86:	(bad)  
  413b87:	aad    0x26
  413b89:	stos   BYTE PTR es:[edi],al
  413b8a:	and    BYTE PTR [eax+0x20],dh
  413b8d:	mov    esp,0x29b6863e
  413b92:	adc    DWORD PTR [edi-0x30d22c92],edi
  413b98:	out    dx,eax
  413b99:	cld    
  413b9a:	xor    edx,DWORD PTR ds:0xdc27a4e
  413ba0:	(bad)  ds:0x6c7f8c5a
  413ba6:	(bad)  
  413ba7:	ja     0x413b3e
  413ba9:	or     ah,BYTE PTR [edx+0x5fcab366]
  413baf:	lock jmp 0x531c:0x2b5e5878
  413bb7:	loope  0x413b40
  413bb9:	push   esp
  413bba:	mov    bh,BYTE PTR [edi-0x70815691]
  413bc0:	mov    al,0xb5
  413bc2:	jae    0x413b8a
  413bc4:	fbstp  TBYTE PTR ds:0x5e70e47d
  413bca:	pop    ss
  413bcb:	mov    ebp,0x813535c0
  413bd0:	pop    eax
  413bd1:	xchg   ebp,eax
  413bd2:	mov    dh,0x1b
  413bd4:	in     eax,dx
  413bd5:	loop   0x413be5
  413bd7:	ret    0xd1dd
  413bda:	push   cs
  413bdb:	mov    edi,0xb883ad04
  413be0:	repnz imul ebx,DWORD PTR [ebp-0x65124193],0x5a
  413be8:	mov    eax,ds:0xa9e06e6
  413bed:	gs (bad) 
  413bef:	(bad)  
  413bf0:	fstp   QWORD PTR [ecx]
  413bf2:	or     al,0x35
  413bf4:	pop    edx
  413bf5:	int    0x2a
  413bf7:	sub    ecx,edx
  413bf9:	(bad)  
  413bfa:	fnstcw WORD PTR [esi+0x26ed817f]
  413c00:	sbb    DWORD PTR [eax-0x3f],0x2c
  413c04:	jecxz  0x413bdc
  413c06:	aaa    
  413c07:	imul   edx,ebp,0xe158a9bc
  413c0d:	cmc    
  413c0e:	sub    BYTE PTR [esi-0x5b],dl
  413c11:	es (bad) 
  413c13:	adc    al,0xb5
  413c15:	(bad)  
  413c16:	cmc    
  413c17:	mov    bl,0xfc
  413c19:	push   esp
  413c1a:	inc    ebp
  413c1b:	xor    cl,BYTE PTR [edi+ebp*8+0x59]
  413c1f:	pop    ds
  413c20:	imul   ebp,ecx,0x6a9a70e4
  413c26:	lea    ebp,[ecx]
  413c28:	loop   0x413c17
  413c2a:	enter  0x54c,0x4d
  413c2e:	jo     0x413c14
  413c30:	inc    ebx
  413c31:	mov    ecx,0x51a7347
  413c36:	(bad)  
  413c37:	jns    0x413c10
  413c39:	push   esi
  413c3a:	mov    eax,0x3d279628
  413c3f:	icebp  
  413c40:	sbb    DWORD PTR [ecx-0x1dda6dcb],edx
  413c46:	hlt    
  413c47:	shl    ebx,cl
  413c49:	and    eax,0xea3790ed
  413c4e:	jg     0x413c95
  413c50:	xor    al,BYTE PTR [edx]
  413c52:	push   0x773796ae
  413c57:	js     0x413c36
  413c59:	fcmove st,st(3)
  413c5b:	daa    
  413c5c:	or     eax,DWORD PTR [esp+edx*8+0x72]
  413c60:	je     0x413c3d
  413c62:	xchg   BYTE PTR [ecx+0x56],dl
  413c65:	inc    ebp
  413c66:	inc    esi
  413c67:	popa   
  413c68:	test   eax,0x79f061ec
  413c6d:	inc    ecx
  413c6e:	jbe    0x413c1e
  413c70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c71:	rol    ah,0x30
  413c74:	sub    eax,0x12c5355e
  413c79:	sub    edi,DWORD PTR [ecx]
  413c7b:	jno    0x413cdc
  413c7d:	test   DWORD PTR [esi],ebp
  413c7f:	stos   DWORD PTR es:[edi],eax
  413c80:	jae    0x413c5d
  413c82:	mov    bh,0x7f
  413c84:	mov    dl,0x93
  413c86:	hlt    
  413c87:	jmp    0x39c5c526
  413c8c:	fsubrp st(3),st
  413c8e:	mov    esp,0x16c23fb8
  413c93:	(bad)  [ebx]
  413c95:	(bad)  [ebx-0x60]
  413c98:	dec    esi
  413c99:	push   esi
  413c9a:	mov    eax,0x2fb17fae
  413c9f:	in     eax,dx
  413ca0:	mov    esp,0xa10df055
  413ca5:	cmovns edx,DWORD PTR [ebx+0xf]
  413ca9:	lods   al,BYTE PTR ds:[esi]
  413caa:	xor    DWORD PTR [eax+ecx*2-0x55],esi
  413cae:	sub    BYTE PTR [ebp-0x1c],dl
  413cb1:	lock rol bl,cl
  413cb4:	pusha  
  413cb5:	into   
  413cb6:	push   cs
  413cb7:	enter  0xa067,0x65
  413cbb:	shr    dl,1
  413cbd:	cs or  al,0xe5
  413cc0:	sahf   
  413cc1:	dec    ebp
  413cc2:	xchg   esp,eax
  413cc3:	fcmovnb st,st(7)
  413cc5:	push   es
  413cc6:	fs jp  0x413c90
  413cc9:	loop   0x413c96
  413ccb:	push   ebp
  413ccc:	and    al,0x30
  413cce:	fwait
  413ccf:	dec    esi
  413cd0:	jg     0x413c6c
  413cd2:	push   0xaf3b3435
  413cd7:	test   ebx,0x44776c7d
  413cdd:	inc    ebx
  413cde:	adc    dh,cl
  413ce0:	sbb    al,0x78
  413ce2:	xor    eax,0xe3469611
  413ce7:	cmp    eax,0x56a8880b
  413cec:	mov    ecx,0x4c38afc6
  413cf1:	add    al,0x5f
  413cf3:	jb     0x413ccf
  413cf5:	outs   dx,BYTE PTR ds:[esi]
  413cf6:	ds icebp 
  413cf8:	stos   DWORD PTR es:[edi],eax
  413cf9:	add    eax,0x8d2a91d5
  413cfe:	iret   
  413cff:	(bad)  
  413d00:	frstor [ebp-0x4384ca94]
  413d06:	sub    cl,BYTE PTR [edx+0x2f]
  413d09:	pop    edx
  413d0a:	push   edx
  413d0b:	or     DWORD PTR [edi+0x19757d3a],eax
  413d11:	and    BYTE PTR [edi+0x2cc89d84],bl
  413d17:	mov    al,ds:0x3cddb8dc
  413d1c:	jg     0x413d30
  413d1e:	mov    eax,0x9aa43838
  413d23:	and    ebx,DWORD PTR [eax]
  413d25:	jo     0x413ce1
  413d27:	scas   al,BYTE PTR es:[edi]
  413d28:	jne    0x413d3c
  413d2a:	jecxz  0x413d33
  413d2c:	add    eax,0x6aa83923
  413d31:	fsubr  st,st(4)
  413d33:	clc    
  413d34:	cmc    
  413d35:	ja     0x413da9
  413d37:	xchg   edx,eax
  413d38:	ins    BYTE PTR es:[edi],dx
  413d39:	leave  
  413d3a:	mov    dl,0xcd
  413d3c:	in     eax,dx
  413d3d:	and    BYTE PTR [edx],bl
  413d3f:	dec    esi
  413d40:	ror    DWORD PTR [ecx+ecx*4+0x1000e5f7],cl
  413d47:	lods   eax,DWORD PTR ds:[esi]
  413d48:	sbb    DWORD PTR [eax+0x44],ebx
  413d4b:	pop    ds
  413d4c:	mov    cl,BYTE PTR [ebp+0x4e7d605]
  413d52:	sub    DWORD PTR [eax-0x3a],0x6e
  413d56:	test   DWORD PTR [ebx+ebx*8+0x274c757b],ebp
  413d5d:	pop    es
  413d5e:	in     eax,dx
  413d5f:	mov    ebx,0xf2f830fb
  413d64:	retf   0x1b3c
  413d67:	retf   
  413d68:	lea    edi,[ebx+ebp*4-0x2]
  413d6c:	pusha  
  413d6d:	jb     0x413db8
  413d6f:	into   
  413d70:	or     ah,BYTE PTR [ebp-0x22207732]
  413d76:	add    cl,0xfa
  413d79:	test   DWORD PTR [ecx+0x50],esi
  413d7c:	aas    
  413d7d:	jge    0x413d44
  413d7f:	sbb    al,0x8e
  413d81:	div    DWORD PTR [edi-0x52]
  413d84:	aaa    
  413d85:	int3   
  413d86:	mov    bl,0xc2
  413d88:	add    esp,edx
  413d8a:	mov    ch,0xe3
  413d8c:	mov    edx,0x32fd0e2d
  413d91:	addr16 cmc 
  413d93:	inc    edi
  413d94:	add    eax,0xc30941aa
  413d99:	inc    esp
  413d9a:	ds cmc 
  413d9c:	sbb    BYTE PTR [ebx],bl
  413d9e:	in     eax,0x2e
  413da0:	mov    cl,0x4c
  413da2:	call   0xcb0aa44b
  413da7:	into   
  413da8:	adc    BYTE PTR [ebx],dh
  413daa:	loope  0x413d4b
  413dac:	push   ebx
  413dad:	sub    esp,DWORD PTR [ebp+0x63c2ea76]
  413db3:	push   edi
  413db4:	fs pop esp
  413db6:	jle    0x413de3
  413db8:	pop    esi
  413db9:	xchg   ecx,eax
  413dba:	sar    dh,0x20
  413dbd:	sbb    dh,BYTE PTR [ebx-0x6a]
  413dc0:	dec    esp
  413dc1:	mul    BYTE PTR ds:[eax-0x5d733bb]
  413dc8:	cmp    ch,BYTE PTR [eax+0x18]
  413dcb:	jb     0x413d7b
  413dcd:	mov    esp,0x84f71822
  413dd2:	and    BYTE PTR [edx+0x7f],bl
  413dd5:	mov    ds:0xa6eed6de,eax
  413dda:	push   es
  413ddb:	push   ss
  413ddc:	stos   BYTE PTR es:[edi],al
  413ddd:	push   ss
  413dde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ddf:	in     eax,0xea
  413de1:	sub    BYTE PTR [eax+0x6b],ch
  413de4:	stc    
  413de5:	push   ecx
  413de6:	fucomp st(2)
  413de8:	inc    edi
  413de9:	mul    DWORD PTR [esp+edx*2-0x362ac3e3]
  413df0:	push   ss
  413df1:	mov    edx,0x1d453518
  413df6:	mov    ds,WORD PTR [esi+0x788ab94]
  413dfc:	jae    0x413db4
  413dfe:	pop    ebp
  413dff:	dec    ebx
  413e00:	sbb    DWORD PTR [edx+ecx*1],edx
  413e03:	mov    ah,0xff
  413e05:	adc    bh,dl
  413e07:	psubq  mm6,QWORD PTR ds:0x2af3cfe3
  413e0e:	test   BYTE PTR [esi+0x75045483],ch
  413e14:	xchg   ebx,eax
  413e15:	aad    0xcb
  413e17:	xchg   ebp,eax
  413e18:	imul   edi,DWORD PTR [edx],0x76eb0d8e
  413e1e:	popw   ss
  413e20:	jne    0x413e00
  413e22:	sbb    edi,edx
  413e24:	mov    fs,WORD PTR [esi-0x76]
  413e27:	dec    edx
  413e28:	imul   edi,DWORD PTR [edx+ebp*2],0xffffff98
  413e2c:	jg     0x413dd7
  413e2e:	sub    edi,DWORD PTR [ecx+0x5a3a0f20]
  413e34:	inc    ebp
  413e35:	jge    0x413df8
  413e37:	xor    edi,0x1deb947
  413e3d:	jae    0x413e3d
  413e3f:	xchg   ebx,eax
  413e40:	dec    edx
  413e41:	pushf  
  413e42:	push   ds
  413e43:	mov    cl,al
  413e45:	int3   
  413e46:	lods   al,BYTE PTR ds:[esi]
  413e47:	mov    ds:0xeb54304,al
  413e4c:	cmp    al,0xe3
  413e4e:	test   DWORD PTR [esi],0xc18e93f6
  413e54:	test   al,0x53
  413e56:	mov    esp,0xd086dcdb
  413e5b:	fnstcw WORD PTR [edi]
  413e5d:	enter  0xa7,0xf7
  413e61:	aad    0x73
  413e63:	je     0x413e69
  413e65:	inc    esi
  413e66:	and    edi,DWORD PTR [ebx+ebx*4+0x15]
  413e6a:	lahf   
  413e6b:	inc    ebp
  413e6c:	retf   
  413e6d:	cwde   
  413e6e:	inc    ebx
  413e6f:	fstp   DWORD PTR [ebp+0x27]
  413e72:	add    edi,DWORD PTR [edi-0x5b2fcf1e]
  413e78:	push   es
  413e79:	shl    BYTE PTR [edx-0x6cd3479a],0x89
  413e80:	mov    ah,0x51
  413e82:	or     al,0x9
  413e84:	cli    
  413e85:	xchg   ebx,eax
  413e86:	inc    ecx
  413e87:	dec    edx
  413e88:	les    eax,FWORD PTR [ebx]
  413e8a:	dec    eax
  413e8b:	ffreep st(4)
  413e8d:	xor    al,0xdd
  413e8f:	stos   DWORD PTR es:[edi],eax
  413e90:	jne    0x413e29
  413e92:	shl    esp,cl
  413e94:	fimul  DWORD PTR [ecx]
  413e96:	retf   
  413e97:	cmp    ebp,DWORD PTR [edi]
  413e99:	add    dl,BYTE PTR [esi]
  413e9b:	popf   
  413e9c:	pop    ds
  413e9d:	add    ecx,DWORD PTR [esi+ecx*4+0x42]
  413ea1:	sub    ch,BYTE PTR [ebx+0x48b79da0]
  413ea7:	jmp    0x413e3a
  413ea9:	fild   QWORD PTR ds:0x3104e164
  413eaf:	dec    ecx
  413eb0:	fnstenv [esi+0x4b1aeba4]
  413eb6:	addr16 jae 0x413e43
  413eb9:	out    0xee,al
  413ebb:	(bad)  
  413ebc:	rcl    DWORD PTR [eax-0x41],cl
  413ebf:	and    bh,BYTE PTR [eax+0x49]
  413ec2:	push   ebx
  413ec3:	lds    eax,FWORD PTR [esi]
  413ec5:	test   eax,0x9d1d2897
  413eca:	stos   DWORD PTR es:[edi],eax
  413ecb:	xchg   ecx,eax
  413ecc:	(bad)  
  413ecd:	pusha  
  413ece:	pushf  
  413ecf:	cwde   
  413ed0:	add    al,0xf9
  413ed2:	aaa    
  413ed3:	loopne 0x413f49
  413ed5:	es out 0x20,al
  413ed8:	add    ebp,esi
  413eda:	jno    0x413ea5
  413edc:	add    eax,0x2566aa07
  413ee1:	jns    0x413ec4
  413ee3:	mov    edi,0xe3841e38
  413ee8:	pop    eax
  413ee9:	inc    eax
  413eea:	mov    ebp,0x842db73c
  413eef:	call   0xd3e5:0xd207fec9
  413ef6:	imul   BYTE PTR [ebx]
  413ef8:	in     al,0x30
  413efa:	sbb    al,0x8a
  413efc:	leave  
  413efd:	iret   
  413efe:	std    
  413eff:	fisub  WORD PTR [eax+0x7ce6a73b]
  413f05:	es cwde 
  413f07:	xor    al,0x8e
  413f09:	daa    
  413f0a:	shr    BYTE PTR [ecx],0xba
  413f0d:	prefetcht2 BYTE PTR [edx]
  413f10:	arpl   WORD PTR [ecx-0x21],ax
  413f13:	dec    ebx
  413f14:	inc    ebp
  413f15:	and    edi,ecx
  413f17:	pop    ecx
  413f18:	mov    al,0x30
  413f1a:	out    0x71,al
  413f1c:	cmp    esp,DWORD PTR [ebp-0x7b]
  413f1f:	xlat   BYTE PTR ds:[bx]
  413f21:	inc    esi
  413f22:	xor    esp,DWORD PTR [esi]
  413f24:	sahf   
  413f25:	sar    ch,1
  413f27:	sub    BYTE PTR [ebp-0x5],0xaf
  413f2b:	cmp    DWORD PTR [ebx],edx
  413f2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f2e:	(bad)  
  413f2f:	scas   al,BYTE PTR es:[edi]
  413f30:	adc    DWORD PTR [ebx-0xb],ecx
  413f33:	jge    0x413f2f
  413f35:	mov    eax,ds:0xb922ada5
  413f3a:	shl    BYTE PTR [ebp-0xb],0x78
  413f3e:	adc    cl,bl
  413f40:	ins    BYTE PTR es:[edi],dx
  413f41:	or     DWORD PTR [eax+0x7dbee980],ebp
  413f47:	push   0xad91c54b
  413f4c:	call   0xc3beff4
  413f51:	cs leave 
  413f53:	xchg   edi,eax
  413f54:	fdiv   QWORD PTR [edx]
  413f56:	pop    esi
  413f57:	mov    dl,0x9f
  413f59:	imul   edx,DWORD PTR [eax],0xa9bb07a3
  413f5f:	push   ss
  413f60:	loop   0x413efe
  413f62:	not    DWORD PTR [ebx-0xac72459]
  413f68:	ret    0x3632
  413f6b:	inc    edi
  413f6c:	xchg   esp,eax
  413f6d:	aaa    
  413f6e:	(bad)  
  413f6f:	(bad)  
  413f70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f71:	div    DWORD PTR [esp+edx*2-0x20]
  413f75:	push   esi
  413f76:	pop    ss
  413f77:	(bad)  
  413f78:	fisub  WORD PTR [esi-0x29]
  413f7b:	and    DWORD PTR [esi-0x14],eax
  413f7e:	lahf   
  413f7f:	sub    DWORD PTR [ecx-0x2e],edx
  413f82:	pop    ebp
  413f83:	adc    esi,edi
  413f85:	dec    eax
  413f86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f87:	add    eax,0xef0c155
  413f8c:	cmp    al,0xa9
  413f8e:	push   0x676e5379
  413f93:	repnz sbb BYTE PTR [esi-0x2d8ce441],ah
  413f9a:	pop    ebp
  413f9b:	jne    0x413f7b
  413f9d:	dec    esi
  413f9e:	or     BYTE PTR [ebp-0x64],ah
  413fa1:	jmp    0x708c:0x2d404ea6
  413fa8:	in     eax,0xd9
  413faa:	inc    ebx
  413fac:	(bad)  
  413fad:	das    
  413fae:	cmp    al,ch
  413fb0:	or     BYTE PTR [ebp+0x3e6ebb43],dh
  413fb6:	nop
  413fb7:	fdiv   st(4),st
  413fb9:	lods   eax,DWORD PTR ds:[esi]
  413fba:	je     0x413fb8
  413fbc:	(bad)  
  413fbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fbe:	das    
  413fbf:	lock pop ecx
  413fc1:	in     al,0x30
  413fc3:	(bad)  
  413fc4:	in     eax,0x74
  413fc6:	shr    DWORD PTR ds:0x6969c8e8,1
  413fcc:	inc    eax
  413fcd:	and    edi,DWORD PTR [ebp-0x56]
  413fd0:	lahf   
  413fd1:	and    eax,0x43e057dc
  413fd6:	pop    esi
  413fd7:	ss pop ecx
  413fd9:	clc    
  413fda:	(bad)  [ebp+0x3b6c524c]
  413fe0:	mov    al,ds:0xb08825d2
  413fe5:	sub    esi,DWORD PTR [edi-0x74f19831]
  413feb:	ja     0x414036
  413fed:	shr    BYTE PTR [eax-0x117d6884],cl
  413ff3:	cmp    DWORD PTR [esi],0x8a958fb2
  413ff9:	pop    ebx
  413ffa:	xchg   ebx,eax
  413ffb:	or     eax,0x72806be2
  414000:	mov    ecx,0x83264e97
  414005:	int3   
  414006:	aaa    
  414007:	sub    BYTE PTR cs:[edi+esi*8-0x219845d0],0x59
  414010:	test   DWORD PTR ds:0xd7de3dc1,ebx
  414016:	call   0xb77e:0xdfb2196e
  41401d:	adc    al,0x10
  41401f:	cmp    eax,0x7bb6fee7
  414024:	jo     0x414089
  414026:	sbb    eax,0x9daee866
  41402b:	and    DWORD PTR [ebx+0x76f778a8],0x2d57ee7
  414035:	adc    ah,dh
  414037:	pop    ss
  414038:	and    cl,BYTE PTR [esp+edi*1-0x4e]
  41403c:	je     0x4140af
  41403e:	add    bl,BYTE PTR [edx+0x4789534e]
  414044:	mov    ds:0xe043b,al
  414049:	push   esi
  41404a:	mov    WORD PTR [edx+0x41],ds
  41404d:	dec    edi
  41404e:	ds jno 0x414048
  414051:	jo     0x8a2a9e06
  414057:	inc    esi
  414058:	aaa    
  414059:	stos   DWORD PTR es:[edi],eax
  41405a:	jne    0x413fe7
  41405c:	xor    eax,DWORD PTR [ebx+0x539da5e9]
  414062:	sub    eax,0xa092a8cb
  414067:	xchg   BYTE PTR [edx+eiz*2-0x28],cl
  41406b:	jge    0x4140dd
  41406d:	ins    DWORD PTR es:[edi],dx
  41406e:	jbe    0x414055
  414070:	adc    DWORD PTR [edx+ecx*2-0x67],ebx
  414074:	mov    edx,0xbce1e19b
  414079:	icebp  
  41407a:	outs   dx,DWORD PTR ds:[esi]
  41407b:	adc    DWORD PTR [esi],0x29036aeb
  414081:	ds lahf 
  414083:	and    DWORD PTR [eax],ecx
  414085:	jle    0x414071
  414087:	inc    ecx
  414088:	loop   0x414050
  41408a:	sar    al,1
  41408c:	popa   
  41408d:	hlt    
  41408e:	or     DWORD PTR [edx],esp
  414090:	mov    dh,0x3
  414092:	inc    esp
  414093:	push   eax
  414094:	jge    0x4140d7
  414096:	mov    ch,BYTE PTR [edx]
  414098:	(bad)  
  41409a:	in     eax,0xe7
  41409c:	stc    
  41409d:	out    dx,eax
  41409e:	lods   al,BYTE PTR ds:[esi]
  41409f:	adc    esi,DWORD PTR [edx+0x33]
  4140a2:	xlat   BYTE PTR ds:[ebx]
  4140a3:	mov    eax,ds:0x403a9b72
  4140a8:	push   es
  4140a9:	inc    ebx
  4140aa:	mov    bl,0xb2
  4140ac:	je     0x4140e2
  4140ae:	xchg   DWORD PTR [edx],esi
  4140b0:	jge    0x4140f5
  4140b2:	into   
  4140b3:	push   ebp
  4140b4:	push   ds
  4140b5:	xchg   dh,ah
  4140b7:	arpl   WORD PTR [ebp+0x6],di
  4140ba:	jae    0x414091
  4140bc:	ins    BYTE PTR es:[edi],dx
  4140bd:	dec    ebp
  4140be:	jle    0x4140f7
  4140c0:	repnz adc DWORD PTR [ecx+0x1f],edi
  4140c4:	or     bh,bh
  4140c6:	pop    es
  4140c7:	pusha  
  4140c8:	in     al,dx
  4140c9:	fwait
  4140ca:	adc    DWORD PTR [eax-0x65fd72e],esi
  4140d0:	inc    edi
  4140d1:	inc    edx
  4140d2:	jle    0x4140bb
  4140d4:	inc    esp
  4140d5:	add    al,0xe8
  4140d7:	jecxz  0x41412e
  4140d9:	or     BYTE PTR [edi],cl
  4140db:	mov    al,0x68
  4140dd:	sub    edi,ecx
  4140df:	inc    ebp
  4140e0:	pop    esp
  4140e1:	jnp    0x414120
  4140e3:	cmp    edi,0x1397b31c
  4140e9:	push   esi
  4140ea:	jecxz  0x414155
  4140ec:	push   ebp
  4140ed:	and    BYTE PTR [edi+0x6f],0xfa
  4140f1:	pop    esi
  4140f2:	push   cs
  4140f3:	mov    dh,0x3a
  4140f5:	ja     0x414134
  4140f7:	push   0xffffffc2
  4140f9:	mov    ah,0xf2
  4140fb:	mov    ch,0x2d
  4140fd:	retf   
  4140fe:	jbe    0x414170
  414100:	sub    eax,0x32c3949d
  414105:	adc    BYTE PTR [esi+0x1efc1400],ch
  41410b:	mov    bl,0x5c
  41410d:	mov    dh,0x3b
  41410f:	sahf   
  414110:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414111:	popa   
  414112:	es or  eax,0x78411b9f
  414118:	cmp    cl,al
  41411a:	ficomp WORD PTR [edx-0x31904281]
  414120:	scas   al,BYTE PTR es:[edi]
  414121:	or     eax,0xda9332df
  414126:	js     0x41410d
  414128:	xchg   edi,eax
  414129:	scas   eax,DWORD PTR es:[edi]
  41412a:	pop    edi
  41412b:	ins    DWORD PTR es:[edi],dx
  41412c:	add    ebx,DWORD PTR [eax-0x579aefb4]
  414132:	ret    
  414133:	loopne 0x4141ab
  414135:	pop    ss
  414136:	sti    
  414137:	add    eax,0xa3876569
  41413c:	jns    0x414103
  41413e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41413f:	fdivp  st(4),st
  414141:	mov    edi,DWORD PTR [ebx+esi*1]
  414144:	retf   0x8365
  414147:	or     eax,0x90217bf1
  41414c:	rol    BYTE PTR [eax+0x71],1
  41414f:	test   DWORD PTR ds:0xf545f3ed,eax
  414155:	or     al,bh
  414157:	mov    esp,0x7ed2e0b0
  41415c:	enter  0x55a3,0xd4
  414160:	in     al,dx
  414161:	clc    
  414162:	(bad)  
  414163:	or     esi,DWORD PTR [ebp+0x335b0b37]
  414169:	or     ecx,DWORD PTR [ebx-0x28fab1e4]
  41416f:	push   edi
  414170:	mov    dl,0x78
  414172:	sahf   
  414173:	ficomp DWORD PTR [esi+0x1c]
  414176:	retf   0x4b51
  414179:	(bad)  
  41417a:	gs mov bh,0xd5
  41417d:	or     DWORD PTR [edi+0x67ea929a],ebx
  414183:	adc    al,0x48
  414185:	cli    
  414186:	pop    edi
  414187:	adc    DWORD PTR [edx],edi
  414189:	enter  0x74f2,0xe1
  41418d:	aaa    
  41418e:	sub    dh,BYTE PTR fs:[edi]
  414191:	in     eax,dx
  414192:	out    0xd8,eax
  414194:	outs   dx,BYTE PTR ds:[esi]
  414195:	pop    ecx
  414196:	jb     0x4141fc
  414198:	ret    0x71ae
  41419b:	inc    eax
  41419c:	fsubr  QWORD PTR [ebp+0x57]
  41419f:	xchg   ebx,eax
  4141a0:	sbb    cl,BYTE PTR [ecx]
  4141a2:	aaa    
  4141a3:	push   cs
  4141a4:	and    BYTE PTR [edi-0x4a6b61e3],al
  4141aa:	(bad)  
  4141ab:	scas   eax,DWORD PTR es:[edi]
  4141ac:	jne    0x41420f
  4141ae:	scas   eax,DWORD PTR es:[edi]
  4141af:	test   eax,0x4dbc9558
  4141b4:	mov    ch,0xb7
  4141b6:	in     al,0x88
  4141b8:	xor    ch,cl
  4141ba:	repnz fidiv DWORD PTR ds:0xe555adbe
  4141c1:	add    eax,DWORD PTR [edx+0x5b]
  4141c4:	lock inc eax
  4141c6:	xor    DWORD PTR [edx],ecx
  4141c8:	adc    ebp,DWORD PTR [eax*4+0x77306b76]
  4141cf:	ret    
  4141d0:	es jb  0x41418d
  4141d3:	add    ecx,esi
  4141d5:	sub    DWORD PTR [ebp+0x57],0xffffffba
  4141d9:	jbe    0x414250
  4141db:	mov    dh,0xf8
  4141dd:	pop    esi
  4141de:	cli    
  4141df:	xchg   edi,eax
  4141e0:	imul   edi,DWORD PTR [ebx],0x19042aec
  4141e6:	sti    
  4141e7:	dec    ebx
  4141e8:	mov    edi,0xdec8b50b
  4141ed:	pop    ebp
  4141ee:	ret    0xe03
  4141f1:	push   es
  4141f2:	pop    esp
  4141f3:	xor    BYTE PTR [esi+edi*2],cl
  4141f6:	mov    ds:0x3873a2f5,al
  4141fb:	lock sub BYTE PTR [ecx],al
  4141fe:	pop    ecx
  4141ff:	push   ecx
  414200:	dec    esp
  414201:	ret    
  414202:	or     eax,0x66aadcdb
  414207:	sbb    BYTE PTR [esi+0x1b3157ac],bl
  41420d:	adc    dh,BYTE PTR [ebx-0x1f]
  414210:	in     al,0x1f
  414212:	sbb    ebp,DWORD PTR [esi]
  414214:	test   al,0x74
  414216:	push   edx
  414217:	pop    esi
  414218:	push   esp
  414219:	and    DWORD PTR [edi+0x47],ebx
  41421c:	mov    fs,WORD PTR [eax+0x6302e6c2]
  414222:	shl    DWORD PTR [edi+0x2a],1
  414225:	sbb    eax,0xdb7e555a
  41422a:	in     al,0x31
  41422c:	mov    ebx,0x677ca28a
  414231:	pop    ss
  414232:	addr16 in eax,0xd1
  414235:	out    dx,eax
  414236:	scas   eax,DWORD PTR es:[edi]
  414237:	and    al,0xa9
  414239:	out    0xb3,al
  41423b:	jge    0x414274
  41423d:	mov    DWORD PTR [esi+0x3e],eax
  414240:	aam    0xb5
  414242:	add    BYTE PTR [esi-0x16ccc0f2],ah
  414248:	mov    eax,ds:0x47f8769f
  41424d:	test   edx,eax
  41424f:	mov    eax,0x4d03bc0c
  414254:	xchg   ebp,edi
  414256:	add    ebp,DWORD PTR [ecx-0x2c]
  414259:	xchg   BYTE PTR [edi],dh
  41425b:	test   DWORD PTR [edi-0xf],0x97b080a6
  414262:	in     al,0x60
  414264:	gs jl  0x41421f
  414267:	or     ah,BYTE PTR [esi+0x51c2d875]
  41426d:	arpl   WORD PTR [esi+edx*8],bp
  414270:	sub    eax,DWORD PTR [edi+0x747874e3]
  414276:	dec    edx
  414277:	pop    ds
  414278:	addr16 arpl sp,bp
  41427b:	sbb    al,dh
  41427d:	fwait
  41427e:	pop    edi
  41427f:	mov    al,0xbc
  414281:	pop    ecx
  414282:	sub    eax,0x1b560d25
  414287:	rol    BYTE PTR [esi+0x17],cl
  41428a:	mov    al,ds:0xacf5dd48
  41428f:	loope  0x41421a
  414291:	mov    eax,ds:0xb107f6eb
  414296:	sub    DWORD PTR [ebx+0x58bc2e20],esi
  41429c:	inc    edi
  41429d:	fldenv [ecx+0x18f69f2f]
  4142a3:	xchg   esi,eax
  4142a4:	outs   dx,BYTE PTR ds:[esi]
  4142a5:	aaa    
  4142a6:	stos   DWORD PTR es:[edi],eax
  4142a7:	in     al,dx
  4142a8:	push   ebp
  4142a9:	scas   eax,DWORD PTR es:[edi]
  4142aa:	mov    al,BYTE PTR [eax+ecx*4]
  4142ad:	mov    dh,BYTE PTR [ecx-0x55]
  4142b0:	test   DWORD PTR [eax+ebp*4],ecx
  4142b3:	das    
  4142b4:	cmp    al,0x52
  4142b6:	mov    ecx,cs
  4142b8:	mov    cl,0xbd
  4142ba:	jmp    0xd86ac7ed
  4142bf:	xor    al,0x2e
  4142c1:	stos   BYTE PTR es:[edi],al
  4142c2:	xor    ebp,ecx
  4142c4:	and    eax,0xedc791bd
  4142c9:	lods   al,BYTE PTR ds:[esi]
  4142ca:	adc    BYTE PTR [eax],bh
  4142cc:	(bad)  
  4142cd:	dec    ecx
  4142ce:	xor    eax,0x496e248e
  4142d3:	mov    bl,0x59
  4142d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142d6:	jb     0x414331
  4142d8:	mov    ch,0xee
  4142da:	xor    ecx,DWORD PTR [esi+0x24ae2965]
  4142e0:	push   0xffffffcc
  4142e2:	cs (bad) 
  4142e4:	ror    bh,0xf6
  4142e7:	jmp    0xd639:0x6fcc2dbc
  4142ee:	gs mov edx,0x66aa9b16
  4142f4:	sbb    BYTE PTR ds:0x58ff771c,0x40
  4142fb:	xchg   edx,eax
  4142fc:	sti    
  4142fd:	cmp    bl,BYTE PTR [esi-0x473fa2c7]
  414303:	popf   
  414304:	xor    esi,edx
  414306:	dec    esp
  414307:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414308:	inc    BYTE PTR [edi]
  41430a:	pop    ds
  41430b:	pop    ecx
  41430c:	das    
  41430d:	(bad)  
  41430f:	out    dx,al
  414310:	adc    DWORD PTR [eax+0x6751b293],esi
  414316:	jbe    0x414343
  414318:	imul   eax
  41431a:	adc    eax,edx
  41431c:	push   ecx
  41431d:	pop    edx
  41431e:	lds    ebx,FWORD PTR ds:0xd96af567
  414324:	icebp  
  414325:	fisub  WORD PTR ds:[ebx-0xf]
  414329:	jle    0x41434e
  41432b:	cli    
  41432c:	xor    BYTE PTR [eax+0x5a],ah
  41432f:	cmp    cl,BYTE PTR [ebx+0x3b62195d]
  414335:	dec    esi
  414336:	adc    BYTE PTR [ebx],0xc9
  414339:	test   al,0x1b
  41433b:	aas    
  41433c:	sbb    dh,BYTE PTR [edx+edx*8]
  41433f:	mov    edx,0x8ad54172
  414344:	and    ah,BYTE PTR [eax+0x65863ee]
  41434a:	jl     0x41436b
  41434c:	(bad)  
  41434d:	aas    
  41434e:	test   al,0x94
  414350:	mov    ds:0x8144e2d2,eax
  414355:	pop    edi
  414356:	push   esi
  414357:	loopne 0x41434f
  414359:	test   eax,eax
  41435b:	loopne 0x414382
  41435d:	fst    QWORD PTR [ecx+0x3bcfc088]
  414363:	mov    DWORD PTR [ecx],ebp
  414365:	mov    eax,ds:0x7aac83cb
  41436a:	sbb    DWORD PTR [eax-0x64],esp
  41436d:	pop    edi
  41436e:	or     DWORD PTR [eax+0x7],0x150caff6
  414375:	in     eax,dx
  414376:	loopne 0x414312
  414378:	mov    bh,0x34
  41437a:	xchg   esp,eax
  41437b:	or     al,0x95
  41437d:	and    al,0xfe
  41437f:	leave  
  414380:	pop    ecx
  414381:	pusha  
  414382:	adc    DWORD PTR [eax],ecx
  414384:	adc    eax,DWORD PTR [esi-0x15f92894]
  41438a:	rcl    BYTE PTR [ebp+edx*1-0xf],0x55
  41438f:	xlat   BYTE PTR ds:[ebx]
  414390:	lea    esi,[edi]
  414392:	mov    BYTE PTR [eax-0x5485f61d],dh
  414398:	jle    0x414355
  41439a:	(bad)  
  41439b:	jnp    0x41440a
  41439d:	xlat   BYTE PTR ds:[ebx]
  41439e:	pop    ecx
  41439f:	icebp  
  4143a0:	shr    ecx,1
  4143a2:	sub    BYTE PTR [bx],bl
  4143a5:	pop    ss
  4143a6:	loopne 0x4143db
  4143a8:	arpl   WORD PTR [ebx],di
  4143aa:	aam    0xe8
  4143ac:	test   eax,0xd863d2f5
  4143b1:	push   esi
  4143b2:	ss arpl bp,si
  4143b5:	push   ecx
  4143b6:	push   0xcf51e37b
  4143bb:	outs   dx,DWORD PTR ds:[esi]
  4143bc:	ss (bad) 
  4143be:	lods   eax,DWORD PTR ds:[esi]
  4143bf:	push   ebx
  4143c0:	sub    eax,0xb2a87e28
  4143c5:	dec    edi
  4143c6:	push   es
  4143c7:	push   esp
  4143c8:	imul   ecx,DWORD PTR [eax],0xc224aaa6
  4143ce:	mov    dh,0x9
  4143d0:	imul   edx,DWORD PTR [ecx+eax*1+0x3d25339e],0x27dcc4d5
  4143db:	ss loopne 0x4143af
  4143de:	and    esp,DWORD PTR [edi+0x59aec06]
  4143e4:	loop   0x414393
  4143e6:	mov    ebx,0xd1bc7765
  4143eb:	dec    edx
  4143ec:	outs   dx,BYTE PTR ds:[esi]
  4143ed:	push   ebx
  4143ee:	inc    ebx
  4143ef:	mov    ebx,0xb966a6a7
  4143f4:	int3   
  4143f5:	cmp    ebp,DWORD PTR [esi+0x73]
  4143f8:	xor    DWORD PTR [edx],0x25
  4143fb:	push   0xdf9d3415
  414400:	frstor [edx-0x1751bb06]
  414406:	add    edx,DWORD PTR [edi]
  414408:	test   al,0xf9
  41440a:	inc    ebp
  41440b:	mov    ds,WORD PTR [ecx]
  41440d:	cmp    DWORD PTR [edx-0x4b0b20e8],ebx
  414413:	push   cs
  414414:	js     0x4143fd
  414416:	test   ebp,esi
  414418:	mov    esp,DWORD PTR [ebp+ebx*4+0x4a]
  41441c:	cmp    al,dh
  41441e:	push   ebp
  41441f:	hlt    
  414420:	imul   esi,DWORD PTR [ebp+0x1bd199fe],0x13149827
  41442a:	sbb    ecx,ebx
  41442c:	fs jne 0x4143d4
  41442f:	stos   DWORD PTR es:[edi],eax
  414430:	sbb    BYTE PTR [edx],0x61
  414433:	sbb    BYTE PTR [edx-0x35],al
  414436:	mov    bh,0xf6
  414438:	mov    WORD PTR [ecx],?
  41443a:	sbb    edx,DWORD PTR [edi]
  41443c:	xchg   esi,eax
  41443d:	mov    edx,0xa3cfd649
  414442:	xor    eax,0xd7c17485
  414447:	dec    edi
  414448:	mov    edx,0x71e2529d
  41444d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41444e:	sub    eax,0xacba534a
  414453:	mov    dh,0xde
  414455:	and    BYTE PTR [ebp+0x42],0xea
  414459:	retf   0x57db
  41445c:	sub    dl,BYTE PTR [esi]
  41445e:	cli    
  41445f:	fldenvw [edx+edi*1+0xd]
  414464:	fild   DWORD PTR [edi]
  414466:	jp     0x414474
  414468:	hlt    
  414469:	(bad)  
  41446a:	(bad)  
  41446c:	mov    edi,0x43654764
  414471:	lds    esp,FWORD PTR [ebx]
  414473:	push   0xffffff9e
  414475:	cli    
  414476:	cld    
  414477:	pop    ss
  414478:	and    ch,bl
  41447a:	cmp    eax,0x421c29df
  41447f:	inc    eax
  414480:	sub    DWORD PTR [edx+0x27],ebp
  414483:	mov    esp,0x839dd8b8
  414488:	add    BYTE PTR [esi],0x91
  41448b:	sub    eax,0xae2e2a80
  414490:	stc    
  414491:	in     al,0x8a
  414493:	jb     0x4144b1
  414495:	mov    ss,edx
  414497:	add    al,0x2
  414499:	scas   eax,DWORD PTR es:[edi]
  41449a:	in     eax,0x35
  41449c:	bound  ebp,QWORD PTR [eax+ebp*2]
  41449f:	dec    edx
  4144a0:	psrlq  mm6,QWORD PTR [ecx+0x740d2039]
  4144a7:	test   DWORD PTR [ecx+eax*1-0x71],ebp
  4144ab:	pop    edi
  4144ac:	addr16 inc edx
  4144ae:	in     eax,0xad
  4144b0:	push   edx
  4144b1:	scas   al,BYTE PTR es:[edi]
  4144b2:	and    ebp,ebx
  4144b4:	mov    ah,0xb2
  4144b6:	sub    bh,0xd0
  4144b9:	inc    ebp
  4144ba:	fdivr  QWORD PTR [eax+0x25d0a4e4]
  4144c0:	call   FWORD PTR [edi-0x42]
  4144c3:	cmp    eax,0xe269cc17
  4144c8:	lahf   
  4144c9:	dec    edi
  4144ca:	sbb    al,0x6b
  4144cc:	ret    
  4144cd:	clc    
  4144ce:	add    BYTE PTR [esi+0x7],dh
  4144d1:	add    ebx,edx
  4144d3:	inc    ebp
  4144d4:	stos   DWORD PTR es:[edi],eax
  4144d5:	xchg   esp,eax
  4144d6:	add    DWORD PTR [edx],edx
  4144d8:	push   0xaf584858
  4144dd:	mov    ch,BYTE PTR [edi+ebx*2+0x382fb48c]
  4144e4:	leave  
  4144e5:	sbb    DWORD PTR [ebx+ebx*4],eax
  4144e8:	(bad)  
  4144e9:	adc    al,0x5a
  4144eb:	retf   
  4144ec:	es and eax,0x72f29478
  4144f2:	scas   al,BYTE PTR es:[edi]
  4144f3:	dec    ecx
  4144f4:	stos   BYTE PTR es:[edi],al
  4144f5:	lahf   
  4144f6:	in     eax,dx
  4144f7:	daa    
  4144f8:	out    dx,al
  4144f9:	sbb    cl,cl
  4144fb:	inc    edi
  4144fc:	and    al,0xa6
  4144fe:	addr16 int 0xe
  414501:	cwde   
  414502:	dec    ebp
  414503:	push   ebx
  414504:	addr16 mov bh,0x26
  414507:	daa    
  414508:	cmp    al,0x6e
  41450a:	out    0x97,al
  41450c:	jge    0x4144fc
  41450e:	cmp    DWORD PTR [edx],0xffffffcf
  414511:	push   0x394cbde7
  414516:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414517:	fwait
  414518:	retf   
  414519:	inc    edi
  41451a:	and    DWORD PTR [eax],esi
  41451c:	scas   eax,DWORD PTR es:[edi]
  41451d:	dec    esp
  41451e:	mov    esi,0x4bb50b13
  414523:	jbe    0x4144d4
  414525:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414526:	fincstp 
  414528:	std    
  414529:	push   cs
  41452a:	ror    DWORD PTR [ebx-0x2d],0xbc
  41452e:	sbb    DWORD PTR ds:0xb362a311,ecx
  414534:	add    eax,0x2d9cb7d7
  414539:	push   ds
  41453a:	in     eax,dx
  41453b:	int    0x81
  41453d:	push   ecx
  41453e:	aaa    
  41453f:	xchg   ecx,eax
  414540:	cmp    eax,DWORD PTR [eax-0x5ab5f92e]
  414546:	test   al,0x3a
  414548:	mov    ebp,DWORD PTR [edi-0x6b]
  41454b:	pop    es
  41454c:	dec    ecx
  41454d:	int    0xb1
  41454f:	bound  eax,QWORD PTR [edi+ebp*4]
  414552:	dec    ebx
  414553:	inc    esp
  414554:	xor    eax,0x26d3a770
  414559:	in     al,0xe9
  41455b:	scas   eax,DWORD PTR es:[edi]
  41455c:	xchg   ecx,eax
  41455d:	fdivr  QWORD PTR [esi+edx*8-0x76]
  414561:	arpl   bp,bp
  414563:	sbb    DWORD PTR es:[ebx],ebx
  414566:	ficomp DWORD PTR [esi+0x67]
  414569:	leave  
  41456a:	add    DWORD PTR [ebx],esi
  41456c:	add    BYTE PTR [ecx],dl
  41456e:	jg     0x41459e
  414570:	scas   al,BYTE PTR es:[edi]
  414571:	inc    esp
  414572:	jns    0x414505
  414574:	loope  0x414563
  414576:	ret    
  414577:	cmp    al,0xf5
  414579:	add    al,0x3d
  41457b:	stos   BYTE PTR es:[edi],al
  41457c:	arpl   WORD PTR [eax+0x1b],bx
  41457f:	xchg   esi,eax
  414580:	adc    esi,DWORD PTR [ebx]
  414582:	cwde   
  414583:	into   
  414584:	mov    ?,WORD PTR [ebp+0x1f]
  414587:	arpl   WORD PTR [edi+edx*1-0x59],ax
  41458b:	or     DWORD PTR [ebp+0x3],esi
  41458e:	pop    ss
  41458f:	xchg   edx,eax
  414590:	dec    esi
  414591:	in     eax,0x5e
  414593:	sbb    ch,BYTE PTR ds:0x6cb78b87
  414599:	push   eax
  41459a:	mov    ebp,gs
  41459c:	pusha  
  41459d:	scas   eax,DWORD PTR es:[edi]
  41459e:	xchg   ecx,eax
  41459f:	mov    WORD PTR [esi+eax*8],ds
  4145a2:	add    esi,DWORD PTR [edi+ebx*2-0x6]
  4145a6:	lea    esi,[ecx+ecx*4+0x4351c7cc]
  4145ad:	inc    eax
  4145ae:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4145b0:	ja     0x4145ca
  4145b2:	(bad)  
  4145b3:	push   edi
  4145b4:	sti    
  4145b5:	xor    BYTE PTR [esi+ebx*4-0x7d],dl
  4145b9:	leave  
  4145ba:	mov    ebp,0xf3513d31
  4145bf:	loope  0x4145fe
  4145c1:	cld    
  4145c2:	pop    es
  4145c3:	ja     0x4145a1
  4145c5:	mov    eax,ds:0xe828b17d
  4145ca:	mov    ecx,0x7fd04787
  4145cf:	add    ch,BYTE PTR [edi]
  4145d1:	inc    edx
  4145d2:	sbb    eax,0x688c0cd8
  4145d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145d8:	loop   0x4145cc
  4145da:	fst    DWORD PTR [edi]
  4145dc:	lods   al,BYTE PTR ds:[esi]
  4145dd:	push   esp
  4145de:	mov    edi,0x374ff0a1
  4145e3:	sahf   
  4145e4:	inc    esi
  4145e5:	aas    
  4145e6:	fcmovbe st,st(1)
  4145e8:	or     DWORD PTR [ebx],ecx
  4145ea:	rcr    BYTE PTR [eax+esi*8],1
  4145ed:	push   ds
  4145ee:	std    
  4145ef:	loop   0x414601
  4145f1:	and    eax,0x4b5b7042
  4145f6:	mov    bh,0xb0
  4145f8:	cmp    esp,esp
  4145fa:	(bad)  
  4145fb:	repnz clc 
  4145fd:	xor    DWORD PTR [eax+0x506cb743],ecx
  414603:	add    esi,esp
  414605:	mov    cl,0x4c
  414607:	shr    BYTE PTR [ebx+edi*8],0x8e
  41460b:	xchg   ecx,eax
  41460c:	pop    ds
  41460d:	sbb    edi,DWORD PTR [ecx-0x67]
  414610:	mov    ds:0xe412fc6,eax
  414615:	cmp    DWORD PTR [edx-0x63],edx
  414618:	mov    al,0xb5
  41461a:	pop    ebx
  41461b:	das    
  41461c:	out    0x4b,al
  41461e:	outs   dx,BYTE PTR ds:[esi]
  41461f:	jno    0x41466b
  414621:	mov    WORD PTR [ecx+eax*4],?
  414624:	cmp    edx,0x44
  414627:	cdq    
  414628:	nop
  414629:	sar    DWORD PTR [ebp+0x53],1
  41462c:	jle    0x414642
  41462e:	inc    esp
  41462f:	jo     0x414673
  414631:	adc    DWORD PTR [ebx+0x3c],ecx
  414634:	inc    eax
  414635:	stos   DWORD PTR es:[edi],eax
  414636:	jle    0x4145eb
  414638:	push   ds
  414639:	cmp    DWORD PTR [ebp-0xbd43bfe],esp
  41463f:	outs   dx,BYTE PTR ds:[esi]
  414640:	xlat   BYTE PTR ds:[ebx]
  414641:	cmp    bh,BYTE PTR [edx+esi*1-0x41f92f45]
  414648:	jge    0x414620
  41464a:	mov    esi,0xf185452e
  41464f:	push   eax
  414650:	test   ah,dh
  414652:	popf   
  414653:	in     eax,dx
  414654:	cmp    DWORD PTR [eax+0xe],esp
  414657:	jb     0x414639
  414659:	pop    esi
  41465a:	adc    eax,0xaad665
  41465f:	sub    BYTE PTR [ecx-0x2a],0xa
  414663:	repnz pop esp
  414665:	xchg   esp,eax
  414666:	xor    eax,0xb2d5b29
  41466b:	out    dx,eax
  41466c:	adc    DWORD PTR [ebp-0x71],ebp
  41466f:	dec    ebp
  414670:	outs   dx,BYTE PTR ds:[esi]
  414671:	in     eax,dx
  414672:	call   0x309d:0xc6360cdc
  414679:	sbb    BYTE PTR [eax+0x5b3e5429],ah
  41467f:	mov    fs,eax
  414681:	push   esp
  414682:	cdq    
  414683:	int    0xef
  414685:	mov    ds:0xc45720f4,eax
  41468a:	push   cs
  41468b:	xor    esp,DWORD PTR [ecx-0x3a]
  41468e:	(bad)  
  41468f:	das    
  414690:	into   
  414691:	loop   0x414656
  414693:	sub    eax,DWORD PTR [esi]
  414695:	jp     0x4146e0
  414697:	mov    BYTE PTR [ebx-0x64f666b8],ah
  41469d:	mov    ds:0x64279f75,eax
  4146a2:	js     0x4146eb
  4146a4:	test   DWORD PTR [eax],edi
  4146a6:	mul    DWORD PTR [esi]
  4146a8:	pop    esi
  4146a9:	outs   dx,BYTE PTR ds:[esi]
  4146aa:	dec    esi
  4146ab:	mov    bl,0x57
  4146ad:	fld    DWORD PTR [ebp-0x2]
  4146b0:	(bad)  
  4146b1:	push   ebp
  4146b2:	push   cs
  4146b3:	aas    
  4146b4:	sub    ebp,DWORD PTR [ebx-0x3418e895]
  4146ba:	mov    WORD PTR [edi-0x80],es
  4146bd:	adc    eax,edx
  4146bf:	adc    DWORD PTR ds:0xee5ff16d,edx
  4146c5:	(bad)  
  4146c6:	adc    ebx,ecx
  4146c8:	lods   al,BYTE PTR ds:[esi]
  4146c9:	in     eax,0x46
  4146cb:	mov    ah,0x1a
  4146cd:	sub    al,0x14
  4146cf:	push   esi
  4146d0:	pop    edi
  4146d1:	sub    BYTE PTR ds:0xa6fcd46c,al
  4146d7:	sbb    BYTE PTR [ecx+0x41504dc7],dh
  4146dd:	pop    ds
  4146de:	xor    DWORD PTR [eax-0x54f0f470],ecx
  4146e4:	(bad)  
  4146e5:	jbe    0x414686
  4146e7:	push   ecx
  4146e8:	mov    bl,0xa2
  4146ea:	std    
  4146eb:	push   esi
  4146ec:	outs   dx,BYTE PTR ds:[esi]
  4146ed:	ret    
  4146ee:	repz xchg esp,eax
  4146f0:	ja     0x414724
  4146f2:	pop    ss
  4146f3:	cmp    esi,DWORD PTR [ecx]
  4146f5:	sub    cl,BYTE PTR [edi+edx*1]
  4146f8:	rcl    BYTE PTR [ecx+0x1876e100],1
  4146fe:	int3   
  4146ff:	inc    edx
  414700:	int3   
  414701:	ja     0x41469e
  414703:	jmp    0x414717
  414705:	scas   eax,DWORD PTR es:[edi]
  414706:	mov    BYTE PTR [ecx-0x71a84966],dh
  41470c:	jns    0x41468e
  41470e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41470f:	(bad)
  414712:	leave  
  414713:	scas   eax,DWORD PTR es:[edi]
  414714:	sahf   
  414715:	cmp    eax,0x46067995
  41471a:	push   ds
  41471b:	adc    DWORD PTR [edi],edx
  41471d:	sar    DWORD PTR [esi],1
  41471f:	sub    bh,BYTE PTR [ecx-0x5e]
  414722:	sbb    esp,esp
  414724:	aas    
  414725:	test   eax,0x314dcd8d
  41472a:	in     al,0x85
  41472c:	pop    ebp
  41472d:	test   al,0xe6
  41472f:	xor    cl,dh
  414731:	adc    al,0xd2
  414733:	sub    dh,dh
  414735:	and    ebx,DWORD PTR [edx-0x25]
  414738:	adc    eax,0x30fe1f5e
  41473d:	push   edi
  41473e:	cmp    esp,DWORD PTR [edi]
  414740:	xor    al,0x2
  414742:	in     eax,dx
  414743:	mov    dh,0x9
  414745:	stc    
  414746:	dec    esp
  414747:	inc    ebx
  414748:	add    ah,BYTE PTR [edx-0x4]
  41474b:	hlt    
  41474c:	arpl   WORD PTR [eax+0x5631b601],cx
  414752:	gs fwait
  414754:	xchg   ebx,eax
  414755:	(bad)  [edx+0x2a9fdaba]
  41475b:	xor    BYTE PTR [ebx+0x5c],ah
  41475e:	(bad)  
  414760:	in     al,dx
  414761:	jg     0x414723
  414763:	std    
  414764:	cld    
  414765:	mov    eax,ds:0xeb1ba544
  41476a:	mov    esi,DWORD PTR [edx+eax*4]
  41476d:	xor    ebx,DWORD PTR [esi]
  41476f:	jbe    0x4146f4
  414771:	xchg   edx,eax
  414772:	dec    ebp
  414773:	ret    
  414774:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414775:	pop    esi
  414776:	adc    al,0x3c
  414778:	inc    ecx
  414779:	ja     0x41479b
  41477b:	push   0xcd2c5397
  414780:	pop    es
  414781:	jl     0x4147a4
  414783:	dec    edx
  414784:	jg     0x414777
  414786:	mov    ch,0x87
  414788:	test   DWORD PTR [edx-0x61],edx
  41478b:	arpl   WORD PTR [edx+0x60b31c0d],sp
  414791:	(bad)  
  414792:	cmc    
  414793:	jns    0x4147bd
  414795:	je     0x41475b
  414797:	mov    es,WORD PTR ds:[ecx-0x6e01cda]
  41479e:	out    dx,eax
  41479f:	bsf    ebp,esi
  4147a2:	mov    BYTE PTR [edi-0x39f7ac42],ah
  4147a8:	pop    eax
  4147a9:	into   
  4147aa:	or     al,0xa7
  4147ac:	pushf  
  4147ad:	sbb    bh,BYTE PTR [esi+0x1df13245]
  4147b3:	test   esi,eax
  4147b5:	repz mov edx,0x9b3788a2
  4147bb:	or     DWORD PTR [edx-0x52770c71],ecx
  4147c1:	push   ebx
  4147c2:	jmp    0x4147eb
  4147c4:	imul   edx,edx,0x2c
  4147c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147c8:	or     al,0x7f
  4147ca:	adc    edx,eax
  4147cc:	pushf  
  4147cd:	cmp    BYTE PTR [edx+0x50],bl
  4147d0:	gs scas al,BYTE PTR es:[edi]
  4147d2:	inc    ebp
  4147d3:	add    DWORD PTR [ecx],eax
  4147d5:	or     BYTE PTR [ebx],bh
  4147d7:	fidivr DWORD PTR [edi]
  4147d9:	add    edx,esp
  4147db:	and    edx,DWORD PTR [edx]
  4147dd:	xchg   edi,eax
  4147de:	adc    al,0x8f
  4147e0:	lahf   
  4147e1:	push   esp
  4147e2:	mul    BYTE PTR [edx+0x7609f68]
  4147e8:	cmp    al,0xd4
  4147ea:	jo     0x4147fb
  4147ec:	sbb    eax,0x2ece0f25
  4147f1:	lea    ecx,[esi+0x1adf5cfb]
  4147f7:	mov    edi,0x52de09fb
  4147fc:	popf   
  4147fd:	fbld   TBYTE PTR [ecx-0x13aa4e00]
  414803:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414804:	mov    ah,BYTE PTR [ebp*8+0x3f4be7a9]
  41480b:	in     al,dx
  41480c:	sbb    eax,0x228bef00
  414811:	lahf   
  414812:	rol    al,0xf1
  414815:	aam    0xb
  414817:	mov    ah,0xfb
  414819:	sub    ebx,ecx
  41481b:	rdseed edx
  41481e:	sbb    BYTE PTR [esi-0x310f6919],0x7a
  414825:	xchg   esi,eax
  414826:	loop   0x4147ff
  414828:	mov    esi,0x500cc331
  41482d:	xchg   edi,eax
  41482e:	repz xor esp,DWORD PTR [ecx]
  414831:	icebp  
  414832:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414833:	fbstp  TBYTE PTR [esi+0x78]
  414836:	ss sbb bl,cl
  414839:	jl     0x4147d1
  41483b:	sub    eax,0x74a1e52
  414840:	iret   
  414841:	and    eax,0x68e97bcf
  414846:	lock pop es
  414848:	setne  BYTE PTR [esi-0x1b]
  41484c:	cmp    esi,edi
  41484e:	das    
  41484f:	gs inc edi
  414851:	ffree  st(1)
  414853:	call   0xeb9d8c05
  414858:	hlt    
  414859:	xchg   esp,eax
  41485a:	xor    al,BYTE PTR [edx]
  41485c:	(bad)  
  41485d:	test   eax,0x573c8d4b
  414862:	nop
  414863:	ss push ss
  414865:	adc    al,0x61
  414867:	or     ebp,DWORD PTR [eax]
  414869:	(bad)  
  41486a:	inc    edx
  41486b:	loope  0x4148df
  41486d:	outs   dx,BYTE PTR ds:[esi]
  41486e:	or     dh,BYTE PTR [ebp+0x679abc2]
  414874:	xor    edx,DWORD PTR [edx]
  414876:	fucomip st,st(2)
  414878:	sub    BYTE PTR [edi],cl
  41487a:	fdivr  DWORD PTR [esp+esi*4]
  41487d:	xchg   edx,eax
  41487e:	popa   
  41487f:	imul   esi,DWORD PTR [edx+0x7d458fe6],0x42a3bd52
  414889:	std    
  41488a:	repz adc al,0xd5
  41488d:	je     0x4148c8
  41488f:	sub    DWORD PTR [ecx-0x22],ebx
  414892:	pop    ecx
  414893:	in     al,0x8c
  414895:	std    
  414896:	or     eax,0xcbb9731f
  41489b:	sub    ebp,eax
  41489d:	loope  0x414831
  41489f:	pop    esi
  4148a0:	inc    esp
  4148a1:	sti    
  4148a2:	scas   al,BYTE PTR es:[edi]
  4148a3:	jl     0x414882
  4148a5:	adc    bl,BYTE PTR [esi]
  4148a7:	mov    esp,0x5883be74
  4148ac:	jl     0x414921
  4148ae:	rcl    BYTE PTR [ecx-0x1aa1bdc0],cl
  4148b4:	or     edi,edi
  4148b6:	add    ebp,DWORD PTR [edi-0x78]
  4148b9:	push   ebp
  4148ba:	js     0x41491b
  4148bc:	push   ecx
  4148bd:	jge    0x414857
  4148bf:	pop    ebp
  4148c0:	shl    BYTE PTR [ecx+edx*1+0x24607e7b],cl
  4148c7:	push   ebp
  4148c8:	add    ebp,edx
  4148ca:	jg     0x4148a7
  4148cc:	rol    bl,cl
  4148ce:	pop    eax
  4148cf:	dec    edi
  4148d0:	mov    al,ds:0xa4072fba
  4148d5:	push   ecx
  4148d6:	xchg   ecx,eax
  4148d7:	inc    edi
  4148d8:	xor    BYTE PTR [ecx-0x21],dh
  4148db:	jmp    0x6aaa:0x4ebd0ca3
  4148e2:	jle    0x4148cf
  4148e4:	fs stc 
  4148e6:	shl    BYTE PTR [edi+0x5c],0xac
  4148ea:	test   al,0xb6
  4148ec:	cmp    eax,0x355e3f3c
  4148f1:	nop
  4148f2:	ror    DWORD PTR ds:0x91330dfd,0xfe
  4148f9:	push   es
  4148fa:	dec    ebp
  4148fb:	add    BYTE PTR [ebx+eiz*2-0x38],0xfa
  414900:	jne    0x4148a6
  414902:	xchg   ecx,eax
  414903:	repz jne 0x414962
  414906:	addr16 sub bl,ch
  414909:	mov    ch,0x4d
  41490b:	jbe    0x4148eb
  41490d:	mov    fs,esp
  41490f:	imul   esi,DWORD PTR [edi],0x19
  414912:	(bad)  
  414914:	mov    es,WORD PTR [esi+0x15]
  414917:	fnstsw WORD PTR [ebx-0x3]
  41491a:	mov    bl,0xc9
  41491c:	cmp    al,0x37
  41491e:	mov    al,0x9b
  414920:	icebp  
  414921:	mov    BYTE PTR [ecx],bh
  414923:	imul   ebx,eax,0x42
  414926:	jmp    0x41498d
  414928:	rcr    esp,1
  41492a:	test   dh,bl
  41492c:	js     0x414975
  41492e:	xchg   esi,eax
  41492f:	(bad)  
  414930:	(bad)  
  414931:	(bad)  
  414932:	hlt    
  414933:	push   esp
  414934:	dec    esi
  414935:	jge    0x414973
  414937:	jl     0x4148e5
  414939:	mov    ecx,0x1d824fd
  41493e:	inc    edx
  41493f:	mov    ebx,0x84f0a8a5
  414944:	xlat   BYTE PTR ds:[ebx]
  414945:	(bad)  
  414946:	mov    al,0xd0
  414948:	pushf  
  414949:	(bad)  
  41494a:	ins    DWORD PTR es:[edi],dx
  41494b:	stc    
  41494c:	div    BYTE PTR [ebp-0x2ee331]
  414952:	and    esp,DWORD PTR [ebx]
  414954:	mov    esp,0x2b5ab440
  414959:	adc    DWORD PTR [ebx],edx
  41495b:	je     0x414963
  41495d:	mov    ds:0xe74fb0aa,al
  414962:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414963:	ja     0x4149dd
  414965:	loopne 0x414932
  414967:	xor    BYTE PTR [eax],ch
  414969:	xchg   ebp,eax
  41496a:	pop    esp
  41496b:	jnp    0x4148ef
  41496d:	mov    ah,0x39
  41496f:	ret    0x2965
  414972:	inc    ebx
  414973:	push   ds
  414974:	push   cs
  414975:	stc    
  414976:	mov    ds:0xbe878e6e,eax
  41497b:	(bad)  
  41497c:	jne    0x41496c
  41497e:	fstp   st(1)
  414980:	fisub  DWORD PTR [ebx+0x29881905]
  414986:	adc    WORD PTR [esi+0x34],0x75
  41498b:	in     eax,0x30
  41498d:	nop
  41498e:	ins    DWORD PTR es:[edi],dx
  41498f:	test   al,0x5d
  414991:	jbe    0x414935
  414993:	test   eax,0x78ab2bf2
  414998:	mov    al,0xec
  41499a:	push   esp
  41499b:	push   ds
  41499c:	and    edi,DWORD PTR [ebx+0x70]
  41499f:	into   
  4149a0:	fs push ecx
  4149a2:	mov    bh,0xad
  4149a4:	push   0xdfb61043
  4149a9:	jo     0x414942
  4149ab:	or     eax,0x7be21229
  4149b0:	shl    DWORD PTR [ebx-0x77],1
  4149b3:	xor    DWORD PTR [ecx-0x52],edx
  4149b6:	push   ss
  4149b7:	shl    ecx,0xc1
  4149ba:	rcl    BYTE PTR [edx+ebp*2-0x62b9a636],0x8f
  4149c2:	mov    DWORD PTR ds:0x1e420f7e,ebp
  4149c8:	popf   
  4149c9:	or     DWORD PTR [esi],edx
  4149cb:	ret    
  4149cc:	xor    ebx,edi
  4149ce:	cmc    
  4149cf:	inc    esp
  4149d0:	mov    ebx,0x254b051d
  4149d5:	fsub   QWORD PTR [esi-0x7f820c0a]
  4149db:	inc    ebp
  4149dc:	push   es
  4149dd:	rol    DWORD PTR [esi+eax*8-0x26005251],cl
  4149e4:	fisub  WORD PTR [edi]
  4149e6:	pop    esp
  4149e7:	outs   dx,BYTE PTR ds:[esi]
  4149e8:	xchg   edi,eax
  4149e9:	fcom   DWORD PTR [ecx-0x54]
  4149ec:	inc    ebx
  4149ed:	rol    ecx,cl
  4149ef:	into   
  4149f0:	ins    BYTE PTR es:[edi],dx
  4149f1:	add    bl,BYTE PTR [ebx]
  4149f3:	inc    edi
  4149f4:	xor    DWORD PTR [edx],esp
  4149f6:	adc    BYTE PTR [esi-0x45],ch
  4149f9:	adc    bh,BYTE PTR [esi+0x22]
  4149fc:	(bad)  
  4149fd:	cld    
  4149fe:	nop
  4149ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a00:	mov    cl,0xe2
  414a02:	ins    DWORD PTR es:[edi],dx
  414a03:	push   edi
  414a04:	pop    eax
  414a05:	pop    esi
  414a06:	add    eax,0x36cb7153
  414a0b:	cs inc edx
  414a0d:	pop    ebx
  414a0e:	ins    DWORD PTR es:[edi],dx
  414a0f:	dec    ebp
  414a10:	xchg   ah,ch
  414a12:	into   
  414a13:	cdq    
  414a14:	pop    esp
  414a15:	sub    ch,bh
  414a17:	mov    eax,0x43af5be8
  414a1c:	mov    esp,0x61a05b2a
  414a21:	xchg   ebp,eax
  414a22:	inc    edi
  414a23:	xor    al,0xfa
  414a25:	sub    BYTE PTR [eax+eiz*4-0x3db9cda5],dl
  414a2c:	sub    eax,0xdae92db2
  414a31:	adc    DWORD PTR [ebp+eiz*2+0x35],edx
  414a35:	xchg   edx,eax
  414a36:	int    0xf
  414a38:	(bad)  
  414a3a:	ficom  DWORD PTR [edi]
  414a3c:	and    edi,DWORD PTR [esi]
  414a3e:	outs   dx,DWORD PTR ds:[esi]
  414a3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a40:	pop    es
  414a41:	pop    ecx
  414a42:	imul   edi,DWORD PTR [ecx-0x16],0xfd01cd20
  414a49:	je     0x414ab1
  414a4b:	pop    ecx
  414a4c:	xor    bh,BYTE PTR [esi+0xa]
  414a4f:	es sbb ebx,0xd638c4e8
  414a56:	out    0xbe,al
  414a58:	nop
  414a59:	push   0x1aa6ea5a
  414a5e:	jl     0x414a6e
  414a60:	xor    ebp,DWORD PTR [esi+0x6b300550]
  414a66:	push   ebx
  414a67:	mov    cl,0x50
  414a69:	adc    eax,0xd25d2924
  414a6e:	daa    
  414a6f:	pop    ebp
  414a70:	push   ebx
  414a71:	fcomp  DWORD PTR [esi]
  414a73:	loope  0x414a86
  414a75:	sub    al,BYTE PTR [eax-0x3c5d65d8]
  414a7b:	adc    BYTE PTR [edx-0x697fd2c8],bl
  414a81:	mov    dl,0xd9
  414a83:	dec    edx
  414a84:	loope  0x414a82
  414a86:	xchg   esi,eax
  414a87:	lods   eax,DWORD PTR ds:[esi]
  414a88:	adc    BYTE PTR [ebp+0x6a],al
  414a8b:	pop    edi
  414a8c:	mov    esi,0x65a36fc8
  414a91:	leave  
  414a92:	dec    edi
  414a93:	test   BYTE PTR [edx],al
  414a95:	les    edi,FWORD PTR [edi+ebp*4]
  414a98:	pop    edi
  414a99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a9a:	pop    ebp
  414a9b:	test   DWORD PTR [edi-0x53],edx
  414a9e:	cmp    edi,DWORD PTR [esi-0x6f]
  414aa1:	mov    esi,DWORD PTR [eax+ecx*2]
  414aa4:	mov    dl,0x4
  414aa6:	xchg   esi,eax
  414aa7:	aas    
  414aa8:	addr16 mov al,0x5d
  414aab:	fsubp  st(0),st
  414aad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414aae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414aaf:	(bad)  
  414ab1:	or     cl,BYTE PTR [ebx]
  414ab3:	push   edx
  414ab4:	mov    dl,0xdf
  414ab6:	ins    BYTE PTR es:[edi],dx
  414ab7:	cmp    al,0x84
  414ab9:	add    dh,BYTE PTR [esi-0x3bdacb1]
  414abf:	cmp    DWORD PTR ds:0xa2c6a5e,edi
  414ac5:	xlat   BYTE PTR ds:[ebx]
  414ac6:	sbb    eax,0xadd5148f
  414acb:	stos   DWORD PTR es:[edi],eax
  414acc:	add    al,0xeb
  414ace:	jle    0x414a9c
  414ad0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ad1:	imul   ecx,DWORD PTR [ecx-0x74],0x73
  414ad5:	stos   BYTE PTR es:[edi],al
  414ad6:	pop    esp
  414ad7:	sub    DWORD PTR [edi],0xffffffe5
  414ada:	(bad)  
  414adb:	icebp  
  414adc:	cmp    ecx,eax
  414ade:	(bad)  
  414adf:	out    0x14,eax
  414ae1:	das    
  414ae2:	adc    al,0x7d
  414ae4:	scas   al,BYTE PTR es:[edi]
  414ae5:	mov    dl,BYTE PTR [ebp-0x1d3cf271]
  414aeb:	int3   
  414aec:	sahf   
  414aed:	push   edx
  414aee:	lds    edi,FWORD PTR [eax-0x5f]
  414af1:	call   0x7bd5:0xc5d53bbe
  414af8:	stc    
  414af9:	jbe    0x414b06
  414afb:	jg     0x414b08
  414afd:	sti    
  414afe:	jno    0x414b37
  414b00:	bnd ds jg 0x414af6
  414b04:	fnsave [ebp-0x73353a2a]
  414b0a:	or     DWORD PTR [edx-0x32],ecx
  414b0d:	sbb    edi,DWORD PTR [eax+0xa]
  414b10:	les    ebx,FWORD PTR ds:0x91c8352d
  414b16:	fld    QWORD PTR [ebp-0x1190c8cf]
  414b1c:	jp     0x414af8
  414b1e:	mov    al,ds:0x76517228
  414b23:	out    0x5f,eax
  414b25:	cmp    DWORD PTR [edx+eax*2],esi
  414b28:	adc    DWORD PTR [edi],edi
  414b2a:	add    BYTE PTR [eax+eiz*8+0x16829183],ch
  414b31:	(bad)  
  414b32:	rcr    DWORD PTR [eax+0x4a],cl
  414b35:	loop   0x414aea
  414b37:	sub    bh,BYTE PTR [ebx+0x4bbfb53e]
  414b3d:	hlt    
  414b3e:	mov    dl,0x53
  414b40:	mov    ds:0xa7368f6b,eax
  414b45:	es xor ecx,eax
  414b48:	lods   al,BYTE PTR ds:[esi]
  414b49:	fidiv  WORD PTR [ebp+0x11]
  414b4c:	adc    al,BYTE PTR [ecx]
  414b4e:	adc    al,0xd1
  414b50:	push   esp
  414b51:	lahf   
  414b52:	mov    bh,0x1d
  414b54:	lods   eax,DWORD PTR ds:[esi]
  414b55:	test   BYTE PTR [edi+0x5e],ch
  414b58:	mov    cl,0xa
  414b5a:	cmp    ebx,DWORD PTR [edx]
  414b5c:	adc    dl,BYTE PTR [edx-0x10105454]
  414b62:	js     0x414b7c
  414b64:	pusha  
  414b65:	fwait
  414b66:	daa    
  414b67:	sbb    cl,bh
  414b69:	add    bh,BYTE PTR ds:0x7ed6e8f3
  414b6f:	pop    edx
  414b70:	gs jmp 0x465a73d2
  414b76:	ja     0x414b35
  414b78:	xchg   ebp,eax
  414b79:	cmp    al,0x46
  414b7b:	push   0xd476021e
  414b80:	js     0x414bf2
  414b82:	mov    bh,0xd0
  414b84:	pop    ebx
  414b85:	xor    eax,esi
  414b87:	std    
  414b88:	aas    
  414b89:	out    0xe3,al
  414b8b:	mov    esp,0x44d17173
  414b90:	scas   al,BYTE PTR es:[edi]
  414b91:	lods   eax,DWORD PTR ds:[esi]
  414b92:	not    BYTE PTR [ebp+0x4116fcc]
  414b98:	ficomp DWORD PTR [edi+0x5b]
  414b9b:	sbb    eax,0x7a1b6ae7
  414ba0:	mov    DWORD PTR [ecx+0x7199d949],edx
  414ba6:	sbb    eax,esp
  414ba8:	call   0x8137:0x7fdad197
  414baf:	stos   BYTE PTR es:[edi],al
  414bb0:	ret    
  414bb1:	les    ebx,FWORD PTR [ebp+0x41ce6d18]
  414bb7:	in     al,dx
  414bb8:	dec    esi
  414bb9:	jecxz  0x414b53
  414bbb:	shl    DWORD PTR [eax+eax*8+0x46],cl
  414bbf:	fs cmp esi,0x6af4d2d
  414bc6:	mov    al,ds:0x2351ec92
  414bcb:	push   ebp
  414bcc:	icebp  
  414bcd:	push   edi
  414bce:	fmul   QWORD PTR [edx-0x74]
  414bd1:	iret   
  414bd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bd3:	push   ds
  414bd4:	lds    edx,FWORD PTR [esi+eiz*8+0x3c67885d]
  414bdb:	enter  0x37a3,0xc0
  414bdf:	fcomp  QWORD PTR [edx+ebp*2]
  414be2:	dec    eax
  414be3:	(bad)  
  414be4:	in     al,0x1b
  414be6:	outs   dx,BYTE PTR ds:[esi]
  414be7:	je     0x414be5
  414be9:	pop    ecx
  414bea:	cmp    ecx,DWORD PTR [ecx+edi*2]
  414bed:	sar    esp,0x19
  414bf0:	retf   0x6aad
  414bf3:	cli    
  414bf4:	xor    eax,0x9be528ec
  414bf9:	cli    
  414bfa:	mov    eax,ds:0xfac5a4ab
  414bff:	push   ecx
  414c00:	call   0x26860235
  414c05:	retf   
  414c06:	xor    eax,0x8dca5f99
  414c0b:	sbb    esi,ebp
  414c0d:	sbb    esp,ebx
  414c0f:	and    eax,0x3ecf09eb
  414c14:	pop    esp
  414c15:	dec    ebx
  414c16:	popa   
  414c17:	xchg   BYTE PTR [eax],ch
  414c19:	pop    edx
  414c1a:	dec    edi
  414c1b:	jge    0x414c5b
  414c1d:	aaa    
  414c1e:	cmp    bl,BYTE PTR [ebx]
  414c20:	fdiv   QWORD PTR [ebp-0x1ecec7b3]
  414c26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c27:	out    0xf9,eax
  414c29:	aas    
  414c2a:	add    ebp,0x4fedd7a2
  414c30:	sti    
  414c31:	push   esp
  414c32:	pop    edx
  414c33:	ret    
  414c34:	pop    esi
  414c35:	addr16 pop edx
  414c37:	(bad)  
  414c38:	push   ecx
  414c39:	cmp    DWORD PTR ds:0x8ecaf564,ebx
  414c3f:	enter  0x21a7,0x77
  414c43:	inc    esi
  414c44:	cs retf 
  414c46:	stos   BYTE PTR es:[edi],al
  414c47:	jbe    0x414bcc
  414c49:	add    eax,ebx
  414c4b:	jbe    0x414c18
  414c4d:	ins    BYTE PTR es:[edi],dx
  414c4e:	int    0x2c
  414c50:	pop    es
  414c51:	adc    dl,BYTE PTR [edi-0x34]
  414c54:	inc    ebp
  414c55:	cmp    al,0x4d
  414c57:	sbb    al,ch
  414c59:	fdiv   DWORD PTR [ebx*1+0x6cceb662]
  414c60:	push   0xffffffb4
  414c62:	push   ds
  414c63:	jbe    0x414cbf
  414c65:	out    dx,eax
  414c66:	test   BYTE PTR [eax+0x1b],ch
  414c69:	xchg   ebx,eax
  414c6a:	xchg   DWORD PTR [edi],edx
  414c6c:	je     0x414cb3
  414c6e:	adc    DWORD PTR [ebx-0xd],esi
  414c71:	jle    0x414ca4
  414c73:	es push ecx
  414c75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c76:	push   edx
  414c77:	rol    DWORD PTR [ebx],0x1a
  414c7a:	lds    ebp,FWORD PTR [eax]
  414c7c:	(bad)  
  414c7d:	stc    
  414c7e:	out    0xf,al
  414c80:	aad    0xbf
  414c82:	lods   eax,DWORD PTR ds:[esi]
  414c83:	or     ecx,DWORD PTR [edx]
  414c85:	jno    0x414c26
  414c87:	je     0x414c29
  414c89:	aad    0xe7
  414c8b:	mov    esi,0xefe1f215
  414c90:	adc    dh,bh
  414c92:	sub    eax,DWORD PTR [ebx+0x4]
  414c95:	mov    ecx,0xf6f406db
  414c9a:	pop    eax
  414c9b:	sbb    al,0x30
  414c9d:	mov    esi,0x4c08226c
  414ca2:	(bad)  
  414ca3:	cmp    DWORD PTR [ebx-0x31],ecx
  414ca6:	mov    ecx,DWORD PTR [ebx+ebp*2]
  414ca9:	sbb    al,0x5b
  414cab:	inc    ecx
  414cac:	rcr    BYTE PTR [esi-0x237a730f],0x35
  414cb3:	pop    es
  414cb4:	inc    ebp
  414cb5:	xchg   BYTE PTR [esi],dh
  414cb7:	sub    esi,DWORD PTR [edi]
  414cb9:	xchg   esp,eax
  414cba:	xor    ecx,edx
  414cbc:	retf   0xdbd3
  414cbf:	cmp    esp,ebp
  414cc1:	cmc    
  414cc2:	xor    DWORD PTR [edi],eax
  414cc4:	inc    ebp
  414cc5:	jp     0x414c94
  414cc7:	aaa    
  414cc8:	popf   
  414cc9:	imul   ecx,DWORD PTR [ecx-0x13d4f61d],0x43d952e
  414cd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cd4:	lds    edi,FWORD PTR [ebx-0x33]
  414cd7:	xlat   BYTE PTR ds:[ebx]
  414cd8:	(bad)
  414cdb:	xor    ebx,eax
  414cdd:	cmc    
  414cde:	jmp    0x541d9f94
  414ce3:	and    cl,BYTE PTR [eax-0x47]
  414ce6:	add    eax,0x1c08b7b6
  414ceb:	or     al,BYTE PTR [esi-0x7afa1274]
  414cf1:	leave  
  414cf2:	add    eax,0x1f89eac8
  414cf7:	xor    al,0x5d
  414cf9:	(bad)  
  414cfa:	cmc    
  414cfb:	cmp    ebx,DWORD PTR [ecx]
  414cfd:	push   esi
  414cfe:	xchg   ebp,eax
  414cff:	loop   0x414c99
  414d01:	ins    BYTE PTR es:[edi],dx
  414d02:	scas   al,BYTE PTR es:[edi]
  414d03:	out    0xd2,eax
  414d05:	sbb    cl,BYTE PTR [ecx+0x3f1a2869]
  414d0b:	shl    BYTE PTR [esi+eax*8-0x72195254],0xb0
  414d13:	jmp    0xe81ce189
  414d18:	jp     0x414cea
  414d1a:	jg     0x414ce0
  414d1c:	int3   
  414d1d:	clc    
  414d1e:	sub    eax,0xc6248e13
  414d23:	ins    DWORD PTR es:[edi],dx
  414d24:	aaa    
  414d25:	in     eax,0xbf
  414d27:	or     al,0x60
  414d29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d2a:	add    al,0x27
  414d2c:	imul   BYTE PTR [eax]
  414d2e:	sar    DWORD PTR [ebp+0x1e1aca1d],cl
  414d34:	imul   edx,DWORD PTR [ebp-0x26],0x8a7f2ada
  414d3b:	rol    DWORD PTR [esi-0x1e],1
  414d3e:	inc    edi
  414d3f:	sbb    DWORD PTR [esi+edi*8],esi
  414d42:	sti    
  414d43:	dec    edx
  414d44:	das    
  414d45:	retf   
  414d46:	stc    
  414d47:	in     eax,0x47
  414d49:	test   eax,0x369d2f6b
  414d4e:	std    
  414d4f:	imul   ebx,DWORD PTR [eax],0xffffffce
  414d52:	call   0x1f6c:0xb45f3d3a
  414d59:	mov    edx,0xd787a173
  414d5e:	and    eax,0x85f632ca
  414d63:	sub    DWORD PTR [ebp+0x326c268f],edx
  414d69:	xor    ebp,edx
  414d6b:	mov    edi,0x98c75f15
  414d70:	or     eax,0x297f8e83
  414d75:	out    0x3b,eax
  414d77:	fist   DWORD PTR [ecx+ecx*8]
  414d7a:	aas    
  414d7b:	jge    0x414dd8
  414d7d:	cmp    ch,BYTE PTR [ecx+0x9]
  414d80:	adc    dl,BYTE PTR [esi+eiz*1+0x7d84f9fd]
  414d87:	mov    bl,0x50
  414d89:	xor    BYTE PTR [eax+eax*2],ch
  414d8c:	fadd   QWORD PTR [esi+0x2e]
  414d8f:	jge    0x414d3f
  414d91:	or     eax,0x434bf670
  414d96:	sbb    al,0xea
  414d98:	jbe    0x414d5b
  414d9a:	sub    dh,cl
  414d9c:	sbb    ah,bh
  414d9e:	test   ah,ch
  414da0:	fnstcw WORD PTR [ebx]
  414da2:	pop    esp
  414da3:	inc    edi
  414da4:	xor    esp,esp
  414da6:	iret   
  414da7:	or     al,0xe7
  414da9:	(bad)  
  414daa:	and    DWORD PTR [ebx-0x3],edx
  414dad:	dec    ecx
  414dae:	out    dx,ax
  414db0:	sub    eax,0x65c3cf72
  414db5:	inc    ecx
  414db6:	xchg   edi,eax
  414db7:	loop   0x414d65
  414db9:	or     DWORD PTR [edi+0x6e3b35f2],0x529a4c5a
  414dc3:	or     edx,DWORD PTR [edx]
  414dc5:	add    bh,dl
  414dc7:	lock sub bh,ch
  414dca:	add    ecx,DWORD PTR [ecx]
  414dcc:	sub    DWORD PTR [esp+ebx*8+0x73afe224],0xffffffa0
  414dd4:	call   0x4a53:0xf6eea355
  414ddb:	xor    DWORD PTR [edi],0x400b615
  414de1:	aam    0xe5
  414de3:	jle    0x414ddc
  414de5:	xchg   BYTE PTR [ebp-0x54e864b6],bl
  414deb:	sub    eax,0x78b9c75d
  414df0:	adc    DWORD PTR [ebp+eax*4+0xbcf54a2],ecx
  414df7:	ror    ch,cl
  414df9:	inc    eax
  414dfa:	inc    esp
  414dfb:	dec    ecx
  414dfc:	(bad)  
  414dfd:	adc    edi,DWORD PTR [edx+0x3f0e9dc8]
  414e03:	es scas al,BYTE PTR es:[edi]
  414e05:	xor    BYTE PTR [ebp-0x10b4eabb],al
  414e0b:	sub    BYTE PTR [edi],dl
  414e0d:	shl    DWORD PTR [eax-0x17da389c],1
  414e13:	pop    ebx
  414e14:	aad    0x73
  414e16:	ja     0x414e61
  414e18:	fdivr  DWORD PTR [edi+0x6c549de6]
  414e1e:	jp     0x414e9d
  414e20:	mov    ecx,0xf1f34ccf
  414e25:	loop   0x414e87
  414e27:	or     BYTE PTR [ebp+0x106b9a0d],cl
  414e2d:	sbb    DWORD PTR [ebp-0x179538f1],esi
  414e33:	test   BYTE PTR ds:0x516f3343,bh
  414e39:	frstor [edx+ecx*4-0x32665803]
  414e40:	add    eax,0x95aa7473
  414e45:	pop    esp
  414e46:	adc    ch,dh
  414e48:	mov    ah,0xe9
  414e4a:	loop   0x414df7
  414e4c:	mov    ds:0x57f28355,al
  414e51:	or     dh,bh
  414e53:	and    al,0x11
  414e55:	hlt    
  414e56:	or     DWORD PTR [ecx],ebx
  414e58:	mov    ds:0xd2dbe3ca,eax
  414e5d:	xchg   ecx,eax
  414e5e:	mov    edi,0x6aeecee2
  414e63:	push   edx
  414e64:	sar    BYTE PTR [edi+esi*2-0x7f],0xb4
  414e69:	int3   
  414e6a:	or     al,0x40
  414e6c:	data16 stos BYTE PTR es:[edi],al
  414e6e:	shl    BYTE PTR [edx+0x77],cl
  414e71:	js     0x414e16
  414e73:	push   esi
  414e74:	xor    BYTE PTR [edi-0x5f3d5732],ch
  414e7a:	jle    0x414eab
  414e7c:	shl    DWORD PTR [eax],1
  414e7e:	cmp    ah,ah
  414e80:	xchg   esi,eax
  414e81:	or     al,0x5d
  414e83:	repnz cwde 
  414e85:	pushf  
  414e86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e87:	imul   esi,esi,0xfffffffe
  414e8a:	sub    BYTE PTR [ecx+0x42],cl
  414e8d:	xchg   ecx,eax
  414e8e:	ins    DWORD PTR es:[edi],dx
  414e8f:	daa    
  414e90:	xor    eax,0xa164d740
  414e95:	mov    dh,0xbf
  414e97:	add    DWORD PTR ds:0x1f5a8a51,esi
  414e9e:	nop
  414e9f:	retf   
  414ea0:	call   FWORD PTR [ebx]
  414ea2:	test   al,0x7
  414ea4:	and    al,0xc
  414ea6:	hlt    
  414ea7:	push   0x4d2aac56
  414eac:	inc    ebx
  414ead:	cmp    BYTE PTR [esi],cl
  414eaf:	rol    DWORD PTR [ecx-0x54],cl
  414eb2:	cmp    DWORD PTR [ebx],edx
  414eb4:	dec    edi
  414eb5:	addr16 pop esi
  414eb7:	push   0x6ec2184
  414ebc:	pop    eax
  414ebd:	stc    
  414ebe:	(bad)  
  414ec0:	inc    ecx
  414ec1:	mov    ebp,DWORD PTR [ecx-0x2c]
  414ec4:	out    0x52,eax
  414ec6:	outs   dx,BYTE PTR ds:[esi]
  414ec7:	mov    dh,BYTE PTR [eax+0x194ef73b]
  414ecd:	fld    DWORD PTR [ecx+ebx*2-0x71]
  414ed1:	xchg   edi,eax
  414ed2:	sbb    BYTE PTR [eax+edi*1+0x440d416f],bl
  414ed9:	rol    ecx,1
  414edb:	sbb    DWORD PTR [ebx-0x57aba173],0xb
  414ee2:	push   esi
  414ee3:	adc    DWORD PTR [edi+0x43],ebx
  414ee6:	stos   DWORD PTR es:[edi],eax
  414ee7:	xchg   edi,eax
  414ee8:	call   0x1f87:0x1581fe7
  414eef:	push   esi
  414ef0:	fwait
  414ef1:	mov    edx,0x1053a80d
  414ef6:	aas    
  414ef7:	call   0x518:0x2d3f64ac
  414efe:	or     al,0xaf
  414f00:	inc    ebp
  414f01:	test   al,0xce
  414f03:	sbb    BYTE PTR [edx],al
  414f05:	aaa    
  414f06:	cld    
  414f07:	adc    al,0xf3
  414f09:	jbe    0x414f30
  414f0b:	jp     0x414f54
  414f0d:	jmp    0xac0b:0xdcff5f27
  414f14:	aaa    
  414f15:	mov    dh,BYTE PTR [ebp-0x7a]
  414f18:	mov    ah,0xe
  414f1a:	test   DWORD PTR [ecx-0x37],ebx
  414f1d:	or     al,0x75
  414f1f:	fxtract 
  414f21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f22:	sub    edx,edx
  414f24:	cli    
  414f25:	jno    0x414f18
  414f27:	jmp    0x414f21
  414f29:	jl     0x414ebb
  414f2b:	out    dx,eax
  414f2c:	mov    DWORD PTR [esi+0x38543f18],esp
  414f32:	sbb    ecx,DWORD PTR [esi]
  414f34:	mov    ds:0x2b19051,eax
  414f39:	jecxz  0x414f59
  414f3b:	pusha  
  414f3c:	jge    0x414f29
  414f3e:	jle    0x414f19
  414f40:	stc    
  414f41:	imul   ebp,DWORD PTR [edx-0x19],0x2ff5530b
  414f48:	lods   al,BYTE PTR ds:[esi]
  414f49:	push   ebx
  414f4a:	adc    eax,0xb4de0a98
  414f4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f50:	ret    0xef29
  414f53:	jb     0x414f08
  414f55:	shl    DWORD PTR [edi],0xf2
  414f58:	add    DWORD PTR [ebx-0x4aa615e3],esp
  414f5e:	mov    ah,0x88
  414f60:	push   edi
  414f61:	dec    esi
  414f62:	icebp  
  414f63:	sub    DWORD PTR [ebp-0x32d14c60],0xffffffe5
  414f6a:	jnp    0x414f62
  414f6c:	xor    BYTE PTR [esi+0x68b76d8a],0xcd
  414f73:	dec    edi
  414f74:	mov    ch,0xd8
  414f76:	xor    DWORD PTR [ecx+0x73017a79],edx
  414f7c:	push   eax
  414f7d:	imul   edx,DWORD PTR [eax+0x6b05ef86],0x6b
  414f84:	in     eax,0x33
  414f86:	or     DWORD PTR [eax+0xa],0x75
  414f8a:	adc    BYTE PTR [eax-0x4],ch
  414f8d:	shr    dl,0xb7
  414f90:	dec    eax
  414f91:	vpsrld ymm5,ymm2,XMMWORD PTR [eax]
  414f95:	inc    ebp
  414f96:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f98:	adc    BYTE PTR [ebx],cl
  414f9a:	push   ecx
  414f9b:	push   ss
  414f9c:	ja     0x41500d
  414f9e:	aam    0xb9
  414fa0:	loope  0x414f6d
  414fa2:	mov    ebx,0xc65f84c0
  414fa7:	sbb    ah,BYTE PTR [ebp-0x124b6d83]
  414fad:	add    BYTE PTR [esi-0x9f78840],0x83
  414fb4:	test   DWORD PTR [ebp+esi*8+0x24],0xad352e04
  414fbc:	shl    BYTE PTR [eax],cl
  414fbe:	push   0xffffffb6
  414fc0:	sbb    al,0xd4
  414fc2:	mov    al,0xda
  414fc4:	xchg   ebp,eax
  414fc5:	jle    0x414fb1
  414fc7:	adc    esp,eax
  414fc9:	cmp    dh,BYTE PTR [ebx+0x4fe7a78]
  414fcf:	(bad)  
  414fd0:	sub    BYTE PTR [edi-0xeebc9a0],bh
  414fd6:	rcr    DWORD PTR [esi-0x21869eba],cl
  414fdc:	push   0xc
  414fde:	(bad)  
  414fdf:	in     eax,0x90
  414fe1:	lock out dx,eax
  414fe3:	pmulhuw mm4,QWORD PTR ds:[esp+ecx*1-0x47]
  414fe9:	sbb    eax,0xac7a735c
  414fee:	rcl    DWORD PTR [esi],cl
  414ff0:	into   
  414ff1:	imul   ebp,edi,0x7c
  414ff4:	les    esi,FWORD PTR [edx-0x5dca7605]
  414ffa:	inc    ecx
  414ffb:	outs   dx,DWORD PTR ds:[esi]
  414ffc:	mov    esi,0x2fc1affb
  415001:	inc    ecx
  415002:	pop    es
  415003:	adc    BYTE PTR [edi+0x2ccb7083],0xf
  41500a:	cmp    dh,dl
  41500c:	cmp    eax,DWORD PTR [ebx+esi*1-0x72]
  415010:	repz loop 0x415005
  415013:	call   0xc7a7699c
  415018:	pop    eax
  415019:	inc    esi
  41501a:	fild   WORD PTR [ecx+ecx*4-0x6e]
  41501e:	or     ebp,edx
  415020:	mov    ah,BYTE PTR [edi]
  415022:	inc    esp
  415023:	pop    ss
  415024:	lock and dl,dh
  415027:	pushf  
  415028:	scas   eax,DWORD PTR es:[edi]
  415029:	retf   
  41502a:	jmp    0x478:0x64cb8d15
  415031:	cs mov esp,0x5d1ba6bd
  415037:	pop    ebx
  415038:	adc    eax,0xfa129510
  41503d:	pop    eax
  41503e:	dec    ecx
  41503f:	nop
  415040:	ja     0x415071
  415042:	cwde   
  415043:	xchg   bp,ax
  415045:	mov    esp,?
  415047:	xor    ebp,edx
  415049:	mov    ch,0x62
  41504b:	push   es
  41504c:	push   0x35
  41504e:	retf   0x8ef6
  415051:	jbe    0x415052
  415053:	mov    ebp,0x805fc3da
  415058:	cmp    al,0x4c
  41505a:	fdivr  DWORD PTR [edx+eax*4+0x57]
  41505e:	sbb    esp,DWORD PTR [edi-0x3f494209]
  415064:	xchg   edx,eax
  415065:	cdq    
  415066:	fstp   DWORD PTR [ebp+0xc]
  415069:	fdivr  DWORD PTR [ebx-0x37abfd6f]
  41506f:	mov    dl,0x11
  415071:	frstor [edi-0x6b30d2e5]
  415077:	pop    edi
  415078:	aam    0x7a
  41507a:	mov    ebx,0x3e747ba5
  41507f:	jno    0x415009
  415081:	inc    edx
  415082:	xor    dh,BYTE PTR [ecx+0x7b]
  415085:	adc    al,0xc0
  415087:	aaa    
  415088:	(bad)  
  415089:	mov    ch,0x6
  41508b:	jbe    0x41508d
  41508d:	push   ds
  41508e:	dec    eax
  41508f:	jns    0x415032
  415091:	jmp    0x415048
  415093:	jns    0x415042
  415095:	das    
  415096:	pushf  
  415097:	test   al,0x80
  415099:	mov    WORD PTR [ecx],?
  41509b:	out    dx,al
  41509c:	pop    eax
  41509d:	mov    eax,ds:0x186f59fa
  4150a2:	jp     0x4150c1
  4150a4:	and    cl,0x67
  4150a7:	(bad)  
  4150a8:	mov    ebx,0x93d4e6bf
  4150ad:	stc    
  4150ae:	gs ja  0x415102
  4150b1:	cmp    al,0x11
  4150b3:	sbb    esi,esp
  4150b5:	scas   al,BYTE PTR es:[edi]
  4150b6:	adc    bh,bh
  4150b8:	pop    es
  4150b9:	mov    esi,0xefaa33fe
  4150be:	mov    ss,WORD PTR [ecx]
  4150c0:	fcompp 
  4150c2:	jne    0x415102
  4150c4:	dec    edx
  4150c5:	jp     0x41511b
  4150c7:	shl    edi,cl
  4150c9:	repz xor DWORD PTR [eax+ebx*4+0x770c83d4],ebx
  4150d1:	adc    al,0xcd
  4150d3:	call   0xa07bf2fd
  4150d8:	cmp    esp,esp
  4150da:	push   eax
  4150db:	lods   eax,DWORD PTR ds:[esi]
  4150dc:	adc    al,0x24
  4150de:	jle    0x4150b5
  4150e0:	adc    DWORD PTR [eax+0x36c1f36d],0xffffffc2
  4150e7:	xchg   ebp,eax
  4150e8:	repnz mov cl,0x61
  4150eb:	or     ebx,esi
  4150ed:	lds    ebx,FWORD PTR [ebp+ebx*4-0x184eca0c]
  4150f4:	inc    esi
  4150f5:	mov    bh,0xd
  4150f7:	sub    al,0x72
  4150f9:	je     0x41514b
  4150fb:	pop    ss
  4150fc:	test   al,0x73
  4150fe:	ret    0xbd2
  415101:	lahf   
  415102:	sbb    BYTE PTR [esi],0x2d
  415105:	xchg   esi,eax
  415106:	xchg   esi,eax
  415107:	imul   ebp,DWORD PTR [ebx-0x2400b0fd],0xddddb06a
  415111:	xchg   ebp,eax
  415112:	in     al,0xb9
  415114:	mov    cs,WORD PTR [edi-0x2e59198b]
  41511a:	xchg   edx,eax
  41511b:	sub    al,BYTE PTR [edi-0xe191c6e]
  415121:	xchg   DWORD PTR [eax+0x3e],eax
  415124:	sub    eax,0x25bd697b
  415129:	push   eax
  41512a:	(bad)  
  41512b:	jmp    0x415189
  41512d:	dec    edx
  41512e:	mov    ds:0x63e23025,al
  415133:	dec    eax
  415134:	dec    edx
  415135:	adc    ebp,DWORD PTR [edx-0x19]
  415138:	fisttp WORD PTR [edi+0x50]
  41513b:	inc    edx
  41513c:	into   
  41513d:	sbb    al,0x62
  41513f:	cwde   
  415140:	repz rcr DWORD PTR [esi-0x2229cb3f],1
  415147:	cld    
  415148:	mov    BYTE PTR [edi+ecx*1],al
  41514b:	and    ah,BYTE PTR [ecx+0x31091d49]
  415151:	inc    BYTE PTR [ebx-0x4f]
  415154:	jb     0x41517a
  415156:	inc    esp
  415157:	not    BYTE PTR [eax+0x4c]
  41515a:	scas   al,BYTE PTR es:[edi]
  41515b:	(bad)  
  41515c:	fwait
  41515d:	or     esi,DWORD PTR [edi]
  41515f:	ret    
  415160:	int    0xe7
  415162:	das    
  415163:	sbb    cl,BYTE PTR [ecx-0x383c48ce]
  415169:	sbb    BYTE PTR [ecx+0x3c],0xcb
  41516d:	mov    cl,bl
  41516f:	jp     0x415107
  415171:	out    0x4e,al
  415173:	imul   ebx,DWORD PTR [ebp+0x50442673],0x893eec8
  41517d:	sbb    ch,dl
  41517f:	adc    eax,0xde730eca
  415184:	fsubr  DWORD PTR [ebp+0x712577a]
  41518a:	cdq    
  41518b:	mov    esp,0x2bb719a4
  415190:	sub    edx,esp
  415192:	mov    ch,0xd8
  415194:	rol    BYTE PTR [edx+0x26],0x34
  415198:	fld    st(2)
  41519a:	xor    cl,dl
  41519c:	mov    edi,0x3f71a9b0
  4151a1:	aas    
  4151a2:	aad    0x84
  4151a4:	stc    
  4151a5:	out    0xd,al
  4151a7:	xlat   BYTE PTR ds:[ebx]
  4151a8:	lods   al,BYTE PTR ds:[esi]
  4151a9:	push   es
  4151aa:	xchg   esp,eax
  4151ab:	into   
  4151ac:	jp     0x4151fb
  4151ae:	imul   ecx,DWORD PTR [eax+0x22ed4d64],0x1d
  4151b5:	inc    eax
  4151b6:	push   edx
  4151b7:	popf   
  4151b8:	vorpd  xmm1,xmm7,xmm2
  4151bc:	rol    DWORD PTR [edi+0xec6964b],1
  4151c2:	or     eax,0x3b3f1a73
  4151c7:	imul   edx,DWORD PTR [ebx+0x1d],0xe4026dee
  4151ce:	mov    DWORD PTR [ecx-0x3b35bda7],edx
  4151d4:	in     eax,0x23
  4151d6:	xor    BYTE PTR [eax],dl
  4151d8:	repz cs xor eax,0x224003cb
  4151df:	mov    eax,0xb350c7f6
  4151e4:	fcom   QWORD PTR [ecx+0x3bb2f582]
  4151ea:	loope  0x4151c7
  4151ec:	out    dx,al
  4151ed:	pushf  
  4151ee:	ins    BYTE PTR es:[edi],dx
  4151ef:	push   0x40
  4151f1:	mov    ecx,0x3b3cdf90
  4151f6:	arpl   WORD PTR [esi+0x233041d5],cx
  4151fc:	xchg   esp,eax
  4151fd:	sbb    DWORD PTR [esi-0x7a],0xffffff8b
  415201:	outs   dx,DWORD PTR ds:[esi]
  415202:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415203:	pop    ss
  415204:	push   ss
  415205:	jne    0x415260
  415207:	ins    BYTE PTR es:[edi],dx
  415208:	jl     0x415280
  41520a:	or     edx,DWORD PTR [edi+0x2e3bf72]
  415210:	not    DWORD PTR [edx-0x80]
  415213:	pop    ebx
  415214:	mov    ch,0x23
  415216:	rcl    DWORD PTR [esi],1
  415218:	cmc    
  415219:	loop   0x415247
  41521b:	sub    DWORD PTR [esi+0x50644048],0x26
  415222:	aam    0x2e
  415224:	or     BYTE PTR [ebx],0xf8
  415227:	std    
  415228:	add    BYTE PTR [ebx+0x60b1a4a8],bh
  41522e:	and    eax,0xe03761e6
  415233:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415234:	sub    DWORD PTR ds:0xe9268af5,edi
  41523a:	dec    ebx
  41523b:	mov    al,ds:0x91baaceb
  415240:	aad    0x80
  415242:	sar    ch,0xbb
  415245:	test   DWORD PTR [ecx+0x6c915aae],eax
  41524b:	into   
  41524c:	call   0x58c3:0xdbcdfdc1
  415253:	lods   eax,DWORD PTR ds:[esi]
  415254:	sahf   
  415255:	cli    
  415256:	xor    al,0x99
  415258:	out    dx,al
  415259:	mov    bl,0xae
  41525b:	out    0xba,eax
  41525d:	loope  0x41521f
  41525f:	ficom  DWORD PTR [ebx]
  415261:	push   ds
  415262:	push   0x825cd4d6
  415267:	fidivr WORD PTR [ebx]
  415269:	ret    
  41526a:	(bad)  
  41526b:	xchg   esp,eax
  41526c:	cld    
  41526d:	shr    BYTE PTR [ebp+0x17],1
  415270:	mov    al,0x50
  415272:	mov    BYTE PTR [eax+eax*2-0x11861369],ah
  415279:	mov    esi,0xf55b0d26
  41527e:	inc    edi
  41527f:	pop    ecx
  415280:	call   0x79e2:0x935ec967
  415287:	xlat   BYTE PTR ds:[ebx]
  415288:	clc    
  415289:	pop    ebx
  41528a:	add    BYTE PTR [ecx+0x1f0e20a3],al
  415290:	(bad)  
  415291:	ror    BYTE PTR [esi-0x3627a118],cl
  415297:	add    BYTE PTR [esp+edi*4-0x9],al
  41529b:	cmp    DWORD PTR [ecx+0x3d],edx
  41529e:	aam    0xcf
  4152a0:	ss jb  0x41524f
  4152a3:	aas    
  4152a4:	mov    ch,0x4a
  4152a6:	or     BYTE PTR [edi],al
  4152a8:	or     BYTE PTR [ebx-0x6a],al
  4152ab:	das    
  4152ac:	pop    edi
  4152ad:	nop
  4152ae:	retf   0xf0c6
  4152b1:	in     eax,0xd9
  4152b3:	xor    eax,0x46f25c12
  4152b8:	mov    eax,0xd569ff34
  4152bd:	jg     0x41526f
  4152bf:	imul   ebp,ebx,0x19
  4152c2:	rcl    DWORD PTR [esi+0x60b9942a],cl
  4152c8:	jmp    0x41528b
  4152ca:	add    eax,0x1ab88ab9
  4152cf:	(bad)
  4152d2:	or     eax,0xd918f70c
  4152d7:	jb     0x41527b
  4152d9:	pushf  
  4152da:	xchg   esi,eax
  4152db:	clc    
  4152dc:	mov    ch,0x7f
  4152de:	stc    
  4152df:	sahf   
  4152e0:	ja     0x41528c
  4152e2:	mov    DWORD PTR [ebp-0x17],ebx
  4152e5:	loopne 0x4152dd
  4152e7:	sub    al,0x74
  4152e9:	mov    cl,0x7f
  4152eb:	aad    0x37
  4152ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152ee:	inc    edx
  4152ef:	pusha  
  4152f0:	sub    eax,0x902018e4
  4152f5:	daa    
  4152f6:	xor    eax,0x2be112d0
  4152fb:	and    edx,DWORD PTR [ecx+0x39bf7c49]
  415301:	sbb    al,0x9c
  415303:	and    dl,bl
  415305:	loope  0x41528a
  415307:	mov    al,0x2d
  415309:	adc    al,0xf6
  41530b:	bound  esi,QWORD PTR [ebp-0x21653225]
  415311:	inc    ebx
  415312:	fidiv  WORD PTR [ebx+0x4f8f9ece]
  415318:	les    esi,FWORD PTR [ebx]
  41531a:	add    dl,BYTE PTR fs:[edi-0x2f1820dd]
  415321:	call   0x75a079ed
  415326:	jb     0x4152d2
  415328:	ret    
  415329:	adc    eax,0xaa030805
  41532e:	cmp    al,0xf9
  415330:	pop    ds
  415331:	not    edx
  415333:	add    eax,ecx
  415335:	jno    0x415354
  415337:	lea    ebx,[edx]
  415339:	add    al,BYTE PTR [ecx+eiz*2]
  41533c:	cmc    
  41533d:	mov    ah,0x7e
  41533f:	jg     0x4153ac
  415341:	jge    0x4152cc
  415343:	jno    0x415347
  415345:	imul   eax,DWORD PTR es:[ebx],0xaf2018c2
  41534c:	retf   
  41534d:	push   edx
  41534e:	mov    edx,0xff46071e
  415353:	add    BYTE PTR [ecx-0x7],bh
  415356:	test   eax,0x382c34cd
  41535b:	or     al,al
  41535d:	mov    cl,0xca
  41535f:	jmp    0x3362:0xdf602008
  415366:	pop    es
  415367:	mov    BYTE PTR [ecx+edx*8+0x76da0230],dh
  41536e:	xchg   esi,eax
  41536f:	add    al,0xe8
  415371:	xor    bl,BYTE PTR [ebx-0x1a]
  415374:	adc    DWORD PTR [edx-0x386eea9c],eax
  41537a:	sar    BYTE PTR [ebp+0x1f],cl
  41537d:	xchg   ebx,eax
  41537e:	xor    ch,BYTE PTR [ecx-0x7c]
  415381:	fiadd  WORD PTR [esi-0x1f334e7]
  415387:	ja     0x415353
  415389:	cmc    
  41538a:	xchg   eax,esi
  41538c:	adc    eax,0xe469e7f3
  415391:	(bad)  
  415392:	mov    ebx,DWORD PTR [edi-0x33]
  415395:	jae    0x4153b0
  415397:	xchg   BYTE PTR [esi+0x4573d34],dh
  41539d:	(bad)  
  41539e:	out    dx,al
  41539f:	dec    edx
  4153a0:	imul   edx,DWORD PTR [ebx+0x4a],0x27c6a17b
  4153a7:	push   esp
  4153a8:	dec    esi
  4153a9:	shl    BYTE PTR [edi+0x709edf62],1
  4153af:	imul   esi,ecx,0x71
  4153b2:	sahf   
  4153b3:	mov    dl,0xa1
  4153b5:	push   ebp
  4153b6:	inc    ebp
  4153b7:	ins    BYTE PTR es:[edi],dx
  4153b8:	sbb    DWORD PTR [eax-0x2f],edi
  4153bb:	sbb    cl,ah
  4153bd:	outs   dx,BYTE PTR ds:[esi]
  4153be:	test   DWORD PTR [edi-0x23562bd4],edi
  4153c4:	and    esi,DWORD PTR [esi+0xd863745]
  4153ca:	jo     0x415437
  4153cc:	std    
  4153cd:	shl    BYTE PTR [ecx-0x2a76824b],cl
  4153d3:	das    
  4153d4:	sbb    al,0xf2
  4153d6:	xor    BYTE PTR [edx],cl
  4153d8:	cmp    BYTE PTR [edi+0x19124320],0xc1
  4153df:	stos   BYTE PTR es:[edi],al
  4153e0:	jae    0x41542b
  4153e2:	mov    WORD PTR [esi],?
  4153e4:	mov    ecx,0xfd210bd
  4153e9:	xor    cl,ah
  4153eb:	lock pop edi
  4153ed:	xchg   ebx,eax
  4153ee:	mov    ebp,DWORD PTR [eax+0x5b]
  4153f1:	jne    0x4153bb
  4153f3:	pop    es
  4153f4:	je     0x41541e
  4153f6:	cmp    al,0xa0
  4153f8:	clc    
  4153f9:	test   DWORD PTR [ebp-0x62c92979],esp
  4153ff:	hlt    
  415400:	or     eax,0x30643e8e
  415405:	enter  0x1626,0xa1
  415409:	lods   eax,DWORD PTR ds:[esi]
  41540a:	sbb    dl,ch
  41540c:	jmp    0xb397:0xe7ed7d9d
  415413:	sub    cl,dh
  415415:	jg     0x415440
  415417:	dec    ebx
  415418:	aas    
  415419:	hlt    
  41541a:	mov    ch,0x7e
  41541c:	sbb    DWORD PTR [ecx+eiz*4-0x184d3f5d],ecx
  415423:	jle    0x4153e4
  415425:	or     dl,BYTE PTR [ebp+0x7e432f00]
  41542b:	mov    al,ds:0xc4badda7
  415430:	sub    DWORD PTR [ebx-0x6b],esp
  415433:	jb     0x415469
  415435:	les    ebp,FWORD PTR [ebp+esi*8+0x56]
  415439:	mov    al,0x74
  41543b:	pop    edx
  41543c:	mov    ah,0x64
  41543e:	mov    bh,BYTE PTR [ebx-0x51b03c7c]
  415444:	test   al,0x18
  415446:	or     DWORD PTR [ebx+0x327e1f8f],eax
  41544c:	std    
  41544d:	in     eax,0x7
  41544f:	push   esi
  415450:	aad    0xc1
  415452:	stos   BYTE PTR es:[edi],al
  415453:	xor    dh,BYTE PTR [ebx]
  415455:	xor    ah,BYTE PTR [ecx+0x6b4023cb]
  41545b:	(bad)  
  41545c:	rol    edx,cl
  41545e:	out    dx,al
  41545f:	adc    eax,0x25923b1a
  415464:	adc    al,0xe2
  415466:	and    al,0xb0
  415468:	aas    
  415469:	and    al,0xab
  41546b:	pop    ss
  41546c:	inc    eax
  41546d:	adc    ah,BYTE PTR [edx-0x4c]
  415470:	sub    ch,al
  415472:	mov    BYTE PTR [edx],0x26
  415475:	lahf   
  415476:	pop    eax
  415477:	mov    esi,0x26c4d2f7
  41547c:	add    eax,0x9bc0af73
  415481:	shl    DWORD PTR [ecx+0x528fd64a],0x31
  415488:	ins    BYTE PTR es:[edi],dx
  415489:	rcr    DWORD PTR [esi-0x3a],0x67
  41548d:	js     0x415480
  41548f:	or     eax,0x41232d80
  415494:	lds    edi,FWORD PTR [edx+0x62]
  415497:	jno    0x4154c4
  415499:	icebp  
  41549a:	loope  0x4154ce
  41549c:	loopne 0x41544a
  41549e:	push   esp
  41549f:	out    0x4b,eax
  4154a1:	imul   edx,DWORD PTR [esi-0xd],0xb8b5aa88
  4154a8:	scas   eax,DWORD PTR es:[edi]
  4154a9:	ror    DWORD PTR [eax+0x4fbb55f3],1
  4154af:	mov    dh,0x2
  4154b1:	xchg   esi,eax
  4154b2:	xchg   ebx,eax
  4154b3:	out    0x33,eax
  4154b5:	push   edi
  4154b6:	jmp    0x4154cc
  4154b8:	mov    al,0x77
  4154ba:	dec    edi
  4154bb:	je     0x4154eb
  4154bd:	fsubr  QWORD PTR fs:[eax]
  4154c0:	inc    ebp
  4154c1:	mov    esp,DWORD PTR [ebp-0x31fe096b]
  4154c7:	mov    esi,0xe216a903
  4154cc:	sbb    bl,BYTE PTR fs:[ecx-0x38]
  4154d0:	jg     0x4154ef
  4154d2:	xchg   ebx,eax
  4154d3:	push   ss
  4154d4:	pop    eax
  4154d5:	xor    DWORD PTR [esp+ecx*4-0x5273ce03],edi
  4154dc:	(bad)  
  4154dd:	jle    0x41553f
  4154df:	mov    eax,ds:0xc9eb2845
  4154e4:	(bad)  
  4154e5:	aad    0xec
  4154e7:	inc    ecx
  4154e8:	mov    fs,ebx
  4154ea:	xchg   edi,ebp
  4154ec:	mov    dl,0x97
  4154ee:	mov    ds:0x75c2769d,eax
  4154f3:	sbb    DWORD PTR [eax],edx
  4154f5:	mov    ch,0x23
  4154f7:	sahf   
  4154f8:	int    0x16
  4154fa:	(bad)  
  4154fc:	dec    edx
  4154fd:	jmp    0x90b4:0x69176a36
  415504:	lea    ebx,[eax-0x6f]
  415507:	or     al,0xc3
  415509:	xor    DWORD PTR [esi-0x6e8b4bd2],0x783da663
  415513:	jo     0x4154b8
  415515:	mov    ds:0xfc2db51,eax
  41551a:	mov    ah,0x8a
  41551c:	or     al,0xa8
  41551e:	leave  
  41551f:	sub    dl,ch
  415521:	mov    ecx,0xb4ee49c6
  415526:	jo     0x415570
  415528:	add    eax,0x14e190c
  41552d:	push   ecx
  41552e:	push   esp
  41552f:	inc    ebx
  415530:	sbb    cl,dl
  415532:	es jge 0x4154d9
  415535:	es fwait
  415537:	daa    
  415538:	sub    BYTE PTR [edi+0x7c],cl
  41553b:	(bad)  
  41553d:	add    al,0x90
  41553f:	pop    ecx
  415540:	retf   
  415541:	dec    ecx
  415542:	pop    eax
  415543:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415544:	daa    
  415545:	inc    ebp
  415546:	or     esi,DWORD PTR [ecx+edi*2-0x57]
  41554a:	in     al,dx
  41554b:	fld    QWORD PTR [edi+0x2b]
  41554e:	lea    ecx,[eax-0x5b]
  415551:	xor    cl,BYTE PTR [eax]
  415553:	dec    ebp
  415554:	stos   BYTE PTR es:[edi],al
  415555:	test   BYTE PTR [ecx-0x6],0xb2
  415559:	cmc    
  41555a:	mov    bl,0x74
  41555c:	cli    
  41555d:	in     eax,dx
  41555e:	test   ah,cl
  415560:	mov    esi,esp
  415562:	in     eax,dx
  415563:	lock mov ds:0x507e4b05,al
  415569:	dec    edi
  41556a:	cdq    
  41556b:	mov    WORD PTR [ecx-0x33],ds
  41556e:	lea    ebx,[edx-0x67]
  415571:	xchg   bh,bl
  415573:	push   cs
  415574:	cmp    DWORD PTR [edi-0x28],eax
  415577:	mov    al,0xf5
  415579:	inc    ecx
  41557a:	fwait
  41557b:	add    al,0x88
  41557d:	adc    BYTE PTR ss:[ecx],0x94
  415581:	mov    al,0xdd
  415583:	mov    bl,BYTE PTR [esi+0x67cc832e]
  415589:	adc    DWORD PTR [ecx],esp
  41558b:	es jmp 0x66be2718
  415591:	xchg   edx,eax
  415592:	dec    esp
  415593:	into   
  415594:	jmp    0xf553d1a1
  415599:	sbb    DWORD PTR [edx+esi*2],ebx
  41559c:	and    DWORD PTR [ebx+eiz*1-0x54],ecx
  4155a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155a1:	(bad)  
  4155a2:	jne    0x415527
  4155a4:	and    DWORD PTR [eax-0x64],ebp
  4155a7:	cmp    BYTE PTR [eax+0x5e],al
  4155aa:	jmp    0xfe17f98c
  4155af:	jl     0x4155d3
  4155b1:	mov    eax,0x326c3a13
  4155b6:	ds aam 0xae
  4155b9:	dec    esi
  4155ba:	fninit 
  4155bc:	outs   dx,BYTE PTR ds:[esi]
  4155bd:	mov    cl,0xde
  4155bf:	shl    ebx,cl
  4155c1:	mov    esp,0x6234aa8c
  4155c6:	mov    eax,ds:0xd7bc9bbb
  4155cb:	fisubr DWORD PTR [edi]
  4155cd:	dec    esi
  4155ce:	repnz adc al,0x54
  4155d1:	dec    edi
  4155d2:	loopne 0x41559a
  4155d4:	sar    DWORD PTR [eax+eiz*8],0xfc
  4155d8:	mov    edx,0xbddbda4f
  4155dd:	loopne 0x4155ed
  4155df:	mov    bh,0xaf
  4155e1:	jg     0x415582
  4155e3:	push   0x8fd12712
  4155e8:	add    al,0xd2
  4155ea:	pop    ss
  4155eb:	int    0x40
  4155ed:	and    dh,dh
  4155ef:	xchg   ebx,eax
  4155f0:	ss mov cl,0x4
  4155f3:	jl     0x41558d
  4155f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155f6:	add    eax,0x337850d9
  4155fb:	outs   dx,DWORD PTR ds:[esi]
  4155fc:	and    bl,al
  4155fe:	xchg   ecx,eax
  4155ff:	jmp    0x3f86:0x192fce26
  415606:	add    DWORD PTR [edx+0x51],ecx
  415609:	idiv   DWORD PTR [ebp+0x25]
  41560c:	sbb    al,0xd3
  41560e:	(bad)  
  41560f:	repnz (bad) 
  415611:	retf   0x3d28
  415614:	shl    dl,cl
  415616:	sub    DWORD PTR [edi+0x5bb1db18],edx
  41561c:	jg     0x41562a
  41561e:	mov    ebx,DWORD PTR [edi+0x6f]
  415621:	fisubr WORD PTR [ecx-0x63]
  415624:	push   0xffffffc8
  415626:	in     eax,dx
  415627:	mov    dl,0x38
  415629:	or     BYTE PTR [esi],ah
  41562b:	leave  
  41562c:	inc    edx
  41562d:	dec    esi
  41562e:	adc    bl,bh
  415630:	push   ebx
  415631:	jae    0x4155f2
  415633:	and    DWORD PTR [edi+0x7f],esp
  415636:	sub    bl,BYTE PTR [ecx]
  415638:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415639:	jg     0x415613
  41563b:	es push esi
  41563d:	sbb    esi,DWORD PTR [edi]
  41563f:	gs out 0x21,eax
  415642:	adc    ch,dh
  415644:	pop    esp
  415645:	lahf   
  415646:	xor    cl,BYTE PTR [esi-0x24]
  415649:	sub    edi,esi
  41564b:	adc    eax,0x8d71138a
  415650:	loop   0x415692
  415652:	push   cs
  415653:	loope  0x4155fe
  415655:	pushf  
  415656:	xlat   BYTE PTR ds:[ebx]
  415657:	leave  
  415658:	lods   al,BYTE PTR ds:[esi]
  415659:	inc    ecx
  41565a:	test   al,0xb3
  41565c:	push   eax
  41565d:	cdq    
  41565e:	jmp    0xad9:0x8669cde5
  415665:	push   ebp
  415666:	and    ecx,ebp
  415668:	inc    ebx
  415669:	in     eax,dx
  41566a:	inc    edi
  41566b:	xor    edi,DWORD PTR [ebx-0x7f83fbf6]
  415671:	add    BYTE PTR ds:0xb3f82894,dl
  415677:	jl     0x415680
  415679:	js     0x4156fa
  41567b:	push   ebx
  41567c:	push   ss
  41567d:	cwde   
  41567e:	inc    eax
  41567f:	imul   ebx,eax,0xffffffa3
  415682:	xchg   esi,eax
  415683:	push   ecx
  415684:	cwde   
  415685:	out    0x48,al
  415687:	xchg   ebx,eax
  415688:	outs   dx,BYTE PTR ds:[esi]
  415689:	and    eax,0x7a2704b
  41568e:	xchg   ebp,eax
  41568f:	ss fwait
  415691:	fs jae 0x41562b
  415694:	jmp    0x415634
  415696:	pusha  
  415697:	je     0x41564c
  415699:	shl    DWORD PTR cs:[edx],1
  41569c:	push   ebx
  41569d:	adc    al,0x16
  41569f:	lock jecxz 0x41566b
  4156a2:	popa   
  4156a3:	jns    0x415698
  4156a5:	scas   eax,DWORD PTR es:[edi]
  4156a6:	jae    0x4156ca
  4156a8:	inc    ebp
  4156a9:	shl    DWORD PTR [ecx],0xd9
  4156ac:	push   0xffffffad
  4156ae:	fsubr  DWORD PTR [esi-0x74]
  4156b1:	mov    dh,0x67
  4156b3:	jmp    0x415690
  4156b5:	lahf   
  4156b6:	push   ecx
  4156b7:	mov    ds:0xac88adab,al
  4156bc:	call   0x848a9742
  4156c1:	paddq  mm6,QWORD PTR [ecx]
  4156c4:	scas   eax,DWORD PTR es:[edi]
  4156c5:	mov    ah,0x61
  4156c7:	test   al,0xb3
  4156c9:	ins    DWORD PTR es:[edi],dx
  4156ca:	xor    eax,0x278822cd
  4156cf:	xor    al,0x16
  4156d1:	jecxz  0x415694
  4156d3:	outs   dx,BYTE PTR ds:[esi]
  4156d4:	je     0x4156c4
  4156d6:	cdq    
  4156d7:	mov    cl,0x90
  4156d9:	mov    esp,0x52072d05
  4156de:	pop    edx
  4156df:	call   0x8cb5:0x6197cf22
  4156e6:	xchg   ebx,eax
  4156e7:	mov    WORD PTR [ecx-0xc8065c7],cs
  4156ed:	enter  0xf9c0,0xbf
  4156f1:	and    bh,0xa6
  4156f4:	stos   DWORD PTR es:[edi],eax
  4156f5:	rcr    DWORD PTR [edx-0x36],1
  4156f8:	shr    DWORD PTR [edi+0x7d70d67f],0x5e
  4156ff:	ins    DWORD PTR es:[edi],dx
  415700:	inc    ecx
  415701:	or     ah,BYTE PTR [esi]
  415703:	push   edx
  415704:	out    0xdb,eax
  415706:	hlt    
  415707:	mov    al,ds:0x4c1addc1
  41570c:	fisub  DWORD PTR [ecx+0x7dff6b4f]
  415712:	mov    ds:0x1c26c031,eax
  415717:	jp     0x4156b1
  415719:	pop    ss
  41571a:	test   DWORD PTR [edi+0x35],0x161ea266
  415721:	jno    0x41576b
  415723:	and    eax,ebp
  415725:	addr16 dec ecx
  415727:	jnp    0x4156f1
  415729:	inc    esp
  41572a:	sub    bh,cl
  41572c:	inc    ebp
  41572d:	ins    DWORD PTR es:[edi],dx
  41572e:	xchg   edi,eax
  41572f:	hlt    
  415730:	inc    ecx
  415731:	mov    eax,ds:0xdddbd716
  415736:	add    DWORD PTR [edi+ebp*4],0xeb92fee7
  41573d:	fimul  DWORD PTR [edx+0x5821553b]
  415743:	pop    ecx
  415745:	sub    DWORD PTR [eax+0x5f],esi
  415748:	push   ebx
  415749:	retf   
  41574a:	adc    al,BYTE PTR [eax]
  41574c:	sar    BYTE PTR [eax-0x494f16c7],0x59
  415753:	js     0x415776
  415755:	aad    0xe2
  415757:	xor    eax,0xf7625d46
  41575c:	xor    BYTE PTR ss:[ebx-0x2e],al
  415760:	cmp    al,0x20
  415762:	inc    ebx
  415763:	jp     0x415744
  415765:	or     al,0x84
  415767:	pushf  
  415768:	mov    ?,WORD PTR [edx+edx*8]
  41576b:	mov    ah,0x14
  41576d:	mov    ecx,ebp
  41576f:	ins    BYTE PTR es:[edi],dx
  415770:	xor    BYTE PTR [ebx-0x60bcf58a],dl
  415776:	cmp    al,0x27
  415778:	call   0x785e:0x2156e8b2
  41577f:	and    BYTE PTR [edx+0x2c],al
  415782:	popf   
  415783:	imul   edi,edi,0xe388eddf
  415789:	dec    edx
  41578a:	jae    0x415734
  41578c:	sub    eax,0x3a75a57c
  415791:	hlt    
  415792:	test   DWORD PTR [di+0x3ef6],edi
  415797:	int    0x6
  415799:	jmp    0x415755
  41579b:	lods   al,BYTE PTR ds:[esi]
  41579c:	(bad)  
  41579d:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41579f:	enter  0xbfa7,0x84
  4157a3:	or     DWORD PTR [edx-0x70],eax
  4157a6:	jae    0x415763
  4157a8:	add    DWORD PTR [esi],edi
  4157aa:	(bad)  
  4157ab:	int    0xfc
  4157ad:	and    eax,edx
  4157af:	mov    cl,0xda
  4157b1:	jecxz  0x415828
  4157b3:	dec    esp
  4157b4:	aas    
  4157b5:	mov    cl,0x2a
  4157b7:	shl    DWORD PTR [ebp-0x54],1
  4157ba:	push   ss
  4157bb:	stos   DWORD PTR es:[edi],eax
  4157bc:	sub    bl,BYTE PTR [ebp-0x60]
  4157bf:	lahf   
  4157c0:	pop    edx
  4157c1:	push   ss
  4157c2:	xlat   BYTE PTR ds:[ebx]
  4157c3:	(bad)  
  4157c4:	sbb    al,0x40
  4157c6:	fwait
  4157c7:	mov    bh,0xf
  4157c9:	pop    ebp
  4157ca:	sahf   
  4157cb:	fistp  WORD PTR [esi]
  4157cd:	ret    
  4157ce:	out    dx,eax
  4157cf:	inc    edx
  4157d0:	and    al,0x59
  4157d2:	xchg   BYTE PTR [ebp-0x8],cl
  4157d5:	or     esp,DWORD PTR [edi-0x25]
  4157d8:	loop   0x415793
  4157da:	sahf   
  4157db:	pop    edi
  4157dc:	sahf   
  4157dd:	mov    ds:0x28368252,eax
  4157e2:	scas   eax,DWORD PTR es:[edi]
  4157e3:	cmp    BYTE PTR [edi+0x613a12b5],bl
  4157e9:	fsubr  QWORD PTR [ecx-0x5c2536a4]
  4157ef:	mov    ebx,0x6a035fba
  4157f4:	sbb    BYTE PTR [ecx+0x52],cl
  4157f7:	push   eax
  4157f8:	mov    dh,0x29
  4157fa:	sbb    eax,0x561560d0
  4157ff:	mov    cl,ah
  415801:	scas   eax,DWORD PTR es:[edi]
  415802:	js     0x41585a
  415804:	inc    edi
  415805:	in     eax,dx
  415806:	les    ecx,FWORD PTR [ecx]
  415808:	mov    eax,0xc7164145
  41580d:	inc    ebp
  41580e:	add    cl,dl
  415810:	loope  0x4157d1
  415812:	pop    ds
  415813:	fmul   DWORD PTR ds:0x93f389dc
  415819:	dec    edi
  41581a:	shl    DWORD PTR [edi+0x3e],cl
  41581d:	(bad)
  415820:	sbb    ecx,edx
  415822:	pushf  
  415823:	(bad)  
  415824:	cwde   
  415825:	aas    
  415826:	mov    ah,0x62
  415828:	mul    DWORD PTR [esi]
  41582a:	inc    ebx
  41582b:	sbb    ebx,DWORD PTR [ecx+0x6db8d4ae]
  415831:	mov    edx,0x89ab2fb9
  415836:	fwait
  415837:	(bad)  
  415838:	mov    esp,0x42c175fc
  41583d:	and    eax,0xc6c93ac5
  415842:	or     ch,BYTE PTR [eax+eax*2]
  415845:	(bad)  
  415846:	jmp    0x41582d
  415848:	in     eax,0xda
  41584a:	jp     0x415831
  41584c:	push   ss
  41584d:	imul   BYTE PTR [edi+0x45]
  415850:	push   ebx
  415851:	nop
  415852:	push   edx
  415853:	es ret 
  415855:	loop   0x415864
  415857:	mov    ebx,0x37fe151e
  41585c:	(bad)  
  41585d:	xor    esi,DWORD PTR [eax]
  41585f:	inc    ecx
  415860:	aad    0x76
  415862:	xchg   ebp,eax
  415863:	adc    BYTE PTR [esi],ch
  415865:	dec    esi
  415866:	cmc    
  415867:	js     0x4158b7
  415869:	pop    eax
  41586a:	aad    0xe0
  41586c:	mov    ds:0x147454e3,al
  415871:	adc    bl,bh
  415873:	mov    ch,0x8a
  415875:	test   al,0x9a
  415877:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415878:	mov    ebx,0xdf349cef
  41587d:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41587f:	xchg   esp,eax
  415880:	add    DWORD PTR [esi+ebp*2-0x6a],ecx
  415884:	sets   BYTE PTR [esi]
  415887:	jbe    0x415886
  415889:	push   ss
  41588a:	xor    BYTE PTR [ebx],ch
  41588c:	sbb    esp,DWORD PTR [ebp+0x47b15881]
  415892:	int    0xb4
  415894:	jno    0x4158a5
  415896:	jmp    0x11a3:0x33c22f24
  41589d:	mov    ebx,0x317f3cff
  4158a2:	cmp    dl,BYTE PTR [ecx]
  4158a4:	test   al,0xbb
  4158a6:	jge    0x41591a
  4158a8:	icebp  
  4158a9:	test   eax,0x971d3607
  4158ae:	mov    ch,0x24
  4158b0:	add    BYTE PTR [edx-0x52404149],bl
  4158b6:	push   ebp
  4158b7:	mov    ch,0xe9
  4158b9:	out    dx,al
  4158ba:	xchg   edx,eax
  4158bb:	mov    ah,0xf5
  4158bd:	dec    ebp
  4158be:	cwde   
  4158bf:	es retf 0x5757
  4158c3:	loopne 0x415925
  4158c5:	mov    eax,0x8eea5703
  4158ca:	repz call 0x9e32ea5a
  4158d0:	(bad)  
  4158d1:	push   edx
  4158d2:	or     ecx,0x4b123fa6
  4158d8:	mov    esp,0xb2c18418
  4158dd:	fstp   TBYTE PTR [ebx+ecx*4-0x677868cd]
  4158e4:	add    bl,BYTE PTR [eax+edi*4-0x5198216a]
  4158eb:	std    
  4158ec:	mov    ds:0x3f3a29ba,al
  4158f1:	mov    DWORD PTR [eax-0x298d61e],eax
  4158f7:	inc    ebx
  4158f8:	sbb    edx,DWORD PTR [edi+0x57]
  4158fb:	xchg   ebp,eax
  4158fc:	stos   DWORD PTR es:[edi],eax
  4158fd:	ins    BYTE PTR es:[edi],dx
  4158fe:	ins    DWORD PTR es:[edi],dx
  4158ff:	add    DWORD PTR [ebp+0x8],ebx
  415902:	push   0xf22493c7
  415907:	stos   BYTE PTR es:[edi],al
  415908:	mov    edi,0xef8f0334
  41590d:	retf   0x6b68
  415910:	push   eax
  415911:	and    ah,BYTE PTR [ebp-0x74aa18b8]
  415917:	data16 fisubr DWORD PTR [edi-0x66]
  41591b:	mov    dl,0x28
  41591d:	pop    edx
  41591e:	jg     0x415920
  415920:	(bad)  
  415921:	push   esp
  415922:	and    ecx,DWORD PTR [ebx+0xb]
  415925:	push   ds
  415926:	mov    esp,0x61dad5e9
  41592b:	jae    0x4158cb
  41592d:	loope  0x415971
  41592f:	jle    0x4158d2
  415931:	mov    ecx,0xd095e310
  415936:	pop    edi
  415937:	in     eax,0xa1
  415939:	adc    ch,BYTE PTR [ebx-0x75]
  41593c:	add    al,0xd
  41593e:	inc    edi
  41593f:	das    
  415940:	adc    eax,0x533ab08e
  415945:	test   eax,0x51990bf5
  41594a:	ins    BYTE PTR es:[edi],dx
  41594b:	mov    esi,0xafd39918
  415950:	dec    ecx
  415951:	mov    cl,0x54
  415953:	add    ah,dl
  415955:	cmp    al,0xb
  415957:	adc    eax,DWORD PTR [ebp+0x6a7d0f89]
  41595d:	aas    
  41595e:	dec    edx
  41595f:	sbb    DWORD PTR [esi-0x9],ecx
  415962:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415963:	and    eax,0xaf39cb9a
  415968:	gs push cs
  41596a:	sahf   
  41596b:	cmp    al,0x84
  41596d:	or     bh,BYTE PTR [eax+0x51]
  415970:	jae    0x41590f
  415972:	fistp  WORD PTR [edx]
  415974:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415975:	add    eax,0xc5a03d04
  41597a:	push   ecx
  41597b:	jmp    0x4159e1
  41597d:	cmp    al,0x8a
  41597f:	rcr    DWORD PTR [edi+edi*1+0x1a896dcc],0xcb
  415987:	jmp    0xab18c522
  41598c:	mov    BYTE PTR [ecx+0x34e6427a],bh
  415992:	test   al,0xe2
  415994:	hlt    
  415995:	jb     0x415a03
  415997:	test   BYTE PTR [ecx-0x38],cl
  41599a:	pop    ebp
  41599b:	loopne 0x4159a9
  41599d:	push   ss
  41599e:	cmp    dh,bh
  4159a0:	pop    eax
  4159a1:	int3   
  4159a2:	or     al,BYTE PTR [edx]
  4159a4:	rcr    DWORD PTR [edx+esi*1-0x48428a89],0x8c
  4159ac:	push   ss
  4159ad:	ss or  eax,0x8b24f3e1
  4159b3:	repnz sahf 
  4159b5:	shl    ecx,1
  4159b7:	pop    ss
  4159b8:	add    ah,BYTE PTR [edi]
  4159ba:	cmp    al,bl
  4159bc:	mov    al,ds:0x6cc34d2b
  4159c1:	push   edx
  4159c2:	cli    
  4159c3:	and    al,BYTE PTR [edi]
  4159c5:	cmp    DWORD PTR [esi],esi
  4159c7:	vmwrite ecx,DWORD PTR [esi-0x1a8e6b1e]
  4159ce:	leave  
  4159cf:	sbb    DWORD PTR [eax],0xfffffff8
  4159d2:	leave  
  4159d3:	xchg   BYTE PTR [esi+0x52],al
  4159d6:	sbb    BYTE PTR [edi+0x79],dl
  4159d9:	ds cwde 
  4159db:	(bad)  
  4159dc:	push   esi
  4159dd:	sar    al,1
  4159df:	jecxz  0x4159a9
  4159e1:	xchg   esp,eax
  4159e2:	mov    eax,0x4cc7a8fb
  4159e7:	and    ebp,DWORD PTR [ecx]
  4159e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159ea:	stos   BYTE PTR es:[edi],al
  4159eb:	out    0x28,al
  4159ed:	loopne 0x41599e
  4159ef:	call   0x9ac8:0xf0092a51
  4159f6:	adc    eax,0xfba6cff6
  4159fb:	mov    esp,0xdf7ce76c
  415a00:	int    0xaf
  415a02:	scas   al,BYTE PTR es:[edi]
  415a03:	sub    esi,DWORD PTR [edx-0x63d7bc0]
  415a09:	shl    BYTE PTR [edx],1
  415a0b:	out    dx,eax
  415a0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a0d:	popa   
  415a0e:	push   cs
  415a0f:	push   edx
  415a10:	frstor [ebx+ecx*2]
  415a13:	and    bl,BYTE PTR [ebp-0x7d781a51]
  415a19:	ins    DWORD PTR es:[edi],dx
  415a1a:	das    
  415a1b:	pushf  
  415a1c:	xchg   ecx,eax
  415a1d:	and    BYTE PTR [esi+0x30b6b226],al
  415a23:	sub    al,BYTE PTR [eax+ebp*4]
  415a26:	jge    0x415a41
  415a28:	cmp    BYTE PTR [esi],0x20
  415a2b:	pop    ds
  415a2c:	clc    
  415a2d:	jle    0x4159b3
  415a2f:	or     al,0x38
  415a31:	in     al,0xd0
  415a33:	lahf   
  415a34:	outs   dx,BYTE PTR ds:[esi]
  415a35:	and    ch,BYTE PTR [ebx+eiz*4+0x7fbce8d8]
  415a3c:	sti    
  415a3d:	and    DWORD PTR [eax-0x41],ebp
  415a40:	call   0xa5d9:0x6e7d92d8
  415a47:	mov    ah,0x27
  415a49:	phaddw mm1,QWORD PTR [edi]
  415a4d:	leave  
  415a4e:	xchg   esi,eax
  415a4f:	sbb    bl,BYTE PTR [ebx-0x4f186b3e]
  415a55:	pop    ecx
  415a56:	jmp    0x415a68
  415a58:	out    0x6b,eax
  415a5a:	scas   al,BYTE PTR es:[edi]
  415a5b:	(bad)  
  415a5c:	fisttp WORD PTR [edi-0x2d]
  415a5f:	mov    bh,0xf6
  415a61:	inc    esi
  415a62:	les    edx,FWORD PTR [ebp-0x4ad8446d]
  415a68:	push   ebx
  415a69:	rcl    DWORD PTR [ecx-0x17fd1a48],0x74
  415a70:	std    
  415a71:	mov    ebp,0xe047fbf6
  415a76:	or     eax,DWORD PTR [ebx-0x29]
  415a79:	dec    esi
  415a7a:	ror    BYTE PTR [ebx+eax*8-0x7],0x11
  415a7f:	xchg   BYTE PTR [esi],dl
  415a81:	and    dl,BYTE PTR [edi-0x7e70a5df]
  415a87:	jae    0x415ad5
  415a89:	and    ecx,DWORD PTR [eax-0x62b48f42]
  415a8f:	pusha  
  415a90:	mov    bh,0xc3
  415a92:	enter  0xac92,0x23
  415a96:	sub    al,BYTE PTR ds:[edi-0x3d7d6805]
  415a9d:	test   eax,0xc93f0b70
  415aa2:	sub    ebx,ecx
  415aa4:	retf   
  415aa5:	jecxz  0x415a68
  415aa7:	shr    BYTE PTR [ebp-0x14e546a0],cl
  415aad:	jg     0x415ac2
  415aaf:	lods   al,BYTE PTR ds:[esi]
  415ab0:	jns    0x415aa3
  415ab2:	pop    ss
  415ab3:	sti    
  415ab4:	xchg   ecx,eax
  415ab5:	lahf   
  415ab6:	mov    bl,0x9d
  415ab8:	mov    ds:0x2d38151a,eax
  415abd:	mov    WORD PTR ss:[edx-0xe],?
  415ac1:	sbb    DWORD PTR [edi+eiz*1-0x7d],ebx
  415ac5:	sub    BYTE PTR [edx-0x25a1b97a],ah
  415acb:	xchg   ebx,eax
  415acc:	hlt    
  415acd:	fbld   TBYTE PTR [esi*8+0x2e895186]
  415ad4:	add    DWORD PTR [edx+ecx*4],ebp
  415ad7:	mov    ?,WORD PTR [edi]
  415ad9:	pop    ss
  415ada:	sub    BYTE PTR [esi+0x64],ah
  415add:	ds sbb eax,0xeeb45218
  415ae3:	jge    0x415a6d
  415ae5:	mov    edx,0x823d4397
  415aea:	or     al,0xd5
  415aec:	mov    ebx,0xe6993c10
  415af1:	sub    dh,BYTE PTR [esi+0x51400f78]
  415af7:	add    DWORD PTR [ebx],ecx
  415af9:	push   ebx
  415afa:	xor    esp,edx
  415afc:	and    cl,cl
  415afe:	retf   0x7ea6
  415b01:	mov    DWORD PTR [eax-0x348e0d1d],edi
  415b07:	mov    eax,ds:0x5f321d09
  415b0c:	mov    edx,0x721a530
  415b11:	jo     0x415b8c
  415b13:	call   DWORD PTR [edi]
  415b15:	xor    edx,DWORD PTR [edi]
  415b17:	mov    ah,BYTE PTR [ebx-0x49eb661e]
  415b1d:	xchg   edi,eax
  415b1e:	scas   al,BYTE PTR es:[edi]
  415b1f:	pusha  
  415b20:	mov    edx,0xb52e6324
  415b25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b26:	cmp    eax,0xe704a682
  415b2b:	sub    BYTE PTR [eax+ebp*1+0x2e],0x77
  415b30:	in     al,0x6e
  415b32:	jmp    0x515996f2
  415b37:	inc    eax
  415b38:	stos   BYTE PTR es:[edi],al
  415b39:	push   ss
  415b3a:	(bad)  
  415b3c:	pop    es
  415b3d:	ds addr16 clc 
  415b40:	and    edi,DWORD PTR [esi+0x59ee2bc0]
  415b46:	sbb    ebx,ebx
  415b48:	test   al,0x7f
  415b4a:	in     al,0xfd
  415b4c:	dec    edi
  415b4d:	push   0x25
  415b4f:	mov    ebp,0x8d0f0952
  415b54:	inc    ebp
  415b55:	ss test al,0xac
  415b58:	loope  0x415bb1
  415b5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b5b:	adc    bh,ah
  415b5d:	dec    esi
  415b5e:	fidivr WORD PTR [edi-0x4]
  415b61:	retf   0xccc0
  415b64:	dec    esp
  415b65:	jp     0x415b3e
  415b67:	mov    dl,0x33
  415b69:	std    
  415b6a:	dec    ebx
  415b6b:	ins    BYTE PTR es:[edi],dx
  415b6c:	popf   
  415b6d:	hlt    
  415b6e:	mov    eax,ds:0x1d4a12be
  415b73:	fidivr DWORD PTR [esi]
  415b75:	push   ebx
  415b76:	push   edi
  415b77:	inc    esp
  415b78:	outs   dx,BYTE PTR ds:[esi]
  415b79:	icebp  
  415b7a:	loop   0x415b3c
  415b7c:	gs mov al,0xc1
  415b7f:	fs push edi
  415b81:	mul    BYTE PTR [edx]
  415b83:	(bad)  
  415b84:	sub    BYTE PTR [edi+0x1a],cl
  415b87:	popf   
  415b88:	in     eax,dx
  415b89:	mov    al,ds:0x9a189bfd
  415b8e:	clc    
  415b8f:	mov    eax,ds:0xe7611345
  415b94:	fadd   QWORD PTR [esi+0x78e59934]
  415b9a:	push   es
  415b9b:	cs push edx
  415b9d:	xlat   BYTE PTR ds:[ebx]
  415b9e:	lds    edx,FWORD PTR [ebx+0x64]
  415ba1:	ret    0x1481
  415ba4:	call   0x59e5291f
  415ba9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415baa:	loopne 0x415bec
  415bac:	inc    esi
  415bad:	cmp    ah,BYTE PTR [esi]
  415baf:	mov    cl,0xba
  415bb1:	add    al,0x8f
  415bb3:	or     al,0xf0
  415bb5:	ss push esi
  415bb7:	sub    al,0x63
  415bb9:	test   bl,0x52
  415bbc:	cs popf 
  415bbe:	mov    cl,0x76
  415bc0:	sbb    ebx,eax
  415bc2:	jge    0x415bef
  415bc4:	bound  esi,QWORD PTR [edi+0x1cf86369]
  415bca:	and    esi,0xffffffa1
  415bcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bce:	sahf   
  415bcf:	outs   dx,BYTE PTR ds:[esi]
  415bd0:	jbe    0x415bd3
  415bd2:	sbb    ecx,DWORD PTR [eax+0x9b2bd16]
  415bd8:	and    DWORD PTR [edx-0x2a7f323],edi
  415bde:	int    0x1f
  415be0:	pop    ss
  415be1:	out    dx,eax
  415be2:	mov    ecx,0x87492e85
  415be7:	ret    
  415be8:	test   al,0xd7
  415bea:	fwait
  415beb:	jae    0x415b8d
  415bed:	dec    ebp
  415bee:	xor    DWORD PTR [ebx-0x3b636a22],esi
  415bf4:	in     eax,dx
  415bf5:	pop    ds
  415bf6:	dec    esp
  415bf7:	jnp    0x415c17
  415bf9:	jo     0x415b8e
  415bfb:	push   0x21dfdbcf
  415c00:	mov    dl,0x40
  415c02:	ss dec ebp
  415c04:	pop    edi
  415c05:	das    
  415c06:	(bad)  
  415c07:	mov    eax,ds:0x592bcc5b
  415c0c:	xor    al,0xf7
  415c0e:	inc    ecx
  415c0f:	out    dx,eax
  415c10:	fldpi  
  415c12:	mov    al,BYTE PTR [ebx]
  415c14:	jns    0x415bc6
  415c16:	imul   esp,ebx,0xffffff9f
  415c19:	gs mov edx,0xe281be40
  415c1f:	data16 (bad) 
  415c22:	test   eax,0x44bbe062
  415c27:	call   0x8f9f:0xd65f180b
  415c2e:	mov    cl,0x98
  415c30:	add    al,0xc
  415c32:	push   esp
  415c33:	retf   0xc247
  415c36:	jg     0x415c9b
  415c38:	loope  0x415bc7
  415c3a:	cmc    
  415c3b:	repnz adc DWORD PTR [edi+0x2e],edi
  415c3f:	fist   WORD PTR [ebx]
  415c41:	ret    
  415c42:	(bad)  
  415c43:	xor    eax,DWORD PTR [ecx+0x79]
  415c46:	mov    eax,ds:0xfcd3dec2
  415c4b:	inc    eax
  415c4c:	jmp    0xcd3fe94
  415c51:	scas   eax,DWORD PTR es:[edi]
  415c52:	(bad)  [ebp-0x15fafb6d]
  415c58:	iret   
  415c59:	aam    0x54
  415c5b:	je     0x415c8a
  415c5d:	jno    0x415c55
  415c5f:	test   BYTE PTR [edi+0x40],ch
  415c62:	fisub  WORD PTR [edx]
  415c64:	stc    
  415c65:	es mov bl,0xa9
  415c68:	je     0x415cb9
  415c6a:	push   cs
  415c6b:	and    BYTE PTR [eax],0x86
  415c6e:	stos   DWORD PTR es:[edi],eax
  415c6f:	pop    esp
  415c70:	dec    esi
  415c71:	adc    esp,DWORD PTR ds:[edi+0x24]
  415c75:	mov    ebp,0x3471c99c
  415c7a:	push   esi
  415c7b:	lods   al,BYTE PTR ds:[esi]
  415c7c:	cmp    eax,0x759fbf05
  415c81:	xchg   edi,eax
  415c82:	pop    esi
  415c83:	push   cs
  415c84:	test   DWORD PTR [edi+0x37aae782],eax
  415c8a:	sti    
  415c8b:	mov    WORD PTR [ecx+0xa9ddb79],ds
  415c91:	adc    al,0xe2
  415c93:	outs   dx,DWORD PTR ds:[esi]
  415c94:	sbb    eax,0xe6d0cd91
  415c99:	mov    ebp,0xbf18f29
  415c9e:	jno    0x415c59
  415ca0:	fiadd  DWORD PTR [eax+0x5c]
  415ca3:	xchg   ebp,eax
  415ca4:	mov    ds:0xe5d12009,eax
  415caa:	(bad)  
  415cab:	in     eax,dx
  415cac:	jb     0x415c4d
  415cae:	je     0x415d14
  415cb0:	mov    esi,0x8f486203
  415cb5:	dec    edi
  415cb6:	ins    DWORD PTR es:[edi],dx
  415cb7:	addr16 hlt 
  415cb9:	lods   eax,DWORD PTR ds:[esi]
  415cba:	addr16 lahf 
  415cbc:	xor    BYTE PTR [ecx-0x14],cl
  415cbf:	cmc    
  415cc0:	daa    
  415cc1:	sbb    cl,BYTE PTR [esp+edi*8]
  415cc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cc5:	arpl   WORD PTR [edx-0x154b26f8],bx
  415ccb:	mov    esp,edi
  415ccd:	out    0x49,al
  415ccf:	retf   0x3c12
  415cd2:	mov    fs,WORD PTR [ebx+0x45d0a1a3]
  415cd8:	in     al,0x7e
  415cda:	pop    ecx
  415cdb:	or     edi,edi
  415cdd:	inc    esi
  415cde:	adc    al,0xa2
  415ce0:	mov    cs,edi
  415ce2:	lahf   
  415ce3:	add    BYTE PTR [ebx],bh
  415ce5:	add    eax,0xbac33e6f
  415cea:	ret    0xeba8
  415ced:	pop    ecx
  415cee:	or     esi,ebp
  415cf0:	cwde   
  415cf1:	inc    edx
  415cf2:	cmp    al,0xf3
  415cf4:	mov    ?,WORD PTR [ecx+0x73]
  415cf7:	ja     0x415d1a
  415cf9:	dec    edx
  415cfa:	pop    ebx
  415cfb:	repz fst DWORD PTR [edx]
  415cfe:	mov    ds:0x1bd90b16,eax
  415d03:	xlat   BYTE PTR ds:[ebx]
  415d04:	int3   
  415d05:	mov    ds:0xa2441fc5,al
  415d0a:	inc    esi
  415d0b:	and    al,0xe7
  415d0d:	xor    esi,DWORD PTR [ebp-0x2e]
  415d10:	or     al,0xd3
  415d12:	xchg   esi,eax
  415d13:	ins    BYTE PTR es:[edi],dx
  415d14:	repz mov eax,ds:0x8e040df
  415d1a:	test   eax,0x366027e1
  415d1f:	add    al,0xb3
  415d21:	aam    0xfc
  415d23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d24:	mov    edx,0xce632dd
  415d29:	aam    0x86
  415d2b:	jo     0x415d99
  415d2d:	js     0x415cbd
  415d2f:	xor    ebp,edi
  415d31:	add    DWORD PTR [esi+0x6],esp
  415d34:	sub    esp,edx
  415d36:	mov    bh,0x7f
  415d38:	add    dh,BYTE PTR [ebp-0x5f]
  415d3b:	leave  
  415d3c:	xchg   BYTE PTR [ecx-0x6f],bl
  415d3f:	retf   
  415d40:	add    BYTE PTR [esi+ebx*4],ah
  415d43:	mov    esi,0x86119466
  415d48:	dec    edi
  415d49:	dec    ebp
  415d4a:	add    eax,ecx
  415d4c:	mov    ah,0x82
  415d4e:	sub    al,0x98
  415d50:	fdiv   DWORD PTR [eax+eiz*1-0x119d449b]
  415d57:	mov    eax,ds:0x6452bcee
  415d5c:	sub    BYTE PTR [ebx-0x2be2bda2],bl
  415d62:	xchg   edx,eax
  415d63:	and    al,0x74
  415d65:	push   es
  415d66:	or     al,0x87
  415d68:	in     eax,dx
  415d69:	loopne 0x415d87
  415d6b:	popa   
  415d6c:	or     al,0xf6
  415d6e:	inc    esi
  415d6f:	data16 mov al,0xf8
  415d72:	mov    dh,0xe5
  415d74:	pop    ebx
  415d75:	out    0x5,eax
  415d77:	loopne 0x415d5c
  415d79:	dec    esi
  415d7a:	ret    0xeb73
  415d7d:	jge    0x415db2
  415d7f:	shl    BYTE PTR [edi+0x1220071],1
  415d85:	aaa    
  415d86:	pinsrw mm5,ecx,0x5c
  415d8a:	sbb    eax,0x1a48d40d
  415d8f:	(bad)  
  415d90:	fstp   QWORD PTR [eax+0x33]
  415d93:	pop    edi
  415d94:	adc    al,0x69
  415d96:	imul   esp,DWORD PTR [edi-0x31de2073],0xffffffa0
  415d9d:	fmul   st,st(3)
  415d9f:	adc    al,0x2b
  415da1:	repz jmp 0x9451:0x2845b422
  415da9:	sub    DWORD PTR [ebx+0x7dddad77],ecx
  415daf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415db0:	mov    al,0x99
  415db2:	push   ecx
  415db3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415db4:	dec    ebx
  415db5:	jnp    0x415de6
  415db7:	cld    
  415db8:	dec    ebx
  415db9:	aas    
  415dba:	adc    DWORD PTR [edx+0x750e4af1],ebp
  415dc0:	pushf  
  415dc1:	or     edi,edx
  415dc3:	dec    esi
  415dc4:	lods   al,BYTE PTR ds:[esi]
  415dc5:	sbb    DWORD PTR [esi],edi
  415dc7:	push   ss
  415dc8:	add    BYTE PTR [eax+0x49],ah
  415dcb:	xchg   ecx,eax
  415dcc:	inc    ebx
  415dcd:	sar    cl,0xc9
  415dd0:	add    DWORD PTR [eax+ebp*8],eax
  415dd3:	lahf   
  415dd4:	cdq    
  415dd5:	out    0xab,eax
  415dd7:	sub    ebp,edi
  415dd9:	or     DWORD PTR [esi],edx
  415ddb:	cwde   
  415ddc:	(bad)  
  415ddd:	push   es
  415dde:	jmp    0x4d985ad9
  415de3:	or     DWORD PTR [ebx+edi*2],eax
  415de6:	(bad)  
  415de7:	adc    DWORD PTR [ecx+0x34],ebx
  415dea:	jecxz  0x415dcb
  415dec:	in     al,dx
  415ded:	inc    ebx
  415dee:	push   es
  415def:	adc    bl,BYTE PTR [ebx]
  415df1:	sub    DWORD PTR [edx+0x68cbda47],ecx
  415df7:	sbb    ch,BYTE PTR [edx-0xd]
  415dfa:	inc    esi
  415dfb:	call   0xcf28:0xbc83ff12
  415e02:	mov    al,0x7b
  415e04:	jl     0x415da2
  415e06:	xchg   edx,eax
  415e07:	jo     0x415d92
  415e09:	add    bl,BYTE PTR [edx+0x2b]
  415e0c:	add    cl,bh
  415e0e:	jl     0x415e8f
  415e10:	mov    bl,0x38
  415e12:	(bad)  
  415e13:	xchg   edx,eax
  415e14:	or     DWORD PTR ds:0x4c583c9d,edi
  415e1a:	data16 data16 jno 0x415dea
  415e1e:	jae    0x415da4
  415e20:	or     al,0xd6
  415e22:	mov    ebx,0x8f4e39fd
  415e27:	pop    ss
  415e28:	and    al,0xd6
  415e2a:	push   ebp
  415e2b:	adc    BYTE PTR [esi+0x6a],ch
  415e2e:	dec    esp
  415e2f:	or     al,0xdf
  415e31:	adc    BYTE PTR [ecx],0x54
  415e34:	cmp    edi,eax
  415e36:	inc    eax
  415e37:	sub    ebx,eax
  415e39:	pop    es
  415e3a:	push   eax
  415e3b:	fisttp QWORD PTR [eax+0x30770e38]
  415e41:	mov    esp,0x593aff05
  415e46:	inc    esi
  415e47:	test   eax,0x5549d7f0
  415e4c:	iret   
  415e4d:	out    0x9b,eax
  415e4f:	xor    al,0x2a
  415e51:	int3   
  415e52:	pop    edi
  415e53:	push   esi
  415e54:	test   DWORD PTR [ebx],esp
  415e56:	mov    ebx,edx
  415e58:	adc    al,0x67
  415e5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e5b:	jnp    0x415ea6
  415e5d:	js     0x415dfc
  415e5f:	aas    
  415e60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e61:	or     DWORD PTR fs:[edi],ebp
  415e64:	mov    eax,ds:0xf074cf89
  415e69:	inc    esp
  415e6a:	(bad)  
  415e6c:	push   ecx
  415e6d:	mov    esi,DWORD PTR [ebp+0x2cbd2f67]
  415e73:	ins    BYTE PTR es:[edi],dx
  415e74:	push   esp
  415e75:	xlat   BYTE PTR ds:[ebx]
  415e76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e77:	add    esi,esi
  415e79:	dec    eax
  415e7a:	out    dx,eax
  415e7b:	test   DWORD PTR [ecx+0x26f56fef],edi
  415e81:	and    ah,BYTE PTR [ecx-0x47]
  415e84:	je     0x415e5b
  415e86:	pop    ds
  415e87:	out    dx,al
  415e88:	dec    edi
  415e89:	test   BYTE PTR [edi+0x7a5437ac],bh
  415e8f:	or     ebx,DWORD PTR [edi-0x49]
  415e92:	xchg   ebp,eax
  415e93:	imul   eax,DWORD PTR [ebp+0x48b10245],0x67
  415e9a:	mov    ?,WORD PTR [eax]
  415e9c:	or     ebp,DWORD PTR [ebp+eiz*8-0x36643959]
  415ea3:	call   0x2a55:0x6f37134b
  415eaa:	mov    ds:0xda9f217d,al
  415eaf:	push   eax
  415eb0:	loopne 0x415e48
  415eb2:	(bad)  
  415eb3:	outs   dx,DWORD PTR fs:[esi]
  415eb5:	push   esi
  415eb6:	pop    eax
  415eb7:	mov    ebp,0x6d1be98f
  415ebc:	add    al,0x13
  415ebe:	cmp    dh,0x97
  415ec1:	cmp    DWORD PTR [ecx+eax*1-0x44],ebp
  415ec5:	adc    BYTE PTR [ebp+edx*1-0x211442f8],cl
  415ecc:	pop    esp
  415ecd:	(bad)  
  415ece:	cld    
  415ecf:	ficomp DWORD PTR [ebx+0x43]
  415ed2:	call   0xe2c98e76
  415ed7:	pusha  
  415ed8:	sbb    DWORD PTR [edx-0x623d59a8],ebx
  415ede:	pop    esi
  415edf:	(bad)  
  415ee0:	jbe    0x415eaa
  415ee2:	add    al,0x94
  415ee4:	jmp    FWORD PTR [edi+0x5432b685]
  415eea:	dec    esi
  415eeb:	cmp    eax,0xe4dcc63e
  415ef0:	fisubr WORD PTR [edi+eiz*8]
  415ef3:	leave  
  415ef4:	ret    0xbb4d
  415ef7:	xchg   esp,eax
  415ef8:	and    al,0x66
  415efa:	pop    ss
  415efb:	std    
  415efc:	call   0x1724f94e
  415f01:	pop    ds
  415f02:	test   DWORD PTR [eax],0xa4495bd4
  415f08:	or     DWORD PTR [eax+ebp*4],esi
  415f0b:	arpl   WORD PTR [esp+ecx*8],dx
  415f0e:	hlt    
  415f0f:	dec    ebp
  415f10:	xchg   BYTE PTR [edi],al
  415f12:	dec    ecx
  415f13:	xlat   BYTE PTR ds:[ebx]
  415f14:	repz mov edi,0x9c9bb2d6
  415f1a:	push   ebx
  415f1b:	addr16 mov dh,0xb2
  415f1e:	pop    ebx
  415f1f:	and    cl,BYTE PTR [edi+0x2a72ef1e]
  415f25:	adc    BYTE PTR [edi],bl
  415f27:	or     DWORD PTR [edx],ecx
  415f29:	out    0x59,al
  415f2b:	cmp    BYTE PTR ds:0x2c11c417,al
  415f31:	inc    esp
  415f32:	jb     0x415f8b
  415f34:	xchg   BYTE PTR [ecx+0x417b5500],ah
  415f3a:	pop    es
  415f3b:	leave  
  415f3c:	xlat   BYTE PTR ds:[ebx]
  415f3d:	clc    
  415f3e:	in     eax,dx
  415f3f:	and    BYTE PTR [edi+0x44],ah
  415f42:	rol    ebx,0xfa
  415f45:	mov    edx,0xd0324915
  415f4a:	xchg   BYTE PTR ds:0xfcd7841a,ah
  415f50:	pop    esi
  415f51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f52:	pop    ebp
  415f53:	(bad)  
  415f55:	stos   DWORD PTR es:[edi],eax
  415f56:	fs retf 
  415f58:	pop    es
  415f59:	iret   
  415f5a:	aam    0xee
  415f5c:	ins    BYTE PTR es:[edi],dx
  415f5d:	fimul  WORD PTR ds:0x52389cb3
  415f63:	pop    ss
  415f64:	fsubr  DWORD PTR [edi-0x78]
  415f67:	dec    ebp
  415f68:	mov    al,ds:0xc657057d
  415f6d:	int    0xb9
  415f6f:	(bad)  
  415f70:	je     0x91930443
  415f76:	cmp    al,0xff
  415f78:	xor    DWORD PTR [ebx+0x22],eax
  415f7b:	daa    
  415f7c:	jecxz  0x415f75
  415f7e:	cmc    
  415f7f:	shl    bl,1
  415f81:	test   DWORD PTR es:[edi],edi
  415f84:	xor    BYTE PTR [edx+esi*1-0x77],ah
  415f88:	sbb    DWORD PTR [esi],0xfde03887
  415f8e:	mov    BYTE PTR [eax-0x3165be91],al
  415f94:	and    al,0x20
  415f96:	xor    BYTE PTR [edx+0x3e],0x28
  415f9a:	aaa    
  415f9b:	adc    ebx,ecx
  415f9d:	mov    ds:0x95402fca,al
  415fa2:	in     eax,0xf5
  415fa4:	xchg   edi,eax
  415fa5:	das    
  415fa6:	dec    edi
  415fa7:	and    eax,0x8552d121
  415fac:	imul   BYTE PTR [ebp-0x726af60b]
  415fb2:	or     ebp,ebx
  415fb4:	hlt    
  415fb5:	int3   
  415fb6:	dec    edi
  415fb7:	pop    edx
  415fb8:	outs   dx,BYTE PTR ds:[esi]
  415fb9:	jmp    0x415f51
  415fbb:	imul   ebx,DWORD PTR [ecx+ebp*8-0x49],0x7f8cd10e
  415fc3:	and    ch,al
  415fc5:	add    bl,BYTE PTR [eax-0x2c93bbed]
  415fcb:	imul   al
  415fcd:	sub    eax,0x2b35c4b6
  415fd2:	std    
  415fd3:	out    dx,al
  415fd4:	adc    ebp,edx
  415fd6:	jge    0x416012
  415fd8:	mov    edi,0x7d015243
  415fdd:	fwait
  415fde:	mov    al,ds:0xd1069e80
  415fe3:	mov    dh,0x57
  415fe5:	pushf  
  415fe6:	add    ah,BYTE PTR [ebp+0x79]
  415fe9:	arpl   WORD PTR [edx+0x635fe5a3],bp
  415fef:	lock or al,BYTE PTR [eax]
  415ff2:	xchg   edx,eax
  415ff3:	scas   al,BYTE PTR es:[edi]
  415ff4:	leave  
  415ff5:	cmp    esi,ecx
  415ff7:	mov    ?,WORD PTR [edi-0x5]
  415ffa:	imul   esp,DWORD PTR [edx-0x4fe0a617],0xcf0a8658
  416004:	(bad)  
  416005:	adc    esp,DWORD PTR [edi-0x67]
  416008:	add    DWORD PTR [ecx+0x6],ebx
  41600b:	cld    
  41600c:	cmp    DWORD PTR [esi-0x1],esp
  41600f:	adc    dl,BYTE PTR [ecx-0x6e]
  416012:	clc    
  416013:	push   edi
  416014:	jbe    0x415fc8
  416016:	(bad)  
  416017:	adc    al,0xba
  416019:	xchg   edx,eax
  41601a:	jle    0x41609a
  41601c:	or     DWORD PTR [edi-0x22cee8e9],edi
  416022:	lea    ebp,[ebp+eiz*4-0x6c73fe07]
  416029:	jecxz  0x416091
  41602b:	lahf   
  41602c:	inc    edx
  41602d:	pop    es
  41602e:	dec    ebx
  41602f:	cwde   
  416030:	pop    es
  416031:	stos   DWORD PTR es:[edi],eax
  416032:	data16 scas al,BYTE PTR es:[edi]
  416034:	jno    0x415fc3
  416036:	sbb    eax,0x877661d6
  41603b:	ins    DWORD PTR es:[edi],dx
  41603c:	jb     0x41602d
  41603e:	mov    esi,0xe3509b39
  416043:	aaa    
  416044:	mov    dl,0xf6
  416046:	div    cl
  416048:	push   ecx
  416049:	lds    ecx,FWORD PTR [edi-0x26]
  41604c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41604d:	jae    0x41609f
  41604f:	outs   dx,DWORD PTR ds:[esi]
  416050:	sbb    bl,BYTE PTR [esi+0x70]
  416053:	dec    ebx
  416054:	mov    eax,0xbef819f8
  416059:	adc    al,0x1e
  41605b:	hlt    
  41605c:	js     0x4160cb
  41605e:	cld    
  41605f:	or     ecx,DWORD PTR [edx+0x6c]
  416062:	loope  0x4160b7
  416064:	and    ebx,edi
  416066:	sub    eax,0xbfcacfd9
  41606b:	fs out dx,al
  41606d:	loop   0x4160ad
  41606f:	jl     0x4160d9
  416071:	mov    edx,0xeb29c86c
  416076:	pop    edx
  416077:	push   ebx
  416078:	mov    ds:0xf213c777,al
  41607d:	inc    eax
  41607e:	add    dl,al
  416080:	jle    0x416101
  416082:	jbe    0x4160f1
  416084:	ror    DWORD PTR [edx],0x84
  416087:	dec    esi
  416088:	in     eax,dx
  416089:	and    eax,edx
  41608b:	ror    BYTE PTR [eax],1
  41608d:	push   ss
  41608e:	adc    eax,DWORD PTR [ebx+ebx*2+0x10]
  416092:	(bad)  
  416093:	cli    
  416094:	dec    esi
  416095:	sub    dl,BYTE PTR [ecx-0x43]
  416098:	jecxz  0x416080
  41609a:	pop    eax
  41609b:	jge    0x4160e0
  41609d:	pop    edi
  41609e:	inc    edi
  41609f:	xchg   ebx,eax
  4160a0:	lods   al,BYTE PTR ds:[esi]
  4160a1:	inc    eax
  4160a2:	sub    DWORD PTR [edi+eiz*8],ebp
  4160a5:	aam    0x71
  4160a7:	dec    ecx
  4160a8:	sub    ebx,eax
  4160aa:	jle    0x4160d0
  4160ac:	xchg   esi,eax
  4160ad:	div    BYTE PTR [eax-0x5fde96d3]
  4160b3:	nop
  4160b4:	sbb    ch,bl
  4160b6:	(bad)  [ecx+eiz*4]
  4160b9:	pop    eax
  4160ba:	rcr    DWORD PTR [edi+ebx*1+0x58],0x6d
  4160bf:	sbb    bh,BYTE PTR [edx+0x76a5a13d]
  4160c5:	xor    eax,0x15608a6d
  4160ca:	jl     0x41611c
  4160cc:	js     0x416053
  4160ce:	cmp    ebp,esp
  4160d0:	fiadd  DWORD PTR [ecx+0x168991c]
  4160d6:	adc    BYTE PTR [edx*2+0x121567d5],0x2e
  4160de:	ficom  DWORD PTR [edx]
  4160e0:	leave  
  4160e1:	cmp    BYTE PTR [edi-0x3fa3724e],dh
  4160e7:	mov    cs,WORD PTR [edi+0x12]
  4160ea:	icebp  
  4160eb:	adc    BYTE PTR [ebp+eiz*2-0x4b35e8bd],dl
  4160f2:	call   0x2c815579
  4160f7:	(bad)  [esi]
  4160f9:	dec    edi
  4160fa:	fidiv  DWORD PTR [esp+ecx*2-0x4bd9a9]
  416101:	mov    esp,0xe1337970
  416106:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416107:	shr    bl,1
  416109:	test   BYTE PTR ds:0xeec2413e,ch
  41610f:	bt     DWORD PTR [eax+0x62],eax
  416113:	sbb    cl,dl
  416115:	inc    esp
  416116:	call   0xaa2652c0
  41611b:	aam    0x2e
  41611d:	sar    DWORD PTR [edx+0x65],cl
  416120:	push   edx
  416121:	bound  esp,QWORD PTR [eax+0x24]
  416124:	stos   DWORD PTR es:[edi],eax
  416125:	mov    ds:0x8ab4a3aa,eax
  41612a:	pop    esi
  41612c:	sbb    eax,ecx
  41612e:	imul   BYTE PTR [edx]
  416130:	jno    0x4160d0
  416132:	into   
  416133:	mov    ch,0xa9
  416135:	or     eax,0xbe26aa3a
  41613a:	xchg   ebp,eax
  41613b:	outs   dx,BYTE PTR ds:[esi]
  41613c:	jge    0x416153
  41613e:	ins    BYTE PTR es:[edi],dx
  41613f:	and    eax,DWORD PTR [eax]
  416141:	(bad)  
  416142:	(bad)  
  416143:	fnstsw WORD PTR [esi]
  416145:	dec    esi
  416146:	mov    al,BYTE PTR [ebx]
  416148:	xchg   esi,eax
  416149:	jmp    0x74ec5a4a
  41614e:	pop    edi
  41614f:	in     al,0x76
  416151:	push   cs
  416152:	std    
  416153:	aad    0x9a
  416155:	shl    BYTE PTR [ebp+0x4],0x7f
  416159:	jb     0x4160dc
  41615b:	inc    ebx
  41615c:	push   esp
  41615d:	fs arpl sp,bp
  416160:	outs   dx,DWORD PTR ds:[esi]
  416161:	sub    DWORD PTR [eax+0x3f747d3b],edx
  416167:	adc    DWORD PTR [edi],ebp
  416169:	mov    ds:0x7e5f5bb2,eax
  41616e:	pop    esp
  41616f:	xor    esi,DWORD PTR [ebx]
  416171:	mov    DWORD PTR [edx+0xa],edx
  416174:	jnp    0x4161d6
  416176:	jmp    0x41617b
  416178:	int    0x69
  41617a:	push   eax
  41617b:	cli    
  41617c:	cwde   
  41617d:	jle    0x694b6d67
  416183:	jo     0x41613a
  416185:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416186:	stos   BYTE PTR es:[edi],al
  416187:	retf   
  416188:	call   0xe849ada3
  41618d:	jb     0x4161f0
  41618f:	push   ebp
  416190:	adc    al,0x26
  416192:	pop    eax
  416193:	lock test eax,0x1bc488d2
  416199:	xor    al,0x3b
  41619b:	aad    0x97
  41619d:	adc    bl,BYTE PTR [esi]
  41619f:	mov    bl,0x51
  4161a1:	inc    edx
  4161a2:	call   0x68eb:0x88458259
  4161a9:	dec    ecx
  4161aa:	mov    edi,0x845efe9d
  4161af:	xchg   DWORD PTR [ebx],esi
  4161b1:	stos   BYTE PTR es:[edi],al
  4161b2:	div    BYTE PTR [eax+0x7b5140b7]
  4161b8:	add    al,bh
  4161ba:	test   eax,0xa9c81a32
  4161bf:	ins    BYTE PTR es:[edi],dx
  4161c0:	xchg   ecx,eax
  4161c1:	ds std 
  4161c3:	(bad)  
  4161c4:	cmc    
  4161c5:	lea    eax,[eax+0x31]
  4161c8:	repz add al,0xfd
  4161cb:	fwait
  4161cc:	mov    dh,0xfe
  4161ce:	xor    al,0x4e
  4161d0:	inc    ecx
  4161d1:	sbb    eax,DWORD PTR gs:[edx+0x6b]
  4161d5:	add    eax,0xb79fcbc4
  4161da:	hlt    
  4161db:	loopne 0x4161d8
  4161dd:	cdq    
  4161de:	sub    ah,BYTE PTR [edx+0x68]
  4161e1:	dec    eax
  4161e2:	xchg   DWORD PTR [ebx],eax
  4161e4:	gs cs add bh,0x84
  4161e9:	pop    esi
  4161ea:	mov    eax,0x74f93de1
  4161f0:	mov    ah,0x7e
  4161f2:	mov    DWORD PTR [ebp-0x5b],eax
  4161f5:	mov    ?,WORD PTR [ecx-0x127de57f]
  4161fb:	or     DWORD PTR [edx+0xb],esi
  4161fe:	or     bl,ch
  416200:	shl    BYTE PTR [esi+0x43dc2386],cl
  416206:	jl     0x4161bc
  416208:	popa   
  416209:	sbb    DWORD PTR [edx+ecx*4-0x7f],esp
  41620d:	popf   
  41620e:	jbe    0x41622d
  416210:	sbb    edi,DWORD PTR ds:[esi-0x7fcc5da]
  416217:	fucomp st(5)
  416219:	and    eax,0x6ee81f22
  41621e:	and    cl,BYTE PTR [edi+0x1e]
  416221:	xor    bl,BYTE PTR [eax+0x1f962d9]
  416227:	stos   DWORD PTR es:[edi],eax
  416228:	jb     0x41621e
  41622a:	push   esi
  41622b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41622c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41622d:	cwde   
  41622e:	mov    WORD PTR [esi-0x68],?
  416231:	sub    eax,0x6dbe2c4d
  416236:	stos   DWORD PTR es:[edi],eax
  416237:	out    dx,eax
  416238:	jl     0x4162a5
  41623a:	or     BYTE PTR [ebp+0x41bc450b],al
  416240:	sub    dl,BYTE PTR [edx+0x27a93028]
  416246:	mov    edx,0xb486080f
  41624b:	inc    esi
  41624c:	xor    al,0x61
  41624f:	and    eax,0xdb80b711
  416254:	xor    BYTE PTR [eax-0x29dd6365],al
  41625a:	cmp    DWORD PTR [esi-0x464cd3cc],edx
  416260:	(bad)  
  416261:	sti    
  416262:	ss je  0x4162c4
  416265:	xlat   BYTE PTR ds:[ebx]
  416266:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416267:	ja     0x4161fd
  416269:	leave  
  41626a:	pop    ebp
  41626b:	pusha  
  41626c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41626d:	jae    0x4162a8
  41626f:	and    eax,0xdb8b5ce1
  416274:	enter  0x7372,0xa0
  416278:	in     al,dx
  416279:	xchg   ebp,eax
  41627a:	out    dx,al
  41627b:	test   al,0xc3
  41627d:	aaa    
  41627e:	in     eax,dx
  41627f:	test   DWORD PTR [eax],0x344d09a8
  416285:	cmp    BYTE PTR [eax+eiz*2-0x45dab223],bh
  41628c:	mov    ebx,0x7be03f06
  416291:	mov    BYTE PTR [esi],bh
  416293:	shl    BYTE PTR [ebx-0x1c7cce84],cl
  416299:	cmp    edx,esp
  41629b:	lds    edi,FWORD PTR [ecx+0x31fa4299]
  4162a1:	es mov al,0x1a
  4162a4:	repz adc eax,0xeaabe47b
  4162aa:	loope  0x41631e
  4162ac:	bound  ebp,QWORD PTR [esp+edi*2]
  4162af:	push   0x7206670a
  4162b4:	or     al,0x69
  4162b6:	inc    esp
  4162b7:	gs xor al,0x7d
  4162ba:	pop    ss
  4162bb:	inc    ebp
  4162bc:	inc    edx
  4162bd:	cmp    BYTE PTR ds:0xb48bdea4,ch
  4162c3:	inc    bh
  4162c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162c6:	dec    edx
  4162c7:	fdivr  st(4),st
  4162c9:	rcr    BYTE PTR [ecx+0x4f],1
  4162cc:	xchg   esp,eax
  4162cd:	adc    BYTE PTR [eax],bh
  4162cf:	(bad)  
  4162d0:	pushf  
  4162d1:	push   ss
  4162d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162d4:	jge    0x416305
  4162d6:	dec    ebx
  4162d7:	mov    WORD PTR [ebp+0x1330a742],?
  4162dd:	cwde   
  4162de:	push   ss
  4162df:	neg    DWORD PTR ds:0x8bad7ebe
  4162e5:	fwait
  4162e6:	gs aam 0x36
  4162e9:	call   0xcd8c926a
  4162ee:	xor    BYTE PTR [ebx+0x70],al
  4162f1:	inc    edi
  4162f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162f3:	(bad)  
  4162f4:	dec    ebp
  4162f5:	inc    ecx
  4162f6:	mov    ch,0x38
  4162f8:	sub    dl,BYTE PTR [edi]
  4162fa:	or     esp,DWORD PTR [edx-0x2742cd0e]
  416300:	fcom   DWORD PTR [ebx+0xd609200]
  416306:	pop    ss
  416307:	rcl    DWORD PTR [ecx],cl
  416309:	(bad)  
  41630b:	jecxz  0x41635a
  41630d:	pop    ds
  41630e:	sbb    DWORD PTR [ebp+0x3b],0x9fd9ed2d
  416315:	inc    edx
  416316:	dec    edx
  416317:	dec    edx
  416318:	(bad)  
  416319:	loope  0x41636f
  41631b:	adc    edx,DWORD PTR [eax+0x7d]
  41631e:	into   
  41631f:	mov    ebp,0xd13a68bf
  416324:	or     eax,0xdc9d24c4
  416329:	mov    edi,0x5726667a
  41632e:	dec    esp
  41632f:	fwait
  416330:	ins    BYTE PTR es:[edi],dx
  416331:	call   0x7c04932d
  416336:	xlat   BYTE PTR ds:[ebx]
  416337:	dec    esi
  416338:	add    ah,al
  41633a:	push   0xfffffff4
  41633c:	ret    0x59d2
  41633f:	inc    edi
  416340:	cmp    al,0x41
  416342:	(bad)  
  416343:	aad    0xb9
  416345:	stos   BYTE PTR es:[edi],al
  416346:	rcr    DWORD PTR [ecx-0x94070f2],0x84
  41634d:	(bad)  
  41634e:	cld    
  41634f:	(bad)  
  416350:	(bad)  
  416352:	xchg   esi,eax
  416353:	ja     0x416319
  416355:	call   0xa1cbf885
  41635a:	popa   
  41635b:	and    DWORD PTR [edx-0xe79cef6],ebp
  416361:	jae    0x416351
  416363:	addr16 cli 
  416365:	dec    ecx
  416366:	adc    DWORD PTR [edi-0x43],ebp
  416369:	je     0x41638b
  41636b:	adc    eax,0x4f3c422c
  416370:	data16 ror bh,cl
  416373:	inc    edi
  416374:	aam    0x95
  416376:	jne    0x416367
  416378:	mov    ebp,0x7f1bf654
  41637d:	inc    esi
  41637e:	out    0x37,al
  416380:	adc    al,0x7a
  416382:	nop
  416383:	push   es
  416384:	leave  
  416385:	jmp    0x124667c2
  41638a:	cmp    bl,BYTE PTR [eax]
  41638c:	jbe    0x41640a
  41638e:	ret    0x7445
  416391:	add    al,0xd4
  416393:	imul   ebx,DWORD PTR [ecx+0x2a],0xffffffce
  416397:	and    DWORD PTR [edx+0x64],ecx
  41639a:	xlat   BYTE PTR ds:[ebx]
  41639b:	outs   dx,DWORD PTR ds:[esi]
  41639c:	repnz add DWORD PTR [eax-0x42d3054d],edi
  4163a3:	add    esi,ecx
  4163a5:	adc    eax,0x5640d0de
  4163aa:	xchg   DWORD PTR [ecx-0x7a],ebx
  4163ad:	and    BYTE PTR gs:[eax+0x620a47f7],bh
  4163b4:	push   ds
  4163b5:	inc    esp
  4163b6:	push   esp
  4163b7:	ret    
  4163b8:	mov    esp,0x20556516
  4163bd:	lods   eax,DWORD PTR ds:[esi]
  4163be:	jnp    0x4163ba
  4163c0:	lock or BYTE PTR ds:0x16a5b482,dl
  4163c7:	(bad)  
  4163c8:	popa   
  4163c9:	cmp    eax,0x58b529bf
  4163ce:	jmp    DWORD PTR [ebx+edi*1+0x45]
  4163d2:	mov    ebx,0xe9eeecd0
  4163d7:	outs   dx,BYTE PTR ds:[esi]
  4163d8:	fmul   DWORD PTR [ecx-0xad5549c]
  4163de:	xor    edx,esp
  4163e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163e1:	xchg   DWORD PTR [esi+0x18],ecx
  4163e4:	pop    ss
  4163e5:	mov    eax,0xb90d4232
  4163ea:	push   esi
  4163eb:	gs jae 0x41645f
  4163ee:	pop    ss
  4163ef:	xchg   edi,eax
  4163f0:	loop   0x416441
  4163f2:	pop    es
  4163f3:	popf   
  4163f4:	cmp    cl,BYTE PTR [esi+0x73e57019]
  4163fa:	pop    eax
  4163fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163fc:	iret   
  4163fd:	inc    ecx
  4163fe:	rcl    DWORD PTR [edi],0x3d
  416401:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416402:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416403:	nop
  416404:	pop    esp
  416405:	nop
  416406:	adc    eax,0x4db1f99
  41640b:	icebp  
  41640c:	outs   dx,DWORD PTR ds:[esi]
  41640d:	enter  0xb6a2,0x52
  416411:	push   ebp
  416412:	stos   DWORD PTR es:[edi],eax
  416413:	bound  eax,QWORD PTR [edi]
  416415:	mov    WORD PTR [edi-0x1a9e7927],cs
  41641b:	and    edi,DWORD PTR [edx]
  41641d:	add    al,dh
  41641f:	push   esp
  416420:	addr16 aaa 
  416422:	(bad)  [esi-0x7cbe9732]
  416428:	jecxz  0x416458
  41642a:	in     al,0xd
  41642c:	pop    eax
  41642d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41642e:	inc    esi
  41642f:	neg    DWORD PTR [eax]
  416431:	inc    edx
  416432:	push   edx
  416433:	mov    esi,0xda3b708f
  416438:	inc    ebp
  416439:	cmp    DWORD PTR [edx],0x7b
  41643c:	scas   al,BYTE PTR es:[edi]
  41643d:	fisttp DWORD PTR [eax]
  41643f:	ror    BYTE PTR [eax+0xe395ee],0x72
  416446:	lods   al,BYTE PTR ds:[esi]
  416447:	fs out 0xb4,al
  41644a:	sbb    dl,BYTE PTR [eax+0x7d020948]
  416450:	dec    edx
  416451:	jecxz  0x416495
  416453:	sbb    al,ch
  416455:	cmp    al,dh
  416457:	mov    ds:0x342a4b1d,eax
  41645c:	inc    ecx
  41645d:	or     al,0x9b
  41645f:	mul    DWORD PTR [ecx+0x4e023607]
  416465:	cs and eax,0xb3af9561
  41646b:	scas   al,BYTE PTR es:[edi]
  41646c:	or     edx,edi
  41646e:	jg     0x416496
  416470:	call   0x4615:0x4bcf2f21
  416477:	fs es add dh,dh
  41647b:	pop    ebx
  41647c:	(bad)  
  41647d:	icebp  
  41647e:	xchg   ecx,eax
  41647f:	mov    ebp,0xab294c6
  416484:	xor    esi,DWORD PTR [edx-0x11456cd9]
  41648a:	bound  esp,QWORD PTR [edi+ebx*2-0x76a37add]
  416491:	jnp    0x416427
  416493:	add    DWORD PTR [ebp-0x317cc54d],ecx
  416499:	(bad)  
  41649a:	clc    
  41649b:	jmp    ecx
  41649d:	xchg   edx,eax
  41649e:	mov    ds:0xee1105df,eax
  4164a3:	jae    0x41645f
  4164a5:	cld    
  4164a6:	dec    ecx
  4164a7:	inc    esp
  4164a8:	pop    ds
  4164a9:	push   ecx
  4164aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164ab:	lods   eax,DWORD PTR ds:[esi]
  4164ac:	call   0x1c29:0xf6ca04bb
  4164b3:	int3   
  4164b4:	or     al,0x7d
  4164b6:	mov    ecx,0xeb52f3c4
  4164bb:	cs jg  0x41650e
  4164be:	outs   dx,BYTE PTR ds:[esi]
  4164bf:	jae    0x4164ac
  4164c1:	icebp  
  4164c2:	jns    0x416455
  4164c4:	imul   ecx,DWORD PTR [esi],0xe3e66571
  4164ca:	lock add ecx,ebx
  4164cd:	pushf  
  4164ce:	mov    al,0x22
  4164d0:	cwde   
  4164d1:	imul   ecx,DWORD PTR [eax-0x186e446a],0xffffffe8
  4164d8:	mov    ah,0xb2
  4164da:	pop    ecx
  4164db:	add    bl,0x12
  4164de:	js     0x4164e7
  4164e0:	jge    0x4164bb
  4164e2:	add    BYTE PTR [esi+0x747aa8c4],bl
  4164e8:	jno    0x41646a
  4164ea:	push   edi
  4164eb:	out    0x39,eax
  4164ed:	das    
  4164ee:	add    eax,0x24a65b04
  4164f3:	xor    BYTE PTR [ebx-0x1c],dh
  4164f6:	loop   0x416519
  4164f8:	jmp    0x188b5369
  4164fd:	dec    ebx
  4164fe:	pop    esp
  4164ff:	and    BYTE PTR [eax-0x2c76e7b5],0x88
  416506:	xor    BYTE PTR [ebp+0x461e7ac0],cl
  41650c:	je     0x416565
  41650e:	pop    esp
  41650f:	xor    al,0xd3
  416511:	mov    WORD PTR [eax+eax*8-0x49648cf8],ss
  416518:	aas    
  416519:	mov    al,0x53
  41651b:	mov    al,0xe
  41651d:	ror    cl,0x61
  416520:	dec    ecx
  416521:	jl     0x41651c
  416523:	sub    al,0x7e
  416525:	fwait
  416526:	into   
  416527:	(bad)  
  416528:	aam    0xf
  41652a:	adc    DWORD PTR [edi-0x5648ac30],ebx
  416530:	fist   DWORD PTR [esi-0x28]
  416533:	add    al,0x56
  416535:	pop    ss
  416536:	test   eax,0x83616af6
  41653b:	jmp    0xc12c:0x41a391d2
  416542:	(bad)  [ebx+0x19]
  416545:	fcomp  DWORD PTR [ebx-0x21f4b39e]
  41654b:	inc    DWORD PTR [ebx+0x3b8fd4de]
  416551:	add    BYTE PTR [ecx-0x3a6c889c],ah
  416557:	adc    DWORD PTR [edi-0x75da44a0],0x289ff00
  416561:	outs   dx,BYTE PTR ds:[esi]
  416562:	add    DWORD PTR [esp+eax*4+0x36],ecx
  416566:	mov    edx,0x93820550
  41656b:	mov    esi,0xc251afdb
  416570:	push   ds
  416571:	fwait
  416572:	sub    dl,BYTE PTR ds:0xa1f15a78
  416578:	inc    esp
  416579:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41657a:	adc    DWORD PTR [edx],eax
  41657c:	inc    ecx
  41657d:	mov    es,edx
  41657f:	rol    DWORD PTR ds:0xd6a622bd,0x89
  416586:	in     eax,0xf8
  416588:	ins    BYTE PTR es:[edi],dx
  416589:	add    al,0x29
  41658b:	xchg   ebp,eax
  41658c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41658d:	daa    
  41658e:	xchg   ecx,eax
  41658f:	imul   ebx,DWORD PTR [edi-0x96baa3f],0xffffffc9
  416596:	out    0xef,eax
  416598:	loop   0x416520
  41659a:	xor    eax,0x1cbdbb4e
  41659f:	fbstp  TBYTE PTR [edx+0x1d]
  4165a2:	mov    esi,DWORD PTR es:[esp+esi*4-0x21]
  4165a7:	and    ecx,DWORD PTR [ebp-0x42b94e96]
  4165ad:	sub    dl,BYTE PTR [esi]
  4165af:	dec    edx
  4165b0:	loopne 0x416599
  4165b2:	sub    ebp,ecx
  4165b4:	mov    edi,0xe95cdb35
  4165b9:	add    al,0xff
  4165bb:	adc    ebp,DWORD PTR [esi+0x3e945736]
  4165c1:	(bad)  
  4165c2:	cmp    DWORD PTR [eax],edi
  4165c4:	iret   
  4165c5:	add    al,0x79
  4165c7:	mov    dl,BYTE PTR [ebp-0x59]
  4165ca:	xchg   esp,eax
  4165cb:	mov    al,0x36
  4165cd:	jl     0x41662b
  4165cf:	out    dx,al
  4165d0:	and    al,0x1c
  4165d2:	add    BYTE PTR [ebx],ah
  4165d4:	sbb    BYTE PTR [edi],0x70
  4165d7:	jle    0x416562
  4165d9:	ins    DWORD PTR es:[edi],dx
  4165da:	sbb    DWORD PTR [ecx+eiz*4+0x3f],0x5c379351
  4165e2:	jns    0x4165d5
  4165e4:	aam    0xda
  4165e6:	push   eax
  4165e7:	or     BYTE PTR [ebp+0x20],ah
  4165ea:	dec    esp
  4165eb:	repnz aas 
  4165ed:	repnz sub eax,0xcbe536ca
  4165f3:	loopne 0x416665
  4165f5:	add    al,0x4a
  4165f7:	leave  
  4165f8:	imul   ecx,ecx,0xa1da4977
  4165fe:	test   BYTE PTR [ebx+ecx*4],bl
  416601:	xlat   BYTE PTR ds:[ebx]
  416602:	int3   
  416603:	sbb    eax,0xab200740
  416608:	jl     0x2ebeeaf9
  41660e:	lea    eax,[eax]
  416610:	sbb    al,0x57
  416612:	pusha  
  416613:	dec    esp
  416614:	mov    cl,0xe
  416616:	add    ah,ah
  416618:	pushf  
  416619:	test   eax,0xcea09db7
  41661e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41661f:	mov    ah,0xca
  416621:	and    ch,ch
  416623:	xor    DWORD PTR [edx+0x3ec10a42],esp
  416629:	cmp    bl,BYTE PTR [eax-0x1a]
  41662c:	fsubr  QWORD PTR [ebx+0x73]
  41662f:	test   al,0xb
  416631:	jbe    0x416661
  416633:	icebp  
  416634:	or     edx,esp
  416636:	(bad)  
  416638:	(bad)  
  416639:	popa   
  41663a:	mov    edx,0x304bc9d2
  41663f:	cmp    edx,ebx
  416641:	dec    eax
  416642:	xor    BYTE PTR es:[ebx+0x3990b3ca],0x6e
  41664a:	stos   DWORD PTR es:[edi],eax
  41664b:	ret    0x4045
  41664e:	adc    esp,esi
  416650:	mov    dh,0xa7
  416652:	xchg   ebx,eax
  416653:	sub    BYTE PTR [edi-0x382a8ef2],ch
  416659:	mov    DWORD PTR [edx+edi*1-0x23693eb6],edx
  416660:	clc    
  416661:	(bad)  
  416662:	shl    ebp,1
  416664:	mov    ecx,0xff6926b
  416669:	cdq    
  41666a:	sub    ah,dh
  41666c:	leave  
  41666d:	in     eax,0x70
  41666f:	fsubr  DWORD PTR [edi-0x4ecf99d0]
  416675:	jne    0x41669b
  416677:	sbb    BYTE PTR [esi+0x243be7f1],bh
  41667d:	push   ds
  41667e:	adc    bh,bh
  416680:	mov    WORD PTR [eax],ss
  416682:	lahf   
  416683:	mov    ecx,0x1f72e717
  416688:	imul   esp,edx,0xe
  41668b:	pop    ebp
  41668c:	(bad)  [ebx+ebp*4+0xde68ae2]
  416693:	pop    edx
  416694:	stos   DWORD PTR es:[edi],eax
  416695:	out    0xb7,al
  416697:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416698:	sar    BYTE PTR [ebp+0x6f9cb149],1
  41669e:	int    0x48
  4166a0:	xlat   BYTE PTR ds:[ebx]
  4166a1:	es xchg ecx,eax
  4166a3:	aaa    
  4166a4:	cmp    ebx,DWORD PTR [edi+0x4bc4bd0b]
  4166aa:	add    al,0x73
  4166ac:	aaa    
  4166ad:	and    BYTE PTR [eax-0x1f557feb],cl
  4166b3:	jle    0x41669e
  4166b5:	call   0xf84d:0xf2b8737
  4166bc:	outs   dx,BYTE PTR ds:[esi]
  4166bd:	mov    bh,0x8b
  4166bf:	and    BYTE PTR ds:0xacce3ed,dl
  4166c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166c6:	mov    al,0xb9
  4166c8:	outs   dx,BYTE PTR ds:[esi]
  4166ca:	addr16 dec eax
  4166cc:	ds and eax,0x3c4617c1
  4166d2:	pop    esi
  4166d3:	xchg   esp,eax
  4166d4:	retf   0xfafc
  4166d7:	loop   0x4166b4
  4166d9:	leave  
  4166da:	cmp    ebx,DWORD PTR [ebx]
  4166dc:	or     BYTE PTR [ecx-0x14],0xaf
  4166e0:	mov    ds:0x1c6f4b08,al
  4166e5:	ja     0x416682
  4166e7:	retf   0x511f
  4166ea:	stos   BYTE PTR es:[edi],al
  4166eb:	xor    eax,DWORD PTR [eax-0x1dbe547f]
  4166f1:	push   esp
  4166f2:	iret   
  4166f3:	fwait
  4166f4:	scas   eax,DWORD PTR es:[di]
  4166f6:	addr16 fmul st(1),st
  4166f9:	mov    eax,0x2148c209
  4166fe:	mov    BYTE PTR [ebp+0x5badb397],cl
  416704:	adc    eax,0x31b1b22e
  416709:	xchg   ecx,eax
  41670a:	ret    
  41670b:	enter  0x6c9b,0xe1
  41670f:	into   
  416710:	int    0x2a
  416712:	inc    eax
  416713:	dec    esi
  416714:	pop    ecx
  416715:	sbb    eax,0xcbeaf38
  41671a:	add    edi,ebx
  41671c:	das    
  41671d:	out    dx,eax
  41671e:	cs jecxz 0x4166f8
  416721:	(bad)  
  416722:	jmp    0x416779
  416724:	repz add esp,DWORD PTR [esi]
  416727:	fdivr  QWORD PTR [esi+0x70f2a360]
  41672d:	imul   eax,DWORD PTR [edi+0x46],0xffffffd6
  416731:	(bad)  
  416732:	fcmovb st,st(7)
  416734:	jp     0x416765
  416736:	lahf   
  416737:	adc    eax,0x677b5a1e
  41673c:	push   ecx
  41673d:	dec    edi
  41673e:	mov    dh,BYTE PTR [edi-0x3e59a825]
  416744:	repz into 
  416746:	push   edx
  416747:	pop    edi
  416748:	push   0xffffffe1
  41674a:	fisttp QWORD PTR [ecx+ebx*1]
  41674d:	or     eax,0xcd0d1094
  416752:	mov    esi,0x9b19c120
  416757:	mov    ch,0x4f
  416759:	sbb    ebp,esi
  41675b:	aas    
  41675c:	jae    0x416728
  41675e:	rcr    BYTE PTR [edi+0x53],0x96
  416762:	in     al,0xb9
  416764:	and    al,0xf1
  416766:	sar    DWORD PTR [esi],0x25
  416769:	imul   ebp
  41676b:	pop    es
  41676c:	es (bad) 
  41676e:	aam    0x34
  416770:	pusha  
  416771:	dec    ecx
  416772:	mov    ch,0xca
  416774:	mov    edi,0x71f083b2
  416779:	mov    cl,0x7e
  41677b:	mov    DWORD PTR [ebp-0x659d626],esp
  416781:	iret   
  416782:	fisubr WORD PTR [ebx+0x3d]
  416785:	sbb    al,0xb0
  416787:	push   esp
  416788:	das    
  416789:	push   edx
  41678a:	cmp    esi,DWORD PTR [ebx]
  41678c:	dec    ebx
  41678d:	mov    WORD PTR [ebx+0x8],?
  416790:	or     DWORD PTR [esi],esp
  416792:	retf   0x245f
  416795:	lahf   
  416796:	sbb    BYTE PTR [ebp+0x54],bh
  416799:	xor    bl,BYTE PTR [esi]
  41679b:	jmp    0x73fd:0xaeef8a55
  4167a2:	(bad)  
  4167a3:	idiv   BYTE PTR [ecx+0x5e53f10b]
  4167a9:	dec    eax
  4167aa:	jle    0x41681f
  4167ac:	(bad)  
  4167ad:	inc    ebx
  4167ae:	mov    ds:0x6342b854,eax
  4167b3:	fld    st(2)
  4167b5:	sti    
  4167b6:	jl     0x416814
  4167b8:	hlt    
  4167b9:	pop    edx
  4167ba:	nop
  4167bb:	fsub   DWORD PTR [edx-0x5]
  4167be:	and    dh,bh
  4167c0:	fmul   st(0),st
  4167c2:	jnp    0x4167f5
  4167c4:	cmc    
  4167c5:	pop    edi
  4167c6:	sbb    DWORD PTR [ecx+0x6c],eax
  4167c9:	and    ch,BYTE PTR [esi]
  4167cb:	outs   dx,DWORD PTR ds:[esi]
  4167cc:	aad    0xa1
  4167ce:	pop    ebp
  4167cf:	ds sbb eax,0x5e45b34c
  4167d5:	mov    ds,ebp
  4167d7:	xchg   ecx,eax
  4167d8:	cmp    DWORD PTR [ecx+edi*1-0x54ccd67c],0xdf73d6c2
  4167e3:	pusha  
  4167e4:	stos   DWORD PTR es:[edi],eax
  4167e5:	push   eax
  4167e6:	imul   ebp,DWORD PTR [ecx],0x46
  4167e9:	adc    bl,dl
  4167eb:	test   al,0x3f
  4167ed:	push   0x37c4f0b0
  4167f2:	dec    edi
  4167f3:	xor    ch,0x21
  4167f6:	mov    al,0xbc
  4167f8:	repnz xchg edx,eax
  4167fa:	adc    eax,0xb1350bac
  4167ff:	cmp    al,0xba
  416801:	inc    esi
  416802:	jmp    0x416839
  416804:	or     BYTE PTR [ecx],ah
  416806:	lea    ebx,[ebx+ecx*4]
  416809:	shl    BYTE PTR [ebp+edi*2+0x5b],1
  41680d:	push   0xffffff82
  41680f:	lea    esi,[edx]
  416811:	mov    ds:0x5ef9f6e1,eax
  416816:	and    eax,0x8cb0daa
  41681b:	out    dx,al
  41681c:	pushf  
  41681d:	cmc    
  41681e:	mov    ecx,DWORD PTR [esi-0x6c2636a5]
  416824:	in     eax,0xb9
  416826:	mov    ecx,0x1f820349
  41682b:	mov    al,0xa9
  41682d:	cmp    BYTE PTR [ecx],0x7b
  416830:	les    edx,FWORD PTR [eax]
  416832:	jb     0x4167d6
  416834:	lock inc ebx
  416836:	push   es
  416837:	jg     0x416893
  416839:	or     BYTE PTR [edi-0x15a0cef9],0x2
  416840:	mov    esp,0x785c4e02
  416845:	jno    0x4167de
  416847:	sbb    BYTE PTR cs:[ecx-0x51efd11c],ah
  41684e:	gs scas al,BYTE PTR es:[edi]
  416850:	mov    bl,0xc7
  416852:	and    BYTE PTR [ecx-0x3a9e0a4f],bh
  416858:	cli    
  416859:	sub    al,0xbd
  41685b:	popa   
  41685c:	xor    bh,ah
  41685e:	add    edi,DWORD PTR [edi-0x2b]
  416861:	mov    esi,DWORD PTR [ebx+0x14170356]
  416867:	lahf   
  416868:	xchg   esi,eax
  416869:	pop    edx
  41686a:	in     eax,dx
  41686b:	ins    BYTE PTR es:[edi],dx
  41686c:	mov    ds:0xc552982b,eax
  416871:	cmp    BYTE PTR [edi-0x3885b731],al
  416877:	call   DWORD PTR [esi]
  416879:	in     al,dx
  41687a:	test   edx,edx
  41687c:	mov    al,0xa9
  41687e:	les    edi,FWORD PTR [esp+edi*8-0x48]
  416882:	cdq    
  416883:	push   ds
  416884:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416885:	dec    ebx
  416886:	xor    DWORD PTR [ebp+0x2d4a7d53],ebp
  41688c:	cmp    DWORD PTR [ebx-0x14aa3962],eax
  416892:	addr16 sti 
  416894:	or     eax,0xf47bf623
  416899:	pop    ds
  41689a:	pop    ebx
  41689b:	in     eax,0x30
  41689d:	xor    eax,0xd4208b58
  4168a2:	rol    DWORD PTR [edx],1
  4168a4:	xor    eax,DWORD PTR [eax+ebp*1+0x2f9f5c8e]
  4168ab:	call   0xae89:0x5e96c8b0
  4168b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168b3:	(bad)  
  4168b4:	mov    dl,0x6
  4168b6:	pop    edx
  4168b7:	sub    esp,DWORD PTR [esi+0x1f]
  4168ba:	or     al,0x9
  4168bc:	pushf  
  4168bd:	fld    TBYTE PTR [eax+0x7990beac]
  4168c3:	and    DWORD PTR [ebx-0x6e],esi
  4168c6:	cmp    eax,eax
  4168c8:	and    eax,0xc4838a9e
  4168cd:	in     eax,dx
  4168ce:	jo     0x4168c3
  4168d0:	push   ecx
  4168d1:	imul   eax,DWORD PTR [ebx+ebx*2+0x9],0x99e75032
  4168d9:	loope  0x416871
  4168db:	mov    dh,BYTE PTR [edx-0x2e6a6d88]
  4168e1:	xor    BYTE PTR [ebp-0x648abf78],0x34
  4168e8:	cli    
  4168e9:	xchg   bh,bl
  4168eb:	scas   eax,DWORD PTR es:[edi]
  4168ec:	clc    
  4168ed:	adc    ebx,DWORD PTR ds:0x1619e906
  4168f3:	test   eax,0x620438a5
  4168f8:	pop    eax
  4168f9:	jmp    0x416911
  4168fb:	cld    
  4168fc:	(bad)  
  4168fd:	push   ss
  4168fe:	dec    ebx
  4168ff:	cmc    
  416900:	sar    DWORD PTR [esi+ecx*1],1
  416903:	sbb    DWORD PTR [eax+0x12a0455],ebx
  416909:	mov    esp,0xdb159fb4
  41690e:	ja     0x416959
  416910:	jg     0x41695b
  416912:	lods   eax,DWORD PTR ds:[esi]
  416913:	or     al,0x1b
  416915:	xor    al,0x3b
  416917:	pop    ecx
  416918:	mov    eax,0xb2aa242b
  41691d:	adc    DWORD PTR [eax],edx
  41691f:	sub    ebp,esi
  416921:	adc    bl,BYTE PTR [edi]
  416923:	lods   eax,DWORD PTR ds:[esi]
  416924:	popa   
  416925:	ins    DWORD PTR es:[edi],dx
  416926:	loop   0x4168f1
  416928:	sar    BYTE PTR [ebp+0x8254675],0x9c
  41692f:	pop    ebx
  416930:	sbb    eax,0xd83f7a4e
  416935:	push   ebx
  416936:	sbb    bh,BYTE PTR ds:0x96a9cff9
  41693c:	out    dx,eax
  41693d:	test   BYTE PTR [ecx],cl
  41693f:	jge    0x416957
  416941:	cld    
  416942:	or     eax,0x2490be58
  416947:	fistp  WORD PTR [ecx+edi*2-0x5d]
  41694b:	(bad)  
  41694c:	stos   BYTE PTR es:[edi],al
  41694d:	jnp    0x41691d
  41694f:	cmp    al,0xca
  416951:	test   eax,0x59dfa1b1
  416956:	jmp    0x4169a3
  416958:	(bad)  
  41695a:	ja     0x416999
  41695c:	xchg   BYTE PTR [edi+eax*2-0x68bcbc74],ah
  416963:	pop    ebx
  416964:	jns    0x416900
  416966:	dec    eax
  416967:	dec    esi
  416968:	dec    edi
  416969:	fst    st(1)
  41696b:	xor    dl,BYTE PTR [edx+0x32eb1c93]
  416971:	jmp    0x4169ec
  416973:	or     BYTE PTR [edx-0x3dcae288],ah
  416979:	pop    esp
  41697a:	test   eax,0x493fad80
  41697f:	stos   DWORD PTR es:[edi],eax
  416980:	xor    al,0xfd
  416982:	jo     0x4169dc
  416984:	repnz cmp DWORD PTR [esi-0x1052fa9e],0x3781f97f
  41698f:	outs   dx,DWORD PTR ds:[esi]
  416990:	xchg   edi,eax
  416991:	fnsave [edx]
  416993:	sti    
  416994:	in     al,dx
  416995:	sub    BYTE PTR [ebx],dh
  416997:	aam    0x38
  416999:	cmp    BYTE PTR [esi+0x3bcd1a16],bl
  41699f:	jp     0x416970
  4169a1:	dec    eax
  4169a2:	and    ah,BYTE PTR [edx+0x5f]
  4169a5:	out    0xea,al
  4169a7:	add    eax,0x7073e68b
  4169ac:	fidiv  WORD PTR [ecx]
  4169ae:	call   0x121a:0x5962236a
  4169b5:	push   0x4bcb1af9
  4169ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169bb:	sbb    edi,ebp
  4169bd:	xlat   BYTE PTR ds:[ebx]
  4169be:	mov    eax,0x69583f61
  4169c3:	sub    bl,BYTE PTR [ebp-0x5e]
  4169c6:	test   eax,0x27612016
  4169cb:	mov    al,ds:0x7b5a3038
  4169d0:	jb     0xf010e6c
  4169d6:	ret    
  4169d7:	icebp  
  4169d8:	push   ds
  4169d9:	(bad)  
  4169da:	repz mov bl,0x2b
  4169dd:	jmp    0xce14:0x49ecd89d
  4169e4:	out    dx,al
  4169e5:	xor    al,0xd8
  4169e7:	imul   ebp,DWORD PTR [ecx+0x5b],0x51
  4169eb:	(bad)  
  4169ec:	dec    ebp
  4169ed:	test   DWORD PTR [ebp-0x6d800a95],edx
  4169f3:	sbb    ebp,edx
  4169f5:	jle    0x4169c3
  4169f7:	mov    ebx,ebp
  4169f9:	xchg   esp,eax
  4169fa:	dec    esp
  4169fb:	adc    dh,cl
  4169fd:	outs   dx,BYTE PTR ds:[esi]
  4169fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169ff:	mov    eax,ds:0xa17397e5
  416a04:	xor    BYTE PTR [edi-0x1433167],al
  416a0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a0b:	jae    0x416a43
  416a0d:	mov    eax,0x94088f62
  416a12:	call   0x44af12fd
  416a17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a18:	mov    al,dl
  416a1a:	xor    al,0xaa
  416a1c:	retf   0xcef6
  416a1f:	retf   
  416a20:	sub    eax,ecx
  416a22:	imul   esi,esp,0x45
  416a25:	call   0xf86620c2
  416a2a:	jb     0x4169fc
  416a2c:	jo     0x416a9e
  416a2e:	shr    dl,cl
  416a30:	fisub  DWORD PTR [ebx]
  416a32:	lock dec ebx
  416a34:	jns    0x416a05
  416a36:	les    eax,FWORD PTR [esi-0x4e903f4e]
  416a3c:	bswap  edx
  416a3e:	push   cs
  416a3f:	lods   eax,DWORD PTR ds:[esi]
  416a40:	ss pop esi
  416a42:	(bad)  
  416a43:	out    0x84,al
  416a45:	icebp  
  416a46:	addr16 nop
  416a48:	je     0x416a84
  416a4a:	scas   eax,DWORD PTR es:[edi]
  416a4b:	xor    al,0xec
  416a4d:	push   0x7541e097
  416a52:	or     ecx,DWORD PTR [esi+0x530879df]
  416a58:	jecxz  0x416aaf
  416a5a:	pusha  
  416a5b:	leavew 
  416a5d:	xlat   BYTE PTR ds:[ebx]
  416a5e:	inc    ecx
  416a5f:	cmp    al,0x23
  416a61:	push   ecx
  416a62:	and    DWORD PTR [edi+0x5af6ee1a],eax
  416a68:	mov    BYTE PTR [ebx-0x60],al
  416a6b:	jne    0x416aea
  416a6d:	(bad)  
  416a6e:	clc    
  416a6f:	jg     0x416acd
  416a71:	cdq    
  416a72:	out    0x4d,eax
  416a74:	sbb    al,0x5e
  416a76:	dec    eax
  416a77:	pusha  
  416a78:	data16 ficomp WORD PTR [ecx+0x7ff016fa]
  416a7f:	(bad)  
  416a80:	jmp    0x83f0:0x4fcae769
  416a87:	iret   
  416a88:	cmp    DWORD PTR [ebx],eax
  416a8a:	ss daa 
  416a8c:	fstp   QWORD PTR ds:0x185bc866
  416a92:	dec    edx
  416a93:	xchg   ebp,eax
  416a94:	test   edx,ecx
  416a96:	arpl   si,ax
  416a98:	sub    DWORD PTR [edi-0x37],0x6e2ecc31
  416a9f:	retf   
  416aa0:	mov    ebp,0xb4674785
  416aa5:	dec    ecx
  416aa6:	push   esi
  416aa7:	mov    ch,0xf
  416aa9:	inc    ebx
  416aaa:	xchg   esi,eax
  416aab:	or     esi,DWORD PTR [edx+edi*1+0x71ed5053]
  416ab2:	xor    al,0xad
  416ab4:	mov    ch,0x5d
  416ab6:	dec    cl
  416ab8:	mov    ah,0x78
  416aba:	sbb    BYTE PTR [esi],bl
  416abc:	mov    bl,0x5c
  416abe:	out    0xf9,eax
  416ac0:	pusha  
  416ac1:	sbb    DWORD PTR [edi+0x5d],0x3e
  416ac5:	sub    al,0x71
  416ac7:	adc    al,0x4c
  416ac9:	jb     0x416a97
  416acb:	mov    dl,0xd5
  416acd:	mov    eax,0xe3b70285
  416ad2:	jns    0x416b4b
  416ad4:	fcom   DWORD PTR [edx*8-0x285181e1]
  416adb:	pop    ds
  416adc:	mov    ah,0xb1
  416ade:	add    ebx,DWORD PTR [ebx-0x69]
  416ae1:	mov    ch,BYTE PTR [ebx+edx*8+0x69c31fe6]
  416ae8:	add    bl,BYTE PTR [ebp+0x4f5e7fb5]
  416aee:	jmp    0x416a85
  416af0:	in     eax,dx
  416af1:	push   0x11ef56dd
  416af6:	das    
  416af7:	fcomp  DWORD PTR [esp+eiz*4]
  416afa:	or     DWORD PTR [edi-0x7d],esp
  416afd:	out    dx,eax
  416afe:	ror    BYTE PTR [edx+ebp*1],0x33
  416b02:	or     al,0x1c
  416b04:	test   BYTE PTR [eax+0x20],bh
  416b07:	mov    ecx,0x9511ad23
  416b0c:	mov    bh,ch
  416b0e:	mov    cl,0x18
  416b10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b11:	sub    eax,0x46c77797
  416b16:	gs sbb ch,ah
  416b19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b1a:	sbb    al,ch
  416b1c:	call   0x96577f83
  416b21:	inc    ebx
  416b22:	add    BYTE PTR [esi],bh
  416b24:	and    al,0x22
  416b26:	dec    ebp
  416b27:	jg     0x416b5d
  416b29:	push   edi
  416b2a:	jns    0x416bab
  416b2c:	xor    eax,0x52170d3
  416b31:	popf   
  416b32:	cmp    BYTE PTR es:[edx+0x6a],0x4
  416b37:	lea    ebx,[ecx+0x71]
  416b3a:	add    esp,DWORD PTR [esi+0x5d]
  416b3d:	test   eax,0x3f9535d
  416b42:	ds rcr ebx,1
  416b45:	inc    esi
  416b46:	dec    ebx
  416b47:	fdiv   st(0),st
  416b49:	rcl    DWORD PTR [ebx+0x27bdb754],0x5a
  416b50:	sahf   
  416b51:	mov    bl,0xcb
  416b53:	mov    ebp,0x91785d74
  416b58:	pop    edx
  416b59:	test   eax,0x11916f99
  416b5e:	adc    eax,0xa4050e80
  416b63:	pop    esi
  416b64:	lods   al,BYTE PTR ds:[esi]
  416b65:	adc    dh,BYTE PTR [ecx-0xd0712cd]
  416b6b:	outs   dx,DWORD PTR ds:[esi]
  416b6c:	adc    DWORD PTR [esi],edx
  416b6e:	inc    ecx
  416b6f:	push   ecx
  416b70:	retf   0x293d
  416b73:	arpl   si,ax
  416b75:	popa   
  416b76:	add    ch,BYTE PTR [eax+0x66c79b7c]
  416b7c:	mov    dh,0xf6
  416b7e:	movlps QWORD PTR [ebx+ebp*4],xmm0
  416b82:	sub    eax,0xb012811c
  416b87:	fs pop esi
  416b89:	in     eax,0x55
  416b8b:	jl     0x416bfa
  416b8d:	fdivr  QWORD PTR [ecx-0x11fbbb0f]
  416b93:	dec    bx
  416b95:	mov    eax,ds:0xfb36789b
  416b9a:	xchg   esp,eax
  416b9b:	sub    DWORD PTR [esi-0x10],eax
  416b9e:	xchg   DWORD PTR [eax-0x28],ecx
  416ba1:	jge    0x416c11
  416ba3:	cmc    
  416ba4:	lahf   
  416ba5:	mov    ah,0x84
  416ba7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ba8:	xchg   ebp,eax
  416ba9:	bound  ecx,QWORD PTR [ebx]
  416bab:	jp     0x416b85
  416bad:	mov    dh,0xc0
  416baf:	xor    edi,DWORD PTR [eax+0x328ecef5]
  416bb5:	jmp    0x4582cbb1
  416bba:	mov    edi,0x4e008538
  416bbf:	jl     0x416b89
  416bc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bc2:	or     al,0x9a
  416bc4:	into   
  416bc5:	fcmovnu st,st(3)
  416bc7:	jmp    0xed62:0x79252624
  416bce:	stc    
  416bcf:	sbb    dh,ch
  416bd1:	repz call 0x774bf2f1
  416bd7:	xchg   ebx,eax
  416bd8:	mov    bl,0xe8
  416bda:	adc    BYTE PTR ds:0x9e60b9c3,bh
  416be0:	les    edi,FWORD PTR [ecx-0x66aa4bf5]
  416be6:	dec    DWORD PTR [edx+0x53]
  416be9:	dec    ebp
  416bea:	xor    eax,0x8283beab
  416bef:	icebp  
  416bf0:	ret    
  416bf1:	ret    
  416bf2:	add    eax,0x3fb220ac
  416bf7:	(bad)  
  416bf8:	ins    BYTE PTR es:[edi],dx
  416bf9:	push   0x2d
  416bfb:	xchg   BYTE PTR gs:0x7891ffe1,al
  416c02:	sahf   
  416c03:	mov    edi,0xb780d342
  416c08:	mov    ebx,0x6ca2393c
  416c0d:	les    edi,FWORD PTR [edx]
  416c0f:	popa   
  416c10:	mov    esp,0x35180c4e
  416c15:	(bad)  
  416c16:	pop    eax
  416c17:	fnstcw WORD PTR [ebx+0x20673e14]
  416c1d:	inc    esp
  416c1e:	xchg   ecx,eax
  416c1f:	add    ebx,DWORD PTR [ecx-0x18aa2ba1]
  416c25:	mov    ds:0xa08560aa,al
  416c2a:	out    0x37,eax
  416c2c:	aam    0xeb
  416c2e:	pop    ds
  416c2f:	adc    eax,0x3f9bb9c0
  416c34:	nop
  416c35:	hlt    
  416c36:	lds    ebp,FWORD PTR [eax+0x34]
  416c39:	mov    al,0xcb
  416c3b:	fadd   QWORD PTR [edi+0x97789fc]
  416c41:	inc    edx
  416c42:	push   eax
  416c43:	sbb    al,0x76
  416c45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c46:	jmp    0x9a19:0x5acdd626
  416c4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c4e:	dec    ebx
  416c4f:	aam    0xad
  416c51:	push   ss
  416c52:	mov    ecx,0x7546a306
  416c57:	pop    ds
  416c58:	push   0xfc3f1f19
  416c5d:	dec    esi
  416c5e:	rcr    BYTE PTR [edi-0x199b5684],cl
  416c64:	mov    cl,0x24
  416c66:	cmc    
  416c67:	aas    
  416c68:	jge    0x416cb6
  416c6a:	push   edx
  416c6b:	jle    0x416cc1
  416c6d:	int    0x68
  416c6f:	jmp    0x416c72
  416c71:	mov    edi,0x8c8398a
  416c76:	adc    eax,0x3dc1384e
  416c7b:	mov    al,ds:0xf06ac805
  416c80:	sub    BYTE PTR [esi-0x25],ah
  416c83:	gs adc eax,edx
  416c86:	add    BYTE PTR [ebp+0x725c56d4],ch
  416c8c:	adc    al,BYTE PTR [ebx-0x62]
  416c8f:	cmp    eax,0x2f2cc212
  416c94:	jns    0x416cd5
  416c96:	jbe    0x416caf
  416c98:	mov    bl,0x3
  416c9a:	sti    
  416c9b:	add    al,0xb7
  416c9d:	mov    al,0x3b
  416c9f:	in     al,0x75
  416ca1:	scas   al,BYTE PTR es:[edi]
  416ca2:	and    bl,bh
  416ca4:	repz fwait
  416ca6:	stos   BYTE PTR es:[edi],al
  416ca7:	and    edx,DWORD PTR [ecx+0x55277a1b]
  416cad:	mov    dh,0x8f
  416caf:	sub    BYTE PTR [ebp-0x2df1aeb5],ah
  416cb5:	enter  0x41b7,0x91
  416cb9:	mov    al,bl
  416cbb:	adc    BYTE PTR [edx+0x5f],0xfe
  416cbf:	pop    edi
  416cc0:	ds and dl,bl
  416cc3:	push   ds
  416cc4:	dec    esi
  416cc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416cc6:	mov    esi,0x63808890
  416ccb:	outs   dx,BYTE PTR ds:[esi]
  416ccc:	inc    esi
  416ccd:	or     DWORD PTR [ebx],ebp
  416ccf:	jle    0x416c94
  416cd1:	xchg   ecx,edx
  416cd3:	add    eax,0x2cd10cd1
  416cd8:	sbb    al,0xf0
  416cda:	shl    BYTE PTR [edi],cl
  416cdc:	test   BYTE PTR [ebp+esi*1+0x2d3e628f],bh
  416ce3:	add    DWORD PTR [ebx+0x5db712a7],0x5f
  416cea:	mov    WORD PTR [esi],?
  416cec:	ret    
  416ced:	mov    BYTE PTR [esi],dl
  416cef:	and    eax,0xe3d8d949
  416cf4:	addps  xmm7,XMMWORD PTR [esi]
  416cf7:	cmp    dl,bh
  416cf9:	mov    BYTE PTR [edi-0x75],cl
  416cfc:	ins    DWORD PTR es:[edi],dx
  416cfd:	dec    edx
  416cfe:	ins    DWORD PTR es:[edi],dx
  416cff:	(bad)  
  416d00:	call   0x38f4:0x2bda9174
  416d07:	and    al,0x56
  416d09:	in     eax,dx
  416d0a:	mov    BYTE PTR [ecx],ah
  416d0c:	gs pop esi
  416d0e:	and    edi,DWORD PTR [ecx]
  416d10:	add    DWORD PTR [ebp-0xb01224f],0xffffff82
  416d17:	outs   dx,BYTE PTR ds:[esi]
  416d18:	xchg   edx,eax
  416d19:	mov    ds:0xf33c07b4,eax
  416d1e:	test   DWORD PTR [ebx+ebp*8-0x76],edi
  416d22:	data16 test BYTE PTR [edi],ch
  416d25:	out    0x9,eax
  416d27:	ins    DWORD PTR es:[edi],dx
  416d28:	not    esi
  416d2a:	xor    BYTE PTR [esi],0xea
  416d2d:	rcr    ebp,0x4a
  416d30:	jp     0x416cf1
  416d32:	dec    esi
  416d33:	repz sbb ah,BYTE PTR [esp+esi*8]
  416d37:	aad    0xb7
  416d39:	push   ebp
  416d3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d3b:	bound  edi,QWORD PTR [eax+0x1f30033c]
  416d41:	dec    dl
  416d43:	sbb    DWORD PTR ds:0xb1e64203,edx
  416d49:	dec    edi
  416d4a:	nop
  416d4b:	enter  0xaafd,0x9b
  416d4f:	mov    ecx,0x544a5e90
  416d54:	test   cl,dh
  416d56:	or     edi,DWORD PTR [eax+0x54f74f44]
  416d5c:	mov    edi,0xcc19b489
  416d61:	mov    bl,0x38
  416d63:	mov    cx,0x1871
  416d67:	xor    al,0xb6
  416d69:	mov    DWORD PTR [edx+0x79fe5c1a],esi
  416d6f:	dec    ebx
  416d70:	pop    edx
  416d71:	loop   0x416d76
  416d73:	pop    esi
  416d74:	and    al,0xaf
  416d76:	inc    ebp
  416d77:	jo     0x416daf
  416d79:	mov    edx,ebx
  416d7b:	xchg   esi,eax
  416d7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d7d:	(bad)  
  416d7e:	in     al,0x9f
  416d80:	and    ecx,edi
  416d82:	jno    0x416d36
  416d84:	popa   
  416d85:	fadd   QWORD PTR [eax-0x7a]
  416d88:	out    dx,eax
  416d89:	mov    esi,0xce41dee0
  416d8e:	jae    0x416d5a
  416d90:	pop    esp
  416d91:	mov    ds:0x7f45e9e8,al
  416d96:	out    0xec,al
  416d98:	dec    ecx
  416d99:	(bad)  
  416d9a:	fcom   QWORD PTR [edi-0x66]
  416d9d:	pusha  
  416d9e:	daa    
  416d9f:	scas   eax,DWORD PTR es:[edi]
  416da0:	adc    DWORD PTR [eax],edi
  416da2:	(bad)  
  416da3:	xchg   esp,eax
  416da4:	xor    BYTE PTR [edx],dh
  416da6:	sub    eax,ecx
  416da8:	xor    ecx,ecx
  416daa:	retf   
  416dab:	add    ch,bl
  416dad:	mov    ecx,0x7c8075af
  416db2:	mov    ah,0xec
  416db4:	inc    ecx
  416db5:	cmp    eax,0x8fb8eccb
  416dba:	dec    esi
  416dbb:	idiv   BYTE PTR [edi-0x62]
  416dbe:	fdiv   DWORD PTR [ebp+0x47e9d905]
  416dc4:	mov    ss,WORD PTR [edx-0x10]
  416dc7:	push   eax
  416dc8:	xchg   DWORD PTR [eax],ebp
  416dca:	pop    edi
  416dcb:	mov    al,0xf1
  416dcd:	push   cs
  416dce:	ins    DWORD PTR es:[edi],dx
  416dcf:	push   eax
  416dd0:	mov    ds:0xbd310936,eax
  416dd5:	retf   
  416dd6:	add    al,0xc3
  416dd8:	xchg   ebp,eax
  416dd9:	sbb    dh,0x27
  416ddc:	and    eax,0x2de47af6
  416de1:	imul   ecx,DWORD PTR [eax],0x7c7ee7eb
  416de7:	xor    al,0x9c
  416de9:	push   ds
  416dea:	mov    ecx,eax
  416dec:	sub    ebp,DWORD PTR [ebp+0x61d223de]
  416df2:	inc    esi
  416df3:	jmp    0xcad63c78
  416df8:	dec    edx
  416df9:	push   edx
  416dfa:	out    dx,al
  416dfb:	hlt    
  416dfc:	pop    edx
  416dfd:	jno    0x416e03
  416dff:	sub    edx,DWORD PTR [ecx-0x31]
  416e02:	jg     0x416dea
  416e04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e05:	mov    bh,0xe
  416e07:	push   cs
  416e08:	mov    esi,0xd7b05e99
  416e0d:	bound  eax,QWORD PTR [edx]
  416e0f:	sbb    al,0xa9
  416e11:	xchg   ecx,eax
  416e12:	std    
  416e13:	and    eax,0xb182e365
  416e18:	lock repnz xlat BYTE PTR ds:[ebx]
  416e1b:	cmp    ebx,esi
  416e1d:	push   0x8b4f8ec7
  416e22:	xchg   esp,eax
  416e23:	das    
  416e24:	jne    0x416dac
  416e26:	lods   eax,DWORD PTR ds:[esi]
  416e27:	xlat   BYTE PTR ds:[ebx]
  416e28:	inc    esp
  416e29:	mov    WORD PTR [edx+ebp*2],?
  416e2c:	out    dx,al
  416e2d:	jmp    0x416e84
  416e2f:	mov    ebx,0x90bbe7c2
  416e34:	xchg   esp,eax
  416e35:	mov    ebp,0x179380e0
  416e3a:	cwde   
  416e3b:	jl     0x416e01
  416e3d:	cli    
  416e3e:	push   esi
  416e3f:	jg     0x416e91
  416e41:	push   ebx
  416e42:	mov    dh,0x33
  416e44:	clc    
  416e45:	mov    WORD PTR [esi-0x60],ds
  416e48:	mov    ch,0x9f
  416e4a:	mov    cl,0x65
  416e4c:	jno    0x416e1d
  416e4e:	stos   BYTE PTR es:[edi],al
  416e4f:	mov    ecx,0xbdda157e
  416e54:	pop    eax
  416e55:	in     al,0xf3
  416e57:	and    BYTE PTR [ecx+0x15c1f26a],0x35
  416e5e:	or     al,0x7c
  416e60:	cmp    BYTE PTR [edi-0xb],al
  416e63:	sbb    bl,BYTE PTR [ecx]
  416e65:	fdiv   DWORD PTR [esi+0x5a049c79]
  416e6b:	or     al,0xa1
  416e6d:	inc    ecx
  416e6e:	ror    BYTE PTR [eax-0x2d],1
  416e71:	sbb    BYTE PTR [ecx],ch
  416e73:	pop    edx
  416e74:	lods   al,BYTE PTR ds:[esi]
  416e75:	(bad)  
  416e76:	stos   DWORD PTR es:[edi],eax
  416e77:	dec    edi
  416e78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e79:	leave  
  416e7a:	data16 je 0x416e59
  416e7d:	mov    ebp,esp
  416e7f:	jnp    0x416ea3
  416e81:	pop    esi
  416e82:	push   ebx
  416e83:	xor    edi,eax
  416e85:	loop   0x416ea9
  416e87:	pop    ecx
  416e88:	mov    DWORD PTR [edx+ecx*4-0x7b],eax
  416e8c:	rcl    DWORD PTR [ecx],1
  416e8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e8f:	sub    eax,0x788cb5bb
  416e94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e95:	out    0xc,eax
  416e97:	daa    
  416e98:	adc    al,0xb1
  416e9a:	cmp    dl,dl
  416e9c:	pop    ds
  416e9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e9e:	loopne 0x416eb2
  416ea0:	sbb    al,0x53
  416ea2:	sbb    eax,0x7ee18f26
  416ea7:	fwait
  416ea8:	lods   al,BYTE PTR ds:[esi]
  416ea9:	jo     0x416e47
  416eab:	xlat   BYTE PTR ds:[ebx]
  416eac:	push   0x7c0d7954
  416eb1:	fstp   QWORD PTR [edi+0x50]
  416eb4:	popf   
  416eb5:	loop   0x416eae
  416eb7:	add    al,0xd1
  416eb9:	lock rol DWORD PTR [ecx-0x78ea833],0xd2
  416ec1:	dec    esi
  416ec2:	aam    0x13
  416ec4:	sub    BYTE PTR [esi],ch
  416ec6:	dec    edi
  416ec7:	mov    ds:0x120b0f20,eax
  416ecc:	mov    ebp,ebp
  416ece:	xor    eax,0x2498ce4e
  416ed3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ed4:	call   0xce97:0xe85c9cb7
  416edb:	pop    eax
  416edc:	mov    ebp,ecx
  416ede:	stos   DWORD PTR es:[edi],eax
  416edf:	lock test al,0xb5
  416ee2:	int3   
  416ee3:	sub    eax,0xc862afe7
  416ee8:	mov    ebp,0x3dc17c41
  416eed:	fwait
  416eee:	not    BYTE PTR [edx]
  416ef0:	pop    ss
  416ef1:	adc    DWORD PTR [edi],edx
  416ef3:	ficomp DWORD PTR ds:0x3c7631bd
  416ef9:	jg     0x416f3f
  416efb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416efc:	lahf   
  416efd:	sub    eax,0x8da12212
  416f02:	adc    BYTE PTR [esi],bh
  416f04:	das    
  416f05:	leave  
  416f06:	sbb    eax,0x54b96376
  416f0b:	imul   esi,DWORD PTR [eax],0xd3182fa4
  416f11:	out    dx,eax
  416f12:	mov    ds:0xb81c9b85,eax
  416f17:	fs ja  0x416f76
  416f1a:	sahf   
  416f1b:	icebp  
  416f1c:	lahf   
  416f1d:	aad    0x1c
  416f1f:	push   ebx
  416f20:	or     dl,BYTE PTR [edx-0x121eeefb]
  416f26:	mov    sp,0xf2ca
  416f2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f2b:	das    
  416f2c:	lods   al,BYTE PTR ds:[esi]
  416f2d:	sbb    eax,0xd85d3c3a
  416f32:	je     0x416f32
  416f34:	or     BYTE PTR [edi],ch
  416f36:	js     0x416f64
  416f38:	int    0x71
  416f3a:	mov    DWORD PTR [eax+0x2d],ecx
  416f3d:	out    dx,al
  416f3e:	bound  ebp,QWORD PTR [edx]
  416f40:	sti    
  416f41:	xor    BYTE PTR ds:0xfe4516e9,ah
  416f47:	mov    eax,0x2956c50e
  416f4c:	pop    eax
  416f4d:	lods   eax,DWORD PTR ds:[esi]
  416f4e:	or     esi,DWORD PTR [eax+0x29]
  416f51:	sub    DWORD PTR [ecx],0x2370319d
  416f57:	adc    esp,ebp
  416f59:	iret   
  416f5a:	fs stos BYTE PTR es:[edi],al
  416f5c:	mov    ah,0xfc
  416f5e:	aaa    
  416f5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f60:	jbe    0x416f7d
  416f62:	xchg   esi,eax
  416f64:	xor    eax,0x55d1468d
  416f69:	loopne 0x416fb0
  416f6b:	add    eax,0x9565640d
  416f70:	pop    ebx
  416f71:	adc    eax,0xe7d2ea86
  416f76:	jecxz  0x416f73
  416f78:	mov    WORD PTR [eax+0x326e4b9a],cs
  416f7e:	mov    ch,0x62
  416f80:	hlt    
  416f81:	mov    ss,esp
  416f83:	cmp    al,0x5a
  416f85:	pop    ss
  416f86:	inc    edx
  416f87:	out    dx,eax
  416f88:	add    BYTE PTR [ebp-0x6f],bl
  416f8b:	shl    edi,1
  416f8d:	pop    es
  416f8e:	cmp    al,0xda
  416f90:	dec    edx
  416f91:	and    eax,0xaf6ac546
  416f96:	mov    WORD PTR [ecx-0x2efaec9e],gs
  416f9c:	in     eax,dx
  416f9d:	xchg   edx,eax
  416f9e:	and    eax,edx
  416fa0:	jns    0x416fbb
  416fa2:	popf   
  416fa3:	cli    
  416fa4:	inc    BYTE PTR [edx-0x68]
  416fa7:	dec    edi
  416fa8:	cwde   
  416fa9:	loopne 0x416f52
  416fab:	add    DWORD PTR [ecx],esi
  416fad:	ret    0x111d
  416fb0:	mov    edi,0xd832bd66
  416fb5:	add    DWORD PTR [ebp+ebp*2+0x7cd593a5],0x6e
  416fbd:	mov    al,cl
  416fbf:	mov    ecx,cs
  416fc1:	or     ebx,ecx
  416fc3:	neg    DWORD PTR ds:0x16e9baf1
  416fc9:	loope  0x416f52
  416fcb:	fcomp  DWORD PTR [eax+0x3b]
  416fce:	xor    cl,dl
  416fd0:	mov    al,cs:0x900cbd92
  416fd6:	cli    
  416fd7:	dec    ebp
  416fd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fd9:	mov    DWORD PTR [edi],esi
  416fdb:	mov    dh,0x78
  416fdd:	mov    ebp,0x195e8d7e
  416fe2:	and    DWORD PTR [ebx],esi
  416fe4:	cmp    DWORD PTR [ecx+0x54],0x176770a5
  416feb:	ficomp DWORD PTR [edi]
  416fed:	xor    ah,BYTE PTR [edi+0x48]
  416ff0:	fdiv   DWORD PTR [ecx-0x3cd0bd3a]
  416ff6:	hlt    
  416ff7:	mov    bl,0x37
  416ff9:	adc    DWORD PTR ds:0x1a36ff79,ebp
  416fff:	rcl    DWORD PTR [ebx+0x3fea0152],1
  417005:	xor    bl,al
  417007:	inc    edi
  417008:	adc    BYTE PTR [esi-0x24218896],0xdc
  41700f:	lods   al,BYTE PTR ds:[esi]
  417010:	hlt    
  417011:	cdq    
  417012:	sub    eax,0xb0bca53b
  417017:	stos   BYTE PTR es:[edi],al
  417018:	aam    0x4d
  41701a:	pop    edx
  41701b:	fisubr DWORD PTR [esi-0x34]
  41701e:	or     BYTE PTR [edi-0x5dab90fb],dh
  417024:	mov    bh,0x48
  417026:	dec    bp
  417028:	adc    eax,0xca727399
  41702d:	or     al,dl
  41702f:	mov    ecx,0xdc1a81ba
  417034:	nop
  417035:	pop    edi
  417036:	iret   
  417037:	sahf   
  417038:	jge    0x41703c
  41703a:	imul   ah
  41703c:	out    dx,al
  41703d:	jmp    0x9617c4e3
  417042:	je     0x417018
  417044:	xor    al,0x39
  417046:	mov    esp,0x56a8c389
  41704b:	xlat   BYTE PTR ds:[ebx]
  41704c:	xor    DWORD PTR [esi+0x14ca15e0],ecx
  417052:	push   eax
  417053:	add    eax,0x6f8e641a
  417058:	and    bh,dh
  41705a:	bnd jg 0x41704a
  41705d:	mov    dh,0x62
  41705f:	stos   DWORD PTR es:[edi],eax
  417060:	stos   DWORD PTR es:[edi],eax
  417061:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417062:	xchg   ebp,eax
  417063:	pshufw mm4,QWORD PTR [edi-0x4a],0x6b
  417068:	push   es
  417069:	pop    ss
  41706a:	and    al,0xb5
  41706c:	pop    esi
  41706d:	stc    
  41706e:	call   0x734e:0x814dbb65
  417075:	idiv   bh
  417077:	sbb    esi,ebx
  417079:	jg     0x4170d0
  41707b:	add    DWORD PTR cs:[edx],edi
  41707e:	jno    0x417091
  417080:	sbb    DWORD PTR [eax-0x1b],ebp
  417083:	and    edi,DWORD PTR [ebp+0x3e]
  417086:	cmp    bh,BYTE PTR [ebp-0x2e4ce8f5]
  41708c:	stos   DWORD PTR es:[edi],eax
  41708d:	and    DWORD PTR [edi+eax*1+0x26],esp
  417091:	ucomiss xmm5,DWORD PTR [ebp+0x4a]
  417095:	icebp  
  417096:	cmp    ebx,DWORD PTR [ebp+0x55ed8875]
  41709c:	lock push esp
  41709e:	lods   eax,DWORD PTR ds:[esi]
  41709f:	wrmsr  
  4170a1:	std    
  4170a2:	into   
  4170a3:	call   0xacca:0xb9d4ce03
  4170aa:	fwait
  4170ab:	lock gs or bl,cl
  4170af:	or     bh,BYTE PTR [esi+ebx*4+0x47cf45ab]
  4170b6:	cmp    cl,dl
  4170b8:	and    DWORD PTR [eax-0x303ef54a],esi
  4170be:	inc    BYTE PTR [esi-0x32]
  4170c1:	scas   eax,DWORD PTR es:[edi]
  4170c2:	sub    DWORD PTR [edx],0x9
  4170c5:	xchg   esp,eax
  4170c6:	lds    esi,FWORD PTR [eax-0x78da949b]
  4170cc:	ss scas eax,DWORD PTR es:[edi]
  4170ce:	pop    edx
  4170cf:	sub    DWORD PTR [edi+eax*1+0x6c],edx
  4170d3:	popf   
  4170d4:	mov    esp,0x364fa391
  4170d9:	push   edi
  4170da:	jb     0x41712e
  4170dc:	mov    cl,BYTE PTR [eax+eiz*8]
  4170df:	jl     0x4170e1
  4170e1:	sbb    DWORD PTR [edx-0x28d490bf],ebp
  4170e7:	call   0xa4d1f34
  4170ec:	or     dh,BYTE PTR [eax+ebx*1+0x29021ad2]
  4170f3:	cwde   
  4170f4:	ret    
  4170f5:	mov    ebp,0xdddf137d
  4170fa:	mov    eax,ds:0x621e9eaf
  4170ff:	pop    ebp
  417100:	or     eax,0x5c153bdf
  417105:	mov    dh,0x42
  417107:	mov    ecx,0x7c5baf51
  41710c:	and    bl,BYTE PTR [ebx+0x55a96f60]
  417112:	sub    eax,0x7d4599ae
  417117:	mov    dh,0x7
  417119:	push   ebx
  41711a:	push   0xffffffdb
  41711c:	sti    
  41711d:	das    
  41711e:	ja     0x4170c1
  417120:	rol    DWORD PTR [esi],1
  417122:	inc    edi
  417123:	mov    dh,0xfd
  417125:	hlt    
  417126:	popf   
  417127:	lea    esp,[edx+esi*2]
  41712a:	push   eax
  41712b:	push   edx
  41712c:	push   eax
  41712d:	sahf   
  41712e:	and    dl,BYTE PTR [esi-0x36]
  417131:	add    edx,edx
  417133:	pop    edi
  417134:	mov    bl,0x28
  417136:	fisubr DWORD PTR [ebx+0x28958ddb]
  41713c:	sbb    BYTE PTR [edx+0x0],0xc7
  417140:	aad    0x53
  417142:	bound  esp,QWORD PTR [esp+ecx*1]
  417145:	jg     0x41712d
  417147:	int3   
  417148:	aam    0xf2
  41714a:	mov    ss,WORD PTR [edi]
  41714c:	add    edi,edi
  41714e:	sub    edx,DWORD PTR [ecx]
  417150:	ret    
  417151:	jmp    FWORD PTR [esi-0x55]
  417154:	outs   dx,BYTE PTR ds:[esi]
  417155:	jae    0x417134
  417157:	mov    eax,0x86c3f795
  41715c:	add    DWORD PTR [ecx-0x2a9abba9],esi
  417162:	push   es
  417163:	sub    eax,DWORD PTR ss:[ecx]
  417166:	jg     0x4171e2
  417168:	out    0xc2,eax
  41716a:	shr    DWORD PTR [eax-0x6461ccac],1
  417170:	rcl    esi,1
  417172:	jns    0x4171e9
  417174:	push   0x2f746dd2
  417179:	(bad)  
  41717a:	out    0x65,eax
  41717c:	call   0xf00b:0xcf8c2f7f
  417183:	(bad)  
  417184:	and    esp,DWORD PTR [edx+0x74]
  417187:	mov    ah,0x52
  417189:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41718a:	push   ebp
  41718b:	ins    DWORD PTR es:[edi],dx
  41718c:	sbb    eax,0x2d3452
  417191:	rcl    DWORD PTR [esi],0x91
  417194:	inc    ecx
  417195:	ds ins BYTE PTR es:[edi],dx
  417197:	pop    edi
  417198:	(bad)  [eax+0x7fe77b08]
  41719e:	mov    cl,0x9b
  4171a0:	test   al,0x9f
  4171a2:	fstp   QWORD PTR [ecx+0x30fea284]
  4171a8:	jnp    0x4171e2
  4171aa:	not    ecx
  4171ac:	jnp    0x417204
  4171ae:	sub    al,0xce
  4171b0:	inc    ecx
  4171b1:	inc    esp
  4171b2:	jl     0x417134
  4171b4:	stos   DWORD PTR es:[edi],eax
  4171b5:	lea    eax,[edi+ebp*2]
  4171b8:	call   0x69d9:0xd2c939e5
  4171bf:	jo     0x4171a5
  4171c1:	jne    0x4171e4
  4171c3:	jo     0x417197
  4171c5:	jmp    0xa10a:0xc4fd8100
  4171cc:	frstor [ebp+0x7254cacb]
  4171d2:	into   
  4171d3:	arpl   ax,bx
  4171d5:	das    
  4171d6:	fwait
  4171d7:	cmp    al,0x39
  4171d9:	shld   DWORD PTR [esi+0x27],esp,0x70
  4171de:	jns    0x4171a1
  4171e0:	inc    ebx
  4171e1:	in     al,0xbf
  4171e3:	mov    DWORD PTR [ebp*1-0x1446305b],ebx
  4171ea:	fs dec ax
  4171ed:	repnz mov al,0x75
  4171f0:	inc    esi
  4171f1:	out    dx,al
  4171f2:	arpl   WORD PTR [edx+0x6936a597],bx
  4171f8:	adc    dl,BYTE PTR gs:[esi]
  4171fb:	fwait
  4171fc:	or     ecx,DWORD PTR [edx-0x575c22bc]
  417202:	mov    ds:0x1e81f474,al
  417207:	add    al,0xf9
  417209:	sbb    BYTE PTR [esi+0x6de23db8],0x69
  417210:	ret    
  417211:	vrsqrtss xmm7,xmm3,DWORD PTR ds:0x8f82b6f2
  417219:	jo     0x417209
  41721b:	cmp    BYTE PTR [ebx-0x79],0x33
  41721f:	shr    BYTE PTR [ebx],cl
  417221:	fnstsw WORD PTR [ebx+0x567be131]
  417227:	les    esi,FWORD PTR [ebp-0x64]
  41722a:	test   al,0x28
  41722c:	xchg   BYTE PTR [eax-0x7c],al
  41722f:	cdq    
  417230:	cmp    dl,BYTE PTR [edx+0x15]
  417233:	jp     0x41724f
  417235:	sub    ebp,DWORD PTR [ecx-0x15c95925]
  41723b:	fdivr  st(0),st
  41723d:	mov    WORD PTR [edi+0x37e9493b],ds
  417243:	ds mov ch,0x5
  417246:	loope  0x4171d1
  417248:	imul   eax,DWORD PTR [ebx-0x7daf454f],0xffffffb6
  41724f:	je     0x417254
  417251:	retf   0x665c
  417254:	arpl   WORD PTR [edx],di
  417256:	loope  0x417275
  417258:	and    bl,bl
  41725a:	stos   DWORD PTR es:[edi],eax
  41725b:	mov    esp,0xe9449af0
  417260:	ret    0xfad2
  417263:	mov    ch,0x46
  417265:	pop    ds
  417266:	mov    ebx,0x4761523e
  41726b:	loope  0x41728d
  41726d:	aas    
  41726e:	jmp    0x8b72:0xf28f97d0
  417275:	ja     0x417201
  417277:	je     0x417231
  417279:	mov    bh,0xd9
  41727b:	xor    al,0x58
  41727d:	out    dx,al
  41727e:	out    dx,al
  41727f:	out    dx,al
  417280:	sbb    DWORD PTR [edi+esi*8+0x508fad6d],ecx
  417287:	lods   eax,DWORD PTR ds:[esi]
  417288:	fiadd  WORD PTR [ecx]
  41728a:	and    DWORD PTR [esi+0x59755c6f],edi
  417290:	inc    esi
  417291:	push   DWORD PTR cs:[esi-0x69d5daeb]
  417298:	xchg   edi,eax
  417299:	cmp    al,0xcb
  41729b:	add    ebx,esp
  41729d:	mov    eax,0xb1e02b02
  4172a2:	mov    bl,0x66
  4172a4:	push   eax
  4172a5:	or     DWORD PTR [ecx+eax*1+0x531df625],ecx
  4172ac:	cmp    bl,BYTE PTR [ebp-0x2dc383a4]
  4172b2:	stc    
  4172b3:	xchg   edi,eax
  4172b4:	sbb    DWORD PTR [esp+ebx*8-0x4c7bc26f],edx
  4172bb:	cli    
  4172bc:	enter  0x9427,0xf6
  4172c0:	nop
  4172c1:	sbb    ah,ch
  4172c3:	add    DWORD PTR [ecx+0x4f],eax
  4172c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172c7:	jne    0x41732d
  4172c9:	int3   
  4172ca:	xor    DWORD PTR [edx],eax
  4172cc:	jb     0x417312
  4172ce:	sbb    DWORD PTR ds:0x96085902,ebx
  4172d4:	arpl   ax,cx
  4172d6:	mov    bl,0x2e
  4172d8:	sub    edi,DWORD PTR [esi+eax*2-0x14]
  4172dc:	scas   al,BYTE PTR es:[edi]
  4172dd:	ja     0x417294
  4172df:	dec    esp
  4172e0:	jmp    0xbd2a:0x98516170
  4172e7:	sbb    BYTE PTR [ebx+0x6e82ec7d],0xb8
  4172ee:	ror    BYTE PTR [bp+di],1
  4172f1:	add    al,0x5a
  4172f3:	sar    DWORD PTR [edi+0x7a],cl
  4172f6:	sbb    bl,dl
  4172f8:	dec    edx
  4172f9:	xchg   ebx,eax
  4172fa:	pop    esi
  4172fb:	leave  
  4172fc:	out    dx,eax
  4172fd:	arpl   WORD PTR [edi-0x36],si
  417300:	mov    ah,0xaf
  417302:	sub    dh,BYTE PTR [eax-0x63e97b08]
  417308:	push   ds
  417309:	push   edx
  41730a:	add    al,0xd6
  41730c:	xchg   ebx,eax
  41730d:	xor    eax,DWORD PTR [ebp-0x2b]
  417310:	xor    bl,BYTE PTR [ecx+0x225c40f5]
  417316:	out    0xa2,al
  417318:	inc    edx
  417319:	or     BYTE PTR [ebp-0x8],ah
  41731c:	lods   al,BYTE PTR ds:[esi]
  41731d:	retf   0xdb78
  417320:	push   cs
  417321:	push   eax
  417322:	aas    
  417323:	(bad)  
  417325:	ffreep st(4)
  417327:	bound  ebp,QWORD PTR [edi+eiz*1-0x613844c9]
  41732e:	call   0x7cc36958
  417333:	fst    QWORD PTR [ecx-0x4b]
  417336:	repnz cmp DWORD PTR [ecx+0x48b57942],ebx
  41733d:	out    0x65,eax
  41733f:	mov    DWORD PTR [ebx-0x28744124],esp
  417345:	pop    edx
  417346:	int    0x10
  417348:	dec    edx
  417349:	xchg   ecx,eax
  41734a:	jbe    0x4172d5
  41734c:	jg     0x417378
  41734e:	mov    bh,0xa
  417350:	rcr    BYTE PTR ds:0xe51ab878,0x65
  417357:	xchg   ebp,eax
  417358:	rol    ah,1
  41735a:	hlt    
  41735b:	sub    dl,BYTE PTR [esi-0x3e2984e1]
  417361:	rcl    BYTE PTR [esi+0x1f],0x6b
  417365:	js     0x4173c4
  417367:	cwde   
  417368:	dec    esi
  417369:	jnp    0x417332
  41736b:	adc    DWORD PTR [ebp+0x59],ebp
  41736e:	ins    BYTE PTR es:[edi],dx
  41736f:	jp     0x417379
  417371:	mov    edi,0x2fcace6e
  417376:	jo     0x41735d
  417378:	in     eax,0x5
  41737a:	jnp    0x417377
  41737c:	xor    eax,0x477a4b2d
  417381:	rcr    DWORD PTR [edi+0x16a04bb4],1
  417387:	popa   
  417388:	cmp    ebp,0xffffffe2
  41738b:	mov    bl,0xdd
  41738d:	shl    DWORD PTR [edx+0x3],1
  417390:	and    dl,ah
  417392:	mov    ah,0xe
  417394:	lds    eax,FWORD PTR [ebx+0x5ff8a8ef]
  41739a:	cmp    al,0x9f
  41739c:	loop   0x41734a
  41739e:	stos   DWORD PTR es:[edi],eax
  41739f:	sub    BYTE PTR [ebp+0x6126210a],ch
  4173a5:	rol    edx,0x87
  4173a8:	mov    eax,ds:0xaa826be6
  4173ad:	jbe    0x417390
  4173af:	sub    edi,DWORD PTR [edi]
  4173b1:	mov    ch,0xdb
  4173b3:	ficomp DWORD PTR [eax]
  4173b5:	stos   BYTE PTR es:[edi],al
  4173b6:	pop    es
  4173b7:	lahf   
  4173b8:	aaa    
  4173b9:	jmp    0x4173bf
  4173bb:	test   al,0xba
  4173bd:	mov    dh,0xb2
  4173bf:	pop    ss
  4173c0:	mov    ds:0xc2afe87f,eax
  4173c5:	test   dl,bh
  4173c7:	dec    eax
  4173c8:	xchg   ebx,eax
  4173c9:	inc    eax
  4173ca:	mov    cl,0x10
  4173cc:	lods   al,BYTE PTR ds:[esi]
  4173cd:	stc    
  4173ce:	dec    edi
  4173cf:	cmp    eax,0xbeae2cf6
  4173d4:	adc    al,0xa6
  4173d6:	(bad)  
  4173d7:	xor    BYTE PTR [edx-0x7ec6c1a1],al
  4173dd:	dec    esp
  4173de:	jecxz  0x4173d5
  4173e0:	call   0x15f04e93
  4173e5:	dec    eax
  4173e6:	mov    ah,0x96
  4173e8:	aaa    
  4173e9:	jns    0x41742a
  4173eb:	shl    BYTE PTR [esi+0x7a],cl
  4173ee:	call   0x5c36:0x244cc757
  4173f5:	push   edx
  4173f6:	enter  0xbfd8,0x53
  4173fa:	call   0xbabac94c
  4173ff:	jns    0x4173d2
  417401:	mov    dh,0x8c
  417403:	aad    0x6a
  417405:	jmp    0x417462
  417407:	dec    edi
  417408:	xchg   esi,eax
  417409:	clc    
  41740a:	fldz   
  41740c:	lods   al,BYTE PTR ds:[esi]
  41740d:	shr    BYTE PTR [eax-0x2512c1f5],cl
  417413:	xchg   BYTE PTR ds:0xbe79a681,dl
  417419:	hlt    
  41741a:	sub    al,0x10
  41741c:	fdiv   QWORD PTR [ebx+ebx*8-0x62]
  417420:	xchg   ebx,eax
  417421:	aaa    
  417422:	pusha  
  417423:	imul   esi,DWORD PTR [eax],0xffffffc2
  417426:	addr16 push ebx
  417428:	fadd   QWORD PTR [eax+0xb]
  41742b:	jmp    0x41747f
  41742d:	mov    bh,0xf6
  41742f:	shl    BYTE PTR [eax-0x5d8eb208],1
  417435:	cmc    
  417436:	inc    esi
  417437:	aad    0x9d
  417439:	aas    
  41743a:	jno    0x4174b4
  41743c:	cmp    al,0x86
  41743e:	call   0x27d95d4d
  417443:	pushf  
  417444:	inc    eax
  417445:	(bad)  
  417447:	mov    dh,0xab
  417449:	aas    
  41744a:	rcr    esi,1
  41744c:	push   edx
  41744d:	inc    edx
  41744e:	in     eax,dx
  41744f:	fcom   QWORD PTR [ecx-0x45108bb0]
  417455:	ror    DWORD PTR [bp+si],0xb5
  417459:	push   ebx
  41745a:	retf   
  41745b:	mov    ch,0xf8
  41745d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41745e:	je     0x417449
  417460:	(bad)  
  417461:	xchg   esp,eax
  417462:	jne    0x417470
  417464:	mov    ebx,0xb7a0802e
  417469:	(bad)  
  41746a:	xchg   edx,eax
  41746b:	aad    0xe9
  41746d:	sbb    eax,0x4666c9ae
  417472:	aad    0xff
  417474:	add    ebp,DWORD PTR [edi]
  417476:	cmp    al,0x63
  417478:	and    eax,0x62b9e910
  41747d:	pop    esi
  41747e:	fadd   st(7),st
  417480:	inc    ebp
  417481:	push   ebx
  417482:	cwde   
  417483:	xchg   ah,dl
  417485:	mov    edi,0xc4c974fd
  41748a:	push   esi
  41748b:	jnp    0x4174bb
  41748d:	or     DWORD PTR [ecx+0x1afb3eb4],esi
  417493:	xchg   dl,al
  417495:	aaa    
  417496:	add    DWORD PTR [ebx-0x2b],esp
  417499:	sub    al,0xd1
  41749b:	dec    edx
  41749c:	test   al,0x1
  41749e:	xor    cl,dl
  4174a0:	mul    BYTE PTR [ebx+0x64]
  4174a3:	pop    edi
  4174a4:	out    0xc6,al
  4174a6:	test   al,0x9e
  4174a8:	push   cs
  4174a9:	jge    0x417455
  4174ab:	pop    edi
  4174ac:	rol    ch,0x63
  4174af:	sub    ebx,DWORD PTR [ebx]
  4174b1:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4174b3:	xor    edi,DWORD PTR [ebx+0x4f]
  4174b6:	mov    esi,0xac03642f
  4174bb:	loop   0x41750f
  4174bd:	loopne 0x417487
  4174bf:	pop    edx
  4174c0:	call   0x6b4a:0x2fc19b34
  4174c7:	sar    BYTE PTR [ebx],cl
  4174c9:	enter  0x4d18,0x9a
  4174cd:	pop    ds
  4174ce:	lods   al,BYTE PTR ds:[esi]
  4174cf:	dec    ecx
  4174d0:	daa    
  4174d1:	xchg   DWORD PTR [eax+0x6d],esi
  4174d4:	inc    ebp
  4174d5:	aam    0xb8
  4174d7:	pop    edx
  4174d8:	(bad)  
  4174d9:	lods   eax,DWORD PTR ds:[esi]
  4174da:	pop    ss
  4174db:	cwde   
  4174dc:	adc    eax,0x6ee94cb3
  4174e1:	je     0x4174f4
  4174e3:	cmp    ebp,0xc50c10bc
  4174e9:	sub    al,0xa8
  4174eb:	lods   eax,DWORD PTR ds:[esi]
  4174ec:	fiadd  DWORD PTR [edi+0x1d]
  4174ef:	dec    edx
  4174f0:	mov    esp,0x8facc1f5
  4174f5:	cmp    esi,0x84314b0d
  4174fb:	dec    ebx
  4174fc:	or     al,0x23
  4174fe:	popf   
  4174ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417500:	xchg   ebx,eax
  417501:	inc    edx
  417502:	mov    ebx,0xc236a0d1
  417507:	mov    esp,0x1354f8dd
  41750c:	jo     0x417515
  41750e:	lock mov edx,0x3e01db68
  417514:	adc    bl,BYTE PTR [esi]
  417516:	sub    ebp,DWORD PTR [edi+0x23]
  417519:	pop    eax
  41751a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41751b:	pop    ecx
  41751c:	jmp    0x417513
  41751e:	outs   dx,BYTE PTR ds:[esi]
  41751f:	loope  0x41752f
  417521:	cs stc 
  417523:	xchg   esp,eax
  417524:	jp     0x417513
  417526:	sbb    DWORD PTR [ebp+0x2b],esi
  417529:	pop    ebp
  41752a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41752b:	mov    ebx,0xb42b2419
  417530:	jmp    DWORD PTR [eax]
  417532:	and    edx,DWORD PTR [ecx+0x530c9709]
  417538:	and    cl,BYTE PTR [eax]
  41753a:	push   cs
  41753b:	pushf  
  41753c:	push   es
  41753d:	test   eax,0x65db7601
  417542:	or     eax,0xd961b4b9
  417547:	aam    0xb4
  417549:	iret   
  41754a:	inc    esi
  41754b:	sbb    bl,BYTE PTR [ebp-0x89314a]
  417551:	push   0x82caf495
  417556:	mov    ch,0x94
  417558:	dec    ebp
  417559:	jge    0x4175d4
  41755b:	or     eax,0x71e9d3a6
  417560:	outs   dx,DWORD PTR ds:[esi]
  417561:	imul   edx,DWORD PTR [edi+0x7f6e8af1],0x6839c69b
  41756b:	cmp    DWORD PTR [ebp-0x21bd0bbe],edi
  417571:	lods   eax,DWORD PTR ds:[esi]
  417572:	jns    0x417512
  417574:	aam    0xe6
  417576:	xchg   ecx,eax
  417577:	push   0xffffffcc
  417579:	mov    edx,0x96be2701
  41757e:	dec    ebp
  41757f:	cwde   
  417580:	sub    BYTE PTR [edx-0x683ec426],dl
  417586:	jnp    0x4175c9
  417588:	das    
  417589:	mov    ebx,0xac22f961
  41758e:	cdq    
  41758f:	jno    0x4175f3
  417591:	sbb    BYTE PTR [esp+edi*2+0x5efd40b2],ah
  417598:	or     eax,0x1a410b4f
  41759d:	cmp    al,0x92
  41759f:	stc    
  4175a0:	ret    
  4175a1:	cs jne 0x417595
  4175a4:	sbb    DWORD PTR [ebp+ecx*8+0x4334dc21],edi
  4175ab:	dec    ebx
  4175ac:	push   ebp
  4175ad:	cmp    bl,ch
  4175af:	or     al,BYTE PTR [esi]
  4175b1:	dec    ebp
  4175b2:	out    0xe5,al
  4175b4:	adc    ch,BYTE PTR [eax]
  4175b6:	xchg   edi,eax
  4175b7:	add    eax,DWORD PTR [eax+0x5c]
  4175ba:	jmp    0x41761b
  4175bc:	jl     0x4175fa
  4175be:	or     al,0xe0
  4175c0:	push   0xdeba2ddb
  4175c5:	es mov ch,0xce
  4175c8:	out    dx,eax
  4175c9:	repz test BYTE PTR [esi+ebp*2+0x7d],al
  4175ce:	xchg   BYTE PTR [ebp+esi*4-0x24fee310],dl
  4175d5:	call   0x56d6:0xc96cb097
  4175dc:	fwait
  4175dd:	jmp    0x621516ec
  4175e2:	fisubr WORD PTR [esi]
  4175e4:	dec    ebp
  4175e5:	(bad)  
  4175e6:	mov    esp,0x1b839e55
  4175eb:	xlat   BYTE PTR ds:[ebx]
  4175ec:	mov    DWORD PTR ds:0x1b3c7ead,ebx
  4175f2:	dec    edi
  4175f3:	ret    
  4175f4:	or     ecx,DWORD PTR [edx]
  4175f6:	rcr    DWORD PTR [edi],1
  4175f8:	es push esi
  4175fa:	xor    al,BYTE PTR [ecx]
  4175fc:	div    BYTE PTR [esi]
  4175fe:	ins    DWORD PTR es:[edi],dx
  4175ff:	push   ss
  417600:	addr16 cmc 
  417602:	loop   0x417631
  417604:	or     DWORD PTR [esi-0x18],ebp
  417607:	jp     0x4175cf
  417609:	jl     0x41762e
  41760b:	sbb    ch,BYTE PTR [ebp-0x35]
  41760e:	sub    al,0xab
  417610:	dec    eax
  417611:	(bad)  
  417612:	clc    
  417613:	adc    DWORD PTR ds:0x829d8b24,eax
  417619:	std    
  41761a:	pop    esp
  41761b:	xchg   ebx,eax
  41761c:	sub    al,0x2b
  41761e:	pushf  
  41761f:	add    esi,DWORD PTR [ebp-0x63]
  417622:	adc    al,0x5f
  417624:	mov    dl,0x48
  417626:	sbb    edx,ebp
  417628:	jmp    0x4175ce
  41762a:	outs   dx,DWORD PTR ds:[esi]
  41762b:	aaa    
  41762c:	adc    BYTE PTR [eax+0x1c],0xd2
  417630:	cdq    
  417631:	pop    ds
  417632:	sub    eax,0x5c1555d8
  417637:	xchg   esi,eax
  417638:	test   ax,0xd5
  41763c:	lock jmp 0xd914:0x6cf634c1
  417644:	xor    al,0xa
  417646:	dec    ecx
  417647:	sub    al,0x2f
  417649:	jecxz  0x4176aa
  41764b:	ret    0x1930
  41764e:	test   al,0xc0
  417650:	(bad)  [ebp+0x1bb00456]
  417656:	add    bl,BYTE PTR [ebx+ecx*2-0xac85c88]
  41765d:	pop    esp
  41765e:	gs dec ecx
  417660:	fst    QWORD PTR [ebx+0x6]
  417663:	or     ecx,ecx
  417665:	retf   0x9e1
  417668:	cmp    al,0x5e
  41766a:	pop    ss
  41766b:	push   cs
  41766c:	mov    bl,BYTE PTR [ebp-0x37]
  41766f:	xor    eax,0x43cea1f
  417674:	cmp    DWORD PTR [ebx-0x49],edx
  417677:	cmc    
  417678:	mov    DWORD PTR [ecx+0x1b],ebx
  41767b:	mov    eax,0x791509a2
  417680:	push   edi
  417681:	jge    0x4176a7
  417683:	pop    edx
  417684:	jmp    0x7995:0xe634482e
  41768b:	and    al,0x3e
  41768d:	jo     0x4176ca
  41768f:	mov    ah,0x5c
  417691:	xchg   edx,eax
  417692:	dec    esp
  417693:	lods   eax,DWORD PTR ds:[esi]
  417694:	in     eax,0x4b
  417696:	and    ebp,ebp
  417698:	sub    DWORD PTR [ebx+esi*1-0x5881e0f2],ebx
  41769f:	out    dx,al
  4176a0:	mov    ebp,0xdfd8207b
  4176a5:	sbb    al,cl
  4176a7:	xchg   esp,eax
  4176a8:	sahf   
  4176a9:	mov    ecx,0xc190eae9
  4176ae:	ins    DWORD PTR es:[edi],dx
  4176af:	pop    ecx
  4176b0:	in     al,0x55
  4176b2:	mov    esi,ebp
  4176b4:	retf   0xd0fc
  4176b7:	popf   
  4176b8:	mov    ch,0x96
  4176ba:	mov    ecx,0x88f7cee2
  4176bf:	jo     0x417726
  4176c1:	inc    ebp
  4176c2:	jmp    0x4f3b:0x698a367
  4176c9:	rcr    DWORD PTR [esi],1
  4176cb:	fild   DWORD PTR [edi+edx*4]
  4176ce:	inc    ecx
  4176cf:	cld    
  4176d0:	dec    edi
  4176d1:	nop
  4176d2:	sub    ecx,DWORD PTR [ebx+0x6afbf127]
  4176d8:	jae    0x4176b8
  4176da:	mul    DWORD PTR [ebx-0x5804170e]
  4176e0:	xor    eax,0xda95a472
  4176e5:	dec    ebp
  4176e6:	pop    es
  4176e7:	in     eax,0xce
  4176e9:	test   ebp,0x743996b6
  4176ef:	push   esp
  4176f0:	into   
  4176f1:	mov    dl,0xe1
  4176f3:	mov    cl,0x2
  4176f5:	pop    eax
  4176f6:	xor    BYTE PTR [edx-0x42a6bcdd],ah
  4176fc:	xor    esp,DWORD PTR [edx-0x5f030e3e]
  417702:	xchg   ebx,eax
  417703:	fs cmp ch,ah
  417706:	inc    BYTE PTR [ebx]
  417708:	aaa    
  417709:	and    BYTE PTR [ebx],ah
  41770b:	inc    edx
  41770c:	pop    ebp
  41770d:	mov    esp,0x792c264b
  417712:	add    DWORD PTR [esi+0x6c869a13],ebx
  417718:	jne    0x417771
  41771a:	pop    ss
  41771b:	cs inc ebx
  41771d:	push   ebx
  41771e:	mov    dh,0xbf
  417720:	dec    eax
  417721:	dec    ebp
  417722:	out    dx,eax
  417723:	test   al,0x61
  417725:	imul   eax,DWORD PTR [edi+0x363ab0db],0xffffffd5
  41772c:	xor    cl,BYTE PTR es:[ebx]
  41772f:	pop    ebp
  417730:	mov    al,ds:0x6f76c6b6
  417735:	dec    ebx
  417736:	div    DWORD PTR [esi]
  417738:	iret   
  417739:	xchg   esi,eax
  41773a:	lahf   
  41773b:	pop    esi
  41773c:	mov    ds:0x149a49c9,eax
  417741:	ret    0x5b5d
  417744:	or     dl,BYTE PTR [esi+esi*8]
  417747:	stos   DWORD PTR es:[edi],eax
  417748:	das    
  417749:	cmp    al,0x77
  41774b:	ja     0x417704
  41774d:	and    DWORD PTR [ebx-0x39],ebp
  417750:	pop    esp
  417751:	fisubr DWORD PTR [edx+0x74]
  417754:	push   ebp
  417755:	push   ax
  417757:	push   edx
  417758:	cmp    al,0xaa
  41775a:	in     eax,0x7d
  41775c:	fist   DWORD PTR [ebx+0x7]
  41775f:	ror    BYTE PTR [ecx+0x2c],0xc1
  417763:	adc    BYTE PTR [edi],cl
  417765:	and    ebx,esi
  417767:	sbb    al,0x64
  417769:	pop    ds
  41776a:	outs   dx,BYTE PTR ds:[esi]
  41776b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41776c:	and    eax,0x887615af
  417771:	outs   dx,BYTE PTR ds:[esi]
  417772:	add    ecx,ecx
  417774:	mov    esp,0xf7d408e9
  417779:	dec    esi
  41777a:	push   ds
  41777b:	xchg   esp,eax
  41777c:	mov    DWORD PTR [esi+0x18],edi
  41777f:	arpl   WORD PTR [edx],sp
  417781:	pshufw mm5,mm3,0x3d
  417785:	jle    0x417710
  417787:	mov    cs,WORD PTR [ebx+eax*2+0x669399b2]
  41778e:	mov    ds:0x4bb250bd,eax
  417793:	pop    es
  417794:	aas    
  417795:	fiadd  WORD PTR [eax]
  417797:	(bad)  
  417799:	mov    al,ds:0x68fc56b1
  41779e:	rcl    DWORD PTR [edi-0xda199de],cl
  4177a4:	fs das 
  4177a6:	adc    ebx,DWORD PTR [edx-0x64]
  4177a9:	es mov ah,0x7e
  4177ac:	(bad)  
  4177ad:	xchg   esi,eax
  4177ae:	mov    eax,DWORD PTR [bp+di]
  4177b1:	daa    
  4177b2:	dec    eax
  4177b3:	or     eax,0x9eafd223
  4177b8:	add    eax,0x82e3618e
  4177bd:	push   0x29
  4177bf:	dec    edi
  4177c0:	sar    BYTE PTR [esi+0x5d175c95],1
  4177c6:	ins    DWORD PTR es:[edi],dx
  4177c7:	mov    dl,0x7
  4177c9:	adc    BYTE PTR [ebx-0x43],dl
  4177cc:	out    dx,eax
  4177cd:	dec    eax
  4177ce:	lods   eax,DWORD PTR ds:[esi]
  4177cf:	aas    
  4177d0:	push   edx
  4177d1:	int    0x7f
  4177d3:	rcr    dl,1
  4177d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177d6:	scas   al,BYTE PTR es:[edi]
  4177d7:	push   ebp
  4177d8:	and    esi,ecx
  4177da:	sub    ah,ch
  4177dc:	out    dx,eax
  4177dd:	stos   DWORD PTR es:[edi],eax
  4177de:	jl     0x4177b7
  4177e0:	sub    BYTE PTR [ebp-0x609632c7],cl
  4177e6:	imul   esi,ecx,0x55b45e8b
  4177ec:	jmp    0x2152782c
  4177f1:	dec    ecx
  4177f2:	test   al,0xf
  4177f4:	ins    DWORD PTR es:[edi],dx
  4177f5:	cmp    DWORD PTR [eax],ebp
  4177f7:	call   0x76e21040
  4177fc:	adc    ah,BYTE PTR [eax]
  4177fe:	sbb    al,0xf3
  417800:	rcr    BYTE PTR [edx+0x11],cl
  417803:	xor    eax,0x1588a334
  417808:	sub    esp,eax
  41780a:	idiv   DWORD PTR [edx]
  41780c:	adc    al,0x37
  41780e:	lea    ecx,[ecx-0x1af515a4]
  417814:	inc    ebp
  417815:	pop    ds
  417816:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417817:	mov    ebp,fs
  417819:	popa   
  41781a:	fdiv   st,st(7)
  41781c:	mov    ebp,0x11d710d9
  417821:	(bad)
  417824:	fsub   st(7),st
  417826:	loopne 0x417868
  417828:	or     eax,edi
  41782a:	aad    0x9b
  41782c:	ret    
  41782d:	(bad)  
  41782e:	in     al,dx
  41782f:	lods   eax,DWORD PTR ds:[esi]
  417830:	sub    esi,DWORD PTR [edx-0x56]
  417833:	adc    al,0xe6
  417835:	mul    BYTE PTR [ebp-0x42]
  417838:	adc    bh,BYTE PTR [eax]
  41783a:	push   ecx
  41783b:	sub    ah,cl
  41783d:	divps  xmm4,XMMWORD PTR ds:0x2f1078a2
  417844:	call   FWORD PTR [ebx+ebp*2-0x63]
  417848:	dec    esp
  417849:	mov    ?,WORD PTR [ebp+0x6d]
  41784c:	mov    esp,0x5418ca73
  417851:	cmp    al,0x5
  417853:	sub    al,0xdd
  417855:	jbe    0x4177e2
  417857:	aas    
  417858:	(bad)  
  417859:	pop    ecx
  41785a:	adc    al,0x49
  41785c:	dec    ebp
  41785d:	sbb    edi,DWORD PTR [edx]
  41785f:	cmp    bl,BYTE PTR [ecx-0x2f0fbbc0]
  417865:	dec    ecx
  417866:	leave  
  417867:	cwde   
  417868:	pop    esp
  417869:	das    
  41786a:	mov    ch,0xea
  41786c:	ins    BYTE PTR es:[edi],dx
  41786d:	mov    ecx,0xa56e0613
  417872:	out    dx,al
  417873:	push   edx
  417874:	pop    ds
  417875:	add    al,0xe5
  417877:	cmp    eax,0xf474baa6
  41787c:	repnz mov BYTE PTR [esi-0x26aacd3b],0x5b
  417884:	mov    ch,BYTE PTR [ebp+0x78]
  417887:	jle    0x1022b489
  41788d:	add    eax,0xf2e1709f
  417892:	inc    eax
  417893:	scas   al,BYTE PTR es:[edi]
  417894:	and    eax,0x420b4d3a
  417899:	dec    ebp
  41789a:	js     0x41783a
  41789c:	or     dh,BYTE PTR [edx-0x36]
  41789f:	push   cs
  4178a0:	push   ebp
  4178a1:	into   
  4178a2:	je     0x41782c
  4178a4:	cmp    al,0x32
  4178a6:	jo     0x4178ec
  4178a8:	pop    esi
  4178a9:	cli    
  4178aa:	jae    0x4178cf
  4178ac:	and    eax,0x16d09677
  4178b1:	inc    edx
  4178b2:	or     DWORD PTR [edx],esp
  4178b4:	sbb    edi,DWORD PTR [esi+0x15]
  4178b7:	jne    0x4178d7
  4178b9:	(bad)  
  4178bb:	add    edx,DWORD PTR [edi-0x12]
  4178be:	mov    ds:0x19643dcd,eax
  4178c3:	int    0xa5
  4178c5:	mov    DWORD PTR [ebp+0x19],0xf3f8820e
  4178cc:	mov    DWORD PTR [ecx-0x39],edi
  4178cf:	js     0x4178c0
  4178d1:	xlat   BYTE PTR ds:[ebx]
  4178d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178d3:	pop    es
  4178d4:	out    dx,eax
  4178d5:	add    DWORD PTR [esp+edi*4-0xc],edx
  4178d9:	sub    eax,0x4bb9ec60
  4178de:	cmp    eax,0x7b3d233d
  4178e3:	fnsave [eax+ecx*8]
  4178e6:	sbb    al,0x58
  4178e8:	inc    ebp
  4178e9:	mov    bh,0xca
  4178eb:	scas   al,BYTE PTR es:[edi]
  4178ec:	add    al,BYTE PTR [ecx-0x57fe3c39]
  4178f2:	aas    
  4178f3:	shl    BYTE PTR [eax-0x80],1
  4178f6:	mov    al,0xfc
  4178f8:	test   DWORD PTR [ecx-0x3b3e3202],edx
  4178fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178ff:	jp     0x4178f1
  417901:	mov    cl,0xe5
  417903:	sbb    eax,0xd9420cb7
  417908:	imul   eax,DWORD PTR [edx+0x7],0xffffff84
  41790c:	clc    
  41790d:	adc    eax,0x9d07b637
  417912:	cmp    ebx,DWORD PTR [ecx]
  417914:	xchg   esi,eax
  417915:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417916:	cwde   
  417917:	test   DWORD PTR [ecx+eiz*2+0x6851534],esi
  41791e:	jg     0x41794e
  417920:	xchg   ebx,eax
  417921:	gs dec edx
  417923:	test   BYTE PTR [edx-0x3a],dh
  417926:	lods   eax,DWORD PTR ds:[esi]
  417927:	icebp  
  417928:	mov    cl,0x3c
  41792a:	cmp    edx,DWORD PTR [eax+edx*8]
  41792d:	(bad)  
  41792e:	mov    dh,0x18
  417930:	xlat   BYTE PTR ds:[ebx]
  417931:	mov    ebp,0x86748eb6
  417936:	(bad)  
  417938:	inc    esp
  417939:	mov    esi,?
  41793b:	fisttp DWORD PTR [eax+0x7dc1164]
  417941:	out    0xbd,eax
  417943:	ins    DWORD PTR es:[edi],dx
  417944:	inc    ebx
  417945:	sbb    cl,dl
  417947:	lea    esi,[eax]
  417949:	xor    DWORD PTR [eax+0x370b4bf5],eax
  41794f:	jns    0x4179bb
  417951:	jns    0x417986
  417953:	pop    DWORD PTR [eax-0x3c]
  417956:	pop    eax
  417957:	mov    eax,0xf8dcb4e1
  41795c:	loopne 0x417950
  41795e:	adc    bl,dh
  417960:	scas   al,BYTE PTR es:[edi]
  417961:	xchg   esp,eax
  417962:	aam    0x18
  417964:	popf   
  417965:	scas   al,BYTE PTR es:[edi]
  417966:	aas    
  417967:	stc    
  417968:	lea    ebp,[ecx+0x6d]
  41796b:	les    edi,FWORD PTR [esi+eax*4]
  41796e:	push   ss
  41796f:	pop    ss
  417970:	addr16 sub al,0xeb
  417973:	lods   eax,DWORD PTR ds:[esi]
  417974:	mov    ecx,DWORD PTR [edi-0x44]
  417977:	mov    esi,fs
  417979:	gs das 
  41797b:	mov    ebp,0x5983f47f
  417980:	xor    BYTE PTR [esi],dh
  417982:	jge    0x417973
  417984:	sahf   
  417985:	sbb    DWORD PTR [eax-0x6f16301b],esi
  41798b:	fst    QWORD PTR [eax-0x1d70b780]
  417991:	imul   ebp,esi,0x73
  417994:	xlat   BYTE PTR ds:[ebx]
  417995:	iret   
  417996:	xor    DWORD PTR [edx+0x66],ebx
  417999:	mov    esp,0xf551a3c6
  41799e:	lahf   
  41799f:	push   ebp
  4179a0:	add    al,0x31
  4179a2:	sub    DWORD PTR [edx-0x7c51db31],0x7c
  4179a9:	adc    eax,0xeb22bcb3
  4179ae:	jge    0x4179ee
  4179b0:	cmc    
  4179b1:	mov    bh,0xc
  4179b3:	dec    ecx
  4179b4:	jno    0x4179af
  4179b6:	or     dh,BYTE PTR [eax]
  4179b8:	popf   
  4179b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179ba:	cmp    ebx,DWORD PTR [esi+0x124b179c]
  4179c0:	je     0x417a40
  4179c2:	jp     0x417a13
  4179c4:	in     al,0xe6
  4179c6:	not    ah
  4179c8:	sbb    BYTE PTR [edi+0x6a],dh
  4179cb:	and    dl,dh
  4179cd:	pop    ebp
  4179ce:	xchg   ecx,eax
  4179cf:	push   edi
  4179d0:	push   esp
  4179d1:	adc    al,BYTE PTR [ecx]
  4179d3:	fnstenv [edi+0x1c96b7cd]
  4179d9:	or     eax,0xe8bc28f0
  4179de:	in     eax,0xf7
  4179e0:	xchg   ebx,eax
  4179e1:	outs   dx,DWORD PTR ds:[esi]
  4179e2:	popf   
  4179e3:	push   edi
  4179e4:	loope  0x4179eb
  4179e6:	mov    ebp,0x1e39e405
  4179eb:	sbb    al,0xb7
  4179ed:	pop    ecx
  4179ee:	push   es
  4179ef:	xchg   bh,ah
  4179f1:	push   esi
  4179f2:	mov    esp,0x380aefd4
  4179f7:	sub    eax,DWORD PTR [edi]
  4179f9:	xchg   esi,eax
  4179fa:	inc    ebp
  4179fb:	and    DWORD PTR [edi+0x7cc9ff57],0x59
  417a02:	ds push ds
  417a04:	cmp    DWORD PTR [ebx-0x34],0xffffffad
  417a08:	icebp  
  417a09:	pop    eax
  417a0a:	push   esi
  417a0b:	call   0xa6692eb7
  417a10:	outs   dx,DWORD PTR ds:[esi]
  417a11:	mov    BYTE PTR [eax-0x436254e],0xc2
  417a18:	scas   al,BYTE PTR es:[edi]
  417a19:	cmp    eax,0x35830f8f
  417a1e:	mov    eax,0xb98e8197
  417a23:	inc    ecx
  417a24:	repnz out 0x66,al
  417a27:	push   0x6ed2ceb4
  417a2c:	adc    al,0x9f
  417a2e:	mov    ebx,DWORD PTR [ecx+0x60]
  417a31:	inc    ebx
  417a32:	ret    
  417a33:	inc    edi
  417a34:	pop    edx
  417a35:	ins    DWORD PTR es:[edi],dx
  417a36:	or     al,0xf5
  417a38:	cdq    
  417a39:	cmp    edx,edi
  417a3b:	sub    esp,ecx
  417a3d:	dec    esi
  417a3e:	or     edx,esi
  417a40:	mov    esi,esp
  417a42:	pop    esp
  417a43:	aas    
  417a44:	add    ch,BYTE PTR [edi-0x421edc27]
  417a4a:	mov    ecx,0x16a74931
  417a4f:	cmp    ch,BYTE PTR [ebx+0x2a971092]
  417a55:	mov    ecx,0x8bf9f333
  417a5a:	outs   dx,BYTE PTR ds:[esi]
  417a5b:	arpl   WORD PTR [eax-0x312b9e81],ax
  417a61:	xchg   esp,eax
  417a62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a63:	out    0xaf,al
  417a65:	popa   
  417a66:	sub    al,0x74
  417a68:	adc    esp,edx
  417a6a:	popf   
  417a6b:	imul   eax,DWORD PTR [eax],0xab3be6ba
  417a71:	out    0xa1,eax
  417a73:	loope  0x417adf
  417a75:	in     al,dx
  417a76:	mov    esi,0x70df07db
  417a7b:	pop    esi
  417a7c:	jne    0x417ad2
  417a7e:	and    eax,0xeb0c214e
  417a83:	mov    DWORD PTR [edi-0x7814e9dc],edx
  417a89:	mov    dl,0x7a
  417a8b:	mov    BYTE PTR [ebx+0x68],ch
  417a8e:	cs pop ecx
  417a90:	fldcw  WORD PTR [esi-0x6fa81e62]
  417a96:	and    ebx,DWORD PTR [ebp+0x1100e8b2]
  417a9c:	mov    eax,0x5fcabccc
  417aa1:	push   edi
  417aa2:	push   0x6d5cc418
  417aa7:	pusha  
  417aa8:	(bad)  
  417aaa:	inc    ecx
  417aab:	inc    esi
  417aac:	xor    ebp,DWORD PTR [ebp+edx*2+0x531b8cb1]
  417ab3:	inc    eax
  417ab4:	(bad)  
  417ab5:	std    
  417ab6:	iret   
  417ab7:	in     al,dx
  417ab8:	mov    esp,0x643bffcf
  417abd:	and    dl,BYTE PTR [ebp+0x16dcd4c4]
  417ac3:	mov    ds:0x3fe7bcaf,eax
  417ac8:	(bad)  
  417ac9:	data16 daa 
  417acb:	dec    esp
  417acc:	les    eax,FWORD PTR [ebp+0xf526ec5]
  417ad2:	pop    esi
  417ad3:	pusha  
  417ad4:	inc    esi
  417ad5:	gs ins WORD PTR es:[edi],dx
  417ad8:	mov    ah,0x57
  417ada:	imul   ebx,DWORD PTR [ecx-0x2d],0xffffff9f
  417ade:	jl     0x417b13
  417ae0:	aad    0x50
  417ae2:	je     0x417a6e
  417ae4:	mov    ds:0x21fa278d,al
  417ae9:	out    dx,al
  417aea:	xor    edi,ebx
  417aec:	js     0x417aa2
  417aee:	cmp    al,0xd7
  417af0:	mov    dh,0xd2
  417af2:	popf   
  417af3:	xor    DWORD PTR [ebx-0x1069a5f3],esp
  417af9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417afa:	mov    eax,0xb2453169
  417aff:	lock ficom DWORD PTR [ecx]
  417b02:	aad    0xdb
  417b04:	ins    BYTE PTR es:[edi],dx
  417b05:	jne    0x417b41
  417b07:	jo     0x417abe
  417b09:	inc    esi
  417b0a:	dec    edi
  417b0b:	or     BYTE PTR [esi],0xde
  417b0e:	fcmovbe st,st(4)
  417b10:	pop    ebx
  417b11:	leave  
  417b12:	adc    edi,edi
  417b14:	pop    esp
  417b15:	jge    0x417b0a
  417b17:	mov    cl,0xa1
  417b19:	sub    DWORD PTR [edi+0x7a91d315],ecx
  417b1f:	adc    dl,BYTE PTR [ebp+0x743b1e43]
  417b25:	inc    ebx
  417b26:	and    edi,0x11
  417b29:	imul   ebx,DWORD PTR [edi+0xf],0xffffff89
  417b2d:	mov    esp,gs
  417b2f:	adc    bh,0xba
  417b32:	mov    edx,0x11f7aa0f
  417b37:	ret    0x17e0
  417b3a:	pop    es
  417b3b:	push   ecx
  417b3c:	xchg   esi,eax
  417b3d:	cmp    DWORD PTR [esi],edx
  417b3f:	lea    esp,[esi]
  417b41:	inc    esp
  417b42:	enter  0xc6b5,0xde
  417b46:	jns    0x417b4a
  417b48:	out    0x3d,al
  417b4a:	pop    esp
  417b4b:	add    DWORD PTR [edx+0x7f],edi
  417b4e:	mov    WORD PTR [esi+0x5f],cs
  417b51:	imul   edx,DWORD PTR ds:0x60bcbdf3,0x9181b857
  417b5b:	adc    eax,0x14681485
  417b61:	and    al,0xeb
  417b63:	dec    ebp
  417b64:	or     cl,BYTE PTR [ecx+ecx*8]
  417b67:	and    al,0xc0
  417b69:	js     0x417bba
  417b6b:	jmp    0x7cab:0x523b07e9
  417b72:	xor    al,0xcf
  417b74:	mov    ecx,0x5777d9c3
  417b79:	sahf   
  417b7a:	ds ja  0x417bb9
  417b7d:	push   esp
  417b7e:	jl     0xf1f123c3
  417b84:	jl     0x417b06
  417b86:	xchg   ebp,eax
  417b87:	std    
  417b88:	es test ch,al
  417b8b:	ret    
  417b8c:	xor    DWORD PTR [edi-0x62],ebx
  417b8f:	cdq    
  417b90:	das    
  417b91:	inc    edx
  417b92:	mov    edx,DWORD PTR [edi+0x4a]
  417b95:	dec    edx
  417b96:	jb     0x417b4b
  417b98:	and    edi,DWORD PTR [edx]
  417b9a:	ins    BYTE PTR es:[edi],dx
  417b9b:	(bad)  
  417b9c:	popf   
  417b9d:	cmp    DWORD PTR [ebx-0x4f],esp
  417ba0:	out    dx,eax
  417ba1:	mov    ds:0xa961a632,al
  417ba6:	mov    ds:0x733d1553,al
  417bab:	dec    ecx
  417bac:	dec    ebx
  417bad:	icebp  
  417bae:	icebp  
  417baf:	add    ebp,esi
  417bb1:	xchg   esi,eax
  417bb2:	cmc    
  417bb3:	sub    ecx,DWORD PTR [ecx+0x6c]
  417bb6:	(bad)  
  417bb7:	mov    ecx,0xc52c9bbd
  417bbc:	je     0x417bea
  417bbe:	and    DWORD PTR [ebx+0x4b6f19e],ebx
  417bc4:	(bad)
  417bc8:	into   
  417bc9:	jne    0x417bee
  417bcb:	loop   0x417bd7
  417bcd:	out    dx,eax
  417bce:	xor    bl,cl
  417bd0:	push   esi
  417bd1:	jmp    0xa9c9db5c
  417bd6:	daa    
  417bd7:	shl    DWORD PTR [edx],0xa0
  417bda:	xor    eax,0xf68c74ab
  417bdf:	into   
  417be0:	sbb    BYTE PTR [edi],ah
  417be2:	sbb    BYTE PTR [edx+0x76],cl
  417be5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417be6:	mov    ah,0x26
  417be8:	dec    esi
  417be9:	test   BYTE PTR ds:[ebp-0x3194d2a4],0x65
  417bf1:	pop    ss
  417bf2:	push   0x29
  417bf4:	cmp    edx,edx
  417bf6:	or     DWORD PTR [esi+0x3a],ecx
  417bf9:	je     0x417c3e
  417bfb:	test   al,0x21
  417bfd:	push   ds
  417bfe:	in     eax,0x8c
  417c00:	xor    esp,esi
  417c02:	pop    eax
  417c03:	xor    al,0x8b
  417c05:	out    0xf4,eax
  417c07:	stc    
  417c08:	xor    al,0xed
  417c0a:	xlat   BYTE PTR ds:[ebx]
  417c0b:	push   es
  417c0c:	adc    eax,0x84a98ff1
  417c11:	js     0x417ba3
  417c13:	jbe    0x417c8f
  417c15:	das    
  417c16:	stc    
  417c17:	outs   dx,DWORD PTR ds:[esi]
  417c18:	out    0x84,al
  417c1a:	sbb    eax,0xd9aca0af
  417c1f:	aas    
  417c20:	shr    DWORD PTR [ecx+eax*8+0x79],cl
  417c24:	fwait
  417c25:	int3   
  417c26:	(bad)  
  417c27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c28:	aaa    
  417c29:	xchg   esi,eax
  417c2a:	jmp    0x417c63
  417c2c:	mov    esi,0xfa687343
  417c31:	pop    es
  417c32:	mov    cl,ch
  417c34:	xchg   ebx,eax
  417c35:	icebp  
  417c36:	outs   dx,DWORD PTR cs:[esi]
  417c38:	repz push cs
  417c3a:	bound  esp,QWORD PTR [edx-0x5]
  417c3d:	jns    0x417bfe
  417c3f:	adc    DWORD PTR fs:[eax+ebp*8-0xa5187ad],esi
  417c47:	sbb    DWORD PTR [edx],eax
  417c49:	add    eax,eax
  417c4b:	int    0xab
  417c4d:	jbe    0x417c2a
  417c4f:	xchg   BYTE PTR [ebx+0x52],ah
  417c52:	add    edx,esp
  417c54:	(bad)  
  417c55:	lods   al,BYTE PTR ds:[esi]
  417c56:	fdiv   QWORD PTR [ebp-0x5edda64b]
  417c5c:	ins    BYTE PTR es:[edi],dx
  417c5d:	xchg   esi,eax
  417c5e:	scas   al,BYTE PTR es:[edi]
  417c5f:	mov    edi,0xdfd5f31f
  417c64:	or     al,0x95
  417c66:	cli    
  417c67:	push   ds
  417c68:	mov    dl,0x92
  417c6a:	mov    eax,0x165e4f0d
  417c6f:	shr    cl,0xfc
  417c72:	cmp    eax,eax
  417c74:	pop    edx
  417c75:	or     eax,0xa5178d36
  417c7a:	dec    edx
  417c7b:	mov    eax,ds:0xe3cc5908
  417c80:	sub    bh,BYTE PTR [ecx]
  417c82:	add    edx,edx
  417c84:	aas    
  417c85:	inc    ebp
  417c86:	sahf   
  417c87:	out    dx,eax
  417c88:	pop    ebx
  417c89:	mov    cl,0xf
  417c8b:	pop    ds
  417c8c:	das    
  417c8d:	sbb    BYTE PTR [edx+ebx*4+0x74f911d7],0xc1
  417c95:	lds    edi,FWORD PTR gs:[ecx]
  417c98:	hlt    
  417c99:	aas    
  417c9a:	pop    es
  417c9b:	xchg   ecx,eax
  417c9c:	call   0x11063d7a
  417ca1:	les    esp,FWORD PTR [esp+eax*2-0x29]
  417ca5:	adc    al,0x1e
  417ca7:	mov    eax,0x6d3fea46
  417cac:	leave  
  417cad:	ins    DWORD PTR es:[edi],dx
  417cae:	jb     0x417c55
  417cb0:	test   al,0xb5
  417cb2:	lods   al,BYTE PTR ds:[esi]
  417cb3:	aam    0xb9
  417cb5:	loope  0x417ce6
  417cb7:	cld    
  417cb8:	mov    ecx,0x60322081
  417cbd:	jl     0x417cfa
  417cbf:	mov    eax,esi
  417cc1:	fldcw  WORD PTR [ebx+edx*8+0x59]
  417cc5:	jmp    0x417c6e
  417cc7:	dec    ebx
  417cc8:	xchg   BYTE PTR [edx-0x6f],al
  417ccb:	jbe    0xa448e398
  417cd1:	aad    0xc9
  417cd3:	icebp  
  417cd4:	push   ecx
  417cd5:	jne    0x417d00
  417cd7:	ins    DWORD PTR es:[edi],dx
  417cd8:	or     al,0xb3
  417cda:	mov    ds:0x93255454,al
  417cdf:	pop    eax
  417ce0:	sbb    al,0xc7
  417ce2:	mov    ch,0x3e
  417ce4:	jno    0x417cf2
  417ce6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ce8:	cmp    DWORD PTR [ebx],ebp
  417cea:	cwde   
  417ceb:	(bad)  
  417cec:	lahf   
  417ced:	sbb    al,0x72
  417cef:	iret   
  417cf0:	test   DWORD PTR [edi+0x578ca46a],edi
  417cf6:	cmp    esp,DWORD PTR [edx]
  417cf8:	xor    ecx,DWORD PTR [eax]
  417cfa:	and    esp,eax
  417cfc:	(bad)  
  417cfd:	(bad)  
  417d00:	xchg   esp,eax
  417d01:	cmp    al,0x49
  417d03:	add    al,BYTE PTR [ebx+eiz*2-0x35]
  417d07:	inc    eax
  417d08:	push   0x45
  417d0a:	mov    ebp,0xeb4efc22
  417d0f:	iret   
  417d10:	int    0x76
  417d12:	fidivr DWORD PTR [edx-0x18]
  417d15:	xor    al,0x87
  417d17:	pop    es
  417d18:	call   FWORD PTR [ecx+0x3c]
  417d1b:	cmp    dh,ch
  417d1d:	idiv   DWORD PTR [edx]
  417d1f:	loopne 0x417d3b
  417d21:	aas    
  417d22:	out    dx,al
  417d23:	mov    eax,ds:0x86a6281e
  417d28:	mov    bh,0xfc
  417d2a:	sbb    DWORD PTR [edi],esp
  417d2c:	or     BYTE PTR [edx+0x51da832c],al
  417d32:	lahf   
  417d33:	or     al,0xf3
  417d35:	push   ss
  417d36:	adc    ch,ah
  417d38:	outs   dx,BYTE PTR ds:[esi]
  417d39:	adc    ebx,DWORD PTR [edi+0x15]
  417d3c:	(bad)  
  417d3d:	loopne 0x417d9f
  417d3f:	cmp    eax,0xf68bdc5b
  417d44:	xor    al,0x6c
  417d46:	push   ecx
  417d47:	xchg   DWORD PTR [edx+0x1e],ecx
  417d4a:	cmp    bh,BYTE PTR [edx]
  417d4c:	xchg   ebp,eax
  417d4d:	int3   
  417d4e:	xor    al,BYTE PTR [edx+0x40]
  417d51:	xchg   ebx,eax
  417d52:	mov    ecx,0x30890c2
  417d57:	add    eax,DWORD PTR [ebx-0x45]
  417d5a:	in     eax,0xda
  417d5c:	and    eax,0x82d8288d
  417d61:	cmp    esp,eax
  417d63:	adc    al,0x45
  417d65:	jno    0x417d3d
  417d67:	fsub   QWORD PTR [edi+0x27]
  417d6a:	les    ebp,FWORD PTR [ecx-0x5421ad77]
  417d70:	adc    edx,DWORD PTR [eax]
  417d72:	ds dec eax
  417d74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d75:	sar    BYTE PTR [esi+ebx*4+0x32fbb968],1
  417d7c:	div    DWORD PTR [ecx+0x3ad2588]
  417d82:	dec    esi
  417d83:	dec    ebp
  417d84:	outs   dx,DWORD PTR ds:[esi]
  417d85:	pop    ebp
  417d86:	addr16 test eax,0xfaae6c27
  417d8d:	leave  
  417d8e:	xchg   esi,eax
  417d8f:	jle    0x417dea
  417d91:	push   edx
  417d92:	fidivr WORD PTR [eax+ebx*8]
  417d95:	nop
  417d96:	mov    edx,0x307ed7d1
  417d9b:	xor    al,0x1f
  417d9d:	nop    DWORD PTR [esp+ebp*2+0xa239c82]
  417da5:	retf   
  417da6:	sbb    ebx,0xe2edcccd
  417dac:	dec    ebx
  417dad:	mov    dh,0xfc
  417daf:	fisub  WORD PTR es:[ecx+0xb200bd]
  417db6:	scas   al,BYTE PTR es:[edi]
  417db7:	(bad)  
  417db8:	xchg   ecx,eax
  417db9:	cld    
  417dba:	jb     0x417e39
  417dbc:	imul   ebx,ecx,0xffffffff
  417dbf:	adc    dl,BYTE PTR [eax]
  417dc1:	sahf   
  417dc2:	mov    DWORD PTR [ecx+0xe12df0a],esp
  417dc8:	enter  0xb94f,0x8b
  417dcc:	cmp    al,0x84
  417dce:	jecxz  0x417d64
  417dd0:	push   cs
  417dd1:	fnsave [esi]
  417dd3:	cmp    dh,al
  417dd5:	adc    al,0x6
  417dd7:	sub    ebx,DWORD PTR ds:0x93241819
  417ddd:	sbb    ebx,edx
  417ddf:	mov    al,ds:0x3a4f37e
  417de4:	das    
  417de5:	pop    es
  417de6:	mov    bl,0xdf
  417de8:	push   ds
  417de9:	cmc    
  417dea:	mov    ds:0x859326d6,al
  417def:	and    ebp,esp
  417df1:	es mov ch,0x89
  417df4:	sbb    eax,0x516e9ef6
  417df9:	adc    DWORD PTR [edi-0x66cc0d25],ecx
  417dff:	dec    ebp
  417e00:	les    edx,FWORD PTR [esi]
  417e02:	jnp    0x417e6b
  417e04:	jp     0x417e84
  417e06:	outs   dx,DWORD PTR ds:[esi]
  417e07:	fimul  WORD PTR ds:0x33a0a44
  417e0d:	sbb    DWORD PTR [edi+0x23],esi
  417e10:	adc    ecx,eax
  417e12:	mov    eax,esp
  417e14:	jle    0x417e3c
  417e16:	sub    BYTE PTR [edi-0x49587bdd],ah
  417e1c:	ins    BYTE PTR es:[edi],dx
  417e1d:	out    dx,al
  417e1e:	repz dec ecx
  417e20:	xchg   ebp,eax
  417e21:	retf   
  417e22:	lahf   
  417e23:	icebp  
  417e24:	fst    QWORD PTR [edx]
  417e26:	push   0x634ae879
  417e2b:	push   esi
  417e2c:	jmp    0xa4c5cd7a
  417e31:	stos   BYTE PTR es:[edi],al
  417e32:	test   al,0xf3
  417e34:	scas   al,BYTE PTR es:[edi]
  417e35:	mov    ebx,0x2fb07e81
  417e3a:	jb     0x417e44
  417e3c:	(bad)  
  417e3d:	push   eax
  417e3e:	test   BYTE PTR [ebp-0x25],dl
  417e41:	sbb    BYTE PTR [edx],ah
  417e43:	nop
  417e44:	popa   
  417e45:	cmp    ah,bl
  417e47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e48:	sub    cl,BYTE PTR cs:[ebx]
  417e4b:	fidivr DWORD PTR [eax-0x6]
  417e4e:	add    cl,BYTE PTR [ecx]
  417e50:	jno    0x417dde
  417e52:	or     DWORD PTR [ebx+0x756187a],0x588fd8b9
  417e5c:	iret   
  417e5d:	ds push es
  417e5f:	add    BYTE PTR [eax+ecx*2+0x6e4f46cd],bh
  417e66:	jae    0x417ed1
  417e68:	pop    es
  417e69:	jnp    0x417e1f
  417e6b:	jnp    0x417ea9
  417e6d:	push   ds
  417e6e:	or     eax,0x984ee9e3
  417e73:	inc    ecx
  417e74:	aad    0xe
  417e76:	pop    eax
  417e77:	pop    ss
  417e78:	jmp    0x667738b1
  417e7d:	scas   eax,DWORD PTR es:[edi]
  417e7e:	add    BYTE PTR [esi-0x55],dh
  417e81:	fwait
  417e82:	add    bh,bh
  417e84:	xchg   esi,eax
  417e85:	addr16 mov ecx,0xd16485a8
  417e8b:	jae    0x417eb5
  417e8d:	sub    ecx,DWORD PTR [eax+0x39fa378c]
  417e93:	mov    eax,ds:0xad14c8c
  417e98:	xchg   esp,eax
  417e99:	loope  0x417f19
  417e9b:	in     al,0x43
  417e9d:	fwait
  417e9e:	or     ecx,ebx
  417ea0:	mov    bh,0xcb
  417ea2:	push   ecx
  417ea3:	lds    edx,FWORD PTR [edi]
  417ea5:	pop    ecx
  417ea6:	and    eax,0xd0983c91
  417eab:	or     ebp,DWORD PTR es:[edx-0x5c857941]
  417eb2:	jns    0x417e56
  417eb4:	call   0x9bbc:0x2dbd235f
  417ebb:	aas    
  417ebc:	lods   eax,DWORD PTR ds:[esi]
  417ebd:	ss pushf 
  417ebf:	mov    cl,0x9a
  417ec1:	sub    eax,0x8e5baf8b
  417ec6:	shr    DWORD PTR [eax-0x3f33fd55],cl
  417ecc:	sbb    eax,0x31137718
  417ed1:	mov    WORD PTR [eax+0x2b],fs
  417ed4:	inc    ebx
  417ed5:	and    bh,BYTE PTR ds:0xbc63de07
  417edb:	sub    eax,0x888a2a7e
  417ee0:	mov    ds:0xdafd4df8,eax
  417ee5:	cmp    al,0x33
  417ee7:	push   ebp
  417ee8:	adc    BYTE PTR [ecx-0x937c3b4],dl
  417eee:	pusha  
  417eef:	xchg   esi,eax
  417ef0:	xor    eax,DWORD PTR [eax+0x37eb71f8]
  417ef6:	cmp    BYTE PTR [edi-0x72e0162],cl
  417efc:	add    bl,bl
  417efe:	loopne 0x417e94
  417f00:	jne    0x417ef4
  417f02:	inc    ebx
  417f03:	aas    
  417f04:	cmp    BYTE PTR [eax+ebp*8-0x6b],bl
  417f08:	rep outs dx,DWORD PTR ds:[esi]
  417f0a:	adc    al,0x4e
  417f0c:	popf   
  417f0d:	pop    es
  417f0e:	nop
  417f0f:	jl     0x417ee1
  417f11:	out    dx,al
  417f12:	es idiv eax
  417f15:	jmp    0x417eba
  417f17:	and    edx,DWORD PTR [ebx+0x71752a5b]
  417f1d:	fidiv  WORD PTR [ecx-0x5d]
  417f20:	in     eax,dx
  417f21:	mov    ecx,0x7f648bff
  417f26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f27:	adc    ebx,esp
  417f29:	repnz mov esi,0x4182d9c1
  417f2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f30:	ror    bh,1
  417f32:	jge    0x417f4a
  417f34:	rcr    DWORD PTR [ebx],cl
  417f36:	cmp    DWORD PTR [eax+0x489a67a7],edi
  417f3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f3d:	inc    eax
  417f3e:	mov    eax,ds:0x1b8758b
  417f43:	lds    ebp,FWORD PTR [edx-0x5e06b734]
  417f49:	retf   
  417f4a:	xor    edi,DWORD PTR ds:0x413f5409
  417f50:	imul   ecx,DWORD PTR [edi+0x1c4ec97d],0x2c
  417f57:	add    edi,esi
  417f59:	mov    WORD PTR [edi],?
  417f5b:	sub    dl,dl
  417f5d:	ret    
  417f5e:	mov    dh,0x44
  417f60:	fadd   st,st(0)
  417f62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f63:	xor    eax,edx
  417f65:	inc    ebx
  417f66:	lds    edx,FWORD PTR [edx-0x1bf327ee]
  417f6c:	dec    ecx
  417f6d:	cli    
  417f6e:	sti    
  417f6f:	cmp    eax,0xb64e954d
  417f74:	mov    edi,0x761ca121
  417f79:	pop    edi
  417f7a:	inc    edi
  417f7b:	pop    ds
  417f7c:	fsub   DWORD PTR ds:0x6c00f486
  417f82:	ja     0x417fcd
  417f84:	test   eax,0xe96bdf74
  417f89:	repnz sub eax,0x8005f0d4
  417f8f:	rol    ch,cl
  417f91:	mov    ebp,0xe9e7130d
  417f96:	sub    bh,BYTE PTR [eax-0x23]
  417f99:	xchg   ecx,eax
  417f9a:	add    al,0x20
  417f9c:	popf   
  417f9d:	jb     0x418007
  417f9f:	sub    al,0xa2
  417fa1:	aas    
  417fa2:	jmp    0xb06a4de
  417fa7:	fdiv   QWORD PTR [ebx]
  417fa9:	int3   
  417faa:	sbb    BYTE PTR [ebx+ecx*2],bl
  417fad:	repz xor BYTE PTR [ebp-0x77],bl
  417fb1:	or     al,0xfa
  417fb3:	mov    DWORD PTR [edx+0x1e],ecx
  417fb6:	jne    0x41801b
  417fb8:	retf   0x3ced
  417fbb:	and    al,0xa6
  417fbd:	xor    dh,BYTE PTR [edx]
  417fbf:	push   edi
  417fc0:	xchg   edx,eax
  417fc1:	mov    al,0xd5
  417fc3:	push   0x6af7ee72
  417fc8:	xor    al,BYTE PTR [eax]
  417fca:	leave  
  417fcb:	add    al,0xad
  417fcd:	mov    ch,0xbf
  417fcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fd0:	mov    ah,0xc4
  417fd2:	mov    al,0x97
  417fd4:	pop    edi
  417fd5:	test   BYTE PTR [ebx],0xd0
  417fd8:	add    ch,al
  417fda:	sub    BYTE PTR [ecx+ebx*4-0x7b87cdec],bl
  417fe1:	inc    esi
  417fe2:	pop    ecx
  417fe3:	scas   eax,DWORD PTR es:[edi]
  417fe4:	push   ebx
  417fe5:	ins    DWORD PTR es:[edi],dx
  417fe6:	or     bl,BYTE PTR [ebp+eax*2+0x6f]
  417fea:	add    bh,BYTE PTR [bp+di+0x3ac1]
  417fef:	push   ds
  417ff0:	add    al,0x5
  417ff2:	adc    eax,0x65db5129
  417ff7:	pop    esi
  417ff8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ff9:	inc    esp
  417ffa:	xchg   edx,eax
  417ffb:	neg    edi
  417ffd:	mov    dh,0x85
  417fff:	sbb    ecx,0xfffffffc
  418002:	repz js 0x418016
  418005:	mov    ebp,DWORD PTR [edx+0x4b]
  418008:	and    edi,DWORD PTR [ecx]
  41800a:	xchg   ebp,eax
  41800b:	mov    edx,0x73a2be79
  418010:	sub    al,0xa8
  418012:	inc    edx
  418013:	jp     0x418051
  418015:	cs cli 
  418017:	pop    ebp
  418018:	lods   eax,DWORD PTR ds:[esi]
  418019:	cmc    
  41801a:	cmc    
  41801b:	and    eax,ebp
  41801d:	stos   BYTE PTR es:[edi],al
  41801e:	jbe    0x417fa2
  418020:	ins    BYTE PTR es:[edi],dx
  418021:	mov    ebx,es
  418023:	(bad)  
  418024:	push   esi
  418025:	in     eax,0x3a
  418027:	mov    bh,0xbd
  418029:	sbb    BYTE PTR [ebp+0x5319f6f9],ch
  41802f:	adc    eax,0x251b911e
  418034:	jae    0x417fcf
  418036:	xchg   esi,eax
  418037:	inc    ebx
  418038:	inc    edx
  418039:	rol    BYTE PTR [edx],1
  41803b:	mov    eax,0xa0fd8686
  418040:	je     0x417fe1
  418042:	repnz repz int3 
  418045:	lods   eax,DWORD PTR ds:[esi]
  418046:	shl    DWORD PTR [ecx+0x63330fb6],cl
  41804c:	jecxz  0x4180b2
  41804e:	stos   DWORD PTR es:[edi],eax
  41804f:	mov    bl,0xef
  418051:	pop    edx
  418052:	(bad)  
  418053:	and    ebp,ebx
  418055:	stos   BYTE PTR es:[edi],al
  418056:	mov    esi,0x8eadbeac
  41805b:	push   esi
  41805c:	xchg   esp,eax
  41805d:	mov    dh,bh
  41805f:	(bad)  
  418060:	cmp    eax,0xfc185df1
  418065:	jecxz  0x41805e
  418067:	bound  eax,QWORD PTR [eax-0x14]
  41806a:	out    dx,eax
  41806b:	mov    dl,0x4c
  41806d:	cmp    eax,0x79fcba54
  418072:	clc    
  418073:	pop    edx
  418074:	or     eax,0x3c817d11
  418079:	dec    edx
  41807a:	imul   edx,DWORD PTR [eax-0x7b],0x9cb434cd
  418081:	jmp    0xa17974f0
  418086:	cmc    
  418087:	mov    bl,0x65
  418089:	fidiv  WORD PTR [edi+0x1]
  41808c:	or     DWORD PTR [ecx+0x67],ecx
  41808f:	push   ds
  418090:	push   cs
  418091:	aaa    
  418092:	adc    dh,0x32
  418095:	dec    eax
  418096:	das    
  418097:	popf   
  418098:	and    esi,DWORD PTR es:[eax+eax*2+0xc8f7ec6]
  4180a0:	jl     0x4180ad
  4180a2:	hlt    
  4180a3:	cmp    eax,0x6762a493
  4180a8:	cmp    eax,0xc6e202cc
  4180ad:	xchg   BYTE PTR [bx+di],dh
  4180b0:	cs aad 0xda
  4180b3:	mov    cl,0x4b
  4180b5:	or     BYTE PTR [ebp+0x6ef0791e],cl
  4180bb:	pop    ds
  4180bc:	and    ah,bl
  4180be:	dec    edx
  4180bf:	ins    DWORD PTR es:[edi],dx
  4180c0:	adc    al,0xa7
  4180c2:	jnp    0x418141
  4180c4:	dec    ebp
  4180c5:	leave  
  4180c6:	mov    ebx,DWORD PTR [ebx]
  4180c8:	sub    BYTE PTR [esi+0x77],dl
  4180cb:	push   es
  4180cc:	push   ebp
  4180cd:	fisttp DWORD PTR [edx]
  4180cf:	lods   eax,DWORD PTR ds:[esi]
  4180d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180d1:	fidiv  WORD PTR [edi-0x6b82b04]
  4180d7:	sbb    eax,0xae7669b9
  4180dc:	or     BYTE PTR [esi],dl
  4180de:	inc    esp
  4180df:	mov    eax,ds:0xcb9c1c23
  4180e4:	xchg   ecx,eax
  4180e5:	and    esi,DWORD PTR [ebx]
  4180e7:	test   DWORD PTR ds:0x8bc08d99,0xdb5bdfe1
  4180f1:	xor    BYTE PTR [eax],dh
  4180f3:	jmp    0x4180d6
  4180f5:	ror    BYTE PTR [ecx-0x2f],0x43
  4180f9:	sbb    bh,BYTE PTR [esi-0x4c]
  4180fc:	lods   al,BYTE PTR ds:[esi]
  4180fd:	shl    DWORD PTR [edi+edi*1-0x73],0xd5
  418102:	sbb    DWORD PTR [eax+0x18],esp
  418105:	clc    
  418106:	sbb    eax,0x58f472be
  41810b:	retf   
  41810c:	ins    DWORD PTR es:[edi],dx
  41810d:	rcl    DWORD PTR [ebp+0x5e8148a7],cl
  418113:	outs   dx,DWORD PTR ds:[esi]
  418114:	sbb    al,0xd9
  418116:	dec    ebx
  418117:	sbb    edi,DWORD PTR [eax]
  418119:	dec    ebp
  41811a:	and    al,0x22
  41811c:	fidiv  DWORD PTR [eax+ebx*1]
  41811f:	pop    edi
  418120:	and    BYTE PTR [eax+0x150eff0d],bh
  418126:	test   al,0xde
  418128:	test   BYTE PTR [ecx-0x3c],bl
  41812b:	push   es
  41812c:	xchg   ebx,eax
  41812d:	xchg   ebp,eax
  41812e:	in     eax,0x27
  418130:	hlt    
  418131:	xor    BYTE PTR [ebp+0x72012169],al
  418137:	jne    0x418136
  418139:	dec    edx
  41813a:	imul   ebx,DWORD PTR [ebx-0x77],0xd1c619f9
  418141:	out    dx,al
  418142:	fcomp  QWORD PTR [ebp-0x71]
  418145:	fld    st(7)
  418147:	repnz or edx,ecx
  41814a:	mov    ecx,DWORD PTR [edx+edi*4]
  41814d:	outs   dx,BYTE PTR ds:[esi]
  41814e:	enter  0x17a3,0x74
  418152:	xchg   edi,eax
  418153:	ja     0x418165
  418155:	cmp    al,dl
  418157:	sbb    BYTE PTR [ebx],al
  418159:	repnz fisttp DWORD PTR [edi+0x3f700114]
  418160:	call   0xb73f:0xe4dd246
  418167:	cdq    
  418168:	xchg   ebp,eax
  418169:	pop    ds
  41816a:	jbe    0x4181c5
  41816c:	mov    esi,0x6d3447a5
  418171:	adc    ecx,DWORD PTR [ebx+0x4df29bec]
  418177:	mov    eax,0xd1d3197
  41817c:	xor    eax,0x46c9c6b0
  418181:	retf   0xf5a6
  418184:	push   cs
  418185:	and    DWORD PTR [ecx],ebp
  418187:	cli    
  418188:	aaa    
  418189:	sub    al,BYTE PTR [ebx]
  41818b:	pop    ds
  41818c:	clc    
  41818d:	pop    ebp
  41818e:	inc    esi
  41818f:	es mov edx,0x88bc1a08
  418195:	push   cs
  418196:	loopne 0x418165
  418198:	add    edi,ebp
  41819a:	sahf   
  41819b:	inc    esi
  41819c:	fidivr WORD PTR [ebp+0x2a90174e]
  4181a2:	push   ecx
  4181a3:	fsub   st,st(5)
  4181a5:	out    0x31,eax
  4181a7:	cmp    al,0x2a
  4181a9:	mov    bl,0xb2
  4181ab:	mov    bh,0x6a
  4181ad:	mov    ah,0x97
  4181af:	dec    ebp
  4181b0:	xchg   esp,eax
  4181b1:	cmc    
  4181b2:	lods   eax,DWORD PTR ds:[esi]
  4181b3:	hlt    
  4181b4:	pop    ecx
  4181b5:	jmp    0x418188
  4181b7:	je     0x418158
  4181b9:	dec    ebx
  4181ba:	mov    WORD PTR [eax+0x646b53f6],?
  4181c0:	es cdq 
  4181c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181c3:	mov    cl,0xe5
  4181c5:	(bad)  
  4181c6:	sar    eax,0x5d
  4181c9:	jg     0x4181a6
  4181cb:	jmp    0xc24b5b1d
  4181d0:	neg    BYTE PTR [edi+ebp*1+0x55c44f2f]
  4181d7:	sbb    bh,BYTE PTR [ecx+esi*1-0x79d63b31]
  4181de:	push   0xd92bf79f
  4181e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181e4:	test   DWORD PTR [edx],ecx
  4181e6:	in     al,0x1e
  4181e8:	out    0x77,eax
  4181ea:	xchg   ebp,eax
  4181eb:	inc    edx
  4181ec:	jb     0x418194
  4181ee:	mov    ch,0x44
  4181f0:	mov    al,0xc6
  4181f2:	jns    0x41821a
  4181f4:	bound  esp,QWORD PTR [esi-0x1a6b5736]
  4181fa:	sbb    eax,0x776c1a6e
  4181ff:	out    dx,al
  418200:	push   es
  418201:	repz fidivr DWORD PTR ds:[esi+eiz*8]
  418206:	push   eax
  418207:	pop    edi
  418208:	inc    esi
  418209:	mov    cl,0xbe
  41820b:	xor    BYTE PTR [ebp+0x5c169336],dh
  418211:	mov    al,dl
  418213:	mov    ebx,0x82c4aef1
  418218:	jae    0x41826b
  41821a:	or     eax,0x4f01cc2f
  41821f:	push   ds
  418220:	nop
  418221:	dec    esp
  418222:	pop    es
  418223:	ret    
  418224:	jmp    0xcb23cdba
  418229:	inc    edi
  41822a:	push   ebp
  41822b:	frstor [esi+0x77857762]
  418231:	cld    
  418232:	mov    ds:0xcc373c6,al
  418237:	push   edx
  418238:	jg     0x418281
  41823a:	sahf   
  41823b:	sbb    edi,ebp
  41823d:	pop    ss
  41823e:	(bad)  
  41823f:	push   edi
  418240:	pop    eax
  418241:	jo     0x418234
  418243:	inc    ecx
  418244:	sbb    ebx,DWORD PTR [ecx+0x13099e49]
  41824a:	lock sub dh,dl
  41824d:	xor    bl,dl
  41824f:	sub    al,0xc3
  418251:	in     al,0x56
  418253:	sub    BYTE PTR [edx-0x2cc5264],0x1b
  41825a:	mov    bh,0x99
  41825c:	mov    al,ds:0x31057ead
  418261:	xchg   ebx,eax
  418262:	ja     0x41821c
  418264:	aam    0x62
  418266:	test   al,0x9a
  418268:	mov    ah,0x6d
  41826a:	add    BYTE PTR [eax-0x40],bl
  41826d:	jbe    0x4182c6
  41826f:	ss pop edx
  418271:	jbe    0x418220
  418273:	push   ebp
  418274:	xor    ah,al
  418276:	xor    bl,BYTE PTR [edx+0x6]
  418279:	ret    0x72c1
  41827c:	mov    edx,0x1496324c
  418281:	(bad)  
  418282:	sti    
  418283:	int3   
  418284:	outs   dx,BYTE PTR ds:[esi]
  418285:	shr    BYTE PTR [edx-0x468453be],cl
  41828b:	daa    
  41828c:	mov    al,0x93
  41828e:	lock cli 
  418290:	shl    eax,cl
  418292:	xor    eax,eax
  418294:	in     eax,0x19
  418296:	(bad)  
  418297:	rcr    BYTE PTR [ebx+0x46a18729],1
  41829d:	outs   dx,DWORD PTR ds:[esi]
  41829e:	daa    
  41829f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182a0:	mov    dh,0xf7
  4182a2:	clc    
  4182a3:	std    
  4182a4:	push   eax
  4182a5:	ja     0x418254
  4182a7:	mov    esi,0xc54fe286
  4182ac:	and    DWORD PTR [edx-0x67],edi
  4182af:	cwde   
  4182b0:	das    
  4182b1:	xor    esi,0x3f
  4182b4:	jmp    0x41825c
  4182b6:	in     al,0x89
  4182b8:	add    ebp,eax
  4182ba:	scas   al,BYTE PTR es:[edi]
  4182bb:	sbb    al,0xea
  4182bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182be:	and    eax,0x4da67b76
  4182c3:	jl     0x41833c
  4182c5:	repz mov WORD PTR [edx+0x3cb22e68],fs
  4182cc:	outs   dx,DWORD PTR ds:[esi]
  4182cd:	dec    ecx
  4182ce:	in     al,0x47
  4182d0:	pop    edx
  4182d1:	add    ebp,0x65f7a6e8
  4182d7:	jmp    0x4636:0xeb646357
  4182de:	xchg   ebx,eax
  4182df:	xchg   eax,edx
  4182e1:	int3   
  4182e2:	sub    al,0xd0
  4182e4:	adc    al,0x23
  4182e6:	js     0x41829b
  4182e8:	shl    DWORD PTR [esi],1
  4182ea:	(bad)  
  4182ec:	add    BYTE PTR [edx-0x343e2bb0],bl
  4182f2:	aam    0xf7
  4182f4:	jnp    0x418337
  4182f6:	mov    edi,0x5760206c
  4182fb:	fild   DWORD PTR [eax+0x34]
  4182fe:	push   ecx
  4182ff:	fistp  DWORD PTR [ecx]
  418301:	neg    DWORD PTR [edx+ecx*1-0x58]
  418305:	ret    0x4ff3
  418308:	push   ss
  418309:	adc    BYTE PTR [esi],bl
  41830b:	bound  ebx,QWORD PTR [ebx-0x26]
  41830e:	ss jb  0x4182bb
  418311:	inc    esi
  418312:	enter  0xa1e9,0xf8
  418316:	mov    al,0x83
  418318:	cld    
  418319:	sbb    BYTE PTR [ebx+0x2b4d207c],al
  41831f:	dec    esp
  418320:	icebp  
  418321:	mov    ds:0x51ba0926,al
  418326:	pop    es
  418327:	sbb    BYTE PTR [ecx-0x1e4db6f5],ah
  41832d:	or     dl,BYTE PTR [edx+0x52]
  418330:	test   al,0x59
  418332:	jo     0x418390
  418334:	xchg   edi,eax
  418335:	daa    
  418336:	and    esp,esi
  418338:	jmp    0xffbd:0xc1bd32ba
  41833f:	test   BYTE PTR [edx+0xe70d70e],ah
  418345:	xor    bl,bh
  418347:	(bad)  
  418348:	(bad)  
  418349:	outs   dx,BYTE PTR ds:[esi]
  41834a:	sahf   
  41834b:	cmp    esp,edi
  41834d:	fsub   DWORD PTR [eax]
  41834f:	mov    ch,0x4a
  418351:	sar    edx,0x90
  418354:	xchg   esi,eax
  418355:	sub    BYTE PTR [edi],ah
  418357:	(bad)  
  418358:	out    0x48,eax
  41835a:	push   eax
  41835b:	out    dx,eax
  41835c:	adc    eax,0xb1322d46
  418361:	call   0xcc9:0xdea45be8
  418368:	jmp    0xe86aa46c
  41836d:	adc    al,0xfa
  41836f:	fdivr  DWORD PTR [edx+0x7a]
  418372:	sub    DWORD PTR [eax],edi
  418374:	loopne 0x41835d
  418376:	ret    0x7bdd
  418379:	repz adc DWORD PTR [eax+0x48122b2c],eax
  418380:	xor    bl,BYTE PTR [ecx+0x61]
  418383:	add    ebp,ebx
  418385:	rcr    BYTE PTR [esp+eax*8+0x26253f2c],0x5b
  41838d:	dec    ecx
  41838e:	nop
  41838f:	(bad)  
  418390:	mov    cl,0xf0
  418392:	stos   BYTE PTR es:[edi],al
  418393:	jp     0x4183a5
  418395:	out    0x18,eax
  418397:	iret   
  418398:	out    dx,al
  418399:	fistp  QWORD PTR [esi]
  41839b:	sbb    DWORD PTR [ecx],0xa3427cca
  4183a1:	lods   al,BYTE PTR ds:[esi]
  4183a2:	shr    BYTE PTR [esi],1
  4183a4:	loop   0x4183c7
  4183a6:	outs   dx,DWORD PTR ds:[esi]
  4183a7:	retf   
  4183a8:	ins    DWORD PTR es:[edi],dx
  4183a9:	dec    esi
  4183aa:	enter  0x9783,0x34
  4183ae:	data16 icebp 
  4183b0:	push   ds
  4183b1:	adc    al,0xb0
  4183b3:	dec    eax
  4183b4:	pusha  
  4183b5:	frstor [edi-0x11]
  4183b8:	push   ebp
  4183b9:	xor    DWORD PTR [ecx+0x50],ebx
  4183bc:	add    BYTE PTR [esi],bh
  4183be:	shufps xmm1,XMMWORD PTR [esi-0x6b],0xfb
  4183c3:	(bad)  
  4183c4:	in     eax,0x64
  4183c6:	ret    0x8355
  4183c9:	pushf  
  4183ca:	ret    0x8f27
  4183cd:	or     al,0x30
  4183cf:	into   
  4183d0:	stc    
  4183d1:	rol    BYTE PTR [ecx-0x653546d9],0x35
  4183d8:	sar    DWORD PTR [ecx-0x24],1
  4183db:	retf   0x674a
  4183de:	fiadd  DWORD PTR [ebp+0x4275b557]
  4183e4:	pop    eax
  4183e5:	jmp    0x95283361
  4183ea:	pop    es
  4183eb:	inc    eax
  4183ec:	(bad)  
  4183ed:	push   ebp
  4183ee:	sbb    ebx,esp
  4183f0:	push   esp
  4183f1:	pop    ebx
  4183f2:	mov    dl,0x4
  4183f4:	and    DWORD PTR [ebp+0x40],ebp
  4183f7:	push   eax
  4183f8:	jecxz  0x418400
  4183fa:	mov    dh,BYTE PTR [ebp+ecx*2+0x2c]
  4183fe:	push   0xffffffdd
  418400:	adc    al,0xe5
  418402:	mov    dh,0x5b
  418404:	shr    DWORD PTR [edx+0x3783a7db],cl
  41840a:	mov    al,0xac
  41840c:	cmc    
  41840d:	loopne 0x4183e5
  41840f:	pushf  
  418410:	xchg   ecx,eax
  418411:	inc    ecx
  418412:	and    al,0xb5
  418414:	jae    0x418398
  418416:	(bad)  
  418417:	arpl   WORD PTR [edx+0x5605c853],si
  41841d:	sbb    edx,DWORD PTR [ecx+0x6e]
  418420:	rol    bl,1
  418422:	or     eax,0xeb3240eb
  418427:	push   ebp
  418428:	pop    esi
  418429:	or     bl,cl
  41842b:	rol    dh,0x73
  41842e:	jmp    0x4183e7
  418430:	or     eax,0xd08cb70f
  418435:	mov    ecx,0x940346e7
  41843a:	ja     0x418488
  41843c:	add    BYTE PTR [esi],ah
  41843e:	add    eax,0x20de3a38
  418443:	inc    edi
  418444:	cwde   
  418445:	cmp    al,0x48
  418447:	pushf  
  418448:	push   ds
  418449:	lock push edi
  41844b:	das    
  41844c:	mov    eax,cs:0x27018875
  418452:	gs jbe 0x418429
  418455:	jno    0x4184a1
  418457:	scas   al,BYTE PTR es:[edi]
  418458:	in     eax,dx
  418459:	mov    ecx,0xd2d92a8f
  41845e:	ficom  WORD PTR [esi+0x32]
  418461:	jns    0x41842f
  418463:	inc    eax
  418464:	scas   eax,DWORD PTR es:[edi]
  418465:	dec    esi
  418466:	mul    BYTE PTR [ebx-0x7f2473d3]
  41846c:	aad    0xa6
  41846e:	jle    0x41843d
  418470:	in     eax,dx
  418471:	out    dx,al
  418472:	call   0x7516:0xad5bcb75
  418479:	into   
  41847a:	rcl    ecx,cl
  41847c:	lods   eax,DWORD PTR ds:[esi]
  41847d:	cli    
  41847e:	mov    esp,0xf8d9db65
  418483:	leave  
  418484:	mov    ebx,0x1050a03
  418489:	mov    edx,0x88c36f56
  41848e:	jno    0x4184fc
  418490:	mov    ah,0x6b
  418492:	mov    ds:0x1dfe7e73,eax
  418497:	js     0x4184ed
  418499:	or     edi,ecx
  41849b:	push   cs
  41849c:	aam    0x73
  41849e:	mov    ebx,ebp
  4184a0:	pop    ss
  4184a1:	mov    edx,0x31d8977c
  4184a6:	xor    al,0x60
  4184a8:	imul   edi,edi,0x52
  4184ab:	rcl    DWORD PTR [edi+eiz*4+0x33],cl
  4184af:	cdq    
  4184b0:	push   ds
  4184b1:	xor    BYTE PTR [ebp-0x72],bl
  4184b4:	sub    edx,DWORD PTR [ebp-0x3e5595d4]
  4184ba:	idiv   BYTE PTR [edx-0x6808fe74]
  4184c0:	in     al,0xcb
  4184c2:	xor    BYTE PTR [edx],bh
  4184c4:	repnz cs push ebp
  4184c7:	gs mov esp,0xc9ed53ec
  4184cd:	stos   BYTE PTR es:[edi],al
  4184ce:	mov    ?,WORD PTR [ebx+eax*4-0x1f]
  4184d2:	jg     0x4184ba
  4184d4:	data16 (bad) 
  4184d6:	dec    ebx
  4184d7:	ficomp WORD PTR [esi]
  4184d9:	sahf   
  4184da:	cwde   
  4184db:	push   ebp
  4184dc:	(bad)  
  4184dd:	mov    cl,0x9e
  4184df:	dec    ecx
  4184e0:	mov    esp,0x704d91c9
  4184e5:	cmp    al,0xda
  4184e7:	dec    ebx
  4184e8:	outs   dx,DWORD PTR ds:[esi]
  4184e9:	xchg   ebx,eax
  4184ea:	mov    WORD PTR [ebx+0x78],ss
  4184ed:	pop    es
  4184ee:	and    ebx,DWORD PTR [edx+0x2948e704]
  4184f4:	shl    DWORD PTR [edi-0x6d],0x95
  4184f8:	xchg   ecx,eax
  4184f9:	mov    esp,0x33c89312
  4184fe:	inc    ecx
  4184ff:	mov    ebx,0xd0a096e7
  418504:	out    0xc4,eax
  418506:	fcom   DWORD PTR [ebp+0x56999003]
  41850c:	test   eax,0xe696e4e
  418511:	ror    DWORD PTR [ecx],0xb7
  418514:	out    dx,eax
  418515:	mov    bh,0x95
  418517:	dec    edi
  418518:	les    eax,FWORD PTR [ebx-0x3c8c5d0d]
  41851e:	icebp  
  41851f:	xchg   esi,eax
  418520:	aad    0x4a
  418522:	(bad)  
  418523:	jmp    0x8e9ca948
  418528:	out    0xb,al
  41852a:	mov    eax,ds:0xf12fd021
  41852f:	or     DWORD PTR [ebp+0x42],ecx
  418532:	jmp    0x4184d1
  418534:	add    al,0xe6
  418536:	pop    ebp
  418537:	fucom  st(1)
  418539:	dec    edi
  41853a:	or     DWORD PTR [eax-0x16ecb0e1],0x2c2be67c
  418544:	test   al,0x9a
  418546:	add    dl,BYTE PTR [ecx-0x4a]
  418549:	mov    ch,0xe5
  41854b:	xor    bl,BYTE PTR [esi+eiz*1+0x103cda14]
  418552:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418553:	xchg   edx,eax
  418554:	pop    edi
  418555:	pop    edi
  418556:	jnp    0x418521
  418558:	inc    edi
  418559:	dec    ecx
  41855a:	dec    edx
  41855b:	jmp    0x17e65208
  418560:	push   ecx
  418561:	sbb    dh,BYTE PTR [edi+0x7a]
  418564:	pop    ss
  418565:	inc    esi
  418566:	mov    dl,BYTE PTR [eax+0x3a900493]
  41856c:	lea    esi,[ecx+0x12]
  41856f:	and    dl,BYTE PTR [edx]
  418571:	inc    ebx
  418572:	les    edx,FWORD PTR [edi]
  418574:	xchg   ebx,eax
  418575:	hlt    
  418576:	mov    esp,DWORD PTR [ebx+eiz*8+0x5a]
  41857a:	mov    ebx,ebx
  41857c:	aaa    
  41857d:	mov    WORD PTR [ebx-0x11],cs
  418580:	sub    eax,ecx
  418582:	out    0x23,al
  418584:	stos   BYTE PTR es:[edi],al
  418585:	and    DWORD PTR [edi-0x76157e14],esp
  41858b:	adc    ch,BYTE PTR cs:[ecx-0x5be81b9d]
  418592:	push   ecx
  418593:	imul   esp,DWORD PTR [edi+ebx*2],0xe1674d54
  41859a:	xchg   DWORD PTR [esi+0x5d],ebp
  41859d:	movsx  esi,BYTE PTR [esi+0x91285d7]
  4185a4:	pop    es
  4185a5:	int    0xa2
  4185a7:	shl    BYTE PTR [ecx+0x59],cl
  4185aa:	mov    ebp,0xe987281b
  4185af:	xchg   DWORD PTR [esi],esi
  4185b1:	jbe    0x418613
  4185b3:	lds    edx,FWORD PTR [edi+0x3622f38d]
  4185b9:	mov    eax,0x6c5fe403
  4185be:	inc    esi
  4185bf:	inc    ebx
  4185c0:	into   
  4185c1:	mov    ds:0xc048e07a,eax
  4185c6:	jmp    0xeaf6890a
  4185cb:	jp     0x418568
  4185cd:	daa    
  4185ce:	cmp    al,BYTE PTR [edi]
  4185d0:	jp     0x4185a8
  4185d2:	loope  0x418632
  4185d4:	call   0x7ece:0xb416fff2
  4185db:	test   al,0x87
  4185dd:	jbe    0x418642
  4185df:	icebp  
  4185e0:	pop    edx
  4185e1:	lock mov eax,ds:0xd274dd4c
  4185e7:	fidiv  WORD PTR ds:0xd9b9425e
  4185ed:	dec    BYTE PTR [ecx+0x668a2ea3]
  4185f3:	fist   WORD PTR [edi-0x2a]
  4185f6:	sub    al,0xf1
  4185f8:	ss jmp 0x4979:0xaa3825b5
  418600:	push   0xffffffb0
  418602:	fidivr DWORD PTR [ebp+edi*8-0x3e]
  418606:	mov    al,BYTE PTR [edx]
  418608:	rol    dh,0x4f
  41860b:	add    dh,BYTE PTR [ecx+0x68af5564]
  418611:	in     eax,dx
  418612:	mov    dl,0xcb
  418614:	js     0x418645
  418616:	mov    ch,0xe2
  418618:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418619:	xchg   edx,eax
  41861a:	cs je  0x4185db
  41861d:	mov    bh,0x56
  41861f:	sbb    BYTE PTR [edi],bh
  418621:	in     eax,dx
  418622:	cli    
  418623:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418624:	add    DWORD PTR [esi-0x1e],esi
  418627:	add    cl,BYTE PTR [edx+0x6d]
  41862a:	xchg   ebx,eax
  41862b:	pop    ecx
  41862c:	(bad)  
  41862d:	dec    edx
  41862e:	pop    es
  41862f:	cli    
  418630:	jne    0x418680
  418632:	xor    DWORD PTR [eax+0x6c11a478],edi
  418638:	xchg   DWORD PTR [eax],eax
  41863a:	retf   0x9292
  41863d:	inc    eax
  41863e:	out    dx,al
  41863f:	test   al,0x1a
  418641:	mov    edx,0xd76573c2
  418646:	sub    esi,DWORD PTR [esi+eiz*8-0x80]
  41864a:	pop    edx
  41864b:	mov    eax,0x1b64591
  418650:	(bad)  
  418652:	mov    ds:0x351a92ba,al
  418657:	dec    ecx
  418658:	(bad)  
  418659:	int    0x7d
  41865b:	inc    edi
  41865c:	push   ecx
  41865d:	(bad)  
  41865e:	dec    esi
  41865f:	inc    eax
  418660:	mov    cs,edi
  418662:	sub    DWORD PTR [edx+0x5c],0xa294d1c7
  418669:	popf   
  41866a:	neg    BYTE PTR [esi-0x66ea05b9]
  418670:	push   eax
  418671:	push   ds
  418672:	shr    BYTE PTR [esp+ebp*8-0x31],0x61
  418677:	(bad)  
  418678:	cdq    
  418679:	and    DWORD PTR [edi+0x1be04e7f],eax
  41867f:	stos   DWORD PTR es:[edi],eax
  418680:	jb     0x4186c1
  418682:	push   edi
  418683:	jl     0x418679
  418685:	push   eax
  418686:	aam    0x28
  418688:	sar    DWORD PTR [esp+edi*8+0x42d705c0],1
  41868f:	fs push ebx
  418691:	pop    ecx
  418692:	outs   dx,BYTE PTR ds:[esi]
  418693:	or     ecx,DWORD PTR [ebx]
  418695:	cmp    al,0xb5
  418698:	in     al,dx
  418699:	dec    ebx
  41869a:	or     ecx,ebp
  41869c:	jg     0x41869f
  41869e:	xchg   edi,eax
  41869f:	sub    ecx,DWORD PTR [ebp-0x3a]
  4186a2:	adc    DWORD PTR [edx-0x65],esp
  4186a5:	cli    
  4186a6:	xchg   esp,eax
  4186a7:	sbb    eax,0xfc02b223
  4186ac:	retf   0xb952
  4186af:	cli    
  4186b0:	add    esp,esi
  4186b2:	nop
  4186b3:	mov    cl,0xef
  4186b5:	mov    WORD PTR [edi+0x62],es
  4186b8:	xor    BYTE PTR [esi+0x6b],dh
  4186bb:	fcomp  DWORD PTR [eax+0x57ff9f2c]
  4186c1:	push   0x9
  4186c3:	inc    edi
  4186c4:	cmp    eax,0xe199358a
  4186c9:	sub    ebp,DWORD PTR ds:0x820a8a5a
  4186cf:	data16 ficom WORD PTR [ecx-0x1e]
  4186d3:	lock leave 
  4186d5:	ins    DWORD PTR es:[edi],dx
  4186d6:	xchg   edi,eax
  4186d7:	add    DWORD PTR [ecx+0x33],ecx
  4186da:	lea    ebp,[ecx+0x123726d4]
  4186e0:	mov    al,ds:0x4204f35d
  4186e5:	jg     0x418747
  4186e7:	imul   ebp,DWORD PTR [esi],0xffffffcb
  4186ea:	fdiv   QWORD PTR ds:0x9a30edb1
  4186f0:	push   0x15
  4186f2:	dec    esp
  4186f3:	aas    
  4186f4:	push   esi
  4186f5:	jae    0x418748
  4186f7:	adc    esp,DWORD PTR [ebx-0xe]
  4186fa:	data16 jnp 0x418745
  4186fd:	sub    BYTE PTR [edx],bl
  4186ff:	or     eax,0xd2f7c57
  418704:	arpl   dx,sp
  418706:	cmp    BYTE PTR [eax+0x257783f9],bl
  41870c:	test   al,0x37
  41870e:	mov    ebp,0xfae20316
  418713:	or     al,0x92
  418715:	aad    0x9e
  418717:	sbb    BYTE PTR [ecx],0xa2
  41871a:	inc    DWORD PTR [edi]
  41871c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41871d:	shl    ebx,cl
  41871f:	in     al,0x30
  418721:	cmp    eax,0x152c6986
  418726:	cmp    dh,cl
  418728:	push   ds
  418729:	bound  esp,QWORD PTR ds:[eax]
  41872c:	dec    ecx
  41872d:	adc    eax,0xdb9a47da
  418732:	mov    bh,0x7e
  418734:	push   ss
  418735:	(bad)  
  418736:	mov    ?,WORD PTR [ebx]
  418738:	mov    ch,0x20
  41873a:	jnp    0x4187ab
  41873c:	(bad)  
  41873d:	out    dx,al
  41873e:	(bad)  
  41873f:	jb     0x418766
  418741:	mov    dh,0xee
  418743:	repz inc esp
  418745:	add    al,0x68
  418747:	int    0x79
  418749:	pop    ecx
  41874a:	adc    bl,BYTE PTR [edi+0x7655e739]
  418750:	adc    dh,BYTE PTR [esi+0x63]
  418753:	jae    0x4186e9
  418755:	push   ebp
  418756:	or     al,0x85
  418758:	mov    eax,ds:0xd10eae95
  41875d:	push   ebx
  41875e:	fimul  DWORD PTR [ebx-0x13]
  418761:	fs add al,0x70
  418764:	cmp    ebp,esi
  418766:	adc    cl,BYTE PTR [edi]
  418768:	pushf  
  418769:	in     eax,dx
  41876a:	leave  
  41876b:	js     0x4186fa
  41876d:	dec    ebp
  41876e:	imul   eax,DWORD PTR [edx+0x52],0x5b
  418772:	pop    edi
  418773:	(bad)  
  418774:	jbe    0x4187e5
  418776:	inc    ebx
  418777:	jb     0x41873e
  418779:	popa   
  41877a:	and    BYTE PTR ds:0x9d56786e,dl
  418780:	(bad)  
  418781:	mov    ebp,0x48a8f0ac
  418786:	aad    0x6e
  418788:	or     al,0x1f
  41878b:	jmp    0x4d53:0xdcbdf68d
  418792:	lods   al,BYTE PTR ds:[esi]
  418793:	std    
  418794:	and    bh,BYTE PTR [ecx+edi*2+0x70]
  418798:	sbb    eax,0x2a62d431
  41879d:	add    edi,ecx
  41879f:	fimul  DWORD PTR [ebx-0x65]
  4187a2:	fld    TBYTE PTR [edi+0x6a]
  4187a5:	mov    dh,dh
  4187a7:	mov    ebp,0xea3e4cb9
  4187ac:	push   edi
  4187ad:	jnp    0x4187a6
  4187af:	mov    bh,ah
  4187b1:	outs   dx,BYTE PTR ds:[esi]
  4187b2:	fimul  DWORD PTR [edi-0x3e]
  4187b5:	cld    
  4187b6:	xchg   ebx,esp
  4187b8:	mov    bh,0x43
  4187ba:	bound  edx,QWORD PTR [edx+0x4e]
  4187bd:	or     DWORD PTR [ebx-0x165559c2],edx
  4187c3:	(bad)
  4187c6:	xchg   BYTE PTR [ebp-0x2812aeb6],dl
  4187cc:	xlat   BYTE PTR ds:[ebx]
  4187cd:	cmp    ebx,DWORD PTR [edi-0x46]
  4187d0:	and    edx,DWORD PTR [esi]
  4187d2:	sbb    al,0x49
  4187d4:	jmp    0xed8158c6
  4187d9:	ja     0x41881e
  4187db:	mov    dh,0x95
  4187dd:	mul    BYTE PTR [ecx-0x15]
  4187e0:	mov    ebp,0xbe028a87
  4187e5:	int3   
  4187e6:	lahf   
  4187e7:	cld    
  4187e8:	dec    ecx
  4187e9:	ret    
  4187ea:	jg     0x41879e
  4187ec:	sub    ebp,DWORD PTR [edi+0x73]
  4187ef:	or     edx,DWORD PTR [edi-0x53]
  4187f2:	cs call 0x68abc52a
  4187f8:	fld    DWORD PTR [edi]
  4187fa:	add    al,0xd3
  4187fc:	jae    0x4187ce
  4187fe:	cmp    al,0x22
  418800:	mov    esi,0xb0b677a9
  418805:	jb     0x418789
  418807:	lea    ebp,[ecx+0x672e6aac]
  41880d:	int    0xb8
  41880f:	jecxz  0x4187f1
  418811:	iret   
  418812:	ja     0x418880
  418814:	jp     0x4187e7
  418816:	in     eax,dx
  418817:	sahf   
  418818:	add    bh,ah
  41881a:	lds    ecx,FWORD PTR [eax+esi*8+0x22ec980b]
  418821:	loop   0x4187f1
  418823:	int    0x6d
  418825:	iret   
  418826:	xchg   ebx,eax
  418827:	jle    0x41884e
  418829:	pop    edx
  41882a:	fs or  al,0xff
  41882d:	push   ss
  41882e:	cmp    eax,0xff3773a8
  418833:	cmp    eax,0x7667c852
  418838:	pop    edi
  418839:	int3   
  41883a:	imul   ecx,DWORD PTR [edx+0x6b],0xb5f5a789
  418841:	inc    edx
  418842:	adc    DWORD PTR [esi],edx
  418844:	scas   al,BYTE PTR es:[edi]
  418845:	mov    edi,0xb323200a
  41884a:	cmp    BYTE PTR [eax],al
  41884c:	sbb    ch,BYTE PTR ds:0xdc5def55
  418852:	aaa    
  418853:	iret   
  418854:	xor    eax,0xa36b4300
  418859:	sub    al,0x81
  41885b:	pop    ss
  41885c:	outs   dx,BYTE PTR ds:[esi]
  41885d:	aam    0x4f
  41885f:	mov    ah,0x35
  418861:	mov    dl,BYTE PTR [edx]
  418863:	xchg   esp,eax
  418864:	adc    eax,DWORD PTR [ebx-0x1d776f41]
  41886a:	mov    BYTE PTR [ebx-0x3d],al
  41886d:	(bad)
  418870:	fucompp 
  418872:	and    DWORD PTR [edi],0xffffffeb
  418875:	or     eax,0xbc5cddeb
  41887a:	cmp    ebp,DWORD PTR [ecx*8+0x14223257]
  418881:	(bad)  
  418882:	jb     0x4188fe
  418884:	lods   al,BYTE PTR ds:[esi]
  418885:	cmp    BYTE PTR [esi+esi*1-0xb77534],0x7c
  41888d:	dec    eax
  41888e:	mov    dh,0x4f
  418890:	das    
  418891:	or     eax,0x82b2405a
  418896:	sub    ah,BYTE PTR [eax]
  418898:	or     BYTE PTR [ecx],bl
  41889a:	sbb    DWORD PTR [esi+0x40fe7c79],esp
  4188a0:	fild   DWORD PTR [edx-0x7b]
  4188a3:	pushf  
  4188a4:	dec    esi
  4188a5:	adc    DWORD PTR [edx-0x7ad5afd3],esp
  4188ab:	cdq    
  4188ac:	not    BYTE PTR [ebx+0x3ea109]
  4188b2:	cmc    
  4188b3:	fsub   DWORD PTR [edi+0x16]
  4188b6:	loop   0x41892e
  4188b8:	clc    
  4188b9:	xor    edi,DWORD PTR [edi]
  4188bb:	jecxz  0x4188fb
  4188bd:	(bad)  
  4188be:	iret   
  4188bf:	loopne 0x418937
  4188c1:	push   cs
  4188c2:	push   ecx
  4188c3:	pop    es
  4188c4:	inc    ebx
  4188c5:	push   ebp
  4188c6:	imul   edx,ecx,0x4f597008
  4188cc:	mov    esp,0x634f3a0c
  4188d1:	sbb    eax,0x992f6de8
  4188d6:	xchg   ebp,eax
  4188d7:	and    ah,ch
  4188d9:	in     eax,dx
  4188da:	ins    DWORD PTR es:[edi],dx
  4188db:	dec    edi
  4188dc:	or     al,0xaa
  4188de:	xor    dl,BYTE PTR [esi-0x20]
  4188e1:	sub    eax,0xdb00a244
  4188e6:	test   DWORD PTR [esi+0x49],esi
  4188e9:	retw   
  4188eb:	pop    ds
  4188ec:	cs pop ebx
  4188ee:	xor    al,0xa9
  4188f0:	xor    dl,BYTE PTR ds:0xb2aae1d4
  4188f6:	dec    esp
  4188f7:	jecxz  0x4188c0
  4188f9:	out    dx,eax
  4188fa:	sub    ch,BYTE PTR [ebp-0x7a5541f7]
  418900:	add    eax,0xe7285f8b
  418905:	(bad)  
  418907:	in     eax,dx
  418908:	ja     0x41892a
  41890a:	outs   dx,BYTE PTR ds:[esi]
  41890b:	inc    edi
  41890c:	pop    ecx
  41890d:	mov    esi,esp
  41890f:	pop    edx
  418910:	bound  ebx,QWORD PTR [esp+ebx*1]
  418913:	rcl    BYTE PTR [edx+ecx*8],cl
  418916:	pop    ss
  418917:	jge    0x418950
  418919:	jge    0x418955
  41891b:	mov    dh,0xf0
  41891d:	mov    al,ds:0xc7187191
  418922:	or     DWORD PTR [ebp+0x15],ebp
  418925:	push   ecx
  418926:	xchg   ebx,eax
  418927:	jne    0x4188d4
  418929:	push   esp
  41892a:	xor    ah,BYTE PTR [ebx+0x5]
  41892d:	cld    
  41892e:	sbb    ch,BYTE PTR [ecx+0x428ddac4]
  418934:	cld    
  418935:	in     eax,0xa
  418937:	add    BYTE PTR [eax],bl
  418939:	bnd jp 0x418912
  41893c:	xor    DWORD PTR [edi+0x67],ebx
  41893f:	enter  0xf2cc,0x21
  418943:	sbb    DWORD PTR [ebx+0x1c],esp
  418946:	dec    eax
  418947:	hlt    
  418948:	fld    st(7)
  41894a:	xor    ebx,edi
  41894c:	mov    ch,BYTE PTR [esi]
  41894e:	test   bh,dh
  418950:	sbb    DWORD PTR [ebx-0x54c7f2ee],edx
  418956:	push   eax
  418957:	cld    
  418958:	rcr    BYTE PTR [edx-0x452cca65],cl
  41895e:	adc    DWORD PTR [edx-0x43e5c32d],esp
  418964:	add    al,0x99
  418966:	cs mov bh,0x14
  418969:	xchg   ebx,eax
  41896a:	push   cs
  41896b:	stos   BYTE PTR es:[edi],al
  41896c:	in     eax,dx
  41896d:	push   eax
  41896e:	add    DWORD PTR [esi+ebp*4-0x38],edi
  418972:	loopne 0x418988
  418974:	push   ss
  418975:	xor    BYTE PTR [ecx-0x55eb28ff],ch
  41897b:	sub    al,0xae
  41897d:	push   ss
  41897e:	mov    edx,0xf194e1bf
  418983:	inc    edi
  418984:	fld    QWORD PTR [eax]
  418986:	cmp    cl,BYTE PTR [ecx-0x19e3d943]
  41898c:	jecxz  0x41891f
  41898e:	pop    esi
  41898f:	or     al,0xed
  418991:	push   esi
  418992:	inc    ecx
  418993:	aad    0x8f
  418995:	adc    edi,DWORD PTR [edx-0x2ea8e7b9]
  41899b:	mov    ds:0x542a6c8b,al
  4189a0:	push   ebp
  4189a1:	fimul  WORD PTR [ecx-0x70]
  4189a4:	in     al,dx
  4189a5:	jmp    0x41898b
  4189a7:	out    dx,al
  4189a8:	ja     0x41896b
  4189aa:	scas   al,BYTE PTR es:[edi]
  4189ab:	(bad)  
  4189ac:	sar    DWORD PTR [ebx+0x26e60a9],1
  4189b2:	inc    BYTE PTR [esi+0x79c424fa]
  4189b8:	xor    BYTE PTR ds:0xb27ee50f,bh
  4189be:	aaa    
  4189bf:	adc    al,0x8c
  4189c1:	scas   eax,DWORD PTR es:[edi]
  4189c2:	(bad)  
  4189c3:	inc    ebx
  4189c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189c5:	add    ebp,DWORD PTR [esi+ebx*8-0x4baf0fae]
  4189cc:	jmp    0x418a24
  4189ce:	mov    ebp,0x10215330
  4189d3:	lods   eax,DWORD PTR ds:[esi]
  4189d4:	ffreep st(7)
  4189d6:	nop    DWORD PTR ds:[edi+0x1e]
  4189db:	mov    cl,0x40
  4189dd:	popf   
  4189de:	cmp    eax,0xa55d4929
  4189e3:	sub    dh,ch
  4189e5:	(bad)  
  4189e7:	and    eax,0x19625de1
  4189ec:	fiadd  WORD PTR [edi-0x18ed9494]
  4189f2:	mov    BYTE PTR [ebp+0x736a2173],ah
  4189f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189f9:	cmc    
  4189fa:	or     DWORD PTR [ecx+0x39],esp
  4189fd:	inc    ebp
  4189fe:	xor    eax,0x8c3a34c0
  418a03:	cmp    BYTE PTR [eax-0x5953716f],0xed
  418a0a:	pop    ecx
  418a0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a0c:	adc    eax,0x23f249bf
  418a11:	ins    DWORD PTR es:[edi],dx
  418a12:	stc    
  418a13:	dec    edx
  418a14:	add    BYTE PTR [eax+edi*4+0x5a],dl
  418a18:	or     BYTE PTR [edx-0x66],0x36
  418a1c:	pop    es
  418a1d:	mov    ds:0x9e9d72ea,eax
  418a22:	mov    ds,WORD PTR [ebx+0x335c653b]
  418a28:	sbb    cl,BYTE PTR ds:0x279f626e
  418a2e:	mov    ah,BYTE PTR [eax+ecx*2-0x7f]
  418a32:	mov    ds:0x989b5337,al
  418a37:	imul   edi,edx,0x24
  418a3a:	sbb    esi,ecx
  418a3c:	jp     0x418a23
  418a3e:	adc    dl,BYTE PTR [ecx+0x48]
  418a41:	and    DWORD PTR [esi+0x48a7319e],esp
  418a47:	push   ebx
  418a48:	call   0xcc4a:0x79dcc84
  418a4f:	test   edx,0x1bd87b5a
  418a55:	ffreep st(2)
  418a57:	icebp  
  418a58:	mov    ah,0x12
  418a5a:	push   edi
  418a5b:	inc    edx
  418a5c:	std    
  418a5d:	gs add al,0xc4
  418a60:	fidiv  WORD PTR [esi]
  418a62:	adc    DWORD PTR [edx],eax
  418a64:	or     esi,DWORD PTR [ecx]
  418a66:	bnd jl 0x418a3e
  418a69:	xchg   edi,eax
  418a6a:	inc    esi
  418a6b:	push   edx
  418a6c:	push   eax
  418a6d:	inc    ebp
  418a6e:	add    eax,0x7acd0de8
  418a73:	pop    ecx
  418a74:	mov    ebx,0x42813563
  418a79:	jb     0x418a0a
  418a7b:	xlat   BYTE PTR ds:[ebx]
  418a7c:	cmp    DWORD PTR [esi+eax*2-0x60],ebp
  418a80:	pop    esi
  418a81:	outs   dx,BYTE PTR ds:[esi]
  418a82:	pop    esi
  418a83:	add    ch,BYTE PTR [esi-0x11]
  418a86:	retf   
  418a87:	mov    edx,DWORD PTR [ecx+0x6c98802a]
  418a8d:	pop    ebp
  418a8e:	or     ah,cl
  418a90:	out    dx,eax
  418a91:	mov    dl,0x42
  418a93:	or     esp,DWORD PTR [edi]
  418a95:	mov    al,0x37
  418a97:	fwait
  418a98:	pop    ebx
  418a99:	or     eax,0x4c01a925
  418a9e:	dec    ebx
  418a9f:	jecxz  0x418a9e
  418aa1:	push   eax
  418aa2:	jno    0x418b1f
  418aa4:	shl    DWORD PTR [edi+ebp*1],cl
  418aa7:	mov    al,ds:0x8170597d
  418aac:	ret    
  418aad:	sbb    BYTE PTR [ebx],bh
  418aaf:	push   esi
  418ab0:	xchg   ebp,eax
  418ab1:	xor    DWORD PTR [eax+eax*4],esp
  418ab4:	sahf   
  418ab5:	or     al,0xf5
  418ab7:	xor    eax,0xa846f6ff
  418abc:	mov    esp,0x79ef78ea
  418ac1:	daa    
  418ac2:	push   0xffffff97
  418ac4:	add    BYTE PTR [edi],dl
  418ac6:	das    
  418ac7:	idiv   eax
  418ac9:	add    cl,BYTE PTR [edx]
  418acb:	daa    
  418acc:	mov    ecx,0x2c84e200
  418ad1:	xchg   esi,eax
  418ad2:	add    al,0x89
  418ad4:	call   0xc1c1:0x6c653171
  418adb:	mov    edi,0x209ea699
  418ae0:	cli    
  418ae1:	fild   QWORD PTR [ebx]
  418ae3:	mov    bl,0x48
  418ae5:	fistp  QWORD PTR [edi]
  418ae7:	jno    0x418b4f
  418ae9:	(bad)  
  418aea:	cmp    esp,esi
  418aec:	sub    al,0xbf
  418aee:	into   
  418aef:	sub    ebx,ebx
  418af1:	nop
  418af2:	out    0x68,al
  418af4:	xor    eax,0x95a59ff0
  418af9:	jl     0x71e3e82b
  418aff:	mov    bl,0x3e
  418b01:	ins    BYTE PTR es:[edi],dx
  418b02:	je     0x418b73
  418b04:	or     edx,edi
  418b06:	jne    0x418b08
  418b08:	jl     0x418b31
  418b0a:	ret    
  418b0b:	push   edx
  418b0c:	les    edi,FWORD PTR [ebp+0x5a]
  418b0f:	int    0x19
  418b11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b12:	call   0x321e0ca7
  418b17:	adc    DWORD PTR ds:0xff8a69c8,eax
  418b1d:	dec    ebp
  418b1e:	fmul   QWORD PTR [edx]
  418b20:	retf   
  418b21:	ds ds or eax,0x4c01567
  418b28:	mov    edx,0xf0b6bf3f
  418b2d:	push   eax
  418b2e:	int    0xec
  418b30:	(bad)  
  418b31:	pushf  
  418b32:	scas   eax,DWORD PTR es:[edi]
  418b33:	imul   edi,DWORD PTR [edx+ebx*8+0x7847ad13],0x36
  418b3b:	sar    BYTE PTR [edx-0x3],1
  418b3e:	mov    es:0x766ae4ac,eax
  418b44:	sahf   
  418b45:	lods   eax,DWORD PTR ds:[esi]
  418b46:	daa    
  418b47:	jb     0x418b79
  418b49:	sub    ecx,DWORD PTR [ebx]
  418b4b:	add    al,0x3f
  418b4d:	outs   dx,BYTE PTR ds:[esi]
  418b4e:	pop    ecx
  418b4f:	jl     0x418b54
  418b51:	adc    eax,0x91f1a98c
  418b56:	test   eax,0xd696cfcf
  418b5b:	test   al,dh
  418b5d:	enter  0x2bbe,0x91
  418b61:	sbb    ch,ah
  418b63:	outs   dx,BYTE PTR ds:[esi]
  418b64:	lods   eax,DWORD PTR ds:[esi]
  418b65:	xchg   esp,eax
  418b66:	xchg   BYTE PTR [edx+edi*4-0x4],ah
  418b6a:	mov    edx,0x4878ddc9
  418b6f:	pop    ebx
  418b70:	and    dh,bh
  418b72:	sub    eax,0x7f0920f
  418b77:	fxch   st(3)
  418b79:	adc    DWORD PTR [eax+0x70b3c9b1],ecx
  418b7f:	add    eax,0xc8ed8af0
  418b84:	iret   
  418b85:	xor    eax,0xad4fb85b
  418b8a:	mov    esi,0xbd3ca3f7
  418b8f:	and    eax,0xe73e2491
  418b94:	or     DWORD PTR [esi],0x4ab35534
  418b9a:	adc    BYTE PTR [edx],al
  418b9c:	and    al,0xe1
  418b9e:	(bad)  
  418b9f:	pushf  
  418ba0:	pop    esp
  418ba1:	fwait
  418ba2:	and    al,BYTE PTR [ecx+0x4a97729a]
  418ba8:	in     eax,dx
  418ba9:	mov    esp,0xb2f9492a
  418bae:	mov    ?,WORD PTR [esi-0x5929e24]
  418bb4:	or     BYTE PTR [edx],al
  418bb6:	sub    eax,0x90c6d2c
  418bbb:	adc    ebx,DWORD PTR [ebx+0x19]
  418bbe:	adc    al,0xef
  418bc0:	xchg   ebp,eax
  418bc1:	xchg   esp,eax
  418bc2:	adc    al,0xc2
  418bc4:	mov    esi,0x28ddc6db
  418bc9:	and    dh,bl
  418bcb:	jne    0x418bd3
  418bcd:	leave  
  418bce:	(bad)  
  418bcf:	lock sub bh,dl
  418bd2:	xchg   esp,eax
  418bd3:	cli    
  418bd4:	mov    esi,0x381be086
  418bd9:	ret    
  418bda:	fild   QWORD PTR [esi]
  418bdc:	adc    edx,DWORD PTR ds:0x43221590
  418be2:	leave  
  418be3:	(bad)  
  418be5:	mov    ecx,0xdabf5029
  418bea:	add    al,0xb0
  418bec:	adc    al,0xbf
  418bee:	mov    al,0xdc
  418bf0:	pushf  
  418bf1:	add    al,0xea
  418bf3:	cld    
  418bf4:	xchg   esp,eax
  418bf5:	lods   al,BYTE PTR ds:[esi]
  418bf6:	(bad)
  418bf9:	mov    dl,0x41
  418bfb:	pop    es
  418bfc:	sbb    edx,DWORD PTR [edi+0x59]
  418bff:	and    eax,0x4761e9b4
  418c04:	sbb    eax,0x69
  418c07:	and    eax,0x7ad463ad
  418c0c:	fs hlt 
  418c0e:	mov    bl,0xb4
  418c10:	adc    ebp,DWORD PTR [edx]
  418c12:	das    
  418c13:	js     0x418c1b
  418c15:	jno    0x418c64
  418c17:	fisub  WORD PTR ds:0x504d9ec2
  418c1d:	ret    0x5a11
  418c20:	and    esi,DWORD PTR [edi*8-0x7f47cb3f]
  418c27:	fcomp  DWORD PTR [ebx+ebx*4-0x95d4a61]
  418c2e:	inc    esi
  418c2f:	ds ret 
  418c31:	lahf   
  418c32:	retf   0x2c36
  418c35:	enter  0x92d4,0xcd
  418c39:	inc    esi
  418c3a:	mov    eax,0x269d9574
  418c3f:	xor    eax,0x54b87f3a
  418c44:	cdq    
  418c45:	or     BYTE PTR [esi+0x346e7863],dh
  418c4b:	sbb    edi,DWORD PTR [ebp+0x59]
  418c4e:	aam    0xa1
  418c50:	mov    edi,esp
  418c52:	pop    esi
  418c53:	and    al,0xc1
  418c55:	fadd   QWORD PTR [ecx]
  418c57:	add    BYTE PTR [ebp+edi*4-0x1c],ah
  418c5b:	mov    edx,0xef9e1244
  418c60:	sub    al,0x9e
  418c62:	pop    ss
  418c63:	mov    bh,0x9e
  418c65:	mov    cl,ch
  418c67:	cs loopne 0x418cbd
  418c6a:	dec    edx
  418c6b:	add    eax,0x226b568b
  418c70:	int3   
  418c71:	stos   DWORD PTR es:[edi],eax
  418c72:	mov    al,0x26
  418c74:	popf   
  418c75:	retf   0x2303
  418c78:	add    ebp,eax
  418c7a:	in     eax,dx
  418c7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c7c:	out    0xaa,eax
  418c7e:	cmp    DWORD PTR [ecx+0x14],eax
  418c81:	test   ah,0xb1
  418c84:	test   eax,0x4ecfd565
  418c89:	gs fwait
  418c8b:	(bad)  
  418c8c:	popf   
  418c8d:	fcmovne st,st(1)
  418c8f:	adc    edi,DWORD PTR [esi-0x43]
  418c92:	in     eax,0xe5
  418c94:	mov    cl,0xfa
  418c96:	scas   al,BYTE PTR es:[edi]
  418c97:	sbb    DWORD PTR [edi],ebp
  418c99:	inc    esi
  418c9a:	pushf  
  418c9b:	retf   
  418c9c:	push   esi
  418c9d:	test   eax,0x2016b6dc
  418ca2:	mov    eax,0xf4aca76e
  418ca7:	js     0x418cca
  418ca9:	xor    eax,DWORD PTR [ebx-0x52]
  418cac:	fisubr WORD PTR [ecx+0x3ec1bc1d]
  418cb2:	loopne 0x418cd8
  418cb4:	out    dx,al
  418cb5:	push   esp
  418cb6:	clc    
  418cb7:	cmp    BYTE PTR [ecx-0x133653de],al
  418cbd:	dec    edi
  418cbe:	mov    eax,ds:0xa70bc4e1
  418cc3:	sbb    eax,0x6652a652
  418cc8:	pop    ebx
  418cc9:	mov    eax,ds:0x8e8523d6
  418cce:	out    dx,al
  418ccf:	jnp    0x418cac
  418cd1:	push   eax
  418cd2:	xchg   ah,cl
  418cd4:	xchg   esi,eax
  418cd5:	mov    esi,0xc7ad0a78
  418cda:	xchg   edi,eax
  418cdb:	test   eax,0xcfb5ad84
  418ce0:	shl    DWORD PTR [ebp+0x3b],0xa2
  418ce4:	test   eax,0x2d9949f9
  418ce9:	mov    WORD PTR [ebp-0x26cd5f98],cs
  418cef:	(bad)  
  418cf0:	add    cl,BYTE PTR [esi]
  418cf2:	and    BYTE PTR [edi+0x7e14dcbe],bl
  418cf8:	lahf   
  418cf9:	add    DWORD PTR [edx+0x40],esp
  418cfc:	push   0x4eebe2c7
  418d01:	sti    
  418d02:	or     BYTE PTR [ebp+0x2801f74a],ah
  418d08:	push   0xe0084a6e
  418d0d:	gs push es
  418d0f:	in     eax,dx
  418d10:	xor    cl,BYTE PTR [edi-0xa3e9583]
  418d16:	mov    ebx,0xe2826b48
  418d1b:	mov    bl,0x6c
  418d1d:	jge    0x418cd2
  418d1f:	sub    esi,eax
  418d21:	fnstenv [esi-0x1ef678c8]
  418d27:	mul    DWORD PTR [eax+0x285b383d]
  418d2d:	mov    ds:0xac627ac8,al
  418d32:	iret   
  418d33:	inc    ebp
  418d34:	shl    BYTE PTR [edi-0x40],cl
  418d37:	addr16 cdq 
  418d39:	dec    cx
  418d3b:	xlat   BYTE PTR ds:[ebx]
  418d3c:	jmp    0xa98572b9
  418d41:	jge    0x418d11
  418d43:	stos   BYTE PTR es:[edi],al
  418d44:	dec    edx
  418d45:	dec    ebp
  418d46:	ja     0x418db0
  418d48:	mov    eax,ds:0x613a04a6
  418d4d:	data16 add al,0x76
  418d50:	push   0xffffffbb
  418d52:	mov    ecx,0xd9728a6d
  418d57:	mov    eax,0xd61ef74d
  418d5c:	fs pop eax
  418d5e:	in     al,0xcd
  418d60:	mov    cl,0x98
  418d63:	or     eax,0xa21dd352
  418d68:	xor    DWORD PTR [edx+ebp*4],0xffffffec
  418d6c:	test   DWORD PTR [edx-0x6a],esp
  418d6f:	pushf  
  418d70:	aaa    
  418d71:	push   es
  418d72:	jl     0x418d0a
  418d74:	pop    ds
  418d75:	sbb    dh,BYTE PTR [ebx+0x24]
  418d78:	ret    0xdf5e
  418d7b:	ins    DWORD PTR es:[edi],dx
  418d7c:	sbb    edi,DWORD PTR [esp+eiz*8]
  418d7f:	je     0x418d0b
  418d81:	out    0x16,eax
  418d83:	inc    ecx
  418d84:	sti    
  418d85:	inc    ecx
  418d86:	xor    dl,BYTE PTR [esi-0x56629ce7]
  418d8c:	jo     0x418d15
  418d8e:	mov    edi,0x9de57b5c
  418d93:	inc    ecx
  418d94:	xchg   BYTE PTR [ebx-0x2e244c8d],bh
  418d9a:	aas    
  418d9b:	outs   dx,DWORD PTR ds:[esi]
  418d9c:	dec    ebx
  418d9d:	stos   BYTE PTR es:[edi],al
  418d9e:	xchg   ebp,eax
  418d9f:	mov    edx,0x2b216483
  418da4:	in     al,dx
  418da5:	dec    eax
  418da6:	jle    0x418dce
  418da8:	mul    DWORD PTR [eax]
  418daa:	jmp    0x418d87
  418dac:	ja     0x418d8a
  418dae:	xchg   BYTE PTR [edx+0x4d],ah
  418db1:	xor    edi,DWORD PTR [edx-0x7ea89190]
  418db7:	cmp    ebp,0xb
  418dba:	cmc    
  418dbb:	div    BYTE PTR [ebx]
  418dbd:	sub    edi,DWORD PTR [eax+0x53]
  418dc0:	sbb    BYTE PTR [esi+0x6f],cl
  418dc3:	bnd ret 0x7690
  418dc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418dc8:	xor    BYTE PTR [ecx+0x33],cl
  418dcb:	dec    edi
  418dcc:	fisttp DWORD PTR [esi+0xd]
  418dcf:	mov    esi,0xa166e37b
  418dd4:	mov    ds:0xb96e9ed8,eax
  418dd9:	lahf   
  418dda:	addr16 add al,0x58
  418ddd:	cmp    BYTE PTR [edx-0x11],bh
  418de0:	clc    
  418de1:	push   ebx
  418de2:	jle    0x418e4d
  418de4:	pop    ds
  418de5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418de6:	push   edx
  418de7:	jg     0x418e3d
  418de9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418dea:	(bad)  
  418deb:	xor    ch,al
  418ded:	mov    esp,0xf4106050
  418df2:	into   
  418df3:	mov    cl,0x7b
  418df5:	adc    al,0x63
  418df7:	add    DWORD PTR [edi+0x4b],0xecb27407
  418dfe:	xchg   esp,eax
  418dff:	pavgw  mm7,QWORD PTR [edx+ecx*2-0x52]
  418e04:	call   0x969d:0xab743fbf
  418e0b:	out    dx,al
  418e0c:	mov    sp,0x7269
  418e10:	cmc    
  418e11:	aam    0x5d
  418e13:	in     eax,dx
  418e14:	or     al,dh
  418e16:	adc    eax,edx
  418e18:	cs mov ch,0x66
  418e1b:	or     al,0x86
  418e1d:	inc    al
  418e1f:	jmp    0x418e93
  418e21:	int    0x35
  418e23:	push   ds
  418e24:	jg     0x418dc1
  418e26:	fdiv   QWORD PTR [edi]
  418e28:	add    eax,0x7151aa14
  418e2d:	(bad)  
  418e2e:	adc    eax,0xad61200a
  418e33:	cwde   
  418e34:	push   ecx
  418e35:	mov    ch,0xbe
  418e37:	push   ecx
  418e38:	loopne 0x418e9f
  418e3a:	push   es
  418e3b:	dec    ebx
  418e3c:	sahf   
  418e3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e3e:	pop    edi
  418e3f:	iret   
  418e40:	(bad)  
  418e41:	out    0xac,eax
  418e43:	mov    bh,0x1d
  418e45:	cmp    al,BYTE PTR [edi-0x4a]
  418e48:	sti    
  418e49:	adc    al,0x50
  418e4b:	inc    ecx
  418e4c:	daa    
  418e4d:	sbb    al,0x9e
  418e4f:	nop
  418e50:	xchg   edi,eax
  418e51:	adc    dl,BYTE PTR [edi-0x4462f6c3]
  418e57:	jecxz  0x418e53
  418e59:	jg     0x418e40
  418e5b:	xor    DWORD PTR [esi-0x27],ebx
  418e5e:	(bad)  
  418e5f:	ds mov ecx,0x91b7ea84
  418e65:	test   DWORD PTR [edx-0x22833523],0x1f310c4a
  418e6f:	add    ebx,ebx
  418e71:	jge    0x418eaf
  418e73:	dec    ecx
  418e74:	(bad)  
  418e75:	sub    esp,ecx
  418e77:	mov    ?,WORD PTR [edx+ebp*2-0x15]
  418e7b:	fcmovnu st,st(7)
  418e7d:	jae    0x418e86
  418e7f:	jnp    0x418e3a
  418e81:	mov    ds:0x1deb9cbf,eax
  418e86:	mov    ah,0x9e
  418e88:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e8a:	bound  ebp,QWORD PTR [ebx-0x6f464bcf]
  418e90:	xor    bh,BYTE PTR [edi+0x2b]
  418e93:	shr    DWORD PTR ds:0xef4f1a98,cl
  418e99:	iret   
  418e9a:	or     BYTE PTR [ebp-0x7b],dh
  418e9d:	imul   edx,DWORD PTR [eax],0xf
  418ea0:	test   DWORD PTR [ebx+0x1bb5a1ce],0x7b65e0d9
  418eaa:	ins    DWORD PTR es:[edi],dx
  418eab:	sbb    eax,0x1e
  418eae:	call   0xeb29:0x54d67b61
  418eb5:	add    eax,0xd7a4a187
  418eba:	cmp    ebx,0x7
  418ebd:	loop   0x418f23
  418ebf:	ds sahf 
  418ec1:	out    0x86,al
  418ec3:	js     0x418f13
  418ec5:	sar    BYTE PTR [ebx],0x7
  418ec8:	iret   
  418ec9:	fwait
  418eca:	jp     0x418ea3
  418ecc:	xchg   ebx,eax
  418ece:	lea    edx,[ebx]
  418ed0:	jb     0x418e6d
  418ed2:	dec    eax
  418ed3:	stc    
  418ed4:	in     eax,dx
  418ed5:	xchg   ebp,eax
  418ed6:	jmp    0x7a7a:0xf79123c3
  418edd:	xchg   edi,eax
  418ede:	mov    bh,0x3
  418ee0:	(bad)  
  418ee1:	mov    ebp,0xef2ea1a
  418ee6:	(bad)  
  418ee7:	inc    edx
  418ee8:	imul   esp,DWORD PTR [edx-0xb],0xffffffe1
  418eec:	and    al,BYTE PTR [edi+0xde97171]
  418ef2:	xor    esi,DWORD PTR [esi-0x4190879]
  418ef8:	push   cs
  418ef9:	in     al,dx
  418efa:	inc    BYTE PTR [edi-0x61a570a0]
  418f00:	popa   
  418f01:	inc    edx
  418f02:	jge    0x418eee
  418f04:	cmp    DWORD PTR [edx],ebx
  418f06:	cld    
  418f07:	and    al,0xc0
  418f09:	mov    esi,0xa7ebda07
  418f0e:	mov    gs,WORD PTR [eax+edi*1+0x6f347bc7]
  418f15:	or     eax,0x24212d5a
  418f1a:	xor    DWORD PTR [ebx+0x3a],ebx
  418f1d:	cmp    ah,BYTE PTR [edx]
  418f1f:	out    dx,eax
  418f20:	lds    edi,FWORD PTR [ecx-0x616dd409]
  418f26:	in     eax,0x67
  418f28:	jae    0x418f96
  418f2a:	pop    es
  418f2b:	pop    ecx
  418f2c:	data16 jmp 0x418ed5
  418f2f:	push   ebx
  418f30:	push   ebp
  418f31:	retf   
  418f32:	outs   dx,DWORD PTR ds:[esi]
  418f33:	test   dh,al
  418f35:	push   ebp
  418f36:	arpl   WORD PTR [esi],di
  418f38:	jp     0x418f45
  418f3a:	pop    esp
  418f3b:	push   cs
  418f3c:	sub    BYTE PTR [edx+0x64],dh
  418f3f:	ss cli 
  418f41:	retf   0x97ed
  418f44:	imul   ecx,ebx,0x74f2eef0
  418f4a:	mov    eax,0xb0834cbd
  418f4f:	dec    edi
  418f50:	js     0x418f7c
  418f52:	rol    BYTE PTR [esi+0x782d94a5],0x7d
  418f59:	push   esi
  418f5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f5b:	clc    
  418f5c:	cmp    eax,0xa8aa8be2
  418f61:	push   ecx
  418f62:	xchg   edi,eax
  418f63:	and    DWORD PTR [esi],0x63
  418f66:	sbb    dh,BYTE PTR [edx-0x157ca797]
  418f6c:	call   0x6d61:0xb390065f
  418f73:	mov    bl,0xd8
  418f75:	out    dx,eax
  418f76:	mov    dl,0x4d
  418f78:	pop    edi
  418f79:	retf   
  418f7a:	jmp    0xb172:0x961f6f87
  418f81:	mov    ss,edx
  418f83:	mov    ebx,0x93efc63f
  418f88:	imul   ecx,DWORD PTR [ecx-0x17],0xc7b696e0
  418f8f:	xchg   BYTE PTR ds:0xe08e021d,dl
  418f95:	xchg   edx,eax
  418f96:	retf   
  418f97:	js     0x418f88
  418f99:	sbb    ebp,DWORD PTR [ebp+0x27]
  418f9c:	mov    ebp,0x8b38e69b
  418fa1:	cmp    dl,ah
  418fa3:	or     DWORD PTR ds:0x8b3b20b,ecx
  418fa9:	sti    
  418faa:	out    dx,al
  418fab:	add    eax,0x53ee774f
  418fb0:	ins    BYTE PTR es:[edi],dx
  418fb1:	fs mov al,0x9b
  418fb4:	xor    eax,0x55dce924
  418fb9:	push   0x3a
  418fbb:	(bad)  
  418fbc:	jnp    0x418f83
  418fbe:	mov    ebp,0x5d089bdf
  418fc3:	sti    
  418fc4:	jl     0x419029
  418fc6:	or     eax,0x33ff9f68
  418fcb:	pop    eax
  418fcc:	mov    DWORD PTR [ebp+edi*8-0x80],ebx
  418fd0:	push   ss
  418fd1:	cs or  eax,0xa7274b59
  418fd7:	aaa    
  418fd8:	dec    esi
  418fd9:	int    0x77
  418fdb:	je     0x418ff1
  418fdd:	enter  0xc2da,0x14
  418fe1:	lds    esp,FWORD PTR [edx+0x370399cf]
  418fe7:	scas   al,BYTE PTR es:[edi]
  418fe8:	and    dl,BYTE PTR [ecx]
  418fea:	cmp    eax,0x677bb790
  418fef:	arpl   WORD PTR [eax],sp
  418ff1:	pmulhuw mm3,QWORD PTR [ebp+0x5d6fbca1]
  418ff8:	dec    esi
  418ff9:	fucomp st(3)
  418ffb:	mov    BYTE PTR [edi-0x7e],ah
  418ffe:	xchg   ebx,eax
  418fff:	cli    
  419000:	nop
  419001:	or     ebx,DWORD PTR [ebp+edx*8-0x42]
  419005:	xchg   edi,eax
  419006:	jne    0x418fe7
  419008:	jmp    0x61c5:0x9a1943f0
  41900f:	leave  
  419010:	jle    0x418fda
  419012:	repnz push es
  419014:	iret   
  419015:	and    eax,0x734018e
  41901a:	loopne 0x419096
  41901c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41901d:	pop    eax
  41901e:	iret   
  41901f:	outs   dx,BYTE PTR ds:[esi]
  419020:	ret    0xd4eb
  419023:	fwait
  419024:	out    dx,eax
  419025:	xor    bh,BYTE PTR [edi]
  419027:	mov    al,0x18
  419029:	inc    edx
  41902a:	mov    ecx,0x32ecd26e
  41902f:	std    
  419030:	cli    
  419031:	inc    eax
  419032:	js     0x419025
  419034:	lods   eax,DWORD PTR ds:[esi]
  419035:	daa    
  419036:	push   0xd96af321
  41903b:	ficom  DWORD PTR ds:0xe47f9e85
  419041:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419042:	mov    WORD PTR [edi+0x5f],gs
  419045:	add    al,0xb9
  419047:	jbe    0x418fca
  419049:	data16 jb 0x4190b5
  41904c:	lock cmp ch,BYTE PTR [ecx+0x4e]
  419050:	outs   dx,BYTE PTR ds:[esi]
  419051:	nop
  419052:	pop    ebp
  419053:	add    al,0xd0
  419055:	dec    ecx
  419056:	fimul  DWORD PTR [ebp+0x55e5191f]
  41905c:	sbb    ah,BYTE PTR [ecx]
  41905e:	aad    0x6e
  419060:	mov    esp,0xf089408b
  419065:	dec    esi
  419066:	bound  eax,QWORD PTR [edi]
  419068:	add    edi,ebp
  41906a:	cmp    esp,DWORD PTR [edi+0x2]
  41906d:	xlat   BYTE PTR ds:[ebx]
  41906e:	in     eax,dx
  41906f:	sti    
  419070:	inc    ebx
  419071:	push   edi
  419072:	(bad)  
  419073:	jp     0x419005
  419075:	dec    ebp
  419076:	out    dx,eax
  419077:	xchg   DWORD PTR [eax+0x2],eax
  41907a:	jo     0x4190be
  41907c:	push   ecx
  41907d:	inc    esi
  41907e:	xor    al,0xd4
  419080:	mul    DWORD PTR [edi-0x5]
  419083:	pop    edi
  419084:	mov    ecx,DWORD PTR [edi+0x8c6ee5c]
  41908a:	or     esp,edx
  41908c:	fsub   QWORD PTR [eax]
  41908e:	push   ebx
  41908f:	jmp    0xb7c5:0x38f8847d
  419096:	push   eax
  419097:	jge    0x4190e5
  419099:	fisttp DWORD PTR [ecx]
  41909b:	test   ebx,esi
  41909d:	mov    ah,BYTE PTR [ecx]
  41909f:	dec    esp
  4190a0:	or     bh,bl
  4190a2:	scas   al,BYTE PTR es:[edi]
  4190a3:	repnz push ds
  4190a5:	inc    ebp
  4190a6:	inc    edi
  4190a7:	mov    al,cs:0xae70dea0
  4190ad:	mov    dh,0xf3
  4190af:	mov    dh,0x98
  4190b1:	adc    eax,0xf7ef00dd
  4190b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190b7:	(bad)  
  4190b9:	cli    
  4190ba:	inc    eax
  4190bb:	xchg   esi,eax
  4190bc:	hlt    
  4190bd:	mov    al,ds:0x79018672
  4190c2:	jnp    0x419112
  4190c4:	nop
  4190c5:	inc    esp
  4190c6:	inc    esi
  4190c7:	mov    dl,BYTE PTR [ebp+eiz*1+0x7d]
  4190cb:	cdq    
  4190cc:	push   ebx
  4190cd:	test   BYTE PTR [ebp-0x41],dl
  4190d0:	int3   
  4190d1:	dec    ebx
  4190d2:	ret    
  4190d3:	or     eax,0x34b2b584
  4190d8:	rcl    DWORD PTR [ebx+0x40f73219],0x5e
  4190df:	arpl   WORD PTR [ebp+0x13],si
  4190e2:	push   eax
  4190e3:	xor    al,0xe5
  4190e5:	cld    
  4190e6:	mov    ds:0xf3bf19e9,eax
  4190eb:	je     0x419092
  4190ed:	inc    eax
  4190ee:	pushf  
  4190ef:	cs cli 
  4190f1:	stos   BYTE PTR es:[edi],al
  4190f2:	lods   al,BYTE PTR ds:[esi]
  4190f3:	pusha  
  4190f4:	mov    BYTE PTR [eax],bh
  4190f6:	scas   al,BYTE PTR es:[edi]
  4190f7:	sbb    eax,0x89d83f1b
  4190fc:	mov    BYTE PTR [eax],dl
  4190fe:	repnz and BYTE PTR [edi+0x7947396d],ah
  419105:	ret    
  419106:	jo     0x419108
  419108:	sti    
  419109:	xchg   ecx,eax
  41910a:	push   es
  41910b:	dec    esp
  41910c:	push   edi
  41910d:	(bad)  [edi+esi*1]
  419110:	shl    DWORD PTR [ecx+edx*8+0x58],cl
  419114:	dec    esi
  419115:	xlat   BYTE PTR ds:[ebx]
  419116:	loopne 0x4190d2
  419118:	adc    eax,0x39b47d34
  41911d:	leave  
  41911e:	add    al,0x3c
  419120:	cmp    ebp,esp
  419122:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419123:	les    edi,FWORD PTR [ecx+0x42]
  419126:	mov    ecx,0x82326986
  41912b:	and    al,cl
  41912d:	sbb    dl,BYTE PTR [edi]
  41912f:	push   esi
  419130:	add    al,0x24
  419132:	rcr    DWORD PTR [esi-0x52],0xb8
  419136:	mov    ds:0xea616307,al
  41913b:	outs   dx,DWORD PTR ds:[esi]
  41913c:	push   ebp
  41913d:	push   ds
  41913e:	inc    ebx
  41913f:	(bad)  
  419141:	pop    esp
  419142:	mov    ds:0x1782d0e3,al
  419147:	popf   
  419148:	fwait
  419149:	pop    ebp
  41914a:	add    edi,eax
  41914c:	mov    ebx,es
  41914e:	push   edx
  41914f:	(bad)  
  419150:	scas   al,BYTE PTR es:[edi]
  419151:	(bad)  
  419152:	retf   0x2ca2
  419155:	lods   eax,DWORD PTR ds:[esi]
  419156:	inc    ebp
  419157:	and    al,0xf5
  419159:	call   0x51c9:0x8078f432
  419160:	ror    ebp,0xe3
  419163:	xlat   BYTE PTR ds:[ebx]
  419164:	adc    eax,0xec17a4b0
  419169:	adc    edi,DWORD PTR [ecx+0x3fe94c35]
  41916f:	pop    ebx
  419170:	fwait
  419171:	mov    dh,0x99
  419173:	inc    esp
  419174:	out    dx,al
  419175:	jno    0x4191a8
  419177:	call   0x91ee:0x6a37c88
  41917e:	mov    al,ds:0xfd25f80a
  419183:	mov    bh,0x15
  419185:	fwait
  419186:	jo     0x4191ba
  419188:	mov    ebp,0x33c6cadc
  41918d:	sbb    eax,0xd6cff5ab
  419192:	int3   
  419193:	mov    ebp,0xe8d4d52b
  419198:	pop    ebp
  419199:	or     al,0x42
  41919b:	(bad)  
  41919c:	and    eax,DWORD PTR [eax]
  41919e:	in     al,0x42
  4191a0:	push   0xffffffce
  4191a2:	out    0xff,al
  4191a4:	ds jb  0x4191be
  4191a7:	int    0x75
  4191a9:	dec    eax
  4191aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191ab:	int    0xc1
  4191ad:	mov    bl,0xf5
  4191af:	aad    0xf
  4191b1:	xor    DWORD PTR [esi-0x12],ecx
  4191b4:	scas   eax,DWORD PTR es:[edi]
  4191b5:	in     al,dx
  4191b6:	mov    edx,0xf582008e
  4191bb:	adc    BYTE PTR [edi],al
  4191bd:	ret    0x265
  4191c0:	(bad)  
  4191c1:	mov    al,0x58
  4191c3:	or     BYTE PTR [esi],cl
  4191c5:	iret   
  4191c6:	mov    esp,0x2adf155a
  4191cb:	ds push 0xffffffb0
  4191ce:	or     DWORD PTR [ebp-0x3a0e6006],edx
  4191d4:	int    0x1d
  4191d6:	jmp    0x7879:0x70f4bf11
  4191dd:	pop    ss
  4191de:	pop    esp
  4191df:	jo     0x41917d
  4191e1:	cwde   
  4191e2:	mov    ds:0xb378a430,eax
  4191e7:	aam    0x14
  4191e9:	dec    ecx
  4191ea:	mov    ah,0x32
  4191ec:	aaa    
  4191ed:	jne    0x41916f
  4191ef:	add    cl,ah
  4191f1:	mov    eax,0x95fe282
  4191f6:	mov    ebp,0x6dd14c27
  4191fb:	xlat   BYTE PTR ds:[ebx]
  4191fc:	xchg   esp,eax
  4191fd:	sub    edx,DWORD PTR [eax]
  4191ff:	sbb    dl,BYTE PTR [edi+edi*2]
  419202:	popf   
  419203:	out    dx,eax
  419204:	mov    ebp,0x79723c3a
  419209:	mov    bl,0xf3
  41920b:	jbe    0x4191e0
  41920d:	push   es
  41920e:	cld    
  41920f:	sub    al,0x8d
  419211:	sub    bh,ch
  419213:	pop    edi
  419214:	mov    ch,0x25
  419216:	cmc    
  419217:	retf   0x2ea1
  41921a:	sub    ebx,DWORD PTR [edx-0x39]
  41921d:	ret    
  41921e:	pop    edi
  41921f:	call   0x18c68eca
  419224:	into   
  419225:	jne    0x4191c2
  419227:	scas   al,BYTE PTR es:[edi]
  419228:	and    eax,DWORD PTR [ebx]
  41922a:	outs   dx,BYTE PTR ds:[esi]
  41922b:	outs   dx,BYTE PTR ds:[esi]
  41922c:	iret   
  41922d:	mov    al,ds:0x464341e8
  419232:	dec    edx
  419233:	cmc    
  419234:	ret    0xcd87
  419237:	xor    DWORD PTR [esi-0x7abea4b6],esi
  41923d:	jbe    0x41922a
  41923f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419240:	scas   eax,DWORD PTR es:[edi]
  419241:	mov    edx,0x1ddfcdd2
  419246:	retf   0x29d2
  419249:	mov    ah,0x65
  41924b:	push   eax
  41924c:	xchg   edi,eax
  41924d:	mov    edi,0xd5ac37d1
  419252:	adc    esi,DWORD PTR [edx-0x4d2b9856]
  419258:	test   BYTE PTR [ebx+eiz*4+0x73aff239],al
  41925f:	ret    
  419260:	jmp    0x419205
  419262:	sbb    eax,0x142b2f7e
  419267:	add    al,0xb3
  419269:	pusha  
  41926a:	xchg   edi,eax
  41926b:	mov    eax,ds:0xcaa51d94
  419270:	data16 jp 0x419297
  419273:	(bad)  
  419274:	les    ebx,FWORD PTR [eax+0x457dd980]
  41927a:	shl    edx,cl
  41927c:	call   0xdaa4:0xd5a1efae
  419283:	imul   ecx,DWORD PTR [ebx],0x70
  419286:	aam    0xb4
  419288:	fwait
  419289:	pop    edx
  41928a:	mov    bl,0x72
  41928c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41928d:	in     eax,0x3b
  41928f:	jnp    0x41929f
  419291:	cmp    eax,0x602ed6a9
  419296:	mov    esp,DWORD PTR [edx+ecx*4]
  419299:	fcomip st,st(6)
  41929b:	jecxz  0x4192dc
  41929d:	loope  0x419259
  41929f:	pop    ds
  4192a0:	pusha  
  4192a1:	or     bl,dl
  4192a3:	mov    edx,0x4aa4d82f
  4192a8:	rcr    ch,cl
  4192aa:	xchg   esp,eax
  4192ab:	add    eax,0xc32da80e
  4192b0:	mov    DWORD PTR [edx-0x1],ebx
  4192b3:	add    al,0x2e
  4192b5:	(bad)  
  4192b6:	dec    eax
  4192b7:	mov    edi,0xaa6b4545
  4192bc:	gs push ebx
  4192be:	retf   
  4192bf:	sub    al,0x6f
  4192c1:	sub    al,0x73
  4192c3:	sbb    DWORD PTR [edx-0x9],edi
  4192c6:	sub    al,0x23
  4192c8:	int    0xce
  4192ca:	cld    
  4192cb:	in     al,dx
  4192cc:	dec    ecx
  4192cd:	test   eax,0x7160b6cd
  4192d2:	mov    al,BYTE PTR [bp+si]
  4192d5:	in     eax,dx
  4192d6:	dec    eax
  4192d7:	repz pop es
  4192d9:	mov    bh,0x12
  4192db:	jmp    0x522b:0xc2e0bfc6
  4192e2:	fdiv   st,st(7)
  4192e4:	jecxz  0x419356
  4192e6:	sbb    dh,bl
  4192e8:	fs push ecx
  4192ea:	jmp    0x742615d
  4192ef:	mul    ch
  4192f1:	fnstcw WORD PTR [ebx]
  4192f3:	cld    
  4192f4:	jnp    0x4192f9
  4192f6:	push   ss
  4192f7:	fisubr WORD PTR ds:0xfe264aba
  4192fd:	cwde   
  4192fe:	mov    ch,0xfe
  419300:	mov    ebp,0xe8df3ce1
  419305:	es mov eax,0xdecbcd7c
  41930b:	mov    cl,0x1e
  41930d:	or     al,0xeb
  41930f:	or     eax,0x1c5e2ed1
  419314:	or     eax,0x58621f3f
  419319:	aaa    
  41931a:	jo     0x4192a4
  41931c:	xchg   edx,eax
  41931d:	or     eax,0x9e7f6984
  419322:	pop    ss
  419323:	imul   ebx,DWORD PTR [edx+0x2c],0xffffffb5
  419327:	sti    
  419328:	mov    edx,0x1abefb6c
  41932d:	add    BYTE PTR [eax],0xa8
  419330:	dec    esp
  419331:	mov    al,0x2e
  419333:	mov    eax,0x5595ea98
  419338:	dec    edx
  419339:	jne    0x4193a9
  41933b:	nop
  41933c:	loop   0x4192dd
  41933e:	jae    0x419360
  419340:	dec    edx
  419341:	fiadd  DWORD PTR [ecx+esi*2+0x4a6328e1]
  419348:	out    dx,eax
  419349:	sahf   
  41934a:	jnp    0x41937f
  41934c:	jo     0x419367
  41934e:	inc    ebx
  41934f:	int    0xf9
  419351:	sbb    ecx,DWORD PTR [ebp+0x51]
  419354:	sbb    al,0x85
  419356:	cmp    cl,dl
  419358:	stos   DWORD PTR es:[edi],eax
  419359:	cwde   
  41935a:	mov    ds:0xc015884,eax
  41935f:	cmp    dh,BYTE PTR [eax-0x3e638a57]
  419365:	dec    edx
  419366:	aad    0x54
  419368:	addr16 pop ecx
  41936a:	loop   0x4193cb
  41936c:	jne    0x4193d0
  41936e:	pop    ecx
  41936f:	enter  0x5ae0,0x57
  419373:	test   eax,0xbb836d9b
  419378:	jae    0x4193f2
  41937a:	cdq    
  41937b:	sbb    al,0x5d
  41937d:	inc    ebx
  41937f:	mov    WORD PTR [ebx+0x4875f819],ss
  419385:	js     0x4193c9
  419387:	repz out 0x36,al
  41938a:	aad    0x95
  41938c:	outs   dx,DWORD PTR ds:[esi]
  41938d:	cmp    al,0x8a
  41938f:	cmp    eax,0x9ae3115b
  419394:	and    dh,BYTE PTR [esi]
  419396:	cld    
  419397:	addr16 das 
  419399:	push   ss
  41939a:	mov    ebx,0xbe134b92
  41939f:	test   edi,eax
  4193a1:	enter  0x7460,0xfa
  4193a5:	add    eax,DWORD PTR [ebx+0x9]
  4193a8:	arpl   WORD PTR [ecx],sp
  4193aa:	aam    0x8b
  4193ac:	or     ah,BYTE PTR [eax]
  4193ae:	or     esi,DWORD PTR [esi]
  4193b0:	adc    dh,dl
  4193b2:	sbb    DWORD PTR [ebp+0x63a14c96],eax
  4193b8:	inc    ebp
  4193b9:	call   0xf14a:0xd85df7d3
  4193c0:	jne    0x419364
  4193c2:	jae    0x419416
  4193c4:	or     DWORD PTR [edi+edx*8-0x42],esi
  4193c8:	data16 xor al,0x13
  4193cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193cc:	aad    0xce
  4193ce:	addr16 in al,dx
  4193d0:	push   cs
  4193d1:	stos   DWORD PTR es:[edi],eax
  4193d2:	push   ss
  4193d3:	test   al,0x60
  4193d5:	push   ebp
  4193d6:	push   ebx
  4193d7:	test   eax,0xf8d83d40
  4193dc:	and    BYTE PTR [esi+0x5d],0x58
  4193e0:	out    0xbd,eax
  4193e2:	pop    ecx
  4193e3:	ss pop ebp
  4193e5:	mov    DWORD PTR [edi-0x65736258],esi
  4193eb:	xor    BYTE PTR [ebp+0x13d57979],0x9c
  4193f2:	jbe    0x419383
  4193f4:	clc    
  4193f5:	and    DWORD PTR [eax-0x7e],esi
  4193f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193f9:	sti    
  4193fa:	dec    edi
  4193fb:	out    dx,eax
  4193fc:	adc    bl,al
  4193fe:	loopne 0x419383
  419400:	cmp    al,0x8a
  419402:	inc    ebx
  419403:	cld    
  419404:	inc    ecx
  419405:	mov    WORD PTR [edx-0x74],ds
  419408:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419409:	pop    ds
  41940a:	xchg   esi,eax
  41940b:	lods   eax,DWORD PTR ds:[esi]
  41940c:	pop    ecx
  41940d:	cdq    
  41940e:	shr    BYTE PTR [ebp+0xc],cl
  419411:	push   ebp
  419412:	call   0xb39f:0x63e2e7b7
  419419:	and    bl,ah
  41941b:	arpl   WORD PTR [ebx],bp
  41941d:	cmc    
  41941e:	loope  0x419498
  419420:	fdiv   QWORD PTR [esi-0x7b5d8d02]
  419426:	add    eax,0x67b5a476
  41942c:	aaa    
  41942d:	add    DWORD PTR [ecx+eiz*1+0x4a],ebx
  419431:	icebp  
  419432:	sub    al,0xd
  419434:	pop    edi
  419435:	enter  0xda93,0x8e
  419439:	adc    eax,DWORD PTR ds:[esi+eax*1-0x26]
  41943e:	sub    al,0x6d
  419440:	dec    esi
  419441:	int3   
  419442:	dec    edi
  419443:	jno    0x41947f
  419445:	nop
  419446:	(bad)  
  419447:	call   0x24c0:0x319e311d
  41944e:	xor    BYTE PTR [esi+0x49],0x17
  419452:	add    al,0x74
  419454:	popa   
  419455:	mov    DWORD PTR fs:[ebx+0x3a7235af],ecx
  41945c:	call   0x1427:0xbc902eed
  419463:	fsubr  DWORD PTR [ebx+0x5]
  419466:	pop    eax
  419467:	pop    ebx
  419468:	and    bh,BYTE PTR ds:0x778de245
  41946e:	cmp    DWORD PTR [edx+0x62],esp
  419471:	fisubr DWORD PTR [edi]
  419473:	ins    DWORD PTR es:[edi],dx
  419474:	adc    cl,bl
  419476:	popa   
  419477:	movntq QWORD PTR [edx],mm3
  41947a:	xchg   ecx,eax
  41947b:	mov    cl,0xbb
  41947d:	xor    BYTE PTR [edx+0x671f29ae],bl
  419483:	leave  
  419484:	call   0xa539:0x1ce1278c
  41948b:	sub    eax,0x15b0860e
  419490:	adc    edi,DWORD PTR [edi]
  419492:	mov    ds:0x629bd5c0,eax
  419497:	in     eax,dx
  419498:	outs   dx,DWORD PTR ds:[esi]
  419499:	(bad)  
  41949a:	cli    
  41949b:	jb     0x4194b5
  41949d:	outs   dx,DWORD PTR ds:[esi]
  41949e:	ror    DWORD PTR [esi+edx*1-0x27],cl
  4194a2:	jg     0x4194e4
  4194a4:	into   
  4194a5:	lahf   
  4194a6:	std    
  4194a7:	mov    ds:0xb1ff993c,al
  4194ac:	(bad)  
  4194ad:	out    dx,al
  4194ae:	jae    0x4194be
  4194b0:	lods   eax,DWORD PTR ds:[esi]
  4194b1:	adc    BYTE PTR [edx],cl
  4194b3:	cmp    ecx,DWORD PTR [edi+eax*1]
  4194b6:	mov    ecx,0xffa7f8c3
  4194bb:	clc    
  4194bc:	shr    ecx,0x3d
  4194bf:	test   al,0x18
  4194c1:	dec    edi
  4194c2:	sti    
  4194c3:	hlt    
  4194c4:	sub    esi,DWORD PTR [edx]
  4194c6:	and    BYTE PTR [eax],dh
  4194c8:	jae    0x419460
  4194ca:	pop    esp
  4194cb:	lahf   
  4194cc:	inc    BYTE PTR [edx+0x4a]
  4194cf:	and    bl,ch
  4194d1:	or     eax,0x485c25e5
  4194d6:	(bad)  
  4194d7:	jle    0x41945a
  4194d9:	pusha  
  4194da:	jmp    0x419544
  4194dc:	imul   edx,edi,0x6efafc1f
  4194e2:	inc    ecx
  4194e3:	add    ebp,DWORD PTR [esi-0x47e79fe9]
  4194e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194ea:	cwde   
  4194eb:	mov    ah,0xb2
  4194ed:	mov    WORD PTR [ebp+0x46],?
  4194f0:	sti    
  4194f1:	loop   0x41955b
  4194f3:	ins    DWORD PTR es:[di],dx
  4194f5:	xchg   ebx,eax
  4194f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194f7:	adc    eax,DWORD PTR [esi]
  4194f9:	or     BYTE PTR [edx+0x4bf80556],0x3d
  419500:	jg     0x4194a7
  419502:	imul   ebp,DWORD PTR [edx],0xac2ca5d9
  419508:	loopne 0x4194bb
  41950a:	daa    
  41950b:	cmp    eax,0x8fa8877e
  419510:	(bad)  
  419512:	dec    ecx
  419513:	sub    BYTE PTR [ecx],dh
  419515:	jbe    0x4194ab
  419517:	sahf   
  419518:	push   cs
  419519:	(bad)  
  41951a:	cld    
  41951b:	jnp    0x419540
  41951d:	push   esp
  41951e:	push   ss
  41951f:	cmc    
  419520:	add    edi,edx
  419522:	(bad)  
  419523:	jl     0x41952d
  419525:	cld    
  419526:	dec    edx
  419527:	ins    BYTE PTR es:[edi],dx
  419528:	sbb    al,0xae
  41952a:	dec    esi
  41952b:	adc    DWORD PTR [esi],ecx
  41952d:	dec    eax
  41952e:	xchg   ecx,eax
  41952f:	xchg   edx,eax
  419530:	ins    BYTE PTR es:[edi],dx
  419531:	rcl    eax,0x5d
  419534:	xor    ecx,DWORD PTR [edi-0x68]
  419537:	or     dl,al
  419539:	adc    eax,0x38a46975
  41953e:	arpl   si,bx
  419540:	xlat   BYTE PTR ds:[ebx]
  419541:	(bad)  
  419542:	imul   edi,DWORD PTR [ebp+0x4fdd20d3],0x795ebf5c
  41954c:	ins    BYTE PTR es:[edi],dx
  41954d:	xor    BYTE PTR [eax-0x6629a8fb],bl
  419553:	das    
  419554:	retf   0x8132
  419557:	or     al,0xa6
  419559:	fistp  DWORD PTR [ebx-0x44218005]
  41955f:	fs leave 
  419561:	cmc    
  419562:	pop    ds
  419563:	jb     0x4195b2
  419565:	mov    esp,0x393fe4b3
  41956a:	inc    ebp
  41956b:	inc    ecx
  41956c:	push   ds
  41956d:	sub    BYTE PTR [ecx-0x46],bh
  419570:	popf   
  419571:	loope  0x419591
  419573:	mov    eax,0x84734740
  419578:	adc    DWORD PTR [edi-0x317c1770],edx
  41957e:	popf   
  41957f:	jbe    0x419573
  419581:	fld    DWORD PTR [esi+0x4f361e5a]
  419587:	int    0x1f
  419589:	mov    dh,0x6d
  41958b:	ins    BYTE PTR es:[edi],dx
  41958c:	scas   al,BYTE PTR es:[edi]
  41958d:	inc    edi
  41958e:	test   eax,0xb414e786
  419593:	repnz loopne 0x419563
  419596:	pushf  
  419597:	shl    BYTE PTR [esi],0x67
  41959a:	xchg   ecx,eax
  41959b:	mov    al,0x56
  41959d:	sub    al,0x2
  41959f:	pop    edx
  4195a0:	(bad)  
  4195a1:	sbb    esp,DWORD PTR ds:0x883967b7
  4195a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195a8:	pop    eax
  4195a9:	xlat   BYTE PTR ds:[ebx]
  4195aa:	cdq    
  4195ab:	push   esp
  4195ac:	mov    ds:0x45c42041,al
  4195b1:	push   0xffffffe6
  4195b3:	add    eax,0x6637476b
  4195b8:	sbb    DWORD PTR [ecx],esi
  4195ba:	pop    esp
  4195bb:	sub    esi,esp
  4195bd:	jg     0x4195a2
  4195bf:	out    dx,eax
  4195c0:	popf   
  4195c1:	jmp    0x41959e
  4195c3:	xor    eax,0x238f2492
  4195c8:	xchg   esi,eax
  4195c9:	jmp    esi
  4195cb:	ror    DWORD PTR [ebp+0x5b],0xd6
  4195cf:	cmp    ah,BYTE PTR cs:[edi-0x2c]
  4195d3:	dec    ecx
  4195d4:	ds mov ebp,0xc9c84b0d
  4195da:	adc    bh,BYTE PTR [edi]
  4195dc:	fwait
  4195dd:	inc    eax
  4195de:	jmp    0x41965e
  4195e0:	rol    BYTE PTR [ecx-0xa],cl
  4195e3:	xchg   edx,eax
  4195e4:	das    
  4195e5:	or     eax,0x60eb55cf
  4195ea:	(bad)  
  4195eb:	push   edi
  4195ec:	dec    eax
  4195ed:	push   ss
  4195ee:	sahf   
  4195ef:	mov    ds:0xe576bbd8,al
  4195f4:	inc    ebx
  4195f5:	add    dh,BYTE PTR [edi-0x77]
  4195f8:	(bad)  
  4195f9:	sub    BYTE PTR [ebx],ch
  4195fb:	popa   
  4195fc:	lahf   
  4195fd:	inc    ebx
  4195fe:	push   esp
  4195ff:	retf   
  419600:	xor    bl,bh
  419602:	adc    ebx,DWORD PTR [ecx-0x54a69ab8]
  419608:	je     0x41959b
  41960a:	inc    ecx
  41960b:	je     0x41967e
  41960d:	imul   edi,DWORD PTR [ebp+0xc],0xffffff8f
  419611:	xchg   edx,eax
  419612:	xor    DWORD PTR [eax],eax
  419614:	mov    ch,cl
  419616:	ins    DWORD PTR es:[edi],dx
  419617:	push   ebp
  419618:	mov    cl,0x61
  41961a:	jge    0x419633
  41961c:	retf   
  41961d:	sub    cl,dl
  41961f:	js     0x419626
  419621:	ret    0xb760
  419624:	test   eax,0xe25316f
  419629:	test   al,0x15
  41962b:	mov    ah,0x81
  41962d:	cmp    ah,dl
  41962f:	push   esp
  419630:	xor    BYTE PTR [ecx],ah
  419632:	pop    eax
  419633:	jp     0x419695
  419635:	lods   eax,DWORD PTR ds:[esi]
  419636:	(bad)  
  419637:	imul   eax,DWORD PTR [ecx+ebx*1-0x67],0x418dadac
  41963f:	and    BYTE PTR [esp+ecx*2],dh
  419642:	das    
  419643:	xor    al,0x2c
  419645:	cld    
  419646:	dec    DWORD PTR [edi]
  419648:	pop    ss
  419649:	add    ebp,DWORD PTR [ebp-0x1f09efea]
  41964f:	add    al,BYTE PTR [esi-0x26]
  419652:	cmc    
  419653:	xlat   BYTE PTR ds:[ebx]
  419654:	in     al,dx
  419655:	jae    0x419691
  419657:	mov    bl,0x8c
  419659:	test   DWORD PTR [edi],edx
  41965b:	dec    esi
  41965c:	xor    BYTE PTR [edx-0x6165a0dc],dh
  419662:	add    al,0xc5
  419664:	jo     0x41967d
  419666:	(bad)  
  419667:	jne    0x41964f
  419669:	jbe    0x4195f1
  41966b:	and    eax,0x600a8a03
  419670:	mov    ecx,0x90117c52
  419675:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419676:	in     al,dx
  419677:	ins    DWORD PTR es:[edi],dx
  419678:	dec    edx
  419679:	ins    BYTE PTR es:[edi],dx
  41967a:	adc    dl,BYTE PTR [edx-0x657d5272]
  419680:	jmp    0xa88e:0xc20f9a6b
  419687:	mov    dh,0x47
  419689:	cdq    
  41968a:	(bad)  
  41968b:	repz push cs
  41968d:	push   edi
  41968e:	inc    esp
  41968f:	pusha  
  419690:	aam    0x8d
  419692:	push   cs
  419693:	cmp    BYTE PTR [edx+0x497f3f2a],dl
  419699:	add    dh,BYTE PTR [ebx+0x154a650]
  41969f:	sbb    eax,0xd7fa8bc2
  4196a4:	push   0xa51e9840
  4196a9:	inc    ebp
  4196aa:	or     al,0x1b
  4196ac:	ficomp DWORD PTR [ebx+ebx*4+0x2e]
  4196b0:	inc    ebx
  4196b1:	ror    DWORD PTR ds:0x5760a4fd,1
  4196b7:	sbb    DWORD PTR [edx],ebp
  4196b9:	mov    esi,esi
  4196bb:	retf   
  4196bc:	inc    esp
  4196bd:	adc    esp,DWORD PTR [edi]
  4196bf:	int    0xb7
  4196c1:	and    eax,0x4f724617
  4196c6:	stos   BYTE PTR es:[edi],al
  4196c7:	enter  0x7624,0xac
  4196cb:	or     al,0xa2
  4196cd:	cmc    
  4196ce:	int    0xcd
  4196d0:	mov    BYTE PTR [edi+0x7d19404e],bh
  4196d6:	xchg   ebp,eax
  4196d7:	sub    ebp,DWORD PTR [edi+0x34cb1742]
  4196dd:	add    DWORD PTR [eax+0x6f4a3d42],esp
  4196e3:	mov    dh,al
  4196e5:	mov    esp,0x6abd5c0a
  4196ea:	push   esp
  4196eb:	fdiv   QWORD PTR [ebp+0x5fff0aeb]
  4196f1:	(bad)  
  4196f2:	cdq    
  4196f3:	mov    eax,0x64e4ea7a
  4196f8:	loop   0x419748
  4196fa:	xchg   ecx,eax
  4196fb:	jecxz  0x419759
  4196fd:	ret    
  4196fe:	outs   dx,BYTE PTR ds:[esi]
  4196ff:	add    eax,DWORD PTR [eax]
  419701:	aas    
  419702:	test   al,0x2a
  419704:	push   cs
  419705:	retf   0xaf35
  419708:	outs   dx,DWORD PTR ds:[esi]
  419709:	dec    esp
  41970a:	jmp    0x11360f8a
  41970f:	mov    bh,0xfb
  419711:	mov    al,ds:0x6b29912d
  419716:	mov    bh,0x69
  419718:	lahf   
  419719:	(bad)  
  41971a:	in     al,dx
  41971b:	hlt    
  41971c:	xchg   esp,eax
  41971d:	iret   
  41971e:	(bad)  [ecx+0x5bc1e527]
  419724:	(bad)  
  419725:	jp     0x41970c
  419727:	cld    
  419728:	or     ebx,DWORD PTR [edi]
  41972a:	daa    
  41972b:	sbb    al,0x9c
  41972d:	mov    al,ds:0xfb6383ac
  419732:	out    dx,al
  419733:	mov    esp,0x9d4cf5e3
  419738:	add    al,0x97
  41973a:	and    eax,0xabaea731
  41973f:	int    0xff
  419741:	sub    DWORD PTR [ebp-0xf],eax
  419744:	jl     0x419734
  419746:	idiv   ebx
  419748:	sbb    al,0x1b
  41974a:	push   es
  41974b:	stc    
  41974c:	imul   ebx,DWORD PTR [ebx],0xf4dea453
  419752:	fcomp  QWORD PTR [esi+0xe2d9774]
  419758:	test   DWORD PTR [eax],esi
  41975a:	sti    
  41975b:	mov    dl,0xe9
  41975d:	cmp    al,0x29
  41975f:	shl    DWORD PTR [ebx+ebp*2+0x55],1
  419763:	fcomp  QWORD PTR [ebx]
  419765:	jge    0x41978a
  419767:	mov    dl,0x6e
  419769:	pop    edx
  41976a:	inc    edi
  41976b:	(bad)  
  41976c:	test   eax,0x29a9ce7c
  419771:	imul   ebx,edx,0x70
  419774:	pop    eax
  419775:	arpl   WORD PTR [eax+0x2c],di
  419778:	adc    esp,DWORD PTR [esi+0x39d2276]
  41977e:	das    
  41977f:	aam    0x62
  419781:	mov    WORD PTR [ecx+0x4d140981],?
  419787:	rcr    ecx,0xa6
  41978a:	mov    edx,0x56be985e
  41978f:	stos   DWORD PTR es:[edi],eax
  419790:	ss in  al,0x5d
  419793:	sbb    esi,DWORD PTR [esi]
  419795:	cmp    al,0x7b
  419797:	mov    bl,0x38
  419799:	and    BYTE PTR [ebx+0x681c4e77],dh
  41979f:	inc    ecx
  4197a0:	or     DWORD PTR [edx+0x3144fad6],edi
  4197a6:	iret   
  4197a7:	cmp    al,0xa
  4197a9:	push   esp
  4197aa:	adc    DWORD PTR [esi+0x46],esi
  4197ad:	test   BYTE PTR [ecx+ecx*8+0x69febc7e],dl
  4197b4:	into   
  4197b5:	dec    ecx
  4197b6:	adc    ecx,DWORD PTR [eax-0x4a76f91e]
  4197bc:	sub    DWORD PTR [ebx],0xd328ae68
  4197c2:	dec    edi
  4197c3:	jmp    0x4197c9
  4197c5:	push   ss
  4197c6:	xor    eax,0x1ba5e5b3
  4197cb:	jmp    0x1e6f3802
  4197d0:	(bad)  
  4197d1:	test   al,0x54
  4197d3:	and    dh,BYTE PTR [edi-0x68]
  4197d6:	add    cl,BYTE PTR [eax+0x3c]
  4197d9:	je     0x41984a
  4197db:	lock mov ebp,0x4acb2a5b
  4197e1:	jno    0x41984d
  4197e3:	xor    DWORD PTR [ecx],0xa29468ea
  4197e9:	push   ebx
  4197ea:	mov    ebp,0xa62ef655
  4197ef:	out    0x2d,eax
  4197f1:	pop    edi
  4197f2:	add    BYTE PTR [ebx-0x332e735],0xaf
  4197f9:	sub    al,0x4b
  4197fb:	clc    
  4197fc:	das    
  4197fd:	sub    DWORD PTR [ecx+0x1a],esi
  419800:	retf   0xb71c
  419803:	push   ebp
  419804:	cmc    
  419805:	repnz lods al,BYTE PTR ds:[esi]
  419807:	push   ecx
  419808:	aam    0x65
  41980a:	xor    eax,0xfe8b6c65
  41980f:	les    esp,FWORD PTR [ebp+0x3beffba4]
  419815:	push   edx
  419816:	icebp  
  419817:	fnstsw WORD PTR [edi+0x41]
  41981a:	retf   
  41981b:	push   ebp
  41981c:	in     eax,dx
  41981d:	and    edx,DWORD PTR [edi-0x37a46fe6]
  419823:	popf   
  419824:	sahf   
  419825:	adc    BYTE PTR [edx+0x79c16909],0xfe
  41982c:	icebp  
  41982d:	dec    eax
  41982e:	std    
  41982f:	jo     0x4197d5
  419831:	cmp    ch,dh
  419833:	gs ja  0x41981d
  419836:	inc    eax
  419837:	inc    edx
  419838:	imul   ebx,esi,0x5e836163
  41983e:	pop    edi
  41983f:	js     0x419819
  419841:	pop    esp
  419842:	repz sbb esi,DWORD PTR [ebx+0x10]
  419846:	js     0x4197f5
  419848:	cld    
  419849:	mov    esp,DWORD PTR [ebx+edi*2]
  41984c:	jle    0x419828
  41984e:	clc    
  41984f:	adc    bh,BYTE PTR [ebx]
  419851:	mov    dl,0x84
  419853:	xor    al,0xe9
  419855:	setnp  BYTE PTR [ebx+0x4c]
  419859:	push   es
  41985a:	xor    ecx,0x3a
  41985d:	in     al,0x32
  41985f:	adc    DWORD PTR [edi],0x6c
  419862:	xor    esi,DWORD PTR [eax-0x9]
  419865:	lods   al,BYTE PTR ds:[esi]
  419866:	adc    cl,bl
  419868:	sbb    edx,esi
  41986a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41986b:	mov    ecx,0xfcab9f44
  419870:	(bad)  
  419871:	test   DWORD PTR [ebx+0x78],ecx
  419874:	sbb    DWORD PTR [ebx],edx
  419876:	stos   DWORD PTR es:[edi],eax
  419877:	imul   eax,DWORD PTR [ecx-0x7d],0xe34c2f34
  41987e:	push   0xf88f2549
  419883:	pusha  
  419884:	cmp    DWORD PTR [eax-0x66],ebp
  419887:	sub    al,BYTE PTR [esi-0x2b5b81f5]
  41988d:	push   ebp
  41988e:	jge    0x4198b8
  419890:	(bad)  [edi+0x598c0f57]
  419896:	xlat   BYTE PTR ds:[ebx]
  419897:	xchg   DWORD PTR [eax+0x54],esi
  41989a:	int3   
  41989b:	lock pop ds
  41989d:	sub    al,0xd4
  41989f:	or     bl,BYTE PTR [esi+0x16ffe66d]
  4198a5:	pop    esp
  4198a6:	in     eax,dx
  4198a7:	jle    0x4198b6
  4198a9:	in     eax,dx
  4198aa:	xor    eax,0xa58f49ba
  4198af:	cmc    
  4198b0:	fisttp WORD PTR [edx-0x26c7a7a5]
  4198b6:	and    ebp,DWORD PTR [eax]
  4198b8:	sbb    al,0x6b
  4198ba:	iret   
  4198bb:	add    al,0xc2
  4198bd:	mov    ds:0xcd30f663,eax
  4198c2:	sbb    al,0xe0
  4198c4:	inc    esi
  4198c5:	pop    edx
  4198c6:	sub    DWORD PTR [edi],ebx
  4198c8:	(bad)  
  4198c9:	ds push ds
  4198cb:	cwde   
  4198cc:	fidivr DWORD PTR [ebx+ebp*1-0x1]
  4198d0:	push   ecx
  4198d1:	loopne 0x419857
  4198d3:	jmp    0x4198a4
  4198d5:	xchg   ebp,eax
  4198d6:	je     0x4198f9
  4198d8:	jg     0x419953
  4198da:	popa   
  4198db:	enter  0x9cb5,0xcc
  4198df:	mov    ebx,0xdd0dd65f
  4198e4:	jae    0x4198c1
  4198e6:	(bad)  
  4198e7:	pop    ebp
  4198e8:	in     eax,dx
  4198e9:	sub    ebp,DWORD PTR [eax-0x7]
  4198ec:	jg     0x4198c5
  4198ee:	push   cs
  4198ef:	jle    0x4198c1
  4198f1:	and    al,0x12
  4198f3:	or     edi,DWORD PTR [ebp-0x64]
  4198f6:	lahf   
  4198f7:	inc    ebp
  4198f8:	loopne 0x419916
  4198fa:	mov    bl,0x91
  4198fc:	unpcklps xmm3,xmm7
  4198ff:	mov    eax,0x4849a340
  419904:	cmc    
  419905:	mov    DWORD PTR [ebx-0x6a],esi
  419908:	repz popf 
  41990a:	retf   0xc6e5
  41990d:	mov    fs,WORD PTR [esi-0x36ca4c9b]
  419913:	mov    ?,WORD PTR [ebp-0x7cf891e2]
  419919:	mov    ds:0x8c1eeda,eax
  41991e:	fs sahf 
  419920:	mov    ecx,0x19885234
  419925:	fsub   st(1),st
  419927:	ficom  DWORD PTR [edx]
  419929:	test   al,bl
  41992b:	in     al,0x82
  41992d:	push   ebx
  41992e:	ret    
  41992f:	mov    dh,0xe7
  419931:	nop
  419932:	(bad)  
  419933:	and    ah,ch
  419935:	fild   QWORD PTR [ecx+0x3bfa4e4a]
  41993b:	aaa    
  41993c:	icebp  
  41993d:	jne    0x41995c
  41993f:	mov    edi,0x94bdc439
  419944:	imul   edi,DWORD PTR [ebp+0x66a6370c],0xff1d94d8
  41994e:	pop    ebx
  41994f:	dec    ebp
  419950:	sub    DWORD PTR [eax],ebp
  419952:	mov    edi,0x3d5370f8
  419957:	xlat   BYTE PTR ds:[ebx]
  419958:	and    esp,ebp
  41995a:	sub    BYTE PTR [ebx],cl
  41995c:	lock repnz xor dh,BYTE PTR [ecx+0x6fab67]
  419964:	push   eax
  419965:	scas   eax,DWORD PTR es:[edi]
  419966:	(bad)
  419969:	dec    ecx
  41996a:	int    0x1
  41996c:	rcr    DWORD PTR [edi-0x3257c994],1
  419972:	retf   0x3cea
  419975:	icebp  
  419976:	sti    
  419977:	das    
  419978:	fdivr  st,st(3)
  41997a:	retf   
  41997b:	jmp    0xff5199db
  419980:	(bad)  [ecx+0x465e7afb]
  419986:	dec    esp
  419987:	xchg   esi,eax
  419988:	push   ebp
  419989:	inc    cl
  41998b:	popf   
  41998c:	or     DWORD PTR [ecx],ebp
  41998e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41998f:	xchg   esi,eax
  419990:	and    ebx,DWORD PTR [ecx-0x22]
  419993:	xlat   BYTE PTR ds:[ebx]
  419994:	mov    ecx,0x94d877f1
  419999:	add    ch,BYTE PTR [esi+0x5a8a55fd]
  41999f:	dec    ebx
  4199a0:	mov    bh,0x82
  4199a2:	es loope 0x4199c8
  4199a5:	not    dl
  4199a7:	(bad)  
  4199a8:	fcomp  DWORD PTR [eax+0x5a]
  4199ab:	lods   al,BYTE PTR ds:[esi]
  4199ac:	push   edi
  4199ad:	out    dx,eax
  4199ae:	sbb    dh,0x5d
  4199b1:	cmc    
  4199b2:	inc    eax
  4199b3:	lea    esp,[eax]
  4199b5:	idiv   BYTE PTR [edx]
  4199b7:	scas   al,BYTE PTR es:[edi]
  4199b8:	fs ins DWORD PTR es:[edi],dx
  4199ba:	mov    eax,ds:0x5a73309e
  4199bf:	sub    BYTE PTR [ebx],ch
  4199c1:	lea    ecx,[ebx+0x41]
  4199c4:	stc    
  4199c5:	xor    esi,DWORD PTR [esi]
  4199c7:	leave  
  4199c8:	call   0xdd96:0xf45c2fd5
  4199cf:	add    dh,BYTE PTR [ecx]
  4199d1:	test   BYTE PTR [esi+0x4],0xf5
  4199d5:	adc    BYTE PTR [eax+0x69287221],0x9b
  4199dc:	(bad)
  4199e0:	stos   DWORD PTR es:[edi],eax
  4199e1:	mov    edx,0x2ca95c96
  4199e6:	cmp    edx,DWORD PTR [edx+0x729d9391]
  4199ec:	and    eax,0xb491fd6b
  4199f1:	push   0xffffffbb
  4199f3:	sbb    BYTE PTR [eax-0x789ae659],0x59
  4199fa:	sbb    DWORD PTR [ecx+0x66],esi
  4199fd:	rol    DWORD PTR ds:[esi],1
  419a00:	test   DWORD PTR [edi+0xa5bae57],edi
  419a06:	jge    0x41998a
  419a08:	(bad)  
  419a09:	mov    ds:0xe7c0d427,eax
  419a0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a0f:	sub    ebx,esi
  419a11:	(bad)  
  419a12:	nop
  419a13:	and    esi,eax
  419a15:	mov    dh,0xef
  419a17:	rcl    DWORD PTR [ebp-0x2912dbb9],1
  419a1d:	(bad)  
  419a1e:	cmp    bh,BYTE PTR [eax+0x7d00d909]
  419a24:	sbb    edx,ecx
  419a26:	jo     0x419aa6
  419a28:	mov    bh,0x6c
  419a2a:	sbb    dh,BYTE PTR [edx]
  419a2c:	cli    
  419a2d:	adc    eax,0x32673b8
  419a32:	or     al,0x14
  419a34:	add    ecx,DWORD PTR [ebx]
  419a36:	cli    
  419a37:	pop    ss
  419a38:	jno    0x4199d2
  419a3a:	sub    edi,ebx
  419a3c:	mov    ds:0x2ff11a46,eax
  419a41:	or     edi,DWORD PTR [esi+0x59]
  419a44:	in     al,dx
  419a45:	pop    esi
  419a46:	jns    0x419a95
  419a48:	push   edi
  419a49:	cmp    DWORD PTR [ebp-0x3d],esp
  419a4c:	mov    bl,0xe4
  419a4e:	call   0xcf56:0x7d9c0228
  419a55:	sub    DWORD PTR [edx-0xb],edi
  419a58:	cmp    eax,0xf8140e8
  419a5d:	and    cl,BYTE PTR [ebx-0x13]
  419a60:	icebp  
  419a61:	adc    eax,0x91ff2601
  419a66:	test   DWORD PTR [ebx+0x7e3ccd69],esi
  419a6c:	(bad)  
  419a6d:	ins    DWORD PTR es:[edi],dx
  419a6e:	inc    eax
  419a6f:	add    al,0x6c
  419a71:	mov    edi,0x674988b6
  419a76:	pop    es
  419a77:	dec    ebx
  419a78:	and    eax,0x10873972
  419a7d:	adc    DWORD PTR [ecx-0x46],edx
  419a80:	inc    edi
  419a81:	dec    edx
  419a82:	mov    cl,0x89
  419a84:	js     0x419a48
  419a86:	jmp    DWORD PTR [edi+0x20d4348]
  419a8c:	jno    0x419ae1
  419a8e:	cmp    BYTE PTR [esi+ebx*4-0x2f],dl
  419a92:	mov    ds:0xd80a22f8,al
  419a97:	ror    BYTE PTR [ebx+0x495e58ad],1
  419a9d:	fwait
  419a9e:	repz retf 0xbd81
  419aa2:	mov    al,ds:0xc05cf5a
  419aa7:	add    al,dh
  419aa9:	neg    DWORD PTR [edi-0x44]
  419aac:	mov    edx,?
  419aae:	push   ebx
  419aaf:	and    edi,eax
  419ab1:	(bad)  
  419ab2:	(bad)  
  419ab3:	test   al,0x9a
  419ab5:	mov    ?,WORD PTR [edx+0x161eb114]
  419abb:	pop    ebp
  419abc:	fild   DWORD PTR [edi-0x38]
  419abf:	inc    ebx
  419ac0:	bound  ebx,QWORD PTR [ecx]
  419ac2:	js     0x419a52
  419ac4:	es rcl ch,cl
  419ac7:	lock sbb DWORD PTR [ecx],0x68
  419acb:	das    
  419acc:	shl    bh,cl
  419ace:	cmp    ebx,edi
  419ad0:	push   0x5f
  419ad2:	es je  0x419ab2
  419ad5:	aam    0xab
  419ad7:	add    eax,0x17f65bf9
  419adc:	rcl    BYTE PTR [ecx+eax*8-0x70b5deef],1
  419ae3:	dec    BYTE PTR [edx-0x66990e61]
  419ae9:	cmp    cl,cl
  419aeb:	jbe    0x419a75
  419aed:	mov    dh,0x59
  419aef:	push   0x54
  419af1:	sub    ch,ah
  419af3:	add    DWORD PTR [ebx],0x4acc7a5f
  419af9:	addr16 sbb eax,0xe66b972a
  419aff:	loope  0x419b0b
  419b01:	popa   
  419b02:	lea    edx,[esi-0x1b]
  419b05:	in     eax,dx
  419b06:	mov    ebx,0xdfdc88e9
  419b0b:	fadd   DWORD PTR [ebp-0x44]
  419b0e:	pop    edx
  419b0f:	mov    ?,WORD PTR [ebx-0x74c446a8]
  419b15:	fwait
  419b16:	outs   dx,DWORD PTR ds:[esi]
  419b17:	pushf  
  419b18:	loope  0x419b87
  419b1a:	adc    DWORD PTR [ebx+0x4a92f618],0xc40ac1e6
  419b24:	pop    ebx
  419b25:	ror    eax,cl
  419b27:	cmp    ebp,eax
  419b29:	or     eax,0xa3dfcf03
  419b2e:	pop    eax
  419b2f:	or     bh,BYTE PTR [edx]
  419b31:	retf   0xff1d
  419b34:	jle    0x419b34
  419b36:	(bad)  
  419b37:	retf   
  419b38:	sbb    ah,ch
  419b3a:	fmul   QWORD PTR [edx+0x1b]
  419b3d:	and    ecx,edx
  419b3f:	push   0xffffff82
  419b41:	gs gs push es
  419b44:	jmp    0x419b36
  419b46:	test   DWORD PTR [edx-0x80e3f8a],esi
  419b4c:	jne    0x419b29
  419b4e:	jl     0x419b42
  419b50:	arpl   WORD PTR [edi+0x13c2954f],di
  419b56:	sub    edi,DWORD PTR [edi+0x61dcab2e]
  419b5c:	popa   
  419b5d:	dec    ebx
  419b5e:	dec    esi
  419b5f:	push   ebp
  419b60:	ins    BYTE PTR es:[edi],dx
  419b61:	jae    0x419b3f
  419b63:	and    al,0xa4
  419b65:	add    eax,0xe8ace382
  419b6a:	shr    BYTE PTR [edi+0x1],0x2a
  419b6e:	cmp    BYTE PTR [edi],ah
  419b70:	sbb    ch,BYTE PTR [edx+0xc]
  419b73:	pop    ebx
  419b74:	dec    esi
  419b75:	ret    
  419b76:	mov    DWORD PTR [edi+0x29],edi
  419b79:	lea    eax,[ecx]
  419b7b:	shl    ah,1
  419b7d:	leave  
  419b7e:	mov    bh,0xe8
  419b80:	push   esp
  419b81:	(bad)  
  419b82:	or     al,0xdd
  419b84:	out    dx,al
  419b85:	test   DWORD PTR [eax+edi*4-0x42],edx
  419b89:	sub    ch,BYTE PTR [edi]
  419b8b:	or     BYTE PTR [edx+0xe],bh
  419b8e:	xor    ch,BYTE PTR [eax-0x1a79b2f6]
  419b94:	push   ecx
  419b95:	shl    BYTE PTR [edi+0x45],1
  419b98:	cmp    eax,0xdb31ccf5
  419b9d:	repz test eax,0x5e2085e4
  419ba3:	(bad)  
  419ba4:	adc    BYTE PTR [ebx+0x42ffdaba],0x1f
  419bab:	repnz cmc 
  419bad:	push   edi
  419bae:	pushf  
  419baf:	mov    ds:0xe143c80e,al
  419bb4:	xchg   ecx,eax
  419bb5:	int    0x1d
  419bb7:	xchg   esp,eax
  419bb8:	gs (bad) 
  419bba:	iret   
  419bbb:	jo     0x419b88
  419bbd:	xchg   ebx,eax
  419bbe:	fidivr WORD PTR [edx+esi*8-0x18]
  419bc2:	fimul  DWORD PTR [edi+0x9]
  419bc5:	outs   dx,BYTE PTR ds:[esi]
  419bc6:	hlt    
  419bc7:	pop    ecx
  419bc8:	test   al,0x9d
  419bca:	inc    ecx
  419bcb:	adc    al,0xa7
  419bcd:	repz mov dl,0xd
  419bd0:	sub    al,0x53
  419bd2:	mov    dl,0x48
  419bd4:	call   0xb34d007c
  419bd9:	cmp    al,0x3d
  419bdb:	icebp  
  419bdc:	es nop
  419bde:	dec    eax
  419bdf:	jmp    0x419c2c
  419be1:	add    cl,BYTE PTR [esi+eax*4+0x23]
  419be5:	dec    esi
  419be6:	shl    dl,1
  419be8:	je     0x419b6f
  419bea:	pop    ds
  419beb:	mov    al,0x5c
  419bed:	stos   DWORD PTR es:[edi],eax
  419bee:	enter  0xa2be,0xb
  419bf2:	je     0x419bff
  419bf4:	sub    eax,0x3d4aa98c
  419bf9:	stc    
  419bfa:	sbb    DWORD PTR [esp+edi*4],ecx
  419bfd:	jecxz  0x419c73
  419bff:	xchg   ecx,eax
  419c00:	stc    
  419c01:	and    eax,0xed8748f2
  419c06:	(bad)  [edx+0x6b]
  419c09:	inc    edx
  419c0a:	adc    bl,dl
  419c0c:	mov    cl,0x92
  419c0e:	js     0x419c36
  419c10:	inc    eax
  419c11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c12:	rep outs dx,BYTE PTR ds:[esi]
  419c14:	cs es cld 
  419c17:	pushf  
  419c18:	jno    0x419b9a
  419c1a:	fsubr  QWORD PTR [esp+ecx*1+0x43]
  419c1e:	xchg   DWORD PTR [ebp-0xc2e5057],esi
  419c24:	and    ch,BYTE PTR [ecx]
  419c26:	add    eax,0x6bddedb1
  419c2b:	and    al,0xf
  419c2d:	repz cmc 
  419c2f:	xor    al,0x65
  419c31:	call   0xdc22750
  419c36:	jae    0x419bca
  419c38:	jmp    0x1028:0x4407e60c
  419c3f:	mov    al,ds:0xb26b8cc5
  419c44:	cmc    
  419c45:	fisubr WORD PTR [eax+esi*2+0x44]
  419c49:	xchg   esi,eax
  419c4a:	gs mov cl,0xd4
  419c4d:	outs   dx,BYTE PTR ds:[esi]
  419c4e:	rcr    DWORD PTR [eax-0x1e],1
  419c51:	or     BYTE PTR [ebx+0xf9b393d],ah
  419c57:	aas    
  419c58:	mov    ds:0x62692fd9,eax
  419c5d:	fst    DWORD PTR [esi-0x16]
  419c60:	pushf  
  419c61:	dec    ebp
  419c62:	int3   
  419c63:	or     BYTE PTR [edx+esi*8-0x2c],dl
  419c67:	xchg   esp,eax
  419c68:	sbb    BYTE PTR [esi-0x78],cl
  419c6b:	mov    dh,0x16
  419c6d:	cmp    BYTE PTR [eax-0x5b1514ea],bh
  419c73:	dec    ebx
  419c74:	push   ss
  419c75:	test   ecx,edx
  419c77:	(bad)  
  419c79:	jbe    0x419c03
  419c7b:	adc    ebp,DWORD PTR [edi+0x72f7957b]
  419c81:	mov    cl,0xb9
  419c83:	fimul  DWORD PTR [edx+0x41d1f088]
  419c89:	push   edx
  419c8a:	dec    ebx
  419c8b:	inc    ebp
  419c8c:	mov    ch,0x40
  419c8e:	sub    eax,0xf75c9589
  419c93:	enter  0x3114,0x51
  419c97:	stc    
  419c98:	xchg   al,bh
  419c9a:	fbld   TBYTE PTR [ebp+0x6443deed]
  419ca0:	aaa    
  419ca1:	(bad)  
  419ca2:	lock popa 
  419ca4:	mov    cl,0xfe
  419ca6:	test   BYTE PTR [eax],0xe2
  419ca9:	cli    
  419caa:	sub    al,0x29
  419cac:	dec    eax
  419cad:	fist   WORD PTR [ecx+0x69d38346]
  419cb3:	mov    edx,DWORD PTR [eax+0x57d8d7cf]
  419cb9:	jmp    0x8e5:0xac81a7d5
  419cc0:	mov    dl,0x89
  419cc2:	inc    ecx
  419cc3:	iret   
  419cc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cc5:	outs   dx,BYTE PTR ds:[esi]
  419cc6:	mov    edx,0xb1c689
  419ccb:	(bad)  
  419ccc:	and    eax,0x4d82eb0d
  419cd1:	je     0x419c60
  419cd3:	test   ecx,ebx
  419cd5:	sub    DWORD PTR [ebx],edi
  419cd7:	jbe    0x419cec
  419cd9:	add    dh,BYTE PTR [edi-0x201c8526]
  419cdf:	and    dl,dh
  419ce1:	stos   DWORD PTR es:[edi],eax
  419ce2:	enter  0x84f0,0x82
  419ce6:	fmul   QWORD PTR [esi]
  419ce8:	lock pcmpeqd mm3,QWORD PTR [edi-0x69]
  419ced:	ffreep st(2)
  419cef:	sbb    ebx,DWORD PTR [esp+esi*4+0x6bd67f5d]
  419cf6:	dec    esp
  419cf7:	xchg   DWORD PTR [ebx],edx
  419cf9:	stos   DWORD PTR es:[edi],eax
  419cfa:	xchg   ecx,eax
  419cfb:	or     eax,eax
  419cfd:	jae    0x419cde
  419cff:	cmp    eax,DWORD PTR [edx]
  419d01:	inc    ecx
  419d02:	loopne 0x419cd9
  419d04:	pop    ss
  419d05:	arpl   WORD PTR [ebx],bp
  419d07:	lea    esp,[ecx-0x63f3b13c]
  419d0d:	xor    esp,ebx
  419d0f:	les    ebx,FWORD PTR [ebp-0x34]
  419d12:	pop    ss
  419d13:	hlt    
  419d14:	and    al,0x33
  419d16:	retf   0xc159
  419d19:	adc    cl,BYTE PTR [ebx]
  419d1b:	(bad)  
  419d1c:	jbe    0x419d9b
  419d1e:	mov    ah,0xde
  419d20:	sbb    BYTE PTR [esi],0x1c
  419d23:	neg    DWORD PTR [ebx-0x6865ec53]
  419d29:	or     edx,DWORD PTR [esi]
  419d2b:	data16 xlat BYTE PTR ds:[ebx]
  419d2d:	lods   al,BYTE PTR ds:[esi]
  419d2e:	mov    eax,ds:0xfd9e85a7
  419d33:	ficomp WORD PTR [ebx+0x42996dfc]
  419d39:	cdq    
  419d3a:	cmp    DWORD PTR [ebx],ebx
  419d3c:	jno    0x419d0f
  419d3e:	add    ebp,ebx
  419d40:	push   0xffffffc4
  419d42:	push   ebp
  419d43:	push   0x74
  419d45:	push   esp
  419d46:	ret    0xe8d0
  419d49:	outs   dx,BYTE PTR ds:[esi]
  419d4a:	xor    eax,0x9380d7c5
  419d4f:	fbld   TBYTE PTR [ebx+0x44c8de03]
  419d55:	pop    eax
  419d56:	fcom   QWORD PTR [edx]
  419d58:	push   ss
  419d59:	push   ebx
  419d5a:	vcmpsd xmm3,xmm1,QWORD PTR [ecx+ecx*8],0x31
  419d60:	sub    bh,bh
  419d62:	pusha  
  419d63:	iret   
  419d64:	dec    ebx
  419d65:	out    0x3,eax
  419d67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d68:	in     eax,dx
  419d69:	dec    eax
  419d6a:	out    0x59,eax
  419d6c:	ins    BYTE PTR es:[edi],dx
  419d6d:	cmp    DWORD PTR [edi-0x5c724b9c],edi
  419d73:	out    0x8,al
  419d75:	add    al,0xe7
  419d77:	int    0x95
  419d79:	inc    ebx
  419d7a:	enter  0x6db2,0x66
  419d7e:	xor    bh,al
  419d80:	nop
  419d81:	enter  0x876e,0xe4
  419d85:	ins    DWORD PTR es:[edi],dx
  419d86:	add    al,0x64
  419d88:	push   cs
  419d89:	jge    0x419d40
  419d8b:	pop    ss
  419d8c:	jecxz  0x419d6e
  419d8e:	loop   0x419d98
  419d90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d91:	mov    al,0xf8
  419d93:	and    eax,0xa3aed424
  419d98:	mov    cl,0x61
  419d9a:	rcr    BYTE PTR [edx+ecx*8-0x26],cl
  419d9e:	and    DWORD PTR [eax-0x65],ebx
  419da1:	mov    ebx,0x98132c5b
  419da6:	outs   dx,BYTE PTR ds:[esi]
  419da7:	pop    esp
  419da8:	mov    ch,0x8b
  419daa:	(bad)  
  419dab:	in     al,0x7c
  419dad:	mov    esp,DWORD PTR [edx]
  419daf:	mov    ebx,0xe6ef7437
  419db4:	inc    eax
  419db5:	lods   al,BYTE PTR ds:[esi]
  419db6:	jge    0x419e0f
  419db8:	sub    BYTE PTR [ebx+0x6c4d85fc],cl
  419dbe:	jg     0x419e27
  419dc0:	xor    cl,BYTE PTR [edx+0x39]
  419dc3:	push   ds
  419dc4:	mov    edx,0xcd67f73b
  419dc9:	add    al,0x69
  419dcb:	rcr    esp,cl
  419dcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419dce:	psllq  mm2,QWORD PTR [ebx]
  419dd1:	out    dx,al
  419dd2:	inc    ebp
  419dd3:	ins    BYTE PTR es:[edi],dx
  419dd4:	mov    bl,0xad
  419dd6:	dec    ebx
  419dd7:	push   0x8128159f
  419ddc:	add    ecx,edi
  419dde:	aaa    
  419ddf:	sub    eax,0xf6e3fa5e
  419de4:	mov    ds:0x5c136fb6,eax
  419de9:	ja     0x419e49
  419deb:	xchg   ebx,eax
  419dec:	mov    eax,ds:0x5d83a330
  419df1:	ja     0x419e62
  419df3:	ja     0x419db1
  419df5:	sbb    dh,al
  419df7:	ds jle 0x419dc1
  419dfa:	loope  0x419d9e
  419dfc:	imul   ecx,DWORD PTR [esi+0x5e],0xffffffeb
  419e00:	jmp    0x8268:0xa91cf8c6
  419e07:	mov    al,ch
  419e09:	adc    DWORD PTR [eax-0x20],eax
  419e0c:	out    dx,al
  419e0d:	retf   
  419e0e:	xor    DWORD PTR [eax+0xa],esi
  419e11:	les    edi,FWORD PTR [edi+0x18c7b798]
  419e17:	mov    al,ds:0xe7d87071
  419e1c:	ins    DWORD PTR es:[edi],dx
  419e1d:	fwait
  419e1e:	adc    al,0x9c
  419e20:	sbb    ebx,DWORD PTR [ecx+0x71]
  419e23:	sbb    eax,0x4edc953b
  419e28:	lods   eax,DWORD PTR ds:[esi]
  419e29:	inc    eax
  419e2a:	dec    ebx
  419e2b:	xchg   edi,eax
  419e2c:	mov    bh,0xac
  419e2e:	sahf   
  419e2f:	lods   eax,DWORD PTR ds:[esi]
  419e30:	dec    ecx
  419e31:	jbe    0x419e01
  419e33:	fisttp QWORD PTR [edi]
  419e35:	out    dx,eax
  419e36:	mov    edi,0xe9244172
  419e3b:	or     dl,BYTE PTR [ebx-0x48db9f73]
  419e41:	clc    
  419e42:	test   al,0x3e
  419e44:	mov    edi,0xb35239ab
  419e49:	leave  
  419e4a:	test   BYTE PTR [ecx-0x7ce1d8f3],cl
  419e50:	popf   
  419e51:	mov    bh,0x73
  419e53:	shl    DWORD PTR [esi+0x6ac836c0],cl
  419e59:	fwait
  419e5a:	into   
  419e5b:	loopne 0x419eda
  419e5d:	sbb    eax,0xda622829
  419e62:	ret    
  419e63:	int    0x5c
  419e65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e66:	jno    0x419e35
  419e68:	lahf   
  419e69:	lahf   
  419e6a:	pop    es
  419e6b:	mov    edx,0xbd6254ec
  419e70:	in     eax,dx
  419e71:	stc    
  419e72:	xchg   DWORD PTR [eax],ebp
  419e74:	mov    edx,0x22e52796
  419e79:	call   0x6a9:0x3726e034
  419e80:	ror    DWORD PTR [edi],0xcb
  419e83:	int3   
  419e84:	dec    eax
  419e85:	popf   
  419e86:	sbb    al,0x33
  419e88:	je     0x419ed3
  419e8a:	push   0x34e1afd7
  419e8f:	les    edi,FWORD PTR [ebp+0x616b5c73]
  419e95:	xchg   edi,eax
  419e96:	mov    ebx,esp
  419e98:	mov    eax,ds:0x183b3afa
  419e9d:	test   BYTE PTR [ebx+0x7a],bl
  419ea0:	stc    
  419ea1:	mov    ebx,0x63365b09
  419ea6:	push   eax
  419ea7:	dec    esi
  419ea8:	xor    eax,0x97075359
  419ead:	loop   0x419ef8
  419eaf:	std    
  419eb0:	push   esi
  419eb1:	addr16 (bad) 
  419eb3:	push   ds
  419eb4:	adc    BYTE PTR [edi-0x79b2550b],0x50
  419ebb:	shl    DWORD PTR [eax],cl
  419ebd:	xor    ecx,DWORD PTR es:[ebx]
  419ec0:	xor    al,BYTE PTR fs:[ebp-0x715de93a]
  419ec7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ec8:	pop    esi
  419ec9:	sahf   
  419eca:	or     ah,BYTE PTR [ecx-0x4c]
  419ecd:	pop    ds
  419ece:	push   eax
  419ecf:	cmp    DWORD PTR ds:0xe5bb05b1,esp
  419ed5:	jne    0x419e90
  419ed7:	push   0xd9e5379
  419edc:	or     BYTE PTR [edi-0x1ddc2b4e],ch
  419ee2:	sar    DWORD PTR [ebx-0x77],1
  419ee5:	mov    dh,cl
  419ee7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ee8:	add    eax,DWORD PTR [edx+0x2b]
  419eeb:	cmp    esp,DWORD PTR [edx+0x3a]
  419eee:	sahf   
  419eef:	icebp  
  419ef0:	mov    ch,0x88
  419ef2:	xchg   ecx,eax
  419ef3:	push   ds
  419ef4:	mov    al,0xc1
  419ef6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ef7:	push   ss
  419ef8:	jl     0x419f02
  419efa:	mov    esp,0x1784f305
  419eff:	bound  edi,QWORD PTR [edi+eax*1]
  419f02:	das    
  419f03:	mov    bl,0x84
  419f05:	mov    ecx,0x5fc88288
  419f0a:	cdq    
  419f0b:	imul   ecx,DWORD PTR [edx-0xa8086eb],0xe743fb2e
  419f15:	jl     0x419ef2
  419f17:	icebp  
  419f18:	inc    ebx
  419f19:	das    
  419f1a:	mov    ds,WORD PTR [eax+0x6f]
  419f1d:	cld    
  419f1e:	pushf  
  419f1f:	bnd ja 0x419f2c
  419f22:	jmp    0x419ec1
  419f24:	dec    edi
  419f25:	je     0x419f2b
  419f27:	jmp    0x8a01405
  419f2c:	out    dx,al
  419f2d:	dec    eax
  419f2e:	push   0x2844665
  419f33:	or     BYTE PTR [edi],0x3e
  419f36:	ror    BYTE PTR [eax],1
  419f38:	adc    al,0xc0
  419f3a:	test   eax,0x18a09cea
  419f3f:	and    cl,BYTE PTR [ecx]
  419f41:	jb     0x419ee9
  419f43:	xchg   edi,eax
  419f44:	in     eax,dx
  419f45:	scas   eax,DWORD PTR es:[edi]
  419f46:	adc    eax,0x964ea0ae
  419f4b:	push   edx
  419f4c:	push   ebx
  419f4d:	jl     0x419f92
  419f4f:	mov    esi,0x702383a0
  419f54:	push   cs
  419f55:	in     eax,0xce
  419f57:	add    edx,DWORD PTR [edi-0x4c90d67d]
  419f5d:	pop    edi
  419f5e:	dec    ebp
  419f5f:	cli    
  419f60:	xchg   ebx,eax
  419f61:	push   es
  419f62:	daa    
  419f63:	xchg   edx,eax
  419f64:	dec    edx
  419f65:	in     eax,0xf9
  419f67:	xor    al,0x42
  419f69:	imul   esi,DWORD PTR [ebx],0x50
  419f6c:	mov    bh,0x34
  419f6e:	cwde   
  419f6f:	sub    BYTE PTR [esi+0x795e052e],ch
  419f75:	fsubr  QWORD PTR [ebp-0x1b]
  419f78:	out    dx,eax
  419f79:	xchg   ebx,eax
  419f7a:	out    0xf8,eax
  419f7c:	stc    
  419f7d:	std    
  419f7e:	gs jge 0x419f50
  419f81:	dec    edx
  419f82:	mov    WORD PTR [edi+0x62],?
  419f85:	sbb    eax,0x539cc632
  419f8a:	es call 0x8fadcd43
  419f90:	daa    
  419f91:	ficom  WORD PTR [esi+edx*2]
  419f94:	jbe    0x419fd3
  419f96:	sbb    ebx,esi
  419f98:	mov    ds:0xfe4d70ef,eax
  419f9d:	jecxz  0x419fdd
  419f9f:	push   ebx
  419fa0:	push   ss
  419fa1:	and    esi,DWORD PTR [ebx+0x7e]
  419fa4:	cwde   
  419fa5:	push   0x42098812
  419faa:	pop    edi
  419fab:	clc    
  419fac:	mov    edx,0x53b1977f
  419fb1:	or     esi,ebp
  419fb3:	adc    dl,bl
  419fb5:	ficomp DWORD PTR [edi]
  419fb7:	out    dx,eax
  419fb8:	cmp    eax,0x2289db14
  419fbd:	jp     0x419fe0
  419fbf:	pop    ds
  419fc0:	addr16 ret 0x28c0
  419fc4:	and    eax,0x12a65218
  419fc9:	das    
  419fca:	add    ebp,DWORD PTR [ebx+edx*2+0x3a]
  419fce:	pop    esi
  419fcf:	mov    esp,0x709b2654
  419fd4:	popf   
  419fd5:	not    BYTE PTR [ecx]
  419fd7:	pop    ebx
  419fd8:	jne    0x41a049
  419fda:	jne    0x419fc0
  419fdc:	out    0xaf,al
  419fde:	into   
  419fdf:	pop    esp
  419fe0:	dec    ebx
  419fe1:	mov    ds:0x55bc6373,al
  419fe6:	mov    cl,0xbe
  419fe8:	add    BYTE PTR [ebp-0x3d],0xf6
  419fec:	jne    0x41a06b
  419fee:	ror    DWORD PTR [ebx-0x7bf8314],1
  419ff4:	inc    ebx
  419ff5:	stos   BYTE PTR es:[edi],al
  419ff6:	jl     0x41a027
  419ff8:	in     al,0xda
  419ffa:	mov    ah,0x48
  419ffc:	jae    0x41a012
  419ffe:	xor    eax,0x5b3862e3
  41a003:	fild   QWORD PTR [ecx]
  41a005:	ret    0x1899
  41a008:	mov    BYTE PTR [edx],ch
  41a00a:	mov    bh,0x66
  41a00c:	mov    bl,0xcd
  41a00e:	shl    al,0x20
  41a011:	add    BYTE PTR [edi],al
  41a013:	ja     0x41a030
  41a015:	jo     0x419fa4
  41a017:	imul   esi,DWORD PTR [ebx-0x1f],0x60a20c05
  41a01e:	add    al,0x6e
  41a020:	(bad)  
  41a021:	lock jl 0x41a011
  41a024:	sbb    BYTE PTR [edx+0x1c63f1ee],0xa4
  41a02b:	jmp    0xf3a8a71d
  41a030:	ds xor eax,0xbb5a0efd
  41a036:	retf   0xfb07
  41a039:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a03a:	js     0x41a02b
  41a03c:	(bad)  
  41a03d:	rcl    DWORD PTR ds:0x28fdd3c1,cl
  41a043:	aaa    
  41a044:	mov    dh,0x95
  41a046:	retf   0x7c29
  41a049:	mov    bl,bl
  41a04b:	mov    DWORD PTR [ebp+0x4c],esi
  41a04e:	cmc    
  41a04f:	das    
  41a050:	bnd jno 0x419ff0
  41a053:	mov    dl,0xf1
  41a055:	(bad)  
  41a059:	cwde   
  41a05a:	mov    esp,DWORD PTR [ecx]
  41a05c:	push   edi
  41a05d:	mov    al,0xf8
  41a05f:	mov    ebx,0x771927b5
  41a064:	xor    BYTE PTR [ebp-0x5c],ah
  41a067:	sub    DWORD PTR [esi],ebp
  41a069:	add    eax,0x1f26b49f
  41a06e:	adc    edx,DWORD PTR [edx]
  41a070:	add    DWORD PTR [edi+0x5a],0x82e9a643
  41a077:	mov    ds:0x1abd2e31,al
  41a07c:	jnp    0x41a065
  41a07e:	inc    ecx
  41a07f:	mov    ds:0x6dccf168,al
  41a084:	push   edx
  41a085:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a086:	cmp    dl,BYTE PTR [edx+0x41]
  41a089:	dec    edx
  41a08a:	dec    eax
  41a08b:	shl    BYTE PTR [edi+ebx*1],1
  41a08e:	jns    0x41a038
  41a090:	adc    DWORD PTR [eax-0x3e],ebx
  41a093:	lds    esp,FWORD PTR [edx]
  41a095:	push   edx
  41a096:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a097:	out    dx,eax
  41a098:	dec    eax
  41a099:	iret   
  41a09a:	in     eax,dx
  41a09b:	mov    ebx,0x5b34dce1
  41a0a0:	inc    edx
  41a0a1:	mov    ah,0xfe
  41a0a3:	pop    es
  41a0a4:	cli    
  41a0a5:	loopne 0x41a080
  41a0a7:	xchg   BYTE PTR [eax+eiz*2+0x1a],bl
  41a0ab:	mov    ebp,0xd91db296
  41a0b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0b1:	mov    gs,WORD PTR [ebp+edx*2-0xd]
  41a0b5:	push   eax
  41a0b6:	jnp    0x41a135
  41a0b8:	xor    al,bh
  41a0ba:	mov    bh,0x44
  41a0bc:	ds push bp
  41a0bf:	sbb    DWORD PTR [ebx],esi
  41a0c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0c2:	or     esi,DWORD PTR [ebx-0x246e852b]
  41a0c8:	loop   0x41a139
  41a0ca:	mov    al,ds:0xae31e152
  41a0cf:	pop    edi
  41a0d0:	jo     0x41a0f3
  41a0d2:	lock mov al,ds:0x4b138773
  41a0d8:	test   al,0xfa
  41a0da:	enter  0xb8ea,0x15
  41a0de:	ror    DWORD PTR [edi+0x3c],cl
  41a0e1:	pop    ebx
  41a0e2:	jb     0x41a0e8
  41a0e4:	cs jbe 0x41a09d
  41a0e7:	in     eax,dx
  41a0e8:	(bad)  
  41a0e9:	and    dl,BYTE PTR [ecx-0xf840c86]
  41a0ef:	stos   DWORD PTR es:[edi],eax
  41a0f0:	mov    es,WORD PTR [esi+0x5d]
  41a0f3:	test   eax,0x47e79a24
  41a0f8:	xor    al,0x25
  41a0fb:	jecxz  0x41a0bc
  41a0fd:	in     al,dx
  41a0fe:	xlat   BYTE PTR ds:[ebx]
  41a0ff:	sub    al,BYTE PTR [edi+0x71]
  41a102:	adc    eax,0xb2facdd4
  41a107:	ss pop edi
  41a109:	xchg   ebx,eax
  41a10a:	xor    ecx,DWORD PTR [edi+esi*8+0x413e969]
  41a111:	dec    edx
  41a112:	aaa    
  41a113:	inc    eax
  41a114:	jecxz  0x41a161
  41a116:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a117:	bswap  ebp
  41a119:	xor    BYTE PTR [edi+0x2d],ah
  41a11c:	fdiv   st(6),st
  41a11e:	adc    BYTE PTR ds:0x6ffc82f8,0x88
  41a125:	jg     0x41a0dc
  41a127:	dec    esp
  41a128:	mov    ah,0x53
  41a12a:	cli    
  41a12b:	sub    DWORD PTR gs:[edx],edi
  41a12e:	add    DWORD PTR [eax+0x757e06cf],edi
  41a134:	call   0x5cad:0x76d29d2
  41a13b:	cmp    al,0xa1
  41a13d:	jecxz  0x41a199
  41a13f:	out    dx,al
  41a140:	aaa    
  41a141:	jo     0x41a191
  41a143:	sbb    al,0x8d
  41a145:	(bad)  
  41a146:	sbb    ah,BYTE PTR [edx+esi*2-0x59]
  41a14a:	inc    eax
  41a14b:	out    0xfb,eax
  41a14d:	addr16 xchg edi,eax
  41a14f:	jmp    0x3e27:0xf7b080ee
  41a156:	mov    ds:0x61373f3e,al
  41a15b:	je     0x41a138
  41a15d:	ret    0x1096
  41a160:	fdivr  QWORD PTR [edx]
  41a162:	lock xor eax,0x4fc8ffc0
  41a168:	dec    DWORD PTR [eax]
  41a16a:	aam    0xaa
  41a16c:	fsubrp st(1),st
  41a16e:	int3   
  41a16f:	rol    DWORD PTR [esi],1
  41a171:	adc    BYTE PTR [esi-0x5d2a42a8],bl
  41a177:	dec    ebx
  41a178:	scas   eax,DWORD PTR es:[edi]
  41a179:	ja     0x41a108
  41a17b:	nop
  41a17c:	jecxz  0x41a1d9
  41a17e:	xchg   esp,eax
  41a17f:	out    dx,al
  41a180:	pop    ebp
  41a181:	inc    edx
  41a182:	inc    edx
  41a183:	push   0xd4f33eb4
  41a188:	mov    ebx,0x33db2ab0
  41a18d:	dec    BYTE PTR [ebp-0x1a24d26e]
  41a193:	in     eax,0x84
  41a195:	jbe    0x41a1aa
  41a197:	(bad)  
  41a198:	imul   ecx,DWORD PTR [ecx],0x4ebdde6a
  41a19e:	sbb    esi,edi
  41a1a0:	inc    eax
  41a1a1:	jno    0x41a201
  41a1a3:	cs ins DWORD PTR es:[edi],dx
  41a1a5:	rcl    BYTE PTR [edx],cl
  41a1a7:	mov    eax,0xb9923cbd
  41a1ac:	pop    edx
  41a1ad:	mov    al,ds:0x48535f19
  41a1b2:	sub    BYTE PTR [esi+edx*4-0x18],ah
  41a1b6:	retf   
  41a1b7:	and    bl,0xf1
  41a1ba:	xchg   ecx,eax
  41a1bb:	fmul   QWORD PTR ds:0x35edc9d0
  41a1c1:	shl    BYTE PTR [ebp-0x5c],1
  41a1c4:	xlat   BYTE PTR ds:[ebx]
  41a1c5:	mov    DWORD PTR ds:0xa36898e7,edx
  41a1cb:	inc    edi
  41a1cc:	gs in  eax,0x10
  41a1cf:	mov    dh,0xa7
  41a1d1:	mov    bh,0xa2
  41a1d3:	(bad)  
  41a1d4:	dec    edx
  41a1d5:	adc    al,0x60
  41a1d7:	push   ebp
  41a1d8:	sub    eax,0xeefd78ae
  41a1dd:	in     al,dx
  41a1de:	iret   
  41a1df:	jmp    0x29e36524
  41a1e4:	mov    ah,0x77
  41a1e6:	aam    0xac
  41a1e8:	cmp    BYTE PTR [ebp+0x6f5efba6],dl
  41a1ee:	rcr    DWORD PTR [ecx+0x18494e38],cl
  41a1f4:	push   eax
  41a1f5:	fwait
  41a1f6:	dec    edx
  41a1f7:	sub    ebp,eax
  41a1f9:	lock mov bh,0xe1
  41a1fc:	cmp    ebx,DWORD PTR [edi+0x6e]
  41a1ff:	xchg   ebx,eax
  41a200:	pop    esi
  41a201:	inc    esi
  41a202:	push   ds
  41a203:	mov    dh,0x17
  41a205:	jno    0x41a1a6
  41a207:	mov    bh,0xe1
  41a209:	in     al,dx
  41a20a:	adc    al,0x3b
  41a20c:	mov    edx,0xe8c92a9b
  41a211:	xor    al,0x1b
  41a213:	jmp    0x534d8c4
  41a218:	shl    BYTE PTR [eax+0x7febce3f],0xbb
  41a21f:	jmp    0x41a27f
  41a221:	cmp    al,0x90
  41a223:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a224:	and    edi,ecx
  41a226:	xor    DWORD PTR [esi-0x3a410443],0xacb9bed1
  41a230:	aaa    
  41a231:	stos   BYTE PTR es:[edi],al
  41a232:	mov    WORD PTR [eax+0x786204f3],ss
  41a238:	dec    esi
  41a239:	es cmp al,0xde
  41a23c:	jge    0x41a207
  41a23e:	or     DWORD PTR [eax-0x35],ecx
  41a241:	sar    DWORD PTR [esi+ecx*2],0x67
  41a245:	hlt    
  41a246:	nop
  41a247:	adc    ch,ch
  41a249:	bound  ebx,QWORD PTR [eax-0x62]
  41a24c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a24d:	mov    ebp,DWORD PTR [eax-0x1f]
  41a250:	outs   dx,BYTE PTR ds:[esi]
  41a251:	cmp    bh,BYTE PTR [eax+0x24]
  41a254:	inc    esi
  41a255:	inc    edi
  41a256:	jbe    0x41a2d7
  41a258:	(bad)  
  41a259:	xchg   ecx,eax
  41a25a:	pusha  
  41a25b:	fnsave [eax+0x6df01db1]
  41a261:	or     eax,0x2523ca3d
  41a266:	mov    bh,0xfd
  41a268:	sbb    DWORD PTR [edx],ebp
  41a26a:	clc    
  41a26b:	inc    esp
  41a26c:	mov    edx,0x3d2352da
  41a271:	cmc    
  41a272:	ins    DWORD PTR es:[edi],dx
  41a273:	push   esi
  41a274:	or     al,0x4f
  41a276:	jecxz  0x41a255
  41a278:	and    cl,ah
  41a27a:	xchg   ebx,eax
  41a27b:	jb     0x41a26c
  41a27d:	xor    DWORD PTR [ebx],0xfffffff6
  41a280:	les    esi,FWORD PTR [ebp+0x6e]
  41a283:	xchg   ebp,eax
  41a284:	jmp    0x41a2cd
  41a286:	fcom   DWORD PTR [esi]
  41a288:	aam    0xdf
  41a28a:	in     eax,0xf4
  41a28c:	sbb    dl,BYTE PTR [esi]
  41a28e:	rol    DWORD PTR [ecx+0x305ca9c3],1
  41a294:	adc    DWORD PTR [esi-0x4d079ad6],edx
  41a29a:	cmp    eax,0xc8eb4ce0
  41a29f:	retf   
  41a2a0:	mov    WORD PTR [eax],?
  41a2a2:	pop    edi
  41a2a3:	jae    0x41a29d
  41a2a5:	adc    DWORD PTR [edx],ebx
  41a2a7:	mov    esp,0x872812b5
  41a2ac:	(bad)  
  41a2ad:	ins    DWORD PTR es:[edi],dx
  41a2ae:	pusha  
  41a2af:	out    0x22,al
  41a2b1:	cmp    eax,0x9512aa85
  41a2b6:	fiadd  DWORD PTR [esi+0x2a53cb60]
  41a2bc:	or     eax,0xeb078cda
  41a2c1:	xchg   ebp,eax
  41a2c2:	xor    esi,0x15
  41a2c5:	push   ds
  41a2c6:	mov    ebp,0x8714bd30
  41a2cb:	mov    BYTE PTR [ecx],al
  41a2cd:	or     eax,ebx
  41a2cf:	cmp    esp,ebx
  41a2d1:	push   ds
  41a2d2:	and    eax,0xd569aaf0
  41a2d7:	xor    al,0x19
  41a2d9:	xchg   ecx,eax
  41a2da:	mov    ds:0xb77f3fb4,al
  41a2df:	mov    ecx,0xd2c69c51
  41a2e4:	(bad)  [edi]
  41a2e6:	sub    edi,eax
  41a2e8:	pop    ebx
  41a2e9:	mov    dh,0xaa
  41a2eb:	dec    esp
  41a2ec:	xor    BYTE PTR [esp+esi*8],bl
  41a2ef:	test   BYTE PTR [ecx],bl
  41a2f1:	sbb    DWORD PTR [ebx-0x74a012ff],eax
  41a2f7:	fmul   QWORD PTR [eax-0xe6504a7]
  41a2fd:	inc    edx
  41a2fe:	pop    edi
  41a2ff:	stos   DWORD PTR es:[edi],eax
  41a300:	jo     0x41a308
  41a302:	cmp    eax,0x6890ba0e
  41a307:	cdq    
  41a308:	mov    esp,0x80672fe3
  41a30d:	xlat   BYTE PTR ss:[ebx]
  41a30f:	and    BYTE PTR [ebx+0x54],0xf8
  41a313:	call   0x6574d6ae
  41a318:	das    
  41a319:	jp     0x41a33a
  41a31b:	cdq    
  41a31c:	inc    ecx
  41a31d:	test   DWORD PTR [edi-0x6a],ebp
  41a320:	es aas 
  41a322:	mov    esi,0xe1420630
  41a327:	loope  0x41a36b
  41a329:	mov    al,ds:0xf00cc2fc
  41a32e:	jmp    0xba34e164
  41a333:	or     al,0x5a
  41a335:	adc    ecx,DWORD PTR [edx-0x7bdb5e2c]
  41a33b:	leave  
  41a33c:	jle    0x41a335
  41a33e:	cmp    BYTE PTR [edx],cl
  41a340:	cmp    BYTE PTR [ebx+0x63029363],0x9b
  41a347:	std    
  41a348:	lods   eax,DWORD PTR ds:[esi]
  41a349:	add    BYTE PTR ds:0x51ed3fe3,bh
  41a34f:	push   ss
  41a350:	pushf  
  41a351:	enter  0x582d,0xa1
  41a355:	outs   dx,BYTE PTR ds:[esi]
  41a356:	cmp    eax,0xf64f1b66
  41a35b:	lahf   
  41a35c:	sub    ebp,DWORD PTR [ebp+0x35]
  41a35f:	jae    0x41a37d
  41a361:	in     eax,0x41
  41a363:	mov    ds:0x2d7075f9,al
  41a368:	repz fisttp DWORD PTR [ecx]
  41a36b:	loop   0x41a322
  41a36d:	mov    ds:0x99c35219,eax
  41a372:	loopne 0x41a2fc
  41a374:	stc    
  41a375:	xor    eax,0x6444050c
  41a37a:	dec    edx
  41a37b:	test   al,0x9b
  41a37d:	dec    ebp
  41a37e:	bound  esp,QWORD PTR [esi+edx*2+0x15cca4b5]
  41a385:	jnp    0x41a3da
  41a387:	into   
  41a388:	daa    
  41a389:	shufps xmm6,XMMWORD PTR [ebp+0x466cac4f],0x12
  41a391:	fadd   QWORD PTR ss:[edi-0x76]
  41a395:	arpl   sp,dx
  41a397:	xchg   esi,eax
  41a398:	(bad)  
  41a399:	xchg   edx,eax
  41a39a:	cdq    
  41a39b:	xor    cl,BYTE PTR [eax+0x41]
  41a39e:	add    ebp,DWORD PTR ss:[edx+0x7]
  41a3a2:	cmp    al,ch
  41a3a4:	push   edx
  41a3a5:	int3   
  41a3a6:	ret    
  41a3a7:	push   es
  41a3a8:	mov    al,ds:0xd7b02f01
  41a3ad:	bnd ret 0x9e52
  41a3b1:	sar    BYTE PTR [edx+ebp*2],cl
  41a3b4:	out    0xda,eax
  41a3b6:	push   edx
  41a3b7:	push   ecx
  41a3b8:	in     al,dx
  41a3b9:	and    BYTE PTR [ebx],al
  41a3bb:	out    dx,eax
  41a3bc:	jle    0x41a3d6
  41a3be:	cmp    ah,BYTE PTR [ebx+0x67f8d495]
  41a3c4:	push   edx
  41a3c5:	push   esi
  41a3c6:	xor    BYTE PTR [edi+0x2b],0xca
  41a3ca:	jo     0x41a432
  41a3cc:	xchg   edi,eax
  41a3cd:	jb     0x41a422
  41a3cf:	jb     0x41a3d6
  41a3d1:	ror    DWORD PTR [esi],0xb9
  41a3d4:	jmp    0x45319264
  41a3d9:	push   edi
  41a3da:	jbe    0x41a368
  41a3dc:	out    0xd5,eax
  41a3de:	jne    0x41a3f2
  41a3e0:	jns    0x41a459
  41a3e2:	dec    eax
  41a3e3:	add    eax,0x4a5234e3
  41a3e8:	and    BYTE PTR [edx+0x5c67663e],0x66
  41a3ef:	mov    ds:0xe436d8d3,al
  41a3f4:	pop    ebp
  41a3f5:	inc    edi
  41a3f6:	loopne 0x41a3df
  41a3f8:	mov    esi,0x1e00b91f
  41a3fd:	scas   al,BYTE PTR es:[edi]
  41a3fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3ff:	iret   
  41a400:	out    0xe3,eax
  41a402:	cmp    al,0x6e
  41a404:	ins    BYTE PTR es:[edi],dx
  41a405:	fcmovb st,st(7)
  41a407:	gs xchg edx,eax
  41a409:	xor    bl,BYTE PTR [esi]
  41a40b:	cwde   
  41a40c:	xor    edx,ecx
  41a40e:	mov    bl,0xf8
  41a410:	add    al,0x97
  41a412:	mov    al,0xd3
  41a414:	inc    ebx
  41a415:	bound  ebx,QWORD PTR [eax]
  41a417:	ds in  al,0x86
  41a41a:	cmp    BYTE PTR [ecx-0x389f19c7],al
  41a420:	add    al,al
  41a422:	xlat   BYTE PTR ds:[ebx]
  41a423:	mov    ch,0xa7
  41a425:	push   cs
  41a426:	out    0x69,eax
  41a428:	pop    eax
  41a429:	fiadd  WORD PTR [esi-0x71]
  41a42c:	stos   DWORD PTR es:[di],eax
  41a42e:	in     eax,0xf3
  41a430:	dec    esp
  41a431:	into   
  41a432:	ltr    WORD PTR [esi+0x4662ba4b]
  41a439:	loope  0x41a44c
  41a43b:	add    BYTE PTR [esi+eax*1+0x4bfb18f8],dh
  41a442:	push   0xffffffbd
  41a444:	xchg   esi,eax
  41a445:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a446:	call   ebx
  41a448:	dec    esi
  41a449:	inc    eax
  41a44a:	fiadd  DWORD PTR [ebx-0x48978d40]
  41a450:	aad    0x4e
  41a452:	xchg   ecx,eax
  41a453:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a454:	pop    esi
  41a455:	jp     0x41a4c0
  41a457:	int3   
  41a458:	mov    al,0x36
  41a45a:	aaa    
  41a45b:	call   0x6cb4:0x88823e54
  41a462:	pop    esp
  41a463:	and    eax,0xf92ee5bb
  41a468:	(bad)  
  41a469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a46a:	mov    edi,0xd2a76127
  41a46f:	lahf   
  41a470:	xlat   BYTE PTR ds:[ebx]
  41a471:	sub    eax,DWORD PTR [edx+0x5d]
  41a474:	aaa    
  41a475:	inc    bh
  41a477:	das    
  41a478:	or     al,0x14
  41a47a:	xor    al,0xb0
  41a47c:	sbb    eax,0xa4e11314
  41a481:	out    dx,eax
  41a482:	fcmovne st,st(4)
  41a484:	sbb    al,0x8a
  41a486:	hlt    
  41a487:	xchg   esp,eax
  41a488:	call   0x843b:0x50ff3d2f
  41a48f:	xor    eax,0x3b32c47
  41a494:	ds cdq 
  41a496:	pop    esp
  41a497:	fwait
  41a498:	and    dl,bh
  41a49a:	mov    esp,DWORD PTR [edi+eax*8+0x178e2ffa]
  41a4a1:	xchg   DWORD PTR [edx-0x29],ebp
  41a4a4:	clc    
  41a4a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4a6:	push   ebp
  41a4a7:	repz adc edi,ecx
  41a4aa:	lods   eax,DWORD PTR ds:[esi]
  41a4ab:	(bad)  
  41a4ac:	cwde   
  41a4ad:	dec    esi
  41a4ae:	dec    ebp
  41a4af:	push   ecx
  41a4b0:	inc    eax
  41a4b1:	or     DWORD PTR [ebx+edx*2+0x78],esp
  41a4b5:	retf   
  41a4b6:	int3   
  41a4b7:	jb     0x41a47d
  41a4b9:	push   cs
  41a4ba:	outs   dx,DWORD PTR ds:[esi]
  41a4bb:	dec    ebp
  41a4bc:	je     0x41a498
  41a4be:	mov    ds:0x6f3bfe00,al
  41a4c3:	fimul  WORD PTR [edx-0x3df8fe8e]
  41a4c9:	(bad)  
  41a4cb:	in     eax,0x21
  41a4cd:	dec    esp
  41a4ce:	push   ebx
  41a4cf:	jge    0x41a4c2
  41a4d1:	adc    al,ah
  41a4d3:	pop    esp
  41a4d4:	mov    cl,0x8a
  41a4d6:	sub    cl,BYTE PTR [edx-0x74b8c91b]
  41a4dc:	les    esp,FWORD PTR [edx-0x19]
  41a4df:	push   0x3a
  41a4e1:	push   ebx
  41a4e2:	cs xor eax,0x34229d9c
  41a4e8:	mov    eax,0x3052b16
  41a4ed:	repz cld 
  41a4ef:	pop    ds
  41a4f0:	or     al,0xc5
  41a4f2:	fdiv   DWORD PTR [eax]
  41a4f4:	xchg   edx,eax
  41a4f5:	stos   DWORD PTR es:[edi],eax
  41a4f6:	pushf  
  41a4f7:	or     eax,0xed22e5c0
  41a4fc:	push   edx
  41a4fd:	adc    eax,0x9000792f
  41a502:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41a504:	fs mov bl,0x79
  41a507:	mov    ebp,0xa1afaea9
  41a50c:	inc    ecx
  41a50d:	cmovb  edi,DWORD PTR [eax-0x70]
  41a511:	call   0xc0b68697
  41a516:	dec    edx
  41a517:	neg    DWORD PTR [edx-0x7ff5e3b5]
  41a51d:	gs pusha 
  41a51f:	xor    esi,edi
  41a521:	(bad)  
  41a523:	aad    0x29
  41a525:	sbb    edx,esi
  41a527:	stos   BYTE PTR es:[edi],al
  41a528:	inc    esi
  41a529:	push   edi
  41a52a:	jbe    0x41a529
  41a52c:	dec    eax
  41a52d:	dec    edx
  41a52e:	mov    BYTE PTR [ecx-0x35],0x66
  41a532:	add    bh,dl
  41a534:	dec    edi
  41a535:	jle    0x41a520
  41a537:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a538:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a539:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41a53b:	ja     0x41a541
  41a53d:	and    DWORD PTR [esi-0x58],ebp
  41a540:	(bad)  
  41a541:	push   esp
  41a542:	inc    ebp
  41a543:	xchg   ebx,eax
  41a544:	push   esp
  41a545:	jecxz  0x41a4fd
  41a547:	test   ah,0x7d
  41a54a:	pop    ecx
  41a54b:	shr    BYTE PTR [ecx],0xa5
  41a54e:	popa   
  41a54f:	rcr    DWORD PTR [eax],0xa9
  41a552:	mov    al,ds:0xe8b03f24
  41a557:	push   ds
  41a558:	les    ecx,FWORD PTR [esi+0x1633d982]
  41a55e:	imul   ebp,esp,0x9750f9f0
  41a564:	das    
  41a565:	ja     0x41a4fb
  41a567:	mov    ch,0x8b
  41a569:	adc    DWORD PTR [esi+0x4ae1a814],ebx
  41a56f:	test   BYTE PTR [eax+0x4827f464],dl
  41a575:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a576:	cwde   
  41a577:	inc    ecx
  41a578:	pop    ebp
  41a579:	and    ebp,0x8b9b2df5
  41a57f:	mov    ecx,0xf35e8b26
  41a584:	dec    ebp
  41a585:	add    eax,0x233e0ee1
  41a58a:	sub    al,0x53
  41a58c:	and    ah,BYTE PTR [edx+0x40]
  41a58f:	mov    edi,0xaade1e51
  41a594:	mov    ebp,0x1345889b
  41a599:	pop    esi
  41a59a:	out    dx,eax
  41a59b:	mov    ebx,0x415b3a29
  41a5a0:	sub    ch,al
  41a5a2:	push   ebx
  41a5a3:	mov    ds,WORD PTR [esi]
  41a5a5:	add    al,0x54
  41a5a7:	mov    ?,ebx
  41a5a9:	mov    bh,0x1f
  41a5ab:	cmp    al,dl
  41a5ad:	xchg   edi,eax
  41a5ae:	xchg   DWORD PTR [esi-0x5d],esp
  41a5b1:	push   eax
  41a5b2:	ja     0x41a624
  41a5b4:	jg     0x41a5c0
  41a5b6:	pop    esi
  41a5b7:	sti    
  41a5b8:	jbe    0x41a61a
  41a5ba:	xor    bl,bh
  41a5bc:	daa    
  41a5bd:	sbb    bl,0xbb
  41a5c0:	and    cl,BYTE PTR [eax]
  41a5c2:	add    dh,BYTE PTR [ebp+0x53]
  41a5c5:	pop    ds
  41a5c6:	stos   BYTE PTR es:[edi],al
  41a5c7:	inc    ecx
  41a5c8:	mov    al,0x96
  41a5ca:	pop    ds
  41a5cb:	mov    al,0x9c
  41a5cd:	push   ecx
  41a5ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5cf:	cwde   
  41a5d0:	mov    al,ah
  41a5d2:	addr16 inc esi
  41a5d4:	stos   BYTE PTR es:[edi],al
  41a5d5:	sub    ecx,ecx
  41a5d7:	hlt    
  41a5d8:	and    cl,BYTE PTR [ebx+0x5272c41c]
  41a5de:	js     0x41a5f6
  41a5e0:	push   ss
  41a5e1:	je     0x41a599
  41a5e3:	dec    ecx
  41a5e4:	inc    ebx
  41a5e5:	test   al,0x74
  41a5e7:	or     edx,DWORD PTR [edi]
  41a5e9:	fcom   QWORD PTR [esi+eax*2]
  41a5ec:	dec    ebx
  41a5ed:	ins    BYTE PTR es:[edi],dx
  41a5ee:	mov    cl,0x1b
  41a5f0:	inc    ebx
  41a5f1:	out    dx,al
  41a5f2:	out    0x7f,eax
  41a5f4:	cmp    BYTE PTR [ebp+0x3b429f10],0x27
  41a5fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5fc:	cmp    esp,DWORD PTR [edi]
  41a5fe:	rcl    DWORD PTR ds:0x1067b69b,0xe9
  41a605:	ins    DWORD PTR es:[edi],dx
  41a606:	add    eax,DWORD PTR [eax]
  41a608:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a609:	dec    edx
  41a60a:	mov    eax,ds:0x3413ac06
  41a60f:	mov    bh,dh
  41a611:	dec    ebp
  41a612:	inc    esp
  41a613:	jnp    0x41a633
  41a615:	stos   BYTE PTR es:[edi],al
  41a616:	fistp  DWORD PTR [ecx-0x38]
  41a619:	pop    esi
  41a61a:	jae    0x41a62c
  41a61c:	mov    edi,0xfb003d39
  41a621:	inc    edx
  41a622:	mov    edx,0xd251d749
  41a627:	xchg   edi,eax
  41a628:	inc    ebp
  41a629:	jb     0x41a67c
  41a62b:	daa    
  41a62c:	test   eax,0xd481c189
  41a631:	test   edi,eax
  41a633:	fstp   TBYTE PTR ds:0xc93029cc
  41a639:	inc    DWORD PTR [ebx+0x1994012c]
  41a63f:	fild   QWORD PTR [edx]
  41a641:	and    eax,0x782db44c
  41a646:	xor    al,BYTE PTR [ebp-0x28123307]
  41a64c:	sbb    ch,BYTE PTR [ebx+0x158b3d5e]
  41a652:	add    ch,BYTE PTR [edi-0x69]
  41a655:	call   0x7658:0x92cc04e2
  41a65c:	jns    0x41a69b
  41a65e:	fbstp  TBYTE PTR [esi]
  41a660:	(bad)  
  41a661:	lahf   
  41a662:	mov    al,ds:0x617510f4
  41a667:	adc    al,bh
  41a669:	shld   esi,eax,cl
  41a66c:	dec    eax
  41a66d:	arpl   WORD PTR [edi+eax*4],bx
  41a670:	xchg   DWORD PTR [ecx],ebp
  41a672:	pop    edi
  41a673:	popa   
  41a674:	(bad)  
  41a675:	cmp    dl,BYTE PTR [ebx-0x7f]
  41a678:	inc    ecx
  41a679:	pop    ecx
  41a67a:	icebp  
  41a67b:	fcmove st,st(0)
  41a67d:	xchg   esi,eax
  41a67e:	scas   al,BYTE PTR es:[edi]
  41a67f:	mov    ds:0x37dafe4,eax
  41a684:	ret    0x5071
  41a687:	cmp    al,0xfc
  41a689:	(bad)  
  41a68a:	stc    
  41a68b:	or     dh,ah
  41a68d:	jge    0x41a651
  41a68f:	not    BYTE PTR [eax]
  41a691:	aad    0x4a
  41a693:	ret    
  41a694:	dec    edi
  41a695:	ud1    eax,DWORD PTR [ecx]
  41a698:	mov    ecx,0x83a0ea7a
  41a69d:	cmp    dl,cl
  41a69f:	inc    ecx
  41a6a0:	sar    DWORD PTR [ecx+ecx*1-0x1824e1c4],cl
  41a6a7:	jmp    0x41a723
  41a6a9:	das    
  41a6aa:	int3   
  41a6ab:	mov    dh,0x7d
  41a6ad:	out    dx,eax
  41a6ae:	dec    esp
  41a6af:	or     al,0x7c
  41a6b1:	int    0x91
  41a6b3:	push   ebx
  41a6b4:	stos   DWORD PTR es:[edi],eax
  41a6b5:	sbb    eax,0xd37a7fba
  41a6ba:	sti    
  41a6bb:	or     eax,0xce42bfc6
  41a6c0:	adc    eax,0xc1e89cec
  41a6c5:	push   0x6f
  41a6c7:	fadd   QWORD PTR [ecx]
  41a6c9:	dec    ecx
  41a6ca:	add    esp,DWORD PTR [edx]
  41a6cc:	add    bl,ah
  41a6ce:	inc    esi
  41a6cf:	jp     0x41a6b3
  41a6d1:	fnstsw WORD PTR [ebx+0x7]
  41a6d4:	ficomp DWORD PTR [esi+0x37]
  41a6d7:	or     esp,DWORD PTR cs:[edi]
  41a6da:	and    eax,0xfb68aa78
  41a6df:	into   
  41a6e0:	js     0x41a73c
  41a6e2:	pop    ss
  41a6e3:	jg     0x41a6ac
  41a6e5:	test   al,0xf1
  41a6e7:	and    DWORD PTR [eax+0x77b35d2b],ebx
  41a6ed:	scas   eax,DWORD PTR es:[edi]
  41a6ee:	jmp    0x2364b1c
  41a6f3:	dec    edi
  41a6f4:	xchg   ebp,eax
  41a6f5:	lahf   
  41a6f6:	mov    WORD PTR [edx+0x56],?
  41a6f9:	mov    al,BYTE PTR [esi+0x28]
  41a6fc:	mov    ch,0x28
  41a6fe:	sahf   
  41a6ff:	xchg   edi,eax
  41a700:	mov    dh,0xcb
  41a702:	scas   al,BYTE PTR es:[edi]
  41a703:	push   ds
  41a704:	xor    al,BYTE PTR [ebx+0x58]
  41a707:	test   BYTE PTR [esi+0x3],ah
  41a70a:	pop    eax
  41a70b:	ins    BYTE PTR es:[edi],dx
  41a70c:	(bad)  
  41a70d:	out    dx,al
  41a70e:	mov    bh,0xee
  41a710:	xchg   esi,eax
  41a711:	sub    eax,0x58327ac6
  41a716:	and    dl,bh
  41a718:	and    bl,BYTE PTR [edx]
  41a71a:	cmp    ah,BYTE PTR [eax+0x76b15908]
  41a720:	int3   
  41a721:	lods   eax,DWORD PTR ds:[esi]
  41a722:	pop    ds
  41a723:	jmp    0xac09:0x67eea75a
  41a72a:	cmp    eax,0x34d2916d
  41a72f:	inc    BYTE PTR [eax]
  41a731:	es and al,0x59
  41a734:	es xchg esp,eax
  41a736:	jne    0x41a6da
  41a738:	push   0xffffffec
  41a73a:	xchg   esi,eax
  41a73b:	xor    al,0xe0
  41a73d:	lds    eax,FWORD PTR [eax*4+0x7a266f88]
  41a744:	cs aaa 
  41a746:	cmc    
  41a747:	retf   0xe89a
  41a74a:	xor    al,0x68
  41a74c:	adc    cl,ah
  41a74e:	dec    ecx
  41a74f:	sbb    al,0xe
  41a751:	mov    bh,0x10
  41a753:	cld    
  41a754:	inc    esp
  41a755:	dec    ebx
  41a756:	inc    esi
  41a757:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a758:	push   es
  41a759:	frstor [esi]
  41a75b:	lea    eax,[edi]
  41a75d:	fisub  WORD PTR [ebp+0x66]
  41a760:	fs std 
  41a762:	in     eax,dx
  41a763:	aam    0x9b
  41a765:	sbb    ecx,DWORD PTR [edi-0x3a]
  41a768:	cmp    eax,DWORD PTR [edi+0x13157588]
  41a76e:	icebp  
  41a76f:	push   0x50
  41a771:	fild   WORD PTR [edx-0x18]
  41a774:	es cmp eax,0xcc2fb439
  41a77a:	mov    ebp,0x846ce652
  41a77f:	jbe    0x41a74b
  41a781:	cmp    BYTE PTR [ecx+0x295737ed],ch
  41a787:	stc    
  41a788:	stos   BYTE PTR es:[edi],al
  41a789:	or     ch,BYTE PTR [ecx]
  41a78b:	popa   
  41a78c:	dec    edx
  41a78d:	add    edx,esp
  41a78f:	and    eax,0xf6d7adc
  41a794:	lods   eax,DWORD PTR ds:[esi]
  41a795:	mov    esi,0xe1b36ef6
  41a79a:	xchg   edi,eax
  41a79b:	jmp    0x3565:0x25b5c836
  41a7a2:	cli    
  41a7a3:	xor    esp,edi
  41a7a5:	fmulp  st(0),st
  41a7a7:	adc    eax,0xdabaf9e0
  41a7ac:	adc    BYTE PTR ds:0xf4bf44e1,dl
  41a7b2:	add    ecx,DWORD PTR [edx]
  41a7b4:	xor    BYTE PTR [ebx-0x52fd8590],0xe9
  41a7bb:	pop    eax
  41a7bc:	and    BYTE PTR [edx+0x62],bh
  41a7bf:	push   ecx
  41a7c0:	sbb    dh,bl
  41a7c2:	lods   al,BYTE PTR ds:[esi]
  41a7c3:	enter  0x193d,0xc3
  41a7c7:	inc    ebx
  41a7c8:	add    bh,BYTE PTR [esp+eax*2-0x378fa655]
  41a7cf:	frstor [ebx+edi*2]
  41a7d2:	(bad)  
  41a7d3:	push   ss
  41a7d4:	test   BYTE PTR [edi+ecx*2+0x3f],bh
  41a7d8:	outs   dx,BYTE PTR ds:[esi]
  41a7d9:	inc    esi
  41a7da:	lods   eax,DWORD PTR ds:[esi]
  41a7db:	ss xchg esi,eax
  41a7dd:	bound  eax,QWORD PTR [edi]
  41a7df:	jnp    0x41a831
  41a7e1:	xor    BYTE PTR [esi+0x2681591d],al
  41a7e7:	cmp    cl,ah
  41a7e9:	pop    esi
  41a7ea:	in     al,dx
  41a7eb:	rcl    DWORD PTR ds:0x73b11510,cl
  41a7f1:	sub    al,0x86
  41a7f3:	inc    edi
  41a7f4:	in     al,0xe
  41a7f6:	sbb    al,BYTE PTR [edi]
  41a7f8:	jmp    0xee6140ab
  41a7fd:	test   BYTE PTR [esi+0x7b],bh
  41a800:	pop    es
  41a801:	in     eax,dx
  41a802:	xor    eax,0xbacd3b90
  41a807:	mov    al,0x61
  41a809:	jnp    0x41a79f
  41a80b:	add    eax,0x9cfd7d96
  41a810:	jg     0x41a83d
  41a812:	pop    ebx
  41a813:	jecxz  0x41a881
  41a815:	xor    ebx,esi
  41a817:	xchg   esi,eax
  41a818:	pop    ebx
  41a819:	push   esi
  41a81a:	and    BYTE PTR [esi-0x52aa180e],0xf1
  41a821:	(bad)  
  41a822:	push   0xb74f8df
  41a827:	inc    esi
  41a828:	lds    edx,FWORD PTR [ecx-0x39]
  41a82b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a82c:	pop    edi
  41a82d:	sub    ecx,DWORD PTR [edx+0x46]
  41a830:	sub    ah,BYTE PTR [edx+0x7fcaeef3]
  41a836:	fmul   QWORD PTR [edx]
  41a838:	(bad)  
  41a839:	ror    BYTE PTR ds:0xee9ab1b4,1
  41a83f:	and    dl,dl
  41a841:	aaa    
  41a842:	mov    al,ds:0xaf3c3ebc
  41a847:	call   0x35d58ab6
  41a84c:	adc    al,0x13
  41a84e:	mov    eax,edi
  41a850:	in     eax,0x2c
  41a852:	out    dx,eax
  41a853:	daa    
  41a854:	and    esi,DWORD PTR [ecx+ebx*1+0x53]
  41a858:	dec    edx
  41a859:	stos   DWORD PTR es:[edi],eax
  41a85a:	stos   BYTE PTR es:[edi],al
  41a85b:	mov    WORD PTR [eax+edx*4],ss
  41a85e:	push   esi
  41a85f:	cdq    
  41a860:	add    al,0x5f
  41a862:	add    al,0x16
  41a864:	bound  ebx,QWORD PTR [edi]
  41a866:	out    0x4e,al
  41a868:	sub    BYTE PTR [edx-0x19],bl
  41a86b:	pusha  
  41a86c:	inc    ecx
  41a86d:	jg     0x41a8d6
  41a86f:	jmp    0x41a8e3
  41a871:	push   0x6e7c3439
  41a876:	jp     0x41a89d
  41a878:	cmp    eax,0xee1c3bb8
  41a87d:	xor    al,0xfb
  41a87f:	ds xchg esi,eax
  41a881:	push   edx
  41a882:	cmc    
  41a883:	mov    ecx,0x8e4d43f3
  41a888:	and    DWORD PTR [ecx],0xffffff83
  41a88b:	add    eax,DWORD PTR fs:[eax]
  41a88e:	(bad)  
  41a88f:	fcom   DWORD PTR [edx+edi*4]
  41a892:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a893:	cmp    DWORD PTR [edi+0x38312361],edi
  41a899:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a89a:	and    cl,BYTE PTR [ecx-0x16]
  41a89d:	fstp   DWORD PTR [ecx+0x47]
  41a8a0:	mov    BYTE PTR [esi-0x41f9f417],dh
  41a8a6:	rol    BYTE PTR [ebx],cl
  41a8a8:	cmp    al,BYTE PTR [esi-0x5c304b3d]
  41a8ae:	sbb    eax,DWORD PTR [edx+eax*8-0x69eaa72d]
  41a8b5:	loop   0x41a869
  41a8b7:	jecxz  0x41a858
  41a8b9:	into   
  41a8ba:	gs scas al,BYTE PTR es:[edi]
  41a8bc:	or     bh,dl
  41a8be:	test   al,0x4
  41a8c0:	push   edi
  41a8c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8c2:	rcr    DWORD PTR [eax-0x6e],0x4
  41a8c6:	xor    eax,esi
  41a8c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8c9:	fmul   QWORD PTR [esi+edx*2+0x56e76965]
  41a8d0:	lods   eax,DWORD PTR ds:[esi]
  41a8d1:	dec    esp
  41a8d2:	outs   dx,DWORD PTR ds:[esi]
  41a8d3:	or     eax,0xb95f53b2
  41a8d8:	dec    eax
  41a8d9:	mov    cs,esp
  41a8db:	clc    
  41a8dc:	sbb    al,0xf3
  41a8de:	call   0xee88:0xc34c8962
  41a8e5:	pushf  
  41a8e6:	pop    edx
  41a8e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8e8:	aam    0x22
  41a8ea:	jl     0x41a8fb
  41a8ec:	dec    edi
  41a8ed:	cpuid  
  41a8ef:	retf   
  41a8f0:	mov    cl,0xc
  41a8f2:	pop    ebx
  41a8f3:	js     0x41a912
  41a8f5:	loopne 0x41a8ae
  41a8f7:	and    bl,BYTE PTR fs:[edx-0x3f]
  41a8fb:	daa    
  41a8fc:	out    0x2d,al
  41a8fe:	adc    DWORD PTR [eax+0x10],0xf203279d
  41a905:	pop    ebp
  41a906:	jb     0x41a8a9
  41a908:	loopne 0x41a8dd
  41a90a:	push   ds
  41a90b:	rcl    esp,cl
  41a90d:	jnp    0x41a91f
  41a90f:	push   edx
  41a910:	arpl   WORD PTR [eax-0x4def2f3],bx
  41a916:	cmp    eax,0x68ee9b41
  41a91b:	je     0x41a94d
  41a91d:	rol    BYTE PTR [esi],0xf6
  41a920:	fs jg  0x41a8ba
  41a923:	mov    ds:0xfcda1a9b,al
  41a928:	pop    edx
  41a929:	fmul   DWORD PTR ds:0x945f5b4c
  41a92f:	dec    ebp
  41a930:	jge    0x41a92c
  41a932:	jmp    FWORD PTR ds:0xaf1359ab
  41a938:	(bad)  [edi-0xe]
  41a93b:	push   ss
  41a93c:	sub    dh,bl
  41a93e:	sar    BYTE PTR [ecx+0x765f0017],1
  41a944:	pop    ebp
  41a945:	mov    al,ds:0xc8048083
  41a94a:	xor    eax,0xa634662d
  41a94f:	je     0x41a992
  41a951:	dec    edi
  41a952:	sub    DWORD PTR [edi-0x2],esi
  41a955:	jno    0x41a92d
  41a957:	dec    esi
  41a958:	cmp    DWORD PTR [edx+0x7572e498],eax
  41a95e:	ret    
  41a95f:	inc    edx
  41a960:	jae    0x41a8ff
  41a962:	aad    0xb2
  41a964:	and    al,0x11
  41a966:	jecxz  0x41a926
  41a968:	jne    0x41a9b0
  41a96a:	leave  
  41a96b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a96c:	inc    edx
  41a96d:	test   eax,0x321e1ead
  41a972:	mov    dh,0x93
  41a974:	dec    eax
  41a975:	push   esp
  41a976:	jmp    0x41a93d
  41a978:	mov    bl,0x7e
  41a97a:	(bad)  
  41a97b:	sub    eax,0xe2f41ea3
  41a980:	stc    
  41a981:	int    0xfb
  41a983:	mov    eax,0xde5fcf43
  41a988:	mov    cs,WORD PTR [ecx]
  41a98a:	sti    
  41a98b:	imul   ecx,DWORD PTR [ecx],0x91275246
  41a991:	pop    es
  41a992:	mov    dh,0xe1
  41a994:	cwde   
  41a995:	mov    al,ds:0xa6e25368
  41a99a:	in     al,dx
  41a99b:	mov    dl,BYTE PTR gs:[ebx+0x35]
  41a99f:	jle    0x41a9da
  41a9a1:	js     0x41a927
  41a9a3:	repnz mov eax,ds:0xeaeabc92
  41a9a9:	out    dx,al
  41a9aa:	fst    QWORD PTR [eax-0x27]
  41a9ad:	addr16 pop ecx
  41a9af:	xchg   ebx,eax
  41a9b0:	pushf  
  41a9b1:	fsub   DWORD PTR [ecx]
  41a9b3:	pushf  
  41a9b4:	pop    ecx
  41a9b5:	dec    edi
  41a9b6:	pop    es
  41a9b7:	fwait
  41a9b8:	pop    ebx
  41a9b9:	loope  0x41aa2d
  41a9bb:	dec    ebx
  41a9bc:	cli    
  41a9bd:	loop   0x41a9cb
  41a9bf:	add    edi,DWORD PTR [esi+eiz*4+0x66]
  41a9c3:	xor    esi,DWORD PTR [ebx-0x1]
  41a9c6:	push   ds
  41a9c7:	mov    esp,DWORD PTR [ecx+edx*4]
  41a9ca:	fucomip st,st(7)
  41a9cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9cd:	into   
  41a9ce:	xchg   BYTE PTR [ecx],bl
  41a9d0:	cwde   
  41a9d1:	mov    edi,0x1f4d85c1
  41a9d6:	ins    DWORD PTR es:[edi],dx
  41a9d7:	dec    edx
  41a9d8:	sti    
  41a9d9:	push   0xd0e95956
  41a9de:	mov    dx,0x3ec
  41a9e2:	ss and bh,al
  41a9e5:	ds mul eax
  41a9e8:	inc    esi
  41a9e9:	hlt    
  41a9ea:	pop    ecx
  41a9eb:	out    dx,al
  41a9ec:	push   cs
  41a9ed:	in     al,0x96
  41a9ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9f0:	ror    DWORD PTR [edx+0x46],1
  41a9f3:	mov    dh,0xb2
  41a9f5:	gs xor al,0x7a
  41a9f8:	mov    eax,ds:0x3a4b8c28
  41a9fd:	(bad)  
  41a9fe:	cli    
  41a9ff:	pop    esi
  41aa00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa01:	push   ss
  41aa02:	pop    esp
  41aa03:	xor    bh,0xd5
  41aa06:	and    ecx,DWORD PTR [esi-0x41]
  41aa09:	sub    bh,BYTE PTR [ecx]
  41aa0b:	pop    es
  41aa0c:	cmp    al,0xf0
  41aa0e:	sub    al,0x39
  41aa10:	test   eax,0x9f10ef94
  41aa15:	in     al,dx
  41aa16:	stc    
  41aa17:	adc    dl,BYTE PTR [edi+0x5f07795e]
  41aa1d:	add    eax,0x7532d16
  41aa22:	stos   DWORD PTR es:[edi],eax
  41aa23:	pop    es
  41aa24:	repz mov esi,0x8637debb
  41aa2a:	cld    
  41aa2b:	dec    ecx
  41aa2c:	mov    dl,0x4a
  41aa2e:	clc    
  41aa2f:	stos   DWORD PTR es:[edi],eax
  41aa30:	retf   0x3faa
  41aa33:	cdq    
  41aa34:	nop
  41aa35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa36:	jle    0x41aa73
  41aa38:	xchg   DWORD PTR [ecx-0x50],ecx
  41aa3b:	jno    0x41a9d7
  41aa3d:	pop    ds
  41aa3e:	in     al,dx
  41aa3f:	inc    esi
  41aa40:	push   ds
  41aa41:	add    DWORD PTR [edi],esp
  41aa43:	jmp    FWORD PTR [esp+eax*1+0x51]
  41aa47:	xchg   ecx,eax
  41aa48:	mov    al,ds:0xc90e58ba
  41aa4d:	ret    0xc464
  41aa50:	test   DWORD PTR [esi+0x64],0xe6f363b1
  41aa57:	mov    ebx,0x9673b07e
  41aa5c:	sub    ah,BYTE PTR [ebx]
  41aa5e:	add    DWORD PTR [esi-0x59],esp
  41aa61:	mov    ds:0x60c28c00,al
  41aa66:	xor    eax,0xe1d85946
  41aa6b:	dec    edi
  41aa6c:	jecxz  0x41aa65
  41aa6e:	mov    ebp,0x5419f3bb
  41aa73:	push   ss
  41aa74:	inc    esi
  41aa75:	mov    ebp,0xc69dbbcc
  41aa7a:	fisttp DWORD PTR [eax+ebx*1]
  41aa7d:	enter  0x4211,0x9d
  41aa81:	stos   BYTE PTR es:[edi],al
  41aa82:	repz cmc 
  41aa84:	pop    es
  41aa85:	lods   eax,DWORD PTR ds:[esi]
  41aa86:	cmp    al,0x62
  41aa88:	mov    al,ds:0x2dc44062
  41aa8d:	shr    DWORD PTR [edi+0x6ed4835],cl
  41aa93:	xor    dh,BYTE PTR ds:[ebx+0x2af23186]
  41aa9a:	fld    QWORD PTR [edi]
  41aa9c:	test   eax,0xea79914e
  41aaa1:	adc    cl,BYTE PTR [ecx-0x2]
  41aaa4:	cwde   
  41aaa5:	add    al,0x17
  41aaa7:	jnp    0x41ab0a
  41aaa9:	sbb    bh,BYTE PTR [ebp+0x30]
  41aaac:	pop    ebx
  41aaad:	data16 ja 0x41aae7
  41aab0:	out    dx,eax
  41aab1:	mov    ch,0x25
  41aab3:	cdq    
  41aab4:	add    BYTE PTR ds:0x26547320,ch
  41aaba:	(bad)  
  41aabb:	cmp    al,0x10
  41aabd:	(bad)  
  41aabe:	fmul   QWORD PTR [ebx-0x77]
  41aac1:	push   esp
  41aac2:	cmp    BYTE PTR [ebx-0x62a99ec],bh
  41aac8:	inc    esp
  41aac9:	call   0xc08a0d29
  41aace:	and    DWORD PTR [ebp-0x531d2a5a],esp
  41aad4:	xchg   esp,eax
  41aad5:	daa    
  41aad6:	in     al,dx
  41aad7:	jmp    0x41aadf
  41aad9:	cmp    DWORD PTR [edx-0x3ebc1ace],edx
  41aadf:	fldenv [esi]
  41aae1:	mov    ecx,0x738ebe8b
  41aae6:	loopne 0x41aaaa
  41aae8:	mov    edx,0x5ecd2f6e
  41aaed:	cmp    ebp,DWORD PTR [ecx]
  41aaef:	sub    eax,0xfafe1dc7
  41aaf4:	push   edx
  41aaf5:	sbb    eax,0x9a821c01
  41aafa:	mov    ds:0x35e05717,eax
  41aaff:	nop
  41ab00:	inc    edx
  41ab01:	icebp  
  41ab02:	inc    edi
  41ab03:	xchg   edx,eax
  41ab04:	leave  
  41ab05:	cmp    DWORD PTR gs:[edx],ecx
  41ab08:	sbb    BYTE PTR [edi-0x45],ah
  41ab0b:	ins    DWORD PTR es:[edi],dx
  41ab0c:	stc    
  41ab0d:	mov    eax,ds:0xad41907b
  41ab12:	imul   ebp,DWORD PTR [ebx],0x8
  41ab15:	addr16 dec ecx
  41ab17:	cmp    eax,0x12b7af98
  41ab1c:	into   
  41ab1d:	jo     0x41ab0f
  41ab1f:	mov    ds:0x1a525788,eax
  41ab24:	cmp    DWORD PTR [eax+0x609c8e0],eax
  41ab2a:	xor    esi,DWORD PTR [edi]
  41ab2c:	cmp    BYTE PTR [ebx-0x10],dh
  41ab2f:	push   es
  41ab30:	cwde   
  41ab31:	mov    BYTE PTR [ebp-0x76],bh
  41ab34:	popa   
  41ab35:	add    eax,0x5cf6fee5
  41ab3a:	dec    ebp
  41ab3b:	arpl   cx,ax
  41ab3d:	mov    al,ds:0x56b92ed9
  41ab42:	inc    edx
  41ab43:	mov    ebp,0x747580c1
  41ab48:	std    
  41ab49:	push   eax
  41ab4a:	cmp    ebx,ebp
  41ab4c:	dec    ebx
  41ab4d:	mov    ds:0xeaf9a694,al
  41ab52:	(bad)  
  41ab53:	mov    bh,0x2
  41ab55:	xchg   ebx,eax
  41ab56:	pop    ebx
  41ab57:	or     esp,ebp
  41ab59:	aaa    
  41ab5a:	sahf   
  41ab5b:	ret    
  41ab5c:	call   0x26ec:0xb5f48ad2
  41ab63:	jle    0x41ab63
  41ab65:	data16 loope 0x41abbb
  41ab68:	mov    ecx,ecx
  41ab6a:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab6c:	call   0x1c1a:0x3c3eb839
  41ab73:	shl    DWORD PTR [edx],cl
  41ab75:	mov    bl,0x7
  41ab77:	icebp  
  41ab78:	cs add bh,dh
  41ab7b:	(bad)  
  41ab7c:	cmp    DWORD PTR ds:0xd3d330,ebx
  41ab82:	cmp    esi,DWORD PTR [eax-0x5]
  41ab85:	stos   BYTE PTR es:[edi],al
  41ab86:	fmul   DWORD PTR [ecx-0xc125ff0]
  41ab8c:	add    esi,edx
  41ab8e:	or     eax,0x9041f6a4
  41ab93:	cli    
  41ab94:	mov    ebp,0x28dc6be4
  41ab99:	add    BYTE PTR [edx],bh
  41ab9b:	cmp    ecx,edi
  41ab9d:	loopne 0x41ab5f
  41ab9f:	data16 add BYTE PTR [esi],ah
  41aba2:	pusha  
  41aba3:	dec    edx
  41aba4:	add    dl,BYTE PTR [eax+0x5d663f87]
  41abaa:	pop    ecx
  41abab:	pop    edi
  41abac:	das    
  41abad:	push   ebp
  41abae:	ret    0x8875
  41abb1:	mov    cl,0xf6
  41abb3:	adc    BYTE PTR [edx+eiz*2+0x49],bl
  41abb7:	mov    al,0xc1
  41abb9:	cmp    dh,al
  41abbb:	stos   DWORD PTR es:[edi],eax
  41abbc:	mov    DWORD PTR [ecx+0x5f],eax
  41abbf:	test   eax,0xaac817dd
  41abc4:	sti    
  41abc5:	xchg   esi,eax
  41abc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abc7:	cdq    
  41abc8:	cmp    BYTE PTR [esi],bh
  41abca:	aad    0x2b
  41abcc:	aas    
  41abcd:	popa   
  41abce:	cmp    DWORD PTR [esi+0xcc960ac],0x4fd31795
  41abd8:	mov    bh,0x15
  41abda:	adc    BYTE PTR [esi],ah
  41abdc:	mov    ds:0x7dfa23f,al
  41abe1:	popf   
  41abe2:	iret   
  41abe3:	div    DWORD PTR [edx]
  41abe5:	loop   0x41abbd
  41abe7:	scas   al,BYTE PTR es:[edi]
  41abe8:	in     eax,dx
  41abe9:	push   cs
  41abea:	(bad)  
  41abeb:	ins    BYTE PTR es:[edi],dx
  41abec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abed:	iret   
  41abee:	jp     0x41abd2
  41abf0:	test   DWORD PTR [ebx],0xcc8e707c
  41abf6:	clc    
  41abf7:	pop    ebx
  41abf8:	repz repz inc ecx
  41abfb:	cmp    al,0xf5
  41abfd:	das    
  41abfe:	add    ch,BYTE PTR [edi]
  41ac00:	cmp    DWORD PTR [ebx],esi
  41ac02:	(bad)
  41ac06:	push   ds
  41ac07:	leave  
  41ac08:	aaa    
  41ac09:	lahf   
  41ac0a:	mov    fs,WORD PTR [edi+0x66f6fdb5]
  41ac10:	cmp    dl,BYTE PTR [ebp+0x2d]
  41ac13:	sub    cl,bh
  41ac15:	mov    WORD PTR [ebx],cs
  41ac17:	imul   esp,DWORD PTR [ebx],0xfffffff8
  41ac1a:	mov    ebx,0xf9b8daa
  41ac1f:	adc    cl,ah
  41ac21:	xchg   ecx,eax
  41ac22:	sub    al,0x17
  41ac24:	pop    ds
  41ac25:	fwait
  41ac26:	dec    edi
  41ac27:	scas   eax,DWORD PTR es:[edi]
  41ac28:	ret    0xb952
  41ac2b:	and    al,0x2d
  41ac2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac2e:	inc    eax
  41ac2f:	scas   al,BYTE PTR es:[edi]
  41ac30:	rol    DWORD PTR [esi+0x7311eafc],0x56
  41ac37:	pop    ebp
  41ac38:	outs   dx,DWORD PTR ds:[esi]
  41ac39:	mov    DWORD PTR [ebp+0xaaa9871],esi
  41ac3f:	mov    ecx,0x828d4fa7
  41ac44:	mov    ecx,0x9fc18a70
  41ac49:	ret    0x4a2
  41ac4c:	enter  0x11e3,0x55
  41ac50:	into   
  41ac51:	mov    ds:0x4cf27ca7,eax
  41ac56:	mov    ebp,0xe8996c2b
  41ac5b:	push   0xffffffd7
  41ac5d:	cmc    
  41ac5e:	and    dh,BYTE PTR gs:[eax-0x1f7c41bb]
  41ac65:	mov    BYTE PTR [ecx],ah
  41ac67:	push   edx
  41ac68:	rcl    DWORD PTR [edi-0x12a53422],1
  41ac6e:	dec    ebp
  41ac6f:	add    DWORD PTR [edx+0x5890b51b],eax
  41ac75:	nop
  41ac76:	imul   esi,DWORD PTR [eax+0x1e45f709],0x60396ecc
  41ac80:	int3   
  41ac81:	bound  edi,QWORD PTR [ebx]
  41ac83:	dec    edi
  41ac84:	lea    edi,[ebp+0x3f]
  41ac87:	inc    esi
  41ac88:	out    0x2,al
  41ac8a:	ret    0x7696
  41ac8d:	xchg   BYTE PTR [esi+0x65],ch
  41ac90:	mov    ebx,0xc56fafa4
  41ac95:	jbe    0x41ac97
  41ac97:	mov    dh,0x94
  41ac99:	scas   eax,DWORD PTR es:[edi]
  41ac9a:	and    DWORD PTR ds:0x6ea1785b,0x371c3ba1
  41aca4:	(bad)  
  41aca6:	clc    
  41aca7:	push   0x1a392bde
  41acac:	push   0x5c
  41acae:	out    0x74,eax
  41acb0:	arpl   WORD PTR [edi-0x65aa3fb1],si
  41acb6:	fst    QWORD PTR [edx-0x27]
  41acb9:	(bad)  
  41acba:	rcr    BYTE PTR [ebp+0x35],cl
  41acbd:	js     0x41ac64
  41acbf:	inc    eax
  41acc0:	in     eax,0x6a
  41acc2:	popa   
  41acc3:	or     al,0x6
  41acc5:	xchg   ecx,eax
  41acc6:	jmp    0x23e7:0xd15bd467
  41accd:	mov    ecx,0x6b0578ee
  41acd2:	push   ebp
  41acd3:	call   0x8d3ba55d
  41acd8:	cmp    ebp,DWORD PTR [ebp-0x54]
  41acdb:	stos   BYTE PTR es:[edi],al
  41acdc:	js     0x41ac7e
  41acde:	rcr    BYTE PTR [edi+0x9fb704f],1
  41ace4:	xor    al,0x4d
  41ace6:	xchg   esi,eax
  41ace7:	lldt   WORD PTR [ecx+edx*2-0x72]
  41acec:	lods   eax,DWORD PTR ds:[esi]
  41aced:	ret    0x74e2
  41acf0:	mov    ebp,esi
  41acf2:	mov    WORD PTR [eax],ds
  41acf4:	push   edi
  41acf5:	call   0x9c00ef5a
  41acfa:	and    dl,BYTE PTR [esi+esi*4]
  41acfd:	xor    eax,0x39ab38e8
  41ad02:	and    BYTE PTR [edx],bl
  41ad04:	mov    ah,0xc3
  41ad06:	gs pop es
  41ad08:	jmp    0x95e9:0x92f0076d
  41ad0f:	jmp    0x1246c269
  41ad14:	sub    ebp,0x2f
  41ad17:	in     al,0xa6
  41ad19:	dec    edi
  41ad1a:	ins    DWORD PTR es:[edi],dx
  41ad1b:	and    al,ah
  41ad1d:	scas   eax,DWORD PTR es:[edi]
  41ad1e:	lock xchg edx,eax
  41ad20:	mov    cs,WORD PTR [ecx-0x54b00b9c]
  41ad26:	repz les ebx,FWORD PTR [ebp-0x554297d0]
  41ad2d:	pop    esp
  41ad2e:	shl    BYTE PTR [eax],0xbb
  41ad31:	es ins BYTE PTR es:[edi],dx
  41ad33:	adc    BYTE PTR [esi],cl
  41ad35:	mov    al,ds:0xf8157266
  41ad3a:	test   ecx,0x7234913e
  41ad40:	stos   BYTE PTR es:[edi],al
  41ad41:	add    edx,DWORD PTR [edi]
  41ad43:	mov    dh,0x9c
  41ad45:	(bad)  
  41ad46:	xchg   ebp,eax
  41ad47:	jmp    0xb399:0x5b113404
  41ad4e:	inc    eax
  41ad4f:	push   ds
  41ad50:	xor    DWORD PTR [ebx],ebx
  41ad52:	lds    ebx,FWORD PTR [esi-0x36ac3735]
  41ad58:	sub    esi,esi
  41ad5a:	add    bh,al
  41ad5c:	sbb    eax,ecx
  41ad5e:	sar    BYTE PTR [esi],1
  41ad60:	xor    bh,BYTE PTR ds:0x20de64aa
  41ad66:	ret    
  41ad67:	push   ss
  41ad68:	jmp    0x6b51:0xec59fd65
  41ad6f:	sbb    dl,al
  41ad71:	repnz add BYTE PTR [ebx-0x4b],ah
  41ad75:	mov    eax,ds:0xe00faf2b
  41ad7a:	dec    edi
  41ad7b:	adc    al,0xdd
  41ad7d:	daa    
  41ad7e:	mov    cl,0x10
  41ad80:	dec    DWORD PTR [ebx]
  41ad82:	sub    esp,esi
  41ad84:	cwde   
  41ad85:	add    al,BYTE PTR [edi-0x2f]
  41ad88:	push   ecx
  41ad89:	test   al,0x1f
  41ad8b:	ret    0x7e4e
  41ad8e:	dec    ecx
  41ad8f:	mov    eax,0x88e3b4d
  41ad94:	int3   
  41ad95:	push   ebx
  41ad96:	sti    
  41ad97:	adc    BYTE PTR [ebp+ebp*2-0x73],al
  41ad9b:	and    eax,0xfcbb5771
  41ada0:	cmp    al,0xbe
  41ada2:	rdmsr  
  41ada4:	test   al,0x21
  41ada6:	imul   edi,DWORD PTR [edx],0xffffffd4
  41ada9:	xchg   BYTE PTR [ebp-0x10],bl
  41adac:	and    esp,DWORD PTR [ebp-0x364e9491]
  41adb2:	lea    edi,[esi]
  41adb4:	je     0x41ae31
  41adb6:	jle    0x41adb5
  41adb8:	jmp    ebp
  41adba:	adc    bh,bh
  41adbc:	sub    ch,BYTE PTR [edi+0x3e430146]
  41adc2:	in     al,dx
  41adc3:	bound  edi,QWORD PTR [ecx+0x1af49bab]
  41adc9:	pop    es
  41adca:	pop    ds
  41adcb:	adc    edx,esi
  41adcd:	cmc    
  41adce:	add    ch,al
  41add0:	or     al,0xfc
  41add2:	cmovns ebp,DWORD PTR ds:0x21275099
  41add9:	sub    ah,BYTE PTR [edx]
  41addb:	dec    edi
  41addc:	daa    
  41addd:	es pop edi
  41addf:	fs xor eax,0xcb65fcde
  41ade5:	mov    ecx,0x16a6c387
  41adea:	xchg   ebp,eax
  41adeb:	inc    ebp
  41adec:	cdq    
  41aded:	dec    ebx
  41adee:	cdq    
  41adef:	scas   eax,DWORD PTR es:[edi]
  41adf0:	ret    0x43f2
  41adf3:	add    al,0x51
  41adf5:	scas   al,BYTE PTR es:[edi]
  41adf6:	data16 sub BYTE PTR [esi-0x1ff4251f],0x4e
  41adfe:	sub    eax,0xdf3901a
  41ae03:	nop
  41ae04:	mov    dh,0x71
  41ae06:	xchg   ebp,eax
  41ae07:	mov    al,ds:0x59aae9af
  41ae0c:	inc    ebx
  41ae0d:	cmp    BYTE PTR [eax+ebx*8-0x5343346c],0x5a
  41ae15:	mov    edx,0x2ea9ed68
  41ae1a:	les    ebp,FWORD PTR [ebp+0x7fb812e5]
  41ae20:	add    BYTE PTR [edx-0x42e9e415],bl
  41ae26:	mov    edi,0x72d7199c
  41ae2b:	add    al,0x1c
  41ae2d:	dec    ebp
  41ae2e:	fcomp  st(4)
  41ae30:	int    0x64
  41ae32:	mov    dl,0x14
  41ae34:	dec    esi
  41ae35:	rol    DWORD PTR [edx-0x4ba4a9d2],0x6a
  41ae3c:	imul   BYTE PTR [ebp+0x3821fc1d]
  41ae42:	jmp    0xa9180095
  41ae47:	fsub   st,st(5)
  41ae49:	(bad)  
  41ae4a:	in     al,dx
  41ae4b:	mov    bh,0x74
  41ae4d:	inc    eax
  41ae4e:	cmp    eax,0x839e9115
  41ae53:	cld    
  41ae54:	test   ah,ah
  41ae56:	xor    DWORD PTR [ecx-0x2447b6e2],ebx
  41ae5c:	mov    ah,cl
  41ae5e:	ja     0x41aead
  41ae60:	inc    ecx
  41ae61:	loope  0x41aea4
  41ae63:	mov    ebx,esi
  41ae65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae66:	addr16 push ecx
  41ae68:	inc    eax
  41ae69:	and    ebp,ebp
  41ae6b:	iret   
  41ae6c:	arpl   WORD PTR [edi-0x5bf9642c],bp
  41ae72:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41ae74:	pop    esi
  41ae75:	ret    0x22dc
  41ae78:	pushf  
  41ae79:	fsub   DWORD PTR [esi]
  41ae7b:	push   es
  41ae7c:	xor    al,0x6c
  41ae7e:	imul   esi,DWORD PTR [edx+0x3c110062],0xb4ce6c9c
  41ae88:	push   0x7fd52c4a
  41ae8d:	jnp    0x41aed5
  41ae8f:	dec    eax
  41ae90:	or     BYTE PTR [ebp+0x2cebb8d],ah
  41ae96:	pop    es
  41ae97:	imul   edi,DWORD PTR [ebx+0x34]
  41ae9b:	xchg   edi,eax
  41ae9c:	adc    DWORD PTR [esi+0x16],0x6e
  41aea0:	pop    edi
  41aea1:	les    esp,FWORD PTR [edx-0x3b]
  41aea4:	mov    WORD PTR [ebp-0x3c31374],gs
  41aeaa:	pop    eax
  41aeab:	out    0xe8,eax
  41aead:	pop    esi
  41aeae:	mov    dl,BYTE PTR [edx+0x68]
  41aeb1:	cdq    
  41aeb2:	les    ecx,FWORD PTR [esi+0x6f4441ee]
  41aeb8:	retf   
  41aeb9:	pop    edx
  41aeba:	das    
  41aebb:	push   eax
  41aebc:	js     0x41af3a
  41aebe:	mov    ecx,0xea548735
  41aec3:	cmp    eax,DWORD PTR [edx+0x23]
  41aec6:	mov    esi,0xa15ec1a2
  41aecb:	aaa    
  41aecc:	imul   edi,DWORD PTR [edi+0x60],0xffffffec
  41aed0:	es or  esp,0xad239c42
  41aed7:	sahf   
  41aed8:	push   ds
  41aed9:	in     al,dx
  41aeda:	pop    ss
  41aedb:	dec    eax
  41aedc:	loopne 0x41af06
  41aede:	mov    ch,0x63
  41aee0:	sub    ah,bl
  41aee2:	daa    
  41aee3:	stos   DWORD PTR es:[edi],eax
  41aee4:	jae    0x41af0a
  41aee6:	xchg   ebp,eax
  41aee7:	stos   BYTE PTR es:[edi],al
  41aee8:	out    0xb6,al
  41aeea:	repz cmp BYTE PTR [esi+esi*8+0x39],cl
  41aeef:	(bad)  
  41aef0:	adc    ecx,ecx
  41aef2:	(bad)
  41aef6:	lea    edi,[eax+0x4ed380a8]
  41aefc:	(bad)  
  41aefd:	xchg   edx,eax
  41aefe:	lock dec edi
  41af00:	fcmovnbe st,st(0)
  41af02:	or     al,0xff
  41af04:	aas    
  41af05:	jmp    0x41aee2
  41af07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af08:	arpl   ax,bp
  41af0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af0b:	adc    ebp,DWORD PTR [ecx+ebx*1]
  41af0e:	js     0x41aed3
  41af10:	stos   BYTE PTR es:[edi],al
  41af11:	(bad)  
  41af12:	and    eax,0xceefee5b
  41af17:	jecxz  0x41aecf
  41af19:	adc    eax,ecx
  41af1b:	jne    0x41af11
  41af1d:	inc    ebp
  41af1e:	fisttp WORD PTR [esi]
  41af20:	dec    esi
  41af21:	mov    ebx,0x24c6ac59
  41af26:	push   ecx
  41af27:	outs   dx,BYTE PTR ds:[esi]
  41af28:	mov    edx,0x4f2c7e71
  41af2d:	or     eax,0xf5c33c17
  41af32:	sbb    esi,DWORD PTR [ebx-0x46]
  41af35:	push   ecx
  41af36:	(bad)  [edi-0x41ddec79]
  41af3c:	add    al,0x68
  41af3e:	in     al,dx
  41af3f:	push   esi
  41af40:	sbb    bh,BYTE PTR [edx-0x46]
  41af43:	mov    ds:0xb933165c,eax
  41af48:	dec    esi
  41af49:	sti    
  41af4a:	add    ebx,edi
  41af4c:	pop    esp
  41af4d:	jmp    0x41af8f
  41af4f:	mov    ah,0x4e
  41af51:	inc    edx
  41af52:	loop   0x41afc9
  41af54:	push   cs
  41af55:	and    esi,DWORD PTR [edi+eiz*2]
  41af58:	xchg   edi,eax
  41af59:	jne    0x41af9f
  41af5b:	xchg   DWORD PTR [ecx],esp
  41af5d:	and    edx,esi
  41af5f:	or     eax,0xd77c3567
  41af64:	sub    DWORD PTR [ebx+0x5c398801],0x39
  41af6b:	pop    ds
  41af6c:	or     BYTE PTR [edi],dl
  41af6e:	jecxz  0x41af3c
  41af70:	out    0xf6,eax
  41af72:	sti    
  41af73:	dec    ebp
  41af74:	jg     0x41aff0
  41af76:	sbb    dh,ch
  41af78:	hlt    
  41af79:	arpl   WORD PTR [eax],ax
  41af7b:	outs   dx,DWORD PTR ds:[esi]
  41af7c:	in     eax,0xf9
  41af7e:	mov    ah,0x1
  41af80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af81:	(bad)  
  41af82:	jg     0x41afdf
  41af84:	xchg   ebx,eax
  41af85:	and    al,0x27
  41af87:	or     ebp,DWORD PTR fs:[eax]
  41af8a:	xor    cl,BYTE PTR [edi+0x39]
  41af8d:	inc    esi
  41af8e:	add    DWORD PTR [edx+0x35],0x8eb90b5e
  41af95:	in     al,dx
  41af96:	sub    eax,0xc9838bd1
  41af9b:	int3   
  41af9c:	stc    
  41af9d:	outs   dx,BYTE PTR ds:[esi]
  41af9e:	push   edi
  41af9f:	sbb    eax,0xf2b33a24
  41afa4:	mov    esi,0x6e1e40d1
  41afa9:	inc    ecx
  41afaa:	jnp    0x41af9b
  41afac:	js     0x41b028
  41afae:	xchg   ecx,eax
  41afaf:	arpl   WORD PTR [ebx],bp
  41afb1:	lods   al,BYTE PTR ds:[esi]
  41afb2:	je     0x41af73
  41afb4:	mov    ebx,0xc3517e88
  41afb9:	sbb    DWORD PTR [ebp-0x2b44f703],0xc5d76842
  41afc3:	int    0x45
  41afc5:	ret    
  41afc6:	push   0x307e8397
  41afcb:	pop    ss
  41afcc:	inc    esi
  41afcd:	pop    ecx
  41afce:	mov    cs,WORD PTR [ecx+0x71f6d5fe]
  41afd4:	sub    al,0x3
  41afd6:	xchg   edi,eax
  41afd7:	sbb    DWORD PTR [ebp+0x2b],0x54e84ef0
  41afde:	rcl    DWORD PTR [ecx+0x65c6ad6a],cl
  41afe4:	xor    DWORD PTR [ecx+0x26f7bed7],ebx
  41afea:	dec    ecx
  41afeb:	jb     0x41aff2
  41afed:	add    dl,0xcf
  41aff0:	push   0x25
  41aff2:	inc    ebp
  41aff3:	(bad)  
  41aff5:	mov    edx,0xc9161926
  41affa:	ja     0x41b047
  41affc:	(bad)  
  41affd:	cmp    ah,BYTE PTR [eax+0x62]
  41b000:	test   BYTE PTR [edx+0x627a47ca],bl
  41b006:	enter  0x26b7,0xe3
  41b00a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b00b:	jnp    0x41af9e
  41b00d:	fcomp  QWORD PTR [ebx+0x17]
  41b010:	sbb    al,0xf3
  41b012:	mov    ds:0xf68b9eb,al
  41b017:	jne    0x41b07a
  41b019:	stos   DWORD PTR es:[edi],eax
  41b01a:	mov    edi,0x7c9c6afc
  41b01f:	addr16 jbe 0x41b02d
  41b022:	sti    
  41b023:	inc    esp
  41b024:	jmp    0xfd616686
  41b029:	sbb    DWORD PTR [ebx-0x2c1298b],esp
  41b02f:	adc    al,0xba
  41b031:	fild   DWORD PTR [ecx+0x43f8d203]
  41b037:	ror    DWORD PTR [ecx-0x2ed35753],1
  41b03d:	iret   
  41b03e:	lods   eax,DWORD PTR ds:[esi]
  41b03f:	or     BYTE PTR [edx-0x34],cl
  41b042:	js     0x41b064
  41b044:	fnstcw WORD PTR [ecx]
  41b046:	cmp    eax,0xb01ce90
  41b04b:	cmp    BYTE PTR [ebx*8+0x59be5039],0x42
  41b053:	call   0x1973:0xe64f3dba
  41b05a:	lods   eax,DWORD PTR ds:[esi]
  41b05b:	mov    dh,0xa1
  41b05d:	fnstenv [ebp-0x10]
  41b060:	fs sahf 
  41b062:	lock pop eax
  41b064:	(bad)  [eax]
  41b066:	iret   
  41b067:	call   DWORD PTR [edi+0x59]
  41b06a:	hlt    
  41b06b:	mov    eax,0x3a2a160c
  41b070:	aam    0x2b
  41b072:	pop    es
  41b073:	das    
  41b074:	sti    
  41b075:	das    
  41b076:	call   0x5fbd449
  41b07b:	push   eax
  41b07c:	and    DWORD PTR [ebx],0xc465f0b0
  41b082:	jmp    0xf3e2:0x8e14bb8c
  41b089:	jb     0x41b01c
  41b08b:	jge    0x41b098
  41b08d:	test   ebx,esp
  41b08f:	test   BYTE PTR [ecx],ch
  41b091:	jg     0x41b057
  41b093:	aad    0x48
  41b095:	nop
  41b096:	push   0x71
  41b098:	das    
  41b099:	lea    edx,[edx]
  41b09b:	add    DWORD PTR [ebp+0x5da3f154],esi
  41b0a1:	jmp    0x8492fcc6
  41b0a6:	jae    0x41b122
  41b0a8:	int    0xc9
  41b0aa:	hlt    
  41b0ab:	ficom  DWORD PTR [edi-0x78]
  41b0ae:	aad    0xef
  41b0b0:	xlat   BYTE PTR ds:[ebx]
  41b0b1:	and    al,0x36
  41b0b3:	and    edx,edi
  41b0b5:	sti    
  41b0b6:	into   
  41b0b7:	push   eax
  41b0b8:	sahf   
  41b0b9:	mov    dh,0x6
  41b0bb:	in     eax,dx
  41b0bc:	sbb    eax,0x1b71eb36
  41b0c1:	out    dx,eax
  41b0c2:	idiv   BYTE PTR [edi+ebx*8-0x7c57e147]
  41b0c9:	lods   al,BYTE PTR ds:[esi]
  41b0ca:	push   edi
  41b0cb:	popa   
  41b0cc:	shl    BYTE PTR [ebx+0x63],0x6
  41b0d0:	mov    fs,ebx
  41b0d2:	cmp    eax,0xc1298244
  41b0d7:	jecxz  0x41b0c3
  41b0d9:	stos   BYTE PTR es:[edi],al
  41b0da:	jb     0x41b0b9
  41b0dc:	xchg   ecx,eax
  41b0dd:	std    
  41b0de:	sbb    ecx,esp
  41b0e0:	or     bl,BYTE PTR [ecx-0x2716fcfb]
  41b0e6:	idiv   dh
  41b0e8:	ret    0xe6ee
  41b0eb:	test   eax,0x593ff9ec
  41b0f0:	pop    ss
  41b0f1:	fnstsw WORD PTR [edx+ebx*2+0x3]
  41b0f5:	jmp    0x41b0c4
  41b0f7:	ja     0x41b0f3
  41b0f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0fa:	mov    WORD PTR [edi-0x6abfa876],?
  41b100:	dec    BYTE PTR [esi+esi*1+0x53]
  41b104:	jmp    0x6a12c32a
  41b109:	cld    
  41b10a:	out    dx,eax
  41b10b:	xor    cl,BYTE PTR [eax+0x249559f7]
  41b111:	xchg   edi,eax
  41b112:	hlt    
  41b113:	cmp    ebp,DWORD PTR [ecx]
  41b115:	mov    dh,0x88
  41b117:	fucomi st,st(2)
  41b119:	rcr    DWORD PTR [edi],0x1f
  41b11c:	inc    esi
  41b11d:	js     0x41b12c
  41b11f:	nop
  41b120:	mov    ?,WORD PTR [edi]
  41b122:	cs push ebx
  41b124:	int3   
  41b125:	shl    DWORD PTR ds:0xa3dcdb0a,1
  41b12b:	cmp    eax,0xa799a93b
  41b130:	xchg   esp,esp
  41b132:	out    dx,eax
  41b133:	into   
  41b134:	mov    ah,0x83
  41b136:	dec    esi
  41b137:	out    0x35,eax
  41b139:	cld    
  41b13a:	push   0xffffffcc
  41b13c:	mov    edi,0x9c446765
  41b141:	xchg   DWORD PTR [ebp+0x3b],eax
  41b144:	sar    edi,1
  41b146:	jl     0x41b177
  41b148:	and    BYTE PTR [ecx],al
  41b14a:	das    
  41b14b:	sub    ch,ah
  41b14d:	mov    eax,0xe6afd725
  41b152:	mov    ds:0x41fca5db,al
  41b157:	sbb    eax,edi
  41b159:	and    BYTE PTR cs:0xf7b12e15,al
  41b160:	inc    ecx
  41b161:	dec    esp
  41b162:	sub    esi,edi
  41b164:	xor    edi,DWORD PTR [ebx-0x33]
  41b167:	test   BYTE PTR [esp+edi*4+0x552325c9],dl
  41b16e:	jg     0x41b1b6
  41b170:	(bad)  
  41b171:	mov    WORD PTR [ebx-0xf5bf9a0],ds
  41b177:	jb     0x41b176
  41b179:	jmp    0x41b17e
  41b17b:	imul   ebx,edx,0x3c20aeeb
  41b181:	add    al,0x21
  41b183:	arpl   WORD PTR [edx+edi*4],di
  41b186:	mov    ds:0x16f3c18c,eax
  41b18b:	xlat   BYTE PTR ds:[ebx]
  41b18c:	xchg   DWORD PTR [ebp+0x3edc17c8],esp
  41b192:	xor    BYTE PTR [ebp-0x17e2af3d],al
  41b198:	xor    BYTE PTR [edx-0x1ec27167],al
  41b19e:	push   edx
  41b19f:	aad    0x15
  41b1a1:	mov    WORD PTR [edx-0x3d],fs
  41b1a4:	xor    eax,0xaebb4e59
  41b1a9:	mov    al,ds:0x77d07fac
  41b1ae:	push   edi
  41b1af:	int    0xd7
  41b1b1:	mov    cl,0xfc
  41b1b3:	adc    DWORD PTR [eax+0x3e],eax
  41b1b6:	je     0x41b1dd
  41b1b8:	mov    al,0x63
  41b1ba:	mov    WORD PTR [esp+ebx*4-0x3a911456],?
  41b1c1:	push   ds
  41b1c2:	xchg   ecx,ebp
  41b1c4:	add    ebp,esp
  41b1c6:	int    0x16
  41b1c8:	dec    esi
  41b1c9:	das    
  41b1ca:	or     BYTE PTR [ecx+ebp*2-0x729214b1],bh
  41b1d1:	jge    0x41b206
  41b1d3:	mov    ebx,0x99001292
  41b1d8:	aam    0x35
  41b1da:	mov    ebp,0xabf374dc
  41b1df:	sub    cl,BYTE PTR [ebx+eax*4+0x56]
  41b1e3:	ss inc esi
  41b1e5:	dec    edi
  41b1e6:	xor    BYTE PTR [eax+0x61],ch
  41b1e9:	push   esp
  41b1ea:	shr    BYTE PTR [ecx+0x42cddebd],1
  41b1f0:	pop    edx
  41b1f1:	int    0x46
  41b1f3:	inc    esi
  41b1f4:	mov    ebp,0xa847bbd5
  41b1f9:	in     al,0xda
  41b1fb:	cmp    eax,0x9ec0cd07
  41b200:	in     eax,dx
  41b201:	sbb    BYTE PTR [ecx+edi*8],dh
  41b204:	cmp    cl,BYTE PTR [edi+0x6bb97211]
  41b20a:	fcom   DWORD PTR [esi]
  41b20c:	pushf  
  41b20d:	dec    edi
  41b20e:	and    dh,dl
  41b210:	iret   
  41b211:	aad    0xc6
  41b213:	push   ebx
  41b214:	sub    al,0xee
  41b216:	comiss xmm6,xmm3
  41b219:	loop   0x41b294
  41b21b:	jge    0x41b267
  41b21d:	mov    esi,0xedb280b9
  41b222:	jns    0x41b286
  41b224:	sub    ebp,0xddad4ab3
  41b22a:	rol    DWORD PTR [edx],1
  41b22c:	mov    ch,BYTE PTR ds:0x567a2156
  41b232:	xchg   ebp,eax
  41b233:	lods   al,BYTE PTR ds:[esi]
  41b234:	arpl   WORD PTR [esi+0x71],bx
  41b237:	push   ecx
  41b238:	jmp    0xe478:0x94644140
  41b23f:	push   ss
  41b240:	ds mov esp,0xa8fcb175
  41b246:	jno    0x41b274
  41b248:	(bad)  [esp+eax*1-0x2c]
  41b24c:	or     eax,0x550fdbc0
  41b251:	add    al,BYTE PTR [ebx+edi*8-0x3b]
  41b255:	sbb    BYTE PTR [esi-0x48774736],0xd
  41b25c:	stos   DWORD PTR es:[edi],eax
  41b25d:	pop    edi
  41b25e:	out    0x1f,eax
  41b260:	call   0x9cd67145
  41b265:	jg     0x41b23f
  41b267:	dec    esp
  41b268:	sahf   
  41b269:	mov    edx,0x23b33c36
  41b26e:	push   ds
  41b26f:	cli    
  41b270:	sub    BYTE PTR [edx+ebp*8],bl
  41b273:	out    dx,eax
  41b274:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b275:	loope  0x41b2ec
  41b277:	mov    edx,0xc9efc077
  41b27c:	in     eax,dx
  41b27d:	xchg   esp,eax
  41b27e:	push   ebx
  41b27f:	jge    0x41b29f
  41b281:	sbb    ch,BYTE PTR [eax]
  41b283:	(bad)  
  41b284:	shl    edi,1
  41b286:	inc    ebp
  41b287:	xchg   esp,eax
  41b288:	jmp    0x8fb6a7cd
  41b28d:	out    dx,eax
  41b28e:	jmp    0x6ad1:0xe9cfbf3e
  41b295:	enter  0x82ca,0xc
  41b299:	add    ebp,DWORD PTR [ecx+0x23]
  41b29c:	pop    ss
  41b29d:	inc    ecx
  41b29e:	xchg   edx,eax
  41b29f:	add    ah,dh
  41b2a1:	jns    0x41b31d
  41b2a3:	sub    al,0x72
  41b2a5:	push   es
  41b2a6:	enter  0x5cc6,0x37
  41b2aa:	mov    eax,0x973e22a9
  41b2af:	ja     0x41b24c
  41b2b1:	push   ebx
  41b2b2:	les    ebp,FWORD PTR [ecx]
  41b2b4:	and    DWORD PTR [eax+0x28],0x23
  41b2b8:	sahf   
  41b2b9:	or     dl,BYTE PTR [esi+0x5d]
  41b2bc:	sbb    eax,0xf1c5b5e0
  41b2c1:	lea    esp,[esi+eiz*2-0xa6bf064]
  41b2c8:	add    al,0x52
  41b2ca:	scas   eax,DWORD PTR es:[edi]
  41b2cb:	lods   al,BYTE PTR ds:[esi]
  41b2cc:	pop    ebp
  41b2cd:	xor    al,0x7d
  41b2cf:	dec    ecx
  41b2d0:	mov    al,0x3e
  41b2d2:	inc    ecx
  41b2d3:	scas   al,BYTE PTR es:[edi]
  41b2d4:	js     0x41b2f1
  41b2d6:	sub    BYTE PTR [ebp+0x37f8fb7e],bh
  41b2dc:	and    eax,DWORD PTR [edx-0x163de1c1]
  41b2e2:	dec    esp
  41b2e3:	push   edx
  41b2e4:	xor    DWORD PTR [esi+0x6b157472],ebx
  41b2ea:	inc    ecx
  41b2eb:	icebp  
  41b2ec:	out    dx,eax
  41b2ed:	repz xchg edx,eax
  41b2ef:	aam    0x42
  41b2f1:	clc    
  41b2f2:	repz (bad) 
  41b2f4:	aad    0xbd
  41b2f6:	add    eax,0x9b049e32
  41b2fb:	mov    ebp,eax
  41b2fd:	pop    ss
  41b2fe:	pop    ebx
  41b2ff:	dec    ebx
  41b300:	jmp    0xe0fc88d2
  41b305:	stos   DWORD PTR es:[edi],eax
  41b306:	(bad)  
  41b308:	pop    ss
  41b309:	xlat   BYTE PTR ds:[ebx]
  41b30a:	mov    ebx,0x66122ba6
  41b30f:	cmp    bh,ah
  41b311:	jo     0x41b378
  41b313:	ret    
  41b314:	pop    edi
  41b315:	sub    BYTE PTR [ecx-0x4c],bl
  41b318:	add    bh,BYTE PTR [edx]
  41b31a:	dec    edx
  41b31b:	add    bl,bl
  41b31d:	mov    dl,0xab
  41b31f:	pusha  
  41b320:	add    eax,0xc05e7ba8
  41b325:	cli    
  41b326:	aad    0xcd
  41b328:	popf   
  41b329:	mov    cl,0xd
  41b32b:	and    al,0x26
  41b32d:	lahf   
  41b32e:	xchg   BYTE PTR [edi+ebp*1+0x35],ch
  41b332:	xchg   ecx,eax
  41b333:	jnp    0x41b398
  41b335:	lods   eax,DWORD PTR ds:[esi]
  41b336:	cdq    
  41b337:	(bad)  
  41b338:	pop    edi
  41b339:	or     DWORD PTR [edi-0x41028365],ecx
  41b33f:	dec    edi
  41b340:	lock push edi
  41b342:	fisub  DWORD PTR [ebp-0x32]
  41b345:	xchg   edi,eax
  41b346:	and    BYTE PTR [esi+edi*2],dh
  41b349:	add    BYTE PTR [edx],cl
  41b34b:	repz mov eax,ds:0xcd746a1
  41b351:	xchg   ebx,eax
  41b352:	inc    ecx
  41b353:	pop    edi
  41b354:	(bad)  
  41b356:	int3   
  41b357:	jns    0x41b3b4
  41b359:	push   ebx
  41b35a:	and    al,0x13
  41b35c:	sub    DWORD PTR [ebx+esi*2+0x6d],0x636e5802
  41b364:	repz pop es
  41b366:	push   ebp
  41b367:	mov    esp,0x6daa79b6
  41b36c:	push   cs
  41b36d:	push   esp
  41b36e:	jecxz  0x41b358
  41b370:	add    ch,BYTE PTR [eax+0x8c62891]
  41b376:	xor    ecx,DWORD PTR [esi]
  41b378:	sub    BYTE PTR [ebx],0x7a
  41b37b:	xchg   ebx,eax
  41b37c:	jne    0x41b3b4
  41b37e:	sub    DWORD PTR [edi+0x2f],0x48ad19b1
  41b385:	xchg   DWORD PTR [ecx+0x79f0e1ae],esi
  41b38b:	xlat   BYTE PTR ds:[ebx]
  41b38c:	sub    al,0x50
  41b38e:	lods   eax,DWORD PTR ds:[esi]
  41b38f:	sbb    eax,0x2597bd56
  41b394:	shl    BYTE PTR [esi-0x18],cl
  41b397:	lahf   
  41b398:	add    edi,DWORD PTR [ebx]
  41b39a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b39b:	mov    esi,0x81fefc33
  41b3a0:	xor    DWORD PTR [eax+0x7a82d0df],ecx
  41b3a6:	push   ds
  41b3a7:	mov    esp,0x48b92fa1
  41b3ac:	out    0x56,al
  41b3ae:	js     0x41b377
  41b3b0:	ins    BYTE PTR es:[edi],dx
  41b3b1:	cmc    
  41b3b2:	repz cdq 
  41b3b4:	xchg   edi,eax
  41b3b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3b6:	or     DWORD PTR [edx+0x33],ecx
  41b3b9:	out    dx,eax
  41b3ba:	popa   
  41b3bb:	repnz xchg esi,eax
  41b3bd:	jno    0x41b3c1
  41b3bf:	pop    es
  41b3c0:	aas    
  41b3c1:	inc    BYTE PTR [eax]
  41b3c3:	xchg   edi,eax
  41b3c4:	pop    esi
  41b3c5:	add    dl,BYTE PTR [edx-0x7b5e0a1b]
  41b3cb:	addr16 mov ds:0xbdb2,eax
  41b3cf:	pop    ds
  41b3d0:	dec    ax
  41b3d2:	adc    BYTE PTR [ebx+eiz*1+0x17],al
  41b3d6:	pop    esi
  41b3d7:	sahf   
  41b3d8:	inc    eax
  41b3d9:	push   esi
  41b3da:	int3   
  41b3db:	jp     0x41b41d
  41b3dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3de:	jl     0x41b42f
  41b3e0:	xor    bh,dl
  41b3e2:	iret   
  41b3e3:	add    ebp,ecx
  41b3e5:	lods   eax,DWORD PTR ds:[esi]
  41b3e6:	stos   BYTE PTR es:[edi],al
  41b3e7:	out    dx,eax
  41b3e8:	xchg   DWORD PTR [edx+0x2e],edi
  41b3eb:	aam    0x99
  41b3ed:	sbb    eax,0xc3649e12
  41b3f2:	mov    ecx,0x50ba3ec
  41b3f7:	add    bl,al
  41b3f9:	addr16 pop ds
  41b3fb:	fld    QWORD PTR [edx]
  41b3fd:	and    al,0xcb
  41b3ff:	cmc    
  41b400:	jp     0x41b413
  41b402:	xchg   BYTE PTR [ecx+edi*1],al
  41b405:	or     DWORD PTR [edx],eax
  41b407:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b408:	inc    esi
  41b409:	sbb    BYTE PTR ds:0x5d824604,dh
  41b40f:	out    0xb7,eax
  41b411:	rcl    BYTE PTR [edx],0xf7
  41b414:	call   0x886d:0x85d76ed4
  41b41b:	test   eax,0xd29b57da
  41b420:	call   0xe73d6099
  41b425:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b426:	hlt    
  41b427:	jbe    0x41b450
  41b429:	ss (bad) 
  41b42b:	xor    edx,DWORD PTR [edx+0x6d]
  41b42e:	in     eax,dx
  41b42f:	sub    ch,ch
  41b431:	data16 fld TBYTE PTR [edi]
  41b434:	push   edx
  41b435:	push   ebx
  41b436:	adc    BYTE PTR [eax-0x2],cl
  41b439:	daa    
  41b43a:	pusha  
  41b43b:	(bad)  
  41b43c:	sub    ecx,ecx
  41b43e:	sub    esi,edi
  41b440:	xchg   BYTE PTR [edi+edx*1],bl
  41b443:	cmp    DWORD PTR [eax],ebx
  41b445:	cmp    al,0xe0
  41b447:	jge    0x41b4b3
  41b449:	push   ebp
  41b44a:	cdq    
  41b44b:	std    
  41b44c:	popa   
  41b44d:	imul   ebx,DWORD PTR [eax+esi*2],0xffffffdb
  41b451:	mov    ecx,0x393c12d3
  41b456:	add    BYTE PTR [ebp-0x70],al
  41b459:	ins    DWORD PTR es:[edi],dx
  41b45a:	les    ecx,FWORD PTR [eax-0x2c733444]
  41b460:	push   ss
  41b461:	out    dx,eax
  41b462:	test   eax,0xc5bf2784
  41b467:	push   esi
  41b468:	add    al,BYTE PTR [ebx-0x40]
  41b46b:	leave  
  41b46c:	push   ecx
  41b46d:	imul   edi,DWORD PTR [ecx-0x78],0xffffffa9
  41b471:	int3   
  41b472:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b473:	out    0x27,al
  41b475:	inc    esi
  41b476:	pusha  
  41b477:	pushf  
  41b478:	(bad)  
  41b47a:	adc    eax,0xa7acec
  41b47f:	pushf  
  41b480:	es xchg edx,eax
  41b482:	jp     0x41b495
  41b484:	and    ebp,esi
  41b486:	setno  BYTE PTR [esi+0x13]
  41b48a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b48b:	mov    bl,0x70
  41b48d:	push   eax
  41b48e:	xchg   eax,esi
  41b490:	dec    esi
  41b491:	inc    eax
  41b492:	sub    BYTE PTR ds:0x6ede237c,0xb9
  41b499:	nop
  41b49a:	imul   eax,DWORD PTR [eax-0x11263201],0x6c9afb5
  41b4a4:	fldcw  WORD PTR [ebx]
  41b4a6:	mov    dl,0xac
  41b4a8:	mov    ah,0x81
  41b4aa:	arpl   WORD PTR [esi-0x4b804ddc],di
  41b4b0:	dec    eax
  41b4b1:	popa   
  41b4b2:	mov    bh,BYTE PTR [ecx+0x2725736f]
  41b4b8:	cmp    eax,0x5385d664
  41b4bd:	mov    esi,0xdda1a14b
  41b4c2:	xchg   ebp,eax
  41b4c3:	dec    ebx
  41b4c4:	imul   esp,DWORD PTR [edx+0x6cfdd516],0x0
  41b4cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4cc:	and    ebx,DWORD PTR [esi+0x6]
  41b4cf:	fcomip st,st(6)
  41b4d1:	mov    DWORD PTR [edx+0x2a5a8b17],ecx
  41b4d7:	test   eax,0x2242c5df
  41b4dc:	mov    esp,0x342d9c46
  41b4e1:	mov    bl,0x2b
  41b4e3:	aam    0x6a
  41b4e5:	add    al,0xf9
  41b4e7:	jae    0x41b485
  41b4e9:	ins    DWORD PTR es:[edi],dx
  41b4ea:	or     edx,eax
  41b4ec:	cmp    eax,0x25474ea0
  41b4f1:	test   ebp,esi
  41b4f3:	lods   eax,DWORD PTR ds:[esi]
  41b4f4:	pop    es
  41b4f5:	pop    edi
  41b4f6:	pop    ebx
  41b4f7:	out    dx,eax
  41b4f8:	xor    al,0x5c
  41b4fa:	push   ds
  41b4fb:	pop    eax
  41b4fc:	xchg   BYTE PTR [ebx+0x67210926],ah
  41b502:	pop    ecx
  41b503:	mov    ch,0xb1
  41b505:	gs nop
  41b507:	stc    
  41b508:	test   edi,edx
  41b50a:	jne    0x41b555
  41b50c:	sti    
  41b50d:	lods   eax,DWORD PTR ds:[esi]
  41b50e:	mov    eax,ds:0x27130e34
  41b513:	fdivr  st,st(0)
  41b515:	shr    BYTE PTR [ecx+ecx*1],cl
  41b518:	add    esp,esi
  41b51a:	jecxz  0x41b4ae
  41b51c:	fcmovnbe st,st(3)
  41b51e:	push   edi
  41b51f:	aaa    
  41b520:	mov    al,0x10
  41b522:	test   cl,al
  41b524:	ret    0xc765
  41b527:	add    BYTE PTR [ecx-0x2ecfc5af],bh
  41b52d:	dec    esp
  41b52e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b52f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b530:	fsub   st,st(7)
  41b532:	add    al,0xbe
  41b534:	mov    esi,DWORD PTR fs:[esi-0x24032850]
  41b53b:	inc    eax
  41b53c:	popa   
  41b53d:	mov    bl,0x58
  41b53f:	mov    WORD PTR [edx-0x11],?
  41b542:	ds xchg edx,eax
  41b544:	jo     0x41b597
  41b546:	and    al,0xa8
  41b548:	pusha  
  41b549:	test   al,0x9e
  41b54b:	mov    edi,0x40ef71cb
  41b550:	xor    BYTE PTR [ebx],ch
  41b552:	add    eax,0x9e09ed4f
  41b557:	sbb    eax,0xb1fc6d12
  41b55c:	imul   ebp,DWORD PTR [ebx-0x70855054],0x13
  41b563:	push   cs
  41b564:	dec    esp
  41b565:	loopne 0x41b5b3
  41b567:	stc    
  41b568:	push   ss
  41b569:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b56a:	push   0x6f02a817
  41b56f:	js     0x41b5c8
  41b571:	xor    eax,0xad327aff
  41b576:	jge    0x41b5b5
  41b578:	adc    esi,DWORD PTR [ebx+0x7403172d]
  41b57e:	or     BYTE PTR [ebx-0x78],bl
  41b581:	jmp    0x1eee70d9
  41b586:	sbb    DWORD PTR [ecx-0x798c19b5],esp
  41b58c:	and    eax,0xb464cd65
  41b591:	fsubr  QWORD PTR [ecx-0x2b]
  41b594:	out    dx,al
  41b595:	mov    sp,0xb406
  41b599:	jle    0x41b5c6
  41b59b:	scas   al,BYTE PTR es:[edi]
  41b59c:	test   al,0x4
  41b59e:	push   cs
  41b59f:	sbb    esi,DWORD PTR [esp+edi*4+0x13]
  41b5a3:	push   ebp
  41b5a4:	ins    DWORD PTR es:[edi],dx
  41b5a5:	and    BYTE PTR [ebx-0x15d8bcd6],ch
  41b5ab:	in     eax,0x95
  41b5ad:	cmp    al,0x2e
  41b5af:	adc    BYTE PTR [ebx-0x4ce9a8a9],ch
  41b5b5:	sbb    ah,cl
  41b5b7:	dec    ebp
  41b5b8:	jae    0x41b5d3
  41b5ba:	push   esp
  41b5bb:	dec    DWORD PTR [edi-0x79]
  41b5be:	enter  0x57d5,0xb6
  41b5c2:	into   
  41b5c3:	or     eax,0x333acca3
  41b5c8:	add    al,0xf
  41b5ca:	inc    edi
  41b5cb:	ins    BYTE PTR es:[edi],dx
  41b5cc:	ret    
  41b5cd:	es push ebp
  41b5cf:	scas   al,BYTE PTR es:[edi]
  41b5d0:	int3   
  41b5d1:	ror    DWORD PTR [edx],0x80
  41b5d4:	loope  0x41b63b
  41b5d6:	inc    edx
  41b5d7:	pop    eax
  41b5d8:	inc    esp
  41b5d9:	cli    
  41b5da:	cmp    dh,0x78
  41b5dd:	loopne 0x41b5d3
  41b5df:	in     eax,0xbb
  41b5e1:	or     eax,DWORD PTR [esi+ebp*2+0x2d]
  41b5e5:	neg    DWORD PTR [edx-0x63]
  41b5e8:	xor    edi,DWORD PTR [edx-0x14]
  41b5eb:	adc    ebx,DWORD PTR [edi]
  41b5ed:	mov    bh,0xa6
  41b5ef:	and    al,0x56
  41b5f1:	sbb    eax,0xb8a5b484
  41b5f6:	cwde   
  41b5f7:	mov    DWORD PTR [edx],ebp
  41b5f9:	clc    
  41b5fa:	or     BYTE PTR [esi-0x11c38044],dl
  41b600:	std    
  41b601:	loopne 0x41b5c6
  41b603:	sbb    BYTE PTR [ebp-0x1e],cl
  41b606:	and    BYTE PTR [esi+0xc62a0db],bl
  41b60c:	jmp    0x41b60e
  41b60e:	outs   dx,DWORD PTR ds:[esi]
  41b60f:	fistp  QWORD PTR [eax]
  41b611:	shl    BYTE PTR [ebp+0x5c965130],0x3e
  41b618:	lea    edx,[ebp+0x51]
  41b61b:	out    0xb6,eax
  41b61d:	pop    ss
  41b61e:	(bad)  
  41b61f:	cld    
  41b620:	xlat   BYTE PTR ds:[ebx]
  41b621:	jmp    0x7603436d
  41b626:	mov    ebp,0xef6de9b0
  41b62b:	psubq  mm2,mm1
  41b62e:	pusha  
  41b62f:	jmp    0x215f:0x75283ecb
  41b636:	add    ecx,DWORD PTR [eax+0x56]
  41b639:	push   cs
  41b63a:	loopne 0x41b5f0
  41b63c:	sti    
  41b63d:	lahf   
  41b63e:	xor    bh,ah
  41b640:	(bad)  
  41b641:	sbb    edx,DWORD PTR [edx+edi*1+0x64]
  41b645:	or     al,0xbe
  41b647:	xor    esp,DWORD PTR [edx-0x22]
  41b64a:	lds    ebx,FWORD PTR [ecx-0x61]
  41b64d:	in     eax,0xb0
  41b64f:	push   0xf8a153f8
  41b654:	scas   al,BYTE PTR es:[edi]
  41b655:	rol    DWORD PTR [ebp+0x2d1832a2],1
  41b65b:	retf   0x69e0
  41b65e:	ret    
  41b65f:	mov    edi,DWORD PTR [eax]
  41b661:	lea    esp,[esi+0x5108d27d]
  41b667:	cdq    
  41b668:	jmp    0xf9a9:0x27a469e7
  41b66f:	fadd   st,st(5)
  41b671:	push   ds
  41b672:	mov    al,ds:0x18d3738e
  41b677:	dec    esi
  41b678:	icebp  
  41b679:	hlt    
  41b67a:	(bad)  
  41b67b:	icebp  
  41b67c:	cmp    al,0x41
  41b67e:	fistp  DWORD PTR [ecx-0x406ce47c]
  41b684:	push   ebp
  41b685:	sbb    eax,0x149b7a0a
  41b68a:	aad    0x84
  41b68c:	sti    
  41b68d:	in     al,0xe4
  41b68f:	(bad)  
  41b690:	xchg   ebx,eax
  41b691:	(bad)  
  41b692:	jge    0x90a3d620
  41b698:	lods   al,BYTE PTR ds:[esi]
  41b699:	mov    dh,0x66
  41b69b:	aad    0x77
  41b69d:	sti    
  41b69e:	adc    BYTE PTR [ebp-0x3e],al
  41b6a1:	sti    
  41b6a2:	mov    BYTE PTR [ebx-0xaa9d385],0x24
  41b6a9:	sbb    esp,eax
  41b6ab:	mov    al,ds:0x9c5cd6fd
  41b6b0:	ret    
  41b6b1:	cld    
  41b6b2:	cli    
  41b6b3:	mov    esi,0xdad82b9d
  41b6b8:	mov    ebp,0x39675cdf
  41b6bd:	ss (bad) 
  41b6bf:	cld    
  41b6c0:	xor    ah,BYTE PTR [edi-0x1b09b56f]
  41b6c6:	ficomp WORD PTR [eax]
  41b6c8:	sbb    DWORD PTR [eax+0x3c],edx
  41b6cb:	jle    0x41b6f4
  41b6cd:	dec    eax
  41b6ce:	xchg   DWORD PTR [ebx],ebx
  41b6d0:	xchg   esp,eax
  41b6d1:	enter  0xafd9,0xb1
  41b6d5:	inc    esi
  41b6d6:	dec    ecx
  41b6d7:	sbb    esi,edx
  41b6d9:	fdiv   DWORD PTR [eax]
  41b6db:	pop    edx
  41b6dc:	in     eax,0xd4
  41b6de:	outs   dx,DWORD PTR ds:[esi]
  41b6df:	mov    cl,0x1
  41b6e1:	inc    edx
  41b6e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6e3:	add    dh,al
  41b6e5:	fiadd  DWORD PTR [eax]
  41b6e7:	retf   0xa834
  41b6ea:	jns    0x41b6ab
  41b6ec:	adc    ch,BYTE PTR [eax+0x21dd1358]
  41b6f2:	cmp    eax,0x270d5461
  41b6f7:	and    BYTE PTR [ebx],bh
  41b6f9:	pop    edx
  41b6fa:	sar    ebp,cl
  41b6fc:	int3   
  41b6fd:	mov    cl,0xc7
  41b6ff:	test   ebp,0xa63dec10
  41b705:	xor    al,0xcd
  41b707:	pop    ecx
  41b708:	mov    ah,0x34
  41b70a:	fwait
  41b70b:	lahf   
  41b70c:	call   0xcb9e:0xf2025681
  41b713:	out    dx,eax
  41b714:	cmp    bh,0xc4
  41b717:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b718:	stos   BYTE PTR es:[edi],al
  41b719:	mov    ebp,DWORD PTR [esi-0x102707e6]
  41b71f:	gs dec esp
  41b721:	cmc    
  41b722:	push   0x2a0f84c0
  41b727:	in     eax,dx
  41b728:	fnsave [edx]
  41b72a:	push   ecx
  41b72b:	cmp    eax,DWORD PTR [eax]
  41b72d:	inc    ebx
  41b72e:	jmp    0x4594ea86
  41b733:	pop    ds
  41b734:	out    0x2b,eax
  41b736:	xchg   edx,eax
  41b737:	fisttp DWORD PTR [eax]
  41b739:	popa   
  41b73a:	or     BYTE PTR [edx+esi*1-0x62],ch
  41b73e:	test   al,0x7c
  41b740:	push   ebp
  41b741:	stos   DWORD PTR es:[edi],eax
  41b742:	push   edi
  41b743:	cmp    ecx,DWORD PTR [edi]
  41b745:	cmpxchg DWORD PTR [ecx+0x19e07bed],ebx
  41b74c:	bound  ebp,QWORD PTR [ecx]
  41b74e:	xor    edx,eax
  41b750:	int3   
  41b751:	pop    ebx
  41b752:	idiv   DWORD PTR [ebp+0x55d7eb37]
  41b758:	addr16 enter 0x414f,0x74
  41b75d:	add    dh,ah
  41b75f:	mov    esp,0x1a904494
  41b764:	jmp    0x512000c8
  41b769:	test   eax,0xfb47cebf
  41b76e:	jns    0x41b7ab
  41b770:	in     eax,dx
  41b771:	add    eax,0xe100949d
  41b776:	mov    esi,0x32439dcd
  41b77b:	retf   
  41b77c:	add    eax,0x59e6c541
  41b781:	pop    es
  41b782:	push   es
  41b783:	xchg   ecx,eax
  41b784:	dec    edi
  41b785:	rcr    dl,1
  41b787:	pushf  
  41b788:	cwde   
  41b789:	or     DWORD PTR [ecx-0x273bfba5],esp
  41b78f:	stos   DWORD PTR es:[edi],eax
  41b790:	test   al,0x61
  41b792:	inc    ebx
  41b793:	stc    
  41b794:	data16 fisub WORD PTR [edi]
  41b797:	mov    DWORD PTR [ebp+0xaf405b3],esi
  41b79d:	retf   
  41b79e:	dec    esi
  41b79f:	shr    DWORD PTR [eax+0x5a59fca2],cl
  41b7a5:	mov    eax,0xc96749b5
  41b7aa:	ins    DWORD PTR es:[edi],dx
  41b7ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7ac:	popf   
  41b7ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7ae:	test   eax,0xb7851cba
  41b7b3:	pop    eax
  41b7b4:	int3   
  41b7b5:	aas    
  41b7b6:	sub    dl,BYTE PTR [ebx]
  41b7b8:	(bad)  
  41b7b9:	fistp  DWORD PTR [eax-0x238795e9]
  41b7bf:	add    al,BYTE PTR [esi]
  41b7c1:	mov    al,ds:0x6c51d26e
  41b7c6:	xchg   esi,eax
  41b7c7:	ret    0x510e
  41b7ca:	mov    esi,0x5d645e11
  41b7cf:	mov    dl,0x90
  41b7d1:	and    al,0x3
  41b7d3:	dec    ecx
  41b7d4:	fsub   DWORD PTR [ebx+ecx*1+0x69074b48]
  41b7db:	es loopne 0x41b77b
  41b7de:	dec    ecx
  41b7df:	jbe    0x41b84f
  41b7e1:	sbb    al,0xee
  41b7e3:	xor    esp,DWORD PTR [edi-0xfb7271]
  41b7e9:	sar    DWORD PTR ds:0xa94062a9,1
  41b7ef:	mov    ebx,0x2a50b547
  41b7f4:	and    al,0x54
  41b7f6:	cdq    
  41b7f7:	push   es
  41b7f8:	mov    ds:0x9c9f1e33,eax
  41b7fd:	jb     0x41b813
  41b7ff:	jmp    0x96b5:0x20a27ca9
  41b806:	mov    esp,esi
  41b808:	xor    al,0x5e
  41b80a:	xchg   BYTE PTR [eax-0x53],bh
  41b80d:	outs   dx,BYTE PTR ds:[esi]
  41b80e:	or     BYTE PTR [ebx],ch
  41b810:	scas   al,BYTE PTR es:[edi]
  41b811:	mov    dl,0x25
  41b813:	into   
  41b814:	mov    ss,WORD PTR [ebx]
  41b816:	adc    DWORD PTR [edi],esp
  41b818:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b819:	std    
  41b81a:	xchg   edx,eax
  41b81b:	cdq    
  41b81c:	or     al,0x93
  41b81e:	fs dec ebx
  41b820:	cli    
  41b821:	jge    0x41b825
  41b823:	dec    eax
  41b824:	fsub   DWORD PTR [bp+di-0x6619]
  41b829:	push   es
  41b82a:	and    BYTE PTR [ebx+0x5e4af41f],bh
  41b830:	push   0x55776ff8
  41b835:	sbb    esp,ebx
  41b837:	cdq    
  41b838:	sbb    cl,BYTE PTR [ebp-0x3d]
  41b83b:	cwde   
  41b83c:	dec    edi
  41b83d:	dec    ebx
  41b83e:	test   DWORD PTR [ecx+edi*2],eax
  41b841:	dec    edx
  41b842:	retf   0x4eb7
  41b845:	xor    al,ch
  41b847:	les    esp,FWORD PTR [eax]
  41b849:	jae    0x41b80e
  41b84b:	mov    dl,0x41
  41b84d:	in     eax,0x6b
  41b84f:	pop    eax
  41b850:	cmc    
  41b851:	xchg   ebx,eax
  41b852:	arpl   di,bp
  41b854:	push   esi
  41b855:	push   edx
  41b856:	or     eax,0xecb79156
  41b85b:	test   DWORD PTR [ecx-0x49],ecx
  41b85e:	fist   WORD PTR [eax+edi*4]
  41b861:	push   edx
  41b862:	push   esp
  41b863:	pop    edi
  41b864:	mov    ?,ebx
  41b866:	popa   
  41b867:	mov    DWORD PTR [edx],edx
  41b869:	mov    dl,0x2e
  41b86b:	inc    esp
  41b86c:	or     al,0xe9
  41b86e:	dec    edx
  41b86f:	retf   
  41b870:	add    esi,DWORD PTR [edx-0x5a]
  41b873:	jle    0x41b89b
  41b875:	test   al,0x1f
  41b877:	mov    edi,0x379a3861
  41b87c:	loopne 0x41b829
  41b87e:	xor    eax,0xed8ed42d
  41b883:	mov    ecx,0x601f7b90
  41b888:	ret    0x5fca
  41b88b:	or     al,0x3
  41b88d:	icebp  
  41b88e:	pop    ss
  41b88f:	mov    eax,0xf24a1623
  41b894:	xor    BYTE PTR [ebp-0x2b13eeb5],bh
  41b89a:	jle    0x41b87c
  41b89c:	loopne 0x41b905
  41b89e:	inc    ebx
  41b89f:	add    edi,edx
  41b8a1:	xchg   ebp,eax
  41b8a2:	push   edi
  41b8a3:	mov    eax,0x736007ed
  41b8a8:	jl     0x41b853
  41b8aa:	xor    DWORD PTR [ecx-0x1],0x70
  41b8ae:	inc    ebp
  41b8af:	xor    al,0xfd
  41b8b1:	mov    bl,0xfa
  41b8b3:	test   BYTE PTR [ebp-0x64e73a2a],bh
  41b8b9:	ret    0xaf69
  41b8bc:	enter  0x9a7,0x6f
  41b8c0:	ins    DWORD PTR es:[edi],dx
  41b8c1:	imul   ebp,DWORD PTR [ebp-0x5d6a3efb],0xec146346
  41b8cb:	mov    ds:0x61bd2d86,eax
  41b8d0:	test   BYTE PTR [ebx],0x2c
  41b8d3:	rcl    DWORD PTR [esi],1
  41b8d5:	sbb    BYTE PTR ds:[edx-0x129ccd5c],dh
  41b8dc:	inc    esi
  41b8dd:	xor    bh,BYTE PTR [edi-0x5e0682b8]
  41b8e3:	cmp    DWORD PTR [edi+edx*4+0x27],ebx
  41b8e7:	cmp    DWORD PTR [ebx],ebp
  41b8e9:	iret   
  41b8ea:	add    al,0xa7
  41b8ec:	sbb    bh,BYTE PTR [ecx-0x72aa06a8]
  41b8f2:	std    
  41b8f3:	es push esp
  41b8f5:	cmp    eax,0xf5fc8721
  41b8fa:	rol    DWORD PTR [eax+0x339ffa28],cl
  41b900:	call   DWORD PTR ds:0xd7598381
  41b906:	repnz add BYTE PTR [ebp-0x30faae8d],ch
  41b90d:	mov    eax,ds:0x25e357c6
  41b912:	xor    esi,DWORD PTR [edi-0x2665e1d8]
  41b918:	retf   
  41b919:	pop    ds
  41b91a:	shl    DWORD PTR [ebx],0xf6
  41b91d:	imul   ebx,DWORD PTR [edi+0x26],0x1d6bc710
  41b924:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b925:	jns    0x41b8e2
  41b927:	mov    ebp,0xddb2bfec
  41b92c:	xchg   esp,eax
  41b92d:	xchg   ecx,eax
  41b92e:	lods   al,BYTE PTR ds:[esi]
  41b92f:	mov    edi,0x442a65d7
  41b934:	mov    ds:0xcc6cb4eb,eax
  41b939:	cmp    DWORD PTR [ecx+0xe451677],ebx
  41b93f:	in     eax,dx
  41b940:	das    
  41b941:	xor    DWORD PTR [esp+ebp*4-0x3e71bf51],edi
  41b948:	xor    al,BYTE PTR [edx+edi*8+0x48]
  41b94c:	ins    BYTE PTR es:[edi],dx
  41b94d:	and    esp,edi
  41b94f:	lods   eax,DWORD PTR ds:[esi]
  41b950:	jbe    0x41b94f
  41b952:	dec    ebx
  41b953:	dec    ecx
  41b954:	inc    ebx
  41b955:	or     BYTE PTR [ebx],cl
  41b957:	imul   ebp,DWORD PTR [ecx],0xf1dcea13
  41b95d:	adc    ch,BYTE PTR [esi+0x5e]
  41b960:	shr    BYTE PTR ds:0xcb991cf6,1
  41b966:	dec    esp
  41b967:	popf   
  41b968:	leave  
  41b969:	sbb    BYTE PTR [esi-0x1de86365],ah
  41b96f:	pop    ss
  41b970:	fwait
  41b971:	inc    esp
  41b972:	add    eax,0xda422401
  41b977:	xor    cl,BYTE PTR [ebx+0x5c]
  41b97a:	adc    eax,0x97ee50f9
  41b97f:	push   edx
  41b980:	add    DWORD PTR [eax],ecx
  41b982:	and    ah,BYTE PTR [ebp+0x252a1ee9]
  41b988:	(bad)  
  41b989:	aam    0x9a
  41b98b:	mov    ds:0x2f57b216,eax
  41b990:	in     eax,0x52
  41b992:	jmp    0x41b95e
  41b994:	shl    BYTE PTR [edx-0x73bc90a9],cl
  41b99a:	push   0x66
  41b99c:	les    esi,FWORD PTR [ecx-0x75]
  41b99f:	cmp    edx,ecx
  41b9a1:	sti    
  41b9a2:	dec    ebx
  41b9a3:	test   eax,0x5d719ac4
  41b9a8:	dec    edx
  41b9a9:	(bad)  
  41b9aa:	in     al,dx
  41b9ab:	cwde   
  41b9ac:	pop    ebp
  41b9ad:	bound  edx,QWORD PTR [esi]
  41b9af:	pusha  
  41b9b0:	dec    ebp
  41b9b1:	cmp    DWORD PTR [edx-0x75],0xffffff87
  41b9b5:	ret    0xc8c5
  41b9b8:	stc    
  41b9b9:	push   es
  41b9ba:	pushf  
  41b9bb:	pop    esp
  41b9bc:	das    
  41b9bd:	mov    BYTE PTR [ebx+0x6f],bh
  41b9c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9c1:	mov    dh,0x75
  41b9c3:	inc    esi
  41b9c4:	gs push edx
  41b9c6:	aad    0xf4
  41b9c8:	(bad)  
  41b9c9:	inc    eax
  41b9ca:	loop   0x41ba2c
  41b9cc:	or     DWORD PTR [edi-0x3ee9d12],0xce3b2ed5
  41b9d6:	shl    DWORD PTR [esp+edi*8],1
  41b9d9:	cmp    ecx,DWORD PTR [edx+eax*8-0x63e79102]
  41b9e0:	jne    0x41ba3b
  41b9e2:	out    0xcf,eax
  41b9e4:	sub    esp,DWORD PTR [ebx-0x4a]
  41b9e7:	in     eax,0x52
  41b9e9:	cmp    bl,BYTE PTR ds:[edx+0x30]
  41b9ed:	add    edi,DWORD PTR ds:0xdd6c3d92
  41b9f3:	cwde   
  41b9f4:	mov    al,ds:0xe1f7797f
  41b9f9:	and    BYTE PTR [eax],0x9b
  41b9fc:	sub    eax,0x2e19713a
  41ba01:	daa    
  41ba02:	mov    dl,0x7c
  41ba04:	loope  0x41b9b0
  41ba06:	fincstp 
  41ba08:	mov    ds:0xb84ab29c,eax
  41ba0d:	xchg   ecx,eax
  41ba0e:	sub    cl,0x23
  41ba11:	pop    edx
  41ba12:	inc    esi
  41ba13:	out    0x48,al
  41ba15:	inc    esi
  41ba16:	in     eax,0xe5
  41ba18:	xchg   esi,eax
  41ba19:	sub    DWORD PTR [ecx+0x9],0xda0f5dab
  41ba20:	loopne 0x41b9cf
  41ba22:	adc    al,ch
  41ba24:	sub    al,0xb8
  41ba26:	es retf 
  41ba28:	pop    ss
  41ba29:	or     eax,0x44609699
  41ba2e:	cmc    
  41ba2f:	fadd   QWORD PTR [esi]
  41ba31:	ja     0x41ba10
  41ba33:	outs   dx,BYTE PTR ds:[esi]
  41ba34:	cli    
  41ba35:	sar    BYTE PTR [eax],0x14
  41ba38:	out    dx,al
  41ba39:	out    0x1b,al
  41ba3b:	rcl    DWORD PTR [ecx+0x626497dc],cl
  41ba41:	add    BYTE PTR [eax],0xa7
  41ba44:	fstp   TBYTE PTR [esi+0x3bb62dc3]
  41ba4a:	les    edi,FWORD PTR ds:0xcf54a8c3
  41ba50:	ror    DWORD PTR [ebx+ebx*8-0x7e582cc7],cl
  41ba57:	cmp    al,0x1b
  41ba59:	add    ebp,esp
  41ba5b:	jl     0x41ba90
  41ba5d:	jp     0x41b9fc
  41ba5f:	(bad)  
  41ba61:	ja     0x41babc
  41ba63:	or     BYTE PTR [edx+0x74],0xd6
  41ba67:	rol    DWORD PTR [esi],1
  41ba69:	mov    ebx,0xa2ab3aa4
  41ba6e:	inc    edi
  41ba6f:	(bad)  
  41ba70:	call   0xcf17e775
  41ba75:	test   eax,0xd0b2b8f7
  41ba7a:	push   edi
  41ba7b:	xor    DWORD PTR [ebp-0x5f],ecx
  41ba7e:	cwde   
  41ba7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba80:	shr    BYTE PTR [ecx+0x4d],1
  41ba83:	xor    DWORD PTR [edx+0x5d],ebx
  41ba86:	adc    esp,esi
  41ba88:	cmp    dl,BYTE PTR [edi-0x1173a6ea]
  41ba8e:	sbb    ebx,esp
  41ba90:	je     0x41ba2a
  41ba92:	xchg   ecx,eax
  41ba93:	daa    
  41ba94:	outs   dx,DWORD PTR ds:[esi]
  41ba95:	lea    ebp,[ebp+0x1a]
  41ba98:	es repnz (bad) 
  41ba9b:	out    0xb0,al
  41ba9d:	add    BYTE PTR [ebx],bh
  41ba9f:	sub    DWORD PTR [edi-0x1],0xffffffaf
  41baa3:	pop    ebx
  41baa4:	jbe    0x41baaa
  41baa6:	or     eax,0xb8f53fe5
  41baab:	ds loope 0x41ba2f
  41baae:	push   eax
  41baaf:	push   ss
  41bab0:	cmp    bl,BYTE PTR [ebx]
  41bab2:	stc    
  41bab3:	out    0xfe,eax
  41bab5:	push   ebx
  41bab6:	jo     0x41babb
  41bab8:	jmp    0x1575:0x95d839ef
  41babf:	push   cs
  41bac0:	xor    esi,esp
  41bac2:	lea    ebx,ds:0x8dabbc55
  41bac8:	les    esi,FWORD PTR ds:0x5d2bc32f
  41bace:	arpl   WORD PTR [esi+0x7a7bcc9],di
  41bad4:	leave  
  41bad5:	pop    ss
  41bad6:	fwait
  41bad7:	stos   DWORD PTR es:[edi],eax
  41bad8:	js     0x41baf1
  41bada:	outs   dx,DWORD PTR ds:[esi]
  41badb:	popa   
  41badc:	mov    bl,0x6d
  41bade:	jge    0x41ba77
  41bae0:	jno    0x41bb15
  41bae2:	mov    esi,ss
  41bae4:	mov    WORD PTR [edi+0x18e73f7b],ds
  41baea:	jge    0x41bae2
  41baec:	fidivr DWORD PTR [ebx]
  41baee:	mov    cl,0xa3
  41baf0:	call   0xab4f:0xf453e949
  41baf7:	in     al,dx
  41baf8:	pop    edx
  41baf9:	sbb    esi,DWORD PTR [ecx]
  41bafb:	ins    DWORD PTR es:[edi],dx
  41bafc:	arpl   dx,ax
  41bafe:	ret    
  41baff:	inc    edx
  41bb00:	inc    ebp
  41bb01:	pop    edx
  41bb02:	mov    cl,0x15
  41bb04:	loope  0x41bad6
  41bb06:	adc    esp,DWORD PTR [ebp+0x368d5691]
  41bb0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb0d:	adc    DWORD PTR [eax+ebp*8],esp
  41bb10:	sub    al,0xe0
  41bb12:	xor    eax,0xda730e2c
  41bb17:	push   cs
  41bb18:	call   0x48e95b22
  41bb1d:	dec    ebp
  41bb1f:	inc    ebx
  41bb20:	repz cmp eax,0x930f3311
  41bb26:	popf   
  41bb27:	pop    ebp
  41bb28:	jge    0x41baca
  41bb2a:	pop    ebp
  41bb2b:	pop    ebx
  41bb2c:	sahf   
  41bb2d:	repz mov ebp,0x1e31bb3
  41bb33:	push   eax
  41bb34:	nop
  41bb35:	mov    BYTE PTR [edx-0x7a],bl
  41bb38:	cld    
  41bb39:	mov    bh,0x50
  41bb3b:	mov    bh,al
  41bb3d:	inc    esi
  41bb3e:	sbb    eax,0xe1ac68ca
  41bb43:	pop    ds
  41bb44:	mov    BYTE PTR [edi],al
  41bb46:	or     BYTE PTR [eax],bl
  41bb48:	sbb    BYTE PTR [edi+0x69fe9480],bl
  41bb4e:	mov    esp,0x5cbbff2a
  41bb53:	add    eax,0x28402622
  41bb58:	stos   BYTE PTR es:[edi],al
  41bb59:	xchg   ecx,eax
  41bb5a:	ins    BYTE PTR es:[edi],dx
  41bb5b:	ds pop esp
  41bb5d:	add    DWORD PTR [ebp-0xf42211e],0xf1c6b852
  41bb67:	cmp    eax,0x56d4498a
  41bb6c:	jg     0x41bbde
  41bb6e:	xor    bl,BYTE PTR [eax+0x4d]
  41bb71:	test   DWORD PTR [esi],ebp
  41bb73:	jnp    0x41bb3f
  41bb75:	cmp    dl,al
  41bb77:	je     0x41bb50
  41bb79:	push   ecx
  41bb7a:	add    BYTE PTR [edx+0x36af65a7],ah
  41bb80:	shl    BYTE PTR [ebx-0x3e041523],cl
  41bb86:	rcl    DWORD PTR [edx-0x36],cl
  41bb89:	sbb    BYTE PTR [ecx+edi*4],0x7e
  41bb8d:	pop    edx
  41bb8e:	mov    dh,0x13
  41bb90:	and    dl,BYTE PTR [ecx+0x6c0d05bc]
  41bb96:	push   ss
  41bb97:	adc    ebx,edi
  41bb99:	inc    esp
  41bb9a:	outs   dx,DWORD PTR ds:[esi]
  41bb9b:	sti    
  41bb9c:	xchg   ebx,eax
  41bb9d:	or     eax,0x35
  41bba0:	pop    edi
  41bba1:	fadd   QWORD PTR [ecx]
  41bba3:	jmp    0x41bc03
  41bba5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bba6:	mov    esp,0x4afadaa3
  41bbab:	add    BYTE PTR [eax],dl
  41bbad:	mov    ch,0xec
  41bbaf:	mov    dh,0x79
  41bbb1:	retf   0xb847
  41bbb4:	inc    ecx
  41bbb5:	popa   
  41bbb6:	sbb    eax,0xa7d11518
  41bbbb:	dec    esp
  41bbbc:	lock xor al,0xfa
  41bbbf:	mov    ss,ecx
  41bbc1:	pop    esp
  41bbc2:	or     DWORD PTR [edx],eax
  41bbc4:	mov    ch,0x22
  41bbc6:	push   0x6303e655
  41bbcb:	sbb    bl,0x9b
  41bbce:	out    dx,eax
  41bbcf:	inc    ebp
  41bbd0:	jmp    0xbddff923
  41bbd5:	push   esi
  41bbd6:	test   DWORD PTR [ebx],ecx
  41bbd8:	jmp    0x7fa2c72a
  41bbdd:	mov    esp,0x26252e61
  41bbe2:	sub    DWORD PTR [esi],0xb16cbd5a
  41bbe8:	add    bl,BYTE PTR [ebp+0x6acd894b]
  41bbee:	or     al,0xc1
  41bbf0:	cdq    
  41bbf1:	or     eax,0x443dc48a
  41bbf6:	mov    cl,0x68
  41bbf8:	dec    esp
  41bbf9:	xor    ebx,DWORD PTR [ebx+0x6b7e0fa4]
  41bbff:	mov    eax,0x8ee9da1a
  41bc04:	mov    edx,DWORD PTR [edi-0x4111ca37]
  41bc0a:	rol    DWORD PTR [edi-0x14],0x53
  41bc0e:	icebp  
  41bc0f:	ja     0x41bc58
  41bc11:	sub    DWORD PTR [eax+esi*2+0x7a],0xbe0df9ba
  41bc19:	popa   
  41bc1a:	lods   al,BYTE PTR ds:[esi]
  41bc1b:	sbb    eax,0xa17da069
  41bc20:	pop    ds
  41bc21:	xchg   ebx,edx
  41bc23:	and    ecx,eax
  41bc25:	repz push edx
  41bc27:	arpl   di,si
  41bc29:	inc    edi
  41bc2a:	jne    0x41bc56
  41bc2c:	clc    
  41bc2d:	dec    ecx
  41bc2e:	loop   0x41bbd2
  41bc30:	fld    TBYTE PTR [eax]
  41bc32:	mov    dl,0x31
  41bc34:	mov    ebx,0xfefc200a
  41bc39:	add    al,BYTE PTR [eax-0x1fca8238]
  41bc3f:	nop
  41bc40:	jb     0x41bc5d
  41bc42:	inc    edx
  41bc43:	mov    eax,0x25d7f809
  41bc48:	and    edx,edi
  41bc4a:	cs xor edi,esi
  41bc4d:	add    BYTE PTR ds:0x5c13efe2,cl
  41bc53:	cdq    
  41bc54:	jmp    0xb537:0x7077660c
  41bc5b:	(bad)  
  41bc5c:	iret   
  41bc5d:	fcom   DWORD PTR [esi+eax*4+0x3a]
  41bc61:	in     al,0xad
  41bc63:	mov    eax,ds:0x267b8a60
  41bc68:	jp     0x41bc82
  41bc6a:	lods   eax,DWORD PTR ds:[esi]
  41bc6b:	repnz or al,0xa3
  41bc6e:	cmp    DWORD PTR [edi+0x64],ebp
  41bc71:	jbe    0x41bcbe
  41bc73:	inc    ebp
  41bc74:	push   edx
  41bc75:	(bad)
  41bc79:	add    BYTE PTR [edx],0xbc
  41bc7c:	aad    0x99
  41bc7e:	dec    ebx
  41bc7f:	inc    eax
  41bc80:	test   BYTE PTR [ecx+0x35],cl
  41bc83:	adc    BYTE PTR [eax-0x5fd7eece],0xa
  41bc8a:	jmp    0x41bd05
  41bc8c:	adc    eax,0x49d73314
  41bc91:	push   esp
  41bc92:	stos   DWORD PTR es:[edi],eax
  41bc93:	je     0x41bc81
  41bc95:	addr16 mov bl,0x93
  41bc98:	push   esp
  41bc99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc9b:	cld    
  41bc9c:	fincstp 
  41bc9e:	in     eax,dx
  41bc9f:	fwait
  41bca0:	es leave 
  41bca2:	int    0xda
  41bca4:	enter  0xaf20,0x69
  41bca8:	cmc    
  41bca9:	std    
  41bcaa:	inc    esi
  41bcab:	adc    cl,BYTE PTR [eax+0x1c]
  41bcae:	adc    BYTE PTR [edx+0x1a],al
  41bcb1:	rcr    DWORD PTR [esi],cl
  41bcb3:	loope  0x41bcb0
  41bcb5:	les    eax,FWORD PTR [ebx+0x6cf6af5d]
  41bcbb:	mov    edi,0xd8904fc4
  41bcc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bcc1:	ret    0x2660
  41bcc4:	jl     0x41bcf6
  41bcc6:	cs mov dl,0x41
  41bcc9:	xor    ah,bl
  41bccb:	pop    eax
  41bccc:	mov    ecx,0xde063682
  41bcd1:	cmp    al,0x97
  41bcd3:	mov    eax,0x4ee1a391
  41bcd8:	add    bl,BYTE PTR [esi+0x250b5c10]
  41bcde:	mov    ds:0x1ed9b231,al
  41bce3:	jge    0x41bcc7
  41bce5:	sub    BYTE PTR [eax+esi*8+0x7e],ch
  41bce9:	or     BYTE PTR [edi+0x48],bl
  41bcec:	je     0x41bd24
  41bcee:	xchg   ecx,eax
  41bcef:	imul   ecx,DWORD PTR [edi-0x34],0x74b72d8
  41bcf6:	iret   
  41bcf7:	stc    
  41bcf8:	sahf   
  41bcf9:	mov    edi,0x8aa4d65e
  41bcfe:	out    dx,eax
  41bcff:	pop    esi
  41bd00:	mov    ds:0xd3df7db0,eax
  41bd05:	ror    BYTE PTR [edi],1
  41bd07:	push   ecx
  41bd08:	xor    edx,edx
  41bd0a:	cdq    
  41bd0b:	inc    ebp
  41bd0c:	push   ebx
  41bd0d:	fwait
  41bd0e:	test   ebx,esi
  41bd10:	mov    BYTE PTR [ebp-0x4],ch
  41bd13:	mov    ebp,ss
  41bd15:	sub    eax,0xe5a271fb
  41bd1a:	out    dx,al
  41bd1b:	sti    
  41bd1c:	xor    ch,BYTE PTR [ecx+0x79]
  41bd1f:	dec    eax
  41bd20:	adc    eax,0x9b1da9a6
  41bd25:	repz push ebx
  41bd27:	pop    es
  41bd28:	aas    
  41bd29:	xor    DWORD PTR [ebp-0x44ec41c1],ebx
  41bd2f:	pop    ebx
  41bd30:	push   eax
  41bd31:	and    edi,DWORD PTR [edi-0x4]
  41bd34:	arpl   WORD PTR [eax-0x52921022],dx
  41bd3a:	mov    esp,0xbc9336dc
  41bd3f:	sub    DWORD PTR [ebx+0x17070861],ecx
  41bd45:	xchg   BYTE PTR ds:0x5d351b56,dh
  41bd4b:	not    DWORD PTR [edx+0x27]
  41bd4e:	test   BYTE PTR [edx-0xd27b95d],bl
  41bd54:	cmp    al,0xcc
  41bd56:	mov    ds:0xa45b6ce3,eax
  41bd5b:	pop    edx
  41bd5c:	jo     0x41bda0
  41bd5e:	mov    ebp,0xbdd2ea5a
  41bd63:	xchg   BYTE PTR [ebx],bh
  41bd65:	pusha  
  41bd66:	jge    0x41bd08
  41bd68:	and    al,0x62
  41bd6a:	mov    esi,esp
  41bd6c:	cdq    
  41bd6d:	(bad)  
  41bd6e:	jp     0x41bd23
  41bd70:	xchg   ebp,eax
  41bd71:	test   al,0x8d
  41bd73:	dec    ebx
  41bd74:	xchg   ebx,eax
  41bd75:	stc    
  41bd76:	sbb    eax,eax
  41bd78:	inc    esp
  41bd79:	lods   al,BYTE PTR ds:[esi]
  41bd7a:	push   edi
  41bd7b:	mov    al,ds:0xf560099b
  41bd80:	cmp    dh,BYTE PTR [ecx+0x694deff6]
  41bd86:	dec    ebx
  41bd87:	mov    bl,0xc5
  41bd89:	les    edi,FWORD PTR [esi*4-0x2f3aadb1]
  41bd90:	mov    bl,0xfa
  41bd92:	test   al,0x8d
  41bd94:	push   edi
  41bd95:	mov    BYTE PTR [ecx+0x6e],dl
  41bd98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd99:	aad    0xed
  41bd9b:	pushf  
  41bd9c:	lock or DWORD PTR es:[edx+0x50],edi
  41bda1:	int3   
  41bda2:	inc    si
  41bda4:	mov    bh,ah
  41bda6:	push   0x4eb91765
  41bdab:	ins    BYTE PTR es:[edi],dx
  41bdac:	js     0x41bdbb
  41bdae:	pop    ds
  41bdaf:	pop    es
  41bdb0:	push   ebp
  41bdb1:	sahf   
  41bdb2:	push   ebx
  41bdb3:	add    dh,BYTE PTR [esi]
  41bdb5:	xchg   ebx,eax
  41bdb6:	mov    esi,0xf079be36
  41bdbb:	outs   dx,DWORD PTR ds:[esi]
  41bdbc:	and    dh,ah
  41bdbe:	sbb    DWORD PTR [ebx-0xe],esi
  41bdc1:	stos   DWORD PTR es:[edi],eax
  41bdc2:	lock ret 0xe0cd
  41bdc6:	hlt    
  41bdc7:	add    al,ch
  41bdc9:	or     DWORD PTR [esi-0x1a],edi
  41bdcc:	mov    eax,0x10848646
  41bdd1:	push   ss
  41bdd2:	js     0x41bd6a
  41bdd4:	(bad)
  41bdd7:	sbb    al,0x48
  41bdd9:	cmp    cl,BYTE PTR [edx+0x71]
  41bddc:	retf   0x7e5c
  41bddf:	ss and dl,cl
  41bde2:	lahf   
  41bde3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bde4:	sti    
  41bde5:	or     esi,DWORD PTR [edi]
  41bde7:	add    al,0x29
  41bde9:	fadd   QWORD PTR [eax+0x25]
  41bdec:	enter  0x90d9,0x26
  41bdf0:	push   esp
  41bdf1:	xor    BYTE PTR [edi],bl
  41bdf3:	mov    dh,BYTE PTR [edx]
  41bdf5:	xchg   esi,eax
  41bdf6:	sub    BYTE PTR [ebx-0x40efb8d8],bh
  41bdfc:	jne    0x41bdcf
  41bdfe:	call   0x1ea9:0x1b9e517f
  41be05:	xor    ah,BYTE PTR [edx+0x7d]
  41be08:	shl    DWORD PTR ds:0xc713e017,1
  41be0e:	fiadd  DWORD PTR [ecx-0x19]
  41be11:	jmp    0x6b16:0x1b408d14
  41be18:	cmp    eax,0x23f60ae5
  41be1d:	out    0x50,eax
  41be1f:	or     bh,dl
  41be21:	lods   al,BYTE PTR ds:[esi]
  41be22:	jno    0x41be52
  41be24:	jno    0x41be6e
  41be26:	cs scas eax,DWORD PTR es:[edi]
  41be28:	jl     0x41bdf2
  41be2a:	mov    ds:0xdb9f5ede,eax
  41be2f:	sub    DWORD PTR [ebp-0xe],eax
  41be32:	or     al,0xd3
  41be34:	ds in  al,0x8d
  41be37:	ret    
  41be38:	pop    esi
  41be39:	cdq    
  41be3a:	add    BYTE PTR [esp],ah
  41be3d:	push   0xb489b4ff
  41be42:	sar    BYTE PTR [ebx+0x7c],0x41
  41be46:	and    cl,al
  41be48:	pop    eax
  41be49:	adc    esp,DWORD PTR [ecx+0x6d]
  41be4c:	or     al,0x8b
  41be4e:	jns    0x41bde5
  41be50:	mov    es,WORD PTR [esi]
  41be52:	pop    ds
  41be53:	mov    ebx,0xe9182100
  41be58:	jns    0x41beb6
  41be5a:	les    edi,FWORD PTR gs:[ebp-0x3c]
  41be5e:	jmp    0x41bec7
  41be60:	sub    BYTE PTR ds:0xfd06520d,al
  41be66:	cmp    cl,BYTE PTR [eax-0x16]
  41be69:	push   eax
  41be6a:	add    cl,BYTE PTR [edx-0x17258857]
  41be70:	pusha  
  41be71:	inc    edi
  41be72:	loopne 0x41beba
  41be74:	test   DWORD PTR [ebx+0x3330be9b],ecx
  41be7a:	dec    ebp
  41be7b:	cdq    
  41be7c:	lods   al,BYTE PTR ds:[esi]
  41be7d:	inc    edi
  41be7e:	jecxz  0x41beaf
  41be80:	cwde   
  41be81:	test   al,0xda
  41be83:	or     eax,0x79463368
  41be88:	loop   0x41be49
  41be8a:	add    eax,0xd67b6b66
  41be8f:	xchg   BYTE PTR ds:0x4c79ccd,ah
  41be95:	and    BYTE PTR [edx],dh
  41be97:	ret    0x2967
  41be9a:	xchg   ebp,eax
  41be9b:	xchg   esp,eax
  41be9c:	call   ebx
  41be9e:	(bad)  
  41be9f:	push   0xffffffca
  41bea1:	in     eax,dx
  41bea2:	dec    ecx
  41bea3:	ss pop esi
  41bea5:	test   al,0x7a
  41bea7:	or     cl,BYTE PTR [esi]
  41bea9:	mov    ebp,0x7ca72a78
  41beae:	shr    BYTE PTR [ebx+eiz*4],cl
  41beb1:	test   bh,al
  41beb3:	pop    ebx
  41beb4:	cmp    esp,ebp
  41beb6:	or     al,0x67
  41beb8:	inc    ebx
  41beb9:	ja     0x41be95
  41bebb:	mov    al,0x5e
  41bebd:	cld    
  41bebe:	inc    ecx
  41bebf:	push   esi
  41bec0:	loope  0x41be63
  41bec2:	into   
  41bec3:	test   al,bl
  41bec5:	outs   dx,DWORD PTR ds:[esi]
  41bec6:	cwde   
  41bec7:	mov    ebx,ss
  41bec9:	js     0x41bea9
  41becb:	lods   al,BYTE PTR ds:[esi]
  41becc:	ret    
  41becd:	jmp    0x9def:0x2490728a
  41bed4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bed5:	ror    esp,0xbb
  41bed8:	mov    eax,ds:0x4e5c7245
  41bedd:	test   eax,0x24f873e0
  41bee2:	mov    ds:0x2d400316,al
  41bee7:	gs in  al,0x4a
  41beea:	(bad)  
  41beeb:	loope  0x41be86
  41beed:	cmp    DWORD PTR [esi],edx
  41beef:	test   DWORD PTR [esi],0x633f3743
  41bef5:	mov    eax,ds:0xb1d550e
  41befa:	imul   eax,DWORD PTR [edx-0x39],0xe07a0ce
  41bf01:	sub    ah,BYTE PTR [edi+0x38]
  41bf04:	mov    bh,0xfe
  41bf06:	ror    DWORD PTR [edi-0x19a7eedf],0x66
  41bf0d:	xor    ch,BYTE PTR [ecx+eax*4-0x5ab957d4]
  41bf14:	mov    eax,0x85544a00
  41bf19:	xchg   esi,eax
  41bf1a:	cmp    al,0x60
  41bf1c:	xchg   DWORD PTR [ecx+0x46],ecx
  41bf1f:	sbb    DWORD PTR [ecx+0x14dd186b],ebx
  41bf25:	imul   BYTE PTR [ecx]
  41bf27:	sub    eax,0x760a76f9
  41bf2c:	popf   
  41bf2d:	xor    BYTE PTR [esp+eiz*4],ch
  41bf30:	arpl   WORD PTR [ebp+0x4d68e768],di
  41bf36:	sub    al,0xe3
  41bf38:	xlat   BYTE PTR ds:[ebx]
  41bf39:	jmp    0x6a96:0x76153eec
  41bf40:	inc    edi
  41bf41:	popf   
  41bf42:	xchg   BYTE PTR [ebx+esi*8+0x24907209],ch
  41bf49:	fist   DWORD PTR [ecx]
  41bf4b:	lea    esp,[esi]
  41bf4d:	mov    ch,0xe4
  41bf4f:	in     al,dx
  41bf50:	cwde   
  41bf51:	fs cmp ecx,ebp
  41bf54:	sub    eax,0x1bbc30f2
  41bf59:	pop    ebx
  41bf5a:	push   ss
  41bf5b:	je     0x41bf8f
  41bf5d:	or     eax,0x47ba1003
  41bf62:	push   ecx
  41bf63:	fs dec ebx
  41bf65:	out    dx,al
  41bf66:	mov    ds:0xfb9ad17a,al
  41bf6b:	xor    eax,0x97e69976
  41bf70:	push   ebx
  41bf71:	leave  
  41bf72:	mov    ebx,0xf9560577
  41bf77:	dec    ecx
  41bf78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf79:	mov    ds:0xc7566dcf,al
  41bf7e:	call   0x2de0c266
  41bf83:	jb     0x41bf0a
  41bf85:	jo     0x41bf2f
  41bf87:	call   0x1c455e6a
  41bf8c:	mov    ecx,0x94615239
  41bf91:	pop    eax
  41bf92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf93:	adc    dh,BYTE PTR es:[edx-0x1]
  41bf97:	push   ebp
  41bf98:	cmp    esp,DWORD PTR [esi+0x209aace5]
  41bf9e:	xchg   ebp,eax
  41bf9f:	es inc edx
  41bfa1:	mov    dl,0xc7
  41bfa3:	(bad)  
  41bfa4:	data16 jae 0x41bff6
  41bfa7:	push   edx
  41bfa8:	mov    bh,0xdf
  41bfaa:	add    bl,al
  41bfac:	or     ecx,ecx
  41bfae:	adc    eax,0x2456a008
  41bfb3:	scas   eax,DWORD PTR es:[edi]
  41bfb4:	sbb    BYTE PTR [edi-0x15],bl
  41bfb7:	xchg   ebx,eax
  41bfb8:	cwde   
  41bfb9:	push   esi
  41bfba:	(bad)  
  41bfbb:	fild   WORD PTR [edi+ecx*8-0x2f]
  41bfbf:	fwait
  41bfc0:	lock shr DWORD PTR [ecx-0xb],1
  41bfc4:	dec    edx
  41bfc5:	jecxz  0x41bfc2
  41bfc7:	cld    
  41bfc8:	lods   eax,DWORD PTR ds:[esi]
  41bfc9:	mov    eax,ds:0x550c330c
  41bfce:	or     BYTE PTR [ebx+0x6e01af67],dh
  41bfd4:	test   DWORD PTR [eax-0x6c4fc8a8],esi
  41bfda:	add    dh,BYTE PTR [edi]
  41bfdc:	jnp    0x41bfbf
  41bfde:	lahf   
  41bfdf:	das    
  41bfe0:	jle    0x41bfd5
  41bfe2:	mov    ds:0xc75fb7dc,eax
  41bfe7:	mov    edx,0xfb57bbd2
  41bfec:	sub    dl,0x4e
  41bfef:	xor    esi,ebp
  41bff1:	and    cl,BYTE PTR [ebx-0x172b51f2]
  41bff7:	sub    DWORD PTR ds:0xbf6b88cd,ecx
  41bffd:	shl    DWORD PTR [eax-0x67],1
  41c000:	push   eax
  41c001:	loop   0x41bfb2
  41c003:	ror    DWORD PTR [ebp+0x777012bd],0x45
  41c00a:	out    dx,al
  41c00b:	push   ebp
  41c00c:	sbb    edx,DWORD PTR [eax]
  41c00e:	pop    esi
  41c00f:	jmp    0x41bfce
  41c011:	test   al,0xec
  41c013:	and    BYTE PTR [ebx+0x679ab4da],bh
  41c019:	daa    
  41c01a:	add    edx,DWORD PTR [ebp-0x66]
  41c01d:	dec    ecx
  41c01e:	(bad)  
  41c01f:	(bad)  
  41c020:	jge    0x41bfd4
  41c022:	cmp    BYTE PTR [ebx+0x2f],0x54
  41c026:	fidivr WORD PTR [ebp-0x75]
  41c029:	or     eax,0x517fe5dd
  41c02e:	les    ecx,FWORD PTR [ebx]
  41c030:	sahf   
  41c031:	pop    ebp
  41c032:	and    bh,BYTE PTR [ecx-0x2862ee02]
  41c038:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c039:	ds push ebx
  41c03b:	mul    BYTE PTR [eax-0x1dedd955]
  41c041:	dec    edi
  41c042:	inc    esp
  41c043:	xor    BYTE PTR [edi+eax*8-0x56],al
  41c047:	xor    ebp,DWORD PTR [edi]
  41c049:	xor    esi,DWORD PTR [edx]
  41c04b:	push   0x16
  41c04d:	or     DWORD PTR [esi+0x5b],0x19
  41c051:	ror    esp,0x8b
  41c054:	cmc    
  41c055:	pop    ss
  41c056:	mov    eax,ds:0x328ec2e4
  41c05b:	ror    BYTE PTR [eax-0x29d05556],0xf0
  41c062:	leave  
  41c063:	cli    
  41c064:	sbb    BYTE PTR [eax-0x5783b19c],0x42
  41c06b:	fdivp  st(0),st
  41c06d:	mov    ebp,0x33b74cca
  41c072:	mov    ebx,0x605ea3bc
  41c077:	cs or  al,al
  41c07a:	ror    dl,1
  41c07c:	adc    ebx,DWORD PTR [edi+0x19]
  41c07f:	mov    dh,0x7e
  41c081:	sti    
  41c082:	(bad)  
  41c083:	rol    esi,cl
  41c085:	pop    edi
  41c086:	xor    al,0xda
  41c088:	jnp    0x41c0c2
  41c08a:	xchg   ax,ax
  41c08c:	push   esp
  41c08d:	inc    edi
  41c08e:	jmp    0x41c08d
  41c090:	call   0x5164eb95
  41c095:	pusha  
  41c096:	jns    0x41c0ee
  41c098:	mov    ah,0xdd
  41c09a:	cs rol DWORD PTR fs:[esp+ecx*1],1
  41c09f:	mov    esi,0x4ce5de7
  41c0a4:	jno    0x41c076
  41c0a6:	test   eax,0x87332997
  41c0ab:	push   ebx
  41c0ac:	xor    BYTE PTR [edi+ecx*4-0x76],bh
  41c0b0:	dec    eax
  41c0b1:	or     BYTE PTR [eax],bh
  41c0b3:	stc    
  41c0b4:	and    BYTE PTR [ebx+ecx*4-0xc6806dc],0xe3
  41c0bc:	push   eax
  41c0bd:	pop    ss
  41c0be:	fsub   QWORD PTR [edi-0x7e]
  41c0c1:	fimul  DWORD PTR [edi+0x376fb05d]
  41c0c7:	add    dh,ah
  41c0c9:	pusha  
  41c0ca:	jmp    0xe02:0x2d6a7052
  41c0d1:	in     eax,0xa2
  41c0d3:	clc    
  41c0d4:	cmp    BYTE PTR [ecx],al
  41c0d6:	add    DWORD PTR [eax],0x2a
  41c0d9:	stc    
  41c0da:	pop    ebx
  41c0db:	mov    BYTE PTR [si+0x7f9b],ah
  41c0e0:	or     edx,DWORD PTR gs:[esi+0x43b8abd8]
  41c0e7:	pop    ss
  41c0e8:	xor    DWORD PTR [ebp+0x3b],ebp
  41c0eb:	adc    al,0x99
  41c0ed:	outs   dx,BYTE PTR ds:[esi]
  41c0ee:	or     ebx,edi
  41c0f0:	mov    esp,0x3c14a781
  41c0f5:	push   ss
  41c0f6:	outs   dx,BYTE PTR ds:[esi]
  41c0f7:	enter  0x7a07,0x1b
  41c0fb:	popf   
  41c0fc:	xor    DWORD PTR [ecx+0x59],ecx
  41c0ff:	xor    eax,0x82bccd98
  41c104:	dec    ebx
  41c105:	cmp    DWORD PTR [esi+0x104c7578],ebp
  41c10b:	test   DWORD PTR [edi-0x51891d3f],0xbfbefd0d
  41c115:	sbb    BYTE PTR [esp+eax*2+0x7c],dl
  41c119:	or     al,0x4e
  41c11b:	inc    edx
  41c11c:	fwait
  41c11d:	sbb    al,0xff
  41c11f:	sbb    BYTE PTR cs:[edi+0x2a],ah
  41c123:	and    eax,0xdeb6cb2c
  41c128:	in     eax,0x1
  41c12a:	jno    0x41c111
  41c12c:	mov    ds:0x1f6ae6f6,eax
  41c131:	mov    DWORD PTR [ecx-0x2f28cd16],ebp
  41c137:	sbb    DWORD PTR [esi-0x66],ecx
  41c13a:	sub    eax,0x17b46703
  41c13f:	out    0x83,al
  41c141:	or     DWORD PTR [eax],esi
  41c143:	stos   BYTE PTR es:[edi],al
  41c144:	rcl    DWORD PTR [esi],1
  41c146:	cmp    DWORD PTR [esi-0x1adea0ab],ebx
  41c14c:	cwde   
  41c14d:	inc    esi
  41c14e:	call   0xd972:0x3fdb147d
  41c155:	loopne 0x41c0dd
  41c157:	std    
  41c158:	idiv   al
  41c15a:	xor    esi,ebx
  41c15c:	fcomp  QWORD PTR [eax-0x62731f2e]
  41c162:	and    esi,edi
  41c164:	les    ecx,FWORD PTR [edi-0x5c621b38]
  41c16a:	nop
  41c16b:	adc    BYTE PTR [edi],ch
  41c16d:	neg    edx
  41c16f:	jmp    0xe2002628
  41c174:	aaa    
  41c175:	dec    ebx
  41c176:	inc    ebx
  41c177:	jo     0x41c1ef
  41c179:	jmp    0x4357a7b4
  41c17e:	(bad)  
  41c17f:	cmp    ebx,DWORD PTR [esp+eiz*8+0xa599d6c]
  41c186:	into   
  41c187:	ds dec ebx
  41c189:	dec    edx
  41c18a:	aas    
  41c18b:	adc    eax,0x4d63924d
  41c190:	mov    cl,0x4c
  41c192:	sti    
  41c193:	call   FWORD PTR [edx+0x5b]
  41c196:	std    
  41c197:	(bad)  
  41c199:	lock shl al,1
  41c19c:	mov    WORD PTR [esp+edi*1+0x1],cs
  41c1a0:	cld    
  41c1a1:	adc    eax,0x490aaae
  41c1a6:	sti    
  41c1a7:	mov    ds:0xc2999aad,eax
  41c1ac:	pop    ebx
  41c1ad:	push   0xffffffe8
  41c1af:	sbb    BYTE PTR [edx+0xcea6123],ah
  41c1b5:	jb     0x41c208
  41c1b7:	fld    QWORD PTR ds:0x99652cb5
  41c1bd:	(bad)  
  41c1be:	div    BYTE PTR [ebx+0x1eae9c2b]
  41c1c4:	add    BYTE PTR [edi],dh
  41c1c6:	pop    esp
  41c1c7:	push   ebx
  41c1c8:	or     dl,ch
  41c1ca:	(bad)  
  41c1cb:	pop    eax
  41c1cc:	or     DWORD PTR [eax-0x4b89915c],0x63
  41c1d3:	add    BYTE PTR [edi],dl
  41c1d5:	loopne 0x41c158
  41c1d7:	dec    esp
  41c1d8:	add    edx,ebp
  41c1da:	lods   al,BYTE PTR ds:[esi]
  41c1db:	xchg   esp,eax
  41c1dc:	sbb    al,0xb
  41c1de:	mov    ah,0xdc
  41c1e0:	or     eax,0x606c3591
  41c1e5:	aam    0x80
  41c1e7:	aad    0x2d
  41c1e9:	out    0x8f,al
  41c1eb:	shr    DWORD PTR [ecx+0x775a71f2],0xde
  41c1f2:	test   bh,ah
  41c1f4:	mov    esi,0xdc6383cb
  41c1f9:	inc    edi
  41c1fa:	and    cl,ch
  41c1fc:	je     0x41c1ae
  41c1fe:	jmp    0xf3d4b173
  41c203:	retf   0x4ac1
  41c206:	rol    BYTE PTR [esp+edx*2-0x62],cl
  41c20a:	xor    DWORD PTR [edx-0x3f],edi
  41c20d:	and    dl,bl
  41c20f:	fnclex 
  41c211:	sub    bh,BYTE PTR [edx-0x5d]
  41c214:	(bad)  
  41c215:	mov    edx,0x5cafd32e
  41c21a:	fcmovnu st,st(4)
  41c21c:	nop
  41c21d:	xor    bl,BYTE PTR [edx]
  41c21f:	sub    al,0xa
  41c221:	pop    es
  41c222:	cli    
  41c223:	rcl    DWORD PTR [ebx-0x33],1
  41c226:	push   edi
  41c227:	ficomp DWORD PTR [esi-0x23]
  41c22a:	stos   DWORD PTR es:[edi],eax
  41c22b:	inc    ebx
  41c22c:	and    eax,0x68744098
  41c231:	(bad)  
  41c232:	retf   0x6082
  41c235:	aad    0xaf
  41c237:	pop    esp
  41c238:	shr    DWORD PTR [ecx+0x11cd9854],0x8a
  41c23f:	cmp    DWORD PTR [eax+edi*2],edi
  41c242:	rol    cl,1
  41c244:	add    cl,ah
  41c246:	hlt    
  41c247:	mov    bl,0xd4
  41c249:	std    
  41c24a:	jg     0x41c27a
  41c24c:	jb     0x41c1f9
  41c24e:	shr    esp,cl
  41c250:	(bad)  
  41c251:	loope  0x41c246
  41c253:	mov    eax,ds:0x16000b9
  41c258:	test   DWORD PTR [edx],eax
  41c25a:	das    
  41c25b:	mov    ds:0xe91abd13,al
  41c260:	mov    eax,0x92c29284
  41c265:	fsub   QWORD PTR [ebp-0x34804ad]
  41c26b:	bound  edi,QWORD PTR ds:0xb3372c74
  41c271:	test   DWORD PTR [esi-0x41],ecx
  41c274:	adc    BYTE PTR [eax-0x16115a0],0xb
  41c27b:	jae    0x41c2be
  41c27d:	and    BYTE PTR [ecx-0x19],al
  41c280:	add    bl,ch
  41c282:	jns    0x41c23e
  41c284:	imul   esp,DWORD PTR [ecx],0x43
  41c287:	push   ds
  41c288:	fild   WORD PTR [ebx-0x4570e487]
  41c28e:	repnz cmp al,BYTE PTR [ecx+0x3563fb4a]
  41c295:	cdq    
  41c296:	aam    0xa8
  41c298:	loop   0x41c2b9
  41c29a:	sahf   
  41c29b:	(bad)  
  41c29c:	dec    ebp
  41c29d:	push   cs
  41c29e:	push   esi
  41c29f:	and    eax,0x7db3ea1c
  41c2a4:	mov    edi,0x1219abdc
  41c2a9:	mov    ecx,DWORD PTR [edx+0x9]
  41c2ac:	push   ds
  41c2ad:	enter  0x491c,0x3e
  41c2b1:	es sahf 
  41c2b3:	push   edx
  41c2b4:	push   edx
  41c2b5:	int3   
  41c2b6:	inc    esp
  41c2b7:	cmp    esp,esi
  41c2b9:	adc    BYTE PTR [eax-0x6d4d7c9b],ch
  41c2bf:	sbb    al,0xaf
  41c2c1:	adc    BYTE PTR [ebx],0xe0
  41c2c4:	push   ebx
  41c2c5:	mov    bl,BYTE PTR [edx]
  41c2c7:	in     al,dx
  41c2c8:	xor    edx,DWORD PTR [esi+0x11]
  41c2cb:	loopne 0x41c2f8
  41c2cd:	retf   0xc13a
  41c2d0:	cmp    dh,BYTE PTR [esi+0x1b]
  41c2d3:	jge    0x41c273
  41c2d5:	dec    ecx
  41c2d6:	sbb    al,0x6e
  41c2d8:	(bad)  
  41c2d9:	je     0x41c337
  41c2db:	lahf   
  41c2dc:	test   ah,0x8d
  41c2df:	rcl    ebp,cl
  41c2e1:	hlt    
  41c2e2:	add    esi,0xb51ec44c
  41c2e8:	inc    esp
  41c2e9:	fstp   TBYTE PTR [eax+0x485de1fa]
  41c2ef:	lods   al,BYTE PTR ds:[esi]
  41c2f0:	test   eax,0xa2e74c5f
  41c2f5:	retf   0xf778
  41c2f8:	dec    eax
  41c2f9:	test   eax,0x7d16d80c
  41c2fe:	and    esi,DWORD PTR [ebx-0x2d5a4a96]
  41c304:	in     al,0x11
  41c306:	loop   0x41c360
  41c308:	jno    0x41c2a5
  41c30a:	mov    ch,0x1
  41c30c:	bswap  ecx
  41c30e:	sbb    dl,BYTE PTR [edx+0x60]
  41c311:	loopne 0x41c2d9
  41c313:	push   es
  41c314:	imul   edi,DWORD PTR [ebx],0x51a1f729
  41c31a:	scas   eax,DWORD PTR es:[edi]
  41c31b:	mov    esi,0x362862d9
  41c320:	stos   BYTE PTR es:[edi],al
  41c321:	jo     0x41c31d
  41c323:	ror    DWORD PTR [ecx-0x2b],cl
  41c326:	jnp    0x41c2f0
  41c328:	adc    ebp,DWORD PTR [ebx]
  41c32a:	sub    eax,0xe567039
  41c32f:	push   eax
  41c330:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c331:	stos   BYTE PTR es:[edi],al
  41c332:	shl    BYTE PTR [eax-0x79d4f1f4],1
  41c338:	xchg   edi,eax
  41c339:	sbb    dh,BYTE PTR [esi-0x7a6602c0]
  41c33f:	pop    esp
  41c340:	ret    0x445a
  41c343:	jg     0x41c316
  41c345:	call   0x7ea6:0x714987d4
  41c34c:	cmp    eax,0xaf4b2703
  41c351:	xor    eax,edi
  41c353:	cmp    al,bl
  41c355:	(bad)  
  41c356:	dec    DWORD PTR [ecx+0x9]
  41c359:	jl     0x41c3ac
  41c35b:	inc    edi
  41c35c:	cmpxchg DWORD PTR [edi-0x2bb07a86],ecx
  41c363:	rol    BYTE PTR [eax+0x6a],cl
  41c366:	aas    
  41c367:	mov    bh,0x32
  41c369:	icebp  
  41c36a:	xor    al,BYTE PTR [ebx+ebx*2+0x69]
  41c36e:	imul   esi,DWORD PTR [esi-0x49],0x46ecdad1
  41c375:	lods   eax,DWORD PTR ds:[esi]
  41c376:	inc    ebp
  41c377:	(bad)  
  41c378:	int    0x5d
  41c37a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c37b:	aad    0x4d
  41c37d:	adc    ch,0x16
  41c380:	dec    edi
  41c381:	ins    DWORD PTR es:[edi],dx
  41c382:	jmp    0x2d8b:0xcf05b95b
  41c389:	mov    edi,0x65f77072
  41c38e:	mov    al,ds:0x8fa29547
  41c393:	push   esi
  41c394:	(bad)  
  41c395:	rcr    BYTE PTR [edx],0xe2
  41c398:	mov    gs,WORD PTR [ebx+0x27]
  41c39b:	xor    eax,0xaab5551a
  41c3a0:	or     DWORD PTR [edi-0x359e517a],0xadcb9ef6
  41c3aa:	sbb    DWORD PTR gs:[esi-0x67],esp
  41c3ae:	cmp    DWORD PTR [esi+0x4ccb97de],0x9cdb22d1
  41c3b8:	push   es
  41c3b9:	jecxz  0x41c395
  41c3bb:	stos   DWORD PTR es:[edi],eax
  41c3bc:	lock aad 0xf0
  41c3bf:	push   edi
  41c3c0:	aaa    
  41c3c1:	adc    al,0x90
  41c3c3:	add    dl,cl
  41c3c5:	fmul   QWORD PTR [ecx-0x42a4ee79]
  41c3cb:	icebp  
  41c3cc:	adc    eax,0xa7c4227d
  41c3d1:	dec    ebp
  41c3d2:	stos   BYTE PTR es:[edi],al
  41c3d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3d4:	ret    
  41c3d5:	jnp    0x41c3bb
  41c3d7:	pop    esi
  41c3d8:	loopne 0x41c3ef
  41c3da:	fld    TBYTE PTR [edx+0xc2d0525]
  41c3e0:	jmp    0x41c3d6
  41c3e2:	inc    ebp
  41c3e3:	sar    BYTE PTR [ebx],cl
  41c3e5:	(bad)  
  41c3e6:	pop    ss
  41c3e7:	mov    dl,0x80
  41c3e9:	mov    esp,0xef9aafd
  41c3ee:	(bad)  [ebp+0x2084be29]
  41c3f4:	and    eax,0xfc3e35ab
  41c3f9:	(bad)  [ecx+0x776e315d]
  41c3ff:	jecxz  0x41c3c6
  41c401:	es mov bl,0x68
  41c404:	test   BYTE PTR [edi+0x75],al
  41c407:	xchg   ebx,eax
  41c408:	xchg   esp,eax
  41c409:	je     0x41c433
  41c40b:	push   ecx
  41c40c:	push   ss
  41c40d:	mov    ebp,DWORD PTR [eax+0x7b]
  41c410:	loop   0x41c466
  41c412:	mov    bh,0xae
  41c414:	push   cs
  41c415:	xchg   DWORD PTR [esi+ebx*4+0x15],eax
  41c419:	inc    ebx
  41c41a:	jecxz  0x41c44d
  41c41c:	mov    bl,0xc0
  41c41e:	scas   al,BYTE PTR es:[edi]
  41c41f:	(bad)
  41c422:	loope  0x41c411
  41c424:	jb     0x41c403
  41c426:	aam    0x25
  41c428:	aaa    
  41c429:	xchg   ebp,eax
  41c42a:	sbb    esi,ebx
  41c42c:	cs (bad) 
  41c42e:	sahf   
  41c42f:	or     ecx,DWORD PTR [edi+0x4813b24c]
  41c435:	scas   eax,DWORD PTR es:[edi]
  41c436:	fistp  WORD PTR [edi]
  41c438:	daa    
  41c439:	in     al,0xfa
  41c43b:	dec    eax
  41c43c:	fdiv   DWORD PTR [edx-0x14f1eb9f]
  41c442:	test   BYTE PTR [eax+0x24],0x9f
  41c446:	shr    DWORD PTR [edi+0x6b87c171],cl
  41c44c:	fmul   QWORD PTR [ebp-0x6]
  41c44f:	rol    BYTE PTR [eax],0x94
  41c452:	call   0x48a46a16
  41c457:	add    BYTE PTR ds:0x8bd11522,dl
  41c45d:	sar    ch,1
  41c45f:	test   DWORD PTR [edi],ecx
  41c461:	jg     0x41c424
  41c463:	js     0x41c4d6
  41c465:	out    0x6b,eax
  41c467:	retf   
  41c468:	xor    esi,DWORD PTR [ecx-0x2b7f1ab8]
  41c46e:	cmp    eax,0x2ebead30
  41c473:	leave  
  41c474:	iret   
  41c475:	out    0xa8,eax
  41c477:	ret    0xe79d
  41c47a:	sub    al,BYTE PTR [ecx]
  41c47c:	mov    edx,0x69539e9e
  41c481:	ror    DWORD PTR [esi+0x63a5241c],cl
  41c487:	xchg   BYTE PTR [eax],dl
  41c489:	jge    0x41c4a1
  41c48b:	fisttp DWORD PTR [edx]
  41c48d:	loopne 0x41c4f0
  41c48f:	jbe    0x41c445
  41c491:	dec    edi
  41c492:	aaa    
  41c493:	retf   0xa1fb
  41c496:	outs   dx,DWORD PTR ds:[esi]
  41c497:	jmp    0x43cd57a1
  41c49c:	fadd   DWORD PTR [eax+0x68ab4a90]
  41c4a2:	sbb    al,0xc9
  41c4a4:	shl    BYTE PTR [ebx+edx*8],cl
  41c4a7:	stc    
  41c4a8:	push   es
  41c4a9:	jle    0x41c4b6
  41c4ab:	and    eax,0x85a0b703
  41c4b0:	xchg   ecx,eax
  41c4b1:	mov    ebp,0xf3b35ff
  41c4b6:	outs   dx,BYTE PTR ds:[esi]
  41c4b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4b8:	adc    al,0x6a
  41c4ba:	retf   
  41c4bb:	outs   dx,DWORD PTR ds:[esi]
  41c4bc:	outs   dx,BYTE PTR ds:[esi]
  41c4bd:	(bad)  
  41c4be:	jbe    0x41c480
  41c4c0:	inc    ecx
  41c4c1:	jg     0x41c455
  41c4c3:	test   esi,0xea380715
  41c4c9:	sbb    eax,0xe47c3292
  41c4ce:	mov    esp,ebp
  41c4d0:	aad    0x31
  41c4d2:	mov    cl,0x93
  41c4d4:	and    ch,BYTE PTR [ebx+0x4127402a]
  41c4da:	dec    edx
  41c4db:	sbb    BYTE PTR [bp+0x77],ah
  41c4df:	int3   
  41c4e0:	or     eax,0xafc18569
  41c4e5:	mov    ebx,0x8180397a
  41c4ea:	sbb    ah,dh
  41c4ec:	jb     0x41c4de
  41c4ee:	ficomp DWORD PTR [ebp-0x631c87d5]
  41c4f4:	mov    esi,0x5e4e0deb
  41c4f9:	mov    edx,0x288b3bf1
  41c4fe:	mov    ch,0x41
  41c500:	sbb    dh,BYTE PTR [edi+edi*1]
  41c503:	std    
  41c504:	test   eax,0x760256ef
  41c509:	aaa    
  41c50a:	xor    eax,0xe6db1276
  41c50f:	sub    eax,0x8f1a677c
  41c514:	jp     0x41c4d8
  41c516:	aam    0x48
  41c518:	jmp    0x32cb:0xea12009c
  41c51f:	add    eax,0x4fb2c20f
  41c524:	push   edi
  41c525:	inc    ebx
  41c526:	pop    esi
  41c527:	lods   eax,DWORD PTR ds:[esi]
  41c528:	popf   
  41c529:	fld    QWORD PTR [edi+0x7c1dbff3]
  41c52f:	cli    
  41c530:	pop    esp
  41c531:	cmp    BYTE PTR ds:0x1d574233,0x2b
  41c538:	std    
  41c539:	pop    ecx
  41c53a:	pop    es
  41c53b:	pop    esp
  41c53c:	jnp    0x41c5ac
  41c53e:	and    ebp,DWORD PTR [esi-0x59]
  41c541:	daa    
  41c542:	and    BYTE PTR [eax-0x75],0x7b
  41c546:	hlt    
  41c547:	arpl   WORD PTR [edx],si
  41c549:	lea    esi,[esi-0xf]
  41c54c:	lods   eax,DWORD PTR ds:[esi]
  41c54d:	mov    ecx,0xbb0033e2
  41c552:	sub    ecx,ecx
  41c554:	pop    ebp
  41c555:	push   eax
  41c556:	mov    edi,0x82fac6f4
  41c55b:	mov    edi,0xe0030f46
  41c560:	mov    edi,0x2d06c57d
  41c565:	sbb    ah,bl
  41c567:	sub    cl,ah
  41c569:	data16 (bad) 
  41c56b:	jmp    0x89fe:0x64dd9b19
  41c572:	mov    bh,0xbe
  41c574:	out    dx,al
  41c575:	mov    ah,ah
  41c577:	push   cs
  41c578:	dec    edx
  41c579:	adc    cl,dl
  41c57b:	ret    0x23b
  41c57e:	mov    ch,0x87
  41c580:	test   DWORD PTR [ecx+0x1],0x415cf9e
  41c587:	or     al,0x67
  41c589:	inc    esp
  41c58a:	and    BYTE PTR [ebx+eiz*2+0x10f34508],bl
  41c591:	arpl   WORD PTR [eax],bp
  41c593:	pop    edi
  41c594:	ror    DWORD PTR [ebx+edx*4+0x6af867d5],cl
  41c59b:	xchg   bl,ah
  41c59d:	hlt    
  41c59e:	out    0x9f,eax
  41c5a0:	and    DWORD PTR [edi+0x11],edi
  41c5a3:	jb     0x41c5f2
  41c5a5:	ins    DWORD PTR es:[edi],dx
  41c5a6:	push   edx
  41c5a7:	and    al,0x27
  41c5a9:	xchg   ebp,eax
  41c5aa:	loop   0x41c5ba
  41c5ac:	add    BYTE PTR [esp+edx*2-0x6f],bl
  41c5b0:	sbb    bl,ch
  41c5b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5b3:	cmp    DWORD PTR [ebp+0x4ba6688c],ebx
  41c5b9:	fwait
  41c5ba:	pop    ebx
  41c5bb:	sub    DWORD PTR [ecx+0x27],esi
  41c5be:	shl    DWORD PTR [esi+0x5cd79ee6],0x7c
  41c5c5:	retf   0xc736
  41c5c8:	daa    
  41c5c9:	ja     0x41c647
  41c5cb:	mul    DWORD PTR [esi+ecx*8-0x1b]
  41c5cf:	jmp    0x54098cb4
  41c5d4:	lds    ecx,FWORD PTR [eax-0x23]
  41c5d7:	popa   
  41c5d8:	les    esp,FWORD PTR [ebp-0x3933d117]
  41c5de:	push   ss
  41c5df:	xor    BYTE PTR [edx],cl
  41c5e1:	jg     0x41c588
  41c5e3:	dec    esi
  41c5e4:	adc    DWORD PTR [ecx+edi*8],0x1e
  41c5e8:	and    al,0xfe
  41c5ea:	push   cs
  41c5eb:	shr    DWORD PTR [edx-0x41],1
  41c5ee:	and    bh,bh
  41c5f0:	sub    bl,BYTE PTR [eax-0x23ec2348]
  41c5f6:	sub    al,0x36
  41c5f8:	or     al,0xa9
  41c5fa:	push   0x36
  41c5fc:	icebp  
  41c5fd:	jb     0x41c62e
  41c5ff:	sahf   
  41c600:	test   ecx,ebp
  41c602:	xchg   esi,eax
  41c603:	mov    edx,0x1850fe8
  41c608:	mov    eax,edi
  41c60a:	or     al,0xa7
  41c60c:	sbb    ebp,eax
  41c60e:	lods   eax,DWORD PTR ds:[esi]
  41c60f:	mov    bh,0xe6
  41c611:	div    BYTE PTR [ebp+0x1d]
  41c614:	push   esp
  41c615:	or     ecx,edi
  41c617:	add    al,0xdc
  41c619:	xchg   esp,ebp
  41c61b:	mov    ebx,ss
  41c61d:	cdq    
  41c61e:	enter  0xbad3,0x72
  41c622:	dec    ebx
  41c623:	(bad)
  41c627:	call   0x4a22171d
  41c62c:	inc    eax
  41c62d:	loope  0x41c66d
  41c62f:	add    DWORD PTR [eax],ebx
  41c631:	popf   
  41c632:	mov    edi,0x20c17829
  41c637:	and    BYTE PTR [edx],bl
  41c639:	xor    ebp,DWORD PTR [ebp-0x41]
  41c63c:	pop    eax
  41c63d:	mov    al,ds:0xd468c18c
  41c642:	leave  
  41c643:	or     eax,0x3be56b30
  41c648:	jno    0x41c69c
  41c64a:	jne    0x41c69a
  41c64c:	xchg   BYTE PTR [ecx],ah
  41c64e:	mov    ecx,0x62bcc9b9
  41c653:	dec    ebp
  41c654:	inc    ebp
  41c655:	cmc    
  41c656:	sub    DWORD PTR [ebx+0x1c292b0f],eax
  41c65c:	sub    BYTE PTR [eax],bl
  41c65e:	das    
  41c65f:	loopne 0x41c64c
  41c661:	jl     0x41c6db
  41c663:	sti    
  41c664:	rcl    DWORD PTR [eax+0x5bb4b31],0x26
  41c66b:	cmp    eax,0xb8b02f16
  41c670:	mov    DWORD PTR [edi+0x2b2acfa9],ebp
  41c676:	mov    edi,0x9848646d
  41c67b:	fwait
  41c67c:	xchg   DWORD PTR [esi+0x79],ecx
  41c67f:	lea    ebp,[edx+ebx*1-0x2c]
  41c683:	cmp    dh,BYTE PTR [ebp+0x22]
  41c686:	sbb    edx,DWORD PTR [ecx-0x29]
  41c689:	inc    esi
  41c68a:	ret    0x1bed
  41c68d:	mov    bh,0x80
  41c68f:	sbb    bh,0xe9
  41c692:	cdq    
  41c693:	cli    
  41c694:	sbb    al,0xc6
  41c696:	jg     0x41c70f
  41c698:	push   ecx
  41c699:	sti    
  41c69a:	sahf   
  41c69b:	iret   
  41c69c:	ja     0x41c697
  41c69e:	mov    ebx,0xceef4079
  41c6a3:	push   edx
  41c6a4:	push   eax
  41c6a5:	cs loop 0x41c6e3
  41c6a8:	popf   
  41c6a9:	iret   
  41c6aa:	test   al,0x45
  41c6ac:	sti    
  41c6ad:	loopne 0x41c6b2
  41c6af:	and    edi,DWORD PTR [edi+0x66968dde]
  41c6b5:	add    eax,0x36b50bae
  41c6ba:	daa    
  41c6bb:	sub    DWORD PTR [ebx],esp
  41c6bd:	mov    esp,DWORD PTR [ebx+0x5f]
  41c6c0:	outs   dx,DWORD PTR ds:[esi]
  41c6c1:	(bad)  
  41c6c2:	(bad)  
  41c6c3:	lods   eax,DWORD PTR ds:[esi]
  41c6c4:	iret   
  41c6c5:	addr16 dec edx
  41c6c7:	mov    esi,esp
  41c6c9:	jmp    0x198ba4c2
  41c6ce:	cdq    
  41c6cf:	arpl   WORD PTR [edi],sp
  41c6d1:	mov    ebx,0x15480f2d
  41c6d6:	inc    esi
  41c6d7:	add    eax,0xca1132d4
  41c6dc:	and    edx,DWORD PTR [esi]
  41c6de:	xchg   esp,eax
  41c6df:	mov    ecx,0x509bf631
  41c6e4:	xor    bh,BYTE PTR [esp+esi*2+0x50]
  41c6e8:	ror    BYTE PTR ds:0xcd13e531,1
  41c6ee:	ret    0x298a
  41c6f1:	xchg   edi,eax
  41c6f2:	adc    eax,0x2ace2835
  41c6f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6f8:	ins    DWORD PTR es:[edi],dx
  41c6f9:	add    dh,BYTE PTR [edx-0x2c]
  41c6fc:	jns    0x41c734
  41c6fe:	push   esp
  41c6ff:	mov    bl,BYTE PTR [ecx+0x2]
  41c702:	rcl    DWORD PTR [edi+edx*2-0x4a],cl
  41c706:	add    dh,BYTE PTR [esi+0x4325d28e]
  41c70c:	std    
  41c70d:	xchg   ebp,eax
  41c70e:	jae    0x41c6c4
  41c710:	xchg   esp,eax
  41c711:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c712:	and    eax,0x36b0e39
  41c717:	enter  0x2cee,0x18
  41c71b:	call   0x448c11fc
  41c720:	jbe    0x41c74f
  41c722:	les    ebx,FWORD PTR [edi]
  41c724:	jns    0x41c72e
  41c726:	cmp    edi,DWORD PTR [ebx]
  41c728:	repz and eax,0x9dbf76d2
  41c72e:	les    edi,FWORD PTR ds:0xe09e237e
  41c734:	loopne 0x41c6e7
  41c736:	(bad)  
  41c737:	out    dx,al
  41c738:	adc    bh,0x4b
  41c73b:	or     DWORD PTR [esi+0x2f],eax
  41c73e:	adc    ebp,DWORD PTR [eax]
  41c740:	push   ds
  41c741:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c742:	jns    0x41c775
  41c744:	aam    0xd5
  41c746:	pop    esp
  41c747:	dec    edi
  41c748:	sbb    eax,0x3d1a7a1b
  41c74d:	sub    ebp,esp
  41c74f:	jg     0x41c796
  41c751:	fist   DWORD PTR [ecx+0x6ba28b69]
  41c757:	xor    eax,0x632b83f4
  41c75c:	push   ecx
  41c75d:	mov    ebp,0x66376b33
  41c762:	icebp  
  41c763:	push   ds
  41c764:	rcl    dh,0x6
  41c767:	inc    ecx
  41c768:	cmp    ch,BYTE PTR [ebx+0x4a3f1b31]
  41c76e:	out    0x14,eax
  41c770:	ror    BYTE PTR [ebx],1
  41c772:	data16 int 0x4f
  41c775:	xchg   edx,eax
  41c776:	jbe    0x41c778
  41c778:	in     al,0x41
  41c77a:	xor    eax,0x40dded58
  41c77f:	cwde   
  41c780:	sbb    bl,0xf9
  41c783:	div    ah
  41c785:	fisub  DWORD PTR [ecx+0x6a99a0c4]
  41c78b:	stc    
  41c78c:	lods   al,BYTE PTR ds:[esi]
  41c78d:	xchg   BYTE PTR [eax],dl
  41c78f:	loop   0x41c78d
  41c791:	cmp    eax,0xda185e49
  41c796:	nop
  41c797:	lods   eax,DWORD PTR ds:[esi]
  41c798:	inc    eax
  41c799:	lock cld 
  41c79b:	ss ins DWORD PTR es:[edi],dx
  41c79d:	ret    
  41c79e:	ss in  al,dx
  41c7a0:	push   ss
  41c7a1:	xor    bh,BYTE PTR [ebx+ebp*2+0x77]
  41c7a5:	stos   BYTE PTR es:[edi],al
  41c7a6:	mov    dl,0xe9
  41c7a8:	inc    ebp
  41c7a9:	scas   eax,DWORD PTR es:[edi]
  41c7aa:	rol    DWORD PTR [eax+0x5af9425f],cl
  41c7b0:	xor    al,0x2e
  41c7b2:	fisttp QWORD PTR [esi-0x3c]
  41c7b5:	sbb    al,0x13
  41c7b7:	pusha  
  41c7b8:	lds    eax,FWORD PTR [edx+0x6b]
  41c7bb:	loope  0x41c838
  41c7bd:	fcomp  DWORD PTR [edi-0x7]
  41c7c0:	ja     0x41c758
  41c7c2:	mov    bl,0xf1
  41c7c4:	mov    esi,0xaaaeba8e
  41c7c9:	enter  0xbd1d,0xd2
  41c7cd:	jb     0x41c79f
  41c7cf:	and    al,0xd4
  41c7d1:	cmp    ebx,0x66
  41c7d4:	stos   BYTE PTR es:[edi],al
  41c7d5:	fdivr  QWORD PTR [esi-0x64]
  41c7d8:	popa   
  41c7d9:	hlt    
  41c7da:	test   BYTE PTR [edi],dl
  41c7dc:	test   eax,0x2213d9f4
  41c7e1:	mov    al,gs:0x29768ffb
  41c7e7:	arpl   ax,dx
  41c7e9:	pop    ebp
  41c7ea:	hlt    
  41c7eb:	test   BYTE PTR [edx+0x25],dl
  41c7ee:	xchg   ebp,eax
  41c7ef:	push   esp
  41c7f0:	sbb    edx,DWORD PTR [eax]
  41c7f2:	stos   DWORD PTR es:[edi],eax
  41c7f3:	and    eax,0x1e18459e
  41c7f8:	fidiv  WORD PTR [ecx]
  41c7fa:	add    esp,DWORD PTR [ecx+0x6f]
  41c7fd:	dec    esi
  41c7fe:	or     ch,ch
  41c800:	xlat   BYTE PTR ds:[ebx]
  41c801:	mov    bh,0xc5
  41c803:	cdq    
  41c804:	xchg   ecx,eax
  41c805:	neg    bl
  41c807:	ds js  0x41c7e0
  41c80a:	out    dx,eax
  41c80b:	out    0xae,eax
  41c80d:	adc    ebx,edi
  41c80f:	sub    BYTE PTR [esi],dl
  41c811:	add    eax,0xda0cc471
  41c816:	mul    cl
  41c818:	mov    al,ds:0xe8bfa8c5
  41c81d:	ins    BYTE PTR es:[edi],dx
  41c81e:	push   ecx
  41c81f:	sbb    al,0x8a
  41c821:	pop    ecx
  41c822:	jo     0x41c7dc
  41c824:	xor    eax,0xcaf159f3
  41c829:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c82a:	sub    ch,ah
  41c82c:	(bad)  
  41c82e:	jmp    0x2808:0xcbd8aa0e
  41c835:	inc    esp
  41c836:	mov    dh,0x41
  41c838:	aaa    
  41c839:	cdq    
  41c83a:	mov    ds:0xc721483,eax
  41c83f:	mov    ecx,?
  41c841:	jl     0x41c818
  41c843:	(bad)  
  41c844:	jle    0x41c8ac
  41c846:	retf   
  41c847:	test   DWORD PTR [eax],ecx
  41c849:	scas   al,BYTE PTR es:[edi]
  41c84a:	fdivr  DWORD PTR [esi]
  41c84c:	xor    ch,BYTE PTR [bp+si+0x47]
  41c850:	mov    WORD PTR [ecx+0x29],es
  41c853:	(bad)  
  41c854:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c855:	xchg   edi,eax
  41c856:	dec    edx
  41c857:	adc    ah,ah
  41c859:	in     al,0xe4
  41c85b:	(bad)  
  41c85c:	fisttp QWORD PTR [edx-0x4421c323]
  41c862:	push   ebx
  41c863:	adc    edi,DWORD PTR ds:0x90f2c17b
  41c869:	stos   DWORD PTR es:[edi],eax
  41c86a:	leave  
  41c86b:	outs   dx,DWORD PTR ds:[esi]
  41c86c:	sbb    DWORD PTR [edx],esp
  41c86e:	test   DWORD PTR [eax-0x2269913d],edx
  41c874:	push   0xd0fbb27f
  41c879:	bound  eax,QWORD PTR [ebx-0x39]
  41c87c:	xchg   edi,eax
  41c87d:	out    0x5e,eax
  41c87f:	setnp  bl
  41c882:	in     al,0xb1
  41c884:	loop   0x41c8e0
  41c886:	adc    eax,0x8143e9fa
  41c88b:	add    BYTE PTR ds:0xd4b884c6,bl
  41c891:	pushf  
  41c892:	(bad)  
  41c893:	gs int 0xbe
  41c896:	dec    ebp
  41c897:	sbb    eax,0x8eace7e1
  41c89c:	clc    
  41c89d:	cmp    BYTE PTR [ebp-0x5f],dh
  41c8a0:	xlat   BYTE PTR ds:[ebx]
  41c8a1:	sub    bl,BYTE PTR [ebx+eiz*2]
  41c8a4:	or     ebp,DWORD PTR [edx]
  41c8a6:	pop    edx
  41c8a7:	pop    ebx
  41c8a8:	dec    esp
  41c8a9:	cmp    BYTE PTR [ebp-0x52],bh
  41c8ac:	loop   0x41c845
  41c8ae:	imul   ebp,DWORD PTR [ebx-0x5f],0x5e
  41c8b2:	test   DWORD PTR [edi+0x69],ebx
  41c8b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8b6:	retf   0xaf38
  41c8b9:	into   
  41c8ba:	mov    BYTE PTR [edx-0x3050c319],ah
  41c8c0:	sbb    esi,DWORD PTR [eax+0x10]
  41c8c3:	out    dx,al
  41c8c4:	mov    ebx,0x5010a89f
  41c8c9:	out    0xc6,eax
  41c8cb:	retf   0x2a2f
  41c8ce:	fcomp  DWORD PTR ds:0xa5b06e67
  41c8d4:	mov    ds:0x188745f3,eax
  41c8d9:	call   0x1ca484fd
  41c8de:	cmc    
  41c8df:	loop   0x41c94c
  41c8e1:	xchg   BYTE PTR [eiz*8-0xb5380fa],bl
  41c8e8:	mov    bh,0x5e
  41c8ea:	std    
  41c8eb:	repnz pop esi
  41c8ed:	sbb    DWORD PTR [edx],ebp
  41c8ef:	jae    0x41c90a
  41c8f1:	ficom  WORD PTR [ebx+esi*8+0x8]
  41c8f5:	xor    al,0xf6
  41c8f7:	mov    eax,0x2d7ce546
  41c8fc:	(bad)  
  41c8fd:	hlt    
  41c8fe:	ins    DWORD PTR es:[edi],dx
  41c8ff:	ja     0x41c928
  41c901:	shrd   DWORD PTR [eax],ebx,0xad
  41c905:	nop
  41c906:	iret   
  41c907:	inc    esi
  41c908:	data16 sahf 
  41c90a:	mov    dh,0x7a
  41c90c:	mov    dh,0xb6
  41c90e:	adc    DWORD PTR ds:0x4c29429a,edx
  41c914:	push   edi
  41c915:	pop    edi
  41c916:	sar    ch,1
  41c918:	jmp    0x41c94d
  41c91a:	mov    esp,ds
  41c91c:	enter  0xffef,0xcf
  41c920:	add    al,0x21
  41c922:	loop   0x41c94c
  41c924:	push   0xb40b3acf
  41c929:	dec    edx
  41c92a:	pusha  
  41c92b:	pop    ds
  41c92c:	or     esp,ecx
  41c92e:	ss enter 0x1ea8,0xa0
  41c933:	fild   WORD PTR [esi+edi*8+0x1f5e49d9]
  41c93a:	jb     0x41c8bf
  41c93c:	inc    esi
  41c93d:	cs push edi
  41c93f:	aam    0xb4
  41c941:	jp     0x41c9c2
  41c943:	xor    DWORD PTR [edx-0x78],ebp
  41c946:	inc    edx
  41c947:	stos   BYTE PTR es:[edi],al
  41c948:	bswap  edx
  41c94a:	jns    0x41c9c0
  41c94c:	int    0x4c
  41c94e:	out    dx,al
  41c94f:	xchg   esp,eax
  41c950:	test   BYTE PTR ds:0x231a45d6,ah
  41c956:	dec    ebp
  41c957:	cmp    DWORD PTR [edi-0x60],edx
  41c95a:	dec    edx
  41c95b:	call   0x8e858ac6
  41c960:	inc    ebx
  41c961:	gs enter 0x85d9,0x32
  41c966:	ss icebp 
  41c968:	stos   BYTE PTR es:[edi],al
  41c969:	sub    al,0x5a
  41c96b:	mov    eax,0x1fd8f19f
  41c970:	mov    ds:0x17fa819a,eax
  41c975:	xlat   BYTE PTR ds:[ebx]
  41c976:	rcl    BYTE PTR [ecx+0x18],0x75
  41c97a:	dec    eax
  41c97b:	mov    bl,cl
  41c97d:	or     ebp,esi
  41c97f:	faddp  st(7),st
  41c981:	ror    BYTE PTR [edi-0x5be686a2],1
  41c987:	popf   
  41c988:	ror    BYTE PTR [ebx-0x5c],1
  41c98b:	vmread DWORD PTR [esi],edi
  41c98e:	in     al,0x92
  41c990:	pop    ecx
  41c991:	ins    BYTE PTR es:[edi],dx
  41c992:	jl     0x41c918
  41c994:	mov    bh,0xca
  41c996:	out    dx,al
  41c997:	jmp    0x140:0xaaf61b3d
  41c99e:	std    
  41c99f:	outs   dx,DWORD PTR ds:[esi]
  41c9a0:	scas   eax,DWORD PTR es:[edi]
  41c9a1:	lds    ecx,FWORD PTR [ebx+0x2c]
  41c9a4:	mov    eax,0x68a1b718
  41c9a9:	sub    ebp,DWORD PTR [esp+ebx*2+0x19]
  41c9ad:	push   0xba4b0567
  41c9b2:	loope  0x41c9ee
  41c9b4:	or     BYTE PTR ds:0x16f5f009,dh
  41c9ba:	pop    eax
  41c9bb:	xor    BYTE PTR [ebx+0x14],0x2
  41c9bf:	fcmovu st,st(1)
  41c9c1:	sti    
  41c9c2:	cmp    DWORD PTR [edi-0x52],esi
  41c9c5:	add    ch,BYTE PTR [esi+ecx*8-0x68]
  41c9c9:	pop    edx
  41c9ca:	clc    
  41c9cb:	mov    ebp,0x9dba7b73
  41c9d0:	in     al,dx
  41c9d1:	scas   al,BYTE PTR es:[edi]
  41c9d2:	and    ch,BYTE PTR [ebx+0x106043b]
  41c9d8:	pop    ds
  41c9d9:	rol    DWORD PTR [edi+0x7e],1
  41c9dc:	call   0xd5dd7b57
  41c9e1:	icebp  
  41c9e2:	pop    eax
  41c9e3:	(bad)  
  41c9e4:	loop   0x41c9db
  41c9e6:	sbb    BYTE PTR [ebx+0x6e],0x17
  41c9ea:	jb     0x41c9df
  41c9ec:	xchg   ecx,eax
  41c9ed:	xchg   edx,eax
  41c9ee:	(bad)
  41c9f1:	or     BYTE PTR [edx+eiz*8-0x18],0x8d
  41c9f6:	repnz sbb dh,ch
  41c9f9:	jae    0x41c9d0
  41c9fb:	hlt    
  41c9fc:	test   al,0xc
  41c9fe:	sbb    al,0x22
  41ca00:	lods   al,BYTE PTR ds:[esi]
  41ca01:	icebp  
  41ca02:	enter  0xc21b,0x82
  41ca06:	std    
  41ca07:	addr16 sub esi,edi
  41ca0a:	push   ecx
  41ca0b:	lahf   
  41ca0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca0d:	bound  ecx,QWORD PTR [eax]
  41ca0f:	adc    BYTE PTR [edi-0x739f2a68],dh
  41ca15:	dec    esi
  41ca16:	out    dx,al
  41ca17:	and    eax,0x2655acf7
  41ca1c:	stos   DWORD PTR es:[edi],eax
  41ca1d:	ret    0x24c8
  41ca20:	sbb    BYTE PTR [esi-0x70],bh
  41ca23:	fnsave [edx]
  41ca25:	xchg   edi,eax
  41ca26:	rcl    BYTE PTR [ebx-0x71],cl
  41ca29:	or     al,0xc2
  41ca2b:	add    ah,BYTE PTR [ebx+0x5f7748b7]
  41ca31:	push   ebx
  41ca32:	push   es
  41ca33:	pop    ebx
  41ca34:	lods   eax,DWORD PTR ds:[esi]
  41ca35:	pop    eax
  41ca36:	cmp    al,0xec
  41ca38:	(bad)  
  41ca39:	and    eax,0x46f0e735
  41ca3e:	push   cs
  41ca3f:	adc    dh,BYTE PTR [edx]
  41ca41:	cld    
  41ca42:	(bad)  [eax-0x7b]
  41ca45:	mov    BYTE PTR [edx],0x47
  41ca48:	push   edx
  41ca49:	pop    ds
  41ca4a:	test   eax,0x6fdba895
  41ca4f:	(bad)  
  41ca50:	in     al,0xab
  41ca52:	sti    
  41ca53:	add    DWORD PTR [ebx+0xc],ecx
  41ca56:	nop
  41ca57:	bound  eax,QWORD PTR [edx]
  41ca59:	cmc    
  41ca5a:	add    eax,0x946760e4
  41ca5f:	retf   0xc8d8
  41ca62:	mov    ebp,0x11ebdf8f
  41ca67:	fucomi st,st(7)
  41ca69:	dec    esp
  41ca6a:	aam    0x5c
  41ca6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca6d:	dec    edi
  41ca6e:	or     cl,BYTE PTR [edi-0x4313a06]
  41ca74:	push   eax
  41ca75:	sbb    BYTE PTR [eax+0x4d48caea],dh
  41ca7b:	test   dh,0xa6
  41ca7e:	daa    
  41ca7f:	xchg   ecx,eax
  41ca80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca81:	or     ecx,edi
  41ca83:	add    BYTE PTR ds:0x561e3048,bl
  41ca89:	lods   eax,DWORD PTR ds:[esi]
  41ca8a:	or     DWORD PTR [ebp+0x4a977342],ecx
  41ca90:	adc    DWORD PTR [esi+0x3a83c205],edi
  41ca96:	cmc    
  41ca97:	lds    edi,FWORD PTR [bx+di]
  41ca9a:	stos   BYTE PTR es:[edi],al
  41ca9b:	cdq    
  41ca9c:	dec    esp
  41ca9d:	mov    ah,0xfa
  41ca9f:	aam    0xe3
  41caa1:	pop    eax
  41caa2:	pop    edx
  41caa3:	push   edi
  41caa4:	call   0x4f931609
  41caa9:	ins    DWORD PTR es:[edi],dx
  41caaa:	fsubrp st(4),st
  41caac:	popa   
  41caad:	(bad)  
  41caaf:	pop    esi
  41cab0:	gs popa 
  41cab2:	jge    0x41cb0c
  41cab4:	sub    dl,BYTE PTR [edi+0x28a7f754]
  41caba:	sub    eax,0x1417b417
  41cabf:	push   0xffffff82
  41cac1:	ret    
  41cac2:	int    0x75
  41cac4:	push   es
  41cac5:	fstp   QWORD PTR [eax+0x5eb3cf90]
  41cacb:	lods   eax,DWORD PTR ds:[esi]
  41cacc:	out    0x88,eax
  41cace:	pop    edi
  41cacf:	loop   0x41cb01
  41cad1:	fsubr  QWORD PTR [edx+0x6e]
  41cad4:	inc    ecx
  41cad5:	ins    DWORD PTR es:[edi],dx
  41cad6:	sub    esp,ecx
  41cad8:	test   esp,esi
  41cada:	and    eax,0x98e2b898
  41cadf:	adc    BYTE PTR [ebx],bl
  41cae1:	pop    ebx
  41cae2:	dec    ecx
  41cae3:	mov    ecx,0x3a5378cb
  41cae8:	in     eax,0x64
  41caea:	nop
  41caeb:	pop    es
  41caec:	push   eax
  41caed:	mov    al,0xa8
  41caef:	int3   
  41caf0:	fistp  DWORD PTR [ecx+0x11]
  41caf3:	popf   
  41caf4:	xchg   ebp,eax
  41caf5:	add    bh,ah
  41caf7:	stos   DWORD PTR es:[edi],eax
  41caf8:	(bad)  
  41caf9:	xlat   BYTE PTR ds:[ebx]
  41cafa:	inc    ecx
  41cafb:	add    al,0xba
  41cafd:	mov    esi,0x4d2aa484
  41cb02:	aaa    
  41cb03:	inc    ebp
  41cb04:	stos   BYTE PTR es:[edi],al
  41cb05:	rcr    BYTE PTR [ecx-0x76423ec1],1
  41cb0b:	jle    0x41cab2
  41cb0d:	aam    0xaa
  41cb0f:	ja     0x41cb28
  41cb11:	addr16 loopne 0x41caf7
  41cb14:	sub    ecx,DWORD PTR [esi+esi*4+0x63]
  41cb18:	xor    eax,0x8fa456d6
  41cb1d:	test   DWORD PTR [esi-0x64],edi
  41cb20:	(bad)  
  41cb21:	es or  edi,esi
  41cb24:	add    ah,BYTE PTR [ebx]
  41cb26:	lahf   
  41cb27:	mov    al,0xea
  41cb29:	xor    dl,0x99
  41cb2c:	arpl   bx,dx
  41cb2e:	jmp    0x41cb7f
  41cb30:	gs out 0xd1,al
  41cb33:	jbe    0x41cb9d
  41cb35:	daa    
  41cb36:	jle    0x41cae4
  41cb38:	jg     0x41cb33
  41cb3a:	push   0x5f
  41cb3c:	sub    BYTE PTR [esi-0x80],dl
  41cb3f:	mov    eax,ds:0x88592c45
  41cb44:	push   0x54e4865f
  41cb49:	mov    al,ds:0xca33bdc0
  41cb4e:	xchg   DWORD PTR [edi],esp
  41cb50:	(bad)  
  41cb53:	sti    
  41cb54:	fidivr DWORD PTR [edx]
  41cb56:	push   ds
  41cb57:	sbb    eax,0xd561d12d
  41cb5c:	retf   
  41cb5d:	and    eax,0x22582d6
  41cb62:	pop    es
  41cb63:	retf   
  41cb64:	outs   dx,BYTE PTR ds:[esi]
  41cb65:	push   cs
  41cb66:	js     0x41cbc3
  41cb68:	push   0x34
  41cb6a:	pop    ebp
  41cb6b:	pop    ebx
  41cb6c:	ret    0xf514
  41cb6f:	and    dh,cl
  41cb71:	inc    ebx
  41cb72:	nop
  41cb73:	fidiv  WORD PTR [eax+0x1317ff96]
  41cb79:	push   edx
  41cb7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb7b:	cld    
  41cb7c:	jmp    0x41cb74
  41cb7e:	sti    
  41cb7f:	mov    ch,ch
  41cb81:	sub    DWORD PTR [edx-0x10],ebx
  41cb84:	test   DWORD PTR [ebp+0xdfb69e0],esi
  41cb8a:	bound  edi,QWORD PTR [ebp-0x5b12cf3f]
  41cb90:	cmp    ebp,DWORD PTR [ecx+0x21]
  41cb93:	repnz mov eax,ds:0x22603c3b
  41cb99:	push   esp
  41cb9a:	mov    bh,0xaf
  41cb9c:	enter  0xd4a,0xa5
  41cba0:	cmp    al,0xca
  41cba2:	xor    BYTE PTR [ebp-0x1a],dh
  41cba5:	out    0xec,al
  41cba7:	fchs   
  41cba9:	pop    esp
  41cbaa:	stos   BYTE PTR es:[edi],al
  41cbab:	mov    esi,esi
  41cbad:	sub    BYTE PTR [ebp-0x6e],bh
  41cbb0:	fsub   DWORD PTR [eax-0x66547d0b]
  41cbb6:	out    0xb4,al
  41cbb8:	enter  0x1fd0,0x51
  41cbbc:	(bad)  
  41cbbe:	sub    eax,DWORD PTR [edx+ebx*8]
  41cbc1:	stos   DWORD PTR es:[edi],eax
  41cbc2:	into   
  41cbc3:	or     BYTE PTR [ebp-0x7a],dh
  41cbc6:	and    eax,0x19f23984
  41cbcb:	dec    edx
  41cbcc:	inc    esi
  41cbcd:	add    eax,DWORD PTR [ebp-0x41]
  41cbd0:	add    BYTE PTR [ecx+0x35],bh
  41cbd3:	xor    DWORD PTR [ecx-0x29],ebx
  41cbd6:	jne    0x41cbed
  41cbd8:	cmp    DWORD PTR [ebp+0x39],esp
  41cbdb:	fsub   QWORD PTR [eax-0x61bfbea8]
  41cbe1:	jge    0x41cbaa
  41cbe3:	and    al,0xcf
  41cbe5:	mov    ds:0x8d9b7891,eax
  41cbea:	xchg   ebx,eax
  41cbeb:	or     dl,BYTE PTR [edx+ebx*2-0x47]
  41cbef:	leave  
  41cbf0:	lahf   
  41cbf1:	add    al,0xef
  41cbf3:	ficomp DWORD PTR [ebx+eiz*1]
  41cbf6:	rol    eax,1
  41cbf8:	or     eax,0x4fbea764
  41cbfd:	xor    eax,0xf048cc15
  41cc02:	mov    dh,0xe1
  41cc04:	jne    0x41cbc5
  41cc06:	mov    ds:0xd95230ff,eax
  41cc0b:	jmp    0x41cc5f
  41cc0d:	test   eax,0xb0fc2a44
  41cc12:	stc    
  41cc13:	pop    ds
  41cc14:	es retf 
  41cc16:	fnstenv [edx+ecx*1-0x5e]
  41cc1a:	retf   
  41cc1b:	gs adc eax,0xce6a1eb
  41cc21:	aad    0xe6
  41cc23:	imul   DWORD PTR [ecx+0x27d46fd9]
  41cc29:	out    dx,al
  41cc2a:	popa   
  41cc2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc2c:	adc    eax,0x9e35daa7
  41cc31:	xor    al,BYTE PTR cs:[ebx]
  41cc34:	and    bl,BYTE PTR [ecx+0x54079eaa]
  41cc3a:	test   DWORD PTR [ebx+0x3de0fb81],edx
  41cc40:	(bad)  
  41cc41:	rol    DWORD PTR [esi+esi*4],0xd3
  41cc45:	push   esp
  41cc46:	scas   eax,DWORD PTR es:[edi]
  41cc47:	mul    BYTE PTR [edx+0x61]
  41cc4a:	test   BYTE PTR [ebx-0x2],cl
  41cc4d:	lods   eax,DWORD PTR ds:[esi]
  41cc4e:	fwait
  41cc4f:	xor    al,0x61
  41cc51:	cmp    eax,0xc9c7c606
  41cc56:	jns    0x41ccb3
  41cc58:	mov    dl,0xf8
  41cc5a:	sahf   
  41cc5b:	push   es
  41cc5c:	add    dh,BYTE PTR [edi-0x25]
  41cc5f:	adc    BYTE PTR [edi],al
  41cc61:	mov    ebx,ecx
  41cc63:	inc    eax
  41cc64:	jge    0x41cc70
  41cc66:	shl    DWORD PTR [ebp+0x4a],0xd0
  41cc6a:	sub    al,0x58
  41cc6c:	ss lahf 
  41cc6e:	sbb    al,0x29
  41cc70:	xor    BYTE PTR [eax+eiz*4+0x7bffdbf1],ah
  41cc77:	adc    BYTE PTR [ebx-0x61851235],bl
  41cc7d:	leave  
  41cc7e:	jle    0x41cc97
  41cc80:	pop    ebx
  41cc81:	aad    0x93
  41cc83:	mov    esi,0xda56d2f6
  41cc88:	lss    esp,FWORD PTR [edx+0x6dc0625b]
  41cc8f:	jne    0x41cc49
  41cc91:	cmp    eax,0x639ff9fa
  41cc96:	adc    BYTE PTR [esi-0x4d],bl
  41cc99:	mov    al,ds:0xee53ac95
  41cc9e:	add    BYTE PTR [ecx],dh
  41cca0:	lods   eax,DWORD PTR ds:[esi]
  41cca1:	lock fchs 
  41cca4:	push   edi
  41cca5:	in     al,0xec
  41cca7:	les    ebp,FWORD PTR [ebp+edi*8-0x46deaffb]
  41ccae:	lock cmp edi,DWORD PTR [ecx+0x10]
  41ccb2:	push   esi
  41ccb3:	test   ebx,edi
  41ccb5:	cmp    bl,BYTE PTR [eax]
  41ccb7:	sbb    edx,ecx
  41ccb9:	jmp    0xd6c9e07d
  41ccbe:	lock (bad) [ecx+0x32927b46]
  41ccc5:	test   DWORD PTR [esi-0x6a],edi
  41ccc8:	push   ebx
  41ccc9:	neg    BYTE PTR [esi-0x5d21f0dc]
  41cccf:	xchg   esi,eax
  41ccd0:	or     bh,BYTE PTR [eax+0x2]
  41ccd3:	adc    edi,DWORD PTR [eax-0x42]
  41ccd6:	je     0x41ccf6
  41ccd8:	push   ebp
  41ccd9:	stc    
  41ccda:	fcomp  DWORD PTR [eax+0x4a0fe598]
  41cce0:	into   
  41cce1:	pop    edi
  41cce2:	sub    al,0x55
  41cce4:	mov    al,ds:0xeb6f8a0d
  41ccea:	xchg   ecx,eax
  41cceb:	xchg   edi,eax
  41ccec:	aam    0x31
  41ccee:	out    0xaa,eax
  41ccf0:	mov    ecx,0x4b16e1e8
  41ccf5:	or     DWORD PTR [edi-0x6229d50],esp
  41ccfb:	outs   dx,DWORD PTR cs:[esi]
  41ccfd:	in     eax,0x8b
  41ccff:	lods   eax,DWORD PTR ds:[esi]
  41cd00:	add    ebp,DWORD PTR [eax-0x1a]
  41cd03:	inc    ecx
  41cd04:	(bad)  
  41cd05:	mov    ebp,0x93eaab68
  41cd0a:	ret    0xfdac
  41cd0d:	cmp    eax,0x380bb7cb
  41cd12:	icebp  
  41cd13:	addr16 iret 
  41cd15:	retf   0xd8d8
  41cd18:	sbb    bh,dh
  41cd1a:	or     edi,0x0
  41cd1d:	cwde   
  41cd1e:	jmp    0x692e9b06
  41cd23:	out    dx,al
  41cd24:	mov    esp,0xd00d11a6
  41cd29:	(bad)  
  41cd2a:	cmp    DWORD PTR [eax-0x68],edx
  41cd2d:	call   FWORD PTR [esi-0x4]
  41cd30:	add    ecx,DWORD PTR [esi+0x33c12dfd]
  41cd36:	jno    0x41cdb1
  41cd38:	js     0x41ccf2
  41cd3a:	out    0x3d,al
  41cd3c:	jp     0x41cd70
  41cd3e:	mov    al,0x37
  41cd40:	push   cs
  41cd41:	push   esp
  41cd42:	or     DWORD PTR [edi-0x60],ecx
  41cd45:	addr16 mov al,ds:0xc419
  41cd49:	in     eax,dx
  41cd4a:	loop   0x41cd79
  41cd4c:	ret    0xc0e1
  41cd4f:	sub    al,0x1b
  41cd51:	sar    DWORD PTR [edx-0x67],0x28
  41cd55:	out    dx,eax
  41cd56:	dec    edx
  41cd57:	call   0x7922a258
  41cd5c:	test   eax,0xc84a4ac2
  41cd61:	adc    ebp,DWORD PTR [eax-0x7ccb9b09]
  41cd67:	dec    edi
  41cd68:	push   edi
  41cd69:	adc    al,0xf0
  41cd6b:	and    eax,0x7817d2bc
  41cd70:	and    eax,0xe0cf63e6
  41cd75:	pop    edi
  41cd76:	stos   DWORD PTR es:[edi],eax
  41cd77:	xchg   edx,eax
  41cd78:	je     0x41cd5b
  41cd7a:	or     al,0xe6
  41cd7c:	test   al,0xba
  41cd7e:	mov    ds:0x347a7eb5,eax
  41cd83:	mov    DWORD PTR [esi-0x12],ebp
  41cd86:	pop    ebp
  41cd87:	inc    dl
  41cd89:	pop    esi
  41cd8a:	sahf   
  41cd8b:	push   esp
  41cd8c:	hlt    
  41cd8d:	fstp   QWORD PTR [edx]
  41cd8f:	mov    eax,0x7cbf81e8
  41cd94:	sbb    ch,cl
  41cd96:	pop    ds
  41cd97:	dec    eax
  41cd98:	jo     0x41cdb5
  41cd9a:	fisub  DWORD PTR [bx+di-0x2b9d]
  41cd9f:	mov    edx,0x59b741d0
  41cda4:	cwde   
  41cda5:	lods   al,BYTE PTR ds:[esi]
  41cda6:	mov    esi,0x5cb4c34
  41cdab:	fdiv   QWORD PTR [edi-0x1e164663]
  41cdb1:	mov    ecx,0xad0be2cc
  41cdb6:	ss or  eax,0x4985a71c
  41cdbc:	adc    ch,BYTE PTR [edi+edx*4+0x16880f34]
  41cdc3:	push   edi
  41cdc4:	jp     0x41cd8f
  41cdc6:	adc    eax,0xab61ba1f
  41cdcb:	test   BYTE PTR [eax+0x14f4b9fe],0x5a
  41cdd2:	or     ebp,eax
  41cdd4:	cmp    DWORD PTR [ecx+edi*4+0x18],edi
  41cdd8:	mov    al,ds:0xe917fc52
  41cddd:	inc    esp
  41cdde:	add    DWORD PTR [esi+0x30],ebx
  41cde1:	je     0x41cdd6
  41cde3:	outs   dx,BYTE PTR ds:[esi]
  41cde4:	dec    ecx
  41cde5:	xchg   esi,eax
  41cde6:	jnp    0x41cdec
  41cde8:	into   
  41cde9:	sbb    ecx,DWORD PTR [eax-0x462d7de4]
  41cdef:	inc    ebp
  41cdf0:	jecxz  0x41cde9
  41cdf2:	mov    al,0xe4
  41cdf4:	add    BYTE PTR [ebx],bl
  41cdf6:	mov    DWORD PTR [esi-0x7dcf2e5e],0xd301c47b
  41ce00:	popf   
  41ce01:	xlat   BYTE PTR ds:[ebx]
  41ce02:	jmp    0x1c0b:0xfe6a774d
  41ce09:	mov    BYTE PTR [eax],cl
  41ce0b:	sti    
  41ce0c:	pusha  
  41ce0d:	leave  
  41ce0e:	(bad)  
  41ce0f:	xchg   BYTE PTR [ebx],dl
  41ce11:	dec    ebx
  41ce12:	sbb    esp,DWORD PTR [edi+0x1f]
  41ce15:	add    al,BYTE PTR [ecx+edx*8-0x1f632cbe]
  41ce1c:	lds    esp,FWORD PTR [eax+0x750adac6]
  41ce22:	lea    eax,[ebp+0x7ca2b1ef]
  41ce28:	shl    DWORD PTR [edi-0x63941d5d],cl
  41ce2e:	rcr    BYTE PTR [eax+0x60],1
  41ce31:	in     al,dx
  41ce32:	dec    esi
  41ce33:	out    0x16,eax
  41ce35:	retf   
  41ce36:	pop    ebp
  41ce37:	and    edi,DWORD PTR [esi]
  41ce39:	cmp    al,0x61
  41ce3b:	xor    DWORD PTR [edi],0xffffffdc
  41ce3e:	sub    ebx,DWORD PTR [eax]
  41ce40:	pusha  
  41ce41:	mov    al,ds:0x53ddeef5
  41ce46:	pop    edi
  41ce47:	test   BYTE PTR [ecx+0x6ed2b625],0x88
  41ce4e:	add    al,0x62
  41ce50:	outs   dx,DWORD PTR ds:[esi]
  41ce51:	fld    TBYTE PTR [eax-0x12]
  41ce54:	and    ebp,DWORD PTR [ebp*8+0x5edde0e7]
  41ce5b:	fprem  
  41ce5d:	outs   dx,BYTE PTR ds:[esi]
  41ce5e:	adc    DWORD PTR [ebp-0x2e],esi
  41ce61:	(bad)  
  41ce62:	push   edx
  41ce63:	ret    0xf5a2
  41ce66:	out    0xda,al
  41ce68:	pop    ds
  41ce69:	cmp    ebp,eax
  41ce6b:	inc    eax
  41ce6c:	dec    edi
  41ce6d:	mov    dl,0x13
  41ce6f:	out    dx,al
  41ce70:	add    DWORD PTR [edx+0x459e817f],esp
  41ce76:	jae    0x41ceb7
  41ce78:	cli    
  41ce79:	(bad)  [eax-0x2b]
  41ce7c:	ror    BYTE PTR [edx-0x6d7fe963],0x9a
  41ce83:	inc    ebp
  41ce84:	arpl   WORD PTR [esi-0x27449f9f],bx
  41ce8a:	popa   
  41ce8b:	arpl   WORD PTR [esi-0x22],bx
  41ce8e:	pushf  
  41ce8f:	ja     0x41cef5
  41ce91:	xlat   BYTE PTR ds:[ebx]
  41ce92:	ins    DWORD PTR es:[edi],dx
  41ce93:	leave  
  41ce94:	mov    esi,0x7ea23b8c
  41ce99:	rcr    DWORD PTR [eax+0x45],0xf9
  41ce9d:	xchg   ebp,eax
  41ce9e:	push   ecx
  41ce9f:	sub    DWORD PTR [ecx-0x3f],edi
  41cea2:	dec    ecx
  41cea3:	jns    0x41ceca
  41cea5:	jp     0x41cee8
  41cea7:	add    eax,0x13
  41ceaa:	loope  0x41cf15
  41ceac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cead:	mov    bl,0x38
  41ceaf:	sbb    eax,0x27e27695
  41ceb4:	scas   eax,DWORD PTR es:[edi]
  41ceb5:	cld    
  41ceb6:	fistp  QWORD PTR ds:0x2533b288
  41cebc:	pop    eax
  41cebd:	(bad)  
  41cebe:	std    
  41cebf:	ror    bh,0x8d
  41cec2:	xlat   BYTE PTR ds:[ebx]
  41cec3:	mov    esi,0xe7615215
  41cec8:	not    DWORD PTR ds:0xede68bb4
  41cece:	mov    esp,0xc9b1ceda
  41ced3:	scas   al,BYTE PTR es:[edi]
  41ced4:	scas   eax,DWORD PTR es:[edi]
  41ced5:	push   ebx
  41ced6:	call   0x3f94d377
  41cedb:	mov    ds:0x2628b7be,al
  41cee0:	mul    BYTE PTR [esi-0x2308f3c6]
  41cee6:	sbb    ah,BYTE PTR [edi]
  41cee8:	into   
  41cee9:	push   es
  41ceea:	stc    
  41ceeb:	cmp    DWORD PTR [eax-0xa27c495],ebp
  41cef1:	neg    BYTE PTR [ebp-0x6c]
  41cef4:	mov    ch,0x6
  41cef6:	stos   BYTE PTR es:[edi],al
  41cef7:	and    esi,DWORD PTR [edi]
  41cef9:	int3   
  41cefa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cefb:	cmp    edx,DWORD PTR [ebp+0x21f6fb43]
  41cf01:	int    0x21
  41cf03:	ss aam 0x62
  41cf06:	aad    0x6b
  41cf08:	out    dx,al
  41cf09:	popf   
  41cf0a:	xor    BYTE PTR [ebx-0x44b98db4],bh
  41cf10:	sub    edx,edi
  41cf12:	dec    eax
  41cf13:	popa   
  41cf14:	sbb    eax,0x5d84fdaa
  41cf19:	test   al,0xf
  41cf1b:	or     ebx,esp
  41cf1d:	scas   eax,DWORD PTR es:[edi]
  41cf1e:	jns    0x41cf36
  41cf20:	push   ecx
  41cf21:	mov    bl,BYTE PTR es:[esi+0x76]
  41cf25:	cmp    esp,DWORD PTR [ebx+ebp*8-0x368061c5]
  41cf2c:	xor    al,0xe6
  41cf2e:	dec    ecx
  41cf2f:	retf   
  41cf30:	fild   DWORD PTR [ebp-0x28]
  41cf33:	sub    ecx,ecx
  41cf35:	fidiv  DWORD PTR [ebp-0x5e34c7f3]
  41cf3b:	and    eax,DWORD PTR [ecx+0x1a]
  41cf3e:	test   BYTE PTR [ecx+edi*2-0x3fc60c07],ah
  41cf45:	retf   
  41cf46:	popa   
  41cf47:	cmp    dl,dl
  41cf49:	sub    DWORD PTR [ecx+edi*4+0x27],0x8e64e2d4
  41cf51:	xlat   BYTE PTR ds:[ebx]
  41cf52:	(bad)  
  41cf53:	adc    DWORD PTR [esi-0x3ca9b0c8],esi
  41cf59:	fwait
  41cf5a:	mov    ch,0x12
  41cf5c:	sbb    al,0x2f
  41cf5e:	xchg   al,dh
  41cf60:	xor    eax,0x5639135f
  41cf65:	call   0x7dd8:0xddcf0e86
  41cf6c:	adc    dl,BYTE PTR [ecx+0x4a6d809]
  41cf72:	leave  
  41cf73:	and    ch,BYTE PTR [ebx-0x5dbeec80]
  41cf79:	rol    BYTE PTR [eax],0xd0
  41cf7c:	xchg   edi,eax
  41cf7d:	jge    0x41cf8b
  41cf7f:	(bad)  
  41cf80:	dec    BYTE PTR [edi+0x1f41994a]
  41cf86:	stc    
  41cf87:	xor    ecx,edx
  41cf89:	ja     0x41cf8d
  41cf8b:	mov    DWORD PTR [edi+0x465fc58b],ebp
  41cf91:	push   ds
  41cf92:	imul   ebx,DWORD PTR [esi],0xfffffffe
  41cf95:	xchg   ecx,eax
  41cf96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf97:	pop    esp
  41cf98:	sbb    bh,BYTE PTR [edi-0x6d]
  41cf9b:	cmp    al,0xde
  41cf9d:	aaa    
  41cf9e:	pop    ds
  41cf9f:	stos   BYTE PTR es:[edi],al
  41cfa0:	frstor [eax]
  41cfa2:	in     eax,0x6a
  41cfa4:	(bad)  
  41cfa5:	jg     0x41cfe1
  41cfa7:	sbb    ch,BYTE PTR [esi+0x44]
  41cfaa:	xchg   ecx,eax
  41cfab:	lea    ecx,[eax-0x695b506f]
  41cfb1:	jae    0x41d003
  41cfb3:	and    DWORD PTR [esi+0x7e16834],edi
  41cfb9:	pusha  
  41cfba:	cmp    BYTE PTR [eax-0x63e1fe3a],dh
  41cfc0:	pop    esi
  41cfc1:	lods   eax,DWORD PTR ds:[esi]
  41cfc2:	out    0x87,al
  41cfc4:	mov    WORD PTR ds:0x8fa13fd2,gs
  41cfca:	mov    eax,ds:0x481514f2
  41cfcf:	jle    0x41d00c
  41cfd1:	daa    
  41cfd2:	ret    0xa9da
  41cfd5:	shl    edi,1
  41cfd7:	fst    QWORD PTR ds:0x2b29a3de
  41cfdd:	shl    bh,0x32
  41cfe0:	mov    eax,ds:0x5a4e165b
  41cfe5:	xor    eax,0xa2423be9
  41cfea:	and    DWORD PTR [eax+eiz*8],edi
  41cfed:	dec    eax
  41cfee:	xchg   ecx,eax
  41cfef:	mov    eax,cs
  41cff1:	in     eax,0x58
  41cff3:	adc    ebx,DWORD PTR [edi+0x2cac26f]
  41cff9:	sbb    BYTE PTR [ecx-0x59d003c2],0x56
  41d000:	into   
  41d001:	bound  esi,QWORD PTR [ebp+0x5c]
  41d004:	out    0xaa,eax
  41d006:	cmc    
  41d007:	xchg   DWORD PTR [esi-0x2b],ebx
  41d00a:	cmp    BYTE PTR [esi],0x2
  41d00d:	pop    es
  41d00e:	mov    al,ds:0x9d381b80
  41d013:	popf   
  41d014:	sub    eax,0x41dc5ab
  41d019:	push   cs
  41d01a:	ins    BYTE PTR es:[edi],dx
  41d01b:	mov    esp,0xac1e7976
  41d020:	jb     0x41cfb9
  41d022:	gs xchg edx,eax
  41d024:	test   al,0x95
  41d026:	dec    edx
  41d027:	setbe  ch
  41d02a:	adc    DWORD PTR [ecx+0x6abe4181],esi
  41d030:	push   cs
  41d031:	fs stc 
  41d033:	mov    BYTE PTR [edi+0x65905f07],ah
  41d039:	inc    esi
  41d03a:	xchg   edx,eax
  41d03b:	jne    0x41cfc3
  41d03d:	popa   
  41d03e:	ret    0x2d35
  41d041:	stos   BYTE PTR es:[edi],al
  41d042:	sub    edi,DWORD PTR [edx-0x1688b1d9]
  41d048:	int    0x75
  41d04a:	xor    dl,bh
  41d04c:	sbb    BYTE PTR [edi+ecx*2],bl
  41d04f:	push   ebx
  41d050:	ret    
  41d051:	mov    ebx,0x930e633b
  41d056:	in     eax,dx
  41d057:	jae    0x41d03a
  41d059:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d05a:	mov    ds:0x9de1cd95,al
  41d05f:	das    
  41d060:	nop
  41d061:	mov    bl,0x3f
  41d063:	das    
  41d064:	dec    eax
  41d065:	add    dl,BYTE PTR [ebp+0x95831a5]
  41d06b:	cld    
  41d06c:	test   BYTE PTR [eax],ah
  41d06e:	inc    ebp
  41d06f:	mov    ah,0x19
  41d071:	pop    ss
  41d072:	or     BYTE PTR [ecx+0x12],dl
  41d075:	in     al,0x24
  41d077:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d078:	(bad)  
  41d079:	jo     0x41d0e1
  41d07b:	adc    DWORD PTR [ecx+ebx*4+0x391c39af],0x7b
  41d083:	daa    
  41d084:	adc    BYTE PTR [eax],0xdf
  41d087:	bound  ecx,QWORD PTR [ebp+0x6368076c]
  41d08d:	out    dx,al
  41d08e:	adc    DWORD PTR [ebx],ebx
  41d090:	or     eax,0x0
  41d093:	aad    0x43
  41d095:	data16 fist DWORD PTR [eax-0x1f]
  41d099:	leave  
  41d09a:	push   ebp
  41d09b:	xor    BYTE PTR [ebx],al
  41d09d:	mov    ebp,0x56399f78
  41d0a2:	jns    0x41d062
  41d0a4:	mov    cs,ebp
  41d0a6:	lods   al,BYTE PTR ds:[esi]
  41d0a7:	sub    eax,0x74a679a
  41d0ac:	xlat   BYTE PTR ds:[ebx]
  41d0ad:	icebp  
  41d0ae:	jmp    0x41d0d6
  41d0b0:	sub    BYTE PTR [ebx-0x63984bd8],bh
  41d0b6:	jecxz  0x41d0aa
  41d0b8:	ss shr ebp,cl
  41d0bb:	jecxz  0x41d06a
  41d0bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0be:	and    BYTE PTR [ebp-0x33591e9a],bl
  41d0c4:	enter  0x92b7,0x97
  41d0c8:	or     cl,dh
  41d0ca:	mov    bh,0xb6
  41d0cc:	outs   dx,BYTE PTR ds:[esi]
  41d0cd:	cdq    
  41d0ce:	push   esp
  41d0cf:	sbb    dl,bl
  41d0d1:	push   0x754ff686
  41d0d6:	repz sbb eax,0xc842f3d9
  41d0dc:	push   edx
  41d0dd:	inc    esp
  41d0de:	inc    ebp
  41d0df:	push   0xffffffd5
  41d0e1:	dec    esi
  41d0e2:	mov    cl,0x74
  41d0e4:	sti    
  41d0e5:	or     al,0x36
  41d0e7:	int3   
  41d0e8:	scas   eax,DWORD PTR es:[edi]
  41d0e9:	mov    ah,0x55
  41d0eb:	fistp  DWORD PTR [edx+0x23]
  41d0ee:	push   ds
  41d0ef:	mov    esp,0xcc4aa82
  41d0f4:	add    BYTE PTR [ebp+0x25],dl
  41d0f7:	arpl   WORD PTR [edi-0x24],si
  41d0fa:	loope  0x41d162
  41d0fc:	retf   
  41d0fd:	mov    cl,ch
  41d0ff:	inc    ecx
  41d100:	vpor   xmm6,xmm6,XMMWORD PTR [bx+di]
  41d105:	test   eax,0x97815a39
  41d10a:	out    dx,eax
  41d10b:	fsub   DWORD PTR [ebx-0x500cb82b]
  41d111:	mov    WORD PTR [ecx+0x35],gs
  41d114:	or     al,0xf6
  41d116:	xchg   ebp,eax
  41d117:	inc    eax
  41d118:	aam    0x77
  41d11a:	fidiv  WORD PTR [ebp-0x3850d6d8]
  41d120:	sub    al,BYTE PTR [esi-0x58]
  41d123:	out    dx,eax
  41d124:	test   DWORD PTR [ebx-0x29b3ab08],edi
  41d12a:	pop    eax
  41d12b:	(bad)  
  41d12c:	je     0x41d16f
  41d12e:	and    al,0xaa
  41d130:	mov    ebp,0xfa509f57
  41d135:	dec    ebx
  41d136:	cmp    cl,BYTE PTR [ebp-0x15384a59]
  41d13c:	rol    DWORD PTR [edx+0x72],0xbc
  41d140:	pop    eax
  41d141:	inc    ebx
  41d142:	cmp    ecx,edi
  41d144:	mov    esi,0xc1b34663
  41d149:	js     0x41d0cf
  41d14b:	pop    edi
  41d14c:	jae    0x41d0e7
  41d14e:	test   BYTE PTR [esi],al
  41d150:	out    0x72,al
  41d152:	jb     0x41d17d
  41d154:	in     eax,0xb6
  41d156:	in     al,0xe9
  41d158:	inc    ebx
  41d159:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d15b:	fistp  QWORD PTR [ecx+0x77]
  41d15e:	mov    ebp,0x466e8da5
  41d163:	jp     0x41d1d1
  41d165:	hlt    
  41d166:	shl    DWORD PTR fs:[ebx],1
  41d169:	push   0xe58d5664
  41d16e:	mov    ds,ecx
  41d170:	das    
  41d171:	repnz in eax,dx
  41d173:	sbb    esp,edi
  41d175:	int3   
  41d176:	dec    edi
  41d177:	cli    
  41d178:	jmp    0x2651:0x42d9a15f
  41d17f:	addr16 clc 
  41d181:	fimul  WORD PTR [esi]
  41d183:	sbb    esp,DWORD PTR [edi-0x2c]
  41d186:	xchg   BYTE PTR [ecx-0x50c7572],ch
  41d18c:	add    BYTE PTR [ebx],cl
  41d18e:	mov    ecx,DWORD PTR [ebx-0x58db1ec5]
  41d194:	mov    esi,es
  41d196:	retf   0x1940
  41d199:	jl     0x41d198
  41d19b:	xchg   esp,eax
  41d19c:	mov    eax,0x28ec988
  41d1a1:	inc    edi
  41d1a2:	xor    BYTE PTR [eax+0x11],ah
  41d1a5:	into   
  41d1a6:	pop    esp
  41d1a7:	sbb    ebp,DWORD PTR [eax+0x7e]
  41d1aa:	or     eax,0x40bcd1cc
  41d1af:	ja     0x41d1b9
  41d1b1:	stc    
  41d1b2:	sbb    dh,0xc4
  41d1b5:	jbe    0x41d199
  41d1b7:	push   esi
  41d1b8:	mov    DWORD PTR [edi],esp
  41d1ba:	nop
  41d1bb:	dec    ebp
  41d1bc:	push   edx
  41d1bd:	pop    ds
  41d1be:	ret    0x7d5d
  41d1c1:	xor    al,0xe0
  41d1c3:	pop    ecx
  41d1c4:	or     al,0x1f
  41d1c6:	mov    ah,0xf
  41d1c8:	das    
  41d1c9:	adc    edx,ebx
  41d1cb:	or     ebx,ebx
  41d1cd:	add    cl,BYTE PTR [eax-0x3a5a50e2]
  41d1d3:	push   esi
  41d1d4:	clc    
  41d1d5:	or     al,0xf5
  41d1d7:	push   ebp
  41d1d8:	or     dh,bh
  41d1da:	test   eax,0x432bde13
  41d1df:	xchg   si,ax
  41d1e1:	or     al,0xeb
  41d1e3:	repnz aaa 
  41d1e5:	std    
  41d1e6:	jle    0x41d23c
  41d1e8:	push   eax
  41d1e9:	fidiv  WORD PTR [ebx]
  41d1eb:	rcr    DWORD PTR [ebp-0x6],1
  41d1ee:	bound  ebp,QWORD PTR [esi-0x4d]
  41d1f1:	test   eax,0xd84ab661
  41d1f6:	and    al,0x94
  41d1f8:	mov    esp,0x659856dd
  41d1fd:	sub    al,0x17
  41d1ff:	cmp    eax,0xe5cb98f1
  41d204:	ja     0x41d254
  41d206:	stos   DWORD PTR es:[edi],eax
  41d207:	loop   0x41d258
  41d209:	daa    
  41d20a:	lahf   
  41d20b:	mov    ecx,0xaeade089
  41d210:	jne    0x41d1bb
  41d212:	and    al,0xff
  41d214:	(bad)  
  41d215:	mov    ecx,0x804005e7
  41d21a:	inc    esp
  41d21b:	mov    dh,0x15
  41d21d:	add    DWORD PTR [esp+eax*1-0x6244fddb],esi
  41d224:	repz or DWORD PTR [ebx],eax
  41d227:	je     0x41d270
  41d229:	dec    ecx
  41d22a:	mov    ds:0xa54ec093,eax
  41d22f:	bound  ecx,QWORD PTR [eax]
  41d231:	loopne 0x41d297
  41d233:	jmp    FWORD PTR [eax-0x7a]
  41d236:	in     al,0xfa
  41d238:	mov    esp,0x416a69c3
  41d23d:	cmp    eax,0x6ffa9b75
  41d242:	out    dx,al
  41d243:	xchg   DWORD PTR [ecx+eiz*8+0x29d579fb],ebp
  41d24a:	mov    eax,ds:0x9282faae
  41d24f:	xor    DWORD PTR [esi+0x18088a34],edx
  41d255:	jb     0x41d24c
  41d257:	aam    0xf2
  41d259:	pop    ds
  41d25a:	inc    esi
  41d25b:	pop    ecx
  41d25c:	mov    bh,BYTE PTR [esi]
  41d25e:	jo     0x41d2da
  41d260:	adc    al,0x76
  41d262:	xor    al,BYTE PTR [ebx+0x44b62b86]
  41d268:	out    dx,al
  41d269:	jbe    0x41d235
  41d26b:	xchg   BYTE PTR [ebx-0x30],bl
  41d26e:	shr    DWORD PTR [ebp-0x30a8ab35],1
  41d274:	mov    ds:0x4de22b5b,al
  41d279:	add    BYTE PTR ds:0x18bd90f8,bh
  41d27f:	sub    ah,dl
  41d281:	cli    
  41d282:	out    dx,eax
  41d283:	iret   
  41d284:	fld    QWORD PTR [edi]
  41d286:	pop    esi
  41d287:	adc    al,0xf1
  41d289:	dec    esp
  41d28a:	in     al,0x8c
  41d28c:	sbb    DWORD PTR [esi+0x6a6e5997],eax
  41d292:	xor    al,0xb
  41d294:	fidivr DWORD PTR [edx]
  41d296:	add    DWORD PTR [ebx],ecx
  41d298:	imul   ecx,DWORD PTR [edx-0x50],0x82a89f54
  41d29f:	retw   
  41d2a1:	adc    DWORD PTR [edx-0x3b],0xe16297ad
  41d2a8:	or     BYTE PTR [ebp-0x673eaea8],bh
  41d2ae:	jl     0x41d25f
  41d2b0:	mov    BYTE PTR [edi-0x1f0004a1],bh
  41d2b6:	test   dh,dl
  41d2b8:	das    
  41d2b9:	cmp    ecx,DWORD PTR [eax+0x46a5cb66]
  41d2bf:	popf   
  41d2c0:	push   ds
  41d2c1:	or     BYTE PTR [ebp+0x23d23c2e],ah
  41d2c7:	(bad)  
  41d2c8:	sahf   
  41d2c9:	adc    BYTE PTR fs:[esi],ch
  41d2cc:	(bad)  
  41d2ce:	sar    BYTE PTR [esi+esi*1-0x11441ccf],0xf9
  41d2d6:	mov    ds:0x9fb238d5,al
  41d2db:	or     BYTE PTR [esi+0x16],bh
  41d2de:	mov    esi,0xa9e8649c
  41d2e3:	test   al,0xd6
  41d2e5:	inc    ebp
  41d2e6:	pushf  
  41d2e7:	into   
  41d2e8:	lahf   
  41d2e9:	ja     0x41d282
  41d2eb:	stos   DWORD PTR es:[edi],eax
  41d2ec:	stos   DWORD PTR es:[edi],eax
  41d2ed:	push   edi
  41d2ee:	and    dh,BYTE PTR [ebx+esi*1]
  41d2f1:	rcl    BYTE PTR [ecx+0x1],0x83
  41d2f5:	leave  
  41d2f6:	and    eax,0xe7ad2db
  41d2fb:	ss pop ebx
  41d2fd:	adc    esp,DWORD PTR [esi+0x3e]
  41d300:	inc    esp
  41d301:	cmp    ah,ch
  41d303:	add    ah,BYTE PTR [ecx-0x7b65d148]
  41d309:	mov    dh,al
  41d30b:	add    eax,0x46ac58f8
  41d310:	(bad)  
  41d311:	jns    0x41d32f
  41d313:	mov    bl,0xa6
  41d315:	and    BYTE PTR [ebp-0x1f42f47e],ah
  41d31b:	mov    ds:0x9e0df501,al
  41d320:	sahf   
  41d321:	or     eax,0x7ac70000
  41d326:	(bad)  
  41d327:	loopne 0x41d30f
  41d329:	jb     0x41d319
  41d32b:	adc    eax,0xcaa88442
  41d330:	shr    BYTE PTR [edi+esi*1],1
  41d333:	or     edx,0xbb668ac6
  41d339:	xor    DWORD PTR [ebp+0x606a0c39],ebp
  41d33f:	icebp  
  41d340:	ja     0x41d3b6
  41d342:	add    DWORD PTR [eax+0xaea668d],eax
  41d348:	(bad)  
  41d349:	into   
  41d34a:	mov    ds:0x2fbdd8ee,al
  41d34f:	adc    BYTE PTR [eax-0xcd6c200],dl
  41d355:	inc    eax
  41d356:	jle    0x41d382
  41d358:	push   esi
  41d359:	mov    bl,0x9c
  41d35b:	leave  
  41d35c:	jecxz  0x41d3b6
  41d35e:	push   ebx
  41d35f:	mov    edx,0xe363b2e9
  41d364:	out    0xf,al
  41d366:	mov    eax,0x57ea3c74
  41d36b:	fst    QWORD PTR ds:0x6f254803
  41d371:	popa   
  41d372:	aaa    
  41d373:	sub    cl,BYTE PTR [ebx-0x5e]
  41d376:	adc    ah,BYTE PTR [ebx+0x6b]
  41d379:	sbb    dh,BYTE PTR [ebp-0x61]
  41d37c:	xor    DWORD PTR [edi+0x58],esp
  41d37f:	mov    ebp,DWORD PTR [esi]
  41d381:	fidivr WORD PTR [ebx]
  41d383:	push   ss
  41d384:	lods   al,BYTE PTR ds:[esi]
  41d385:	popf   
  41d386:	inc    esi
  41d387:	jnp    0x41d3c6
  41d389:	push   cs
  41d38a:	lds    ebx,FWORD PTR [esi+0x64d7d8e5]
  41d390:	icebp  
  41d391:	push   ds
  41d392:	jnp    0x41d3c3
  41d394:	rol    BYTE PTR [ecx],0x26
  41d397:	sbb    DWORD PTR [edi+ebp*2+0x65],0xffffff86
  41d39c:	(bad)  
  41d39d:	stos   DWORD PTR es:[edi],eax
  41d39e:	(bad)  
  41d3a0:	xchg   DWORD PTR ds:0xa637d4bf,ecx
  41d3a6:	(bad)  
  41d3a7:	mov    ebp,0xdb4bbe22
  41d3ac:	gs mov ah,0xde
  41d3af:	push   edi
  41d3b0:	das    
  41d3b1:	imul   eax,edi,0x4bc6be20
  41d3b7:	lahf   
  41d3b8:	(bad)  
  41d3b9:	mov    ah,0x1e
  41d3bb:	push   0x227063c5
  41d3c0:	push   edx
  41d3c1:	les    esp,FWORD PTR [edi*1+0x12765e38]
  41d3c8:	sub    al,0xe1
  41d3ca:	cmp    bh,BYTE PTR [esi+0xef09a88]
  41d3d0:	sahf   
  41d3d1:	setns  bh
  41d3d4:	xchg   ebp,eax
  41d3d5:	jmp    0xc5523a2a
  41d3da:	jmp    0x64b6d2d2
  41d3df:	sub    DWORD PTR [ebx],0x516c554e
  41d3e5:	inc    esi
  41d3e6:	push   0xffffffb1
  41d3e8:	push   edx
  41d3e9:	ins    BYTE PTR es:[edi],dx
  41d3ea:	lods   al,BYTE PTR ds:[esi]
  41d3eb:	fist   WORD PTR [ecx]
  41d3ed:	jb     0x41d382
  41d3ef:	ror    BYTE PTR [esi+0x31d1302d],cl
  41d3f5:	jns    0x41d435
  41d3f7:	push   edx
  41d3f8:	or     bh,ah
  41d3fa:	dec    edx
  41d3fb:	inc    ebx
  41d3fc:	sub    BYTE PTR [ebx-0x487f9da4],0xdb
  41d403:	xchg   edi,eax
  41d404:	cs or  edx,esi
  41d407:	cdq    
  41d408:	cwde   
  41d409:	enter  0x2428,0xe7
  41d40d:	in     eax,dx
  41d40e:	(bad)  
  41d40f:	repz push edi
  41d411:	in     al,0xc0
  41d413:	idiv   BYTE PTR [ebx+0x5f]
  41d416:	or     DWORD PTR [edx],esp
  41d418:	jne    0x41d41d
  41d41a:	pop    ecx
  41d41b:	rcl    DWORD PTR [edx+ebp*8-0x21],1
  41d41f:	xchg   esp,eax
  41d420:	push   edi
  41d421:	inc    ecx
  41d422:	lahf   
  41d423:	xlat   BYTE PTR ds:[ebx]
  41d424:	dec    ecx
  41d425:	or     edx,esi
  41d427:	inc    ebp
  41d428:	or     BYTE PTR [edi],al
  41d42a:	mov    bh,0xa3
  41d42c:	adc    DWORD PTR [ebp+0x65d591ba],0xef6d6ee7
  41d436:	ins    BYTE PTR es:[edi],dx
  41d437:	xchg   ebp,eax
  41d438:	test   esi,edx
  41d43a:	mov    ebp,0x7e8192af
  41d43f:	inc    edx
  41d440:	loop   0x41d410
  41d442:	xchg   ebp,eax
  41d443:	hlt    
  41d444:	int    0xae
  41d446:	add    ebx,DWORD PTR [edi+0x1cc1d043]
  41d44c:	xchg   edi,edi
  41d44e:	mov    al,ds:0x216d337e
  41d453:	xchg   ebx,eax
  41d454:	jb     0x41d46c
  41d456:	push   eax
  41d457:	es inc eax
  41d459:	push   ecx
  41d45a:	cld    
  41d45b:	cmp    al,0xdc
  41d45d:	sbb    DWORD PTR [ebp-0x18bd3a40],esi
  41d463:	(bad)  
  41d464:	ss nop
  41d466:	xor    bh,bl
  41d468:	in     al,0xfe
  41d46a:	mov    BYTE PTR [eax-0x1513bbf3],bl
  41d470:	mov    ch,0x51
  41d472:	jp     0x41d439
  41d474:	into   
  41d475:	inc    ebp
  41d476:	push   ebp
  41d477:	pop    edi
  41d478:	mov    cl,0x82
  41d47a:	mov    ch,0xd4
  41d47c:	mov    ebx,0x2701ce6c
  41d481:	mov    eax,0xc17bb452
  41d486:	and    al,0x7
  41d488:	cld    
  41d489:	xchg   esp,eax
  41d48a:	sub    edi,0xe93990e7
  41d490:	and    al,0x4f
  41d492:	les    ecx,FWORD PTR [eax-0x7d520388]
  41d498:	xchg   edi,eax
  41d499:	and    edx,eax
  41d49b:	xlat   BYTE PTR ds:[ebx]
  41d49c:	jnp    0x41d4ba
  41d49e:	mov    BYTE PTR [eax-0x7a],cl
  41d4a1:	xchg   edx,eax
  41d4a2:	fs out dx,eax
  41d4a4:	aam    0x72
  41d4a6:	mov    cl,0x4b
  41d4a8:	retf   0xb2ca
  41d4ab:	outs   dx,DWORD PTR ds:[esi]
  41d4ac:	and    BYTE PTR [ecx],al
  41d4ae:	jae    0x41d4ab
  41d4b0:	sub    al,0x35
  41d4b2:	sbb    edi,DWORD PTR [edx+0xa]
  41d4b5:	sub    al,0x63
  41d4b7:	jo     0x41d46a
  41d4b9:	test   DWORD PTR [edx],esi
  41d4bb:	lods   al,BYTE PTR ds:[esi]
  41d4bc:	fbld   TBYTE PTR [edi]
  41d4be:	bound  eax,QWORD PTR [ecx-0x2c]
  41d4c1:	lea    ebx,[edx-0x8645f11]
  41d4c7:	xchg   edi,eax
  41d4c8:	test   al,0x4a
  41d4ca:	aad    0x32
  41d4cc:	icebp  
  41d4cd:	adc    dl,BYTE PTR [esi-0x37]
  41d4d0:	in     al,dx
  41d4d1:	dec    ebx
  41d4d2:	cmp    eax,0x153ab1cf
  41d4d7:	pop    edi
  41d4d8:	int3   
  41d4d9:	adc    ah,BYTE PTR [esi]
  41d4db:	jne    0x41d469
  41d4dd:	fdivr  st,st(4)
  41d4df:	in     al,0xf7
  41d4e1:	out    dx,al
  41d4e2:	and    DWORD PTR [edi+0x20],ebx
  41d4e5:	push   ds
  41d4e6:	sub    BYTE PTR [ecx-0x48],dl
  41d4e9:	in     eax,0xf5
  41d4eb:	dec    esi
  41d4ec:	jne    0x41d506
  41d4ee:	dec    edx
  41d4ef:	out    dx,al
  41d4f0:	add    DWORD PTR [edx],ecx
  41d4f2:	ins    BYTE PTR es:[edi],dx
  41d4f3:	jp     0x41d4f6
  41d4f5:	adc    al,0xf8
  41d4f7:	xchg   edx,eax
  41d4f8:	add    BYTE PTR [eax+edx*1+0x35c9b26],al
  41d4ff:	xchg   ebx,eax
  41d500:	inc    esp
  41d501:	cdq    
  41d502:	push   ecx
  41d503:	mov    cs,WORD PTR [esi+edx*8+0x4627f278]
  41d50a:	and    esp,DWORD PTR [ecx-0x4]
  41d50d:	pop    es
  41d50e:	mov    ecx,0xb0e85f4c
  41d513:	popf   
  41d514:	aaa    
  41d515:	loope  0x41d584
  41d517:	add    eax,0xa66421c8
  41d51c:	test   eax,ebx
  41d51e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d51f:	jg     0x41d4a3
  41d521:	adc    BYTE PTR [esi-0x5a],dl
  41d524:	sbb    bl,BYTE PTR [ebp+ebx*1+0x3e1f3545]
  41d52b:	and    esp,DWORD PTR ds:0xe8a6b355
  41d531:	aaa    
  41d532:	cdq    
  41d533:	rcl    dh,cl
  41d535:	(bad)  
  41d536:	je     0x41d55a
  41d538:	mul    DWORD PTR [ebx]
  41d53a:	push   ds
  41d53b:	ja     0x41d531
  41d53d:	test   BYTE PTR [ebp-0x3f8ca543],dh
  41d543:	pop    ebp
  41d544:	test   eax,0xa5fd3def
  41d549:	mov    DWORD PTR [bp+si-0x2f2c],esp
  41d54e:	popf   
  41d54f:	es push ecx
  41d551:	in     al,dx
  41d552:	mov    al,0x88
  41d554:	sbb    eax,0x7ff4b6a5
  41d559:	dec    ebx
  41d55a:	cdq    
  41d55b:	retf   0xc48c
  41d55e:	and    ebp,edi
  41d560:	inc    esp
  41d561:	cld    
  41d562:	mov    dh,0x7d
  41d564:	retf   
  41d565:	loopne 0x41d544
  41d567:	imul   ebx,DWORD PTR [ebx],0xc0ed858c
  41d56d:	adc    eax,0x2ee6f37b
  41d572:	loope  0x41d544
  41d574:	sub    eax,0x4d1abdd1
  41d579:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d57a:	stc    
  41d57b:	jae    0x41d50c
  41d57d:	ror    cl,cl
  41d57f:	xor    al,0xe4
  41d581:	int    0x20
  41d583:	ins    DWORD PTR es:[edi],dx
  41d584:	dec    ecx
  41d585:	rcr    edx,cl
  41d587:	bound  esi,QWORD PTR [edi+0x3d3b4e25]
  41d58d:	inc    esp
  41d58e:	dec    ecx
  41d58f:	ins    DWORD PTR es:[edi],dx
  41d590:	outs   dx,BYTE PTR ds:[esi]
  41d591:	pop    ecx
  41d592:	das    
  41d593:	sbb    ch,BYTE PTR [ebx]
  41d595:	neg    BYTE PTR [ecx+0x59f3e175]
  41d59b:	dec    edx
  41d59c:	push   ecx
  41d59d:	xchg   DWORD PTR [ecx-0x4b3171a7],ebp
  41d5a3:	(bad)  
  41d5a5:	sub    DWORD PTR [ecx],ebp
  41d5a7:	neg    DWORD PTR [edx+esi*8-0x52ec673e]
  41d5ae:	jns    0x41d5f7
  41d5b0:	int3   
  41d5b1:	test   al,0x55
  41d5b3:	nop
  41d5b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5b5:	ins    BYTE PTR es:[edi],dx
  41d5b6:	bound  eax,QWORD PTR [edi-0x76]
  41d5b9:	mov    dl,0xa1
  41d5bb:	popf   
  41d5bc:	xchg   BYTE PTR [edx],bl
  41d5be:	repnz rcl BYTE PTR [ebp-0x794338a5],cl
  41d5c5:	sbb    DWORD PTR [edx+0x6756104c],0xce14e6ce
  41d5cf:	cmp    BYTE PTR [ebp+0x17],0xe1
  41d5d3:	mov    esi,0x4161a2cb
  41d5d8:	adc    cl,BYTE PTR [ecx]
  41d5da:	jo     0x41d65b
  41d5dc:	inc    ebx
  41d5dd:	xchg   ebx,eax
  41d5de:	loop   0x41d639
  41d5e0:	mov    esi,DWORD PTR fs:[edx+0x39]
  41d5e4:	jmp    0x41d5bd
  41d5e6:	loopne 0x41d60c
  41d5e8:	jb     0x41d593
  41d5ea:	pop    edx
  41d5eb:	sub    esp,DWORD PTR [esi]
  41d5ed:	iret   
  41d5ee:	popf   
  41d5ef:	retf   0x8f13
  41d5f2:	lea    edi,[ebx+0x685c2311]
  41d5f8:	das    
  41d5f9:	add    eax,eax
  41d5fb:	aam    0x2d
  41d5fd:	cmp    BYTE PTR [ecx],dh
  41d5ff:	sbb    dh,bh
  41d601:	add    DWORD PTR [eax+0x37],ecx
  41d604:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d605:	sub    esp,DWORD PTR [esi-0x59]
  41d608:	imul   esp,edx,0xe062e894
  41d60e:	ss push esi
  41d610:	hlt    
  41d611:	xlat   BYTE PTR ds:[ebx]
  41d612:	cmp    sp,WORD PTR [eax-0x59]
  41d616:	lea    esp,[eax-0x47]
  41d619:	jo     0x41d635
  41d61b:	mov    ebp,0x613440d2
  41d620:	cmp    eax,0x599232f6
  41d625:	cwde   
  41d626:	jmp    0x41d685
  41d628:	sub    bh,dh
  41d62a:	lock cwde 
  41d62c:	xor    DWORD PTR [edi+ebp*4],ebx
  41d62f:	into   
  41d630:	pop    edx
  41d631:	fldenv [esi]
  41d633:	jno    0x41d643
  41d635:	cmp    BYTE PTR [esi+0x65f64149],cl
  41d63b:	(bad)  
  41d63c:	(bad)  
  41d63d:	jns    0x41d671
  41d63f:	cmp    dl,BYTE PTR [edx]
  41d641:	cmp    al,0xe1
  41d643:	std    
  41d644:	rcr    DWORD PTR [ecx+0x53],0x54
  41d648:	add    DWORD PTR [esp+ebp*2],0xffffffe6
  41d64c:	ja     0x41d606
  41d64e:	pop    edi
  41d64f:	das    
  41d650:	pop    ebp
  41d651:	cmp    bh,BYTE PTR [edx]
  41d653:	fnstsw WORD PTR ds:0x605770f1
  41d659:	sbb    eax,0x28b99c5b
  41d65e:	and    eax,0x1bdece87
  41d663:	outs   dx,DWORD PTR ds:[esi]
  41d664:	lods   al,BYTE PTR ds:[esi]
  41d665:	mov    ecx,0x58dc33ba
  41d66a:	adc    BYTE PTR [edx],bl
  41d66c:	push   ebp
  41d66d:	into   
  41d66e:	adc    al,0x5b
  41d670:	aas    
  41d671:	aam    0x9d
  41d673:	push   edi
  41d674:	shl    DWORD PTR [esi+0x5800a515],cl
  41d67a:	adc    BYTE PTR [edx-0x1d],bh
  41d67d:	dec    ebx
  41d67e:	adc    esi,DWORD PTR [esi+0x7c]
  41d681:	push   ecx
  41d682:	popa   
  41d683:	ss mov edx,0xe17d4bf4
  41d689:	lods   al,BYTE PTR ds:[esi]
  41d68a:	and    dl,dh
  41d68c:	mov    DWORD PTR fs:[edx],ebx
  41d68f:	or     eax,0xad55607f
  41d694:	ret    
  41d695:	fnstcw WORD PTR [ebx+0x7c66a]
  41d69b:	mov    dl,0x94
  41d69d:	stc    
  41d69e:	(bad)  
  41d6a0:	xchg   edx,esp
  41d6a2:	sbb    esi,DWORD PTR [ebx+0x45803f23]
  41d6a8:	inc    ecx
  41d6a9:	jmp    0x41d63c
  41d6ab:	js     0x41d645
  41d6ad:	jmp    0x93cb841e
  41d6b2:	jb     0x41d723
  41d6b4:	jp     0x41d671
  41d6b6:	add    ch,al
  41d6b8:	(bad)  
  41d6b9:	and    dl,BYTE PTR [eax]
  41d6bb:	sbb    BYTE PTR [esi+ebx*8-0xd],dh
  41d6bf:	aam    0xf0
  41d6c1:	mov    BYTE PTR [ecx],0x1f
  41d6c4:	adc    eax,0x956cda88
  41d6c9:	aaa    
  41d6ca:	and    al,0x88
  41d6cc:	or     al,0x92
  41d6ce:	stos   DWORD PTR es:[edi],eax
  41d6cf:	jp     0x41d65e
  41d6d1:	test   bh,0xd2
  41d6d4:	enter  0x845,0x50
  41d6d8:	stos   DWORD PTR es:[edi],eax
  41d6d9:	(bad)  
  41d6da:	cs pop ecx
  41d6dc:	jmp    0x41d6e8
  41d6de:	(bad)  
  41d6df:	cmc    
  41d6e0:	stos   BYTE PTR es:[edi],al
  41d6e1:	push   es
  41d6e2:	adc    dx,WORD PTR [edx+0x7f]
  41d6e6:	xor    DWORD PTR [ecx],ebp
  41d6e8:	mov    BYTE PTR [ecx],ch
  41d6ea:	push   eax
  41d6eb:	scas   eax,DWORD PTR es:[edi]
  41d6ec:	jb     0x41d736
  41d6ee:	mov    al,ds:0xcc662650
  41d6f3:	popa   
  41d6f4:	jmp    0x13c8:0xe0ab9a2c
  41d6fb:	inc    esi
  41d6fc:	jbe    0x41d70e
  41d6fe:	inc    ebp
  41d6ff:	mov    BYTE PTR [ecx+0x67],dh
  41d702:	mov    DWORD PTR [eax],0x147ddaef
  41d708:	(bad)
  41d70b:	iret   
  41d70c:	sbb    esp,esp
  41d70e:	imul   DWORD PTR [edx-0x7b]
  41d711:	femms  
  41d713:	fst    DWORD PTR ds:0x9c8f041b
  41d719:	jne    0x41d6bd
  41d71b:	pop    ebp
  41d71c:	loopne 0x41d72f
  41d71e:	mov    bh,0xa8
  41d720:	sub    al,0x93
  41d722:	sub    al,0xad
  41d724:	scas   eax,DWORD PTR es:[edi]
  41d725:	pop    es
  41d726:	ds cs dec ebp
  41d729:	enter  0x7b61,0xef
  41d72d:	ret    
  41d72e:	stos   BYTE PTR es:[edi],al
  41d72f:	sub    ebx,0xffffffaf
  41d732:	sar    BYTE PTR [eax],cl
  41d734:	sbb    al,0x59
  41d736:	sub    DWORD PTR [ecx+0x5f99d095],ebp
  41d73c:	(bad)  
  41d73d:	and    ah,BYTE PTR [esi+0xa]
  41d740:	call   0x5b75712
  41d745:	jae    0x41d789
  41d747:	dec    edi
  41d748:	ds std 
  41d74a:	ror    BYTE PTR [eax-0x31ed2447],0xde
  41d751:	mov    al,0xb
  41d753:	(bad)  
  41d754:	push   ebx
  41d755:	add    BYTE PTR [eax+0x3],0xf8
  41d759:	xor    al,0x5e
  41d75b:	mov    WORD PTR [ebx-0x6c78d829],fs
  41d761:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d762:	ds jecxz 0x41d74a
  41d765:	ins    DWORD PTR es:[edi],dx
  41d766:	call   0xb571aa72
  41d76b:	mov    ebx,0x65e4f122
  41d770:	xchg   ecx,eax
  41d771:	addr16 mov edi,0x607724f6
  41d777:	mov    edx,0xff5f554
  41d77c:	add    ebx,ebp
  41d77e:	ret    
  41d77f:	lahf   
  41d780:	(bad)  
  41d781:	aas    
  41d782:	xor    dl,BYTE PTR [edx+0x58e60edb]
  41d788:	sub    ecx,DWORD PTR [edx]
  41d78a:	out    0xbb,al
  41d78c:	dec    ebx
  41d78d:	sti    
  41d78e:	sub    eax,ebp
  41d790:	jecxz  0x41d7e4
  41d792:	mov    eax,0xb3b19ae0
  41d797:	lods   eax,DWORD PTR ds:[esi]
  41d798:	fwait
  41d799:	bt     DWORD PTR [esi+eax*4-0x15],ebp
  41d79e:	adc    al,0x78
  41d7a1:	jno    0x41d7b8
  41d7a3:	lahf   
  41d7a4:	mov    al,0x3b
  41d7a6:	cmp    al,0xbb
  41d7a8:	adc    ebp,DWORD PTR [ecx+0x7961c319]
  41d7ae:	push   ecx
  41d7af:	sub    al,0x81
  41d7b1:	jmp    0x33ac7fe7
  41d7b6:	mov    esp,DWORD PTR [ebx]
  41d7b8:	and    BYTE PTR [edi],0x28
  41d7bb:	fsubrp st(6),st
  41d7bd:	cmp    al,0xdf
  41d7bf:	cmp    dl,BYTE PTR [ebx+0x3f322bc9]
  41d7c5:	mov    ebp,0xd96f3e0a
  41d7ca:	push   ecx
  41d7cb:	sub    edx,ebx
  41d7cd:	xor    bl,ch
  41d7cf:	mov    edi,DWORD PTR [edi-0x3c]
  41d7d2:	pop    ds
  41d7d3:	sub    ebx,DWORD PTR [ecx-0x4a9c67f]
  41d7d9:	mov    eax,ds:0xa407c8d2
  41d7de:	rcr    DWORD PTR [esp+ebp*8],1
  41d7e1:	mov    ecx,ds
  41d7e3:	dec    edi
  41d7e4:	or     ah,BYTE PTR es:[ecx-0x37]
  41d7e8:	mov    esi,0xa5bb63da
  41d7ed:	sbb    bl,cl
  41d7ef:	adc    eax,0xa60a2445
  41d7f4:	into   
  41d7f5:	jbe    0x41d824
  41d7f7:	or     eax,0x2e5f905
  41d7fc:	mov    ebx,0x8335fd03
  41d801:	daa    
  41d802:	xlat   BYTE PTR ds:[ebx]
  41d803:	xchg   ebx,eax
  41d804:	fcmovu st,st(0)
  41d806:	push   edi
  41d807:	sub    al,0x44
  41d809:	out    dx,al
  41d80a:	inc    edx
  41d80b:	mov    esi,0xc964a033
  41d810:	jnp    0x41d837
  41d812:	test   eax,0xffc26ed1
  41d817:	mov    ds:0x4bf85221,al
  41d81c:	and    al,0xc0
  41d81e:	jmp    0x795f:0xa7ba4169
  41d825:	dec    eax
  41d826:	xchg   ebx,eax
  41d827:	inc    ebp
  41d828:	push   edx
  41d829:	loope  0x41d803
  41d82b:	test   BYTE PTR [edi],dl
  41d82d:	mov    esp,0xb9a8f5b
  41d832:	ds pushf 
  41d834:	cmp    eax,0x64e4a83a
  41d839:	(bad)  
  41d83a:	pusha  
  41d83b:	push   cs
  41d83c:	test   al,cl
  41d83e:	iret   
  41d83f:	aam    0xd
  41d841:	fs (bad) 
  41d843:	outs   dx,DWORD PTR ds:[esi]
  41d844:	sar    DWORD PTR [edx+ebp*4],cl
  41d847:	(bad)  
  41d848:	sbb    eax,edx
  41d84a:	in     eax,0x8e
  41d84c:	and    BYTE PTR [edi+ecx*2+0xe],ah
  41d850:	arpl   WORD PTR [ebp-0x2c3237c],ax
  41d856:	mov    edi,0xba5bab3c
  41d85b:	pusha  
  41d85c:	test   eax,0x1e271a67
  41d861:	jbe    0x41d853
  41d863:	ds ins BYTE PTR es:[edi],dx
  41d865:	ror    DWORD PTR [ebx],0x25
  41d868:	(bad)  
  41d869:	or     DWORD PTR [ebx],ebp
  41d86b:	jle    0x41d8e3
  41d86d:	(bad)
  41d870:	jp     0x41d84d
  41d872:	scas   eax,DWORD PTR es:[edi]
  41d873:	push   ebp
  41d874:	ins    DWORD PTR es:[edi],dx
  41d875:	mov    al,ds:0xabf7f2dd
  41d87a:	cmc    
  41d87b:	dec    edx
  41d87c:	pop    esi
  41d87d:	mov    al,ds:0x5f51baca
  41d882:	retf   0x7e7d
  41d885:	scas   al,BYTE PTR es:[edi]
  41d886:	jae    0x41d8eb
  41d888:	cmp    dh,BYTE PTR [ebx+ebx*8+0x66778110]
  41d88f:	sub    DWORD PTR [eax],esi
  41d891:	mov    bl,bh
  41d893:	push   ecx
  41d894:	pop    ebx
  41d895:	sar    BYTE PTR [ebx+edi*2+0x18c3590d],1
  41d89c:	add    al,0x57
  41d89e:	int    0x79
  41d8a0:	leave  
  41d8a1:	cmp    BYTE PTR [eax+0x76],dh
  41d8a4:	aad    0x96
  41d8a6:	mov    esi,0xd100c8f4
  41d8ab:	fist   WORD PTR [edi+0x79]
  41d8ae:	and    dl,BYTE PTR [eax+edx*8]
  41d8b1:	mov    ds:0x3ff1fd52,al
  41d8b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8b7:	xchg   esi,eax
  41d8b8:	inc    eax
  41d8b9:	es jle 0x41d8fe
  41d8bc:	mov    eax,0x5867aeb3
  41d8c1:	push   esi
  41d8c2:	scas   eax,DWORD PTR es:[edi]
  41d8c3:	mov    ch,0x44
  41d8c5:	jg     0x41d8e9
  41d8c7:	shr    bh,1
  41d8c9:	cs stc 
  41d8cb:	mov    eax,ds:0x2a253629
  41d8d0:	clc    
  41d8d1:	retf   0xad35
  41d8d4:	int3   
  41d8d5:	retf   0xc14d
  41d8d8:	mov    esi,0x26472247
  41d8dd:	and    DWORD PTR [eax-0x37],0xfffffffc
  41d8e1:	scas   al,BYTE PTR es:[edi]
  41d8e2:	rcr    DWORD PTR [ebp+0x38642cf],0x15
  41d8e9:	fsubr  QWORD PTR [ecx+0x63cda174]
  41d8ef:	xor    DWORD PTR [ebx-0x795c6f6e],0x16
  41d8f6:	mov    eax,0x44afbc78
  41d8fb:	sub    eax,0x8cf85d58
  41d900:	xor    eax,0x6bdb65f4
  41d905:	cli    
  41d906:	ror    DWORD PTR [edx-0x70],cl
  41d909:	inc    ebx
  41d90a:	mov    cl,0xa6
  41d90c:	mov    dl,0xe6
  41d90e:	cmp    BYTE PTR [ecx-0x12],dl
  41d911:	mov    eax,ds:0x7b5787f5
  41d916:	fbld   TBYTE PTR [ebp-0x62]
  41d919:	jg     0x41d954
  41d91b:	rcl    ebx,cl
  41d91d:	inc    ebp
  41d91e:	sbb    esp,esi
  41d920:	add    dl,BYTE PTR [edx+edi*4+0x9]
  41d924:	scas   al,BYTE PTR es:[edi]
  41d925:	mov    es,WORD PTR [edx+0x64]
  41d928:	bound  ebx,QWORD PTR [edx+0x3412ab1b]
  41d92e:	jecxz  0x41d944
  41d930:	out    0x27,al
  41d932:	sti    
  41d933:	pop    eax
  41d934:	or     al,0x3a
  41d936:	cwde   
  41d937:	hlt    
  41d938:	push   ebx
  41d939:	retf   0x8873
  41d93c:	or     ah,BYTE PTR [edx+0x75]
  41d93f:	sbb    BYTE PTR [edx-0x1e],bh
  41d942:	adc    ecx,ebp
  41d944:	sbb    ch,BYTE PTR ss:[edx+0x69]
  41d948:	xor    eax,0xde9582c9
  41d94d:	xchg   ebx,eax
  41d94e:	ret    
  41d94f:	cmc    
  41d950:	jmp    0x5783cca1
  41d955:	mov    ds:0x3aac0e57,eax
  41d95a:	dec    ebx
  41d95b:	cs pop es
  41d95d:	mov    al,ds:0x1c1e92eb
  41d962:	neg    BYTE PTR [ebp-0x1ce28361]
  41d968:	cmc    
  41d969:	mov    ecx,0xd372d590
  41d96e:	mov    eax,DWORD PTR ds:0xa12018ec
  41d974:	ins    DWORD PTR es:[edi],dx
  41d975:	pop    edi
  41d976:	or     esi,DWORD PTR [edi+0x28146303]
  41d97c:	mov    bh,0xcc
  41d97e:	add    eax,DWORD PTR [esi+0x683c0a29]
  41d984:	out    0x77,al
  41d986:	fisubr DWORD PTR [esi-0x7d]
  41d989:	and    eax,DWORD PTR ds:0xfb9eddd9
  41d98f:	clc    
  41d990:	out    0x1d,al
  41d992:	cmp    BYTE PTR [esi+0x4c],ch
  41d995:	cld    
  41d996:	sbb    ecx,eax
  41d998:	mov    al,ds:0x272778fe
  41d99d:	sub    bh,BYTE PTR [esp+edx*4-0x5e]
  41d9a1:	ja     0x41d96e
  41d9a3:	mov    ch,0xc
  41d9a5:	cmp    esi,DWORD PTR [ecx+0x53]
  41d9a8:	sahf   
  41d9a9:	ret    0xbde6
  41d9ac:	test   BYTE PTR [edi-0x1d],0xfd
  41d9b0:	shl    DWORD PTR [esi+0x4b50e422],0xcd
  41d9b7:	mov    esi,0x54b647ff
  41d9bc:	mov    ch,0x46
  41d9be:	jno    0x41da2e
  41d9c0:	adc    ebx,eax
  41d9c2:	inc    ebx
  41d9c3:	fdivr  st,st(3)
  41d9c5:	jmp    0x41d95b
  41d9c7:	nop
  41d9c8:	(bad)
  41d9cc:	adc    al,0x8b
  41d9ce:	mov    WORD PTR cs:[esi-0x31],?
  41d9d2:	test   eax,0xb607e699
  41d9d7:	stos   BYTE PTR es:[edi],al
  41d9d8:	repnz test BYTE PTR [ecx-0x70097602],dl
  41d9df:	pop    esp
  41d9e0:	cmp    eax,0xdd65ebd3
  41d9e5:	cs fcomp st(0)
  41d9e8:	sahf   
  41d9e9:	cs push ebp
  41d9eb:	inc    edx
  41d9ec:	js     0x41da4d
  41d9ee:	mov    esi,0x6da1931c
  41d9f3:	sub    dl,BYTE PTR [ebp+0x6c]
  41d9f6:	in     eax,0x20
  41d9f8:	aaa    
  41d9f9:	sbb    al,0xab
  41d9fb:	or     ecx,ebx
  41d9fd:	fldcw  WORD PTR ds:0x4a52a5fb
  41da03:	mov    bl,0x39
  41da05:	jle    0x41d9c6
  41da07:	push   es
  41da08:	add    bh,BYTE PTR [esi+edi*4]
  41da0b:	jp     0x41da4c
  41da0d:	mov    cl,0xac
  41da0f:	xchg   ebx,eax
  41da10:	lea    ebp,[ecx+0x3b250cf6]
  41da16:	jb     0x41da6c
  41da18:	xor    DWORD PTR [edi+eiz*1+0x2d],0x77
  41da1d:	inc    DWORD PTR [edx+ebp*4-0x15a22253]
  41da24:	into   
  41da25:	cmc    
  41da26:	in     eax,0xbd
  41da28:	cs into 
  41da2a:	mov    bh,0x94
  41da2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da2d:	mov    edx,0xecd77eda
  41da32:	inc    eax
  41da33:	adc    al,dl
  41da35:	sub    al,BYTE PTR [edx+ecx*4-0x66]
  41da39:	cld    
  41da3a:	inc    edx
  41da3b:	cmp    bl,BYTE PTR [esi+0x24471f26]
  41da41:	push   ebx
  41da42:	or     al,BYTE PTR [ecx+0x10a4e3c4]
  41da48:	mov    ch,0x58
  41da4a:	dec    esi
  41da4b:	sbb    eax,edi
  41da4d:	mov    dl,0x7d
  41da4f:	push   es
  41da50:	push   0x33
  41da52:	(bad)  
  41da53:	fnstsw WORD PTR [esi]
  41da55:	or     DWORD PTR [esi],ebx
  41da57:	add    esi,DWORD PTR [edi]
  41da59:	out    0x28,eax
  41da5b:	stos   DWORD PTR es:[edi],eax
  41da5c:	out    dx,eax
  41da5d:	sbb    al,0x49
  41da5f:	pop    eax
  41da60:	add    DWORD PTR [ebp+0x76],ebx
  41da63:	jno    0x41da60
  41da65:	xchg   edx,eax
  41da66:	mov    esp,0x163eadc9
  41da6b:	xchg   edi,eax
  41da6c:	pusha  
  41da6d:	mov    esi,0x93819247
  41da72:	dec    edi
  41da73:	ins    BYTE PTR es:[edi],dx
  41da74:	dec    ebp
  41da75:	call   0x73362a2
  41da7a:	xor    dl,al
  41da7c:	iret   
  41da7d:	popa   
  41da7e:	xchg   DWORD PTR [edx+eiz*8+0x35],esi
  41da82:	nop
  41da83:	imul   ebp,DWORD PTR [ebx+0x5527c42],0xffffff98
  41da8a:	in     al,dx
  41da8b:	adc    DWORD PTR [ebp-0x3be05f93],esi
  41da91:	cmp    BYTE PTR [ecx+0x3f147de],bl
  41da97:	sar    DWORD PTR [ebx+ebp*8-0x77],1
  41da9b:	nop
  41da9c:	sub    al,0xd1
  41da9e:	pop    es
  41da9f:	mov    edi,0xb061c5fe
  41daa4:	xor    BYTE PTR [edx],bl
  41daa6:	cmp    ecx,esp
  41daa8:	jmp    0xa7d9:0x782d94d4
  41daaf:	shl    edi,1
  41dab1:	adc    ch,bh
  41dab3:	inc    esp
  41dab4:	push   eax
  41dab5:	adc    al,0x3b
  41dab7:	jmp    0x32c4:0xd24f1220
  41dabe:	adc    eax,0x325a6ee2
  41dac3:	sbb    al,BYTE PTR [ebx]
  41dac5:	pop    ecx
  41dac6:	daa    
  41dac7:	fld    QWORD PTR [ebx]
  41dac9:	fisubr DWORD PTR [edx+0x52424458]
  41dacf:	inc    ebx
  41dad0:	pop    ebp
  41dad1:	outs   dx,DWORD PTR ds:[esi]
  41dad2:	push   ss
  41dad3:	mov    ds:0x216a3e34,al
  41dad8:	lahf   
  41dad9:	(bad)  
  41dadb:	js     0x41daf8
  41dadd:	mov    ecx,0x7a313bb8
  41dae2:	(bad)  
  41dae3:	test   eax,0x697165b3
  41dae8:	inc    eax
  41dae9:	adc    DWORD PTR ds:0x1fec94e8,ecx
  41daef:	gs retf 
  41daf1:	cld    
  41daf2:	xchg   esi,eax
  41daf3:	mov    ecx,edx
  41daf5:	mov    eax,0x84bb25e5
  41dafa:	inc    eax
  41dafb:	dec    ebp
  41dafc:	xchg   esi,eax
  41dafd:	sbb    ecx,DWORD PTR [ecx+0x759ab31]
  41db03:	dec    esp
  41db04:	jmp    0x5a7e60c9
  41db09:	es mov esp,0x5f3be9e7
  41db0f:	fldenv [ebx+0x74]
  41db12:	setg   BYTE PTR [esi]
  41db15:	and    DWORD PTR [eax-0x70],ebx
  41db18:	push   ebp
  41db19:	repz out 0x3a,eax
  41db1c:	mov    ah,BYTE PTR [esi+eiz*2-0x7e82e709]
  41db23:	in     eax,dx
  41db24:	sub    DWORD PTR [ecx-0x54],edx
  41db27:	sub    edi,0x7b
  41db2a:	mov    cl,0x66
  41db2c:	in     eax,dx
  41db2d:	stc    
  41db2e:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db30:	or     al,0x0
  41db32:	popf   
  41db33:	loopne 0x41dacc
  41db35:	xchg   ebx,eax
  41db36:	gs leave 
  41db38:	sub    BYTE PTR [ebp+0x49f58041],dl
  41db3e:	inc    ecx
  41db3f:	scas   eax,DWORD PTR es:[edi]
  41db40:	xchg   ecx,eax
  41db41:	inc    eax
  41db42:	pop    es
  41db43:	push   ds
  41db44:	ins    BYTE PTR es:[edi],dx
  41db45:	pusha  
  41db46:	adc    bh,bh
  41db48:	jmp    0x294c:0x77816dd9
  41db4f:	mov    WORD PTR ss:[ecx+0x79],gs
  41db53:	mov    esp,edx
  41db55:	cs das 
  41db57:	mov    ?,ebx
  41db59:	xor    DWORD PTR [ebp+0x71f1403c],ebx
  41db5f:	pop    ds
  41db60:	out    dx,eax
  41db61:	add    DWORD PTR ds:[esi+0x587b2c85],edx
  41db68:	xchg   edi,eax
  41db69:	and    cl,BYTE PTR [ebp+0xb948e1d]
  41db6f:	adc    eax,0xfe42c5e0
  41db74:	aam    0x7e
  41db76:	or     ch,BYTE PTR [ebx+0x2f87c556]
  41db7c:	scas   al,BYTE PTR es:[edi]
  41db7d:	xchg   esi,eax
  41db7e:	(bad)  [eax-0x2d]
  41db81:	mov    esi,0x4a10de6b
  41db86:	sub    ebp,edx
  41db88:	jp     0x41db5c
  41db8a:	cmp    ch,BYTE PTR [ecx-0x4e]
  41db8d:	mov    ebx,0x905293e8
  41db92:	jg     0x41dc05
  41db94:	jmp    0x41db58
  41db96:	xchg   esp,eax
  41db97:	std    
  41db98:	pop    eax
  41db99:	sub    ecx,edi
  41db9b:	xor    DWORD PTR [edi-0x358bdda3],ebx
  41dba1:	popa   
  41dba2:	xchg   edi,eax
  41dba3:	mov    eax,0x4ffffa19
  41dba8:	mov    al,ds:0x2387f7eb
  41dbad:	sub    BYTE PTR [edx+0x7a],ah
  41dbb0:	dec    esi
  41dbb1:	add    BYTE PTR [esi-0x486c38a5],bh
  41dbb7:	xchg   DWORD PTR [edx-0x29e5e9cd],eax
  41dbbd:	pop    esp
  41dbbe:	sub    edi,edi
  41dbc0:	and    ebp,DWORD PTR [esi]
  41dbc2:	cld    
  41dbc3:	adc    ecx,DWORD PTR [esi+0x45]
  41dbc6:	ds std 
  41dbc8:	mov    ecx,0x9155ef0d
  41dbcd:	stc    
  41dbce:	lea    ebp,[ebx+ebp*2-0x18]
  41dbd2:	pop    ebx
  41dbd3:	cmp    eax,ebx
  41dbd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbd6:	cmp    edx,DWORD PTR [ebx+edi*8+0x4b77d691]
  41dbdd:	fwait
  41dbde:	repnz imul ebx,esp,0x3b
  41dbe2:	push   0xf928d104
  41dbe7:	rol    dl,cl
  41dbe9:	fwait
  41dbea:	(bad)  
  41dbeb:	aaa    
  41dbec:	jae    0x41dc44
  41dbee:	dec    edi
  41dbef:	out    dx,eax
  41dbf0:	fisttp WORD PTR [esp+ebx*1-0x11]
  41dbf4:	mov    ebx,0xc6b4c722
  41dbf9:	(bad)  
  41dbfa:	lods   eax,DWORD PTR ds:[esi]
  41dbfb:	mov    eax,ds:0x26c024f5
  41dc00:	add    BYTE PTR [edi],ah
  41dc02:	jno    0x41dc0f
  41dc04:	jae    0x41dc25
  41dc06:	mov    edi,0x5910f896
  41dc0b:	xor    cl,al
  41dc0d:	push   es
  41dc0e:	sub    ah,BYTE PTR [ebx-0x54]
  41dc11:	icebp  
  41dc12:	mov    DWORD PTR [ebx+0x78542127],eax
  41dc18:	(bad)  
  41dc1a:	loop   0x41dbae
  41dc1c:	mov    dl,0x24
  41dc1e:	push   esp
  41dc1f:	pop    ds
  41dc20:	dec    esp
  41dc21:	repz inc ebx
  41dc23:	jbe    0x41dc96
  41dc25:	mov    bl,0xc7
  41dc27:	into   
  41dc28:	mov    esp,0xe142311e
  41dc2d:	add    esp,DWORD PTR [esi+0x3a182949]
  41dc33:	(bad)  
  41dc34:	sbb    BYTE PTR [ecx],dl
  41dc36:	sbb    al,0xc3
  41dc38:	rol    DWORD PTR [edx-0x7889706b],1
  41dc3e:	and    al,0x6
  41dc40:	cmp    BYTE PTR [ebx+0x2590c302],0x2e
  41dc47:	aaa    
  41dc48:	in     eax,0xbb
  41dc4a:	and    eax,0xaad647f7
  41dc4f:	nop
  41dc50:	mov    WORD PTR [ecx],cs
  41dc52:	int    0xc
  41dc54:	pop    edi
  41dc55:	mov    eax,0x71d36eff
  41dc5a:	mov    BYTE PTR [esi-0x30d5ae6],bh
  41dc60:	call   0x576dd622
  41dc65:	cs push ebp
  41dc67:	ret    0x9d84
  41dc6a:	sbb    edx,DWORD PTR [ecx-0x78]
  41dc6d:	fsub   st(5),st
  41dc6f:	jl     0x41dc14
  41dc71:	call   0xe8dd:0x47a23a28
  41dc78:	push   ebx
  41dc79:	sahf   
  41dc7a:	cli    
  41dc7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc7c:	lds    ecx,FWORD PTR [eax]
  41dc7e:	add    DWORD PTR [ebx],0xffffffd9
  41dc81:	and    eax,0xa7d0fd57
  41dc86:	inc    esi
  41dc87:	inc    ebp
  41dc88:	push   eax
  41dc89:	and    BYTE PTR [eax+0x7c],cl
  41dc8c:	sbb    ebp,DWORD PTR [eax]
  41dc8e:	push   edi
  41dc8f:	(bad)  
  41dc90:	mov    ebp,0x61b10414
  41dc95:	jg     0x41dd16
  41dc97:	push   es
  41dc98:	dec    ebp
  41dc99:	(bad)  
  41dc9a:	pop    eax
  41dc9b:	adc    eax,0x1febd933
  41dca0:	test   eax,0xe96482e8
  41dca5:	mov    BYTE PTR [eax+0x7e7a3269],0x50
  41dcac:	ret    
  41dcad:	rcl    BYTE PTR [ebx+ebp*2-0x31],1
  41dcb1:	into   
  41dcb2:	mov    ebp,0xca275007
  41dcb7:	ret    0x74d2
  41dcba:	bound  esp,QWORD PTR [ebp-0x1bc966f8]
  41dcc0:	and    ch,BYTE PTR [edx+0x48]
  41dcc3:	call   0xf3de893d
  41dcc8:	xchg   edx,eax
  41dcc9:	ficom  WORD PTR [ebp-0x7c3a7e12]
  41dccf:	ins    DWORD PTR es:[edi],dx
  41dcd0:	mov    ds:0x6789306b,al
  41dcd5:	or     eax,0x5a2cb76e
  41dcda:	lahf   
  41dcdb:	call   0xe781:0xfd3190d6
  41dce2:	js     0x41dc6f
  41dce4:	dec    ecx
  41dce5:	hlt    
  41dce6:	and    al,0xbf
  41dce8:	dec    esi
  41dce9:	test   esi,0x48a5a832
  41dcef:	or     eax,ebx
  41dcf1:	dec    esi
  41dcf2:	inc    ebx
  41dcf3:	test   BYTE PTR [ebp+ebp*8+0x8],al
  41dcf7:	test   BYTE PTR [edx+edx*1-0x3d],ah
  41dcfb:	int3   
  41dcfc:	or     BYTE PTR [esi-0x47],bl
  41dcff:	fist   WORD PTR [edi+0x3e]
  41dd02:	xchg   esp,eax
  41dd03:	add    eax,0x4ea3573f
  41dd08:	jbe    0x41dd62
  41dd0a:	cmp    al,BYTE PTR [ebp+0x3a64445b]
  41dd10:	daa    
  41dd11:	add    eax,0xe219399c
  41dd16:	data16 data16 and al,0xe1
  41dd1a:	cdq    
  41dd1b:	push   eax
  41dd1c:	aas    
  41dd1d:	icebp  
  41dd1e:	fdiv   QWORD PTR [eax+eax*8]
  41dd21:	fadd   DWORD PTR [ebx+0x47]
  41dd24:	pop    eax
  41dd25:	push   ds
  41dd26:	out    0xd8,eax
  41dd28:	or     DWORD PTR [edi-0x13],eax
  41dd2b:	pop    ss
  41dd2c:	or     al,bl
  41dd2e:	sub    BYTE PTR [esi+0x61af899],cl
  41dd34:	lds    esi,FWORD PTR [esi]
  41dd36:	mov    ebx,DWORD PTR [ebp+0x3c2f9]
  41dd3c:	xchg   ebp,eax
  41dd3d:	push   cs
  41dd3e:	jp     0x41ddb3
  41dd40:	hlt    
  41dd41:	lock mov edi,0x99b8b7cf
  41dd47:	mov    esp,0x3ead09e8
  41dd4c:	(bad)  
  41dd4d:	cmc    
  41dd4e:	mov    ah,0xd9
  41dd50:	push   ebp
  41dd52:	loop   0x41ddc9
  41dd54:	jo     0x41dd12
  41dd56:	(bad)  
  41dd57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd58:	mov    eax,ds:0x7ebfec35
  41dd5d:	dec    eax
  41dd5e:	mov    esi,0x30fcd358
  41dd63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd64:	push   ds
  41dd65:	push   esp
  41dd66:	or     dh,al
  41dd68:	scas   eax,DWORD PTR es:[edi]
  41dd69:	cmp    esp,ebx
  41dd6b:	adc    eax,0x7aeccb02
  41dd70:	int    0x99
  41dd72:	push   eax
  41dd73:	mov    eax,ds:0xb246ac66
  41dd78:	popf   
  41dd79:	aam    0xf0
  41dd7b:	gs inc ebp
  41dd7d:	pop    ebx
  41dd7e:	push   0xbcba08e0
  41dd83:	inc    edx
  41dd84:	add    edi,DWORD PTR [ecx-0x590459dd]
  41dd8a:	fwait
  41dd8b:	xor    bl,BYTE PTR [edx-0x60b85448]
  41dd91:	and    eax,0x4aa93539
  41dd96:	fimul  DWORD PTR [edx+0xcb35717]
  41dd9c:	stos   DWORD PTR es:[edi],eax
  41dd9d:	xor    BYTE PTR [eax-0x69ba170],0x79
  41dda4:	sub    DWORD PTR [ebp-0x3cac8742],0xffffffb0
  41ddab:	mov    ebp,ecx
  41ddad:	xchg   edi,eax
  41ddae:	ror    DWORD PTR ds:0x64e519ef,cl
  41ddb4:	and    DWORD PTR [ecx],esi
  41ddb6:	je     0x41dd85
  41ddb8:	dec    edi
  41ddb9:	sub    dh,BYTE PTR [ebx+edi*2-0x4b622a15]
  41ddc0:	push   esp
  41ddc1:	mov    esp,0x11d46f4b
  41ddc6:	ja     0x41ddec
  41ddc8:	inc    eax
  41ddc9:	test   BYTE PTR [ecx-0x23],ch
  41ddcc:	push   ebp
  41ddcd:	mov    al,ds:0x768c44ae
  41ddd2:	mov    eax,ds:0xccae9d4e
  41ddd7:	mov    ah,0x4b
  41ddd9:	and    al,0x17
  41dddb:	out    0x4c,eax
  41dddd:	pop    edx
  41ddde:	mov    cl,0xbc
  41dde0:	jno    0x41ddc7
  41dde2:	lds    ebx,FWORD PTR [edi+0x1006a5e2]
  41dde8:	(bad)  
  41dde9:	pop    ebp
  41ddea:	dec    edi
  41ddeb:	fcmovbe st,st(6)
  41dded:	and    DWORD PTR [esi],ebx
  41ddef:	dec    esp
  41ddf0:	and    al,0xc7
  41ddf2:	adc    al,0x8c
  41ddf4:	push   edx
  41ddf5:	pop    edi
  41ddf6:	pop    ebx
  41ddf7:	cmc    
  41ddf8:	dec    eax
  41ddf9:	iret   
  41ddfa:	sahf   
  41ddfb:	out    0xcc,al
  41ddfd:	idiv   bl
  41ddff:	push   edx
  41de00:	jmp    0xbba27de7
  41de05:	mov    ch,0x1d
  41de07:	mov    bh,0x93
  41de09:	fstp   st(3)
  41de0b:	test   BYTE PTR ds:0x95c1b7c2,0x4a
  41de12:	sbb    ch,BYTE PTR ds:0x710c65d6
  41de18:	fmul   DWORD PTR ds:0xded6a8cf
  41de1e:	sbb    ebx,DWORD PTR ss:[ecx]
  41de21:	push   ebp
  41de22:	les    edi,FWORD PTR es:[ecx+0x9]
  41de26:	mov    DWORD PTR [edx-0x56eb1da0],ebx
  41de2c:	cmp    al,BYTE PTR [ebx-0x1]
  41de2f:	fs jl  0x41de2b
  41de32:	not    ah
  41de34:	mov    eax,0x95bca897
  41de39:	push   edx
  41de3a:	mov    bl,0x30
  41de3c:	imul   esi,ecx,0x48
  41de3f:	adc    edx,esp
  41de41:	mov    ds:0xa0db18a8,eax
  41de46:	jb     0x41deaa
  41de48:	add    bl,ch
  41de4a:	popf   
  41de4b:	adc    esi,DWORD PTR [edi]
  41de4d:	in     eax,0x3
  41de4f:	xchg   ebp,eax
  41de50:	push   esp
  41de51:	dec    eax
  41de52:	inc    ebp
  41de53:	test   eax,0x11a4b22f
  41de58:	xor    al,0xab
  41de5a:	dec    edx
  41de5b:	push   edx
  41de5c:	cli    
  41de5d:	adc    dh,BYTE PTR fs:[edi]
  41de60:	pavgb  mm3,mm7
  41de63:	mov    ds:0x91afe384,eax
  41de68:	shl    ebx,cl
  41de6a:	(bad)  
  41de6b:	pop    ecx
  41de6c:	pop    ds
  41de6d:	push   ss
  41de6e:	jle    0x41decf
  41de70:	div    ebx
  41de72:	cli    
  41de73:	test   eax,0x11ea22d8
  41de78:	jae    0x41deda
  41de7a:	inc    eax
  41de7b:	bound  esp,QWORD PTR [esi+0x18]
  41de7e:	es xchg esp,eax
  41de80:	xchg   edx,eax
  41de81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de83:	jo     0x41decd
  41de85:	jns    0x41df06
  41de87:	inc    esi
  41de88:	pusha  
  41de89:	inc    esi
  41de8a:	nop
  41de8b:	ror    edx,1
  41de8d:	out    dx,eax
  41de8e:	imul   edx,eax,0x40a2098e
  41de94:	xor    eax,0x19db85b6
  41de99:	and    DWORD PTR [edi+0x186b05b9],edi
  41de9f:	push   ebp
  41dea0:	imul   esi,DWORD PTR [edi-0x386d1e72],0xffffff86
  41dea7:	ins    DWORD PTR es:[edi],dx
  41dea8:	sbb    dl,BYTE PTR [edi]
  41deaa:	add    eax,0x94e39958
  41deaf:	stos   DWORD PTR es:[edi],eax
  41deb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41deb1:	add    dl,BYTE PTR [ebx+0x4ab39938]
  41deb7:	xchg   edx,eax
  41deb8:	inc    BYTE PTR [ebx-0x11]
  41debb:	jb     0x41de63
  41debd:	or     edi,DWORD PTR [edi-0x37ca5dc0]
  41dec3:	test   BYTE PTR ds:[ebp-0x58b835e3],al
  41deca:	dec    ecx
  41decb:	sbb    al,al
  41decd:	lods   al,BYTE PTR ds:[esi]
  41dece:	and    esi,DWORD PTR [esi]
  41ded0:	adc    DWORD PTR [edx+eiz*2],esi
  41ded3:	sbb    bh,al
  41ded5:	push   edi
  41ded6:	aad    0x61
  41ded8:	lahf   
  41ded9:	outs   dx,BYTE PTR ds:[esi]
  41deda:	adc    DWORD PTR [ecx-0x4c96b03b],esp
  41dee0:	pop    esi
  41dee1:	pop    DWORD PTR [ecx]
  41dee3:	cmp    DWORD PTR ds:0xeffa0d6e,esp
  41dee9:	rcl    eax,1
  41deeb:	jb     0x41de96
  41deed:	xchg   edi,eax
  41deee:	jbe    0x41ded6
  41def0:	call   0x996a6f30
  41def5:	jb     0x41def8
  41def7:	pop    esi
  41def8:	adc    edx,esp
  41defa:	add    DWORD PTR [esi+0x2c],ecx
  41defd:	sub    al,0xdf
  41deff:	mov    ebx,0x89f1fc6f
  41df04:	mov    ah,0xd6
  41df06:	xchg   ebp,eax
  41df07:	and    al,0xcd
  41df09:	or     bl,al
  41df0b:	dec    ebp
  41df0c:	out    dx,eax
  41df0d:	add    eax,0x29c4bf4c
  41df12:	test   eax,0x46cccd66
  41df17:	imul   edx,DWORD PTR [ebx+0x4164fc14],0xa0f08a49
  41df21:	addr16 mov ch,0xdf
  41df24:	scas   eax,DWORD PTR es:[edi]
  41df25:	stos   BYTE PTR es:[edi],al
  41df26:	hlt    
  41df27:	xchg   DWORD PTR [ebp-0x2d0bc989],ecx
  41df2d:	xlat   BYTE PTR ds:[ebx]
  41df2e:	add    eax,0x5ac75c2d
  41df33:	aad    0xb
  41df35:	cmp    bh,BYTE PTR [ebx-0x533acc1]
  41df3b:	lods   eax,DWORD PTR ds:[esi]
  41df3c:	cwde   
  41df3d:	jmp    0xdafe:0x555f13e2
  41df44:	cld    
  41df45:	(bad)  [ebx-0x13]
  41df48:	mov    cl,0x37
  41df4a:	push   esp
  41df4b:	stos   DWORD PTR es:[edi],eax
  41df4c:	arpl   bp,bp
  41df4e:	pop    ecx
  41df4f:	xor    al,0x95
  41df51:	sub    BYTE PTR [eax+edx*4],bh
  41df54:	or     edi,esp
  41df56:	(bad)  
  41df57:	sub    al,0xba
  41df59:	or     esp,ebx
  41df5b:	inc    esi
  41df5c:	fst    DWORD PTR [edi]
  41df5e:	pop    ebx
  41df5f:	bound  esi,QWORD PTR [edx]
  41df61:	xchg   esi,eax
  41df62:	push   edi
  41df63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df64:	les    ebp,FWORD PTR [ebp+0x34]
  41df67:	mov    edx,0xacfeee92
  41df6c:	or     DWORD PTR [edx+0x40c86551],eax
  41df72:	cmp    eax,0xfbdce3a1
  41df77:	push   edx
  41df78:	sbb    DWORD PTR [edi+0x6bcf06d4],ebx
  41df7e:	pop    ecx
  41df7f:	xchg   edi,eax
  41df80:	or     ecx,edx
  41df82:	jge    0x41df49
  41df84:	fisub  WORD PTR [eax+0x1]
  41df87:	inc    ebp
  41df88:	in     al,dx
  41df89:	push   edx
  41df8a:	push   esp
  41df8b:	push   esp
  41df8c:	pop    ds
  41df8d:	pop    esi
  41df8e:	xlat   BYTE PTR ds:[ebx]
  41df8f:	test   DWORD PTR [ecx],ecx
  41df91:	push   esi
  41df92:	push   cs
  41df93:	mov    bl,0xf0
  41df95:	jp     0x41dfbd
  41df97:	sbb    BYTE PTR [edi],0x32
  41df9a:	jnp    0x41df96
  41df9c:	or     esi,edi
  41df9e:	data16 mov ch,0xfe
  41dfa1:	lods   eax,DWORD PTR ds:[esi]
  41dfa2:	mov    bh,0xdf
  41dfa4:	leave  
  41dfa5:	je     0x41df4e
  41dfa7:	hlt    
  41dfa8:	sub    BYTE PTR [edx],0x44
  41dfab:	or     eax,0x98d06405
  41dfb0:	inc    ebp
  41dfb1:	cmp    BYTE PTR [eax],ch
  41dfb3:	adc    DWORD PTR [edi],0xc7fad48d
  41dfb9:	sar    DWORD PTR [eax-0x1e],0x66
  41dfbd:	ror    BYTE PTR [esi],cl
  41dfbf:	in     eax,0x3a
  41dfc1:	dec    ecx
  41dfc2:	push   edx
  41dfc3:	sbb    eax,0x990d69e3
  41dfc8:	inc    eax
  41dfc9:	(bad)  
  41dfca:	pop    ss
  41dfcb:	sbb    eax,eax
  41dfcd:	ja     0x41dfed
  41dfcf:	aam    0xf6
  41dfd1:	scas   eax,DWORD PTR es:[edi]
  41dfd2:	rol    DWORD PTR [edx-0x19e4cff],0xdb
  41dfd9:	push   esp
  41dfda:	std    
  41dfdb:	or     ah,dh
  41dfdd:	xor    BYTE PTR [eax+eiz*8-0x2a5a511a],dl
  41dfe4:	push   edi
  41dfe5:	sub    BYTE PTR [esi+0x73],bl
  41dfe8:	or     bh,BYTE PTR [ebx-0xd]
  41dfeb:	je     0x41e04f
  41dfed:	cdq    
  41dfee:	je     0x41dfe2
  41dff0:	cmc    
  41dff1:	lahf   
  41dff2:	clc    
  41dff3:	ret    0x20bb
  41dff6:	popf   
  41dff7:	imul   edi,DWORD PTR [eax],0x4c
  41dffa:	xchg   edx,eax
  41dffb:	rol    DWORD PTR [ecx-0x28548880],0x49
  41e002:	imul   esi,DWORD PTR [ecx+0x1],0x9
  41e006:	cli    
  41e007:	mov    ebp,0x58ebdbc6
  41e00c:	mov    ds:0x78dcabd6,al
  41e011:	test   BYTE PTR [ebx+0x9],al
  41e014:	gs xor dl,ch
  41e017:	mov    eax,cs:0x570cb378
  41e01d:	sub    DWORD PTR [edx+0x5ef1323f],edx
  41e023:	pop    ebx
  41e024:	out    0xd1,al
  41e026:	cmp    edx,DWORD PTR [eax+0x79]
  41e029:	dec    ecx
  41e02a:	bound  edx,QWORD PTR [ebx+edi*8+0x6]
  41e02e:	(bad)  
  41e030:	lods   al,BYTE PTR ds:[esi]
  41e031:	push   ebx
  41e032:	jp     0x41e08c
  41e034:	stos   DWORD PTR es:[edi],eax
  41e035:	out    0x1e,eax
  41e037:	popa   
  41e038:	push   edx
  41e039:	fisubr DWORD PTR [ebx+0x76]
  41e03c:	add    eax,0x19836bab
  41e041:	cmp    BYTE PTR [edi+0x6d755811],ch
  41e047:	xchg   esi,eax
  41e048:	in     al,0x8d
  41e04a:	pop    ds
  41e04b:	loope  0x41e09e
  41e04d:	xchg   edi,eax
  41e04e:	dec    edi
  41e04f:	cwde   
  41e050:	ss stos BYTE PTR es:[edi],al
  41e052:	out    0xb2,eax
  41e054:	paddsw mm0,QWORD PTR [esi+ebp*8]
  41e058:	sub    dh,ah
  41e05a:	xchg   edx,eax
  41e05b:	sub    cl,BYTE PTR [edi+eax*1+0x51]
  41e05f:	or     DWORD PTR [ecx],edi
  41e061:	pop    esi
  41e062:	inc    edx
  41e063:	adc    ah,0x80
  41e066:	jl     0x41e069
  41e068:	push   edi
  41e069:	cmp    BYTE PTR ds:[edx-0x11],al
  41e06d:	cmp    bh,BYTE PTR [edx-0x2a59623c]
  41e073:	cmp    dl,bh
  41e075:	fs jns 0x41e0e9
  41e078:	jbe    0x41e02c
  41e07a:	int    0xed
  41e07c:	xchg   ebx,eax
  41e07d:	mov    WORD PTR [edx],gs
  41e07f:	loope  0x41e027
  41e081:	push   0xffffffd1
  41e083:	fdiv   DWORD PTR [edi]
  41e085:	mov    eax,ds:0xa23a9939
  41e08a:	sub    DWORD PTR [edx+0x16a67930],esi
  41e090:	jo     0x41e065
  41e092:	lea    esp,[ebx-0x28]
  41e095:	in     eax,dx
  41e096:	and    al,0xa6
  41e098:	inc    esp
  41e099:	repnz xchg ebx,eax
  41e09b:	mov    bh,bh
  41e09d:	jo     0x41e119
  41e09f:	fcmovne st,st(0)
  41e0a1:	inc    esp
  41e0a2:	fwait
  41e0a3:	xchg   ebp,eax
  41e0a4:	(bad)  
  41e0a6:	cmp    BYTE PTR [ebx],al
  41e0a8:	popa   
  41e0a9:	dec    BYTE PTR [edi]
  41e0ab:	(bad)  
  41e0ac:	mov    al,ds:0x3ebba7bb
  41e0b1:	test   ah,bl
  41e0b3:	push   esi
  41e0b4:	and    DWORD PTR [ebx],ecx
  41e0b6:	out    dx,eax
  41e0b7:	sar    BYTE PTR [ecx+0x4f],1
  41e0ba:	push   edi
  41e0bb:	push   es
  41e0bc:	mov    al,0x7d
  41e0be:	and    bl,BYTE PTR [edx+0xd728d2]
  41e0c4:	(bad)  
  41e0c5:	push   0xfffffffd
  41e0c7:	nop
  41e0c8:	shld   DWORD PTR [ebx],edx,0xbd
  41e0cc:	imul   esi,DWORD PTR [ecx],0x61
  41e0cf:	stos   DWORD PTR es:[edi],eax
  41e0d0:	sbb    DWORD PTR ds:0x1aecd5a4,0xe07faf98
  41e0da:	adc    dl,BYTE PTR [ebp-0x45]
  41e0dd:	xchg   dh,cl
  41e0df:	xor    al,0xcb
  41e0e1:	sub    ch,ah
  41e0e3:	mov    edx,0x32c49ef3
  41e0e8:	sub    cl,dh
  41e0ea:	(bad)  
  41e0ec:	dec    edx
  41e0ed:	(bad)  
  41e0ee:	mov    ebx,0x5a48abe6
  41e0f3:	and    dl,dl
  41e0f5:	(bad)  
  41e0f6:	and    al,0xb6
  41e0f8:	scas   eax,DWORD PTR es:[edi]
  41e0f9:	test   BYTE PTR [ebx],ah
  41e0fb:	in     eax,dx
  41e0fc:	and    eax,0x4d12e2c1
  41e101:	out    dx,eax
  41e102:	arpl   WORD PTR [edx+edi*1+0x1827f0e5],si
  41e109:	int    0x88
  41e10b:	mov    eax,ecx
  41e10d:	mov    bh,0x25
  41e10f:	sub    edx,edx
  41e111:	ret    
  41e112:	xor    DWORD PTR [ebx+0xa],ebp
  41e115:	enter  0x292d,0x1e
  41e119:	inc    esi
  41e11a:	adc    BYTE PTR [eax],dl
  41e11c:	cmp    BYTE PTR [ecx-0x1c76d16e],bl
  41e122:	retf   
  41e123:	fs call 0x2ab4:0x162c246c
  41e12b:	dec    ecx
  41e12c:	mov    dl,0x43
  41e12e:	mov    fs,WORD PTR [esi-0x4cf16be6]
  41e134:	push   cs
  41e135:	out    0x81,al
  41e137:	push   esp
  41e138:	ins    BYTE PTR es:[edi],dx
  41e139:	add    DWORD PTR [ecx-0xa],0xdf5173a7
  41e140:	mov    BYTE PTR [esi-0x1d],0xad
  41e144:	mov    cl,0x99
  41e146:	adc    BYTE PTR [ebx+esi*4+0x18],ch
  41e14a:	dec    ecx
  41e14b:	jge    0x41e0dd
  41e14d:	in     al,0x34
  41e14f:	xchg   ebp,eax
  41e150:	loopne 0x41e0db
  41e152:	dec    esi
  41e153:	xor    BYTE PTR [esi],cl
  41e155:	jmp    0xe2050cf8
  41e15a:	popf   
  41e15b:	icebp  
  41e15c:	ret    0x3c60
  41e15f:	aas    
  41e160:	cmp    eax,0x10157315
  41e165:	dec    ebp
  41e166:	push   edi
  41e167:	jle    0x41e1dc
  41e169:	jae    0x41e0f5
  41e16b:	dec    esi
  41e16c:	xchg   ebp,eax
  41e16d:	mov    bl,0xf6
  41e16f:	lea    esi,[eax-0x34afc059]
  41e175:	out    dx,al
  41e176:	iret   
  41e177:	xchg   edi,eax
  41e178:	dec    edi
  41e179:	mov    edi,0x8b2fb6f7
  41e17e:	mov    eax,ds:0x4d483e13
  41e183:	mov    edx,0xee858d34
  41e188:	cmp    DWORD PTR [esi+0x455518c4],0xffffff9f
  41e18f:	shr    cl,1
  41e191:	push   ecx
  41e192:	sub    esp,ebp
  41e194:	das    
  41e195:	(bad)  
  41e196:	add    esi,DWORD PTR [ecx]
  41e198:	mov    fs,WORD PTR [ebp-0x67]
  41e19b:	aas    
  41e19c:	lds    ecx,FWORD PTR [ecx-0x478fa830]
  41e1a2:	jp     0x41e154
  41e1a4:	jmp    0xce:0x4886968
  41e1ab:	xor    BYTE PTR [esi-0x6],dh
  41e1ae:	pop    ecx
  41e1af:	je     0x41e204
  41e1b1:	outs   dx,BYTE PTR ds:[esi]
  41e1b2:	sar    DWORD PTR [ebx+esi*8+0x19],cl
  41e1b6:	pop    ebp
  41e1b7:	and    al,0x9c
  41e1b9:	push   0xffffffe2
  41e1bb:	and    bh,BYTE PTR [ebx+0x1fcccddc]
  41e1c1:	(bad)  
  41e1c2:	xchg   esp,eax
  41e1c3:	push   cs
  41e1c4:	ficomp DWORD PTR fs:[esi-0x76]
  41e1c8:	sbb    ch,bh
  41e1ca:	das    
  41e1cb:	sbb    BYTE PTR [ebx+0x5591477a],cl
  41e1d1:	dec    eax
  41e1d2:	pavgb  mm1,mm2
  41e1d5:	stc    
  41e1d6:	dec    ebx
  41e1d7:	jp     0x41e1f1
  41e1d9:	cmc    
  41e1da:	int3   
  41e1db:	and    eax,0x8499d3f9
  41e1e0:	sar    DWORD PTR [eax+ebx*4],1
  41e1e3:	dec    edx
  41e1e4:	mov    ah,0x93
  41e1e6:	jb     0x41e19f
  41e1e8:	or     ebx,0x6f
  41e1eb:	(bad)  
  41e1ec:	or     BYTE PTR [bp+0x5b60],cl
  41e1f1:	inc    esi
  41e1f2:	icebp  
  41e1f3:	mov    dh,0x13
  41e1f5:	popf   
  41e1f6:	xchg   edi,eax
  41e1f7:	mov    ecx,0x99eee987
  41e1fc:	fidiv  WORD PTR [esp+esi*4+0x7f2d88b3]
  41e203:	test   ebp,ecx
  41e205:	imul   esp,DWORD PTR [eax],0xffffffff
  41e208:	ins    BYTE PTR es:[edi],dx
  41e209:	mov    dh,BYTE PTR gs:[edi+0x36]
  41e20d:	xchg   ecx,eax
  41e20e:	out    dx,eax
  41e20f:	(bad)  
  41e211:	jnp    0x41e26e
  41e213:	jne    0x41e275
  41e215:	or     dh,BYTE PTR [esp+ebp*8+0x2]
  41e219:	fwait
  41e21a:	in     eax,dx
  41e21b:	push   ecx
  41e21c:	inc    esp
  41e21d:	pop    ebx
  41e21e:	sbb    eax,0xf5fee28d
  41e223:	mov    dl,0x25
  41e225:	pop    ebp
  41e226:	cmp    dl,BYTE PTR [esp+ebp*1]
  41e229:	sub    ah,BYTE PTR [ecx-0x780d709]
  41e22f:	cmc    
  41e230:	push   ds
  41e231:	(bad)  
  41e232:	mov    ds:0xc73ef935,al
  41e237:	pop    ebp
  41e238:	or     esi,esi
  41e23a:	mov    ch,0xe1
  41e23c:	pop    esp
  41e23d:	and    al,0xe3
  41e23f:	mov    ah,0x68
  41e241:	xchg   esi,eax
  41e242:	inc    esi
  41e243:	inc    ecx
  41e244:	aam    0xca
  41e246:	pop    ds
  41e247:	ds jg  0x41e255
  41e24a:	sbb    eax,0x241bc2d9
  41e24f:	pop    ss
  41e250:	mov    al,ds:0x22ff9224
  41e255:	ss jno 0x41e1e3
  41e258:	call   0xf69f:0x2229f2f1
  41e25f:	sbb    ebx,edi
  41e261:	(bad)  
  41e262:	imul   BYTE PTR [ecx]
  41e264:	dec    esi
  41e265:	jbe    0x41e203
  41e267:	push   ebp
  41e268:	fnstcw WORD PTR [esi+0x36]
  41e26b:	xlat   BYTE PTR ds:[ebx]
  41e26c:	sub    al,0x65
  41e26e:	lds    esp,FWORD PTR [esp+esi*8+0x67]
  41e272:	nop
  41e273:	ja     0x41e244
  41e275:	outs   dx,BYTE PTR ds:[esi]
  41e276:	arpl   bx,cx
  41e278:	retf   0x48d9
  41e27b:	mov    dl,0xb
  41e27d:	jbe    0x41e2c1
  41e27f:	shl    BYTE PTR [ebx],cl
  41e281:	push   es
  41e282:	sub    DWORD PTR [ecx-0xa],ebp
  41e285:	add    ebx,DWORD PTR [ebx+0x28450628]
  41e28b:	add    al,0xe
  41e28d:	sti    
  41e28e:	xlat   BYTE PTR ds:[ebx]
  41e28f:	pop    es
  41e290:	push   ebp
  41e291:	add    bl,cl
  41e293:	arpl   WORD PTR [esi],ax
  41e295:	sbb    BYTE PTR [eax],bl
  41e297:	imul   eax,DWORD PTR ss:[esi-0x560e932],0x8034511b
  41e2a2:	sub    eax,0x9cbba487
  41e2a7:	imul   esi,DWORD PTR [ebp+0x6ba38370],0x8e69d2ac
  41e2b1:	stos   DWORD PTR es:[edi],eax
  41e2b2:	add    esi,DWORD PTR [esi]
  41e2b4:	mov    cl,0x2f
  41e2b6:	mov    BYTE PTR [eax-0x11],0x11
  41e2ba:	jmp    0x41e33b
  41e2bc:	jp     0x41e278
  41e2be:	mov    ebx,0x40c95cfc
  41e2c3:	xor    ecx,ebp
  41e2c5:	mov    cl,0x2
  41e2c7:	sub    al,0xd7
  41e2c9:	cmp    eax,0x96fcdcef
  41e2ce:	sbb    DWORD PTR [edx+esi*1],ecx
  41e2d1:	and    DWORD PTR [edi-0x45],edx
  41e2d4:	xchg   ecx,eax
  41e2d5:	push   ss
  41e2d6:	push   esi
  41e2d7:	sub    BYTE PTR ds:0x60119a3e,0xab
  41e2de:	adc    ch,BYTE PTR [esi]
  41e2e0:	jmp    0xf20e:0xa7467dd
  41e2e7:	push   edi
  41e2e8:	test   al,0x7a
  41e2ea:	sbb    cl,cl
  41e2ec:	pusha  
  41e2ed:	sbb    al,0x6f
  41e2ef:	sub    eax,0x382d40e8
  41e2f4:	and    al,0x9b
  41e2f6:	xor    ecx,eax
  41e2f8:	pop    ecx
  41e2f9:	(bad)  
  41e2fa:	aaa    
  41e2fb:	jg     0x41e321
  41e2fd:	ja     0x41e338
  41e2ff:	push   ecx
  41e300:	(bad)  
  41e301:	outs   dx,BYTE PTR ds:[esi]
  41e302:	pop    ss
  41e303:	popa   
  41e304:	rol    al,1
  41e306:	mov    al,ds:0x5f39e03d
  41e30b:	call   0x9c57:0xaadef0b
  41e312:	mov    al,ds:0x87f6f8ed
  41e317:	jb     0x41e2a8
  41e319:	cmc    
  41e31a:	jge    0x41e326
  41e31c:	rcr    BYTE PTR [ebp-0x23],0x9d
  41e320:	sbb    DWORD PTR [esi-0x35],0x44b5929f
  41e327:	(bad)  
  41e328:	std    
  41e329:	lods   al,BYTE PTR ds:[esi]
  41e32a:	mov    al,0x1f
  41e32c:	mov    DWORD PTR [ecx],ebx
  41e32e:	aaa    
  41e32f:	mov    WORD PTR [ebx+0x44],?
  41e332:	ja     0x41e37f
  41e334:	fistp  WORD PTR [eax-0x11e26aaa]
  41e33a:	sub    DWORD PTR [ecx],ebp
  41e33c:	leave  
  41e33d:	jl     0x41e2f8
  41e33f:	jns    0x41e34a
  41e341:	sub    eax,0x3f7266d0
  41e346:	cmp    ebx,DWORD PTR [edi]
  41e348:	mov    bh,0x64
  41e34a:	sub    eax,0xae54d7ff
  41e34f:	add    DWORD PTR [edi],0x133c3206
  41e355:	outs   dx,DWORD PTR ds:[esi]
  41e356:	clc    
  41e357:	xor    ch,bl
  41e359:	jmp    0x2156d73e
  41e35e:	out    0xb,al
  41e360:	repz jge 0x41e2fd
  41e363:	lods   al,BYTE PTR ds:[esi]
  41e364:	mov    al,ds:0xdaeaaa9d
  41e369:	dec    esi
  41e36a:	ja     0x41e35b
  41e36c:	outs   dx,BYTE PTR ds:[esi]
  41e36d:	add    cl,al
  41e36f:	mov    ds,ecx
  41e371:	and    DWORD PTR [eax+edx*8],edx
  41e374:	push   esi
  41e375:	or     DWORD PTR ds:0x9f4ae8fc,0x90132980
  41e37f:	xchg   ebx,eax
  41e380:	add    edi,DWORD PTR [edi+ecx*8+0x47d75bb6]
  41e387:	out    dx,al
  41e388:	jge    0x41e394
  41e38a:	jle    0x41e314
  41e38c:	jl     0x41e31d
  41e38e:	dec    ebp
  41e38f:	sub    cl,BYTE PTR [eax-0x2d]
  41e392:	xor    esi,DWORD PTR [ebp-0x20]
  41e395:	mov    cl,0xb
  41e397:	enter  0x5d93,0x75
  41e39b:	cld    
  41e39c:	mov    edx,0xfb9aa11d
  41e3a1:	hlt    
  41e3a2:	inc    edi
  41e3a3:	das    
  41e3a4:	push   0xffffffdc
  41e3a6:	rcl    DWORD PTR [esi-0x8],1
  41e3a9:	ins    DWORD PTR es:[edi],dx
  41e3aa:	std    
  41e3ab:	inc    esp
  41e3ac:	mov    ?,WORD PTR [ebx]
  41e3ae:	retf   
  41e3af:	mov    BYTE PTR [eax+0x414cfbfe],dl
  41e3b5:	loopne 0x41e3f1
  41e3b7:	push   ds
  41e3b8:	int3   
  41e3b9:	sti    
  41e3ba:	pop    edx
  41e3bb:	ins    DWORD PTR es:[edi],dx
  41e3bc:	cwde   
  41e3bd:	add    edi,DWORD PTR ds:0x4c1d5cd3
  41e3c3:	test   al,0xae
  41e3c5:	pop    ecx
  41e3c6:	stos   DWORD PTR es:[edi],eax
  41e3c7:	inc    ebp
  41e3c8:	mov    eax,ds:0x1615c7d6
  41e3cd:	(bad)  
  41e3cf:	shr    BYTE PTR [ecx],1
  41e3d1:	and    esi,DWORD PTR fs:[ebp+0x73f17835]
  41e3d8:	sbb    ebp,ebx
  41e3da:	sub    eax,DWORD PTR [edx+edx*1]
  41e3dd:	adc    dl,BYTE PTR [eax+0x5b11d0ae]
  41e3e3:	jp     0x41e42a
  41e3e5:	imul   edi,esp,0xfdb98a40
  41e3eb:	rcr    eax,1
  41e3ed:	xchg   esp,eax
  41e3ee:	jle    0x41e459
  41e3f0:	int3   
  41e3f1:	pop    ecx
  41e3f2:	push   esi
  41e3f3:	mov    ds:0xa389bd6b,eax
  41e3f8:	dec    edx
  41e3f9:	outs   dx,DWORD PTR ds:[esi]
  41e3fa:	out    dx,al
  41e3fb:	mov    al,ds:0xd80ab19f
  41e400:	xchg   DWORD PTR ds:0x36b16d8b,ebx
  41e406:	mov    al,ds:0x8788872a
  41e40b:	cmp    eax,DWORD PTR [eax+edi*1-0x78]
  41e40f:	aad    0x4a
  41e411:	mov    edx,0x5c70a662
  41e416:	jnp    0x41e3f8
  41e418:	ror    DWORD PTR [ebx-0x77],1
  41e41b:	mov    ecx,0x8e7814e5
  41e420:	xor    ch,cl
  41e422:	sbb    edi,DWORD PTR [edx+0x2f]
  41e425:	dec    ebx
  41e426:	push   ss
  41e427:	dec    esi
  41e428:	std    
  41e429:	mov    esp,0xa133438d
  41e42e:	ret    
  41e42f:	(bad)  
  41e430:	leave  
  41e431:	scas   al,BYTE PTR es:[edi]
  41e432:	aaa    
  41e433:	mov    ecx,0x5edaec5f
  41e438:	addr16 (bad) 
  41e43b:	je     0x41e458
  41e43d:	push   es
  41e43e:	nop
  41e43f:	inc    edi
  41e440:	nop
  41e441:	push   ecx
  41e442:	adc    esi,DWORD PTR [edx]
  41e444:	xchg   BYTE PTR [edi+0x2f],bh
  41e447:	lds    eax,FWORD PTR [ecx-0x1c]
  41e44a:	inc    eax
  41e44b:	test   DWORD PTR [eax],ecx
  41e44d:	imul   esi,DWORD PTR [ecx-0x5516b282],0xfb7229b7
  41e457:	or     DWORD PTR [edx-0x24],esp
  41e45a:	inc    esp
  41e45b:	cdq    
  41e45c:	dec    edx
  41e45d:	bound  esp,QWORD PTR [edx+0x604d84e2]
  41e463:	xchg   ebx,eax
  41e464:	xchg   BYTE PTR [ecx+0x44b0296c],ah
  41e46a:	lea    edi,[edi]
  41e46c:	mov    ch,BYTE PTR [ebx-0x76cbf0ba]
  41e472:	int3   
  41e473:	mov    eax,0x606cf758
  41e478:	dec    edi
  41e479:	cmp    bh,dl
  41e47b:	or     ebp,DWORD PTR [edx]
  41e47d:	lods   eax,DWORD PTR ds:[esi]
  41e47e:	adc    eax,0xda43ccc4
  41e483:	dec    ebx
  41e484:	mov    bl,0xe3
  41e486:	shl    BYTE PTR [edi+0x1e2032a5],1
  41e48c:	mov    bh,0xe
  41e48e:	lods   al,BYTE PTR ds:[esi]
  41e48f:	dec    ebp
  41e490:	dec    esi
  41e491:	pop    esp
  41e492:	ds inc eax
  41e494:	rcl    BYTE PTR [eax-0x5f],0x48
  41e498:	mov    ch,bl
  41e49a:	popf   
  41e49b:	push   edx
  41e49c:	sub    al,0x47
  41e49e:	int3   
  41e49f:	add    BYTE PTR [edx-0x3b515f58],cl
  41e4a5:	cmp    DWORD PTR [ecx-0x27],edx
  41e4a8:	push   ebp
  41e4a9:	jbe    0x41e4a8
  41e4ab:	shl    BYTE PTR [eax+ecx*8],0xf7
  41e4af:	mov    es,WORD PTR ss:[edx-0x194a5d00]
  41e4b6:	sub    BYTE PTR [eax-0x79],al
  41e4b9:	arpl   cx,cx
  41e4bb:	cmp    ebp,eax
  41e4bd:	cmp    BYTE PTR ds:0xcf48e9a6,dh
  41e4c3:	daa    
  41e4c4:	cmp    eax,0x8ee8bc00
  41e4c9:	adc    al,BYTE PTR [edi-0x76643fe2]
  41e4cf:	xor    DWORD PTR [edx+0x7afc184d],edi
  41e4d5:	xor    esi,DWORD PTR [esi+0x16f2f960]
  41e4db:	in     al,0x75
  41e4dd:	mov    ebx,0x846072aa
  41e4e2:	push   ebx
  41e4e3:	je     0x41e4b5
  41e4e5:	clc    
  41e4e6:	mov    dh,0x15
  41e4e8:	cmc    
  41e4e9:	inc    eax
  41e4ea:	sub    BYTE PTR [esi+0x368d36b7],bh
  41e4f0:	xchg   ecx,eax
  41e4f1:	pop    ds
  41e4f2:	sar    edx,1
  41e4f4:	push   cs
  41e4f5:	add    al,0xd2
  41e4f7:	mov    dh,0x82
  41e4f9:	push   esp
  41e4fa:	in     al,dx
  41e4fb:	loop   0x41e4fc
  41e4fd:	xchg   esp,eax
  41e4fe:	sar    ebp,1
  41e500:	sbb    DWORD PTR [ebx+0x4d66262d],0x45b8dbcc
  41e50a:	and    DWORD PTR [ebx+0x60],ebp
  41e50d:	mov    al,ds:0x60e3fbe6
  41e512:	fwait
  41e513:	clc    
  41e514:	in     eax,0xba
  41e516:	popf   
  41e517:	mov    eax,ds:0x16d47c46
  41e51c:	clc    
  41e51d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e51e:	cdq    
  41e51f:	dec    esi
  41e520:	mov    dh,0xb1
  41e522:	or     eax,0x9b173447
  41e527:	dec    ebx
  41e528:	or     DWORD PTR [edx+ecx*2+0x12],0xffffffe8
  41e52d:	mov    ch,ah
  41e52f:	xor    BYTE PTR [eax],bh
  41e531:	push   cs
  41e532:	lea    edx,[edx-0x73dde4b1]
  41e538:	mov    ch,dl
  41e53a:	jl     0x41e56f
  41e53c:	fdivp  st(1),st
  41e53e:	daa    
  41e53f:	xor    eax,0x886612a3
  41e544:	pop    edi
  41e545:	mov    dh,0x7
  41e547:	sub    ebx,DWORD PTR [esi+0x214e285f]
  41e54d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e54e:	dec    edx
  41e54f:	xlat   BYTE PTR ds:[ebx]
  41e550:	push   0x43
  41e552:	cld    
  41e553:	xor    ebp,DWORD PTR [esi]
  41e555:	(bad)  [esi-0x543d8a8b]
  41e55b:	out    dx,eax
  41e55c:	retf   0xe847
  41e55f:	xlat   BYTE PTR ds:[ebx]
  41e560:	cmp    DWORD PTR [ebp+0x51f59804],edi
  41e566:	mov    ds:0x1a3b2b64,al
  41e56b:	daa    
  41e56c:	mov    esi,0x143be36
  41e571:	rcr    ch,1
  41e573:	or     dh,dl
  41e575:	stos   BYTE PTR es:[edi],al
  41e576:	ja     0x41e59d
  41e578:	stos   BYTE PTR es:[edi],al
  41e579:	pop    esp
  41e57a:	adc    ebp,ebx
  41e57c:	ficom  WORD PTR [edx-0x4b8e79b6]
  41e582:	sbb    DWORD PTR [ecx],eax
  41e584:	xchg   DWORD PTR [esi+0x3e],edi
  41e587:	leave  
  41e588:	add    eax,0x9a5022bc
  41e58d:	gs xchg ecx,eax
  41e58f:	mov    dl,0x7d
  41e591:	jge    0x41e5d9
  41e593:	inc    edx
  41e594:	pusha  
  41e595:	and    al,0x1b
  41e597:	shl    BYTE PTR [ebx+0x61],cl
  41e59a:	fnstsw WORD PTR [esi-0x3c]
  41e59d:	int3   
  41e59e:	xor    cl,BYTE PTR [ebp-0x55]
  41e5a1:	cmp    eax,DWORD PTR [edx]
  41e5a3:	pop    es
  41e5a4:	and    bl,bh
  41e5a6:	fstp   QWORD PTR [eax+ecx*8+0x69]
  41e5aa:	jb     0x41e5c4
  41e5ac:	xor    eax,0x73d26f82
  41e5b1:	pop    esi
  41e5b2:	aas    
  41e5b3:	vandpd ymm2,ymm4,YMMWORD PTR [ecx+edi*8+0x29dd6d8e]
  41e5bc:	mov    ah,0x9b
  41e5be:	or     ecx,ebx
  41e5c0:	push   0x9b4384cb
  41e5c5:	popf   
  41e5c6:	retf   0x9ea
  41e5c9:	mov    edi,0xd81a6171
  41e5ce:	in     eax,0xf2
  41e5d0:	repnz dec ebp
  41e5d2:	loop   0x41e5b9
  41e5d4:	mov    ecx,0x4b42412f
  41e5d9:	clc    
  41e5da:	dec    ebx
  41e5db:	sbb    DWORD PTR ds:0xebd2b14c,ecx
  41e5e1:	lock icebp 
  41e5e3:	or     edx,DWORD PTR [edx-0xb]
  41e5e6:	(bad)  
  41e5e7:	mov    ds:0x2bcb839b,al
  41e5ec:	mov    ecx,0xba94503d
  41e5f1:	pop    edx
  41e5f2:	dec    edx
  41e5f3:	pop    ss
  41e5f4:	(bad)  
  41e5f5:	fisttp DWORD PTR [esi]
  41e5f7:	mov    eax,ds:0xc3618f4c
  41e5fc:	ret    0xe2ab
  41e5ff:	inc    eax
  41e600:	fld    TBYTE PTR [ebx]
  41e602:	add    DWORD PTR [eax-0x3e],esp
  41e605:	xchg   ebx,eax
  41e606:	jne    0x41e62e
  41e608:	mov    bl,bl
  41e60a:	icebp  
  41e60b:	add    eax,0xf5864cdc
  41e610:	sbb    esp,edx
  41e612:	mov    al,ds:0xec071945
  41e617:	aam    0x32
  41e619:	les    edi,FWORD PTR [ebx+0x51f81717]
  41e61f:	push   es
  41e620:	repz sub esi,DWORD PTR [esi-0x3cf2268b]
  41e627:	lods   al,BYTE PTR ds:[esi]
  41e628:	int    0xd3
  41e62a:	cmp    DWORD PTR [edi+0xd120bab],edi
  41e630:	adc    BYTE PTR [eax+0x606acc12],0xce
  41e637:	jae    0x41e66a
  41e639:	adc    BYTE PTR [edi+0xf25dfc2],bl
  41e63f:	into   
  41e640:	inc    edi
  41e641:	sub    al,0xb9
  41e643:	add    esp,DWORD PTR [ebx+ebp*1]
  41e646:	pop    esi
  41e647:	push   ebx
  41e648:	ret    
  41e649:	icebp  
  41e64a:	pusha  
  41e64b:	pop    edx
  41e64c:	dec    esi
  41e64d:	sbb    BYTE PTR [eax-0x43],0x6a
  41e651:	fisubr WORD PTR [ecx*4+0x69c6cda7]
  41e658:	hlt    
  41e659:	pop    ss
  41e65a:	fsub   DWORD PTR [esi-0x350b8c35]
  41e660:	jle    0x41e622
  41e662:	push   esp
  41e663:	out    dx,al
  41e664:	clc    
  41e665:	dec    ebp
  41e666:	or     BYTE PTR [esi],al
  41e668:	pop    ecx
  41e669:	push   cs
  41e66a:	adc    DWORD PTR [ebx+0x72],0x77
  41e66e:	push   ebp
  41e66f:	mov    edx,0x5cd8d77
  41e674:	dec    dx
  41e676:	out    dx,eax
  41e677:	fcom   DWORD PTR [ebx]
  41e679:	jae    0x41e6d8
  41e67b:	jecxz  0x41e64c
  41e67d:	jmp    0x41e6aa
  41e67f:	fldcw  WORD PTR [edi-0x58]
  41e682:	or     al,0x8a
  41e684:	mov    eax,ds:0x776c6105
  41e689:	push   es
  41e68a:	cmp    ch,bl
  41e68c:	popa   
  41e68d:	jnp    0x41e682
  41e68f:	push   esi
  41e690:	and    DWORD PTR [eax+esi*8],ecx
  41e693:	imul   edx,DWORD PTR [edi+0x5f],0xffffffdf
  41e697:	fisubr WORD PTR [ebp+0x6f]
  41e69a:	js     0x41e622
  41e69c:	xchg   ebx,eax
  41e69d:	cmp    eax,0xb8d7946
  41e6a2:	je     0x41e642
  41e6a4:	fwait
  41e6a5:	and    esi,esi
  41e6a7:	in     al,dx
  41e6a8:	loopne 0x41e6f4
  41e6aa:	mov    BYTE PTR [edx],bl
  41e6ac:	push   esi
  41e6ad:	dec    edx
  41e6ae:	icebp  
  41e6af:	cs arpl ax,di
  41e6b2:	xchg   DWORD PTR [ebx],ecx
  41e6b4:	int3   
  41e6b5:	mov    ds:0xd2629830,al
  41e6ba:	dec    ebx
  41e6bb:	add    BYTE PTR [edx],dh
  41e6bd:	mov    ecx,0xc487af9b
  41e6c2:	icebp  
  41e6c3:	in     al,0x64
  41e6c5:	pop    ebx
  41e6c6:	sub    esi,DWORD PTR [eax-0x80]
  41e6c9:	xchg   esp,eax
  41e6ca:	xor    ch,BYTE PTR [ebp+0xd]
  41e6cd:	dec    ebx
  41e6ce:	inc    ecx
  41e6cf:	int    0xae
  41e6d1:	ret    
  41e6d2:	cmp    al,0xf5
  41e6d4:	xchg   esp,eax
  41e6d5:	xchg   esp,eax
  41e6d6:	and    bl,BYTE PTR [ebx+0x6b]
  41e6d9:	xchg   edi,eax
  41e6da:	adc    edi,ecx
  41e6dc:	lds    ebp,FWORD PTR [ebx+esi*1+0x71]
  41e6e0:	jno    0x41e6ce
  41e6e2:	(bad)  
  41e6e3:	ja     0x41e66d
  41e6e5:	or     eax,0xfe9891ed
  41e6ea:	push   ss
  41e6eb:	mov    edx,0xb6514f16
  41e6f0:	shl    BYTE PTR [esi-0x19413516],0x7b
  41e6f7:	repz pusha 
  41e6f9:	inc    edx
  41e6fa:	ret    
  41e6fb:	pop    ecx
  41e6fc:	sar    bh,0x1
  41e6ff:	inc    esp
  41e700:	daa    
  41e701:	aaa    
  41e702:	jne    0x41e781
  41e704:	xchg   BYTE PTR [ecx],dh
  41e706:	js     0x41e6f4
  41e708:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e709:	inc    esi
  41e70a:	and    eax,0x6eeb6110
  41e70f:	jmp    0x3fd3ebb6
  41e714:	pop    ebx
  41e715:	out    0xb2,al
  41e717:	out    0x68,eax
  41e719:	xchg   esp,eax
  41e71a:	mov    al,0xfd
  41e71c:	(bad)  
  41e71d:	push   esp
  41e71e:	or     al,0xa1
  41e720:	add    DWORD PTR [esi+0x5f],eax
  41e723:	sub    cl,bl
  41e725:	mov    dl,0x90
  41e727:	dec    edx
  41e728:	imul   ebp,DWORD PTR [edx+0x28],0x55b3634a
  41e72f:	loopne 0x41e751
  41e731:	add    BYTE PTR [ebp-0x26],0xe1
  41e735:	rcr    BYTE PTR [esi-0x6160fbef],0x7b
  41e73c:	fldcw  WORD PTR [eax-0x19]
  41e73f:	pop    eax
  41e740:	sbb    DWORD PTR es:[ebx-0x71a2955a],ebx
  41e747:	or     bl,BYTE PTR [ebx]
  41e749:	jmp    0x1ed8cd88
  41e74e:	lods   al,BYTE PTR ds:[esi]
  41e74f:	shl    BYTE PTR [edi-0x23],cl
  41e752:	aas    
  41e753:	pushf  
  41e754:	sbb    al,0x1e
  41e756:	hlt    
  41e757:	adc    dh,BYTE PTR [eax+0x597b6301]
  41e75d:	pop    esp
  41e75e:	xor    BYTE PTR [eax-0x2],0x5d
  41e762:	in     al,dx
  41e763:	adc    DWORD PTR [esi+0x5660727e],0xeb1310b
  41e76d:	dec    BYTE PTR ds:0x134a50a2
  41e773:	leave  
  41e774:	jmp    0xec449bd0
  41e779:	mov    eax,ds:0xd23cc321
  41e77e:	inc    ebx
  41e77f:	cmp    ecx,DWORD PTR [esp+eax*2+0xa]
  41e783:	aas    
  41e784:	popf   
  41e785:	push   esp
  41e786:	(bad)  
  41e787:	push   esi
  41e788:	out    0xc,al
  41e78a:	xchg   edx,eax
  41e78b:	xor    eax,0x5a55d8e2
  41e790:	xor    al,0x2e
  41e792:	retf   
  41e793:	(bad)  
  41e795:	xor    edi,0x37
  41e798:	xchg   dh,bl
  41e79a:	or     edx,edi
  41e79c:	mov    ecx,ss
  41e79e:	cwde   
  41e79f:	pushf  
  41e7a0:	outs   dx,DWORD PTR ds:[esi]
  41e7a1:	adc    ah,BYTE PTR [ebx]
  41e7a3:	mov    bh,0x23
  41e7a5:	loopne 0x41e736
  41e7a7:	sar    esp,1
  41e7a9:	adc    ch,ch
  41e7ab:	sub    DWORD PTR [edx],ebx
  41e7ad:	mov    bl,0x6e
  41e7af:	ss jge 0x41e802
  41e7b2:	pushf  
  41e7b3:	loop   0x41e808
  41e7b5:	dec    edx
  41e7b6:	stc    
  41e7b7:	(bad)  
  41e7b9:	in     eax,0xfd
  41e7bb:	sub    ah,BYTE PTR [esi-0x75d097f9]
  41e7c1:	mov    eax,ds:0x56be518f
  41e7c6:	inc    ebx
  41e7c7:	cmp    eax,0x3a9d318
  41e7cc:	jg     0x41e837
  41e7ce:	retf   
  41e7cf:	nop
  41e7d0:	data16 jg 0x41e79e
  41e7d3:	adc    DWORD PTR [edx+0x2c],edi
  41e7d6:	mov    edi,0x49546d66
  41e7db:	adc    al,0x27
  41e7dd:	mov    edx,0xf7a453fb
  41e7e2:	jle    0x41e835
  41e7e4:	fdiv   DWORD PTR [ecx]
  41e7e6:	cdq    
  41e7e7:	xchg   ebp,eax
  41e7e8:	ins    DWORD PTR es:[edi],dx
  41e7e9:	mov    ch,dh
  41e7eb:	pop    edx
  41e7ec:	scas   eax,DWORD PTR es:[edi]
  41e7ed:	(bad)  
  41e7ee:	fbld   TBYTE PTR [edx+0x2e712a99]
  41e7f4:	or     eax,0x42d867e
  41e7f9:	pop    edi
  41e7fa:	outs   dx,BYTE PTR ds:[esi]
  41e7fb:	retf   0x79f8
  41e7fe:	xchg   ebp,eax
  41e7ff:	xor    al,0x2f
  41e801:	jne    0x41e7d9
  41e803:	mov    edx,DWORD PTR [esi]
  41e805:	pop    esi
  41e806:	dec    eax
  41e807:	mov    dl,BYTE PTR [edx-0x79]
  41e80a:	aaa    
  41e80b:	ja     0x41e7c7
  41e80d:	das    
  41e80e:	ficom  WORD PTR [esi]
  41e810:	mov    ecx,0x15aaa431
  41e815:	xor    esi,DWORD PTR [edx-0x45]
  41e818:	mov    eax,0x701b4318
  41e81d:	mov    eax,ds:0x88dcd9dd
  41e822:	out    dx,al
  41e823:	mov    ebx,0x476b4971
  41e828:	cs dec ebp
  41e82a:	jl     0x41e806
  41e82c:	ins    DWORD PTR es:[edi],dx
  41e82d:	jp     0x41e83b
  41e82f:	and    cl,BYTE PTR [edx]
  41e831:	mov    bh,0xc9
  41e833:	push   edx
  41e834:	(bad)  
  41e835:	pop    ebx
  41e836:	popa   
  41e837:	imul   ecx
  41e839:	push   0xffffff8a
  41e83b:	in     eax,dx
  41e83c:	out    0xc8,eax
  41e83e:	fcmovu st,st(1)
  41e840:	cmp    al,0xd0
  41e842:	add    DWORD PTR [ebp+0x47],edx
  41e845:	jl     0x41e88b
  41e847:	dec    ebx
  41e848:	and    DWORD PTR [eax],0xffffffe2
  41e84b:	xor    ah,dh
  41e84d:	retf   
  41e84e:	int3   
  41e84f:	clc    
  41e850:	adc    DWORD PTR [esi],0xffffffcf
  41e853:	(bad)  [eax-0x6c]
  41e856:	mov    BYTE PTR [edx],al
  41e858:	sub    eax,DWORD PTR [esi-0x451ee79f]
  41e85e:	test   dh,0xe9
  41e861:	xchg   ebx,ebp
  41e863:	adc    BYTE PTR [esi],bh
  41e865:	add    dh,BYTE PTR [ecx-0x36e5b325]
  41e86b:	les    edx,FWORD PTR [eax+0x2c620eb7]
  41e871:	call   0x6951:0xd757a97b
  41e878:	retf   0x8009
  41e87b:	or     BYTE PTR [esi+0x42],dh
  41e87e:	lods   al,BYTE PTR ds:[esi]
  41e87f:	xchg   ebx,eax
  41e880:	adc    al,0xda
  41e882:	push   ebp
  41e883:	xor    DWORD PTR [ebx+0x20],ebx
  41e886:	xchg   edi,eax
  41e887:	pop    es
  41e888:	add    DWORD PTR [edx+0x2c],0xffffffc0
  41e88c:	cld    
  41e88d:	aam    0xe3
  41e88f:	sub    ch,BYTE PTR [edx+0x6c]
  41e892:	mov    ah,0x8
  41e894:	fdiv   DWORD PTR ds:0xd9377a59
  41e89a:	loope  0x41e86d
  41e89c:	arpl   bp,cx
  41e89e:	xor    BYTE PTR [ebp+esi*2+0x6a],bh
  41e8a2:	dec    ecx
  41e8a3:	adc    al,0xe3
  41e8a5:	inc    ecx
  41e8a6:	pop    esp
  41e8a7:	add    esi,DWORD PTR [esi+0x1c]
  41e8aa:	repz fwait
  41e8ac:	imul   esi,edx,0x197b7655
  41e8b2:	retf   
  41e8b3:	clc    
  41e8b4:	jbe    0x41e8b7
  41e8b6:	xchg   edi,eax
  41e8b7:	outs   dx,BYTE PTR ds:[esi]
  41e8b8:	(bad)  
  41e8b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8ba:	jbe    0x41e875
  41e8bc:	xchg   edx,eax
  41e8bd:	imul   esi,ebx,0x48
  41e8c0:	iret   
  41e8c1:	adc    bh,BYTE PTR [esi-0x4eb0855b]
  41e8c7:	rol    DWORD PTR [ebp+0x53b82faf],0x3b
  41e8ce:	test   eax,ebx
  41e8d0:	stos   DWORD PTR es:[edi],eax
  41e8d1:	jo     0x41e896
  41e8d3:	mov    al,ds:0x3f75077d
  41e8d8:	sub    dh,BYTE PTR [eax]
  41e8da:	inc    ecx
  41e8db:	call   0x9c8f:0xa394f842
  41e8e2:	stos   DWORD PTR es:[edi],eax
  41e8e3:	(bad)  
  41e8e4:	and    DWORD PTR ds:0x6e901067,ebx
  41e8ea:	xchg   edx,eax
  41e8eb:	sbb    DWORD PTR [ecx],esp
  41e8ed:	repz sbb al,ch
  41e8f0:	push   edi
  41e8f1:	test   DWORD PTR [ebx-0x302856a7],ebx
  41e8f7:	sub    dl,BYTE PTR [esi-0x71400de8]
  41e8fd:	fst    st(2)
  41e8ff:	or     eax,0x61d86942
  41e904:	mov    edx,0xc1eebc3e
  41e909:	out    0xb,eax
  41e90b:	addr16 icebp 
  41e90d:	dec    esp
  41e90e:	and    BYTE PTR [edi],0x16
  41e911:	and    DWORD PTR [edi+0x37],esp
  41e914:	aam    0xe4
  41e916:	and    eax,0xcd4ffdc3
  41e91b:	out    0x9e,eax
  41e91d:	fcmovb st,st(4)
  41e91f:	in     al,0xf2
  41e921:	push   edi
  41e922:	sar    BYTE PTR [ecx],1
  41e924:	dec    ebx
  41e925:	rcl    bl,0x4b
  41e928:	retf   0x66a2
  41e92b:	cmp    bh,al
  41e92d:	sbb    BYTE PTR [ebx-0x1aad171],0x12
  41e934:	mov    dl,0x7e
  41e936:	in     eax,0x1
  41e938:	push   eax
  41e939:	inc    ebx
  41e93a:	mov    ecx,0xaf73436c
  41e93f:	pusha  
  41e940:	test   BYTE PTR [eax],0x14
  41e943:	rcl    DWORD PTR [ebp+edi*1+0x64],cl
  41e947:	sub    bl,BYTE PTR [ebx]
  41e949:	mov    DWORD PTR [ebx+0x47],eax
  41e94c:	fcomp  QWORD PTR [ecx-0x7d]
  41e94f:	pop    ebp
  41e950:	dec    ecx
  41e951:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e952:	fstp   QWORD PTR [edx+0x38]
  41e955:	add    BYTE PTR es:[eax-0x5b],dl
  41e959:	sub    bl,ah
  41e95b:	pop    es
  41e95c:	stc    
  41e95d:	leave  
  41e95e:	jle    0x41e9d3
  41e960:	pushf  
  41e961:	push   edi
  41e962:	inc    edi
  41e963:	std    
  41e964:	mov    eax,ds:0x985a1e22
  41e969:	mov    es,WORD PTR [ebp-0x73]
  41e96c:	fcomp  DWORD PTR [edx+0x6c]
  41e96f:	xor    BYTE PTR [eax+0x3da12680],dl
  41e975:	xchg   ebx,eax
  41e976:	pop    eax
  41e977:	xor    esi,DWORD PTR [eax+ebp*8-0x50c02e39]
  41e97e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e97f:	mov    DWORD PTR [edx+0xc],0xa1be54d9
  41e986:	xlat   BYTE PTR ds:[ebx]
  41e987:	into   
  41e988:	and    DWORD PTR [eax-0x22],edx
  41e98b:	or     dl,0x5e
  41e98e:	xchg   esi,eax
  41e98f:	xor    BYTE PTR [edi+ecx*8],ah
  41e992:	mov    al,ds:0x55a80b1b
  41e997:	lahf   
  41e998:	and    DWORD PTR [edx+eiz*8],esp
  41e99b:	inc    edi
  41e99c:	es mov al,0xcb
  41e99f:	out    0xa2,al
  41e9a1:	jb     0x41e95d
  41e9a3:	std    
  41e9a4:	sti    
  41e9a5:	inc    esi
  41e9a6:	jge    0x41ea23
  41e9a8:	add    edi,DWORD PTR [ebp-0x1e]
  41e9ab:	mov    esp,0x3fa7482a
  41e9b0:	and    DWORD PTR [ecx+0x675fa7f9],edx
  41e9b6:	fldcw  WORD PTR [esi-0x5f]
  41e9b9:	jno    0x41e966
  41e9bb:	mov    BYTE PTR [ecx+0x19bc1721],bl
  41e9c1:	add    al,0xbf
  41e9c3:	cs fcomp DWORD PTR cs:[edx-0x5a3fc8dd]
  41e9cb:	pop    ebx
  41e9cc:	mov    ebx,0xef434ef
  41e9d1:	xor    BYTE PTR [edx],dh
  41e9d3:	or     DWORD PTR [edx+0x33],edi
  41e9d6:	adc    al,0x15
  41e9d8:	jb     0x41e973
  41e9da:	and    BYTE PTR [esi+0x7b336bcd],ch
  41e9e0:	clc    
  41e9e1:	sub    eax,0xf0f986c0
  41e9e6:	pushf  
  41e9e7:	pop    edx
  41e9e8:	add    eax,0x45dba969
  41e9ed:	shl    esp,0x3f
  41e9f0:	jl     0x41ea46
  41e9f2:	adc    ebx,esi
  41e9f4:	jle    0x41ea40
  41e9f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9f7:	scas   eax,DWORD PTR es:[edi]
  41e9f8:	cmp    bl,al
  41e9fa:	sbb    dh,dh
  41e9fc:	in     ax,dx
  41e9fe:	test   al,0xbc
  41ea00:	pop    ss
  41ea01:	add    ecx,DWORD PTR [ebp+0x64c4e9bf]
  41ea07:	mov    cs,edi
  41ea09:	inc    ecx
  41ea0a:	or     al,cl
  41ea0c:	fbstp  TBYTE PTR [edx+0x7eefbfe7]
  41ea12:	inc    ebx
  41ea13:	out    0x1d,al
  41ea15:	ret    0x50ca
  41ea18:	push   0xfd8cb7ae
  41ea1d:	xor    DWORD PTR [esi],esi
  41ea1f:	jmp    0x41ea40
  41ea21:	mov    edx,0xc5b9c23e
  41ea26:	cdq    
  41ea27:	mov    ds,WORD PTR [ebx+0x7f3fef6a]
  41ea2d:	in     eax,dx
  41ea2e:	sbb    ebx,eax
  41ea30:	imul   edx,esi,0xfa5f1746
  41ea36:	inc    ebp
  41ea37:	sbb    ebp,DWORD PTR [edx+0x27536c4]
  41ea3d:	ds int 0x43
  41ea40:	nop
  41ea41:	fbld   TBYTE PTR [ebx+0x3]
  41ea44:	dec    edi
  41ea45:	inc    edx
  41ea46:	sbb    BYTE PTR [esp+edx*4+0x290e4c3d],cl
  41ea4d:	and    esp,DWORD PTR [edi+eiz*2]
  41ea50:	stos   DWORD PTR es:[edi],eax
  41ea51:	loopne 0x41ea2d
  41ea53:	add    eax,0xa9bf1a3e
  41ea58:	mov    ah,0x65
  41ea5a:	mov    ecx,0x65c98535
  41ea5f:	cmp    al,0x96
  41ea61:	jne    0x41eade
  41ea63:	mov    al,BYTE PTR cs:[edi+edx*4-0xe9d0816]
  41ea6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea6c:	sbb    al,0xf8
  41ea6e:	dec    esi
  41ea6f:	mov    esp,0x35df6af2
  41ea74:	and    BYTE PTR [eax-0x78ed1856],bl
  41ea7a:	add    DWORD PTR [eax-0x7617a13c],edx
  41ea80:	mov    ch,0xd7
  41ea82:	lahf   
  41ea83:	jmp    0xd887:0x24623159
  41ea8a:	mov    eax,DWORD PTR [esi+ebp*4+0x3f]
  41ea8e:	pop    esp
  41ea8f:	fist   DWORD PTR [edx+ebx*4-0x20]
  41ea93:	sti    
  41ea94:	push   es
  41ea95:	dec    eax
  41ea96:	xchg   esi,eax
  41ea97:	repz aaa 
  41ea99:	ins    BYTE PTR es:[edi],dx
  41ea9a:	cmp    ecx,edi
  41ea9c:	pushf  
  41ea9d:	mov    BYTE PTR [esi+0x551cff13],al
  41eaa3:	mov    al,0x5c
  41eaa5:	ficom  WORD PTR [ebp-0x451533ee]
  41eaab:	nop
  41eaac:	sub    al,0x47
  41eaae:	shl    BYTE PTR [edi-0x2d],0x5e
  41eab2:	fsub   st,st(1)
  41eab4:	aaa    
  41eab5:	mov    ebp,0x3e44463d
  41eaba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eabb:	dec    ebx
  41eabc:	imul   eax,DWORD PTR [esi+edi*2],0xffffff95
  41eac0:	push   esi
  41eac1:	mov    bl,0x2d
  41eac3:	mov    ah,0xd1
  41eac5:	in     eax,0x1d
  41eac7:	dec    edi
  41eac8:	in     al,dx
  41eac9:	xor    bh,BYTE PTR [edi]
  41eacb:	retf   0x3425
  41eace:	mov    bl,0xe5
  41ead0:	inc    eax
  41ead1:	push   eax
  41ead2:	je     0x41ea82
  41ead4:	pop    ecx
  41ead5:	xchg   DWORD PTR [edx+0x4a],eax
  41ead8:	ror    BYTE PTR [edi+edi*1],0x23
  41eadc:	jne    0x41eae0
  41eade:	clc    
  41eadf:	adc    BYTE PTR [ebp-0x6d9823b3],dl
  41eae5:	xor    eax,ebp
  41eae7:	outs   dx,DWORD PTR ds:[esi]
  41eae8:	mov    al,ds:0xbf558b27
  41eaed:	das    
  41eaee:	mov    dl,0x24
  41eaf0:	cld    
  41eaf1:	pop    ebx
  41eaf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eaf3:	arpl   WORD PTR [edx-0x22],ax
  41eaf6:	push   ds
  41eaf7:	push   ebx
  41eaf8:	jmp    0x41eb58
  41eafa:	fisttp DWORD PTR [eax-0x7027cfb]
  41eb00:	out    0x2b,eax
  41eb02:	ficom  WORD PTR ds:[edi-0x3b]
  41eb06:	jecxz  0x41eaba
  41eb08:	cmp    bh,BYTE PTR [edi+0x12dbe948]
  41eb0e:	push   0x1b
  41eb10:	std    
  41eb11:	dec    eax
  41eb12:	pop    ebx
  41eb13:	fcmovne st,st(3)
  41eb15:	inc    edi
  41eb16:	aad    0xd4
  41eb18:	sub    cl,0x35
  41eb1b:	aas    
  41eb1c:	or     eax,0xed811da
  41eb21:	dec    ebx
  41eb22:	inc    edx
  41eb23:	mov    ah,0xef
  41eb25:	push   es
  41eb26:	push   ds
  41eb27:	ds pop ecx
  41eb29:	aad    0x20
  41eb2b:	mov    bl,0x19
  41eb2d:	iret   
  41eb2e:	call   0xd3f3c3f2
  41eb33:	in     eax,0xe2
  41eb35:	mov    ebp,0xfc764dd3
  41eb3a:	je     0x41eb9b
  41eb3c:	sahf   
  41eb3d:	and    eax,eax
  41eb3f:	out    0x3c,eax
  41eb41:	sti    
  41eb42:	data16 sub al,0x60
  41eb45:	mov    BYTE PTR [edi],ch
  41eb47:	push   0x9d5f4544
  41eb4c:	(bad)  
  41eb4d:	mov    ch,0x73
  41eb4f:	loop   0x41eb44
  41eb51:	ret    
  41eb52:	mov    bl,0x9c
  41eb54:	stos   BYTE PTR es:[edi],al
  41eb55:	mul    DWORD PTR [edi]
  41eb57:	cmp    cl,BYTE PTR [esi-0x5b]
  41eb5a:	adc    DWORD PTR es:0x32679bc7,0x1ccaa391
  41eb65:	and    bl,BYTE PTR [edx+0x4bae49e5]
  41eb6b:	dec    ebp
  41eb6c:	es xchg ebx,eax
  41eb6e:	adc    DWORD PTR [eax],ecx
  41eb70:	fwait
  41eb71:	jns    0x41ebc0
  41eb73:	xchg   esi,eax
  41eb74:	adc    eax,0x69726bb4
  41eb79:	fcom   QWORD PTR [ebx+0x1e]
  41eb7c:	pop    ebp
  41eb7d:	mov    ds:0x51852c6d,al
  41eb82:	ret    0xdee9
  41eb85:	mov    al,ds:0x66005f1
  41eb8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb8b:	pop    ebx
  41eb8c:	inc    eax
  41eb8d:	fs jmp 0x7065:0x9d6c19d0
  41eb95:	mov    eax,ds:0x90916b5
  41eb9a:	inc    esp
  41eb9b:	lds    ecx,FWORD PTR [esi]
  41eb9d:	data16 in al,0x6f
  41eba0:	sti    
  41eba1:	pop    ebx
  41eba2:	pop    eax
  41eba3:	xchg   esp,eax
  41eba4:	pushf  
  41eba5:	(bad)  
  41eba6:	dec    edi
  41eba7:	cwde   
  41eba8:	jmp    0x6ce6:0x294e0da5
  41ebaf:	pop    eax
  41ebb0:	cmp    dh,BYTE PTR [esi+0x20]
  41ebb3:	or     eax,0x397008e1
  41ebb8:	imul   edx,esp,0xacdffc7
  41ebbe:	add    cl,ah
  41ebc0:	dec    ecx
  41ebc1:	cmp    dl,bh
  41ebc3:	sbb    edx,DWORD PTR [esi]
  41ebc5:	test   DWORD PTR [esi-0x4c],esi
  41ebc8:	stos   BYTE PTR es:[edi],al
  41ebc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebca:	cli    
  41ebcb:	(bad)  
  41ebcd:	mov    edx,0xefcd6581
  41ebd2:	add    bh,bl
  41ebd4:	xchg   esp,eax
  41ebd5:	daa    
  41ebd6:	fs je  0x41eb5e
  41ebd9:	sbb    BYTE PTR [ebp+0x5c],cl
  41ebdc:	and    BYTE PTR [ecx],al
  41ebde:	xchg   edx,eax
  41ebdf:	fild   QWORD PTR [edi-0x77]
  41ebe2:	stos   DWORD PTR es:[edi],eax
  41ebe3:	test   DWORD PTR [edx-0x2a],ebp
  41ebe6:	scas   eax,DWORD PTR es:[edi]
  41ebe7:	adc    dl,BYTE PTR [edx-0x56b2917b]
  41ebed:	in     eax,0x41
  41ebef:	jmp    0x2a7695dc
  41ebf4:	mov    ecx,0xbf82784c
  41ebf9:	dec    esi
  41ebfa:	pop    edx
  41ebfb:	push   ebx
  41ebfc:	retf   0x635b
  41ebff:	jmp    0xa85f:0xb050fc1c
  41ec06:	inc    esp
  41ec07:	mov    ds:0xbb3dc590,eax
  41ec0c:	add    BYTE PTR [ecx],al
  41ec0e:	dec    esp
  41ec0f:	rcr    esp,1
  41ec11:	and    BYTE PTR [ebx+0x43],0x7f
  41ec15:	cmp    BYTE PTR [edi+0x3b2f79b7],dl
  41ec1b:	mov    ecx,DWORD PTR [ebp+0x211e5512]
  41ec21:	dec    ebp
  41ec22:	ins    DWORD PTR es:[edi],dx
  41ec23:	mov    ds:0x6de69032,al
  41ec28:	sbb    ebx,DWORD PTR [eax]
  41ec2a:	stc    
  41ec2b:	push   es
  41ec2c:	aad    0x58
  41ec2e:	call   0xe5e5:0xc1e5c895
  41ec35:	jmp    0xdd1ded2
  41ec3a:	xchg   ecx,eax
  41ec3b:	mov    edx,DWORD PTR [eax-0x1c233982]
  41ec41:	fs mov eax,0xeccc7042
  41ec47:	mov    dl,0x6f
  41ec49:	mov    edx,0x28f82529
  41ec4e:	sub    al,0x78
  41ec50:	int    0x1b
  41ec52:	stos   BYTE PTR es:[edi],al
  41ec53:	lds    esi,FWORD PTR [edi+0x57]
  41ec56:	inc    ebx
  41ec57:	mov    esi,0x6534fdc1
  41ec5c:	cld    
  41ec5d:	cmp    ebx,edi
  41ec5f:	shl    DWORD PTR [edx],0xa9
  41ec62:	jb     0x41ebfe
  41ec64:	push   ebx
  41ec65:	fldcw  WORD PTR [edx+0x4612e47d]
  41ec6b:	lahf   
  41ec6c:	jae    0x41ebee
  41ec6e:	adc    bl,ah
  41ec70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec71:	dec    eax
  41ec72:	push   0xffffffd2
  41ec74:	sub    BYTE PTR [ebp-0x24749891],al
  41ec7a:	popf   
  41ec7b:	jp     0x41ec1e
  41ec7d:	sbb    ebp,DWORD PTR [ebx-0x1f]
  41ec80:	call   0x303a:0x38aee44
  41ec87:	pushf  
  41ec88:	jmp    0x4a15:0x86838ba8
  41ec8f:	adc    ah,dh
  41ec91:	(bad)  
  41ec93:	dec    ebx
  41ec94:	sub    eax,esi
  41ec96:	loope  0x41ec8a
  41ec98:	retf   0x5e55
  41ec9b:	cs mov edx,0x7dc12782
  41eca1:	iret   
  41eca2:	pop    ecx
  41eca3:	and    ah,BYTE PTR [ecx]
  41eca5:	rcr    BYTE PTR [ebp+0x452edee8],cl
  41ecab:	mov    bh,0x71
  41ecad:	push   edx
  41ecae:	stc    
  41ecaf:	retf   
  41ecb0:	xchg   ebp,eax
  41ecb1:	js     0x41ecdd
  41ecb3:	push   eax
  41ecb4:	enter  0x5221,0x5
  41ecb8:	bound  ebp,QWORD PTR [esi+0x6a]
  41ecbb:	mov    cs,WORD PTR [edx+ebx*2]
  41ecbe:	outs   dx,DWORD PTR ds:[esi]
  41ecbf:	or     al,0xb3
  41ecc1:	mov    esi,0x196fb9e7
  41ecc6:	sub    BYTE PTR [ecx-0x72],dl
  41ecc9:	retf   0xa265
  41eccc:	mov    esi,DWORD PTR [edi]
  41ecce:	add    eax,0xe1e87722
  41ecd3:	stos   BYTE PTR es:[edi],al
  41ecd4:	dec    eax
  41ecd5:	xor    ecx,DWORD PTR [edi-0x64]
  41ecd8:	loope  0x41ed55
  41ecda:	sub    dh,BYTE PTR [esp+eax*2-0x72]
  41ecde:	push   esp
  41ecdf:	push   edx
  41ece0:	outs   dx,DWORD PTR ds:[esi]
  41ece1:	lods   eax,DWORD PTR ds:[esi]
  41ece2:	lods   al,BYTE PTR ds:[esi]
  41ece3:	fs in  eax,0x1a
  41ece6:	mov    ebp,0x957ddcbf
  41eceb:	xchg   edi,eax
  41ecec:	push   cs
  41eced:	aas    
  41ecee:	xor    eax,0x8a9168c
  41ecf3:	test   al,0xb5
  41ecf5:	fistp  DWORD PTR [ebp+0x11]
  41ecf8:	btc    DWORD PTR [ebx],edi
  41ecfb:	inc    ebp
  41ecfc:	jns    0x41ece9
  41ecfe:	xor    dh,dl
  41ed00:	(bad)
  41ed03:	scas   eax,DWORD PTR es:[edi]
  41ed04:	xor    eax,0xebe437a2
  41ed09:	dec    ebp
  41ed0a:	pop    esp
  41ed0b:	inc    ebp
  41ed0c:	std    
  41ed0d:	mov    WORD PTR [ebp+0x753fc16d],cs
  41ed13:	dec    esi
  41ed14:	adc    al,0x28
  41ed16:	leave  
  41ed17:	sar    BYTE PTR [ebx-0x2c],cl
  41ed1a:	jle    0x41ecb1
  41ed1c:	(bad)  
  41ed1d:	rcr    ebx,cl
  41ed1f:	cld    
  41ed20:	xlat   BYTE PTR ds:[ebx]
  41ed21:	aam    0x62
  41ed23:	es icebp 
  41ed25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed26:	mov    dl,ah
  41ed28:	aad    0xc1
  41ed2a:	xor    ebp,ecx
  41ed2c:	dec    BYTE PTR [ebx-0x2c]
  41ed2f:	loop   0x41ed6b
  41ed31:	or     eax,0x7cc5285c
  41ed36:	push   edi
  41ed37:	pop    ebx
  41ed38:	inc    ebp
  41ed39:	xor    edi,ebx
  41ed3b:	cmp    al,0x97
  41ed3d:	add    ecx,DWORD PTR [edi+0x33]
  41ed40:	sub    al,BYTE PTR [ebp+0x296e39c9]
  41ed46:	(bad)  
  41ed47:	fcmove st,st(0)
  41ed49:	pop    ecx
  41ed4a:	sbb    eax,0x50873b29
  41ed4f:	pop    eax
  41ed50:	or     DWORD PTR ds:0x1da3c0da,0xffffffc1
  41ed57:	shl    BYTE PTR [esi],1
  41ed59:	shl    BYTE PTR [ebp+0x46cd13d9],1
  41ed5f:	mov    al,ds:0x9f845cb4
  41ed64:	das    
  41ed65:	mov    dh,0x66
  41ed67:	das    
  41ed68:	xchg   ecx,eax
  41ed69:	mov    ah,0xfe
  41ed6b:	lods   al,BYTE PTR ds:[esi]
  41ed6c:	fwait
  41ed6d:	push   ebp
  41ed6e:	into   
  41ed6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed70:	addr16 mov esp,0x571fc1ef
  41ed76:	ss out 0x8,al
  41ed79:	pop    edx
  41ed7a:	mov    ecx,0x5d268f63
  41ed7f:	(bad)  
  41ed80:	jecxz  0x41ed0e
  41ed82:	in     al,dx
  41ed83:	jge    0x41ed30
  41ed85:	(bad)  
  41ed86:	(bad)  
  41ed87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed88:	aam    0x6f
  41ed8a:	mov    ds:0x71c62f1c,al
  41ed8f:	add    DWORD PTR [ecx],ebx
  41ed91:	(bad)  
  41ed93:	setno  dh
  41ed96:	dec    eax
  41ed97:	clc    
  41ed98:	fild   DWORD PTR [ebp+0x5a485a11]
  41ed9e:	jecxz  0x41edc7
  41eda0:	(bad)
  41eda3:	dec    edx
  41eda4:	sbb    ebp,esi
  41eda6:	xchg   esp,eax
  41eda7:	retf   0xde40
  41edaa:	push   0x51c421a9
  41edaf:	sub    al,0x80
  41edb1:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edb3:	daa    
  41edb4:	aad    0x9b
  41edb6:	(bad)  
  41edb7:	in     eax,dx
  41edb8:	ins    BYTE PTR es:[edi],dx
  41edb9:	push   edi
  41edba:	push   0x12
  41edbc:	stos   DWORD PTR es:[edi],eax
  41edbd:	test   DWORD PTR [ebp+eiz*4+0x36],0x1c8f79c0
  41edc5:	sub    al,0x5f
  41edc7:	and    ch,BYTE PTR [edx]
  41edc9:	mov    ah,0x74
  41edcb:	jl     0x41ed98
  41edcd:	jmp    0x630d886a
  41edd2:	cmp    eax,0x5677f9f4
  41edd7:	cmp    al,0x8
  41edd9:	xchg   edx,eax
  41edda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eddb:	push   ebp
  41eddc:	mov    ds:0xb20ecf9d,al
  41ede1:	mov    dl,0x27
  41ede3:	cmp    edx,DWORD PTR [ebx-0x7b]
  41ede6:	test   BYTE PTR [ebx-0x67],0x37
  41edea:	xchg   ecx,eax
  41edeb:	push   ss
  41edec:	pop    ebp
  41eded:	call   0x17e3:0x7b6c1f20
  41edf4:	pop    bx
  41edf6:	cmc    
  41edf7:	cmp    ch,0xf6
  41edfa:	call   0x56aa:0x6e2eb20f
  41ee01:	push   0xfffffff1
  41ee03:	loopne 0x41edd0
  41ee05:	push   0xffffffab
  41ee07:	jo     0x41edaa
  41ee09:	jl     0x41eda5
  41ee0b:	or     esi,DWORD PTR [ecx+0x66abd8c]
  41ee11:	ins    BYTE PTR es:[edi],dx
  41ee12:	and    cl,BYTE PTR [ebp-0x3a0cb5fc]
  41ee18:	mov    eax,0x75539198
  41ee1d:	outs   dx,DWORD PTR ds:[esi]
  41ee1e:	xchg   ecx,eax
  41ee1f:	in     eax,dx
  41ee20:	std    
  41ee21:	imul   esp,DWORD PTR ds:0xc0d6755b,0xfe3436be
  41ee2b:	jp     0x41ee92
  41ee2d:	ret    0xf5b
  41ee30:	and    al,0x76
  41ee32:	gs xchg ebp,eax
  41ee34:	sar    DWORD PTR [ebx+0x55f0a7be],1
  41ee3a:	xchg   edx,eax
  41ee3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee3c:	loopne 0x41ee67
  41ee3e:	ret    0x9422
  41ee41:	xchg   esp,eax
  41ee42:	fmul   DWORD PTR [ebx+edx*2]
  41ee45:	test   BYTE PTR [ecx+0x1a],cl
  41ee48:	les    esp,FWORD PTR [ecx+0x3d449cb2]
  41ee4e:	sbb    ch,bh
  41ee50:	and    dl,BYTE PTR [esi+eax*8-0x70]
  41ee54:	add    ebx,DWORD PTR [edx+0x69]
  41ee57:	jg     0x41ee02
  41ee59:	xchg   ebp,eax
  41ee5a:	sbb    BYTE PTR [ebx-0x1],bl
  41ee5d:	add    DWORD PTR [ebp+0x3b],ecx
  41ee60:	dec    ebx
  41ee61:	jne    0x41ee3b
  41ee63:	mov    ds:0x68cd78f3,al
  41ee68:	in     eax,0x85
  41ee6a:	aaa    
  41ee6b:	push   0x599ae521
  41ee70:	lea    ebx,[esi-0x6c64b4aa]
  41ee76:	jg     0xd3c7a1c2
  41ee7c:	pop    edi
  41ee7d:	push   es
  41ee7e:	xchg   esi,eax
  41ee7f:	aas    
  41ee80:	addr16 addr16 iret 
  41ee83:	outs   dx,DWORD PTR ds:[esi]
  41ee84:	xor    ah,ch
  41ee86:	in     eax,dx
  41ee87:	or     eax,DWORD PTR ds:0x55b71ba0
  41ee8d:	aas    
  41ee8e:	jo     0x41ee9e
  41ee90:	es into 
  41ee92:	pop    ds
  41ee93:	mov    ds:0xd017239f,eax
  41ee98:	jecxz  0x41eee1
  41ee9a:	call   0xf10e1fb9
  41ee9f:	mov    esi,0xc020f508
  41eea4:	sbb    BYTE PTR [eax+0x72],dh
  41eea7:	or     eax,0x77bc2183
  41eead:	sbb    DWORD PTR [edx],eax
  41eeaf:	in     eax,dx
  41eeb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eeb1:	pop    ebx
  41eeb2:	fild   QWORD PTR [ebp+0x7f8808d3]
  41eeb8:	mov    WORD PTR [eax],cs
  41eeba:	push   cs
  41eebb:	sub    al,0xac
  41eebd:	jne    0x41eef4
  41eebf:	fist   WORD PTR [eax+ecx*2]
  41eec2:	or     esi,eax
  41eec4:	ds pop edx
  41eec6:	mov    fs,WORD PTR [eax+0x77892dcd]
  41eecc:	loopne 0x41ef48
  41eece:	fisttp WORD PTR [ebp+0x1b36a698]
  41eed4:	mov    dh,0x6a
  41eed6:	fisubr DWORD PTR gs:[ebx+esi*2-0x5]
  41eedb:	lea    ebx,[edi+ebp*2-0x64c98cf5]
  41eee2:	fs (bad) 
  41eee4:	jmp    0xd01d:0xc4ea6f82
  41eeeb:	pop    edi
  41eeec:	xlat   BYTE PTR ds:[ebx]
  41eeed:	(bad)  
  41eeee:	mov    bl,0xea
  41eef0:	dec    eax
  41eef1:	mov    esp,0x5bd80957
  41eef6:	sahf   
  41eef7:	ds pop ds
  41eef9:	dec    edi
  41eefa:	int    0xc2
  41eefc:	cmc    
  41eefd:	adc    esp,esp
  41eeff:	jg     0x41eed5
  41ef01:	pop    es
  41ef02:	out    dx,eax
  41ef03:	pushf  
  41ef04:	push   esi
  41ef05:	xlat   BYTE PTR ds:[ebx]
  41ef06:	jl     0x41ee89
  41ef08:	je     0x41ef01
  41ef0a:	or     BYTE PTR [ecx+0x28],ch
  41ef0d:	in     al,0xe7
  41ef0f:	ret    0xb7ef
  41ef12:	leave  
  41ef13:	int3   
  41ef14:	popa   
  41ef15:	mov    ebp,0x2c1e037b
  41ef1a:	sbb    eax,0x317174a3
  41ef1f:	lahf   
  41ef20:	fs dec ebp
  41ef22:	stos   BYTE PTR es:[edi],al
  41ef23:	loope  0x41ef4b
  41ef25:	xor    DWORD PTR [eax-0x55],edi
  41ef28:	push   esi
  41ef29:	ret    
  41ef2a:	(bad)  
  41ef2c:	int3   
  41ef2d:	ins    DWORD PTR es:[edi],dx
  41ef2e:	leave  
  41ef2f:	pop    ebx
  41ef30:	mov    dl,0x1f
  41ef32:	mov    eax,ds:0xfc847229
  41ef37:	xor    cl,dh
  41ef39:	add    DWORD PTR [esi+0x65],0x8410dd57
  41ef40:	fcmovnu st,st(2)
  41ef42:	jmp    DWORD PTR [esi]
  41ef44:	mov    ecx,0xed264793
  41ef49:	addr16 lahf 
  41ef4b:	jo     0x41efb6
  41ef4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef4e:	call   0x734b:0x827028e5
  41ef55:	out    dx,eax
  41ef56:	pop    eax
  41ef57:	jne    0x41eeef
  41ef59:	mov    BYTE PTR [ebx+esi*2-0x9b1e04b],cl
  41ef60:	ret    0xcbf
  41ef63:	sbb    eax,0x53172778
  41ef68:	and    BYTE PTR [eax],dh
  41ef6a:	pop    es
  41ef6b:	(bad)  
  41ef6c:	(bad)  
  41ef6d:	scas   al,BYTE PTR es:[edi]
  41ef6e:	sbb    DWORD PTR [edx-0xf],0xa
  41ef72:	sub    eax,0x8bd15955
  41ef77:	cs xor eax,0xd10bce34
  41ef7d:	jl     0x41ef3c
  41ef7f:	addr16 aaa 
  41ef81:	stc    
  41ef82:	out    dx,al
  41ef83:	imul   esp,edx,0x2008e7f0
  41ef89:	xchg   ebx,eax
  41ef8a:	xchg   esi,eax
  41ef8b:	or     eax,0x46188edd
  41ef90:	fdivr  DWORD PTR [edx]
  41ef92:	fnsave [edx-0xe795209]
  41ef98:	adc    dh,0x41
  41ef9b:	sbb    edx,DWORD PTR [ebp+0x3]
  41ef9e:	mov    esp,es
  41efa0:	mov    cl,0x56
  41efa2:	inc    edx
  41efa3:	cli    
  41efa4:	jecxz  0x41efc1
  41efa6:	shl    DWORD PTR [ebx],1
  41efa8:	sbb    dh,0x9e
  41efab:	adc    DWORD PTR [edx],edx
  41efad:	loopne 0x41eff6
  41efaf:	shl    BYTE PTR [eax-0x1f5cc8bf],cl
  41efb5:	and    dh,dl
  41efb7:	adc    DWORD PTR [ecx+eax*1-0x68d187b6],edi
  41efbe:	pop    ebp
  41efbf:	add    al,0x99
  41efc1:	lea    ecx,[ebx+edi*8-0x27]
  41efc5:	inc    ebp
  41efc6:	adc    BYTE PTR [ebx+esi*8-0x2b],dh
  41efca:	jns    0x41f03e
  41efcc:	sahf   
  41efcd:	lock es mov bl,0x4e
  41efd1:	in     al,dx
  41efd2:	push   esi
  41efd3:	cmp    ebp,ebp
  41efd5:	cs fmul st,st(1)
  41efd8:	mov    al,0x64
  41efda:	pop    eax
  41efdb:	lea    ecx,[edi-0x73]
  41efde:	cmp    eax,0x8f8e0888
  41efe3:	or     al,0x31
  41efe5:	sbb    eax,DWORD PTR [edi]
  41efe7:	imul   edx,DWORD PTR [edx-0xc366424],0x6b
  41efee:	outs   dx,BYTE PTR ds:[esi]
  41efef:	mov    eax,ds:0x6b423630
  41eff4:	pop    edi
  41eff5:	add    ch,BYTE PTR [edx-0x2b44e01f]
  41effb:	std    
  41effc:	fdiv   QWORD PTR [eax-0x4dee15bf]
  41f002:	repnz gs retf 0x953d
  41f007:	add    al,0x7a
  41f009:	addr16 or al,0xae
  41f00c:	mov    WORD PTR ds:0xe842bf3f,ds
  41f012:	fxch   st(2)
  41f014:	aaa    
  41f015:	js     0x41f051
  41f017:	sub    DWORD PTR [ecx+esi*8-0x70077523],esp
  41f01e:	sbb    ebp,ebx
  41f020:	sbb    BYTE PTR [edx-0x7e01f53b],ch
  41f026:	sub    eax,0xd0b0f337
  41f02b:	hlt    
  41f02c:	js     0x41efb8
  41f02e:	xchg   edx,eax
  41f02f:	in     eax,dx
  41f030:	je     0x41f091
  41f032:	push   eax
  41f033:	adc    DWORD PTR [esi+0x57],0xb4111bf0
  41f03a:	aas    
  41f03b:	call   0x761a8590
  41f040:	mov    eax,ds:0x898ce709
  41f045:	adc    DWORD PTR [ebp+0x75e72153],edi
  41f04b:	push   eax
  41f04c:	push   ebp
  41f04d:	lods   eax,DWORD PTR ds:[esi]
  41f04e:	(bad)  
  41f04f:	cmp    edx,ebx
  41f051:	(bad)  
  41f052:	ins    DWORD PTR es:[edi],dx
  41f053:	repz das 
  41f055:	dec    ecx
  41f056:	and    edi,DWORD PTR [ebp-0xe03cae]
  41f05c:	ss or  bh,ah
  41f05f:	sub    eax,0xa2deffd5
  41f064:	cwde   
  41f065:	ficomp WORD PTR [edi+0x3fecf5cc]
  41f06b:	stos   DWORD PTR es:[edi],eax
  41f06c:	out    0x6a,al
  41f06e:	call   DWORD PTR [edx+esi*1]
  41f071:	jo     0x41f030
  41f073:	ins    DWORD PTR es:[edi],dx
  41f074:	mov    dh,0x64
  41f076:	or     DWORD PTR [eax],ebx
  41f078:	xor    bh,BYTE PTR [edx+0xc]
  41f07b:	pop    ebx
  41f07c:	outs   dx,BYTE PTR ds:[esi]
  41f07d:	daa    
  41f07e:	push   ds
  41f07f:	mov    esi,0xba6279a4
  41f084:	daa    
  41f085:	jl     0x41f0d4
  41f087:	xchg   ebp,eax
  41f088:	cmp    DWORD PTR [esi+0x4b],0xc83ea553
  41f08f:	xor    dh,bl
  41f091:	icebp  
  41f092:	(bad)  
  41f093:	mov    ch,0xfc
  41f095:	sbb    BYTE PTR [edx-0x7cfd94d4],cl
  41f09b:	into   
  41f09c:	mov    edi,0xa2d1e6d7
  41f0a1:	lock rcl BYTE PTR [edi],1
  41f0a4:	(bad)  
  41f0a5:	loope  0x41f114
  41f0a7:	adc    DWORD PTR [ecx+0x58],ebx
  41f0aa:	xor    dh,BYTE PTR [edx]
  41f0ac:	jmp    0x688d:0xe8885d3e
  41f0b3:	leave  
  41f0b4:	mov    eax,0xd62afdad
  41f0b9:	push   0x5e
  41f0bb:	mov    eax,0x23dffbc6
  41f0c0:	sbb    eax,0x422e2468
  41f0c5:	scas   eax,DWORD PTR es:[edi]
  41f0c6:	sbb    al,0x87
  41f0c8:	mov    esi,0x70aeb891
  41f0cd:	or     eax,0xf58c3635
  41f0d2:	push   edx
  41f0d3:	shl    BYTE PTR [edi+0x7],0x41
  41f0d7:	jg     0x41f09f
  41f0d9:	adc    dh,BYTE PTR [edx+0x2d]
  41f0dc:	popa   
  41f0dd:	mov    ch,cl
  41f0df:	(bad)  
  41f0e0:	icebp  
  41f0e1:	out    0xed,eax
  41f0e3:	leave  
  41f0e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0e5:	jmp    0x41f11a
  41f0e7:	dec    esi
  41f0e8:	adc    al,0xb4
  41f0ea:	jl     0x41f0a9
  41f0ec:	mov    ebx,0xfbd5058d
  41f0f1:	leave  
  41f0f2:	push   ebp
  41f0f3:	daa    
  41f0f4:	test   al,0xbb
  41f0f6:	fcmovb st,st(2)
  41f0f8:	cmp    ch,dl
  41f0fa:	div    BYTE PTR [ebx]
  41f0fc:	(bad)  
  41f0fd:	repnz add DWORD PTR [esp+eax*2+0x76],ecx
  41f102:	jnp    0x41f130
  41f104:	inc    ecx
  41f105:	out    0x57,al
  41f107:	aas    
  41f108:	test   eax,0xc116550a
  41f10d:	outs   dx,DWORD PTR ds:[esi]
  41f10e:	pop    edx
  41f10f:	push   0x3b
  41f111:	daa    
  41f112:	dec    esp
  41f113:	sbb    BYTE PTR [ecx+0x49c801b8],ch
  41f119:	cmp    bl,BYTE PTR [edi-0x66]
  41f11c:	dec    ebx
  41f11d:	and    al,0xa6
  41f11f:	mov    ebp,0x44b7d94a
  41f124:	outs   dx,BYTE PTR ds:[esi]
  41f125:	(bad)  
  41f126:	stos   DWORD PTR es:[edi],eax
  41f127:	adc    al,0xee
  41f129:	pusha  
  41f12a:	push   0xffffff85
  41f12c:	push   0x31d7b040
  41f131:	xor    BYTE PTR [eax+0x9],ah
  41f134:	mov    al,ds:0x57c1f421
  41f139:	fidivr DWORD PTR [eax-0x71f1c114]
  41f13f:	cwde   
  41f140:	call   0xd36f042a
  41f145:	in     al,dx
  41f146:	mov    ah,0x41
  41f148:	daa    
  41f149:	cmp    BYTE PTR [edx-0x1f],0xdd
  41f14d:	mov    bl,0xec
  41f14f:	test   DWORD PTR [ebp-0x3],eax
  41f152:	mov    dl,0xf4
  41f154:	ins    BYTE PTR es:[edi],dx
  41f155:	fs mov ebp,0x80e62f3a
  41f15b:	fnstcw WORD PTR [esi+0x4c]
  41f15e:	arpl   bp,dx
  41f160:	fld    QWORD PTR [ecx]
  41f162:	ins    BYTE PTR es:[edi],dx
  41f163:	mov    esp,0xa77d53f8
  41f168:	push   ss
  41f169:	mov    fs,WORD PTR [esi+0x48704a5c]
  41f16f:	cmp    bh,BYTE PTR [edi-0x4]
  41f172:	retf   0xe236
  41f175:	mov    dh,0x2b
  41f177:	int3   
  41f178:	sti    
  41f179:	aad    0xb8
  41f17b:	xor    BYTE PTR [ebp-0x3d],bh
  41f17e:	retf   
  41f17f:	lock jecxz 0x41f139
  41f182:	in     eax,dx
  41f183:	fnsave [eax]
  41f185:	or     ecx,ebp
  41f187:	push   ebx
  41f188:	int    0x52
  41f18a:	inc    edx
  41f18b:	cmp    BYTE PTR [ecx],dl
  41f18d:	lea    ebp,[edx-0xb]
  41f190:	jns    0x41f1c2
  41f192:	mov    bl,0x66
  41f194:	js     0x41f19f
  41f196:	mov    bh,BYTE PTR ds:0xdc28a912
  41f19c:	push   esi
  41f19d:	push   edi
  41f19e:	lahf   
  41f19f:	inc    ecx
  41f1a0:	add    eax,0x86ebb56
  41f1a5:	adc    DWORD PTR [ecx+0x40a4d550],eax
  41f1ab:	sar    DWORD PTR [edi],0xf4
  41f1ae:	es in  eax,0x5c
  41f1b1:	add    DWORD PTR [ecx+edi*2],ebx
  41f1b4:	test   DWORD PTR [eax-0x5f398737],ebx
  41f1ba:	bound  edi,QWORD PTR [ebp+0x73a7e7af]
  41f1c0:	push   ebp
  41f1c1:	mov    eax,0x142a5ad6
  41f1c6:	into   
  41f1c7:	lahf   
  41f1c8:	mov    gs,WORD PTR ss:[ebx-0x31]
  41f1cc:	pop    esp
  41f1cd:	xchg   esi,eax
  41f1ce:	and    ebx,DWORD PTR [edi]
  41f1d0:	std    
  41f1d1:	retf   0x8b5b
  41f1d4:	sbb    eax,0xe7b8ddd7
  41f1d9:	lea    edx,[eax-0x6c]
  41f1dc:	retf   
  41f1dd:	gs ins DWORD PTR es:[edi],dx
  41f1df:	test   cl,ch
  41f1e1:	jno    0x41f17a
  41f1e3:	sub    DWORD PTR [ebp+0x6a1b60e],eax
  41f1e9:	out    dx,eax
  41f1ea:	retf   0x6b6b
  41f1ed:	scas   eax,DWORD PTR es:[edi]
  41f1ee:	cmp    al,0x31
  41f1f0:	loop   0x41f177
  41f1f2:	pop    edx
  41f1f3:	dec    ebp
  41f1f4:	out    dx,eax
  41f1f5:	xlat   BYTE PTR ds:[ebx]
  41f1f6:	push   edi
  41f1f7:	xor    BYTE PTR [ebx-0x6aec7b6d],cl
  41f1fd:	xlat   BYTE PTR ds:[ebx]
  41f1fe:	mov    ch,BYTE PTR [eax]
  41f200:	iret   
  41f201:	mov    ebx,gs
  41f203:	xchg   ecx,eax
  41f204:	imul   ecx,DWORD PTR [esi+0x7f],0xffffff90
  41f208:	mov    ebx,0x916a1af8
  41f20d:	cmp    al,0x97
  41f20f:	mov    dh,0xb9
  41f211:	push   ss
  41f212:	dec    edx
  41f213:	inc    esi
  41f214:	cmp    al,0x3c
  41f216:	fucomip st,st(7)
  41f218:	sbb    dl,ah
  41f21a:	rcr    DWORD PTR [ecx],0xce
  41f21d:	or     al,0x3f
  41f21f:	lds    esp,FWORD PTR [ecx-0x17]
  41f222:	cld    
  41f223:	cmp    BYTE PTR [eax],al
  41f225:	inc    ecx
  41f226:	sbb    edx,DWORD PTR [eax-0x1c]
  41f229:	je     0x41f224
  41f22b:	ror    BYTE PTR [eax+0x15],cl
  41f22e:	sbb    eax,0x64ac709e
  41f233:	xor    edx,DWORD PTR [edx+ecx*8+0x5bfefbe2]
  41f23a:	push   ds
  41f23b:	sub    al,0xcd
  41f23d:	daa    
  41f23e:	pop    ds
  41f23f:	shufps xmm1,XMMWORD PTR [ecx+0x663fd7a9],0xc0
  41f247:	jge    0x41f1cb
  41f249:	add    eax,0xc9fd1571
  41f24e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f24f:	add    al,0xc8
  41f251:	pop    ecx
  41f252:	test   DWORD PTR [edx-0x75],ebp
  41f255:	sar    ebp,0x63
  41f258:	lods   al,BYTE PTR ds:[esi]
  41f259:	sti    
  41f25a:	jne    0x41f1f4
  41f25c:	pop    ss
  41f25d:	pop    edi
  41f25e:	mov    al,0x46
  41f260:	xchg   ebp,eax
  41f261:	js     0x41f237
  41f263:	lahf   
  41f264:	ror    edi,1
  41f266:	fisubr DWORD PTR [ecx+0x29d4c52c]
  41f26c:	and    BYTE PTR [ecx+0x3d07cb82],dh
  41f272:	xor    eax,0x89f36320
  41f277:	cdq    
  41f278:	sub    eax,0x59f77f9c
  41f27d:	pop    ecx
  41f27e:	add    esp,DWORD PTR [eax+0x1c0593f1]
  41f284:	jb     0x41f2b4
  41f286:	mov    edi,0x15ca668b
  41f28b:	sar    DWORD PTR [eax+ebp*1-0x24],cl
  41f28f:	pushf  
  41f290:	pop    ebx
  41f291:	mov    bl,0x24
  41f293:	enter  0xe317,0x59
  41f297:	xchg   edi,ecx
  41f299:	mov    cl,0x74
  41f29b:	in     al,dx
  41f29c:	mov    ecx,0x35f30b0c
  41f2a1:	pop    ss
  41f2a2:	dec    eax
  41f2a3:	cmp    al,0xbd
  41f2a5:	fstp   QWORD PTR [esi+0x365b4882]
  41f2ab:	mov    eax,0x8acf4a69
  41f2b0:	ja     0x41f2b7
  41f2b2:	pop    ds
  41f2b3:	dec    esp
  41f2b4:	jmp    0x4db1:0xcd2b0b66
  41f2bb:	lods   eax,DWORD PTR ds:[esi]
  41f2bc:	cmp    ah,bl
  41f2be:	stos   DWORD PTR es:[edi],eax
  41f2bf:	mov    edi,0x21d80ab2
  41f2c4:	shr    BYTE PTR [eax-0x23cd5e2d],1
  41f2ca:	mov    bh,0x4
  41f2cc:	(bad)
  41f2d0:	xor    DWORD PTR [edx],ecx
  41f2d2:	repnz call FWORD PTR [eax+ebx*8+0x7a]
  41f2d7:	mov    ecx,0x507cf012
  41f2dc:	and    BYTE PTR [esi],bl
  41f2de:	pop    edx
  41f2df:	lods   al,BYTE PTR ds:[esi]
  41f2e0:	pop    ss
  41f2e1:	aaa    
  41f2e2:	(bad)  
  41f2e4:	pop    esi
  41f2e5:	inc    edx
  41f2e6:	outs   dx,DWORD PTR ds:[esi]
  41f2e7:	cmp    DWORD PTR [eax-0x7a],ebp
  41f2ea:	mov    cl,0xdd
  41f2ec:	outs   dx,BYTE PTR ds:[esi]
  41f2ed:	sub    BYTE PTR [ebp-0x4c],bl
  41f2f0:	test   BYTE PTR [eax+eiz*1],cl
  41f2f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2f4:	outs   dx,BYTE PTR ds:[esi]
  41f2f5:	cdq    
  41f2f6:	mov    eax,ds:0xb583cd24
  41f2fb:	mov    ah,0x7a
  41f2fd:	push   cx
  41f2ff:	mov    al,0xc4
  41f301:	mov    esi,0xd1eb0b52
  41f306:	(bad)  
  41f307:	je     0x41f305
  41f309:	mov    edi,0x37b1062e
  41f30e:	(bad)  
  41f30f:	neg    ah
  41f311:	push   0x5d8dea1b
  41f316:	dec    ebp
  41f317:	pop    eax
  41f318:	dec    edi
  41f319:	mov    ds,WORD PTR [esi+0x7494c97f]
  41f31f:	imul   esi,DWORD PTR [edi],0x323ec320
  41f325:	fiadd  WORD PTR [ebx]
  41f327:	repnz pop edx
  41f329:	or     esi,DWORD PTR [edi]
  41f32b:	add    ecx,DWORD PTR [eax+ebx*8+0xd]
  41f32f:	lds    esi,FWORD PTR [edi]
  41f331:	push   0x4b
  41f333:	xor    ebp,ebp
  41f335:	sahf   
  41f336:	test   edi,eax
  41f338:	sbb    eax,0x98fac447
  41f33d:	fscale 
  41f33f:	mov    bl,0x5f
  41f341:	sub    bl,BYTE PTR [edi]
  41f343:	rcl    DWORD PTR [ecx-0x6a],cl
  41f346:	and    cl,al
  41f348:	sbb    ebx,eax
  41f34a:	hlt    
  41f34b:	aad    0x11
  41f34d:	mov    cs,WORD PTR [edi]
  41f34f:	mov    ecx,0x1f6b73a7
  41f354:	pop    ecx
  41f355:	push   eax
  41f356:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f357:	out    0x73,al
  41f359:	dec    esi
  41f35a:	xchg   edi,eax
  41f35b:	fdivrp st(1),st
  41f35d:	sub    esp,ebx
  41f35f:	loope  0x41f350
  41f361:	into   
  41f362:	mov    ch,BYTE PTR [edx]
  41f364:	sub    eax,0xae70fe03
  41f369:	and    DWORD PTR [edi],esp
  41f36b:	jg     0x41f36d
  41f36d:	pop    ebp
  41f36e:	sub    ebx,DWORD PTR [eax-0x7b]
  41f371:	cmp    ebx,DWORD PTR ds:0xc4987e77
  41f377:	std    
  41f378:	data16 and BYTE PTR [esi-0x7],dl
  41f37c:	mov    ah,0x0
  41f37e:	add    ah,al
  41f380:	sub    DWORD PTR [ecx+0x621dc235],ebp
  41f386:	xor    DWORD PTR [esi-0x76723c6d],esi
  41f38c:	cmc    
  41f38d:	mov    edi,0xcff04e6c
  41f392:	popf   
  41f393:	jp     0x41f346
  41f395:	add    al,0xc5
  41f397:	retf   0xf7f9
  41f39a:	add    al,0x38
  41f39c:	add    dl,BYTE PTR [edx+0x5f]
  41f39f:	and    esp,DWORD PTR [edi+0x31]
  41f3a2:	cmc    
  41f3a3:	lods   al,BYTE PTR ds:[esi]
  41f3a4:	mov    ch,0xf9
  41f3a6:	xchg   esp,eax
  41f3a7:	mov    al,0x14
  41f3a9:	test   BYTE PTR [ebx+0x42],al
  41f3ac:	ins    DWORD PTR es:[edi],dx
  41f3ad:	arpl   WORD PTR [edx],ax
  41f3af:	lods   eax,DWORD PTR ds:[esi]
  41f3b0:	sub    BYTE PTR [edi-0x71],0x90
  41f3b4:	pop    edx
  41f3b5:	pushf  
  41f3b6:	xchg   ebp,eax
  41f3b7:	mov    edx,0x575de29e
  41f3bc:	inc    ebp
  41f3bd:	(bad)  
  41f3be:	into   
  41f3bf:	mov    eax,esi
  41f3c1:	adc    eax,0x705115de
  41f3c6:	inc    edx
  41f3c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3c8:	push   0xc
  41f3ca:	clc    
  41f3cb:	ror    DWORD PTR [eax+0x4f],0xc9
  41f3cf:	sub    al,0x15
  41f3d1:	in     al,dx
  41f3d2:	jge    0x41f383
  41f3d4:	push   ds
  41f3d5:	adc    ebx,DWORD PTR [eax+eiz*8+0x7c212198]
  41f3dc:	or     esp,edi
  41f3de:	inc    edx
  41f3df:	and    eax,0x1f5ee3b4
  41f3e4:	aaa    
  41f3e5:	pop    ebp
  41f3e6:	stos   BYTE PTR es:[edi],al
  41f3e7:	mov    bl,BYTE PTR [ecx-0x67fe20f3]
  41f3ed:	inc    esp
  41f3ee:	hlt    
  41f3ef:	ss sti 
  41f3f1:	imul   edx,DWORD PTR [ebx+0x35bbae7a],0x7e71c906
  41f3fb:	pop    ecx
  41f3fc:	push   0x60
  41f3fe:	adc    al,0x91
  41f400:	mov    ds:0xb4bcc195,al
  41f405:	xchg   esp,eax
  41f406:	inc    esp
  41f407:	fs push 0x56b107c7
  41f40d:	mov    ds:0xa63e0f96,al
  41f412:	and    al,0x24
  41f414:	sti    
  41f415:	jo     0x41f40c
  41f417:	mov    ds,edi
  41f419:	dec    ecx
  41f41a:	or     esp,0xe65202ca
  41f420:	lahf   
  41f421:	push   cs
  41f422:	xchg   BYTE PTR [ebp-0x65d2a61c],dh
  41f428:	lods   al,BYTE PTR ds:[esi]
  41f429:	mov    esi,0x7e95857e
  41f42e:	xor    ch,BYTE PTR [ebp-0x70]
  41f431:	or     eax,0x6a98089c
  41f436:	dec    DWORD PTR [ebp-0x8763794]
  41f43c:	pop    ss
  41f43d:	mov    esi,0xd61e0be9
  41f442:	pop    eax
  41f443:	add    BYTE PTR [edi],dl
  41f445:	js     0x41f42e
  41f447:	xor    bh,BYTE PTR ds:0xecf295d7
  41f44d:	lods   eax,DWORD PTR ds:[esi]
  41f44e:	jge    0x41f46c
  41f450:	fwait
  41f451:	xchg   esp,eax
  41f452:	xchg   ebx,eax
  41f453:	mov    edx,0x5e0b9176
  41f458:	sub    eax,0x1e82ada6
  41f45d:	inc    ebp
  41f45e:	push   0xfffffff0
  41f460:	mov    dl,0xca
  41f462:	std    
  41f463:	add    edi,DWORD PTR [edx]
  41f465:	xor    eax,DWORD PTR [esi]
  41f467:	fs (bad) 
  41f469:	pop    ds
  41f46a:	mov    eax,0x7d2a94ad
  41f46f:	inc    ecx
  41f470:	stos   BYTE PTR es:[edi],al
  41f471:	sub    al,BYTE PTR cs:[edx-0x77]
  41f475:	xor    eax,0x90223877
  41f47a:	fsub   QWORD PTR [esi-0x5b]
  41f47d:	push   ebp
  41f47e:	adc    DWORD PTR [edi+ebp*1+0x7e],edi
  41f482:	or     cl,BYTE PTR [ebp-0x31]
  41f485:	xchg   BYTE PTR [esi+0x6e],ch
  41f488:	jp     0x41f44d
  41f48a:	or     edx,DWORD PTR [edi-0x22]
  41f48d:	xor    eax,0x298bea6
  41f492:	jg     0x41f42c
  41f494:	outs   dx,DWORD PTR ds:[esi]
  41f495:	mov    DWORD PTR [ebp+0x1bfa5411],ecx
  41f49b:	ss and al,0xf4
  41f49e:	ficom  WORD PTR [eax-0x3c9fdc9]
  41f4a4:	and    BYTE PTR [ecx+0x400fc72d],0xfc
  41f4ab:	and    DWORD PTR ds:0x514b4ffa,esp
  41f4b1:	int3   
  41f4b2:	ja     0x41f4bb
  41f4b4:	das    
  41f4b5:	mov    edx,0xecf653fb
  41f4ba:	arpl   WORD PTR ds:0xafa8b4e1,sp
  41f4c0:	pop    ecx
  41f4c1:	mov    al,ds:0xeb3395c8
  41f4c6:	jp     0x41f4c7
  41f4c8:	addr16 mov dl,0xd4
  41f4cb:	imul   esp,DWORD PTR [ecx+0x4aefed54],0xfffffff6
  41f4d2:	push   0xffffff8a
  41f4d4:	ret    
  41f4d5:	dec    ebp
  41f4d6:	je     0x41f523
  41f4d8:	loope  0x41f551
  41f4da:	xchg   ebp,eax
  41f4db:	add    eax,0xb69f6dc2
  41f4e0:	ins    BYTE PTR es:[edi],dx
  41f4e1:	push   ss
  41f4e2:	fidivr DWORD PTR [edi+0x1b720af2]
  41f4e8:	int3   
  41f4e9:	lock ror edx,1
  41f4ec:	pop    ss
  41f4ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4ee:	sub    eax,0xac21c6aa
  41f4f3:	gs mov esi,0x69234c62
  41f4f9:	mov    bh,0x66
  41f4fb:	pop    esp
  41f4fc:	adc    cl,bl
  41f4fe:	js     0x41f4ff
  41f500:	test   BYTE PTR [eax-0x64],al
  41f503:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f504:	retf   0xd361
  41f507:	push   cs
  41f508:	inc    esi
  41f509:	adc    dh,BYTE PTR [ebx+ebp*1-0x3d0bd5c2]
  41f510:	or     ebp,edx
  41f512:	fisubr WORD PTR [ebp-0x35]
  41f515:	fdiv   st,st(1)
  41f517:	cdq    
  41f518:	inc    ebp
  41f519:	xor    esi,DWORD PTR [ebp+0x10746c09]
  41f51f:	and    al,0x79
  41f521:	dec    esp
  41f522:	jne    0x41f527
  41f524:	jge    0x41f5a2
  41f526:	jp     0x41f4b5
  41f528:	stos   DWORD PTR es:[edi],eax
  41f529:	je     0x41f4f3
  41f52b:	iret   
  41f52c:	fst    DWORD PTR [edx+0x74]
  41f52f:	push   0xffffffa6
  41f531:	jg     0x41f5a8
  41f533:	test   al,0xdc
  41f535:	sahf   
  41f536:	mov    edx,0x6b51a17b
  41f53b:	scas   eax,DWORD PTR es:[edi]
  41f53c:	pop    es
  41f53d:	inc    esi
  41f53e:	xchg   edi,eax
  41f53f:	ret    
  41f540:	xor    ebx,edx
  41f542:	mov    dl,0xf1
  41f544:	lods   al,BYTE PTR ds:[esi]
  41f545:	jbe    0x41f57b
  41f547:	shrd   DWORD PTR [esp+ebx*4],eax,0x73
  41f54c:	jne    0x41f579
  41f54e:	add    al,0xbb
  41f550:	pop    esp
  41f551:	fstp   QWORD PTR [ecx+0x3b]
  41f554:	and    al,BYTE PTR [esi]
  41f556:	call   0x19c0:0x89fe6c1f
  41f55d:	jae    0x41f4f8
  41f55f:	add    al,0x9c
  41f561:	sti    
  41f562:	sahf   
  41f563:	into   
  41f564:	jge    0x41f558
  41f566:	mov    ds:0xb6852b72,eax
  41f56b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f56c:	sbb    al,bl
  41f56e:	mov    edi,0xae2fd504
  41f573:	test   eax,0xde776104
  41f578:	xor    eax,0x3c351de8
  41f57d:	imul   esi,DWORD PTR [edi+0xfa63fb0],0xa4fa427
  41f587:	inc    esp
  41f588:	aaa    
  41f589:	hlt    
  41f58a:	xor    esp,DWORD PTR [edi+0x74]
  41f58d:	fnsave [ebp+0x77]
  41f590:	or     ebx,ebp
  41f592:	mov    ah,0x28
  41f594:	jmp    0x41f576
  41f596:	xor    eax,0x2b95068e
  41f59b:	jnp    0x41f5ac
  41f59d:	or     bh,BYTE PTR [edi]
  41f59f:	mov    eax,ds:0xf96ad3b5
  41f5a4:	cmp    DWORD PTR [ecx-0xf],edi
  41f5a7:	pop    edx
  41f5a8:	nop
  41f5a9:	dec    ebp
  41f5aa:	jns    0x41f54a
  41f5ac:	push   ebx
  41f5ad:	pusha  
  41f5ae:	aam    0x91
  41f5b0:	or     eax,0xe07d0b31
  41f5b5:	imul   edi,DWORD PTR [esi-0x31],0xffcdc67d
  41f5bc:	in     al,0x7f
  41f5be:	(bad)  
  41f5c1:	or     BYTE PTR [esi],0x62
  41f5c4:	fadd   st,st(6)
  41f5c6:	pop    edx
  41f5c7:	cwde   
  41f5c8:	sub    DWORD PTR [esi+eiz*1-0x2d9942b1],ecx
  41f5cf:	push   esp
  41f5d0:	adc    eax,0x5874fd44
  41f5d5:	in     eax,dx
  41f5d6:	daa    
  41f5d7:	push   ecx
  41f5d8:	push   esi
  41f5d9:	sti    
  41f5da:	cwde   
  41f5db:	(bad)  
  41f5dc:	das    
  41f5dd:	out    dx,al
  41f5de:	ins    BYTE PTR es:[edi],dx
  41f5df:	(bad)  
  41f5e0:	int3   
  41f5e1:	mov    esi,0x263d42b6
  41f5e6:	pushf  
  41f5e7:	cld    
  41f5e8:	jne    0x41f5d7
  41f5ea:	hlt    
  41f5eb:	fimul  DWORD PTR [esi-0x36]
  41f5ee:	out    dx,eax
  41f5ef:	xchg   ecx,eax
  41f5f0:	loop   0x41f65c
  41f5f2:	aas    
  41f5f3:	sub    BYTE PTR [eax+0x21f8f042],bl
  41f5f9:	pop    ebx
  41f5fa:	xor    dh,ch
  41f5fc:	sbb    ecx,DWORD PTR [edi-0x23c15d42]
  41f602:	daa    
  41f603:	cmp    al,0x29
  41f605:	jne    0x41f5c1
  41f607:	inc    edi
  41f608:	sub    edx,DWORD PTR [ebx]
  41f60a:	mov    ah,0xb3
  41f60c:	int3   
  41f60d:	mov    eax,0x6668f3e6
  41f612:	inc    esi
  41f613:	pop    ds
  41f614:	(bad)  
  41f615:	inc    ebx
  41f616:	pop    ss
  41f617:	or     dl,BYTE PTR [eax+0x24]
  41f61a:	add    DWORD PTR [ebx+eax*4+0xb],edi
  41f61e:	or     BYTE PTR [eax+esi*1-0x674079c9],ah
  41f625:	lds    eax,FWORD PTR [edx+0x1a1fe3af]
  41f62b:	push   ecx
  41f62c:	sar    dh,1
  41f62e:	push   esp
  41f62f:	pop    esi
  41f630:	aam    0x2
  41f632:	ds inc edi
  41f634:	out    dx,eax
  41f635:	(bad)
  41f639:	cmc    
  41f63a:	xchg   DWORD PTR [esi+esi*4-0x8],ecx
  41f63e:	mov    dh,0xd4
  41f640:	ds push cs
  41f642:	and    BYTE PTR [ebx+ebx*2],0x86
  41f646:	push   edx
  41f647:	loop   0x41f5d7
  41f649:	fild   WORD PTR [eax]
  41f64b:	scas   al,BYTE PTR es:[edi]
  41f64c:	inc    eax
  41f64d:	jns    0x41f633
  41f64f:	pop    ebx
  41f650:	jbe    0x41f6ad
  41f652:	iret   
  41f653:	dec    edi
  41f654:	push   ds
  41f655:	add    al,0x29
  41f657:	retf   
  41f658:	pop    ebx
  41f659:	data16 or BYTE PTR [eax],al
  41f65c:	jl     0x41f675
  41f65e:	cmp    al,0xff
  41f660:	pop    edx
  41f661:	inc    esi
  41f662:	sbb    al,0xcc
  41f664:	and    ecx,DWORD PTR [ebp+0xa860351]
  41f66a:	clc    
  41f66b:	inc    edx
  41f66c:	mov    bl,0x6a
  41f66e:	adc    edx,DWORD PTR [eax]
  41f670:	ret    
  41f671:	sub    BYTE PTR [ecx+edi*4-0xb7fe3ad],al
  41f678:	or     BYTE PTR [ecx],bl
  41f67a:	mov    bh,0x7
  41f67c:	stos   BYTE PTR es:[edi],al
  41f67d:	push   0xc4fb68ca
  41f682:	repz sub DWORD PTR [esi-0x43488748],esp
  41f689:	pop    esp
  41f68a:	clc    
  41f68b:	dec    eax
  41f68c:	inc    ebx
  41f68d:	gs or  al,0xf2
  41f690:	or     al,0x80
  41f692:	js     0x41f67d
  41f694:	xor    esi,ebx
  41f696:	push   0xffffff98
  41f698:	xchg   BYTE PTR [edx-0x6e],dl
  41f69b:	fadd   QWORD PTR [ecx]
  41f69d:	ss and al,0x3c
  41f6a0:	enter  0x267e,0x36
  41f6a4:	fist   DWORD PTR [edx]
  41f6a6:	add    WORD PTR [edx+ebp*1],bx
  41f6aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6ab:	jg     0x41f632
  41f6ad:	es mov bl,bl
  41f6b0:	outs   dx,DWORD PTR ds:[esi]
  41f6b1:	jb     0x41f6b5
  41f6b3:	das    
  41f6b4:	retf   
  41f6b5:	outs   dx,BYTE PTR ds:[esi]
  41f6b6:	rcr    ch,cl
  41f6b8:	inc    edi
  41f6b9:	(bad)  
  41f6ba:	mov    ch,0x10
  41f6bc:	(bad)  
  41f6bd:	fsubr  DWORD PTR [ebx-0x36a343d6]
  41f6c3:	adc    al,0xa3
  41f6c5:	popf   
  41f6c6:	mov    al,0x66
  41f6c8:	inc    eax
  41f6c9:	ret    
  41f6ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6cb:	cmp    ebx,DWORD PTR [ebx+0x4c]
  41f6ce:	xor    ebp,DWORD PTR [edx+0x8]
  41f6d1:	in     ax,0x6c
  41f6d4:	and    BYTE PTR [ecx],cl
  41f6d6:	in     al,0xc0
  41f6d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6d9:	mov    bh,0x26
  41f6db:	mov    ebx,DWORD PTR [eax+0x44]
  41f6de:	iret   
  41f6df:	sub    ebx,edi
  41f6e1:	sbb    al,0x7c
  41f6e3:	mov    esi,0x16f2948c
  41f6e8:	mov    DWORD PTR [ebx+0x78ec500f],0xeab04ccc
  41f6f2:	cmp    ebp,ebp
  41f6f4:	pop    edi
  41f6f5:	(bad)  
  41f6f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6f7:	mov    ds:0x2db5ca81,al
  41f6fc:	push   esi
  41f6fd:	jmp    0xa96f8551
  41f702:	in     al,dx
  41f703:	sahf   
  41f704:	aaa    
  41f705:	dec    ecx
  41f706:	and    edi,DWORD PTR [ebx-0x2c]
  41f709:	sub    DWORD PTR [edx],ebp
  41f70b:	std    
  41f70c:	xor    eax,DWORD PTR [esi-0x39]
  41f70f:	mov    cl,0x81
  41f711:	stos   BYTE PTR es:[edi],al
  41f712:	cld    
  41f713:	jns    0x41f6b0
  41f715:	dec    esi
  41f716:	icebp  
  41f717:	jmp    0xa49b:0x36ba0f05
  41f71e:	xor    ch,dh
  41f720:	add    eax,0xaf73ef7e
  41f725:	sub    bh,BYTE PTR [edi+0x33bfa2cd]
  41f72b:	dec    edx
  41f72c:	in     al,0x72
  41f72e:	gs mov ch,0x21
  41f731:	icebp  
  41f732:	ins    BYTE PTR es:[edi],dx
  41f733:	cmp    BYTE PTR [eax],dl
  41f735:	cli    
  41f736:	ret    
  41f737:	sbb    dh,bh
  41f739:	gs test esi,0x378fdb48
  41f740:	pop    ebp
  41f741:	call   0x36f6ac5
  41f746:	out    dx,eax
  41f747:	and    esp,DWORD PTR [edi]
  41f749:	pop    DWORD PTR [ebp+0x1]
  41f74c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f74d:	mov    al,0x90
  41f74f:	sub    BYTE PTR [esi],dl
  41f751:	inc    edx
  41f752:	mov    eax,0x56dddb50
  41f757:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f758:	ret    0xc430
  41f75b:	mov    dl,BYTE PTR [ecx-0x1ff227d2]
  41f761:	ret    
  41f762:	sbb    eax,0xa0de45c9
  41f767:	pop    esp
  41f768:	jae    0x41f7bb
  41f76a:	gs test al,0xf2
  41f76d:	dec    edi
  41f76e:	sbb    al,0x1e
  41f770:	add    eax,0x90ec05d7
  41f775:	and    al,0xaa
  41f777:	(bad)  [edi+0x1e]
  41f77a:	icebp  
  41f77b:	or     DWORD PTR [ecx+0x63],edi
  41f77e:	out    0xfb,al
  41f780:	sub    eax,0xb1ef8dc1
  41f785:	in     eax,0x29
  41f787:	std    
  41f788:	into   
  41f789:	mov    edi,0xcab1270f
  41f78e:	icebp  
  41f78f:	sub    esi,ebp
  41f791:	data16 clc 
  41f793:	push   0xd1dce300
  41f798:	or     ah,BYTE PTR [esi+eiz*2-0x64]
  41f79c:	nop
  41f79d:	sbb    bh,dl
  41f79f:	pop    ebp
  41f7a0:	js     0x41f72c
  41f7a2:	ins    BYTE PTR es:[edi],dx
  41f7a3:	add    DWORD PTR [ebp+0x21e2227c],edi
  41f7a9:	inc    ebp
  41f7aa:	vmwrite edi,ecx
  41f7ad:	or     BYTE PTR [esi+edi*8-0x7a],dh
  41f7b1:	or     ah,dh
  41f7b3:	cmp    al,0x43
  41f7b5:	add    eax,0xd528d6c6
  41f7ba:	dec    eax
  41f7bb:	pop    eax
  41f7bc:	xor    al,0xb4
  41f7be:	daa    
  41f7bf:	es mov edi,0x652f5878
  41f7c5:	int3   
  41f7c6:	xchg   edx,eax
  41f7c7:	fxam   
  41f7c9:	xor    DWORD PTR [ebx-0x13e3b167],edx
  41f7cf:	ins    BYTE PTR es:[edi],dx
  41f7d0:	jg     0x41f79a
  41f7d2:	and    al,0x94
  41f7d4:	dec    esi
  41f7d5:	push   es
  41f7d6:	popf   
  41f7d7:	push   es
  41f7d8:	enter  0xb629,0xd3
  41f7dc:	repz lea esi,[eax+0x40d42f22]
  41f7e3:	sub    bl,BYTE PTR fs:[bx+di]
  41f7e7:	nop
  41f7e8:	popf   
  41f7e9:	adc    BYTE PTR [edx],al
  41f7eb:	mov    gs,WORD PTR [ebp+0x6b]
  41f7ee:	iret   
  41f7ef:	retf   
  41f7f0:	jns    0x41f86c
  41f7f2:	xor    cl,BYTE PTR [ecx]
  41f7f4:	mov    ch,0x3e
  41f7f6:	in     eax,0x5
  41f7f8:	inc    esi
  41f7f9:	push   esp
  41f7fa:	out    0xd6,al
  41f7fc:	nop
  41f7fd:	clc    
  41f7fe:	adc    edx,DWORD PTR [edi+0x2a]
  41f801:	adc    al,cl
  41f803:	shr    bh,cl
  41f805:	out    dx,al
  41f806:	aas    
  41f807:	sub    al,0xab
  41f809:	outs   dx,DWORD PTR ds:[esi]
  41f80a:	and    BYTE PTR [edx+0x53],bl
  41f80d:	jle    0x41f84f
  41f80f:	aam    0x2c
  41f811:	lock repnz xor edx,DWORD PTR ds:[ebx+0x1b6ed4fe]
  41f81a:	sbb    al,0xad
  41f81c:	outs   dx,BYTE PTR ds:[esi]
  41f81d:	push   edx
  41f81e:	inc    ebx
  41f81f:	or     al,0x85
  41f821:	retf   
  41f822:	inc    ecx
  41f823:	push   ss
  41f824:	ins    BYTE PTR es:[edi],dx
  41f825:	mov    edi,0x24d235e2
  41f82a:	out    0x86,al
  41f82c:	out    0xd3,eax
  41f82e:	jae    0x41f886
  41f830:	out    0x70,al
  41f832:	mov    ah,0x15
  41f834:	sub    ch,BYTE PTR [ebp+eax*8-0x36c5f9aa]
  41f83b:	push   ecx
  41f83c:	ins    DWORD PTR es:[edi],dx
  41f83d:	xor    BYTE PTR [edx],dh
  41f83f:	les    esi,FWORD PTR [ebp-0x5fd67a1e]
  41f845:	ds dec ecx
  41f847:	jl     0x41f877
  41f849:	repnz cmc 
  41f84b:	mov    ds:0x8c9a5a7c,al
  41f850:	cli    
  41f851:	and    ecx,DWORD PTR [edx*4-0x17d1d406]
  41f858:	add    DWORD PTR [edi+ecx*2+0x7b],0xffffffe5
  41f85d:	dec    edi
  41f85e:	xor    al,0xc9
  41f860:	inc    eax
  41f861:	xchg   esi,eax
  41f862:	push   0xf0e6f90d
  41f867:	lods   eax,DWORD PTR ds:[esi]
  41f868:	jno    0x41f8b5
  41f86a:	adc    BYTE PTR [ecx],ch
  41f86c:	repnz inc ebp
  41f86e:	push   eax
  41f86f:	scas   eax,DWORD PTR es:[edi]
  41f870:	sub    al,BYTE PTR ds:0x5cc88f0f
  41f876:	jbe    0x41f896
  41f878:	mov    cl,0x4d
  41f87a:	xchg   esp,eax
  41f87b:	sub    eax,0xc0af8041
  41f880:	call   0x682f8a1d
  41f885:	push   eax
  41f886:	jmp    0x1f80:0xacfac8fc
  41f88d:	cmc    
  41f88e:	fwait
  41f88f:	out    dx,al
  41f890:	push   edx
  41f891:	pop    es
  41f892:	arpl   dx,dx
  41f894:	fcom   DWORD PTR [edx+edx*2-0x59]
  41f898:	(bad)  [edi-0x381851a]
  41f89e:	mov    ebx,0xf563fd17
  41f8a3:	cli    
  41f8a4:	inc    edi
  41f8a5:	cmp    DWORD PTR [ecx+0x1e7ee521],0x8b55dd56
  41f8af:	and    al,0x12
  41f8b1:	lahf   
  41f8b2:	cwde   
  41f8b3:	mov    ah,0x51
  41f8b5:	repnz jmp 0x9437:0x1d863629
  41f8bd:	inc    esp
  41f8be:	push   ebp
  41f8bf:	gs jl  0x41f84e
  41f8c2:	jb     0x41f934
  41f8c4:	mov    edi,0x9d04976c
  41f8c9:	out    0x9f,eax
  41f8cb:	aad    0x57
  41f8cd:	mov    ah,0x3
  41f8cf:	fistp  DWORD PTR [eax]
  41f8d1:	add    esp,edi
  41f8d3:	adc    BYTE PTR [eax-0x433aa2b6],dh
  41f8d9:	sub    DWORD PTR [ebx+0x1b1e5530],edi
  41f8df:	arpl   WORD PTR ds:0x29cd151,bx
  41f8e5:	and    al,0xf5
  41f8e7:	popf   
  41f8e8:	pop    edi
  41f8e9:	mov    ecx,0x4fe24c99
  41f8ee:	daa    
  41f8ef:	cld    
  41f8f0:	sub    edx,esp
  41f8f2:	sub    eax,DWORD PTR [ebx+0xd]
  41f8f5:	mov    ecx,edi
  41f8f7:	test   eax,0x8a38b1c2
  41f8fc:	ret    0x265c
  41f8ff:	fst    st(0)
  41f901:	jo     0x41f909
  41f903:	sub    ebx,DWORD PTR [esi+ebx*2-0x37cddb94]
  41f90a:	rcl    esp,cl
  41f90c:	outs   dx,BYTE PTR ds:[esi]
  41f90d:	ins    BYTE PTR es:[edi],dx
  41f90e:	bswap  edi
  41f910:	popf   
  41f911:	push   0xae9b8c6c
  41f916:	and    ebx,edi
  41f918:	cmp    ecx,DWORD PTR [edx+0x3ab2fa0c]
  41f91e:	outs   dx,BYTE PTR ds:[esi]
  41f91f:	and    DWORD PTR [eax+edi*8],ebx
  41f922:	(bad)  
  41f923:	(bad)  
  41f924:	(bad)  
  41f925:	call   0x8df6:0x9f408f2e
  41f92c:	sub    al,0xe8
  41f92e:	test   DWORD PTR [ebx],eax
  41f930:	rcl    BYTE PTR [esi-0x30],cl
  41f933:	pop    edx
  41f934:	cwde   
  41f935:	xchg   esp,eax
  41f936:	or     DWORD PTR [edx],esp
  41f938:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f939:	jmp    0x41f9ad
  41f93b:	test   DWORD PTR [ebx-0x69c26aa6],esp
  41f941:	jle    0x41f98e
  41f943:	push   edi
  41f944:	adc    BYTE PTR [edx],bh
  41f946:	clc    
  41f947:	adc    eax,0x99d2b904
  41f94c:	clc    
  41f94d:	xor    ecx,DWORD PTR [eax-0x68]
  41f950:	call   0x7f4a:0xba5c4aee
  41f957:	cld    
  41f958:	hlt    
  41f959:	imul   edi,DWORD PTR [eax-0x599e86c5],0x7ab6de85
  41f963:	dec    ecx
  41f964:	jns    0x41f93c
  41f966:	xchg   esi,eax
  41f967:	sbb    bl,ah
  41f969:	push   eax
  41f96a:	jb     0x41f939
  41f96c:	pop    esp
  41f96d:	dec    edx
  41f96e:	inc    edx
  41f96f:	jge    0x41f991
  41f971:	(bad)  
  41f972:	dec    esi
  41f973:	dec    ebx
  41f974:	cli    
  41f975:	lock pop edx
  41f977:	add    BYTE PTR ds:0x2df89f1c,0xca
  41f97e:	mov    ebx,0x931e6da0
  41f983:	int    0x4e
  41f985:	leave  
  41f986:	jae    0x41f94c
  41f988:	mov    DWORD PTR [edi+edi*1+0x45],ecx
  41f98c:	mov    esp,DWORD PTR [ecx-0x6b1c4e3a]
  41f992:	sahf   
  41f993:	shl    DWORD PTR [edx-0x80],1
  41f996:	dec    eax
  41f997:	jg     0x41f9d4
  41f999:	xchg   edi,esp
  41f99b:	dec    ebp
  41f99c:	add    BYTE PTR [eax-0x136c5d8b],ah
  41f9a2:	jmp    FWORD PTR [edi+0xf]
  41f9a5:	and    eax,0x8fd831dc
  41f9aa:	movlps xmm0,QWORD PTR [ecx+0x2ae5d088]
  41f9b1:	sub    eax,0xb6409aaa
  41f9b6:	dec    edx
  41f9b7:	adc    DWORD PTR [ebp-0x84391ad],esp
  41f9bd:	mov    cl,0x21
  41f9bf:	mov    DWORD PTR [ebx],ebp
  41f9c1:	cmp    ebp,ecx
  41f9c3:	out    0xbb,al
  41f9c5:	mov    WORD PTR [edx+0x4ecd27c5],es
  41f9cb:	adc    bh,BYTE PTR [ecx+0x37]
  41f9ce:	dec    ebp
  41f9cf:	repz hlt 
  41f9d1:	xor    esi,DWORD PTR [ecx-0x7843f7cc]
  41f9d7:	cmc    
  41f9d8:	sahf   
  41f9d9:	cmp    al,0x84
  41f9db:	mov    ecx,0x2a145b2a
  41f9e0:	mov    ?,edi
  41f9e2:	ins    DWORD PTR es:[edi],dx
  41f9e3:	lock mov ebp,0xd8f1f69b
  41f9e9:	fsub   QWORD PTR [ebp+0x40a6f07f]
  41f9ef:	ret    0x72c9
  41f9f2:	je     0x41fa4a
  41f9f4:	sbb    DWORD PTR [edi],eax
  41f9f6:	imul   ebx,DWORD PTR [ebx-0x1d],0xd926d94
  41f9fd:	pusha  
  41f9fe:	mov    ebx,0x1bf6732d
  41fa03:	test   BYTE PTR [eax],bh
  41fa05:	out    dx,al
  41fa06:	mov    eax,0xc1f6642a
  41fa0b:	in     eax,0xec
  41fa0d:	jl     0x41f9d1
  41fa0f:	xor    edx,DWORD PTR [edx]
  41fa11:	lods   eax,DWORD PTR ds:[esi]
  41fa12:	out    0xb2,eax
  41fa14:	mov    ebx,0x9a3b2898
  41fa19:	daa    
  41fa1a:	and    eax,0xb21bb8df
  41fa1f:	popa   
  41fa20:	daa    
  41fa21:	ror    BYTE PTR [esi],1
  41fa23:	xlat   BYTE PTR ds:[ebx]
  41fa24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa25:	ins    DWORD PTR es:[edi],dx
  41fa26:	rep stos BYTE PTR es:[edi],al
  41fa28:	add    DWORD PTR [ebp+0x54],ebp
  41fa2b:	sahf   
  41fa2c:	pop    esi
  41fa2d:	dec    ecx
  41fa2e:	jg     0x41faaf
  41fa30:	(bad)  
  41fa31:	test   al,0xe5
  41fa33:	data16 sti 
  41fa35:	ins    DWORD PTR es:[edi],dx
  41fa36:	and    BYTE PTR [edx+0x7ad23d30],cl
  41fa3c:	dec    edx
  41fa3d:	sbb    al,ch
  41fa3f:	jnp    0x41f9e2
  41fa41:	pushf  
  41fa42:	xlat   BYTE PTR ds:[ebx]
  41fa43:	arpl   cx,dx
  41fa45:	imul   ecx,DWORD PTR [edx],0xffffffc8
  41fa48:	frstor [ebp-0x52]
  41fa4b:	loop   0x41fa66
  41fa4d:	sub    BYTE PTR [ecx+ebx*1-0x7c],dl
  41fa51:	jl     0x41fabc
  41fa53:	and    DWORD PTR ds:0x34d2cafc,edi
  41fa59:	push   ebx
  41fa5a:	pop    es
  41fa5b:	in     eax,0xee
  41fa5d:	xchg   esp,eax
  41fa5e:	dec    ecx
  41fa5f:	cmp    cl,BYTE PTR [edx+0x5c]
  41fa62:	inc    eax
  41fa63:	add    dh,BYTE PTR [ebp-0xe]
  41fa66:	shl    DWORD PTR [edi-0x73],cl
  41fa69:	test   eax,0xf01ed64c
  41fa6f:	push   esp
  41fa70:	into   
  41fa71:	es sbb eax,0x586a222c
  41fa77:	push   0x7e
  41fa79:	or     BYTE PTR [ebx+0x3caf3fe3],0x92
  41fa80:	fcomp  DWORD PTR [ecx+0x3ce142d7]
  41fa86:	ret    0xed8e
  41fa89:	jae    0x41fafc
  41fa8b:	mov    bh,0xf6
  41fa8d:	adc    ebp,ecx
  41fa8f:	xchg   DWORD PTR [ebp-0x35],esi
  41fa92:	fist   DWORD PTR [ebx-0x32a69f95]
  41fa98:	adc    ah,BYTE PTR [ecx]
  41fa9a:	pop    esi
  41fa9b:	and    al,dl
  41fa9d:	cmp    BYTE PTR [ebp-0x4],ah
  41faa0:	imul   ecx,DWORD PTR ds:0x6a0b7739,0x55834120
  41faaa:	mov    al,ds:0xf138851a
  41faaf:	popf   
  41fab0:	shl    DWORD PTR [eax],cl
  41fab2:	jne    0x41fb03
  41fab4:	add    ebx,DWORD PTR [edx]
  41fab6:	enter  0x2f47,0x34
  41faba:	ins    BYTE PTR es:[edi],dx
  41fabb:	or     eax,0xa0ad3314
  41fac0:	es pop edi
  41fac2:	iret   
  41fac3:	outs   dx,DWORD PTR ds:[esi]
  41fac4:	sbb    ecx,esp
  41fac6:	ror    DWORD PTR [ebx],cl
  41fac8:	clc    
  41fac9:	aaa    
  41faca:	test   DWORD PTR [ebx+0x70],edx
  41facd:	(bad)
  41fad0:	cdq    
  41fad1:	mov    ecx,0x2c819a0
  41fad6:	sbb    edx,DWORD PTR [ebp+0x49]
  41fad9:	(bad)  
  41fada:	mov    ebp,0xac9fbb7f
  41fadf:	cmp    ebx,DWORD PTR [ebp+edi*4+0x40180b56]
  41fae6:	mov    dl,0xaa
  41fae8:	xor    DWORD PTR [ebp+0x3a],ebx
  41faeb:	retf   
  41faec:	mov    dl,0x73
  41faee:	ins    BYTE PTR es:[edi],dx
  41faef:	lea    esp,[ebp-0x17]
  41faf2:	mov    ds:0x4a2ec501,eax
  41faf7:	sbb    eax,0x2fb35697
  41fafc:	fstp   st(7)
  41fafe:	push   eax
  41faff:	(bad)  
  41fb00:	iret   
  41fb01:	adc    ebp,0x728f047c
  41fb07:	in     al,dx
  41fb08:	push   esi
  41fb09:	sub    BYTE PTR [edi-0x48b08183],dh
  41fb0f:	sbb    al,0x18
  41fb11:	retf   
  41fb12:	push   0x3abaa3a4
  41fb17:	mov    eax,ds:0x3a55df05
  41fb1c:	add    DWORD PTR [edx+0x3d8de119],ebp
  41fb22:	push   ebx
  41fb23:	imul   edi,ecx,0x4484b985
  41fb29:	mov    ds,WORD PTR [ecx]
  41fb2b:	cmp    eax,esp
  41fb2d:	dec    esp
  41fb2e:	xor    bh,BYTE PTR [esi+ebp*2+0x2a]
  41fb32:	mov    ebp,0xca63520d
  41fb37:	jl     0x41fba0
  41fb39:	fwait
  41fb3a:	pop    edi
  41fb3b:	xor    eax,0x951869c7
  41fb40:	xchg   edx,eax
  41fb41:	sbb    esp,edx
  41fb43:	pop    ebx
  41fb44:	inc    ebx
  41fb45:	jg     0x41fad4
  41fb47:	dec    edx
  41fb48:	enter  0x52a7,0xd0
  41fb4c:	test   eax,0xf6be2847
  41fb51:	addr16 mov eax,ds:0xccd7
  41fb55:	arpl   WORD PTR [ebx],ax
  41fb57:	dec    ebp
  41fb58:	adc    ebx,ecx
  41fb5a:	je     0x41fbcc
  41fb5c:	lahf   
  41fb5d:	aaa    
  41fb5e:	inc    ecx
  41fb5f:	in     al,0x6f
  41fb61:	inc    esp
  41fb62:	cmp    al,0x90
  41fb64:	push   esi
  41fb65:	ins    BYTE PTR es:[edi],dx
  41fb66:	mov    dh,0xb9
  41fb68:	ins    BYTE PTR es:[edi],dx
  41fb69:	cmp    al,bh
  41fb6b:	sbb    al,0x3f
  41fb6d:	lods   al,BYTE PTR ds:[esi]
  41fb6e:	fdiv   st(4),st
  41fb70:	jne    0x41fba0
  41fb72:	pop    esi
  41fb73:	or     al,0xd2
  41fb75:	in     eax,0xac
  41fb77:	xchg   ecx,eax
  41fb78:	push   ebp
  41fb79:	arpl   WORD PTR [eax-0x51a300bc],si
  41fb7f:	ja     0x41fb11
  41fb81:	lea    ecx,fs:[eax-0x8024c37]
  41fb88:	icebp  
  41fb89:	fsub   st,st(4)
  41fb8b:	sub    eax,0xf4842d98
  41fb90:	fsub   st,st(4)
  41fb92:	mov    BYTE PTR [ebp-0xdcf6768],dh
  41fb98:	mov    edx,0x3f08fbe9
  41fb9d:	punpckhqdq xmm7,XMMWORD PTR [ecx]
  41fba1:	jmp    0x41fc00
  41fba3:	add    eax,0x77a7faa7
  41fba8:	sub    BYTE PTR [ecx+0x4c364b0c],dl
  41fbae:	xchg   edi,eax
  41fbaf:	and    esi,DWORD PTR [ebp-0xe]
  41fbb2:	mov    bh,0x37
  41fbb4:	shl    edi,cl
  41fbb6:	xchg   edx,eax
  41fbb7:	push   esp
  41fbb8:	jae    0x41fb85
  41fbba:	sbb    DWORD PTR [esp+ecx*4+0x25],eax
  41fbbe:	pop    edx
  41fbbf:	mov    esp,0x31621dec
  41fbc4:	xor    eax,0xaa47362a
  41fbc9:	adc    al,0xbf
  41fbcb:	loopne 0x41fbd4
  41fbcd:	icebp  
  41fbce:	outs   dx,DWORD PTR ds:[esi]
  41fbcf:	adc    BYTE PTR [edi],ah
  41fbd1:	xchg   esp,eax
  41fbd2:	or     DWORD PTR [eax+0x5004435e],eax
  41fbd8:	cmp    ch,BYTE PTR [esi-0x29]
  41fbdb:	push   ebx
  41fbdc:	add    al,0xea
  41fbde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbdf:	push   ebx
  41fbe0:	call   0x315c6125
  41fbe5:	lock out 0x82,al
  41fbe8:	xchg   ecx,eax
  41fbe9:	jno    0x41fbf9
  41fbeb:	arpl   WORD PTR [ebx],bx
  41fbed:	inc    ecx
  41fbee:	sub    eax,0x528b3145
  41fbf3:	test   BYTE PTR [esi],bh
  41fbf5:	xchg   edi,eax
  41fbf6:	add    edi,esp
  41fbf8:	xor    al,0xb6
  41fbfa:	adc    BYTE PTR [eax+0x410198db],0xa0
  41fc01:	or     BYTE PTR [eax-0x37dd2546],0x8c
  41fc08:	mov    ds:0x72a47fe2,eax
  41fc0d:	pop    esp
  41fc0e:	pop    esi
  41fc0f:	test   al,0xe5
  41fc11:	add    DWORD PTR [ecx],ebx
  41fc13:	lock out dx,eax
  41fc15:	mov    ebx,0x79e50702
  41fc1a:	or     eax,0x1b03a148
  41fc1f:	mov    ecx,0x70782014
  41fc24:	repz (bad) 
  41fc26:	call   0x7602:0x5fd2a3b5
  41fc2d:	pop    edi
  41fc2e:	jmp    0xb3a55a18
  41fc33:	dec    ebx
  41fc34:	pop    edi
  41fc35:	jecxz  0x41fc13
  41fc37:	ins    BYTE PTR es:[edi],dx
  41fc38:	int    0x7d
  41fc3a:	mov    ch,0xf4
  41fc3c:	cmp    BYTE PTR [ebx+0x18],dh
  41fc3f:	test   DWORD PTR [ebx],ebp
  41fc41:	dec    ebx
  41fc42:	or     eax,0xf2b55ee
  41fc47:	int3   
  41fc48:	fwait
  41fc49:	das    
  41fc4a:	push   ebp
  41fc4b:	mov    al,ds:0xd9653f91
  41fc50:	daa    
  41fc51:	mov    ds:0xd3571b20,al
  41fc56:	push   ds
  41fc57:	retf   0x910b
  41fc5a:	imul   edi,DWORD PTR [edi+0xff2fd9],0x23
  41fc61:	push   ecx
  41fc62:	fild   WORD PTR [edi]
  41fc64:	test   BYTE PTR [edi+0x9],0xd7
  41fc68:	or     al,0x83
  41fc6a:	dec    esp
  41fc6b:	loopne 0x41fc8a
  41fc6d:	push   esi
  41fc6e:	sbb    bh,bl
  41fc70:	jno    0x41fc51
  41fc72:	fs imul edi
  41fc75:	fdivr  DWORD PTR [ecx]
  41fc77:	mov    edi,0x237cf41e
  41fc7c:	sar    DWORD PTR [eax],cl
  41fc7e:	mov    dh,0xf9
  41fc80:	jnp    0x41fc9a
  41fc82:	xor    al,BYTE PTR [esp+ebp*2]
  41fc85:	fs xchg ebx,eax
  41fc87:	add    dl,cl
  41fc89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc8a:	jecxz  0x41fcdb
  41fc8c:	je     0x41fcf9
  41fc8e:	movzx  edx,BYTE PTR [edx+ebx*4-0x32d20de6]
  41fc96:	bound  ebx,QWORD PTR [edx-0x67fac48b]
  41fc9c:	lods   al,BYTE PTR ds:[esi]
  41fc9d:	fistp  WORD PTR [edi-0x7d3265b3]
  41fca3:	aam    0x25
  41fca5:	xor    ah,BYTE PTR [esi-0x74]
  41fca8:	pop    es
  41fca9:	fidiv  DWORD PTR ds:[ebx+0x2d]
  41fcad:	aad    0x14
  41fcaf:	inc    ebp
  41fcb0:	cs dec ebx
  41fcb2:	mov    bl,0x2d
  41fcb4:	aam    0x2c
  41fcb6:	jmp    0xaf95:0x65b2229c
  41fcbd:	das    
  41fcbe:	call   0xe457634
  41fcc3:	mov    edx,0xc52fd691
  41fcc8:	jle    0x41fcd6
  41fcca:	call   0x78cf:0xcc905a12
  41fcd1:	add    DWORD PTR [esi-0x2936cfb2],esp
  41fcd7:	shr    al,1
  41fcd9:	gs mov ah,dh
  41fcdc:	fwait
  41fcdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcde:	xchg   esp,eax
  41fcdf:	sbb    eax,DWORD PTR [edx]
  41fce1:	daa    
  41fce2:	fsubr  st(4),st
  41fce4:	retf   
  41fce5:	push   esp
  41fce6:	leave  
  41fce7:	cmp    BYTE PTR [ecx+ebp*2-0x4f],dl
  41fceb:	mov    ax,0x9a3a
  41fcef:	cmp    DWORD PTR [esi+edx*2-0x4f488236],edx
  41fcf6:	(bad)  
  41fcf7:	sub    ebp,ebp
  41fcf9:	ret    
  41fcfa:	je     0x41fca2
  41fcfc:	imul   edi,ebp,0x77e33039
  41fd02:	pop    eax
  41fd03:	xlat   BYTE PTR ds:[ebx]
  41fd04:	pusha  
  41fd05:	into   
  41fd06:	xor    eax,0xbb781e8
  41fd0b:	test   DWORD PTR [eax],esi
  41fd0d:	int3   
  41fd0e:	gs das 
  41fd10:	into   
  41fd11:	mov    ah,0x2
  41fd13:	jns    0x41fd38
  41fd15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd16:	ret    
  41fd17:	repnz loop 0x41fd09
  41fd1a:	enter  0x3c03,0x0
  41fd1e:	mov    ds:0xc320d9b2,al
  41fd23:	retf   0xfbd1
  41fd26:	cmc    
  41fd27:	push   ebp
  41fd28:	jl     0x41fd15
  41fd2a:	dec    ebp
  41fd2b:	xor    dh,BYTE PTR [ecx+0x7497b8c5]
  41fd31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd32:	popa   
  41fd33:	jne    0x41fd5e
  41fd35:	in     eax,0x8b
  41fd37:	and    BYTE PTR [edx],ah
  41fd39:	out    0x7d,eax
  41fd3b:	jmp    0x5d7f:0xf55406da
  41fd42:	cdq    
  41fd43:	ret    
  41fd44:	sar    BYTE PTR [ecx+0x62b6c82d],0x11
  41fd4b:	cli    
  41fd4c:	ja     0x41fd33
  41fd4e:	lock jnp 0x41fd8a
  41fd51:	imul   esi,ebx,0xfffffff3
  41fd54:	pop    eax
  41fd55:	adc    eax,0xd37c266c
  41fd5a:	pop    edx
  41fd5b:	dec    esp
  41fd5c:	xor    ebp,DWORD PTR [edx]
  41fd5e:	loop   0x41fd09
  41fd60:	mov    bl,0xb6
  41fd62:	inc    esi
  41fd63:	es sbb eax,0x8454bc01
  41fd69:	mov    ecx,0xe7c0a1e0
  41fd6e:	(bad)  
  41fd6f:	cmp    eax,0xae7f0401
  41fd74:	pop    eax
  41fd75:	mov    al,0x1
  41fd77:	out    0x44,eax
  41fd79:	adc    bh,cl
  41fd7b:	test   al,0x59
  41fd7d:	lds    esi,FWORD PTR ds:0xb8ac2f
  41fd83:	pop    edx
  41fd84:	xchg   DWORD PTR [ecx-0x2da15948],esi
  41fd8a:	dec    eax
  41fd8b:	in     al,dx
  41fd8c:	in     al,0xde
  41fd8e:	mov    WORD PTR [ebp-0x38ac6eff],?
  41fd94:	push   ds
  41fd95:	je     0x41fdeb
  41fd97:	push   0xb6ef5d9a
  41fd9c:	lds    ebp,FWORD PTR [eax+0x55]
  41fd9f:	out    dx,al
  41fda0:	in     eax,0x3b
  41fda2:	fwait
  41fda3:	jo     0x41fdea
  41fda5:	or     ch,BYTE PTR [esi+0x3e]
  41fda8:	cmc    
  41fda9:	dec    ebx
  41fdaa:	or     DWORD PTR [esp+edi*4],esp
  41fdad:	cld    
  41fdae:	call   0xbea5cdca
  41fdb3:	out    dx,al
  41fdb4:	lds    esp,FWORD PTR [esi]
  41fdb6:	sub    ah,BYTE PTR [eax+0x2b4275a]
  41fdbc:	int3   
  41fdbd:	and    ch,bl
  41fdbf:	aaa    
  41fdc0:	lds    edi,FWORD PTR [edi-0x4c01c06a]
  41fdc6:	push   ebx
  41fdc7:	sub    al,0x2e
  41fdc9:	xlat   BYTE PTR ds:[ebx]
  41fdca:	stos   DWORD PTR es:[edi],eax
  41fdcb:	mov    cl,0x46
  41fdcd:	add    eax,0xf9f1ab75
  41fdd2:	repz dec ebp
  41fdd4:	mov    edi,0xb399b945
  41fdd9:	jae    0x41fd66
  41fddb:	in     eax,dx
  41fddc:	ja     0x41fe2d
  41fdde:	stc    
  41fddf:	jno    0x41fdad
  41fde1:	or     ebx,DWORD PTR [edi+0x3cf2d2ac]
  41fde7:	mov    ss,WORD PTR [edi+0x3ce21ffc]
  41fded:	adc    ebx,eax
  41fdef:	in     eax,dx
  41fdf0:	inc    ebx
  41fdf1:	test   eax,0x64a324fe
  41fdf6:	add    al,0x6a
  41fdf9:	add    BYTE PTR [ebx],0x9f
  41fdfc:	enter  0x7f50,0xab
  41fe00:	pop    ecx
  41fe01:	dec    ebp
  41fe02:	arpl   WORD PTR [esi],bp
  41fe04:	sub    BYTE PTR [bx+di-0x3b6a],dh
  41fe09:	lods   al,BYTE PTR ds:[esi]
  41fe0a:	cdq    
  41fe0b:	repz fwait
  41fe0d:	dec    esi
  41fe0e:	mov    al,BYTE PTR [edx+0x50]
  41fe11:	mov    al,ds:0xe6a23b5e
  41fe16:	dec    ebp
  41fe17:	mov    ebx,0xea554881
  41fe1c:	push   eax
  41fe1d:	fisub  WORD PTR [edx-0x73]
  41fe20:	or     eax,0x12b45b4d
  41fe25:	sub    DWORD PTR ds:0xf264f44d,ebp
  41fe2b:	mov    ecx,0xbd894163
  41fe30:	fnstcw WORD PTR [esp+edi*8]
  41fe33:	push   ebp
  41fe34:	cmp    eax,0x860de44b
  41fe39:	ss mov eax,0xbc7ad261
  41fe3f:	fstp   QWORD PTR [esi-0x25]
  41fe42:	push   esp
  41fe43:	sub    dl,0xc
  41fe46:	(bad)  
  41fe48:	shl    al,1
  41fe4a:	inc    edi
  41fe4b:	int3   
  41fe4c:	pop    es
  41fe4d:	imul   esi,esp,0x1b060a34
  41fe53:	cmp    al,0x3
  41fe55:	mov    WORD PTR [ebx-0x71],?
  41fe58:	adc    al,0xbf
  41fe5a:	inc    ebx
  41fe5b:	sahf   
  41fe5c:	jnp    0x41fe22
  41fe5e:	xor    ebx,eax
  41fe60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe61:	lea    edi,[edi-0x2a]
  41fe64:	push   0x48
  41fe66:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe68:	lods   al,BYTE PTR ds:[esi]
  41fe69:	in     al,dx
  41fe6a:	lock mov al,es:0x9e68d925
  41fe71:	push   ds
  41fe72:	loope  0x41fe0d
  41fe74:	rol    ecx,0xdc
  41fe77:	pop    ss
  41fe78:	pop    esp
  41fe79:	sub    BYTE PTR [edi+0xbef7d05],al
  41fe7f:	and    DWORD PTR [ecx],edi
  41fe81:	ja     0x41fec8
  41fe83:	and    eax,0xc570ff8e
  41fe88:	sbb    DWORD PTR [edi+0x0],edx
  41fe8b:	or     eax,0x31867ae5
  41fe90:	jecxz  0x41fe32
  41fe92:	sbb    eax,0x1f1c1efb
  41fe97:	shr    BYTE PTR [ecx+0x7c],1
  41fe9a:	sub    cl,BYTE PTR [edx+0x31e656d1]
  41fea0:	xor    bh,0x1f
  41fea3:	sbb    ah,BYTE PTR es:[edi-0x14]
  41fea7:	inc    ecx
  41fea8:	out    dx,al
  41fea9:	jmp    DWORD PTR [edi]
  41feab:	das    
  41feac:	(bad)  
  41fead:	or     BYTE PTR [edx],bh
  41feaf:	in     eax,0x27
  41feb1:	or     DWORD PTR [eax],ebx
  41feb3:	std    
  41feb4:	sbb    DWORD PTR [edx],ebx
  41feb6:	lahf   
  41feb7:	lods   eax,DWORD PTR ds:[esi]
  41feb8:	adc    eax,0xa3b480eb
  41febd:	lock mov BYTE PTR ds:0x4a64b36f,dl
  41fec4:	pop    edx
  41fec5:	xchg   edx,eax
  41fec6:	pop    DWORD PTR cs:[edx+0xa55d4e2]
  41fecd:	pop    ecx
  41fece:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fecf:	xchg   edi,eax
  41fed0:	gs scas al,BYTE PTR es:[edi]
  41fed2:	imul   ebx,edi,0xffffffcf
  41fed5:	ds (bad) 
  41fed7:	fcomi  st,st(3)
  41fed9:	xchg   ecx,eax
  41feda:	enter  0xe53c,0x45
  41fede:	daa    
  41fedf:	xchg   edx,eax
  41fee0:	scas   al,BYTE PTR es:[edi]
  41fee1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fee2:	jne    0x41ff08
  41fee4:	mov    ah,0x26
  41fee6:	test   BYTE PTR [edx+0x40],cl
  41fee9:	mov    eax,ds:0x72ee0bee
  41feee:	pusha  
  41feef:	xchg   esi,eax
  41fef0:	int    0x74
  41fef2:	frstpm(287 only) 
  41fef4:	or     ecx,edi
  41fef6:	rcr    DWORD PTR [esi+0x63743a0b],cl
  41fefc:	cmp    BYTE PTR [eax-0x27392171],bl
  41ff02:	mov    al,0x5c
  41ff04:	outs   dx,DWORD PTR ds:[esi]
  41ff05:	push   eax
  41ff06:	enter  0x5932,0x87
  41ff0a:	stos   BYTE PTR es:[edi],al
  41ff0b:	push   eax
  41ff0c:	shl    DWORD PTR [eax+0x5],cl
  41ff0f:	dec    edx
  41ff10:	push   esp
  41ff11:	mov    bh,BYTE PTR [esi+0x53]
  41ff14:	adc    DWORD PTR [eax+edi*8-0x76e6cc7],esi
  41ff1b:	rcr    BYTE PTR ds:0xa81b1e00,1
  41ff21:	xlat   BYTE PTR fs:[ebx]
  41ff23:	ret    0xd105
  41ff26:	outs   dx,DWORD PTR ds:[esi]
  41ff27:	hlt    
  41ff28:	ror    dl,cl
  41ff2a:	stc    
  41ff2b:	or     eax,0xc820cfba
  41ff30:	mov    al,ds:0xbfd4f8e2
  41ff35:	rcr    BYTE PTR [eax+esi*4-0x62],0x64
  41ff3a:	cdq    
  41ff3b:	test   BYTE PTR [ecx],dl
  41ff3d:	and    dh,al
  41ff3f:	popf   
  41ff40:	aaa    
  41ff41:	popa   
  41ff42:	inc    DWORD PTR [ebp+0x71]
  41ff45:	xchg   esp,eax
  41ff46:	xchg   DWORD PTR [eax+0x64ef60a8],edx
  41ff4c:	stc    
  41ff4d:	sahf   
  41ff4e:	into   
  41ff4f:	sub    edx,DWORD PTR [ebx-0x1c443dbb]
  41ff55:	test   BYTE PTR ds:0x6a68d7ce,bh
  41ff5b:	mov    bl,0xfd
  41ff5d:	pop    ebp
  41ff5e:	pop    edi
  41ff5f:	xor    eax,0xc1a2acce
  41ff64:	aas    
  41ff65:	scas   al,BYTE PTR es:[edi]
  41ff66:	jae    0x41ffa4
  41ff68:	or     ebx,0xffffffa8
  41ff6b:	repz sub eax,edx
  41ff6e:	retf   
  41ff6f:	xchg   DWORD PTR [eax-0x6137a3f2],ebp
  41ff75:	sub    DWORD PTR [ecx],0x3bbed3ac
  41ff7b:	imul   ecx,ecx,0xfc385b6b
  41ff81:	rol    BYTE PTR [eax+0x16add12f],1
  41ff87:	scas   al,BYTE PTR es:[edi]
  41ff88:	lods   al,BYTE PTR ds:[esi]
  41ff89:	sub    al,0x55
  41ff8b:	push   ebp
  41ff8c:	and    DWORD PTR [ecx-0x79],0xffffffb6
  41ff90:	aas    
  41ff91:	xor    BYTE PTR [edi],al
  41ff93:	mov    ?,WORD PTR [esi]
  41ff95:	retf   
  41ff96:	add    al,0xa5
  41ff98:	cli    
  41ff99:	adc    ecx,DWORD PTR [eax+0x4a]
  41ff9c:	hlt    
  41ff9d:	(bad)  
  41ff9e:	adc    eax,0xec790d63
  41ffa3:	bound  eax,QWORD PTR [edi]
  41ffa5:	push   eax
  41ffa6:	mov    dh,0xec
  41ffa8:	cwde   
  41ffa9:	cmp    DWORD PTR [ebx+0x60e80216],0xa892f946
  41ffb3:	push   eax
  41ffb4:	out    dx,al
  41ffb5:	xchg   esi,eax
  41ffb6:	mov    bl,0x43
  41ffb8:	mov    ebx,0x663c34fa
  41ffbd:	add    ebp,esi
  41ffbf:	gs xor al,0x35
  41ffc2:	(bad)  
  41ffc3:	jmp    0x8bf0:0xc0dc1654
  41ffca:	rcl    BYTE PTR [edi-0xd],cl
  41ffcd:	add    al,0x4c
  41ffd0:	xlat   BYTE PTR ds:[ebx]
  41ffd1:	and    esp,DWORD PTR [edi+esi*4-0x3db34a0d]
  41ffd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ffd9:	xor    eax,0xbd130891
  41ffde:	sbb    al,0x24
  41ffe0:	mov    ecx,0x527132bc
  41ffe5:	jecxz  0x42003f
  41ffe7:	out    0xdb,al
  41ffe9:	fcomp  DWORD PTR [esi]
  41ffeb:	test   ecx,ebx
  41ffed:	dec    esp
  41ffee:	pop    esp
  41ffef:	or     DWORD PTR [edx-0x42],esi
  41fff2:	les    esi,FWORD PTR [esi+0xb]
  41fff5:	sub    edx,DWORD PTR [ebx]
  41fff7:	test   BYTE PTR [eax+0x25cda15e],bh
  41fffd:	xor    al,BYTE PTR ss:[esp+eiz*2]
  420001:	push   ebx
  420002:	popa   
  420003:	inc    ebp
  420004:	inc    edx
  420005:	stc    
  420006:	push   ss
  420007:	lods   al,BYTE PTR ds:[esi]
  420008:	leave  
  420009:	or     bh,BYTE PTR [esi]
  42000b:	mov    edx,0xfb698331
  420010:	jne    0x420086
  420012:	dec    ebx
  420013:	clc    
  420014:	adc    eax,0x3660abb5
  420019:	stc    
  42001a:	sub    bh,cl
  42001c:	gs cmp edx,esi
  42001f:	hlt    
  420020:	pop    es
  420021:	in     al,0x3c
  420023:	jns    0x420000
  420025:	cmp    DWORD PTR [esi+0x76645fbe],0x18ad7601
  42002f:	int    0x23
  420031:	stos   BYTE PTR es:[edi],al
  420032:	sub    eax,0x58f0cab4
  420037:	aas    
  420038:	push   0x3c
  42003a:	and    DWORD PTR [edi],0xc5665357
  420040:	pushf  
  420041:	das    
  420042:	fstp   QWORD PTR [esp+edx*1-0x2a]
  420046:	aas    
  420047:	or     esp,DWORD PTR [edx+0xb]
  42004a:	xor    eax,0xab7f2555
  42004f:	adc    eax,0xd67bba7e
  420054:	enter  0x3205,0x8f
  420058:	push   ds
  420059:	daa    
  42005a:	sub    al,0x75
  42005c:	mov    ebp,0x67d3bf98
  420061:	or     eax,0x9ab192db
  420066:	pop    edx
  420067:	enter  0xde24,0xc6
  42006b:	leave  
  42006c:	jae    0x42005f
  42006e:	jb     0x420048
  420070:	popf   
  420071:	call   0x8adf:0xeda25004
  420078:	jl     0x420061
  42007a:	mov    esp,0xd12c258e
  42007f:	js     0x420063
  420081:	pop    eax
  420082:	add    BYTE PTR [ecx+0xcd1c6c0],0x60
  420089:	das    
  42008a:	aam    0x83
  42008c:	inc    esi
  42008d:	adc    eax,0xea5aa17d
  420092:	imul   esi,DWORD PTR [esi+ecx*4-0x430d3912],0x33
  42009a:	jbe    0x4200e9
  42009c:	neg    BYTE PTR [esi+0x700f2d80]
  4200a2:	les    edx,FWORD PTR [edi]
  4200a4:	push   0x13a3685d
  4200a9:	inc    esi
  4200aa:	mov    cl,ah
  4200ac:	or     al,0xd9
  4200ae:	ins    BYTE PTR es:[edi],dx
  4200af:	cmp    DWORD PTR [ecx-0x76],esp
  4200b2:	adc    eax,0x4eaa7c4c
  4200b7:	pop    edx
  4200b8:	popf   
  4200b9:	fstp   TBYTE PTR [ebx]
  4200bb:	stos   BYTE PTR es:[edi],al
  4200bc:	sub    eax,0x4b3e552b
  4200c1:	out    0xd5,eax
  4200c3:	loope  0x4200be
  4200c5:	mov    ch,0xcd
  4200c7:	sub    ecx,DWORD PTR [eax-0x1f]
  4200ca:	jl     0x4200f4
  4200cc:	push   0x17
  4200ce:	xchg   dh,dl
  4200d0:	adc    BYTE PTR [ebx],bh
  4200d2:	dec    ebx
  4200d3:	sub    al,0x1e
  4200d5:	inc    edx
  4200d6:	dec    edx
  4200d7:	cmp    eax,0xb5fa9c61
  4200dc:	out    0xe8,al
  4200de:	fidivr DWORD PTR [edx+ecx*2-0x71]
  4200e2:	or     DWORD PTR [ebx],edi
  4200e4:	jae    0x4200c3
  4200e6:	mov    bl,0x97
  4200e8:	daa    
  4200e9:	mov    bl,0x4a
  4200eb:	data16 (bad) 
  4200ed:	jle    0x420130
  4200ef:	dec    ebp
  4200f0:	sub    ecx,ebx
  4200f2:	fist   WORD PTR [edx+0x5f]
  4200f5:	inc    esi
  4200f6:	std    
  4200f7:	out    0x9b,eax
  4200f9:	sbb    eax,DWORD PTR [ebx-0x177ddecc]
  4200ff:	push   esi
  420100:	shr    DWORD PTR [edi+0x552f1ccf],1
  420106:	sub    al,0x8f
  420108:	sbb    BYTE PTR [eax-0x2f],bl
  42010b:	sub    ebp,esp
  42010d:	scas   eax,DWORD PTR es:[edi]
  42010e:	adc    bh,dh
  420110:	jno    0x4200c9
  420112:	adc    al,0x2a
  420114:	add    cl,dl
  420116:	fiadd  WORD PTR [edx+eiz*8+0x7a42ca37]
  42011d:	std    
  42011e:	add    eax,0x46f2b8ae
  420123:	test   BYTE PTR [ecx],ah
  420125:	rcr    BYTE PTR [ecx],cl
  420127:	mov    ds:0x8c78e890,al
  42012c:	xor    al,BYTE PTR ds:0xc09fd8aa
  420132:	repz push ss
  420134:	xlat   BYTE PTR ds:[ebx]
  420135:	add    al,dl
  420137:	xlat   BYTE PTR ds:[ebx]
  420138:	bound  eax,QWORD PTR [edi-0x49]
  42013b:	loope  0x4200e1
  42013d:	cmp    al,0x3f
  42013f:	xor    eax,0x2bfcc070
  420144:	mov    dh,BYTE PTR [edx+0x1183178b]
  42014a:	rcl    ebx,0x4e
  42014d:	repnz scas al,BYTE PTR es:[edi]
  42014f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420150:	in     al,dx
  420151:	leave  
  420152:	cmc    
  420153:	or     ecx,DWORD PTR ds:0xc22d967
  420159:	xor    ebp,DWORD PTR [ecx-0x621e14a0]
  42015f:	sub    esi,DWORD PTR [eax-0x45]
  420162:	inc    esi
  420163:	out    0x4f,al
  420165:	ret    
  420166:	aam    0x31
  420168:	dec    ebx
  420169:	adc    edx,ecx
  42016b:	xchg   ebp,eax
  42016c:	leave  
  42016d:	pop    edi
  42016e:	push   ecx
  42016f:	fs out dx,eax
  420171:	or     eax,0x77b148cc
  420176:	dec    ebx
  420177:	mov    al,ds:0xff7a6785
  42017c:	mov    eax,DWORD PTR ds:0xa1c1f56e
  420182:	cwde   
  420183:	mov    eax,0xe09db585
  420188:	sub    eax,0x53eba25b
  42018d:	mov    ds:0xeebab1bb,eax
  420192:	adc    BYTE PTR [ebp-0x7f79f717],dl
  420198:	frstor [esp+eax*4-0xaf3f610]
  42019f:	mov    eax,0x59b46824
  4201a4:	fcomi  st,st(1)
  4201a6:	das    
  4201a7:	repz iret 
  4201a9:	and    al,0xab
  4201ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201ac:	shl    BYTE PTR [ebp-0x540e4f1b],0x82
  4201b3:	sub    eax,0x135bd1ef
  4201b8:	ins    BYTE PTR es:[edi],dx
  4201b9:	lds    esp,FWORD PTR [ebx+0x2a]
  4201bc:	retf   
  4201bd:	out    0xd1,al
  4201bf:	test   BYTE PTR [edx-0x34],ch
  4201c2:	xchg   esp,eax
  4201c3:	fwait
  4201c4:	js     0x420189
  4201c6:	dec    ebx
  4201c7:	pop    esp
  4201c8:	jecxz  0x420205
  4201ca:	retf   0xdcb2
  4201cd:	ret    0xb1ea
  4201d0:	cmp    DWORD PTR [eax],ebx
  4201d2:	cld    
  4201d3:	inc    ebp
  4201d4:	mov    ds:0x7cd65b09,al
  4201d9:	sub    dl,0x3f
  4201dc:	xor    ebx,DWORD PTR [esi+ecx*8+0x2ef15583]
  4201e3:	(bad)  
  4201e4:	loop   0x4201ee
  4201e6:	pusha  
  4201e7:	sub    edx,DWORD PTR [edx+0x12]
  4201ea:	sub    BYTE PTR [ebx],0x6d
  4201ed:	push   ecx
  4201ee:	stc    
  4201ef:	xor    al,0x12
  4201f1:	test   DWORD PTR [eax-0x4d2fa54e],ebp
  4201f7:	in     eax,dx
  4201f8:	mov    bh,0xd4
  4201fa:	or     al,BYTE PTR [edx]
  4201fc:	add    ch,BYTE PTR [ecx-0x3c]
  4201ff:	(bad)
  420203:	push   esi
  420204:	into   
  420205:	sar    DWORD PTR [edi],cl
  420207:	dec    DWORD PTR [edx]
  420209:	inc    edi
  42020a:	retf   
  42020b:	mov    al,0xbc
  42020d:	aad    0x68
  42020f:	lods   al,BYTE PTR ds:[esi]
  420210:	in     eax,dx
  420211:	lahf   
  420212:	cwde   
  420213:	retf   
  420214:	sbb    al,0xc4
  420216:	fxch   st(1)
  420218:	stos   DWORD PTR es:[edi],eax
  420219:	lea    ebp,[edi+0x482a82d6]
  42021f:	inc    ebx
  420220:	push   ss
  420221:	pop    ax
  420223:	in     eax,0xf2
  420225:	sar    DWORD PTR [esi+0x343df1ea],cl
  42022b:	(bad)  
  42022c:	popa   
  42022d:	sbb    eax,0x7c652e01
  420232:	enter  0x762,0x41
  420236:	jo     0x4201ee
  420238:	xor    al,0x27
  42023a:	mov    al,ds:0xe93d9d47
  42023f:	mov    ch,0xc4
  420241:	(bad)  
  420242:	and    ch,bl
  420244:	add    ebx,0xfffffffb
  420247:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420248:	cmp    DWORD PTR [edx-0x754095de],ecx
  42024e:	and    cl,BYTE PTR [esi+edx*4]
  420251:	jmp    0x2bdc6f76
  420256:	pop    edx
  420257:	test   al,0x38
  420259:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42025a:	jne    0x420227
  42025c:	cmp    edi,ecx
  42025e:	fidivr WORD PTR [eax+0x4e]
  420261:	fisub  DWORD PTR [eax-0x1051d619]
  420267:	(bad)  
  420268:	call   0xb915493
  42026d:	out    dx,al
  42026e:	sar    BYTE PTR [edi],0x89
  420271:	std    
  420272:	pop    ebx
  420273:	or     eax,0x25b1bd40
  420278:	or     BYTE PTR [ebx+edx*4],0x69
  42027c:	loop   0x420257
  42027e:	push   esp
  42027f:	mov    ds:0xeceb6f1f,al
  420284:	sbb    bl,bl
  420286:	sbb    BYTE PTR [ebp-0x17ccb74e],cl
  42028c:	pushf  
  42028d:	mov    bl,0xd0
  42028f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420290:	pop    edi
  420291:	push   es
  420292:	jne    0x42021c
  420294:	mov    dh,0x3d
  420296:	mov    ds:0xf774f9f0,al
  42029b:	xlat   BYTE PTR ds:[ebx]
  42029c:	imul   esp,DWORD PTR [ebx],0x26
  42029f:	(bad)  
  4202a1:	les    eax,FWORD PTR [esi+0x22]
  4202a4:	inc    eax
  4202a5:	(bad)  
  4202a6:	jle    0x42031c
  4202a8:	loope  0x420314
  4202aa:	and    eax,0xf69f1d59
  4202af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202b0:	jle    0x42027e
  4202b2:	sub    BYTE PTR [edx],cl
  4202b4:	mov    al,0x43
  4202b6:	cmp    al,0x7b
  4202b8:	or     DWORD PTR [ecx+ecx*4],edi
  4202bb:	jbe    0x4202c2
  4202bd:	add    al,0xe7
  4202bf:	arpl   WORD PTR [eax-0x17],ax
  4202c2:	pop    ecx
  4202c3:	(bad)  
  4202c4:	test   al,0xa5
  4202c6:	arpl   WORD PTR [eax],ax
  4202c8:	jmp    0x420301
  4202ca:	adc    al,0x1f
  4202cc:	jle    0x4202dc
  4202ce:	test   BYTE PTR [esi-0x4e6a6b0d],cl
  4202d4:	stos   BYTE PTR es:[edi],al
  4202d5:	xchg   esi,eax
  4202d6:	cmc    
  4202d7:	inc    eax
  4202d8:	sub    al,0x5
  4202da:	mov    dh,0x7
  4202dc:	push   ss
  4202dd:	mov    al,0xd5
  4202df:	fisub  DWORD PTR [ebx-0x1c08333f]
  4202e5:	mov    esi,0xa0f834f8
  4202ea:	add    dl,BYTE PTR ds:0xcdfd150c
  4202f0:	mov    esp,0x98e7d145
  4202f5:	loopne 0x4202f9
  4202f7:	cmp    DWORD PTR [edi-0x3c],edx
  4202fa:	(bad)  
  4202fb:	call   0x8e5b:0x7955ff66
  420302:	daa    
  420303:	pop    es
  420304:	pusha  
  420305:	int3   
  420306:	popa   
  420307:	dec    esi
  420308:	int3   
  420309:	or     eax,0x1e5a1ecb
  42030e:	ret    
  42030f:	inc    edi
  420310:	mov    eax,0xec470339
  420315:	cmp    al,0xc3
  420317:	or     eax,0x5f53ee7e
  42031c:	stos   BYTE PTR es:[edi],al
  42031d:	dec    esp
  42031e:	or     edx,esi
  420320:	or     eax,ecx
  420322:	fxch   st(5)
  420324:	pop    ebp
  420325:	popa   
  420326:	jp     0x420317
  420328:	mov    cl,0x68
  42032a:	mov    bh,0xaf
  42032c:	lds    esp,FWORD PTR [eax+esi*4+0x79]
  420330:	dec    ebp
  420331:	(bad)  
  420332:	sar    DWORD PTR [esi+eiz*1+0x552cad47],cl
  420339:	outs   dx,BYTE PTR ds:[esi]
  42033a:	sbb    ecx,DWORD PTR [edx+ebp*1-0x3b]
  42033e:	sti    
  42033f:	(bad)  
  420340:	mov    eax,0x708b468c
  420345:	adc    al,0x4e
  420347:	adc    al,0x53
  420349:	push   0x5e
  42034b:	shl    DWORD PTR [esi-0x55],0xb5
  42034f:	test   al,0x36
  420351:	popa   
  420352:	retf   
  420353:	pop    ds
  420354:	int3   
  420355:	pop    ebx
  420356:	gs clc 
  420358:	ins    BYTE PTR es:[edi],dx
  420359:	ror    BYTE PTR [edi+0x63e1fdbf],cl
  42035f:	pusha  
  420360:	out    dx,eax
  420361:	push   edx
  420362:	mov    edi,DWORD PTR [eax]
  420364:	cmp    eax,0x69624b51
  420369:	mov    dh,0x91
  42036b:	mov    edx,0xb1465eb2
  420370:	shl    DWORD PTR [ecx],0x1e
  420373:	pop    ds
  420374:	outs   dx,BYTE PTR ds:[esi]
  420375:	add    edi,esp
  420377:	nop
  420378:	sub    BYTE PTR [eax],ch
  42037a:	gs sub al,0xba
  42037d:	sbb    eax,0x7497aa08
  420382:	jle    0x420318
  420384:	ja     0x4203e8
  420386:	cdq    
  420387:	dec    esi
  420388:	sub    eax,0x4786d768
  42038d:	test   bl,dl
  42038f:	mov    eax,0xc32fdc9b
  420394:	ins    BYTE PTR es:[edi],dx
  420395:	ins    BYTE PTR es:[edi],dx
  420396:	and    bh,bl
  420398:	xchg   ebx,eax
  420399:	call   0x70d63b09
  42039e:	lock dec eax
  4203a0:	ds jg  0x42035a
  4203a3:	lods   al,BYTE PTR ds:[esi]
  4203a4:	std    
  4203a5:	pop    esi
  4203a6:	inc    edx
  4203a7:	les    esp,FWORD PTR [edx+0x1b8f1b30]
  4203ad:	push   ss
  4203ae:	call   0x6ef751e
  4203b3:	jle    0x4203bf
  4203b5:	sbb    DWORD PTR [esi],edi
  4203b7:	sub    BYTE PTR [esp+edi*4],0x23
  4203bb:	(bad)  
  4203bd:	inc    ebx
  4203be:	jns    0x4203ff
  4203c0:	out    dx,al
  4203c1:	fsubr  QWORD PTR [eax+0x38]
  4203c4:	test   al,0x20
  4203c6:	inc    eax
  4203c8:	mov    ds:0x32208411,al
  4203cd:	add    ch,BYTE PTR [ecx]
  4203cf:	mov    BYTE PTR [eax],al
  4203d1:	stc    
  4203d2:	dec    eax
  4203d3:	adc    ebx,DWORD PTR ds:0x2bbc8152
  4203d9:	je     0x4203a4
  4203db:	jg     0x42043e
  4203dd:	in     eax,0x40
  4203df:	stos   DWORD PTR es:[edi],eax
  4203e0:	rcl    BYTE PTR [esi+edi*1-0x196f4be2],1
  4203e7:	sub    al,0x7e
  4203e9:	sahf   
  4203ea:	push   ebx
  4203eb:	push   ecx
  4203ec:	daa    
  4203ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203ee:	inc    ecx
  4203ef:	mov    ah,0xe1
  4203f1:	pushf  
  4203f2:	dec    ebx
  4203f3:	jmp    0x4203d7
  4203f5:	lahf   
  4203f6:	mov    ah,0xe0
  4203f8:	jmp    0x47cd:0xa3a95ec3
  4203ff:	pop    ss
  420400:	pop    edi
  420401:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420402:	bound  esp,QWORD PTR [ebp+0x14]
  420405:	mov    eax,0x4303add2
  42040a:	add    DWORD PTR [edx+esi*8-0x614eb6f],ebp
  420411:	mov    al,ds:0xaa961859
  420416:	inc    edx
  420417:	fwait
  420418:	xor    ah,BYTE PTR [eax-0x7a14fbc2]
  42041e:	repz add BYTE PTR [edx],dl
  420421:	rcl    BYTE PTR [esi-0x5b2132a8],cl
  420427:	fild   WORD PTR [ebx+edi*8-0x11]
  42042b:	or     eax,0xd85e1ea5
  420430:	nop
  420431:	sahf   
  420432:	push   ss
  420433:	pop    DWORD PTR [ecx]
  420435:	sub    eax,0xbbefff4e
  42043a:	xchg   edx,eax
  42043b:	fdiv   DWORD PTR [ebx]
  42043d:	mov    edx,0x7d8d8d5f
  420442:	pusha  
  420443:	push   edi
  420444:	mov    edi,0x3feef84a
  420449:	push   edx
  42044a:	jnp    0x420489
  42044c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42044d:	jae    0x4203ff
  42044f:	mov    BYTE PTR [esi],bh
  420451:	add    al,0x16
  420454:	int3   
  420455:	inc    ecx
  420456:	fnstcw WORD PTR [esi+eax*8]
  420459:	adc    eax,0x862ee77
  42045e:	pop    es
  42045f:	sbb    eax,0x348b9c4e
  420464:	push   edi
  420465:	xchg   esi,eax
  420466:	and    eax,0x3fcf5382
  42046b:	repz mov eax,0x54e6efd8
  420471:	mov    edx,0x3ecdec7e
  420476:	(bad)  
  420477:	mov    ds:0xaf5e06ef,al
  42047c:	jae    0x420466
  42047e:	jmp    0x420471
  420480:	and    ecx,esp
  420482:	mov    ebx,0xb92d96e0
  420487:	bound  esi,QWORD PTR [esi]
  420489:	mov    cl,0xc
  42048b:	add    dl,bh
  42048d:	jmp    0x5e41ef08
  420492:	loop   0x4204cf
  420494:	shr    ebp,0x29
  420497:	sub    esi,DWORD PTR [esi-0x4b]
  42049a:	xor    al,0x4b
  42049c:	in     eax,0xd9
  42049e:	call   0x7b1d085f
  4204a3:	inc    edx
  4204a4:	mov    eax,ds:0x744a9e14
  4204a9:	sub    ch,BYTE PTR [edx+0x125f107b]
  4204af:	cli    
  4204b0:	cmc    
  4204b1:	not    ah
  4204b3:	test   al,0x34
  4204b6:	fs mov ah,0xfe
  4204b9:	fld    TBYTE PTR [esi-0x6bd9ceb2]
  4204bf:	dec    esp
  4204c0:	popf   
  4204c1:	push   0xc61f5906
  4204c6:	retf   
  4204c7:	dec    edi
  4204c8:	stc    
  4204c9:	icebp  
  4204ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4204cb:	dec    ebp
  4204cc:	mov    ah,0x20
  4204ce:	(bad)  
  4204cf:	out    dx,eax
  4204d0:	test   eax,0xe11de33c
  4204d5:	fiadd  WORD PTR [edi-0x40]
  4204d8:	sbb    DWORD PTR [ecx+0x6],0x32b350c6
  4204df:	cmp    esi,eax
  4204e1:	xor    esi,eax
  4204e3:	or     BYTE PTR [esi+0x3d],dh
  4204e6:	mov    dh,0x23
  4204e8:	(bad)  
  4204e9:	data16 ds aam 0x3d
  4204ed:	in     eax,dx
  4204ee:	dec    ebx
  4204ef:	ret    
  4204f0:	xor    BYTE PTR [ecx],0xf
  4204f3:	and    al,0xc8
  4204f5:	pop    ecx
  4204f6:	push   ebp
  4204f7:	rcl    DWORD PTR ds:0x9b774a08,1
  4204fd:	retf   0x9156
  420500:	(bad)  
  420501:	fisub  DWORD PTR [eax-0x39]
  420504:	call   0xafb0:0x803f154c
  42050b:	mov    al,0x7a
  42050d:	ds (bad) 
  42050f:	jo     0x4204df
  420511:	xchg   ecx,eax
  420512:	into   
  420513:	(bad)  
  420514:	enter  0x359f,0x2e
  420518:	dec    edi
  420519:	adc    DWORD PTR [ebp+0x48d80fb9],0xa98c39b9
  420523:	out    0x6b,eax
  420525:	mov    ds:0x6b5660c8,eax
  42052a:	push   es
  42052b:	stc    
  42052c:	mov    BYTE PTR [ecx+ebp*2-0x6e86c611],dl
  420533:	cmp    eax,0x9bd5edda
  420538:	arpl   WORD PTR [ebx],si
  42053a:	inc    esi
  42053b:	pop    ecx
  42053c:	(bad)  
  42053d:	sub    al,0xd2
  42053f:	retf   0xc1e3
  420542:	push   ebx
  420543:	adc    BYTE PTR [esi+0x2a17500b],bh
  420549:	scas   al,BYTE PTR es:[edi]
  42054a:	lds    edi,FWORD PTR [eax+0x2a]
  42054d:	retf   0xe23f
  420550:	and    cl,BYTE PTR [edx]
  420552:	mov    DWORD PTR [edx+0x31],ecx
  420555:	lods   al,BYTE PTR ds:[esi]
  420556:	add    DWORD PTR [eax],0xffffff8c
  420559:	xor    al,0x2c
  42055b:	jne    0x42055a
  42055d:	and    DWORD PTR [ebp-0xf],ebx
  420560:	xchg   edi,eax
  420561:	mov    edi,esp
  420563:	sbb    BYTE PTR [eax+0x72],0x83
  420567:	mov    ch,0xfa
  420569:	(bad)  
  42056a:	mov    esp,0xb8b12659
  42056f:	shl    edx,0x4b
  420572:	mov    ebx,edi
  420574:	shl    BYTE PTR [edx-0x1d],cl
  420577:	dec    ecx
  420578:	push   ecx
  420579:	aam    0xf
  42057b:	fs out 0x52,al
  42057e:	(bad)  
  42057f:	dec    ebx
  420580:	xchg   ecx,eax
  420581:	outs   dx,BYTE PTR es:[esi]
  420583:	loope  0x420599
  420585:	loope  0x420563
  420587:	test   eax,0x757762e5
  42058c:	into   
  42058d:	sub    dh,ah
  42058f:	stos   BYTE PTR es:[edi],al
  420590:	push   esi
  420591:	sbb    al,0x5a
  420593:	add    ebp,esi
  420595:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420596:	repnz das 
  420598:	pop    ebx
  420599:	das    
  42059a:	pop    edx
  42059b:	xor    eax,0x4a187dc1
  4205a0:	ja     0x420605
  4205a2:	ret    0xf513
  4205a5:	pusha  
  4205a6:	add    DWORD PTR [edi+0x28881c71],ecx
  4205ac:	test   DWORD PTR [edi+0x672ad4e6],esi
  4205b2:	(bad)  
  4205b3:	out    dx,eax
  4205b4:	pop    edx
  4205b5:	mov    ds:0xed3bd21e,eax
  4205ba:	and    ecx,edi
  4205bc:	arpl   WORD PTR [ebx+0x1f],dx
  4205bf:	int    0x39
  4205c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205c2:	jno    0x4205da
  4205c4:	pop    esp
  4205c5:	dec    DWORD PTR [esi+eax*2+0x3d8f44cc]
  4205cc:	mov    ds,WORD PTR [esi-0x1b]
  4205cf:	fcomp  DWORD PTR [ecx+edx*4+0x671559b9]
  4205d6:	stos   BYTE PTR es:[edi],al
  4205d7:	mov    eax,0xa6b45ab7
  4205dc:	repz push ds
  4205de:	enter  0x3b41,0x79
  4205e2:	mov    al,0x4d
  4205e4:	in     al,dx
  4205e5:	dec    ebx
  4205e6:	dec    esp
  4205e7:	imul   ebp,DWORD PTR [edi+ebp*1+0x18],0x2f
  4205ec:	(bad)  
  4205ed:	push   ebx
  4205ee:	aas    
  4205ef:	mov    al,0xa3
  4205f1:	aaa    
  4205f2:	in     eax,0x5e
  4205f4:	mov    ebp,0x995cbef9
  4205f9:	xchg   esi,eax
  4205fa:	ins    BYTE PTR es:[edi],dx
  4205fb:	mov    ch,0x1e
  4205fd:	push   edx
  4205fe:	push   ss
  4205ff:	cdq    
  420600:	gs inc esi
  420602:	sub    bl,BYTE PTR [esi+0x4c]
  420605:	push   0x3d
  420607:	pause  
  420609:	inc    edx
  42060a:	sub    al,BYTE PTR [ebx+0x223393b]
  420610:	cmp    eax,edi
  420612:	or     dh,bl
  420614:	sub    edi,ebx
  420616:	xchg   ebp,eax
  420617:	mov    WORD PTR [edi+0x20822e8a],cs
  42061d:	sbb    BYTE PTR [ecx],ah
  42061f:	push   edx
  420620:	pop    ebp
  420621:	inc    edi
  420622:	push   esi
  420623:	inc    dl
  420625:	idiv   DWORD PTR ds:0x75b45e16
  42062b:	cmp    eax,0x425899cb
  420630:	in     eax,dx
  420631:	sub    dh,ch
  420633:	pop    edx
  420634:	mov    BYTE PTR [esi-0x859250c],cl
  42063a:	aaa    
  42063b:	dec    edi
  42063c:	mov    BYTE PTR [edx-0x4aacf195],bh
  420642:	push   eax
  420643:	and    BYTE PTR [ebx+eiz*8],0x6
  420647:	jle    0x4205ca
  420649:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42064a:	inc    eax
  42064b:	test   BYTE PTR [edx-0x53b3985c],bl
  420651:	jns    0x4206b3
  420653:	jmp    0x4a1aa79c
  420658:	mov    dh,0x79
  42065a:	push   ds
  42065b:	pop    edx
  42065c:	jmp    0x420657
  42065e:	lods   eax,DWORD PTR ds:[esi]
  42065f:	pushf  
  420660:	inc    edx
  420661:	dec    esp
  420662:	xor    eax,esi
  420664:	out    0x5b,al
  420666:	xlat   BYTE PTR ds:[ebx]
  420667:	cs je  0x420685
  42066a:	pop    eax
  42066b:	and    DWORD PTR [edi],eax
  42066d:	adc    dh,BYTE PTR [eax-0x10]
  420670:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420671:	rcr    DWORD PTR [eax],cl
  420673:	outs   dx,DWORD PTR ds:[esi]
  420674:	popa   
  420675:	mov    ebp,0x94842ffb
  42067a:	test   BYTE PTR [ecx-0x3d78ec0f],ch
  420680:	adc    esi,DWORD PTR [eax]
  420682:	in     eax,dx
  420683:	arpl   WORD PTR [edx+0x570a118e],bp
  420689:	adc    eax,0x2911cd95
  42068e:	addr16 push cs
  420690:	sbb    eax,0x833c5736
  420695:	xor    eax,0x25fc70d
  42069a:	mov    esp,0x2537720c
  42069f:	call   0xd1234b96
  4206a4:	pop    ebp
  4206a5:	aas    
  4206a6:	lds    edx,FWORD PTR [eax+0x44]
  4206a9:	or     al,0xe2
  4206ab:	das    
  4206ac:	test   BYTE PTR [edi-0x19c586d],dl
  4206b2:	retf   0x38e8
  4206b5:	add    bh,BYTE PTR [edx+0x3267df52]
  4206bb:	adc    edx,DWORD PTR [edi+ebx*4]
  4206be:	add    ecx,DWORD PTR [eax+0x29]
  4206c1:	pop    ss
  4206c2:	sub    esi,edx
  4206c4:	xor    bh,BYTE PTR [esi+ebx*4]
  4206c7:	jp     0x4206dc
  4206c9:	popa   
  4206ca:	test   BYTE PTR [edx],al
  4206cc:	in     eax,dx
  4206cd:	mov    bl,0x67
  4206cf:	lods   al,BYTE PTR ds:[esi]
  4206d0:	jmp    0x904359f5
  4206d5:	cmp    esp,DWORD PTR [ebp-0x64]
  4206d8:	cdq    
  4206d9:	not    ah
  4206db:	fmul   QWORD PTR [esi-0x740b3214]
  4206e1:	lds    esp,FWORD PTR [edx-0x47]
  4206e4:	or     al,0x4f
  4206e6:	ins    BYTE PTR es:[edi],dx
  4206e7:	push   esi
  4206e8:	daa    
  4206e9:	sbb    eax,0x5635533e
  4206ee:	jnp    0x420716
  4206f0:	mov    ds:0xaf6a2147,eax
  4206f5:	push   ss
  4206f6:	cmp    eax,esi
  4206f8:	fisubr WORD PTR [eax+ebp*1+0x64]
  4206fc:	and    DWORD PTR [eax-0xd828277],edi
  420702:	adc    DWORD PTR [edx+0x12],eax
  420705:	arpl   ax,dx
  420707:	mov    DWORD PTR [esi-0x656a0753],ebp
  42070d:	inc    edx
  42070e:	pop    eax
  42070f:	push   edx
  420710:	jmp    0xb2802706
  420715:	add    esi,edx
  420717:	arpl   cx,dx
  420719:	push   ecx
  42071a:	je     0x4206d4
  42071c:	mov    ds:0x6747501c,eax
  420721:	retf   
  420722:	dec    edi
  420723:	test   al,0x55
  420725:	pop    esi
  420726:	ja     0x42074b
  420728:	sbb    dl,BYTE PTR [eax-0x60]
  42072b:	inc    eax
  42072c:	arpl   WORD PTR cs:[eax+0xa6079fa],dx
  420733:	and    BYTE PTR [edi+0x45973f4e],ch
  420739:	in     eax,0x44
  42073b:	push   ds
  42073c:	cmc    
  42073d:	inc    esp
  42073e:	js     0x4206c2
  420740:	out    0xe8,al
  420742:	fisttp DWORD PTR [ebx]
  420744:	loope  0x420731
  420746:	ret    
  420747:	adc    bl,al
  420749:	jmp    0x6921a01
  42074e:	push   eax
  42074f:	hlt    
  420750:	pusha  
  420751:	cmp    eax,0x844d997c
  420756:	cli    
  420757:	(bad)  [esi-0x71]
  42075a:	fist   DWORD PTR [ebp+0x79]
  42075d:	gs add al,0xe7
  420760:	retf   0x3a82
  420763:	mov    ds:0x584b886a,eax
  420768:	adc    DWORD PTR [ebx+0x383930],0xffffffc9
  42076f:	adc    dl,bh
  420771:	clc    
  420772:	jecxz  0x420756
  420774:	adc    DWORD PTR [ebx-0x52],edi
  420777:	xchg   esi,eax
  420778:	mov    al,ds:0xe0979a69
  42077d:	inc    eax
  42077e:	xlat   BYTE PTR ds:[ebx]
  42077f:	xchg   esi,eax
  420780:	jns    0x4207d0
  420782:	and    eax,0xe46f267c
  420787:	sbb    cl,bl
  420789:	jle    0x420793
  42078b:	jmp    0x42077b
  42078d:	jecxz  0x4207f7
  42078f:	push   edx
  420790:	and    al,0x28
  420792:	das    
  420793:	pop    esp
  420794:	pop    eax
  420795:	in     eax,0x40
  420797:	pop    edi
  420798:	daa    
  420799:	xor    ebx,DWORD PTR [ecx+0x1ae3ac52]
  42079f:	fisub  WORD PTR [esi+0x35efe9ac]
  4207a5:	addr16 or esi,ebx
  4207a8:	out    dx,eax
  4207a9:	add    dh,bh
  4207ab:	cmp    esi,DWORD PTR [ebx+0x739c4423]
  4207b1:	fcom   QWORD PTR [esi]
  4207b3:	outs   dx,DWORD PTR ds:[esi]
  4207b4:	inc    ebp
  4207b5:	test   al,0x6c
  4207b7:	les    edi,FWORD PTR [edx-0x5a]
  4207ba:	jp     0x420751
  4207bc:	mov    ch,ah
  4207be:	shl    DWORD PTR [esi+eiz*4+0x3be53455],1
  4207c5:	push   es
  4207c6:	sub    BYTE PTR [ecx+0x286da8bc],dh
  4207cc:	dec    esp
  4207cd:	adc    DWORD PTR [edx],esp
  4207cf:	add    ecx,ebx
  4207d1:	jnp    0x4207ea
  4207d3:	fcmovne st,st(5)
  4207d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207d6:	jmp    0x8fa0:0x48d77609
  4207dd:	hlt    
  4207de:	stos   DWORD PTR es:[edi],eax
  4207df:	xor    edx,0x11
  4207e2:	daa    
  4207e3:	jo     0x420814
  4207e5:	lock dec ebp
  4207e7:	scas   al,BYTE PTR es:[edi]
  4207e8:	or     BYTE PTR [ecx-0x29],0x1e
  4207ec:	repnz test DWORD PTR [ecx],ebp
  4207ef:	inc    esp
  4207f0:	test   DWORD PTR [ecx-0x24],ecx
  4207f3:	adc    al,BYTE PTR [ecx+0x10e08dcc]
  4207f9:	cli    
  4207fa:	add    al,0x3a
  4207fc:	scas   eax,DWORD PTR es:[edi]
  4207fd:	ja     0x4207a1
  4207ff:	and    DWORD PTR [edx],0x4a
  420802:	ins    DWORD PTR es:[edi],dx
  420803:	sub    eax,0x363c9478
  420808:	ror    BYTE PTR [esi+0x1a],1
  42080b:	mov    eax,ds:0xe95225d9
  420810:	add    DWORD PTR [esi-0x57d01e2c],ecx
  420816:	popa   
  420817:	mov    ds,WORD PTR [esi+0x1f91c80]
  42081d:	repnz or esi,DWORD PTR [ebx+0x32d2a464]
  420824:	imul   ebp,DWORD PTR [edi-0x29],0x28f1b61e
  42082b:	push   ss
  42082c:	cmp    BYTE PTR [ebp-0x47],ah
  42082f:	jle    0x4208a3
  420831:	enter  0x53ab,0xb8
  420835:	ds push esi
  420837:	test   eax,0x96c1385e
  42083c:	dec    ebx
  42083d:	retf   
  42083e:	jbe    0x4208a2
  420840:	iret   
  420841:	mov    edx,0x73247b77
  420846:	jle    0x4208a7
  420848:	push   ds
  420849:	ficomp WORD PTR [ebx-0x47131c20]
  42084f:	add    DWORD PTR [ecx-0x1923a0ab],0xe4ce8e3c
  420859:	sbb    bl,bl
  42085b:	call   0xb13ada95
  420860:	es cdq 
  420862:	dec    esp
  420863:	push   eax
  420864:	push   0xffffff9c
  420866:	xchg   esp,eax
  420867:	iret   
  420868:	pop    esi
  420869:	sbb    DWORD PTR [ecx*2+0x5d3ae62a],0xd0e05817
  420874:	add    DWORD PTR [ebp-0x4d],eax
  420877:	or     ebx,DWORD PTR [eiz*4+0x50ccd425]
  42087e:	xor    ecx,DWORD PTR ds:0x21dbc5d3
  420884:	xor    eax,0x6e002642
  420889:	adc    BYTE PTR [edi+eax*4+0x123da1ed],ah
  420890:	imul   ebx,DWORD PTR [edx+0x35af502],0x3ce01be4
  42089a:	adc    eax,0xdc95b241
  42089f:	(bad)  
  4208a0:	rol    BYTE PTR [esp+ebp*2-0x74a12d00],1
  4208a7:	adc    DWORD PTR [ecx+0x7b7b4cd8],0xfb52ac3d
  4208b1:	jmp    0x4045:0x262ed13a
  4208b8:	jg     0x4208e6
  4208ba:	dec    edx
  4208bb:	test   eax,0x9ab8d1a4
  4208c0:	mov    cl,0x6f
  4208c2:	pop    ecx
  4208c3:	gs jo  0x4208b0
  4208c6:	dec    eax
  4208c7:	into   
  4208c8:	sub    al,0x5e
  4208ca:	mov    ecx,DWORD PTR gs:[edi+0x72]
  4208ce:	jnp    0x42094d
  4208d0:	pop    edi
  4208d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208d2:	mov    ebp,0x78a0b677
  4208d7:	test   al,0xa2
  4208d9:	mov    ebp,0xdf741dc4
  4208de:	pop    edx
  4208df:	ret    
  4208e0:	leave  
  4208e1:	sbb    dh,0x89
  4208e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208e5:	iret   
  4208e6:	xchg   edi,eax
  4208e7:	inc    esp
  4208e8:	loope  0x4208bb
  4208ea:	fdiv   st,st(2)
  4208ec:	loope  0x420874
  4208ee:	loop   0x42091d
  4208f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208f1:	test   eax,0x3b193130
  4208f6:	dec    ebp
  4208f7:	imul   edi,DWORD PTR [ecx+0x6c],0x4d471c44
  4208fe:	fcmovnb st,st(2)
  420900:	sahf   
  420901:	fsubr  QWORD PTR [edx]
  420903:	jnp    0x4208fb
  420905:	jecxz  0x420901
  420907:	out    dx,eax
  420908:	or     edx,DWORD PTR ds:0x382ac834
  42090e:	pop    ds
  42090f:	sub    esi,DWORD PTR ds:0xc0bc2648
  420915:	call   0xd688:0xde441be
  42091c:	ret    0x2efe
  42091f:	mov    eax,0xc873fc77
  420924:	dec    ebp
  420925:	sti    
  420926:	and    DWORD PTR [esi+0xe],edx
  420929:	jmp    0x5ec96de6
  42092e:	jmp    0x10da9a13
  420933:	xor    al,0x83
  420935:	and    DWORD PTR [eax+0x72],0x9a4762eb
  42093c:	into   
  42093d:	mov    al,ds:0xbd50c371
  420942:	xchg   edx,eax
  420943:	jae    0x4208db
  420945:	xchg   esp,eax
  420946:	(bad)  
  420947:	mov    ch,ah
  420949:	mov    ch,0x2d
  42094b:	push   cs
  42094c:	mov    cl,0x24
  42094e:	cmp    DWORD PTR [edx],esp
  420950:	push   esp
  420951:	push   es
  420952:	jp     0x4209ab
  420954:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420955:	out    0xca,al
  420957:	mov    bh,0x2f
  420959:	xchg   esi,eax
  42095a:	push   esp
  42095b:	push   cs
  42095c:	leave  
  42095d:	in     eax,dx
  42095e:	imul   ecx,DWORD PTR [ebp-0x762e7f7f],0xfffffffd
  420965:	xlat   BYTE PTR ds:[ebx]
  420966:	mov    eax,ds:0x2cec1d85
  42096b:	retf   0xe1c9
  42096e:	popf   
  42096f:	xor    bl,BYTE PTR [edx+0x21]
  420972:	pop    ecx
  420973:	ficomp WORD PTR [ebx+0x6629f4b]
  420979:	outs   dx,BYTE PTR ds:[esi]
  42097a:	or     al,0x76
  42097c:	(bad)  
  42097d:	in     eax,0x82
  42097f:	sbb    DWORD PTR [ebp+0x15],ebx
  420982:	and    bl,BYTE PTR [ebx]
  420984:	mov    dh,0x62
  420986:	add    BYTE PTR [esi+0x2f761244],ch
  42098c:	push   esp
  42098d:	pop    edi
  42098e:	aad    0x17
  420990:	jmp    0x4209c6
  420992:	cmp    edx,DWORD PTR [edx+edi*2+0x697cf092]
  420999:	sub    ah,al
  42099b:	into   
  42099c:	xor    ch,ah
  42099e:	arpl   WORD PTR [esi+0x38],bx
  4209a1:	xor    eax,0xa1476ac2
  4209a6:	aad    0x60
  4209a8:	(bad)  
  4209a9:	xor    eax,esp
  4209ab:	jmp    0xdd7f:0xecabd0ea
  4209b2:	xchg   ecx,eax
  4209b3:	aas    
  4209b4:	or     BYTE PTR [ebx],0x28
  4209b7:	jae    0x420a1b
  4209b9:	call   DWORD PTR [ecx+0x7c3b1563]
  4209bf:	sub    bh,cl
  4209c1:	pop    es
  4209c2:	mov    ecx,0x459aae8b
  4209c7:	add    BYTE PTR [eax+0x7c],ch
  4209ca:	in     al,0xe4
  4209cc:	push   ecx
  4209cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209ce:	fld    QWORD PTR [ebx]
  4209d0:	div    DWORD PTR [ebp+0x1bb43b37]
  4209d6:	jb     0x4209b4
  4209d8:	push   eax
  4209d9:	jmp    0x1396cf69
  4209de:	sbb    eax,0x8c5bfc00
  4209e3:	out    0x59,al
  4209e5:	gs dec eax
  4209e7:	sbb    BYTE PTR [ecx],ah
  4209e9:	cmp    DWORD PTR [ebx+0x2106bbba],0xffffffa1
  4209f0:	adc    esi,esp
  4209f2:	push   0x2e625934
  4209f7:	shl    DWORD PTR ss:[ebp+0x3887936a],1
  4209fe:	inc    edx
  4209ff:	out    dx,al
  420a00:	mov    dh,0x3b
  420a02:	lds    edi,FWORD PTR [ecx]
  420a04:	inc    ecx
  420a05:	ja     0x4209a0
  420a07:	mov    al,0x70
  420a09:	mov    esi,0x41919067
  420a0e:	pop    eax
  420a0f:	cdq    
  420a10:	xor    edx,DWORD PTR [eax]
  420a12:	jmp    0x4209d8
  420a14:	mov    al,ds:0xd1768bd3
  420a19:	dec    eax
  420a1a:	add    BYTE PTR [edx+0x38],dl
  420a1d:	es pop eax
  420a1f:	rol    DWORD PTR [ebp+0x369adac1],1
  420a25:	sub    DWORD PTR [ebx],esi
  420a27:	stos   DWORD PTR es:[edi],eax
  420a28:	jns    0x420a64
  420a2a:	data16 (bad) 
  420a2c:	das    
  420a2d:	pop    es
  420a2e:	mov    ds:0xa8b5c022,al
  420a33:	mov    ch,dl
  420a35:	sbb    bl,BYTE PTR [ebp-0x1c7c3ce8]
  420a3b:	mov    al,ds:0xfb3aec04
  420a40:	adc    al,0x9
  420a42:	stos   BYTE PTR es:[edi],al
  420a43:	inc    BYTE PTR [edx+0x31]
  420a46:	fcom   QWORD PTR [ebx+ebx*2-0x7b]
  420a4a:	mov    edi,0x5fe1fb83
  420a4f:	mov    ds:0x1c1f16a8,al
  420a54:	mov    WORD PTR [ebp-0x14],?
  420a57:	cmp    cl,BYTE PTR [edx+edi*1+0x77]
  420a5b:	push   esi
  420a5c:	pop    esp
  420a5d:	test   eax,0xd873e45c
  420a62:	in     eax,dx
  420a63:	in     al,0xc9
  420a65:	sub    al,0x11
  420a67:	shl    DWORD PTR [edx+0x41],0x64
  420a6b:	and    ah,BYTE PTR [esi]
  420a6d:	out    dx,eax
  420a6e:	in     eax,dx
  420a6f:	cld    
  420a70:	mov    dh,0x8
  420a72:	mov    ch,0x39
  420a74:	popa   
  420a75:	lock mov BYTE PTR [edx],bl
  420a78:	shr    eax,cl
  420a7a:	pop    esi
  420a7b:	mov    ah,0x71
  420a7d:	adc    ecx,DWORD PTR [ecx+eax*1+0x12]
  420a81:	pop    edi
  420a82:	pop    esi
  420a83:	add    ah,BYTE PTR [ebx+0x15]
  420a86:	add    DWORD PTR [ecx-0x2],ecx
  420a89:	popf   
  420a8a:	lock cmp bh,BYTE PTR [esi]
  420a8d:	cwde   
  420a8e:	jle    0x420abd
  420a90:	cmc    
  420a91:	xchg   DWORD PTR [ebp-0x7c603483],esp
  420a97:	call   FWORD PTR [ebx-0x37ae38c4]
  420a9d:	push   0xffffff80
  420a9f:	cli    
  420aa0:	add    al,0x90
  420aa2:	stos   BYTE PTR es:[edi],al
  420aa3:	inc    ebx
  420aa4:	xor    DWORD PTR [esi],0x7e
  420aa7:	stos   BYTE PTR es:[edi],al
  420aa8:	xchg   DWORD PTR [eax*4-0x246eeb5],esp
  420aaf:	pushf  
  420ab0:	cwde   
  420ab1:	sub    DWORD PTR [ebx*1-0x2f765211],esp
  420ab8:	cmp    esp,DWORD PTR [ebp+0x48d197a4]
  420abe:	jecxz  0x420aa4
  420ac0:	dec    eax
  420ac1:	cmp    eax,0xb4db4271
  420ac6:	out    dx,eax
  420ac7:	shl    BYTE PTR [edx-0x5c65cafd],0x64
  420ace:	(bad)  
  420ad0:	int3   
  420ad1:	and    al,0x2e
  420ad3:	std    
  420ad4:	test   dh,bh
  420ad6:	or     DWORD PTR [ebp-0x2c4d12e8],ebp
  420adc:	push   0xffffffbb
  420ade:	push   ebx
  420adf:	pushf  
  420ae0:	out    0x2d,al
  420ae2:	arpl   WORD PTR [eax],ax
  420ae4:	stos   BYTE PTR es:[edi],al
  420ae5:	mov    ebx,0x9d6584a9
  420aea:	mov    bl,0x5f
  420aec:	sub    esi,DWORD PTR [eax-0x3dfc2221]
  420af2:	xlat   BYTE PTR ds:[ebx]
  420af3:	mov    edi,0x23ac6d7d
  420af8:	add    al,0xa2
  420afa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420afb:	jge    0x420a90
  420afd:	les    edi,FWORD PTR [ecx-0x681ed79e]
  420b03:	xchg   esi,eax
  420b04:	out    0x89,al
  420b06:	nop
  420b07:	out    dx,al
  420b08:	in     al,dx
  420b09:	cdq    
  420b0a:	jne    0x420b5f
  420b0c:	jns    0x420b04
  420b0e:	aam    0xc7
  420b10:	bound  ebx,QWORD PTR [ebp+0x10816f1f]
  420b16:	leave  
  420b17:	xor    eax,0xb97ecde7
  420b1c:	push   ebp
  420b1d:	(bad)  
  420b1e:	jp     0x420ab5
  420b20:	call   0xf301:0x7f92280d
  420b27:	(bad)  
  420b28:	mov    esi,0x6da64c5c
  420b2d:	dec    ecx
  420b2e:	inc    eax
  420b2f:	mov    eax,0xe65a8d24
  420b34:	sub    DWORD PTR [edx+0x3102feef],ecx
  420b3a:	aam    0xb1
  420b3c:	xor    bh,BYTE PTR [ecx+0x4c3793cc]
  420b42:	retf   0x7fd3
  420b45:	sub    eax,0xad51df0e
  420b4a:	add    cl,BYTE PTR [ebp+0x59f1af79]
  420b50:	dec    eax
  420b51:	dec    esp
  420b52:	mov    ch,0x3f
  420b54:	(bad)  
  420b55:	lock ds scas al,BYTE PTR es:[edi]
  420b58:	(bad)  
  420b5a:	cmp    ah,bh
  420b5c:	push   edi
  420b5d:	or     al,0x2e
  420b5f:	call   0x223115
  420b64:	push   eax
  420b65:	sub    eax,0x17b4e0d1
  420b6a:	mov    dl,0x72
  420b6c:	(bad)  
  420b6d:	pop    ebx
  420b6e:	dec    ebp
  420b6f:	add    al,0xa5
  420b71:	mov    ch,0x4f
  420b73:	xchg   edx,eax
  420b74:	xchg   DWORD PTR [eax+0x3c141063],ebp
  420b7a:	mov    al,ds:0xc0336e25
  420b7f:	rcr    DWORD PTR [edx],1
  420b81:	mov    ebx,0x65786748
  420b86:	cli    
  420b87:	inc    edi
  420b88:	add    al,0x7d
  420b8a:	aaa    
  420b8b:	xchg   ebp,eax
  420b8c:	lock (bad) 
  420b8e:	pusha  
  420b8f:	outs   dx,DWORD PTR ds:[esi]
  420b90:	xchg   BYTE PTR [edi],ch
  420b92:	push   0x15881ab3
  420b97:	cmp    eax,0xeab5d00
  420b9c:	or     esp,DWORD PTR [edi-0x291b0ad2]
  420ba2:	xor    al,0x66
  420ba4:	inc    esi
  420ba5:	je     0x420bde
  420ba7:	mov    ecx,0x9cbc343
  420bac:	out    0xf,eax
  420bae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420baf:	shl    BYTE PTR [ecx+0x63],0xbe
  420bb3:	jnp    0x420c03
  420bb5:	ja     0x420bf7
  420bb7:	mov    eax,ds:0x19dedf2f
  420bbc:	fs mov ah,0x2b
  420bbf:	dec    eax
  420bc0:	lea    ebp,[edi+0x3088899f]
  420bc6:	aad    0xe3
  420bc8:	pop    edi
  420bc9:	jae    0x420c45
  420bcb:	or     cl,ah
  420bcd:	mov    ah,0xd8
  420bcf:	pusha  
  420bd0:	shl    DWORD PTR [eax-0x2f],0x9a
  420bd4:	lods   eax,DWORD PTR ds:[esi]
  420bd5:	inc    edi
  420bd6:	mov    esi,0xd9672601
  420bdb:	mov    ch,0x5c
  420bdd:	lods   al,BYTE PTR ds:[esi]
  420bde:	retf   
  420bdf:	pop    esi
  420be0:	mov    esi,0xeb8896ee
  420be5:	pop    es
  420be6:	in     al,dx
  420be7:	pop    edi
  420be8:	mov    esi,0x81211ff2
  420bed:	mov    DWORD PTR [ecx+0x3ee8273c],esp
  420bf3:	push   es
  420bf4:	jmp    0x420bc1
  420bf6:	push   edi
  420bf7:	fnstenv [eax+0x28]
  420bfa:	cdq    
  420bfb:	cmc    
  420bfc:	arpl   WORD PTR [edi],sp
  420bfe:	or     BYTE PTR [esi+0x17e1c257],ah
  420c04:	mov    edx,0xd1e2d621
  420c09:	mov    ds:0xfea60362,al
  420c0e:	jmp    0xa143:0x8dc62c69
  420c15:	(bad)  
  420c16:	push   esi
  420c18:	fndisi(8087 only) 
  420c1a:	xchg   ebp,eax
  420c1b:	push   eax
  420c1c:	js     0x420c4f
  420c1e:	(bad)  
  420c1f:	out    0xe6,al
  420c21:	sub    al,0xbb
  420c23:	stc    
  420c24:	daa    
  420c25:	adc    al,0xb9
  420c27:	fiadd  WORD PTR [ecx+0x239a9773]
  420c2d:	fs add al,0xe8
  420c30:	hlt    
  420c31:	sub    al,0xa8
  420c33:	cmp    eax,0xf54d98c6
  420c38:	jmp    0x31c0a615
  420c3d:	mov    eax,0xd9d19cce
  420c42:	pop    es
  420c43:	jno    0x420c22
  420c45:	int3   
  420c46:	in     eax,0xe8
  420c48:	sahf   
  420c49:	push   es
  420c4a:	sub    BYTE PTR [eax],dl
  420c4c:	pop    esi
  420c4d:	pop    edx
  420c4e:	test   eax,0xd63d3292
  420c54:	aas    
  420c55:	xchg   ecx,eax
  420c56:	push   0x79
  420c58:	inc    edi
  420c59:	arpl   WORD PTR fs:[ebx+0x64403f57],bx
  420c60:	cli    
  420c61:	hlt    
  420c62:	and    dh,BYTE PTR [edx]
  420c64:	mov    ds:0x9859f8b,al
  420c69:	rol    BYTE PTR [edx],cl
  420c6b:	jle    0x420c46
  420c6d:	dec    ecx
  420c6e:	jmp    DWORD PTR [ecx-0x737fe051]
  420c74:	add    eax,ebp
  420c76:	cmp    edx,0x13
  420c79:	das    
  420c7a:	pop    esp
  420c7b:	sub    DWORD PTR [ebx+0x12d95814],edx
  420c81:	and    ch,BYTE PTR [edi+0x49]
  420c84:	js     0x420c81
  420c86:	or     DWORD PTR [ebx+0x49856242],ebp
  420c8c:	sbb    edx,DWORD PTR [esi]
  420c8e:	or     BYTE PTR [eax-0x27ac788a],0xce
  420c95:	dec    edi
  420c96:	xor    bl,BYTE PTR ds:0x866cdc3c
  420c9c:	pop    ebx
  420c9d:	pop    edx
  420c9e:	test   DWORD PTR [edi-0x1d],0x8feb27a2
  420ca5:	jno    0x420c75
  420ca7:	xchg   edi,eax
  420ca8:	adc    al,0x1e
  420caa:	rcr    DWORD PTR [ecx-0x29],1
  420cad:	add    al,0x62
  420cb0:	and    BYTE PTR [ecx-0x38],dh
  420cb3:	and    al,0x6
  420cb5:	rep ins DWORD PTR es:[edi],dx
  420cb7:	aad    0xad
  420cb9:	adc    ecx,DWORD PTR [ebp-0x16241bcd]
  420cbf:	test   DWORD PTR [eax],ecx
  420cc1:	pop    eax
  420cc2:	retf   
  420cc3:	push   cs
  420cc4:	fstp   TBYTE PTR [ecx+eax*1]
  420cc7:	xor    cl,BYTE PTR [ecx-0x1d9334db]
  420ccd:	sbb    DWORD PTR [edi+0x5ecdac6e],ecx
  420cd3:	cmp    edx,edx
  420cd5:	push   ds
  420cd6:	lock scas eax,DWORD PTR es:[edi]
  420cd8:	push   ecx
  420cd9:	jl     0x420d26
  420cdb:	into   
  420cdc:	stc    
  420cdd:	fnstenv [ebx-0x5c]
  420ce0:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ce2:	bound  edx,QWORD PTR ds:0x5bfea155
  420ce8:	sub    al,0x8
  420cea:	and    edi,esp
  420cec:	jne    0x420d20
  420cee:	sbb    BYTE PTR [esp+edi*8],dl
  420cf1:	int    0x7e
  420cf3:	add    dh,ah
  420cf5:	pop    ecx
  420cf7:	inc    esp
  420cf8:	repz xlat BYTE PTR ds:[ebx]
  420cfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420cfb:	aad    0xc
  420cfd:	fsubr  QWORD PTR [eax-0x1e8b74e7]
  420d03:	sub    BYTE PTR [ebx-0x1],cl
  420d06:	or     al,0xc5
  420d08:	sbb    BYTE PTR [ebp-0x28],ah
  420d0b:	sbb    DWORD PTR [edx+0x4c],0x57
  420d0f:	dec    eax
  420d10:	les    eax,FWORD PTR [ebp+0x6f]
  420d13:	add    eax,0xf0c1928c
  420d18:	and    edx,DWORD PTR [eax+0x13]
  420d1b:	ja     0x420cb9
  420d1d:	sub    DWORD PTR [esi+ecx*1-0x11d42990],eax
  420d24:	(bad)  
  420d25:	adc    eax,0xfa953e60
  420d2a:	xor    BYTE PTR [ebx-0x67],0xf
  420d2e:	mov    ecx,edx
  420d30:	adc    eax,0xcbdece9a
  420d36:	test   BYTE PTR [esi-0x1e3c2119],0x72
  420d3d:	addr16 fwait
  420d3f:	or     BYTE PTR [ebx],dl
  420d41:	cmp    DWORD PTR [edi-0x31],0xf7421589
  420d48:	fild   QWORD PTR [ebp+0x7b]
  420d4b:	pop    eax
  420d4c:	stos   DWORD PTR es:[edi],eax
  420d4d:	dec    esi
  420d4e:	iret   
  420d4f:	fidivr WORD PTR [eax+0x3]
  420d52:	pop    es
  420d53:	add    bh,BYTE PTR [ebx]
  420d55:	lock (bad) 
  420d57:	(bad)  
  420d58:	cwde   
  420d59:	arpl   si,ax
  420d5b:	addr16 sub eax,0x7925f7a8
  420d61:	ins    BYTE PTR es:[edi],dx
  420d62:	sbb    al,0x66
  420d64:	cdq    
  420d65:	hlt    
  420d66:	inc    eax
  420d67:	mov    ecx,0xd91b8c97
  420d6c:	outs   dx,DWORD PTR ds:[esi]
  420d6d:	cmp    edx,esp
  420d6f:	sbb    eax,0x688ecc83
  420d74:	(bad)  
  420d75:	enter  0xb658,0x78
  420d79:	mov    al,ds:0x24c5e699
  420d7e:	dec    edx
  420d7f:	test   eax,0xc70485a5
  420d84:	loop   0x420db8
  420d86:	arpl   WORD PTR [ecx],si
  420d88:	cld    
  420d89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d8a:	cwde   
  420d8b:	sbb    bl,ch
  420d8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d8e:	pop    ebp
  420d8f:	mov    ecx,0x8dab2f40
  420d94:	repnz pop es
  420d96:	xor    ecx,DWORD PTR [edx-0x74e6b435]
  420d9c:	and    ebx,DWORD PTR [edx-0xf]
  420d9f:	mov    edx,0xd98a307a
  420da4:	(bad)  
  420da5:	lods   eax,DWORD PTR ds:[esi]
  420da6:	jp     0x420dc0
  420da8:	fbstp  TBYTE PTR [edx+0x3f]
  420dab:	loope  0x420dcd
  420dad:	sub    al,BYTE PTR [edi*4-0x448953a]
  420db4:	out    dx,al
  420db5:	popa   
  420db6:	cs jge 0x420de7
  420db9:	adc    BYTE PTR [ebx-0x74],ah
  420dbc:	cs in  al,dx
  420dbe:	out    dx,eax
  420dbf:	pop    esp
  420dc0:	pop    eax
  420dc1:	loop   0x420d4d
  420dc3:	xchg   ebp,eax
  420dc4:	(bad)  
  420dc5:	lods   al,BYTE PTR ds:[esi]
  420dc6:	add    dh,bh
  420dc8:	icebp  
  420dc9:	out    dx,al
  420dca:	in     eax,0x54
  420dcc:	push   ebx
  420dcd:	lahf   
  420dce:	call   0x97a0:0x73d3627a
  420dd5:	mov    dh,0xb4
  420dd7:	inc    ecx
  420dd8:	ffreep st(6)
  420dda:	sti    
  420ddb:	scas   al,BYTE PTR es:[edi]
  420ddc:	call   0xdd4a:0x75f13d43
  420de3:	xor    eax,esi
  420de5:	call   0xcd97:0x2d2a4c43
  420dec:	xor    bh,BYTE PTR [edx-0x71ef0696]
  420df2:	outs   dx,DWORD PTR ds:[esi]
  420df3:	pop    ebp
  420df4:	jge    0x420e2c
  420df6:	ins    BYTE PTR es:[edi],dx
  420df7:	push   ebx
  420df8:	mov    ds:0x6121ed6e,eax
  420dfd:	rol    BYTE PTR [eax],cl
  420dff:	and    al,0x6d
  420e01:	inc    ecx
  420e02:	add    esi,edi
  420e04:	in     al,0xc6
  420e06:	neg    DWORD PTR [ecx+0x3e801a8a]
  420e0c:	cmc    
  420e0d:	bound  edi,QWORD PTR [eax+0x54]
  420e10:	mov    esp,0xd7610ece
  420e15:	imul   esp,edi,0x2f
  420e18:	mov    dh,0xc4
  420e1a:	jge    0x420db5
  420e1c:	clc    
  420e1d:	add    BYTE PTR [eax],dl
  420e1f:	mov    ebx,0xa77c21c0
  420e24:	mov    edi,0x78d4bc30
  420e29:	jge    0x420e1d
  420e2b:	int3   
  420e2c:	inc    edi
  420e2d:	push   edi
  420e2e:	sub    eax,esp
  420e30:	dec    edx
  420e31:	pop    ecx
  420e32:	retf   
  420e33:	(bad)  
  420e34:	pop    eax
  420e35:	or     edi,DWORD PTR [eax-0x3879b7ef]
  420e3b:	xchg   edi,eax
  420e3c:	jmp    0xc5aa:0x4afc801f
  420e43:	jne    0x420e86
  420e45:	es adc ebx,edx
  420e48:	xchg   edx,eax
  420e49:	inc    ebp
  420e4a:	call   FWORD PTR [esi+0x149ec040]
  420e50:	dec    ecx
  420e51:	aad    0x3e
  420e53:	cld    
  420e54:	push   ds
  420e55:	jmp    0x4e78083c
  420e5a:	imul   esp,DWORD PTR [ebx-0x77],0xab2280b5
  420e61:	inc    ebx
  420e62:	loope  0x420e00
  420e64:	pop    eax
  420e65:	and    eax,0x8f5c1325
  420e6a:	pushf  
  420e6b:	mov    edx,0xa06b7bbf
  420e70:	mov    ebp,0x3fc0eb5f
  420e75:	mov    dh,0xd
  420e77:	not    DWORD PTR [esi+0x69]
  420e7a:	xor    al,0x71
  420e7c:	ins    BYTE PTR es:[edi],dx
  420e7d:	pusha  
  420e7e:	push   ebx
  420e7f:	sub    edx,eax
  420e81:	push   ss
  420e82:	test   esi,ecx
  420e84:	ret    
  420e85:	jmp    0x7217:0x453b490d
  420e8c:	mov    esp,0x6732d750
  420e91:	mov    edi,DWORD PTR [esi]
  420e93:	stos   BYTE PTR es:[edi],al
  420e94:	or     BYTE PTR [ebp-0x4b],dh
  420e97:	sbb    BYTE PTR [edx+edx*1-0x5e8a053d],ah
  420e9e:	popa   
  420e9f:	mov    cl,dh
  420ea1:	outs   dx,DWORD PTR ds:[esi]
  420ea2:	pushf  
  420ea3:	adc    DWORD PTR [ecx],0xe30ca0b1
  420ea9:	stos   BYTE PTR es:[edi],al
  420eaa:	fs retf 
  420eac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ead:	sti    
  420eae:	jmp    0x420eb1
  420eb0:	jp     0x420e95
  420eb2:	in     al,dx
  420eb3:	push   esi
  420eb4:	add    BYTE PTR [ebx+0x6cdbf5a8],ch
  420eba:	and    DWORD PTR [esp+edx*1+0x1fbd7382],edi
  420ec1:	enter  0x6a32,0xba
  420ec5:	xchg   edi,eax
  420ec6:	loop   0x420e50
  420ec8:	out    dx,al
  420ec9:	mov    ch,0x3d
  420ecb:	jg     0x420f49
  420ecd:	fwait
  420ece:	sar    DWORD PTR [eax+ebp*8+0x651ccc1b],0x58
  420ed6:	mov    edi,0xf905d55
  420edb:	shl    DWORD PTR [eax],cl
  420edd:	out    dx,al
  420ede:	xchg   esp,eax
  420edf:	or     al,0xe8
  420ee1:	retf   
  420ee2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ee3:	cmc    
  420ee4:	xor    esp,DWORD PTR [ecx+0x15f52e5f]
  420eea:	dec    ebp
  420eeb:	dec    edx
  420eec:	add    esp,DWORD PTR [edi]
  420eee:	mov    ebp,0xe94e0887
  420ef3:	out    dx,eax
  420ef4:	or     al,0x98
  420ef6:	xor    bl,cl
  420ef8:	cmc    
  420ef9:	mov    ecx,0x4ca5c436
  420efe:	pop    ebx
  420eff:	mov    edi,ecx
  420f01:	cs int 0x37
  420f04:	pop    ss
  420f05:	js     0x420f3a
  420f07:	xchg   edi,eax
  420f08:	add    al,0x1f
  420f0a:	inc    edi
  420f0b:	add    bl,BYTE PTR [esi-0x37e3d4a4]
  420f11:	xchg   BYTE PTR [edx],dh
  420f13:	dec    eax
  420f14:	mov    dl,0xe2
  420f16:	retf   
  420f17:	mov    ebp,ebx
  420f19:	out    dx,al
  420f1a:	mov    al,ds:0xac18c06
  420f1f:	jecxz  0x420f2b
  420f21:	call   0xb627:0x324d470e
  420f28:	aaa    
  420f29:	jne    0x420eac
  420f2b:	cmp    al,BYTE PTR [edx+0x1d]
  420f2e:	mov    al,ds:0xe81cf561
  420f33:	cmp    ebp,DWORD PTR [edi]
  420f35:	add    BYTE PTR [ebp-0x35],0xa6
  420f39:	mov    eax,DWORD PTR [eax+eiz*8]
  420f3c:	out    0xae,eax
  420f3e:	ins    BYTE PTR es:[edi],dx
  420f3f:	adc    esi,DWORD PTR [ecx]
  420f41:	call   0x12e94399
  420f46:	add    bh,al
  420f48:	or     ebp,ebx
  420f4a:	sbb    dh,bl
  420f4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f4d:	ffreep st(3)
  420f4f:	out    dx,eax
  420f50:	push   ebp
  420f51:	jns    0x420f39
  420f53:	leave  
  420f54:	mov    al,0x19
  420f56:	inc    ecx
  420f57:	popa   
  420f58:	pop    ss
  420f59:	fcomp  QWORD PTR [esi+0x137f67e7]
  420f5f:	dec    ecx
  420f60:	js     0x420f10
  420f62:	lods   al,BYTE PTR ds:[esi]
  420f63:	sub    ch,BYTE PTR [ecx-0x68f4b8c7]
  420f69:	cmp    esp,0x2b
  420f6c:	es or  al,0x4d
  420f6f:	clc    
  420f70:	mov    eax,ds:0x315ace67
  420f75:	(bad)
  420f79:	sbb    DWORD PTR [ebx-0x2d],edi
  420f7c:	mov    dl,0xec
  420f7e:	(bad)  
  420f7f:	adc    ch,bl
  420f81:	stos   BYTE PTR es:[edi],al
  420f82:	jmp    0x728d57e6
  420f87:	neg    BYTE PTR [ebx+0x4a]
  420f8a:	out    0xf1,al
  420f8c:	inc    ecx
  420f8d:	xchg   edx,eax
  420f8e:	lea    esp,ds:0x5c824e7d
  420f94:	fwait
  420f95:	mov    bh,0x9c
  420f97:	mov    ebp,0x290df0e9
  420f9c:	mov    cs,WORD PTR ds:0xefab8d61
  420fa2:	xchg   ecx,eax
  420fa3:	pop    ebp
  420fa4:	xor    cl,ah
  420fa6:	add    dl,ah
  420fa8:	pop    es
  420fa9:	jmp    0x420f6e
  420fab:	push   ebx
  420fac:	js     0x420f47
  420fae:	rol    dl,1
  420fb0:	retf   0xa268
  420fb3:	sub    ebp,ebp
  420fb5:	shl    BYTE PTR [ebx],1
  420fb7:	adc    al,0x7e
  420fb9:	fimul  WORD PTR [edi]
  420fbb:	mov    ebp,DWORD PTR [ebp+edi*2+0x38e22882]
  420fc2:	in     eax,0x39
  420fc4:	aas    
  420fc5:	inc    esi
  420fc6:	fimul  DWORD PTR [ecx]
  420fc8:	shl    BYTE PTR [esi-0x7e],cl
  420fcb:	cld    
  420fcc:	outs   dx,DWORD PTR ds:[esi]
  420fcd:	cs out dx,eax
  420fcf:	jge    0x420fbf
  420fd1:	pop    ebx
  420fd2:	xor    ebx,eax
  420fd4:	popa   
  420fd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420fd6:	fidiv  DWORD PTR [ebx+0x110ed802]
  420fdc:	cmp    cl,ch
  420fde:	push   edx
  420fdf:	outs   dx,DWORD PTR ds:[esi]
  420fe0:	jmp    0xa3ef61a3
  420fe5:	imul   ecx,DWORD PTR [ecx+0x18],0x78
  420fe9:	inc    esp
  420fea:	jmp    0x4becbba2
  420fef:	xlat   BYTE PTR ds:[ebx]
  420ff0:	mov    ebp,0x92e97a0a
  420ff5:	bound  ebp,QWORD PTR [esi-0x5f]
  420ff8:	sub    cl,BYTE PTR [ecx]
  420ffa:	cwde   
  420ffb:	js     0x42107c
  420ffd:	pop    eax
  420ffe:	scas   eax,DWORD PTR es:[edi]
  420fff:	sbb    eax,0x672718de
  421004:	idiv   DWORD PTR [esi]
  421006:	and    DWORD PTR [ecx],edx
  421008:	lods   al,BYTE PTR ds:[esi]
  421009:	mov    eax,0x9ba45eb7
  42100e:	ins    BYTE PTR es:[edi],dx
  42100f:	imul   esi,DWORD PTR [esi+0x6d],0xa24f9500
  421016:	sbb    eax,0x31c36525
  42101b:	sbb    DWORD PTR [edi+0x61],0x52ef5bab
  421022:	ror    BYTE PTR [esp+eax*1-0x577041e9],0x2e
  42102a:	test   BYTE PTR [edi-0x5f],bl
  42102d:	test   eax,0x338e6970
  421032:	or     al,0x62
  421034:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421035:	add    bl,BYTE PTR [edi-0x52]
  421038:	and    BYTE PTR [eax+0xc],0x41
  42103c:	xchg   ecx,eax
  42103d:	xor    eax,0xc88056bb
  421042:	jo     0x421030
  421044:	mov    cl,BYTE PTR [eax+0x68eed7b3]
  42104a:	fmul   QWORD PTR [edx+0x4ad90a31]
  421050:	mov    eax,0xb524bcdc
  421055:	jb     0x421053
  421057:	cmp    eax,0x3c739e30
  42105c:	aaa    
  42105d:	sub    eax,0x1b32afbb
  421062:	test   DWORD PTR [esi-0x7477d06a],ebx
  421068:	in     al,dx
  421069:	scas   al,BYTE PTR es:[edi]
  42106a:	loop   0x4210e1
  42106c:	in     eax,0x15
  42106e:	push   0xffffffb2
  421070:	ror    esp,cl
  421072:	leave  
  421073:	push   cs
  421074:	js     0x4210a5
  421076:	mov    ?,WORD PTR [ecx]
  421078:	pop    eax
  421079:	mov    ds:0xe3f1d823,al
  42107e:	jnp    0x4210a8
  421080:	xchg   di,ax
  421082:	retf   
  421083:	mov    dh,0x45
  421085:	jb     0x421068
  421087:	add    eax,esp
  421089:	jno    0x421091
  42108b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42108c:	jmp    FWORD PTR [ecx+0x7ee1bc99]
  421092:	(bad)  
  421093:	fldpi  
  421095:	loope  0x421071
  421097:	retf   0xca47
  42109a:	xor    DWORD PTR [edi-0x52849172],edi
  4210a0:	xor    DWORD PTR [ebx-0x7e],ebp
  4210a3:	sti    
  4210a4:	xor    edx,esi
  4210a6:	cmp    eax,0x5502aaaf
  4210ab:	add    edx,DWORD PTR [eax]
  4210ad:	and    eax,0x1c7de150
  4210b2:	dec    esp
  4210b3:	enter  0x6897,0x11
  4210b7:	js     0x4210b2
  4210b9:	fcom   QWORD PTR [ecx+0x42f7c1c4]
  4210bf:	mov    ch,0xf3
  4210c1:	ret    0x620a
  4210c4:	sub    eax,0x80ea785e
  4210c9:	mov    ah,0xfe
  4210cb:	mov    ecx,0x1f7c4364
  4210d0:	shl    dh,1
  4210d2:	push   edx
  4210d3:	test   DWORD PTR [edi],ebx
  4210d5:	inc    ecx
  4210d6:	cvtps2pi mm2,QWORD PTR [ebx]
  4210d9:	jl     0x421130
  4210db:	cmp    ebp,edi
  4210dd:	cmp    eax,0x2c67f733
  4210e2:	pop    es
  4210e3:	(bad)  
  4210e4:	rcr    dl,cl
  4210e6:	(bad)  
  4210e7:	stos   DWORD PTR es:[edi],eax
  4210e8:	fwait
  4210e9:	cs stos DWORD PTR es:[edi],eax
  4210eb:	nop
  4210ec:	xchg   ecx,eax
  4210ed:	push   ebp
  4210ee:	repnz or DWORD PTR [esi+0x6],eax
  4210f2:	sub    DWORD PTR [edx+0x7f220108],ebx
  4210f8:	dec    ecx
  4210f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4210fa:	dec    ebp
  4210fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4210fc:	pop    esi
  4210fd:	outs   dx,BYTE PTR ds:[esi]
  4210fe:	or     dh,BYTE PTR [ebp+0x3a]
  421101:	ror    DWORD PTR [esi],cl
  421103:	adc    eax,0x88ed9555
  421108:	retf   0xb031
  42110b:	or     eax,0xab3ec700
  421110:	or     eax,0xf64c0a48
  421115:	gs in  al,dx
  421117:	xor    eax,0xf94825a4
  42111c:	add    edi,edi
  42111e:	sbb    DWORD PTR [ecx-0x99f2aea],esi
  421124:	sbb    BYTE PTR [eax-0x249fcc06],dl
  42112a:	retf   0x9658
  42112d:	dec    eax
  42112e:	cmp    ah,bh
  421130:	stos   BYTE PTR es:[edi],al
  421131:	mov    eax,ds:0x584c6f6e
  421136:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421137:	dec    eax
  421138:	mov    ch,BYTE PTR [edx+eax*2-0x203c3b94]
  42113f:	cmp    BYTE PTR [edi-0x10],al
  421142:	mov    ebx,0xcd197699
  421147:	jno    0x42113b
  421149:	repz addr16 inc ebx
  42114c:	shl    DWORD PTR [esi-0x2],0x56
  421150:	mov    ecx,0x6d207269
  421155:	xchg   DWORD PTR [edi-0x16967519],eax
  42115b:	and    esp,edx
  42115d:	les    esi,FWORD PTR [esi+0x7ab33afe]
  421163:	(bad)  
  421164:	push   es
  421165:	ins    BYTE PTR es:[edi],dx
  421166:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421167:	cdq    
  421168:	ret    0xc162
  42116b:	aas    
  42116c:	dec    ecx
  42116d:	xchg   ecx,eax
  42116e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42116f:	jp     0x421104
  421171:	pop    ebx
  421172:	retf   0xfa29
  421175:	enter  0xc973,0x6b
  421179:	repz sbb BYTE PTR [ebx],dl
  42117c:	add    al,0x98
  42117e:	loope  0x42114f
  421180:	dec    ebp
  421181:	iret   
  421182:	pop    ebp
  421183:	add    dl,al
  421185:	push   edi
  421186:	lods   al,BYTE PTR ds:[esi]
  421187:	xor    DWORD PTR [edx-0x3f],0xb90a5b92
  42118e:	out    dx,eax
  42118f:	(bad)  
  421190:	xor    edx,ebx
  421192:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421193:	mov    cl,0x35
  421195:	cmp    eax,0x64abb49
  42119a:	jns    0x421210
  42119c:	pop    DWORD PTR [eax]
  42119e:	fimul  WORD PTR [edi+0x5f]
  4211a1:	cwde   
  4211a2:	sbb    DWORD PTR [ebx+0x26],ebp
  4211a5:	mov    ch,0xa7
  4211a7:	pop    ebp
  4211a8:	pushf  
  4211a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211aa:	inc    edx
  4211ab:	push   esi
  4211ac:	les    edx,FWORD PTR [ecx+0x2a9a5993]
  4211b2:	inc    esi
  4211b3:	jle    0x42116e
  4211b5:	jne    0x4211a3
  4211b7:	inc    ebp
  4211b8:	sub    eax,0x30fdd184
  4211bd:	test   BYTE PTR ds:0xe9e25529,bh
  4211c3:	add    BYTE PTR [edx+ebp*4+0xe],bl
  4211c7:	or     dh,bl
  4211c9:	cdq    
  4211ca:	push   ds
  4211cb:	sub    esi,DWORD PTR [ebx+0x3a2bed96]
  4211d1:	mov    ecx,0x1c138458
  4211d6:	mov    ecx,0xceacaad1
  4211db:	xlat   BYTE PTR ds:[ebx]
  4211dc:	out    0xb,eax
  4211de:	push   esi
  4211df:	sbb    al,0x81
  4211e1:	out    0xda,al
  4211e3:	daa    
  4211e4:	mov    edi,ecx
  4211e6:	mov    esi,0xbc4c3618
  4211eb:	jns    0x42125f
  4211ed:	jecxz  0x4211f3
  4211ef:	aad    0x82
  4211f1:	mov    ds:0xc2548a20,al
  4211f6:	addr16 cwde 
  4211f8:	(bad)  
  4211f9:	aaa    
  4211fa:	pop    edx
  4211fb:	ss stos DWORD PTR es:[edi],eax
  4211fd:	pop    edi
  4211fe:	xchg   esi,eax
  4211ff:	push   0x6a
  421201:	pop    ecx
  421202:	cld    
  421203:	xchg   ebx,eax
  421204:	lods   al,BYTE PTR ds:[esi]
  421205:	jp     0x4211da
  421207:	call   0xde21c9bd
  42120c:	aas    
  42120d:	mov    edi,0xc3b48d8c
  421212:	pop    ebx
  421213:	mov    cl,0xb
  421215:	push   ss
  421216:	adc    edx,DWORD PTR [edx-0xa]
  421219:	outs   dx,BYTE PTR ds:[esi]
  42121a:	add    dh,BYTE PTR [ebp-0x4d]
  42121d:	sub    al,0xd2
  42121f:	push   cs
  421220:	retf   0x1fd6
  421223:	cmp    esp,DWORD PTR [esi]
  421225:	jg     0x42122a
  421227:	aam    0x63
  421229:	xor    eax,DWORD PTR [ebx]
  42122b:	lock bound esi,QWORD PTR [eax+0x65acb30a]
  421232:	xchg   DWORD PTR [ecx+0x41],ebp
  421235:	iret   
  421236:	adc    al,ah
  421238:	stos   DWORD PTR es:[edi],eax
  421239:	jnp    0x421261
  42123b:	mov    bh,0x19
  42123d:	rol    DWORD PTR [ecx],1
  42123f:	cli    
  421240:	cmp    edx,DWORD PTR [ecx+0x31]
  421243:	fs fucomip st,st(0)
  421246:	in     eax,0x44
  421248:	or     esp,DWORD PTR [ecx-0x68]
  42124b:	push   esi
  42124c:	(bad)  [ecx+0x3c]
  42124f:	sub    DWORD PTR cs:0xf4cc437d,edi
  421256:	pop    esi
  421257:	add    edi,DWORD PTR [bx-0x79a5]
  42125c:	mov    ds:0xbc477e58,eax
  421261:	sub    ah,BYTE PTR [eax+0x15]
  421264:	xchg   ebp,eax
  421265:	pop    ecx
  421266:	jmp    FWORD PTR [esp+ebp*1-0x18d3aade]
  42126d:	push   ecx
  42126e:	mov    ds:0x5eec3017,eax
  421273:	rcl    DWORD PTR [ebx-0x14],0xad
  421277:	ss pop edx
  421279:	jmp    0x34ac3863
  42127e:	imul   edi,DWORD PTR [esi+0x1d72ff18],0xfffffff2
  421285:	in     al,0xf6
  421287:	push   ecx
  421288:	mov    BYTE PTR [esp+esi*2+0x4e18eb15],ah
  42128f:	(bad)  
  421291:	mov    ch,0xaa
  421293:	test   DWORD PTR [ecx],eax
  421295:	mov    bh,0x4c
  421297:	test   al,0xab
  421299:	aaa    
  42129a:	into   
  42129b:	popf   
  42129c:	loopne 0x4212b3
  42129e:	iret   
  42129f:	test   BYTE PTR [ecx-0x3ae82af9],dh
  4212a5:	cmp    eax,0x4fa17b53
  4212aa:	jns    0x42125e
  4212ac:	or     DWORD PTR [ecx],0x6706805d
  4212b2:	pop    ss
  4212b3:	xchg   edx,eax
  4212b4:	adc    edi,ebx
  4212b6:	adc    BYTE PTR [ecx+0x4d],ch
  4212b9:	iret   
  4212ba:	push   esi
  4212bb:	mov    bl,0x49
  4212bd:	mov    esp,0x5da5a205
  4212c2:	fld    DWORD PTR [ebx-0x5a]
  4212c5:	mov    BYTE PTR [ebx],al
  4212c7:	pop    eax
  4212c8:	pop    ebp
  4212c9:	(bad)  
  4212cb:	jne    0x42125e
  4212cd:	xor    dh,dh
  4212cf:	xlat   BYTE PTR ds:[ebx]
  4212d0:	push   es
  4212d1:	mov    ah,0xcd
  4212d3:	mov    cl,0x87
  4212d5:	or     eax,0x796b2887
  4212da:	jb     0x4212ed
  4212dc:	xor    al,0x72
  4212de:	pop    es
  4212df:	inc    ebx
  4212e0:	mov    bl,0x80
  4212e2:	shl    BYTE PTR [eax-0x706e05cc],0xf6
  4212e9:	shr    BYTE PTR [edi-0x46],cl
  4212ec:	test   DWORD PTR [eax+esi*1+0x3fc0c610],edx
  4212f3:	mul    esi
  4212f5:	test   ah,dh
  4212f7:	jl     0x4212ad
  4212f9:	(bad)  [esp+0x56]
  4212fd:	and    esi,DWORD PTR [edi+0xc23dbf5]
  421303:	in     al,dx
  421304:	and    eax,0x8083c30f
  421309:	jge    0x4212fe
  42130b:	jg     0x4212f1
  42130d:	or     DWORD PTR [edx+ebx*8],edx
  421310:	arpl   WORD PTR [edx],bp
  421312:	fimul  DWORD PTR [ecx-0x32]
  421315:	mov    ds:0xcc8e842f,eax
  42131a:	mov    eax,0x67fffe37
  42131f:	aam    0x51
  421321:	mul    BYTE PTR [eax-0x684b19bd]
  421327:	or     ebp,DWORD PTR [eax-0x25]
  42132a:	mov    esp,0x84c5cea8
  42132f:	jnp    0x42132c
  421331:	push   esi
  421332:	cmp    eax,DWORD PTR [ecx+0x63]
  421335:	js     0x421319
  421337:	or     BYTE PTR [edi-0x3da7d677],ah
  42133d:	sub    edi,ecx
  42133f:	mov    ebp,0x66276b5b
  421344:	push   ebx
  421345:	xchg   ecx,eax
  421346:	cld    
  421347:	sub    dl,dh
  421349:	or     al,0xba
  42134b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42134c:	and    eax,0x2e508baa
  421351:	mov    ss,WORD PTR [ebp-0x23]
  421354:	pop    esi
  421355:	fcomp  DWORD PTR [edi-0x21]
  421358:	jp     0x4213c5
  42135a:	pop    edi
  42135b:	xchg   edx,eax
  42135c:	mov    edx,0xbfed2b75
  421361:	add    eax,0x866aa620
  421366:	repnz sti 
  421368:	inc    ecx
  421369:	jge    0x42131e
  42136b:	add    edx,DWORD PTR [eax]
  42136d:	sbb    al,0xf2
  42136f:	or     al,0xfc
  421371:	mov    eax,DWORD PTR [esi-0x2c662c6a]
  421377:	leave  
  421378:	cld    
  421379:	es stos BYTE PTR es:[edi],al
  42137b:	imul   ebp,DWORD PTR [eax+0x29],0xffffffaa
  42137f:	and    eax,0x7ba90981
  421384:	clc    
  421385:	xor    al,0x46
  421387:	pop    ecx
  421388:	pop    esi
  421389:	and    BYTE PTR [ebx+0x36],dl
  42138c:	jnp    0x421314
  42138e:	retf   0xf8f
  421391:	mov    al,dh
  421393:	outs   dx,DWORD PTR ds:[esi]
  421394:	dec    edi
  421395:	and    al,0x14
  421397:	and    DWORD PTR [ebp+0x64261c38],edi
  42139d:	push   edi
  42139e:	fnstenv [ebx-0x19]
  4213a1:	dec    esp
  4213a2:	rol    DWORD PTR [ebx+0x4898491a],1
  4213a8:	sub    eax,0x9fe6e4a6
  4213ad:	xchg   esp,eax
  4213ae:	repz test ecx,edi
  4213b1:	loop   0x4213af
  4213b3:	test   BYTE PTR [esp+ebp*8-0x66],dh
  4213b7:	fdiv   st(1),st
  4213b9:	nop
  4213ba:	mov    WORD PTR [esi-0x24],gs
  4213bd:	cmp    eax,0xb4badd58
  4213c2:	adc    BYTE PTR [eax+0x1afa9431],0x1
  4213c9:	lahf   
  4213ca:	int3   
  4213cb:	sub    dl,BYTE PTR [edi-0x7b]
  4213ce:	jo     0x42135d
  4213d0:	imul   edx,DWORD PTR ds:0xebac6bd2,0x6b
  4213d7:	inc    edi
  4213d8:	jb     0x42137f
  4213da:	xchg   ebp,eax
  4213db:	push   esp
  4213dc:	mov    ch,0x75
  4213de:	mov    cl,BYTE PTR [ecx-0x1adf4d7c]
  4213e4:	fs push ds
  4213e6:	pop    es
  4213e7:	ins    BYTE PTR es:[edi],dx
  4213e8:	pusha  
  4213e9:	pop    edi
  4213ea:	jb     0x421419
  4213ec:	(bad)  
  4213ee:	lock mov ecx,0x8a62e1e
  4213f4:	inc    eax
  4213f5:	in     eax,0xea
  4213f7:	xlat   BYTE PTR ds:[ebx]
  4213f8:	or     DWORD PTR [edi-0x26],esp
  4213fb:	push   edx
  4213fc:	sub    ecx,edi
  4213fe:	imul   eax,DWORD PTR [ebx+0x62a04610],0xdedc05f2
  421408:	pop    edx
  421409:	(bad)  
  42140a:	imul   esp,ebx,0xffffff92
  42140d:	(bad)  
  42140e:	int3   
  42140f:	push   es
  421410:	aas    
  421411:	or     eax,0xf9cf1b3
  421416:	mov    esi,0x55ca0ed1
  42141b:	das    
  42141c:	repnz aaa 
  42141e:	inc    ebp
  42141f:	fdivr  st(7),st
  421421:	sbb    eax,0x3e2fc24e
  421426:	push   ds
  421427:	loopne 0x4213ff
  421429:	pushf  
  42142a:	fmul   QWORD PTR [edi-0x29b6322b]
  421430:	cmp    al,0x85
  421432:	dec    edx
  421433:	push   edx
  421434:	rcr    BYTE PTR [ebx],0x55
  421437:	add    al,0x4f
  421439:	push   ebx
  42143a:	ret    0x9c8
  42143d:	adc    eax,0xe4a1b31d
  421442:	sub    BYTE PTR [esi-0x35],0xb4
  421446:	inc    edi
  421447:	adc    edi,DWORD PTR [edx-0x6a]
  42144a:	les    ebp,FWORD PTR [edi]
  42144c:	popa   
  42144d:	pop    ds
  42144e:	cdq    
  42144f:	outs   dx,BYTE PTR ds:[esi]
  421450:	in     eax,dx
  421451:	mov    eax,ds:0xf0122267
  421456:	mov    bh,0xdd
  421458:	shl    BYTE PTR [ebx+0x2d],0xf3
  42145c:	mov    ebp,0xf5be4829
  421461:	sub    edi,DWORD PTR [ebp+0x17]
  421464:	mov    al,ds:0xe8b4115d
  421469:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42146a:	imul   esi,DWORD PTR [edx-0x7d],0xffffffc4
  42146e:	adc    eax,0x883ff415
  421473:	es cmp al,0x84
  421476:	inc    esi
  421477:	sub    al,bh
  421479:	fdivrp st(1),st
  42147b:	cmp    DWORD PTR [ebx+ebx*2],edx
  42147e:	inc    ecx
  42147f:	fcomip st,st(4)
  421481:	iret   
  421482:	fwait
  421483:	std    
  421484:	lods   al,BYTE PTR ds:[esi]
  421485:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421486:	xor    esi,DWORD PTR [esi+ebx*4-0x5217cbba]
  42148d:	enter  0xfe1c,0xf7
  421491:	jmp    0x619163a1
  421496:	jns    0x4214a1
  421498:	mul    DWORD PTR [esi+0x70c36261]
  42149e:	cmp    ebp,DWORD PTR [ebx-0x1e53f920]
  4214a4:	xchg   edi,eax
  4214a5:	hlt    
  4214a6:	call   0xf761:0xbd0da0ff
  4214ad:	mov    ch,0x62
  4214af:	pop    edi
  4214b0:	test   BYTE PTR [ecx+0x12],bl
  4214b3:	test   DWORD PTR [eax+eiz*8-0x77d73076],0x3c0bc4a6
  4214be:	nop
  4214bf:	and    cl,BYTE PTR [eax-0x25]
  4214c2:	hlt    
  4214c3:	xchg   DWORD PTR [ebp+0x5b],eax
  4214c6:	sahf   
  4214c7:	jg     0x421510
  4214c9:	xor    eax,eax
  4214cb:	ret    
  4214cc:	nop
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428108
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x42810c
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428110
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x428114
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f8
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280fc
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x428100
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x428104
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x428106
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	lea    eax,[ebp-0x10]
  42162f:	push   eax
  421630:	lea    ecx,[ebp-0x10]
  421633:	push   ecx
  421634:	lea    edx,[ebp-0x14]
  421637:	push   edx
  421638:	call   DWORD PTR ds:0x428000
  42163e:	test   eax,eax
  421640:	je     0x42164b
  421642:	mov    eax,DWORD PTR [ebp-0x10]
  421645:	add    eax,0x1
  421648:	mov    DWORD PTR [ebp-0x10],eax
  42164b:	mov    DWORD PTR [ebp-0x48],0x0
  421652:	mov    DWORD PTR [ebp-0x4c],0x0
  421659:	lea    ecx,[ebp-0x14]
  42165c:	push   ecx
  42165d:	call   DWORD PTR ds:0x428004
  421663:	mov    BYTE PTR [ebp-0x40],0x56
  421667:	call   DWORD PTR ds:0x428014
  42166d:	mov    DWORD PTR [ebp-0x2c],eax
  421670:	mov    BYTE PTR [ebp-0x3e],0x72
  421674:	movzx  edx,WORD PTR [ebp-0x2c]
  421678:	test   edx,edx
  42167a:	jne    0x4216bc
  42167c:	mov    BYTE PTR [ebp-0x34],0x0
  421680:	mov    DWORD PTR [ebp-0x14],0xe0d
  421687:	lea    eax,[ebp-0x28]
  42168a:	push   eax
  42168b:	call   DWORD PTR ds:0x428018
  421691:	mov    DWORD PTR [ebp-0x68],eax
  421694:	mov    DWORD PTR [ebp-0x5c],0x3a
  42169b:	lea    ecx,[ebp-0x40]
  42169e:	push   ecx
  42169f:	mov    edx,DWORD PTR [ebp-0x68]
  4216a2:	push   edx
  4216a3:	call   DWORD PTR ds:0x42801c
  4216a9:	mov    DWORD PTR [ebp-0x44],eax
  4216ac:	mov    DWORD PTR [ebp-0x8],0x9321a8f3
  4216b3:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216ba:	jmp    0x4216d1
  4216bc:	mov    BYTE PTR ds:0x443a58,0x0
  4216c3:	mov    BYTE PTR ds:0x42bb88,0x0
  4216ca:	mov    BYTE PTR ds:0x441b18,0x0
  4216d1:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216d8:	push   DWORD PTR ds:0x428018
  4216de:	pop    edx
  4216df:	mov    DWORD PTR [ebp-0x74],edx
  4216e2:	push   DWORD PTR [ebp-0x30]
  4216e5:	push   0x1000
  4216ea:	mov    eax,DWORD PTR [ebp-0x14]
  4216ed:	add    eax,0x23
  4216f0:	add    eax,0x23
  4216f3:	push   eax
  4216f4:	xor    eax,eax
  4216f6:	push   eax
  4216f7:	mov    ecx,DWORD PTR [ebp-0x44]
  4216fa:	call   ecx
  4216fc:	mov    edx,eax
  4216fe:	mov    DWORD PTR [ebp-0x4],edx
  421701:	mov    eax,DWORD PTR [ebp-0x70]
  421704:	sub    eax,0xdae0b
  421709:	mov    DWORD PTR [ebp-0x70],eax
  42170c:	cmp    DWORD PTR [ebp-0x4],0x0
  421710:	jne    0x421719
  421712:	mov    BYTE PTR ds:0x441b18,0x0
  421719:	mov    ecx,DWORD PTR [ebp-0x4]
  42171c:	add    ecx,DWORD PTR [ebp-0x14]
  42171f:	mov    edx,DWORD PTR [ebp-0x8]
  421722:	mov    DWORD PTR [ecx],edx
  421724:	mov    eax,DWORD PTR [ebp-0x4]
  421727:	add    eax,DWORD PTR [ebp-0x5c]
  42172a:	mov    DWORD PTR [ebp-0x64],eax
  42172d:	mov    ecx,DWORD PTR ds:0x42801c
  421733:	mov    DWORD PTR [ebp-0x54],ecx
  421736:	mov    edx,DWORD PTR [ebp-0x4]
  421739:	add    edx,DWORD PTR [ebp-0x14]
  42173c:	mov    eax,DWORD PTR [ebp+0x8]
  42173f:	mov    DWORD PTR [edx+0x4],eax
  421742:	mov    ecx,DWORD PTR [ebp-0x4]
  421745:	add    ecx,DWORD PTR [ebp-0x14]
  421748:	mov    DWORD PTR [ebp-0xc],ecx
  42174b:	cmp    DWORD PTR [ebp-0x70],0x0
  42174f:	jbe    0x42176c
  421751:	mov    edx,DWORD PTR [ebp-0xc]
  421754:	push   edx
  421755:	mov    eax,DWORD PTR [ebp-0x14]
  421758:	push   eax
  421759:	mov    ecx,DWORD PTR [ebp-0x2c]
  42175c:	add    ecx,DWORD PTR [ebp-0x70]
  42175f:	push   ecx
  421760:	mov    edx,DWORD PTR [ebp-0x4]
  421763:	push   edx
  421764:	call   0x4214d0
  421769:	add    esp,0x10
  42176c:	cmp    DWORD PTR [ebp-0x64],0x0
  421770:	je     0x421784
  421772:	mov    ecx,DWORD PTR [ebp-0x54]
  421775:	push   ecx
  421776:	push   DWORD PTR [ebp-0x74]
  421779:	mov    esi,DWORD PTR [ebp-0x64]
  42177c:	push   edx
  42177d:	pop    eax
  42177e:	push   ecx
  42177f:	nop
  421780:	jmp    esi
  421782:	jmp    0x42178a
  421784:	mov    eax,DWORD PTR [ebp+0x8]
  421787:	mov    DWORD PTR [ebp-0x18],eax
  42178a:	mov    eax,0x1
  42178f:	pop    esi
  421790:	mov    esp,ebp
  421792:	pop    ebp
  421793:	ret    
  421794:	int3   
  421795:	int3   
  421796:	int3   
  421797:	int3   
  421798:	int3   
  421799:	int3   
  42179a:	int3   
  42179b:	int3   
  42179c:	int3   
  42179d:	int3   
  42179e:	int3   
  42179f:	int3   
  4217a0:	push   ebp
  4217a1:	mov    ebp,esp
  4217a3:	sub    esp,0x8
  4217a6:	mov    eax,ds:0x428014
  4217ab:	push   0x0
  4217ad:	push   0xb2
  4217b2:	push   0x82
  4217b7:	push   0x0
  4217b9:	push   0xffffffff
  4217bb:	mov    DWORD PTR [ebp-0x4],0x0
  4217c2:	mov    DWORD PTR [ebp-0x8],eax
  4217c5:	call   DWORD PTR ds:0x428010
  4217cb:	push   DWORD PTR [ebp-0x8]
  4217ce:	pop    edx
  4217cf:	call   edx
  4217d1:	push   eax
  4217d2:	pop    DWORD PTR [ebp-0x4]
  4217d5:	mov    eax,DWORD PTR [ebp-0x4]
  4217d8:	dec    eax
  4217d9:	cmp    eax,0x56
  4217dc:	jne    0x4217eb
  4217de:	push   0x1a4c1e35
  4217e3:	call   0x421550
  4217e8:	add    esp,0x4
  4217eb:	xor    eax,eax
  4217ed:	mov    esp,ebp
  4217ef:	pop    ebp
  4217f0:	ret    
  4217f1:	nop
  4217f2:	nop
  4217f3:	nop
  4217f4:	nop
  4217f5:	nop
  4217f6:	nop
  4217f7:	nop
  4217f8:	nop
  4217f9:	nop
  4217fa:	nop
  4217fb:	nop
  4217fc:	nop
  4217fd:	nop
  4217fe:	nop
  4217ff:	nop
  421800:	sub    esp,0x10
  421803:	lea    eax,[esp+0x0]
  421807:	push   eax
  421808:	call   DWORD PTR ds:0x42800c
  42180e:	cmp    WORD PTR [esp+0x0],0x0
  421814:	je     0x42182d
  421816:	push   0x0
  421818:	call   0x4217a0
  42181d:	add    esp,0x4
  421820:	call   0x411000
  421825:	xor    eax,eax
  421827:	add    esp,0x10
  42182a:	ret    0x10
  42182d:	(bad)  
  42182e:	mov    edx,0x1519b6e0
  421833:	cli    
  421834:	mov    bh,0xc2
  421836:	retf   
  421837:	push   0x25
  421839:	and    DWORD PTR [eax+ecx*1],edx
  42183c:	mov    edx,0xfa16a126
  421841:	mov    bh,0xc2
  421843:	iret   
  421844:	push   0x25
  421846:	popa   
  421847:	jmp    0x421840
  421849:	mov    edx,0xfa161926
  42184e:	mov    bh,0xc2
  421850:	iret   
  421851:	push   0x25
  421853:	and    ebx,ebp
  421855:	idiv   DWORD PTR [edx-0x5e9e6da]
  42185b:	mov    bh,0xc2
  42185d:	iret   
  42185e:	push   0x25
  421860:	and    ebx,ebp
  421862:	idiv   DWORD PTR [edx-0x5e9e6da]
  421868:	mov    bh,0xc2
  42186a:	aaa    
  42186b:	push   0x25
  42186d:	and    ebp,esp
  42186f:	call   0xa25b4074
  421874:	repz jp 0x42185a
  421877:	ja     0x4218e4
  421879:	imul   ebp,esp,0x4fd2a3ca
  42187f:	push   0x36
  421881:	mov    al,ch
  421883:	lods   eax,DWORD PTR ds:[esi]
  421884:	test   al,0x18
  421886:	inc    esp
  421887:	dec    esp
  421888:	retf   
  421889:	xchg   esp,eax
  42188a:	fisttp DWORD PTR [eax+0x77]
  42188d:	jns    0x42181d
  42188f:	xchg   edi,eax
  421890:	mov    al,ds:0x54574aaa
  421895:	test   edi,edx
  421897:	ror    DWORD PTR [eax+0x39],cl
  42189a:	push   edx
  42189b:	mov    ch,0xe4
  42189d:	loop   0x421841
  42189f:	add    eax,0xfac54441
  4218a4:	mov    bh,0x2c
  4218a6:	cmp    eax,0xc2b7fa16
  4218ab:	iret   
  4218ac:	push   0x25
  4218ae:	es jb  0x4218bc
  4218b1:	jecxz  0x421918
  4218b3:	loope  0x421839
  4218b5:	lock hlt 
  4218b7:	cmp    bl,BYTE PTR [ebp+0x60]
  4218ba:	data16 fnstcw WORD PTR [ecx-0x3]
  4218be:	loop   0x421903
  4218c0:	adc    eax,0x504fa51c
  4218c5:	lds    esi,FWORD PTR [edx]
  4218c7:	inc    eax
  4218c8:	sbb    ecx,esp
  4218ca:	xor    eax,0x4e13b442
  4218cf:	lahf   
  4218d0:	mov    cs,eax
  4218d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218d3:	xchg   edx,eax
  4218d4:	mov    bh,0x2b
  4218d6:	(bad)  
  4218d7:	jns    0x42185c
  4218d9:	sub    al,0x5f
  4218db:	out    dx,al
  4218dc:	push   0x7b4f88bd
  4218e1:	das    
  4218e2:	imul   edx,DWORD PTR [ebx],0x65
  4218e5:	mov    al,0x6c
  4218e7:	cdq    
  4218e8:	pop    ss
  4218e9:	lock out dx,eax
  4218eb:	cmp    bl,BYTE PTR [ebp+0x60]
  4218ee:	data16 fnstcw WORD PTR [eax-0x3]
  4218f2:	xchg   edx,eax
  4218f3:	fisttp WORD PTR [ebx+0x426f451c]
  4218f9:	lds    esp,FWORD PTR [edi]
  4218fb:	fnsave [ebx+0x1bdfafe1]
  421901:	adc    ebx,DWORD PTR [esi]
  421903:	add    ah,BYTE PTR ds:0x2d0f97c8
  421909:	sub    ebp,DWORD PTR [ecx+0x412c280f]
  42190f:	jae    0x421906
  421911:	mov    ebp,0x2ff83780
  421916:	jae    0x42189a
  421918:	xchg   esp,eax
  421919:	shl    BYTE PTR [ebp-0x1f],cl
  42191c:	test   al,dh
  42191e:	mov    bh,0xc2
  421920:	iret   
  421921:	push   0x25
  421923:	and    ebx,ebp
  421925:	imul   edx
  421927:	arpl   WORD PTR [ecx],bx
  421929:	push   ss
  42192a:	mov    dh,0xb6
  42192c:	ror    bh,0xca
  42192f:	cmc    
  421930:	dec    edx
  421931:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421932:	idiv   DWORD PTR [edx-0x5e9e6da]
  421938:	mov    bh,0xc2
  42193a:	das    
  42193b:	push   0x26
  42193d:	and    al,ah
  42193f:	div    BYTE PTR [eax-0x107e6da]
  421945:	mov    bh,0xc2
  421947:	jae    0x4219b5
  421949:	and    eax,0xbaf7eb21
  42194e:	aaa    
  42194f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421950:	push   ss
  421951:	cli    
  421952:	mov    bh,0xd2
  421954:	iret   
  421955:	push   0x25
  421957:	and    esi,ebp
  421959:	idiv   DWORD PTR [edx-0x5e9a7da]
  42195f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421960:	ret    0x6acf
  421963:	daa    
  421964:	and    ebx,ebp
  421966:	repnz mov edx,0xfa161927
  42196c:	mov    bh,0xc2
  42196e:	retf   0x246a
  421971:	and    ebx,ebp
  421973:	idiv   DWORD PTR [edx-0x9b9e6da]
  421979:	mov    bh,0xc2
  42197b:	retf   
  42197c:	push   0x25
  42197e:	and    BYTE PTR [edi],cl
  421980:	repnz mov edx,0x7a161924
  421986:	mov    bh,0xc2
  421988:	fild   QWORD PTR [edx+0x25]
  42198b:	xor    ebx,ebp
  42198d:	idiv   DWORD PTR [edx-0x5e9f6da]
  421993:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421994:	ret    0x6acf
  421997:	and    eax,0xbae7eb21
  42199c:	sbb    DWORD PTR es:[esi],edx
  42199f:	cli    
  4219a0:	mov    bh,0xc2
  4219a2:	iret   
  4219a3:	push   0x25
  4219a5:	and    DWORD PTR [edi],ebx
  4219a7:	into   
  4219a8:	mov    dh,0x26
  4219aa:	jo     0x4219c1
  4219ac:	cli    
  4219ad:	mov    bh,0xc2
  4219af:	aas    
  4219b0:	popa   
  4219b1:	and    eax,0xbaf7a26e
  4219b6:	sbb    DWORD PTR es:[esi],edx
  4219b9:	cli    
  4219ba:	mov    bh,0xc2
  4219bc:	iret   
  4219bd:	push   0x25
  4219bf:	and    ebx,ebp
  4219c1:	idiv   DWORD PTR [edx-0x5e9e6da]
  4219c7:	mov    bh,0xc2
  4219c9:	iret   
  4219ca:	push   0x25
  4219cc:	and    ebx,ebp
  4219ce:	idiv   DWORD PTR [edx-0x5e9e6da]
  4219d4:	mov    bh,0xc2
  4219d6:	iret   
  4219d7:	push   0x25
  4219d9:	and    ebx,ebp
  4219db:	idiv   DWORD PTR [edx-0x5e9e6da]
  4219e1:	mov    bh,0xc2
  4219e3:	iret   
  4219e4:	push   0x25
  4219e6:	and    ebx,ebp
  4219e8:	idiv   DWORD PTR [edx-0x5e9e6da]
  4219ee:	mov    bh,0xc2
  4219f0:	iret   
  4219f1:	push   0x25
  4219f3:	and    ebx,ebp
  4219f5:	idiv   DWORD PTR [edx-0x5e9e6da]
  4219fb:	mov    bh,0xc2
  4219fd:	iret   
  4219fe:	push   0x25
  421a00:	and    ebx,ebp
  421a02:	idiv   DWORD PTR [edx-0x5e9e6da]
  421a08:	mov    bh,0xc2
  421a0a:	iret   
  421a0b:	push   0x25
  421a0d:	and    ebx,ebp
  421a0f:	idiv   DWORD PTR [edx-0x5e9e6da]
  421a15:	mov    bh,0xc2
  421a17:	iret   
  421a18:	push   0x25
  421a1a:	and    ebx,ebp
  421a1c:	idiv   DWORD PTR [edx-0x7d8c92f8]
  421a22:	ret    
  421a23:	ret    0x6acf
  421a26:	and    eax,0xbaf7e0c1
  421a2b:	sbb    DWORD PTR ss:[esi],edx
  421a2e:	cli    
  421a2f:	arpl   si,ax
  421a31:	iret   
  421a32:	push   0x21
  421a34:	and    ebx,ebp
  421a36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a37:	jmp    DWORD PTR [ebp+0x2b]
  421a3a:	inc    edx
  421a3b:	mov    ch,0xb7
  421a3d:	ret    0x6acf
  421a40:	and    eax,0xbaf7cb21
  421a45:	(bad)  
  421a46:	aaa    
  421a47:	fs mov ebp,eax
  421a4a:	mov    eax,ds:0x21256acf
  421a4f:	mov    esi,edi
  421a51:	mov    edx,0xfa1de926
  421a56:	mov    bh,0x98
  421a58:	iret   
  421a59:	push   0x25
  421a5b:	stc    
  421a5c:	out    dx,eax
  421a5d:	idiv   DWORD PTR [edx-0x5e9e6da]
  421a63:	mov    bh,0xc2
  421a65:	iret   
  421a66:	push   0x25
  421a68:	and    ebx,ebp
  421a6a:	xlat   BYTE PTR ds:[ebx]
  421a6b:	mov    edx,0xfa16f926
  421a70:	mov    bh,0xc2
  421a72:	iret   
  421a73:	push   0x25
  421a75:	and    ebx,ebp
  421a77:	idiv   DWORD PTR [edx-0x5e9e6da]
  421a7d:	mov    bh,0xc2
  421a7f:	iret   
  421a80:	push   0x25
  421a82:	and    ebx,ebp
  421a84:	idiv   DWORD PTR [edx-0x5e9e6da]
  421a8a:	mov    bh,0xc2
  421a8c:	iret   
  421a8d:	push   0x25
  421a8f:	and    ebx,ebp
  421a91:	idiv   DWORD PTR [edx-0x5e9e6da]
  421a97:	mov    bh,0xc2
  421a99:	iret   
  421a9a:	push   0x25
  421a9c:	and    ebx,ebp
  421a9e:	idiv   DWORD PTR [edx-0x5e9e6da]
  421aa4:	mov    bh,0xc2
  421aa6:	iret   
  421aa7:	push   0x25
  421aa9:	and    ebx,ebp
  421aab:	idiv   DWORD PTR [edx-0x5e9e6da]
  421ab1:	mov    bh,0xc2
  421ab3:	iret   
  421ab4:	push   0x25
  421ab6:	and    ebx,ebp
  421ab8:	idiv   DWORD PTR [edx-0x5e9e6da]
  421abe:	mov    bh,0xc2
  421ac0:	iret   
  421ac1:	push   0x25
  421ac3:	and    ebx,ebp
  421ac5:	idiv   DWORD PTR [edx-0x5e9e6da]
  421acb:	mov    bh,0xc2
  421acd:	iret   
  421ace:	push   0x25
  421ad0:	and    ebx,ebp
  421ad2:	idiv   DWORD PTR [edx-0x5e9e6da]
  421ad8:	mov    bh,0xc2
  421ada:	iret   
  421adb:	push   0x25
  421add:	and    ebx,ebp
  421adf:	idiv   DWORD PTR [edx-0x5e9e6da]
  421ae5:	mov    bh,0xc2
  421ae7:	iret   
  421ae8:	push   0x25
  421aea:	and    ebx,ebp
  421aec:	idiv   DWORD PTR [edx-0x5e9e6da]
  421af2:	mov    bh,0xc2
  421af4:	iret   
  421af5:	push   0x25
  421af7:	and    ebx,ebp
  421af9:	idiv   DWORD PTR [edx-0x5e9e6da]
  421aff:	mov    bh,0xc2
  421b01:	iret   
  421b02:	push   0x25
  421b04:	and    ebx,ebp
  421b06:	idiv   DWORD PTR [edx-0x5e9e6da]
  421b0c:	mov    bh,0xc2
  421b0e:	iret   
  421b0f:	push   0x25
  421b11:	and    ebx,ebp
  421b13:	idiv   DWORD PTR [edx-0x5e9e6da]
  421b19:	mov    bh,0xc2
  421b1b:	iret   
  421b1c:	push   0x25
  421b1e:	and    ebx,ebp
  421b20:	idiv   DWORD PTR [edx-0x5e9e6da]
  421b26:	mov    bh,0xc2
  421b28:	iret   
  421b29:	push   0x25
  421b2b:	and    ebx,ebp
  421b2d:	idiv   DWORD PTR [edx-0x5e9e6da]
  421b33:	mov    bh,0xc2
  421b35:	iret   
  421b36:	push   0x25
  421b38:	and    ebx,ebp
  421b3a:	idiv   DWORD PTR [edx-0x5e9e6da]
  421b40:	mov    bh,0xc2
  421b42:	iret   
  421b43:	push   0x25
  421b45:	and    ebx,ebp
  421b47:	idiv   DWORD PTR [edx-0x5e9e6da]
  421b4d:	mov    bh,0xc2
  421b4f:	iret   
  421b50:	push   0x25
  421b52:	and    ebx,ebp
  421b54:	idiv   DWORD PTR [edx-0x5e9e6da]
  421b5a:	mov    bh,0xc2
  421b5c:	iret   
  421b5d:	push   0x25
  421b5f:	and    ebx,ebp
  421b61:	idiv   DWORD PTR [edx-0x5e9e6da]
  421b67:	mov    bh,0xc2
  421b69:	iret   
  421b6a:	push   0x25
  421b6c:	and    ebx,ebp
  421b6e:	idiv   DWORD PTR [edx-0x5e9e6da]
  421b74:	mov    bh,0xc2
  421b76:	iret   
  421b77:	push   0x25
  421b79:	and    ebx,ebp
  421b7b:	idiv   DWORD PTR [edx-0x5e9e6da]
  421b81:	mov    bh,0xc2
  421b83:	iret   
  421b84:	push   0x25
  421b86:	and    ebx,ebp
  421b88:	idiv   DWORD PTR [edx-0x5e9e6da]
  421b8e:	mov    bh,0xc2
  421b90:	iret   
  421b91:	push   0x25
  421b93:	and    ebx,ebp
  421b95:	idiv   DWORD PTR [edx-0x5e9e6da]
  421b9b:	mov    bh,0xc2
  421b9d:	iret   
  421b9e:	push   0x25
  421ba0:	and    ebx,ebp
  421ba2:	idiv   DWORD PTR [edx-0x5e9e6da]
  421ba8:	mov    bh,0xc2
  421baa:	iret   
  421bab:	push   0x25
  421bad:	and    ebx,ebp
  421baf:	idiv   DWORD PTR [edx-0x5e9e6da]
  421bb5:	mov    bh,0xc2
  421bb7:	iret   
  421bb8:	push   0x25
  421bba:	and    ebx,ebp
  421bbc:	idiv   DWORD PTR [edx-0x5e9e6da]
  421bc2:	mov    bh,0xc2
  421bc4:	iret   
  421bc5:	push   0x25
  421bc7:	and    ebx,ebp
  421bc9:	idiv   DWORD PTR [edx-0x5e9e6da]
  421bcf:	mov    bh,0xc2
  421bd1:	iret   
  421bd2:	push   0x25
  421bd4:	and    ebx,ebp
  421bd6:	idiv   DWORD PTR [edx-0x5e9e6da]
  421bdc:	mov    bh,0xc2
  421bde:	iret   
  421bdf:	push   0x25
  421be1:	and    ebx,ebp
  421be3:	idiv   DWORD PTR [edx-0x5e9e6da]
  421be9:	mov    bh,0xc2
  421beb:	iret   
  421bec:	push   0x25
  421bee:	and    ebx,ebp
  421bf0:	idiv   DWORD PTR [edx-0x5e9e6da]
  421bf6:	mov    bh,0xc2
  421bf8:	iret   
  421bf9:	push   0x25
  421bfb:	and    ebx,ebp
  421bfd:	idiv   DWORD PTR [edx-0x5e9e6da]
  421c03:	mov    bh,0xc2
  421c05:	iret   
  421c06:	push   0x25
  421c08:	and    ebx,ebp
  421c0a:	idiv   DWORD PTR [edx-0x5e9e6da]
  421c10:	mov    bh,0xc2
  421c12:	iret   
  421c13:	push   0x25
  421c15:	and    ebx,ebp
  421c17:	idiv   DWORD PTR [edx-0x5e9e6da]
  421c1d:	mov    bh,0xc2
  421c1f:	iret   
  421c20:	push   0x25
  421c22:	and    ebx,ebp
  421c24:	idiv   DWORD PTR [edx-0x5e9e6da]
  421c2a:	mov    bh,0xc2
  421c2c:	iret   
  421c2d:	push   0x4a
  421c2f:	mov    eax,esp
  421c31:	not    DWORD PTR [ebp-0x5f9e6da]
  421c37:	mov    bh,0xe8
  421c39:	ins    DWORD PTR es:[edi],dx
  421c3a:	mov    al,0x54
  421c3c:	inc    edi
  421c3d:	adc    al,0xda
  421c3f:	and    al,0xa1
  421c41:	dec    ecx
  421c42:	sti    
  421c43:	int3   
  421c44:	pop    edi
  421c45:	sar    DWORD PTR [ebx-0x1],1
  421c48:	inc    ebx
  421c49:	push   eax
  421c4a:	outs   dx,DWORD PTR ds:[esi]
  421c4b:	lods   eax,DWORD PTR ds:[esi]
  421c4c:	test   eax,0x9700ae97
  421c51:	push   ebx
  421c52:	dec    eax
  421c53:	dec    esi
  421c54:	lods   al,BYTE PTR ds:[esi]
  421c55:	or     eax,DWORD PTR [ebx+0x7b]
  421c58:	enter  0x1583,0x56
  421c5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c5d:	in     eax,dx
  421c5e:	xchg   ebp,eax
  421c5f:	ret    0xcde8
  421c62:	lods   eax,DWORD PTR ds:[esi]
  421c63:	je     0x421c1f
  421c65:	call   0x6ee:0xcb241413
  421c6c:	mov    ds:0x9a01b4c0,al
  421c71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c72:	and    al,0x7f
  421c74:	or     ecx,esp
  421c76:	mov    al,dh
  421c78:	pop    eax
  421c79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c7a:	out    dx,eax
  421c7b:	leave  
  421c7c:	sub    dl,al
  421c7e:	inc    ecx
  421c7f:	(bad)  
  421c81:	pop    esi
  421c82:	pop    edi
  421c83:	inc    edi
  421c84:	mov    ecx,0x43897379
  421c89:	pop    eax
  421c8a:	mov    esp,0x2158ad6a
  421c8f:	lods   eax,DWORD PTR ds:[esi]
  421c90:	xchg   esp,eax
  421c91:	leave  
  421c92:	fsub   QWORD PTR [esi]
  421c94:	out    dx,al
  421c95:	call   0xaae:0x518baa44
  421c9c:	(bad)  
  421c9d:	mov    ebp,0xf025fcd2
  421ca2:	retf   0x7e3e
  421ca5:	pop    ecx
  421ca6:	dec    ebp
  421ca7:	cld    
  421ca8:	call   0xfe3d:0x99b83f62
  421caf:	pop    ebx
  421cb0:	jmp    0x18dc014b
  421cb5:	js     0x421c5b
  421cb7:	cmp    esi,eax
  421cb9:	repnz push es
  421cbb:	pop    edx
  421cbc:	and    ebp,DWORD PTR [edx-0x311b70ee]
  421cc2:	mov    eax,ds:0x31a65431
  421cc7:	jg     0x421cab
  421cc9:	cwde   
  421cca:	das    
  421ccb:	lods   eax,DWORD PTR ds:[esi]
  421ccc:	mov    edx,0xb62009ef
  421cd1:	pop    esp
  421cd2:	or     ch,BYTE PTR [ebp+0x3d258f4b]
  421cd8:	or     eax,0x5c021d5d
  421cdd:	xor    eax,0xa8380b80
  421ce2:	(bad)  
  421ce3:	jg     0x421cf4
  421ce5:	es sahf 
  421ce7:	pushf  
  421ce8:	dec    eax
  421ce9:	xchg   esi,eax
  421cea:	daa    
  421ceb:	test   BYTE PTR [ecx],bh
  421ced:	jl     0x421d2d
  421cef:	(bad)  
  421cf0:	je     0x421c99
  421cf2:	jecxz  0x421d2a
  421cf4:	inc    ebx
  421cf5:	cdq    
  421cf6:	leave  
  421cf7:	mov    dh,0xc9
  421cf9:	sub    edi,DWORD PTR [eax]
  421cfb:	jmp    0x8dfc:0xb5f9a499
  421d02:	xchg   eax,edx
  421d04:	pop    ss
  421d05:	push   ecx
  421d06:	push   cs
  421d07:	pop    ss
  421d08:	rol    DWORD PTR [edi+eax*8-0x68],1
  421d0c:	mov    dh,0x63
  421d0e:	hlt    
  421d0f:	out    0xce,eax
  421d11:	out    dx,al
  421d12:	outs   dx,BYTE PTR ds:[esi]
  421d13:	call   0x946bee13
  421d18:	retf   0x1b71
  421d1b:	jg     0x421ce8
  421d1d:	int    0x8
  421d1f:	loop   0x421d47
  421d21:	push   esi
  421d22:	loop   0x421cd1
  421d24:	mov    dh,0x3c
  421d26:	add    eax,0x1a53bd96
  421d2b:	call   0x649:0x9184c1ce
  421d32:	repnz (bad) 
  421d34:	dec    edi
  421d35:	inc    ebx
  421d36:	cmp    al,0x8c
  421d38:	pop    es
  421d39:	pop    ebp
  421d3a:	xor    ebp,DWORD PTR [ecx]
  421d3c:	or     DWORD PTR [edi],0x4c
  421d3f:	jmp    0x421cc7
  421d41:	pop    edx
  421d42:	push   esp
  421d43:	les    eax,FWORD PTR [edx-0x47f979bd]
  421d49:	fidivr WORD PTR [ecx+ebp*2+0x19]
  421d4d:	mov    eax,0xbf8fba97
  421d52:	sbb    edx,eax
  421d54:	sti    
  421d55:	ficomp WORD PTR [ecx+0x2eb29b18]
  421d5b:	outs   dx,BYTE PTR ds:[esi]
  421d5c:	lea    edi,[esi-0x19]
  421d5f:	sub    ch,ch
  421d61:	jo     0x421dd4
  421d63:	inc    edi
  421d64:	mov    ds,WORD PTR [ebx]
  421d66:	ret    0x310f
  421d69:	mov    al,0x4b
  421d6b:	xchg   edi,eax
  421d6c:	loopne 0x421d25
  421d6e:	jmp    0x421de9
  421d70:	(bad)  
  421d71:	jne    0x421d11
  421d73:	push   eax
  421d74:	outs   dx,DWORD PTR ds:[esi]
  421d75:	daa    
  421d76:	ret    
  421d77:	outs   dx,DWORD PTR ds:[esi]
  421d78:	jno    0x421d43
  421d7a:	push   0xfe68fb0e
  421d7f:	out    0x4c,al
  421d81:	rcl    ebx,cl
  421d83:	fadd   st,st(7)
  421d85:	add    DWORD PTR [edx+0x6a87d418],0x353ab7a4
  421d8f:	das    
  421d90:	mov    ebx,0x7ec2c39e
  421d95:	cmc    
  421d96:	call   0xddb5a5eb
  421d9b:	je     0x421d8a
  421d9d:	jnp    0x421e18
  421d9f:	pandn  mm7,QWORD PTR [ebx-0x73]
  421da3:	push   es
  421da4:	mov    eax,ds:0xa78ff670
  421da9:	das    
  421daa:	mov    edx,0xb76f18f1
  421daf:	ds leave 
  421db1:	xchg   edi,eax
  421db2:	jmp    0x421df1
  421db4:	jno    0x421dc2
  421db6:	in     eax,0x7e
  421db8:	sbb    bh,BYTE PTR [ebx-0x41d443bb]
  421dbe:	(bad)
  421dc2:	fistp  WORD PTR [ebx-0x776f3a41]
  421dc8:	pop    eax
  421dc9:	scas   al,BYTE PTR es:[edi]
  421dca:	add    dl,cl
  421dcc:	mov    edi,0xef67e218
  421dd1:	aad    0xc3
  421dd3:	lea    edi,[ebx]
  421dd5:	jne    0x421dba
  421dd7:	popf   
  421dd8:	jmp    DWORD PTR [eax]
  421dda:	mov    WORD PTR [ebx-0x68],ds
  421ddd:	xor    BYTE PTR [ebp-0x4f],0x63
  421de1:	jg     0x421e4a
  421de3:	jl     0x421e0a
  421de5:	cmp    eax,0xcd5fcba6
  421dea:	cmp    eax,0x8b5bf1d5
  421def:	ja     0x421dd6
  421df1:	repnz int3 
  421df3:	xor    esp,DWORD PTR [edi-0x73]
  421df6:	mov    edi,0xb6fff561
  421dfb:	popa   
  421dfc:	push   ss
  421dfd:	scas   eax,DWORD PTR es:[edi]
  421dfe:	fiadd  WORD PTR [ebp+0xb]
  421e01:	mov    esp,0x7a30bf04
  421e06:	mov    ebp,0xeca1c3b0
  421e0b:	out    0x59,eax
  421e0d:	jo     0x421dcb
  421e0f:	mov    eax,0x9f8525
  421e14:	dec    esp
  421e15:	icebp  
  421e16:	dec    esp
  421e17:	xchg   BYTE PTR [edi-0x68],ch
  421e1a:	mov    bl,BYTE PTR [edi-0x3b47415c]
  421e20:	inc    ebx
  421e21:	xchg   edi,eax
  421e22:	mov    dl,0x5a
  421e24:	jbe    0x421e88
  421e26:	or     eax,0x95ca8bc
  421e2b:	or     edx,edi
  421e2d:	push   edi
  421e2e:	mov    ebx,0xcc2bd895
  421e33:	mov    al,0x47
  421e35:	adc    ch,BYTE PTR [ebp+0x73ce10ed]
  421e3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e3c:	cld    
  421e3d:	adc    eax,0x28e4390
  421e42:	jne    0x421e5a
  421e44:	out    0xd2,eax
  421e46:	out    dx,al
  421e47:	adc    BYTE PTR [edx],bh
  421e49:	ficom  DWORD PTR [eax-0x3b81c7d0]
  421e4f:	inc    esi
  421e50:	aaa    
  421e51:	xor    BYTE PTR [ecx+edi*4-0x1],al
  421e55:	mov    esi,0xfa274237
  421e5a:	idiv   BYTE PTR [esp+esi*2-0x53189d3c]
  421e61:	pop    edx
  421e62:	cmp    ch,BYTE PTR [edi-0x237022cc]
  421e68:	inc    eax
  421e69:	sub    ebx,DWORD PTR [ebx+0x33ea9f42]
  421e6f:	adc    cl,bh
  421e71:	and    DWORD PTR ds:0x2cddd1e8,0x333a3cf3
  421e7b:	jmp    0x421e4c
  421e7d:	mov    eax,0xcdb1c253
  421e82:	mov    ah,0xc1
  421e84:	gs pop es
  421e86:	lahf   
  421e87:	cs loop 0x421e0f
  421e8a:	add    dl,BYTE PTR [ebx+edi*8-0x1f]
  421e8e:	push   ds
  421e8f:	ret    
  421e90:	xor    eax,0x924111b4
  421e95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e96:	sbb    ebx,DWORD PTR [edx-0x12]
  421e99:	add    al,0xbc
  421e9b:	hlt    
  421e9c:	aam    0x9
  421e9e:	sbb    al,dh
  421ea0:	adc    dl,BYTE PTR [esi+ecx*2+0x59]
  421ea4:	or     al,0x6f
  421ea6:	add    al,0xe7
  421ea8:	lds    edx,FWORD PTR [edi-0x5b]
  421eab:	ins    DWORD PTR es:[edi],dx
  421eac:	mov    ?,WORD PTR [eax]
  421eae:	sbb    eax,0xaae55ad6
  421eb3:	mov    edx,0x61f51626
  421eb8:	lahf   
  421eb9:	xor    eax,0x40768c49
  421ebe:	lods   eax,DWORD PTR ds:[esi]
  421ebf:	bound  edx,QWORD PTR [eax]
  421ec1:	daa    
  421ec2:	mov    ebp,0x596fba84
  421ec7:	push   ebx
  421ec8:	jae    0x421f13
  421eca:	retf   0x973
  421ecd:	jge    0x421eca
  421ecf:	inc    esp
  421ed0:	xor    BYTE PTR [ebp-0x3e],0x70
  421ed4:	inc    esi
  421ed5:	jmp    FWORD PTR [esi+eiz*1]
  421ed8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ed9:	(bad)  
  421eda:	push   eax
  421edb:	ror    BYTE PTR [eax-0x2b],0xe2
  421edf:	daa    
  421ee0:	sub    BYTE PTR [edx-0x12116fe1],ch
  421ee6:	push   ebp
  421ee7:	mov    bl,0xc
  421ee9:	xchg   ecx,eax
  421eea:	fwait
  421eeb:	(bad)  
  421eec:	adc    eax,0x5f87f08a
  421ef1:	xor    DWORD PTR [eax+0x73],esp
  421ef4:	xor    al,0x3a
  421ef6:	scas   eax,DWORD PTR es:[edi]
  421ef7:	fldenv [edi]
  421ef9:	jmp    0x421ea1
  421efb:	add    BYTE PTR [edx+eiz*8],ah
  421efe:	xor    eax,0xa6f8724e
  421f03:	jp     0x421eb9
  421f05:	jmp    0x421eb5
  421f07:	test   DWORD PTR [ecx],edx
  421f09:	loopne 0x421ea5
  421f0b:	mov    esp,0x33223edc
  421f10:	mov    eax,0x8e457d38
  421f15:	call   0xa86097e
  421f1a:	adc    DWORD PTR [edx],edx
  421f1c:	dec    eax
  421f1d:	es adc eax,0x8d835b6d
  421f23:	in     eax,0xcf
  421f25:	push   edx
  421f26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f27:	dec    eax
  421f28:	push   ds
  421f29:	loopne 0x421f6b
  421f2b:	push   edi
  421f2c:	cmp    dh,0x17
  421f2f:	dec    edx
  421f30:	pop    ds
  421f31:	push   edx
  421f32:	cmp    BYTE PTR [ecx-0x6a],dh
  421f35:	out    0xa8,eax
  421f37:	mov    ch,0xac
  421f39:	sub    BYTE PTR ds:0x64017b06,0x97
  421f40:	xchg   ecx,eax
  421f41:	push   0x79
  421f43:	hlt    
  421f44:	loopne 0x421f2c
  421f46:	mov    cl,0x91
  421f48:	das    
  421f49:	fucomp st(5)
  421f4b:	xor    BYTE PTR [eax],dh
  421f4d:	or     al,0x4
  421f4f:	cmp    al,0x32
  421f51:	jmp    0xda8f:0xcebda40c
  421f58:	mov    esp,0x85e67cca
  421f5d:	aas    
  421f5e:	pop    ds
  421f5f:	pushf  
  421f60:	rol    DWORD PTR [edx+0x19],0x21
  421f64:	cdq    
  421f65:	xchg   edi,eax
  421f66:	cli    
  421f67:	aas    
  421f68:	sbb    BYTE PTR [ebx],dh
  421f6a:	imul   eax,DWORD PTR [ebp-0x29812ae],0x36
  421f71:	mov    ebx,0x86f971fc
  421f76:	cmp    BYTE PTR [esi+0x35],dh
  421f79:	jb     0x421fdf
  421f7b:	popf   
  421f7c:	gs repnz add eax,0xd9a2ba65
  421f83:	xlat   BYTE PTR ds:[ebx]
  421f84:	adc    BYTE PTR [eax-0x9f20971],dh
  421f8a:	(bad)  
  421f8b:	jns    0x421f6b
  421f8d:	fidiv  DWORD PTR [ecx+ebp*8+0x6e2a71e2]
  421f94:	bound  ebp,QWORD PTR [edx]
  421f96:	xchg   edi,eax
  421f97:	sbb    ecx,edi
  421f99:	shr    BYTE PTR [esi],0xc2
  421f9c:	mov    al,ds:0x792b0a73
  421fa1:	ins    DWORD PTR es:[edi],dx
  421fa2:	xchg   ebp,eax
  421fa3:	jne    0x421f46
  421fa5:	scas   eax,DWORD PTR es:[edi]
  421fa6:	(bad)
  421fa9:	sbb    eax,0xf9fc06d5
  421fae:	mov    ebx,0xa7b72cee
  421fb3:	cmp    bl,cl
  421fb5:	(bad)  
  421fb6:	lods   eax,DWORD PTR ds:[esi]
  421fb7:	mov    bh,0x53
  421fb9:	popa   
  421fba:	mov    ds:0x66b6ae8d,eax
  421fbf:	loope  0x42200c
  421fc1:	neg    BYTE PTR [ecx+0x1fedb005]
  421fc7:	leave  
  421fc8:	cmp    BYTE PTR [esp+edi*2+0x8],al
  421fcc:	test   al,0x1b
  421fce:	mov    al,0xf7
  421fd0:	inc    DWORD PTR [edi-0x64670f4]
  421fd6:	scas   eax,DWORD PTR es:[edi]
  421fd7:	dec    esp
  421fd8:	dec    ebx
  421fd9:	int3   
  421fda:	aam    0xcd
  421fdc:	bswap  ebp
  421fde:	cdq    
  421fdf:	pop    ebx
  421fe0:	push   ecx
  421fe1:	mov    ecx,0x38f0fd8f
  421fe6:	out    0xc9,al
  421fe8:	shl    cl,1
  421fea:	add    eax,0x97173d29
  421fef:	loopne 0x42206e
  421ff1:	sub    DWORD PTR [ecx-0x70],edx
  421ff4:	inc    edx
  421ff5:	jb     0x421fda
  421ff7:	lods   eax,DWORD PTR ds:[esi]
  421ff8:	inc    eax
  421ff9:	inc    esi
  421ffa:	out    0x91,al
  421ffc:	jecxz  0x42204f
  421ffe:	mov    ch,0xdd
  422000:	mul    DWORD PTR [edi-0x101e9422]
  422006:	ins    DWORD PTR es:[edi],dx
  422007:	adc    al,0x4
  422009:	sub    ecx,DWORD PTR [ebx]
  42200b:	add    DWORD PTR ds:0x52d2a450,0xab8ddd28
  422015:	push   ds
  422016:	pop    es
  422017:	ss xchg edx,eax
  422019:	xor    cl,BYTE PTR [esi+0x28]
  42201c:	mov    DWORD PTR [ecx-0x44b2ea79],edx
  422022:	sbb    DWORD PTR [edi+ebp*1],ebx
  422025:	push   eax
  422026:	or     BYTE PTR [ecx],ch
  422028:	xchg   ebx,eax
  422029:	mov    ecx,0xf03d8901
  42202e:	fcomp  st(0)
  422030:	jae    0x422034
  422032:	jle    0x422059
  422034:	mov    DWORD PTR [edx+0x741b401c],ecx
  42203a:	out    dx,eax
  42203b:	xchg   ebp,eax
  42203c:	(bad)  
  42203d:	stos   DWORD PTR es:[edi],eax
  42203e:	dec    edi
  42203f:	push   ebx
  422040:	cmp    eax,0x82954718
  422045:	movups xmm1,XMMWORD PTR [ebp+eax*4-0x68]
  42204a:	dec    esp
  42204b:	inc    ecx
  42204c:	xchg   DWORD PTR [edi],ebx
  42204e:	icebp  
  42204f:	and    al,bh
  422051:	fsubr  st,st(1)
  422053:	scas   eax,DWORD PTR es:[edi]
  422054:	ins    DWORD PTR es:[edi],dx
  422055:	xlat   BYTE PTR ds:[ebx]
  422056:	jmp    0x53e2:0x664fbe0e
  42205d:	test   cl,0x3
  422060:	int3   
  422061:	inc    edx
  422062:	stos   DWORD PTR es:[edi],eax
  422063:	and    cl,BYTE PTR [ecx]
  422065:	(bad)  
  422066:	jp     0x4220ce
  422068:	pop    edx
  422069:	adc    ebx,DWORD PTR ds:0x35692686
  42206f:	mov    esi,es
  422071:	cld    
  422072:	mov    ebx,0xa0f05315
  422077:	jge    0x422096
  422079:	or     DWORD PTR [edx+0x55],edx
  42207c:	cwde   
  42207d:	jg     0x4220bc
  42207f:	dec    edi
  422080:	xor    eax,0xa8acfe91
  422085:	cmc    
  422086:	fcmove st,st(2)
  422088:	cmp    al,bh
  42208a:	sbb    BYTE PTR [esi],bh
  42208c:	aas    
  42208d:	jnp    0x422053
  42208f:	fisttp DWORD PTR [ecx-0x59]
  422092:	fucomip st,st(7)
  422094:	push   ebx
  422095:	cdq    
  422096:	imul   ebx,DWORD PTR [esi+esi*4-0x4e],0xd020802b
  42209e:	fdiv   DWORD PTR [ecx-0x47]
  4220a1:	loope  0x422057
  4220a3:	xchg   esi,eax
  4220a4:	pop    ebp
  4220a5:	jns    0x422120
  4220a7:	dec    ebp
  4220a8:	lds    ecx,FWORD PTR [edi+0x77]
  4220ab:	ins    DWORD PTR es:[edi],dx
  4220ac:	dec    edx
  4220ad:	add    bh,BYTE PTR [ebp+0x42]
  4220b0:	xor    DWORD PTR [esp+eax*4-0x75],0xcace60f0
  4220b8:	sbb    eax,0xc7250bf0
  4220bd:	imul   ecx,DWORD PTR [edi+ebx*2],0xb19a86ff
  4220c4:	test   al,0xb9
  4220c6:	(bad)  [ebx-0x67]
  4220c9:	mov    ebx,0xc1ce6f4f
  4220ce:	cmc    
  4220cf:	test   BYTE PTR [edx+ecx*8],0x86
  4220d3:	addr16 inc ebx
  4220d5:	arpl   WORD PTR [edi-0x20793faf],dx
  4220db:	pop    esi
  4220dc:	or     eax,0x35535d39
  4220e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220e2:	icebp  
  4220e3:	pop    ebx
  4220e4:	mov    ah,0x23
  4220e6:	inc    esi
  4220e7:	xor    DWORD PTR [esi+0x4f],ebp
  4220ea:	enter  0xd025,0x78
  4220ee:	push   0xfffffff3
  4220f0:	pop    eax
  4220f1:	jp     0x4220e3
  4220f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220f4:	mov    eax,ds:0x6ecef647
  4220f9:	and    eax,0x896acb01
  4220fe:	sub    ebx,esp
  422100:	retf   
  422101:	adc    DWORD PTR [ebp+ebx*4+0x1085acc5],ebp
  422108:	inc    esi
  422109:	xchg   edi,eax
  42210a:	mov    ds:0x88c669e0,al
  42210f:	cmp    edx,ebp
  422111:	cvtpi2ps xmm4,QWORD PTR [ebp-0x2bf93d1d]
  422118:	ja     0x4220e4
  42211a:	jno    0x4220c5
  42211c:	sub    DWORD PTR [ecx-0x3d],ebx
  42211f:	mov    bl,0x56
  422121:	ins    BYTE PTR es:[edi],dx
  422122:	push   eax
  422123:	lods   al,BYTE PTR ds:[esi]
  422124:	inc    eax
  422125:	cmp    ecx,edi
  422127:	dec    ebx
  422128:	scas   eax,DWORD PTR es:[edi]
  422129:	mov    al,0x82
  42212b:	es xchg edi,eax
  42212d:	les    esi,FWORD PTR [ebp-0x1f4eb4a5]
  422133:	sub    esp,edi
  422135:	loopne 0x4221a3
  422137:	in     eax,dx
  422138:	(bad)  
  422139:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42213a:	outs   dx,DWORD PTR ds:[esi]
  42213b:	dec    edx
  42213c:	xchg   edx,eax
  42213d:	sahf   
  42213e:	mov    ds:0x807f5634,al
  422143:	adc    eax,0x85b5a86b
  422148:	mov    eax,ds:0x9d5df7e0
  42214d:	or     BYTE PTR [esi-0x14],bh
  422150:	ja     0x422183
  422152:	int3   
  422153:	pop    ss
  422154:	mov    bh,0x54
  422156:	push   ebp
  422157:	stc    
  422158:	call   0xcd8:0x8cdd0ecf
  42215f:	data16 mov dh,0x6b
  422162:	imul   ebx,DWORD PTR [ebx-0xe],0xffffffbe
  422166:	inc    eax
  422167:	push   ds
  422168:	fild   QWORD PTR [ebx-0xf0b156f]
  42216e:	pop    ebx
  42216f:	push   es
  422170:	imul   ecx,DWORD PTR [edi-0x48],0xdb97389f
  422177:	sahf   
  422178:	daa    
  422179:	fistp  QWORD PTR [edi+0x44]
  42217c:	jae    0x4220fe
  42217e:	sub    edx,esp
  422180:	jp     0x4221dd
  422182:	das    
  422183:	mov    dl,BYTE PTR [ecx+0x17d74798]
  422189:	out    dx,eax
  42218a:	stos   DWORD PTR es:[edi],eax
  42218b:	lahf   
  42218c:	or     al,0x18
  42218e:	stos   BYTE PTR es:[edi],al
  42218f:	lahf   
  422190:	adc    dl,al
  422192:	add    BYTE PTR [esi+0x1b69d147],dl
  422198:	dec    ecx
  422199:	iret   
  42219a:	jns    0x4221f6
  42219c:	push   ebx
  42219d:	pop    esi
  42219e:	xor    ebp,DWORD PTR [eax+0x3bfb8991]
  4221a4:	or     eax,0x2baadcf5
  4221a9:	mov    edx,0xb186bd41
  4221ae:	mov    esi,0x23f0342e
  4221b3:	xor    al,0x56
  4221b5:	fmul   st(2),st
  4221b7:	cmc    
  4221b8:	push   0x46414ffe
  4221bd:	adc    eax,0x6fb219fb
  4221c2:	mov    bl,0x46
  4221c4:	or     edx,DWORD PTR [esi-0x1a5384cb]
  4221ca:	iret   
  4221cb:	nop
  4221cc:	jno    0x4221d8
  4221ce:	sahf   
  4221cf:	xor    ebx,DWORD PTR [esi-0x6ff4e4c9]
  4221d5:	fcmovnb st,st(0)
  4221d7:	or     BYTE PTR [edx],cl
  4221d9:	add    BYTE PTR [edi],0x42
  4221dc:	dec    esp
  4221dd:	ss mov ebx,0xba25a05c
  4221e3:	stc    
  4221e4:	addr16 and al,0xb5
  4221e7:	into   
  4221e8:	xor    ah,BYTE PTR [edi-0x3a]
  4221eb:	mov    edx,0xad0c9235
  4221f0:	(bad)  
  4221f1:	fsubr  st(5),st
  4221f3:	cmp    al,ah
  4221f5:	cmp    bh,dh
  4221f7:	sub    DWORD PTR [edi+eiz*1-0x17],ebp
  4221fb:	mov    BYTE PTR [ecx+0x5c70c707],dh
  422201:	push   ecx
  422202:	sahf   
  422203:	push   ecx
  422204:	fidiv  DWORD PTR [edx]
  422206:	adc    ecx,DWORD PTR [ebp-0x71846ac8]
  42220c:	cmp    DWORD PTR [ecx],0x13
  42220f:	cmp    DWORD PTR [edx],ecx
  422211:	jns    0x4221e2
  422213:	mov    ah,0xf7
  422215:	push   cs
  422216:	jo     0x4221d5
  422218:	test   eax,0xb7e2b37a
  42221d:	mov    ds:0x92f227fc,eax
  422222:	pop    es
  422223:	push   ss
  422224:	pop    edi
  422225:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  422227:	inc    ebp
  422228:	push   cs
  422229:	mov    dh,0x1
  42222b:	push   edi
  42222c:	adc    dl,0x7a
  42222f:	lds    eax,FWORD PTR [edx-0x2e]
  422232:	and    al,0xd8
  422234:	jb     0x4221d7
  422236:	xchg   esp,eax
  422237:	and    dh,BYTE PTR [eax+ecx*4]
  42223a:	inc    ebp
  42223b:	das    
  42223c:	xchg   BYTE PTR [ecx+0x5a],dh
  42223f:	push   ds
  422240:	adc    al,0x56
  422242:	cwde   
  422243:	imul   esp,DWORD PTR [eiz*8-0x4ab2d2f9],0xffffffeb
  42224b:	and    DWORD PTR [esi+eiz*4+0x74464cd2],edx
  422252:	hlt    
  422253:	and    bl,bl
  422255:	ss push edi
  422257:	test   BYTE PTR [edi-0x358afc3c],ah
  42225d:	sub    bh,BYTE PTR [edi]
  42225f:	inc    esi
  422260:	fmul   DWORD PTR ds:0xcfcac8b6
  422266:	mov    ebp,0x9b536e0c
  42226b:	inc    DWORD PTR [edi-0x5f562ded]
  422271:	sbb    al,0x5c
  422273:	sub    cl,BYTE PTR [ebx]
  422275:	mov    ds:0xab77b06a,al
  42227a:	lea    eax,[ecx+0x42]
  42227d:	mov    ebx,0x31b955c8
  422282:	fwait
  422283:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422284:	mov    DWORD PTR [ebx-0xd],ecx
  422287:	adc    DWORD PTR [ebx+esi*2],0x5905b1bd
  42228e:	or     DWORD PTR [ebx+ecx*2-0x6a],ecx
  422292:	push   0x65d4799f
  422297:	out    dx,eax
  422298:	inc    ebx
  422299:	iret   
  42229a:	stos   DWORD PTR es:[edi],eax
  42229b:	pop    ds
  42229c:	jo     0x4222fd
  42229e:	push   ss
  42229f:	arpl   WORD PTR [ebp-0x3d8c1882],bx
  4222a5:	fist   DWORD PTR [esi]
  4222a7:	add    eax,0xf3be3228
  4222ac:	in     al,dx
  4222ad:	push   edi
  4222ae:	jo     0x42227c
  4222b0:	mov    edx,0xc404ee87
  4222b5:	mov    ch,0xcc
  4222b7:	mov    bl,0xc
  4222b9:	int    0x8e
  4222bb:	and    DWORD PTR [edx+0x5c],edi
  4222be:	nop
  4222bf:	std    
  4222c0:	(bad)  
  4222c1:	mov    esp,0x3c49b240
  4222c6:	fimul  DWORD PTR [ebp+0x490bc6a8]
  4222cc:	and    DWORD PTR [edx],ecx
  4222ce:	dec    edx
  4222cf:	aaa    
  4222d0:	jno    0x42233c
  4222d2:	dec    esi
  4222d3:	mov    ebx,DWORD PTR [edx]
  4222d5:	sar    DWORD PTR [ebx-0x1221fe3d],1
  4222db:	jp     0x422273
  4222dd:	xchg   ecx,eax
  4222de:	jle    0x422278
  4222e0:	adc    BYTE PTR [esp+esi*1-0x12],ah
  4222e4:	jo     0x4222f2
  4222e6:	adc    al,0x9c
  4222e8:	push   0x2d230048
  4222ed:	sbb    esi,ebp
  4222ef:	mov    ds:0xbda1f765,eax
  4222f4:	(bad)  
  4222f5:	xchg   ecx,eax
  4222f6:	leave  
  4222f7:	arpl   WORD PTR [edx-0x453b0f31],si
  4222fd:	xlat   BYTE PTR ds:[ebx]
  4222fe:	in     eax,dx
  4222ff:	scas   eax,DWORD PTR es:[edi]
  422300:	adc    ah,BYTE PTR [ebx+0x34]
  422303:	add    eax,0xd9c008c4
  422308:	dec    edi
  422309:	pop    ebx
  42230a:	push   0x37
  42230c:	jbe    0x422344
  42230e:	push   ds
  42230f:	sbb    eax,0x557d6522
  422314:	jae    0x4222d0
  422316:	cmp    ebp,DWORD PTR [edi+0x2d]
  422319:	std    
  42231a:	mov    ah,0x1c
  42231c:	xor    eax,DWORD PTR [esi+ebp*8+0x7b3e9d24]
  422323:	push   ds
  422324:	aad    0x2c
  422326:	xchg   ecx,eax
  422327:	es jg  0x422374
  42232a:	adc    edi,0x7100533e
  422330:	mov    edx,0xae7f4890
  422335:	xchg   ecx,eax
  422336:	mov    al,0x7c
  422338:	mov    cl,0xc3
  42233a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42233b:	test   eax,0x1393230
  422340:	lds    ebx,FWORD PTR [ecx+0x73348934]
  422346:	mov    bh,BYTE PTR [ebx]
  422348:	jne    0x42233f
  42234a:	out    dx,al
  42234b:	and    al,BYTE PTR [ebx]
  42234d:	cdq    
  42234e:	inc    ebp
  42234f:	and    ebp,DWORD PTR [eax+ebp*1]
  422352:	cld    
  422353:	(bad)  
  422354:	pop    esp
  422355:	lahf   
  422356:	jb     0x4223a5
  422358:	mov    bl,0x29
  42235a:	aas    
  42235b:	cli    
  42235c:	add    ebp,DWORD PTR [eax-0x14]
  42235f:	sahf   
  422360:	loop   0x42235d
  422362:	inc    edi
  422363:	scas   al,BYTE PTR es:[edi]
  422364:	sbb    ch,BYTE PTR [edi]
  422366:	data16 repz add al,0x7f
  42236a:	or     al,dl
  42236c:	cdq    
  42236d:	inc    esi
  42236e:	and    BYTE PTR [ebx+0x44beb88],ah
  422374:	mov    esp,0x94259d66
  422379:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42237a:	sbb    ch,BYTE PTR [ebx-0x6487eb9a]
  422380:	xchg   edx,eax
  422381:	and    bh,BYTE PTR [edi+0x2a8ed986]
  422387:	inc    esi
  422388:	repz jl 0x4223e4
  42238b:	or     eax,0x8f2aac87
  422390:	mov    eax,ecx
  422392:	clc    
  422393:	or     DWORD PTR [edi],edi
  422395:	and    DWORD PTR [edx-0x7a],0x708dd225
  42239c:	pushf  
  42239d:	mov    dl,al
  42239f:	dec    eax
  4223a0:	pop    esi
  4223a1:	cmp    eax,0x2773e22e
  4223a6:	xor    al,0x3c
  4223a8:	in     al,dx
  4223a9:	add    eax,0xf277a03e
  4223ae:	fsubr  st,st(5)
  4223b0:	mov    BYTE PTR [ecx+esi*1-0x33],al
  4223b4:	jle    0x4223ee
  4223b6:	mov    al,ds:0x8eea1722
  4223bb:	rcr    BYTE PTR [ebx+esi*8+0x21],cl
  4223bf:	jo     0x4223ac
  4223c1:	retf   0xafa
  4223c4:	(bad)  
  4223c5:	fcomp  st(7)
  4223c7:	ret    0xd80a
  4223ca:	in     al,0x60
  4223cc:	ins    BYTE PTR es:[edi],dx
  4223cd:	ret    
  4223ce:	enter  0x6e66,0xc0
  4223d2:	iret   
  4223d3:	pop    ebp
  4223d4:	add    al,BYTE PTR cs:[ebp-0x62]
  4223d8:	dec    edx
  4223d9:	dec    BYTE PTR [ebx-0xbd310ef]
  4223df:	shl    ch,1
  4223e1:	js     0x4223ed
  4223e3:	mov    ebx,0x1de48890
  4223e8:	pushf  
  4223e9:	bound  edi,QWORD PTR [eax]
  4223eb:	fiadd  DWORD PTR [edx+edi*2]
  4223ee:	pop    ebp
  4223ef:	(bad)  
  4223f0:	jl     0x4223a9
  4223f2:	mov    ds:0xf8ced169,al
  4223f7:	mov    edi,0x84e76219
  4223fc:	call   0xa6ed7ea2
  422401:	mov    al,0x80
  422403:	xor    ebp,eax
  422405:	shl    ebx,1
  422407:	xchg   edi,eax
  422408:	sbb    eax,0xffac22f1
  42240d:	and    cl,al
  42240f:	xlat   BYTE PTR ds:[ebx]
  422410:	cmp    eax,0xc5855f2b
  422415:	dec    ebx
  422416:	xchg   ebp,eax
  422417:	scas   al,BYTE PTR es:[edi]
  422418:	ds xchg edx,eax
  42241a:	jo     0x4223a3
  42241c:	loope  0x42239e
  42241e:	aaa    
  42241f:	shl    DWORD PTR [eax+0x4afd38bc],1
  422425:	sub    BYTE PTR [edx+edi*4],dl
  422428:	test   eax,0x6bfd8115
  42242d:	adc    al,0x21
  42242f:	jo     0x4223e6
  422431:	inc    esp
  422432:	cmc    
  422433:	sub    ch,BYTE PTR [eax]
  422435:	retf   
  422436:	adc    BYTE PTR [esi-0x69007102],0x9f
  42243d:	js     0x42241a
  42243f:	sbb    eax,0x74be625a
  422444:	(bad)  
  422445:	icebp  
  422446:	push   cs
  422447:	ret    0x7e0a
  42244a:	das    
  42244b:	arpl   WORD PTR [ebp+eax*1+0x1a17d8c7],dx
  422452:	sar    DWORD PTR [eax-0x748c16db],1
  422458:	mov    ah,0x31
  42245a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42245b:	in     al,0x2b
  42245d:	ds (bad) 
  42245f:	cli    
  422460:	lods   eax,DWORD PTR ds:[esi]
  422461:	sub    DWORD PTR [esi-0x4d727748],0x9
  422468:	mov    edx,0x9738b0c5
  42246d:	push   esp
  42246e:	xor    eax,0x4d013156
  422473:	les    edi,FWORD PTR [esi+eax*4]
  422476:	xchg   esp,eax
  422477:	lods   al,BYTE PTR ds:[esi]
  422478:	ror    BYTE PTR [edi],cl
  42247a:	(bad)  
  42247b:	pop    ecx
  42247c:	pop    eax
  42247d:	daa    
  42247e:	pop    esp
  42247f:	cmp    BYTE PTR [esi+edi*2+0x7d],bl
  422483:	mov    eax,0xd12bd8cf
  422488:	mov    al,ds:0x61afd3e1
  42248d:	sub    esp,DWORD PTR [ecx+0x23c9d462]
  422493:	adc    eax,0x57b8db1
  422498:	bound  eax,QWORD PTR [ebx]
  42249a:	call   FWORD PTR [edx]
  42249c:	sub    DWORD PTR [esi+0x6c],eax
  42249f:	lahf   
  4224a0:	js     0x422485
  4224a2:	rcl    esi,cl
  4224a4:	adc    BYTE PTR [edi-0x1a],0xd1
  4224a8:	jb     0x422529
  4224aa:	cmp    BYTE PTR [esi],bl
  4224ac:	fsubrp st(4),st
  4224ae:	add    esp,ecx
  4224b0:	sub    eax,0x46dd6b2f
  4224b5:	xchg   ebx,eax
  4224b6:	pop    eax
  4224b7:	xchg   edx,eax
  4224b8:	inc    edi
  4224b9:	test   al,0xa5
  4224bb:	inc    ebx
  4224bc:	jle    0x422529
  4224be:	push   ds
  4224bf:	sbb    cl,BYTE PTR [edi]
  4224c1:	(bad)  
  4224c2:	pusha  
  4224c3:	mov    eax,DWORD PTR [ebp-0x3b9218f6]
  4224c9:	sbb    DWORD PTR [ebp-0x421ea91e],0xffffffcb
  4224d0:	int    0x38
  4224d2:	dec    esp
  4224d3:	pop    ebx
  4224d4:	xor    DWORD PTR [ebp+0x74],ebx
  4224d7:	fcom   QWORD PTR [esi]
  4224d9:	jecxz  0x4224fe
  4224db:	mov    ah,0x6d
  4224dd:	add    al,BYTE PTR [edi+0x3f]
  4224e0:	xchg   esi,eax
  4224e1:	push   ebp
  4224e2:	sbb    esp,ebx
  4224e4:	test   BYTE PTR [edi+0x45],ah
  4224e7:	fild   DWORD PTR [esi+0x27f6984d]
  4224ed:	pop    ds
  4224ee:	sbb    ch,dl
  4224f0:	jno    0x4224e9
  4224f2:	push   ebp
  4224f3:	lds    edx,FWORD PTR [ebx]
  4224f5:	rcl    DWORD PTR [ecx],cl
  4224f7:	sbb    BYTE PTR [eax],dh
  4224f9:	jmp    0x942bb130
  4224fe:	daa    
  4224ff:	jns    0x422525
  422501:	pop    ss
  422502:	loope  0x422533
  422504:	(bad)
  422508:	jecxz  0x4224f3
  42250a:	outs   dx,DWORD PTR ds:[esi]
  42250b:	sub    DWORD PTR [ecx-0x64a92268],edi
  422511:	and    al,0x82
  422513:	inc    edx
  422514:	jo     0x422590
  422516:	sbb    dh,dh
  422518:	popa   
  422519:	dec    ecx
  42251a:	sbb    esp,DWORD PTR [esi]
  42251c:	pop    ebp
  42251d:	fwait
  42251e:	cmc    
  42251f:	sbb    BYTE PTR [edi],dl
  422521:	mov    ds:0xa2aa1594,eax
  422526:	test   dl,al
  422528:	in     eax,0x31
  42252a:	addr16 pop edx
  42252c:	icebp  
  42252d:	adc    cl,cl
  42252f:	jbe    0x4224ff
  422531:	mov    DWORD PTR [edx+0xb],ebp
  422534:	mov    ch,0x11
  422536:	leavew 
  422538:	mov    eax,ds:0xe04fa360
  42253d:	out    dx,eax
  42253e:	gs xchg esp,eax
  422540:	or     al,0x89
  422542:	test   eax,0x677b7755
  422547:	push   ecx
  422548:	hlt    
  422549:	ins    DWORD PTR es:[edi],dx
  42254a:	adc    al,0x8f
  42254c:	lods   eax,DWORD PTR ds:[esi]
  42254d:	outs   dx,DWORD PTR ds:[esi]
  42254f:	dec    eax
  422550:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422551:	popf   
  422552:	xchg   esi,eax
  422553:	es mov ah,al
  422556:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422557:	repz push es
  422559:	mov    esi,0xcd573421
  42255e:	and    eax,esi
  422560:	fisub  DWORD PTR [edi+0x21]
  422563:	xor    BYTE PTR [esi-0x302bc2a2],al
  422569:	mov    eax,0x265bf10a
  42256e:	mov    dl,dh
  422570:	push   esi
  422571:	or     bh,BYTE PTR [ecx+ebx*1-0x60b665b8]
  422578:	push   es
  422579:	jbe    0x422549
  42257b:	sub    al,0x68
  42257d:	ficom  WORD PTR [edi+0x12a3e0f3]
  422583:	ds mov ecx,0xee255c60
  422589:	adc    dl,BYTE PTR [ecx+ebp*2]
  42258c:	mov    ch,BYTE PTR [ecx-0xd6a7c5b]
  422592:	ja     0x42253b
  422594:	and    eax,DWORD PTR [edi]
  422596:	aam    0x6a
  422598:	test   al,0x8c
  42259a:	test   BYTE PTR [ecx+0x5d],0xa4
  42259e:	ror    BYTE PTR [eax],1
  4225a0:	leave  
  4225a1:	dec    esi
  4225a2:	aaa    
  4225a3:	scas   al,BYTE PTR es:[edi]
  4225a4:	neg    DWORD PTR [ecx]
  4225a6:	push   ss
  4225a7:	sub    eax,0xd7b11529
  4225ac:	cmp    BYTE PTR [edx+0x14],0x1b
  4225b0:	push   ds
  4225b1:	mov    ecx,0xb7483c98
  4225b6:	jp     0x42262f
  4225b8:	jae    0x42262c
  4225ba:	push   edi
  4225bb:	push   ecx
  4225bc:	stos   DWORD PTR es:[edi],eax
  4225bd:	or     edx,ecx
  4225bf:	or     eax,ecx
  4225c1:	pusha  
  4225c2:	dec    ax
  4225c4:	cmp    DWORD PTR [ebx+0x59b23d06],eax
  4225ca:	aas    
  4225cb:	fst    DWORD PTR [edx]
  4225cd:	mov    dh,0xcd
  4225cf:	dec    ecx
  4225d0:	cmp    BYTE PTR [esi],ah
  4225d2:	inc    esp
  4225d3:	clc    
  4225d4:	shr    bl,cl
  4225d6:	sti    
  4225d7:	inc    ecx
  4225d8:	sbb    esp,edi
  4225da:	pushf  
  4225db:	frstor [ecx]
  4225dd:	sub    al,0x56
  4225df:	xor    al,0xf0
  4225e1:	xor    eax,0xc41d5910
  4225e6:	daa    
  4225e7:	inc    ebx
  4225e8:	fistp  WORD PTR [edx]
  4225ea:	mov    bh,0x4e
  4225ec:	outs   dx,BYTE PTR ds:[esi]
  4225ed:	inc    edi
  4225ee:	dec    ebx
  4225ef:	push   esp
  4225f0:	aad    0x2a
  4225f2:	pop    eax
  4225f3:	push   ss
  4225f4:	jmp    0x1a18:0xe188e587
  4225fb:	xchg   edx,eax
  4225fc:	inc    ebp
  4225fd:	rcl    DWORD PTR [esi],cl
  4225ff:	push   ebx
  422600:	adc    ecx,DWORD PTR [edi+0x16]
  422603:	push   0xc4a767ed
  422608:	(bad)  
  422609:	out    dx,eax
  42260a:	and    al,0xc6
  42260c:	pop    ebx
  42260d:	int    0xdc
  42260f:	pop    ebp
  422610:	int3   
  422611:	cmp    eax,0xde7c1a6b
  422616:	jbe    0x422634
  422618:	inc    eax
  422619:	dec    eax
  42261a:	fwait
  42261b:	rcr    BYTE PTR [edi+0x6b4f4629],cl
  422621:	(bad)  
  422623:	test   DWORD PTR [esi+esi*4-0x5e5b01ee],esp
  42262a:	xlat   BYTE PTR ds:[ebx]
  42262b:	addr16 push edx
  42262d:	inc    ecx
  42262e:	jle    0x42266b
  422630:	mov    ebx,0x10743f67
  422635:	mov    ch,0xd1
  422637:	push   cs
  422638:	or     edx,edi
  42263a:	sahf   
  42263b:	pop    ss
  42263c:	lock mov ebp,0xdf426977
  422642:	pop    esi
  422643:	outs   dx,BYTE PTR ds:[esi]
  422644:	fsub   QWORD PTR ds:0xdfd3514a
  42264a:	fild   WORD PTR [edx+0x72a877b5]
  422650:	mov    ecx,0xd96e880
  422655:	outs   dx,DWORD PTR ds:[esi]
  422656:	mov    edx,DWORD PTR [edi+0x45]
  422659:	sbb    DWORD PTR [ebx+0x5d503c1c],0xffffffec
  422660:	loopne 0x4226a9
  422662:	pop    esp
  422663:	gs jae 0x42265a
  422666:	fucomp st(5)
  422668:	sub    al,0x4f
  42266a:	ffreep st(7)
  42266c:	push   0x9e88f04a
  422671:	jmp    0x9c2a3e59
  422676:	dec    eax
  422677:	retf   
  422678:	inc    esi
  422679:	push   0xb750391f
  42267e:	add    al,0x18
  422680:	sub    BYTE PTR [ebp+0x735b2d3d],bh
  422686:	repz cmp al,0xff
  422689:	jmp    0x2e2f:0x18de773f
  422690:	out    0x7e,eax
  422692:	cwde   
  422693:	push   eax
  422694:	or     al,0x74
  422696:	nop
  422697:	push   DWORD PTR [edx-0x2f]
  42269a:	call   FWORD PTR [eax-0x7ce8ddf9]
  4226a0:	jmp    0x2419:0x72772b9
  4226a7:	mov    DWORD PTR [ebp+0x22],esi
  4226aa:	mov    esp,0x5a26dd97
  4226af:	pop    ecx
  4226b0:	dec    ecx
  4226b1:	push   ss
  4226b2:	add    eax,0xe1ee39ad
  4226b7:	rcr    DWORD PTR [ebp+edx*8-0x316c1088],cl
  4226be:	sbb    DWORD PTR [ecx+0x21a3f74e],0x2b
  4226c5:	add    DWORD PTR [ecx-0x6f52ad19],esi
  4226cb:	in     al,0xa1
  4226cd:	cdq    
  4226ce:	outs   dx,DWORD PTR ds:[esi]
  4226cf:	jg     0x42269d
  4226d1:	xchg   ebp,eax
  4226d2:	inc    ebx
  4226d3:	test   eax,0x33f7fed6
  4226d8:	mov    al,ds:0xddbd6fe2
  4226dd:	shr    al,1
  4226df:	cmc    
  4226e0:	xor    edi,DWORD PTR [esp+ebx*1-0x7a19e9f2]
  4226e7:	jecxz  0x422712
  4226e9:	sbb    edi,ebp
  4226eb:	repnz adc ah,dl
  4226ee:	in     al,dx
  4226ef:	pop    ds
  4226f0:	xor    al,0xaf
  4226f2:	popf   
  4226f3:	aad    0xdc
  4226f5:	daa    
  4226f6:	ds int 0xeb
  4226f9:	arpl   WORD PTR [ecx],bx
  4226fb:	mov    al,ds:0xea029d3e
  422700:	out    0x8f,al
  422702:	pop    ecx
  422703:	cwde   
  422704:	add    BYTE PTR [ebx+edx*1+0x57d84a7c],dh
  42270b:	add    ecx,DWORD PTR [edi-0x7defe030]
  422711:	fwait
  422712:	and    BYTE PTR [eax+0x6e],dh
  422715:	xor    al,0x3e
  422717:	inc    DWORD PTR [ebx+0x3f]
  42271a:	int    0xc2
  42271c:	hlt    
  42271d:	pop    ecx
  42271e:	cli    
  42271f:	popf   
  422720:	adc    ah,BYTE PTR [ebx+edi*8]
  422723:	ins    BYTE PTR es:[edi],dx
  422724:	not    DWORD PTR [eax+0x4cb9374e]
  42272a:	or     DWORD PTR [esi+esi*1+0x230e911f],esi
  422731:	cmp    eax,0x8b86af7a
  422736:	xchg   edi,eax
  422737:	les    eax,FWORD PTR [ecx]
  422739:	xchg   esp,eax
  42273a:	mov    ch,0x1a
  42273c:	adc    eax,0x116f277e
  422741:	mov    eax,0x34e01094
  422746:	xchg   ebx,eax
  422747:	and    BYTE PTR [ebx+ebp*4+0x5b],ah
  42274b:	push   ebp
  42274c:	adc    eax,0x764e69d9
  422751:	ins    BYTE PTR es:[edi],dx
  422752:	je     0x422734
  422754:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422755:	adc    edi,edx
  422757:	test   eax,0xbebd8f99
  42275c:	pop    eax
  42275d:	dec    esp
  42275e:	adc    DWORD PTR [edi],eax
  422760:	repnz cwde 
  422762:	clc    
  422763:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422764:	mov    ds:0x323e719e,eax
  422769:	ret    
  42276a:	xchg   edx,eax
  42276b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42276c:	mov    dh,0x1d
  42276e:	in     eax,0x23
  422770:	dec    edx
  422771:	inc    esi
  422772:	ins    DWORD PTR es:[edi],dx
  422773:	jg     0x42271f
  422775:	ss (bad) 
  422777:	(bad)  [ecx]
  422779:	mov    eax,ds:0x76dc3c91
  42277e:	and    BYTE PTR [edi+esi*4],dh
  422781:	inc    ebx
  422782:	aam    0x43
  422784:	fidivr DWORD PTR [edi+0x3]
  422787:	cmp    BYTE PTR [esi-0x7],bl
  42278a:	mov    ecx,0x8b5177f9
  42278f:	fs ror ebp,0x8c
  422793:	inc    esp
  422794:	jno    0x4227c8
  422796:	xor    eax,0xef82921f
  42279b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42279c:	jp     0x4227bc
  42279e:	mov    bl,0x11
  4227a0:	jp     0x42279b
  4227a2:	mov    eax,0x777df16e
  4227a7:	cs pop eax
  4227a9:	imul   esp,DWORD PTR [edi],0x3044b118
  4227af:	mov    ecx,0xa0faa2aa
  4227b4:	repnz shr esp,0x37
  4227b8:	ret    
  4227b9:	icebp  
  4227ba:	cli    
  4227bb:	jo     0x4227c5
  4227bd:	aad    0x15
  4227bf:	jns    0x422753
  4227c1:	pusha  
  4227c2:	frstor [esi-0x5b8a9b2]
  4227c8:	cmp    eax,0xb518ce62
  4227cd:	add    cl,BYTE PTR [ebp-0x6fda593f]
  4227d3:	mov    ebx,0x68781640
  4227d8:	push   ebp
  4227d9:	call   FWORD PTR [ebx-0x19]
  4227dc:	clc    
  4227dd:	dec    ebp
  4227de:	dec    eax
  4227df:	fs stos DWORD PTR es:[edi],eax
  4227e1:	push   ebp
  4227e2:	das    
  4227e3:	cmp    DWORD PTR [edi+ebx*8],0xa1d5be39
  4227ea:	xor    ebx,DWORD PTR [edi+0x376e2e2a]
  4227f0:	dec    eax
  4227f1:	jno    0x422776
  4227f3:	das    
  4227f4:	(bad)  [ebp+0x1376642b]
  4227fa:	dec    esi
  4227fb:	gs add al,0x4d
  4227fe:	jge    0x4227b1
  422800:	mov    al,ds:0x91e758b9
  422805:	mov    cl,0x76
  422807:	popa   
  422808:	(bad)  
  422809:	push   esp
  42280a:	sbb    BYTE PTR cs:[edx],bl
  42280d:	inc    ebp
  42280e:	(bad)  
  42280f:	jmp    0x422832
  422811:	inc    edi
  422812:	cld    
  422813:	lahf   
  422814:	nop
  422815:	inc    eax
  422816:	outs   dx,DWORD PTR ds:[esi]
  422817:	icebp  
  422818:	ins    DWORD PTR es:[edi],dx
  422819:	push   eax
  42281a:	push   edi
  42281b:	mov    ch,0xe1
  42281d:	mov    al,0x6d
  42281f:	dec    edi
  422820:	inc    ecx
  422821:	mov    BYTE PTR [edx-0x46],cl
  422824:	mov    ds:0x63051913,al
  422829:	jl     0x42283d
  42282b:	aam    0x43
  42282d:	ss mov ecx,0xd1c3e0b2
  422833:	mov    ds:0xe6918042,al
  422838:	(bad)  
  422839:	out    dx,eax
  42283a:	adc    cl,al
  42283c:	ss pop ds
  42283e:	push   esi
  42283f:	xchg   esi,eax
  422840:	jne    0x42281d
  422842:	adc    eax,0xb9eda138
  422847:	adc    edi,DWORD PTR [edx+esi*2]
  42284a:	mov    bp,0x4864
  42284e:	retf   0x7861
  422851:	imul   ebp,DWORD PTR [ebx],0xffffff95
  422854:	adc    DWORD PTR [esi],0xfffffffa
  422857:	jmp    0x2983:0xbd9a8d6d
  42285e:	cdq    
  42285f:	clc    
  422860:	mov    esi,0xdbf33988
  422865:	in     eax,0x65
  422867:	pop    ds
  422868:	imul   esi,DWORD PTR ds:0xb538a622,0x18f41386
  422872:	test   eax,0x120d88a3
  422877:	mov    bl,ah
  422879:	push   ebx
  42287a:	push   ds
  42287b:	add    BYTE PTR [esp+ecx*4],ch
  42287e:	xor    DWORD PTR [ecx],esp
  422880:	lea    edi,[edx-0xf]
  422883:	mov    al,0xc8
  422885:	mov    esp,0xee3eedc
  42288a:	das    
  42288b:	rcl    BYTE PTR [esi+0x22a2db5f],cl
  422891:	sub    al,ah
  422893:	mov    edi,0xfdb8501d
  422898:	jne    0x4228b4
  42289a:	mov    ecx,0xfe6448ea
  42289f:	mov    cl,0xd5
  4228a1:	repnz (bad) 
  4228a3:	and    eax,0x8efe4d0d
  4228a8:	pop    ebp
  4228a9:	(bad)  [ecx+0x7ffd8e04]
  4228af:	mov    ecx,0xcf290249
  4228b4:	push   esp
  4228b5:	push   eax
  4228b6:	pop    ebx
  4228b7:	test   eax,0xd2ccda12
  4228bc:	mov    DWORD PTR [esi],eax
  4228be:	sub    bl,BYTE PTR [ebp+0x5be2b699]
  4228c4:	mov    dl,BYTE PTR ds:0xb23c0572
  4228ca:	sbb    ecx,DWORD PTR [ebx+0x8291811]
  4228d0:	mov    ah,0x76
  4228d2:	mov    esi,fs
  4228d4:	or     al,dl
  4228d6:	mov    ecx,0x9dd55576
  4228db:	std    
  4228dc:	push   0xffffffd6
  4228de:	or     DWORD PTR [esi],edx
  4228e0:	pusha  
  4228e1:	and    eax,ebx
  4228e3:	pop    esi
  4228e4:	or     DWORD PTR [ebp-0x4aceac6b],edx
  4228ea:	add    al,0x2
  4228ec:	stos   BYTE PTR es:[edi],al
  4228ed:	out    dx,al
  4228ee:	mul    BYTE PTR [ecx+0x3c7a0043]
  4228f4:	pop    ebx
  4228f5:	mov    ebp,0xf51168a4
  4228fa:	hlt    
  4228fb:	jb     0x4228e9
  4228fd:	fsub   DWORD PTR [edx-0x1178d5a4]
  422903:	push   edi
  422904:	cmp    DWORD PTR [eax+eax*2],ebp
  422907:	jle    0x42292e
  422909:	int    0x8b
  42290b:	and    bl,BYTE PTR [eax-0x7fe18cbb]
  422911:	loopne 0x4228c6
  422913:	nop
  422914:	in     eax,dx
  422915:	pusha  
  422916:	mov    ch,0xb
  422918:	lods   al,BYTE PTR ds:[esi]
  422919:	sbb    eax,0x49963054
  42291e:	pushf  
  42291f:	mov    ch,0x83
  422921:	scas   al,BYTE PTR es:[edi]
  422922:	add    edx,esp
  422924:	pushf  
  422925:	shl    BYTE PTR [ebx-0x80],1
  422928:	lock ja 0x42294d
  42292b:	xchg   edx,eax
  42292c:	and    eax,0xcc577693
  422931:	jns    0x4228c6
  422933:	(bad)  
  422934:	fninit 
  422936:	in     al,dx
  422937:	das    
  422938:	lahf   
  422939:	push   es
  42293a:	mov    dl,0x53
  42293c:	inc    ebx
  42293d:	xchg   ecx,eax
  42293e:	inc    ecx
  42293f:	mov    dh,0xec
  422941:	ret    0x7433
  422944:	das    
  422945:	add    al,0x51
  422947:	(bad)  
  422948:	(bad)  
  422949:	and    al,0xd7
  42294b:	loopne 0x42294c
  42294d:	sub    BYTE PTR [ebx-0x7f13ddd8],dl
  422953:	out    dx,al
  422954:	add    ebx,eax
  422956:	inc    esp
  422957:	pop    esp
  422958:	jno    0x42297e
  42295a:	xor    eax,eax
  42295c:	add    esp,0x10
  42295f:	ret    0x10
  422962:	nop
  422963:	nop
  422964:	nop
  422965:	nop
  422966:	nop
  422967:	nop
  422968:	nop
  422969:	nop
  42296a:	nop
  42296b:	nop
  42296c:	nop
  42296d:	nop
  42296e:	nop
  42296f:	nop
  422970:	cmp    DWORD PTR ds:0x45cabc,0x1
  422977:	jne    0x42297e
  422979:	call   0x422ebc
  42297e:	push   DWORD PTR [esp+0x4]
  422982:	call   0x422d45
  422987:	push   0xff
  42298c:	call   DWORD PTR ds:0x45c1c0
  422992:	pop    ecx
  422993:	pop    ecx
  422994:	ret    
  422995:	cmp    DWORD PTR ds:0x45cabc,0x1
  42299c:	jne    0x4229a3
  42299e:	call   0x422ebc
  4229a3:	push   DWORD PTR [esp+0x4]
  4229a7:	call   0x422d45
  4229ac:	push   0xff
  4229b1:	call   0x422b8b
  4229b6:	pop    ecx
  4229b7:	pop    ecx
  4229b8:	ret    
  4229b9:	push   0x60
  4229bb:	push   0x428118
  4229c0:	call   0x4238a8
  4229c5:	mov    edi,0x94
  4229ca:	mov    eax,edi
  4229cc:	call   0x423900
  4229d1:	mov    DWORD PTR [ebp-0x18],esp
  4229d4:	mov    esi,esp
  4229d6:	mov    DWORD PTR [esi],edi
  4229d8:	push   esi
  4229d9:	call   DWORD PTR ds:0x428028
  4229df:	mov    ecx,DWORD PTR [esi+0x10]
  4229e2:	mov    DWORD PTR ds:0x45cac4,ecx
  4229e8:	mov    eax,DWORD PTR [esi+0x4]
  4229eb:	mov    ds:0x45cad0,eax
  4229f0:	mov    edx,DWORD PTR [esi+0x8]
  4229f3:	mov    DWORD PTR ds:0x45cad4,edx
  4229f9:	mov    esi,DWORD PTR [esi+0xc]
  4229fc:	and    esi,0x7fff
  422a02:	mov    DWORD PTR ds:0x45cac8,esi
  422a08:	cmp    ecx,0x2
  422a0b:	je     0x422a19
  422a0d:	or     esi,0x8000
  422a13:	mov    DWORD PTR ds:0x45cac8,esi
  422a19:	shl    eax,0x8
  422a1c:	add    eax,edx
  422a1e:	mov    ds:0x45cacc,eax
  422a23:	xor    esi,esi
  422a25:	push   esi
  422a26:	mov    edi,DWORD PTR ds:0x428018
  422a2c:	call   edi
  422a2e:	cmp    WORD PTR [eax],0x5a4d
  422a33:	jne    0x422a54
  422a35:	mov    ecx,DWORD PTR [eax+0x3c]
  422a38:	add    ecx,eax
  422a3a:	cmp    DWORD PTR [ecx],0x4550
  422a40:	jne    0x422a54
  422a42:	movzx  eax,WORD PTR [ecx+0x18]
  422a46:	cmp    eax,0x10b
  422a4b:	je     0x422a6c
  422a4d:	cmp    eax,0x20b
  422a52:	je     0x422a59
  422a54:	mov    DWORD PTR [ebp-0x1c],esi
  422a57:	jmp    0x422a80
  422a59:	cmp    DWORD PTR [ecx+0x84],0xe
  422a60:	jbe    0x422a54
  422a62:	xor    eax,eax
  422a64:	cmp    DWORD PTR [ecx+0xf8],esi
  422a6a:	jmp    0x422a7a
  422a6c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a70:	jbe    0x422a54
  422a72:	xor    eax,eax
  422a74:	cmp    DWORD PTR [ecx+0xe8],esi
  422a7a:	setne  al
  422a7d:	mov    DWORD PTR [ebp-0x1c],eax
  422a80:	push   0x1
  422a82:	call   0x423857
  422a87:	pop    ecx
  422a88:	test   eax,eax
  422a8a:	jne    0x422a94
  422a8c:	push   0x1c
  422a8e:	call   0x422995
  422a93:	pop    ecx
  422a94:	call   0x4237ce
  422a99:	test   eax,eax
  422a9b:	jne    0x422aa5
  422a9d:	push   0x10
  422a9f:	call   0x422995
  422aa4:	pop    ecx
  422aa5:	call   0x4236b7
  422aaa:	mov    DWORD PTR [ebp-0x4],esi
  422aad:	call   0x4234b9
  422ab2:	test   eax,eax
  422ab4:	jge    0x422abe
  422ab6:	push   0x1b
  422ab8:	call   0x422970
  422abd:	pop    ecx
  422abe:	call   DWORD PTR ds:0x428024
  422ac4:	mov    ds:0x45d274,eax
  422ac9:	call   0x423397
  422ace:	mov    ds:0x45cab4,eax
  422ad3:	call   0x4232f5
  422ad8:	test   eax,eax
  422ada:	jge    0x422ae4
  422adc:	push   0x8
  422ade:	call   0x422970
  422ae3:	pop    ecx
  422ae4:	call   0x4230c2
  422ae9:	test   eax,eax
  422aeb:	jge    0x422af5
  422aed:	push   0x9
  422aef:	call   0x422970
  422af4:	pop    ecx
  422af5:	call   0x422bcd
  422afa:	mov    DWORD PTR [ebp-0x20],eax
  422afd:	cmp    eax,esi
  422aff:	je     0x422b08
  422b01:	push   eax
  422b02:	call   0x422970
  422b07:	pop    ecx
  422b08:	mov    DWORD PTR [ebp-0x38],esi
  422b0b:	lea    eax,[ebp-0x64]
  422b0e:	push   eax
  422b0f:	call   DWORD PTR ds:0x428020
  422b15:	call   0x423059
  422b1a:	mov    DWORD PTR [ebp-0x68],eax
  422b1d:	test   BYTE PTR [ebp-0x38],0x1
  422b21:	je     0x422b29
  422b23:	movzx  eax,WORD PTR [ebp-0x34]
  422b27:	jmp    0x422b2c
  422b29:	push   0xa
  422b2b:	pop    eax
  422b2c:	push   eax
  422b2d:	push   DWORD PTR [ebp-0x68]
  422b30:	push   esi
  422b31:	push   esi
  422b32:	call   edi
  422b34:	push   eax
  422b35:	call   0x421800
  422b3a:	mov    edi,eax
  422b3c:	mov    DWORD PTR [ebp-0x6c],edi
  422b3f:	cmp    DWORD PTR [ebp-0x1c],esi
  422b42:	jne    0x422b4a
  422b44:	push   edi
  422b45:	call   0x422d05
  422b4a:	call   0x422d27
  422b4f:	jmp    0x422b7c
  422b51:	mov    eax,DWORD PTR [ebp-0x14]
  422b54:	mov    ecx,DWORD PTR [eax]
  422b56:	mov    ecx,DWORD PTR [ecx]
  422b58:	mov    DWORD PTR [ebp-0x70],ecx
  422b5b:	push   eax
  422b5c:	push   ecx
  422b5d:	call   0x422ef5
  422b62:	pop    ecx
  422b63:	pop    ecx
  422b64:	ret    
  422b65:	mov    esp,DWORD PTR [ebp-0x18]
  422b68:	mov    edi,DWORD PTR [ebp-0x70]
  422b6b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b6f:	jne    0x422b77
  422b71:	push   edi
  422b72:	call   0x422d16
  422b77:	call   0x422d36
  422b7c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b80:	mov    eax,edi
  422b82:	lea    esp,[ebp-0x7c]
  422b85:	call   0x4238e3
  422b8a:	ret    
  422b8b:	push   0x428134
  422b90:	call   DWORD PTR ds:0x428018
  422b96:	test   eax,eax
  422b98:	je     0x422bb0
  422b9a:	push   0x428124
  422b9f:	push   eax
  422ba0:	call   DWORD PTR ds:0x42801c
  422ba6:	test   eax,eax
  422ba8:	je     0x422bb0
  422baa:	push   DWORD PTR [esp+0x4]
  422bae:	call   eax
  422bb0:	push   DWORD PTR [esp+0x4]
  422bb4:	call   DWORD PTR ds:0x42802c
  422bba:	int3   
  422bbb:	push   0x8
  422bbd:	call   0x423a6f
  422bc2:	pop    ecx
  422bc3:	ret    
  422bc4:	push   0x8
  422bc6:	call   0x4239db
  422bcb:	pop    ecx
  422bcc:	ret    
  422bcd:	mov    eax,ds:0x45d270
  422bd2:	test   eax,eax
  422bd4:	je     0x422bd8
  422bd6:	call   eax
  422bd8:	push   esi
  422bd9:	push   edi
  422bda:	mov    ecx,0x42a00c
  422bdf:	mov    edi,0x42a018
  422be4:	xor    eax,eax
  422be6:	cmp    ecx,edi
  422be8:	mov    esi,ecx
  422bea:	jae    0x422c03
  422bec:	test   eax,eax
  422bee:	jne    0x422c2f
  422bf0:	mov    ecx,DWORD PTR [esi]
  422bf2:	test   ecx,ecx
  422bf4:	je     0x422bf8
  422bf6:	call   ecx
  422bf8:	add    esi,0x4
  422bfb:	cmp    esi,edi
  422bfd:	jb     0x422bec
  422bff:	test   eax,eax
  422c01:	jne    0x422c2f
  422c03:	push   0x4236fb
  422c08:	call   0x423b80
  422c0d:	mov    esi,0x42a000
  422c12:	mov    eax,esi
  422c14:	mov    edi,0x42a008
  422c19:	cmp    eax,edi
  422c1b:	pop    ecx
  422c1c:	jae    0x422c2d
  422c1e:	mov    eax,DWORD PTR [esi]
  422c20:	test   eax,eax
  422c22:	je     0x422c26
  422c24:	call   eax
  422c26:	add    esi,0x4
  422c29:	cmp    esi,edi
  422c2b:	jb     0x422c1e
  422c2d:	xor    eax,eax
  422c2f:	pop    edi
  422c30:	pop    esi
  422c31:	ret    
  422c32:	push   ebp
  422c33:	mov    ebp,esp
  422c35:	push   esi
  422c36:	push   edi
  422c37:	push   0x8
  422c39:	call   0x423a6f
  422c3e:	xor    esi,esi
  422c40:	inc    esi
  422c41:	cmp    DWORD PTR ds:0x45cb04,esi
  422c47:	pop    ecx
  422c48:	jne    0x422c5a
  422c4a:	push   DWORD PTR [ebp+0x8]
  422c4d:	call   DWORD PTR ds:0x428034
  422c53:	push   eax
  422c54:	call   DWORD PTR ds:0x428030
  422c5a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c5e:	mov    al,BYTE PTR [ebp+0x10]
  422c61:	mov    DWORD PTR ds:0x45cb00,esi
  422c67:	mov    ds:0x45cafc,al
  422c6c:	jne    0x422cc0
  422c6e:	mov    ecx,DWORD PTR ds:0x45d268
  422c74:	test   ecx,ecx
  422c76:	je     0x422ca1
  422c78:	mov    eax,ds:0x45d264
  422c7d:	sub    eax,0x4
  422c80:	cmp    eax,ecx
  422c82:	jmp    0x422c9a
  422c84:	mov    eax,DWORD PTR [eax]
  422c86:	test   eax,eax
  422c88:	je     0x422c8c
  422c8a:	call   eax
  422c8c:	mov    eax,ds:0x45d264
  422c91:	sub    eax,0x4
  422c94:	cmp    eax,DWORD PTR ds:0x45d268
  422c9a:	mov    ds:0x45d264,eax
  422c9f:	jae    0x422c84
  422ca1:	mov    eax,0x42a01c
  422ca6:	mov    esi,0x42a020
  422cab:	cmp    eax,esi
  422cad:	mov    edi,eax
  422caf:	jae    0x422cc0
  422cb1:	mov    eax,DWORD PTR [edi]
  422cb3:	test   eax,eax
  422cb5:	je     0x422cb9
  422cb7:	call   eax
  422cb9:	add    edi,0x4
  422cbc:	cmp    edi,esi
  422cbe:	jb     0x422cb1
  422cc0:	mov    eax,0x42a024
  422cc5:	mov    esi,0x42a028
  422cca:	cmp    eax,esi
  422ccc:	mov    edi,eax
  422cce:	jae    0x422cdf
  422cd0:	mov    eax,DWORD PTR [edi]
  422cd2:	test   eax,eax
  422cd4:	je     0x422cd8
  422cd6:	call   eax
  422cd8:	add    edi,0x4
  422cdb:	cmp    edi,esi
  422cdd:	jb     0x422cd0
  422cdf:	cmp    DWORD PTR [ebp+0x10],0x0
  422ce3:	pop    edi
  422ce4:	pop    esi
  422ce5:	je     0x422cf0
  422ce7:	push   0x8
  422ce9:	call   0x4239db
  422cee:	jmp    0x422d02
  422cf0:	push   DWORD PTR [ebp+0x8]
  422cf3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cfd:	call   0x422b8b
  422d02:	pop    ecx
  422d03:	pop    ebp
  422d04:	ret    
  422d05:	push   0x0
  422d07:	push   0x0
  422d09:	push   DWORD PTR [esp+0xc]
  422d0d:	call   0x422c32
  422d12:	add    esp,0xc
  422d15:	ret    
  422d16:	push   0x0
  422d18:	push   0x1
  422d1a:	push   DWORD PTR [esp+0xc]
  422d1e:	call   0x422c32
  422d23:	add    esp,0xc
  422d26:	ret    
  422d27:	push   0x1
  422d29:	push   0x0
  422d2b:	push   0x0
  422d2d:	call   0x422c32
  422d32:	add    esp,0xc
  422d35:	ret    
  422d36:	push   0x1
  422d38:	push   0x1
  422d3a:	push   0x0
  422d3c:	call   0x422c32
  422d41:	add    esp,0xc
  422d44:	ret    
  422d45:	push   ebp
  422d46:	mov    ebp,esp
  422d48:	sub    esp,0x10c
  422d4e:	mov    eax,ds:0x45c430
  422d53:	xor    eax,DWORD PTR [ebp+0x4]
  422d56:	mov    ecx,DWORD PTR [ebp+0x8]
  422d59:	push   ebx
  422d5a:	push   esi
  422d5b:	mov    DWORD PTR [ebp-0x4],eax
  422d5e:	xor    edx,edx
  422d60:	push   edi
  422d61:	xor    eax,eax
  422d63:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d6a:	je     0x422d72
  422d6c:	inc    eax
  422d6d:	cmp    eax,0x12
  422d70:	jb     0x422d63
  422d72:	mov    esi,eax
  422d74:	shl    esi,0x3
  422d77:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d7d:	jne    0x422ea6
  422d83:	mov    eax,ds:0x45cabc
  422d88:	cmp    eax,0x1
  422d8b:	je     0x422e81
  422d91:	cmp    eax,edx
  422d93:	jne    0x422da2
  422d95:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d9c:	je     0x422e81
  422da2:	cmp    ecx,0xfc
  422da8:	je     0x422ea6
  422dae:	push   0x104
  422db3:	lea    eax,[ebp-0x10c]
  422db9:	push   eax
  422dba:	push   edx
  422dbb:	mov    BYTE PTR [ebp-0x8],dl
  422dbe:	call   DWORD PTR ds:0x428040
  422dc4:	test   eax,eax
  422dc6:	jne    0x422ddb
  422dc8:	lea    eax,[ebp-0x10c]
  422dce:	push   0x42848c
  422dd3:	push   eax
  422dd4:	call   0x423c90
  422dd9:	pop    ecx
  422dda:	pop    ecx
  422ddb:	lea    eax,[ebp-0x10c]
  422de1:	push   eax
  422de2:	lea    edi,[ebp-0x10c]
  422de8:	call   0x423ec0
  422ded:	inc    eax
  422dee:	cmp    eax,0x3c
  422df1:	pop    ecx
  422df2:	jbe    0x422e1d
  422df4:	lea    eax,[ebp-0x10c]
  422dfa:	push   eax
  422dfb:	call   0x423ec0
  422e00:	mov    edi,eax
  422e02:	lea    eax,[ebp-0x10c]
  422e08:	sub    eax,0x3b
  422e0b:	push   0x3
  422e0d:	add    edi,eax
  422e0f:	push   0x428488
  422e14:	push   edi
  422e15:	call   0x423d90
  422e1a:	add    esp,0x10
  422e1d:	push   edi
  422e1e:	call   0x423ec0
  422e23:	push   DWORD PTR [esi+0x45c1cc]
  422e29:	mov    ebx,eax
  422e2b:	call   0x423ec0
  422e30:	lea    eax,[ebx+eax*1+0x1c]
  422e34:	pop    ecx
  422e35:	add    eax,0x3
  422e38:	pop    ecx
  422e39:	and    eax,0xfffffffc
  422e3c:	call   0x423900
  422e41:	mov    ebx,esp
  422e43:	push   0x42846c
  422e48:	push   ebx
  422e49:	call   0x423c90
  422e4e:	push   edi
  422e4f:	push   ebx
  422e50:	call   0x423ca0
  422e55:	push   0x428468
  422e5a:	push   ebx
  422e5b:	call   0x423ca0
  422e60:	push   DWORD PTR [esi+0x45c1cc]
  422e66:	push   ebx
  422e67:	call   0x423ca0
  422e6c:	push   0x12010
  422e71:	push   0x428440
  422e76:	push   ebx
  422e77:	call   0x423b92
  422e7c:	add    esp,0x2c
  422e7f:	jmp    0x422ea6
  422e81:	push   edx
  422e82:	lea    eax,[ebp+0x8]
  422e85:	push   eax
  422e86:	lea    esi,[esi+0x45c1cc]
  422e8c:	push   DWORD PTR [esi]
  422e8e:	call   0x423ec0
  422e93:	pop    ecx
  422e94:	push   eax
  422e95:	push   DWORD PTR [esi]
  422e97:	push   0xfffffff4
  422e99:	call   DWORD PTR ds:0x42803c
  422e9f:	push   eax
  422ea0:	call   DWORD PTR ds:0x428038
  422ea6:	lea    esp,[ebp-0x118]
  422eac:	mov    ecx,DWORD PTR [ebp-0x4]
  422eaf:	xor    ecx,DWORD PTR [ebp+0x4]
  422eb2:	call   0x423f7c
  422eb7:	pop    edi
  422eb8:	pop    esi
  422eb9:	pop    ebx
  422eba:	leave  
  422ebb:	ret    
  422ebc:	mov    eax,ds:0x45cabc
  422ec1:	cmp    eax,0x1
  422ec4:	je     0x422ed3
  422ec6:	test   eax,eax
  422ec8:	jne    0x422ef4
  422eca:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422ed1:	jne    0x422ef4
  422ed3:	push   0xfc
  422ed8:	call   0x422d45
  422edd:	mov    eax,ds:0x45cb08
  422ee2:	test   eax,eax
  422ee4:	pop    ecx
  422ee5:	je     0x422ee9
  422ee7:	call   eax
  422ee9:	push   0xff
  422eee:	call   0x422d45
  422ef3:	pop    ecx
  422ef4:	ret    
  422ef5:	push   ebp
  422ef6:	mov    ebp,esp
  422ef8:	push   ecx
  422ef9:	push   ebx
  422efa:	push   esi
  422efb:	push   edi
  422efc:	call   0x42375d
  422f01:	mov    edi,DWORD PTR [ebp+0x8]
  422f04:	mov    esi,eax
  422f06:	mov    edx,DWORD PTR [esi+0x54]
  422f09:	mov    eax,ds:0x45c2dc
  422f0e:	mov    ecx,edx
  422f10:	cmp    DWORD PTR [ecx],edi
  422f12:	je     0x422f21
  422f14:	lea    ebx,[eax+eax*2]
  422f17:	add    ecx,0xc
  422f1a:	lea    ebx,[edx+ebx*4]
  422f1d:	cmp    ecx,ebx
  422f1f:	jb     0x422f10
  422f21:	lea    eax,[eax+eax*2]
  422f24:	lea    eax,[edx+eax*4]
  422f27:	cmp    ecx,eax
  422f29:	jae    0x422f2f
  422f2b:	cmp    DWORD PTR [ecx],edi
  422f2d:	je     0x422f31
  422f2f:	xor    ecx,ecx
  422f31:	test   ecx,ecx
  422f33:	je     0x42304b
  422f39:	mov    ebx,DWORD PTR [ecx+0x8]
  422f3c:	test   ebx,ebx
  422f3e:	mov    DWORD PTR [ebp+0x8],ebx
  422f41:	je     0x42304b
  422f47:	cmp    ebx,0x5
  422f4a:	jne    0x422f58
  422f4c:	and    DWORD PTR [ecx+0x8],0x0
  422f50:	xor    eax,eax
  422f52:	inc    eax
  422f53:	jmp    0x423054
  422f58:	cmp    ebx,0x1
  422f5b:	je     0x423046
  422f61:	mov    eax,DWORD PTR [esi+0x58]
  422f64:	mov    DWORD PTR [ebp-0x4],eax
  422f67:	mov    eax,DWORD PTR [ebp+0xc]
  422f6a:	mov    DWORD PTR [esi+0x58],eax
  422f6d:	mov    eax,DWORD PTR [ecx+0x4]
  422f70:	cmp    eax,0x8
  422f73:	jne    0x423038
  422f79:	mov    edx,DWORD PTR ds:0x45c2d0
  422f7f:	mov    eax,ds:0x45c2d4
  422f84:	add    eax,edx
  422f86:	cmp    edx,eax
  422f88:	jge    0x422fb1
  422f8a:	lea    eax,[edx+edx*2]
  422f8d:	shl    eax,0x2
  422f90:	mov    edi,DWORD PTR [esi+0x54]
  422f93:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f98:	mov    edi,DWORD PTR ds:0x45c2d0
  422f9e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422fa4:	inc    edx
  422fa5:	add    ebx,edi
  422fa7:	add    eax,0xc
  422faa:	cmp    edx,ebx
  422fac:	jl     0x422f90
  422fae:	mov    ebx,DWORD PTR [ebp+0x8]
  422fb1:	mov    ecx,DWORD PTR [ecx]
  422fb3:	cmp    ecx,0xc000008e
  422fb9:	mov    edi,DWORD PTR [esi+0x5c]
  422fbc:	jne    0x422fc7
  422fbe:	mov    DWORD PTR [esi+0x5c],0x83
  422fc5:	jmp    0x42302b
  422fc7:	cmp    ecx,0xc0000090
  422fcd:	jne    0x422fd8
  422fcf:	mov    DWORD PTR [esi+0x5c],0x81
  422fd6:	jmp    0x42302b
  422fd8:	cmp    ecx,0xc0000091
  422fde:	jne    0x422fe9
  422fe0:	mov    DWORD PTR [esi+0x5c],0x84
  422fe7:	jmp    0x42302b
  422fe9:	cmp    ecx,0xc0000093
  422fef:	jne    0x422ffa
  422ff1:	mov    DWORD PTR [esi+0x5c],0x85
  422ff8:	jmp    0x42302b
  422ffa:	cmp    ecx,0xc000008d
  423000:	jne    0x42300b
  423002:	mov    DWORD PTR [esi+0x5c],0x82
  423009:	jmp    0x42302b
  42300b:	cmp    ecx,0xc000008f
  423011:	jne    0x42301c
  423013:	mov    DWORD PTR [esi+0x5c],0x86
  42301a:	jmp    0x42302b
  42301c:	cmp    ecx,0xc0000092
  423022:	jne    0x42302b
  423024:	mov    DWORD PTR [esi+0x5c],0x8a
  42302b:	push   DWORD PTR [esi+0x5c]
  42302e:	push   0x8
  423030:	call   ebx
  423032:	pop    ecx
  423033:	mov    DWORD PTR [esi+0x5c],edi
  423036:	jmp    0x42303f
  423038:	and    DWORD PTR [ecx+0x8],0x0
  42303c:	push   eax
  42303d:	call   ebx
  42303f:	mov    eax,DWORD PTR [ebp-0x4]
  423042:	pop    ecx
  423043:	mov    DWORD PTR [esi+0x58],eax
  423046:	or     eax,0xffffffff
  423049:	jmp    0x423054
  42304b:	push   DWORD PTR [ebp+0xc]
  42304e:	call   DWORD PTR ds:0x428044
  423054:	pop    edi
  423055:	pop    esi
  423056:	pop    ebx
  423057:	leave  
  423058:	ret    
  423059:	cmp    DWORD PTR ds:0x45d26c,0x0
  423060:	jne    0x423067
  423062:	call   0x42449c
  423067:	push   esi
  423068:	mov    esi,DWORD PTR ds:0x45d274
  42306e:	test   esi,esi
  423070:	jne    0x423079
  423072:	mov    esi,0x4284a3
  423077:	jmp    0x4230be
  423079:	mov    al,BYTE PTR [esi]
  42307b:	cmp    al,0x22
  42307d:	jne    0x4230a7
  42307f:	inc    esi
  423080:	mov    al,BYTE PTR [esi]
  423082:	cmp    al,0x22
  423084:	je     0x4230b7
  423086:	test   al,al
  423088:	je     0x4230a0
  42308a:	movzx  eax,al
  42308d:	push   eax
  42308e:	call   0x423fbb
  423093:	test   eax,eax
  423095:	pop    ecx
  423096:	je     0x423099
  423098:	inc    esi
  423099:	inc    esi
  42309a:	mov    al,BYTE PTR [esi]
  42309c:	cmp    al,0x22
  42309e:	jne    0x423086
  4230a0:	cmp    BYTE PTR [esi],0x22
  4230a3:	jne    0x4230b8
  4230a5:	jmp    0x4230b7
  4230a7:	cmp    al,0x20
  4230a9:	jbe    0x4230b8
  4230ab:	inc    esi
  4230ac:	cmp    BYTE PTR [esi],0x20
  4230af:	ja     0x4230ab
  4230b1:	jmp    0x4230b8
  4230b3:	cmp    al,0x20
  4230b5:	ja     0x4230be
  4230b7:	inc    esi
  4230b8:	mov    al,BYTE PTR [esi]
  4230ba:	test   al,al
  4230bc:	jne    0x4230b3
  4230be:	mov    eax,esi
  4230c0:	pop    esi
  4230c1:	ret    
  4230c2:	push   ebx
  4230c3:	xor    ebx,ebx
  4230c5:	cmp    DWORD PTR ds:0x45d26c,ebx
  4230cb:	push   esi
  4230cc:	push   edi
  4230cd:	jne    0x4230d4
  4230cf:	call   0x42449c
  4230d4:	mov    esi,DWORD PTR ds:0x45cab4
  4230da:	xor    edi,edi
  4230dc:	cmp    esi,ebx
  4230de:	jne    0x4230f2
  4230e0:	jmp    0x423112
  4230e2:	cmp    al,0x3d
  4230e4:	je     0x4230e7
  4230e6:	inc    edi
  4230e7:	push   esi
  4230e8:	call   0x423ec0
  4230ed:	pop    ecx
  4230ee:	lea    esi,[esi+eax*1+0x1]
  4230f2:	mov    al,BYTE PTR [esi]
  4230f4:	cmp    al,bl
  4230f6:	jne    0x4230e2
  4230f8:	lea    eax,[edi*4+0x4]
  4230ff:	push   eax
  423100:	call   0x4245d2
  423105:	mov    edi,eax
  423107:	cmp    edi,ebx
  423109:	pop    ecx
  42310a:	mov    DWORD PTR ds:0x45cae4,edi
  423110:	jne    0x423117
  423112:	or     eax,0xffffffff
  423115:	jmp    0x42316f
  423117:	mov    esi,DWORD PTR ds:0x45cab4
  42311d:	push   ebp
  42311e:	jmp    0x42314a
  423120:	push   esi
  423121:	call   0x423ec0
  423126:	mov    ebp,eax
  423128:	inc    ebp
  423129:	cmp    BYTE PTR [esi],0x3d
  42312c:	pop    ecx
  42312d:	je     0x423148
  42312f:	push   ebp
  423130:	call   0x4245d2
  423135:	cmp    eax,ebx
  423137:	pop    ecx
  423138:	mov    DWORD PTR [edi],eax
  42313a:	je     0x423173
  42313c:	push   esi
  42313d:	push   eax
  42313e:	call   0x423c90
  423143:	pop    ecx
  423144:	pop    ecx
  423145:	add    edi,0x4
  423148:	add    esi,ebp
  42314a:	cmp    BYTE PTR [esi],bl
  42314c:	jne    0x423120
  42314e:	push   DWORD PTR ds:0x45cab4
  423154:	call   0x4244ba
  423159:	mov    DWORD PTR ds:0x45cab4,ebx
  42315f:	mov    DWORD PTR [edi],ebx
  423161:	mov    DWORD PTR ds:0x45d260,0x1
  42316b:	xor    eax,eax
  42316d:	pop    ecx
  42316e:	pop    ebp
  42316f:	pop    edi
  423170:	pop    esi
  423171:	pop    ebx
  423172:	ret    
  423173:	push   DWORD PTR ds:0x45cae4
  423179:	call   0x4244ba
  42317e:	mov    DWORD PTR ds:0x45cae4,ebx
  423184:	or     eax,0xffffffff
  423187:	jmp    0x42316d
  423189:	push   ebp
  42318a:	mov    ebp,esp
  42318c:	push   ecx
  42318d:	push   ebx
  42318e:	mov    ebx,DWORD PTR [ebp+0xc]
  423191:	xor    edx,edx
  423193:	cmp    DWORD PTR [ebp+0x8],edx
  423196:	push   edi
  423197:	mov    DWORD PTR [esi],edx
  423199:	mov    edi,ecx
  42319b:	mov    DWORD PTR [ebx],0x1
  4231a1:	je     0x4231ac
  4231a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4231a6:	add    DWORD PTR [ebp+0x8],0x4
  4231aa:	mov    DWORD PTR [ecx],edi
  4231ac:	cmp    BYTE PTR [eax],0x22
  4231af:	jne    0x4231bf
  4231b1:	xor    ecx,ecx
  4231b3:	test   edx,edx
  4231b5:	sete   cl
  4231b8:	inc    eax
  4231b9:	mov    edx,ecx
  4231bb:	mov    cl,0x22
  4231bd:	jmp    0x4231ec
  4231bf:	inc    DWORD PTR [esi]
  4231c1:	test   edi,edi
  4231c3:	je     0x4231ca
  4231c5:	mov    cl,BYTE PTR [eax]
  4231c7:	mov    BYTE PTR [edi],cl
  4231c9:	inc    edi
  4231ca:	mov    cl,BYTE PTR [eax]
  4231cc:	movzx  ebx,cl
  4231cf:	inc    eax
  4231d0:	test   BYTE PTR [ebx+0x45cf21],0x4
  4231d7:	je     0x4231e5
  4231d9:	inc    DWORD PTR [esi]
  4231db:	test   edi,edi
  4231dd:	je     0x4231e4
  4231df:	mov    bl,BYTE PTR [eax]
  4231e1:	mov    BYTE PTR [edi],bl
  4231e3:	inc    edi
  4231e4:	inc    eax
  4231e5:	test   cl,cl
  4231e7:	mov    ebx,DWORD PTR [ebp+0xc]
  4231ea:	je     0x42321e
  4231ec:	test   edx,edx
  4231ee:	jne    0x4231ac
  4231f0:	cmp    cl,0x20
  4231f3:	je     0x4231fa
  4231f5:	cmp    cl,0x9
  4231f8:	jne    0x4231ac
  4231fa:	test   edi,edi
  4231fc:	je     0x423202
  4231fe:	and    BYTE PTR [edi-0x1],0x0
  423202:	and    DWORD PTR [ebp-0x4],0x0
  423206:	cmp    BYTE PTR [eax],0x0
  423209:	je     0x4232e5
  42320f:	mov    cl,BYTE PTR [eax]
  423211:	cmp    cl,0x20
  423214:	je     0x42321b
  423216:	cmp    cl,0x9
  423219:	jne    0x423221
  42321b:	inc    eax
  42321c:	jmp    0x42320f
  42321e:	dec    eax
  42321f:	jmp    0x423202
  423221:	cmp    BYTE PTR [eax],0x0
  423224:	je     0x4232e5
  42322a:	cmp    DWORD PTR [ebp+0x8],0x0
  42322e:	je     0x423239
  423230:	mov    ecx,DWORD PTR [ebp+0x8]
  423233:	add    DWORD PTR [ebp+0x8],0x4
  423237:	mov    DWORD PTR [ecx],edi
  423239:	inc    DWORD PTR [ebx]
  42323b:	xor    ebx,ebx
  42323d:	inc    ebx
  42323e:	xor    edx,edx
  423240:	jmp    0x423244
  423242:	inc    eax
  423243:	inc    edx
  423244:	cmp    BYTE PTR [eax],0x5c
  423247:	je     0x423242
  423249:	cmp    BYTE PTR [eax],0x22
  42324c:	jne    0x423274
  42324e:	test   dl,0x1
  423251:	jne    0x423272
  423253:	cmp    DWORD PTR [ebp-0x4],0x0
  423257:	je     0x423265
  423259:	lea    ecx,[eax+0x1]
  42325c:	cmp    BYTE PTR [ecx],0x22
  42325f:	jne    0x423265
  423261:	mov    eax,ecx
  423263:	jmp    0x423267
  423265:	xor    ebx,ebx
  423267:	xor    ecx,ecx
  423269:	cmp    DWORD PTR [ebp-0x4],ecx
  42326c:	sete   cl
  42326f:	mov    DWORD PTR [ebp-0x4],ecx
  423272:	shr    edx,1
  423274:	test   edx,edx
  423276:	je     0x423285
  423278:	test   edi,edi
  42327a:	je     0x423280
  42327c:	mov    BYTE PTR [edi],0x5c
  42327f:	inc    edi
  423280:	inc    DWORD PTR [esi]
  423282:	dec    edx
  423283:	jne    0x423278
  423285:	mov    cl,BYTE PTR [eax]
  423287:	test   cl,cl
  423289:	je     0x4232d3
  42328b:	cmp    DWORD PTR [ebp-0x4],0x0
  42328f:	jne    0x42329b
  423291:	cmp    cl,0x20
  423294:	je     0x4232d3
  423296:	cmp    cl,0x9
  423299:	je     0x4232d3
  42329b:	test   ebx,ebx
  42329d:	je     0x4232cd
  42329f:	test   edi,edi
  4232a1:	je     0x4232bc
  4232a3:	movzx  edx,cl
  4232a6:	test   BYTE PTR [edx+0x45cf21],0x4
  4232ad:	je     0x4232b5
  4232af:	mov    BYTE PTR [edi],cl
  4232b1:	inc    edi
  4232b2:	inc    eax
  4232b3:	inc    DWORD PTR [esi]
  4232b5:	mov    cl,BYTE PTR [eax]
  4232b7:	mov    BYTE PTR [edi],cl
  4232b9:	inc    edi
  4232ba:	jmp    0x4232cb
  4232bc:	movzx  ecx,cl
  4232bf:	test   BYTE PTR [ecx+0x45cf21],0x4
  4232c6:	je     0x4232cb
  4232c8:	inc    eax
  4232c9:	inc    DWORD PTR [esi]
  4232cb:	inc    DWORD PTR [esi]
  4232cd:	inc    eax
  4232ce:	jmp    0x42323b
  4232d3:	test   edi,edi
  4232d5:	je     0x4232db
  4232d7:	and    BYTE PTR [edi],0x0
  4232da:	inc    edi
  4232db:	inc    DWORD PTR [esi]
  4232dd:	mov    ebx,DWORD PTR [ebp+0xc]
  4232e0:	jmp    0x423206
  4232e5:	mov    eax,DWORD PTR [ebp+0x8]
  4232e8:	test   eax,eax
  4232ea:	je     0x4232ef
  4232ec:	and    DWORD PTR [eax],0x0
  4232ef:	inc    DWORD PTR [ebx]
  4232f1:	pop    edi
  4232f2:	pop    ebx
  4232f3:	leave  
  4232f4:	ret    
  4232f5:	push   ebp
  4232f6:	mov    ebp,esp
  4232f8:	push   ecx
  4232f9:	push   ecx
  4232fa:	push   ebx
  4232fb:	push   esi
  4232fc:	push   edi
  4232fd:	xor    edi,edi
  4232ff:	cmp    DWORD PTR ds:0x45d26c,edi
  423305:	jne    0x42330c
  423307:	call   0x42449c
  42330c:	and    BYTE PTR ds:0x45cc14,0x0
  423313:	push   0x104
  423318:	mov    esi,0x45cb10
  42331d:	push   esi
  42331e:	push   edi
  42331f:	call   DWORD PTR ds:0x428040
  423325:	mov    eax,ds:0x45d274
  42332a:	cmp    eax,edi
  42332c:	mov    DWORD PTR ds:0x45caf4,esi
  423332:	je     0x42333b
  423334:	cmp    BYTE PTR [eax],0x0
  423337:	mov    ebx,eax
  423339:	jne    0x42333d
  42333b:	mov    ebx,esi
  42333d:	lea    eax,[ebp-0x4]
  423340:	push   eax
  423341:	push   edi
  423342:	lea    esi,[ebp-0x8]
  423345:	xor    ecx,ecx
  423347:	mov    eax,ebx
  423349:	call   0x423189
  42334e:	mov    esi,DWORD PTR [ebp-0x4]
  423351:	mov    eax,DWORD PTR [ebp-0x8]
  423354:	shl    esi,0x2
  423357:	add    eax,esi
  423359:	push   eax
  42335a:	call   0x4245d2
  42335f:	mov    edi,eax
  423361:	add    esp,0xc
  423364:	test   edi,edi
  423366:	jne    0x42336d
  423368:	or     eax,0xffffffff
  42336b:	jmp    0x423392
  42336d:	lea    eax,[ebp-0x4]
  423370:	push   eax
  423371:	lea    ecx,[esi+edi*1]
  423374:	push   edi
  423375:	lea    esi,[ebp-0x8]
  423378:	mov    eax,ebx
  42337a:	call   0x423189
  42337f:	mov    eax,DWORD PTR [ebp-0x4]
  423382:	dec    eax
  423383:	pop    ecx
  423384:	mov    ds:0x45cad8,eax
  423389:	pop    ecx
  42338a:	mov    DWORD PTR ds:0x45cadc,edi
  423390:	xor    eax,eax
  423392:	pop    edi
  423393:	pop    esi
  423394:	pop    ebx
  423395:	leave  
  423396:	ret    
  423397:	push   ecx
  423398:	push   ecx
  423399:	mov    eax,ds:0x45cc18
  42339e:	push   ebx
  42339f:	push   ebp
  4233a0:	push   esi
  4233a1:	push   edi
  4233a2:	mov    edi,DWORD PTR ds:0x428058
  4233a8:	xor    ebx,ebx
  4233aa:	xor    esi,esi
  4233ac:	cmp    eax,ebx
  4233ae:	push   0x2
  4233b0:	pop    ebp
  4233b1:	jne    0x4233e0
  4233b3:	call   edi
  4233b5:	mov    esi,eax
  4233b7:	cmp    esi,ebx
  4233b9:	je     0x4233c7
  4233bb:	mov    DWORD PTR ds:0x45cc18,0x1
  4233c5:	jmp    0x4233e5
  4233c7:	call   DWORD PTR ds:0x428014
  4233cd:	cmp    eax,0x78
  4233d0:	jne    0x4233db
  4233d2:	mov    eax,ebp
  4233d4:	mov    ds:0x45cc18,eax
  4233d9:	jmp    0x4233e0
  4233db:	mov    eax,ds:0x45cc18
  4233e0:	cmp    eax,0x1
  4233e3:	jne    0x423462
  4233e5:	cmp    esi,ebx
  4233e7:	jne    0x4233f1
  4233e9:	call   edi
  4233eb:	mov    esi,eax
  4233ed:	cmp    esi,ebx
  4233ef:	je     0x42346a
  4233f1:	cmp    WORD PTR [esi],bx
  4233f4:	mov    eax,esi
  4233f6:	je     0x423406
  4233f8:	add    eax,ebp
  4233fa:	cmp    WORD PTR [eax],bx
  4233fd:	jne    0x4233f8
  4233ff:	add    eax,ebp
  423401:	cmp    WORD PTR [eax],bx
  423404:	jne    0x4233f8
  423406:	mov    edi,DWORD PTR ds:0x428054
  42340c:	push   ebx
  42340d:	push   ebx
  42340e:	push   ebx
  42340f:	sub    eax,esi
  423411:	push   ebx
  423412:	sar    eax,1
  423414:	inc    eax
  423415:	push   eax
  423416:	push   esi
  423417:	push   ebx
  423418:	push   ebx
  423419:	mov    DWORD PTR [esp+0x34],eax
  42341d:	call   edi
  42341f:	mov    ebp,eax
  423421:	cmp    ebp,ebx
  423423:	je     0x423457
  423425:	push   ebp
  423426:	call   0x4245d2
  42342b:	cmp    eax,ebx
  42342d:	pop    ecx
  42342e:	mov    DWORD PTR [esp+0x10],eax
  423432:	je     0x423457
  423434:	push   ebx
  423435:	push   ebx
  423436:	push   ebp
  423437:	push   eax
  423438:	push   DWORD PTR [esp+0x24]
  42343c:	push   esi
  42343d:	push   ebx
  42343e:	push   ebx
  42343f:	call   edi
  423441:	test   eax,eax
  423443:	jne    0x423453
  423445:	push   DWORD PTR [esp+0x10]
  423449:	call   0x4244ba
  42344e:	pop    ecx
  42344f:	mov    DWORD PTR [esp+0x10],ebx
  423453:	mov    ebx,DWORD PTR [esp+0x10]
  423457:	push   esi
  423458:	call   DWORD PTR ds:0x428050
  42345e:	mov    eax,ebx
  423460:	jmp    0x4234b2
  423462:	cmp    eax,ebp
  423464:	je     0x42346e
  423466:	cmp    eax,ebx
  423468:	je     0x42346e
  42346a:	xor    eax,eax
  42346c:	jmp    0x4234b2
  42346e:	call   DWORD PTR ds:0x42804c
  423474:	mov    esi,eax
  423476:	cmp    esi,ebx
  423478:	je     0x42346a
  42347a:	cmp    BYTE PTR [esi],bl
  42347c:	je     0x423488
  42347e:	inc    eax
  42347f:	cmp    BYTE PTR [eax],bl
  423481:	jne    0x42347e
  423483:	inc    eax
  423484:	cmp    BYTE PTR [eax],bl
  423486:	jne    0x42347e
  423488:	sub    eax,esi
  42348a:	inc    eax
  42348b:	mov    ebp,eax
  42348d:	push   ebp
  42348e:	call   0x4245d2
  423493:	mov    edi,eax
  423495:	cmp    edi,ebx
  423497:	pop    ecx
  423498:	jne    0x42349e
  42349a:	xor    edi,edi
  42349c:	jmp    0x4234a9
  42349e:	push   ebp
  42349f:	push   esi
  4234a0:	push   edi
  4234a1:	call   0x4245f0
  4234a6:	add    esp,0xc
  4234a9:	push   esi
  4234aa:	call   DWORD PTR ds:0x428048
  4234b0:	mov    eax,edi
  4234b2:	pop    edi
  4234b3:	pop    esi
  4234b4:	pop    ebp
  4234b5:	pop    ebx
  4234b6:	pop    ecx
  4234b7:	pop    ecx
  4234b8:	ret    
  4234b9:	sub    esp,0x48
  4234bc:	push   ebx
  4234bd:	mov    ebx,0x480
  4234c2:	push   ebx
  4234c3:	call   0x4245d2
  4234c8:	test   eax,eax
  4234ca:	pop    ecx
  4234cb:	jne    0x4234d5
  4234cd:	or     eax,0xffffffff
  4234d0:	jmp    0x4236b2
  4234d5:	mov    ds:0x45d160,eax
  4234da:	mov    DWORD PTR ds:0x45d148,0x20
  4234e4:	lea    ecx,[eax+0x480]
  4234ea:	jmp    0x42350a
  4234ec:	and    BYTE PTR [eax+0x4],0x0
  4234f0:	or     DWORD PTR [eax],0xffffffff
  4234f3:	and    DWORD PTR [eax+0x8],0x0
  4234f7:	mov    BYTE PTR [eax+0x5],0xa
  4234fb:	mov    ecx,DWORD PTR ds:0x45d160
  423501:	add    eax,0x24
  423504:	add    ecx,0x480
  42350a:	cmp    eax,ecx
  42350c:	jb     0x4234ec
  42350e:	push   ebp
  42350f:	push   esi
  423510:	push   edi
  423511:	lea    eax,[esp+0x14]
  423515:	push   eax
  423516:	call   DWORD PTR ds:0x428020
  42351c:	cmp    WORD PTR [esp+0x46],0x0
  423522:	je     0x423611
  423528:	mov    eax,DWORD PTR [esp+0x48]
  42352c:	test   eax,eax
  42352e:	je     0x423611
  423534:	mov    edi,DWORD PTR [eax]
  423536:	lea    ebp,[eax+0x4]
  423539:	lea    eax,[edi+ebp*1]
  42353c:	mov    DWORD PTR [esp+0x10],eax
  423540:	mov    eax,0x800
  423545:	cmp    edi,eax
  423547:	jl     0x42354b
  423549:	mov    edi,eax
  42354b:	cmp    DWORD PTR ds:0x45d148,edi
  423551:	jge    0x4235a1
  423553:	mov    esi,0x45d164
  423558:	push   ebx
  423559:	call   0x4245d2
  42355e:	test   eax,eax
  423560:	pop    ecx
  423561:	je     0x42359b
  423563:	add    DWORD PTR ds:0x45d148,0x20
  42356a:	mov    DWORD PTR [esi],eax
  42356c:	lea    ecx,[eax+0x480]
  423572:	jmp    0x42358a
  423574:	and    BYTE PTR [eax+0x4],0x0
  423578:	or     DWORD PTR [eax],0xffffffff
  42357b:	and    DWORD PTR [eax+0x8],0x0
  42357f:	mov    BYTE PTR [eax+0x5],0xa
  423583:	mov    ecx,DWORD PTR [esi]
  423585:	add    eax,0x24
  423588:	add    ecx,ebx
  42358a:	cmp    eax,ecx
  42358c:	jb     0x423574
  42358e:	add    esi,0x4
  423591:	cmp    DWORD PTR ds:0x45d148,edi
  423597:	jl     0x423558
  423599:	jmp    0x4235a1
  42359b:	mov    edi,DWORD PTR ds:0x45d148
  4235a1:	xor    ebx,ebx
  4235a3:	test   edi,edi
  4235a5:	jle    0x423611
  4235a7:	mov    eax,DWORD PTR [esp+0x10]
  4235ab:	mov    eax,DWORD PTR [eax]
  4235ad:	cmp    eax,0xffffffff
  4235b0:	je     0x423606
  4235b2:	mov    cl,BYTE PTR [ebp+0x0]
  4235b5:	test   cl,0x1
  4235b8:	je     0x423606
  4235ba:	test   cl,0x8
  4235bd:	jne    0x4235ca
  4235bf:	push   eax
  4235c0:	call   DWORD PTR ds:0x428060
  4235c6:	test   eax,eax
  4235c8:	je     0x423606
  4235ca:	mov    ecx,ebx
  4235cc:	mov    eax,ebx
  4235ce:	and    eax,0x1f
  4235d1:	lea    eax,[eax+eax*8]
  4235d4:	sar    ecx,0x5
  4235d7:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  4235de:	lea    esi,[ecx+eax*4]
  4235e1:	mov    eax,DWORD PTR [esp+0x10]
  4235e5:	mov    eax,DWORD PTR [eax]
  4235e7:	mov    DWORD PTR [esi],eax
  4235e9:	mov    al,BYTE PTR [ebp+0x0]
  4235ec:	mov    BYTE PTR [esi+0x4],al
  4235ef:	lea    eax,[esi+0xc]
  4235f2:	push   0xfa0
  4235f7:	push   eax
  4235f8:	call   0x42493d
  4235fd:	test   eax,eax
  4235ff:	pop    ecx
  423600:	pop    ecx
  423601:	je     0x423631
  423603:	inc    DWORD PTR [esi+0x8]
  423606:	add    DWORD PTR [esp+0x10],0x4
  42360b:	inc    ebx
  42360c:	inc    ebp
  42360d:	cmp    ebx,edi
  42360f:	jl     0x4235a7
  423611:	xor    ebx,ebx
  423613:	mov    ecx,DWORD PTR ds:0x45d160
  423619:	lea    eax,[ebx+ebx*8]
  42361c:	lea    esi,[ecx+eax*4]
  42361f:	cmp    DWORD PTR [esi],0xffffffff
  423622:	jne    0x423693
  423624:	test   ebx,ebx
  423626:	mov    BYTE PTR [esi+0x4],0x81
  42362a:	jne    0x423636
  42362c:	push   0xfffffff6
  42362e:	pop    eax
  42362f:	jmp    0x423640
  423631:	or     eax,0xffffffff
  423634:	jmp    0x4236af
  423636:	mov    eax,ebx
  423638:	dec    eax
  423639:	neg    eax
  42363b:	sbb    eax,eax
  42363d:	add    eax,0xfffffff5
  423640:	push   eax
  423641:	call   DWORD PTR ds:0x42803c
  423647:	mov    edi,eax
  423649:	cmp    edi,0xffffffff
  42364c:	je     0x42368d
  42364e:	push   edi
  42364f:	call   DWORD PTR ds:0x428060
  423655:	test   eax,eax
  423657:	je     0x42368d
  423659:	and    eax,0xff
  42365e:	cmp    eax,0x2
  423661:	mov    DWORD PTR [esi],edi
  423663:	jne    0x42366b
  423665:	or     BYTE PTR [esi+0x4],0x40
  423669:	jmp    0x423674
  42366b:	cmp    eax,0x3
  42366e:	jne    0x423674
  423670:	or     BYTE PTR [esi+0x4],0x8
  423674:	lea    eax,[esi+0xc]
  423677:	push   0xfa0
  42367c:	push   eax
  42367d:	call   0x42493d
  423682:	test   eax,eax
  423684:	pop    ecx
  423685:	pop    ecx
  423686:	je     0x423631
  423688:	inc    DWORD PTR [esi+0x8]
  42368b:	jmp    0x423697
  42368d:	or     BYTE PTR [esi+0x4],0x40
  423691:	jmp    0x423697
  423693:	or     BYTE PTR [esi+0x4],0x80
  423697:	inc    ebx
  423698:	cmp    ebx,0x3
  42369b:	jl     0x423613
  4236a1:	push   DWORD PTR ds:0x45d148
  4236a7:	call   DWORD PTR ds:0x42805c
  4236ad:	xor    eax,eax
  4236af:	pop    edi
  4236b0:	pop    esi
  4236b1:	pop    ebp
  4236b2:	pop    ebx
  4236b3:	add    esp,0x48
  4236b6:	ret    
  4236b7:	push   0xc
  4236b9:	push   0x4284a8
  4236be:	call   0x4238a8
  4236c3:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236ca:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236d1:	jae    0x4236f5
  4236d3:	and    DWORD PTR [ebp-0x4],0x0
  4236d7:	mov    eax,DWORD PTR [ebp-0x1c]
  4236da:	mov    eax,DWORD PTR [eax]
  4236dc:	test   eax,eax
  4236de:	je     0x4236eb
  4236e0:	call   eax
  4236e2:	jmp    0x4236eb
  4236e4:	xor    eax,eax
  4236e6:	inc    eax
  4236e7:	ret    
  4236e8:	mov    esp,DWORD PTR [ebp-0x18]
  4236eb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236ef:	add    DWORD PTR [ebp-0x1c],0x4
  4236f3:	jmp    0x4236ca
  4236f5:	call   0x4238e3
  4236fa:	ret    
  4236fb:	push   0xc
  4236fd:	push   0x4284b8
  423702:	call   0x4238a8
  423707:	mov    DWORD PTR [ebp-0x1c],0x428f08
  42370e:	cmp    DWORD PTR [ebp-0x1c],0x428f08
  423715:	jae    0x423739
  423717:	and    DWORD PTR [ebp-0x4],0x0
  42371b:	mov    eax,DWORD PTR [ebp-0x1c]
  42371e:	mov    eax,DWORD PTR [eax]
  423720:	test   eax,eax
  423722:	je     0x42372f
  423724:	call   eax
  423726:	jmp    0x42372f
  423728:	xor    eax,eax
  42372a:	inc    eax
  42372b:	ret    
  42372c:	mov    esp,DWORD PTR [ebp-0x18]
  42372f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423733:	add    DWORD PTR [ebp-0x1c],0x4
  423737:	jmp    0x42370e
  423739:	call   0x4238e3
  42373e:	ret    
  42373f:	call   0x423986
  423744:	mov    eax,ds:0x45c304
  423749:	cmp    eax,0xffffffff
  42374c:	je     0x42375c
  42374e:	push   eax
  42374f:	call   DWORD PTR ds:0x428068
  423755:	or     DWORD PTR ds:0x45c304,0xffffffff
  42375c:	ret    
  42375d:	push   ebx
  42375e:	push   esi
  42375f:	call   DWORD PTR ds:0x428014
  423765:	push   DWORD PTR ds:0x45c304
  42376b:	mov    ebx,eax
  42376d:	call   DWORD PTR ds:0x428078
  423773:	mov    esi,eax
  423775:	test   esi,esi
  423777:	jne    0x4237c2
  423779:	push   0x88
  42377e:	push   0x1
  423780:	call   0x4249c8
  423785:	mov    esi,eax
  423787:	test   esi,esi
  423789:	pop    ecx
  42378a:	pop    ecx
  42378b:	je     0x4237ba
  42378d:	push   esi
  42378e:	push   DWORD PTR ds:0x45c304
  423794:	call   DWORD PTR ds:0x428074
  42379a:	test   eax,eax
  42379c:	je     0x4237ba
  42379e:	mov    DWORD PTR [esi+0x54],0x45c258
  4237a5:	mov    DWORD PTR [esi+0x14],0x1
  4237ac:	call   DWORD PTR ds:0x428070
  4237b2:	or     DWORD PTR [esi+0x4],0xffffffff
  4237b6:	mov    DWORD PTR [esi],eax
  4237b8:	jmp    0x4237c2
  4237ba:	push   0x10
  4237bc:	call   0x422970
  4237c1:	pop    ecx
  4237c2:	push   ebx
  4237c3:	call   DWORD PTR ds:0x42806c
  4237c9:	mov    eax,esi
  4237cb:	pop    esi
  4237cc:	pop    ebx
  4237cd:	ret    
  4237ce:	call   0x42393d
  4237d3:	test   eax,eax
  4237d5:	je     0x4237e7
  4237d7:	call   DWORD PTR ds:0x42807c
  4237dd:	cmp    eax,0xffffffff
  4237e0:	mov    ds:0x45c304,eax
  4237e5:	jne    0x4237ef
  4237e7:	call   0x42373f
  4237ec:	xor    eax,eax
  4237ee:	ret    
  4237ef:	push   esi
  4237f0:	push   0x88
  4237f5:	push   0x1
  4237f7:	call   0x4249c8
  4237fc:	mov    esi,eax
  4237fe:	test   esi,esi
  423800:	pop    ecx
  423801:	pop    ecx
  423802:	je     0x423834
  423804:	push   esi
  423805:	push   DWORD PTR ds:0x45c304
  42380b:	call   DWORD PTR ds:0x428074
  423811:	test   eax,eax
  423813:	je     0x423834
  423815:	mov    DWORD PTR [esi+0x54],0x45c258
  42381c:	mov    DWORD PTR [esi+0x14],0x1
  423823:	call   DWORD PTR ds:0x428070
  423829:	or     DWORD PTR [esi+0x4],0xffffffff
  42382d:	mov    DWORD PTR [esi],eax
  42382f:	xor    eax,eax
  423831:	inc    eax
  423832:	pop    esi
  423833:	ret    
  423834:	call   0x42373f
  423839:	xor    eax,eax
  42383b:	pop    esi
  42383c:	ret    
  42383d:	cmp    DWORD PTR ds:0x45cac4,0x2
  423844:	jne    0x423853
  423846:	cmp    DWORD PTR ds:0x45cad0,0x5
  42384d:	jb     0x423853
  42384f:	xor    eax,eax
  423851:	inc    eax
  423852:	ret    
  423853:	push   0x3
  423855:	pop    eax
  423856:	ret    
  423857:	xor    eax,eax
  423859:	cmp    DWORD PTR [esp+0x4],eax
  42385d:	push   0x0
  42385f:	sete   al
  423862:	push   0x1000
  423867:	push   eax
  423868:	call   DWORD PTR ds:0x428084
  42386e:	test   eax,eax
  423870:	mov    ds:0x45d140,eax
  423875:	je     0x4238a1
  423877:	call   0x42383d
  42387c:	cmp    eax,0x3
  42387f:	mov    ds:0x45d144,eax
  423884:	jne    0x4238a4
  423886:	push   0x3f8
  42388b:	call   0x424c4a
  423890:	test   eax,eax
  423892:	pop    ecx
  423893:	jne    0x4238a4
  423895:	push   DWORD PTR ds:0x45d140
  42389b:	call   DWORD PTR ds:0x428080
  4238a1:	xor    eax,eax
  4238a3:	ret    
  4238a4:	xor    eax,eax
  4238a6:	inc    eax
  4238a7:	ret    
  4238a8:	push   0x425778
  4238ad:	mov    eax,fs:0x0
  4238b3:	push   eax
  4238b4:	mov    eax,DWORD PTR [esp+0x10]
  4238b8:	mov    DWORD PTR [esp+0x10],ebp
  4238bc:	lea    ebp,[esp+0x10]
  4238c0:	sub    esp,eax
  4238c2:	push   ebx
  4238c3:	push   esi
  4238c4:	push   edi
  4238c5:	mov    eax,DWORD PTR [ebp-0x8]
  4238c8:	mov    DWORD PTR [ebp-0x18],esp
  4238cb:	push   eax
  4238cc:	mov    eax,DWORD PTR [ebp-0x4]
  4238cf:	mov    DWORD PTR [ebp-0x4],0xffffffff
  4238d6:	mov    DWORD PTR [ebp-0x8],eax
  4238d9:	lea    eax,[ebp-0x10]
  4238dc:	mov    fs:0x0,eax
  4238e2:	ret    
  4238e3:	mov    ecx,DWORD PTR [ebp-0x10]
  4238e6:	mov    DWORD PTR fs:0x0,ecx
  4238ed:	pop    ecx
  4238ee:	pop    edi
  4238ef:	pop    esi
  4238f0:	pop    ebx
  4238f1:	leave  
  4238f2:	push   ecx
  4238f3:	ret    
  4238f4:	int3   
  4238f5:	int3   
  4238f6:	int3   
  4238f7:	int3   
  4238f8:	int3   
  4238f9:	int3   
  4238fa:	int3   
  4238fb:	int3   
  4238fc:	int3   
  4238fd:	int3   
  4238fe:	int3   
  4238ff:	int3   
  423900:	cmp    eax,0x1000
  423905:	jae    0x423915
  423907:	neg    eax
  423909:	add    eax,esp
  42390b:	add    eax,0x4
  42390e:	test   DWORD PTR [eax],eax
  423910:	xchg   esp,eax
  423911:	mov    eax,DWORD PTR [eax]
  423913:	push   eax
  423914:	ret    
  423915:	push   ecx
  423916:	lea    ecx,[esp+0x8]
  42391a:	sub    ecx,0x1000
  423920:	sub    eax,0x1000
  423925:	test   DWORD PTR [ecx],eax
  423927:	cmp    eax,0x1000
  42392c:	jae    0x42391a
  42392e:	sub    ecx,eax
  423930:	mov    eax,esp
  423932:	test   DWORD PTR [ecx],eax
  423934:	mov    esp,ecx
  423936:	mov    ecx,DWORD PTR [eax]
  423938:	mov    eax,DWORD PTR [eax+0x4]
  42393b:	push   eax
  42393c:	ret    
  42393d:	push   esi
  42393e:	push   edi
  42393f:	xor    esi,esi
  423941:	mov    edi,0x45cc20
  423946:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  42394e:	jne    0x42396e
  423950:	lea    eax,[esi*8+0x45c310]
  423957:	mov    DWORD PTR [eax],edi
  423959:	push   0xfa0
  42395e:	push   DWORD PTR [eax]
  423960:	add    edi,0x18
  423963:	call   0x42493d
  423968:	test   eax,eax
  42396a:	pop    ecx
  42396b:	pop    ecx
  42396c:	je     0x42397a
  42396e:	inc    esi
  42396f:	cmp    esi,0x24
  423972:	jl     0x423946
  423974:	xor    eax,eax
  423976:	inc    eax
  423977:	pop    edi
  423978:	pop    esi
  423979:	ret    
  42397a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423982:	xor    eax,eax
  423984:	jmp    0x423977
  423986:	push   ebx
  423987:	mov    ebx,DWORD PTR ds:0x428064
  42398d:	push   esi
  42398e:	mov    esi,0x45c310
  423993:	push   edi
  423994:	mov    edi,DWORD PTR [esi]
  423996:	test   edi,edi
  423998:	je     0x4239ad
  42399a:	cmp    DWORD PTR [esi+0x4],0x1
  42399e:	je     0x4239ad
  4239a0:	push   edi
  4239a1:	call   ebx
  4239a3:	push   edi
  4239a4:	call   0x4244ba
  4239a9:	and    DWORD PTR [esi],0x0
  4239ac:	pop    ecx
  4239ad:	add    esi,0x8
  4239b0:	cmp    esi,0x45c430
  4239b6:	jl     0x423994
  4239b8:	mov    esi,0x45c310
  4239bd:	pop    edi
  4239be:	mov    eax,DWORD PTR [esi]
  4239c0:	test   eax,eax
  4239c2:	je     0x4239cd
  4239c4:	cmp    DWORD PTR [esi+0x4],0x1
  4239c8:	jne    0x4239cd
  4239ca:	push   eax
  4239cb:	call   ebx
  4239cd:	add    esi,0x8
  4239d0:	cmp    esi,0x45c430
  4239d6:	jl     0x4239be
  4239d8:	pop    esi
  4239d9:	pop    ebx
  4239da:	ret    
  4239db:	push   ebp
  4239dc:	mov    ebp,esp
  4239de:	mov    eax,DWORD PTR [ebp+0x8]
  4239e1:	push   DWORD PTR [eax*8+0x45c310]
  4239e8:	call   DWORD PTR ds:0x428090
  4239ee:	pop    ebp
  4239ef:	ret    
  4239f0:	push   ebp
  4239f1:	mov    ebp,esp
  4239f3:	push   esi
  4239f4:	mov    esi,DWORD PTR [ebp+0x8]
  4239f7:	lea    esi,[esi*8+0x45c310]
  4239fe:	cmp    DWORD PTR [esi],0x0
  423a01:	je     0x423a08
  423a03:	xor    eax,eax
  423a05:	inc    eax
  423a06:	jmp    0x423a6c
  423a08:	push   edi
  423a09:	push   0x18
  423a0b:	call   0x4245d2
  423a10:	mov    edi,eax
  423a12:	test   edi,edi
  423a14:	pop    ecx
  423a15:	jne    0x423a26
  423a17:	call   0x425850
  423a1c:	mov    DWORD PTR [eax],0xc
  423a22:	xor    eax,eax
  423a24:	jmp    0x423a6b
  423a26:	push   0xa
  423a28:	call   0x423a6f
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	pop    ecx
  423a31:	jne    0x423a59
  423a33:	push   0xfa0
  423a38:	push   edi
  423a39:	call   0x42493d
  423a3e:	test   eax,eax
  423a40:	pop    ecx
  423a41:	pop    ecx
  423a42:	jne    0x423a55
  423a44:	push   edi
  423a45:	call   0x4244ba
  423a4a:	push   0xa
  423a4c:	call   0x4239db
  423a51:	pop    ecx
  423a52:	pop    ecx
  423a53:	jmp    0x423a17
  423a55:	mov    DWORD PTR [esi],edi
  423a57:	jmp    0x423a60
  423a59:	push   edi
  423a5a:	call   0x4244ba
  423a5f:	pop    ecx
  423a60:	push   0xa
  423a62:	call   0x4239db
  423a67:	xor    eax,eax
  423a69:	pop    ecx
  423a6a:	inc    eax
  423a6b:	pop    edi
  423a6c:	pop    esi
  423a6d:	pop    ebp
  423a6e:	ret    
  423a6f:	push   ebp
  423a70:	mov    ebp,esp
  423a72:	mov    eax,DWORD PTR [ebp+0x8]
  423a75:	push   esi
  423a76:	lea    esi,[eax*8+0x45c310]
  423a7d:	cmp    DWORD PTR [esi],0x0
  423a80:	jne    0x423a95
  423a82:	push   eax
  423a83:	call   0x4239f0
  423a88:	test   eax,eax
  423a8a:	pop    ecx
  423a8b:	jne    0x423a95
  423a8d:	push   0x11
  423a8f:	call   0x422970
  423a94:	pop    ecx
  423a95:	push   DWORD PTR [esi]
  423a97:	call   DWORD PTR ds:0x428094
  423a9d:	pop    esi
  423a9e:	pop    ebp
  423a9f:	ret    
  423aa0:	push   esi
  423aa1:	push   DWORD PTR ds:0x45d268
  423aa7:	call   0x425a06
  423aac:	pop    ecx
  423aad:	mov    ecx,DWORD PTR ds:0x45d264
  423ab3:	mov    esi,eax
  423ab5:	mov    eax,ds:0x45d268
  423aba:	mov    edx,ecx
  423abc:	sub    edx,eax
  423abe:	add    edx,0x4
  423ac1:	cmp    esi,edx
  423ac3:	jae    0x423b13
  423ac5:	mov    ecx,0x800
  423aca:	cmp    esi,ecx
  423acc:	jae    0x423ad0
  423ace:	mov    ecx,esi
  423ad0:	add    ecx,esi
  423ad2:	push   ecx
  423ad3:	push   eax
  423ad4:	call   0x425859
  423ad9:	test   eax,eax
  423adb:	pop    ecx
  423adc:	pop    ecx
  423add:	jne    0x423af6
  423adf:	add    esi,0x10
  423ae2:	push   esi
  423ae3:	push   DWORD PTR ds:0x45d268
  423ae9:	call   0x425859
  423aee:	test   eax,eax
  423af0:	pop    ecx
  423af1:	pop    ecx
  423af2:	jne    0x423af6
  423af4:	pop    esi
  423af5:	ret    
  423af6:	mov    ecx,DWORD PTR ds:0x45d264
  423afc:	sub    ecx,DWORD PTR ds:0x45d268
  423b02:	mov    ds:0x45d268,eax
  423b07:	sar    ecx,0x2
  423b0a:	lea    ecx,[eax+ecx*4]
  423b0d:	mov    DWORD PTR ds:0x45d264,ecx
  423b13:	mov    DWORD PTR [ecx],edi
  423b15:	add    DWORD PTR ds:0x45d264,0x4
  423b1c:	mov    eax,edi
  423b1e:	pop    esi
  423b1f:	ret    
  423b20:	push   0x80
  423b25:	call   0x4245d2
  423b2a:	test   eax,eax
  423b2c:	pop    ecx
  423b2d:	mov    ds:0x45d268,eax
  423b32:	jne    0x423b38
  423b34:	push   0x18
  423b36:	pop    eax
  423b37:	ret    
  423b38:	and    DWORD PTR [eax],0x0
  423b3b:	mov    eax,ds:0x45d268
  423b40:	mov    ds:0x45d264,eax
  423b45:	xor    eax,eax
  423b47:	ret    
  423b48:	push   0xc
  423b4a:	push   0x4284c8
  423b4f:	call   0x4238a8
  423b54:	call   0x422bbb
  423b59:	and    DWORD PTR [ebp-0x4],0x0
  423b5d:	mov    edi,DWORD PTR [ebp+0x8]
  423b60:	call   0x423aa0
  423b65:	mov    DWORD PTR [ebp-0x1c],eax
  423b68:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b6c:	call   0x423b7a
  423b71:	mov    eax,DWORD PTR [ebp-0x1c]
  423b74:	call   0x4238e3
  423b79:	ret    
  423b7a:	call   0x422bc4
  423b7f:	ret    
  423b80:	push   DWORD PTR [esp+0x4]
  423b84:	call   0x423b48
  423b89:	neg    eax
  423b8b:	sbb    eax,eax
  423b8d:	neg    eax
  423b8f:	pop    ecx
  423b90:	dec    eax
  423b91:	ret    
  423b92:	push   ebp
  423b93:	mov    ebp,esp
  423b95:	sub    esp,0x10
  423b98:	push   ebx
  423b99:	xor    ebx,ebx
  423b9b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423ba1:	push   esi
  423ba2:	push   edi
  423ba3:	jne    0x423c12
  423ba5:	push   0x428538
  423baa:	call   DWORD PTR ds:0x428098
  423bb0:	mov    edi,eax
  423bb2:	cmp    edi,ebx
  423bb4:	je     0x423c4d
  423bba:	mov    esi,DWORD PTR ds:0x42801c
  423bc0:	push   0x42852c
  423bc5:	push   edi
  423bc6:	call   esi
  423bc8:	test   eax,eax
  423bca:	mov    ds:0x45cd70,eax
  423bcf:	je     0x423c4d
  423bd1:	push   0x42851c
  423bd6:	push   edi
  423bd7:	call   esi
  423bd9:	push   0x428508
  423bde:	push   edi
  423bdf:	mov    ds:0x45cd74,eax
  423be4:	call   esi
  423be6:	cmp    DWORD PTR ds:0x45cac4,0x2
  423bed:	mov    ds:0x45cd78,eax
  423bf2:	jne    0x423c12
  423bf4:	push   0x4284ec
  423bf9:	push   edi
  423bfa:	call   esi
  423bfc:	test   eax,eax
  423bfe:	mov    ds:0x45cd80,eax
  423c03:	je     0x423c12
  423c05:	push   0x4284d4
  423c0a:	push   edi
  423c0b:	call   esi
  423c0d:	mov    ds:0x45cd7c,eax
  423c12:	mov    eax,ds:0x45cd7c
  423c17:	test   eax,eax
  423c19:	je     0x423c57
  423c1b:	call   eax
  423c1d:	test   eax,eax
  423c1f:	je     0x423c3e
  423c21:	lea    ecx,[ebp-0x4]
  423c24:	push   ecx
  423c25:	push   0xc
  423c27:	lea    ecx,[ebp-0x10]
  423c2a:	push   ecx
  423c2b:	push   0x1
  423c2d:	push   eax
  423c2e:	call   DWORD PTR ds:0x45cd80
  423c34:	test   eax,eax
  423c36:	je     0x423c3e
  423c38:	test   BYTE PTR [ebp-0x8],0x1
  423c3c:	jne    0x423c57
  423c3e:	cmp    DWORD PTR ds:0x45cad0,0x4
  423c45:	jb     0x423c51
  423c47:	or     BYTE PTR [ebp+0x12],0x20
  423c4b:	jmp    0x423c76
  423c4d:	xor    eax,eax
  423c4f:	jmp    0x423c86
  423c51:	or     BYTE PTR [ebp+0x12],0x4
  423c55:	jmp    0x423c76
  423c57:	mov    eax,ds:0x45cd74
  423c5c:	test   eax,eax
  423c5e:	je     0x423c76
  423c60:	call   eax
  423c62:	mov    ebx,eax
  423c64:	test   ebx,ebx
  423c66:	je     0x423c76
  423c68:	mov    eax,ds:0x45cd78
  423c6d:	test   eax,eax
  423c6f:	je     0x423c76
  423c71:	push   ebx
  423c72:	call   eax
  423c74:	mov    ebx,eax
  423c76:	push   DWORD PTR [ebp+0x10]
  423c79:	push   DWORD PTR [ebp+0xc]
  423c7c:	push   DWORD PTR [ebp+0x8]
  423c7f:	push   ebx
  423c80:	call   DWORD PTR ds:0x45cd70
  423c86:	pop    edi
  423c87:	pop    esi
  423c88:	pop    ebx
  423c89:	leave  
  423c8a:	ret    
  423c8b:	int3   
  423c8c:	int3   
  423c8d:	int3   
  423c8e:	int3   
  423c8f:	int3   
  423c90:	push   edi
  423c91:	mov    edi,DWORD PTR [esp+0x8]
  423c95:	jmp    0x423d05
  423c97:	lea    esp,[esp+0x0]
  423c9e:	mov    edi,edi
  423ca0:	mov    ecx,DWORD PTR [esp+0x4]
  423ca4:	push   edi
  423ca5:	test   ecx,0x3
  423cab:	je     0x423cc0
  423cad:	mov    al,BYTE PTR [ecx]
  423caf:	add    ecx,0x1
  423cb2:	test   al,al
  423cb4:	je     0x423cf3
  423cb6:	test   ecx,0x3
  423cbc:	jne    0x423cad
  423cbe:	mov    edi,edi
  423cc0:	mov    eax,DWORD PTR [ecx]
  423cc2:	mov    edx,0x7efefeff
  423cc7:	add    edx,eax
  423cc9:	xor    eax,0xffffffff
  423ccc:	xor    eax,edx
  423cce:	add    ecx,0x4
  423cd1:	test   eax,0x81010100
  423cd6:	je     0x423cc0
  423cd8:	mov    eax,DWORD PTR [ecx-0x4]
  423cdb:	test   al,al
  423cdd:	je     0x423d02
  423cdf:	test   ah,ah
  423ce1:	je     0x423cfd
  423ce3:	test   eax,0xff0000
  423ce8:	je     0x423cf8
  423cea:	test   eax,0xff000000
  423cef:	je     0x423cf3
  423cf1:	jmp    0x423cc0
  423cf3:	lea    edi,[ecx-0x1]
  423cf6:	jmp    0x423d05
  423cf8:	lea    edi,[ecx-0x2]
  423cfb:	jmp    0x423d05
  423cfd:	lea    edi,[ecx-0x3]
  423d00:	jmp    0x423d05
  423d02:	lea    edi,[ecx-0x4]
  423d05:	mov    ecx,DWORD PTR [esp+0xc]
  423d09:	test   ecx,0x3
  423d0f:	je     0x423d2e
  423d11:	mov    dl,BYTE PTR [ecx]
  423d13:	add    ecx,0x1
  423d16:	test   dl,dl
  423d18:	je     0x423d80
  423d1a:	mov    BYTE PTR [edi],dl
  423d1c:	add    edi,0x1
  423d1f:	test   ecx,0x3
  423d25:	jne    0x423d11
  423d27:	jmp    0x423d2e
  423d29:	mov    DWORD PTR [edi],edx
  423d2b:	add    edi,0x4
  423d2e:	mov    edx,0x7efefeff
  423d33:	mov    eax,DWORD PTR [ecx]
  423d35:	add    edx,eax
  423d37:	xor    eax,0xffffffff
  423d3a:	xor    eax,edx
  423d3c:	mov    edx,DWORD PTR [ecx]
  423d3e:	add    ecx,0x4
  423d41:	test   eax,0x81010100
  423d46:	je     0x423d29
  423d48:	test   dl,dl
  423d4a:	je     0x423d80
  423d4c:	test   dh,dh
  423d4e:	je     0x423d77
  423d50:	test   edx,0xff0000
  423d56:	je     0x423d6a
  423d58:	test   edx,0xff000000
  423d5e:	je     0x423d62
  423d60:	jmp    0x423d29
  423d62:	mov    DWORD PTR [edi],edx
  423d64:	mov    eax,DWORD PTR [esp+0x8]
  423d68:	pop    edi
  423d69:	ret    
  423d6a:	mov    WORD PTR [edi],dx
  423d6d:	mov    eax,DWORD PTR [esp+0x8]
  423d71:	mov    BYTE PTR [edi+0x2],0x0
  423d75:	pop    edi
  423d76:	ret    
  423d77:	mov    WORD PTR [edi],dx
  423d7a:	mov    eax,DWORD PTR [esp+0x8]
  423d7e:	pop    edi
  423d7f:	ret    
  423d80:	mov    BYTE PTR [edi],dl
  423d82:	mov    eax,DWORD PTR [esp+0x8]
  423d86:	pop    edi
  423d87:	ret    
  423d88:	int3   
  423d89:	int3   
  423d8a:	int3   
  423d8b:	int3   
  423d8c:	int3   
  423d8d:	int3   
  423d8e:	int3   
  423d8f:	int3   
  423d90:	mov    ecx,DWORD PTR [esp+0xc]
  423d94:	push   edi
  423d95:	test   ecx,ecx
  423d97:	je     0x423e2f
  423d9d:	push   esi
  423d9e:	push   ebx
  423d9f:	mov    ebx,ecx
  423da1:	mov    esi,DWORD PTR [esp+0x14]
  423da5:	test   esi,0x3
  423dab:	mov    edi,DWORD PTR [esp+0x10]
  423daf:	jne    0x423dbc
  423db1:	shr    ecx,0x2
  423db4:	jne    0x423e3f
  423dba:	jmp    0x423de3
  423dbc:	mov    al,BYTE PTR [esi]
  423dbe:	add    esi,0x1
  423dc1:	mov    BYTE PTR [edi],al
  423dc3:	add    edi,0x1
  423dc6:	sub    ecx,0x1
  423dc9:	je     0x423df6
  423dcb:	test   al,al
  423dcd:	je     0x423dfe
  423dcf:	test   esi,0x3
  423dd5:	jne    0x423dbc
  423dd7:	mov    ebx,ecx
  423dd9:	shr    ecx,0x2
  423ddc:	jne    0x423e3f
  423dde:	and    ebx,0x3
  423de1:	je     0x423df6
  423de3:	mov    al,BYTE PTR [esi]
  423de5:	add    esi,0x1
  423de8:	mov    BYTE PTR [edi],al
  423dea:	add    edi,0x1
  423ded:	test   al,al
  423def:	je     0x423e28
  423df1:	sub    ebx,0x1
  423df4:	jne    0x423de3
  423df6:	mov    eax,DWORD PTR [esp+0x10]
  423dfa:	pop    ebx
  423dfb:	pop    esi
  423dfc:	pop    edi
  423dfd:	ret    
  423dfe:	test   edi,0x3
  423e04:	je     0x423e1c
  423e06:	mov    BYTE PTR [edi],al
  423e08:	add    edi,0x1
  423e0b:	sub    ecx,0x1
  423e0e:	je     0x423eac
  423e14:	test   edi,0x3
  423e1a:	jne    0x423e06
  423e1c:	mov    ebx,ecx
  423e1e:	shr    ecx,0x2
  423e21:	jne    0x423e97
  423e23:	mov    BYTE PTR [edi],al
  423e25:	add    edi,0x1
  423e28:	sub    ebx,0x1
  423e2b:	jne    0x423e23
  423e2d:	pop    ebx
  423e2e:	pop    esi
  423e2f:	mov    eax,DWORD PTR [esp+0x8]
  423e33:	pop    edi
  423e34:	ret    
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	add    edi,0x4
  423e3a:	sub    ecx,0x1
  423e3d:	je     0x423dde
  423e3f:	mov    edx,0x7efefeff
  423e44:	mov    eax,DWORD PTR [esi]
  423e46:	add    edx,eax
  423e48:	xor    eax,0xffffffff
  423e4b:	xor    eax,edx
  423e4d:	mov    edx,DWORD PTR [esi]
  423e4f:	add    esi,0x4
  423e52:	test   eax,0x81010100
  423e57:	je     0x423e35
  423e59:	test   dl,dl
  423e5b:	je     0x423e89
  423e5d:	test   dh,dh
  423e5f:	je     0x423e7f
  423e61:	test   edx,0xff0000
  423e67:	je     0x423e75
  423e69:	test   edx,0xff000000
  423e6f:	jne    0x423e35
  423e71:	mov    DWORD PTR [edi],edx
  423e73:	jmp    0x423e8d
  423e75:	and    edx,0xffff
  423e7b:	mov    DWORD PTR [edi],edx
  423e7d:	jmp    0x423e8d
  423e7f:	and    edx,0xff
  423e85:	mov    DWORD PTR [edi],edx
  423e87:	jmp    0x423e8d
  423e89:	xor    edx,edx
  423e8b:	mov    DWORD PTR [edi],edx
  423e8d:	add    edi,0x4
  423e90:	xor    eax,eax
  423e92:	sub    ecx,0x1
  423e95:	je     0x423ea3
  423e97:	xor    eax,eax
  423e99:	mov    DWORD PTR [edi],eax
  423e9b:	add    edi,0x4
  423e9e:	sub    ecx,0x1
  423ea1:	jne    0x423e99
  423ea3:	and    ebx,0x3
  423ea6:	jne    0x423e23
  423eac:	mov    eax,DWORD PTR [esp+0x10]
  423eb0:	pop    ebx
  423eb1:	pop    esi
  423eb2:	pop    edi
  423eb3:	ret    
  423eb4:	int3   
  423eb5:	int3   
  423eb6:	int3   
  423eb7:	int3   
  423eb8:	int3   
  423eb9:	int3   
  423eba:	int3   
  423ebb:	int3   
  423ebc:	int3   
  423ebd:	int3   
  423ebe:	int3   
  423ebf:	int3   
  423ec0:	mov    ecx,DWORD PTR [esp+0x4]
  423ec4:	test   ecx,0x3
  423eca:	je     0x423ef0
  423ecc:	mov    al,BYTE PTR [ecx]
  423ece:	add    ecx,0x1
  423ed1:	test   al,al
  423ed3:	je     0x423f23
  423ed5:	test   ecx,0x3
  423edb:	jne    0x423ecc
  423edd:	add    eax,0x0
  423ee2:	lea    esp,[esp+0x0]
  423ee9:	lea    esp,[esp+0x0]
  423ef0:	mov    eax,DWORD PTR [ecx]
  423ef2:	mov    edx,0x7efefeff
  423ef7:	add    edx,eax
  423ef9:	xor    eax,0xffffffff
  423efc:	xor    eax,edx
  423efe:	add    ecx,0x4
  423f01:	test   eax,0x81010100
  423f06:	je     0x423ef0
  423f08:	mov    eax,DWORD PTR [ecx-0x4]
  423f0b:	test   al,al
  423f0d:	je     0x423f41
  423f0f:	test   ah,ah
  423f11:	je     0x423f37
  423f13:	test   eax,0xff0000
  423f18:	je     0x423f2d
  423f1a:	test   eax,0xff000000
  423f1f:	je     0x423f23
  423f21:	jmp    0x423ef0
  423f23:	lea    eax,[ecx-0x1]
  423f26:	mov    ecx,DWORD PTR [esp+0x4]
  423f2a:	sub    eax,ecx
  423f2c:	ret    
  423f2d:	lea    eax,[ecx-0x2]
  423f30:	mov    ecx,DWORD PTR [esp+0x4]
  423f34:	sub    eax,ecx
  423f36:	ret    
  423f37:	lea    eax,[ecx-0x3]
  423f3a:	mov    ecx,DWORD PTR [esp+0x4]
  423f3e:	sub    eax,ecx
  423f40:	ret    
  423f41:	lea    eax,[ecx-0x4]
  423f44:	mov    ecx,DWORD PTR [esp+0x4]
  423f48:	sub    eax,ecx
  423f4a:	ret    
  423f4b:	push   0x8
  423f4d:	push   0x428548
  423f52:	call   0x4238a8
  423f57:	and    DWORD PTR [ebp-0x4],0x0
  423f5b:	push   0x0
  423f5d:	push   0x1
  423f5f:	call   0x425ad2
  423f64:	pop    ecx
  423f65:	pop    ecx
  423f66:	jmp    0x423f6f
  423f68:	xor    eax,eax
  423f6a:	inc    eax
  423f6b:	ret    
  423f6c:	mov    esp,DWORD PTR [ebp-0x18]
  423f6f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f73:	push   0x3
  423f75:	call   DWORD PTR ds:0x42802c
  423f7b:	int3   
  423f7c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f82:	jne    0x423f85
  423f84:	ret    
  423f85:	jmp    0x423f4b
  423f8a:	movzx  eax,BYTE PTR [esp+0x4]
  423f8f:	mov    cl,BYTE PTR [esp+0xc]
  423f93:	test   BYTE PTR [eax+0x45cf21],cl
  423f99:	jne    0x423fb7
  423f9b:	cmp    DWORD PTR [esp+0x8],0x0
  423fa0:	je     0x423fb0
  423fa2:	movzx  eax,WORD PTR [eax*2+0x428942]
  423faa:	and    eax,DWORD PTR [esp+0x8]
  423fae:	jmp    0x423fb2
  423fb0:	xor    eax,eax
  423fb2:	test   eax,eax
  423fb4:	jne    0x423fb7
  423fb6:	ret    
  423fb7:	xor    eax,eax
  423fb9:	inc    eax
  423fba:	ret    
  423fbb:	push   0x4
  423fbd:	push   0x0
  423fbf:	push   DWORD PTR [esp+0xc]
  423fc3:	call   0x423f8a
  423fc8:	add    esp,0xc
  423fcb:	ret    
  423fcc:	sub    eax,0x3a4
  423fd1:	je     0x423ff5
  423fd3:	sub    eax,0x4
  423fd6:	je     0x423fef
  423fd8:	sub    eax,0xd
  423fdb:	je     0x423fe9
  423fdd:	dec    eax
  423fde:	je     0x423fe3
  423fe0:	xor    eax,eax
  423fe2:	ret    
  423fe3:	mov    eax,0x404
  423fe8:	ret    
  423fe9:	mov    eax,0x412
  423fee:	ret    
  423fef:	mov    eax,0x804
  423ff4:	ret    
  423ff5:	mov    eax,0x411
  423ffa:	ret    
  423ffb:	push   edi
  423ffc:	push   0x40
  423ffe:	xor    eax,eax
  424000:	pop    ecx
  424001:	mov    edi,0x45cf20
  424006:	rep stos DWORD PTR es:[edi],eax
  424008:	stos   BYTE PTR es:[edi],al
  424009:	xor    eax,eax
  42400b:	mov    ds:0x45d024,eax
  424010:	mov    ds:0x45cf1c,eax
  424015:	mov    ds:0x45cf14,eax
  42401a:	mov    edi,0x45d030
  42401f:	stos   DWORD PTR es:[edi],eax
  424020:	stos   DWORD PTR es:[edi],eax
  424021:	stos   DWORD PTR es:[edi],eax
  424022:	pop    edi
  424023:	ret    
  424024:	push   ebp
  424025:	mov    ebp,esp
  424027:	sub    esp,0x518
  42402d:	mov    eax,ds:0x45c430
  424032:	xor    eax,DWORD PTR [ebp+0x4]
  424035:	push   esi
  424036:	mov    DWORD PTR [ebp-0x4],eax
  424039:	lea    eax,[ebp-0x18]
  42403c:	push   eax
  42403d:	push   DWORD PTR ds:0x45d024
  424043:	call   DWORD PTR ds:0x4280a4
  424049:	cmp    eax,0x1
  42404c:	mov    esi,0x100
  424051:	jne    0x424164
  424057:	xor    eax,eax
  424059:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424060:	inc    eax
  424061:	cmp    eax,esi
  424063:	jb     0x424059
  424065:	mov    al,BYTE PTR [ebp-0x12]
  424068:	test   al,al
  42406a:	mov    BYTE PTR [ebp-0x118],0x20
  424071:	je     0x4240a9
  424073:	push   ebx
  424074:	lea    edx,[ebp-0x11]
  424077:	push   edi
  424078:	movzx  ecx,BYTE PTR [edx]
  42407b:	movzx  eax,al
  42407e:	cmp    eax,ecx
  424080:	ja     0x42409f
  424082:	sub    ecx,eax
  424084:	inc    ecx
  424085:	mov    ebx,ecx
  424087:	shr    ecx,0x2
  42408a:	lea    edi,[ebp+eax*1-0x118]
  424091:	mov    eax,0x20202020
  424096:	rep stos DWORD PTR es:[edi],eax
  424098:	mov    ecx,ebx
  42409a:	and    ecx,0x3
  42409d:	rep stos BYTE PTR es:[edi],al
  42409f:	inc    edx
  4240a0:	mov    al,BYTE PTR [edx]
  4240a2:	inc    edx
  4240a3:	test   al,al
  4240a5:	jne    0x424078
  4240a7:	pop    edi
  4240a8:	pop    ebx
  4240a9:	push   0x0
  4240ab:	push   DWORD PTR ds:0x45cf14
  4240b1:	lea    eax,[ebp-0x518]
  4240b7:	push   DWORD PTR ds:0x45d024
  4240bd:	push   eax
  4240be:	push   esi
  4240bf:	lea    eax,[ebp-0x118]
  4240c5:	push   eax
  4240c6:	push   0x1
  4240c8:	call   0x425fd8
  4240cd:	push   0x0
  4240cf:	push   DWORD PTR ds:0x45d024
  4240d5:	lea    eax,[ebp-0x218]
  4240db:	push   esi
  4240dc:	push   eax
  4240dd:	push   esi
  4240de:	lea    eax,[ebp-0x118]
  4240e4:	push   eax
  4240e5:	push   esi
  4240e6:	push   DWORD PTR ds:0x45cf14
  4240ec:	call   0x425c1c
  4240f1:	push   0x0
  4240f3:	push   DWORD PTR ds:0x45d024
  4240f9:	lea    eax,[ebp-0x318]
  4240ff:	push   esi
  424100:	push   eax
  424101:	push   esi
  424102:	lea    eax,[ebp-0x118]
  424108:	push   eax
  424109:	push   0x200
  42410e:	push   DWORD PTR ds:0x45cf14
  424114:	call   0x425c1c
  424119:	add    esp,0x5c
  42411c:	xor    eax,eax
  42411e:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  424126:	test   cl,0x1
  424129:	je     0x424141
  42412b:	or     BYTE PTR [eax+0x45cf21],0x10
  424132:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  424139:	mov    BYTE PTR [eax+0x45d040],cl
  42413f:	jmp    0x42415d
  424141:	test   cl,0x2
  424144:	je     0x424156
  424146:	or     BYTE PTR [eax+0x45cf21],0x20
  42414d:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424154:	jmp    0x424139
  424156:	and    BYTE PTR [eax+0x45d040],0x0
  42415d:	inc    eax
  42415e:	cmp    eax,esi
  424160:	jb     0x42411e
  424162:	jmp    0x4241a8
  424164:	xor    eax,eax
  424166:	cmp    eax,0x41
  424169:	jb     0x424184
  42416b:	cmp    eax,0x5a
  42416e:	ja     0x424184
  424170:	or     BYTE PTR [eax+0x45cf21],0x10
  424177:	mov    cl,al
  424179:	add    cl,0x20
  42417c:	mov    BYTE PTR [eax+0x45d040],cl
  424182:	jmp    0x4241a3
  424184:	cmp    eax,0x61
  424187:	jb     0x42419c
  424189:	cmp    eax,0x7a
  42418c:	ja     0x42419c
  42418e:	or     BYTE PTR [eax+0x45cf21],0x20
  424195:	mov    cl,al
  424197:	sub    cl,0x20
  42419a:	jmp    0x42417c
  42419c:	and    BYTE PTR [eax+0x45d040],0x0
  4241a3:	inc    eax
  4241a4:	cmp    eax,esi
  4241a6:	jb     0x424166
  4241a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4241ab:	xor    ecx,DWORD PTR [ebp+0x4]
  4241ae:	pop    esi
  4241af:	call   0x423f7c
  4241b4:	leave  
  4241b5:	ret    
  4241b6:	push   ebp
  4241b7:	mov    ebp,esp
  4241b9:	sub    esp,0x1c
  4241bc:	mov    eax,ds:0x45c430
  4241c1:	xor    eax,DWORD PTR [ebp+0x4]
  4241c4:	push   ebx
  4241c5:	push   esi
  4241c6:	mov    esi,DWORD PTR [ebp+0x8]
  4241c9:	xor    ebx,ebx
  4241cb:	cmp    esi,ebx
  4241cd:	mov    DWORD PTR [ebp-0x4],eax
  4241d0:	push   edi
  4241d1:	je     0x42432b
  4241d7:	xor    edx,edx
  4241d9:	xor    eax,eax
  4241db:	cmp    DWORD PTR [eax+0x45c440],esi
  4241e1:	je     0x424248
  4241e3:	add    eax,0x30
  4241e6:	inc    edx
  4241e7:	cmp    eax,0xf0
  4241ec:	jb     0x4241db
  4241ee:	lea    eax,[ebp-0x1c]
  4241f1:	push   eax
  4241f2:	push   esi
  4241f3:	call   DWORD PTR ds:0x4280a4
  4241f9:	cmp    eax,0x1
  4241fc:	jne    0x424323
  424202:	push   0x40
  424204:	xor    eax,eax
  424206:	cmp    DWORD PTR [ebp-0x1c],0x1
  42420a:	pop    ecx
  42420b:	mov    edi,0x45cf20
  424210:	rep stos DWORD PTR es:[edi],eax
  424212:	stos   BYTE PTR es:[edi],al
  424213:	mov    DWORD PTR ds:0x45d024,esi
  424219:	mov    DWORD PTR ds:0x45cf14,ebx
  42421f:	jbe    0x424311
  424225:	cmp    BYTE PTR [ebp-0x16],0x0
  424229:	je     0x4242e9
  42422f:	lea    ecx,[ebp-0x15]
  424232:	mov    dl,BYTE PTR [ecx]
  424234:	test   dl,dl
  424236:	je     0x4242e9
  42423c:	movzx  eax,BYTE PTR [ecx-0x1]
  424240:	movzx  edx,dl
  424243:	jmp    0x4242d9
  424248:	push   0x40
  42424a:	xor    eax,eax
  42424c:	pop    ecx
  42424d:	mov    edi,0x45cf20
  424252:	rep stos DWORD PTR es:[edi],eax
  424254:	lea    ecx,[edx+edx*2]
  424257:	shl    ecx,0x4
  42425a:	mov    DWORD PTR [ebp-0x8],ebx
  42425d:	stos   BYTE PTR es:[edi],al
  42425e:	lea    ebx,[ecx+0x45c450]
  424264:	mov    al,BYTE PTR [ebx]
  424266:	mov    esi,ebx
  424268:	jmp    0x424293
  42426a:	mov    dl,BYTE PTR [esi+0x1]
  42426d:	test   dl,dl
  42426f:	je     0x424297
  424271:	movzx  eax,al
  424274:	movzx  edi,dl
  424277:	cmp    eax,edi
  424279:	ja     0x42428f
  42427b:	mov    edx,DWORD PTR [ebp-0x8]
  42427e:	mov    dl,BYTE PTR [edx+0x45c438]
  424284:	or     BYTE PTR [eax+0x45cf21],dl
  42428a:	inc    eax
  42428b:	cmp    eax,edi
  42428d:	jbe    0x424284
  42428f:	inc    esi
  424290:	inc    esi
  424291:	mov    al,BYTE PTR [esi]
  424293:	test   al,al
  424295:	jne    0x42426a
  424297:	inc    DWORD PTR [ebp-0x8]
  42429a:	add    ebx,0x8
  42429d:	cmp    DWORD PTR [ebp-0x8],0x4
  4242a1:	jb     0x424264
  4242a3:	mov    eax,DWORD PTR [ebp+0x8]
  4242a6:	mov    ds:0x45d024,eax
  4242ab:	mov    DWORD PTR ds:0x45cf1c,0x1
  4242b5:	call   0x423fcc
  4242ba:	lea    ecx,[ecx+0x45c444]
  4242c0:	mov    esi,ecx
  4242c2:	mov    edi,0x45d030
  4242c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c9:	mov    ds:0x45cf14,eax
  4242ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242cf:	jmp    0x424330
  4242d1:	or     BYTE PTR [eax+0x45cf21],0x4
  4242d8:	inc    eax
  4242d9:	cmp    eax,edx
  4242db:	jbe    0x4242d1
  4242dd:	inc    ecx
  4242de:	inc    ecx
  4242df:	cmp    BYTE PTR [ecx-0x1],0x0
  4242e3:	jne    0x424232
  4242e9:	xor    ecx,ecx
  4242eb:	inc    ecx
  4242ec:	mov    eax,ecx
  4242ee:	or     BYTE PTR [eax+0x45cf21],0x8
  4242f5:	inc    eax
  4242f6:	cmp    eax,0xff
  4242fb:	jb     0x4242ee
  4242fd:	mov    eax,esi
  4242ff:	call   0x423fcc
  424304:	mov    ds:0x45cf14,eax
  424309:	mov    DWORD PTR ds:0x45cf1c,ecx
  42430f:	jmp    0x424317
  424311:	mov    DWORD PTR ds:0x45cf1c,ebx
  424317:	xor    eax,eax
  424319:	mov    edi,0x45d030
  42431e:	stos   DWORD PTR es:[edi],eax
  42431f:	stos   DWORD PTR es:[edi],eax
  424320:	stos   DWORD PTR es:[edi],eax
  424321:	jmp    0x424330
  424323:	cmp    DWORD PTR ds:0x45cd84,ebx
  424329:	je     0x424339
  42432b:	call   0x423ffb
  424330:	call   0x424024
  424335:	xor    eax,eax
  424337:	jmp    0x42433c
  424339:	or     eax,0xffffffff
  42433c:	mov    ecx,DWORD PTR [ebp-0x4]
  42433f:	xor    ecx,DWORD PTR [ebp+0x4]
  424342:	pop    edi
  424343:	pop    esi
  424344:	pop    ebx
  424345:	call   0x423f7c
  42434a:	leave  
  42434b:	ret    
  42434c:	push   0x14
  42434e:	push   0x428558
  424353:	call   0x4238a8
  424358:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42435c:	push   0xd
  42435e:	call   0x423a6f
  424363:	pop    ecx
  424364:	xor    edi,edi
  424366:	mov    DWORD PTR [ebp-0x4],edi
  424369:	mov    DWORD PTR ds:0x45cd84,edi
  42436f:	mov    eax,DWORD PTR [ebp+0x8]
  424372:	cmp    eax,0xfffffffe
  424375:	jne    0x424389
  424377:	mov    DWORD PTR ds:0x45cd84,0x1
  424381:	call   DWORD PTR ds:0x4280a0
  424387:	jmp    0x4243b4
  424389:	cmp    eax,0xfffffffd
  42438c:	jne    0x4243a0
  42438e:	mov    DWORD PTR ds:0x45cd84,0x1
  424398:	call   DWORD PTR ds:0x42809c
  42439e:	jmp    0x4243b4
  4243a0:	cmp    eax,0xfffffffc
  4243a3:	jne    0x4243b4
  4243a5:	mov    DWORD PTR ds:0x45cd84,0x1
  4243af:	mov    eax,ds:0x45cdb4
  4243b4:	mov    DWORD PTR [ebp+0x8],eax
  4243b7:	cmp    eax,DWORD PTR ds:0x45d024
  4243bd:	je     0x42447e
  4243c3:	mov    esi,DWORD PTR ds:0x45cf18
  4243c9:	mov    DWORD PTR [ebp-0x20],esi
  4243cc:	cmp    esi,edi
  4243ce:	je     0x4243d4
  4243d0:	cmp    DWORD PTR [esi],edi
  4243d2:	je     0x4243e4
  4243d4:	push   0x220
  4243d9:	call   0x4245d2
  4243de:	pop    ecx
  4243df:	mov    esi,eax
  4243e1:	mov    DWORD PTR [ebp-0x20],esi
  4243e4:	cmp    esi,edi
  4243e6:	je     0x424467
  4243e8:	push   DWORD PTR [ebp+0x8]
  4243eb:	call   0x4241b6
  4243f0:	pop    ecx
  4243f1:	mov    DWORD PTR [ebp-0x1c],eax
  4243f4:	cmp    eax,edi
  4243f6:	jne    0x424467
  4243f8:	mov    DWORD PTR [esi],edi
  4243fa:	mov    eax,ds:0x45d024
  4243ff:	mov    DWORD PTR [esi+0x4],eax
  424402:	mov    eax,ds:0x45cf1c
  424407:	mov    DWORD PTR [esi+0x8],eax
  42440a:	mov    eax,ds:0x45cf14
  42440f:	mov    DWORD PTR [esi+0xc],eax
  424412:	xor    eax,eax
  424414:	mov    DWORD PTR [ebp-0x24],eax
  424417:	cmp    eax,0x5
  42441a:	jge    0x42442c
  42441c:	mov    cx,WORD PTR [eax*2+0x45d030]
  424424:	mov    WORD PTR [esi+eax*2+0x10],cx
  424429:	inc    eax
  42442a:	jmp    0x424414
  42442c:	xor    eax,eax
  42442e:	mov    DWORD PTR [ebp-0x24],eax
  424431:	cmp    eax,0x101
  424436:	jge    0x424445
  424438:	mov    cl,BYTE PTR [eax+0x45cf20]
  42443e:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  424442:	inc    eax
  424443:	jmp    0x42442e
  424445:	xor    eax,eax
  424447:	mov    DWORD PTR [ebp-0x24],eax
  42444a:	cmp    eax,0x100
  42444f:	jge    0x424461
  424451:	mov    cl,BYTE PTR [eax+0x45d040]
  424457:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42445e:	inc    eax
  42445f:	jmp    0x424447
  424461:	mov    DWORD PTR ds:0x45cf18,esi
  424467:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42446b:	jne    0x424481
  42446d:	cmp    esi,DWORD PTR ds:0x45cf18
  424473:	je     0x424481
  424475:	push   esi
  424476:	call   0x4244ba
  42447b:	pop    ecx
  42447c:	jmp    0x424481
  42447e:	mov    DWORD PTR [ebp-0x1c],edi
  424481:	or     DWORD PTR [ebp-0x4],0xffffffff
  424485:	call   0x424493
  42448a:	mov    eax,DWORD PTR [ebp-0x1c]
  42448d:	call   0x4238e3
  424492:	ret    
  424493:	push   0xd
  424495:	call   0x4239db
  42449a:	pop    ecx
  42449b:	ret    
  42449c:	cmp    DWORD PTR ds:0x45d26c,0x0
  4244a3:	jne    0x4244b7
  4244a5:	push   0xfffffffd
  4244a7:	call   0x42434c
  4244ac:	pop    ecx
  4244ad:	mov    DWORD PTR ds:0x45d26c,0x1
  4244b7:	xor    eax,eax
  4244b9:	ret    
  4244ba:	push   0xc
  4244bc:	push   0x428568
  4244c1:	call   0x4238a8
  4244c6:	mov    esi,DWORD PTR [ebp+0x8]
  4244c9:	test   esi,esi
  4244cb:	je     0x424525
  4244cd:	cmp    DWORD PTR ds:0x45d144,0x3
  4244d4:	jne    0x424516
  4244d6:	push   0x4
  4244d8:	call   0x423a6f
  4244dd:	pop    ecx
  4244de:	and    DWORD PTR [ebp-0x4],0x0
  4244e2:	push   esi
  4244e3:	call   0x424c92
  4244e8:	pop    ecx
  4244e9:	mov    DWORD PTR [ebp-0x1c],eax
  4244ec:	test   eax,eax
  4244ee:	je     0x4244f9
  4244f0:	push   esi
  4244f1:	push   eax
  4244f2:	call   0x424cbd
  4244f7:	pop    ecx
  4244f8:	pop    ecx
  4244f9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244fd:	call   0x42450d
  424502:	cmp    DWORD PTR [ebp-0x1c],0x0
  424506:	jne    0x424525
  424508:	push   DWORD PTR [ebp+0x8]
  42450b:	jmp    0x424517
  42450d:	push   0x4
  42450f:	call   0x4239db
  424514:	pop    ecx
  424515:	ret    
  424516:	push   esi
  424517:	push   0x0
  424519:	push   DWORD PTR ds:0x45d140
  42451f:	call   DWORD PTR ds:0x42808c
  424525:	call   0x4238e3
  42452a:	ret    
  42452b:	push   0xc
  42452d:	push   0x428578
  424532:	call   0x4238a8
  424537:	mov    esi,DWORD PTR [ebp+0x8]
  42453a:	cmp    DWORD PTR ds:0x45d144,0x3
  424541:	jne    0x424571
  424543:	cmp    esi,DWORD PTR ds:0x45cf04
  424549:	ja     0x424571
  42454b:	push   0x4
  42454d:	call   0x423a6f
  424552:	pop    ecx
  424553:	and    DWORD PTR [ebp-0x4],0x0
  424557:	push   esi
  424558:	call   0x425471
  42455d:	pop    ecx
  42455e:	mov    DWORD PTR [ebp-0x1c],eax
  424561:	or     DWORD PTR [ebp-0x4],0xffffffff
  424565:	call   0x42459d
  42456a:	mov    eax,DWORD PTR [ebp-0x1c]
  42456d:	test   eax,eax
  42456f:	jne    0x424594
  424571:	test   esi,esi
  424573:	jne    0x424576
  424575:	inc    esi
  424576:	cmp    DWORD PTR ds:0x45d144,0x1
  42457d:	je     0x424585
  42457f:	add    esi,0xf
  424582:	and    esi,0xfffffff0
  424585:	push   esi
  424586:	push   0x0
  424588:	push   DWORD PTR ds:0x45d140
  42458e:	call   DWORD PTR ds:0x4280a8
  424594:	call   0x4238e3
  424599:	ret    
  42459a:	mov    esi,DWORD PTR [ebp+0x8]
  42459d:	push   0x4
  42459f:	call   0x4239db
  4245a4:	pop    ecx
  4245a5:	ret    
  4245a6:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  4245ab:	ja     0x4245cf
  4245ad:	push   DWORD PTR [esp+0x4]
  4245b1:	call   0x42452b
  4245b6:	test   eax,eax
  4245b8:	pop    ecx
  4245b9:	jne    0x4245d1
  4245bb:	cmp    DWORD PTR [esp+0x8],eax
  4245bf:	je     0x4245d1
  4245c1:	push   DWORD PTR [esp+0x4]
  4245c5:	call   0x426192
  4245ca:	test   eax,eax
  4245cc:	pop    ecx
  4245cd:	jne    0x4245ad
  4245cf:	xor    eax,eax
  4245d1:	ret    
  4245d2:	push   DWORD PTR ds:0x45cdc8
  4245d8:	push   DWORD PTR [esp+0x8]
  4245dc:	call   0x4245a6
  4245e1:	pop    ecx
  4245e2:	pop    ecx
  4245e3:	ret    
  4245e4:	int3   
  4245e5:	int3   
  4245e6:	int3   
  4245e7:	int3   
  4245e8:	int3   
  4245e9:	int3   
  4245ea:	int3   
  4245eb:	int3   
  4245ec:	int3   
  4245ed:	int3   
  4245ee:	int3   
  4245ef:	int3   
  4245f0:	push   ebp
  4245f1:	mov    ebp,esp
  4245f3:	push   edi
  4245f4:	push   esi
  4245f5:	mov    esi,DWORD PTR [ebp+0xc]
  4245f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245fb:	mov    edi,DWORD PTR [ebp+0x8]
  4245fe:	mov    eax,ecx
  424600:	mov    edx,ecx
  424602:	add    eax,esi
  424604:	cmp    edi,esi
  424606:	jbe    0x424610
  424608:	cmp    edi,eax
  42460a:	jb     0x42478c
  424610:	test   edi,0x3
  424616:	jne    0x42462c
  424618:	shr    ecx,0x2
  42461b:	and    edx,0x3
  42461e:	cmp    ecx,0x8
  424621:	jb     0x42464c
  424623:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424625:	jmp    DWORD PTR [edx*4+0x42473c]
  42462c:	mov    eax,edi
  42462e:	mov    edx,0x3
  424633:	sub    ecx,0x4
  424636:	jb     0x424644
  424638:	and    eax,0x3
  42463b:	add    ecx,eax
  42463d:	jmp    DWORD PTR [eax*4+0x424650]
  424644:	jmp    DWORD PTR [ecx*4+0x42474c]
  42464b:	nop
  42464c:	jmp    DWORD PTR [ecx*4+0x4246d0]
  424653:	nop
  424654:	pusha  
  424655:	inc    esi
  424656:	inc    edx
  424657:	add    BYTE PTR [esi+eax*2+0x46b00042],cl
  42465e:	inc    edx
  42465f:	add    BYTE PTR [ebx],ah
  424661:	ror    DWORD PTR [edx-0x75f877fa],1
  424667:	inc    esi
  424668:	add    DWORD PTR [eax+0x468a0147],ecx
  42466e:	add    al,cl
  424670:	jmp    0x289ce77
  424675:	add    esi,0x3
  424678:	add    edi,0x3
  42467b:	cmp    ecx,0x8
  42467e:	jb     0x42464c
  424680:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424682:	jmp    DWORD PTR [edx*4+0x42473c]
  424689:	lea    ecx,[ecx+0x0]
  42468c:	and    edx,ecx
  42468e:	mov    al,BYTE PTR [esi]
  424690:	mov    BYTE PTR [edi],al
  424692:	mov    al,BYTE PTR [esi+0x1]
  424695:	shr    ecx,0x2
  424698:	mov    BYTE PTR [edi+0x1],al
  42469b:	add    esi,0x2
  42469e:	add    edi,0x2
  4246a1:	cmp    ecx,0x8
  4246a4:	jb     0x42464c
  4246a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246a8:	jmp    DWORD PTR [edx*4+0x42473c]
  4246af:	nop
  4246b0:	and    edx,ecx
  4246b2:	mov    al,BYTE PTR [esi]
  4246b4:	mov    BYTE PTR [edi],al
  4246b6:	add    esi,0x1
  4246b9:	shr    ecx,0x2
  4246bc:	add    edi,0x1
  4246bf:	cmp    ecx,0x8
  4246c2:	jb     0x42464c
  4246c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c6:	jmp    DWORD PTR [edx*4+0x42473c]
  4246cd:	lea    ecx,[ecx+0x0]
  4246d0:	xor    eax,DWORD PTR [edi+0x42]
  4246d3:	add    BYTE PTR [eax],ah
  4246d5:	inc    edi
  4246d6:	inc    edx
  4246d7:	add    BYTE PTR [eax],bl
  4246d9:	inc    edi
  4246da:	inc    edx
  4246db:	add    BYTE PTR [eax],dl
  4246dd:	inc    edi
  4246de:	inc    edx
  4246df:	add    BYTE PTR [eax],cl
  4246e1:	inc    edi
  4246e2:	inc    edx
  4246e3:	add    BYTE PTR [eax],al
  4246e5:	inc    edi
  4246e6:	inc    edx
  4246e7:	add    al,bh
  4246e9:	inc    esi
  4246ea:	inc    edx
  4246eb:	add    al,dh
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246f5:	inc    esp
  4246f6:	(bad)  
  4246f7:	in     al,0x8b
  4246f9:	inc    esp
  4246fa:	mov    gs,eax
  4246fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  424700:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  424704:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  424708:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42470c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  424710:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  424714:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  424718:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42471c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  424720:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  424724:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  424728:	lea    eax,[ecx*4+0x0]
  42472f:	add    esi,eax
  424731:	add    edi,eax
  424733:	jmp    DWORD PTR [edx*4+0x42473c]
  42473a:	mov    edi,edi
  42473c:	dec    esp
  42473d:	inc    edi
  42473e:	inc    edx
  42473f:	add    BYTE PTR [edi+eax*2+0x42],dl
  424743:	add    BYTE PTR [eax+0x47],ah
  424746:	inc    edx
  424747:	add    BYTE PTR [edi+eax*2+0x42],dh
  42474b:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424751:	leave  
  424752:	ret    
  424753:	nop
  424754:	mov    al,BYTE PTR [esi]
  424756:	mov    BYTE PTR [edi],al
  424758:	mov    eax,DWORD PTR [ebp+0x8]
  42475b:	pop    esi
  42475c:	pop    edi
  42475d:	leave  
  42475e:	ret    
  42475f:	nop
  424760:	mov    al,BYTE PTR [esi]
  424762:	mov    BYTE PTR [edi],al
  424764:	mov    al,BYTE PTR [esi+0x1]
  424767:	mov    BYTE PTR [edi+0x1],al
  42476a:	mov    eax,DWORD PTR [ebp+0x8]
  42476d:	pop    esi
  42476e:	pop    edi
  42476f:	leave  
  424770:	ret    
  424771:	lea    ecx,[ecx+0x0]
  424774:	mov    al,BYTE PTR [esi]
  424776:	mov    BYTE PTR [edi],al
  424778:	mov    al,BYTE PTR [esi+0x1]
  42477b:	mov    BYTE PTR [edi+0x1],al
  42477e:	mov    al,BYTE PTR [esi+0x2]
  424781:	mov    BYTE PTR [edi+0x2],al
  424784:	mov    eax,DWORD PTR [ebp+0x8]
  424787:	pop    esi
  424788:	pop    edi
  424789:	leave  
  42478a:	ret    
  42478b:	nop
  42478c:	lea    esi,[ecx+esi*1-0x4]
  424790:	lea    edi,[ecx+edi*1-0x4]
  424794:	test   edi,0x3
  42479a:	jne    0x4247c0
  42479c:	shr    ecx,0x2
  42479f:	and    edx,0x3
  4247a2:	cmp    ecx,0x8
  4247a5:	jb     0x4247b4
  4247a7:	std    
  4247a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247aa:	cld    
  4247ab:	jmp    DWORD PTR [edx*4+0x4248d8]
  4247b2:	mov    edi,edi
  4247b4:	neg    ecx
  4247b6:	jmp    DWORD PTR [ecx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    eax,edi
  4247c2:	mov    edx,0x3
  4247c7:	cmp    ecx,0x4
  4247ca:	jb     0x4247d8
  4247cc:	and    eax,0x3
  4247cf:	sub    ecx,eax
  4247d1:	jmp    DWORD PTR [eax*4+0x4247dc]
  4247d8:	jmp    DWORD PTR [ecx*4+0x4248d8]
  4247df:	nop
  4247e0:	in     al,dx
  4247e1:	inc    edi
  4247e2:	inc    edx
  4247e3:	add    BYTE PTR [eax],dl
  4247e5:	dec    eax
  4247e6:	inc    edx
  4247e7:	add    BYTE PTR [eax],bh
  4247e9:	dec    eax
  4247ea:	inc    edx
  4247eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247f1:	mov    BYTE PTR [edi+0x3],al
  4247f4:	sub    esi,0x1
  4247f7:	shr    ecx,0x2
  4247fa:	sub    edi,0x1
  4247fd:	cmp    ecx,0x8
  424800:	jb     0x4247b4
  424802:	std    
  424803:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424805:	cld    
  424806:	jmp    DWORD PTR [edx*4+0x4248d8]
  42480d:	lea    ecx,[ecx+0x0]
  424810:	mov    al,BYTE PTR [esi+0x3]
  424813:	and    edx,ecx
  424815:	mov    BYTE PTR [edi+0x3],al
  424818:	mov    al,BYTE PTR [esi+0x2]
  42481b:	shr    ecx,0x2
  42481e:	mov    BYTE PTR [edi+0x2],al
  424821:	sub    esi,0x2
  424824:	sub    edi,0x2
  424827:	cmp    ecx,0x8
  42482a:	jb     0x4247b4
  42482c:	std    
  42482d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42482f:	cld    
  424830:	jmp    DWORD PTR [edx*4+0x4248d8]
  424837:	nop
  424838:	mov    al,BYTE PTR [esi+0x3]
  42483b:	and    edx,ecx
  42483d:	mov    BYTE PTR [edi+0x3],al
  424840:	mov    al,BYTE PTR [esi+0x2]
  424843:	mov    BYTE PTR [edi+0x2],al
  424846:	mov    al,BYTE PTR [esi+0x1]
  424849:	shr    ecx,0x2
  42484c:	mov    BYTE PTR [edi+0x1],al
  42484f:	sub    esi,0x3
  424852:	sub    edi,0x3
  424855:	cmp    ecx,0x8
  424858:	jb     0x4247b4
  42485e:	std    
  42485f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424861:	cld    
  424862:	jmp    DWORD PTR [edx*4+0x4248d8]
  424869:	lea    ecx,[ecx+0x0]
  42486c:	mov    WORD PTR [eax+0x42],cs
  42486f:	add    BYTE PTR [eax+ecx*2+0x489c0042],dl
  424876:	inc    edx
  424877:	add    BYTE PTR [eax+ecx*2+0x48ac0042],ah
  42487e:	inc    edx
  42487f:	add    BYTE PTR [eax+ecx*2+0x48bc0042],dh
  424886:	inc    edx
  424887:	add    bh,cl
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424891:	inc    esp
  424892:	(bad)  
  424893:	sbb    al,0x8b
  424895:	inc    esp
  424896:	mov    ds,WORD PTR [eax]
  424898:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42489c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  4248a0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  4248a4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  4248a8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  4248ac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  4248b0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  4248b4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  4248b8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  4248bc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  4248c0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  4248c4:	lea    eax,[ecx*4+0x0]
  4248cb:	add    esi,eax
  4248cd:	add    edi,eax
  4248cf:	jmp    DWORD PTR [edx*4+0x4248d8]
  4248d6:	mov    edi,edi
  4248d8:	call   0xf0428b25
  4248dd:	dec    eax
  4248de:	inc    edx
  4248df:	add    BYTE PTR [eax],al
  4248e1:	dec    ecx
  4248e2:	inc    edx
  4248e3:	add    BYTE PTR [ecx+ecx*2],dl
  4248e6:	inc    edx
  4248e7:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4248ed:	leave  
  4248ee:	ret    
  4248ef:	nop
  4248f0:	mov    al,BYTE PTR [esi+0x3]
  4248f3:	mov    BYTE PTR [edi+0x3],al
  4248f6:	mov    eax,DWORD PTR [ebp+0x8]
  4248f9:	pop    esi
  4248fa:	pop    edi
  4248fb:	leave  
  4248fc:	ret    
  4248fd:	lea    ecx,[ecx+0x0]
  424900:	mov    al,BYTE PTR [esi+0x3]
  424903:	mov    BYTE PTR [edi+0x3],al
  424906:	mov    al,BYTE PTR [esi+0x2]
  424909:	mov    BYTE PTR [edi+0x2],al
  42490c:	mov    eax,DWORD PTR [ebp+0x8]
  42490f:	pop    esi
  424910:	pop    edi
  424911:	leave  
  424912:	ret    
  424913:	nop
  424914:	mov    al,BYTE PTR [esi+0x3]
  424917:	mov    BYTE PTR [edi+0x3],al
  42491a:	mov    al,BYTE PTR [esi+0x2]
  42491d:	mov    BYTE PTR [edi+0x2],al
  424920:	mov    al,BYTE PTR [esi+0x1]
  424923:	mov    BYTE PTR [edi+0x1],al
  424926:	mov    eax,DWORD PTR [ebp+0x8]
  424929:	pop    esi
  42492a:	pop    edi
  42492b:	leave  
  42492c:	ret    
  42492d:	push   DWORD PTR [esp+0x4]
  424931:	call   DWORD PTR ds:0x4280ac
  424937:	xor    eax,eax
  424939:	inc    eax
  42493a:	ret    0x8
  42493d:	push   0x10
  42493f:	push   0x4285c0
  424944:	call   0x4238a8
  424949:	mov    eax,ds:0x45cd88
  42494e:	test   eax,eax
  424950:	jne    0x424989
  424952:	cmp    DWORD PTR ds:0x45cac4,0x1
  424959:	je     0x42497f
  42495b:	push   0x4285ac
  424960:	call   DWORD PTR ds:0x428018
  424966:	test   eax,eax
  424968:	je     0x42497f
  42496a:	push   0x428584
  42496f:	push   eax
  424970:	call   DWORD PTR ds:0x42801c
  424976:	mov    ds:0x45cd88,eax
  42497b:	test   eax,eax
  42497d:	jne    0x424989
  42497f:	mov    eax,0x42492d
  424984:	mov    ds:0x45cd88,eax
  424989:	and    DWORD PTR [ebp-0x4],0x0
  42498d:	push   DWORD PTR [ebp+0xc]
  424990:	push   DWORD PTR [ebp+0x8]
  424993:	call   eax
  424995:	mov    DWORD PTR [ebp-0x1c],eax
  424998:	jmp    0x4249be
  42499a:	mov    eax,DWORD PTR [ebp-0x14]
  42499d:	mov    eax,DWORD PTR [eax]
  42499f:	mov    eax,DWORD PTR [eax]
  4249a1:	mov    DWORD PTR [ebp-0x20],eax
  4249a4:	xor    eax,eax
  4249a6:	inc    eax
  4249a7:	ret    
  4249a8:	mov    esp,DWORD PTR [ebp-0x18]
  4249ab:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  4249b2:	jne    0x4249bc
  4249b4:	push   0x8
  4249b6:	call   DWORD PTR ds:0x42806c
  4249bc:	xor    eax,eax
  4249be:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249c2:	call   0x4238e3
  4249c7:	ret    
  4249c8:	push   0x10
  4249ca:	push   0x4285d0
  4249cf:	call   0x4238a8
  4249d4:	mov    esi,DWORD PTR [ebp+0x8]
  4249d7:	imul   esi,DWORD PTR [ebp+0xc]
  4249db:	mov    DWORD PTR [ebp-0x1c],esi
  4249de:	test   esi,esi
  4249e0:	jne    0x4249e3
  4249e2:	inc    esi
  4249e3:	xor    edi,edi
  4249e5:	mov    DWORD PTR [ebp-0x20],edi
  4249e8:	cmp    esi,0xffffffe0
  4249eb:	ja     0x424a52
  4249ed:	cmp    DWORD PTR ds:0x45d144,0x3
  4249f4:	jne    0x424a3d
  4249f6:	add    esi,0xf
  4249f9:	and    esi,0xfffffff0
  4249fc:	mov    DWORD PTR [ebp+0xc],esi
  4249ff:	mov    ebx,DWORD PTR [ebp-0x1c]
  424a02:	cmp    ebx,DWORD PTR ds:0x45cf04
  424a08:	ja     0x424a3d
  424a0a:	push   0x4
  424a0c:	call   0x423a6f
  424a11:	pop    ecx
  424a12:	and    DWORD PTR [ebp-0x4],edi
  424a15:	push   ebx
  424a16:	call   0x425471
  424a1b:	pop    ecx
  424a1c:	mov    DWORD PTR [ebp-0x20],eax
  424a1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a23:	call   0x424a72
  424a28:	mov    edi,DWORD PTR [ebp-0x20]
  424a2b:	test   edi,edi
  424a2d:	je     0x424a41
  424a2f:	push   DWORD PTR [ebp-0x1c]
  424a32:	push   0x0
  424a34:	push   edi
  424a35:	call   0x4261b0
  424a3a:	add    esp,0xc
  424a3d:	test   edi,edi
  424a3f:	jne    0x424a7b
  424a41:	push   esi
  424a42:	push   0x8
  424a44:	push   DWORD PTR ds:0x45d140
  424a4a:	call   DWORD PTR ds:0x4280a8
  424a50:	mov    edi,eax
  424a52:	test   edi,edi
  424a54:	jne    0x424a7b
  424a56:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a5c:	je     0x424a7b
  424a5e:	push   esi
  424a5f:	call   0x426192
  424a64:	pop    ecx
  424a65:	test   eax,eax
  424a67:	jne    0x4249e3
  424a6d:	jmp    0x424a7d
  424a6f:	mov    esi,DWORD PTR [ebp+0xc]
  424a72:	push   0x4
  424a74:	call   0x4239db
  424a79:	pop    ecx
  424a7a:	ret    
  424a7b:	mov    eax,edi
  424a7d:	call   0x4238e3
  424a82:	ret    
  424a83:	push   esi
  424a84:	mov    esi,DWORD PTR [esp+0x8]
  424a88:	mov    eax,DWORD PTR [esi+0x3c]
  424a8b:	push   edi
  424a8c:	xor    edi,edi
  424a8e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a94:	je     0x424af9
  424a96:	cmp    eax,edi
  424a98:	je     0x424af9
  424a9a:	mov    eax,DWORD PTR [esi+0x2c]
  424a9d:	cmp    DWORD PTR [eax],edi
  424a9f:	jne    0x424af9
  424aa1:	mov    eax,DWORD PTR [esi+0x34]
  424aa4:	cmp    eax,edi
  424aa6:	je     0x424ac4
  424aa8:	cmp    DWORD PTR [eax],edi
  424aaa:	jne    0x424ac4
  424aac:	cmp    eax,DWORD PTR ds:0x45cef0
  424ab2:	je     0x424ac4
  424ab4:	push   eax
  424ab5:	call   0x4244ba
  424aba:	push   DWORD PTR [esi+0x3c]
  424abd:	call   0x4263ff
  424ac2:	pop    ecx
  424ac3:	pop    ecx
  424ac4:	mov    eax,DWORD PTR [esi+0x30]
  424ac7:	cmp    eax,edi
  424ac9:	je     0x424ae7
  424acb:	cmp    DWORD PTR [eax],edi
  424acd:	jne    0x424ae7
  424acf:	cmp    eax,DWORD PTR ds:0x45cef4
  424ad5:	je     0x424ae7
  424ad7:	push   eax
  424ad8:	call   0x4244ba
  424add:	push   DWORD PTR [esi+0x3c]
  424ae0:	call   0x4263a0
  424ae5:	pop    ecx
  424ae6:	pop    ecx
  424ae7:	push   DWORD PTR [esi+0x2c]
  424aea:	call   0x4244ba
  424aef:	push   DWORD PTR [esi+0x3c]
  424af2:	call   0x4244ba
  424af7:	pop    ecx
  424af8:	pop    ecx
  424af9:	mov    eax,DWORD PTR [esi+0x40]
  424afc:	cmp    eax,DWORD PTR ds:0x45ceec
  424b02:	je     0x424b1c
  424b04:	cmp    eax,edi
  424b06:	je     0x424b1c
  424b08:	cmp    DWORD PTR [eax],edi
  424b0a:	jne    0x424b1c
  424b0c:	push   eax
  424b0d:	call   0x4244ba
  424b12:	push   DWORD PTR [esi+0x44]
  424b15:	call   0x4244ba
  424b1a:	pop    ecx
  424b1b:	pop    ecx
  424b1c:	mov    eax,DWORD PTR [esi+0x50]
  424b1f:	cmp    eax,DWORD PTR ds:0x45cdd0
  424b25:	je     0x424b43
  424b27:	cmp    eax,edi
  424b29:	je     0x424b43
  424b2b:	cmp    DWORD PTR [eax+0xb4],edi
  424b31:	jne    0x424b43
  424b33:	push   eax
  424b34:	call   0x426210
  424b39:	push   DWORD PTR [esi+0x50]
  424b3c:	call   0x4244ba
  424b41:	pop    ecx
  424b42:	pop    ecx
  424b43:	push   esi
  424b44:	call   0x4244ba
  424b49:	pop    ecx
  424b4a:	pop    edi
  424b4b:	pop    esi
  424b4c:	ret    
  424b4d:	push   esi
  424b4e:	call   0x42375d
  424b53:	mov    esi,eax
  424b55:	mov    eax,DWORD PTR [esi+0x64]
  424b58:	cmp    eax,DWORD PTR ds:0x45c58c
  424b5e:	je     0x424c0a
  424b64:	test   eax,eax
  424b66:	je     0x424b97
  424b68:	mov    ecx,DWORD PTR [eax+0x2c]
  424b6b:	dec    DWORD PTR [eax]
  424b6d:	test   ecx,ecx
  424b6f:	je     0x424b73
  424b71:	dec    DWORD PTR [ecx]
  424b73:	mov    ecx,DWORD PTR [eax+0x34]
  424b76:	test   ecx,ecx
  424b78:	je     0x424b7c
  424b7a:	dec    DWORD PTR [ecx]
  424b7c:	mov    ecx,DWORD PTR [eax+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	dec    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR [eax+0x40]
  424b88:	test   ecx,ecx
  424b8a:	je     0x424b8e
  424b8c:	dec    DWORD PTR [ecx]
  424b8e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b91:	dec    DWORD PTR [ecx+0xb4]
  424b97:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9d:	mov    DWORD PTR [esi+0x64],ecx
  424ba0:	mov    ecx,DWORD PTR ds:0x45c58c
  424ba6:	inc    DWORD PTR [ecx]
  424ba8:	mov    ecx,DWORD PTR ds:0x45c58c
  424bae:	mov    ecx,DWORD PTR [ecx+0x2c]
  424bb1:	test   ecx,ecx
  424bb3:	je     0x424bb7
  424bb5:	inc    DWORD PTR [ecx]
  424bb7:	mov    ecx,DWORD PTR ds:0x45c58c
  424bbd:	mov    ecx,DWORD PTR [ecx+0x34]
  424bc0:	test   ecx,ecx
  424bc2:	je     0x424bc6
  424bc4:	inc    DWORD PTR [ecx]
  424bc6:	mov    ecx,DWORD PTR ds:0x45c58c
  424bcc:	mov    ecx,DWORD PTR [ecx+0x30]
  424bcf:	test   ecx,ecx
  424bd1:	je     0x424bd5
  424bd3:	inc    DWORD PTR [ecx]
  424bd5:	mov    ecx,DWORD PTR ds:0x45c58c
  424bdb:	mov    ecx,DWORD PTR [ecx+0x40]
  424bde:	test   ecx,ecx
  424be0:	je     0x424be4
  424be2:	inc    DWORD PTR [ecx]
  424be4:	mov    ecx,DWORD PTR ds:0x45c58c
  424bea:	mov    ecx,DWORD PTR [ecx+0x4c]
  424bed:	inc    DWORD PTR [ecx+0xb4]
  424bf3:	test   eax,eax
  424bf5:	je     0x424c0a
  424bf7:	cmp    DWORD PTR [eax],0x0
  424bfa:	jne    0x424c0a
  424bfc:	cmp    eax,0x45c538
  424c01:	je     0x424c0a
  424c03:	push   eax
  424c04:	call   0x424a83
  424c09:	pop    ecx
  424c0a:	mov    eax,DWORD PTR [esi+0x64]
  424c0d:	pop    esi
  424c0e:	ret    
  424c0f:	push   0xc
  424c11:	push   0x428760
  424c16:	call   0x4238a8
  424c1b:	push   0xc
  424c1d:	call   0x423a6f
  424c22:	pop    ecx
  424c23:	and    DWORD PTR [ebp-0x4],0x0
  424c27:	call   0x424b4d
  424c2c:	mov    DWORD PTR [ebp-0x1c],eax
  424c2f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424c33:	call   0x424c41
  424c38:	mov    eax,DWORD PTR [ebp-0x1c]
  424c3b:	call   0x4238e3
  424c40:	ret    
  424c41:	push   0xc
  424c43:	call   0x4239db
  424c48:	pop    ecx
  424c49:	ret    
  424c4a:	push   0x140
  424c4f:	push   0x0
  424c51:	push   DWORD PTR ds:0x45d140
  424c57:	call   DWORD PTR ds:0x4280a8
  424c5d:	test   eax,eax
  424c5f:	mov    ds:0x45cf00,eax
  424c64:	jne    0x424c67
  424c66:	ret    
  424c67:	mov    ecx,DWORD PTR [esp+0x4]
  424c6b:	and    DWORD PTR ds:0x45cef8,0x0
  424c72:	and    DWORD PTR ds:0x45cefc,0x0
  424c79:	mov    ds:0x45cf08,eax
  424c7e:	xor    eax,eax
  424c80:	mov    DWORD PTR ds:0x45cf04,ecx
  424c86:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c90:	inc    eax
  424c91:	ret    
  424c92:	mov    eax,ds:0x45cefc
  424c97:	lea    ecx,[eax+eax*4]
  424c9a:	mov    eax,ds:0x45cf00
  424c9f:	lea    ecx,[eax+ecx*4]
  424ca2:	jmp    0x424cb6
  424ca4:	mov    edx,DWORD PTR [esp+0x4]
  424ca8:	sub    edx,DWORD PTR [eax+0xc]
  424cab:	cmp    edx,0x100000
  424cb1:	jb     0x424cbc
  424cb3:	add    eax,0x14
  424cb6:	cmp    eax,ecx
  424cb8:	jb     0x424ca4
  424cba:	xor    eax,eax
  424cbc:	ret    
  424cbd:	push   ebp
  424cbe:	mov    ebp,esp
  424cc0:	sub    esp,0x10
  424cc3:	mov    ecx,DWORD PTR [ebp+0x8]
  424cc6:	mov    eax,DWORD PTR [ecx+0x10]
  424cc9:	push   esi
  424cca:	mov    esi,DWORD PTR [ebp+0xc]
  424ccd:	push   edi
  424cce:	mov    edi,esi
  424cd0:	sub    edi,DWORD PTR [ecx+0xc]
  424cd3:	add    esi,0xfffffffc
  424cd6:	shr    edi,0xf
  424cd9:	mov    ecx,edi
  424cdb:	imul   ecx,ecx,0x204
  424ce1:	lea    ecx,[ecx+eax*1+0x144]
  424ce8:	mov    DWORD PTR [ebp-0x10],ecx
  424ceb:	mov    ecx,DWORD PTR [esi]
  424ced:	dec    ecx
  424cee:	test   cl,0x1
  424cf1:	mov    DWORD PTR [ebp-0x4],ecx
  424cf4:	jne    0x424fd1
  424cfa:	push   ebx
  424cfb:	lea    ebx,[ecx+esi*1]
  424cfe:	mov    edx,DWORD PTR [ebx]
  424d00:	mov    DWORD PTR [ebp-0xc],edx
  424d03:	mov    edx,DWORD PTR [esi-0x4]
  424d06:	mov    DWORD PTR [ebp-0x8],edx
  424d09:	mov    edx,DWORD PTR [ebp-0xc]
  424d0c:	test   dl,0x1
  424d0f:	mov    DWORD PTR [ebp+0xc],ebx
  424d12:	jne    0x424d88
  424d14:	sar    edx,0x4
  424d17:	dec    edx
  424d18:	cmp    edx,0x3f
  424d1b:	jbe    0x424d20
  424d1d:	push   0x3f
  424d1f:	pop    edx
  424d20:	mov    ecx,DWORD PTR [ebx+0x4]
  424d23:	cmp    ecx,DWORD PTR [ebx+0x8]
  424d26:	jne    0x424d6a
  424d28:	cmp    edx,0x20
  424d2b:	mov    ebx,0x80000000
  424d30:	jae    0x424d4b
  424d32:	mov    ecx,edx
  424d34:	shr    ebx,cl
  424d36:	lea    ecx,[edx+eax*1+0x4]
  424d3a:	not    ebx
  424d3c:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424d40:	dec    BYTE PTR [ecx]
  424d42:	jne    0x424d67
  424d44:	mov    ecx,DWORD PTR [ebp+0x8]
  424d47:	and    DWORD PTR [ecx],ebx
  424d49:	jmp    0x424d67
  424d4b:	lea    ecx,[edx-0x20]
  424d4e:	shr    ebx,cl
  424d50:	lea    ecx,[edx+eax*1+0x4]
  424d54:	not    ebx
  424d56:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d5d:	dec    BYTE PTR [ecx]
  424d5f:	jne    0x424d67
  424d61:	mov    ecx,DWORD PTR [ebp+0x8]
  424d64:	and    DWORD PTR [ecx+0x4],ebx
  424d67:	mov    ebx,DWORD PTR [ebp+0xc]
  424d6a:	mov    edx,DWORD PTR [ebx+0x8]
  424d6d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d70:	mov    ecx,DWORD PTR [ebp-0x4]
  424d73:	add    ecx,DWORD PTR [ebp-0xc]
  424d76:	mov    DWORD PTR [edx+0x4],ebx
  424d79:	mov    edx,DWORD PTR [ebp+0xc]
  424d7c:	mov    ebx,DWORD PTR [edx+0x4]
  424d7f:	mov    edx,DWORD PTR [edx+0x8]
  424d82:	mov    DWORD PTR [ebx+0x8],edx
  424d85:	mov    DWORD PTR [ebp-0x4],ecx
  424d88:	mov    edx,ecx
  424d8a:	sar    edx,0x4
  424d8d:	dec    edx
  424d8e:	cmp    edx,0x3f
  424d91:	jbe    0x424d96
  424d93:	push   0x3f
  424d95:	pop    edx
  424d96:	mov    ebx,DWORD PTR [ebp-0x8]
  424d99:	and    ebx,0x1
  424d9c:	mov    DWORD PTR [ebp-0xc],ebx
  424d9f:	jne    0x424e34
  424da5:	sub    esi,DWORD PTR [ebp-0x8]
  424da8:	mov    ebx,DWORD PTR [ebp-0x8]
  424dab:	sar    ebx,0x4
  424dae:	push   0x3f
  424db0:	mov    DWORD PTR [ebp+0xc],esi
  424db3:	dec    ebx
  424db4:	pop    esi
  424db5:	cmp    ebx,esi
  424db7:	jbe    0x424dbb
  424db9:	mov    ebx,esi
  424dbb:	add    ecx,DWORD PTR [ebp-0x8]
  424dbe:	mov    edx,ecx
  424dc0:	sar    edx,0x4
  424dc3:	dec    edx
  424dc4:	cmp    edx,esi
  424dc6:	mov    DWORD PTR [ebp-0x4],ecx
  424dc9:	jbe    0x424dcd
  424dcb:	mov    edx,esi
  424dcd:	cmp    ebx,edx
  424dcf:	je     0x424e2f
  424dd1:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd4:	mov    esi,DWORD PTR [ecx+0x4]
  424dd7:	cmp    esi,DWORD PTR [ecx+0x8]
  424dda:	jne    0x424e17
  424ddc:	cmp    ebx,0x20
  424ddf:	mov    esi,0x80000000
  424de4:	jae    0x424dfd
  424de6:	mov    ecx,ebx
  424de8:	shr    esi,cl
  424dea:	not    esi
  424dec:	and    DWORD PTR [eax+edi*4+0x44],esi
  424df0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424df4:	jne    0x424e17
  424df6:	mov    ecx,DWORD PTR [ebp+0x8]
  424df9:	and    DWORD PTR [ecx],esi
  424dfb:	jmp    0x424e17
  424dfd:	lea    ecx,[ebx-0x20]
  424e00:	shr    esi,cl
  424e02:	not    esi
  424e04:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424e0b:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e0f:	jne    0x424e17
  424e11:	mov    ecx,DWORD PTR [ebp+0x8]
  424e14:	and    DWORD PTR [ecx+0x4],esi
  424e17:	mov    ecx,DWORD PTR [ebp+0xc]
  424e1a:	mov    esi,DWORD PTR [ecx+0x8]
  424e1d:	mov    ecx,DWORD PTR [ecx+0x4]
  424e20:	mov    DWORD PTR [esi+0x4],ecx
  424e23:	mov    ecx,DWORD PTR [ebp+0xc]
  424e26:	mov    esi,DWORD PTR [ecx+0x4]
  424e29:	mov    ecx,DWORD PTR [ecx+0x8]
  424e2c:	mov    DWORD PTR [esi+0x8],ecx
  424e2f:	mov    esi,DWORD PTR [ebp+0xc]
  424e32:	jmp    0x424e37
  424e34:	mov    ebx,DWORD PTR [ebp+0x8]
  424e37:	cmp    DWORD PTR [ebp-0xc],0x0
  424e3b:	jne    0x424e45
  424e3d:	cmp    ebx,edx
  424e3f:	je     0x424ec5
  424e45:	mov    ecx,DWORD PTR [ebp-0x10]
  424e48:	lea    ecx,[ecx+edx*8]
  424e4b:	mov    ebx,DWORD PTR [ecx+0x4]
  424e4e:	mov    DWORD PTR [esi+0x8],ecx
  424e51:	mov    DWORD PTR [esi+0x4],ebx
  424e54:	mov    DWORD PTR [ecx+0x4],esi
  424e57:	mov    ecx,DWORD PTR [esi+0x4]
  424e5a:	mov    DWORD PTR [ecx+0x8],esi
  424e5d:	mov    ecx,DWORD PTR [esi+0x4]
  424e60:	cmp    ecx,DWORD PTR [esi+0x8]
  424e63:	jne    0x424ec5
  424e65:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e69:	mov    BYTE PTR [ebp+0xf],cl
  424e6c:	inc    cl
  424e6e:	cmp    edx,0x20
  424e71:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e75:	jae    0x424e9c
  424e77:	cmp    BYTE PTR [ebp+0xf],0x0
  424e7b:	jne    0x424e8b
  424e7d:	mov    ecx,edx
  424e7f:	mov    ebx,0x80000000
  424e84:	shr    ebx,cl
  424e86:	mov    ecx,DWORD PTR [ebp+0x8]
  424e89:	or     DWORD PTR [ecx],ebx
  424e8b:	mov    ebx,0x80000000
  424e90:	mov    ecx,edx
  424e92:	shr    ebx,cl
  424e94:	lea    eax,[eax+edi*4+0x44]
  424e98:	or     DWORD PTR [eax],ebx
  424e9a:	jmp    0x424ec5
  424e9c:	cmp    BYTE PTR [ebp+0xf],0x0
  424ea0:	jne    0x424eb2
  424ea2:	lea    ecx,[edx-0x20]
  424ea5:	mov    ebx,0x80000000
  424eaa:	shr    ebx,cl
  424eac:	mov    ecx,DWORD PTR [ebp+0x8]
  424eaf:	or     DWORD PTR [ecx+0x4],ebx
  424eb2:	lea    ecx,[edx-0x20]
  424eb5:	mov    edx,0x80000000
  424eba:	shr    edx,cl
  424ebc:	lea    eax,[eax+edi*4+0xc4]
  424ec3:	or     DWORD PTR [eax],edx
  424ec5:	mov    eax,DWORD PTR [ebp-0x4]
  424ec8:	mov    DWORD PTR [esi],eax
  424eca:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424ece:	mov    eax,DWORD PTR [ebp-0x10]
  424ed1:	dec    DWORD PTR [eax]
  424ed3:	jne    0x424fd0
  424ed9:	mov    eax,ds:0x45cef8
  424ede:	test   eax,eax
  424ee0:	je     0x424fc2
  424ee6:	mov    ecx,DWORD PTR ds:0x45cf10
  424eec:	mov    esi,DWORD PTR ds:0x428088
  424ef2:	push   0x4000
  424ef7:	shl    ecx,0xf
  424efa:	add    ecx,DWORD PTR [eax+0xc]
  424efd:	mov    ebx,0x8000
  424f02:	push   ebx
  424f03:	push   ecx
  424f04:	call   esi
  424f06:	mov    ecx,DWORD PTR ds:0x45cf10
  424f0c:	mov    eax,ds:0x45cef8
  424f11:	mov    edx,0x80000000
  424f16:	shr    edx,cl
  424f18:	or     DWORD PTR [eax+0x8],edx
  424f1b:	mov    eax,ds:0x45cef8
  424f20:	mov    eax,DWORD PTR [eax+0x10]
  424f23:	mov    ecx,DWORD PTR ds:0x45cf10
  424f29:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424f31:	mov    eax,ds:0x45cef8
  424f36:	mov    eax,DWORD PTR [eax+0x10]
  424f39:	dec    BYTE PTR [eax+0x43]
  424f3c:	mov    eax,ds:0x45cef8
  424f41:	mov    ecx,DWORD PTR [eax+0x10]
  424f44:	cmp    BYTE PTR [ecx+0x43],0x0
  424f48:	jne    0x424f53
  424f4a:	and    DWORD PTR [eax+0x4],0xfffffffe
  424f4e:	mov    eax,ds:0x45cef8
  424f53:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f57:	jne    0x424fc2
  424f59:	push   ebx
  424f5a:	push   0x0
  424f5c:	push   DWORD PTR [eax+0xc]
  424f5f:	call   esi
  424f61:	mov    eax,ds:0x45cef8
  424f66:	push   DWORD PTR [eax+0x10]
  424f69:	push   0x0
  424f6b:	push   DWORD PTR ds:0x45d140
  424f71:	call   DWORD PTR ds:0x42808c
  424f77:	mov    eax,ds:0x45cefc
  424f7c:	mov    edx,DWORD PTR ds:0x45cf00
  424f82:	lea    eax,[eax+eax*4]
  424f85:	shl    eax,0x2
  424f88:	mov    ecx,eax
  424f8a:	mov    eax,ds:0x45cef8
  424f8f:	sub    ecx,eax
  424f91:	lea    ecx,[ecx+edx*1-0x14]
  424f95:	push   ecx
  424f96:	lea    ecx,[eax+0x14]
  424f99:	push   ecx
  424f9a:	push   eax
  424f9b:	call   0x4267f0
  424fa0:	mov    eax,DWORD PTR [ebp+0x8]
  424fa3:	add    esp,0xc
  424fa6:	dec    DWORD PTR ds:0x45cefc
  424fac:	cmp    eax,DWORD PTR ds:0x45cef8
  424fb2:	jbe    0x424fb8
  424fb4:	sub    DWORD PTR [ebp+0x8],0x14
  424fb8:	mov    eax,ds:0x45cf00
  424fbd:	mov    ds:0x45cf08,eax
  424fc2:	mov    eax,DWORD PTR [ebp+0x8]
  424fc5:	mov    ds:0x45cef8,eax
  424fca:	mov    DWORD PTR ds:0x45cf10,edi
  424fd0:	pop    ebx
  424fd1:	pop    edi
  424fd2:	pop    esi
  424fd3:	leave  
  424fd4:	ret    
  424fd5:	mov    eax,ds:0x45cefc
  424fda:	mov    ecx,DWORD PTR ds:0x45cf0c
  424fe0:	push   edi
  424fe1:	xor    edi,edi
  424fe3:	cmp    eax,ecx
  424fe5:	jne    0x42501b
  424fe7:	lea    eax,[ecx+ecx*4+0x50]
  424feb:	shl    eax,0x2
  424fee:	push   eax
  424fef:	push   DWORD PTR ds:0x45cf00
  424ff5:	push   edi
  424ff6:	push   DWORD PTR ds:0x45d140
  424ffc:	call   DWORD PTR ds:0x4280b4
  425002:	cmp    eax,edi
  425004:	jne    0x42500a
  425006:	xor    eax,eax
  425008:	pop    edi
  425009:	ret    
  42500a:	add    DWORD PTR ds:0x45cf0c,0x10
  425011:	mov    ds:0x45cf00,eax
  425016:	mov    eax,ds:0x45cefc
  42501b:	mov    ecx,DWORD PTR ds:0x45cf00
  425021:	push   esi
  425022:	push   0x41c4
  425027:	push   0x8
  425029:	push   DWORD PTR ds:0x45d140
  42502f:	lea    eax,[eax+eax*4]
  425032:	lea    esi,[ecx+eax*4]
  425035:	call   DWORD PTR ds:0x4280a8
  42503b:	cmp    eax,edi
  42503d:	mov    DWORD PTR [esi+0x10],eax
  425040:	jne    0x425046
  425042:	xor    eax,eax
  425044:	jmp    0x425089
  425046:	push   0x4
  425048:	push   0x2000
  42504d:	push   0x100000
  425052:	push   edi
  425053:	call   DWORD PTR ds:0x4280b0
  425059:	cmp    eax,edi
  42505b:	mov    DWORD PTR [esi+0xc],eax
  42505e:	jne    0x425072
  425060:	push   DWORD PTR [esi+0x10]
  425063:	push   edi
  425064:	push   DWORD PTR ds:0x45d140
  42506a:	call   DWORD PTR ds:0x42808c
  425070:	jmp    0x425042
  425072:	or     DWORD PTR [esi+0x8],0xffffffff
  425076:	mov    DWORD PTR [esi],edi
  425078:	mov    DWORD PTR [esi+0x4],edi
  42507b:	inc    DWORD PTR ds:0x45cefc
  425081:	mov    eax,DWORD PTR [esi+0x10]
  425084:	or     DWORD PTR [eax],0xffffffff
  425087:	mov    eax,esi
  425089:	pop    esi
  42508a:	pop    edi
  42508b:	ret    
  42508c:	push   ebp
  42508d:	mov    ebp,esp
  42508f:	push   ecx
  425090:	push   ecx
  425091:	mov    ecx,DWORD PTR [ebp+0x8]
  425094:	mov    eax,DWORD PTR [ecx+0x8]
  425097:	push   ebx
  425098:	push   esi
  425099:	mov    esi,DWORD PTR [ecx+0x10]
  42509c:	push   edi
  42509d:	xor    ebx,ebx
  42509f:	jmp    0x4250a4
  4250a1:	shl    eax,1
  4250a3:	inc    ebx
  4250a4:	test   eax,eax
  4250a6:	jge    0x4250a1
  4250a8:	mov    eax,ebx
  4250aa:	imul   eax,eax,0x204
  4250b0:	lea    eax,[eax+esi*1+0x144]
  4250b7:	push   0x3f
  4250b9:	mov    DWORD PTR [ebp-0x8],eax
  4250bc:	pop    edx
  4250bd:	mov    DWORD PTR [eax+0x8],eax
  4250c0:	mov    DWORD PTR [eax+0x4],eax
  4250c3:	add    eax,0x8
  4250c6:	dec    edx
  4250c7:	jne    0x4250bd
  4250c9:	push   0x4
  4250cb:	mov    edi,ebx
  4250cd:	push   0x1000
  4250d2:	shl    edi,0xf
  4250d5:	add    edi,DWORD PTR [ecx+0xc]
  4250d8:	push   0x8000
  4250dd:	push   edi
  4250de:	call   DWORD PTR ds:0x4280b0
  4250e4:	test   eax,eax
  4250e6:	jne    0x4250f0
  4250e8:	or     eax,0xffffffff
  4250eb:	jmp    0x42518d
  4250f0:	lea    edx,[edi+0x7000]
  4250f6:	cmp    edi,edx
  4250f8:	mov    DWORD PTR [ebp-0x4],edx
  4250fb:	ja     0x425140
  4250fd:	mov    ecx,edx
  4250ff:	sub    ecx,edi
  425101:	shr    ecx,0xc
  425104:	lea    eax,[edi+0x10]
  425107:	inc    ecx
  425108:	or     DWORD PTR [eax-0x8],0xffffffff
  42510c:	or     DWORD PTR [eax+0xfec],0xffffffff
  425113:	lea    edx,[eax+0xffc]
  425119:	mov    DWORD PTR [eax],edx
  42511b:	lea    edx,[eax-0x1004]
  425121:	mov    DWORD PTR [eax-0x4],0xff0
  425128:	mov    DWORD PTR [eax+0x4],edx
  42512b:	mov    DWORD PTR [eax+0xfe8],0xff0
  425135:	add    eax,0x1000
  42513a:	dec    ecx
  42513b:	jne    0x425108
  42513d:	mov    edx,DWORD PTR [ebp-0x4]
  425140:	mov    eax,DWORD PTR [ebp-0x8]
  425143:	add    eax,0x1f8
  425148:	lea    ecx,[edi+0xc]
  42514b:	mov    DWORD PTR [eax+0x4],ecx
  42514e:	mov    DWORD PTR [ecx+0x8],eax
  425151:	lea    ecx,[edx+0xc]
  425154:	mov    DWORD PTR [eax+0x8],ecx
  425157:	mov    DWORD PTR [ecx+0x4],eax
  42515a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42515f:	xor    edi,edi
  425161:	inc    edi
  425162:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425169:	mov    al,BYTE PTR [esi+0x43]
  42516c:	mov    cl,al
  42516e:	inc    cl
  425170:	test   al,al
  425172:	mov    eax,DWORD PTR [ebp+0x8]
  425175:	mov    BYTE PTR [esi+0x43],cl
  425178:	jne    0x42517d
  42517a:	or     DWORD PTR [eax+0x4],edi
  42517d:	mov    edx,0x80000000
  425182:	mov    ecx,ebx
  425184:	shr    edx,cl
  425186:	not    edx
  425188:	and    DWORD PTR [eax+0x8],edx
  42518b:	mov    eax,ebx
  42518d:	pop    edi
  42518e:	pop    esi
  42518f:	pop    ebx
  425190:	leave  
  425191:	ret    
  425192:	push   ebp
  425193:	mov    ebp,esp
  425195:	sub    esp,0xc
  425198:	mov    ecx,DWORD PTR [ebp+0x8]
  42519b:	mov    eax,DWORD PTR [ecx+0x10]
  42519e:	push   ebx
  42519f:	push   esi
  4251a0:	mov    esi,DWORD PTR [ebp+0x10]
  4251a3:	push   edi
  4251a4:	mov    edi,DWORD PTR [ebp+0xc]
  4251a7:	mov    edx,edi
  4251a9:	sub    edx,DWORD PTR [ecx+0xc]
  4251ac:	add    esi,0x17
  4251af:	shr    edx,0xf
  4251b2:	mov    ecx,edx
  4251b4:	imul   ecx,ecx,0x204
  4251ba:	lea    ecx,[ecx+eax*1+0x144]
  4251c1:	mov    DWORD PTR [ebp-0xc],ecx
  4251c4:	mov    ecx,DWORD PTR [edi-0x4]
  4251c7:	and    esi,0xfffffff0
  4251ca:	dec    ecx
  4251cb:	cmp    esi,ecx
  4251cd:	lea    edi,[ecx+edi*1-0x4]
  4251d1:	mov    ebx,DWORD PTR [edi]
  4251d3:	mov    DWORD PTR [ebp+0x10],ecx
  4251d6:	mov    DWORD PTR [ebp-0x4],ebx
  4251d9:	jle    0x425334
  4251df:	test   bl,0x1
  4251e2:	jne    0x42532d
  4251e8:	add    ebx,ecx
  4251ea:	cmp    esi,ebx
  4251ec:	jg     0x42532d
  4251f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251f5:	sar    ecx,0x4
  4251f8:	dec    ecx
  4251f9:	cmp    ecx,0x3f
  4251fc:	mov    DWORD PTR [ebp-0x8],ecx
  4251ff:	jbe    0x425207
  425201:	push   0x3f
  425203:	pop    ecx
  425204:	mov    DWORD PTR [ebp-0x8],ecx
  425207:	mov    ebx,DWORD PTR [edi+0x4]
  42520a:	cmp    ebx,DWORD PTR [edi+0x8]
  42520d:	jne    0x425252
  42520f:	cmp    ecx,0x20
  425212:	mov    ebx,0x80000000
  425217:	jae    0x425233
  425219:	shr    ebx,cl
  42521b:	mov    ecx,DWORD PTR [ebp-0x8]
  42521e:	lea    ecx,[ecx+eax*1+0x4]
  425222:	not    ebx
  425224:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425228:	dec    BYTE PTR [ecx]
  42522a:	jne    0x425252
  42522c:	mov    ecx,DWORD PTR [ebp+0x8]
  42522f:	and    DWORD PTR [ecx],ebx
  425231:	jmp    0x425252
  425233:	add    ecx,0xffffffe0
  425236:	shr    ebx,cl
  425238:	mov    ecx,DWORD PTR [ebp-0x8]
  42523b:	lea    ecx,[ecx+eax*1+0x4]
  42523f:	not    ebx
  425241:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425248:	dec    BYTE PTR [ecx]
  42524a:	jne    0x425252
  42524c:	mov    ecx,DWORD PTR [ebp+0x8]
  42524f:	and    DWORD PTR [ecx+0x4],ebx
  425252:	mov    ecx,DWORD PTR [edi+0x8]
  425255:	mov    ebx,DWORD PTR [edi+0x4]
  425258:	mov    DWORD PTR [ecx+0x4],ebx
  42525b:	mov    ecx,DWORD PTR [edi+0x4]
  42525e:	mov    edi,DWORD PTR [edi+0x8]
  425261:	mov    DWORD PTR [ecx+0x8],edi
  425264:	mov    ecx,DWORD PTR [ebp+0x10]
  425267:	sub    ecx,esi
  425269:	add    DWORD PTR [ebp-0x4],ecx
  42526c:	cmp    DWORD PTR [ebp-0x4],0x0
  425270:	jle    0x42531b
  425276:	mov    edi,DWORD PTR [ebp-0x4]
  425279:	mov    ecx,DWORD PTR [ebp+0xc]
  42527c:	sar    edi,0x4
  42527f:	dec    edi
  425280:	cmp    edi,0x3f
  425283:	lea    ecx,[ecx+esi*1-0x4]
  425287:	jbe    0x42528c
  425289:	push   0x3f
  42528b:	pop    edi
  42528c:	mov    ebx,DWORD PTR [ebp-0xc]
  42528f:	lea    ebx,[ebx+edi*8]
  425292:	mov    DWORD PTR [ebp+0x10],ebx
  425295:	mov    ebx,DWORD PTR [ebx+0x4]
  425298:	mov    DWORD PTR [ecx+0x4],ebx
  42529b:	mov    ebx,DWORD PTR [ebp+0x10]
  42529e:	mov    DWORD PTR [ecx+0x8],ebx
  4252a1:	mov    DWORD PTR [ebx+0x4],ecx
  4252a4:	mov    ebx,DWORD PTR [ecx+0x4]
  4252a7:	mov    DWORD PTR [ebx+0x8],ecx
  4252aa:	mov    ebx,DWORD PTR [ecx+0x4]
  4252ad:	cmp    ebx,DWORD PTR [ecx+0x8]
  4252b0:	jne    0x425309
  4252b2:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  4252b6:	mov    BYTE PTR [ebp+0x13],cl
  4252b9:	inc    cl
  4252bb:	cmp    edi,0x20
  4252be:	mov    BYTE PTR [edi+eax*1+0x4],cl
  4252c2:	jae    0x4252e0
  4252c4:	cmp    BYTE PTR [ebp+0x13],0x0
  4252c8:	jne    0x4252d8
  4252ca:	mov    ecx,edi
  4252cc:	mov    ebx,0x80000000
  4252d1:	shr    ebx,cl
  4252d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4252d6:	or     DWORD PTR [ecx],ebx
  4252d8:	lea    eax,[eax+edx*4+0x44]
  4252dc:	mov    ecx,edi
  4252de:	jmp    0x425300
  4252e0:	cmp    BYTE PTR [ebp+0x13],0x0
  4252e4:	jne    0x4252f6
  4252e6:	lea    ecx,[edi-0x20]
  4252e9:	mov    ebx,0x80000000
  4252ee:	shr    ebx,cl
  4252f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252f3:	or     DWORD PTR [ecx+0x4],ebx
  4252f6:	lea    eax,[eax+edx*4+0xc4]
  4252fd:	lea    ecx,[edi-0x20]
  425300:	mov    edx,0x80000000
  425305:	shr    edx,cl
  425307:	or     DWORD PTR [eax],edx
  425309:	mov    edx,DWORD PTR [ebp+0xc]
  42530c:	mov    ecx,DWORD PTR [ebp-0x4]
  42530f:	lea    eax,[edx+esi*1-0x4]
  425313:	mov    DWORD PTR [eax],ecx
  425315:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  425319:	jmp    0x42531e
  42531b:	mov    edx,DWORD PTR [ebp+0xc]
  42531e:	lea    eax,[esi+0x1]
  425321:	mov    DWORD PTR [edx-0x4],eax
  425324:	mov    DWORD PTR [edx+esi*1-0x8],eax
  425328:	jmp    0x425469
  42532d:	xor    eax,eax
  42532f:	jmp    0x42546c
  425334:	jge    0x425469
  42533a:	mov    ebx,DWORD PTR [ebp+0xc]
  42533d:	sub    DWORD PTR [ebp+0x10],esi
  425340:	lea    ecx,[esi+0x1]
  425343:	mov    DWORD PTR [ebx-0x4],ecx
  425346:	lea    ebx,[ebx+esi*1-0x4]
  42534a:	mov    esi,DWORD PTR [ebp+0x10]
  42534d:	sar    esi,0x4
  425350:	dec    esi
  425351:	cmp    esi,0x3f
  425354:	mov    DWORD PTR [ebp+0xc],ebx
  425357:	mov    DWORD PTR [ebx-0x4],ecx
  42535a:	jbe    0x42535f
  42535c:	push   0x3f
  42535e:	pop    esi
  42535f:	test   BYTE PTR [ebp-0x4],0x1
  425363:	jne    0x4253e9
  425369:	mov    esi,DWORD PTR [ebp-0x4]
  42536c:	sar    esi,0x4
  42536f:	dec    esi
  425370:	cmp    esi,0x3f
  425373:	jbe    0x425378
  425375:	push   0x3f
  425377:	pop    esi
  425378:	mov    ecx,DWORD PTR [edi+0x4]
  42537b:	cmp    ecx,DWORD PTR [edi+0x8]
  42537e:	jne    0x4253c2
  425380:	cmp    esi,0x20
  425383:	mov    ebx,0x80000000
  425388:	jae    0x4253a3
  42538a:	mov    ecx,esi
  42538c:	shr    ebx,cl
  42538e:	lea    esi,[esi+eax*1+0x4]
  425392:	not    ebx
  425394:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425398:	dec    BYTE PTR [esi]
  42539a:	jne    0x4253bf
  42539c:	mov    ecx,DWORD PTR [ebp+0x8]
  42539f:	and    DWORD PTR [ecx],ebx
  4253a1:	jmp    0x4253bf
  4253a3:	lea    ecx,[esi-0x20]
  4253a6:	shr    ebx,cl
  4253a8:	lea    ecx,[esi+eax*1+0x4]
  4253ac:	not    ebx
  4253ae:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4253b5:	dec    BYTE PTR [ecx]
  4253b7:	jne    0x4253bf
  4253b9:	mov    ecx,DWORD PTR [ebp+0x8]
  4253bc:	and    DWORD PTR [ecx+0x4],ebx
  4253bf:	mov    ebx,DWORD PTR [ebp+0xc]
  4253c2:	mov    ecx,DWORD PTR [edi+0x8]
  4253c5:	mov    esi,DWORD PTR [edi+0x4]
  4253c8:	mov    DWORD PTR [ecx+0x4],esi
  4253cb:	mov    esi,DWORD PTR [edi+0x8]
  4253ce:	mov    ecx,DWORD PTR [edi+0x4]
  4253d1:	mov    DWORD PTR [ecx+0x8],esi
  4253d4:	mov    esi,DWORD PTR [ebp+0x10]
  4253d7:	add    esi,DWORD PTR [ebp-0x4]
  4253da:	mov    DWORD PTR [ebp+0x10],esi
  4253dd:	sar    esi,0x4
  4253e0:	dec    esi
  4253e1:	cmp    esi,0x3f
  4253e4:	jbe    0x4253e9
  4253e6:	push   0x3f
  4253e8:	pop    esi
  4253e9:	mov    ecx,DWORD PTR [ebp-0xc]
  4253ec:	lea    ecx,[ecx+esi*8]
  4253ef:	mov    edi,DWORD PTR [ecx+0x4]
  4253f2:	mov    DWORD PTR [ebx+0x8],ecx
  4253f5:	mov    DWORD PTR [ebx+0x4],edi
  4253f8:	mov    DWORD PTR [ecx+0x4],ebx
  4253fb:	mov    ecx,DWORD PTR [ebx+0x4]
  4253fe:	mov    DWORD PTR [ecx+0x8],ebx
  425401:	mov    ecx,DWORD PTR [ebx+0x4]
  425404:	cmp    ecx,DWORD PTR [ebx+0x8]
  425407:	jne    0x425460
  425409:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42540d:	mov    BYTE PTR [ebp+0xf],cl
  425410:	inc    cl
  425412:	cmp    esi,0x20
  425415:	mov    BYTE PTR [esi+eax*1+0x4],cl
  425419:	jae    0x425437
  42541b:	cmp    BYTE PTR [ebp+0xf],0x0
  42541f:	jne    0x42542f
  425421:	mov    ecx,esi
  425423:	mov    edi,0x80000000
  425428:	shr    edi,cl
  42542a:	mov    ecx,DWORD PTR [ebp+0x8]
  42542d:	or     DWORD PTR [ecx],edi
  42542f:	lea    eax,[eax+edx*4+0x44]
  425433:	mov    ecx,esi
  425435:	jmp    0x425457
  425437:	cmp    BYTE PTR [ebp+0xf],0x0
  42543b:	jne    0x42544d
  42543d:	lea    ecx,[esi-0x20]
  425440:	mov    edi,0x80000000
  425445:	shr    edi,cl
  425447:	mov    ecx,DWORD PTR [ebp+0x8]
  42544a:	or     DWORD PTR [ecx+0x4],edi
  42544d:	lea    eax,[eax+edx*4+0xc4]
  425454:	lea    ecx,[esi-0x20]
  425457:	mov    edx,0x80000000
  42545c:	shr    edx,cl
  42545e:	or     DWORD PTR [eax],edx
  425460:	mov    eax,DWORD PTR [ebp+0x10]
  425463:	mov    DWORD PTR [ebx],eax
  425465:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425469:	xor    eax,eax
  42546b:	inc    eax
  42546c:	pop    edi
  42546d:	pop    esi
  42546e:	pop    ebx
  42546f:	leave  
  425470:	ret    
  425471:	push   ebp
  425472:	mov    ebp,esp
  425474:	sub    esp,0x14
  425477:	mov    ecx,DWORD PTR [ebp+0x8]
  42547a:	mov    eax,ds:0x45cefc
  42547f:	mov    edx,DWORD PTR ds:0x45cf00
  425485:	add    ecx,0x17
  425488:	and    ecx,0xfffffff0
  42548b:	push   ebx
  42548c:	mov    DWORD PTR [ebp-0x10],ecx
  42548f:	sar    ecx,0x4
  425492:	push   esi
  425493:	lea    eax,[eax+eax*4]
  425496:	push   edi
  425497:	dec    ecx
  425498:	cmp    ecx,0x20
  42549b:	lea    edi,[edx+eax*4]
  42549e:	mov    DWORD PTR [ebp-0x4],edi
  4254a1:	jge    0x4254ae
  4254a3:	or     esi,0xffffffff
  4254a6:	shr    esi,cl
  4254a8:	or     DWORD PTR [ebp-0x8],0xffffffff
  4254ac:	jmp    0x4254bb
  4254ae:	add    ecx,0xffffffe0
  4254b1:	or     eax,0xffffffff
  4254b4:	xor    esi,esi
  4254b6:	shr    eax,cl
  4254b8:	mov    DWORD PTR [ebp-0x8],eax
  4254bb:	mov    eax,ds:0x45cf08
  4254c0:	mov    ebx,eax
  4254c2:	mov    DWORD PTR [ebp-0xc],esi
  4254c5:	cmp    ebx,edi
  4254c7:	jmp    0x4254dd
  4254c9:	mov    ecx,DWORD PTR [ebx+0x4]
  4254cc:	mov    edi,DWORD PTR [ebx]
  4254ce:	and    ecx,DWORD PTR [ebp-0x8]
  4254d1:	and    edi,esi
  4254d3:	or     ecx,edi
  4254d5:	jne    0x4254e2
  4254d7:	add    ebx,0x14
  4254da:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254dd:	mov    DWORD PTR [ebp+0x8],ebx
  4254e0:	jb     0x4254c9
  4254e2:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254e5:	jne    0x42550b
  4254e7:	mov    ebx,edx
  4254e9:	jmp    0x4254fc
  4254eb:	mov    ecx,DWORD PTR [ebx+0x4]
  4254ee:	mov    edi,DWORD PTR [ebx]
  4254f0:	and    ecx,DWORD PTR [ebp-0x8]
  4254f3:	and    edi,esi
  4254f5:	or     ecx,edi
  4254f7:	jne    0x425503
  4254f9:	add    ebx,0x14
  4254fc:	cmp    ebx,eax
  4254fe:	mov    DWORD PTR [ebp+0x8],ebx
  425501:	jb     0x4254eb
  425503:	cmp    ebx,eax
  425505:	je     0x42559f
  42550b:	mov    DWORD PTR ds:0x45cf08,ebx
  425511:	mov    eax,DWORD PTR [ebx+0x10]
  425514:	mov    edx,DWORD PTR [eax]
  425516:	cmp    edx,0xffffffff
  425519:	mov    DWORD PTR [ebp-0x4],edx
  42551c:	je     0x425532
  42551e:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  425525:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  425529:	and    ecx,DWORD PTR [ebp-0x8]
  42552c:	and    edi,esi
  42552e:	or     ecx,edi
  425530:	jne    0x425568
  425532:	mov    edx,DWORD PTR [eax+0xc4]
  425538:	and    edx,DWORD PTR [ebp-0x8]
  42553b:	and    DWORD PTR [ebp-0x4],0x0
  42553f:	lea    ecx,[eax+0x44]
  425542:	mov    esi,DWORD PTR [ecx]
  425544:	and    esi,DWORD PTR [ebp-0xc]
  425547:	or     edx,esi
  425549:	mov    esi,DWORD PTR [ebp-0xc]
  42554c:	jne    0x425565
  42554e:	mov    edx,DWORD PTR [ecx+0x84]
  425554:	and    edx,DWORD PTR [ebp-0x8]
  425557:	inc    DWORD PTR [ebp-0x4]
  42555a:	add    ecx,0x4
  42555d:	mov    edi,DWORD PTR [ecx]
  42555f:	and    edi,esi
  425561:	or     edx,edi
  425563:	je     0x42554e
  425565:	mov    edx,DWORD PTR [ebp-0x4]
  425568:	mov    ecx,edx
  42556a:	imul   ecx,ecx,0x204
  425570:	lea    ecx,[ecx+eax*1+0x144]
  425577:	mov    DWORD PTR [ebp-0xc],ecx
  42557a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42557e:	xor    edi,edi
  425580:	and    ecx,esi
  425582:	jne    0x4255f1
  425584:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42558b:	and    ecx,DWORD PTR [ebp-0x8]
  42558e:	push   0x20
  425590:	pop    edi
  425591:	jmp    0x4255f1
  425593:	cmp    DWORD PTR [ebx+0x8],0x0
  425597:	jne    0x4255a4
  425599:	add    ebx,0x14
  42559c:	mov    DWORD PTR [ebp+0x8],ebx
  42559f:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a2:	jb     0x425593
  4255a4:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a7:	jne    0x4255cf
  4255a9:	mov    ebx,edx
  4255ab:	jmp    0x4255b6
  4255ad:	cmp    DWORD PTR [ebx+0x8],0x0
  4255b1:	jne    0x4255bd
  4255b3:	add    ebx,0x14
  4255b6:	cmp    ebx,eax
  4255b8:	mov    DWORD PTR [ebp+0x8],ebx
  4255bb:	jb     0x4255ad
  4255bd:	cmp    ebx,eax
  4255bf:	jne    0x4255cf
  4255c1:	call   0x424fd5
  4255c6:	mov    ebx,eax
  4255c8:	test   ebx,ebx
  4255ca:	mov    DWORD PTR [ebp+0x8],ebx
  4255cd:	je     0x4255e7
  4255cf:	push   ebx
  4255d0:	call   0x42508c
  4255d5:	pop    ecx
  4255d6:	mov    ecx,DWORD PTR [ebx+0x10]
  4255d9:	mov    DWORD PTR [ecx],eax
  4255db:	mov    eax,DWORD PTR [ebx+0x10]
  4255de:	cmp    DWORD PTR [eax],0xffffffff
  4255e1:	jne    0x42550b
  4255e7:	xor    eax,eax
  4255e9:	jmp    0x425768
  4255ee:	shl    ecx,1
  4255f0:	inc    edi
  4255f1:	test   ecx,ecx
  4255f3:	jge    0x4255ee
  4255f5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255f8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255fc:	mov    ecx,DWORD PTR [edx]
  4255fe:	sub    ecx,DWORD PTR [ebp-0x10]
  425601:	mov    esi,ecx
  425603:	sar    esi,0x4
  425606:	dec    esi
  425607:	cmp    esi,0x3f
  42560a:	mov    DWORD PTR [ebp-0x8],ecx
  42560d:	jle    0x425612
  42560f:	push   0x3f
  425611:	pop    esi
  425612:	cmp    esi,edi
  425614:	je     0x42571b
  42561a:	mov    ecx,DWORD PTR [edx+0x4]
  42561d:	cmp    ecx,DWORD PTR [edx+0x8]
  425620:	jne    0x42567e
  425622:	cmp    edi,0x20
  425625:	mov    ebx,0x80000000
  42562a:	jge    0x425652
  42562c:	mov    ecx,edi
  42562e:	shr    ebx,cl
  425630:	mov    ecx,DWORD PTR [ebp-0x4]
  425633:	lea    edi,[eax+edi*1+0x4]
  425637:	not    ebx
  425639:	mov    DWORD PTR [ebp-0x14],ebx
  42563c:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  425640:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  425644:	dec    BYTE PTR [edi]
  425646:	jne    0x42567b
  425648:	mov    ecx,DWORD PTR [ebp-0x14]
  42564b:	mov    ebx,DWORD PTR [ebp+0x8]
  42564e:	and    DWORD PTR [ebx],ecx
  425650:	jmp    0x42567e
  425652:	lea    ecx,[edi-0x20]
  425655:	shr    ebx,cl
  425657:	mov    ecx,DWORD PTR [ebp-0x4]
  42565a:	lea    ecx,[eax+ecx*4+0xc4]
  425661:	lea    edi,[eax+edi*1+0x4]
  425665:	not    ebx
  425667:	and    DWORD PTR [ecx],ebx
  425669:	dec    BYTE PTR [edi]
  42566b:	mov    DWORD PTR [ebp-0x14],ebx
  42566e:	jne    0x42567b
  425670:	mov    ebx,DWORD PTR [ebp+0x8]
  425673:	mov    ecx,DWORD PTR [ebp-0x14]
  425676:	and    DWORD PTR [ebx+0x4],ecx
  425679:	jmp    0x42567e
  42567b:	mov    ebx,DWORD PTR [ebp+0x8]
  42567e:	cmp    DWORD PTR [ebp-0x8],0x0
  425682:	mov    ecx,DWORD PTR [edx+0x8]
  425685:	mov    edi,DWORD PTR [edx+0x4]
  425688:	mov    DWORD PTR [ecx+0x4],edi
  42568b:	mov    ecx,DWORD PTR [edx+0x4]
  42568e:	mov    edi,DWORD PTR [edx+0x8]
  425691:	mov    DWORD PTR [ecx+0x8],edi
  425694:	je     0x425727
  42569a:	mov    ecx,DWORD PTR [ebp-0xc]
  42569d:	lea    ecx,[ecx+esi*8]
  4256a0:	mov    edi,DWORD PTR [ecx+0x4]
  4256a3:	mov    DWORD PTR [edx+0x8],ecx
  4256a6:	mov    DWORD PTR [edx+0x4],edi
  4256a9:	mov    DWORD PTR [ecx+0x4],edx
  4256ac:	mov    ecx,DWORD PTR [edx+0x4]
  4256af:	mov    DWORD PTR [ecx+0x8],edx
  4256b2:	mov    ecx,DWORD PTR [edx+0x4]
  4256b5:	cmp    ecx,DWORD PTR [edx+0x8]
  4256b8:	jne    0x425718
  4256ba:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4256be:	mov    BYTE PTR [ebp+0xb],cl
  4256c1:	inc    cl
  4256c3:	cmp    esi,0x20
  4256c6:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4256ca:	jge    0x4256ef
  4256cc:	cmp    BYTE PTR [ebp+0xb],0x0
  4256d0:	jne    0x4256dd
  4256d2:	mov    edi,0x80000000
  4256d7:	mov    ecx,esi
  4256d9:	shr    edi,cl
  4256db:	or     DWORD PTR [ebx],edi
  4256dd:	mov    ecx,esi
  4256df:	mov    edi,0x80000000
  4256e4:	shr    edi,cl
  4256e6:	mov    ecx,DWORD PTR [ebp-0x4]
  4256e9:	or     DWORD PTR [eax+ecx*4+0x44],edi
  4256ed:	jmp    0x425718
  4256ef:	cmp    BYTE PTR [ebp+0xb],0x0
  4256f3:	jne    0x425702
  4256f5:	lea    ecx,[esi-0x20]
  4256f8:	mov    edi,0x80000000
  4256fd:	shr    edi,cl
  4256ff:	or     DWORD PTR [ebx+0x4],edi
  425702:	mov    ecx,DWORD PTR [ebp-0x4]
  425705:	lea    edi,[eax+ecx*4+0xc4]
  42570c:	lea    ecx,[esi-0x20]
  42570f:	mov    esi,0x80000000
  425714:	shr    esi,cl
  425716:	or     DWORD PTR [edi],esi
  425718:	mov    ecx,DWORD PTR [ebp-0x8]
  42571b:	test   ecx,ecx
  42571d:	je     0x42572a
  42571f:	mov    DWORD PTR [edx],ecx
  425721:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  425725:	jmp    0x42572a
  425727:	mov    ecx,DWORD PTR [ebp-0x8]
  42572a:	mov    esi,DWORD PTR [ebp-0x10]
  42572d:	add    edx,ecx
  42572f:	lea    ecx,[esi+0x1]
  425732:	mov    DWORD PTR [edx],ecx
  425734:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  425738:	mov    esi,DWORD PTR [ebp-0xc]
  42573b:	mov    ecx,DWORD PTR [esi]
  42573d:	test   ecx,ecx
  42573f:	lea    edi,[ecx+0x1]
  425742:	mov    DWORD PTR [esi],edi
  425744:	jne    0x425760
  425746:	cmp    ebx,DWORD PTR ds:0x45cef8
  42574c:	jne    0x425760
  42574e:	mov    ecx,DWORD PTR [ebp-0x4]
  425751:	cmp    ecx,DWORD PTR ds:0x45cf10
  425757:	jne    0x425760
  425759:	and    DWORD PTR ds:0x45cef8,0x0
  425760:	mov    ecx,DWORD PTR [ebp-0x4]
  425763:	mov    DWORD PTR [eax],ecx
  425765:	lea    eax,[edx+0x4]
  425768:	pop    edi
  425769:	pop    esi
  42576a:	pop    ebx
  42576b:	leave  
  42576c:	ret    
  42576d:	int3   
  42576e:	int3   
  42576f:	int3   
  425770:	push   esi
  425771:	inc    ebx
  425772:	xor    dh,BYTE PTR [eax]
  425774:	pop    eax
  425775:	inc    ebx
  425776:	xor    BYTE PTR [eax],dh
  425778:	push   ebp
  425779:	mov    ebp,esp
  42577b:	sub    esp,0x8
  42577e:	push   ebx
  42577f:	push   esi
  425780:	push   edi
  425781:	push   ebp
  425782:	cld    
  425783:	mov    ebx,DWORD PTR [ebp+0xc]
  425786:	mov    eax,DWORD PTR [ebp+0x8]
  425789:	test   DWORD PTR [eax+0x4],0x6
  425790:	jne    0x425818
  425796:	mov    DWORD PTR [ebp-0x8],eax
  425799:	mov    eax,DWORD PTR [ebp+0x10]
  42579c:	mov    DWORD PTR [ebp-0x4],eax
  42579f:	lea    eax,[ebp-0x8]
  4257a2:	mov    DWORD PTR [ebx-0x4],eax
  4257a5:	mov    esi,DWORD PTR [ebx+0xc]
  4257a8:	mov    edi,DWORD PTR [ebx+0x8]
  4257ab:	cmp    esi,0xffffffff
  4257ae:	je     0x425811
  4257b0:	lea    ecx,[esi+esi*2]
  4257b3:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  4257b8:	je     0x4257ff
  4257ba:	push   esi
  4257bb:	push   ebp
  4257bc:	lea    ebp,[ebx+0x10]
  4257bf:	call   DWORD PTR [edi+ecx*4+0x4]
  4257c3:	pop    ebp
  4257c4:	pop    esi
  4257c5:	mov    ebx,DWORD PTR [ebp+0xc]
  4257c8:	or     eax,eax
  4257ca:	je     0x4257ff
  4257cc:	js     0x42580a
  4257ce:	mov    edi,DWORD PTR [ebx+0x8]
  4257d1:	push   ebx
  4257d2:	call   0x426700
  4257d7:	add    esp,0x4
  4257da:	lea    ebp,[ebx+0x10]
  4257dd:	push   esi
  4257de:	push   ebx
  4257df:	call   0x426742
  4257e4:	add    esp,0x8
  4257e7:	lea    ecx,[esi+esi*2]
  4257ea:	push   0x1
  4257ec:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257f0:	call   0x4267d6
  4257f5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257f8:	mov    DWORD PTR [ebx+0xc],eax
  4257fb:	call   DWORD PTR [edi+ecx*4+0x8]
  4257ff:	mov    edi,DWORD PTR [ebx+0x8]
  425802:	lea    ecx,[esi+esi*2]
  425805:	mov    esi,DWORD PTR [edi+ecx*4]
  425808:	jmp    0x4257ab
  42580a:	mov    eax,0x0
  42580f:	jmp    0x42582d
  425811:	mov    eax,0x1
  425816:	jmp    0x42582d
  425818:	push   ebp
  425819:	lea    ebp,[ebx+0x10]
  42581c:	push   0xffffffff
  42581e:	push   ebx
  42581f:	call   0x426742
  425824:	add    esp,0x8
  425827:	pop    ebp
  425828:	mov    eax,0x1
  42582d:	pop    ebp
  42582e:	pop    edi
  42582f:	pop    esi
  425830:	pop    ebx
  425831:	mov    esp,ebp
  425833:	pop    ebp
  425834:	ret    
  425835:	push   ebp
  425836:	mov    ecx,DWORD PTR [esp+0x8]
  42583a:	mov    ebp,DWORD PTR [ecx]
  42583c:	mov    eax,DWORD PTR [ecx+0x1c]
  42583f:	push   eax
  425840:	mov    eax,DWORD PTR [ecx+0x18]
  425843:	push   eax
  425844:	call   0x426742
  425849:	add    esp,0x8
  42584c:	pop    ebp
  42584d:	ret    0x4
  425850:	call   0x42375d
  425855:	add    eax,0x8
  425858:	ret    
  425859:	push   0x14
  42585b:	push   0x428770
  425860:	call   0x4238a8
  425865:	mov    edi,DWORD PTR [ebp+0x8]
  425868:	xor    ebx,ebx
  42586a:	cmp    edi,ebx
  42586c:	jne    0x42587c
  42586e:	push   DWORD PTR [ebp+0xc]
  425871:	call   0x4245d2
  425876:	pop    ecx
  425877:	jmp    0x425a00
  42587c:	mov    esi,DWORD PTR [ebp+0xc]
  42587f:	cmp    esi,ebx
  425881:	jne    0x42588f
  425883:	push   edi
  425884:	call   0x4244ba
  425889:	pop    ecx
  42588a:	jmp    0x4259fe
  42588f:	cmp    DWORD PTR ds:0x45d144,0x3
  425896:	jne    0x4259ca
  42589c:	mov    DWORD PTR [ebp-0x1c],ebx
  42589f:	cmp    esi,0xffffffe0
  4258a2:	ja     0x425999
  4258a8:	push   0x4
  4258aa:	call   0x423a6f
  4258af:	pop    ecx
  4258b0:	mov    DWORD PTR [ebp-0x4],ebx
  4258b3:	push   edi
  4258b4:	call   0x424c92
  4258b9:	pop    ecx
  4258ba:	mov    DWORD PTR [ebp-0x20],eax
  4258bd:	cmp    eax,ebx
  4258bf:	je     0x425969
  4258c5:	cmp    esi,DWORD PTR ds:0x45cf04
  4258cb:	ja     0x425919
  4258cd:	push   esi
  4258ce:	push   edi
  4258cf:	push   eax
  4258d0:	call   0x425192
  4258d5:	add    esp,0xc
  4258d8:	test   eax,eax
  4258da:	je     0x4258e1
  4258dc:	mov    DWORD PTR [ebp-0x1c],edi
  4258df:	jmp    0x425919
  4258e1:	push   esi
  4258e2:	call   0x425471
  4258e7:	pop    ecx
  4258e8:	mov    DWORD PTR [ebp-0x1c],eax
  4258eb:	cmp    eax,ebx
  4258ed:	je     0x425919
  4258ef:	mov    eax,DWORD PTR [edi-0x4]
  4258f2:	dec    eax
  4258f3:	mov    DWORD PTR [ebp-0x24],eax
  4258f6:	cmp    eax,esi
  4258f8:	jb     0x4258fc
  4258fa:	mov    eax,esi
  4258fc:	push   eax
  4258fd:	push   edi
  4258fe:	push   DWORD PTR [ebp-0x1c]
  425901:	call   0x4245f0
  425906:	push   edi
  425907:	call   0x424c92
  42590c:	mov    DWORD PTR [ebp-0x20],eax
  42590f:	push   edi
  425910:	push   eax
  425911:	call   0x424cbd
  425916:	add    esp,0x18
  425919:	cmp    DWORD PTR [ebp-0x1c],ebx
  42591c:	jne    0x425969
  42591e:	cmp    esi,ebx
  425920:	jne    0x425928
  425922:	xor    esi,esi
  425924:	inc    esi
  425925:	mov    DWORD PTR [ebp+0xc],esi
  425928:	add    esi,0xf
  42592b:	and    esi,0xfffffff0
  42592e:	mov    DWORD PTR [ebp+0xc],esi
  425931:	push   esi
  425932:	push   ebx
  425933:	push   DWORD PTR ds:0x45d140
  425939:	call   DWORD PTR ds:0x4280a8
  42593f:	mov    DWORD PTR [ebp-0x1c],eax
  425942:	cmp    eax,ebx
  425944:	je     0x425969
  425946:	mov    eax,DWORD PTR [edi-0x4]
  425949:	dec    eax
  42594a:	mov    DWORD PTR [ebp-0x24],eax
  42594d:	cmp    eax,esi
  42594f:	jb     0x425953
  425951:	mov    eax,esi
  425953:	push   eax
  425954:	push   edi
  425955:	push   DWORD PTR [ebp-0x1c]
  425958:	call   0x4245f0
  42595d:	push   edi
  42595e:	push   DWORD PTR [ebp-0x20]
  425961:	call   0x424cbd
  425966:	add    esp,0x14
  425969:	or     DWORD PTR [ebp-0x4],0xffffffff
  42596d:	call   0x4259c1
  425972:	cmp    DWORD PTR [ebp-0x20],ebx
  425975:	jne    0x425999
  425977:	cmp    esi,ebx
  425979:	jne    0x42597e
  42597b:	xor    esi,esi
  42597d:	inc    esi
  42597e:	add    esi,0xf
  425981:	and    esi,0xfffffff0
  425984:	mov    DWORD PTR [ebp+0xc],esi
  425987:	push   esi
  425988:	push   edi
  425989:	push   ebx
  42598a:	push   DWORD PTR ds:0x45d140
  425990:	call   DWORD PTR ds:0x4280b4
  425996:	mov    DWORD PTR [ebp-0x1c],eax
  425999:	mov    eax,DWORD PTR [ebp-0x1c]
  42599c:	cmp    eax,ebx
  42599e:	jne    0x425a00
  4259a0:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a6:	je     0x425a00
  4259a8:	push   esi
  4259a9:	call   0x426192
  4259ae:	pop    ecx
  4259af:	test   eax,eax
  4259b1:	jne    0x42589c
  4259b7:	jmp    0x4259fe
  4259b9:	xor    ebx,ebx
  4259bb:	mov    esi,DWORD PTR [ebp+0xc]
  4259be:	mov    edi,DWORD PTR [ebp+0x8]
  4259c1:	push   0x4
  4259c3:	call   0x4239db
  4259c8:	pop    ecx
  4259c9:	ret    
  4259ca:	xor    eax,eax
  4259cc:	cmp    esi,0xffffffe0
  4259cf:	ja     0x4259e7
  4259d1:	cmp    esi,ebx
  4259d3:	jne    0x4259d8
  4259d5:	xor    esi,esi
  4259d7:	inc    esi
  4259d8:	push   esi
  4259d9:	push   edi
  4259da:	push   ebx
  4259db:	push   DWORD PTR ds:0x45d140
  4259e1:	call   DWORD PTR ds:0x4280b4
  4259e7:	cmp    eax,ebx
  4259e9:	jne    0x425a00
  4259eb:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259f1:	je     0x425a00
  4259f3:	push   esi
  4259f4:	call   0x426192
  4259f9:	pop    ecx
  4259fa:	test   eax,eax
  4259fc:	jne    0x4259ca
  4259fe:	xor    eax,eax
  425a00:	call   0x4238e3
  425a05:	ret    
  425a06:	push   0x10
  425a08:	push   0x428780
  425a0d:	call   0x4238a8
  425a12:	cmp    DWORD PTR ds:0x45d144,0x3
  425a19:	jne    0x425a55
  425a1b:	push   0x4
  425a1d:	call   0x423a6f
  425a22:	pop    ecx
  425a23:	and    DWORD PTR [ebp-0x4],0x0
  425a27:	mov    esi,DWORD PTR [ebp+0x8]
  425a2a:	push   esi
  425a2b:	call   0x424c92
  425a30:	pop    ecx
  425a31:	mov    DWORD PTR [ebp-0x1c],eax
  425a34:	test   eax,eax
  425a36:	je     0x425a43
  425a38:	mov    esi,DWORD PTR [esi-0x4]
  425a3b:	sub    esi,0x9
  425a3e:	mov    DWORD PTR [ebp-0x20],esi
  425a41:	jmp    0x425a46
  425a43:	mov    esi,DWORD PTR [ebp-0x20]
  425a46:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a4a:	call   0x425a73
  425a4f:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a53:	jne    0x425a68
  425a55:	push   DWORD PTR [ebp+0x8]
  425a58:	push   0x0
  425a5a:	push   DWORD PTR ds:0x45d140
  425a60:	call   DWORD PTR ds:0x4280b8
  425a66:	mov    esi,eax
  425a68:	mov    eax,esi
  425a6a:	call   0x4238e3
  425a6f:	ret    
  425a70:	mov    esi,DWORD PTR [ebp-0x20]
  425a73:	push   0x4
  425a75:	call   0x4239db
  425a7a:	pop    ecx
  425a7b:	ret    
  425a7c:	push   ebp
  425a7d:	mov    ebp,esp
  425a7f:	sub    esp,0x10
  425a82:	push   esi
  425a83:	lea    eax,[ebp-0x8]
  425a86:	push   eax
  425a87:	call   DWORD PTR ds:0x4280c8
  425a8d:	mov    esi,DWORD PTR [ebp-0x4]
  425a90:	xor    esi,DWORD PTR [ebp-0x8]
  425a93:	call   DWORD PTR ds:0x4280c4
  425a99:	xor    esi,eax
  425a9b:	call   DWORD PTR ds:0x428070
  425aa1:	xor    esi,eax
  425aa3:	call   DWORD PTR ds:0x4280c0
  425aa9:	xor    esi,eax
  425aab:	lea    eax,[ebp-0x10]
  425aae:	push   eax
  425aaf:	call   DWORD PTR ds:0x4280bc
  425ab5:	mov    eax,DWORD PTR [ebp-0xc]
  425ab8:	xor    eax,DWORD PTR [ebp-0x10]
  425abb:	xor    esi,eax
  425abd:	mov    DWORD PTR ds:0x45c430,esi
  425ac3:	jne    0x425acf
  425ac5:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425acf:	pop    esi
  425ad0:	leave  
  425ad1:	ret    
  425ad2:	push   0x118
  425ad7:	push   0x428930
  425adc:	call   0x4238a8
  425ae1:	mov    eax,ds:0x45c430
  425ae6:	xor    eax,DWORD PTR [ebp+0x4]
  425ae9:	mov    DWORD PTR [ebp-0x1c],eax
  425aec:	mov    eax,ds:0x45cd98
  425af1:	xor    ecx,ecx
  425af3:	cmp    eax,ecx
  425af5:	je     0x425b16
  425af7:	mov    DWORD PTR [ebp-0x4],ecx
  425afa:	push   DWORD PTR [ebp+0xc]
  425afd:	push   DWORD PTR [ebp+0x8]
  425b00:	call   eax
  425b02:	pop    ecx
  425b03:	pop    ecx
  425b04:	or     DWORD PTR [ebp-0x4],0xffffffff
  425b08:	jmp    0x425c14
  425b0d:	xor    eax,eax
  425b0f:	inc    eax
  425b10:	ret    
  425b11:	mov    esp,DWORD PTR [ebp-0x18]
  425b14:	jmp    0x425b04
  425b16:	mov    eax,DWORD PTR [ebp+0x8]
  425b19:	dec    eax
  425b1a:	je     0x425b2f
  425b1c:	mov    edi,0x42890c
  425b21:	mov    DWORD PTR [ebp-0x20],0x428858
  425b28:	mov    esi,0xd4
  425b2d:	jmp    0x425b40
  425b2f:	mov    edi,0x428838
  425b34:	mov    DWORD PTR [ebp-0x20],0x428798
  425b3b:	mov    esi,0xb9
  425b40:	mov    BYTE PTR [ebp-0x24],cl
  425b43:	push   0x104
  425b48:	lea    eax,[ebp-0x128]
  425b4e:	push   eax
  425b4f:	push   ecx
  425b50:	call   DWORD PTR ds:0x428040
  425b56:	test   eax,eax
  425b58:	jne    0x425b6d
  425b5a:	push   0x42848c
  425b5f:	lea    eax,[ebp-0x128]
  425b65:	push   eax
  425b66:	call   0x423c90
  425b6b:	pop    ecx
  425b6c:	pop    ecx
  425b6d:	lea    ebx,[ebp-0x128]
  425b73:	lea    eax,[ebp-0x128]
  425b79:	push   eax
  425b7a:	call   0x423ec0
  425b7f:	pop    ecx
  425b80:	add    eax,0xb
  425b83:	cmp    eax,0x3c
  425b86:	jbe    0x425bb1
  425b88:	lea    eax,[ebp-0x128]
  425b8e:	push   eax
  425b8f:	call   0x423ec0
  425b94:	mov    ebx,eax
  425b96:	lea    eax,[ebp-0x128]
  425b9c:	sub    eax,0x31
  425b9f:	add    ebx,eax
  425ba1:	push   0x3
  425ba3:	push   0x428488
  425ba8:	push   ebx
  425ba9:	call   0x423d90
  425bae:	add    esp,0x10
  425bb1:	push   ebx
  425bb2:	call   0x423ec0
  425bb7:	pop    ecx
  425bb8:	lea    eax,[eax+esi*1+0xc]
  425bbc:	add    eax,0x3
  425bbf:	and    eax,0xfffffffc
  425bc2:	call   0x423900
  425bc7:	mov    DWORD PTR [ebp-0x18],esp
  425bca:	mov    esi,esp
  425bcc:	push   edi
  425bcd:	push   esi
  425bce:	call   0x423c90
  425bd3:	mov    edi,0x428468
  425bd8:	push   edi
  425bd9:	push   esi
  425bda:	call   0x423ca0
  425bdf:	push   0x42878c
  425be4:	push   esi
  425be5:	call   0x423ca0
  425bea:	push   ebx
  425beb:	push   esi
  425bec:	call   0x423ca0
  425bf1:	push   edi
  425bf2:	push   esi
  425bf3:	call   0x423ca0
  425bf8:	push   DWORD PTR [ebp-0x20]
  425bfb:	push   esi
  425bfc:	call   0x423ca0
  425c01:	push   0x12010
  425c06:	push   0x428440
  425c0b:	push   esi
  425c0c:	call   0x423b92
  425c11:	add    esp,0x3c
  425c14:	push   0x3
  425c16:	call   0x422d16
  425c1b:	int3   
  425c1c:	push   0x38
  425c1e:	push   0x428d50
  425c23:	call   0x4238a8
  425c28:	xor    ebx,ebx
  425c2a:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425c30:	jne    0x425c6a
  425c32:	push   ebx
  425c33:	push   ebx
  425c34:	xor    esi,esi
  425c36:	inc    esi
  425c37:	push   esi
  425c38:	push   0x428d4c
  425c3d:	push   0x100
  425c42:	push   ebx
  425c43:	call   DWORD PTR ds:0x4280d4
  425c49:	test   eax,eax
  425c4b:	je     0x425c55
  425c4d:	mov    DWORD PTR ds:0x45cdbc,esi
  425c53:	jmp    0x425c6a
  425c55:	call   DWORD PTR ds:0x428014
  425c5b:	cmp    eax,0x78
  425c5e:	jne    0x425c6a
  425c60:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c6a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c6d:	jle    0x425c8a
  425c6f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c72:	mov    eax,DWORD PTR [ebp+0x10]
  425c75:	dec    ecx
  425c76:	cmp    BYTE PTR [eax],bl
  425c78:	je     0x425c82
  425c7a:	inc    eax
  425c7b:	cmp    ecx,ebx
  425c7d:	jne    0x425c75
  425c7f:	or     ecx,0xffffffff
  425c82:	or     eax,0xffffffff
  425c85:	sub    eax,ecx
  425c87:	add    DWORD PTR [ebp+0x14],eax
  425c8a:	mov    eax,ds:0x45cdbc
  425c8f:	cmp    eax,0x2
  425c92:	je     0x425e74
  425c98:	cmp    eax,ebx
  425c9a:	je     0x425e74
  425ca0:	cmp    eax,0x1
  425ca3:	jne    0x425ea7
  425ca9:	xor    edi,edi
  425cab:	mov    DWORD PTR [ebp-0x1c],edi
  425cae:	mov    DWORD PTR [ebp-0x20],ebx
  425cb1:	mov    DWORD PTR [ebp-0x24],ebx
  425cb4:	cmp    DWORD PTR [ebp+0x20],ebx
  425cb7:	jne    0x425cc1
  425cb9:	mov    eax,ds:0x45cdb4
  425cbe:	mov    DWORD PTR [ebp+0x20],eax
  425cc1:	push   ebx
  425cc2:	push   ebx
  425cc3:	push   DWORD PTR [ebp+0x14]
  425cc6:	push   DWORD PTR [ebp+0x10]
  425cc9:	xor    eax,eax
  425ccb:	cmp    DWORD PTR [ebp+0x24],ebx
  425cce:	setne  al
  425cd1:	lea    eax,[eax*8+0x1]
  425cd8:	push   eax
  425cd9:	push   DWORD PTR [ebp+0x20]
  425cdc:	call   DWORD PTR ds:0x4280d0
  425ce2:	mov    esi,eax
  425ce4:	mov    DWORD PTR [ebp-0x28],esi
  425ce7:	cmp    esi,ebx
  425ce9:	je     0x425ea7
  425cef:	mov    DWORD PTR [ebp-0x4],0x1
  425cf6:	lea    eax,[esi+esi*1]
  425cf9:	add    eax,0x3
  425cfc:	and    eax,0xfffffffc
  425cff:	call   0x423900
  425d04:	mov    DWORD PTR [ebp-0x18],esp
  425d07:	mov    eax,esp
  425d09:	mov    DWORD PTR [ebp-0x2c],eax
  425d0c:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d10:	jmp    0x425d2d
  425d12:	xor    eax,eax
  425d14:	inc    eax
  425d15:	ret    
  425d16:	mov    esp,DWORD PTR [ebp-0x18]
  425d19:	call   0x426d45
  425d1e:	xor    ebx,ebx
  425d20:	mov    DWORD PTR [ebp-0x2c],ebx
  425d23:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d27:	mov    edi,DWORD PTR [ebp-0x1c]
  425d2a:	mov    esi,DWORD PTR [ebp-0x28]
  425d2d:	cmp    DWORD PTR [ebp-0x2c],ebx
  425d30:	jne    0x425d4e
  425d32:	lea    eax,[esi+esi*1]
  425d35:	push   eax
  425d36:	call   0x4245d2
  425d3b:	pop    ecx
  425d3c:	mov    DWORD PTR [ebp-0x2c],eax
  425d3f:	cmp    eax,ebx
  425d41:	je     0x425ea7
  425d47:	mov    DWORD PTR [ebp-0x20],0x1
  425d4e:	push   esi
  425d4f:	push   DWORD PTR [ebp-0x2c]
  425d52:	push   DWORD PTR [ebp+0x14]
  425d55:	push   DWORD PTR [ebp+0x10]
  425d58:	push   0x1
  425d5a:	push   DWORD PTR [ebp+0x20]
  425d5d:	call   DWORD PTR ds:0x4280d0
  425d63:	test   eax,eax
  425d65:	je     0x425e51
  425d6b:	push   ebx
  425d6c:	push   ebx
  425d6d:	push   esi
  425d6e:	push   DWORD PTR [ebp-0x2c]
  425d71:	push   DWORD PTR [ebp+0xc]
  425d74:	push   DWORD PTR [ebp+0x8]
  425d77:	call   DWORD PTR ds:0x4280d4
  425d7d:	mov    edi,eax
  425d7f:	mov    DWORD PTR [ebp-0x1c],edi
  425d82:	cmp    edi,ebx
  425d84:	je     0x425e51
  425d8a:	test   BYTE PTR [ebp+0xd],0x4
  425d8e:	je     0x425dbd
  425d90:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d93:	je     0x425e51
  425d99:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d9c:	jg     0x425e51
  425da2:	push   DWORD PTR [ebp+0x1c]
  425da5:	push   DWORD PTR [ebp+0x18]
  425da8:	push   esi
  425da9:	push   DWORD PTR [ebp-0x2c]
  425dac:	push   DWORD PTR [ebp+0xc]
  425daf:	push   DWORD PTR [ebp+0x8]
  425db2:	call   DWORD PTR ds:0x4280d4
  425db8:	jmp    0x425e51
  425dbd:	mov    DWORD PTR [ebp-0x4],0x2
  425dc4:	lea    eax,[edi+edi*1]
  425dc7:	add    eax,0x3
  425dca:	and    eax,0xfffffffc
  425dcd:	call   0x423900
  425dd2:	mov    DWORD PTR [ebp-0x18],esp
  425dd5:	mov    eax,esp
  425dd7:	mov    DWORD PTR [ebp-0x30],eax
  425dda:	or     DWORD PTR [ebp-0x4],0xffffffff
  425dde:	jmp    0x425dfb
  425de0:	xor    eax,eax
  425de2:	inc    eax
  425de3:	ret    
  425de4:	mov    esp,DWORD PTR [ebp-0x18]
  425de7:	call   0x426d45
  425dec:	xor    ebx,ebx
  425dee:	mov    DWORD PTR [ebp-0x30],ebx
  425df1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425df5:	mov    edi,DWORD PTR [ebp-0x1c]
  425df8:	mov    esi,DWORD PTR [ebp-0x28]
  425dfb:	cmp    DWORD PTR [ebp-0x30],ebx
  425dfe:	jne    0x425e18
  425e00:	lea    eax,[edi+edi*1]
  425e03:	push   eax
  425e04:	call   0x4245d2
  425e09:	pop    ecx
  425e0a:	mov    DWORD PTR [ebp-0x30],eax
  425e0d:	cmp    eax,ebx
  425e0f:	je     0x425e51
  425e11:	mov    DWORD PTR [ebp-0x24],0x1
  425e18:	push   edi
  425e19:	push   DWORD PTR [ebp-0x30]
  425e1c:	push   esi
  425e1d:	push   DWORD PTR [ebp-0x2c]
  425e20:	push   DWORD PTR [ebp+0xc]
  425e23:	push   DWORD PTR [ebp+0x8]
  425e26:	call   DWORD PTR ds:0x4280d4
  425e2c:	test   eax,eax
  425e2e:	je     0x425e51
  425e30:	push   ebx
  425e31:	push   ebx
  425e32:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e35:	jne    0x425e3b
  425e37:	push   ebx
  425e38:	push   ebx
  425e39:	jmp    0x425e41
  425e3b:	push   DWORD PTR [ebp+0x1c]
  425e3e:	push   DWORD PTR [ebp+0x18]
  425e41:	push   edi
  425e42:	push   DWORD PTR [ebp-0x30]
  425e45:	push   ebx
  425e46:	push   DWORD PTR [ebp+0x20]
  425e49:	call   DWORD PTR ds:0x428054
  425e4f:	mov    edi,eax
  425e51:	cmp    DWORD PTR [ebp-0x24],ebx
  425e54:	je     0x425e5f
  425e56:	push   DWORD PTR [ebp-0x30]
  425e59:	call   0x4244ba
  425e5e:	pop    ecx
  425e5f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e62:	je     0x425e6d
  425e64:	push   DWORD PTR [ebp-0x2c]
  425e67:	call   0x4244ba
  425e6c:	pop    ecx
  425e6d:	mov    eax,edi
  425e6f:	jmp    0x425fcf
  425e74:	mov    DWORD PTR [ebp-0x34],ebx
  425e77:	xor    edi,edi
  425e79:	mov    DWORD PTR [ebp-0x38],ebx
  425e7c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e7f:	jne    0x425e89
  425e81:	mov    eax,ds:0x45cda4
  425e86:	mov    DWORD PTR [ebp+0x8],eax
  425e89:	cmp    DWORD PTR [ebp+0x20],ebx
  425e8c:	jne    0x425e96
  425e8e:	mov    eax,ds:0x45cdb4
  425e93:	mov    DWORD PTR [ebp+0x20],eax
  425e96:	push   DWORD PTR [ebp+0x8]
  425e99:	call   0x426b2d
  425e9e:	pop    ecx
  425e9f:	mov    DWORD PTR [ebp-0x3c],eax
  425ea2:	cmp    eax,0xffffffff
  425ea5:	jne    0x425eae
  425ea7:	xor    eax,eax
  425ea9:	jmp    0x425fcf
  425eae:	cmp    eax,DWORD PTR [ebp+0x20]
  425eb1:	je     0x425fa5
  425eb7:	push   ebx
  425eb8:	push   ebx
  425eb9:	lea    ecx,[ebp+0x14]
  425ebc:	push   ecx
  425ebd:	push   DWORD PTR [ebp+0x10]
  425ec0:	push   eax
  425ec1:	push   DWORD PTR [ebp+0x20]
  425ec4:	call   0x426b76
  425ec9:	add    esp,0x18
  425ecc:	mov    DWORD PTR [ebp-0x34],eax
  425ecf:	cmp    eax,ebx
  425ed1:	je     0x425ea7
  425ed3:	push   ebx
  425ed4:	push   ebx
  425ed5:	push   DWORD PTR [ebp+0x14]
  425ed8:	push   eax
  425ed9:	push   DWORD PTR [ebp+0xc]
  425edc:	push   DWORD PTR [ebp+0x8]
  425edf:	call   DWORD PTR ds:0x4280cc
  425ee5:	mov    esi,eax
  425ee7:	mov    DWORD PTR [ebp-0x40],esi
  425eea:	cmp    esi,ebx
  425eec:	je     0x425f94
  425ef2:	mov    DWORD PTR [ebp-0x4],ebx
  425ef5:	add    eax,0x3
  425ef8:	and    eax,0xfffffffc
  425efb:	call   0x423900
  425f00:	mov    DWORD PTR [ebp-0x18],esp
  425f03:	mov    edi,esp
  425f05:	mov    DWORD PTR [ebp-0x44],edi
  425f08:	push   esi
  425f09:	push   ebx
  425f0a:	push   edi
  425f0b:	call   0x4261b0
  425f10:	add    esp,0xc
  425f13:	jmp    0x425f25
  425f15:	xor    eax,eax
  425f17:	inc    eax
  425f18:	ret    
  425f19:	mov    esp,DWORD PTR [ebp-0x18]
  425f1c:	call   0x426d45
  425f21:	xor    ebx,ebx
  425f23:	xor    edi,edi
  425f25:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f29:	cmp    edi,ebx
  425f2b:	jne    0x425f50
  425f2d:	push   DWORD PTR [ebp-0x40]
  425f30:	call   0x4245d2
  425f35:	pop    ecx
  425f36:	mov    edi,eax
  425f38:	cmp    edi,ebx
  425f3a:	je     0x425f6d
  425f3c:	push   DWORD PTR [ebp-0x40]
  425f3f:	push   ebx
  425f40:	push   edi
  425f41:	call   0x4261b0
  425f46:	add    esp,0xc
  425f49:	mov    DWORD PTR [ebp-0x38],0x1
  425f50:	push   DWORD PTR [ebp-0x40]
  425f53:	push   edi
  425f54:	push   DWORD PTR [ebp+0x14]
  425f57:	push   DWORD PTR [ebp-0x34]
  425f5a:	push   DWORD PTR [ebp+0xc]
  425f5d:	push   DWORD PTR [ebp+0x8]
  425f60:	call   DWORD PTR ds:0x4280cc
  425f66:	mov    DWORD PTR [ebp-0x40],eax
  425f69:	cmp    eax,ebx
  425f6b:	jne    0x425f71
  425f6d:	xor    esi,esi
  425f6f:	jmp    0x425f97
  425f71:	push   DWORD PTR [ebp+0x1c]
  425f74:	push   DWORD PTR [ebp+0x18]
  425f77:	lea    eax,[ebp-0x40]
  425f7a:	push   eax
  425f7b:	push   edi
  425f7c:	push   DWORD PTR [ebp+0x20]
  425f7f:	push   DWORD PTR [ebp-0x3c]
  425f82:	call   0x426b76
  425f87:	add    esp,0x18
  425f8a:	mov    esi,eax
  425f8c:	neg    esi
  425f8e:	sbb    esi,esi
  425f90:	neg    esi
  425f92:	jmp    0x425f97
  425f94:	mov    esi,DWORD PTR [ebp-0x48]
  425f97:	cmp    DWORD PTR [ebp-0x38],ebx
  425f9a:	je     0x425fbf
  425f9c:	push   edi
  425f9d:	call   0x4244ba
  425fa2:	pop    ecx
  425fa3:	jmp    0x425fbf
  425fa5:	push   DWORD PTR [ebp+0x1c]
  425fa8:	push   DWORD PTR [ebp+0x18]
  425fab:	push   DWORD PTR [ebp+0x14]
  425fae:	push   DWORD PTR [ebp+0x10]
  425fb1:	push   DWORD PTR [ebp+0xc]
  425fb4:	push   DWORD PTR [ebp+0x8]
  425fb7:	call   DWORD PTR ds:0x4280cc
  425fbd:	mov    esi,eax
  425fbf:	cmp    DWORD PTR [ebp-0x34],ebx
  425fc2:	je     0x425fcd
  425fc4:	push   DWORD PTR [ebp-0x34]
  425fc7:	call   0x4244ba
  425fcc:	pop    ecx
  425fcd:	mov    eax,esi
  425fcf:	lea    esp,[ebp-0x54]
  425fd2:	call   0x4238e3
  425fd7:	ret    
  425fd8:	push   0x1c
  425fda:	push   0x428d78
  425fdf:	call   0x4238a8
  425fe4:	xor    esi,esi
  425fe6:	cmp    DWORD PTR ds:0x45cdc0,esi
  425fec:	jne    0x426023
  425fee:	lea    eax,[ebp-0x1c]
  425ff1:	push   eax
  425ff2:	xor    edi,edi
  425ff4:	inc    edi
  425ff5:	push   edi
  425ff6:	push   0x428d4c
  425ffb:	push   edi
  425ffc:	call   DWORD PTR ds:0x4280dc
  426002:	test   eax,eax
  426004:	je     0x42600e
  426006:	mov    DWORD PTR ds:0x45cdc0,edi
  42600c:	jmp    0x426023
  42600e:	call   DWORD PTR ds:0x428014
  426014:	cmp    eax,0x78
  426017:	jne    0x426023
  426019:	mov    DWORD PTR ds:0x45cdc0,0x2
  426023:	mov    eax,ds:0x45cdc0
  426028:	cmp    eax,0x2
  42602b:	je     0x42611b
  426031:	cmp    eax,esi
  426033:	je     0x42611b
  426039:	cmp    eax,0x1
  42603c:	jne    0x426141
  426042:	mov    DWORD PTR [ebp-0x20],esi
  426045:	mov    DWORD PTR [ebp-0x24],esi
  426048:	cmp    DWORD PTR [ebp+0x18],esi
  42604b:	jne    0x426055
  42604d:	mov    eax,ds:0x45cdb4
  426052:	mov    DWORD PTR [ebp+0x18],eax
  426055:	push   esi
  426056:	push   esi
  426057:	push   DWORD PTR [ebp+0x10]
  42605a:	push   DWORD PTR [ebp+0xc]
  42605d:	xor    eax,eax
  42605f:	cmp    DWORD PTR [ebp+0x20],esi
  426062:	setne  al
  426065:	lea    eax,[eax*8+0x1]
  42606c:	push   eax
  42606d:	push   DWORD PTR [ebp+0x18]
  426070:	call   DWORD PTR ds:0x4280d0
  426076:	mov    edi,eax
  426078:	mov    DWORD PTR [ebp-0x28],edi
  42607b:	test   edi,edi
  42607d:	je     0x426141
  426083:	and    DWORD PTR [ebp-0x4],0x0
  426087:	lea    ebx,[edi+edi*1]
  42608a:	mov    eax,ebx
  42608c:	add    eax,0x3
  42608f:	and    eax,0xfffffffc
  426092:	call   0x423900
  426097:	mov    DWORD PTR [ebp-0x18],esp
  42609a:	mov    esi,esp
  42609c:	mov    DWORD PTR [ebp-0x2c],esi
  42609f:	push   ebx
  4260a0:	push   0x0
  4260a2:	push   esi
  4260a3:	call   0x4261b0
  4260a8:	add    esp,0xc
  4260ab:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260af:	jmp    0x4260c6
  4260b1:	xor    eax,eax
  4260b3:	inc    eax
  4260b4:	ret    
  4260b5:	mov    esp,DWORD PTR [ebp-0x18]
  4260b8:	call   0x426d45
  4260bd:	xor    esi,esi
  4260bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260c3:	mov    edi,DWORD PTR [ebp-0x28]
  4260c6:	test   esi,esi
  4260c8:	jne    0x4260e1
  4260ca:	push   edi
  4260cb:	push   0x2
  4260cd:	call   0x4249c8
  4260d2:	pop    ecx
  4260d3:	pop    ecx
  4260d4:	mov    esi,eax
  4260d6:	test   esi,esi
  4260d8:	je     0x426141
  4260da:	mov    DWORD PTR [ebp-0x24],0x1
  4260e1:	push   edi
  4260e2:	push   esi
  4260e3:	push   DWORD PTR [ebp+0x10]
  4260e6:	push   DWORD PTR [ebp+0xc]
  4260e9:	push   0x1
  4260eb:	push   DWORD PTR [ebp+0x18]
  4260ee:	call   DWORD PTR ds:0x4280d0
  4260f4:	test   eax,eax
  4260f6:	je     0x426109
  4260f8:	push   DWORD PTR [ebp+0x14]
  4260fb:	push   eax
  4260fc:	push   esi
  4260fd:	push   DWORD PTR [ebp+0x8]
  426100:	call   DWORD PTR ds:0x4280dc
  426106:	mov    DWORD PTR [ebp-0x20],eax
  426109:	cmp    DWORD PTR [ebp-0x24],0x0
  42610d:	je     0x426116
  42610f:	push   esi
  426110:	call   0x4244ba
  426115:	pop    ecx
  426116:	mov    eax,DWORD PTR [ebp-0x20]
  426119:	jmp    0x426189
  42611b:	mov    ebx,DWORD PTR [ebp+0x1c]
  42611e:	cmp    ebx,esi
  426120:	jne    0x426128
  426122:	mov    ebx,DWORD PTR ds:0x45cda4
  426128:	mov    edi,DWORD PTR [ebp+0x18]
  42612b:	test   edi,edi
  42612d:	jne    0x426135
  42612f:	mov    edi,DWORD PTR ds:0x45cdb4
  426135:	push   ebx
  426136:	call   0x426b2d
  42613b:	pop    ecx
  42613c:	cmp    eax,0xffffffff
  42613f:	jne    0x426145
  426141:	xor    eax,eax
  426143:	jmp    0x426189
  426145:	cmp    eax,edi
  426147:	je     0x426167
  426149:	push   0x0
  42614b:	push   0x0
  42614d:	lea    ecx,[ebp+0x10]
  426150:	push   ecx
  426151:	push   DWORD PTR [ebp+0xc]
  426154:	push   eax
  426155:	push   edi
  426156:	call   0x426b76
  42615b:	add    esp,0x18
  42615e:	mov    esi,eax
  426160:	test   esi,esi
  426162:	je     0x426141
  426164:	mov    DWORD PTR [ebp+0xc],esi
  426167:	push   DWORD PTR [ebp+0x14]
  42616a:	push   DWORD PTR [ebp+0x10]
  42616d:	push   DWORD PTR [ebp+0xc]
  426170:	push   DWORD PTR [ebp+0x8]
  426173:	push   ebx
  426174:	call   DWORD PTR ds:0x4280d8
  42617a:	mov    edi,eax
  42617c:	test   esi,esi
  42617e:	je     0x426187
  426180:	push   esi
  426181:	call   0x4244ba
  426186:	pop    ecx
  426187:	mov    eax,edi
  426189:	lea    esp,[ebp-0x38]
  42618c:	call   0x4238e3
  426191:	ret    
  426192:	mov    eax,ds:0x45cdc4
  426197:	test   eax,eax
  426199:	je     0x4261aa
  42619b:	push   DWORD PTR [esp+0x4]
  42619f:	call   eax
  4261a1:	test   eax,eax
  4261a3:	pop    ecx
  4261a4:	je     0x4261aa
  4261a6:	xor    eax,eax
  4261a8:	inc    eax
  4261a9:	ret    
  4261aa:	xor    eax,eax
  4261ac:	ret    
  4261ad:	int3   
  4261ae:	int3   
  4261af:	int3   
  4261b0:	mov    edx,DWORD PTR [esp+0xc]
  4261b4:	mov    ecx,DWORD PTR [esp+0x4]
  4261b8:	test   edx,edx
  4261ba:	je     0x42620b
  4261bc:	xor    eax,eax
  4261be:	mov    al,BYTE PTR [esp+0x8]
  4261c2:	push   edi
  4261c3:	mov    edi,ecx
  4261c5:	cmp    edx,0x4
  4261c8:	jb     0x4261fb
  4261ca:	neg    ecx
  4261cc:	and    ecx,0x3
  4261cf:	je     0x4261dd
  4261d1:	sub    edx,ecx
  4261d3:	mov    BYTE PTR [edi],al
  4261d5:	add    edi,0x1
  4261d8:	sub    ecx,0x1
  4261db:	jne    0x4261d3
  4261dd:	mov    ecx,eax
  4261df:	shl    eax,0x8
  4261e2:	add    eax,ecx
  4261e4:	mov    ecx,eax
  4261e6:	shl    eax,0x10
  4261e9:	add    eax,ecx
  4261eb:	mov    ecx,edx
  4261ed:	and    edx,0x3
  4261f0:	shr    ecx,0x2
  4261f3:	je     0x4261fb
  4261f5:	rep stos DWORD PTR es:[edi],eax
  4261f7:	test   edx,edx
  4261f9:	je     0x426205
  4261fb:	mov    BYTE PTR [edi],al
  4261fd:	add    edi,0x1
  426200:	sub    edx,0x1
  426203:	jne    0x4261fb
  426205:	mov    eax,DWORD PTR [esp+0x8]
  426209:	pop    edi
  42620a:	ret    
  42620b:	mov    eax,DWORD PTR [esp+0x4]
  42620f:	ret    
  426210:	push   esi
  426211:	mov    esi,DWORD PTR [esp+0x8]
  426215:	test   esi,esi
  426217:	je     0x42639e
  42621d:	push   DWORD PTR [esi+0x4]
  426220:	call   0x4244ba
  426225:	push   DWORD PTR [esi+0x8]
  426228:	call   0x4244ba
  42622d:	push   DWORD PTR [esi+0xc]
  426230:	call   0x4244ba
  426235:	push   DWORD PTR [esi+0x10]
  426238:	call   0x4244ba
  42623d:	push   DWORD PTR [esi+0x14]
  426240:	call   0x4244ba
  426245:	push   DWORD PTR [esi+0x18]
  426248:	call   0x4244ba
  42624d:	push   DWORD PTR [esi]
  42624f:	call   0x4244ba
  426254:	push   DWORD PTR [esi+0x20]
  426257:	call   0x4244ba
  42625c:	push   DWORD PTR [esi+0x24]
  42625f:	call   0x4244ba
  426264:	push   DWORD PTR [esi+0x28]
  426267:	call   0x4244ba
  42626c:	push   DWORD PTR [esi+0x2c]
  42626f:	call   0x4244ba
  426274:	push   DWORD PTR [esi+0x30]
  426277:	call   0x4244ba
  42627c:	push   DWORD PTR [esi+0x34]
  42627f:	call   0x4244ba
  426284:	push   DWORD PTR [esi+0x1c]
  426287:	call   0x4244ba
  42628c:	push   DWORD PTR [esi+0x38]
  42628f:	call   0x4244ba
  426294:	push   DWORD PTR [esi+0x3c]
  426297:	call   0x4244ba
  42629c:	add    esp,0x40
  42629f:	push   DWORD PTR [esi+0x40]
  4262a2:	call   0x4244ba
  4262a7:	push   DWORD PTR [esi+0x44]
  4262aa:	call   0x4244ba
  4262af:	push   DWORD PTR [esi+0x48]
  4262b2:	call   0x4244ba
  4262b7:	push   DWORD PTR [esi+0x4c]
  4262ba:	call   0x4244ba
  4262bf:	push   DWORD PTR [esi+0x50]
  4262c2:	call   0x4244ba
  4262c7:	push   DWORD PTR [esi+0x54]
  4262ca:	call   0x4244ba
  4262cf:	push   DWORD PTR [esi+0x58]
  4262d2:	call   0x4244ba
  4262d7:	push   DWORD PTR [esi+0x5c]
  4262da:	call   0x4244ba
  4262df:	push   DWORD PTR [esi+0x60]
  4262e2:	call   0x4244ba
  4262e7:	push   DWORD PTR [esi+0x64]
  4262ea:	call   0x4244ba
  4262ef:	push   DWORD PTR [esi+0x68]
  4262f2:	call   0x4244ba
  4262f7:	push   DWORD PTR [esi+0x6c]
  4262fa:	call   0x4244ba
  4262ff:	push   DWORD PTR [esi+0x70]
  426302:	call   0x4244ba
  426307:	push   DWORD PTR [esi+0x74]
  42630a:	call   0x4244ba
  42630f:	push   DWORD PTR [esi+0x78]
  426312:	call   0x4244ba
  426317:	push   DWORD PTR [esi+0x7c]
  42631a:	call   0x4244ba
  42631f:	add    esp,0x40
  426322:	push   DWORD PTR [esi+0x80]
  426328:	call   0x4244ba
  42632d:	push   DWORD PTR [esi+0x84]
  426333:	call   0x4244ba
  426338:	push   DWORD PTR [esi+0x88]
  42633e:	call   0x4244ba
  426343:	push   DWORD PTR [esi+0x8c]
  426349:	call   0x4244ba
  42634e:	push   DWORD PTR [esi+0x90]
  426354:	call   0x4244ba
  426359:	push   DWORD PTR [esi+0x94]
  42635f:	call   0x4244ba
  426364:	push   DWORD PTR [esi+0x98]
  42636a:	call   0x4244ba
  42636f:	push   DWORD PTR [esi+0x9c]
  426375:	call   0x4244ba
  42637a:	push   DWORD PTR [esi+0xa0]
  426380:	call   0x4244ba
  426385:	push   DWORD PTR [esi+0xa4]
  42638b:	call   0x4244ba
  426390:	push   DWORD PTR [esi+0xa8]
  426396:	call   0x4244ba
  42639b:	add    esp,0x2c
  42639e:	pop    esi
  42639f:	ret    
  4263a0:	push   esi
  4263a1:	mov    esi,DWORD PTR [esp+0x8]
  4263a5:	test   esi,esi
  4263a7:	je     0x4263fd
  4263a9:	mov    eax,DWORD PTR [esi]
  4263ab:	mov    ecx,DWORD PTR ds:0x45c934
  4263b1:	cmp    eax,DWORD PTR [ecx]
  4263b3:	je     0x4263c4
  4263b5:	cmp    eax,DWORD PTR ds:0x45c904
  4263bb:	je     0x4263c4
  4263bd:	push   eax
  4263be:	call   0x4244ba
  4263c3:	pop    ecx
  4263c4:	mov    eax,DWORD PTR [esi+0x4]
  4263c7:	mov    ecx,DWORD PTR ds:0x45c934
  4263cd:	cmp    eax,DWORD PTR [ecx+0x4]
  4263d0:	je     0x4263e1
  4263d2:	cmp    eax,DWORD PTR ds:0x45c908
  4263d8:	je     0x4263e1
  4263da:	push   eax
  4263db:	call   0x4244ba
  4263e0:	pop    ecx
  4263e1:	mov    esi,DWORD PTR [esi+0x8]
  4263e4:	mov    eax,ds:0x45c934
  4263e9:	cmp    esi,DWORD PTR [eax+0x8]
  4263ec:	je     0x4263fd
  4263ee:	cmp    esi,DWORD PTR ds:0x45c90c
  4263f4:	je     0x4263fd
  4263f6:	push   esi
  4263f7:	call   0x4244ba
  4263fc:	pop    ecx
  4263fd:	pop    esi
  4263fe:	ret    
  4263ff:	push   esi
  426400:	mov    esi,DWORD PTR [esp+0x8]
  426404:	test   esi,esi
  426406:	je     0x4264d6
  42640c:	mov    eax,DWORD PTR [esi+0xc]
  42640f:	mov    ecx,DWORD PTR ds:0x45c934
  426415:	cmp    eax,DWORD PTR [ecx+0xc]
  426418:	je     0x426429
  42641a:	cmp    eax,DWORD PTR ds:0x45c910
  426420:	je     0x426429
  426422:	push   eax
  426423:	call   0x4244ba
  426428:	pop    ecx
  426429:	mov    eax,DWORD PTR [esi+0x10]
  42642c:	mov    ecx,DWORD PTR ds:0x45c934
  426432:	cmp    eax,DWORD PTR [ecx+0x10]
  426435:	je     0x426446
  426437:	cmp    eax,DWORD PTR ds:0x45c914
  42643d:	je     0x426446
  42643f:	push   eax
  426440:	call   0x4244ba
  426445:	pop    ecx
  426446:	mov    eax,DWORD PTR [esi+0x14]
  426449:	mov    ecx,DWORD PTR ds:0x45c934
  42644f:	cmp    eax,DWORD PTR [ecx+0x14]
  426452:	je     0x426463
  426454:	cmp    eax,DWORD PTR ds:0x45c918
  42645a:	je     0x426463
  42645c:	push   eax
  42645d:	call   0x4244ba
  426462:	pop    ecx
  426463:	mov    eax,DWORD PTR [esi+0x18]
  426466:	mov    ecx,DWORD PTR ds:0x45c934
  42646c:	cmp    eax,DWORD PTR [ecx+0x18]
  42646f:	je     0x426480
  426471:	cmp    eax,DWORD PTR ds:0x45c91c
  426477:	je     0x426480
  426479:	push   eax
  42647a:	call   0x4244ba
  42647f:	pop    ecx
  426480:	mov    eax,DWORD PTR [esi+0x1c]
  426483:	mov    ecx,DWORD PTR ds:0x45c934
  426489:	cmp    eax,DWORD PTR [ecx+0x1c]
  42648c:	je     0x42649d
  42648e:	cmp    eax,DWORD PTR ds:0x45c920
  426494:	je     0x42649d
  426496:	push   eax
  426497:	call   0x4244ba
  42649c:	pop    ecx
  42649d:	mov    eax,DWORD PTR [esi+0x20]
  4264a0:	mov    ecx,DWORD PTR ds:0x45c934
  4264a6:	cmp    eax,DWORD PTR [ecx+0x20]
  4264a9:	je     0x4264ba
  4264ab:	cmp    eax,DWORD PTR ds:0x45c924
  4264b1:	je     0x4264ba
  4264b3:	push   eax
  4264b4:	call   0x4244ba
  4264b9:	pop    ecx
  4264ba:	mov    esi,DWORD PTR [esi+0x24]
  4264bd:	mov    eax,ds:0x45c934
  4264c2:	cmp    esi,DWORD PTR [eax+0x24]
  4264c5:	je     0x4264d6
  4264c7:	cmp    esi,DWORD PTR ds:0x45c928
  4264cd:	je     0x4264d6
  4264cf:	push   esi
  4264d0:	call   0x4244ba
  4264d5:	pop    ecx
  4264d6:	pop    esi
  4264d7:	ret    
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	push   ebp
  4264e1:	mov    ebp,esp
  4264e3:	push   esi
  4264e4:	xor    eax,eax
  4264e6:	push   eax
  4264e7:	push   eax
  4264e8:	push   eax
  4264e9:	push   eax
  4264ea:	push   eax
  4264eb:	push   eax
  4264ec:	push   eax
  4264ed:	push   eax
  4264ee:	mov    edx,DWORD PTR [ebp+0xc]
  4264f1:	lea    ecx,[ecx+0x0]
  4264f4:	mov    al,BYTE PTR [edx]
  4264f6:	or     al,al
  4264f8:	je     0x426503
  4264fa:	add    edx,0x1
  4264fd:	bts    DWORD PTR [esp],eax
  426501:	jmp    0x4264f4
  426503:	mov    esi,DWORD PTR [ebp+0x8]
  426506:	or     ecx,0xffffffff
  426509:	lea    ecx,[ecx+0x0]
  42650c:	add    ecx,0x1
  42650f:	mov    al,BYTE PTR [esi]
  426511:	or     al,al
  426513:	je     0x42651e
  426515:	add    esi,0x1
  426518:	bt     DWORD PTR [esp],eax
  42651c:	jae    0x42650c
  42651e:	mov    eax,ecx
  426520:	add    esp,0x20
  426523:	pop    esi
  426524:	leave  
  426525:	ret    
  426526:	int3   
  426527:	int3   
  426528:	int3   
  426529:	int3   
  42652a:	int3   
  42652b:	int3   
  42652c:	int3   
  42652d:	int3   
  42652e:	int3   
  42652f:	int3   
  426530:	mov    edx,DWORD PTR [esp+0x4]
  426534:	mov    ecx,DWORD PTR [esp+0x8]
  426538:	test   edx,0x3
  42653e:	jne    0x42657c
  426540:	mov    eax,DWORD PTR [edx]
  426542:	cmp    al,BYTE PTR [ecx]
  426544:	jne    0x426574
  426546:	or     al,al
  426548:	je     0x426570
  42654a:	cmp    ah,BYTE PTR [ecx+0x1]
  42654d:	jne    0x426574
  42654f:	or     ah,ah
  426551:	je     0x426570
  426553:	shr    eax,0x10
  426556:	cmp    al,BYTE PTR [ecx+0x2]
  426559:	jne    0x426574
  42655b:	or     al,al
  42655d:	je     0x426570
  42655f:	cmp    ah,BYTE PTR [ecx+0x3]
  426562:	jne    0x426574
  426564:	add    ecx,0x4
  426567:	add    edx,0x4
  42656a:	or     ah,ah
  42656c:	jne    0x426540
  42656e:	mov    edi,edi
  426570:	xor    eax,eax
  426572:	ret    
  426573:	nop
  426574:	sbb    eax,eax
  426576:	shl    eax,1
  426578:	add    eax,0x1
  42657b:	ret    
  42657c:	test   edx,0x1
  426582:	je     0x42659c
  426584:	mov    al,BYTE PTR [edx]
  426586:	add    edx,0x1
  426589:	cmp    al,BYTE PTR [ecx]
  42658b:	jne    0x426574
  42658d:	add    ecx,0x1
  426590:	or     al,al
  426592:	je     0x426570
  426594:	test   edx,0x2
  42659a:	je     0x426540
  42659c:	mov    ax,WORD PTR [edx]
  42659f:	add    edx,0x2
  4265a2:	cmp    al,BYTE PTR [ecx]
  4265a4:	jne    0x426574
  4265a6:	or     al,al
  4265a8:	je     0x426570
  4265aa:	cmp    ah,BYTE PTR [ecx+0x1]
  4265ad:	jne    0x426574
  4265af:	or     ah,ah
  4265b1:	je     0x426570
  4265b3:	add    ecx,0x2
  4265b6:	jmp    0x426540
  4265b8:	int3   
  4265b9:	int3   
  4265ba:	int3   
  4265bb:	int3   
  4265bc:	int3   
  4265bd:	int3   
  4265be:	int3   
  4265bf:	int3   
  4265c0:	mov    eax,DWORD PTR [esp+0xc]
  4265c4:	test   eax,eax
  4265c6:	je     0x426612
  4265c8:	mov    edx,DWORD PTR [esp+0x4]
  4265cc:	push   esi
  4265cd:	push   edi
  4265ce:	mov    esi,edx
  4265d0:	mov    edi,DWORD PTR [esp+0x10]
  4265d4:	or     edx,edi
  4265d6:	and    edx,0x3
  4265d9:	je     0x426613
  4265db:	test   eax,0x1
  4265e0:	je     0x4265f3
  4265e2:	mov    cl,BYTE PTR [esi]
  4265e4:	cmp    cl,BYTE PTR [edi]
  4265e6:	jne    0x426640
  4265e8:	add    esi,0x1
  4265eb:	add    edi,0x1
  4265ee:	sub    eax,0x1
  4265f1:	je     0x426610
  4265f3:	mov    cl,BYTE PTR [esi]
  4265f5:	mov    dl,BYTE PTR [edi]
  4265f7:	cmp    cl,dl
  4265f9:	jne    0x426640
  4265fb:	mov    cl,BYTE PTR [esi+0x1]
  4265fe:	mov    dl,BYTE PTR [edi+0x1]
  426601:	cmp    cl,dl
  426603:	jne    0x426640
  426605:	add    edi,0x2
  426608:	add    esi,0x2
  42660b:	sub    eax,0x2
  42660e:	jne    0x4265f3
  426610:	pop    edi
  426611:	pop    esi
  426612:	ret    
  426613:	mov    ecx,eax
  426615:	and    eax,0x3
  426618:	shr    ecx,0x2
  42661b:	je     0x426648
  42661d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42661f:	je     0x426648
  426621:	mov    ecx,DWORD PTR [esi-0x4]
  426624:	mov    edx,DWORD PTR [edi-0x4]
  426627:	cmp    cl,dl
  426629:	jne    0x42663b
  42662b:	cmp    ch,dh
  42662d:	jne    0x42663b
  42662f:	shr    ecx,0x10
  426632:	shr    edx,0x10
  426635:	cmp    cl,dl
  426637:	jne    0x42663b
  426639:	cmp    ch,dh
  42663b:	mov    eax,0x0
  426640:	sbb    eax,eax
  426642:	pop    edi
  426643:	sbb    eax,0xffffffff
  426646:	pop    esi
  426647:	ret    
  426648:	test   eax,eax
  42664a:	je     0x426610
  42664c:	mov    edx,DWORD PTR [esi]
  42664e:	mov    ecx,DWORD PTR [edi]
  426650:	cmp    dl,cl
  426652:	jne    0x42663b
  426654:	sub    eax,0x1
  426657:	je     0x426675
  426659:	cmp    dh,ch
  42665b:	jne    0x42663b
  42665d:	sub    eax,0x1
  426660:	je     0x426675
  426662:	and    ecx,0xff0000
  426668:	and    edx,0xff0000
  42666e:	cmp    edx,ecx
  426670:	jne    0x42663b
  426672:	sub    eax,0x1
  426675:	pop    edi
  426676:	pop    esi
  426677:	ret    
  426678:	int3   
  426679:	int3   
  42667a:	int3   
  42667b:	int3   
  42667c:	int3   
  42667d:	int3   
  42667e:	int3   
  42667f:	int3   
  426680:	push   ebp
  426681:	mov    ebp,esp
  426683:	push   edi
  426684:	push   esi
  426685:	push   ebx
  426686:	mov    ecx,DWORD PTR [ebp+0x10]
  426689:	jecxz  0x4266b2
  42668b:	mov    ebx,ecx
  42668d:	mov    edi,DWORD PTR [ebp+0x8]
  426690:	mov    esi,edi
  426692:	xor    eax,eax
  426694:	repnz scas al,BYTE PTR es:[edi]
  426696:	neg    ecx
  426698:	add    ecx,ebx
  42669a:	mov    edi,esi
  42669c:	mov    esi,DWORD PTR [ebp+0xc]
  42669f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266a1:	mov    al,BYTE PTR [esi-0x1]
  4266a4:	xor    ecx,ecx
  4266a6:	cmp    al,BYTE PTR [edi-0x1]
  4266a9:	ja     0x4266b0
  4266ab:	je     0x4266b2
  4266ad:	sub    ecx,0x2
  4266b0:	not    ecx
  4266b2:	mov    eax,ecx
  4266b4:	pop    ebx
  4266b5:	pop    esi
  4266b6:	pop    edi
  4266b7:	leave  
  4266b8:	ret    
  4266b9:	int3   
  4266ba:	int3   
  4266bb:	int3   
  4266bc:	int3   
  4266bd:	int3   
  4266be:	int3   
  4266bf:	int3   
  4266c0:	push   ebp
  4266c1:	mov    ebp,esp
  4266c3:	push   esi
  4266c4:	xor    eax,eax
  4266c6:	push   eax
  4266c7:	push   eax
  4266c8:	push   eax
  4266c9:	push   eax
  4266ca:	push   eax
  4266cb:	push   eax
  4266cc:	push   eax
  4266cd:	push   eax
  4266ce:	mov    edx,DWORD PTR [ebp+0xc]
  4266d1:	lea    ecx,[ecx+0x0]
  4266d4:	mov    al,BYTE PTR [edx]
  4266d6:	or     al,al
  4266d8:	je     0x4266e3
  4266da:	add    edx,0x1
  4266dd:	bts    DWORD PTR [esp],eax
  4266e1:	jmp    0x4266d4
  4266e3:	mov    esi,DWORD PTR [ebp+0x8]
  4266e6:	mov    edi,edi
  4266e8:	mov    al,BYTE PTR [esi]
  4266ea:	or     al,al
  4266ec:	je     0x4266fa
  4266ee:	add    esi,0x1
  4266f1:	bt     DWORD PTR [esp],eax
  4266f5:	jae    0x4266e8
  4266f7:	lea    eax,[esi-0x1]
  4266fa:	add    esp,0x20
  4266fd:	pop    esi
  4266fe:	leave  
  4266ff:	ret    
  426700:	push   ebp
  426701:	mov    ebp,esp
  426703:	push   ebx
  426704:	push   esi
  426705:	push   edi
  426706:	push   ebp
  426707:	push   0x0
  426709:	push   0x0
  42670b:	push   0x426718
  426710:	push   DWORD PTR [ebp+0x8]
  426713:	call   0x42718e
  426718:	pop    ebp
  426719:	pop    edi
  42671a:	pop    esi
  42671b:	pop    ebx
  42671c:	mov    esp,ebp
  42671e:	pop    ebp
  42671f:	ret    
  426720:	mov    ecx,DWORD PTR [esp+0x4]
  426724:	test   DWORD PTR [ecx+0x4],0x6
  42672b:	mov    eax,0x1
  426730:	je     0x426741
  426732:	mov    eax,DWORD PTR [esp+0x8]
  426736:	mov    edx,DWORD PTR [esp+0x10]
  42673a:	mov    DWORD PTR [edx],eax
  42673c:	mov    eax,0x3
  426741:	ret    
  426742:	push   ebx
  426743:	push   esi
  426744:	push   edi
  426745:	mov    eax,DWORD PTR [esp+0x10]
  426749:	push   eax
  42674a:	push   0xfffffffe
  42674c:	push   0x426720
  426751:	push   DWORD PTR fs:0x0
  426758:	mov    DWORD PTR fs:0x0,esp
  42675f:	mov    eax,DWORD PTR [esp+0x20]
  426763:	mov    ebx,DWORD PTR [eax+0x8]
  426766:	mov    esi,DWORD PTR [eax+0xc]
  426769:	cmp    esi,0xffffffff
  42676c:	je     0x42679c
  42676e:	cmp    esi,DWORD PTR [esp+0x24]
  426772:	je     0x42679c
  426774:	lea    esi,[esi+esi*2]
  426777:	mov    ecx,DWORD PTR [ebx+esi*4]
  42677a:	mov    DWORD PTR [esp+0x8],ecx
  42677e:	mov    DWORD PTR [eax+0xc],ecx
  426781:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426786:	jne    0x42679a
  426788:	push   0x101
  42678d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426791:	call   0x4267d6
  426796:	call   DWORD PTR [ebx+esi*4+0x8]
  42679a:	jmp    0x42675f
  42679c:	pop    DWORD PTR fs:0x0
  4267a3:	add    esp,0xc
  4267a6:	pop    edi
  4267a7:	pop    esi
  4267a8:	pop    ebx
  4267a9:	ret    
  4267aa:	xor    eax,eax
  4267ac:	mov    ecx,DWORD PTR fs:0x0
  4267b3:	cmp    DWORD PTR [ecx+0x4],0x426720
  4267ba:	jne    0x4267cc
  4267bc:	mov    edx,DWORD PTR [ecx+0xc]
  4267bf:	mov    edx,DWORD PTR [edx+0xc]
  4267c2:	cmp    DWORD PTR [ecx+0x8],edx
  4267c5:	jne    0x4267cc
  4267c7:	mov    eax,0x1
  4267cc:	ret    
  4267cd:	push   ebx
  4267ce:	push   ecx
  4267cf:	mov    ebx,0x45c94c
  4267d4:	jmp    0x4267e0
  4267d6:	push   ebx
  4267d7:	push   ecx
  4267d8:	mov    ebx,0x45c94c
  4267dd:	mov    ecx,DWORD PTR [ebp+0x8]
  4267e0:	mov    DWORD PTR [ebx+0x8],ecx
  4267e3:	mov    DWORD PTR [ebx+0x4],eax
  4267e6:	mov    DWORD PTR [ebx+0xc],ebp
  4267e9:	pop    ecx
  4267ea:	pop    ebx
  4267eb:	ret    0x4
  4267ee:	int3   
  4267ef:	int3   
  4267f0:	push   ebp
  4267f1:	mov    ebp,esp
  4267f3:	push   edi
  4267f4:	push   esi
  4267f5:	mov    esi,DWORD PTR [ebp+0xc]
  4267f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267fb:	mov    edi,DWORD PTR [ebp+0x8]
  4267fe:	mov    eax,ecx
  426800:	mov    edx,ecx
  426802:	add    eax,esi
  426804:	cmp    edi,esi
  426806:	jbe    0x426810
  426808:	cmp    edi,eax
  42680a:	jb     0x42698c
  426810:	test   edi,0x3
  426816:	jne    0x42682c
  426818:	shr    ecx,0x2
  42681b:	and    edx,0x3
  42681e:	cmp    ecx,0x8
  426821:	jb     0x42684c
  426823:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426825:	jmp    DWORD PTR [edx*4+0x42693c]
  42682c:	mov    eax,edi
  42682e:	mov    edx,0x3
  426833:	sub    ecx,0x4
  426836:	jb     0x426844
  426838:	and    eax,0x3
  42683b:	add    ecx,eax
  42683d:	jmp    DWORD PTR [eax*4+0x426850]
  426844:	jmp    DWORD PTR [ecx*4+0x42694c]
  42684b:	nop
  42684c:	jmp    DWORD PTR [ecx*4+0x4268d0]
  426853:	nop
  426854:	pusha  
  426855:	push   0x688c0042
  42685a:	inc    edx
  42685b:	add    BYTE PTR [eax+0x23004268],dh
  426861:	ror    DWORD PTR [edx-0x75f877fa],1
  426867:	inc    esi
  426868:	add    DWORD PTR [eax+0x468a0147],ecx
  42686e:	add    al,cl
  426870:	jmp    0x289f077
  426875:	add    esi,0x3
  426878:	add    edi,0x3
  42687b:	cmp    ecx,0x8
  42687e:	jb     0x42684c
  426880:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426882:	jmp    DWORD PTR [edx*4+0x42693c]
  426889:	lea    ecx,[ecx+0x0]
  42688c:	and    edx,ecx
  42688e:	mov    al,BYTE PTR [esi]
  426890:	mov    BYTE PTR [edi],al
  426892:	mov    al,BYTE PTR [esi+0x1]
  426895:	shr    ecx,0x2
  426898:	mov    BYTE PTR [edi+0x1],al
  42689b:	add    esi,0x2
  42689e:	add    edi,0x2
  4268a1:	cmp    ecx,0x8
  4268a4:	jb     0x42684c
  4268a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268a8:	jmp    DWORD PTR [edx*4+0x42693c]
  4268af:	nop
  4268b0:	and    edx,ecx
  4268b2:	mov    al,BYTE PTR [esi]
  4268b4:	mov    BYTE PTR [edi],al
  4268b6:	add    esi,0x1
  4268b9:	shr    ecx,0x2
  4268bc:	add    edi,0x1
  4268bf:	cmp    ecx,0x8
  4268c2:	jb     0x42684c
  4268c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268c6:	jmp    DWORD PTR [edx*4+0x42693c]
  4268cd:	lea    ecx,[ecx+0x0]
  4268d0:	xor    ebp,DWORD PTR [ecx+0x42]
  4268d3:	add    BYTE PTR [eax],ah
  4268d5:	imul   eax,DWORD PTR [edx+0x0],0x426918
  4268dc:	adc    BYTE PTR [ecx+0x42],ch
  4268df:	add    BYTE PTR [eax],cl
  4268e1:	imul   eax,DWORD PTR [edx+0x0],0x426900
  4268e8:	clc    
  4268e9:	push   0x68f00042
  4268ee:	inc    edx
  4268ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268f5:	inc    esp
  4268f6:	(bad)  
  4268f7:	in     al,0x8b
  4268f9:	inc    esp
  4268fa:	mov    gs,eax
  4268fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426900:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426904:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426908:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42690c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  426910:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  426914:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  426918:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42691c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  426920:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  426924:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  426928:	lea    eax,[ecx*4+0x0]
  42692f:	add    esi,eax
  426931:	add    edi,eax
  426933:	jmp    DWORD PTR [edx*4+0x42693c]
  42693a:	mov    edi,edi
  42693c:	dec    esp
  42693d:	imul   eax,DWORD PTR [edx+0x0],0x426954
  426944:	pusha  
  426945:	imul   eax,DWORD PTR [edx+0x0],0x426974
  42694c:	mov    eax,DWORD PTR [ebp+0x8]
  42694f:	pop    esi
  426950:	pop    edi
  426951:	leave  
  426952:	ret    
  426953:	nop
  426954:	mov    al,BYTE PTR [esi]
  426956:	mov    BYTE PTR [edi],al
  426958:	mov    eax,DWORD PTR [ebp+0x8]
  42695b:	pop    esi
  42695c:	pop    edi
  42695d:	leave  
  42695e:	ret    
  42695f:	nop
  426960:	mov    al,BYTE PTR [esi]
  426962:	mov    BYTE PTR [edi],al
  426964:	mov    al,BYTE PTR [esi+0x1]
  426967:	mov    BYTE PTR [edi+0x1],al
  42696a:	mov    eax,DWORD PTR [ebp+0x8]
  42696d:	pop    esi
  42696e:	pop    edi
  42696f:	leave  
  426970:	ret    
  426971:	lea    ecx,[ecx+0x0]
  426974:	mov    al,BYTE PTR [esi]
  426976:	mov    BYTE PTR [edi],al
  426978:	mov    al,BYTE PTR [esi+0x1]
  42697b:	mov    BYTE PTR [edi+0x1],al
  42697e:	mov    al,BYTE PTR [esi+0x2]
  426981:	mov    BYTE PTR [edi+0x2],al
  426984:	mov    eax,DWORD PTR [ebp+0x8]
  426987:	pop    esi
  426988:	pop    edi
  426989:	leave  
  42698a:	ret    
  42698b:	nop
  42698c:	lea    esi,[ecx+esi*1-0x4]
  426990:	lea    edi,[ecx+edi*1-0x4]
  426994:	test   edi,0x3
  42699a:	jne    0x4269c0
  42699c:	shr    ecx,0x2
  42699f:	and    edx,0x3
  4269a2:	cmp    ecx,0x8
  4269a5:	jb     0x4269b4
  4269a7:	std    
  4269a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269aa:	cld    
  4269ab:	jmp    DWORD PTR [edx*4+0x426ad8]
  4269b2:	mov    edi,edi
  4269b4:	neg    ecx
  4269b6:	jmp    DWORD PTR [ecx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    eax,edi
  4269c2:	mov    edx,0x3
  4269c7:	cmp    ecx,0x4
  4269ca:	jb     0x4269d8
  4269cc:	and    eax,0x3
  4269cf:	sub    ecx,eax
  4269d1:	jmp    DWORD PTR [eax*4+0x4269dc]
  4269d8:	jmp    DWORD PTR [ecx*4+0x426ad8]
  4269df:	nop
  4269e0:	in     al,dx
  4269e1:	imul   eax,DWORD PTR [edx+0x0],0x426a10
  4269e8:	cmp    BYTE PTR [edx+0x42],ch
  4269eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4269f1:	mov    BYTE PTR [edi+0x3],al
  4269f4:	sub    esi,0x1
  4269f7:	shr    ecx,0x2
  4269fa:	sub    edi,0x1
  4269fd:	cmp    ecx,0x8
  426a00:	jb     0x4269b4
  426a02:	std    
  426a03:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a05:	cld    
  426a06:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a0d:	lea    ecx,[ecx+0x0]
  426a10:	mov    al,BYTE PTR [esi+0x3]
  426a13:	and    edx,ecx
  426a15:	mov    BYTE PTR [edi+0x3],al
  426a18:	mov    al,BYTE PTR [esi+0x2]
  426a1b:	shr    ecx,0x2
  426a1e:	mov    BYTE PTR [edi+0x2],al
  426a21:	sub    esi,0x2
  426a24:	sub    edi,0x2
  426a27:	cmp    ecx,0x8
  426a2a:	jb     0x4269b4
  426a2c:	std    
  426a2d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a2f:	cld    
  426a30:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a37:	nop
  426a38:	mov    al,BYTE PTR [esi+0x3]
  426a3b:	and    edx,ecx
  426a3d:	mov    BYTE PTR [edi+0x3],al
  426a40:	mov    al,BYTE PTR [esi+0x2]
  426a43:	mov    BYTE PTR [edi+0x2],al
  426a46:	mov    al,BYTE PTR [esi+0x1]
  426a49:	shr    ecx,0x2
  426a4c:	mov    BYTE PTR [edi+0x1],al
  426a4f:	sub    esi,0x3
  426a52:	sub    edi,0x3
  426a55:	cmp    ecx,0x8
  426a58:	jb     0x4269b4
  426a5e:	std    
  426a5f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a61:	cld    
  426a62:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a69:	lea    ecx,[ecx+0x0]
  426a6c:	mov    WORD PTR [edx+0x42],gs
  426a6f:	add    BYTE PTR [edx+ebp*2+0x6a9c0042],dl
  426a76:	inc    edx
  426a77:	add    BYTE PTR [edx+ebp*2+0x6aac0042],ah
  426a7e:	inc    edx
  426a7f:	add    BYTE PTR [edx+ebp*2+0x6abc0042],dh
  426a86:	inc    edx
  426a87:	add    bh,cl
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a91:	inc    esp
  426a92:	(bad)  
  426a93:	sbb    al,0x8b
  426a95:	inc    esp
  426a96:	mov    ds,WORD PTR [eax]
  426a98:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a9c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426aa0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426aa4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426aa8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426aac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426ab0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426ab4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426ab8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426abc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426ac0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426ac4:	lea    eax,[ecx*4+0x0]
  426acb:	add    esi,eax
  426acd:	add    edi,eax
  426acf:	jmp    DWORD PTR [edx*4+0x426ad8]
  426ad6:	mov    edi,edi
  426ad8:	call   0xf042ad47
  426add:	push   0x42
  426adf:	add    BYTE PTR [eax],al
  426ae1:	imul   eax,DWORD PTR [edx+0x0],0x14
  426ae5:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426ae9:	inc    ebp
  426aea:	or     BYTE PTR [esi+0x5f],bl
  426aed:	leave  
  426aee:	ret    
  426aef:	nop
  426af0:	mov    al,BYTE PTR [esi+0x3]
  426af3:	mov    BYTE PTR [edi+0x3],al
  426af6:	mov    eax,DWORD PTR [ebp+0x8]
  426af9:	pop    esi
  426afa:	pop    edi
  426afb:	leave  
  426afc:	ret    
  426afd:	lea    ecx,[ecx+0x0]
  426b00:	mov    al,BYTE PTR [esi+0x3]
  426b03:	mov    BYTE PTR [edi+0x3],al
  426b06:	mov    al,BYTE PTR [esi+0x2]
  426b09:	mov    BYTE PTR [edi+0x2],al
  426b0c:	mov    eax,DWORD PTR [ebp+0x8]
  426b0f:	pop    esi
  426b10:	pop    edi
  426b11:	leave  
  426b12:	ret    
  426b13:	nop
  426b14:	mov    al,BYTE PTR [esi+0x3]
  426b17:	mov    BYTE PTR [edi+0x3],al
  426b1a:	mov    al,BYTE PTR [esi+0x2]
  426b1d:	mov    BYTE PTR [edi+0x2],al
  426b20:	mov    al,BYTE PTR [esi+0x1]
  426b23:	mov    BYTE PTR [edi+0x1],al
  426b26:	mov    eax,DWORD PTR [ebp+0x8]
  426b29:	pop    esi
  426b2a:	pop    edi
  426b2b:	leave  
  426b2c:	ret    
  426b2d:	push   ebp
  426b2e:	mov    ebp,esp
  426b30:	sub    esp,0xc
  426b33:	mov    eax,ds:0x45c430
  426b38:	xor    eax,DWORD PTR [ebp+0x4]
  426b3b:	and    BYTE PTR [ebp-0x6],0x0
  426b3f:	push   0x6
  426b41:	mov    DWORD PTR [ebp-0x4],eax
  426b44:	lea    eax,[ebp-0xc]
  426b47:	push   eax
  426b48:	push   0x1004
  426b4d:	push   DWORD PTR [ebp+0x8]
  426b50:	call   DWORD PTR ds:0x4280e0
  426b56:	test   eax,eax
  426b58:	jne    0x426b5f
  426b5a:	or     eax,0xffffffff
  426b5d:	jmp    0x426b69
  426b5f:	lea    eax,[ebp-0xc]
  426b62:	push   eax
  426b63:	call   0x426e6e
  426b68:	pop    ecx
  426b69:	mov    ecx,DWORD PTR [ebp-0x4]
  426b6c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b6f:	call   0x423f7c
  426b74:	leave  
  426b75:	ret    
  426b76:	push   0x38
  426b78:	push   0x428eb0
  426b7d:	call   0x4238a8
  426b82:	mov    eax,ds:0x45c430
  426b87:	xor    eax,DWORD PTR [ebp+0x4]
  426b8a:	mov    DWORD PTR [ebp-0x1c],eax
  426b8d:	xor    edi,edi
  426b8f:	mov    DWORD PTR [ebp-0x20],edi
  426b92:	mov    DWORD PTR [ebp-0x24],edi
  426b95:	mov    eax,DWORD PTR [ebp+0x14]
  426b98:	mov    ebx,DWORD PTR [eax]
  426b9a:	mov    DWORD PTR [ebp-0x28],ebx
  426b9d:	mov    DWORD PTR [ebp-0x2c],edi
  426ba0:	mov    eax,DWORD PTR [ebp+0x8]
  426ba3:	cmp    eax,DWORD PTR [ebp+0xc]
  426ba6:	je     0x426d1f
  426bac:	lea    ecx,[ebp-0x40]
  426baf:	push   ecx
  426bb0:	push   eax
  426bb1:	mov    esi,DWORD PTR ds:0x4280a4
  426bb7:	call   esi
  426bb9:	test   eax,eax
  426bbb:	je     0x426bdd
  426bbd:	cmp    DWORD PTR [ebp-0x40],0x1
  426bc1:	jne    0x426bdd
  426bc3:	lea    eax,[ebp-0x40]
  426bc6:	push   eax
  426bc7:	push   DWORD PTR [ebp+0xc]
  426bca:	call   esi
  426bcc:	test   eax,eax
  426bce:	je     0x426bdd
  426bd0:	cmp    DWORD PTR [ebp-0x40],0x1
  426bd4:	jne    0x426bdd
  426bd6:	mov    DWORD PTR [ebp-0x2c],0x1
  426bdd:	cmp    DWORD PTR [ebp-0x2c],edi
  426be0:	je     0x426bfc
  426be2:	cmp    ebx,0xffffffff
  426be5:	je     0x426beb
  426be7:	mov    esi,ebx
  426be9:	jmp    0x426bf7
  426beb:	push   DWORD PTR [ebp+0x10]
  426bee:	call   0x423ec0
  426bf3:	pop    ecx
  426bf4:	mov    esi,eax
  426bf6:	inc    esi
  426bf7:	mov    DWORD PTR [ebp-0x44],esi
  426bfa:	jmp    0x426bff
  426bfc:	mov    esi,DWORD PTR [ebp-0x44]
  426bff:	cmp    DWORD PTR [ebp-0x2c],edi
  426c02:	jne    0x426c1e
  426c04:	push   edi
  426c05:	push   edi
  426c06:	push   ebx
  426c07:	push   DWORD PTR [ebp+0x10]
  426c0a:	push   0x1
  426c0c:	push   DWORD PTR [ebp+0x8]
  426c0f:	call   DWORD PTR ds:0x4280d0
  426c15:	mov    esi,eax
  426c17:	mov    DWORD PTR [ebp-0x44],esi
  426c1a:	cmp    esi,edi
  426c1c:	je     0x426c76
  426c1e:	mov    DWORD PTR [ebp-0x4],edi
  426c21:	lea    eax,[esi+esi*1]
  426c24:	add    eax,0x3
  426c27:	and    eax,0xfffffffc
  426c2a:	call   0x423900
  426c2f:	mov    DWORD PTR [ebp-0x18],esp
  426c32:	mov    ebx,esp
  426c34:	mov    DWORD PTR [ebp-0x48],ebx
  426c37:	lea    eax,[esi+esi*1]
  426c3a:	push   eax
  426c3b:	push   edi
  426c3c:	push   ebx
  426c3d:	call   0x4261b0
  426c42:	add    esp,0xc
  426c45:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c49:	jmp    0x426c62
  426c4b:	xor    eax,eax
  426c4d:	inc    eax
  426c4e:	ret    
  426c4f:	mov    esp,DWORD PTR [ebp-0x18]
  426c52:	call   0x426d45
  426c57:	xor    edi,edi
  426c59:	xor    ebx,ebx
  426c5b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c5f:	mov    esi,DWORD PTR [ebp-0x44]
  426c62:	cmp    ebx,edi
  426c64:	jne    0x426c84
  426c66:	push   esi
  426c67:	push   0x2
  426c69:	call   0x4249c8
  426c6e:	pop    ecx
  426c6f:	pop    ecx
  426c70:	mov    ebx,eax
  426c72:	cmp    ebx,edi
  426c74:	jne    0x426c7d
  426c76:	xor    eax,eax
  426c78:	jmp    0x426d31
  426c7d:	mov    DWORD PTR [ebp-0x24],0x1
  426c84:	push   esi
  426c85:	push   ebx
  426c86:	push   DWORD PTR [ebp-0x28]
  426c89:	push   DWORD PTR [ebp+0x10]
  426c8c:	push   0x1
  426c8e:	push   DWORD PTR [ebp+0x8]
  426c91:	call   DWORD PTR ds:0x4280d0
  426c97:	test   eax,eax
  426c99:	je     0x426d22
  426c9f:	cmp    DWORD PTR [ebp+0x18],edi
  426ca2:	je     0x426cc4
  426ca4:	push   edi
  426ca5:	push   edi
  426ca6:	push   DWORD PTR [ebp+0x1c]
  426ca9:	push   DWORD PTR [ebp+0x18]
  426cac:	push   esi
  426cad:	push   ebx
  426cae:	push   edi
  426caf:	push   DWORD PTR [ebp+0xc]
  426cb2:	call   DWORD PTR ds:0x428054
  426cb8:	test   eax,eax
  426cba:	je     0x426d22
  426cbc:	mov    eax,DWORD PTR [ebp+0x18]
  426cbf:	mov    DWORD PTR [ebp-0x20],eax
  426cc2:	jmp    0x426d22
  426cc4:	cmp    DWORD PTR [ebp-0x2c],edi
  426cc7:	jne    0x426cdf
  426cc9:	push   edi
  426cca:	push   edi
  426ccb:	push   edi
  426ccc:	push   edi
  426ccd:	push   esi
  426cce:	push   ebx
  426ccf:	push   edi
  426cd0:	push   DWORD PTR [ebp+0xc]
  426cd3:	call   DWORD PTR ds:0x428054
  426cd9:	mov    esi,eax
  426cdb:	cmp    esi,edi
  426cdd:	je     0x426d22
  426cdf:	push   esi
  426ce0:	push   0x1
  426ce2:	call   0x4249c8
  426ce7:	pop    ecx
  426ce8:	pop    ecx
  426ce9:	mov    DWORD PTR [ebp-0x20],eax
  426cec:	cmp    eax,edi
  426cee:	je     0x426d22
  426cf0:	push   edi
  426cf1:	push   edi
  426cf2:	push   esi
  426cf3:	push   eax
  426cf4:	push   esi
  426cf5:	push   ebx
  426cf6:	push   edi
  426cf7:	push   DWORD PTR [ebp+0xc]
  426cfa:	call   DWORD PTR ds:0x428054
  426d00:	cmp    eax,edi
  426d02:	jne    0x426d12
  426d04:	push   DWORD PTR [ebp-0x20]
  426d07:	call   0x4244ba
  426d0c:	pop    ecx
  426d0d:	mov    DWORD PTR [ebp-0x20],edi
  426d10:	jmp    0x426d22
  426d12:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426d16:	je     0x426d22
  426d18:	mov    ecx,DWORD PTR [ebp+0x14]
  426d1b:	mov    DWORD PTR [ecx],eax
  426d1d:	jmp    0x426d22
  426d1f:	mov    ebx,DWORD PTR [ebp-0x48]
  426d22:	cmp    DWORD PTR [ebp-0x24],edi
  426d25:	je     0x426d2e
  426d27:	push   ebx
  426d28:	call   0x4244ba
  426d2d:	pop    ecx
  426d2e:	mov    eax,DWORD PTR [ebp-0x20]
  426d31:	lea    esp,[ebp-0x54]
  426d34:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d37:	xor    ecx,DWORD PTR [ebp+0x4]
  426d3a:	call   0x423f7c
  426d3f:	call   0x4238e3
  426d44:	ret    
  426d45:	push   ebp
  426d46:	mov    ebp,esp
  426d48:	sub    esp,0x48
  426d4b:	push   ebx
  426d4c:	push   esi
  426d4d:	push   edi
  426d4e:	push   0x4
  426d50:	pop    eax
  426d51:	call   0x423900
  426d56:	mov    ebx,esp
  426d58:	push   0x1c
  426d5a:	lea    eax,[ebp-0x24]
  426d5d:	push   eax
  426d5e:	push   ebx
  426d5f:	call   DWORD PTR ds:0x4280f0
  426d65:	test   eax,eax
  426d67:	je     0x426dda
  426d69:	mov    edi,DWORD PTR [ebp-0x20]
  426d6c:	lea    eax,[ebp-0x48]
  426d6f:	push   eax
  426d70:	call   DWORD PTR ds:0x4280ec
  426d76:	mov    eax,DWORD PTR [ebp-0x44]
  426d79:	lea    esi,[eax-0x1]
  426d7c:	not    esi
  426d7e:	and    esi,ebx
  426d80:	sub    esi,eax
  426d82:	mov    DWORD PTR [ebp-0x4],eax
  426d85:	mov    eax,ds:0x45cac4
  426d8a:	mov    ecx,eax
  426d8c:	dec    ecx
  426d8d:	neg    ecx
  426d8f:	sbb    ecx,ecx
  426d91:	and    ecx,0xffff1000
  426d97:	add    ecx,0x11000
  426d9d:	add    ecx,edi
  426d9f:	cmp    esi,ecx
  426da1:	jb     0x426dda
  426da3:	cmp    eax,0x1
  426da6:	je     0x426df2
  426da8:	mov    ebx,edi
  426daa:	mov    edi,0x1000
  426daf:	push   0x1c
  426db1:	lea    eax,[ebp-0x24]
  426db4:	push   eax
  426db5:	push   ebx
  426db6:	call   DWORD PTR ds:0x4280f0
  426dbc:	test   eax,eax
  426dbe:	je     0x426dda
  426dc0:	add    ebx,DWORD PTR [ebp-0x18]
  426dc3:	test   DWORD PTR [ebp-0x14],edi
  426dc6:	je     0x426daf
  426dc8:	test   BYTE PTR [ebp-0xf],0x1
  426dcc:	mov    ebx,DWORD PTR [ebp-0x24]
  426dcf:	je     0x426dd6
  426dd1:	xor    eax,eax
  426dd3:	inc    eax
  426dd4:	jmp    0x426e0e
  426dd6:	cmp    esi,ebx
  426dd8:	jae    0x426dde
  426dda:	xor    eax,eax
  426ddc:	jmp    0x426e0e
  426dde:	push   0x4
  426de0:	push   edi
  426de1:	push   DWORD PTR [ebp-0x4]
  426de4:	push   ebx
  426de5:	call   DWORD PTR ds:0x4280b0
  426deb:	mov    eax,ds:0x45cac4
  426df0:	jmp    0x426df4
  426df2:	mov    ebx,esi
  426df4:	dec    eax
  426df5:	neg    eax
  426df7:	sbb    eax,eax
  426df9:	and    eax,0x103
  426dfe:	lea    ecx,[ebp-0x8]
  426e01:	push   ecx
  426e02:	inc    eax
  426e03:	push   eax
  426e04:	push   DWORD PTR [ebp-0x4]
  426e07:	push   ebx
  426e08:	call   DWORD PTR ds:0x4280e8
  426e0e:	lea    esp,[ebp-0x54]
  426e11:	pop    edi
  426e12:	pop    esi
  426e13:	pop    ebx
  426e14:	leave  
  426e15:	ret    
  426e16:	int3   
  426e17:	int3   
  426e18:	int3   
  426e19:	int3   
  426e1a:	int3   
  426e1b:	int3   
  426e1c:	int3   
  426e1d:	int3   
  426e1e:	int3   
  426e1f:	int3   
  426e20:	push   ebp
  426e21:	mov    ebp,esp
  426e23:	push   edi
  426e24:	push   esi
  426e25:	push   ebx
  426e26:	mov    esi,DWORD PTR [ebp+0xc]
  426e29:	mov    edi,DWORD PTR [ebp+0x8]
  426e2c:	mov    al,0xff
  426e2e:	mov    edi,edi
  426e30:	or     al,al
  426e32:	je     0x426e66
  426e34:	mov    al,BYTE PTR [esi]
  426e36:	add    esi,0x1
  426e39:	mov    ah,BYTE PTR [edi]
  426e3b:	add    edi,0x1
  426e3e:	cmp    ah,al
  426e40:	je     0x426e30
  426e42:	sub    al,0x41
  426e44:	cmp    al,0x1a
  426e46:	sbb    cl,cl
  426e48:	and    cl,0x20
  426e4b:	add    al,cl
  426e4d:	add    al,0x41
  426e4f:	xchg   al,ah
  426e51:	sub    al,0x41
  426e53:	cmp    al,0x1a
  426e55:	sbb    cl,cl
  426e57:	and    cl,0x20
  426e5a:	add    al,cl
  426e5c:	add    al,0x41
  426e5e:	cmp    al,ah
  426e60:	je     0x426e30
  426e62:	sbb    al,al
  426e64:	sbb    al,0xff
  426e66:	movsx  eax,al
  426e69:	pop    ebx
  426e6a:	pop    esi
  426e6b:	pop    edi
  426e6c:	leave  
  426e6d:	ret    
  426e6e:	push   esi
  426e6f:	push   edi
  426e70:	call   0x42375d
  426e75:	mov    edi,DWORD PTR [eax+0x64]
  426e78:	cmp    edi,DWORD PTR ds:0x45c58c
  426e7e:	je     0x426e87
  426e80:	call   0x424c0f
  426e85:	mov    edi,eax
  426e87:	mov    esi,DWORD PTR [esp+0xc]
  426e8b:	cmp    DWORD PTR [edi+0x28],0x1
  426e8f:	movzx  eax,BYTE PTR [esi]
  426e92:	jle    0x426ea2
  426e94:	push   0x8
  426e96:	push   eax
  426e97:	push   edi
  426e98:	call   0x426ef6
  426e9d:	add    esp,0xc
  426ea0:	jmp    0x426eac
  426ea2:	mov    ecx,DWORD PTR [edi+0x48]
  426ea5:	movzx  eax,BYTE PTR [ecx+eax*2]
  426ea9:	and    eax,0x8
  426eac:	test   eax,eax
  426eae:	je     0x426eb3
  426eb0:	inc    esi
  426eb1:	jmp    0x426e8b
  426eb3:	movzx  ecx,BYTE PTR [esi]
  426eb6:	inc    esi
  426eb7:	cmp    ecx,0x2d
  426eba:	mov    edx,ecx
  426ebc:	je     0x426ec3
  426ebe:	cmp    ecx,0x2b
  426ec1:	jne    0x426ec7
  426ec3:	movzx  ecx,BYTE PTR [esi]
  426ec6:	inc    esi
  426ec7:	xor    eax,eax
  426ec9:	cmp    ecx,0x30
  426ecc:	jl     0x426ed8
  426ece:	cmp    ecx,0x39
  426ed1:	jg     0x426ed8
  426ed3:	sub    ecx,0x30
  426ed6:	jmp    0x426edb
  426ed8:	or     ecx,0xffffffff
  426edb:	cmp    ecx,0xffffffff
  426ede:	je     0x426eec
  426ee0:	lea    eax,[eax+eax*4]
  426ee3:	lea    eax,[ecx+eax*2]
  426ee6:	movzx  ecx,BYTE PTR [esi]
  426ee9:	inc    esi
  426eea:	jmp    0x426ec9
  426eec:	cmp    edx,0x2d
  426eef:	pop    edi
  426ef0:	pop    esi
  426ef1:	jne    0x426ef5
  426ef3:	neg    eax
  426ef5:	ret    
  426ef6:	push   ebp
  426ef7:	mov    ebp,esp
  426ef9:	push   ecx
  426efa:	mov    eax,DWORD PTR [ebp+0xc]
  426efd:	lea    ecx,[eax+0x1]
  426f00:	cmp    ecx,0x100
  426f06:	mov    ecx,DWORD PTR [ebp+0x8]
  426f09:	ja     0x426f14
  426f0b:	mov    ecx,DWORD PTR [ecx+0x48]
  426f0e:	movzx  eax,WORD PTR [ecx+eax*2]
  426f12:	jmp    0x426f68
  426f14:	push   esi
  426f15:	mov    edx,eax
  426f17:	sar    edx,0x8
  426f1a:	push   edi
  426f1b:	mov    edi,DWORD PTR [ecx+0x48]
  426f1e:	movzx  esi,dl
  426f21:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426f26:	pop    edi
  426f27:	pop    esi
  426f28:	je     0x426f39
  426f2a:	and    BYTE PTR [ebp-0x2],0x0
  426f2e:	push   0x2
  426f30:	mov    BYTE PTR [ebp-0x3],al
  426f33:	mov    BYTE PTR [ebp-0x4],dl
  426f36:	pop    eax
  426f37:	jmp    0x426f43
  426f39:	and    BYTE PTR [ebp-0x3],0x0
  426f3d:	mov    BYTE PTR [ebp-0x4],al
  426f40:	xor    eax,eax
  426f42:	inc    eax
  426f43:	push   0x1
  426f45:	push   DWORD PTR [ecx+0x14]
  426f48:	push   DWORD PTR [ecx+0x4]
  426f4b:	lea    ecx,[ebp+0xe]
  426f4e:	push   ecx
  426f4f:	push   eax
  426f50:	lea    eax,[ebp-0x4]
  426f53:	push   eax
  426f54:	push   0x1
  426f56:	call   0x425fd8
  426f5b:	add    esp,0x1c
  426f5e:	test   eax,eax
  426f60:	jne    0x426f64
  426f62:	leave  
  426f63:	ret    
  426f64:	movzx  eax,WORD PTR [ebp+0xe]
  426f68:	and    eax,DWORD PTR [ebp+0x10]
  426f6b:	leave  
  426f6c:	ret    
  426f6d:	int3   
  426f6e:	int3   
  426f6f:	int3   
  426f70:	mov    eax,DWORD PTR [esp+0x8]
  426f74:	mov    ecx,DWORD PTR [esp+0x10]
  426f78:	or     ecx,eax
  426f7a:	mov    ecx,DWORD PTR [esp+0xc]
  426f7e:	jne    0x426f89
  426f80:	mov    eax,DWORD PTR [esp+0x4]
  426f84:	mul    ecx
  426f86:	ret    0x10
  426f89:	push   ebx
  426f8a:	mul    ecx
  426f8c:	mov    ebx,eax
  426f8e:	mov    eax,DWORD PTR [esp+0x8]
  426f92:	mul    DWORD PTR [esp+0x14]
  426f96:	add    ebx,eax
  426f98:	mov    eax,DWORD PTR [esp+0x8]
  426f9c:	mul    ecx
  426f9e:	add    edx,ebx
  426fa0:	pop    ebx
  426fa1:	ret    0x10
  426fa4:	int3   
  426fa5:	int3   
  426fa6:	int3   
  426fa7:	int3   
  426fa8:	int3   
  426fa9:	int3   
  426faa:	int3   
  426fab:	int3   
  426fac:	int3   
  426fad:	int3   
  426fae:	int3   
  426faf:	int3   
  426fb0:	push   ebp
  426fb1:	mov    ebp,esp
  426fb3:	push   edi
  426fb4:	push   esi
  426fb5:	push   ebx
  426fb6:	mov    ecx,DWORD PTR [ebp+0x10]
  426fb9:	or     ecx,ecx
  426fbb:	je     0x42700a
  426fbd:	mov    esi,DWORD PTR [ebp+0x8]
  426fc0:	mov    edi,DWORD PTR [ebp+0xc]
  426fc3:	mov    bh,0x41
  426fc5:	mov    bl,0x5a
  426fc7:	mov    dh,0x20
  426fc9:	lea    ecx,[ecx+0x0]
  426fcc:	mov    ah,BYTE PTR [esi]
  426fce:	or     ah,ah
  426fd0:	mov    al,BYTE PTR [edi]
  426fd2:	je     0x426ffb
  426fd4:	or     al,al
  426fd6:	je     0x426ffb
  426fd8:	add    esi,0x1
  426fdb:	add    edi,0x1
  426fde:	cmp    ah,bh
  426fe0:	jb     0x426fe8
  426fe2:	cmp    ah,bl
  426fe4:	ja     0x426fe8
  426fe6:	add    ah,dh
  426fe8:	cmp    al,bh
  426fea:	jb     0x426ff2
  426fec:	cmp    al,bl
  426fee:	ja     0x426ff2
  426ff0:	add    al,dh
  426ff2:	cmp    ah,al
  426ff4:	jne    0x427001
  426ff6:	sub    ecx,0x1
  426ff9:	jne    0x426fcc
  426ffb:	xor    ecx,ecx
  426ffd:	cmp    ah,al
  426fff:	je     0x42700a
  427001:	mov    ecx,0xffffffff
  427006:	jb     0x42700a
  427008:	neg    ecx
  42700a:	mov    eax,ecx
  42700c:	pop    ebx
  42700d:	pop    esi
  42700e:	pop    edi
  42700f:	leave  
  427010:	ret    
  427011:	int3   
  427012:	int3   
  427013:	int3   
  427014:	int3   
  427015:	int3   
  427016:	int3   
  427017:	int3   
  427018:	int3   
  427019:	int3   
  42701a:	int3   
  42701b:	int3   
  42701c:	int3   
  42701d:	int3   
  42701e:	int3   
  42701f:	int3   
  427020:	push   esi
  427021:	mov    eax,DWORD PTR [esp+0x14]
  427025:	or     eax,eax
  427027:	jne    0x427051
  427029:	mov    ecx,DWORD PTR [esp+0x10]
  42702d:	mov    eax,DWORD PTR [esp+0xc]
  427031:	xor    edx,edx
  427033:	div    ecx
  427035:	mov    ebx,eax
  427037:	mov    eax,DWORD PTR [esp+0x8]
  42703b:	div    ecx
  42703d:	mov    esi,eax
  42703f:	mov    eax,ebx
  427041:	mul    DWORD PTR [esp+0x10]
  427045:	mov    ecx,eax
  427047:	mov    eax,esi
  427049:	mul    DWORD PTR [esp+0x10]
  42704d:	add    edx,ecx
  42704f:	jmp    0x427098
  427051:	mov    ecx,eax
  427053:	mov    ebx,DWORD PTR [esp+0x10]
  427057:	mov    edx,DWORD PTR [esp+0xc]
  42705b:	mov    eax,DWORD PTR [esp+0x8]
  42705f:	shr    ecx,1
  427061:	rcr    ebx,1
  427063:	shr    edx,1
  427065:	rcr    eax,1
  427067:	or     ecx,ecx
  427069:	jne    0x42705f
  42706b:	div    ebx
  42706d:	mov    esi,eax
  42706f:	mul    DWORD PTR [esp+0x14]
  427073:	mov    ecx,eax
  427075:	mov    eax,DWORD PTR [esp+0x10]
  427079:	mul    esi
  42707b:	add    edx,ecx
  42707d:	jb     0x42708d
  42707f:	cmp    edx,DWORD PTR [esp+0xc]
  427083:	ja     0x42708d
  427085:	jb     0x427096
  427087:	cmp    eax,DWORD PTR [esp+0x8]
  42708b:	jbe    0x427096
  42708d:	dec    esi
  42708e:	sub    eax,DWORD PTR [esp+0x10]
  427092:	sbb    edx,DWORD PTR [esp+0x14]
  427096:	xor    ebx,ebx
  427098:	sub    eax,DWORD PTR [esp+0x8]
  42709c:	sbb    edx,DWORD PTR [esp+0xc]
  4270a0:	neg    edx
  4270a2:	neg    eax
  4270a4:	sbb    edx,0x0
  4270a7:	mov    ecx,edx
  4270a9:	mov    edx,ebx
  4270ab:	mov    ebx,ecx
  4270ad:	mov    ecx,eax
  4270af:	mov    eax,esi
  4270b1:	pop    esi
  4270b2:	ret    0x10
  4270b5:	int3   
  4270b6:	int3   
  4270b7:	int3   
  4270b8:	int3   
  4270b9:	int3   
  4270ba:	int3   
  4270bb:	int3   
  4270bc:	int3   
  4270bd:	int3   
  4270be:	int3   
  4270bf:	int3   
  4270c0:	lea    eax,[edx-0x1]
  4270c3:	pop    ebx
  4270c4:	ret    
  4270c5:	lea    esp,[esp+0x0]
  4270cc:	lea    esp,[esp+0x0]
  4270d0:	xor    eax,eax
  4270d2:	mov    al,BYTE PTR [esp+0x8]
  4270d6:	push   ebx
  4270d7:	mov    ebx,eax
  4270d9:	shl    eax,0x8
  4270dc:	mov    edx,DWORD PTR [esp+0x8]
  4270e0:	test   edx,0x3
  4270e6:	je     0x4270fd
  4270e8:	mov    cl,BYTE PTR [edx]
  4270ea:	add    edx,0x1
  4270ed:	cmp    cl,bl
  4270ef:	je     0x4270c0
  4270f1:	test   cl,cl
  4270f3:	je     0x427146
  4270f5:	test   edx,0x3
  4270fb:	jne    0x4270e8
  4270fd:	or     ebx,eax
  4270ff:	push   edi
  427100:	mov    eax,ebx
  427102:	shl    ebx,0x10
  427105:	push   esi
  427106:	or     ebx,eax
  427108:	mov    ecx,DWORD PTR [edx]
  42710a:	mov    edi,0x7efefeff
  42710f:	mov    eax,ecx
  427111:	mov    esi,edi
  427113:	xor    ecx,ebx
  427115:	add    esi,eax
  427117:	add    edi,ecx
  427119:	xor    ecx,0xffffffff
  42711c:	xor    eax,0xffffffff
  42711f:	xor    ecx,edi
  427121:	xor    eax,esi
  427123:	add    edx,0x4
  427126:	and    ecx,0x81010100
  42712c:	jne    0x42714a
  42712e:	and    eax,0x81010100
  427133:	je     0x427108
  427135:	and    eax,0x1010100
  42713a:	jne    0x427144
  42713c:	and    esi,0x80000000
  427142:	jne    0x427108
  427144:	pop    esi
  427145:	pop    edi
  427146:	pop    ebx
  427147:	xor    eax,eax
  427149:	ret    
  42714a:	mov    eax,DWORD PTR [edx-0x4]
  42714d:	cmp    al,bl
  42714f:	je     0x427187
  427151:	test   al,al
  427153:	je     0x427144
  427155:	cmp    ah,bl
  427157:	je     0x427180
  427159:	test   ah,ah
  42715b:	je     0x427144
  42715d:	shr    eax,0x10
  427160:	cmp    al,bl
  427162:	je     0x427179
  427164:	test   al,al
  427166:	je     0x427144
  427168:	cmp    ah,bl
  42716a:	je     0x427172
  42716c:	test   ah,ah
  42716e:	je     0x427144
  427170:	jmp    0x427108
  427172:	pop    esi
  427173:	pop    edi
  427174:	lea    eax,[edx-0x1]
  427177:	pop    ebx
  427178:	ret    
  427179:	lea    eax,[edx-0x2]
  42717c:	pop    esi
  42717d:	pop    edi
  42717e:	pop    ebx
  42717f:	ret    
  427180:	lea    eax,[edx-0x3]
  427183:	pop    esi
  427184:	pop    edi
  427185:	pop    ebx
  427186:	ret    
  427187:	lea    eax,[edx-0x4]
  42718a:	pop    esi
  42718b:	pop    edi
  42718c:	pop    ebx
  42718d:	ret    
  42718e:	jmp    DWORD PTR ds:0x4280e4
