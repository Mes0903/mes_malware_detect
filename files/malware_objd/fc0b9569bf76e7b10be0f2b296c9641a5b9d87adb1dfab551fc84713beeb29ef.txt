
fc0b9569bf76e7b10be0f2b296c9641a5b9d87adb1dfab551fc84713beeb29ef.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    DWORD PTR ds:0x42b1de,0x13
  401013:	cmp    DWORD PTR ds:0x42b1de,0x0
  40101a:	je     0x401078
  401020:	cmp    DWORD PTR ds:0x42b1de,0x7
  401027:	jb     0x401078
  40102d:	jmp    0x401050
  401032:	push   0x42a019
  401037:	push   0x564d
  40103c:	push   DWORD PTR [ebp-0x28]
  40103f:	push   0x8804
  401044:	push   DWORD PTR [ebp-0x24]
  401047:	push   DWORD PTR [ebp-0x18]
  40104a:	call   DWORD PTR ds:0x42b2ea
  401050:	cmp    DWORD PTR ds:0x42b1de,0x8
  401057:	jne    0x401068
  40105d:	mov    eax,ds:0x42b1de
  401062:	dec    eax
  401063:	mov    ds:0x42b1de,eax
  401068:	mov    eax,ds:0x42b1de
  40106d:	dec    eax
  40106e:	mov    ds:0x42b1de,eax
  401073:	jmp    0x401013
  401078:	mov    eax,DWORD PTR [ebp+0x8]
  40107b:	mov    ecx,DWORD PTR ds:0x42b1be
  401081:	add    DWORD PTR ds:0x42b22a,ecx
  401087:	push   ebx
  401088:	and    DWORD PTR ds:0x42b21e,0x0
  401092:	xor    ecx,ecx
  401094:	or     ecx,DWORD PTR ds:0x42b21e
  40109a:	inc    ecx
  40109b:	mov    DWORD PTR ds:0x42b21e,ecx
  4010a1:	cmp    DWORD PTR ds:0x42b21e,0xc
  4010a8:	ja     0x4010ef
  4010ae:	jmp    0x4010c8
  4010b3:	push   0x42a03d
  4010b8:	push   0x0
  4010ba:	push   DWORD PTR [ebp-0xc]
  4010bd:	push   0x87c3
  4010c2:	call   DWORD PTR ds:0x42b2ee
  4010c8:	cmp    DWORD PTR ds:0x42b21e,0xb
  4010cf:	jne    0x4010e2
  4010d5:	mov    ecx,DWORD PTR ds:0x42b21e
  4010db:	inc    ecx
  4010dc:	mov    DWORD PTR ds:0x42b21e,ecx
  4010e2:	cmp    DWORD PTR ds:0x42b21e,0x1b
  4010e9:	jb     0x401092
  4010ef:	push   esi
  4010f0:	push   edi
  4010f1:	mov    esi,0x75108ae
  4010f6:	mov    DWORD PTR ds:0x42b1f6,0x15
  401100:	cmp    DWORD PTR ds:0x42b1f6,0x0
  401107:	je     0x401156
  40110d:	cmp    DWORD PTR ds:0x42b1f6,0x9
  401114:	jb     0x401156
  40111a:	jmp    0x40112a
  40111f:	push   0x7250
  401124:	call   DWORD PTR ds:0x42b2f2
  40112a:	cmp    DWORD PTR ds:0x42b1f6,0xa
  401131:	jne    0x401144
  401137:	mov    ecx,DWORD PTR ds:0x42b1f6
  40113d:	dec    ecx
  40113e:	mov    DWORD PTR ds:0x42b1f6,ecx
  401144:	mov    ecx,DWORD PTR ds:0x42b1f6
  40114a:	dec    ecx
  40114b:	mov    DWORD PTR ds:0x42b1f6,ecx
  401151:	jmp    0x401100
  401156:	xor    eax,esi
  401158:	mov    edi,0x3272f5
  40115d:	dec    DWORD PTR ds:0x42b19e
  401163:	add    eax,edi
  401165:	add    DWORD PTR ds:0x42b186,edi
  40116b:	mov    DWORD PTR [ebp-0x40],eax
  40116e:	mov    eax,ds:0x42a2f2
  401173:	xor    DWORD PTR ds:0x42b1aa,0x2d22
  40117d:	mov    eax,DWORD PTR [eax]
  40117f:	mov    ecx,DWORD PTR ds:0x42b22e
  401185:	sbb    ecx,DWORD PTR ds:0x42b1fe
  40118b:	mov    DWORD PTR ds:0x42b22e,ecx
  401191:	mov    DWORD PTR [ebp-0x3c],eax
  401194:	and    DWORD PTR ds:0x42b192,0x0
  40119e:	jmp    0x4011b0
  4011a3:	mov    ecx,DWORD PTR ds:0x42b192
  4011a9:	inc    ecx
  4011aa:	mov    DWORD PTR ds:0x42b192,ecx
  4011b0:	cmp    DWORD PTR ds:0x42b192,0x15
  4011b7:	jae    0x4011f9
  4011bd:	cmp    DWORD PTR ds:0x42b192,0x8
  4011c4:	jg     0x4011f9
  4011ca:	jmp    0x4011da
  4011cf:	push   0x42b1aa
  4011d4:	call   DWORD PTR ds:0x42b2f6
  4011da:	cmp    DWORD PTR ds:0x42b192,0x7
  4011e1:	jne    0x4011f4
  4011e7:	mov    ecx,DWORD PTR ds:0x42b192
  4011ed:	inc    ecx
  4011ee:	mov    DWORD PTR ds:0x42b192,ecx
  4011f4:	jmp    0x4011a3
  4011f9:	mov    eax,ds:0x42a502
  4011fe:	xor    DWORD PTR ds:0x42b182,0x12c5
  401208:	mov    eax,DWORD PTR [eax]
  40120a:	mov    DWORD PTR [ebp-0x1c],eax
  40120d:	mov    DWORD PTR ds:0x42b1da,0x1a
  401217:	cmp    DWORD PTR ds:0x42b1da,0x0
  40121e:	je     0x40127b
  401224:	cmp    DWORD PTR ds:0x42b1da,0x8
  40122b:	jl     0x40127b
  401231:	jmp    0x401250
  401236:	push   0x42b1ba
  40123b:	push   0x42b1d2
  401240:	push   0x8af3
  401245:	push   0x42a12c
  40124a:	call   DWORD PTR ds:0x42b2fa
  401250:	cmp    DWORD PTR ds:0x42b1da,0x9
  401257:	jne    0x40126b
  40125d:	xor    eax,eax
  40125f:	or     eax,DWORD PTR ds:0x42b1da
  401265:	dec    eax
  401266:	mov    ds:0x42b1da,eax
  40126b:	mov    eax,ds:0x42b1da
  401270:	dec    eax
  401271:	mov    ds:0x42b1da,eax
  401276:	jmp    0x401217
  40127b:	mov    DWORD PTR [ebp-0x34],0xf89c87a5
  401282:	mov    eax,DWORD PTR [ebp-0x34]
  401285:	xor    eax,esi
  401287:	xor    DWORD PTR ds:0x42b222,edi
  40128d:	add    eax,edi
  40128f:	or     ecx,DWORD PTR ds:0x42b222
  401295:	mov    DWORD PTR [ebp-0x40],eax
  401298:	adc    ecx,DWORD PTR ds:0x42b19a
  40129e:	mov    eax,ds:0x42a472
  4012a3:	xor    DWORD PTR ds:0x42b1d6,0x6afc
  4012ad:	mov    DWORD PTR [ebp-0x40],eax
  4012b0:	mov    eax,DWORD PTR [ebp-0x3c]
  4012b3:	mov    DWORD PTR [ebp-0x14],eax
  4012b6:	adc    eax,0x46d9
  4012bb:	mov    eax,DWORD PTR [ebp-0x14]
  4012be:	and    DWORD PTR ds:0x42b222,0x0
  4012c8:	jmp    0x4012da
  4012cd:	mov    ecx,DWORD PTR ds:0x42b222
  4012d3:	inc    ecx
  4012d4:	mov    DWORD PTR ds:0x42b222,ecx
  4012da:	cmp    DWORD PTR ds:0x42b222,0x1c
  4012e1:	jae    0x401328
  4012e7:	cmp    DWORD PTR ds:0x42b222,0x5
  4012ee:	jg     0x401328
  4012f4:	jmp    0x401309
  4012f9:	push   0x42b1e2
  4012fe:	push   0x42a2a1
  401303:	call   DWORD PTR ds:0x42b2fe
  401309:	cmp    DWORD PTR ds:0x42b222,0x4
  401310:	jne    0x401323
  401316:	mov    ecx,DWORD PTR ds:0x42b222
  40131c:	inc    ecx
  40131d:	mov    DWORD PTR ds:0x42b222,ecx
  401323:	jmp    0x4012cd
  401328:	push   0x4
  40132a:	or     DWORD PTR ds:0x42b186,0x3485
  401334:	pop    ecx
  401335:	and    DWORD PTR ds:0x42b206,0x42b1ee
  40133f:	sub    ecx,eax
  401341:	dec    eax
  401342:	add    ecx,DWORD PTR [ebp-0x1c]
  401345:	mov    DWORD PTR [ebp-0x2c],0xf89c85e5
  40134c:	adc    DWORD PTR ds:0x42b20e,0x42b1e2
  401356:	mov    DWORD PTR [ebp-0x18],ecx
  401359:	mov    DWORD PTR [ebp-0xa0],0xf89c85a1
  401363:	or     DWORD PTR ds:0x42b182,0x6f89
  40136d:	mov    eax,DWORD PTR [ebp-0x14]
  401370:	xor    DWORD PTR ds:0x42b20e,0x6cd3
  40137a:	mov    DWORD PTR [ebp-0x9c],eax
  401380:	adc    eax,DWORD PTR ds:0x42b196
  401386:	mov    eax,DWORD PTR [ebp-0x18]
  401389:	and    DWORD PTR ds:0x42b22a,0x42b226
  401393:	mov    DWORD PTR [ebp-0x98],eax
  401399:	xor    DWORD PTR ds:0x42b186,ecx
  40139f:	mov    eax,DWORD PTR [ebp-0x2c]
  4013a2:	adc    DWORD PTR ds:0x42b1f6,0x42b22a
  4013ac:	xor    eax,esi
  4013ae:	add    eax,edi
  4013b0:	add    DWORD PTR ds:0x42b22e,0x47bc
  4013ba:	mov    DWORD PTR [ebp-0x94],eax
  4013c0:	and    DWORD PTR ds:0x42b20e,0x42b202
  4013ca:	lea    eax,[ebp-0x48]
  4013cd:	mov    DWORD PTR [ebp-0x90],eax
  4013d3:	add    eax,0x2eac
  4013d8:	mov    eax,DWORD PTR [ebp-0xa0]
  4013de:	xor    eax,esi
  4013e0:	sub    DWORD PTR ds:0x42b20e,0x42b1f6
  4013ea:	add    eax,edi
  4013ec:	mov    DWORD PTR [ebp-0xa0],eax
  4013f2:	inc    DWORD PTR ds:0x42b1ce
  4013f8:	lea    eax,[ebp-0xa0]
  4013fe:	add    DWORD PTR ds:0x42b1a6,0x42b21a
  401408:	push   eax
  401409:	sub    DWORD PTR ds:0x42b1fe,ebx
  40140f:	mov    eax,DWORD PTR [ebp+0xc]
  401412:	and    DWORD PTR ds:0x42b226,0xfdc
  40141c:	xor    eax,esi
  40141e:	add    eax,edi
  401420:	push   eax
  401421:	and    DWORD PTR ds:0x42b192,ecx
  401427:	mov    eax,ds:0x42a492
  40142c:	sub    DWORD PTR ds:0x42b1f6,0x42b1c6
  401436:	push   0x42a3e8
  40143b:	and    DWORD PTR ds:0x42b1c2,0x42b19e
  401445:	push   DWORD PTR [eax]
  401447:	call   0x4061fa
  40144c:	mov    ebx,DWORD PTR ds:0x42b226
  401452:	add    ebx,DWORD PTR ds:0x42b19a
  401458:	mov    DWORD PTR ds:0x42b226,ebx
  40145e:	mov    ebx,DWORD PTR [ebp-0x14]
  401461:	adc    edx,DWORD PTR ds:0x42b1da
  401467:	mov    eax,DWORD PTR [ebp-0x18]
  40146a:	and    DWORD PTR ds:0x42b1f2,0x0
  401474:	mov    edx,DWORD PTR ds:0x42b1f2
  40147a:	inc    edx
  40147b:	mov    DWORD PTR ds:0x42b1f2,edx
  401481:	cmp    DWORD PTR ds:0x42b1f2,0x8
  401488:	ja     0x4014d0
  40148e:	jmp    0x4014a9
  401493:	push   DWORD PTR [ebp-0x10]
  401496:	push   DWORD PTR [ebp-0x28]
  401499:	push   0x42a223
  40149e:	push   0x400000
  4014a3:	call   DWORD PTR ds:0x42b306
  4014a9:	cmp    DWORD PTR ds:0x42b1f2,0x7
  4014b0:	jne    0x4014c3
  4014b6:	mov    edx,DWORD PTR ds:0x42b1f2
  4014bc:	inc    edx
  4014bd:	mov    DWORD PTR ds:0x42b1f2,edx
  4014c3:	cmp    DWORD PTR ds:0x42b1f2,0x1e
  4014ca:	jb     0x401474
  4014d0:	mov    DWORD PTR [ebp-0x58],eax
  4014d3:	or     DWORD PTR ds:0x42b1ce,edi
  4014d9:	mov    DWORD PTR [ebp-0x34],0xf89c853d
  4014e0:	sub    DWORD PTR ds:0x42b1f2,0x209f
  4014ea:	mov    eax,0xf89c85a3
  4014ef:	sbb    DWORD PTR ds:0x42b21a,0x6d23
  4014f9:	mov    DWORD PTR [ebp-0x1c],eax
  4014fc:	sub    DWORD PTR ds:0x42b206,ebx
  401502:	lea    ecx,[eax+0x2]
  401505:	adc    edx,0x42c6
  40150b:	mov    DWORD PTR [ebp-0x28],ecx
  40150e:	inc    edx
  40150f:	mov    DWORD PTR [ebp-0x10],0xf89c85a2
  401516:	or     edx,DWORD PTR ds:0x42b182
  40151c:	mov    DWORD PTR [ebp-0x8],eax
  40151f:	mov    edx,DWORD PTR ds:0x42b256
  401525:	xor    eax,eax
  401527:	xor    eax,DWORD PTR ds:0x42b276
  40152d:	sub    edx,eax
  40152f:	sub    edx,DWORD PTR [edx+eax*1]
  401532:	mov    eax,DWORD PTR [ebp-0x10]
  401535:	xor    DWORD PTR ds:0x42b1b2,edi
  40153b:	xor    eax,esi
  40153d:	sub    DWORD PTR ds:0x42b1be,ecx
  401543:	mov    edx,0xffcd8d8b
  401548:	sbb    DWORD PTR ds:0x42b182,0x343
  401552:	sub    edx,eax
  401554:	mov    DWORD PTR [ebp-0xc],edx
  401557:	mov    DWORD PTR [ebp-0x18],0xf89c85be
  40155e:	mov    eax,DWORD PTR [ebp-0x8]
  401561:	mov    DWORD PTR ds:0x42b216,0x6ef4
  40156b:	mov    DWORD PTR [ebp-0x3c],ebx
  40156e:	mov    DWORD PTR ds:0x42b206,0x4694
  401578:	cmp    eax,ecx
  40157a:	mov    DWORD PTR ds:0x42b21e,0x4f34
  401584:	je     0x401870
  40158a:	or     eax,DWORD PTR ds:0x42b22e
  401590:	mov    eax,DWORD PTR [ebp-0x10]
  401593:	and    DWORD PTR ds:0x42b21a,0x0
  40159d:	jmp    0x4015af
  4015a2:	mov    ecx,DWORD PTR ds:0x42b21a
  4015a8:	inc    ecx
  4015a9:	mov    DWORD PTR ds:0x42b21a,ecx
  4015af:	cmp    DWORD PTR ds:0x42b21a,0x1b
  4015b6:	jae    0x4015e4
  4015bc:	cmp    DWORD PTR ds:0x42b21a,0x1c
  4015c3:	jb     0x4015e4
  4015c9:	jmp    0x4015df
  4015ce:	push   0x42a211
  4015d3:	push   DWORD PTR [ebp-0x1c]
  4015d6:	push   DWORD PTR [ebp-0x14]
  4015d9:	call   DWORD PTR ds:0x42b30e
  4015df:	jmp    0x4015a2
  4015e4:	mov    ecx,DWORD PTR [ebp-0x10]
  4015e7:	adc    DWORD PTR ds:0x42b196,0x5f31
  4015f1:	xor    eax,esi
  4015f3:	xor    ecx,esi
  4015f5:	or     DWORD PTR ds:0x42b1d6,0x22e1
  4015ff:	lea    ecx,[eax+ecx*1+0x64e5ea]
  401606:	mov    eax,ds:0x42b186
  40160b:	xor    DWORD PTR ds:0x42b1ee,eax
  401611:	mov    eax,DWORD PTR [ebp-0xc]
  401614:	xor    edx,edx
  401616:	xor    DWORD PTR ds:0x42b212,0x42b202
  401620:	div    ecx
  401622:	mov    eax,DWORD PTR [ebp-0x8]
  401625:	sub    DWORD PTR ds:0x42b192,edi
  40162b:	mov    ecx,DWORD PTR [ebp-0x10]
  40162e:	xor    eax,esi
  401630:	add    DWORD PTR ds:0x42b1c6,0x2cb7
  40163a:	xor    ecx,esi
  40163c:	sub    eax,ecx
  40163e:	mov    DWORD PTR ds:0x42b21a,0x2b73
  401648:	cmp    edx,eax
  40164a:	mov    DWORD PTR ds:0x42b21e,0x4704
  401654:	jne    0x40181a
  40165a:	mov    eax,DWORD PTR [ebp-0xc]
  40165d:	xor    ecx,0x1cf0
  401663:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  40166a:	mov    eax,DWORD PTR [ebp-0x28]
  40166d:	add    DWORD PTR ds:0x42b1ce,0x4d15
  401677:	mov    ecx,DWORD PTR [ebp-0x18]
  40167a:	or     DWORD PTR ds:0x42b18e,0x42b1ea
  401684:	xor    eax,esi
  401686:	add    DWORD PTR ds:0x42b18e,0x42b182
  401690:	xor    ecx,esi
  401692:	or     DWORD PTR ds:0x42b21a,0x42b1aa
  40169c:	add    eax,edi
  40169e:	adc    DWORD PTR ds:0x42b1e2,0x3afa
  4016a8:	add    ecx,edi
  4016aa:	mov    BYTE PTR [ebp-0x21],dl
  4016ad:	cmp    eax,ecx
  4016af:	jae    0x4017e8
  4016b5:	and    DWORD PTR ds:0x42b1fe,0x0
  4016bf:	mov    edx,DWORD PTR ds:0x42b1fe
  4016c5:	inc    edx
  4016c6:	mov    DWORD PTR ds:0x42b1fe,edx
  4016cc:	cmp    DWORD PTR ds:0x42b1fe,0x27
  4016d3:	ja     0x4016f6
  4016d9:	jmp    0x4016e9
  4016de:	push   0x18bf
  4016e3:	call   DWORD PTR ds:0x42b316
  4016e9:	cmp    DWORD PTR ds:0x42b1fe,0x18
  4016f0:	jb     0x4016bf
  4016f6:	lea    ecx,[eax-0x3272f5]
  4016fc:	adc    DWORD PTR ds:0x42b19e,0x3c59
  401706:	mov    DWORD PTR [ebp-0x14],ecx
  401709:	mov    edx,DWORD PTR [ebp-0x14]
  40170c:	xor    edx,esi
  40170e:	add    DWORD PTR ds:0x42b192,0x42b1fa
  401718:	add    edx,0x7f55d8e3
  40171e:	lea    ecx,[ebp+eax*4-0xb4]
  401725:	mov    DWORD PTR ds:0x42b1ca,0x6fb0
  40172f:	mov    DWORD PTR [ecx],edx
  401731:	mov    edx,DWORD PTR [ecx]
  401733:	cmp    edx,0x244ecb80
  401739:	mov    DWORD PTR ds:0x42b1e2,0xbe5
  401743:	jbe    0x40175e
  401749:	add    DWORD PTR [ecx],0x405fcc1
  40174f:	mov    DWORD PTR ds:0x42b1ca,0x62ff
  401759:	jmp    0x401764
  40175e:	add    DWORD PTR [ecx],0xfdaf433f
  401764:	sbb    DWORD PTR ds:0x42b1c2,0x1be5
  40176e:	mov    ecx,DWORD PTR [ebp-0x18]
  401771:	xor    DWORD PTR ds:0x42b1c6,0x42b18e
  40177b:	xor    ecx,esi
  40177d:	xor    DWORD PTR ds:0x42b1f6,0x42b192
  401787:	inc    eax
  401788:	inc    DWORD PTR [ebp-0x14]
  40178b:	adc    DWORD PTR ds:0x42b1b2,0x7e0f
  401795:	add    ecx,edi
  401797:	cmp    eax,ecx
  401799:	jb     0x401709
  40179f:	mov    DWORD PTR ds:0x42b192,0x13
  4017a9:	cmp    DWORD PTR ds:0x42b192,0x0
  4017b0:	je     0x4017e5
  4017b6:	cmp    DWORD PTR ds:0x42b192,0x20
  4017bd:	jl     0x4017e5
  4017c3:	jmp    0x4017d5
  4017c8:	push   0xd
  4017ca:	push   0x57ae
  4017cf:	call   DWORD PTR ds:0x42b31a
  4017d5:	mov    eax,ds:0x42b192
  4017da:	dec    eax
  4017db:	mov    ds:0x42b192,eax
  4017e0:	jmp    0x4017a9
  4017e5:	mov    dl,BYTE PTR [ebp-0x21]
  4017e8:	mov    eax,ds:0x42b226
  4017ed:	sub    eax,DWORD PTR ds:0x42b1ce
  4017f3:	mov    ds:0x42b226,eax
  4017f8:	mov    eax,DWORD PTR [ebp-0x34]
  4017fb:	xor    al,0xae
  4017fd:	mov    cl,0xb
  4017ff:	sub    cl,al
  401801:	add    dl,cl
  401803:	mov    ecx,DWORD PTR [ebp-0x1c]
  401806:	xor    cl,0xae
  401809:	sub    cl,0xb
  40180c:	ror    dl,cl
  40180e:	xor    eax,eax
  401810:	mov    eax,DWORD PTR [ebp-0xc]
  401813:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  40181a:	mov    eax,DWORD PTR [ebp-0xc]
  40181d:	mov    ecx,DWORD PTR [ebp-0x28]
  401820:	sub    eax,edi
  401822:	xor    eax,esi
  401824:	cmp    eax,ecx
  401826:	jne    0x401850
  40182c:	mov    eax,DWORD PTR [ebp-0x8]
  40182f:	mov    ecx,DWORD PTR [ebp-0x10]
  401832:	xor    eax,esi
  401834:	xor    ecx,esi
  401836:	sub    eax,ecx
  401838:	sub    eax,edi
  40183a:	xor    eax,esi
  40183c:	mov    DWORD PTR [ebp-0x8],eax
  40183f:	mov    eax,DWORD PTR [ebp-0x10]
  401842:	xor    eax,esi
  401844:	mov    ecx,0xffcd8d8b
  401849:	sub    ecx,eax
  40184b:	jmp    0x40185f
  401850:	mov    eax,DWORD PTR [ebp-0x10]
  401853:	xor    eax,esi
  401855:	mov    ecx,0xffcd8d0b
  40185a:	sub    ecx,eax
  40185c:	add    ecx,DWORD PTR [ebp-0xc]
  40185f:	mov    DWORD PTR [ebp-0xc],ecx
  401862:	mov    eax,DWORD PTR [ebp-0x8]
  401865:	cmp    eax,0xf89c85a5
  40186a:	jne    0x40158a
  401870:	mov    DWORD PTR [ebp-0x34],0x9
  401877:	mov    ecx,DWORD PTR [ebp+0x8]
  40187a:	xor    ecx,esi
  40187c:	add    ecx,edi
  40187e:	jmp    0x406188
  401883:	lea    eax,[ecx+ebx*1]
  401886:	mov    DWORD PTR [ebp-0x2c],eax
  401889:	mov    eax,DWORD PTR [ebp-0x58]
  40188c:	sub    eax,ecx
  40188e:	mov    DWORD PTR [ebp-0x1c],eax
  401891:	mov    eax,DWORD PTR [ebp-0x1c]
  401894:	mov    DWORD PTR [ebp-0x14],eax
  401897:	mov    eax,DWORD PTR [ebp-0x2c]
  40189a:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  4018a1:	mov    DWORD PTR [ebp-0x54],eax
  4018a4:	mov    DWORD PTR [ebp-0x20],0xf89c85a2
  4018ab:	mov    eax,DWORD PTR [ebp-0x38]
  4018ae:	xor    eax,esi
  4018b0:	add    eax,edi
  4018b2:	mov    DWORD PTR [ebp-0x10],eax
  4018b5:	mov    eax,DWORD PTR [ebp-0x38]
  4018b8:	xor    eax,esi
  4018ba:	add    eax,edi
  4018bc:	mov    DWORD PTR [ebp-0x8],eax
  4018bf:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  4018c6:	jmp    0x403c1b
  4018cb:	mov    al,0x2a
  4018cd:	dec    ecx
  4018ce:	and    ebp,eax
  4018d0:	adc    ch,BYTE PTR [eax-0x7dd88776]
  4018d6:	push   esi
  4018d7:	stos   DWORD PTR es:[edi],eax
  4018d8:	push   0x838370d9
  4018dd:	add    DWORD PTR [ebx-0x7c7ca1b5],0x28
  4018e4:	xor    DWORD PTR [esi],esp
  4018e6:	cmp    al,0x24
  4018e8:	cmp    BYTE PTR [edx],ah
  4018ea:	cs js  0x401928
  4018ed:	je     0x401966
  4018ef:	scas   al,BYTE PTR es:[edi]
  4018f0:	jo     0x401962
  4018f2:	jae    0x401964
  4018f4:	dec    ebx
  4018f5:	fsub   st,st(1)
  4018f7:	cld    
  4018f8:	ins    DWORD PTR es:[edi],dx
  4018f9:	push   ebp
  4018fa:	jb     0x401978
  4018fc:	bound  ebp,QWORD PTR [ebp-0x319b8f83]
  401902:	pusha  
  401903:	push   ebx
  401904:	cmp    eax,0x87960391
  401909:	push   ax
  40190b:	jle    0x401953
  40190d:	lea    esi,[edi+0x42bbbd7e]
  401913:	xor    esi,edi
  401915:	ja     0x4018f8
  401917:	add    ebp,DWORD PTR [edx+0x7e]
  40191a:	pop    ds
  40191b:	lock inc esp
  40191d:	rol    bl,1
  40191f:	lock xchg esi,eax
  401921:	sub    bl,bh
  401923:	xchg   edx,eax
  401924:	xor    al,0xe
  401926:	fs mov dl,0x93
  401929:	fld    DWORD PTR [esi]
  40192b:	jo     0x40190d
  40192d:	sbb    ecx,ebp
  40192f:	lsl    esi,WORD PTR [edi]
  401932:	and    eax,0x72371155
  401937:	jne    0x4018fd
  401939:	scas   al,BYTE PTR es:[edi]
  40193a:	sub    bl,BYTE PTR [eax+ebx*1-0x49]
  40193e:	(bad)  
  40193f:	hlt    
  401940:	push   esp
  401941:	xor    cl,BYTE PTR [ecx+0x462d54b]
  401947:	and    eax,DWORD PTR [ebx]
  401949:	test   DWORD PTR [edx+edi*2-0x6da15a20],edi
  401950:	mov    esp,0x4c9b2916
  401955:	or     bl,BYTE PTR [edi+0x128a8b41]
  40195b:	jecxz  0x40198d
  40195d:	imul   edx,DWORD PTR [eax-0x596b5b7],0xffffffce
  401964:	xchg   ebx,eax
  401965:	xor    al,0x94
  401967:	int    0xc6
  401969:	rcl    DWORD PTR [ebp+0x6b58f96c],1
  40196f:	push   ecx
  401970:	adc    DWORD PTR [edi],edi
  401972:	or     al,BYTE PTR [edi+0x1a]
  401975:	mov    al,0x52
  401977:	shl    DWORD PTR [esi+0x6719dd4d],cl
  40197d:	add    BYTE PTR [ebx+0x67],ch
  401980:	mov    eax,0x5be7504
  401985:	pop    ebx
  401986:	and    eax,DWORD PTR ds:0x1d4a9de4
  40198c:	(bad)  
  40198d:	xchg   esi,eax
  40198e:	fwait
  40198f:	add    eax,0xeb30835c
  401994:	cmp    al,ah
  401996:	aad    0x3b
  401998:	sbb    DWORD PTR [esi-0x12e3552a],edx
  40199e:	gs jp  0x4019f2
  4019a1:	sub    edx,DWORD PTR [edx]
  4019a3:	loope  0x4019a9
  4019a5:	leave  
  4019a6:	not    DWORD PTR [ecx]
  4019a8:	inc    eax
  4019a9:	clc    
  4019aa:	mov    ecx,0xe5691a65
  4019af:	test   al,0x9b
  4019b1:	loope  0x4019c8
  4019b3:	jp     0x401a0d
  4019b5:	pop    DWORD PTR [eax+0x75cd63f]
  4019bb:	jb     0x4019e7
  4019bd:	cmp    DWORD PTR [edx-0x2962e832],ebx
  4019c3:	mov    dl,0xe7
  4019c5:	das    
  4019c6:	fdiv   QWORD PTR [eax-0x56]
  4019c9:	dec    ebp
  4019ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4019cb:	(bad)
  4019ce:	ds dec ecx
  4019d0:	mov    bl,0x45
  4019d2:	repz mov ds:0x5c2dddc,al
  4019d8:	push   cs
  4019d9:	leave  
  4019da:	pop    edi
  4019db:	out    0xa3,al
  4019dd:	loope  0x401966
  4019df:	push   ss
  4019e0:	adc    eax,0xe4f23c1e
  4019e5:	fs out dx,al
  4019e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4019e8:	mov    dl,0xbb
  4019ea:	add    dl,BYTE PTR [edx*8+0x22b1df3d]
  4019f1:	stc    
  4019f2:	mov    ecx,0xf2e656f2
  4019f7:	repz leave 
  4019f9:	pop    esi
  4019fa:	pop    eax
  4019fb:	or     dl,BYTE PTR [esi+0x2a06fe2f]
  401a01:	push   esi
  401a02:	gs pop esi
  401a04:	shr    DWORD PTR [edi-0x3ddacc1e],0xe3
  401a0b:	int3   
  401a0c:	push   0x70ad235b
  401a11:	repnz or eax,ebp
  401a14:	arpl   WORD PTR [ebp-0x4cd79d08],ax
  401a1a:	(bad)  
  401a1b:	ins    BYTE PTR es:[edi],dx
  401a1c:	retf   0xf2c8
  401a1f:	(bad)  
  401a21:	test   BYTE PTR [ecx+edx*4-0x7af4cde0],al
  401a28:	jmp    0xa2cd:0x40acc645
  401a2f:	cld    
  401a30:	cmp    eax,0x5048d7e1
  401a35:	lods   al,BYTE PTR ds:[esi]
  401a36:	jnp    0x401a70
  401a38:	push   edx
  401a39:	shl    WORD PTR cs:[eax-0x690d06ed],0xe3
  401a42:	cld    
  401a43:	inc    edi
  401a44:	dec    esi
  401a45:	push   es
  401a46:	fimul  WORD PTR [esi+0x54865024]
  401a4c:	jle    0x401a6f
  401a4e:	pusha  
  401a4f:	adc    esi,DWORD PTR [edi+0x6726ffb8]
  401a55:	test   eax,0xac2d3826
  401a5a:	lea    ebx,[ecx]
  401a5c:	lds    edi,FWORD PTR [edi-0x4c5964dc]
  401a62:	in     eax,dx
  401a63:	inc    ebp
  401a64:	push   eax
  401a65:	in     al,dx
  401a66:	retf   0x6e24
  401a69:	mov    eax,0xdc5058df
  401a6e:	and    DWORD PTR [edi-0x6958daed],eax
  401a74:	sub    eax,0x7907e93
  401a79:	xor    eax,0xcaddfe79
  401a7e:	mov    ebp,0x3b3bcdbb
  401a83:	ins    DWORD PTR es:[edi],dx
  401a84:	pop    ss
  401a85:	aam    0x1e
  401a87:	cmp    bl,BYTE PTR ds:0x1d45115
  401a8d:	inc    esp
  401a8e:	int3   
  401a8f:	inc    ebx
  401a90:	ins    DWORD PTR es:[edi],dx
  401a91:	xchg   cl,ah
  401a93:	imul   edx,DWORD PTR [edx],0xffffff8b
  401a96:	adc    BYTE PTR [esi+ecx*8],cl
  401a99:	(bad)  
  401a9a:	in     eax,0xf0
  401a9c:	(bad)  
  401a9d:	call   eax
  401a9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401aa0:	and    al,0xa9
  401aa2:	xor    al,0xfa
  401aa4:	jb     0x401a61
  401aa6:	adc    BYTE PTR [eax],bl
  401aa8:	inc    esp
  401aa9:	adc    ebp,DWORD PTR [edi-0x6d]
  401aac:	ror    bh,cl
  401aae:	arpl   WORD PTR [ecx-0x11],bx
  401ab1:	mov    ds:0x56aed6d6,eax
  401ab6:	xor    DWORD PTR [esi+ebx*1-0xcf9a757],esi
  401abd:	add    eax,edx
  401abf:	sub    eax,0x5e08846b
  401ac4:	ja     0x401a5e
  401ac6:	mov    edi,0xdf95a95f
  401acb:	cli    
  401acc:	std    
  401acd:	inc    edx
  401ace:	inc    edx
  401acf:	aaa    
  401ad0:	add    BYTE PTR [ecx-0x37aa5455],dh
  401ad6:	mov    al,0x25
  401ad8:	out    0x86,eax
  401ada:	rcl    BYTE PTR [eax],cl
  401adc:	mov    ebx,0x2a1e4c65
  401ae1:	mov    ah,al
  401ae3:	jp     0x401a71
  401ae5:	idiv   DWORD PTR [edi-0x4223c410]
  401aeb:	and    edi,DWORD PTR [ebp+edx*8+0x1c7dbad3]
  401af2:	dec    eax
  401af3:	pop    ds
  401af4:	xor    esp,DWORD PTR [ebp+0x62e60446]
  401afa:	xor    eax,0x1897d9c7
  401aff:	sbb    ch,BYTE PTR [ecx-0x50fa27a5]
  401b05:	sar    DWORD PTR [edx+0x54a4f947],cl
  401b0b:	xor    DWORD PTR [edi+0x603aeefc],0x5d
  401b12:	mov    bh,0x39
  401b14:	xor    eax,0x8bbaa0e1
  401b19:	or     BYTE PTR [edi-0x6e],0xa0
  401b1d:	mov    ebp,0x1afe6828
  401b22:	aaa    
  401b23:	pop    ss
  401b24:	mov    edx,0x1988e19
  401b29:	sbb    BYTE PTR [ebx],0x31
  401b2c:	dec    ebp
  401b2d:	in     al,0x9
  401b2f:	sub    al,0x6d
  401b31:	sbb    DWORD PTR [ecx-0x38],0x22
  401b35:	out    dx,al
  401b36:	xor    al,0x50
  401b38:	inc    esp
  401b39:	cdq    
  401b3a:	dec    edx
  401b3b:	sub    al,0x29
  401b3d:	push   ebx
  401b3e:	cmp    ch,bh
  401b40:	push   0x61c1bbbb
  401b45:	pop    ebp
  401b46:	out    0xc1,al
  401b48:	dec    ebx
  401b49:	jl     0x401b80
  401b4b:	add    al,0xf8
  401b4d:	lods   eax,DWORD PTR ds:[esi]
  401b4e:	in     eax,dx
  401b4f:	jbe    0x401b5c
  401b51:	mov    esi,ebx
  401b53:	dec    esp
  401b54:	je     0x401af0
  401b56:	xchg   ebx,eax
  401b57:	test   al,0xc3
  401b59:	test   DWORD PTR [edi-0x27],0x93a610f2
  401b60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b61:	(bad)  
  401b62:	outs   dx,BYTE PTR ds:[esi]
  401b63:	lods   al,BYTE PTR ds:[esi]
  401b64:	push   es
  401b65:	adc    cl,bl
  401b67:	push   eax
  401b68:	lds    edi,FWORD PTR [ebx]
  401b6a:	call   0xe28118cf
  401b6f:	sub    eax,0xe19ff0e5
  401b74:	dec    ecx
  401b75:	shl    DWORD PTR [eax+0x1699095c],0xcc
  401b7c:	(bad)  
  401b7d:	push   ebx
  401b7e:	xchg   ecx,eax
  401b7f:	and    eax,0xce3c7ff2
  401b84:	inc    esi
  401b85:	dec    ecx
  401b86:	nop
  401b87:	out    dx,eax
  401b88:	mov    bl,0x7e
  401b8a:	mov    edi,0x43965cb0
  401b8f:	mov    ecx,0xe6947138
  401b94:	aas    
  401b95:	mov    edi,DWORD PTR [eax+0x42]
  401b98:	sahf   
  401b99:	sub    cl,dh
  401b9b:	sbb    DWORD PTR [esi-0x18],ebp
  401b9e:	mov    al,ds:0x8c12f322
  401ba3:	test   ebp,esp
  401ba5:	out    0x9e,al
  401ba7:	dec    ebp
  401ba8:	nop
  401ba9:	pop    ds
  401baa:	neg    edi
  401bac:	fwait
  401bad:	ins    DWORD PTR es:[edi],dx
  401bae:	(bad)  
  401bb0:	add    eax,0xb9d62bc
  401bb5:	fidivr WORD PTR [edx+0x546f29ee]
  401bbb:	mov    DWORD PTR [ebx+edi*8],esi
  401bbe:	aam    0x42
  401bc0:	or     BYTE PTR [eax-0x11],dl
  401bc3:	sbb    ch,al
  401bc5:	xor    al,BYTE PTR es:[esi-0x30668c18]
  401bcc:	mov    ch,0x21
  401bce:	stc    
  401bcf:	push   ecx
  401bd0:	or     edi,DWORD PTR [ebp-0x2a]
  401bd3:	(bad)  
  401bd4:	fcomp  QWORD PTR [edi-0x10]
  401bd7:	adc    DWORD PTR [edx-0x80a3e19],0x4e09e95f
  401be1:	inc    edi
  401be2:	push   edx
  401be3:	in     eax,dx
  401be4:	sub    DWORD PTR [edi+0x41],ebp
  401be7:	mov    ecx,0x312848a5
  401bec:	and    BYTE PTR [ecx+0x2ec32b7b],bl
  401bf2:	dec    eax
  401bf3:	test   BYTE PTR [esi],dh
  401bf5:	xor    ch,BYTE PTR [esi]
  401bf7:	jg     0x401b88
  401bf9:	ficomp DWORD PTR [ebp-0x25]
  401bfc:	add    al,0x80
  401bfe:	call   0xc098:0x6780ebfc
  401c05:	inc    ebx
  401c06:	arpl   WORD PTR [eax+0x8],dx
  401c09:	push   ecx
  401c0a:	jmp    0xc745:0x46b26be0
  401c11:	lods   al,BYTE PTR ds:[esi]
  401c12:	adc    ch,BYTE PTR [esi+0x41a6ad49]
  401c18:	adc    ebp,esp
  401c1a:	shl    BYTE PTR [esi-0x1d],0x5
  401c1e:	dec    edx
  401c1f:	neg    DWORD PTR ds:0x79af86c0
  401c25:	stc    
  401c26:	in     eax,dx
  401c27:	inc    esi
  401c28:	sbb    bh,bh
  401c2a:	cmp    DWORD PTR [edi],0x5e6bfa54
  401c30:	fst    st(2)
  401c32:	(bad)  
  401c34:	dec    ebx
  401c35:	je     0x401bfe
  401c37:	xchg   edi,eax
  401c38:	test   eax,0xe9e9a3a0
  401c3d:	pop    esi
  401c3e:	pop    ds
  401c3f:	dec    edi
  401c40:	inc    BYTE PTR [ebp-0x30]
  401c43:	(bad)  
  401c45:	stos   DWORD PTR es:[edi],eax
  401c46:	xchg   ebp,eax
  401c47:	call   0xd0604436
  401c4c:	dec    esp
  401c4d:	xor    BYTE PTR [ecx+esi*1+0x1e95168f],ah
  401c54:	ins    DWORD PTR es:[edi],dx
  401c55:	js     0x401c7f
  401c57:	push   edi
  401c58:	mov    cl,0x2e
  401c5a:	or     eax,0xb001a0ae
  401c5f:	cmp    al,0x13
  401c61:	jecxz  0x401c31
  401c63:	pop    ebp
  401c64:	push   edi
  401c65:	gs mov esi,0xfdf42290
  401c6b:	outs   dx,BYTE PTR ds:[esi]
  401c6c:	xlat   BYTE PTR ds:[ebx]
  401c6d:	adc    DWORD PTR [ebx+0x6e],0xffffffe6
  401c71:	add    al,0xb0
  401c73:	xor    BYTE PTR [edx],dh
  401c75:	pop    ebx
  401c76:	jecxz  0x401c76
  401c78:	and    eax,0xf189b716
  401c7d:	dec    eax
  401c7e:	jo     0x401cbe
  401c80:	call   0x1034:0x7e886da4
  401c87:	mov    WORD PTR [eax],ds
  401c89:	pushf  
  401c8a:	repnz (bad) 
  401c8d:	xchg   dl,dh
  401c8f:	mov    fs,WORD PTR [edi-0x6c]
  401c92:	xchg   DWORD PTR [esi-0x27],esp
  401c95:	leave  
  401c96:	jecxz  0x401ccc
  401c98:	stc    
  401c99:	test   eax,0x991dee6
  401c9e:	je     0x401c32
  401ca0:	mov    ah,0x63
  401ca2:	push   0x83da0589
  401ca7:	inc    esp
  401ca8:	dec    ebx
  401ca9:	inc    edi
  401caa:	pop    edx
  401cab:	aad    0x9d
  401cad:	stos   BYTE PTR es:[edi],al
  401cae:	inc    esp
  401caf:	pop    ebx
  401cb0:	out    0xcd,al
  401cb2:	jne    0x401c8f
  401cb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cb5:	icebp  
  401cb6:	sbb    DWORD PTR [esi-0x76],edi
  401cb9:	nop
  401cba:	sbb    DWORD PTR [ecx],eax
  401cbc:	push   ss
  401cbd:	inc    ebp
  401cbe:	shl    esp,cl
  401cc0:	push   esi
  401cc1:	mov    eax,ds:0xb23a4a04
  401cc6:	pop    es
  401cc7:	push   ds
  401cc8:	hlt    
  401cc9:	out    0xfa,al
  401ccb:	cmp    DWORD PTR [eax-0x71],edi
  401cce:	jl     0x401d35
  401cd0:	out    0xdd,al
  401cd2:	jbe    0x401cd8
  401cd4:	jge    0x401cd9
  401cd6:	cld    
  401cd7:	mov    edx,0x981834a3
  401cdc:	sbb    dh,BYTE PTR [ebx]
  401cde:	lahf   
  401cdf:	sbb    al,0x3d
  401ce1:	adc    ebp,DWORD PTR [ecx+0x452c0228]
  401ce7:	xor    eax,0x1b76f01e
  401cec:	pop    esp
  401ced:	jmp    0x9f896109
  401cf2:	lods   eax,DWORD PTR cs:[esi]
  401cf4:	pop    esi
  401cf5:	and    cl,BYTE PTR [ebx-0x37785c59]
  401cfb:	inc    ecx
  401cfc:	mov    edi,esi
  401cfe:	mov    edi,0x9c293d58
  401d03:	test   DWORD PTR [edx+0x61],edx
  401d06:	xor    DWORD PTR [ebx+eiz*1],esp
  401d09:	arpl   WORD PTR [esi-0x9],si
  401d0c:	mov    ecx,DWORD PTR [esi-0x3f5b406]
  401d12:	mov    ebx,0x6787094d
  401d17:	daa    
  401d18:	pop    edi
  401d19:	adc    dh,ah
  401d1b:	pop    esi
  401d1c:	daa    
  401d1d:	adc    ecx,DWORD PTR [edi]
  401d1f:	cld    
  401d20:	bound  esp,QWORD PTR [eax]
  401d22:	sbb    DWORD PTR [edx+0x6e],edi
  401d25:	out    0x3,eax
  401d27:	imul   esi,DWORD PTR [edx],0x72
  401d2a:	fnstsw WORD PTR [esi+0x20]
  401d2d:	xor    ecx,0x1ede6c0b
  401d33:	test   DWORD PTR [eax+0x5d],eax
  401d36:	push   0x691b8bd9
  401d3b:	aaa    
  401d3c:	add    DWORD PTR [ebx+0x64],ebp
  401d3f:	mov    ah,BYTE PTR [edx-0x718d8ebb]
  401d45:	fimul  WORD PTR [edx-0xc]
  401d48:	aas    
  401d49:	pop    ebx
  401d4a:	hlt    
  401d4b:	sahf   
  401d4c:	test   BYTE PTR [edx],dl
  401d4e:	pop    eax
  401d4f:	out    0xc9,al
  401d51:	xor    al,0x88
  401d53:	or     ch,cl
  401d55:	lock pop ebx
  401d57:	jo     0x401cde
  401d59:	pusha  
  401d5a:	cmp    edi,DWORD PTR es:[esi]
  401d5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d5e:	loopne 0x401d08
  401d60:	jmp    0x401cf7
  401d62:	stos   DWORD PTR es:[edi],eax
  401d63:	ins    DWORD PTR es:[edi],dx
  401d64:	stos   DWORD PTR es:[edi],eax
  401d65:	pop    ds
  401d66:	sti    
  401d67:	aam    0xa3
  401d69:	push   esp
  401d6a:	add    al,0x90
  401d6c:	out    0xf0,al
  401d6e:	rcl    DWORD PTR [eax+ebx*1-0x236996f5],1
  401d75:	fs retf 
  401d77:	(bad)  
  401d78:	stos   BYTE PTR es:[edi],al
  401d79:	fwait
  401d7a:	sub    BYTE PTR [ebp+0x50],0xd2
  401d7e:	jno    0x401dd4
  401d80:	aas    
  401d81:	out    dx,al
  401d82:	dec    ebp
  401d83:	dec    esi
  401d84:	dec    esi
  401d85:	pop    es
  401d86:	ins    BYTE PTR es:[edi],dx
  401d87:	mov    edi,0x1cfb9ead
  401d8c:	pop    es
  401d8d:	push   ss
  401d8e:	out    0x4c,eax
  401d90:	jbe    0x401d20
  401d92:	ror    DWORD PTR [eax+0x4e35134d],cl
  401d98:	mov    ebx,0x562814a
  401d9d:	dec    esp
  401d9e:	push   cs
  401d9f:	outs   dx,BYTE PTR ds:[esi]
  401da0:	push   esi
  401da1:	scas   al,BYTE PTR es:[edi]
  401da2:	in     eax,0x50
  401da4:	inc    BYTE PTR [edx-0xa]
  401da7:	mov    al,0xf3
  401da9:	push   ecx
  401daa:	fild   WORD PTR ds:0x7b26a2b9
  401db0:	mov    edx,0x94635f6b
  401db5:	call   0xdfc9:0xe1ec00d7
  401dbc:	popa   
  401dbd:	adc    BYTE PTR [edi-0x17],ah
  401dc0:	mov    al,ds:0xe43f8f3f
  401dc5:	sub    DWORD PTR ds:[edx-0x311fe988],ebx
  401dcc:	cld    
  401dcd:	out    dx,al
  401dce:	push   edi
  401dcf:	push   ss
  401dd0:	xor    DWORD PTR [esp+ebx*1],edi
  401dd3:	jb     0x401d7c
  401dd5:	rcl    DWORD PTR [esi+0x62],0xc8
  401dd9:	xor    bh,0x29
  401ddc:	imul   esp,DWORD PTR [edx-0x38],0x3fa00e83
  401de3:	lahf   
  401de4:	ds jnp 0x401d91
  401de7:	test   DWORD PTR [ebp-0x25],ebp
  401dea:	mov    bh,0x40
  401dec:	xchg   DWORD PTR [ecx],ebx
  401dee:	push   ecx
  401def:	pushf  
  401df0:	cmp    eax,0xe108a9ec
  401df5:	fimul  DWORD PTR [eax-0x71]
  401df8:	xor    eax,ebp
  401dfa:	xchg   BYTE PTR ds:0xaabb1242,dh
  401e00:	xchg   DWORD PTR [esi-0x44],ebx
  401e03:	ficomp DWORD PTR [esi+0x7]
  401e06:	popf   
  401e07:	cmp    eax,0xdf866ede
  401e0c:	or     edx,0x4fe06bc7
  401e12:	inc    ebx
  401e13:	xchg   esi,eax
  401e14:	sbb    BYTE PTR [eax+0x461221c],bh
  401e1a:	into   
  401e1b:	mov    WORD PTR [ebx],?
  401e1d:	(bad)  
  401e1e:	loop   0x401e78
  401e20:	add    edi,ecx
  401e22:	retf   
  401e23:	push   esi
  401e24:	mov    bl,0x1f
  401e26:	retf   0x3b94
  401e29:	(bad)  
  401e2a:	(bad)  
  401e2b:	xchg   esp,eax
  401e2c:	jl     0x401dc5
  401e2e:	cmp    DWORD PTR [eax+ecx*1-0x64fb509c],ebx
  401e35:	pushfw 
  401e37:	adc    ebp,DWORD PTR [ebp+0x31d4c73]
  401e3d:	mov    cl,0x69
  401e3f:	test   eax,0x2fff271e
  401e44:	xor    eax,0xc3a08eed
  401e49:	jmp    0x8a7c3844
  401e4e:	push   edx
  401e4f:	xor    DWORD PTR [ebx+0x5b],0x204a7561
  401e56:	arpl   si,bp
  401e58:	jbe    0x401df4
  401e5a:	sub    DWORD PTR [edx-0x60],edi
  401e5d:	ret    0x9d8a
  401e60:	iret   
  401e61:	mov    ds:0x4eb0316a,eax
  401e66:	or     bh,BYTE PTR [edx]
  401e68:	mov    ds:0x263f6956,eax
  401e6d:	lea    eax,[edx-0x4e9ea76]
  401e73:	jmp    0x401e55
  401e75:	jo     0x401e67
  401e77:	sbb    eax,0x91bf75
  401e7c:	retf   0xe299
  401e7f:	mov    bh,0x1d
  401e81:	inc    ecx
  401e82:	mov    edi,0xd968a226
  401e87:	popf   
  401e88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e89:	push   ss
  401e8a:	in     al,dx
  401e8b:	sar    DWORD PTR [edi+0x746ec7c1],1
  401e91:	add    eax,0x760ed065
  401e96:	add    eax,eax
  401e98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e99:	(bad)  
  401e9a:	int    0x5e
  401e9c:	fwait
  401e9d:	mov    bl,0xb1
  401e9f:	inc    edx
  401ea0:	fsub   QWORD PTR [esi-0x59]
  401ea3:	cmp    BYTE PTR [eax],ch
  401ea5:	rcr    BYTE PTR [ebx+0x1],0x19
  401ea9:	sahf   
  401eaa:	cmp    esi,eax
  401eac:	or     bl,dh
  401eae:	fild   DWORD PTR [eax-0x7c]
  401eb1:	adc    BYTE PTR [eax],0xc
  401eb4:	mov    al,0x2a
  401eb6:	fsubrp st(6),st
  401eb8:	scas   al,BYTE PTR es:[edi]
  401eb9:	mov    ds:0xb048a1c5,al
  401ebe:	iret   
  401ebf:	and    BYTE PTR [ebx-0x57],ch
  401ec2:	ins    DWORD PTR es:[edi],dx
  401ec3:	pop    esi
  401ec4:	xchg   ebx,eax
  401ec5:	cld    
  401ec6:	and    eax,0xc9e1fd69
  401ecb:	jo     0x401efc
  401ecd:	inc    esi
  401ece:	into   
  401ecf:	ret    
  401ed0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ed1:	les    esp,FWORD PTR [ebx]
  401ed3:	int    0x66
  401ed5:	xchg   esp,eax
  401ed6:	sbb    BYTE PTR gs:[ecx],bl
  401ed9:	fmul   DWORD PTR [edx]
  401edb:	out    dx,al
  401edc:	sti    
  401edd:	xchg   esi,eax
  401ede:	jmp    0x401ee4
  401ee0:	out    dx,eax
  401ee1:	and    dh,BYTE PTR [edi-0x1f]
  401ee4:	ret    0xc0be
  401ee7:	ins    BYTE PTR es:[edi],dx
  401ee8:	test   eax,0x9c50b91e
  401eed:	ds ret 
  401eef:	push   cs
  401ef0:	inc    ebx
  401ef1:	or     BYTE PTR [edx],bl
  401ef3:	inc    eax
  401ef4:	addr16 hlt 
  401ef6:	add    eax,0xcefaffe9
  401efb:	(bad)  
  401efc:	aam    0xc9
  401efe:	dec    esp
  401eff:	cdq    
  401f00:	addr16 or al,0xa8
  401f03:	icebp  
  401f04:	jp     0x401ec2
  401f06:	mov    cl,0x14
  401f08:	rcr    DWORD PTR [edx-0x3e],cl
  401f0b:	aaa    
  401f0c:	or     edi,edx
  401f0e:	sub    ecx,DWORD PTR [esi+0x70]
  401f11:	xor    DWORD PTR [edi+0x56],0x7e
  401f15:	sub    edi,edx
  401f17:	mov    ah,0x96
  401f19:	jne    0x401edf
  401f1b:	sub    eax,0xd8b0fb8d
  401f20:	into   
  401f21:	pop    ds
  401f22:	shl    dl,cl
  401f24:	xchg   edi,eax
  401f25:	stos   DWORD PTR es:[edi],eax
  401f26:	outs   dx,WORD PTR ds:[esi]
  401f28:	in     al,dx
  401f29:	mov    ebp,0x324eaad2
  401f2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f2f:	and    DWORD PTR [ecx+ebx*1],edx
  401f32:	rcr    DWORD PTR [ebx],0x9a
  401f35:	push   0xffffffe8
  401f37:	sbb    esi,eax
  401f39:	inc    esi
  401f3a:	mul    DWORD PTR [edi+edi*4]
  401f3d:	xor    esp,ebp
  401f3f:	or     eax,0x953ec28b
  401f44:	xor    DWORD PTR [ebx+0x3edd4f9a],0x75
  401f4b:	mov    cl,0x98
  401f4d:	(bad)  
  401f4e:	pop    ds
  401f4f:	push   edx
  401f50:	cmp    esp,DWORD PTR ds:[ebx-0x43]
  401f54:	cdq    
  401f55:	xor    eax,0x23b04387
  401f5a:	cmp    al,0x4e
  401f5c:	add    al,0xe7
  401f5e:	inc    edx
  401f5f:	adc    DWORD PTR [ecx],eax
  401f61:	fdivp  st(0),st
  401f63:	pop    ecx
  401f65:	dec    ebx
  401f66:	loope  0x401fcd
  401f68:	push   ebp
  401f69:	gs inc ebx
  401f6b:	sbb    dl,BYTE PTR [ebx-0x3c58f5c5]
  401f71:	and    BYTE PTR [edi],ah
  401f73:	xor    ch,BYTE PTR [edi-0x43]
  401f76:	mov    bl,0x78
  401f78:	cmc    
  401f79:	push   ds
  401f7a:	mov    WORD PTR [ebx+0x70],?
  401f7d:	mov    ah,0x4f
  401f7f:	mov    ch,BYTE PTR [ebx+0x34]
  401f82:	sub    dl,al
  401f84:	rcl    BYTE PTR [ecx-0x21],0xc4
  401f88:	test   eax,0x147c2e82
  401f8d:	jmp    0x401f52
  401f8f:	adc    al,0x76
  401f91:	aad    0x79
  401f93:	arpl   WORD PTR [eax-0x76],dx
  401f96:	into   
  401f97:	test   al,0x11
  401f99:	stos   BYTE PTR es:[edi],al
  401f9a:	into   
  401f9b:	ds sub eax,0x4d6d7bc8
  401fa1:	fsub   QWORD PTR [edi-0x6f]
  401fa4:	sar    BYTE PTR [ebx],0x94
  401fa7:	add    ebp,esp
  401fa9:	call   0x3ce2:0xd0438fd1
  401fb0:	xchg   edx,eax
  401fb1:	xchg   BYTE PTR [edx-0x59a79c94],ah
  401fb7:	cdq    
  401fb8:	enter  0xb1d3,0x1b
  401fbc:	cs aam 0x9d
  401fbf:	jmp    0x401f70
  401fc1:	and    eax,0x6f0c9088
  401fc6:	mov    ebp,0xcd59541d
  401fcb:	xchg   edi,eax
  401fcc:	call   0x9326cd74
  401fd1:	dec    esp
  401fd2:	push   eax
  401fd3:	std    
  401fd4:	dec    esp
  401fd5:	arpl   bx,ax
  401fd7:	inc    ebp
  401fd8:	fld    DWORD PTR [edx-0x38bf748b]
  401fde:	call   0x6da0:0xe0b69fd6
  401fe5:	dec    edx
  401fe6:	jmp    0x401fdd
  401fe8:	jo     0x401fa0
  401fea:	fwait
  401feb:	adc    dl,BYTE PTR [eax+0x8c7dbf4]
  401ff1:	or     bl,BYTE PTR [ebx]
  401ff3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ff4:	mov    BYTE PTR [eax-0x7c5cfcf],al
  401ffa:	or     BYTE PTR [ebp+0x54],dl
  401ffd:	cmovl  ebx,DWORD PTR [ebp+0x78]
  402001:	iret   
  402002:	popa   
  402003:	(bad)  
  402004:	clc    
  402005:	xchg   esi,eax
  402006:	aas    
  402007:	iret   
  402008:	dec    eax
  402009:	and    ch,dl
  40200b:	fsub   st,st(3)
  40200d:	mov    WORD PTR [edi+0x7021e3ce],fs
  402013:	popf   
  402014:	xchg   ebx,eax
  402015:	mov    bh,0x46
  402017:	xor    bh,ah
  402019:	inc    ebx
  40201a:	dec    esp
  40201b:	or     al,0xbc
  40201d:	lods   eax,DWORD PTR ds:[esi]
  40201e:	add    DWORD PTR [ecx+0x7c],ecx
  402021:	idiv   BYTE PTR [edi-0x6a7fe941]
  402027:	(bad)
  40202a:	fbld   TBYTE PTR [ecx-0x8]
  40202d:	cdq    
  40202e:	mov    ebp,0x279b0002
  402033:	stos   DWORD PTR es:[edi],eax
  402034:	test   BYTE PTR [esi-0x4f135c56],dh
  40203a:	dec    edi
  40203b:	pop    esp
  40203c:	push   ecx
  40203d:	jecxz  0x40208e
  40203f:	sahf   
  402040:	cmp    BYTE PTR [eax-0x62e39c11],ah
  402046:	mov    edi,0x37e5986b
  40204b:	xor    al,dl
  40204d:	scas   eax,DWORD PTR es:[edi]
  40204e:	shr    DWORD PTR [edx-0xa],cl
  402051:	fild   WORD PTR [edi+0x4386123c]
  402057:	dec    eax
  402058:	aad    0x93
  40205a:	adc    DWORD PTR [ebx+0x5],esi
  40205d:	das    
  40205e:	outs   dx,BYTE PTR ds:[esi]
  40205f:	test   al,0x6
  402061:	inc    esi
  402062:	pop    esp
  402063:	cmp    DWORD PTR [esi-0x5a4a567e],esp
  402069:	jns    0x4020e9
  40206b:	int    0x2e
  40206d:	ror    ecx,0xdf
  402070:	into   
  402071:	push   ds
  402072:	xor    cl,BYTE PTR [edx-0x1f1261ed]
  402078:	mov    cl,0x8a
  40207a:	out    dx,al
  40207b:	mov    cl,0x67
  40207d:	sub    eax,0x4ff380c0
  402082:	xchg   ebx,eax
  402083:	hlt    
  402084:	in     al,0x29
  402086:	xor    esi,eax
  402088:	pop    ebx
  402089:	in     al,0xac
  40208b:	jg     0x402017
  40208d:	sahf   
  40208e:	mov    BYTE PTR [esi+edi*1+0x3f13257e],0x30
  402096:	sub    BYTE PTR ds:0x27ff8a3b,bh
  40209c:	and    edx,DWORD PTR [eax+0x19]
  40209f:	dec    edi
  4020a0:	lahf   
  4020a1:	lock out 0x40,al
  4020a4:	inc    ecx
  4020a5:	(bad)  
  4020a6:	mov    ebp,0x3289399
  4020ab:	pop    ebp
  4020ac:	(bad)  
  4020ad:	pusha  
  4020ae:	loopne 0x4020d3
  4020b0:	sahf   
  4020b1:	lar    ebp,WORD PTR ss:[edx-0x5d]
  4020b6:	bound  ecx,QWORD PTR [esi]
  4020b8:	xchg   edi,eax
  4020b9:	add    eax,DWORD PTR [edi-0x46394d77]
  4020bf:	mov    BYTE PTR [edx+0x3ea7fd49],0xb2
  4020c6:	and    eax,0xebfa1d14
  4020cb:	addr16 jne 0x40212a
  4020ce:	outs   dx,DWORD PTR ds:[esi]
  4020cf:	xchg   edi,eax
  4020d0:	es inc edi
  4020d2:	jne    0x402141
  4020d4:	dec    ecx
  4020d5:	xor    dh,BYTE PTR [edi]
  4020d7:	cmp    cl,BYTE PTR [ebx-0x2a4c4c10]
  4020dd:	jb     0x40209b
  4020df:	in     eax,0x28
  4020e1:	dec    eax
  4020e2:	add    cl,BYTE PTR [ecx+eiz*1]
  4020e5:	inc    ebp
  4020e6:	ret    
  4020e7:	sbb    al,0xfd
  4020e9:	stos   BYTE PTR es:[edi],al
  4020ea:	icebp  
  4020eb:	or     dh,bh
  4020ed:	or     al,0x71
  4020ef:	add    eax,0x9fb7b31a
  4020f4:	add    cl,BYTE PTR [esi*1+0x6efd3d01]
  4020fb:	xchg   ecx,eax
  4020fc:	ja     0x40207e
  4020fe:	leave  
  4020ff:	ficomp WORD PTR ds:[edi]
  402102:	imul   esp,DWORD PTR [ecx+0x70360c86],0xffffffbb
  402109:	out    0xb2,eax
  40210b:	xchg   esp,eax
  40210c:	sti    
  40210d:	ins    BYTE PTR es:[edi],dx
  40210e:	repz or BYTE PTR [ecx],bh
  402111:	xor    dh,BYTE PTR [eiz*2+0x4c4284aa]
  402118:	mov    eax,0xac921747
  40211d:	mov    WORD PTR [ebp+0x3c],ss
  402120:	addr16 dec dx
  402123:	fmulp  st(6),st
  402125:	push   ebx
  402126:	sahf   
  402127:	in     eax,dx
  402128:	mov    dh,0x45
  40212a:	mov    bl,0x5e
  40212c:	fs pop eax
  40212e:	mov    esi,0x58aee2c8
  402133:	rcr    ebp,1
  402135:	push   ebp
  402136:	inc    esp
  402137:	cli    
  402138:	arpl   WORD PTR [ebx],si
  40213a:	mov    cl,0xc1
  40213c:	jp     0x402156
  40213e:	jmp    ecx
  402140:	data16 into 
  402142:	shr    BYTE PTR [ebx+0x25],cl
  402145:	adc    bh,BYTE PTR [ecx+0x7f]
  402148:	jge    0x402137
  40214a:	and    al,0x2c
  40214c:	jecxz  0x4020db
  40214e:	mov    bh,0xfe
  402150:	retf   0x5b1b
  402153:	xchg   ebx,eax
  402154:	aam    0x2c
  402156:	mov    ch,0xb
  402158:	in     al,dx
  402159:	and    DWORD PTR [eax+0x19dc512a],ebp
  40215f:	jns    0x402145
  402161:	popa   
  402162:	adc    DWORD PTR [ebx+0x1cd7ee02],ebx
  402168:	xor    bl,BYTE PTR [edx]
  40216a:	shrd   DWORD PTR [esi+0x3274ca4a],ebp,0x9
  402172:	shr    BYTE PTR [ecx+0x7a],0xfb
  402176:	jmp    0x75fc3436
  40217b:	ja     0x4021ec
  40217d:	or     ebx,DWORD PTR [eax+0x7b]
  402180:	(bad)  
  402182:	sbb    ebp,edx
  402184:	push   DWORD PTR [ebx]
  402186:	sahf   
  402187:	aaa    
  402188:	out    0xfb,eax
  40218a:	in     eax,dx
  40218b:	mov    al,0x8e
  40218d:	lods   eax,DWORD PTR ds:[esi]
  40218e:	fbstp  TBYTE PTR [esi]
  402190:	pop    eax
  402191:	mov    eax,ds:0x63af4427
  402196:	cwde   
  402197:	mov    dh,0x86
  402199:	in     al,0xf7
  40219b:	jb     0x40214b
  40219d:	lods   eax,DWORD PTR ds:[esi]
  40219e:	out    dx,al
  40219f:	xchg   ecx,eax
  4021a0:	jmp    DWORD PTR [edi]
  4021a2:	cmp    eax,0x829e9813
  4021a7:	mov    al,ds:0x99aeee71
  4021ac:	inc    edi
  4021ad:	retf   0xba1f
  4021b0:	fistp  DWORD PTR [esp+eax*4]
  4021b3:	sub    edx,edx
  4021b5:	out    0xe1,eax
  4021b7:	mov    DWORD PTR [ebp+0x9],edi
  4021ba:	push   edi
  4021bb:	pop    ebx
  4021bc:	cmp    eax,DWORD PTR [edi-0x5f6f6a83]
  4021c2:	push   ebp
  4021c3:	xchg   ebx,eax
  4021c4:	call   0x1178c713
  4021c9:	(bad)  
  4021ca:	aam    0xbc
  4021cc:	add    bh,cl
  4021ce:	ret    
  4021cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021d0:	mov    esp,DWORD PTR [ecx-0x4c]
  4021d3:	popf   
  4021d4:	inc    ebx
  4021d5:	out    dx,eax
  4021d6:	fild   WORD PTR [esi+0x4]
  4021d9:	loop   0x4021af
  4021db:	mov    esi,ebp
  4021dd:	shr    BYTE PTR [ebp+0x6803cac5],1
  4021e3:	nop
  4021e4:	lock je 0x4021f4
  4021e7:	jle    0x402237
  4021e9:	sub    cl,BYTE PTR [eax]
  4021eb:	inc    ebx
  4021ec:	sub    eax,0xb6587a33
  4021f1:	xlat   BYTE PTR ds:[ebx]
  4021f2:	mov    BYTE PTR [eax-0x193afaa8],al
  4021f8:	jno    0x402208
  4021fa:	shr    BYTE PTR [edx-0x49bfb94e],0x4
  402201:	test   BYTE PTR ss:[edi+ecx*4],0x35
  402206:	lea    ebp,[eax-0x79]
  402209:	stc    
  40220a:	and    al,0x1b
  40220c:	pop    ss
  40220d:	cmc    
  40220e:	in     eax,0xcf
  402210:	xchg   DWORD PTR [esi],edi
  402212:	dec    ebx
  402213:	loop   0x402244
  402215:	and    al,0xc7
  402217:	adc    dh,BYTE PTR [ecx-0x62dbf67c]
  40221d:	jmp    0x3675:0x90908001
  402224:	scas   al,BYTE PTR es:[edi]
  402225:	cmp    al,0xf5
  402227:	mov    bl,0xac
  402229:	stos   DWORD PTR es:[edi],eax
  40222a:	xchg   esi,eax
  40222b:	pop    ecx
  40222c:	mov    ah,0xd1
  40222e:	xor    al,0x99
  402230:	cmc    
  402231:	mov    al,0xc3
  402233:	push   0x43
  402235:	shl    BYTE PTR [edi+0x34],0xa7
  402239:	inc    ebp
  40223a:	push   ebp
  40223b:	and    DWORD PTR [edi+0x4cbdeab3],edx
  402241:	mov    eax,ds:0xbc9d6d1e
  402246:	adc    eax,0x1d4a82ba
  40224b:	adc    al,0x2d
  40224d:	mov    dl,0xb
  40224f:	retf   0x5e38
  402252:	cli    
  402253:	xchg   esp,eax
  402254:	lods   eax,DWORD PTR ds:[esi]
  402255:	fst    DWORD PTR [ebp+0x66c4704a]
  40225b:	call   0x392dbe06
  402260:	jnp    0x4022ae
  402262:	ja     0x402200
  402264:	arpl   WORD PTR [ecx-0x80],bx
  402267:	push   edi
  402268:	shl    BYTE PTR [ebp+0x32818dcf],1
  40226e:	cld    
  40226f:	cmc    
  402270:	jle    0x4022b3
  402272:	ret    0x8c32
  402275:	pop    esi
  402276:	mov    BYTE PTR [ebx-0x45],al
  402279:	int    0x76
  40227b:	call   DWORD PTR [ecx-0xa]
  40227e:	and    eax,0xf9041168
  402283:	push   edx
  402284:	xor    DWORD PTR [ebx],ecx
  402286:	jecxz  0x4022be
  402288:	push   esp
  402289:	mov    cl,bl
  40228b:	pop    edi
  40228c:	inc    esp
  40228d:	fsubp  st(3),st
  40228f:	jae    0x402282
  402291:	std    
  402292:	xchg   esi,eax
  402293:	adc    DWORD PTR [esi+0x7c583d18],esp
  402299:	lahf   
  40229a:	mov    cl,0x25
  40229c:	bound  esp,QWORD PTR ds:0x17684e48
  4022a2:	xchg   ch,dh
  4022a4:	repz loop 0x402269
  4022a7:	icebp  
  4022a8:	or     DWORD PTR [edx-0x15],0x37
  4022ac:	or     ah,ah
  4022ae:	mov    dh,0x3
  4022b0:	push   esp
  4022b1:	fsub   QWORD PTR [ebp+0x1b]
  4022b4:	lea    ecx,[ebx+0x65d51e7d]
  4022ba:	leave  
  4022bb:	stos   DWORD PTR es:[edi],eax
  4022bc:	dec    edx
  4022bd:	call   0x1e1f:0x38485ad7
  4022c4:	inc    ebp
  4022c5:	mov    esi,0x3edea69b
  4022ca:	jns    0x40226d
  4022cc:	data16 cmc 
  4022ce:	hlt    
  4022cf:	push   0x5e
  4022d1:	push   eax
  4022d2:	fnsave [ecx]
  4022d4:	rcr    DWORD PTR [ebx-0xc565da4],cl
  4022da:	(bad)  
  4022db:	ret    0xa8a9
  4022de:	or     DWORD PTR [ecx+0x1f3f3d52],edi
  4022e4:	xchg   esp,eax
  4022e5:	ds cli 
  4022e7:	inc    ecx
  4022e8:	xor    edx,ebp
  4022ea:	xor    ebp,DWORD PTR [ebp+esi*1+0x52]
  4022ee:	jno    0x40235d
  4022f0:	jge    0x40230e
  4022f2:	daa    
  4022f3:	and    eax,0x7c00e99f
  4022f8:	cld    
  4022f9:	mov    dh,cl
  4022fb:	cmp    ebp,DWORD PTR [eax-0x63f54cec]
  402301:	adc    al,0x93
  402303:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402304:	push   edx
  402305:	ss inc ebp
  402307:	add    dh,ah
  402309:	int3   
  40230a:	jnp    0x40229b
  40230c:	jmp    0xf4e8:0x5f7bd4e3
  402313:	addr16 enter 0xb0c9,0x4d
  402318:	adc    eax,0xa33116f6
  40231d:	lods   eax,DWORD PTR ds:[esi]
  40231e:	push   esp
  40231f:	jne    0x4022e8
  402321:	(bad)  
  402322:	hlt    
  402323:	dec    esi
  402324:	sub    al,0x2d
  402326:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402327:	push   ebp
  402328:	lods   eax,DWORD PTR ds:[esi]
  402329:	push   es
  40232a:	(bad)  
  40232b:	enter  0x5c7a,0xbc
  40232f:	xor    DWORD PTR [eax+0x5684c8c6],eax
  402335:	leave  
  402336:	pop    esp
  402337:	or     eax,0x6637d8b6
  40233d:	js     0x4022df
  40233f:	sub    al,0x7c
  402341:	pop    ds
  402342:	xor    eax,0xec2e7a28
  402347:	add    al,0x13
  402349:	into   
  40234a:	clc    
  40234b:	xchg   edx,eax
  40234c:	mov    eax,ds:0x3658c466
  402351:	pop    es
  402352:	or     eax,DWORD PTR [edi]
  402354:	fsub   DWORD PTR [ecx-0x126da86a]
  40235a:	stos   DWORD PTR es:[edi],eax
  40235b:	sbb    edi,DWORD PTR [ebp+0x3f]
  40235e:	jno    0x40230f
  402360:	inc    ecx
  402361:	push   ss
  402362:	xor    al,al
  402364:	jmp    0xa68c:0xdd2d6e5a
  40236b:	arpl   WORD PTR [ecx+0x23],sp
  40236e:	cmp    cl,0x53
  402371:	in     al,0xd2
  402373:	repz fs add eax,0x43fa22ce
  40237a:	mov    ds,WORD PTR [edi-0x55485ebc]
  402380:	mov    eax,ds:0x186ad821
  402385:	sar    al,0x71
  402388:	jl     0x402331
  40238a:	mov    cl,0xc3
  40238c:	fist   DWORD PTR [edx+0x5f]
  40238f:	jb     0x4023bd
  402391:	push   0x33746231
  402396:	sbb    ebp,DWORD PTR [edx-0x5372a990]
  40239c:	adc    DWORD PTR [esi-0x1e],ecx
  40239f:	imul   BYTE PTR [esp+eax*1]
  4023a2:	mov    ecx,0xc7c6b2cf
  4023a7:	add    bl,BYTE PTR [edi+0x1d]
  4023aa:	repz bound edx,QWORD PTR [ebx+0xb]
  4023ae:	sti    
  4023af:	add    BYTE PTR [eax+0x5fceef50],0xbf
  4023b6:	(bad)  
  4023b7:	enter  0x6d33,0x8
  4023bb:	mov    bh,0xe6
  4023bd:	push   ebx
  4023be:	and    ecx,DWORD PTR [edx]
  4023c0:	test   eax,eax
  4023c2:	int3   
  4023c3:	lahf   
  4023c4:	mov    esp,0xd69184a3
  4023c9:	add    dh,dh
  4023cb:	(bad)  
  4023cc:	fwait
  4023cd:	test   al,0xf3
  4023cf:	popf   
  4023d0:	dec    ebx
  4023d1:	stos   BYTE PTR es:[edi],al
  4023d2:	pusha  
  4023d3:	shr    BYTE PTR [ecx],cl
  4023d5:	mov    bl,0x92
  4023d7:	pop    ds
  4023d8:	dec    ebp
  4023d9:	out    dx,al
  4023da:	(bad)  [ecx+0x5f]
  4023dd:	xchg   ch,bh
  4023df:	imul   edi,DWORD PTR [ebx-0x46bc485c],0xeaa5691f
  4023e9:	lea    esp,[edx-0x15]
  4023ec:	sub    BYTE PTR [edx],ch
  4023ee:	pop    ecx
  4023ef:	cmp    al,BYTE PTR [edx+0x18]
  4023f2:	xor    dl,BYTE PTR ds:[edx-0x78]
  4023f6:	out    0xf,al
  4023f8:	and    eax,0x62d2dbe6
  4023fd:	adc    bl,BYTE PTR [edi-0x4d]
  402400:	xor    al,0x2b
  402402:	leave  
  402403:	ja     0x40241d
  402405:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402406:	mov    bl,0xa5
  402408:	inc    ebx
  402409:	mov    esi,DWORD PTR [edi]
  40240b:	pop    ebp
  40240c:	aaa    
  40240d:	cmp    BYTE PTR ds:0x456f2a2a,dh
  402413:	imul   edx,DWORD PTR [ebp+0x24],0x2b366d7d
  40241a:	mov    ebp,0xa5c43a42
  40241f:	inc    eax
  402420:	pusha  
  402421:	fld    DWORD PTR [ebx-0x1fdb742]
  402427:	push   ss
  402428:	mov    edx,0x4acfb4e0
  40242d:	sbb    DWORD PTR [ebx+edi*8+0x34],edi
  402431:	add    BYTE PTR [ebx-0x250e49ca],0x5f
  402438:	cmp    BYTE PTR [eax],ah
  40243a:	iret   
  40243b:	loop   0x402477
  40243d:	jns    0x402487
  40243f:	sahf   
  402440:	mov    al,0x21
  402442:	sub    BYTE PTR [edi+0x6],bh
  402445:	jge    0x40249c
  402447:	push   ds
  402448:	hlt    
  402449:	(bad)  
  40244a:	mov    BYTE PTR ds:0x47d04d9f,al
  402450:	xor    ecx,DWORD PTR [edi-0x72241a7f]
  402456:	fdivp  st(4),st
  402458:	pop    ebx
  402459:	mov    ah,0x35
  40245b:	xchg   ecx,eax
  40245c:	stos   DWORD PTR es:[edi],eax
  40245d:	sub    DWORD PTR [eax],esp
  40245f:	pushf  
  402460:	push   ecx
  402461:	or     al,0x71
  402463:	scas   eax,DWORD PTR es:[edi]
  402464:	cmc    
  402465:	inc    edx
  402466:	fwait
  402467:	pop    ecx
  402468:	rcr    BYTE PTR [ebx-0x595ea010],1
  40246e:	adc    esp,DWORD PTR [eax+0x1f]
  402471:	fbstp  TBYTE PTR [ebx]
  402473:	call   0x767d3689
  402478:	cmp    DWORD PTR [edx+0x6b4e9ef7],esp
  40247e:	fidiv  DWORD PTR [ebx-0x32]
  402481:	pop    ds
  402482:	add    bh,BYTE PTR [ebp-0x1973d983]
  402488:	rcl    BYTE PTR [esp+ecx*2-0x1],cl
  40248c:	enter  0x35b7,0xd5
  402490:	pop    es
  402491:	push   esi
  402492:	stc    
  402493:	aas    
  402494:	adc    eax,0x3217e155
  402499:	inc    eax
  40249a:	jge    0x402445
  40249c:	xor    esi,0xffffffc9
  40249f:	dec    ebx
  4024a0:	push   0xce910853
  4024a5:	(bad)  
  4024a6:	fidivr DWORD PTR [ebp-0x28]
  4024a9:	(bad)  
  4024aa:	je     0x4024df
  4024ac:	cmp    edx,DWORD PTR [eax]
  4024ae:	jmp    FWORD PTR [edx+0x34329663]
  4024b4:	cmp    ebx,DWORD PTR [ebx+0x75fc787b]
  4024ba:	adc    al,0x54
  4024bc:	in     eax,dx
  4024bd:	rcl    DWORD PTR [ebp+0x3842d60],cl
  4024c3:	xchg   edx,eax
  4024c4:	inc    edx
  4024c5:	pop    esi
  4024c6:	pop    edx
  4024c7:	outs   dx,BYTE PTR ds:[esi]
  4024c8:	inc    ebp
  4024c9:	(bad)  
  4024ca:	aam    0x97
  4024cc:	loop   0x402510
  4024ce:	(bad)  
  4024cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4024d0:	adc    DWORD PTR [edx+eax*4],0x5
  4024d4:	dec    esi
  4024d5:	jmp    0x78382e14
  4024da:	mov    ch,BYTE PTR [ebp+0x71]
  4024dd:	sbb    BYTE PTR [edi+0x9],bh
  4024e0:	lock lock les esp,FWORD PTR [esi-0x59]
  4024e5:	xlat   BYTE PTR ds:[ebx]
  4024e6:	sub    BYTE PTR [esi-0x5cb138a4],dl
  4024ec:	iret   
  4024ed:	and    BYTE PTR [esi+0x21a2612d],dh
  4024f3:	test   edi,edx
  4024f5:	mov    edi,0xbda74482
  4024fa:	sbb    DWORD PTR [ebx-0x67d9c211],ecx
  402500:	add    dh,BYTE PTR [ecx]
  402502:	push   ss
  402503:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402504:	adc    DWORD PTR [edx],edx
  402506:	js     0x4024c3
  402508:	fbstp  TBYTE PTR [ecx]
  40250a:	or     eax,0x676c869b
  40250f:	mov    esi,0xe0a53319
  402514:	call   0xb54d:0xa2fec602
  40251b:	and    DWORD PTR [ebp-0x688e6952],ecx
  402521:	jp     0x4024cc
  402523:	jp     0x40252e
  402525:	mov    ch,0x8e
  402527:	mov    edx,0x837b21fe
  40252c:	mov    edx,0x764a65c3
  402531:	mov    esi,0x81fc52a5
  402536:	push   esp
  402537:	cld    
  402538:	mov    ah,BYTE PTR [edi+0x6a616102]
  40253e:	push   ss
  40253f:	jns    0x402508
  402541:	test   ch,bl
  402543:	mov    dl,0x11
  402545:	xchg   ecx,eax
  402546:	les    ebp,FWORD PTR [edi+0xb]
  402549:	cmp    DWORD PTR [edi-0x2b],edx
  40254c:	dec    DWORD PTR [esi+ebx*8]
  40254f:	xchg   ecx,eax
  402550:	xchg   ebp,eax
  402551:	mov    cl,0xfb
  402553:	(bad)  
  402554:	loop   0x4025cb
  402556:	inc    esp
  402557:	push   ss
  402558:	les    eax,FWORD PTR [eax-0x69]
  40255b:	xchg   ecx,eax
  40255c:	or     eax,0xec1b9e72
  402561:	push   cs
  402562:	adc    dl,BYTE PTR [esi-0x26]
  402565:	or     DWORD PTR [esi+0x3d3d940f],esi
  40256b:	popa   
  40256c:	int3   
  40256d:	retf   
  40256e:	xlat   BYTE PTR ds:[ebx]
  40256f:	mov    al,ds:0x3d345adc
  402574:	loop   0x402506
  402576:	xor    ecx,ebx
  402578:	pop    ecx
  402579:	shr    ecx,cl
  40257b:	ins    BYTE PTR es:[edi],dx
  40257c:	pop    es
  40257d:	cmp    eax,0x4820955b
  402582:	xlat   BYTE PTR ds:[ebx]
  402583:	xchg   edi,eax
  402584:	sub    al,0xf9
  402586:	stos   BYTE PTR es:[edi],al
  402587:	out    dx,al
  402588:	add    BYTE PTR [esi+0x193825fc],ah
  40258e:	lods   al,BYTE PTR ds:[esi]
  40258f:	xor    eax,0xd6107948
  402594:	and    esi,ebp
  402596:	js     0x4025c8
  402598:	test   BYTE PTR [eax-0x3b972aec],ah
  40259e:	sbb    bh,BYTE PTR [ebp-0x1d1de886]
  4025a4:	jo     0x40253a
  4025a6:	dec    ecx
  4025a7:	test   eax,0x9bdab56e
  4025ac:	sbb    bl,ch
  4025ae:	(bad)  
  4025af:	adc    DWORD PTR [esi],ebx
  4025b1:	mov    ecx,0x2e607db8
  4025b6:	xchg   ecx,eax
  4025b7:	adc    al,BYTE PTR [esi+esi*1]
  4025ba:	push   0xf117379a
  4025bf:	add    ebx,DWORD PTR ds:0x3032f129
  4025c5:	into   
  4025c6:	inc    di
  4025c8:	sub    edi,DWORD PTR ds:0xc3247afb
  4025ce:	rcl    esp,0x27
  4025d1:	enter  0x88a4,0xdb
  4025d5:	int3   
  4025d6:	sub    BYTE PTR [edx+0x3374b5cb],0x15
  4025dd:	loope  0x402564
  4025df:	ins    DWORD PTR es:[edi],dx
  4025e0:	pop    es
  4025e1:	aam    0xb9
  4025e3:	popa   
  4025e4:	sti    
  4025e5:	sbb    DWORD PTR [edi+eiz*4],0xffffffac
  4025e9:	ss mov ebp,0xad2eb936
  4025ef:	pop    eax
  4025f0:	std    
  4025f1:	pop    eax
  4025f2:	retf   
  4025f3:	cmp    ah,ah
  4025f5:	xchg   ecx,eax
  4025f6:	and    al,BYTE PTR [esi]
  4025f8:	pushf  
  4025f9:	sahf   
  4025fa:	inc    esp
  4025fb:	jnp    0x40261b
  4025fd:	xor    DWORD PTR [ebx],ebx
  4025ff:	sub    bh,BYTE PTR [eax-0x53]
  402602:	add    ch,BYTE PTR [esi]
  402604:	push   ebx
  402605:	mov    ds:0xd3df08ba,al
  40260a:	pop    ss
  40260b:	out    0xb1,al
  40260d:	push   ds
  40260e:	xchg   edi,eax
  40260f:	pop    edx
  402610:	push   ds
  402611:	or     bl,BYTE PTR [ebx+0x2f]
  402614:	daa    
  402615:	xor    eax,0xe70f415c
  40261a:	mov    dh,0xb7
  40261c:	adc    ecx,DWORD PTR ds:0x435d6d5c
  402622:	sbb    cl,0x26
  402625:	cmc    
  402626:	dec    ecx
  402627:	cmp    ebx,DWORD PTR [eax-0x55]
  40262a:	jl     0x402621
  40262c:	inc    edx
  40262d:	lock cli 
  40262f:	mov    ch,0x98
  402631:	cmp    BYTE PTR [edx-0x71],ah
  402634:	aas    
  402635:	mov    eax,ds:0x20247233
  40263a:	cmp    DWORD PTR [ecx+ebx*8-0x7a],edi
  40263e:	les    edx,FWORD PTR [edi+0x7a3b94a4]
  402644:	inc    ebp
  402645:	rcl    dh,1
  402647:	cmp    dl,ah
  402649:	fistp  DWORD PTR [edx]
  40264b:	and    al,0x6f
  40264d:	adc    eax,0x1db0c3b3
  402652:	lea    edx,[esi-0x2d4220a0]
  402658:	je     0x4026c3
  40265a:	xchg   esp,eax
  40265b:	sub    al,0xd
  40265d:	fld    DWORD PTR [esi+0x34]
  402660:	cmp    dl,BYTE PTR [ebp-0x20]
  402663:	(bad)  
  402664:	pop    ebx
  402665:	leave  
  402666:	jb     0x402692
  402668:	cwde   
  402669:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40266a:	(bad)  
  40266c:	es icebp 
  40266e:	clc    
  40266f:	call   0x1ae08863
  402674:	sub    esi,DWORD PTR [ebx]
  402676:	mov    ecx,0x900abec8
  40267b:	xchg   esi,eax
  40267c:	sbb    ah,BYTE PTR [eax+0x71]
  40267f:	xor    BYTE PTR [edi],ah
  402681:	xchg   DWORD PTR [eax-0x41cfb814],edx
  402687:	mov    al,ds:0xe9f3b267
  40268c:	or     al,0xce
  40268e:	adc    DWORD PTR ds:0xdf5a3ea9,edx
  402694:	outs   dx,BYTE PTR ds:[esi]
  402695:	mov    edi,0x2eb2ac08
  40269a:	scas   eax,DWORD PTR es:[edi]
  40269b:	sbb    al,0xc7
  40269d:	cwde   
  40269e:	iret   
  40269f:	stc    
  4026a0:	inc    ebp
  4026a1:	rcr    DWORD PTR [ecx],0xad
  4026a4:	out    0x8,al
  4026a6:	push   0x8c4bbdad
  4026ab:	xchg   DWORD PTR [ebx+0x360f6084],edi
  4026b1:	jecxz  0x4026e7
  4026b3:	je     0x40263d
  4026b5:	shr    BYTE PTR [edx],0x1a
  4026b8:	aas    
  4026b9:	retf   0xdbbe
  4026bc:	aam    0xe7
  4026be:	into   
  4026bf:	and    edx,DWORD PTR [edi]
  4026c1:	sbb    DWORD PTR [ebp+0x77],ebx
  4026c4:	lock jle 0x4026c2
  4026c7:	xor    al,0xa4
  4026c9:	ss mov DWORD PTR es:[eax-0x793a73b],0xeec9abb3
  4026d5:	add    edx,DWORD PTR [ecx+0x671b2630]
  4026db:	cmp    eax,ecx
  4026dd:	nop
  4026de:	push   ebx
  4026df:	out    dx,eax
  4026e0:	repz push ecx
  4026e2:	mov    cl,0x59
  4026e4:	adc    eax,0x2157216f
  4026e9:	stc    
  4026ea:	outs   dx,DWORD PTR ds:[esi]
  4026eb:	mov    cl,BYTE PTR [ebp-0x34]
  4026ee:	fsubr  DWORD PTR [eax]
  4026f0:	fstp   TBYTE PTR [edi+0x28]
  4026f3:	xchg   edx,eax
  4026f4:	ins    BYTE PTR es:[edi],dx
  4026f5:	or     dl,BYTE PTR [ebx+0x9f6c2f5]
  4026fb:	std    
  4026fc:	les    ebp,FWORD PTR [edx+ecx*8-0x2fd40238]
  402703:	inc    esp
  402704:	sbb    DWORD PTR [esi+0x2e5a9e74],ebp
  40270a:	push   esi
  40270b:	outs   dx,DWORD PTR ds:[esi]
  40270c:	iret   
  40270d:	mov    DWORD PTR [ebp+eiz*8+0x6d],edx
  402711:	ret    0xa4a1
  402714:	sti    
  402715:	push   ss
  402716:	jae    0x402750
  402718:	push   eax
  402719:	cmp    ch,BYTE PTR [ebx-0x3c]
  40271c:	xchg   esi,eax
  40271d:	repz xlat BYTE PTR ds:[ebx]
  40271f:	out    0x2,al
  402721:	jo     0x4026bc
  402723:	daa    
  402724:	push   ebx
  402725:	cmp    DWORD PTR [ecx-0x5f1178e7],0xf64ab6c0
  40272f:	adc    ebx,DWORD PTR [edx+edi*2-0x21]
  402733:	in     al,dx
  402734:	lods   al,BYTE PTR ds:[esi]
  402735:	jbe    0x4026c8
  402737:	jmp    0x56c28d3c
  40273c:	rcr    BYTE PTR [ecx+0x312622c7],cl
  402742:	(bad)  
  402743:	cmp    eax,0x2638af66
  402748:	adc    DWORD PTR ds:0x9c936a65,0x1b34af3d
  402752:	ins    BYTE PTR es:[edi],dx
  402753:	leave  
  402754:	cmp    DWORD PTR [ebx],esi
  402756:	xchg   esp,eax
  402757:	pusha  
  402758:	es xchg esp,eax
  40275a:	mov    dh,0x5a
  40275c:	cli    
  40275d:	stos   DWORD PTR es:[edi],eax
  40275e:	div    edx
  402760:	xor    ch,dh
  402762:	(bad)  
  402763:	or     eax,0x7bb625b
  402768:	leave  
  402769:	cdq    
  40276a:	ins    DWORD PTR es:[edi],dx
  40276b:	sbb    BYTE PTR [edi-0x369d290],bl
  402771:	and    al,0x83
  402773:	mov    WORD PTR [esi-0x4c01970e],?
  402779:	or     al,0xcb
  40277b:	test   eax,0xe9ab04d8
  402780:	add    BYTE PTR [esp+esi*2-0x69],al
  402784:	mov    ah,0x51
  402786:	jae    0x402718
  402788:	scas   al,BYTE PTR es:[edi]
  402789:	jp     0x40272d
  40278b:	out    0x7c,al
  40278d:	out    0xd4,al
  40278f:	mov    eax,0xfeb4ee0c
  402794:	xor    DWORD PTR [eax],0x33
  402797:	inc    ebp
  402798:	or     al,0xdb
  40279a:	es push esp
  40279c:	xlat   BYTE PTR ds:[ebx]
  40279d:	fisttp DWORD PTR [ebx+0x3148a4f9]
  4027a3:	or     DWORD PTR [edi-0x4c0d3a0e],eax
  4027a9:	sub    dl,dh
  4027ab:	fldcw  WORD PTR [ebx-0x5f99a0e8]
  4027b1:	int3   
  4027b2:	jne    0x402786
  4027b4:	rcr    BYTE PTR [edx-0xa31fc58],0xef
  4027bb:	(bad)
  4027be:	jmp    0x4b2e:0xccf85d3d
  4027c5:	sub    eax,0x48c870e7
  4027ca:	or     DWORD PTR [ecx-0x91cef46],0xffffffe0
  4027d1:	es sub eax,0xa3591bc9
  4027d7:	jp     0x4027cc
  4027d9:	lock xor esi,edi
  4027dc:	xchg   ebx,eax
  4027dd:	dec    ebx
  4027de:	jo     0x402843
  4027e0:	adc    ebp,DWORD PTR [edi+ebp*2]
  4027e3:	je     0x402850
  4027e5:	mov    al,0x79
  4027e7:	sub    dh,ch
  4027e9:	jne    0x402787
  4027eb:	icebp  
  4027ec:	ret    
  4027ed:	pusha  
  4027ee:	adc    dh,BYTE PTR [edi+0x6138090a]
  4027f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027f5:	jne    0x402867
  4027f7:	add    al,0xdf
  4027f9:	xor    eax,0x94660ba3
  4027fe:	xlat   BYTE PTR ds:[ebx]
  4027ff:	xchg   ebp,esi
  402801:	test   dh,bl
  402803:	or     dh,BYTE PTR [ecx+0x49dc2904]
  402809:	mov    dl,0x58
  40280b:	stos   BYTE PTR es:[edi],al
  40280c:	in     al,0xf
  40280e:	cmc    
  40280f:	(bad)  
  402810:	jle    0x402854
  402812:	add    DWORD PTR [edx+0x60],edi
  402815:	fcmovne st,st(4)
  402817:	inc    edx
  402818:	sub    al,0x78
  40281a:	ss mov bh,0xe2
  40281d:	rol    ah,0xa3
  402820:	pop    ds
  402821:	sbb    eax,ebx
  402823:	out    0x5a,eax
  402825:	cmp    esp,DWORD PTR [ebp-0x6348e543]
  40282b:	push   ss
  40282c:	adc    dh,BYTE PTR [ebx-0x49ddd28]
  402832:	popf   
  402833:	sbb    eax,0x68427550
  402838:	test   eax,0x84814c36
  40283d:	lds    ecx,FWORD PTR [edx]
  40283f:	fcomp  QWORD PTR [eax+0x7e]
  402842:	push   cs
  402843:	out    0x7b,al
  402845:	stos   DWORD PTR es:[edi],eax
  402846:	daa    
  402847:	dec    esp
  402848:	pusha  
  402849:	(bad)  
  40284c:	cmp    dh,cl
  40284e:	ret    
  40284f:	fld    TBYTE PTR [edx-0x429612]
  402855:	add    eax,0x6ac2ea23
  40285a:	dec    esp
  40285b:	fwait
  40285c:	mov    al,0x44
  40285e:	push   ds
  40285f:	pop    esp
  402860:	seto   BYTE PTR [ebp+0x1c]
  402864:	mov    ebx,0xe38eebfc
  402869:	sbb    BYTE PTR [esi+0xeb78f67],0x11
  402870:	adc    ebx,edi
  402872:	xor    ebp,DWORD PTR [eax]
  402874:	out    0x46,al
  402876:	and    DWORD PTR [esi],edx
  402878:	push   ss
  402879:	bound  eax,QWORD PTR [esi-0x444a4330]
  40287f:	pop    ebp
  402880:	and    edi,DWORD PTR ds:0x6b5b6f37
  402886:	adc    ebp,eax
  402888:	jmp    0x496b:0x16f8109c
  40288f:	inc    esi
  402890:	push   esi
  402891:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402892:	scas   al,BYTE PTR es:[edi]
  402893:	fstp   DWORD PTR [ebp-0x57]
  402896:	iret   
  402897:	add    edi,ebp
  402899:	fdivp  st(7),st
  40289b:	outs   dx,BYTE PTR ds:[esi]
  40289c:	pop    edi
  40289d:	dec    edi
  40289e:	aaa    
  40289f:	cmp    bl,BYTE PTR [edx]
  4028a1:	cwde   
  4028a2:	bound  ebp,QWORD PTR [esi-0x9]
  4028a5:	mov    edi,0x30bbb8e1
  4028aa:	pop    ebp
  4028ab:	jo     0x402920
  4028ad:	jmp    0x4028d8
  4028af:	dec    eax
  4028b0:	pop    ecx
  4028b1:	add    DWORD PTR [ebx+edx*2],0x58c6a4b1
  4028b8:	lahf   
  4028b9:	icebp  
  4028ba:	push   eax
  4028bb:	mov    ds:0xf3f5f223,al
  4028c0:	out    dx,eax
  4028c1:	push   edi
  4028c2:	xlat   BYTE PTR ds:[ebx]
  4028c3:	sbb    DWORD PTR [ebx+edi*8],0xffffff90
  4028c7:	hlt    
  4028c8:	ja     0x402947
  4028ca:	push   0xe1ea55cd
  4028cf:	retf   
  4028d0:	addr16 push es
  4028d2:	sub    al,0x6c
  4028d4:	pop    es
  4028d5:	in     eax,dx
  4028d6:	xchg   edi,eax
  4028d7:	int3   
  4028d8:	test   ecx,esp
  4028da:	bound  ebp,QWORD PTR [eax+0x7e]
  4028dd:	pop    edx
  4028de:	fbld   TBYTE PTR [ecx+esi*8-0x32]
  4028e2:	cmp    al,0xb2
  4028e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028e5:	sbb    DWORD PTR cs:[edi-0x67],esp
  4028e9:	mov    dl,bh
  4028eb:	test   al,0x3d
  4028ed:	xor    dl,0xfe
  4028f0:	sbb    al,0x4
  4028f2:	sub    BYTE PTR [esi],bh
  4028f4:	outs   dx,BYTE PTR ds:[esi]
  4028f5:	loope  0x4028d2
  4028f7:	sub    DWORD PTR [ebp+0x4236b870],eax
  4028fd:	aas    
  4028fe:	xchg   edx,eax
  4028ff:	aaa    
  402900:	xor    esp,DWORD PTR [eax]
  402902:	enter  0xcb78,0x40
  402906:	pop    esp
  402907:	and    DWORD PTR [edi+0x35f16f43],edx
  40290d:	in     al,0x70
  40290f:	fadd   QWORD PTR [edx]
  402911:	hlt    
  402912:	sub    ebx,DWORD PTR [eax-0xe72b7ae]
  402918:	addr16 dec esi
  40291a:	mov    ebp,eax
  40291c:	sub    eax,0x49d48d2a
  402921:	inc    esp
  402922:	add    al,0xbb
  402924:	sahf   
  402925:	out    0xb1,eax
  402927:	sbb    BYTE PTR [ecx+0xa99fc61],0xb1
  40292e:	out    dx,al
  40292f:	hlt    
  402930:	jmp    0xb9c0:0xe39f7889
  402937:	inc    eax
  402938:	out    0x27,al
  40293a:	sahf   
  40293b:	jp     0x4029ac
  40293d:	clc    
  40293e:	mov    bh,0x93
  402940:	es int 0xaa
  402943:	imul   ebx,ecx,0xffffffa4
  402946:	xchg   BYTE PTR [edx],bl
  402948:	pushf  
  402949:	sbb    BYTE PTR [edi],bl
  40294b:	fst    DWORD PTR [ebx-0x6bd7ef3e]
  402951:	icebp  
  402952:	cmp    ebx,ebx
  402954:	(bad)  
  402955:	(bad)  
  402956:	sti    
  402957:	or     BYTE PTR fs:[ebp+0x20],al
  40295b:	xor    DWORD PTR [ecx],esi
  40295d:	mov    ds:0x508821b4,al
  402962:	xchg   ecx,eax
  402963:	inc    ebp
  402964:	ret    0x1a20
  402967:	inc    esi
  402968:	sub    al,0x62
  40296a:	sbb    edi,esp
  40296c:	and    BYTE PTR [ecx],bl
  40296e:	sti    
  40296f:	pop    ss
  402970:	mov    eax,ds:0x55615bb5
  402975:	and    eax,ecx
  402977:	adc    esp,ebp
  402979:	mov    dh,0x34
  40297b:	retf   
  40297c:	sbb    eax,edx
  40297e:	inc    eax
  40297f:	icebp  
  402980:	add    BYTE PTR [ecx],0xb2
  402983:	add    eax,0xec2f2b24
  402988:	sbb    DWORD PTR [ebp-0x26],0x36
  40298c:	jae    0x40296a
  40298e:	jnp    0x402938
  402990:	div    BYTE PTR [edi-0x30a7017f]
  402996:	dec    ecx
  402997:	mov    ch,0x25
  402999:	pop    es
  40299a:	cmp    ch,BYTE PTR [edx+0x41]
  40299d:	or     BYTE PTR [eax],al
  40299f:	xor    dh,BYTE PTR [edi-0x1774b9b5]
  4029a5:	xor    al,0x27
  4029a7:	adc    ecx,ecx
  4029a9:	pop    edi
  4029aa:	inc    ebp
  4029ab:	out    dx,al
  4029ac:	in     eax,0xf5
  4029ae:	dec    ebx
  4029af:	push   esi
  4029b0:	stos   BYTE PTR es:[edi],al
  4029b1:	shr    DWORD PTR [edx+0x552af09d],1
  4029b7:	mov    dl,0xe0
  4029b9:	xor    edi,ebp
  4029bb:	(bad)  
  4029bc:	shr    BYTE PTR [edi],cl
  4029be:	mov    ah,0xb7
  4029c0:	ret    0x3fa5
  4029c3:	cmp    al,0x70
  4029c5:	adc    edi,DWORD PTR [ebx]
  4029c7:	sti    
  4029c8:	push   ecx
  4029c9:	jle    0x402a10
  4029cb:	and    esp,esi
  4029cd:	or     al,0x53
  4029cf:	lea    eax,[edi]
  4029d1:	aaa    
  4029d2:	cs ret 0xe6f8
  4029d6:	xchg   BYTE PTR [esi+0x24],dl
  4029d9:	and    DWORD PTR [eax+0x3e],0x12
  4029dd:	inc    ebx
  4029de:	iret   
  4029df:	retf   0x2fcd
  4029e2:	or     edx,esp
  4029e4:	sub    eax,0xa714c075
  4029e9:	std    
  4029ea:	jae    0x4029da
  4029ec:	mov    al,ss:0x2dc86e4
  4029f2:	pop    edi
  4029f3:	push   cs
  4029f4:	aad    0x0
  4029f6:	fcmovu st,st(7)
  4029f8:	sub    DWORD PTR ss:[edx+0x56e98fb0],edx
  4029ff:	js     0x402a5c
  402a01:	int3   
  402a02:	cld    
  402a03:	outs   dx,DWORD PTR ds:[esi]
  402a04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a05:	(bad)  
  402a06:	not    BYTE PTR [ebp-0x3bfd0c19]
  402a0c:	jg     0x40299c
  402a0e:	test   eax,0xfde8a350
  402a13:	add    ah,BYTE PTR [ebx+0x597d504c]
  402a19:	in     eax,0x27
  402a1b:	into   
  402a1c:	jl     0x4029f6
  402a1e:	gs in  al,0xba
  402a21:	mov    ebx,0xb1dd1c62
  402a26:	push   ss
  402a27:	or     eax,0x9fdac756
  402a2c:	in     al,dx
  402a2d:	cmp    esp,ecx
  402a2f:	and    ah,bh
  402a31:	call   0x37498dc0
  402a36:	cmc    
  402a37:	push   es
  402a38:	inc    eax
  402a39:	ja     0x402aab
  402a3b:	aaa    
  402a3c:	arpl   WORD PTR [ecx+ebx*4+0x557980d2],ax
  402a43:	or     al,dh
  402a45:	mov    edx,0x10eeb7f3
  402a4a:	mov    ss:0xf4e57d02,al
  402a50:	into   
  402a51:	mov    BYTE PTR [eax],ah
  402a53:	mov    eax,0xf46fad4b
  402a58:	popf   
  402a59:	mul    BYTE PTR fs:[ebx]
  402a5c:	pop    es
  402a5d:	ret    0x954f
  402a60:	xor    BYTE PTR [eax+eax*1],cl
  402a63:	retf   
  402a64:	adc    esp,DWORD PTR [ebx-0x39]
  402a67:	test   esi,ecx
  402a69:	push   cs
  402a6a:	pop    edi
  402a6b:	cmp    eax,0xd61e9478
  402a70:	xchg   DWORD PTR [ebx-0x2e06f8f7],ebp
  402a76:	pop    ecx
  402a77:	rcl    BYTE PTR [ecx],1
  402a79:	dec    ebx
  402a7a:	popa   
  402a7b:	xchg   ebx,eax
  402a7c:	jne    0x402a0f
  402a7e:	int    0x74
  402a80:	sar    BYTE PTR fs:[ebx-0x51],0x18
  402a85:	mov    ds:0x1d60918c,eax
  402a8a:	or     eax,DWORD PTR [ebx+ecx*8-0x7a]
  402a8e:	or     BYTE PTR ds:0xd19f50f6,dh
  402a94:	fld    DWORD PTR [edx+ecx*1]
  402a97:	jns    0x402a99
  402a99:	retf   
  402a9a:	mov    ah,0xd8
  402a9c:	test   al,0xb3
  402a9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a9f:	call   0xe0bcbbe5
  402aa4:	xchg   esp,eax
  402aa5:	mov    al,ds:0xc19403b9
  402aaa:	push   0xf3ae15f5
  402aaf:	fcmovbe st,st(5)
  402ab1:	adc    edi,DWORD PTR [edi+eax*1+0x3a]
  402ab5:	pop    ds
  402ab6:	dec    esp
  402ab7:	inc    ecx
  402ab8:	pop    ds
  402ab9:	dec    ebp
  402aba:	outs   dx,DWORD PTR ds:[esi]
  402abb:	cdq    
  402abc:	mov    dh,0x59
  402abe:	aas    
  402abf:	lea    edi,[esi+0x23]
  402ac2:	pop    ds
  402ac3:	or     DWORD PTR [edx],esi
  402ac5:	xor    bl,BYTE PTR [edx]
  402ac7:	scas   al,BYTE PTR es:[edi]
  402ac8:	dec    ebx
  402ac9:	inc    esp
  402aca:	outs   dx,DWORD PTR ds:[esi]
  402acb:	jae    0x402b04
  402acd:	retf   0xb6f9
  402ad0:	scas   al,BYTE PTR es:[edi]
  402ad1:	cmp    al,0x2e
  402ad3:	retf   
  402ad4:	das    
  402ad5:	lods   al,BYTE PTR ds:[esi]
  402ad6:	loope  0x402ae6
  402ad8:	mov    edi,0xdc46cc0a
  402add:	aam    0x83
  402adf:	mov    ebp,ecx
  402ae1:	hlt    
  402ae2:	(bad)  
  402ae3:	pusha  
  402ae4:	cwde   
  402ae5:	retf   
  402ae6:	test   al,0xe5
  402ae8:	inc    ebp
  402ae9:	or     al,dl
  402aeb:	shl    BYTE PTR [ebx-0x23cbcceb],1
  402af1:	call   0xf3a:0x742ed7d0
  402af8:	lods   al,BYTE PTR ds:[esi]
  402af9:	mov    bl,0xf0
  402afb:	aam    0xe2
  402afd:	xchg   ebx,eax
  402afe:	jl     0x402adf
  402b00:	std    
  402b01:	dec    esi
  402b02:	ss push 0x77
  402b05:	sbb    BYTE PTR [ebx],dl
  402b07:	jl     0x402aae
  402b09:	xlat   BYTE PTR ds:[ebx]
  402b0a:	add    eax,0x869a07f4
  402b0f:	mov    bl,0x1e
  402b11:	dec    ecx
  402b12:	mov    ah,0xe3
  402b14:	arpl   WORD PTR [eax+0x25],bp
  402b17:	xchg   ebp,eax
  402b18:	push   ebp
  402b19:	jns    0x402b4c
  402b1b:	les    esi,FWORD PTR [bp-0x23c0]
  402b20:	in     al,0x3a
  402b22:	xchg   edx,eax
  402b23:	shl    DWORD PTR [esi+0x1b],cl
  402b26:	push   edx
  402b27:	mov    cl,0x1
  402b29:	and    ebp,DWORD PTR [ebx+ebp*4]
  402b2c:	data16 fmul DWORD PTR [ebx+0x4d]
  402b30:	xor    BYTE PTR [eiz*1+0x7ee84a2f],ah
  402b37:	push   edi
  402b38:	leave  
  402b39:	xchg   ebx,eax
  402b3a:	mov    edx,0x42617b71
  402b3f:	rcr    DWORD PTR [edx+0x17],1
  402b42:	xor    dl,BYTE PTR [edi]
  402b44:	iret   
  402b45:	push   ecx
  402b46:	push   cs
  402b47:	outs   dx,BYTE PTR ds:[esi]
  402b48:	adc    cl,BYTE PTR [edi+0x705f63fa]
  402b4e:	sbb    dl,ah
  402b50:	mov    edi,0x6b4068b9
  402b55:	cmp    eax,0x99866c54
  402b5a:	arpl   WORD PTR [ebp+edi*1+0x3dc17970],di
  402b61:	aaa    
  402b62:	xchg   esi,eax
  402b63:	out    dx,al
  402b64:	xor    eax,0x8109bd23
  402b69:	jl     0x402b38
  402b6b:	retf   
  402b6c:	dec    esi
  402b6d:	ja     0x402bb2
  402b6f:	scas   al,BYTE PTR es:[edi]
  402b70:	popf   
  402b71:	jnp    0x402b91
  402b73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b74:	xchg   esi,eax
  402b75:	out    dx,eax
  402b76:	into   
  402b77:	push   0x3878536d
  402b7c:	sti    
  402b7d:	cld    
  402b7e:	push   esp
  402b7f:	cs cdq 
  402b81:	push   es
  402b82:	(bad)  
  402b83:	fsubr  st(7),st
  402b85:	mov    ds:0x6a4e78e9,al
  402b8a:	ror    DWORD PTR [ebp-0x1c4c9fee],cl
  402b90:	fiadd  WORD PTR [edi]
  402b92:	or     al,0xb6
  402b94:	mov    edx,0xd7751226
  402b99:	or     dl,al
  402b9b:	aas    
  402b9c:	inc    esi
  402b9d:	mov    al,ds:0xd79a5739
  402ba2:	and    DWORD PTR [esi],esp
  402ba4:	or     DWORD PTR [esi+0x38f01409],esi
  402baa:	mov    eax,0x9e88b9aa
  402baf:	nop
  402bb0:	mov    edi,DWORD PTR [ebx+edx*2]
  402bb3:	shl    ah,0xeb
  402bb6:	retf   0x26d3
  402bb9:	in     al,dx
  402bba:	stos   DWORD PTR es:[edi],eax
  402bbb:	inc    eax
  402bbc:	add    dh,ch
  402bbe:	fiadd  WORD PTR [eax]
  402bc0:	cwde   
  402bc1:	(bad)  
  402bc3:	daa    
  402bc4:	add    BYTE PTR [ebx],al
  402bc6:	iret   
  402bc7:	popf   
  402bc8:	loop   0x402b7d
  402bca:	neg    DWORD PTR [ecx]
  402bcc:	mov    ah,0xa6
  402bce:	test   DWORD PTR [esp+ecx*2],0x86f8a84b
  402bd5:	fnstsw WORD PTR [ebp+0x44]
  402bd8:	jb     0x3119daac
  402bde:	das    
  402bdf:	adc    DWORD PTR [edi-0x24],ebp
  402be2:	add    eax,0xa334ea8a
  402be7:	nop
  402be8:	stos   BYTE PTR es:[edi],al
  402be9:	scas   al,BYTE PTR es:[edi]
  402bea:	xchg   esp,eax
  402beb:	mov    WORD PTR [ebx-0x77],?
  402bee:	push   ecx
  402bef:	mov    eax,0x71609407
  402bf4:	lea    edx,[ebx+0x7cb872e4]
  402bfa:	jnp    0x402bcb
  402bfc:	out    dx,al
  402bfd:	fwait
  402bfe:	mov    ebp,0x9f5553ea
  402c03:	sub    al,0xfd
  402c05:	pop    ebx
  402c06:	ss mov edi,0xf46f9021
  402c0c:	ins    DWORD PTR es:[edi],dx
  402c0d:	and    BYTE PTR [edx+0x51],0x18
  402c11:	inc    esi
  402c12:	sub    ebp,DWORD PTR [esi-0x654d30fa]
  402c18:	bound  esi,QWORD PTR [ebx-0x33]
  402c1b:	inc    ecx
  402c1c:	sbb    BYTE PTR [esi-0x54],0xaa
  402c20:	sub    DWORD PTR ds:0x34af6ffb,esi
  402c26:	mov    bh,0x63
  402c28:	dec    ecx
  402c29:	ins    BYTE PTR es:[edi],dx
  402c2a:	mov    ds:0x2e08ea4c,eax
  402c2f:	fiadd  WORD PTR [ebp+0x57d6bc2b]
  402c35:	test   al,0x38
  402c37:	or     dl,bl
  402c39:	call   0x576ffac
  402c3e:	stos   BYTE PTR es:[edi],al
  402c3f:	pop    ds
  402c40:	pop    eax
  402c41:	ins    BYTE PTR es:[edi],dx
  402c42:	or     edi,DWORD PTR [ebx]
  402c44:	push   ebp
  402c45:	mov    esi,0x8c1828da
  402c4a:	pop    ebx
  402c4b:	ja     0x402be2
  402c4d:	sub    ah,BYTE PTR [ecx-0x2815979f]
  402c53:	inc    esi
  402c54:	aad    0x34
  402c56:	sbb    cl,BYTE PTR [esi+0x1fa61f55]
  402c5c:	test   eax,0x8546845b
  402c61:	pop    ebp
  402c62:	mov    eax,0xda13b23c
  402c67:	int3   
  402c68:	out    0x1e,eax
  402c6a:	adc    ah,dl
  402c6c:	in     eax,0x35
  402c6e:	cmp    cl,BYTE PTR [si]
  402c71:	fist   WORD PTR [eax]
  402c73:	inc    esi
  402c74:	sbb    ch,al
  402c76:	and    ecx,DWORD PTR [esi]
  402c78:	dec    ebp
  402c79:	shl    BYTE PTR [edi],1
  402c7b:	sub    DWORD PTR [edx],0x1e803e7c
  402c81:	js     0x402c94
  402c83:	sub    eax,DWORD PTR ds:0x5d9feb4b
  402c89:	je     0x402c70
  402c8b:	add    edx,edx
  402c8d:	clc    
  402c8e:	sub    eax,0xb4eb30b4
  402c93:	xor    BYTE PTR [esp+edi*2-0xc5a66c9],ah
  402c9a:	pop    ebx
  402c9b:	shr    DWORD PTR [eax+0xf],0xee
  402c9f:	dec    ebx
  402ca0:	and    DWORD PTR [edx],edi
  402ca2:	mov    ds:0xfbde9dd5,eax
  402ca7:	test   eax,ebx
  402ca9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402caa:	xchg   edx,eax
  402cab:	repnz movzx ecx,ax
  402caf:	sahf   
  402cb0:	xchg   esp,eax
  402cb1:	les    edi,FWORD PTR [ebx+0x137e8c67]
  402cb7:	mov    esi,0xaffd47b1
  402cbc:	xchg   edi,eax
  402cbd:	popa   
  402cbe:	cmp    DWORD PTR [esi-0x64],ecx
  402cc1:	sub    eax,0xf64fb661
  402cc6:	test   eax,0xbc382559
  402ccb:	ja     0x402d37
  402ccd:	pop    edi
  402cce:	nop
  402ccf:	adc    eax,0xf6354245
  402cd4:	dec    ecx
  402cd5:	in     eax,0x9d
  402cd7:	cli    
  402cd8:	sbb    esi,DWORD PTR [esi-0x1e]
  402cdb:	cmp    BYTE PTR [ebx+ebx*2+0x50eca396],dl
  402ce2:	sbb    al,ah
  402ce4:	xchg   BYTE PTR [edx-0x76],al
  402ce7:	jle    0x402d5f
  402ce9:	or     al,0xbc
  402ceb:	adc    DWORD PTR [esp+eiz*8+0x3c],ebp
  402cef:	call   0x48e3608c
  402cf4:	js     0x402d26
  402cf6:	jmp    0x402d44
  402cf8:	push   cs
  402cf9:	and    eax,0x4b75da47
  402cfe:	mov    es,WORD PTR [esi-0x5d]
  402d01:	cli    
  402d02:	loop   0x402d2e
  402d04:	jmp    0xbc7ca10a
  402d09:	pop    eax
  402d0a:	push   ss
  402d0b:	fimul  DWORD PTR [eiz*8-0x36075510]
  402d12:	push   es
  402d13:	cmp    DWORD PTR [esi],eax
  402d15:	das    
  402d16:	jecxz  0x402cf0
  402d18:	jns    0x402cde
  402d1a:	lods   al,BYTE PTR ds:[esi]
  402d1b:	(bad)  
  402d1c:	mov    ebx,0x323373b9
  402d21:	xor    dh,BYTE PTR [esi+eax*8+0x44]
  402d25:	test   esi,edi
  402d27:	push   edi
  402d28:	and    eax,DWORD PTR [ebx-0x2e]
  402d2b:	sbb    DWORD PTR [edi+0x441326df],eax
  402d31:	out    0xdb,eax
  402d33:	cmp    ah,dl
  402d35:	jg     0x402d3f
  402d37:	mov    edx,0x96a9a27e
  402d3c:	stc    
  402d3d:	add    BYTE PTR [ecx],bh
  402d3f:	int3   
  402d40:	in     al,dx
  402d41:	popa   
  402d42:	sbb    al,0x6e
  402d44:	xor    al,0xa4
  402d46:	pop    esi
  402d47:	push   ebx
  402d48:	fld    DWORD PTR [edi+edi*4-0x2a]
  402d4c:	call   0x183c761e
  402d51:	jno    0x402d8e
  402d53:	in     eax,0x28
  402d55:	les    eax,FWORD PTR [eax+0x7bab4909]
  402d5b:	cmp    eax,0x54d3d1e
  402d60:	mov    edi,0x29a5641
  402d65:	(bad)  
  402d66:	dec    eax
  402d67:	arpl   WORD PTR [ebx+0x28630f93],si
  402d6d:	retf   0x1022
  402d70:	and    al,0xb3
  402d72:	fisttp DWORD PTR ds:0xb1870508
  402d78:	daa    
  402d79:	loope  0x402d53
  402d7b:	(bad)  
  402d7c:	imul   edi,esi,0x6f3a5c66
  402d82:	pushf  
  402d83:	inc    ebp
  402d84:	or     DWORD PTR [edi],0x5
  402d87:	fcmovu st,st(7)
  402d89:	mov    ebp,0xb20460ec
  402d8e:	xchg   esp,eax
  402d8f:	rcl    ebx,0xd0
  402d92:	adc    eax,0x6fc159bd
  402d97:	add    bh,BYTE PTR [eax+0x6efb56a3]
  402d9d:	pop    ss
  402d9e:	pop    ebp
  402d9f:	mov    bl,0x7
  402da1:	(bad)  
  402da2:	fcmovbe st,st(3)
  402da4:	mov    al,0x70
  402da6:	lea    ebp,[edx+0x4eafbdac]
  402dac:	addr16 xchg edx,eax
  402dae:	sbb    eax,0x8ddfc2f6
  402db3:	dec    esp
  402db4:	adc    ebp,DWORD PTR [ecx-0xc]
  402db7:	mov    edi,0x5de0a874
  402dbc:	in     al,0xcf
  402dbe:	lahf   
  402dbf:	ror    BYTE PTR [edx-0x58],cl
  402dc2:	out    0x36,eax
  402dc4:	adc    BYTE PTR ds:0xa6a63833,ah
  402dca:	mov    ah,BYTE PTR [esi]
  402dcc:	push   ecx
  402dcd:	mov    cl,0xdc
  402dcf:	add    bl,BYTE PTR [eax]
  402dd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402dd2:	mov    al,ds:0x6e7c7525
  402dd7:	xchg   DWORD PTR [edx-0x4a450378],edi
  402ddd:	or     ch,BYTE PTR [edi+ebp*4+0x30dce6c6]
  402de4:	push   es
  402de5:	cmp    bl,BYTE PTR [ebx-0x54817723]
  402deb:	fdiv   DWORD PTR [edi]
  402ded:	jmp    0xd773427c
  402df2:	and    al,0x74
  402df4:	mov    ds:0xf8da0cfd,al
  402df9:	dec    ebx
  402dfa:	imul   edi,DWORD PTR [edx-0x4b],0x48
  402dfe:	and    eax,DWORD PTR [edx]
  402e00:	call   0xdfa3ff70
  402e05:	cdq    
  402e06:	add    edx,0x64b61bc1
  402e0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e0d:	es daa 
  402e0f:	out    0x67,eax
  402e11:	dec    ebx
  402e12:	aad    0xf
  402e14:	dec    edx
  402e15:	xor    edx,ebp
  402e17:	dec    esp
  402e18:	pushf  
  402e19:	mov    edi,0xf2ef7117
  402e1e:	loope  0x402e7c
  402e20:	add    esp,DWORD PTR [eiz*2-0x244b2891]
  402e27:	retf   0x373b
  402e2a:	push   esi
  402e2b:	sbb    eax,0xa7f53f8a
  402e30:	and    cl,BYTE PTR [eax-0x779701e2]
  402e36:	and    BYTE PTR [ebx-0x29],dl
  402e39:	pop    eax
  402e3a:	ins    BYTE PTR es:[edi],dx
  402e3b:	and    eax,ebp
  402e3d:	and    BYTE PTR [ecx-0x18],bl
  402e40:	call   0x191d:0x57c5806c
  402e47:	lahf   
  402e48:	clc    
  402e49:	shl    BYTE PTR [ecx+eax*1+0x56],0xd1
  402e4e:	and    ah,cl
  402e50:	lea    esp,[ecx]
  402e52:	popa   
  402e53:	pop    esi
  402e54:	jno    0x402e40
  402e56:	call   0xa4b06ed
  402e5b:	mov    al,0x6
  402e5d:	dec    ebx
  402e5e:	push   esp
  402e5f:	retf   0x2f78
  402e62:	xchg   esp,eax
  402e63:	jns    0x402e1f
  402e65:	pop    eax
  402e66:	scas   al,BYTE PTR es:[edi]
  402e67:	les    esi,FWORD PTR [eax-0x7b]
  402e6a:	adc    cl,BYTE PTR [eax-0x2a676499]
  402e70:	and    DWORD PTR [ebp-0x56],esi
  402e73:	and    BYTE PTR [ebx+0x6f],al
  402e76:	rol    BYTE PTR fs:0x8a08a57c,0xea
  402e7e:	in     eax,dx
  402e7f:	pop    edi
  402e80:	jno    0x402e5d
  402e82:	xchg   esp,eax
  402e83:	xchg   edi,eax
  402e84:	add    dl,BYTE PTR [ebp+0x29]
  402e87:	push   ss
  402e88:	and    BYTE PTR [eax+0x6bfec0dd],0xbd
  402e8f:	pop    esp
  402e90:	inc    ebp
  402e91:	test   BYTE PTR ss:[ebx-0x59336151],cl
  402e98:	cmp    edx,DWORD PTR [ecx-0x60]
  402e9b:	sbb    bl,BYTE PTR ds:0x146ddda4
  402ea1:	pushf  
  402ea2:	inc    ecx
  402ea3:	and    ebp,edx
  402ea5:	mov    ebp,0x98f84eb9
  402eaa:	out    dx,al
  402eab:	ss mov dh,0xc3
  402eae:	clc    
  402eaf:	js     0x402e6b
  402eb1:	xchg   edx,eax
  402eb2:	and    DWORD PTR [edi-0x51f262df],ecx
  402eb8:	mov    ch,0x72
  402eba:	mov    DWORD PTR [edi+0x17931f9e],edi
  402ec0:	out    0xb5,eax
  402ec2:	in     eax,dx
  402ec3:	in     al,dx
  402ec4:	fisub  WORD PTR [ebp-0xc1c60d9]
  402eca:	xchg   ebp,eax
  402ecb:	in     ax,0xd7
  402ece:	pop    ds
  402ecf:	loopne 0x402ec4
  402ed1:	int    0x81
  402ed3:	(bad)  
  402ed4:	or     eax,0x80711b98
  402ed9:	xchg   esp,eax
  402eda:	repnz xchg edx,eax
  402edc:	or     DWORD PTR [esi-0x4367e018],eax
  402ee2:	sub    cl,BYTE PTR [ecx-0x2b6c6aec]
  402ee8:	fsubr  DWORD PTR [edi]
  402eea:	dec    esp
  402eeb:	pop    ebx
  402eec:	push   ebx
  402eed:	xchg   edx,eax
  402eee:	jecxz  0x402f4f
  402ef0:	out    0x1a,al
  402ef2:	mov    dh,ah
  402ef4:	not    bl
  402ef6:	mov    ah,0xb4
  402ef8:	mov    ss,eax
  402efa:	push   es
  402efb:	and    eax,0xc48981a6
  402f00:	outs   dx,BYTE PTR ds:[esi]
  402f01:	jg     0x402ebb
  402f03:	jg     0x402f7b
  402f05:	jno    0x402ed6
  402f07:	jne    0x402f6f
  402f09:	inc    ebp
  402f0a:	icebp  
  402f0b:	repnz cld 
  402f0d:	push   cs
  402f0e:	push   ecx
  402f0f:	aam    0xcc
  402f11:	push   esp
  402f12:	xchg   esi,eax
  402f13:	rcr    DWORD PTR [edi-0xf],1
  402f16:	rcl    BYTE PTR [ebx+0x76d20bf0],1
  402f1c:	push   edi
  402f1d:	mov    eax,eax
  402f1f:	push   0xfffffff2
  402f21:	hlt    
  402f22:	jecxz  0x402f6b
  402f24:	adc    al,0xbd
  402f26:	loope  0x402f06
  402f28:	or     BYTE PTR [eax+0x5ef8213c],bl
  402f2e:	fmul   st,st(5)
  402f30:	js     0x402ebd
  402f32:	arpl   WORD PTR [edi],si
  402f34:	lods   al,BYTE PTR ds:[esi]
  402f35:	icebp  
  402f36:	leave  
  402f37:	leave  
  402f38:	(bad)  
  402f39:	jp     0x402f6b
  402f3b:	jb     0x402eef
  402f3d:	not    DWORD PTR [eax-0x33af26e9]
  402f43:	iret   
  402f44:	mov    ebp,0x1672aa85
  402f49:	rcl    DWORD PTR [ebx],cl
  402f4b:	aas    
  402f4c:	adc    cl,BYTE PTR [ebp-0x4c]
  402f4f:	ret    
  402f50:	jns    0x402f25
  402f52:	xlat   BYTE PTR ds:[ebx]
  402f53:	jae    0x402f4a
  402f55:	jbe    0x402f98
  402f57:	xchg   esi,eax
  402f58:	in     al,dx
  402f59:	out    dx,eax
  402f5a:	xchg   DWORD PTR [esi],eax
  402f5c:	sbb    BYTE PTR [ecx-0x73],dl
  402f5f:	add    ah,BYTE PTR [ebx]
  402f61:	mov    ebp,DWORD PTR [edx]
  402f63:	mov    edx,0xce43bb91
  402f68:	mov    bl,0x7e
  402f6a:	mov    ds:0xed95c571,eax
  402f6f:	(bad)  
  402f71:	jmp    0x402f86
  402f73:	hlt    
  402f74:	outs   dx,BYTE PTR ds:[esi]
  402f75:	dec    edx
  402f76:	in     eax,dx
  402f77:	neg    BYTE PTR [ecx+0x12f5b53e]
  402f7d:	mov    bl,0xf8
  402f7f:	out    0x1b,al
  402f81:	mov    DWORD PTR [ebx+0x649dfd2d],esp
  402f87:	sub    edi,DWORD PTR [ebx+0x7b28bc5b]
  402f8d:	ror    DWORD PTR [edi],0xa1
  402f90:	adc    al,0xca
  402f92:	mov    bh,0xc
  402f94:	jmp    FWORD PTR [ecx]
  402f96:	call   0x424bb7ff
  402f9b:	sbb    DWORD PTR [eax],ebp
  402f9d:	xchg   edi,eax
  402f9e:	lods   eax,DWORD PTR ds:[esi]
  402f9f:	adc    eax,0xcc80a05b
  402fa4:	xor    al,0xea
  402fa6:	clc    
  402fa7:	inc    esp
  402fa8:	inc    esp
  402fa9:	sbb    DWORD PTR [edi-0x15],edx
  402fac:	mov    dl,0x53
  402fae:	mov    edx,0xab066dc2
  402fb3:	test   DWORD PTR [eax+0x16],ecx
  402fb6:	call   0x9e29:0x6b0dcce7
  402fbd:	gs adc al,0x9
  402fc0:	das    
  402fc1:	push   ecx
  402fc2:	mov    esi,0xfd1e13f9
  402fc7:	mov    ebp,0x7e8c47a
  402fcc:	adc    ah,BYTE PTR [ecx+0x3b]
  402fcf:	mov    edx,0x5f67214e
  402fd4:	sti    
  402fd5:	pop    es
  402fd6:	imul   ecx,DWORD PTR gs:[esi+0x4de38c9b],0xa659f6e2
  402fe1:	or     ah,BYTE PTR [eax+0x56]
  402fe4:	jnp    0x402fa2
  402fe6:	fmul   QWORD PTR [edx]
  402fe8:	stos   DWORD PTR es:[edi],eax
  402fe9:	jl     0x403043
  402feb:	ret    0x7a41
  402fee:	add    eax,eax
  402ff0:	inc    ebp
  402ff1:	jl     0x403063
  402ff3:	out    0xf4,al
  402ff5:	push   esi
  402ff6:	call   0x2b0b:0x69bfba78
  402ffd:	fmul   DWORD PTR [eax+0x63]
  403000:	in     eax,dx
  403001:	mov    esp,0xd7a5fb02
  403006:	push   ecx
  403007:	inc    ebp
  403008:	xchg   ebx,eax
  403009:	cdq    
  40300a:	pop    ebx
  40300b:	dec    edi
  40300c:	int3   
  40300d:	mov    WORD PTR [ebp+0x27f3f8dc],cs
  403013:	popf   
  403014:	mov    cs,eax
  403016:	pop    edi
  403017:	addr16 (bad) 
  403019:	out    0xf8,al
  40301b:	push   ss
  40301c:	sbb    DWORD PTR [esi+edx*1-0x45e9ffa],0xffffffc8
  403024:	inc    ebp
  403025:	cmp    al,0x15
  403027:	aad    0x90
  403029:	mov    edx,0x88043777
  40302e:	pop    ss
  40302f:	push   ebp
  403030:	and    eax,0xe3ec8d6d
  403035:	leave  
  403036:	dec    ecx
  403037:	ret    0xc211
  40303a:	repz gs cdq 
  40303d:	mov    DWORD PTR [eax],esp
  40303f:	push   0x38
  403041:	cmp    eax,0x1c37bd44
  403046:	aaa    
  403047:	gs pop edx
  403049:	xor    ecx,eax
  40304b:	addr16 aaa 
  40304d:	dec    eax
  40304e:	pop    esi
  40304f:	jle    0x4030b6
  403051:	jmp    0xab5bbfed
  403056:	dec    edi
  403057:	outs   dx,BYTE PTR ds:[esi]
  403058:	inc    ebp
  403059:	xor    BYTE PTR [ebp-0x32b57fe3],al
  40305f:	rol    BYTE PTR [eax-0x6e5b7e3d],0x3e
  403066:	or     ebp,DWORD PTR [ecx]
  403068:	rcr    DWORD PTR [ebx-0x160b29fc],0x32
  40306f:	das    
  403070:	arpl   cx,di
  403072:	popa   
  403073:	mul    bl
  403075:	and    cl,BYTE PTR [esp+edx*2-0x77ce03c]
  40307c:	sub    eax,0xffe7c0b2
  403081:	ret    
  403082:	stos   DWORD PTR es:[edi],eax
  403083:	pop    ds
  403084:	test   bl,0x64
  403087:	rol    BYTE PTR [edx-0x2708d665],cl
  40308d:	sbb    eax,0x9c3891b9
  403092:	jns    0x403043
  403094:	xchg   BYTE PTR [bp+di],dl
  403097:	call   0xde1643bb
  40309c:	mov    ah,0x54
  40309e:	sbb    ah,bh
  4030a0:	sub    eax,0x46b78ac6
  4030a5:	jmp    0x4030d6
  4030a7:	mov    cl,cl
  4030a9:	ja     0x40302f
  4030ab:	ficom  WORD PTR [esi-0x29]
  4030ae:	pusha  
  4030af:	inc    ecx
  4030b0:	mov    al,ds:0x66d2ebb0
  4030b6:	jg     0x40311d
  4030b8:	push   eax
  4030b9:	ins    DWORD PTR es:[edi],dx
  4030ba:	scas   al,BYTE PTR es:[edi]
  4030bb:	sub    DWORD PTR [ecx],edi
  4030bd:	mov    ebx,esp
  4030bf:	(bad)  
  4030c0:	or     eax,0xfc0f1da9
  4030c5:	(bad)  
  4030c6:	mov    ds:0xd599bb2e,eax
  4030cb:	dec    esi
  4030cc:	test   al,0xc2
  4030ce:	mov    dh,0xa1
  4030d0:	pop    esi
  4030d1:	ret    0xafc3
  4030d4:	cmp    DWORD PTR [edx+0x36d91c30],esi
  4030da:	jb     0x4030b0
  4030dc:	retf   
  4030dd:	mov    ah,0xc2
  4030df:	js     0x4030dd
  4030e1:	out    0xd5,al
  4030e3:	pop    ds
  4030e4:	or     DWORD PTR [ecx],ebx
  4030e6:	sub    eax,0x7bc20639
  4030eb:	ds or  eax,0x3730dcff
  4030f1:	cwde   
  4030f2:	loop   0x4030e1
  4030f4:	and    cl,BYTE PTR [eiz*2+0x7b543902]
  4030fb:	test   eax,0x747fc13c
  403100:	stos   BYTE PTR es:[edi],al
  403101:	and    DWORD PTR [edx+eiz*8],edx
  403104:	xlat   BYTE PTR ds:[ebx]
  403105:	xchg   DWORD PTR [edx*4+0x25d7b6f4],ebp
  40310c:	into   
  40310d:	or     al,0x48
  40310f:	shl    BYTE PTR [ebp-0x5f],0xd7
  403113:	cwde   
  403114:	ins    DWORD PTR es:[edi],dx
  403115:	or     ch,BYTE PTR ds:0xfc7a7396
  40311b:	(bad)  
  40311c:	pop    edx
  40311d:	sahf   
  40311e:	retf   
  40311f:	push   ecx
  403120:	les    eax,FWORD PTR [edx+ebx*2+0x2436c4f1]
  403127:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403128:	mov    ecx,0x2cb55ef6
  40312d:	pop    esi
  40312e:	push   cs
  40312f:	sahf   
  403130:	jae    0x4030da
  403132:	mov    ?,WORD PTR [edx+0x1]
  403135:	fisubr WORD PTR [ebx+0x4431500e]
  40313b:	cs cld 
  40313d:	inc    edi
  40313e:	shl    DWORD PTR [ebp+0x38],1
  403141:	fnstcw WORD PTR [ecx]
  403143:	(bad)  
  403144:	mov    ebp,0x8e5ee019
  403149:	ret    0x1239
  40314c:	rol    dl,1
  40314e:	push   eax
  40314f:	add    BYTE PTR [edi+0x75],cl
  403152:	cmp    DWORD PTR [ecx-0x10],esi
  403155:	cdq    
  403156:	outs   dx,BYTE PTR ds:[esi]
  403157:	out    0x54,eax
  403159:	or     DWORD PTR [eax+0x1c9e763],edi
  40315f:	mov    ecx,0x5bc12352
  403164:	pusha  
  403165:	xor    BYTE PTR [ecx+0x64],0x97
  403169:	add    BYTE PTR [edx-0x2ff49691],cl
  40316f:	dec    ecx
  403170:	retf   0x5cac
  403173:	jp     0x40317d
  403175:	dec    ebp
  403176:	pop    es
  403177:	sbb    DWORD PTR [edi],esp
  403179:	adc    eax,0x44f32100
  40317e:	mov    ebp,0xae43caae
  403183:	jg     0x4031ee
  403185:	mov    BYTE PTR [ecx+edx*2],al
  403188:	stc    
  403189:	(bad)  
  40318a:	adc    al,0xe7
  40318c:	sti    
  40318d:	sub    ch,dh
  40318f:	aas    
  403190:	ror    BYTE PTR [ecx+0x2ec0fd6d],0xff
  403197:	xor    BYTE PTR [edi+0x5dcff9e9],0x24
  40319e:	and    BYTE PTR [ecx+ecx*2+0x28eeb0cf],dl
  4031a5:	or     esp,esp
  4031a7:	or     bh,BYTE PTR [ebp-0x3c]
  4031aa:	sub    ebx,DWORD PTR [ebp+0x1d]
  4031ad:	in     eax,0x28
  4031af:	(bad)  
  4031b0:	dec    ebx
  4031b1:	and    eax,0x3e382acc
  4031b6:	bnd jmp 0x4031be
  4031b9:	popf   
  4031ba:	mov    al,ds:0x13873ba7
  4031bf:	dec    ecx
  4031c0:	in     eax,dx
  4031c1:	fisubr DWORD PTR [ebx-0x26ed07e5]
  4031c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031c8:	push   esp
  4031c9:	mov    eax,ds:0xaf3beaec
  4031ce:	repnz (bad) 
  4031d0:	(bad)  
  4031d1:	popa   
  4031d2:	pop    ebx
  4031d3:	mov    ds:0x3105f2c7,eax
  4031d8:	lock or dl,bh
  4031db:	push   0x5b14d647
  4031e0:	mov    ah,0xe7
  4031e2:	scas   al,BYTE PTR es:[edi]
  4031e3:	inc    edx
  4031e4:	sahf   
  4031e5:	and    BYTE PTR [eax],0x85
  4031e8:	scas   al,BYTE PTR es:[edi]
  4031e9:	shl    ch,0xa9
  4031ec:	jae    0x403225
  4031ee:	mov    ch,0x8f
  4031f0:	repz add eax,0xd0566a6f
  4031f6:	pop    ebx
  4031f7:	mov    ds:0x48719b09,al
  4031fc:	mov    esp,0x5999806b
  403201:	sbb    eax,0xc3b2ee02
  403206:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403207:	xchg   ecx,ebx
  403209:	call   0xf04dc536
  40320e:	outs   dx,BYTE PTR ds:[esi]
  40320f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403210:	mov    ebp,0x4affc33d
  403215:	pop    edx
  403216:	push   esp
  403217:	add    DWORD PTR [edi],esi
  403219:	das    
  40321a:	daa    
  40321b:	gs inc edi
  40321d:	(bad)  
  40321e:	and    DWORD PTR [esp+esi*2-0x4],ebx
  403222:	pop    edi
  403223:	stos   DWORD PTR es:[edi],eax
  403224:	les    edi,FWORD PTR [ecx-0x1c2b38a9]
  40322a:	mov    ah,0x3f
  40322c:	cmp    edx,DWORD PTR [ecx-0x1f]
  40322f:	pop    ebp
  403230:	sub    al,0x39
  403232:	pop    edx
  403233:	push   ss
  403234:	pop    ds
  403235:	lahf   
  403236:	aas    
  403237:	jle    0x4031c3
  403239:	push   edx
  40323a:	mov    dl,0xf1
  40323c:	repnz inc ecx
  40323e:	js     0x4031dd
  403240:	mov    ecx,0xcfc8193
  403245:	stc    
  403246:	fbstp  TBYTE PTR [ebp+edi*4+0x33]
  40324a:	or     DWORD PTR [edx+0x7f],ebx
  40324d:	(bad)  
  40324e:	xor    BYTE PTR [ebx+ebx*1-0x40],bh
  403252:	xor    eax,0x5679b4ab
  403257:	push   ebp
  403258:	nop
  403259:	mov    eax,0x9db561c7
  40325e:	out    0x5d,al
  403260:	cmp    ebp,DWORD PTR [edx+0x22]
  403263:	jle    0x403218
  403265:	add    DWORD PTR [esi-0x7f774cdf],ebp
  40326b:	sbb    eax,0x1d9759e4
  403270:	push   ebp
  403271:	jbe    0x4032a3
  403273:	pop    ebx
  403274:	dec    edx
  403275:	or     eax,0xca3940a4
  40327a:	aas    
  40327b:	dec    ebp
  40327c:	loop   0x4032f0
  40327e:	mov    ecx,0xd44da0ea
  403283:	mov    edx,0xb927641b
  403288:	xchg   ebx,eax
  403289:	jge    0x403222
  40328b:	sbb    ah,BYTE PTR [ecx-0x62ef6bff]
  403291:	inc    eax
  403292:	lods   al,BYTE PTR ds:[esi]
  403293:	add    BYTE PTR [ebx-0x43],dh
  403296:	lea    edx,ds:0x443c6081
  40329c:	inc    edi
  40329d:	(bad)  
  40329f:	iret   
  4032a0:	and    edi,DWORD PTR [edi]
  4032a2:	not    DWORD PTR [esi-0x7a]
  4032a5:	(bad)  
  4032a7:	je     0x403312
  4032a9:	dec    eax
  4032aa:	clc    
  4032ab:	shr    BYTE PTR [esi+0x550f5313],1
  4032b1:	pushf  
  4032b2:	adc    DWORD PTR [edx],ebp
  4032b4:	mov    DWORD PTR [ebx],edx
  4032b6:	xchg   ebx,eax
  4032b7:	fimul  DWORD PTR [edx+0x2d00ab5d]
  4032bd:	pusha  
  4032be:	jge    0x403280
  4032c0:	stos   BYTE PTR es:[edi],al
  4032c1:	jo     0x403264
  4032c3:	rcl    DWORD PTR [eax+ebp*1],0x95
  4032c7:	std    
  4032c8:	xchg   BYTE PTR [ebx-0xe],al
  4032cb:	push   ecx
  4032cc:	pop    ebp
  4032cd:	or     DWORD PTR [esi-0x5bad273a],ecx
  4032d3:	mov    cs,WORD PTR [ebx-0x6899c823]
  4032d9:	fimul  WORD PTR ds:0xd508661b
  4032df:	xor    edi,DWORD PTR [esi+0x50830469]
  4032e5:	data16 fcom DWORD PTR [ebx]
  4032e8:	mov    edx,0x60aa61ce
  4032ed:	pop    ebp
  4032ee:	sub    DWORD PTR es:[ebx+0x34949fbe],esi
  4032f5:	jmp    0x403327
  4032f7:	out    dx,al
  4032f8:	mov    bl,BYTE PTR [ecx+0x2f241bb8]
  4032fe:	fistp  WORD PTR [ebx-0x127c9489]
  403304:	mov    ebp,0x6e2a9f80
  403309:	xchg   ebp,eax
  40330a:	mov    ebp,DWORD PTR [edi]
  40330c:	icebp  
  40330d:	std    
  40330e:	push   ds
  40330f:	or     al,0xd6
  403311:	imul   DWORD PTR [edx]
  403313:	(bad)  
  403315:	sub    eax,esp
  403317:	cmp    ch,BYTE PTR [ecx+0x70]
  40331a:	sbb    eax,0xfe4cafd9
  40331f:	jbe    0x403301
  403321:	ret    
  403322:	xor    bh,bl
  403324:	nop
  403325:	inc    eax
  403326:	sub    eax,0xa9d3a3b0
  40332b:	and    al,0x8a
  40332d:	sbb    al,0xb0
  40332f:	lods   eax,DWORD PTR ds:[esi]
  403330:	cmp    DWORD PTR [edi],ebp
  403332:	push   esi
  403333:	loope  0x4032cc
  403335:	nop
  403336:	lahf   
  403337:	cs test eax,0xca21e0cb
  40333d:	xor    DWORD PTR [ebp-0x4862eb6d],0x7c6c2b60
  403347:	mov    ecx,0x42112a7
  40334c:	mul    eax
  40334e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40334f:	(bad)  
  403350:	push   cs
  403351:	mov    al,0xa
  403353:	rol    DWORD PTR [edi],1
  403355:	enter  0x8fdb,0x4a
  403359:	jne    0x403367
  40335b:	test   DWORD PTR [edx],ecx
  40335d:	mov    DWORD PTR [esp+ecx*1],esp
  403360:	and    BYTE PTR gs:[edx+0x32],dl
  403364:	adc    esp,esi
  403366:	out    0x37,eax
  403368:	sbb    al,0x16
  40336a:	add    al,0x1
  40336c:	mov    ds:0x6f51e66,al
  403371:	mov    dl,0x9f
  403373:	xchg   ebp,eax
  403374:	lds    esp,FWORD PTR ds:0x106a48f3
  40337a:	inc    eax
  40337b:	inc    ebx
  40337c:	xlat   BYTE PTR ds:[ebx]
  40337d:	adc    cl,BYTE PTR [ecx+ebx*8+0x5295e0fe]
  403384:	adc    eax,0xb7f11cdf
  403389:	jl     0x4033cd
  40338b:	outs   dx,BYTE PTR ds:[esi]
  40338c:	out    dx,al
  40338d:	mov    ch,0x89
  40338f:	mov    ecx,0x7b680e95
  403394:	fs out 0x23,al
  403397:	add    BYTE PTR [esi],bh
  403399:	popf   
  40339a:	push   ss
  40339b:	xchg   bl,al
  40339d:	in     al,0x88
  40339f:	leave  
  4033a0:	inc    ecx
  4033a1:	jb     0x40334d
  4033a3:	ffreep st(2)
  4033a5:	dec    edx
  4033a6:	sar    DWORD PTR [ecx-0x5dccc35d],cl
  4033ac:	push   esp
  4033ad:	sub    bh,BYTE PTR [edi]
  4033af:	test   DWORD PTR [edx+ebp*2-0x56318913],eax
  4033b6:	mov    DWORD PTR [ebx-0x6faf7892],esp
  4033bc:	fst    st(2)
  4033be:	jmp    0x4033c4
  4033c0:	ret    0x1991
  4033c3:	lahf   
  4033c4:	xchg   edi,eax
  4033c5:	push   ebp
  4033c6:	sar    DWORD PTR [edx+0x69463f1f],1
  4033cc:	adc    bh,BYTE PTR [ebx-0x4564d2f6]
  4033d2:	daa    
  4033d3:	push   edi
  4033d4:	repnz sub eax,0xb9a9cfc5
  4033da:	(bad)  
  4033db:	and    DWORD PTR [edx+edi*2-0x5e87aa3e],ebx
  4033e2:	(bad)  
  4033e3:	iret   
  4033e4:	mov    bh,0xa3
  4033e6:	mov    ebp,0xb3864bcf
  4033eb:	mov    ebp,0xddce8dc4
  4033f0:	fadd   DWORD PTR [edi+0x3d]
  4033f3:	lods   eax,DWORD PTR ds:[esi]
  4033f4:	sti    
  4033f5:	lds    ebx,FWORD PTR [ebx+0x7c97e46]
  4033fb:	retf   0xbc94
  4033fe:	sbb    eax,0xdba31f88
  403403:	loop   0x403437
  403405:	pop    edx
  403406:	xor    al,0xe4
  403408:	jae    0x403460
  40340a:	int    0xec
  40340c:	adc    ah,BYTE PTR [esi]
  40340e:	mov    dl,0x79
  403410:	ret    
  403411:	cmp    bl,dl
  403413:	push   sp
  403415:	ins    DWORD PTR es:[edi],dx
  403416:	xlat   BYTE PTR ds:[ebx]
  403417:	mov    ah,0xe4
  403419:	stos   DWORD PTR es:[edi],eax
  40341a:	aaa    
  40341b:	fld    QWORD PTR [edi+edi*1]
  40341e:	aad    0xef
  403420:	(bad)  
  403422:	ficomp WORD PTR [edx-0x60b982e7]
  403428:	sbb    eax,0x21185442
  40342d:	mov    WORD PTR [edx+0x177a7afe],ss
  403433:	ror    BYTE PTR [ebx],cl
  403435:	adc    ah,dh
  403437:	retf   0xdf36
  40343a:	cmp    BYTE PTR [esi-0x783db2b0],ch
  403440:	fidivr WORD PTR [ebx+0x14]
  403443:	pop    es
  403444:	fucom  st(5)
  403446:	cdq    
  403447:	and    eax,0x55e25bda
  40344c:	jno    0x40346b
  40344e:	repnz int3 
  403450:	mov    bl,0x77
  403452:	xlat   BYTE PTR ds:[ebx]
  403453:	(bad)  
  403454:	and    esp,DWORD PTR [ecx-0x34]
  403457:	jo     0x403420
  403459:	stc    
  40345a:	push   edx
  40345b:	adc    BYTE PTR [eax-0xc],0xf2
  40345f:	ret    0xf4a
  403462:	dec    edi
  403464:	test   eax,0x50c1bd19
  403469:	ja     0x40343d
  40346b:	popa   
  40346c:	jae    0x4034c2
  40346e:	sbb    al,0x91
  403470:	fild   DWORD PTR [edi]
  403472:	jg     0x4034c9
  403474:	push   cs
  403475:	add    esi,edx
  403477:	xor    BYTE PTR [ecx-0x73],ch
  40347a:	ins    DWORD PTR es:[edi],dx
  40347b:	add    BYTE PTR [edx],bh
  40347d:	mov    ah,BYTE PTR [ebx-0x48]
  403480:	fdivr  DWORD PTR [ecx-0x32b2f303]
  403486:	and    BYTE PTR ss:[esi],bl
  403489:	les    eax,FWORD PTR [ebx-0x20]
  40348c:	inc    ecx
  40348d:	adc    al,0xa2
  40348f:	pop    ss
  403490:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403491:	inc    esp
  403492:	add    al,0x67
  403494:	add    BYTE PTR [eax+0x2cbc44eb],ch
  40349a:	in     eax,0xe8
  40349c:	push   cs
  40349d:	popf   
  40349e:	ins    BYTE PTR es:[edi],dx
  40349f:	dec    eax
  4034a0:	cdq    
  4034a1:	sub    DWORD PTR [esi-0x1f],edx
  4034a4:	pusha  
  4034a5:	das    
  4034a6:	jmp    0xf6e4f4e0
  4034ab:	cmp    DWORD PTR [ebp+0x20],edx
  4034ae:	and    ebp,ecx
  4034b0:	or     DWORD PTR [esp+ebx*8],eax
  4034b3:	fldenv [edi+esi*2]
  4034b6:	cmp    BYTE PTR [ecx+0x4a266f93],bl
  4034bc:	scas   eax,DWORD PTR es:[edi]
  4034bd:	push   esi
  4034be:	lds    ecx,FWORD PTR [ebx-0x36]
  4034c1:	push   eax
  4034c2:	ret    0x28af
  4034c5:	aaa    
  4034c6:	and    dh,BYTE PTR ds:0xb093466e
  4034cc:	rol    DWORD PTR [eax],cl
  4034ce:	mov    edi,0xad45d0b3
  4034d3:	cmp    BYTE PTR [edi+0x55072242],cl
  4034d9:	push   eax
  4034da:	sbb    DWORD PTR [eax+0xf],ecx
  4034dd:	in     al,dx
  4034de:	aam    0x9b
  4034e0:	fprem  
  4034e2:	pop    esi
  4034e3:	mov    dl,0xfd
  4034e5:	loopne 0x403523
  4034e7:	jge    0x403511
  4034e9:	cld    
  4034ea:	es fcom st(0)
  4034ed:	jne    0x40356a
  4034ef:	or     esp,eax
  4034f1:	(bad)  
  4034f2:	dec    ecx
  4034f3:	cs xchg edx,eax
  4034f5:	cmp    BYTE PTR [ebp+esi*4-0x36],dh
  4034f9:	cli    
  4034fa:	jmp    0x4034a7
  4034fc:	pop    es
  4034fd:	inc    ecx
  4034fe:	mov    ebp,DWORD PTR [edx]
  403500:	push   ecx
  403501:	retf   0x8f6b
  403504:	cwde   
  403505:	xchg   esi,eax
  403506:	iret   
  403507:	in     eax,dx
  403508:	add    ch,bh
  40350a:	(bad)  
  40350c:	jnp    0x403505
  40350e:	shl    eax,1
  403510:	rol    esp,cl
  403512:	mov    ebx,0xf3a9c3f3
  403517:	dec    edx
  403518:	push   ebx
  403519:	sbb    al,0xd4
  40351b:	add    dh,BYTE PTR [edi+0xc094987]
  403521:	inc    ecx
  403522:	or     DWORD PTR [edx],esp
  403524:	sbb    eax,0xb592482c
  403529:	dec    edx
  40352a:	mov    ebp,0x450cdc86
  40352f:	clc    
  403530:	sub    edx,DWORD PTR [ebx-0x271cf790]
  403536:	neg    DWORD PTR [edx]
  403538:	ins    DWORD PTR es:[edi],dx
  403539:	xlat   BYTE PTR ds:[ebx]
  40353a:	cli    
  40353b:	cmp    DWORD PTR [edx],edx
  40353d:	xor    ch,BYTE PTR [esi-0x2d]
  403540:	jmp    0x403591
  403542:	mov    eax,0xaaa2164
  403547:	jle    0x4034d1
  403549:	and    al,0xb7
  40354b:	sbb    al,0x12
  40354d:	or     DWORD PTR [esi+esi*2],esi
  403550:	shr    DWORD PTR [ecx+0x62b5d865],0x82
  403557:	inc    edx
  403558:	mov    ?,WORD PTR [ebx+esi*2]
  40355b:	arpl   bp,dx
  40355d:	jl     0x403556
  40355f:	pop    edi
  403560:	dec    esp
  403561:	sti    
  403562:	mov    bh,0x1e
  403564:	lock lahf 
  403566:	rcl    DWORD PTR [edx],cl
  403568:	add    al,0x64
  40356a:	push   cs
  40356b:	popf   
  40356c:	das    
  40356d:	xor    al,ah
  40356f:	mov    eax,0xa352e3ad
  403574:	mov    ah,0x52
  403576:	jbe    0x4035e1
  403578:	mov    al,BYTE PTR [edx+0x4b]
  40357b:	aaa    
  40357c:	pop    edx
  40357d:	dec    ebp
  40357e:	xchg   edi,eax
  40357f:	dec    edi
  403580:	idiv   ch
  403582:	mov    esp,DWORD PTR [ecx+0x4c]
  403585:	pushf  
  403586:	sub    eax,0x6f06e2d9
  40358b:	aas    
  40358c:	popa   
  40358d:	pop    ss
  40358e:	arpl   WORD PTR [ebx+ecx*4],sp
  403591:	dec    esi
  403592:	out    dx,al
  403593:	cmp    ebx,DWORD PTR [ecx]
  403595:	inc    ebx
  403596:	mov    ebp,0x5763cd57
  40359b:	fcmovb st,st(1)
  40359d:	xlat   BYTE PTR ds:[ebx]
  40359e:	shr    BYTE PTR [ebp-0x71],0x2
  4035a2:	mov    cl,0x9d
  4035a4:	push   es
  4035a5:	pop    ss
  4035a6:	(bad)  
  4035a7:	in     al,0xfa
  4035a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035aa:	push   esi
  4035ab:	not    edi
  4035ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035ae:	sub    cl,al
  4035b0:	mov    eax,ds:0xf4de27ef
  4035b5:	sub    dl,BYTE PTR [ebp+0x4a]
  4035b8:	add    eax,0xdca9dc33
  4035be:	sbb    eax,0xc8223814
  4035c3:	push   esi
  4035c4:	dec    edx
  4035c5:	popf   
  4035c6:	fcmovnbe st,st(5)
  4035c8:	jp     0x4035c2
  4035ca:	(bad)  
  4035cb:	dec    ebx
  4035cc:	inc    edi
  4035cd:	push   ss
  4035ce:	xchg   ecx,eax
  4035cf:	push   ebx
  4035d0:	test   DWORD PTR [eax+0x6faed5ee],esp
  4035d6:	hlt    
  4035d7:	or     DWORD PTR [eax-0x26],ecx
  4035da:	jb     0x40364f
  4035dc:	dec    edi
  4035dd:	mov    ds:0x881b8fb1,eax
  4035e2:	test   al,0x7a
  4035e4:	fisttp QWORD PTR [eax]
  4035e6:	adc    DWORD PTR [esi-0x22],ebp
  4035e9:	add    eax,0xd846503b
  4035ee:	ss or  eax,0x82efbb6f
  4035f4:	aam    0xfe
  4035f6:	jbe    0x4035e4
  4035f8:	lods   al,BYTE PTR ds:[esi]
  4035f9:	mov    edi,?
  4035fb:	add    ebp,DWORD PTR [ebp+0x149895e7]
  403601:	outs   dx,DWORD PTR ds:[esi]
  403602:	cmp    BYTE PTR [eax-0x9812a17],ah
  403608:	sbb    eax,DWORD PTR [edi+ebp*8]
  40360b:	dec    ecx
  40360c:	cs icebp 
  40360e:	hlt    
  40360f:	cli    
  403610:	in     al,dx
  403611:	(bad)  [esi-0x10537ed6]
  403617:	jne    0x403608
  403619:	sub    DWORD PTR [ecx],edi
  40361b:	or     eax,0xdac5ee0d
  403620:	lock adc eax,0xd0e88ba3
  403626:	inc    edx
  403627:	loopne 0x4035e0
  403629:	xchg   edi,eax
  40362a:	scas   eax,DWORD PTR es:[edi]
  40362b:	lods   eax,DWORD PTR ds:[esi]
  40362c:	xchg   esp,eax
  40362d:	adc    DWORD PTR [edi],esp
  40362f:	into   
  403630:	out    0xe0,eax
  403632:	(bad)  
  403633:	inc    DWORD PTR [ecx-0x24]
  403636:	neg    BYTE PTR [edi]
  403638:	jle    0x40365e
  40363a:	into   
  40363b:	sub    ebp,DWORD PTR [esi+0xe3e810]
  403641:	jge    0x4036a3
  403643:	or     ecx,DWORD PTR ds:0x2a61e5d8
  403649:	fstp   TBYTE PTR [ebx+0x5d41220b]
  40364f:	ja     0x40364b
  403651:	dec    eax
  403652:	mov    cl,0x7e
  403654:	aam    0xb8
  403656:	xchg   edx,eax
  403657:	cmp    DWORD PTR ds:[ecx+0x16],ebx
  40365b:	in     eax,dx
  40365c:	out    0x39,al
  40365e:	cmp    eax,0x21246e3f
  403663:	inc    esp
  403664:	(bad)  
  403665:	call   DWORD PTR [ecx]
  403667:	mov    dl,0xfa
  403669:	pop    esp
  40366a:	ins    DWORD PTR es:[edi],dx
  40366b:	mov    dh,0xda
  40366d:	call   0x4b8bb7f8
  403672:	dec    ebx
  403673:	loop   0x403644
  403675:	bound  ebx,QWORD PTR [ebx-0x44c34346]
  40367b:	dec    esi
  40367c:	mov    esi,0x81d84c09
  403681:	xchg   ebx,eax
  403682:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403683:	jg     0x4036a3
  403685:	cmp    eax,0xf256505b
  40368a:	scas   al,BYTE PTR es:[edi]
  40368b:	pop    ss
  40368c:	ins    DWORD PTR es:[edi],dx
  40368d:	jge    0x403652
  40368f:	test   eax,0x24ee5fa9
  403694:	and    ecx,DWORD PTR [eax-0x4aeadb9e]
  40369a:	lock test al,0x16
  40369d:	(bad)  
  40369e:	cmp    ebx,ebx
  4036a0:	ins    DWORD PTR es:[edi],dx
  4036a1:	pop    ebp
  4036a2:	or     al,0x7e
  4036a4:	and    eax,0xa8a1b742
  4036a9:	ds add dh,dl
  4036ac:	inc    ecx
  4036ad:	add    edx,DWORD PTR [edx+edi*8]
  4036b0:	or     DWORD PTR [ebp-0x2ae353b1],esp
  4036b6:	mov    al,ds:0x4e2bfcde
  4036bb:	mov    al,0x96
  4036bd:	ins    BYTE PTR es:[edi],dx
  4036be:	pop    ecx
  4036bf:	and    al,cl
  4036c1:	and    al,0xfc
  4036c3:	dec    esi
  4036c4:	jno    0x40366f
  4036c6:	xor    ah,bl
  4036c8:	pop    ebp
  4036c9:	pop    ebp
  4036cb:	(bad)  
  4036cd:	adc    edi,eax
  4036cf:	jmp    0x36e1:0x458ef5a0
  4036d6:	retf   0x792a
  4036d9:	scas   eax,DWORD PTR es:[edi]
  4036da:	adc    ebx,ecx
  4036dc:	clts   
  4036de:	dec    eax
  4036df:	sbb    BYTE PTR [esi],ah
  4036e1:	ss inc eax
  4036e3:	test   BYTE PTR [ecx],ah
  4036e5:	aam    0xfe
  4036e7:	dec    edi
  4036e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4036e9:	push   edx
  4036ea:	and    eax,0xf875ac79
  4036ef:	mov    ss,WORD PTR [eax-0x70]
  4036f2:	add    al,0xf
  4036f4:	fsubr  QWORD PTR gs:[eax+0x54877954]
  4036fb:	mov    ds:0x9f5b4e09,eax
  403700:	push   edi
  403701:	mov    BYTE PTR [eax+0x31],bl
  403704:	test   DWORD PTR [edi+0x77409648],0x34952a28
  40370e:	inc    esi
  40370f:	outs   dx,DWORD PTR ds:[esi]
  403710:	data16 jno 0x4036a1
  403713:	popa   
  403714:	adc    edx,DWORD PTR [ebx]
  403716:	hlt    
  403717:	popa   
  403718:	push   ebp
  403719:	test   ebp,esi
  40371b:	out    dx,al
  40371c:	xchg   ecx,eax
  40371d:	dec    ecx
  40371e:	xchg   ebx,eax
  40371f:	jnp    0x40377b
  403721:	mov    ch,0xf4
  403723:	test   edi,edx
  403725:	ficom  DWORD PTR [edx-0x67b7d408]
  40372b:	xlat   BYTE PTR es:[ebx]
  40372d:	(bad)  
  40372e:	in     al,dx
  40372f:	ficom  DWORD PTR [esi]
  403731:	aam    0x70
  403733:	jmp    0x9e9b479b
  403738:	(bad)  
  403739:	lods   eax,DWORD PTR ds:[esi]
  40373a:	fistp  DWORD PTR [esi+eax*4]
  40373d:	jmp    0x4037ac
  40373f:	inc    DWORD PTR [esp+edx*2]
  403742:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403743:	rol    DWORD PTR [esi+0x1b],cl
  403746:	in     eax,0x8a
  403748:	inc    ecx
  403749:	xchg   BYTE PTR [edx+0x764b398b],dh
  40374f:	mov    esp,DWORD PTR [esi+0x3f]
  403752:	add    al,BYTE PTR [ebx+esi*8+0x76]
  403756:	mov    bh,0x54
  403758:	cmp    al,0x39
  40375a:	sub    BYTE PTR [edx-0x31],al
  40375d:	sbb    al,ch
  40375f:	push   si
  403761:	pusha  
  403762:	aad    0x0
  403764:	adc    DWORD PTR [edi],ebp
  403766:	cwde   
  403767:	add    BYTE PTR [edi*2+0x28f91e03],cl
  40376e:	(bad)  
  403770:	out    0x26,al
  403772:	cmp    eax,0xf008c1cc
  403777:	je     0x403754
  403779:	fwait
  40377a:	das    
  40377b:	mov    esi,0xe8458937
  403780:	mov    dh,0xbd
  403782:	test   BYTE PTR [esp+esi*2+0x3b],al
  403786:	fs out 0x4c,eax
  403789:	adc    ch,BYTE PTR [ebp+0x48]
  40378c:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40378e:	retf   0x7699
  403791:	cmp    DWORD PTR [ecx-0x57591e5c],ecx
  403797:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403798:	jno    0x40371a
  40379a:	js     0x40379e
  40379c:	cli    
  40379d:	out    0xe2,al
  40379f:	xchg   BYTE PTR ds:0x8e95295d,dl
  4037a5:	cmp    DWORD PTR [edx],eax
  4037a7:	pop    ecx
  4037a8:	enter  0x289,0x5c
  4037ac:	push   edx
  4037ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037ae:	not    BYTE PTR [ecx-0x1ba53f05]
  4037b4:	mov    eax,0xc82458da
  4037b9:	cmp    al,0x1c
  4037bb:	fisub  WORD PTR [esp+0x22]
  4037bf:	(bad)  
  4037c0:	jg     0x403766
  4037c2:	imul   eax,DWORD PTR ds:0x24d7809a,0xee9ba485
  4037cc:	bound  esi,QWORD PTR [edi]
  4037ce:	outs   dx,DWORD PTR ds:[esi]
  4037cf:	addr16 repnz cmp eax,0xee773e4a
  4037d6:	test   BYTE PTR [eax+0x29],ch
  4037d9:	mov    dl,0x51
  4037db:	push   ebx
  4037dc:	shl    DWORD PTR [edx-0x41a489e6],0xf1
  4037e3:	cmp    ecx,0xccad6a9e
  4037e9:	aam    0x8d
  4037eb:	rcl    BYTE PTR [esi],0x2
  4037ee:	(bad)  
  4037ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037f0:	aaa    
  4037f1:	push   ss
  4037f2:	pop    edi
  4037f3:	(bad)  
  4037f4:	sar    bh,1
  4037f6:	xor    eax,0x8b951053
  4037fb:	dec    esp
  4037fc:	fsub   QWORD PTR ds:0xd9fd4849
  403802:	lea    edi,[ebx-0x1749cfab]
  403808:	cwde   
  403809:	push   DWORD PTR [esp+ecx*1]
  40380c:	add    dl,BYTE PTR [ebx-0x1896617f]
  403812:	push   ecx
  403813:	push   ss
  403814:	aad    0x52
  403816:	mov    ds:0xdae7ab94,eax
  40381b:	outs   dx,BYTE PTR ds:[esi]
  40381c:	sub    DWORD PTR [ecx+edx*4],ebx
  40381f:	xchg   edx,eax
  403820:	shl    edx,cl
  403822:	and    bl,BYTE PTR [ebx-0xc021a44]
  403828:	xchg   BYTE PTR [esi-0x58d75a0d],al
  40382e:	pusha  
  40382f:	mov    edi,cs
  403831:	mov    ah,0x2b
  403833:	ss dec esp
  403835:	xchg   eax,ebx
  403837:	bound  edi,QWORD PTR [ecx+eiz*8+0x36]
  40383b:	bnd jle 0x4037c8
  40383e:	mov    bl,0xa
  403840:	inc    edx
  403841:	and    DWORD PTR [esi+0x3c0bb913],edx
  403847:	jmp    0x403812
  403849:	mov    al,0x9f
  40384b:	jg     0x403818
  40384d:	out    dx,eax
  40384e:	mov    ds:0x9eb43518,al
  403853:	and    esp,DWORD PTR [ebx]
  403855:	adc    edi,ebx
  403857:	mov    edx,0x529726aa
  40385c:	add    BYTE PTR [esp+ebp*4-0x50],ch
  403860:	inc    esp
  403861:	xor    al,0xeb
  403863:	stos   BYTE PTR es:[edi],al
  403864:	and    eax,0x2a50362d
  403869:	mov    ds:0x757bf15b,al
  40386e:	aaa    
  40386f:	arpl   WORD PTR [edi-0x7d],bp
  403872:	out    0x5f,eax
  403874:	inc    eax
  403875:	push   esi
  403876:	jb     0x403815
  403878:	and    al,0xb9
  40387a:	jae    0x40387e
  40387c:	add    al,0x36
  40387e:	push   ebx
  40387f:	inc    ebp
  403880:	gs cs push esp
  403883:	inc    edx
  403884:	cmp    ebp,0x5d
  403887:	add    ebp,ebx
  403889:	loop   0x403859
  40388b:	lea    esp,[ecx-0x64]
  40388e:	push   ecx
  40388f:	ss dec ebp
  403891:	pop    esp
  403892:	(bad)  [edi+0x20]
  403895:	les    edi,FWORD PTR [edx]
  403897:	cmp    BYTE PTR gs:[edx],0x9c
  40389b:	and    al,0xae
  40389d:	or     BYTE PTR [ebp-0x21],bh
  4038a0:	push   ecx
  4038a1:	(bad)  
  4038a3:	dec    ebx
  4038a4:	ss out dx,eax
  4038a6:	mov    eax,ds:0x18454e65
  4038ab:	mov    bh,0x28
  4038ad:	aas    
  4038ae:	xor    eax,0xf2ff70a2
  4038b3:	les    ebp,FWORD PTR [ebp+0x33]
  4038b6:	push   ecx
  4038b7:	lahf   
  4038b8:	and    dl,BYTE PTR [edi-0x66f18a64]
  4038be:	not    DWORD PTR [eax-0x72b67410]
  4038c4:	push   esp
  4038c5:	in     eax,dx
  4038c6:	push   edi
  4038c7:	imul   esi,DWORD PTR [eax+0x1c],0x6e
  4038cb:	cmp    ch,ch
  4038cd:	test   al,0x92
  4038cf:	cli    
  4038d0:	fsub   DWORD PTR es:[ebp-0x11]
  4038d4:	stos   BYTE PTR es:[edi],al
  4038d5:	mov    DWORD PTR gs:[eax+0x4f6ae468],esi
  4038dc:	mov    ebp,0x7c261f15
  4038e1:	mov    ah,0x4f
  4038e3:	lods   eax,DWORD PTR ds:[esi]
  4038e4:	xor    eax,0x1cba270a
  4038e9:	(bad)  
  4038ea:	aas    
  4038eb:	mov    al,ds:0x69f379fa
  4038f0:	aam    0xd9
  4038f2:	ins    BYTE PTR es:[edi],dx
  4038f3:	fistp  QWORD PTR [ecx+0x3]
  4038f7:	outs   dx,BYTE PTR ds:[esi]
  4038f8:	fcmovu st,st(2)
  4038fa:	adc    cl,ch
  4038fc:	xor    dh,bl
  4038fe:	(bad)  [eax+eiz*2+0x3e]
  403902:	scas   eax,DWORD PTR es:[edi]
  403903:	sub    edi,DWORD PTR [ebx]
  403905:	aad    0x6e
  403907:	imul   ebx,DWORD PTR [eax+0x51c05564],0x32
  40390e:	test   DWORD PTR [edx-0x8],edx
  403911:	shl    edi,0x78
  403914:	xchg   ebp,eax
  403915:	dec    ebx
  403916:	rol    BYTE PTR [esi],1
  403918:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403919:	jbe    0x4038ab
  40391b:	adc    DWORD PTR [edi+edx*1+0x2e80e5c3],edi
  403922:	in     eax,dx
  403923:	jno    0x4038d1
  403925:	imul   ecx,DWORD PTR [ebx+0x50],0xfa506a3d
  40392c:	or     bl,BYTE PTR [ebx-0x2b]
  40392f:	arpl   WORD PTR [ebx+0x56],si
  403932:	xchg   ebx,eax
  403933:	sub    al,0x79
  403935:	mov    dl,0xd9
  403937:	icebp  
  403938:	aaa    
  403939:	sbb    bl,BYTE PTR [edi+0x34e1741f]
  40393f:	and    BYTE PTR [esi-0x4f],dl
  403942:	pusha  
  403943:	out    dx,al
  403944:	fs mov ecx,fs
  403947:	fisubr DWORD PTR [esi]
  403949:	dec    edx
  40394a:	dec    eax
  40394b:	mov    al,ds:0x4133f285
  403950:	xor    DWORD PTR ds:0x94187f45,eax
  403956:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  403958:	mov    esp,0xe20b678e
  40395d:	sbb    eax,0x732d90c2
  403962:	mov    bl,0xc8
  403964:	les    edi,FWORD PTR [esi]
  403966:	aam    0x28
  403968:	adc    al,cl
  40396a:	fcom   DWORD PTR [ebx+0x1893eee5]
  403970:	add    al,0x2d
  403972:	inc    edi
  403973:	mov    edx,0xaa9a925a
  403978:	(bad)  [esp+ebx*2-0x61b3809f]
  40397f:	adc    bl,BYTE PTR [edx-0x230ea719]
  403985:	xor    ebp,ecx
  403987:	or     DWORD PTR [ecx],eax
  403989:	push   esi
  40398a:	mov    ds:0x5dd08e36,eax
  40398f:	rcr    al,0x94
  403992:	stos   DWORD PTR es:[edi],eax
  403993:	or     BYTE PTR [edi],dl
  403995:	inc    ecx
  403996:	sub    eax,0x3b7a5144
  40399b:	stc    
  40399c:	push   es
  40399d:	pop    edx
  40399e:	pop    edi
  40399f:	enter  0xf18c,0xe7
  4039a3:	add    BYTE PTR [ecx+0x72],dh
  4039a6:	mov    ebx,0x9c3f52c0
  4039ab:	outs   dx,BYTE PTR ds:[esi]
  4039ac:	or     esi,DWORD PTR [eax+0x8]
  4039af:	mov    bh,0x42
  4039b1:	dec    esp
  4039b2:	fstp   QWORD PTR [ecx]
  4039b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039b5:	leave  
  4039b6:	or     DWORD PTR [edx],eax
  4039b8:	xchg   ebp,eax
  4039b9:	(bad)  
  4039ba:	stos   DWORD PTR es:[edi],eax
  4039bb:	xor    BYTE PTR [ecx],0x3a
  4039be:	xchg   edx,eax
  4039bf:	test   esi,esp
  4039c1:	mov    DWORD PTR [ebp+0x20],edi
  4039c4:	retf   
  4039c5:	add    ecx,DWORD PTR [esi+0xe56cef5]
  4039cb:	jae    0x403994
  4039cd:	push   eax
  4039ce:	dec    esi
  4039cf:	jo     0x403a1c
  4039d1:	xor    eax,0x94e7fd94
  4039d6:	(bad)  
  4039d7:	jns    0x40399c
  4039d9:	mov    dl,bl
  4039db:	sbb    eax,0x55323708
  4039e0:	xchg   ebp,eax
  4039e1:	mov    ds:0xed759410,eax
  4039e6:	imul   ebp,DWORD PTR [esi],0xea433284
  4039ec:	in     eax,dx
  4039ed:	sti    
  4039ee:	in     eax,dx
  4039ef:	jp     0x403a65
  4039f1:	lock fnsave [edi+0x7f]
  4039f5:	out    dx,al
  4039f6:	mov    dl,0xee
  4039f8:	pop    edx
  4039f9:	pop    eax
  4039fa:	ret    
  4039fb:	jbe    0x403a61
  4039fd:	clc    
  4039fe:	scas   al,BYTE PTR es:[edi]
  4039ff:	jge    0x4039ba
  403a01:	lods   al,BYTE PTR ds:[esi]
  403a02:	aam    0xa7
  403a04:	pusha  
  403a05:	dec    edx
  403a06:	iret   
  403a07:	mov    esi,0x4e684e1c
  403a0c:	or     esi,DWORD PTR [edi]
  403a0e:	mov    ah,0x87
  403a10:	sbb    ebp,edi
  403a12:	and    ebp,DWORD PTR [ebx]
  403a14:	loope  0x403a7b
  403a16:	shl    BYTE PTR [ebp+edx*2-0x7c6ed18b],cl
  403a1d:	or     eax,0x5fb780b6
  403a22:	mov    cl,0x67
  403a24:	out    dx,al
  403a25:	pop    edi
  403a26:	or     dl,BYTE PTR [ebx+0x65a634dd]
  403a2c:	sub    DWORD PTR [esi+0x30b45f37],esp
  403a32:	or     DWORD PTR [ebp-0x25],eax
  403a35:	inc    ebp
  403a36:	or     ebx,DWORD PTR [ebp+0x3881b78b]
  403a3c:	cmp    bh,dh
  403a3e:	ret    
  403a3f:	xor    DWORD PTR [ebp+ecx*2-0x69],esi
  403a43:	aad    0x80
  403a45:	rcr    DWORD PTR [esi+0x584a5829],1
  403a4b:	scas   eax,DWORD PTR es:[edi]
  403a4c:	pop    edi
  403a4d:	adc    DWORD PTR [ebx-0x7],edx
  403a50:	add    BYTE PTR [ebp-0x4e],dl
  403a53:	loope  0x403a87
  403a55:	(bad)  
  403a56:	lods   al,BYTE PTR ds:[esi]
  403a57:	mov    al,ds:0x3e455df8
  403a5c:	fwait
  403a5d:	repnz add ch,BYTE PTR ds:0xd2137773
  403a64:	or     al,al
  403a66:	aad    0x67
  403a68:	jg     0x403a04
  403a6a:	call   0xeb9a54c7
  403a6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a70:	hlt    
  403a71:	mov    al,ds:0xe9eb5959
  403a76:	mov    esi,0xf947b5e3
  403a7b:	cmp    al,0x82
  403a7d:	in     al,0x6e
  403a7f:	xor    ebx,ebp
  403a81:	addr16 jnp 0x403a84
  403a84:	js     0x403a84
  403a86:	mov    al,0xef
  403a88:	mov    bh,0xff
  403a8a:	xrelease mov DWORD PTR [edi-0x64],esp
  403a8e:	test   al,0xc7
  403a90:	pop    esp
  403a91:	adc    ebx,edx
  403a93:	dec    ecx
  403a94:	inc    cx
  403a96:	in     eax,dx
  403a97:	test   al,0xb8
  403a99:	scas   eax,DWORD PTR es:[edi]
  403a9a:	push   ebp
  403a9b:	adc    bh,ah
  403a9d:	mov    bl,0x14
  403a9f:	retf   
  403aa0:	mov    ebx,DWORD PTR [eax+eax*4]
  403aa3:	mov    dl,0xdf
  403aa5:	sbb    DWORD PTR [esi+ebp*8+0x7a],ebx
  403aa9:	imul   edi,DWORD PTR [ecx],0x2c
  403aac:	push   esp
  403aad:	fmul   DWORD PTR ds:0xe2594874
  403ab3:	retf   0xe39c
  403ab6:	in     eax,0x80
  403ab8:	push   0xf904dba4
  403abd:	outs   dx,BYTE PTR ds:[esi]
  403abe:	js     0x403b38
  403ac0:	aad    0xcd
  403ac2:	mov    ds:0xc3fc6ca4,eax
  403ac7:	test   BYTE PTR [ebx+0x2a893293],cl
  403acd:	popf   
  403ace:	sti    
  403acf:	pop    esp
  403ad0:	inc    ecx
  403ad1:	jp     0x403b52
  403ad3:	pushf  
  403ad4:	mov    ds:0xffbcfaf0,al
  403ad9:	add    bl,BYTE PTR [edi]
  403adb:	cld    
  403adc:	cmp    esp,ebx
  403ade:	mov    esp,0xcf4c712c
  403ae3:	loopne 0x403aab
  403ae5:	pop    ds
  403ae6:	mov    edi,0x58febabf
  403aeb:	mov    ecx,0x9f6352ec
  403af0:	cwde   
  403af1:	sbb    DWORD PTR [ebx],ecx
  403af3:	loope  0x403aa1
  403af5:	dec    edi
  403af6:	add    al,BYTE PTR [ebx]
  403af8:	fisttp WORD PTR [edx]
  403afa:	(bad)  
  403afc:	sub    ecx,ecx
  403afe:	or     bl,cl
  403b00:	fcom   DWORD PTR [edx+0x78]
  403b03:	sbb    ch,bh
  403b05:	sub    esp,DWORD PTR [eax+ecx*8+0x55]
  403b09:	or     ebp,ebx
  403b0b:	outs   dx,DWORD PTR ds:[esi]
  403b0c:	sub    DWORD PTR [esi-0x48a68db1],ebx
  403b12:	mov    bl,bh
  403b14:	out    0x3c,eax
  403b16:	ins    DWORD PTR es:[edi],dx
  403b17:	ins    BYTE PTR es:[edi],dx
  403b18:	cmp    eax,0x707255c4
  403b1d:	mov    al,0x4c
  403b1f:	aam    0xf
  403b21:	pop    edi
  403b22:	hlt    
  403b23:	and    al,0xe5
  403b25:	xlat   BYTE PTR ds:[ebx]
  403b26:	shl    BYTE PTR [eax],cl
  403b28:	cdq    
  403b29:	mov    cs,WORD PTR [eax]
  403b2b:	inc    edi
  403b2c:	ror    BYTE PTR [ebx+0x58469ed3],1
  403b32:	sub    eax,0x8b63dc0e
  403b37:	idiv   ebx
  403b39:	imul   edi,DWORD PTR [ecx+0x660d4951],0x3d
  403b40:	pushf  
  403b41:	add    edi,DWORD PTR [eax]
  403b43:	rol    DWORD PTR [ecx],1
  403b45:	out    0xd,eax
  403b47:	inc    ecx
  403b48:	addr16 (bad) 
  403b4a:	xor    ecx,DWORD PTR [ebp+0x28]
  403b4d:	mov    esp,0x80eb7ae0
  403b52:	mov    ecx,0x8274249e
  403b57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b58:	pusha  
  403b59:	fs ins BYTE PTR es:[edi],dx
  403b5b:	jo     0x403b0c
  403b5d:	retf   0x1d05
  403b60:	dec    cl
  403b62:	xchg   esp,eax
  403b63:	ret    
  403b64:	into   
  403b65:	jne    0x403b51
  403b67:	xchg   edx,eax
  403b68:	pop    eax
  403b69:	lds    ebx,FWORD PTR [edi-0x142a4b2]
  403b6f:	and    al,0x18
  403b71:	mov    ch,0x8e
  403b73:	daa    
  403b74:	jmp    0x403b14
  403b76:	jmp    0x403b51
  403b78:	scas   al,BYTE PTR es:[edi]
  403b79:	stos   BYTE PTR es:[edi],al
  403b7a:	sbb    bl,BYTE PTR [esi+0x70]
  403b7d:	mov    eax,0x7d220749
  403b82:	push   ds
  403b83:	push   ss
  403b84:	xor    ah,BYTE PTR [ebp+0x1]
  403b87:	or     al,0xd2
  403b89:	cmp    eax,0x42133f90
  403b8e:	inc    ecx
  403b8f:	jb     0x403bd4
  403b91:	add    BYTE PTR [ecx],0x3f
  403b94:	rcl    BYTE PTR [edx+0x2627159],1
  403b9a:	loope  0x403bf3
  403b9c:	out    0x95,eax
  403b9e:	retf   
  403b9f:	jp     0x403b59
  403ba1:	inc    eax
  403ba2:	jmp    0xb2f7:0x81083f45
  403ba9:	fild   WORD PTR [ebx+ecx*2-0x43b9da64]
  403bb0:	stos   BYTE PTR es:[edi],al
  403bb1:	(bad)  
  403bb2:	pop    ds
  403bb3:	imul   ebx,DWORD PTR [eax],0xffffff8f
  403bb6:	repz sbb bl,BYTE PTR [ecx-0x72bd5a82]
  403bbd:	mov    esp,0xba14b8bd
  403bc2:	ins    DWORD PTR es:[edi],dx
  403bc3:	out    0xd6,eax
  403bc5:	int    0x35
  403bc7:	dec    ebp
  403bc8:	cmp    al,0xa
  403bca:	mov    edx,0xae2e37b
  403bcf:	mov    al,0x3e
  403bd1:	(bad)  [edx+0x606bf22e]
  403bd7:	inc    ebx
  403bd8:	pop    edx
  403bd9:	pop    ebp
  403bda:	ins    DWORD PTR es:[edi],dx
  403bdb:	ins    BYTE PTR es:[edi],dx
  403bdc:	adc    dl,BYTE PTR [eax+0x2d2cf91d]
  403be2:	and    al,0x9f
  403be4:	shl    BYTE PTR [ecx-0x5607fe18],0x25
  403beb:	(bad)  
  403bec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bed:	dec    dl
  403bef:	fsubr  DWORD PTR [edi]
  403bf1:	dec    edx
  403bf2:	gs ret 0x2538
  403bf6:	mov    esp,0x2f898e2d
  403bfb:	mov    WORD PTR [ecx],gs
  403bfd:	sbb    al,0x8a
  403bff:	in     al,0x8c
  403c01:	hlt    
  403c02:	or     cl,ah
  403c04:	xchg   BYTE PTR [edx+edi*4],dl
  403c07:	mov    ds:0xb279868a,al
  403c0c:	imul   BYTE PTR [ebp+0x6b0f26a5]
  403c12:	pop    ds
  403c13:	int    0x12
  403c15:	sbb    eax,0x62fe797d
  403c1a:	sub    eax,edi
  403c1c:	inc    ebp
  403c1d:	mov    esp,0xf89c85bc
  403c22:	mov    eax,DWORD PTR [ebp-0x38]
  403c25:	mov    edx,DWORD PTR [ebp-0x14]
  403c28:	xor    eax,esi
  403c2a:	add    eax,edi
  403c2c:	cmp    edx,eax
  403c2e:	je     0x40617c
  403c34:	mov    eax,DWORD PTR [ebp-0x20]
  403c37:	xor    eax,esi
  403c39:	mov    edx,0xffcd8d0b
  403c3e:	sub    edx,eax
  403c40:	add    edx,DWORD PTR [ebp-0x14]
  403c43:	mov    eax,DWORD PTR [ebp-0x20]
  403c46:	mov    ebx,DWORD PTR [ebp-0x10]
  403c49:	xor    eax,esi
  403c4b:	add    eax,edi
  403c4d:	imul   eax,ebx
  403c50:	cmp    eax,edx
  403c52:	ja     0x406179
  403c58:	mov    edx,DWORD PTR [ebp-0x10]
  403c5b:	mov    eax,DWORD PTR [ebp-0x14]
  403c5e:	mov    ebx,DWORD PTR [ebp-0x2c]
  403c61:	sub    eax,edx
  403c63:	xor    ebx,esi
  403c65:	xor    edx,edx
  403c67:	add    ebx,edi
  403c69:	div    ebx
  403c6b:	mov    DWORD PTR [ebp-0x8],eax
  403c6e:	mov    eax,DWORD PTR [ebp-0x44]
  403c71:	mov    edx,DWORD PTR [ebp-0x8]
  403c74:	xor    eax,esi
  403c76:	add    eax,edi
  403c78:	cmp    edx,eax
  403c7a:	jbe    0x403c8a
  403c80:	mov    eax,DWORD PTR [ebp-0x44]
  403c83:	xor    eax,esi
  403c85:	add    eax,edi
  403c87:	mov    DWORD PTR [ebp-0x8],eax
  403c8a:	mov    eax,DWORD PTR [ebp-0x2c]
  403c8d:	mov    edx,DWORD PTR [ebp-0x8]
  403c90:	xor    eax,esi
  403c92:	add    eax,edi
  403c94:	imul   eax,edx
  403c97:	mov    DWORD PTR [ebp-0x8],eax
  403c9a:	mov    eax,DWORD PTR [ebp-0x38]
  403c9d:	mov    edx,DWORD PTR [ebp-0x8]
  403ca0:	xor    eax,esi
  403ca2:	add    eax,edi
  403ca4:	cmp    edx,eax
  403ca6:	je     0x406162
  403cac:	mov    eax,DWORD PTR [ebp-0x8]
  403caf:	mov    DWORD PTR [ebp-0x18],eax
  403cb2:	mov    eax,DWORD PTR [ebp-0x10]
  403cb5:	add    eax,DWORD PTR [ebp-0x54]
  403cb8:	mov    DWORD PTR [ebp-0x1c],0xf89c85a5
  403cbf:	mov    DWORD PTR [ebp-0x8],eax
  403cc2:	mov    eax,0xf89c85a2
  403cc7:	mov    DWORD PTR [ebp-0x28],eax
  403cca:	mov    DWORD PTR [ebp-0x5c],0xf89c85a3
  403cd1:	mov    DWORD PTR [ebp-0x40],0xf89c85a0
  403cd8:	mov    DWORD PTR [ebp-0x30],eax
  403cdb:	mov    eax,DWORD PTR [ebp-0x1c]
  403cde:	xor    eax,esi
  403ce0:	add    eax,edi
  403ce2:	jmp    0x40611e
  403ce7:	mov    DWORD PTR [ebp-0x4c],0xf89c85b8
  403cee:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  403cf5:	mov    eax,DWORD PTR [ebp-0x30]
  403cf8:	mov    edx,DWORD PTR [ebp-0xc]
  403cfb:	xor    eax,esi
  403cfd:	add    eax,edi
  403cff:	imul   eax,edx
  403d02:	mov    edx,DWORD PTR [ebp-0x8]
  403d05:	mov    al,BYTE PTR [eax+edx*1]
  403d08:	mov    BYTE PTR [ebp-0x1],al
  403d0b:	mov    eax,DWORD PTR [ebp-0x30]
  403d0e:	mov    edx,DWORD PTR [ebp-0xc]
  403d11:	xor    eax,esi
  403d13:	add    eax,edi
  403d15:	imul   eax,edx
  403d18:	mov    edx,DWORD PTR [ebp-0x5c]
  403d1b:	xor    edx,esi
  403d1d:	add    eax,edx
  403d1f:	mov    edx,DWORD PTR [ebp-0x8]
  403d22:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f5]
  403d2a:	mov    edx,DWORD PTR [ebp-0x4c]
  403d2d:	xor    edx,esi
  403d2f:	lea    eax,[edx+eax*1+0x3272f5]
  403d36:	movzx  edx,BYTE PTR [ebp-0x1]
  403d3a:	xor    edx,eax
  403d3c:	mov    BYTE PTR [ebp-0x1],dl
  403d3f:	mov    al,BYTE PTR [ebp-0x1]
  403d42:	mov    edx,DWORD PTR [ebp-0x30]
  403d45:	mov    ebx,DWORD PTR [ebp-0xc]
  403d48:	xor    edx,esi
  403d4a:	add    edx,edi
  403d4c:	imul   edx,ebx
  403d4f:	mov    ebx,DWORD PTR [ebp-0x8]
  403d52:	mov    BYTE PTR [edx+ebx*1],al
  403d55:	mov    eax,DWORD PTR [ebp-0x30]
  403d58:	mov    edx,DWORD PTR [ebp-0xc]
  403d5b:	xor    eax,esi
  403d5d:	add    eax,edi
  403d5f:	imul   eax,edx
  403d62:	mov    edx,DWORD PTR [ebp-0x8]
  403d65:	mov    al,BYTE PTR [eax+edx*1]
  403d68:	mov    BYTE PTR [ebp-0x1],al
  403d6b:	mov    eax,DWORD PTR [ebp-0x30]
  403d6e:	mov    edx,DWORD PTR [ebp-0xc]
  403d71:	xor    eax,esi
  403d73:	add    eax,edi
  403d75:	imul   eax,edx
  403d78:	mov    edx,DWORD PTR [ebp-0x28]
  403d7b:	xor    edx,esi
  403d7d:	add    eax,edx
  403d7f:	mov    edx,DWORD PTR [ebp-0x8]
  403d82:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f5]
  403d8a:	mov    edx,DWORD PTR [ebp-0x50]
  403d8d:	xor    edx,esi
  403d8f:	lea    eax,[edx+eax*1+0x3272f5]
  403d96:	movzx  edx,BYTE PTR [ebp-0x1]
  403d9a:	xor    edx,eax
  403d9c:	mov    BYTE PTR [ebp-0x1],dl
  403d9f:	mov    al,BYTE PTR [ebp-0x1]
  403da2:	mov    edx,DWORD PTR [ebp-0x30]
  403da5:	mov    ebx,DWORD PTR [ebp-0xc]
  403da8:	xor    edx,esi
  403daa:	add    edx,edi
  403dac:	imul   edx,ebx
  403daf:	mov    ebx,DWORD PTR [ebp-0x8]
  403db2:	jmp    0x406107
  403db7:	dec    ebx
  403db8:	inc    eax
  403db9:	sub    eax,0xc4820296
  403dbe:	scas   al,BYTE PTR es:[edi]
  403dbf:	push   0x36dd8915
  403dc4:	loop   0x403d6a
  403dc6:	xchg   ecx,eax
  403dc7:	dec    ebx
  403dc8:	pop    esi
  403dc9:	add    DWORD PTR [ebx-0x7c7ca1b5],0x22
  403dd0:	adc    cl,0x1d
  403dd3:	mov    al,0xa7
  403dd5:	scas   al,BYTE PTR es:[edi]
  403dd6:	test   eax,0xb6c9b4d1
  403ddb:	inc    esi
  403ddc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ddd:	leave  
  403dde:	dec    eax
  403ddf:	out    dx,al
  403de0:	mov    esp,0xc2edb39b
  403de5:	sub    eax,0x91275135
  403dea:	retf   
  403deb:	call   DWORD PTR [edi-0x4cc262a5]
  403df1:	pushf  
  403df2:	inc    eax
  403df3:	pop    esi
  403df4:	jbe    0x403de3
  403df6:	repz jmp 0xdb41ddd
  403dfc:	les    eax,FWORD PTR [edx]
  403dfe:	mov    dh,0xc
  403e00:	sub    BYTE PTR [ecx+ebp*8],ah
  403e03:	mov    WORD PTR [edx+0x69],es
  403e06:	rcr    DWORD PTR [esi-0x3562931d],cl
  403e0c:	adc    al,0xba
  403e0e:	mov    bl,0x26
  403e10:	mov    esi,0x67d17aa0
  403e15:	loopne 0x403de3
  403e17:	test   eax,0xc387cf5c
  403e1c:	mov    es,WORD PTR [edx+0x39]
  403e1f:	xor    DWORD PTR [ecx+edi*1+0x1711aa3d],edx
  403e26:	dec    ecx
  403e27:	push   ecx
  403e28:	pusha  
  403e29:	gs sti 
  403e2b:	sub    DWORD PTR [ebp+0x29],0x79
  403e2f:	sub    ebx,DWORD PTR [eax]
  403e31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e32:	xchg   DWORD PTR ds:0x15e6a882,ebp
  403e38:	xchg   esp,eax
  403e39:	or     ebx,DWORD PTR [edx+0x4d56f829]
  403e3f:	xor    al,0x1a
  403e41:	cmp    edi,DWORD PTR [edx]
  403e43:	or     cl,ah
  403e45:	mov    eax,ds:0x24e4e8d5
  403e4a:	mov    ebp,0xd29cdf54
  403e4f:	lahf   
  403e50:	cmp    al,BYTE PTR [esi+0x45]
  403e53:	outs   dx,BYTE PTR ds:[esi]
  403e54:	mov    ebp,0xe36b389c
  403e59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e5a:	sub    BYTE PTR [eax],bl
  403e5c:	mov    esi,0x6733b745
  403e61:	sub    ebx,ebp
  403e63:	fwait
  403e64:	cmp    esp,DWORD PTR ds:0x3663d0d3
  403e6a:	cdq    
  403e6b:	pushaw 
  403e6d:	sub    DWORD PTR [ebx-0x7d91e9b9],edi
  403e73:	imul   ebx,DWORD PTR [ebp+0x68],0xffffffaf
  403e77:	xchg   esi,eax
  403e78:	cmp    BYTE PTR [ebx+0x58e9b35f],al
  403e7e:	stos   BYTE PTR es:[edi],al
  403e7f:	std    
  403e80:	pop    ds
  403e81:	and    BYTE PTR [eax-0x46],cl
  403e84:	ret    
  403e85:	iret   
  403e86:	int    0x3
  403e88:	dec    ecx
  403e89:	arpl   WORD PTR [ebp+0x58],cx
  403e8c:	dec    ebp
  403e8d:	add    eax,0xce38190b
  403e92:	dec    ecx
  403e93:	push   ss
  403e94:	mov    bl,0x27
  403e96:	pop    edi
  403e97:	xor    DWORD PTR [esi+0xccefc45],ebp
  403e9d:	push   0xd5706e34
  403ea2:	ret    0xd3a5
  403ea5:	test   esi,edx
  403ea7:	inc    ebx
  403ea8:	test   eax,0x6b42f2db
  403ead:	stc    
  403eae:	jl     0x403e5e
  403eb0:	dec    eax
  403eb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403eb2:	dec    esi
  403eb3:	fadd   DWORD PTR [edi+eax*2-0x70]
  403eb7:	mov    ch,0xf2
  403eb9:	sbb    dl,BYTE PTR [edi]
  403ebb:	arpl   bp,sp
  403ebd:	add    ebp,0xcda0fb6f
  403ec3:	div    BYTE PTR [eax+0x6b2a5e4e]
  403ec9:	les    edx,FWORD PTR [edi+0x31]
  403ecc:	push   eax
  403ecd:	idiv   BYTE PTR [eax+0x52517459]
  403ed3:	cmp    DWORD PTR [esi-0x25425dfd],edx
  403ed9:	(bad)  
  403eda:	sub    dh,BYTE PTR [ebx]
  403edc:	inc    ebx
  403edd:	dec    esi
  403ede:	or     BYTE PTR [edi+0x25],dl
  403ee1:	xchg   ecx,eax
  403ee2:	rol    DWORD PTR [ebx],0x71
  403ee5:	push   cs
  403ee6:	ret    0x36bf
  403ee9:	xchg   ecx,eax
  403eea:	(bad)  
  403eeb:	sti    
  403eec:	lds    ebx,FWORD PTR [eax]
  403eee:	pop    esi
  403eef:	stc    
  403ef0:	imul   ecx,DWORD PTR [eax],0xffffffa1
  403ef3:	sub    ebp,ecx
  403ef5:	and    cl,bh
  403ef7:	sub    ah,BYTE PTR [ebp+0x67d24f15]
  403efd:	mov    cl,0xa0
  403eff:	push   ss
  403f00:	(bad)  
  403f01:	push   ss
  403f02:	lods   al,BYTE PTR ds:[esi]
  403f03:	repz mov edx,edx
  403f06:	inc    esi
  403f07:	icebp  
  403f08:	mov    BYTE PTR [edi],0xb3
  403f0b:	add    DWORD PTR [esi-0x4bbcce4e],ebp
  403f11:	xchg   edi,eax
  403f12:	cld    
  403f13:	sbb    esi,DWORD PTR [ecx+0x3d]
  403f16:	or     edi,edi
  403f18:	pop    ds
  403f19:	cwde   
  403f1a:	into   
  403f1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f1c:	int3   
  403f1d:	ja     0x403ec9
  403f1f:	mov    WORD PTR [eax],fs
  403f21:	push   0x24
  403f23:	les    edx,FWORD PTR [eax-0x45]
  403f26:	test   BYTE PTR [edi],bl
  403f28:	sub    dl,BYTE PTR [edi+0x76]
  403f2b:	jo     0x403fa9
  403f2d:	mov    ds:0x62616e72,eax
  403f32:	mov    edx,0x27891fd2
  403f37:	scas   al,BYTE PTR es:[edi]
  403f38:	(bad)  
  403f39:	xlat   BYTE PTR ds:[ebx]
  403f3a:	mov    al,al
  403f3c:	dec    edx
  403f3d:	push   cs
  403f3e:	je     0x403f0a
  403f40:	inc    esp
  403f41:	mov    eax,0xbb020799
  403f46:	cli    
  403f47:	pop    edx
  403f48:	lock mov DWORD PTR [ebx-0x44d87db1],edx
  403f4f:	xchg   ecx,eax
  403f50:	(bad)  
  403f51:	pop    ebp
  403f52:	and    ebx,ebx
  403f54:	cwde   
  403f55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f56:	stos   BYTE PTR es:[edi],al
  403f57:	or     ebp,DWORD PTR [esi]
  403f59:	popf   
  403f5a:	out    0x60,al
  403f5c:	adc    edi,DWORD PTR [edx+edi*2+0x5f794bd4]
  403f63:	ret    0xa7f4
  403f66:	dec    esp
  403f67:	test   DWORD PTR [esi],eax
  403f69:	push   esi
  403f6a:	dec    DWORD PTR [ebx+0x5a]
  403f6d:	cmp    BYTE PTR [edi+0x566fab49],al
  403f73:	or     DWORD PTR [edx-0x30],edx
  403f76:	or     eax,0x6afd1e72
  403f7b:	ret    0xfb8
  403f7e:	arpl   dx,sp
  403f80:	mov    eax,0x30853ef1
  403f85:	push   esp
  403f86:	pop    ss
  403f87:	iret   
  403f88:	push   esi
  403f89:	fsub   QWORD PTR [esi]
  403f8b:	rcr    ah,cl
  403f8d:	cmp    al,0x38
  403f8f:	loope  0x403f2c
  403f91:	jbe    0x403fa6
  403f93:	or     DWORD PTR [eax],edx
  403f95:	cmc    
  403f96:	mov    WORD PTR [ebx],?
  403f98:	(bad)  
  403f99:	outs   dx,BYTE PTR ds:[esi]
  403f9a:	je     0x403f60
  403f9c:	fwait
  403f9d:	dec    ecx
  403f9e:	add    al,0x98
  403fa0:	xor    eax,0xc69b515d
  403fa5:	dec    ebp
  403fa6:	mov    esi,0xc5a81023
  403fab:	pop    ss
  403fac:	adc    al,0x13
  403fae:	int    0x20
  403fb0:	ds stos DWORD PTR es:[edi],eax
  403fb2:	aam    0x4e
  403fb4:	rol    eax,0xb0
  403fb7:	mov    ds:0xd8056f81,eax
  403fbc:	sub    bl,BYTE PTR [ebp+0x30]
  403fbf:	pop    ss
  403fc0:	dec    ebx
  403fc1:	gs int3 
  403fc3:	mov    ds:0xd9b25f66,al
  403fc8:	jb     0x404010
  403fca:	fld    TBYTE PTR [esi-0x109296aa]
  403fd0:	test   DWORD PTR [edx+0x6d],esp
  403fd3:	es into 
  403fd5:	inc    esp
  403fd6:	outs   dx,BYTE PTR ds:[esi]
  403fd7:	pusha  
  403fd8:	mov    cl,0xf7
  403fda:	sub    BYTE PTR [ecx+esi*1-0x3539c1d1],dh
  403fe1:	nop
  403fe2:	sub    BYTE PTR [ecx-0x53052484],0x25
  403fe9:	cld    
  403fea:	iret   
  403feb:	mov    ds:0x937d22f6,eax
  403ff0:	mov    ch,0x24
  403ff2:	jns    0x403fd3
  403ff4:	pop    edi
  403ff5:	push   ecx
  403ff6:	xor    DWORD PTR [edx],ebx
  403ff8:	mov    bl,0x80
  403ffa:	push   ss
  403ffb:	push   ebx
  403ffc:	pop    ecx
  403ffd:	adc    al,0x9c
  403fff:	add    ecx,DWORD PTR [edx-0x7288bbeb]
  404005:	xchg   edi,eax
  404006:	jge    0x403fb7
  404008:	dec    edx
  404009:	inc    eax
  40400a:	push   ebx
  40400b:	sahf   
  40400c:	and    edi,DWORD PTR es:[esi]
  40400f:	pusha  
  404010:	jmp    0x1d20:0xe4dc9800
  404017:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404018:	sub    eax,0xc8a37de1
  40401d:	fdiv   QWORD PTR [edi-0x32]
  404020:	nop
  404021:	mov    esi,edi
  404023:	sub    DWORD PTR [edi+ebp*8+0x30],ebx
  404027:	test   BYTE PTR [eax+0x7c],bl
  40402a:	or     ebp,DWORD PTR [eax+0x553d1bf9]
  404030:	iret   
  404031:	loopne 0x404065
  404033:	fcmove st,st(5)
  404035:	fadd   DWORD PTR [edx+0x63139f5c]
  40403b:	jbe    0x404096
  40403d:	xor    ah,BYTE PTR [ebx-0x4c]
  404040:	outs   dx,BYTE PTR ds:[esi]
  404041:	push   ds
  404042:	mov    al,0x77
  404044:	inc    esi
  404045:	loop   0x404028
  404047:	jo     0x404021
  404049:	pop    ecx
  40404a:	out    dx,al
  40404b:	jbe    0x404076
  40404d:	js     0x4040b0
  40404f:	bound  esi,QWORD PTR [eax]
  404051:	std    
  404052:	xor    ah,BYTE PTR [ebp+0x9f3b587]
  404058:	or     BYTE PTR ds:0x446bee10,0x4b
  40405f:	push   cs
  404060:	dec    ebx
  404061:	int    0xbb
  404063:	jecxz  0x403fee
  404065:	sub    edx,DWORD PTR [eax-0x44ecf818]
  40406b:	fidiv  WORD PTR [ebp+0x1e57f883]
  404071:	stos   DWORD PTR es:[edi],eax
  404072:	aas    
  404073:	repz and al,0x2d
  404076:	ja     0x4040d5
  404078:	into   
  404079:	retf   
  40407a:	jge    0x40401e
  40407c:	mov    BYTE PTR [ecx-0x45],bl
  40407f:	cmp    cl,BYTE PTR [ebx+0x33]
  404082:	sub    ecx,DWORD PTR [eax-0x7e]
  404085:	gs jbe 0x4040cd
  404088:	addr16 and eax,0x82ebf3de
  40408e:	push   eax
  40408f:	fdivr  st(4),st
  404091:	test   ch,ch
  404093:	xor    al,0xbd
  404095:	inc    edx
  404096:	push   ecx
  404097:	leave  
  404098:	ins    DWORD PTR es:[edi],dx
  404099:	add    al,BYTE PTR [edx-0x7bd24fea]
  40409f:	mov    dl,0x8c
  4040a1:	cmc    
  4040a2:	loope  0x40403e
  4040a4:	lahf   
  4040a5:	int3   
  4040a6:	(bad)
  4040a9:	stos   DWORD PTR es:[edi],eax
  4040aa:	sbb    esp,ecx
  4040ac:	mov    ah,0x6c
  4040ae:	inc    DWORD PTR [esi]
  4040b0:	sti    
  4040b1:	iret   
  4040b2:	lahf   
  4040b3:	shl    BYTE PTR [esi-0x920d6d7],cl
  4040b9:	cs in  eax,0xb
  4040bc:	repnz adc edi,DWORD PTR [ecx+0x5efec611]
  4040c3:	jnp    0x4040ec
  4040c5:	fs adc bl,0xe4
  4040c9:	jl     0x404112
  4040cb:	adc    al,0x81
  4040cd:	jle    0x404147
  4040cf:	idiv   DWORD PTR [ebx-0x17097622]
  4040d5:	add    edx,DWORD PTR [eax]
  4040d7:	ins    BYTE PTR es:[edi],dx
  4040d8:	dec    ebp
  4040d9:	mov    al,ds:0x2f3c20ca
  4040de:	push   ecx
  4040df:	push   esi
  4040e0:	lahf   
  4040e1:	into   
  4040e2:	dec    ebp
  4040e3:	outs   dx,BYTE PTR ds:[esi]
  4040e4:	jg     0x4040c8
  4040e6:	or     BYTE PTR [edi-0x40],bl
  4040e9:	test   BYTE PTR [eax+ebp*1],ah
  4040ec:	stos   BYTE PTR es:[edi],al
  4040ed:	and    al,0x8b
  4040ef:	(bad)  
  4040f0:	xlat   BYTE PTR ds:[ebx]
  4040f1:	add    BYTE PTR [ebx-0x40ee48a4],dl
  4040f7:	jae    0x404120
  4040f9:	xchg   ebx,eax
  4040fa:	cwde   
  4040fb:	push   edi
  4040fc:	jmp    0xc6855962
  404101:	pushf  
  404102:	sar    BYTE PTR [esp+eax*1+0x1e],0xb8
  404107:	dec    eax
  404108:	mov    eax,0x4f598946
  40410d:	fucomp st(2)
  40410f:	out    0x5c,al
  404111:	mov    ds:0xb5c9a59a,eax
  404116:	push   esp
  404117:	xchg   bl,bl
  404119:	dec    ebx
  40411a:	inc    esi
  40411b:	and    DWORD PTR [ebp-0x3b],edx
  40411e:	add    eax,0xae856aa3
  404123:	enter  0xf93c,0xa8
  404127:	shl    DWORD PTR [ebx+edi*8+0x5],0x62
  40412c:	mov    ebx,0x5a93fe59
  404131:	js     0x404165
  404133:	(bad)  
  404134:	inc    edx
  404135:	pop    eax
  404136:	not    ch
  404138:	loope  0x4041b3
  40413a:	inc    ebx
  40413b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40413c:	xchg   ebx,eax
  40413d:	push   0x66acea78
  404142:	xor    edi,esp
  404144:	call   0x5f71244d
  404149:	dec    edx
  40414a:	sbb    ebp,DWORD PTR [ecx-0x781319ff]
  404150:	mov    al,ds:0xeffbfdab
  404155:	repnz or eax,0x4df96c27
  40415b:	xchg   esp,eax
  40415c:	adc    ecx,ebx
  40415e:	dec    ebp
  40415f:	pop    edi
  404160:	sub    eax,0x6546fb20
  404165:	xor    ebx,edx
  404167:	aad    0x3
  404169:	repnz adc al,0x39
  40416c:	test   esp,0x8c3bce96
  404172:	sub    eax,0x34bb0dc5
  404177:	dec    eax
  404178:	call   0x7bfc:0x37060065
  40417f:	enter  0xf513,0xbd
  404183:	sub    esi,DWORD PTR [edx-0x5c3a8aca]
  404189:	push   esi
  40418a:	fs inc edi
  40418c:	loope  0x404203
  40418e:	jno    0x404114
  404190:	enter  0x33ef,0xbc
  404194:	add    al,BYTE PTR [bp-0x6]
  404198:	cs inc ecx
  40419a:	xor    BYTE PTR [edx+0x60],0xc7
  40419e:	dec    ebx
  40419f:	jo     0x404185
  4041a1:	jns    0x4041ce
  4041a3:	xlat   BYTE PTR ds:[ebx]
  4041a4:	xlat   BYTE PTR ds:[ebx]
  4041a5:	add    al,0xc3
  4041a7:	cmp    al,0x3d
  4041a9:	int3   
  4041aa:	push   0xffffffbc
  4041ac:	add    BYTE PTR [edx],0x7
  4041af:	push   0x4c2f3591
  4041b4:	sub    edi,ebp
  4041b6:	mov    ah,0x9c
  4041b8:	outs   dx,DWORD PTR ds:[esi]
  4041b9:	xchg   ebp,eax
  4041ba:	mov    al,0xf0
  4041bc:	inc    esi
  4041bd:	cmc    
  4041be:	or     DWORD PTR [ebp-0x7c3c5e9c],esp
  4041c4:	xor    dh,BYTE PTR [ecx]
  4041c6:	xlat   BYTE PTR ds:[ebx]
  4041c7:	sub    al,0x49
  4041c9:	or     esi,DWORD PTR [esi]
  4041cb:	dec    esi
  4041cc:	arpl   WORD PTR [ebx-0x2379ddf6],cx
  4041d2:	lea    esp,[eax]
  4041d4:	lods   al,BYTE PTR ds:[esi]
  4041d5:	test   DWORD PTR [edx-0x4c],ecx
  4041d8:	xchg   ebp,eax
  4041d9:	mov    cl,0xda
  4041db:	test   DWORD PTR [ebx],esp
  4041dd:	retf   
  4041de:	test   DWORD PTR ss:[ebx-0x7f],esi
  4041e2:	pop    eax
  4041e3:	dec    eax
  4041e4:	jmp    0x404193
  4041e6:	pop    eax
  4041e7:	mov    eax,ds:0x3055a679
  4041ec:	mov    ecx,0x852b4288
  4041f1:	push   es
  4041f2:	push   esi
  4041f3:	imul   esi,edi,0x71
  4041f6:	retf   
  4041f7:	or     ah,BYTE PTR [ebp+0x79cc361]
  4041fd:	into   
  4041fe:	cmc    
  4041ff:	mov    esp,0xb57d8ba7
  404204:	or     ecx,DWORD PTR [ebx-0x4e]
  404207:	mov    bh,0xe2
  404209:	xor    BYTE PTR [edi],0xda
  40420c:	pusha  
  40420d:	mov    cs,WORD PTR [edx+0x21e419a0]
  404213:	repz call 0x254c1c4
  404219:	push   edx
  40421a:	lds    ebp,FWORD PTR [edx]
  40421c:	sbb    eax,0xc7b6eef8
  404221:	add    eax,0x70daf52e
  404226:	xchg   ebp,eax
  404227:	dec    edi
  404228:	mov    ah,BYTE PTR [ecx+0x4]
  40422b:	mov    dl,0xb4
  40422d:	push   esi
  40422e:	or     eax,0x431b82d8
  404233:	popf   
  404234:	popf   
  404235:	jbe    0x40428e
  404237:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404238:	adc    BYTE PTR [edx-0x60d7bb5],0x57
  40423f:	and    edi,DWORD PTR [edx+0xca505f1]
  404245:	or     bl,BYTE PTR [ecx-0x6e627ff0]
  40424b:	pop    ebx
  40424c:	cld    
  40424d:	xchg   ecx,eax
  40424e:	outs   dx,DWORD PTR ds:[esi]
  40424f:	add    al,0xf1
  404251:	xor    BYTE PTR [esi-0xc],dl
  404254:	pop    ss
  404255:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404256:	aam    0x82
  404258:	adc    edi,DWORD PTR [esi-0xbf337bd]
  40425e:	or     DWORD PTR fs:[ebx+0x49db7e53],esi
  404265:	ror    dl,1
  404267:	fisubr WORD PTR [ebx-0x20]
  40426a:	sbb    eax,0xd07e6a20
  40426f:	fucomi st,st(3)
  404271:	inc    edx
  404272:	jno    0x4042cf
  404274:	fwait
  404275:	in     eax,dx
  404276:	in     eax,dx
  404277:	xchg   edi,eax
  404278:	dec    eax
  404279:	rol    DWORD PTR [ebp+0x38],0xd6
  40427d:	push   esi
  40427e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40427f:	or     DWORD PTR [edx+ebp*1-0x4fbf37d4],esi
  404286:	daa    
  404287:	fdiv   QWORD PTR [edi-0x444bb966]
  40428d:	dec    ecx
  40428e:	jl     0x40424b
  404290:	mov    gs,WORD PTR [ebx]
  404292:	xchg   ecx,eax
  404293:	jg     0x40425d
  404295:	sahf   
  404296:	xor    edi,DWORD PTR [eax+0x66]
  404299:	imul   ecx,esp,0x824af0a0
  40429f:	or     edx,esi
  4042a1:	or     dh,dh
  4042a3:	dec    esi
  4042a4:	pushf  
  4042a5:	and    al,0x74
  4042a7:	les    edx,FWORD PTR [ebp+0x41]
  4042aa:	dec    ecx
  4042ab:	mov    ah,0xf2
  4042ad:	add    DWORD PTR [ebx+eiz*4],edx
  4042b0:	cmp    DWORD PTR [eax+0x54bfb2c],edi
  4042b6:	mov    ah,0x6d
  4042b8:	test   BYTE PTR [edx-0x917f1c4],bh
  4042be:	dec    ebx
  4042bf:	outs   dx,BYTE PTR ds:[esi]
  4042c0:	mov    dh,BYTE PTR [eax-0x2b]
  4042c3:	dec    esp
  4042c4:	in     eax,0xe0
  4042c6:	pop    ss
  4042c7:	jmp    0x40433f
  4042c9:	out    0x19,al
  4042cb:	fs adc esi,ebp
  4042ce:	stos   DWORD PTR es:[edi],eax
  4042cf:	mov    DWORD PTR [esi-0x3a],ebx
  4042d2:	leave  
  4042d3:	pop    ds
  4042d4:	into   
  4042d5:	jae    0x404280
  4042d7:	repz or eax,0x9e15cf37
  4042dd:	(bad)
  4042e0:	loop   0x4042c8
  4042e2:	shl    BYTE PTR [esi],0x19
  4042e5:	shl    BYTE PTR [edi-0x5e046049],cl
  4042eb:	jp     0x404357
  4042ed:	out    0x8e,al
  4042ef:	add    al,0xb9
  4042f1:	imul   esi,edx,0x7b5eb64e
  4042f7:	shl    esp,0x1e
  4042fa:	stos   BYTE PTR es:[edi],al
  4042fb:	push   ebp
  4042fc:	out    0xc0,eax
  4042fe:	fstp   QWORD PTR [ebx+edi*4+0x7fccbda6]
  404305:	test   eax,0xad78aa2d
  40430a:	lea    esi,[edx-0x52]
  40430d:	xor    eax,0x513c6d9c
  404312:	fmul   DWORD PTR [ebx+0x52c5f2ca]
  404318:	inc    esp
  404319:	add    al,0x50
  40431b:	jmp    0x4cab:0x396c629b
  404322:	ins    DWORD PTR es:[edi],dx
  404323:	dec    edi
  404324:	sbb    ch,cl
  404326:	sar    BYTE PTR [ebx+ebx*1+0x3d],1
  40432a:	stc    
  40432b:	pusha  
  40432c:	dec    esi
  40432d:	jg     0x404383
  40432f:	adc    DWORD PTR [edi+0x2dd9d2fa],0xca0534
  404339:	(bad)  
  40433a:	dec    ebp
  40433b:	pop    edi
  40433c:	or     bl,BYTE PTR [edx]
  40433e:	sbb    eax,0xe74e0471
  404343:	scas   eax,DWORD PTR es:[edi]
  404344:	or     DWORD PTR [ecx-0x42479566],esp
  40434a:	lea    edx,[ecx]
  40434c:	add    al,0xbb
  40434e:	aam    0x5c
  404350:	adc    cl,0x40
  404353:	or     eax,0xaab9fcca
  404358:	sbb    ecx,DWORD PTR [ebp+0x77673d41]
  40435e:	loopne 0x4042f1
  404360:	stos   BYTE PTR es:[edi],al
  404361:	leave  
  404362:	sbb    esp,DWORD PTR [edx+0x34b14b31]
  404368:	loop   0x4043aa
  40436a:	xchg   edx,eax
  40436b:	jge    0x40432a
  40436d:	not    DWORD PTR [edi-0xa0aecc4]
  404373:	cs inc esp
  404375:	outs   dx,BYTE PTR ds:[esi]
  404376:	xor    al,0xfc
  404378:	pop    ss
  404379:	stc    
  40437a:	cmp    BYTE PTR [esi],cl
  40437c:	ins    BYTE PTR es:[edi],dx
  40437d:	mov    ah,BYTE PTR [ebp+0x6a]
  404380:	and    dl,ah
  404382:	(bad)  
  404384:	out    dx,eax
  404385:	inc    esi
  404386:	adc    bh,BYTE PTR [ebp-0x26151934]
  40438c:	ror    DWORD PTR [esi+0x30],0x8c
  404390:	cmc    
  404391:	jbe    0x4043e9
  404393:	lahf   
  404394:	lods   eax,DWORD PTR ds:[esi]
  404395:	mov    al,ds:0xfcf8e2d5
  40439a:	fidivr WORD PTR [ebp-0x31]
  40439d:	jp     0x4043ce
  40439f:	cmp    BYTE PTR [edx-0x11],ch
  4043a2:	outs   dx,DWORD PTR ds:[esi]
  4043a3:	xchg   esp,eax
  4043a4:	cwde   
  4043a5:	jecxz  0x4043fb
  4043a7:	(bad)
  4043aa:	cdq    
  4043ab:	imul   esp,esp,0xffffffa5
  4043ae:	jle    0x40440e
  4043b0:	inc    ebx
  4043b1:	pop    eax
  4043b2:	inc    edx
  4043b3:	pop    ss
  4043b4:	popf   
  4043b5:	inc    edx
  4043b6:	pushf  
  4043b7:	mov    cl,BYTE PTR [ecx-0x21]
  4043ba:	scas   al,BYTE PTR es:[edi]
  4043bb:	stc    
  4043bc:	clc    
  4043bd:	sub    eax,0x25bc74b
  4043c2:	adc    ch,BYTE PTR [edx+0x57]
  4043c5:	mov    ?,esi
  4043c7:	aam    0xba
  4043c9:	bound  ebx,QWORD PTR [eax-0x61eb6675]
  4043cf:	mov    edx,0x8cfd585d
  4043d4:	xchg   DWORD PTR [ebx],esi
  4043d6:	jmp    0x404425
  4043d8:	xor    ah,BYTE PTR [esi-0x66]
  4043db:	imul   esp,DWORD PTR [esi+eax*4+0x78],0x4c
  4043e0:	retf   0x10cd
  4043e3:	(bad)  
  4043e5:	add    ch,BYTE PTR ss:[ebx+0x2d3a4e12]
  4043ec:	and    dl,BYTE PTR [eax+0xff5d118]
  4043f2:	jbe    0x404416
  4043f4:	push   0x32
  4043f6:	lods   al,BYTE PTR ds:[esi]
  4043f7:	aaa    
  4043f8:	sub    ah,BYTE PTR [ebx+esi*4+0x36]
  4043fc:	push   ss
  4043fd:	adc    ebp,DWORD PTR [ebx-0xd]
  404400:	mov    ch,0xf5
  404402:	(bad)  
  404404:	push   0x82594e16
  404409:	outs   dx,BYTE PTR ds:[esi]
  40440a:	pop    ebx
  40440b:	mov    bl,BYTE PTR [esi-0x7f3fa13]
  404411:	jno    0x40440e
  404413:	add    al,0x5c
  404416:	sahf   
  404417:	(bad)  
  404418:	push   ebp
  404419:	fwait
  40441a:	mov    ah,0xd5
  40441c:	setb   BYTE PTR [edx+0x750df9ea]
  404423:	int    0xbb
  404425:	mov    fs,WORD PTR cs:[edi+0x52]
  404429:	call   0x2262:0x4a345e47
  404430:	jae    0x4043b9
  404432:	mov    eax,0x60f4b459
  404437:	adc    eax,0xafd9a6bd
  40443c:	mov    ecx,0x5c17020b
  404441:	cld    
  404442:	popa   
  404443:	xor    ah,bl
  404445:	and    eax,0x19b4765c
  40444a:	lds    edi,FWORD PTR [edi+0x2e]
  40444d:	xchg   ecx,eax
  40444e:	aas    
  40444f:	das    
  404450:	xchg   esp,eax
  404451:	daa    
  404452:	cmp    eax,0x546fd332
  404457:	mov    bh,0x94
  404459:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40445a:	jae    0x4044ce
  40445c:	sbb    esp,DWORD PTR [ebx+0x3c]
  40445f:	inc    esi
  404460:	mov    ebx,0xff388797
  404465:	push   ds
  404466:	cli    
  404467:	test   eax,0x6678802d
  40446c:	inc    ebp
  40446d:	das    
  40446e:	add    ch,BYTE PTR ds:0xcbaae82f
  404474:	xor    ch,BYTE PTR [esi]
  404476:	lahf   
  404477:	inc    edx
  404478:	leave  
  404479:	sbb    bh,BYTE PTR [esi-0x560c3a2f]
  40447f:	gs scas eax,DWORD PTR es:[edi]
  404481:	pusha  
  404482:	std    
  404483:	mov    eax,0xb3364d44
  404488:	inc    ecx
  404489:	mov    bl,ch
  40448b:	mov    edi,0x68610fb
  404490:	stos   BYTE PTR es:[edi],al
  404491:	stos   DWORD PTR es:[edi],eax
  404492:	ror    DWORD PTR [ebx+eax*8-0x2f81f279],cl
  404499:	cdq    
  40449a:	out    dx,eax
  40449b:	fdivr  DWORD PTR [edx+0x6bbbe3c7]
  4044a1:	sbb    dh,BYTE PTR [eax-0x4a]
  4044a4:	add    BYTE PTR [ebx-0x79],ah
  4044a7:	scas   eax,DWORD PTR es:[edi]
  4044a8:	mov    dh,0x43
  4044aa:	mov    ds:0x16d969c7,eax
  4044af:	shr    DWORD PTR [esi-0x67],1
  4044b2:	mov    WORD PTR [eax-0x47cbb3d],es
  4044b8:	cmc    
  4044b9:	cmp    eax,0x99f0b20a
  4044be:	loope  0x404504
  4044c0:	(bad)  
  4044c1:	jle    0x404444
  4044c3:	xchg   ecx,eax
  4044c4:	sub    eax,0x4b7345b0
  4044c9:	add    dh,dl
  4044cb:	outs   dx,BYTE PTR ds:[esi]
  4044cc:	jne    0x404494
  4044ce:	lds    ecx,FWORD PTR [esi-0x43]
  4044d1:	add    ebp,DWORD PTR [edi+0x59]
  4044d4:	jecxz  0x40449e
  4044d6:	arpl   WORD PTR ds:0x18c84689,bp
  4044dc:	mov    eax,ds:0xceef52d0
  4044e1:	loop   0x404539
  4044e3:	out    0xda,al
  4044e5:	out    dx,al
  4044e6:	mov    dh,0xa
  4044e8:	pop    esp
  4044e9:	sbb    BYTE PTR [eax-0x47975a6],bh
  4044ef:	sbb    eax,0x1190f7ab
  4044f4:	ror    ch,1
  4044f6:	inc    ebx
  4044f7:	(bad)  
  4044f8:	call   0xdf95267e
  4044fd:	pop    ecx
  4044fe:	mov    ds:0x816d3ca3,eax
  404503:	nop
  404504:	fs dec esi
  404506:	ins    BYTE PTR es:[edi],dx
  404507:	arpl   WORD PTR [eax-0x70],ax
  40450a:	and    eax,0x513eaea2
  40450f:	les    edi,FWORD PTR [edx+0x28ec8cf8]
  404515:	xchg   esp,eax
  404516:	data16 sub bh,BYTE PTR [eax-0x2]
  40451a:	jne    0x4044c4
  40451c:	lea    esi,[eax-0x5a]
  40451f:	pop    edx
  404520:	cli    
  404521:	ror    BYTE PTR [di],0x38
  404525:	xchg   ecx,eax
  404526:	cmp    BYTE PTR [ebx],bh
  404528:	sub    esi,DWORD PTR [edi+0x40985a49]
  40452e:	fld    TBYTE PTR [esi+0x16e3e93]
  404534:	xor    bh,bh
  404536:	gs lahf 
  404538:	ss xor eax,0xb198bbe
  40453e:	imul   ebp,DWORD PTR [edi+0x43],0xfc16beed
  404545:	cmp    DWORD PTR [eax+0x5c6b9130],esi
  40454b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40454c:	sti    
  40454d:	je     0x404582
  40454f:	pop    ebx
  404550:	(bad)  
  404551:	and    ch,ah
  404553:	push   0xffffffa5
  404555:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404556:	and    ecx,edx
  404558:	mov    dl,BYTE PTR [ebx]
  40455a:	cmp    eax,0xa50056b6
  40455f:	test   al,0xf4
  404561:	in     al,0x63
  404563:	mov    BYTE PTR [ebx+eiz*8],al
  404566:	scas   al,BYTE PTR es:[edi]
  404567:	dec    esi
  404568:	pop    edi
  404569:	sub    esi,DWORD PTR [edi]
  40456b:	arpl   WORD PTR [ecx-0x2af4c07f],bx
  404571:	test   dh,dh
  404573:	and    al,0x40
  404575:	aad    0xe0
  404577:	mov    ?,edi
  404579:	inc    esi
  40457a:	add    BYTE PTR [eax+eiz*2],ah
  40457d:	xor    bl,al
  40457f:	jo     0x40456f
  404581:	and    al,0xbb
  404583:	xchg   esi,eax
  404584:	inc    ecx
  404585:	pop    ss
  404586:	push   ebx
  404587:	in     eax,dx
  404588:	push   edi
  404589:	das    
  40458a:	(bad)  
  40458c:	mov    edi,0xd3de245c
  404591:	jmp    0xae1e:0xb45d4ce
  404598:	xor    DWORD PTR [ecx+0x44],edi
  40459b:	mov    ch,0xac
  40459d:	xchg   ebp,eax
  40459e:	dec    ebp
  40459f:	push   edi
  4045a0:	mov    esp,0xf4f9fcb0
  4045a5:	imul   ebx,ebx,0x20e32d77
  4045ab:	lea    edx,[eax]
  4045ad:	ins    BYTE PTR es:[edi],dx
  4045ae:	int    0x49
  4045b0:	jle    0x4045cd
  4045b2:	sub    cl,BYTE PTR [edx+edx*1+0x696404b5]
  4045b9:	pop    ecx
  4045ba:	mov    BYTE PTR [eax-0x1],cl
  4045bd:	adc    dh,BYTE PTR [edi-0x3e]
  4045c0:	scas   eax,DWORD PTR es:[edi]
  4045c1:	inc    ecx
  4045c2:	and    esp,DWORD PTR [esi]
  4045c4:	imul   esi,DWORD PTR [ebp+0x33],0xffffffa7
  4045c8:	scas   eax,DWORD PTR es:[edi]
  4045c9:	lods   al,BYTE PTR ds:[esi]
  4045ca:	push   ds
  4045cb:	shr    DWORD PTR [ebp+eiz*4+0x857aaa5],cl
  4045d2:	gs jb  0x404632
  4045d5:	fs pop esp
  4045d7:	sub    al,0xa3
  4045d9:	rol    esi,1
  4045db:	in     al,0x6a
  4045dd:	and    ah,BYTE PTR [esi]
  4045df:	dec    ebx
  4045e0:	daa    
  4045e1:	xor    cl,BYTE PTR [esi-0x74]
  4045e4:	jns    0x40465b
  4045e6:	xor    ch,dh
  4045e8:	mov    ecx,0xa7abb78a
  4045ed:	push   esp
  4045ef:	add    eax,0xa986128e
  4045f4:	xchg   BYTE PTR [eax-0x3],dl
  4045f7:	fsubr  QWORD PTR [ebp+ebp*4+0x3b]
  4045fb:	mov    ds:0x7b03e433,al
  404600:	push   ds
  404601:	sub    DWORD PTR [edx-0x1d],esi
  404604:	mov    ebp,0x953f62a0
  404609:	clc    
  40460a:	fs pop es
  40460c:	cmp    al,0xcc
  40460e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40460f:	add    al,0x3f
  404611:	clc    
  404612:	ss jb  0x40462e
  404615:	push   0xf4d11cc
  40461a:	inc    esp
  40461b:	adc    DWORD PTR [ebx+edi*8+0x61],0xa0bc4c28
  404623:	mov    esi,0x68d93d6f
  404628:	popf   
  404629:	xchg   ecx,eax
  40462a:	shr    bl,cl
  40462c:	popa   
  40462d:	addr16 pop edi
  40462f:	into   
  404630:	adc    edx,DWORD PTR [ecx+0x12]
  404633:	mov    WORD PTR [esi],?
  404635:	dec    ebp
  404636:	add    DWORD PTR [esi],eax
  404638:	mov    ebx,0x28f79e23
  40463d:	sub    DWORD PTR [edx+0x66],ecx
  404640:	and    cl,bh
  404642:	mov    esi,0x9d511ac0
  404647:	adc    cl,BYTE PTR [esi]
  404649:	test   al,0x83
  40464b:	add    BYTE PTR [ebx-0x5d4a15af],cl
  404651:	into   
  404652:	push   ebx
  404653:	push   es
  404654:	ja     0x4046c4
  404656:	sbb    BYTE PTR [edx+0x44],bl
  404659:	adc    al,0x84
  40465b:	add    eax,0xeaed97f9
  404660:	jecxz  0x40460e
  404662:	mov    dh,0x6a
  404664:	fidiv  WORD PTR [ecx]
  404666:	aas    
  404667:	aad    0x68
  404669:	mov    bh,0xad
  40466b:	xchg   esi,eax
  40466c:	mov    ch,0x13
  40466e:	inc    BYTE PTR [ebx+0x47]
  404671:	cli    
  404672:	jno    0x4046e2
  404674:	rcr    dl,1
  404676:	inc    ebx
  404677:	push   ecx
  404678:	imul   esp,ebx,0xfffffff6
  40467b:	cwde   
  40467c:	xlat   BYTE PTR ds:[ebx]
  40467d:	inc    edx
  40467e:	cmp    dl,al
  404680:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404681:	inc    esi
  404682:	sbb    ebp,DWORD PTR [ecx+0x3218d603]
  404688:	ror    BYTE PTR [ebp+0x52],0xbf
  40468c:	sbb    esp,DWORD PTR [ecx]
  40468e:	ret    0x9470
  404691:	fs lahf 
  404693:	sub    bl,bl
  404695:	pop    ebp
  404696:	pop    esp
  404697:	into   
  404698:	mov    al,ds:0x83b794d7
  40469d:	add    eax,0xa7d85d7a
  4046a2:	outs   dx,DWORD PTR ds:[esi]
  4046a3:	cmp    al,0xd3
  4046a5:	dec    esi
  4046a6:	data16 jb 0x404709
  4046a9:	test   eax,0xbb8a7bf2
  4046ae:	(bad)  
  4046b0:	push   eax
  4046b1:	dec    edx
  4046b2:	mov    edi,0x79252972
  4046b7:	jmp    0x8249:0x747c25
  4046be:	ins    DWORD PTR es:[edi],dx
  4046bf:	int3   
  4046c0:	sbb    DWORD PTR [edi-0x3ece8df1],ecx
  4046c6:	adc    bl,BYTE PTR [eax+ecx*4]
  4046c9:	test   DWORD PTR [ebp-0x29faf5a2],0x8380f0fb
  4046d3:	adc    esp,DWORD PTR [ebx+0x708a9358]
  4046d9:	sub    dh,BYTE PTR [ebp-0x44a66fa]
  4046df:	push   eax
  4046e0:	aad    0xe3
  4046e2:	mov    eax,ds:0x7c7212be
  4046e7:	enter  0xe598,0xdf
  4046eb:	rcr    DWORD PTR [eax+0x308c3597],cl
  4046f1:	mov    eax,ds:0x83024338
  4046f6:	sub    DWORD PTR [edi+0x3c153f2b],ebx
  4046fc:	xchg   ebp,eax
  4046fd:	mov    WORD PTR [ecx-0x2c179685],ds
  404703:	sub    ebx,DWORD PTR [ebp+0x22]
  404706:	es ret 
  404708:	loopne 0x4046e1
  40470a:	add    al,0xc6
  40470c:	mov    esp,0xb1472b41
  404711:	mov    ebp,0xcfc215b7
  404716:	mov    ecx,0x62563089
  40471b:	pop    eax
  40471c:	leave  
  40471d:	jbe    0x404721
  40471f:	ds adc al,0x77
  404722:	push   ds
  404723:	fmul   QWORD PTR [esp+edx*2]
  404726:	leave  
  404727:	pop    ds
  404728:	push   esi
  404729:	xlat   BYTE PTR ds:[ebx]
  40472a:	ror    DWORD PTR fs:[esi+0x56],1
  40472e:	sbb    al,0xc1
  404730:	or     DWORD PTR [esi-0x1d],ecx
  404733:	pop    ebp
  404734:	xor    ch,BYTE PTR [esi+ebp*4]
  404737:	(bad)  
  404738:	(bad)  
  40473a:	into   
  40473b:	popf   
  40473c:	inc    eax
  40473d:	retf   0xd5c2
  404740:	push   eax
  404741:	sbb    ah,ch
  404743:	sbb    eax,0xfb0554a4
  404748:	push   0x26d18d3e
  40474d:	pop    ss
  40474e:	aam    0xf8
  404750:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404751:	push   esi
  404752:	sub    DWORD PTR es:[esi],ebx
  404755:	js     0x4046f6
  404757:	popf   
  404758:	mov    ds:0x68baa73e,al
  40475d:	pop    ebx
  40475e:	cmp    DWORD PTR [edi],0xffffffbc
  404761:	inc    edx
  404762:	sbb    eax,0x7038e05c
  404767:	mov    bh,0x15
  404769:	dec    edx
  40476a:	pop    ebp
  40476b:	jns    0x4047e4
  40476d:	dec    edi
  40476e:	popa   
  40476f:	mov    al,0xc1
  404771:	mov    dh,0x87
  404773:	pop    ds
  404774:	icebp  
  404775:	arpl   WORD PTR fs:[eax-0x2bbd223c],sp
  40477c:	sbb    al,0xde
  40477e:	ds inc ebx
  404780:	mov    edx,0xb0c7b4e4
  404785:	xchg   edi,eax
  404786:	daa    
  404787:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404788:	add    ebp,ebp
  40478a:	stos   BYTE PTR es:[edi],al
  40478b:	push   esp
  40478c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40478d:	add    bl,dl
  40478f:	xor    DWORD PTR [ecx+0x454bf395],esp
  404795:	mov    dl,0xe8
  404797:	dec    esp
  404798:	xchg   DWORD PTR [ebx],esi
  40479a:	div    DWORD PTR [edx]
  40479c:	or     edx,ebx
  40479e:	jecxz  0x404737
  4047a0:	stc    
  4047a1:	fidiv  DWORD PTR [ebx-0x32]
  4047a4:	pop    ds
  4047a5:	test   DWORD PTR [ecx-0x7c],esp
  4047a8:	jns    0x40480c
  4047aa:	and    al,0x2b
  4047ac:	xchg   edx,eax
  4047ad:	push   ss
  4047ae:	(bad)  
  4047af:	fild   DWORD PTR [edx+0x36e7b040]
  4047b5:	inc    esp
  4047b6:	iret   
  4047b7:	mov    ds:0xc7eb21b3,eax
  4047bc:	or     al,0x11
  4047bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047c0:	mov    esp,0xb5a1f2aa
  4047c5:	(bad)
  4047c9:	sub    eax,0xaa434aae
  4047ce:	pop    ds
  4047cf:	jmp    0x64d8:0xd1b75df8
  4047d6:	and    edi,DWORD PTR ds:0xca860514
  4047dc:	sub    edx,0x1e
  4047df:	jo     0x4047af
  4047e1:	adc    ah,ah
  4047e3:	fmul   st(1),st
  4047e5:	pop    ds
  4047e6:	xchg   DWORD PTR [ecx-0x4e56f5ba],ecx
  4047ec:	fiadd  WORD PTR [ebx]
  4047ee:	test   esi,edx
  4047f0:	cmp    DWORD PTR ds:[edi+0x5d],ebp
  4047f4:	aaa    
  4047f5:	into   
  4047f6:	sahf   
  4047f7:	adc    edi,DWORD PTR [ebp-0x23]
  4047fa:	push   es
  4047fb:	xor    ecx,ebp
  4047fd:	adc    DWORD PTR [ecx+0xa23ef6],esi
  404803:	pop    esi
  404804:	enter  0x5383,0x99
  404808:	mov    eax,0x44114778
  40480d:	cmp    DWORD PTR [esp+edi*1],esi
  404810:	pop    ecx
  404811:	xchg   DWORD PTR [edx+ebx*8-0x9],edx
  404815:	imul   ebx,DWORD PTR [ebx+eax*1+0x5c],0x67ce36eb
  40481d:	or     eax,0x90e52d53
  404822:	mov    cl,bh
  404824:	adc    ch,BYTE PTR [ebp-0x5c1e3936]
  40482a:	cld    
  40482b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40482c:	stos   BYTE PTR es:[edi],al
  40482d:	into   
  40482e:	ja     0x40489a
  404830:	pop    esi
  404831:	jmp    0x404888
  404833:	bound  esi,QWORD PTR [eax]
  404835:	arpl   WORD PTR [ebp+0x75019cd9],di
  40483b:	mov    dl,0xfa
  40483d:	aaa    
  40483e:	sub    dh,BYTE PTR [ebp-0x2f1ed7e8]
  404844:	lock dec edx
  404846:	push   0xf77fa86c
  40484b:	out    dx,eax
  40484c:	enter  0x20d2,0xec
  404850:	pushf  
  404851:	std    
  404852:	or     al,0xb5
  404854:	mov    bh,0xc7
  404856:	fisub  DWORD PTR [edx]
  404858:	scas   al,BYTE PTR es:[edi]
  404859:	jae    0x40487b
  40485b:	dec    ecx
  40485c:	mov    ebx,ebp
  40485e:	mov    ds:0x57a9dab3,al
  404863:	fcomp  QWORD PTR [ebp-0x15]
  404866:	lods   al,BYTE PTR ds:[esi]
  404867:	xchg   ecx,eax
  404868:	leave  
  404869:	mov    ch,0xd7
  40486b:	dec    eax
  40486c:	loop   0x40488b
  40486e:	dec    ebx
  40486f:	test   BYTE PTR [edx],ch
  404871:	push   edx
  404872:	fwait
  404873:	inc    esp
  404874:	jp     0x404860
  404876:	dec    esp
  404877:	fdivr  QWORD PTR [eax-0x7e]
  40487a:	add    al,0xd4
  40487c:	xor    BYTE PTR [edi],bl
  40487e:	push   ebx
  40487f:	mov    ds:0xbe62d5ff,al
  404884:	dec    esi
  404885:	in     al,dx
  404886:	adc    DWORD PTR [ecx-0x5a],0x5b
  40488a:	adc    cl,BYTE PTR [edx]
  40488c:	mov    al,0xd0
  40488e:	(bad)  
  40488f:	aad    0xf
  404891:	or     eax,0xaea966e6
  404896:	mov    eax,0xf865d7a
  40489b:	std    
  40489c:	sub    al,0x6b
  40489e:	sbb    ebp,ebx
  4048a0:	in     eax,dx
  4048a1:	push   ebp
  4048a2:	xor    ecx,DWORD PTR ds:0xd649389f
  4048a8:	inc    ecx
  4048a9:	jecxz  0x404853
  4048ab:	xchg   BYTE PTR [esi],ch
  4048ad:	icebp  
  4048ae:	loop   0x40492a
  4048b0:	sti    
  4048b1:	mov    al,0xb5
  4048b3:	sbb    BYTE PTR [esi-0x6a],al
  4048b6:	loope  0x40489c
  4048b8:	ret    0x3854
  4048bb:	add    eax,0x609a9775
  4048c0:	cmp    BYTE PTR [edx+0x7b],0x7b
  4048c4:	mov    esp,0xa97a6539
  4048c9:	stc    
  4048ca:	aas    
  4048cb:	pop    ss
  4048cc:	in     al,0x46
  4048ce:	mov    ah,0xd
  4048d0:	mov    esi,0xc4845154
  4048d5:	or     BYTE PTR [ebx-0x5655beff],dl
  4048db:	ret    0x290a
  4048de:	push   ss
  4048df:	jg     0x404908
  4048e1:	pusha  
  4048e2:	fprem1 
  4048e4:	fdiv   QWORD PTR [ebx+0x74]
  4048e7:	retf   
  4048e8:	sub    edx,DWORD PTR [ecx+0x3d58ed65]
  4048ee:	cs mov edi,0x8e5ef987
  4048f4:	out    dx,al
  4048f5:	push   ebp
  4048f6:	fdiv   DWORD PTR [eax]
  4048f8:	ds or  ebp,esi
  4048fb:	and    al,0xf0
  4048fd:	or     eax,0x4a26078f
  404902:	jmp    0x3439:0x7a8a2e38
  404909:	fst    QWORD PTR [ecx-0x77bcffb4]
  40490f:	jle    0x4048dc
  404911:	icebp  
  404912:	popf   
  404913:	cwde   
  404914:	mov    ah,0x6f
  404916:	adc    cl,ah
  404918:	mov    eax,0x50f313e3
  40491d:	jg     0x404944
  40491f:	(bad)  
  404920:	in     al,0x82
  404922:	or     esi,eax
  404924:	outs   dx,DWORD PTR ds:[esi]
  404925:	outs   dx,BYTE PTR ds:[esi]
  404926:	sub    ch,0x87
  404929:	adc    ch,BYTE PTR [edi-0x5c]
  40492c:	jns    0x40495b
  40492e:	mov    ebp,0x58a8883
  404933:	dec    edi
  404934:	aas    
  404935:	or     dl,BYTE PTR [ebp-0x5e169114]
  40493b:	fwait
  40493c:	popa   
  40493d:	xor    eax,0x58172e6a
  404942:	mulps  xmm6,XMMWORD PTR [esi+esi*4+0x3f71bf7a]
  40494a:	sub    al,0x36
  40494c:	stos   BYTE PTR es:[edi],al
  40494d:	popf   
  40494e:	and    al,0x20
  404950:	(bad)  
  404951:	mov    cl,0x5b
  404953:	loope  0x40491d
  404955:	cli    
  404956:	fstp   QWORD PTR [edx+eiz*4+0x78]
  40495a:	test   dh,ah
  40495c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40495d:	cs jnp 0x404986
  404960:	mov    esi,0xbf2ce398
  404965:	(bad)  
  404966:	xlat   BYTE PTR ds:[ebx]
  404967:	sahf   
  404968:	shr    esp,0x3c
  40496b:	mov    ecx,0x2edab54d
  404970:	loopne 0x404968
  404972:	out    0xf5,al
  404974:	imul   edi,DWORD PTR ds:0xa73cf861,0xffffff85
  40497b:	imul   ebp,DWORD PTR [esp],0x28
  40497f:	hlt    
  404980:	ret    0x7422
  404983:	cli    
  404984:	fld    QWORD PTR [esi+0x5f]
  404987:	std    
  404988:	jge    0x4049ad
  40498a:	in     eax,dx
  40498b:	pushw  ss
  40498d:	jnp    0x404a08
  40498f:	or     al,0xc0
  404991:	shl    BYTE PTR [esp+edi*4+0x71267549],cl
  404998:	sub    edi,DWORD PTR [ecx+0x61d0cad0]
  40499e:	lea    esi,ds:0x5eac6cfd
  4049a4:	les    edx,FWORD PTR ss:[ebp-0x7d]
  4049a8:	pop    es
  4049a9:	scas   eax,DWORD PTR es:[edi]
  4049aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049ab:	inc    esi
  4049ac:	sti    
  4049ad:	shl    DWORD PTR [edx],0xf0
  4049b0:	leave  
  4049b1:	cmp    dh,bl
  4049b3:	push   edi
  4049b4:	(bad)  
  4049b6:	add    eax,0xfb6b7074
  4049bb:	std    
  4049bc:	fmul   DWORD PTR [edx-0x44917e45]
  4049c2:	fist   WORD PTR [ebp-0x5b43b293]
  4049c8:	inc    eax
  4049c9:	mov    ds:0x85287cac,eax
  4049ce:	sub    eax,0x5d09809a
  4049d3:	xor    eax,0x1b64f8d1
  4049d8:	cmp    eax,0x32757139
  4049dd:	jle    0x404a51
  4049df:	xor    bl,0xef
  4049e2:	adc    eax,0x5273b8dc
  4049e7:	xlat   BYTE PTR ds:[ebx]
  4049e8:	fs jns 0x4049cc
  4049eb:	in     al,dx
  4049ec:	mov    bh,0xc8
  4049ee:	mov    ah,0x42
  4049f0:	pop    ds
  4049f1:	pop    edx
  4049f2:	jo     0x404a6e
  4049f4:	inc    ebx
  4049f5:	je     0x4049ec
  4049f7:	out    0x9b,al
  4049f9:	aad    0x55
  4049fb:	add    BYTE PTR [esi-0x4ddd963a],dh
  404a01:	into   
  404a02:	pop    ss
  404a03:	mov    BYTE PTR [esi-0x5fac8a20],al
  404a09:	mul    cl
  404a0b:	imul   esp,DWORD PTR [eax-0x17],0xeff912bd
  404a12:	sbb    ebx,ebp
  404a14:	sbb    al,0xac
  404a16:	add    bl,dl
  404a18:	inc    esi
  404a19:	jle    0x4049e4
  404a1b:	xor    DWORD PTR [edi+0xc],ebp
  404a1e:	jg     0x404a3a
  404a20:	arpl   WORD PTR [edx],sp
  404a22:	xchg   edi,eax
  404a23:	mov    dh,0xff
  404a25:	sbb    BYTE PTR [edi+0x52],dl
  404a28:	pop    ecx
  404a29:	add    al,0x5f
  404a2b:	add    eax,0x67c4d7ec
  404a30:	ror    bl,1
  404a32:	in     al,dx
  404a33:	js     0x404a71
  404a35:	xchg   DWORD PTR [edx-0x108ae246],edx
  404a3b:	push   ebp
  404a3c:	jmp    0x404a57
  404a3e:	mov    ebx,0x3119ec86
  404a43:	mov    eax,0x3209cc45
  404a48:	mov    bl,0x22
  404a4a:	xchg   BYTE PTR [edi-0x1a8a2614],bh
  404a50:	stc    
  404a51:	add    BYTE PTR [edi],bh
  404a53:	call   0x2416a63d
  404a58:	or     BYTE PTR [esi-0x6e],ah
  404a5b:	call   0x72fc:0x46436e27
  404a62:	nop
  404a63:	cmp    eax,0x3063c0d4
  404a68:	xchg   esp,eax
  404a69:	shl    BYTE PTR [ecx],1
  404a6b:	dec    edx
  404a6c:	push   0x34fcbd81
  404a71:	cli    
  404a72:	retf   0xc1a6
  404a75:	inc    edi
  404a76:	inc    ebx
  404a77:	push   ds
  404a78:	sbb    eax,0x3a35f474
  404a7d:	mov    WORD PTR [ecx-0x2be2a665],cs
  404a83:	loopne 0x404adc
  404a85:	ja     0x404afa
  404a87:	jle    0x404a0c
  404a89:	pop    es
  404a8a:	rcl    BYTE PTR [esi-0x16],1
  404a8d:	cmp    BYTE PTR [esi+ebx*1-0x4cde4241],bl
  404a94:	dec    eax
  404a95:	pop    edi
  404a96:	jge    0x404a5e
  404a98:	jae    0x404a22
  404a9a:	jg     0x404a44
  404a9c:	cli    
  404a9d:	(bad)
  404aa0:	fistp  WORD PTR [ebx+edi*4]
  404aa3:	jne    0x404a80
  404aa5:	cld    
  404aa6:	push   cs
  404aa7:	mov    BYTE PTR [edi-0x3e],0x20
  404aab:	sti    
  404aac:	fistp  WORD PTR [esi+0x49e026ec]
  404ab2:	imul   DWORD PTR [ebx+0x28687ab9]
  404ab8:	outs   dx,BYTE PTR ds:[esi]
  404ab9:	loope  0x404a9f
  404abb:	arpl   WORD PTR [esi-0x1e78835],ax
  404ac1:	sbb    DWORD PTR [edi],esi
  404ac3:	pop    edi
  404ac4:	and    DWORD PTR [ebx-0x53e16c04],eax
  404aca:	jbe    0x404ad3
  404acc:	fwait
  404acd:	loop   0x404b3e
  404acf:	mov    edx,0x3fe8f45
  404ad4:	sbb    eax,0xad5c18fe
  404ad9:	retf   0xaf30
  404adc:	mov    al,ds:0xd8e74f82
  404ae1:	pop    ebp
  404ae2:	aas    
  404ae3:	sbb    al,0xc2
  404ae5:	inc    edx
  404ae6:	jecxz  0x404ab3
  404ae8:	xchg   edi,eax
  404ae9:	shl    DWORD PTR [edx+0x4929781f],cl
  404aef:	inc    ebp
  404af0:	inc    esi
  404af1:	inc    edx
  404af2:	add    eax,0xecc14061
  404af7:	push   ecx
  404af8:	mov    ecx,0x5a6d865a
  404afd:	ds daa 
  404aff:	aaa    
  404b00:	retf   0x5e50
  404b03:	shr    DWORD PTR [eax-0x16],1
  404b06:	xor    eax,0x5ba9ac5a
  404b0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b0c:	into   
  404b0d:	mov    edx,0x84ef5d83
  404b12:	cmp    ebx,DWORD PTR [ebx-0x43]
  404b15:	out    0x8d,al
  404b17:	jbe    0x404b52
  404b19:	mov    ss,WORD PTR [eax-0x4979df24]
  404b1f:	xchg   edx,eax
  404b20:	mov    ah,0xc3
  404b22:	xchg   ebx,eax
  404b23:	cli    
  404b24:	add    eax,0x99dc50c1
  404b29:	js     0x404b7a
  404b2b:	(bad)
  404b2f:	cmp    bh,cl
  404b31:	mov    ds:0xa9baad5,al
  404b36:	or     bh,dh
  404b38:	js     0x404af7
  404b3a:	inc    eax
  404b3b:	mov    ecx,0xbbc4eb2a
  404b40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b41:	test   BYTE PTR [edx+0x3bda23e1],al
  404b47:	div    bh
  404b49:	xchg   ecx,eax
  404b4a:	jno    0x404bb2
  404b4c:	inc    eax
  404b4d:	adc    DWORD PTR [ebx+eax*4],esi
  404b50:	jnp    0x404b5a
  404b52:	cwde   
  404b53:	rcl    DWORD PTR [ecx+0x36],cl
  404b56:	xor    esi,DWORD PTR [esi]
  404b58:	mov    ?,WORD PTR [edi-0x56]
  404b5b:	stos   BYTE PTR es:[edi],al
  404b5c:	cld    
  404b5d:	pusha  
  404b5e:	test   eax,0x8c11c3ae
  404b63:	fld    TBYTE PTR [esi-0x541abbfe]
  404b69:	and    BYTE PTR [edx],cl
  404b6b:	push   ecx
  404b6c:	push   eax
  404b6d:	(bad)  
  404b6e:	pop    edx
  404b6f:	mov    BYTE PTR [ebx-0x52cfa53b],bl
  404b75:	sar    DWORD PTR [ecx+0x7a],1
  404b78:	imul   BYTE PTR ds:0x9490eae7
  404b7e:	push   ecx
  404b7f:	es push 0x9
  404b82:	add    BYTE PTR [ebp+0x77a393e7],dl
  404b88:	mov    al,ds:0x3cdc440d
  404b8d:	xchg   edi,eax
  404b8e:	(bad)
  404b92:	sub    edi,DWORD PTR [edx+0x64c4496a]
  404b98:	xchg   edi,eax
  404b99:	cmp    ebp,0x1b
  404b9c:	les    ebp,FWORD PTR [edx-0x4f]
  404b9f:	clc    
  404ba0:	jne    0x404c19
  404ba2:	hlt    
  404ba3:	jl     0x404b47
  404ba5:	in     al,0xb5
  404ba7:	fadd   QWORD PTR [ecx]
  404ba9:	gs icebp 
  404bab:	outs   dx,DWORD PTR ds:[esi]
  404bac:	adc    edx,esi
  404bae:	cmc    
  404baf:	lods   al,BYTE PTR ds:[esi]
  404bb0:	ss jecxz 0x404b5e
  404bb3:	xor    al,0x6f
  404bb5:	push   ebx
  404bb6:	mov    edx,0x7a887536
  404bbb:	cmp    eax,0xe5e60e4b
  404bc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bc1:	xchg   DWORD PTR [ebx+edi*4-0x10],edi
  404bc5:	adc    eax,DWORD PTR [esi+eiz*1+0x6074df2b]
  404bcc:	push   eax
  404bcd:	dec    BYTE PTR [eax+0x10abdef0]
  404bd3:	mov    BYTE PTR ds:0xdf13324d,al
  404bd9:	add    DWORD PTR [eax-0x793572f1],0x62
  404be0:	jo     0x404c06
  404be2:	jg     0x404ba5
  404be4:	pop    ss
  404be5:	or     DWORD PTR [ebx+ebx*4+0x79da149b],eax
  404bec:	lods   al,BYTE PTR ds:[esi]
  404bed:	(bad)  
  404bef:	jnp    0x404c6a
  404bf1:	cld    
  404bf2:	scas   al,BYTE PTR es:[edi]
  404bf3:	inc    edx
  404bf4:	sub    DWORD PTR [ecx],0xffffffa0
  404bf7:	enter  0xdf5e,0x1b
  404bfb:	out    0x23,eax
  404bfd:	in     al,0xaf
  404bff:	mov    edx,0xf5224b3d
  404c04:	lea    esi,[edi-0x47]
  404c07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c08:	call   eax
  404c0a:	(bad)  
  404c0c:	idiv   DWORD PTR [edi-0x42]
  404c0f:	das    
  404c10:	sub    bh,BYTE PTR [eax-0x209645dc]
  404c16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c17:	push   ss
  404c18:	outs   dx,BYTE PTR ds:[esi]
  404c19:	or     dl,BYTE PTR [edx-0x182800ff]
  404c1f:	jnp    0x404bf7
  404c21:	xchg   esp,eax
  404c22:	stc    
  404c23:	fsub   QWORD PTR [edx]
  404c25:	cs leave 
  404c27:	inc    ebx
  404c28:	repnz mov dl,0xf0
  404c2b:	stos   DWORD PTR es:[edi],eax
  404c2c:	push   ss
  404c2d:	clc    
  404c2e:	out    dx,al
  404c2f:	mov    bl,0xf1
  404c31:	aaa    
  404c32:	call   0xec48:0x8642deda
  404c39:	xchg   DWORD PTR [edx],eax
  404c3b:	inc    ebp
  404c3c:	pop    esp
  404c3d:	and    al,0xcc
  404c3f:	pop    ebx
  404c40:	xor    bl,bl
  404c42:	inc    ecx
  404c43:	push   ss
  404c44:	jg     0x404c0b
  404c46:	daa    
  404c47:	lods   al,BYTE PTR ds:[esi]
  404c48:	lahf   
  404c49:	pusha  
  404c4a:	pop    ebp
  404c4b:	cmp    DWORD PTR [ecx-0x64],ebx
  404c4e:	add    BYTE PTR [edx+0x302885f7],al
  404c54:	ss loope 0x404cc5
  404c57:	push   ds
  404c58:	mov    esp,edx
  404c5a:	or     DWORD PTR [ecx],esp
  404c5c:	fdivp  st(7),st
  404c5e:	dec    BYTE PTR [ebx+0x1601618a]
  404c64:	stos   DWORD PTR es:[edi],eax
  404c65:	push   0xffffff90
  404c67:	stos   DWORD PTR es:[edi],eax
  404c68:	(bad)  
  404c69:	call   0x4a0d4e46
  404c6e:	jae    0x404c55
  404c70:	push   ecx
  404c71:	xor    edi,0x4ac9d16f
  404c77:	xchg   DWORD PTR [ebp-0x118db8ec],edx
  404c7d:	(bad)  
  404c7f:	cdq    
  404c80:	shr    DWORD PTR [edi+esi*4+0x746d14c7],0x82
  404c88:	jb     0x404c22
  404c8a:	outs   dx,BYTE PTR ds:[esi]
  404c8b:	push   ebx
  404c8c:	fisttp QWORD PTR [ecx+0x6]
  404c8f:	adc    BYTE PTR [eax],cl
  404c91:	add    al,0x5a
  404c93:	pop    ebx
  404c94:	inc    edx
  404c95:	jmp    0x77e21e29
  404c9a:	xlat   BYTE PTR ds:[ebx]
  404c9b:	fist   WORD PTR [ebp-0x323b2322]
  404ca1:	jmp    0x7dd:0xaaeb7db0
  404ca8:	dec    edi
  404ca9:	shl    DWORD PTR [esi],1
  404cab:	jg     0x404d1c
  404cad:	and    eax,0x7affcad1
  404cb2:	loop   0x404c91
  404cb4:	jl     0x404c8f
  404cb6:	mov    ebp,DWORD PTR [edi]
  404cb8:	out    dx,eax
  404cb9:	es fwait
  404cbb:	outs   dx,BYTE PTR ds:[esi]
  404cbc:	mov    edx,0xa33558ab
  404cc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cc2:	cmc    
  404cc3:	sti    
  404cc4:	int    0x47
  404cc6:	(bad)  
  404cc7:	(bad)  
  404cc9:	retf   
  404cca:	jae    0x404c7a
  404ccc:	scas   eax,DWORD PTR es:[edi]
  404ccd:	inc    edi
  404cce:	es add eax,0xcee40164
  404cd4:	pop    eax
  404cd5:	pushf  
  404cd6:	ret    
  404cd7:	mov    al,ds:0x1334dd0e
  404cdc:	push   eax
  404cdd:	int3   
  404cde:	pop    es
  404cdf:	loop   0x404c9d
  404ce1:	push   edx
  404ce2:	fwait
  404ce3:	jl     0x404d4a
  404ce5:	xlat   BYTE PTR ds:[ebx]
  404ce6:	es int3 
  404ce8:	xlat   BYTE PTR fs:[ebx]
  404cea:	xchg   edi,eax
  404ceb:	test   eax,0x23935561
  404cf0:	pop    ss
  404cf1:	mov    edx,0xe4bc2c2a
  404cf6:	rcl    DWORD PTR [edx-0x30],cl
  404cf9:	push   ebp
  404cfa:	push   ss
  404cfb:	ja     0x404d03
  404cfd:	mov    cs,WORD PTR [esi]
  404cff:	pop    eax
  404d00:	cmp    al,0xf2
  404d02:	mov    ecx,?
  404d04:	and    ebx,DWORD PTR [edi-0x42619a12]
  404d0a:	dec    ebx
  404d0b:	xchg   edx,eax
  404d0c:	mov    edx,0xcebefaa0
  404d11:	mov    al,ds:0x2069f430
  404d16:	sub    BYTE PTR [ecx+0x78],ah
  404d19:	mov    WORD PTR [ebx+0x2b54c37],ds
  404d1f:	arpl   bx,ax
  404d21:	xor    DWORD PTR [edi],esi
  404d23:	addr16 dec ebx
  404d25:	jno    0x404d68
  404d27:	push   cs
  404d28:	jmp    0x711998e0
  404d2d:	add    al,0x14
  404d2f:	mov    esp,0xc3839eee
  404d34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d35:	cmp    al,0xe0
  404d37:	ss stc 
  404d39:	mov    ah,BYTE PTR [esi+0xa]
  404d3c:	cmp    BYTE PTR ds:0xe7bf9bc3,bl
  404d42:	ins    DWORD PTR es:[edi],dx
  404d43:	das    
  404d44:	shl    DWORD PTR [eax-0x2c],1
  404d47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d48:	stos   DWORD PTR es:[edi],eax
  404d49:	mov    esi,0xd18da31a
  404d4e:	pop    edx
  404d4f:	scas   al,BYTE PTR es:[edi]
  404d50:	test   al,0xa3
  404d52:	xchg   ecx,eax
  404d53:	jbe    0x404d82
  404d55:	fadd   QWORD PTR [eax]
  404d57:	mov    eax,ds:0x4cefc192
  404d5c:	out    0x86,al
  404d5e:	or     DWORD PTR ds:0xb9d92052,0x9bbf0e74
  404d68:	(bad)  
  404d69:	lods   eax,DWORD PTR ds:[esi]
  404d6a:	mov    ch,0xe0
  404d6c:	jae    0x404db3
  404d6e:	xchg   esi,eax
  404d6f:	cmp    cl,bl
  404d71:	cmp    ebx,DWORD PTR ds:0x27f9f664
  404d77:	jo     0x404de7
  404d79:	cmp    al,0x4d
  404d7b:	push   edi
  404d7c:	data16 hlt 
  404d7e:	jle    0x404d28
  404d80:	jecxz  0x404d3d
  404d82:	mov    eax,0x954ae513
  404d87:	mov    cl,0x8c
  404d89:	xchg   ecx,eax
  404d8a:	jb     0x404d63
  404d8c:	das    
  404d8d:	jle    0x404d1c
  404d8f:	adc    dh,ch
  404d91:	punpcklbw mm3,DWORD PTR [esp+ebx*4]
  404d95:	sub    esp,esp
  404d97:	shl    BYTE PTR [edx],1
  404d99:	dec    ebx
  404d9a:	into   
  404d9b:	jp     0x404e05
  404d9d:	sbb    ebx,DWORD PTR [edx-0x2854723b]
  404da3:	cli    
  404da4:	adc    bl,al
  404da6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404da7:	add    cl,BYTE PTR ds:0x6f3c896d
  404dad:	scas   al,BYTE PTR es:[edi]
  404dae:	ja     0x404dc4
  404db0:	int    0xa6
  404db2:	xchg   edx,eax
  404db3:	in     eax,dx
  404db4:	push   ds
  404db5:	mov    bh,0x45
  404db7:	std    
  404db8:	nop
  404db9:	xchg   DWORD PTR [edx-0x45],ebp
  404dbc:	das    
  404dbd:	sub    al,0x3a
  404dbf:	enter  0xaf58,0x6d
  404dc3:	inc    edx
  404dc4:	xlat   BYTE PTR ds:[ebx]
  404dc5:	xchg   edi,eax
  404dc6:	fwait
  404dc7:	lds    eax,FWORD PTR ds:0x985813e4
  404dcd:	push   es
  404dce:	test   DWORD PTR [edx],ebx
  404dd0:	mov    ch,0xc0
  404dd2:	es xchg esi,eax
  404dd4:	rcr    ebx,cl
  404dd6:	int    0xeb
  404dd8:	pusha  
  404dd9:	jns    0x404e56
  404ddb:	mov    ecx,0xae8ca86b
  404de0:	mov    ds:0xdf5e8fbb,al
  404de5:	outs   dx,BYTE PTR ds:[esi]
  404de6:	adc    bh,dl
  404de8:	scas   eax,DWORD PTR es:[edi]
  404de9:	inc    ebx
  404dea:	scas   eax,DWORD PTR es:[edi]
  404deb:	test   esp,0x9cd3e54c
  404df1:	dec    eax
  404df2:	jo     0x404e6a
  404df4:	xchg   esp,eax
  404df5:	dec    esi
  404df6:	inc    ebx
  404df7:	mov    ebx,0xb0cce473
  404dfc:	mov    WORD PTR [edx+0x56],ss
  404dff:	pop    ecx
  404e00:	or     al,0xa8
  404e02:	cmp    eax,0xa168f744
  404e07:	cmp    DWORD PTR [ebx],edi
  404e09:	pop    edi
  404e0a:	mov    ds:0x33e2579a,al
  404e0f:	out    0xe0,eax
  404e11:	push   edi
  404e12:	jl     0x404e07
  404e14:	repz int3 
  404e16:	dec    eax
  404e17:	push   cs
  404e18:	cmp    al,0x93
  404e1a:	xchg   ecx,eax
  404e1b:	scas   al,BYTE PTR es:[edi]
  404e1c:	(bad)  
  404e1d:	adc    BYTE PTR [ecx+0xd],0x24
  404e21:	cmp    BYTE PTR [ecx-0x1ddce680],bh
  404e27:	es add esp,ebp
  404e2a:	scas   al,BYTE PTR es:[edi]
  404e2b:	shl    DWORD PTR [ebp-0x14],0x59
  404e2f:	call   0xb92e:0xd912219f
  404e36:	pop    edi
  404e37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e38:	jb     0x404e74
  404e3a:	jbe    0x404e33
  404e3c:	jbe    0x404e70
  404e3e:	jno    0x404dcb
  404e40:	or     ecx,DWORD PTR [ebx-0x1c26052e]
  404e46:	inc    esp
  404e47:	and    DWORD PTR ds:0xb29d4b07,0xffffffc5
  404e4e:	jp     0x404e3a
  404e50:	mov    WORD PTR [ebx],ds
  404e52:	cmp    BYTE PTR [ebx-0x431b9cec],al
  404e58:	jb     0x404eb2
  404e5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e5b:	dec    esi
  404e5c:	fild   DWORD PTR [edx+eax*8-0x17f81760]
  404e63:	fs aad 0x4e
  404e66:	sbb    dh,BYTE PTR [ebx]
  404e68:	ror    BYTE PTR [edi-0x5a65851e],cl
  404e6e:	lds    ebp,FWORD PTR fs:[edi+edi*8]
  404e72:	jmp    0x9d763c93
  404e77:	les    esi,FWORD PTR [ebp+0x6e]
  404e7a:	mov    ds:0xbf60553a,al
  404e7f:	aad    0xe2
  404e81:	sbb    ebx,esi
  404e83:	call   0x60ebe02b
  404e88:	out    dx,eax
  404e89:	dec    ecx
  404e8a:	out    0x6f,eax
  404e8c:	cdq    
  404e8d:	pushf  
  404e8e:	or     DWORD PTR [edi],ecx
  404e90:	mov    BYTE PTR [edx],cl
  404e92:	hlt    
  404e93:	mov    edx,0x2bcd5267
  404e98:	outs   dx,DWORD PTR ds:[esi]
  404e99:	pop    ebp
  404e9a:	cli    
  404e9b:	mov    esi,0x860a710b
  404ea0:	scas   al,BYTE PTR es:[edi]
  404ea1:	aaa    
  404ea2:	jb     0x404e68
  404ea4:	xchg   edx,eax
  404ea5:	mov    ds:0x6fd7656a,eax
  404eaa:	test   al,0x9f
  404eac:	call   0x464d:0x28543fe4
  404eb3:	xchg   esi,eax
  404eb4:	out    0x79,al
  404eb6:	call   0xd148e8e2
  404ebb:	retf   0xf1b7
  404ebe:	push   0xa
  404ec0:	lds    ecx,FWORD PTR [edx+0x20]
  404ec3:	in     eax,dx
  404ec4:	jge    0x404e90
  404ec6:	mov    dl,0xa7
  404ec8:	sbb    al,0x2c
  404eca:	push   0xffffffde
  404ecc:	adc    DWORD PTR [esp+eax*2+0x6d64dc08],ebx
  404ed3:	xchg   ecx,eax
  404ed4:	push   ecx
  404ed5:	mov    ebp,0xc7ef83a1
  404eda:	jne    0x404e8e
  404edc:	xchg   edx,eax
  404edd:	mov    bl,dh
  404edf:	sbb    ebp,DWORD PTR [edx]
  404ee1:	sbb    al,dl
  404ee3:	or     BYTE PTR [esi+0x47],0xaa
  404ee7:	sub    BYTE PTR [edi+0x44b45501],dl
  404eed:	inc    eax
  404eee:	pop    ebp
  404eef:	mov    ch,0xe
  404ef1:	repz sub BYTE PTR gs:[esi],dh
  404ef5:	jns    0x404f6f
  404ef7:	push   ds
  404ef8:	mov    DWORD PTR [edi-0x585b86ef],eax
  404efe:	outs   dx,DWORD PTR ds:[esi]
  404eff:	loop   0x404ea7
  404f01:	jb     0x404f1c
  404f03:	mov    edi,0xddfa2e06
  404f08:	sub    ecx,edi
  404f0a:	pusha  
  404f0b:	xchg   edi,eax
  404f0c:	jo     0x404f18
  404f0e:	xlat   BYTE PTR ds:[ebx]
  404f0f:	push   0x12a231ff
  404f14:	jmp    0x404f35
  404f16:	inc    eax
  404f17:	add    BYTE PTR [edx],dh
  404f19:	cmp    BYTE PTR [esp+eax*8+0x255e83ba],cl
  404f20:	mov    esi,0x4951fbcd
  404f25:	test   eax,0xa0495b41
  404f2a:	pop    ss
  404f2b:	mov    esp,DWORD PTR [ebp+ebx*8-0x79]
  404f2f:	in     al,dx
  404f30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f31:	scas   al,BYTE PTR es:[edi]
  404f32:	cmp    DWORD PTR [ebx+edx*2+0x51],esp
  404f36:	mov    al,ds:0x373ab327
  404f3b:	sar    BYTE PTR [ebx-0x352ad2d6],1
  404f41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f42:	or     edx,esi
  404f44:	sub    BYTE PTR [edi+0x1e],al
  404f47:	jnp    0x404f34
  404f49:	mov    edi,0x384644c3
  404f4e:	ret    
  404f4f:	adc    DWORD PTR [edx+0x8],eax
  404f52:	add    al,0xe1
  404f55:	sar    BYTE PTR [eax+0x14],1
  404f58:	sub    al,cl
  404f5a:	out    dx,al
  404f5b:	or     dl,BYTE PTR [edx]
  404f5d:	fcom   QWORD PTR [edi+0x64d18012]
  404f63:	push   0x26
  404f65:	(bad)  
  404f66:	pop    ebp
  404f67:	push   es
  404f68:	or     al,0xe
  404f6a:	int3   
  404f6b:	leave  
  404f6c:	les    edx,FWORD PTR [esi]
  404f6e:	std    
  404f6f:	mov    ebx,DWORD PTR [eax-0xaabc9e]
  404f75:	rcr    DWORD PTR [esi-0x453f8a00],0x68
  404f7c:	(bad)  
  404f7d:	cld    
  404f7e:	(bad)  
  404f7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f80:	adc    eax,0xe0ea2f6a
  404f85:	icebp  
  404f86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f87:	push   esi
  404f88:	mov    dl,0x1e
  404f8a:	jbe    0x404f2a
  404f8c:	push   0x70
  404f8e:	les    eax,FWORD PTR [ebx]
  404f90:	icebp  
  404f91:	xchg   ebp,ebx
  404f93:	pop    ebp
  404f94:	cs retf 0x2c9c
  404f98:	test   eax,0x3604c940
  404f9d:	jg     0x404f7d
  404f9f:	xchg   DWORD PTR [edi],esi
  404fa1:	and    ah,BYTE PTR [ebx-0x7e19a7e3]
  404fa7:	hlt    
  404fa8:	into   
  404fa9:	into   
  404faa:	push   si
  404fac:	hlt    
  404fad:	(bad)
  404fb0:	call   0x79181e9a
  404fb5:	pop    ebx
  404fb6:	in     al,0x4e
  404fb8:	cmp    edx,esi
  404fba:	pop    eax
  404fbb:	push   ebp
  404fbc:	push   ebx
  404fbd:	in     al,dx
  404fbe:	pusha  
  404fbf:	adc    DWORD PTR [ecx-0x1d],0x62
  404fc3:	icebp  
  404fc4:	mov    al,ds:0x621425ee
  404fc9:	jae    0x404f9c
  404fcb:	xchg   ebx,eax
  404fcc:	pop    es
  404fcd:	sbb    eax,0x9c9baf35
  404fd2:	mov    dl,0xd6
  404fd4:	inc    ebp
  404fd5:	popa   
  404fd6:	mov    ebp,0x51b8aa53
  404fdb:	push   esi
  404fdc:	mov    esp,0x3ee66701
  404fe1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fe2:	inc    ecx
  404fe3:	(bad)  
  404fe4:	out    0x13,al
  404fe6:	cmp    esi,esi
  404fe8:	call   0x56e7:0xb30dd555
  404fef:	cld    
  404ff0:	mov    cl,BYTE PTR [ebp-0x37f7e58b]
  404ff6:	in     al,0x39
  404ff8:	out    0xc8,eax
  404ffa:	fstp   TBYTE PTR ds:0x11ad35a5
  405000:	(bad)  
  405001:	jmp    0x404fa6
  405003:	rcl    eax,1
  405005:	dec    edi
  405006:	dec    ecx
  405007:	and    esp,DWORD PTR [eax+0x40]
  40500a:	sbb    ebp,DWORD PTR [edi+0x59f1e336]
  405010:	mov    ?,WORD PTR [edx]
  405012:	imul   BYTE PTR [edx]
  405014:	and    bh,BYTE PTR [edx+0x20]
  405017:	pop    esp
  405018:	js     0x405059
  40501a:	int3   
  40501b:	xor    eax,0xd9ac8a96
  405020:	sbb    ecx,DWORD PTR [ecx+eiz*8-0x519965de]
  405027:	and    ebp,eax
  405029:	pop    ss
  40502a:	jge    0x404fac
  40502c:	hlt    
  40502d:	or     dl,ch
  40502f:	dec    ecx
  405030:	mov    ah,0xaf
  405032:	rcl    eax,cl
  405034:	cmp    al,0x15
  405036:	repz or eax,0xcbed07ea
  40503c:	bound  esp,QWORD PTR [ecx-0x5e8181a0]
  405042:	jmp    0x1264:0xf3339ee4
  405049:	mov    ds:0x22d8729e,eax
  40504e:	out    dx,al
  40504f:	add    dl,BYTE PTR [ebx-0x4eccb92]
  405055:	out    dx,al
  405056:	fnstenv [edi+ebx*4+0x6119ef7e]
  40505d:	test   bh,bl
  40505f:	cld    
  405060:	push   ecx
  405061:	repnz adc DWORD PTR [edi+ebp*8+0x18],edi
  405066:	mov    bh,0xf3
  405068:	call   0xa96b:0x8f488052
  40506f:	imul   esp,ecx,0xffffff94
  405072:	push   edx
  405073:	jno    0x404ff7
  405075:	dec    edx
  405076:	call   0xefedc787
  40507b:	pushf  
  40507c:	jmp    0x36488e66
  405081:	xchg   BYTE PTR [eax-0x21],dh
  405084:	adc    BYTE PTR [edi],bl
  405086:	and    cl,BYTE PTR [edi-0x5f]
  405089:	or     eax,0x1db10165
  40508e:	mov    BYTE PTR [ebx],cl
  405090:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405091:	add    DWORD PTR [ecx-0x220c1d55],edx
  405097:	rcl    BYTE PTR [edx-0x7193c19d],cl
  40509d:	lea    edi,[edi]
  40509f:	or     ebx,DWORD PTR [esi+0x15]
  4050a2:	(bad)  
  4050a3:	aad    0xb9
  4050a5:	imul   esp,DWORD PTR [edi+0x7b],0x1
  4050a9:	mov    ecx,0xdc82c432
  4050ae:	iret   
  4050af:	cwde   
  4050b0:	into   
  4050b1:	inc    esi
  4050b2:	mov    dh,0x33
  4050b4:	pusha  
  4050b5:	out    0xe1,al
  4050b7:	mov    edx,0x28f3423f
  4050bc:	sahf   
  4050bd:	sar    ecx,0xe6
  4050c0:	cwde   
  4050c1:	add    bh,BYTE PTR [ecx-0x21]
  4050c4:	push   0xffffffcf
  4050c6:	es sub al,0xde
  4050c9:	pop    esi
  4050ca:	adc    eax,0x5b3951c1
  4050cf:	sub    ah,bl
  4050d1:	jnp    0x4050b1
  4050d3:	push   edi
  4050d4:	popf   
  4050d5:	add    BYTE PTR [esi],0x66
  4050d8:	out    dx,al
  4050d9:	out    0x85,eax
  4050db:	cmp    al,0xe7
  4050dd:	outs   dx,DWORD PTR ds:[esi]
  4050de:	aaa    
  4050df:	and    al,0x47
  4050e1:	push   ss
  4050e2:	dec    eax
  4050e3:	in     eax,dx
  4050e4:	pop    ss
  4050e5:	xchg   esi,eax
  4050e6:	jo     0x40512f
  4050e8:	push   ds
  4050e9:	idiv   BYTE PTR [edx+ecx*8+0x678b79af]
  4050f0:	push   ss
  4050f1:	adc    DWORD PTR [ebx],0x36
  4050f4:	mov    eax,ds:0x1a671c5e
  4050f9:	and    ebp,DWORD PTR [ebx]
  4050fb:	aas    
  4050fc:	and    DWORD PTR [ebx+0x2695a896],ecx
  405102:	(bad)  
  405103:	call   0x585aefe9
  405108:	dec    ebp
  405109:	sub    esi,ebx
  40510b:	add    esi,edx
  40510d:	xor    ecx,ebp
  40510f:	xor    eax,0xd27df439
  405114:	cmp    BYTE PTR [edx-0x5b],0xe3
  405118:	pop    ds
  405119:	mov    WORD PTR [edi],es
  40511b:	jge    0x4050b9
  40511d:	inc    ebp
  40511e:	dec    ecx
  40511f:	push   ebx
  405120:	(bad)  
  405121:	pop    ds
  405122:	sub    al,0xd9
  405124:	push   0x4ab3e827
  405129:	cmp    DWORD PTR ds:0xc7c7183,ebx
  40512f:	test   DWORD PTR [edx],ecx
  405131:	neg    BYTE PTR [eax+0x34]
  405134:	cmp    ebx,DWORD PTR [eax-0x3ae6baa0]
  40513a:	mov    esp,0x9db8b006
  40513f:	adc    al,0x59
  405141:	and    eax,0x513cee4f
  405146:	pop    eax
  405147:	cli    
  405148:	ss int3 
  40514a:	aas    
  40514b:	inc    edi
  40514c:	xchg   BYTE PTR [ebx-0x3c3b4d96],cl
  405152:	adc    eax,0xfd219766
  405157:	scas   al,BYTE PTR es:[edi]
  405158:	push   0xffffffcf
  40515a:	js     0x4051b9
  40515c:	(bad)  [edx]
  40515e:	jae    0x405183
  405160:	iret   
  405161:	out    0x29,eax
  405163:	adc    DWORD PTR [edx-0x30],0x14889e5f
  40516a:	pop    edi
  40516b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40516c:	sbb    eax,0xf4a1c06f
  405171:	jmp    0x3384:0x38e4798f
  405178:	add    eax,0xad4cab31
  40517d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40517e:	sub    ecx,eax
  405180:	data16 shl BYTE PTR [esi+0x1d686097],0xa9
  405188:	sub    ecx,0x8b46513c
  40518e:	jg     0x4051cf
  405190:	aad    0xe4
  405192:	mov    BYTE PTR [edx-0x1],cl
  405195:	in     eax,0x9a
  405197:	mov    dl,0x14
  405199:	ins    BYTE PTR es:[edi],dx
  40519a:	or     DWORD PTR [ecx],edx
  40519c:	push   ds
  40519d:	mov    edi,0xdc073d30
  4051a2:	adc    eax,DWORD PTR [ecx]
  4051a4:	pop    ecx
  4051a5:	mov    ecx,0xdd7d215b
  4051aa:	xor    ah,BYTE PTR [eax-0x6d]
  4051ad:	jge    0x4051db
  4051af:	mov    bl,0xb1
  4051b1:	cs dec eax
  4051b3:	scas   eax,DWORD PTR es:[edi]
  4051b4:	push   eax
  4051b5:	outs   dx,DWORD PTR ds:[esi]
  4051b6:	lea    ecx,[eax]
  4051b8:	add    eax,0x9bafaf7b
  4051bd:	xor    eax,0xfd6886cb
  4051c2:	fld    TBYTE PTR [edi-0xedee3f]
  4051c8:	adc    eax,0x84a41c11
  4051cd:	fwait
  4051ce:	je     0x40522f
  4051d0:	and    eax,0x7d071205
  4051d5:	ror    DWORD PTR [eax+0x3d],cl
  4051d8:	lods   al,BYTE PTR ds:[esi]
  4051d9:	xor    DWORD PTR [esi-0x7e],ecx
  4051dc:	repz call 0xa3ed55ca
  4051e2:	test   BYTE PTR [ebx+edx*2+0x32],dh
  4051e6:	call   0xd151:0xcdc533d5
  4051ed:	dec    edx
  4051ee:	test   al,0x52
  4051f0:	jbe    0x405252
  4051f2:	gs in  al,0xb1
  4051f5:	retf   0x8ab3
  4051f8:	jae    0x405183
  4051fa:	push   es
  4051fb:	call   0xca89:0xd3c305ef
  405202:	cmp    BYTE PTR [ecx+0x3038685f],ch
  405208:	push   0xcfa0bf93
  40520d:	or     dl,al
  40520f:	(bad)  
  405210:	mov    ebx,0x730c1b0c
  405215:	sbb    BYTE PTR [ebx-0x6d29b460],dh
  40521b:	data16 jmp 0x405259
  40521e:	icebp  
  40521f:	outs   dx,BYTE PTR ds:[esi]
  405220:	gs jne 0x405213
  405223:	pop    ss
  405224:	cmp    al,cl
  405226:	mov    cl,0x4f
  405228:	lea    edi,[ecx+esi*8-0x2a3093fe]
  40522f:	sub    BYTE PTR [edx+0x1f8a72e6],dl
  405235:	jb     0x4052ae
  405237:	inc    BYTE PTR [esi]
  405239:	std    
  40523a:	jmp    0x4052a0
  40523c:	mov    dh,0x59
  40523e:	inc    eax
  40523f:	ja     0x40524e
  405241:	and    BYTE PTR ds:0x4a4264f5,0x41
  405248:	ss dec esp
  40524a:	iret   
  40524b:	sub    al,0x5c
  40524d:	cmp    dl,cl
  40524f:	ins    BYTE PTR es:[edi],dx
  405250:	lods   al,BYTE PTR ds:[esi]
  405251:	inc    edx
  405252:	or     DWORD PTR [eax],edx
  405254:	leave  
  405255:	mov    edi,0xd81ed802
  40525a:	aas    
  40525b:	adc    ecx,DWORD PTR [esi]
  40525d:	ds pop ecx
  40525f:	dec    DWORD PTR [edx+0x3492301]
  405265:	dec    esp
  405266:	sar    cl,1
  405268:	int    0x30
  40526a:	xchg   edx,eax
  40526b:	mov    dl,0x8e
  40526d:	push   0xf8ab3ce5
  405272:	fcom   QWORD PTR [eax]
  405274:	mov    al,ds:0x8786c70e
  405279:	sbb    eax,0x19f4f469
  40527e:	daa    
  40527f:	repnz xchg ecx,eax
  405281:	ret    
  405282:	ret    0x5dbc
  405285:	cwde   
  405286:	mov    edi,0x74c2b348
  40528b:	hlt    
  40528c:	test   al,0x54
  40528e:	data16 fdivr DWORD PTR [esi]
  405291:	clc    
  405292:	dec    ecx
  405293:	jmp    0x4c7700b3
  405298:	jle    0x405245
  40529a:	inc    ecx
  40529b:	loop   0x4052aa
  40529d:	mov    al,ds:0xf3d498b0
  4052a2:	inc    edx
  4052a3:	aad    0x43
  4052a5:	mov    esi,0xeae700f4
  4052aa:	mov    WORD PTR [esi-0x5f693fd2],gs
  4052b0:	jbe    0x4052af
  4052b2:	shr    bl,cl
  4052b4:	mov    bh,0x79
  4052b6:	outs   dx,BYTE PTR fs:[esi]
  4052b8:	lods   eax,DWORD PTR ds:[esi]
  4052b9:	xchg   esp,eax
  4052ba:	mov    ebp,0x3737f26a
  4052bf:	js     0x405252
  4052c1:	cwde   
  4052c2:	imul   ecx,DWORD PTR [esi],0xdfbf4dc1
  4052c8:	and    BYTE PTR [edx],al
  4052ca:	or     ecx,edi
  4052cc:	sbb    bh,BYTE PTR [esi+0x43]
  4052cf:	mov    bh,0xbd
  4052d1:	scas   eax,DWORD PTR es:[edi]
  4052d2:	push   cs
  4052d3:	pusha  
  4052d4:	add    al,0xd8
  4052d6:	aam    0x89
  4052d8:	lods   al,BYTE PTR ds:[esi]
  4052d9:	fldcw  WORD PTR [edi-0x3743f844]
  4052df:	sbb    eax,0x947896d0
  4052e4:	lods   al,BYTE PTR ds:[esi]
  4052e5:	xchg   BYTE PTR [esp+esi*2],bl
  4052e8:	sub    esp,DWORD PTR [edx-0x2832ff53]
  4052ee:	jecxz  0x40533f
  4052f0:	jns    0x405317
  4052f2:	enter  0xe3f6,0x75
  4052f6:	arpl   ax,dx
  4052f8:	shl    al,1
  4052fa:	push   edi
  4052fb:	mov    ebp,0x39f1620f
  405300:	inc    ecx
  405301:	aam    0x7
  405303:	xor    ebx,esp
  405305:	scas   al,BYTE PTR es:[edi]
  405306:	jbe    0x405358
  405308:	pop    ebp
  405309:	scas   al,BYTE PTR es:[edi]
  40530a:	arpl   WORD PTR [edi+0x61],bp
  40530d:	shl    BYTE PTR [esi],0x91
  405310:	cmp    dh,BYTE PTR [ecx]
  405312:	out    dx,eax
  405313:	stc    
  405314:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405315:	test   esp,eax
  405317:	jb     0x405345
  405319:	pushf  
  40531a:	cmp    eax,0x8218d4f9
  40531f:	rcr    BYTE PTR [eax-0xb449e88],0xf2
  405326:	pop    esp
  405327:	idiv   DWORD PTR [edi]
  405329:	inc    edi
  40532b:	aaa    
  40532c:	mov    BYTE PTR ds:0x60c0fc68,dh
  405332:	jp     0x4052fd
  405334:	adc    ecx,ebx
  405336:	test   BYTE PTR [ecx],dh
  405338:	sti    
  405339:	dec    esp
  40533a:	test   DWORD PTR [ebp+edi*2+0x275f2cc2],esi
  405341:	cld    
  405342:	lds    ebp,FWORD PTR [edi-0x9a04bd2]
  405348:	fistp  QWORD PTR [eax+0x24921e7c]
  40534e:	aaa    
  40534f:	jg     0x405300
  405351:	sub    edx,edi
  405353:	in     eax,0xb7
  405355:	(bad)  
  405356:	repnz mov esi,0xedf7c7dc
  40535c:	add    ebp,eax
  40535e:	jge    0x405397
  405360:	test   al,0xee
  405362:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405363:	(bad)  
  405364:	jbe    0x4053b1
  405366:	mov    eax,0x7c1fef86
  40536b:	dec    ecx
  40536c:	xor    al,0x9e
  40536e:	shl    bl,1
  405370:	jp     0x4053b8
  405372:	stc    
  405373:	pop    ds
  405374:	mov    ecx,0xe17faf06
  405379:	test   BYTE PTR [ecx+0x49],bl
  40537c:	cli    
  40537d:	mov    DWORD PTR [eax-0x72],esi
  405380:	in     al,dx
  405381:	jbe    0x4053b0
  405383:	jle    0x40536e
  405385:	in     al,dx
  405386:	popa   
  405387:	jg     0x405358
  405389:	adc    al,0x32
  40538b:	xchg   esi,eax
  40538c:	pop    ebx
  40538d:	out    dx,al
  40538e:	sar    bh,0x72
  405391:	retf   
  405392:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405393:	xor    BYTE PTR [eax],cl
  405395:	scas   al,BYTE PTR es:[edi]
  405396:	mov    ah,ch
  405398:	in     al,dx
  405399:	add    eax,0xe025467f
  40539e:	jno    0x40539c
  4053a0:	ds aas 
  4053a2:	mov    ah,0x7
  4053a4:	xor    DWORD PTR ds:0xbf7519d3,edi
  4053aa:	arpl   WORD PTR [ebp-0x6d62f7ec],sp
  4053b0:	dec    edx
  4053b1:	mov    ch,0x5d
  4053b3:	pop    edi
  4053b4:	sub    BYTE PTR [ebp+0x5263cf7],dl
  4053ba:	pop    ecx
  4053bb:	popa   
  4053bc:	in     eax,0xd9
  4053be:	(bad)  
  4053bf:	jle    0x405343
  4053c1:	push   ebx
  4053c2:	test   eax,0x6427e7f9
  4053c7:	mov    ebp,0xbbb4d2dc
  4053cc:	and    BYTE PTR [esi-0x4952a9d],bl
  4053d2:	dec    edi
  4053d3:	sub    al,0xd
  4053d5:	inc    ebx
  4053d6:	mov    dh,0xbc
  4053d8:	and    al,0x72
  4053da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053db:	cmp    DWORD PTR [edx+eax*1+0x36],esp
  4053df:	out    0xa,eax
  4053e1:	iret   
  4053e2:	mov    ebp,0x81332beb
  4053e7:	out    dx,eax
  4053e8:	mov    ch,0xb7
  4053ea:	outs   dx,BYTE PTR ds:[esi]
  4053eb:	xchg   BYTE PTR [edx-0x3636f5b2],ch
  4053f1:	cmc    
  4053f2:	bound  edi,QWORD PTR [eax+edi*4]
  4053f5:	stos   DWORD PTR es:[edi],eax
  4053f6:	out    0xba,al
  4053f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053f9:	fbld   TBYTE PTR [ecx-0xa5b61fc]
  4053ff:	into   
  405400:	ret    
  405401:	test   eax,0xd036cff5
  405406:	pusha  
  405407:	(bad)  
  405409:	sahf   
  40540a:	sbb    eax,0x62976f68
  40540f:	xchg   ebx,eax
  405410:	gs test eax,0x2301a83b
  405416:	test   eax,0xb2d2f40c
  40541b:	test   al,0x34
  40541d:	test   al,0x51
  40541f:	fcomp  QWORD PTR [edi]
  405421:	xlat   BYTE PTR ds:[ebx]
  405422:	and    DWORD PTR [edi-0x5629f003],edx
  405428:	loop   0x405431
  40542a:	push   0xffffffda
  40542c:	pop    ss
  40542d:	ja     0x4053d8
  40542f:	sbb    bh,al
  405431:	inc    ebp
  405432:	in     eax,dx
  405433:	pop    ss
  405434:	push   DWORD PTR [ebp+ecx*8+0x5d]
  405438:	jo     0x405410
  40543a:	mov    ebx,0x6e99efc6
  40543f:	(bad)  [eax]
  405441:	into   
  405442:	jg     0x40540f
  405444:	and    DWORD PTR [edi+edx*8+0x3d],edi
  405448:	jge    0x405468
  40544a:	dec    ebx
  40544b:	sub    edx,DWORD PTR [ebp+0x2a8dbff5]
  405451:	jge    0x405410
  405453:	pop    edi
  405454:	pop    ds
  405455:	jecxz  0x4054a3
  405457:	push   0x87b18a28
  40545c:	adc    edi,DWORD PTR [edi-0x1f]
  40545f:	pop    ds
  405460:	jae    0x4054c5
  405462:	lods   al,BYTE PTR ds:[esi]
  405463:	xor    al,0x65
  405465:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405466:	gs jl  0x4054cb
  405469:	and    eax,0x6dc758b2
  40546e:	and    BYTE PTR [esi-0x3c0f6806],bl
  405474:	outs   dx,DWORD PTR ds:[esi]
  405475:	aas    
  405476:	push   ebp
  405477:	sub    ch,dl
  405479:	and    edx,ecx
  40547b:	sub    bl,BYTE PTR [ebp-0x28e5c39d]
  405481:	fwait
  405482:	sbb    DWORD PTR ss:[ecx+0x6116c0ff],edi
  405489:	or     esp,DWORD PTR [edi+0x79370c8f]
  40548f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405490:	in     al,0xda
  405492:	cwde   
  405493:	aad    0xdf
  405495:	lea    edi,[ebx-0x18]
  405498:	push   esp
  405499:	fxch   st(4)
  40549b:	sahf   
  40549c:	add    BYTE PTR [eax-0x45d7a6f8],cl
  4054a2:	dec    esi
  4054a3:	(bad)  
  4054a4:	pop    ecx
  4054a5:	iret   
  4054a6:	dec    eax
  4054a7:	push   DWORD PTR [ebx-0x58a8287c]
  4054ad:	int3   
  4054ae:	addr16 fxch st(3)
  4054b1:	mov    bl,0x73
  4054b3:	out    dx,eax
  4054b4:	dec    ecx
  4054b5:	mov    es,WORD PTR [edx-0x1066acd1]
  4054bb:	push   esi
  4054bc:	mov    DWORD PTR [ebx+eiz*1+0x6b],eax
  4054c0:	xchg   edx,eax
  4054c1:	or     DWORD PTR [ebp-0x4d],edi
  4054c4:	or     BYTE PTR ds:0xa53a716,0xd1
  4054cb:	push   ebp
  4054cc:	mov    DWORD PTR [esi-0x35a366b7],ebx
  4054d2:	push   ds
  4054d3:	pop    ebp
  4054d4:	cmp    al,0x93
  4054d6:	xchg   ebx,eax
  4054d7:	loopne 0x4054c6
  4054d9:	test   al,0x2e
  4054db:	sub    DWORD PTR [ebx],eax
  4054dd:	pop    ecx
  4054de:	add    ebx,DWORD PTR [ebp-0x64706bc5]
  4054e4:	mov    ebx,0xdfb8fe23
  4054e9:	cmp    eax,0xbf821d59
  4054ee:	cwde   
  4054ef:	mov    dl,0x1c
  4054f1:	aam    0x48
  4054f3:	mov    dh,0x1f
  4054f5:	ror    BYTE PTR [ebp+0x1e],cl
  4054f8:	lea    edx,[edi-0x70117e24]
  4054fe:	lea    esi,[ebx]
  405500:	arpl   WORD PTR [ecx+0x3f6008bf],di
  405506:	dec    ebx
  405507:	jl     0x405505
  405509:	ret    0xdb44
  40550c:	sub    al,0xed
  40550e:	stos   BYTE PTR es:[edi],al
  40550f:	(bad)  
  405510:	cmp    ch,cl
  405512:	(bad)  
  405513:	xor    ecx,DWORD PTR [eax-0x44]
  405516:	test   BYTE PTR ss:[eax],dh
  405519:	into   
  40551a:	(bad)  
  40551b:	jno    0x4054fc
  40551d:	jecxz  0x4054eb
  40551f:	adc    BYTE PTR ds:0xed64f6c1,0x8a
  405526:	loopne 0x40554e
  405528:	jle    0x40558e
  40552a:	and    esp,DWORD PTR [bx+di]
  40552d:	or     esp,0x1b91b83
  405533:	mov    dl,0x8b
  405535:	clc    
  405536:	addr16 add al,0x5a
  405539:	xor    dh,BYTE PTR [edx+eiz*2+0x10f288d7]
  405540:	dec    esi
  405541:	pop    edx
  405542:	sahf   
  405543:	sbb    eax,DWORD PTR [ebp-0x47]
  405546:	xor    al,0x1b
  405548:	aam    0xf2
  40554a:	ficomp DWORD PTR [esi]
  40554c:	mov    cl,0x8d
  40554e:	sub    eax,0x657a37c2
  405553:	js     0x4055d3
  405555:	aas    
  405556:	mov    al,0xca
  405558:	dec    ebp
  405559:	bound  edx,QWORD PTR [edi]
  40555b:	aad    0x77
  40555d:	bound  edi,QWORD PTR [esi+0xe506dd3]
  405563:	div    esp
  405565:	outs   dx,BYTE PTR ds:[esi]
  405566:	xor    al,0xaf
  405568:	mov    al,0x48
  40556a:	es jmp 0x2de73cec
  405570:	fcom   DWORD PTR [ebx]
  405572:	pop    ebp
  405573:	stos   BYTE PTR es:[edi],al
  405574:	xor    esi,DWORD PTR [eax+0x72e87d9d]
  40557a:	add    eax,0xea5fd57b
  40557f:	mov    ecx,0x99ba0c38
  405584:	adc    esp,DWORD PTR [ebp-0x57f28292]
  40558a:	in     al,dx
  40558b:	or     DWORD PTR [ecx],eax
  40558d:	shl    edx,cl
  40558f:	loop   0x4055af
  405591:	jge    0x405548
  405593:	in     eax,0xf2
  405595:	mov    ecx,0x658fc154
  40559a:	fcomip st,st(3)
  40559c:	mul    eax
  40559e:	jo     0x4055e1
  4055a0:	jne    0x4055ba
  4055a2:	test   ecx,0x891dad3f
  4055a8:	repz (bad) 
  4055ab:	xor    ebx,esi
  4055ad:	push   eax
  4055ae:	test   al,0x9a
  4055b0:	mov    edx,0x2547db23
  4055b5:	jmp    0x4648:0xf3d1bb0e
  4055bc:	adc    bl,BYTE PTR [edx-0x5c]
  4055bf:	push   ebx
  4055c0:	iret   
  4055c1:	lock mov al,0xfa
  4055c4:	js     0x405587
  4055c6:	jb     0x405604
  4055c8:	jg     0x4055be
  4055ca:	jle    0x4055e9
  4055cc:	lds    ecx,FWORD PTR [ebx+0x7c]
  4055cf:	mov    bl,0xd8
  4055d1:	push   ds
  4055d2:	sbb    al,bl
  4055d4:	(bad)  
  4055d5:	jmp    0xb62e0db2
  4055da:	mov    WORD PTR [ecx-0x7b],?
  4055dd:	das    
  4055de:	adc    DWORD PTR [edx],esp
  4055e0:	retf   
  4055e1:	test   eax,0x4ccba225
  4055e6:	mov    bh,BYTE PTR [edx]
  4055e8:	adc    dl,bl
  4055ea:	jg     0x40565e
  4055ec:	lock pcmpeqw mm0,QWORD PTR [ebx]
  4055f0:	test   BYTE PTR ds:0xa7e88ed,ah
  4055f6:	pop    esp
  4055f7:	xor    ebp,0x2d
  4055fa:	jmp    0x40565a
  4055fc:	scas   al,BYTE PTR es:[edi]
  4055fd:	scas   eax,DWORD PTR es:[edi]
  4055fe:	adc    DWORD PTR [ecx+0x47e347a6],edi
  405604:	add    al,0xdc
  405606:	or     BYTE PTR [esi+esi*4],al
  405609:	mov    edx,0xe4b3a39b
  40560e:	pop    ecx
  40560f:	(bad)  
  405610:	cld    
  405611:	pop    edx
  405612:	outs   dx,DWORD PTR ds:[esi]
  405613:	sbb    al,0x1d
  405615:	mov    BYTE PTR [ecx-0x172604d1],dh
  40561b:	add    dh,bl
  40561d:	ja     0x405609
  40561f:	sbb    al,0x3
  405621:	sub    DWORD PTR [eax-0x735d19cb],ecx
  405627:	add    DWORD PTR [edx],edx
  405629:	jg     0x4055ae
  40562b:	dec    eax
  40562c:	and    eax,0x4ac1864f
  405631:	mov    edi,0x9ce4b05a
  405636:	xor    cl,BYTE PTR [ebx+edx*2+0x4d]
  40563a:	into   
  40563b:	jl     0x40568f
  40563d:	mov    ecx,0x5e6196ce
  405642:	mov    ah,0xf9
  405644:	mov    fs,WORD PTR [edi]
  405646:	mov    ebx,0xaacdc2ac
  40564b:	jl     0x4056b3
  40564d:	push   es
  40564e:	xchg   BYTE PTR [esi-0x739af28d],ch
  405654:	fistp  WORD PTR [esi-0x21]
  405657:	xchg   ebp,eax
  405658:	pushf  
  405659:	scas   al,BYTE PTR es:[edi]
  40565a:	sub    bl,BYTE PTR [ebx-0x1c9da72]
  405660:	(bad)  
  405661:	xchg   ecx,eax
  405662:	fdiv   DWORD PTR [eax]
  405664:	push   ecx
  405665:	mov    ebx,0xa44a9c7d
  40566a:	xor    eax,DWORD PTR [ebx]
  40566c:	sub    cl,BYTE PTR [eax-0x19]
  40566f:	pop    eax
  405670:	int    0x33
  405672:	out    0xf,al
  405674:	clc    
  405675:	std    
  405676:	jbe    0x40567d
  405678:	cmp    DWORD PTR [eax+0x2d],ecx
  40567b:	ds jg  0x405673
  40567e:	sar    DWORD PTR [esi+0x482e5eed],1
  405684:	test   eax,0x4e692b79
  405689:	xor    bh,BYTE PTR [edx]
  40568b:	rcr    BYTE PTR [edx+0x65],1
  40568e:	aad    0x59
  405690:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405691:	or     dh,BYTE PTR [ebp+0x6e54acf2]
  405697:	sbb    al,0x7e
  405699:	(bad)  
  40569a:	outs   dx,BYTE PTR ds:[esi]
  40569b:	add    eax,0x26e45950
  4056a0:	sbb    BYTE PTR [ebx],dh
  4056a2:	aaa    
  4056a3:	out    dx,eax
  4056a4:	add    al,0xb6
  4056a6:	clc    
  4056a7:	pop    esp
  4056a8:	and    BYTE PTR [ecx+0x2d],dh
  4056ab:	stc    
  4056ac:	push   edi
  4056ad:	fisttp QWORD PTR [ebp+ebp*1-0x13]
  4056b1:	fldpi  
  4056b3:	cmp    edi,DWORD PTR [ebp-0x31fdb93d]
  4056b9:	inc    ebp
  4056ba:	push   0x90373fd8
  4056bf:	dec    edx
  4056c0:	xchg   edx,eax
  4056c1:	(bad)  
  4056c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056c3:	mov    esi,0xab049923
  4056c8:	cmc    
  4056c9:	in     al,0xb9
  4056cb:	cmp    BYTE PTR [ebp-0x54],ch
  4056ce:	sub    eax,0xfbf57d1f
  4056d3:	cmp    al,0xc8
  4056d5:	gs leave 
  4056d7:	pop    esp
  4056d8:	das    
  4056d9:	(bad)
  4056dc:	add    bh,BYTE PTR [eax+0x13]
  4056df:	std    
  4056e0:	aas    
  4056e1:	leave  
  4056e2:	dec    edx
  4056e3:	push   0x8d489db5
  4056e8:	push   edi
  4056e9:	or     BYTE PTR [edx],0xc
  4056ec:	retf   
  4056ed:	jns    0x40573c
  4056ef:	xchg   DWORD PTR [ebp-0x60],ecx
  4056f2:	sahf   
  4056f3:	sbb    edx,eax
  4056f5:	sbb    ch,BYTE PTR [edi+0x28]
  4056f8:	cmc    
  4056f9:	popf   
  4056fa:	ins    DWORD PTR es:[edi],dx
  4056fb:	dec    esp
  4056fc:	loope  0x4056c8
  4056fe:	mov    eax,ds:0x6d8bd02a
  405703:	sahf   
  405704:	leave  
  405705:	mov    BYTE PTR [edi-0x4d157389],bl
  40570b:	sbb    al,0xde
  40570d:	sub    DWORD PTR [ebx+0x3e],edx
  405710:	push   ds
  405711:	ins    DWORD PTR es:[edi],dx
  405712:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405713:	and    cl,0x3
  405716:	jge    0x4056d0
  405718:	(bad)  
  405719:	mov    ch,0x15
  40571b:	and    eax,0xbd1a5fca
  405720:	shr    BYTE PTR [edx],1
  405722:	xlat   BYTE PTR ds:[ebx]
  405723:	cli    
  405724:	cmp    BYTE PTR [edx+0x74],bl
  405727:	repz pop edx
  405729:	loopne 0x4056ce
  40572b:	test   BYTE PTR [ebx+0x2f],ch
  40572e:	mov    ebx,0x9241ee3a
  405733:	push   esp
  405734:	daa    
  405735:	retf   
  405736:	ins    DWORD PTR es:[edi],dx
  405737:	leave  
  405738:	int3   
  405739:	rcl    BYTE PTR [edi+ebx*2+0x71],1
  40573d:	ror    DWORD PTR [edx+0x6af6bb34],1
  405743:	or     DWORD PTR ss:[esi+0x16d7ab5c],esp
  40574a:	cld    
  40574b:	ret    0x2e6
  40574e:	cmp    edx,DWORD PTR [esi]
  405750:	mov    eax,ds:0x1d3ae58f
  405755:	pop    esi
  405756:	fcmovnu st,st(3)
  405758:	cmp    DWORD PTR [esi-0x33],esp
  40575b:	in     al,0x4f
  40575d:	loope  0x40573f
  40575f:	xchg   ebp,eax
  405760:	inc    esi
  405761:	sub    bh,BYTE PTR [ecx]
  405763:	cld    
  405764:	and    ebp,edx
  405766:	mov    ebx,0xde1fd8e8
  40576b:	lahf   
  40576c:	pop    ebx
  40576d:	adc    DWORD PTR [edx],0xffffffaf
  405770:	(bad)  
  405771:	fisttp DWORD PTR [eax]
  405773:	dec    edi
  405774:	sbb    eax,0xf4c4ce72
  405779:	dec    ebp
  40577a:	mov    bl,0x7c
  40577c:	cmp    BYTE PTR [esp+ecx*8-0x6b],0xf9
  405781:	sub    BYTE PTR [esi-0x7c],0x39
  405785:	jbe    0x405756
  405787:	pop    ebp
  405788:	arpl   WORD PTR [ebx],bp
  40578a:	sub    dl,BYTE PTR ds:0xc6f40f62
  405790:	dec    esi
  405791:	mov    ah,0x74
  405793:	gs jg  0x40575f
  405796:	mov    eax,0x7f1abdfb
  40579b:	push   ebp
  40579c:	push   ecx
  40579d:	add    DWORD PTR [ecx+ebp*1],ebx
  4057a0:	xor    cl,ah
  4057a2:	dec    esi
  4057a3:	mov    dl,0x83
  4057a5:	(bad)
  4057a9:	cdq    
  4057aa:	dec    BYTE PTR [esi]
  4057ac:	mov    ah,0x99
  4057ae:	jae    0x40582b
  4057b0:	xchg   esp,eax
  4057b1:	data16 fimul WORD PTR [esi+edi*4]
  4057b5:	fwait
  4057b6:	pop    ecx
  4057b7:	and    bh,BYTE PTR [edi]
  4057b9:	test   al,0xfc
  4057bb:	rcl    edx,0xb7
  4057be:	sub    ch,BYTE PTR [eax+0x59]
  4057c1:	push   ebp
  4057c2:	sar    BYTE PTR [esi-0x6d],0x14
  4057c6:	or     eax,esi
  4057c8:	ins    DWORD PTR es:[di],dx
  4057ca:	shr    bh,cl
  4057cc:	or     bh,BYTE PTR [ecx+esi*8+0x47]
  4057d0:	mov    edx,0x6c631753
  4057d5:	push   ds
  4057d6:	pop    ebp
  4057d7:	iret   
  4057d8:	jb     0x405800
  4057da:	adc    al,0xbf
  4057dc:	push   esp
  4057dd:	mul    DWORD PTR [ebx]
  4057df:	jl     0x4057e0
  4057e1:	lea    ebp,[ebx+edx*2+0x56bc1229]
  4057e8:	out    0x39,al
  4057ea:	xor    ecx,DWORD PTR [ebp+0x28be9d9c]
  4057f0:	retf   
  4057f1:	mov    bl,0x62
  4057f3:	sub    DWORD PTR [edx-0x56],esp
  4057f6:	imul   edi,DWORD PTR [eax-0x790f3e13],0xac372fc9
  405800:	out    0xf9,al
  405802:	adc    eax,0x7afd4404
  405807:	push   es
  405808:	aad    0xe6
  40580a:	rep outs dx,DWORD PTR ds:[esi]
  40580c:	cmp    ecx,0xffffffd1
  40580f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405810:	adc    edx,DWORD PTR [ebx+ebx*8]
  405813:	popf   
  405814:	test   eax,0xa8bcda67
  405819:	dec    esi
  40581a:	les    ebp,FWORD PTR [eax+0x17]
  40581d:	or     ch,BYTE PTR [ebx]
  40581f:	cld    
  405820:	shl    edx,0x1e
  405823:	dec    eax
  405824:	pusha  
  405825:	or     DWORD PTR [edx+eiz*4+0x56],esp
  405829:	aaa    
  40582a:	ja     0x4057f1
  40582c:	ret    
  40582d:	push   0x9eab03a6
  405832:	loope  0x405848
  405834:	pop    ebx
  405835:	clc    
  405836:	xchg   ebp,eax
  405837:	dec    esp
  405838:	jne    0x405815
  40583a:	jp     0x40582a
  40583c:	cwde   
  40583d:	xor    dh,BYTE PTR [edx+eiz*1]
  405840:	adc    edi,DWORD PTR [edi-0xc8a7d64]
  405846:	xchg   edi,eax
  405847:	jmp    0x53857ce2
  40584c:	mov    al,0xba
  40584e:	push   0x19
  405850:	mov    ds:0xf735b40c,al
  405855:	ins    DWORD PTR es:[edi],dx
  405856:	add    DWORD PTR [edx+0x43],ecx
  405859:	xor    DWORD PTR [ebx],edi
  40585b:	scas   al,BYTE PTR es:[edi]
  40585c:	loop   0x4058c2
  40585e:	imul   esp,DWORD PTR [eax+eax*2-0x28],0x5b960149
  405866:	push   edx
  405867:	ret    0xc9a9
  40586a:	pop    ebp
  40586b:	ins    DWORD PTR es:[edi],dx
  40586c:	dec    edx
  40586d:	push   0x59
  40586f:	or     eax,0xcb1f0e11
  405874:	push   cs
  405875:	(bad)  
  405876:	push   0x808348d
  40587b:	(bad)  
  40587c:	adc    ah,bl
  40587e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40587f:	or     DWORD PTR ds:0xc5167ee2,eax
  405885:	stos   BYTE PTR es:[edi],al
  405886:	arpl   WORD PTR [ebx+0x53],bx
  405889:	es jns 0x40583b
  40588c:	mov    ebx,ebp
  40588e:	jo     0x4058e7
  405890:	addr16 add al,0x1d
  405893:	push   edi
  405894:	hlt    
  405895:	pop    eax
  405896:	add    eax,0x20026e51
  40589b:	jbe    0x40582e
  40589d:	add    eax,edi
  40589f:	icebp  
  4058a0:	fwait
  4058a1:	data16 and BYTE PTR [ebp-0x39256d3a],cl
  4058a8:	jl     0x405858
  4058aa:	out    dx,eax
  4058ab:	vmwrite esi,DWORD PTR ds:0x28095a91
  4058b2:	cmp    DWORD PTR [edi],eax
  4058b4:	test   DWORD PTR ds:0xb06cc2fe,0xbb3e6dec
  4058be:	cmp    eax,0x9970f883
  4058c3:	push   edx
  4058c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058c5:	add    esp,0x8bd11c08
  4058cb:	sbb    eax,0x6b27d9a7
  4058d0:	push   0x1e501392
  4058d5:	mov    edx,0xc7cb344
  4058da:	mov    ecx,0x8f8ea4c5
  4058df:	fs xchg ebp,eax
  4058e1:	push   esi
  4058e2:	or     edx,edi
  4058e4:	call   0xb0afc84d
  4058e9:	push   ss
  4058ea:	sar    edi,1
  4058ec:	and    dl,BYTE PTR [edi]
  4058ee:	jbe    0x405911
  4058f0:	out    dx,eax
  4058f1:	xor    ah,al
  4058f3:	jge    0x40588b
  4058f5:	ja     0x405898
  4058f7:	icebp  
  4058f8:	jno    0x405940
  4058fa:	mov    dl,0xd1
  4058fc:	retf   0xb0f8
  4058ff:	push   ebx
  405900:	dec    eax
  405901:	popa   
  405902:	pushw  cs
  405904:	xor    DWORD PTR [edi-0x41],edi
  405907:	mov    ebx,0xccb1c1bd
  40590c:	into   
  40590d:	repnz scas eax,DWORD PTR es:[edi]
  40590f:	cdq    
  405910:	stc    
  405911:	mov    cl,BYTE PTR [eax+0x32]
  405914:	push   cs
  405915:	mov    esp,0x322fd63f
  40591a:	ins    BYTE PTR es:[edi],dx
  40591b:	sbb    eax,0xd0e93c27
  405920:	lods   eax,DWORD PTR ds:[esi]
  405921:	hlt    
  405922:	xor    dl,BYTE PTR [ecx]
  405924:	stc    
  405925:	mov    al,ds:0x513120c5
  40592a:	xor    edi,DWORD PTR [ebp-0x7d]
  40592d:	inc    esp
  40592e:	inc    ebx
  40592f:	pushf  
  405930:	jae    0x40592d
  405932:	or     BYTE PTR [ebx],bl
  405934:	pop    esp
  405935:	mov    WORD PTR es:[ebx-0x36b3fdc],gs
  40593c:	sbb    BYTE PTR [esi],dl
  40593e:	push   edx
  40593f:	pop    ecx
  405940:	bound  edx,QWORD PTR ds:0x4256a8d6
  405946:	push   eax
  405947:	int3   
  405948:	mov    ds:0x302118b2,al
  40594d:	ins    BYTE PTR es:[edi],dx
  40594e:	pop    eax
  40594f:	mov    eax,ds:0x2fadb8f6
  405954:	add    al,0xf7
  405956:	push   esi
  405957:	repz xor al,0x93
  40595a:	push   ebx
  40595b:	cld    
  40595c:	adc    DWORD PTR [ebx+0x15],edi
  40595f:	xchg   ecx,eax
  405960:	imul   ebx,DWORD PTR [ecx-0x2a1be3f5],0x18
  405967:	out    dx,al
  405968:	aad    0xaf
  40596a:	and    eax,edx
  40596c:	lds    ebp,FWORD PTR [esi-0x1c]
  40596f:	arpl   WORD PTR [esi-0x2f],si
  405972:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405973:	stos   BYTE PTR es:[edi],al
  405974:	pop    ebx
  405975:	sbb    ebx,ebx
  405977:	pop    esi
  405978:	mov    ah,0x12
  40597a:	cmp    al,0x2
  40597c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40597d:	and    eax,0x1f16fbb7
  405982:	sti    
  405983:	fwait
  405984:	dec    ebp
  405985:	out    dx,eax
  405986:	das    
  405987:	iret   
  405988:	popa   
  405989:	add    eax,0x8e9574f6
  40598e:	aas    
  40598f:	pop    ebp
  405990:	add    bl,BYTE PTR [eax-0x68]
  405993:	(bad)  
  405994:	xor    DWORD PTR [ecx+eax*4+0x60728a3b],edx
  40599b:	icebp  
  40599c:	and    BYTE PTR [esi],al
  40599e:	xor    ch,cl
  4059a0:	cmp    eax,0x3934b21b
  4059a5:	into   
  4059a6:	mov    ch,0x44
  4059a8:	aas    
  4059a9:	push   edx
  4059aa:	xchg   ch,dh
  4059ac:	sub    eax,0x63e5a66c
  4059b1:	and    BYTE PTR [eax],ch
  4059b3:	or     BYTE PTR [ecx+0x78],cl
  4059b6:	leave  
  4059b7:	popa   
  4059b8:	mov    ds:0x4111f089,al
  4059bd:	inc    esi
  4059be:	mov    cl,0xf4
  4059c0:	leave  
  4059c1:	sbb    edx,eax
  4059c3:	(bad)  
  4059c4:	jmp    0x4059ed
  4059c6:	jmp    FWORD PTR [esi]
  4059c8:	or     dl,al
  4059ca:	sbb    BYTE PTR [eax+0x1d8c2252],bh
  4059d0:	pop    ebp
  4059d1:	push   edi
  4059d2:	loopne 0x405960
  4059d4:	mov    al,ds:0xef3e8db
  4059d9:	jl     0x4059f0
  4059db:	into   
  4059dc:	and    bl,cl
  4059de:	mov    edx,0xde9de38d
  4059e3:	mov    ebp,0x95b039aa
  4059e8:	in     eax,0x71
  4059ea:	xchg   ecx,eax
  4059eb:	test   edx,ebx
  4059ed:	jge    0x405979
  4059ef:	inc    eax
  4059f0:	clc    
  4059f1:	test   al,0xa1
  4059f4:	inc    ecx
  4059f5:	fnstsw WORD PTR [edi+0x592281ee]
  4059fb:	mov    bl,0x6f
  4059fd:	or     edx,DWORD PTR cs:[ecx]
  405a00:	mov    ds,WORD PTR [ecx]
  405a02:	jle    0x4059bc
  405a04:	inc    esp
  405a05:	ss xor al,0x15
  405a08:	cs add ebp,ebx
  405a0b:	or     eax,0xb3c2ca25
  405a10:	inc    ecx
  405a11:	dec    ebp
  405a12:	in     eax,dx
  405a13:	lea    ecx,[edx+0x12ae86bc]
  405a19:	sub    DWORD PTR [ecx+eiz*4-0x6ac2856d],0xe3cf899c
  405a24:	sub    al,0xf7
  405a26:	xor    esp,DWORD PTR [ecx+0x7f]
  405a29:	jnp    0x405a66
  405a2b:	fisttp WORD PTR [eax]
  405a2d:	shr    BYTE PTR [esi-0x57963779],1
  405a33:	iret   
  405a34:	call   0x42823903
  405a39:	or     DWORD PTR [edx],ebp
  405a3b:	push   es
  405a3c:	mov    ch,0x75
  405a3e:	lea    edx,[edx]
  405a40:	push   0x1b459c09
  405a45:	ret    0xcccc
  405a48:	dec    edx
  405a49:	aaa    
  405a4a:	cld    
  405a4b:	and    bh,0x8c
  405a4e:	sbb    al,0xce
  405a50:	into   
  405a51:	(bad)  
  405a52:	lahf   
  405a53:	js     0x405a4b
  405a55:	sub    edi,esp
  405a57:	sub    BYTE PTR [eax-0x2a913c5a],bl
  405a5d:	xor    edx,DWORD PTR [ebx-0x23]
  405a60:	mov    DWORD PTR [ebx+0x45],0xb0f377d3
  405a67:	xchg   BYTE PTR [eax+0xcded3e4],dl
  405a6d:	pop    esi
  405a6e:	aam    0xcd
  405a70:	sbb    ecx,DWORD PTR [edx-0x1f6c0583]
  405a76:	(bad)  
  405a77:	sbb    edx,edi
  405a79:	mov    esi,0x881be73f
  405a7e:	inc    ecx
  405a7f:	xchg   edi,eax
  405a80:	xor    DWORD PTR [ebx],ebp
  405a82:	frstor [ecx]
  405a84:	pop    edi
  405a85:	sub    BYTE PTR [edi+0x2c43f7a7],0x3d
  405a8c:	sar    BYTE PTR [ecx+0x48],0x55
  405a90:	ins    BYTE PTR es:[edi],dx
  405a91:	xor    DWORD PTR [ecx+0x5dcf9b44],0xce0eefa
  405a9b:	cmp    ch,BYTE PTR [edx]
  405a9d:	dec    ecx
  405a9f:	mov    ch,BYTE PTR [esi-0x44]
  405aa2:	into   
  405aa3:	pop    ebp
  405aa4:	imul   eax
  405aa6:	mov    WORD PTR [ebx-0x2e],?
  405aa9:	sub    al,0x91
  405aab:	in     al,0x37
  405aad:	out    0xdf,eax
  405aaf:	idiv   BYTE PTR [ebx]
  405ab1:	jb     0x405ae1
  405ab3:	mov    dh,0x66
  405ab5:	and    DWORD PTR [esi+0x1b],edx
  405ab8:	dec    eax
  405ab9:	clc    
  405aba:	nop
  405abb:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  405abd:	mov    al,0x4e
  405abf:	sub    BYTE PTR es:[eax-0x2e6ee8d6],dh
  405ac6:	jmp    0xf59:0xf08d6837
  405acd:	jo     0x405a68
  405acf:	add    ah,0xe1
  405ad2:	les    ecx,FWORD PTR [edx-0x10554920]
  405ad8:	repnz sub DWORD PTR [ebx+0x6c],edx
  405adc:	sub    ebx,DWORD PTR [edx+ebx*1]
  405adf:	fbld   TBYTE PTR [ecx-0x6b4792ea]
  405ae5:	xor    eax,0x8a8af4c3
  405aea:	aaa    
  405aeb:	mov    cl,0xb0
  405aed:	fnsave [esi+0x305319ed]
  405af3:	adc    ah,0x2
  405af6:	or     eax,0x58c24514
  405afb:	or     BYTE PTR [eax+0x18],bh
  405afe:	loope  0x405b16
  405b00:	pop    es
  405b01:	rcl    DWORD PTR [edi+0x4ebc35d4],1
  405b07:	fiadd  WORD PTR [esi]
  405b09:	ja     0x405a8d
  405b0b:	sti    
  405b0c:	scas   al,BYTE PTR es:[edi]
  405b0d:	shl    esi,1
  405b0f:	inc    ecx
  405b10:	cmp    DWORD PTR [ebp-0x2df3584d],0x4f02bce8
  405b1a:	aad    0x29
  405b1c:	enter  0xd846,0x6
  405b20:	adc    edi,esp
  405b22:	push   edi
  405b23:	loop   0x405b85
  405b25:	push   es
  405b26:	inc    ebx
  405b27:	adc    edx,ebx
  405b29:	loope  0x405b54
  405b2b:	(bad)  
  405b2c:	mov    al,ds:0x5f6bab9d
  405b31:	ficomp DWORD PTR [esi-0x2b08ff48]
  405b37:	loop   0x405b4b
  405b39:	pop    edi
  405b3a:	sub    al,BYTE PTR [ecx+0xd]
  405b3d:	cdq    
  405b3e:	clts   
  405b40:	and    BYTE PTR [ecx+0x4b],dl
  405b43:	pop    ebp
  405b44:	mov    ebp,DWORD PTR [edi+0x3882aae2]
  405b4a:	sti    
  405b4b:	xacquire xchg BYTE PTR [esi+eiz*4],bh
  405b4f:	mov    al,ds:0xa8e1a529
  405b54:	sbb    DWORD PTR [eax],0x660b528f
  405b5a:	dec    esp
  405b5b:	rcr    BYTE PTR [eax-0x33c570d1],1
  405b61:	cdq    
  405b62:	dec    esi
  405b63:	ret    
  405b64:	outs   dx,BYTE PTR ds:[esi]
  405b65:	cld    
  405b66:	je     0x405aea
  405b68:	sahf   
  405b69:	data16 loopne 0x405bcd
  405b6c:	inc    ecx
  405b6d:	add    al,0x66
  405b6f:	ret    
  405b70:	mov    DWORD PTR ds:0x8554ed73,ecx
  405b76:	loop   0x405b5c
  405b78:	jecxz  0x405bcb
  405b7a:	and    ecx,DWORD PTR [edx+0x2f37c416]
  405b80:	div    BYTE PTR [eax+ebp*8+0x7e2bdef9]
  405b87:	push   esp
  405b88:	idiv   DWORD PTR [ecx+0x2d]
  405b8b:	mov    edi,0xd255332a
  405b90:	mov    ah,0xac
  405b92:	in     al,dx
  405b93:	out    0xa1,eax
  405b95:	mov    edi,0x5538b947
  405b9a:	dec    ebp
  405b9b:	mov    dl,0xc9
  405b9d:	call   0x5351a802
  405ba2:	push   edx
  405ba3:	jmp    0xd3594c0a
  405ba8:	frstor [esi+0x6713be4f]
  405bae:	ret    
  405baf:	mov    edi,0x58b8225d
  405bb4:	fild   QWORD PTR [edx-0x400b2b14]
  405bba:	xchg   edx,eax
  405bbb:	fwait
  405bbc:	mov    DWORD PTR [edi],ecx
  405bbe:	(bad)  
  405bbf:	mov    al,ds:0x584f90f7
  405bc4:	mov    esi,0x1c1586b7
  405bc9:	push   ecx
  405bca:	pop    ecx
  405bcb:	or     al,0xc4
  405bcd:	and    BYTE PTR [edx],0xe
  405bd0:	push   esp
  405bd1:	mov    ebp,0x892bba39
  405bd6:	lds    ebx,FWORD PTR [esi+0xe]
  405bd9:	push   ecx
  405bda:	jns    0x405b74
  405bdc:	shl    BYTE PTR [ebp+0x67],1
  405bdf:	pusha  
  405be0:	jae    0x405b71
  405be2:	jnp    0x405bf8
  405be4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405be5:	jp     0x405b7f
  405be7:	scas   al,BYTE PTR es:[edi]
  405be8:	push   0x3a
  405bea:	dec    edi
  405beb:	je     0x405bd2
  405bed:	mov    WORD PTR [ecx],?
  405bef:	xor    al,0x65
  405bf1:	lock pop ss
  405bf3:	push   esi
  405bf4:	loopne 0x405c48
  405bf6:	pop    ebp
  405bf7:	push   ebx
  405bf8:	out    dx,eax
  405bf9:	jmp    0xb57c:0x172a5cac
  405c00:	ds mov ebx,0x31af9175
  405c06:	sub    bl,bh
  405c08:	jmp    0x405c1c
  405c0a:	xchg   esp,eax
  405c0b:	hlt    
  405c0c:	scas   eax,DWORD PTR es:[edi]
  405c0d:	mov    bh,0x2a
  405c0f:	xchg   edi,eax
  405c10:	add    ecx,esp
  405c12:	or     bl,bh
  405c14:	out    dx,eax
  405c15:	ret    0x60f3
  405c18:	mov    ebp,0xdb53c5d8
  405c1d:	inc    esi
  405c1e:	push   ecx
  405c1f:	pop    esp
  405c20:	jb     0x405c79
  405c22:	push   0xbc8d7a9a
  405c27:	inc    esp
  405c28:	adc    DWORD PTR [ebx],ebp
  405c2a:	lods   eax,DWORD PTR ds:[esi]
  405c2b:	cmc    
  405c2c:	jle    0x405c9f
  405c2e:	retf   0x35d0
  405c31:	in     al,dx
  405c32:	push   edx
  405c33:	in     eax,dx
  405c34:	mov    dl,0xcf
  405c36:	mov    al,0xe3
  405c38:	pop    ecx
  405c39:	push   0xa5726094
  405c3e:	jo     0x405bd0
  405c40:	mov    bh,0x9f
  405c42:	sub    al,0xa1
  405c44:	aas    
  405c45:	xchg   ecx,eax
  405c46:	mov    ebx,0x7ccc9603
  405c4b:	adc    eax,0x3747f1ef
  405c50:	outs   dx,BYTE PTR ds:[esi]
  405c51:	jmp    0x1f7b:0xe1f587c0
  405c58:	inc    edi
  405c59:	mov    bl,BYTE PTR [ecx-0x75]
  405c5c:	mov    ch,0x6b
  405c5e:	dec    esi
  405c5f:	stc    
  405c60:	xchg   BYTE PTR [esp+edi*8],dl
  405c63:	mov    dh,0xbb
  405c65:	or     dh,BYTE PTR [esi-0x5f]
  405c68:	ins    BYTE PTR es:[edi],dx
  405c69:	hlt    
  405c6a:	dec    ecx
  405c6b:	loope  0x405c09
  405c6d:	out    dx,eax
  405c6e:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  405c70:	je     0x405cbe
  405c72:	jb     0x405cc4
  405c74:	xor    edx,edx
  405c76:	jns    0x405c06
  405c78:	jmp    0x3863:0xf9f3b5
  405c7f:	jae    0x405c78
  405c81:	pusha  
  405c82:	sub    bl,ch
  405c84:	push   ebp
  405c85:	xchg   esp,eax
  405c86:	loopne 0x405cc3
  405c88:	cmp    edx,ebp
  405c8a:	dec    edx
  405c8b:	sbb    eax,0x268689af
  405c90:	dec    ebp
  405c91:	scas   al,BYTE PTR es:[edi]
  405c92:	push   0xebf485c2
  405c97:	mov    ah,ah
  405c99:	add    DWORD PTR [edi+0x21d120db],edi
  405c9f:	das    
  405ca0:	(bad)  
  405ca2:	push   ebx
  405ca3:	rcl    edi,1
  405ca5:	or     esi,edi
  405ca7:	pushf  
  405ca8:	cmp    al,al
  405caa:	jae    0x405cbb
  405cac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cad:	push   esi
  405cae:	imul   edx,DWORD PTR [ecx],0xa40aa251
  405cb4:	dec    esp
  405cb5:	mov    edi,0x8991f328
  405cba:	dec    ebx
  405cbb:	lahf   
  405cbc:	lds    esp,FWORD PTR [ebp-0x1d3dcf09]
  405cc2:	test   al,0xa7
  405cc4:	xor    eax,DWORD PTR [edi+0x37]
  405cc7:	push   eax
  405cc8:	ds jb  0x405d00
  405ccb:	test   BYTE PTR [edx+0x11da2891],ah
  405cd1:	test   DWORD PTR [ebx+0x2],eax
  405cd4:	icebp  
  405cd5:	clc    
  405cd6:	iret   
  405cd7:	pop    ebx
  405cd8:	xor    BYTE PTR [eax-0x4da7fec8],dh
  405cde:	dec    ebx
  405cdf:	ret    
  405ce0:	(bad)  
  405ce1:	iret   
  405ce2:	dec    edx
  405ce3:	cmp    edi,DWORD PTR [edi]
  405ce5:	jg     0x405c68
  405ce7:	fstp   DWORD PTR [ebp+eax*1-0x6953c646]
  405cee:	(bad)  
  405cef:	mov    ebp,0x463b204
  405cf4:	or     eax,0x544032fb
  405cf9:	aam    0x3a
  405cfb:	xlat   BYTE PTR ds:[ebx]
  405cfc:	enter  0x18e3,0xf
  405d00:	or     eax,0xb40393c5
  405d05:	adc    edi,DWORD PTR [esi+0x2cf8dcdd]
  405d0b:	lods   al,BYTE PTR ds:[esi]
  405d0c:	xchg   esp,eax
  405d0d:	dec    ebx
  405d0e:	push   ds
  405d0f:	push   edx
  405d10:	ficom  WORD PTR [ecx-0x40]
  405d13:	xchg   esi,eax
  405d14:	das    
  405d15:	pop    ecx
  405d16:	inc    eax
  405d17:	ror    BYTE PTR [edi+0x6c8fa8f9],cl
  405d1d:	sub    eax,DWORD PTR [ecx+0x64]
  405d20:	je     0x405cc2
  405d22:	enter  0x12c2,0x4d
  405d26:	pop    edx
  405d27:	fstp   QWORD PTR [esi+ebp*4-0x3d]
  405d2b:	sub    WORD PTR [ebp-0x71a5d924],sp
  405d32:	out    0x45,eax
  405d34:	mov    BYTE PTR [ebp+0x1],ah
  405d37:	dec    ecx
  405d38:	in     eax,dx
  405d39:	push   cs
  405d3a:	xor    edx,0x37
  405d3d:	pop    ebx
  405d3e:	mov    BYTE PTR [edx],ch
  405d40:	mov    ecx,0x8580beb7
  405d45:	ss fwait
  405d47:	repz and BYTE PTR [eax],dl
  405d4a:	daa    
  405d4b:	push   eax
  405d4c:	inc    edi
  405d4d:	jl     0x405d57
  405d4f:	imul   ebp,DWORD PTR [edx-0x8a6a708],0xe55c496f
  405d59:	inc    eax
  405d5a:	aam    0x8b
  405d5c:	add    eax,0x64542c58
  405d61:	sub    bl,BYTE PTR [ebx-0x473bb5a5]
  405d67:	retf   
  405d68:	mov    es,WORD PTR [ebp+0x42]
  405d6b:	fiadd  WORD PTR [esi]
  405d6d:	pop    DWORD PTR ds:0xc3073c2d
  405d73:	xchg   edx,eax
  405d74:	adc    ebx,DWORD PTR [edx]
  405d76:	xor    BYTE PTR [ebp-0x3f],al
  405d79:	es repnz sub eax,ebp
  405d7d:	stc    
  405d7e:	mov    ss,WORD PTR [esi]
  405d80:	or     al,bl
  405d82:	pop    ebp
  405d83:	aam    0x74
  405d85:	jl     0x405d91
  405d87:	push   es
  405d88:	pop    edi
  405d89:	int    0x8
  405d8b:	into   
  405d8c:	outs   dx,BYTE PTR ds:[esi]
  405d8d:	test   eax,0x9e0f484b
  405d92:	sbb    al,0x44
  405d94:	push   es
  405d95:	and    ah,bh
  405d97:	and    eax,0x8f1e60b8
  405d9c:	pop    ebp
  405d9d:	xlat   BYTE PTR ds:[ebx]
  405d9e:	(bad)  
  405d9f:	aam    0x26
  405da1:	cmp    DWORD PTR [ebp+0x34],eax
  405da4:	mov    edx,0x21191e8e
  405da9:	or     al,0x73
  405dab:	add    edi,edx
  405dad:	pop    eax
  405dae:	xor    eax,0xfc859cb0
  405db3:	dec    edx
  405db4:	mov    ds,esi
  405db6:	and    eax,DWORD PTR [edx+0x23bc703c]
  405dbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405dbd:	jb     0x405d52
  405dbf:	lock hlt 
  405dc1:	sub    dl,BYTE PTR [ebx]
  405dc3:	sbb    DWORD PTR [ebx+0x28623d16],edx
  405dc9:	rcr    DWORD PTR [ecx],0x41
  405dcc:	lods   eax,DWORD PTR ds:[esi]
  405dcd:	xchg   ebp,eax
  405dce:	pop    edi
  405dcf:	mov    eax,ds:0x92e7723
  405dd4:	outs   dx,DWORD PTR ds:[esi]
  405dd5:	test   eax,0xd4275194
  405dda:	addr16 inc ebp
  405ddc:	clc    
  405ddd:	mov    edi,0x5facdb7d
  405de2:	loopne 0x405e58
  405de4:	push   ss
  405de5:	mov    ch,0xed
  405de7:	push   eax
  405de8:	adc    DWORD PTR [edi+0x49],esp
  405deb:	sbb    BYTE PTR [ebp-0x229f10c2],dl
  405df1:	adc    BYTE PTR [ebp+eax*1-0x6f],al
  405df5:	nop
  405df6:	(bad)  
  405df7:	dec    edx
  405df8:	pushf  
  405df9:	aad    0xe2
  405dfb:	add    eax,DWORD PTR [edx+0x0]
  405dfe:	mov    dh,cl
  405e00:	and    DWORD PTR [edx+0x53e16b06],edi
  405e06:	and    edx,DWORD PTR [edx+eax*1-0x5d5e8aa]
  405e0d:	shl    DWORD PTR [edx+0x2e0b67dd],1
  405e13:	sub    BYTE PTR [edx],bl
  405e15:	lods   eax,DWORD PTR ds:[esi]
  405e16:	rol    eax,1
  405e18:	or     eax,0x92381c01
  405e1d:	outs   dx,DWORD PTR ds:[esi]
  405e1e:	cmp    cl,BYTE PTR [ecx]
  405e20:	xor    DWORD PTR [ebx-0x24],edi
  405e23:	in     al,0x13
  405e25:	retf   
  405e26:	mov    ds:0x7d68cebd,eax
  405e2b:	test   eax,0x6ad1cb54
  405e30:	mov    eax,ds:0x5f4a9b66
  405e35:	or     DWORD PTR [edi-0x60],0xa1c40747
  405e3c:	xor    DWORD PTR [esi],0xffffffb0
  405e3f:	shr    bh,1
  405e41:	cmp    BYTE PTR [edx+ebp*4+0x1],dl
  405e45:	cdq    
  405e46:	or     ebx,DWORD PTR [edx+0x4]
  405e49:	push   ebp
  405e4a:	mov    ebx,0xc3a64977
  405e4f:	mov    dh,0x7
  405e51:	dec    ebx
  405e52:	push   edx
  405e53:	xor    bl,ah
  405e55:	or     dh,cl
  405e57:	mov    al,0xae
  405e59:	mov    esi,0xec2457f0
  405e5e:	ds aam 0x8c
  405e61:	cmp    BYTE PTR [edi-0x11],bl
  405e64:	daa    
  405e65:	mov    edx,0xb46166c2
  405e6a:	cld    
  405e6b:	in     al,0x3e
  405e6d:	(bad)  
  405e6e:	mov    ch,0xee
  405e70:	les    esi,FWORD PTR [ebx+0x34]
  405e73:	mov    esi,0xc807e210
  405e78:	stc    
  405e79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e7a:	into   
  405e7b:	adc    al,0xcf
  405e7d:	mov    dl,0x6e
  405e7f:	cli    
  405e80:	dec    ebx
  405e81:	in     al,dx
  405e82:	scas   al,BYTE PTR es:[edi]
  405e83:	dec    edx
  405e84:	and    BYTE PTR [esi],dh
  405e86:	fidivr DWORD PTR [eax+0x75]
  405e89:	inc    eax
  405e8a:	cmp    DWORD PTR [edx-0x20],edx
  405e8d:	cli    
  405e8e:	cmp    DWORD PTR [esi-0x5c],ecx
  405e91:	sbb    eax,0xeb9e4a4a
  405e96:	idiv   BYTE PTR [eax-0x107ba87b]
  405e9c:	or     eax,0x5f
  405e9f:	mov    edi,es
  405ea1:	ja     0x405e52
  405ea3:	mov    ebx,0x29ab024
  405ea8:	and    ch,BYTE PTR [eax]
  405eaa:	fild   DWORD PTR [ecx-0x2f8ca15b]
  405eb0:	(bad)  
  405eb2:	(bad)  
  405eb3:	das    
  405eb4:	int3   
  405eb5:	enter  0xe6b7,0x99
  405eb9:	sub    edx,DWORD PTR [edx]
  405ebb:	adc    ecx,DWORD PTR [edi+ecx*8+0x3d]
  405ebf:	adc    al,0xf7
  405ec1:	mov    ds:0x70115d32,al
  405ec6:	mov    eax,0x19979a6a
  405ecb:	pop    eax
  405ecc:	std    
  405ecd:	pop    ds
  405ece:	cmp    al,0x5e
  405ed0:	pop    ecx
  405ed1:	and    al,0x98
  405ed3:	mov    esi,0x51733b76
  405ed8:	popf   
  405ed9:	dec    ecx
  405eda:	mov    ebp,0xeae3e5be
  405edf:	sbb    bh,dh
  405ee1:	cld    
  405ee2:	mov    ds:0xa7d8cd74,eax
  405ee7:	pop    edx
  405ee8:	xor    bl,BYTE PTR ds:0xb12e8b54
  405eee:	imul   ecx,esp,0x8c097c74
  405ef4:	jge    0x405f5b
  405ef6:	loop   0x405f6c
  405ef8:	sub    al,0xce
  405efa:	or     BYTE PTR [edi],cl
  405efc:	inc    ecx
  405efd:	push   0x43400aaf
  405f02:	das    
  405f03:	and    WORD PTR [ecx],di
  405f06:	jmp    0x80:0x32921928
  405f0d:	push   esp
  405f0e:	inc    ebx
  405f0f:	(bad)  
  405f10:	int    0x7d
  405f12:	xor    DWORD PTR [esi+0x612a187b],0xc7f5c434
  405f1c:	cdq    
  405f1d:	test   DWORD PTR [ebp-0x8],ebx
  405f20:	push   edi
  405f21:	lahf   
  405f22:	test   bl,bl
  405f24:	jo     0x405eec
  405f26:	mov    ds:0x3c7d9993,al
  405f2b:	mov    cl,BYTE PTR [ecx+0x1ac5ceb1]
  405f31:	mov    ch,0x6b
  405f33:	rcr    BYTE PTR [edx],0x74
  405f36:	mov    dl,0x4
  405f38:	repz hlt 
  405f3a:	(bad)  
  405f3c:	mov    al,ds:0xf9703005
  405f41:	mov    bl,0xa5
  405f43:	sbb    DWORD PTR [ebx-0x7fc27550],ecx
  405f49:	jle    0x405f0c
  405f4b:	sbb    BYTE PTR [edx],dh
  405f4d:	sar    DWORD PTR [ebx+ebp*1],cl
  405f50:	into   
  405f51:	mov    al,ds:0xbf7f927c
  405f56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f57:	sub    al,BYTE PTR [eax-0x7a]
  405f5a:	cmp    esi,0x13117966
  405f60:	xchg   esi,eax
  405f61:	sub    esi,esi
  405f63:	cmp    eax,0xc465fbe
  405f68:	mov    dh,0x79
  405f6a:	imul   edi,DWORD PTR [edx+0xd663d3b],0x99fb9b89
  405f74:	adc    BYTE PTR [edx],ch
  405f76:	or     al,0x90
  405f78:	pushf  
  405f79:	pusha  
  405f7a:	sub    BYTE PTR cs:[eax],bh
  405f7d:	pop    es
  405f7e:	lods   eax,DWORD PTR ds:[esi]
  405f7f:	jmp    0x3266:0x53fa9511
  405f86:	mov    bl,BYTE PTR ds:0x5e544f5f
  405f8c:	or     eax,0xea80118e
  405f91:	adc    BYTE PTR [esp+ebp*2],ah
  405f94:	cmc    
  405f95:	(bad)  
  405f96:	pavgb  mm2,QWORD PTR [ebx]
  405f99:	into   
  405f9a:	jmp    0x6f58f886
  405f9f:	aad    0x7b
  405fa1:	or     al,0x3
  405fa3:	data16 ss std 
  405fa6:	nop
  405fa7:	dec    ebx
  405fa8:	dec    ecx
  405fa9:	add    eax,0xf1575441
  405fae:	addr16 mov ds:0xf420,al
  405fb2:	mov    dl,0x19
  405fb4:	popa   
  405fb5:	mov    esi,0x9bfa48c2
  405fba:	aas    
  405fbb:	outs   dx,DWORD PTR ds:[esi]
  405fbc:	addr16 pop esi
  405fbe:	retf   0x9439
  405fc1:	call   0x437cec1e
  405fc6:	fidiv  DWORD PTR [ebx]
  405fc8:	inc    esp
  405fc9:	xchg   ebp,eax
  405fca:	push   edi
  405fcb:	jecxz  0x405f5f
  405fcd:	arpl   WORD PTR [eax-0xd03fd43],cx
  405fd3:	es push ecx
  405fd5:	hlt    
  405fd6:	cmp    DWORD PTR [edi-0x40],0x2e5033b7
  405fdd:	cs inc eax
  405fdf:	int    0xe6
  405fe1:	or     al,0x40
  405fe3:	adc    al,0xa5
  405fe5:	cmp    ch,BYTE PTR [ecx]
  405fe7:	mov    ch,0xa1
  405fe9:	stos   DWORD PTR es:[edi],eax
  405fea:	jb     0x406066
  405fec:	mov    ch,0x4c
  405fee:	cmp    bl,BYTE PTR [eax+0x44924737]
  405ff4:	or     al,0x67
  405ff6:	xchg   edi,eax
  405ff7:	fsub   st,st(0)
  405ff9:	sbb    eax,0x97f96fb9
  405ffe:	sbb    dh,BYTE PTR [edx+0x62]
  406001:	std    
  406002:	jmp    0x752ebb44
  406007:	push   edx
  406008:	std    
  406009:	xchg   BYTE PTR [esi-0x4f463049],dh
  40600f:	pop    ebx
  406010:	mov    edx,DWORD PTR [ebp-0x12]
  406013:	mov    ebp,0x2f69b5c0
  406018:	jne    0x405fc5
  40601a:	stos   BYTE PTR es:[edi],al
  40601b:	cmc    
  40601c:	ret    
  40601d:	lods   eax,DWORD PTR ds:[esi]
  40601e:	sub    bl,BYTE PTR [edi]
  406020:	mov    cl,0xb8
  406022:	sbb    dh,cl
  406024:	adc    al,0x79
  406026:	fistp  DWORD PTR [eax+eiz*4]
  406029:	pop    edx
  40602a:	mov    esi,0x863c6f02
  40602f:	jbe    0x406015
  406031:	(bad)  
  406032:	jbe    0x4060b2
  406034:	ror    BYTE PTR [eax+0x6bd803f5],cl
  40603a:	mov    DWORD PTR [eax+eax*8],esp
  40603d:	lods   eax,DWORD PTR ds:[esi]
  40603e:	inc    DWORD PTR [edi]
  406040:	cmp    DWORD PTR [esi+0x1ef147ac],0xead0a57b
  40604a:	xor    eax,0x6c0a5a60
  40604f:	ja     0x406029
  406051:	jbe    0x405ff5
  406053:	xchg   esi,eax
  406054:	xchg   edx,eax
  406055:	or     DWORD PTR [ecx+ecx*2+0x20],0x6ec011a1
  40605d:	cli    
  40605e:	and    BYTE PTR [eax-0x64],al
  406061:	test   al,0x0
  406063:	mov    dl,0x56
  406065:	pop    edi
  406066:	imul   esi,DWORD PTR [esi],0xdc2b3109
  40606c:	repnz mov dl,0x95
  40606f:	fistp  QWORD PTR [ebp-0x46]
  406072:	pop    ss
  406073:	call   0xc546:0x27787b49
  40607a:	call   0x828f:0x35748067
  406081:	mov    al,ds:0x65cf3058
  406086:	push   0x7d448c5e
  40608b:	pop    ebp
  40608c:	push   ds
  40608d:	pop    ecx
  40608e:	out    dx,eax
  40608f:	scas   eax,DWORD PTR es:[edi]
  406090:	ficomp WORD PTR [esi+0x44]
  406093:	lods   eax,DWORD PTR ds:[esi]
  406094:	neg    ebp
  406096:	xor    al,0x74
  406098:	mov    ah,0x7a
  40609a:	ins    BYTE PTR es:[edi],dx
  40609b:	leave  
  40609c:	or     DWORD PTR gs:[ebx-0x6ac0ae10],ecx
  4060a3:	sahf   
  4060a4:	(bad)  
  4060a5:	xor    DWORD PTR [edx],ebx
  4060a7:	jmp    ecx
  4060a9:	gs ins BYTE PTR es:[edi],dx
  4060ab:	push   ds
  4060ac:	cwde   
  4060ad:	mov    dh,0xaf
  4060af:	sub    BYTE PTR [edx+0x5e82fb3b],dl
  4060b5:	add    eax,0xa35b68e6
  4060ba:	into   
  4060bb:	xor    eax,0x927f4625
  4060c0:	outs   dx,BYTE PTR ds:[esi]
  4060c1:	mov    bh,0xdc
  4060c3:	sbb    DWORD PTR [ecx],esi
  4060c5:	mov    ebx,0xde896005
  4060ca:	sub    eax,0x3a2f9ff8
  4060cf:	mov    gs,WORD PTR [esp+esi*4]
  4060d2:	mov    ebp,0xea909470
  4060d7:	push   esi
  4060d8:	mov    ds,ebp
  4060da:	imul   esp,DWORD PTR [esi],0xe0f72973
  4060e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060e1:	lods   eax,DWORD PTR ds:[esi]
  4060e2:	je     0x406108
  4060e4:	adc    DWORD PTR [ebp+0x1914c583],esi
  4060ea:	fcmovbe st,st(3)
  4060ec:	mov    edi,0x2363def0
  4060f1:	xor    DWORD PTR [eax-0x5d684798],ebx
  4060f7:	jl     0x40614a
  4060f9:	imul   eax
  4060fb:	daa    
  4060fc:	ins    BYTE PTR es:[edi],dx
  4060fd:	(bad)  
  4060fe:	mov    ah,0x2f
  406100:	xchg   edi,eax
  406101:	jle    0x4060a9
  406103:	xor    bl,BYTE PTR [esi-0x14]
  406106:	and    eax,0x8b1a0488
  40610b:	inc    ebp
  40610c:	ror    BYTE PTR [ebx-0x39cc27ab],0x33
  406113:	(bad)  
  406114:	add    eax,edi
  406116:	add    edx,edi
  406118:	imul   eax,edx
  40611b:	add    eax,DWORD PTR [ebp-0xc]
  40611e:	mov    DWORD PTR [ebp-0xc],eax
  406121:	mov    eax,DWORD PTR [ebp-0xc]
  406124:	mov    edx,DWORD PTR [ebp-0x18]
  406127:	cmp    edx,eax
  406129:	jb     0x403ce7
  40612f:	mov    eax,DWORD PTR [ebp-0x28]
  406132:	mov    edx,DWORD PTR [ebp-0x18]
  406135:	xor    eax,esi
  406137:	add    eax,edi
  406139:	imul   eax,edx
  40613c:	mov    edx,DWORD PTR [ebp-0x1c]
  40613f:	xor    edx,esi
  406141:	add    edx,edi
  406143:	or     eax,edx
  406145:	mov    edx,DWORD PTR [ebp-0x20]
  406148:	xor    edx,esi
  40614a:	add    eax,edx
  40614c:	mov    edx,DWORD PTR [ebp-0x20]
  40614f:	xor    edx,esi
  406151:	add    eax,edx
  406153:	mov    edx,DWORD PTR [ebp-0x10]
  406156:	lea    eax,[eax+edx*1+0x64e5ea]
  40615d:	jmp    0x406171
  406162:	mov    eax,DWORD PTR [ebp-0x20]
  406165:	mov    edx,DWORD PTR [ebp-0x10]
  406168:	xor    eax,esi
  40616a:	lea    eax,[eax+edx*1+0x3272f5]
  406171:	mov    DWORD PTR [ebp-0x10],eax
  406174:	jmp    0x403c34
  406179:	mov    ebx,DWORD PTR [ebp-0x3c]
  40617c:	mov    eax,DWORD PTR [ebp+0xc]
  40617f:	xor    eax,esi
  406181:	lea    ecx,[ecx+eax*1+0x3272f5]
  406188:	lea    eax,[ecx-0x3272f5]
  40618e:	xor    eax,esi
  406190:	cmp    eax,0xf89c95a5
  406195:	jne    0x401883
  40619b:	dec    DWORD PTR [ebp-0x34]
  40619e:	jne    0x401877
  4061a4:	mov    eax,DWORD PTR [ebp+0x8]
  4061a7:	mov    ecx,DWORD PTR [ebp+0xc]
  4061aa:	mov    edx,DWORD PTR [ebp+0x8]
  4061ad:	xor    ecx,esi
  4061af:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f5]
  4061b6:	xor    eax,esi
  4061b8:	mov    al,BYTE PTR [eax+ebx*1+0x3272f5]
  4061bf:	xor    edx,esi
  4061c1:	mov    BYTE PTR [edx+ebx*1+0x3272f5],cl
  4061c8:	mov    ecx,DWORD PTR [ebp+0xc]
  4061cb:	xor    ecx,esi
  4061cd:	mov    BYTE PTR [ecx+ebx*1+0x3272f5],al
  4061d4:	mov    eax,DWORD PTR [ebp+0xc]
  4061d7:	xor    eax,esi
  4061d9:	add    eax,edi
  4061db:	pop    edi
  4061dc:	pop    esi
  4061dd:	pop    ebx
  4061de:	leave  
  4061df:	ret    0x8
  4061e2:	sbb    DWORD PTR ds:0x42b226,0x2deb
  4061ec:	xor    eax,eax
  4061ee:	sbb    DWORD PTR ds:0x42b1ce,0x42b18a
  4061f8:	inc    eax
  4061f9:	ret    
  4061fa:	push   ebp
  4061fb:	mov    ebp,esp
  4061fd:	sub    esp,0x38
  406200:	and    DWORD PTR ds:0x42b22a,0x0
  40620a:	mov    eax,ds:0x42b22a
  40620f:	inc    eax
  406210:	mov    ds:0x42b22a,eax
  406215:	cmp    DWORD PTR ds:0x42b22a,0x14
  40621c:	jbe    0x40624e
  406222:	jmp    0x406241
  406227:	push   0x42b216
  40622c:	push   0x1051
  406231:	push   0x42a251
  406236:	push   0x42a000
  40623b:	call   DWORD PTR ds:0x42b31e
  406241:	cmp    DWORD PTR ds:0x42b22a,0x12
  406248:	jb     0x40620a
  40624e:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  406255:	push   ebx
  406256:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  40625d:	mov    eax,DWORD PTR [ebp-0x4]
  406260:	push   esi
  406261:	and    DWORD PTR ds:0x42b22a,0x0
  40626b:	mov    esi,DWORD PTR ds:0x42b22a
  406271:	inc    esi
  406272:	mov    DWORD PTR ds:0x42b22a,esi
  406278:	cmp    DWORD PTR ds:0x42b22a,0x26
  40627f:	jbe    0x4062a0
  406285:	jmp    0x406293
  40628a:	push   DWORD PTR [ebp-0x1c]
  40628d:	call   DWORD PTR ds:0x42b322
  406293:	cmp    DWORD PTR ds:0x42b22a,0x16
  40629a:	jb     0x40626b
  4062a0:	mov    esi,0x75108ae
  4062a5:	or     DWORD PTR ds:0x42b1aa,0x42b19e
  4062af:	xor    eax,esi
  4062b1:	sub    DWORD PTR ds:0x42b1da,0x3dfa
  4062bb:	push   edi
  4062bc:	add    DWORD PTR ds:0x42b1ea,0x4970
  4062c6:	mov    edi,0x3272f5
  4062cb:	and    DWORD PTR ds:0x42b1ea,0x42b1d6
  4062d5:	add    eax,edi
  4062d7:	mov    DWORD PTR [ebp-0x1c],eax
  4062da:	mov    eax,DWORD PTR [ebp+0x14]
  4062dd:	add    DWORD PTR ds:0x42b22a,0x5e0e
  4062e7:	test   eax,eax
  4062e9:	je     0x40635d
  4062ef:	mov    DWORD PTR ds:0x42b1b6,0x13
  4062f9:	cmp    DWORD PTR ds:0x42b1b6,0x0
  406300:	je     0x40634f
  406306:	cmp    DWORD PTR ds:0x42b1b6,0x3
  40630d:	jle    0x40634f
  406313:	jmp    0x406323
  406318:	push   0x8d96
  40631d:	call   DWORD PTR ds:0x42b326
  406323:	cmp    DWORD PTR ds:0x42b1b6,0x4
  40632a:	jne    0x40633d
  406330:	mov    ebx,DWORD PTR ds:0x42b1b6
  406336:	dec    ebx
  406337:	mov    DWORD PTR ds:0x42b1b6,ebx
  40633d:	mov    ebx,DWORD PTR ds:0x42b1b6
  406343:	dec    ebx
  406344:	mov    DWORD PTR ds:0x42b1b6,ebx
  40634a:	jmp    0x4062f9
  40634f:	mov    eax,DWORD PTR [ebp+0x14]
  406352:	sbb    DWORD PTR ds:0x42b1ba,edx
  406358:	mov    eax,DWORD PTR [eax]
  40635a:	mov    DWORD PTR [ebp-0x1c],eax
  40635d:	and    ebx,DWORD PTR ds:0x42b1fa
  406363:	mov    eax,DWORD PTR [ebp-0x4]
  406366:	xor    eax,esi
  406368:	mov    DWORD PTR ds:0x42b22a,0x1f
  406372:	cmp    DWORD PTR ds:0x42b22a,0x0
  406379:	je     0x4063c1
  40637f:	cmp    DWORD PTR ds:0x42b22a,0x2a
  406386:	jg     0x4063c1
  40638c:	jmp    0x4063af
  406391:	push   0x42a061
  406396:	push   0x44b1
  40639b:	push   DWORD PTR [ebp-0x1c]
  40639e:	push   DWORD PTR [ebp-0x18]
  4063a1:	push   DWORD PTR [ebp-0x1c]
  4063a4:	push   0x7663
  4063a9:	call   DWORD PTR ds:0x42b2ea
  4063af:	mov    ebx,DWORD PTR ds:0x42b22a
  4063b5:	dec    ebx
  4063b6:	mov    DWORD PTR ds:0x42b22a,ebx
  4063bc:	jmp    0x406372
  4063c1:	add    eax,edi
  4063c3:	mov    DWORD PTR [ebp-0x8],eax
  4063c6:	sub    eax,eax
  4063c8:	mov    eax,DWORD PTR [ebp-0xc]
  4063cb:	add    DWORD PTR ds:0x42b196,ecx
  4063d1:	xor    eax,esi
  4063d3:	adc    ebx,DWORD PTR ds:0x42b1aa
  4063d9:	add    eax,edi
  4063db:	add    ebx,DWORD PTR ds:0x42b186
  4063e1:	mov    DWORD PTR [ebp-0x24],eax
  4063e4:	mov    eax,DWORD PTR [ebp-0x4]
  4063e7:	add    ebx,DWORD PTR ds:0x42b1ba
  4063ed:	xor    eax,esi
  4063ef:	and    DWORD PTR ds:0x42b19e,0x0
  4063f9:	jmp    0x40640b
  4063fe:	mov    ebx,DWORD PTR ds:0x42b19e
  406404:	inc    ebx
  406405:	mov    DWORD PTR ds:0x42b19e,ebx
  40640b:	cmp    DWORD PTR ds:0x42b19e,0x1e
  406412:	jae    0x406444
  406418:	cmp    DWORD PTR ds:0x42b19e,0x27
  40641f:	ja     0x406444
  406425:	jmp    0x40643f
  40642a:	push   0x42a061
  40642f:	push   DWORD PTR [ebp-0x20]
  406432:	push   0x0
  406434:	push   0x6ce9
  406439:	call   DWORD PTR ds:0x42b2ee
  40643f:	jmp    0x4063fe
  406444:	add    eax,edi
  406446:	mov    DWORD PTR [ebp-0x30],eax
  406449:	movzx  ebx,BYTE PTR ds:0x42b22e
  406450:	add    ebx,DWORD PTR ds:0x42b1c6
  406456:	mov    DWORD PTR ds:0x42b22e,ebx
  40645c:	mov    ebx,DWORD PTR [ebp-0x4]
  40645f:	xor    ebx,esi
  406461:	mov    eax,ds:0x42b1da
  406466:	or     DWORD PTR ds:0x42b1ee,eax
  40646c:	add    ebx,edi
  40646e:	and    DWORD PTR ds:0x42b1b2,0x0
  406478:	mov    eax,ds:0x42b1b2
  40647d:	inc    eax
  40647e:	mov    ds:0x42b1b2,eax
  406483:	cmp    DWORD PTR ds:0x42b1b2,0x1f
  40648a:	jg     0x4064ab
  406490:	jmp    0x40649e
  406495:	push   DWORD PTR [ebp-0x1c]
  406498:	call   DWORD PTR ds:0x42b2f2
  40649e:	cmp    DWORD PTR ds:0x42b1b2,0x17
  4064a5:	jb     0x406478
  4064ab:	mov    eax,DWORD PTR [ebp-0x24]
  4064ae:	and    DWORD PTR ds:0x42b1e2,0x6649
  4064b8:	sub    eax,edi
  4064ba:	sub    DWORD PTR ds:0x42b22e,0x1376
  4064c4:	lea    ecx,[ebx-0x3272f5]
  4064ca:	xor    DWORD PTR ds:0x42b212,0x3b15
  4064d4:	xor    eax,esi
  4064d6:	adc    DWORD PTR ds:0x42b216,0x7bbc
  4064e0:	xor    ecx,esi
  4064e2:	cmp    ecx,eax
  4064e4:	je     0x40678a
  4064ea:	mov    eax,ds:0x42b18a
  4064ef:	sbb    eax,DWORD PTR ds:0x42b192
  4064f5:	mov    ds:0x42b18a,eax
  4064fa:	mov    eax,DWORD PTR [ebp-0x4]
  4064fd:	xor    eax,esi
  4064ff:	add    eax,edi
  406501:	mov    DWORD PTR ds:0x42b21e,0x72e1
  40650b:	cmp    ebx,eax
  40650d:	mov    DWORD PTR ds:0x42b202,0xd47
  406517:	jne    0x406767
  40651d:	xor    DWORD PTR ds:0x42b1f2,0x42b1b6
  406527:	push   DWORD PTR [ebp+0x8]
  40652a:	call   0x424022
  40652f:	xor    DWORD PTR ds:0x42b1b2,edx
  406535:	mov    DWORD PTR [ebp-0x14],eax
  406538:	mov    ecx,DWORD PTR ds:0x42b296
  40653e:	mov    ecx,DWORD PTR [ecx]
  406540:	sbb    DWORD PTR ds:0x42b1f6,ecx
  406546:	mov    eax,DWORD PTR [ebp-0x4]
  406549:	sbb    DWORD PTR ds:0x42b1d6,ecx
  40654f:	mov    ecx,DWORD PTR [ebp-0x14]
  406552:	xor    eax,esi
  406554:	add    eax,edi
  406556:	mov    DWORD PTR ds:0x42b226,0x75db
  406560:	cmp    ecx,eax
  406562:	je     0x4067f5
  406568:	push   DWORD PTR [ebp-0x14]
  40656b:	push   DWORD PTR [ebp+0x8]
  40656e:	mov    DWORD PTR ds:0x42b196,0x32ca
  406578:	call   0x424138
  40657d:	mov    DWORD PTR [ebp-0x14],eax
  406580:	adc    DWORD PTR ds:0x42b18a,ecx
  406586:	mov    eax,DWORD PTR [ebp-0x4]
  406589:	adc    DWORD PTR ds:0x42b186,ecx
  40658f:	mov    ecx,DWORD PTR [ebp-0x14]
  406592:	sub    DWORD PTR ds:0x42b1e6,0x42b196
  40659c:	xor    eax,esi
  40659e:	adc    DWORD PTR ds:0x42b212,0x42b1f6
  4065a8:	add    eax,edi
  4065aa:	cmp    ecx,eax
  4065ac:	mov    DWORD PTR ds:0x42b1da,0x7670
  4065b6:	je     0x4067f5
  4065bc:	xor    eax,eax
  4065be:	add    eax,DWORD PTR ds:0x42b19a
  4065c4:	and    eax,DWORD PTR ds:0x42b1be
  4065ca:	mov    ds:0x42b19a,eax
  4065cf:	mov    eax,DWORD PTR [ebp-0x14]
  4065d2:	mov    eax,DWORD PTR [eax+0x18]
  4065d5:	and    DWORD PTR ds:0x42b1e2,0x0
  4065df:	jmp    0x4065f1
  4065e4:	mov    ecx,DWORD PTR ds:0x42b1e2
  4065ea:	inc    ecx
  4065eb:	mov    DWORD PTR ds:0x42b1e2,ecx
  4065f1:	cmp    DWORD PTR ds:0x42b1e2,0x13
  4065f8:	jae    0x40663a
  4065fe:	cmp    DWORD PTR ds:0x42b1e2,0x9
  406605:	jb     0x40663a
  40660b:	jmp    0x40661b
  406610:	push   0x42b206
  406615:	call   DWORD PTR ds:0x42b2f6
  40661b:	cmp    DWORD PTR ds:0x42b1e2,0x8
  406622:	jne    0x406635
  406628:	mov    ecx,DWORD PTR ds:0x42b1e2
  40662e:	inc    ecx
  40662f:	mov    DWORD PTR ds:0x42b1e2,ecx
  406635:	jmp    0x4065e4
  40663a:	mov    DWORD PTR [ebp-0x24],eax
  40663d:	mov    eax,DWORD PTR [ebp-0x14]
  406640:	mov    ecx,DWORD PTR ds:0x42b1c2
  406646:	adc    ecx,DWORD PTR ds:0x42b1b2
  40664c:	mov    DWORD PTR ds:0x42b1c2,ecx
  406652:	mov    ecx,DWORD PTR [ebp+0x8]
  406655:	or     DWORD PTR ds:0x42b1f6,0x7077
  40665f:	add    ecx,DWORD PTR [eax+0x20]
  406662:	and    eax,0x7368
  406667:	mov    DWORD PTR [ebp-0x2c],ecx
  40666a:	mov    eax,DWORD PTR [ebp-0x14]
  40666d:	and    DWORD PTR ds:0x42b21a,0x0
  406677:	jmp    0x40668b
  40667c:	xor    ecx,ecx
  40667e:	or     ecx,DWORD PTR ds:0x42b21a
  406684:	inc    ecx
  406685:	mov    DWORD PTR ds:0x42b21a,ecx
  40668b:	cmp    DWORD PTR ds:0x42b21a,0x1c
  406692:	jae    0x4066e3
  406698:	cmp    DWORD PTR ds:0x42b21a,0x5
  40669f:	jbe    0x4066e3
  4066a5:	jmp    0x4066c4
  4066aa:	push   0x42b1f6
  4066af:	push   0x42b18e
  4066b4:	push   0x52aa
  4066b9:	push   0x42a0fe
  4066be:	call   DWORD PTR ds:0x42b2fa
  4066c4:	cmp    DWORD PTR ds:0x42b21a,0x4
  4066cb:	jne    0x4066de
  4066d1:	mov    ecx,DWORD PTR ds:0x42b21a
  4066d7:	inc    ecx
  4066d8:	mov    DWORD PTR ds:0x42b21a,ecx
  4066de:	jmp    0x40667c
  4066e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4066e6:	add    ecx,DWORD PTR [eax+0x24]
  4066e9:	mov    DWORD PTR [ebp-0x34],ecx
  4066ec:	adc    DWORD PTR ds:0x42b212,0x34a6
  4066f6:	mov    eax,DWORD PTR [ebp-0x14]
  4066f9:	and    DWORD PTR ds:0x42b192,0x0
  406703:	mov    ecx,DWORD PTR ds:0x42b192
  406709:	inc    ecx
  40670a:	mov    DWORD PTR ds:0x42b192,ecx
  406710:	cmp    DWORD PTR ds:0x42b192,0x4
  406717:	jbe    0x406759
  40671d:	jmp    0x406732
  406722:	push   0x42b1b6
  406727:	push   0x42a2a1
  40672c:	call   DWORD PTR ds:0x42b2fe
  406732:	cmp    DWORD PTR ds:0x42b192,0x3
  406739:	jne    0x40674c
  40673f:	mov    ecx,DWORD PTR ds:0x42b192
  406745:	inc    ecx
  406746:	mov    DWORD PTR ds:0x42b192,ecx
  40674c:	cmp    DWORD PTR ds:0x42b192,0x13
  406753:	jb     0x406703
  406759:	mov    ecx,DWORD PTR [ebp+0x8]
  40675c:	add    ecx,DWORD PTR [eax+0x1c]
  40675f:	mov    DWORD PTR [ebp-0x14],ecx
  406762:	jmp    0x4067bd
  406767:	mov    eax,DWORD PTR [ebp-0x2c]
  40676a:	mov    ecx,DWORD PTR [ebp+0x8]
  40676d:	add    ecx,DWORD PTR [eax+ebx*4]
  406770:	mov    DWORD PTR [ebp-0x28],ecx
  406773:	mov    eax,DWORD PTR [ebp-0x4]
  406776:	mov    ecx,DWORD PTR [ebp-0x28]
  406779:	xor    eax,esi
  40677b:	add    eax,edi
  40677d:	cmp    ecx,eax
  40677f:	je     0x4067bd
  406785:	jmp    0x4067ae
  40678a:	mov    eax,DWORD PTR [ebp-0x4]
  40678d:	mov    ecx,DWORD PTR [ebp-0x8]
  406790:	xor    eax,esi
  406792:	add    eax,edi
  406794:	cmp    ecx,eax
  406796:	mov    eax,DWORD PTR [ebp-0x4]
  406799:	je     0x4067f8
  40679f:	mov    ecx,DWORD PTR [ebp-0x30]
  4067a2:	xor    eax,esi
  4067a4:	add    eax,edi
  4067a6:	cmp    ecx,eax
  4067a8:	je     0x406801
  4067ae:	lea    eax,[ebp-0x8]
  4067b1:	push   eax
  4067b2:	push   DWORD PTR [ebp-0x28]
  4067b5:	push   DWORD PTR [ebp+0xc]
  4067b8:	call   0x40f847
  4067bd:	mov    eax,DWORD PTR [ebp-0x4]
  4067c0:	mov    ecx,DWORD PTR [ebp-0x8]
  4067c3:	xor    eax,esi
  4067c5:	add    eax,edi
  4067c7:	cmp    ecx,eax
  4067c9:	je     0x4067e4
  4067cf:	mov    eax,DWORD PTR [ebp-0x34]
  4067d2:	movzx  eax,WORD PTR [eax+ebx*2]
  4067d6:	mov    ecx,DWORD PTR [ebp-0x14]
  4067d9:	mov    eax,DWORD PTR [ecx+eax*4]
  4067dc:	mov    DWORD PTR [ebp-0x38],eax
  4067df:	jmp    0x40678a
  4067e4:	mov    eax,DWORD PTR [ebp-0xc]
  4067e7:	xor    eax,esi
  4067e9:	lea    ebx,[ebx+eax*1+0x3272f5]
  4067f0:	jmp    0x40646e
  4067f5:	mov    eax,DWORD PTR [ebp-0x4]
  4067f8:	xor    eax,esi
  4067fa:	add    eax,edi
  4067fc:	jmp    0x40f768
  406801:	mov    eax,DWORD PTR [ebp-0x38]
  406804:	add    eax,DWORD PTR [ebp+0x8]
  406807:	mov    DWORD PTR [ebp-0x18],eax
  40680a:	mov    eax,DWORD PTR [ebp-0x1c]
  40680d:	test   eax,eax
  40680f:	je     0x40afcd
  406815:	mov    DWORD PTR [ebp-0x20],0x0
  40681c:	push   0x3
  40681e:	xor    edx,edx
  406820:	pop    edx
  406821:	add    edx,0x8
  406824:	push   edx
  406825:	pop    ecx
  406826:	push   0x6
  406828:	dec    ecx
  406829:	pop    ebx
  40682a:	dec    ebx
  40682b:	xchg   ebx,ecx
  40682d:	sub    ebx,ecx
  40682f:	xchg   ebx,ecx
  406831:	dec    ecx
  406832:	mov    eax,DWORD PTR [ebp-0x1c]
  406835:	imul   eax,ecx
  406838:	sub    esp,eax
  40683a:	mov    DWORD PTR [ebp-0x20],esp
  40683d:	mov    eax,DWORD PTR [ebp-0x4]
  406840:	xor    eax,esi
  406842:	add    eax,edi
  406844:	jmp    0x408c14
  406849:	mov    ecx,DWORD PTR [ebp-0xc]
  40684c:	mov    eax,DWORD PTR [ebp+0x8]
  40684f:	mov    edx,DWORD PTR [ebp+0x14]
  406852:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  406856:	xor    ecx,esi
  406858:	add    ecx,edi
  40685a:	xor    edx,edx
  40685c:	div    ecx
  40685e:	mov    ecx,DWORD PTR [ebp-0x4]
  406861:	xor    ecx,esi
  406863:	lea    eax,[ecx+eax*1+0x3272f5]
  40686a:	mov    ecx,DWORD PTR [ebp+0x8]
  40686d:	mov    edx,DWORD PTR [ebp-0x20]
  406870:	mov    DWORD PTR [edx+ecx*4],eax
  406873:	mov    eax,DWORD PTR [ebp-0xc]
  406876:	mov    ecx,DWORD PTR [ebp+0x8]
  406879:	xor    eax,esi
  40687b:	jmp    0x408c0d
  406880:	mov    ebx,0x2cc0cea
  406885:	mov    bh,BYTE PTR [ebx-0x264bb77e]
  40688b:	pop    esi
  40688c:	push   esp
  40688d:	cli    
  40688e:	retf   0x130a
  406891:	cmp    eax,0x5e0c8383
  406896:	add    DWORD PTR [ebx+0x52f06866],0xffffffda
  40689d:	or     cx,WORD PTR [edi+edx*2]
  4068a1:	sub    eax,0x38a8d7d5
  4068a6:	xchg   edi,eax
  4068a7:	std    
  4068a8:	gs sub dh,bh
  4068ab:	cmp    dl,bl
  4068ad:	js     0x4068bd
  4068af:	push   ebp
  4068b0:	lods   eax,DWORD PTR ds:[esi]
  4068b1:	push   ebx
  4068b2:	ins    DWORD PTR es:[edi],dx
  4068b3:	or     eax,esp
  4068b5:	loope  0x406884
  4068b7:	jmp    0xcb09:0xbf6d0db1
  4068be:	pop    ss
  4068bf:	jl     0x406920
  4068c1:	mov    ecx,0xce189ede
  4068c6:	adc    al,0x50
  4068c8:	mov    al,ds:0xa5125128
  4068cd:	fiadd  WORD PTR [esi+0x12e98349]
  4068d3:	es aas 
  4068d5:	pop    ds
  4068d6:	mov    edx,0xe75c20d8
  4068db:	test   DWORD PTR [edi-0x2c],esp
  4068de:	mov    dl,0x75
  4068e0:	mov    bl,0xbb
  4068e2:	test   al,0xc
  4068e4:	imul   ebp,DWORD PTR cs:[ecx],0x3a
  4068e8:	sub    al,0x31
  4068ea:	xchg   ecx,eax
  4068eb:	inc    eax
  4068ec:	and    ah,ah
  4068ee:	ss push ebp
  4068f0:	jbe    0x406968
  4068f2:	into   
  4068f3:	aam    0xf0
  4068f5:	mov    cl,0x3f
  4068f7:	lods   eax,DWORD PTR ds:[esi]
  4068f8:	xlat   BYTE PTR ds:[ebx]
  4068f9:	lods   al,BYTE PTR ds:[esi]
  4068fa:	jge    0x4068f1
  4068fc:	retf   
  4068fd:	jo     0x4068fb
  4068ff:	out    0x4e,eax
  406901:	in     al,dx
  406902:	push   edx
  406903:	mov    ebx,edi
  406905:	inc    ecx
  406906:	call   0x201:0x5076a1e
  40690d:	pop    eax
  40690e:	and    bh,BYTE PTR [esi]
  406910:	cmp    eax,0xb27d4e78
  406915:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406916:	dec    eax
  406917:	imul   ecx,DWORD PTR [ecx],0xffffffb5
  40691a:	mov    edi,0xbcd699b8
  40691f:	das    
  406920:	cmp    al,0xa8
  406922:	or     ah,al
  406924:	mov    ds:0xdf5faf12,al
  406929:	dec    eax
  40692a:	cmc    
  40692b:	sub    DWORD PTR [ecx+0x1e],esp
  40692e:	jnp    0x406983
  406930:	mov    esp,0x922d7cd9
  406935:	repz inc ebp
  406937:	icebp  
  406938:	stos   BYTE PTR es:[edi],al
  406939:	adc    al,0xba
  40693b:	push   esp
  40693c:	inc    edi
  40693d:	stc    
  40693e:	js     0x4068f3
  406940:	test   eax,0x17748d24
  406945:	xchg   bh,ah
  406947:	pop    eax
  406948:	hlt    
  406949:	(bad)  
  40694a:	dec    edi
  40694b:	jp     0x40699a
  40694d:	dec    ebx
  40694e:	push   cs
  40694f:	addr16 adc eax,0xb0f073c6
  406955:	ins    BYTE PTR es:[edi],dx
  406956:	das    
  406957:	adc    ebx,DWORD PTR [esp+eax*4-0x4f]
  40695b:	cmp    bh,bl
  40695d:	jmp    0x1e1472d4
  406962:	adc    DWORD PTR [ecx+eax*2-0x58],ebx
  406966:	mov    edi,0x742d027c
  40696b:	std    
  40696c:	test   al,0x6a
  40696e:	inc    ecx
  40696f:	jno    0x406958
  406971:	and    bl,BYTE PTR ds:0x700ee510
  406977:	aad    0x32
  406979:	sbb    ch,BYTE PTR [edx-0x7e]
  40697c:	push   es
  40697d:	jle    0x406919
  40697f:	push   ecx
  406980:	lods   eax,DWORD PTR ds:[esi]
  406981:	push   ds
  406982:	cmp    al,0xab
  406984:	jmp    0x406990
  406986:	add    al,0x65
  406988:	pop    edx
  406989:	mov    eax,0xea726db
  40698e:	xchg   ecx,eax
  40698f:	ret    0xcad1
  406992:	and    eax,0xf0c60870
  406997:	jp     0x406a03
  406999:	std    
  40699a:	push   ebx
  40699b:	add    dl,cl
  40699d:	mov    cl,dh
  40699f:	bound  si,DWORD PTR [eax+0x6a42c99c]
  4069a6:	call   0x9f60:0x47f23596
  4069ad:	or     al,0xd9
  4069af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069b0:	add    eax,0xcf9050f5
  4069b5:	int    0xe7
  4069b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069b8:	jg     0x4069dd
  4069ba:	or     esi,DWORD PTR [esi-0x32c577ba]
  4069c0:	xchg   BYTE PTR [ecx+0x69],bl
  4069c3:	sbb    BYTE PTR [edi-0x5e],bh
  4069c6:	imul   esi,DWORD PTR [esi+0x70],0x35d591f8
  4069cd:	jmp    0x4106:0xf4148a64
  4069d4:	mov    ebp,0x1436bd47
  4069d9:	call   0x5be0:0xd84ce165
  4069e0:	loopne 0x406979
  4069e2:	and    BYTE PTR [ebp+0x9],0xe8
  4069e6:	push   0x12
  4069e8:	xchg   edi,eax
  4069e9:	pop    eax
  4069ea:	pusha  
  4069eb:	xchg   edi,eax
  4069ec:	sbb    DWORD PTR [ebp+0x8a28dc],edx
  4069f2:	test   DWORD PTR [esi+0x4d],esp
  4069f5:	aas    
  4069f6:	cld    
  4069f7:	sti    
  4069f8:	jae    0x4069b4
  4069fa:	into   
  4069fb:	mov    ah,0x2b
  4069fd:	mov    esi,0xec958521
  406a02:	xchg   esp,eax
  406a03:	dec    eax
  406a04:	sar    ecx,cl
  406a06:	aam    0xa9
  406a08:	jnp    0x406a82
  406a0a:	jb     0x406a0c
  406a0c:	idiv   BYTE PTR [eax+edx*2]
  406a0f:	sub    eax,0xa8dd0457
  406a14:	inc    ebp
  406a15:	jns    0x406a1e
  406a17:	sbb    eax,0xfc401564
  406a1c:	jg     0x406a5b
  406a1e:	es add al,0x2c
  406a21:	mov    cl,0x79
  406a23:	sub    eax,0xb7739f5d
  406a28:	(bad)  
  406a29:	xchg   esi,eax
  406a2a:	push   esp
  406a2b:	(bad)  
  406a2c:	mov    ecx,0x5e2edb36
  406a31:	mov    ch,0xc5
  406a33:	bound  ebx,QWORD PTR [ecx]
  406a35:	stos   BYTE PTR es:[edi],al
  406a36:	int3   
  406a37:	(bad)  
  406a38:	sbb    ebx,DWORD PTR [eax-0x71]
  406a3b:	inc    eax
  406a3c:	pop    es
  406a3d:	lds    ecx,FWORD PTR [eax+0x5b]
  406a40:	lea    esi,[esi]
  406a42:	push   edi
  406a43:	daa    
  406a44:	sbb    eax,0xac66a406
  406a49:	retf   0x544f
  406a4c:	retf   0x676b
  406a4f:	dec    edx
  406a50:	repnz add eax,0xda48db76
  406a56:	pop    edi
  406a57:	fistp  WORD PTR [edi+0x63dabd8b]
  406a5d:	rol    BYTE PTR [ecx+0x4058f53f],0xd8
  406a64:	xor    ebx,0xffffffd4
  406a67:	in     al,dx
  406a68:	cmp    al,0x3f
  406a6a:	push   eax
  406a6b:	fucomi st,st(5)
  406a6d:	sub    BYTE PTR ds:0xf10e8fae,0x78
  406a74:	xchg   DWORD PTR [eax],esi
  406a76:	fwait
  406a77:	mov    bl,BYTE PTR [edi+0x7a]
  406a7a:	inc    ebx
  406a7b:	jp     0x406a39
  406a7d:	jge    0x406ad3
  406a7f:	out    0xeb,eax
  406a81:	adc    eax,0xcc8d6f28
  406a86:	push   ecx
  406a87:	cmp    al,0x5
  406a89:	jno    0x406adb
  406a8b:	adc    ebp,DWORD PTR [edi+ebp*1-0x131e1d11]
  406a92:	adc    DWORD PTR [edx],esi
  406a94:	mov    ah,ah
  406a96:	jnp    0x406aec
  406a98:	pop    edx
  406a99:	lock adc DWORD PTR [edx],ebx
  406a9c:	das    
  406a9d:	push   0x8
  406a9f:	pop    ds
  406aa0:	xchg   eax,ebp
  406aa2:	loop   0x406a5e
  406aa4:	mov    ds:0x66bfc0ed,eax
  406aa9:	enter  0x89e1,0x8f
  406aad:	stc    
  406aae:	outs   dx,BYTE PTR ds:[esi]
  406aaf:	test   DWORD PTR [ebp-0x2a4d0908],edx
  406ab5:	xor    eax,0x76dbf83c
  406aba:	mov    ecx,0xb36f0e9e
  406abf:	scas   eax,DWORD PTR es:[edi]
  406ac0:	jns    0x406b35
  406ac2:	mov    bh,0xb5
  406ac4:	sbb    ecx,DWORD PTR [edi-0x199ccee3]
  406aca:	pusha  
  406acb:	loop   0x406b41
  406acd:	jmp    0x9983:0x9b91d58
  406ad4:	mov    ds:0x1d05f94e,eax
  406ad9:	ret    
  406ada:	push   ss
  406adb:	das    
  406adc:	mov    ds:0xce34913c,eax
  406ae1:	xor    edi,DWORD PTR [edi+0x24e58ab5]
  406ae7:	jnp    0x406b05
  406ae9:	icebp  
  406aea:	or     BYTE PTR [edx],dh
  406aec:	sbb    al,0xef
  406aee:	imul   esp
  406af0:	out    dx,eax
  406af1:	xor    BYTE PTR [ecx+0x3d15b3f6],0x81
  406af8:	rcl    ah,cl
  406afa:	xor    cl,0x97
  406afd:	jmp    0x3c64:0xccb235c5
  406b04:	push   edx
  406b05:	and    BYTE PTR [edx+0x619e1cb5],0x48
  406b0c:	inc    esp
  406b0d:	xlat   BYTE PTR ds:[ebx]
  406b0e:	sub    edx,DWORD PTR [ebx-0x220f95e7]
  406b14:	push   ds
  406b15:	adc    DWORD PTR [edi],0x8ad9d66
  406b1b:	pop    edx
  406b1c:	xchg   ebx,eax
  406b1d:	mov    BYTE PTR [ebx],bl
  406b1f:	inc    esi
  406b20:	cmc    
  406b21:	int    0x1b
  406b23:	test   eax,0x574f1b0b
  406b28:	xchg   DWORD PTR [edi],ebp
  406b2a:	push   ss
  406b2b:	and    DWORD PTR [ebp+ecx*2+0x12da5f09],edx
  406b32:	mov    DWORD PTR [ecx],ebx
  406b34:	add    dl,al
  406b36:	xchg   esi,eax
  406b37:	mov    esp,0xa8ee328e
  406b3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b3d:	mov    BYTE PTR [ecx+0xe],bh
  406b40:	inc    edx
  406b41:	jmp    0x32fa:0xb8b851a
  406b48:	les    edi,FWORD PTR [edi+esi*2+0x2]
  406b4c:	dec    ebp
  406b4d:	xor    al,0x76
  406b4f:	test   BYTE PTR [ecx-0x6],ah
  406b52:	int    0x58
  406b54:	cmc    
  406b55:	stos   DWORD PTR es:[edi],eax
  406b56:	nop
  406b57:	mov    esp,edx
  406b59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b5a:	adc    BYTE PTR [ebx+0x39936f8a],0xdd
  406b61:	mov    cl,0x87
  406b63:	into   
  406b64:	xor    DWORD PTR [ebp+0x69],edi
  406b67:	dec    ebx
  406b68:	jge    0x406bd5
  406b6a:	cld    
  406b6b:	pop    ebx
  406b6c:	cmp    BYTE PTR ds:0x675819cd,ch
  406b72:	push   esi
  406b73:	jge    0x406bc9
  406b75:	jl     0x406b45
  406b77:	mov    ecx,0xe9e862fd
  406b7c:	mov    dh,BYTE PTR [ecx+0x3d]
  406b7f:	sbb    bl,al
  406b81:	mov    ds:0xe22da031,al
  406b86:	mov    bl,0x9d
  406b88:	dec    esp
  406b89:	sbb    esp,DWORD PTR [edx]
  406b8b:	lock out 0xd2,al
  406b8e:	push   0xffffffbe
  406b90:	sar    bl,0x5c
  406b93:	mov    ss,WORD PTR [ebp-0x69bd76c6]
  406b99:	and    eax,0x9c435005
  406b9e:	stos   DWORD PTR es:[edi],eax
  406b9f:	cmp    ebx,0x79603e96
  406ba5:	cmp    ebp,DWORD PTR [ecx+0x71487904]
  406bab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bac:	sbb    ch,dh
  406bae:	mov    ebx,0x902585a1
  406bb3:	sub    BYTE PTR [edx],bl
  406bb5:	and    DWORD PTR [esi+0x34],esp
  406bb8:	clc    
  406bb9:	int    0xcf
  406bbb:	pop    ebp
  406bbc:	push   eax
  406bbd:	les    esp,FWORD PTR [esi+0x15]
  406bc0:	push   edi
  406bc1:	iret   
  406bc2:	and    BYTE PTR [esp+edi*1-0x2c],bh
  406bc6:	add    eax,0x7e1e8538
  406bcb:	lea    eax,[ecx+0x7c517fbf]
  406bd1:	and    BYTE PTR [edx+0x67],ah
  406bd4:	pop    ds
  406bd5:	xor    DWORD PTR [eax+ecx*8+0x683c5bda],0x2e22eaae
  406be0:	mov    eax,0x3d5d65bb
  406be5:	shr    BYTE PTR [ebp+0x52],1
  406be8:	nop
  406be9:	dec    eax
  406bea:	outs   dx,BYTE PTR ds:[esi]
  406beb:	push   eax
  406bec:	(bad)  
  406bed:	arpl   WORD PTR [edx+eiz*4],si
  406bf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bf1:	data16 lahf 
  406bf3:	push   0x3021f8e4
  406bf8:	sbb    al,0xcd
  406bfa:	adc    BYTE PTR [ebx],cl
  406bfc:	add    ch,BYTE PTR [esp+edi*8-0x48]
  406c00:	data16 aaa 
  406c02:	mov    edx,0xfd1297fa
  406c07:	push   0xffffffbd
  406c09:	aaa    
  406c0a:	dec    esi
  406c0b:	adc    eax,0x4d8f2fdf
  406c10:	in     eax,dx
  406c11:	loope  0x406c3e
  406c13:	in     eax,0xf8
  406c15:	pop    ebx
  406c16:	mov    al,0x46
  406c18:	push   0xbe1ac81b
  406c1d:	cdq    
  406c1e:	repnz xchg ebp,eax
  406c20:	xchg   esi,eax
  406c21:	pop    ss
  406c22:	cmp    DWORD PTR [ecx-0x65],esp
  406c25:	adc    ch,BYTE PTR [edi-0x1]
  406c28:	pop    ecx
  406c29:	dec    esp
  406c2a:	push   ebx
  406c2b:	sub    BYTE PTR [edi-0x6f3f220e],al
  406c31:	ja     0x406bf9
  406c33:	push   0x4ff25f18
  406c38:	and    eax,0x2e1462c
  406c3d:	adc    edx,DWORD PTR [eax]
  406c3f:	sbb    eax,0xeaac312d
  406c44:	sbb    al,0x89
  406c46:	outs   dx,DWORD PTR ds:[esi]
  406c47:	and    esi,esp
  406c49:	out    dx,eax
  406c4a:	daa    
  406c4b:	in     eax,dx
  406c4c:	sbb    al,0xa6
  406c4e:	adc    eax,0x82a4a0c9
  406c53:	pop    es
  406c54:	int    0xb6
  406c56:	push   ecx
  406c57:	xor    al,0x64
  406c59:	or     DWORD PTR [ebp+0x70],ebp
  406c5c:	fmulp  st(6),st
  406c5e:	lock sub DWORD PTR [edx],ebp
  406c61:	fdivrp st(7),st
  406c63:	in     eax,dx
  406c64:	jno    0x406c22
  406c66:	fist   DWORD PTR [esi+0x2a0b8075]
  406c6c:	jge    0x406c21
  406c6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c6f:	push   ebp
  406c70:	jne    0x406c80
  406c72:	and    al,0xa6
  406c74:	dec    esi
  406c75:	(bad)  
  406c77:	dec    ebp
  406c78:	inc    ebx
  406c79:	xchg   esi,eax
  406c7a:	dec    edi
  406c7b:	push   ebp
  406c7c:	sub    eax,0xaf6f31cf
  406c81:	rcl    ecx,cl
  406c83:	mov    bh,cl
  406c85:	fld    QWORD PTR [ebp+0x3a6cd4c9]
  406c8b:	jmp    0x77f251b1
  406c90:	xchg   edx,eax
  406c91:	fistp  DWORD PTR [ebp+0x370ba2c7]
  406c97:	enter  0xb4f3,0x23
  406c9b:	push   ebx
  406c9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c9d:	push   esi
  406c9e:	and    edi,DWORD PTR [ebp-0x2589a916]
  406ca4:	dec    edi
  406ca5:	fnstcw WORD PTR [edx-0x47]
  406ca8:	sub    al,0x6b
  406caa:	data16 mov al,ds:0x52e4951
  406cb0:	inc    ebp
  406cb1:	jbe    0x406ccc
  406cb3:	push   ds
  406cb4:	fst    QWORD PTR [edx-0x567d8cfe]
  406cba:	inc    ecx
  406cbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cbc:	cmp    ebp,DWORD PTR [ebx+eax*4-0x58]
  406cc0:	or     BYTE PTR [esi-0x63],cl
  406cc3:	out    dx,al
  406cc4:	(bad)  
  406cc7:	pop    ebx
  406cc8:	or     BYTE PTR [ebx],al
  406cca:	sti    
  406ccb:	xchg   ebx,eax
  406ccc:	sub    DWORD PTR [ecx+0x4d],ecx
  406ccf:	jg     0x406c6f
  406cd1:	pop    eax
  406cd2:	cmp    BYTE PTR [edi],dh
  406cd4:	or     al,0x3a
  406cd6:	sbb    al,0x7b
  406cd8:	cwde   
  406cd9:	enter  0x3310,0xe4
  406cdd:	pop    edi
  406cde:	xchg   ebp,eax
  406cdf:	icebp  
  406ce0:	(bad)  [ecx+0x6d]
  406ce3:	push   es
  406ce4:	mov    DWORD PTR [esi-0x6e],ebp
  406ce7:	ja     0x406c9f
  406ce9:	in     al,0x4c
  406ceb:	(bad)  
  406cec:	fldcw  WORD PTR [eax]
  406cee:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  406cf0:	ins    DWORD PTR es:[edi],dx
  406cf1:	xor    edx,DWORD PTR [eax]
  406cf3:	popa   
  406cf4:	sbb    ecx,ecx
  406cf6:	dec    ecx
  406cf7:	popf   
  406cf8:	sub    al,0xc7
  406cfa:	ss popf 
  406cfc:	cs sub al,0xd0
  406cff:	jmp    0xa0fc:0xe443bd54
  406d06:	aam    0xb0
  406d08:	js     0x406d11
  406d0a:	mov    dh,0xd1
  406d0c:	test   eax,0x63d32256
  406d11:	xlat   BYTE PTR ds:[ebx]
  406d12:	add    BYTE PTR [ebx+0x20],bh
  406d15:	pop    esi
  406d16:	jo     0x406ce5
  406d18:	or     DWORD PTR [esi-0x14],esi
  406d1b:	bsf    esp,DWORD PTR [esp+esi*2]
  406d1f:	sbb    DWORD PTR [esi+edx*4-0x1a2afaec],eax
  406d26:	(bad)  [edi]
  406d28:	arpl   WORD PTR [ebx+0x77],bx
  406d2b:	xchg   DWORD PTR [ebp-0x395b75de],ebx
  406d31:	mov    ch,BYTE PTR [edx-0x25]
  406d34:	or     ah,ch
  406d36:	adc    eax,edi
  406d38:	ins    DWORD PTR es:[edi],dx
  406d39:	(bad)  
  406d3a:	call   0x6ee2ece2
  406d3f:	pop    ebp
  406d40:	cmp    eax,0x5562e175
  406d45:	sbb    BYTE PTR [edx],dl
  406d47:	pop    ecx
  406d48:	jg     0x406d31
  406d4a:	mov    esp,0x7a456955
  406d4f:	jno    0x406d49
  406d51:	xlat   BYTE PTR ds:[ebx]
  406d52:	pop    edx
  406d53:	mov    eax,ecx
  406d55:	push   ds
  406d56:	(bad)  
  406d58:	mov    dl,0x35
  406d5a:	loop   0x406d3d
  406d5c:	push   edx
  406d5d:	inc    edi
  406d5e:	xchg   edi,eax
  406d5f:	pop    edi
  406d60:	mov    ah,0xef
  406d62:	clc    
  406d63:	call   0x76f61ff7
  406d68:	bound  edx,QWORD PTR [eax+edi*4]
  406d6b:	push   ecx
  406d6c:	mov    ss,WORD PTR [eax]
  406d6e:	(bad)  
  406d6f:	cmp    edi,DWORD PTR ds:0x39e4f0ca
  406d75:	sti    
  406d76:	push   cs
  406d77:	or     BYTE PTR [edi+0x492241e9],ch
  406d7d:	test   DWORD PTR [edx+0x38],eax
  406d80:	dec    esi
  406d81:	jae    0x406d9f
  406d83:	sar    DWORD PTR ds:0x4fe51fd2,cl
  406d89:	xchg   esp,eax
  406d8a:	pop    esi
  406d8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d8c:	out    0x1c,al
  406d8e:	icebp  
  406d8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d90:	push   esi
  406d91:	fwait
  406d92:	sub    esi,DWORD PTR ds:0x230821b1
  406d98:	daa    
  406d99:	shr    DWORD PTR [ebx-0x40a23588],1
  406d9f:	cld    
  406da0:	idiv   dl
  406da2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406da3:	jbe    0x406d59
  406da5:	mov    edi,0x6a875569
  406daa:	pop    edx
  406dab:	add    esp,DWORD PTR [ecx]
  406dad:	stos   DWORD PTR es:[edi],eax
  406dae:	data16 cld 
  406db0:	dec    ebx
  406db1:	loop   0x406d58
  406db3:	dec    edx
  406db4:	pop    ebx
  406db5:	data16 xor cl,BYTE PTR [edx+ebp*2]
  406db9:	dec    edi
  406dba:	std    
  406dbb:	xchg   al,cl
  406dbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406dbe:	mov    sp,0xf8ab
  406dc2:	in     eax,dx
  406dc3:	mov    edx,0x4c8e7de3
  406dc8:	jnp    0x406db5
  406dca:	gs das 
  406dcc:	xor    dl,dl
  406dce:	outs   dx,BYTE PTR ds:[esi]
  406dcf:	pop    esp
  406dd0:	fbstp  TBYTE PTR [esp+esi*8-0x47d32839]
  406dd7:	in     al,dx
  406dd8:	add    DWORD PTR [ebx-0x1ae42b0e],ebx
  406dde:	in     eax,dx
  406ddf:	jnp    0x406de4
  406de1:	mov    WORD PTR [ecx+0x54af71ac],cs
  406de7:	jecxz  0x406df7
  406de9:	sbb    DWORD PTR [edi],ecx
  406deb:	mov    eax,ds:0x5a0ce8dc
  406df0:	cmp    BYTE PTR ds:0xe0bcdbcf,ah
  406df6:	mov    dl,0x21
  406df8:	xchg   esi,eax
  406df9:	sti    
  406dfa:	or     DWORD PTR [ecx],eax
  406dfc:	leave  
  406dfd:	data16 aad 0xca
  406e00:	ds (bad) 
  406e02:	adc    esi,ebp
  406e04:	sbb    esi,ebx
  406e06:	es std 
  406e08:	gs int3 
  406e0a:	test   eax,0xf8994845
  406e0f:	pusha  
  406e10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e11:	adc    DWORD PTR [esi+ebx*4+0x25a9d400],edi
  406e18:	cmp    ebp,DWORD PTR [ecx]
  406e1a:	psrlq  mm6,QWORD PTR [eax+0x5f52d92b]
  406e21:	repz addr16 pop ss
  406e24:	jae    0x406db5
  406e26:	lds    esi,FWORD PTR [esi-0x2c368145]
  406e2c:	jp     0x406dcd
  406e2e:	out    dx,al
  406e2f:	jnp    0x406dd3
  406e31:	dec    edi
  406e32:	jbe    0x406e8e
  406e34:	test   eax,0xe67984a
  406e39:	or     cl,BYTE PTR [ebx-0x6dcac630]
  406e3f:	jg     0x406e92
  406e41:	pushf  
  406e42:	jne    0x406e4a
  406e44:	fdiv   st,st(5)
  406e46:	loopne 0x406e89
  406e48:	popf   
  406e49:	push   ebx
  406e4a:	lock iret 
  406e4c:	cs iret 
  406e4e:	mov    esi,ebp
  406e50:	mov    edx,0x2218f2a7
  406e55:	imul   esp,edx,0x5a5d05ad
  406e5b:	mov    al,0xf5
  406e5d:	cmp    bl,BYTE PTR [ebx]
  406e5f:	pushf  
  406e60:	outs   dx,DWORD PTR ds:[esi]
  406e61:	dec    esi
  406e62:	mov    bl,0x4c
  406e64:	add    BYTE PTR [ecx+esi*2-0x5c],dl
  406e68:	xchg   ecx,eax
  406e69:	adc    al,0xe2
  406e6b:	int    0x50
  406e6d:	add    eax,0x76fcdebc
  406e72:	mov    edx,0xb27e66bf
  406e77:	cmp    al,0xc6
  406e79:	lock jp 0x406e9d
  406e7c:	pop    ebp
  406e7d:	xchg   esi,eax
  406e7e:	shl    BYTE PTR [ebx+ebp*1],1
  406e81:	ja     0x406efa
  406e83:	or     dl,dl
  406e85:	dec    eax
  406e86:	jo     0x406e35
  406e88:	scas   al,BYTE PTR es:[edi]
  406e89:	scas   al,BYTE PTR es:[edi]
  406e8a:	retf   
  406e8b:	test   al,0x1b
  406e8d:	cmp    al,0x36
  406e8f:	call   0x88bbe9d2
  406e94:	mov    ch,0xe5
  406e96:	pop    esp
  406e97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e98:	xchg   esi,eax
  406e99:	mov    ch,0x3
  406e9b:	aad    0xdd
  406e9d:	(bad)  
  406e9e:	loopne 0x406e22
  406ea0:	dec    esi
  406ea1:	aam    0xb0
  406ea3:	add    eax,0x9bb629ec
  406ea9:	fs gs mov eax,0x1d229eca
  406eb0:	pop    ebx
  406eb1:	sbb    BYTE PTR [esi],dl
  406eb3:	std    
  406eb4:	push   cs
  406eb5:	cmp    eax,0xd89694b0
  406eba:	pop    eax
  406ebb:	sbb    al,0x88
  406ebd:	ss pop ebp
  406ebf:	not    BYTE PTR [edx-0x1c]
  406ec2:	cmp    bl,cl
  406ec4:	iret   
  406ec5:	xor    DWORD PTR [esi],ebx
  406ec7:	arpl   ax,si
  406ec9:	xor    ecx,DWORD PTR [ebx-0x14]
  406ecc:	fstp   st(1)
  406ece:	xor    DWORD PTR [ebx-0xa],edi
  406ed1:	or     cl,BYTE PTR [edi]
  406ed3:	pop    edi
  406ed4:	lods   eax,DWORD PTR ds:[esi]
  406ed5:	lods   eax,DWORD PTR ds:[esi]
  406ed6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ed7:	add    esi,ecx
  406ed9:	pop    ebp
  406eda:	or     edx,DWORD PTR [eax+0x5f]
  406edd:	dec    esi
  406ede:	sub    DWORD PTR [ecx],eax
  406ee0:	mov    eax,0xa5713420
  406ee5:	cmp    bh,BYTE PTR [eax]
  406ee7:	jne    0x406f3e
  406ee9:	mov    bh,0xcd
  406eeb:	fild   QWORD PTR [edi]
  406eed:	or     eax,0xfa4d3461
  406ef2:	mov    fs,WORD PTR [ebx-0x53ab881]
  406ef8:	leave  
  406ef9:	out    0xcf,eax
  406efb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406efc:	nop
  406efd:	pop    ss
  406efe:	mov    esi,0xfcfdcdc1
  406f03:	aas    
  406f04:	hlt    
  406f05:	add    edi,0x585ce293
  406f0b:	sub    edx,DWORD PTR [edx+0x52c57ff8]
  406f11:	(bad)  
  406f12:	mov    eax,0x409373da
  406f17:	inc    ebx
  406f18:	xchg   edx,eax
  406f19:	jne    0x406eee
  406f1b:	mov    bh,0xa8
  406f1d:	iret   
  406f1e:	pusha  
  406f1f:	pop    ebx
  406f20:	or     bh,BYTE PTR [edx-0x706456b2]
  406f26:	stc    
  406f27:	dec    edx
  406f28:	into   
  406f29:	mov    esi,eax
  406f2b:	repnz push 0x507fd535
  406f31:	fidiv  WORD PTR [ecx-0x61194442]
  406f37:	pop    ecx
  406f38:	js     0x406ecf
  406f3a:	int3   
  406f3b:	lahf   
  406f3c:	push   0xbf624e3b
  406f41:	or     BYTE PTR [ecx-0x55],bl
  406f44:	xchg   dh,cl
  406f46:	clc    
  406f47:	outs   dx,DWORD PTR ds:[esi]
  406f48:	aaa    
  406f49:	mov    DWORD PTR ds:0xebdc6205,esp
  406f4f:	jmp    0x346a:0xdfa56db9
  406f56:	pop    edi
  406f57:	push   ds
  406f58:	call   0xd5f1:0x9d646f45
  406f5f:	jg     0x406f5f
  406f61:	sbb    al,bh
  406f63:	sub    DWORD PTR [edi+0x1e001cd9],esp
  406f69:	dec    eax
  406f6a:	jo     0x406f6b
  406f6c:	dec    ecx
  406f6d:	cli    
  406f6e:	leave  
  406f6f:	add    ebp,edi
  406f71:	jae    0x406f65
  406f73:	imul   ebp,DWORD PTR [ecx+0x32],0x9e2dfc96
  406f7a:	add    DWORD PTR [ebx+eiz*8],edx
  406f7d:	add    al,0xd
  406f7f:	out    0xf,al
  406f81:	adc    al,BYTE PTR [edx-0x72889ce5]
  406f87:	ins    DWORD PTR es:[edi],dx
  406f88:	stos   BYTE PTR es:[edi],al
  406f89:	mov    ebx,0x9a59edff
  406f8e:	ja     0x40700c
  406f90:	xor    BYTE PTR [edi+edx*8-0x159db94f],dl
  406f97:	(bad)  
  406f99:	retf   
  406f9a:	inc    ebp
  406f9b:	cs loope 0x406ff2
  406f9e:	xor    bh,BYTE PTR [ebx]
  406fa0:	test   eax,0xb6e76b1b
  406fa5:	pand   mm5,QWORD PTR [edx+0x32bf6fe2]
  406fac:	out    dx,eax
  406fad:	dec    esi
  406fae:	enter  0x54bf,0x6f
  406fb2:	addr16 mov esi,0xb1e586f2
  406fb8:	xor    al,0xd2
  406fba:	mov    ecx,0x68a1748f
  406fbf:	xor    al,dh
  406fc1:	outs   dx,DWORD PTR gs:[esi]
  406fc3:	xor    ebx,DWORD PTR [ecx+eax*1-0x1c]
  406fc7:	mov    ds:0xbc1d6858,al
  406fcc:	mov    al,0x6f
  406fce:	add    ecx,ebx
  406fd0:	hlt    
  406fd1:	xchg   dh,dh
  406fd3:	lods   eax,DWORD PTR ds:[esi]
  406fd4:	mov    edi,0xc7b5051b
  406fd9:	push   0x73851168
  406fde:	ja     0x406f6c
  406fe0:	push   edx
  406fe1:	push   esp
  406fe2:	xor    cl,BYTE PTR [edi-0xf]
  406fe5:	xor    al,0xda
  406fe7:	adc    eax,0x19797f2d
  406fec:	xchg   esi,eax
  406fed:	pop    ss
  406fee:	mov    es,esi
  406ff0:	adc    ch,dl
  406ff2:	aam    0xc5
  406ff4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ff5:	pop    es
  406ff6:	mov    ebx,0x153a3bd7
  406ffb:	dec    ebx
  406ffc:	(bad)  
  406ffe:	inc    esp
  406fff:	mov    esp,0x55b8a8b4
  407004:	adc    BYTE PTR [edx],0xa7
  407007:	sub    BYTE PTR [eax-0x406ace83],al
  40700d:	xchg   edx,eax
  40700e:	sti    
  40700f:	ret    0xffec
  407012:	std    
  407013:	test   ebx,ebx
  407015:	mov    ecx,0x8864bf15
  40701a:	in     al,dx
  40701b:	mov    esp,0x2cf64e5f
  407020:	fisub  DWORD PTR [ebp-0x4]
  407023:	mov    dl,0xab
  407025:	mov    ds:0xf01de669,eax
  40702a:	fist   DWORD PTR [esi]
  40702c:	jle    0x406fc0
  40702e:	mov    al,0x65
  407030:	mov    cl,BYTE PTR [edi]
  407032:	add    eax,0x660f11ed
  407037:	outs   dx,DWORD PTR ds:[esi]
  407038:	pop    eax
  407039:	fcom   QWORD PTR [edi+0x78]
  40703c:	pushf  
  40703d:	push   es
  40703e:	out    dx,al
  40703f:	stc    
  407040:	pop    eax
  407041:	pop    edx
  407042:	xchg   ebp,eax
  407043:	sub    al,0x2f
  407045:	cwde   
  407046:	push   eax
  407047:	cmp    DWORD PTR [ecx+edx*1+0x36],edi
  40704b:	test   DWORD PTR [eax-0x63],eax
  40704e:	aad    0x97
  407050:	sub    ecx,ebp
  407052:	jb     0x406fd4
  407054:	push   0xffffffe9
  407056:	inc    esp
  407057:	mov    WORD PTR [ebx-0x28],es
  40705a:	test   BYTE PTR [esi],ch
  40705c:	mov    ah,0xda
  40705e:	mov    bh,0xc
  407060:	in     al,dx
  407061:	adc    BYTE PTR [ebx+eiz*1-0x51],dl
  407065:	dec    eax
  407066:	dec    ecx
  407067:	iret   
  407068:	test   al,dh
  40706a:	(bad)  
  40706b:	mov    ds:0x7f40a639,eax
  407070:	push   edi
  407071:	dec    ecx
  407072:	xor    ecx,edx
  407074:	inc    eax
  407075:	jecxz  0x4070e4
  407077:	lea    edx,[eax]
  407079:	in     eax,0xab
  40707b:	mov    cl,0xe8
  40707d:	add    ebp,DWORD PTR [edx-0x45]
  407080:	sub    ah,BYTE PTR [ebx+edi*8-0x6c]
  407084:	mov    DWORD PTR [edi+0x3c0b0b6f],edi
  40708a:	xchg   ebx,eax
  40708b:	mov    bl,0x6c
  40708d:	mov    ebp,0xf3803134
  407092:	int    0xcd
  407094:	adc    DWORD PTR [ebx+eax*2+0x7674c3b3],0x1e
  40709c:	jge    0x407024
  40709e:	aad    0xd4
  4070a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070a1:	push   ebx
  4070a2:	(bad)  
  4070a3:	shl    DWORD PTR [edi],cl
  4070a5:	sahf   
  4070a6:	adc    DWORD PTR [ebx-0x1b],0x1a
  4070aa:	and    BYTE PTR [edx-0x269b432c],bh
  4070b0:	or     bh,cl
  4070b2:	xor    al,0x7a
  4070b4:	sbb    eax,0xdf01e47c
  4070b9:	sbb    al,0xb4
  4070bb:	stos   DWORD PTR es:[edi],eax
  4070bc:	sub    eax,0x34c256b8
  4070c1:	(bad)  [edx+eiz*2+0x7d2c42b4]
  4070c8:	cli    
  4070c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070cb:	push   ds
  4070cc:	pop    edi
  4070cd:	adc    eax,0xb73cc34f
  4070d2:	pushf  
  4070d3:	es mov ch,0x3
  4070d6:	add    eax,0xfa074bf9
  4070db:	xor    DWORD PTR [edi+0x19],ecx
  4070de:	mov    edi,0xfcbfc031
  4070e3:	push   esp
  4070e4:	data16 sub dl,BYTE PTR [eax+0x45]
  4070e8:	pop    ss
  4070e9:	js     0x407073
  4070eb:	retf   0x434e
  4070ee:	push   eax
  4070ef:	push   esi
  4070f0:	dec    esi
  4070f1:	(bad)
  4070f5:	stc    
  4070f6:	in     eax,0x26
  4070f8:	repz jae 0x4070b4
  4070fb:	pop    ebx
  4070fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070fd:	cli    
  4070fe:	inc    edi
  4070ff:	addr16 cmc 
  407101:	pop    es
  407102:	test   DWORD PTR [ebx-0x4b],ebp
  407105:	cmp    BYTE PTR [edx],dl
  407107:	xchg   edi,eax
  407108:	neg    ecx
  40710a:	xor    BYTE PTR [esi-0xf1744cd],dl
  407110:	cld    
  407111:	xchg   ebp,eax
  407112:	dec    edi
  407113:	into   
  407114:	in     al,dx
  407115:	(bad)  
  407116:	dec    esp
  407117:	imul   ebp,esp,0xffffffd0
  40711a:	pop    es
  40711b:	dec    ebx
  40711c:	jecxz  0x4070bf
  40711e:	popa   
  40711f:	stc    
  407120:	int    0x7
  407122:	or     eax,0x950d615a
  407127:	(bad)  
  407128:	mov    ecx,DWORD PTR [edx+eax*2+0x4d]
  40712c:	scas   eax,DWORD PTR es:[edi]
  40712d:	xor    ecx,DWORD PTR [ecx-0x51b54378]
  407133:	mov    esi,0x1cc714d3
  407138:	push   es
  407139:	add    dh,BYTE PTR [edi-0x3c]
  40713c:	mov    ecx,0x88eb3501
  407141:	xor    eax,0xf25e6d1e
  407146:	xchg   edx,eax
  407147:	pop    ss
  407148:	push   edx
  407149:	ret    0x2c52
  40714c:	sub    edi,DWORD PTR [esi-0x4b54f55d]
  407152:	pop    edi
  407153:	or     BYTE PTR [edx+0x7cf56a6e],0xc9
  40715a:	(bad)  
  40715b:	rol    eax,1
  40715d:	xchg   edx,eax
  40715e:	stc    
  40715f:	test   BYTE PTR [edi-0x147de7fc],0xa0
  407166:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407167:	iret   
  407168:	xlat   BYTE PTR ds:[ebx]
  407169:	es mov ah,0xa0
  40716c:	push   0xffffffa7
  40716e:	int    0x8d
  407170:	cs retf 
  407172:	in     eax,dx
  407173:	inc    edx
  407174:	aam    0x36
  407176:	push   ecx
  407177:	retf   
  407178:	sbb    ebp,DWORD PTR [ebp+0x5]
  40717b:	mov    ebp,0x8619d15b
  407180:	xchg   edx,eax
  407181:	push   0x7e
  407183:	sahf   
  407184:	call   0x6c747faf
  407189:	sbb    eax,0x96d6c7af
  40718e:	cld    
  40718f:	lods   eax,DWORD PTR ds:[esi]
  407190:	push   eax
  407191:	pop    edx
  407192:	out    dx,eax
  407193:	jmp    0xd9a4:0x919a3fad
  40719a:	or     al,0x4f
  40719c:	mov    dl,BYTE PTR [edx]
  40719e:	lea    edx,[ecx+0x104650b4]
  4071a4:	dec    edi
  4071a5:	add    DWORD PTR [esi+0x0],0xffffffda
  4071a9:	fistp  DWORD PTR [edx]
  4071ab:	cs stos BYTE PTR es:[edi],al
  4071ad:	test   dh,dh
  4071af:	adc    BYTE PTR [edx+eiz*1+0x3350a789],ch
  4071b6:	cmp    bl,bh
  4071b8:	mov    esp,0xce26a808
  4071bd:	aam    0x81
  4071bf:	outs   dx,DWORD PTR ds:[esi]
  4071c0:	test   esp,ebx
  4071c2:	mov    bh,0xc7
  4071c4:	or     DWORD PTR [eax],0xffffffdc
  4071c7:	ins    DWORD PTR es:[edi],dx
  4071c8:	or     ebp,esi
  4071ca:	fstp   QWORD PTR ds:0x6787c747
  4071d0:	and    DWORD PTR [edx],0xcb97af80
  4071d6:	cmp    DWORD PTR [esi+0x5e],edx
  4071d9:	pop    edi
  4071da:	imul   esi,eax,0xffffffd4
  4071dd:	clc    
  4071de:	mov    bh,0x84
  4071e0:	iret   
  4071e1:	mov    edx,0xf5c38530
  4071e6:	ins    BYTE PTR es:[edi],dx
  4071e7:	jbe    0x4071d9
  4071e9:	xchg   esi,eax
  4071ea:	xor    BYTE PTR [edx],al
  4071ec:	jecxz  0x40722d
  4071ee:	retf   
  4071ef:	xchg   esp,ebp
  4071f1:	pop    ds
  4071f2:	int3   
  4071f3:	jo     0x407187
  4071f5:	mov    ebx,0x1c2e0d48
  4071fa:	stos   DWORD PTR es:[edi],eax
  4071fb:	js     0x4071e3
  4071fd:	loopne 0x40726c
  4071ff:	adc    DWORD PTR [eax+0x73ec8e79],ebp
  407205:	cs cdq 
  407207:	inc    edi
  407208:	std    
  407209:	sub    al,0xd6
  40720b:	dec    edi
  40720c:	and    BYTE PTR [edi],0x5f
  40720f:	mov    bh,bh
  407211:	push   ss
  407212:	retf   
  407213:	xlat   BYTE PTR ds:[ebx]
  407214:	cmp    edi,DWORD PTR ds:0xf0c64192
  40721a:	out    0x72,al
  40721c:	dec    esi
  40721d:	push   es
  40721e:	cmc    
  40721f:	push   ds
  407220:	cwde   
  407221:	xor    dl,BYTE PTR [esi]
  407223:	adc    BYTE PTR ds:[ebp+0x36],0x5f
  407228:	pop    edi
  407229:	out    dx,al
  40722a:	fimul  WORD PTR [ebp+0x4c6431ee]
  407230:	xor    eax,0x9b33cf06
  407235:	mov    eax,0x82992a85
  40723a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40723b:	inc    ebp
  40723c:	das    
  40723d:	jno    0x4071dd
  40723f:	pop    ebx
  407240:	ret    0x487f
  407243:	fistp  WORD PTR [ebx]
  407245:	xor    dh,BYTE PTR ds:0xfc5a49ff
  40724b:	fimul  WORD PTR [edi+0x6f]
  40724e:	and    bl,al
  407250:	sub    ch,dl
  407252:	mov    bh,0xaf
  407254:	fimul  WORD PTR [eax+0x47c50124]
  40725a:	jg     0x4071e7
  40725c:	dec    esp
  40725d:	jg     0x4072a2
  40725f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407260:	dec    edi
  407261:	sbb    ebp,DWORD PTR [edi]
  407263:	mov    bh,0xc3
  407265:	mov    esp,0xc362d926
  40726a:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40726c:	inc    esp
  40726d:	push   es
  40726e:	mov    eax,ds:0xbc879298
  407273:	cmp    esi,DWORD PTR [edx]
  407275:	push   0x38e66152
  40727a:	mov    ebp,0x5b663f00
  40727f:	sub    esp,DWORD PTR [eax+esi*1-0x7684112a]
  407286:	mov    edx,esp
  407288:	(bad)  
  407289:	loope  0x4072c9
  40728b:	jmp    0x61e8:0x81714316
  407292:	or     BYTE PTR [edi-0xf893071],cl
  407298:	ins    DWORD PTR es:[edi],dx
  407299:	xor    al,0x85
  40729b:	cmp    BYTE PTR [edi],dl
  40729d:	pop    es
  40729e:	cs cmp al,cl
  4072a1:	mov    cl,0x96
  4072a3:	add    eax,0xe36084dd
  4072a8:	cmp    eax,DWORD PTR [ebx-0x24]
  4072ab:	repz jnp 0x4072e3
  4072ae:	cmp    al,0xd0
  4072b0:	aam    0x54
  4072b2:	xor    BYTE PTR [ecx-0x327f7324],dh
  4072b8:	neg    BYTE PTR [ebx-0x456a6fed]
  4072be:	or     eax,0x41f410f4
  4072c3:	es mov bh,dl
  4072c6:	test   BYTE PTR fs:[ebx-0x6],ah
  4072ca:	push   ebp
  4072cb:	pop    esi
  4072cc:	jl     0x407265
  4072ce:	jns    0x407290
  4072d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072d1:	cmp    edx,eax
  4072d3:	cld    
  4072d4:	and    al,0xd
  4072d6:	mov    esi,ebp
  4072d8:	stos   DWORD PTR es:[edi],eax
  4072d9:	sbb    BYTE PTR [eax-0x7c],0xe8
  4072dd:	pop    esi
  4072de:	jg     0x4072a3
  4072e0:	out    dx,eax
  4072e1:	add    DWORD PTR [eax+0x6f08f164],0x1baab91
  4072eb:	icebp  
  4072ec:	sbb    eax,0x8bb9f64
  4072f1:	stc    
  4072f2:	clc    
  4072f3:	icebp  
  4072f4:	in     al,dx
  4072f5:	int    0x14
  4072f7:	adc    eax,0xe3635d18
  4072fc:	je     0x407310
  4072fe:	je     0x407371
  407300:	(bad)  
  407301:	jle    0x407378
  407303:	add    DWORD PTR [edx],eax
  407305:	mov    cl,0xf5
  407307:	jp     0x407363
  407309:	adc    ebx,DWORD PTR ds:0xd57caad5
  40730f:	adc    BYTE PTR [ecx],0x58
  407312:	add    DWORD PTR [edi+0x688bca8a],edi
  407318:	jno    0x4072df
  40731a:	cmp    edx,esi
  40731c:	ret    0x9aba
  40731f:	add    al,0x9d
  407321:	and    cl,cl
  407323:	out    0xe,al
  407325:	ja     0x40732d
  407327:	adc    al,0xc7
  407329:	adc    BYTE PTR [edx],cl
  40732b:	add    BYTE PTR cs:[eax+0x2d],al
  40732f:	fnstsw WORD PTR ds:[esi-0x4b]
  407333:	pop    ebx
  407334:	jns    0x4072c2
  407336:	add    ch,dl
  407338:	mov    ch,0x23
  40733a:	or     edx,DWORD PTR [edx+0x29c497f5]
  407340:	xor    al,0x80
  407342:	clc    
  407343:	imul   edx,DWORD PTR [ecx+0x77],0xf373bf86
  40734a:	enter  0x91ad,0x53
  40734e:	sbb    eax,0x79f3f812
  407353:	push   ss
  407354:	cmp    al,0x46
  407356:	(bad)  
  407357:	scas   eax,DWORD PTR es:[edi]
  407358:	or     BYTE PTR [esi],bh
  40735a:	clc    
  40735b:	fsub   QWORD PTR [eax+0x2b]
  40735e:	sbb    BYTE PTR [edi],bl
  407360:	sbb    al,0xc0
  407362:	arpl   WORD PTR [edx],bx
  407364:	loop   0x407393
  407366:	retf   
  407367:	xchg   ebp,eax
  407368:	es out 0x70,al
  40736b:	test   BYTE PTR [ebx],ch
  40736d:	pop    ebp
  40736e:	cmp    ecx,DWORD PTR [ecx+0x43cf59e5]
  407374:	gs inc edx
  407376:	ds xchg edx,eax
  407378:	pop    eax
  407379:	adc    ah,BYTE PTR [esi+esi*8]
  40737c:	mov    al,ds:0x67599649
  407381:	push   esi
  407382:	sbb    dh,0x50
  407385:	mov    esp,0xd43e8abe
  40738a:	ret    0x597
  40738d:	daa    
  40738e:	out    0x89,al
  407390:	push   ds
  407391:	sbb    dl,BYTE PTR [esp+edx*8-0x6724c9c]
  407398:	outs   dx,BYTE PTR ds:[esi]
  407399:	fnstsw WORD PTR [ecx+0x60]
  40739c:	xor    esp,ebp
  40739e:	retf   
  40739f:	sub    dl,al
  4073a1:	cs mov bl,0x33
  4073a4:	xchg   esp,eax
  4073a5:	pop    ds
  4073a6:	adc    ecx,DWORD PTR [esi-0x63bff727]
  4073ac:	mov    ah,0x5d
  4073ae:	out    0xbe,al
  4073b0:	xor    al,bl
  4073b2:	pushf  
  4073b3:	mov    ?,WORD PTR [ecx-0x74fb1b99]
  4073b9:	pop    edi
  4073ba:	idiv   edx
  4073bc:	(bad)  
  4073bd:	popa   
  4073be:	sar    DWORD PTR [eax],0x76
  4073c1:	xchg   esp,eax
  4073c2:	cmp    eax,0x8bcc9f76
  4073c7:	out    0x3c,eax
  4073c9:	ins    DWORD PTR es:[edi],dx
  4073ca:	fst    DWORD PTR [eax+ebp*2]
  4073cd:	xchg   esi,eax
  4073ce:	retf   
  4073cf:	test   al,0x30
  4073d1:	into   
  4073d2:	mov    eax,ds:0xadc1ff62
  4073d7:	js     0x40740b
  4073d9:	cdq    
  4073da:	xor    BYTE PTR [edx+ebp*2-0x60468090],dh
  4073e1:	sbb    al,0xe3
  4073e3:	pop    edi
  4073e4:	jp     0x4073cc
  4073e6:	xchg   DWORD PTR [edx],ebp
  4073e8:	push   es
  4073e9:	add    al,0xfc
  4073eb:	sub    al,0xe0
  4073ed:	xchg   esi,eax
  4073ee:	mov    dl,0x81
  4073f0:	sub    al,0x99
  4073f2:	mov    edx,0x1c0435e
  4073f7:	xchg   dh,dh
  4073f9:	in     eax,dx
  4073fa:	sbb    eax,0x275279ec
  4073ff:	retf   0x8b7
  407402:	dec    ebx
  407403:	aaa    
  407404:	sar    DWORD PTR [ebx-0x3c],1
  407407:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407408:	mov    bl,0x3d
  40740a:	ins    BYTE PTR es:[edi],dx
  40740b:	adc    DWORD PTR [esi-0x1c8330b1],eax
  407411:	push   ecx
  407412:	fcom   DWORD PTR [ecx+0x3f]
  407415:	jmp    0xd23c:0x6c595c16
  40741c:	test   eax,0xa3dab18a
  407421:	int3   
  407422:	in     al,dx
  407423:	cwde   
  407424:	mov    bl,BYTE PTR [edi-0x4c]
  407427:	and    DWORD PTR [ebp+0x25158e44],ebp
  40742d:	add    esi,edi
  40742f:	fcomp  DWORD PTR [ebp+0x734bc6c6]
  407435:	cmp    al,0x74
  407437:	(bad)  
  407438:	cmp    DWORD PTR [edx+0x1032ae8],ebx
  40743e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40743f:	push   es
  407440:	in     al,dx
  407441:	sbb    al,0x39
  407443:	daa    
  407444:	pop    edx
  407445:	neg    BYTE PTR [eax]
  407447:	mov    eax,ds:0x59aa4ae2
  40744c:	in     al,dx
  40744d:	sub    ch,BYTE PTR [ebp+0x22]
  407450:	clc    
  407451:	ins    DWORD PTR es:[edi],dx
  407452:	aad    0xbb
  407454:	xchg   esi,eax
  407455:	mov    ebp,0xa679a1a2
  40745a:	push   ecx
  40745b:	or     cl,bh
  40745d:	scas   eax,DWORD PTR es:[edi]
  40745e:	popa   
  40745f:	fist   DWORD PTR [eax-0x4224eafe]
  407465:	int    0xdd
  407467:	fbld   TBYTE PTR [esp+ebp*8+0x12d5b4c8]
  40746e:	and    al,0x6c
  407470:	icebp  
  407471:	mov    ds:0x661dd360,al
  407476:	jne    0x407417
  407478:	je     0x40744e
  40747a:	or     BYTE PTR [eax],bl
  40747c:	adc    al,0xb
  40747e:	jle    0x4074a0
  407480:	and    esi,ecx
  407482:	push   ds
  407483:	dec    ebp
  407484:	std    
  407485:	not    dh
  407487:	jne    0x407494
  407489:	jo     0x40743e
  40748b:	retf   
  40748c:	imul   ecx,DWORD PTR ds:0xed9eef20,0xffffffeb
  407493:	cli    
  407494:	ss jle 0x40742a
  407497:	push   edx
  407498:	mov    edx,0x586af710
  40749d:	pop    edi
  40749e:	das    
  40749f:	retf   
  4074a0:	mov    esi,0xccbf03ea
  4074a5:	mov    dh,0xaf
  4074a8:	xchg   DWORD PTR [eax+0x5461d34c],esi
  4074ae:	mov    ebp,0x31c0260c
  4074b4:	mul    BYTE PTR [ebx+0x60]
  4074b7:	inc    esp
  4074b8:	loope  0x4074ac
  4074ba:	ins    BYTE PTR es:[edi],dx
  4074bb:	mov    eax,0xe9329b96
  4074c0:	push   0x11376202
  4074c5:	mov    fs,WORD PTR [esi]
  4074c7:	shl    DWORD PTR [esi],0x5d
  4074ca:	sub    eax,0xded91a87
  4074cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074d0:	and    BYTE PTR [si+0x7e],dh
  4074d4:	cli    
  4074d5:	add    DWORD PTR [ecx+0x48],esi
  4074d8:	xchg   ecx,eax
  4074d9:	mov    al,ds:0xd7740a1c
  4074de:	loope  0x4074ce
  4074e0:	fmul   QWORD PTR [eax]
  4074e2:	inc    esp
  4074e3:	push   es
  4074e4:	xchg   ebx,eax
  4074e5:	mov    es,ebp
  4074e7:	xor    al,0x32
  4074e9:	in     al,dx
  4074ea:	out    dx,eax
  4074eb:	jno    0x4074a9
  4074ed:	mov    ecx,DWORD PTR [edx-0x17]
  4074f0:	arpl   bx,di
  4074f2:	or     ebx,edx
  4074f4:	pop    ebp
  4074f5:	in     al,dx
  4074f6:	retf   
  4074f7:	call   0x5aac63c0
  4074fc:	lea    ebx,[eax-0x5afab9b1]
  407502:	jp     0x40749d
  407504:	cli    
  407505:	arpl   bx,si
  407507:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407508:	std    
  407509:	ret    0xc941
  40750c:	adc    BYTE PTR [eax],0x26
  40750f:	icebp  
  407510:	test   al,0x21
  407512:	or     al,0xf7
  407514:	jb     0x4074ba
  407516:	div    DWORD PTR [esi+eiz*8-0x41]
  40751a:	adc    eax,0xe6d7e92c
  40751f:	rcl    BYTE PTR [ecx-0x7576f2ca],0xfb
  407526:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407527:	in     al,0x95
  407529:	int3   
  40752a:	push   ebp
  40752b:	in     eax,dx
  40752c:	mov    esi,0xd8e66f2d
  407531:	and    DWORD PTR [ebx],esi
  407533:	xchg   esp,eax
  407534:	test   eax,0xb4fc675c
  407539:	jno    0x4075b6
  40753b:	inc    esp
  40753c:	in     eax,0xe4
  40753e:	dec    ebx
  40753f:	rol    BYTE PTR [ebx-0x7d],1
  407542:	jb     0x40759a
  407544:	popf   
  407545:	and    DWORD PTR [ecx+0x633d8532],ebx
  40754b:	pop    esi
  40754c:	xchg   ebx,eax
  40754d:	std    
  40754e:	cmp    dh,cl
  407550:	sub    DWORD PTR [edi-0x7adb77f6],esi
  407556:	adc    edx,eax
  407558:	fld    DWORD PTR [ecx+ebp*2-0x6d]
  40755c:	push   esp
  40755d:	int3   
  40755e:	jmp    0x6391:0xcd92e09c
  407565:	outs   dx,DWORD PTR ds:[esi]
  407566:	inc    esi
  407567:	sub    dl,BYTE PTR [edi+edx*8+0x6753849a]
  40756e:	ins    DWORD PTR es:[edi],dx
  40756f:	dec    esi
  407570:	sub    eax,0x9f0385f5
  407575:	or     esp,edi
  407577:	aam    0xb3
  407579:	out    dx,eax
  40757a:	mov    WORD PTR [ecx+0x61],ss
  40757d:	push   0x21
  40757f:	ins    BYTE PTR es:[edi],dx
  407580:	paddsb mm1,mm3
  407583:	cld    
  407584:	out    0xed,al
  407586:	sahf   
  407587:	nop
  407588:	cmp    al,0xd4
  40758a:	je     0x4075fc
  40758c:	data16 sti 
  40758e:	outs   dx,BYTE PTR ds:[esi]
  40758f:	push   eax
  407590:	pop    eax
  407591:	sti    
  407592:	push   ebx
  407593:	sub    DWORD PTR [esi-0x59],edx
  407596:	pop    edi
  407597:	push   cs
  407598:	fstp   QWORD PTR [ebp+0x5581b1cd]
  40759e:	ja     0x40761f
  4075a0:	das    
  4075a1:	pushf  
  4075a2:	aam    0x83
  4075a4:	retf   0x5bee
  4075a7:	push   0x6
  4075a9:	cmp    dl,al
  4075ab:	aaa    
  4075ac:	lds    esp,FWORD PTR [edx-0x6104fa20]
  4075b2:	mov    eax,0x296e4b8d
  4075b7:	(bad)  
  4075b8:	jmp    0x407638
  4075ba:	inc    DWORD PTR [ecx]
  4075bc:	jge    0x40758b
  4075be:	idiv   DWORD PTR [ebx+ecx*4]
  4075c1:	push   ss
  4075c2:	imul   ebp,DWORD PTR [ecx],0x4f
  4075c5:	jmp    0x407629
  4075c7:	test   BYTE PTR [ecx+0x5fd12449],0xb1
  4075ce:	lahf   
  4075cf:	mov    al,0x5c
  4075d1:	push   edi
  4075d2:	pop    eax
  4075d3:	outs   dx,DWORD PTR ds:[esi]
  4075d4:	pop    ss
  4075d5:	inc    esp
  4075d6:	inc    ebx
  4075d7:	adc    eax,0xfd9234d1
  4075dc:	out    0xff,al
  4075de:	jo     0x40761f
  4075e0:	xor    DWORD PTR [ebx+ebx*1+0x7a],ebp
  4075e4:	jl     0x407592
  4075e6:	pmullw mm5,QWORD PTR [ebp+0x1b3aeeb2]
  4075ed:	(bad)  
  4075ee:	ins    BYTE PTR es:[edi],dx
  4075ef:	retf   
  4075f0:	dec    edi
  4075f1:	dec    ebp
  4075f2:	and    al,0x9b
  4075f4:	in     al,dx
  4075f5:	ins    DWORD PTR es:[edi],dx
  4075f6:	cmp    eax,DWORD PTR [edi-0x2ec992cd]
  4075fc:	mov    es,edi
  4075fe:	xchg   ebp,eax
  4075ff:	je     0x40764b
  407601:	jge    0x407586
  407603:	sub    cl,BYTE PTR [ebp+ecx*8-0x4]
  407607:	mov    edi,0x90a5cddb
  40760c:	das    
  40760d:	inc    eax
  40760e:	pop    esi
  40760f:	sub    eax,0x40642bfa
  407614:	cli    
  407615:	icebp  
  407616:	cmp    eax,DWORD PTR [edi]
  407618:	inc    edi
  407619:	cld    
  40761a:	adc    ebx,DWORD PTR ds:0x97356200
  407620:	jmp    0xc05f:0xc8808a5c
  407627:	ffree  st(7)
  407629:	outs   dx,BYTE PTR ds:[esi]
  40762a:	sahf   
  40762b:	out    dx,al
  40762c:	xchg   esi,eax
  40762d:	pop    ss
  40762e:	sbb    eax,DWORD PTR [edi]
  407630:	push   0x9afb475e
  407635:	mov    ds:0x6b675596,al
  40763a:	mov    dh,0xe1
  40763c:	sti    
  40763d:	jo     0x407643
  40763f:	sbb    cl,cl
  407641:	and    eax,0x33adea3
  407646:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407647:	dec    ecx
  407648:	push   esp
  407649:	jl     0x4076ac
  40764b:	xchg   esi,eax
  40764c:	mov    dh,dl
  40764e:	aad    0xd4
  407650:	gs xor ebx,ecx
  407653:	jle    0x407684
  407655:	inc    esp
  407656:	je     0x407625
  407658:	popa   
  407659:	cmc    
  40765a:	daa    
  40765b:	xchg   DWORD PTR [ebp+edi*8-0x1f62775c],ecx
  407662:	loop   0x4076b5
  407664:	retf   0x3197
  407667:	into   
  407668:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407669:	jmp    0x7b4e:0x6730bf46
  407670:	leave  
  407671:	mov    ecx,es
  407673:	leave  
  407674:	lods   al,BYTE PTR ds:[esi]
  407675:	je     0x4076d1
  407677:	cmc    
  407678:	ja     0x40761c
  40767a:	xor    DWORD PTR es:[ebp+0x78],0x57
  40767f:	mov    ebp,fs
  407681:	out    dx,al
  407682:	std    
  407683:	aam    0xeb
  407685:	pop    es
  407686:	xchg   edx,eax
  407687:	pop    ss
  407688:	and    al,0xb6
  40768a:	repz gs sub ch,ch
  40768e:	aam    0x6f
  407690:	xor    edi,0xffffffd5
  407693:	push   edi
  407694:	dec    esi
  407695:	mov    ch,0xfa
  407697:	mov    ebx,0xc35787d6
  40769c:	int    0xc4
  40769e:	fimul  WORD PTR [ecx+0x5c]
  4076a1:	pushf  
  4076a2:	mov    DWORD PTR [ebx+0x24],eax
  4076a5:	mov    cl,0x77
  4076a7:	pop    ds
  4076a8:	loop   0x407712
  4076aa:	clc    
  4076ab:	(bad)  
  4076ac:	enter  0xb8f7,0x2b
  4076b0:	clc    
  4076b1:	mov    bl,0xdb
  4076b3:	jmp    0xeb04:0x89a36dca
  4076ba:	mov    BYTE PTR [edi+0x51],ch
  4076bd:	jp     0x407657
  4076bf:	cs sub al,0xa3
  4076c2:	loope  0x407710
  4076c4:	lods   eax,DWORD PTR ds:[esi]
  4076c5:	pop    es
  4076c6:	sbb    BYTE PTR [ebx+0x30],ah
  4076c9:	or     eax,0xcc7ee1f4
  4076ce:	ds popa 
  4076d0:	mov    ch,0xd2
  4076d2:	mov    ch,0xa3
  4076d4:	pusha  
  4076d5:	pop    ebx
  4076d6:	nop
  4076d7:	dec    ebp
  4076d8:	pop    es
  4076d9:	add    eax,DWORD PTR fs:[esi+0x25]
  4076dd:	jne    0x4076a8
  4076df:	add    al,BYTE PTR [edi+0x2d9c54fe]
  4076e5:	xchg   ebp,eax
  4076e6:	mov    eax,ds:0xaa57b50a
  4076ec:	push   esi
  4076ed:	cmp    BYTE PTR [edi+0xe],cl
  4076f0:	mov    ebx,0xf116e794
  4076f5:	push   ebp
  4076f6:	jp     0x407703
  4076f8:	pusha  
  4076f9:	test   dh,bh
  4076fb:	ins    DWORD PTR es:[edi],dx
  4076fc:	push   ecx
  4076fd:	mov    WORD PTR [di],es
  407700:	inc    edi
  407701:	sti    
  407702:	inc    esp
  407703:	(bad)  
  407705:	cli    
  407706:	adc    eax,0x8e8e93a9
  40770b:	inc    edi
  40770c:	or     al,0xcb
  40770e:	cmp    al,0xc6
  407710:	adc    DWORD PTR [edi],esp
  407712:	je     0x4076b9
  407714:	cmp    DWORD PTR [edi+0x1d347444],0xb00faf0a
  40771e:	pushf  
  40771f:	scas   eax,DWORD PTR es:[edi]
  407720:	loopne 0x4076db
  407722:	aad    0x16
  407724:	cmc    
  407725:	mov    dh,0x63
  407727:	inc    edx
  407728:	mov    cl,0xae
  40772a:	adc    DWORD PTR [edx+0x3e482426],0xffffffcb
  407731:	mov    eax,0xeee893de
  407736:	in     al,dx
  407737:	mov    ecx,0x57b8d2e0
  40773c:	inc    edi
  40773d:	dec    ebp
  40773e:	mov    ebx,0xfcb75eb4
  407743:	fdivp  st(7),st
  407745:	push   esi
  407746:	pushf  
  407747:	sbb    eax,0xdccbaab2
  40774c:	push   edx
  40774d:	sbb    DWORD PTR [eax-0x6de2a311],0xc1603b1e
  407757:	pop    ax
  407759:	call   0xae12:0x3d4a927a
  407760:	adc    BYTE PTR [eax],0x80
  407763:	push   ebx
  407764:	scas   eax,DWORD PTR es:[edi]
  407765:	mov    edx,0x7ba5d921
  40776a:	cli    
  40776b:	add    DWORD PTR [esi-0x709234b0],0xc17a6320
  407775:	mov    al,ds:0x31aaeb7b
  40777a:	jae    0x40770f
  40777c:	fimul  WORD PTR [esi+0x7057f6d3]
  407782:	ret    0xb366
  407785:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407786:	jnp    0x407765
  407788:	int    0x5d
  40778a:	rol    DWORD PTR [ebx-0x5115237c],1
  407790:	adc    esi,ebx
  407792:	test   eax,0x611f391f
  407797:	mov    ebp,DWORD PTR [eax-0x7d5a03dd]
  40779d:	inc    eax
  40779e:	pop    ds
  40779f:	jmp    0x80a:0xbacfb64e
  4077a6:	es inc ecx
  4077a8:	fidiv  DWORD PTR [ebx+ebp*4-0x5c]
  4077ac:	mov    bl,bh
  4077ae:	inc    edi
  4077af:	mov    eax,0xecbaca89
  4077b4:	sbb    al,0x82
  4077b6:	in     eax,0x99
  4077b8:	mov    bh,0x62
  4077ba:	out    0x23,eax
  4077bc:	mov    ch,bh
  4077be:	fidivr WORD PTR [edi+0x2fbde174]
  4077c4:	leave  
  4077c5:	jp     0x4077a6
  4077c7:	fisubr WORD PTR [edx]
  4077c9:	adc    BYTE PTR [ecx-0x67e5d813],ah
  4077cf:	mov    ebp,0xf6eb4865
  4077d4:	je     0x4077f9
  4077d6:	xlat   BYTE PTR ds:[ebx]
  4077d7:	xchg   edi,eax
  4077d8:	dec    esp
  4077d9:	pop    edi
  4077da:	test   DWORD PTR [ebp-0x43647206],0x1aa34ed
  4077e4:	cmc    
  4077e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077e6:	sbb    BYTE PTR [ebx-0x52fd16ca],ch
  4077ec:	ins    DWORD PTR es:[edi],dx
  4077ed:	and    eax,0x2c3b608e
  4077f2:	add    BYTE PTR [ecx+0x6f28275d],dh
  4077f8:	rcr    DWORD PTR [eax],1
  4077fa:	add    edx,DWORD PTR [esi+0x66]
  4077fd:	and    ch,BYTE PTR [esi+0x63f65552]
  407803:	ds fs mov ecx,0xbf12818c
  40780a:	add    dl,BYTE PTR [eax-0x2e]
  40780d:	inc    eax
  40780e:	add    esi,esi
  407810:	lods   eax,DWORD PTR ds:[esi]
  407811:	and    BYTE PTR [esi+0x34f60125],0x8d
  407818:	mov    bl,0xa7
  40781a:	jbe    0x40785a
  40781c:	cmp    DWORD PTR [eax+0x7e],0x1c
  407820:	(bad)  
  407821:	in     al,0x9d
  407823:	pop    edi
  407824:	es gs ss push 0x7a
  407829:	adc    esi,DWORD PTR [edi-0x2f1b7685]
  40782f:	cmp    al,BYTE PTR [edi]
  407831:	ja     0x407800
  407833:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407834:	loopne 0x40788a
  407836:	pop    es
  407837:	jge    0x40786f
  407839:	div    BYTE PTR [esi]
  40783b:	mov    ds:0x503b5884,al
  407840:	fst    QWORD PTR [eax-0x50]
  407843:	lods   eax,DWORD PTR ds:[esi]
  407844:	leave  
  407845:	enter  0x5b23,0x2
  407849:	shl    DWORD PTR [eax+0x5e],0x95
  40784d:	ds ins DWORD PTR es:[edi],dx
  40784f:	adc    DWORD PTR [edi-0x6f],edi
  407852:	jnp    0x4077d5
  407854:	jnp    0x407846
  407856:	cmp    esi,ebp
  407858:	js     0x40786a
  40785a:	mov    ecx,0xbb7716e3
  40785f:	push   ebx
  407860:	xlat   BYTE PTR ds:[ebx]
  407861:	dec    esi
  407862:	stc    
  407863:	es in  eax,dx
  407865:	or     DWORD PTR [edx-0x4a],ecx
  407868:	dec    edx
  407869:	iret   
  40786a:	out    0x21,eax
  40786c:	(bad)  
  40786d:	cli    
  40786e:	sahf   
  40786f:	test   DWORD PTR [ebx],edx
  407871:	push   edi
  407872:	imul   ebp,DWORD PTR [ebx+0x205beb82],0x4f
  407879:	xchg   esi,eax
  40787a:	mov    ebx,0xcb8c2701
  40787f:	std    
  407880:	test   eax,0x2209eb00
  407885:	dec    edx
  407886:	mov    bl,0xc8
  407888:	mov    cl,0x91
  40788a:	int3   
  40788b:	jp     0x407828
  40788d:	test   eax,0x43c21a21
  407892:	in     eax,0xe3
  407894:	ficom  DWORD PTR [esi]
  407896:	xchg   ebx,eax
  407897:	sub    DWORD PTR [esi],esi
  407899:	mov    esi,0xa642663f
  40789e:	dec    edi
  40789f:	mov    esi,0xa0ed13a5
  4078a4:	in     al,0xbd
  4078a6:	test   al,0xa0
  4078a8:	cld    
  4078a9:	shl    DWORD PTR [ebx+0x7f],0x5b
  4078ad:	ja     0x4078d5
  4078af:	add    eax,0x76804d8
  4078b4:	or     cl,cl
  4078b6:	fwait
  4078b7:	daa    
  4078b8:	test   edi,edx
  4078ba:	adc    eax,0x343317df
  4078bf:	cdq    
  4078c0:	ss loopne 0x407887
  4078c3:	push   edi
  4078c4:	push   edx
  4078c5:	sub    DWORD PTR [edi-0x13a5f559],ebx
  4078cb:	mov    WORD PTR [ebx-0x4ec5b706],ss
  4078d1:	outs   dx,BYTE PTR ds:[esi]
  4078d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078d3:	xchg   ebx,eax
  4078d4:	adc    ebx,ebx
  4078d6:	jbe    0x407917
  4078d8:	fild   DWORD PTR [edx+0x9]
  4078db:	fcmovb st,st(7)
  4078dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078de:	and    bl,bl
  4078e0:	fdivp  st(6),st
  4078e2:	xchg   ecx,eax
  4078e3:	sbb    DWORD PTR [ebp+0x0],ecx
  4078e6:	jnp    0x407921
  4078e8:	(bad)  
  4078e9:	(bad)  
  4078ea:	jmp    0x407912
  4078ec:	adc    edi,ebp
  4078ee:	or     BYTE PTR [edi],ch
  4078f0:	push   eax
  4078f1:	and    al,BYTE PTR ds:0x147c2c3c
  4078f7:	xchg   ebp,eax
  4078f8:	or     DWORD PTR [edx],eax
  4078fa:	addr16 test esp,0x29284403
  407901:	dec    eax
  407902:	popa   
  407903:	imul   eax,esi,0x9f0d7b98
  407909:	test   BYTE PTR [esi+0x6f],bl
  40790c:	fistp  QWORD PTR [esi+0x350ea404]
  407912:	ja     0x407898
  407914:	repnz xor cl,BYTE PTR [eax+0x3d]
  407918:	mov    bl,0xa2
  40791a:	aad    0x4
  40791c:	cmp    edi,DWORD PTR [ebx+0x46fc5d9b]
  407922:	ins    DWORD PTR es:[edi],dx
  407923:	(bad)  
  407924:	or     al,0x99
  407926:	in     al,0xd6
  407928:	mov    DWORD PTR [ebp+0x50],edx
  40792b:	das    
  40792c:	pushf  
  40792d:	push   0x450c0cbd
  407932:	push   ebx
  407933:	or     DWORD PTR [esi-0x4a],ebp
  407936:	push   es
  407937:	xlat   BYTE PTR ds:[ebx]
  407938:	pop    ds
  407939:	imul   BYTE PTR [eax+eiz*8+0xa]
  40793d:	lock outs dx,DWORD PTR ds:[esi]
  40793f:	jbe    0x407989
  407941:	in     eax,dx
  407942:	sbb    al,0xd
  407944:	imul   eax,DWORD PTR [ecx],0x38
  407947:	mov    bh,0xd9
  407949:	inc    esi
  40794a:	adc    ebp,DWORD PTR [ebx]
  40794c:	cwde   
  40794d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40794e:	add    al,0xdc
  407950:	cmp    BYTE PTR ds:0xdcbe366f,dl
  407956:	loopne 0x407978
  407958:	ss aam 0xfa
  40795b:	lock loop 0x4079dc
  40795e:	inc    esp
  40795f:	or     BYTE PTR [eax-0x11],bl
  407962:	fs pop ebp
  407964:	or     al,0x93
  407966:	mov    bl,0xb6
  407968:	mov    DWORD PTR [ecx+0x7eb33fd6],eax
  40796e:	jle    0x4079d5
  407970:	test   DWORD PTR [ecx+0xf2f8c40],esp
  407976:	je     0x407950
  407978:	jb     0x407962
  40797a:	ror    BYTE PTR [ebx],0xf3
  40797d:	cmc    
  40797e:	adc    BYTE PTR [ebx-0x28fdbcaf],bl
  407984:	mov    esi,0x40503180
  407989:	fld    TBYTE PTR [edi-0x57b43f6d]
  40798f:	aas    
  407990:	aaa    
  407991:	pushf  
  407992:	mov    eax,ds:0x22baafc8
  407997:	or     BYTE PTR [esi+0x40234890],dl
  40799d:	(bad)  
  40799e:	jno    0x407959
  4079a0:	lods   eax,DWORD PTR ds:[esi]
  4079a1:	mov    ecx,0x5c3972e9
  4079a6:	mul    ebp
  4079a8:	in     eax,dx
  4079a9:	in     eax,0x71
  4079ab:	outs   dx,DWORD PTR ds:[esi]
  4079ac:	int    0x5c
  4079ae:	test   al,0x61
  4079b0:	mov    ds:0x145607d6,al
  4079b5:	xchg   ecx,eax
  4079b6:	adc    DWORD PTR ds:0xb9ef22e1,edi
  4079bc:	push   esi
  4079bd:	cdq    
  4079be:	push   0x7b
  4079c0:	sub    eax,0x7c739fd
  4079c5:	push   ebx
  4079c6:	dec    ebp
  4079c7:	repnz add BYTE PTR [ecx],ah
  4079ca:	cs jno 0x4c8df572
  4079d1:	mov    edx,0xff61765d
  4079d6:	test   esi,edi
  4079d8:	jbe    0x40798c
  4079da:	sbb    esi,eax
  4079dc:	in     al,0x80
  4079de:	sbb    ecx,edi
  4079e0:	and    al,0xb3
  4079e2:	retf   0x1412
  4079e5:	mov    bl,0xf2
  4079e7:	or     al,0x56
  4079e9:	xchg   ebp,eax
  4079ea:	xchg   ebp,eax
  4079eb:	mov    ebx,0xecf876fc
  4079f0:	(bad)  
  4079f1:	ss pop esi
  4079f3:	mov    ?,ecx
  4079f5:	sbb    DWORD PTR [ebp-0x4f72a62f],ecx
  4079fb:	xor    bh,BYTE PTR gs:[ebx]
  4079fe:	hlt    
  4079ff:	fcom   DWORD PTR ds:0x20d8f0e1
  407a05:	jns    0x407a0f
  407a07:	and    BYTE PTR [esi+0x3277c5d3],bh
  407a0d:	jno    0x407994
  407a0f:	xchg   esi,eax
  407a10:	jne    0x407a57
  407a12:	push   eax
  407a13:	rcr    DWORD PTR [edi+0x2676b35a],0x2b
  407a1a:	pop    ebp
  407a1b:	dec    BYTE PTR [edx+0x35]
  407a1e:	stos   BYTE PTR es:[edi],al
  407a1f:	sbb    BYTE PTR [ecx],0xac
  407a22:	ss fucomp st(6)
  407a25:	add    BYTE PTR [esi+esi*2-0xf],0xac
  407a2a:	or     eax,0xd76ba287
  407a2f:	std    
  407a30:	ds cwde 
  407a32:	retf   0x7cf7
  407a35:	adc    ah,BYTE PTR [ebx+0x1f]
  407a38:	mov    bl,0xb3
  407a3a:	mov    al,0x3f
  407a3c:	ins    BYTE PTR es:[edi],dx
  407a3d:	(bad)  
  407a3e:	cmc    
  407a3f:	adc    DWORD PTR [ebp+0x59],0x3b
  407a43:	and    BYTE PTR [esi+0x4c],bl
  407a46:	frstor [esi]
  407a48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a49:	data16 out dx,al
  407a4b:	retf   
  407a4c:	or     BYTE PTR [esi-0x78],0x51
  407a50:	enter  0x187f,0xce
  407a54:	call   0xafaf63b7
  407a59:	(bad)  
  407a5a:	dec    esi
  407a5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a5c:	jmp    0x3a95:0x7a32fc24
  407a63:	dec    ebp
  407a64:	jmp    0xb5cd394e
  407a69:	sub    eax,0x75d9151b
  407a6e:	loopne 0x407a24
  407a70:	push   es
  407a71:	xchg   ebp,eax
  407a72:	call   0x26c2dc96
  407a77:	jmp    0xc50c:0xadf12c63
  407a7e:	mov    ds:0x62a808a9,al
  407a83:	or     al,0xc1
  407a85:	or     ecx,eax
  407a87:	ret    0xd5cd
  407a8a:	cli    
  407a8b:	mov    esp,edi
  407a8d:	or     BYTE PTR [eax-0x34],bh
  407a90:	mov    eax,ds:0xc01f5a57
  407a95:	inc    ebp
  407a96:	jg     0x407a6b
  407a98:	inc    edi
  407a99:	xchg   DWORD PTR [esi+0xb],ebp
  407a9c:	xchg   esi,eax
  407a9d:	test   eax,0x83a1f30
  407aa2:	scas   eax,DWORD PTR es:[edi]
  407aa3:	adc    dh,dh
  407aa5:	push   ss
  407aa6:	inc    esi
  407aa7:	mov    bl,0xd5
  407aa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407aaa:	ins    DWORD PTR es:[edi],dx
  407aab:	xchg   esp,eax
  407aac:	xchg   ecx,eax
  407aad:	test   al,0x25
  407aaf:	(bad)  
  407ab0:	les    edx,FWORD PTR [ecx]
  407ab2:	mov    ecx,0x39b6f2b
  407ab7:	sbb    eax,0xc747bbbf
  407abc:	cmp    BYTE PTR [edx+0x64],al
  407abf:	sahf   
  407ac0:	or     al,0x46
  407ac2:	mov    ecx,0x27c24e5c
  407ac7:	adc    ebx,DWORD PTR [eax+0x6e]
  407aca:	in     al,0x48
  407acc:	(bad)  
  407acd:	cmp    BYTE PTR [eax+0x6c815814],ch
  407ad3:	test   DWORD PTR [ebx],0x21b8edd1
  407ad9:	ret    0xb4e4
  407adc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407add:	pusha  
  407ade:	nop
  407adf:	ss mov ebp,0xce224f48
  407ae5:	int    0x5c
  407ae7:	(bad)  
  407ae8:	jmp    0x724b:0x51ed7e10
  407aef:	loopne 0x407b18
  407af1:	mov    DWORD PTR [esi-0x15aba05b],esi
  407af7:	(bad)  
  407af9:	jmp    0x407ac8
  407afb:	loope  0x407b6d
  407afd:	mov    ch,0x27
  407aff:	sbb    DWORD PTR [ecx+0x18],ebp
  407b02:	mov    dh,0x3a
  407b04:	dec    ebx
  407b05:	mov    edx,0x4818df2b
  407b0a:	and    bl,BYTE PTR [ebp+0x5a]
  407b0d:	cmp    DWORD PTR [ecx-0x27d7ca37],edx
  407b13:	pop    ds
  407b14:	xor    BYTE PTR ds:0xec11275a,dh
  407b1a:	data16 xor ah,dh
  407b1d:	or     DWORD PTR [ebp-0x1711c25b],ebp
  407b23:	push   esi
  407b24:	(bad)
  407b27:	int3   
  407b28:	es (bad) 
  407b2a:	cdq    
  407b2b:	sbb    dl,BYTE PTR [ebp-0x32]
  407b2e:	in     eax,0x95
  407b30:	pop    edi
  407b31:	xor    edx,edi
  407b33:	mov    esp,DWORD PTR [edi+0x14418e49]
  407b39:	mov    edx,0x3768cfdd
  407b3e:	jle    0x407b0a
  407b40:	push   cs
  407b41:	xchg   ebp,eax
  407b42:	inc    ebp
  407b43:	mov    DWORD PTR [edi],esi
  407b45:	xor    bl,BYTE PTR [edx-0x2d47079e]
  407b4b:	stc    
  407b4c:	xor    DWORD PTR [edx+0x437b1009],0x1c77e05f
  407b56:	out    0x95,eax
  407b58:	or     ecx,esi
  407b5a:	add    al,0x1
  407b5c:	cli    
  407b5d:	aad    0x6
  407b5f:	in     eax,dx
  407b60:	sbb    edi,DWORD PTR [ecx]
  407b62:	jae    0xf55f83e6
  407b68:	mov    ch,0xf3
  407b6a:	xor    ebx,DWORD PTR [edi]
  407b6c:	cmp    ch,0xae
  407b6f:	push   edx
  407b70:	mov    ebp,0xc575a2cf
  407b75:	mov    edx,0x37257a0
  407b7a:	mov    WORD PTR [ebx],ds
  407b7c:	pushf  
  407b7d:	jmp    0xd87566f4
  407b82:	push   ds
  407b83:	(bad)  
  407b84:	int3   
  407b85:	fild   DWORD PTR [edi-0x33051f6a]
  407b8b:	call   0x321c:0xf3ee51b2
  407b92:	cmp    al,0x3c
  407b94:	fwait
  407b95:	lea    edx,[edx+0x49]
  407b98:	adc    BYTE PTR [ebx-0x4b4253b9],ah
  407b9e:	xchg   edi,eax
  407b9f:	into   
  407ba0:	repz stc 
  407ba2:	mov    esi,0x8c431b85
  407ba7:	je     0x407bf3
  407ba9:	sti    
  407baa:	mov    ds:0x8dc5dcd,eax
  407baf:	or     edi,DWORD PTR [esi-0xe]
  407bb2:	and    eax,0xe4a6bd26
  407bb7:	sub    eax,0x8fab1e16
  407bbc:	dec    esi
  407bbd:	call   0x2eadb45
  407bc2:	jecxz  0x407c1c
  407bc4:	retf   
  407bc5:	sub    al,0xc3
  407bc7:	cmp    eax,0x74805330
  407bcc:	mov    ah,0x21
  407bce:	cmp    al,0xbf
  407bd0:	mov    ds:0xe56a6c63,eax
  407bd5:	scas   al,BYTE PTR es:[edi]
  407bd6:	adc    cl,cl
  407bd8:	xchg   bh,ch
  407bda:	jne    0x407ba0
  407bdc:	into   
  407bdd:	jge    0x407c41
  407bdf:	pop    edx
  407be0:	push   esi
  407be1:	jns    0x407b95
  407be3:	mov    ds:0xb2166057,eax
  407be8:	jp     0x407b6f
  407bea:	xadd   BYTE PTR [esi-0x12],bh
  407bee:	fwait
  407bef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407bf0:	jmp    DWORD PTR [edi+0x654ac837]
  407bf6:	imul   esi,ebp,0x2b267b28
  407bfc:	enter  0x20e3,0xb8
  407c00:	push   esp
  407c01:	jmp    0x54a8:0xf8896691
  407c08:	aad    0xe2
  407c0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c0b:	mov    ?,WORD PTR [edi+ecx*1-0x74]
  407c0f:	and    esi,DWORD PTR [ecx]
  407c11:	inc    eax
  407c12:	repnz dec esi
  407c14:	cmp    cl,BYTE PTR [esi]
  407c16:	cld    
  407c17:	adc    DWORD PTR [eax-0x2d],ecx
  407c1a:	sub    esp,DWORD PTR cs:[ebp+0x36]
  407c1e:	stos   BYTE PTR es:[edi],al
  407c1f:	xor    ebp,DWORD PTR [ebx+0x6c85eeb5]
  407c25:	push   ecx
  407c26:	repz jnp 0x407c8c
  407c29:	leave  
  407c2a:	cmp    al,0xc3
  407c2c:	push   ebp
  407c2d:	(bad)  ds:0xcaf7bca1
  407c33:	mov    dl,0xf8
  407c35:	loop   0x407bbc
  407c37:	inc    ebx
  407c38:	mov    bh,0xb6
  407c3a:	stos   BYTE PTR es:[edi],al
  407c3b:	popf   
  407c3c:	outs   dx,DWORD PTR ds:[esi]
  407c3d:	je     0x407c00
  407c3f:	aaa    
  407c40:	mov    dl,0x0
  407c42:	dec    ebp
  407c43:	cmp    eax,0xbcb07309
  407c48:	enter  0xd2d9,0x35
  407c4c:	inc    bx
  407c4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c4f:	or     BYTE PTR [esi-0x2e],0xa
  407c53:	fs cmp eax,0xfe9dd490
  407c59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c5a:	mov    dh,al
  407c5c:	jmp    0xfa596318
  407c61:	pop    esp
  407c62:	and    ebx,ecx
  407c64:	cmp    al,0x8a
  407c66:	lahf   
  407c67:	pop    ecx
  407c68:	jmp    0x407c26
  407c6a:	mov    al,0x3c
  407c6c:	mov    esi,ecx
  407c6e:	pushf  
  407c6f:	(bad)  
  407c70:	mov    eax,0x67f862da
  407c75:	pop    edx
  407c76:	and    DWORD PTR [ebx],0x54
  407c79:	xchg   ebx,eax
  407c7a:	adc    cl,BYTE PTR [ecx+eiz*8]
  407c7d:	sti    
  407c7e:	mov    eax,0xc566835d
  407c83:	lods   eax,DWORD PTR ds:[esi]
  407c84:	(bad)  
  407c86:	ret    
  407c87:	pop    ebx
  407c88:	and    esp,edx
  407c8a:	(bad)  
  407c8b:	popa   
  407c8c:	xchg   edx,eax
  407c8d:	jmp    0xbed6:0x6bda0374
  407c94:	jnp    0x407c83
  407c96:	xchg   BYTE PTR [ecx],dl
  407c98:	cmp    BYTE PTR [ebx],bh
  407c9a:	add    eax,DWORD PTR [ecx+0x74]
  407c9d:	sbb    al,0xed
  407c9f:	xor    dl,bh
  407ca1:	push   ss
  407ca2:	cmp    edi,DWORD PTR [edx]
  407ca4:	mov    cl,0x7c
  407ca6:	mul    bl
  407ca8:	jmp    eax
  407caa:	arpl   si,ax
  407cac:	jmp    0x407d11
  407cae:	(bad)  
  407caf:	pop    eax
  407cb0:	push   edi
  407cb1:	jl     0x407d0a
  407cb3:	mov    gs,WORD PTR [ebx+0x75]
  407cb6:	ds cmp eax,0xbd1dcef3
  407cbc:	jg     0x407c94
  407cbe:	outs   dx,BYTE PTR ds:[esi]
  407cbf:	fdiv   QWORD PTR [esi-0x263e8487]
  407cc5:	mov    dh,0xe6
  407cc7:	xchg   edx,eax
  407cc8:	fwait
  407cc9:	mov    al,ds:0x13d48f44
  407cce:	push   esi
  407ccf:	add    ebp,DWORD PTR [esp+ebx*4+0x7b]
  407cd3:	mov    fs,WORD PTR [ebx+0x54]
  407cd6:	in     al,dx
  407cd7:	or     ah,BYTE PTR [ecx+0x5]
  407cda:	inc    esp
  407cdb:	nop
  407cdc:	pop    ecx
  407cdd:	cwde   
  407cde:	adc    eax,0xa4fe6e54
  407ce3:	addr16 adc al,0xbc
  407ce6:	xchg   esi,eax
  407ce7:	cmp    al,0xb9
  407ce9:	sbb    dl,BYTE PTR ds:0xb96a9855
  407cef:	bound  esi,QWORD PTR [ebp-0x67647d38]
  407cf5:	push   ss
  407cf6:	xchg   esp,eax
  407cf7:	push   0x6b45122f
  407cfc:	mov    dh,0x65
  407cfe:	or     edx,esp
  407d00:	lea    esi,[ecx+ecx*8-0x71181850]
  407d07:	test   edx,eax
  407d09:	shr    bh,cl
  407d0b:	aam    0x93
  407d0d:	push   esi
  407d0e:	popf   
  407d0f:	mov    esi,ss
  407d11:	sbb    BYTE PTR [eax+0x5d1541a1],bl
  407d17:	cmc    
  407d18:	push   edi
  407d19:	push   ecx
  407d1a:	cmp    BYTE PTR fs:[eax-0x18],bl
  407d1e:	jmp    0x407d3f
  407d20:	push   0x59709a03
  407d25:	call   0xa53f:0x49976242
  407d2c:	call   0xc5132dd7
  407d31:	or     al,0xb0
  407d33:	xor    al,0xe3
  407d35:	mov    bh,BYTE PTR es:[ebx]
  407d38:	inc    esp
  407d39:	shl    DWORD PTR [ebp-0xb],0xf0
  407d3d:	dec    edi
  407d3e:	cld    
  407d3f:	int3   
  407d40:	lds    eax,FWORD PTR [ebx-0x33]
  407d43:	out    0x28,eax
  407d45:	jecxz  0x407d0e
  407d47:	shl    BYTE PTR [ecx+0x67],1
  407d4a:	loopne 0x407d7d
  407d4c:	or     eax,0xc36a6b7c
  407d51:	pop    eax
  407d52:	bnd jo 0x407ce7
  407d55:	push   esi
  407d56:	mov    edi,0xc712e9ea
  407d5b:	jmp    0x407dd5
  407d5d:	pop    ebp
  407d5e:	lds    eax,FWORD PTR [eax-0x7c]
  407d61:	pop    esp
  407d62:	mov    bh,0x9e
  407d64:	jmp    0x877399f9
  407d69:	jmp    0x146b:0x15f92215
  407d70:	xor    DWORD PTR [ecx+0x68],ecx
  407d73:	push   es
  407d74:	into   
  407d75:	add    esp,DWORD PTR [ecx]
  407d77:	scas   eax,DWORD PTR es:[edi]
  407d78:	push   esi
  407d79:	adc    DWORD PTR [edx+0x7a905ecc],0x644483ac
  407d83:	test   BYTE PTR ds:0x2fac8760,dl
  407d89:	outs   dx,BYTE PTR ds:[esi]
  407d8a:	fidivr WORD PTR [ebp+0x4af959f3]
  407d90:	ror    bl,cl
  407d92:	std    
  407d93:	xor    BYTE PTR [eax],0x46
  407d96:	loope  0x407df1
  407d98:	cmp    eax,0x976e7a1a
  407d9d:	push   0x50a97bd6
  407da2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407da3:	mov    dh,0x7b
  407da5:	pusha  
  407da6:	or     DWORD PTR [eax+0x5a],ebx
  407da9:	push   es
  407daa:	retf   
  407dab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407dac:	scas   al,BYTE PTR es:[edi]
  407dad:	sbb    ebx,DWORD PTR [edi+esi*2]
  407db0:	dec    esi
  407db1:	push   ds
  407db2:	jno    0x407df8
  407db4:	loopne 0x407ddf
  407db6:	fiadd  DWORD PTR [edx-0x26]
  407db9:	sahf   
  407dba:	cli    
  407dbb:	scas   eax,DWORD PTR es:[edi]
  407dbc:	cli    
  407dbd:	jg     0x407d56
  407dbf:	sub    ah,BYTE PTR [edi+0x4edf9d53]
  407dc5:	das    
  407dc6:	push   0x45
  407dc8:	pop    edi
  407dc9:	mov    ds:0x32d83f98,eax
  407dce:	icebp  
  407dcf:	mul    BYTE PTR [ebx+0x74]
  407dd2:	inc    esp
  407dd3:	push   eax
  407dd4:	in     eax,0xe0
  407dd6:	adc    ch,BYTE PTR [esi]
  407dd8:	add    bl,ch
  407dda:	xor    eax,0xc3040122
  407ddf:	mov    esi,0x1baa440
  407de4:	fwait
  407de5:	aaa    
  407de6:	retf   
  407de7:	ret    
  407de8:	rol    ecx,0xc
  407deb:	(bad)  
  407dec:	sbb    DWORD PTR [edx],ecx
  407dee:	inc    ebp
  407def:	test   DWORD PTR [ecx-0x1dd7b337],0xb6d35a76
  407df9:	mov    ds:0xddae3820,al
  407dfe:	and    dl,BYTE PTR [edi-0x7fc6d9f1]
  407e04:	pop    eax
  407e05:	cmp    ebx,DWORD PTR [ebp+0x61]
  407e08:	pop    ebp
  407e09:	fstp   DWORD PTR [ecx-0x4e959f65]
  407e0f:	xor    al,0x4f
  407e11:	push   esp
  407e12:	xor    eax,0x99725a1b
  407e17:	pop    ebp
  407e18:	ja     0x407e24
  407e1a:	inc    esp
  407e1b:	xor    ch,BYTE PTR [ebx+eiz*4]
  407e1e:	mov    eax,ds:0x30c24a36
  407e23:	jbe    0x407e07
  407e25:	xor    ebx,DWORD PTR [ecx]
  407e27:	cmp    DWORD PTR [eax],0x1e
  407e2a:	rol    DWORD PTR [esi-0x76d5d376],1
  407e30:	(bad)  
  407e32:	inc    esi
  407e33:	lea    ebp,[esi+0x61]
  407e36:	int3   
  407e37:	cld    
  407e38:	gs jmp 0x407deb
  407e3b:	loope  0x407dc7
  407e3d:	xchg   DWORD PTR [edx-0xf],ecx
  407e40:	mov    DWORD PTR [ebp-0x78],ecx
  407e43:	aam    0x55
  407e45:	inc    eax
  407e46:	lods   eax,DWORD PTR ds:[esi]
  407e47:	mov    ebx,0xfb0c5e6b
  407e4c:	pop    eax
  407e4d:	mov    eax,DWORD PTR [edx-0x56]
  407e50:	sbb    dl,BYTE PTR [esi-0x5b]
  407e53:	dec    ebx
  407e54:	push   ss
  407e55:	bound  eax,QWORD PTR [ecx]
  407e57:	inc    esi
  407e58:	lock pop edx
  407e5a:	pusha  
  407e5b:	test   eax,0x91431057
  407e60:	or     al,0x9c
  407e62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e63:	cmp    al,0x48
  407e65:	mov    edi,0x4dab3b92
  407e6a:	arpl   WORD PTR [esi-0x31],bx
  407e6d:	and    BYTE PTR [ecx],0x7f
  407e70:	jge    0x407e16
  407e72:	mov    dl,0x59
  407e74:	cmp    DWORD PTR [ecx],edi
  407e76:	cmp    eax,0xb2b96191
  407e7b:	push   0xffffffc8
  407e7d:	cmp    DWORD PTR [ebp+0x5ad13985],0x4ff4348b
  407e87:	mul    dl
  407e89:	cmp    ecx,eax
  407e8b:	pop    es
  407e8c:	xchg   esi,eax
  407e8d:	pop    edx
  407e8e:	(bad)  
  407e8f:	push   ds
  407e90:	pop    ebp
  407e91:	test   al,0x3
  407e93:	xchg   ebp,eax
  407e94:	ficom  WORD PTR [eax]
  407e96:	mov    dh,0x2d
  407e98:	ss int 0x66
  407e9b:	mov    ecx,0x5eca450c
  407ea1:	ret    
  407ea2:	or     bl,BYTE PTR [ebp-0x57]
  407ea5:	sub    edi,esi
  407ea7:	sti    
  407ea8:	clc    
  407ea9:	outs   dx,BYTE PTR ds:[esi]
  407eaa:	fst    QWORD PTR [eax]
  407eac:	push   ds
  407ead:	jge    0x407e78
  407eaf:	cmp    dl,BYTE PTR [eax+esi*8+0x61]
  407eb3:	les    ebx,FWORD PTR [edi+0xbba8380]
  407eb9:	ds inc ebp
  407ebb:	or     edx,DWORD PTR [ecx+0x1c]
  407ebe:	stos   BYTE PTR es:[edi],al
  407ebf:	retf   0x6236
  407ec2:	mov    bl,0xab
  407ec4:	lea    esp,[ecx]
  407ec6:	dec    ecx
  407ec7:	jp     0x407f2d
  407ec9:	bswap  edi
  407ecb:	add    eax,0x7c49cf79
  407ed0:	aaa    
  407ed1:	inc    edx
  407ed2:	fs jp  0x407e6c
  407ed5:	mov    edi,0x30e34326
  407eda:	pop    edx
  407edb:	mov    al,0xdf
  407edd:	xchg   edi,eax
  407ede:	cmc    
  407edf:	xor    DWORD PTR [edi],edi
  407ee1:	into   
  407ee2:	out    dx,al
  407ee3:	jmp    0x407ecd
  407ee5:	mov    dl,0x6
  407ee7:	xor    dh,dl
  407ee9:	ins    BYTE PTR es:[edi],dx
  407eea:	psubusb mm1,QWORD PTR [ebp-0x38]
  407eee:	jle    0x407e90
  407ef0:	and    al,0xc2
  407ef2:	int3   
  407ef3:	fisttp DWORD PTR [ebx-0x7c]
  407ef6:	test   edx,ebp
  407ef8:	hlt    
  407ef9:	ins    DWORD PTR es:[edi],dx
  407efa:	out    0x2a,eax
  407efc:	leave  
  407efd:	(bad)  
  407efe:	xor    ch,BYTE PTR [ebp-0x1e6be564]
  407f04:	mov    esi,0x77a30ce8
  407f09:	cdq    
  407f0a:	push   esp
  407f0b:	stc    
  407f0c:	(bad)  
  407f0d:	add    DWORD PTR fs:[edx],ecx
  407f10:	inc    edi
  407f11:	std    
  407f12:	aas    
  407f13:	test   DWORD PTR [ecx-0x2c3a05fc],edx
  407f19:	xchg   ecx,eax
  407f1a:	xor    BYTE PTR [edi],0xf2
  407f1d:	ins    DWORD PTR es:[edi],dx
  407f1e:	ja     0x407ece
  407f20:	fidivr DWORD PTR [edx]
  407f22:	sub    dl,0x3b
  407f25:	cmp    eax,0xf603c8fc
  407f2a:	test   BYTE PTR [edi-0x66a7bbc6],bh
  407f30:	(bad)  
  407f31:	in     al,dx
  407f32:	add    eax,DWORD PTR [ebp+0x4e]
  407f35:	mov    ds:0x4d5483aa,al
  407f3a:	mov    ch,0xdd
  407f3c:	push   edx
  407f3d:	jle    0x407f21
  407f3f:	pop    edi
  407f40:	daa    
  407f41:	dec    ebx
  407f42:	fisttp WORD PTR [ebx]
  407f44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f45:	call   0x1007:0x1da7ce60
  407f4c:	pop    ebx
  407f4d:	jmp    0x26be:0x52b4b523
  407f54:	inc    ecx
  407f55:	xor    bl,dh
  407f57:	repnz xor ebx,DWORD PTR [eax+edx*4-0x3c]
  407f5c:	cmp    DWORD PTR [ebx-0x16054d17],edx
  407f62:	test   eax,0x9c46be44
  407f67:	into   
  407f68:	dec    BYTE PTR [edx]
  407f6a:	addr16 test eax,0xded06ca6
  407f70:	inc    esi
  407f71:	outs   dx,BYTE PTR ds:[esi]
  407f72:	in     al,dx
  407f73:	sub    al,0xd
  407f75:	dec    esi
  407f76:	push   edx
  407f77:	sbb    BYTE PTR [ebp+0x6672a770],bl
  407f7d:	sub    ecx,ebx
  407f7f:	adc    bl,BYTE PTR [ecx-0x66]
  407f82:	(bad)  
  407f83:	or     eax,0x73b9b1a4
  407f88:	(bad)  
  407f89:	mov    ch,0xcc
  407f8b:	addr16 dec esi
  407f8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f8e:	dec    ebx
  407f8f:	pop    ds
  407f90:	add    bh,cl
  407f92:	stos   BYTE PTR es:[edi],al
  407f93:	je     0x407f2b
  407f95:	imul   ecx,DWORD PTR [ebx],0x2f
  407f98:	jnp    0x407fb2
  407f9a:	xchg   ecx,eax
  407f9b:	mov    ds:0x83847858,al
  407fa0:	js     0x407fe1
  407fa2:	cmp    DWORD PTR [edi-0x283efb60],ebx
  407fa8:	jmp    0xdbed:0xd52ea109
  407faf:	imul   edx,DWORD PTR [ebp+0x6d75a1f5],0x7f
  407fb6:	add    ch,ch
  407fb8:	cmp    al,0xc3
  407fba:	je     0x407f99
  407fbc:	jbe    0x407fdd
  407fbe:	out    0x7e,eax
  407fc0:	cmc    
  407fc1:	out    0x5,al
  407fc3:	or     bl,BYTE PTR [edi]
  407fc5:	adc    BYTE PTR cs:[edx+0x10],ah
  407fc9:	shl    DWORD PTR [esi+0x1f5abd4b],cl
  407fcf:	or     DWORD PTR [ebp+0xee16f48],ebp
  407fd5:	pop    esp
  407fd6:	sub    esp,DWORD PTR [ecx+0x69e871ab]
  407fdc:	cmp    bh,0x17
  407fdf:	mov    ds:0x4776f4ed,al
  407fe4:	sahf   
  407fe5:	xor    al,al
  407fe7:	mov    ds:0x681d1b2b,eax
  407fec:	push   edx
  407fed:	push   cs
  407fee:	outs   dx,DWORD PTR ds:[esi]
  407fef:	(bad)  
  407ff1:	jmp    0xf999:0x7573f7a9
  407ff8:	out    0xf0,eax
  407ffa:	push   cs
  407ffb:	and    eax,0x9a19dc60
  408000:	xchg   ebp,eax
  408001:	in     al,dx
  408002:	cmc    
  408003:	mov    bh,0xd
  408005:	push   esi
  408006:	in     al,dx
  408007:	cli    
  408008:	mov    BYTE PTR [edx+ebp*2+0x4752c7d7],ah
  40800f:	enter  0xf2ef,0x3a
  408013:	add    eax,0x997fcff7
  408018:	push   esi
  408019:	ins    BYTE PTR es:[edi],dx
  40801a:	dec    edx
  40801b:	xor    eax,0x31558043
  408020:	cmc    
  408021:	scas   al,BYTE PTR es:[edi]
  408022:	inc    ebp
  408023:	cmp    ch,al
  408025:	es sbb eax,0x5071a275
  40802b:	xchg   esi,eax
  40802c:	int3   
  40802d:	sahf   
  40802e:	mov    ebx,0xbc9031dd
  408033:	pop    ss
  408034:	pop    esp
  408035:	fdiv   st(1),st
  408037:	mov    bh,0xa8
  408039:	adc    eax,0xea7bc0e9
  40803e:	add    eax,0x95746923
  408043:	loopne 0x4080b4
  408045:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408046:	lods   eax,DWORD PTR ds:[esi]
  408047:	xchg   esi,eax
  408048:	push   es
  408049:	sbb    eax,0x1130ad9d
  40804e:	fsubr  QWORD PTR [edi+ebp*2+0x79f03403]
  408055:	push   esp
  408056:	fwait
  408057:	mov    edi,0x3837e223
  40805c:	adc    DWORD PTR [ecx+0x68],esp
  40805f:	popa   
  408060:	xor    DWORD PTR [ecx+eiz*1-0x17],ecx
  408064:	lock (bad) 
  408066:	sti    
  408067:	sub    DWORD PTR [ebx+0x76eaf4f9],esi
  40806d:	push   edx
  40806e:	cmp    al,0x5a
  408070:	adc    edx,edi
  408072:	stos   BYTE PTR es:[edi],al
  408073:	cmp    eax,ebx
  408075:	js     0x408088
  408077:	inc    eax
  408078:	adc    al,0x13
  40807a:	pushf  
  40807b:	pop    ss
  40807c:	push   cs
  40807d:	mov    bh,0x73
  40807f:	bound  ebp,QWORD PTR [eax]
  408081:	lds    esi,FWORD PTR [ecx]
  408083:	push   edi
  408084:	pop    es
  408085:	(bad)  
  408088:	retf   
  408089:	dec    ebx
  40808a:	iret   
  40808b:	push   edx
  40808c:	mov    BYTE PTR [edi-0x430a2ce4],dl
  408092:	jl     0x4080eb
  408094:	imul   ebp,DWORD PTR [ecx+edi*8+0x6c],0x6c
  408099:	pop    es
  40809a:	dec    edx
  40809b:	jge    0x408068
  40809d:	data16 and BYTE PTR [edx-0x68],dl
  4080a1:	mov    eax,0x2c296447
  4080a6:	inc    edx
  4080a7:	ret    0x3a4b
  4080aa:	enter  0x4e87,0xe0
  4080ae:	scas   al,BYTE PTR es:[edi]
  4080af:	hlt    
  4080b0:	sar    DWORD PTR [edx+0x4d],1
  4080b3:	sbb    al,0xe5
  4080b5:	fisub  WORD PTR [eax+edi*2-0x3b]
  4080b9:	mov    esp,DWORD PTR [eax]
  4080bb:	jl     0x4080eb
  4080bd:	out    dx,al
  4080be:	push   0xfd5f492e
  4080c3:	cmp    BYTE PTR [ebp-0x7e],0x50
  4080c7:	xchg   ebp,eax
  4080c8:	and    DWORD PTR [esi],esi
  4080ca:	push   0xffffff82
  4080cc:	jne    0x408052
  4080ce:	push   edi
  4080cf:	and    DWORD PTR [eax],ebx
  4080d1:	lock xchg esp,eax
  4080d3:	icebp  
  4080d4:	mov    eax,ds:0x340da1c
  4080d9:	or     ch,BYTE PTR [edi]
  4080db:	push   es
  4080dc:	pushf  
  4080dd:	scas   eax,DWORD PTR es:[edi]
  4080de:	add    eax,0x81c6a79
  4080e3:	push   edx
  4080e4:	cmp    eax,0x1c57c6e8
  4080e9:	addr16 nop
  4080eb:	mov    ?,WORD PTR [edi+0x6a6454f0]
  4080f1:	inc    ebp
  4080f2:	test   bl,dh
  4080f4:	mov    ebx,0x51e0a327
  4080f9:	add    eax,0x6edfdbdf
  4080fe:	mov    bl,0x4a
  408100:	adc    al,0x63
  408102:	fild   DWORD PTR [edx-0x45f658bc]
  408108:	jmp    0x5054:0x4c66ead0
  40810f:	cmp    al,0x5e
  408111:	ret    0xe873
  408114:	adc    dh,0x52
  408117:	sub    eax,0x37a8ad06
  40811c:	xchg   BYTE PTR [eax],dh
  40811e:	adc    ch,BYTE PTR [edx]
  408120:	(bad)  
  408121:	retf   0x4945
  408124:	repz out dx,eax
  408126:	add    DWORD PTR [edi-0x7f],ebp
  408129:	js     0x40811f
  40812b:	push   0x4
  40812d:	cmp    al,0xe1
  40812f:	pop    eax
  408130:	cmp    DWORD PTR [ecx-0x17],ebp
  408133:	(bad)  
  408135:	in     al,0x3d
  408137:	sub    bl,BYTE PTR [edx-0x78]
  40813a:	stos   BYTE PTR es:[edi],al
  40813b:	adc    ch,BYTE PTR [ebx]
  40813d:	and    ebp,DWORD PTR [edi+0x66]
  408140:	sti    
  408141:	loopne 0x408172
  408143:	cmp    eax,0xe9689913
  408148:	pop    ecx
  408149:	dec    ebp
  40814a:	iret   
  40814b:	ja     0x4080e8
  40814d:	retf   0x95bd
  408150:	pop    esp
  408151:	add    eax,0x19d68a45
  408156:	xlat   BYTE PTR ds:[ebx]
  408157:	xor    al,0x19
  408159:	sub    al,0xf5
  40815b:	ds dec edx
  40815d:	mov    eax,ds:0x25378fee
  408162:	xor    ebp,DWORD PTR [ecx+0x7db016de]
  408168:	pop    ecx
  408169:	inc    ecx
  40816a:	bound  eax,QWORD PTR [eax]
  40816c:	xor    BYTE PTR [edi-0x129df839],dh
  408172:	push   eax
  408173:	cwde   
  408174:	das    
  408175:	fsub   DWORD PTR [eax]
  408177:	into   
  408178:	mov    al,0x78
  40817a:	mov    eax,0xb737f289
  40817f:	dec    ecx
  408180:	pop    es
  408181:	into   
  408182:	test   DWORD PTR [ebx-0x7f54a3a0],eax
  408188:	aam    0xf5
  40818a:	push   ebx
  40818b:	aas    
  40818c:	adc    bh,BYTE PTR [eax-0x359465e1]
  408192:	(bad)  
  408193:	mov    eax,ds:0x59c25ab0
  408198:	mov    es,WORD PTR [ebp-0x3d]
  40819b:	in     eax,0x2c
  40819d:	adc    al,0x76
  40819f:	jg     0x4081d7
  4081a1:	jnp    0x408162
  4081a3:	imul   edi,DWORD PTR [ecx-0x2221f1ab],0x6a
  4081aa:	inc    esi
  4081ab:	jmp    0x40822c
  4081ad:	push   esi
  4081ae:	enter  0xb07f,0x40
  4081b2:	out    0xef,al
  4081b4:	adc    eax,0x54d4e2a9
  4081b9:	daa    
  4081ba:	call   0xb3646a26
  4081bf:	ret    0xf153
  4081c2:	mov    ebp,0x50a3a80c
  4081c7:	fstp   QWORD PTR [edx-0x51]
  4081ca:	push   0x9cd78c4a
  4081cf:	pop    esp
  4081d0:	fdivr  DWORD PTR ds:0x7b11f221
  4081d6:	imul   esp,DWORD PTR [ecx],0xfffffff4
  4081d9:	arpl   WORD PTR [esi],ax
  4081db:	push   es
  4081dc:	jmp    0xccec8026
  4081e1:	mov    esi,0x129b116f
  4081e6:	lock xor al,0xc3
  4081e9:	dec    edx
  4081ea:	push   edi
  4081eb:	mov    ebp,0x5c1dce9d
  4081f0:	add    esi,eax
  4081f2:	jg     0x4081d3
  4081f4:	dec    edx
  4081f5:	mov    DWORD PTR ds:0xfe1d6a07,edi
  4081fb:	imul   esp,esp,0xffffffd3
  4081fe:	cmc    
  4081ff:	cmp    al,0x2c
  408201:	mov    esp,0x11a62db8
  408206:	shl    cl,0xd9
  408209:	fistp  WORD PTR [ebx+0x65]
  40820c:	inc    edx
  40820d:	dec    ebp
  40820e:	pop    eax
  40820f:	fnstenv [ebx]
  408211:	data16 shl BYTE PTR [ecx+0x14],cl
  408215:	push   ebx
  408216:	inc    ecx
  408217:	push   edx
  408218:	or     eax,0x7d692b9
  40821d:	jns    0x4081e0
  40821f:	push   cs
  408220:	je     0x408253
  408222:	inc    DWORD PTR [ebx-0x7]
  408225:	es repnz aad 0x50
  408229:	lods   eax,DWORD PTR ds:[esi]
  40822a:	mov    bl,0xf1
  40822c:	mov    ebp,DWORD PTR [ecx+edi*1-0x12]
  408230:	mov    ecx,0x5ac352a8
  408235:	stos   DWORD PTR es:[edi],eax
  408236:	outs   dx,DWORD PTR ds:[esi]
  408237:	inc    BYTE PTR [ecx]
  408239:	xchg   edx,eax
  40823a:	mov    eax,0x3621df63
  40823f:	sbb    ah,BYTE PTR [eax-0x63]
  408242:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  408244:	xchg   BYTE PTR [edi],dl
  408246:	fsub   QWORD PTR [eax+eiz*4]
  408249:	arpl   ax,bx
  40824b:	test   eax,0xc95f9d5f
  408250:	pop    edi
  408251:	leave  
  408252:	xchg   edx,eax
  408253:	outs   dx,DWORD PTR ds:[esi]
  408254:	fld    QWORD PTR [ebp+0x1b]
  408257:	push   es
  408258:	popa   
  408259:	xor    al,0xf6
  40825b:	jg     0x4082c4
  40825d:	add    eax,0xead31476
  408262:	sti    
  408263:	sub    BYTE PTR [eax-0x45359125],0x9c
  40826a:	out    dx,al
  40826b:	add    ebp,DWORD PTR [edx]
  40826d:	mov    eax,ds:0x70216a88
  408272:	push   0xffffffb5
  408274:	xchg   esi,eax
  408275:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408276:	xchg   DWORD PTR [eax+edi*4+0x30],esi
  40827a:	mov    al,ds:0xb7dcdde3
  40827f:	pop    ss
  408280:	jecxz  0x40824c
  408282:	adc    DWORD PTR [ebp-0x46],eax
  408285:	int3   
  408286:	fwait
  408287:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408288:	mov    ds:0x912117da,al
  40828d:	test   bl,0x55
  408290:	cld    
  408291:	stc    
  408292:	push   eax
  408293:	cmp    DWORD PTR [eax+0x38c6f523],eax
  408299:	shl    DWORD PTR [esi+eiz*1-0x29],1
  40829d:	jbe    0x408260
  40829f:	mov    dl,0x50
  4082a1:	mov    ah,0xa9
  4082a3:	mov    ecx,0xfde532d2
  4082a8:	loop   0x408296
  4082aa:	lahf   
  4082ab:	inc    esi
  4082ac:	pop    ss
  4082ad:	rcl    DWORD PTR [edx+0x349d2ea6],0x94
  4082b4:	jbe    0x40829c
  4082b6:	ficom  DWORD PTR [edx-0x61]
  4082b9:	lea    esp,[ebp+0x10]
  4082bc:	xor    ebx,DWORD PTR [edx-0x74]
  4082bf:	lea    edx,[edi-0x15]
  4082c2:	retf   
  4082c3:	test   DWORD PTR [eax+0x4efc34fc],edi
  4082c9:	ins    BYTE PTR es:[edi],dx
  4082ca:	inc    edi
  4082cb:	pop    esi
  4082cc:	cmp    al,0xa9
  4082ce:	outs   dx,BYTE PTR ds:[esi]
  4082cf:	dec    esi
  4082d0:	call   0x6d1d:0xb2b20c91
  4082d7:	inc    eax
  4082d8:	jne    0x40827d
  4082da:	shr    BYTE PTR [esi],0xb7
  4082dd:	and    edx,DWORD PTR [esi]
  4082df:	dec    edx
  4082e0:	cdq    
  4082e1:	mov    ds:0x46ff4363,al
  4082e6:	sbb    eax,0x77d760e1
  4082eb:	jae    0x4082e5
  4082ed:	sub    al,BYTE PTR [edx-0x1c]
  4082f0:	leave  
  4082f1:	retf   0x80fa
  4082f4:	sbb    DWORD PTR [eax],edx
  4082f6:	dec    ebp
  4082f7:	cmp    BYTE PTR [eax],dl
  4082f9:	add    DWORD PTR [ebp+ecx*8+0xae576c1],eax
  408300:	dec    ecx
  408301:	jmp    0x7910:0x6f195bd
  408308:	cli    
  408309:	xor    DWORD PTR [edi+edx*4],edx
  40830c:	(bad)  
  40830d:	mov    ah,BYTE PTR [ecx]
  40830f:	push   ds
  408310:	mov    ch,0x47
  408312:	(bad)  
  408314:	gs push ds
  408316:	adc    al,BYTE PTR ds:0x8a82f21
  40831c:	shl    dh,0xf5
  40831f:	xchg   edi,eax
  408320:	xchg   BYTE PTR [edi+0x3b],dh
  408323:	adc    bh,BYTE PTR [edi+0x5a]
  408326:	mov    dl,0xda
  408328:	adc    al,0x13
  40832a:	jp     0x408399
  40832c:	out    0x94,eax
  40832e:	daa    
  40832f:	push   cs
  408330:	mov    esp,0xf9a8acf6
  408335:	iret   
  408336:	adc    esi,esp
  408338:	xor    eax,0xd840f06d
  40833d:	sbb    eax,0xf4ed07dc
  408342:	mov    ecx,0x99bfba0a
  408347:	ja     0x40830b
  408349:	outs   dx,DWORD PTR ds:[esi]
  40834a:	scas   eax,DWORD PTR es:[edi]
  40834b:	pop    esi
  40834c:	mov    ah,dl
  40834e:	pop    esp
  40834f:	or     eax,0x92f7ae3b
  408354:	ins    BYTE PTR es:[edi],dx
  408355:	test   DWORD PTR [ebx-0x73],esi
  408358:	mov    eax,0x1a3fb4fa
  40835d:	xchg   ebx,eax
  40835e:	stc    
  40835f:	dec    ecx
  408360:	int    0x80
  408362:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408363:	frstor [ebx+0x53]
  408366:	cmp    dl,bl
  408368:	cli    
  408369:	repz call 0xdd9025ab
  40836f:	nop
  408370:	dec    ebx
  408371:	mov    ds,esp
  408373:	int3   
  408374:	mov    DWORD PTR [ebp+0x78],esi
  408377:	cmp    ecx,DWORD PTR [esi+eiz*8-0x7e2bbd63]
  40837e:	mov    cl,0xb6
  408380:	neg    dh
  408382:	shl    DWORD PTR [edi],0xb5
  408385:	pop    DWORD PTR [edi]
  408387:	mov    edx,0x3d85358d
  40838c:	pop    ss
  40838d:	sbb    BYTE PTR [esi],ah
  40838f:	jbe    0x40840b
  408391:	adc    ah,bl
  408393:	mov    eax,ds:0xaeb98d0b
  408398:	and    al,0x8e
  40839a:	cmp    al,0x11
  40839c:	out    0xf0,al
  40839e:	ins    DWORD PTR es:[edi],dx
  40839f:	rol    BYTE PTR [ebx+eax*8-0x63],0xa8
  4083a4:	inc    ebp
  4083a5:	pop    es
  4083a6:	sub    bl,BYTE PTR [esi+eiz*4]
  4083a9:	cmp    ch,ah
  4083ab:	int    0xa0
  4083ad:	outs   dx,DWORD PTR ds:[esi]
  4083ae:	dec    edi
  4083af:	cmp    ebx,eax
  4083b1:	iret   
  4083b2:	jns    0x408340
  4083b4:	out    dx,eax
  4083b5:	fidiv  WORD PTR [eax]
  4083b7:	xor    cl,BYTE PTR [esi-0x50d3a83a]
  4083bd:	fisub  WORD PTR [ecx+0x14]
  4083c0:	out    dx,al
  4083c1:	mov    dh,0x6c
  4083c3:	add    edx,eax
  4083c5:	push   ss
  4083c6:	inc    eax
  4083c7:	test   al,ch
  4083c9:	popf   
  4083ca:	or     dh,BYTE PTR [edi]
  4083cc:	xchg   esp,eax
  4083cd:	lds    edi,FWORD PTR [ebx-0x51]
  4083d0:	popa   
  4083d1:	or     eax,0x397d9fb8
  4083d6:	push   esp
  4083d7:	or     al,0x74
  4083d9:	aam    0xd5
  4083db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083dc:	dec    esi
  4083dd:	pop    ecx
  4083de:	into   
  4083df:	fdivr  DWORD PTR [ecx+0x51]
  4083e2:	test   DWORD PTR [ebp-0x59],ebx
  4083e5:	cmc    
  4083e6:	ins    BYTE PTR es:[edi],dx
  4083e7:	sub    al,BYTE PTR [esi+0x598c467e]
  4083ed:	nop
  4083ee:	mov    ch,0xe1
  4083f0:	inc    esp
  4083f1:	mov    ebx,0x96b08242
  4083f6:	sub    DWORD PTR [eax],ebx
  4083f8:	xor    al,0x88
  4083fa:	test   eax,0xe1599b30
  4083ff:	fdivr  st(2),st
  408401:	cmp    DWORD PTR [edi-0x49],esi
  408404:	dec    ecx
  408405:	outs   dx,BYTE PTR ds:[esi]
  408406:	dec    eax
  408407:	js     0x408413
  408409:	dec    esp
  40840a:	lods   eax,DWORD PTR ds:[esi]
  40840b:	cmp    al,0xa7
  40840d:	repz adc al,0xc9
  408410:	shr    DWORD PTR cs:[ebx+0x2d],0x9f
  408415:	sahf   
  408416:	aas    
  408417:	inc    edi
  408418:	scas   al,BYTE PTR es:[edi]
  408419:	fldenv [edi+0x1bf2a27d]
  40841f:	arpl   WORD PTR [eax],di
  408421:	adc    BYTE PTR [eax],dl
  408423:	jle    0x40845f
  408425:	sub    BYTE PTR [edx+ecx*4],bl
  408428:	mov    dl,0xf
  40842a:	fldcw  WORD PTR [edi-0x62]
  40842d:	add    dl,BYTE PTR [esi+0x1e]
  408430:	jns    0x40849a
  408432:	pushf  
  408433:	fisttp QWORD PTR [ebx-0x2d]
  408436:	stos   BYTE PTR es:[edi],al
  408437:	pop    ss
  408438:	inc    eax
  408439:	shl    DWORD PTR [ebx],cl
  40843b:	or     esp,ebp
  40843d:	xchg   edx,eax
  40843e:	jle    0x4084b2
  408440:	inc    edi
  408441:	mov    edi,0xd9114e04
  408446:	shl    BYTE PTR [ebx+0x409b2488],1
  40844c:	cmp    DWORD PTR [ecx-0x4267fc84],edi
  408452:	fild   QWORD PTR [edi+0x1a]
  408455:	add    BYTE PTR [edi],dl
  408457:	cwde   
  408458:	mov    WORD PTR [eax+edx*4-0x42],?
  40845c:	retf   0xd123
  40845f:	mov    dl,0xf8
  408461:	xchg   esi,eax
  408462:	jecxz  0x408415
  408464:	rcl    esp,cl
  408466:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408467:	adc    edx,DWORD PTR ds:0x8d7ea07a
  40846d:	aas    
  40846e:	adc    BYTE PTR [esi+0x3b],0xb6
  408472:	inc    eax
  408473:	dec    edi
  408474:	jle    0x4084e2
  408476:	sub    DWORD PTR [esi-0x329975dc],edx
  40847c:	push   edx
  40847d:	add    BYTE PTR [ecx],cl
  40847f:	add    eax,0x813294db
  408484:	or     DWORD PTR [eax+eiz*1-0x3e],edx
  408488:	or     cl,ch
  40848a:	call   0x7a9b:0x8f664c47
  408491:	cmp    DWORD PTR [eax+0x57],esp
  408494:	push   ecx
  408495:	push   ecx
  408496:	xchg   edi,eax
  408497:	rol    BYTE PTR [edx],1
  408499:	jns    0x4084c4
  40849b:	pop    es
  40849c:	mov    WORD PTR [edi+0x975bd3b],gs
  4084a2:	loop   0x4084b3
  4084a4:	and    ebp,esi
  4084a6:	cld    
  4084a7:	xchg   esp,eax
  4084a8:	bound  eax,QWORD PTR [ebp-0x36]
  4084ab:	(bad)  
  4084ac:	cmp    BYTE PTR [ebx+ebx*8-0x374b073e],0x1e
  4084b4:	and    eax,0xe90648d0
  4084b9:	ds add al,0xbd
  4084bc:	xor    al,BYTE PTR [edx-0xc5da193]
  4084c2:	data16 into 
  4084c4:	xor    eax,0x272bf119
  4084c9:	outs   dx,DWORD PTR ds:[esi]
  4084ca:	mov    cl,0x84
  4084cc:	and    BYTE PTR [edx+0x4b],dl
  4084cf:	push   ebp
  4084d0:	enter  0x53f6,0xbb
  4084d4:	pop    edx
  4084d5:	push   edx
  4084d6:	sbb    dl,cl
  4084d8:	pop    ds
  4084d9:	jmp    0x408516
  4084db:	nop
  4084dc:	out    0xe7,eax
  4084de:	pop    ss
  4084df:	inc    edi
  4084e1:	cmp    edx,DWORD PTR [ecx-0x10b8840f]
  4084e7:	xchg   esp,eax
  4084e8:	lods   eax,DWORD PTR ds:[esi]
  4084e9:	sahf   
  4084ea:	inc    edx
  4084eb:	stos   BYTE PTR es:[edi],al
  4084ec:	test   DWORD PTR [esi-0x3c],0xb4f5b7f0
  4084f3:	scas   al,BYTE PTR es:[edi]
  4084f4:	mov    BYTE PTR [esi],cl
  4084f6:	addr16 int3 
  4084f8:	test   al,0xcf
  4084fa:	dec    ebx
  4084fb:	jo     0x4084a2
  4084fd:	push   ebp
  4084fe:	sub    cl,al
  408500:	sub    BYTE PTR [edi-0x1a],ah
  408503:	xchg   edx,eax
  408504:	iretw  
  408506:	or     BYTE PTR [ebx],al
  408508:	popa   
  408509:	outs   dx,BYTE PTR ds:[esi]
  40850a:	and    dl,bl
  40850c:	out    dx,eax
  40850d:	dec    edx
  40850e:	jne    0x408582
  408510:	into   
  408511:	push   0xffffffab
  408513:	pushf  
  408514:	xchg   ecx,eax
  408515:	outs   dx,DWORD PTR ds:[esi]
  408516:	jbe    0x408593
  408518:	xor    BYTE PTR [edi+0xa34537c],0x37
  40851f:	dec    edi
  408520:	mov    eax,ds:0x6edaa5b1
  408525:	xlat   BYTE PTR ds:[ebx]
  408526:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408527:	inc    eax
  408528:	out    0x12,eax
  40852a:	mov    BYTE PTR [ecx+0x6fe39621],ch
  408530:	fmul   QWORD PTR [edi+eax*8+0x41a92216]
  408537:	jae    0x4085a9
  408539:	cdq    
  40853a:	mov    dh,0xde
  40853c:	pop    ebp
  40853d:	aaa    
  40853e:	sbb    al,0x5f
  408540:	data16 jecxz 0x4084e0
  408543:	dec    ebp
  408544:	jmp    0x6df6:0xb0a0cb71
  40854b:	add    eax,0x639c5a06
  408550:	popa   
  408551:	sub    eax,0xc90f5a4a
  408556:	fwait
  408557:	test   eax,0xe509ebc2
  40855c:	jae    0x4084e8
  40855e:	outs   dx,BYTE PTR ds:[esi]
  40855f:	cmp    BYTE PTR [ebx+0x10],0xab
  408563:	mov    eax,0x5a7da574
  408568:	inc    edi
  408569:	xor    DWORD PTR [edx],0xcd10cc6d
  40856f:	adc    BYTE PTR [ebp-0x48bc7369],bl
  408575:	mov    bl,0x4
  408577:	pop    esp
  408578:	dec    eax
  408579:	cwde   
  40857a:	sub    al,0xe3
  40857c:	dec    ebp
  40857d:	jno    0x40852c
  40857f:	dec    ebx
  408580:	pop    es
  408581:	adc    eax,0x6f1a629f
  408586:	inc    ebx
  408587:	ficom  DWORD PTR [esi-0x5f]
  40858a:	inc    ebx
  40858b:	dec    esi
  40858c:	fmul   DWORD PTR [ebp+0x75]
  40858f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408590:	or     DWORD PTR [esp+ecx*2],edi
  408593:	loope  0x4085be
  408595:	jmp    0x40857e
  408597:	scas   eax,DWORD PTR es:[edi]
  408598:	arpl   WORD PTR [esi],dx
  40859a:	xor    eax,0x370e37c2
  40859f:	sbb    eax,0x6c659a0
  4085a4:	jbe    0x4085e3
  4085a6:	jl     0x4085b3
  4085a8:	imul   ebx,DWORD PTR [edi-0x4db65c54],0x7477096f
  4085b2:	fsubr  DWORD PTR [edi+0x6af3e13f]
  4085b8:	les    edx,FWORD PTR [ebp-0x6b9ae1df]
  4085be:	fisttp QWORD PTR [ebx-0xeee5f04]
  4085c4:	jp     0x408593
  4085c6:	cmp    al,0x75
  4085c8:	dec    esp
  4085c9:	push   0xb4b66b56
  4085ce:	adc    BYTE PTR [ebx-0x69],0x8b
  4085d2:	ja     0x408636
  4085d4:	test   DWORD PTR [edi],esp
  4085d6:	add    ch,BYTE PTR ds:0x614b4047
  4085dc:	add    dh,BYTE PTR [ecx-0x43]
  4085df:	xchg   ecx,eax
  4085e0:	inc    eax
  4085e1:	aas    
  4085e2:	xor    al,0xe3
  4085e4:	inc    ecx
  4085e5:	data16 mov al,0xc2
  4085e8:	mov    ebp,fs
  4085ea:	add    DWORD PTR [ebx+0x30ff309a],ecx
  4085f0:	pop    ds
  4085f1:	sub    eax,0xa37f43c8
  4085f6:	mov    edx,0x26f8db6d
  4085fb:	and    DWORD PTR [esi-0x2e],0x61
  4085ff:	sbb    eax,0xddce34a1
  408604:	mov    bh,0x89
  408606:	sub    BYTE PTR [edi-0x26e22c39],bh
  40860c:	pop    es
  40860d:	add    BYTE PTR [edi-0x2],al
  408610:	xchg   edx,eax
  408611:	mov    ds:0xded5b936,eax
  408616:	xor    eax,0x93a582ae
  40861b:	stos   BYTE PTR es:[edi],al
  40861c:	aam    0xc9
  40861e:	jecxz  0x408617
  408620:	mov    BYTE PTR [esi+0x275ae11e],0x3f
  408627:	pushf  
  408628:	xchg   ebp,eax
  408629:	jle    0x4085af
  40862b:	shl    edx,0xa7
  40862e:	adc    cl,BYTE PTR [esi-0x1cc8cd41]
  408634:	jnp    0x408604
  408636:	js     0x408646
  408638:	mov    ebx,0x176efd37
  40863d:	adc    DWORD PTR [edi-0x34],ecx
  408640:	out    dx,al
  408641:	jecxz  0x408632
  408643:	popa   
  408644:	mov    bl,0xb0
  408646:	imul   edi,esi,0x52
  408649:	jp     0x40866b
  40864b:	cmp    ebp,esp
  40864d:	lds    edx,FWORD PTR [edi]
  40864f:	into   
  408650:	retf   0x2204
  408653:	lahf   
  408654:	ins    BYTE PTR es:[edi],dx
  408655:	jbe    0x408612
  408657:	cmp    ch,bh
  408659:	or     eax,0xdef888ac
  40865e:	pop    edx
  40865f:	pop    ds
  408660:	ja     0x408687
  408662:	call   0xd7b5c6bd
  408667:	jp     0x4086c7
  408669:	aam    0x9d
  40866b:	or     DWORD PTR [edi+0x73d52b3c],ebx
  408671:	mov    al,ds:0x6619ef0f
  408676:	xor    dl,BYTE PTR [edx]
  408678:	int    0xf6
  40867a:	gs int3 
  40867c:	repnz sub eax,0x4c35e6dc
  408682:	in     al,dx
  408683:	shl    DWORD PTR [edx-0x2551946f],cl
  408689:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40868a:	mov    eax,0x76f4502b
  40868f:	jae    0x408676
  408691:	sub    bl,ah
  408693:	aas    
  408694:	fdiv   QWORD PTR [edx+0x4f9e8c22]
  40869a:	dec    ecx
  40869b:	pusha  
  40869c:	in     al,0x33
  40869e:	xchg   esp,eax
  40869f:	cmc    
  4086a0:	pop    eax
  4086a1:	sahf   
  4086a2:	outs   dx,DWORD PTR ds:[esi]
  4086a3:	push   ss
  4086a4:	test   DWORD PTR [edx],ebx
  4086a6:	rcr    BYTE PTR [ecx],0x3b
  4086a9:	call   0x50de:0xe2aa28af
  4086b0:	int3   
  4086b1:	shl    al,cl
  4086b3:	dec    edi
  4086b4:	data16 mov dl,0x14
  4086b7:	in     al,dx
  4086b8:	inc    ecx
  4086b9:	add    ah,0xcf
  4086bc:	cmp    bh,BYTE PTR [ebx]
  4086be:	inc    ecx
  4086bf:	(bad)  
  4086c0:	mov    eax,ds:0x7d5534c3
  4086c5:	adc    BYTE PTR [ecx],dh
  4086c7:	jb     0x408661
  4086c9:	std    
  4086ca:	(bad)  
  4086cb:	xchg   ecx,eax
  4086cc:	mov    esi,0xdbbe03b9
  4086d1:	sub    DWORD PTR [eax],edi
  4086d3:	imul   esi,DWORD PTR [ecx-0x44fd0c1a],0x15
  4086da:	inc    edi
  4086db:	(bad)  
  4086dd:	out    0x36,eax
  4086df:	mov    eax,ebp
  4086e1:	jp     0x408715
  4086e3:	mov    ch,0xc
  4086e5:	mov    esp,0x1f1b720c
  4086ea:	bound  esi,QWORD PTR es:[ecx-0x2afa3a35]
  4086f1:	pop    DWORD PTR [esi-0x4e]
  4086f4:	pop    eax
  4086f5:	lods   eax,DWORD PTR ds:[esi]
  4086f6:	dec    edx
  4086f7:	aaa    
  4086f8:	sbb    DWORD PTR [edi],0xffffffc5
  4086fb:	enter  0x81a8,0xa0
  4086ff:	jnp    0x4086dd
  408701:	aaa    
  408702:	not    ch
  408704:	ja     0x408784
  408706:	mov    bh,ch
  408708:	push   eax
  408709:	aaa    
  40870a:	or     cl,BYTE PTR [edi-0x14a9219a]
  408710:	aam    0x69
  408712:	inc    ebp
  408713:	mov    ah,0x26
  408715:	leave  
  408716:	mov    ch,0x1d
  408718:	add    BYTE PTR [esi],al
  40871a:	xchg   BYTE PTR [edi],dl
  40871c:	mov    bh,0x2c
  40871e:	sbb    ebp,edi
  408720:	mov    al,0xe7
  408722:	jnp    0x4086e6
  408724:	xchg   ebx,eax
  408725:	jb     0x408705
  408727:	ret    0x24f6
  40872a:	add    al,0x5
  40872c:	pop    ss
  40872d:	add    BYTE PTR [ebx+0x2026fe40],ah
  408733:	imul   esp,DWORD PTR [ecx+eiz*1+0x31],0x28c4d7e5
  40873b:	sti    
  40873c:	xchg   esi,eax
  40873d:	out    0xfc,al
  40873f:	dec    esp
  408740:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408741:	pop    ecx
  408742:	sbb    DWORD PTR [esi],ebx
  408744:	out    dx,al
  408745:	sub    dh,BYTE PTR [ecx-0x65]
  408748:	addr16 dec esi
  40874a:	cmp    BYTE PTR [ecx+ebx*8],bl
  40874d:	cmp    edi,DWORD PTR [edx-0x34]
  408750:	clc    
  408751:	in     eax,dx
  408752:	iret   
  408753:	inc    ebx
  408754:	aaa    
  408755:	ficom  WORD PTR [edi-0x42e7a56b]
  40875b:	xchg   ebp,eax
  40875c:	mov    dl,0x2
  40875e:	dec    edx
  40875f:	dec    ebp
  408760:	sub    al,0xb5
  408762:	ja     0x4087c1
  408764:	jmp    0x408733
  408766:	int    0xf9
  408768:	mov    dh,0xe5
  40876a:	push   es
  40876b:	inc    esp
  40876c:	fist   DWORD PTR [ecx]
  40876e:	shl    cl,0x38
  408771:	inc    ebx
  408772:	lods   eax,DWORD PTR ds:[esi]
  408773:	(bad)  
  408774:	mov    al,ds:0x201d7617
  408779:	imul   edi,ebp,0xfc53a078
  40877f:	dec    esi
  408780:	repnz call 0x6e10:0x54bccbc3
  408788:	jb     0x4087d3
  40878a:	jg     0x408725
  40878c:	push   edi
  40878d:	and    al,0xae
  40878f:	out    dx,eax
  408790:	adc    edi,0xe8293cfb
  408796:	loopne 0x408803
  408798:	xchg   ecx,eax
  408799:	dec    ecx
  40879a:	shl    BYTE PTR [eax+0x53],0xd7
  40879e:	cs stc 
  4087a0:	in     eax,dx
  4087a1:	add    al,0x6a
  4087a3:	sub    BYTE PTR [ebx],dh
  4087a5:	xor    ecx,ecx
  4087a7:	or     eax,esi
  4087a9:	popa   
  4087aa:	std    
  4087ab:	test   edx,ecx
  4087ad:	sahf   
  4087ae:	push   esi
  4087af:	push   eax
  4087b0:	xlat   BYTE PTR ds:[ebx]
  4087b1:	sub    BYTE PTR [edx+eiz*8],ch
  4087b4:	mov    bh,0x1a
  4087b6:	add    DWORD PTR [edi-0xa],ebx
  4087b9:	or     al,0x82
  4087bb:	ja     0x408783
  4087bd:	int    0x40
  4087bf:	xor    bl,BYTE PTR [edi-0xf]
  4087c2:	mov    ebx,0x58747a86
  4087c7:	or     al,0x8d
  4087c9:	ret    
  4087ca:	loope  0x408759
  4087cc:	das    
  4087cd:	dec    esp
  4087ce:	aas    
  4087cf:	out    0xe0,eax
  4087d1:	jmp    0x8a1c:0xfbae1ec6
  4087d8:	jp     0x40880b
  4087da:	or     eax,0x40cfa984
  4087df:	add    al,0x8f
  4087e1:	ret    0xcd0c
  4087e4:	adc    DWORD PTR [ecx-0x21de0175],edi
  4087ea:	pop    esp
  4087eb:	dec    edi
  4087ec:	loopne 0x408811
  4087ee:	lock sar DWORD PTR [eax],1
  4087f1:	std    
  4087f2:	push   ss
  4087f3:	into   
  4087f4:	pop    ebx
  4087f5:	test   eax,0xc50d3b35
  4087fa:	retf   0xa24e
  4087fd:	sub    dh,cl
  4087ff:	fwait
  408800:	mov    edx,0x430ae81f
  408805:	push   es
  408806:	popa   
  408807:	ret    
  408808:	iret   
  408809:	je     0x4087c6
  40880b:	adc    ecx,esp
  40880d:	ret    0x6840
  408810:	nop
  408811:	xor    BYTE PTR [edi],ah
  408813:	jo     0x4087bb
  408815:	inc    esp
  408816:	mov    WORD PTR ds:0x49c0aa8e,?
  40881c:	xchg   ebx,eax
  40881d:	sub    al,0x13
  40881f:	add    ebp,DWORD PTR cs:[edx-0x10db3b7b]
  408826:	(bad)  
  408827:	xor    dl,BYTE PTR [edi+0x2202934f]
  40882d:	pop    esp
  40882e:	mov    DWORD PTR [ecx-0x36a5ee65],eax
  408834:	fs dec edi
  408836:	aaa    
  408837:	adc    DWORD PTR [ebx-0x1a],esi
  40883a:	dec    esp
  40883b:	mov    edx,0xb5712094
  408840:	mov    edx,cs
  408842:	aas    
  408843:	jns    0x408842
  408845:	cmp    DWORD PTR [esi+0x2dd4ab96],0x9d370602
  40884f:	cmp    esi,DWORD PTR [edx-0x2ae54146]
  408855:	jecxz  0x40885b
  408857:	shl    DWORD PTR [eax],cl
  408859:	push   cs
  40885a:	mov    al,0x7c
  40885c:	(bad)  
  40885d:	and    edx,DWORD PTR [esi+ecx*8-0x24]
  408861:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408862:	xor    DWORD PTR [ebp+0x3f83a2ef],esi
  408868:	xor    dl,BYTE PTR [edx-0x2a]
  40886b:	jo     0x4088e8
  40886d:	adc    edx,DWORD PTR ds:0xfe1bdf3d
  408873:	or     al,0x69
  408875:	jg     0x4087fc
  408877:	es into 
  408879:	mov    ds:0x7cc78bc8,al
  40887e:	scas   eax,DWORD PTR es:[edi]
  40887f:	sub    al,0x44
  408881:	dec    BYTE PTR [ebx+0x5a9d7585]
  408887:	call   0x5e06473b
  40888c:	pop    es
  40888d:	repz adc eax,0xd0de2988
  408893:	mov    ch,0xdf
  408895:	adc    BYTE PTR [eax],0x9d
  408898:	jne    0x408888
  40889a:	inc    ecx
  40889b:	pop    ss
  40889c:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40889e:	test   DWORD PTR [ebp-0x50f8a75e],ebx
  4088a4:	(bad)  
  4088a5:	nop
  4088a6:	daa    
  4088a7:	mov    bh,0x73
  4088a9:	mov    ds:0x11c01628,al
  4088ae:	pop    ds
  4088af:	mov    eax,ds:0x63a89c41
  4088b4:	dec    ebx
  4088b5:	data16 fist WORD PTR [ebx+0x459b19eb]
  4088bc:	enter  0x31be,0x72
  4088c0:	add    BYTE PTR [eax-0x6],0x9b
  4088c4:	or     DWORD PTR [esi-0x3b0c503a],ebx
  4088ca:	mov    eax,DWORD PTR [eax-0x4c266aa3]
  4088d0:	mov    edi,0xb403f90d
  4088d5:	mov    dh,0x63
  4088d7:	or     BYTE PTR [edi+esi*4],ah
  4088da:	cmp    edx,edi
  4088dc:	fmul   st,st(3)
  4088de:	jmp    0x40894d
  4088e0:	sub    DWORD PTR [ebp-0x6c83e32e],ebx
  4088e6:	clc    
  4088e7:	pop    ds
  4088e8:	adc    ch,BYTE PTR [eax]
  4088ea:	jbe    0x40886d
  4088ec:	leave  
  4088ed:	push   ebp
  4088ee:	pop    ebx
  4088ef:	or     dh,BYTE PTR [esi-0x7cb5eef1]
  4088f5:	scas   eax,DWORD PTR es:[edi]
  4088f6:	cmp    DWORD PTR [ecx-0x347df55],edx
  4088fc:	(bad)  
  4088fd:	cmp    al,0xbe
  4088ff:	retf   0xeaf4
  408902:	add    BYTE PTR [ecx+ecx*8-0x52e579bb],cl
  408909:	inc    edi
  40890a:	iret   
  40890b:	push   ds
  40890c:	cdq    
  40890d:	or     edi,DWORD PTR [edx]
  40890f:	or     al,0x79
  408911:	and    BYTE PTR [eax+0x226e3f8],dl
  408917:	outs   dx,BYTE PTR ds:[esi]
  408918:	sar    BYTE PTR [eax+esi*1+0x4e],0xc0
  40891d:	pop    esi
  40891e:	in     al,0xb5
  408920:	adc    eax,0x99c02dff
  408925:	adc    eax,0x36d4bbe1
  40892a:	push   esp
  40892b:	outs   dx,BYTE PTR ds:[esi]
  40892c:	jo     0x408925
  40892e:	test   BYTE PTR [ebx+ebx*2-0x5464f210],ah
  408935:	mov    ebp,0xb997e841
  40893a:	das    
  40893b:	jno    0x408945
  40893d:	enter  0x38cf,0x71
  408941:	push   ebx
  408942:	adc    DWORD PTR [esi],ecx
  408944:	aad    0x9c
  408946:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408948:	pop    eax
  408949:	mov    edx,0xc1f2d6d2
  40894e:	xchg   edi,esi
  408950:	mov    al,0x61
  408952:	ror    edi,cl
  408954:	push   ecx
  408955:	dec    eax
  408956:	push   0xb79853ad
  40895b:	adc    al,0xbb
  40895d:	inc    eax
  40895e:	aaa    
  40895f:	mov    dl,0xcd
  408961:	mov    al,BYTE PTR [edx-0x6c9b6ec1]
  408967:	out    dx,eax
  408968:	retf   
  408969:	push   edx
  40896a:	mov    bl,0xf3
  40896c:	mov    eax,ds:0xc0a52240
  408971:	repz mov bh,0x21
  408974:	fsub   DWORD PTR ds:0xc78ec480
  40897a:	mov    BYTE PTR [edx-0x2c03d774],0xa9
  408981:	sbb    eax,0xafb7d6c3
  408986:	cmp    cl,BYTE PTR [ebp+esi*8+0x65709304]
  40898d:	pop    ebx
  40898e:	and    ebx,DWORD PTR [ebx-0xa]
  408991:	int3   
  408992:	dec    esi
  408993:	push   ds
  408994:	test   eax,0x4c6ecef6
  408999:	sbb    al,0x34
  40899b:	(bad)  
  40899c:	outs   dx,BYTE PTR ds:[esi]
  40899d:	and    cl,dl
  40899f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089a0:	inc    eax
  4089a1:	sub    al,0xf8
  4089a3:	xor    ecx,0x23
  4089a6:	outs   dx,DWORD PTR ds:[esi]
  4089a7:	fdivr  st,st(6)
  4089a9:	inc    ebp
  4089aa:	mov    dh,0xad
  4089ac:	imul   edx,DWORD PTR ss:[esi+0x55],0xffffffe3
  4089b1:	sbb    eax,0xa4de2606
  4089b6:	mov    ebx,0x4a9b3a61
  4089bb:	pop    ebp
  4089bc:	inc    edx
  4089bd:	mov    bl,0xad
  4089bf:	sbb    DWORD PTR ds:0xfba2bb74,ebp
  4089c5:	adc    ebx,edx
  4089c7:	xchg   edi,eax
  4089c8:	fwait
  4089c9:	push   edi
  4089ca:	fisttp WORD PTR [ecx+0x2c]
  4089cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089ce:	mov    ebx,0xfce708d3
  4089d3:	jl     0x4089fd
  4089d5:	push   eax
  4089d6:	xchg   edx,eax
  4089d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089d8:	sar    DWORD PTR [ebp-0x4e5ce805],1
  4089de:	loope  0x408a1f
  4089e0:	inc    edi
  4089e1:	arpl   WORD PTR [esi],cx
  4089e3:	mov    esi,0x41cb6855
  4089e8:	scas   al,BYTE PTR es:[edi]
  4089e9:	in     al,0x12
  4089eb:	ins    DWORD PTR es:[edi],dx
  4089ec:	fsub   st,st(2)
  4089ee:	loopne 0x4089db
  4089f0:	in     eax,dx
  4089f1:	jo     0x408a1d
  4089f3:	and    ecx,edi
  4089f5:	fs pop esi
  4089f7:	mov    esp,DWORD PTR [ebp-0x52bdeb96]
  4089fd:	dec    esi
  4089fe:	xor    ebx,DWORD PTR [edi]
  408a00:	push   ebp
  408a01:	lods   al,BYTE PTR ds:[esi]
  408a02:	adc    bh,cl
  408a04:	fbstp  TBYTE PTR [ebx+0x21]
  408a07:	xchg   edi,eax
  408a08:	popf   
  408a09:	cwde   
  408a0a:	jg     0x4089b2
  408a0c:	mov    dh,0x1c
  408a0e:	sub    BYTE PTR [edx-0x9],dh
  408a11:	shl    BYTE PTR ds:0x43bc,1
  408a16:	inc    esp
  408a17:	add    al,0x11
  408a19:	push   ecx
  408a1a:	cs xchg ecx,eax
  408a1c:	sbb    dl,BYTE PTR [edi]
  408a1e:	hlt    
  408a1f:	cli    
  408a20:	in     eax,dx
  408a21:	mov    ecx,ebx
  408a23:	(bad)  
  408a24:	in     al,0x45
  408a26:	jg     0x4089d2
  408a28:	mov    esi,edi
  408a2a:	push   esp
  408a2b:	addr16 pop esp
  408a2d:	xchg   edi,eax
  408a2e:	cmp    DWORD PTR [esp+edx*2+0xf],esp
  408a32:	xor    al,0xf
  408a34:	jecxz  0x4089dd
  408a36:	out    0x7d,eax
  408a38:	(bad)  
  408a39:	or     DWORD PTR [ebx+0x4c],eax
  408a3c:	jmp    0xdfcda430
  408a41:	stos   BYTE PTR es:[edi],al
  408a42:	cmc    
  408a43:	outs   dx,BYTE PTR ds:[esi]
  408a44:	push   0x81c9bbed
  408a49:	jmp    0x8a76d790
  408a4e:	fnsave [edx]
  408a50:	cmp    al,BYTE PTR [esp+edi*1-0x136c18a1]
  408a57:	inc    eax
  408a58:	int3   
  408a59:	out    dx,eax
  408a5a:	or     DWORD PTR [ebx],eax
  408a5c:	or     dh,BYTE PTR [ebx+0x30]
  408a5f:	ror    BYTE PTR [ebx-0x11090365],cl
  408a65:	lds    ebx,FWORD PTR [ecx+0x35]
  408a68:	push   esp
  408a69:	pop    esi
  408a6a:	push   esp
  408a6b:	in     al,dx
  408a6c:	sbb    eax,0x47ceac7e
  408a71:	lds    esi,FWORD PTR [eax]
  408a73:	xchg   ecx,eax
  408a74:	cmp    al,0xa3
  408a76:	stos   BYTE PTR es:[edi],al
  408a77:	cmp    esi,DWORD PTR [ebx-0x1c47329d]
  408a7d:	popf   
  408a7e:	push   ecx
  408a7f:	sbb    ah,BYTE PTR [ebx]
  408a81:	inc    esi
  408a82:	es retf 0xac28
  408a86:	stc    
  408a87:	mov    edx,0xc90d1a97
  408a8c:	popa   
  408a8d:	test   eax,0x6d0f250
  408a92:	sub    edx,ebx
  408a94:	inc    ebx
  408a95:	test   ebp,edi
  408a97:	jp     0x408acb
  408a99:	mov    al,0xb1
  408a9b:	fwait
  408a9c:	cmc    
  408a9d:	jnp    0x408aa9
  408a9f:	add    BYTE PTR [ebx],0x5f
  408aa2:	or     eax,0x5b961092
  408aa7:	pop    edi
  408aa8:	xchg   edi,eax
  408aa9:	xor    eax,0x3cf203b0
  408aae:	(bad)  
  408aaf:	pop    ds
  408ab0:	aas    
  408ab1:	inc    esi
  408ab2:	pop    esp
  408ab3:	mov    esp,0xce20d336
  408ab8:	xchg   esp,eax
  408ab9:	mov    dl,0x4e
  408abb:	into   
  408abc:	call   0xcd73:0xdc75f182
  408ac3:	rcl    DWORD PTR [ebp-0x21414d67],0x8d
  408aca:	arpl   WORD PTR [ebx+0x612d217b],bp
  408ad0:	pop    ss
  408ad1:	xchg   BYTE PTR [ebx+0x16],bl
  408ad4:	pop    edx
  408ad5:	and    BYTE PTR [edx-0x21],ch
  408ad8:	pop    eax
  408ad9:	stc    
  408ada:	xchg   ebx,eax
  408adb:	jbe    0x408b4a
  408add:	sahf   
  408ade:	cmp    DWORD PTR [edi-0x71a7ae62],0x815e1d66
  408ae8:	retf   0x12df
  408aeb:	jae    0x408b20
  408aed:	ins    DWORD PTR es:[edi],dx
  408aee:	test   dl,cl
  408af0:	adc    DWORD PTR [esi],0xffffffd2
  408af3:	and    eax,0xf3ca7852
  408af8:	or     eax,0x29309503
  408afd:	push   esi
  408afe:	add    eax,eax
  408b00:	push   0xffffffc5
  408b02:	ds call 0x933d4151
  408b08:	sbb    eax,0x14d1e034
  408b0d:	fcom   DWORD PTR [edx-0x5eca077d]
  408b13:	inc    eax
  408b14:	clc    
  408b15:	push   ebx
  408b17:	dec    edx
  408b18:	lock or bl,ch
  408b1b:	cmp    edi,edx
  408b1d:	imul   esi,DWORD PTR [esi+0xf],0xffffffbc
  408b21:	jbe    0x408aa6
  408b23:	(bad)  
  408b24:	loop   0x408b39
  408b26:	bound  eax,QWORD PTR [ecx-0x15]
  408b29:	hlt    
  408b2a:	popf   
  408b2b:	mov    ds:0xa8fe7212,al
  408b30:	inc    edx
  408b31:	pushf  
  408b32:	or     ah,BYTE PTR [edx-0x3]
  408b35:	loopne 0x408b71
  408b37:	pop    ebp
  408b38:	sbb    esi,DWORD PTR [ebx-0x5371e49d]
  408b3e:	fdivp  st(3),st
  408b40:	mov    al,ds:0x89c21cb6
  408b45:	mov    ebp,0x25a65d86
  408b4a:	stos   DWORD PTR es:[edi],eax
  408b4b:	push   eax
  408b4c:	xor    BYTE PTR [edx+0x151b85e6],0x0
  408b53:	pusha  
  408b54:	mov    esp,0xa94aef48
  408b59:	xchg   edi,eax
  408b5a:	add    esi,DWORD PTR [ebx]
  408b5c:	scas   eax,DWORD PTR es:[edi]
  408b5d:	add    edi,DWORD PTR [ecx]
  408b5f:	loopne 0x408b37
  408b61:	call   0xfa13:0xf1b7e3ca
  408b68:	lahf   
  408b69:	scas   eax,DWORD PTR es:[edi]
  408b6a:	rol    bl,0x45
  408b6d:	outs   dx,DWORD PTR ds:[esi]
  408b6e:	cmp    edi,DWORD PTR [edi]
  408b70:	pop    edx
  408b71:	mov    bh,0x9
  408b73:	jmp    0x4d2fecb
  408b78:	stc    
  408b79:	push   edi
  408b7a:	xchg   esp,eax
  408b7b:	(bad)  
  408b7c:	out    0xd0,eax
  408b7e:	push   ebp
  408b7f:	xor    al,0x2b
  408b81:	bound  edi,QWORD PTR [ecx-0x14]
  408b84:	inc    eax
  408b85:	or     eax,0x56a980f9
  408b8a:	and    ebx,DWORD PTR [ecx]
  408b8c:	sbb    al,0x54
  408b8e:	sbb    BYTE PTR [ebp-0x2037078d],cl
  408b94:	sti    
  408b95:	push   0x55
  408b97:	clc    
  408b98:	fcmovnb st,st(7)
  408b9a:	ret    0x6526
  408b9d:	and    edx,ebx
  408b9f:	lds    ebx,FWORD PTR [ebx+0x2a57c0ff]
  408ba5:	outs   dx,BYTE PTR ds:[esi]
  408ba6:	sahf   
  408ba7:	rcl    DWORD PTR [ecx+0x656a9651],0x5e
  408bae:	out    dx,al
  408baf:	je     0x408bbd
  408bb1:	popf   
  408bb2:	in     al,dx
  408bb3:	adc    al,0xff
  408bb5:	push   ebx
  408bb6:	jg     0x408bdd
  408bb8:	inc    ebx
  408bb9:	call   0x9eda:0xdc432579
  408bc0:	std    
  408bc1:	ror    esi,0xb3
  408bc4:	out    dx,al
  408bc5:	push   ecx
  408bc6:	mov    dl,0xf5
  408bc8:	dec    esi
  408bc9:	or     al,0xac
  408bcb:	push   esi
  408bcc:	or     BYTE PTR [ecx-0x1e],dl
  408bcf:	in     al,0xb4
  408bd1:	or     BYTE PTR [eax],cl
  408bd3:	and    ch,BYTE PTR [ecx+0x54]
  408bd6:	mov    esp,0xb3cf7a90
  408bdb:	mov    ecx,0xff68fdca
  408be0:	pusha  
  408be1:	cld    
  408be2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408be3:	dec    ecx
  408be4:	adc    ch,BYTE PTR [eax]
  408be6:	ror    DWORD PTR [ecx+0x1db90ff3],0x79
  408bed:	mov    edx,0x4632fabc
  408bf2:	outs   dx,DWORD PTR ds:[esi]
  408bf3:	das    
  408bf4:	fld    QWORD PTR [ecx+0x23]
  408bf7:	xchg   ecx,eax
  408bf8:	(bad)  
  408bf9:	fnstsw WORD PTR [ecx-0x7a]
  408bfc:	out    0x7c,al
  408bfe:	mov    WORD PTR [edi],fs
  408c00:	aam    0xfa
  408c02:	dec    edi
  408c03:	lea    edx,[esi+0x2a415d3f]
  408c09:	es loopne 0x408b90
  408c0c:	mov    esp,0xf508848d
  408c11:	jb     0x408c45
  408c13:	add    BYTE PTR [ecx+0x458b0845],cl
  408c19:	hlt    
  408c1a:	mov    ecx,DWORD PTR [ebp+0x14]
  408c1d:	xor    eax,esi
  408c1f:	add    eax,edi
  408c21:	imul   eax,DWORD PTR [ecx]
  408c24:	mov    ecx,DWORD PTR [ebp-0x4]
  408c27:	mov    edx,DWORD PTR [ebp+0x8]
  408c2a:	xor    ecx,esi
  408c2c:	lea    ecx,[ecx+edx*1+0x3272f5]
  408c33:	cmp    ecx,eax
  408c35:	jne    0x406849
  408c3b:	jmp    0x40afcd
  408c40:	or     eax,0xbf3c7fd1
  408c45:	mov    cl,BYTE PTR [edx]
  408c47:	into   
  408c48:	and    bl,BYTE PTR [ebx]
  408c4a:	and    eax,0x49375c2a
  408c4f:	xchg   DWORD PTR [eax+ebx*1+0x5e0c8383],ebx
  408c56:	add    DWORD PTR [ebx-0x6795197e],0x73
  408c5d:	mov    cl,0xa2
  408c5f:	push   0x1fb93bdc
  408c64:	out    0xd8,eax
  408c66:	dec    edx
  408c67:	rcr    DWORD PTR [ecx],cl
  408c69:	sti    
  408c6a:	out    dx,al
  408c6b:	stos   BYTE PTR es:[edi],al
  408c6c:	loope  0x408cb7
  408c6e:	shl    DWORD PTR [ebp-0xca57940],1
  408c74:	mov    ds:0x3a3df533,al
  408c79:	outs   dx,DWORD PTR ds:[esi]
  408c7a:	push   es
  408c7b:	cdq    
  408c7c:	xchg   ebp,eax
  408c7d:	nop
  408c7e:	hlt    
  408c7f:	mov    ds:0x62227c31,eax
  408c84:	fs enter 0x425c,0x27
  408c89:	lea    esp,[eax+0x28]
  408c8c:	or     ebx,eax
  408c8e:	ret    
  408c8f:	icebp  
  408c90:	jg     0x408c76
  408c92:	dec    esp
  408c93:	and    eax,eax
  408c95:	out    0xba,eax
  408c97:	rcl    dh,1
  408c99:	inc    ebx
  408c9a:	jo     0x408ccf
  408c9c:	xor    BYTE PTR [eax-0xe],bl
  408c9f:	mov    edi,0x719a45aa
  408ca4:	push   ds
  408ca5:	dec    ecx
  408ca6:	repnz cdq 
  408ca8:	lahf   
  408ca9:	fild   WORD PTR [esi+0x2fe07b8f]
  408caf:	jnp    0x408c76
  408cb1:	add    BYTE PTR [ebp+0x5f0f7da6],dh
  408cb7:	test   BYTE PTR [eax+0x5afc1813],al
  408cbd:	dec    eax
  408cbe:	jg     0x408c9c
  408cc0:	jge    0x408cc2
  408cc2:	mov    ebx,0x3b630721
  408cc7:	cli    
  408cc8:	out    dx,eax
  408cc9:	ins    BYTE PTR es:[edi],dx
  408cca:	xchg   esi,eax
  408ccb:	or     eax,0x829cf384
  408cd0:	mov    ds:0x8037c8e7,al
  408cd5:	or     al,ah
  408cd7:	pop    esi
  408cd8:	adc    al,0xfe
  408cda:	inc    eax
  408cdb:	fdiv   QWORD PTR [ebx+0xb]
  408cde:	pop    ebx
  408cdf:	pop    ss
  408ce0:	sti    
  408ce1:	(bad)  [esp+ecx*4-0x7069bfbf]
  408ce8:	push   0xffffffc1
  408cea:	imul   esp,eax,0x88fee4ac
  408cf0:	inc    eax
  408cf1:	sbb    ecx,0xffffff8b
  408cf4:	jnp    0x408c9b
  408cf6:	fld    QWORD PTR [esp+ebx*8]
  408cf9:	sub    dl,BYTE PTR [ecx+eax*2-0x4930a8]
  408d00:	pop    ecx
  408d01:	push   ss
  408d02:	inc    esi
  408d03:	int3   
  408d04:	lea    edi,[edx]
  408d06:	add    eax,DWORD PTR [ebx-0x76]
  408d09:	xor    DWORD PTR [edx],ebx
  408d0b:	cmp    ecx,ecx
  408d0d:	rcr    DWORD PTR [esi-0x4b],cl
  408d10:	in     eax,dx
  408d11:	push   cs
  408d12:	cld    
  408d13:	pop    ss
  408d14:	ss dec ecx
  408d16:	and    al,0xd9
  408d18:	out    0xb1,eax
  408d1a:	add    BYTE PTR [edi-0x22584bfb],bl
  408d20:	ffreep st(7)
  408d22:	xor    BYTE PTR [edx],0x6e
  408d25:	inc    eax
  408d26:	adc    BYTE PTR [edi],bl
  408d28:	mov    al,ds:0x8f719610
  408d2d:	jae    0x408d42
  408d2f:	xchg   edx,eax
  408d30:	and    DWORD PTR [edx-0x44c42515],eax
  408d36:	sbb    eax,0x15b0458
  408d3b:	into   
  408d3c:	jle    0x408d06
  408d3e:	lahf   
  408d3f:	hlt    
  408d40:	and    eax,0xa90a7659
  408d45:	fs loopne 0x408d5c
  408d48:	adc    ah,BYTE PTR [edx+0x34]
  408d4b:	push   ds
  408d4c:	js     0x408d50
  408d4e:	int    0xa3
  408d50:	(bad)  
  408d51:	nop
  408d52:	xchg   edi,eax
  408d53:	xchg   BYTE PTR [esi],ch
  408d55:	icebp  
  408d56:	mov    ch,0x93
  408d58:	inc    ecx
  408d59:	xor    eax,0x866a44dd
  408d5e:	mov    al,0x72
  408d60:	retf   0xe84
  408d63:	leave  
  408d64:	jmp    0x87ae:0x20ae39d4
  408d6b:	call   0x603a:0x7de83fd2
  408d72:	(bad)  
  408d73:	aaa    
  408d74:	hlt    
  408d75:	inc    esi
  408d76:	mov    ecx,0xc777a607
  408d7b:	out    dx,al
  408d7c:	fst    DWORD PTR [ecx-0x228bd72a]
  408d82:	stos   DWORD PTR es:[edi],eax
  408d83:	or     DWORD PTR [edi+0x4e409abd],0xffffffac
  408d8a:	(bad)  [edi]
  408d8c:	fnstenv [ebx+0x1a]
  408d8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d90:	leave  
  408d91:	dec    esp
  408d92:	in     al,dx
  408d93:	scas   eax,DWORD PTR es:[edi]
  408d94:	(bad)  
  408d95:	pop    edi
  408d96:	adc    eax,0xf2605862
  408d9b:	or     ecx,DWORD PTR [eax]
  408d9d:	or     eax,0x42b1d091
  408da2:	mov    ah,BYTE PTR [ecx-0x4ff609aa]
  408da8:	aad    0xcb
  408daa:	shl    BYTE PTR [eax+0x62b318a9],0xf9
  408db1:	fisub  DWORD PTR [ecx-0xe]
  408db4:	and    bh,BYTE PTR ds:0x510fc5ca
  408dba:	scas   eax,DWORD PTR es:[edi]
  408dbb:	nop
  408dbc:	pop    ds
  408dbd:	push   edx
  408dbe:	ins    DWORD PTR es:[edi],dx
  408dbf:	scas   eax,DWORD PTR es:[edi]
  408dc0:	sub    BYTE PTR [ebp+ebx*4+0x6fb926ec],cl
  408dc7:	in     eax,0xbc
  408dc9:	rcl    DWORD PTR [ebx+0x450a596],1
  408dcf:	loopne 0x408d83
  408dd1:	or     al,0xc5
  408dd3:	in     al,0x54
  408dd5:	add    ch,0x9
  408dd8:	pushf  
  408dd9:	bound  eax,QWORD PTR [ecx+0x45]
  408ddc:	mov    edi,0xd464892b
  408de1:	adc    edx,DWORD PTR [edx+0x154a39bb]
  408de7:	lds    ebx,FWORD PTR [eax-0x21619f2]
  408ded:	dec    ebx
  408dee:	loop   0x408dcd
  408df0:	or     dl,BYTE PTR [edx+eiz*8-0x3bbfadc2]
  408df7:	in     eax,dx
  408df8:	push   esi
  408df9:	mov    ds:0xcd46fc48,eax
  408dfe:	imul   eax,ebp,0x16
  408e01:	lahf   
  408e02:	jo     0x408e38
  408e04:	out    dx,al
  408e05:	dec    edx
  408e06:	icebp  
  408e07:	(bad)  
  408e08:	enter  0x53ef,0x6e
  408e0c:	push   edx
  408e0d:	jno    0x408dd3
  408e0f:	xor    esi,DWORD PTR [edi]
  408e11:	imul   DWORD PTR [edx]
  408e13:	adc    esi,edx
  408e15:	inc    edx
  408e16:	jg     0x408e79
  408e18:	push   ecx
  408e19:	out    0x27,al
  408e1b:	or     DWORD PTR [ebx-0x40],ebp
  408e1e:	leavew 
  408e20:	jmp    0x408e47
  408e22:	call   0xb35b17fd
  408e27:	test   BYTE PTR [ebx-0x59],ah
  408e2a:	push   esi
  408e2b:	xor    al,0xe
  408e2d:	jge    0x408e03
  408e2f:	shr    ebp,0x68
  408e32:	adc    DWORD PTR [esp+esi*4-0xf744318],eax
  408e39:	mov    al,0xad
  408e3b:	(bad)  
  408e3d:	call   0x97dc:0x25679de5
  408e44:	sti    
  408e45:	jl     0x408ea3
  408e47:	add    BYTE PTR [ebx],bh
  408e49:	jae    0x408ebf
  408e4b:	or     eax,0xc29c1904
  408e50:	jg     0x408eae
  408e52:	xor    ebx,DWORD PTR [ecx]
  408e54:	sub    cl,bl
  408e56:	and    ebp,DWORD PTR [esp+ecx*8+0x2ea760f7]
  408e5d:	test   esi,edx
  408e5f:	cs (bad) 
  408e61:	loopne 0x408e94
  408e63:	aas    
  408e64:	jge    0x408e33
  408e66:	xchg   esi,eax
  408e67:	retf   0xe4f3
  408e6a:	jno    0x408e71
  408e6c:	fadd   st(1),st
  408e6e:	mov    eax,ds:0x697e1542
  408e73:	pop    esi
  408e74:	mov    cs,ecx
  408e76:	outs   dx,BYTE PTR ds:[esi]
  408e77:	push   edi
  408e78:	in     eax,dx
  408e79:	jns    0x408e22
  408e7b:	sbb    DWORD PTR [edx+esi*1],0x111d642b
  408e82:	loope  0x408ebd
  408e84:	or     ah,dl
  408e86:	mov    ds:0x5c258477,al
  408e8b:	sub    al,0x23
  408e8d:	cmp    eax,ecx
  408e8f:	inc    ebp
  408e90:	into   
  408e91:	jl     0x408e78
  408e93:	jmp    0x345e:0xafd09873
  408e9a:	lock pop ss
  408e9c:	inc    esp
  408e9d:	fs int 0x11
  408ea0:	push   edx
  408ea1:	or     eax,0x332d7ef7
  408ea6:	xor    eax,0x2f17f54e
  408eab:	sub    cl,BYTE PTR [edx+eax*8+0x78]
  408eaf:	xchg   ebx,eax
  408eb0:	aam    0xa7
  408eb2:	adc    al,0x67
  408eb4:	cmp    esp,esi
  408eb6:	inc    ecx
  408eb7:	lock jo 0x408efd
  408eba:	xchg   edx,eax
  408ebb:	jp     0x408e41
  408ebd:	sub    ecx,esp
  408ebf:	mov    ebp,0xdbd5f6c3
  408ec4:	pop    ss
  408ec5:	push   0xffffff98
  408ec7:	fsubr  st(0),st
  408ec9:	pop    es
  408eca:	sub    cl,BYTE PTR [ebp+0x4]
  408ecd:	jl     0x408e87
  408ecf:	jecxz  0x408e64
  408ed1:	mov    eax,ds:0x5738408e
  408ed6:	sysenter 
  408ed8:	data16 cli 
  408eda:	push   esi
  408edb:	fwait
  408edc:	out    dx,al
  408edd:	pop    esi
  408ede:	cmp    DWORD PTR [esi],edi
  408ee0:	lods   al,BYTE PTR ds:[esi]
  408ee1:	out    dx,eax
  408ee2:	sub    eax,0x8d73f3aa
  408ee7:	pop    ebp
  408ee8:	psrlw  mm3,mm4
  408eeb:	or     edi,DWORD PTR [ecx]
  408eed:	mov    eax,ds:0xa324a293
  408ef2:	pop    eax
  408ef3:	popf   
  408ef4:	fisttp QWORD PTR [edx+0x66]
  408ef7:	scas   eax,DWORD PTR es:[edi]
  408ef8:	mov    cl,0x81
  408efa:	out    dx,al
  408efb:	jmp    0xb02c:0x6498664a
  408f02:	inc    ebp
  408f03:	xor    cl,cl
  408f05:	stos   DWORD PTR es:[edi],eax
  408f06:	cmp    edx,DWORD PTR [ecx]
  408f08:	add    DWORD PTR [ecx+0x891a59c],0xffffffca
  408f0f:	sub    eax,0xacfa4182
  408f14:	pop    eax
  408f15:	loop   0x408f39
  408f17:	dec    ebp
  408f18:	popa   
  408f19:	stos   BYTE PTR es:[edi],al
  408f1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f1b:	xlat   BYTE PTR ds:[ebx]
  408f1c:	pop    ds
  408f1d:	ror    DWORD PTR [ecx-0x7d9f93ee],0xe8
  408f24:	in     al,0x3e
  408f26:	pop    ebx
  408f27:	pushf  
  408f28:	xchg   BYTE PTR [esi],al
  408f2a:	inc    edx
  408f2b:	or     bl,BYTE PTR [esi+0x4]
  408f2e:	daa    
  408f2f:	loopne 0x408ec4
  408f31:	popa   
  408f32:	push   edx
  408f33:	rol    BYTE PTR [edi+0x1dbc8fd8],1
  408f39:	or     al,0x87
  408f3b:	jle    0x408f82
  408f3d:	push   ds
  408f3e:	call   0xd579:0x99612ac
  408f45:	and    DWORD PTR [ebp+0x62f6517b],0xffffffd7
  408f4c:	mov    ebp,edx
  408f4e:	hlt    
  408f4f:	out    dx,eax
  408f50:	out    dx,al
  408f51:	cmp    DWORD PTR [edi+edx*1-0x58],eax
  408f55:	mov    dh,0xa1
  408f57:	in     eax,0xc6
  408f59:	test   BYTE PTR [esi-0x2],bl
  408f5c:	js     0x408f69
  408f5e:	pusha  
  408f5f:	sub    DWORD PTR [esi-0x782716d3],ecx
  408f65:	ror    BYTE PTR [ebp+0x7c59b438],cl
  408f6b:	pop    edi
  408f6c:	push   ebp
  408f6d:	push   edx
  408f6e:	mov    ?,WORD PTR [edi-0x32ec51b5]
  408f74:	mov    cl,0xc8
  408f76:	pop    esi
  408f77:	push   cs
  408f78:	cmp    al,0x96
  408f7a:	ja     0x408f6f
  408f7c:	aaa    
  408f7d:	push   cs
  408f7e:	inc    esi
  408f7f:	(bad)  
  408f80:	(bad)  
  408f81:	jmp    0x2602:0x6220907f
  408f88:	addr16 shl cl,0x52
  408f8c:	ret    
  408f8d:	dec    DWORD PTR [ecx+0x16528348]
  408f93:	push   es
  408f94:	popf   
  408f95:	(bad)  
  408f96:	lock mov edx,0x7268ed15
  408f9c:	sar    BYTE PTR [ebx],0x2a
  408f9f:	xor    ebx,esp
  408fa1:	cmp    ch,BYTE PTR [edx+edx*4+0x1f31bcca]
  408fa8:	punpcklbw mm5,mm4
  408fab:	pushf  
  408fac:	cmp    DWORD PTR [eax+0x79],0xffffffa8
  408fb0:	adc    ah,BYTE PTR ds:0x1420ba1
  408fb6:	jmp    0x409000
  408fb8:	adc    DWORD PTR [esi-0x101cc41b],edi
  408fbe:	add    eax,0x40f1ce46
  408fc3:	je     0x408fdf
  408fc5:	and    ecx,DWORD PTR [ebp+0x1d6e67f2]
  408fcb:	aam    0xee
  408fcd:	leave  
  408fce:	mov    ebp,ebp
  408fd0:	mov    ch,BYTE PTR [esi+0x61]
  408fd3:	lods   eax,DWORD PTR ds:[esi]
  408fd4:	shl    bh,cl
  408fd6:	xchg   BYTE PTR [edx-0x411b28df],bl
  408fdc:	mov    edx,0xa2990c7f
  408fe1:	fstp   TBYTE PTR [edx+edi*4+0x70c1e71c]
  408fe8:	pop    edi
  408fe9:	icebp  
  408fea:	sub    edx,DWORD PTR [ebp-0x350bcf0]
  408ff0:	mov    DWORD PTR [eax],edi
  408ff2:	dec    ebx
  408ff3:	mov    ecx,0xd31d7dde
  408ff8:	push   0xc17b40d0
  408ffd:	ja     0x409028
  408fff:	add    al,0x3e
  409001:	packuswb mm3,QWORD PTR [eax+0x57208164]
  409008:	mov    al,0x48
  40900a:	add    DWORD PTR [ebx],ebx
  40900c:	adc    ebx,DWORD PTR [esi+edx*4]
  40900f:	lds    esp,FWORD PTR [edi]
  409011:	pop    esi
  409012:	and    al,0x4d
  409014:	cmp    ch,0x90
  409017:	hlt    
  409018:	lahf   
  409019:	inc    ebx
  40901a:	cli    
  40901b:	ss or  eax,0x7b72aeaa
  409021:	add    ebx,eax
  409023:	cmp    bl,BYTE PTR [ecx+0x2ac42e6d]
  409029:	out    dx,al
  40902a:	test   al,0x8
  40902c:	daa    
  40902d:	cwde   
  40902e:	xlat   BYTE PTR ds:[ebx]
  40902f:	outs   dx,BYTE PTR ds:[esi]
  409030:	shr    BYTE PTR [eax+0x7eaa6ec1],cl
  409036:	push   0x34bfeef
  40903b:	(bad)  
  40903c:	leave  
  40903d:	push   cs
  40903e:	push   edi
  40903f:	push   eax
  409040:	push   edx
  409041:	push   edi
  409042:	in     al,0x5d
  409044:	add    eax,0xecfae377
  409049:	xchg   esi,eax
  40904a:	test   BYTE PTR [ecx-0x38da1139],cl
  409050:	shl    BYTE PTR [edx*2+0x259c0ec6],cl
  409057:	out    dx,al
  409058:	mov    WORD PTR [edx],gs
  40905a:	adc    BYTE PTR [esi+0x33873e7c],cl
  409060:	aaa    
  409061:	push   0x6294543a
  409066:	dec    ebx
  409067:	xchg   DWORD PTR [ebx+0x67],ecx
  40906a:	call   0x9cd318c3
  40906f:	cs mov ch,cl
  409072:	sbb    ebx,edx
  409074:	push   esp
  409075:	rol    BYTE PTR [edi*4-0x26508a8e],0x19
  40907d:	inc    ecx
  40907e:	jae    0x4090e6
  409080:	pop    ss
  409081:	test   al,0xb
  409083:	(bad)  
  409084:	loope  0x4090cb
  409086:	mov    edi,0x884cda1a
  40908b:	fisub  DWORD PTR [esi+0x18]
  40908e:	ds gs lock lock jl 0x4090aa
  409094:	inc    ecx
  409095:	(bad)  
  409096:	aad    0x8f
  409098:	cmp    bh,dh
  40909a:	test   al,0x5a
  40909c:	loopne 0x40911d
  40909e:	out    dx,al
  40909f:	jp     0x4090e3
  4090a1:	pop    ds
  4090a2:	fstp   DWORD PTR [edi+0x40f6e7fb]
  4090a8:	mov    fs,WORD PTR ds:0x5c8ef5b6
  4090ae:	mov    ecx,0x491c6b0a
  4090b3:	mov    edx,DWORD PTR cs:[eax-0x5e]
  4090b7:	je     0x40904a
  4090b9:	pop    eax
  4090ba:	xchg   ecx,eax
  4090bb:	outs   dx,BYTE PTR ds:[esi]
  4090bc:	mov    cs,edi
  4090be:	leave  
  4090bf:	cli    
  4090c0:	sbb    BYTE PTR [bp+0x451a],dh
  4090c5:	ss pop ebp
  4090c7:	(bad)  
  4090c8:	cmp    bl,BYTE PTR ds:0x8e02285c
  4090ce:	mov    ah,0x38
  4090d0:	jecxz  0x409065
  4090d2:	xor    DWORD PTR [edx+0x48fa7664],eax
  4090d8:	xchg   BYTE PTR [eax+0x4368fc87],bl
  4090de:	cmp    edx,DWORD PTR [ecx]
  4090e0:	push   ebx
  4090e1:	jb     0x409079
  4090e3:	mov    edi,0x36c8ca02
  4090e8:	pop    ecx
  4090e9:	out    dx,eax
  4090ea:	loope  0x4090c6
  4090ec:	xchg   edx,eax
  4090ed:	nop
  4090ee:	not    BYTE PTR [edx+0x2]
  4090f1:	push   ss
  4090f2:	inc    eax
  4090f3:	or     al,BYTE PTR [ebx-0x4f]
  4090f6:	xchg   ebp,eax
  4090f7:	sub    eax,0x727b7f0f
  4090fc:	outs   dx,BYTE PTR ds:[esi]
  4090fd:	jno    0x4090b0
  4090ff:	les    ecx,FWORD PTR [ebx]
  409101:	test   al,0x4f
  409103:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409104:	cmp    BYTE PTR [edi],0x62
  409107:	inc    esp
  409108:	shl    DWORD PTR [ebp-0x20347bba],cl
  40910e:	(bad)  
  40910f:	ss inc eax
  409111:	adc    al,0x86
  409113:	ins    BYTE PTR es:[edi],dx
  409114:	shl    DWORD PTR [edx-0x5909c560],1
  40911a:	mov    bl,0x6
  40911c:	xchg   esp,eax
  40911d:	sbb    edx,DWORD PTR [ecx-0xa0c12da]
  409123:	cmp    al,0x1d
  409125:	mov    esp,0x1a5e2b59
  40912a:	out    dx,eax
  40912b:	mov    eax,0xd60886f8
  409130:	shl    bh,0x18
  409133:	pop    edi
  409134:	nop
  409135:	and    BYTE PTR [edi],bh
  409137:	mov    cl,0x66
  409139:	scas   eax,DWORD PTR es:[edi]
  40913a:	leave  
  40913b:	addr16 mov ch,0x2a
  40913e:	stos   BYTE PTR es:[edi],al
  40913f:	sub    al,0xae
  409141:	(bad)  [ebx+0x56]
  409144:	mov    al,0xcb
  409146:	out    dx,al
  409147:	stos   DWORD PTR es:[edi],eax
  409148:	pop    eax
  409149:	dec    ecx
  40914a:	loopne 0x409139
  40914c:	push   esp
  40914d:	jae    0x40913b
  40914f:	xor    eax,0x266511cc
  409154:	dec    eax
  409155:	mov    DWORD PTR [edi+0x32],ebx
  409158:	icebp  
  409159:	mov    eax,ds:0x321be8a8
  40915e:	aam    0x35
  409160:	xor    ah,ch
  409162:	and    eax,0xd32dada4
  409167:	fstp   DWORD PTR [ecx-0x13]
  40916a:	sub    cl,ah
  40916c:	inc    ecx
  40916d:	in     eax,dx
  40916e:	xchg   BYTE PTR [eax+edi*1+0x26],ch
  409172:	retf   0x9b68
  409175:	add    bh,BYTE PTR [ebp+0x3366c3c4]
  40917b:	imul   esp,DWORD PTR [ebx],0xffffffc8
  40917e:	sbb    ebp,DWORD PTR [esi-0x7d05a245]
  409184:	scas   eax,DWORD PTR es:[edi]
  409185:	inc    edx
  409186:	push   ds
  409187:	add    al,0x8e
  409189:	sbb    BYTE PTR [edi+0x4b40b0e5],dh
  40918f:	in     al,0x3a
  409191:	mov    bh,0xe
  409193:	rol    bl,0xb1
  409196:	mov    ch,0x41
  409198:	adc    dl,dl
  40919a:	aaa    
  40919b:	pop    ss
  40919c:	icebp  
  40919d:	jb     0x4091ff
  40919f:	fwait
  4091a0:	pop    edi
  4091a1:	aad    0xe
  4091a3:	loopne 0x409217
  4091a5:	inc    DWORD PTR ss:[ebx+ecx*1-0x70]
  4091aa:	mov    dh,0xa7
  4091ac:	ret    0xcccf
  4091af:	int3   
  4091b0:	mov    esi,DWORD PTR [esi]
  4091b2:	or     BYTE PTR [eax+0x70ed4a59],bh
  4091b8:	jle    0x40917e
  4091ba:	stos   DWORD PTR es:[edi],eax
  4091bb:	dec    eax
  4091bc:	daa    
  4091bd:	push   0xae6a6037
  4091c2:	cmp    al,0x18
  4091c4:	jle    0x409173
  4091c6:	add    al,BYTE PTR [eax+ebx*2]
  4091c9:	sbb    eax,0x599818f2
  4091ce:	adc    al,0xad
  4091d0:	xchg   BYTE PTR [edx-0x435a21d],ch
  4091d6:	pop    ebp
  4091d7:	outs   dx,BYTE PTR ds:[esi]
  4091d8:	leave  
  4091d9:	jne    0x40918e
  4091db:	jmp    0x116b:0x15ca1495
  4091e2:	mov    ecx,DWORD PTR [ebx]
  4091e4:	inc    ebp
  4091e5:	add    eax,0xdc6608a1
  4091ea:	rcr    DWORD PTR [edi+0x41509539],1
  4091f0:	ins    DWORD PTR es:[edi],dx
  4091f1:	push   cs
  4091f2:	jnp    0x409267
  4091f4:	out    dx,al
  4091f5:	cdq    
  4091f6:	sbb    al,0x43
  4091f8:	test   al,dl
  4091fa:	cmp    ch,0xeb
  4091fd:	jns    0x4091b9
  4091ff:	fcomi  st,st(1)
  409201:	mov    esp,0xddf12176
  409206:	cmp    eax,DWORD PTR [ecx]
  409208:	pop    ds
  409209:	add    al,0x1e
  40920b:	ja     0x4091e1
  40920d:	pop    esi
  40920e:	fdecstp 
  409210:	xlat   BYTE PTR ds:[ebx]
  409211:	(bad)  
  409212:	ds mov ah,0x6a
  409215:	sbb    bh,bl
  409217:	(bad)  
  409219:	xor    eax,0x7df8df7b
  40921e:	and    eax,0xf8b80a16
  409223:	jae    0x4091ae
  409225:	clc    
  409226:	int    0xc9
  409228:	retf   0x6e19
  40922b:	icebp  
  40922c:	cmc    
  40922d:	adc    eax,0x8f6a46df
  409232:	fbstp  TBYTE PTR es:[ebx]
  409235:	stos   DWORD PTR es:[edi],eax
  409236:	cs inc cl
  409239:	lods   eax,DWORD PTR ds:[esi]
  40923a:	inc    ebx
  40923b:	inc    ebp
  40923c:	adc    al,0x7d
  40923e:	lock and ah,BYTE PTR [eax+0x2d960259]
  409245:	gs out dx,al
  409247:	maskmovq mm5,(bad)
  409248:	imul   DWORD PTR [ebx]
  40924a:	and    eax,0x9bf60043
  40924f:	mov    bh,bl
  409251:	(bad)  
  409252:	ja     0x4091e9
  409254:	repz push 0xfffffffa
  409257:	mov    al,0x69
  409259:	mov    cl,0xdf
  40925b:	inc    edx
  40925c:	mov    ebx,0x55c261ff
  409261:	xlat   BYTE PTR ds:[ebx]
  409262:	(bad)  
  409263:	shr    edi,cl
  409265:	(bad)  
  409266:	mov    edx,0xf54aabdb
  40926b:	xor    DWORD PTR [ebx-0x4b],ebx
  40926e:	loope  0x40921d
  409270:	hlt    
  409271:	rol    BYTE PTR [esi+0x5879c0c4],0xe0
  409278:	arpl   WORD PTR [edi+ebp*4+0x175da3de],di
  40927f:	inc    ebp
  409280:	sub    ebx,ebx
  409282:	xor    al,0xb9
  409284:	inc    ebp
  409285:	dec    edi
  409286:	pop    ebp
  409287:	fstp   DWORD PTR [ecx-0x11]
  40928a:	sahf   
  40928b:	dec    ecx
  40928c:	pop    esi
  40928d:	mov    ss,WORD PTR [edi]
  40928f:	loope  0x409278
  409291:	adc    DWORD PTR [esi-0x48],0x2f
  409295:	inc    esp
  409296:	data16 fwait
  409298:	cdq    
  409299:	(bad)  
  40929a:	mov    al,ds:0x7bb515f7
  40929f:	adc    DWORD PTR [esi+0x45],esi
  4092a2:	mov    WORD PTR [ebx],gs
  4092a4:	dec    edx
  4092a5:	cld    
  4092a6:	repnz mov bh,0x4c
  4092a9:	pop    ss
  4092aa:	pop    esi
  4092ab:	cmp    edi,edx
  4092ad:	js     0x4092c1
  4092af:	test   DWORD PTR [ebx-0x16],esp
  4092b2:	loopne 0x409255
  4092b4:	and    ebp,DWORD PTR [edi]
  4092b6:	bound  edx,QWORD PTR fs:[esi-0x26443130]
  4092bd:	fisub  DWORD PTR [edx+0x7cbc0514]
  4092c3:	mov    ?,WORD PTR [edi+0x61]
  4092c6:	push   es
  4092c7:	inc    esp
  4092c8:	xchg   edi,eax
  4092c9:	cwde   
  4092ca:	stc    
  4092cb:	or     al,0x7a
  4092cd:	pop    esp
  4092ce:	sbb    al,0x70
  4092d0:	leave  
  4092d1:	xadd   DWORD PTR [ecx+0x65c62d33],ecx
  4092d8:	pop    ebp
  4092d9:	sub    esp,DWORD PTR [edx+ecx*8]
  4092dc:	pop    ds
  4092dd:	sbb    eax,DWORD PTR [edi]
  4092df:	daa    
  4092e0:	dec    edx
  4092e1:	mov    bh,0x82
  4092e3:	pop    ecx
  4092e4:	mov    edx,0xccd6ec57
  4092e9:	and    DWORD PTR [ecx+0x4969b612],edi
  4092ef:	outs   dx,BYTE PTR ds:[esi]
  4092f0:	lods   al,BYTE PTR ds:[esi]
  4092f1:	shl    DWORD PTR [edi-0x233cfd43],cl
  4092f7:	jmp    0x409313
  4092f9:	repnz mov eax,0xe6004fa6
  4092ff:	into   
  409300:	mov    edi,0xd474260b
  409305:	pop    esi
  409306:	jg     0x40936e
  409308:	mov    cl,0x8c
  40930a:	daa    
  40930b:	mov    bl,0x41
  40930d:	mov    dl,0x12
  40930f:	test   al,0x74
  409311:	sar    BYTE PTR [edi+0x11],1
  409314:	pop    edx
  409315:	adc    dl,BYTE PTR [ebp+0x3a]
  409318:	xlat   BYTE PTR ds:[ebx]
  409319:	xchg   esp,eax
  40931a:	inc    ecx
  40931b:	mov    ds:0xce9de014,eax
  409320:	jns    0x4092d2
  409322:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409323:	mov    esi,0x30be5b34
  409328:	mov    al,0x2
  40932a:	rcr    DWORD PTR [ebp+0xde822b8],1
  409330:	aam    0xa9
  409332:	xor    al,0x4c
  409334:	push   ebx
  409335:	dec    ecx
  409336:	popf   
  409337:	jns    0x409315
  409339:	xor    eax,0xed619b7b
  40933e:	cmp    BYTE PTR [ecx],0x9e
  409341:	xchg   DWORD PTR [esi+eiz*1],esi
  409344:	test   DWORD PTR [edx-0x60],esp
  409347:	(bad)  
  409348:	(bad)  
  409349:	rcr    BYTE PTR [esi-0xf1df971],cl
  40934f:	test   DWORD PTR [edi-0x62615482],eax
  409355:	pushfw 
  409357:	xchg   ebx,eax
  409358:	fwait
  409359:	xchg   esp,eax
  40935a:	mov    ch,0x1a
  40935c:	repnz shr BYTE PTR [ebp+0x73],0x27
  409361:	push   esp
  409362:	in     al,0xb5
  409364:	or     bh,BYTE PTR [ecx-0x68]
  409367:	sub    DWORD PTR [edx+0x79],ebp
  40936a:	ins    DWORD PTR es:[edi],dx
  40936b:	ret    
  40936c:	call   edx
  40936e:	int    0x4b
  409370:	(bad)  
  409371:	addr16 xchg edx,eax
  409373:	cmp    al,0x62
  409375:	and    esi,DWORD PTR [edx-0x47]
  409378:	jae    0x409341
  40937a:	xchg   ebx,eax
  40937b:	js     0x409376
  40937d:	push   edi
  40937e:	gs jmp 0x936245f5
  409384:	ret    0x819b
  409387:	inc    edx
  409388:	or     BYTE PTR [ecx-0x9a68c51],ch
  40938e:	sbb    eax,0xed4b4eba
  409393:	ror    cl,cl
  409395:	jp     0x4093d9
  409397:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409398:	push   cs
  409399:	push   ecx
  40939a:	imul   DWORD PTR ds:0x97c6f871
  4093a0:	lods   al,BYTE PTR ds:[esi]
  4093a1:	in     al,dx
  4093a2:	rcl    DWORD PTR [edx+0x79c2e52a],1
  4093a8:	inc    ebx
  4093a9:	(bad)  
  4093aa:	and    DWORD PTR [edx-0x1b],esi
  4093ad:	ret    
  4093ae:	inc    edx
  4093af:	fidiv  DWORD PTR [eax+0x44]
  4093b2:	lock pop DWORD PTR [ebp+0x60]
  4093b6:	xchg   esi,eax
  4093b7:	mov    eax,ss:0xf507e9e6
  4093bd:	icebp  
  4093be:	mov    ecx,0x5aa42b5e
  4093c3:	ds jne 0x409411
  4093c6:	fwait
  4093c7:	in     eax,0x4c
  4093c9:	sub    eax,0x7f5882e9
  4093ce:	stos   DWORD PTR es:[edi],eax
  4093cf:	mov    dl,al
  4093d1:	pop    esp
  4093d2:	inc    ecx
  4093d3:	and    eax,0x7a6c8a62
  4093d8:	mov    DWORD PTR [ecx-0x2b9319c3],0x8352d50b
  4093e2:	adc    eax,0xa9ee7a17
  4093e7:	push   0xffffffe4
  4093e9:	xchg   ecx,eax
  4093ea:	mov    esp,0xd215dfe5
  4093ef:	pop    ecx
  4093f0:	stos   BYTE PTR es:[edi],al
  4093f1:	dec    ebp
  4093f2:	mov    bh,0x9b
  4093f4:	mov    al,ds:0x9f39d77c
  4093f9:	mov    esi,0x416c543d
  4093fe:	adc    eax,0x1c482a61
  409403:	pop    edx
  409404:	jb     0x40947d
  409406:	out    dx,eax
  409407:	js     0x409432
  409409:	in     eax,0xe7
  40940b:	in     eax,dx
  40940c:	sahf   
  40940d:	and    edi,eax
  40940f:	test   BYTE PTR [ecx+0x7224e87e],dh
  409415:	gs push ebx
  409417:	minps  xmm4,XMMWORD PTR [ebp-0x1c]
  40941b:	fstp   st(7)
  40941d:	jb     0x40947d
  40941f:	xor    al,0x89
  409421:	inc    edi
  409422:	and    DWORD PTR [edi-0x17a0ac59],ecx
  409428:	out    0xd,al
  40942a:	add    BYTE PTR [ebx+0x49],cl
  40942d:	aam    0xb
  40942f:	sub    ah,al
  409431:	les    esi,FWORD PTR [ecx]
  409433:	ret    0x830b
  409436:	rcl    DWORD PTR gs:[edx+0x449ab4f5],1
  40943d:	dec    BYTE PTR [ebp+0x6e]
  409440:	mov    ecx,0x9ac6282a
  409445:	sbb    al,0x33
  409447:	adc    BYTE PTR [ebx+0x34ac116d],cl
  40944d:	sub    eax,0x2dfd2aae
  409452:	scas   al,BYTE PTR es:[edi]
  409453:	adc    al,0x2f
  409455:	ss imul ebx,ebx,0x31e5dcc2
  40945c:	inc    eax
  40945d:	inc    edi
  40945e:	add    DWORD PTR [edx],ebx
  409460:	mov    al,0xfc
  409462:	mov    dh,0xb6
  409464:	xchg   edx,eax
  409465:	test   al,0x97
  409467:	push   ebx
  409468:	sbb    DWORD PTR [ecx-0x11c9d3ca],eax
  40946e:	or     al,0xd8
  409470:	mov    ecx,0x481519b8
  409475:	sbb    BYTE PTR [eax],dl
  409477:	jmp    0x4093fd
  409479:	mov    ebx,0x91271179
  40947e:	das    
  40947f:	dec    DWORD PTR [esi]
  409481:	clc    
  409482:	mov    bl,BYTE PTR [ebp+0x591ccc7d]
  409488:	(bad)  
  409489:	bound  edi,QWORD PTR [eax-0x24914823]
  40948f:	outs   dx,DWORD PTR ds:[esi]
  409490:	xor    dh,bl
  409492:	in     al,0x1d
  409494:	hlt    
  409495:	mov    ch,0x72
  409497:	aam    0xc6
  409499:	ds loopne 0x409507
  40949c:	ficom  DWORD PTR [esi+eiz*8]
  40949f:	dec    esp
  4094a0:	mov    BYTE PTR [eax-0xec1d878],0x51
  4094a7:	xor    edx,edi
  4094a9:	dec    esp
  4094aa:	mov    WORD PTR [edi],ss
  4094ac:	add    al,0x2c
  4094ae:	arpl   WORD PTR [ebp+0x63],ax
  4094b1:	fadd   st(4),st
  4094b3:	push   edx
  4094b4:	mov    ch,0xdf
  4094b6:	aas    
  4094b7:	or     esi,eax
  4094b9:	gs loop 0x409490
  4094bc:	jns    0x4094ca
  4094be:	pop    esp
  4094bf:	sbb    dl,BYTE PTR [edx+0x2faafcb9]
  4094c5:	mov    ebp,0x68db5bb7
  4094ca:	inc    ebx
  4094cb:	leave  
  4094cc:	scas   eax,DWORD PTR es:[edi]
  4094cd:	stc    
  4094ce:	call   0xfbd98125
  4094d3:	scas   eax,DWORD PTR es:[edi]
  4094d4:	fadd   QWORD PTR [eax]
  4094d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094d7:	lock dec edi
  4094d9:	and    BYTE PTR [edi+0x4eb59b32],0xa7
  4094e0:	mov    ah,0x57
  4094e2:	scas   al,BYTE PTR es:[edi]
  4094e3:	out    0x45,eax
  4094e5:	mov    cs,WORD PTR [ebx]
  4094e7:	and    al,0xd6
  4094e9:	mov    dl,0xad
  4094eb:	push   edi
  4094ec:	and    ecx,ebx
  4094ee:	mov    ah,0x55
  4094f0:	mov    eax,0x2f9899f9
  4094f5:	in     al,dx
  4094f6:	adc    cl,ch
  4094f8:	shr    bh,1
  4094fa:	pusha  
  4094fb:	lock push esp
  4094fd:	pop    ecx
  4094fe:	and    ch,BYTE PTR [esi-0x36313385]
  409504:	jne    0x409492
  409506:	jp     0x4094a4
  409508:	inc    ebx
  409509:	fabs   
  40950b:	(bad)  
  40950c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40950d:	stc    
  40950e:	adc    al,0x70
  409510:	push   ds
  409511:	mov    esp,DWORD PTR [ecx-0x23cd37d6]
  409517:	dec    esp
  409518:	rcl    BYTE PTR [edi+0xc528537],0x1b
  40951f:	rcr    DWORD PTR [eax+0x34],1
  409522:	xchg   edx,eax
  409523:	mov    edi,0x32d540a
  409528:	sbb    al,cl
  40952a:	xchg   esp,eax
  40952b:	jl     0x40951a
  40952d:	fdivr  QWORD PTR [ebp+0x7fb049cc]
  409533:	mov    BYTE PTR [eax],bh
  409535:	dec    ebx
  409536:	cmp    eax,0xe751306c
  40953b:	jp     0x40957b
  40953d:	add    eax,0x13bd5273
  409542:	lahf   
  409543:	inc    edx
  409544:	sub    DWORD PTR ds:0xf3cee715,esp
  40954a:	sbb    BYTE PTR ds:0x971116bf,ch
  409550:	out    dx,al
  409551:	pusha  
  409552:	jle    0x40958d
  409554:	sti    
  409555:	mov    esi,0x8c13efea
  40955a:	and    DWORD PTR [edi],esi
  40955c:	mov    ds:0xa5abcb91,eax
  409561:	je     0x4094f6
  409563:	inc    edi
  409564:	xlat   BYTE PTR ds:[ebx]
  409565:	xor    eax,DWORD PTR [ebx*4+0x49ef3d6c]
  40956c:	add    edx,esi
  40956e:	imul   esi,DWORD PTR [ebx+0x21339e6f],0x19
  409575:	(bad)  
  409576:	enter  0xdca0,0xc4
  40957a:	mov    esi,0x7fc42289
  40957f:	test   eax,0xe84bce26
  409584:	adc    eax,0xa5bd6963
  409589:	pop    ebp
  40958a:	xchg   ebx,eax
  40958b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40958c:	(bad)  
  40958d:	sbb    eax,0x7ec870be
  409592:	sbb    BYTE PTR [edi-0x5448b04e],dh
  409598:	retf   
  409599:	xchg   ebx,eax
  40959a:	sbb    al,0xed
  40959c:	adc    BYTE PTR [edi],ah
  40959e:	jae    0x40958c
  4095a0:	push   DWORD PTR [ebx-0x5aa2c865]
  4095a6:	mov    al,ds:0xcf35464
  4095ab:	inc    BYTE PTR [edi+esi*4+0x7a]
  4095af:	pop    ecx
  4095b0:	iret   
  4095b1:	pop    ss
  4095b2:	add    edx,DWORD PTR [eax-0x4b893e18]
  4095b8:	aaa    
  4095b9:	pop    edi
  4095ba:	loop   0x4095e3
  4095bc:	arpl   WORD PTR ds:0x6ada3b33,dx
  4095c2:	sub    bh,BYTE PTR [edx+0x5d06a1c3]
  4095c8:	xchg   edx,eax
  4095c9:	stos   DWORD PTR es:[edi],eax
  4095ca:	pop    esp
  4095cb:	shr    edx,cl
  4095cd:	les    eax,FWORD PTR [esi+0x2e1dbc37]
  4095d3:	stc    
  4095d4:	sbb    BYTE PTR [ebx+ebx*4+0x8bab55c],dh
  4095db:	pop    esi
  4095dc:	lock push cs
  4095de:	add    bl,0x31
  4095e1:	mov    ecx,0x3b5b298b
  4095e6:	add    cl,BYTE PTR [ebp+0x29]
  4095e9:	scas   eax,DWORD PTR es:[edi]
  4095ea:	add    eax,0x14f442e8
  4095ef:	test   eax,0x87e05d7a
  4095f4:	jp     0x409582
  4095f6:	mov    ch,0xfd
  4095f8:	arpl   sp,sp
  4095fa:	push   edi
  4095fb:	or     BYTE PTR [ecx],bl
  4095fd:	test   ah,0xf
  409600:	xchg   ecx,eax
  409601:	imul   esp,DWORD PTR [eax],0xffffffa9
  409604:	scas   al,BYTE PTR es:[edi]
  409605:	inc    eax
  409606:	mov    edx,0xa89245c7
  40960b:	icebp  
  40960c:	out    dx,eax
  40960d:	dec    DWORD PTR [edi]
  40960f:	mov    eax,ds:0xac137021
  409614:	rcl    esp,cl
  409616:	neg    BYTE PTR [edi+0x3b4b0976]
  40961c:	lods   eax,DWORD PTR ds:[esi]
  40961d:	pushf  
  40961e:	dec    esi
  40961f:	sub    al,0xa4
  409621:	sbb    dl,BYTE PTR [ebx+eax*8-0x5435d1db]
  409628:	inc    esi
  409629:	outs   dx,DWORD PTR ds:[esi]
  40962a:	(bad)  
  40962b:	adc    DWORD PTR [edx+ecx*4+0x7c4dd189],edi
  409632:	(bad)  
  409633:	std    
  409634:	ins    DWORD PTR es:[edi],dx
  409635:	nop
  409636:	mov    eax,fs
  409638:	call   0x85ce:0x920b667c
  40963f:	ds mov edi,0x9e809e46
  409645:	inc    ecx
  409646:	xchg   edx,eax
  409647:	inc    ebp
  409648:	aad    0x43
  40964a:	aad    0x52
  40964c:	jmp    DWORD PTR [ebp-0x7a8fbb4e]
  409652:	gs inc eax
  409654:	cmp    BYTE PTR [edx-0x2a071d5f],0x78
  40965b:	int    0xf6
  40965d:	push   ebx
  40965e:	loope  0x409659
  409660:	jecxz  0x4096db
  409662:	mov    esi,0xa052cf4e
  409667:	jecxz  0x4095f7
  409669:	mov    bh,0x58
  40966b:	out    0x9,eax
  40966d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40966e:	or     eax,0x6d9d5d63
  409673:	cmp    dh,BYTE PTR [eax+0x653f161]
  409679:	clc    
  40967a:	mov    dl,0xb9
  40967c:	mov    esi,0xc42c27e7
  409681:	lea    edi,[edx]
  409683:	fsub   DWORD PTR [edi-0x1d]
  409686:	iret   
  409687:	or     al,0xf8
  409689:	sbb    ecx,DWORD PTR [ecx]
  40968b:	cdq    
  40968c:	lods   eax,DWORD PTR ds:[esi]
  40968d:	daa    
  40968e:	xor    cl,BYTE PTR [edi-0x57]
  409691:	enter  0xcf29,0x96
  409695:	sar    BYTE PTR ds:0xb4bac322,1
  40969b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40969c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40969d:	mov    edi,0x165fab9f
  4096a2:	outs   dx,DWORD PTR ds:[esi]
  4096a3:	pop    eax
  4096a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096a6:	mov    eax,ds:0x5dab5413
  4096ab:	cli    
  4096ac:	inc    esp
  4096ad:	call   0x4277:0xd0f9f773
  4096b4:	fnstsw WORD PTR [ecx+0xe]
  4096b7:	mov    BYTE PTR [edx-0x56],bh
  4096ba:	jmp    0xe7ee:0xfe5f5aed
  4096c1:	cmp    ch,BYTE PTR [ebp+edx*2-0x6fafbc80]
  4096c8:	xor    edi,DWORD PTR [ebp+0x67ad37cd]
  4096ce:	mov    ebx,0xb4cfc146
  4096d3:	adc    esi,DWORD PTR [esi-0x46]
  4096d6:	imul   esi,DWORD PTR [esi],0x32
  4096d9:	retf   
  4096da:	call   0x632d654b
  4096df:	sbb    edi,DWORD PTR [ebx+0x7e]
  4096e2:	pop    ds
  4096e3:	ss cmc 
  4096e5:	jg     0x409736
  4096e7:	(bad)  
  4096e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096e9:	repnz call 0xc007:0x395ba08f
  4096f1:	jnp    0x409690
  4096f3:	test   DWORD PTR [ecx-0x36966c61],ecx
  4096f9:	jmp    0xf5f9:0x5d0af519
  409700:	dec    ebp
  409701:	loope  0x409761
  409703:	mov    dh,0xe4
  409705:	ret    
  409706:	inc    esp
  409707:	adc    cl,0x27
  40970a:	test   BYTE PTR [edi-0x74],0xb2
  40970e:	dec    ecx
  40970f:	cld    
  409710:	fcom   DWORD PTR [ebp+0xe97a92c]
  409716:	test   al,0xc2
  409718:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409719:	cmp    eax,0x57f330ce
  40971e:	pop    edx
  40971f:	je     0x409787
  409721:	std    
  409722:	lds    esp,FWORD PTR [eax*1+0x510aacac]
  409729:	pop    eax
  40972a:	mov    ebx,0x88594afa
  40972f:	jno    0x4096c0
  409731:	aaa    
  409732:	mov    DWORD PTR [ebp+0x43fecf8b],edi
  409738:	adc    al,BYTE PTR [ebx-0x77430eb6]
  40973e:	dec    eax
  40973f:	xchg   ebp,eax
  409740:	and    edi,DWORD PTR [ecx+0x57]
  409743:	retf   
  409744:	gs sbb ebp,edx
  409747:	push   ss
  409748:	mov    ebp,db6
  40974b:	fist   WORD PTR [esi]
  40974d:	(bad)  
  40974e:	adc    cl,BYTE PTR [esi]
  409750:	das    
  409751:	fwait
  409752:	aam    0xc1
  409754:	or     al,0x64
  409756:	out    dx,eax
  409757:	adc    DWORD PTR [edx+edx*8-0x1262abbf],esi
  40975e:	adc    BYTE PTR [eax-0x49],bl
  409761:	(bad)  
  409762:	pop    ss
  409763:	aaa    
  409764:	sbb    DWORD PTR cs:[ecx],eax
  409767:	mov    cl,0x1f
  409769:	data16 dec dh
  40976c:	add    cl,bh
  40976e:	pop    ecx
  40976f:	cwde   
  409770:	jg     0x4097c1
  409772:	pop    es
  409773:	push   eax
  409774:	add    ebx,DWORD PTR [ecx+0x7b]
  409777:	push   esi
  409778:	fmul   DWORD PTR ds:0xcbb56ad
  40977e:	loop   0x4097e0
  409780:	dec    edi
  409781:	rol    DWORD PTR [ebp+0x4c],0x53
  409785:	dec    esi
  409786:	push   DWORD PTR [edx+ebp*4]
  409789:	hlt    
  40978a:	out    0x68,al
  40978c:	inc    edi
  40978d:	dec    ecx
  40978e:	aam    0x29
  409790:	add    al,0x3c
  409792:	or     al,0x5a
  409794:	add    BYTE PTR [ebx],al
  409796:	je     0x409791
  409798:	dec    DWORD PTR [edx-0x617cc950]
  40979e:	rcr    DWORD PTR [eax-0x54],cl
  4097a1:	je     0x40978c
  4097a3:	inc    ebp
  4097a4:	outs   dx,BYTE PTR ds:[esi]
  4097a5:	sub    eax,0xe71843a6
  4097aa:	in     al,dx
  4097ab:	aam    0xfe
  4097ad:	adc    BYTE PTR [edx],dh
  4097af:	repnz and BYTE PTR [ecx+0x22c98e75],bh
  4097b6:	push   ss
  4097b7:	mov    BYTE PTR [edx+0xc9aecf],dh
  4097bd:	pop    esi
  4097be:	dec    esp
  4097bf:	in     al,0xe0
  4097c1:	cli    
  4097c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097c3:	(bad)  
  4097c4:	les    ecx,FWORD PTR [esi+0x70]
  4097c7:	adc    DWORD PTR ss:[edi+0x6196be65],eax
  4097ce:	(bad)  
  4097cf:	call   DWORD PTR [ebp+0x4d29e84d]
  4097d5:	jnp    0x40981b
  4097d7:	add    eax,0x66d0c78d
  4097dc:	rol    DWORD PTR ds:0xe2a54b4a,cl
  4097e2:	xchg   ebp,eax
  4097e3:	fs pop ebp
  4097e5:	test   BYTE PTR [ebx+0x75],bh
  4097e8:	jmp    0x2c8d479c
  4097ed:	shl    DWORD PTR [edi],1
  4097ef:	xchg   esp,eax
  4097f0:	xor    esi,esp
  4097f2:	clc    
  4097f3:	clc    
  4097f4:	cmc    
  4097f5:	cwde   
  4097f6:	rcl    esp,0xe4
  4097f9:	out    dx,al
  4097fa:	icebp  
  4097fb:	push   ecx
  4097fc:	in     eax,0x41
  4097fe:	pop    edx
  4097ff:	xor    al,0xb
  409801:	add    al,bl
  409803:	lods   al,BYTE PTR ds:[esi]
  409804:	sub    eax,0x172b9ef9
  409809:	loope  0x409816
  40980b:	xor    esi,DWORD PTR [ecx]
  40980d:	sbb    eax,0x806a86ee
  409812:	mul    eax
  409814:	lock jbe 0x409888
  409817:	jle    0x40979a
  409819:	inc    edx
  40981a:	xor    ebx,edi
  40981c:	mov    ?,WORD PTR [ebx]
  40981e:	sbb    eax,0xf8b450e7
  409823:	iret   
  409824:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409825:	hlt    
  409826:	xchg   esp,eax
  409827:	mov    al,ds:0x3ac8ff1b
  40982c:	nop
  40982d:	adc    ebx,edi
  40982f:	in     eax,0x3
  409831:	mov    DWORD PTR [edx],ebp
  409833:	jno    0x40986a
  409835:	pop    eax
  409836:	sub    al,0xe1
  409838:	mov    ch,0xa6
  40983a:	test   al,0x63
  40983c:	jns    0x409806
  40983e:	std    
  40983f:	push   0xb2db7f5f
  409844:	or     al,0x7f
  409846:	mov    ch,0x68
  409848:	push   ebp
  409849:	sub    esi,DWORD PTR [ebx]
  40984b:	cs out dx,eax
  40984d:	jne    0x4097d6
  40984f:	popf   
  409850:	push   esi
  409851:	add    esi,DWORD PTR [esi]
  409853:	test   eax,0x4823db77
  409858:	popf   
  409859:	pusha  
  40985a:	js     0x409802
  40985c:	ret    0x1048
  40985f:	mov    WORD PTR ss:[ecx],ss
  409862:	xchg   esi,eax
  409863:	or     ebp,DWORD PTR [edi+0x45cf1320]
  409869:	aad    0xf5
  40986b:	mov    dh,0xf3
  40986d:	and    eax,0x141eae5b
  409872:	sbb    DWORD PTR [ecx+0x20a94674],esp
  409878:	mov    DWORD PTR [ecx+ecx*1+0xa1d514a],esp
  40987f:	adc    BYTE PTR [ecx],ch
  409881:	(bad)  
  409883:	push   esi
  409884:	shl    DWORD PTR [ecx+0x5d5f0540],cl
  40988a:	lock jo 0x40984b
  40988d:	pop    ss
  40988e:	add    eax,0x375adb02
  409893:	push   cs
  409894:	and    al,0xd0
  409896:	scas   al,BYTE PTR es:[edi]
  409897:	inc    edx
  409898:	popa   
  409899:	mov    cl,0xb9
  40989b:	gs push esi
  40989d:	ja     0x409907
  40989f:	xor    DWORD PTR ds:0x7016fb17,0x1d
  4098a6:	cmp    DWORD PTR [edx+0xf12935a],0xfffffffd
  4098ad:	dec    ecx
  4098ae:	mov    eax,DWORD PTR [edi+0x305dc20d]
  4098b4:	dec    esi
  4098b5:	rcr    BYTE PTR [edx-0x6553236f],cl
  4098bb:	add    al,0xff
  4098bd:	mov    ecx,0x25726327
  4098c2:	icebp  
  4098c3:	sbb    DWORD PTR [ecx+esi*4],0x8adb211e
  4098ca:	mov    ds:0x275b334,eax
  4098cf:	add    DWORD PTR [ebp-0x16],edx
  4098d2:	xchg   esi,eax
  4098d3:	fidivr WORD PTR [eax-0x54c8cf2b]
  4098d9:	or     al,0x61
  4098db:	fcom   QWORD PTR ds:0x522eea00
  4098e2:	mov    eax,0xc82bea5b
  4098e7:	pop    eax
  4098e8:	add    ch,BYTE PTR [eax+edi*2+0x13]
  4098ec:	clc    
  4098ed:	lds    esp,FWORD PTR [edi+ebp*2-0x7b]
  4098f1:	loop   0x40988a
  4098f3:	rcl    BYTE PTR [esi],0x84
  4098f6:	pop    es
  4098f7:	inc    edi
  4098f8:	add    al,0x13
  4098fa:	mov    eax,ds:0x792c2ef
  4098ff:	or     al,0xd6
  409901:	jmp    0x323674c0
  409906:	in     eax,0xa0
  409908:	stos   DWORD PTR es:[edi],eax
  409909:	push   es
  40990a:	cmp    al,0x74
  40990c:	xor    al,0x65
  40990e:	cmp    DWORD PTR [ebx+0x42],ecx
  409911:	mov    ebp,0x85e0242
  409916:	daa    
  409917:	arpl   WORD PTR [ebx+0x60f94c4f],sp
  40991d:	add    al,0x4e
  40991f:	sub    DWORD PTR [ecx],ecx
  409921:	jg     0x409978
  409923:	xchg   DWORD PTR [esi+0x5d],ebx
  409926:	fadd   DWORD PTR [edi+ebx*2+0x5618d4e7]
  40992d:	inc    edi
  40992e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40992f:	add    al,BYTE PTR [edi-0x80]
  409932:	jno    0x409909
  409934:	or     eax,DWORD PTR [eax+0x24]
  409937:	mov    ebx,0xb194f818
  40993c:	iret   
  40993d:	addr16 loop 0x4099bc
  409940:	fbld   TBYTE PTR [esi]
  409942:	xchg   ecx,eax
  409943:	out    0xa3,eax
  409945:	xor    al,0x5d
  409947:	jle    0x409938
  409949:	out    dx,eax
  40994a:	lds    edx,FWORD PTR [esi]
  40994c:	or     dh,0x9d
  40994f:	and    al,ah
  409951:	or     DWORD PTR [ecx+ecx*1+0x18],0x13a8adab
  409959:	stos   DWORD PTR es:[edi],eax
  40995a:	pop    ebx
  40995b:	pop    eax
  40995c:	adc    al,0x44
  40995e:	xchg   DWORD PTR [ecx+eax*4],ecx
  409961:	fcomp  QWORD PTR [eax+eax*4]
  409964:	(bad)  
  409965:	and    al,0xfc
  409967:	sbb    DWORD PTR [edx],esi
  409969:	and    eax,DWORD PTR [ecx]
  40996b:	cmp    DWORD PTR [edi+0x759a0268],0x59c06f35
  409975:	inc    esi
  409976:	xchg   ecx,eax
  409977:	inc    edx
  409978:	stc    
  409979:	jb     0x409934
  40997b:	or     ebp,DWORD PTR [eax+0x51]
  40997e:	out    0xaf,al
  409980:	inc    edx
  409981:	add    al,0x10
  409983:	jne    0x40999c
  409985:	int    0xc
  409987:	xchg   ah,cl
  409989:	mov    edx,0x12ae3ea6
  40998e:	xchg   esi,eax
  40998f:	jbe    0x40995c
  409991:	ret    
  409992:	fsub   DWORD PTR [ecx+0x3d]
  409995:	cdq    
  409996:	dec    ecx
  409997:	inc    ebp
  409998:	pop    ebp
  409999:	sub    BYTE PTR [eax-0x4b],ch
  40999c:	add    bh,BYTE PTR [edx-0x40]
  40999f:	out    dx,eax
  4099a0:	stc    
  4099a1:	dec    ecx
  4099a2:	push   cs
  4099a3:	data16 js 0x4099b8
  4099a6:	mov    bh,0x78
  4099a8:	pop    ss
  4099a9:	cmp    al,0x86
  4099ab:	std    
  4099ac:	es and al,0x86
  4099af:	shl    BYTE PTR [eax],0x86
  4099b2:	and    BYTE PTR [edx-0x5f598ea2],0xec
  4099b9:	push   es
  4099ba:	jg     0x4099db
  4099bc:	jp     0x40999b
  4099be:	and    BYTE PTR [esi+eax*8+0x7c],bh
  4099c2:	daa    
  4099c3:	push   ecx
  4099c4:	mov    esi,0x51d6ee23
  4099c9:	es in  al,0x8e
  4099cc:	mov    edx,0x771003c7
  4099d1:	mov    DWORD PTR [ecx+0x21e2e2c2],esi
  4099d7:	sbb    esi,0xc5ae1ce1
  4099dd:	aam    0x4f
  4099df:	dec    eax
  4099e0:	addr16 aas 
  4099e2:	adc    DWORD PTR ds:0xf56b13a7,edi
  4099e8:	push   ds
  4099e9:	ins    DWORD PTR es:[edi],dx
  4099ea:	pop    ecx
  4099eb:	mov    ebx,0x4180d4e1
  4099f0:	les    edi,FWORD PTR [edi-0x12]
  4099f3:	pushf  
  4099f4:	pop    ds
  4099f5:	leave  
  4099f6:	fwait
  4099f7:	inc    esi
  4099f8:	test   eax,0xd2b05078
  4099fd:	lds    esp,FWORD PTR ds:0x7f1e8f84
  409a03:	xchg   esp,eax
  409a04:	and    BYTE PTR [esi-0x1d04f116],0x63
  409a0b:	pop    esi
  409a0c:	fiadd  DWORD PTR ds:0xd3fea937
  409a12:	or     al,0x13
  409a14:	stc    
  409a15:	push   ss
  409a16:	(bad)  
  409a18:	add    al,0xa5
  409a1a:	xchg   edx,eax
  409a1b:	into   
  409a1c:	jl     0x409a4f
  409a1e:	retf   
  409a1f:	push   0xa3448ab6
  409a24:	pop    edx
  409a25:	lea    eax,[eax+0x3015d942]
  409a2b:	xchg   ebx,eax
  409a2c:	xchg   ecx,eax
  409a2d:	mov    BYTE PTR [ecx+ebx*4-0x447759c2],dh
  409a34:	rcl    DWORD PTR [esi-0x409edf6e],0xa1
  409a3b:	pop    edi
  409a3d:	push   edx
  409a3e:	in     al,dx
  409a3f:	in     al,0x16
  409a41:	or     eax,0x199a254f
  409a46:	inc    ecx
  409a47:	jge    0x409a77
  409a49:	scas   eax,DWORD PTR es:[edi]
  409a4a:	pop    ss
  409a4b:	pusha  
  409a4c:	nop
  409a4d:	mov    bh,0x72
  409a4f:	cmp    BYTE PTR [ebp+ecx*4-0x3382ef43],al
  409a56:	jns    0x409a9f
  409a58:	inc    ecx
  409a59:	dec    sp
  409a5b:	std    
  409a5c:	dec    bp
  409a5e:	in     al,0xc9
  409a60:	mov    eax,ds:0xdbd74a7d
  409a65:	idiv   ch
  409a67:	sub    DWORD PTR [ebp-0x80],edx
  409a6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a6b:	imul   esi,DWORD PTR [esi],0xa3712f5b
  409a71:	mov    ebp,0x944ad8ec
  409a76:	push   0x15
  409a78:	inc    eax
  409a79:	pop    esp
  409a7a:	jbe    0x409a97
  409a7c:	xchg   ecx,eax
  409a7d:	pop    edx
  409a7e:	mov    bl,0xdb
  409a80:	xchg   ebp,eax
  409a81:	mov    cs,WORD PTR ds:0xaad7899f
  409a87:	gs add DWORD PTR ds:[esi-0xcece915],ebx
  409a8f:	inc    ebp
  409a90:	fmul   DWORD PTR [edi]
  409a92:	mov    ecx,0x578a0683
  409a97:	and    DWORD PTR [ebx],ebx
  409a99:	in     al,0xaa
  409a9b:	mov    es,WORD PTR [edi-0x11]
  409a9e:	pop    esp
  409a9f:	mov    dl,BYTE PTR ds:0x4857155b
  409aa5:	dec    esi
  409aa6:	fiadd  DWORD PTR [edx]
  409aa8:	jbe    0x409b25
  409aaa:	out    dx,al
  409aab:	adc    al,0x30
  409aad:	(bad)  
  409aae:	retf   0x98b1
  409ab1:	jle    0x409b09
  409ab3:	ja     0x409b2e
  409ab5:	shl    DWORD PTR [edx-0x20],1
  409ab8:	(bad)  
  409ab9:	jle    0x409b07
  409abb:	(bad)  
  409abc:	mov    ebx,0xfb7cf738
  409ac1:	aad    0x2b
  409ac3:	cmc    
  409ac4:	add    eax,0xf234615
  409ac9:	adc    ecx,DWORD PTR [edi+0x5f]
  409acc:	in     al,dx
  409acd:	call   0x687c0394
  409ad2:	inc    ebx
  409ad3:	in     eax,0xea
  409ad5:	xchg   BYTE PTR [ebp-0x63],ah
  409ad8:	gs push cs
  409ada:	nop
  409adb:	or     esp,DWORD PTR [esp+eax*2]
  409ade:	imul   esp,DWORD PTR [edi+eax*4],0xd3ebc1e1
  409ae5:	dec    eax
  409ae6:	inc    edx
  409ae7:	scas   eax,DWORD PTR es:[edi]
  409ae8:	or     ebp,esi
  409aea:	fild   QWORD PTR [ebp-0x16]
  409aed:	pop    ebp
  409aee:	pop    esp
  409aef:	adc    bl,bl
  409af1:	ins    DWORD PTR es:[edi],dx
  409af2:	jg     0x409a80
  409af4:	sub    ebx,DWORD PTR [edx-0x43]
  409af7:	mov    BYTE PTR [edx-0x80],dh
  409afa:	scas   eax,DWORD PTR es:[edi]
  409afb:	inc    ecx
  409afc:	test   dh,cl
  409afe:	(bad)  
  409aff:	mov    dh,0x55
  409b01:	and    al,0xef
  409b03:	rcr    DWORD PTR [ecx],0x0
  409b06:	ins    BYTE PTR es:[edi],dx
  409b07:	sbb    ebp,DWORD PTR [edi]
  409b09:	pusha  
  409b0a:	sub    al,BYTE PTR [ecx]
  409b0c:	push   ecx
  409b0d:	iret   
  409b0e:	scas   al,BYTE PTR es:[edi]
  409b0f:	xor    DWORD PTR [ecx+edi*2],ebx
  409b12:	aad    0x7e
  409b14:	test   eax,0x137e6fc4
  409b19:	std    
  409b1a:	mov    dl,0xe5
  409b1c:	das    
  409b1d:	into   
  409b1e:	(bad)  [eax+0x307be7b5]
  409b24:	sti    
  409b25:	leave  
  409b26:	loope  0x409b8b
  409b28:	pop    es
  409b29:	das    
  409b2a:	push   0xffffffa3
  409b2c:	inc    esp
  409b2d:	mov    dh,dh
  409b2f:	and    DWORD PTR [edx-0x61c8e719],edi
  409b35:	adc    eax,0xc205c09b
  409b3a:	mov    ah,0x23
  409b3c:	aam    0x95
  409b3e:	jle    0x409ae5
  409b40:	sub    al,0x6c
  409b42:	mov    ah,0x6e
  409b44:	mov    al,0x90
  409b46:	xor    DWORD PTR [ebp+0x26a295bc],0x5bdea9c7
  409b50:	adc    al,0x70
  409b53:	mov    DWORD PTR [esi+esi*8-0x7e47595f],esp
  409b5a:	cmp    bl,BYTE PTR [eax-0x2fee1595]
  409b60:	push   ss
  409b61:	push   esi
  409b62:	call   0x3f21:0xd91cb2f1
  409b69:	add    BYTE PTR [ebx+0x1b],dl
  409b6c:	fistp  WORD PTR [ecx+esi*8]
  409b6f:	mov    edx,0x60dd4e78
  409b74:	(bad)  
  409b76:	jecxz  0x409bb2
  409b78:	jbe    0x409bd8
  409b7a:	mov    cl,0x6
  409b7c:	mov    edx,0x44b98026
  409b81:	mov    cl,BYTE PTR [esi-0x26]
  409b84:	out    0xc4,al
  409b86:	jnp    0x409b15
  409b88:	fs retf 0x2b63
  409b8c:	adc    eax,0xa1d6657
  409b91:	ret    0x46e1
  409b94:	sub    BYTE PTR [ecx],dh
  409b96:	jge    0x409bab
  409b98:	cmp    DWORD PTR [eax],esi
  409b9a:	outs   dx,DWORD PTR ds:[esi]
  409b9b:	shr    BYTE PTR [ebp-0x4b],1
  409b9e:	dec    edi
  409b9f:	xchg   ebx,eax
  409ba0:	fstp   DWORD PTR [eax-0x70]
  409ba3:	mov    BYTE PTR ds:0xf4e3a2f0,ch
  409ba9:	stos   BYTE PTR es:[edi],al
  409baa:	(bad)
  409bae:	push   0xbb407cb7
  409bb3:	xchg   esi,eax
  409bb4:	loopne 0x409bf0
  409bb6:	mov    ds:0x2f0b19a3,eax
  409bbb:	push   0xfa39b6f3
  409bc0:	push   esi
  409bc1:	xchg   esi,eax
  409bc2:	inc    eax
  409bc3:	loope  0x409c2e
  409bc5:	mov    BYTE PTR [ecx-0x3],dh
  409bc8:	jle    0x409b8a
  409bca:	out    dx,eax
  409bcb:	cli    
  409bcc:	xchg   ebx,eax
  409bcd:	add    DWORD PTR [eax],eax
  409bcf:	call   0xb9f1:0xaf34137
  409bd6:	push   eax
  409bd7:	ins    BYTE PTR es:[edi],dx
  409bd8:	mov    cl,0xe0
  409bda:	(bad)  
  409bdb:	pop    eax
  409bdc:	setno  BYTE PTR [esi+0x5d27d23a]
  409be3:	mov    edx,0x18a1bdf8
  409be8:	fsub   DWORD PTR [esp+edi*8]
  409beb:	push   edx
  409bec:	addr16 mov ecx,0x82314e5d
  409bf2:	(bad)  
  409bf3:	pop    esi
  409bf4:	sbb    BYTE PTR [eax+0x3b],ah
  409bf7:	xor    al,0x13
  409bf9:	xchg   edi,eax
  409bfa:	out    0xf9,al
  409bfc:	div    dl
  409bfe:	and    eax,0x4625bb3f
  409c03:	jno    0x409bad
  409c05:	shl    ebx,0x49
  409c08:	xor    BYTE PTR [eax+0x18],bh
  409c0b:	daa    
  409c0c:	ja     0x409c44
  409c0e:	push   edx
  409c0f:	or     eax,0x81ac1eaa
  409c14:	loopne 0x409c64
  409c16:	shl    DWORD PTR [edx+0x7da55bee],cl
  409c1c:	and    DWORD PTR [ebp+0x23],ecx
  409c1f:	add    BYTE PTR [eax-0x5bf20d98],0x7c
  409c26:	sub    BYTE PTR [ebp+edx*1+0x40],al
  409c2a:	jae    0x409c23
  409c2c:	sub    DWORD PTR [ebp+0x72f44fef],edi
  409c32:	xor    cl,BYTE PTR [edi-0x7d1692df]
  409c38:	iret   
  409c39:	je     0x409caf
  409c3b:	jno    0x409caf
  409c3d:	push   edx
  409c3e:	xchg   dl,dh
  409c40:	push   ss
  409c41:	jne    0x409c14
  409c43:	sahf   
  409c44:	mov    cl,0x17
  409c46:	push   ebx
  409c47:	pop    ebx
  409c48:	data16 lods al,BYTE PTR ds:[esi]
  409c4a:	ret    
  409c4b:	mov    dh,0x66
  409c4d:	xor    cl,BYTE PTR [bp-0x3e]
  409c51:	jmp    0x98881661
  409c56:	out    dx,al
  409c57:	(bad)  [esi-0x7e]
  409c5a:	jmp    FWORD PTR [ebp+0x4c604da6]
  409c60:	inc    eax
  409c61:	retf   
  409c62:	jg     0x409c3d
  409c64:	add    BYTE PTR ds:0xa0655fb7,bh
  409c6a:	lahf   
  409c6b:	pop    ebp
  409c6c:	pusha  
  409c6d:	sbb    BYTE PTR [esi],0xee
  409c70:	pop    ebp
  409c71:	(bad)  
  409c72:	(bad)  
  409c73:	out    dx,eax
  409c74:	inc    esi
  409c75:	call   0x720cd9f0
  409c7a:	daa    
  409c7b:	mov    dh,BYTE PTR [ebx*1-0x3e6c477e]
  409c82:	pop    ds
  409c83:	sti    
  409c84:	sub    DWORD PTR [esi+0x3b],esi
  409c87:	(bad)  
  409c88:	mov    ecx,0x518b72ec
  409c8d:	dec    edi
  409c8e:	xor    eax,0x23e441bf
  409c93:	shl    ecx,cl
  409c95:	(bad)  
  409c96:	pop    eax
  409c97:	inc    esi
  409c98:	add    eax,0x49b9328a
  409c9d:	shl    DWORD PTR [edi+ebx*4],0xc0
  409ca1:	mov    esp,0x8cdb3cd7
  409ca6:	cmp    BYTE PTR [ecx+edx*1-0x1f],cl
  409caa:	add    BYTE PTR [edi+0x30c29117],bh
  409cb0:	jmp    0x409c44
  409cb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409cb3:	jl     0x409cb5
  409cb5:	xor    eax,0x41219430
  409cba:	clc    
  409cbb:	repz out 0x80,eax
  409cbe:	fisubr WORD PTR [edi]
  409cc0:	sbb    al,0xb2
  409cc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409cc3:	and    esi,DWORD PTR [eax+ebp*1]
  409cc6:	sub    BYTE PTR [edi],ch
  409cc8:	mov    eax,ds:0xd55fb574
  409cce:	jnp    0x409d0e
  409cd0:	sbb    al,0x0
  409cd2:	jb     0x409d27
  409cd4:	and    eax,0x56b0c183
  409cd9:	sub    eax,0x225ad2c1
  409cde:	push   0x2e868428
  409ce3:	mov    dl,0xde
  409ce5:	inc    edi
  409ce6:	neg    ecx
  409ce8:	in     al,0xe8
  409cea:	mov    DWORD PTR [edi-0x973b48b],esp
  409cf0:	and    al,0x39
  409cf2:	sbb    DWORD PTR [eax+ecx*1],edx
  409cf5:	push   0xffffffeb
  409cf7:	loope  0x409c91
  409cf9:	fnstenv [esi+edi*1]
  409cfc:	sbb    al,0x76
  409cfe:	cdq    
  409cff:	dec    esp
  409d00:	mov    edx,0x936aabef
  409d05:	mov    ds:0x64e72ad2,al
  409d0a:	ret    
  409d0b:	mov    WORD PTR [ebp-0x146f5d2f],es
  409d11:	fsub   st(6),st
  409d13:	into   
  409d14:	jle    0x409d60
  409d16:	inc    edi
  409d17:	mov    eax,0xac1dc784
  409d1c:	int    0x29
  409d1e:	shr    al,cl
  409d20:	mov    edi,DWORD PTR [ebx+ecx*4]
  409d23:	and    al,0xa4
  409d25:	adc    ecx,DWORD PTR ds:0x1367a4c0
  409d2b:	icebp  
  409d2c:	imul   ebx,ebp,0xffffffb0
  409d2f:	adc    BYTE PTR [ecx],cl
  409d31:	jecxz  0x409da3
  409d33:	retf   
  409d34:	loopne 0x409d53
  409d36:	outs   dx,DWORD PTR ds:[esi]
  409d37:	adc    ebx,DWORD PTR [ebp+eax*1-0xc]
  409d3b:	dec    edi
  409d3c:	push   esp
  409d3d:	add    bh,bh
  409d3f:	sub    esp,DWORD PTR gs:[ebp-0x54]
  409d43:	pop    edx
  409d44:	cwde   
  409d45:	cmp    esi,esi
  409d47:	icebp  
  409d48:	push   ds
  409d49:	mov    ds:0xfdf75ad5,al
  409d4e:	dec    ebp
  409d4f:	aas    
  409d50:	jae    0x409d07
  409d52:	mov    al,0x23
  409d54:	cmp    al,bl
  409d56:	dec    eax
  409d57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d58:	mov    ecx,0x731b5a6
  409d5d:	sub    eax,0x91549889
  409d62:	(bad)  
  409d63:	stc    
  409d64:	mov    esp,ecx
  409d66:	inc    ecx
  409d67:	dec    esi
  409d68:	into   
  409d69:	and    DWORD PTR [edi+0x26],ebx
  409d6c:	sub    ah,BYTE PTR [eax-0x6]
  409d6f:	mov    ebx,0xf6f111cf
  409d74:	pop    ss
  409d75:	aas    
  409d76:	lea    edi,[edi]
  409d78:	mov    bh,0xd2
  409d7a:	(bad)  
  409d7b:	sti    
  409d7c:	les    esi,FWORD PTR [edi]
  409d7e:	add    ebx,edx
  409d80:	cmp    bh,BYTE PTR [ebp+0x28d52e21]
  409d86:	pop    ebx
  409d87:	mov    al,ds:0xb3eac851
  409d8c:	or     ah,BYTE PTR [ebx-0x630fb967]
  409d92:	jb     0x409d75
  409d94:	and    edi,DWORD PTR [esi]
  409d96:	shrd   DWORD PTR [ebp-0x1f],eax,0xad
  409d9b:	pop    esp
  409d9c:	inc    edx
  409d9d:	jle    0x409e17
  409d9f:	sub    DWORD PTR [edx],eax
  409da1:	fsub   QWORD PTR [esi]
  409da3:	xor    eax,0xc8c79849
  409da8:	pop    ecx
  409da9:	std    
  409daa:	cmp    dl,bl
  409dac:	es cdq 
  409dae:	xlat   BYTE PTR ds:[ebx]
  409daf:	adc    ch,dh
  409db1:	xor    esi,DWORD PTR [edi+0x60]
  409db4:	sbb    BYTE PTR [eax+0x4a],dh
  409db7:	mov    BYTE PTR [eax],dh
  409db9:	fwait
  409dba:	jmp    0x409d58
  409dbc:	aaa    
  409dbd:	inc    bp
  409dbf:	jno    0x409dae
  409dc1:	xlat   BYTE PTR ds:[ebx]
  409dc2:	sub    DWORD PTR ss:[edi+eiz*8+0x480bdbb0],ebx
  409dca:	clc    
  409dcb:	jo     0x409d8f
  409dcd:	sbb    eax,0x356f9bfc
  409dd2:	mov    ds:0x836bb13c,al
  409dd7:	sub    DWORD PTR [ebp+0x249f70e4],esi
  409ddd:	leave  
  409dde:	jns    0x409d8d
  409de0:	inc    esi
  409de1:	mov    ds:0x22889acc,eax
  409de6:	adc    eax,0xeb4b519c
  409deb:	xlat   BYTE PTR ds:[ebx]
  409dec:	dec    esi
  409ded:	or     BYTE PTR [edx+0x53be53f8],0xf8
  409df4:	clc    
  409df5:	cmp    ecx,ecx
  409df7:	hlt    
  409df8:	push   esi
  409df9:	jo     0x409e50
  409dfb:	sbb    DWORD PTR [edx],esp
  409dfd:	aad    0xbf
  409dff:	jb     0x409dff
  409e01:	pop    ecx
  409e02:	sub    al,0xbd
  409e04:	enter  0x536e,0x79
  409e08:	not    DWORD PTR [ebx+0x57]
  409e0b:	push   ds
  409e0c:	adc    eax,0x4bb7a364
  409e11:	out    dx,al
  409e12:	int3   
  409e13:	in     eax,0x90
  409e15:	icebp  
  409e16:	cmp    DWORD PTR [ebp+0x5b],edx
  409e19:	xchg   edx,esp
  409e1b:	mov    esp,0x52b93d50
  409e20:	jo     0x409da4
  409e22:	xor    DWORD PTR [edx],esi
  409e24:	gs ds or al,0x93
  409e28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e29:	mov    ebp,0x48ad6ca2
  409e2e:	inc    edx
  409e2f:	sbb    BYTE PTR ds:0xf2fc4926,al
  409e35:	pop    eax
  409e36:	lahf   
  409e37:	nop
  409e38:	xchg   esp,eax
  409e39:	mov    bl,0x22
  409e3b:	mov    ecx,0x7fd642e3
  409e40:	jp     0x409e44
  409e42:	out    0xe,al
  409e44:	xchg   esi,ecx
  409e46:	lock call FWORD PTR es:[ecx+0x802721a]
  409e4e:	xchg   edx,eax
  409e4f:	iret   
  409e50:	stos   DWORD PTR es:[edi],eax
  409e51:	sbb    esp,DWORD PTR [edi-0x1570ed65]
  409e57:	fistp  WORD PTR [esi+0x13c31836]
  409e5d:	sbb    DWORD PTR [ecx],ebx
  409e5f:	cmp    eax,0x7d95b102
  409e64:	loopne 0x409e08
  409e66:	inc    esi
  409e67:	xchg   DWORD PTR [esi+0x3fb80ada],edx
  409e6d:	jmp    0x409e5a
  409e6f:	lea    ecx,[esi]
  409e71:	pop    ebx
  409e72:	push   cs
  409e73:	xchg   edx,eax
  409e74:	mov    ah,0xd3
  409e76:	push   ss
  409e77:	mov    bh,0x5c
  409e79:	(bad)  
  409e7b:	sbb    eax,0x17b5ffa0
  409e80:	xor    dl,dh
  409e82:	xor    al,0x3e
  409e84:	call   0x4f3d:0xae178c0f
  409e8b:	or     bl,BYTE PTR [ecx]
  409e8d:	shr    DWORD PTR [edx-0x26],0xb0
  409e91:	mov    ds:0xcb648f98,al
  409e96:	jns    0x409ed5
  409e98:	je     0x409f16
  409e9a:	xor    BYTE PTR [edx-0x5e],cl
  409e9d:	push   0x17
  409e9f:	jb     0x409e83
  409ea1:	push   ds
  409ea2:	test   eax,0x2c489c7b
  409ea7:	mov    ch,0xea
  409ea9:	out    dx,al
  409eaa:	scas   eax,DWORD PTR es:[edi]
  409eab:	jmp    0x7627e2fb
  409eb0:	scas   eax,DWORD PTR es:[edi]
  409eb1:	ds cmp al,BYTE PTR es:[eax-0x2b]
  409eb6:	xchg   BYTE PTR [ebx],bh
  409eb8:	xor    eax,0x2312fc11
  409ebd:	leave  
  409ebe:	pop    edx
  409ebf:	sbb    eax,0xdf568078
  409ec4:	lock pop esp
  409ec6:	adc    al,0x2
  409ec8:	add    eax,0xe8618d45
  409ecd:	in     al,0xa
  409ecf:	test   al,0xca
  409ed1:	adc    al,0xe8
  409ed3:	cmp    ch,0xc9
  409ed6:	test   al,0xcb
  409ed8:	jg     0x409f27
  409eda:	leave  
  409edb:	sbb    DWORD PTR [ecx-0x208a2d34],0x49
  409ee2:	xor    eax,0xc659b772
  409ee7:	into   
  409ee8:	fldenv fs:[edx-0x1a564251]
  409eef:	pop    ebx
  409ef0:	ret    0x6d83
  409ef3:	cmp    BYTE PTR [eax],dh
  409ef5:	retf   0x6f11
  409ef8:	aam    0x94
  409efa:	es ss sti 
  409efd:	push   esp
  409efe:	jns    0x409f35
  409f00:	popa   
  409f01:	rol    BYTE PTR [edx],0x76
  409f04:	ror    DWORD PTR [ebx],cl
  409f06:	mov    cs,WORD PTR [esi+0x6]
  409f09:	sti    
  409f0a:	jmp    0x903ce460
  409f0f:	stos   DWORD PTR es:[edi],eax
  409f10:	dec    esi
  409f11:	pop    ebx
  409f12:	scas   eax,DWORD PTR es:[edi]
  409f13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f14:	or     al,0x7c
  409f16:	mov    eax,ds:0x592591ed
  409f1b:	jns    0x409ed3
  409f1d:	scas   al,BYTE PTR es:[edi]
  409f1e:	outs   dx,BYTE PTR ds:[esi]
  409f1f:	and    BYTE PTR [edx],cl
  409f21:	rcl    DWORD PTR [edx+eax*2+0x7349156f],0x91
  409f29:	adc    al,BYTE PTR [esi]
  409f2b:	jns    0x409eb0
  409f2d:	cmp    ch,al
  409f2f:	stos   DWORD PTR es:[edi],eax
  409f30:	(bad)  
  409f31:	push   ss
  409f32:	jmp    0x60a3:0x718f0ffc
  409f39:	jl     0x409f22
  409f3b:	leave  
  409f3c:	cmc    
  409f3d:	aaa    
  409f3e:	cld    
  409f3f:	arpl   WORD PTR [ecx+0x4],sp
  409f42:	stos   BYTE PTR es:[edi],al
  409f43:	cmp    BYTE PTR [edi],0x3
  409f46:	pop    ss
  409f47:	jne    0x409edd
  409f49:	adc    eax,0x6ce8cfd8
  409f4e:	dec    edx
  409f4f:	fabs   
  409f51:	xor    eax,0xbbf9f3b5
  409f56:	adc    BYTE PTR [edx],0x2b
  409f59:	sbb    eax,0xa09a6362
  409f5e:	js     0x409f55
  409f60:	arpl   WORD PTR [eax],bx
  409f62:	out    dx,eax
  409f63:	out    0xb3,al
  409f65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f66:	xor    al,BYTE PTR [ebp-0x732561b6]
  409f6c:	dec    edx
  409f6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f6e:	je     0x409fe2
  409f70:	mov    ds:0xfdbe0948,al
  409f75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f76:	(bad)  
  409f78:	imul   edi,DWORD PTR [edi-0x76],0xbc6acc24
  409f7f:	xchg   BYTE PTR [ebx],bh
  409f81:	loope  0x409f86
  409f83:	push   ds
  409f84:	mov    al,0xe7
  409f86:	enter  0xf28e,0x1c
  409f8a:	imul   BYTE PTR [ebp+0x27ea1950]
  409f90:	sbb    DWORD PTR [ecx],0xffffffde
  409f93:	cmp    cl,ah
  409f95:	jnp    0x409fb4
  409f97:	inc    ebx
  409f98:	xor    DWORD PTR [edi-0x76f0cc31],esp
  409f9e:	mov    ah,0xc9
  409fa0:	push   0xffffff81
  409fa2:	shl    DWORD PTR [edx+0x3b],0x91
  409fa6:	dec    esp
  409fa7:	sahf   
  409fa8:	xchg   edi,eax
  409fa9:	xor    DWORD PTR [eax+0x1d28844c],esp
  409faf:	sbb    esi,DWORD PTR [edx+ecx*1+0x50]
  409fb3:	cmp    esp,DWORD PTR [ecx]
  409fb5:	xchg   DWORD PTR [edi],edx
  409fb7:	jle    0x409fd2
  409fb9:	test   BYTE PTR [edx-0x3fdc3aed],dh
  409fbf:	xchg   ebp,eax
  409fc0:	mov    ebx,0x3098afc
  409fc5:	mov    esp,0xc3a1efd8
  409fca:	sbb    BYTE PTR [ebx],bh
  409fcc:	sti    
  409fcd:	jns    0x40a002
  409fcf:	popa   
  409fd0:	add    DWORD PTR [edx],esi
  409fd2:	xchg   ebx,eax
  409fd3:	push   edx
  409fd4:	xchg   BYTE PTR [esi+esi*4-0x649d97b4],bh
  409fdb:	mov    DWORD PTR [eax],eax
  409fdd:	dec    ebp
  409fde:	jmp    ecx
  409fe0:	shl    DWORD PTR [eax-0x28],1
  409fe3:	jbe    0x40a05e
  409fe5:	inc    eax
  409fe6:	sbb    dl,BYTE PTR [esi-0x64]
  409fe9:	mov    edx,0x9ee280ee
  409fee:	mov    cl,0x80
  409ff0:	xor    ebp,edi
  409ff2:	test   DWORD PTR [eax-0x7c44e085],edx
  409ff8:	jb     0x409fe3
  409ffa:	xchg   ebx,eax
  409ffb:	imul   esi,DWORD PTR [ecx+0x17f3b245],0x49
  40a002:	cmp    al,0xe8
  40a004:	retf   0xace5
  40a007:	inc    ebp
  40a008:	int3   
  40a009:	test   DWORD PTR [esi],eax
  40a00b:	mov    esi,0x77bde3b6
  40a010:	jnp    0x409f9d
  40a012:	pavgb  mm3,QWORD PTR [edi]
  40a015:	outs   dx,DWORD PTR ds:[esi]
  40a016:	mov    esi,0xb6a9055a
  40a01b:	cs fcom st(5)
  40a01e:	rcl    DWORD PTR [edi],cl
  40a020:	pusha  
  40a021:	scas   al,BYTE PTR es:[edi]
  40a022:	mov    bl,BYTE PTR [esi-0x5d5c404c]
  40a028:	not    cl
  40a02a:	pop    ebx
  40a02b:	dec    edi
  40a02c:	in     al,dx
  40a02d:	fisubr WORD PTR [esi]
  40a02f:	or     ebx,DWORD PTR [ebx]
  40a031:	mov    ds:0xff18a9ac,eax
  40a036:	ret    0x6d1a
  40a039:	popf   
  40a03a:	scas   al,BYTE PTR es:[edi]
  40a03b:	ficomp WORD PTR [edi-0x2]
  40a03e:	jb     0x409ffc
  40a040:	add    BYTE PTR [eax],dl
  40a042:	jo     0x409fca
  40a044:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a045:	fdiv   st,st(2)
  40a047:	adc    DWORD PTR [edi+0x41],ecx
  40a04a:	in     al,dx
  40a04b:	pop    ds
  40a04c:	jne    0x40a03c
  40a04e:	out    0xb0,al
  40a050:	fwait
  40a051:	jmp    0x409fe9
  40a053:	ret    0xcc15
  40a056:	mov    ebp,0xc75cb949
  40a05b:	pushf  
  40a05c:	dec    esi
  40a05d:	jb     0x40a039
  40a05f:	js     0x40a0dc
  40a061:	mov    ds:0x5beaaf34,eax
  40a066:	mov    eax,ds:0x8ce5a519
  40a06b:	xchg   edi,eax
  40a06c:	mov    ch,0x94
  40a06e:	shl    bh,1
  40a070:	std    
  40a071:	lods   eax,DWORD PTR ds:[esi]
  40a072:	xor    dh,al
  40a074:	bound  ecx,QWORD PTR [ebx]
  40a076:	fisubr DWORD PTR [eax+0x13]
  40a079:	cmp    eax,0xcdebfa11
  40a07e:	sbb    ebp,edx
  40a080:	adc    bl,dl
  40a082:	mov    BYTE PTR [ecx+0x67],bh
  40a085:	push   es
  40a086:	cmc    
  40a087:	ss in  al,0x74
  40a08a:	dec    esp
  40a08b:	pop    ss
  40a08c:	mov    ecx,0x9a79d801
  40a091:	retf   0xe3a6
  40a094:	add    eax,esp
  40a096:	retf   0x3469
  40a099:	icebp  
  40a09a:	jp     0x40a029
  40a09c:	aad    0x46
  40a09e:	rcl    BYTE PTR [ebx],1
  40a0a0:	in     eax,dx
  40a0a1:	jo     0x8d7bcd9
  40a0a7:	dec    esp
  40a0a8:	lods   eax,DWORD PTR ds:[esi]
  40a0a9:	push   cs
  40a0aa:	lods   al,BYTE PTR ds:[esi]
  40a0ab:	inc    eax
  40a0ac:	adc    bl,BYTE PTR [ebp+0x788d835f]
  40a0b2:	pop    es
  40a0b3:	fst    QWORD PTR ds:0xc40818ab
  40a0b9:	sbb    DWORD PTR [ebp*2+0x4038d799],edx
  40a0c0:	and    DWORD PTR [ebx-0x17f278c0],esp
  40a0c6:	or     cl,al
  40a0c8:	scas   al,BYTE PTR es:[edi]
  40a0c9:	pop    edx
  40a0ca:	fwait
  40a0cb:	xor    al,0xa9
  40a0cd:	sub    cl,BYTE PTR [ebx+0x6b]
  40a0d0:	mov    edi,0xf97cee54
  40a0d5:	mov    ebp,0xbe56709f
  40a0da:	add    ch,dl
  40a0dc:	adc    dh,BYTE PTR [esi-0x6a]
  40a0df:	stos   WORD PTR es:[edi],ax
  40a0e1:	ficom  DWORD PTR ds:0x533ea501
  40a0e7:	lods   al,BYTE PTR ds:[esi]
  40a0e8:	lods   eax,DWORD PTR ds:[esi]
  40a0e9:	jmp    ebp
  40a0eb:	sahf   
  40a0ec:	mov    ch,0xa7
  40a0ee:	xchg   ebp,eax
  40a0ef:	bound  ebp,QWORD PTR [ebx]
  40a0f1:	push   edi
  40a0f2:	push   0xffffff83
  40a0f4:	ins    DWORD PTR es:[edi],dx
  40a0f5:	adc    ch,BYTE PTR [ebx+0x32]
  40a0f8:	sbb    DWORD PTR [ebx*2-0x6b710eb2],edx
  40a0ff:	pop    edx
  40a100:	pop    ss
  40a101:	mov    dl,BYTE PTR [edx+edi*4+0x7f]
  40a105:	inc    ebp
  40a106:	aaa    
  40a107:	or     eax,0x1c871eaa
  40a10c:	in     al,dx
  40a10d:	sbb    DWORD PTR [ebp-0x6c84c226],eax
  40a113:	sbb    dl,BYTE PTR [esi]
  40a115:	inc    ebx
  40a116:	mov    BYTE PTR [edx-0x4a],ah
  40a119:	sub    DWORD PTR [esi],esi
  40a11b:	push   ecx
  40a11c:	mov    bh,0x86
  40a11e:	sbb    eax,0xf5bcf82c
  40a123:	pop    esp
  40a124:	dec    edi
  40a125:	aas    
  40a126:	cmc    
  40a127:	test   ebx,ebx
  40a129:	pop    es
  40a12a:	jg     0x40a149
  40a12c:	addr16 pushf 
  40a12e:	xor    DWORD PTR [edx],ebp
  40a130:	push   0x3e
  40a132:	xchg   ebp,eax
  40a133:	int    0xb2
  40a135:	repnz xchg edx,eax
  40a137:	add    eax,0x411a4137
  40a13c:	test   al,0xc5
  40a13e:	cmp    BYTE PTR ds:0xd7b480f2,0xa7
  40a145:	mov    ecx,0xbd3c7076
  40a14a:	add    al,0x34
  40a14c:	imul   esp,DWORD PTR [edi+ebx*1],0xb25de9f
  40a153:	popa   
  40a154:	mov    ebx,ebx
  40a156:	sub    ecx,DWORD PTR [edi+0x55]
  40a159:	ss std 
  40a15b:	pusha  
  40a15c:	leave  
  40a15d:	or     al,0xb9
  40a15f:	pushf  
  40a160:	pop    esi
  40a161:	xor    dh,cl
  40a163:	idiv   DWORD PTR [edx]
  40a165:	sub    DWORD PTR [esi+0x3d],esi
  40a168:	sar    DWORD PTR [edx],0x50
  40a16b:	jmp    0x94c:0xc20a7474
  40a172:	xlat   BYTE PTR ds:[ebx]
  40a173:	push   ebx
  40a174:	mov    bl,ch
  40a176:	fimul  DWORD PTR [edi-0x7a]
  40a179:	sub    eax,0x44256d6e
  40a17e:	and    ch,BYTE PTR [ecx+esi*4+0x1]
  40a182:	fs sub dl,al
  40a185:	or     al,0xf6
  40a187:	push   edx
  40a188:	das    
  40a189:	pop    ss
  40a18a:	out    dx,al
  40a18b:	fwait
  40a18c:	sbb    ch,dh
  40a18e:	xchg   esp,eax
  40a18f:	push   ebx
  40a190:	mov    al,0xdb
  40a192:	int3   
  40a193:	jge    0x40a1e4
  40a195:	inc    esi
  40a196:	clc    
  40a197:	mov    ah,BYTE PTR [ebp+0x584aac63]
  40a19d:	lahf   
  40a19e:	sub    al,0xef
  40a1a0:	mov    DWORD PTR [ebx+0x1935cfb9],ebp
  40a1a6:	neg    ebx
  40a1a8:	call   edx
  40a1aa:	xor    al,BYTE PTR [esi+0x56]
  40a1ad:	and    dl,BYTE PTR [ecx]
  40a1af:	jbe    0x40a1fd
  40a1b1:	les    edx,FWORD PTR [edi-0x33b42836]
  40a1b7:	mov    eax,ds:0xa3aed2a7
  40a1bc:	daa    
  40a1bd:	mov    BYTE PTR [ebx+esi*4],al
  40a1c0:	push   es
  40a1c1:	les    ebx,FWORD PTR [eax+0xb4255ef]
  40a1c7:	dec    esi
  40a1c8:	push   ebp
  40a1c9:	xor    ebx,DWORD PTR [edx-0x4c1ee4cd]
  40a1cf:	inc    edx
  40a1d0:	fisub  WORD PTR [ebp-0x6f]
  40a1d3:	sahf   
  40a1d4:	stos   BYTE PTR es:[edi],al
  40a1d5:	add    DWORD PTR [edi+0x47],esi
  40a1d8:	pop    ebp
  40a1d9:	xchg   DWORD PTR [ebx+ecx*8+0x4d],eax
  40a1dd:	dec    esi
  40a1de:	adc    eax,0x13bbd396
  40a1e3:	inc    ecx
  40a1e4:	div    BYTE PTR [ebx+0x431c9202]
  40a1ea:	and    BYTE PTR [edi+eax*8+0x66],bh
  40a1ee:	test   al,0x69
  40a1f0:	stos   DWORD PTR es:[edi],eax
  40a1f1:	jnp    0x40a217
  40a1f3:	add    BYTE PTR [esi],al
  40a1f5:	xchg   ecx,eax
  40a1f6:	sbb    al,0x13
  40a1f8:	push   0xffffffb7
  40a1fa:	and    al,0xbf
  40a1fc:	push   0xfef57d8f
  40a201:	cs out dx,eax
  40a203:	push   esi
  40a204:	and    BYTE PTR [ebx-0x6c],bl
  40a207:	mov    ds,WORD PTR [ebx]
  40a209:	arpl   WORD PTR [edi-0x7480ccdb],sp
  40a20f:	pop    es
  40a210:	mov    ds:0xb721af38,eax
  40a215:	fsin   
  40a217:	or     DWORD PTR [edx-0x6a],eax
  40a21a:	mov    bl,0x2f
  40a21c:	les    esp,FWORD PTR [eax+edi*8+0x1942b116]
  40a223:	stos   BYTE PTR es:[edi],al
  40a224:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a225:	pop    ecx
  40a226:	xchg   edi,eax
  40a227:	into   
  40a228:	mov    esi,0x56bbcd35
  40a22d:	(bad)  
  40a22e:	cmc    
  40a22f:	(bad)  
  40a230:	dec    ebx
  40a231:	ins    DWORD PTR es:[edi],dx
  40a232:	cld    
  40a233:	aad    0x77
  40a235:	repz into 
  40a237:	popa   
  40a238:	xor    ah,al
  40a23a:	das    
  40a23b:	aas    
  40a23c:	aaa    
  40a23d:	lea    edi,[ecx-0x666f1090]
  40a243:	or     edx,DWORD PTR [esp+eax*2+0xb]
  40a247:	sbb    eax,DWORD PTR [ebp-0x5c]
  40a24a:	test   eax,0x929539aa
  40a24f:	shr    BYTE PTR [edx],0x8d
  40a252:	leave  
  40a253:	lods   eax,DWORD PTR ds:[esi]
  40a254:	ds xchg esp,eax
  40a256:	(bad)  
  40a258:	fwait
  40a259:	sub    ecx,ecx
  40a25b:	dec    ecx
  40a25c:	push   eax
  40a25d:	jno    0x40a25e
  40a25f:	sbb    esi,DWORD PTR ds:0x6ba49d1b
  40a265:	in     al,0x36
  40a267:	cli    
  40a268:	adc    ebp,edx
  40a26a:	std    
  40a26b:	xor    al,0x59
  40a26d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a26e:	jo     0x40a1fc
  40a270:	idiv   al
  40a272:	push   eax
  40a273:	and    BYTE PTR [edi],bh
  40a275:	mov    edi,0xaf289a3c
  40a27a:	jp     0x40a292
  40a27c:	(bad)  ss:[edx]
  40a27f:	cmp    DWORD PTR ds:0xc5b375f8,ebx
  40a285:	jge    0x40a249
  40a287:	cmovne edi,DWORD PTR [edi-0x63]
  40a28b:	fidivr WORD PTR [edi+0x7531309a]
  40a291:	aam    0x59
  40a293:	scas   al,BYTE PTR es:[edi]
  40a294:	mov    al,0x59
  40a296:	cmp    DWORD PTR [ebx+edx*4],ebp
  40a299:	pop    esi
  40a29a:	popa   
  40a29b:	jmp    0xaf231278
  40a2a0:	ja     0x40a302
  40a2a2:	sbb    edi,DWORD PTR [ebx-0x48]
  40a2a5:	ficomp WORD PTR [eax]
  40a2a7:	dec    eax
  40a2a8:	into   
  40a2a9:	xchg   DWORD PTR [ecx+eax*4-0x3b],ebx
  40a2ad:	(bad)  
  40a2ae:	jb     0x40a29f
  40a2b0:	or     eax,0xafe32b30
  40a2b5:	mov    ds:0x6a491144,al
  40a2ba:	gs in  al,dx
  40a2bc:	jbe    0x40a29f
  40a2be:	daa    
  40a2bf:	mov    bl,0x87
  40a2c1:	and    esp,0xa0afc1d
  40a2c7:	mov    ebx,0xa43e65f7
  40a2cc:	lea    ebx,[ebx+esi*2-0xb]
  40a2d0:	in     al,dx
  40a2d1:	repz sbb DWORD PTR [ebp-0x73d6d761],ecx
  40a2d8:	test   DWORD PTR [ebx-0x5],esi
  40a2db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2dc:	lahf   
  40a2dd:	jp     0x40a27b
  40a2df:	cmp    BYTE PTR [edx-0x7255af98],cl
  40a2e5:	inc    esi
  40a2e6:	out    0x60,eax
  40a2e8:	xor    dh,BYTE PTR [edi]
  40a2ea:	xchg   esp,eax
  40a2eb:	xchg   edx,eax
  40a2ec:	mov    ebp,0x1a4bd4c6
  40a2f1:	mul    BYTE PTR [ecx+eax*4]
  40a2f4:	pop    cx
  40a2f6:	popa   
  40a2f7:	ret    0x8a5d
  40a2fa:	add    BYTE PTR ds:0x56433085,0x9a
  40a301:	ins    BYTE PTR es:[edi],dx
  40a302:	std    
  40a303:	sbb    esp,DWORD PTR [ebx+0x41]
  40a306:	push   cs
  40a307:	test   DWORD PTR [ebx+0x4a],esp
  40a30a:	data16 js 0x40a2c8
  40a30d:	pop    ebx
  40a30e:	inc    DWORD PTR [edx]
  40a310:	(bad)  
  40a311:	ins    DWORD PTR es:[edi],dx
  40a312:	add    BYTE PTR [ecx+edx*4],dh
  40a315:	(bad)  
  40a316:	mov    esi,0x40fae0dc
  40a31b:	push   ds
  40a31c:	into   
  40a31d:	add    DWORD PTR [edx-0x5274b34c],ebx
  40a323:	xchg   ebx,eax
  40a324:	pop    eax
  40a325:	int    0x69
  40a327:	(bad)  
  40a328:	fbld   TBYTE PTR [esi+0x646d8431]
  40a32e:	rol    DWORD PTR [ebp-0x4777769a],cl
  40a334:	mov    al,ds:0xdb34738a
  40a339:	dec    ecx
  40a33a:	inc    ecx
  40a33b:	mov    ds:0xa38a7d,eax
  40a340:	push   edx
  40a341:	ins    DWORD PTR es:[edi],dx
  40a342:	or     ebx,DWORD PTR [ebx+esi*8+0x45]
  40a346:	cmp    ebp,DWORD PTR [esi+0x28]
  40a349:	or     ch,bh
  40a34b:	enter  0x9c14,0x95
  40a34f:	ret    0x3154
  40a352:	xor    eax,0x3b5f2e13
  40a357:	pop    ecx
  40a358:	mov    eax,ds:0x2378ba05
  40a35d:	pop    ebp
  40a35e:	test   eax,0xcb921710
  40a363:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a365:	mul    DWORD PTR [edi-0x49d6f315]
  40a36b:	pop    edx
  40a36c:	in     al,0x71
  40a36e:	mov    ebx,0x70a455f8
  40a373:	sbb    BYTE PTR [eax],0xa
  40a376:	aad    0xb3
  40a378:	pop    esi
  40a379:	add    eax,0xe16cf6b7
  40a37e:	(bad)  [eax+0x3068bf6d]
  40a384:	enter  0x5749,0x12
  40a388:	push   es
  40a389:	test   bh,bl
  40a38b:	mov    ds:0x85bdba2e,al
  40a390:	repnz pop edi
  40a392:	repnz xchg edx,eax
  40a394:	imul   ebp,DWORD PTR [edi],0xffffffd6
  40a397:	fcomp  DWORD PTR [ebx-0x3b36c21f]
  40a39d:	dec    esp
  40a39e:	rcl    BYTE PTR [ebx],0xdf
  40a3a1:	push   ebx
  40a3a2:	fs popa 
  40a3a4:	sub    al,0xb7
  40a3a7:	(bad)  
  40a3a8:	cli    
  40a3a9:	test   eax,0x92874742
  40a3ae:	sub    al,0x77
  40a3b0:	and    bh,ch
  40a3b2:	xor    BYTE PTR [ecx+0x65],ch
  40a3b5:	xchg   bl,dh
  40a3b7:	lea    ecx,[esi]
  40a3b9:	rcr    BYTE PTR [edx-0x63d40529],1
  40a3bf:	inc    ebx
  40a3c0:	pushf  
  40a3c1:	push   ecx
  40a3c2:	leave  
  40a3c3:	and    dl,BYTE PTR [ebx+0x3287f410]
  40a3c9:	pop    edx
  40a3ca:	and    ebp,DWORD PTR [ebx+0x38dab805]
  40a3d0:	cmp    DWORD PTR [edi+0x5c],edi
  40a3d3:	loop   0x40a3b0
  40a3d5:	icebp  
  40a3d6:	shl    BYTE PTR [ebp+0x4d50d4b6],cl
  40a3dc:	xchg   esp,eax
  40a3dd:	pop    ecx
  40a3de:	data16 mov cl,0xa1
  40a3e1:	push   ss
  40a3e2:	je     0x40a395
  40a3e4:	mov    ebx,0x1d00468c
  40a3e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3ea:	cdq    
  40a3eb:	jnp    0x40a400
  40a3ed:	cdq    
  40a3ee:	inc    edi
  40a3ef:	sub    dh,BYTE PTR [eax]
  40a3f1:	xor    al,0x7d
  40a3f3:	aaa    
  40a3f4:	xchg   ecx,eax
  40a3f5:	test   al,0x64
  40a3f7:	mov    ebx,0x7131dad2
  40a3fc:	adc    eax,0xd87a5e05
  40a401:	mov    cl,0x81
  40a403:	sub    ch,bl
  40a405:	inc    edx
  40a406:	call   0x643d:0x4cb4edfe
  40a40d:	push   ecx
  40a40e:	ins    BYTE PTR es:[edi],dx
  40a40f:	(bad)  [ebx]
  40a411:	frstor [ebp+0x33c0fae3]
  40a417:	call   0xbf7e:0x7d6904
  40a41e:	cld    
  40a41f:	dec    ebp
  40a421:	into   
  40a422:	mov    edi,0x52acaace
  40a427:	(bad)  
  40a428:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a42a:	je     0x40a463
  40a42c:	or     bl,BYTE PTR [eax-0x48]
  40a42f:	xchg   ebx,eax
  40a430:	mov    edx,DWORD PTR [ecx]
  40a432:	jnp    0x40a46f
  40a434:	(bad)  
  40a435:	fwait
  40a436:	ja     0x40a448
  40a438:	xor    ah,bl
  40a43a:	cmp    edx,DWORD PTR [ebx+0x18f464ef]
  40a440:	pop    eax
  40a441:	cdq    
  40a442:	and    DWORD PTR ds:0x8600c1b3,ebx
  40a448:	sbb    al,0xf5
  40a44a:	retf   
  40a44b:	(bad)  [ecx]
  40a44d:	lock adc edx,ebx
  40a450:	jmp    0xa768:0xfeac8ff2
  40a457:	mov    al,ds:0xbc7c4e6a
  40a45c:	mov    edi,?
  40a45e:	inc    ebx
  40a45f:	jns    0x40a47b
  40a461:	mov    ah,0x6a
  40a463:	enter  0x3e12,0x58
  40a467:	(bad)  
  40a469:	mov    ds:0x8719aee8,eax
  40a46e:	lea    ecx,[ebx]
  40a470:	cmp    BYTE PTR [edx],bl
  40a472:	daa    
  40a473:	push   ecx
  40a474:	cmp    esp,edi
  40a476:	mov    ah,0xfb
  40a478:	add    al,0x14
  40a47a:	push   0xda5ce9c1
  40a47f:	jb     0x40a4d2
  40a481:	or     eax,0xdba03a33
  40a486:	sbb    DWORD PTR ds:0x39342100,ebp
  40a48c:	xor    BYTE PTR ds:0xc18312ac,ah
  40a492:	test   eax,0xc5e56206
  40a497:	(bad)
  40a49a:	and    dh,dl
  40a49c:	jae    0x40a51d
  40a49e:	test   BYTE PTR [ecx+0x698a9112],0x17
  40a4a5:	push   esp
  40a4a6:	sbb    DWORD PTR [ecx+0x13],esp
  40a4a9:	icebp  
  40a4aa:	dec    ebp
  40a4ab:	test   esp,esi
  40a4ad:	clc    
  40a4ae:	xchg   ebx,eax
  40a4af:	mov    eax,0xf8d13d10
  40a4b4:	xlat   BYTE PTR ds:[ebx]
  40a4b5:	mov    al,ds:0x7813b3fa
  40a4ba:	xchg   ebp,eax
  40a4bb:	enter  0x36d4,0x8c
  40a4bf:	mov    esp,0xb3545993
  40a4c4:	mov    dl,BYTE PTR [ecx+0x3c]
  40a4c7:	ror    BYTE PTR [eax-0x63],cl
  40a4ca:	in     eax,dx
  40a4cb:	cld    
  40a4cc:	mov    ah,0x74
  40a4ce:	sar    BYTE PTR [ebp+0x76],1
  40a4d1:	add    ch,bh
  40a4d3:	lock and ah,BYTE PTR ds:0x7419c773
  40a4da:	adc    BYTE PTR [eax],bh
  40a4dc:	stos   BYTE PTR es:[edi],al
  40a4dd:	xor    eax,0xe7f30b0e
  40a4e2:	enter  0xa53c,0xb2
  40a4e6:	cmp    dh,al
  40a4e8:	pop    ebp
  40a4e9:	dec    ebp
  40a4ea:	sub    al,0x21
  40a4ec:	sub    al,0x87
  40a4ee:	loop   0x40a4c1
  40a4f0:	loope  0x40a4be
  40a4f2:	(bad)  
  40a4f3:	cwde   
  40a4f4:	pop    ebx
  40a4f5:	mov    cl,0x47
  40a4f7:	push   es
  40a4f8:	mov    ecx,0x9c62a92
  40a4fd:	les    esp,FWORD PTR [eax-0x6373c619]
  40a503:	add    DWORD PTR [esi-0xa6e2f08],esi
  40a509:	mov    dl,0x1f
  40a50b:	add    eax,0x4bb12d9d
  40a510:	pop    es
  40a511:	or     edx,DWORD PTR [ecx-0x62]
  40a514:	lds    ebp,FWORD PTR [esi]
  40a516:	sbb    bh,bl
  40a518:	xchg   esp,ebx
  40a51a:	xor    eax,0x6ef7683e
  40a51f:	push   esi
  40a520:	jbe    0x40a4ae
  40a522:	out    0x6a,al
  40a524:	xor    al,0x13
  40a526:	jmp    0x40a5a5
  40a528:	outs   dx,BYTE PTR ds:[esi]
  40a529:	push   cs
  40a52a:	stc    
  40a52b:	outs   dx,DWORD PTR ds:[esi]
  40a52c:	ss xchg ecx,eax
  40a52e:	mov    ch,BYTE PTR [ecx-0x12]
  40a531:	adc    DWORD PTR [ebp+0x6a91c81e],eax
  40a537:	adc    DWORD PTR [edx+0x7e06cc92],edx
  40a53d:	pop    ebx
  40a53e:	repz retf 0x4467
  40a542:	loope  0x40a54e
  40a544:	or     ch,bh
  40a546:	jp     0x40a594
  40a548:	ror    BYTE PTR [edx-0x66],0xf7
  40a54c:	lds    eax,FWORD PTR [edx]
  40a54e:	add    al,bh
  40a550:	mov    ?,WORD PTR [edi+eax*1]
  40a553:	inc    esp
  40a554:	(bad)  
  40a555:	and    eax,0x8c419bcb
  40a55a:	fsub   st,st(2)
  40a55c:	add    DWORD PTR [ecx+edi*8-0x40d08fdd],eax
  40a563:	rcr    edi,0x1a
  40a566:	and    esi,DWORD PTR [ebx-0x65]
  40a569:	mov    eax,ds:0x6efe6758
  40a56e:	les    edx,FWORD PTR [edi+edi*1-0x31]
  40a572:	iret   
  40a573:	push   ecx
  40a574:	fld    QWORD PTR es:[ecx-0x2430982b]
  40a57b:	push   es
  40a57c:	cmp    bh,bh
  40a57e:	cwde   
  40a57f:	in     eax,0x6e
  40a581:	mov    al,ds:0x710cf1aa
  40a586:	hlt    
  40a587:	into   
  40a588:	add    eax,0xb8f37ca3
  40a58d:	fimul  DWORD PTR [edx]
  40a58f:	jmp    0xc5252150
  40a594:	xchg   esp,eax
  40a595:	xchg   edx,eax
  40a596:	stc    
  40a597:	or     bh,BYTE PTR [esi]
  40a599:	push   cs
  40a59a:	not    BYTE PTR [edx+0x6a]
  40a59d:	add    dh,BYTE PTR [esi]
  40a59f:	(bad)  
  40a5a0:	xor    ebx,DWORD PTR [eax]
  40a5a2:	jg     0x40a58d
  40a5a4:	aam    0xd
  40a5a6:	mov    ds:0xa67dbe66,al
  40a5ab:	mov    esp,0x68c8d272
  40a5b0:	rol    BYTE PTR [eax+0x5c53e143],cl
  40a5b6:	xor    eax,0xa33a611
  40a5bb:	stos   DWORD PTR es:[edi],eax
  40a5bc:	ror    DWORD PTR [ebp+0x5c1ef405],1
  40a5c2:	hlt    
  40a5c3:	sub    bh,BYTE PTR ds:0x4791a931
  40a5c9:	mov    bh,BYTE PTR [ecx+ecx*2]
  40a5cc:	jbe    0x40a598
  40a5ce:	pop    es
  40a5cf:	outs   dx,BYTE PTR ds:[esi]
  40a5d0:	inc    ebp
  40a5d1:	daa    
  40a5d2:	xchg   edx,eax
  40a5d3:	add    dl,ah
  40a5d5:	aaa    
  40a5d6:	not    DWORD PTR [esi]
  40a5d8:	in     al,dx
  40a5d9:	or     dl,BYTE PTR [eax+0x14c0b828]
  40a5df:	jnp    0x40a5e5
  40a5e1:	cmp    eax,0x7ac3bb54
  40a5e6:	(bad)  
  40a5e7:	in     al,dx
  40a5e8:	pop    edx
  40a5e9:	pop    ebp
  40a5ea:	lods   al,BYTE PTR ds:[esi]
  40a5eb:	add    eax,0x1b36bb99
  40a5f0:	bound  esi,QWORD PTR [esi-0x49b9d0ea]
  40a5f6:	sub    DWORD PTR [edi+0x108df75e],0x8
  40a5fd:	and    al,0x19
  40a5ff:	std    
  40a600:	and    BYTE PTR [eax],dh
  40a602:	aad    0x15
  40a604:	mov    ecx,0x94dbc9d2
  40a609:	sbb    esi,edx
  40a60b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a60c:	inc    ecx
  40a60d:	cwde   
  40a60e:	mov    bl,BYTE PTR [ebp-0x33]
  40a611:	mov    eax,ds:0x4ca232ad
  40a616:	icebp  
  40a617:	or     BYTE PTR [ebx+0x468899ee],0xbe
  40a61e:	cmp    ch,dl
  40a620:	popf   
  40a621:	repz or ebx,DWORD PTR [edx]
  40a624:	xchg   DWORD PTR [ebp+0x7b],edi
  40a627:	and    BYTE PTR [ecx-0x39],dh
  40a62a:	addr16 cmc 
  40a62c:	inc    esp
  40a62d:	jo     0x40a685
  40a62f:	push   ss
  40a630:	pop    edi
  40a631:	add    ebx,edi
  40a633:	pop    ebx
  40a634:	jmp    0x410c:0x97c2827e
  40a63b:	add    BYTE PTR [ebx+0x77],dh
  40a63e:	pandn  mm2,QWORD PTR [ecx-0x43]
  40a642:	jecxz  0x40a6be
  40a644:	(bad)  
  40a645:	jae    0x40a5f3
  40a647:	test   DWORD PTR [edi-0x39c2b720],edx
  40a64d:	xchg   ebp,eax
  40a64e:	repz je 0x40a6a9
  40a651:	cmp    eax,0x11a7b253
  40a656:	jbe    0x40a66d
  40a658:	ret    0x5acb
  40a65b:	loope  0x40a6cd
  40a65d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a65e:	lds    esp,FWORD PTR [ecx]
  40a660:	xor    dl,al
  40a662:	or     eax,0xe582bde
  40a667:	int3   
  40a668:	div    DWORD PTR [edx+0x297ede3a]
  40a66e:	mov    ecx,0x301288f0
  40a673:	mov    fs,WORD PTR [ebp-0x4b7f7862]
  40a679:	add    edx,DWORD PTR [ebx]
  40a67b:	addr16 jle 0x40a63b
  40a67e:	stc    
  40a67f:	(bad)  
  40a680:	mov    edx,0xcecf3a79
  40a685:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a686:	push   0xbbd18b75
  40a68b:	and    al,0xf9
  40a68d:	mov    ebp,0x922b088e
  40a692:	adc    DWORD PTR [esi],edi
  40a694:	aad    0x5a
  40a696:	cmp    DWORD PTR [edx],ecx
  40a698:	call   0xf91cac42
  40a69d:	dec    esi
  40a69e:	mov    ds:0x1b2ea200,eax
  40a6a3:	sbb    BYTE PTR [esi],bl
  40a6a5:	sbb    edi,esi
  40a6a7:	add    ch,bh
  40a6a9:	retf   0x3ce7
  40a6ac:	sub    BYTE PTR [esi],al
  40a6ae:	push   ebp
  40a6af:	push   ebp
  40a6b0:	test   BYTE PTR es:[esi-0x1103688],bh
  40a6b7:	test   BYTE PTR [edx],dl
  40a6b9:	xor    BYTE PTR [ecx+0x41],dl
  40a6bc:	pop    esp
  40a6bd:	xor    esp,ebx
  40a6bf:	xor    eax,0x99439e5d
  40a6c4:	ret    0xf752
  40a6c7:	fs sbb al,0x80
  40a6ca:	je     0x40a6c9
  40a6cc:	dec    edx
  40a6cd:	pop    es
  40a6ce:	add    eax,0x7784f9e9
  40a6d3:	mov    al,BYTE PTR [edi+0x67eb8693]
  40a6d9:	mov    edi,0x463884dd
  40a6de:	retf   0x6630
  40a6e1:	js     0x40a67b
  40a6e3:	dec    esi
  40a6e4:	stos   DWORD PTR es:[edi],eax
  40a6e5:	cmp    BYTE PTR [ecx],0xd2
  40a6e8:	mov    bl,0x6b
  40a6ea:	pusha  
  40a6eb:	loope  0x40a672
  40a6ed:	mov    dh,0xeb
  40a6ef:	pop    eax
  40a6f0:	cmp    BYTE PTR [ebx+0x71],dh
  40a6f3:	adc    BYTE PTR [eax+0x154a21e1],bh
  40a6f9:	mov    ah,0x7c
  40a6fb:	call   0x764e:0x61778170
  40a702:	out    0x68,al
  40a704:	adc    al,0x5b
  40a706:	push   edx
  40a707:	movntps XMMWORD PTR [esi],xmm1
  40a70a:	(bad)  
  40a70b:	lock popf 
  40a70d:	mov    ds:0x95342f3b,eax
  40a712:	cmp    al,0x91
  40a714:	jmp    0x59b59406
  40a719:	out    dx,al
  40a71a:	jle    0x40a706
  40a71c:	xchg   ecx,eax
  40a71d:	fs hlt 
  40a71f:	test   DWORD PTR [edx+eax*8],esi
  40a722:	int3   
  40a723:	hlt    
  40a724:	ss xchg esi,eax
  40a726:	ficomp WORD PTR [esi]
  40a728:	mov    ss,esp
  40a72a:	jl     0x40a741
  40a72c:	es push ebx
  40a72e:	in     al,dx
  40a72f:	mov    ebx,0xc61c937f
  40a734:	jl     0x40a723
  40a736:	(bad)  
  40a737:	out    0x64,eax
  40a739:	adc    DWORD PTR [edi-0x76],eax
  40a73c:	(bad)  [ebp+0x49]
  40a73f:	jns    0x40a75a
  40a741:	nop
  40a742:	jle    0x40a72f
  40a744:	repnz shr BYTE PTR [edi],0xbe
  40a748:	or     BYTE PTR [ebx],dh
  40a74a:	xor    BYTE PTR [esi+0x70],dh
  40a74d:	out    dx,al
  40a74e:	fcom   QWORD PTR [eax-0x4b9d44c3]
  40a754:	xchg   edi,eax
  40a755:	stos   DWORD PTR es:[edi],eax
  40a756:	ret    0x2fe9
  40a759:	sbb    BYTE PTR [edx-0x692755f2],cl
  40a75f:	lahf   
  40a760:	adc    ebp,DWORD PTR [esi+0x202ba930]
  40a766:	or     DWORD PTR [edi-0xdd8e6e5],edx
  40a76c:	pop    edi
  40a76d:	dec    ecx
  40a76e:	call   0x277:0x5f381b6
  40a775:	in     eax,dx
  40a776:	sar    BYTE PTR [edx],0x74
  40a779:	ret    0x2e40
  40a77c:	neg    BYTE PTR [eax]
  40a77e:	dec    esp
  40a77f:	imul   edx,DWORD PTR [edx],0xffffffa4
  40a782:	lods   al,BYTE PTR ds:[esi]
  40a783:	jle    0x40a7dd
  40a785:	std    
  40a786:	jo     0x40a7e8
  40a788:	test   BYTE PTR [eax],bh
  40a78a:	or     DWORD PTR [ebp-0x24c58c5b],edx
  40a790:	sbb    esi,edx
  40a792:	int    0x88
  40a794:	pop    es
  40a795:	adc    BYTE PTR [eax-0x101099],dh
  40a79b:	ror    BYTE PTR [esp+ecx*8],0x4d
  40a79f:	mov    ecx,0x4a4b7cb5
  40a7a4:	jmp    0x4a00:0x67d58a9c
  40a7ab:	or     DWORD PTR [eax],0x79
  40a7ae:	inc    esi
  40a7af:	inc    esp
  40a7b0:	stos   BYTE PTR es:[edi],al
  40a7b1:	lahf   
  40a7b2:	imul   edi,DWORD PTR [ebx-0x34f624fd],0xffffffc7
  40a7b9:	je     0x40a745
  40a7bb:	xor    bl,BYTE PTR [edx-0x48]
  40a7be:	pop    esp
  40a7bf:	scas   eax,DWORD PTR es:[edi]
  40a7c0:	test   BYTE PTR [edi+0x7a6d850],dh
  40a7c6:	push   esi
  40a7c7:	enter  0x325,0x9a
  40a7cb:	imul   esp,DWORD PTR [ecx],0x5b
  40a7ce:	adc    al,0xf4
  40a7d0:	and    al,0x58
  40a7d2:	mov    eax,ds:0x616b28e
  40a7d7:	xor    DWORD PTR [edi-0x25],0x20
  40a7db:	ins    BYTE PTR es:[edi],dx
  40a7dc:	je     0x40a7bd
  40a7de:	add    eax,0xfc9df2e8
  40a7e3:	push   ss
  40a7e4:	in     eax,dx
  40a7e5:	mov    al,BYTE PTR [esi]
  40a7e7:	int    0x9a
  40a7e9:	(bad)  
  40a7ea:	xlat   BYTE PTR ds:[ebx]
  40a7eb:	stos   DWORD PTR es:[edi],eax
  40a7ec:	loope  0x40a7d9
  40a7ee:	pop    es
  40a7ef:	aas    
  40a7f0:	ret    
  40a7f1:	mov    dl,0xc8
  40a7f3:	imul   esi,DWORD PTR [ebx],0x21017e0e
  40a7f9:	clc    
  40a7fa:	push   esp
  40a7fb:	xchg   BYTE PTR [edx],dl
  40a7fd:	cmp    BYTE PTR [ecx],bh
  40a7ff:	in     eax,dx
  40a800:	jge    0x40a78c
  40a802:	xchg   edx,eax
  40a803:	les    esi,FWORD PTR [edi+0x15]
  40a806:	mov    bh,0x4d
  40a808:	inc    ebp
  40a809:	loope  0x40a857
  40a80b:	rol    BYTE PTR [ebx+ebx*8+0x41ae3f0f],0x6e
  40a813:	call   0x25c11255
  40a818:	mov    esi,0x577e5e51
  40a81d:	lods   al,BYTE PTR ds:[esi]
  40a81e:	adc    al,0x7c
  40a820:	xchg   esi,eax
  40a821:	sub    ebx,DWORD PTR ds:0x3d5d9d06
  40a827:	ja     0x40a849
  40a829:	loop   0x40a80d
  40a82b:	jl     0x40a823
  40a82d:	push   cs
  40a82e:	test   BYTE PTR [ecx-0x13a99213],0x75
  40a835:	jle    0x40a7e8
  40a837:	adc    DWORD PTR [eax+0x2d],ebp
  40a83a:	jns    0x40a8b9
  40a83c:	test   DWORD PTR [ebx+0x2465506e],ebp
  40a842:	std    
  40a843:	jmp    0x40a87e
  40a845:	dec    esp
  40a846:	inc    esp
  40a847:	xchg   edi,eax
  40a848:	mov    ds:0x7cf15a39,eax
  40a84d:	scas   eax,DWORD PTR es:[edi]
  40a84e:	mov    bh,0x94
  40a850:	mov    ch,0x85
  40a852:	pop    ss
  40a853:	and    dl,BYTE PTR [edx+ebp*8]
  40a856:	add    al,0xa3
  40a858:	call   0xe12bc8d8
  40a85d:	test   DWORD PTR [eax+0x2c],edx
  40a860:	fst    st(2)
  40a862:	cmc    
  40a863:	sub    BYTE PTR [edx+0x15bbbef9],bh
  40a869:	push   ecx
  40a86a:	enter  0x2360,0x70
  40a86e:	dec    eax
  40a86f:	fisttp WORD PTR [ecx-0x67]
  40a872:	xor    DWORD PTR [edi+0x49cd4020],esi
  40a878:	es (bad) 
  40a87a:	out    0x2,al
  40a87c:	js     0x40a824
  40a87e:	iret   
  40a87f:	daa    
  40a880:	sbb    al,0xbe
  40a882:	daa    
  40a883:	adc    al,0x8e
  40a885:	jecxz  0x40a81b
  40a887:	add    BYTE PTR [esi+0x11],ch
  40a88a:	into   
  40a88b:	xchg   esp,eax
  40a88c:	cli    
  40a88d:	mov    DWORD PTR [ebx],ecx
  40a88f:	jo     0x40a889
  40a891:	(bad)  
  40a892:	hlt    
  40a893:	bound  eax,QWORD PTR [edi+0x6818f175]
  40a899:	jmp    0x40a88c
  40a89b:	ja     0x40a829
  40a89d:	into   
  40a89e:	shr    DWORD PTR [ebx+ebx*4+0x34b75eaa],0xce
  40a8a6:	cwde   
  40a8a7:	jb     0x40a887
  40a8a9:	jle    0x40a920
  40a8ab:	jp     0x40a82d
  40a8ad:	rcl    BYTE PTR [esp+ebx*1-0x37db8f95],0xf2
  40a8b5:	js     0x7b994b68
  40a8bb:	or     eax,esp
  40a8bd:	retf   0xa42c
  40a8c0:	pop    eax
  40a8c1:	jo     0x40a85c
  40a8c3:	dec    edi
  40a8c4:	fisttp QWORD PTR ds:0x9165af2a
  40a8ca:	rcl    DWORD PTR [ebp+eax*8-0x7511ad22],cl
  40a8d1:	aam    0x2f
  40a8d3:	stos   DWORD PTR es:[edi],eax
  40a8d4:	mov    cl,0xbb
  40a8d6:	pusha  
  40a8d7:	lea    ecx,[ebx]
  40a8d9:	xor    ebp,DWORD PTR [eax-0xd]
  40a8dc:	mul    BYTE PTR [ebp-0x137eeed2]
  40a8e2:	cwde   
  40a8e3:	dec    edx
  40a8e4:	pop    edx
  40a8e5:	or     eax,0xfedd3e1
  40a8ea:	outs   dx,BYTE PTR ds:[esi]
  40a8eb:	push   ebp
  40a8ec:	fnstcw WORD PTR [eax]
  40a8ee:	test   al,0x37
  40a8f0:	(bad)
  40a8f5:	push   cs
  40a8f6:	dec    esp
  40a8f7:	inc    ebp
  40a8f8:	out    dx,eax
  40a8f9:	push   0xb
  40a8fb:	sbb    DWORD PTR [eax+0x7c],ebp
  40a8fe:	sub    esi,DWORD PTR [esi-0x2b320066]
  40a904:	lea    edx,[ecx]
  40a906:	xchg   edi,eax
  40a907:	mov    ebx,0xb353b532
  40a90c:	push   edi
  40a90d:	retf   
  40a90e:	xchg   esi,eax
  40a90f:	jl     0x40a949
  40a911:	push   0xd11d9730
  40a916:	or     al,0xf
  40a918:	jle    0x40a96a
  40a91a:	gs push ebp
  40a91c:	pop    es
  40a91d:	inc    esi
  40a91e:	lods   al,BYTE PTR ds:[esi]
  40a91f:	jnp    0x40a978
  40a921:	mov    eax,0x2a0bc176
  40a926:	push   0x13
  40a928:	cld    
  40a929:	xlat   BYTE PTR ds:[ebx]
  40a92a:	dec    eax
  40a92b:	mov    ebx,0x4f9331b7
  40a930:	out    0x97,eax
  40a932:	mov    ?,WORD PTR [edx+edx*8-0x53]
  40a936:	dec    edi
  40a937:	sub    al,0x63
  40a939:	ins    BYTE PTR es:[edi],dx
  40a93a:	bound  ecx,QWORD PTR [edi-0x2e8e1be2]
  40a940:	imul   cl
  40a942:	pop    esp
  40a943:	aaa    
  40a944:	test   BYTE PTR [edi-0x113d5722],al
  40a94a:	lods   al,BYTE PTR ds:[esi]
  40a94b:	sub    esp,DWORD PTR [esi+eiz*1]
  40a94e:	adc    bl,BYTE PTR [edi+0x7a73aa10]
  40a954:	pusha  
  40a955:	jl     0x40a998
  40a957:	xor    edi,DWORD PTR [edi-0x2d]
  40a95a:	lds    eax,FWORD PTR [ebx-0x557b7832]
  40a960:	cli    
  40a961:	lds    ecx,FWORD PTR [esi]
  40a963:	fsincos 
  40a965:	xchg   ecx,eax
  40a966:	push   esp
  40a967:	fdivr  QWORD PTR [eax-0x4914065c]
  40a96d:	(bad)
  40a973:	mov    WORD PTR [edi-0x11],fs
  40a976:	es inc esi
  40a978:	daa    
  40a979:	push   0xffffff88
  40a97b:	arpl   cx,bp
  40a97d:	or     BYTE PTR [ebp+0x4ee096a2],0xda
  40a984:	mov    bh,0x91
  40a986:	mov    ebx,0x381edef1
  40a98b:	js     0x40a9b2
  40a98d:	scas   al,BYTE PTR es:[edi]
  40a98e:	data16 clc 
  40a990:	xor    eax,0x3c500d9f
  40a995:	mov    DWORD PTR [esi],eax
  40a997:	call   0x360aa63b
  40a99c:	rcl    DWORD PTR [ebp+0x41d2a728],cl
  40a9a2:	pop    eax
  40a9a3:	push   ss
  40a9a4:	push   edx
  40a9a5:	sbb    al,0xa9
  40a9a7:	lahf   
  40a9a8:	daa    
  40a9a9:	ins    DWORD PTR es:[edi],dx
  40a9aa:	jno    0x40a9a3
  40a9ac:	popa   
  40a9ad:	retf   0x2c06
  40a9b0:	ja     0x40a93a
  40a9b2:	ins    BYTE PTR es:[edi],dx
  40a9b3:	test   al,0x5c
  40a9b5:	into   
  40a9b6:	pop    ebp
  40a9b7:	mov    dl,0x24
  40a9b9:	cmp    ecx,edi
  40a9bb:	inc    eax
  40a9bc:	rcr    BYTE PTR [esi],1
  40a9be:	mov    ds:0x717003b8,al
  40a9c3:	inc    ebx
  40a9c4:	push   0xad0097e7
  40a9c9:	data16 mov dh,0xfc
  40a9cc:	cli    
  40a9cd:	and    eax,0x925b771f
  40a9d2:	sub    al,0xb1
  40a9d4:	scas   al,BYTE PTR es:[edi]
  40a9d5:	add    ebx,DWORD PTR [ecx]
  40a9d7:	cmp    eax,0x5e69b01a
  40a9dc:	pop    edx
  40a9dd:	and    bh,BYTE PTR [esi+0x34]
  40a9e0:	cmp    al,0xc9
  40a9e2:	cwde   
  40a9e3:	pop    edi
  40a9e4:	push   eax
  40a9e5:	and    al,0xe
  40a9e7:	inc    esp
  40a9e8:	outs   dx,BYTE PTR ds:[esi]
  40a9e9:	and    eax,edx
  40a9eb:	fdivr  QWORD PTR [ecx+ebx*2]
  40a9ee:	not    edi
  40a9f0:	xchg   esi,eax
  40a9f1:	xchg   DWORD PTR [esp+ecx*2],esi
  40a9f4:	bound  ebx,QWORD PTR [eax-0x1b2b9f35]
  40a9fa:	repnz or BYTE PTR [esi],0x2
  40a9fe:	mov    edi,0x38121165
  40aa03:	cmp    BYTE PTR [edi+0x51],ah
  40aa06:	sub    dl,BYTE PTR [esi]
  40aa08:	gs push 0x7be2d445
  40aa0e:	ja     0x40a9dd
  40aa10:	adc    eax,0x843aba1b
  40aa15:	or     ebp,DWORD PTR [esi-0x4a]
  40aa18:	enter  0x909f,0x10
  40aa1c:	outs   dx,BYTE PTR ds:[esi]
  40aa1d:	imul   edx,DWORD PTR [eax],0xffffffe6
  40aa20:	adc    eax,0x39b42c5f
  40aa25:	ss (bad) 
  40aa28:	(bad)
  40aa2b:	mov    ecx,0xee216c17
  40aa30:	call   0xb417:0xa08743f4
  40aa37:	xchg   esi,eax
  40aa38:	ss int 0x8d
  40aa3b:	adc    BYTE PTR [ebp+eiz*8+0x6bcb2aa6],0x41
  40aa43:	stos   DWORD PTR es:[edi],eax
  40aa44:	fdivr  QWORD PTR [edx-0x50fc1f32]
  40aa4a:	jge    0x40aa77
  40aa4c:	cmp    bh,cl
  40aa4e:	popf   
  40aa4f:	cmp    eax,0xe888274e
  40aa54:	fs pop esi
  40aa56:	loopne 0x40aa17
  40aa58:	sub    dh,dh
  40aa5a:	sbb    DWORD PTR [esi+eax*8+0x5f3de571],0x46b27f47
  40aa65:	ror    BYTE PTR [esi+0x3caeafd8],cl
  40aa6b:	mov    edx,0x8e22c6d8
  40aa70:	rcl    BYTE PTR [ecx+eax*8-0x27],1
  40aa74:	push   cs
  40aa75:	jns    0x40aaea
  40aa77:	jmp    0xbf07:0x91aa1cbe
  40aa7e:	jns    0x40aa4c
  40aa80:	aas    
  40aa81:	mov    DWORD PTR [esp+edx*2-0x71695d0e],0x82794856
  40aa8c:	add    al,0x80
  40aa8e:	mov    bl,0x92
  40aa90:	fsubr  QWORD PTR [ebp-0x195e7c4c]
  40aa96:	mov    ss,WORD PTR [eax+edx*8-0xd0c9117]
  40aa9d:	mov    al,0x2d
  40aa9f:	or     bl,0x1e
  40aaa2:	sti    
  40aaa3:	in     eax,dx
  40aaa4:	aas    
  40aaa5:	pminsw mm4,mm5
  40aaa8:	(bad)  
  40aaaa:	loope  0x40aafd
  40aaac:	push   edx
  40aaad:	data16 mov ah,BYTE PTR [ebp+0x28]
  40aab1:	retf   
  40aab2:	jge    0x40ab08
  40aab4:	add    BYTE PTR [ecx],0x14
  40aab7:	or     DWORD PTR [esi-0xc70e02e],ecx
  40aabd:	cmp    DWORD PTR [edx],eax
  40aabf:	scas   eax,DWORD PTR es:[edi]
  40aac0:	mov    esp,0xc63a9e49
  40aac5:	psubd  mm5,QWORD PTR [edx+0x1c]
  40aac9:	shl    BYTE PTR [edx],cl
  40aacb:	push   esi
  40aacc:	cli    
  40aacd:	in     al,dx
  40aace:	rcl    BYTE PTR [ebx+esi*1],cl
  40aad1:	ins    BYTE PTR es:[edi],dx
  40aad2:	push   esp
  40aad3:	xor    al,dh
  40aad5:	dec    edx
  40aad6:	std    
  40aad7:	icebp  
  40aad8:	push   0x33
  40aada:	sbb    eax,0x3138164b
  40aadf:	add    bl,BYTE PTR [edi-0x58e9adf0]
  40aae5:	(bad)  
  40aae6:	jle    0x40ab3c
  40aae8:	xchg   DWORD PTR ds:0x4eaf744c,esi
  40aaee:	xchg   esp,eax
  40aaef:	cmp    al,cl
  40aaf1:	adc    eax,0x3c3b90d
  40aaf7:	sahf   
  40aaf8:	push   eax
  40aaf9:	and    eax,0xbcf9877c
  40aafe:	es mov bl,0xa2
  40ab01:	mov    bl,0x28
  40ab03:	das    
  40ab04:	out    dx,al
  40ab05:	dec    esi
  40ab06:	add    al,0xc9
  40ab08:	sub    eax,0x633fd3b1
  40ab0d:	push   esi
  40ab0e:	push   0x6
  40ab10:	cmc    
  40ab11:	gs out dx,eax
  40ab13:	xchg   ebp,eax
  40ab14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab15:	out    0x84,eax
  40ab17:	push   edi
  40ab18:	jmp    0x2212:0xa9eb0e03
  40ab1f:	retf   
  40ab20:	xor    BYTE PTR [edi-0xd],ch
  40ab23:	out    dx,eax
  40ab24:	scas   al,BYTE PTR es:[edi]
  40ab25:	pop    edi
  40ab26:	fucomi st,st(2)
  40ab28:	inc    esp
  40ab29:	imul   ebp,DWORD PTR ds:0x1ad4020b,0xe6b8e8b6
  40ab33:	sar    esi,cl
  40ab35:	pop    esp
  40ab36:	enter  0x5c1b,0x3d
  40ab3a:	xor    ch,BYTE PTR [esi-0x11]
  40ab3d:	enter  0x6b0,0xb0
  40ab41:	push   edi
  40ab42:	jnp    0x40ab8f
  40ab44:	aas    
  40ab45:	mov    bh,0x7
  40ab47:	xchg   ebx,eax
  40ab48:	ins    DWORD PTR es:[edi],dx
  40ab49:	pop    es
  40ab4a:	cs pop esi
  40ab4c:	rcr    DWORD PTR [esi-0x33f6e4da],0xa8
  40ab53:	cmp    eax,0x431b9f6b
  40ab58:	add    eax,0x9f7f5cd8
  40ab5d:	mov    esi,0x228b95fc
  40ab62:	mov    al,0xb8
  40ab64:	sub    BYTE PTR es:[eax-0x7c],al
  40ab68:	cmp    eax,0xa84c856d
  40ab6d:	or     DWORD PTR [ebp+esi*4+0x74],edx
  40ab71:	bound  edx,QWORD PTR [esi+0x3800b63a]
  40ab77:	mov    edi,0x56663c60
  40ab7c:	fs xchg edx,eax
  40ab7e:	scas   eax,DWORD PTR es:[edi]
  40ab7f:	or     al,0x83
  40ab81:	scas   eax,DWORD PTR es:[di]
  40ab83:	fmul   st,st(7)
  40ab86:	xchg   DWORD PTR [edi],ecx
  40ab88:	cmp    ebx,DWORD PTR [eax]
  40ab8a:	imul   esp,DWORD PTR [esi+0x580e0b48],0x68
  40ab91:	mov    edi,ds
  40ab93:	pop    es
  40ab94:	pop    ds
  40ab95:	mov    ebx,0x59bc9faf
  40ab9a:	xor    eax,0x344a5bd1
  40ab9f:	xchg   DWORD PTR [edx],esi
  40aba1:	call   0x67f0:0xbf4435f8
  40aba8:	jnp    0x40abd9
  40abaa:	push   esi
  40abab:	mov    esp,0xa526e996
  40abb0:	(bad)  
  40abb2:	sub    DWORD PTR [ecx+eiz*1+0x28],eax
  40abb6:	mov    esp,ebx
  40abb8:	cdq    
  40abb9:	push   ebp
  40abba:	mov    dh,0x9e
  40abbc:	js     0x40aba5
  40abbe:	std    
  40abbf:	test   BYTE PTR [ecx],cl
  40abc1:	xor    bh,BYTE PTR [ebx-0x10201e55]
  40abc7:	or     BYTE PTR [ecx-0x93f7f8],dl
  40abcd:	cmp    bh,bl
  40abcf:	fst    DWORD PTR [esi-0x66320b6e]
  40abd5:	inc    eax
  40abd6:	add    ah,bh
  40abd8:	push   esp
  40abd9:	repnz adc DWORD PTR [edx+esi*1-0x12],0x42f34a91
  40abe2:	mov    ch,0x5b
  40abe4:	stc    
  40abe5:	mov    eax,0xd0208592
  40abea:	adc    dl,BYTE PTR [eax-0x74]
  40abed:	popa   
  40abee:	mov    ebx,0x90792818
  40abf3:	mov    cl,0x4
  40abf5:	(bad)  
  40abf6:	or     bl,BYTE PTR [edi-0x7b]
  40abf9:	stos   DWORD PTR es:[edi],eax
  40abfa:	jne    0x40abdf
  40abfc:	pusha  
  40abfd:	enter  0xe133,0xdf
  40ac01:	sub    DWORD PTR [edi],edx
  40ac03:	int3   
  40ac04:	iret   
  40ac05:	push   0x79
  40ac07:	ret    0x429d
  40ac0a:	adc    BYTE PTR ds:0x10f77d8,ah
  40ac10:	jg     0x40abde
  40ac12:	dec    ecx
  40ac13:	int3   
  40ac14:	call   0xcf9d6ab0
  40ac19:	push   es
  40ac1a:	icebp  
  40ac1b:	out    dx,al
  40ac1c:	xchg   ebx,eax
  40ac1d:	mov    ecx,0x633000e5
  40ac22:	xchg   esi,eax
  40ac23:	rol    BYTE PTR [ebx],cl
  40ac25:	enter  0x5eee,0xa5
  40ac29:	popf   
  40ac2a:	pop    edi
  40ac2b:	mov    al,ds:0x7d27cdad
  40ac30:	mov    esp,0xa9299237
  40ac35:	mov    ebx,0x329a8ae2
  40ac3a:	cwde   
  40ac3b:	sub    eax,0xe33a5d32
  40ac40:	cmp    BYTE PTR [eax],0x54
  40ac43:	mov    BYTE PTR [ecx-0x287f6740],bh
  40ac49:	ror    dh,1
  40ac4b:	push   cs
  40ac4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac4d:	sub    eax,0xaa555a2e
  40ac52:	retf   
  40ac53:	div    DWORD PTR [esi+0x4aec293a]
  40ac59:	xchg   esi,eax
  40ac5a:	call   0xcf6ec136
  40ac5f:	jmp    0xf0b6:0x408d15a9
  40ac66:	adc    DWORD PTR [esi+0x27],ecx
  40ac69:	push   ebp
  40ac6a:	ja     0x40ac82
  40ac6c:	mov    edx,0x3fe74c45
  40ac71:	leave  
  40ac72:	int3   
  40ac73:	mov    ebx,0x41fee184
  40ac78:	xchg   edi,eax
  40ac79:	lods   al,BYTE PTR ds:[esi]
  40ac7a:	jge    0x40accd
  40ac7c:	add    al,0xcf
  40ac7e:	iret   
  40ac7f:	scas   al,BYTE PTR es:[edi]
  40ac80:	push   edi
  40ac81:	mov    eax,0x2d4b1662
  40ac86:	enter  0x64b2,0x7f
  40ac8a:	sar    ebx,0x8f
  40ac8d:	test   al,0x3f
  40ac8f:	mov    DWORD PTR ds:[ecx],ebp
  40ac92:	les    ebx,FWORD PTR [ebp-0x3d51b40b]
  40ac98:	xchg   ah,al
  40ac9a:	xchg   DWORD PTR [edx-0x2f],edx
  40ac9d:	out    0xe0,al
  40ac9f:	inc    ecx
  40aca0:	js     0x40acff
  40aca2:	sti    
  40aca3:	and    al,0x97
  40aca5:	cmp    DWORD PTR [ebx+0x6f],ebx
  40aca8:	lds    eax,FWORD PTR [edi]
  40acaa:	jge    0x40ac2d
  40acac:	call   0xaddd13a2
  40acb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acb3:	or     ebx,DWORD PTR [ebp+edx*2-0xce6bb03]
  40acba:	imul   eax,DWORD PTR [ebx],0x24411373
  40acc0:	sti    
  40acc1:	out    dx,eax
  40acc2:	dec    ebp
  40acc3:	pop    ecx
  40acc4:	xor    al,0xf4
  40acc6:	lea    edx,[ebx]
  40acc8:	cwde   
  40acc9:	stos   BYTE PTR es:[edi],al
  40acca:	ins    BYTE PTR es:[edi],dx
  40accb:	sub    bl,BYTE PTR [ebx-0x37]
  40acce:	int3   
  40accf:	pushf  
  40acd0:	lods   al,BYTE PTR ds:[esi]
  40acd1:	mov    dh,0xdf
  40acd3:	push   ds
  40acd4:	mov    bl,0x3d
  40acd6:	mov    ebp,0x665d0fe0
  40acdb:	add    DWORD PTR [esi-0x6ec10968],eax
  40ace1:	xor    eax,0xfc43028
  40ace6:	fild   QWORD PTR [eax-0x66cb047e]
  40acec:	(bad)  
  40acee:	xchg   ebp,eax
  40acef:	or     esi,DWORD PTR [ebx]
  40acf1:	loopne 0x40acd4
  40acf3:	xchg   esi,edx
  40acf5:	stc    
  40acf6:	sub    DWORD PTR [eax],0xffffffc5
  40acf9:	push   cs
  40acfa:	jl     0x40ad32
  40acfc:	sub    DWORD PTR [edx+0x15],edx
  40acff:	int    0xaa
  40ad01:	popfw  
  40ad03:	call   0xfd6d:0xa88e997d
  40ad0a:	pop    ss
  40ad0b:	sub    ebp,DWORD PTR [edx+0x46]
  40ad0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad0f:	sub    al,0xdf
  40ad11:	sbb    bl,dl
  40ad13:	jnp    0x40ace7
  40ad15:	fwait
  40ad16:	test   eax,0xa0cb8aa4
  40ad1b:	jge    0x40ad6e
  40ad1d:	test   BYTE PTR [ebp+eax*8-0x596ded18],ch
  40ad24:	add    al,0x13
  40ad26:	and    BYTE PTR [eax],bh
  40ad28:	pusha  
  40ad29:	adc    ebx,DWORD PTR [esi+0x40]
  40ad2c:	inc    eax
  40ad2d:	addr16 mov eax,0xfdb9c5b3
  40ad33:	rcr    cl,1
  40ad35:	cmp    eax,0x13a8be2a
  40ad3a:	cmp    edx,ecx
  40ad3c:	mov    ebx,0xd3e5e58c
  40ad41:	add    eax,0xff802809
  40ad46:	and    al,0xf4
  40ad48:	test   BYTE PTR [ecx-0x76],al
  40ad4b:	pop    ds
  40ad4c:	mov    ax,0xb567
  40ad50:	jbe    0x40ad9e
  40ad52:	aad    0x5a
  40ad54:	sbb    BYTE PTR [eax-0xc4ef476],ah
  40ad5a:	icebp  
  40ad5b:	pusha  
  40ad5c:	mov    BYTE PTR [ebp-0x7d463932],dl
  40ad62:	ret    
  40ad63:	pop    es
  40ad64:	inc    esp
  40ad65:	popfw  
  40ad67:	or     ebp,DWORD PTR [esi+0x6c]
  40ad6a:	pop    edi
  40ad6b:	and    cl,BYTE PTR [esi-0x4e]
  40ad6e:	retf   0xc845
  40ad71:	cmp    al,0xa9
  40ad73:	aad    0xd0
  40ad75:	mov    eax,0x226d7d3d
  40ad7a:	push   ebx
  40ad7b:	mov    ds:0x2651bcd3,eax
  40ad80:	lods   eax,DWORD PTR ds:[esi]
  40ad81:	xchg   BYTE PTR [eax+ebx*1-0x2b],ch
  40ad85:	jbe    0x40ad95
  40ad87:	or     bh,BYTE PTR [ebx+esi*4]
  40ad8a:	in     eax,0x42
  40ad8c:	pop    ebp
  40ad8d:	mov    ds,esp
  40ad8f:	stc    
  40ad90:	sahf   
  40ad91:	or     eax,0x4b3dc705
  40ad96:	inc    ecx
  40ad97:	pop    ecx
  40ad98:	mov    ds:0xb8ee9cd,al
  40ad9d:	jnp    0x40ade2
  40ad9f:	call   FWORD PTR [ecx+0x3ea2781e]
  40ada5:	aam    0xef
  40ada7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ada8:	dec    ebp
  40ada9:	mov    ?,WORD PTR [ebp+0x660423c0]
  40adaf:	sti    
  40adb0:	and    dl,BYTE PTR [ebp+0x47]
  40adb3:	adc    BYTE PTR [eax+0x4b],0xa2
  40adb7:	enter  0xa0cb,0x15
  40adbb:	push   ebx
  40adbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adbd:	inc    edi
  40adbe:	sub    BYTE PTR [ebx],ah
  40adc0:	jge    0x40ade6
  40adc2:	outs   dx,BYTE PTR ds:[esi]
  40adc3:	sti    
  40adc4:	test   BYTE PTR cs:[esi+0x5093e40b],al
  40adcb:	outs   dx,BYTE PTR ds:[esi]
  40adcc:	sbb    dl,BYTE PTR [ebp+0x3d]
  40adcf:	push   edx
  40add0:	add    al,BYTE PTR [eax+0xa722798]
  40add6:	out    0x3b,al
  40add8:	out    dx,eax
  40add9:	lock fdivr QWORD PTR [ebp-0x6d68d69b]
  40ade0:	cmp    al,0x1d
  40ade2:	sbb    ch,dh
  40ade4:	stc    
  40ade5:	mov    al,0x20
  40ade7:	fs jne 0x40adcd
  40adea:	test   al,0x32
  40adec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aded:	adc    eax,0x251c9fc1
  40adf2:	stos   DWORD PTR es:[edi],eax
  40adf3:	pop    ecx
  40adf4:	bnd jns 0x40ad84
  40adf7:	inc    ecx
  40adf8:	mov    ds:0x60610d45,al
  40adfd:	jo     0x40ae04
  40adff:	out    dx,eax
  40ae00:	cld    
  40ae01:	jl     0x40ae70
  40ae03:	rcr    dh,cl
  40ae05:	sub    ah,BYTE PTR [eax+0x5a]
  40ae08:	retf   0x985c
  40ae0b:	(bad)  
  40ae0c:	push   ebx
  40ae0d:	jmp    0x40adbe
  40ae0f:	or     al,0x84
  40ae11:	sub    al,0xf5
  40ae13:	loop   0x40ae20
  40ae15:	addr16 sbb al,0xc4
  40ae18:	cli    
  40ae19:	xchg   DWORD PTR [eax-0x173b352],edi
  40ae1f:	adc    DWORD PTR [edx-0x21a594a3],eax
  40ae25:	fs adc ebx,ecx
  40ae28:	cmc    
  40ae29:	test   al,0x7a
  40ae2b:	neg    bl
  40ae2d:	inc    edi
  40ae2e:	ins    DWORD PTR es:[edi],dx
  40ae2f:	or     eax,0x10c982e3
  40ae34:	call   0xc5b8:0xea1410c
  40ae3b:	test   DWORD PTR [ebp+0x17b742d0],eax
  40ae41:	popf   
  40ae42:	jg     0x40ae8c
  40ae44:	aam    0xcf
  40ae46:	mov    ebx,0xc9555a2f
  40ae4b:	mov    bl,0x93
  40ae4d:	lods   al,BYTE PTR ds:[esi]
  40ae4e:	mov    al,0xd3
  40ae50:	or     BYTE PTR [edx+0x480c2795],al
  40ae56:	dec    ebp
  40ae57:	test   ebp,0x93bbc34e
  40ae5d:	aad    0x27
  40ae5f:	fistp  DWORD PTR [ecx]
  40ae61:	ja     0x40aea2
  40ae63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae64:	jmp    0xd94:0x91861a90
  40ae6b:	mov    cl,0x49
  40ae6d:	sbb    bh,BYTE PTR [eax+0xc]
  40ae70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae71:	and    esi,ebx
  40ae73:	pushf  
  40ae74:	popa   
  40ae75:	hlt    
  40ae76:	mov    ch,0xce
  40ae78:	mov    DWORD PTR [edx+edi*1],esp
  40ae7b:	pop    ebp
  40ae7c:	add    bh,BYTE PTR ds:0xe5f97424
  40ae82:	retf   0x1873
  40ae85:	dec    ebp
  40ae86:	sub    al,0x33
  40ae88:	and    eax,DWORD PTR [ebx-0x42]
  40ae8b:	das    
  40ae8c:	iret   
  40ae8d:	lods   eax,DWORD PTR ds:[esi]
  40ae8e:	retf   0xaca2
  40ae91:	jge    0x40ae7a
  40ae93:	int    0x61
  40ae95:	adc    cl,cl
  40ae97:	and    bl,BYTE PTR ds:0xa76d1c36
  40ae9d:	push   ss
  40ae9e:	pop    edx
  40ae9f:	adc    al,BYTE PTR es:[edx+0x310d47b1]
  40aea6:	inc    esp
  40aea7:	addr16 dec ebx
  40aea9:	inc    eax
  40aeaa:	addr16 pop edx
  40aeac:	add    DWORD PTR [edx-0x72],edx
  40aeaf:	mov    dl,0x9a
  40aeb1:	dec    esp
  40aeb2:	push   0x4b
  40aeb4:	neg    al
  40aeb6:	outs   dx,DWORD PTR ds:[esi]
  40aeb7:	dec    ecx
  40aeb8:	rcl    BYTE PTR [eax+0x76dbc5e8],0x9c
  40aebf:	add    al,dl
  40aec1:	xor    al,0x74
  40aec3:	retf   0xd124
  40aec6:	ins    BYTE PTR es:[edi],dx
  40aec7:	jecxz  0x40aef0
  40aec9:	ret    0xef44
  40aecc:	xchg   DWORD PTR [edx],edx
  40aece:	sbb    DWORD PTR [eax+ecx*8],ecx
  40aed1:	fnstenv [edx]
  40aed3:	imul   edi,DWORD PTR [edi],0xea7b06a0
  40aed9:	mov    esp,0x5263bbc7
  40aede:	call   0x2c70f196
  40aee3:	mov    ah,0x3f
  40aee5:	test   eax,0x24770dbc
  40aeea:	icebp  
  40aeeb:	xor    BYTE PTR ds:0x575357df,bh
  40aef1:	jo     0x40ae73
  40aef3:	mov    al,ds:0x67677d38
  40aef8:	pusha  
  40aef9:	pop    ds
  40aefa:	fisubr DWORD PTR [edx]
  40aefc:	mov    ch,0xba
  40aefe:	push   ecx
  40aeff:	xchg   ebp,eax
  40af00:	out    dx,al
  40af01:	sub    ebp,edx
  40af03:	push   ecx
  40af04:	loopne 0x40af07
  40af06:	aad    0x2f
  40af08:	std    
  40af09:	sub    al,0x5c
  40af0b:	(bad)  
  40af0c:	jnp    0x40af38
  40af0e:	arpl   ax,bx
  40af10:	std    
  40af11:	pop    edx
  40af12:	jp     0x40aeee
  40af14:	mov    ah,0x59
  40af16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af17:	add    ecx,DWORD PTR [ebp-0x3c]
  40af1a:	in     al,0x1c
  40af1c:	cmp    dl,bl
  40af1e:	inc    ebp
  40af1f:	stc    
  40af20:	xor    esp,DWORD PTR [ecx+0x25d37fe5]
  40af26:	icebp  
  40af27:	push   ecx
  40af28:	mov    bl,0x44
  40af2a:	int    0xfe
  40af2c:	and    al,0x6b
  40af2e:	mov    DWORD PTR [ebp-0x43],ebp
  40af31:	jnp    0x40af73
  40af33:	(bad)  
  40af34:	loopne 0x40af0f
  40af36:	clc    
  40af37:	data16 mov ah,0xde
  40af3a:	rol    dh,0x9a
  40af3d:	and    BYTE PTR [esi-0xfe807fe],bh
  40af43:	jae    0x40afa3
  40af45:	scas   eax,DWORD PTR es:[edi]
  40af46:	sbb    ecx,DWORD PTR [ecx+esi*4-0x12b28945]
  40af4d:	mov    ch,BYTE PTR [edx]
  40af4f:	and    al,0xe
  40af51:	mov    bl,0x3d
  40af53:	push   0x3e0e5188
  40af58:	xor    eax,0xd00da8e8
  40af5d:	data16 ins BYTE PTR es:[edi],dx
  40af5f:	xchg   ebx,eax
  40af60:	mul    DWORD PTR ds:0xda32bf70
  40af66:	mov    al,0x29
  40af68:	push   eax
  40af69:	enter  0x9b03,0x98
  40af6d:	jl     0x40afcc
  40af6f:	jmp    0x40afa4
  40af71:	jo     0x40afa0
  40af73:	ins    DWORD PTR es:[edi],dx
  40af74:	in     al,0xae
  40af76:	push   esp
  40af77:	retf   
  40af78:	pop    eax
  40af79:	(bad)  
  40af7a:	in     eax,0xf0
  40af7c:	push   edi
  40af7d:	jle    0x40af90
  40af7f:	loop   0x40afd3
  40af81:	jb     0x40af30
  40af83:	cmp    eax,0x23688894
  40af88:	cmp    BYTE PTR [edx+0x49813478],al
  40af8e:	call   0xe6e0b30
  40af93:	fcomp  st(0)
  40af95:	mov    eax,0x67544972
  40af9a:	shl    BYTE PTR [ecx-0x5f],0x15
  40af9e:	stos   BYTE PTR es:[edi],al
  40af9f:	lea    esi,[ecx-0x47]
  40afa2:	nop
  40afa3:	mov    bl,0xad
  40afa5:	rcr    BYTE PTR [eax+0x3da660c2],0xeb
  40afac:	lock jne 0x40afc0
  40afaf:	mov    edi,0x5fecc253
  40afb4:	sbb    ah,BYTE PTR [ebp+0x291b1c5b]
  40afba:	sbb    ah,BYTE PTR [ecx]
  40afbc:	shl    ch,0x4a
  40afbf:	outs   dx,DWORD PTR ds:[esi]
  40afc0:	jge    0x40afb8
  40afc2:	push   ecx
  40afc3:	fs jmp 0x7b86:0xaa5f8f6c
  40afcb:	in     al,0xd7
  40afcd:	mov    eax,DWORD PTR [ebp-0x4]
  40afd0:	xor    eax,esi
  40afd2:	add    eax,edi
  40afd4:	mov    DWORD PTR [ebp-0x10],eax
  40afd7:	mov    ebx,0x65655
  40afdc:	add    ebx,0x3234
  40afe2:	xchg   ebx,esi
  40afe4:	xor    ebx,ebx
  40afe6:	push   esi
  40afe7:	mov    esi,ebx
  40afe9:	pop    ebx
  40afea:	mov    edx,esi
  40afec:	jmp    0x40d37e
  40aff1:	cli    
  40aff2:	mov    DWORD PTR [ecx-0x65b47dad],esi
  40aff8:	add    BYTE PTR ds:0x7f29b0d0,0xd2
  40afff:	mov    ah,0x48
  40b001:	sub    esp,esi
  40b003:	add    DWORD PTR [ebx-0x7c7ca1f4],0x3f
  40b00a:	jp     0x40afca
  40b00c:	add    esp,esp
  40b00e:	xchg   edi,eax
  40b00f:	sub    ah,cl
  40b011:	or     esi,DWORD PTR [esi-0x1f]
  40b014:	inc    ebp
  40b015:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b016:	outs   dx,DWORD PTR ds:[esi]
  40b017:	xor    dh,dl
  40b019:	cmp    BYTE PTR [eax-0x4f12170f],ch
  40b01f:	or     al,BYTE PTR [ecx]
  40b021:	ret    0x9422
  40b024:	inc    edi
  40b025:	jb     0x40b00d
  40b027:	mov    ecx,DWORD PTR [ecx+0x38]
  40b02a:	pop    esp
  40b02b:	retf   
  40b02c:	pop    edx
  40b02d:	jp     0x40b04a
  40b02f:	test   edx,ebp
  40b031:	cmp    dh,ah
  40b033:	xor    ebx,DWORD PTR [edx]
  40b035:	push   ecx
  40b036:	popf   
  40b037:	adc    BYTE PTR [ebp+ebp*2+0x29],0x6a
  40b03c:	push   ecx
  40b03d:	lahf   
  40b03e:	js     0x40b045
  40b040:	push   0xa64b61cd
  40b045:	jle    0x40b02e
  40b047:	rol    DWORD PTR [eax+0x53d3ebdf],1
  40b04d:	(bad)  
  40b04e:	loop   0x40afda
  40b050:	shl    DWORD PTR [ecx-0x6df8e786],cl
  40b056:	xor    ebx,DWORD PTR ds:0xb8a90e82
  40b05c:	add    eax,0xc98d6471
  40b061:	push   ecx
  40b062:	jl     0x40b05b
  40b064:	or     BYTE PTR [ebx+eiz*8+0x62877d64],bl
  40b06b:	(bad)  
  40b06d:	push   esi
  40b06e:	dec    ecx
  40b06f:	fs jno 0x40b08a
  40b072:	(bad)  
  40b073:	icebp  
  40b074:	push   ecx
  40b075:	inc    edx
  40b076:	jg     0x40b0e8
  40b078:	or     BYTE PTR [edi+0x448efdf],dh
  40b07e:	dec    ebp
  40b07f:	jne    0x40b016
  40b081:	dec    esi
  40b082:	xchg   ebp,eax
  40b083:	in     eax,0x66
  40b085:	xlat   BYTE PTR ds:[ebx]
  40b086:	pusha  
  40b087:	mov    dh,0x92
  40b089:	or     DWORD PTR [ebp+0x4c],0x5f
  40b08d:	mov    ebx,0x6529c102
  40b092:	jge    0x40b062
  40b094:	test   BYTE PTR [edx-0x56a00bf7],ch
  40b09a:	jg     0x40b112
  40b09c:	dec    esi
  40b09d:	retf   
  40b09e:	mov    ?,WORD PTR [esi]
  40b0a0:	ror    BYTE PTR [ebp-0x8c3f5ed],1
  40b0a6:	pop    esp
  40b0a7:	ret    
  40b0a8:	pop    edx
  40b0a9:	inc    edx
  40b0aa:	in     eax,dx
  40b0ab:	dec    esi
  40b0ac:	out    0x63,al
  40b0ae:	push   ss
  40b0af:	in     al,0x9f
  40b0b1:	ins    BYTE PTR es:[edi],dx
  40b0b2:	sub    edx,edx
  40b0b4:	pushf  
  40b0b5:	xor    eax,0x98dd94f2
  40b0ba:	cld    
  40b0bb:	sbb    BYTE PTR [ebx-0x472b48db],dl
  40b0c1:	cld    
  40b0c2:	lods   al,BYTE PTR ds:[esi]
  40b0c3:	scas   al,BYTE PTR es:[edi]
  40b0c4:	and    BYTE PTR [eax+edx*2+0x4d],bl
  40b0c8:	jle    0x40b10e
  40b0ca:	sbb    DWORD PTR [eax-0x61420222],0x19
  40b0d1:	sub    al,0x51
  40b0d3:	hlt    
  40b0d4:	(bad)  
  40b0d5:	fsubr  DWORD PTR [edi+0x55]
  40b0d8:	pop    edx
  40b0d9:	retf   
  40b0da:	call   0x34c1:0xa6c01c58
  40b0e1:	fld    DWORD PTR [ebx+0x52]
  40b0e4:	and    al,0xfd
  40b0e6:	les    ebx,FWORD PTR [ecx+edx*1+0x4c7ac19f]
  40b0ed:	sub    DWORD PTR [eax+eax*4-0x46],edi
  40b0f1:	or     DWORD PTR [edi-0x3375820a],ecx
  40b0f7:	mov    edx,0xf2ddbd57
  40b0fc:	or     DWORD PTR [esi],0x2f
  40b0ff:	sub    DWORD PTR [esi-0x547a9b19],edi
  40b105:	sub    DWORD PTR [edx+edi*1],esi
  40b108:	mov    BYTE PTR ds:0x45dec06e,cl
  40b10e:	leave  
  40b10f:	and    ch,BYTE PTR [esi-0x357465c2]
  40b115:	retf   0xe3cb
  40b118:	test   eax,0x1e7ff005
  40b11d:	jno    0x40b107
  40b11f:	sub    al,0xfb
  40b121:	loopne 0x40b110
  40b123:	int    0x67
  40b125:	push   ebp
  40b126:	xor    al,0x29
  40b128:	repz or BYTE PTR [eax-0x80],ah
  40b12c:	jns    0x40b165
  40b12e:	ja     0x40b160
  40b130:	and    eax,0x38515d67
  40b135:	xlat   BYTE PTR ds:[ebx]
  40b136:	and    eax,0xc32af74
  40b13b:	or     BYTE PTR [edi-0x34],bh
  40b13e:	sub    eax,0x53974865
  40b143:	pop    esi
  40b144:	aam    0x5d
  40b146:	popf   
  40b147:	(bad)
  40b14a:	lods   eax,DWORD PTR ds:[esi]
  40b14b:	cdq    
  40b14c:	add    ah,cl
  40b14e:	test   DWORD PTR [esi+0x61],edi
  40b151:	cdq    
  40b152:	dec    eax
  40b153:	cmp    al,0x5c
  40b155:	dec    BYTE PTR [ebx-0xa5dc174]
  40b15b:	arpl   di,dx
  40b15d:	lock es das 
  40b160:	mov    ah,0x8a
  40b162:	sti    
  40b163:	outs   dx,DWORD PTR ds:[esi]
  40b164:	mov    ebx,0x61fa0610
  40b169:	dec    esp
  40b16a:	dec    edx
  40b16b:	cli    
  40b16c:	pop    eax
  40b16d:	and    al,0x79
  40b16f:	mov    esp,0x5e00f1ee
  40b174:	push   edi
  40b175:	(bad)  
  40b176:	repz mov edi,fs
  40b179:	adc    ecx,DWORD PTR ds:0xe6917b7
  40b17f:	mov    ss,WORD PTR [ecx]
  40b181:	cmc    
  40b182:	shr    BYTE PTR [eax-0x51],cl
  40b185:	test   DWORD PTR [esi+edx*1+0x2b],ecx
  40b189:	and    eax,0xa0b1fe09
  40b18e:	inc    ebx
  40b18f:	and    dl,dl
  40b191:	ss sbb eax,0x61ec7c20
  40b197:	pop    ebp
  40b198:	and    DWORD PTR [ebp+0x3c],eax
  40b19b:	xor    eax,0x5678c7d7
  40b1a0:	in     eax,dx
  40b1a1:	jns    0x40b202
  40b1a3:	or     eax,0xb50e1a5f
  40b1a8:	cmp    BYTE PTR [ecx-0x2e],cl
  40b1ab:	sub    edx,ebx
  40b1ad:	sub    BYTE PTR [eax+0x412cc80f],ch
  40b1b3:	adc    BYTE PTR [esi],dl
  40b1b5:	xor    eax,0xa07f3f97
  40b1ba:	out    dx,eax
  40b1bb:	retf   
  40b1bc:	pop    ds
  40b1bd:	cmp    DWORD PTR [edx],0xbc429284
  40b1c3:	adc    DWORD PTR [ebx],eax
  40b1c5:	pushf  
  40b1c6:	and    edi,eax
  40b1c8:	sti    
  40b1c9:	and    eax,0xe52e3196
  40b1ce:	ficomp DWORD PTR [edi+0x43dea2dd]
  40b1d4:	dec    ebp
  40b1d5:	jl     0x40b1e6
  40b1d7:	pusha  
  40b1d8:	and    eax,DWORD PTR [edx+0x2d]
  40b1db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1dc:	dec    edx
  40b1dd:	sbb    ebx,esp
  40b1df:	lds    ebx,FWORD PTR [edx+0x69f758f6]
  40b1e5:	sti    
  40b1e6:	sub    eax,0xca479433
  40b1ec:	mul    DWORD PTR [eax]
  40b1ee:	out    0xc4,al
  40b1f0:	jo     0x40b23b
  40b1f2:	scas   al,BYTE PTR es:[edi]
  40b1f3:	xor    al,0x89
  40b1f5:	in     al,dx
  40b1f6:	scas   eax,DWORD PTR es:[edi]
  40b1f7:	mov    ebp,0x7a6d8a19
  40b1fc:	enter  0x78bf,0x5
  40b200:	bound  ebx,QWORD PTR [edx]
  40b202:	es sub eax,0xa2adfc46
  40b208:	adc    al,0xc1
  40b20a:	sbb    DWORD PTR [ecx+0x35534a6c],esi
  40b210:	add    al,0xc7
  40b212:	cmc    
  40b213:	idiv   DWORD PTR [eax+0x7c]
  40b216:	and    edx,DWORD PTR [ecx]
  40b218:	icebp  
  40b219:	icebp  
  40b21a:	retf   
  40b21b:	mov    WORD PTR [ecx+edi*8+0x73],fs
  40b21f:	push   es
  40b220:	push   0xffffffb2
  40b222:	popf   
  40b223:	mov    edi,DWORD PTR [esi+edx*4+0x47]
  40b227:	mov    esi,0xb964c9c0
  40b22c:	in     eax,0x3c
  40b22e:	inc    eax
  40b22f:	rcr    al,cl
  40b231:	cld    
  40b232:	in     al,0x7f
  40b234:	sub    dh,cl
  40b236:	mov    ebx,0xc5677ebf
  40b23b:	and    al,0x79
  40b23d:	xor    al,0x71
  40b23f:	(bad)  
  40b241:	shl    DWORD PTR [ebx],cl
  40b243:	ja     0x40b287
  40b245:	(bad)  [ecx+0x8]
  40b248:	mov    esi,0x8b1b6d0
  40b24d:	push   0x69
  40b24f:	enter  0xaa81,0x29
  40b253:	pop    es
  40b254:	(bad)  
  40b255:	mov    bl,0xa7
  40b257:	jne    0x40b2d7
  40b259:	in     eax,dx
  40b25a:	push   es
  40b25b:	xor    al,0x5
  40b25d:	and    edi,edi
  40b25f:	jo     0x40b27a
  40b261:	jmp    0x40b2aa
  40b263:	imul   ebp,DWORD PTR [ebx-0x56],0x58badd13
  40b26a:	push   cs
  40b26b:	or     DWORD PTR [esi],ebx
  40b26d:	mov    WORD PTR [edx+0xb68214],fs
  40b273:	out    dx,eax
  40b274:	adc    DWORD PTR [eax+0x65e3513c],edx
  40b27a:	fwait
  40b27b:	xor    esi,ebp
  40b27d:	cmp    edx,edi
  40b27f:	je     0x40b232
  40b281:	inc    edx
  40b282:	jle    0x40b2bd
  40b284:	pop    edx
  40b285:	adc    esp,DWORD PTR [edx-0x6a]
  40b288:	push   0x6a
  40b28a:	or     DWORD PTR [esi+0xa237f84],ecx
  40b290:	xchg   DWORD PTR [edi],esi
  40b292:	mov    dh,0xc
  40b294:	jp     0x40b237
  40b296:	mov    WORD PTR gs:[edx-0xe],fs
  40b29a:	popf   
  40b29b:	cwde   
  40b29c:	xchg   ebp,eax
  40b29d:	push   esi
  40b29e:	rol    esp,1
  40b2a0:	or     eax,DWORD PTR [edi]
  40b2a2:	dec    eax
  40b2a3:	test   edi,eax
  40b2a5:	cld    
  40b2a6:	dec    ebx
  40b2a7:	lods   eax,DWORD PTR ds:[esi]
  40b2a8:	add    eax,0x5bc43f70
  40b2ad:	scas   eax,DWORD PTR es:[edi]
  40b2ae:	mov    al,0xc7
  40b2b0:	ror    eax,cl
  40b2b2:	adc    eax,0xdb1957f7
  40b2b7:	leave  
  40b2b8:	lahf   
  40b2b9:	pop    edx
  40b2ba:	ins    BYTE PTR es:[edi],dx
  40b2bb:	xchg   esp,eax
  40b2bc:	pop    ss
  40b2bd:	cmc    
  40b2be:	adc    al,0x64
  40b2c0:	pop    ebx
  40b2c1:	mov    al,ds:0x5b1c3f8d
  40b2c6:	adc    al,BYTE PTR [edx+ebx*4-0x6b]
  40b2ca:	cmp    eax,0x7dad9627
  40b2cf:	dec    ebp
  40b2d0:	jl     0x40b326
  40b2d2:	in     eax,0x27
  40b2d4:	and    bh,bh
  40b2d6:	clc    
  40b2d7:	push   0x6d
  40b2d9:	push   edx
  40b2da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2db:	mov    dl,BYTE PTR [esp+ecx*8+0x3a]
  40b2df:	and    al,0x7a
  40b2e1:	in     al,0xbf
  40b2e3:	ret    
  40b2e4:	pusha  
  40b2e5:	mov    DWORD PTR es:[edx-0x6a],ebp
  40b2e9:	pop    ds
  40b2ea:	inc    ebp
  40b2eb:	ss pop edx
  40b2ed:	or     al,0xfe
  40b2ef:	add    eax,0xd25102d3
  40b2f4:	aad    0x1
  40b2f6:	adc    bh,ah
  40b2f8:	out    dx,eax
  40b2f9:	pop    esp
  40b2fa:	mov    ss,esp
  40b2fc:	stc    
  40b2fd:	pusha  
  40b2fe:	push   ss
  40b2ff:	xchg   ebx,eax
  40b300:	push   ds
  40b301:	pusha  
  40b302:	adc    al,BYTE PTR [esi]
  40b304:	mov    ch,0xef
  40b306:	jmp    0x5371163d
  40b30b:	sub    DWORD PTR [esi-0x6],ecx
  40b30e:	jno    0x40b38e
  40b310:	popf   
  40b311:	xchg   DWORD PTR [ebp-0xa709a8],ebp
  40b317:	adc    bh,BYTE PTR [eax+0x32]
  40b31a:	es into 
  40b31c:	push   ds
  40b31d:	stos   BYTE PTR es:[edi],al
  40b31e:	lds    edi,FWORD PTR [ebx-0x12]
  40b321:	pop    es
  40b322:	pop    ss
  40b323:	enter  0x9cdf,0xc
  40b327:	mov    ds:0xe6e91955,eax
  40b32c:	lock jno 0x40b313
  40b32f:	das    
  40b330:	or     BYTE PTR [ebx+0x44],dl
  40b333:	ror    DWORD PTR [esi],1
  40b335:	leave  
  40b336:	push   eax
  40b337:	or     eax,ebp
  40b339:	sbb    DWORD PTR [edi],ebp
  40b33b:	push   eax
  40b33c:	leave  
  40b33d:	into   
  40b33e:	mov    edx,0xc5d79aad
  40b343:	scas   al,BYTE PTR es:[edi]
  40b344:	outs   dx,BYTE PTR ds:[esi]
  40b345:	xchg   edx,eax
  40b346:	aaa    
  40b347:	adc    al,0xec
  40b349:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b34a:	jmp    0xcc2506f7
  40b34f:	inc    eax
  40b350:	out    dx,eax
  40b351:	mov    edx,0x6d874b5f
  40b356:	fldenv [ebx*8-0x4111231a]
  40b35d:	dec    ecx
  40b35e:	in     eax,dx
  40b35f:	idiv   cl
  40b361:	add    al,0x71
  40b363:	sar    DWORD PTR [eax-0x4a],0xb0
  40b367:	popa   
  40b368:	pop    eax
  40b369:	inc    esi
  40b36a:	stc    
  40b36b:	in     eax,0xa2
  40b36d:	loopne 0x40b384
  40b36f:	xchg   edi,eax
  40b370:	sub    eax,0x11762574
  40b375:	loopne 0x40b356
  40b377:	les    ebp,FWORD PTR [ebp-0x4e]
  40b37a:	loope  0x40b3c0
  40b37c:	mov    ebp,0x719eb81f
  40b381:	sub    ah,BYTE PTR [ebx+0x30618978]
  40b387:	xchg   al,cl
  40b389:	imul   ebx,DWORD PTR [ebp+0x0],0xffffff8f
  40b38d:	fadd   QWORD PTR [eax]
  40b38f:	xchg   DWORD PTR [eax+0x5939a33a],esp
  40b395:	std    
  40b396:	inc    esp
  40b397:	shl    DWORD PTR [esi-0x2b9df90],cl
  40b39d:	mov    esp,0xbed7b1c0
  40b3a2:	out    0x76,al
  40b3a4:	dec    edi
  40b3a5:	mov    eax,fs:0xc3fd4104
  40b3ab:	inc    ecx
  40b3ac:	or     dh,BYTE PTR [ebx+ebp*4-0x5c]
  40b3b0:	out    dx,al
  40b3b1:	add    cl,BYTE PTR [ecx-0x714c2265]
  40b3b7:	sub    eax,0x8fc1e36d
  40b3bc:	sub    DWORD PTR [ebp-0x16],ebp
  40b3bf:	into   
  40b3c0:	and    ecx,DWORD PTR [ebx+0x78]
  40b3c3:	jns    0x40b389
  40b3c5:	mov    al,0xb6
  40b3c7:	in     al,dx
  40b3c8:	popf   
  40b3c9:	inc    ebx
  40b3ca:	push   es
  40b3cb:	adc    DWORD PTR [ebx],edi
  40b3cd:	sub    bl,bh
  40b3cf:	xlat   BYTE PTR ds:[ebx]
  40b3d0:	lock jecxz 0x40b396
  40b3d3:	je     0x40b406
  40b3d5:	sub    al,0xfd
  40b3d7:	lods   al,BYTE PTR ds:[esi]
  40b3d8:	push   eax
  40b3d9:	dec    edi
  40b3da:	call   0x167b:0xad214734
  40b3e1:	cs dec ebp
  40b3e3:	cmp    eax,0x670ba383
  40b3e8:	fld    QWORD PTR [ebx]
  40b3ea:	ins    DWORD PTR es:[edi],dx
  40b3eb:	into   
  40b3ec:	inc    ebp
  40b3ed:	in     eax,0xd4
  40b3ef:	stc    
  40b3f0:	sbb    eax,0x612e94a3
  40b3f5:	jne    0x40b3b6
  40b3f7:	jns    0x40b38f
  40b3f9:	stos   BYTE PTR es:[edi],al
  40b3fa:	(bad)  
  40b3fb:	imul   ecx,DWORD PTR [esi+edi*4],0x3b126758
  40b402:	hlt    
  40b403:	or     eax,0xd1414173
  40b408:	mov    edi,0xd128b398
  40b40d:	pop    eax
  40b40e:	jb     0x40b446
  40b410:	dec    esp
  40b411:	sbb    bh,BYTE PTR [esi-0x61]
  40b414:	test   dh,dl
  40b416:	rcr    cl,1
  40b418:	add    DWORD PTR [eax-0x4969a5c],edx
  40b41e:	jmp    0xb6e0f21d
  40b423:	(bad)  
  40b425:	cs das 
  40b427:	enter  0xd81,0x6c
  40b42b:	cmp    cl,dl
  40b42d:	outs   dx,BYTE PTR ds:[esi]
  40b42e:	clc    
  40b42f:	and    eax,0xd3019610
  40b434:	ret    0xb3b2
  40b437:	xlat   BYTE PTR ds:[ebx]
  40b438:	dec    esp
  40b439:	adc    BYTE PTR [edx],cl
  40b43b:	outs   dx,DWORD PTR ds:[esi]
  40b43c:	lods   eax,DWORD PTR ds:[esi]
  40b43d:	add    al,dl
  40b43f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b440:	dec    edi
  40b441:	aas    
  40b442:	pop    esp
  40b443:	cmp    al,0x4d
  40b445:	js     0x40b41a
  40b447:	out    0xba,al
  40b449:	(bad)  
  40b44a:	cli    
  40b44b:	push   esp
  40b44c:	(bad)  [ebp+0x3083edd9]
  40b452:	dec    esp
  40b453:	dec    ecx
  40b454:	mov    ds:0x835c1357,eax
  40b459:	mov    eax,ds:0xba59da7d
  40b45e:	push   ss
  40b45f:	jge    0x40b4e0
  40b461:	aad    0xb0
  40b463:	sahf   
  40b464:	dec    esp
  40b465:	test   BYTE PTR [edi],al
  40b467:	and    ch,bl
  40b469:	sub    eax,0x3ee7d3e
  40b46e:	cmp    eax,0x243d82cf
  40b473:	ss pop esi
  40b475:	shl    BYTE PTR fs:[eax],1
  40b478:	ret    0xe6c6
  40b47b:	sub    eax,DWORD PTR [esp+eiz*4-0x78]
  40b47f:	stos   BYTE PTR es:[edi],al
  40b480:	push   0x43
  40b482:	inc    ebx
  40b483:	les    ebx,FWORD PTR [edi-0x18]
  40b486:	inc    ecx
  40b487:	pop    es
  40b488:	clc    
  40b489:	arpl   WORD PTR [esi+0x7268bd54],bp
  40b48f:	xchg   dl,ch
  40b491:	mov    esi,0x70fcff20
  40b496:	mov    ebx,0x9e567cac
  40b49b:	in     eax,dx
  40b49c:	push   ebx
  40b49d:	push   ss
  40b49e:	sbb    edx,DWORD PTR [esi-0x638cfefe]
  40b4a4:	xchg   ebp,eax
  40b4a5:	sub    al,0x17
  40b4a7:	adc    BYTE PTR [ebp-0x775c83af],cl
  40b4ad:	pushf  
  40b4ae:	cmc    
  40b4af:	rol    edi,1
  40b4b1:	in     eax,dx
  40b4b2:	call   0xe17b:0x48bdcb16
  40b4b9:	sub    dl,bh
  40b4bb:	mov    eax,0x6c90282a
  40b4c0:	outs   dx,DWORD PTR ds:[esi]
  40b4c1:	pushf  
  40b4c2:	xchg   esi,eax
  40b4c3:	in     eax,dx
  40b4c4:	sbb    BYTE PTR [ebx],ch
  40b4c6:	push   cs
  40b4c7:	push   0x17
  40b4c9:	jmp    0x40b4aa
  40b4cb:	xchg   esp,eax
  40b4cc:	mov    dl,0x7a
  40b4ce:	loope  0x40b4a1
  40b4d0:	outs   dx,DWORD PTR ds:[esi]
  40b4d1:	add    ch,BYTE PTR [ebx]
  40b4d3:	push   edx
  40b4d4:	cmp    eax,0x1e695b3a
  40b4d9:	in     al,0xfc
  40b4db:	inc    ebp
  40b4dc:	pop    edx
  40b4dd:	mov    dh,0xb8
  40b4df:	sbb    ch,BYTE PTR [esi-0x34c53e3b]
  40b4e5:	pop    ecx
  40b4e6:	pop    ebp
  40b4e7:	push   eax
  40b4e8:	xor    BYTE PTR [edi],cl
  40b4ea:	pushf  
  40b4eb:	ss dec eax
  40b4ed:	(bad)
  40b4f0:	call   0x38ab9d4b
  40b4f5:	sbb    cl,BYTE PTR [ebx+0x2b]
  40b4f8:	cmp    edi,ebx
  40b4fa:	jne    0x40b542
  40b4fc:	std    
  40b4fd:	adc    BYTE PTR [edi-0x55],al
  40b500:	add    ebx,ebx
  40b502:	jno    0x40b48c
  40b504:	cmp    al,BYTE PTR [ebx-0x1bc4a5f1]
  40b50a:	ins    BYTE PTR es:[edi],dx
  40b50b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b50c:	jmp    0x40b53f
  40b50e:	bound  esp,QWORD PTR [esi+0x13]
  40b511:	jge    0x40b523
  40b513:	mov    eax,ds:0x6fb495d6
  40b518:	retf   
  40b519:	cmp    eax,0x354e55be
  40b51e:	fist   WORD PTR [ebp-0x1abd95fe]
  40b524:	xor    al,0xaf
  40b526:	aaa    
  40b527:	push   ebx
  40b528:	xor    DWORD PTR [ecx-0x56b2e870],ebp
  40b52e:	push   es
  40b52f:	dec    eax
  40b530:	or     eax,0xc53d42c1
  40b535:	or     BYTE PTR [esi-0x1],ah
  40b538:	out    0xca,al
  40b53a:	pop    ebx
  40b53b:	test   BYTE PTR [ecx],dl
  40b53d:	not    edi
  40b53f:	dec    edi
  40b540:	ret    
  40b541:	enter  0xf3ff,0x28
  40b545:	jae    0x40b50d
  40b547:	and    eax,0xa189b76d
  40b54c:	imul   edx,DWORD PTR ds:[ecx+0x427b39af],0xbc2c970
  40b557:	push   ecx
  40b558:	loop   0x40b5bd
  40b55a:	shl    DWORD PTR [eax-0x43],cl
  40b55d:	fiadd  DWORD PTR [edx+0x5d]
  40b560:	out    0xd3,eax
  40b562:	sbb    eax,0xaf696357
  40b567:	and    eax,0xe4067010
  40b56c:	dec    esi
  40b56d:	data16 fwait
  40b56f:	rcr    ebp,cl
  40b571:	shl    ah,0x71
  40b574:	push   ds
  40b575:	aas    
  40b576:	xor    ecx,DWORD PTR [ebx+0x47dcf4de]
  40b57c:	mov    al,0x4c
  40b57e:	add    ebx,DWORD PTR [ebx]
  40b580:	cs adc ah,ch
  40b583:	pop    ss
  40b584:	push   ecx
  40b585:	loopne 0x40b57b
  40b587:	jge    0x40b5a3
  40b589:	and    ah,bh
  40b58b:	mov    edi,0x401132bf
  40b590:	sbb    eax,0x7d6370e7
  40b595:	retf   0xb2ed
  40b598:	sti    
  40b599:	test   BYTE PTR [edx-0x5a],dh
  40b59c:	push   esi
  40b59d:	shl    BYTE PTR ds:0x446833e1,1
  40b5a3:	push   es
  40b5a4:	in     al,dx
  40b5a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5a6:	cmp    esi,0x16c0afed
  40b5ac:	leave  
  40b5ad:	jl     0x40b55c
  40b5af:	add    eax,0xa39a0394
  40b5b4:	enter  0x9fc4,0xc0
  40b5b8:	jl     0x40b56e
  40b5ba:	add    ecx,edi
  40b5bc:	clc    
  40b5bd:	div    BYTE PTR [esi+eiz*1-0x11]
  40b5c1:	add    ah,BYTE PTR [ecx]
  40b5c3:	(bad)  
  40b5c4:	ret    0xa507
  40b5c7:	jge    0x40b5b4
  40b5c9:	sub    ebx,DWORD PTR [ebp-0x30]
  40b5cc:	xor    al,BYTE PTR [ebx]
  40b5ce:	cmp    DWORD PTR [edi],0xffffff96
  40b5d1:	outs   dx,DWORD PTR ds:[esi]
  40b5d2:	and    edx,DWORD PTR [eax+ebp*2]
  40b5d5:	or     al,0x56
  40b5d7:	cdq    
  40b5d8:	adc    eax,0x56e16f08
  40b5dd:	jns    0x40b5fa
  40b5df:	inc    ecx
  40b5e0:	in     al,dx
  40b5e1:	inc    DWORD PTR [esi+0xc]
  40b5e4:	js     0x40b60d
  40b5e6:	jae    0x40b5db
  40b5e8:	inc    esp
  40b5e9:	mov    bh,BYTE PTR [eax+0x12]
  40b5ec:	test   al,0x82
  40b5ee:	(bad)  
  40b5ef:	pop    eax
  40b5f0:	ja     0x40b5b0
  40b5f2:	lds    esi,FWORD PTR ds:0x3674de30
  40b5f8:	pop    ecx
  40b5f9:	lods   eax,DWORD PTR ds:[esi]
  40b5fa:	mov    ecx,0xee774476
  40b5ff:	rol    ebx,1
  40b601:	push   edx
  40b602:	repz push esp
  40b604:	out    0xdb,al
  40b606:	push   eax
  40b607:	in     al,0xc
  40b609:	sub    DWORD PTR [eax+0x76],edi
  40b60c:	inc    BYTE PTR [esi+0x17]
  40b60f:	pop    ebx
  40b610:	jmp    DWORD PTR [ebx+0x2f]
  40b613:	out    0x2c,al
  40b615:	mov    dl,0xef
  40b617:	aad    0x88
  40b619:	outs   dx,DWORD PTR ds:[esi]
  40b61a:	or     cl,BYTE PTR [esi+0x3b]
  40b61d:	add    BYTE PTR [esi*2-0x3cedfe83],al
  40b624:	push   ecx
  40b625:	and    BYTE PTR [ecx+0x73f514ac],0x5e
  40b62c:	outs   dx,BYTE PTR ds:[esi]
  40b62d:	push   esi
  40b62e:	aas    
  40b62f:	and    al,0x20
  40b631:	aas    
  40b632:	and    al,0xd9
  40b634:	ret    
  40b635:	mov    edi,0x87ef7d39
  40b63a:	xchg   esi,eax
  40b63b:	jp     0x40b696
  40b63d:	js     0x40b62e
  40b63f:	ja     0x40b5f1
  40b641:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b642:	es push esp
  40b644:	lahf   
  40b645:	rol    DWORD PTR [edx+0x4ee7f044],1
  40b64b:	sub    ch,BYTE PTR [ebp+edi*1-0x7c]
  40b64f:	mov    bl,0x94
  40b651:	test   BYTE PTR [edx],0x27
  40b654:	xor    BYTE PTR [edi+0x2518c8a5],ah
  40b65a:	xchg   esi,ebx
  40b65c:	or     eax,0xb641299e
  40b661:	lods   eax,DWORD PTR ds:[esi]
  40b662:	jmp    0x20b1:0x2d4a0708
  40b669:	mov    edi,0xf58a735a
  40b66e:	push   0xffffffee
  40b670:	addr16 xor ebx,edx
  40b673:	cld    
  40b674:	fimul  DWORD PTR [eax-0x50ba3658]
  40b67a:	stc    
  40b67b:	pop    edx
  40b67c:	sar    DWORD PTR [ecx+0x774c7d53],1
  40b682:	mov    ecx,0x10b13df3
  40b687:	mov    esp,0xd611df26
  40b68d:	mov    esi,DWORD PTR [esp+edi*2+0x46]
  40b691:	in     al,dx
  40b692:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b693:	rol    BYTE PTR [ebx+0x33],0x32
  40b697:	out    dx,eax
  40b698:	aad    0x74
  40b69a:	lods   eax,DWORD PTR ds:[esi]
  40b69b:	and    al,0x64
  40b69d:	push   ebx
  40b69e:	xchg   DWORD PTR [esi+0x27],edx
  40b6a1:	sbb    dl,BYTE PTR [edx]
  40b6a3:	fldcw  WORD PTR [edi]
  40b6a5:	add    dl,cl
  40b6a7:	data16 (bad) 
  40b6aa:	jmp    0x40b6f1
  40b6ac:	or     ah,bh
  40b6ae:	pop    ebp
  40b6af:	push   ebp
  40b6b0:	xchg   ebp,eax
  40b6b1:	shl    BYTE PTR [eax],cl
  40b6b3:	retf   0xd479
  40b6b6:	test   al,0xa2
  40b6b8:	loopne 0x40b71e
  40b6ba:	add    al,0xd5
  40b6bc:	mov    esi,0xc85f4c0b
  40b6c1:	les    esi,FWORD PTR [edx+0x1]
  40b6c4:	and    eax,DWORD PTR [ecx-0x6d435af7]
  40b6ca:	or     DWORD PTR [ebx],ebp
  40b6cc:	dec    eax
  40b6cd:	mov    edi,esp
  40b6cf:	popf   
  40b6d0:	xchg   esi,eax
  40b6d1:	icebp  
  40b6d2:	cmp    edx,DWORD PTR [edx+eax*8]
  40b6d5:	gs lahf 
  40b6d7:	push   ebp
  40b6d8:	sahf   
  40b6d9:	xor    cl,0x1c
  40b6dc:	push   ebx
  40b6dd:	pop    ebx
  40b6de:	shl    DWORD PTR [ecx-0x4a96fcf3],cl
  40b6e4:	gs retw 
  40b6e7:	cmp    ebx,ecx
  40b6e9:	pop    ds
  40b6ea:	ret    0xbd7
  40b6ed:	leave  
  40b6ee:	(bad)  
  40b6ef:	xchg   esi,eax
  40b6f0:	lock adc BYTE PTR [esi],dl
  40b6f3:	xchg   esi,eax
  40b6f4:	pop    ecx
  40b6f5:	add    cl,BYTE PTR ss:[esi]
  40b6f8:	bnd ret 
  40b6fa:	jb     0x40b760
  40b6fc:	xchg   edx,eax
  40b6fd:	sub    eax,0xf7ed304a
  40b702:	nop
  40b703:	bound  edx,QWORD PTR [ebx-0x5d]
  40b706:	fst    QWORD PTR [edi+0x4cb11f8f]
  40b70c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b70d:	clc    
  40b70e:	aaa    
  40b70f:	cmp    eax,0x588a35f2
  40b714:	loop   0x40b72f
  40b716:	repnz retf 
  40b718:	jp     0x40b6ea
  40b71a:	and    eax,0xff4be4a3
  40b71f:	mov    eax,ds:0x5358e63c
  40b724:	mov    dh,0xbb
  40b726:	inc    ecx
  40b727:	jle    0x40b786
  40b729:	call   0xb459efd6
  40b72e:	neg    DWORD PTR es:[edi+eiz*2-0x47efbc04]
  40b736:	inc    ebx
  40b737:	sub    al,0x42
  40b739:	jne    0x40b756
  40b73b:	mov    dh,0x41
  40b73d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b73e:	ins    DWORD PTR es:[edi],dx
  40b73f:	adc    al,0xea
  40b741:	aam    0xaf
  40b743:	aam    0x33
  40b745:	sti    
  40b746:	xor    al,0xb8
  40b748:	fs call 0xcfd18456
  40b74e:	mov    WORD PTR [ebx],es
  40b750:	and    dh,dh
  40b752:	mov    ecx,0x4585cf35
  40b757:	or     eax,DWORD PTR [edx-0x51fba6f2]
  40b75d:	ds push edx
  40b75f:	jecxz  0x40b7da
  40b761:	ds push ss
  40b763:	jmp    0x7d3de64d
  40b768:	mov    ebp,0x7c13e63
  40b76d:	xor    ax,0x8ba4
  40b771:	mov    eax,ds:0x8b1e85aa
  40b776:	scas   al,BYTE PTR es:[edi]
  40b777:	and    al,0x28
  40b779:	mov    edx,0xc08264d6
  40b77f:	jp     0x40b7f3
  40b781:	mov    dl,0x38
  40b783:	lods   al,BYTE PTR ds:[esi]
  40b784:	mov    ebx,0xc1708687
  40b789:	lahf   
  40b78a:	dec    esp
  40b78b:	xor    esp,esi
  40b78d:	jae    0x40b792
  40b78f:	push   ebx
  40b790:	repnz sar ch,cl
  40b793:	push   eax
  40b794:	mov    eax,0x5f875580
  40b799:	das    
  40b79a:	test   eax,0xc2ce0528
  40b79f:	push   eax
  40b7a0:	clc    
  40b7a1:	push   edi
  40b7a2:	cmp    DWORD PTR [ebx],esp
  40b7a4:	xchg   edi,esp
  40b7a6:	and    al,0xd4
  40b7a8:	mov    esi,ebp
  40b7aa:	fldenv [eax+eiz*4+0x78aee61a]
  40b7b1:	xchg   ebp,eax
  40b7b3:	and    al,0xf7
  40b7b5:	or     BYTE PTR [esi],dl
  40b7b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7b8:	arpl   sp,ax
  40b7ba:	not    DWORD PTR [ebp-0x342a44d7]
  40b7c0:	dec    eax
  40b7c1:	fisub  DWORD PTR [ebp+0x5a]
  40b7c4:	or     cl,0x9c
  40b7c7:	jmp    0x40b770
  40b7c9:	inc    edi
  40b7ca:	das    
  40b7cb:	mov    al,ds:0x609f616b
  40b7d0:	scas   eax,DWORD PTR es:[edi]
  40b7d1:	pop    ebx
  40b7d2:	mov    al,0xa3
  40b7d4:	push   esp
  40b7d5:	jo     0x40b81e
  40b7d7:	jmp    0x40b7b0
  40b7d9:	test   eax,0xee95d82d
  40b7de:	popf   
  40b7df:	push   esi
  40b7e0:	adc    DWORD PTR [eax],edx
  40b7e2:	sbb    al,BYTE PTR [ecx+ebx*1-0x54373b91]
  40b7e9:	jne    0x40b807
  40b7eb:	into   
  40b7ec:	leave  
  40b7ed:	scas   eax,DWORD PTR es:[edi]
  40b7ee:	(bad)  
  40b7ef:	pusha  
  40b7f0:	dec    esp
  40b7f1:	nop
  40b7f2:	icebp  
  40b7f3:	shl    ebp,cl
  40b7f5:	gs icebp 
  40b7f7:	xchg   edi,eax
  40b7f8:	push   ebx
  40b7f9:	sub    bl,dl
  40b7fb:	mov    al,ds:0x5c996ffa
  40b800:	push   ebp
  40b801:	jbe    0x40b7d1
  40b803:	retf   
  40b804:	int3   
  40b805:	xor    eax,0x5412ab90
  40b80a:	popa   
  40b80b:	xor    eax,0xff44bc2
  40b810:	mov    bh,0xcb
  40b812:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b813:	addr16 pop es
  40b815:	dec    ecx
  40b816:	push   esi
  40b817:	sbb    BYTE PTR [edx],ch
  40b819:	into   
  40b81a:	adc    eax,0xa1723567
  40b81f:	les    edx,FWORD PTR [ebp+edx*8-0x4b]
  40b823:	fst    st(3)
  40b825:	mov    eax,0x1a870405
  40b82a:	cmp    al,BYTE PTR [ebx]
  40b82c:	call   0xc3eb:0xaf9a2190
  40b833:	out    0xf1,eax
  40b835:	inc    ebp
  40b836:	popf   
  40b837:	scas   eax,DWORD PTR es:[edi]
  40b838:	dec    eax
  40b839:	outs   dx,DWORD PTR es:[esi]
  40b83b:	lahf   
  40b83c:	loop   0x40b7cd
  40b83e:	fcmovbe st,st(2)
  40b840:	ja     0x40b7dd
  40b842:	cmp    eax,0x7611ec29
  40b847:	mov    BYTE PTR es:[ebx],0xf9
  40b84b:	enter  0x5892,0x32
  40b84f:	mov    al,0x4f
  40b851:	mov    eax,0x887b5664
  40b856:	fdivr  DWORD PTR [ecx+0xa]
  40b859:	ficomp WORD PTR [esi-0x5d]
  40b85c:	shl    BYTE PTR [ebx+esi*1+0x4f],0xb8
  40b861:	sbb    ebx,esi
  40b863:	cmp    eax,0x55aae8ae
  40b868:	mov    edx,ebp
  40b86a:	psrlw  mm5,QWORD PTR [esi-0x2841b8e9]
  40b871:	mov    ecx,0xbcbfae90
  40b876:	jae    0x40b8ea
  40b878:	das    
  40b879:	dec    edi
  40b87a:	pop    ebp
  40b87b:	and    eax,0xec3c80c6
  40b880:	push   ebp
  40b881:	imul   esi,DWORD PTR [edi],0xffffffe5
  40b884:	sbb    DWORD PTR [edx-0xdb92e24],ebp
  40b88a:	sbb    al,0x18
  40b88c:	adc    eax,0x12adcbcc
  40b891:	jl     0x40b8d6
  40b893:	fld    st(5)
  40b895:	mov    bl,0x2a
  40b897:	cmp    DWORD PTR [esi-0x6b],ebx
  40b89a:	dec    edi
  40b89b:	les    eax,FWORD PTR ds:0xb636a1c6
  40b8a1:	or     dl,BYTE PTR [edx]
  40b8a3:	cmp    al,0x1b
  40b8a5:	ds dec ebp
  40b8a7:	dec    ecx
  40b8a8:	in     eax,0x13
  40b8aa:	add    ebx,DWORD PTR [esi]
  40b8ac:	fs push ds
  40b8ae:	pushf  
  40b8af:	xchg   esi,eax
  40b8b0:	add    BYTE PTR [esi+0x69408e03],al
  40b8b6:	icebp  
  40b8b7:	sbb    al,0xab
  40b8b9:	jmp    0xb8b4:0x9964c87e
  40b8c0:	shr    DWORD PTR [esi-0x79],1
  40b8c3:	retf   
  40b8c4:	loope  0x40b926
  40b8c6:	stos   DWORD PTR es:[edi],eax
  40b8c7:	adc    DWORD PTR [ebx+0x567b20e9],eax
  40b8cd:	pusha  
  40b8ce:	enter  0xf938,0xe8
  40b8d2:	iret   
  40b8d3:	mov    ebp,DWORD PTR [esi-0x2bd9a9c7]
  40b8d9:	cmp    eax,0x717c79d7
  40b8de:	mov    edx,0x18b4e89d
  40b8e3:	out    0xee,al
  40b8e5:	out    0xb1,al
  40b8e7:	ja     0x40b88a
  40b8e9:	or     DWORD PTR [esi],esp
  40b8eb:	(bad)  
  40b8ec:	cmp    BYTE PTR [edi-0x2d],dh
  40b8ef:	pusha  
  40b8f0:	aaa    
  40b8f1:	xor    al,0x5c
  40b8f3:	ins    DWORD PTR es:[edi],dx
  40b8f4:	sti    
  40b8f5:	cli    
  40b8f6:	mov    ch,0x8b
  40b8f8:	(bad)  
  40b8f9:	jle    0x40b94b
  40b8fb:	push   ds
  40b8fc:	sub    eax,0xea4c45f5
  40b901:	push   ss
  40b902:	pop    ebx
  40b903:	cwde   
  40b904:	mov    esp,0x7825359
  40b909:	sbb    dx,WORD PTR [edi+esi*1]
  40b90d:	jg     0x40b98e
  40b90f:	jmp    0xb10723c4
  40b914:	mov    al,ds:0x8878c58b
  40b919:	mov    ch,0x80
  40b91b:	adc    bh,BYTE PTR [edx]
  40b91d:	adc    al,0x8e
  40b91f:	push   ecx
  40b920:	dec    si
  40b922:	cmp    cl,cl
  40b924:	mov    ds:0x7912b811,al
  40b929:	inc    ebx
  40b92a:	sub    DWORD PTR ds:0xf23ff0ca,esi
  40b930:	scas   eax,DWORD PTR es:[edi]
  40b931:	pop    esp
  40b932:	lahf   
  40b933:	into   
  40b934:	jb     0x40b900
  40b936:	push   esi
  40b937:	ror    DWORD PTR [ecx-0x59],1
  40b93a:	xlat   BYTE PTR ds:[ebx]
  40b93b:	shr    BYTE PTR [ecx+esi*2-0x56],cl
  40b93f:	imul   edi,DWORD PTR [esi],0x978b70ae
  40b945:	dec    ebx
  40b946:	ins    BYTE PTR es:[edi],dx
  40b947:	stos   DWORD PTR es:[edi],eax
  40b948:	dec    edx
  40b949:	lea    esi,[eax+0xf]
  40b94c:	aam    0x6c
  40b94e:	jae    0x40b98c
  40b950:	arpl   WORD PTR [ebx+edi*1+0x3623fe40],si
  40b957:	dec    ecx
  40b958:	(bad)  
  40b959:	and    esp,DWORD PTR [edx-0x34dbc452]
  40b95f:	leave  
  40b960:	mov    bl,0xde
  40b962:	sub    dh,BYTE PTR [edi-0x1638d1c1]
  40b968:	push   edi
  40b969:	mov    ds:0x1d663591,eax
  40b96e:	enter  0xff62,0x1d
  40b972:	add    DWORD PTR [ecx-0x6d05e4c6],edi
  40b978:	aam    0x40
  40b97a:	xchg   edx,eax
  40b97b:	and    ch,ah
  40b97d:	ret    0x695c
  40b980:	adc    esp,DWORD PTR [ebp+0x38]
  40b983:	jl     0x40b9e2
  40b985:	adc    DWORD PTR [esi+0x6e9f552c],0xab03661e
  40b98f:	leave  
  40b990:	dec    esi
  40b991:	and    BYTE PTR ds:0xb3c357b6,ch
  40b997:	inc    ecx
  40b998:	mov    ah,0x4c
  40b99a:	push   cs
  40b99b:	das    
  40b99c:	cmp    dl,BYTE PTR [edi+edi*1-0x7f16dbbb]
  40b9a3:	mov    BYTE PTR [ebx+ebp*1-0x33],cl
  40b9a7:	mov    ?,WORD PTR [esi-0x72]
  40b9aa:	cmp    cl,dl
  40b9ac:	neg    esi
  40b9ae:	cld    
  40b9af:	sub    ecx,DWORD PTR [edx-0x5c]
  40b9b2:	xchg   esi,eax
  40b9b3:	push   edx
  40b9b4:	cwde   
  40b9b5:	aaa    
  40b9b6:	mov    edx,0x7667c3fa
  40b9bb:	mov    eax,ds:0x3830ade9
  40b9c0:	popf   
  40b9c1:	sub    ah,bl
  40b9c3:	inc    ebp
  40b9c4:	pop    esp
  40b9c5:	xor    BYTE PTR [ebp-0x5b5cf359],ah
  40b9cb:	lahf   
  40b9cc:	and    ecx,DWORD PTR ds:0x873c9048
  40b9d2:	test   eax,0x5fe31598
  40b9d7:	sbb    dl,0x28
  40b9da:	bswap  eax
  40b9dc:	inc    ebp
  40b9dd:	jae    0x40b9ac
  40b9df:	shl    BYTE PTR [edx+0x2f],0x3a
  40b9e3:	(bad)  
  40b9e4:	cmp    ecx,DWORD PTR [edi-0x4f]
  40b9e7:	mov    cl,0xcd
  40b9e9:	mov    al,ds:0xaffb0c74
  40b9ee:	stos   DWORD PTR es:[edi],eax
  40b9ef:	pop    ebx
  40b9f0:	or     ebp,DWORD PTR [ebx+0x2c1f50a2]
  40b9f6:	xchg   DWORD PTR [eax],ecx
  40b9f8:	fisub  WORD PTR [ebx-0x2d]
  40b9fb:	or     edi,DWORD PTR [ebx+0x452fd060]
  40ba01:	mov    esp,0xa53e74f
  40ba06:	sub    ecx,DWORD PTR [ebx+edi*1+0x7d2edc6b]
  40ba0d:	xor    edi,DWORD PTR [edi]
  40ba0f:	or     edi,DWORD PTR [ecx-0x80]
  40ba12:	shl    edx,0x74
  40ba15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba16:	jp     0x40ba93
  40ba18:	out    0xed,eax
  40ba1a:	add    BYTE PTR [ecx],0x44
  40ba1d:	adc    BYTE PTR [ebx],ch
  40ba1f:	sahf   
  40ba20:	inc    ebx
  40ba21:	lahf   
  40ba22:	outs   dx,DWORD PTR ds:[esi]
  40ba23:	dec    eax
  40ba24:	push   0xffffff8d
  40ba26:	leave  
  40ba27:	push   esp
  40ba28:	mov    ah,0xe9
  40ba2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba2b:	idiv   DWORD PTR [esi-0x51]
  40ba2e:	je     0x40ba46
  40ba30:	imul   esp,ecx,0xffffffe1
  40ba33:	rcr    BYTE PTR [ecx+0x7dbf308f],0x3c
  40ba3a:	inc    ebx
  40ba3b:	xor    al,0xe2
  40ba3d:	ror    BYTE PTR [eax-0x13d321b6],0xd
  40ba44:	mov    dl,0x6d
  40ba46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba47:	pop    eax
  40ba48:	dec    edx
  40ba49:	gs jl  0x40ba1c
  40ba4c:	ret    0x6370
  40ba4f:	ret    
  40ba50:	jb     0x40b9e9
  40ba52:	dec    edx
  40ba53:	out    0xe0,eax
  40ba55:	lods   al,BYTE PTR ds:[esi]
  40ba56:	and    al,0xf
  40ba58:	dec    ebx
  40ba59:	aaa    
  40ba5a:	dec    ebp
  40ba5b:	aas    
  40ba5c:	scas   al,BYTE PTR es:[edi]
  40ba5d:	scas   al,BYTE PTR es:[edi]
  40ba5e:	in     al,0xf1
  40ba60:	jg     0x40ba1c
  40ba62:	and    DWORD PTR [esp+ebx*2-0x26d032cc],ebx
  40ba69:	aas    
  40ba6a:	fucomi st,st(0)
  40ba6c:	aam    0xa3
  40ba6e:	mov    bh,0xf4
  40ba70:	mov    al,ds:0x9b0febf2
  40ba75:	pop    ebx
  40ba76:	dec    esp
  40ba77:	aad    0x78
  40ba79:	mov    WORD PTR [edi-0x68],es
  40ba7c:	jmp    0x5cf9:0x48245e76
  40ba83:	ret    
  40ba84:	add    al,BYTE PTR [edi+0x71]
  40ba87:	(bad)  
  40ba88:	sbb    BYTE PTR [edx+0x72],ah
  40ba8b:	rol    BYTE PTR [ebp+0x66],cl
  40ba8e:	pop    ss
  40ba8f:	pop    ebp
  40ba90:	sbb    eax,0xa99ce5e8
  40ba95:	push   ebx
  40ba96:	sahf   
  40ba97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba98:	sub    eax,0x2a3a0890
  40ba9d:	mov    ss,WORD PTR [ebx-0x2]
  40baa0:	call   0xf051:0xcbdf371b
  40baa7:	fdivr  QWORD PTR [edx+0x4bafb6dc]
  40baad:	or     esi,DWORD PTR [ecx+ecx*2+0x39]
  40bab1:	ror    BYTE PTR [edi+ebx*2-0x60],cl
  40bab5:	test   eax,0xceda3591
  40baba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40babb:	imul   ebp
  40babd:	daa    
  40babe:	dec    ecx
  40babf:	minps  xmm6,XMMWORD PTR [edi]
  40bac2:	arpl   WORD PTR [eax-0x34],cx
  40bac5:	es (bad) 
  40bac7:	sbb    BYTE PTR ds:0xaf6c45dc,ah
  40bacd:	scas   al,BYTE PTR es:[edi]
  40bace:	pushf  
  40bacf:	jmp    0x3be0:0x27bebab9
  40bad6:	inc    ecx
  40bad7:	or     al,0xc6
  40bad9:	js     0x40bae0
  40badb:	inc    esp
  40badc:	lods   eax,DWORD PTR ds:[esi]
  40badd:	inc    esi
  40bade:	cmp    edx,ecx
  40bae0:	sub    DWORD PTR [edx+0x75ade7d6],ebp
  40bae6:	cmp    BYTE PTR [esi-0x133e40f],dl
  40baec:	xor    eax,0x106fdb7f
  40baf1:	neg    DWORD PTR [edi+0x5b]
  40baf4:	jns    0x40baef
  40baf6:	iret   
  40baf7:	fbstp  TBYTE PTR [esi+0x7879c7ca]
  40bafd:	jae    0x40bac3
  40baff:	jne    0x40bb65
  40bb01:	into   
  40bb02:	fsubr  st,st(3)
  40bb04:	jmp    0x40bb2a
  40bb06:	dec    edx
  40bb07:	ds inc ebp
  40bb09:	mov    ds:0x8b047ac6,al
  40bb0e:	adc    al,0x8e
  40bb10:	sub    edi,DWORD PTR [eax]
  40bb12:	pop    ebx
  40bb13:	ds inc edi
  40bb15:	pop    edi
  40bb16:	das    
  40bb17:	jg     0x40bab9
  40bb19:	es in  al,dx
  40bb1b:	and    eax,0xcc6134a1
  40bb20:	add    BYTE PTR [edi-0x350b4adf],0xa5
  40bb27:	jnp    0x40bada
  40bb29:	and    edi,DWORD PTR [ecx+0x56]
  40bb2c:	push   es
  40bb2d:	fadd   DWORD PTR [eax]
  40bb2f:	dec    eax
  40bb30:	pusha  
  40bb31:	mov    edx,0x18c2322c
  40bb36:	mov    BYTE PTR [eax],al
  40bb38:	in     al,dx
  40bb39:	fs into 
  40bb3b:	in     al,0x8b
  40bb3d:	mov    bh,0xc3
  40bb3f:	aam    0x55
  40bb41:	out    dx,eax
  40bb42:	shl    DWORD PTR [ecx+ebx*4],0x57
  40bb46:	sbb    cl,cl
  40bb48:	je     0x40bb9d
  40bb4a:	mov    dl,0x92
  40bb4c:	sbb    dh,bl
  40bb4e:	pop    edi
  40bb4f:	leave  
  40bb50:	sub    al,0xc8
  40bb52:	adc    bl,al
  40bb54:	jnp    0x40bb1e
  40bb56:	fld    DWORD PTR [esi+0x2dbaa1b8]
  40bb5c:	int3   
  40bb5d:	dec    esi
  40bb5e:	or     esi,DWORD PTR [esi]
  40bb60:	pop    eax
  40bb61:	mov    bl,0xc0
  40bb63:	sbb    DWORD PTR [ebx-0x53],ebx
  40bb66:	xchg   ebx,eax
  40bb67:	shr    ch,0x72
  40bb6a:	inc    edi
  40bb6b:	icebp  
  40bb6c:	xchg   ebx,eax
  40bb6d:	add    DWORD PTR [esi+0x60],ebx
  40bb70:	push   edi
  40bb71:	jne    0x40bb10
  40bb73:	cmp    ebx,ebp
  40bb75:	shl    BYTE PTR [ebp+0x1dfa9d8],1
  40bb7b:	gs dec ebx
  40bb7d:	jae    0x40bb65
  40bb7f:	inc    eax
  40bb80:	or     BYTE PTR [edx],0xe2
  40bb83:	jg     0x40bb89
  40bb85:	lods   eax,DWORD PTR ds:[esi]
  40bb86:	mov    ?,WORD PTR [ebx]
  40bb88:	adc    eax,0x7c3dc301
  40bb8d:	pushf  
  40bb8e:	clc    
  40bb8f:	std    
  40bb90:	aad    0x48
  40bb92:	rol    DWORD PTR ds:[esi],0xa4
  40bb96:	xor    esi,0xffffff96
  40bb99:	sub    bh,cl
  40bb9b:	inc    esp
  40bb9c:	loop   0x40bbc8
  40bb9e:	sti    
  40bb9f:	shl    BYTE PTR [esi],1
  40bba1:	aam    0xdd
  40bba3:	imul   esp,esp,0xffffff96
  40bba6:	mov    dh,0x19
  40bba8:	add    ebp,DWORD PTR [eax+0x5b]
  40bbab:	loopne 0x40bc12
  40bbad:	int    0xc3
  40bbaf:	shld   DWORD PTR [esi+0x4249b9b2],esp,0xd6
  40bbb7:	inc    esi
  40bbb8:	and    cl,dl
  40bbba:	mov    al,0x61
  40bbbc:	mov    ch,0x10
  40bbbe:	addr16 xchg edi,eax
  40bbc0:	fadd   DWORD PTR [ebx+ebp*2]
  40bbc3:	jle    0x40bbd9
  40bbc5:	and    ch,al
  40bbc7:	xor    BYTE PTR [ebp-0x7],ah
  40bbca:	fldcw  WORD PTR [ebx]
  40bbcc:	dec    edx
  40bbcd:	test   DWORD PTR [ecx+0x31],eax
  40bbd0:	test   ah,0xe7
  40bbd3:	test   BYTE PTR [edx],ch
  40bbd5:	neg    BYTE PTR [ebx-0x670a2680]
  40bbdb:	cdq    
  40bbdc:	jmp    0xb954e4e2
  40bbe1:	dec    edx
  40bbe2:	push   0xfffffffa
  40bbe4:	mov    bh,0x55
  40bbe6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbe7:	mov    eax,ds:0xf9bfa9c5
  40bbec:	inc    ebx
  40bbed:	add    BYTE PTR [edx+0x3c],dl
  40bbf0:	dec    edi
  40bbf1:	or     al,0x78
  40bbf3:	loope  0x40bb80
  40bbf5:	mov    cl,0xdd
  40bbf7:	sbb    al,0xb5
  40bbf9:	data16 cmp cl,dl
  40bbfc:	mov    ds:0xb931df84,eax
  40bc01:	lea    esp,[ebp-0x166b27b5]
  40bc07:	jmp    0x40bc3f
  40bc09:	pop    edi
  40bc0a:	test   dl,dl
  40bc0c:	pop    ebx
  40bc0d:	rcl    BYTE PTR [edi-0x9c43b37],0x39
  40bc14:	ret    
  40bc15:	jge    0x40bbc3
  40bc17:	push   edi
  40bc18:	fst    DWORD PTR [esi]
  40bc1a:	lds    ebp,FWORD PTR [edx-0x711a0304]
  40bc20:	sbb    edi,0xffffff97
  40bc23:	mov    dl,0xc8
  40bc25:	aaa    
  40bc26:	loope  0x40bbd2
  40bc28:	je     0x40bbf2
  40bc2a:	iret   
  40bc2b:	or     al,0xc8
  40bc2d:	jmp    0xdc8480df
  40bc32:	or     dl,bl
  40bc34:	cmc    
  40bc35:	sar    DWORD PTR [edi+0x52],0xc1
  40bc39:	and    BYTE PTR [esi-0x6e],cl
  40bc3c:	xchg   DWORD PTR [eax-0x1e1d67b4],edx
  40bc42:	sbb    BYTE PTR [esi+0x53b88d79],0xd2
  40bc49:	popf   
  40bc4a:	mul    al
  40bc4c:	ins    DWORD PTR es:[edi],dx
  40bc4d:	repnz cmp ebx,ecx
  40bc50:	dec    esi
  40bc51:	dec    ecx
  40bc52:	js     0x40bc1b
  40bc54:	dec    eax
  40bc55:	or     DWORD PTR [ecx],eax
  40bc57:	pop    ss
  40bc58:	jnp    0x40bc0d
  40bc5a:	jnp    0x40bcb4
  40bc5c:	jo     0x40bcaf
  40bc5e:	repnz and esi,edx
  40bc61:	call   0x2b0afd6a
  40bc66:	popf   
  40bc67:	(bad)  
  40bc68:	(bad)  
  40bc69:	fiadd  WORD PTR [ecx-0x5fa71d49]
  40bc6f:	jmp    0xdfa21939
  40bc74:	mov    al,0xba
  40bc76:	push   es
  40bc77:	push   cs
  40bc78:	fadd   QWORD PTR [edi]
  40bc7a:	imul   eax,DWORD PTR [ecx-0x4e],0x7505f342
  40bc81:	mov    bl,0x3a
  40bc83:	stc    
  40bc84:	popa   
  40bc85:	mov    edx,0x56a24b0d
  40bc8a:	add    BYTE PTR [edi+0x2fd3ea7d],bh
  40bc90:	xchg   BYTE PTR [ebx+eax*8+0x171a9093],cl
  40bc97:	fwait
  40bc98:	pop    edi
  40bc99:	dec    ebp
  40bc9a:	pop    ss
  40bc9b:	popf   
  40bc9c:	sbb    BYTE PTR [eax],0x39
  40bc9f:	in     eax,dx
  40bca0:	xchg   ebp,eax
  40bca1:	adc    eax,0xbc612c0f
  40bca6:	fsub   QWORD PTR [ebx]
  40bca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bca9:	hlt    
  40bcaa:	pop    esp
  40bcab:	jmp    0x40bc49
  40bcad:	xchg   edi,eax
  40bcae:	(bad)  
  40bcaf:	loopne 0x40bd28
  40bcb1:	xchg   esp,eax
  40bcb2:	ds dec edx
  40bcb4:	daa    
  40bcb5:	mov    dl,0xea
  40bcb7:	imul   ebp,DWORD PTR [esi],0x1c57a4f7
  40bcbd:	enter  0x116e,0xb0
  40bcc1:	sbb    esp,DWORD PTR [edx+0x5f47bd2]
  40bcc7:	lea    esi,[ecx-0x7952175f]
  40bccd:	cmp    BYTE PTR [edx+ebx*4],ch
  40bcd0:	pusha  
  40bcd1:	push   ebx
  40bcd2:	mov    ds:0x79c6eb02,eax
  40bcd7:	cld    
  40bcd8:	imul   ebp,DWORD PTR [edx+edi*8-0x61],0xffffff84
  40bcdd:	mov    al,ds:0xacf1eeaf
  40bce2:	add    DWORD PTR [edi+0x5f718ed],0xd
  40bce9:	push   edx
  40bcea:	jmp    0xe410:0xbf418c5b
  40bcf1:	jns    0x40bcc2
  40bcf3:	out    0xa5,al
  40bcf5:	push   esp
  40bcf6:	jle    0x40bc84
  40bcf8:	pop    edi
  40bcf9:	adc    eax,0xc243580d
  40bcfe:	and    esi,eax
  40bd00:	shl    dh,0xfe
  40bd03:	push   ebp
  40bd04:	sub    DWORD PTR [edx],ebp
  40bd06:	sbb    dh,BYTE PTR [eax-0x61675df0]
  40bd0c:	mov    dl,0x4c
  40bd0e:	add    al,0x4a
  40bd10:	mov    ?,WORD PTR [edx+edi*1+0x19dabcd6]
  40bd17:	fcomip st,st(6)
  40bd19:	sub    al,0x35
  40bd1b:	sbb    BYTE PTR [edi+0x293f1034],0x57
  40bd22:	int3   
  40bd23:	sub    BYTE PTR [edi],dh
  40bd25:	aad    0x7f
  40bd27:	and    DWORD PTR [edx+ebx*4],ebp
  40bd2a:	mov    al,ds:0xefbb9d20
  40bd2f:	enter  0xcbd8,0x16
  40bd33:	sahf   
  40bd34:	ret    0xf727
  40bd37:	stos   DWORD PTR es:[edi],eax
  40bd38:	loopne 0x40bd92
  40bd3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd3b:	xchg   esp,eax
  40bd3c:	inc    esp
  40bd3d:	lds    ecx,FWORD PTR [ebx-0x853e3e7]
  40bd43:	push   ds
  40bd44:	cli    
  40bd45:	ja     0x40bd75
  40bd47:	xchg   edx,eax
  40bd48:	sete   BYTE PTR ds:0x1d7f84f6
  40bd4f:	cmp    BYTE PTR [esi+0x26],bl
  40bd52:	jnp    0x40bd40
  40bd54:	mov    ecx,0xcd630fb5
  40bd59:	and    eax,0x3f219a9c
  40bd5e:	arpl   WORD PTR [ebx-0x18],cx
  40bd61:	mov    dl,0xe3
  40bd63:	(bad)  
  40bd64:	xchg   ebp,eax
  40bd65:	js     0x40bd07
  40bd67:	sar    BYTE PTR [edx],cl
  40bd69:	adc    ah,0xe4
  40bd6c:	add    al,0x9e
  40bd6e:	lahf   
  40bd6f:	and    BYTE PTR [edx-0x48],bl
  40bd72:	icebp  
  40bd73:	inc    ebx
  40bd74:	inc    edi
  40bd75:	sar    DWORD PTR [eax+0x4],0x42
  40bd79:	pusha  
  40bd7a:	adc    eax,0x73ce7893
  40bd7f:	mov    ebp,0x31f1416a
  40bd84:	ret    
  40bd85:	and    al,0x74
  40bd87:	jne    0x40bd2c
  40bd89:	icebp  
  40bd8a:	out    0x19,al
  40bd8c:	ins    DWORD PTR es:[edi],dx
  40bd8d:	loopne 0x40bd4f
  40bd8f:	xchg   edx,eax
  40bd90:	mov    esp,0x38531047
  40bd95:	in     eax,0xf9
  40bd97:	mov    al,0xad
  40bd99:	loopne 0x40bd85
  40bd9b:	cmp    edi,eax
  40bd9d:	test   eax,0x372be1d1
  40bda2:	leave  
  40bda3:	xchg   DWORD PTR [esp+esi*4+0x740e9f12],esi
  40bdaa:	pop    ds
  40bdab:	js     0x40be10
  40bdad:	mov    cl,0xfa
  40bdaf:	pop    es
  40bdb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdb1:	in     eax,0xd5
  40bdb3:	sub    BYTE PTR [eax],ch
  40bdb5:	dec    edi
  40bdb6:	add    edx,ebp
  40bdb8:	cdq    
  40bdb9:	mov    ?,WORD PTR [ecx+0x2f66e5b4]
  40bdbf:	(bad)  
  40bdc0:	out    dx,eax
  40bdc1:	sar    DWORD PTR [edx+eiz*8],cl
  40bdc4:	fs pop edi
  40bdc6:	in     al,0x3d
  40bdc8:	and    BYTE PTR [eiz*2+0x18a9ac4c],ah
  40bdcf:	adc    dl,al
  40bdd1:	daa    
  40bdd2:	mov    eax,ds:0x623cddc
  40bdd7:	addr16 inc eax
  40bdd9:	inc    eax
  40bdda:	jbe    0x40be06
  40bddc:	or     eax,0x4a11be2c
  40bde1:	sbb    esi,DWORD PTR [ebx-0x75]
  40bde4:	cmp    esp,DWORD PTR [esp+edi*2-0x32]
  40bde8:	les    ecx,FWORD PTR [ecx-0x54d0e658]
  40bdee:	leave  
  40bdef:	fwait
  40bdf0:	fwait
  40bdf1:	mov    ds:0xe1739d2d,al
  40bdf6:	mov    fs,eax
  40bdf8:	sub    eax,0x2d69a080
  40bdfd:	adc    dl,BYTE PTR [edi]
  40bdff:	push   ecx
  40be00:	push   ebp
  40be01:	fcom   DWORD PTR [bx+si]
  40be04:	mov    bh,BYTE PTR [ecx]
  40be06:	mov    ecx,0xf138de0f
  40be0b:	adc    bl,cl
  40be0d:	xor    DWORD PTR [ebp+ecx*2-0x9],edi
  40be11:	cmc    
  40be12:	dec    ebp
  40be13:	adc    eax,0xfe67a17e
  40be19:	test   BYTE PTR [eax+0x75],0x3d
  40be1d:	mov    ebx,0xd85e2c07
  40be22:	push   eax
  40be23:	loope  0x40be68
  40be25:	mov    esi,0xc29143c
  40be2a:	imul   esi,edi,0xe8bf945a
  40be30:	pop    ebx
  40be31:	jnp    0x40beae
  40be33:	scas   al,BYTE PTR es:[edi]
  40be34:	mov    eax,ds:0xa6b72739
  40be39:	pop    esi
  40be3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be3b:	daa    
  40be3c:	or     DWORD PTR [edi+0x13],ecx
  40be3f:	out    dx,eax
  40be40:	das    
  40be41:	xor    eax,DWORD PTR [ebp+0x45]
  40be44:	xchg   ebx,eax
  40be45:	xlat   BYTE PTR ds:[ebx]
  40be46:	in     al,0xbb
  40be48:	mov    ecx,0x934050ca
  40be4d:	jmp    0x171c:0x72151ce4
  40be54:	int    0xa9
  40be56:	test   BYTE PTR ds:0x5f9ce942,ch
  40be5c:	in     eax,dx
  40be5d:	(bad)  
  40be5e:	dec    ebp
  40be5f:	outs   dx,DWORD PTR ds:[esi]
  40be60:	dec    edi
  40be61:	and    DWORD PTR [ecx-0xe9fb24a],edi
  40be67:	in     al,0x2e
  40be69:	jecxz  0x40bdf8
  40be6b:	jbe    0x40beeb
  40be6d:	or     DWORD PTR [ebx-0x7a],ecx
  40be70:	shr    BYTE PTR [edi-0x64],1
  40be73:	loope  0x40beb9
  40be75:	mov    ch,0x21
  40be77:	xchg   edi,eax
  40be78:	cmp    eax,0x86f9a57
  40be7d:	mov    ebp,ecx
  40be7f:	rcr    DWORD PTR [esi+0x13],0xa0
  40be83:	or     eax,DWORD PTR [eax+0x42f0210e]
  40be89:	aam    0x3
  40be8b:	leave  
  40be8c:	pop    esp
  40be8d:	mov    ch,0x1b
  40be8f:	pop    edx
  40be90:	mov    ecx,0xd394dc4d
  40be95:	rol    BYTE PTR [ebx],cl
  40be97:	add    al,0x67
  40be99:	daa    
  40be9a:	jl     0x18080ec5
  40bea0:	(bad)  [edx]
  40bea2:	pop    es
  40bea3:	xchg   esp,eax
  40bea4:	loope  0x40bf0c
  40bea6:	or     al,0x70
  40bea8:	ja     0x40be6e
  40beaa:	in     eax,0x64
  40beac:	sub    al,0x6a
  40beae:	lods   eax,DWORD PTR ds:[esi]
  40beaf:	sub    eax,DWORD PTR [edx+0x2c14696b]
  40beb5:	push   edx
  40beb6:	mov    al,0xe7
  40beb8:	sbb    eax,0xa342b3f9
  40bebd:	js     0x40bf14
  40bebf:	sbb    eax,DWORD PTR ds:[ebx]
  40bec2:	in     al,0x44
  40bec4:	clc    
  40bec5:	jmp    0xfafa6217
  40beca:	aad    0x86
  40becc:	imul   ebx,ebp
  40becf:	jnp    0x40bea1
  40bed1:	inc    eax
  40bed2:	ins    BYTE PTR es:[edi],dx
  40bed3:	data16 and al,BYTE PTR ds:0x3328a38c
  40beda:	lods   eax,DWORD PTR ds:[esi]
  40bedb:	test   al,0x5b
  40bedd:	xor    eax,0xc4956634
  40bee2:	into   
  40bee3:	push   edi
  40bee4:	cwde   
  40bee5:	(bad)  
  40bee6:	mov    edx,0x44fdbc0c
  40beeb:	cli    
  40beec:	jns    0x40bf5d
  40beee:	jne    0x40be78
  40bef0:	dec    ebx
  40bef1:	adc    esi,edx
  40bef3:	aas    
  40bef4:	jmp    0x40bf00
  40bef6:	jle    0x40bed1
  40bef8:	add    edx,DWORD PTR [esi]
  40befa:	aam    0xb8
  40befc:	adc    ecx,eax
  40befe:	and    eax,0x1d6d4afe
  40bf03:	stos   DWORD PTR es:[edi],eax
  40bf04:	mov    bh,BYTE PTR [ebx+0x79]
  40bf07:	jg     0x40bf31
  40bf09:	fsub   DWORD PTR [eax-0x3e]
  40bf0c:	das    
  40bf0d:	mov    ch,0xfb
  40bf0f:	inc    edi
  40bf10:	and    DWORD PTR [ecx-0x35c8cfd0],eax
  40bf16:	jle    0x40bea5
  40bf18:	pop    esp
  40bf19:	add    eax,0x28ad453
  40bf1e:	enter  0xe6e2,0xd6
  40bf22:	jle    0x40bf00
  40bf24:	daa    
  40bf25:	movaps XMMWORD PTR [edx],xmm4
  40bf28:	jge    0x40bf00
  40bf2a:	(bad)  
  40bf2c:	dec    esp
  40bf2d:	xchg   esi,eax
  40bf2e:	jp     0x40becd
  40bf30:	test   BYTE PTR [ebx+0x24],bh
  40bf33:	mov    ds:0x90031888,al
  40bf38:	dec    ecx
  40bf39:	add    BYTE PTR [ecx-0x11],0xfc
  40bf3d:	in     al,0x99
  40bf3f:	jns    0x40bfb2
  40bf41:	in     al,0x17
  40bf43:	dec    edx
  40bf44:	out    0xc7,al
  40bf46:	push   ss
  40bf47:	jl     0x40bfb8
  40bf49:	and    al,0x1b
  40bf4b:	stc    
  40bf4c:	nop
  40bf4d:	sub    DWORD PTR [ecx],ecx
  40bf4f:	lea    edi,[ecx-0x43]
  40bf52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf53:	pop    eax
  40bf54:	lahf   
  40bf55:	call   0x8c6c:0xff354881
  40bf5c:	xor    eax,0x595f9b3d
  40bf61:	inc    edx
  40bf62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf63:	lea    ebx,[edi]
  40bf65:	jnp    0x40bf26
  40bf67:	(bad)  
  40bf69:	dec    ecx
  40bf6a:	sub    edi,DWORD PTR [ecx-0x1bf28c0c]
  40bf70:	mov    dl,0xdd
  40bf72:	push   0xf745487c
  40bf77:	dec    esi
  40bf78:	mov    DWORD PTR [ecx],ecx
  40bf7a:	loop   0x40bfb4
  40bf7c:	shl    BYTE PTR [edx],0x2
  40bf7f:	add    DWORD PTR [eax],ecx
  40bf81:	xor    al,0xe3
  40bf83:	and    eax,ebp
  40bf85:	push   edi
  40bf86:	pop    edx
  40bf87:	mov    DWORD PTR [esi-0x62],0xf09f0ada
  40bf8e:	pop    esi
  40bf8f:	ret    
  40bf90:	sahf   
  40bf91:	inc    esp
  40bf92:	or     ch,BYTE PTR [eax+0x49b05970]
  40bf98:	jb     0x40bfcd
  40bf9a:	(bad)
  40bf9d:	pop    esi
  40bf9e:	lods   eax,DWORD PTR ds:[esi]
  40bf9f:	les    esp,FWORD PTR ds:0x494a7764
  40bfa5:	sub    DWORD PTR [edx],ebx
  40bfa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfa8:	bound  ebx,QWORD PTR [ecx]
  40bfaa:	inc    ebx
  40bfab:	stos   BYTE PTR es:[edi],al
  40bfac:	(bad)  
  40bfad:	and    DWORD PTR [edx],esp
  40bfaf:	fwait
  40bfb0:	mov    dl,0x9e
  40bfb2:	imul   edx,DWORD PTR [edx],0x6a
  40bfb5:	jecxz  0x40bf3f
  40bfb7:	and    bh,BYTE PTR [ecx+0x6e6b3319]
  40bfbd:	jo     0x40bf96
  40bfbf:	sbb    al,0x6b
  40bfc1:	cld    
  40bfc2:	sahf   
  40bfc3:	pop    edi
  40bfc4:	arpl   WORD PTR [eax+0x48],cx
  40bfc7:	and    eax,0x7ab36850
  40bfcc:	inc    ebp
  40bfcd:	shr    BYTE PTR [ecx-0x76],0xf6
  40bfd1:	and    bl,BYTE PTR [ebp-0x4b]
  40bfd4:	sub    eax,0x607105d
  40bfd9:	jnp    0x40bfef
  40bfdb:	fcom   QWORD PTR ds:0xcd412ed2
  40bfe1:	stos   BYTE PTR es:[edi],al
  40bfe2:	jl     0x40bfc9
  40bfe4:	mov    eax,0xea778625
  40bfe9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfea:	shr    DWORD PTR [esi],0x52
  40bfed:	test   DWORD PTR ss:[ebx],0x4c43d695
  40bff4:	lds    edx,FWORD PTR [ebp+0x414b005f]
  40bffa:	test   eax,0xe0d1243c
  40bfff:	(bad)  
  40c000:	retfw  
  40c002:	mov    DWORD PTR [ebp+0x10f3d612],eax
  40c008:	add    ah,BYTE PTR [ecx+0x51]
  40c00b:	ret    0x8bf
  40c00e:	jecxz  0x40bfa9
  40c010:	or     al,0x3f
  40c012:	cs mov ebx,0xb4d76091
  40c018:	les    edx,FWORD PTR [ebp+0x2beab0d9]
  40c01e:	mov    cl,0xc9
  40c020:	std    
  40c021:	call   0x6df9152a
  40c026:	pop    ecx
  40c027:	push   ss
  40c028:	add    BYTE PTR [eax+0x6f9fd787],cl
  40c02e:	imul   ebp,DWORD PTR [ecx+0x59],0xfffffff0
  40c032:	mov    dl,0xd0
  40c034:	fs mov bh,0xa3
  40c037:	sub    BYTE PTR [eax],al
  40c039:	(bad)  
  40c03a:	cli    
  40c03b:	mov    ebx,DWORD PTR [eax-0x7e]
  40c03e:	add    ebp,esp
  40c040:	retf   0x3ce1
  40c043:	out    0xa5,al
  40c045:	inc    ebx
  40c046:	adc    esi,ebx
  40c048:	jb     0x40bff1
  40c04a:	mov    DWORD PTR [edi-0x6e526ffd],esp
  40c050:	inc    edi
  40c051:	ins    DWORD PTR es:[edi],dx
  40c052:	and    dh,dh
  40c054:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c055:	jne    0x40c064
  40c057:	dec    edx
  40c058:	pop    ds
  40c059:	sub    ecx,DWORD PTR [esi-0x79c4e1dc]
  40c05f:	rol    BYTE PTR [esi+0x48449f1f],1
  40c065:	not    BYTE PTR [ebp+ecx*2+0x12da5d5f]
  40c06c:	add    al,BYTE PTR [ebx+edi*8-0x38]
  40c070:	stos   BYTE PTR es:[edi],al
  40c071:	stos   BYTE PTR es:[edi],al
  40c072:	paddusb mm3,QWORD PTR [edi+0x5b7b2396]
  40c079:	push   ecx
  40c07a:	mov    edi,0xa951db13
  40c07f:	and    BYTE PTR [edx+0x14],ch
  40c082:	xor    edx,ebp
  40c084:	or     DWORD PTR [edi+ebp*1],0x73
  40c088:	mov    esp,0x595a2108
  40c08d:	popf   
  40c08e:	mov    cl,0x4b
  40c090:	mov    edx,0xef23b357
  40c095:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c097:	xchg   ebx,eax
  40c098:	pop    ebp
  40c099:	jo     0x40c05b
  40c09b:	pop    edi
  40c09c:	aam    0xa4
  40c09e:	or     DWORD PTR [edx-0x281d6a94],edx
  40c0a4:	es sub ah,cl
  40c0a7:	sub    al,0x21
  40c0a9:	popa   
  40c0aa:	add    eax,DWORD PTR [eax+0x50]
  40c0ad:	xchg   bh,al
  40c0af:	pop    ecx
  40c0b0:	call   0xad7fc6bd
  40c0b5:	sub    cl,BYTE PTR [ebx-0x3b]
  40c0b8:	mov    bh,0x5b
  40c0ba:	xor    al,0x46
  40c0bc:	clc    
  40c0bd:	push   esi
  40c0be:	inc    edx
  40c0bf:	popa   
  40c0c0:	pop    edi
  40c0c1:	(bad)  
  40c0c2:	shr    BYTE PTR [eax],1
  40c0c4:	and    esi,edi
  40c0c6:	push   eax
  40c0c7:	int3   
  40c0c8:	hlt    
  40c0c9:	mov    bl,0x44
  40c0cb:	xchg   ebp,eax
  40c0cc:	pushf  
  40c0cd:	outs   dx,DWORD PTR ds:[esi]
  40c0ce:	xchg   esp,eax
  40c0cf:	cdq    
  40c0d0:	inc    eax
  40c0d1:	pop    ebp
  40c0d2:	cmp    DWORD PTR [esi],esp
  40c0d4:	push   ecx
  40c0d5:	jge    0x40c0ca
  40c0d7:	inc    DWORD PTR [eax+0x7c]
  40c0da:	pusha  
  40c0db:	fnsave [eax-0x3d]
  40c0de:	push   ss
  40c0df:	shld   edx,edx,0xa6
  40c0e3:	adc    bl,bl
  40c0e5:	ds dec ebx
  40c0e7:	mov    ecx,DWORD PTR ds:0x3b66395c
  40c0ed:	add    DWORD PTR [ecx-0x6035d074],eax
  40c0f3:	loop   0x40c0bf
  40c0f5:	js     0x40c0cc
  40c0f7:	fdiv   QWORD PTR [edi+0x2370dcb3]
  40c0fd:	lods   eax,DWORD PTR ds:[esi]
  40c0fe:	dec    esp
  40c0ff:	mov    ds,edi
  40c101:	adc    ecx,ecx
  40c103:	sub    DWORD PTR [ebp-0x683941b1],edi
  40c109:	add    BYTE PTR [esi+ebx*8-0x60],ah
  40c10d:	jl     0x40c114
  40c10f:	or     ebx,DWORD PTR es:[eax]
  40c112:	xor    al,0x97
  40c114:	mov    eax,0xe399f1e
  40c119:	pop    esi
  40c11a:	sbb    al,BYTE PTR ds:0x359da076
  40c120:	out    0xa3,al
  40c122:	(bad)  [ecx-0x61ee18ba]
  40c128:	cli    
  40c129:	sub    ebp,DWORD PTR [esi+ebx*8-0x200b5391]
  40c130:	addr16 sub al,0x3f
  40c133:	sar    BYTE PTR [eax],cl
  40c135:	outs   dx,DWORD PTR ds:[esi]
  40c136:	cmp    al,0xa9
  40c138:	jecxz  0x40c0d5
  40c13a:	stos   BYTE PTR es:[edi],al
  40c13b:	xchg   edx,eax
  40c13c:	loope  0x40c10c
  40c13e:	pushf  
  40c13f:	ja     0x40c0dd
  40c141:	mov    edx,0x2fd1c2d0
  40c146:	xchg   DWORD PTR [esi+0x4c0a63f],eax
  40c14c:	test   DWORD PTR [esi-0x2d],ebp
  40c14f:	cmp    al,0x8d
  40c151:	and    ch,BYTE PTR cs:[edx-0x30354b9a]
  40c158:	xchg   edi,eax
  40c159:	jb     0x40c108
  40c15b:	cmp    bl,BYTE PTR [edx+0x51]
  40c15e:	or     al,0x56
  40c160:	loope  0x40c1c3
  40c162:	inc    ebp
  40c163:	and    dh,0x1c
  40c166:	je     0x40c1a4
  40c168:	ins    DWORD PTR es:[edi],dx
  40c169:	jge    0x40c1db
  40c16b:	out    dx,al
  40c16c:	int    0xb
  40c16e:	jmp    0x7025:0xbca489f8
  40c175:	js     0x40c150
  40c177:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c178:	fstp   DWORD PTR [ebx-0x79dcd6cd]
  40c17e:	sbb    DWORD PTR [esi-0xa],esi
  40c181:	xchg   esi,eax
  40c182:	xor    eax,0xeca16018
  40c187:	not    DWORD PTR [eax+0x2f621d76]
  40c18d:	sub    BYTE PTR [edx+0x15],0x5
  40c191:	pop    eax
  40c192:	xchg   edx,eax
  40c193:	sub    DWORD PTR [ebp+0x53e1d4e0],0x60eef6dc
  40c19d:	jno    0x40c1bd
  40c19f:	or     al,0x30
  40c1a1:	mov    esi,0x243d718d
  40c1a6:	test   BYTE PTR [edx+0x388578ae],dl
  40c1ac:	sahf   
  40c1ad:	mov    bl,0xb0
  40c1af:	adc    esi,DWORD PTR [esi]
  40c1b1:	jge    0x40c1d9
  40c1b3:	scas   al,BYTE PTR es:[edi]
  40c1b4:	je     0x40c190
  40c1b6:	aaa    
  40c1b7:	or     eax,DWORD PTR [eax+0x12]
  40c1ba:	arpl   ax,cx
  40c1bc:	jg     0x40c1a7
  40c1be:	div    BYTE PTR [ebx]
  40c1c0:	add    ch,BYTE PTR [esi+0x44]
  40c1c3:	cwde   
  40c1c4:	sar    BYTE PTR [eax],1
  40c1c6:	vmovsd xmm7,QWORD PTR cs:[ebp-0x5261191d]
  40c1cf:	push   0x90f33b5c
  40c1d4:	loopne 0x40c1b5
  40c1d6:	xor    DWORD PTR [eax+0x189ac84b],eax
  40c1dc:	cli    
  40c1dd:	adc    eax,0x1355bed4
  40c1e2:	leave  
  40c1e3:	popa   
  40c1e4:	imul   esi,DWORD PTR [eax+0x12],0x5
  40c1e8:	ficomp DWORD PTR [eax-0x1e]
  40c1eb:	xchg   esp,eax
  40c1ec:	in     al,0x67
  40c1ee:	repnz pop edi
  40c1f0:	retf   
  40c1f1:	ds pop ds
  40c1f3:	pop    esp
  40c1f4:	pop    ds
  40c1f5:	test   DWORD PTR [ebx],ebx
  40c1f7:	mov    ds:0xfc42e8d1,al
  40c1fc:	js     0x40c27b
  40c1fe:	(bad)
  40c201:	lea    edi,[esi-0x65]
  40c204:	mov    ebp,0x835884c5
  40c209:	jae    0x40c1c9
  40c20b:	or     dl,ch
  40c20d:	ss sub edx,edi
  40c210:	and    BYTE PTR [edi],al
  40c212:	sub    dh,BYTE PTR [edi]
  40c214:	daa    
  40c215:	enter  0x4d42,0xfa
  40c219:	sub    ah,BYTE PTR [ecx+eax*1+0x28631042]
  40c220:	add    DWORD PTR [ecx],eax
  40c222:	test   al,0x61
  40c224:	clc    
  40c225:	ja     0x40c1dd
  40c227:	stc    
  40c228:	test   eax,0x70ae9048
  40c22d:	jecxz  0x40c1d7
  40c22f:	adc    cl,ah
  40c231:	push   ebx
  40c232:	or     ecx,DWORD PTR [ecx]
  40c234:	(bad)  
  40c236:	jl     0x40c274
  40c238:	and    BYTE PTR [esi+ebx*4+0x59e77c0d],bh
  40c23f:	repnz cmp eax,0xd0fa8114
  40c245:	bnd jno 0x40c26f
  40c248:	retf   0x932
  40c24b:	and    al,bl
  40c24d:	out    dx,al
  40c24e:	add    eax,0x2f6f8c07
  40c253:	(bad)  
  40c255:	or     edx,DWORD PTR [esi]
  40c257:	stc    
  40c258:	pop    es
  40c259:	mov    ebx,ss
  40c25b:	jp     0x40c257
  40c25d:	mov    ds:0xef1f5a1e,eax
  40c262:	jns    0x40c275
  40c264:	fmul   DWORD PTR [esi]
  40c266:	adc    edi,DWORD PTR [ebp+eax*8-0x6995d8b7]
  40c26d:	fisubr WORD PTR [ecx+0xe]
  40c270:	out    0x4d,al
  40c272:	loopne 0x40c2c4
  40c274:	mov    dh,0x49
  40c276:	clc    
  40c277:	pop    ebx
  40c278:	mov    edi,0xb5a6137
  40c27d:	jmp    0xfb9f:0xc10d36ca
  40c284:	arpl   WORD PTR [esi+edi*1-0x5d],cx
  40c288:	mov    ecx,0xda3d0835
  40c28d:	sahf   
  40c28e:	fnstcw WORD PTR [edi-0x6b]
  40c291:	cli    
  40c292:	imul   ecx,DWORD PTR [esi-0x29],0x63
  40c296:	dec    edx
  40c297:	xor    eax,0x69b4c57e
  40c29c:	imul   eax,DWORD PTR [esi],0x12
  40c29f:	movsx  ebx,BYTE PTR [ecx]
  40c2a2:	mov    bh,0x3b
  40c2a4:	xchg   esp,eax
  40c2a5:	and    DWORD PTR [edx+0x17acb533],edx
  40c2ab:	gs or  al,0x55
  40c2ae:	and    eax,DWORD PTR [ebx+0x7a7d104d]
  40c2b4:	jmp    FWORD PTR [ebp-0xecb0884]
  40c2ba:	mov    edi,0x1682ab8a
  40c2bf:	fstp   DWORD PTR [ecx-0x4f]
  40c2c2:	ret    
  40c2c3:	lahf   
  40c2c4:	mov    cl,0x7d
  40c2c6:	cmp    eax,0xb01d8e30
  40c2cb:	test   al,0xfb
  40c2cd:	sbb    al,0x90
  40c2cf:	xchg   ch,bl
  40c2d1:	mov    al,0x8
  40c2d3:	dec    ebp
  40c2d4:	push   edi
  40c2d5:	fwait
  40c2d6:	stc    
  40c2d7:	neg    DWORD PTR [eax-0x57965057]
  40c2dd:	outs   dx,DWORD PTR ds:[esi]
  40c2de:	stos   BYTE PTR es:[edi],al
  40c2df:	sub    BYTE PTR [ecx+0x64797623],dh
  40c2e5:	pop    ebx
  40c2e6:	js     0x40c341
  40c2e8:	shl    BYTE PTR [ecx+0x77dcbe4e],1
  40c2ee:	push   eax
  40c2ef:	ins    DWORD PTR es:[edi],dx
  40c2f0:	enter  0x59a3,0xa8
  40c2f4:	loopne 0x40c303
  40c2f6:	mov    ds:0x9bbd7abc,al
  40c2fb:	pop    esi
  40c2fd:	inc    esp
  40c2fe:	inc    edi
  40c2ff:	in     al,dx
  40c300:	inc    ebp
  40c301:	add    ebx,DWORD PTR [esi+ebx*4-0x48]
  40c305:	xor    dh,BYTE PTR ds:[edi]
  40c308:	shr    DWORD PTR [esi+0x11],cl
  40c30b:	or     cl,bh
  40c30d:	dec    ecx
  40c30e:	in     al,dx
  40c30f:	ins    DWORD PTR es:[edi],dx
  40c310:	loopne 0x40c302
  40c312:	fild   DWORD PTR [edi+0x4e]
  40c315:	jns    0x40c364
  40c317:	push   ebx
  40c318:	fnstcw WORD PTR [ebx+edx*4+0x77]
  40c31c:	ds push ecx
  40c31e:	and    DWORD PTR [eax+ebp*2],edi
  40c321:	mov    es,WORD PTR [edi+esi*2]
  40c324:	pop    edi
  40c325:	cld    
  40c326:	int3   
  40c327:	jno    0x40c322
  40c329:	push   ss
  40c32a:	dec    edi
  40c32b:	aas    
  40c32c:	mov    dh,0x3a
  40c32e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c32f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c330:	mov    ds:0xb38f462c,al
  40c335:	js     0x40c324
  40c337:	sub    DWORD PTR [edi-0x4e],esp
  40c33a:	repz (bad) 
  40c33d:	add    al,0x37
  40c33f:	sbb    BYTE PTR [ebx],ah
  40c341:	scas   al,BYTE PTR es:[edi]
  40c342:	or     DWORD PTR [eax],0xffffffd5
  40c345:	adc    ah,BYTE PTR [edi-0x33]
  40c348:	adc    ebx,DWORD PTR [eax+0x62]
  40c34b:	jbe    0x40c2d5
  40c34d:	adc    eax,0x508e3679
  40c352:	mov    esi,edx
  40c354:	cmp    eax,0x9f364b25
  40c359:	inc    edx
  40c35a:	aas    
  40c35b:	xchg   DWORD PTR [ecx+ebx*1-0x2406128d],esi
  40c362:	inc    esi
  40c363:	lea    eax,[ecx-0x57]
  40c366:	xchg   ecx,eax
  40c367:	mov    eax,0xd0dc71f4
  40c36c:	addr16 mov ecx,0x59362558
  40c372:	adc    bl,ah
  40c374:	push   ss
  40c375:	push   cs
  40c376:	mov    DWORD PTR [edi-0x52],edx
  40c379:	stos   DWORD PTR es:[edi],eax
  40c37a:	mov    al,ds:0xb9b20dba
  40c37f:	sub    BYTE PTR [esi],dh
  40c381:	pop    ss
  40c382:	push   cs
  40c383:	xchg   esi,eax
  40c384:	das    
  40c385:	fmul   QWORD PTR [edi-0x38]
  40c388:	add    al,0x23
  40c38a:	cs jo  0x40c3f8
  40c38d:	adc    eax,DWORD PTR [ebx-0x49e0faf4]
  40c393:	dec    ebp
  40c394:	dec    ecx
  40c395:	and    eax,0xaec3ff90
  40c39a:	test   dl,ch
  40c39c:	cs pop ecx
  40c39e:	jmp    0x40c374
  40c3a0:	stos   DWORD PTR es:[edi],eax
  40c3a1:	ss stos BYTE PTR es:[edi],al
  40c3a3:	mov    dl,0x39
  40c3a5:	push   edi
  40c3a6:	dec    sp
  40c3a8:	fcom   DWORD PTR [eax+0x14]
  40c3ab:	hlt    
  40c3ac:	dec    ebx
  40c3ad:	out    dx,al
  40c3ae:	mov    ds:0xc325a732,al
  40c3b3:	sbb    eax,0xbd2493e9
  40c3b8:	mov    cl,0x6f
  40c3ba:	sub    cl,cl
  40c3bc:	push   ds
  40c3bd:	jae    0x40c41e
  40c3bf:	(bad)  
  40c3c1:	dec    ebx
  40c3c2:	sub    eax,0x1ba38ef1
  40c3c7:	(bad)  
  40c3c8:	mov    dl,0x1a
  40c3ca:	mov    dl,0x8b
  40c3cc:	in     eax,0x7c
  40c3ce:	inc    esp
  40c3cf:	inc    esp
  40c3d0:	scas   eax,DWORD PTR es:[edi]
  40c3d1:	pushf  
  40c3d2:	clc    
  40c3d3:	mov    BYTE PTR [esi],0x16
  40c3d6:	scas   eax,DWORD PTR es:[edi]
  40c3d7:	cmp    BYTE PTR [edx-0x6d],0xe7
  40c3db:	pop    es
  40c3dc:	mov    ds:0x9ceecf0d,al
  40c3e1:	dec    esi
  40c3e2:	inc    BYTE PTR [eax-0x6e]
  40c3e5:	out    0xc4,al
  40c3e7:	test   al,0xb1
  40c3e9:	mov    ecx,0x49245500
  40c3ee:	scas   eax,DWORD PTR es:[edi]
  40c3ef:	cld    
  40c3f0:	push   edi
  40c3f1:	cs jno 0x40c403
  40c3f4:	pusha  
  40c3f5:	jmp    0x6daaf869
  40c3fa:	out    0xc5,al
  40c3fc:	and    eax,DWORD PTR [esi+0x4788fcd7]
  40c402:	sbb    BYTE PTR [esi],0x11
  40c405:	ret    0x4c56
  40c408:	mov    BYTE PTR [edx-0x5463d2e1],cl
  40c40e:	je     0x40c482
  40c410:	fld    TBYTE PTR [eax+0x5c]
  40c413:	clc    
  40c414:	and    ecx,DWORD PTR [edx]
  40c416:	adc    ebp,edi
  40c418:	mov    DWORD PTR [edi-0xb7d8c7f],ebx
  40c41e:	cmc    
  40c41f:	push   0xd7a94701
  40c424:	and    eax,0x660c8cea
  40c429:	and    ch,dh
  40c42b:	sti    
  40c42c:	pop    ss
  40c42d:	pop    ebx
  40c42e:	or     bh,BYTE PTR [ecx]
  40c430:	fist   WORD PTR [ecx-0x235a1ca3]
  40c436:	mov    esi,ss
  40c438:	sar    BYTE PTR [eax],0x51
  40c43b:	(bad)  [esi-0x3f5425d5]
  40c441:	lods   eax,DWORD PTR ds:[esi]
  40c442:	sbb    BYTE PTR [esi],ch
  40c444:	add    al,0x9d
  40c446:	cwde   
  40c447:	repz push ebx
  40c449:	push   esp
  40c44a:	mov    esi,0x809eb8db
  40c44f:	inc    esi
  40c450:	rcl    ah,1
  40c452:	test   DWORD PTR [ebx-0x5a],0x847c3476
  40c459:	mov    eax,ds:0x80b4963c
  40c45e:	inc    ebx
  40c45f:	xchg   ebp,eax
  40c461:	lea    ebx,[edx]
  40c463:	in     eax,dx
  40c464:	sbb    eax,0x2ba1569b
  40c469:	jnp    0x40c4d3
  40c46b:	fdiv   DWORD PTR [esi+0x213fc566]
  40c471:	loop   0x40c439
  40c473:	mov    ds:0xdca35619,al
  40c478:	xchg   esp,eax
  40c479:	inc    edi
  40c47a:	call   FWORD PTR ds:0xc106812c
  40c480:	mov    edi,0xbb20586f
  40c485:	inc    edx
  40c486:	retf   0x4e00
  40c489:	mov    ebp,0x86c14a88
  40c48e:	sar    DWORD PTR [edi],1
  40c490:	(bad)  
  40c491:	fst    DWORD PTR ds:0xfd6bc54d
  40c497:	mov    al,ds:0xc9af13d2
  40c49c:	loopne 0x40c434
  40c49e:	sub    dh,BYTE PTR [eax+0x23]
  40c4a1:	int    0x84
  40c4a3:	adc    al,BYTE PTR [edi+0x35]
  40c4a6:	rcr    BYTE PTR [edi+0xc],cl
  40c4a9:	pop    es
  40c4aa:	pop    esp
  40c4ab:	fldenv [eiz*2+0x5f9896c4]
  40c4b2:	mov    al,BYTE PTR [ebp-0xe02f7d0]
  40c4b8:	push   edi
  40c4b9:	cwde   
  40c4ba:	fisttp QWORD PTR [esi]
  40c4bc:	ret    0x6311
  40c4bf:	into   
  40c4c0:	sbb    al,0x8f
  40c4c2:	in     eax,0x66
  40c4c4:	iret   
  40c4c5:	xchg   edx,eax
  40c4c6:	push   es
  40c4c7:	xor    eax,0xd7987ca2
  40c4cc:	ds out 0x14,al
  40c4cf:	sahf   
  40c4d0:	jns    0x40c45e
  40c4d2:	sbb    al,0xaa
  40c4d4:	out    0x29,al
  40c4d6:	data16 jo 0x40c4b5
  40c4d9:	jge    0x40c4c9
  40c4db:	and    al,0xca
  40c4dd:	sub    bh,dh
  40c4df:	xor    esi,DWORD PTR [ecx+0x163219ea]
  40c4e5:	pop    esp
  40c4e6:	mov    edi,0x76c0677e
  40c4eb:	out    0x84,al
  40c4ed:	push   0xd
  40c4ef:	pop    eax
  40c4f0:	xchg   ebx,eax
  40c4f1:	cld    
  40c4f2:	stc    
  40c4f3:	cmc    
  40c4f4:	inc    ecx
  40c4f5:	sti    
  40c4f6:	xchg   esi,eax
  40c4f7:	pop    esp
  40c4f8:	fild   WORD PTR [ebx]
  40c4fa:	pop    ebx
  40c4fb:	pop    edx
  40c4fc:	sbb    al,0x48
  40c4fe:	jo     0x40c52c
  40c500:	cmp    eax,0xb967bafb
  40c505:	mov    ebp,0x2eff665b
  40c50a:	imul   esp,DWORD PTR [ebp-0xc],0x38173cdd
  40c511:	pop    es
  40c512:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c513:	or     DWORD PTR [eax],eax
  40c515:	lock call 0xb3b7:0x394340f2
  40c51d:	mov    bh,0x1b
  40c51f:	or     ecx,DWORD PTR [ebp-0xf]
  40c522:	outs   dx,DWORD PTR ds:[esi]
  40c523:	fld    TBYTE PTR [edx+0x1806bfbf]
  40c529:	push   0xffffffac
  40c52b:	shl    BYTE PTR [esi+0x2b],0x4a
  40c52f:	in     al,dx
  40c530:	jo     0x40c4f5
  40c532:	loopne 0x40c536
  40c534:	mov    BYTE PTR [eax+0x77],al
  40c537:	and    BYTE PTR [ebp+edi*1+0x1f],ah
  40c53b:	jae    0x40c4c2
  40c53d:	add    DWORD PTR [esi],edx
  40c53f:	adc    al,0xed
  40c542:	mov    ?,bx
  40c545:	mov    al,0xba
  40c547:	sub    al,cl
  40c549:	xchg   ebp,eax
  40c54a:	int    0xf1
  40c54c:	xchg   ebp,eax
  40c54d:	sbb    DWORD PTR [ecx+0x6a],ecx
  40c550:	jb     0x40c5a4
  40c552:	mov    ecx,0xa7356d37
  40c557:	jns    0x40c51a
  40c559:	dec    ecx
  40c55a:	out    0x71,eax
  40c55c:	retf   0xe324
  40c55f:	sub    al,0xd3
  40c561:	inc    edx
  40c562:	mov    eax,ds:0x1a741e93
  40c567:	ins    BYTE PTR es:[edi],dx
  40c568:	push   ebp
  40c569:	sub    eax,0xc0d4eec4
  40c56e:	cmc    
  40c56f:	sahf   
  40c570:	lds    ebx,FWORD PTR [edx-0x411a3537]
  40c576:	push   esp
  40c577:	(bad)  
  40c578:	mov    ecx,0xfe0a3344
  40c57d:	mov    ebx,0x3eb0a68
  40c582:	std    
  40c583:	outs   dx,DWORD PTR ds:[esi]
  40c584:	add    ah,BYTE PTR [edi-0x63]
  40c587:	xor    dl,BYTE PTR [ebp-0x27]
  40c58a:	retf   0x606f
  40c58d:	xchg   esi,eax
  40c58e:	xor    cl,bl
  40c590:	cmp    ebp,DWORD PTR [ebp+0x2fbf0b5b]
  40c596:	jae    0x40c5fc
  40c598:	cdq    
  40c599:	sbb    DWORD PTR [ecx-0x6],0x23
  40c59d:	mov    al,0x53
  40c59f:	and    BYTE PTR [ecx],ch
  40c5a1:	xchg   edx,eax
  40c5a2:	es push ebp
  40c5a4:	mov    esp,ebp
  40c5a6:	sbb    bh,BYTE PTR [ebx]
  40c5a8:	pushf  
  40c5a9:	arpl   WORD PTR [ebx+edx*4+0x32],ax
  40c5ad:	sti    
  40c5ae:	and    edi,DWORD PTR [esi+0x6c]
  40c5b1:	rcr    DWORD PTR [edi+0x6f59dd18],1
  40c5b7:	test   DWORD PTR [bp+di],ebp
  40c5ba:	sahf   
  40c5bb:	imul   ebx
  40c5bd:	xchg   ebx,eax
  40c5be:	cdq    
  40c5bf:	mov    ch,0xfb
  40c5c1:	gs retf 
  40c5c3:	cmc    
  40c5c4:	jl     0x40c60d
  40c5c6:	xor    ebp,DWORD PTR [edi+0x2d]
  40c5c9:	lds    eax,FWORD PTR [edi+ecx*1+0x6b]
  40c5cd:	fs icebp 
  40c5cf:	call   0xc966:0xcace1611
  40c5d6:	retf   
  40c5d7:	xchg   esi,eax
  40c5d8:	ds stos DWORD PTR es:[edi],eax
  40c5da:	test   BYTE PTR [edx],bh
  40c5dc:	xor    ch,dh
  40c5de:	mov    esp,0x47949f61
  40c5e3:	(bad)  
  40c5e4:	xor    eax,0x49c63274
  40c5e9:	pop    eax
  40c5ea:	pop    ebp
  40c5eb:	jmp    0x40c5b9
  40c5ed:	cmp    DWORD PTR [ecx],ecx
  40c5ef:	dec    ecx
  40c5f0:	fldcw  WORD PTR [esi-0x16]
  40c5f3:	scas   eax,DWORD PTR es:[edi]
  40c5f4:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40c5f6:	jmp    0x9c2e:0x9965bb97
  40c5fd:	adc    DWORD PTR [ebx-0x37],0x6e
  40c601:	jge    0x40c5be
  40c603:	adc    eax,0x516d9507
  40c608:	retf   0xeb95
  40c60b:	pop    ebx
  40c60c:	jp     0x40c5dd
  40c60e:	pop    ss
  40c60f:	(bad)  
  40c611:	jnp    0x40c61a
  40c613:	jge    0x40c619
  40c615:	sbb    DWORD PTR [ebx],edx
  40c617:	push   edx
  40c618:	stos   DWORD PTR es:[edi],eax
  40c619:	clc    
  40c61a:	scas   eax,DWORD PTR es:[edi]
  40c61b:	or     eax,0x81efcfde
  40c620:	imul   ebp,DWORD PTR [ecx+0x64ae1b42],0x1933d69e
  40c62a:	icebp  
  40c62b:	ss and eax,0x8e5439e8
  40c631:	ficomp DWORD PTR [ebp+0x1]
  40c634:	jne    0x40c67e
  40c636:	inc    ecx
  40c638:	aaa    
  40c639:	cdq    
  40c63a:	fdivr  QWORD PTR [ecx+edx*1-0x614fd160]
  40c641:	test   DWORD PTR [esi],0xc707746f
  40c647:	in     eax,0xa0
  40c649:	cs xor esi,edi
  40c64c:	xchg   esp,eax
  40c64d:	mov    dh,0x3c
  40c64f:	mov    al,ds:0xb3716d83
  40c654:	cli    
  40c655:	dec    edi
  40c656:	test   eax,0xff734efc
  40c65b:	sbb    BYTE PTR gs:[edi+esi*4+0x2],al
  40c660:	jns    0x40c66b
  40c662:	arpl   si,dx
  40c664:	mov    edx,0x7d3553bb
  40c669:	jns    0x40c6a5
  40c66b:	mov    ecx,0x66c5e887
  40c670:	aam    0x73
  40c672:	addr16 aaa 
  40c674:	stos   DWORD PTR es:[edi],eax
  40c675:	cs or  al,0x3f
  40c678:	es sub cl,ch
  40c67b:	pop    ss
  40c67c:	nop
  40c67d:	mov    WORD PTR [esp+eax*4-0x54],cs
  40c681:	or     DWORD PTR [eax+0x4971bb18],ecx
  40c687:	dec    ebp
  40c688:	and    DWORD PTR [edi+0x50],edi
  40c68b:	xchg   edx,ebx
  40c68d:	mov    cl,ah
  40c68f:	sbb    BYTE PTR [edx-0x7f],ch
  40c692:	cmp    BYTE PTR [eax+0x58ff1a2],al
  40c698:	and    bl,al
  40c69a:	test   BYTE PTR [ebx],dh
  40c69c:	xchg   edi,eax
  40c69d:	jae    0x40c6d4
  40c69f:	xchg   ebx,eax
  40c6a0:	dec    ebp
  40c6a1:	call   FWORD PTR [ebx]
  40c6a3:	aad    0xfc
  40c6a5:	jge    0x40c66d
  40c6a7:	loope  0x40c62d
  40c6a9:	ins    BYTE PTR es:[edi],dx
  40c6aa:	lods   al,BYTE PTR ds:[esi]
  40c6ab:	outs   dx,BYTE PTR ds:[esi]
  40c6ac:	nop
  40c6ad:	sub    BYTE PTR [edx-0x77],ch
  40c6b0:	scas   al,BYTE PTR es:[edi]
  40c6b1:	ds je  0x40c69f
  40c6b4:	lea    eax,[eax-0x55b94f7d]
  40c6ba:	inc    edi
  40c6bb:	in     eax,dx
  40c6bc:	aam    0x74
  40c6be:	out    0xea,al
  40c6c0:	jp     0x40c6cc
  40c6c2:	xchg   ebp,eax
  40c6c3:	add    eax,0x6004c59c
  40c6c8:	out    0x4e,al
  40c6ca:	enter  0xcc3e,0x9f
  40c6ce:	aas    
  40c6cf:	scas   eax,DWORD PTR es:[edi]
  40c6d0:	shl    BYTE PTR [ecx+0x2078f638],1
  40c6d6:	push   edi
  40c6d7:	cmp    ah,BYTE PTR [ecx+edx*2]
  40c6da:	loop   0x40c713
  40c6dc:	fadd   DWORD PTR [edx-0x38]
  40c6df:	jno    0x40c6c3
  40c6e1:	dec    ebx
  40c6e2:	cli    
  40c6e3:	xchg   DWORD PTR [ecx+0x1f8a5977],ebp
  40c6e9:	ret    
  40c6ea:	jae    0x40c6a4
  40c6ec:	ficomp DWORD PTR [ebx-0x11762729]
  40c6f2:	loop   0x40c737
  40c6f4:	xor    eax,0xd67849aa
  40c6f9:	jns    0x40c6bb
  40c6fb:	imul   edi,DWORD PTR [ebx-0x1a7250b6],0xe
  40c702:	sub    eax,0x8b41a72b
  40c707:	xor    al,0x16
  40c709:	shl    BYTE PTR [esi+0x79],0x7d
  40c70d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c70e:	test   ah,al
  40c710:	hlt    
  40c711:	popf   
  40c712:	add    al,0x3
  40c714:	rol    BYTE PTR [ecx],cl
  40c716:	or     cl,BYTE PTR ds:0xe38ee051
  40c71c:	adc    eax,0xd571de6d
  40c721:	ins    DWORD PTR es:[edi],dx
  40c722:	outs   dx,BYTE PTR ds:[esi]
  40c723:	in     eax,dx
  40c724:	dec    edi
  40c725:	push   eax
  40c726:	jge    0x40c770
  40c728:	mov    bl,ah
  40c72a:	mov    BYTE PTR [edx-0x61e1713e],dh
  40c730:	shr    DWORD PTR [ecx+0x58],0xa2
  40c734:	mov    edx,0x2c12f8d2
  40c739:	loopne 0x40c702
  40c73b:	cmp    al,0x4
  40c73d:	push   ebp
  40c73e:	add    ecx,DWORD PTR [ecx+0x47]
  40c741:	(bad)  
  40c742:	jae    0x40c6e0
  40c744:	cmp    DWORD PTR [esi+ecx*2+0x15],0x19
  40c749:	cmp    cl,BYTE PTR [eax+0x22b67bd0]
  40c74f:	dec    ecx
  40c750:	dec    ecx
  40c751:	out    0x32,al
  40c753:	adc    DWORD PTR [ebp-0x5cd506c2],eax
  40c759:	daa    
  40c75a:	arpl   WORD PTR cs:[ebx+0x26a3b8bf],cx
  40c761:	pop    edx
  40c762:	or     al,0xfe
  40c764:	ror    BYTE PTR [edx-0x842e443],0x8
  40c76b:	add    edi,ebx
  40c76d:	(bad)  
  40c76e:	mov    DWORD PTR [edx],0x798f7668
  40c774:	dec    edi
  40c775:	and    BYTE PTR [esi],cl
  40c777:	inc    esp
  40c778:	rcr    DWORD PTR [edx-0x3e],0x18
  40c77c:	jo     0x40c759
  40c77e:	lahf   
  40c77f:	ja     0x40c704
  40c781:	jmp    0x40c71b
  40c783:	inc    ebp
  40c784:	mov    cl,0x2d
  40c786:	pop    esi
  40c787:	push   esi
  40c788:	data16 sbb BYTE PTR [eax],bl
  40c78b:	jecxz  0x40c745
  40c78d:	inc    esi
  40c78e:	push   0x6e
  40c790:	add    ebx,edx
  40c792:	iret   
  40c793:	je     0x40c7cc
  40c795:	nop
  40c796:	or     bh,BYTE PTR [ebp+0x61]
  40c799:	inc    edi
  40c79a:	and    eax,DWORD PTR [edx-0x4f5fadee]
  40c7a0:	aaa    
  40c7a1:	in     al,dx
  40c7a2:	loopne 0x40c765
  40c7a4:	int3   
  40c7a5:	push   cs
  40c7a6:	gs mov ebx,0x10b41895
  40c7ac:	pop    ebp
  40c7ad:	pusha  
  40c7ae:	sbb    al,BYTE PTR [edi+ebp*4]
  40c7b1:	cmp    eax,0x6ca01efb
  40c7b6:	arpl   WORD PTR [edi-0x58],cx
  40c7b9:	jmp    0x40c79d
  40c7bb:	popa   
  40c7bc:	in     eax,0xe5
  40c7be:	clc    
  40c7bf:	sub    eax,0x63c6d34
  40c7c4:	xlat   BYTE PTR ds:[ebx]
  40c7c5:	scas   eax,DWORD PTR es:[edi]
  40c7c6:	ins    DWORD PTR es:[edi],dx
  40c7c7:	nop
  40c7c8:	jp     0x40c7d6
  40c7ca:	mov    bh,0x8a
  40c7cc:	inc    ebp
  40c7cd:	ds xor al,0xd4
  40c7d0:	xchg   ecx,eax
  40c7d1:	test   DWORD PTR [eax+edi*8+0x5e],ecx
  40c7d5:	and    ebx,DWORD PTR [esi]
  40c7d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7d8:	lds    esp,FWORD PTR [ebp-0x7c64f65e]
  40c7de:	sbb    ch,BYTE PTR [edx-0x62]
  40c7e1:	and    bl,dl
  40c7e3:	inc    edi
  40c7e4:	add    bl,BYTE PTR [ebp+0x4d]
  40c7e7:	call   0xdd4d:0x5fa1991d
  40c7ee:	jecxz  0x40c86f
  40c7f0:	(bad)  
  40c7f1:	std    
  40c7f2:	push   cs
  40c7f3:	or     DWORD PTR [esi-0x6a],ebx
  40c7f6:	mov    al,0xd5
  40c7f8:	les    esi,FWORD PTR [edx]
  40c7fa:	jecxz  0x40c845
  40c7fc:	sti    
  40c7fd:	pop    ds
  40c7fe:	setns  BYTE PTR [ebx+0x1d]
  40c802:	mov    BYTE PTR [edi-0x3e],ch
  40c805:	push   esi
  40c806:	out    0x74,eax
  40c808:	push   edi
  40c809:	(bad)  
  40c80a:	test   al,0x9
  40c80c:	lods   eax,DWORD PTR ds:[esi]
  40c80d:	imul   eax,ecx,0x551b8d7d
  40c813:	dec    esi
  40c814:	xchg   esi,eax
  40c815:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c816:	sub    DWORD PTR [edi-0x6c],edi
  40c819:	xchg   edx,eax
  40c81a:	ror    BYTE PTR [ebp-0x79],1
  40c81d:	(bad)  
  40c81e:	cwde   
  40c81f:	loop   0x40c83e
  40c821:	dec    ebp
  40c822:	jmp    DWORD PTR [esi+eiz*8]
  40c825:	cdq    
  40c826:	xchg   ebp,eax
  40c827:	scas   eax,DWORD PTR es:[edi]
  40c828:	sub    BYTE PTR [edx-0x53],al
  40c82b:	xor    bh,ch
  40c82d:	mov    edx,0x7d20133a
  40c832:	enter  0x594a,0x2a
  40c836:	sub    eax,0x9eabad74
  40c83b:	sahf   
  40c83c:	lea    edx,[edx]
  40c83e:	in     eax,0x26
  40c840:	add    eax,0x7c56491c
  40c845:	lods   eax,DWORD PTR ds:[esi]
  40c846:	es mov esi,0x622e1ebf
  40c84c:	xor    DWORD PTR [ecx-0x8],esp
  40c84f:	add    edi,ecx
  40c851:	jb     0x40c899
  40c853:	ja     0x40c868
  40c855:	sub    BYTE PTR [edx-0x6a],bl
  40c858:	aad    0x12
  40c85a:	pusha  
  40c85b:	fimul  WORD PTR [edx+0x1a]
  40c85e:	jmp    0x40c88f
  40c860:	xor    eax,0xf78effc5
  40c865:	pop    ds
  40c866:	(bad)  
  40c867:	pop    edx
  40c868:	jns    0x40c80f
  40c86a:	sub    eax,0xe6790e29
  40c86f:	popa   
  40c870:	adc    al,0x8c
  40c873:	rcl    DWORD PTR [edi+0x10eddf0],0x9
  40c87a:	(bad)  [edi+0x37]
  40c87d:	(bad)  
  40c87f:	mov    al,0x5f
  40c881:	fs add al,0x3e
  40c885:	js     0x40c876
  40c887:	sbb    ebx,DWORD PTR [eax]
  40c889:	jp     0x40c84e
  40c88b:	ss (bad) 
  40c88d:	or     ebp,DWORD PTR [ebx]
  40c88f:	jmp    0x78dfbe33
  40c894:	outs   dx,DWORD PTR ds:[esi]
  40c895:	sbb    dl,bl
  40c897:	adc    BYTE PTR [ecx+0x22],cl
  40c89a:	jle    0x40c8bc
  40c89c:	push   ebx
  40c89d:	pop    ebp
  40c89e:	cmp    eax,DWORD PTR [ebx]
  40c8a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8a1:	inc    ecx
  40c8a2:	inc    ecx
  40c8a3:	lods   eax,DWORD PTR ds:[esi]
  40c8a4:	add    BYTE PTR [eax],ah
  40c8a6:	xor    dh,al
  40c8a8:	call   0x368cb659
  40c8ad:	(bad)  
  40c8ae:	sub    DWORD PTR [edx],ebp
  40c8b0:	aas    
  40c8b1:	call   DWORD PTR [ebx-0x63]
  40c8b4:	or     BYTE PTR [edx+0x7e9f2c79],bl
  40c8ba:	retf   
  40c8bb:	stc    
  40c8bc:	(bad)  
  40c8be:	enter  0x9025,0x87
  40c8c2:	pop    edi
  40c8c3:	push   0x6da3bff4
  40c8c8:	shl    ebx,1
  40c8ca:	lea    eax,[ebx-0x1]
  40c8cd:	fnstsw WORD PTR ds:0x52e53365
  40c8d3:	or     DWORD PTR [ebp+0x71],edi
  40c8d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8d7:	icebp  
  40c8d8:	jb     0x40c8d5
  40c8da:	and    BYTE PTR [edx+0x217023d0],al
  40c8e0:	mov    ch,0xc8
  40c8e2:	dec    esi
  40c8e3:	lods   al,BYTE PTR ds:[esi]
  40c8e4:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40c8e6:	and    eax,0x8e13b68f
  40c8eb:	mov    dl,0xdc
  40c8ed:	push   es
  40c8ee:	lods   eax,DWORD PTR ds:[esi]
  40c8ef:	cmp    edi,eax
  40c8f1:	and    DWORD PTR [eax-0xd],edi
  40c8f4:	cdq    
  40c8f5:	mov    dl,0x16
  40c8f7:	dec    edx
  40c8f8:	mov    ds:0xd3393d4c,eax
  40c8fd:	xchg   ebp,eax
  40c8fe:	and    al,0x4c
  40c900:	lock cmc 
  40c902:	cmp    al,0x26
  40c904:	mov    BYTE PTR [edx],bh
  40c906:	int    0x39
  40c908:	mov    bh,0xdd
  40c90a:	xchg   DWORD PTR [esi],edi
  40c90c:	scas   al,BYTE PTR es:[edi]
  40c90d:	retf   0x9442
  40c910:	dec    ebp
  40c911:	clc    
  40c912:	es sbb al,0x85
  40c915:	push   esp
  40c916:	xchg   ebp,eax
  40c917:	popa   
  40c918:	out    dx,eax
  40c919:	push   0xb08f9bfb
  40c91e:	jp     0x40c8c6
  40c920:	dec    edx
  40c921:	fdivr  DWORD PTR [ecx]
  40c923:	push   ecx
  40c924:	sub    eax,0x980bc833
  40c929:	out    dx,al
  40c92a:	or     esp,DWORD PTR [eax-0x3cbdd9e1]
  40c930:	fs dec edx
  40c932:	call   0x8094:0xff978d6a
  40c939:	test   DWORD PTR [esi+0x4e16f434],eax
  40c93f:	add    ch,dh
  40c941:	cld    
  40c942:	jnp    0x40c915
  40c944:	mov    bl,0x0
  40c946:	dec    esp
  40c947:	popa   
  40c948:	dec    DWORD PTR [edi+0x7fe3a83c]
  40c94e:	jne    0x40c968
  40c950:	ficom  DWORD PTR [ebx]
  40c952:	(bad)  
  40c954:	or     BYTE PTR [esi+ebp*1+0x5d],ch
  40c958:	pop    edx
  40c959:	int3   
  40c95a:	mov    al,0xb6
  40c95c:	fs stos BYTE PTR es:[edi],al
  40c95e:	(bad)  
  40c95f:	sbb    ebp,ebp
  40c961:	dec    esi
  40c962:	imul   eax,DWORD PTR es:0xc0efcbc7,0x6e5a84c0
  40c96d:	cmc    
  40c96e:	jns    0x40c8f2
  40c970:	aam    0x3e
  40c972:	pop    ebp
  40c973:	add    edx,DWORD PTR ds:0x693bcd45
  40c979:	adc    BYTE PTR [ebx-0x7c],bl
  40c97c:	cmp    eax,0x31866e49
  40c981:	or     ecx,ebp
  40c983:	jns    0x40c91b
  40c985:	(bad)  
  40c987:	adc    al,0x39
  40c989:	push   esi
  40c98a:	push   cs
  40c98b:	xchg   BYTE PTR [esi+0x5a5033b9],ah
  40c991:	(bad)  
  40c993:	pop    eax
  40c994:	mov    dl,0x8a
  40c996:	mov    cl,0xd7
  40c998:	add    eax,esp
  40c99a:	lods   al,BYTE PTR ds:[esi]
  40c99b:	and    dl,BYTE PTR [edi]
  40c99d:	xchg   eax,edi
  40c99f:	mov    DWORD PTR [esi+ebp*8],eax
  40c9a2:	pop    edx
  40c9a3:	fst    QWORD PTR [esi+eax*4-0x5a6c1b1d]
  40c9aa:	sub    al,0xd6
  40c9ac:	push   ds
  40c9ad:	push   di
  40c9af:	ss jg  0x40c93f
  40c9b2:	inc    ecx
  40c9b3:	test   eax,0x26fcf650
  40c9b8:	pop    esi
  40c9b9:	fldenv [edx]
  40c9bb:	js     0x40ca1c
  40c9bd:	cmp    esp,esi
  40c9bf:	(bad)  
  40c9c0:	arpl   dx,si
  40c9c2:	sub    BYTE PTR [ebp+0x57e09c20],bh
  40c9c8:	daa    
  40c9c9:	arpl   cx,dx
  40c9cb:	sti    
  40c9cc:	shr    bh,cl
  40c9ce:	retf   
  40c9cf:	imul   ebx,DWORD PTR [esi-0x12],0x32
  40c9d3:	les    eax,FWORD PTR [ebx]
  40c9d5:	ret    0x93a7
  40c9d8:	add    BYTE PTR [ecx+0x26722aa5],0xf9
  40c9df:	test   BYTE PTR [ebx],bh
  40c9e1:	and    al,0x1
  40c9e3:	xchg   esp,eax
  40c9e4:	imul   ebp,DWORD PTR [ebx-0x1021ba6b],0x23
  40c9eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9ec:	or     eax,esp
  40c9ee:	pop    ss
  40c9ef:	lds    ebx,FWORD PTR [ebx+0x79]
  40c9f2:	cmp    al,0x5b
  40c9f4:	dec    esi
  40c9f5:	call   0x6f71:0x2da81fe2
  40c9fc:	(bad)  
  40c9fd:	mov    ds:0x471f2177,al
  40ca02:	xchg   DWORD PTR [esi+0x44a28982],esi
  40ca08:	inc    ecx
  40ca09:	pop    edx
  40ca0a:	sbb    ch,cl
  40ca0c:	idiv   DWORD PTR [ecx-0x2e]
  40ca0f:	rol    esi,cl
  40ca11:	or     al,0x88
  40ca13:	out    dx,eax
  40ca14:	es mov edi,0x680fb7e4
  40ca1a:	daa    
  40ca1b:	fwait
  40ca1c:	pop    ecx
  40ca1d:	popa   
  40ca1e:	outs   dx,BYTE PTR ds:[esi]
  40ca1f:	jne    0x40ca78
  40ca21:	or     eax,0x82b99921
  40ca26:	jae    0x40c9de
  40ca28:	and    bl,ah
  40ca2a:	mov    BYTE PTR [ebp-0x31],0x70
  40ca2e:	outs   dx,BYTE PTR ds:[esi]
  40ca2f:	sahf   
  40ca30:	rcl    BYTE PTR [ecx+eax*8+0x1],0x5
  40ca35:	ret    
  40ca36:	dec    edi
  40ca37:	mov    gs,WORD PTR [ebx-0x11adc317]
  40ca3d:	fbld   TBYTE PTR [edi]
  40ca3f:	rcr    esi,0xe0
  40ca42:	and    eax,0x7c59e00a
  40ca47:	sbb    ch,bh
  40ca49:	cmp    eax,DWORD PTR [ebp-0x15]
  40ca4c:	xor    BYTE PTR [esi],bl
  40ca4e:	fsubr  QWORD PTR [edi-0x4c]
  40ca51:	pop    esp
  40ca52:	stos   DWORD PTR es:[edi],eax
  40ca53:	(bad)
  40ca56:	rcr    esp,1
  40ca58:	xor    DWORD PTR [edi+0x32],eax
  40ca5b:	and    ebp,eax
  40ca5d:	xchg   ecx,eax
  40ca5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca5f:	cmp    DWORD PTR [edx+0xe],0xffffff8f
  40ca63:	or     ch,BYTE PTR [ebx]
  40ca65:	js     0x40ca06
  40ca67:	in     eax,0x1b
  40ca69:	push   cs
  40ca6a:	mov    ah,0xdf
  40ca6c:	push   edi
  40ca6d:	pop    esi
  40ca6e:	clc    
  40ca6f:	and    al,0x6d
  40ca71:	std    
  40ca72:	jnp    0x40ca3a
  40ca74:	jmp    0x4569:0x617bd66d
  40ca7b:	jo     0x40ca70
  40ca7d:	mov    ah,0xf2
  40ca7f:	outs   dx,BYTE PTR ds:[esi]
  40ca80:	dec    esi
  40ca81:	or     al,al
  40ca83:	in     al,dx
  40ca84:	(bad)  
  40ca85:	jbe    0x40ca26
  40ca87:	lahf   
  40ca88:	mov    esi,0x91da9298
  40ca8d:	fsub   QWORD PTR [eax+esi*4]
  40ca90:	shl    BYTE PTR [eax-0x2c],0xe5
  40ca94:	arpl   WORD PTR [ebx],bp
  40ca96:	inc    ecx
  40ca97:	je     0x40ca40
  40ca99:	aam    0x66
  40ca9b:	xor    ah,BYTE PTR [ebp-0x42337bc4]
  40caa1:	sbb    ah,ah
  40caa3:	iret   
  40caa4:	mov    ah,BYTE PTR [esi+edx*1+0x6aa75ddd]
  40caab:	pusha  
  40caac:	imul   esi,DWORD PTR [esi-0x10471699],0xfa54abf2
  40cab6:	pushf  
  40cab7:	ss fmulp st(0),st
  40caba:	hlt    
  40cabb:	dec    ebx
  40cabc:	addr16 (bad) 
  40cabe:	dec    esp
  40cabf:	mov    bh,0x8d
  40cac1:	lods   al,BYTE PTR ds:[esi]
  40cac2:	lods   al,BYTE PTR ds:[esi]
  40cac3:	fcomp  DWORD PTR [esp+ebx*2]
  40cac6:	cmp    eax,0xacb88eed
  40cacb:	rcl    DWORD PTR [edi],1
  40cacd:	adc    BYTE PTR [eax],0x5d
  40cad0:	das    
  40cad1:	push   es
  40cad2:	push   ss
  40cad3:	pop    ecx
  40cad4:	sbb    al,dh
  40cad6:	lock add eax,0x4b2b9db5
  40cadc:	outs   dx,DWORD PTR ds:[esi]
  40cadd:	test   DWORD PTR [edi+edx*1+0x47],ebx
  40cae1:	shr    DWORD PTR [eax+0x7c],1
  40cae4:	pop    edx
  40cae5:	xchg   ebp,eax
  40cae6:	xor    al,0x8
  40cae8:	jg     0x40ca70
  40caea:	cld    
  40caeb:	mov    eax,ds:0x26e15829
  40caf0:	xor    eax,0xef12850f
  40caf5:	shl    BYTE PTR [edx+0x3b],cl
  40caf8:	lock pusha 
  40cafa:	adc    DWORD PTR [edx+0x2d],ebp
  40cafd:	std    
  40cafe:	shl    DWORD PTR [esi],cl
  40cb00:	pop    eax
  40cb01:	push   ebp
  40cb02:	mov    ecx,eax
  40cb04:	sub    DWORD PTR [ecx+ecx*8],ebp
  40cb07:	shl    edi,1
  40cb09:	mov    eax,0x3e1f8971
  40cb0e:	xlat   BYTE PTR ds:[ebx]
  40cb0f:	ret    
  40cb10:	ret    
  40cb11:	shr    BYTE PTR [esi],0xe
  40cb14:	cmp    ebp,DWORD PTR [ecx+0x4d]
  40cb17:	xor    edx,edx
  40cb19:	mov    ebx,0xdeb28304
  40cb1e:	sub    al,0x1a
  40cb20:	inc    bp
  40cb22:	(bad)  
  40cb23:	dec    esi
  40cb24:	aad    0x44
  40cb26:	sbb    DWORD PTR ds:0x69659ffc,edi
  40cb2c:	ret    
  40cb2d:	mov    esi,0xac42e4b2
  40cb32:	pop    ebp
  40cb33:	inc    ebx
  40cb34:	stos   DWORD PTR es:[edi],eax
  40cb35:	mov    bh,0x2e
  40cb37:	cwde   
  40cb38:	std    
  40cb39:	dec    eax
  40cb3a:	adc    DWORD PTR [ebx],eax
  40cb3c:	test   DWORD PTR [esi+ebx*4+0x3af80cc4],esp
  40cb43:	pop    edi
  40cb44:	ficom  WORD PTR [edi]
  40cb46:	xor    al,BYTE PTR [edi-0x395ea04]
  40cb4c:	push   ecx
  40cb4d:	or     DWORD PTR [ecx+0x48],ecx
  40cb50:	inc    eax
  40cb51:	sti    
  40cb52:	retf   
  40cb53:	fdiv   DWORD PTR [esp+edx*4+0x2b]
  40cb57:	or     ebp,DWORD PTR [edx]
  40cb59:	icebp  
  40cb5a:	leave  
  40cb5b:	jl     0x40cb24
  40cb5d:	test   eax,0xf0b2fa73
  40cb62:	sbb    DWORD PTR [edi],esi
  40cb64:	in     eax,dx
  40cb65:	lea    edx,[eax-0x79]
  40cb68:	stos   BYTE PTR es:[edi],al
  40cb69:	push   0x33
  40cb6b:	push   ds
  40cb6c:	call   0xe2303813
  40cb71:	cmp    eax,0xd7f2d314
  40cb76:	lahf   
  40cb77:	push   esi
  40cb78:	mov    ds:0x6388bbe6,al
  40cb7d:	mov    ebx,0xa06e8dac
  40cb82:	lods   al,BYTE PTR ds:[esi]
  40cb83:	mov    bh,0x55
  40cb85:	mov    esi,0xc703010a
  40cb8a:	aam    0x7a
  40cb8c:	and    eax,0x8ea685fb
  40cb91:	mov    dh,0x78
  40cb93:	dec    edi
  40cb94:	mov    ebx,0x382fcc66
  40cb99:	test   DWORD PTR [edx],ecx
  40cb9b:	jmp    0x40cc05
  40cb9d:	push   esp
  40cb9e:	pop    esi
  40cb9f:	pop    ebp
  40cba0:	jno    0x40cbe1
  40cba2:	inc    edi
  40cba3:	repnz outs dx,DWORD PTR ds:[esi]
  40cba5:	dec    eax
  40cba6:	outs   dx,DWORD PTR ds:[esi]
  40cba7:	add    eax,0xdac49cd3
  40cbac:	mov    bh,0xd
  40cbae:	enter  0x939e,0x69
  40cbb2:	dec    eax
  40cbb3:	sbb    al,0x2a
  40cbb5:	in     al,0x70
  40cbb7:	mov    ds:0x29ef5172,al
  40cbbc:	mov    dl,0x71
  40cbbe:	aas    
  40cbbf:	pop    ss
  40cbc0:	ins    DWORD PTR es:[edi],dx
  40cbc1:	ret    
  40cbc2:	and    BYTE PTR [ebx+0x591934ba],ah
  40cbc8:	dec    esi
  40cbc9:	in     al,0xd8
  40cbcb:	stos   DWORD PTR es:[edi],eax
  40cbcc:	ja     0x40cb53
  40cbce:	lds    esp,FWORD PTR [esp+ecx*8-0x53]
  40cbd2:	popa   
  40cbd3:	popw   es
  40cbd5:	pop    ebp
  40cbd6:	mov    fs,WORD PTR [edi]
  40cbd8:	fcomp  QWORD PTR [edx+0x1cd9f6b4]
  40cbde:	out    0x7e,al
  40cbe0:	ficom  DWORD PTR [edx*8-0x74d7d343]
  40cbe7:	(bad)  
  40cbe8:	jnp    0x40cb98
  40cbea:	(bad)  
  40cbeb:	jmp    0x382f:0xd1d569db
  40cbf2:	sbb    esp,esi
  40cbf4:	fmulp  st(6),st
  40cbf6:	pop    ecx
  40cbf7:	fistp  DWORD PTR [ebx-0x29fd524f]
  40cbfd:	ficom  DWORD PTR [eax-0x6c8b133f]
  40cc03:	(bad)  
  40cc05:	mov    dl,0x65
  40cc07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc08:	dec    edx
  40cc09:	jle    0x40cc7a
  40cc0b:	ds dec ecx
  40cc0d:	dec    eax
  40cc0e:	ret    
  40cc0f:	arpl   WORD PTR [ebp-0x22],di
  40cc12:	popa   
  40cc13:	dec    edi
  40cc14:	mov    ch,0xc0
  40cc16:	or     bl,BYTE PTR [ebp-0x2f]
  40cc19:	add    al,0x36
  40cc1b:	and    eax,0xd45b1f7e
  40cc20:	and    BYTE PTR [edi-0xfe5d3b8],bh
  40cc26:	fld    QWORD PTR ds:0x324e563
  40cc2c:	(bad)  
  40cc2e:	sub    eax,0x18951b08
  40cc33:	out    dx,eax
  40cc34:	xlat   BYTE PTR ds:[ebx]
  40cc35:	int    0xf1
  40cc37:	xor    edi,edi
  40cc39:	xchg   edx,eax
  40cc3a:	mov    al,0x8d
  40cc3c:	push   es
  40cc3d:	repz pop edx
  40cc3f:	hlt    
  40cc40:	repz xor edx,DWORD PTR [edi+0x22]
  40cc44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc45:	call   0x3f70:0x62e74d5d
  40cc4c:	iret   
  40cc4d:	lds    ebp,FWORD PTR [ecx+0x27]
  40cc50:	jb     0x40ccbf
  40cc52:	jno    0x40cc4e
  40cc54:	js     0x40cc2a
  40cc56:	jecxz  0x40cc5c
  40cc58:	jge    0x40cc8c
  40cc5a:	xlat   BYTE PTR ds:[ebx]
  40cc5b:	nop
  40cc5c:	push   ds
  40cc5d:	int3   
  40cc5e:	fmul   DWORD PTR [ecx-0x1e]
  40cc61:	ret    0x1903
  40cc64:	aas    
  40cc65:	jnp    0x40cc1a
  40cc67:	lea    ebx,[esi]
  40cc69:	in     al,0x49
  40cc6b:	or     eax,0x5aa3dcc9
  40cc70:	xor    eax,DWORD PTR [edx+0x2e]
  40cc73:	mov    ?,WORD PTR [ecx-0x17ed66d3]
  40cc79:	add    al,0xb4
  40cc7b:	xchg   edi,eax
  40cc7c:	jae    0x40cc5e
  40cc7e:	sub    BYTE PTR [ebp+0x60],bl
  40cc81:	dec    edx
  40cc82:	and    al,0xe3
  40cc84:	jle    0x40cc79
  40cc86:	adc    DWORD PTR [ebx+esi*4+0x172b6222],ecx
  40cc8d:	inc    edi
  40cc8e:	in     al,0x76
  40cc90:	push   ss
  40cc91:	stos   DWORD PTR es:[edi],eax
  40cc92:	inc    eax
  40cc93:	push   DWORD PTR ds:0x3b3f16a8
  40cc99:	fild   WORD PTR [ecx-0x262bbea7]
  40cc9f:	jbe    0x40cca7
  40cca1:	pop    ebx
  40cca2:	jl     0x40cc4b
  40cca4:	std    
  40cca5:	mov    ebx,0x4a370e17
  40ccaa:	add    al,BYTE PTR [edx]
  40ccac:	xchg   edx,eax
  40ccad:	in     al,0x83
  40ccaf:	fidiv  DWORD PTR [eax]
  40ccb1:	and    eax,0xb61b7aad
  40ccb6:	mov    al,ds:0xa72c1812
  40ccbb:	int3   
  40ccbc:	sti    
  40ccbd:	xchg   BYTE PTR [edx-0x2fe4990b],dl
  40ccc3:	jmp    0xb235927b
  40ccc8:	test   al,0xb0
  40ccca:	push   ecx
  40cccb:	pop    edi
  40cccc:	mov    ebx,0x9ba9dc87
  40ccd2:	repnz in al,dx
  40ccd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ccd5:	jo     0x40cca5
  40ccd7:	mov    DWORD PTR [eax],edx
  40ccd9:	nop
  40ccda:	dec    edi
  40ccdb:	mov    edi,0xf986a0e2
  40cce0:	push   ecx
  40cce1:	cld    
  40cce2:	daa    
  40cce3:	jge    0x40cc7c
  40cce5:	adc    eax,0xa494802f
  40ccea:	add    eax,0x23e1c1a2
  40ccef:	shr    BYTE PTR [eax+0x1d],0x2f
  40ccf3:	test   eax,0xf46efde
  40ccf9:	sbb    esp,DWORD PTR [ebx]
  40ccfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ccfc:	sub    eax,0x8a338698
  40cd01:	fcomp  QWORD PTR [esi+0x6d320f50]
  40cd07:	xchg   DWORD PTR [ebp+0x6],edi
  40cd0a:	clc    
  40cd0b:	add    al,0x6e
  40cd0d:	mov    bh,0x83
  40cd0f:	ds in  al,dx
  40cd11:	in     al,0xc0
  40cd13:	or     edi,edx
  40cd15:	push   esi
  40cd16:	ss (bad) 
  40cd19:	mov    WORD PTR [esi-0x63],cs
  40cd1c:	jbe    0x40cd66
  40cd1e:	pop    DWORD PTR ds:0x8d57dd02
  40cd24:	pop    ecx
  40cd25:	ss icebp 
  40cd27:	dec    eax
  40cd28:	jae    0x40ccac
  40cd2a:	dec    edx
  40cd2b:	push   0x26c84861
  40cd30:	shl    DWORD PTR [esi],cl
  40cd32:	push   cs
  40cd33:	sbb    eax,0xe404c691
  40cd38:	leave  
  40cd39:	fidiv  WORD PTR [esi]
  40cd3b:	mov    WORD PTR [esi],?
  40cd3d:	adc    eax,0xf8363d68
  40cd42:	jg     0x40cd36
  40cd44:	jmp    0x977a1c45
  40cd49:	cmc    
  40cd4a:	out    0x48,eax
  40cd4c:	add    esp,DWORD PTR [ecx+0x7b]
  40cd4f:	or     al,0x1a
  40cd51:	or     dh,BYTE PTR [ebp-0x4cf25a65]
  40cd57:	cwde   
  40cd58:	je     0x40cd1f
  40cd5a:	push   0xffffffda
  40cd5c:	sbb    eax,0x9060b594
  40cd61:	sbb    ebx,DWORD PTR [esi]
  40cd63:	out    0xeb,eax
  40cd65:	dec    ebp
  40cd66:	xchg   edx,eax
  40cd67:	push   ecx
  40cd68:	(bad)  
  40cd69:	(bad)  
  40cd6a:	mov    al,ds:0x6cdec3be
  40cd6f:	and    al,0xe2
  40cd71:	xor    BYTE PTR [edi-0x4f79d682],dl
  40cd77:	aas    
  40cd78:	inc    edx
  40cd79:	int    0xe7
  40cd7b:	sub    DWORD PTR [esi-0x52],0xffffffc4
  40cd7f:	je     0x40cd60
  40cd81:	ret    
  40cd82:	scas   eax,DWORD PTR es:[edi]
  40cd83:	hlt    
  40cd84:	ss outs dx,DWORD PTR es:[esi]
  40cd87:	jecxz  0x40cd37
  40cd89:	mov    ds:0x2a29b1d5,al
  40cd8e:	add    al,0xfa
  40cd90:	push   edi
  40cd91:	pop    eax
  40cd92:	push   ds
  40cd93:	inc    esi
  40cd94:	sbb    bh,ch
  40cd96:	inc    ebp
  40cd97:	or     eax,0x71f2c0f
  40cd9c:	jmp    0x1399b889
  40cda1:	sub    BYTE PTR [ebp-0x47],ah
  40cda4:	xor    ch,BYTE PTR [edi]
  40cda6:	das    
  40cda7:	imul   edx,DWORD PTR [edi],0x11
  40cdaa:	or     eax,0x2f33876e
  40cdaf:	je     0x40cd43
  40cdb1:	fwait
  40cdb2:	shl    BYTE PTR [edx-0x4c],1
  40cdb5:	inc    ebp
  40cdb6:	shl    DWORD PTR [ebp+0x26],0x65
  40cdba:	cwde   
  40cdbb:	mov    WORD PTR [edi+ecx*1-0x36],?
  40cdbf:	cdq    
  40cdc0:	int    0xf2
  40cdc2:	xor    eax,0x455a9932
  40cdc7:	adc    al,0x60
  40cdc9:	out    0x7f,al
  40cdcb:	and    esp,ebx
  40cdcd:	pop    esp
  40cdce:	cli    
  40cdcf:	dec    ebx
  40cdd0:	(bad)  
  40cdd1:	jnp    0x40cdfe
  40cdd3:	aam    0xa9
  40cdd5:	xchg   ecx,eax
  40cdd6:	daa    
  40cdd7:	pop    esp
  40cdd8:	push   0xfa57b04
  40cddd:	pusha  
  40cdde:	(bad)  
  40cde0:	imul   eax,DWORD PTR [edx+edx*4],0x561a5964
  40cde7:	js     0x40cd6f
  40cde9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdea:	xchg   ebx,eax
  40cdeb:	ror    dl,1
  40cded:	sbb    al,0x28
  40cdef:	gs cdq 
  40cdf1:	push   eax
  40cdf2:	pop    esi
  40cdf3:	push   ecx
  40cdf4:	sbb    eax,0xe93d2422
  40cdf9:	loope  0x40cdc6
  40cdfb:	sti    
  40cdfc:	add    DWORD PTR [esi+0x591a5fac],ecx
  40ce02:	jecxz  0x40cdcf
  40ce04:	mov    edx,0x1022bc30
  40ce09:	mov    ebp,0x5dcfe6fb
  40ce0e:	mov    esi,0xebb2d0ce
  40ce13:	adc    al,ah
  40ce15:	and    ch,al
  40ce17:	(bad)  
  40ce19:	dec    ebx
  40ce1a:	push   ebp
  40ce1b:	aam    0x98
  40ce1d:	inc    edi
  40ce1e:	dec    esp
  40ce1f:	jecxz  0x40ce43
  40ce21:	in     eax,0x7c
  40ce23:	cmp    BYTE PTR [ebx],ah
  40ce25:	jne    0x40cdbf
  40ce27:	or     bl,BYTE PTR [edi]
  40ce29:	in     al,0x39
  40ce2b:	add    BYTE PTR [eax-0x6dfffccc],al
  40ce31:	cmp    al,0xc6
  40ce33:	sar    DWORD PTR [ecx-0x1b],0xab
  40ce37:	and    al,0xc8
  40ce39:	inc    ebx
  40ce3a:	mov    ds:0xe067b2f2,al
  40ce3f:	cli    
  40ce40:	enter  0x973f,0x89
  40ce44:	(bad)  
  40ce45:	repnz mov dl,0xf9
  40ce48:	(bad)  
  40ce49:	mov    ebx,0x2ccc8645
  40ce4e:	sub    eax,0x5ec733ca
  40ce53:	cwde   
  40ce54:	mov    esp,0x5bbf755
  40ce59:	pushf  
  40ce5a:	inc    edx
  40ce5b:	or     DWORD PTR [edx+0x62d9af3f],esi
  40ce61:	mov    bh,0x10
  40ce63:	fwait
  40ce64:	mov    ebp,0xe7a389af
  40ce69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce6a:	sub    BYTE PTR [esi-0x5a],0x39
  40ce6e:	cs jg  0x40ce88
  40ce71:	aas    
  40ce72:	lods   eax,DWORD PTR ds:[esi]
  40ce73:	inc    ebp
  40ce74:	outs   dx,DWORD PTR ds:[esi]
  40ce75:	pop    ecx
  40ce76:	clc    
  40ce77:	cdq    
  40ce78:	repnz push eax
  40ce7a:	aad    0x96
  40ce7c:	mov    eax,DWORD PTR [esi-0x2de5317d]
  40ce82:	mov    ebx,0x9dd23fbc
  40ce87:	sbb    BYTE PTR [edi+0x22],0x1
  40ce8b:	hlt    
  40ce8c:	and    BYTE PTR [esi+0x31],ch
  40ce8f:	dec    DWORD PTR [edi-0x35]
  40ce92:	mov    ecx,0x6f7d2a4d
  40ce97:	inc    ebx
  40ce98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce99:	(bad)  
  40ce9b:	mov    bl,0x51
  40ce9d:	mov    DWORD PTR gs:[ebx-0x5e17aa3a],ebp
  40cea4:	mov    dl,0x3b
  40cea6:	rol    BYTE PTR [edx+0x3e8b112f],0x33
  40cead:	and    eax,0xf2fa0e5a
  40ceb2:	cld    
  40ceb3:	pushf  
  40ceb4:	(bad)  
  40ceb5:	rol    dl,cl
  40ceb7:	(bad)  
  40ceb8:	stc    
  40ceb9:	dec    ecx
  40ceba:	aad    0xb8
  40cebc:	sub    eax,0xf95ddb9d
  40cec1:	jmp    0x35c33739
  40cec6:	fs es mov dh,0xd7
  40ceca:	xchg   edx,eax
  40cecb:	xchg   ecx,eax
  40cecc:	imul   cx,WORD PTR [esi],0x19
  40ced0:	imul   dh
  40ced2:	leave  
  40ced3:	mov    dh,BYTE PTR ds:0x336263ac
  40ced9:	dec    ebx
  40ceda:	in     al,dx
  40cedb:	aas    
  40cedc:	iret   
  40cedd:	or     ebp,DWORD PTR [ecx+eax*8-0x1d]
  40cee1:	mov    dl,0xb4
  40cee3:	jno    0x40ce6c
  40cee5:	scas   eax,DWORD PTR es:[edi]
  40cee6:	iret   
  40cee7:	sub    cl,BYTE PTR [edi+0x6a13ff4e]
  40ceed:	dec    ebx
  40ceee:	es xchg edi,eax
  40cef0:	icebp  
  40cef1:	sbb    al,cl
  40cef3:	lahf   
  40cef4:	dec    eax
  40cef5:	popa   
  40cef6:	pop    ds
  40cef7:	mov    DWORD PTR [ecx+0x4],ecx
  40cefa:	or     BYTE PTR ds:0x62a60991,dh
  40cf00:	sti    
  40cf01:	sub    edx,edx
  40cf03:	mov    dl,0xf8
  40cf05:	and    DWORD PTR [esi],esi
  40cf07:	(bad)  
  40cf08:	jp     0x40cf28
  40cf0a:	(bad)  
  40cf0b:	sub    eax,0x5c7c8d5e
  40cf10:	jmp    0x8a9f:0x5c3ae0b8
  40cf17:	jle    0x40cec4
  40cf19:	into   
  40cf1a:	add    eax,DWORD PTR [eax-0x7f5af5bc]
  40cf20:	sub    ch,bl
  40cf22:	dec    ebx
  40cf23:	and    edi,DWORD PTR [edx+0x6a]
  40cf26:	mov    BYTE PTR ds:0x1fa07e64,bl
  40cf2c:	push   eax
  40cf2d:	mov    eax,ds:0x4ca950a
  40cf32:	or     ebx,esi
  40cf34:	cli    
  40cf35:	out    0x27,al
  40cf37:	jbe    0x40cf6f
  40cf39:	push   ecx
  40cf3a:	fld    TBYTE PTR [esi]
  40cf3c:	or     DWORD PTR [edx+0xf],edi
  40cf3f:	(bad)  
  40cf40:	jns    0x40cf44
  40cf42:	xchg   DWORD PTR [eax],ebx
  40cf44:	adc    ecx,edx
  40cf46:	xchg   ecx,eax
  40cf47:	cld    
  40cf48:	push   edi
  40cf49:	push   edx
  40cf4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf4b:	add    ecx,eax
  40cf4d:	aam    0x94
  40cf4f:	in     al,dx
  40cf50:	cwde   
  40cf51:	stos   DWORD PTR es:[edi],eax
  40cf52:	and    ah,ch
  40cf54:	test   ch,0x82
  40cf57:	iret   
  40cf58:	sbb    eax,0x138eba98
  40cf5d:	push   edi
  40cf5e:	mov    ch,0x35
  40cf60:	jmp    0x40cf3d
  40cf62:	fdivr  DWORD PTR [ebx-0x3a]
  40cf65:	mov    DWORD PTR [edi+ebp*8+0x4242e09a],edx
  40cf6c:	addr16 cwde 
  40cf6e:	jmp    0xc524b41b
  40cf73:	push   ss
  40cf74:	cwde   
  40cf75:	fs push ebp
  40cf77:	mov    bh,0x6b
  40cf79:	popa   
  40cf7a:	call   DWORD PTR [esi-0x9]
  40cf7d:	push   ss
  40cf7e:	stc    
  40cf7f:	and    esp,DWORD PTR [ebx-0x14]
  40cf82:	js     0x40cf89
  40cf84:	sti    
  40cf85:	out    0x75,eax
  40cf87:	dec    edx
  40cf88:	cli    
  40cf89:	xchg   esi,eax
  40cf8a:	into   
  40cf8b:	popf   
  40cf8c:	fs and al,0x16
  40cf8f:	jp     0x40cfcc
  40cf91:	loop   0x40d007
  40cf93:	mov    WORD PTR [ebp+0x87f32ae],?
  40cf99:	scas   al,BYTE PTR es:[edi]
  40cf9a:	das    
  40cf9b:	ret    
  40cf9c:	stos   DWORD PTR es:[edi],eax
  40cf9d:	fistp  DWORD PTR [eax+0x7f4fa8a7]
  40cfa3:	nop
  40cfa4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfa5:	cmp    BYTE PTR [edi],0x18
  40cfa8:	icebp  
  40cfa9:	arpl   WORD PTR [eax],sp
  40cfab:	cmc    
  40cfac:	aas    
  40cfad:	jb     0x40cf50
  40cfaf:	jl     0x40cfe9
  40cfb1:	daa    
  40cfb2:	mov    esp,0x8cb284fb
  40cfb7:	stc    
  40cfb8:	jge    0x40cf51
  40cfba:	xchg   ecx,eax
  40cfbb:	frstpm(287 only) 
  40cfbd:	push   eax
  40cfbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfbf:	and    ebx,DWORD PTR [esi+0x1110c91b]
  40cfc5:	jns    0x40cf7a
  40cfc7:	dec    eax
  40cfc8:	or     BYTE PTR [eax-0x40],dl
  40cfcb:	fwait
  40cfcc:	aam    0xd4
  40cfce:	push   esp
  40cfcf:	not    esp
  40cfd1:	mov    dl,0x91
  40cfd3:	inc    edi
  40cfd4:	into   
  40cfd5:	add    eax,0x105d7630
  40cfda:	(bad)  
  40cfdc:	ins    BYTE PTR es:[edi],dx
  40cfdd:	cmp    ebx,DWORD PTR [esi-0x5b]
  40cfe0:	jl     0x40d011
  40cfe2:	pop    ss
  40cfe3:	xor    BYTE PTR [eax+0x3c],0x55
  40cfe7:	dec    ebx
  40cfe8:	lahf   
  40cfe9:	dec    ebx
  40cfea:	pop    ds
  40cfeb:	or     esp,ebx
  40cfed:	add    DWORD PTR [ebp-0x1c],0x60
  40cff1:	daa    
  40cff2:	xrelease xchg BYTE PTR [eax],ah
  40cff5:	loopne 0x40d028
  40cff7:	pop    ss
  40cff8:	adc    ebx,esp
  40cffa:	lahf   
  40cffb:	xor    eax,0xc71a21bd
  40d000:	fsubr  QWORD PTR [edx]
  40d002:	out    dx,al
  40d003:	xor    edx,0xffffff82
  40d006:	add    eax,0x7c6a1afe
  40d00b:	aad    0xc7
  40d00d:	sar    ebx,0xae
  40d010:	mov    edx,0x72ab274f
  40d015:	jne    0x40d07c
  40d017:	rcl    BYTE PTR [ebx-0x78],cl
  40d01a:	dec    ecx
  40d01b:	adc    BYTE PTR [esp+ebp*1+0x6f600dd],bl
  40d022:	cmp    DWORD PTR [ebx],eax
  40d024:	mov    ch,0x29
  40d026:	(bad)  
  40d027:	addr16 ret 
  40d029:	inc    ebx
  40d02a:	fldcw  WORD PTR [edx+0x23]
  40d02d:	out    0x12,eax
  40d02f:	cmp    al,0x4a
  40d031:	clc    
  40d032:	fcom   DWORD PTR [esi+0x4a44bc72]
  40d038:	daa    
  40d039:	ror    bh,0x90
  40d03c:	out    0x59,eax
  40d03e:	lock enter 0x3b78,0x35
  40d043:	stc    
  40d044:	or     eax,0xe20dd3b2
  40d049:	cmc    
  40d04a:	mov    esp,0x6b0608f9
  40d04f:	mov    ?,WORD PTR [edi]
  40d051:	jmp    0x40cfe2
  40d053:	lods   al,BYTE PTR ds:[esi]
  40d054:	and    edi,0x45e2faa9
  40d05a:	mov    dh,0x59
  40d05c:	nop
  40d05d:	xchg   DWORD PTR [ebx+0xa],esp
  40d060:	cli    
  40d061:	xor    edi,ebp
  40d063:	ret    
  40d064:	jecxz  0x40d0c9
  40d066:	out    0x3,al
  40d068:	or     DWORD PTR [eax+0x60],0x5e
  40d06c:	push   0x6d
  40d06e:	mov    esi,0x5c9b96cb
  40d073:	shr    BYTE PTR [bp+0x61],1
  40d077:	sub    DWORD PTR [edi+0x33],eax
  40d07a:	or     ch,BYTE PTR [eax]
  40d07c:	gs loope 0x40d0ed
  40d07f:	test   bl,ah
  40d081:	or     bl,bh
  40d083:	add    eax,0xa8a9e16a
  40d088:	mov    ds:0xc156be7e,eax
  40d08d:	dec    bh
  40d08f:	and    al,bh
  40d091:	mov    ebp,0x708a4d6f
  40d096:	dec    ecx
  40d097:	mov    edx,0xb4855329
  40d09c:	ret    0x7e60
  40d09f:	cmp    eax,0xcf896551
  40d0a4:	iret   
  40d0a5:	(bad)  
  40d0a7:	aaa    
  40d0a8:	mov    edx,0x26114a44
  40d0ad:	jl     0x40d0bc
  40d0af:	dec    esi
  40d0b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0b1:	xchg   ecx,eax
  40d0b2:	inc    eax
  40d0b3:	sbb    ah,al
  40d0b5:	rol    BYTE PTR [ecx+0x25],1
  40d0b8:	pop    ss
  40d0b9:	loopne 0x40d0f7
  40d0bb:	add    esi,edx
  40d0bd:	jb     0x40d091
  40d0bf:	mov    esp,0x9a4d86f8
  40d0c4:	addr16 fsubp st(2),st
  40d0c7:	xchg   DWORD PTR [edx],edx
  40d0c9:	fisub  WORD PTR [ebx-0xd1aa9bf]
  40d0cf:	cwde   
  40d0d0:	and    bl,BYTE PTR [esi+0x61]
  40d0d3:	jmp    0xb39ce482
  40d0d8:	lods   eax,DWORD PTR ds:[esi]
  40d0d9:	imul   eax,eax,0x7e
  40d0dc:	or     BYTE PTR [ebp+0x1],bl
  40d0df:	cli    
  40d0e0:	or     eax,0x5b49d193
  40d0e5:	jmp    0x5813a2ca
  40d0ea:	and    DWORD PTR [eax],esi
  40d0ec:	mov    ah,0xde
  40d0ee:	in     al,dx
  40d0ef:	adc    ebp,DWORD PTR [ecx]
  40d0f1:	sub    dh,al
  40d0f3:	icebp  
  40d0f4:	pop    edx
  40d0f5:	loop   0x40d099
  40d0f7:	add    BYTE PTR [edi],bl
  40d0f9:	mov    es,ecx
  40d0fb:	(bad)  
  40d0fc:	xor    BYTE PTR [esi-0x46ec33f0],bl
  40d102:	lods   eax,DWORD PTR ds:[esi]
  40d103:	mov    ebp,0xb2a78cbd
  40d108:	lods   eax,DWORD PTR ds:[esi]
  40d109:	mov    ds:0x175bd32c,eax
  40d10e:	imul   eax,ebp,0xd
  40d111:	(bad)  
  40d112:	jmp    0x958e:0x22b77bcc
  40d119:	inc    eax
  40d11a:	xor    al,0x70
  40d11c:	mov    gs,WORD PTR [edx]
  40d11e:	or     eax,0x486804e9
  40d123:	lea    edx,[ebp+0x79b276e1]
  40d129:	mov    ah,0x85
  40d12b:	cwde   
  40d12c:	lds    ecx,FWORD PTR [esi+0x28f5b3b3]
  40d132:	jp     0x40d137
  40d134:	int3   
  40d135:	adc    BYTE PTR ds:0x5b93126c,dl
  40d13b:	leave  
  40d13c:	cli    
  40d13d:	pop    edi
  40d13e:	sahf   
  40d13f:	sub    dl,BYTE PTR [ebp+0x7af7e57d]
  40d145:	dec    ebx
  40d146:	aad    0xb5
  40d148:	xor    DWORD PTR [esi],edx
  40d14a:	push   ebp
  40d14b:	and    BYTE PTR [esi+0x4d36fa34],al
  40d151:	push   cs
  40d152:	jg     0x40d11e
  40d154:	in     eax,0x84
  40d156:	inc    eax
  40d157:	inc    ebp
  40d158:	dec    ebp
  40d159:	mov    al,ds:0x8292911a
  40d15e:	and    DWORD PTR [edi],esp
  40d160:	(bad)  [eax+0x3e]
  40d163:	fadd   DWORD PTR [ebp+0x2e09f153]
  40d169:	inc    ebx
  40d16a:	popa   
  40d16b:	mov    ah,0x7f
  40d16d:	add    al,0x74
  40d16f:	fld    QWORD PTR [ebx]
  40d171:	stos   BYTE PTR es:[edi],al
  40d172:	dec    esi
  40d173:	push   esp
  40d174:	dec    edi
  40d175:	pushf  
  40d176:	mov    ecx,edi
  40d178:	or     esi,DWORD PTR [esi-0x16]
  40d17b:	bound  edi,QWORD PTR [edi]
  40d17d:	call   0xaf42898f
  40d182:	jge    0x40d1ae
  40d184:	pop    esp
  40d185:	jmp    0x40d1ac
  40d187:	jp     0x40d194
  40d189:	mov    ds:0x95b4bea3,al
  40d18e:	dec    ebp
  40d18f:	mov    ds:0xc0c9475c,eax
  40d194:	add    al,0xbf
  40d196:	ins    BYTE PTR es:[edi],dx
  40d197:	imul   eax,DWORD PTR [eax-0x16],0x3f
  40d19b:	cmc    
  40d19c:	in     al,0x2d
  40d19e:	hlt    
  40d19f:	push   edx
  40d1a0:	fstp   TBYTE PTR [eax]
  40d1a2:	sub    eax,0x758f6190
  40d1a7:	dec    ebx
  40d1a8:	test   BYTE PTR [eax],dh
  40d1aa:	xchg   edx,eax
  40d1ab:	rcl    DWORD PTR [ebp+0x1a],1
  40d1ae:	cld    
  40d1af:	jne    0x40d194
  40d1b1:	mov    ch,0x5e
  40d1b3:	push   cs
  40d1b4:	jae    0x40d1df
  40d1b6:	pop    es
  40d1b7:	jg     0x40d207
  40d1b9:	pop    esi
  40d1ba:	je     0x40d141
  40d1bc:	rcr    BYTE PTR [eax-0x26],0x3a
  40d1c0:	pop    ds
  40d1c1:	cmc    
  40d1c2:	dec    esp
  40d1c3:	dec    edi
  40d1c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1c5:	xor    ecx,edi
  40d1c7:	cmp    eax,0x9975a398
  40d1cc:	adc    eax,0x5f93306f
  40d1d1:	xchg   ebx,eax
  40d1d2:	xor    DWORD PTR [ebp+esi*4+0x75cf1df3],0xce6e7494
  40d1dd:	add    al,bl
  40d1df:	push   ds
  40d1e0:	sub    al,0x5d
  40d1e2:	or     ebp,DWORD PTR [esi-0x7b5c45c0]
  40d1e8:	pop    edx
  40d1e9:	(bad)  
  40d1ea:	mov    ecx,0xc3236411
  40d1ef:	pop    edi
  40d1f0:	xchg   BYTE PTR [esi+esi*8+0x5f1859e5],ch
  40d1f7:	cli    
  40d1f8:	int3   
  40d1f9:	mov    WORD PTR [edx*1-0x30829880],es
  40d200:	inc    ebp
  40d201:	push   ebp
  40d202:	inc    edx
  40d203:	mov    eax,ds:0x8b26123f
  40d208:	mov    ds:0xf8b2d4de,eax
  40d20d:	inc    eax
  40d20e:	les    ebx,FWORD PTR [ebx+eax*8-0x496efd08]
  40d215:	or     al,0xa4
  40d217:	call   0xa48b:0x830e7b42
  40d21e:	fdivr  DWORD PTR [eax]
  40d220:	push   esi
  40d221:	cmp    esp,DWORD PTR [edx-0x72]
  40d224:	adc    bh,BYTE PTR [eax+0x7bc40b9f]
  40d22a:	mov    edi,0xe3b1db
  40d22f:	xchg   dl,ch
  40d231:	sbb    eax,0x603e0542
  40d236:	mov    cl,0x7c
  40d238:	call   0xd3d63b58
  40d23d:	pop    es
  40d23e:	jl     0x40d1fc
  40d240:	loop   0x40d2af
  40d242:	xchg   ebp,eax
  40d243:	sti    
  40d244:	xor    BYTE PTR [ebx-0x6a3f6990],ah
  40d24a:	lods   eax,DWORD PTR ds:[esi]
  40d24b:	xchg   ebx,eax
  40d24c:	add    eax,0xd871f22d
  40d251:	sahf   
  40d252:	jb     0x40d249
  40d254:	push   ds
  40d255:	out    0xc5,eax
  40d257:	cmp    ch,BYTE PTR [esi]
  40d259:	ret    0x7cbe
  40d25c:	mov    edi,0xea2ba0b5
  40d261:	fild   QWORD PTR [edx]
  40d263:	(bad)  [eax+0x656f11e]
  40d269:	or     al,0x3f
  40d26b:	fwait
  40d26c:	dec    edx
  40d26d:	loope  0x40d2e1
  40d26f:	(bad)  
  40d270:	shl    BYTE PTR [edi-0x54],1
  40d273:	ss fucom st(0)
  40d276:	pop    ss
  40d277:	scas   eax,DWORD PTR es:[edi]
  40d278:	pop    es
  40d279:	xlat   BYTE PTR ds:[ebx]
  40d27a:	in     eax,0x98
  40d27c:	mov    ebx,0xa0ea13e4
  40d281:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d282:	cmp    ch,al
  40d284:	mov    edx,ebp
  40d286:	mov    ss,WORD PTR [ebp+0x1c]
  40d289:	das    
  40d28a:	les    ebx,FWORD PTR [eax+ebx*4+0x75]
  40d28e:	or     al,0x0
  40d290:	pop    ss
  40d291:	pop    eax
  40d292:	ins    DWORD PTR es:[edi],dx
  40d293:	mov    ?,ebp
  40d295:	mov    bh,0xba
  40d297:	rcl    DWORD PTR [ebp-0x7c97ad21],1
  40d29d:	into   
  40d29e:	fldcw  WORD PTR [ebx+0x7ccac8d]
  40d2a4:	into   
  40d2a5:	call   FWORD PTR [edx]
  40d2a7:	sub    BYTE PTR [edx+0x61],dh
  40d2aa:	pushf  
  40d2ab:	mov    ecx,0x7ccc62e1
  40d2b0:	imul   esp,DWORD PTR [ecx],0xffffff84
  40d2b3:	cwde   
  40d2b4:	add    edi,DWORD PTR [esi]
  40d2b6:	jo     0x40d295
  40d2b8:	int    0xf
  40d2ba:	mov    eax,0xf986453d
  40d2bf:	mov    al,0x93
  40d2c1:	jne    0x40d2da
  40d2c3:	dec    edx
  40d2c4:	sbb    edx,DWORD PTR [ebx]
  40d2c6:	sbb    BYTE PTR [ebp+0x3c],0x83
  40d2ca:	aaa    
  40d2cb:	and    DWORD PTR [ecx+0x1c],ecx
  40d2ce:	inc    edx
  40d2cf:	and    ecx,DWORD PTR [esi+0x27]
  40d2d2:	test   BYTE PTR [eax-0x65],bh
  40d2d5:	shl    BYTE PTR [esi-0x9],1
  40d2d8:	mov    eax,ds:0xbf1f0c8d
  40d2de:	pop    edx
  40d2df:	push   0x2e2b5c65
  40d2e4:	std    
  40d2e5:	test   eax,0x79052096
  40d2ea:	mov    ebx,0x8ac6a205
  40d2ef:	jmp    0xd90516a7
  40d2f4:	xchg   ebx,eax
  40d2f5:	(bad)  
  40d2f6:	jne    0x40d2ea
  40d2f8:	sbb    BYTE PTR [edx-0x64505d14],0x71
  40d2ff:	in     eax,0xc2
  40d301:	cmc    
  40d302:	lock add ebp,DWORD PTR cs:[eax-0x63]
  40d307:	loope  0x40d315
  40d309:	mov    cl,0x94
  40d30b:	jne    0x40d2cc
  40d30d:	dec    ecx
  40d30e:	pushf  
  40d30f:	ja     0x40d2de
  40d311:	rcl    BYTE PTR [eax+ecx*1-0x3dc178ba],0x94
  40d319:	pop    ds
  40d31a:	adc    al,0xdd
  40d31c:	retf   0xdee4
  40d31f:	rol    BYTE PTR [ebx],cl
  40d321:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d322:	mov    DWORD PTR ds:0x76aaf299,edi
  40d328:	mov    eax,ds:0x4955f064
  40d32d:	inc    eax
  40d32e:	push   ss
  40d32f:	bound  edi,QWORD PTR [ebx-0x130b2702]
  40d335:	test   eax,0x2feb34fc
  40d33a:	cs pop ebp
  40d33c:	(bad)  
  40d33e:	mov    esp,0xf43bfd45
  40d343:	(bad)  
  40d344:	scas   eax,DWORD PTR es:[edi]
  40d345:	jae    0x40d35f
  40d347:	mov    DWORD PTR ds:0x4480b488,esp
  40d34d:	xchg   esi,eax
  40d34e:	loop   0x40d396
  40d350:	(bad)  
  40d351:	adc    BYTE PTR [edx+0x73608f05],0xd3
  40d358:	shr    DWORD PTR [esi-0x31578b74],0xde
  40d35f:	sub    eax,0xa27005b2
  40d364:	add    eax,0x4223623c
  40d369:	cmp    edi,DWORD PTR [ecx-0x7a]
  40d36c:	pop    ss
  40d36d:	ja     0x3e275ca
  40d373:	les    esp,FWORD PTR [ecx-0x3b2a6466]
  40d379:	outs   dx,BYTE PTR ds:[esi]
  40d37a:	push   esp
  40d37b:	gs pop ds
  40d37d:	in     al,dx
  40d37e:	add    ebx,0x1002
  40d384:	lea    eax,[ebp-0x18]
  40d387:	add    edx,eax
  40d389:	add    edx,0x5
  40d38c:	push   edx
  40d38d:	inc    esi
  40d38e:	pop    ecx
  40d38f:	dec    ecx
  40d390:	xchg   ecx,eax
  40d391:	dec    eax
  40d392:	xchg   ecx,eax
  40d393:	dec    ecx
  40d394:	xchg   ecx,edx
  40d396:	dec    edx
  40d397:	push   edx
  40d398:	mov    edx,ebx
  40d39a:	pop    ebx
  40d39b:	dec    ebx
  40d39c:	call   DWORD PTR [ebx]
  40d39e:	cmp    DWORD PTR [ebp+0x10],esi
  40d3a1:	je     0x40f754
  40d3a7:	xchg   edx,eax
  40d3a8:	push   0xc
  40d3aa:	pop    ecx
  40d3ab:	dec    ecx
  40d3ac:	push   0x3
  40d3ae:	pop    ebx
  40d3af:	inc    ebx
  40d3b0:	xchg   ebx,ecx
  40d3b2:	inc    ecx
  40d3b3:	sub    ebx,ecx
  40d3b5:	xchg   ebx,ecx
  40d3b7:	dec    ecx
  40d3b8:	dec    ecx
  40d3b9:	mov    eax,DWORD PTR [ebp-0x1c]
  40d3bc:	imul   eax,ecx
  40d3bf:	jmp    0x40f751
  40d3c4:	inc    eax
  40d3c5:	sbb    edx,DWORD PTR [ebp-0x1e]
  40d3c8:	push   edx
  40d3c9:	mov    ds:0x35198590,al
  40d3ce:	aad    0x91
  40d3d0:	cld    
  40d3d1:	inc    ebx
  40d3d2:	adc    ch,bh
  40d3d4:	mov    dl,0xd3
  40d3d6:	add    DWORD PTR [ebx-0x7c7ca1f4],0xffffff92
  40d3dd:	cmovg  esi,DWORD PTR [ebp-0x538ead62]
  40d3e4:	mov    al,0x36
  40d3e6:	jge    0x40d440
  40d3e8:	(bad)  
  40d3e9:	fisttp DWORD PTR [esi-0x33701a68]
  40d3ef:	pop    edi
  40d3f0:	aaa    
  40d3f1:	(bad)  
  40d3f2:	and    BYTE PTR [edi+0x21a09b5e],ch
  40d3f8:	in     al,dx
  40d3f9:	lea    esp,[esi+ebx*8+0x70]
  40d3fd:	xchg   esp,eax
  40d3fe:	cs jne 0x40d3c5
  40d401:	jmp    0x2562f7d7
  40d406:	leave  
  40d407:	cwde   
  40d408:	mov    dh,0x75
  40d40a:	aaa    
  40d40b:	aas    
  40d40c:	xchg   edi,eax
  40d40d:	stos   DWORD PTR es:[edi],eax
  40d40e:	ins    BYTE PTR es:[edi],dx
  40d40f:	jae    0x40d417
  40d411:	scas   al,BYTE PTR es:[edi]
  40d412:	ret    
  40d413:	(bad)  
  40d414:	retf   0x1d45
  40d417:	mov    dl,0x37
  40d419:	(bad)  
  40d41a:	mov    dh,BYTE PTR [edx-0x63834636]
  40d420:	xbegin 0x4f27e58f
  40d426:	xchg   esp,eax
  40d427:	das    
  40d428:	cs inc esi
  40d42a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d42b:	jb     0x40d43a
  40d42d:	stos   DWORD PTR es:[edi],eax
  40d42e:	xchg   BYTE PTR [ebx-0x23],bh
  40d431:	icebp  
  40d432:	popa   
  40d433:	jle    0x40d3dd
  40d435:	bswap  ebx
  40d437:	rol    DWORD PTR [edi-0x7f368f94],cl
  40d43d:	mov    edx,0x4dc107d9
  40d442:	frstor [esi+0x265b7bb]
  40d448:	cs inc ecx
  40d44a:	jb     0x40d496
  40d44c:	inc    ebp
  40d44d:	and    ah,ah
  40d44f:	lods   eax,DWORD PTR ds:[esi]
  40d450:	adc    eax,0xcb637f09
  40d455:	inc    ebx
  40d456:	add    BYTE PTR [ecx],ah
  40d458:	loope  0x40d4c6
  40d45a:	shl    ch,1
  40d45c:	dec    edx
  40d45d:	lahf   
  40d45e:	cmp    DWORD PTR [esi],ecx
  40d460:	test   esp,esi
  40d462:	pop    edi
  40d463:	out    dx,eax
  40d464:	jp     0x40d49f
  40d466:	lods   eax,DWORD PTR ds:[esi]
  40d467:	xchg   ebp,eax
  40d468:	and    eax,0xd41354f8
  40d46d:	scas   al,BYTE PTR es:[edi]
  40d46e:	mov    ebx,0xc0ed9aaf
  40d473:	int3   
  40d474:	adc    DWORD PTR [edi+0x62],ecx
  40d477:	inc    eax
  40d478:	in     eax,0x5a
  40d47a:	inc    edx
  40d47b:	push   ss
  40d47c:	sbb    edx,DWORD PTR [ebx+esi*2+0x52]
  40d480:	sbb    eax,0x3cb8b8bb
  40d485:	adc    al,0xf9
  40d487:	call   0xa98a264e
  40d48c:	adc    al,0x6
  40d48e:	jmp    0x40d50c
  40d490:	jns    0x40d4d6
  40d492:	ret    0xf3e8
  40d495:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d496:	cmp    esi,eax
  40d498:	xchg   BYTE PTR [esi],ah
  40d49a:	fsub   DWORD PTR [esi+0x3]
  40d49d:	test   al,0x59
  40d49f:	stc    
  40d4a0:	mov    ecx,0x8b5af938
  40d4a5:	push   esi
  40d4a6:	jg     0x40d4b8
  40d4a8:	add    al,0x7d
  40d4aa:	das    
  40d4ab:	mov    esp,0x6628410c
  40d4b0:	dec    edi
  40d4b1:	pop    esi
  40d4b2:	ret    
  40d4b3:	mov    ebp,0x99b3102
  40d4b8:	ins    BYTE PTR es:[edi],dx
  40d4b9:	mov    ebx,0x7526fbe4
  40d4be:	scas   al,BYTE PTR es:[edi]
  40d4bf:	pop    ecx
  40d4c0:	mov    esp,DWORD PTR [esi+0x1a5a4810]
  40d4c6:	adc    ecx,DWORD PTR [ebx-0x2024af12]
  40d4cc:	rol    DWORD PTR [edx-0x3a0d8459],cl
  40d4d2:	push   ds
  40d4d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4d4:	mov    ds:0x442a2234,al
  40d4d9:	sub    bl,ch
  40d4db:	add    ecx,0x88efaa29
  40d4e1:	call   DWORD PTR [eax+0x320a0a99]
  40d4e7:	jne    0x40d478
  40d4e9:	aam    0xde
  40d4eb:	jno    0x40d4e6
  40d4ed:	mov    ebx,0x9b7bb5ab
  40d4f2:	ja     0x40d551
  40d4f4:	sbb    BYTE PTR [eax+0x79],ch
  40d4f7:	cld    
  40d4f8:	push   ds
  40d4f9:	xor    DWORD PTR [ecx+0x1f7ce946],edx
  40d4ff:	mov    ds:0xb9df5f0f,al
  40d504:	mov    BYTE PTR [ebx+0x21],bh
  40d507:	push   ss
  40d508:	sub    DWORD PTR [ebp+0x69410c97],ecx
  40d50e:	adc    ebx,DWORD PTR ds:0x50e02bc8
  40d514:	repnz mov al,ch
  40d517:	jne    0x40d4be
  40d519:	adc    eax,0x2fdeace7
  40d51e:	inc    ebp
  40d51f:	xchg   edx,eax
  40d520:	pop    esp
  40d521:	and    DWORD PTR [esi+0x2f],ecx
  40d524:	jmp    0xeeae2e67
  40d529:	(bad)  
  40d52a:	mov    bh,0x97
  40d52c:	mov    ah,0x7
  40d52e:	adc    eax,0x46bccd13
  40d533:	add    BYTE PTR [ebx],0x8a
  40d536:	cwde   
  40d537:	cmp    BYTE PTR [edi],0x22
  40d53a:	mov    bh,0x21
  40d53c:	cld    
  40d53d:	mov    dh,BYTE PTR [ebp+ebp*4-0x19]
  40d541:	imul   eax,DWORD PTR [edx+ebx*8-0x11],0xbf54494d
  40d549:	aad    0x5a
  40d54b:	mov    ecx,0x869b17ed
  40d550:	jp     0x40d4e4
  40d552:	fs enter 0xe856,0xa6
  40d557:	mov    bl,0x46
  40d559:	cmp    bh,BYTE PTR [edx]
  40d55b:	adc    dh,ah
  40d55d:	repz lahf 
  40d55f:	and    al,0x2c
  40d561:	rcl    DWORD PTR [edi-0x66],cl
  40d564:	jnp    0x40d5cc
  40d566:	pop    edi
  40d567:	pushf  
  40d568:	enter  0x796d,0xd3
  40d56c:	addr16 cmc 
  40d56e:	pop    ecx
  40d56f:	jle    0x40d583
  40d571:	cmp    eax,eax
  40d573:	inc    edi
  40d574:	sbb    ah,BYTE PTR [ebx-0x3c]
  40d577:	mov    ?,ebx
  40d579:	or     BYTE PTR [esi],ah
  40d57b:	mov    gs,WORD PTR [ebp*4-0x6e925cf0]
  40d582:	sbb    ah,BYTE PTR [edx]
  40d584:	cmp    DWORD PTR ss:[eax-0x6e5572e9],0xcf336b03
  40d58f:	xchg   ebx,eax
  40d590:	adc    BYTE PTR [esi+0x328b3eee],bh
  40d596:	jne    0x40d5ab
  40d598:	mov    ebp,0x8a5a50ac
  40d59d:	icebp  
  40d59e:	or     BYTE PTR [ebp+0x5b],0x29
  40d5a2:	fst    st(7)
  40d5a4:	loop   0x40d5d1
  40d5a6:	inc    edi
  40d5a7:	push   ecx
  40d5a8:	cmp    dh,BYTE PTR ds:0xa4cd6f62
  40d5ae:	nop
  40d5af:	mov    cs,WORD PTR [ecx+0x7970c112]
  40d5b5:	jo     0x40d5d7
  40d5b7:	add    dh,ah
  40d5b9:	test   BYTE PTR [edi+edx*8+0x63],cl
  40d5bd:	pop    esp
  40d5be:	test   DWORD PTR [eax+0x2e424a51],esp
  40d5c4:	call   0x7afc81c1
  40d5c9:	sahf   
  40d5ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5cb:	pusha  
  40d5cc:	jmp    esp
  40d5ce:	ror    BYTE PTR [ebp+0x26],0xc8
  40d5d2:	pop    es
  40d5d3:	mov    edx,0x8cdc1016
  40d5d8:	test   DWORD PTR [edx+esi*8],edi
  40d5db:	jl     0x40d59a
  40d5dd:	lahf   
  40d5de:	aam    0x6
  40d5e0:	lahf   
  40d5e1:	ja     0x40d57c
  40d5e3:	jno    0x40d642
  40d5e5:	xchg   esi,eax
  40d5e6:	enter  0x784d,0x20
  40d5ea:	jmp    0xbbea:0x6886c8a1
  40d5f1:	int3   
  40d5f2:	or     esp,DWORD PTR [edx-0x26]
  40d5f5:	push   ecx
  40d5f6:	push   ecx
  40d5f7:	nop
  40d5f8:	cmp    eax,0x6680cebc
  40d5fd:	add    al,0x8e
  40d5ff:	xchg   edx,eax
  40d600:	in     eax,dx
  40d601:	sbb    edi,DWORD PTR [esi+0x2cbb4dc8]
  40d607:	mov    bh,0x91
  40d609:	push   0xa3455793
  40d60e:	mov    ah,0xb9
  40d610:	jb     0x40d5d5
  40d612:	dec    ecx
  40d613:	lds    ebx,FWORD PTR [ebx]
  40d615:	mov    ds:0x71599c1,al
  40d61a:	xlat   BYTE PTR ds:[ebx]
  40d61b:	mov    eax,0x5b61bd42
  40d620:	mov    edx,0x37854f4b
  40d625:	sub    cl,bl
  40d627:	dec    esi
  40d628:	test   DWORD PTR [esp+eax*8+0x4470754e],0xab30001b
  40d633:	mov    ch,0x2f
  40d635:	add    BYTE PTR [ebp+0x39],0xe2
  40d639:	mov    esi,0xefec9bb
  40d63e:	ins    DWORD PTR es:[edi],dx
  40d63f:	dec    edi
  40d640:	sub    BYTE PTR [esi],ah
  40d642:	push   ds
  40d643:	dec    esp
  40d644:	js     0x40d5e9
  40d646:	inc    ebp
  40d647:	sub    ebp,DWORD PTR [ebp-0x5b]
  40d64a:	xor    ah,BYTE PTR [eax+0x71e03c14]
  40d650:	pop    edx
  40d651:	rcr    ah,1
  40d653:	pop    esi
  40d654:	jne    0x40d611
  40d656:	xor    BYTE PTR [eax+0x44],0x4b
  40d65a:	out    dx,eax
  40d65b:	or     bh,BYTE PTR [ecx]
  40d65d:	stc    
  40d65e:	add    eax,0xd51c4e30
  40d663:	cmp    ch,BYTE PTR [edx]
  40d665:	fwait
  40d666:	test   BYTE PTR ds:0x579da30f,dl
  40d66c:	pop    es
  40d66d:	mov    al,ds:0x7b5a6f43
  40d672:	mov    WORD PTR [ebx],ss
  40d674:	sbb    esp,DWORD PTR [ebp-0x35889cfa]
  40d67a:	or     esi,esi
  40d67c:	fnstcw WORD PTR [edi+0x7aa14fa9]
  40d682:	lea    esp,[ebx-0x17c58aa4]
  40d688:	jp     0x40d6e7
  40d68a:	push   ebx
  40d68b:	int3   
  40d68c:	xor    bl,BYTE PTR [ebx-0x28]
  40d68f:	jbe    0x40d6ca
  40d691:	adc    dh,BYTE PTR [ebp-0x54]
  40d694:	add    DWORD PTR [edi-0x34e29b2b],ecx
  40d69a:	clc    
  40d69b:	add    al,0xa4
  40d69d:	push   edx
  40d69e:	and    eax,0xacfeadbd
  40d6a3:	add    BYTE PTR [ebx-0x1bef5ef7],dl
  40d6a9:	sbb    dh,BYTE PTR [edx-0x12]
  40d6ac:	rol    BYTE PTR [eax-0x8398f12],0x52
  40d6b3:	arpl   WORD PTR [ebp+ebp*8+0x57],bp
  40d6b7:	shr    DWORD PTR [eax+0x5],cl
  40d6ba:	rol    DWORD PTR [ebp-0x4d],cl
  40d6bd:	mov    cl,0xdb
  40d6bf:	in     eax,dx
  40d6c0:	ss (bad) 
  40d6c2:	dec    ecx
  40d6c3:	mov    ds:0xca961404,eax
  40d6c8:	imul   edi,DWORD PTR [esi],0xffffff82
  40d6cb:	ss data16 mov bl,0x20
  40d6cf:	repnz repnz call 0x40c9:0x15250fca
  40d6d8:	adc    ebx,DWORD PTR [bx+di]
  40d6db:	jmp    0x6fda:0xd2fe3a49
  40d6e2:	and    al,0x31
  40d6e4:	push   esp
  40d6e5:	add    BYTE PTR [ebx+eax*2],bh
  40d6e8:	out    dx,eax
  40d6e9:	sub    BYTE PTR [eax],cl
  40d6eb:	dec    ecx
  40d6ec:	mov    ebp,0x9a53e054
  40d6f1:	int3   
  40d6f2:	fnstcw WORD PTR [eax]
  40d6f4:	jo     0x40d716
  40d6f6:	cmp    BYTE PTR [ebx+0x65],bl
  40d6f9:	sub    ecx,DWORD PTR [edx+0x0]
  40d6fc:	jbe    0x40d6a6
  40d6fe:	mov    WORD PTR [eax+0x3c],?
  40d701:	mov    ebx,0xc47f6958
  40d706:	xchg   ecx,eax
  40d707:	scas   al,BYTE PTR es:[edi]
  40d708:	lods   eax,DWORD PTR ds:[esi]
  40d709:	cmp    al,0xa9
  40d70b:	push   edi
  40d70c:	in     al,0x6d
  40d70e:	jmp    0x40d712
  40d710:	xor    al,0x8
  40d712:	or     eax,0xe7542cc2
  40d717:	inc    esp
  40d718:	mov    al,ds:0x7856a400
  40d71d:	inc    edx
  40d71e:	push   edi
  40d71f:	jmp    0xa958:0x9c5ba8a
  40d726:	pop    esi
  40d727:	push   esp
  40d728:	retf   
  40d729:	jg     0x40d71c
  40d72b:	inc    ebx
  40d72c:	dec    ebp
  40d72d:	inc    eax
  40d72e:	sbb    DWORD PTR [edi+0x43],ecx
  40d731:	das    
  40d732:	ins    DWORD PTR es:[edi],dx
  40d733:	shl    BYTE PTR [edx],0x32
  40d736:	imul   ecx,esi,0x26
  40d739:	icebp  
  40d73a:	mov    ds,WORD PTR [edi-0x5b]
  40d73d:	out    0xee,eax
  40d73f:	(bad)  
  40d740:	in     eax,0x4e
  40d742:	pop    esp
  40d743:	lods   al,BYTE PTR ds:[esi]
  40d744:	jmp    0x2bcfb6df
  40d749:	or     al,0x55
  40d74b:	mov    edi,0xa15441f7
  40d750:	ja     0x40d7a0
  40d752:	fst    QWORD PTR [esp+ecx*2]
  40d755:	mov    ebp,0x6e50f4fa
  40d75a:	and    ecx,eax
  40d75c:	leave  
  40d75d:	pop    ebp
  40d75e:	repz retf 0xc514
  40d762:	ffreep st(7)
  40d764:	fadd   st(1),st
  40d766:	xor    al,bl
  40d768:	push   cs
  40d769:	pop    ebp
  40d76a:	test   BYTE PTR [edx],bl
  40d76c:	sub    DWORD PTR [esi+0x38],ecx
  40d76f:	rcr    BYTE PTR [edi+0x5d],0x9d
  40d773:	fisttp DWORD PTR [ecx-0x59]
  40d776:	pop    edi
  40d777:	scas   eax,DWORD PTR es:[edi]
  40d778:	ficomp DWORD PTR [eax+0x23]
  40d77b:	mov    WORD PTR [ebx],ds
  40d77d:	mov    eax,0xc0efd807
  40d782:	add    edi,ebp
  40d784:	ret    0x161e
  40d787:	cmp    BYTE PTR [ecx],ch
  40d789:	jnp    0x40d768
  40d78b:	jg     0x40d797
  40d78d:	in     al,dx
  40d78e:	jb     0x40d7ab
  40d790:	push   ecx
  40d791:	lods   al,BYTE PTR ds:[esi]
  40d792:	xor    al,0x60
  40d794:	jle    0x40d73a
  40d796:	pop    edx
  40d797:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d798:	retf   0x9daa
  40d79b:	popaw  
  40d79d:	pop    ebx
  40d79e:	add    ebx,DWORD PTR [edx+0x5a53a8a3]
  40d7a4:	mov    bl,0x31
  40d7a6:	adc    DWORD PTR [eax],esp
  40d7a8:	rol    bl,cl
  40d7aa:	or     eax,0xe243cc0b
  40d7af:	stos   DWORD PTR es:[edi],eax
  40d7b0:	or     al,0x48
  40d7b2:	retf   
  40d7b3:	pop    ecx
  40d7b4:	or     BYTE PTR [ebp-0x47],0xbd
  40d7b8:	xchg   esp,eax
  40d7b9:	and    eax,0xf501e414
  40d7be:	mov    ?,WORD PTR [ebx*4+0x717bdee]
  40d7c5:	jbe    0x40d7c5
  40d7c7:	jne    0x81fa6f3e
  40d7cd:	cmp    DWORD PTR [ebx],esp
  40d7cf:	adc    al,0x48
  40d7d1:	cmc    
  40d7d2:	nop
  40d7d3:	dec    edi
  40d7d4:	xor    DWORD PTR [edi],0xfcaaaab2
  40d7da:	fstp   TBYTE PTR ds:0xfc7ec262
  40d7e0:	and    al,0xf6
  40d7e2:	xchg   BYTE PTR [ecx+esi*8],al
  40d7e5:	sbb    BYTE PTR ds:0x341d2b7e,ah
  40d7eb:	loopne 0x40d847
  40d7ed:	int    0xf
  40d7ef:	retf   0xdbd
  40d7f2:	inc    edi
  40d7f3:	sahf   
  40d7f4:	outs   dx,BYTE PTR ds:[esi]
  40d7f5:	jmp    0xf9fa:0x11aee54f
  40d7fc:	dec    eax
  40d7fd:	es call 0x2b828f59
  40d803:	sahf   
  40d804:	sbb    cl,cl
  40d806:	jecxz  0x40d7cf
  40d808:	add    dh,al
  40d80a:	not    BYTE PTR [ecx-0x2f]
  40d80d:	stos   DWORD PTR es:[edi],eax
  40d80e:	test   BYTE PTR [ebx-0x3811cf18],ah
  40d814:	clc    
  40d815:	imul   ebp,DWORD PTR [ebp-0x1c],0xffffff92
  40d819:	xor    al,0xa8
  40d81b:	mov    ds:0x792e1626,eax
  40d820:	push   ecx
  40d821:	mov    cl,0xa6
  40d823:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d824:	xchg   ebp,ebx
  40d826:	out    0x96,al
  40d828:	pop    es
  40d829:	push   edi
  40d82a:	bound  ecx,QWORD PTR [esi+0x74]
  40d82d:	jno    0x40d873
  40d82f:	mov    eax,0xe5288629
  40d834:	pop    ecx
  40d835:	out    0xbe,al
  40d837:	test   BYTE PTR [eax-0x69],0x74
  40d83b:	adc    al,0xc6
  40d83d:	fmul   st(1),st
  40d83f:	in     eax,0xbe
  40d841:	aad    0xdc
  40d843:	sahf   
  40d844:	out    0x9a,eax
  40d846:	retf   0x2855
  40d849:	fsub   DWORD PTR [ecx+0x48efbbe9]
  40d84f:	pop    edx
  40d850:	cmp    DWORD PTR [edx+edi*2],edi
  40d853:	cmp    BYTE PTR [edi-0x3e],dh
  40d856:	loopne 0x40d7e7
  40d858:	mov    al,ds:0x19165eff
  40d85d:	loopne 0x40d83d
  40d85f:	xor    cl,BYTE PTR [edi-0x2602926a]
  40d865:	or     ebx,DWORD PTR [edx-0x6c]
  40d868:	clc    
  40d869:	xor    ch,BYTE PTR [eax]
  40d86b:	jne    0x40d88a
  40d86d:	shr    DWORD PTR [edi-0x5b],0x9d
  40d871:	dec    eax
  40d872:	xlat   BYTE PTR ds:[ebx]
  40d873:	jecxz  0x40d8c6
  40d875:	inc    ebp
  40d876:	sub    esp,DWORD PTR [ebx+esi*1-0x4d]
  40d87a:	dec    edi
  40d87b:	mov    ds:0x620a0514,eax
  40d880:	sub    BYTE PTR [esi-0x3e4780ec],0xb1
  40d887:	push   edi
  40d888:	xchg   esi,eax
  40d889:	neg    BYTE PTR ds:0xafd27cb1
  40d88f:	ins    DWORD PTR es:[edi],dx
  40d890:	test   BYTE PTR [edx+edi*1-0x654e38e0],cl
  40d897:	jo     0x40d89c
  40d899:	(bad)  
  40d89a:	call   0x8a882331
  40d89f:	repnz xor esi,DWORD PTR [eax-0x3bac5884]
  40d8a6:	popf   
  40d8a7:	xchg   BYTE PTR [esp+eax*1],ch
  40d8aa:	int3   
  40d8ab:	retf   
  40d8ac:	nop
  40d8ad:	in     eax,0x5e
  40d8af:	cmp    DWORD PTR [ebx+0x64978a5f],esp
  40d8b5:	mov    bl,0xcb
  40d8b7:	jg     0x40d85c
  40d8b9:	or     ecx,ebx
  40d8bb:	pop    ebp
  40d8bc:	and    BYTE PTR [edx],bl
  40d8be:	jg     0x40d88f
  40d8c0:	imul   ebp,DWORD PTR [edx+0x10],0xc19f175e
  40d8c7:	sti    
  40d8c8:	inc    edi
  40d8c9:	into   
  40d8ca:	(bad)  [edx+0x4c]
  40d8cd:	in     al,0x1
  40d8cf:	test   al,0x6
  40d8d1:	pop    eax
  40d8d2:	lahf   
  40d8d3:	mov    ch,0x2e
  40d8d5:	or     eax,0xa043b6c5
  40d8da:	push   0xa
  40d8dc:	jg     0x40d8cf
  40d8de:	pop    ss
  40d8df:	xor    DWORD PTR [edx],ecx
  40d8e1:	pop    esi
  40d8e2:	push   ebx
  40d8e3:	cli    
  40d8e4:	mov    eax,0x69c9bd57
  40d8e9:	nop
  40d8ea:	fadd   st(2),st
  40d8ec:	scas   al,BYTE PTR es:[edi]
  40d8ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8ee:	xchg   edi,eax
  40d8ef:	call   0xa1d1:0xd75ae389
  40d8f6:	fst    QWORD PTR [eax-0x3c7a7a41]
  40d8fc:	(bad)  
  40d8fd:	iret   
  40d8fe:	cmc    
  40d8ff:	xchg   DWORD PTR [esi-0x71],edi
  40d902:	out    0x47,eax
  40d904:	cdq    
  40d905:	dec    ebp
  40d906:	push   0xffffff8f
  40d908:	xchg   esp,eax
  40d909:	aad    0x82
  40d90b:	pop    esp
  40d90c:	stos   DWORD PTR es:[edi],eax
  40d90d:	in     eax,0x3c
  40d90f:	push   0xffffff91
  40d911:	push   esp
  40d912:	jae    0x40d8cf
  40d914:	pop    esi
  40d915:	pop    ds
  40d916:	mov    gs,WORD PTR [esi-0x15]
  40d919:	push   edi
  40d91a:	lea    edx,[ecx-0x59898d83]
  40d920:	xchg   edi,eax
  40d921:	jmp    0x63502ad8
  40d926:	gs mov bh,bh
  40d929:	xchg   edx,eax
  40d92a:	push   edx
  40d92b:	xor    bl,0x49
  40d92e:	ror    DWORD PTR [edi+esi*2-0xc883fe4],cl
  40d935:	in     al,dx
  40d936:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d937:	inc    eax
  40d938:	xchg   BYTE PTR [ecx-0x61],bl
  40d93b:	mov    ecx,esp
  40d93d:	fldenv [edi*4-0x662f8e69]
  40d944:	leave  
  40d945:	push   ebx
  40d946:	popa   
  40d947:	test   DWORD PTR [edx+0x184ae50],eax
  40d94d:	sub    eax,DWORD PTR [esi-0x79a280c6]
  40d953:	lahf   
  40d954:	fild   WORD PTR [ebx-0x70]
  40d957:	or     eax,0xd0e35aa
  40d95c:	repz xchg esi,eax
  40d95e:	stos   DWORD PTR es:[edi],eax
  40d95f:	sub    ch,bl
  40d961:	inc    ecx
  40d962:	mov    esi,0x9b5d58a4
  40d967:	xor    BYTE PTR [ebp-0x498b15c1],al
  40d96d:	stc    
  40d96e:	push   0x3e19441a
  40d973:	in     al,dx
  40d974:	or     dh,BYTE PTR [ebp-0x26]
  40d977:	stos   BYTE PTR es:[edi],al
  40d978:	mov    esp,0xfb143fe5
  40d97d:	mov    ds:0x96fb0e75,al
  40d982:	mov    ecx,0xc632add8
  40d987:	xchg   esi,eax
  40d988:	sbb    al,0x9f
  40d98a:	inc    edx
  40d98b:	neg    BYTE PTR [eax]
  40d98d:	adc    cl,BYTE PTR [edi+0x4f]
  40d990:	test   al,0xd7
  40d992:	and    BYTE PTR [edx-0x19],dl
  40d995:	adc    bl,BYTE PTR [edi-0x6b]
  40d998:	push   edx
  40d999:	aam    0x8b
  40d99b:	push   eax
  40d99c:	inc    ebx
  40d99d:	std    
  40d99e:	jno    0x40d97d
  40d9a0:	fld    TBYTE PTR [ebx]
  40d9a2:	xchg   BYTE PTR [ebx+0x35],al
  40d9a5:	retf   0xae3b
  40d9a8:	test   eax,0xab9b694d
  40d9ad:	repz xor DWORD PTR [edx],edi
  40d9b0:	repnz fisttp DWORD PTR [eax-0x72aa240]
  40d9b7:	(bad)  
  40d9b8:	retf   0x32ed
  40d9bb:	mov    eax,ecx
  40d9bd:	mov    ds:0xa8a9577e,al
  40d9c2:	or     ch,dl
  40d9c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9c5:	fldenv [ebx-0x53]
  40d9c8:	imul   edi,DWORD PTR [eax-0x790c096b],0x51e85038
  40d9d2:	sbb    BYTE PTR [ecx],ch
  40d9d4:	adc    eax,0xb4a4222a
  40d9d9:	adc    DWORD PTR fs:[esi+0x7e56db48],esp
  40d9e0:	push   DWORD PTR [edi-0x76]
  40d9e3:	retf   0xa427
  40d9e6:	ja     0x40d97a
  40d9e8:	add    BYTE PTR [edx-0x74f60c4e],dl
  40d9ee:	push   eax
  40d9ef:	or     DWORD PTR [ebx],ebp
  40d9f1:	or     dh,dh
  40d9f3:	xchg   BYTE PTR [eax],bh
  40d9f5:	mov    edx,0xbc3c63fc
  40d9fa:	adc    ecx,ebp
  40d9fc:	push   ecx
  40d9fd:	lahf   
  40d9fe:	jge    0x40d9cf
  40da00:	add    cl,BYTE PTR [esi+0x65]
  40da03:	inc    esp
  40da04:	je     0x40d9fd
  40da06:	es adc al,0x87
  40da09:	inc    ebp
  40da0a:	mul    BYTE PTR [ebx]
  40da0c:	push   cs
  40da0d:	popa   
  40da0e:	dec    ecx
  40da0f:	into   
  40da10:	inc    esp
  40da11:	loope  0x40d9d9
  40da13:	int    0x47
  40da15:	xor    al,0xa0
  40da17:	sub    eax,0x7dee7229
  40da1c:	sub    ebx,DWORD PTR [ecx+0x711743af]
  40da22:	sbb    al,0x22
  40da24:	adc    DWORD PTR [edx],0x5
  40da27:	dec    eax
  40da28:	mov    eax,DWORD PTR [esi+edi*4+0x73492216]
  40da2f:	dec    edx
  40da30:	retf   0x1b08
  40da33:	rcr    DWORD PTR [edx],cl
  40da35:	addr16 inc ecx
  40da37:	push   esi
  40da38:	xchg   DWORD PTR [edx+0x46],esi
  40da3b:	hlt    
  40da3c:	add    dl,BYTE PTR [ebp+0x752cf392]
  40da42:	mov    edi,0x114935fd
  40da47:	inc    eax
  40da48:	jmp    FWORD PTR [ecx+0x70]
  40da4b:	iret   
  40da4c:	xor    BYTE PTR [ecx-0x17],0x38
  40da50:	out    0xd4,eax
  40da52:	inc    edi
  40da53:	jnp    0x40daa0
  40da55:	sbb    al,ch
  40da57:	(bad)  
  40da58:	jmp    0x40da8a
  40da5a:	popf   
  40da5b:	sub    eax,0xac3a70cd
  40da60:	xchg   esp,eax
  40da61:	cmp    al,0x13
  40da63:	adc    al,0x5a
  40da65:	pop    ss
  40da66:	repz mov ch,0xdd
  40da69:	add    edx,eax
  40da6b:	gs dec edi
  40da6d:	dec    eax
  40da6e:	(bad)  
  40da6f:	lock jae 0x40d9fb
  40da72:	jmp    0xd402:0xe1feb355
  40da79:	jnp    0x40da9b
  40da7b:	mov    ebp,0xc86ec69b
  40da80:	cwde   
  40da81:	rcr    BYTE PTR [ebp+0x29],0x7
  40da85:	mov    eax,0xb3046d97
  40da8a:	push   ss
  40da8b:	push   ebp
  40da8c:	push   cs
  40da8d:	enter  0x8c6d,0xf2
  40da91:	sbb    eax,0xe7c672b5
  40da96:	jmp    0x40da41
  40da98:	outs   dx,BYTE PTR ds:[esi]
  40da99:	mov    dh,0xda
  40da9b:	jle    0x40da27
  40da9d:	jb     0x40dac7
  40da9f:	adc    eax,0xa5dfcd8d
  40daa4:	or     eax,0xe4273812
  40daa9:	push   es
  40daaa:	jp     0x40da3e
  40daac:	jns    0x40dad4
  40daae:	cmp    al,0x23
  40dab0:	cmp    eax,0x7525ffe9
  40dab5:	jmp    0x2dd3ee86
  40daba:	push   ebp
  40dabb:	mov    esi,0xde58f0a8
  40dac0:	imul   dh
  40dac2:	add    eax,0xd06c26ef
  40dac7:	jmp    0xa128a4f
  40dacc:	stos   BYTE PTR es:[edi],al
  40dacd:	inc    esi
  40dace:	adc    DWORD PTR [edi-0x3d],eax
  40dad1:	ja     0x40dae8
  40dad3:	popa   
  40dad4:	bound  ecx,QWORD PTR [ecx-0x70f56c49]
  40dada:	loope  0x40dab8
  40dadc:	dec    esp
  40dadd:	add    esp,DWORD PTR [ecx]
  40dadf:	push   0xc342efb3
  40dae4:	lods   al,BYTE PTR ds:[esi]
  40dae5:	mov    dl,0x3
  40dae7:	dec    ebx
  40dae8:	add    al,0x99
  40daea:	rcl    BYTE PTR [edx-0x57],1
  40daed:	or     ecx,DWORD PTR [ecx-0x1b]
  40daf0:	adc    DWORD PTR [edi],edi
  40daf2:	or     DWORD PTR [esi],eax
  40daf4:	inc    ebp
  40daf5:	xchg   esi,eax
  40daf6:	jns    0x40dad9
  40daf8:	jno    0x40db08
  40dafa:	ds loop 0x40db45
  40dafd:	repz fs sub ch,al
  40db01:	(bad)  
  40db02:	int3   
  40db03:	rcr    DWORD PTR [edx+0x57bae1dd],0x41
  40db0a:	add    al,0xe2
  40db0c:	pusha  
  40db0d:	sbb    DWORD PTR [eax-0x552c38ee],ebp
  40db13:	daa    
  40db14:	idiv   DWORD PTR [edx+edi*2-0x43]
  40db18:	adc    BYTE PTR [ebp-0x1650b8b7],cl
  40db1e:	and    edx,0xffffffe1
  40db21:	out    0xa3,eax
  40db23:	aas    
  40db24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db25:	ins    DWORD PTR es:[edi],dx
  40db26:	mov    ecx,0xc128c2e6
  40db2b:	mov    ebp,0x7d0b9a85
  40db30:	aaa    
  40db31:	jne    0x40db57
  40db33:	mov    al,ds:0x60c3f685
  40db38:	or     DWORD PTR ds:0x8f4903cd,esp
  40db3e:	sub    al,ch
  40db40:	inc    edx
  40db41:	adc    cl,BYTE PTR ds:0x8d7750fe
  40db47:	mov    dl,0xfa
  40db49:	mov    ss,ecx
  40db4b:	inc    ecx
  40db4c:	dec    edx
  40db4d:	sbb    cl,dh
  40db4f:	fcmovbe st,st(7)
  40db51:	ror    DWORD PTR [edi+ebp*2+0x43],cl
  40db55:	out    0xe7,al
  40db57:	mov    dl,0xd8
  40db59:	adc    BYTE PTR [esi+0x56],dh
  40db5c:	xor    al,0x24
  40db5e:	push   0x5c
  40db60:	fadd   DWORD PTR [edi+0x15e77485]
  40db66:	int3   
  40db67:	inc    ebp
  40db68:	cld    
  40db69:	jl     0x40db65
  40db6b:	lahf   
  40db6c:	call   FWORD PTR ds:0x3e7d07a3
  40db72:	mov    eax,ds:0xfa656cd2
  40db77:	mov    bh,0x9f
  40db79:	rol    ch,cl
  40db7b:	sar    DWORD PTR [eax-0x8],1
  40db7e:	jg     0x40db0d
  40db80:	xchg   edi,eax
  40db81:	(bad)  
  40db83:	lea    edi,[esi]
  40db85:	fstp   QWORD PTR [esp+esi*2]
  40db88:	xor    al,0xec
  40db8a:	add    al,0xb1
  40db8c:	cs pushf 
  40db8e:	icebp  
  40db8f:	in     al,dx
  40db90:	mov    esi,ss
  40db92:	ins    DWORD PTR es:[edi],dx
  40db93:	iret   
  40db94:	xchg   ebx,eax
  40db95:	sub    eax,0x54f2eb50
  40db9a:	sbb    eax,0x82e4af2f
  40db9f:	mov    bh,0xe3
  40dba1:	xchg   edi,eax
  40dba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dba3:	mov    eax,?
  40dba5:	scas   eax,DWORD PTR es:[edi]
  40dba6:	xchg   ebx,eax
  40dba7:	xchg   esp,eax
  40dba8:	mov    dl,0xda
  40dbaa:	adc    BYTE PTR [ebx+ebp*2],bh
  40dbad:	cmp    bh,BYTE PTR [esi-0x7e]
  40dbb0:	pop    edi
  40dbb1:	cmp    BYTE PTR [ebx-0x42ef720a],ah
  40dbb7:	xor    DWORD PTR [edx-0x4b905c55],ebx
  40dbbd:	loop   0x40dbb9
  40dbbf:	or     DWORD PTR [edx+0x11],0x488dd515
  40dbc6:	sbb    BYTE PTR [ebp-0xabc9427],0x76
  40dbcd:	xchg   edi,eax
  40dbce:	(bad)  
  40dbcf:	es adc eax,0x68a97b81
  40dbd5:	aas    
  40dbd6:	sbb    BYTE PTR [esi*4-0x6e9a5cf7],0xac
  40dbde:	test   BYTE PTR [ecx-0xd28ba39],cl
  40dbe4:	jecxz  0x40db82
  40dbe6:	xor    eax,DWORD PTR [ecx-0x4a1d4d43]
  40dbec:	fwait
  40dbed:	xchg   DWORD PTR [esi-0x17fffb24],edi
  40dbf3:	inc    eax
  40dbf4:	loope  0x40dbda
  40dbf6:	mov    al,0xa9
  40dbf8:	mov    esi,0x52dd50a7
  40dbfd:	test   DWORD PTR [edx],esi
  40dbff:	fldenv [esi]
  40dc01:	not    dh
  40dc03:	mov    ds,ebx
  40dc05:	push   edi
  40dc06:	push   esi
  40dc07:	xor    esi,DWORD PTR [eax+0x47]
  40dc0a:	jbe    0x40dc11
  40dc0c:	fidiv  DWORD PTR [edx-0x1b90a84a]
  40dc12:	and    al,0xcf
  40dc14:	fbld   TBYTE PTR [ebp-0x63b2d1a]
  40dc1a:	cmp    BYTE PTR [esi+0x45],bl
  40dc1d:	xchg   DWORD PTR [ebx-0x4f],edx
  40dc20:	sbb    eax,DWORD PTR [ecx]
  40dc22:	add    DWORD PTR [di-0x2dd4],ebp
  40dc27:	stos   DWORD PTR es:[edi],eax
  40dc28:	add    al,0x5d
  40dc2a:	cs push ds
  40dc2c:	ss pushf 
  40dc2e:	aam    0x91
  40dc30:	aad    0xf9
  40dc32:	add    bh,cl
  40dc34:	pop    edx
  40dc35:	mov    edi,edi
  40dc37:	mov    ebp,0x5cbb9e49
  40dc3c:	stos   BYTE PTR es:[edi],al
  40dc3d:	lock fcomp QWORD PTR [esi+0x2f]
  40dc41:	fdiv   st,st(2)
  40dc43:	pushf  
  40dc44:	mov    dl,0x64
  40dc46:	lock and ah,dl
  40dc49:	ins    DWORD PTR es:[edi],dx
  40dc4a:	ins    DWORD PTR es:[edi],dx
  40dc4b:	dec    eax
  40dc4c:	nop
  40dc4d:	sahf   
  40dc4e:	cmp    edi,edx
  40dc50:	or     esi,0x67170288
  40dc56:	adc    BYTE PTR [ecx-0x2dd7e694],bl
  40dc5c:	sbb    DWORD PTR [edi+0x13a0ace5],eax
  40dc62:	mov    WORD PTR [eax+ebp*8-0x3],?
  40dc66:	xor    DWORD PTR [ebx-0x72d2c257],eax
  40dc6c:	cmp    bh,BYTE PTR [esi-0xa519f0b]
  40dc72:	mov    ebp,0x39d40dbf
  40dc77:	sbb    ebx,ecx
  40dc79:	mov    dl,0x6d
  40dc7b:	adc    cl,ch
  40dc7d:	jnp    0x40dcbb
  40dc7f:	push   esp
  40dc80:	sbb    BYTE PTR [esi-0x54],dl
  40dc83:	pop    edi
  40dc84:	out    0xfc,al
  40dc86:	or     BYTE PTR [edx],bh
  40dc88:	aam    0x76
  40dc8a:	fstp   TBYTE PTR [esi+eiz*2]
  40dc8d:	cwde   
  40dc8e:	sub    DWORD PTR [edx-0x2e],eax
  40dc91:	sub    ch,dh
  40dc93:	cmc    
  40dc94:	jl     0x40dce4
  40dc96:	dec    esi
  40dc97:	mov    eax,ds:0xa528b033
  40dc9c:	fld    TBYTE PTR fs:[edi]
  40dc9f:	imul   ebp,esp,0x800a7599
  40dca5:	inc    ebp
  40dca6:	and    BYTE PTR [edx-0x4b],dl
  40dca9:	lds    ebp,FWORD PTR [edi]
  40dcab:	jecxz  0x40dc9a
  40dcad:	scas   eax,DWORD PTR es:[edi]
  40dcae:	ret    
  40dcaf:	push   ds
  40dcb0:	dec    eax
  40dcb1:	xor    DWORD PTR [esi-0xe],eax
  40dcb4:	dec    eax
  40dcb5:	dec    ecx
  40dcb6:	cmp    dh,BYTE PTR [edi+ecx*1]
  40dcb9:	mov    ebp,0x790ffb45
  40dcbe:	jne    0x40dd0c
  40dcc0:	add    eax,0x3fe74871
  40dcc5:	call   0x16b1f242
  40dcca:	call   0x3686:0x957a1c97
  40dcd1:	je     0x40dcdf
  40dcd3:	mov    ebp,0xc02945fe
  40dcd8:	int3   
  40dcd9:	mov    dl,0x5b
  40dcdb:	xchg   DWORD PTR [esi],eax
  40dcdd:	out    dx,al
  40dcde:	cwde   
  40dcdf:	fwait
  40dce0:	cli    
  40dce1:	out    dx,al
  40dce2:	cmp    esp,DWORD PTR [edi-0x29]
  40dce5:	mov    bh,dl
  40dce7:	rcr    DWORD PTR [edx+0x1e],0xc4
  40dceb:	jecxz  0x40dd55
  40dced:	pusha  
  40dcee:	call   0x353f0350
  40dcf3:	fs das 
  40dcf5:	mov    esp,0x16f5f05b
  40dcfa:	das    
  40dcfb:	xchg   ebx,eax
  40dcfc:	aad    0x3b
  40dcfe:	addr16 cli 
  40dd00:	jmp    DWORD PTR [ebx+esi*1]
  40dd03:	sub    al,0x53
  40dd05:	inc    ecx
  40dd06:	pop    esp
  40dd07:	adc    ecx,esp
  40dd09:	or     DWORD PTR [edx-0x81f3d1e],0x25
  40dd10:	dec    esi
  40dd11:	dec    edx
  40dd12:	test   eax,0xb6073497
  40dd17:	sti    
  40dd18:	popf   
  40dd19:	arpl   ax,bx
  40dd1b:	dec    ebx
  40dd1c:	sbb    DWORD PTR [edi],ecx
  40dd1e:	push   esi
  40dd1f:	mov    bl,0x28
  40dd21:	ja     0x40dd17
  40dd23:	fcomp  st(6)
  40dd25:	jmp    0x40dd87
  40dd27:	push   esp
  40dd28:	adc    al,0xb4
  40dd2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd2b:	(bad)  
  40dd2c:	repnz lds edx,FWORD PTR ds:[edx-0x6e]
  40dd31:	mov    WORD PTR [ebx],es
  40dd33:	or     BYTE PTR [eax],bl
  40dd35:	pop    ecx
  40dd36:	or     eax,0xd815e33c
  40dd3b:	pop    esi
  40dd3c:	jbe    0x40dd26
  40dd3e:	aas    
  40dd3f:	int    0x53
  40dd41:	mov    ss,edi
  40dd43:	test   DWORD PTR [edx+0x2e5e6b7d],0x16e54136
  40dd4d:	fwait
  40dd4e:	hlt    
  40dd4f:	es jg  0x40dd9f
  40dd52:	mov    ss,WORD PTR [eax]
  40dd54:	and    BYTE PTR [ebx+0x59],cl
  40dd57:	out    dx,eax
  40dd58:	jbe    0x40dda3
  40dd5a:	pop    ecx
  40dd5b:	fdivr  QWORD PTR [esi-0x32]
  40dd5e:	mov    ?,edx
  40dd60:	aad    0xd6
  40dd62:	ret    
  40dd63:	cmp    cl,cl
  40dd65:	pop    eax
  40dd66:	cmp    BYTE PTR [esi-0x37065d92],0xa4
  40dd6d:	inc    edx
  40dd6e:	push   0x70
  40dd70:	and    ch,BYTE PTR [bx+si]
  40dd73:	adc    al,0xa7
  40dd75:	jmp    0xf9159bd2
  40dd7a:	cs mov ecx,0x3cc9377
  40dd80:	push   edx
  40dd81:	and    eax,0xae32b456
  40dd86:	xor    BYTE PTR [ebx+edi*2-0x169345d8],bl
  40dd8d:	div    BYTE PTR [eax+0x26032abf]
  40dd93:	pop    esp
  40dd95:	pop    edi
  40dd96:	adc    BYTE PTR [ebx+0x28],0x48
  40dd9a:	jge    0x40dd71
  40dd9c:	push   0x1946ab78
  40dda1:	add    eax,0xfbe14570
  40dda6:	inc    eax
  40dda7:	cmp    eax,0xf40ba518
  40ddac:	aaa    
  40ddad:	jnp    0x40dd76
  40ddaf:	xchg   ebx,eax
  40ddb0:	repnz das 
  40ddb2:	push   cs
  40ddb3:	jle    0x40dd41
  40ddb5:	cmc    
  40ddb6:	imul   edi,DWORD PTR [esi+edi*4],0x4d
  40ddba:	mov    dl,0xa
  40ddbc:	enter  0x9624,0x95
  40ddc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ddc1:	push   ebx
  40ddc2:	add    BYTE PTR [ecx-0x7e14c62a],al
  40ddc8:	repz ret 
  40ddca:	mov    esp,0x193dd547
  40ddcf:	push   0xffffffb3
  40ddd1:	lods   eax,DWORD PTR es:[esi]
  40ddd3:	stos   BYTE PTR es:[edi],al
  40ddd4:	add    esp,DWORD PTR [edi]
  40ddd6:	ret    0xbcc4
  40ddd9:	pop    cx
  40dddb:	pop    ss
  40dddc:	or     eax,0xc8034273
  40dde1:	ins    DWORD PTR es:[edi],dx
  40dde2:	pop    ebp
  40dde3:	leave  
  40dde4:	ficomp WORD PTR [ebx-0x7a3d3aa6]
  40ddea:	lsl    edi,WORD PTR [eax+esi*2+0x12]
  40ddef:	stos   DWORD PTR es:[edi],eax
  40ddf0:	mov    edi,0xfcd80462
  40ddf5:	adc    DWORD PTR [edi-0x1e9167cf],edx
  40ddfb:	stos   DWORD PTR es:[edi],eax
  40ddfc:	mov    eax,ds:0x748425fc
  40de01:	jg     0x40dd88
  40de03:	add    dh,bl
  40de05:	(bad)  
  40de06:	ret    0xd9e7
  40de09:	std    
  40de0a:	xchg   esp,eax
  40de0b:	cld    
  40de0c:	add    edx,DWORD PTR [ebp-0x33]
  40de0f:	push   edi
  40de10:	or     cl,BYTE PTR [ebx]
  40de12:	pop    esp
  40de13:	cmp    esp,0x52
  40de16:	or     bl,ch
  40de18:	mov    ah,0xde
  40de1a:	adc    al,0x52
  40de1c:	or     eax,0x2ef8c504
  40de21:	and    al,0x7f
  40de23:	and    ch,BYTE PTR [edi-0x4c7ec9e7]
  40de29:	pusha  
  40de2a:	call   0x521:0xc73b3f63
  40de31:	mov    ah,0xbf
  40de33:	jmp    0x729b1e4
  40de38:	ret    0xc1a8
  40de3b:	mov    bh,0xce
  40de3d:	repnz stc 
  40de3f:	push   0x29
  40de41:	aaa    
  40de42:	cmp    dl,al
  40de44:	int3   
  40de45:	mul    BYTE PTR [eax+eiz*8]
  40de48:	fiadd  WORD PTR [edi]
  40de4a:	xchg   BYTE PTR [esi+0x7e],cl
  40de4d:	scas   eax,DWORD PTR es:[edi]
  40de4e:	jg     0x40de83
  40de50:	out    dx,eax
  40de51:	or     BYTE PTR [edx-0x69669451],bh
  40de57:	popa   
  40de58:	jl     0x40de5e
  40de5a:	in     al,0x68
  40de5c:	inc    ebx
  40de5d:	mov    ss,WORD PTR [ebx+0x7b]
  40de60:	rcr    BYTE PTR [ebp+0x32c8d8ee],1
  40de66:	call   0xe283:0x9b218be8
  40de6d:	jle    0x40de02
  40de6f:	js     0x40de9b
  40de71:	mov    dl,0xbc
  40de73:	(bad)  
  40de75:	in     al,0xb9
  40de77:	retf   0x77
  40de7a:	ficomp WORD PTR [edi-0x1a18b8ee]
  40de80:	cmp    eax,0x14041ebd
  40de85:	push   ds
  40de86:	push   0xa12db02f
  40de8b:	mov    al,ds:0xabae3222
  40de90:	icebp  
  40de91:	gs mov dl,0x5d
  40de94:	loopne 0x40de5e
  40de96:	lods   al,BYTE PTR ds:[esi]
  40de97:	jns    0x40de65
  40de99:	sbb    al,0x17
  40de9b:	adc    BYTE PTR [ebp+0x67],ch
  40de9e:	in     al,dx
  40de9f:	stos   BYTE PTR es:[edi],al
  40dea0:	je     0x40df15
  40dea2:	xor    BYTE PTR [edi+ebp*1],0xfa
  40dea6:	js     0x40de7e
  40dea8:	adc    al,0xba
  40deaa:	dec    edx
  40deab:	shr    esp,0x94
  40deae:	aas    
  40deaf:	in     eax,0xfc
  40deb1:	in     al,dx
  40deb2:	rol    bh,1
  40deb4:	pop    es
  40deb5:	call   0x42ec:0x27f2b2cd
  40debc:	jge    0x40de41
  40debe:	arpl   WORD PTR [ebx+0x58],sp
  40dec1:	jae    0x40def7
  40dec3:	jae    0x40de4a
  40dec5:	loopne 0x40de7a
  40dec7:	xchg   edi,eax
  40dec8:	mov    ebp,0x57a32ea5
  40decd:	rol    eax,1
  40decf:	repnz iret 
  40ded1:	jl     0x40debd
  40ded3:	jno    0x40de9e
  40ded5:	out    0xc2,eax
  40ded7:	or     al,0x59
  40ded9:	inc    ecx
  40deda:	(bad)  
  40dedb:	jae    0x40debc
  40dedd:	pop    es
  40dede:	into   
  40dedf:	sahf   
  40dee0:	pop    ecx
  40dee1:	imul   ecx,DWORD PTR [ecx-0x33],0xd17a2d6f
  40dee8:	xor    al,0xef
  40deea:	(bad)  
  40deeb:	jns    0x40deb5
  40deed:	mov    al,BYTE PTR [esi+edx*4-0x1ed27bb1]
  40def4:	leave  
  40def5:	ror    BYTE PTR [esi],1
  40def7:	rcl    BYTE PTR [eax-0x20694df1],1
  40defd:	mov    ch,0x86
  40deff:	xchg   esi,eax
  40df00:	pop    ss
  40df01:	adc    edx,ecx
  40df03:	mov    eax,0x29f564ce
  40df08:	data16 stos BYTE PTR es:[edi],al
  40df0a:	out    0x97,eax
  40df0c:	fucompp 
  40df0e:	wrmsr  
  40df10:	xchg   ecx,eax
  40df11:	cwde   
  40df12:	aaa    
  40df13:	fdivr  QWORD PTR [esi]
  40df15:	(bad)  
  40df17:	fnstenv [ebx+0x4139aa0b]
  40df1d:	push   edi
  40df1e:	mov    eax,esi
  40df20:	push   0x18216d4d
  40df25:	sbb    esp,DWORD PTR [ebx-0x432bb376]
  40df2b:	xchg   ecx,eax
  40df2c:	cmp    al,0xf1
  40df2e:	frstor [edx+0x63f74b72]
  40df34:	ja     0x40df86
  40df36:	fwait
  40df37:	inc    eax
  40df38:	lock jmp 0xac74d324
  40df3e:	sub    edx,DWORD PTR ds:0x304c15a9
  40df44:	popf   
  40df45:	dec    ebp
  40df46:	mov    DWORD PTR [ebp-0x62],esp
  40df49:	lods   al,BYTE PTR ds:[esi]
  40df4a:	popf   
  40df4b:	xor    DWORD PTR [ebp-0xede37],edi
  40df51:	(bad)  
  40df52:	sub    eax,0xa2b5c6d3
  40df57:	pop    esi
  40df58:	jmp    0xf400:0x80bbdd2b
  40df5f:	push   ss
  40df60:	pop    edi
  40df61:	inc    edx
  40df62:	jo     0x40df60
  40df64:	mov    eax,edi
  40df66:	retf   0x773c
  40df69:	sub    al,BYTE PTR [eax+0x29]
  40df6c:	fadd   DWORD PTR [eax+0x5]
  40df6f:	lods   al,BYTE PTR ds:[esi]
  40df70:	add    BYTE PTR [edx+edx*1-0x43],dh
  40df74:	or     al,0x46
  40df76:	sti    
  40df77:	ret    
  40df78:	dec    esi
  40df79:	dec    esi
  40df7a:	cli    
  40df7b:	lahf   
  40df7c:	jl     0x40df1d
  40df7e:	clc    
  40df7f:	jge    0x40dfb5
  40df81:	js     0x40df6d
  40df83:	cmp    eax,DWORD PTR [ebp+0x623bfa16]
  40df89:	or     eax,0x629e1dd5
  40df8e:	sbb    DWORD PTR [edx+0x53],0xffffff8f
  40df92:	sub    BYTE PTR [ebp+0x45915734],0x86
  40df99:	adc    DWORD PTR [esi],ebp
  40df9b:	ds pop ss
  40df9d:	cmp    eax,0x51145f89
  40dfa2:	or     DWORD PTR [esi+0x52953af1],0xffffffe4
  40dfa9:	xor    ebp,ecx
  40dfab:	pop    ss
  40dfac:	mov    esp,0x7a615b4c
  40dfb1:	fistp  WORD PTR [edi]
  40dfb3:	xor    BYTE PTR [ecx+0x75eaf0c1],bl
  40dfb9:	jnp    0x40df87
  40dfbb:	sub    bh,BYTE PTR [eax]
  40dfbd:	mov    al,ds:0x886420a7
  40dfc2:	int    0x65
  40dfc4:	jmp    0x40e01f
  40dfc6:	sbb    DWORD PTR [esi],edi
  40dfc8:	lods   al,BYTE PTR ds:[esi]
  40dfc9:	mov    ebx,0xcb982076
  40dfce:	adc    al,BYTE PTR [ebx]
  40dfd0:	sahf   
  40dfd1:	sub    cl,BYTE PTR [ebp-0x22]
  40dfd4:	add    BYTE PTR [edx],0x1a
  40dfd7:	mov    dl,0xd
  40dfd9:	dec    ecx
  40dfda:	aaa    
  40dfdb:	mov    ds:0xab4cc224,al
  40dfe0:	es jmp 0xf614:0x7089239e
  40dfe8:	jle    0x40df72
  40dfea:	shr    BYTE PTR [edi],0x86
  40dfed:	fsubr  DWORD PTR [edx-0x72]
  40dff0:	mul    DWORD PTR [ebx+0x52]
  40dff3:	inc    ebp
  40dff4:	lock jns 0x40df7d
  40dff7:	retf   
  40dff8:	pushf  
  40dff9:	imul   edi,DWORD PTR [ecx-0x34],0x60ca9bc8
  40e000:	cmp    al,0x2
  40e002:	retf   0xfb5a
  40e005:	jmp    0xaee3:0xfb40c305
  40e00c:	popa   
  40e00d:	xchg   ebp,eax
  40e00e:	adc    esp,DWORD PTR cs:[edi+0x4ca3b9b6]
  40e015:	push   ebp
  40e016:	xchg   DWORD PTR [ecx],esp
  40e018:	out    dx,al
  40e019:	mov    edx,0x1c022b31
  40e01e:	lock cld 
  40e020:	fst    DWORD PTR [eax+ebx*1]
  40e023:	pop    ebp
  40e024:	jmp    0x40e0a1
  40e026:	add    al,0xc9
  40e028:	dec    eax
  40e029:	pop    ss
  40e02a:	aas    
  40e02b:	cmp    BYTE PTR [ebp+0x9],bh
  40e02e:	push   ebx
  40e02f:	mov    eax,ds:0xfabc394c
  40e034:	repz pop ebp
  40e036:	push   eax
  40e037:	arpl   WORD PTR [eax+0x78],bx
  40e03a:	jbe    0x40e091
  40e03c:	imul   edi,DWORD PTR [esi+0x2b],0x6f
  40e040:	add    cl,dl
  40e042:	add    ah,dh
  40e044:	aaa    
  40e045:	mov    BYTE PTR [eax+0x37],ch
  40e048:	(bad)  
  40e049:	sahf   
  40e04a:	and    DWORD PTR [ebx+0x46],0xb5232c03
  40e051:	out    dx,eax
  40e052:	lea    esp,[esi-0x458c5ae3]
  40e058:	and    BYTE PTR [edi],dh
  40e05a:	jmp    0xd63a16c2
  40e05f:	daa    
  40e060:	mov    eax,ds:0x5dee34b3
  40e065:	mov    edi,0x3e03b386
  40e06a:	cmp    dh,0x21
  40e06d:	cs pop edx
  40e06f:	mov    dl,0xe4
  40e071:	jp     0x40e027
  40e073:	mov    ds:0x69f46431,al
  40e078:	sub    al,0xa1
  40e07a:	into   
  40e07b:	fild   WORD PTR [edx+0x71bb2818]
  40e081:	sbb    DWORD PTR [eax+0x1ebc1d90],edx
  40e087:	add    BYTE PTR [ecx-0x4b08fd5a],bh
  40e08d:	push   cs
  40e08e:	pop    esp
  40e08f:	inc    edi
  40e090:	stos   BYTE PTR es:[edi],al
  40e091:	cmp    DWORD PTR [ebp+0x24],ebp
  40e094:	dec    ebp
  40e095:	inc    esi
  40e096:	pop    edx
  40e097:	fadd   QWORD PTR [ebx-0x57]
  40e09a:	cmp    DWORD PTR [edi],0x31
  40e09d:	jne    0x40e0d6
  40e09f:	pop    ecx
  40e0a0:	aad    0xff
  40e0a2:	mov    ch,0x93
  40e0a4:	mov    edx,0x2e2dec91
  40e0a9:	shl    BYTE PTR [edi],1
  40e0ab:	jne    0x40e08e
  40e0ad:	mov    ebp,0x7a3b9bad
  40e0b2:	mov    gs,WORD PTR [ebx]
  40e0b4:	retf   0x2185
  40e0b7:	retf   
  40e0b8:	inc    eax
  40e0b9:	arpl   WORD PTR [ecx-0x77321eb2],dx
  40e0bf:	sbb    al,0x42
  40e0c1:	or     BYTE PTR [ebp-0x33],bl
  40e0c4:	mov    edi,0x919e7709
  40e0c9:	test   eax,0xc7ddc544
  40e0ce:	jecxz  0x40e0bd
  40e0d0:	sbb    al,0x42
  40e0d2:	repz mov esi,0x3e583e81
  40e0d8:	call   0x6ca4:0x5d58c313
  40e0df:	push   edx
  40e0e0:	(bad)  
  40e0e1:	in     eax,0xc9
  40e0e3:	sbb    BYTE PTR [ecx+ecx*4-0x7d],ah
  40e0e7:	mov    edi,0xa8a1dc63
  40e0ec:	dec    edx
  40e0ed:	mov    cl,0xdb
  40e0ef:	outs   dx,DWORD PTR ds:[esi]
  40e0f0:	test   DWORD PTR [edi+0x75],0x5e7e6b3e
  40e0f7:	xor    BYTE PTR [ebx],al
  40e0f9:	aad    0x7
  40e0fb:	pop    esp
  40e0fc:	or     DWORD PTR [esi+0x57aa1e2f],ecx
  40e102:	adc    al,0x1e
  40e104:	cmp    eax,0x5adedef8
  40e109:	pop    ecx
  40e10a:	scas   al,BYTE PTR es:[edi]
  40e10b:	call   DWORD PTR [eax+eiz*4]
  40e10e:	sahf   
  40e10f:	rcl    DWORD PTR [ebx],1
  40e111:	int3   
  40e112:	js     0x40e0c6
  40e114:	enter  0x59d0,0x7d
  40e118:	dec    ebx
  40e119:	mov    ds:0xe6de9da3,eax
  40e11e:	adc    al,bh
  40e120:	dec    edi
  40e121:	sbb    al,0xcd
  40e123:	sub    BYTE PTR [ecx-0x7c],ch
  40e126:	ret    0x9b79
  40e129:	xor    eax,0x9fe5c44
  40e12e:	out    dx,al
  40e12f:	fidivr WORD PTR [edx+0x2b]
  40e132:	in     eax,dx
  40e133:	bswap  edi
  40e135:	enter  0x19bc,0xa6
  40e139:	ret    
  40e13a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e13b:	push   esi
  40e13c:	mul    BYTE PTR [edi+0x4b92b2bc]
  40e142:	fwait
  40e143:	gs push esp
  40e145:	mov    BYTE PTR [ebp+0xfdc8636],bl
  40e14b:	int    0x5b
  40e14d:	or     eax,0x5e186a63
  40e152:	add    eax,0x40534efc
  40e157:	jmp    0xa6bbce78
  40e15c:	out    dx,al
  40e15d:	dec    ebx
  40e15e:	adc    ecx,DWORD PTR [edi+0x6d14c2e0]
  40e164:	lock shl DWORD PTR [eax],1
  40e167:	adc    BYTE PTR [eax+0x565f8be0],cl
  40e16d:	mov    ds:0x63e372a9,al
  40e172:	add    bh,ah
  40e174:	xchg   DWORD PTR [ecx],ecx
  40e176:	and    DWORD PTR [edi-0x23528e63],0x12
  40e17d:	ins    DWORD PTR es:[edi],dx
  40e17e:	fidiv  DWORD PTR [ecx+0x19]
  40e181:	sbb    al,0x69
  40e183:	cmp    al,0x97
  40e185:	rcl    bh,1
  40e187:	retf   
  40e188:	jp     0x40e15c
  40e18a:	jno    0x40e160
  40e18c:	test   al,0x24
  40e18e:	push   ecx
  40e18f:	pusha  
  40e190:	jp     0x40e147
  40e192:	jae    0x40e156
  40e194:	ja     0x40e178
  40e196:	enter  0x65f0,0x3e
  40e19a:	sub    al,0x62
  40e19c:	mov    ebx,0xa725e2ea
  40e1a1:	jle    0x40e176
  40e1a3:	xor    ah,al
  40e1a5:	aaa    
  40e1a6:	jge    0x40e1d4
  40e1a8:	lods   eax,DWORD PTR ds:[esi]
  40e1a9:	pop    ds
  40e1aa:	and    eax,0x349a933d
  40e1af:	fld    DWORD PTR [eax]
  40e1b1:	in     eax,dx
  40e1b2:	mov    dh,0x35
  40e1b4:	pop    ecx
  40e1b5:	leave  
  40e1b6:	repz cmp DWORD PTR [eax+0x1d],esi
  40e1ba:	mov    eax,ds:0x4ea002ea
  40e1bf:	and    eax,0x6260260c
  40e1c4:	push   0xffffffe6
  40e1c6:	mov    ds:0x3593fddb,al
  40e1cb:	pop    ebx
  40e1cc:	ret    0x9813
  40e1cf:	mov    dl,0x62
  40e1d1:	dec    esp
  40e1d2:	mov    esp,0xe6cfe96b
  40e1d7:	jp     0x40e164
  40e1d9:	hlt    
  40e1da:	cmp    ah,BYTE PTR [edx]
  40e1dc:	cmp    BYTE PTR [ecx],dl
  40e1de:	ins    BYTE PTR es:[edi],dx
  40e1df:	vpsrlw ymm3,ymm2,XMMWORD PTR [edi+0x941d97]
  40e1e7:	jns    0x40e200
  40e1e9:	call   0xe782e2b
  40e1ee:	retf   
  40e1ef:	push   cs
  40e1f0:	xlat   BYTE PTR ds:[ebx]
  40e1f1:	pop    esp
  40e1f2:	scas   eax,DWORD PTR es:[edi]
  40e1f3:	test   eax,0x70a2dee
  40e1f8:	stos   BYTE PTR es:[edi],al
  40e1f9:	aas    
  40e1fa:	das    
  40e1fb:	add    BYTE PTR [esi-0x4],cl
  40e1fe:	mov    ecx,0xce9064c1
  40e203:	or     BYTE PTR [edx-0x133973a8],bh
  40e209:	clc    
  40e20a:	mov    ds:0xdd5abc9c,al
  40e20f:	cmp    ebx,ebp
  40e211:	rcr    BYTE PTR [eax],1
  40e213:	mov    ebx,0xc25fd012
  40e218:	das    
  40e219:	mov    eax,ds:0x2e7e406
  40e21e:	sub    eax,0x24d77fae
  40e223:	fdiv   DWORD PTR [eax+ecx*2]
  40e226:	lods   al,BYTE PTR ds:[esi]
  40e227:	add    esi,DWORD PTR [esi-0x6387c9e9]
  40e22d:	xchg   ebx,eax
  40e22e:	lea    edi,[eax-0x21f31a51]
  40e234:	cdq    
  40e235:	lahf   
  40e236:	push   di
  40e238:	fidiv  DWORD PTR [edi+ebp*4+0x6b]
  40e23c:	shr    dh,1
  40e23e:	out    dx,eax
  40e23f:	call   ebx
  40e241:	cmp    al,0xd3
  40e243:	out    0x27,eax
  40e245:	fld    QWORD PTR [ecx+0x7737cb5b]
  40e24b:	push   edi
  40e24c:	popa   
  40e24d:	out    dx,al
  40e24e:	aas    
  40e24f:	rcl    DWORD PTR ds:0x5e971395,0xdd
  40e256:	mov    ch,0x20
  40e258:	push   0x4996b21a
  40e25d:	ficom  WORD PTR [eax-0x78]
  40e260:	sbb    al,0x7f
  40e262:	mov    bh,0x4c
  40e264:	xlat   BYTE PTR ds:[ebx]
  40e265:	xchg   al,dh
  40e267:	push   es
  40e268:	retf   0xf037
  40e26b:	imul   ebp,DWORD PTR [edi],0x82e4d60
  40e271:	in     al,0x83
  40e273:	add    ch,BYTE PTR [ebp-0x3d]
  40e276:	add    cl,cl
  40e278:	sbb    al,0x86
  40e27a:	sbb    dl,BYTE PTR [ebp-0x3f0db112]
  40e280:	dec    edx
  40e281:	xor    al,0x47
  40e283:	xlat   BYTE PTR ds:[ebx]
  40e284:	xacquire xchg DWORD PTR [edx-0x1548e963],ecx
  40e28b:	jp     0x40e255
  40e28d:	cmp    al,0x85
  40e28f:	scas   eax,DWORD PTR es:[edi]
  40e290:	pop    edx
  40e291:	mov    ds:0xa16679dc,eax
  40e296:	dec    edi
  40e297:	push   ecx
  40e298:	fisubr DWORD PTR [ebp-0x1d0a1eb7]
  40e29e:	xor    BYTE PTR [edi+eiz*2+0x64367f17],cl
  40e2a5:	xchg   BYTE PTR [ecx+eiz*2-0x90662cb],bl
  40e2ac:	pop    ss
  40e2ad:	mov    ecx,DWORD PTR [eax+0x894d276]
  40e2b3:	dec    ebp
  40e2b4:	push   eax
  40e2b5:	adc    BYTE PTR [ebp+0x45],dh
  40e2b8:	aas    
  40e2b9:	stos   DWORD PTR es:[edi],eax
  40e2ba:	sub    ebx,DWORD PTR [ebx+0x40048e5f]
  40e2c0:	sbb    DWORD PTR [eax],ecx
  40e2c2:	je     0x40e33c
  40e2c4:	jno    0x40e31a
  40e2c6:	sbb    ebp,DWORD PTR [edx]
  40e2c8:	div    ecx
  40e2ca:	nop
  40e2cb:	test   dh,0x15
  40e2ce:	rcl    BYTE PTR [edi+0x77aec66a],0x6d
  40e2d5:	sti    
  40e2d6:	aaa    
  40e2d7:	mov    al,ds:0xd7df1416
  40e2dc:	mov    esi,0x65bf3bd8
  40e2e1:	lea    ebx,[ebp+0x18d15ed3]
  40e2e7:	into   
  40e2e8:	jmp    0x6638:0xd8d06ace
  40e2ef:	mov    ebp,0x288f8e9a
  40e2f4:	cmp    eax,0xda1941e8
  40e2f9:	test   bl,dl
  40e2fb:	pop    es
  40e2fc:	jl     0x40e2c5
  40e2fe:	frstor [ebp+ebx*4+0x7a591559]
  40e305:	addr16 stc 
  40e307:	push   ds
  40e308:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e309:	cmp    esp,DWORD PTR [ebx]
  40e30b:	nop
  40e30c:	gs (bad) 
  40e30e:	xor    ah,bh
  40e310:	das    
  40e311:	xchg   ebx,eax
  40e312:	fild   QWORD PTR [edi-0x1b5c87b5]
  40e318:	ja     0x40e2d7
  40e31a:	mov    cl,0x53
  40e31c:	sbb    DWORD PTR [ebp-0x6aef84c2],ecx
  40e322:	push   ebp
  40e323:	js     0x40e2ce
  40e325:	jmp    0xd79e:0x920d1a2a
  40e32c:	test   BYTE PTR [eax-0x68fc691],ch
  40e332:	(bad)  
  40e333:	xor    al,0x5a
  40e335:	stos   DWORD PTR es:[edi],eax
  40e336:	cmp    esi,DWORD PTR [eax]
  40e338:	xor    BYTE PTR [edi],bl
  40e33a:	frstor [edi-0x2d]
  40e33d:	jg     0x40e359
  40e33f:	jp     0x40e386
  40e341:	add    al,dl
  40e343:	cmp    cl,bh
  40e345:	mov    DWORD PTR ss:[ebp+0x5d],0x89a2fb57
  40e34d:	leave  
  40e34e:	push   eax
  40e34f:	or     cl,BYTE PTR [edi-0x344b81fd]
  40e355:	push   cs
  40e356:	dec    esp
  40e357:	mov    eax,ds:0x46d63abe
  40e35c:	xor    DWORD PTR [edi+ecx*4-0x5a27036a],0xffffffe6
  40e364:	sbb    ebx,DWORD PTR ds:0x1a07834f
  40e36a:	add    BYTE PTR [edi],cl
  40e36c:	test   al,0xfe
  40e36e:	scas   al,BYTE PTR es:[edi]
  40e36f:	fistp  WORD PTR [esi+edi*8+0x42]
  40e373:	mov    edi,0x54fe990f
  40e378:	and    DWORD PTR [ecx+0x26f9bc69],0x2a
  40e37f:	ja     0x40e3af
  40e381:	adc    esp,DWORD PTR [eax+0x7f66b227]
  40e387:	jmp    0x6a30:0x6857a8be
  40e38e:	xor    DWORD PTR [edi],0xca994adf
  40e394:	(bad)  
  40e395:	lock mov bl,0x58
  40e398:	lea    eax,[edi+0x66]
  40e39b:	push   es
  40e39c:	rcl    DWORD PTR [ecx],0xad
  40e39f:	es inc ebx
  40e3a1:	cwde   
  40e3a2:	jecxz  0x40e328
  40e3a4:	shr    DWORD PTR ds:[ebx+0x13],cl
  40e3a8:	repz das 
  40e3aa:	ins    DWORD PTR es:[edi],dx
  40e3ab:	loope  0x40e377
  40e3ad:	popf   
  40e3ae:	les    ecx,FWORD PTR [esi+0x7a]
  40e3b1:	add    BYTE PTR [edi],dh
  40e3b3:	lods   al,BYTE PTR ds:[esi]
  40e3b4:	push   ds
  40e3b5:	xchg   ebp,eax
  40e3b6:	push   esi
  40e3b7:	pop    edi
  40e3b8:	inc    esi
  40e3b9:	pop    ebx
  40e3ba:	lock icebp 
  40e3bc:	lods   al,BYTE PTR ds:[esi]
  40e3bd:	data16 cmp ah,BYTE PTR [ebx-0x22]
  40e3c1:	sbb    bh,BYTE PTR [ecx+ecx*1+0x32]
  40e3c5:	jecxz  0x40e38e
  40e3c7:	fdivr  st,st(0)
  40e3c9:	(bad)  
  40e3ca:	out    dx,al
  40e3cb:	mov    bl,0x55
  40e3cd:	adc    al,0x75
  40e3cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3d0:	call   0x4678e3e
  40e3d5:	mov    WORD PTR [edi+0x2b],fs
  40e3d8:	sub    eax,0x55e366a0
  40e3dd:	bound  edx,QWORD PTR [ecx]
  40e3df:	and    DWORD PTR [edi+0x26],ecx
  40e3e2:	into   
  40e3e3:	pusha  
  40e3e4:	add    al,0xe0
  40e3e6:	ss push edi
  40e3e8:	not    BYTE PTR [esi-0x3f9ad7f0]
  40e3ee:	out    0x2d,al
  40e3f0:	cmp    ecx,DWORD PTR [eax]
  40e3f2:	sbb    ebp,esp
  40e3f4:	push   ds
  40e3f5:	xchg   ecx,eax
  40e3f6:	sbb    eax,0xc8b98738
  40e3fb:	xor    BYTE PTR [ecx],dh
  40e3fd:	shl    DWORD PTR [edi+0x30],0x81
  40e401:	fidiv  WORD PTR [edx]
  40e403:	pusha  
  40e404:	sbb    ebp,DWORD PTR [edx+0x33]
  40e407:	sbb    bh,BYTE PTR [esi-0x68ba2daf]
  40e40d:	fucomip st,st(0)
  40e40f:	and    cl,BYTE PTR [ecx+0x35e0a555]
  40e415:	xor    edi,edx
  40e417:	dec    ebp
  40e418:	sub    DWORD PTR [edx],eax
  40e41a:	push   eax
  40e41b:	fdivr  QWORD PTR [edx+0x7f]
  40e41e:	mov    al,ds:0x77cba08c
  40e423:	cmc    
  40e424:	fild   DWORD PTR [eax-0x421c1f16]
  40e42a:	bswap  ebx
  40e42c:	jp     0x40e3cc
  40e42e:	dec    eax
  40e42f:	(bad)  
  40e430:	mov    dl,0x25
  40e432:	or     eax,0x90b171da
  40e437:	mov    bh,0x7d
  40e439:	pop    edx
  40e43a:	and    BYTE PTR [edi-0x6c4e37f6],0x23
  40e441:	jl     0x40e44a
  40e443:	call   0x23f114fd
  40e448:	adc    eax,0xf6988a11
  40e44d:	ror    DWORD PTR [edi],0x7f
  40e450:	test   DWORD PTR [edx+0xfd8a648],eax
  40e456:	fmul   DWORD PTR [ecx]
  40e458:	xor    esi,DWORD PTR [ebp+0x36]
  40e45b:	pop    esi
  40e45c:	adc    BYTE PTR [ecx+0x7c],0xbc
  40e460:	in     al,0xa5
  40e462:	pop    edx
  40e463:	retf   0xbaa7
  40e466:	out    dx,eax
  40e467:	or     DWORD PTR [ecx+0x3b5d1d6c],eax
  40e46d:	sbb    BYTE PTR [edi+0x42beee59],dh
  40e473:	scas   eax,DWORD PTR es:[edi]
  40e474:	(bad)  
  40e475:	aam    0x86
  40e477:	imul   ebp,DWORD PTR [edi-0x18ba4391],0x55
  40e47e:	fdivr  QWORD PTR [esi-0x57]
  40e481:	mov    ch,0x1e
  40e483:	(bad)  
  40e484:	bound  ebp,QWORD PTR [eax+0x57]
  40e487:	es out dx,eax
  40e489:	test   BYTE PTR [edi-0x4f],al
  40e48c:	jmp    FWORD PTR [ebp+0x78]
  40e48f:	outs   dx,BYTE PTR ds:[esi]
  40e490:	xchg   edx,eax
  40e491:	ret    0x3b38
  40e494:	sti    
  40e495:	sub    ah,bh
  40e497:	xchg   ebx,eax
  40e498:	mov    ebx,0x9f72dbbe
  40e49d:	shr    BYTE PTR [ebx-0x5c04d64f],1
  40e4a3:	jae    0x40e45b
  40e4a5:	pop    edi
  40e4a6:	cmc    
  40e4a7:	inc    eax
  40e4a8:	fdivr  st(6),st
  40e4aa:	add    al,0x3b
  40e4ac:	fimul  DWORD PTR [esi+0x25ad5b3c]
  40e4b2:	(bad)  
  40e4b3:	dec    edi
  40e4b4:	jmp    0xd8d8:0x33a5a1b6
  40e4bb:	mov    esp,0x3916a6b1
  40e4c0:	or     BYTE PTR [edi+0x5f],ch
  40e4c3:	lods   eax,DWORD PTR ds:[esi]
  40e4c4:	loope  0x40e49d
  40e4c6:	(bad)  
  40e4c8:	js     0x40e51c
  40e4ca:	stc    
  40e4cb:	mov    edx,0x5aa22a11
  40e4d0:	(bad)  
  40e4d2:	pop    es
  40e4d3:	mov    al,0x4d
  40e4d5:	nop
  40e4d6:	je     0x40e4e6
  40e4d8:	xchg   esp,eax
  40e4d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4da:	or     eax,0xe55e2b29
  40e4df:	cmp    al,0xa0
  40e4e1:	xchg   ebx,eax
  40e4e2:	call   0x2485:0xe429c7b3
  40e4e9:	imul   dl
  40e4eb:	ins    BYTE PTR es:[edi],dx
  40e4ec:	add    BYTE PTR gs:[esi-0x383805fb],0x84
  40e4f4:	or     eax,0x16898cdb
  40e4f9:	and    BYTE PTR [edx+0x4b],ch
  40e4fc:	mov    ds:0xcfa7b30e,al
  40e501:	(bad)  
  40e502:	jl     0x40e555
  40e504:	fs in  al,0x2d
  40e507:	mov    esp,0x6c93dc48
  40e50c:	pop    ecx
  40e50d:	into   
  40e50e:	jp     0x40e53e
  40e510:	(bad)  
  40e511:	pop    es
  40e512:	jae    0x40e563
  40e514:	popa   
  40e515:	dec    ecx
  40e516:	mov    dh,0xa8
  40e518:	or     eax,0xc10b1ae5
  40e51d:	add    BYTE PTR [ebp+eax*2+0x30],al
  40e521:	daa    
  40e522:	fwait
  40e523:	call   0xe6b4c8ba
  40e528:	jb     0x40e507
  40e52a:	xor    ecx,ecx
  40e52c:	xor    eax,ecx
  40e52e:	mov    bh,BYTE PTR [ebx+ebx*4+0xfd6ff6d]
  40e535:	mov    edx,esp
  40e537:	mov    cl,bh
  40e539:	adc    cl,bh
  40e53b:	imul   esp,DWORD PTR [edx],0xffffff9a
  40e53e:	xlat   BYTE PTR ds:[ebx]
  40e53f:	sbb    eax,0xbbb2ef2
  40e544:	aaa    
  40e545:	jmp    0x40e58f
  40e547:	adc    dl,BYTE PTR [ebx+0x3a4ad375]
  40e54d:	sti    
  40e54e:	cmp    eax,0x1cc0e3c8
  40e553:	seta   dh
  40e556:	or     al,BYTE PTR [ecx]
  40e558:	pop    edi
  40e559:	dec    eax
  40e55a:	fidiv  DWORD PTR [edi]
  40e55c:	jle    0x40e573
  40e55e:	ficom  WORD PTR [edi+0x4c0d8342]
  40e564:	dec    edx
  40e565:	lods   eax,DWORD PTR ds:[esi]
  40e566:	push   edx
  40e567:	or     ch,al
  40e569:	dec    ebp
  40e56a:	pop    ebx
  40e56b:	fwait
  40e56c:	or     eax,0x47e6fb1a
  40e571:	(bad)
  40e575:	neg    BYTE PTR [ecx+0x5cccbdd5]
  40e57b:	and    BYTE PTR [eax-0x1e],al
  40e57e:	sbb    al,0x2c
  40e580:	push   ss
  40e581:	ror    esp,cl
  40e583:	gs jmp 0x9a583d74
  40e589:	pop    es
  40e58a:	jbe    0x40e537
  40e58c:	mov    ch,BYTE PTR [edi]
  40e58e:	lods   al,BYTE PTR ds:[esi]
  40e58f:	push   0xaeb6bdde
  40e594:	adc    eax,0x3c6ee259
  40e599:	ret    
  40e59a:	push   ss
  40e59b:	jne    0x40e60c
  40e59d:	fiadd  DWORD PTR [edx+0x315bd652]
  40e5a3:	adc    BYTE PTR [ebx],ch
  40e5a5:	iret   
  40e5a6:	in     al,dx
  40e5a7:	push   0x253571f8
  40e5ac:	xor    DWORD PTR [esi],0xb10d3d06
  40e5b2:	mov    edi,0xb1d956f0
  40e5b7:	(bad)  
  40e5b8:	out    dx,eax
  40e5b9:	xor    BYTE PTR [eax],al
  40e5bb:	sub    al,al
  40e5bd:	mov    BYTE PTR gs:[ebx+edx*1],ah
  40e5c1:	jne    0x40e566
  40e5c3:	push   edi
  40e5c4:	cmc    
  40e5c5:	ins    BYTE PTR es:[edi],dx
  40e5c6:	and    DWORD PTR [ebp+0x4],edi
  40e5c9:	xchg   ebx,eax
  40e5ca:	retf   
  40e5cb:	aaa    
  40e5cc:	js     0x40e5d9
  40e5ce:	mov    ebp,0xb000796
  40e5d3:	pushf  
  40e5d4:	sar    DWORD PTR ds:[edx-0x7da7d2c6],cl
  40e5db:	pop    ds
  40e5dc:	aam    0xd3
  40e5de:	clc    
  40e5df:	mov    ds:0xb8638c93,al
  40e5e4:	(bad)  
  40e5e5:	out    dx,al
  40e5e6:	into   
  40e5e7:	rol    BYTE PTR [edx-0x12],0xb7
  40e5eb:	out    dx,eax
  40e5ec:	push   ss
  40e5ed:	jnp    0x40e666
  40e5ef:	ds loope 0x40e617
  40e5f2:	dec    esi
  40e5f3:	mov    ebp,0x65b85323
  40e5f8:	xor    ecx,DWORD PTR [eax+0x450be5d9]
  40e5fe:	fild   WORD PTR [edi+ebx*2]
  40e601:	add    BYTE PTR [ebp-0x57],0x47
  40e605:	jnp    0x40e5f7
  40e607:	jmp    0x40e617
  40e609:	imul   eax,DWORD PTR [ebx-0x20],0x716abcf
  40e610:	in     eax,0x11
  40e612:	(bad)  
  40e613:	fild   WORD PTR [ebx-0x24]
  40e616:	mov    ecx,DWORD PTR [edx-0x32]
  40e619:	in     eax,0x2d
  40e61b:	int3   
  40e61c:	jno    0x40e5cb
  40e61e:	inc    ecx
  40e61f:	cmp    al,0xfd
  40e621:	push   edi
  40e622:	inc    edi
  40e623:	hlt    
  40e624:	and    DWORD PTR [ebx],eax
  40e626:	sub    ah,BYTE PTR [eax-0x7b]
  40e629:	out    dx,eax
  40e62a:	push   ecx
  40e62b:	sub    eax,0xa0e27dfe
  40e630:	xchg   DWORD PTR [ebp+0x646f228b],edi
  40e636:	outs   dx,DWORD PTR ds:[esi]
  40e637:	xchg   edi,edi
  40e639:	mov    dh,0xc6
  40e63b:	xor    DWORD PTR [edx],ebp
  40e63d:	call   0x3621:0x3bb99092
  40e644:	mov    dl,0xa4
  40e646:	sbb    eax,0xb4c4dc4d
  40e64b:	mov    bl,0x14
  40e64d:	mov    bh,bh
  40e64f:	aaa    
  40e650:	ja     0x40e5f8
  40e652:	inc    esp
  40e653:	xchg   esp,eax
  40e654:	mov    esi,0xe92f19d5
  40e659:	stos   BYTE PTR es:[edi],al
  40e65a:	cmp    DWORD PTR [ecx+ecx*1],esp
  40e65d:	adc    al,BYTE PTR [ebx+eax*1]
  40e660:	je     0x40e606
  40e662:	sar    BYTE PTR [edi-0x6b0d47b6],1
  40e668:	jmp    0x40e5f3
  40e66a:	inc    ebx
  40e66b:	push   edx
  40e66c:	xchg   edi,eax
  40e66d:	frstor [ebx]
  40e66f:	adc    BYTE PTR [edx],bh
  40e671:	dec    eax
  40e672:	outs   dx,BYTE PTR ds:[esi]
  40e673:	mov    bh,0x93
  40e675:	and    ecx,edi
  40e677:	push   esi
  40e678:	mov    al,0xaa
  40e67a:	sbb    eax,0xa26b896f
  40e67f:	jl     0x40e60d
  40e681:	pop    edi
  40e682:	inc    edi
  40e683:	xor    BYTE PTR [esi-0x3d8883ae],0x41
  40e68a:	lock and BYTE PTR [eax*1+0x32b1647e],al
  40e692:	es mov edi,0x44bd2470
  40e698:	and    eax,0xf8538df9
  40e69d:	test   dl,0x75
  40e6a0:	adc    DWORD PTR [ebp+eiz*8+0x71],edi
  40e6a4:	pop    ds
  40e6a5:	cli    
  40e6a6:	mov    ebx,0xe30e079f
  40e6ab:	adc    ah,BYTE PTR [edx]
  40e6ad:	sub    ch,BYTE PTR [esi+0x6216f6c2]
  40e6b3:	mov    edi,0x1b11afce
  40e6b8:	mov    esp,0xbb5a8cce
  40e6bd:	push   ds
  40e6be:	and    al,0xfc
  40e6c0:	dec    ebp
  40e6c1:	mov    ebx,0xe94859c1
  40e6c6:	inc    edi
  40e6c7:	inc    ecx
  40e6c8:	sbb    al,bh
  40e6ca:	mov    eax,ds:0x885b1e50
  40e6cf:	repnz mov al,ds:0x9928ff85
  40e6d6:	push   edx
  40e6d7:	hlt    
  40e6d8:	sub    ebx,ebx
  40e6da:	mov    ecx,0xb8041c14
  40e6df:	das    
  40e6e0:	or     eax,0x11d061bb
  40e6e5:	xchg   ebx,eax
  40e6e6:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40e6e8:	out    dx,al
  40e6e9:	and    cl,0xc3
  40e6ec:	sbb    al,0xf2
  40e6ee:	les    ebx,FWORD PTR [edi]
  40e6f0:	lds    edx,FWORD PTR [ecx]
  40e6f2:	cdq    
  40e6f3:	jmp    0x40e6d1
  40e6f5:	add    BYTE PTR [edx],0x33
  40e6f8:	out    0xd1,al
  40e6fa:	jge    0x40e6c7
  40e6fc:	push   ebp
  40e6fd:	sub    al,0xc8
  40e6ff:	popf   
  40e700:	mov    edx,0x6f668d75
  40e705:	adc    bl,BYTE PTR [esi]
  40e707:	rcr    bl,cl
  40e709:	or     al,0x73
  40e70b:	adc    eax,0x85ad3186
  40e710:	test   BYTE PTR [esi-0x71cafd42],0x12
  40e717:	sub    eax,0xf1e1af50
  40e71c:	mov    edx,DWORD PTR [ecx+0x153a2c06]
  40e722:	call   0x446c:0x24c6034c
  40e729:	shl    BYTE PTR [esi],1
  40e72b:	sbb    DWORD PTR [eax+0x2c82310c],0x8140f3fa
  40e735:	sti    
  40e736:	or     BYTE PTR [eax+0x2bb32d2f],bl
  40e73c:	jecxz  0x40e6c1
  40e73e:	popa   
  40e73f:	cmc    
  40e740:	mov    ebx,0xec55a061
  40e745:	dec    edi
  40e746:	jbe    0x40e743
  40e748:	daa    
  40e749:	es repz xchg esi,eax
  40e74c:	push   es
  40e74d:	aas    
  40e74e:	sub    al,BYTE PTR [edi]
  40e750:	xchg   edx,eax
  40e751:	adc    BYTE PTR [ebp-0x42e534b7],0xb5
  40e758:	out    0xa6,eax
  40e75a:	fwait
  40e75b:	aas    
  40e75c:	dec    edx
  40e75d:	mov    bl,BYTE PTR [esi+0x65]
  40e760:	call   0x16e1a447
  40e765:	xor    edi,DWORD PTR [edi+eax*1]
  40e768:	mov    esp,0x7d7accc7
  40e76d:	ja     0x40e71d
  40e76f:	jl     0x40e7d1
  40e771:	fwait
  40e772:	pop    edi
  40e773:	mov    al,0x68
  40e775:	dec    edx
  40e776:	popf   
  40e777:	repnz mov edi,DWORD PTR [ebp-0x29]
  40e77b:	cmp    al,0x8f
  40e77d:	or     esp,DWORD PTR [esi]
  40e77f:	mov    edx,0xf5ce7b63
  40e784:	and    edi,DWORD PTR [eax+0x7d1a1b]
  40e78a:	out    0x1f,eax
  40e78c:	(bad)  
  40e78d:	not    BYTE PTR [esi-0xfe60e51]
  40e793:	mov    ds:0xe00b2153,eax
  40e798:	in     eax,dx
  40e799:	mov    bl,0xe8
  40e79b:	pop    ecx
  40e79c:	sub    ah,bl
  40e79e:	cld    
  40e79f:	xchg   ecx,eax
  40e7a0:	(bad)  
  40e7a1:	in     eax,0x49
  40e7a3:	dec    ebp
  40e7a4:	sub    bl,BYTE PTR [ebx]
  40e7a6:	(bad)
  40e7ab:	jp     0x40e747
  40e7ad:	mov    edx,DWORD PTR [edx+0x1eeb0178]
  40e7b3:	call   0x618e:0xe6689dd4
  40e7ba:	loope  0x40e7c8
  40e7bc:	xchg   DWORD PTR [edi+0x286cee5e],eax
  40e7c2:	sbb    al,0x1e
  40e7c4:	inc    esp
  40e7c5:	and    cl,cl
  40e7c7:	int    0xef
  40e7c9:	jno    0x40e840
  40e7cb:	xchg   esi,eax
  40e7cc:	fdivrp st(6),st
  40e7ce:	mov    bl,0x5c
  40e7d0:	ins    DWORD PTR es:[edi],dx
  40e7d1:	mov    DWORD PTR [ebp-0x4e],ebx
  40e7d4:	(bad)  
  40e7d6:	fadd   QWORD PTR [eax-0x296807d5]
  40e7dc:	in     eax,dx
  40e7dd:	popf   
  40e7de:	in     al,dx
  40e7df:	loope  0x40e85f
  40e7e1:	sub    eax,edi
  40e7e3:	mov    al,0xe7
  40e7e5:	jl     0x40e782
  40e7e7:	fwait
  40e7e8:	scas   al,BYTE PTR es:[edi]
  40e7e9:	js     0x40e826
  40e7eb:	ds int 0x5c
  40e7ee:	pop    edi
  40e7ef:	mov    edx,esp
  40e7f1:	dec    ebx
  40e7f2:	int    0xa0
  40e7f4:	gs fs mov dh,0x81
  40e7f8:	xchg   ebx,eax
  40e7f9:	call   0x7e61963c
  40e7fe:	test   eax,0xc60112bc
  40e803:	pop    ecx
  40e804:	daa    
  40e805:	loop   0x40e7e7
  40e807:	pop    ebp
  40e808:	adc    BYTE PTR [ebp+0x13],dl
  40e80b:	mov    al,0x1f
  40e80d:	int3   
  40e80e:	pusha  
  40e80f:	aad    0x5d
  40e811:	jmp    0xc44abd64
  40e816:	mov    DWORD PTR [edi],edx
  40e818:	adc    BYTE PTR [edi-0x305ad332],dh
  40e81e:	dec    ebx
  40e81f:	inc    eax
  40e820:	out    0xb3,eax
  40e822:	cs fmulp st(5),st
  40e825:	pop    ss
  40e826:	lds    edx,FWORD PTR [edx]
  40e828:	out    dx,al
  40e829:	lea    edx,[ebp+eax*4+0x17]
  40e82d:	xor    BYTE PTR [eax],bh
  40e82f:	jo     0x5a314483
  40e835:	or     esi,DWORD PTR [edi]
  40e837:	les    ebx,FWORD PTR [esi]
  40e839:	lock pop ds
  40e83b:	rcl    DWORD PTR [ebx],1
  40e83d:	addr16 in al,dx
  40e83f:	ins    DWORD PTR es:[edi],dx
  40e840:	inc    eax
  40e841:	xor    edi,edi
  40e843:	pop    eax
  40e844:	pop    esp
  40e845:	in     al,dx
  40e846:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e847:	sub    eax,0x9fcd7980
  40e84c:	scas   eax,DWORD PTR es:[edi]
  40e84d:	or     dl,ah
  40e84f:	int    0x89
  40e851:	xchg   ecx,eax
  40e852:	sub    bl,BYTE PTR [edx+0x49c2476d]
  40e858:	xchg   ecx,eax
  40e859:	mov    cl,0x54
  40e85b:	and    BYTE PTR [edi+ebp*4-0x38e09962],dh
  40e862:	push   ecx
  40e863:	cmp    edi,edx
  40e865:	adc    eax,0xf8512601
  40e86a:	mov    cl,0x6f
  40e86c:	lea    ebp,[esp+ecx*2-0x246e80b8]
  40e873:	popf   
  40e874:	aam    0x31
  40e876:	push   esp
  40e877:	pop    esi
  40e878:	push   esp
  40e879:	aam    0x68
  40e87b:	dec    esp
  40e87c:	(bad)  
  40e87d:	jl     0x40e8f8
  40e87f:	jle    0x40e809
  40e881:	es jno 0x40e853
  40e884:	fisttp DWORD PTR [eiz*2+0x76980c6f]
  40e88b:	(bad)  
  40e88c:	dec    esi
  40e88d:	inc    edx
  40e88e:	push   edx
  40e88f:	push   edx
  40e890:	aaa    
  40e891:	es sub eax,DWORD PTR cs:[ecx]
  40e895:	call   FWORD PTR [esi-0xa10eedd]
  40e89b:	push   es
  40e89c:	js     0x40e911
  40e89e:	ret    0x70e
  40e8a1:	xchg   ebp,eax
  40e8a2:	cmp    ebx,edi
  40e8a4:	mov    ebp,0xe07ac1c6
  40e8a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8aa:	xchg   BYTE PTR [ecx+0x48541176],dh
  40e8b0:	and    al,0xa5
  40e8b2:	retf   0x9f96
  40e8b5:	push   edx
  40e8b6:	mov    al,ds:0x612f05c5
  40e8bb:	addr16 das 
  40e8bd:	dec    esp
  40e8be:	loopne 0x40e8e1
  40e8c0:	sub    esi,DWORD PTR [esi-0x21f87408]
  40e8c6:	pop    esp
  40e8c7:	mov    esi,0xc13f0992
  40e8cc:	xor    al,0x98
  40e8ce:	scas   al,BYTE PTR es:[edi]
  40e8cf:	loop   0x40e944
  40e8d1:	(bad)  [esi-0x6b741cf3]
  40e8d7:	out    dx,al
  40e8d8:	daa    
  40e8d9:	sub    eax,0xe1989382
  40e8de:	push   ss
  40e8df:	fistp  DWORD PTR [ebx]
  40e8e1:	test   eax,0x3ce76d1b
  40e8e6:	ins    DWORD PTR es:[edi],dx
  40e8e7:	lock sahf 
  40e8e9:	in     al,0x8c
  40e8eb:	popa   
  40e8ec:	mov    bl,BYTE PTR [edx-0x226889fc]
  40e8f2:	mov    eax,ds:0x6b958dc5
  40e8f7:	(bad)  
  40e8f8:	icebp  
  40e8f9:	adc    DWORD PTR [edi],ecx
  40e8fb:	cld    
  40e8fc:	or     eax,0x23ff0c5e
  40e901:	mov    esp,0xdb474374
  40e906:	xchg   ebx,eax
  40e907:	pop    esp
  40e908:	call   DWORD PTR [ebp+0x2d]
  40e90b:	pop    eax
  40e90c:	(bad)  
  40e90d:	pushf  
  40e90e:	retf   0x695
  40e911:	pop    esp
  40e912:	out    dx,eax
  40e913:	fidiv  WORD PTR [ebp-0x6d]
  40e916:	add    BYTE PTR [esi+0x43],bh
  40e919:	ss cwde 
  40e91b:	xchg   edi,eax
  40e91c:	xor    eax,0x8490556c
  40e921:	mov    bl,0x4d
  40e923:	push   cs
  40e924:	fdivr  st,st(0)
  40e926:	hlt    
  40e927:	or     BYTE PTR [ebx+ecx*1],cl
  40e92a:	pop    esi
  40e92b:	jl     0x40e97d
  40e92d:	sahf   
  40e92e:	iret   
  40e92f:	mov    bh,0x24
  40e931:	inc    ebp
  40e932:	sub    BYTE PTR [edx-0x40],dh
  40e935:	sub    BYTE PTR ds:0x59d18c93,dl
  40e93b:	daa    
  40e93c:	pop    eax
  40e93d:	sub    al,bl
  40e93f:	pop    eax
  40e940:	sti    
  40e941:	ds stos BYTE PTR es:[edi],al
  40e943:	fnstsw WORD PTR [ebx+0x2d8cf04e]
  40e949:	mov    edx,0xb61722ee
  40e94e:	cdq    
  40e94f:	dec    esi
  40e950:	mov    edx,esp
  40e952:	xor    ch,BYTE PTR [eax+0x201351d2]
  40e958:	(bad)  
  40e959:	stos   DWORD PTR es:[edi],eax
  40e95a:	push   esp
  40e95b:	loop   0x40e8e3
  40e95d:	ins    BYTE PTR es:[edi],dx
  40e95e:	out    dx,al
  40e95f:	push   edi
  40e960:	lds    esi,FWORD PTR [esi-0x68]
  40e963:	push   edi
  40e964:	ja     0x40e97e
  40e966:	loopne 0x40e93e
  40e968:	int3   
  40e969:	pop    edi
  40e96a:	xor    cl,bh
  40e96c:	mov    ebp,0x90560892
  40e971:	pop    eax
  40e972:	mov    dh,BYTE PTR [edi+eax*8+0x6a]
  40e976:	in     eax,0x91
  40e978:	aas    
  40e979:	loop   0x40e957
  40e97b:	repz mov es,WORD PTR [edi+eax*8-0x43]
  40e980:	stc    
  40e981:	dec    edi
  40e982:	or     BYTE PTR [eax+0x1a],ch
  40e985:	mov    esi,0x4b2b7473
  40e98a:	lds    edx,FWORD PTR [ebx-0x4c]
  40e98d:	mov    ax,0x9a49
  40e991:	out    0x89,al
  40e993:	int3   
  40e994:	je     0x40e9d0
  40e996:	inc    edx
  40e997:	cmp    DWORD PTR [ebx+0x4f],0x60411e4e
  40e99e:	mov    ebp,0xd434cb12
  40e9a3:	rcl    DWORD PTR [edx-0x56d9ac42],cl
  40e9a9:	(bad)  
  40e9aa:	lods   eax,DWORD PTR ds:[esi]
  40e9ab:	cmp    ah,ah
  40e9ad:	push   0x9b9ece2d
  40e9b2:	push   cs
  40e9b3:	inc    ebp
  40e9b4:	jne    0x40e93e
  40e9b6:	cdq    
  40e9b7:	sti    
  40e9b8:	fsub   DWORD PTR [eax-0x29]
  40e9bb:	ret    0xf26d
  40e9be:	mov    dh,BYTE PTR [ebx+0x344c4f06]
  40e9c4:	mov    dl,0x51
  40e9c6:	add    BYTE PTR [eax+ebp*8],dl
  40e9c9:	push   esp
  40e9ca:	sub    eax,0xa9d8bd2a
  40e9cf:	mov    ebx,DWORD PTR [ecx-0x121b5468]
  40e9d5:	pop    esp
  40e9d6:	fidivr DWORD PTR [edi+0x72]
  40e9d9:	iret   
  40e9da:	fld    st(0)
  40e9dc:	pop    es
  40e9dd:	mov    dl,0xd2
  40e9df:	repnz lahf 
  40e9e1:	lahf   
  40e9e2:	fstp   TBYTE PTR [edx-0x11]
  40e9e5:	sbb    edx,DWORD PTR [edx]
  40e9e7:	xlat   BYTE PTR ds:[ebx]
  40e9e8:	test   al,0x37
  40e9ea:	ss repnz push esi
  40e9ed:	mov    al,ds:0xbca77fae
  40e9f2:	lea    edi,[eax+0x1b]
  40e9f5:	jbe    0x40ea70
  40e9f7:	mov    WORD PTR [edx],?
  40e9f9:	inc    ebp
  40e9fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9fb:	test   eax,0xe6b4a113
  40ea00:	les    edi,FWORD PTR [esi-0x6dbc4fd5]
  40ea06:	and    DWORD PTR [ecx+0x3d7fe29c],ebp
  40ea0c:	ins    DWORD PTR es:[edi],dx
  40ea0d:	cmp    al,0xd7
  40ea0f:	mov    al,0xcc
  40ea11:	xor    al,0x95
  40ea13:	xchg   ecx,eax
  40ea14:	adc    eax,0x8fc8a54a
  40ea19:	loop   0x40e9b0
  40ea1b:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40ea1d:	inc    edx
  40ea1e:	dec    ecx
  40ea1f:	mov    al,0x38
  40ea21:	add    edx,DWORD PTR [edi+0x4c]
  40ea24:	jo     0x40e9a9
  40ea26:	push   es
  40ea27:	mov    cl,0x3
  40ea29:	jns    0x40ea7e
  40ea2b:	test   DWORD PTR [eax+0x49fd0c57],ebx
  40ea31:	mov    WORD PTR es:[eax+0x7a],gs
  40ea35:	and    eax,0x9930df99
  40ea3a:	sbb    dh,BYTE PTR [ebx+0x71]
  40ea3d:	out    0x7,eax
  40ea3f:	ficom  WORD PTR [ecx+0x175789a7]
  40ea45:	jg     0x40ea1f
  40ea47:	imul   esi,DWORD PTR [edi-0x1f],0x369d6185
  40ea4e:	arpl   WORD PTR [edx+0x7b],sp
  40ea51:	scas   eax,DWORD PTR es:[edi]
  40ea52:	rol    DWORD PTR [ebx+eax*2],cl
  40ea55:	loope  0x40e9fb
  40ea57:	push   0x17
  40ea59:	mov    DWORD PTR [edx+0x33],esi
  40ea5c:	or     BYTE PTR [esi+0xe],dl
  40ea5f:	cmp    edi,DWORD PTR [esi+esi*4-0x76]
  40ea63:	loope  0x40ea90
  40ea65:	js     0x40eae2
  40ea67:	xchg   esi,ebp
  40ea69:	mov    al,ch
  40ea6b:	(bad)  
  40ea6c:	enter  0x378d,0x48
  40ea70:	(bad)  
  40ea71:	sub    eax,0xe17b2257
  40ea76:	loopne 0x40ea9f
  40ea78:	adc    al,0x2
  40ea7a:	dec    esp
  40ea7b:	shr    ch,cl
  40ea7d:	mov    ecx,0xec01726d
  40ea82:	xor    edi,DWORD PTR [ebx-0x78]
  40ea85:	sub    DWORD PTR [eax+0x6f3d1a44],ebp
  40ea8b:	cmp    ebp,DWORD PTR [esi+0x44]
  40ea8e:	fwait
  40ea8f:	mov    al,0x12
  40ea91:	in     al,dx
  40ea92:	xchg   edx,eax
  40ea93:	cmp    cl,BYTE PTR [eax-0x69]
  40ea96:	add    DWORD PTR [ebp+0x18],0xffffffd2
  40ea9a:	push   eax
  40ea9b:	into   
  40ea9c:	arpl   dx,bp
  40ea9e:	js     0x40ea7f
  40eaa0:	ret    
  40eaa1:	xor    cl,bh
  40eaa3:	inc    ebp
  40eaa4:	add    al,0xd3
  40eaa6:	jmp    0xfc6f0e0f
  40eaab:	(bad)  
  40eaac:	jge    0x40ea85
  40eaae:	push   ebp
  40eaaf:	fisub  WORD PTR [edi]
  40eab1:	sar    BYTE PTR ds:0xffd034c1,1
  40eab7:	cwde   
  40eab8:	das    
  40eab9:	adc    BYTE PTR [ebp+0x50],cl
  40eabc:	jg     0x40eae3
  40eabe:	or     eax,0x4a195627
  40eac3:	dec    ebp
  40eac4:	aam    0x8d
  40eac6:	int    0x5e
  40eac8:	mov    ebp,0x438135f1
  40eacd:	inc    esi
  40eace:	pop    ss
  40eacf:	out    0x5,al
  40ead1:	ret    0x8acd
  40ead4:	sbb    eax,0xd77299c9
  40ead9:	dec    ebp
  40eada:	mov    eax,ds:0x6f32f0ed
  40eadf:	sti    
  40eae0:	push   edx
  40eae1:	lea    esi,[esi+0xb]
  40eae4:	rcr    BYTE PTR [ebx],0x96
  40eae7:	push   0x3d19ae33
  40eaec:	aad    0xc0
  40eaee:	jl     0x40eab4
  40eaf0:	sub    BYTE PTR [edx],0x5d
  40eaf3:	rcr    DWORD PTR [edi],0x98
  40eaf6:	fldenv ds:0xe755d210
  40eafc:	mov    al,ds:0x136d778a
  40eb01:	or     eax,0x47dd838b
  40eb06:	scas   eax,DWORD PTR es:[edi]
  40eb07:	mov    edx,DWORD PTR [ecx-0x20153ea]
  40eb0d:	ins    DWORD PTR es:[edi],dx
  40eb0e:	pushf  
  40eb0f:	pusha  
  40eb10:	lahf   
  40eb11:	pop    ds
  40eb12:	rcl    BYTE PTR [ecx+0x4c],1
  40eb15:	mov    esp,0xd99d13c5
  40eb1a:	shl    BYTE PTR [edx+0x367889ac],0xd
  40eb21:	pop    esp
  40eb22:	sub    DWORD PTR es:[ebp-0x4c],edx
  40eb26:	enter  0x6f9f,0x4f
  40eb2a:	iret   
  40eb2b:	mov    edx,0x11d89bdd
  40eb30:	push   cs
  40eb31:	(bad)  
  40eb33:	and    eax,0xa7e612b9
  40eb38:	dec    edi
  40eb39:	lods   al,BYTE PTR ds:[esi]
  40eb3a:	cwde   
  40eb3b:	cmp    BYTE PTR ds:0x57f7c5fa,ch
  40eb41:	pop    edx
  40eb42:	or     ebx,DWORD PTR [edi]
  40eb44:	out    dx,eax
  40eb45:	stos   DWORD PTR es:[edi],eax
  40eb46:	adc    al,0x7f
  40eb48:	imul   ebx,DWORD PTR [edx-0x1c],0xa0492171
  40eb4f:	cli    
  40eb50:	dec    eax
  40eb51:	jge    0x40ead3
  40eb53:	aad    0xae
  40eb55:	xchg   ecx,eax
  40eb56:	jo     0x40eb5a
  40eb58:	adc    edx,DWORD PTR [eax-0x76f3ebe1]
  40eb5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb5f:	nop
  40eb60:	xchg   ecx,eax
  40eb61:	push   ss
  40eb62:	xchg   esi,eax
  40eb63:	enter  0xe2e1,0x8d
  40eb67:	pusha  
  40eb68:	sub    al,0xe6
  40eb6a:	xor    al,0x12
  40eb6c:	push   esp
  40eb6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb6e:	(bad)
  40eb71:	lea    eax,[esi]
  40eb73:	mov    bh,0x70
  40eb75:	add    eax,0x59947afc
  40eb7a:	pop    edi
  40eb7b:	shr    DWORD PTR cs:[eax+0x35],0x7c
  40eb80:	push   DWORD PTR [eax]
  40eb82:	cmp    ecx,ebp
  40eb84:	push   0x909c0d36
  40eb89:	push   ds
  40eb8a:	xor    al,BYTE PTR [edi]
  40eb8c:	hlt    
  40eb8d:	mov    ds:0x553cbf71,eax
  40eb92:	aad    0x94
  40eb94:	lods   al,BYTE PTR ds:[esi]
  40eb95:	mov    edi,0x17734cf4
  40eb9a:	sub    al,0xd4
  40eb9c:	mov    al,ds:0xb56de6e5
  40eba1:	stos   BYTE PTR es:[edi],al
  40eba2:	imul   esi,DWORD PTR [edx],0xffffffbf
  40eba5:	nop
  40eba6:	or     dl,BYTE PTR [ecx]
  40eba8:	aad    0x2
  40ebaa:	lea    esp,[ebx-0x1f]
  40ebad:	punpcklwd mm7,DWORD PTR [edx-0x28]
  40ebb1:	cmp    DWORD PTR [ecx-0x19],edi
  40ebb4:	ins    DWORD PTR es:[edi],dx
  40ebb5:	es dec esi
  40ebb7:	into   
  40ebb8:	cmp    eax,0x60e323ad
  40ebbd:	cmc    
  40ebbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebbf:	ss out 0xf4,al
  40ebc2:	jno    0x40ebae
  40ebc4:	test   ecx,ebp
  40ebc6:	outs   dx,DWORD PTR ds:[esi]
  40ebc7:	pop    edx
  40ebc8:	jno    0x40ec16
  40ebca:	test   BYTE PTR [eax+0x27e77da9],bl
  40ebd0:	add    edx,eax
  40ebd2:	adc    al,0x48
  40ebd4:	fsubr  st,st(4)
  40ebd6:	and    ah,dl
  40ebd8:	mov    ch,0x55
  40ebda:	loopne 0x40eb78
  40ebdc:	push   esi
  40ebdd:	jmp    0xd4d1f036
  40ebe2:	std    
  40ebe3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebe4:	test   DWORD PTR [ecx+0x34],edi
  40ebe7:	inc    edx
  40ebe8:	loope  0x40ec06
  40ebea:	or     dh,0x7
  40ebed:	cld    
  40ebee:	mov    al,ds:0x7c405896
  40ebf3:	aam    0x8a
  40ebf5:	jne    0x40ebce
  40ebf7:	or     bh,BYTE PTR [ebx+0x67]
  40ebfa:	daa    
  40ebfb:	add    eax,0xb99ac3a8
  40ec00:	xchg   cl,ch
  40ec02:	je     0x40ec2e
  40ec04:	sub    al,0x6c
  40ec06:	jno    0x40ec20
  40ec08:	test   DWORD PTR [edi+ecx*2+0x5d111703],esp
  40ec0f:	pusha  
  40ec10:	sbb    cl,BYTE PTR [esi]
  40ec12:	out    0x1c,al
  40ec14:	push   esi
  40ec15:	outs   dx,BYTE PTR ds:[esi]
  40ec16:	aaa    
  40ec17:	cmp    edi,esi
  40ec19:	jo     0x40ebee
  40ec1b:	xor    al,0x5a
  40ec1d:	inc    eax
  40ec1e:	jae    0x40ebea
  40ec20:	mov    al,0xdc
  40ec22:	sbb    DWORD PTR [esi-0x6623f54d],edx
  40ec28:	inc    edi
  40ec29:	dec    edi
  40ec2a:	aad    0x57
  40ec2c:	pop    edi
  40ec2d:	jbe    0x40ec95
  40ec2f:	push   ds
  40ec30:	out    dx,al
  40ec31:	gs pop es
  40ec33:	or     bl,bl
  40ec35:	(bad)  
  40ec36:	sub    edx,edi
  40ec38:	sar    BYTE PTR [edi],1
  40ec3a:	sbb    eax,0xb0765dd7
  40ec3f:	inc    ebx
  40ec40:	mov    cl,0x99
  40ec42:	out    dx,al
  40ec43:	clc    
  40ec44:	loopne 0x40ecbe
  40ec46:	repz add DWORD PTR [edi+0x7c239102],edx
  40ec4d:	jecxz  0x40ec18
  40ec4f:	xor    ah,bl
  40ec51:	inc    ebx
  40ec52:	pop    esp
  40ec53:	and    eax,0xc80233f0
  40ec58:	and    al,0x2e
  40ec5a:	imul   esi,DWORD PTR [edx],0xffffff94
  40ec5d:	ins    DWORD PTR es:[edi],dx
  40ec5e:	jo     0x40ec81
  40ec60:	cmp    al,0x91
  40ec62:	ss scas eax,DWORD PTR es:[edi]
  40ec64:	cwde   
  40ec65:	cmc    
  40ec66:	xor    esp,DWORD PTR ds:[ecx+0x50]
  40ec6a:	dec    ebp
  40ec6b:	add    edx,DWORD PTR [ecx-0x1c213d40]
  40ec71:	(bad)  
  40ec72:	xchg   esi,eax
  40ec73:	mov    ds:0x30dd49f1,eax
  40ec78:	xchg   ebx,eax
  40ec79:	mov    edx,0x333b2492
  40ec7e:	pop    ds
  40ec7f:	popa   
  40ec80:	loop   0x40ec6e
  40ec82:	fst    QWORD PTR [ebp+0x4c14cb]
  40ec88:	cwde   
  40ec89:	adc    bl,BYTE PTR [ebx]
  40ec8b:	stc    
  40ec8c:	ret    0xf1bf
  40ec8f:	cdq    
  40ec90:	xchg   ebp,eax
  40ec91:	adc    edi,edx
  40ec93:	dec    esi
  40ec94:	xor    ah,BYTE PTR [ebx+0x47]
  40ec97:	dec    ebx
  40ec98:	jo     0x40ed14
  40ec9a:	sbb    dl,ch
  40ec9c:	or     al,0x1b
  40ec9e:	cs pushf 
  40eca0:	aas    
  40eca1:	inc    ebx
  40eca2:	sbb    DWORD PTR [ebp+0x9],ebx
  40eca5:	sbb    eax,0x54772bb3
  40ecaa:	cmp    DWORD PTR [edi-0x2b8bea75],edx
  40ecb0:	cmp    ah,BYTE PTR [ecx]
  40ecb2:	mov    ebx,0xe7e4897a
  40ecb7:	cwde   
  40ecb8:	call   0xe2db:0x60ae3aa0
  40ecbf:	js     0x40ecf0
  40ecc1:	cmp    al,0x66
  40ecc3:	pusha  
  40ecc4:	ret    
  40ecc5:	inc    edx
  40ecc6:	xchg   ecx,eax
  40ecc7:	out    0x3e,eax
  40ecc9:	gs aam 0x4f
  40eccc:	retf   0xfd50
  40eccf:	stos   DWORD PTR es:[edi],eax
  40ecd0:	jne    0x40ec8b
  40ecd2:	mov    bh,0xe1
  40ecd4:	jnp    0x40ecc7
  40ecd6:	leave  
  40ecd7:	enter  0x299a,0x65
  40ecdb:	not    DWORD PTR [edi]
  40ecdd:	xor    ah,al
  40ecdf:	inc    ecx
  40ece0:	aam    0x34
  40ece2:	jno    0x40ecc1
  40ece4:	adc    cl,al
  40ece6:	pop    ebx
  40ece7:	or     eax,DWORD PTR [ecx]
  40ece9:	outs   dx,DWORD PTR ds:[esi]
  40ecea:	je     0x40ed51
  40ecec:	arpl   WORD PTR [edx-0x6fc22e44],bx
  40ecf2:	and    al,BYTE PTR [esi]
  40ecf4:	fs xchg ebx,eax
  40ecf6:	fistp  DWORD PTR [esi+0x22c48fde]
  40ecfc:	out    dx,eax
  40ecfd:	mov    esp,0x370fcdec
  40ed02:	(bad)  
  40ed03:	mov    bh,0xe3
  40ed05:	mov    dh,0x6b
  40ed07:	xchg   esi,eax
  40ed08:	mov    BYTE PTR [edx],dh
  40ed0a:	dec    edi
  40ed0b:	fsubr  QWORD PTR [esi-0x11e69732]
  40ed11:	add    DWORD PTR [edx+edx*8+0x2784e656],ecx
  40ed18:	jnp    0x40ecd8
  40ed1a:	sub    DWORD PTR [edx],eax
  40ed1c:	fs jae 0x40ed6e
  40ed1f:	aas    
  40ed20:	es jns 0x40ed64
  40ed23:	lods   al,BYTE PTR ds:[esi]
  40ed24:	bound  ecx,QWORD PTR [ebx]
  40ed26:	fcmovb st,st(7)
  40ed28:	inc    ecx
  40ed29:	ret    0x4136
  40ed2c:	inc    esp
  40ed2d:	in     al,dx
  40ed2e:	lock ins DWORD PTR es:[edi],dx
  40ed30:	leave  
  40ed31:	(bad)  
  40ed32:	mov    esi,0x6d20eb6c
  40ed37:	pop    es
  40ed38:	jns    0x40ed86
  40ed3a:	pop    eax
  40ed3b:	add    al,0x64
  40ed3d:	xchg   edx,eax
  40ed3e:	es loope 0x40ece4
  40ed41:	leave  
  40ed42:	inc    ebx
  40ed43:	push   ebp
  40ed44:	cdq    
  40ed45:	jl     0x40ed70
  40ed47:	shl    DWORD PTR [esp-0x4a],0x84
  40ed4c:	or     eax,0x34187002
  40ed51:	int    0x9f
  40ed53:	push   ebx
  40ed54:	leave  
  40ed55:	pop    esi
  40ed56:	push   eax
  40ed57:	xor    edi,DWORD PTR ds:0x4fb7a78b
  40ed5d:	lods   al,BYTE PTR ds:[esi]
  40ed5e:	mov    ecx,0xa51fcdab
  40ed63:	mov    ?,edx
  40ed65:	fld    TBYTE PTR [edi]
  40ed67:	mov    edi,ecx
  40ed69:	sti    
  40ed6a:	xchg   edx,eax
  40ed6b:	dec    edx
  40ed6c:	cmp    DWORD PTR ds:0xf1a535e3,esp
  40ed72:	xor    bh,bl
  40ed74:	cmp    eax,0xa6d3fe25
  40ed79:	out    dx,eax
  40ed7a:	retf   0x9e48
  40ed7d:	adc    dl,BYTE PTR [esi]
  40ed7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed80:	ins    BYTE PTR es:[edi],dx
  40ed81:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40ed83:	jb     0x40edb5
  40ed85:	mov    al,ds:0xdb7b693b
  40ed8a:	imul   ebp,DWORD PTR cs:0xf706a105,0xbeed0865
  40ed95:	dec    esp
  40ed96:	dec    edi
  40ed97:	(bad)  
  40ed98:	mov    edi,0x9fd57b4c
  40ed9d:	mov    ebx,0x462da7d3
  40eda2:	xchg   esi,eax
  40eda3:	cs popa 
  40eda5:	dec    eax
  40eda6:	pushf  
  40eda7:	imul   ebx,esp,0x3d1de83b
  40edad:	call   0x197164a2
  40edb2:	pop    ecx
  40edb3:	push   0x35
  40edb5:	fisubr WORD PTR gs:[eax]
  40edb8:	sahf   
  40edb9:	(bad)
  40edbe:	int    0xb1
  40edc0:	sub    ah,0x56
  40edc3:	popa   
  40edc4:	aas    
  40edc5:	(bad)
  40edc8:	in     eax,0xd4
  40edca:	dec    ebx
  40edcb:	mov    BYTE PTR [ebx+0x21],ah
  40edce:	add    bh,BYTE PTR [eax+edx*2]
  40edd1:	cdq    
  40edd2:	aad    0x70
  40edd4:	into   
  40edd5:	aaa    
  40edd6:	xor    ah,al
  40edd8:	cwde   
  40edd9:	cld    
  40edda:	js     0x40edbe
  40eddc:	popf   
  40eddd:	shl    ch,1
  40eddf:	in     al,0x6f
  40ede1:	jecxz  0x40ee3f
  40ede3:	sbb    eax,0x46d0e56e
  40ede8:	nop
  40ede9:	leave  
  40edea:	bound  edx,QWORD PTR [eax]
  40edec:	pop    edi
  40eded:	sahf   
  40edee:	aaa    
  40edef:	or     DWORD PTR [esi+0x6c],0xffffffdc
  40edf3:	sahf   
  40edf4:	dec    ebp
  40edf5:	inc    edi
  40edf6:	pop    ebp
  40edf7:	xchg   ebp,eax
  40edf8:	cli    
  40edf9:	pop    ds
  40edfa:	aad    0x18
  40edfc:	xchg   esi,eax
  40edfd:	inc    ebp
  40edfe:	lea    ecx,[edx-0x355ef5e]
  40ee04:	pop    esi
  40ee05:	int    0xca
  40ee07:	mov    dh,0x15
  40ee09:	dec    eax
  40ee0a:	pop    ecx
  40ee0b:	or     eax,esp
  40ee0d:	das    
  40ee0e:	ret    
  40ee0f:	xor    BYTE PTR [esi+0x6aab3ec0],0x68
  40ee16:	and    ebp,esi
  40ee18:	push   edx
  40ee19:	cmp    bh,0x18
  40ee1c:	cmp    DWORD PTR [esi],0xffffff81
  40ee1f:	sahf   
  40ee20:	jno    0x40ee8c
  40ee22:	loopne 0x40edd5
  40ee24:	hlt    
  40ee25:	add    eax,0x8e156ee
  40ee2a:	das    
  40ee2b:	inc    eax
  40ee2c:	add    al,0xf
  40ee2e:	pop    ds
  40ee2f:	cmp    al,0xd9
  40ee31:	outs   dx,DWORD PTR ds:[esi]
  40ee32:	mov    ds:0xfbf18f0c,al
  40ee37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee38:	aad    0x6a
  40ee3a:	pop    edx
  40ee3b:	cmc    
  40ee3c:	dec    ebx
  40ee3d:	packuswb mm0,QWORD PTR [edi+0xe55102a]
  40ee44:	ror    ebx,cl
  40ee46:	cmp    cl,BYTE PTR [eax+0x10]
  40ee49:	mov    dh,0x9a
  40ee4b:	(bad)  
  40ee4c:	lods   al,BYTE PTR ds:[esi]
  40ee4d:	imul   esp,DWORD PTR [ecx-0xd786753],0x5b977dec
  40ee57:	xchg   edi,eax
  40ee58:	(bad)  [ecx*8-0x6562b23d]
  40ee5f:	and    al,0x9f
  40ee61:	jns    0x40ee79
  40ee63:	rol    BYTE PTR [ecx-0x5bcb8110],cl
  40ee69:	rcr    BYTE PTR [edi],0xe4
  40ee6c:	add    al,0x56
  40ee6e:	stos   DWORD PTR es:[edi],eax
  40ee6f:	sub    dh,BYTE PTR ds:0x5c93d9d7
  40ee75:	mov    ebx,0x841023fe
  40ee7a:	(bad)  
  40ee7b:	jge    0x40eeef
  40ee7d:	repz cmp al,0x85
  40ee80:	mov    ah,0xf
  40ee82:	aad    0x8e
  40ee84:	sub    eax,0xb871ef56
  40ee89:	jo     0x40eedf
  40ee8b:	xchg   esp,eax
  40ee8c:	cli    
  40ee8d:	adc    al,0x2c
  40ee8f:	sahf   
  40ee90:	ror    BYTE PTR [esi],0xc5
  40ee93:	hlt    
  40ee94:	les    eax,FWORD PTR [ebx]
  40ee96:	pusha  
  40ee97:	scas   al,BYTE PTR es:[edi]
  40ee98:	sti    
  40ee99:	hlt    
  40ee9a:	cli    
  40ee9b:	sub    eax,0x78af9ac3
  40eea0:	stc    
  40eea1:	push   edi
  40eea2:	sbb    al,0x82
  40eea4:	inc    ebx
  40eea5:	mov    ds:0x1d1164cb,al
  40eeaa:	ds jecxz 0x40eeb3
  40eead:	and    eax,0x6d408d86
  40eeb2:	xchg   ecx,eax
  40eeb3:	inc    eax
  40eeb4:	or     BYTE PTR [eax-0x4e],ch
  40eeb7:	xlat   BYTE PTR ds:[ebx]
  40eeb8:	push   ss
  40eeb9:	xor    eax,0x6ff94b41
  40eebe:	cli    
  40eebf:	add    DWORD PTR [edi],0x205fd8d6
  40eec5:	inc    eax
  40eec6:	jno    0x40eec3
  40eec8:	retf   
  40eec9:	(bad)  
  40eeca:	(bad)  
  40eecb:	xchg   edx,eax
  40eecc:	(bad)  
  40eecd:	pusha  
  40eece:	sub    esi,DWORD PTR [ecx-0x8]
  40eed1:	mov    ebp,0x22b604b3
  40eed6:	scas   eax,DWORD PTR es:[edi]
  40eed7:	pop    ds
  40eed8:	mov    BYTE PTR [ecx],0xc
  40eedb:	iret   
  40eedc:	inc    eax
  40eedd:	test   al,0xc4
  40eedf:	and    DWORD PTR [esp+ebx*1-0x75],esi
  40eee3:	std    
  40eee4:	lahf   
  40eee5:	inc    bp
  40eee7:	jbe    0x40ee81
  40eee9:	mov    ch,0x79
  40eeeb:	div    bl
  40eeed:	mov    edx,edx
  40eeef:	scas   al,BYTE PTR es:[edi]
  40eef0:	out    dx,al
  40eef1:	pushf  
  40eef2:	iret   
  40eef3:	in     eax,dx
  40eef4:	or     eax,0xdbe4c23a
  40eef9:	call   0x29e0:0x5c83ae9f
  40ef00:	mov    bh,0xae
  40ef02:	retf   
  40ef03:	int    0x83
  40ef05:	jmp    0xe5f159fa
  40ef0a:	(bad)  
  40ef0b:	xchg   esp,eax
  40ef0c:	xor    ebx,DWORD PTR [ecx]
  40ef0e:	aam    0x87
  40ef10:	es stc 
  40ef12:	mov    edx,0xf5d8faf3
  40ef17:	push   es
  40ef18:	out    dx,eax
  40ef19:	and    al,0xfc
  40ef1b:	in     eax,0xa9
  40ef1d:	out    0x53,eax
  40ef1f:	jbe    0x40ef68
  40ef21:	mov    esp,DWORD PTR [edi+0x7]
  40ef24:	push   cs
  40ef25:	fwait
  40ef26:	push   0x8
  40ef28:	and    edx,edi
  40ef2a:	and    eax,0xd4c3548b
  40ef2f:	push   eax
  40ef30:	xchg   esi,eax
  40ef31:	pop    esp
  40ef32:	sbb    ebx,edx
  40ef34:	loope  0x40eedb
  40ef36:	dec    esi
  40ef37:	stc    
  40ef38:	popf   
  40ef39:	sbb    eax,0x48e96d1f
  40ef3e:	xor    BYTE PTR [ebx],dh
  40ef40:	mov    dl,0xf8
  40ef42:	lods   eax,DWORD PTR ds:[esi]
  40ef43:	inc    edx
  40ef44:	inc    ebp
  40ef45:	mov    cl,0x5a
  40ef47:	sbb    eax,0x25fbf40
  40ef4c:	retf   0x35d1
  40ef4f:	sbb    ecx,DWORD PTR [bp+di]
  40ef52:	je     0x40ef02
  40ef54:	ret    
  40ef55:	and    ebx,esp
  40ef57:	shl    BYTE PTR [edx+0x7b06070e],cl
  40ef5d:	popf   
  40ef5e:	imul   esi,DWORD PTR [edx+edi*8+0x6c1be29a],0x24
  40ef66:	adc    al,0xfa
  40ef68:	or     BYTE PTR [ecx+0x55],ah
  40ef6b:	test   al,0x39
  40ef6d:	ss pop ecx
  40ef6f:	loop   0x40efb9
  40ef71:	lds    edi,FWORD PTR [eax+eiz*4]
  40ef74:	push   ds
  40ef75:	sti    
  40ef76:	(bad)  
  40ef77:	pop    ebx
  40ef78:	or     edx,DWORD PTR [esi]
  40ef7a:	(bad)  
  40ef7b:	jmp    0x6ce4ef47
  40ef80:	jge    0x40ef35
  40ef82:	shl    DWORD PTR [eax],0x6e
  40ef85:	mov    DWORD PTR [ecx-0x75],0x32d824fe
  40ef8c:	out    0x9f,al
  40ef8e:	jmp    esi
  40ef90:	call   0xa4de71a9
  40ef95:	test   BYTE PTR [ebx+0x4b],ch
  40ef98:	jle    0x40efdb
  40ef9a:	add    DWORD PTR [ebp-0x21],0xbe9d9973
  40efa1:	xor    bh,bh
  40efa3:	mov    cl,0xb3
  40efa5:	popf   
  40efa6:	ja     0x40eff5
  40efa8:	xchg   ecx,eax
  40efa9:	out    0x46,eax
  40efab:	sbb    ch,al
  40efad:	ret    
  40efae:	jne    0x40ef6a
  40efb0:	pop    ebp
  40efb1:	(bad)  
  40efb2:	and    DWORD PTR [ebp-0x5af64e8b],eax
  40efb8:	(bad)  
  40efb9:	retf   
  40efba:	cwde   
  40efbb:	xchg   DWORD PTR [esi+0x2a],edi
  40efbe:	out    dx,al
  40efbf:	(bad)  
  40efc0:	mov    ds:0x1dd451c8,al
  40efc5:	xchg   ebx,eax
  40efc6:	stc    
  40efc7:	pop    edx
  40efc8:	fadd   QWORD PTR [edi+0x9]
  40efcb:	loopne 0x40f017
  40efcd:	pushf  
  40efce:	pop    edx
  40efcf:	aas    
  40efd0:	jbe    0x40ef81
  40efd2:	shl    BYTE PTR [edi-0x6fc1e146],cl
  40efd8:	cmp    ebx,eax
  40efda:	mov    esi,0x4a76787c
  40efdf:	(bad)  
  40efe0:	mov    ds:0x92b50b68,al
  40efe5:	(bad)  
  40efe6:	ficom  DWORD PTR [ecx-0x80]
  40efe9:	mov    ds:0xb7cbbc83,eax
  40efee:	jo     0x40efda
  40eff0:	imul   ebx,esp,0x65c20a89
  40eff6:	mov    BYTE PTR [esi+0x70],ah
  40eff9:	mov    dl,0x66
  40effb:	rcl    BYTE PTR [eax+ebx*1],0x47
  40efff:	fdiv   DWORD PTR [edx+0x703cfe90]
  40f005:	mov    ebx,0x3fc5808d
  40f00a:	loop   0x40ef8d
  40f00c:	ds aam 0xaf
  40f00f:	add    bl,BYTE PTR ds:0xa49ec2b8
  40f015:	jo     0x40f089
  40f017:	into   
  40f018:	pop    ecx
  40f019:	xor    BYTE PTR [edx],ah
  40f01b:	iret   
  40f01c:	mov    edi,0x76ba5382
  40f021:	add    dl,BYTE PTR [edx]
  40f023:	mov    ds:0x8f5bbf93,eax
  40f028:	clc    
  40f029:	popa   
  40f02a:	test   al,0xa0
  40f02c:	jmp    DWORD PTR [edi]
  40f02e:	outs   dx,DWORD PTR ds:[esi]
  40f02f:	cmp    BYTE PTR [edx],ah
  40f031:	xchg   esp,eax
  40f032:	inc    ebp
  40f033:	and    bl,0x6f
  40f036:	pop    es
  40f037:	mov    WORD PTR [edi],ds
  40f039:	hlt    
  40f03a:	xor    ebp,DWORD PTR [ecx+0x1e]
  40f03d:	xlat   BYTE PTR ds:[ebx]
  40f03f:	push   0x9
  40f041:	mov    ?,eax
  40f043:	arpl   WORD PTR [ecx],cx
  40f045:	and    BYTE PTR [edi-0x63],dl
  40f048:	fistp  QWORD PTR [esi+0x12]
  40f04b:	mov    ds:0x819b71a8,al
  40f050:	xor    dh,dh
  40f052:	mov    edi,0xebd54ffb
  40f057:	pop    ebp
  40f058:	or     al,0xbc
  40f05a:	inc    eax
  40f05c:	out    dx,eax
  40f05d:	aam    0x1a
  40f05f:	inc    esp
  40f060:	out    dx,eax
  40f061:	rcl    DWORD PTR [edi+0x36],1
  40f064:	fld    QWORD PTR [eax+edx*8-0x6c]
  40f068:	jle    0x40f0b0
  40f06a:	test   DWORD PTR [eax+0x6d49eebc],0x3b045f41
  40f074:	push   ss
  40f075:	in     eax,dx
  40f076:	sub    esp,DWORD PTR [eax]
  40f078:	adc    DWORD PTR [ebx],esp
  40f07a:	sahf   
  40f07b:	ja     0x40f068
  40f07d:	sbb    ebp,DWORD PTR [ebp-0x43]
  40f080:	popf   
  40f081:	jmp    0x932b1f63
  40f086:	jo     0x40f022
  40f088:	xchg   edx,eax
  40f089:	inc    edi
  40f08a:	lods   al,BYTE PTR ds:[esi]
  40f08b:	push   edi
  40f08c:	add    eax,0xb23a8eec
  40f091:	out    dx,eax
  40f092:	pop    ss
  40f093:	mov    cl,0x8e
  40f095:	adc    bl,BYTE PTR fs:[eax+esi*1]
  40f099:	or     DWORD PTR [edx],edi
  40f09b:	ja     0x40f050
  40f09d:	inc    ebp
  40f09e:	mov    bl,0xd2
  40f0a0:	cmp    al,0x58
  40f0a2:	add    eax,0x104beaa0
  40f0a7:	lds    eax,FWORD PTR [edi]
  40f0a9:	push   ebp
  40f0aa:	sbb    al,0x0
  40f0ac:	sub    al,0xef
  40f0ae:	imul   eax,DWORD PTR [ebx],0xaae335da
  40f0b4:	dec    ecx
  40f0b5:	push   ss
  40f0b6:	fwait
  40f0b7:	retf   0xc910
  40f0ba:	ret    
  40f0bb:	xor    BYTE PTR [ebp-0x4157f370],ah
  40f0c1:	pop    es
  40f0c2:	push   ss
  40f0c3:	inc    esi
  40f0c4:	scas   eax,DWORD PTR es:[edi]
  40f0c5:	shl    BYTE PTR [ecx-0x6a855075],cl
  40f0cb:	cld    
  40f0cc:	jp     0x40f097
  40f0ce:	jge    0x40f08c
  40f0d0:	adc    BYTE PTR [ebp-0x5e],0xd4
  40f0d4:	push   ebp
  40f0d5:	cmp    BYTE PTR [edi-0xccf9aa3],bh
  40f0db:	push   ebp
  40f0dc:	dec    esp
  40f0dd:	pop    es
  40f0de:	loope  0x40f083
  40f0e0:	clc    
  40f0e1:	cwde   
  40f0e2:	mov    ebx,0x90714fb2
  40f0e7:	mov    esp,0xc8b1ec5
  40f0ec:	lods   eax,DWORD PTR ds:[esi]
  40f0ed:	stc    
  40f0ee:	fst    QWORD PTR [esi]
  40f0f0:	aaa    
  40f0f1:	les    esp,FWORD PTR [eax+edx*2+0x25]
  40f0f5:	(bad)  
  40f0f7:	cmp    DWORD PTR [eax+eax*1],edi
  40f0fa:	sub    BYTE PTR [esi-0x65],ah
  40f0fd:	add    ah,bl
  40f0ff:	xor    DWORD PTR [ecx+edi*1+0x29],ecx
  40f103:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f104:	lds    esi,FWORD PTR [ebx+0x12]
  40f107:	lea    ecx,[ebx]
  40f109:	cli    
  40f10a:	mov    BYTE PTR [eax],dl
  40f10c:	mov    ebx,0x319d5819
  40f111:	retf   
  40f112:	popa   
  40f113:	push   cs
  40f114:	jns    0x40f11b
  40f116:	es scas al,BYTE PTR es:[edi]
  40f118:	pushf  
  40f119:	arpl   WORD PTR [edi],bp
  40f11b:	or     BYTE PTR [eax-0x55],bh
  40f11e:	xor    DWORD PTR ds:0xeff08b5b,ebx
  40f124:	sub    eax,0x60b9ef2f
  40f129:	outs   dx,DWORD PTR ds:[esi]
  40f12a:	shl    DWORD PTR [ecx-0x6e],0xef
  40f12e:	xor    ecx,DWORD PTR [esi]
  40f130:	loopne 0x40f1af
  40f132:	sbb    DWORD PTR [ebx],edx
  40f134:	out    dx,eax
  40f135:	xor    ebp,DWORD PTR [edi]
  40f137:	adc    al,0xb5
  40f139:	imul   ecx,DWORD PTR [ebp-0xd],0x2e
  40f13d:	push   0x3f
  40f13f:	ins    DWORD PTR es:[edi],dx
  40f140:	xchg   edx,eax
  40f141:	and    ebp,DWORD PTR [ecx+0x1e]
  40f144:	popf   
  40f145:	pop    edx
  40f146:	cdq    
  40f147:	mov    bh,BYTE PTR [ecx-0x67d0e8ca]
  40f14d:	lods   al,BYTE PTR cs:[esi]
  40f14f:	das    
  40f150:	loopne 0x40f1c5
  40f152:	mov    ebx,0x3026b823
  40f157:	adc    bh,BYTE PTR [edx+0x28]
  40f15a:	mov    cl,0x6a
  40f15c:	call   0xfe06f9c6
  40f161:	test   ecx,edx
  40f163:	jmp    0x28a2:0x9de04378
  40f16a:	jge    0x40f11f
  40f16c:	and    bh,BYTE PTR [ebp+0x2e62d133]
  40f172:	inc    edi
  40f173:	mov    dh,0x91
  40f175:	adc    al,0x27
  40f177:	pop    es
  40f178:	std    
  40f179:	inc    edx
  40f17a:	xchg   esi,eax
  40f17b:	xor    BYTE PTR [ecx],0x6d
  40f17e:	xor    al,0xa9
  40f180:	aaa    
  40f181:	add    bh,bh
  40f183:	(bad)
  40f186:	xchg   edi,eax
  40f187:	mov    ebx,eax
  40f189:	and    dl,0xf6
  40f18c:	and    edx,DWORD PTR [eax+0x2d]
  40f18f:	add    DWORD PTR [eax-0x3e],ecx
  40f192:	ins    DWORD PTR es:[edi],dx
  40f193:	mov    ecx,0x1a58dc3b
  40f198:	out    0x43,eax
  40f19a:	fisttp WORD PTR [esi]
  40f19c:	cwde   
  40f19d:	jno    0x40f1eb
  40f19f:	cwde   
  40f1a0:	pop    es
  40f1a1:	pop    ebp
  40f1a2:	fadd   st(6),st
  40f1a4:	ds cld 
  40f1a6:	push   es
  40f1a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1a8:	lock xchg edi,eax
  40f1aa:	jmp    ebp
  40f1ac:	push   esi
  40f1ad:	(bad)  
  40f1ae:	outs   dx,DWORD PTR ds:[esi]
  40f1af:	test   BYTE PTR [esi*2+0x201548b4],dl
  40f1b6:	ror    BYTE PTR [esi-0x15],1
  40f1b9:	lds    eax,FWORD PTR [ecx-0x32]
  40f1bc:	lds    ebx,FWORD PTR [edx]
  40f1be:	pop    ss
  40f1bf:	sub    esi,eax
  40f1c1:	push   ebp
  40f1c2:	stc    
  40f1c3:	mov    BYTE PTR [ebx+edx*1],al
  40f1c6:	jo     0x40f162
  40f1c8:	dec    edi
  40f1c9:	and    DWORD PTR [ebx-0x55],ecx
  40f1cc:	cli    
  40f1cd:	adc    BYTE PTR [edx+0x60],ch
  40f1d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1d1:	outs   dx,BYTE PTR ds:[esi]
  40f1d2:	hlt    
  40f1d3:	add    eax,0x3d834b93
  40f1d8:	jp     0x40f1dc
  40f1da:	(bad)  
  40f1db:	in     al,dx
  40f1dc:	and    bl,bh
  40f1de:	or     DWORD PTR [eax+0x5bfaa1bc],ebp
  40f1e4:	leave  
  40f1e5:	fld    DWORD PTR [esi+0x7996c0cc]
  40f1eb:	xor    al,0x62
  40f1ed:	repnz push esp
  40f1ef:	and    al,0x59
  40f1f1:	mov    eax,ds:0xa6b5db28
  40f1f6:	adc    esi,DWORD PTR [ebx-0xb]
  40f1f9:	dec    edx
  40f1fa:	shl    DWORD PTR [edx-0x6b],0xfc
  40f1fe:	sub    eax,0x92755cac
  40f203:	xchg   esp,eax
  40f204:	ror    esp,0xa0
  40f207:	sbb    BYTE PTR [edx+edx*2+0x17],al
  40f20b:	(bad)  
  40f20c:	popa   
  40f20d:	outs   dx,DWORD PTR ds:[esi]
  40f20e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f20f:	push   0x7a4ff280
  40f214:	ss in  al,0x25
  40f217:	ins    DWORD PTR es:[edi],dx
  40f218:	sbb    BYTE PTR [ebp+ecx*2-0x998034e],ah
  40f21f:	lock fnstsw WORD PTR [ebx+0x7202a528]
  40f226:	and    eax,0xa518fd18
  40f22b:	inc    ebp
  40f22c:	xor    BYTE PTR [ebx-0x3d],dh
  40f22f:	mov    DWORD PTR [edx-0x134a61e],ebx
  40f235:	pop    eax
  40f236:	mov    dl,0x59
  40f238:	jg     0x40f2b7
  40f23a:	mov    edx,0xb4153eff
  40f23f:	cmp    ah,BYTE PTR [esi+ebx*2+0x78738b96]
  40f246:	iret   
  40f247:	in     al,dx
  40f248:	ins    DWORD PTR es:[edi],dx
  40f249:	das    
  40f24a:	xor    cl,BYTE PTR [edx]
  40f24c:	push   edi
  40f24d:	xor    DWORD PTR [edi],ecx
  40f24f:	(bad)  
  40f250:	es dec ebx
  40f252:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f253:	add    cl,ch
  40f255:	mov    eax,ds:0xbf566683
  40f25a:	xchg   edx,eax
  40f25b:	int3   
  40f25c:	call   FWORD PTR [ebp+0x2b]
  40f25f:	je     0x40f231
  40f261:	in     eax,dx
  40f262:	cld    
  40f263:	cmc    
  40f264:	pop    edx
  40f265:	cwde   
  40f266:	repnz aam 0xd6
  40f269:	das    
  40f26a:	xchg   DWORD PTR [ebx-0x14],ecx
  40f26d:	mov    esi,0xe44ce839
  40f272:	inc    edi
  40f273:	call   0x29832edb
  40f278:	dec    esp
  40f279:	shr    BYTE PTR [ebp+0x28],1
  40f27c:	lock mov esp,0xbc6e4972
  40f282:	fwait
  40f283:	xchg   DWORD PTR gs:[ebx-0x4cef3fe5],ecx
  40f28a:	bound  ebx,QWORD PTR [ecx-0x30]
  40f28d:	and    edx,DWORD PTR [eax]
  40f28f:	jg     0x40f2b2
  40f291:	icebp  
  40f292:	aas    
  40f293:	cli    
  40f294:	mov    al,0xb1
  40f296:	xor    eax,0x7e97a359
  40f29b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f29c:	(bad)  
  40f29d:	jmp    0x40f318
  40f29f:	or     eax,0x81b1a076
  40f2a4:	retf   
  40f2a5:	mov    ah,0xdf
  40f2a7:	les    ebp,FWORD PTR [edi-0x2c716c41]
  40f2ad:	inc    edx
  40f2ae:	scas   al,BYTE PTR es:[edi]
  40f2af:	pop    edx
  40f2b0:	call   0x5b31ec37
  40f2b5:	sub    DWORD PTR [edx-0x57952a1d],eax
  40f2bb:	scas   eax,DWORD PTR es:[edi]
  40f2bc:	mov    esp,0xc9170120
  40f2c1:	loope  0x40f299
  40f2c3:	out    dx,al
  40f2c4:	pop    edi
  40f2c5:	in     al,dx
  40f2c6:	aaa    
  40f2c7:	xlat   BYTE PTR ds:[ebx]
  40f2c8:	lods   al,BYTE PTR ds:[esi]
  40f2c9:	dec    ebp
  40f2ca:	mov    ch,0x5a
  40f2cc:	(bad)  
  40f2cd:	pushw  0x5a
  40f2d0:	add    edi,DWORD PTR [ecx]
  40f2d2:	jp     0x40f305
  40f2d4:	ret    
  40f2d5:	xlat   BYTE PTR ds:[ebx]
  40f2d6:	xor    BYTE PTR [eax-0x5f],bh
  40f2d9:	(bad)  
  40f2da:	xor    al,BYTE PTR gs:[esi]
  40f2dd:	jecxz  0x40f2c0
  40f2df:	repz inc esp
  40f2e1:	add    eax,DWORD PTR [eax]
  40f2e3:	test   DWORD PTR [esi+0x28a004d],edx
  40f2e9:	mov    DWORD PTR [eax+0x68],ebp
  40f2ec:	jl     0x40f281
  40f2ee:	cmp    DWORD PTR [esi+0x6e],ecx
  40f2f1:	lea    esp,[eax-0x79]
  40f2f4:	scas   al,BYTE PTR es:[edi]
  40f2f5:	dec    esi
  40f2f6:	fcmovu st,st(3)
  40f2f8:	pop    edi
  40f2f9:	js     0x40f322
  40f2fb:	repz inc eax
  40f2fd:	fstp   st(7)
  40f2ff:	xor    ch,dh
  40f301:	loop   0x40f356
  40f303:	call   0x6bdcbb0
  40f308:	neg    eax
  40f30a:	ins    BYTE PTR es:[edi],dx
  40f30b:	pop    edi
  40f30c:	mov    bh,0xd3
  40f30e:	add    eax,0x49430913
  40f313:	push   edi
  40f314:	sub    al,cl
  40f316:	push   cs
  40f317:	loopne 0x40f34e
  40f319:	ins    BYTE PTR es:[edi],dx
  40f31a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f31b:	pusha  
  40f31c:	imul   ebp,ebx,0xffffffb6
  40f31f:	arpl   WORD PTR [esp+ebp*2],di
  40f322:	adc    DWORD PTR [eax-0x476d827b],esi
  40f328:	fsub   QWORD PTR ds:0x4b35aba2
  40f32e:	cld    
  40f32f:	sbb    bl,ch
  40f331:	stos   BYTE PTR es:[edi],al
  40f332:	test   al,0xde
  40f334:	inc    DWORD PTR [esi]
  40f336:	dec    eax
  40f337:	sub    al,0xe1
  40f339:	mul    dh
  40f33b:	jne    0x40f34e
  40f33d:	(bad)  
  40f33e:	addr16 and eax,0x576eccf0
  40f344:	mov    BYTE PTR [ebp+0x26bb147],dh
  40f34a:	ds adc eax,0xe80679df
  40f350:	out    dx,eax
  40f351:	xchg   esi,eax
  40f352:	adc    ebp,DWORD PTR [ebx-0xed2eead]
  40f358:	dec    edi
  40f359:	test   al,0x1
  40f35b:	scas   al,BYTE PTR es:[edi]
  40f35c:	ret    
  40f35d:	mov    ecx,edx
  40f35f:	and    BYTE PTR [esi],bl
  40f361:	adc    DWORD PTR [eax],edi
  40f363:	mov    ch,0x50
  40f365:	sub    ah,BYTE PTR [ebx-0x5038e3c8]
  40f36b:	ds dec ebp
  40f36d:	int    0xda
  40f36f:	xchg   edi,eax
  40f370:	push   edx
  40f371:	xor    DWORD PTR [edx],eax
  40f373:	inc    esp
  40f374:	dec    esp
  40f375:	sbb    DWORD PTR [ebx+0x36],esi
  40f378:	cmp    BYTE PTR [esp+edx*8-0x669aeefc],al
  40f37f:	xor    DWORD PTR [edi+0x45],ebx
  40f382:	cmp    al,0x93
  40f384:	sbb    ecx,DWORD PTR [esi+0x4]
  40f387:	retf   0x1b76
  40f38a:	into   
  40f38b:	push   ebx
  40f38c:	mov    edx,0x8ec97849
  40f391:	test   esi,0x3a8b7e22
  40f397:	repz (bad) 
  40f399:	sub    BYTE PTR [eax-0x2d],ah
  40f39c:	mov    esi,0xa25bc031
  40f3a1:	xchg   edi,eax
  40f3a2:	icebp  
  40f3a3:	outs   dx,BYTE PTR ds:[esi]
  40f3a4:	fbstp  TBYTE PTR [ebp-0xe]
  40f3a7:	test   al,0xf3
  40f3a9:	scas   al,BYTE PTR es:[edi]
  40f3aa:	pop    es
  40f3ab:	push   edi
  40f3ac:	repz pusha 
  40f3ae:	push   ds
  40f3af:	test   al,0x45
  40f3b1:	pop    esp
  40f3b2:	or     bl,BYTE PTR [esi-0x5059d300]
  40f3b8:	leave  
  40f3b9:	mov    al,0x41
  40f3bb:	out    0x5a,al
  40f3bd:	pop    es
  40f3be:	and    ecx,0x40
  40f3c1:	lods   eax,DWORD PTR ds:[esi]
  40f3c2:	mov    ah,0x2e
  40f3c4:	sar    DWORD PTR [edi-0x46],1
  40f3c7:	popa   
  40f3c8:	int    0x0
  40f3ca:	add    al,0x45
  40f3cc:	add    eax,0x4bfdce4a
  40f3d1:	xchg   esp,eax
  40f3d2:	sbb    bh,BYTE PTR [edi+0x38b3bbb0]
  40f3d8:	out    dx,eax
  40f3d9:	sub    ebx,edx
  40f3db:	out    0xc,al
  40f3dd:	outs   dx,BYTE PTR ds:[esi]
  40f3de:	(bad)  
  40f3e0:	rcr    cl,cl
  40f3e2:	pop    ds
  40f3e3:	les    edx,FWORD PTR [eax-0x3f1d5900]
  40f3e9:	rol    BYTE PTR [edi-0x1c5d6164],cl
  40f3ef:	out    0xbd,al
  40f3f1:	shr    DWORD PTR [edx],0x51
  40f3f4:	fistp  DWORD PTR [ebx]
  40f3f6:	in     al,dx
  40f3f7:	mov    edx,0xa49bab03
  40f3fc:	call   0xbe68:0xdaca3ba3
  40f403:	push   edi
  40f404:	cli    
  40f405:	xchg   ebp,eax
  40f406:	mov    edx,0xd1d91b42
  40f40b:	scas   eax,DWORD PTR es:[edi]
  40f40c:	js     0x40f3de
  40f40e:	(bad)  
  40f40f:	imul   esi,DWORD PTR [ecx+eiz*4+0x15],0x70
  40f414:	cs cwde 
  40f416:	in     eax,dx
  40f417:	pop    ss
  40f418:	loop   0x40f490
  40f41a:	shr    BYTE PTR [esi-0x3e],1
  40f41d:	lds    esi,FWORD PTR [edi]
  40f41f:	loopne 0x40f48a
  40f421:	jo     0x40f429
  40f423:	je     0x40f483
  40f425:	imul   ecx,DWORD PTR [ebp+0x3b],0xe5bbcf15
  40f42c:	imul   ebx,ecx,0xfffffff8
  40f42f:	inc    ecx
  40f430:	or     DWORD PTR ds:0xc673677b,esp
  40f436:	int    0xd4
  40f438:	std    
  40f439:	rcl    DWORD PTR ds:0x897fdaca,cl
  40f43f:	dec    ebx
  40f440:	clc    
  40f441:	adc    DWORD PTR [eax],ecx
  40f443:	mov    eax,0x6a5b63c2
  40f448:	loop   0x40f49b
  40f44a:	pop    ss
  40f44b:	and    BYTE PTR [edi+ecx*8],bh
  40f44e:	fldcw  WORD PTR [edi+0x79]
  40f451:	inc    ebx
  40f452:	sub    al,0xb1
  40f454:	jno    0x40f481
  40f456:	xchg   ebx,eax
  40f457:	dec    ecx
  40f458:	adc    BYTE PTR [edx],dh
  40f45a:	inc    edx
  40f45b:	dec    ecx
  40f45c:	and    eax,0xcff3b2ee
  40f461:	add    esp,DWORD PTR ds:0xfe919ae
  40f467:	lahf   
  40f468:	aad    0x48
  40f46a:	push   edi
  40f46b:	js     0x40f430
  40f46d:	xor    eax,0x5faf843a
  40f472:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f473:	test   ebp,eax
  40f475:	or     DWORD PTR [ebx],0x25
  40f478:	or     edi,DWORD PTR [ecx]
  40f47a:	ins    BYTE PTR es:[edi],dx
  40f47b:	popf   
  40f47c:	sub    esi,DWORD PTR [edx-0xf]
  40f47f:	cmp    ah,ah
  40f481:	out    dx,eax
  40f482:	push   ss
  40f483:	push   ebp
  40f484:	sbb    al,0x61
  40f486:	addr16 call 0xf11b:0x38e0f984
  40f48e:	jp     0x40f455
  40f490:	jge    0x40f43c
  40f492:	inc    eax
  40f493:	jg     0x40f469
  40f495:	wrfsbase ebp
  40f499:	jnp    0x40f433
  40f49b:	(bad)  
  40f49c:	jg     0x40f480
  40f49e:	clc    
  40f49f:	xchg   di,ax
  40f4a1:	sbb    eax,0x32c07f63
  40f4a6:	jo     0x40f442
  40f4a8:	inc    eax
  40f4a9:	jae    0x40f4f3
  40f4ab:	xor    ch,BYTE PTR ds:0x130773b0
  40f4b1:	and    eax,0x97c2e1e
  40f4b6:	ins    DWORD PTR es:[edi],dx
  40f4b7:	adc    esp,DWORD PTR [edi+0x54]
  40f4ba:	jg     0x40f45c
  40f4bc:	pop    esi
  40f4bd:	add    BYTE PTR [ecx+0x64],dl
  40f4c0:	imul   eax,DWORD PTR [edi-0x1aaff010],0xbf026eb1
  40f4ca:	push   eax
  40f4cb:	hlt    
  40f4cc:	sbb    al,0x3f
  40f4ce:	jp     0x40f4d2
  40f4d0:	lods   eax,DWORD PTR ds:[esi]
  40f4d1:	fcmovbe st,st(0)
  40f4d3:	mov    edx,0x34d52f43
  40f4d8:	das    
  40f4d9:	mov    bl,0xb8
  40f4db:	(bad)  
  40f4dd:	inc    edx
  40f4de:	adc    esi,DWORD PTR [edx+0x1e4d698]
  40f4e4:	mov    al,0x26
  40f4e6:	push   ebx
  40f4e7:	loope  0x40f566
  40f4e9:	and    al,ah
  40f4eb:	or     esp,ebx
  40f4ed:	add    eax,0x6b6f0d7d
  40f4f2:	dec    esp
  40f4f3:	xchg   BYTE PTR [ebp-0x42b7cc52],dl
  40f4f9:	mov    ebp,0x6c737965
  40f4fe:	dec    edx
  40f4ff:	mov    al,ds:0x8c3fec3f
  40f504:	jbe    0x40f562
  40f506:	jge    0x40f4d7
  40f508:	mov    bh,0xd7
  40f50a:	ds jo  0x40f55f
  40f50d:	sbb    dl,dh
  40f50f:	or     eax,0xf354ecee
  40f514:	mov    dl,0x4c
  40f516:	jl     0x40f4ac
  40f518:	fwait
  40f519:	pop    ebx
  40f51a:	push   ss
  40f51b:	ins    DWORD PTR es:[edi],dx
  40f51c:	pop    esp
  40f51d:	retf   0x58d7
  40f520:	(bad)  
  40f521:	rcl    bl,1
  40f523:	jne    0x40f57f
  40f525:	sbb    al,0x82
  40f527:	out    dx,al
  40f528:	inc    edx
  40f529:	js     0x40f4e2
  40f52b:	cmc    
  40f52c:	xchg   BYTE PTR [edi-0x2c],cl
  40f52f:	inc    eax
  40f530:	dec    esi
  40f531:	int    0x94
  40f533:	pop    esi
  40f534:	loopne 0x40f59a
  40f536:	cmc    
  40f537:	in     eax,0x2e
  40f539:	adc    al,0x55
  40f53b:	pop    ebp
  40f53c:	mov    eax,ds:0x40bf0039
  40f541:	fistp  DWORD PTR [esi-0x4612b1e5]
  40f547:	je     0x40f56c
  40f549:	push   ecx
  40f54a:	xchg   edi,eax
  40f54b:	mov    edi,0x18009d84
  40f550:	js     0x40f5a1
  40f552:	or     DWORD PTR [ebx],edx
  40f554:	bound  ebx,QWORD PTR ds:0xcf072ee5
  40f55a:	add    cl,BYTE PTR [ebp+0x30]
  40f55d:	adc    eax,DWORD PTR [eax+edi*1]
  40f560:	rol    DWORD PTR [ebx+0x2d68a4f1],1
  40f566:	aaa    
  40f567:	cmp    BYTE PTR [ebp-0x3a00be92],ah
  40f56d:	cli    
  40f56e:	lea    edi,[eax+0x47]
  40f571:	jb     0x40f578
  40f573:	jnp    0x40f57f
  40f575:	mov    ecx,0x7e4fc8a9
  40f57a:	xor    eax,0xf79fe1c2
  40f57f:	mov    esi,ebp
  40f581:	cmp    BYTE PTR [eax-0x3fba4669],ah
  40f587:	aas    
  40f588:	mov    al,ds:0x4bf9120d
  40f58d:	(bad)  [edx-0x11]
  40f590:	sub    eax,esp
  40f592:	push   0xc9e0a457
  40f597:	cs mov ebp,0x30d1b743
  40f59d:	mov    dl,0x7e
  40f59f:	(bad)  
  40f5a0:	clc    
  40f5a1:	lods   al,BYTE PTR ds:[esi]
  40f5a2:	pop    es
  40f5a3:	push   0x4a
  40f5a5:	arpl   WORD PTR [ebx+0x4a],cx
  40f5a8:	test   BYTE PTR [ecx],bh
  40f5aa:	aaa    
  40f5ab:	ins    BYTE PTR es:[edi],dx
  40f5ac:	or     BYTE PTR [edi],dh
  40f5ae:	add    ecx,ecx
  40f5b0:	sbb    DWORD PTR [ebx+0x123a7c0],0x49
  40f5b7:	push   ecx
  40f5b8:	adc    BYTE PTR [esi+0x3e08cac9],ch
  40f5be:	bnd fs jns 0x40f5af
  40f5c2:	imul   ecx,eax,0x1bab2d4c
  40f5c8:	in     al,0x30
  40f5ca:	xchg   esi,eax
  40f5cb:	(bad)  
  40f5cc:	pop    ebx
  40f5cd:	push   ss
  40f5ce:	shl    BYTE PTR [edi+0x26],cl
  40f5d1:	cdq    
  40f5d2:	xor    eax,0x33926e4e
  40f5d7:	arpl   cx,ax
  40f5d9:	and    DWORD PTR [ebp+0x67],ebx
  40f5dc:	cmp    edi,DWORD PTR [ebx]
  40f5de:	adc    eax,0xd0c94011
  40f5e3:	clc    
  40f5e4:	xor    edi,DWORD PTR [ebx]
  40f5e6:	hlt    
  40f5e7:	out    dx,al
  40f5e8:	sets   BYTE PTR [eax+0x41175f36]
  40f5ef:	mov    ds:0xd623ff48,eax
  40f5f4:	arpl   bp,dx
  40f5f6:	inc    esi
  40f5f7:	mov    ah,0xa3
  40f5f9:	add    eax,0xa769164d
  40f5fe:	adc    cl,BYTE PTR [ecx+ecx*2]
  40f601:	(bad)  
  40f602:	or     DWORD PTR ds:0xafbc4e5d,esi
  40f608:	adc    al,0x88
  40f60a:	xchg   ebp,eax
  40f60b:	pusha  
  40f60c:	xchg   ecx,eax
  40f60d:	push   0x92f6e4fa
  40f612:	pop    ecx
  40f613:	add    bl,BYTE PTR [ebx-0x5f8f8b5]
  40f619:	dec    ecx
  40f61a:	sbb    edi,eax
  40f61c:	xor    eax,0x4193e672
  40f621:	pop    edx
  40f622:	enter  0x4a2a,0xb
  40f626:	packssdw mm3,QWORD PTR [edi-0x24]
  40f62a:	sbb    BYTE PTR [edx+0x42fd6e64],dh
  40f630:	and    cl,bl
  40f632:	xlat   BYTE PTR ds:[ebx]
  40f633:	push   ebp
  40f634:	mov    esp,gs
  40f636:	dec    ebp
  40f637:	dec    ebx
  40f638:	data16 lods al,BYTE PTR ds:[esi]
  40f63a:	pusha  
  40f63b:	(bad)  
  40f63c:	fnstsw WORD PTR [edi+0x43b5b809]
  40f642:	dec    eax
  40f643:	popa   
  40f644:	(bad)  
  40f646:	mov    ebx,0xe276ecd
  40f64b:	add    al,0x3f
  40f64d:	fwait
  40f64e:	inc    edi
  40f64f:	mov    dl,0x8e
  40f651:	test   al,0x5f
  40f653:	or     dl,BYTE PTR [ebp-0x442c7c12]
  40f659:	sub    eax,0xb69ce6b4
  40f65e:	adc    bh,BYTE PTR [edx-0x7c]
  40f661:	fxch   st(6)
  40f663:	shl    BYTE PTR [eax+eiz*8+0x7e26685d],0x4b
  40f66b:	xchg   edx,eax
  40f66c:	loopne 0x40f66b
  40f66e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f66f:	sub    DWORD PTR [edi],ebp
  40f671:	popf   
  40f672:	sahf   
  40f673:	loopne 0x40f6a5
  40f675:	mov    dh,0xae
  40f677:	mov    bh,0xc9
  40f679:	mul    DWORD PTR [esi]
  40f67b:	cmp    BYTE PTR [ebx+0xd],0xe6
  40f67f:	add    al,0xf
  40f681:	mov    ebp,0x411bf0f0
  40f686:	into   
  40f687:	mov    ss,esp
  40f689:	cmp    esi,DWORD PTR [ebx+0x1]
  40f68c:	in     eax,dx
  40f68d:	scas   al,BYTE PTR es:[edi]
  40f68e:	dec    ebx
  40f68f:	push   ds
  40f690:	sbb    ebx,DWORD PTR [eax+esi*2]
  40f693:	rcl    BYTE PTR [edi+0x63],cl
  40f696:	popf   
  40f697:	icebp  
  40f698:	mov    edi,0xe6da6efc
  40f69d:	cmp    eax,0x1bbb651b
  40f6a2:	dec    esp
  40f6a3:	sbb    eax,esp
  40f6a5:	pusha  
  40f6a6:	aad    0x91
  40f6a8:	sub    DWORD PTR [edi-0x56ee979c],ebp
  40f6ae:	jl     0x40f70a
  40f6b0:	fs mov esi,0x5d45e50
  40f6b6:	dec    edi
  40f6b7:	mov    BYTE PTR [ecx-0x3a],ah
  40f6ba:	pop    eax
  40f6bb:	push   esp
  40f6bc:	push   0xa007d3fd
  40f6c1:	fsubp  st(6),st
  40f6c3:	(bad)  
  40f6c4:	repnz inc ebx
  40f6c6:	xchg   edx,eax
  40f6c7:	retf   0x55e3
  40f6ca:	(bad)  
  40f6cb:	sbb    al,0xcb
  40f6cd:	scas   eax,DWORD PTR es:[edi]
  40f6ce:	add    al,0x8d
  40f6d0:	pop    es
  40f6d1:	xor    ebx,DWORD PTR [ebp-0x1073a79a]
  40f6d7:	inc    esi
  40f6d8:	loopne 0x40f6b0
  40f6da:	dec    ecx
  40f6db:	cmp    eax,0x95cc28ad
  40f6e0:	cdq    
  40f6e1:	aas    
  40f6e2:	ja     0x40f6bc
  40f6e4:	add    DWORD PTR [edx+0x7755a41e],esi
  40f6ea:	sub    eax,0x81884e4b
  40f6ef:	out    0xb0,eax
  40f6f1:	adc    DWORD PTR ds:0xa55f1cbe,eax
  40f6f7:	gs retf 
  40f6f9:	cli    
  40f6fa:	pop    esi
  40f6fb:	cli    
  40f6fc:	jns    0x40f765
  40f6fe:	into   
  40f6ff:	outs   dx,DWORD PTR ds:[esi]
  40f700:	push   es
  40f701:	or     al,0xfb
  40f703:	fimul  DWORD PTR [esi]
  40f705:	test   al,0xa0
  40f707:	add    edi,DWORD PTR [esi+edi*1]
  40f70a:	and    cl,BYTE PTR [esi+edi*4-0x3b]
  40f70e:	add    ebx,edi
  40f710:	mov    al,0xbb
  40f712:	and    al,0x66
  40f714:	cmp    esp,ebx
  40f716:	mov    cl,0xc8
  40f718:	test   DWORD PTR [ecx-0x1e],ecx
  40f71b:	and    al,BYTE PTR [ecx]
  40f71d:	mov    cs,esp
  40f71f:	ins    DWORD PTR es:[edi],dx
  40f720:	hlt    
  40f721:	mov    edi,0x7d2d7efc
  40f726:	mov    DWORD PTR cs:[edi+0x1d],0xf15e5c78
  40f72e:	sahf   
  40f72f:	std    
  40f730:	jnp    0x40f6d8
  40f732:	mov    DWORD PTR [ebx+0xef2ebe],edx
  40f738:	(bad)  
  40f739:	not    BYTE PTR [ebp+0x8]
  40f73c:	loope  0x40f724
  40f73e:	arpl   WORD PTR [edi-0x66],di
  40f741:	cli    
  40f742:	mov    ds,WORD PTR [ebp+0x29]
  40f745:	in     al,0x9d
  40f747:	inc    eax
  40f748:	mov    cl,0xb9
  40f74a:	sahf   
  40f74b:	shl    DWORD PTR ds:0xfb04585a,0x3
  40f752:	loopne 0x40f6e6
  40f754:	push   eax
  40f755:	xor    ebx,ebx
  40f757:	mov    edx,esp
  40f759:	dec    edx
  40f75a:	inc    ebx
  40f75b:	add    ebx,DWORD PTR [edx+ebx*1]
  40f75e:	dec    ebx
  40f75f:	xor    edx,edx
  40f761:	add    DWORD PTR [ebp-0x10],ebx
  40f764:	pop    ebx
  40f765:	mov    eax,DWORD PTR [ebp-0x10]
  40f768:	pop    edi
  40f769:	pop    esi
  40f76a:	pop    ebx
  40f76b:	leave  
  40f76c:	ret    0x10
  40f76f:	push   ebp
  40f770:	mov    ebp,esp
  40f772:	push   ecx
  40f773:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  40f77a:	mov    ecx,DWORD PTR ds:0x42b26e
  40f780:	mov    edx,DWORD PTR ds:0x42b2da
  40f786:	sub    edx,ecx
  40f788:	xor    ecx,DWORD PTR [ecx+edx*1]
  40f78b:	mov    eax,DWORD PTR [ebp-0x4]
  40f78e:	and    DWORD PTR ds:0x42b226,0x0
  40f798:	mov    edx,DWORD PTR ds:0x42b226
  40f79e:	inc    edx
  40f79f:	mov    DWORD PTR ds:0x42b226,edx
  40f7a5:	cmp    DWORD PTR ds:0x42b226,0xb
  40f7ac:	jb     0x40f7f2
  40f7b2:	jmp    0x40f7cb
  40f7b7:	push   DWORD PTR [ebp-0x24]
  40f7ba:	push   DWORD PTR [ebp-0x24]
  40f7bd:	push   0x42a23f
  40f7c2:	push   DWORD PTR [ebp-0x1c]
  40f7c5:	call   DWORD PTR ds:0x42b306
  40f7cb:	cmp    DWORD PTR ds:0x42b226,0xa
  40f7d2:	jne    0x40f7e5
  40f7d8:	mov    edx,DWORD PTR ds:0x42b226
  40f7de:	inc    edx
  40f7df:	mov    DWORD PTR ds:0x42b226,edx
  40f7e5:	cmp    DWORD PTR ds:0x42b226,0x17
  40f7ec:	jb     0x40f798
  40f7f2:	mov    edx,DWORD PTR [ebp+0x10]
  40f7f5:	mov    ecx,0x75108ae
  40f7fa:	add    DWORD PTR ds:0x42b1ea,0x1734
  40f804:	xor    eax,ecx
  40f806:	add    eax,0x3272f5
  40f80b:	mov    DWORD PTR [edx],eax
  40f80d:	mov    eax,DWORD PTR [ebp+0xc]
  40f810:	xor    eax,ecx
  40f812:	push   esi
  40f813:	mov    esi,DWORD PTR [ebp+0x10]
  40f816:	mov    edx,0x3272f5
  40f81b:	add    eax,edx
  40f81d:	mov    DWORD PTR [esi+0x4],eax
  40f820:	mov    eax,DWORD PTR [ebp+0x14]
  40f823:	mov    esi,DWORD PTR [ebp+0x10]
  40f826:	mov    DWORD PTR [esi+0x8],eax
  40f829:	mov    eax,DWORD PTR [ebp+0x18]
  40f82c:	mov    esi,DWORD PTR [ebp+0x10]
  40f82f:	mov    DWORD PTR [esi+0xc],eax
  40f832:	mov    eax,DWORD PTR [ebp+0x1c]
  40f835:	mov    esi,DWORD PTR [ebp+0x10]
  40f838:	mov    DWORD PTR [esi+0x10],eax
  40f83b:	mov    eax,DWORD PTR [ebp+0x8]
  40f83e:	xor    eax,ecx
  40f840:	add    eax,edx
  40f842:	pop    esi
  40f843:	leave  
  40f844:	ret    0x18
  40f847:	push   ebp
  40f848:	mov    ebp,esp
  40f84a:	sub    esp,0x9c
  40f850:	and    DWORD PTR ds:0x42b1b6,0x0
  40f85a:	mov    ecx,DWORD PTR ds:0x42b1b6
  40f860:	inc    ecx
  40f861:	mov    DWORD PTR ds:0x42b1b6,ecx
  40f867:	cmp    DWORD PTR ds:0x42b1b6,0xd
  40f86e:	ja     0x40f8b2
  40f874:	jmp    0x40f88b
  40f879:	push   0x42a1d7
  40f87e:	push   0x0
  40f880:	push   0x7b23
  40f885:	call   DWORD PTR ds:0x42b30e
  40f88b:	cmp    DWORD PTR ds:0x42b1b6,0xc
  40f892:	jne    0x40f8a5
  40f898:	mov    ecx,DWORD PTR ds:0x42b1b6
  40f89e:	inc    ecx
  40f89f:	mov    DWORD PTR ds:0x42b1b6,ecx
  40f8a5:	cmp    DWORD PTR ds:0x42b1b6,0x14
  40f8ac:	jb     0x40f85a
  40f8b2:	mov    ecx,DWORD PTR [ebp+0x8]
  40f8b5:	xor    eax,DWORD PTR ds:0x42b1a6
  40f8bb:	mov    eax,0x8a9a
  40f8c0:	xor    ax,WORD PTR [ecx+0x20]
  40f8c4:	xor    DWORD PTR ds:0x42b1d6,ebx
  40f8ca:	mov    ecx,0x3b5c
  40f8cf:	adc    DWORD PTR ds:0x42b206,0x42b22e
  40f8d9:	add    ax,cx
  40f8dc:	and    DWORD PTR ds:0x42b1ba,0x0
  40f8e6:	mov    ecx,DWORD PTR ds:0x42b1ba
  40f8ec:	inc    ecx
  40f8ed:	mov    DWORD PTR ds:0x42b1ba,ecx
  40f8f3:	cmp    DWORD PTR ds:0x42b1ba,0x1e
  40f8fa:	jge    0x40f91b
  40f900:	jmp    0x40f90e
  40f905:	push   DWORD PTR [ebp-0x20]
  40f908:	call   DWORD PTR ds:0x42b316
  40f90e:	cmp    DWORD PTR ds:0x42b1ba,0x19
  40f915:	jb     0x40f8e6
  40f91b:	movzx  eax,ax
  40f91e:	or     ecx,DWORD PTR ds:0x42b1fa
  40f924:	mov    DWORD PTR [ebp-0x10],eax
  40f927:	and    DWORD PTR ds:0x42b1a2,0x5305
  40f931:	mov    BYTE PTR [ebp-0x1],0x80
  40f935:	mov    ecx,DWORD PTR ds:0x42b22a
  40f93b:	sub    DWORD PTR ds:0x42b1f6,ecx
  40f941:	lea    eax,[ebp-0x1]
  40f944:	mov    DWORD PTR ds:0x42b21e,0x14
  40f94e:	cmp    DWORD PTR ds:0x42b21e,0x0
  40f955:	je     0x40f9a6
  40f95b:	cmp    DWORD PTR ds:0x42b21e,0x4
  40f962:	ja     0x40f9a6
  40f968:	jmp    0x40f97a
  40f96d:	push   0x5
  40f96f:	push   0x6029
  40f974:	call   DWORD PTR ds:0x42b31a
  40f97a:	cmp    DWORD PTR ds:0x42b21e,0x5
  40f981:	jne    0x40f994
  40f987:	mov    ecx,DWORD PTR ds:0x42b21e
  40f98d:	dec    ecx
  40f98e:	mov    DWORD PTR ds:0x42b21e,ecx
  40f994:	mov    ecx,DWORD PTR ds:0x42b21e
  40f99a:	dec    ecx
  40f99b:	mov    DWORD PTR ds:0x42b21e,ecx
  40f9a1:	jmp    0x40f94e
  40f9a6:	mov    DWORD PTR [ebp-0xc],eax
  40f9a9:	or     ecx,DWORD PTR ds:0x42b212
  40f9af:	mov    al,BYTE PTR [ebp-0x1]
  40f9b2:	xor    DWORD PTR ds:0x42b226,0x485
  40f9bc:	mov    ecx,DWORD PTR [ebp-0xc]
  40f9bf:	xor    al,0x7e
  40f9c1:	add    al,0x3
  40f9c3:	and    DWORD PTR ds:0x42b20a,0x20b6
  40f9cd:	mov    BYTE PTR [ecx],al
  40f9cf:	sbb    ecx,0x5f8e
  40f9d5:	mov    DWORD PTR [ebp-0x18],0xf89c85a5
  40f9dc:	push   ebx
  40f9dd:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  40f9e4:	and    DWORD PTR ds:0x42b1da,0x0
  40f9ee:	jmp    0x40f9fe
  40f9f3:	mov    eax,ds:0x42b1da
  40f9f8:	inc    eax
  40f9f9:	mov    ds:0x42b1da,eax
  40f9fe:	cmp    DWORD PTR ds:0x42b1da,0x14
  40fa05:	jae    0x40fa55
  40fa0b:	cmp    DWORD PTR ds:0x42b1da,0xb
  40fa12:	jbe    0x40fa55
  40fa18:	jmp    0x40fa35
  40fa1d:	push   0x42b1f2
  40fa22:	push   DWORD PTR [ebp-0xc]
  40fa25:	push   0x42a000
  40fa2a:	push   0x42a18d
  40fa2f:	call   DWORD PTR ds:0x42b31e
  40fa35:	cmp    DWORD PTR ds:0x42b1da,0xa
  40fa3c:	jne    0x40fa50
  40fa42:	xor    eax,eax
  40fa44:	xor    eax,DWORD PTR ds:0x42b1da
  40fa4a:	inc    eax
  40fa4b:	mov    ds:0x42b1da,eax
  40fa50:	jmp    0x40f9f3
  40fa55:	mov    ecx,DWORD PTR [ebp-0x18]
  40fa58:	sub    DWORD PTR ds:0x42b1fa,0x685a
  40fa62:	push   esi
  40fa63:	dec    esi
  40fa64:	mov    eax,0x75108ae
  40fa69:	and    DWORD PTR ds:0x42b1b2,0x4a0b
  40fa73:	xor    ecx,eax
  40fa75:	or     DWORD PTR ds:0x42b212,ebx
  40fa7b:	mov    esi,0x3272f5
  40fa80:	adc    DWORD PTR ds:0x42b216,0x42b222
  40fa8a:	push   edi
  40fa8b:	and    DWORD PTR ds:0x42b19a,0x42b1a2
  40fa95:	add    ecx,esi
  40fa97:	mov    DWORD PTR ds:0x42b212,0x27f7
  40faa1:	jmp    0x40facf
  40faa6:	mov    DWORD PTR ds:0x42b1a2,0x4c70
  40fab0:	mov    dl,BYTE PTR [ebp-0x1]
  40fab3:	mov    DWORD PTR ds:0x42b1da,0x7ef5
  40fabd:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40fac4:	mov    DWORD PTR ds:0x42b21a,0x736d
  40face:	inc    ecx
  40facf:	mov    DWORD PTR ds:0x42b1b2,0x61ef
  40fad9:	cmp    ecx,0x40
  40fadc:	jb     0x40faa6
  40fae2:	sbb    edx,DWORD PTR ds:0x42b1de
  40fae8:	mov    edx,DWORD PTR [ebp-0x18]
  40faeb:	adc    DWORD PTR ds:0x42b18e,0x3f3e
  40faf5:	xor    edx,eax
  40faf7:	sub    DWORD PTR ds:0x42b1d2,0x42b1ce
  40fb01:	add    edx,esi
  40fb03:	jmp    0x40fbc0
  40fb08:	mov    edi,DWORD PTR [ebp+0x8]
  40fb0b:	mov    ecx,0x8a9a
  40fb10:	sbb    DWORD PTR ds:0x42b1e6,0x42b226
  40fb1a:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40fb1f:	adc    DWORD PTR ds:0x42b1de,ecx
  40fb25:	mov    edi,0x3b5c
  40fb2a:	xor    DWORD PTR ds:0x42b1ca,0x42b1a2
  40fb34:	add    cx,di
  40fb37:	adc    DWORD PTR ds:0x42b1b6,0x7f83
  40fb41:	movzx  ecx,cx
  40fb44:	and    DWORD PTR ds:0x42b1f6,0x42b18a
  40fb4e:	mov    DWORD PTR [ebp-0xc],ecx
  40fb51:	and    DWORD PTR ds:0x42b21a,0x0
  40fb5b:	jmp    0x40fb6d
  40fb60:	mov    ecx,DWORD PTR ds:0x42b21a
  40fb66:	inc    ecx
  40fb67:	mov    DWORD PTR ds:0x42b21a,ecx
  40fb6d:	cmp    DWORD PTR ds:0x42b21a,0x19
  40fb74:	jae    0x40fb9c
  40fb7a:	cmp    DWORD PTR ds:0x42b21a,0x1e
  40fb81:	jge    0x40fb9c
  40fb87:	jmp    0x40fb97
  40fb8c:	push   0x1c76
  40fb91:	call   DWORD PTR ds:0x42b322
  40fb97:	jmp    0x40fb60
  40fb9c:	mov    ecx,DWORD PTR [ebp+0x8]
  40fb9f:	add    DWORD PTR ds:0x42b1d2,0x42b1ea
  40fba9:	movzx  ecx,WORD PTR [ecx+edx*4]
  40fbad:	xor    ecx,0x8a9a
  40fbb3:	add    ecx,edi
  40fbb5:	mov    edi,DWORD PTR [ebp-0xc]
  40fbb8:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  40fbbf:	inc    edx
  40fbc0:	mov    ecx,0xfa9
  40fbc5:	mov    ecx,DWORD PTR [ebp-0x10]
  40fbc8:	cmp    edx,ecx
  40fbca:	jne    0x40fb08
  40fbd0:	mov    DWORD PTR ds:0x42b186,0x1e
  40fbda:	cmp    DWORD PTR ds:0x42b186,0x0
  40fbe1:	je     0x40fc18
  40fbe7:	cmp    DWORD PTR ds:0x42b186,0x24
  40fbee:	jle    0x40fc18
  40fbf4:	jmp    0x40fc04
  40fbf9:	push   0x7864
  40fbfe:	call   DWORD PTR ds:0x42b326
  40fc04:	xor    ecx,ecx
  40fc06:	add    ecx,DWORD PTR ds:0x42b186
  40fc0c:	dec    ecx
  40fc0d:	mov    DWORD PTR ds:0x42b186,ecx
  40fc13:	jmp    0x40fbda
  40fc18:	mov    ecx,DWORD PTR [ebp-0x18]
  40fc1b:	and    edi,edx
  40fc1d:	mov    edx,DWORD PTR [ebp+0x10]
  40fc20:	and    DWORD PTR ds:0x42b19a,0x0
  40fc2a:	mov    edi,DWORD PTR ds:0x42b19a
  40fc30:	inc    edi
  40fc31:	mov    DWORD PTR ds:0x42b19a,edi
  40fc37:	cmp    DWORD PTR ds:0x42b19a,0x25
  40fc3e:	jge    0x40fc76
  40fc44:	jmp    0x40fc69
  40fc49:	push   0x42a0fe
  40fc4e:	push   0x5d6f
  40fc53:	push   0x13cc
  40fc58:	push   DWORD PTR [ebp-0x1c]
  40fc5b:	push   0x3c54
  40fc60:	push   DWORD PTR [ebp-0x20]
  40fc63:	call   DWORD PTR ds:0x42b2ea
  40fc69:	cmp    DWORD PTR ds:0x42b19a,0x1d
  40fc70:	jb     0x40fc2a
  40fc76:	xor    ecx,eax
  40fc78:	inc    edi
  40fc79:	add    ecx,esi
  40fc7b:	and    DWORD PTR ds:0x42b1b6,0x0
  40fc85:	jmp    0x40fc97
  40fc8a:	mov    edi,DWORD PTR ds:0x42b1b6
  40fc90:	inc    edi
  40fc91:	mov    DWORD PTR ds:0x42b1b6,edi
  40fc97:	cmp    DWORD PTR ds:0x42b1b6,0x10
  40fc9e:	jae    0x40fcea
  40fca4:	cmp    DWORD PTR ds:0x42b1b6,0x6
  40fcab:	jl     0x40fcea
  40fcb1:	jmp    0x40fcc9
  40fcb6:	push   0x42a0fe
  40fcbb:	push   DWORD PTR [ebp-0x14]
  40fcbe:	push   0x1
  40fcc0:	push   DWORD PTR [ebp-0x1c]
  40fcc3:	call   DWORD PTR ds:0x42b2ee
  40fcc9:	cmp    DWORD PTR ds:0x42b1b6,0x5
  40fcd0:	jne    0x40fce5
  40fcd6:	xor    edi,edi
  40fcd8:	xor    edi,DWORD PTR ds:0x42b1b6
  40fcde:	inc    edi
  40fcdf:	mov    DWORD PTR ds:0x42b1b6,edi
  40fce5:	jmp    0x40fc8a
  40fcea:	mov    DWORD PTR [edx],ecx
  40fcec:	xor    ecx,ecx
  40fcee:	mov    ecx,DWORD PTR [ebp-0x18]
  40fcf1:	and    DWORD PTR ds:0x42b1e2,0x0
  40fcfb:	xor    edi,edi
  40fcfd:	xor    edi,DWORD PTR ds:0x42b1e2
  40fd03:	inc    edi
  40fd04:	mov    DWORD PTR ds:0x42b1e2,edi
  40fd0a:	cmp    DWORD PTR ds:0x42b1e2,0x29
  40fd11:	ja     0x40fd32
  40fd17:	jmp    0x40fd25
  40fd1c:	push   DWORD PTR [ebp-0x14]
  40fd1f:	call   DWORD PTR ds:0x42b2f2
  40fd25:	cmp    DWORD PTR ds:0x42b1e2,0x19
  40fd2c:	jb     0x40fcfb
  40fd32:	xor    ecx,eax
  40fd34:	and    edi,0x72ff
  40fd3a:	add    ecx,esi
  40fd3c:	or     DWORD PTR ds:0x42b182,0x54fc
  40fd46:	mov    DWORD PTR [ebp-0xc],ecx
  40fd49:	adc    edi,DWORD PTR ds:0x42b1e6
  40fd4f:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  40fd56:	or     edi,DWORD PTR ds:0x42b226
  40fd5c:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  40fd63:	and    DWORD PTR ds:0x42b1ba,0x0
  40fd6d:	jmp    0x40fd7f
  40fd72:	mov    ecx,DWORD PTR ds:0x42b1ba
  40fd78:	inc    ecx
  40fd79:	mov    DWORD PTR ds:0x42b1ba,ecx
  40fd7f:	cmp    DWORD PTR ds:0x42b1ba,0x12
  40fd86:	jae    0x40fdca
  40fd8c:	cmp    DWORD PTR ds:0x42b1ba,0x4
  40fd93:	jle    0x40fdca
  40fd99:	jmp    0x40fda9
  40fd9e:	push   0x42b226
  40fda3:	call   DWORD PTR ds:0x42b2f6
  40fda9:	cmp    DWORD PTR ds:0x42b1ba,0x3
  40fdb0:	jne    0x40fdc5
  40fdb6:	xor    ecx,ecx
  40fdb8:	xor    ecx,DWORD PTR ds:0x42b1ba
  40fdbe:	inc    ecx
  40fdbf:	mov    DWORD PTR ds:0x42b1ba,ecx
  40fdc5:	jmp    0x40fd72
  40fdca:	mov    DWORD PTR [ebp-0x10],0xf89c95a5
  40fdd1:	mov    ecx,DWORD PTR [ebp-0x14]
  40fdd4:	mov    DWORD PTR [ebp+0x8],ecx
  40fdd7:	mov    ecx,DWORD PTR [ebp+0x8]
  40fdda:	xor    DWORD PTR ds:0x42b20a,edi
  40fde0:	xor    ecx,eax
  40fde2:	or     edi,DWORD PTR ds:0x42b182
  40fde8:	add    ecx,esi
  40fdea:	mov    ecx,0x242ebf1
  40fdef:	mov    edi,0xf641bf0
  40fdf4:	je     0x419191
  40fdfa:	add    DWORD PTR ds:0x42b1c2,0x6a2f
  40fe04:	mov    edx,DWORD PTR [ebp+0x8]
  40fe07:	mov    ebx,DWORD PTR ds:0x42b1aa
  40fe0d:	and    ebx,DWORD PTR ds:0x42b1f2
  40fe13:	mov    DWORD PTR ds:0x42b1aa,ebx
  40fe19:	mov    ebx,DWORD PTR [ebp-0x8]
  40fe1c:	xor    edx,eax
  40fe1e:	xor    ebx,eax
  40fe20:	xor    DWORD PTR ds:0x42b1e6,0x42b196
  40fe2a:	sub    edx,ebx
  40fe2c:	sub    edx,esi
  40fe2e:	mov    DWORD PTR ds:0x42b1ce,0x13
  40fe38:	cmp    DWORD PTR ds:0x42b1ce,0x0
  40fe3f:	je     0x40fe81
  40fe45:	cmp    DWORD PTR ds:0x42b1ce,0x1c
  40fe4c:	jb     0x40fe81
  40fe52:	jmp    0x40fe6f
  40fe57:	push   0x42b1ca
  40fe5c:	push   0x42b196
  40fe61:	push   DWORD PTR [ebp-0x1c]
  40fe64:	push   0x42a12c
  40fe69:	call   DWORD PTR ds:0x42b2fa
  40fe6f:	mov    ebx,DWORD PTR ds:0x42b1ce
  40fe75:	dec    ebx
  40fe76:	mov    DWORD PTR ds:0x42b1ce,ebx
  40fe7c:	jmp    0x40fe38
  40fe81:	xor    edx,eax
  40fe83:	and    DWORD PTR ds:0x42b196,0x0
  40fe8d:	jmp    0x40fe9f
  40fe92:	mov    ebx,DWORD PTR ds:0x42b196
  40fe98:	inc    ebx
  40fe99:	mov    DWORD PTR ds:0x42b196,ebx
  40fe9f:	cmp    DWORD PTR ds:0x42b196,0x1b
  40fea6:	jae    0x40feef
  40feac:	cmp    DWORD PTR ds:0x42b196,0x6
  40feb3:	jb     0x40feef
  40feb9:	jmp    0x40fece
  40febe:	push   0x42b226
  40fec3:	push   0x42a000
  40fec8:	call   DWORD PTR ds:0x42b2fe
  40fece:	cmp    DWORD PTR ds:0x42b196,0x5
  40fed5:	jne    0x40feea
  40fedb:	xor    ebx,ebx
  40fedd:	add    ebx,DWORD PTR ds:0x42b196
  40fee3:	inc    ebx
  40fee4:	mov    DWORD PTR ds:0x42b196,ebx
  40feea:	jmp    0x40fe92
  40feef:	mov    DWORD PTR [ebp+0x8],edx
  40fef2:	and    DWORD PTR ds:0x42b196,0x0
  40fefc:	jmp    0x40ff10
  40ff01:	xor    ebx,ebx
  40ff03:	xor    ebx,DWORD PTR ds:0x42b196
  40ff09:	inc    ebx
  40ff0a:	mov    DWORD PTR ds:0x42b196,ebx
  40ff10:	cmp    DWORD PTR ds:0x42b196,0x15
  40ff17:	jae    0x40ff62
  40ff1d:	cmp    DWORD PTR ds:0x42b196,0x4
  40ff24:	jb     0x40ff62
  40ff2a:	jmp    0x40ff43
  40ff2f:	push   DWORD PTR [ebp-0xc]
  40ff32:	push   DWORD PTR [ebp-0x1c]
  40ff35:	push   0x42a1d7
  40ff3a:	push   DWORD PTR [ebp-0xc]
  40ff3d:	call   DWORD PTR ds:0x42b306
  40ff43:	cmp    DWORD PTR ds:0x42b196,0x3
  40ff4a:	jne    0x40ff5d
  40ff50:	mov    ebx,DWORD PTR ds:0x42b196
  40ff56:	inc    ebx
  40ff57:	mov    DWORD PTR ds:0x42b196,ebx
  40ff5d:	jmp    0x40ff01
  40ff62:	mov    edx,DWORD PTR [ebp+0x8]
  40ff65:	and    DWORD PTR ds:0x42b21a,0x0
  40ff6f:	jmp    0x40ff81
  40ff74:	mov    ebx,DWORD PTR ds:0x42b21a
  40ff7a:	inc    ebx
  40ff7b:	mov    DWORD PTR ds:0x42b21a,ebx
  40ff81:	cmp    DWORD PTR ds:0x42b21a,0x17
  40ff88:	jae    0x40ffd0
  40ff8e:	cmp    DWORD PTR ds:0x42b21a,0xe
  40ff95:	jb     0x40ffd0
  40ff9b:	jmp    0x40ffb1
  40ffa0:	push   0x42a23f
  40ffa5:	push   DWORD PTR [ebp-0x20]
  40ffa8:	push   DWORD PTR [ebp-0xc]
  40ffab:	call   DWORD PTR ds:0x42b30e
  40ffb1:	cmp    DWORD PTR ds:0x42b21a,0xd
  40ffb8:	jne    0x40ffcb
  40ffbe:	mov    ebx,DWORD PTR ds:0x42b21a
  40ffc4:	inc    ebx
  40ffc5:	mov    DWORD PTR ds:0x42b21a,ebx
  40ffcb:	jmp    0x40ff74
  40ffd0:	mov    ebx,DWORD PTR [ebp-0x58]
  40ffd3:	add    DWORD PTR ds:0x42b20e,0x42b1de
  40ffdd:	add    edx,0x5708e2
  40ffe3:	imul   edx,ebx
  40ffe6:	or     DWORD PTR ds:0x42b1b6,0x7440
  40fff0:	mov    DWORD PTR [ebp-0x58],edx
  40fff3:	sub    DWORD PTR ds:0x42b192,ecx
  40fff9:	jmp    0x412359
  40fffe:	add    al,0x23
  410000:	cld    
  410001:	shl    esp,1
  410003:	mov    al,BYTE PTR [edx]
  410005:	xchg   edx,eax
  410006:	(bad)  
  410009:	retf   0x2baf
  41000c:	lahf   
  41000d:	inc    edx
  41000e:	aas    
  41000f:	scas   eax,DWORD PTR es:[edi]
  410010:	add    DWORD PTR [ebx-0x7c7ca1c2],0x3d
  410017:	pop    ecx
  410018:	ret    
  410019:	adc    cl,BYTE PTR [edi]
  41001b:	adc    DWORD PTR [esp+eiz*4+0x5675adb1],esp
  410022:	push   esi
  410023:	fnstcw WORD PTR [esi+ebx*4]
  410026:	fdiv   st,st(2)
  410028:	push   ecx
  410029:	add    ecx,DWORD PTR [edx+0x7f]
  41002c:	push   edx
  41002d:	jecxz  0x41007f
  41002f:	adc    esp,DWORD PTR [ecx]
  410031:	fild   QWORD PTR [eax+eiz*1-0x12e283e6]
  410038:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410039:	out    0x35,eax
  41003b:	cmp    DWORD PTR [edi],0x44b28cdd
  410041:	les    ebp,FWORD PTR [ebx-0x13]
  410044:	mov    esi,0xbcb906f4
  410049:	cld    
  41004a:	jmp    0x400f904c
  41004f:	out    0x26,al
  410051:	or     ecx,DWORD PTR [edx+0x5f11eea3]
  410057:	fnsave [esi-0x250af08a]
  41005d:	cs (bad) 
  41005f:	or     esp,esi
  410061:	icebp  
  410062:	jno    0x4100a1
  410064:	xchg   esi,eax
  410065:	cld    
  410066:	nop
  410067:	xchg   esp,eax
  410068:	jecxz  0x410080
  41006a:	mov    bl,0x50
  41006c:	stos   BYTE PTR es:[edi],al
  41006d:	(bad)  
  41006e:	(bad)  
  41006f:	cld    
  410070:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410071:	xchg   ecx,eax
  410072:	sub    DWORD PTR [ecx],esi
  410074:	ja     0x410021
  410076:	call   0x5871:0x9104dd36
  41007d:	shl    DWORD PTR [ebx+0x23cfcbee],1
  410083:	cdq    
  410084:	stc    
  410085:	jae    0x410013
  410087:	push   es
  410088:	lods   eax,DWORD PTR ds:[esi]
  410089:	(bad)  
  41008a:	mov    edx,0x537fd6e
  41008f:	mov    bl,0xf6
  410091:	pop    es
  410092:	pusha  
  410093:	sbb    esi,DWORD PTR [esi-0x3]
  410096:	fwait
  410097:	jnp    0x4100c5
  410099:	mov    ecx,0xcc681286
  41009e:	scas   eax,DWORD PTR es:[edi]
  41009f:	xchg   ecx,eax
  4100a0:	inc    eax
  4100a1:	mov    WORD PTR [edx+0x547f6805],ds
  4100a7:	pop    edi
  4100a8:	inc    esi
  4100a9:	jp     0x41006b
  4100ab:	jbe    0x410065
  4100ad:	cmp    ecx,DWORD PTR [ecx+0xd533eeb]
  4100b3:	push   eax
  4100b4:	(bad)  
  4100b5:	shl    dh,1
  4100b7:	sub    eax,DWORD PTR [ebp+0x71]
  4100ba:	mov    bl,0x25
  4100bc:	ins    BYTE PTR es:[edi],dx
  4100bd:	xor    eax,0xb009c915
  4100c2:	jne    0x4100ea
  4100c4:	shr    BYTE PTR [ebx-0x7f19c8f4],0x9a
  4100cb:	mov    bh,0xba
  4100cd:	fstp   TBYTE PTR [edx+0x72]
  4100d0:	sub    eax,0xd9b83b71
  4100d5:	mov    edi,0x9bfa5606
  4100da:	or     al,0xe9
  4100dc:	in     eax,dx
  4100dd:	stc    
  4100de:	(bad)  
  4100df:	iret   
  4100e0:	loop   0x410123
  4100e2:	or     ecx,DWORD PTR [ecx+0x18]
  4100e5:	push   ebx
  4100e6:	icebp  
  4100e7:	dec    ebp
  4100e8:	add    esi,edi
  4100ea:	icebp  
  4100eb:	mov    al,ds:0x202eb5ff
  4100f0:	es cli 
  4100f2:	xor    ah,dh
  4100f4:	repnz push 0xf965c4a8
  4100fa:	fsubr  QWORD PTR [ecx]
  4100fc:	add    BYTE PTR [edx-0x5d],0x45
  410100:	dec    edi
  410101:	mov    ecx,0xbd9e173a
  410106:	sbb    DWORD PTR [ebx],ebx
  410108:	inc    eax
  410109:	dec    BYTE PTR [ecx]
  41010b:	jbe    0x41011b
  41010d:	les    ebp,FWORD PTR [ecx+0x962c7f5]
  410113:	jp     0x4100f5
  410115:	xchg   edx,eax
  410116:	push   edx
  410117:	sub    ah,BYTE PTR [eax-0x72377798]
  41011d:	and    al,0xb9
  41011f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410120:	fs test BYTE PTR ss:[edi+0x7359520e],dl
  410128:	mov    cl,0x9d
  41012a:	inc    esp
  41012b:	test   esi,esi
  41012d:	sar    BYTE PTR [eax+eiz*2],0x4c
  410131:	xchg   esi,ecx
  410133:	test   BYTE PTR [eax+0xc],dh
  410136:	adc    ecx,DWORD PTR [esi-0x43]
  410139:	and    dl,BYTE PTR [ebp-0x5aa3cb0b]
  41013f:	and    dl,dh
  410141:	repz imul esi,DWORD PTR [esp+ebp*4-0x5e],0x9365f36b
  41014a:	lods   eax,DWORD PTR ds:[esi]
  41014b:	shl    DWORD PTR [ecx-0x21],0x94
  41014f:	mov    ecx,0xa6958e0c
  410154:	dec    esp
  410155:	scas   eax,DWORD PTR es:[edi]
  410156:	and    bh,BYTE PTR [eax]
  410158:	sub    ebx,ebp
  41015a:	pusha  
  41015b:	bound  edx,QWORD PTR [edx+0x33]
  41015e:	cs (bad) 
  410160:	neg    esi
  410162:	mov    BYTE PTR [eax],ch
  410164:	fldlg2 
  410166:	loope  0x4100f2
  410168:	cs push eax
  41016a:	sbb    ebp,DWORD PTR [esi]
  41016c:	inc    esp
  41016d:	hlt    
  41016e:	push   esp
  41016f:	stc    
  410170:	jbe    0x410171
  410172:	test   al,0x66
  410174:	aad    0xc6
  410176:	aad    0xfe
  410178:	xchg   ebx,esi
  41017a:	cs push 0xf
  41017d:	stc    
  41017e:	or     dl,BYTE PTR [edi+0x2e89a270]
  410184:	fsubr  QWORD PTR [ebx]
  410186:	scas   eax,DWORD PTR es:[edi]
  410187:	pushf  
  410188:	(bad)  
  410189:	pop    ebp
  41018a:	xchg   ecx,eax
  41018b:	pop    eax
  41018c:	or     dl,BYTE PTR [esi+0x5acab095]
  410192:	xor    al,0x89
  410194:	cmp    eax,0x317d5083
  410199:	mov    al,ds:0xb42fb177
  41019e:	imul   esi,DWORD PTR [edi],0xd
  4101a1:	fldenv [ebx]
  4101a3:	cmp    ecx,DWORD PTR [eax+0x8]
  4101a6:	dec    edi
  4101a7:	loop   0x4101a5
  4101a9:	xor    eax,0x8a66c3a8
  4101ae:	cmp    bh,bl
  4101b0:	sub    eax,0x63b0af3a
  4101b5:	mov    cl,0xcc
  4101b7:	lods   al,BYTE PTR ds:[esi]
  4101b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101b9:	enter  0xf68,0x5d
  4101bd:	inc    esp
  4101be:	mov    dh,0x9c
  4101c0:	data16 js 0x41017d
  4101c3:	rol    BYTE PTR [eax+0x5643ccd9],cl
  4101c9:	xor    eax,ebp
  4101cb:	int    0xdf
  4101cd:	and    dl,BYTE PTR [esi+0x79e0179b]
  4101d3:	ins    BYTE PTR es:[edi],dx
  4101d4:	or     ah,BYTE PTR [edx-0x6c]
  4101d7:	push   esi
  4101d8:	les    edi,FWORD PTR [edi-0x7d41ad12]
  4101de:	mov    edi,0x5854b98a
  4101e3:	xchg   cx,ax
  4101e5:	icebp  
  4101e6:	(bad)  
  4101e9:	or     DWORD PTR [ebp+ebp*4+0x4a001d57],esi
  4101f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101f1:	cmovs  esi,ebx
  4101f4:	iret   
  4101f5:	sub    DWORD PTR [edx],ebp
  4101f7:	popa   
  4101f8:	jmp    0x92e2:0x86d708ed
  4101ff:	jmp    0xd69:0xadd632af
  410206:	mov    al,ds:0x794f13e0
  41020b:	and    dh,BYTE PTR [esi-0x73]
  41020e:	xor    bl,BYTE PTR [edx-0x7f]
  410211:	and    ch,BYTE PTR [edi]
  410213:	dec    esp
  410214:	pop    edx
  410215:	xchg   esi,eax
  410216:	mov    ebx,0x8835d132
  41021b:	inc    eax
  41021c:	jle    0x4101a5
  41021e:	ror    ah,cl
  410220:	push   0xffffffb6
  410222:	push   ecx
  410223:	dec    esp
  410224:	sub    BYTE PTR [ebx+0x60],bh
  410227:	mov    BYTE PTR [edi-0x73],cl
  41022a:	pop    esp
  41022b:	add    DWORD PTR [eiz*2+0x3e3f03c8],ecx
  410232:	adc    dh,bh
  410234:	pop    ebx
  410235:	cmp    eax,eax
  410237:	jle    0x410279
  410239:	lods   al,BYTE PTR ss:[esi]
  41023b:	xor    sp,WORD PTR [esi-0x136f68bf]
  410242:	xor    BYTE PTR [edi-0x31],bl
  410245:	pop    esi
  410246:	int3   
  410247:	imul   edi,DWORD PTR [edi+0x46d6c0b0],0x59653b68
  410251:	pusha  
  410252:	jne    0x41020c
  410254:	mov    dl,0x35
  410256:	cdq    
  410257:	out    dx,eax
  410258:	aad    0x30
  41025a:	and    ebx,DWORD PTR [bp+di+0x65]
  41025f:	jns    0x4101e9
  410261:	add    dh,BYTE PTR [ecx]
  410263:	call   0x5686:0xa1270504
  41026a:	push   ecx
  41026b:	in     eax,0x3e
  41026d:	cmovne edx,ebx
  410270:	xchg   edx,eax
  410271:	mov    es,WORD PTR [ebx+esi*2]
  410274:	push   cs
  410275:	lds    ebx,FWORD PTR [ebx+0x378e8842]
  41027b:	mov    bh,0x8d
  41027d:	mov    eax,0x7c756b7b
  410282:	mov    ds:0xe4fc96a7,eax
  410287:	outs   dx,DWORD PTR ds:[esi]
  410288:	aaa    
  410289:	jmp    0x820dab79
  41028e:	test   eax,0x66b17465
  410293:	out    0x4b,al
  410295:	mov    ebx,0x5bde5fc3
  41029a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41029b:	add    eax,0xa34df14e
  4102a0:	xchg   edx,eax
  4102a1:	in     eax,0x36
  4102a3:	jle    0x410274
  4102a5:	dec    esi
  4102a6:	fild   WORD PTR [eax-0x16]
  4102a9:	lods   al,BYTE PTR ds:[esi]
  4102aa:	cmp    al,0xb9
  4102ac:	mov    WORD PTR [edi-0x6392eaac],?
  4102b2:	imul   edi,ecx,0xb341154c
  4102b8:	jae    0x410325
  4102ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102bb:	dec    ecx
  4102bc:	out    dx,eax
  4102bd:	jns    0x41028e
  4102bf:	jecxz  0x410259
  4102c1:	nop
  4102c2:	dec    ecx
  4102c3:	neg    ecx
  4102c5:	out    dx,al
  4102c6:	adc    al,0xda
  4102c8:	int    0xfa
  4102ca:	inc    edi
  4102cb:	or     edi,DWORD PTR [ebx+0x6]
  4102ce:	adc    BYTE PTR [eax+edi*4+0x23],0xbe
  4102d3:	in     al,dx
  4102d4:	(bad)  
  4102d5:	cmp    DWORD PTR [edi+0x7e505e07],ebx
  4102db:	cmp    eax,0x1383ee44
  4102e0:	das    
  4102e1:	in     eax,dx
  4102e2:	clc    
  4102e3:	js     0x41033f
  4102e5:	test   eax,0x84e17ead
  4102ea:	jecxz  0x410285
  4102ec:	in     al,dx
  4102ed:	nop
  4102ee:	or     al,0x87
  4102f0:	std    
  4102f1:	and    DWORD PTR [edi-0x1a],ecx
  4102f4:	push   sp
  4102f6:	sar    BYTE PTR [ebp-0x4f],0xd0
  4102fa:	and    al,0xca
  4102fc:	ins    BYTE PTR es:[edi],dx
  4102fd:	inc    ebp
  4102fe:	scas   eax,DWORD PTR es:[edi]
  4102ff:	ror    DWORD PTR [ecx-0xa],0x6d
  410303:	inc    ecx
  410304:	push   edi
  410305:	sbb    eax,0x83ba45d0
  41030a:	or     BYTE PTR [ecx],ch
  41030c:	lods   eax,DWORD PTR ds:[esi]
  41030d:	mov    ecx,0x2fab0b37
  410312:	dec    ecx
  410313:	neg    ah
  410315:	jbe    0x41034b
  410317:	and    eax,0x3938a8a8
  41031c:	mov    al,0xce
  41031e:	ret    0x1622
  410321:	xor    ebx,DWORD PTR [ebp-0x5b99bc44]
  410327:	lds    ebp,FWORD PTR [esi-0x75a4fbe1]
  41032d:	and    ebp,DWORD PTR [esi-0x8]
  410330:	cdq    
  410331:	add    DWORD PTR [edx],edi
  410333:	inc    eax
  410334:	pop    esi
  410335:	adc    eax,DWORD PTR [ebp-0x22]
  410338:	gs int 0xa
  41033b:	jmp    0x5a18:0x1903ebd1
  410342:	mov    eax,0x77cfb99b
  410347:	dec    ebp
  410348:	cs popf 
  41034a:	push   ebp
  41034b:	xor    al,0x1e
  41034d:	add    BYTE PTR [edi],ah
  41034f:	test   DWORD PTR [ebp+0x1d],0x88d8dc3b
  410356:	or     DWORD PTR [ecx],edx
  410358:	cmp    dh,BYTE PTR [ecx+0x2793c5f1]
  41035e:	cmc    
  41035f:	push   ds
  410360:	in     eax,dx
  410361:	popf   
  410362:	and    esi,DWORD PTR [esi-0x61]
  410365:	(bad)  
  410366:	xchg   edi,eax
  410367:	mov    ds,WORD PTR [esi-0x44c3bc9e]
  41036d:	retf   
  41036e:	in     eax,0xf9
  410370:	add    DWORD PTR [edi-0x18],ebx
  410373:	in     al,0x9d
  410375:	mov    ch,0x10
  410377:	ror    DWORD PTR [ebx-0x21a95101],1
  41037d:	daa    
  41037e:	adc    edx,DWORD PTR [edx-0x1]
  410381:	cmp    BYTE PTR [ecx-0x2e],dh
  410384:	fdivr  QWORD PTR [esi+0x3]
  410387:	rcl    al,cl
  410389:	fisttp QWORD PTR [ecx]
  41038b:	into   
  41038c:	sbb    BYTE PTR [ebx],dl
  41038e:	shl    BYTE PTR [ebp+0x67],1
  410391:	das    
  410392:	out    dx,eax
  410393:	into   
  410394:	bound  eax,QWORD PTR [edx-0x68]
  410397:	imul   ecx,ecx,0x4119d873
  41039d:	push   ebx
  41039e:	xchg   edi,eax
  41039f:	sahf   
  4103a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103a1:	mul    DWORD PTR [ebx+esi*2+0x2623fb01]
  4103a8:	gs xor eax,0xc2b5f613
  4103ae:	mov    dh,BYTE PTR [eax-0x78c3ef75]
  4103b4:	inc    ebx
  4103b5:	add    eax,0xef13f100
  4103ba:	push   0xffffff84
  4103bc:	xor    al,0x44
  4103be:	jae    0x410414
  4103c0:	inc    esi
  4103c1:	jae    0x41035d
  4103c3:	shl    DWORD PTR [esi-0x35],0x92
  4103c7:	xchg   BYTE PTR [ecx],al
  4103c9:	mov    ah,0xc2
  4103cb:	mov    esp,DWORD PTR [esi+0x38]
  4103ce:	out    0x71,eax
  4103d0:	gs hlt 
  4103d2:	sbb    ch,dh
  4103d4:	sbb    dl,dh
  4103d6:	pop    es
  4103d7:	push   eax
  4103d8:	push   ss
  4103d9:	ret    0x59fb
  4103dc:	ret    0xb19e
  4103df:	mov    ch,0x1b
  4103e1:	and    edx,esp
  4103e3:	pop    esi
  4103e4:	xchg   DWORD PTR [esi*4-0x2f9d0e5c],eax
  4103eb:	sti    
  4103ec:	les    ebx,FWORD PTR [edx-0x21102c8]
  4103f2:	mov    ch,0xe5
  4103f4:	or     esp,0x851bb5dd
  4103fa:	scas   eax,DWORD PTR es:[edi]
  4103fb:	dec    ebx
  4103fc:	mov    es,edx
  4103fe:	jo     0x4103be
  410400:	mov    ds:0x66b767fb,eax
  410405:	pop    edi
  410406:	ret    
  410407:	xor    eax,0xbdfb8d45
  41040c:	xchg   edi,eax
  41040d:	test   al,0x5
  41040f:	mov    ah,0xcf
  410411:	dec    esi
  410412:	sub    bl,BYTE PTR [esi+0x8]
  410415:	mov    ss,WORD PTR [edi+ebx*4+0x40]
  410419:	pop    es
  41041a:	loope  0x410418
  41041c:	sub    al,0xd9
  41041e:	(bad)  
  41041f:	push   ds
  410420:	and    BYTE PTR [ebx-0x6835b152],bl
  410426:	mov    es,eax
  410428:	iret   
  410429:	out    0x1d,eax
  41042b:	add    al,0x99
  41042d:	add    BYTE PTR [edi],al
  41042f:	mov    ds:0xc9555bcf,eax
  410434:	popa   
  410435:	cmp    eax,0xb0857322
  41043a:	mov    ebp,0x595ea99b
  41043f:	test   eax,0xd13d9866
  410444:	outs   dx,BYTE PTR ds:[esi]
  410445:	mov    cl,0x41
  410447:	jmp    0xd1790695
  41044c:	cld    
  41044d:	push   0x8cc52d2b
  410452:	add    DWORD PTR [edx-0x68],esi
  410455:	mov    ds:0x5c132d6,al
  41045a:	ins    BYTE PTR es:[edi],dx
  41045b:	jg     0x41043e
  41045d:	or     ebp,DWORD PTR [ecx-0x51]
  410460:	jg     0x410409
  410462:	xor    al,0xab
  410464:	adc    eax,DWORD PTR [edi+edx*8]
  410467:	adc    al,0xd6
  410469:	stos   DWORD PTR es:[edi],eax
  41046a:	and    DWORD PTR [edx-0x1e1d79b2],esi
  410470:	mov    BYTE PTR [ebp-0x15909e60],ch
  410476:	scas   eax,DWORD PTR es:[edi]
  410477:	je     0x41040c
  410479:	hlt    
  41047a:	ficomp DWORD PTR [edi]
  41047c:	dec    ebp
  41047d:	out    0xb3,eax
  41047f:	push   ds
  410480:	sub    DWORD PTR [esi+0x4b],ebx
  410483:	inc    ebx
  410485:	nop
  410486:	in     eax,dx
  410487:	xor    edi,esp
  410489:	cmp    eax,0xc2ed9728
  41048e:	jmp    0x4104dd
  410490:	mov    WORD PTR [ebx],gs
  410492:	cmp    ah,BYTE PTR [eax]
  410494:	dec    edx
  410495:	mov    DWORD PTR [ebp+0x4922605],esp
  41049b:	mov    esp,0x341a565b
  4104a0:	adc    bl,bh
  4104a2:	mov    al,0x23
  4104a4:	das    
  4104a5:	in     al,dx
  4104a6:	addr16 inc esp
  4104a8:	je     0x41047c
  4104aa:	hlt    
  4104ab:	xchg   ebp,eax
  4104ac:	xchg   edi,eax
  4104ad:	data16 sbb ch,BYTE PTR [ebx+0x11]
  4104b1:	push   ebx
  4104b2:	xor    DWORD PTR [edi],eax
  4104b4:	fsub   QWORD PTR [edi]
  4104b6:	dec    ebp
  4104b7:	cli    
  4104b8:	cmp    dh,BYTE PTR [edx+0x64f0400c]
  4104be:	imul   edx,DWORD PTR [ebx-0x68],0x45
  4104c2:	hlt    
  4104c3:	test   al,0xdb
  4104c5:	mov    ds:0xc8aaac72,eax
  4104ca:	fidiv  DWORD PTR ds:0x93ebbbe4
  4104d0:	hlt    
  4104d1:	or     DWORD PTR [edx+0x3dd1e33b],ebx
  4104d7:	pop    ebx
  4104d8:	cmp    ch,dl
  4104da:	mov    cl,bl
  4104dc:	push   eax
  4104dd:	push   eax
  4104de:	pop    eax
  4104df:	sub    al,0x48
  4104e1:	or     ebx,DWORD PTR [ecx+0x473bd35e]
  4104e7:	repz rol DWORD PTR [edx],cl
  4104ea:	ror    DWORD PTR [ebx],cl
  4104ec:	adc    ecx,DWORD PTR [edx]
  4104ee:	loope  0x41048f
  4104f0:	jne    0x4104b7
  4104f2:	je     0x41047c
  4104f4:	xchg   ecx,eax
  4104f5:	inc    ebx
  4104f6:	ins    BYTE PTR es:[edi],dx
  4104f7:	jmp    0x8d03c99
  4104fc:	rcl    DWORD PTR [ebx-0x27],0xef
  410500:	addr16 out dx,al
  410502:	xchg   BYTE PTR [ebx],dh
  410504:	lahf   
  410505:	mov    ah,0x49
  410507:	add    BYTE PTR [eax+eiz*4],0x3f
  41050b:	lods   al,BYTE PTR ds:[esi]
  41050c:	xor    ah,BYTE PTR [esi-0x3c]
  41050f:	xchg   BYTE PTR [edx-0x33],cl
  410512:	cmp    edi,DWORD PTR [edx+0x7a]
  410515:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  410517:	lods   eax,DWORD PTR ds:[esi]
  410518:	shr    al,cl
  41051a:	dec    ebp
  41051b:	jae    0x410552
  41051d:	ret    0x5694
  410520:	shl    DWORD PTR [ecx-0x2c],cl
  410523:	xor    eax,0xaba8303a
  410528:	and    ah,BYTE PTR [ebx+0x2883dbec]
  41052e:	ret    0xf6e4
  410531:	xor    eax,0x11bdc304
  410536:	mov    ds:0x18a5eeb7,al
  41053b:	(bad)  
  41053c:	je     0x41055c
  41053e:	jmp    0xfb4f:0xf144d856
  410545:	push   0xd110debb
  41054a:	and    eax,edx
  41054c:	or     BYTE PTR [ebp-0x2901f623],bh
  410552:	lock cmp DWORD PTR [edx-0x3ea33275],ebp
  410559:	lea    ecx,[ebp-0x2]
  41055c:	nop
  41055d:	faddp  st(2),st
  41055f:	(bad)  
  410561:	push   cs
  410562:	sub    BYTE PTR [ecx],dl
  410564:	cmp    eax,0xfe37ee60
  410569:	ja     0x410515
  41056b:	and    al,0x80
  41056d:	or     eax,0x911d914
  410572:	mov    bl,0xa9
  410574:	and    al,0xf6
  410576:	leave  
  410577:	mov    ch,0x94
  410579:	ins    DWORD PTR es:[edi],dx
  41057a:	retf   0xc34
  41057d:	mov    esi,0xf9e2b597
  410582:	inc    ecx
  410583:	sub    al,0x3d
  410585:	xchg   DWORD PTR [edx-0x1c],ecx
  410588:	cs mov bl,0x5d
  41058b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41058c:	xor    BYTE PTR [edi+0x6b3b6162],dh
  410592:	add    dl,BYTE PTR [edi]
  410594:	mov    edx,eax
  410596:	(bad)  
  410597:	fistp  DWORD PTR [edi-0x61]
  41059a:	addr16 aad 0x9
  41059d:	push   ebp
  41059e:	and    al,BYTE PTR [eax+0x67e6eacf]
  4105a4:	scas   eax,DWORD PTR es:[edi]
  4105a5:	call   0x49d1f282
  4105aa:	inc    edi
  4105ab:	mov    WORD PTR [esi-0x2d],gs
  4105ae:	repnz clc 
  4105b0:	lods   al,BYTE PTR ds:[esi]
  4105b1:	aaa    
  4105b2:	xor    ebx,ecx
  4105b4:	(bad)  
  4105b5:	cli    
  4105b6:	xchg   edi,eax
  4105b7:	rol    BYTE PTR [esi],1
  4105b9:	and    al,0xb4
  4105bb:	cmp    dl,BYTE PTR [edi-0x652a7deb]
  4105c1:	and    BYTE PTR [esi-0x7b],bh
  4105c4:	shl    esp,1
  4105c6:	lods   al,BYTE PTR ds:[esi]
  4105c7:	das    
  4105c8:	mov    dl,0x9d
  4105ca:	push   0xffffffaa
  4105cc:	sub    eax,DWORD PTR [esp+ecx*2-0x2a855300]
  4105d3:	pop    ebp
  4105d4:	jmp    0xfe7ac646
  4105d9:	dec    ecx
  4105da:	retf   
  4105db:	out    dx,eax
  4105dc:	std    
  4105dd:	rcl    DWORD PTR [edx+eax*2],1
  4105e0:	mov    edx,DWORD PTR [ecx+0x72]
  4105e3:	cdq    
  4105e4:	sub    DWORD PTR [edx-0x20564c90],0xb955a70c
  4105ee:	jae    0x4105ff
  4105f0:	sbb    dh,dh
  4105f2:	fwait
  4105f3:	xor    bl,BYTE PTR [ebp+0x5d]
  4105f6:	xchg   DWORD PTR [ecx-0x29],edx
  4105f9:	sbb    DWORD PTR [ecx-0x7fc64266],esi
  4105ff:	(bad)  
  410600:	das    
  410601:	fs pop ebp
  410603:	clc    
  410604:	repz push es
  410606:	push   eax
  410607:	push   ss
  410608:	sbb    ah,al
  41060a:	sub    DWORD PTR [esi-0x2d],eax
  41060d:	and    ebx,DWORD PTR [edi]
  41060f:	dec    esi
  410610:	icebp  
  410611:	(bad)
  410615:	xor    al,BYTE PTR ds:0xd7a1109
  41061b:	fsub   QWORD PTR [edx-0x72]
  41061e:	xor    bl,BYTE PTR [esi-0x9]
  410621:	in     eax,dx
  410622:	sbb    eax,0xcaaa271e
  410627:	xor    al,0x84
  410629:	mov    ah,0x2a
  41062b:	jmp    0x41068e
  41062d:	cli    
  41062e:	mov    dh,0x20
  410630:	sbb    DWORD PTR [edi],ecx
  410632:	cli    
  410633:	in     eax,0x9c
  410635:	adc    eax,DWORD PTR [edi-0x74]
  410638:	fisub  WORD PTR [eax+0x67]
  41063b:	push   eax
  41063c:	or     eax,ecx
  41063e:	into   
  41063f:	test   al,0xb8
  410641:	jge    0x410603
  410643:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410644:	jo     0x410689
  410646:	push   eax
  410647:	fwait
  410648:	sti    
  410649:	arpl   WORD PTR [edx+0x37],si
  41064c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41064d:	loop   0x4106c5
  41064f:	cli    
  410650:	pop    edx
  410651:	test   eax,0x6b0835c5
  410656:	mov    al,0x7c
  410658:	inc    esp
  410659:	adc    DWORD PTR [eax],ebp
  41065b:	mov    edi,0xd80919b2
  410660:	mov    ebx,DWORD PTR [edi+ebp*4-0x13391447]
  410667:	sub    DWORD PTR [edx-0x3afe81af],eax
  41066d:	and    ebp,DWORD PTR [ebx+0x4ccc62e3]
  410673:	cmp    BYTE PTR [ecx],bl
  410675:	lds    esp,FWORD PTR [ecx-0x37]
  410678:	je     0x410631
  41067a:	dec    esp
  41067b:	setp   BYTE PTR [ebx+edi*2]
  41067f:	(bad)  
  410680:	cmp    BYTE PTR [ebx+0x3f],bh
  410683:	rol    DWORD PTR [edx+0x2cf6ed3],1
  410689:	(bad)  
  41068a:	jecxz  0x410652
  41068c:	and    eax,esp
  41068e:	imul   ecx,DWORD PTR [edi+0xf],0xd42179ba
  410695:	and    DWORD PTR [ebp+esi*2+0x3b],esp
  410699:	inc    ebp
  41069a:	xchg   al,dl
  41069c:	into   
  41069d:	inc    esp
  41069e:	loope  0x4106b7
  4106a0:	scas   al,BYTE PTR es:[edi]
  4106a1:	push   esi
  4106a2:	std    
  4106a3:	xor    eax,0xffc1fb7f
  4106a8:	(bad)  
  4106a9:	out    dx,al
  4106aa:	add    esi,DWORD PTR [edi]
  4106ac:	pop    edi
  4106ad:	nop
  4106ae:	ins    DWORD PTR es:[edi],dx
  4106af:	dec    esi
  4106b0:	lods   eax,DWORD PTR ds:[esi]
  4106b1:	fnstcw WORD PTR [ebx+0x1a]
  4106b4:	and    ebx,DWORD PTR [ebp-0x4ee30ca7]
  4106ba:	mov    ah,0x3a
  4106bc:	rol    BYTE PTR [ebp+esi*2+0x33],cl
  4106c0:	push   cs
  4106c1:	in     al,0x41
  4106c3:	jl     0x41072f
  4106c5:	dec    edi
  4106c6:	mov    edx,0xf1662f1d
  4106cb:	push   ebx
  4106cc:	mov    eax,ds:0xb0058d97
  4106d1:	xor    BYTE PTR [ecx+edi*4],0x62
  4106d5:	push   ds
  4106d6:	jne    0x41072e
  4106d8:	add    bh,bh
  4106da:	pop    ds
  4106db:	add    ebx,ebp
  4106dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106de:	test   eax,0xf7615560
  4106e3:	mov    bl,0x34
  4106e5:	sahf   
  4106e6:	jl     0x410681
  4106e8:	jmp    0xbf20:0xdf4ddce1
  4106ef:	adc    esp,0x2942ef2b
  4106f5:	fcomip st,st(5)
  4106f7:	enter  0xb69a,0xac
  4106fb:	jg     0x410691
  4106fd:	ss mov edx,ss
  410700:	fisub  WORD PTR [eax+eiz*2+0x39]
  410704:	cmp    BYTE PTR [ebp-0x3e],bl
  410707:	dec    esi
  410708:	sbb    ch,BYTE PTR gs:[ebp-0x5719202d]
  41070f:	mov    esi,0x440b2458
  410714:	jg     0x410733
  410716:	stc    
  410717:	xchg   ecx,eax
  410718:	jp     0x4106d5
  41071a:	xchg   ecx,eax
  41071b:	inc    esp
  41071c:	sub    eax,0x2b065791
  410721:	sbb    eax,0x5f7e7dca
  410726:	jae    0x410739
  410728:	sub    DWORD PTR [edx+0x9a904ae],ebx
  41072e:	xor    DWORD PTR [ebp+0x63],edx
  410731:	adc    DWORD PTR [ecx+0x1246303d],ebx
  410737:	call   0x55aeb469
  41073c:	lock fisub DWORD PTR [ecx+0x43]
  410740:	popa   
  410741:	test   al,0x5a
  410743:	ds dec eax
  410745:	jmp    0x189add42
  41074a:	bound  ebx,QWORD PTR [ebp+0x78]
  41074d:	sbb    eax,0x1da7f25
  410752:	or     eax,0x716c7076
  410757:	out    0x5f,eax
  410759:	loopne 0x4107b7
  41075b:	stos   DWORD PTR es:[edi],eax
  41075c:	stos   BYTE PTR es:[edi],al
  41075d:	and    BYTE PTR [ebx],dl
  41075f:	lds    eax,FWORD PTR [ecx]
  410761:	cs icebp 
  410763:	sub    BYTE PTR [ebx-0x295b2db3],al
  410769:	das    
  41076a:	cmp    ah,BYTE PTR [edx-0x65a1916f]
  410770:	and    eax,0xa7bc7b75
  410775:	shr    edx,1
  410777:	out    dx,eax
  410778:	in     al,dx
  410779:	pop    edx
  41077a:	mov    edi,0x6bd48e38
  41077f:	cli    
  410780:	adc    al,0xfb
  410782:	mov    dh,0xd7
  410784:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410785:	ret    
  410786:	pusha  
  410787:	test   eax,0xe98d2705
  41078c:	mov    ss,WORD PTR [eax-0x20c353be]
  410792:	call   DWORD PTR [ecx]
  410794:	push   esp
  410795:	test   al,0x39
  410797:	xchg   esi,eax
  410798:	jp     0x410806
  41079a:	add    bh,BYTE PTR [eax]
  41079c:	in     eax,0x51
  41079e:	fs in  al,0xb2
  4107a1:	mov    dh,0xb7
  4107a3:	mov    eax,ds:0x9f7b96b5
  4107a8:	mov    edi,0x173a2643
  4107ad:	push   ss
  4107ae:	and    ecx,DWORD PTR [edi]
  4107b0:	push   es
  4107b1:	out    dx,al
  4107b2:	fwait
  4107b3:	jp     0x4107c6
  4107b5:	mov    ebp,0xadd1b353
  4107ba:	pop    ebx
  4107bb:	je     0x410769
  4107bd:	fdiv   DWORD PTR [ebp-0x5b]
  4107c0:	adc    DWORD PTR [edx+0x640cf56d],esi
  4107c6:	inc    esp
  4107c7:	lods   al,BYTE PTR ds:[esi]
  4107c8:	or     DWORD PTR [ebx*8-0x45ab73af],ebp
  4107cf:	leave  
  4107d0:	mov    ecx,ds
  4107d2:	adc    eax,0x8ed27887
  4107d7:	mov    ds:0x8bc79c57,al
  4107dc:	fnstsw WORD PTR [eax]
  4107de:	daa    
  4107df:	cmp    bl,ch
  4107e1:	call   0x27ea:0x7c16eefe
  4107e8:	push   ebp
  4107e9:	cmp    edx,esp
  4107eb:	dec    eax
  4107ec:	mov    ah,BYTE PTR [ebx-0x64]
  4107ef:	cmc    
  4107f0:	dec    edi
  4107f1:	mov    edx,DWORD PTR [edx+0x60]
  4107f4:	js     0x410791
  4107f6:	sub    al,0x6a
  4107f8:	jle    0x410842
  4107fa:	push   esp
  4107fb:	stc    
  4107fc:	fcomp  DWORD PTR ds:0x95808b31
  410802:	fistp  WORD PTR [edi+0x7f415d58]
  410808:	jne    0x41079b
  41080a:	shr    BYTE PTR [esi],0x13
  41080d:	mov    eax,edx
  41080f:	mov    ah,0xa
  410811:	pop    ss
  410812:	add    al,0x6d
  410814:	sub    cl,dl
  410816:	mov    dh,0xa9
  410818:	mul    BYTE PTR [ecx+ebx*4+0x68eb36ab]
  41081f:	mov    gs,ecx
  410821:	add    eax,0x64e01d1c
  410826:	cmp    eax,0x6a3f8f3a
  41082b:	out    0x10,eax
  41082d:	ret    0x95e4
  410830:	pop    eax
  410831:	repnz cmc 
  410833:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410834:	mov    bh,ch
  410836:	enter  0xb22a,0x51
  41083a:	pushf  
  41083b:	mov    cl,0xe0
  41083d:	push   esi
  41083e:	cmp    al,0x8c
  410840:	jecxz  0x41088d
  410842:	inc    edx
  410843:	add    al,0x5d
  410845:	sbb    eax,0x6a4ef9e4
  41084a:	add    al,0xa9
  41084c:	adc    eax,0x849efb67
  410851:	pop    ebx
  410852:	daa    
  410853:	outs   dx,BYTE PTR ds:[esi]
  410854:	cmp    dl,BYTE PTR [esi+0x3b148630]
  41085a:	ds inc esp
  41085c:	icebp  
  41085d:	imul   esi,DWORD PTR [ebx],0xa502fd85
  410863:	inc    edi
  410864:	pop    ecx
  410865:	xor    BYTE PTR [ecx-0xc],dl
  410868:	(bad)  
  41086a:	inc    ebp
  41086b:	jns    0x41081a
  41086d:	dec    ebx
  41086e:	aam    0xb8
  410870:	(bad)  
  410871:	jp     0x410862
  410873:	cmc    
  410874:	mov    ebx,0x816cce1d
  410879:	jmp    0x4108c4
  41087b:	or     BYTE PTR [edx],ch
  41087d:	mov    edx,0x2bb85cb9
  410882:	inc    esi
  410883:	js     0x4108da
  410885:	pop    DWORD PTR [edx-0x3f]
  410888:	retf   0x31af
  41088b:	jbe    0x4108a9
  41088d:	jmp    0xc1b1e4e
  410892:	rcr    DWORD PTR [edx+0x2a],cl
  410895:	adc    eax,0xeea93ccd
  41089a:	xchg   ecx,eax
  41089b:	(bad)  
  41089c:	jo     0x41089c
  41089e:	pop    edi
  41089f:	out    0x90,al
  4108a1:	dec    esi
  4108a2:	push   0x61a334f7
  4108a7:	cs push ds
  4108a9:	cld    
  4108aa:	add    al,al
  4108ac:	imul   ecx,DWORD PTR [esi+0x6b1ed0e8],0xe
  4108b3:	pop    edi
  4108b4:	mov    bl,0xd0
  4108b6:	or     BYTE PTR [edi-0x57],dl
  4108b9:	inc    edx
  4108ba:	in     eax,0x48
  4108bc:	ds jne 0x4108e6
  4108bf:	call   0x1b4fb047
  4108c4:	jno    0x41092e
  4108c6:	shr    BYTE PTR [edi+ecx*4+0x3864213c],cl
  4108cd:	cs mov bh,0xd
  4108d0:	mov    dh,0x7d
  4108d2:	sbb    dl,0xc1
  4108d5:	lahf   
  4108d6:	sub    DWORD PTR [ecx+edi*4+0x401c7555],ebx
  4108dd:	scas   eax,DWORD PTR es:[edi]
  4108de:	lahf   
  4108df:	jmp    0x9ca1:0x2bba89d1
  4108e6:	test   al,0xe7
  4108e8:	xchg   ebp,eax
  4108e9:	(bad)  
  4108ea:	fisubr DWORD PTR [ebp+0x192498a6]
  4108f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108f1:	fs ret 
  4108f3:	clc    
  4108f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108f5:	adc    edx,edi
  4108f7:	cmp    al,0x9c
  4108f9:	mov    dh,0x9d
  4108fb:	hlt    
  4108fc:	jo     0x410929
  4108fe:	dec    edi
  4108ff:	out    dx,eax
  410900:	inc    ebp
  410901:	sbb    al,0x3b
  410903:	pop    ss
  410904:	lea    edi,[edi+0x225de75a]
  41090a:	mov    dh,0x93
  41090c:	jl     0x410890
  41090e:	add    al,0xec
  410910:	jp     0x4108d4
  410912:	adc    cl,0x44
  410915:	cmpps  xmm5,XMMWORD PTR [esi+edi*8-0x11],0x55
  41091b:	mov    esi,?
  41091d:	rcr    DWORD PTR [eax],1
  41091f:	in     eax,0x83
  410921:	mov    cl,0x9a
  410923:	cmp    bl,bh
  410925:	into   
  410926:	xor    DWORD PTR [edi-0x6120b36a],edx
  41092c:	inc    ebx
  41092d:	out    0x7e,al
  41092f:	test   bl,ah
  410931:	popf   
  410932:	imul   eax,DWORD PTR [esi+0x7c4366c],0x8704ff27
  41093c:	push   es
  41093d:	ins    DWORD PTR es:[edi],dx
  41093e:	int    0xdd
  410940:	push   esp
  410941:	and    al,0x4d
  410943:	std    
  410944:	(bad)  
  410945:	mov    ah,0x6f
  410947:	cli    
  410948:	inc    BYTE PTR ds:0x485f8508
  41094e:	aad    0xa4
  410950:	mov    dl,dh
  410952:	push   ecx
  410953:	mov    ch,0x37
  410955:	out    dx,eax
  410956:	pusha  
  410957:	shl    DWORD PTR [eax-0x67d125ca],0xfc
  41095e:	mov    bh,0xe8
  410960:	cdq    
  410961:	dec    ebx
  410962:	test   al,0xc5
  410964:	and    eax,0xa063639c
  410969:	sar    BYTE PTR [esi],0x89
  41096c:	push   ds
  41096d:	call   FWORD PTR [ebp-0x7bb9c285]
  410973:	push   esp
  410974:	scas   al,BYTE PTR es:[edi]
  410975:	jp     0x410978
  410977:	xor    eax,0xa3323e3a
  41097c:	xlat   BYTE PTR ds:[ebx]
  41097d:	outs   dx,BYTE PTR ds:[esi]
  41097e:	stc    
  41097f:	call   0x4ae81b56
  410984:	bound  ecx,QWORD PTR ds:0xafe96a2
  41098a:	adc    DWORD PTR [ebx-0x6],esp
  41098d:	adc    eax,0x613c2961
  410992:	stos   BYTE PTR es:[edi],al
  410993:	adc    BYTE PTR [esi-0x67a766f3],0xaf
  41099a:	and    ebx,ecx
  41099c:	add    DWORD PTR [si+0xffd],0x60e6e686
  4109a5:	ins    BYTE PTR es:[edi],dx
  4109a6:	mov    dh,ah
  4109a8:	jmp    0xc28e8777
  4109ad:	and    ch,bl
  4109af:	inc    ebx
  4109b0:	dec    ecx
  4109b1:	sti    
  4109b2:	pop    ss
  4109b3:	ja     0x4109e0
  4109b5:	push   ebx
  4109b6:	fs mov ebp,0xe5814d15
  4109bc:	or     BYTE PTR [ecx+0x151a1f33],ch
  4109c2:	lods   eax,DWORD PTR ds:[esi]
  4109c3:	test   eax,0xfe61e493
  4109c8:	in     eax,dx
  4109c9:	jno    0x410a48
  4109cb:	jns    0x410a3e
  4109cd:	fmul   DWORD PTR [edi]
  4109cf:	ja     0x4109f7
  4109d1:	fcom   DWORD PTR [ecx+0x4786f8b1]
  4109d7:	or     al,0x26
  4109d9:	xor    al,0xa4
  4109db:	das    
  4109dc:	pop    edx
  4109dd:	sub    edi,DWORD PTR [ebp-0x749a7d2f]
  4109e3:	and    esi,DWORD PTR [esp+edi*1+0x5d1360d1]
  4109ea:	std    
  4109eb:	xchg   edi,eax
  4109ec:	repnz push 0xffffffac
  4109ef:	dec    ebx
  4109f0:	xor    BYTE PTR [edx],0x24
  4109f3:	xor    BYTE PTR [edi-0x6002a15c],ah
  4109f9:	(bad)  
  4109fa:	(bad)  
  4109fb:	imul   eax,DWORD PTR [esi],0x588c9b86
  410a01:	sub    DWORD PTR ds:0x5cea88d3,edx
  410a07:	sti    
  410a08:	or     bh,BYTE PTR [edx-0x4c]
  410a0b:	cmp    BYTE PTR [ebx],dh
  410a0d:	aaa    
  410a0e:	and    al,0x48
  410a10:	mov    dl,0x76
  410a12:	pusha  
  410a13:	jecxz  0x4109e6
  410a15:	leave  
  410a16:	mov    ch,0x7f
  410a18:	shr    BYTE PTR [esp+eax*8],1
  410a1b:	sbb    BYTE PTR [edi+edi*8+0x5b5a3663],al
  410a22:	xchg   ebp,eax
  410a23:	aad    0x97
  410a25:	imul   esp,edx,0x79
  410a28:	fwait
  410a29:	jb     0x4109d5
  410a2b:	inc    esi
  410a2c:	dec    esi
  410a2d:	scas   al,BYTE PTR es:[edi]
  410a2e:	sbb    DWORD PTR [eax+0x7b],edx
  410a31:	ret    
  410a32:	dec    eax
  410a33:	fs jns 0x410a78
  410a36:	sbb    dh,BYTE PTR [esi+0x7ee0f2ef]
  410a3c:	push   es
  410a3d:	push   ebx
  410a3e:	stos   BYTE PTR es:[edi],al
  410a3f:	sbb    al,0xce
  410a41:	pop    edi
  410a42:	pop    ebx
  410a43:	outs   dx,DWORD PTR ds:[esi]
  410a44:	jns    0x4109c9
  410a46:	xor    eax,0x73a1fec
  410a4b:	es sahf 
  410a4d:	xchg   DWORD PTR [ecx],esp
  410a4f:	sbb    DWORD PTR [esi],esi
  410a51:	fbstp  TBYTE PTR [edx-0x75acd052]
  410a57:	push   ecx
  410a58:	js     0x410a22
  410a5a:	inc    ecx
  410a5b:	jne    0x410a9a
  410a5d:	sub    BYTE PTR [ecx+eax*4],0x1b
  410a61:	and    bl,dl
  410a63:	scas   al,BYTE PTR es:[edi]
  410a64:	outs   dx,DWORD PTR ds:[esi]
  410a65:	push   edi
  410a66:	push   eax
  410a67:	cmc    
  410a68:	shl    BYTE PTR [edx+0x5d2fd61d],cl
  410a6e:	test   DWORD PTR [ebx],edx
  410a70:	jns    0x410a55
  410a72:	xor    ah,dh
  410a74:	xor    DWORD PTR [eax],eax
  410a76:	add    al,dl
  410a78:	aaa    
  410a79:	pop    ebx
  410a7a:	call   0xa14abfab
  410a7f:	stc    
  410a80:	mov    ebx,0x200dbf60
  410a85:	fwait
  410a86:	pop    esi
  410a87:	int    0xe2
  410a89:	rcr    DWORD PTR [ebx+0x24],cl
  410a8c:	fimul  DWORD PTR [edx]
  410a8e:	pop    esi
  410a8f:	dec    ebx
  410a90:	xor    DWORD PTR [esi-0x2ff47ce],ebx
  410a96:	je     0x410a96
  410a98:	jnp    0x410aee
  410a9a:	ret    0x205e
  410a9d:	outs   dx,DWORD PTR ds:[esi]
  410a9e:	mov    ds:0xa43b2064,al
  410aa3:	stos   DWORD PTR es:[edi],eax
  410aa4:	stos   BYTE PTR es:[edi],al
  410aa5:	mov    esi,0x32dc3258
  410aaa:	adc    eax,0x2623e974
  410aaf:	push   ebx
  410ab0:	or     ecx,DWORD PTR [edx]
  410ab2:	mov    eax,ds:0x3102852a
  410ab7:	test   al,0xec
  410ab9:	xchg   ebp,eax
  410aba:	xchg   DWORD PTR [edx-0x35551429],eax
  410ac0:	lods   eax,DWORD PTR ds:[esi]
  410ac1:	push   0x89510060
  410ac6:	cmp    edx,edx
  410ac8:	outs   dx,BYTE PTR ds:[esi]
  410ac9:	test   al,0x85
  410acb:	adc    edx,ebx
  410acd:	pop    ebx
  410ace:	outs   dx,BYTE PTR ds:[esi]
  410acf:	lea    eax,[edi+0x20e4024f]
  410ad5:	dec    edx
  410ad6:	out    dx,eax
  410ad7:	(bad)  
  410ad8:	sbb    edi,DWORD PTR [edi]
  410ada:	daa    
  410adb:	xor    al,0x93
  410add:	aad    0x90
  410adf:	das    
  410ae0:	call   0xfc294e8
  410ae5:	test   al,0xbd
  410ae7:	jns    0x410b50
  410ae9:	add    BYTE PTR [ebx+0x2083ce68],ch
  410aef:	rol    BYTE PTR [edx],cl
  410af1:	adc    dh,bh
  410af3:	loop   0x410b46
  410af5:	dec    esi
  410af6:	iret   
  410af7:	sub    esi,DWORD PTR [eax-0x41d07763]
  410afd:	(bad)  
  410afe:	je     0x410b5e
  410b00:	fst    st(5)
  410b02:	dec    edx
  410b03:	jl     0x410ac0
  410b05:	mov    WORD PTR [ecx+0x1e21332d],?
  410b0b:	ja     0x410b77
  410b0d:	mov    ds:0xf177989d,al
  410b12:	pop    esi
  410b13:	repnz in eax,dx
  410b15:	mov    ds:0x359f8839,eax
  410b1a:	clc    
  410b1b:	cmp    edx,DWORD PTR [edx]
  410b1d:	push   ss
  410b1e:	mov    eax,ds:0x45e7ed37
  410b23:	adc    DWORD PTR [edx+0x729e4dbc],ebp
  410b29:	fsubr  QWORD PTR [esp+eiz*4-0x12]
  410b2d:	stos   BYTE PTR es:[edi],al
  410b2e:	push   ebx
  410b2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b30:	dec    edx
  410b31:	xor    DWORD PTR [edi+0x3f],0x7a
  410b35:	mov    ebx,0x8f3eeb1d
  410b3a:	add    dl,BYTE PTR [ecx+0x1b]
  410b3d:	pop    esp
  410b3e:	sub    DWORD PTR [edi+0x4c],0x20285088
  410b45:	pusha  
  410b46:	rol    ebp,cl
  410b48:	enter  0xd42,0x53
  410b4c:	cmc    
  410b4d:	cmc    
  410b4e:	jle    0x410adb
  410b50:	cli    
  410b51:	sbb    al,0x3d
  410b53:	mov    ss,esi
  410b55:	sub    eax,0x8e97b583
  410b5a:	mul    BYTE PTR [ecx-0x30]
  410b5d:	aas    
  410b5e:	mov    ebx,0xbda31ba4
  410b63:	repz leave 
  410b65:	stc    
  410b66:	pop    es
  410b67:	lea    eax,[eax]
  410b69:	jge    0x410b33
  410b6b:	push   es
  410b6c:	pushf  
  410b6d:	xchg   esp,eax
  410b6e:	loope  0x410afb
  410b70:	test   ah,dl
  410b72:	pmulhuw mm7,QWORD PTR ds:0x1a95cfeb
  410b79:	mov    bl,0xf5
  410b7b:	or     al,0x5b
  410b7d:	(bad)  
  410b7e:	jmp    0x28a1:0x183db086
  410b85:	mov    ds:0x22f0245d,eax
  410b8a:	xor    esp,DWORD PTR [edi-0x7c524d9a]
  410b90:	adc    eax,0x13f1a6a6
  410b95:	xor    DWORD PTR [ecx-0x36bc4ed5],edi
  410b9b:	(bad)  
  410b9d:	jle    0x410bd9
  410b9f:	or     dh,0x74
  410ba2:	int    0x71
  410ba4:	adc    eax,0x5bac1b05
  410ba9:	pop    ebp
  410baa:	ds clc 
  410bac:	js     0x410b98
  410bae:	lods   al,BYTE PTR ds:[esi]
  410baf:	mov    es,edi
  410bb1:	jb     0x410b74
  410bb3:	fidiv  WORD PTR [edi+0x6bca8a91]
  410bb9:	mov    cl,0x1a
  410bbb:	xchg   esi,eax
  410bbc:	pop    eax
  410bbd:	mov    esp,fs
  410bbf:	loope  0x410c2c
  410bc1:	dec    esi
  410bc2:	lds    ecx,FWORD PTR [esi-0x79]
  410bc5:	int    0x6d
  410bc7:	je     0x410b97
  410bc9:	xchg   ebp,eax
  410bca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410bcb:	xchg   BYTE PTR [edx-0x7d7e3f70],ah
  410bd1:	(bad)  
  410bd2:	jecxz  0x410b91
  410bd4:	scas   al,BYTE PTR es:[edi]
  410bd5:	cmc    
  410bd6:	and    ah,BYTE PTR [ecx+0x4056de73]
  410bdc:	fisttp WORD PTR [eax]
  410bde:	rcl    BYTE PTR [ebp+edi*4-0x5dd98ff1],1
  410be5:	adc    ebx,edx
  410be7:	add    al,0x2d
  410be9:	repnz mov esi,0x5e5baea1
  410bef:	imul   ebx,DWORD PTR [ebx+0x1],0xffffffaa
  410bf3:	mov    ebp,0x95e9a6c0
  410bf8:	dec    eax
  410bf9:	mov    al,ds:0xf52523e7
  410bfe:	mov    edi,0x63962bf
  410c03:	repz fmul QWORD PTR [edx-0x1f9e99f3]
  410c0a:	mov    esi,0x4c1024e1
  410c0f:	bound  edi,QWORD PTR [ebx+0x15]
  410c12:	and    eax,0xa25afc6b
  410c17:	sbb    edx,DWORD PTR [ebp-0x2a]
  410c1a:	cmp    al,0x37
  410c1c:	fdivp  st(0),st
  410c1e:	sbb    ebp,DWORD PTR [ebp+0x304b5ffc]
  410c24:	rol    DWORD PTR [ebp+0x48c09637],cl
  410c2a:	push   0x2b
  410c2c:	mov    ebx,0xd4b41499
  410c31:	pusha  
  410c32:	mov    al,0x86
  410c34:	cli    
  410c35:	iret   
  410c36:	repnz pop es
  410c38:	jg     0x410bce
  410c3a:	sub    edi,DWORD PTR [eax]
  410c3c:	fsubr  DWORD PTR [edi]
  410c3e:	pop    DWORD PTR [ebp-0x1c8ed3aa]
  410c44:	pop    si
  410c46:	or     eax,0x607fc2ed
  410c4b:	sbb    ah,BYTE PTR [edi+0x1121c123]
  410c51:	dec    ebp
  410c52:	pop    ds
  410c53:	push   ss
  410c54:	push   ds
  410c55:	fiadd  WORD PTR [edx-0x56]
  410c58:	mov    dl,0x3a
  410c5a:	sahf   
  410c5b:	leave  
  410c5c:	mov    esp,0x166b707d
  410c61:	rcr    BYTE PTR [ecx],0x95
  410c64:	cmp    eax,0x2408a734
  410c69:	out    0xf3,eax
  410c6b:	xor    DWORD PTR [edx+0x15],ecx
  410c6e:	mov    bl,BYTE PTR [ecx]
  410c70:	pop    edx
  410c71:	stos   BYTE PTR es:[edi],al
  410c72:	pusha  
  410c73:	cli    
  410c74:	popa   
  410c75:	push   ecx
  410c76:	xor    eax,0x3d9be21c
  410c7b:	adc    dl,BYTE PTR [edi+0x818a609]
  410c81:	or     DWORD PTR [ebx],eax
  410c83:	sub    edi,DWORD PTR [esp+eax*8]
  410c86:	pop    ebx
  410c87:	jo     0x410cd0
  410c89:	sub    DWORD PTR [esi+0x4561d8e4],ebp
  410c8f:	mov    bh,0x16
  410c91:	jp     0x410cf6
  410c93:	cli    
  410c94:	mov    esp,0x94ec454f
  410c99:	inc    cx
  410c9b:	dec    ecx
  410c9c:	mov    cl,cl
  410c9e:	or     eax,0x742fa0e
  410ca3:	data16 (bad) ds:0xba316de3
  410caa:	push   bp
  410cac:	ss lds esp,FWORD PTR ds:[esi+0x6d214eae]
  410cb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cb5:	mov    esi,DWORD PTR [edx+eiz*4+0x3840e400]
  410cbc:	cli    
  410cbd:	arpl   ax,dx
  410cbf:	jg     0x410cd4
  410cc1:	push   0x4f
  410cc3:	push   edx
  410cc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cc5:	xchg   ebx,eax
  410cc6:	xchg   ebp,eax
  410cc7:	dec    edi
  410cc8:	dec    esi
  410cc9:	sbb    DWORD PTR [edi-0xa2489eb],edx
  410ccf:	ret    
  410cd0:	test   ebx,ecx
  410cd2:	and    eax,DWORD PTR [edx+0x65]
  410cd5:	int    0x75
  410cd7:	cmp    eax,0x37b7de55
  410cdc:	adc    BYTE PTR [edi],dh
  410cde:	xor    BYTE PTR [esi],0xbc
  410ce1:	mov    ecx,0x2b638039
  410ce6:	into   
  410ce7:	xor    ch,ch
  410ce9:	scas   eax,DWORD PTR es:[edi]
  410cea:	test   BYTE PTR [ecx],0x84
  410ced:	jg     0x410d12
  410cef:	mov    ch,0xe6
  410cf1:	popa   
  410cf2:	shl    BYTE PTR [ecx+esi*1-0x94cea7a],0x9e
  410cfa:	mov    ds:0xc463e725,eax
  410cff:	rcl    DWORD PTR [ebp+0x5c],0x70
  410d03:	(bad)  [ecx-0x251ca70a]
  410d09:	not    ch
  410d0b:	and    DWORD PTR [ebp*1+0x69880e8b],ebx
  410d12:	call   0x7c3088bc
  410d17:	cmp    bh,BYTE PTR [ebx+0x67]
  410d1a:	mov    edi,0x811382f1
  410d1f:	jne    0x410d6c
  410d21:	call   0xa6f:0xfbdca24a
  410d28:	mov    ecx,0xc0f84495
  410d2d:	pushf  
  410d2e:	aad    0xbb
  410d30:	test   DWORD PTR [ecx-0x3375bd9b],eax
  410d36:	add    al,0x4e
  410d38:	cwde   
  410d39:	addr16 push ebp
  410d3b:	add    ecx,DWORD PTR [edx-0x36]
  410d3e:	imul   BYTE PTR [ebx+0x25]
  410d41:	mov    bl,0x6d
  410d43:	call   0x1ecce31c
  410d48:	mov    dh,0xc7
  410d4a:	jmp    0xd79b7a78
  410d4f:	into   
  410d50:	sbb    edx,DWORD PTR [ebx]
  410d52:	mov    cl,0x56
  410d54:	in     al,dx
  410d55:	sub    ah,BYTE PTR [ecx-0xb]
  410d58:	cmc    
  410d59:	mov    ds:0x353bace0,al
  410d5e:	je     0x410cec
  410d60:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  410d62:	fcmovnbe st,st(1)
  410d64:	add    eax,0xa9ba0024
  410d69:	aas    
  410d6a:	and    DWORD PTR [ebp-0xf],edx
  410d6d:	shr    DWORD PTR [edx-0x55],0xd3
  410d71:	rcl    BYTE PTR [ecx+0x41f86bb4],0x8f
  410d78:	call   0x6ae2:0xeaec5e9e
  410d7f:	sahf   
  410d80:	jl     0x410de4
  410d82:	jno    0x410d45
  410d84:	jne    0x410d62
  410d86:	fst    DWORD PTR [eax-0x53]
  410d89:	leave  
  410d8a:	arpl   WORD PTR [edi+esi*4-0x768e3a34],dx
  410d91:	jbe    0x410db3
  410d93:	push   edi
  410d94:	xchg   ebx,eax
  410d95:	fs sub ax,0x3def
  410d9a:	sub    eax,0x7084514a
  410d9f:	mov    ah,0xc3
  410da1:	(bad)  
  410da2:	xchg   esi,eax
  410da3:	jns    0x410dd8
  410da5:	push   0xffffffd3
  410da7:	int    0xd2
  410da9:	adc    eax,0x7eb1cd2e
  410dae:	or     ebx,DWORD PTR [eax+0x21]
  410db1:	shr    BYTE PTR [esi-0x68a72c54],0x2d
  410db8:	add    BYTE PTR [ebp+eiz*4-0x1847820],ah
  410dbf:	sub    dl,bh
  410dc1:	test   DWORD PTR [edi+0x6b],ebx
  410dc4:	loopne 0x410de8
  410dc6:	sti    
  410dc7:	jp     0x410dfb
  410dc9:	adc    eax,0xf5e2ae8d
  410dce:	call   0x2064923a
  410dd3:	dec    eax
  410dd4:	neg    BYTE PTR [esp+eax*2+0x313f0bd2]
  410ddb:	add    ebp,esi
  410ddd:	sbb    DWORD PTR ds:0x8ea13ecc,ebx
  410de3:	leave  
  410de4:	push   cs
  410de5:	ins    BYTE PTR es:[edi],dx
  410de6:	loop   0x410db8
  410de8:	cs xchg edi,eax
  410dea:	cld    
  410deb:	out    0xa,al
  410ded:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410dee:	pop    ebx
  410def:	shr    BYTE PTR [eax-0x19dce62d],1
  410df5:	xlat   BYTE PTR ds:[ebx]
  410df6:	pop    esi
  410df7:	minps  xmm6,xmm5
  410dfa:	js     0x410e59
  410dfc:	push   edi
  410dfd:	cmc    
  410dfe:	ds mov esp,0x8198ba91
  410e04:	sti    
  410e05:	std    
  410e06:	sub    al,0x5
  410e08:	ss sti 
  410e0a:	add    DWORD PTR [edx+0x2],ebp
  410e0d:	ret    0xcd75
  410e10:	fs sbb al,0x54
  410e13:	xchg   ebp,eax
  410e14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e15:	sbb    DWORD PTR [esi],esi
  410e17:	sbb    eax,0x995a243b
  410e1c:	and    DWORD PTR [esi+0x35fd787e],0x40
  410e23:	shl    BYTE PTR [edx-0x286b7723],1
  410e29:	shl    BYTE PTR [edx+0x15],cl
  410e2c:	leave  
  410e2d:	adc    esp,DWORD PTR [ebp+0x66adb4e8]
  410e33:	loopne 0x410e22
  410e35:	aam    0x5
  410e37:	sbb    edi,DWORD PTR [edx-0x7b]
  410e3a:	lahf   
  410e3b:	jno    0x410eaf
  410e3d:	push   edi
  410e3e:	(bad)  
  410e3f:	fld    DWORD PTR [edx-0x655a99c6]
  410e45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e46:	push   ss
  410e47:	sub    eax,0x92c9a1d2
  410e4c:	inc    ecx
  410e4d:	fdivr  DWORD PTR [eax+edx*4+0x135d055a]
  410e54:	out    dx,al
  410e55:	jns    0x410e5a
  410e57:	fs data16 in al,dx
  410e5a:	sbb    bl,ch
  410e5c:	jp     0x410ea4
  410e5e:	icebp  
  410e5f:	cmp    dh,BYTE PTR [ebx]
  410e61:	sbb    eax,0x7e749fa3
  410e66:	out    dx,eax
  410e67:	add    eax,0x84a64684
  410e6c:	icebp  
  410e6d:	inc    ebx
  410e6e:	fist   WORD PTR [esp+edi*1-0x18]
  410e72:	mov    bl,0x3d
  410e74:	out    dx,eax
  410e75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e76:	mul    DWORD PTR [ecx-0x7d]
  410e79:	xor    bh,ch
  410e7b:	ret    
  410e7c:	cmp    DWORD PTR [ecx-0x340a166b],esi
  410e82:	adc    bl,BYTE PTR [eax+edi*2]
  410e85:	push   ebx
  410e86:	adc    BYTE PTR [edx+0x1eea3ed7],ch
  410e8c:	jg     0x410e9c
  410e8e:	loope  0x410e38
  410e90:	xchg   esi,eax
  410e91:	push   esi
  410e92:	js     0x410f0d
  410e94:	or     eax,0x226f0c37
  410e99:	rcl    DWORD PTR [ecx-0x330523a9],0x1a
  410ea0:	or     BYTE PTR [eax+0x3],0x44
  410ea4:	outs   dx,DWORD PTR ds:[esi]
  410ea5:	push   ebx
  410ea6:	mov    edi,0xa6090a36
  410eab:	pop    eax
  410eac:	xor    BYTE PTR [eax+eax*1-0x482b5e04],0xfe
  410eb4:	push   ss
  410eb5:	mov    dh,BYTE PTR [edx]
  410eb7:	inc    ebp
  410eb8:	inc    eax
  410eb9:	inc    ecx
  410eba:	mov    ds:0x9880a6cb,al
  410ebf:	xchg   ecx,eax
  410ec0:	neg    DWORD PTR [eax-0x709f16cf]
  410ec6:	cli    
  410ec7:	xchg   cl,bl
  410ec9:	or     al,0xd0
  410ecb:	scas   eax,DWORD PTR es:[edi]
  410ecc:	jo     0x410f3e
  410ece:	loopne 0x410f47
  410ed0:	bound  ebx,QWORD PTR ds:0x3500d3ce
  410ed6:	or     al,0x1d
  410ed8:	ret    0x7e9
  410edb:	pushf  
  410edc:	mov    ecx,0xef01adb7
  410ee1:	jle    0x410f0e
  410ee3:	jnp    0x410f3b
  410ee5:	daa    
  410ee6:	push   ss
  410ee7:	data16 (bad) 
  410ee9:	test   DWORD PTR [ebx-0x6e4824c7],0x3f8a9627
  410ef3:	add    BYTE PTR [edi],0xcf
  410ef6:	push   ds
  410ef7:	pop    esp
  410ef8:	pusha  
  410ef9:	ficom  WORD PTR [edx+0x7ceab2c]
  410eff:	bound  esp,QWORD PTR [eax]
  410f01:	mov    dl,0xa8
  410f03:	xor    eax,0xdc73e1c0
  410f08:	(bad)  
  410f0a:	push   eax
  410f0b:	fimul  WORD PTR [ebp-0x33]
  410f0e:	mov    cl,ah
  410f10:	mov    ds:0x5b2370c3,eax
  410f15:	inc    ebx
  410f16:	add    BYTE PTR [edx+ebx*8],dh
  410f19:	and    ebp,DWORD PTR [ecx+0x5e]
  410f1c:	inc    ebp
  410f1d:	repz mov ds:0x259a4e73,al
  410f23:	xor    DWORD PTR [esi+0x2e],esi
  410f26:	jmp    0xdba0:0x4af9e8cb
  410f2d:	imul   esp,DWORD PTR [esi-0x78],0x7735233e
  410f34:	jns    0x410f50
  410f36:	push   ebx
  410f37:	stc    
  410f38:	push   ecx
  410f39:	xor    esi,DWORD PTR [esi-0x77112c92]
  410f3f:	jnp    0x410f84
  410f41:	pop    ss
  410f42:	pop    edi
  410f43:	and    cl,BYTE PTR [esi+0x46a8a35]
  410f49:	scas   al,BYTE PTR es:[edi]
  410f4a:	fdiv   DWORD PTR [esp+edi*2]
  410f4d:	cmp    DWORD PTR [esp+ecx*2+0x72b65600],esp
  410f54:	call   0x11b15fbb
  410f59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f5a:	and    al,0xe7
  410f5c:	jae    0x410f10
  410f5e:	outs   dx,DWORD PTR ds:[esi]
  410f5f:	std    
  410f60:	mov    edx,0xfa65ae7a
  410f65:	addr16 mov ch,0x3e
  410f68:	mov    eax,0x8526851e
  410f6d:	or     DWORD PTR [ecx+0x2c],esi
  410f70:	mov    WORD PTR [ecx-0x40],fs
  410f73:	or     DWORD PTR [edx+0x76],edx
  410f76:	mov    ebp,0x9b6c492d
  410f7b:	lea    esi,[edx+0x5154acbe]
  410f81:	and    ebx,esi
  410f83:	test   eax,0xf80286a
  410f88:	call   0x18445cfe
  410f8d:	fucompp 
  410f8f:	lahf   
  410f90:	hlt    
  410f91:	stc    
  410f92:	es aad 0x37
  410f95:	xchg   edi,eax
  410f96:	pop    ebx
  410f97:	fstp   DWORD PTR [ecx-0x4c]
  410f9a:	and    BYTE PTR [ebp+0x59e4234f],bh
  410fa0:	mov    esp,0xfc21f5c7
  410fa5:	push   eax
  410fa6:	mov    es,esp
  410fa8:	xlat   BYTE PTR ds:[ebx]
  410fa9:	call   0x17efa8e7
  410fae:	fsub   DWORD PTR [edi+ecx*8+0x7a]
  410fb2:	pop    edi
  410fb3:	call   0x77f1eae8
  410fb8:	adc    ah,0xed
  410fbb:	or     eax,DWORD PTR [eax-0x6a6e1559]
  410fc1:	cdq    
  410fc2:	add    BYTE PTR [edx],0xa1
  410fc5:	pop    es
  410fc6:	xor    DWORD PTR [edx+0x2f3cff54],ebx
  410fcc:	mov    WORD PTR ds:0x61148e47,ss
  410fd2:	jns    0x411009
  410fd4:	xchg   edi,eax
  410fd5:	retf   0xf4e1
  410fd8:	xchg   edi,eax
  410fd9:	push   edi
  410fda:	add    al,0x35
  410fdc:	xlat   BYTE PTR ds:[ebx]
  410fdd:	cmp    eax,0x1f649d77
  410fe2:	jnp    0x410fcf
  410fe4:	sub    bl,BYTE PTR [ebx]
  410fe6:	ja     0x410f93
  410fe8:	pop    ecx
  410fe9:	loopne 0x410fef
  410feb:	xchg   edi,eax
  410fec:	mov    cl,0x7f
  410fee:	jge    0x410f86
  410ff0:	iret   
  410ff1:	inc    esi
  410ff2:	push   edx
  410ff3:	xchg   ecx,eax
  410ff4:	pop    esp
  410ff5:	inc    eax
  410ff6:	mul    BYTE PTR [esi+0x5f]
  410ff9:	mov    ecx,0xac2107dc
  410ffe:	sbb    al,0xb
  411000:	sub    eax,DWORD PTR [ecx]
  411002:	loopne 0x411021
  411004:	jge    0x410fcb
  411006:	pop    edi
  411007:	ficom  WORD PTR [eax-0x9]
  41100a:	pusha  
  41100b:	pop    ebp
  41100c:	adc    DWORD PTR [edx+0x78ea65c2],0x61
  411013:	mov    al,0xe3
  411015:	and    BYTE PTR [eax-0x17],0xbe
  411019:	jmp    0x411035
  41101b:	fistp  DWORD PTR [ebx-0x29]
  41101e:	jne    0x410fd5
  411020:	dec    edx
  411021:	mov    BYTE PTR [ecx],ah
  411023:	loop   0x410fab
  411025:	jle    0x411065
  411027:	fmul   QWORD PTR [ebp+0x2515eae1]
  41102e:	(bad)  
  411031:	into   
  411032:	hlt    
  411033:	xor    eax,0xd22503bf
  411038:	int    0xaf
  41103a:	cdq    
  41103b:	loop   0x410fe9
  41103d:	or     al,0x68
  41103f:	hlt    
  411040:	dec    esp
  411041:	and    al,BYTE PTR [edi+edx*1]
  411044:	inc    esp
  411045:	mov    esi,0xef085ec9
  41104a:	inc    edx
  41104b:	mov    dl,0xe2
  41104d:	xchg   esi,eax
  41104e:	mov    ss,WORD PTR [edi]
  411050:	fsubrp st(3),st
  411052:	dec    ecx
  411053:	sbb    esp,DWORD PTR [edi-0x58]
  411056:	and    al,0xf2
  411058:	lods   al,BYTE PTR ds:[esi]
  411059:	mov    cl,0xd
  41105b:	mov    al,ds:0x239ad0e5
  411060:	xchg   ebx,eax
  411061:	push   0x55332db9
  411066:	aad    0xe2
  411068:	mov    ebx,0x5b8c402
  41106d:	nop
  41106e:	jb     0x4110c5
  411070:	and    ebx,ebp
  411072:	sub    DWORD PTR [edi-0x80],0xb5a413f2
  411079:	sbb    DWORD PTR [esi+0x27],edi
  41107c:	cld    
  41107d:	push   0xffffffec
  41107f:	test   al,0x0
  411081:	cmp    bl,ch
  411083:	inc    edi
  411084:	popa   
  411085:	dec    esp
  411086:	pusha  
  411087:	ret    0xc4f0
  41108a:	inc    DWORD PTR [eax]
  41108c:	inc    edi
  41108d:	dec    esp
  41108e:	lods   eax,DWORD PTR ds:[esi]
  41108f:	push   esp
  411090:	add    BYTE PTR [eax-0x12],ch
  411093:	xchg   esp,eax
  411094:	out    dx,eax
  411095:	inc    ebx
  411096:	xor    DWORD PTR [ecx-0x679a7649],ecx
  41109c:	mov    al,0xd7
  41109e:	mov    esi,0xc938d567
  4110a3:	ins    BYTE PTR es:[edi],dx
  4110a4:	jns    0x4110d8
  4110a6:	sub    al,0x4f
  4110a8:	jne    0x411033
  4110aa:	dec    esp
  4110ab:	fidivr WORD PTR [eax]
  4110ad:	jp     0x41111b
  4110af:	jmp    0x411034
  4110b1:	jbe    0x4110eb
  4110b3:	mov    eax,0x633438dc
  4110b8:	mov    bl,0x44
  4110ba:	retf   0xa60b
  4110bd:	mov    al,ds:0x861b8dbf
  4110c2:	mov    ah,0xc
  4110c4:	mov    ds:0x5a24770d,al
  4110c9:	xchg   ah,bl
  4110cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110cc:	pusha  
  4110cd:	scas   al,BYTE PTR es:[edi]
  4110ce:	lea    ebx,[edx+eiz*4+0x64]
  4110d2:	(bad)  
  4110d3:	addr16 mov al,0x79
  4110d6:	shr    ch,0xf6
  4110d9:	inc    ebx
  4110da:	add    DWORD PTR [edi],ebp
  4110dc:	mov    dh,0x54
  4110de:	mov    ecx,0x6478743c
  4110e3:	push   esp
  4110e4:	lods   eax,DWORD PTR ds:[esi]
  4110e5:	lea    edi,[edi]
  4110e7:	data16 mov ah,0xcd
  4110ea:	int    0x85
  4110ec:	push   esi
  4110ed:	test   eax,0x1e7d1872
  4110f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110f3:	or     bh,0x70
  4110f6:	ret    
  4110f7:	add    al,0x47
  4110fa:	sbb    al,0xde
  4110fc:	xor    WORD PTR [edi],0xffc0
  411100:	lahf   
  411101:	daa    
  411102:	fsubr  DWORD PTR [ebx+0x1b]
  411105:	push   ebx
  411106:	dec    ebp
  411107:	dec    ebp
  411108:	nop
  411109:	loopne 0x41113a
  41110b:	fmul   QWORD PTR ds:0x7de9b177
  411111:	and    BYTE PTR [esi],bh
  411113:	hlt    
  411114:	xchg   edx,eax
  411115:	outs   dx,DWORD PTR ds:[esi]
  411116:	stos   DWORD PTR es:[edi],eax
  411117:	std    
  411118:	add    esi,DWORD PTR [eax+0x7ff7fb4e]
  41111e:	repnz mov eax,ds:0xbdd87317
  411124:	mov    cs,ebp
  411126:	fwait
  411127:	arpl   WORD PTR [ebx+0x6ae91a85],ax
  41112d:	sbb    DWORD PTR [ecx],0xb
  411130:	and    eax,0xa324fd10
  411135:	imul   ebp,DWORD PTR [edi+0x4],0x96d16de2
  41113c:	js     0x411137
  41113e:	cs jmp 0x4110e5
  411141:	mov    al,0xc3
  411143:	cmp    al,0xb0
  411145:	sub    cl,BYTE PTR [ecx+0x26b117cc]
  41114b:	sahf   
  41114c:	push   cs
  41114d:	sar    bh,0x91
  411150:	sub    eax,0x2af836ab
  411155:	inc    eax
  411156:	mov    ebx,0x9d7a8336
  41115b:	mov    esp,0xa0513848
  411160:	xchg   esp,ebp
  411162:	jl     0x411189
  411164:	xchg   ebx,eax
  411165:	cs mov edi,0x8a96af77
  41116b:	(bad)  
  41116d:	nop
  41116e:	xchg   edi,eax
  41116f:	ret    0xf100
  411172:	sub    BYTE PTR [eax+0x74],bh
  411175:	into   
  411176:	adc    DWORD PTR [esi-0x3],ebx
  411179:	add    edi,0x7e
  41117c:	xchg   DWORD PTR [esi+ebx*4+0x48],esp
  411180:	cmp    al,0xb8
  411182:	mov    bl,BYTE PTR [esi]
  411184:	dec    esp
  411185:	pop    ss
  411186:	mov    dl,0x8e
  411188:	adc    esi,DWORD PTR [ecx-0x3c]
  41118b:	scas   eax,DWORD PTR es:[edi]
  41118c:	xor    al,0x14
  41118e:	sar    BYTE PTR [ebx],0xaa
  411191:	ss xchg esp,eax
  411193:	sub    eax,edx
  411195:	cwde   
  411196:	pop    eax
  411197:	push   edi
  411198:	pusha  
  411199:	and    eax,0x460ed504
  41119e:	shl    DWORD PTR [ebp+ebp*4+0x7caaa294],cl
  4111a5:	xor    BYTE PTR [eax+0x67],bh
  4111a8:	call   DWORD PTR [edx-0x729de980]
  4111ae:	dec    esi
  4111af:	in     eax,dx
  4111b0:	cs dec esi
  4111b2:	mov    edi,0x5f5520f0
  4111b7:	sbb    eax,0x4a772f75
  4111bc:	dec    ecx
  4111bd:	sbb    bh,bl
  4111bf:	das    
  4111c0:	scas   eax,DWORD PTR es:[edi]
  4111c1:	call   0xb312ea7f
  4111c6:	fist   DWORD PTR [eax-0x6b177eda]
  4111cc:	test   al,0xeb
  4111ce:	and    eax,0xa4e71fd
  4111d3:	dec    ebx
  4111d4:	add    al,0xd4
  4111d6:	iret   
  4111d7:	sbb    eax,DWORD PTR [eax]
  4111d9:	nop
  4111da:	popf   
  4111db:	repz adc eax,0x3ffe2ce6
  4111e1:	lea    ebp,[ebp-0x6]
  4111e4:	add    al,0xd9
  4111e6:	jmp    0xbb6caa2f
  4111eb:	inc    ebp
  4111ec:	push   ecx
  4111ed:	cmp    BYTE PTR [ecx+ebx*4+0x69],al
  4111f1:	shr    esp,1
  4111f3:	out    0x20,eax
  4111f5:	xchg   DWORD PTR [eax],ebp
  4111f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111f8:	cmp    esi,DWORD PTR [edx-0x6c9b2936]
  4111fe:	aaa    
  4111ff:	test   al,0x13
  411201:	push   cs
  411202:	jmp    0xbd92f27b
  411207:	leave  
  411208:	jbe    0x4111bb
  41120a:	repz sbb DWORD PTR [edx],edi
  41120d:	mov    ?,WORD PTR [eax-0x15618ee8]
  411213:	xchg   BYTE PTR [ebp+0x4e2f2330],dl
  411219:	mov    ds:0xc26eaea1,al
  41121e:	add    eax,0xd672855e
  411223:	mov    ebp,0xdf8d771b
  411228:	mov    bl,0x89
  41122a:	ret    0xd717
  41122d:	loopne 0x4112a8
  41122f:	inc    edx
  411230:	jecxz  0x4111cb
  411232:	bound  esp,QWORD PTR [ebx+0xd]
  411235:	(bad)  
  411236:	cmp    eax,0xaea0b595
  41123b:	gs hlt 
  41123d:	and    edi,ecx
  41123f:	fsubr  QWORD PTR [edi+edi*2]
  411242:	lods   eax,DWORD PTR ds:[esi]
  411243:	cmp    DWORD PTR [eax+eiz*2+0x22],ebx
  411247:	fisttp QWORD PTR [edx-0x3e]
  41124a:	sub    eax,0x4c5a272f
  41124f:	xor    al,0xa1
  411251:	mov    ds:0xe129e564,eax
  411256:	rcr    BYTE PTR [ebp+0x7],1
  411259:	sbb    cl,ch
  41125b:	dec    esp
  41125c:	rol    BYTE PTR [edi],0xa6
  41125f:	pusha  
  411260:	inc    DWORD PTR [ebx]
  411262:	pusha  
  411263:	xor    BYTE PTR [esi+ecx*4],bh
  411266:	fld    QWORD PTR [esi+0xda9d7d7]
  41126c:	jne    0x411250
  41126e:	(bad)  
  41126f:	sahf   
  411270:	sbb    BYTE PTR [edx+0x1],ch
  411273:	js     0x411201
  411275:	test   BYTE PTR [eax+0x72296b33],dl
  41127b:	xchg   ebp,eax
  41127c:	aas    
  41127d:	iret   
  41127e:	mov    ds:0x613eb7b9,eax
  411283:	pop    edx
  411284:	mov    esi,0x1bf2f18a
  411289:	or     al,al
  41128b:	sub    esi,DWORD PTR [ebp-0x7b]
  41128e:	das    
  41128f:	cmp    DWORD PTR [esi],0x39fca7c3
  411295:	enter  0x912,0xf9
  411299:	push   esi
  41129a:	jbe    0x411302
  41129c:	jb     0x4112d2
  41129e:	lds    edx,FWORD PTR [eax+eiz*8-0x72]
  4112a2:	xor    eax,0x4d23644e
  4112a7:	repz scas al,BYTE PTR es:[edi]
  4112a9:	jae    0x411252
  4112ab:	in     al,dx
  4112ac:	shr    BYTE PTR [ebp-0x3e],0xbb
  4112b0:	mov    ebp,0x8593c347
  4112b5:	adc    DWORD PTR [esp+edx*2],edx
  4112b8:	cdq    
  4112b9:	aad    0xc
  4112bb:	pushf  
  4112bc:	stos   BYTE PTR es:[edi],al
  4112bd:	aad    0xca
  4112bf:	in     al,0x4d
  4112c1:	stos   DWORD PTR es:[edi],eax
  4112c2:	fcomp  DWORD PTR [edx+0x50]
  4112c5:	pop    esi
  4112c6:	mov    BYTE PTR [ebp*2-0x6ac30152],ah
  4112cd:	lods   eax,DWORD PTR ds:[esi]
  4112ce:	add    al,0xb
  4112d0:	pop    ecx
  4112d1:	cdq    
  4112d2:	sub    al,0xed
  4112d4:	mov    db2,ebp
  4112d7:	mov    ds:0xb8e43d39,eax
  4112dc:	out    0xd5,al
  4112de:	jb     0x411296
  4112e0:	adc    ebp,DWORD PTR [esi+0x70]
  4112e3:	fsubr  DWORD PTR [ebp-0x68efdda0]
  4112e9:	pop    edx
  4112ea:	sub    ah,0x97
  4112ed:	scas   eax,DWORD PTR es:[edi]
  4112ee:	sub    al,0x87
  4112f0:	xchg   ebp,eax
  4112f1:	mov    esp,0xf58ad24f
  4112f6:	jnp    0x411299
  4112f8:	push   0xd084a0f5
  4112fd:	jb     0x4112b8
  4112ff:	idiv   bh
  411301:	and    al,BYTE PTR [edx-0x3]
  411304:	int3   
  411305:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411306:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411307:	lahf   
  411308:	test   al,0xdc
  41130a:	push   0x6e
  41130c:	inc    eax
  41130d:	clc    
  41130e:	push   edi
  41130f:	push   cs
  411310:	cmp    eax,0x535c7ebc
  411315:	xor    eax,0xd75c6050
  41131a:	in     eax,dx
  41131b:	enter  0x3323,0x89
  41131f:	das    
  411320:	jno    0x411359
  411322:	fs pop esi
  411324:	and    ah,BYTE PTR [edx-0x17]
  411327:	xchg   edi,eax
  411328:	push   ss
  411329:	adc    al,0x8b
  41132b:	and    ch,BYTE PTR [edi-0x72]
  41132e:	scas   al,BYTE PTR es:[edi]
  41132f:	repnz push cs
  411331:	(bad)  
  411332:	adc    edi,DWORD PTR [esi]
  411334:	pusha  
  411335:	mov    al,ds:0x695bb5a1
  41133a:	or     DWORD PTR [esi+0x4f935920],ebx
  411340:	mov    ebp,es
  411342:	cmp    BYTE PTR [edi-0x66fa4232],dh
  411348:	push   ebp
  411349:	outs   dx,BYTE PTR ds:[esi]
  41134a:	xchg   edi,eax
  41134b:	cmp    al,BYTE PTR [edi]
  41134d:	in     eax,0xec
  41134f:	je     0x41139b
  411351:	call   0xf28d335f
  411356:	mov    edx,0x4f4fdde2
  41135b:	call   0xad36dc90
  411360:	ret    
  411361:	sahf   
  411362:	into   
  411363:	pusha  
  411364:	push   ecx
  411365:	ins    BYTE PTR es:[edi],dx
  411366:	adc    eax,0xd7f2147f
  41136b:	and    BYTE PTR [edx-0x15],al
  41136e:	test   BYTE PTR [ecx],cl
  411370:	aam    0x1
  411372:	out    0xc3,al
  411374:	scas   eax,DWORD PTR es:[edi]
  411375:	in     eax,dx
  411376:	sub    DWORD PTR [edx+0x481e72d],edi
  41137c:	loop   0x4113dd
  41137e:	inc    esi
  41137f:	mov    ds:0xd02de18b,eax
  411384:	(bad)  
  411385:	nop
  411386:	pop    ecx
  411387:	add    al,0x86
  411389:	cli    
  41138a:	(bad)  
  41138b:	int    0xd6
  41138d:	daa    
  41138e:	jge    0x4113ad
  411390:	mov    cl,0x9e
  411392:	(bad)  
  411394:	popa   
  411395:	mov    dh,0x64
  411397:	in     eax,dx
  411398:	das    
  411399:	jne    0x411378
  41139b:	add    eax,0x2de83532
  4113a0:	add    BYTE PTR [edx-0x761416b5],0xc2
  4113a7:	test   DWORD PTR [edi+0x34],edi
  4113aa:	clc    
  4113ab:	and    BYTE PTR [esi],bl
  4113ad:	and    edx,DWORD PTR [eax]
  4113af:	inc    ebp
  4113b0:	mov    ah,BYTE PTR [ebp-0x17]
  4113b3:	ficom  DWORD PTR [eax+0x50]
  4113b6:	cmp    BYTE PTR [edx+0x2a],0x9a
  4113ba:	out    0xff,al
  4113bc:	mov    esp,0x2da30c79
  4113c1:	out    dx,al
  4113c2:	sub    BYTE PTR [edx+0x21854d82],al
  4113c8:	xchg   ebp,ebp
  4113ca:	dec    esi
  4113cb:	(bad)  
  4113cc:	addr16 hlt 
  4113ce:	dec    ecx
  4113cf:	and    al,0x57
  4113d1:	add    ebp,DWORD PTR [edx]
  4113d3:	push   esi
  4113d4:	popa   
  4113d5:	mov    al,0x9f
  4113d7:	fcom   QWORD PTR [edx]
  4113d9:	sahf   
  4113da:	ins    BYTE PTR es:[edi],dx
  4113db:	ds out 0xbe,eax
  4113de:	or     DWORD PTR [esi],ecx
  4113e0:	jmp    0x411384
  4113e2:	test   al,0xf8
  4113e4:	(bad)  
  4113e6:	call   0x50bc:0x2181e545
  4113ed:	(bad)  
  4113ee:	fdiv   st,st(0)
  4113f0:	and    eax,0x1a199f93
  4113f5:	mov    bh,0x47
  4113f7:	(bad)  
  4113f8:	jmp    0x8fce:0x6d7c5a67
  4113ff:	shl    DWORD PTR [edx+0x38],0xa2
  411403:	sti    
  411404:	jecxz  0x411437
  411406:	and    DWORD PTR [esi],edi
  411408:	sbb    DWORD PTR [ebp+0x73],edi
  41140b:	mov    ebp,0x174a05b9
  411410:	inc    ecx
  411411:	loop   0x4113b7
  411413:	dec    esi
  411414:	div    BYTE PTR [ebx-0xfe1c4cd]
  41141a:	imul   esp,DWORD PTR [esi],0xa9ff26c1
  411420:	add    esp,edx
  411422:	pop    ss
  411423:	pop    edi
  411424:	mov    ds:0x64995633,eax
  411429:	push   esi
  41142a:	fidiv  DWORD PTR [esi-0x54]
  41142d:	xlat   BYTE PTR ds:[ebx]
  41142e:	jecxz  0x41142d
  411430:	les    ebx,FWORD PTR [esi+0xb04edb6]
  411436:	mov    dh,0x9f
  411438:	inc    ecx
  411439:	adc    eax,0x460032fa
  41143e:	dec    ebx
  41143f:	and    DWORD PTR [ebx+0x6083b045],esp
  411445:	ins    DWORD PTR es:[edi],dx
  411446:	aad    0x22
  411448:	add    BYTE PTR [ebx+0x76],dl
  41144b:	das    
  41144c:	ss retf 
  41144e:	push   ecx
  41144f:	or     cl,BYTE PTR [bp+si]
  411452:	jp     0x411431
  411454:	cmp    esi,edi
  411456:	sbb    eax,ecx
  411458:	(bad)  
  411459:	or     al,0x76
  41145b:	adc    ah,al
  41145d:	into   
  41145e:	jo     0x411471
  411460:	dec    ecx
  411461:	jmp    0x4114b2
  411463:	jno    0x41141d
  411465:	adc    ebp,esi
  411467:	pop    esp
  411468:	jg     0x4114d1
  41146a:	jns    0x4114ad
  41146c:	mov    dh,0xdb
  41146e:	shl    BYTE PTR [eax-0xa],1
  411471:	mov    dl,0xf2
  411473:	push   cs
  411474:	out    dx,eax
  411475:	(bad)  
  411477:	fisttp QWORD PTR [ebp-0x50331f56]
  41147d:	jb     0x411423
  41147f:	push   0xffffff87
  411481:	push   edx
  411482:	loopne 0x41148a
  411484:	(bad)  
  411485:	fs ins DWORD PTR es:[edi],dx
  411487:	in     al,0x9e
  411489:	xor    eax,0xe2b32704
  41148e:	jge    0x41141b
  411490:	iret   
  411491:	ja     0x41150c
  411493:	sahf   
  411494:	or     al,0xe
  411496:	out    0x15,eax
  411498:	jb     0x411505
  41149a:	scas   eax,DWORD PTR es:[edi]
  41149b:	(bad)  
  41149c:	push   esp
  41149d:	inc    esi
  41149e:	xchg   BYTE PTR [edx],ah
  4114a0:	xor    ah,BYTE PTR [ecx+ecx*4-0x29]
  4114a4:	pop    ss
  4114a5:	ds ins DWORD PTR es:[edi],dx
  4114a7:	jns    0x41151c
  4114a9:	mov    esi,0xef87b8bb
  4114ae:	daa    
  4114af:	stos   BYTE PTR es:[edi],al
  4114b0:	fild   DWORD PTR [ebx+ebp*4+0x18]
  4114b4:	pushw  ss
  4114b6:	add    ebx,DWORD PTR [ebp-0x46e5c033]
  4114bc:	mov    esi,0xcc658be
  4114c1:	xchg   BYTE PTR [eax+0x782faa56],al
  4114c7:	call   0x1d6f:0x9ab8781
  4114ce:	jnp    0x411456
  4114d0:	adc    bh,BYTE PTR [edx+0x10]
  4114d3:	mov    bh,0xc2
  4114d5:	outs   dx,DWORD PTR ds:[esi]
  4114d6:	repnz mov eax,DWORD PTR [eax+0x1cd08eaf]
  4114dd:	inc    esi
  4114de:	sar    esp,1
  4114e0:	call   0xcb5c868f
  4114e5:	aaa    
  4114e6:	fst    QWORD PTR [edx+0x41f3c658]
  4114ec:	or     edx,ebp
  4114ee:	popa   
  4114ef:	or     bl,BYTE PTR [ecx-0x5b]
  4114f2:	into   
  4114f3:	retf   0x960b
  4114f6:	out    0xd,al
  4114f8:	imul   ebx,esp,0xf
  4114fb:	jge    0x4114a7
  4114fd:	(bad)
  411500:	xor    eax,0xb21b89a8
  411505:	(bad)  
  411506:	adc    edx,ecx
  411508:	ds dec eax
  41150a:	shr    DWORD PTR [edx],1
  41150c:	pop    ss
  41150d:	sbb    edx,DWORD PTR [edi-0x7666a59]
  411513:	(bad)  
  411514:	ins    DWORD PTR es:[edi],dx
  411515:	inc    ebp
  411516:	ffreep st(7)
  411518:	mov    al,0xc8
  41151a:	je     0x411523
  41151c:	xor    al,0xd1
  41151e:	call   0xabdf:0xdcb5586e
  411525:	dec    eax
  411526:	inc    esi
  411527:	out    0x63,eax
  411529:	or     al,bh
  41152b:	ins    BYTE PTR es:[edi],dx
  41152c:	std    
  41152d:	int    0xf4
  41152f:	inc    ecx
  411530:	sbb    bh,BYTE PTR [esi+0xf30ce78]
  411536:	imul   esi,DWORD PTR [edi-0x663309b9],0xfffffff5
  41153d:	test   al,0xa5
  41153f:	int3   
  411540:	loope  0x4114f8
  411542:	xchg   ecx,eax
  411543:	sbb    ah,BYTE PTR [eax+0x425e5b0b]
  411549:	mov    WORD PTR [edi],?
  41154b:	pop    ebx
  41154c:	mov    esp,0xec9f1fb6
  411551:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411552:	pusha  
  411553:	loopne 0x41155f
  411555:	into   
  411556:	sbb    al,BYTE PTR [eax]
  411558:	inc    ebp
  411559:	jno    0x411551
  41155b:	enter  0xdc0f,0x41
  41155f:	mul    al
  411561:	mov    dl,0x52
  411563:	jae    0x411583
  411565:	idiv   ah
  411567:	adc    DWORD PTR [ebx+0x750a1d50],eax
  41156d:	mov    bh,0xdf
  41156f:	push   edi
  411570:	test   BYTE PTR [ecx+0x1cbe29c8],0xf4
  411577:	add    dh,BYTE PTR [ecx-0x16650cbc]
  41157d:	jb     0x41152a
  41157f:	and    DWORD PTR [edi+0x578a2a43],esi
  411585:	sbb    DWORD PTR [ebx-0x759a016c],edi
  41158b:	stc    
  41158c:	push   cs
  41158d:	jp     0x411594
  41158f:	inc    edi
  411590:	cmp    ebp,DWORD PTR gs:[edi+esi*1+0x44]
  411595:	jge    0x411538
  411597:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411598:	add    DWORD PTR [ebx+0x77be0f9d],ebx
  41159e:	es out dx,al
  4115a0:	sub    eax,0x553fd96e
  4115a5:	int    0x29
  4115a7:	not    DWORD PTR [ebp-0x9]
  4115aa:	retf   0x65e0
  4115ad:	xor    DWORD PTR [ebx+ebx*1+0x5fe9bf46],ecx
  4115b4:	or     al,0xd4
  4115b6:	lds    ecx,FWORD PTR [edi-0x5a]
  4115b9:	pop    ss
  4115ba:	push   0x373346b
  4115bf:	mov    bl,0x9
  4115c1:	clc    
  4115c2:	sub    ecx,DWORD PTR ds:0x58cd2343
  4115c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115c9:	jae    0x41162b
  4115cb:	or     DWORD PTR [edi-0x7e],edi
  4115ce:	lods   eax,DWORD PTR ds:[esi]
  4115cf:	dec    ebx
  4115d0:	test   BYTE PTR [eax+0x50],dh
  4115d3:	jae    0x4115cf
  4115d5:	pop    es
  4115d6:	adc    BYTE PTR [edx-0x3c],ch
  4115d9:	inc    DWORD PTR [edx-0x5d]
  4115dc:	mul    DWORD PTR [ecx+0x5d]
  4115df:	or     ecx,DWORD PTR [edi+0x6dfe8b5b]
  4115e5:	pop    edx
  4115e6:	add    ch,ch
  4115e8:	pop    ecx
  4115e9:	into   
  4115ea:	pusha  
  4115eb:	out    0xbb,eax
  4115ed:	push   cs
  4115ee:	loopne 0x411668
  4115f0:	dec    DWORD PTR [edx-0x5e384361]
  4115f6:	pop    es
  4115f7:	lahf   
  4115f8:	xchg   edx,eax
  4115f9:	cdq    
  4115fa:	sub    eax,DWORD PTR [edx+0x16043b58]
  411600:	mov    cl,0x68
  411602:	adc    al,0x5a
  411604:	add    DWORD PTR [edx],ecx
  411606:	cs xchg esi,eax
  411608:	pop    ds
  411609:	ror    esp,0x92
  41160c:	test   al,0x83
  41160e:	push   ecx
  41160f:	pop    eax
  411610:	in     al,0xc9
  411612:	mov    ds:0x68407bcf,eax
  411617:	sub    al,0x7
  411619:	add    al,0xb3
  41161b:	lds    esi,FWORD PTR [ebp+ecx*4-0x7c]
  41161f:	int    0x5e
  411621:	dec    edx
  411622:	jo     0x4115b0
  411624:	stos   DWORD PTR es:[edi],eax
  411625:	sub    ebx,edi
  411627:	mov    edi,0x1ca62e99
  41162c:	jae    0x411675
  41162e:	pusha  
  41162f:	sub    dl,ah
  411631:	mov    edx,0xe2871530
  411636:	jne    0x4115ed
  411638:	(bad)  
  41163a:	mov    bl,ch
  41163c:	rol    DWORD PTR [edx],0xc9
  41163f:	dec    ecx
  411640:	outs   dx,DWORD PTR ds:[esi]
  411641:	mul    BYTE PTR [edi]
  411643:	xchg   esi,eax
  411644:	sbb    ebp,DWORD PTR [edi+0x405348ce]
  41164a:	enter  0x83e2,0x37
  41164e:	cdq    
  41164f:	mov    ds:0xa8e0c1c6,al
  411654:	mov    WORD PTR [edx],fs
  411656:	pop    edi
  411658:	mov    bl,0x6e
  41165a:	fs sti 
  41165c:	mov    esi,0xca0c6b54
  411661:	pop    edi
  411662:	sub    eax,0x754c1454
  411667:	scas   eax,DWORD PTR es:[edi]
  411668:	outs   dx,BYTE PTR ds:[esi]
  411669:	adc    BYTE PTR [ecx+0x24e213ee],0xa5
  411670:	add    eax,0x57eab929
  411675:	icebp  
  411676:	xchg   ebx,eax
  411677:	and    al,0xea
  411679:	sbb    BYTE PTR [ebp+0x23],al
  41167c:	and    ebx,DWORD PTR [edx+0x26a28d80]
  411682:	aaa    
  411683:	test   al,0xfb
  411685:	retf   
  411686:	stc    
  411687:	jle    0x7846719d
  41168d:	mov    WORD PTR [edi-0x3f6629f5],ds
  411693:	ret    
  411694:	cmp    al,0xbf
  411696:	push   esp
  411697:	popf   
  411698:	idiv   DWORD PTR [esi+0x19a63ba3]
  41169e:	add    eax,0x879ab733
  4116a3:	dec    edi
  4116a4:	lods   al,BYTE PTR ds:[esi]
  4116a5:	aam    0x9b
  4116a7:	add    edx,DWORD PTR [ebx+0x1ffe595a]
  4116ad:	push   eax
  4116ae:	arpl   ax,sp
  4116b0:	xchg   WORD PTR [edx],cx
  4116b3:	(bad)  
  4116b4:	js     0x41172d
  4116b6:	push   edx
  4116b7:	cli    
  4116b8:	(bad)  
  4116b9:	pusha  
  4116ba:	loop   0x4116a9
  4116bc:	fst    st(7)
  4116be:	mov    al,ds:0x9502de4d
  4116c3:	imul   esi,DWORD PTR [esi],0xffffffb9
  4116c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116c7:	inc    ebx
  4116c8:	dec    ebx
  4116c9:	pop    ecx
  4116ca:	out    dx,eax
  4116cb:	or     ebp,DWORD PTR [ecx-0x51]
  4116ce:	cmp    al,0x5b
  4116d0:	sub    cl,bh
  4116d2:	push   edx
  4116d3:	outs   dx,BYTE PTR ds:[esi]
  4116d4:	aaa    
  4116d5:	jle    0x4116f8
  4116d7:	mov    DWORD PTR [edx-0x16],edi
  4116da:	mov    ss,WORD PTR [edi-0x2c0a0100]
  4116e0:	and    al,0xa
  4116e2:	aad    0x4d
  4116e4:	(bad)  
  4116e5:	into   
  4116e6:	xor    ebp,ebp
  4116e8:	inc    edi
  4116e9:	mov    ds:0x73b92fb7,eax
  4116ee:	push   cs
  4116ef:	retf   
  4116f0:	sbb    edx,DWORD PTR [esi+esi*2]
  4116f3:	fcomp  DWORD PTR [eax]
  4116f5:	repz jl 0x4116fb
  4116f8:	or     esi,eax
  4116fa:	adc    BYTE PTR [edi],0xd7
  4116fd:	push   esi
  4116fe:	pop    ecx
  4116ff:	push   ss
  411700:	jbe    0x4116b8
  411702:	and    edi,edi
  411704:	fsub   DWORD PTR [edx-0x69]
  411707:	scas   eax,DWORD PTR es:[edi]
  411708:	inc    edi
  411709:	add    edi,esi
  41170b:	and    eax,0x1ee0eee
  411710:	xchg   ebp,eax
  411711:	fst    QWORD PTR ds:0x1f97241d
  411717:	mov    bh,0x9e
  41171a:	dec    eax
  41171b:	jo     0x411773
  41171d:	pop    esi
  41171e:	xchg   esp,eax
  41171f:	xchg   edx,eax
  411720:	sbb    edi,esp
  411722:	jbe    0x411737
  411724:	lea    edi,[edx+ebp*1]
  411727:	frstor [edi]
  411729:	pop    ebx
  41172a:	push   es
  41172b:	xchg   ebp,eax
  41172c:	fst    DWORD PTR [ebx+0x1ae227bf]
  411732:	arpl   WORD PTR [edi-0x80],cx
  411735:	add    ebx,DWORD PTR [ebx+esi*2+0x48]
  411739:	mov    dh,BYTE PTR [ebp-0x3d9d5998]
  41173f:	and    eax,0xc63c9d19
  411744:	popa   
  411745:	(bad)  
  411747:	popa   
  411748:	mov    dh,0xe8
  41174a:	jne    0x411727
  41174c:	mov    edi,0xe3b9aecc
  411751:	leave  
  411752:	pop    ebx
  411753:	mov    al,ds:0x30acda7d
  411758:	push   cs
  411759:	scas   eax,DWORD PTR es:[edi]
  41175a:	jmp    0x5cd0096c
  41175f:	add    BYTE PTR [ebp-0x7b6ae911],ch
  411765:	idiv   BYTE PTR [edi+eax*8-0x7]
  411769:	jge    0x4117b0
  41176b:	mov    bl,0xd2
  41176d:	int3   
  41176e:	inc    esi
  41176f:	xlat   BYTE PTR ds:[ebx]
  411770:	sahf   
  411771:	mov    eax,ds:0x6a756aa5
  411776:	pop    edx
  411777:	ss (bad) 
  41177a:	arpl   WORD PTR [esp+edx*2],dx
  41177d:	sbb    DWORD PTR [esi-0x316d238c],0x883c3899
  411787:	aas    
  411788:	jno    0x4117a9
  41178a:	mov    gs,WORD PTR [eax]
  41178c:	ins    BYTE PTR es:[edi],dx
  41178d:	nop
  41178e:	sbb    DWORD PTR [ecx+0x4a],esi
  411791:	adc    ah,BYTE PTR [eax]
  411793:	aaa    
  411794:	xchg   ebx,eax
  411795:	scas   eax,DWORD PTR es:[edi]
  411796:	mov    eax,0x2b499fb6
  41179b:	mov    esp,0x95579d61
  4117a0:	or     ecx,DWORD PTR [edx-0x77cf0a3d]
  4117a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117a7:	xor    DWORD PTR [ecx-0x3d],esi
  4117aa:	pushf  
  4117ab:	add    eax,DWORD PTR [esi+0x448db541]
  4117b1:	(bad)  
  4117b2:	jge    0x411767
  4117b4:	sub    eax,0x39723841
  4117b9:	out    0x5b,al
  4117bb:	or     cl,BYTE PTR [ecx]
  4117bd:	jnp    0x4117fc
  4117bf:	retf   0x1620
  4117c2:	mov    ebx,0xb32b7b5c
  4117c7:	sbb    DWORD PTR [eax+0x76bd15e1],esp
  4117cd:	sbb    BYTE PTR [ecx+0x49],0x48
  4117d1:	jo     0x411836
  4117d3:	xor    eax,0x662b59c1
  4117d8:	enter  0x1ef3,0xb5
  4117dc:	shl    DWORD PTR [edx-0x43e6347f],0x82
  4117e3:	jecxz  0x4117e2
  4117e5:	xor    eax,0x463feb3
  4117ea:	arpl   WORD PTR [edi+ebp*4+0x68],bp
  4117ee:	mov    eax,ds:0x715a8e35
  4117f3:	es aaa 
  4117f5:	pop    edx
  4117f6:	clc    
  4117f7:	out    dx,al
  4117f8:	push   0x48
  4117fa:	loop   0x411855
  4117fc:	sub    DWORD PTR [esi-0xd],ecx
  4117ff:	ins    BYTE PTR es:[edi],dx
  411800:	ret    0xd9e8
  411803:	xor    eax,DWORD PTR [eax+eiz*4+0x6585240c]
  41180a:	add    al,0xb8
  41180c:	mov    ds:0x9860a77d,al
  411812:	ins    DWORD PTR es:[edi],dx
  411813:	mov    ecx,DWORD PTR [ecx+esi*1]
  411816:	ss push cs
  411818:	and    BYTE PTR [esi-0x77694ee9],dh
  41181e:	jmp    0x4117c6
  411820:	cwde   
  411821:	stos   DWORD PTR es:[edi],eax
  411822:	mov    bh,BYTE PTR [esi]
  411824:	jle    0x4117d9
  411826:	xor    eax,0x35915ac
  41182b:	mov    dl,0xf3
  41182d:	fisubr DWORD PTR [ebx+eax*2]
  411830:	sbb    bl,BYTE PTR [edx-0x6342ebc4]
  411836:	dec    ebx
  411837:	pop    esi
  411838:	sub    DWORD PTR [esi-0x5],edx
  41183b:	mov    eax,0x3603568b
  411840:	push   ds
  411841:	addr16 or eax,0x6fd51cb7
  411847:	or     DWORD PTR [eax+0x716a3175],edi
  41184d:	jo     0x4117ee
  41184f:	imul   esp,DWORD PTR [ebx+eiz*1],0x46
  411853:	and    al,0x83
  411855:	mov    esi,DWORD PTR [ebx+0x25]
  411858:	pop    edx
  411859:	lea    esp,[eax+0x202128a]
  41185f:	mov    al,ds:0x373a3a22
  411864:	pop    ebp
  411865:	sti    
  411866:	jae    0x4118cc
  411868:	push   ecx
  411869:	(bad)  
  41186a:	and    dh,BYTE PTR [esi*1-0xfef43ab]
  411871:	and    bl,BYTE PTR [edi+0x6d]
  411874:	pop    ebp
  411875:	xor    BYTE PTR [edi-0x77],bh
  411878:	(bad)  
  411879:	sbb    DWORD PTR [edi-0x3fed8c85],edi
  41187f:	jmp    0xb684:0xffc1a072
  411886:	adc    esi,0x4a6c38a3
  41188c:	mov    DWORD PTR [esp+ecx*8],ebp
  41188f:	mov    bl,0x3e
  411891:	fist   WORD PTR [ebx+0x40]
  411894:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411895:	push   ss
  411896:	lods   al,BYTE PTR ds:[esi]
  411897:	test   eax,0x7ac03bd8
  41189c:	push   ebp
  41189d:	sbb    DWORD PTR [ecx+eax*8-0x4d1b5e2c],ebp
  4118a4:	xchg   esi,eax
  4118a5:	pop    esp
  4118a6:	jle    0x41185c
  4118a8:	xlat   BYTE PTR ds:[ebx]
  4118a9:	xchg   ebp,eax
  4118aa:	sub    eax,0x74838cf3
  4118af:	stc    
  4118b0:	mov    cs,WORD PTR [edx+0x1f5d9833]
  4118b6:	push   ebx
  4118b7:	sahf   
  4118b8:	mov    esp,0x25ebdcaf
  4118bd:	sar    BYTE PTR [ebx-0x77],1
  4118c0:	enter  0x2721,0x89
  4118c4:	repnz fdivr DWORD PTR [ecx-0x1d]
  4118c8:	cmp    BYTE PTR [ecx],ch
  4118ca:	cmc    
  4118cb:	loop   0x4118de
  4118cd:	ins    BYTE PTR es:[edi],dx
  4118ce:	ja     0x411882
  4118d0:	inc    edx
  4118d1:	xchg   esi,eax
  4118d2:	out    0x5,eax
  4118d4:	unpckhps xmm2,XMMWORD PTR [ebx+0x638529de]
  4118db:	lds    ebp,FWORD PTR [ebp+0x37]
  4118de:	sub    ch,cl
  4118e0:	mov    ?,WORD PTR [eax]
  4118e2:	push   es
  4118e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118e4:	lock arpl WORD PTR [ebp+ebx*4+0x66f66543],sp
  4118ec:	je     0x411962
  4118ee:	sbb    eax,0xeafcb4c2
  4118f3:	es lock fdivrp st(7),st
  4118f7:	xlat   BYTE PTR ds:[ebx]
  4118f8:	lods   al,BYTE PTR ds:[esi]
  4118f9:	outs   dx,BYTE PTR ds:[esi]
  4118fa:	js     0x411964
  4118fc:	fisttp WORD PTR [edx-0x45]
  4118ff:	(bad)  
  411900:	das    
  411901:	sbb    al,0x89
  411903:	xchg   DWORD PTR [eax+ebp*1+0x46c57385],edi
  41190a:	xlat   BYTE PTR ds:[ebx]
  41190b:	cli    
  41190c:	scas   al,BYTE PTR es:[edi]
  41190d:	mov    edx,0x521403a2
  411912:	stc    
  411913:	call   0x136c:0x3f189255
  41191a:	sbb    eax,0x2b42ce96
  41191f:	dec    ecx
  411920:	mov    al,ds:0xdb7a5baf
  411925:	mov    al,0x17
  411927:	js     0x4118d8
  411929:	out    0xab,al
  41192b:	xchg   esp,eax
  41192c:	aad    0xa9
  41192e:	cmp    DWORD PTR [ecx-0x3c51b31],ebp
  411934:	cld    
  411935:	mov    ah,0xc
  411937:	lds    ebp,FWORD PTR [edi+esi*1]
  41193a:	push   cs
  41193b:	cmc    
  41193c:	pop    ds
  41193d:	dec    eax
  41193e:	mov    esp,0x74462260
  411943:	fisttp WORD PTR [ebx]
  411945:	enter  0xf5b2,0xaa
  411949:	lea    ebx,[ecx-0x74eadb84]
  41194f:	cmp    bl,BYTE PTR [esi]
  411951:	pop    esp
  411952:	push   DWORD PTR [ecx]
  411954:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411955:	push   0x429dd2c5
  41195a:	rcr    BYTE PTR [ecx+0x2b],1
  41195d:	ret    
  41195e:	popa   
  41195f:	loope  0x411943
  411961:	mov    dh,0xbd
  411963:	add    DWORD PTR [edx+0x73],eax
  411966:	icebp  
  411967:	ror    BYTE PTR [edi],0x65
  41196a:	add    bh,BYTE PTR [ebp+0x51]
  41196d:	sbb    DWORD PTR ds:0x17020d4c,esi
  411973:	inc    esp
  411974:	cdq    
  411975:	mov    al,0x67
  411977:	imul   esp,DWORD PTR [esi+0x2e],0x4
  41197b:	pop    ebp
  41197c:	cmp    DWORD PTR [ebx+0xe51c55d],ecx
  411982:	pop    ss
  411983:	dec    eax
  411984:	dec    edx
  411985:	pop    edi
  411986:	mov    ecx,0xef8454e2
  41198b:	adc    al,0x51
  41198d:	jmp    0x47bf:0x65f3fbea
  411994:	mov    esi,0x1fadf671
  411999:	mov    BYTE PTR [edx+0x1290e9c5],al
  41199f:	jecxz  0x4119fd
  4119a1:	sub    eax,0x9d1e940d
  4119a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119a7:	sbb    eax,0x6ae013aa
  4119ac:	or     al,0x87
  4119ae:	out    0x6d,al
  4119b0:	sub    eax,0xc3875a76
  4119b5:	cmp    eax,0x538b3683
  4119ba:	sub    dl,ch
  4119bc:	bnd jne 0x411a29
  4119bf:	xchg   ebx,eax
  4119c0:	xchg   BYTE PTR [edi-0x20],dh
  4119c3:	ds pop edi
  4119c5:	jne    0x411a1c
  4119c7:	mov    ds:0xdfbc7d4b,al
  4119cc:	imul   eax,DWORD PTR [eax+ebx*1-0x51],0x7d
  4119d1:	ror    ah,1
  4119d3:	pusha  
  4119d4:	stos   DWORD PTR es:[edi],eax
  4119d5:	stc    
  4119d6:	out    dx,al
  4119d7:	test   BYTE PTR [ebp-0x60],bh
  4119da:	mov    dl,0x1e
  4119dc:	xor    al,0x9d
  4119de:	(bad)  
  4119df:	mov    al,0x1
  4119e1:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4119e3:	xor    al,0x10
  4119e5:	mov    edi,0x20810799
  4119ea:	cs jmp 0x1bd6:0xbc1993da
  4119f2:	loopne 0x411a2f
  4119f4:	xchg   esp,eax
  4119f5:	sub    al,0x97
  4119f7:	idiv   dl
  4119f9:	cdq    
  4119fa:	mov    BYTE PTR [ebx-0x5de35d1e],dh
  411a00:	repz icebp 
  411a02:	mov    bh,0x47
  411a04:	into   
  411a05:	mov    BYTE PTR [esi],bl
  411a07:	popf   
  411a08:	hlt    
  411a09:	mov    ebx,0x32a2e90e
  411a0e:	fbstp  TBYTE PTR [edi+0x77]
  411a11:	scas   eax,DWORD PTR es:[edi]
  411a12:	xchg   BYTE PTR [ebx+0x5ef78260],cl
  411a18:	stos   DWORD PTR es:[edi],eax
  411a19:	cld    
  411a1a:	lahf   
  411a1b:	in     al,0x78
  411a1d:	dec    ebx
  411a1e:	addr16 pop ds
  411a20:	icebp  
  411a21:	add    cl,dh
  411a23:	add    edi,DWORD PTR [ecx-0x238850c5]
  411a29:	ret    0x6dc3
  411a2c:	dec    ecx
  411a2d:	push   es
  411a2e:	sub    eax,0x4292a2f8
  411a33:	jb     0x411a72
  411a35:	dec    eax
  411a36:	sub    eax,0x92f1a977
  411a3b:	jle    0x4119c9
  411a3d:	push   es
  411a3e:	pop    esi
  411a3f:	sbb    DWORD PTR [eax],ebx
  411a41:	fwait
  411a42:	es (bad) 
  411a44:	stos   BYTE PTR es:[edi],al
  411a45:	mov    ebp,0x3884bbd
  411a4a:	jg     0x411a6a
  411a4c:	out    0x5,al
  411a4e:	cwde   
  411a4f:	add    eax,0x45822a30
  411a54:	or     eax,0x4fa45ce3
  411a59:	jecxz  0x411a8d
  411a5b:	rcl    DWORD PTR [edi],0xd9
  411a5e:	ins    BYTE PTR es:[edi],dx
  411a5f:	test   al,0xa9
  411a61:	fdiv   QWORD PTR [esp+ebp*2-0x46203c10]
  411a68:	push   esi
  411a69:	adc    eax,0x9bef86e3
  411a6e:	adc    eax,0xdce12213
  411a73:	(bad)  
  411a75:	xor    BYTE PTR [edi+0x2f7577ab],0x28
  411a7c:	nop
  411a7d:	stc    
  411a7e:	das    
  411a7f:	stos   DWORD PTR es:[edi],eax
  411a80:	repz sbb bl,BYTE PTR ds:0xa5938d54
  411a87:	sbb    eax,0x8ea44c90
  411a8c:	sbb    ecx,ebp
  411a8e:	out    0xdb,eax
  411a90:	stc    
  411a91:	mov    eax,DWORD PTR [ecx-0x53a40312]
  411a97:	hlt    
  411a98:	jnp    0x411ae2
  411a9a:	jmp    0x31b5e7b
  411a9f:	sub    eax,DWORD PTR [eax+0x1d]
  411aa2:	cld    
  411aa3:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  411aa5:	pusha  
  411aa6:	and    DWORD PTR [edx-0x7b],ebx
  411aa9:	mov    BYTE PTR [ecx-0x19],bl
  411aac:	mov    eax,ecx
  411aae:	(bad)  
  411aaf:	lock mov al,ds:0xefa6dcf4
  411ab5:	scas   eax,DWORD PTR es:[edi]
  411ab6:	pop    ds
  411ab7:	popa   
  411ab8:	inc    DWORD PTR [eax]
  411aba:	dec    esi
  411abb:	xor    al,0xdf
  411abd:	xor    al,0x72
  411abf:	xchg   ebx,eax
  411ac0:	mov    edi,0x6dcfbfc3
  411ac5:	inc    ebp
  411ac6:	(bad)  
  411ac7:	dec    esi
  411ac8:	mov    BYTE PTR [ecx+0x2a92cc58],cl
  411ace:	mov    bh,0x93
  411ad0:	popf   
  411ad1:	xchg   esi,eax
  411ad2:	test   al,0x13
  411ad4:	std    
  411ad5:	sbb    al,0xe4
  411ad7:	sbb    ecx,DWORD PTR [ebx+eax*1]
  411ada:	rcr    DWORD PTR [ebx],0x87
  411add:	aam    0x0
  411adf:	sub    cl,BYTE PTR [ebx]
  411ae1:	in     al,dx
  411ae2:	cli    
  411ae3:	ret    
  411ae4:	inc    ecx
  411ae5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ae6:	mov    ?,WORD PTR [edx+0x6f]
  411ae9:	std    
  411aea:	adc    al,0xd8
  411aec:	jmp    FWORD PTR [ebx+0x56c5842f]
  411af2:	ss das 
  411af4:	imul   esi,DWORD PTR [edi-0x34604db1],0x52d723ea
  411afe:	jecxz  0x411b46
  411b00:	push   ebp
  411b01:	jecxz  0x411a88
  411b03:	push   0x51
  411b05:	push   ebx
  411b06:	adc    dl,bh
  411b08:	sahf   
  411b09:	xor    eax,DWORD PTR [edi+edx*4+0x1d84ea6b]
  411b10:	aad    0xa3
  411b12:	jge    0x411b91
  411b14:	test   eax,0xe490eed7
  411b19:	sub    cl,BYTE PTR [esi-0xa]
  411b1c:	sbb    edx,DWORD PTR [edx-0x75]
  411b1f:	(bad)  
  411b21:	cmp    ch,BYTE PTR [edx]
  411b23:	xchg   edi,eax
  411b24:	repz and bl,BYTE PTR [edx+0x1d3eb0a3]
  411b2b:	jno    0x411b2c
  411b2d:	(bad)  
  411b2e:	mov    DWORD PTR [esi-0x68],edx
  411b31:	xchg   esp,eax
  411b32:	out    dx,al
  411b33:	sub    eax,DWORD PTR [edi]
  411b35:	adc    eax,0x6f0bc630
  411b3a:	jns    0x411ba3
  411b3c:	das    
  411b3d:	push   ebp
  411b3e:	das    
  411b3f:	xchg   edx,eax
  411b40:	sbb    dl,dl
  411b42:	jg     0x411ba6
  411b44:	jecxz  0x411b12
  411b46:	in     al,dx
  411b47:	icebp  
  411b48:	mov    al,0x9f
  411b4a:	cmp    DWORD PTR [ebx+0x52b765a4],ebp
  411b50:	mov    dh,BYTE PTR [eax]
  411b52:	gs fs push es
  411b55:	fidivr DWORD PTR [esi+0xd]
  411b58:	hlt    
  411b59:	in     al,0x79
  411b5b:	loope  0x411b7f
  411b5d:	pop    ss
  411b5e:	pusha  
  411b5f:	repnz scas eax,DWORD PTR es:[edi]
  411b61:	(bad)  
  411b63:	sti    
  411b64:	inc    eax
  411b65:	sub    bl,BYTE PTR [eax+0x2a0646da]
  411b6b:	push   esi
  411b6c:	call   0x894bab48
  411b71:	imul   ecx,DWORD PTR [eax-0x1a],0xffffffab
  411b75:	and    bl,BYTE PTR [ebp+edx*2-0x46]
  411b79:	clc    
  411b7a:	mov    al,0xa0
  411b7c:	jg     0x411bb8
  411b7e:	mov    edi,0xc4a693f9
  411b83:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b85:	in     al,0x7e
  411b87:	or     al,0xd3
  411b89:	popf   
  411b8a:	paddw  mm2,QWORD PTR [edx]
  411b8d:	jne    0x411ba7
  411b8f:	xchg   ebp,eax
  411b90:	call   0x49cdb445
  411b95:	jnp    0x411c14
  411b97:	and    eax,0xccdf143e
  411b9c:	xor    al,0x26
  411b9e:	aaa    
  411b9f:	cmp    eax,0xadac5f97
  411ba4:	aas    
  411ba5:	mov    esi,0x4919e69c
  411baa:	sub    DWORD PTR [ebp+eax*8+0x6620924b],ecx
  411bb1:	push   esp
  411bb2:	das    
  411bb3:	jo     0x411c25
  411bb5:	dec    eax
  411bb6:	xchg   ecx,eax
  411bb7:	mov    al,0x29
  411bb9:	shl    DWORD PTR [eax-0x38],0x28
  411bbd:	fcomp  DWORD PTR [esi]
  411bbf:	add    eax,0xf7b2ac69
  411bc4:	std    
  411bc5:	adc    eax,0x40e47bbc
  411bca:	xchg   ebp,eax
  411bcb:	stc    
  411bcc:	cmp    DWORD PTR [ebp+0x6ecb6715],0x92a54396
  411bd6:	xchg   BYTE PTR [ebx+0x26ed1a9f],al
  411bdc:	test   BYTE PTR [ebx-0x2],cl
  411bdf:	mov    ebp,0xfcc9abc0
  411be4:	cmp    eax,DWORD PTR ds:0xe5e3b20e
  411bea:	adc    DWORD PTR [eax+0x763cb1],0xa9248beb
  411bf4:	stos   DWORD PTR es:[edi],eax
  411bf5:	aam    0xc5
  411bf7:	mov    ecx,0x6520c0a
  411bfc:	jns    0x411bbc
  411bfe:	scas   al,BYTE PTR es:[edi]
  411bff:	lods   eax,DWORD PTR ds:[esi]
  411c00:	aas    
  411c01:	arpl   di,si
  411c03:	pop    ecx
  411c05:	rcr    dh,cl
  411c07:	loop   0x411c5f
  411c09:	lods   al,BYTE PTR ds:[esi]
  411c0a:	pop    es
  411c0b:	pop    ebp
  411c0c:	ins    BYTE PTR es:[edi],dx
  411c0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c0e:	dec    ebp
  411c0f:	(bad)  
  411c10:	out    0x55,eax
  411c12:	int3   
  411c13:	popf   
  411c14:	ss cmp eax,0xbe738591
  411c1a:	and    ebx,ebp
  411c1c:	push   esp
  411c1d:	stos   BYTE PTR es:[edi],al
  411c1e:	push   ecx
  411c1f:	xchg   DWORD PTR [edx+0x57],ebx
  411c22:	dec    edx
  411c23:	repnz lock rcl BYTE PTR ds:0xab5b3341,1
  411c2b:	or     DWORD PTR [eax+0x76],ecx
  411c2e:	fwait
  411c2f:	popa   
  411c30:	inc    ebx
  411c31:	jl     0x411bfe
  411c33:	aas    
  411c34:	out    dx,eax
  411c35:	mov    cl,0x47
  411c37:	aas    
  411c38:	jne    0x411bce
  411c3a:	mov    ds:0x5714353,eax
  411c3f:	pop    eax
  411c40:	xor    esi,DWORD PTR ds:0xb4b872eb
  411c46:	mov    BYTE PTR [edx+0x6921feb1],al
  411c4c:	add    al,0xa6
  411c4e:	jmp    0xc1f83f07
  411c53:	push   ebp
  411c54:	add    eax,0x303da52f
  411c59:	call   0xd2d0:0x8d69d88c
  411c60:	imul   BYTE PTR [ecx]
  411c62:	adc    al,0xd3
  411c64:	pop    es
  411c65:	xor    bh,bh
  411c67:	(bad)  
  411c68:	popa   
  411c69:	push   0x29
  411c6b:	mov    ah,0xdb
  411c6d:	xor    DWORD PTR [edx+edx*4],esi
  411c70:	adc    eax,0xaebfc1bb
  411c75:	adc    DWORD PTR [eax],edx
  411c77:	fist   DWORD PTR [eax+edx*8+0x32fb4866]
  411c7e:	jmp    0x78af:0xe857b712
  411c85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c86:	sub    al,BYTE PTR [edx-0x43e7d3ce]
  411c8c:	imul   ebp,DWORD PTR [ecx],0x4a
  411c8f:	push   cs
  411c90:	xor    eax,0x3b0ce972
  411c95:	fimul  WORD PTR [edx+0x35]
  411c98:	fcomp  DWORD PTR [eax+0x79fe55d0]
  411c9e:	in     eax,0xaf
  411ca0:	sub    BYTE PTR ds:0x105e257a,bl
  411ca6:	js     0x411d15
  411ca8:	mov    cl,0xf8
  411caa:	cs dec ebp
  411cac:	fwait
  411cad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cae:	pop    eax
  411caf:	rcr    BYTE PTR [edx+0xccf5d4],1
  411cb5:	inc    esi
  411cb6:	pop    es
  411cb7:	cmp    DWORD PTR [ebx],edx
  411cb9:	test   al,0x2b
  411cbb:	pop    ebp
  411cbc:	fs daa 
  411cbe:	(bad)  
  411cbf:	(bad)  
  411cc0:	aam    0x1e
  411cc2:	xchg   ecx,eax
  411cc3:	in     al,dx
  411cc4:	xor    BYTE PTR [edx+edi*8+0x2a],ah
  411cc8:	fidiv  WORD PTR [edx-0x7b620ac]
  411cce:	mov    ah,0x78
  411cd0:	dec    ecx
  411cd1:	js     0x411ceb
  411cd3:	adc    DWORD PTR [eax+0x52],edx
  411cd6:	jl     0x411ce9
  411cd8:	arpl   WORD PTR [esi-0x3469ba6b],ax
  411cde:	mov    edx,0x11e49c5c
  411ce3:	shl    BYTE PTR [eax-0x663db138],0xe1
  411cea:	shl    BYTE PTR [edx-0x35],cl
  411ced:	adc    ecx,DWORD PTR [esi+0x471c46de]
  411cf3:	in     eax,0xc9
  411cf5:	sbb    eax,0x7db0ba2d
  411cfa:	pop    ecx
  411cfb:	std    
  411cfc:	dec    ebx
  411cfd:	jmp    0xb0d4:0x99ba03d9
  411d04:	xlat   BYTE PTR ds:[ebx]
  411d05:	push   esi
  411d06:	fist   DWORD PTR [esi]
  411d08:	test   DWORD PTR [edi],0x48b49c7
  411d0e:	rol    cl,cl
  411d10:	push   edx
  411d11:	and    al,0x59
  411d13:	shl    bl,cl
  411d15:	fcmovb st,st(5)
  411d17:	ja     0x411d65
  411d19:	pop    ebp
  411d1a:	sub    al,0x44
  411d1c:	inc    edi
  411d1d:	sbb    DWORD PTR [ebp+0x495a4b82],0xcbafd7ad
  411d27:	mov    ch,0xb3
  411d29:	(bad)  
  411d2a:	(bad)  
  411d2b:	retf   0x2a2c
  411d2e:	imul   esi,DWORD PTR [ebx+0x4b],0x87b5049
  411d35:	add    al,0xeb
  411d37:	lods   al,BYTE PTR ds:[esi]
  411d38:	mov    ds:0x9f9376ea,al
  411d3d:	ds xchg ebx,eax
  411d3f:	mov    dl,0xbd
  411d41:	outs   dx,BYTE PTR ds:[esi]
  411d42:	dec    esi
  411d43:	inc    esp
  411d44:	or     ah,BYTE PTR [edi-0x6d3f809e]
  411d4a:	pop    ss
  411d4b:	xchg   ebp,eax
  411d4c:	adc    DWORD PTR [ebp+eiz*1-0x5af2e6e4],eax
  411d53:	call   0xa4b6:0xa93851e2
  411d5a:	jp     0x411dd4
  411d5c:	add    al,ch
  411d5e:	mov    ebp,0x356535e6
  411d63:	inc    ecx
  411d64:	js     0x411d16
  411d66:	cmc    
  411d67:	sub    eax,0x18744735
  411d6c:	je     0x411d8e
  411d6e:	mov    cl,0x5f
  411d70:	fdiv   QWORD PTR [edi+0x50]
  411d73:	cmp    eax,0x8163cde1
  411d78:	inc    edx
  411d79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d7a:	jp     0x411d64
  411d7c:	das    
  411d7d:	out    0x43,eax
  411d7f:	add    ebx,ebp
  411d81:	fld    QWORD PTR [ecx+esi*1]
  411d84:	xor    DWORD PTR [eax],ecx
  411d86:	lea    eax,[ecx-0x73]
  411d89:	test   BYTE PTR [ebx+eax*4],0x19
  411d8d:	cmp    DWORD PTR [eax+esi*8-0x783559ff],eax
  411d94:	sub    cl,BYTE PTR [eax]
  411d96:	mov    edi,0xe690187f
  411d9b:	ss pushf 
  411d9d:	ins    BYTE PTR es:[edi],dx
  411d9e:	push   ebp
  411d9f:	cmp    DWORD PTR [ebx],ecx
  411da1:	add    edi,DWORD PTR [ebx-0x4b]
  411da4:	jle    0x411de4
  411da6:	jns    0x411daa
  411da8:	cmp    ch,BYTE PTR [eax-0xf]
  411dab:	gs pop eax
  411dad:	xchg   ebp,eax
  411dae:	xor    DWORD PTR [esi+0x51],esi
  411db1:	and    dl,0xd5
  411db4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411db5:	int3   
  411db6:	outs   dx,DWORD PTR ds:[esi]
  411db7:	mov    esi,0xfb236563
  411dbc:	inc    ecx
  411dbd:	popa   
  411dbe:	(bad)  
  411dbf:	scas   eax,DWORD PTR es:[edi]
  411dc0:	sbb    eax,0x1c2b0157
  411dc5:	sbb    eax,0xf3b9ea19
  411dca:	dec    esp
  411dcb:	and    DWORD PTR ds:0xef701ad9,ecx
  411dd1:	add    eax,0x2d8be80e
  411dd6:	data16 pushaw 
  411dd9:	xor    eax,DWORD PTR [eax+0x5aa4b663]
  411ddf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411de0:	adc    eax,0x5e37b007
  411de5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411de6:	xchg   ebp,eax
  411de7:	lods   eax,DWORD PTR ds:[esi]
  411de8:	or     eax,esi
  411dea:	in     al,dx
  411deb:	pop    edi
  411dec:	in     al,0xea
  411dee:	test   DWORD PTR [edi+0x41],edx
  411df1:	push   edx
  411df2:	mov    bl,BYTE PTR [edx]
  411df4:	outs   dx,DWORD PTR ds:[esi]
  411df5:	fdivr  DWORD PTR [edx+0x330d462e]
  411dfb:	jmp    DWORD PTR [edi-0x46bb08cf]
  411e01:	jns    0x411dd9
  411e03:	mov    cl,0x8d
  411e05:	mov    esp,0x5f6c3e1
  411e0a:	in     al,0x35
  411e0c:	js     0x411e18
  411e0e:	(bad)  [ecx]
  411e10:	jmp    0x411e11
  411e12:	(bad)  
  411e13:	out    dx,eax
  411e14:	popa   
  411e15:	repz sub bl,0xb1
  411e19:	scas   eax,DWORD PTR es:[edi]
  411e1a:	push   eax
  411e1b:	xchg   esi,ebp
  411e1d:	mov    esi,0xf90a189e
  411e22:	dec    eax
  411e23:	cmp    edx,ecx
  411e25:	xor    ah,BYTE PTR [esi]
  411e27:	pop    ds
  411e28:	or     al,0x52
  411e2a:	lea    esi,[edi+0x311b6845]
  411e30:	enter  0x7b82,0x5d
  411e34:	fcomp  QWORD PTR [ecx+0x41]
  411e37:	and    cl,dl
  411e39:	ret    
  411e3a:	adc    eax,0xae02beef
  411e3f:	sar    BYTE PTR [esi+0x23344f73],cl
  411e45:	jae    0x411e5b
  411e47:	xor    dl,bl
  411e49:	adc    BYTE PTR [eax+0x61e5e5fa],dh
  411e4f:	retf   0xa16e
  411e52:	jge    0x411e63
  411e54:	mov    edx,0x13a1bb99
  411e59:	jns    0x411eb4
  411e5b:	jns    0x411eb2
  411e5d:	lahf   
  411e5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e5f:	out    0xc9,al
  411e61:	push   esi
  411e62:	inc    ebp
  411e63:	inc    esp
  411e64:	enter  0x6e6a,0x9e
  411e68:	fsub   QWORD PTR [edx]
  411e6a:	jns    0x411dfc
  411e6c:	mov    ebp,0xe280e7df
  411e71:	xor    esi,DWORD PTR gs:[eax+0x5a5fe028]
  411e78:	push   eax
  411e79:	add    BYTE PTR [ebx+0x47],0xf5
  411e7d:	mov    dh,0x2f
  411e7f:	xchg   BYTE PTR [esi+0x63],cl
  411e82:	dec    esi
  411e83:	sbb    bh,BYTE PTR [edx]
  411e85:	aad    0x4a
  411e87:	jns    0x411e62
  411e89:	jne    0x411e45
  411e8b:	pop    edx
  411e8c:	sbb    bh,BYTE PTR [eax+ecx*8-0x2b]
  411e90:	push   ds
  411e91:	push   ebx
  411e92:	jno    0x411ece
  411e94:	out    dx,al
  411e95:	rol    ah,0x28
  411e98:	xor    eax,edx
  411e9a:	in     eax,0x64
  411e9c:	push   ecx
  411e9d:	repnz cs pop esp
  411ea0:	adc    cl,BYTE PTR [edx]
  411ea2:	cmc    
  411ea3:	cmp    cl,cl
  411ea5:	in     eax,dx
  411ea6:	scas   eax,DWORD PTR es:[edi]
  411ea7:	popf   
  411ea8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ea9:	lods   al,BYTE PTR ds:[esi]
  411eaa:	(bad)  
  411eac:	jecxz  0x411f19
  411eae:	mov    al,ds:0x2e25ae8
  411eb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411eb4:	(bad)  
  411eb5:	mov    esi,0x676f3b7d
  411eba:	xchg   ecx,eax
  411ebb:	add    eax,0x3cc2c21d
  411ec0:	ss ins BYTE PTR es:[edi],dx
  411ec2:	sub    eax,0x7aaddbae
  411ec7:	inc    esp
  411ec8:	gs (bad) 
  411eca:	out    0x82,al
  411ecc:	pop    edx
  411ecd:	ror    BYTE PTR ds:0x8497ee93,0xb1
  411ed4:	jns    0x411f18
  411ed6:	jmp    0x411f1c
  411ed8:	(bad)  
  411ed9:	xor    edi,DWORD PTR [esi+ebp*1-0x6673a1f9]
  411ee0:	mov    al,ah
  411ee2:	inc    edi
  411ee3:	inc    edi
  411ee4:	jmp    0x8a09a21
  411ee9:	int    0x54
  411eeb:	leave  
  411eec:	jns    0x411ed1
  411eee:	(bad)  
  411eef:	xlat   BYTE PTR ds:[ebx]
  411ef0:	and    esi,DWORD PTR [edi+0x4d]
  411ef3:	retf   
  411ef4:	xor    al,0x6c
  411ef6:	xchg   BYTE PTR [ecx+0x1ab0eaa7],cl
  411efc:	(bad)  
  411efd:	pop    ebx
  411efe:	outs   dx,BYTE PTR ds:[esi]
  411eff:	data16 out dx,al
  411f01:	sbb    eax,0xaf68a70c
  411f06:	push   ebx
  411f07:	adc    ecx,DWORD PTR [ebx]
  411f09:	int    0xf9
  411f0b:	xor    BYTE PTR [ecx+0x7cea8358],ah
  411f11:	push   ds
  411f12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f13:	(bad)  
  411f14:	(bad)  
  411f15:	popf   
  411f16:	icebp  
  411f17:	lods   eax,DWORD PTR ds:[esi]
  411f18:	pushf  
  411f19:	js     0x411f56
  411f1b:	push   edx
  411f1c:	pusha  
  411f1d:	cmp    edx,ecx
  411f1f:	pop    ds
  411f20:	sub    eax,0x2533fcce
  411f25:	stc    
  411f26:	sahf   
  411f27:	(bad)  
  411f28:	popf   
  411f29:	sti    
  411f2a:	stc    
  411f2b:	cli    
  411f2c:	jno    0x411f55
  411f2e:	push   edi
  411f2f:	lea    ebx,[ebx]
  411f31:	pop    edx
  411f32:	push   esp
  411f33:	sahf   
  411f34:	in     eax,dx
  411f35:	jg     0x411f68
  411f37:	into   
  411f38:	mov    al,ds:0xd591a27d
  411f3d:	lods   al,BYTE PTR ds:[esi]
  411f3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f3f:	gs pop ds
  411f41:	adc    cl,BYTE PTR [edx-0x76]
  411f44:	pusha  
  411f45:	sbb    DWORD PTR [ecx+0x7c60b32],esi
  411f4b:	xor    eax,0xe11efa93
  411f50:	fsub   DWORD PTR [ebp+0x32172ef2]
  411f56:	xor    DWORD PTR [eax+edx*4+0x495142b3],edi
  411f5d:	pop    ebx
  411f5e:	scas   eax,DWORD PTR es:[edi]
  411f5f:	repnz push cs
  411f61:	or     dl,BYTE PTR [edi+0x9]
  411f64:	out    0xaf,eax
  411f66:	neg    BYTE PTR [eax-0x56]
  411f69:	scas   eax,DWORD PTR es:[edi]
  411f6a:	out    0x7d,eax
  411f6c:	cmp    eax,DWORD PTR [ecx+0x4d89d89c]
  411f72:	xchg   edi,eax
  411f73:	sbb    BYTE PTR [ecx+ecx*2],dh
  411f76:	mov    ds:0x77b3e9fa,al
  411f7b:	cdq    
  411f7c:	hlt    
  411f7d:	inc    ecx
  411f7e:	xor    al,0xa0
  411f80:	aad    0x65
  411f82:	es ss add bl,dh
  411f86:	cld    
  411f87:	test   BYTE PTR [edx+0x4228a6c1],cl
  411f8d:	nop
  411f8e:	dec    ebx
  411f8f:	mov    dh,0xd8
  411f91:	xor    eax,0xfde42e6d
  411f96:	cdq    
  411f97:	(bad)  
  411f99:	jecxz  0x411f6f
  411f9b:	pushf  
  411f9c:	push   edx
  411f9d:	push   0xffffffa7
  411f9f:	ret    0xad29
  411fa2:	inc    esi
  411fa3:	(bad)  
  411fa4:	loop   0x411fce
  411fa6:	fsub   QWORD PTR [eax+0x39225d6]
  411fac:	mov    cl,0x38
  411fae:	mov    al,0x98
  411fb0:	(bad)  
  411fb1:	jne    0x41201a
  411fb3:	xor    eax,0x91c7b740
  411fb8:	iret   
  411fb9:	mov    bl,0x86
  411fbb:	test   DWORD PTR [esi],esp
  411fbd:	retf   
  411fbe:	in     al,dx
  411fbf:	cmp    bl,cl
  411fc1:	adc    ch,BYTE PTR gs:[edi+ebx*1-0x70fc21fb]
  411fc9:	rcr    DWORD PTR [ebx+0x31c98b5f],0x4
  411fd0:	iret   
  411fd1:	or     eax,0x9346b858
  411fd6:	mov    esi,0x35795bdf
  411fdb:	lea    ebx,[eax*2+0xe1ebc38]
  411fe2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fe3:	loop   0x411ff6
  411fe5:	and    ch,BYTE PTR [ecx]
  411fe7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fe8:	sbb    DWORD PTR [edi-0x47],ebx
  411feb:	hlt    
  411fec:	ins    DWORD PTR es:[edi],dx
  411fed:	pushf  
  411fee:	inc    edx
  411fef:	xlat   BYTE PTR ds:[ebx]
  411ff0:	fld    TBYTE PTR [esi-0x6e]
  411ff3:	outs   dx,DWORD PTR ds:[esi]
  411ff4:	jecxz  0x411fc3
  411ff6:	mov    edx,0xce065e4d
  411ffb:	sub    BYTE PTR [edi+0x574ab5ea],0xc7
  412002:	fnsave [ebx+ecx*1-0x28]
  412006:	jle    0x411ff4
  412008:	push   edx
  412009:	xor    ch,BYTE PTR [ecx]
  41200b:	int3   
  41200c:	out    dx,al
  41200d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41200e:	data16 int3 
  412010:	push   edx
  412011:	fsub   st(1),st
  412013:	jno    0x412013
  412015:	jecxz  0x411fcf
  412017:	xchg   DWORD PTR [esi],ecx
  412019:	push   ds
  41201a:	inc    esp
  41201b:	and    BYTE PTR [ecx+ecx*2],0x34
  41201f:	push   ss
  412020:	dec    esp
  412021:	(bad)  
  412022:	fmul   QWORD PTR [eax-0x33123bbd]
  412028:	(bad)  
  412029:	pop    edx
  41202a:	out    0x51,al
  41202c:	test   BYTE PTR [ebp-0x1ea9395b],cl
  412032:	hlt    
  412033:	dec    ebx
  412034:	jl     0x412063
  412036:	inc    ebp
  412037:	add    ebx,eax
  412039:	jle    0x412079
  41203b:	mov    cl,0x2d
  41203d:	lock mov ?,esi
  412040:	das    
  412041:	outs   dx,BYTE PTR ds:[esi]
  412042:	ss dec eax
  412044:	adc    al,0xfe
  412046:	xor    dh,ah
  412048:	push   es
  412049:	fldenvw [esi-0x18bf4646]
  412050:	sub    al,0xe2
  412052:	dec    ebx
  412053:	mov    bl,0x62
  412055:	dec    edx
  412056:	lods   eax,DWORD PTR ds:[esi]
  412057:	push   ebp
  412058:	sub    DWORD PTR [ebx+0x49],ebx
  41205b:	jne    0x412092
  41205d:	call   0x5f3:0x6658f2e6
  412064:	jns    0x412068
  412066:	repz mov al,ds:0xe5e776ae
  41206c:	jae    0x412075
  41206e:	adc    DWORD PTR [edi+0x610ae371],esi
  412074:	sbb    DWORD PTR ds:0x1ce1da8e,edi
  41207a:	and    cl,BYTE PTR [ecx]
  41207c:	adc    al,0xaf
  41207e:	adc    ebp,esp
  412080:	mov    esi,edi
  412082:	add    eax,0xc70f8e80
  412087:	jge    0x4120d1
  412089:	frstor [ecx]
  41208b:	push   0xfffffffd
  41208d:	lea    ebp,[ecx+0x66ff8fc5]
  412093:	outs   dx,BYTE PTR ds:[esi]
  412094:	xchg   edi,eax
  412095:	retf   0x5c57
  412098:	sub    DWORD PTR [eax],edx
  41209a:	imul   ebp,DWORD PTR [ebx],0xf54d8307
  4120a0:	hlt    
  4120a1:	xlat   BYTE PTR ds:[ebx]
  4120a2:	shl    DWORD PTR [ecx+0x285aa2f5],0x9f
  4120a9:	out    dx,al
  4120aa:	test   al,0xbe
  4120ac:	xchg   ecx,eax
  4120ad:	dec    eax
  4120ae:	jo     0x4120df
  4120b0:	test   DWORD PTR [edi-0x303f2612],0x482a8df5
  4120ba:	scas   eax,DWORD PTR es:[edi]
  4120bb:	sub    edx,DWORD PTR [ecx+0x1e]
  4120be:	mov    al,0x47
  4120c0:	in     al,0x8b
  4120c2:	add    al,0x29
  4120c4:	pop    es
  4120c5:	pop    ecx
  4120c6:	cmc    
  4120c7:	and    BYTE PTR [edx+eax*2],cl
  4120ca:	mov    bh,bl
  4120cc:	lods   al,BYTE PTR ds:[esi]
  4120cd:	mov    esp,0xc076283a
  4120d2:	shl    BYTE PTR [edi+0x6b],0xa
  4120d6:	or     al,0x6c
  4120d8:	cmp    edi,DWORD PTR [ebx-0x6de0e77]
  4120de:	cs dec ebx
  4120e0:	je     0x41207c
  4120e2:	(bad)  
  4120e3:	test   dl,0x6f
  4120e6:	imul   eax,esi,0x30
  4120e9:	push   cs
  4120ea:	(bad)  [edi+0x59]
  4120ed:	ficomp DWORD PTR [ebx]
  4120ef:	inc    eax
  4120f0:	pushf  
  4120f1:	fnstenv [esi]
  4120f3:	or     eax,0xb86decb
  4120f8:	in     eax,dx
  4120f9:	pop    ecx
  4120fa:	inc    edi
  4120fb:	or     BYTE PTR [esi-0x3e],0xc3
  4120ff:	adc    DWORD PTR [edi+ebp*8-0x45],ebx
  412103:	xchg   BYTE PTR [ebx+edi*8+0xa80f260],bl
  41210a:	jmp    0x155f:0x57108450
  412111:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412112:	fs jb  0x4120a5
  412115:	xchg   DWORD PTR [ebp+0x51328f7d],ebx
  41211b:	popa   
  41211c:	mov    al,ds:0xefa2d97c
  412121:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412122:	ds ret 
  412124:	lahf   
  412125:	cdq    
  412126:	cld    
  412127:	mov    bl,0xfa
  412129:	fbstp  TBYTE PTR [esi]
  41212b:	lods   eax,DWORD PTR ds:[esi]
  41212c:	push   eax
  41212d:	out    0xcb,al
  41212f:	jmp    0x412182
  412131:	jmp    0x412102
  412133:	test   al,0x7a
  412135:	xchg   esi,eax
  412136:	adc    BYTE PTR [ecx-0x4443cab7],cl
  41213c:	addr16 cmc 
  41213e:	pusha  
  41213f:	loopne 0x412156
  412141:	push   esi
  412142:	ja     0x4120ea
  412144:	pop    edi
  412145:	pop    ecx
  412146:	retf   0x88d4
  412149:	mov    edx,edx
  41214b:	inc    eax
  41214c:	repz mov eax,0xfffedc99
  412152:	imul   DWORD PTR [esi+0x79e4d05a]
  412158:	push   esi
  412159:	mov    esp,0xd6111f3e
  41215e:	mov    esp,0x45d772c6
  412163:	add    ch,cl
  412165:	mov    ch,0xec
  412167:	push   cs
  412168:	(bad)  
  412169:	xor    bh,bl
  41216b:	push   esi
  41216c:	push   ebp
  41216d:	bound  eax,QWORD PTR [edi-0x78]
  412170:	ret    0xd731
  412173:	sbb    edi,DWORD PTR [ebx-0x4e]
  412176:	in     al,dx
  412177:	ja     0x4120fd
  412179:	mov    ds:0xfcb36e3d,eax
  41217e:	push   es
  41217f:	xchg   DWORD PTR [eax-0x23],esp
  412182:	fadd   st(2),st
  412184:	pop    DWORD PTR [edi-0x3d]
  412187:	repnz std 
  412189:	ss cli 
  41218b:	xchg   DWORD PTR [edi+edi*1],esi
  41218e:	sub    eax,eax
  412190:	or     al,0xf7
  412192:	and    dl,BYTE PTR [esi]
  412194:	dec    esp
  412195:	push   eax
  412196:	or     al,0xa2
  412198:	int3   
  412199:	inc    esp
  41219a:	xlat   BYTE PTR ds:[ebx]
  41219b:	ret    0x4b42
  41219e:	xchg   edx,eax
  41219f:	ror    DWORD PTR [ebp+0x20e7d71f],1
  4121a5:	cmp    ebp,ebp
  4121a7:	push   ecx
  4121a8:	and    BYTE PTR [esi+0x15],dh
  4121ab:	push   0x4cc422de
  4121b0:	jecxz  0x41222a
  4121b2:	cwde   
  4121b3:	push   ds
  4121b4:	inc    ebx
  4121b5:	sub    eax,0xc4e3b809
  4121ba:	loope  0x412237
  4121bc:	aam    0x1
  4121be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121bf:	aas    
  4121c0:	adc    esp,esp
  4121c2:	jle    0x4121ad
  4121c4:	(bad)  
  4121c5:	clc    
  4121c6:	fcmovbe st,st(7)
  4121c8:	out    dx,al
  4121c9:	xchg   esi,eax
  4121ca:	lock or eax,0x8d1c94a9
  4121d0:	xor    ah,ch
  4121d2:	adc    esp,esp
  4121d4:	(bad)  
  4121d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121d7:	push   esi
  4121d8:	pop    ss
  4121d9:	repz jmp 0x4121bb
  4121dc:	push   eax
  4121dd:	add    ecx,ecx
  4121df:	popa   
  4121e0:	inc    esi
  4121e1:	ret    
  4121e2:	xor    ch,BYTE PTR [edx-0x8]
  4121e5:	mov    ?,WORD PTR [ecx+0x1a]
  4121e8:	mov    ds:0x7dd18698,al
  4121ed:	loopne 0x412233
  4121ef:	push   eax
  4121f0:	dec    eax
  4121f1:	inc    edi
  4121f2:	sbb    ecx,DWORD PTR [edi+0x53611ab2]
  4121f8:	adc    dh,bh
  4121fa:	ins    DWORD PTR es:[edi],dx
  4121fb:	adc    BYTE PTR [ecx],ch
  4121fd:	loope  0x4121e2
  4121ff:	aad    0xb7
  412201:	adc    DWORD PTR ds:0x62de07f6,ebp
  412207:	test   al,0x64
  412209:	repz add BYTE PTR ds:0x7109c4c2,dl
  412210:	sub    DWORD PTR [ecx],esp
  412212:	mov    esi,0x6d5709de
  412217:	cli    
  412218:	shl    BYTE PTR [edi+eax*1],1
  41221b:	fldenv [esi+0x6e036b96]
  412221:	aam    0x3
  412223:	adc    al,0x9
  412225:	mov    BYTE PTR [edx+eiz*2-0x19],al
  412229:	fs jo  0x412266
  41222c:	sbb    edi,DWORD PTR [esi-0x59]
  41222f:	mov    edi,0x1e886eca
  412234:	sub    eax,eax
  412236:	stos   BYTE PTR es:[edi],al
  412237:	imul   eax,DWORD PTR [edi+0x385fb45d],0xdf431fed
  412241:	or     dl,bl
  412243:	and    BYTE PTR [ebx-0x20],ch
  412246:	xor    eax,0xa907491a
  41224b:	add    DWORD PTR [ebx-0x25d25ce5],esi
  412251:	shl    BYTE PTR [eax-0x271032ec],1
  412257:	push   eax
  412258:	call   0x77f0bc3
  41225d:	shl    cl,0xd9
  412260:	xchg   edi,eax
  412261:	sub    BYTE PTR [ebp-0x2ab45a6b],ch
  412267:	mov    ds:0x821a727f,al
  41226c:	add    ch,dl
  41226e:	shl    BYTE PTR [eax-0x1624b769],0xb0
  412275:	aas    
  412276:	lods   eax,DWORD PTR ds:[esi]
  412277:	jb     0x412248
  412279:	fwait
  41227a:	jb     0x41225e
  41227c:	hlt    
  41227d:	pop    edx
  41227e:	jecxz  0x41222c
  412280:	cs ds jb 0x4122ed
  412284:	ds jmp 0xfdb6:0xf8b09596
  41228c:	add    al,0x37
  41228e:	jg     0x412277
  412290:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412291:	xor    bh,cl
  412293:	dec    ecx
  412294:	jp     0x412239
  412296:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412297:	mov    ecx,0x209c243f
  41229c:	adc    dh,BYTE PTR [ebp+ecx*1+0x48]
  4122a0:	out    0xe,al
  4122a2:	aaa    
  4122a3:	jns    0x41227c
  4122a5:	sbb    edx,esp
  4122a7:	test   DWORD PTR [edx+0x68],edi
  4122aa:	call   0x84a00c4f
  4122af:	(bad)  
  4122b0:	enter  0x88cc,0x1b
  4122b4:	and    eax,0x260d5ae8
  4122b9:	fst    QWORD PTR [esi]
  4122bb:	leave  
  4122bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122bd:	xor    DWORD PTR [ebp+0x165f46d4],ecx
  4122c3:	push   0x896036a4
  4122c8:	mov    esi,0x99c02921
  4122cd:	(bad)  
  4122ce:	jnp    0x41227d
  4122d0:	xchg   DWORD PTR [edi-0x38],edx
  4122d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122d4:	cmp    eax,0x3d01ee45
  4122d9:	lock jno 0x4122e8
  4122dc:	je     0x41234e
  4122de:	pop    esp
  4122df:	fiadd  WORD PTR [esi]
  4122e1:	ror    DWORD PTR [edi-0x442c8ad],cl
  4122e7:	pop    esi
  4122e8:	fistp  QWORD PTR [eax+0x65]
  4122eb:	inc    eax
  4122ec:	xor    al,0xf1
  4122ee:	mov    ds:0x7a44e4c,al
  4122f3:	mov    esi,0xd451623a
  4122f8:	hlt    
  4122f9:	lods   eax,DWORD PTR ds:[esi]
  4122fa:	outs   dx,BYTE PTR ds:[esi]
  4122fb:	mov    edx,0xc0b5a848
  412300:	nop
  412301:	out    0x64,eax
  412303:	mov    bl,0x9c
  412305:	xchg   esp,eax
  412306:	pop    edx
  412307:	cmp    eax,0x55216a57
  41230c:	mov    ds,esp
  41230e:	stc    
  41230f:	(bad)  
  412311:	in     eax,dx
  412312:	test   ah,0x77
  412315:	addr16 jp 0x412393
  412318:	div    BYTE PTR [edi+0x6b]
  41231b:	(bad)
  412320:	sub    BYTE PTR [esi-0x3a],ah
  412323:	(bad)  
  412324:	push   edi
  412325:	test   DWORD PTR [edi-0x49],esi
  412328:	bound  ebp,QWORD PTR [ecx+0x62]
  41232b:	xchg   esi,eax
  41232c:	test   BYTE PTR [edx],al
  41232e:	mov    edi,0x24656629
  412333:	call   0xf6f0fb24
  412338:	sub    al,0x9b
  41233a:	dec    edx
  41233b:	sti    
  41233c:	pop    eax
  41233d:	cdq    
  41233e:	push   esp
  41233f:	shl    BYTE PTR [esi],cl
  412341:	js     0x412349
  412343:	mov    eax,eax
  412345:	fstp   st(7)
  412347:	xchg   ebx,eax
  412348:	dec    ecx
  412349:	lods   al,BYTE PTR ds:[esi]
  41234a:	and    DWORD PTR [edx+0xe7648f6],0x16
  412351:	xor    eax,0x6e42c06a
  412356:	dec    edi
  412357:	dec    edx
  412358:	or     cl,BYTE PTR [ebx+0x25810855]
  41235e:	sbb    dh,BYTE PTR [edx+0x42]
  412364:	add    BYTE PTR [eax],al
  412366:	jmp    0x41237a
  41236b:	xor    ebx,ebx
  41236d:	xor    ebx,DWORD PTR ds:0x42b21a
  412373:	inc    ebx
  412374:	mov    DWORD PTR ds:0x42b21a,ebx
  41237a:	cmp    DWORD PTR ds:0x42b21a,0x18
  412381:	jae    0x4123c1
  412387:	cmp    DWORD PTR ds:0x42b21a,0x4
  41238e:	jg     0x4123c1
  412394:	jmp    0x4123a2
  412399:	push   DWORD PTR [ebp-0x18]
  41239c:	call   DWORD PTR ds:0x42b316
  4123a2:	cmp    DWORD PTR ds:0x42b21a,0x3
  4123a9:	jne    0x4123bc
  4123af:	mov    ebx,DWORD PTR ds:0x42b21a
  4123b5:	inc    ebx
  4123b6:	mov    DWORD PTR ds:0x42b21a,ebx
  4123bc:	jmp    0x41236b
  4123c1:	mov    ebx,DWORD PTR [ebp-0x54]
  4123c4:	mov    DWORD PTR ds:0x42b21a,0x6966
  4123ce:	add    edx,0x64f880
  4123d4:	or     edx,ebx
  4123d6:	mov    DWORD PTR [ebp-0x54],edx
  4123d9:	mov    edx,DWORD PTR [ebp+0x8]
  4123dc:	xor    DWORD PTR ds:0x42b1b2,edx
  4123e2:	mov    ebx,DWORD PTR [ebp-0x50]
  4123e5:	and    DWORD PTR ds:0x42b226,0x42b18e
  4123ef:	add    edx,ecx
  4123f1:	sbb    DWORD PTR ds:0x42b1ee,0x42b196
  4123fb:	xor    edx,ebx
  4123fd:	mov    DWORD PTR [ebp-0x50],edx
  412400:	mov    DWORD PTR ds:0x42b226,0x2b16
  41240a:	mov    edx,DWORD PTR [ebp+0x8]
  41240d:	and    DWORD PTR ds:0x42b19e,0x0
  412417:	mov    ebx,DWORD PTR ds:0x42b19e
  41241d:	inc    ebx
  41241e:	mov    DWORD PTR ds:0x42b19e,ebx
  412424:	cmp    DWORD PTR ds:0x42b19e,0xc
  41242b:	ja     0x41246b
  412431:	jmp    0x412444
  412436:	push   DWORD PTR [ebp-0x10]
  412439:	push   0x7c16
  41243e:	call   DWORD PTR ds:0x42b31a
  412444:	cmp    DWORD PTR ds:0x42b19e,0xb
  41244b:	jne    0x41245e
  412451:	mov    ebx,DWORD PTR ds:0x42b19e
  412457:	inc    ebx
  412458:	mov    DWORD PTR ds:0x42b19e,ebx
  41245e:	cmp    DWORD PTR ds:0x42b19e,0x13
  412465:	jb     0x412417
  41246b:	mov    ebx,DWORD PTR [ebp-0x4c]
  41246e:	add    edx,edi
  412470:	and    edx,ebx
  412472:	mov    ebx,DWORD PTR ds:0x42b206
  412478:	add    DWORD PTR ds:0x42b1c6,ebx
  41247e:	mov    DWORD PTR [ebp-0x4c],edx
  412481:	add    DWORD PTR ds:0x42b19a,0x5c82
  41248b:	mov    edx,DWORD PTR [ebp+0x8]
  41248e:	mov    ebx,DWORD PTR [ebp-0x48]
  412491:	lea    edx,[ebx+edx*1+0x241fcdf]
  412498:	mov    DWORD PTR [ebp-0x48],edx
  41249b:	mov    edx,DWORD PTR [ebp+0x8]
  41249e:	mov    ebx,0xfa5e1524
  4124a3:	sub    ebx,edx
  4124a5:	add    ebx,DWORD PTR [ebp-0x44]
  4124a8:	mov    DWORD PTR [ebp-0x44],ebx
  4124ab:	mov    edx,DWORD PTR [ebp+0x8]
  4124ae:	xor    edx,eax
  4124b0:	add    edx,esi
  4124b2:	jne    0x40fdfa
  4124b8:	jmp    0x419191
  4124bd:	mov    edx,DWORD PTR [ebp-0xc]
  4124c0:	sub    edx,esi
  4124c2:	xor    edx,eax
  4124c4:	mov    DWORD PTR [ebp-0x5c],edx
  4124c7:	mov    edx,DWORD PTR [ebp-0x10]
  4124ca:	mov    ebx,DWORD PTR [ebp-0x8]
  4124cd:	xor    edx,eax
  4124cf:	xor    ebx,eax
  4124d1:	sub    edx,ebx
  4124d3:	sub    edx,esi
  4124d5:	xor    edx,eax
  4124d7:	mov    DWORD PTR [ebp-0x10],edx
  4124da:	mov    edx,DWORD PTR [ebp-0x14]
  4124dd:	mov    DWORD PTR [ebp+0x8],edx
  4124e0:	jmp    0x4148b5
  4124e5:	mov    edx,DWORD PTR [ebp+0x8]
  4124e8:	mov    ebx,DWORD PTR [ebp-0x8]
  4124eb:	xor    edx,eax
  4124ed:	xor    ebx,eax
  4124ef:	sub    edx,ebx
  4124f1:	sub    edx,esi
  4124f3:	xor    edx,eax
  4124f5:	mov    DWORD PTR [ebp+0x8],edx
  4124f8:	mov    edx,DWORD PTR [ebp+0x8]
  4124fb:	mov    ebx,DWORD PTR [ebp-0x58]
  4124fe:	add    edx,0x5708e2
  412504:	imul   edx,ebx
  412507:	mov    DWORD PTR [ebp-0x58],edx
  41250a:	mov    edx,DWORD PTR [ebp+0x8]
  41250d:	mov    ebx,DWORD PTR [ebp-0x54]
  412510:	add    edx,0x64f880
  412516:	or     edx,ebx
  412518:	mov    DWORD PTR [ebp-0x54],edx
  41251b:	mov    edx,DWORD PTR [ebp+0x8]
  41251e:	mov    ebx,DWORD PTR [ebp-0x50]
  412521:	add    edx,ecx
  412523:	xor    edx,ebx
  412525:	mov    DWORD PTR [ebp-0x50],edx
  412528:	mov    edx,DWORD PTR [ebp+0x8]
  41252b:	mov    ebx,DWORD PTR [ebp-0x4c]
  41252e:	add    edx,edi
  412530:	and    edx,ebx
  412532:	mov    DWORD PTR [ebp-0x4c],edx
  412535:	mov    edx,DWORD PTR [ebp+0x8]
  412538:	mov    ebx,DWORD PTR [ebp-0x48]
  41253b:	lea    edx,[ebx+edx*1+0x241fcdf]
  412542:	mov    DWORD PTR [ebp-0x48],edx
  412545:	mov    edx,DWORD PTR [ebp+0x8]
  412548:	mov    ebx,0xfa5e1524
  41254d:	sub    ebx,edx
  41254f:	add    ebx,DWORD PTR [ebp-0x44]
  412552:	mov    DWORD PTR [ebp-0x44],ebx
  412555:	jmp    0x4148b5
  41255a:	xlat   BYTE PTR ds:[ebx]
  41255b:	push   ss
  41255c:	xchg   BYTE PTR [ebx-0x7e],dh
  41255f:	repz xchg edx,eax
  412561:	add    BYTE PTR [eax-0x49],0xdb
  412565:	test   BYTE PTR [edx-0x5a9f17a],0x8a
  41256c:	add    DWORD PTR [ebx-0x7c7ca1c2],0x6a
  412573:	sub    ah,BYTE PTR [esi]
  412575:	lods   eax,DWORD PTR ds:[esi]
  412576:	jne    0x4125cd
  412578:	jle    0x412519
  41257a:	inc    edi
  41257b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41257c:	scas   eax,DWORD PTR es:[edi]
  41257d:	test   BYTE PTR [ebp-0x6f],ah
  412580:	inc    esp
  412581:	jp     0x41258f
  412583:	pop    ds
  412584:	mov    esp,ecx
  412586:	push   edx
  412587:	dec    eax
  412588:	mov    cl,0x68
  41258a:	mov    eax,0x74793a46
  41258f:	mov    bl,0x65
  412591:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412592:	enter  0xea0a,0x43
  412596:	idiv   DWORD PTR [ebp+0x64]
  412599:	into   
  41259a:	cli    
  41259b:	stos   DWORD PTR es:[edi],eax
  41259c:	call   FWORD PTR [edx+ebx*4-0x1efc73ce]
  4125a3:	inc    esp
  4125a4:	add    esp,DWORD PTR ds:0x2b51795b
  4125aa:	adc    al,0xca
  4125ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125ae:	pop    ecx
  4125af:	(bad)  
  4125b0:	pop    esp
  4125b1:	cwde   
  4125b2:	cwde   
  4125b3:	aam    0x75
  4125b5:	outs   dx,DWORD PTR ds:[esi]
  4125b6:	cli    
  4125b7:	popa   
  4125b8:	mov    bh,0xc1
  4125ba:	and    eax,DWORD PTR [ebx+eax*2+0x53]
  4125be:	ins    BYTE PTR es:[edi],dx
  4125bf:	or     ebp,eax
  4125c1:	add    ch,BYTE PTR [ebx-0x1f]
  4125c4:	das    
  4125c5:	(bad)  
  4125c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125c7:	mov    edi,DWORD PTR [edx+0x3cdd07c8]
  4125cd:	mov    esi,0x33f17704
  4125d2:	dec    eax
  4125d3:	jmp    0xdbb8:0xcd622e7
  4125da:	mov    ecx,0xcee4aab0
  4125df:	fwait
  4125e0:	arpl   cx,bp
  4125e2:	mov    edi,cs
  4125e4:	mov    ebx,0x64c82ffa
  4125e9:	jl     0x41264b
  4125eb:	stc    
  4125ec:	pop    es
  4125ed:	in     al,0xa6
  4125ef:	xor    BYTE PTR [edi],dh
  4125f1:	mov    dh,0xc8
  4125f3:	push   eax
  4125f4:	pop    ebp
  4125f5:	mov    ecx,0x310b0d50
  4125fa:	std    
  4125fb:	sbb    DWORD PTR [ebp+eax*4+0x6f],edi
  4125ff:	xor    edi,ecx
  412601:	cdq    
  412602:	test   al,0x76
  412604:	(bad)  
  412605:	out    0x60,al
  412607:	out    0x92,al
  412609:	jae    0x4125e0
  41260b:	xchg   edi,eax
  41260c:	add    BYTE PTR [edi-0x3b],bl
  41260f:	imul   edi,ebx,0x255cda65
  412615:	push   ecx
  412616:	jno    0x4125fa
  412618:	add    eax,0xef177938
  41261d:	mov    ebp,0x3056db61
  412622:	push   es
  412623:	inc    eax
  412624:	repnz or al,BYTE PTR [edi+ecx*4-0x33bb06bd]
  41262c:	ret    0x7005
  41262f:	fisttp DWORD PTR [edx-0x7c6bf254]
  412635:	daa    
  412636:	and    esp,edx
  412638:	pop    esi
  412639:	push   0xffffffdc
  41263b:	pop    ebp
  41263c:	in     eax,0x46
  41263e:	xor    DWORD PTR [edx],edi
  412640:	mov    ecx,0x2983d0f8
  412645:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412646:	sub    eax,0xfeb98eb1
  41264b:	out    dx,al
  41264c:	mov    edx,DWORD PTR [edx]
  41264e:	mov    bh,al
  412650:	imul   esp,DWORD PTR [eax-0x6d301d70],0xf70f8345
  41265a:	or     eax,0xb5f39e72
  41265f:	mov    BYTE PTR ds:0x5a589237,bl
  412665:	ins    BYTE PTR es:[edi],dx
  412666:	test   DWORD PTR [esp+ecx*2+0x78a39ca0],ebx
  41266d:	pop    esi
  41266e:	push   ecx
  41266f:	cmp    al,0xb9
  412671:	sbb    al,0x36
  412673:	loopne 0x412637
  412675:	add    BYTE PTR [ecx+edx*2+0x78],ah
  412679:	or     ah,BYTE PTR [eax]
  41267b:	les    ecx,FWORD PTR [edx+edx*4]
  41267e:	loopne 0x4126b1
  412680:	push   cs
  412681:	mov    ds:0xa08d90e,al
  412686:	and    eax,0xd00b0b6e
  41268b:	repz add eax,0x8b0b8f46
  412691:	addr16 jp 0x412633
  412694:	aaa    
  412695:	jle    0x4126be
  412697:	pop    edi
  412698:	pop    ebx
  412699:	sbb    al,0xd1
  41269b:	bound  esi,QWORD PTR [esi+0x7a19a285]
  4126a1:	(bad)  
  4126a3:	aam    0xc1
  4126a5:	dec    ebx
  4126a6:	jle    0x412681
  4126a8:	in     eax,0xb1
  4126aa:	fwait
  4126ab:	icebp  
  4126ac:	js     0x412705
  4126ae:	pop    edx
  4126af:	test   eax,0x75a95aa0
  4126b4:	add    eax,edi
  4126b6:	pop    edx
  4126b7:	dec    ebx
  4126b8:	jmp    0x1e336030
  4126bd:	fistp  WORD PTR [edi+0x9]
  4126c0:	fisttp WORD PTR [edx]
  4126c2:	jmp    0x4735c3c4
  4126c7:	arpl   WORD PTR [ebp+0x5492e4b],ax
  4126cd:	pop    eax
  4126ce:	fcom   st(2)
  4126d0:	mov    eax,ds:0x9df098bc
  4126d5:	pop    ds
  4126d6:	les    ebp,FWORD PTR [ebx-0x43f26720]
  4126dc:	dec    edi
  4126dd:	iret   
  4126de:	pop    ebx
  4126df:	loope  0x412753
  4126e1:	test   DWORD PTR [ebp+0x3a3f7993],ebx
  4126e7:	add    bl,bh
  4126e9:	sbb    DWORD PTR [edi+0x893ff9f],0x488d521d
  4126f3:	cld    
  4126f4:	add    bl,0xf
  4126f7:	icebp  
  4126f8:	and    DWORD PTR [ebx+0x5da334cb],0x2
  4126ff:	jae    0x41269f
  412701:	mov    cl,0xa1
  412703:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412704:	leave  
  412705:	jle    0x4126ce
  412707:	push   eax
  412708:	push   esp
  412709:	mov    ds:0xe8aa8b4f,al
  41270e:	cmp    BYTE PTR [ecx],bl
  412710:	jg     0x4126c8
  412712:	out    0x2c,al
  412714:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412715:	push   edi
  412716:	loop   0x412724
  412718:	outs   dx,BYTE PTR ds:[esi]
  412719:	popf   
  41271a:	add    al,ah
  41271c:	clc    
  41271d:	jge    0x412735
  41271f:	xchg   BYTE PTR [ecx+0x688054bf],ah
  412725:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412726:	clc    
  412727:	fist   WORD PTR [esi]
  412729:	test   al,0x6a
  41272b:	fisub  DWORD PTR [eax-0x771fd177]
  412731:	xlat   BYTE PTR ds:[ebx]
  412732:	dec    edx
  412733:	jle    0x41275c
  412735:	inc    ebx
  412736:	push   ebx
  412737:	add    al,0x62
  412739:	ficom  DWORD PTR [edi]
  41273b:	stos   DWORD PTR es:[edi],eax
  41273c:	(bad)  
  41273e:	cmp    bl,BYTE PTR ds:0xbb71a47d
  412744:	pusha  
  412745:	mov    esi,0x1d92978f
  41274a:	add    ebp,esp
  41274c:	adc    cl,dh
  41274e:	out    0x83,eax
  412750:	ror    BYTE PTR [ecx],0xe
  412753:	push   ebx
  412754:	sub    cl,0x67
  412757:	or     ch,BYTE PTR [esi+0x57dffbdd]
  41275d:	cdq    
  41275e:	jmp    0xe6e5:0xa59f31c6
  412765:	ins    DWORD PTR es:[edi],dx
  412766:	stc    
  412767:	cmp    al,0x1
  412769:	pop    edx
  41276a:	mov    al,dh
  41276c:	pop    ebx
  41276d:	jp     0x4126fc
  41276f:	test   BYTE PTR [ebx-0x394eb8cf],dl
  412775:	cmp    al,0x91
  412777:	rcr    BYTE PTR [edx],cl
  412779:	imul   ebx,DWORD PTR [eax],0xbcd30133
  41277f:	jae    0x412773
  412781:	mov    ds:0x3b241b39,eax
  412786:	or     eax,DWORD PTR [esi]
  412788:	or     DWORD PTR [edi],edi
  41278a:	popf   
  41278b:	das    
  41278c:	out    0x5c,al
  41278e:	scas   eax,DWORD PTR es:[edi]
  41278f:	sub    ebx,ecx
  412791:	or     edx,edx
  412793:	inc    esi
  412794:	lods   eax,DWORD PTR ds:[esi]
  412795:	jecxz  0x4127e0
  412797:	pop    ds
  412798:	in     eax,dx
  412799:	mov    ebp,DWORD PTR [ebp-0x45e9d769]
  41279f:	test   DWORD PTR [ecx-0x12],0xedec631b
  4127a6:	push   edi
  4127a7:	sbb    edi,DWORD PTR [ebp+0x5]
  4127aa:	cld    
  4127ab:	pop    di
  4127ad:	icebp  
  4127ae:	test   eax,0x4c48a559
  4127b3:	jb     0x412828
  4127b5:	mov    edi,0x39b75d37
  4127ba:	fsub   QWORD PTR [edi]
  4127bc:	fidivr DWORD PTR [ecx]
  4127be:	and    ebp,edx
  4127c0:	add    ecx,DWORD PTR [ecx]
  4127c2:	clc    
  4127c3:	adc    BYTE PTR [edi+0x79],al
  4127c6:	inc    edi
  4127c8:	jle    0x4127a6
  4127ca:	sbb    ch,BYTE PTR [ebx-0x6f]
  4127cd:	div    DWORD PTR [eax]
  4127cf:	(bad)  
  4127d0:	jmp    0xc49e:0x1ad0b70e
  4127d7:	xchg   ebp,eax
  4127d8:	xor    eax,0x310a5011
  4127dd:	push   0xb33d0901
  4127e2:	int    0x1
  4127e4:	les    ebx,FWORD PTR [edi]
  4127e6:	fucomip st,st(0)
  4127e8:	inc    ebp
  4127e9:	sbb    BYTE PTR [edx],bh
  4127eb:	mov    DWORD PTR [ecx],esi
  4127ed:	xchg   ebx,eax
  4127ee:	push   ds
  4127ef:	push   ecx
  4127f0:	inc    esi
  4127f1:	pop    ebx
  4127f2:	sub    BYTE PTR [ecx+edx*2+0x7615db1a],0xf1
  4127fa:	in     al,dx
  4127fb:	popa   
  4127fc:	xlat   BYTE PTR ds:[ebx]
  4127fd:	lock push esp
  4127ff:	mov    dl,ah
  412801:	js     0x412874
  412803:	pusha  
  412804:	aam    0xfb
  412806:	cli    
  412807:	sub    eax,0x8e29aa0f
  41280c:	data16 test BYTE PTR [ecx+0x2dd2f86c],bh
  412813:	mov    edi,0x9dbe3c93
  412818:	fs shl ecx,0xca
  41281c:	inc    ecx
  41281d:	jg     0x41283c
  41281f:	sbb    ebx,DWORD PTR [ebx+0x6d]
  412822:	imul   ebp,DWORD PTR [ebp-0x4044b14],0x7
  412829:	xchg   eax,ebx
  41282b:	or     bl,dh
  41282d:	dec    eax
  41282e:	retf   
  41282f:	sbb    bl,BYTE PTR [edx+0x0]
  412832:	xchg   edi,eax
  412833:	mov    eax,ds:0x63e871ec
  412838:	cmp    edi,ecx
  41283a:	sbb    ebx,DWORD PTR [edi-0x67314468]
  412840:	sar    DWORD PTR [ebx+0x62],1
  412843:	mov    cl,0x5d
  412845:	into   
  412846:	cs adc dh,ah
  412849:	addr16 add dl,bh
  41284c:	xchg   edx,eax
  41284d:	sub    BYTE PTR [edx-0x41],ch
  412850:	loope  0x412864
  412852:	ja     0x41289e
  412854:	pop    ss
  412855:	xor    BYTE PTR [esi],dl
  412857:	jge    0x4127e6
  412859:	mov    ecx,0x17109fbe
  41285e:	fisttp WORD PTR [ecx]
  412860:	ins    BYTE PTR es:[edi],dx
  412861:	leave  
  412862:	rol    edi,cl
  412864:	mov    eax,ds:0xfb8b6835
  412869:	cmp    al,0xd0
  41286b:	mov    eax,ds:0xd8e5b754
  412870:	mov    ebp,0xe28ef139
  412875:	push   eax
  412876:	arpl   WORD PTR [eax-0x19],cx
  412879:	cld    
  41287a:	jbe    0x4128df
  41287c:	stos   DWORD PTR es:[edi],eax
  41287d:	hlt    
  41287e:	and    BYTE PTR [ebp-0x4b],ah
  412881:	mov    esi,0x267da786
  412886:	test   ebx,0x159a55be
  41288c:	fisub  DWORD PTR [eax]
  41288e:	cmp    BYTE PTR [ebp-0x6e],al
  412891:	push   0x9f647996
  412896:	dec    edx
  412897:	je     0x4128b1
  412899:	jle    0x412876
  41289b:	out    dx,eax
  41289c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41289d:	ja     0x41285d
  41289f:	pop    ebp
  4128a0:	mov    dl,cl
  4128a2:	jecxz  0x4128f3
  4128a4:	loop   0x412838
  4128a6:	js     0x41290c
  4128a8:	test   eax,0xc9353f2b
  4128ad:	in     eax,dx
  4128ae:	loop   0x41283a
  4128b0:	xchg   esp,eax
  4128b1:	dec    ebp
  4128b2:	push   0xdcd5bd1
  4128b7:	cmp    BYTE PTR [edx+edi*8-0x45],dl
  4128bb:	imul   eax,DWORD PTR [esp+ecx*1],0x46b729ea
  4128c2:	inc    edx
  4128c3:	outs   dx,BYTE PTR ss:[esi]
  4128c5:	dec    esi
  4128c6:	jmp    0x3253:0x69fe12c
  4128cd:	or     BYTE PTR [eax],0xfc
  4128d0:	cmp    cl,dh
  4128d2:	stos   DWORD PTR es:[edi],eax
  4128d3:	adc    BYTE PTR [ebp+0x2ecc9453],ch
  4128d9:	inc    ecx
  4128da:	mov    ch,0xd8
  4128dc:	mov    ecx,DWORD PTR [ebx+eax*8-0x2e174b83]
  4128e3:	jnp    0x41292a
  4128e5:	add    bl,BYTE PTR [esi]
  4128e7:	dec    esi
  4128e8:	jb     0x4128fb
  4128ea:	jecxz  0x41292c
  4128ec:	jmp    0x412968
  4128ee:	icebp  
  4128ef:	add    eax,0xd57dff80
  4128f4:	or     eax,0xbc427bbd
  4128f9:	lods   eax,DWORD PTR ds:[esi]
  4128fa:	adc    ah,cl
  4128fc:	fistp  QWORD PTR [ecx+0x7b]
  4128ff:	test   BYTE PTR [ecx+0x40],bl
  412902:	mov    dh,0x7
  412904:	(bad)  
  412905:	jo     0x412922
  412907:	rcr    DWORD PTR [ebp+eax*2-0x33],1
  41290b:	jae    0x4128c9
  41290d:	dec    esi
  41290e:	dec    ecx
  41290f:	ins    DWORD PTR es:[edi],dx
  412910:	sbb    BYTE PTR [edi-0xc0e4c02],al
  412916:	dec    ecx
  412917:	adc    DWORD PTR [edx-0x5b],0x32
  41291b:	push   cs
  41291c:	pop    esi
  41291d:	push   ebx
  41291e:	jno    0x412909
  412920:	dec    ecx
  412921:	mov    ds:0x67c07428,al
  412926:	aam    0x20
  412928:	loop   0x41295a
  41292a:	(bad)  
  41292b:	mov    esp,0xbd645a5
  412930:	mov    WORD PTR [ecx],es
  412932:	jnp    0x412924
  412934:	mov    BYTE PTR [eax],cl
  412936:	(bad)  
  412937:	fwait
  412938:	push   esi
  412939:	pop    esp
  41293a:	enter  0xf7cb,0x57
  41293e:	cmc    
  41293f:	out    0x73,al
  412941:	pop    eax
  412942:	pop    ss
  412943:	stc    
  412944:	xchg   ecx,eax
  412945:	mov    ds,ebp
  412947:	jb     0x412999
  412949:	jecxz  0x412944
  41294b:	out    dx,eax
  41294c:	ja     0x41297d
  41294e:	mov    WORD PTR ds:0x7f14e7c7,fs
  412954:	in     eax,dx
  412955:	push   eax
  412956:	clc    
  412957:	jne    0x4129b3
  412959:	gs daa 
  41295b:	fdivr  st(3),st
  41295d:	nop
  41295e:	sbb    eax,0x9bc6a76d
  412963:	call   0x671a:0xf3746769
  41296a:	xor    al,0x84
  41296c:	inc    DWORD PTR [ecx+0x9]
  41296f:	jo     0x4129c5
  412971:	xchg   edx,eax
  412972:	imul   ebx,esp,0xffffffc4
  412975:	(bad)  
  412977:	mov    eax,0x87534455
  41297c:	mov    WORD PTR [eax-0x6f8d9f79],fs
  412982:	jp     0x4129bc
  412984:	mov    eax,ds:0xc5f5da72
  412989:	push   ecx
  41298a:	popf   
  41298b:	call   0xa810:0x6efb0be5
  412992:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412993:	pop    eax
  412994:	mov    edi,0x96aa0e0e
  412999:	jns    0x412920
  41299b:	shl    DWORD PTR [ecx-0x50],cl
  41299e:	mov    dl,0xc2
  4129a0:	sub    eax,0xa095af5e
  4129a5:	arpl   WORD PTR [ebp+0x40],bx
  4129a8:	dec    edi
  4129a9:	cmp    al,BYTE PTR [edx-0x7d2c952c]
  4129af:	data16 lock sahf 
  4129b2:	ror    DWORD PTR ds:0xc44197f,cl
  4129b8:	rcl    DWORD PTR [edi],1
  4129ba:	sub    esi,DWORD PTR [ecx]
  4129bc:	not    DWORD PTR [eax]
  4129be:	into   
  4129bf:	lds    ebx,FWORD PTR [ecx-0x6a]
  4129c2:	loop   0x4129d6
  4129c4:	adc    cl,BYTE PTR [edx-0x61]
  4129c7:	lods   al,BYTE PTR ds:[esi]
  4129c8:	outs   dx,DWORD PTR ds:[esi]
  4129c9:	push   edx
  4129ca:	cmp    edx,ecx
  4129cc:	ins    BYTE PTR es:[edi],dx
  4129cd:	xor    DWORD PTR [esi+0x1a],eax
  4129d0:	retf   
  4129d1:	scas   al,BYTE PTR es:[edi]
  4129d2:	and    DWORD PTR [ecx],0xc299ca3
  4129d8:	add    al,0x64
  4129da:	sbb    ecx,edx
  4129dc:	add    ebx,DWORD PTR [eax+0x2dee1fe8]
  4129e2:	loop   0x412982
  4129e4:	adc    eax,0x978903b5
  4129e9:	or     esi,DWORD PTR [ebx-0x55530011]
  4129ef:	sbb    ah,0x29
  4129f2:	or     BYTE PTR [edx+ebp*8+0x31e5cd4b],cl
  4129f9:	inc    ebx
  4129fa:	into   
  4129fb:	int3   
  4129fc:	das    
  4129fd:	jb     0x412a63
  4129ff:	dec    DWORD PTR [ecx-0x77c9a4bc]
  412a05:	enter  0x40d4,0xa0
  412a09:	daa    
  412a0a:	xchg   DWORD PTR [edi],esp
  412a0c:	inc    ebx
  412a0d:	sub    eax,0x7b250f06
  412a12:	push   ebp
  412a13:	or     eax,0x97f4f2d4
  412a18:	push   ebp
  412a19:	xor    DWORD PTR [esi+0x43],eax
  412a1c:	int3   
  412a1d:	jp     0x4129e0
  412a1f:	push   edi
  412a20:	inc    ecx
  412a21:	mov    ecx,0x12eae700
  412a26:	jns    0x412a95
  412a28:	add    bl,cl
  412a2a:	ins    DWORD PTR es:[edi],dx
  412a2b:	inc    edi
  412a2c:	adc    eax,0xdb513610
  412a31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a32:	outs   dx,DWORD PTR ds:[esi]
  412a33:	dec    edi
  412a34:	std    
  412a35:	xor    DWORD PTR [edi-0x72],esi
  412a38:	push   eax
  412a39:	mov    ecx,0x7e1bf3e0
  412a3e:	(bad)  
  412a40:	mov    al,ds:0xaa6827ca
  412a45:	sbb    ah,BYTE PTR [edi]
  412a47:	mov    ecx,0xaa100274
  412a4c:	pop    eax
  412a4d:	jbe    0x412a8c
  412a4f:	(bad)  
  412a50:	popa   
  412a51:	idiv   eax
  412a53:	jmp    0x412a1b
  412a55:	cmp    ch,BYTE PTR [esi-0x7248d861]
  412a5b:	outs   dx,BYTE PTR ds:[esi]
  412a5c:	(bad)  [edx+0x4882cfe9]
  412a62:	xchg   ecx,eax
  412a63:	pop    dx
  412a65:	mov    ds:0x9e195fd2,al
  412a6a:	leave  
  412a6b:	ficomp WORD PTR [ebp+0x7b]
  412a6e:	xchg   esp,eax
  412a6f:	push   esi
  412a70:	jl     0x4129fc
  412a72:	out    dx,eax
  412a73:	sar    BYTE PTR [ebx-0x489acb9f],0x47
  412a7a:	or     BYTE PTR [eax-0x36dd8b4e],0x97
  412a81:	mov    ch,0xb3
  412a83:	add    edx,ebp
  412a85:	mov    ah,0x90
  412a87:	dec    esi
  412a88:	les    edi,FWORD PTR [eax]
  412a8a:	xor    al,0xf9
  412a8c:	(bad)  
  412a8d:	sbb    al,BYTE PTR [eax-0x21]
  412a90:	loop   0x412ab0
  412a92:	pop    ebp
  412a93:	dec    ecx
  412a94:	inc    esi
  412a95:	xor    al,0x3f
  412a97:	mov    cl,0xdb
  412a99:	pop    esp
  412a9a:	jle    0x412af1
  412a9c:	xor    al,0x38
  412a9e:	pop    ds
  412a9f:	cmp    DWORD PTR [edx-0x27799929],ebp
  412aa5:	add    dl,BYTE PTR [ebp+esi*8-0x40cbf286]
  412aac:	xor    ah,al
  412aae:	cmp    DWORD PTR [edi-0x49],0x1f
  412ab2:	dec    esi
  412ab3:	add    DWORD PTR [ecx+eiz*1-0x3d],esp
  412ab7:	and    edi,DWORD PTR [ecx+ebx*4]
  412aba:	adc    dh,al
  412abc:	(bad)  
  412abd:	xor    dh,cl
  412abf:	sub    bl,ch
  412ac1:	dec    esi
  412ac2:	push   ebx
  412ac3:	mov    ah,0xa6
  412ac5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ac6:	(bad)  
  412ac7:	out    0xbd,al
  412ac9:	in     al,dx
  412aca:	mov    ds:0xb6a01dd7,al
  412acf:	icebp  
  412ad0:	mov    bl,0x23
  412ad2:	dec    ecx
  412ad3:	or     al,0x60
  412ad5:	ret    0x2b56
  412ad8:	out    dx,eax
  412ad9:	shl    DWORD PTR [esi-0x5e],cl
  412adc:	clc    
  412add:	push   ds
  412ade:	pop    eax
  412adf:	sub    ah,BYTE PTR [esi+0x6332d567]
  412ae5:	lods   eax,DWORD PTR ds:[esi]
  412ae6:	and    eax,0xe0b7ba28
  412aeb:	pop    esi
  412aec:	jge    0x412acf
  412aee:	in     eax,dx
  412aef:	leave  
  412af0:	pop    eax
  412af1:	in     eax,dx
  412af2:	mov    esp,0x445eb766
  412af7:	test   al,0x6c
  412af9:	inc    edi
  412afa:	jne    0x412b1c
  412afc:	mov    ebp,0x23f55069
  412b01:	mov    edi,0x81d8cb95
  412b06:	stos   DWORD PTR es:[edi],eax
  412b07:	call   0x331d:0x5496c20
  412b0e:	add    BYTE PTR [ecx+0x13],al
  412b11:	test   DWORD PTR [esi+0x2cea2e75],ebp
  412b17:	cmp    ebx,0x4f
  412b1a:	jno    0x412b5b
  412b1c:	lods   al,BYTE PTR ds:[esi]
  412b1d:	cmc    
  412b1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b1f:	jg     0x412ad0
  412b21:	mov    dl,BYTE PTR [ebx+0x54]
  412b24:	push   ds
  412b25:	inc    ecx
  412b26:	pop    ebp
  412b27:	mov    dl,BYTE PTR [ecx]
  412b29:	and    ch,BYTE PTR [esi-0x48]
  412b2c:	xlat   BYTE PTR ds:[ebx]
  412b2d:	pop    ecx
  412b2e:	fsub   QWORD PTR [ebp+0x55]
  412b31:	sub    al,0x5e
  412b33:	cmp    BYTE PTR [edi],al
  412b35:	cli    
  412b36:	sbb    DWORD PTR [edx-0x5e915312],ebx
  412b3c:	xchg   ebp,eax
  412b3d:	fld    TBYTE PTR [eax-0x6fc75430]
  412b43:	jecxz  0x412b87
  412b45:	scas   eax,DWORD PTR es:[edi]
  412b46:	enter  0x32e2,0x84
  412b4a:	je     0x412b64
  412b4c:	sbb    DWORD PTR [esi+0x5a],ecx
  412b4f:	pusha  
  412b50:	xchg   ebx,eax
  412b51:	sbb    eax,0x328cf100
  412b56:	sub    eax,0x78da6b8b
  412b5b:	mov    bl,0xa3
  412b5d:	and    al,0x59
  412b5f:	add    al,0x1b
  412b61:	mov    ebp,0x13d20861
  412b66:	(bad)  
  412b67:	and    bl,BYTE PTR [edx-0x10e589e2]
  412b6d:	xchg   DWORD PTR [esi],edx
  412b6f:	sbb    eax,0x316cb287
  412b74:	jae    0x412b8e
  412b76:	xchg   cl,bh
  412b78:	int    0xe4
  412b7a:	and    esi,DWORD PTR [edx-0x6390e2d6]
  412b80:	mul    BYTE PTR [ecx-0x58a2790a]
  412b86:	sub    al,BYTE PTR [ebx+0x1]
  412b89:	push   ebx
  412b8a:	xor    cl,BYTE PTR [edx]
  412b8c:	ja     0x412b25
  412b8e:	inc    esp
  412b8f:	pop    ss
  412b90:	and    cl,0xe3
  412b93:	mov    eax,ds:0x7f690d51
  412b98:	sbb    BYTE PTR [ecx+0x78],bh
  412b9b:	scas   al,BYTE PTR es:[edi]
  412b9c:	inc    eax
  412b9d:	clc    
  412b9e:	ins    BYTE PTR es:[edi],dx
  412b9f:	mov    WORD PTR [esi+edx*1+0x2040a006],gs
  412ba6:	hlt    
  412ba7:	xor    dl,ch
  412ba9:	neg    BYTE PTR [edi+0x67]
  412bac:	ds sub eax,0xdcef7470
  412bb2:	popa   
  412bb3:	in     eax,dx
  412bb4:	nop
  412bb5:	or     al,0x2c
  412bb7:	inc    ebp
  412bb8:	lods   al,BYTE PTR ds:[esi]
  412bb9:	js     0x412ba3
  412bbb:	cs jle 0x412b72
  412bbe:	adc    ebx,0xb4b0bd4e
  412bc4:	pop    ss
  412bc5:	in     eax,0x61
  412bc7:	bound  ecx,QWORD PTR [eax]
  412bc9:	inc    ecx
  412bca:	into   
  412bcb:	xor    BYTE PTR [edx],0xae
  412bce:	push   esp
  412bcf:	sub    ecx,ecx
  412bd1:	cmp    al,0x7f
  412bd3:	add    dh,BYTE PTR [edi-0x3a]
  412bd6:	icebp  
  412bd7:	std    
  412bd8:	icebp  
  412bd9:	enter  0xa2c8,0x30
  412bdd:	ins    DWORD PTR es:[edi],dx
  412bde:	ficom  WORD PTR [ebx+0x44d5eefa]
  412be4:	pushf  
  412be5:	into   
  412be6:	into   
  412be7:	and    al,0xc0
  412be9:	shl    DWORD PTR [ecx+esi*1],cl
  412bec:	dec    ebp
  412bed:	xchg   ebp,eax
  412bee:	add    BYTE PTR [edi+0x6f99737b],dl
  412bf4:	mov    dl,0x3
  412bf6:	fldl2e 
  412bf8:	pop    edx
  412bf9:	loopne 0x412c78
  412bfb:	sbb    dh,BYTE PTR [esi+0x36]
  412bfe:	inc    esp
  412bff:	aam    0x1d
  412c01:	(bad)  
  412c02:	lock rol BYTE PTR [esi+0x52],0x6b
  412c07:	call   0x7b757eef
  412c0c:	jbe    0x412bf2
  412c0e:	out    dx,al
  412c0f:	nop
  412c10:	xor    DWORD PTR [eax],0x79f7424b
  412c16:	pusha  
  412c17:	aaa    
  412c18:	xchg   esp,eax
  412c19:	pop    ebx
  412c1a:	dec    edx
  412c1b:	cs mov ch,0xe9
  412c1e:	xchg   edi,eax
  412c1f:	inc    esi
  412c20:	out    0x17,al
  412c22:	rcl    dh,1
  412c24:	dec    edx
  412c25:	retf   
  412c26:	dec    esp
  412c27:	in     al,dx
  412c28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c29:	lds    edi,FWORD PTR [eax-0x7b3b3358]
  412c2f:	adc    eax,DWORD PTR [ecx]
  412c31:	mov    cl,0xb4
  412c33:	mov    ebp,DWORD PTR [ecx+0x16]
  412c36:	pop    ebx
  412c37:	add    al,0x63
  412c39:	add    edx,DWORD PTR [esi]
  412c3b:	fnstcw WORD PTR ds:0x3fcda235
  412c41:	aam    0x97
  412c43:	(bad)  
  412c44:	daa    
  412c45:	retf   
  412c46:	jmp    0x412c79
  412c48:	push   ecx
  412c49:	(bad)  
  412c4a:	test   eax,0x61793fcb
  412c4f:	push   ebx
  412c50:	xchg   edx,eax
  412c51:	sub    esi,DWORD PTR [ecx]
  412c53:	popf   
  412c54:	xor    ecx,ecx
  412c56:	inc    esi
  412c57:	fisttp WORD PTR [ecx-0x2f922494]
  412c5d:	dec    ebx
  412c5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c5f:	out    0x53,eax
  412c61:	add    DWORD PTR [ebp-0x1f08b4a],0x79f808c7
  412c6b:	jns    0x412cc4
  412c6d:	(bad)  
  412c6e:	cmp    BYTE PTR fs:[edi+0x23],ch
  412c72:	push   edi
  412c73:	imul   eax,DWORD PTR [edx+ebp*2],0x8d48c00e
  412c7a:	je     0x412bfe
  412c7c:	in     eax,0x2f
  412c7e:	jmp    0xbf987b35
  412c83:	cwde   
  412c84:	push   es
  412c85:	std    
  412c86:	and    eax,0x47d30387
  412c8b:	mov    WORD PTR ss:[ecx+0x26fa11fc],ds
  412c92:	retf   
  412c93:	ret    0xc48c
  412c96:	ja     0x412c59
  412c98:	jecxz  0x412ccc
  412c9a:	sub    eax,0xa715ab41
  412c9f:	ror    edx,0x1f
  412ca2:	and    eax,0x8827e0e7
  412ca7:	jmp    0x81f4:0xd7762af6
  412cae:	xor    BYTE PTR [edx+0x27],al
  412cb1:	sbb    al,0x54
  412cb4:	fbstp  TBYTE PTR [eax-0x73]
  412cb7:	adc    DWORD PTR [eax],ebp
  412cb9:	and    edi,DWORD PTR [edi+ebx*4+0xab83128]
  412cc0:	outs   dx,WORD PTR ds:[esi]
  412cc2:	sar    al,cl
  412cc4:	cwde   
  412cc5:	fucomi st,st(3)
  412cc7:	dec    ebx
  412cc8:	cli    
  412cc9:	pusha  
  412cca:	call   0x82e3c054
  412ccf:	(bad)  
  412cd0:	pop    ebx
  412cd1:	sbb    al,0xdb
  412cd3:	outs   dx,DWORD PTR ds:[esi]
  412cd4:	retf   
  412cd5:	pop    ss
  412cd6:	xchg   esi,eax
  412cd7:	inc    ebp
  412cd8:	xchg   ebp,eax
  412cd9:	cmc    
  412cda:	call   0xebb6b59e
  412cdf:	arpl   WORD PTR [edx],bx
  412ce1:	shl    BYTE PTR [eax-0x785971eb],0x8c
  412ce8:	xor    DWORD PTR [eax+0x7],edi
  412ceb:	fidiv  WORD PTR [eax+0x6d]
  412cee:	aad    0x23
  412cf0:	les    esp,FWORD PTR [esp+ecx*1]
  412cf3:	gs dec edi
  412cf5:	dec    edi
  412cf6:	dec    ebp
  412cf7:	outs   dx,BYTE PTR ds:[esi]
  412cf8:	and    eax,0x401d1911
  412cfd:	aaa    
  412cfe:	cmp    ah,BYTE PTR [ebp+0x4c]
  412d01:	or     al,0x9f
  412d03:	stos   DWORD PTR es:[edi],eax
  412d04:	loope  0x412d00
  412d06:	(bad)  
  412d07:	or     esp,ecx
  412d09:	cld    
  412d0a:	fldcw  WORD PTR [edi+0x4bdb389d]
  412d10:	xchg   edx,eax
  412d11:	mov    dh,BYTE PTR [edx+0x67]
  412d14:	adc    bh,BYTE PTR [ebx]
  412d16:	jp     0x412cd5
  412d18:	xor    ebx,DWORD PTR [ebp+0x5bc836a4]
  412d1e:	sbb    eax,0x532010a8
  412d23:	push   eax
  412d24:	mov    ebx,DWORD PTR [edx-0x4431d6d2]
  412d2a:	sub    ecx,DWORD PTR [ebx+0x5f]
  412d2d:	pop    eax
  412d2e:	in     eax,0x57
  412d30:	faddp  st(5),st
  412d32:	mov    dh,0x3
  412d34:	lods   al,BYTE PTR ds:[esi]
  412d35:	ss mov esi,?
  412d38:	fwait
  412d39:	retf   0x8934
  412d3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d3d:	pop    ss
  412d3e:	cmc    
  412d3f:	mov    ebp,0x5be874bd
  412d44:	jg     0x412d80
  412d46:	pop    ss
  412d47:	nop
  412d48:	adc    BYTE PTR [esi],bl
  412d4a:	std    
  412d4b:	sti    
  412d4c:	pop    es
  412d4d:	out    dx,al
  412d4e:	push   ecx
  412d4f:	or     eax,0x861db284
  412d54:	shl    DWORD PTR [ebx+0x3ab5ebdd],0xfa
  412d5b:	sub    BYTE PTR [edx+edi*8],dl
  412d5e:	shl    BYTE PTR [ebp+edx*4+0x13],1
  412d62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d63:	pop    ecx
  412d64:	mov    ch,BYTE PTR [ebx-0x1d]
  412d67:	or     BYTE PTR [eax+0x4c],al
  412d6a:	xchg   ebp,eax
  412d6b:	inc    eax
  412d6c:	sar    DWORD PTR [edx],0x7b
  412d6f:	jge    0x412db7
  412d71:	mov    eax,ds:0xe27a2c96
  412d76:	xchg   esi,eax
  412d77:	mov    bh,0x26
  412d79:	xchg   ecx,eax
  412d7a:	xor    al,0x97
  412d7c:	push   ebp
  412d7d:	push   es
  412d7e:	retf   
  412d7f:	in     al,0xb6
  412d81:	xchg   ebx,eax
  412d82:	hlt    
  412d83:	push   ds
  412d84:	jne    0x412d51
  412d86:	les    esp,FWORD PTR [ebx-0x3c]
  412d89:	stos   DWORD PTR es:[edi],eax
  412d8a:	or     eax,0x83d86d53
  412d8f:	cli    
  412d90:	fimul  DWORD PTR [eax-0x1a]
  412d93:	repz inc edx
  412d95:	push   ss
  412d96:	retf   0x1d65
  412d99:	mov    cl,0xf7
  412d9b:	icebp  
  412d9c:	mov    ds:0x2756d081,eax
  412da1:	fs out 0x62,eax
  412da4:	out    0x9f,eax
  412da6:	sar    BYTE PTR [esi],1
  412da8:	cdq    
  412da9:	xchg   esi,eax
  412daa:	cli    
  412dab:	xchg   edi,ecx
  412dad:	cld    
  412dae:	adc    bh,bl
  412db0:	xor    BYTE PTR [esi+0x79],bh
  412db3:	div    BYTE PTR [ebx-0x38]
  412db6:	mov    ?,WORD PTR [esi-0x80]
  412db9:	(bad)  
  412dba:	pushf  
  412dbb:	jbe    0x412d7b
  412dbd:	jge    0x412d78
  412dbf:	pop    ecx
  412dc0:	and    bh,dh
  412dc2:	mov    ecx,0x55f3be8c
  412dc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412dc8:	cmp    dh,ah
  412dca:	and    bh,ah
  412dcc:	pop    esi
  412dcd:	jle    0x412de6
  412dcf:	call   0x6e382c93
  412dd4:	fwait
  412dd5:	arpl   WORD PTR [ecx-0x23],bp
  412dd8:	jne    0x412d5a
  412dda:	push   ds
  412ddb:	dec    edx
  412ddc:	push   esi
  412ddd:	push   es
  412dde:	ret    
  412ddf:	das    
  412de0:	and    BYTE PTR [ebp+0xf],bh
  412de3:	cmp    ah,BYTE PTR [bx+si+0x27c3]
  412de8:	adc    cl,dh
  412dea:	cmp    ecx,DWORD PTR gs:[eax-0x1d]
  412dee:	jnp    0x412ddd
  412df0:	and    eax,0x571e89c8
  412df5:	hlt    
  412df6:	rol    BYTE PTR [ebx-0x47],1
  412df9:	call   FWORD PTR [edx]
  412dfb:	pop    ebp
  412dfc:	adc    ebx,DWORD PTR [eax]
  412dfe:	push   esp
  412dff:	cmp    BYTE PTR [ecx-0x64],dl
  412e02:	fnstenv [ebp+eax*8-0x688d5816]
  412e09:	mov    ecx,0x91460646
  412e0e:	inc    esi
  412e0f:	mov    al,0x4
  412e11:	(bad)  
  412e12:	popa   
  412e13:	sbb    edx,0x2314ff47
  412e19:	mov    ecx,0xcd130efc
  412e1e:	cdq    
  412e1f:	xor    al,0x23
  412e21:	cmp    al,0x7f
  412e23:	shl    DWORD PTR [edi],0xb0
  412e26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e27:	sahf   
  412e28:	fwait
  412e29:	daa    
  412e2a:	test   BYTE PTR [edx],dl
  412e2c:	push   cs
  412e2d:	stos   BYTE PTR es:[edi],al
  412e2e:	(bad)  
  412e2f:	cs and eax,0x1841de19
  412e35:	mov    ecx,0xf433790b
  412e3a:	mov    eax,ds:0x7984cd0d
  412e3f:	ins    WORD PTR es:[edi],dx
  412e41:	dec    ecx
  412e42:	and    eax,DWORD PTR [ecx+edi*8-0x28280113]
  412e49:	inc    ebp
  412e4a:	push   es
  412e4b:	mov    esi,0x62dc7573
  412e50:	jae    0x412e31
  412e52:	jnp    0x412eaa
  412e54:	xchg   esi,eax
  412e55:	add    dh,BYTE PTR [ebx]
  412e57:	jmp    0x412e64
  412e59:	sbb    BYTE PTR [ebp+0x3b],al
  412e5c:	mov    dl,0xfb
  412e5e:	test   ah,ch
  412e60:	mov    ch,0xa5
  412e62:	loop   0x412ed3
  412e64:	sbb    DWORD PTR [esi+0x9],esi
  412e67:	icebp  
  412e68:	pop    esp
  412e69:	fs mov al,ch
  412e6c:	mov    al,0x5
  412e6e:	popf   
  412e6f:	aas    
  412e70:	(bad)  
  412e71:	push   ecx
  412e72:	(bad)  
  412e73:	cmp    ecx,DWORD PTR [ebx-0x58]
  412e76:	mov    edx,0x5fd028
  412e7b:	ja     0x412e17
  412e7d:	jne    0x412ec0
  412e7f:	or     BYTE PTR ss:[ebp+0x5a],bh
  412e83:	inc    eax
  412e84:	prefetch BYTE PTR [eax]
  412e87:	inc    ebx
  412e88:	sub    DWORD PTR [ebx-0x7c],eax
  412e8b:	ror    BYTE PTR [esi],0x3b
  412e8e:	xor    edx,DWORD PTR [ecx+eiz*2-0x23]
  412e92:	mov    esp,0xe84253be
  412e97:	push   0xb35fecce
  412e9c:	adc    BYTE PTR [esi],ch
  412e9e:	pushf  
  412e9f:	into   
  412ea0:	dec    edx
  412ea1:	enter  0x6f84,0x6b
  412ea5:	cmp    edx,DWORD PTR [esi-0x52]
  412ea8:	fild   QWORD PTR [edi]
  412eaa:	push   edi
  412eab:	lds    eax,FWORD PTR [esi+0x3ba09f77]
  412eb1:	cmp    DWORD PTR [esi-0x33],eax
  412eb4:	lods   al,BYTE PTR ds:[esi]
  412eb5:	cmp    BYTE PTR [esi+ebp*2-0x56],0xd8
  412eba:	test   al,0xd4
  412ebc:	jmp    0xab7fe345
  412ec1:	inc    eax
  412ec2:	cli    
  412ec3:	pusha  
  412ec4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ec5:	sbb    DWORD PTR [ecx+ebp*4-0x3b773760],ebp
  412ecc:	xchg   edx,eax
  412ecd:	es mov dh,0xb9
  412ed0:	repz add eax,edx
  412ed3:	mov    WORD PTR [edi],?
  412ed5:	push   esp
  412ed6:	xor    al,0xee
  412ed8:	imul   ebp,DWORD PTR [ebp-0x3d4ecddc],0xdd29281
  412ee2:	xor    ch,bh
  412ee4:	mov    BYTE PTR [esp+ebx*2],al
  412ee7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ee8:	outs   dx,DWORD PTR ds:[esi]
  412ee9:	aad    0xfc
  412eeb:	pushf  
  412eec:	out    0x1c,al
  412eee:	pop    esi
  412eef:	or     ecx,edx
  412ef1:	sub    bh,cl
  412ef3:	push   ebp
  412ef4:	rcr    DWORD PTR [ecx],1
  412ef6:	jbe    0x412ea2
  412ef8:	mov    cl,0x21
  412efa:	jno    0x412f15
  412efc:	mov    al,ds:0xe48fd8c2
  412f01:	mov    ds:0xdf85c0d8,al
  412f06:	loop   0x412f2c
  412f08:	(bad)  
  412f09:	push   ecx
  412f0a:	xchg   ebp,eax
  412f0b:	mov    eax,ds:0x731575a5
  412f10:	jno    0x412f85
  412f12:	jnp    0x412f79
  412f14:	fld    QWORD PTR [eax-0xe]
  412f17:	scas   al,BYTE PTR es:[edi]
  412f18:	clc    
  412f19:	std    
  412f1a:	test   al,0x4
  412f1c:	jle    0x412f51
  412f1e:	rol    dh,cl
  412f20:	cmp    BYTE PTR [edx],0x65
  412f23:	cdq    
  412f24:	retf   0x238b
  412f27:	mov    al,0x37
  412f29:	sub    DWORD PTR [esp+ebx*2+0x5d],0x56
  412f2e:	sbb    al,0xc
  412f30:	sar    BYTE PTR [edi+ecx*2+0x5a8ccdae],1
  412f37:	(bad)  
  412f38:	sbb    DWORD PTR ss:[edx-0x7142298c],edi
  412f3f:	not    BYTE PTR [esi-0xe]
  412f42:	push   ecx
  412f43:	push   cs
  412f44:	leave  
  412f45:	inc    edi
  412f46:	jbe    0x412f06
  412f48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f49:	in     al,dx
  412f4a:	sbb    DWORD PTR [ecx+0x282d20a4],ecx
  412f50:	ds pushf 
  412f52:	test   ch,0xa4
  412f55:	mov    bh,0x65
  412f57:	cmp    ebx,DWORD PTR [ecx+0x11]
  412f5a:	nop
  412f5b:	dec    esi
  412f5c:	sub    esi,edx
  412f5e:	ror    DWORD PTR [esi+0x5c],cl
  412f61:	or     ebx,DWORD PTR [esi+0x7e30d793]
  412f67:	dec    esi
  412f68:	pop    edi
  412f69:	not    ebx
  412f6b:	clc    
  412f6c:	jge    0x412f67
  412f6e:	push   ss
  412f6f:	ds in  al,0x98
  412f72:	dec    ecx
  412f73:	dec    eax
  412f74:	stos   DWORD PTR es:[edi],eax
  412f75:	es sub edi,0x27
  412f79:	and    BYTE PTR [edx-0xf],ch
  412f7c:	jns    0x412ffb
  412f7e:	adc    BYTE PTR [eax-0x10],al
  412f81:	inc    ebp
  412f82:	sbb    edx,DWORD PTR [esi-0x80]
  412f85:	dec    ecx
  412f86:	(bad)  
  412f87:	mov    ah,0xe7
  412f89:	jge    0x412fc3
  412f8b:	int3   
  412f8c:	mov    eax,0x2998ba6a
  412f91:	mov    BYTE PTR [ebx+ecx*8-0x181b612c],ch
  412f98:	rol    DWORD PTR [ecx],1
  412f9a:	add    bl,BYTE PTR [ebp+0x60]
  412f9d:	add    DWORD PTR [edi-0x59190c6f],edi
  412fa3:	pusha  
  412fa4:	xor    eax,0xe8c9ed4b
  412fa9:	loopne 0x412fcd
  412fab:	jne    0x412f5b
  412fad:	mov    bl,0x39
  412faf:	cld    
  412fb0:	push   ebp
  412fb1:	cli    
  412fb2:	inc    eax
  412fb3:	sbb    al,0x28
  412fb5:	test   DWORD PTR ds:[ecx+esi*1],esp
  412fb9:	enter  0x16e4,0xf
  412fbd:	cmp    ebx,esi
  412fbf:	scas   al,BYTE PTR es:[edi]
  412fc0:	int    0xa5
  412fc2:	enter  0xc695,0x7b
  412fc6:	out    0xfb,eax
  412fc8:	pop    ebp
  412fc9:	in     al,dx
  412fca:	push   esp
  412fcb:	xchg   DWORD PTR [ebp+0x67b52aa5],ebp
  412fd1:	ja     0x413048
  412fd3:	dec    edx
  412fd4:	adc    bl,ah
  412fd6:	push   ds
  412fd7:	repz xchg ebx,eax
  412fd9:	addr16 mov esi,0x4f6947c0
  412fdf:	div    BYTE PTR [ecx]
  412fe1:	jae    0x412fdb
  412fe3:	or     ecx,DWORD PTR [ebp-0x6ade2cc8]
  412fe9:	call   0x6346cf57
  412fee:	mov    eax,0xb620caa
  412ff3:	jno    0x412f98
  412ff5:	js     0x41302f
  412ff7:	lock dec edx
  412ff9:	push   0xffffffde
  412ffb:	xor    al,0xf8
  412ffd:	stos   DWORD PTR es:[edi],eax
  412ffe:	fmul   DWORD PTR [esp+esi*2-0x2f227078]
  413005:	int    0x9e
  413007:	and    dh,bl
  413009:	mov    cl,0x6c
  41300b:	leave  
  41300c:	adc    esi,esp
  41300e:	jnp    0x413065
  413010:	sub    DWORD PTR [edx],eax
  413012:	loopne 0x412fb1
  413014:	js     0x413089
  413016:	cmp    al,0x6b
  413018:	xchg   edi,eax
  413019:	ficom  WORD PTR [ebx-0x6bfcb4ea]
  41301f:	jbe    0x412faf
  413021:	cs ss jae 0x412fb0
  413025:	adc    ebx,DWORD PTR [eax+0x18b9e186]
  41302b:	pop    edx
  41302c:	mov    dl,0xd4
  41302e:	pop    ebp
  41302f:	ds mov esp,0x4e18eb34
  413035:	jge    0x413088
  413037:	mov    DWORD PTR [ebp-0x34de66bd],0xbab066cf
  413041:	xchg   edx,eax
  413042:	fst    QWORD PTR [esi+edi*8+0x2df0b47b]
  413049:	xchg   ebx,eax
  41304a:	(bad)  
  41304b:	enter  0x5991,0x34
  41304f:	xchg   esp,eax
  413050:	sub    DWORD PTR [ecx+0x44],ebx
  413053:	dec    esp
  413054:	lock xor al,0xfc
  413057:	jbe    0x413037
  413059:	mov    eax,fs:0xbf748e34
  41305f:	mov    WORD PTR [edx-0x46],?
  413062:	add    al,0xc0
  413064:	inc    esp
  413065:	xor    ecx,DWORD PTR [edx+0x6818e09]
  41306b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41306c:	sbb    DWORD PTR [eax+edx*2],ecx
  41306f:	out    dx,eax
  413070:	mov    ah,0xa8
  413072:	aas    
  413073:	outs   dx,BYTE PTR ds:[esi]
  413074:	outs   dx,BYTE PTR ss:[esi]
  413076:	jle    0x4130c6
  413078:	ret    0xa612
  41307b:	fs dec ecx
  41307d:	scas   eax,DWORD PTR es:[edi]
  41307e:	mov    esi,0xa70d0f4f
  413083:	pop    ss
  413084:	mov    dh,0x2e
  413086:	xor    ch,BYTE PTR [ecx-0x5718ac8]
  41308c:	mov    ss,WORD PTR [eax+0x71]
  41308f:	outs   dx,BYTE PTR ds:[esi]
  413090:	out    0x44,eax
  413092:	imul   BYTE PTR [eax-0x19]
  413095:	out    0xf,al
  413097:	mov    ecx,0x9d34e5dc
  41309c:	out    0xb0,eax
  41309e:	in     eax,dx
  41309f:	cli    
  4130a0:	adc    DWORD PTR [esi+0x3d],edi
  4130a3:	(bad)  [ebp+0x48]
  4130a6:	outs   dx,BYTE PTR ds:[esi]
  4130a7:	xchg   ecx,eax
  4130a8:	fsub   DWORD PTR [edi]
  4130aa:	and    al,BYTE PTR [ebx]
  4130ac:	inc    esi
  4130ad:	arpl   si,dx
  4130af:	push   cs
  4130b0:	pop    ds
  4130b1:	adc    BYTE PTR ds:0xd462f0b3,al
  4130b7:	pop    ebp
  4130b8:	fimul  DWORD PTR [ebx+ecx*1]
  4130bb:	xchg   ebx,eax
  4130bc:	mov    gs:0x6bcd433f,al
  4130c2:	pop    es
  4130c3:	shl    BYTE PTR [edx-0x4a011fb2],cl
  4130c9:	lahf   
  4130ca:	outs   dx,BYTE PTR ds:[esi]
  4130cb:	std    
  4130cc:	inc    esp
  4130cd:	adc    dl,BYTE PTR [esi-0x9ab24d5]
  4130d3:	xor    al,0xc4
  4130d5:	and    bl,BYTE PTR [ecx+0x2]
  4130d8:	pop    edi
  4130d9:	cld    
  4130da:	sub    BYTE PTR [eax],0x8
  4130dd:	xchg   esp,eax
  4130de:	dec    esi
  4130df:	lahf   
  4130e0:	std    
  4130e1:	aad    0xf8
  4130e3:	xor    ecx,esp
  4130e5:	mov    bh,0x93
  4130e7:	lods   eax,DWORD PTR ds:[esi]
  4130e8:	push   edx
  4130e9:	ins    BYTE PTR es:[edi],dx
  4130ea:	repz loopne 0x413163
  4130ed:	or     ecx,ebp
  4130ef:	imul   esi,DWORD PTR [ecx],0x33
  4130f2:	out    dx,eax
  4130f3:	lahf   
  4130f4:	popa   
  4130f5:	push   ds
  4130f6:	jg     0x41309b
  4130f8:	aas    
  4130f9:	sti    
  4130fa:	(bad)  
  4130fb:	xchg   ebp,eax
  4130fc:	into   
  4130fd:	cmp    eax,0x30c5696b
  413102:	jl     0x413089
  413104:	or     ah,dl
  413106:	sbb    DWORD PTR [ebx+0x67],ebp
  413109:	loopne 0x4130de
  41310b:	jecxz  0x413096
  41310d:	pop    edi
  41310e:	fidivr DWORD PTR [ebp+0x18cd9b97]
  413114:	popf   
  413115:	(bad)  
  413116:	std    
  413117:	dec    eax
  413118:	mov    dl,0x55
  41311a:	mov    eax,ds:0xd9fac4f5
  41311f:	fisttp DWORD PTR [ecx+ebx*2-0x45]
  413123:	sbb    al,0x92
  413125:	xchg   edi,eax
  413126:	clc    
  413127:	rol    BYTE PTR [ecx+0x5c],0x42
  41312b:	out    0x1d,al
  41312d:	xlat   BYTE PTR ds:[ebx]
  41312e:	add    al,BYTE PTR fs:[esi-0x57]
  413132:	fwait
  413133:	rol    DWORD PTR [ebp+0xbadd4cf],1
  413139:	xchg   dh,dh
  41313b:	js     0x413158
  41313d:	xor    ah,BYTE PTR [ecx-0x4a]
  413140:	xor    eax,0x73d3e2ea
  413145:	mov    dh,0x1a
  413147:	pop    es
  413148:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413149:	xchg   ebx,eax
  41314a:	sti    
  41314b:	call   0x3771:0x8752489c
  413152:	xchg   DWORD PTR [edx-0x40],ebx
  413155:	pop    edx
  413156:	stos   DWORD PTR es:[edi],eax
  413157:	inc    ecx
  413158:	pop    es
  413159:	fdivr  st,st(7)
  41315b:	mov    cl,BYTE PTR [ecx]
  41315d:	dec    esi
  41315e:	scas   eax,DWORD PTR es:[edi]
  41315f:	sti    
  413160:	in     al,0x41
  413162:	aaa    
  413163:	aad    0x9
  413165:	retf   0x9023
  413168:	sar    ebx,0x51
  41316b:	jle    0x4131da
  41316d:	in     eax,dx
  41316e:	and    DWORD PTR [eax+0x46],ebx
  413171:	int    0xbc
  413173:	add    BYTE PTR [edx],dl
  413175:	adc    DWORD PTR [ecx-0x46],ebp
  413178:	sbb    edi,DWORD PTR [esi]
  41317a:	adc    al,0x3a
  41317c:	jno    0x41314b
  41317e:	outs   dx,DWORD PTR ds:[esi]
  41317f:	inc    ebp
  413180:	adc    eax,0x97a73caf
  413185:	aad    0x45
  413187:	not    BYTE PTR [esi]
  413189:	mov    dl,BYTE PTR [esi+eax*2-0x4e77cb32]
  413190:	(bad)  
  413191:	jbe    0x413201
  413193:	or     BYTE PTR [ebp-0x79],bh
  413196:	and    al,0xfa
  413198:	jbe    0x413173
  41319a:	and    esp,ecx
  41319c:	pop    esi
  41319d:	jae    0x41318a
  41319f:	test   BYTE PTR [edx-0x5afba065],al
  4131a5:	pop    ss
  4131a6:	pop    ecx
  4131a7:	int    0x3c
  4131a9:	fdiv   DWORD PTR [edx+0x54]
  4131ac:	mov    ecx,0x9d6a62a7
  4131b1:	jmp    0x413136
  4131b3:	jmp    0x41319c
  4131b5:	ins    DWORD PTR es:[edi],dx
  4131b6:	inc    cx
  4131b8:	imul   ebp,ebx,0xffffff9b
  4131bb:	sbb    dl,BYTE PTR [ecx]
  4131bd:	je     0x413185
  4131bf:	pop    ss
  4131c0:	mov    edx,0x171c8c63
  4131c5:	iret   
  4131c6:	xchg   ecx,eax
  4131c7:	jp     0x4131ea
  4131c9:	jne    0x413247
  4131cb:	loopne 0x4131e4
  4131cd:	xchg   esp,eax
  4131ce:	(bad)  
  4131cf:	nop
  4131d0:	shl    BYTE PTR ds:0xa76b3f17,cl
  4131d6:	aaa    
  4131d7:	scas   eax,DWORD PTR es:[edi]
  4131d8:	ins    BYTE PTR es:[edi],dx
  4131d9:	sbb    ecx,DWORD PTR [eax]
  4131db:	stos   BYTE PTR es:[edi],al
  4131dc:	add    DWORD PTR [esi+0x7c],ebx
  4131df:	iret   
  4131e0:	xchg   ebp,eax
  4131e1:	cmp    edx,DWORD PTR [ebp+0x58997d59]
  4131e7:	pop    ebp
  4131e8:	mov    ds:0xc30dd831,al
  4131ed:	(bad)  
  4131ef:	ret    
  4131f0:	loopne 0x4131f2
  4131f2:	mov    cl,0x5b
  4131f4:	mov    esp,0x7f1a7497
  4131f9:	xchg   esi,eax
  4131fa:	inc    edx
  4131fb:	inc    eax
  4131fc:	dec    esi
  4131fd:	ds neg ch
  413200:	mov    edx,0x5364709f
  413205:	xchg   esi,eax
  413206:	and    ah,BYTE PTR [edi-0x51]
  413209:	test   DWORD PTR [eax],ebx
  41320b:	jl     0x41326b
  41320d:	push   cs
  41320e:	(bad)  [ecx+edx*1-0x5f]
  413212:	ss lahf 
  413214:	(bad)  
  413215:	jbe    0x413209
  413217:	inc    eax
  413218:	repz mov al,ds:0xedc14037
  41321e:	gs ret 0xa59f
  413222:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413223:	dec    esi
  413224:	cwde   
  413225:	sbb    DWORD PTR [esi+0x2a6a2386],0xdbd200d7
  41322f:	sub    BYTE PTR [edi-0x3],dh
  413232:	dec    esp
  413233:	sub    al,BYTE PTR [eax]
  413235:	mov    esp,0xaf667653
  41323a:	add    DWORD PTR [esi+edx*2],edi
  41323d:	mov    DWORD PTR [ebx+0x4c],edi
  413240:	shl    DWORD PTR [ebx],1
  413242:	jp     0x4131df
  413244:	pusha  
  413245:	xchg   ebp,eax
  413246:	sbb    ebp,ecx
  413248:	fild   QWORD PTR [ebx]
  41324a:	push   es
  41324b:	std    
  41324c:	jmp    0x413253
  41324e:	test   eax,0x4193cb70
  413253:	fcompp 
  413255:	ss inc ebp
  413257:	inc    dx
  413259:	cdq    
  41325a:	(bad)  
  41325b:	loopne 0x41320a
  41325d:	fbstp  TBYTE PTR [eax-0x3603ad8d]
  413263:	inc    eax
  413264:	xchg   esp,eax
  413265:	xchg   DWORD PTR [ebx-0xf],ecx
  413268:	xchg   edx,eax
  413269:	add    al,0xe7
  41326b:	cmp    al,0xca
  41326d:	enter  0x7e0c,0x45
  413271:	mov    edx,0x37ba113f
  413276:	fisubr DWORD PTR [edi+0x3118317d]
  41327c:	mov    ch,0x6c
  41327e:	les    ebp,FWORD PTR [ebx+0x7456e2e8]
  413284:	dec    ebp
  413285:	jecxz  0x4132bb
  413287:	cmp    esp,eax
  413289:	or     ch,cl
  41328b:	test   BYTE PTR [esi+0x36de9fc6],dh
  413291:	mov    ah,0x13
  413293:	xchg   BYTE PTR [esi+0x2cb9cb1c],bh
  413299:	rol    DWORD PTR [esi+0x49684934],0x7a
  4132a0:	xchg   esp,eax
  4132a1:	fimul  DWORD PTR fs:[eax-0x6440c018]
  4132a8:	sti    
  4132a9:	cwde   
  4132aa:	mov    ?,WORD PTR [esi+0x7e813e27]
  4132b0:	fcomp  DWORD PTR [eax+0x7b10470a]
  4132b6:	or     BYTE PTR [edi],ch
  4132b8:	ins    BYTE PTR es:[edi],dx
  4132b9:	inc    esp
  4132ba:	icebp  
  4132bb:	out    dx,eax
  4132bc:	int3   
  4132bd:	rcl    BYTE PTR [esi+0x44a78f60],1
  4132c3:	inc    ebp
  4132c4:	xor    edx,esp
  4132c6:	pop    ebp
  4132c7:	push   ds
  4132c8:	aaa    
  4132c9:	pop    esi
  4132ca:	mov    ds:0x8f8521cf,al
  4132cf:	inc    BYTE PTR [ecx]
  4132d1:	addr16 and ebx,ecx
  4132d4:	mov    eax,0x8cccb862
  4132d9:	xor    DWORD PTR [edx-0x3c2d1235],ebx
  4132df:	fistp  WORD PTR [esi+0x745f24cb]
  4132e5:	dec    esi
  4132e6:	out    0x2d,al
  4132e8:	xlat   BYTE PTR ds:[ebx]
  4132e9:	mov    edx,0xfdb62e51
  4132ee:	cld    
  4132ef:	lods   al,BYTE PTR ds:[esi]
  4132f0:	hlt    
  4132f1:	adc    DWORD PTR [edx-0x31],0xd3bac6a3
  4132f8:	sahf   
  4132f9:	aam    0x68
  4132fb:	and    ebp,ebp
  4132fd:	xor    esp,edi
  4132ff:	dec    edi
  413300:	loope  0x41336f
  413302:	daa    
  413303:	repz pop ebp
  413305:	add    eax,0x9c02ec17
  41330a:	and    ebp,ebx
  41330c:	es mov ecx,0x7ba52ae2
  413312:	rcl    edx,1
  413314:	aam    0x41
  413316:	mov    al,0xfa
  413318:	stos   DWORD PTR es:[edi],eax
  413319:	xor    al,dh
  41331b:	sub    BYTE PTR [edi],ch
  41331d:	xchg   edx,eax
  41331e:	jo     0x413316
  413320:	rcr    BYTE PTR [edx+0x1f9381c0],cl
  413326:	xchg   edx,eax
  413327:	repz adc DWORD PTR [ecx-0x20222ed],0x6ff44c94
  413332:	out    dx,al
  413333:	int3   
  413334:	rol    BYTE PTR [ecx],1
  413336:	adc    eax,0x842aff7e
  41333b:	sbb    al,0xd1
  41333d:	dec    ebp
  41333e:	jg     0x41335a
  413340:	aas    
  413341:	les    esi,FWORD PTR [eax-0x64dd5b80]
  413347:	test   eax,0xc654cc0f
  41334c:	(bad)  
  41334d:	or     al,0x24
  41334f:	cdq    
  413350:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413351:	scas   al,BYTE PTR es:[edi]
  413352:	shl    BYTE PTR [ebp-0x44],cl
  413355:	ret    
  413356:	push   ebx
  413357:	mov    edx,0x23959cef
  41335c:	mov    bh,0xd0
  41335e:	add    eax,0xf083ac91
  413363:	jo     0x41337d
  413365:	pop    eax
  413366:	sbb    BYTE PTR [ecx],al
  413368:	repnz xchg ebp,eax
  41336a:	daa    
  41336b:	push   0x11501d38
  413370:	mov    esi,0x471eca3
  413375:	dec    esp
  413376:	lock push es
  413378:	scas   al,BYTE PTR es:[edi]
  413379:	dec    esi
  41337a:	loop   0x413334
  41337c:	jmp    0xdc98f662
  413381:	mov    dh,0x8e
  413383:	add    DWORD PTR [edx+edx*8-0x8c15e7f],ecx
  41338a:	stos   BYTE PTR es:[edi],al
  41338b:	call   0x150245ce
  413390:	xlat   BYTE PTR ds:[ebx]
  413391:	retf   0x6305
  413394:	enter  0x6a4b,0x71
  413398:	stos   BYTE PTR es:[edi],al
  413399:	or     cl,BYTE PTR [esi]
  41339b:	cmp    al,0x87
  41339d:	push   0x13
  41339f:	imul   DWORD PTR [edi]
  4133a1:	push   ds
  4133a2:	pop    eax
  4133a3:	stos   DWORD PTR es:[edi],eax
  4133a4:	add    eax,0x3053f2f8
  4133a9:	xor    BYTE PTR [ebx],dh
  4133ab:	scas   eax,DWORD PTR es:[edi]
  4133ac:	into   
  4133ad:	rcr    DWORD PTR [edi-0x2d],1
  4133b0:	(bad)  
  4133b2:	call   0xe541cabb
  4133b7:	adc    DWORD PTR [edx+0x18],esp
  4133ba:	aas    
  4133bb:	sub    BYTE PTR [eax],bh
  4133bd:	mov    bh,0xa4
  4133bf:	add    DWORD PTR [ecx+0xccc2dc2],edx
  4133c5:	pop    ebp
  4133c6:	xor    esi,DWORD PTR [edi-0x70b31a0d]
  4133cc:	(bad)  
  4133cd:	pop    edx
  4133ce:	shr    BYTE PTR [edx+0x6d],cl
  4133d1:	xor    DWORD PTR [edx+0x2e],ebx
  4133d4:	int3   
  4133d5:	sub    esi,DWORD PTR [edx+ecx*1-0x68]
  4133d9:	stos   DWORD PTR es:[edi],eax
  4133da:	cs cwde 
  4133dc:	test   eax,0x64cf13dc
  4133e1:	not    ecx
  4133e3:	jns    0x41340c
  4133e5:	sub    eax,0xcb58da6c
  4133ea:	out    0xf9,al
  4133ec:	bound  esi,QWORD PTR [ebx-0x209318c8]
  4133f2:	xchg   DWORD PTR [ebx-0x3c],edi
  4133f5:	adc    BYTE PTR [esp+ebp*2+0x73],ch
  4133f9:	cmp    ch,BYTE PTR [ecx-0x73]
  4133fc:	jae    0x413454
  4133fe:	call   0x79c5f825
  413403:	mov    esp,0x3349aa00
  413408:	cld    
  413409:	jmp    0xd4d3:0x3b0a9b76
  413410:	cmp    dh,ch
  413412:	dec    DWORD PTR [esi+0x65]
  413415:	jns    0x413414
  413417:	dec    esp
  413418:	xor    al,0x70
  41341a:	leave  
  41341b:	in     eax,dx
  41341c:	mov    edx,cs
  41341e:	popa   
  41341f:	cs ret 
  413421:	(bad)  
  413422:	mov    ebp,0x518a7564
  413427:	push   esp
  413428:	loope  0x413454
  41342a:	test   al,0xa8
  41342c:	or     esi,DWORD PTR [esi-0x34]
  41342f:	fmul   QWORD PTR [edi-0x10]
  413432:	pop    edx
  413433:	xchg   ch,dh
  413435:	sbb    bl,BYTE PTR [edi]
  413437:	out    0x17,eax
  413439:	push   edx
  41343a:	add    al,BYTE PTR [esi]
  41343c:	pop    eax
  41343d:	cmc    
  41343e:	xor    eax,0xf715f281
  413443:	push   edx
  413444:	adc    esi,0xffffffa9
  413447:	cmp    DWORD PTR [edx+0x44],0x3413d3e6
  41344e:	mov    esp,DWORD PTR [ecx]
  413450:	jmp    0xf78a:0x8a7e3a69
  413457:	or     DWORD PTR [ebx+eiz*1-0xf],edx
  41345b:	adc    edi,DWORD PTR [edi-0x78]
  41345e:	and    eax,0x57ffc759
  413463:	mov    dh,dl
  413465:	cdq    
  413466:	jp     0x4134a9
  413468:	dec    edi
  413469:	inc    esi
  41346a:	pop    edx
  41346b:	jns    0x4134a0
  41346d:	inc    esi
  41346e:	outs   dx,DWORD PTR ds:[esi]
  41346f:	aad    0xb9
  413471:	inc    DWORD PTR [ecx-0x76]
  413474:	cmp    DWORD PTR [esi-0x379f0dc4],esi
  41347a:	div    BYTE PTR [ebp+0x38]
  41347d:	in     eax,0xa
  41347f:	xor    eax,0x3bca3f73
  413484:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413485:	mov    bh,0xec
  413487:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413488:	or     DWORD PTR [esi],0x35e4adb6
  41348e:	stos   BYTE PTR es:[edi],al
  41348f:	mov    edi,0xaeac4786
  413494:	jle    0x4134eb
  413496:	inc    ecx
  413497:	adc    edi,DWORD PTR [eax]
  413499:	sbb    eax,DWORD PTR [esi]
  41349b:	xor    BYTE PTR [edx+esi*2],ch
  41349e:	lahf   
  41349f:	cmp    BYTE PTR [esi],bh
  4134a1:	sbb    DWORD PTR [esi],edx
  4134a3:	push   esi
  4134a4:	pop    esi
  4134a5:	in     al,0x32
  4134a7:	sahf   
  4134a8:	dec    esi
  4134a9:	adc    bh,BYTE PTR [ebp+edx*1+0x7]
  4134ad:	or     edi,esi
  4134af:	xchg   BYTE PTR [eax],dl
  4134b1:	push   ebp
  4134b2:	rol    DWORD PTR [ebx+0x76724a95],cl
  4134b8:	shl    ch,cl
  4134ba:	lahf   
  4134bb:	push   0x1
  4134bd:	cmp    BYTE PTR [edx-0x30d4a0ab],al
  4134c3:	jg     0x41345a
  4134c5:	xchg   ebp,eax
  4134c6:	dec    ebx
  4134c7:	je     0xc22242f6
  4134cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134ce:	adc    BYTE PTR [ebp-0x16],cl
  4134d1:	jg     0x413535
  4134d3:	cmp    DWORD PTR ds:[ecx+0x6bcc38dc],ebp
  4134da:	dec    ecx
  4134db:	add    al,0x73
  4134dd:	rcr    BYTE PTR [edx-0x67],cl
  4134e0:	inc    edi
  4134e1:	cli    
  4134e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134e3:	popf   
  4134e4:	or     DWORD PTR [ecx+0x4b],ecx
  4134e7:	xchg   edi,eax
  4134e8:	mov    dh,BYTE PTR [ebp+0x45152423]
  4134ee:	add    BYTE PTR [ecx+0x39112b0a],cl
  4134f4:	fldenv [edx-0x58]
  4134f7:	adc    BYTE PTR [edi+0x37bcd7db],dl
  4134fd:	dec    edx
  4134fe:	ss fdivrp st(7),st
  413501:	ss pop eax
  413503:	pop    ebp
  413504:	ret    
  413505:	ror    BYTE PTR [ebp-0x15ef686f],cl
  41350b:	dec    ecx
  41350c:	mov    bh,0xab
  41350e:	das    
  41350f:	adc    BYTE PTR ds:0xb898,dl
  413514:	or     bh,bh
  413516:	pop    eax
  413517:	in     eax,dx
  413518:	xor    ebx,DWORD PTR ds:0x83956a99
  41351e:	aaa    
  41351f:	rol    DWORD PTR [eax],0xc6
  413522:	(bad)  
  413523:	leave  
  413524:	retf   
  413525:	dec    DWORD PTR [edi+0x4935bf58]
  41352b:	adc    al,0xda
  41352d:	mov    edi,0xe2c41c92
  413532:	and    BYTE PTR [edx],0x75
  413535:	cmp    al,0xda
  413538:	pop    ebp
  413539:	push   esp
  41353a:	adc    bh,BYTE PTR [ebx]
  41353c:	sbb    BYTE PTR [ecx],bl
  41353e:	aaa    
  41353f:	mov    al,ds:0xeb21f9e6
  413544:	ret    0x6a19
  413547:	ret    
  413548:	xor    ebx,edx
  41354a:	xchg   DWORD PTR [edx+0x72],edi
  41354d:	add    BYTE PTR [edi],bh
  41354f:	push   edi
  413550:	shr    BYTE PTR [edi-0x49bc36b4],0x20
  413557:	xchg   esi,eax
  413558:	fld    QWORD PTR [esi-0xdf03764]
  41355e:	dec    ebx
  41355f:	into   
  413560:	in     eax,0x6
  413562:	jmp    0x41354b
  413564:	sbb    dl,ch
  413566:	mov    ah,0x42
  413568:	clc    
  413569:	pop    edi
  41356a:	call   0xdf2ee317
  41356f:	add    al,BYTE PTR [edx+0x649cf65f]
  413575:	xchg   DWORD PTR [esi-0x23bb68b3],esp
  41357b:	mov    esp,0xeb22e403
  413580:	fst    QWORD PTR [esi+0x3b]
  413583:	rol    BYTE PTR [ebx+edx*1+0x1901a167],0xee
  41358b:	push   esp
  41358c:	cmp    al,0x9d
  41358e:	int    0x3a
  413590:	add    DWORD PTR [edx-0x521a6187],0xffffffac
  413597:	pop    esi
  413598:	mov    al,0x7d
  41359a:	fld    st(7)
  41359c:	pushf  
  41359d:	js     0x4135e2
  41359f:	jmp    0x41358e
  4135a1:	jno    0x4135ad
  4135a3:	bound  esi,QWORD PTR [esi+0x26]
  4135a6:	sub    BYTE PTR [eax+0x15],al
  4135a9:	neg    BYTE PTR [edx-0x7]
  4135ac:	xor    ah,BYTE PTR [esi]
  4135ae:	loope  0x413625
  4135b0:	mov    edi,cs
  4135b2:	wbinvd 
  4135b4:	lahf   
  4135b5:	xchg   edx,edi
  4135b7:	aas    
  4135b8:	cdq    
  4135b9:	fidiv  DWORD PTR [esp+ebx*2+0x71]
  4135bd:	int    0x47
  4135bf:	xor    al,0xa
  4135c1:	shr    al,cl
  4135c3:	pop    ebp
  4135c4:	mov    bl,ch
  4135c6:	sahf   
  4135c7:	es pushf 
  4135c9:	iret   
  4135ca:	xchg   edx,eax
  4135cb:	or     ebx,DWORD PTR [edi+eiz*2]
  4135ce:	repz jge 0x41356d
  4135d1:	fiadd  WORD PTR [ebx+0x3f]
  4135d4:	ficomp DWORD PTR [edi+0x7cb2a53]
  4135da:	adc    bl,ch
  4135dc:	mov    al,0x92
  4135de:	lds    esp,FWORD PTR [ebp+0x2c]
  4135e1:	loopne 0x4135d6
  4135e3:	and    ecx,ecx
  4135e5:	cmp    eax,0x95b26d2d
  4135ea:	mov    ebp,0x9af1036e
  4135ef:	or     DWORD PTR [edx+ebx*1-0x5f],edx
  4135f3:	mov    eax,0x8c040d4e
  4135f8:	not    ebp
  4135fa:	bound  esp,QWORD PTR [esi-0x5a]
  4135fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135fe:	mov    al,0x75
  413600:	jae    0x41364e
  413602:	sahf   
  413603:	inc    ecx
  413604:	inc    bh
  413606:	ds mov bh,0xea
  413609:	aam    0xe9
  41360b:	sti    
  41360c:	out    0xc0,eax
  41360e:	out    dx,al
  41360f:	nop
  413610:	sub    ebp,eax
  413612:	cmp    BYTE PTR [eax+0x1f],0x2c
  413616:	das    
  413617:	push   esp
  413618:	fcmovnb st,st(3)
  41361a:	sbb    eax,ecx
  41361c:	lods   eax,DWORD PTR ds:[esi]
  41361d:	out    dx,al
  41361e:	pop    esi
  41361f:	or     DWORD PTR [ecx],ecx
  413621:	cmp    al,0xb3
  413623:	shr    BYTE PTR [ecx-0x76],0x10
  413627:	popf   
  413628:	sub    al,0xe9
  41362a:	or     edi,edx
  41362c:	cwde   
  41362d:	in     eax,0x14
  41362f:	ss iret 
  413631:	test   DWORD PTR [esi+0x53],ecx
  413634:	dec    esi
  413635:	and    BYTE PTR [ebp+0x7ff4d451],ch
  41363b:	loope  0x4135ed
  41363d:	inc    ebp
  41363e:	xchg   DWORD PTR [edi-0x6e6bf3d5],esp
  413644:	cmp    DWORD PTR [eax],eax
  413646:	je     0x4136c6
  413648:	jmp    0xcf580495
  41364d:	inc    ebp
  41364e:	stc    
  41364f:	sub    DWORD PTR [edi-0x1e6a40ce],esp
  413655:	sub    al,0x1e
  413657:	pop    esp
  413658:	pushf  
  413659:	out    dx,eax
  41365a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41365b:	pop    edi
  41365c:	fadd   DWORD PTR [eax+0x2e42a501]
  413662:	(bad)  
  413663:	cld    
  413664:	test   BYTE PTR [edi-0x7b0adc74],bh
  41366a:	mov    bh,0xd5
  41366c:	jecxz  0x4136e9
  41366e:	stos   DWORD PTR es:[edi],eax
  41366f:	inc    edx
  413670:	es xor al,0xf1
  413673:	ret    
  413674:	aam    0x7b
  413676:	adc    BYTE PTR [eax-0x1c],dl
  413679:	iret   
  41367a:	jecxz  0x4136c8
  41367c:	xor    eax,0xf8c4d81d
  413681:	cmovle esp,edx
  413684:	xor    BYTE PTR [esi-0x4c],0xd1
  413688:	dec    edx
  413689:	stos   DWORD PTR es:[edi],eax
  41368a:	aam    0xf4
  41368c:	inc    edi
  41368d:	popf   
  41368e:	fcmovb st,st(3)
  413690:	xor    ch,BYTE PTR [ebx]
  413692:	push   cs
  413693:	popa   
  413694:	jg     0x4136b5
  413696:	aas    
  413697:	clc    
  413698:	or     BYTE PTR [eax-0x74e16585],dh
  41369e:	xor    al,BYTE PTR [eax-0x714e2a46]
  4136a4:	sti    
  4136a5:	fidivr WORD PTR [edi+0x1c]
  4136a8:	sti    
  4136a9:	cwde   
  4136aa:	push   ecx
  4136ab:	jmp    0xc20a7214
  4136b0:	add    eax,0xbf738845
  4136b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136b6:	jle    0x4136e1
  4136b8:	lahf   
  4136b9:	das    
  4136ba:	ret    0x20f1
  4136bd:	fs pushf 
  4136bf:	xor    bl,BYTE PTR [ebx+eiz*4-0x440b8cac]
  4136c6:	dec    eax
  4136c7:	icebp  
  4136c8:	mov    ebx,DWORD PTR [edi+ecx*1-0x48]
  4136cc:	dec    esi
  4136cd:	les    edx,FWORD PTR [eax+ebp*8-0x213978fc]
  4136d4:	(bad)  [eax+0x10]
  4136d7:	push   ds
  4136d8:	jo     0x413736
  4136da:	pslld  mm2,QWORD PTR [ecx-0x10]
  4136de:	pop    ebp
  4136df:	inc    esp
  4136e0:	(bad)
  4136e3:	jae    0x41371d
  4136e5:	pop    ds
  4136e6:	test   DWORD PTR [eax],esp
  4136e8:	(bad)  
  4136e9:	push   ecx
  4136ea:	sub    BYTE PTR [eax+0x10],ch
  4136ed:	xchg   BYTE PTR [esi],al
  4136ef:	call   0xa6d8785e
  4136f4:	mov    eax,ds:0xad235798
  4136f9:	and    BYTE PTR [eax],0xdd
  4136fc:	aaa    
  4136fd:	mov    ah,0x40
  4136ff:	(bad)  
  413700:	scas   eax,DWORD PTR es:[edi]
  413701:	pusha  
  413702:	jne    0x41368c
  413704:	outs   dx,DWORD PTR ds:[esi]
  413705:	bound  esi,QWORD PTR [bx-0x7e4]
  41370a:	sub    bl,BYTE PTR [edi-0x4f04b898]
  413710:	cli    
  413711:	mov    ah,0xd0
  413713:	pusha  
  413714:	mov    ds:0x33d2a83c,eax
  413719:	and    al,0x75
  41371b:	mov    ?,WORD PTR [ebp-0x6c1bcd1c]
  413721:	pop    ss
  413722:	sub    cl,cl
  413724:	pop    edi
  413725:	daa    
  413726:	sub    al,cl
  413728:	adc    eax,0xe869f34f
  41372d:	jp     0x413799
  41372f:	sar    DWORD PTR [ecx+ebp*1+0x85e1aee],0x5
  413737:	dec    ecx
  413738:	xchg   ecx,eax
  413739:	push   ecx
  41373a:	jns    0x4136de
  41373c:	cmc    
  41373d:	push   ds
  41373e:	pop    edx
  41373f:	inc    edx
  413740:	ret    0xbb00
  413743:	xchg   DWORD PTR [edx+0x3e],eax
  413746:	(bad)  
  413747:	and    dl,BYTE PTR [edx]
  413749:	pop    ebp
  41374a:	rcr    DWORD PTR [ebp+0x17bf49de],0x73
  413751:	je     0x4136d8
  413753:	and    al,0x43
  413755:	jne    0x41372c
  413757:	pop    edi
  413758:	scas   al,BYTE PTR es:[edi]
  413759:	jmp    0x2657df5
  41375e:	xor    edi,edx
  413760:	icebp  
  413761:	lods   al,BYTE PTR ds:[esi]
  413762:	lods   eax,DWORD PTR ds:[esi]
  413763:	or     DWORD PTR [eax-0x3fd603d3],0xffffffa1
  41376a:	outs   dx,BYTE PTR ds:[esi]
  41376b:	(bad)  
  41376d:	push   edx
  41376e:	push   edx
  41376f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413770:	or     BYTE PTR [eax],ch
  413772:	lods   eax,DWORD PTR ds:[esi]
  413773:	inc    edx
  413774:	ins    DWORD PTR es:[edi],dx
  413775:	mov    bh,0x43
  413777:	dec    esi
  413778:	in     al,dx
  413779:	pop    edi
  41377a:	jmp    0xbae4360e
  41377f:	mov    bl,0x7
  413781:	sub    ecx,ebp
  413783:	repz fdiv DWORD PTR [eax+0xb]
  413787:	pusha  
  413788:	mov    cl,0x3f
  41378a:	mov    ?,WORD PTR ds:0x3fe7070e
  413790:	inc    ecx
  413791:	(bad)  
  413792:	fiadd  WORD PTR [eax]
  413794:	dec    edi
  413795:	icebp  
  413796:	sub    eax,0x923050da
  41379b:	aaa    
  41379c:	stos   DWORD PTR es:[edi],eax
  41379d:	mov    esi,0xa3c2baa5
  4137a2:	pop    es
  4137a3:	mov    dh,0x86
  4137a5:	pop    ss
  4137a6:	retf   
  4137a7:	xor    eax,0x2b719ce9
  4137ac:	jmp    DWORD PTR [edx-0xe]
  4137af:	das    
  4137b0:	clc    
  4137b1:	or     dl,BYTE PTR [ebp-0x7d]
  4137b4:	aam    0x90
  4137b6:	outs   dx,BYTE PTR ds:[esi]
  4137b7:	sub    al,0x1d
  4137b9:	pop    esi
  4137ba:	into   
  4137bb:	into   
  4137bc:	(bad)  
  4137bd:	mov    ecx,0xb5c15432
  4137c2:	mov    bh,0x9b
  4137c4:	mov    cl,BYTE PTR [eax-0x60a70135]
  4137ca:	out    dx,eax
  4137cb:	cmp    ebx,esp
  4137cd:	fld    DWORD PTR [ebx+edi*8-0x31bb018c]
  4137d4:	pop    esp
  4137d5:	jg     0x4137a0
  4137d7:	(bad)  
  4137d8:	xor    al,0x3d
  4137da:	xor    al,0xd
  4137dc:	retf   
  4137dd:	and    dl,BYTE PTR [esi+0x2284e1f6]
  4137e3:	out    dx,al
  4137e4:	arpl   di,sp
  4137e6:	lock jge 0x4137df
  4137e9:	rcr    dh,0x7e
  4137ec:	fild   DWORD PTR [ebx-0x2e64c040]
  4137f2:	(bad)  [edx-0x2820d940]
  4137f8:	cmp    eax,0x819dc176
  4137fd:	xchg   ecx,eax
  4137fe:	dec    ebx
  4137ff:	test   al,0x5
  413801:	pop    ecx
  413802:	inc    ecx
  413803:	mov    esp,0x9d406739
  413808:	add    eax,0x5feae2eb
  41380d:	daa    
  41380e:	adc    BYTE PTR [edi],0x87
  413811:	adc    al,0x30
  413813:	gs add eax,0xc87d2892
  413819:	addr16 add eax,0xff1be761
  41381f:	lods   al,BYTE PTR ds:[esi]
  413820:	retf   
  413821:	cli    
  413822:	scas   eax,DWORD PTR es:[edi]
  413823:	pop    eax
  413824:	push   0x9063be95
  413829:	cmc    
  41382a:	xchg   edi,eax
  41382b:	in     al,0x4d
  41382d:	mov    ebx,0x3096443a
  413832:	call   FWORD PTR [ebx]
  413834:	dec    edi
  413835:	outs   dx,DWORD PTR ds:[esi]
  413836:	sub    al,0xc9
  413838:	test   BYTE PTR [esi-0x4b6aff9e],0x8d
  41383f:	push   esi
  413840:	dec    edi
  413841:	stos   BYTE PTR es:[edi],al
  413842:	inc    esp
  413843:	dec    edx
  413844:	pusha  
  413845:	cmp    esp,DWORD PTR [ecx]
  413847:	daa    
  413848:	icebp  
  413849:	xor    eax,DWORD PTR [edi-0x7e]
  41384c:	or     eax,0x54270163
  413851:	daa    
  413852:	lods   eax,DWORD PTR ds:[esi]
  413853:	pop    ecx
  413854:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413855:	mov    ebp,DWORD PTR [ebp+0x2]
  413858:	stc    
  413859:	jno    0x4137f1
  41385b:	pushf  
  41385c:	loopne 0x413819
  41385e:	cli    
  41385f:	adc    BYTE PTR [eax],ch
  413861:	fisub  DWORD PTR [eax]
  413863:	sub    BYTE PTR [edx+0x12],cl
  413866:	mov    eax,ds:0x59248611
  41386b:	mov    ebp,0xdb077934
  413870:	mov    edi,DWORD PTR [ecx]
  413872:	cdq    
  413873:	mov    ch,cl
  413875:	ret    0x76c4
  413878:	(bad)  
  413879:	int    0xb2
  41387b:	xchg   ebx,eax
  41387c:	xchg   esi,eax
  41387d:	push   0x5dfa73d4
  413882:	cmp    ch,bh
  413884:	shl    BYTE PTR [ebp-0x505916a8],0xd7
  41388b:	(bad)  
  41388c:	or     eax,0x6f97cc88
  413891:	and    eax,DWORD PTR [edi+0x508cbbc5]
  413897:	mov    esi,0xbc1b0621
  41389c:	jb     0x4138d8
  41389e:	push   edi
  41389f:	(bad)  
  4138a2:	inc    esp
  4138a3:	and    ebx,edx
  4138a5:	inc    edi
  4138a6:	das    
  4138a7:	push   ebp
  4138a8:	call   0xd8b083cd
  4138ad:	stos   BYTE PTR es:[edi],al
  4138ae:	out    0x33,al
  4138b0:	xchg   esp,eax
  4138b1:	pop    esp
  4138b2:	test   al,0xd7
  4138b4:	xor    ebx,DWORD PTR [ecx+0x40a99155]
  4138ba:	sub    ebx,DWORD PTR [esi-0x7d]
  4138bd:	pop    es
  4138be:	cdq    
  4138bf:	or     al,0x3b
  4138c1:	idiv   BYTE PTR [ebp+ecx*2+0xbc8e4a2]
  4138c8:	int3   
  4138c9:	psraw  mm1,QWORD PTR [edi]
  4138cc:	fist   WORD PTR [ebx-0x5b]
  4138cf:	out    0x96,al
  4138d1:	xchg   BYTE PTR [edi],dh
  4138d3:	mul    DWORD PTR ds:0x9aaa93ab
  4138d9:	pop    edx
  4138da:	mov    ds:0x1b39fb44,al
  4138df:	leave  
  4138e0:	adc    eax,0x9ef761b1
  4138e5:	in     eax,0x37
  4138e7:	sbb    eax,0xb92503d2
  4138ec:	out    dx,eax
  4138ed:	enter  0xdf00,0xde
  4138f1:	scas   al,BYTE PTR es:[edi]
  4138f2:	mov    dh,0xe5
  4138f4:	stos   BYTE PTR es:[edi],al
  4138f5:	pop    edx
  4138f6:	mov    DWORD PTR [edx+eiz*8+0x4c2f824a],eax
  4138fd:	cmp    al,0xcf
  4138ff:	mov    al,0x4d
  413901:	loop   0x41394c
  413903:	add    DWORD PTR [eax-0x71],ecx
  413906:	jge    0x41388a
  413908:	mov    dl,0x93
  41390a:	(bad)  
  41390b:	sub    eax,eax
  41390d:	int    0xaf
  41390f:	cmovbe esp,DWORD PTR [ebx]
  413912:	ror    BYTE PTR [edi],cl
  413914:	fsubr  QWORD PTR [ecx]
  413916:	es jle 0x4138fc
  413919:	std    
  41391a:	pop    ds
  41391b:	aad    0x5e
  41391d:	lahf   
  41391e:	ror    DWORD PTR [eax-0x38],0xdc
  413922:	mov    edi,0xfdd40558
  413927:	(bad)  
  413929:	fldl2t 
  41392b:	inc    bh
  41392d:	pop    ebp
  41392e:	inc    esp
  41392f:	cmp    eax,0x1238e662
  413934:	std    
  413935:	scas   eax,DWORD PTR es:[edi]
  413936:	push   cs
  413937:	xchg   BYTE PTR [ebp+0x45],al
  41393a:	add    edx,DWORD PTR [edx-0x1f]
  41393d:	jg     0x413905
  41393f:	dec    ebx
  413940:	pop    ds
  413941:	sub    BYTE PTR [ebp-0x77],bh
  413944:	push   ebp
  413945:	pop    ebx
  413946:	addr16 jmp 0x41390d
  413949:	(bad)  
  41394a:	scas   al,BYTE PTR es:[edi]
  41394b:	lods   al,BYTE PTR ds:[esi]
  41394c:	mov    dh,0xb1
  41394e:	(bad)  
  41394f:	popa   
  413950:	sahf   
  413951:	scas   eax,DWORD PTR es:[edi]
  413952:	bound  ebp,QWORD PTR [edi-0x21]
  413955:	fld    st(2)
  413957:	dec    eax
  413958:	(bad)  [ebx]
  41395a:	jae    0x413961
  41395c:	mov    bl,0x30
  41395e:	push   edx
  41395f:	data16 adc al,0x3a
  413962:	(bad)  
  413963:	(bad)  
  413964:	pusha  
  413965:	add    eax,0x6dd66320
  41396a:	mov    ch,0x8a
  41396c:	lds    edi,FWORD PTR [eax]
  41396e:	in     al,dx
  41396f:	fnstenv [eax-0xc583b56]
  413975:	pop    esi
  413976:	mov    cl,0xdd
  413978:	loop   0x4139d1
  41397a:	bound  esp,QWORD PTR [ebx-0x51]
  41397d:	adc    DWORD PTR [ebx-0x26],0x33
  413981:	std    
  413982:	push   0x45
  413984:	int    0xff
  413986:	inc    edi
  413987:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413988:	push   esp
  413989:	xchg   edi,eax
  41398a:	fst    DWORD PTR ds:0xca1aca93
  413990:	mov    eax,ds:0xb7276244
  413995:	call   0xf1758c1d
  41399a:	push   edx
  41399b:	lock test bl,ah
  41399e:	pushf  
  41399f:	call   0x320f4396
  4139a4:	test   eax,0x68b374e6
  4139a9:	mov    BYTE PTR [ebx],ch
  4139ab:	stos   DWORD PTR es:[edi],eax
  4139ac:	mov    bh,0x1f
  4139ae:	jle    0x4139e2
  4139b0:	and    al,BYTE PTR [eax-0x6c]
  4139b3:	loope  0x413960
  4139b5:	cmp    eax,0xb5f31632
  4139ba:	pop    edi
  4139bb:	mov    al,ds:0x178ba921
  4139c0:	adc    al,0xb
  4139c2:	sar    BYTE PTR [esi],cl
  4139c4:	js     0x4139f8
  4139c6:	pushf  
  4139c7:	pop    esi
  4139c8:	xor    al,0x30
  4139ca:	out    0xb8,al
  4139cc:	mov    esp,0x9daf0569
  4139d1:	rcl    BYTE PTR [edi+0x287135e2],cl
  4139d7:	jo     0x4139c6
  4139d9:	cdq    
  4139da:	and    BYTE PTR [eax*8+0x49cd2349],0xe0
  4139e2:	call   0x2e147764
  4139e7:	js     0x413a40
  4139e9:	mov    ch,dl
  4139eb:	lods   al,BYTE PTR ds:[esi]
  4139ec:	add    ah,BYTE PTR [ebp+0x5a]
  4139ef:	mov    eax,ds:0xa21e9b3c
  4139f4:	loop   0x413a21
  4139f6:	cmc    
  4139f7:	cmp    eax,0x64428808
  4139fc:	inc    esp
  4139fd:	adc    ebp,edi
  4139ff:	(bad)  
  413a00:	sub    bl,BYTE PTR [esi-0x6380cfa0]
  413a06:	xor    DWORD PTR [edi+0x26],esp
  413a09:	ins    BYTE PTR es:[edi],dx
  413a0a:	sahf   
  413a0b:	call   0xa749d209
  413a10:	pusha  
  413a11:	cmp    al,0x4
  413a13:	into   
  413a14:	dec    ebx
  413a15:	bound  edi,QWORD PTR [edx+0x59]
  413a18:	mov    eax,ds:0xfd6229da
  413a1d:	std    
  413a1e:	push   ss
  413a1f:	sub    BYTE PTR [edi-0x31dfeccf],ah
  413a25:	test   BYTE PTR [ebp-0x735ec1e1],dh
  413a2b:	lds    esi,FWORD PTR [edx-0x68]
  413a2e:	aas    
  413a2f:	imul   ebx,DWORD PTR [esi+0x4b],0x8fd98f3e
  413a36:	adc    edi,DWORD PTR [eax]
  413a38:	adc    al,0xfc
  413a3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a3b:	cmp    eax,0xaef575ee
  413a40:	and    eax,0x3df21050
  413a45:	xchg   DWORD PTR [esi-0x75],ecx
  413a48:	cwde   
  413a49:	into   
  413a4a:	dec    ebp
  413a4b:	xchg   esi,eax
  413a4c:	mov    edx,0x6a7cabc5
  413a51:	icebp  
  413a52:	test   eax,0xf5dabfe4
  413a57:	popf   
  413a58:	sub    al,0xa1
  413a5a:	stos   BYTE PTR es:[edi],al
  413a5b:	push   ebx
  413a5c:	or     edi,ebx
  413a5e:	or     al,0xa8
  413a60:	in     eax,dx
  413a61:	fld    TBYTE PTR [esi]
  413a63:	mov    ecx,0xeac31b97
  413a68:	adc    ah,0xa6
  413a6b:	sbb    al,0x78
  413a6d:	and    DWORD PTR [esi-0x7a],0x2982171
  413a74:	cmp    al,0x88
  413a76:	or     eax,0x60b944c4
  413a7b:	adc    ebp,edi
  413a7d:	mov    bl,0x4a
  413a7f:	enter  0x7f05,0x2f
  413a83:	mov    ebx,0x8cbb7059
  413a88:	inc    esi
  413a89:	xchg   edi,eax
  413a8a:	lea    ecx,[ecx+0x73]
  413a8d:	fisubr WORD PTR [esi+0x4f]
  413a90:	pop    eax
  413a91:	fwait
  413a92:	jo     0x413a64
  413a94:	jo     0x413a30
  413a96:	push   ebx
  413a97:	xchg   ebp,eax
  413a98:	xchg   ebx,eax
  413a99:	mul    ebp
  413a9b:	inc    ebp
  413a9c:	xchg   esi,eax
  413a9d:	in     al,dx
  413a9e:	fbstp  TBYTE PTR [esi]
  413aa0:	pop    esi
  413aa1:	mov    ecx,0xb53f5131
  413aa6:	mov    bh,0xac
  413aa8:	mov    eax,0xaf219d75
  413aad:	or     edx,DWORD PTR [edi-0x21a56d99]
  413ab3:	mov    al,ds:0x8bf691ac
  413ab8:	sbb    eax,0x2d775565
  413abd:	in     eax,0xf
  413abf:	push   eax
  413ac0:	dec    esi
  413ac1:	call   0x6b10dee
  413ac6:	arpl   WORD PTR [esi],ax
  413ac8:	dec    edi
  413ac9:	jle    0x413a9f
  413acb:	dec    edx
  413acc:	ss or  al,0x7d
  413acf:	jne    0x413aea
  413ad1:	mov    eax,esp
  413ad3:	addr16 and dh,bh
  413ad6:	mov    eax,ds:0x8b9da592
  413adb:	jg     0x413b1a
  413add:	sbb    esi,DWORD PTR [ebx]
  413adf:	lods   al,BYTE PTR ds:[esi]
  413ae0:	mov    dl,0x4e
  413ae2:	popf   
  413ae3:	jg     0x413a88
  413ae5:	mov    ecx,0x8e261999
  413aea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413aeb:	lods   al,BYTE PTR ds:[esi]
  413aec:	add    dl,ch
  413aee:	sub    ecx,DWORD PTR [ebx-0x7e]
  413af1:	xchg   edi,eax
  413af2:	fisttp WORD PTR [edx+0x1c3b1da2]
  413af8:	xchg   ebx,eax
  413af9:	mov    esp,0x71635fa9
  413afe:	mov    ah,0x85
  413b00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b01:	(bad)  
  413b02:	call   0x5ff91fe8
  413b07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b08:	je     0x413b57
  413b0a:	xor    cl,bl
  413b0c:	sbb    esp,DWORD PTR [ebx]
  413b0e:	shl    ch,0x12
  413b11:	(bad)  
  413b12:	(bad)  
  413b13:	fcmovne st,st(0)
  413b16:	out    0xd8,al
  413b18:	dec    edx
  413b19:	and    ah,BYTE PTR [ecx+0x2fede3b1]
  413b1f:	fimul  WORD PTR [ebp+0x3a5d9413]
  413b25:	xor    al,0xf3
  413b27:	pop    es
  413b28:	jns    0x413ad4
  413b2a:	push   ss
  413b2b:	inc    ebp
  413b2c:	sub    eax,0x29ccabe1
  413b31:	ins    BYTE PTR es:[edi],dx
  413b32:	ror    DWORD PTR [ebx],1
  413b34:	shl    DWORD PTR [ecx-0x6fd5ae9d],1
  413b3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b3b:	data16 (bad) 
  413b3d:	pop    ebp
  413b3e:	push   0x8abb1499
  413b43:	rcl    ebx,1
  413b45:	loope  0x413b77
  413b47:	in     eax,dx
  413b48:	dec    ebp
  413b49:	dec    ecx
  413b4a:	sti    
  413b4b:	cmp    BYTE PTR [edx],bh
  413b4d:	adc    DWORD PTR [edi-0xb1d8e51],esp
  413b53:	push   0x4ba8b0b0
  413b58:	shr    BYTE PTR [eax],cl
  413b5a:	add    al,0xd9
  413b5c:	sub    dh,BYTE PTR [ebp-0x232663a7]
  413b62:	enter  0xd9c9,0x5b
  413b66:	lea    eax,[edx+0x64db3d74]
  413b6c:	sub    al,0xbc
  413b6e:	ins    BYTE PTR es:[edi],dx
  413b6f:	pop    ecx
  413b70:	fild   DWORD PTR [edi-0x145f8cbb]
  413b76:	dec    ebx
  413b77:	and    bh,dh
  413b79:	mov    BYTE PTR [ebx+edx*1-0x35a0d2e7],ch
  413b80:	dec    esp
  413b81:	mov    WORD PTR [ecx],?
  413b83:	dec    eax
  413b84:	ja     0x413b7b
  413b86:	enter  0x5d8b,0xd7
  413b8a:	xlat   BYTE PTR ds:[ebx]
  413b8b:	test   al,0x45
  413b8d:	loope  0x413b83
  413b8f:	inc    ecx
  413b90:	mov    ecx,ebx
  413b92:	pop    edi
  413b93:	add    DWORD PTR [edx+0xd],esp
  413b96:	outs   dx,DWORD PTR ds:[esi]
  413b97:	std    
  413b98:	sar    BYTE PTR [eax-0x20],0x62
  413b9c:	mov    cl,0x15
  413b9e:	dec    eax
  413b9f:	into   
  413ba0:	or     eax,0x203bfd4e
  413ba5:	es pop ss
  413ba7:	inc    edx
  413ba8:	test   bh,dh
  413baa:	mov    edx,0x992da164
  413baf:	out    dx,eax
  413bb0:	mov    ds:0x6ddba66d,al
  413bb5:	fistp  DWORD PTR [ecx+edx*2-0x32]
  413bb9:	push   eax
  413bba:	fwait
  413bbb:	call   0x2b2bd62f
  413bc0:	mov    edx,0x52647174
  413bc5:	sub    ah,al
  413bc7:	inc    ebx
  413bc8:	dec    edx
  413bc9:	dec    edi
  413bca:	pop    edi
  413bcb:	aas    
  413bcc:	js     0x413b64
  413bce:	xchg   edi,eax
  413bcf:	fmul   DWORD PTR [ecx-0x48]
  413bd2:	mov    al,BYTE PTR [eax+0x62]
  413bd5:	add    DWORD PTR [edx-0x7737134],edi
  413bdb:	arpl   bp,dx
  413bdd:	out    dx,eax
  413bde:	xchg   edi,eax
  413bdf:	jns    0x413c06
  413be1:	or     ch,BYTE PTR [esp+edx*1]
  413be4:	jg     0x413c30
  413be6:	mov    ch,bl
  413be8:	mov    ds:0xd8bc1126,eax
  413bed:	cmp    eax,0x6ee44414
  413bf2:	xor    edi,DWORD PTR [esi]
  413bf4:	adc    eax,0xd2c559c3
  413bf9:	push   edx
  413bfa:	imul   esp,DWORD PTR [edi+0x4d9c97b7],0x4e
  413c01:	fisub  DWORD PTR [ecx]
  413c03:	fldpi  
  413c05:	fadd   DWORD PTR [ecx-0x5ac17dba]
  413c0b:	or     BYTE PTR [ebp-0x52e29fe0],bl
  413c11:	out    dx,eax
  413c12:	shl    DWORD PTR [ebx],cl
  413c14:	jp     0x413bb0
  413c16:	pop    ebp
  413c17:	adc    bh,ah
  413c19:	bnd jb 0x413c25
  413c1c:	push   ebx
  413c1d:	jb     0x413c45
  413c1f:	pop    ss
  413c20:	sti    
  413c21:	jo     0x413be6
  413c23:	repnz xchg esi,eax
  413c25:	cli    
  413c26:	dec    eax
  413c27:	popa   
  413c28:	push   edx
  413c29:	inc    esp
  413c2a:	sub    BYTE PTR [ebx-0x335cdd4b],0x26
  413c31:	rol    al,1
  413c33:	xor    eax,0xed6518c4
  413c38:	sbb    bl,BYTE PTR [eax-0x38]
  413c3b:	aaa    
  413c3c:	daa    
  413c3d:	mov    edi,0xa9bac604
  413c42:	sbb    al,0x71
  413c44:	mov    al,0x8e
  413c46:	scas   al,BYTE PTR es:[edi]
  413c47:	shl    DWORD PTR [edx+0x1a7d62a0],1
  413c4d:	adc    eax,0xc47fd1e
  413c52:	imul   ecx,DWORD PTR [edi]
  413c55:	mov    cs,WORD PTR [ebp+0x7e]
  413c58:	(bad)  
  413c59:	(bad)  
  413c5a:	cmp    BYTE PTR [edi+0x31],ah
  413c5d:	das    
  413c5e:	out    0x3f,eax
  413c60:	jl     0x413c25
  413c62:	ja     0x413cdd
  413c64:	or     edi,esp
  413c66:	sbb    BYTE PTR [ebx+0x4de310a2],dh
  413c6c:	idiv   DWORD PTR [edi+eax*4]
  413c6f:	ffreep st(4)
  413c71:	pop    ecx
  413c72:	pop    esi
  413c73:	push   es
  413c74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c75:	out    0xd6,eax
  413c77:	pushf  
  413c78:	xchg   ebp,eax
  413c79:	fs pop esi
  413c7b:	jnp    0x413c33
  413c7d:	popf   
  413c7e:	push   esi
  413c7f:	mov    dh,0x38
  413c81:	out    0xb1,eax
  413c83:	outs   dx,DWORD PTR ds:[esi]
  413c84:	int    0x81
  413c86:	or     DWORD PTR [ebp-0x5f656206],edx
  413c8c:	dec    esi
  413c8d:	sub    DWORD PTR [ebx+0x5c95186d],esi
  413c93:	adc    bl,BYTE PTR [eax+ecx*1]
  413c96:	mov    dh,0x5b
  413c98:	cmp    DWORD PTR [ebp-0x3b],ebp
  413c9b:	and    esp,DWORD PTR [ebx+edx*8+0x1eb0e55c]
  413ca2:	dec    esi
  413ca3:	call   0xa5f69e1
  413ca8:	in     eax,0x77
  413caa:	pushf  
  413cab:	mov    edx,0x43dbc990
  413cb0:	xor    eax,0xec3684c2
  413cb5:	mov    ch,0x5b
  413cb7:	mov    ecx,0xe398b343
  413cbc:	mov    WORD PTR [edx+edi*4+0x37507372],es
  413cc3:	and    BYTE PTR ds:0x65b989,0xae
  413cca:	xor    edx,eax
  413ccc:	cmp    al,0xf
  413cce:	sub    DWORD PTR [edi+0x457f8013],ebx
  413cd4:	or     al,0x9
  413cd6:	add    ch,bh
  413cd8:	sub    BYTE PTR [edx-0x44],bl
  413cdb:	pop    ds
  413cdc:	cwde   
  413cdd:	xchg   edi,eax
  413cde:	arpl   WORD PTR [ebp+0x53],dx
  413ce1:	xchg   edi,eax
  413ce2:	in     eax,dx
  413ce3:	dec    esp
  413ce4:	sub    al,0xea
  413ce6:	sub    ah,ah
  413ce8:	cmp    DWORD PTR [esi],edi
  413cea:	ins    DWORD PTR es:[edi],dx
  413ceb:	or     BYTE PTR [edx],bl
  413ced:	pushf  
  413cee:	pop    edx
  413cef:	lods   al,BYTE PTR ds:[esi]
  413cf0:	inc    ebp
  413cf1:	out    dx,eax
  413cf2:	in     al,0xd0
  413cf4:	cld    
  413cf5:	xchg   ebx,eax
  413cf6:	in     eax,0x11
  413cf8:	jb     0x413cbc
  413cfa:	push   esi
  413cfb:	and    eax,0xe6c1ceb4
  413d00:	lahf   
  413d01:	lods   eax,DWORD PTR ds:[esi]
  413d02:	inc    esp
  413d03:	loope  0x413d6c
  413d05:	mov    edi,0x2b37ab43
  413d0a:	push   ebx
  413d0b:	rcl    BYTE PTR [ecx],0xd3
  413d0e:	ins    DWORD PTR es:[edi],dx
  413d0f:	call   0x8737bac7
  413d14:	xlat   BYTE PTR ds:[ebx]
  413d15:	(bad)  [ebx-0x6dd530d4]
  413d1b:	xchg   ebp,eax
  413d1c:	mov    WORD PTR [edx+0x25119ed0],?
  413d22:	cli    
  413d23:	fadd   st(2),st
  413d25:	scas   al,BYTE PTR es:[edi]
  413d26:	out    dx,eax
  413d27:	stos   DWORD PTR es:[edi],eax
  413d28:	pop    edi
  413d29:	add    al,0x25
  413d2b:	(bad)  
  413d2c:	mov    bl,0x46
  413d2e:	ret    0x7e6f
  413d31:	and    DWORD PTR [esi],ebx
  413d33:	and    edi,DWORD PTR [ebx+0x50cb94a3]
  413d39:	ds gs mov dh,0xf5
  413d3d:	mov    cl,0x85
  413d3f:	cmp    BYTE PTR [ebx-0xdda14c3],ah
  413d45:	xchg   esi,eax
  413d46:	cmp    al,0x9c
  413d48:	mov    fs,WORD PTR [ebx+0xd]
  413d4b:	pop    ds
  413d4c:	cmp    eax,0xe8971786
  413d51:	fcomip st,st(5)
  413d53:	pop    es
  413d54:	aas    
  413d55:	cli    
  413d56:	imul   ebp,ebp,0xffffff9a
  413d59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d5a:	push   ebx
  413d5b:	leave  
  413d5c:	and    BYTE PTR [ecx],ch
  413d5e:	les    esi,FWORD PTR [edx-0x4fc209a5]
  413d64:	fst    DWORD PTR [edi+ebx*1+0x12]
  413d68:	(bad)  
  413d6a:	nop
  413d6b:	xchg   ecx,eax
  413d6c:	push   ebp
  413d6d:	fstp   DWORD PTR [ebx+0x5]
  413d70:	pop    ss
  413d71:	pop    ss
  413d72:	and    esi,ecx
  413d74:	jl     0x413dca
  413d76:	inc    eax
  413d77:	ffree  st(3)
  413d79:	bound  eax,QWORD PTR [ebx-0x4d]
  413d7c:	and    ah,BYTE PTR [ecx+0x1]
  413d7f:	cmc    
  413d80:	push   ss
  413d81:	pop    ecx
  413d82:	imul   ebx,edi,0x4a
  413d85:	clc    
  413d86:	addr16 pop esp
  413d88:	les    esp,FWORD PTR [ebp+0x7b]
  413d8b:	loopne 0x413db0
  413d8d:	into   
  413d8e:	jae    0x413db7
  413d90:	xor    bh,BYTE PTR gs:[ecx]
  413d93:	stc    
  413d94:	inc    ebp
  413d95:	mov    cl,0x44
  413d97:	push   ebp
  413d98:	jle    0x413e0e
  413d9a:	or     edi,esp
  413d9c:	jnp    0x413dc8
  413d9e:	push   ebp
  413d9f:	inc    edx
  413da0:	xchg   edx,eax
  413da1:	adc    esp,DWORD PTR [edi-0x4b457a9d]
  413da7:	jnp    0x413da4
  413da9:	sub    al,0x84
  413dab:	in     al,dx
  413dac:	push   esi
  413dad:	adc    BYTE PTR fs:[eax+eax*1],dh
  413db1:	in     eax,dx
  413db2:	push   ecx
  413db3:	les    esp,FWORD PTR [edx]
  413db5:	dec    ebp
  413db6:	test   DWORD PTR [edx+0x39597aaa],ebp
  413dbc:	mov    ah,0x6c
  413dbe:	sbb    ch,dl
  413dc0:	out    dx,eax
  413dc1:	xchg   esp,eax
  413dc2:	inc    esp
  413dc3:	jle    0x413d8e
  413dc5:	dec    ebp
  413dc6:	lahf   
  413dc7:	xchg   ebp,eax
  413dc8:	rol    BYTE PTR [ecx],1
  413dca:	inc    ebx
  413dcb:	and    ebx,ecx
  413dcd:	(bad)  
  413dce:	(bad)  
  413dcf:	ds or  eax,0xc2159d5e
  413dd5:	pop    es
  413dd6:	mov    ah,0x4f
  413dd8:	fcmovbe st,st(4)
  413dda:	cli    
  413ddb:	cmp    BYTE PTR [ecx-0x624df88f],ah
  413de1:	adc    edi,DWORD PTR [ebp-0x642b1b50]
  413de7:	mov    ebp,0xdb766a1c
  413dec:	or     bl,BYTE PTR [eax-0x13]
  413def:	neg    BYTE PTR [ebx+0x45dbb05d]
  413df5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413df6:	aas    
  413df7:	cli    
  413df8:	daa    
  413df9:	sbb    al,0xe9
  413dfb:	and    al,0xa1
  413dfd:	leave  
  413dfe:	lds    eax,FWORD PTR [edx-0x3f]
  413e01:	pop    eax
  413e02:	outs   dx,DWORD PTR ds:[esi]
  413e03:	jb     0x413dcc
  413e05:	shr    DWORD PTR [ebx+0x61b9e2],0x20
  413e0c:	les    ebx,FWORD PTR [esi-0x3d]
  413e0f:	mov    ah,0x97
  413e11:	mov    esi,0x10d664cc
  413e16:	shl    DWORD PTR [edx+eax*1+0x56ca4050],0xd2
  413e1e:	pop    es
  413e1f:	mov    DWORD PTR [esi-0x56248443],edi
  413e25:	dec    edx
  413e26:	mov    al,BYTE PTR [edx-0x526445a4]
  413e2c:	cli    
  413e2d:	stos   DWORD PTR es:[edi],eax
  413e2e:	loopne 0x413e6b
  413e30:	fisttp WORD PTR [edx+ebx*8-0x4af9d6ab]
  413e37:	test   al,0xbb
  413e39:	loope  0x413e18
  413e3b:	jnp    0x413e80
  413e3d:	dec    edx
  413e3e:	dec    esp
  413e3f:	inc    edi
  413e40:	push   ds
  413e41:	sub    al,0xa4
  413e43:	xor    al,0x5f
  413e45:	out    dx,al
  413e46:	(bad)  
  413e47:	xlat   BYTE PTR ds:[ebx]
  413e48:	call   0x9a1d:0xa8154a41
  413e4f:	jb     0x413e94
  413e51:	mov    ch,0x67
  413e53:	es test al,0xfc
  413e56:	test   al,0x14
  413e58:	cmc    
  413e59:	dec    ecx
  413e5a:	ds imul edi,ecx,0xe638b358
  413e61:	mov    esi,0x58f4e466
  413e66:	pop    ds
  413e67:	daa    
  413e68:	daa    
  413e69:	aas    
  413e6a:	(bad)  
  413e6b:	xor    ecx,DWORD PTR [edx-0x19e83c7a]
  413e71:	jnp    0x413ea9
  413e73:	add    DWORD PTR [edx-0x6b36c0c3],ebp
  413e79:	xchg   ch,ah
  413e7b:	pop    esp
  413e7c:	sbb    BYTE PTR [edx+0x290d2012],dh
  413e82:	dec    eax
  413e83:	push   ecx
  413e84:	data16 sub BYTE PTR fs:[eax+0x52],0xc8
  413e8a:	and    al,0xe8
  413e8c:	xchg   ecx,eax
  413e8d:	(bad)  
  413e8e:	call   0xa723:0x2780dd0f
  413e95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e96:	adc    al,0x2f
  413e98:	push   ebx
  413e99:	push   0x8c827eef
  413e9e:	pop    esi
  413e9f:	mov    bl,cl
  413ea1:	mov    edx,DWORD PTR [eax]
  413ea3:	rcr    esi,0x8d
  413ea6:	xor    DWORD PTR [ebx+0x36],ebx
  413ea9:	push   es
  413eaa:	xchg   DWORD PTR [ebp+0x5fe39d61],ebp
  413eb0:	leave  
  413eb1:	data16 (bad) 
  413eb3:	xlat   BYTE PTR ds:[ebx]
  413eb4:	cmp    edi,DWORD PTR [edi]
  413eb6:	or     eax,ebx
  413eb8:	cld    
  413eb9:	adc    BYTE PTR [edi],cl
  413ebb:	mov    ds:0x8c16da8c,al
  413ec0:	jbe    0x413e5f
  413ec2:	iret   
  413ec3:	mov    ss,edi
  413ec5:	dec    ecx
  413ec6:	xchg   esp,eax
  413ec7:	and    BYTE PTR [eax+edx*2-0x4bcddef3],ch
  413ece:	imul   ebp,esp,0x63
  413ed1:	mov    BYTE PTR [ebp-0xdc43ce9],ah
  413ed7:	adc    ebx,DWORD PTR ds:0xda21594d
  413edd:	xchg   DWORD PTR [ebp+0xefc8c69],edi
  413ee3:	adc    BYTE PTR [ecx-0x56],bh
  413ee6:	fld    TBYTE PTR [ebp+0x3b0ee6d0]
  413eec:	inc    ebx
  413eed:	jg     0x413e8b
  413eef:	cmp    eax,0x3378da
  413ef4:	(bad)  
  413ef5:	sti    
  413ef6:	ins    DWORD PTR es:[edi],dx
  413ef7:	xchg   DWORD PTR [ebx+0x357cd702],edx
  413efd:	fisub  WORD PTR [eax+0x58]
  413f00:	adc    DWORD PTR [edx],edx
  413f02:	xchg   ebp,eax
  413f03:	in     al,0xef
  413f05:	mov    ds:0x9097d11e,eax
  413f0a:	xor    DWORD PTR [ebx+0x72],esi
  413f0d:	push   ss
  413f0e:	aad    0x2e
  413f10:	and    ah,BYTE PTR [ebx+0x62]
  413f13:	xchg   ah,al
  413f15:	pushf  
  413f16:	int3   
  413f17:	jb     0x413ecc
  413f19:	cli    
  413f1a:	mov    eax,0xa3354b22
  413f1f:	lds    ecx,FWORD PTR [edx+edi*1-0x1c]
  413f23:	inc    ebx
  413f24:	outs   dx,BYTE PTR ds:[esi]
  413f25:	mov    BYTE PTR [esi-0x3e],0xcd
  413f29:	pop    ebp
  413f2a:	mov    ebx,0x4b67937c
  413f2f:	cdq    
  413f30:	fcmove st,st(3)
  413f32:	fsubp  st(0),st
  413f34:	mov    ah,0x4f
  413f36:	dec    eax
  413f37:	xchg   esi,eax
  413f38:	std    
  413f39:	scas   eax,DWORD PTR es:[edi]
  413f3a:	or     eax,0x328d4b68
  413f3f:	cmp    esi,esi
  413f41:	hlt    
  413f42:	call   0xf771:0x7055ae5
  413f49:	ret    0x9019
  413f4c:	ss add al,0xe8
  413f4f:	fbstp  TBYTE PTR [esi-0x3f]
  413f52:	jge    0x413f21
  413f54:	adc    al,0x7b
  413f56:	test   eax,0x6ed7cc67
  413f5b:	ficom  WORD PTR cs:[ecx-0x709a57d9]
  413f62:	mov    eax,ds:0x31a873e3
  413f67:	gs jp  0x413fc9
  413f6a:	mov    ebp,0x3d613509
  413f6f:	jbe    0x413f4a
  413f71:	loop   0x413fa1
  413f73:	inc    esp
  413f74:	nop
  413f75:	xor    edi,ebx
  413f77:	xchg   ebp,eax
  413f78:	shr    BYTE PTR [edi+0x2e222e1f],0x26
  413f7f:	pop    ss
  413f80:	les    ebx,FWORD PTR [edx]
  413f82:	fldenv [esi+0x41]
  413f85:	pop    ecx
  413f86:	cmp    ebx,DWORD PTR [ebx]
  413f88:	inc    esp
  413f89:	mov    dh,0x3c
  413f8b:	mov    cl,BYTE PTR [esi]
  413f8d:	mov    dl,0x8a
  413f8f:	dec    ebp
  413f90:	rol    DWORD PTR [ebp-0x6ff0fd03],0x7
  413f97:	out    0x4c,eax
  413f99:	sbb    eax,0xa3c96dfe
  413f9e:	xchg   edi,eax
  413f9f:	push   edi
  413fa0:	jmp    0x413f4e
  413fa2:	xor    eax,0x7dbb010b
  413fa7:	mov    edi,0x79b66f80
  413fac:	sar    eax,1
  413fae:	sbb    eax,0x647605b3
  413fb3:	aad    0xc0
  413fb5:	pop    ebx
  413fb6:	pop    ecx
  413fb7:	mov    WORD PTR [ebx+0x7dceef13],?
  413fbd:	(bad)  
  413fbe:	rol    DWORD PTR [edi+0x30],1
  413fc1:	lock iret 
  413fc3:	mov    esp,0xd54a424b
  413fc8:	clc    
  413fc9:	sub    eax,0xc516d5ae
  413fce:	fs inc ebx
  413fd0:	push   ebp
  413fd1:	dec    edi
  413fd2:	cmp    BYTE PTR [edi],al
  413fd4:	scas   al,BYTE PTR es:[edi]
  413fd5:	out    0xf4,al
  413fd7:	cmp    DWORD PTR [edi],edi
  413fd9:	(bad)  
  413fda:	fdiv   st(2),st
  413fdc:	adc    edi,esp
  413fde:	mov    BYTE PTR [eax-0x5b15371d],cl
  413fe4:	daa    
  413fe5:	bound  ebx,QWORD PTR [eax]
  413fe7:	or     bh,dl
  413fe9:	and    ah,ch
  413feb:	mov    edx,0x2009d619
  413ff0:	jmp    0x31499478
  413ff5:	out    0xf5,al
  413ff7:	push   esi
  413ff8:	mov    bl,0x4e
  413ffa:	fstp   TBYTE PTR [edx-0x66a09eba]
  414000:	sbb    ah,BYTE PTR [ecx+0x7b]
  414003:	repz jmp 0x2cfe:0x5b731b28
  41400b:	push   ds
  41400c:	test   al,0x5c
  41400e:	aad    0x18
  414010:	ss inc esp
  414012:	pop    ebx
  414013:	push   ebx
  414014:	ds cs popa 
  414017:	nop
  414018:	fist   WORD PTR [ebp+0x67]
  41401b:	js     0x414008
  41401d:	(bad)
  414020:	das    
  414021:	jo     0x41402f
  414023:	sub    DWORD PTR [ecx],0x47c71af1
  414029:	icebp  
  41402a:	xchg   edi,eax
  41402b:	sar    DWORD PTR [ebp+0x6a8a1eee],0xcb
  414032:	sbb    DWORD PTR [esi-0x3a],edi
  414035:	dec    ecx
  414036:	cwde   
  414037:	retf   
  414038:	push   esp
  414039:	pop    ebx
  41403a:	out    dx,eax
  41403b:	add    al,0x59
  41403d:	jge    0x413ff3
  41403f:	sub    eax,0x2ee0e1cc
  414044:	push   ecx
  414045:	push   eax
  414046:	xchg   esp,eax
  414047:	out    0x1c,eax
  414049:	mov    eax,ds:0x29ee1014
  41404e:	inc    esp
  41404f:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  414051:	repz shr DWORD PTR [ebx+0x75b8007],1
  414058:	loop   0x4140bd
  41405a:	into   
  41405b:	jnp    0x414092
  41405d:	pusha  
  41405e:	pusha  
  41405f:	imul   esp,esi,0xffffffc4
  414062:	or     dh,bh
  414064:	jo     0x41400f
  414066:	imul   ebp,DWORD PTR [ecx],0x61615831
  41406c:	popf   
  41406d:	xchg   ecx,eax
  41406e:	cmp    BYTE PTR gs:[edi-0x31],bh
  414072:	sahf   
  414073:	icebp  
  414074:	pushf  
  414075:	mov    ebp,0x567dffb
  41407a:	inc    esi
  41407b:	inc    ebp
  41407c:	cmp    esi,DWORD PTR [edi-0x26]
  41407f:	push   edi
  414080:	mov    eax,ds:0x979eb10b
  414085:	pop    esi
  414086:	sub    eax,0x75e794e6
  41408b:	xor    cl,0x79
  41408e:	or     DWORD PTR [esi-0x26],esi
  414091:	das    
  414092:	fs or  edi,esi
  414095:	and    BYTE PTR [ebp+0x2eb41d38],dh
  41409b:	push   0x6d6d4bb7
  4140a0:	imul   edi,DWORD PTR [eax],0x356bcf5e
  4140a6:	gs retf 0xb5b
  4140aa:	addr16 xor al,0x71
  4140ad:	ja     0x414059
  4140af:	push   esi
  4140b0:	ret    0x2202
  4140b3:	mov    esi,0x26920c5e
  4140b8:	out    0xc8,eax
  4140ba:	and    eax,0xeffc146c
  4140bf:	shl    DWORD PTR [esi],1
  4140c1:	xchg   esp,eax
  4140c2:	inc    esi
  4140c3:	aas    
  4140c4:	and    BYTE PTR [ecx-0x29],ch
  4140c7:	(bad)  
  4140c8:	pop    esi
  4140c9:	dec    eax
  4140ca:	jb     0x41408f
  4140cc:	daa    
  4140cd:	data16 outs dx,BYTE PTR ds:[esi]
  4140cf:	push   0x32
  4140d1:	enter  0x3129,0xda
  4140d5:	lods   eax,DWORD PTR ds:[esi]
  4140d6:	les    ecx,FWORD PTR ds:0x6cf2bc8d
  4140dc:	mov    dl,0x8c
  4140de:	sti    
  4140df:	loopne 0x4140b3
  4140e1:	rcl    BYTE PTR [ebp-0x38e6a059],cl
  4140e7:	sub    cl,BYTE PTR [esi+esi*2+0x23]
  4140eb:	enter  0xb16,0xbe
  4140ef:	mov    edx,0x6cd7eda3
  4140f4:	jb     0x4140f9
  4140f6:	ss sbb edx,edx
  4140f9:	jl     0x414108
  4140fb:	mov    ebx,0xf0d5f2f8
  414100:	dec    ebx
  414101:	or     BYTE PTR [esi-0x2],ch
  414104:	fcom   DWORD PTR [edi+edi*2-0x5c]
  414108:	(bad)  
  414109:	icebp  
  41410a:	stc    
  41410b:	shl    BYTE PTR [ebx],cl
  41410d:	fwait
  41410e:	dec    esi
  41410f:	jno    0x414177
  414111:	loopne 0x4140d9
  414113:	xchg   esi,eax
  414114:	aam    0x28
  414116:	retf   0x5c6a
  414119:	or     eax,0x24c7e8a7
  41411e:	or     DWORD PTR [esi],edi
  414120:	loope  0x4140d0
  414122:	lea    edi,[eax-0x2ee5ec59]
  414128:	shl    eax,0x20
  41412b:	sbb    eax,0xad5bde8
  414130:	dec    esi
  414131:	es push 0xffffffec
  414134:	leave  
  414135:	test   DWORD PTR [ebx+eax*2],edx
  414138:	retf   0x22cc
  41413b:	or     ah,al
  41413d:	push   esi
  41413e:	and    DWORD PTR [ebx+0x11],eax
  414141:	loop   0x41411d
  414143:	inc    eax
  414144:	jne    0x4141ab
  414146:	daa    
  414147:	mov    edi,0x50cb5603
  41414c:	cmp    esi,DWORD PTR [edx-0x4631efd3]
  414152:	retf   0x2e13
  414155:	ja     0x4140ff
  414157:	sub    esi,DWORD PTR [edx]
  414159:	loop   0x414180
  41415b:	xor    bl,BYTE PTR [ebp-0x5ce47cc6]
  414161:	pop    ds
  414162:	inc    eax
  414163:	(bad)  
  414164:	out    dx,al
  414165:	test   eax,0xba0be38e
  41416a:	test   al,0xe9
  41416c:	out    dx,eax
  41416d:	fisubr DWORD PTR fs:[edx+0x42]
  414171:	pop    eax
  414172:	jne    0x41413b
  414174:	jbe    0x4140fb
  414176:	mov    ds:0x60f55c14,eax
  41417b:	cwde   
  41417c:	rcl    DWORD PTR [bx+0x2748],1
  414181:	outs   dx,DWORD PTR ds:[esi]
  414182:	dec    esi
  414183:	and    eax,0x8c0704e6
  414188:	fstp   QWORD PTR [ecx-0x25]
  41418b:	mov    fs:0x26f96d69,eax
  414191:	push   es
  414192:	test   eax,0x39c53d87
  414197:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414198:	mov    ds:0x37838531,al
  41419d:	adc    cl,BYTE PTR [edi-0x6c6d4c04]
  4141a3:	push   ss
  4141a4:	fisttp WORD PTR [edi-0x60]
  4141a7:	xor    eax,0xc505d769
  4141ac:	xchg   esi,eax
  4141ad:	cwde   
  4141ae:	std    
  4141af:	sbb    ebx,0xe5d59db3
  4141b5:	pop    ss
  4141b6:	sbb    DWORD PTR [eax-0x67],edi
  4141b9:	lock pop ebx
  4141bb:	ret    0xe4a9
  4141be:	add    DWORD PTR [ebx-0x6b5059dc],esp
  4141c4:	adc    DWORD PTR cs:[edx-0x1020fdc5],ebp
  4141cb:	cli    
  4141cc:	jg     0x4141de
  4141ce:	bound  ebp,QWORD PTR [eax]
  4141d0:	mov    BYTE PTR [ebp+0x55],ch
  4141d3:	inc    ecx
  4141d4:	adc    al,0xd1
  4141d6:	cs mov edi,0x64c8762d
  4141dc:	daa    
  4141dd:	lock sbb eax,0xd22e62b0
  4141e3:	or     esi,DWORD PTR ds:[edx-0x5797fe3e]
  4141ea:	adc    eax,0x2a04cb0c
  4141ef:	repnz cld 
  4141f1:	add    al,BYTE PTR [ebx]
  4141f3:	add    ecx,DWORD PTR [ebx-0x4e]
  4141f6:	aaa    
  4141f7:	or     al,0xfe
  4141f9:	dec    ebx
  4141fa:	jl     0x41420c
  4141fc:	es (bad) 
  4141fe:	sbb    BYTE PTR [edx+ebx*8-0x49],dl
  414202:	out    0x9b,eax
  414204:	push   esp
  414205:	push   ds
  414206:	jge    0x414278
  414208:	xchg   ebx,eax
  414209:	xor    al,0x93
  41420b:	hlt    
  41420c:	retf   0x6e9
  41420f:	jmp    0x9708:0x4cb217d6
  414216:	mov    ecx,0x366464c2
  41421b:	aad    0xe
  41421d:	or     ch,BYTE PTR [ebx]
  41421f:	fisttp DWORD PTR [edi+0x45a69951]
  414225:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414226:	cmc    
  414227:	dec    edi
  414228:	int3   
  414229:	sub    DWORD PTR [esi+edx*4+0x4d501141],esp
  414230:	pop    ds
  414231:	jno    0x414288
  414233:	std    
  414234:	fs (bad) 
  414236:	out    0x91,al
  414238:	mov    cs,WORD PTR [esi+0x15]
  41423b:	mov    ds:0x32aa7e50,al
  414240:	cmp    BYTE PTR [ebp+0x6d],bh
  414243:	xchg   ax,ax
  414245:	mov    esp,0xe15a74b7
  41424a:	or     al,0x4
  41424c:	cmp    edi,DWORD PTR [ebx-0x2d980b84]
  414252:	popf   
  414253:	(bad)  
  414254:	push   0x6b989829
  414259:	mov    eax,0xdb1afa48
  41425e:	push   edi
  41425f:	out    0xdd,eax
  414261:	pop    ss
  414262:	jbe    0x4142de
  414264:	mov    ah,0x53
  414266:	push   esp
  414267:	fild   WORD PTR [esi]
  41426a:	(bad)  [esi]
  41426c:	fwait
  41426d:	lock ss ja 0x414281
  414271:	mov    eax,ds:0x7f939e40
  414276:	shl    bh,cl
  414278:	pop    ds
  414279:	xor    DWORD PTR [esi-0x130686ee],edx
  41427f:	ret    
  414280:	mov    dh,0xee
  414282:	in     al,dx
  414283:	and    al,0xf5
  414285:	push   edx
  414286:	pop    esp
  414287:	mov    DWORD PTR [ebp+0x8],edi
  41428a:	or     cl,ch
  41428c:	inc    edi
  41428d:	push   ss
  41428e:	shr    BYTE PTR [esi-0x36],cl
  414291:	call   0x7fe3:0x6dbf392e
  414298:	sbb    BYTE PTR [eax+0x694174f],bl
  41429e:	(bad)  
  41429f:	push   ecx
  4142a0:	lea    eax,[esi+0x74]
  4142a3:	ficomp WORD PTR ds:0x7bbc605a
  4142a9:	xor    BYTE PTR [edx],bl
  4142ab:	(bad)  
  4142ad:	cdq    
  4142ae:	adc    eax,0x4f389b22
  4142b3:	hlt    
  4142b4:	pop    es
  4142b5:	push   cs
  4142b6:	enter  0xc28,0xec
  4142ba:	push   ss
  4142bb:	xchg   edx,eax
  4142bc:	xor    eax,0xa11cc0c
  4142c1:	cs push 0xffffffd0
  4142c4:	cmp    ecx,ebp
  4142c6:	jmp    0x4142ca
  4142c8:	fisttp WORD PTR [edx-0x79]
  4142cb:	dec    ebx
  4142cc:	sar    DWORD PTR [edi-0x71672e19],cl
  4142d2:	scas   al,BYTE PTR es:[edi]
  4142d3:	xlat   BYTE PTR ds:[ebx]
  4142d4:	sub    al,0xda
  4142d6:	repz hlt 
  4142d8:	jmp    0x4142e4
  4142da:	fnstsw WORD PTR [eax]
  4142dc:	lods   eax,DWORD PTR ds:[esi]
  4142dd:	xor    eax,0x19f4e23c
  4142e2:	pop    edi
  4142e3:	sub    ebx,eax
  4142e5:	fist   DWORD PTR [edi]
  4142e7:	test   al,0x8e
  4142ea:	int    0xc3
  4142ec:	mov    eax,edx
  4142ee:	cdq    
  4142ef:	jno    0x4142ca
  4142f1:	in     eax,0x2f
  4142f3:	and    al,0xca
  4142f5:	retf   
  4142f6:	rcl    DWORD PTR [edx+0x26251357],0xbf
  4142fd:	fsincos 
  4142ff:	inc    esp
  414300:	in     al,dx
  414301:	adc    BYTE PTR [eax+0x7288fc12],0xb0
  414308:	adc    al,0x33
  41430a:	scas   al,BYTE PTR es:[edi]
  41430b:	dec    edi
  41430c:	push   0x6d3c7b4
  414311:	popa   
  414312:	sub    ebp,DWORD PTR [edi+0x4e97f7fb]
  414318:	xor    dl,BYTE PTR [esi+0x53]
  41431b:	mov    cl,0x3b
  41431d:	sub    BYTE PTR [edi],al
  41431f:	dec    ebx
  414320:	add    BYTE PTR [esi-0x30],ch
  414323:	ror    cl,1
  414325:	xlat   BYTE PTR ds:[ebx]
  414326:	rcl    DWORD PTR [esi-0x3b70c1e6],1
  41432c:	(bad)  
  41432d:	mov    dh,0xc3
  41432f:	inc    esi
  414330:	rol    bh,0x98
  414333:	mov    eax,0xd4bbd6a3
  414338:	sbb    al,0x40
  41433a:	or     esi,DWORD PTR [ebx]
  41433c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41433d:	icebp  
  41433e:	adc    eax,0x15f7d5b
  414343:	sub    BYTE PTR [ebp+0x565ee9b0],ah
  414349:	xor    ecx,DWORD PTR [edx]
  41434b:	ds push ebx
  41434d:	sbb    al,0x9a
  41434f:	sbb    BYTE PTR [ebx+0x6d],ch
  414352:	fst    DWORD PTR [eax-0x66]
  414355:	data16 je 0x414317
  414358:	mov    al,ds:0x120f9a7d
  41435d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41435e:	sub    ecx,DWORD PTR [ecx-0x2fab513b]
  414364:	dec    ebx
  414365:	sbb    eax,DWORD PTR gs:[edi]
  414368:	in     al,dx
  414369:	xchg   edx,eax
  41436a:	pop    esp
  41436b:	enter  0x9736,0xba
  41436f:	add    ch,BYTE PTR [eax]
  414371:	inc    esp
  414372:	cmpxchg edx,eax
  414375:	retf   
  414376:	dec    eax
  414377:	adc    edx,DWORD PTR [edi]
  414379:	cmp    BYTE PTR [eax-0x4a8168b1],0xa3
  414380:	shr    BYTE PTR [edi-0x4c86f0ba],1
  414386:	adc    BYTE PTR [ebp-0x54],0x93
  41438a:	int    0x59
  41438c:	std    
  41438d:	cld    
  41438e:	loope  0x414333
  414390:	cs mov ebx,0x5b9bdbef
  414396:	and    al,0x2b
  414398:	push   ebp
  414399:	adc    eax,0xa58e96d0
  41439e:	rol    cl,0x1a
  4143a1:	add    DWORD PTR [esi-0x398e7112],ebx
  4143a7:	test   bl,0x62
  4143aa:	inc    ebp
  4143ab:	loope  0x4143f2
  4143ad:	stos   DWORD PTR es:[edi],eax
  4143ae:	inc    ebp
  4143af:	dec    edx
  4143b0:	push   ss
  4143b1:	sbb    eax,0xb1335be7
  4143b6:	xchg   ecx,eax
  4143b7:	jo     0x4143fc
  4143b9:	jne    0x41437b
  4143bb:	test   esp,eax
  4143bd:	imul   ecx,DWORD PTR [ebx],0x9020c0b3
  4143c3:	xchg   ecx,eax
  4143c4:	outs   dx,DWORD PTR ds:[esi]
  4143c6:	sbb    al,0xaf
  4143c8:	popf   
  4143c9:	mov    dh,0x88
  4143cb:	jne    0x4143e8
  4143cd:	xchg   ebx,eax
  4143ce:	and    al,0xa6
  4143d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143d1:	and    esp,edx
  4143d3:	xchg   ebp,eax
  4143d4:	jne    0x414449
  4143d6:	aaa    
  4143d7:	cmp    ecx,ebx
  4143d9:	das    
  4143da:	(bad)  
  4143db:	push   esi
  4143dc:	cld    
  4143dd:	sbb    bl,BYTE PTR [esi+0x8]
  4143e0:	scas   eax,DWORD PTR es:[edi]
  4143e1:	mov    ecx,0x61b8f8ac
  4143e6:	jno    0x414432
  4143e8:	out    dx,eax
  4143e9:	loope  0x41443b
  4143eb:	out    dx,eax
  4143ec:	pop    ds
  4143ed:	jecxz  0x41441f
  4143ef:	js     0x414388
  4143f1:	std    
  4143f2:	xchg   edx,eax
  4143f3:	fnstcw WORD PTR [ebx+0x3d]
  4143f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143f7:	test   eax,0x1e8858ed
  4143fc:	iret   
  4143fd:	test   BYTE PTR [edi+0x38],0xd7
  414401:	lds    esi,FWORD PTR [ecx+0x5]
  414404:	fist   DWORD PTR [edx]
  414406:	dec    ebx
  414407:	iret   
  414408:	and    bl,BYTE PTR [ebx+0x65eefadd]
  41440e:	mov    ah,0x95
  414410:	(bad)  
  414411:	retf   
  414412:	jmp    0x41448f
  414414:	push   esi
  414415:	cmp    DWORD PTR [ebp+0x34],0xfffffffc
  414419:	gs jno 0x4143de
  41441c:	(bad)  
  41441d:	xor    al,0x4b
  41441f:	mov    al,ds:0x3b62ac1b
  414424:	pop    ebp
  414425:	loop   0x4144a2
  414427:	pusha  
  414428:	adc    al,0xcc
  41442a:	jnp    0x41445c
  41442c:	xor    ah,dl
  41442e:	mov    ds:0x66e9a744,eax
  414433:	pop    esi
  414434:	adc    ebx,DWORD PTR [esi+0x11]
  414437:	adc    DWORD PTR [esp+ebx*2-0x4e],ebp
  41443b:	add    al,0x16
  41443d:	cmp    al,0x5a
  41443f:	fmul   DWORD PTR [edx-0x2f]
  414442:	jmp    0xa7d48419
  414447:	shl    ecx,0xc1
  41444a:	jb     0x41445a
  41444c:	into   
  41444d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41444e:	loopne 0x414431
  414450:	and    DWORD PTR [ebx],esp
  414452:	into   
  414453:	es in  eax,dx
  414455:	adc    BYTE PTR ds:0xae69653b,0xb0
  41445c:	popf   
  41445d:	loopne 0x4143e8
  41445f:	into   
  414460:	jo     0x414412
  414462:	dec    ebp
  414463:	cmp    DWORD PTR [edi+0x1f586509],0xffffffd2
  41446a:	push   esp
  41446b:	adc    ecx,ebx
  41446d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41446e:	aas    
  41446f:	mov    cs,WORD PTR [eax+0x2b]
  414472:	shl    BYTE PTR [edi-0x5180d382],cl
  414478:	xor    al,0x68
  41447a:	aam    0x96
  41447c:	dec    ebp
  41447d:	loope  0x41440d
  41447f:	dec    esp
  414480:	(bad)  
  414482:	out    dx,eax
  414483:	inc    edx
  414484:	ret    
  414485:	shrd   DWORD PTR [ebx],esi,0x76
  414489:	add    DWORD PTR [edi],edx
  41448b:	pop    esp
  41448c:	push   ebp
  41448d:	adc    al,0xb8
  41448f:	push   esi
  414490:	dec    edi
  414491:	and    eax,0x371b5ef0
  414496:	dec    ecx
  414497:	mov    edx,0xc4fa5a5c
  41449c:	in     al,0x91
  41449e:	(bad)  
  41449f:	imul   esi,DWORD PTR [ecx+0x703349d5],0xffffffe1
  4144a6:	pop    eax
  4144a7:	sub    al,0x4f
  4144a9:	mov    bl,0x2d
  4144ab:	outs   dx,DWORD PTR ds:[esi]
  4144ac:	and    al,0xbf
  4144ae:	pop    esp
  4144af:	push   eax
  4144b0:	mov    bl,0x62
  4144b2:	popa   
  4144b3:	mov    BYTE PTR [ebp+0x2d],al
  4144b6:	pop    edx
  4144b7:	or     dh,BYTE PTR [edi+0x39]
  4144ba:	or     al,0x66
  4144bc:	sub    BYTE PTR ds:0xc1fd20b1,bh
  4144c2:	in     eax,0x1b
  4144c4:	pop    esp
  4144c5:	and    BYTE PTR ss:[edi+0x25],bh
  4144c9:	jmp    0x25d:0xd4cc55a8
  4144d0:	mov    WORD PTR [eax],ds
  4144d2:	push   esp
  4144d3:	sbb    al,0x13
  4144d5:	icebp  
  4144d6:	test   eax,edx
  4144d8:	call   DWORD PTR [edx-0x4f]
  4144db:	mov    ah,0xa8
  4144dd:	ret    0x1412
  4144e0:	fnsave [ebx+0x77]
  4144e3:	(bad)  [edx-0x4f]
  4144e6:	retf   
  4144e7:	rol    DWORD PTR [ecx+0x2d],1
  4144ea:	ss ret 
  4144ec:	dec    ebp
  4144ed:	adc    al,cl
  4144ef:	out    0xbf,eax
  4144f1:	rol    DWORD PTR [edi-0x2b1b519e],cl
  4144f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144f8:	lods   al,BYTE PTR ds:[esi]
  4144f9:	inc    edx
  4144fa:	jle    0x4144d0
  4144fc:	pop    esp
  4144fd:	je     0x41454e
  4144ff:	and    ah,0xd3
  414502:	fcmovbe st,st(2)
  414504:	jae    0x41451f
  414506:	xchg   ebx,eax
  414507:	sub    edi,esi
  414509:	mov    dh,0x1b
  41450b:	in     al,0xf0
  41450d:	stos   BYTE PTR es:[edi],al
  41450e:	mov    DWORD PTR [esi-0x21],ecx
  414511:	xor    eax,0xd8a11106
  414516:	xchg   edx,eax
  414517:	mov    WORD PTR [edx],cs
  414519:	ss in  al,dx
  41451b:	cdq    
  41451c:	ja     0x41457a
  41451e:	ja     0x41451b
  414520:	call   0xd3cc:0x209e4691
  414527:	jmp    0x8458ad5d
  41452c:	leave  
  41452d:	lahf   
  41452e:	(bad)  
  41452f:	mov    dh,0xe4
  414531:	int    0xec
  414533:	je     0x414581
  414535:	rcr    BYTE PTR [ecx-0x260f2530],0x52
  41453c:	jno    0x41452f
  41453e:	mov    eax,0x5ffae14e
  414543:	mov    dh,0x4c
  414545:	popf   
  414546:	rcl    DWORD PTR [esi-0x68e46a9a],cl
  41454c:	lahf   
  41454d:	les    edx,FWORD PTR [ecx]
  41454f:	fnstsw WORD PTR [edx+0x769db600]
  414555:	adc    al,0xca
  414557:	(bad)
  41455b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41455c:	sub    al,0x2
  41455e:	paddb  mm1,mm7
  414561:	cld    
  414562:	test   BYTE PTR [edi-0x60],0x20
  414566:	dec    ebx
  414567:	jne    0x414547
  414569:	xor    ebp,esp
  41456b:	or     al,BYTE PTR [edi+0x5184cf9d]
  414571:	push   edx
  414572:	mov    esp,DWORD PTR [edx-0x55190bbb]
  414578:	lea    ebx,[ebx]
  41457a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41457b:	pop    ss
  41457c:	inc    esi
  41457d:	int    0x63
  41457f:	fwait
  414580:	sub    edi,0x2d
  414583:	out    0x61,eax
  414585:	ds adc al,0xbc
  414588:	add    BYTE PTR [esi-0x4],dl
  41458b:	jge    0x414571
  41458d:	mov    fs,esi
  41458f:	cs jo  0x414519
  414592:	in     al,0xaf
  414594:	popf   
  414595:	jb     0x414572
  414597:	scas   al,BYTE PTR es:[edi]
  414598:	mov    ebp,0xe450a476
  41459d:	sar    ecx,1
  41459f:	fadd   DWORD PTR [ebx]
  4145a1:	add    bh,BYTE PTR [edi]
  4145a3:	mov    WORD PTR [esi],?
  4145a5:	retf   0x25c4
  4145a8:	fadd   st(0),st
  4145aa:	and    eax,0x75c9c405
  4145af:	call   0x290c:0xbd8630c4
  4145b6:	push   0xb2a3fe21
  4145bb:	pop    ebx
  4145bc:	xchg   ebp,eax
  4145bd:	popa   
  4145be:	aaa    
  4145bf:	jle    0x414546
  4145c1:	ja     0x414549
  4145c3:	std    
  4145c4:	and    ebx,ebx
  4145c6:	push   0x4d
  4145c8:	repnz fld QWORD PTR [ebp+0x20]
  4145cc:	jno    0x4145e9
  4145ce:	add    eax,0x55422b7e
  4145d3:	sbb    DWORD PTR [edx],esp
  4145d5:	cmp    eax,0xde83fff0
  4145da:	out    dx,al
  4145db:	int    0x36
  4145dd:	fsub   DWORD PTR [edi]
  4145df:	(bad)  
  4145e0:	sar    BYTE PTR [esi-0x4810a9bc],cl
  4145e6:	or     BYTE PTR [eax],0x8f
  4145e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145ea:	adc    eax,0x9a4d154b
  4145ef:	jb     0x414609
  4145f1:	adc    ebx,DWORD PTR [ebx-0x280f4f6f]
  4145f7:	sub    BYTE PTR [ecx-0x28705290],dl
  4145fd:	outs   dx,DWORD PTR ds:[esi]
  4145fe:	ins    BYTE PTR es:[edi],dx
  4145ff:	dec    edi
  414600:	mov    esi,0xfec760ee
  414605:	int    0xd5
  414607:	jl     0x41466c
  414609:	or     bh,BYTE PTR [ecx]
  41460b:	cdq    
  41460c:	ds and al,0x61
  41460f:	push   es
  414610:	stc    
  414611:	sub    eax,0xfb5ef9ce
  414616:	or     esi,DWORD PTR [edi+esi*1]
  414619:	outs   dx,DWORD PTR ds:[esi]
  41461a:	add    eax,0x52957a36
  41461f:	clc    
  414620:	jnp    0x41461b
  414622:	xor    esi,DWORD PTR gs:[ebx-0x3eb3b08b]
  414629:	sbb    ah,al
  41462b:	jecxz  0x414698
  41462d:	adc    al,BYTE PTR [esi]
  41462f:	xor    ch,dl
  414631:	add    eax,0x56e0beda
  414636:	or     DWORD PTR [eax],ebx
  414638:	ja     0x4146aa
  41463a:	adc    DWORD PTR [edx-0x5e],edx
  41463d:	adc    ah,BYTE PTR [ebp-0x2a]
  414640:	bound  eax,QWORD PTR [ebp-0x3a0601c]
  414646:	outs   dx,BYTE PTR ds:[esi]
  414647:	inc    esp
  414648:	jle    0x4145cb
  41464a:	lds    edx,FWORD PTR [eax+0x3d092413]
  414650:	inc    esp
  414651:	cld    
  414652:	scas   eax,DWORD PTR es:[edi]
  414653:	call   0xf35fad3d
  414658:	adc    ebp,DWORD PTR [ebx-0x39f8722b]
  41465e:	dec    esi
  41465f:	xchg   esi,eax
  414660:	sbb    ah,bl
  414662:	or     ah,BYTE PTR [ebx]
  414664:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414665:	mov    dh,0x8e
  414667:	push   ecx
  414668:	push   0x7a
  41466a:	inc    edi
  41466b:	jne    0x414617
  41466d:	adc    ebp,DWORD PTR [edi-0x70]
  414670:	push   eax
  414671:	and    BYTE PTR [ebp+0x3d],bh
  414674:	rcl    ah,1
  414676:	push   edx
  414677:	xchg   ebp,eax
  414678:	adc    eax,0x7b460ba8
  41467d:	out    dx,eax
  41467e:	sahf   
  41467f:	les    edi,FWORD PTR [ecx]
  414681:	daa    
  414682:	adc    BYTE PTR [esi-0x74],ah
  414685:	pop    DWORD PTR [ecx+0xe]
  414688:	mov    ebp,0x837878d2
  41468d:	cmp    DWORD PTR [eax+edi*4-0x720364b8],esi
  414694:	pop    ebx
  414695:	(bad)  
  414696:	push   ebp
  414697:	out    dx,eax
  414698:	fsubr  QWORD PTR [edi]
  41469a:	jmp    0x3f52:0xf99bd38c
  4146a1:	push   eax
  4146a2:	int3   
  4146a3:	into   
  4146a4:	sbb    eax,0x8eda5ace
  4146a9:	dec    edx
  4146aa:	stos   BYTE PTR es:[edi],al
  4146ab:	inc    esi
  4146ac:	(bad)  
  4146ad:	xchg   esp,eax
  4146ae:	ficomp DWORD PTR ds:0x24dd57f8
  4146b4:	ret    
  4146b5:	mov    edx,DWORD PTR [esi-0x34]
  4146b8:	inc    ecx
  4146b9:	test   eax,0xaf2beae4
  4146be:	cs and al,0xb4
  4146c1:	pop    edi
  4146c2:	mov    cl,0x2e
  4146c4:	pusha  
  4146c5:	jecxz  0x4146d7
  4146c7:	push   DWORD PTR [ecx+ebp*4]
  4146ca:	xadd   BYTE PTR [ebx-0x43],bh
  4146ce:	push   0xed0d7556
  4146d3:	in     eax,0xfc
  4146d5:	(bad)  
  4146d6:	jle    0x4146c4
  4146d8:	push   ss
  4146d9:	arpl   WORD PTR [edx],ax
  4146db:	ret    0x15e2
  4146de:	dec    edx
  4146df:	xchg   edi,eax
  4146e0:	xchg   ebp,eax
  4146e1:	cld    
  4146e2:	add    DWORD PTR ds:0xed6e0f2b,edi
  4146e8:	ficom  DWORD PTR [eax+0x548d1785]
  4146ee:	mov    esi,0x8ca93573
  4146f3:	in     eax,0x49
  4146f5:	add    eax,0xb564b315
  4146fa:	in     eax,dx
  4146fb:	jmp    DWORD PTR [ecx]
  4146fd:	sub    BYTE PTR [ebx],al
  4146ff:	adc    edx,DWORD PTR [esi]
  414701:	sub    edx,DWORD PTR [ebx+0x2c]
  414704:	jno    0x41469a
  414706:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414707:	push   ds
  414708:	out    0xc9,eax
  41470a:	(bad)  
  41470d:	inc    esp
  41470e:	mov    cl,BYTE PTR [edx-0x66]
  414711:	dec    ecx
  414712:	pop    esi
  414713:	push   cs
  414714:	adc    DWORD PTR [edx],0xd105cfb4
  41471a:	pop    ecx
  41471b:	mov    al,ds:0xfc093f72
  414720:	cmp    al,0x7b
  414722:	mov    bl,0x9a
  414725:	int    0xf3
  414727:	push   ebp
  414728:	jb     0x414771
  41472a:	push   edi
  41472b:	xor    esi,0x7
  41472e:	loop   0x4146d1
  414730:	mov    al,0x51
  414732:	add    al,0x7
  414734:	pop    esp
  414735:	xchg   ebp,eax
  414736:	mov    dl,0x3c
  414738:	push   edx
  414739:	mov    esp,0x91217e56
  41473e:	xchg   ecx,eax
  41473f:	ret    0xde5
  414742:	push   ecx
  414743:	jmp    0x9139:0xc73ddcb6
  41474a:	xchg   BYTE PTR [ecx+0x33],bh
  41474d:	push   ecx
  41474e:	fwait
  41474f:	push   esp
  414750:	jae    0x414789
  414752:	aas    
  414753:	pop    esi
  414754:	and    cl,BYTE PTR [ecx-0x7b]
  414757:	or     BYTE PTR [ecx+0x42a4cad7],0x9
  41475e:	lods   al,BYTE PTR ds:[esi]
  41475f:	arpl   WORD PTR [ebx+0x39a9e4a3],dx
  414765:	mov    al,ds:0x9de18271
  41476a:	mov    WORD PTR [eax-0x2a],?
  41476d:	add    DWORD PTR [ecx],ebp
  41476f:	repnz and al,0x3f
  414772:	(bad)  
  414773:	loope  0x414773
  414775:	sti    
  414776:	add    al,0xe7
  414778:	jb     0x414768
  41477a:	jb     0xa1de6508
  414780:	aad    0xdf
  414782:	mov    ch,0xe9
  414784:	xchg   edx,eax
  414785:	xor    eax,0x1d2d6fc7
  41478a:	and    edx,esi
  41478c:	in     eax,dx
  41478d:	add    BYTE PTR [ebp+0x431d9f3a],dh
  414793:	jbe    0x41476a
  414795:	data16 lods al,BYTE PTR ds:[esi]
  414797:	mov    esp,0xaf21df28
  41479c:	stc    
  41479d:	sbb    eax,0x6585943f
  4147a2:	iret   
  4147a3:	in     al,0x55
  4147a5:	xchg   ecx,eax
  4147a6:	leave  
  4147a7:	jae    0x414736
  4147a9:	xchg   BYTE PTR [eax+0x2d],bl
  4147ac:	mov    ds:0x6f7b249c,eax
  4147b1:	jbe    0x414763
  4147b3:	sti    
  4147b4:	aas    
  4147b5:	mov    DWORD PTR [edx-0x7f],ecx
  4147b8:	jnp    0x41480d
  4147ba:	loopne 0x414796
  4147bc:	dec    eax
  4147bd:	mov    ebp,0xbd8ac2e7
  4147c2:	cmp    ebx,edx
  4147c4:	fild   WORD PTR [ecx+ebx*8]
  4147c7:	and    DWORD PTR [edx-0x579810c0],esp
  4147cd:	lock enter 0x8e04,0xfd
  4147d2:	into   
  4147d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147d4:	repz xchg edx,eax
  4147d6:	push   0xffffff9d
  4147d8:	arpl   WORD PTR [esi-0x4cfda85e],di
  4147de:	adc    DWORD PTR [ebx+ebp*1],eax
  4147e1:	push   edx
  4147e2:	dec    edi
  4147e3:	popa   
  4147e4:	scas   al,BYTE PTR es:[edi]
  4147e5:	inc    ebp
  4147e6:	gs hlt 
  4147e8:	loop   0x4147fd
  4147ea:	pop    ebx
  4147eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147ec:	retf   0xd63c
  4147ef:	xor    ch,0xfc
  4147f2:	es jmp 0x8475ef48
  4147f8:	int3   
  4147f9:	enter  0xa276,0x52
  4147fd:	jecxz  0x414822
  4147ff:	cmp    DWORD PTR [esp+eax*4-0x74],ebx
  414803:	sbb    DWORD PTR [ebx],ecx
  414805:	xlat   BYTE PTR ds:[ebx]
  414806:	mov    BYTE PTR [edx],dh
  414808:	outs   dx,BYTE PTR ds:[esi]
  414809:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41480a:	mov    ch,BYTE PTR ds:0x67313c30
  414810:	aad    0x36
  414812:	mov    ds:0x12f266fa,eax
  414817:	pop    es
  414818:	div    eax
  41481a:	clc    
  41481b:	dec    ecx
  41481c:	mov    dh,0x64
  41481e:	jne    0x4147f6
  414820:	push   ecx
  414821:	outs   dx,DWORD PTR ds:[esi]
  414822:	repnz mov ch,0xb4
  414825:	cld    
  414826:	dec    ebp
  414827:	xchg   edi,eax
  414828:	ja     0x414872
  41482a:	jnp    0x41489c
  41482c:	xor    bh,dl
  41482e:	mov    ah,0x7f
  414830:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414831:	sbb    al,0x7f
  414833:	pop    ebx
  414834:	push   ebx
  414835:	out    0x94,al
  414837:	mov    ebx,0x3efb61b
  41483c:	mov    al,0xc4
  41483e:	dec    ecx
  41483f:	ins    BYTE PTR es:[edi],dx
  414840:	xor    esp,DWORD PTR [eax-0x5b215be9]
  414846:	or     DWORD PTR [ecx-0x6a9ba1a9],ebx
  41484c:	mov    dh,0x4a
  41484e:	add    DWORD PTR [eax],0xf29e01ce
  414854:	sbb    dh,bl
  414856:	(bad)  
  414858:	fidiv  WORD PTR [esi+0x30e54499]
  41485e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41485f:	daa    
  414860:	push   esi
  414861:	(bad)  
  414862:	retf   
  414863:	(bad)  
  414864:	imul   edx,DWORD PTR [eax+0x6e],0x185058b
  41486b:	ss mov al,ss:0x330db78
  414872:	adc    DWORD PTR [ebx-0x4a],0x28d6099
  414879:	adc    ecx,ebx
  41487b:	lea    esi,[ebp-0x23bc33ab]
  414881:	dec    ecx
  414882:	pop    ecx
  414883:	(bad)  
  414884:	shl    DWORD PTR [ebx],0x58
  414887:	push   0xf7e4f07d
  41488c:	arpl   bx,bp
  41488e:	and    DWORD PTR [esi-0x4683dcb6],edx
  414894:	mov    al,0xb5
  414896:	or     BYTE PTR [esp+0x491f2e3d],bh
  41489d:	push   0x4b5ee06a
  4148a2:	push   esi
  4148a3:	stc    
  4148a4:	cmp    ebp,DWORD PTR [edx+0x356a44d6]
  4148aa:	sbb    dl,bl
  4148ac:	inc    esp
  4148ad:	mov    al,0xa5
  4148af:	enter  0x550b,0x8c
  4148b3:	je     0x4148a5
  4148b5:	mov    edx,DWORD PTR [ebp+0x8]
  4148b8:	xor    edx,eax
  4148ba:	add    edx,esi
  4148bc:	jne    0x4124e5
  4148c2:	mov    edx,DWORD PTR [ebp-0xc]
  4148c5:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4148cc:	mov    bl,BYTE PTR [ebp-0x1]
  4148cf:	cmp    dl,bl
  4148d1:	je     0x416d0f
  4148d7:	mov    ecx,DWORD PTR [ebp-0x5c]
  4148da:	mov    edx,DWORD PTR [ebp-0xc]
  4148dd:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4148e4:	mov    ebx,DWORD PTR [ebp+0xc]
  4148e7:	xor    ecx,eax
  4148e9:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f5]
  4148f0:	jne    0x4191a3
  4148f6:	mov    ecx,DWORD PTR [ebp-0x5c]
  4148f9:	mov    edx,DWORD PTR [ebp+0xc]
  4148fc:	xor    ecx,eax
  4148fe:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f5]
  414906:	mov    edx,DWORD PTR [ebp-0x18]
  414909:	xor    edx,eax
  41490b:	add    edx,esi
  41490d:	cmp    ecx,edx
  41490f:	mov    ecx,DWORD PTR [ebp-0x14]
  414912:	mov    DWORD PTR [ebp+0x8],ecx
  414915:	mov    ecx,DWORD PTR [ebp+0x8]
  414918:	je     0x41b60b
  41491e:	xor    ecx,eax
  414920:	add    ecx,esi
  414922:	mov    ecx,0x242ebf1
  414927:	je     0x416d97
  41492d:	mov    edx,DWORD PTR [ebp+0x8]
  414930:	jmp    0x416c90
  414935:	jo     0x414954
  414937:	cmc    
  414938:	dec    eax
  414939:	or     BYTE PTR [eax-0x4213ea36],0xb0
  414940:	sub    eax,0x2a0cfa87
  414945:	mov    ecx,0x3e838069
  41494a:	pop    esi
  41494b:	add    DWORD PTR [ebx+0x106c124c],0x69
  414952:	std    
  414953:	add    ch,BYTE PTR [eax-0x12]
  414956:	jg     0x414962
  414958:	inc    edx
  414959:	xor    BYTE PTR [edi+0x7dad60d2],al
  41495f:	jp     0x4149a6
  414961:	pop    ebp
  414962:	pop    esp
  414963:	lahf   
  414964:	fwait
  414965:	adc    bh,BYTE PTR [edx]
  414967:	pop    ecx
  414968:	clc    
  414969:	(bad)
  41496c:	inc    ebx
  41496d:	and    DWORD PTR [edi-0x4c13f174],edx
  414973:	pop    esi
  414974:	inc    BYTE PTR [esi]
  414976:	stos   BYTE PTR es:[edi],al
  414977:	sbb    esp,ecx
  414979:	aad    0x4e
  41497b:	xor    al,0x4e
  41497d:	dec    ebp
  41497e:	arpl   WORD PTR [ebp+0x4e7d763],bx
  414984:	and    eax,0xe4231120
  414989:	push   edx
  41498a:	lds    edx,FWORD PTR [esi-0x530d11ee]
  414990:	ins    DWORD PTR es:[edi],dx
  414991:	or     al,0xa4
  414993:	rcl    DWORD PTR [ecx],1
  414995:	xor    dh,bh
  414997:	nop
  414998:	xchg   esp,eax
  414999:	lods   al,BYTE PTR ds:[esi]
  41499a:	adc    BYTE PTR [eax-0x73b0f19e],ah
  4149a0:	sahf   
  4149a1:	push   cs
  4149a2:	sub    eax,0xf348e9a1
  4149a7:	enter  0x6504,0x5d
  4149ab:	cld    
  4149ac:	popf   
  4149ad:	sub    BYTE PTR [ecx],dh
  4149af:	popa   
  4149b0:	push   0x4e93436b
  4149b5:	jns    0x4149b5
  4149b7:	pop    eax
  4149b8:	cs pxor mm3,mm3
  4149bc:	mov    dl,BYTE PTR [ebp+eax*8+0x71]
  4149c0:	pop    ecx
  4149c1:	fsub   st(7),st
  4149c3:	fmul   DWORD PTR [ebx+edx*2-0x70]
  4149c7:	jns    0x4149bd
  4149c9:	jb     0x414a1f
  4149cb:	rcr    DWORD PTR [ecx],cl
  4149cd:	fs (bad) 
  4149d0:	ins    DWORD PTR es:[edi],dx
  4149d1:	pushf  
  4149d2:	mov    ds:0x8d12c9b9,eax
  4149d7:	in     al,0x57
  4149d9:	sub    al,0xdd
  4149db:	cmp    ah,BYTE PTR [esp+ecx*1]
  4149de:	aam    0x6a
  4149e0:	pusha  
  4149e1:	ja     0x41496e
  4149e3:	call   0x2d2787d2
  4149e8:	aam    0x22
  4149ea:	xlat   BYTE PTR ds:[ebx]
  4149eb:	mov    esi,0x6b7c3425
  4149f0:	cmp    esp,DWORD PTR [esi-0x34]
  4149f3:	cs mov eax,0xaa87cfd3
  4149f9:	inc    ecx
  4149fa:	pusha  
  4149fb:	adc    edx,DWORD PTR [ecx-0x58f6cbc1]
  414a01:	popa   
  414a02:	mov    edx,0x16f34443
  414a07:	pop    eax
  414a08:	inc    ecx
  414a09:	nop
  414a0a:	jae    0x414a7c
  414a0c:	pop    edx
  414a0d:	out    0xb3,eax
  414a0f:	mov    dl,0x6f
  414a11:	and    BYTE PTR [ebx-0x1d0f72a1],bh
  414a17:	(bad)  
  414a19:	push   eax
  414a1a:	(bad)  
  414a1b:	pop    eax
  414a1c:	or     DWORD PTR [ecx+esi*2],0xe84d1168
  414a23:	xchg   esi,ebx
  414a25:	jmp    0x414a88
  414a27:	stc    
  414a28:	xchg   edi,eax
  414a29:	(bad)  
  414a2a:	cmp    al,ah
  414a2c:	mov    ds,ebx
  414a2e:	pop    edi
  414a2f:	add    eax,DWORD PTR [ebp+0x23]
  414a32:	popf   
  414a33:	push   eax
  414a34:	jns    0x414a5d
  414a36:	retf   0xcb38
  414a39:	dec    DWORD PTR [edx]
  414a3b:	mov    cl,0xd
  414a3d:	mov    ch,0x3c
  414a3f:	push   edx
  414a40:	jg     0x4149cf
  414a42:	pop    esi
  414a43:	add    dl,ah
  414a45:	(bad)  
  414a46:	hlt    
  414a47:	jle    0x414a9c
  414a49:	mov    ds:0xe1251832,eax
  414a4e:	in     eax,dx
  414a4f:	repz and eax,0xe798a694
  414a55:	or     edx,esi
  414a57:	xor    eax,0xf2056274
  414a5c:	xchg   edx,eax
  414a5d:	push   edi
  414a5e:	push   ecx
  414a5f:	mov    eax,ds:0xc8a07e0f
  414a64:	inc    esi
  414a65:	pop    ebx
  414a66:	sub    edi,eax
  414a68:	dec    ebp
  414a69:	test   eax,0x41509fd5
  414a6e:	int3   
  414a6f:	push   eax
  414a70:	(bad)  
  414a71:	out    0xb7,eax
  414a73:	jb     0x414aee
  414a75:	ror    BYTE PTR [edi-0x77],1
  414a78:	dec    esp
  414a79:	nop
  414a7a:	cmp    ebp,edi
  414a7c:	stos   DWORD PTR es:[edi],eax
  414a7d:	jne    0x414a4f
  414a7f:	pop    esi
  414a80:	jge    0x414ae4
  414a82:	push   0x49249695
  414a87:	iret   
  414a88:	aam    0x7b
  414a8a:	fdivr  st,st(2)
  414a8c:	lea    ebx,[esi+0x37889cb6]
  414a92:	jb     0x414a9e
  414a94:	inc    edi
  414a95:	and    esp,DWORD PTR gs:[ebx]
  414a98:	pop    ecx
  414a99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a9b:	es adc eax,0x6f9e5791
  414aa1:	push   edi
  414aa2:	stos   BYTE PTR es:[edi],al
  414aa3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414aa4:	ins    BYTE PTR es:[edi],dx
  414aa5:	stos   BYTE PTR es:[edi],al
  414aa6:	add    al,0xd6
  414aa8:	cmp    dl,BYTE PTR [eax]
  414aaa:	dec    ecx
  414aab:	ret    
  414aac:	sbb    eax,0xe0b86b3e
  414ab1:	les    esi,FWORD PTR [ebp+0x484586af]
  414ab7:	bound  ebx,QWORD PTR [ecx]
  414ab9:	ins    DWORD PTR es:[edi],dx
  414aba:	jmp    0x5093515e
  414abf:	data16 test cl,al
  414ac2:	fdivr  QWORD PTR [ebx-0x71d180e]
  414ac8:	(bad)
  414acb:	push   ss
  414acc:	inc    eax
  414acd:	jbe    0x414aa8
  414acf:	jl     0x414aa8
  414ad1:	push   ss
  414ad2:	sub    DWORD PTR [ecx+0x1ba09d26],esi
  414ad8:	adc    ebp,DWORD PTR [eax]
  414ada:	(bad)  
  414adb:	jnp    0x414aa2
  414add:	cdq    
  414ade:	pop    ebp
  414adf:	pusha  
  414ae0:	scas   eax,DWORD PTR es:[edi]
  414ae1:	add    eax,0x6814c39d
  414ae6:	cmp    bl,BYTE PTR [ebx]
  414ae8:	push   ds
  414ae9:	push   eax
  414aea:	jecxz  0x414abd
  414aec:	jl     0x414afd
  414aee:	das    
  414aef:	jge    0x414a9d
  414af1:	mov    esi,0x3ea8eae
  414af6:	stos   DWORD PTR es:[edi],eax
  414af7:	adc    cl,ch
  414af9:	or     BYTE PTR [esi+0x2a1b6805],0xc5
  414b00:	inc    ecx
  414b01:	sub    cl,bh
  414b03:	pop    eax
  414b04:	loop   0x414a8c
  414b06:	daa    
  414b07:	jae    0x414b43
  414b09:	adc    al,0x37
  414b0b:	in     al,dx
  414b0c:	fadd   DWORD PTR [esp+ebx*8]
  414b0f:	xchg   DWORD PTR [edx-0x1e],edi
  414b12:	nop
  414b13:	push   edx
  414b14:	xchg   esi,eax
  414b15:	in     al,0xca
  414b17:	mov    bl,0x94
  414b19:	pushw  0xee62
  414b1d:	sbb    DWORD PTR [ecx],eax
  414b1f:	retf   0x80d2
  414b22:	loop   0x414b2b
  414b24:	mov    ebp,0x6d41f055
  414b29:	out    0x6e,al
  414b2b:	ret    
  414b2c:	push   0x20
  414b2e:	mov    edi,0xa8907acc
  414b33:	stc    
  414b34:	pop    esi
  414b35:	aam    0x51
  414b37:	cli    
  414b38:	ret    0x684e
  414b3b:	aad    0xcf
  414b3d:	js     0x414ba3
  414b3f:	xor    eax,0x9f77a752
  414b44:	lods   eax,DWORD PTR ds:[esi]
  414b45:	sar    bh,0xf4
  414b48:	mov    dh,0xbb
  414b4a:	shl    BYTE PTR [esi],cl
  414b4c:	and    edi,DWORD PTR [esi+0x3]
  414b4f:	mov    edi,0x6e49e366
  414b54:	cwde   
  414b55:	fld    st(3)
  414b57:	(bad)  
  414b58:	(bad)  
  414b59:	sbb    BYTE PTR [ebx+edx*8],ah
  414b5c:	sub    dh,BYTE PTR [edi]
  414b5e:	lahf   
  414b5f:	cs cdq 
  414b61:	mov    ecx,0x844d5616
  414b66:	idiv   BYTE PTR [edi+0x3f43d555]
  414b6c:	mov    bh,0x23
  414b6f:	dec    ebx
  414b70:	leave  
  414b71:	fwait
  414b72:	sbb    eax,0x671d6cc0
  414b77:	dec    ebp
  414b78:	mov    esi,0x8f4437cd
  414b7d:	cmp    eax,0xbee35106
  414b82:	push   ebx
  414b83:	mov    al,0x79
  414b85:	bound  esp,QWORD PTR [esi+0x27]
  414b88:	scas   al,BYTE PTR es:[edi]
  414b89:	jmp    0x414b2b
  414b8b:	ret    
  414b8c:	cmc    
  414b8d:	sub    eax,0x2f5dc3cc
  414b92:	sahf   
  414b93:	fdiv   DWORD PTR [ebp-0x5d9e4788]
  414b99:	and    eax,0xd0d094c3
  414b9e:	sub    dh,bh
  414ba0:	test   al,0xb4
  414ba2:	dec    ebx
  414ba3:	loope  0x414bcf
  414ba5:	popa   
  414ba6:	ins    DWORD PTR es:[edi],dx
  414ba7:	outs   dx,DWORD PTR ds:[esi]
  414ba8:	jae    0x414bef
  414baa:	mov    eax,0xf7f789fd
  414baf:	mov    esi,0x2b53244a
  414bb4:	adc    ch,ah
  414bb6:	stc    
  414bb7:	pushf  
  414bb8:	jno    0x414b93
  414bba:	mov    gs,ecx
  414bbc:	or     al,0x86
  414bbe:	cmp    BYTE PTR [edi-0x783cea3c],0x1c
  414bc5:	into   
  414bc6:	pop    edi
  414bc7:	xlat   BYTE PTR ds:[ebx]
  414bc8:	jl     0x414c1b
  414bca:	sahf   
  414bcb:	ret    
  414bcc:	retf   0x974d
  414bcf:	arpl   WORD PTR [ecx-0x6e4b863d],bx
  414bd5:	dec    ebp
  414bd6:	xchg   ebp,eax
  414bd7:	or     ebx,DWORD PTR [ebx+0x5c5c8a0c]
  414bdd:	dec    ecx
  414bde:	push   esp
  414bdf:	cmp    ah,bh
  414be1:	pop    ecx
  414be2:	ins    DWORD PTR es:[edi],dx
  414be3:	mov    edx,0x52a70f9d
  414be8:	push   ss
  414be9:	sbb    al,0xea
  414beb:	sar    DWORD PTR [edx],1
  414bed:	in     eax,0x92
  414bef:	ret    0x4e1a
  414bf2:	stc    
  414bf3:	add    al,0x45
  414bf5:	idiv   BYTE PTR [esi+ebx*2-0xc]
  414bf9:	mov    ds:0xd108e27f,al
  414bfe:	inc    eax
  414bff:	adc    eax,0x8f09f425
  414c04:	iret   
  414c05:	pop    esi
  414c06:	lea    esp,[eax-0x3c858353]
  414c0c:	sbb    dl,dl
  414c0e:	out    dx,al
  414c0f:	aaa    
  414c10:	sbb    ebp,esi
  414c12:	shl    DWORD PTR [edx-0x32d2d3c3],0xf8
  414c19:	cmc    
  414c1a:	(bad)  
  414c1b:	ficom  DWORD PTR [esi+ebx*1+0x20eebb2f]
  414c22:	das    
  414c23:	fistp  DWORD PTR [ebx-0x5d]
  414c26:	inc    ecx
  414c27:	mov    ds:0x6f1c7ffb,eax
  414c2c:	nop
  414c2d:	es fs add al,0x44
  414c31:	nop
  414c32:	lea    ecx,[ecx]
  414c34:	mov    esp,0x159382db
  414c39:	ret    0x904e
  414c3c:	popa   
  414c3d:	xlat   BYTE PTR ds:[ebx]
  414c3e:	mov    cl,0x68
  414c40:	dec    ebx
  414c41:	call   0x6f61:0x5a97b2db
  414c48:	out    0xca,al
  414c4a:	xchg   edx,eax
  414c4b:	add    DWORD PTR [edx-0x31],esi
  414c4e:	inc    edi
  414c4f:	xor    ebp,DWORD PTR [ecx-0x19]
  414c52:	jecxz  0x414c57
  414c54:	in     eax,0x96
  414c56:	jp     0x414bec
  414c58:	fcomp  DWORD PTR [eax+0x1b7dbb5b]
  414c5e:	popf   
  414c5f:	ret    
  414c60:	test   BYTE PTR [edx+eiz*8-0x66],dh
  414c64:	lods   eax,DWORD PTR ds:[esi]
  414c65:	xlat   BYTE PTR ds:[ebx]
  414c66:	out    0x9e,al
  414c68:	inc    eax
  414c69:	or     eax,0x1240de47
  414c6e:	call   0xa85327da
  414c73:	loop   0x414cde
  414c75:	and    DWORD PTR [ebx+0x68],ecx
  414c78:	jl     0x414cbe
  414c7a:	js     0x414c40
  414c7c:	or     BYTE PTR [ecx-0x45d4eb0a],cl
  414c82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c83:	fiadd  WORD PTR [ebx]
  414c85:	cld    
  414c86:	sub    BYTE PTR [edi-0x5b],dh
  414c89:	and    eax,0xdbcbf57a
  414c8e:	cmp    BYTE PTR [ecx+0x1d],dh
  414c91:	or     dh,0x25
  414c94:	or     eax,0x6a1df029
  414c99:	stc    
  414c9a:	xchg   BYTE PTR [ebx],ch
  414c9c:	outs   dx,DWORD PTR ds:[esi]
  414c9d:	jecxz  0x414c41
  414c9f:	push   cs
  414ca0:	push   ss
  414ca1:	(bad)  
  414ca2:	mov    ah,0x71
  414ca4:	add    al,0x77
  414ca6:	add    DWORD PTR [ecx+ebp*4-0x32],edi
  414caa:	mov    ecx,0xb07ec31
  414caf:	jmp    0xcc87:0xca2b4a9f
  414cb6:	out    dx,al
  414cb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cb8:	leave  
  414cb9:	iret   
  414cba:	xlat   BYTE PTR ds:[ebx]
  414cbb:	fistp  QWORD PTR [ecx+0x67]
  414cbe:	lods   al,BYTE PTR ds:[esi]
  414cbf:	sbb    ch,BYTE PTR fs:[edx+0x74]
  414cc3:	lock cmp eax,0xb7bff62e
  414cc9:	(bad)  
  414cca:	out    0x85,eax
  414ccc:	and    eax,0x4d1615cb
  414cd1:	sbb    ebp,DWORD PTR [edi+0x7f0a4ac8]
  414cd7:	mov    eax,0xe476e3e4
  414cdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cdd:	mov    WORD PTR [ecx*8-0x1b602397],es
  414ce4:	and    edi,DWORD PTR [ebp-0x42]
  414ce7:	and    al,0xcd
  414ce9:	xor    bl,bl
  414ceb:	push   ss
  414cec:	xchg   esp,eax
  414ced:	popa   
  414cee:	cmp    eax,0xb9f3fb24
  414cf3:	sub    ebx,DWORD PTR [edx]
  414cf5:	xchg   DWORD PTR [edi],eax
  414cf7:	mov    ds:0xe62c02fd,al
  414cfc:	imul   ebx,DWORD PTR ds:[esi],0x91dc0aa9
  414d03:	push   esi
  414d04:	ja     0x414d38
  414d06:	xchg   ebx,eax
  414d07:	and    eax,0x1d088ac3
  414d0c:	sar    ebp,cl
  414d0e:	and    DWORD PTR [edx+0x239c9858],0x6e
  414d15:	loopne 0x414d30
  414d17:	fidivr DWORD PTR [ebx+esi*4+0x2c]
  414d1b:	inc    ebx
  414d1c:	add    BYTE PTR [esi+ecx*4-0x311f80a7],0xf1
  414d24:	sub    DWORD PTR [ebp+0x1a],0x19
  414d28:	xchg   edi,eax
  414d29:	retf   0x9d7d
  414d2c:	xchg   DWORD PTR [esp+eax*4],ecx
  414d2f:	std    
  414d30:	xor    dh,ah
  414d32:	nop
  414d33:	jnp    0x414cc9
  414d35:	or     cl,BYTE PTR ds:0xf4029cab
  414d3b:	imul   ebx,DWORD PTR [edx-0x45873512],0x42
  414d42:	stos   DWORD PTR es:[edi],eax
  414d43:	sub    al,0x65
  414d45:	scas   eax,DWORD PTR es:[edi]
  414d46:	pop    esp
  414d47:	sbb    esp,eax
  414d49:	cmp    bl,ch
  414d4b:	in     al,0x14
  414d4d:	and    eax,0xb7b866c9
  414d52:	mov    esi,0x7fa6384a
  414d57:	jmp    0xd599:0x8227ef1a
  414d5e:	shr    BYTE PTR [eax],0x30
  414d61:	jo     0x414d44
  414d63:	(bad)  [ebp+edx*2+0x5b8eee50]
  414d6a:	push   es
  414d6b:	jo     0x414d50
  414d6d:	pop    ecx
  414d6e:	jle    0x414dee
  414d70:	scas   eax,DWORD PTR es:[edi]
  414d71:	icebp  
  414d72:	je     0x414ddb
  414d74:	xlat   BYTE PTR ds:[ebx]
  414d75:	mov    esi,0xaa39adcf
  414d7a:	pushf  
  414d7b:	stc    
  414d7c:	jecxz  0x414d70
  414d7e:	aas    
  414d7f:	xchg   ebp,eax
  414d80:	test   al,0x41
  414d82:	rol    DWORD PTR [ebp-0x28],cl
  414d85:	dec    edi
  414d86:	(bad)
  414d89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d8a:	dec    eax
  414d8b:	retf   
  414d8c:	push   edi
  414d8d:	dec    BYTE PTR [ebp-0x270b4055]
  414d93:	add    ebx,DWORD PTR [ecx]
  414d95:	mov    ch,0xb4
  414d97:	pop    esp
  414d98:	cmp    DWORD PTR [ebp+0x4c3c7457],ebp
  414d9e:	sub    ah,ch
  414da0:	inc    ecx
  414da1:	stos   BYTE PTR es:[edi],al
  414da2:	mov    ch,0xa7
  414da4:	adc    BYTE PTR [ecx],dl
  414da6:	ss ss inc ebp
  414da9:	dec    eax
  414daa:	cmc    
  414dab:	adc    BYTE PTR [ebx+0x74c64f5b],cl
  414db1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414db2:	outs   dx,DWORD PTR gs:[esi]
  414db4:	adc    ch,BYTE PTR [edx]
  414db6:	sbb    edi,0x9b0fc35f
  414dbc:	mov    WORD PTR [esi+0x1e],ss
  414dbf:	outs   dx,DWORD PTR ds:[esi]
  414dc0:	inc    ebx
  414dc1:	imul   ebx,edx,0x2
  414dc4:	add    eax,0xd77850b
  414dc9:	mov    bl,0xaa
  414dcb:	into   
  414dcc:	add    esi,DWORD PTR [eax]
  414dce:	adc    esp,DWORD PTR [ebx]
  414dd0:	(bad)  
  414dd2:	mov    edi,0x128b5e05
  414dd7:	jmp    0xdf48ab6f
  414ddc:	mov    ebx,0x5ef79589
  414de1:	xchg   esi,eax
  414de2:	test   BYTE PTR [edi-0xad54d41],0x5f
  414de9:	std    
  414dea:	arpl   di,dx
  414dec:	push   0xc2fd5bae
  414df1:	je     0x414da4
  414df3:	ror    esi,0x52
  414df6:	ret    0xd819
  414df9:	ret    
  414dfa:	xchg   esp,eax
  414dfb:	push   ds
  414dfc:	adc    BYTE PTR [eax],al
  414dfe:	pop    edi
  414dff:	jns    0x414db0
  414e01:	(bad)  
  414e02:	scas   al,BYTE PTR es:[edi]
  414e03:	cmp    BYTE PTR [ebp-0x613a8bf5],dh
  414e09:	adc    al,0x78
  414e0b:	popf   
  414e0c:	xor    DWORD PTR [edx+0x4e],0x9f54547d
  414e13:	pop    ss
  414e14:	mov    DWORD PTR [edi],ebp
  414e16:	addr16 out 0xb0,al
  414e19:	lods   al,BYTE PTR ds:[esi]
  414e1a:	push   es
  414e1b:	jnp    0x414e4e
  414e1d:	pop    ds
  414e1e:	xchg   esp,eax
  414e1f:	adc    DWORD PTR [esi-0x398443da],eax
  414e25:	shr    DWORD PTR [esi+0x14],cl
  414e28:	xor    DWORD PTR ds:0xea7a1aca,0x34799f49
  414e32:	mov    al,0x29
  414e34:	lea    edx,[edx+0x2d5176ff]
  414e3a:	xor    al,BYTE PTR [edx+0x4b]
  414e3d:	jb     0x414e28
  414e3f:	pop    eax
  414e40:	(bad)  
  414e41:	in     al,dx
  414e42:	gs dec eax
  414e44:	xor    DWORD PTR [esi+0x5c6a2c1],esi
  414e4a:	pop    esp
  414e4b:	ss out 0x6e,eax
  414e4e:	je     0x414e02
  414e50:	jbe    0x414e45
  414e52:	mov    ebp,edi
  414e54:	cmp    ebp,esi
  414e56:	nop
  414e57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e58:	adc    BYTE PTR [eax],0x84
  414e5b:	loope  0x414de5
  414e5d:	cmc    
  414e5e:	imul   esp,esp,0x17
  414e61:	add    BYTE PTR [ecx+edi*2+0x161db693],dh
  414e68:	clc    
  414e69:	test   BYTE PTR ds:0x1c7446df,cl
  414e6f:	test   BYTE PTR [ebp+0x34e1299d],cl
  414e75:	je     0x414eaa
  414e77:	xchg   edi,eax
  414e78:	xchg   esp,eax
  414e79:	lahf   
  414e7a:	inc    ebp
  414e7b:	mov    edi,0x2aac7f32
  414e80:	test   BYTE PTR [eax],al
  414e82:	push   es
  414e83:	jmp    DWORD PTR [eax+0x0]
  414e86:	xchg   edi,eax
  414e87:	push   edi
  414e88:	out    0xae,al
  414e8a:	ins    DWORD PTR es:[edi],dx
  414e8b:	xchg   edi,eax
  414e8c:	mov    cl,0x1b
  414e8e:	test   DWORD PTR [ebp-0x3a],ebp
  414e91:	adc    DWORD PTR [ebp-0x52],0xa45a8fbd
  414e98:	mov    bl,0x99
  414e9a:	sahf   
  414e9b:	dec    esi
  414e9c:	sub    al,0x5d
  414e9e:	cmp    ecx,eax
  414ea0:	ins    DWORD PTR es:[edi],dx
  414ea1:	cli    
  414ea2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ea3:	add    eax,0x17204d4f
  414ea8:	outs   dx,BYTE PTR ds:[esi]
  414ea9:	xor    al,0x7c
  414eab:	call   0x5b19e8c0
  414eb0:	push   esp
  414eb1:	push   edx
  414eb2:	push   cs
  414eb3:	into   
  414eb4:	xor    esp,DWORD PTR [edx+0x453ea194]
  414eba:	lea    esp,[ecx-0x54d389df]
  414ec0:	mov    bh,0xd5
  414ec2:	popf   
  414ec3:	mov    ebp,0xcac6cdef
  414ec8:	popf   
  414ec9:	scas   al,BYTE PTR es:[edi]
  414eca:	ins    BYTE PTR es:[edi],dx
  414ecb:	ret    
  414ecc:	jo     0x414ea1
  414ece:	xchg   ebx,eax
  414ecf:	pop    ss
  414ed0:	pop    ss
  414ed1:	enter  0x3db4,0x83
  414ed5:	(bad)  
  414ed6:	xchg   esi,eax
  414ed7:	mov    edx,0x6790773d
  414edc:	pop    eax
  414edd:	jne    0x414f54
  414edf:	fsubr  DWORD PTR [edi+0x62491fb5]
  414ee5:	(bad)  
  414ee6:	out    dx,al
  414ee7:	push   0x2b
  414ee9:	xor    eax,0x340f857
  414eee:	mov    ecx,0x97247219
  414ef3:	or     BYTE PTR [edx+0x72],bl
  414ef6:	xchg   ebp,eax
  414ef7:	xchg   BYTE PTR ds:0xa785a595,dh
  414efd:	and    DWORD PTR [edi-0x70f79a03],ecx
  414f03:	daa    
  414f04:	stc    
  414f05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f06:	xor    ah,al
  414f08:	repnz add edx,edx
  414f0b:	sti    
  414f0c:	pop    eax
  414f0d:	fwait
  414f0e:	scas   eax,DWORD PTR es:[edi]
  414f0f:	fistp  DWORD PTR [ebp+0x64e3ae68]
  414f15:	out    dx,al
  414f16:	jp     0x414f92
  414f18:	and    DWORD PTR [ecx+0x17],ebp
  414f1b:	lods   eax,DWORD PTR ds:[esi]
  414f1c:	enter  0xc30b,0xdb
  414f20:	sbb    DWORD PTR [ebx-0x23541433],edi
  414f26:	(bad)  
  414f27:	loope  0x414eee
  414f29:	leave  
  414f2a:	mov    ch,BYTE PTR [ecx+ebp*4-0x75]
  414f2e:	pop    ecx
  414f2f:	or     BYTE PTR [esi],bl
  414f31:	ret    0x1ee0
  414f34:	sbb    eax,0x50b06b56
  414f39:	shr    bh,cl
  414f3b:	cli    
  414f3c:	xor    BYTE PTR [edi],0xe5
  414f3f:	mov    al,ds:0xa35b0a27
  414f44:	sub    eax,0xfd7113da
  414f49:	inc    esp
  414f4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f4b:	fstp   st(6)
  414f4d:	xor    BYTE PTR [edx+0x7623f06c],al
  414f53:	sub    DWORD PTR [ebx+0x42a4b136],esi
  414f59:	push   0x4d4acda3
  414f5e:	xor    BYTE PTR ds:0x4103a41f,dh
  414f64:	add    bh,BYTE PTR [ebx+0x78]
  414f67:	mov    ah,0x50
  414f69:	jp     0x414ef4
  414f6b:	xchg   ebp,eax
  414f6c:	(bad)  
  414f6d:	in     eax,0x60
  414f6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f70:	aam    0x40
  414f72:	xchg   BYTE PTR [eax+0x47e3a5f6],al
  414f78:	aam    0x47
  414f7a:	fsubr  st(3),st
  414f7c:	ss dec edi
  414f7e:	xchg   ebp,eax
  414f7f:	mov    edx,0x746a113c
  414f84:	in     eax,0xdf
  414f86:	jae    0x414f5b
  414f88:	gs inc eax
  414f8a:	xor    BYTE PTR [ecx-0x533186ef],ah
  414f90:	cwde   
  414f91:	pop    es
  414f92:	scas   eax,DWORD PTR es:[edi]
  414f93:	loopne 0x414f8c
  414f95:	frstor [edx]
  414f97:	mov    eax,0x5fb03f0f
  414f9c:	mov    BYTE PTR [eax+eiz*4-0x6],ch
  414fa0:	cs jns 0x414fad
  414fa3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fa4:	jbe    0x414f5a
  414fa6:	mov    al,ds:0x31a947dd
  414fab:	adc    al,0x2d
  414fad:	call   0x3d43dc56
  414fb2:	sub    al,0xe
  414fb4:	ja     0x414fd8
  414fb6:	fst    DWORD PTR [edx]
  414fb8:	mov    esi,0xe4e1667e
  414fbd:	inc    ebp
  414fbe:	shl    DWORD PTR ds:0x41eabfc8,cl
  414fc4:	add    dh,ah
  414fc6:	dec    esi
  414fc7:	(bad)  
  414fc8:	jb     0x414f56
  414fca:	sub    ecx,DWORD PTR [eax+0x3750bf8e]
  414fd0:	cmp    eax,0x280c68d9
  414fd5:	in     al,0xf4
  414fd7:	dec    ebp
  414fd8:	cli    
  414fd9:	ss pop eax
  414fdb:	sar    BYTE PTR [edx+0x44],0xd9
  414fdf:	push   ebp
  414fe0:	dec    ecx
  414fe1:	add    ecx,ecx
  414fe3:	jge    0x415024
  414fe5:	adc    al,0xe3
  414fe7:	lock dec edi
  414fe9:	dec    ebx
  414fea:	or     BYTE PTR [edx],bh
  414fec:	sbb    DWORD PTR [esi],esi
  414fee:	fincstp 
  414ff0:	mov    bh,0x42
  414ff2:	pop    edi
  414ff3:	mov    dl,0x45
  414ff5:	out    0x2c,al
  414ff7:	adc    dh,bh
  414ff9:	not    edi
  414ffb:	push   0xdcdf1266
  415000:	inc    eax
  415001:	ror    BYTE PTR [ecx-0xbd8b8b6],1
  415007:	enter  0x52ee,0xef
  41500b:	jbe    0x414f96
  41500d:	outs   dx,BYTE PTR ds:[esi]
  41500e:	dec    ebx
  41500f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415010:	push   ebp
  415011:	test   al,0x98
  415013:	cmp    eax,0x944214ab
  415018:	jmp    0x415025
  41501a:	and    al,0x57
  41501c:	fisttp QWORD PTR [edi+0x16602dea]
  415022:	xchg   esp,eax
  415023:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415024:	xor    edx,DWORD PTR [ecx-0x7d]
  415027:	pop    esp
  415028:	inc    edx
  415029:	js     0x415038
  41502b:	mov    edx,0xa6255f4c
  415030:	adc    BYTE PTR [esi-0x6b956eee],0xe0
  415037:	fsub   QWORD PTR [esi+0x768e22e6]
  41503d:	push   ss
  41503e:	enter  0xebae,0x1f
  415042:	or     ebp,eax
  415044:	hlt    
  415045:	arpl   WORD PTR [ecx+0x8],dx
  415048:	and    al,0xc3
  41504a:	push   ds
  41504b:	imul   ebp,DWORD PTR [eax-0x47],0xfbd4595
  415052:	mov    cl,0x6f
  415054:	jne    0x41508b
  415056:	jo     0x415011
  415058:	and    eax,0x890607b0
  41505d:	inc    ecx
  41505e:	pop    ebx
  41505f:	pop    ds
  415060:	add    al,0x48
  415062:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415063:	test   DWORD PTR [ebx-0x6a],0x6d85ed39
  41506a:	fidiv  DWORD PTR [ebx-0x725c8b70]
  415070:	inc    ebx
  415071:	mov    ebp,0xf263913d
  415076:	inc    esp
  415077:	xchg   edi,eax
  415078:	fs mov esi,0xd3d3da20
  41507e:	pop    ss
  41507f:	dec    esp
  415080:	ret    0x3824
  415083:	in     eax,dx
  415084:	loope  0x41509f
  415086:	ret    0x128
  415089:	mov    al,0xa2
  41508b:	add    BYTE PTR [edi+0x53],0x18
  41508f:	iret   
  415090:	and    al,0xf9
  415092:	das    
  415093:	bound  edx,QWORD PTR [ebp-0x33a2334a]
  415099:	mov    dh,0xe9
  41509b:	sbb    eax,0x94cd58ed
  4150a0:	or     edx,esi
  4150a2:	push   eax
  4150a3:	inc    esp
  4150a4:	in     eax,0xaf
  4150a6:	fbstp  TBYTE PTR [ecx+0x62]
  4150a9:	jmp    0x5c5741cf
  4150ae:	add    al,0xa
  4150b0:	je     0x415088
  4150b2:	xchg   ecx,eax
  4150b3:	mov    ah,0x8b
  4150b5:	cwde   
  4150b6:	inc    edx
  4150b7:	xor    al,0xb6
  4150b9:	mov    ds:0x472244a9,eax
  4150be:	sbb    BYTE PTR [edx],dh
  4150c0:	(bad)  
  4150c2:	retf   
  4150c3:	xor    BYTE PTR [ebx+0x59],dl
  4150c6:	popf   
  4150c7:	pop    ss
  4150c8:	and    DWORD PTR [eax+0x5a],eax
  4150cb:	add    bh,BYTE PTR [edi-0x55]
  4150ce:	xor    DWORD PTR [eax+0x2],edx
  4150d1:	ja     0x4150e7
  4150d3:	test   al,0xaa
  4150d5:	js     0x415103
  4150d7:	xchg   esi,eax
  4150d8:	cmp    dl,BYTE PTR [ebx-0x30]
  4150db:	pop    esi
  4150dc:	test   BYTE PTR [ebx-0x2f],dl
  4150df:	or     bh,ch
  4150e1:	adc    al,0x3f
  4150e3:	xchg   edi,eax
  4150e4:	lods   al,BYTE PTR ds:[esi]
  4150e5:	in     al,0x59
  4150e7:	ret    0xbce2
  4150ea:	sbb    edi,ecx
  4150ec:	xchg   edx,esi
  4150ee:	inc    esi
  4150ef:	mov    WORD PTR [ecx-0x36],fs
  4150f2:	jecxz  0x4150d3
  4150f4:	imul   esi,DWORD PTR [esp+ecx*2+0x51],0x4
  4150f9:	test   eax,0x51a8d085
  4150fe:	mov    al,ds:0x121d741a
  415103:	jge    0x41515d
  415105:	hlt    
  415106:	ror    BYTE PTR [esi],1
  415108:	adc    ecx,eax
  41510a:	mov    dl,0x5c
  41510c:	cmp    dh,BYTE PTR [ecx+0x1181dfbe]
  415112:	nop
  415113:	into   
  415114:	mov    ebp,0xf710a996
  415119:	aad    0x5c
  41511b:	(bad)  
  41511d:	mov    bl,0xda
  41511f:	into   
  415120:	retf   
  415121:	leave  
  415122:	sub    DWORD PTR [ebx-0x2d],0x1b7e502b
  415129:	and    eax,0xd27c5dec
  41512e:	outs   dx,BYTE PTR ds:[esi]
  41512f:	mov    bh,al
  415131:	dec    esp
  415132:	(bad)  
  415133:	test   al,0xd6
  415135:	ret    
  415136:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415137:	or     eax,0xe836d2e4
  41513c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41513d:	stos   BYTE PTR es:[edi],al
  41513e:	and    eax,0x7291efed
  415143:	scas   al,BYTE PTR es:[edi]
  415144:	stc    
  415145:	mov    ds:0x52a6a717,al
  41514a:	jge    0x415140
  41514c:	jle    0x4151bf
  41514e:	je     0x41514b
  415150:	jnp    0x415150
  415152:	loopne 0x41517b
  415154:	(bad)  
  415155:	mov    DWORD PTR [eax+0x6a46ea4],0x737e4bc7
  41515f:	jae    0x41516d
  415161:	dec    esi
  415162:	adc    al,BYTE PTR [edi]
  415164:	or     BYTE PTR [ecx+0x2161ce90],dl
  41516a:	pop    esi
  41516b:	or     DWORD PTR [eax-0x2d],esp
  41516e:	loope  0x4151bd
  415170:	(bad)  
  415172:	dec    ebx
  415173:	push   ecx
  415174:	imul   esi,eax,0xa3ef1a45
  41517a:	cmp    edx,DWORD PTR [ecx-0x13b7a8de]
  415180:	mov    ebp,0xa521cc4
  415185:	or     eax,0x6c92ba8c
  41518a:	dec    ebx
  41518b:	mov    ebx,0x6fa1a285
  415190:	es in  al,0x8d
  415193:	add    DWORD PTR [ecx],ebx
  415195:	imul   edx,DWORD PTR [eax-0x34],0xffffffa4
  415199:	or     al,0x5d
  41519b:	dec    edi
  41519c:	mov    DWORD PTR [eax],edi
  41519e:	and    BYTE PTR [edx+ebx*1],bl
  4151a1:	xchg   ebp,eax
  4151a2:	mov    cs,eax
  4151a4:	jl     0x4151d4
  4151a6:	or     al,0x69
  4151a8:	or     ah,dl
  4151aa:	ja     0x41521f
  4151ac:	pop    edx
  4151ad:	xchg   ebp,eax
  4151ae:	xchg   esp,eax
  4151af:	xchg   esp,eax
  4151b0:	sbb    BYTE PTR [edx-0x47],ah
  4151b3:	sub    DWORD PTR [ebx+0x0],ecx
  4151b6:	jmp    0x77de847b
  4151bb:	mov    ebp,ss
  4151bd:	jecxz  0x415238
  4151bf:	add    BYTE PTR [ecx+0x54],0x6e
  4151c3:	fmul   QWORD PTR [edx+0x1a]
  4151c6:	sbb    al,BYTE PTR [ebx]
  4151c8:	jb     0x4151f3
  4151ca:	add    esi,ecx
  4151cc:	xchg   edi,eax
  4151cd:	or     al,cl
  4151cf:	gs cld 
  4151d1:	or     eax,0xa1dc0cd1
  4151d6:	lds    esp,FWORD PTR [eax]
  4151d8:	cmp    DWORD PTR ds:0x9828158c,ecx
  4151df:	mov    bh,0x65
  4151e1:	dec    dl
  4151e3:	jecxz  0x415238
  4151e5:	(bad)  
  4151e6:	cmc    
  4151e7:	pop    eax
  4151e8:	or     al,0x1f
  4151ea:	mov    eax,ds:0xfb823029
  4151ef:	mov    bh,0xd2
  4151f1:	mov    esi,0xb2fbd479
  4151f6:	cmp    ecx,DWORD PTR [ebp-0x9]
  4151f9:	ja     0x41521e
  4151fb:	pop    es
  4151fc:	and    esi,ebp
  4151fe:	inc    ebx
  4151ff:	stc    
  415200:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415201:	push   ecx
  415202:	out    dx,eax
  415203:	data16 mov dh,0xd8
  415206:	mov    esi,0x1f39f64c
  41520b:	push   ax
  41520d:	je     0x415287
  41520f:	adc    eax,0xcda1370
  415214:	sbb    BYTE PTR [ebx-0x5f7af36f],bl
  41521a:	addr16 loopne 0x415245
  41521d:	scas   al,BYTE PTR es:[edi]
  41521e:	jp     0x415211
  415220:	test   DWORD PTR [edx-0x70],ecx
  415223:	imul   ebx,DWORD PTR [esi+ebp*8-0x1b44cc84],0x4e
  41522b:	dec    ecx
  41522c:	adc    ecx,DWORD PTR [eax]
  41522e:	mov    al,0xdb
  415230:	ss inc ebx
  415232:	mov    esi,DWORD PTR [edi+esi*2-0x73b00db7]
  415239:	(bad)  
  41523b:	ins    BYTE PTR es:[edi],dx
  41523c:	xor    BYTE PTR [esi],0xa7
  41523f:	cld    
  415240:	jmp    0x1e9ea67c
  415245:	idiv   DWORD PTR [edx]
  415247:	xchg   ebp,eax
  415248:	sbb    esi,DWORD PTR [ebx]
  41524a:	nop
  41524b:	retf   0x6931
  41524e:	xchg   ecx,eax
  41524f:	imul   eax,DWORD PTR [eax-0x48176928],0xfa701eb0
  415259:	aad    0x6e
  41525b:	adc    edx,DWORD PTR [ecx-0x734e3a03]
  415261:	pusha  
  415262:	or     al,0xdd
  415264:	lahf   
  415265:	rol    BYTE PTR [edi-0x15],cl
  415268:	add    eax,0xde3941f6
  41526d:	aaa    
  41526e:	jp     0x415285
  415270:	out    0x42,al
  415272:	in     eax,dx
  415273:	loop   0x4152de
  415275:	in     al,dx
  415276:	xlat   BYTE PTR ds:[ebx]
  415277:	mov    bl,0xc1
  415279:	test   DWORD PTR [edx],eax
  41527b:	add    eax,0x40f813a0
  415280:	pop    ebp
  415281:	stos   BYTE PTR es:[edi],al
  415282:	dec    esi
  415283:	pop    ds
  415284:	adc    eax,0x99321f1c
  415289:	daa    
  41528a:	sub    al,0x72
  41528c:	dec    esp
  41528d:	nop
  41528e:	arpl   WORD PTR [ebx+0x3558363a],dx
  415294:	outs   dx,BYTE PTR ds:[esi]
  415295:	xchg   edi,eax
  415296:	sub    BYTE PTR [ebx],bh
  415298:	mov    ch,0xb0
  41529a:	xchg   edi,eax
  41529b:	repz call FWORD PTR [edx+0x6c]
  41529f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152a0:	stos   DWORD PTR es:[edi],eax
  4152a1:	sahf   
  4152a2:	xor    DWORD PTR [ebp+ebp*1+0x4f],esi
  4152a6:	dec    ebp
  4152a7:	pop    esi
  4152a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152a9:	push   ebp
  4152aa:	or     edx,0x7632dc35
  4152b0:	cmp    DWORD PTR [ebx-0x6],0xc5bd0be9
  4152b7:	or     BYTE PTR [edx-0x55],dl
  4152ba:	int    0x96
  4152bc:	js     0x4152a8
  4152be:	repz jecxz 0x4152a8
  4152c1:	shl    DWORD PTR [edx-0x76],0xd6
  4152c5:	mov    eax,0xc6f59f4c
  4152ca:	hlt    
  4152cb:	jp     0x4152ac
  4152cd:	adc    eax,0xbfa7f6a
  4152d2:	dec    edi
  4152d3:	mov    edi,0x757e431f
  4152d8:	fst    DWORD PTR [ebp+0x5]
  4152db:	adc    dh,bh
  4152dd:	inc    eax
  4152de:	ret    
  4152df:	push   0xffffffda
  4152e1:	push   ss
  4152e2:	fidiv  WORD PTR [eax]
  4152e4:	cmp    eax,0x2c726ecb
  4152e9:	sub    ch,cl
  4152eb:	shl    DWORD PTR [ebx],cl
  4152ed:	dec    esi
  4152ee:	xor    DWORD PTR [ebx-0x4e],esi
  4152f1:	stos   BYTE PTR es:[edi],al
  4152f2:	or     dh,dl
  4152f4:	test   BYTE PTR [ecx],0xa5
  4152f7:	xlat   BYTE PTR ds:[ebx]
  4152f8:	pop    esp
  4152f9:	and    al,0x4f
  4152fb:	add    DWORD PTR [ebx+0x25c8973c],ebp
  415301:	test   al,0xc2
  415303:	adc    ebp,DWORD PTR [ebx]
  415305:	mov    WORD PTR es:[ecx-0x1e],ss
  415309:	inc    edi
  41530a:	sar    BYTE PTR [eax],cl
  41530c:	jbe    0x4152ff
  41530e:	or     cl,dh
  415310:	sub    al,0x52
  415312:	in     al,0x20
  415314:	mov    ebx,0xedf168ec
  415319:	or     ebp,DWORD PTR [ecx]
  41531b:	inc    ecx
  41531c:	pop    ebp
  41531d:	push   0x7b
  41531f:	retf   
  415320:	sub    al,0x3
  415322:	outs   dx,BYTE PTR ds:[esi]
  415323:	test   dl,0x35
  415326:	mov    ds:0xe7bf5831,al
  41532b:	xor    BYTE PTR [edi-0x28783b0c],bh
  415331:	mov    al,dh
  415333:	es inc ebx
  415335:	push   edi
  415336:	inc    edi
  415337:	or     al,0x28
  415339:	dec    edi
  41533a:	sub    edx,DWORD PTR [ebx-0x7e]
  41533d:	ja     0x4152e1
  41533f:	mov    WORD PTR [ebx],?
  415341:	xor    bh,BYTE PTR [ebx]
  415343:	jb     0x41538b
  415345:	(bad)  
  415346:	mov    ecx,0x371fd722
  41534b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41534c:	mov    DWORD PTR [edx+0x5590a2a6],eax
  415352:	sbb    ecx,DWORD PTR [edx]
  415354:	cmp    esi,ecx
  415356:	mov    DWORD PTR [edi+0x36],ebp
  415359:	mov    cl,0x3f
  41535b:	cwde   
  41535c:	mov    cl,0x49
  41535e:	cmp    bl,BYTE PTR [ebx-0x72b45fa1]
  415364:	in     eax,0x79
  415366:	sub    al,0x1a
  415368:	inc    ebp
  415369:	repz mov eax,ds:0xee50cad9
  41536f:	inc    ebx
  415370:	lahf   
  415371:	shl    esp,cl
  415373:	mov    ecx,0xd22de9bc
  415378:	cld    
  415379:	sbb    DWORD PTR [esi-0x42],edx
  41537c:	int3   
  41537d:	inc    edx
  41537e:	(bad)  
  415380:	fcmovb st,st(6)
  415382:	mov    edx,0xdeaeb855
  415387:	pop    ebx
  415388:	fist   WORD PTR [edx-0x37]
  41538b:	xchg   esi,eax
  41538c:	arpl   WORD PTR [esp+ebx*1],bx
  41538f:	retf   
  415390:	mov    ah,0x66
  415392:	fisub  WORD PTR [edx]
  415394:	jmp    0x41e65d07
  415399:	call   0xf66:0xe71407b4
  4153a0:	xchg   esp,ebx
  4153a2:	cmp    eax,0x4634268
  4153a7:	sahf   
  4153a8:	imul   ecx,DWORD PTR [ebp+0x7ff6e7fd],0xb40b139d
  4153b2:	pop    ecx
  4153b3:	ds mov ecx,0x2bea9af4
  4153b9:	aad    0xe
  4153bb:	lahf   
  4153bc:	loopne 0x41537a
  4153be:	inc    edi
  4153bf:	mov    bh,0x82
  4153c1:	push   ds
  4153c2:	jnp    0x4153fd
  4153c4:	or     al,0xe5
  4153c6:	dec    esi
  4153c7:	cmp    cl,dh
  4153c9:	jno    0x4153d1
  4153cb:	mov    edi,0xd0aee91e
  4153d0:	jne    0x4153d3
  4153d2:	(bad)  
  4153d3:	in     al,0x84
  4153d5:	mov    ds:0x4d7841ef,eax
  4153da:	sub    ebp,0x6cc75741
  4153e0:	or     DWORD PTR [ebx-0x28],edi
  4153e3:	and    ah,dl
  4153e5:	mov    ecx,0x78e2311f
  4153ea:	push   esi
  4153eb:	or     BYTE PTR [bx+0x54d2],0xa1
  4153f1:	sbb    esp,ebx
  4153f3:	jae    0x4153e5
  4153f5:	mov    ebx,0x9b8f20a2
  4153fa:	xchg   esp,eax
  4153fb:	cdq    
  4153fc:	push   ss
  4153fd:	retf   0xa11a
  415400:	xchg   ecx,eax
  415401:	cmp    BYTE PTR [edx],al
  415403:	jae    0x415437
  415405:	cmc    
  415406:	(bad)  
  415407:	fdivr  DWORD PTR [edx-0x2b]
  41540a:	adc    dx,WORD PTR [esi+0x60]
  41540e:	or     edi,esi
  415410:	je     0x415474
  415412:	loop   0x4153f9
  415414:	jb     0x415400
  415416:	cmp    eax,0xdb819802
  41541b:	shl    DWORD PTR [ebx],cl
  41541d:	adc    bl,BYTE PTR [ebp+0x3a]
  415420:	cmp    al,0xea
  415422:	mov    esp,0xd6e13f28
  415427:	mov    fs,edx
  415429:	dec    cl
  41542b:	mov    edi,eax
  41542d:	cmp    ecx,esi
  41542f:	pop    ecx
  415430:	outs   dx,DWORD PTR ds:[esi]
  415431:	fst    QWORD PTR [eax+0x27ee326c]
  415437:	mov    edi,0xab205704
  41543c:	(bad)  
  41543d:	or     edx,ebp
  41543f:	clc    
  415440:	in     eax,0xb7
  415442:	push   ds
  415443:	hlt    
  415444:	jns    0x415476
  415446:	jl     0x4154b5
  415448:	sbb    eax,0x53d0250a
  41544d:	ret    
  41544e:	inc    edx
  41544f:	ins    DWORD PTR es:[edi],dx
  415450:	test   al,0x8
  415452:	ins    BYTE PTR es:[edi],dx
  415453:	mov    ds:0x444d01db,al
  415458:	xor    al,0xa6
  41545a:	push   ebp
  41545b:	pop    edi
  41545c:	mov    bl,0xa8
  41545e:	fs push edi
  415460:	xlat   BYTE PTR ds:[ebx]
  415461:	ret    0x77e9
  415464:	add    ebp,DWORD PTR [ecx]
  415466:	into   
  415467:	pop    edi
  415468:	ror    DWORD PTR [ecx-0x21e196dc],1
  41546e:	jmp    0x1bf6:0x8cd45e2b
  415475:	test   DWORD PTR [ebp+0x1d2551fe],esp
  41547b:	push   es
  41547c:	xor    ebp,ebx
  41547e:	inc    ebp
  41547f:	fild   QWORD PTR ds:0x63d89b91
  415485:	icebp  
  415486:	and    DWORD PTR [ebp+0x3e07b4d3],esi
  41548c:	outs   dx,BYTE PTR ds:[esi]
  41548d:	ja     0x4154c1
  41548f:	push   edi
  415490:	icebp  
  415491:	mov    BYTE PTR [ecx+0x2955db19],0xe3
  415498:	jmp    0x301f9769
  41549d:	or     DWORD PTR gs:[edi+0x7e4e10dc],edi
  4154a4:	mov    eax,esp
  4154a6:	mov    edi,DWORD PTR [eax+0x425645d4]
  4154ac:	or     eax,0x208c02b6
  4154b1:	jbe    0x4154d3
  4154b3:	xchg   DWORD PTR [edi-0x64],eax
  4154b6:	fbld   TBYTE PTR [esi+0x5488db52]
  4154bc:	jmp    0xa0991f8a
  4154c1:	sbb    bh,BYTE PTR [ecx+0x93400b2]
  4154c7:	or     al,0x2c
  4154c9:	jmp    0xa217bd4d
  4154ce:	mov    fs,WORD PTR [eax-0x6d8b9490]
  4154d4:	js     0x415505
  4154d6:	inc    eax
  4154d7:	mov    ss,WORD PTR [ebx+0x19]
  4154da:	mov    ebx,0xb2b687df
  4154df:	js     0x41546c
  4154e1:	out    dx,eax
  4154e2:	sti    
  4154e3:	push   0x65e33efe
  4154e8:	in     eax,dx
  4154e9:	mov    ebx,0x7c4057e9
  4154ee:	or     eax,DWORD PTR [edx+ebx*4]
  4154f1:	ins    DWORD PTR es:[edi],dx
  4154f2:	xor    BYTE PTR [ecx],dl
  4154f4:	mov    WORD PTR [edi+eiz*8+0x550befa5],?
  4154fb:	leave  
  4154fc:	jecxz  0x4154ac
  4154fe:	push   eax
  4154ff:	mov    BYTE PTR [ecx-0x7b],al
  415502:	sbb    ebp,DWORD PTR [ebx]
  415504:	mov    dl,0xb5
  415506:	pushf  
  415507:	dec    esi
  415508:	hlt    
  415509:	ret    0x834c
  41550c:	or     eax,DWORD PTR [ecx+0xd]
  41550f:	cmp    dh,BYTE PTR [eax+0x76]
  415512:	scas   al,BYTE PTR es:[edi]
  415513:	push   ss
  415514:	std    
  415515:	pop    edx
  415516:	pop    es
  415517:	test   al,0x78
  415519:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41551a:	shl    BYTE PTR [esi+0x47],cl
  41551d:	cmp    BYTE PTR [ebp+0x19],bl
  415520:	in     al,dx
  415521:	mov    esi,0x8c3a946
  415526:	dec    edi
  415527:	and    ah,BYTE PTR [esi+0x22655d58]
  41552d:	in     eax,dx
  41552e:	cmp    esi,DWORD PTR [ecx]
  415530:	push   edx
  415531:	or     eax,0xe7bab5f8
  415536:	jp     0x41552b
  415538:	pushf  
  415539:	(bad)  
  41553a:	(bad)  
  41553b:	(bad)  [ebx-0x799effba]
  415541:	cmp    DWORD PTR [edi+0x70],eax
  415544:	jmp    FWORD PTR [ebx]
  415546:	sub    al,0xb0
  415548:	or     eax,0x905c7008
  41554d:	jl     0x415556
  41554f:	test   DWORD PTR [edi],esp
  415551:	fcomip st,st(0)
  415553:	xchg   ebp,eax
  415554:	pop    ebp
  415555:	sbb    ecx,DWORD PTR [edi]
  415557:	push   ds
  415558:	mov    ebx,0x4c6d5979
  41555d:	retf   0x4
  415560:	out    dx,al
  415561:	xchg   edi,eax
  415562:	daa    
  415563:	cs (bad) 
  415565:	pop    ebp
  415566:	jp     0x415565
  415568:	lods   eax,DWORD PTR ds:[esi]
  415569:	push   ss
  41556a:	xlat   BYTE PTR ds:[ebx]
  41556b:	cwde   
  41556c:	aam    0x1d
  41556e:	ror    BYTE PTR [edi],cl
  415570:	outs   dx,DWORD PTR ds:[esi]
  415571:	sub    ch,dh
  415573:	sub    BYTE PTR [esi],bh
  415575:	sbb    al,0xf6
  415577:	fs ror ch,1
  41557a:	shl    ebx,0x6f
  41557d:	mov    esi,0x8f2b32bb
  415582:	xor    ebp,ebx
  415584:	inc    ebx
  415585:	test   al,0xdb
  415587:	inc    ecx
  415588:	sbb    ecx,DWORD PTR ds:0xd029d1bc
  41558e:	pop    ds
  41558f:	jecxz  0x4155fc
  415591:	cmp    BYTE PTR [ecx-0x1e],cl
  415594:	mov    eax,ds:0x5b541e91
  415599:	push   ebp
  41559a:	pop    ecx
  41559b:	(bad)  
  41559c:	popa   
  41559d:	mov    bl,BYTE PTR [bx]
  4155a0:	pop    ds
  4155a1:	mov    esi,0xf2fa5c6
  4155a6:	xchg   BYTE PTR [eax-0x61],ch
  4155a9:	ins    BYTE PTR es:[edi],dx
  4155aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155ab:	rcl    BYTE PTR [ebp-0x7f],0x33
  4155af:	and    BYTE PTR [ecx-0x1],al
  4155b2:	mov    fs,WORD PTR [edx+eax*8-0x9ae2ec5]
  4155b9:	mov    eax,0x950585c4
  4155be:	adc    eax,0x9aa3153c
  4155c3:	mov    dh,0xd0
  4155c5:	sbb    ch,BYTE PTR [eax-0x5b]
  4155c8:	mov    ds:0xf9730833,al
  4155cd:	pushf  
  4155ce:	loope  0x4155c6
  4155d0:	jns    0x4155ca
  4155d2:	js     0x415575
  4155d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155d5:	(bad)  
  4155d6:	fbstp  TBYTE PTR [ebp-0x25]
  4155d9:	shr    BYTE PTR [esi],cl
  4155db:	sub    BYTE PTR [ebp+edi*4-0x6d098ab2],cl
  4155e2:	push   0x32
  4155e4:	cmc    
  4155e5:	retf   
  4155e6:	mov    DWORD PTR [esi+0x7f8efae1],edi
  4155ec:	(bad)  ds:0x6e71dca7
  4155f2:	cmp    eax,0xae985bba
  4155f7:	jb     0x4155c4
  4155f9:	(bad)  
  4155fa:	mov    al,ds:0x10efee42
  4155ff:	or     al,0xad
  415601:	jnp    0x41560a
  415603:	xor    ebx,DWORD PTR [ecx+0x19]
  415606:	ins    DWORD PTR es:[edi],dx
  415607:	test   al,0x4
  415609:	in     al,0xb4
  41560b:	clc    
  41560c:	ret    0xcbe0
  41560f:	pop    ebx
  415610:	ret    0x394d
  415613:	mov    DWORD PTR [ebx],eax
  415615:	popa   
  415616:	inc    edx
  415618:	jo     0x41560a
  41561a:	cmp    BYTE PTR [ebp+0x1f4c65cf],al
  415620:	rcr    ebx,0x7b
  415623:	push   DWORD PTR [ebx]
  415625:	dec    edx
  415626:	fs aaa 
  415628:	je     0x4155f7
  41562a:	cmp    al,0xde
  41562c:	xor    dh,BYTE PTR [ecx+0x6707193f]
  415632:	iret   
  415633:	xor    dh,BYTE PTR [eax-0x74bccf4e]
  415639:	sti    
  41563a:	inc    edi
  41563b:	shr    DWORD PTR [esi],cl
  41563d:	mov    edi,0x38c80292
  415642:	inc    esi
  415643:	xor    DWORD PTR [edx+0x1c],edi
  415646:	test   DWORD PTR [esi+0x2f9304ce],esp
  41564c:	mov    ds:0x310bb51,eax
  415651:	mov    DWORD PTR [esi+0x8],edx
  415654:	lock stc 
  415656:	icebp  
  415657:	lock sub dh,BYTE PTR [eax-0x6702246]
  41565e:	nop
  41565f:	sub    al,0x5c
  415661:	ins    DWORD PTR es:[edi],dx
  415662:	aad    0x8f
  415664:	jne    0x415691
  415666:	mov    WORD PTR [ebx],ds
  415668:	in     eax,dx
  415669:	std    
  41566a:	(bad)
  41566e:	add    dh,ch
  415670:	dec    ebp
  415671:	mov    ecx,0x527f967b
  415676:	push   es
  415677:	arpl   WORD PTR [edi+ecx*4],bx
  41567a:	ja     0x415648
  41567c:	aad    0xe2
  41567e:	inc    ecx
  41567f:	bound  esi,QWORD PTR [edx]
  415681:	call   0x722cc813
  415686:	jbe    0x41567a
  415688:	push   edi
  415689:	scas   al,BYTE PTR es:[edi]
  41568a:	cmp    al,BYTE PTR [ebx]
  41568c:	retf   
  41568d:	stos   BYTE PTR es:[edi],al
  41568e:	dec    esi
  41568f:	imul   esp,ecx,0x33
  415692:	or     edx,DWORD PTR [ebp-0x5e]
  415695:	js     0x415684
  415697:	(bad)  
  415698:	cmp    esi,DWORD PTR [esi]
  41569a:	sub    dh,BYTE PTR ds:0x73e21102
  4156a0:	xor    eax,0xf53dabbd
  4156a5:	ins    DWORD PTR es:[edi],dx
  4156a6:	adc    cl,BYTE PTR [ebp+0x49]
  4156a9:	jg     0x415729
  4156ab:	out    dx,eax
  4156ac:	lahf   
  4156ad:	das    
  4156ae:	and    al,0x1f
  4156b0:	push   ss
  4156b1:	and    al,0xcc
  4156b3:	and    BYTE PTR [ecx+0x7],ch
  4156b6:	cmp    al,0x5d
  4156b8:	pop    ebp
  4156b9:	fs in  al,0xaf
  4156bc:	xchg   esp,eax
  4156bd:	rcl    DWORD PTR [ebx+0xf46e82c],0x28
  4156c4:	pop    ecx
  4156c5:	jo     0x4156ec
  4156c7:	in     al,0x82
  4156c9:	pop    ebp
  4156ca:	dec    ebx
  4156cb:	ins    BYTE PTR es:[edi],dx
  4156cc:	or     eax,ebp
  4156ce:	dec    ebx
  4156cf:	mov    dl,0xf
  4156d1:	bound  edi,QWORD PTR [esi-0x4c]
  4156d4:	test   al,0x1e
  4156d6:	mov    dh,0xf9
  4156d8:	dec    esp
  4156d9:	xchg   esi,eax
  4156da:	lods   eax,DWORD PTR ds:[esi]
  4156db:	jo     0x4156fd
  4156dd:	pop    esi
  4156de:	mov    DWORD PTR [ebp-0x68fd120a],edi
  4156e4:	scas   al,BYTE PTR es:[edi]
  4156e5:	push   ebx
  4156e6:	and    BYTE PTR [ebx+ebx*2+0x6c1e301b],ch
  4156ed:	dec    ebp
  4156ee:	bound  esi,QWORD PTR [esi-0x66314be0]
  4156f4:	and    BYTE PTR [esi-0x6b],ah
  4156f7:	mov    al,0x62
  4156f9:	mov    edx,gs
  4156fb:	lea    esi,[esi+esi*2]
  4156fe:	in     eax,dx
  4156ff:	lahf   
  415700:	rep stos DWORD PTR es:[edi],eax
  415702:	mov    gs,WORD PTR [edi-0x4a047b2]
  415708:	or     DWORD PTR [edx+0x1],ebp
  41570b:	imul   esi,edi,0xffffffc8
  41570e:	mov    al,0xf7
  415710:	sbb    ah,BYTE PTR [edx+0xd]
  415713:	push   esp
  415714:	sub    al,ah
  415716:	sti    
  415717:	xor    al,0xce
  415719:	xchg   edx,eax
  41571a:	jne    0x4156f0
  41571c:	shr    DWORD PTR [edi-0x40],1
  41571f:	sub    esp,DWORD PTR [edx+0x5eec01eb]
  415725:	jnp    0x4156b7
  415727:	push   0xa338c359
  41572c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41572d:	in     al,0x31
  41572f:	push   ebp
  415730:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415731:	xlat   BYTE PTR ds:[ebx]
  415732:	loop   0x41571b
  415734:	sub    ecx,edx
  415736:	inc    ebx
  415737:	test   dl,dl
  415739:	mov    ah,dl
  41573b:	dec    esi
  41573c:	jl     0x41572c
  41573e:	sbb    al,0x27
  415740:	xor    al,0x1c
  415742:	dec    ecx
  415743:	mov    ebx,0x8423c414
  415748:	xor    al,0xaf
  41574a:	in     al,dx
  41574b:	fimul  DWORD PTR [eax-0x2e]
  41574e:	pop    ds
  41574f:	retf   0x288c
  415752:	pop    ss
  415753:	(bad)  
  415754:	xchg   ah,al
  415756:	cmp    DWORD PTR ds:0x5d03105f,eax
  41575c:	daa    
  41575d:	mov    WORD PTR [ecx-0x21],es
  415760:	enter  0xf537,0xec
  415764:	aas    
  415765:	add    edi,ebx
  415767:	sbb    DWORD PTR [ebx],0xe89d79ad
  41576d:	addr16 cli 
  41576f:	(bad)  
  415770:	pop    eax
  415771:	icebp  
  415772:	hlt    
  415773:	call   0x6da0:0x1430cda5
  41577a:	test   al,0x71
  41577c:	retf   
  41577d:	bound  edi,QWORD PTR [ebx+edi*8+0x3ff48a82]
  415784:	out    0x53,al
  415786:	enter  0x10c4,0xc3
  41578a:	push   ss
  41578b:	enter  0xe8e0,0xf0
  41578f:	add    ebx,eax
  415791:	fsubr  st,st(0)
  415793:	loopne 0x415731
  415795:	std    
  415796:	and    DWORD PTR [edi+0x2f],esi
  415799:	(bad)  
  41579a:	fadd   DWORD PTR [edi]
  41579c:	cld    
  41579d:	dec    ebx
  41579e:	sbb    eax,0xd95b3ff1
  4157a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157a4:	add    eax,0xd8e030d6
  4157a9:	shl    BYTE PTR [ebx],cl
  4157ab:	fldcw  WORD PTR [edi-0x4e]
  4157ae:	ins    DWORD PTR es:[edi],dx
  4157af:	into   
  4157b0:	or     edx,edi
  4157b2:	xchg   ebx,eax
  4157b3:	pop    esp
  4157b4:	stos   BYTE PTR es:[edi],al
  4157b5:	inc    edi
  4157b6:	mov    edx,0xab612e5b
  4157bb:	sbb    BYTE PTR [edx+0x7a9b17ba],ch
  4157c1:	cwde   
  4157c2:	je     0x41581b
  4157c4:	int3   
  4157c5:	jno    0x415772
  4157c7:	sub    DWORD PTR [edx-0x5438f7e3],esi
  4157cd:	cmc    
  4157ce:	fs mov esp,0x9c82ae57
  4157d4:	frstor [ecx]
  4157d6:	stc    
  4157d7:	scas   eax,DWORD PTR es:[edi]
  4157d8:	fwait
  4157d9:	pop    ecx
  4157da:	repnz bound edx,QWORD PTR [esp+edx*2]
  4157de:	call   0x2d6d:0xe6b06e4b
  4157e5:	cmp    cl,0xe7
  4157e8:	inc    ebp
  4157e9:	cmp    al,0xec
  4157eb:	ror    DWORD PTR [edi-0x34],1
  4157ee:	push   0x49
  4157f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157f1:	pop    esp
  4157f2:	sti    
  4157f3:	outs   dx,BYTE PTR ds:[esi]
  4157f4:	or     eax,0xfe094b4a
  4157f9:	div    DWORD PTR [edx-0x765146a5]
  4157ff:	test   al,0x6a
  415801:	stos   DWORD PTR es:[edi],eax
  415802:	xor    bl,BYTE PTR [esi-0x21]
  415805:	stos   DWORD PTR es:[edi],eax
  415806:	jmp    0x3dbaa8ad
  41580b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41580c:	mov    ch,0xcc
  41580e:	les    ecx,FWORD PTR [edx-0x40349584]
  415814:	adc    BYTE PTR [ebx],ch
  415816:	pop    ss
  415817:	(bad)  
  415818:	in     eax,dx
  415819:	xor    DWORD PTR [ecx],ebx
  41581b:	mov    cs,ecx
  41581d:	jecxz  0x415857
  41581f:	loopne 0x415863
  415821:	dec    esp
  415822:	sbb    DWORD PTR [ecx+0x44],edx
  415825:	mov    eax,ds:0x764ad687
  41582a:	inc    esi
  41582b:	lods   eax,DWORD PTR ds:[esi]
  41582c:	clc    
  41582d:	retf   0x99dd
  415830:	add    BYTE PTR [ecx+esi*8],0x12
  415834:	inc    edx
  415835:	mov    esp,cs
  415837:	ins    DWORD PTR es:[edi],dx
  415838:	in     al,dx
  415839:	inc    esi
  41583a:	sub    BYTE PTR [eax-0x5f],dl
  41583d:	inc    edx
  41583e:	mov    cl,0x8a
  415840:	(bad)  
  415841:	jmp    DWORD PTR [esi]
  415843:	jnp    0x4158bd
  415845:	mov    bl,0x10
  415847:	in     al,dx
  415848:	adc    BYTE PTR [edi],bl
  41584a:	scas   al,BYTE PTR es:[edi]
  41584b:	imul   esi,esi,0xffffff99
  41584e:	mov    dh,0xa3
  415850:	xchg   esp,eax
  415851:	pop    es
  415852:	popa   
  415853:	cmp    eax,0x240a2354
  415858:	test   al,0x9c
  41585a:	mov    BYTE PTR [ecx-0x7a],ah
  41585d:	scas   eax,DWORD PTR es:[edi]
  41585e:	js     0x415857
  415860:	or     DWORD PTR cs:[ebp-0x19],0x75b84213
  415868:	paddb  mm6,mm7
  41586b:	fnstcw WORD PTR [ecx+edx*4+0x61]
  41586f:	imul   edi,DWORD PTR [eax+0x28272716],0x7ed0e0ca
  415879:	aam    0x7a
  41587b:	mov    eax,0xa34372bf
  415880:	mov    esp,0x6405d94c
  415885:	mov    edi,DWORD PTR [edi-0x33]
  415888:	pop    edi
  415889:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41588a:	xor    eax,0xf80dbf7b
  41588f:	mov    al,dl
  415891:	jge    0x4158d8
  415893:	inc    ebx
  415894:	mov    WORD PTR [ebx-0x43d3a0ad],gs
  41589a:	push   cs
  41589b:	mul    cl
  41589d:	xor    bl,BYTE PTR [edi-0x39]
  4158a0:	std    
  4158a1:	fs xchg edi,eax
  4158a3:	retf   
  4158a4:	(bad)  
  4158a5:	sbb    BYTE PTR [ebx],bl
  4158a7:	ret    
  4158a8:	shl    DWORD PTR [ebx+0x75],0x1e
  4158ac:	es mov esi,0x7f830e49
  4158b2:	loopne 0x4158d3
  4158b4:	fdivr  QWORD PTR [edx-0x3c]
  4158b7:	xor    al,0xec
  4158b9:	jl     0x41585a
  4158bb:	aaa    
  4158bc:	or     al,0xc0
  4158be:	dec    esp
  4158bf:	out    0xfa,al
  4158c1:	aam    0xd2
  4158c3:	sub    DWORD PTR [eax-0x54],esp
  4158c6:	aaa    
  4158c7:	in     eax,dx
  4158c8:	test   eax,0xe1245c20
  4158cd:	jbe    0x4158ad
  4158cf:	in     al,0x5a
  4158d1:	popf   
  4158d2:	sub    BYTE PTR [eax],dl
  4158d4:	sbb    eax,0x3511a2af
  4158d9:	aam    0x9d
  4158db:	div    DWORD PTR ds:0x5ae95a4b
  4158e1:	pop    edi
  4158e2:	push   cs
  4158e3:	inc    ebx
  4158e4:	mov    al,ds:0x55080cd8
  4158e9:	out    dx,eax
  4158ea:	pop    ecx
  4158eb:	mov    eax,0x62587082
  4158f0:	(bad)  
  4158f1:	push   ebx
  4158f2:	cmp    al,0xf9
  4158f4:	lods   eax,DWORD PTR ds:[esi]
  4158f5:	mov    al,0x14
  4158f7:	push   ebx
  4158f8:	fist   WORD PTR [esi]
  4158fa:	push   edx
  4158fb:	or     esi,DWORD PTR [edi]
  4158fd:	push   ecx
  4158fe:	int3   
  4158ff:	inc    ecx
  415900:	inc    ecx
  415901:	adc    eax,0xd3813ade
  415906:	add    BYTE PTR [edx-0x46],cl
  415909:	jmp    0x4158ba
  41590b:	dec    esi
  41590c:	or     eax,0xf5399b5d
  415911:	jns    0x41592f
  415913:	cmp    esi,0xfffffff2
  415916:	xchg   edx,eax
  415917:	(bad)  
  415918:	ss push 0xffffffa3
  41591b:	and    ebp,esi
  41591d:	xor    BYTE PTR [ebp+0x71],ah
  415920:	js     0x41599e
  415922:	into   
  415923:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415924:	test   DWORD PTR [ebx],0xc16c72c6
  41592a:	inc    edx
  41592b:	daa    
  41592c:	sbb    BYTE PTR [ebx+0x424eedf4],ah
  415932:	inc    esi
  415933:	inc    ebp
  415934:	push   esi
  415935:	clc    
  415936:	aad    0xb7
  415938:	outs   dx,DWORD PTR ds:[esi]
  415939:	les    edx,FWORD PTR [esi+0xd]
  41593c:	dec    ebx
  41593d:	outs   dx,BYTE PTR ds:[esi]
  41593f:	bound  edi,QWORD PTR [eax-0xfff729]
  415945:	shl    DWORD PTR [ecx-0x2c],cl
  415948:	loope  0x4159c4
  41594a:	mov    bl,0x5a
  41594c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41594d:	inc    ecx
  41594e:	scas   eax,DWORD PTR es:[edi]
  41594f:	mov    eax,ds:0x121ed297
  415954:	lahf   
  415955:	add    eax,0xd507f2b5
  41595a:	sahf   
  41595b:	fwait
  41595c:	in     eax,0xcd
  41595e:	or     ebx,0x442763d7
  415964:	sub    DWORD PTR [ebx+0x1ea02aa3],ecx
  41596a:	and    BYTE PTR ds:0xd887940,dl
  415970:	push   esi
  415971:	(bad)  
  415972:	xor    cl,BYTE PTR [eax]
  415974:	cs mov cl,0xfb
  415977:	and    ah,BYTE PTR ds:0x6786b96e
  41597d:	(bad)  
  41597e:	cmp    al,0x96
  415980:	or     DWORD PTR ds:0x386c1792,eax
  415986:	adc    al,0x5
  415988:	jo     0x41593c
  41598a:	icebp  
  41598b:	mov    WORD PTR [edi-0x66bed832],ss
  415991:	inc    edi
  415992:	int3   
  415993:	sbb    cl,BYTE PTR [eax+0x30]
  415996:	push   ds
  415997:	inc    edx
  415998:	lahf   
  415999:	or     eax,0x50d38184
  41599e:	add    esi,DWORD PTR [edi]
  4159a0:	adc    al,BYTE PTR ss:[ecx+0x56]
  4159a4:	mov    al,0x4d
  4159a6:	and    BYTE PTR cs:[edx+0x50ba5c31],bh
  4159ad:	mov    cs,WORD PTR [edi]
  4159af:	dec    edi
  4159b0:	xor    BYTE PTR [ecx-0x5fa02e78],0x34
  4159b7:	fist   DWORD PTR [edi-0x22fa3490]
  4159bd:	fsub   QWORD PTR [edi+0x26]
  4159c0:	in     al,dx
  4159c1:	js     0x415a1b
  4159c3:	mov    edi,0x6918f8bc
  4159c8:	mov    ecx,?
  4159ca:	push   eax
  4159cb:	mov    eax,0x99fd65a9
  4159d0:	or     al,0xb1
  4159d2:	pop    ebx
  4159d3:	les    ecx,FWORD PTR [eax+0x5de3718e]
  4159d9:	(bad)
  4159dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159dd:	repz xor dh,BYTE PTR [edx+0x3e]
  4159e1:	mov    WORD PTR [edx+0x5c444373],gs
  4159e7:	(bad)  
  4159e8:	sbb    BYTE PTR [ebx],dh
  4159ea:	out    0xdf,al
  4159ec:	jp     0x4159f1
  4159ee:	mov    edi,0xec3cfab5
  4159f3:	or     ebp,ebx
  4159f5:	and    al,bh
  4159f7:	push   es
  4159f8:	mov    cl,0x88
  4159fa:	(bad)  
  4159fb:	add    ebp,edi
  4159fd:	into   
  4159fe:	xor    ah,BYTE PTR [eax-0x27]
  415a01:	mov    ds:0x218eddb3,eax
  415a06:	jno    0x415a17
  415a08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a09:	mov    ebx,0xe7ac2739
  415a0e:	fdiv   DWORD PTR [edx]
  415a10:	sub    BYTE PTR [eax-0x2831b1d7],bh
  415a16:	call   FWORD PTR [ebx+0x4d83bf31]
  415a1c:	add    eax,0xb235cb64
  415a21:	(bad)
  415a24:	call   0xe38a:0xd400920c
  415a2b:	xchg   edi,eax
  415a2c:	loope  0x415a6c
  415a2e:	inc    esp
  415a2f:	retf   
  415a30:	cwde   
  415a31:	inc    esp
  415a32:	add    ebp,DWORD PTR [esp+edx*1]
  415a35:	out    0x66,al
  415a37:	dec    edx
  415a38:	imul   bh
  415a3a:	retf   0x7326
  415a3d:	sti    
  415a3e:	retf   
  415a3f:	cdq    
  415a40:	inc    esp
  415a41:	out    dx,eax
  415a42:	and    ebx,edx
  415a44:	jecxz  0x415a4f
  415a46:	shl    DWORD PTR [edi-0x62],cl
  415a49:	stc    
  415a4a:	pop    eax
  415a4b:	popf   
  415a4c:	ss inc edi
  415a4e:	mov    ecx,0x9a70587d
  415a53:	lock out dx,eax
  415a55:	xchg   ebp,eax
  415a56:	pusha  
  415a57:	or     DWORD PTR [ebx],edx
  415a59:	pop    edi
  415a5a:	sbb    al,0xac
  415a5c:	aas    
  415a5d:	adc    al,0x5
  415a5f:	dec    edx
  415a60:	dec    ebp
  415a61:	test   DWORD PTR [eax-0x4d],eax
  415a64:	fist   WORD PTR [edi+0xe]
  415a67:	inc    ebx
  415a68:	inc    eax
  415a69:	cli    
  415a6a:	ds sbb ah,0x96
  415a6e:	cld    
  415a6f:	stos   BYTE PTR es:[edi],al
  415a70:	add    ch,BYTE PTR [edx-0x53]
  415a73:	jge    0x415a60
  415a75:	lds    esp,FWORD PTR [esi+esi*1-0x5b]
  415a79:	retf   0x8afd
  415a7c:	cs clc 
  415a7e:	add    DWORD PTR [ecx-0x5fdcc4cc],0xffffffeb
  415a85:	call   0x754f:0xf0f77a92
  415a8c:	cdq    
  415a8d:	fiadd  WORD PTR ds:0x6bd3d1b2
  415a93:	enter  0xfb45,0xfb
  415a97:	xor    edi,0x10
  415a9a:	sub    bl,BYTE PTR [edx-0x10fcf0fc]
  415aa0:	inc    edi
  415aa1:	or     bh,BYTE PTR [ebp-0x2c482ae2]
  415aa7:	mov    dl,al
  415aa9:	xchg   ebx,eax
  415aaa:	in     al,0xe3
  415aac:	lock mov esp,0xd8a71ed8
  415ab2:	ror    edx,0xd6
  415ab5:	pop    es
  415ab6:	nop
  415ab7:	mov    bh,0x64
  415ab9:	sbb    DWORD PTR [edx+0x17],ecx
  415abc:	nop
  415abd:	sahf   
  415abe:	fadd   DWORD PTR [esi+0x42]
  415ac1:	pop    ss
  415ac2:	mov    eax,ds:0xa748c026
  415ac7:	jbe    0x415b3b
  415ac9:	out    0x73,eax
  415acb:	jo     0x415ad9
  415acd:	push   esi
  415ace:	ds nop
  415ad0:	retf   0xca8f
  415ad3:	xlat   BYTE PTR ds:[ebx]
  415ad4:	ret    
  415ad5:	lods   eax,DWORD PTR ds:[esi]
  415ad6:	test   DWORD PTR [esi+0x26646a36],esi
  415adc:	cmp    cl,BYTE PTR [edi-0x59]
  415adf:	dec    ebp
  415ae0:	int3   
  415ae1:	add    dl,BYTE PTR [esi]
  415ae3:	int    0x2
  415ae5:	stc    
  415ae6:	cmp    eax,0x5a0b8cbe
  415aeb:	(bad)  
  415aed:	(bad)  
  415aee:	cmp    DWORD PTR [esp+ebx*2+0x6741eb5a],ecx
  415af5:	cmp    eax,0x38af6f99
  415afa:	mov    BYTE PTR [edx-0x2b17142a],dh
  415b00:	dec    esi
  415b01:	out    0xe0,eax
  415b03:	loope  0x415a86
  415b05:	ins    DWORD PTR es:[edi],dx
  415b06:	cmp    DWORD PTR [ebx],ecx
  415b08:	cli    
  415b09:	aas    
  415b0a:	or     BYTE PTR [ebx],cl
  415b0c:	stos   BYTE PTR es:[edi],al
  415b0d:	mov    WORD PTR [ebx+0x51],es
  415b10:	pop    esp
  415b11:	xchg   esp,eax
  415b12:	fidivr DWORD PTR [eax]
  415b14:	in     eax,0x49
  415b16:	pop    edx
  415b17:	in     al,0xca
  415b19:	mov    al,ds:0x6898b870
  415b1e:	push   ss
  415b1f:	js     0x415b76
  415b21:	in     al,dx
  415b22:	rol    DWORD PTR [ecx+0x49cf21e4],cl
  415b28:	push   edi
  415b29:	(bad)  
  415b2a:	sbb    DWORD PTR [ecx],ecx
  415b2c:	mov    bl,0xe
  415b2e:	push   ebp
  415b2f:	mov    DWORD PTR [eax-0x5dfbb6de],eax
  415b35:	ret    0x9303
  415b38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b39:	aam    0x69
  415b3b:	xchg   edx,eax
  415b3c:	cwde   
  415b3d:	mov    dh,0x89
  415b3f:	loop   0x415b66
  415b41:	sub    al,cl
  415b43:	push   esi
  415b44:	cwde   
  415b45:	sti    
  415b46:	lock (bad) 
  415b48:	mov    eax,0xc4ab0132
  415b4d:	jno    0x415b7d
  415b4f:	and    al,0xce
  415b51:	dec    edx
  415b52:	or     ebp,DWORD PTR [ebx-0x46cf9981]
  415b58:	pop    ecx
  415b59:	out    0xdf,al
  415b5b:	dec    edi
  415b5c:	(bad)  
  415b5e:	sub    ecx,DWORD PTR [ebx+eax*2]
  415b61:	ins    BYTE PTR es:[edi],dx
  415b62:	pop    edx
  415b63:	popa   
  415b64:	jno    0x415bda
  415b66:	arpl   WORD PTR [ebx+0xe],bp
  415b69:	fadd   QWORD PTR [ecx]
  415b6b:	mov    al,0xde
  415b6d:	inc    esp
  415b6e:	and    al,ah
  415b70:	es ja  0x415b12
  415b73:	out    dx,al
  415b74:	je     0x415b18
  415b76:	and    BYTE PTR [ecx],ah
  415b78:	out    dx,eax
  415b79:	xchg   edx,eax
  415b7a:	jbe    0x415bf3
  415b7c:	in     eax,0xe8
  415b7e:	or     eax,0x5d4de8ed
  415b83:	pop    ss
  415b84:	xchg   esi,eax
  415b85:	mov    bl,0xa2
  415b87:	lods   eax,DWORD PTR ds:[esi]
  415b88:	aaa    
  415b89:	xchg   edi,eax
  415b8a:	adc    DWORD PTR [edx+0x6dfa6284],esp
  415b90:	inc    edx
  415b91:	and    eax,0x1634ce28
  415b96:	mov    ds:0x3152967d,eax
  415b9b:	sub    dl,cl
  415b9d:	jmp    0x688c:0x7921b2d0
  415ba4:	dec    edi
  415ba5:	mov    ebp,DWORD PTR [bx+di]
  415ba8:	adc    esp,DWORD PTR [edi-0x7a]
  415bab:	mov    al,ds:0xa1aeb669
  415bb0:	or     DWORD PTR [edi+0x2309eb0e],ecx
  415bb6:	mov    al,ds:0xac5456c2
  415bbb:	xchg   esi,eax
  415bbc:	mov    bh,0x11
  415bbe:	ds dec ecx
  415bc0:	pop    ebx
  415bc1:	adc    DWORD PTR ss:[eax],edi
  415bc4:	jl     0x415b78
  415bc6:	mov    ch,0xfe
  415bc8:	rcr    dh,0x3d
  415bcb:	or     DWORD PTR [ecx],ecx
  415bcd:	call   0xc6df18f2
  415bd2:	sbb    DWORD PTR [eax+ebx*1-0x70ce0538],edx
  415bd9:	sti    
  415bda:	pusha  
  415bdb:	dec    edx
  415bdc:	push   ecx
  415bdd:	(bad)  
  415bde:	retf   
  415bdf:	dec    ebp
  415be0:	pop    esp
  415be1:	cdq    
  415be2:	test   BYTE PTR [ecx+ecx*1+0x4a],0x89
  415be7:	sbb    al,0x9f
  415be9:	jno    0x415bfc
  415beb:	xlat   BYTE PTR ds:[ebx]
  415bec:	fwait
  415bed:	iret   
  415bee:	mov    ecx,0xeaf6a44f
  415bf3:	mov    WORD PTR [ebx+0xea07bbb],cs
  415bf9:	xor    ebp,DWORD PTR [edx+0x78]
  415bfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bfd:	fwait
  415bfe:	pop    ds
  415bff:	dec    esi
  415c00:	dec    ebp
  415c01:	(bad)  
  415c02:	fbstp  TBYTE PTR [edx-0x42]
  415c05:	scas   eax,DWORD PTR es:[edi]
  415c06:	cmp    ch,BYTE PTR [eax-0x7e]
  415c09:	gs mov dh,0x6b
  415c0c:	push   ebp
  415c0d:	lods   al,BYTE PTR ds:[esi]
  415c0e:	repnz mov DWORD PTR [esi],ebp
  415c11:	outs   dx,BYTE PTR ds:[esi]
  415c12:	stos   DWORD PTR es:[edi],eax
  415c13:	shr    DWORD PTR [edx-0x7],1
  415c16:	xor    DWORD PTR [edx],ebx
  415c18:	fcmovbe st,st(3)
  415c1a:	jae    0x415c58
  415c1c:	rcl    DWORD PTR [ebp+0x42fe302d],0x26
  415c23:	jmp    0x415c12
  415c25:	dec    ebp
  415c26:	mov    WORD PTR [edx],es
  415c28:	sbb    DWORD PTR [ecx-0x60eb1c83],esp
  415c2e:	sti    
  415c2f:	clc    
  415c30:	mov    al,al
  415c32:	lds    eax,FWORD PTR [ebp+ecx*4+0x22e32ee0]
  415c39:	jns    0x415c81
  415c3b:	xlat   BYTE PTR ds:[ebx]
  415c3c:	pop    ss
  415c3d:	adc    al,0x13
  415c3f:	cmp    DWORD PTR [ebp+0xd98119e],edx
  415c45:	rcr    dh,1
  415c47:	push   es
  415c48:	das    
  415c49:	arpl   WORD PTR [esi+0x7e],bx
  415c4c:	inc    esp
  415c4d:	jno    0x415c40
  415c4f:	jns    0x415c87
  415c51:	jbe    0x415c21
  415c53:	push   0xd8b8ef28
  415c58:	pop    ss
  415c59:	nop
  415c5a:	aam    0xd9
  415c5c:	mov    al,ds:0x7a1ba473
  415c61:	cmp    DWORD PTR [edi+0x7cfdd349],edi
  415c67:	mov    ch,0xda
  415c69:	sbb    BYTE PTR [eax],dh
  415c6b:	xor    eax,0xf6247a49
  415c70:	(bad)  
  415c71:	cwde   
  415c72:	add    BYTE PTR [esi],ch
  415c74:	sub    ch,BYTE PTR [edx-0x4e8d667a]
  415c7a:	inc    esi
  415c7b:	xor    BYTE PTR [ebx-0x74],0xd0
  415c7f:	sar    BYTE PTR [edx-0x1f06fbc9],0xf9
  415c86:	loope  0x415cb0
  415c88:	pop    ebp
  415c89:	lock pop es
  415c8b:	sbb    DWORD PTR [ebx-0xe09a641],ecx
  415c91:	push   eax
  415c92:	test   DWORD PTR [ebx+esi*8+0x6c],0x737b2a86
  415c9a:	(bad)  
  415c9b:	call   0x93a50f74
  415ca0:	(bad)  
  415ca2:	inc    edx
  415ca3:	pop    esi
  415ca4:	mov    ch,BYTE PTR [edi+0x25ae1fa2]
  415caa:	dec    edi
  415cab:	rcl    DWORD PTR [eax],1
  415cad:	jp     0x415cf6
  415caf:	add    ebx,DWORD PTR [esi+0x31]
  415cb2:	aas    
  415cb3:	fnsave [ebx+esi*8+0x740c8650]
  415cba:	jmp    0x1733:0x36d4501e
  415cc1:	jp     0x415cbf
  415cc3:	or     BYTE PTR [ebx+0x32],dl
  415cc6:	retf   0x896
  415cc9:	cmp    edx,DWORD PTR [ebx]
  415ccb:	inc    eax
  415ccc:	fistp  QWORD PTR [edi+ecx*2-0x33c879ee]
  415cd3:	(bad)  
  415cd4:	mov    ds:0x4b1a4ef8,al
  415cd9:	cmc    
  415cda:	bound  esi,QWORD PTR [edx]
  415cdc:	sbb    BYTE PTR [esi-0x692aef6d],dl
  415ce2:	fmul   st,st(0)
  415ce4:	push   ss
  415ce5:	sub    BYTE PTR [eax],dh
  415ce7:	in     eax,0xec
  415ce9:	hlt    
  415cea:	or     al,0x2c
  415cec:	fmul   DWORD PTR [ebp+0x3b]
  415cef:	lds    esi,FWORD PTR [ecx-0xd]
  415cf2:	pop    ebx
  415cf3:	mov    ah,0x1a
  415cf5:	and    DWORD PTR [ecx-0x2eb1e284],0x1f7d6c44
  415cff:	add    ebp,edi
  415d01:	ja     0x415d16
  415d03:	call   0xbb93e646
  415d08:	mov    eax,ds:0x7fcb1d81
  415d0d:	jmp    0x415ccc
  415d0f:	test   BYTE PTR [ebp+0x5e],bh
  415d12:	dec    ebx
  415d13:	mov    ecx,DWORD PTR [esi+ebp*8+0x65fbace4]
  415d1a:	ins    DWORD PTR es:[edi],dx
  415d1b:	or     dh,BYTE PTR [ebx]
  415d1d:	imul   ebx,DWORD PTR [edx+0x25],0x46
  415d21:	nop
  415d22:	and    eax,DWORD PTR ds:0xbe4be15f
  415d28:	pop    esp
  415d29:	addr16 pop ebp
  415d2b:	jne    0x415da5
  415d2d:	ror    ah,0xee
  415d30:	mov    edi,DWORD PTR [eax+ecx*4]
  415d33:	bound  edi,QWORD PTR [edi+ebx*1-0xb076c9]
  415d3a:	pop    esi
  415d3b:	mov    ds:0xa68bf50,eax
  415d40:	stos   BYTE PTR es:[edi],al
  415d41:	sbb    bl,0x4e
  415d44:	and    ecx,esi
  415d46:	sahf   
  415d47:	add    al,0x17
  415d49:	gs iret 
  415d4b:	add    BYTE PTR [ecx+0x17],al
  415d4e:	mov    eax,ds:0xcf0c81d
  415d53:	jno    0x415d40
  415d55:	int3   
  415d56:	cmc    
  415d57:	in     al,0x45
  415d59:	test   BYTE PTR [ecx],dl
  415d5b:	int    0x2a
  415d5d:	imul   esp,ecx,0xe97b364f
  415d63:	adc    eax,0xef4d5cd6
  415d68:	mov    al,0x4c
  415d6a:	add    esp,edx
  415d6c:	pushf  
  415d6d:	and    al,BYTE PTR [ebx-0x68d61d01]
  415d73:	jecxz  0x415d64
  415d75:	push   esi
  415d76:	and    eax,0x4761aa4
  415d7b:	in     eax,dx
  415d7c:	fsubr  DWORD PTR [eax]
  415d7e:	or     BYTE PTR [eax],al
  415d80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d81:	retf   
  415d82:	out    0x8a,al
  415d84:	xor    dh,cl
  415d86:	cs test eax,0x88fa9913
  415d8c:	and    dh,ch
  415d8e:	(bad)  
  415d8f:	jmp    0xd39e:0xbe4e86fc
  415d96:	xchg   edx,eax
  415d97:	and    BYTE PTR [ebx+0x1b04bbc4],bl
  415d9d:	lods   al,BYTE PTR ds:[esi]
  415d9e:	push   es
  415d9f:	pushf  
  415da0:	cmp    al,0x5d
  415da2:	js     0x415d86
  415da4:	jne    0x415d8e
  415da6:	lea    ebx,[eax-0x63]
  415da9:	sub    al,0xbc
  415dab:	xor    al,0x5f
  415dad:	mov    ecx,0x661a18f3
  415db2:	mov    bl,0x17
  415db4:	mov    ds:0x7b48eba6,al
  415db9:	pushf  
  415dba:	mov    al,cl
  415dbc:	adc    al,0xf9
  415dbe:	add    dh,BYTE PTR [ecx-0x20302b95]
  415dc4:	mov    WORD PTR [esi+0x5b4497bc],es
  415dca:	popf   
  415dcb:	hlt    
  415dcc:	clc    
  415dcd:	mov    bl,al
  415dcf:	pushf  
  415dd0:	in     eax,0x0
  415dd2:	call   0x33e2cedb
  415dd7:	in     eax,0xdb
  415dd9:	and    edi,esi
  415ddb:	test   al,0xa
  415ddd:	leave  
  415dde:	xchg   bl,bh
  415de0:	mov    dh,0x49
  415de2:	cwde   
  415de3:	mov    ebx,0x3b414c78
  415de8:	dec    ecx
  415de9:	(bad)  [esi+0x9f0bf1b]
  415def:	or     bl,BYTE PTR [edi-0x126b00a4]
  415df5:	jg     0x415e1d
  415df7:	jbe    0x415dee
  415df9:	imul   eax,ecx,0xa6fef51b
  415dff:	fisubr DWORD PTR ds:0xfe1c0fc8
  415e05:	or     al,0xc3
  415e07:	jmp    0x7fd5:0x6f1bba87
  415e0e:	add    BYTE PTR [ebx+0x535b5e3b],dh
  415e14:	fimul  WORD PTR [ecx-0x6d]
  415e17:	xor    ecx,DWORD PTR [ebx-0x54]
  415e1a:	pop    ds
  415e1b:	outs   dx,DWORD PTR ds:[esi]
  415e1c:	imul   edx,DWORD PTR [ebx-0xa],0xa069b7e6
  415e23:	cmp    dl,dh
  415e25:	xchg   BYTE PTR [ebx],al
  415e27:	push   edi
  415e28:	call   0x5c89c700
  415e2d:	scas   eax,DWORD PTR es:[edi]
  415e2e:	push   ss
  415e2f:	mov    ebx,0xbcde4ae7
  415e34:	repz aaa 
  415e36:	cs push cs
  415e38:	repnz out dx,al
  415e3a:	idiv   BYTE PTR fs:[eax-0x6acff5ca]
  415e41:	aaa    
  415e42:	fiadd  WORD PTR [ecx]
  415e44:	push   eax
  415e45:	les    edx,FWORD PTR [edx+0x69]
  415e48:	rol    DWORD PTR [edx],cl
  415e4a:	into   
  415e4b:	pushf  
  415e4c:	sbb    eax,0x3d2341c2
  415e51:	loop   0x415e9f
  415e53:	cdq    
  415e54:	ror    BYTE PTR [edx-0x34846788],cl
  415e5a:	dec    esp
  415e5b:	fsubr  DWORD PTR [ebp-0x6]
  415e5e:	push   es
  415e5f:	and    DWORD PTR [ecx+0x7a],edi
  415e62:	repz out 0xa4,al
  415e65:	mov    ch,BYTE PTR [ebx-0x6d]
  415e68:	mov    al,ds:0x51ed442
  415e6d:	inc    ecx
  415e6e:	mov    esi,esp
  415e70:	push   esp
  415e71:	sti    
  415e72:	xor    ebp,esi
  415e74:	mov    BYTE PTR [ecx+0x33],al
  415e77:	inc    ebx
  415e78:	fs push eax
  415e7a:	(bad)  
  415e7b:	hlt    
  415e7c:	bound  eax,QWORD PTR [ebx]
  415e7e:	adc    DWORD PTR [ecx-0x659a4eee],esi
  415e84:	std    
  415e85:	inc    ebp
  415e86:	mov    eax,ds:0xa82859c7
  415e8b:	cli    
  415e8c:	mov    eax,ds:0x95f8d95e
  415e91:	fidivr WORD PTR [ecx+0x75]
  415e94:	sti    
  415e95:	clc    
  415e96:	jno    0x415eb9
  415e98:	es and al,0xd8
  415e9b:	out    dx,al
  415e9c:	pop    ecx
  415e9d:	ret    0xfd3b
  415ea0:	in     al,dx
  415ea1:	rol    DWORD PTR [eax+0x7d],cl
  415ea4:	push   ecx
  415ea5:	push   esp
  415ea6:	dec    edx
  415ea7:	jmp    0x415e7f
  415ea9:	iret   
  415eaa:	cs push edx
  415eac:	push   ss
  415ead:	aam    0x82
  415eaf:	and    DWORD PTR [esi-0x58],ecx
  415eb2:	and    eax,0x7aafccd7
  415eb7:	dec    edx
  415eb8:	sub    DWORD PTR [ebx+eiz*4-0x46],esi
  415ebc:	les    esp,FWORD PTR [eax-0x5e]
  415ebf:	sbb    ebx,ebp
  415ec1:	fbld   TBYTE PTR [edx]
  415ec3:	inc    esp
  415ec4:	add    eax,0xe7ae5442
  415ec9:	mov    dh,0x9a
  415ecb:	or     al,0xf8
  415ecd:	out    dx,eax
  415ece:	lea    edx,[ecx+0x57]
  415ed1:	add    ah,BYTE PTR [ecx]
  415ed3:	or     DWORD PTR [edx+0x619f3232],0x187ea3c0
  415edd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ede:	inc    edx
  415edf:	jge    0x415ee3
  415ee1:	ret    0xf1ca
  415ee4:	inc    edi
  415ee5:	or     eax,DWORD PTR [ecx]
  415ee7:	inc    edx
  415ee8:	jmp    0x390a:0x14fdf743
  415eef:	ins    DWORD PTR es:[edi],dx
  415ef0:	mov    ds:0x5030d2c9,al
  415ef5:	mov    WORD PTR [edx+0x2940dbfa],es
  415efb:	sbb    eax,0x9756512a
  415f00:	call   DWORD PTR [edi+0x51]
  415f03:	aas    
  415f04:	mov    esi,DWORD PTR [esi+0x32]
  415f07:	sbb    edx,ecx
  415f09:	int3   
  415f0a:	mov    WORD PTR [ecx],es
  415f0c:	outs   dx,DWORD PTR ds:[esi]
  415f0d:	in     al,dx
  415f0e:	test   al,0xca
  415f10:	iret   
  415f11:	fist   WORD PTR [ebp+0x2652dbab]
  415f17:	cs add eax,0x5b3a0051
  415f1d:	scas   al,BYTE PTR es:[edi]
  415f1e:	jge    0x3e6db83b
  415f24:	ja     0x415ec0
  415f26:	xor    bh,dh
  415f28:	mov    ecx,0x3ae6e1f2
  415f2d:	mov    ds:0x70236944,al
  415f32:	xchg   esi,edi
  415f34:	mov    ds:0xf316fa81,eax
  415f39:	mov    ebx,0xc454d976
  415f3e:	and    esp,esi
  415f40:	sub    al,0x39
  415f42:	add    BYTE PTR [ebp+0x4c],ah
  415f45:	lea    ecx,[ecx+0xb5f2f3d]
  415f4b:	inc    ebx
  415f4c:	js     0x415f65
  415f4e:	ja     0x415fa7
  415f50:	in     eax,dx
  415f51:	jae    0x415f48
  415f53:	clc    
  415f54:	out    dx,al
  415f55:	fisub  DWORD PTR [edx-0x17]
  415f58:	(bad)  [ebp+0x4e1de588]
  415f5e:	scas   eax,DWORD PTR es:[edi]
  415f5f:	int    0x91
  415f61:	mov    edi,0x6243c0d2
  415f66:	cmp    ebx,DWORD PTR [ebp+0x6e]
  415f69:	or     al,0xa1
  415f6b:	cmp    esi,DWORD PTR [ebx]
  415f6d:	jo     0x415f1a
  415f6f:	mov    ah,0x7e
  415f71:	sbb    al,0x14
  415f73:	mov    edx,0xae38a8a4
  415f78:	sbb    bh,BYTE PTR [edx]
  415f7a:	jl     0x415fcf
  415f7c:	leave  
  415f7d:	push   eax
  415f7e:	push   cs
  415f7f:	outs   dx,BYTE PTR ds:[esi]
  415f80:	add    eax,0xbf414ff
  415f85:	je     0x415fb7
  415f87:	sbb    esp,esp
  415f89:	adc    DWORD PTR [esi-0x24189fc9],edi
  415f8f:	(bad)  
  415f90:	dec    esp
  415f91:	xlat   BYTE PTR ds:[ebx]
  415f92:	jl     0x415f56
  415f94:	sbb    DWORD PTR [esi-0x76e52a57],edi
  415f9a:	push   0xffffffbb
  415f9c:	ja     0x415f43
  415f9e:	aad    0x38
  415fa0:	dec    si
  415fa2:	dec    esi
  415fa3:	cdq    
  415fa4:	hlt    
  415fa5:	mov    BYTE PTR [eax],dl
  415fa7:	lods   eax,DWORD PTR ds:[esi]
  415fa8:	lds    eax,FWORD PTR [ecx-0x8]
  415fab:	ds ja  0x415f2e
  415fae:	lods   eax,DWORD PTR ds:[esi]
  415faf:	imul   cx,di,0xb299
  415fb4:	adc    ch,0x8
  415fb7:	int3   
  415fb8:	repnz scas eax,DWORD PTR es:[edi]
  415fba:	fnstcw WORD PTR [eax+0x7b476499]
  415fc0:	retf   0x3591
  415fc3:	dec    edi
  415fc4:	jl     0x415fb9
  415fc6:	icebp  
  415fc7:	mov    fs,WORD PTR [edx]
  415fc9:	xchg   edx,eax
  415fca:	xchg   edx,eax
  415fcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fcc:	hlt    
  415fcd:	inc    esi
  415fce:	jne    0x415f7d
  415fd0:	clc    
  415fd1:	add    eax,0x5490c06c
  415fd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fd7:	mov    eax,0x18f808aa
  415fdc:	stos   BYTE PTR es:[edi],al
  415fdd:	lods   eax,DWORD PTR ds:[esi]
  415fde:	push   0x7e
  415fe0:	cmc    
  415fe1:	mov    eax,ds:0x27563ba
  415fe6:	xchg   DWORD PTR [eax-0x526e242e],ecx
  415fec:	aam    0xde
  415fee:	enter  0xa707,0xe
  415ff2:	jno    0x415fd2
  415ff4:	aad    0x82
  415ff6:	rol    BYTE PTR [ebx-0x31dc1a28],1
  415ffc:	and    eax,0x4fbae4b2
  416001:	out    0xe2,eax
  416003:	inc    esp
  416004:	inc    edx
  416005:	fwait
  416006:	mov    al,0xb2
  416008:	sub    al,0x2
  41600a:	idiv   DWORD PTR [ebx]
  41600c:	mov    dh,0x5c
  41600e:	shr    DWORD PTR cs:[ebp+edi*4-0x65],cl
  416013:	sub    eax,0xfc764b28
  416018:	test   BYTE PTR [edi+0x16cbd5b],0xfa
  41601f:	test   DWORD PTR [esi-0x4388b7e6],ebp
  416025:	xchg   edx,eax
  416026:	es das 
  416028:	arpl   WORD PTR [ebx-0x6cc9cb5b],sp
  41602e:	or     eax,0xa1208400
  416033:	sub    eax,0x80c4770d
  416038:	or     BYTE PTR [eax+0x52],0x73
  41603c:	sub    eax,DWORD PTR [ebx-0x24]
  41603f:	(bad)  
  416040:	fist   WORD PTR [edx+0x5b]
  416043:	cli    
  416044:	shl    DWORD PTR [esi-0x53212e57],cl
  41604a:	dec    ecx
  41604b:	jns    0x41604e
  41604d:	ror    DWORD PTR [esi+ecx*2],0xb8
  416051:	mov    dh,0xcc
  416053:	enter  0xf2ce,0x62
  416057:	dec    edi
  416058:	xchg   ebx,eax
  416059:	mov    BYTE PTR [ebx+0x5e],0xec
  41605d:	bswap  eax
  41605f:	imul   dh
  416061:	add    esp,DWORD PTR ds:0x3dfe7f0f
  416067:	(bad)  
  416068:	add    eax,0x209a71d1
  41606d:	sar    BYTE PTR [ecx],0x28
  416070:	mov    ebx,0xe027a19f
  416075:	cli    
  416076:	aam    0x28
  416078:	stos   DWORD PTR es:[edi],eax
  416079:	inc    ecx
  41607a:	(bad)  
  41607b:	and    dh,BYTE PTR [ebx-0xc]
  41607e:	lods   eax,DWORD PTR ds:[esi]
  41607f:	call   0x675:0x370b1745
  416086:	xor    eax,0x5a55ab40
  41608b:	cmp    BYTE PTR [ebx+0x70],al
  41608e:	in     al,dx
  41608f:	mov    di,0xf549
  416093:	lods   eax,DWORD PTR ds:[esi]
  416094:	pop    ebx
  416095:	xor    BYTE PTR [eax],dh
  416097:	or     BYTE PTR [ecx],al
  416099:	je     0x41606e
  41609b:	stc    
  41609c:	mov    ds:0xa512b6d4,al
  4160a1:	mov    DWORD PTR [edi-0x62],0xf2bedd95
  4160a8:	lods   al,BYTE PTR ds:[esi]
  4160a9:	test   ecx,ebx
  4160ab:	hlt    
  4160ac:	mov    cl,0xdf
  4160ae:	fld    QWORD PTR [edx]
  4160b0:	push   esp
  4160b1:	leave  
  4160b2:	xlat   BYTE PTR ds:[ebx]
  4160b3:	jmp    0xf84b:0x3c966589
  4160ba:	test   al,0x84
  4160bc:	xchg   edi,eax
  4160bd:	jns    0x41606c
  4160bf:	mov    eax,ds:0xfad76d7d
  4160c4:	adc    edi,ecx
  4160c6:	fwait
  4160c7:	outs   dx,DWORD PTR ds:[esi]
  4160c8:	or     cl,BYTE PTR [esi+0x2a1f73e6]
  4160ce:	xchg   ecx,eax
  4160cf:	(bad)  
  4160d0:	fimul  WORD PTR [eax-0x3d7c7006]
  4160d6:	movd   mm3,DWORD PTR ss:[ecx-0x5779373d]
  4160de:	dec    edx
  4160df:	data16 repz sbb BYTE PTR [ebx+eiz*8+0x49635eee],0xfc
  4160e9:	fcmovu st,st(7)
  4160eb:	retf   
  4160ec:	gs mov dh,0xf8
  4160ef:	xchg   esp,eax
  4160f0:	stos   DWORD PTR es:[edi],eax
  4160f1:	push   esi
  4160f2:	or     bh,BYTE PTR [ecx-0x1ff4aafe]
  4160f8:	push   esi
  4160f9:	nop
  4160fa:	or     al,BYTE PTR [ebx]
  4160fc:	push   ss
  4160fd:	imul   ecx,eax,0xffffff89
  416100:	jmp    0xee86:0x8fae7a4c
  416107:	or     DWORD PTR [ebp+0x4f452203],edi
  41610d:	out    dx,al
  41610e:	adc    eax,0x37a375b1
  416113:	inc    eax
  416114:	loopne 0x416125
  416116:	mov    ds:0x7d343ef9,al
  41611b:	mov    esp,DWORD PTR [edi-0x3a]
  41611e:	jmp    DWORD PTR [edi]
  416120:	fwait
  416121:	pop    edx
  416122:	mov    edi,edx
  416124:	cmp    al,0xde
  416126:	jl     0x41615a
  416128:	popa   
  416129:	pop    es
  41612a:	cdq    
  41612b:	inc    eax
  41612c:	push   ss
  41612d:	ret    0xd20b
  416130:	mov    edi,0xac4fac35
  416135:	(bad)  
  416136:	mov    al,ds:0xa8ad93db
  41613b:	call   DWORD PTR [ebx*4-0x1f17a284]
  416142:	inc    esi
  416143:	iret   
  416144:	call   edi
  416146:	sahf   
  416147:	xchg   BYTE PTR [ecx],cl
  416149:	div    BYTE PTR [edi-0x10]
  41614c:	sub    DWORD PTR [ebx+0x65],edx
  41614f:	popa   
  416150:	js     0x416151
  416152:	popf   
  416153:	repnz or bh,dl
  416156:	in     eax,0xcf
  416158:	mov    ebp,0xbebd250d
  41615d:	xor    cl,al
  41615f:	pop    edi
  416160:	add    cl,cl
  416162:	dec    esi
  416163:	pop    esp
  416164:	dec    edx
  416165:	xchg   BYTE PTR [edi],bh
  416167:	dec    ecx
  416168:	js     0x416151
  41616a:	xchg   edi,eax
  41616b:	test   eax,0x9dd74bf0
  416170:	clc    
  416171:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416172:	pop    esp
  416173:	mov    ds,WORD PTR [esi-0x55]
  416176:	inc    ebp
  416177:	xchg   edx,eax
  416178:	xchg   edx,eax
  416179:	pop    esp
  41617a:	dec    ebx
  41617b:	cdq    
  41617c:	adc    ebx,DWORD PTR [edi]
  41617e:	xchg   dl,dl
  416180:	push   0xfffffff7
  416182:	xchg   cl,cl
  416184:	(bad)  
  416185:	jb     0x41618e
  416187:	adc    edx,DWORD PTR [ecx+0x28ee163a]
  41618d:	sbb    BYTE PTR ds:0xddcc513,bh
  416193:	test   al,0x61
  416195:	sar    bh,0x88
  416198:	gs pop edx
  41619a:	pop    ss
  41619b:	and    BYTE PTR [edx-0x1cbbda9d],al
  4161a1:	xor    ch,BYTE PTR [eax+0x1121b8fc]
  4161a7:	mov    ch,BYTE PTR [ebx]
  4161a9:	test   al,0xe1
  4161ab:	shl    DWORD PTR [ebp+eax*8+0x15],cl
  4161af:	div    BYTE PTR [edi+edi*8]
  4161b2:	test   DWORD PTR [edi],eax
  4161b4:	push   0x2a
  4161b6:	das    
  4161b7:	mov    al,ds:0x7c9edc89
  4161bc:	cwde   
  4161bd:	sub    edi,DWORD PTR [ebx-0x1d]
  4161c0:	jecxz  0x416147
  4161c2:	mov    al,0x6a
  4161c4:	cs and al,0x91
  4161c7:	pop    eax
  4161c8:	fstp   QWORD PTR [edx]
  4161ca:	jl     0x4161a1
  4161cc:	xchg   ecx,eax
  4161cd:	or     al,0x2c
  4161cf:	lock ins BYTE PTR es:[edi],dx
  4161d1:	aad    0x88
  4161d3:	add    DWORD PTR [eax+esi*4-0x7cfff07],edx
  4161da:	xor    al,0xc5
  4161dc:	cmp    cl,BYTE PTR [edi*1+0x5517666e]
  4161e3:	or     BYTE PTR [ebp-0x4683206],dh
  4161e9:	je     0x416199
  4161eb:	jecxz  0x4161d6
  4161ed:	loope  0x416211
  4161ef:	add    DWORD PTR [ebx+0x39],ebp
  4161f2:	stos   BYTE PTR es:[edi],al
  4161f3:	retf   0x24f
  4161f6:	sbb    eax,0xf1d63be0
  4161fb:	cld    
  4161fc:	push   0x35588501
  416201:	mov    esi,0xfcf13657
  416206:	pop    edi
  416207:	mov    dl,0x85
  416209:	xor    al,0x3c
  41620b:	fisttp QWORD PTR [edx+edi*4]
  41620e:	mov    edx,0x2ebd086a
  416213:	jns    0x41622a
  416215:	mov    esi,0x380939
  41621a:	push   ds
  41621b:	and    al,BYTE PTR [ebx]
  41621d:	int3   
  41621e:	jecxz  0x416288
  416220:	and    BYTE PTR [ebp-0x118715a0],0xed
  416227:	mov    ecx,0xa68e47c1
  41622c:	pop    ecx
  41622d:	fdiv   QWORD PTR [edx-0x28bc38a0]
  416233:	add    esp,DWORD PTR [ecx+0x5b0ccb9c]
  416239:	mov    edx,esp
  41623b:	icebp  
  41623c:	xchg   esp,eax
  41623d:	add    ch,BYTE PTR ds:0x72fce726
  416243:	mov    eax,ds:0x19f7c856
  416248:	or     eax,0x230e4168
  41624d:	jno    0x4162ae
  41624f:	jecxz  0x416286
  416251:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416252:	and    eax,0xbc8db073
  416257:	cdq    
  416258:	lods   al,BYTE PTR ds:[esi]
  416259:	mov    esp,0xdac21ec2
  41625e:	sbb    al,0x53
  416260:	xchg   ebp,eax
  416261:	ss and eax,0xffffff93
  416265:	pop    ecx
  416266:	adc    eax,0xfad2b12c
  41626b:	fcmove st,st(0)
  41626d:	push   ebx
  41626e:	lods   al,BYTE PTR ds:[esi]
  41626f:	test   DWORD PTR [edx+0x4259b888],ebx
  416275:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416276:	push   ebx
  416277:	(bad)  
  416278:	mov    bh,0x47
  41627a:	sub    al,0x3b
  41627c:	pop    edx
  41627d:	mov    edx,0xcc14615b
  416282:	sub    al,0x5
  416284:	inc    esp
  416285:	repz xchg ecx,eax
  416287:	cmp    al,0xee
  416289:	int3   
  41628a:	dec    esi
  41628b:	ins    DWORD PTR es:[edi],dx
  41628c:	xor    esp,DWORD PTR [edx+0x353129e0]
  416292:	add    eax,0x551e8509
  416297:	xor    bh,cl
  416299:	push   ebp
  41629a:	xor    BYTE PTR ds:0x5da138c7,al
  4162a0:	xchg   ah,bl
  4162a2:	das    
  4162a3:	test   DWORD PTR [esi+0x1f79dadb],eax
  4162a9:	jle    0x416274
  4162ab:	scas   al,BYTE PTR es:[edi]
  4162ac:	xchg   DWORD PTR [esp+ebp*4-0xa],ebp
  4162b0:	or     BYTE PTR ds:0x51d42da6,dl
  4162b6:	call   0xf545e1cd
  4162bb:	adc    eax,0x9ba54380
  4162c0:	popa   
  4162c1:	ss int 0x26
  4162c4:	loope  0x4162cc
  4162c6:	sub    dl,BYTE PTR [ecx]
  4162c8:	mov    gs,WORD PTR [eax]
  4162ca:	rcl    DWORD PTR [eax+eax*2-0x6c090fc4],0x3
  4162d2:	call   0xdbd6:0xdcc6067b
  4162d9:	outs   dx,BYTE PTR ds:[esi]
  4162da:	and    dh,BYTE PTR [esi]
  4162dc:	mov    bh,0xc4
  4162de:	inc    esi
  4162df:	loope  0x416299
  4162e1:	cmp    al,0xae
  4162e3:	gs push ebp
  4162e5:	fisub  WORD PTR [ebp+0x21f43e6]
  4162eb:	inc    esi
  4162ec:	(bad)  
  4162ed:	cdq    
  4162ee:	add    esp,DWORD PTR [ebp+0x60af4eca]
  4162f4:	mov    al,ds:0xc8a11b3e
  4162f9:	push   0x25
  4162fb:	mov    ebx,0xcaf1d3f1
  416300:	lock xchg DWORD PTR [ebp-0x31],ebx
  416304:	dec    ebp
  416305:	in     al,dx
  416306:	dec    edx
  416307:	sub    BYTE PTR [ebx+0x16],0x80
  41630b:	loop   0x41631e
  41630d:	frstor [eax-0x3390b43a]
  416313:	adc    cl,BYTE PTR [edi+edi*4-0x7f7bb8ae]
  41631a:	bound  eax,QWORD PTR [esi-0x7177806e]
  416320:	mov    ds:0xabe4e70c,eax
  416325:	cmp    ebp,DWORD PTR [esi+0x12]
  416328:	leave  
  416329:	ins    BYTE PTR es:[edi],dx
  41632a:	adc    DWORD PTR [esi],edx
  41632c:	lea    edx,gs:[esi]
  41632f:	sub    edx,DWORD PTR [ecx+0x30fbe0a5]
  416335:	xor    DWORD PTR [edx-0x48],0x21
  416339:	(bad)  
  41633b:	fucomip st,st(4)
  41633d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41633e:	shl    BYTE PTR [edi+0x4ce31829],1
  416344:	test   BYTE PTR [eax+0x75],0x97
  416348:	xchg   ecx,eax
  416349:	mov    bl,0xcf
  41634b:	(bad)
  41634e:	mov    ch,0x2a
  416350:	gs or  eax,0x9607877c
  416356:	cmp    ecx,DWORD PTR [ebx-0x7]
  416359:	xchg   edi,eax
  41635a:	neg    DWORD PTR [esp+ecx*8+0x3959ddf0]
  416361:	call   0x5655db2
  416366:	push   0x235522f2
  41636b:	call   DWORD PTR ds:0x555c2023
  416371:	jg     0x4163bc
  416373:	call   0x98be:0x52b77d95
  41637a:	(bad)  
  41637b:	jl     0x416345
  41637d:	ins    DWORD PTR es:[edi],dx
  41637e:	xchg   edi,eax
  41637f:	cli    
  416380:	shr    DWORD PTR [ecx+0x5b],0xa5
  416384:	lds    esp,FWORD PTR [ecx]
  416386:	test   al,0x2
  416388:	lahf   
  416389:	jno    0x416365
  41638b:	xchg   esp,eax
  41638c:	jle    0x416374
  41638e:	cmp    DWORD PTR [edx],esi
  416390:	cli    
  416391:	mov    al,0xb2
  416393:	or     DWORD PTR [ebx-0x17236e5],edx
  416399:	xchg   BYTE PTR [eax+ecx*8-0x26],al
  41639d:	mov    ds,WORD PTR [ebp+eax*1+0x5165a6b3]
  4163a4:	dec    ebx
  4163a5:	cmc    
  4163a6:	jo     0x4163f9
  4163a8:	jecxz  0x41638c
  4163aa:	out    dx,eax
  4163ab:	ret    0xead3
  4163ae:	hlt    
  4163af:	cmp    eax,0x60eba042
  4163b4:	cmp    bl,0x82
  4163b7:	inc    edi
  4163b8:	jns    0x41637f
  4163ba:	and    BYTE PTR [esi],dh
  4163bc:	lahf   
  4163bd:	xor    esp,edx
  4163bf:	push   edi
  4163c0:	enter  0xdc98,0xcb
  4163c4:	xchg   DWORD PTR [ebx],ebp
  4163c6:	das    
  4163c7:	cmc    
  4163c8:	jl     0x41637d
  4163ca:	mov    ?,WORD PTR [ebp-0x763877d4]
  4163d0:	cmc    
  4163d1:	sahf   
  4163d2:	out    0xc7,al
  4163d4:	adc    bl,BYTE PTR [edi+0x2e]
  4163d7:	dec    ebp
  4163d8:	jle    0x4163d4
  4163da:	sbb    DWORD PTR [eax-0x5b1a9fd5],0xffffffdf
  4163e1:	xchg   esp,eax
  4163e2:	rol    BYTE PTR [ecx],0xe5
  4163e5:	mov    WORD PTR [ebp-0x8],?
  4163e8:	add    ebx,ebp
  4163ea:	add    eax,0xe9a9642c
  4163ef:	dec    ebp
  4163f0:	sbb    BYTE PTR [edi+edx*8],ch
  4163f3:	data16 adc bh,dh
  4163f6:	ds fnsetpm(287 only) 
  4163f9:	inc    esp
  4163fa:	jmp    0xc1e6:0x49565960
  416401:	ficomp WORD PTR [ebp-0x2b0d25ad]
  416407:	lahf   
  416408:	xor    al,0xf6
  41640a:	adc    dh,bh
  41640c:	xor    BYTE PTR [ebx+0x4b],0xa7
  416410:	mov    edx,0x2de6066c
  416415:	adc    eax,0xf67a0ab7
  41641a:	out    dx,al
  41641b:	enter  0x119a,0x6a
  41641f:	clc    
  416420:	xor    dl,BYTE PTR [edx-0x2ab237ba]
  416426:	mov    ebx,0xc5d36cf
  41642b:	gs or  eax,0x11d63adb
  416431:	add    bh,al
  416433:	dec    esp
  416434:	and    dh,BYTE PTR ds:0xa39f191e
  41643a:	mov    eax,0x38a73ea6
  41643f:	scas   eax,DWORD PTR es:[edi]
  416440:	sub    ebx,DWORD PTR [eax+0x28]
  416443:	sub    DWORD PTR [edi],edi
  416445:	push   ebx
  416446:	adc    DWORD PTR [esp+eax*8+0x7d],0xffffffb1
  41644b:	fsub   QWORD PTR [esi-0x50]
  41644e:	in     al,dx
  41644f:	imul   esi,DWORD PTR [esi-0x73],0xb287b769
  416456:	dec    edi
  416457:	rol    BYTE PTR [edx],1
  416459:	jmp    0x416463
  41645b:	bound  edi,QWORD PTR [ecx-0x6b6a3dea]
  416461:	mov    cl,0x8e
  416463:	pop    ds
  416464:	mov    DWORD PTR [edi],esp
  416466:	adc    esi,edx
  416468:	sete   BYTE PTR [ebx-0x28]
  41646c:	or     ebp,esp
  41646e:	dec    ecx
  41646f:	lahf   
  416470:	leave  
  416471:	ins    BYTE PTR es:[edi],dx
  416472:	cmp    al,0x7a
  416474:	and    DWORD PTR [ebx+0x45],edi
  416477:	mov    ds:0xac954c64,eax
  41647c:	inc    edi
  41647d:	sbb    ebx,DWORD PTR [esi+0x4fd6e534]
  416483:	and    al,0x6e
  416485:	retf   
  416486:	adc    eax,0x15caf62
  41648b:	or     BYTE PTR [ebx+0x4],dl
  41648e:	mov    dl,0xc4
  416490:	xchg   esi,eax
  416491:	jmp    0x4164bd
  416493:	and    al,0xb1
  416495:	and    dh,BYTE PTR [eax]
  416497:	psrlw  mm3,QWORD PTR [edx]
  41649a:	ret    0xe9e4
  41649d:	xchg   ebp,eax
  41649e:	mov    WORD PTR [ebp-0x5d],gs
  4164a1:	ret    
  4164a2:	sbb    DWORD PTR [ebx+0x3b],eax
  4164a5:	xchg   di,ax
  4164a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164a8:	dec    ebp
  4164a9:	mov    ds:0x8012309f,eax
  4164ae:	pop    edi
  4164af:	aad    0xc5
  4164b1:	out    0x10,eax
  4164b3:	add    eax,0xbb12b6ac
  4164b8:	mov    ds,WORD PTR [ebx+0x3fe35a82]
  4164be:	pop    ecx
  4164bf:	aam    0xba
  4164c1:	jg     0x416473
  4164c3:	(bad)
  4164c6:	mov    dh,0x99
  4164c8:	ja     0x416456
  4164ca:	or     esi,DWORD PTR [esi]
  4164cc:	ins    BYTE PTR es:[edi],dx
  4164cd:	sub    ecx,ebp
  4164cf:	lds    esp,FWORD PTR [edx+0x6c]
  4164d2:	dec    esi
  4164d3:	xchg   esp,eax
  4164d4:	pop    edi
  4164d5:	cmp    BYTE PTR [ecx-0x50],cl
  4164d8:	adc    ebp,ebx
  4164da:	cmp    esp,DWORD PTR ds:0xc85fc8ef
  4164e0:	pop    ss
  4164e1:	xor    DWORD PTR [eax],edx
  4164e3:	imul   esi,DWORD PTR [ebx-0x227e9c1c],0xffffffa0
  4164ea:	test   al,0xa7
  4164ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164ed:	rcr    eax,1
  4164ef:	aam    0xf
  4164f1:	and    BYTE PTR [edx-0x67],cl
  4164f4:	adc    ebx,0x4322c2e0
  4164fa:	xor    al,0xfd
  4164fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164fd:	stos   DWORD PTR es:[edi],eax
  4164fe:	sub    al,BYTE PTR [edx+0x42bbdf51]
  416504:	in     eax,0x25
  416506:	lea    eax,[edi+edx*2-0x11ecfd20]
  41650d:	xchg   ebx,eax
  41650e:	jns    0x4164b8
  416510:	sub    eax,0xcdd31088
  416515:	push   0xffffffe3
  416517:	fs xchg ecx,eax
  416519:	sub    ch,BYTE PTR [ecx+0x48]
  41651c:	cmp    al,BYTE PTR [ecx+0x19]
  41651f:	gs sahf 
  416521:	xor    edi,DWORD PTR [ebx-0x7d65d154]
  416527:	js     0x41657f
  416529:	jmp    0x4bc809c7
  41652e:	mov    dl,0xe3
  416530:	popa   
  416531:	(bad)  
  416532:	cmp    al,0x19
  416534:	mov    WORD PTR [edx],cx
  416537:	sub    cl,BYTE PTR [esi-0x6b486810]
  41653d:	test   BYTE PTR [edi],al
  41653f:	ds push ds
  416541:	and    ch,dh
  416543:	sub    eax,0x8275a96d
  416548:	mov    eax,0x50de14e1
  41654d:	(bad)  
  41654e:	cmp    al,BYTE PTR [eax-0x76180225]
  416554:	pop    ebp
  416555:	inc    esi
  416556:	mov    al,0xb5
  416558:	sub    al,0x32
  41655a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41655b:	inc    edi
  41655c:	push   cs
  41655d:	add    BYTE PTR [edi+0x464f26bf],dl
  416563:	sub    ebp,eax
  416565:	bound  edx,QWORD PTR [edi-0x18fa329b]
  41656b:	and    DWORD PTR [ebx+0x72],ecx
  41656e:	pop    eax
  41656f:	mov    BYTE PTR fs:[esi+0x5],dl
  416573:	out    dx,al
  416574:	xor    bh,bh
  416576:	out    0x42,eax
  416578:	lahf   
  416579:	(bad)  
  41657b:	inc    ecx
  41657c:	call   0x4de2:0xbde58988
  416583:	dec    edi
  416584:	pop    ebx
  416585:	lds    eax,FWORD PTR [eax+0x1083946f]
  41658b:	inc    edi
  41658c:	mov    eax,ds:0xdd5a57ff
  416591:	jnp    0x4165e5
  416593:	and    esi,0xee719b10
  416599:	push   ecx
  41659a:	mov    ebx,0x286891d8
  41659f:	dec    eax
  4165a0:	popf   
  4165a1:	cmp    BYTE PTR [edi-0x78e081af],dl
  4165a7:	push   edx
  4165a8:	icebp  
  4165a9:	xor    cl,al
  4165ab:	fiadd  WORD PTR [edi+0x28]
  4165ae:	push   edi
  4165af:	or     eax,ecx
  4165b1:	inc    edi
  4165b2:	bound  eax,QWORD PTR [ebp-0x68]
  4165b5:	lods   eax,DWORD PTR ds:[esi]
  4165b6:	loope  0x416542
  4165b8:	jge    0x4165aa
  4165ba:	bound  eax,QWORD PTR [edi-0x4fb5b177]
  4165c0:	push   0xc8b4617d
  4165c5:	mov    al,BYTE PTR [eax-0x64fcfd8c]
  4165cb:	stos   DWORD PTR es:[edi],eax
  4165cc:	loope  0x416608
  4165ce:	push   0xf1c1adaa
  4165d3:	mov    edi,0x5399ffec
  4165d8:	hlt    
  4165d9:	cmp    eax,0xa75d4a43
  4165de:	sub    ecx,DWORD PTR [ecx]
  4165e0:	dec    edi
  4165e1:	push   edx
  4165e2:	sub    al,0x8f
  4165e4:	pop    esi
  4165e5:	xchg   BYTE PTR [edi-0x1176489f],dl
  4165eb:	or     al,0x7d
  4165ed:	xor    BYTE PTR [ebx+0x7a7734a5],ah
  4165f3:	mov    WORD PTR [eax],cs
  4165f5:	imul   esp,DWORD PTR [esi-0x40c1ddb5],0xffffff8d
  4165fc:	jb     0xfb956e90
  416602:	push   es
  416603:	inc    esp
  416604:	ins    DWORD PTR es:[edi],dx
  416605:	jmp    0x416621
  416607:	xchg   edx,eax
  416608:	fistp  DWORD PTR [edx]
  41660a:	in     al,0xc3
  41660c:	sub    eax,0x5bb546be
  416611:	stc    
  416612:	sbb    al,0xcd
  416614:	mov    ?,WORD PTR [ebx]
  416616:	sbb    al,0x39
  416618:	xchg   edi,ecx
  41661a:	inc    esp
  41661b:	xchg   DWORD PTR [esi],esi
  41661d:	dec    eax
  41661e:	cmp    DWORD PTR [ecx],0xfffffffc
  416621:	sub    al,0xab
  416623:	mov    ah,0x6b
  416625:	fisttp QWORD PTR [edi-0x51]
  416628:	ret    
  416629:	inc    esi
  41662a:	shr    BYTE PTR [eax],cl
  41662c:	push   ds
  41662d:	stc    
  41662e:	jl     0x416639
  416630:	push   cs
  416631:	loopne 0x416691
  416633:	mov    ch,0x51
  416635:	aam    0x68
  416637:	je     0x4165bf
  416639:	adc    edx,eax
  41663b:	dec    eax
  41663c:	data16 je 0x416652
  41663f:	lea    ecx,[edx-0x6]
  416642:	or     ecx,DWORD PTR [ebx-0x390af952]
  416648:	cmc    
  416649:	stos   DWORD PTR es:[edi],eax
  41664a:	shr    BYTE PTR [edi],0x9d
  41664d:	cmp    ah,BYTE PTR [eax-0x4a856b80]
  416653:	stos   DWORD PTR es:[edi],eax
  416654:	mov    ebp,0xd1a4b2ae
  416659:	or     DWORD PTR [eax-0x7e],ecx
  41665c:	mov    BYTE PTR [esi],dh
  41665e:	xchg   edx,eax
  41665f:	push   esi
  416660:	stos   DWORD PTR es:[edi],eax
  416661:	outs   dx,DWORD PTR ds:[esi]
  416662:	dec    edi
  416663:	sub    dh,BYTE PTR [ecx]
  416665:	ret    
  416666:	mov    edi,0x2b883882
  41666b:	(bad)  
  41666c:	sbb    BYTE PTR [edx],al
  41666e:	add    DWORD PTR [eax+ebp*1+0x7f3e2268],eax
  416675:	jmp    0x2cf8a2c9
  41667a:	mov    eax,ds:0xcb6c516
  41667f:	mov    eax,ds:0x403df5ce
  416684:	aam    0xe4
  416686:	out    0xca,eax
  416688:	lds    eax,FWORD PTR [ebx+0x55]
  41668b:	sub    BYTE PTR [esi],ah
  41668d:	nop
  41668e:	sub    eax,0x39e0df0f
  416693:	mov    eax,ds:0x2ef6d0a1
  416698:	sbb    eax,0xefbf2dd3
  41669d:	std    
  41669e:	dec    eax
  41669f:	mov    ebx,0x3c9542c5
  4166a4:	jmp    0x4d70:0x7dc30b07
  4166ab:	sbb    DWORD PTR [eax-0x3],ebx
  4166ae:	(bad)  
  4166af:	imul   eax,DWORD PTR [edx+0x92ec12e],0x85428272
  4166b9:	and    dh,BYTE PTR [ebx]
  4166bb:	cwde   
  4166bc:	sbb    al,0x34
  4166be:	cmp    edx,DWORD PTR [edi+ebp*4-0x1c2eb0c]
  4166c5:	jne    0x416733
  4166c7:	inc    ebp
  4166c8:	push   0xfffffff6
  4166ca:	call   DWORD PTR [esi+eax*1+0x2b]
  4166ce:	mov    DWORD PTR [eax],edi
  4166d0:	xchg   ecx,eax
  4166d1:	out    0xf,al
  4166d3:	mov    esi,DWORD PTR [eax+0x78]
  4166d6:	nop
  4166d7:	or     al,0xfa
  4166d9:	mov    dl,0x42
  4166db:	pop    ds
  4166dc:	push   es
  4166dd:	in     eax,0x48
  4166df:	jno    0x416707
  4166e1:	pop    edi
  4166e2:	pop    ecx
  4166e3:	mov    edi,0xde379fe5
  4166e8:	sub    al,0x39
  4166eb:	inc    eax
  4166ec:	inc    ebx
  4166ed:	push   es
  4166ee:	mov    edi,0x313983f8
  4166f3:	inc    esp
  4166f4:	mov    fs,WORD PTR [eax]
  4166f6:	mov    bh,0x16
  4166f8:	add    BYTE PTR ds:0x43132f2b,bh
  4166fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166ff:	lods   eax,DWORD PTR ds:[esi]
  416700:	sbb    ah,BYTE PTR [edx+0x54f02c68]
  416706:	icebp  
  416707:	mov    dl,BYTE PTR [esi+0x2a7142cf]
  41670d:	out    0xdb,al
  41670f:	mov    esp,0xfac6e683
  416714:	cmp    al,0x79
  416716:	push   edi
  416717:	es arpl sp,cx
  41671a:	pop    edx
  41671b:	icebp  
  41671c:	dec    ebx
  41671d:	inc    ecx
  41671e:	xlat   BYTE PTR ds:[ebx]
  41671f:	in     eax,0x1d
  416721:	ja     0x4166e4
  416723:	aad    0x8f
  416725:	adc    DWORD PTR [ecx-0x3e0705b],ecx
  41672b:	sti    
  41672c:	out    0x90,al
  41672e:	shl    DWORD PTR [eax-0x1addb544],1
  416734:	pop    ds
  416735:	push   ds
  416736:	test   BYTE PTR [esi-0x58],ch
  416739:	jmp    0x34b9066b
  41673e:	fucomi st,st(2)
  416740:	loopne 0x4166f9
  416742:	mov    eax,0xe1341af8
  416747:	dec    ecx
  416748:	cld    
  416749:	inc    ecx
  41674a:	mov    dh,0xa7
  41674c:	call   0x4c98:0x4e76774a
  416753:	sub    esi,DWORD PTR [edx+0x68403d7c]
  416759:	sub    al,0xcb
  41675b:	aaa    
  41675c:	test   DWORD PTR [edx],edi
  41675e:	inc    ebp
  41675f:	ret    0x8df5
  416762:	jle    0x416721
  416764:	sub    eax,edi
  416766:	xchg   edx,eax
  416767:	jo     0x416703
  416769:	mov    bl,0x6f
  41676b:	lds    edi,FWORD PTR [ecx]
  41676d:	hlt    
  41676e:	xor    al,0x63
  416770:	push   esp
  416771:	adc    eax,0xc15084e3
  416776:	enter  0xd264,0x4f
  41677a:	ret    
  41677b:	dec    ecx
  41677c:	jae    0x41671d
  41677e:	leave  
  41677f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416780:	cmp    DWORD PTR [edi+edx*4],edi
  416783:	xchg   ebx,eax
  416784:	inc    esp
  416785:	enter  0xb69c,0x25
  416789:	mov    bh,0x1e
  41678b:	inc    esi
  41678c:	push   cs
  41678d:	arpl   sp,ax
  41678f:	and    BYTE PTR [edx],dl
  416791:	xchg   BYTE PTR [esi],dl
  416793:	jl     0x4167f8
  416795:	or     al,0x90
  416797:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416798:	inc    bp
  41679a:	sbb    eax,0xeb5d8185
  41679f:	imul   esi,DWORD PTR [ebx+0x1d4ce4bf],0x56
  4167a6:	push   ebx
  4167a7:	or     al,0x71
  4167a9:	cli    
  4167aa:	fdivr  QWORD PTR [ebx-0x4b]
  4167ad:	ja     0x416773
  4167af:	push   0xffffffcd
  4167b1:	xchg   dl,cl
  4167b3:	pushf  
  4167b4:	pop    ds
  4167b5:	adc    ah,BYTE PTR [eax+0x46ae15da]
  4167bb:	das    
  4167bc:	ret    
  4167bd:	out    0x94,al
  4167bf:	dec    edx
  4167c0:	sbb    ebp,ebp
  4167c2:	ins    DWORD PTR es:[edi],dx
  4167c3:	mov    al,0x49
  4167c5:	ins    DWORD PTR es:[edi],dx
  4167c6:	sbb    eax,0xa74d878f
  4167cb:	inc    esi
  4167cc:	jle    0x416799
  4167ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167cf:	dec    edi
  4167d0:	sbb    DWORD PTR [eax],edi
  4167d2:	(bad)  
  4167d3:	aas    
  4167d4:	mov    ds:0x406caa48,al
  4167d9:	jg     0x416839
  4167db:	sbb    BYTE PTR [eax-0x58],bh
  4167de:	and    BYTE PTR [edx+0x30],dl
  4167e1:	fsub   DWORD PTR [ebp+0x72fd124]
  4167e7:	and    BYTE PTR [edi-0x3b5cafd3],al
  4167ed:	lahf   
  4167ee:	or     eax,0x8b11e234
  4167f3:	or     dh,BYTE PTR [esi+0x33a59404]
  4167f9:	out    dx,eax
  4167fa:	test   al,0xc8
  4167fc:	adc    dl,bh
  4167fe:	enter  0xb569,0xa0
  416802:	je     0x416867
  416804:	pop    ecx
  416805:	pop    ebx
  416806:	cmp    ah,0x6f
  416809:	fcomi  st,st(7)
  41680b:	pusha  
  41680c:	jno    0x416828
  41680e:	icebp  
  41680f:	mov    dl,0xe3
  416811:	ss xor eax,0xd865aafd
  416817:	lahf   
  416818:	addr16 xchg ah,al
  41681b:	je     0x4167bf
  41681d:	mov    ch,0xc7
  41681f:	xchg   esi,eax
  416820:	(bad)  
  416822:	and    eax,0xa12f5b78
  416827:	fsub   QWORD PTR ds:0x937e33c9
  41682d:	leave  
  41682e:	fnstcw WORD PTR [ebp+eax*1-0x52]
  416832:	pop    ecx
  416833:	aam    0xef
  416835:	mov    ecx,0x5d3a505c
  41683a:	mov    al,ds:0xce611f38
  41683f:	ret    
  416840:	loope  0x41687b
  416842:	xchg   ebx,eax
  416843:	jge    0x41686e
  416845:	call   0xffa1:0x98156dcb
  41684c:	pop    ds
  41684d:	test   eax,0xc0927959
  416852:	inc    edx
  416853:	ficom  WORD PTR [ebx+0x6a]
  416856:	mov    BYTE PTR [edx+0x54],ah
  416859:	mov    ah,0x13
  41685b:	adc    eax,0xde3e4bb5
  416860:	aam    0xb1
  416862:	les    ecx,FWORD PTR [ecx+ecx*2]
  416865:	lea    esp,[ecx+0x67c21867]
  41686b:	rol    BYTE PTR [ecx],1
  41686d:	or     eax,0xf1d83aa0
  416872:	out    dx,al
  416873:	add    BYTE PTR [edx],bh
  416875:	rcl    BYTE PTR [edx-0x7b61421e],cl
  41687b:	retf   
  41687c:	jmp    0x31e3a680
  416881:	add    al,bh
  416883:	xchg   ecx,eax
  416884:	fdivr  st,st(7)
  416886:	dec    edi
  416887:	mov    dh,BYTE PTR [ebx-0x7b]
  41688a:	sub    esp,ebp
  41688c:	in     eax,0x5c
  41688e:	or     esi,DWORD PTR ds:0x462691e4
  416894:	test   eax,0xc880c641
  416899:	add    BYTE PTR [ecx-0x375357bd],bh
  41689f:	inc    esi
  4168a0:	scas   eax,DWORD PTR es:[edi]
  4168a1:	fld    QWORD PTR [ebx-0x6d389927]
  4168a7:	xor    BYTE PTR [edx+0x77],cl
  4168aa:	retf   0xddb
  4168ad:	rcr    DWORD PTR [edx+0x36],cl
  4168b0:	push   ss
  4168b1:	adc    dh,BYTE PTR [esi+0x2c8c7e3]
  4168b7:	fistp  WORD PTR [edx]
  4168b9:	inc    esi
  4168ba:	push   es
  4168bb:	inc    ecx
  4168bc:	adc    DWORD PTR [edx-0x64eb1ca3],esp
  4168c2:	out    0x84,eax
  4168c4:	dec    esp
  4168c5:	push   esp
  4168c6:	ja     0x41684d
  4168c8:	rcl    DWORD PTR [eax],1
  4168ca:	dec    ecx
  4168cb:	sub    edi,DWORD PTR [edi-0x1a7de0ee]
  4168d1:	pop    eax
  4168d2:	xor    esp,esp
  4168d4:	mov    edx,0x6b60a3d4
  4168d9:	inc    esi
  4168da:	push   eax
  4168db:	outs   dx,BYTE PTR ds:[esi]
  4168dc:	mov    bh,0x22
  4168de:	out    0x7,eax
  4168e0:	loopne 0x41690a
  4168e2:	xchg   ecx,eax
  4168e3:	mov    dh,cl
  4168e5:	in     al,dx
  4168e6:	xchg   ecx,eax
  4168e7:	push   es
  4168e8:	(bad)  
  4168e9:	in     al,dx
  4168ea:	dec    esp
  4168eb:	rcl    BYTE PTR [edi-0x14],cl
  4168ee:	out    dx,al
  4168ef:	mov    edi,0x4a8ca641
  4168f4:	mov    ah,0xcf
  4168f6:	ficom  DWORD PTR [edi-0x69440b83]
  4168fc:	pop    edx
  4168fd:	sti    
  4168fe:	rol    BYTE PTR [ebp+0x4fb48ee9],0xe1
  416905:	jmp    0x41693a
  416907:	mov    edx,0x54546585
  41690c:	pusha  
  41690d:	jns    0x416940
  41690f:	lea    edx,cs:[edx-0x7f]
  416913:	push   es
  416914:	add    ch,dl
  416916:	rol    DWORD PTR [eax-0x2a],1
  416919:	sub    al,bh
  41691b:	sub    BYTE PTR [ebp-0x1d],al
  41691e:	dec    ecx
  41691f:	lock pop es
  416921:	push   es
  416922:	daa    
  416923:	sub    BYTE PTR [ebx],dh
  416925:	add    DWORD PTR [ebp+0x24e5382],esi
  41692b:	sti    
  41692c:	pushf  
  41692d:	xor    dl,al
  41692f:	sar    BYTE PTR [eax],cl
  416931:	data16 in al,0x9f
  416934:	xor    edi,DWORD PTR [eax]
  416936:	lea    ecx,[esi+0x3ebb2aff]
  41693c:	mov    al,0x14
  41693e:	mov    edx,0x7bb9c7e1
  416943:	(bad)  
  416945:	cmp    cl,bl
  416947:	dec    esp
  416948:	mov    BYTE PTR [edx+ebx*8],bh
  41694b:	jnp    0x41692e
  41694d:	mov    esi,0x1f6cfd4d
  416952:	jmp    0x81f2139c
  416957:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416958:	mov    ebp,0xffe34ae2
  41695d:	sub    BYTE PTR [ecx],bh
  41695f:	sti    
  416960:	(bad)  
  416962:	in     al,0xa7
  416964:	xor    eax,eax
  416966:	xor    DWORD PTR [ebx-0x58],ebx
  416969:	sub    BYTE PTR [esi+0x28],dh
  41696c:	mov    ds:0xacc68ad8,al
  416971:	pop    ecx
  416972:	arpl   WORD PTR ds:0x92e49c1e,sp
  416978:	outs   dx,BYTE PTR ds:[esi]
  416979:	jmp    0x16a8:0xe1a4178c
  416980:	pop    eax
  416982:	add    ch,0x2c
  416985:	popa   
  416986:	fs daa 
  416988:	push   esi
  416989:	mov    al,ds:0x3beea1f3
  41698e:	push   ebp
  41698f:	lea    ecx,[esi+0x9]
  416992:	addr16 out dx,eax
  416994:	sbb    BYTE PTR [eax],dl
  416996:	jmp    0x4169d9
  416998:	dec    edx
  416999:	or     eax,0xfc39a198
  41699e:	mov    dh,0xd
  4169a0:	fisttp DWORD PTR [esi]
  4169a2:	push   esp
  4169a3:	ins    DWORD PTR es:[edi],dx
  4169a4:	jge    0x4169ca
  4169a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169a7:	pop    ecx
  4169a8:	or     eax,0x9fed4b30
  4169ad:	xchg   DWORD PTR [esi],ecx
  4169af:	stc    
  4169b0:	(bad)  
  4169b2:	lahf   
  4169b3:	lods   eax,DWORD PTR ds:[esi]
  4169b4:	jmp    0xf7d93c13
  4169b9:	jae    0x416a05
  4169bb:	jnp    0x41694f
  4169bd:	das    
  4169be:	jbe    0x4169b5
  4169c0:	adc    BYTE PTR [ecx],0x1d
  4169c3:	imul   ebp,DWORD PTR [esp+ebx*2+0x40e224ff],0x70
  4169cb:	or     edi,DWORD PTR [ebp+0x680f0179]
  4169d1:	mov    al,ds:0x6898c303
  4169d6:	cmp    eax,DWORD PTR [eax+esi*8-0x79]
  4169da:	(bad)  
  4169db:	sub    BYTE PTR [edx-0x232a2c8],0x73
  4169e2:	sti    
  4169e3:	popa   
  4169e4:	out    0x13,eax
  4169e6:	or     DWORD PTR [esi-0x51],esi
  4169e9:	mov    esp,0xb4cfc3cc
  4169ee:	cwde   
  4169ef:	jl     0x4169b7
  4169f1:	dec    esp
  4169f2:	sub    DWORD PTR [ebx-0x21],ecx
  4169f5:	jg     0x416a68
  4169f7:	stos   DWORD PTR es:[edi],eax
  4169f8:	jp     0x4169bf
  4169fa:	xor    DWORD PTR [ecx],edx
  4169fc:	xchg   ebp,eax
  4169fd:	clc    
  4169fe:	and    dl,dl
  416a00:	adc    BYTE PTR [ebx+0x28],al
  416a03:	mov    dl,0x34
  416a05:	and    cl,BYTE PTR [ecx-0x5395e57]
  416a0b:	clc    
  416a0c:	(bad)
  416a0f:	(bad)  
  416a10:	push   ds
  416a11:	std    
  416a12:	out    dx,eax
  416a13:	ins    BYTE PTR es:[edi],dx
  416a14:	js     0x4169c3
  416a16:	jle    0x4169b5
  416a18:	in     al,dx
  416a19:	fcmovb st,st(7)
  416a1b:	ror    esi,0xa7
  416a1e:	sti    
  416a1f:	pop    es
  416a20:	mov    eax,ds:0x5977b358
  416a25:	fwait
  416a26:	push   0xcf72d8ca
  416a2b:	push   edx
  416a2c:	jge    0x4169b0
  416a2e:	dec    edx
  416a2f:	jno    0x416aa4
  416a31:	adc    al,0x62
  416a33:	xchg   ebp,eax
  416a34:	xor    ch,BYTE PTR [esi+esi*4-0x4edf2b5a]
  416a3b:	xor    DWORD PTR [eax+0x1192210e],edx
  416a41:	cmp    BYTE PTR [esi+0x3d8dd4f0],0xaf
  416a48:	jmp    0x1168a573
  416a4d:	dec    ebx
  416a4e:	aad    0xf0
  416a50:	bound  ecx,QWORD PTR [edi+0x73]
  416a53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a54:	mov    dh,0x66
  416a56:	hlt    
  416a57:	mov    bh,0x92
  416a59:	dec    edx
  416a5a:	sbb    BYTE PTR [ebp-0x7b],dh
  416a5d:	jo     0x416aa0
  416a5f:	jecxz  0x416a23
  416a61:	neg    edi
  416a63:	adc    DWORD PTR [ecx+0x25c45195],edx
  416a69:	mov    edi,0xfadde026
  416a6e:	or     bh,dl
  416a70:	sbb    DWORD PTR [ebx-0x64],0xb63c39fe
  416a77:	test   bh,cl
  416a79:	clc    
  416a7a:	neg    DWORD PTR [ebx-0x3]
  416a7d:	push   ds
  416a7e:	mov    DWORD PTR [ebx+ebx*8],ebx
  416a81:	lahf   
  416a82:	inc    esi
  416a83:	lds    edi,FWORD PTR [ebx-0x3206165e]
  416a89:	fst    DWORD PTR [edi-0x6e]
  416a8c:	xor    esp,edx
  416a8e:	ins    DWORD PTR es:[edi],dx
  416a8f:	sub    DWORD PTR [edi+0x6],ebp
  416a92:	int3   
  416a93:	sbb    eax,0x98fbc0da
  416a98:	push   ebp
  416a99:	repz and ebp,esi
  416a9c:	lods   eax,DWORD PTR ds:[esi]
  416a9d:	cmp    edi,DWORD PTR [esi-0x5454019b]
  416aa3:	xchg   ebp,eax
  416aa4:	cwde   
  416aa5:	or     bh,al
  416aa7:	inc    ebp
  416aa8:	out    0x1d,al
  416aaa:	ret    0x33f6
  416aad:	jno    0x416a3f
  416aaf:	pop    edi
  416ab0:	mov    esp,0x8cf0f423
  416ab5:	mov    edx,0x8b916a61
  416aba:	sbb    dl,BYTE PTR ds:0xb1182873
  416ac0:	or     ebx,DWORD PTR [eax]
  416ac2:	dec    edi
  416ac3:	ins    BYTE PTR es:[edi],dx
  416ac4:	add    al,0x43
  416ac6:	adc    eax,0x999e415b
  416acb:	lock test eax,edx
  416ace:	jmp    0xd182:0xc36739f4
  416ad5:	push   es
  416ad6:	shr    esi,cl
  416ad8:	mov    bh,0xd2
  416ada:	mov    cl,0xc8
  416adc:	scas   al,BYTE PTR es:[edi]
  416add:	rcl    BYTE PTR [esi-0x5],cl
  416ae0:	shl    BYTE PTR [edi],0x72
  416ae3:	add    al,0x97
  416ae5:	mov    bl,0x4c
  416ae7:	int    0x61
  416ae9:	xor    dh,BYTE PTR [eax-0x171b2cb4]
  416aef:	(bad)  
  416af0:	mov    BYTE PTR [ecx],dl
  416af2:	mov    esp,0xb4a56ee8
  416af7:	jg     0x416a89
  416af9:	mov    dh,0x8f
  416afb:	mov    ch,0x20
  416afd:	xlat   BYTE PTR ds:[ebx]
  416afe:	bound  eax,QWORD PTR [esi+ebp*2]
  416b01:	call   0xf733:0x65d11161
  416b08:	clc    
  416b09:	(bad)  
  416b0a:	aad    0xe9
  416b0c:	fldenv [esi+0x618acfa2]
  416b12:	(bad)  
  416b13:	adc    al,0xe1
  416b15:	sub    BYTE PTR [edx-0x40e8a03d],ah
  416b1b:	out    dx,al
  416b1c:	int3   
  416b1d:	mov    edx,0x4cdeaec2
  416b22:	mov    cl,0xc0
  416b24:	aam    0x92
  416b26:	icebp  
  416b27:	add    bh,BYTE PTR [esi-0x5c5459ea]
  416b2d:	pop    ebx
  416b2e:	push   esi
  416b2f:	mov    ecx,0xd36aa739
  416b34:	adc    eax,0x16905557
  416b39:	xlat   BYTE PTR ds:[ebx]
  416b3a:	test   esp,0xa13397b6
  416b40:	imul   ebp,edi,0x1fa1e76
  416b46:	adc    DWORD PTR [edi],edi
  416b48:	faddp  st(5),st
  416b4a:	retf   
  416b4b:	hlt    
  416b4c:	adc    DWORD PTR ss:[edi+0x54],esi
  416b50:	aam    0xe1
  416b52:	ds jb  0x416af5
  416b55:	imul   edx,DWORD PTR [esi],0x437b6dd
  416b5b:	iret   
  416b5c:	add    ebp,DWORD PTR [edx-0x6e]
  416b5f:	jecxz  0x416ba8
  416b61:	jp     0x416b44
  416b63:	pop    edi
  416b64:	ret    0x897e
  416b67:	loope  0x416b62
  416b69:	mov    bl,0xd7
  416b6b:	test   eax,0xbb928f30
  416b70:	lea    esp,ds:0x525828a6
  416b76:	xchg   DWORD PTR [ecx],ebx
  416b78:	fisttp DWORD PTR [ebx+0x23438a2a]
  416b7e:	(bad)  
  416b7f:	mov    eax,ds:0xbfec5356
  416b84:	ins    BYTE PTR es:[edi],dx
  416b85:	dec    edx
  416b86:	or     cl,BYTE PTR [ebx]
  416b88:	pop    ecx
  416b89:	add    al,0xfc
  416b8b:	mov    ah,dh
  416b8d:	push   esp
  416b8e:	ja     0x416bfb
  416b90:	stos   DWORD PTR es:[edi],eax
  416b91:	inc    edx
  416b92:	jmp    0x416bef
  416b94:	push   ds
  416b95:	ins    BYTE PTR es:[edi],dx
  416b96:	arpl   ax,cx
  416b98:	les    edi,FWORD PTR [esi+0x1028c6e9]
  416b9e:	arpl   di,dx
  416ba0:	xlat   BYTE PTR ds:[ebx]
  416ba1:	mov    ebx,0x69e26b05
  416ba6:	inc    ebp
  416ba7:	cs jp  0x416b6e
  416baa:	repz push ebx
  416bac:	xchg   ecx,eax
  416bad:	jp     0x416c1b
  416baf:	test   dh,ah
  416bb1:	ja     0x416c11
  416bb3:	xchg   DWORD PTR [edx],ecx
  416bb5:	popa   
  416bb6:	mov    dl,0x1c
  416bb8:	and    dl,BYTE PTR [edx+0x39b713de]
  416bbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bbf:	mov    dl,BYTE PTR [edi-0x291e0c6f]
  416bc5:	mov    ecx,0x9444d298
  416bca:	pusha  
  416bcb:	sub    al,bh
  416bcd:	dec    eax
  416bce:	lea    ebp,[ebp-0x22a032e3]
  416bd4:	mov    ebx,esi
  416bd6:	add    ebx,eax
  416bd8:	inc    esp
  416bd9:	shl    BYTE PTR [ecx-0x27bc727a],cl
  416bdf:	or     eax,ecx
  416be1:	retf   0x79d9
  416be4:	inc    ecx
  416be5:	out    dx,al
  416be6:	dec    ebx
  416be7:	sbb    ch,BYTE PTR [ebx+ecx*8+0x10a32d7a]
  416bee:	lds    ecx,FWORD PTR ds:[ebp+edi*2-0x12af9f58]
  416bf6:	sub    edi,eax
  416bf8:	fimul  DWORD PTR [ebp-0x1da9589d]
  416bfe:	cmp    al,0xa7
  416c00:	pushf  
  416c01:	ds xchg esp,eax
  416c03:	ss nop
  416c05:	cmp    al,0x18
  416c07:	push   ecx
  416c08:	repz (bad) 
  416c0a:	jl     0x416c69
  416c0c:	adc    DWORD PTR [edx],0xfa953a40
  416c12:	cmp    al,BYTE PTR ds:0xd77355b9
  416c18:	and    DWORD PTR [ecx-0x1],0x7210ac1c
  416c1f:	popa   
  416c20:	xor    eax,0xee9bfced
  416c25:	shl    ebp,0x50
  416c28:	and    DWORD PTR [eax],edi
  416c2a:	inc    eax
  416c2b:	jbe    0x416bd7
  416c2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c2e:	fwait
  416c2f:	mov    DWORD PTR [edx+0x36e439a7],eax
  416c35:	mov    cl,0x3a
  416c37:	or     ah,dl
  416c39:	add    eax,0x2d982b6
  416c3e:	clc    
  416c3f:	and    BYTE PTR [edx+edx*8+0x2e6b2adb],dh
  416c46:	mov    bl,0xc8
  416c48:	(bad)  
  416c49:	jbe    0x416c03
  416c4b:	stos   DWORD PTR es:[edi],eax
  416c4c:	ins    DWORD PTR es:[edi],dx
  416c4d:	dec    ebx
  416c4e:	es imul eax,esi,0xda87df4e
  416c55:	fsubr  st(0),st
  416c57:	(bad)  
  416c58:	cld    
  416c59:	xchg   edx,eax
  416c5a:	pushf  
  416c5b:	jmp    0x416be7
  416c5d:	or     DWORD PTR [eax+esi*4+0x3a],ebp
  416c61:	(bad)  
  416c62:	int    0x49
  416c64:	fmul   DWORD PTR [ebx-0x5cdcec25]
  416c6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c6b:	dec    edi
  416c6c:	pop    ds
  416c6d:	sbb    eax,0x6b6b6fc8
  416c72:	popa   
  416c73:	inc    ebx
  416c74:	dec    eax
  416c75:	cmp    al,0xb4
  416c77:	(bad)  
  416c78:	aam    0x61
  416c7a:	mov    edx,0x7d6af282
  416c7f:	nop
  416c80:	xchg   al,bh
  416c82:	dec    edx
  416c83:	out    0xe9,al
  416c85:	push   cs
  416c86:	mov    ds:0xd452153c,al
  416c8b:	dec    ebx
  416c8c:	cwde   
  416c8d:	aad    0x53
  416c8f:	in     eax,dx
  416c90:	mov    ebx,DWORD PTR [ebp-0x8]
  416c93:	xor    edx,eax
  416c95:	xor    ebx,eax
  416c97:	sub    edx,ebx
  416c99:	sub    edx,esi
  416c9b:	xor    edx,eax
  416c9d:	mov    DWORD PTR [ebp+0x8],edx
  416ca0:	mov    edx,DWORD PTR [ebp+0x8]
  416ca3:	mov    ebx,DWORD PTR [ebp-0x58]
  416ca6:	add    edx,0x5708e2
  416cac:	imul   edx,ebx
  416caf:	mov    DWORD PTR [ebp-0x58],edx
  416cb2:	mov    edx,DWORD PTR [ebp+0x8]
  416cb5:	mov    ebx,DWORD PTR [ebp-0x54]
  416cb8:	add    edx,0x64f880
  416cbe:	or     edx,ebx
  416cc0:	mov    DWORD PTR [ebp-0x54],edx
  416cc3:	mov    edx,DWORD PTR [ebp+0x8]
  416cc6:	mov    ebx,DWORD PTR [ebp-0x50]
  416cc9:	add    edx,ecx
  416ccb:	xor    edx,ebx
  416ccd:	mov    DWORD PTR [ebp-0x50],edx
  416cd0:	mov    edx,DWORD PTR [ebp+0x8]
  416cd3:	mov    ebx,DWORD PTR [ebp-0x4c]
  416cd6:	add    edx,edi
  416cd8:	and    edx,ebx
  416cda:	mov    DWORD PTR [ebp-0x4c],edx
  416cdd:	mov    edx,DWORD PTR [ebp+0x8]
  416ce0:	mov    ebx,DWORD PTR [ebp-0x48]
  416ce3:	lea    edx,[ebx+edx*1+0x241fcdf]
  416cea:	mov    DWORD PTR [ebp-0x48],edx
  416ced:	mov    edx,DWORD PTR [ebp+0x8]
  416cf0:	mov    ebx,0xfa5e1524
  416cf5:	sub    ebx,edx
  416cf7:	add    ebx,DWORD PTR [ebp-0x44]
  416cfa:	mov    DWORD PTR [ebp-0x44],ebx
  416cfd:	mov    edx,DWORD PTR [ebp+0x8]
  416d00:	xor    edx,eax
  416d02:	add    edx,esi
  416d04:	jne    0x41492d
  416d0a:	jmp    0x416d97
  416d0f:	mov    edx,DWORD PTR [ebp-0x14]
  416d12:	mov    DWORD PTR [ebp+0x8],edx
  416d15:	jmp    0x416d8a
  416d1a:	mov    edx,DWORD PTR [ebp+0x8]
  416d1d:	mov    ebx,DWORD PTR [ebp-0x8]
  416d20:	xor    edx,eax
  416d22:	xor    ebx,eax
  416d24:	sub    edx,ebx
  416d26:	sub    edx,esi
  416d28:	xor    edx,eax
  416d2a:	mov    DWORD PTR [ebp+0x8],edx
  416d2d:	mov    edx,DWORD PTR [ebp+0x8]
  416d30:	mov    ebx,DWORD PTR [ebp-0x58]
  416d33:	add    edx,0x5708e2
  416d39:	imul   edx,ebx
  416d3c:	mov    DWORD PTR [ebp-0x58],edx
  416d3f:	mov    edx,DWORD PTR [ebp+0x8]
  416d42:	mov    ebx,DWORD PTR [ebp-0x54]
  416d45:	add    edx,0x64f880
  416d4b:	or     edx,ebx
  416d4d:	mov    DWORD PTR [ebp-0x54],edx
  416d50:	mov    edx,DWORD PTR [ebp+0x8]
  416d53:	mov    ebx,DWORD PTR [ebp-0x50]
  416d56:	add    edx,ecx
  416d58:	xor    edx,ebx
  416d5a:	mov    DWORD PTR [ebp-0x50],edx
  416d5d:	mov    edx,DWORD PTR [ebp+0x8]
  416d60:	mov    ebx,DWORD PTR [ebp-0x4c]
  416d63:	add    edx,edi
  416d65:	and    edx,ebx
  416d67:	mov    DWORD PTR [ebp-0x4c],edx
  416d6a:	mov    edx,DWORD PTR [ebp+0x8]
  416d6d:	mov    ebx,DWORD PTR [ebp-0x48]
  416d70:	lea    edx,[ebx+edx*1+0x241fcdf]
  416d77:	mov    DWORD PTR [ebp-0x48],edx
  416d7a:	mov    edx,DWORD PTR [ebp+0x8]
  416d7d:	mov    ebx,0xfa5e1524
  416d82:	sub    ebx,edx
  416d84:	add    ebx,DWORD PTR [ebp-0x44]
  416d87:	mov    DWORD PTR [ebp-0x44],ebx
  416d8a:	mov    edx,DWORD PTR [ebp+0x8]
  416d8d:	xor    edx,eax
  416d8f:	add    edx,esi
  416d91:	jne    0x416d1a
  416d97:	mov    edx,DWORD PTR [ebp-0x14]
  416d9a:	mov    DWORD PTR [ebp+0x8],edx
  416d9d:	jmp    0x419172
  416da2:	mov    edx,DWORD PTR [ebp+0x8]
  416da5:	mov    ebx,DWORD PTR [ebp-0x8]
  416da8:	xor    edx,eax
  416daa:	xor    ebx,eax
  416dac:	sub    edx,ebx
  416dae:	sub    edx,esi
  416db0:	xor    edx,eax
  416db2:	mov    DWORD PTR [ebp+0x8],edx
  416db5:	mov    edx,DWORD PTR [ebp+0x8]
  416db8:	mov    ebx,DWORD PTR [ebp-0x58]
  416dbb:	add    edx,0x5708e2
  416dc1:	imul   edx,ebx
  416dc4:	mov    DWORD PTR [ebp-0x58],edx
  416dc7:	mov    edx,DWORD PTR [ebp+0x8]
  416dca:	mov    ebx,DWORD PTR [ebp-0x54]
  416dcd:	add    edx,0x64f880
  416dd3:	or     edx,ebx
  416dd5:	mov    DWORD PTR [ebp-0x54],edx
  416dd8:	mov    edx,DWORD PTR [ebp+0x8]
  416ddb:	mov    ebx,DWORD PTR [ebp-0x50]
  416dde:	add    edx,ecx
  416de0:	xor    edx,ebx
  416de2:	jmp    0x419142
  416de7:	adc    eax,0xa46b3bce
  416dec:	xchg   BYTE PTR ds:0xd7812f8a,al
  416df2:	add    BYTE PTR [eax+0x55],bh
  416df5:	push   ds
  416df6:	xor    dh,BYTE PTR [ebp+eax*2-0x80]
  416dfa:	cmp    DWORD PTR [esi],0x5e
  416dfd:	add    DWORD PTR [ebx-0x73eec308],0x70
  416e04:	js     0x416e71
  416e06:	mov    ds,WORD PTR [eax+0x6e]
  416e09:	xchg   edx,eax
  416e0a:	call   0x1c8c7d8c
  416e0f:	es call 0x69b6:0x2e6add98
  416e17:	sbb    dl,BYTE PTR [esi+0x284becc2]
  416e1d:	push   edx
  416e1e:	and    ebx,DWORD PTR [ebx-0x1cc98518]
  416e24:	jnp    0x416e1b
  416e26:	fwait
  416e27:	std    
  416e28:	xchg   DWORD PTR [ebx],ebx
  416e2a:	sub    esi,DWORD PTR [edi-0x785c1460]
  416e30:	cmp    esi,DWORD PTR [ebx]
  416e32:	rcl    DWORD PTR [esi+0x13],cl
  416e35:	push   0x8910aa4e
  416e3a:	xchg   DWORD PTR [edx],ecx
  416e3c:	push   edx
  416e3d:	pop    edi
  416e3e:	or     al,0x6d
  416e40:	xchg   esp,eax
  416e41:	jo     0x416eac
  416e43:	pop    edx
  416e44:	inc    edx
  416e45:	ret    0xfa0a
  416e48:	out    0x81,eax
  416e4a:	lea    edi,[edx]
  416e4c:	jge    0x416de3
  416e4e:	dec    esi
  416e4f:	pop    ebp
  416e50:	repz mov ecx,0x268f054b
  416e56:	pop    edi
  416e57:	adc    al,0xee
  416e59:	mov    bh,0xcc
  416e5b:	call   0xdbe4:0x399ce821
  416e62:	ins    DWORD PTR es:[edi],dx
  416e63:	inc    esi
  416e64:	sub    edi,DWORD PTR [edi+0x6]
  416e67:	fidiv  DWORD PTR [edx-0x6820f3d4]
  416e6d:	cmp    ecx,DWORD PTR [ebp+0x50f0abc8]
  416e73:	stc    
  416e74:	inc    edx
  416e75:	xor    DWORD PTR [ebp-0x15c4c083],ebx
  416e7b:	cmp    ch,0x1b
  416e7e:	or     al,0xde
  416e80:	pop    ds
  416e81:	loopne 0x416edc
  416e83:	push   esp
  416e84:	sbb    BYTE PTR [esi-0x74],dh
  416e87:	inc    DWORD PTR [edx+esi*8-0x77]
  416e8b:	(bad)  
  416e8c:	test   al,al
  416e8e:	xor    bl,cl
  416e90:	pushf  
  416e91:	pop    es
  416e92:	xchg   esi,eax
  416e93:	rcl    DWORD PTR [ebx-0x5473d0ca],1
  416e99:	imul   ebp,edx,0x31
  416e9c:	pop    ebp
  416e9d:	div    dl
  416e9f:	dec    ebx
  416ea0:	(bad)  
  416ea1:	retf   0x7e76
  416ea4:	test   eax,0xa5453b
  416ea9:	hlt    
  416eaa:	jns    0x416e2c
  416eac:	inc    edi
  416ead:	sahf   
  416eae:	hlt    
  416eaf:	lods   al,BYTE PTR ds:[esi]
  416eb0:	mov    bh,BYTE PTR [edx+eiz*2-0xd8c8b81]
  416eb7:	das    
  416eb8:	jp     0x416f02
  416eba:	pusha  
  416ebb:	sub    al,0x76
  416ebd:	lea    ebx,[ecx]
  416ebf:	mov    dh,0xfb
  416ec1:	outs   dx,BYTE PTR ds:[esi]
  416ec2:	push   edx
  416ec3:	in     al,dx
  416ec4:	ins    BYTE PTR es:[edi],dx
  416ec5:	push   edx
  416ec6:	scas   eax,DWORD PTR es:[edi]
  416ec7:	hlt    
  416ec8:	sbb    eax,0x6dc73b35
  416ecd:	addr16 xor bl,ah
  416ed0:	mov    esp,0x3db4b566
  416ed5:	push   edx
  416ed6:	sbb    eax,0x848eb477
  416edb:	sbb    cl,BYTE PTR [ebx+0x6a8cb62a]
  416ee1:	call   0xc5ddc701
  416ee6:	adc    al,0xa2
  416ee8:	push   ebp
  416ee9:	int    0x88
  416eeb:	xor    al,0x3a
  416eed:	int    0x6d
  416eef:	jb     0x416ef6
  416ef1:	push   0x20
  416ef3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ef4:	pop    esi
  416ef5:	mov    WORD PTR [ebx-0x4a],ds
  416ef8:	mov    cl,0x9a
  416efa:	jp     0x416f5e
  416efc:	(bad)  
  416efd:	cld    
  416efe:	pushf  
  416eff:	add    edx,DWORD PTR [edx+0x1f]
  416f02:	out    0xa,eax
  416f04:	pop    ss
  416f05:	jo     0x416f47
  416f07:	xor    cl,ah
  416f09:	adc    dl,BYTE PTR [edx]
  416f0b:	add    DWORD PTR [ecx-0x44],esi
  416f0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f0f:	mov    dl,0xae
  416f11:	mov    ah,0xe0
  416f13:	inc    ecx
  416f14:	sahf   
  416f15:	icebp  
  416f16:	mov    al,0x11
  416f18:	std    
  416f19:	mov    ch,0xa
  416f1b:	fbstp  TBYTE PTR [edi+0x5fe464cb]
  416f21:	in     eax,dx
  416f22:	dec    ebx
  416f23:	out    0x5,al
  416f25:	and    DWORD PTR [ebx+esi*4],esi
  416f28:	sbb    al,0x84
  416f2a:	ins    BYTE PTR es:[edi],dx
  416f2b:	push   esi
  416f2c:	jne    0x416ed6
  416f2e:	cmp    dh,0xe1
  416f31:	fdiv   DWORD PTR [ebp+0x57]
  416f34:	mov    ebx,0xbf410aeb
  416f39:	test   edx,0xf3313ac1
  416f3f:	stos   DWORD PTR es:[edi],eax
  416f40:	adc    bh,BYTE PTR [edi+0x30]
  416f43:	lock test BYTE PTR [eax+edi*2-0x6],al
  416f48:	cs call 0x2e98a77e
  416f4e:	push   0xd8efd578
  416f53:	pop    ds
  416f54:	nop
  416f55:	mov    eax,0xf351bd7e
  416f5a:	ret    
  416f5b:	dec    edx
  416f5c:	loope  0x416f1b
  416f5e:	out    dx,al
  416f5f:	es jmp 0xdc69:0xbac9c10c
  416f67:	call   0xad7:0x214d8e8b
  416f6e:	xchg   ebp,eax
  416f6f:	mov    ebx,0xc4573fb6
  416f74:	popf   
  416f75:	push   edx
  416f76:	xchg   ecx,eax
  416f77:	sub    DWORD PTR [eax+0x7ea16e29],esp
  416f7d:	fld    DWORD PTR [ebx-0x62]
  416f80:	xor    DWORD PTR [ecx-0x5e],edx
  416f83:	gs dec ebp
  416f85:	dec    ecx
  416f86:	mov    esi,0xb84130cd
  416f8b:	sbb    BYTE PTR [eax+edi*1-0x49],bl
  416f8f:	test   BYTE PTR cs:[ebx],0x9d
  416f93:	sahf   
  416f94:	fild   DWORD PTR ds:0x381f0f5c
  416f9a:	shl    BYTE PTR [ecx],cl
  416f9c:	jl     0x417001
  416f9e:	mov    ch,0xdc
  416fa0:	frstor [ebp-0x54f2638c]
  416fa6:	xor    esi,DWORD PTR [eax+0x113b4bfb]
  416fac:	xchg   BYTE PTR [ecx],bl
  416fae:	lock in al,dx
  416fb0:	or     BYTE PTR ds:0xfe596097,bl
  416fb6:	fs imul eax,esp,0xb5a04f71
  416fbd:	mov    esi,DWORD PTR [edx+0x547da9b4]
  416fc3:	or     eax,0x81e7fffb
  416fc8:	dec    eax
  416fc9:	adc    BYTE PTR [ebx],0x5a
  416fcc:	adc    dh,BYTE PTR [ebp-0x1a]
  416fcf:	adc    BYTE PTR [esi+0x4f],0xba
  416fd3:	or     ch,BYTE PTR [ebx]
  416fd5:	ret    
  416fd6:	idiv   BYTE PTR [esp+edx*4+0x7377b77]
  416fdd:	push   0xccb425dd
  416fe2:	and    edi,edi
  416fe4:	mov    BYTE PTR [ebx+eiz*4-0x38b57ae1],bl
  416feb:	data16 jae 0x416fbe
  416fee:	mov    esp,0x771aa704
  416ff3:	xchg   edx,eax
  416ff4:	inc    edi
  416ff5:	gs pop edx
  416ff7:	out    dx,al
  416ff8:	mov    ecx,0xf2bbf2a8
  416ffd:	cmp    cl,BYTE PTR [ecx]
  416fff:	cwde   
  417000:	cdq    
  417001:	das    
  417002:	jns    0x417048
  417004:	cmp    al,0x2e
  417006:	mov    BYTE PTR [eax-0x32d877ba],cl
  41700c:	loopne 0x416fb4
  41700e:	inc    edx
  41700f:	imul   DWORD PTR [ecx]
  417011:	dec    edx
  417012:	pop    es
  417013:	aaa    
  417014:	inc    ebp
  417015:	add    edi,ecx
  417017:	and    ch,al
  417019:	sub    al,0xb4
  41701b:	add    edi,esp
  41701d:	(bad)  
  41701e:	inc    ebp
  41701f:	ja     0x416fef
  417021:	xchg   ebp,eax
  417022:	cmp    eax,0x8a63a345
  417027:	xlat   BYTE PTR ds:[ebx]
  417028:	ja     0x416ff3
  41702a:	mov    ah,0x5d
  41702c:	mov    eax,ds:0xd6e2d5c9
  417031:	daa    
  417032:	rcl    edx,1
  417034:	or     eax,0x1385d452
  417039:	sub    BYTE PTR [esi+0x4f],0x58
  41703d:	jne    0x416fca
  41703f:	stc    
  417040:	sbb    eax,0x4bd1bdc7
  417045:	cmp    dh,ch
  417047:	cmp    al,0xb5
  417049:	dec    esp
  41704a:	das    
  41704b:	(bad)  
  41704c:	aas    
  41704d:	ss xchg esi,eax
  41704f:	adc    ebp,eax
  417051:	pop    ecx
  417052:	xor    eax,0xe0dc00af
  417057:	and    edi,DWORD PTR fs:[eax+0x5e]
  41705b:	popf   
  41705c:	push   edi
  41705d:	mov    dl,0x7b
  41705f:	jp     0x417073
  417061:	pop    ds
  417062:	sub    DWORD PTR [eax+0x31],edx
  417065:	mov    edi,0xb218f099
  41706a:	shr    BYTE PTR [edx*8-0x1d286c8e],1
  417071:	or     eax,0x2380c25d
  417076:	ror    DWORD PTR [ecx+0x4a],0xd0
  41707a:	sub    DWORD PTR [ecx],ecx
  41707c:	scas   al,BYTE PTR es:[edi]
  41707d:	xor    ebp,DWORD PTR [edi-0x26]
  417080:	jl     0x4170fc
  417082:	clc    
  417083:	sbb    al,0xfd
  417085:	pop    esi
  417086:	jl     0x4170d5
  417088:	in     eax,dx
  417089:	mov    DWORD PTR [edi],esp
  41708b:	push   esi
  41708c:	aad    0x3a
  41708e:	ret    
  41708f:	xor    al,BYTE PTR [esi]
  417091:	es mov cx,0x87c6
  417096:	cmp    ah,BYTE PTR [esp+edx*2+0x4d40189c]
  41709d:	outs   dx,BYTE PTR ds:[esi]
  41709e:	in     al,dx
  41709f:	loope  0x4170d9
  4170a1:	jl     0x4170ae
  4170a3:	or     BYTE PTR [edi+0x1b29b278],ch
  4170a9:	xor    DWORD PTR [ebp-0xe],0x52
  4170ad:	bound  eax,QWORD PTR [esi+esi*4]
  4170b0:	scas   eax,DWORD PTR es:[edi]
  4170b1:	addr16 pusha 
  4170b3:	xchg   ebp,eax
  4170b4:	out    dx,eax
  4170b5:	jg     0x417130
  4170b7:	ficom  WORD PTR [eax+0x4af036ee]
  4170bd:	gs cmp al,0x6e
  4170c0:	lea    esp,[ecx]
  4170c2:	cli    
  4170c3:	shl    dl,0x9c
  4170c6:	rol    DWORD PTR [esi-0x1a],cl
  4170c9:	cmp    eax,0x2cfdf68a
  4170ce:	jmp    0x41712a
  4170d0:	and    ebx,DWORD PTR [edx+ecx*8+0x28]
  4170d4:	(bad)  
  4170d5:	and    eax,0x38b69de5
  4170da:	fucomp st(0)
  4170dc:	add    edx,DWORD PTR [ecx+0x6444c7ca]
  4170e2:	stos   DWORD PTR es:[edi],eax
  4170e3:	lods   al,BYTE PTR ds:[esi]
  4170e4:	(bad)  
  4170e5:	mov    ds:0x1dfa9df3,al
  4170ea:	or     al,0xca
  4170ec:	cmp    ecx,DWORD PTR [edx+0x59]
  4170ef:	daa    
  4170f0:	mov    ch,0x1c
  4170f2:	cmp    ecx,esi
  4170f4:	pop    ebx
  4170f5:	push   edi
  4170f6:	sbb    eax,0xf20750a
  4170fb:	popa   
  4170fc:	ss mov cl,0x1a
  4170ff:	(bad)  [esi+0x13]
  417102:	push   esi
  417103:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417104:	iret   
  417105:	fiadd  WORD PTR [esi-0x60996f2b]
  41710b:	ss dec esp
  41710d:	call   0xc66d:0x18afbbab
  417114:	imul   ebx,DWORD PTR [ebp-0x4c],0x959f1bbf
  41711b:	loop   0x417166
  41711d:	je     0x4170fa
  41711f:	nop
  417120:	mov    eax,ds:0xb638115e
  417125:	or     DWORD PTR [edi+0x4a],esp
  417128:	pop    ebx
  417129:	pop    ebp
  41712a:	ret    
  41712b:	(bad)  
  41712d:	inc    esp
  41712e:	xchg   esp,eax
  41712f:	(bad)  
  417130:	add    DWORD PTR [ecx],esi
  417132:	sbb    eax,DWORD PTR [edi]
  417134:	xor    al,0x41
  417136:	shr    BYTE PTR [eax+0x365e53b3],0xcf
  41713d:	jge    0x417119
  41713f:	pop    edx
  417140:	push   edx
  417141:	(bad)  
  417142:	sbb    DWORD PTR [ebx+eiz*1],0x4535abbe
  417149:	cwde   
  41714a:	pextrw edx,mm6,0x5f
  41714e:	cmp    al,0xc7
  417150:	push   ds
  417151:	test   eax,0xb7c5d599
  417156:	xchg   ebx,eax
  417157:	lahf   
  417158:	repnz xchg ecx,eax
  41715a:	outs   dx,DWORD PTR ds:[esi]
  41715c:	stc    
  41715d:	out    0xf1,al
  41715f:	push   0xffffffce
  417161:	pusha  
  417162:	js     0x4171b4
  417164:	dec    eax
  417165:	pop    DWORD PTR [ecx]
  417167:	in     al,0xf7
  417169:	and    DWORD PTR [edx+edx*1+0x5368dc50],ebp
  417170:	cmp    dh,BYTE PTR [esi]
  417172:	jecxz  0x417150
  417174:	xlat   BYTE PTR ds:[ebx]
  417175:	scas   eax,DWORD PTR es:[edi]
  417176:	scas   eax,DWORD PTR es:[edi]
  417177:	mov    BYTE PTR [ebp+0x47e9ff22],ch
  41717d:	and    bh,cl
  41717f:	mov    eax,ds:0xdc926f85
  417184:	sbb    dl,bl
  417186:	and    BYTE PTR es:[eax+0x3e],bl
  41718a:	es xchg ecx,eax
  41718c:	add    DWORD PTR [ebx],edx
  41718e:	push   ebp
  41718f:	push   ebx
  417190:	das    
  417191:	or     bl,dl
  417193:	xchg   BYTE PTR [edx+0x70d09b07],ah
  417199:	ret    0xd378
  41719c:	call   0xb8bbbcaa
  4171a1:	cmp    eax,0xda27f3be
  4171a6:	sub    al,0xa2
  4171a8:	stc    
  4171a9:	sti    
  4171aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171ab:	mov    eax,ds:0xf243c739
  4171b0:	repz dec ebx
  4171b2:	test   BYTE PTR [ecx-0x4e7f812b],0x58
  4171b9:	push   es
  4171ba:	aas    
  4171bb:	jmp    0xf165:0xc502ae63
  4171c2:	inc    edi
  4171c3:	stos   DWORD PTR es:[edi],eax
  4171c4:	das    
  4171c5:	mov    cl,0xe7
  4171c7:	jns    0x417238
  4171c9:	pop    esp
  4171ca:	ds push ds
  4171cc:	sar    DWORD PTR [ecx],0xb7
  4171cf:	mov    ch,0x3c
  4171d1:	jmp    DWORD PTR [ebx+eax*2-0x21]
  4171d5:	jmp    0x975b:0xdcddefb9
  4171dc:	cmp    DWORD PTR [ecx+0x7f],esp
  4171df:	iret   
  4171e0:	sbb    eax,edi
  4171e2:	scas   eax,DWORD PTR es:[edi]
  4171e3:	stos   DWORD PTR es:[edi],eax
  4171e4:	ins    DWORD PTR es:[edi],dx
  4171e5:	sbb    BYTE PTR [edx],cl
  4171e7:	iret   
  4171e8:	loopne 0x417196
  4171ea:	stc    
  4171eb:	stos   BYTE PTR es:[edi],al
  4171ec:	stos   BYTE PTR es:[edi],al
  4171ed:	(bad)
  4171f3:	mov    BYTE PTR [edx+ecx*8],bl
  4171f6:	and    eax,0x64ad519a
  4171fb:	or     al,0xff
  4171fd:	jl     0x41720b
  4171ff:	sub    eax,0xc0e703d9
  417204:	adc    BYTE PTR [edi-0xdee10dc],cl
  41720a:	lods   eax,DWORD PTR ds:[esi]
  41720b:	mov    eax,0x97e50745
  417210:	pusha  
  417211:	(bad)  
  417212:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417213:	add    DWORD PTR [edi+0x4c],ebx
  417216:	fucomi st,st(3)
  417218:	mov    ds:0x3e830fbd,eax
  41721d:	xor    BYTE PTR [ebp+ebx*1+0xd2088d6],ch
  417224:	xchg   esp,eax
  417225:	neg    DWORD PTR [esi]
  417227:	sbb    eax,ebx
  417229:	push   ds
  41722a:	(bad)  
  41722b:	outs   dx,DWORD PTR ds:[esi]
  41722c:	xchg   edx,eax
  41722d:	adc    bl,BYTE PTR ds:0xaf3d3df8
  417233:	outs   dx,DWORD PTR ds:[esi]
  417234:	leave  
  417235:	and    ah,bl
  417237:	std    
  417238:	ins    DWORD PTR es:[edi],dx
  417239:	push   ds
  41723a:	cs pop ss
  41723c:	sti    
  41723d:	jnp    0x4172b5
  41723f:	call   0x34c0:0xad4dbd6c
  417246:	xchg   ebx,eax
  417247:	out    0x25,eax
  417249:	adc    eax,0xd54f8ebe
  41724e:	fld    QWORD PTR [eax-0x230cc343]
  417254:	shl    dh,cl
  417256:	xor    DWORD PTR [ebx],ebx
  417258:	fisttp WORD PTR [ebx-0x51]
  41725b:	inc    ebp
  41725c:	sub    eax,0xb0e803f8
  417261:	xor    dh,BYTE PTR [edi+0x62cb4747]
  417267:	je     0x417258
  417269:	dec    esi
  41726a:	pop    ebp
  41726b:	stc    
  41726c:	push   ss
  41726d:	neg    DWORD PTR [eax-0x1e0c3a50]
  417273:	jno    0x417255
  417275:	add    BYTE PTR [edx+0x20],dl
  417278:	(bad)  
  417279:	inc    edi
  41727b:	sbb    DWORD PTR [edi+0x1958b99e],0xc8e34f45
  417285:	popa   
  417286:	repz dec edi
  417288:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417289:	sub    eax,0x137e339a
  41728e:	test   eax,0x18d11baa
  417293:	add    eax,0xa4306b6
  417298:	fist   DWORD PTR [ecx-0x79]
  41729b:	push   ds
  41729c:	pop    es
  41729d:	or     DWORD PTR [esi+0x2e],ecx
  4172a0:	test   eax,0x100e1e06
  4172a5:	mov    esi,edx
  4172a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172a8:	dec    ecx
  4172a9:	(bad)  
  4172aa:	ret    
  4172ab:	jbe    0x41726b
  4172ad:	jnp    0x4172dc
  4172af:	xlat   BYTE PTR ds:[ebx]
  4172b0:	pop    ss
  4172b1:	push   esi
  4172b2:	push   eax
  4172b3:	xchg   edi,eax
  4172b4:	test   esp,eax
  4172b6:	stc    
  4172b7:	rcr    DWORD PTR [ecx],0x98
  4172ba:	in     al,dx
  4172bb:	dec    edx
  4172bc:	ins    DWORD PTR es:[edi],dx
  4172bd:	inc    edx
  4172be:	jae    0x4172eb
  4172c0:	out    0xd4,eax
  4172c2:	lock push 0x4d
  4172c5:	xchg   ebx,eax
  4172c6:	inc    ecx
  4172c7:	mov    ds:0x8ea52a7d,eax
  4172cc:	push   eax
  4172cd:	push   esp
  4172ce:	dec    edx
  4172cf:	mov    al,ch
  4172d1:	xchg   esp,eax
  4172d2:	test   al,0xf9
  4172d4:	ret    
  4172d5:	pop    ds
  4172d6:	lock je 0x41727d
  4172d9:	and    al,BYTE PTR [edx]
  4172db:	push   edi
  4172dc:	sahf   
  4172dd:	outs   dx,BYTE PTR ds:[esi]
  4172de:	sbb    eax,0x2dde86e0
  4172e3:	into   
  4172e4:	int3   
  4172e5:	add    BYTE PTR [esi],ah
  4172e7:	data16 das 
  4172e9:	jmp    0x2c1502c
  4172ee:	mov    esp,0xb0fa4a86
  4172f3:	cwde   
  4172f4:	call   0x126:0x2abbff80
  4172fb:	cs repnz dec esi
  4172fe:	jmp    0xc5cc:0x60591049
  417305:	xor    al,0xd
  417307:	sub    ebx,eax
  417309:	mov    ds:0xdb4950d4,al
  41730e:	rol    ebp,1
  417310:	repz and BYTE PTR [ebx+0x2d],bl
  417314:	ja     0x41738d
  417316:	test   ebx,eax
  417318:	dec    esi
  417319:	adc    bl,BYTE PTR [edi+0x74b142ed]
  41731f:	adc    DWORD PTR gs:[esi+esi*8],ebx
  417323:	rol    DWORD PTR [ebp-0x6bab6431],cl
  417329:	(bad)  
  41732a:	pop    edi
  41732b:	xor    eax,0x4d4b6825
  417330:	and    DWORD PTR [ebp+esi*8+0x771359eb],edi
  417337:	push   edx
  417338:	push   es
  417339:	inc    esp
  41733a:	in     eax,0x46
  41733c:	aad    0x36
  41733e:	sahf   
  41733f:	in     al,0x1
  417341:	dec    esi
  417342:	cli    
  417343:	push   ecx
  417344:	daa    
  417345:	jmp    0x417308
  417347:	add    eax,0xbacf0572
  41734c:	dec    eax
  41734d:	rcl    DWORD PTR [ecx+0x73a1b1a3],cl
  417353:	adc    al,0xf2
  417355:	and    al,0x2c
  417357:	cmp    al,0xa4
  417359:	mov    ds:0x3841ff1e,al
  41735e:	xchg   esp,eax
  41735f:	or     DWORD PTR [ebx],esp
  417361:	lods   eax,DWORD PTR ds:[esi]
  417362:	mov    edi,DWORD PTR ds:0xf5a6f48f
  417368:	and    edx,DWORD PTR [edi+0x67]
  41736b:	xchg   ebp,eax
  41736c:	dec    eax
  41736d:	jno    0x417329
  41736f:	mov    BYTE PTR ds:0x3999547d,dh
  417375:	lea    eax,[esp+edx*8+0x52]
  417379:	mov    edx,0x7e58da86
  41737e:	(bad)  
  41737f:	in     al,0xa4
  417381:	add    BYTE PTR [eax-0x1d2e891b],0xc9
  417388:	and    bl,BYTE PTR [esi-0xd]
  41738b:	mov    bh,0x63
  41738d:	cmc    
  41738e:	push   esi
  41738f:	popf   
  417390:	inc    esp
  417391:	push   ebp
  417392:	sub    al,0x70
  417394:	and    eax,0xa37b83ca
  417399:	enter  0x1cb8,0xbc
  41739d:	add    edi,edi
  41739f:	jae    0x4173f0
  4173a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173a2:	(bad)  
  4173a3:	adc    eax,0x8a86493
  4173a8:	jo     0x41736d
  4173aa:	inc    eax
  4173ab:	ret    
  4173ac:	int3   
  4173ad:	fdivp  st(4),st
  4173af:	pop    ebp
  4173b0:	mov    bh,0xbc
  4173b2:	mov    dl,0xc6
  4173b4:	sbb    al,0x45
  4173b6:	leave  
  4173b7:	shr    DWORD PTR [ebp-0x2c],1
  4173ba:	xchg   DWORD PTR [edx],ebp
  4173bc:	or     eax,0xba243f3f
  4173c1:	mov    edx,esi
  4173c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173c4:	xchg   ebp,eax
  4173c5:	(bad)  
  4173c7:	fimul  DWORD PTR [eax+ebx*1-0x630dcf86]
  4173ce:	pop    esp
  4173cf:	pop    esp
  4173d0:	add    al,0xe5
  4173d2:	xor    al,0x44
  4173d4:	xor    edx,DWORD PTR [edi-0x76]
  4173d7:	ficom  DWORD PTR [edi+0x21]
  4173da:	and    DWORD PTR es:[ebx+0x17867780],ebx
  4173e1:	or     eax,0xff34a8a0
  4173e6:	jp     0x41743a
  4173e8:	cli    
  4173e9:	out    dx,al
  4173ea:	iret   
  4173eb:	rcl    DWORD PTR [edx-0x579f434d],cl
  4173f1:	adc    BYTE PTR [ebp-0xc4425d0],dh
  4173f7:	add    ebp,DWORD PTR [esi-0x4]
  4173fa:	test   BYTE PTR [ebx],ah
  4173fc:	pop    ds
  4173fd:	not    esp
  4173ff:	or     cl,BYTE PTR [ebx+eax*1]
  417402:	fisubr WORD PTR [ebx+0x1]
  417405:	push   ecx
  417406:	cmp    eax,0xa5561e21
  41740b:	pop    esi
  41740c:	xor    ebp,edi
  41740e:	push   edx
  41740f:	add    bl,BYTE PTR [edx+ebp*1-0x74]
  417413:	fdiv   QWORD PTR [edx-0x9b4de83]
  417419:	sub    al,0x5d
  41741c:	mov    ebx,0xe2442d47
  417421:	mov    dh,0xdc
  417423:	xlat   BYTE PTR ds:[ebx]
  417424:	in     eax,dx
  417425:	and    edx,DWORD PTR [edi+0x55da782f]
  41742b:	rcl    DWORD PTR [ebx+0x2655081b],1
  417431:	leave  
  417432:	jnp    0x4174b1
  417434:	imul   esp,DWORD PTR [ecx-0x54],0x7195b903
  41743b:	fidiv  WORD PTR [edi]
  41743d:	add    eax,esi
  41743f:	in     al,dx
  417440:	sub    DWORD PTR [esi-0x39524de1],0x4c8381f1
  41744a:	in     al,0x1c
  41744c:	fs push eax
  41744e:	shl    DWORD PTR [esi],0xbb
  417451:	ja     0x4174aa
  417453:	fcmovb st,st(6)
  417455:	sti    
  417456:	iret   
  417457:	or     eax,0x9c588901
  41745c:	and    dl,al
  41745e:	adc    al,0xcd
  417460:	push   edi
  417461:	sbb    esi,ebx
  417463:	icebp  
  417464:	dec    esp
  417465:	das    
  417466:	xchg   ebp,eax
  417467:	dec    edi
  417468:	xor    al,0xe7
  41746a:	xchg   ebp,eax
  41746c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41746d:	adc    bh,BYTE PTR [ecx-0x49]
  417470:	pop    ebx
  417471:	cmp    eax,0xd3fb4dca
  417476:	mov    esp,0xb1c1a743
  41747b:	gs iret 
  41747d:	ins    BYTE PTR es:[edi],dx
  41747e:	test   BYTE PTR [edx],ch
  417480:	ficom  WORD PTR [eax-0x68e2b162]
  417486:	leave  
  417487:	mov    cl,0xb3
  417489:	jb     0x4174c6
  41748b:	sbb    ah,BYTE PTR [edx+0x7ce71533]
  417491:	mov    ds:0xf2a41bda,al
  417496:	in     al,dx
  417497:	mov    BYTE PTR [eax+0x22],dl
  41749a:	lea    ebp,[ebp-0x4c8acc66]
  4174a0:	push   ds
  4174a1:	push   ss
  4174a2:	mov    ds:0x4a59d7b1,eax
  4174a7:	mov    BYTE PTR [ebx+edi*4-0x4d],cl
  4174ab:	sub    al,0xcf
  4174ad:	dec    ebx
  4174ae:	cwde   
  4174af:	push   es
  4174b0:	les    edi,FWORD PTR [edx]
  4174b2:	mov    edi,fs
  4174b4:	das    
  4174b5:	daa    
  4174b6:	(bad)  
  4174b7:	push   0x5b
  4174b9:	push   esp
  4174ba:	sub    ebx,edx
  4174bc:	or     ch,BYTE PTR [esi+0x70]
  4174bf:	and    cl,dh
  4174c1:	sahf   
  4174c2:	repnz stos BYTE PTR es:[edi],al
  4174c4:	cmp    bh,dl
  4174c6:	adc    edx,DWORD PTR [eax+0x31]
  4174c9:	mov    al,0x58
  4174cb:	mov    ecx,0xf9a477f7
  4174d0:	jmp    0x4174d9
  4174d2:	stc    
  4174d3:	fild   WORD PTR [eax]
  4174d5:	shl    BYTE PTR ds:[ecx],1
  4174d8:	mov    bl,bl
  4174da:	inc    esp
  4174db:	mov    ecx,0x7ebcac7c
  4174e0:	push   ecx
  4174e1:	inc    ecx
  4174e2:	pusha  
  4174e3:	fimul  DWORD PTR [edi]
  4174e5:	stc    
  4174e6:	repz jge 0x417504
  4174e9:	aas    
  4174ea:	mov    ch,0x90
  4174ec:	adc    DWORD PTR [ebp-0x4e],eax
  4174ef:	jo     0x417557
  4174f1:	fisttp DWORD PTR [edi]
  4174f3:	mov    ds:0x5eff3f74,eax
  4174f8:	xchg   ecx,eax
  4174f9:	inc    edx
  4174fa:	enter  0xf091,0x74
  4174fe:	fucomp st(4)
  417500:	xchg   edx,eax
  417501:	push   ecx
  417502:	mov    DWORD PTR [edx],ecx
  417504:	mov    ebp,0xc313d268
  417509:	push   0x19
  41750b:	or     eax,0x9013e5a0
  417510:	sub    al,BYTE PTR [esi-0x65]
  417513:	out    dx,eax
  417514:	mov    al,0x9c
  417516:	ins    BYTE PTR es:[edi],dx
  417517:	push   esp
  417518:	pop    ss
  417519:	xor    ecx,edi
  41751b:	jmp    DWORD PTR [ebx]
  41751d:	sbb    BYTE PTR [eax+0x29],0x67
  417521:	pop    ss
  417522:	add    dh,BYTE PTR [ebx]
  417524:	repz das 
  417526:	sbb    eax,eax
  417528:	out    0x83,eax
  41752a:	lds    eax,FWORD PTR [esi+0x51f6732b]
  417530:	mov    cl,0xa
  417532:	adc    DWORD PTR [ebx+edx*2-0x5314aaa],esp
  417539:	arpl   WORD PTR [ecx+0x42],ax
  41753c:	pop    esi
  41753d:	mov    ah,0xdd
  41753f:	xlat   BYTE PTR fs:[ebx]
  417541:	sub    DWORD PTR fs:[esi-0xa],esi
  417545:	jg     0x41752d
  417547:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417548:	fs je  0x4175b5
  41754b:	mov    dh,0xc2
  41754d:	jo     0x4175bf
  41754f:	lahf   
  417550:	mov    ah,cl
  417552:	neg    DWORD PTR [ebp-0xdd92735]
  417558:	mov    esp,0x1d550e34
  41755d:	pop    ebx
  41755e:	into   
  41755f:	dec    ebp
  417560:	leave  
  417561:	dec    ecx
  417562:	test   BYTE PTR [eax-0x20df61a7],al
  417568:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417569:	mov    edx,0x61526814
  41756e:	push   ebx
  41756f:	push   cs
  417570:	jg     0x417570
  417572:	bound  esp,QWORD PTR [ecx]
  417574:	dec    esp
  417575:	sbb    BYTE PTR [eax],dh
  417577:	out    dx,al
  417578:	retf   
  417579:	mov    al,ds:0xd583d39
  41757e:	loopne 0x4175d2
  417580:	out    0x27,eax
  417582:	dec    eax
  417583:	pop    edx
  417584:	out    0x72,al
  417586:	pop    eax
  417587:	jmp    0x8f52:0x55987a41
  41758e:	push   cs
  41758f:	cmp    al,0xc
  417591:	fnstsw WORD PTR [edi-0x3146c459]
  417597:	arpl   WORD PTR [edi],ax
  417599:	xchg   ebx,eax
  41759a:	and    ebp,ecx
  41759c:	cmp    BYTE PTR [esi-0x4e47e021],bl
  4175a2:	or     ecx,DWORD PTR [ebx]
  4175a4:	lahf   
  4175a5:	pop    esi
  4175a6:	fucomip st,st(4)
  4175a8:	sbb    DWORD PTR [ecx-0x4fd5778e],eax
  4175ae:	stc    
  4175af:	sbb    eax,0x9ad511d2
  4175b4:	(bad)  
  4175b5:	std    
  4175b6:	daa    
  4175b7:	nop
  4175b8:	or     edi,DWORD PTR [ebx]
  4175ba:	add    DWORD PTR [edi-0x59],edx
  4175bd:	xor    esi,DWORD PTR [eax-0x5d5bb5f]
  4175c3:	ja     0x41758a
  4175c5:	cmp    eax,0xe477f85b
  4175ca:	xchg   edx,eax
  4175cb:	jp     0x417583
  4175cd:	push   0x26f811c3
  4175d2:	shl    BYTE PTR [eax-0x7],1
  4175d5:	xlat   BYTE PTR ds:[ebx]
  4175d6:	mov    al,0x19
  4175d8:	or     DWORD PTR [esi],ecx
  4175da:	pop    ss
  4175db:	dec    edi
  4175dc:	pop    ebx
  4175dd:	jge    0x417571
  4175df:	aam    0xb
  4175e1:	enter  0x879f,0x14
  4175e5:	scas   eax,DWORD PTR es:[edi]
  4175e6:	cdq    
  4175e7:	xchg   DWORD PTR [ecx],esp
  4175e9:	dec    esi
  4175ea:	sahf   
  4175eb:	push   ecx
  4175ec:	stc    
  4175ed:	mov    al,0xfe
  4175ef:	lds    esi,FWORD PTR [esi+0x24]
  4175f2:	je     0x4175c0
  4175f4:	out    0x12,al
  4175f6:	sahf   
  4175f7:	shl    ch,1
  4175f9:	mov    ecx,0xdc80c207
  4175fe:	lds    eax,FWORD PTR [edx+0xb]
  417601:	outs   dx,DWORD PTR ds:[esi]
  417602:	adc    eax,0xb17b8f88
  417607:	out    dx,al
  417608:	call   0x29a0511d
  41760d:	shl    BYTE PTR [ebx+0x4e],1
  417610:	inc    ecx
  417611:	test   al,0x6a
  417613:	imul   esi,esp,0xf065a540
  417619:	jp     0x4175cd
  41761b:	sbb    al,0x20
  41761d:	mov    ecx,0x62d73201
  417622:	or     DWORD PTR [ebp+0x50],ecx
  417625:	fs push 0xf36cf446
  41762b:	and    DWORD PTR [ecx+0x58],0x37
  41762f:	icebp  
  417630:	call   0x497382f8
  417635:	clc    
  417636:	xchg   ebx,eax
  417637:	sbb    eax,0xde89b925
  41763c:	jecxz  0x41768e
  41763e:	enter  0xcad7,0xee
  417642:	sub    cl,BYTE PTR [eax+eax*4]
  417645:	hlt    
  417646:	in     eax,dx
  417647:	fadd   DWORD PTR [ecx-0x17]
  41764a:	mov    esp,esp
  41764c:	or     BYTE PTR [ebx+0x32],ch
  41764f:	or     dl,ch
  417651:	ficomp DWORD PTR [edx+0x19b36591]
  417657:	and    DWORD PTR ds:0x6c124eaa,edi
  41765d:	adc    dl,BYTE PTR [ecx]
  41765f:	pusha  
  417660:	add    DWORD PTR [ecx+0x9e0332c],eax
  417666:	(bad)  
  417667:	retf   
  417668:	mov    esp,0xfddf6b89
  41766d:	enter  0xde18,0x40
  417671:	clc    
  417672:	mov    ecx,0xfa3feecc
  417677:	mov    ah,BYTE PTR [ecx-0x186e885a]
  41767d:	shl    BYTE PTR [ebp-0x70],1
  417680:	pop    ecx
  417681:	out    dx,eax
  417682:	fs pop esi
  417684:	les    esp,FWORD PTR [eax+0x6224019a]
  41768a:	mov    ebx,0xaf3c936e
  41768f:	arpl   dx,di
  417691:	aam    0x6a
  417693:	rcr    BYTE PTR [ebx+0x53],1
  417696:	dec    ebx
  417697:	pop    esi
  417698:	jmp    0x41763d
  41769a:	xor    ah,BYTE PTR [edx]
  41769c:	dec    esi
  41769d:	iret   
  41769e:	mov    eax,0x939ee196
  4176a3:	(bad)  
  4176a4:	shl    BYTE PTR [ebp+0x2a],1
  4176a7:	test   DWORD PTR [esi],eax
  4176a9:	sbb    eax,0x34133c3
  4176ae:	jecxz  0x417662
  4176b0:	aad    0x83
  4176b2:	mov    ebx,0x2b17b500
  4176b7:	dec    ecx
  4176b8:	mov    cl,0x18
  4176ba:	repnz xchg ebx,eax
  4176bc:	nop
  4176bd:	sbb    al,0xf8
  4176bf:	xchg   esi,eax
  4176c0:	addr16 inc eax
  4176c2:	test   BYTE PTR [edi],al
  4176c4:	push   ebx
  4176c5:	and    dl,BYTE PTR [eax+esi*1-0x15da042]
  4176cc:	xchg   ebp,eax
  4176cd:	push   ebx
  4176ce:	add    DWORD PTR [edi+0x320d12e4],0x6d0aa990
  4176d8:	popa   
  4176d9:	(bad)  ds:0x9538109a
  4176df:	aad    0x62
  4176e1:	pop    esi
  4176e2:	pop    ss
  4176e3:	add    esp,DWORD PTR [eax+0x4e]
  4176e6:	lahf   
  4176e7:	cld    
  4176e8:	cmp    dh,BYTE PTR [edx+0x7a]
  4176eb:	cmp    ecx,DWORD PTR [esi+0x4f405eef]
  4176f1:	or     eax,0x9c759c2
  4176f6:	push   esi
  4176f7:	imul   esp,DWORD PTR [esp+edi*8],0xffffffd1
  4176fb:	xor    esi,esp
  4176fd:	mov    edx,0xcd0636c1
  417702:	test   eax,0x452b7e77
  417707:	mov    ds:0x86b0d368,eax
  41770c:	add    edx,DWORD PTR [ebx]
  41770e:	or     edi,DWORD PTR [ebx+ebx*2-0x26b2dadf]
  417715:	pusha  
  417716:	add    DWORD PTR [esi],ebx
  417718:	cmp    al,0x25
  41771a:	mov    ebp,ds
  41771c:	test   al,0x87
  41771e:	mov    eax,DWORD PTR [ebp+0x1]
  417721:	stc    
  417722:	sahf   
  417723:	hlt    
  417724:	shr    dl,cl
  417726:	les    eax,FWORD PTR [edi]
  417728:	jecxz  0x41776f
  41772a:	gs int3 
  41772c:	cs mov cl,0x9c
  41772f:	cmp    esp,eax
  417731:	sub    al,0x2e
  417733:	sbb    dl,bl
  417735:	dec    esp
  417736:	ret    0xa344
  417739:	aaa    
  41773a:	push   eax
  41773b:	std    
  41773c:	nop
  41773d:	ret    0xb8c6
  417740:	dec    ebx
  417741:	xchg   esi,eax
  417742:	push   ecx
  417743:	pop    es
  417744:	mov    bh,0x44
  417746:	dec    ecx
  417747:	repz push eax
  417749:	in     al,dx
  41774a:	out    dx,eax
  41774b:	xchg   esp,eax
  41774c:	mov    esp,0x6041d2a4
  417751:	mov    DWORD PTR [ebp+0x10],edi
  417754:	ins    BYTE PTR es:[edi],dx
  417755:	int3   
  417756:	mov    gs,ebx
  417758:	xchg   bx,ax
  41775a:	lods   al,BYTE PTR ds:[esi]
  41775b:	mov    al,BYTE PTR [esi+0x1bbc6d73]
  417761:	es scas eax,DWORD PTR es:[edi]
  417763:	add    ebp,eax
  417765:	push   0x4ad4fcfd
  41776a:	mov    ah,0x11
  41776c:	ins    DWORD PTR es:[edi],dx
  41776d:	stos   DWORD PTR es:[edi],eax
  41776e:	jmp    0x360bd710
  417773:	aaa    
  417774:	push   0x88e4f9d7
  417779:	mov    bl,0x0
  41777b:	cmp    DWORD PTR [esi],esi
  41777d:	xor    bh,dl
  41777f:	mov    eax,ds:0xe3f73bc2
  417784:	or     bl,BYTE PTR [ebp+edi*4-0x5d]
  417788:	dec    edx
  417789:	lds    edx,FWORD PTR [edx+0x17773d76]
  41778f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417790:	jg     0x417804
  417792:	xchg   esi,eax
  417793:	mov    ah,0x4a
  417795:	fild   WORD PTR [edx-0x56]
  417798:	out    dx,al
  417799:	push   edi
  41779a:	or     DWORD PTR ds:0x98c8b443,eax
  4177a0:	sbb    al,0x13
  4177a2:	(bad)  
  4177a3:	cdq    
  4177a4:	mov    eax,ds:0x83ddab1d
  4177a9:	fwait
  4177aa:	jae    0x4177b4
  4177ac:	mov    DWORD PTR [eax-0x1f],ecx
  4177af:	jns    0x417782
  4177b1:	sbb    al,0xe8
  4177b3:	(bad)  
  4177b4:	cld    
  4177b5:	ins    BYTE PTR es:[edi],dx
  4177b6:	aas    
  4177b7:	aaa    
  4177b8:	push   0x64
  4177ba:	mov    eax,0xfdb9bf63
  4177bf:	call   0x596c6a7
  4177c4:	out    0x1a,al
  4177c6:	xor    eax,0xb0379e2
  4177cb:	add    BYTE PTR [eax+ecx*1-0x23322c40],bh
  4177d2:	into   
  4177d3:	sub    al,0xbe
  4177d5:	pop    eax
  4177d6:	(bad)  
  4177d7:	mov    cl,0x4f
  4177d9:	inc    ecx
  4177da:	xor    ch,bh
  4177dc:	cmp    eax,0x1a3065ed
  4177e1:	jno    0x417772
  4177e3:	and    eax,0xc99b43a8
  4177e8:	cmp    eax,DWORD PTR [esi+0x22]
  4177eb:	test   eax,0x15b6d4be
  4177f0:	sbb    DWORD PTR [ebp-0x61],edi
  4177f3:	dec    esp
  4177f4:	sub    ch,BYTE PTR ds:0xf6efe84
  4177fa:	aas    
  4177fb:	imul   ecx,DWORD PTR [eax],0x1f
  4177fe:	dec    esp
  4177ff:	xor    eax,0x88d29a2
  417804:	nop
  417805:	stos   DWORD PTR es:[edi],eax
  417806:	push   0x48
  417808:	inc    edi
  417809:	push   es
  41780a:	popf   
  41780b:	cmp    al,0x7d
  41780d:	or     al,0x6b
  41780f:	fisttp DWORD PTR [bp+di]
  417812:	fstp   DWORD PTR [ebx]
  417814:	int    0xe0
  417816:	xchg   ebp,eax
  417817:	add    al,0x80
  417819:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41781a:	dec    ebx
  41781b:	and    ebp,eax
  41781d:	es mov esi,0x455791e
  417823:	push   0x57fba89f
  417828:	cmp    ebx,DWORD PTR [ebx-0x7803ddc2]
  41782e:	gs and al,0x26
  417831:	jne    0x41780e
  417833:	mov    ds:0x743f1c4f,al
  417838:	fisttp WORD PTR [eax]
  41783a:	arpl   bx,bx
  41783c:	in     eax,dx
  41783d:	sub    ah,ah
  41783f:	xchg   ebp,eax
  417840:	mov    ebx,0x9a4408f3
  417845:	or     DWORD PTR [esi],ebp
  417847:	data16 icebp 
  417849:	inc    esp
  41784a:	and    bl,BYTE PTR [eax-0x53087dd2]
  417850:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417851:	push   ds
  417852:	bnd jl 0x417826
  417855:	xor    DWORD PTR [edx+esi*4],edi
  417858:	mov    ebx,0x16adfaaf
  41785d:	sub    cx,WORD PTR [eax+ecx*4-0x1972be8a]
  417865:	push   ss
  417866:	sti    
  417867:	dec    ebx
  417868:	and    cl,BYTE PTR [ebx]
  41786a:	mov    esp,0x35c6a579
  41786f:	jae    0x41788a
  417871:	or     edx,0x92119b3d
  417877:	enter  0xdc27,0x68
  41787b:	cmc    
  41787c:	xchg   esi,eax
  41787d:	dec    ebp
  41787e:	jmp    0xb9b7:0xb6d15d8f
  417885:	mov    al,ds:0x7fcc93f9
  41788a:	push   0xffffffab
  41788c:	fs inc eax
  41788e:	jge    0x4178d9
  417890:	xlat   BYTE PTR ds:[ebx]
  417891:	xor    eax,0x351a2f76
  417896:	bound  ebx,QWORD PTR fs:[eax-0x2c]
  41789a:	fidiv  DWORD PTR [eax-0xb85c8c6]
  4178a0:	xor    eax,0x669ad342
  4178a5:	push   ebp
  4178a6:	push   edi
  4178a7:	shl    DWORD PTR [eax+0x30bccaca],cl
  4178ad:	push   ebp
  4178ae:	popf   
  4178af:	sub    BYTE PTR [edx+eiz*8],bh
  4178b2:	dec    ebp
  4178b3:	inc    ecx
  4178b4:	mov    ebx,0x35bf48f9
  4178b9:	mov    WORD PTR [ecx-0x6c8166b7],es
  4178bf:	cmp    al,0x37
  4178c1:	and    dh,BYTE PTR [eax+eiz*2+0x54]
  4178c5:	xchg   BYTE PTR [ecx+0x2d1c36f5],bh
  4178cb:	(bad)  
  4178cc:	mov    ds:0x77a8dbdb,al
  4178d1:	xor    BYTE PTR [eax+0xb],al
  4178d4:	int3   
  4178d5:	cwde   
  4178d6:	add    eax,0xaa217018
  4178db:	push   edx
  4178dc:	shr    BYTE PTR [ebp+0x15132631],1
  4178e2:	pop    es
  4178e3:	jbe    0x417940
  4178e5:	sub    ah,BYTE PTR [eax+0x22a59d55]
  4178eb:	jmp    0x5b96e05c
  4178f0:	call   0xa9a6:0x9643ed49
  4178f7:	ret    
  4178f8:	imul   edi,DWORD PTR [edx],0x69
  4178fb:	fwait
  4178fc:	je     0x41789a
  4178fe:	ins    BYTE PTR es:[edi],dx
  4178ff:	sub    dl,bh
  417901:	imul   eax,DWORD PTR [esi-0x7c79542a],0x4803b3de
  41790b:	sub    eax,0x2678c11
  417910:	ret    0x8bb3
  417913:	mov    ch,0xbf
  417915:	call   0x7219:0xd127a2f9
  41791c:	and    ebx,ebp
  41791e:	out    dx,eax
  41791f:	cld    
  417920:	fcomp  QWORD PTR [esi+ecx*8-0x7a]
  417924:	cmp    eax,0x2de8c057
  417929:	sti    
  41792a:	js     0x4178f9
  41792c:	inc    ebx
  41792d:	mov    ch,0x85
  41792f:	add    esp,DWORD PTR ds:0x7c4ba16c
  417935:	push   eax
  417936:	mov    BYTE PTR [ebp-0x73],bl
  417939:	dec    ebp
  41793a:	xor    DWORD PTR [esp+eiz*2],edx
  41793d:	jmp    0xb9a8:0x30549d0e
  417944:	xor    DWORD PTR [ecx+0x354c4940],eax
  41794a:	test   al,0xfe
  41794c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41794d:	leave  
  41794e:	xor    DWORD PTR [ebx],edx
  417950:	sub    BYTE PTR [eax+ebx*8-0x6bc37c0b],bl
  417957:	or     BYTE PTR [ebx],0xed
  41795a:	jo     0x417969
  41795c:	out    dx,eax
  41795d:	xchg   edi,eax
  41795e:	out    dx,al
  41795f:	pop    edx
  417960:	gs (bad) 
  417962:	(bad)  
  417963:	shr    BYTE PTR [ecx],0xf1
  417966:	test   BYTE PTR [ecx],cl
  417968:	mov    esp,0xc12a97e0
  41796d:	ins    BYTE PTR es:[edi],dx
  41796e:	aam    0x48
  417970:	jb     0x417969
  417972:	pop    es
  417973:	pop    ds
  417974:	ins    DWORD PTR es:[edi],dx
  417975:	out    dx,al
  417976:	fist   WORD PTR [eax+0x11]
  417979:	int    0xb
  41797b:	dec    ecx
  41797c:	jmp    0xd916:0xd02613b3
  417983:	push   ss
  417984:	jbe    0x41790e
  417986:	sar    DWORD PTR [ebx],0x9f
  417989:	out    dx,eax
  41798a:	xchg   BYTE PTR [esi],bl
  41798c:	jmp    0x483eeed
  417991:	sub    eax,DWORD PTR [ebp+0x710cc168]
  417997:	xor    eax,0xd92a7231
  41799c:	out    dx,al
  41799d:	xlat   BYTE PTR ds:[ebx]
  41799e:	sub    ah,al
  4179a0:	xchg   ebx,eax
  4179a1:	push   eax
  4179a2:	ret    0x1cc7
  4179a5:	je     0x417969
  4179a7:	inc    ecx
  4179a8:	out    0xbc,al
  4179aa:	sub    ebp,esi
  4179ac:	dec    ebx
  4179ad:	fisttp WORD PTR [edi+0x13]
  4179b0:	pop    es
  4179b1:	or     eax,0xdd08b71
  4179b6:	jnp    0x41795f
  4179b8:	mov    ds:0x440db9df,eax
  4179bd:	adc    ecx,edi
  4179bf:	push   ecx
  4179c0:	clc    
  4179c1:	retf   0x9d50
  4179c4:	jl     0x4179e8
  4179c6:	or     eax,0x92abc185
  4179cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179cc:	rcl    BYTE PTR [edx],cl
  4179ce:	fcomp  QWORD PTR [edx]
  4179d0:	ins    BYTE PTR es:[edi],dx
  4179d1:	jl     0x41796d
  4179d3:	cmp    eax,0x1691fa15
  4179d8:	pop    ecx
  4179d9:	fsub   DWORD PTR [ebp-0x78ed2340]
  4179df:	loope  0x417993
  4179e1:	xor    BYTE PTR ds:0x5d8965f3,0x25
  4179e8:	js     0x4179d7
  4179ea:	adc    al,0xf
  4179ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179ed:	mov    eax,ds:0x6839858
  4179f2:	xor    ah,BYTE PTR [esi-0x1a088f9f]
  4179f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179f9:	out    0x8,al
  4179fb:	push   cs
  4179fc:	in     eax,0xf1
  4179fe:	aam    0xb1
  417a00:	jmp    0x3320:0x72f1fe93
  417a07:	xchg   DWORD PTR [edi],esi
  417a09:	add    eax,0xe0704bbb
  417a0e:	ret    0x92b4
  417a11:	push   es
  417a12:	pop    ebx
  417a13:	inc    edi
  417a14:	pop    es
  417a15:	mov    ch,0xcf
  417a17:	mov    ch,0x92
  417a19:	les    ebx,FWORD PTR [edx+0x1c]
  417a1c:	fcmovnb st,st(3)
  417a1e:	in     al,0x77
  417a20:	fs pusha 
  417a22:	(bad)  
  417a23:	hlt    
  417a24:	addr16 jo 0x417a62
  417a27:	push   esp
  417a28:	cmp    DWORD PTR [esi-0x6014fa7d],eax
  417a2e:	test   DWORD PTR [ecx-0x5cc368cb],esp
  417a34:	fs push edi
  417a36:	fldln2 
  417a38:	push   edi
  417a39:	xchg   DWORD PTR [edi+edi*4-0x528d2578],ebp
  417a40:	arpl   bx,bx
  417a42:	retf   0xc06a
  417a45:	sahf   
  417a46:	sbb    dh,BYTE PTR [edx]
  417a48:	loope  0x417a37
  417a4a:	mov    ebx,0xf6cae212
  417a4f:	cld    
  417a50:	jg     0x417ad1
  417a52:	and    DWORD PTR es:[ecx-0x78cce31e],ebx
  417a59:	js     0x417ad2
  417a5b:	ins    DWORD PTR es:[edi],dx
  417a5c:	arpl   bx,dx
  417a5e:	xchg   edx,eax
  417a5f:	cs jnp 0x417ac5
  417a62:	xchg   esp,eax
  417a63:	inc    edi
  417a64:	aaa    
  417a65:	int    0x99
  417a67:	adc    eax,0xdd1eeb62
  417a6c:	push   es
  417a6d:	cmp    al,0xd
  417a6f:	out    dx,eax
  417a70:	repnz out dx,eax
  417a72:	jge    0x417a2d
  417a74:	lahf   
  417a75:	jp     0x417a68
  417a77:	jb     0x417aad
  417a79:	sub    edx,DWORD PTR ss:[edi+0x3c]
  417a7d:	cdq    
  417a7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a7f:	addr16 test ebp,edi
  417a82:	inc    edx
  417a83:	jp     0x417a38
  417a85:	out    dx,al
  417a86:	jns    0x417a48
  417a88:	retf   0x43b
  417a8b:	sbb    eax,ebx
  417a8d:	call   0xb15:0xc2334996
  417a94:	and    bh,al
  417a96:	push   esp
  417a97:	xchg   DWORD PTR [edi],ebp
  417a99:	and    BYTE PTR [ebp+0x59],0xf8
  417a9d:	(bad)  
  417a9e:	xor    DWORD PTR [edi],ebx
  417aa0:	mov    ecx,0x8f4cd2c5
  417aa5:	retf   0x27a3
  417aa8:	dec    ecx
  417aa9:	ror    DWORD PTR [ecx+0x14079577],0xa1
  417ab0:	pop    ecx
  417ab1:	aad    0x41
  417ab3:	(bad)  [esi]
  417ab5:	retf   
  417ab6:	(bad)  
  417ab7:	(bad)  
  417ab8:	mov    edx,0x10d60ec
  417abd:	push   cs
  417abe:	sub    BYTE PTR [edi+esi*4+0x77099c6a],dh
  417ac5:	sti    
  417ac6:	xor    eax,0x71
  417ac9:	xchg   ebp,eax
  417aca:	das    
  417acb:	int3   
  417acc:	retf   0xd9d5
  417acf:	mov    eax,0xa9eac88f
  417ad4:	xlat   BYTE PTR ds:[ebx]
  417ad5:	inc    edx
  417ad6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ad7:	ins    BYTE PTR es:[edi],dx
  417ad8:	lods   al,BYTE PTR ds:[esi]
  417ad9:	ds pop ecx
  417adb:	es cwde 
  417add:	dec    esp
  417ade:	add    ch,cl
  417ae0:	hlt    
  417ae1:	xchg   edx,eax
  417ae2:	inc    esi
  417ae3:	(bad)
  417ae7:	retf   0xaa3a
  417aea:	or     BYTE PTR [esi+edx*8],al
  417aed:	sub    eax,0xb8b1911c
  417af2:	gs icebp 
  417af4:	jg     0x417b2a
  417af6:	pusha  
  417af7:	mov    edi,0xca9ed1cc
  417afc:	lds    ebx,FWORD PTR [ecx+0x6f]
  417aff:	loopne 0x417b39
  417b01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b02:	mov    esp,0x25e10828
  417b07:	or     al,0x8a
  417b09:	fistp  QWORD PTR [eax+0x1401ae0f]
  417b0f:	and    BYTE PTR [ebp+edi*1+0x2f],dh
  417b13:	mov    edi,0xa70e5cf9
  417b18:	xchg   edx,eax
  417b19:	or     BYTE PTR [eax+0x66],0x71
  417b1d:	mov    ds:0xbd44dec1,eax
  417b22:	mov    ds:0x53b37f55,al
  417b27:	outs   dx,BYTE PTR ds:[esi]
  417b28:	call   0x31ee:0xa52c6295
  417b2f:	bound  ecx,QWORD PTR [esi-0x8fd7eab]
  417b35:	dec    esi
  417b36:	cwde   
  417b37:	scas   al,BYTE PTR es:[edi]
  417b38:	or     DWORD PTR [ebp+eiz*2+0x63],edi
  417b3c:	imul   esp,DWORD PTR [esi-0x47ea6f56],0x4529a415
  417b46:	icebp  
  417b47:	ins    BYTE PTR es:[edi],dx
  417b48:	fild   QWORD PTR [ebp-0x7aa4f6e8]
  417b4e:	push   ds
  417b4f:	mov    dl,0x11
  417b51:	xchg   esp,eax
  417b52:	sbb    DWORD PTR [esi+esi*1],esp
  417b55:	jne    0x417b77
  417b57:	scas   eax,DWORD PTR es:[edi]
  417b58:	(bad)  
  417b59:	aaa    
  417b5a:	out    dx,eax
  417b5b:	scas   al,BYTE PTR es:[edi]
  417b5c:	adc    eax,0xadcbb3c5
  417b61:	push   ds
  417b62:	les    edi,FWORD PTR [edx+0x2997308d]
  417b68:	je     0x389d4d9d
  417b6e:	out    dx,al
  417b6f:	inc    ebp
  417b70:	jb     0x417b71
  417b72:	inc    edi
  417b73:	lahf   
  417b74:	out    0x3f,al
  417b76:	xor    al,0x16
  417b78:	int3   
  417b79:	fs fwait
  417b7b:	mov    eax,0xbe1f634
  417b80:	sbb    cl,BYTE PTR [ecx+0x7ba0dcb8]
  417b86:	xchg   DWORD PTR [ebx+ebp*2],edi
  417b89:	es add eax,0x134b7c7f
  417b8f:	or     ch,BYTE PTR [ebp-0x7c7ac307]
  417b95:	push   cs
  417b96:	adc    dl,BYTE PTR ds:0xdb59d5be
  417b9c:	sti    
  417b9d:	adc    BYTE PTR [ebp-0x31],0x22
  417ba1:	(bad)  
  417ba2:	sbb    ebx,eax
  417ba4:	dec    edi
  417ba5:	popf   
  417ba6:	(bad)  
  417ba7:	fsubr  st(5),st
  417ba9:	pop    eax
  417bab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bac:	aas    
  417bad:	neg    BYTE PTR [edx+0x51]
  417bb0:	sar    DWORD PTR ds:0xcb96021a,1
  417bb6:	js     0x417b5d
  417bb8:	aam    0x35
  417bba:	(bad)  
  417bbb:	sub    ah,BYTE PTR [ebx-0x642fb08e]
  417bc1:	aam    0xb4
  417bc3:	jo     0x417bde
  417bc5:	cmp    BYTE PTR [edi+ebp*8+0x457cfb26],bl
  417bcc:	popf   
  417bcd:	fdivrp st(0),st
  417bcf:	push   0x70967e99
  417bd4:	(bad)  
  417bd5:	dec    esp
  417bd6:	ds mov dl,0x7c
  417bd9:	xor    BYTE PTR [esi],dl
  417bdb:	(bad)  
  417bdd:	jmp    0x12fd22a9
  417be2:	mov    ah,0x38
  417be4:	fldcw  WORD PTR [ecx-0x1efb4b27]
  417bea:	fnstcw WORD PTR [eax]
  417bec:	stos   DWORD PTR es:[edi],eax
  417bed:	aad    0xe8
  417bef:	push   ds
  417bf0:	push   ecx
  417bf1:	mov    edx,0xc93d02dd
  417bf6:	mov    dl,0xf8
  417bf8:	inc    esp
  417bf9:	mov    ecx,0x92cc30e
  417bfe:	jbe    0x417bf2
  417c00:	push   edi
  417c01:	push   0x67
  417c03:	mov    cs,WORD PTR [eax-0x8]
  417c06:	push   0xffffffa3
  417c08:	cmp    BYTE PTR [esi-0x73],dh
  417c0b:	push   ss
  417c0c:	or     DWORD PTR [ecx-0x1f9d415a],edx
  417c12:	sbb    bl,BYTE PTR [edx+0x1ed9b387]
  417c18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c19:	mov    bh,0xbb
  417c1b:	pop    esp
  417c1c:	cmp    DWORD PTR [edi+ecx*8+0x3],edi
  417c20:	jne    0x417bd0
  417c22:	mov    edi,DWORD PTR [edi]
  417c24:	xchg   edi,eax
  417c25:	mov    esi,0x190dcfb3
  417c2a:	add    eax,0xe7e8af62
  417c2f:	ins    DWORD PTR es:[edi],dx
  417c30:	ins    DWORD PTR es:[edi],dx
  417c31:	(bad)  
  417c33:	sub    BYTE PTR [eax+ebp*4],0xc9
  417c37:	jmp    0x417be2
  417c39:	fstp   QWORD PTR [eax-0x5f84e9ab]
  417c3f:	pop    ss
  417c40:	aaa    
  417c41:	jg     0x417c90
  417c43:	add    ebx,edi
  417c45:	scas   eax,DWORD PTR es:[edi]
  417c46:	inc    esi
  417c47:	out    0x5d,eax
  417c49:	loopne 0x417c7b
  417c4b:	pop    es
  417c4c:	ins    DWORD PTR es:[edi],dx
  417c4d:	pop    es
  417c4e:	clc    
  417c4f:	lods   eax,DWORD PTR ds:[esi]
  417c50:	sbb    ebx,DWORD PTR [esp+ebp*4]
  417c53:	test   BYTE PTR [esi],0xeb
  417c56:	add    eax,0x5786c148
  417c5b:	(bad)  
  417c5c:	mov    cl,0x6a
  417c5e:	dec    esp
  417c5f:	fninit 
  417c61:	push   ds
  417c62:	mov    al,0xf0
  417c64:	xchg   esi,eax
  417c65:	sbb    edi,DWORD PTR [eax]
  417c67:	int3   
  417c68:	imul   ebx,ebx,0x9f875f15
  417c6e:	mov    cl,0xa2
  417c70:	(bad)  
  417c72:	add    BYTE PTR [edi+0xe09d971],ah
  417c78:	(bad)  
  417c79:	push   ds
  417c7a:	inc    esi
  417c7b:	and    DWORD PTR [ebx+0x4f],esi
  417c7e:	mov    esi,0xcc9edaf3
  417c83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c84:	in     al,dx
  417c85:	mov    BYTE PTR [ebx],cl
  417c87:	or     al,0xa3
  417c89:	retf   
  417c8a:	std    
  417c8b:	fst    st(0)
  417c8d:	leave  
  417c8e:	push   ss
  417c8f:	neg    BYTE PTR [ebp+0x2e]
  417c92:	xor    edx,DWORD PTR [eax]
  417c94:	jnp    0x417c29
  417c96:	fwait
  417c97:	retf   
  417c98:	adc    al,0xf3
  417c9a:	hlt    
  417c9b:	dec    ebx
  417c9c:	adc    eax,0x3d68876a
  417ca1:	mov    bl,0x69
  417ca3:	lock mov al,ds:0xc06bcbee
  417ca9:	das    
  417caa:	mov    edi,0x1ffb3fc0
  417caf:	sbb    ebp,ecx
  417cb1:	stos   BYTE PTR es:[edi],al
  417cb2:	ret    0x270f
  417cb5:	mov    bh,0x87
  417cb7:	push   ss
  417cb8:	mov    cl,0xd9
  417cba:	xor    BYTE PTR [eax-0x56],cl
  417cbd:	lods   eax,DWORD PTR ds:[esi]
  417cbe:	jmp    0x6e5ef140
  417cc3:	addr16 test eax,0xec638caf
  417cc9:	cwde   
  417cca:	outs   dx,BYTE PTR ds:[esi]
  417ccb:	ins    BYTE PTR es:[edi],dx
  417ccc:	fimul  WORD PTR [edi-0x1a]
  417ccf:	loop   0x417c86
  417cd1:	fisttp QWORD PTR [edi+0x5e]
  417cd4:	scas   al,BYTE PTR es:[edi]
  417cd5:	mov    al,ds:0x1403690c
  417cda:	out    dx,eax
  417cdb:	mov    ebp,0x72f08186
  417ce0:	sar    BYTE PTR [eax-0x4a],0x15
  417ce4:	sub    dh,BYTE PTR [esi]
  417ce6:	sbb    esi,ecx
  417ce8:	sbb    DWORD PTR [ebx+0x43],esp
  417ceb:	sub    eax,0x3dc4021d
  417cf0:	repnz shl BYTE PTR [edx],cl
  417cf3:	pop    edx
  417cf4:	add    al,0x9
  417cf6:	lahf   
  417cf7:	add    eax,0xa640665
  417cfc:	(bad)  
  417cfd:	sub    DWORD PTR [edx-0x67a061d3],ebp
  417d03:	cli    
  417d04:	jge    0x417d13
  417d06:	inc    edx
  417d07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d08:	mov    BYTE PTR [edi-0x77],dl
  417d0b:	int3   
  417d0c:	and    DWORD PTR [edi+0x49],0x154aa681
  417d13:	int    0xcc
  417d15:	pop    ss
  417d16:	sbb    BYTE PTR [ecx+0x1b2a34b8],ah
  417d1c:	in     al,0x5e
  417d1e:	call   0x795b:0xeb32face
  417d25:	pop    edi
  417d26:	sbb    cl,bh
  417d28:	repz adc bh,dh
  417d2b:	sar    BYTE PTR [esi-0x52ba7559],1
  417d31:	lock jmp 0x53a6d80c
  417d37:	or     eax,0x1a5649f5
  417d3c:	sahf   
  417d3d:	mov    dl,0x73
  417d3f:	shl    BYTE PTR [ebx-0x75],1
  417d42:	jb     0x417d56
  417d44:	inc    esi
  417d45:	fwait
  417d46:	arpl   WORD PTR [eax-0x35],ax
  417d49:	mov    ecx,0x448401f8
  417d4e:	out    dx,al
  417d4f:	sub    dh,BYTE PTR [eax+0x40bbec8d]
  417d55:	es stos DWORD PTR es:[edi],eax
  417d57:	test   al,0x6a
  417d59:	mov    ebx,0xa5e0d019
  417d5e:	int3   
  417d5f:	test   DWORD PTR [ebp+edi*4-0x42f5c84a],eax
  417d66:	pop    esi
  417d67:	push   ebx
  417d68:	mov    dh,0x17
  417d6a:	sbb    al,0x79
  417d6c:	stos   BYTE PTR es:[edi],al
  417d6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d6e:	jmp    0x378b:0xfe0b1390
  417d75:	ret    
  417d76:	sub    ecx,eax
  417d78:	aad    0x17
  417d7a:	ds sahf 
  417d7c:	push   0x5068c5fe
  417d81:	and    dl,BYTE PTR [ebp+0x1]
  417d84:	push   eax
  417d85:	jmp    0xce03:0x4b1e688f
  417d8c:	pop    ds
  417d8d:	push   edi
  417d8e:	or     DWORD PTR [edi+eax*1-0x14],esi
  417d92:	jne    0x417ddc
  417d94:	dec    edi
  417d95:	out    0x1e,eax
  417d97:	sub    ebx,DWORD PTR fs:[ebx-0x6a6bbfc3]
  417d9e:	jb     0x417deb
  417da0:	pop    eax
  417da1:	cmp    edx,DWORD PTR [eax*4-0x4be69b9d]
  417da8:	mov    al,0xa2
  417daa:	cdq    
  417dab:	dec    eax
  417dac:	mov    cl,0x6f
  417dae:	gs retf 0x7bb3
  417db2:	popa   
  417db3:	cmp    ecx,DWORD PTR [ecx+ebx*2]
  417db6:	outs   dx,BYTE PTR ds:[esi]
  417db7:	aam    0x28
  417db9:	sub    ch,dh
  417dbb:	mov    eax,DWORD PTR [ebp-0x24]
  417dbe:	lods   eax,DWORD PTR ds:[esi]
  417dbf:	loop   0x417d66
  417dc1:	and    ah,ah
  417dc3:	inc    edx
  417dc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417dc5:	xchg   edi,eax
  417dc6:	fstp   TBYTE PTR [edx+0x14db12f4]
  417dcc:	cwde   
  417dcd:	adc    eax,0x4ba8e61f
  417dd2:	push   esp
  417dd3:	lea    ebx,[edi]
  417dd5:	lods   eax,DWORD PTR ds:[esi]
  417dd6:	div    BYTE PTR [esi]
  417dd8:	inc    esi
  417dd9:	(bad)  
  417ddb:	xchg   edx,eax
  417ddc:	mov    eax,ds:0xd6b2e025
  417de1:	sbb    DWORD PTR [ebp+ebp*1+0x4b],eax
  417de5:	scas   al,BYTE PTR es:[edi]
  417de6:	or     esp,DWORD PTR [ebx-0x30ae6095]
  417dec:	ficom  WORD PTR [edx+eiz*2+0x7b84da31]
  417df3:	dec    edi
  417df4:	mov    ch,0x6c
  417df6:	outs   dx,DWORD PTR ds:[esi]
  417df7:	fcmovnu st,st(4)
  417df9:	xchg   edx,eax
  417dfa:	adc    ebp,edx
  417dfc:	cmp    eax,DWORD PTR [esi+0x71ff5997]
  417e02:	sbb    esp,esi
  417e04:	dec    ebp
  417e05:	jle    0x417e12
  417e07:	pop    ss
  417e08:	fadd   QWORD PTR [ebx-0x42a8a466]
  417e0e:	xlat   BYTE PTR ds:[ebx]
  417e0f:	retf   0x5940
  417e12:	ins    DWORD PTR es:[edi],dx
  417e13:	sub    BYTE PTR [eax+ebp*4+0x34],al
  417e17:	mov    ds:0x2f8a6027,eax
  417e1c:	inc    edi
  417e1d:	push   cs
  417e1e:	mov    BYTE PTR [edx+edx*8],0xf3
  417e22:	add    ebp,0x51
  417e25:	ds push ebx
  417e27:	in     eax,dx
  417e28:	mov    gs,WORD PTR [ebx]
  417e2a:	loopne 0x417daf
  417e2c:	xor    al,0x2b
  417e2e:	lahf   
  417e2f:	mov    ecx,0xbb61a57d
  417e34:	loopne 0x417ea5
  417e36:	pop    ebx
  417e37:	sbb    BYTE PTR [ecx],cl
  417e39:	mov    ebp,DWORD PTR [ecx]
  417e3b:	cmp    al,0x41
  417e3d:	mov    esp,0x6dc95156
  417e42:	(bad)  
  417e43:	jmp    0x7a74:0x2c744d52
  417e4a:	xor    eax,0xd4c3583f
  417e4f:	test   ch,ah
  417e51:	popf   
  417e52:	ss imul ecx,esp,0xffffffec
  417e56:	popa   
  417e57:	shld   ebx,edx,cl
  417e5a:	lods   al,BYTE PTR ds:[esi]
  417e5b:	pop    esp
  417e5c:	arpl   WORD PTR [ebx+0x76446e26],sp
  417e62:	aas    
  417e63:	mov    eax,ds:0x665734b5
  417e68:	mov    WORD PTR [edx],ss
  417e6a:	cmp    dh,BYTE PTR ds:0x2dcd0bfc
  417e70:	cmp    bh,cl
  417e72:	mov    cl,0x3b
  417e74:	push   0xedf46de6
  417e79:	mov    dl,0xdd
  417e7b:	mov    eax,0x85236ec6
  417e80:	pop    ebp
  417e81:	pop    ebx
  417e82:	je     0x417e89
  417e84:	pop    edi
  417e85:	cmc    
  417e86:	mov    dh,0x23
  417e88:	cmp    ah,dl
  417e8a:	mov    esi,0xa9913f67
  417e8f:	sub    DWORD PTR [edx+0x45],edi
  417e92:	(bad)  [ecx-0x2ab3c076]
  417e98:	xchg   esp,eax
  417e99:	js     0x417ebb
  417e9b:	clc    
  417e9c:	cmp    eax,DWORD PTR [edx]
  417e9e:	rcr    BYTE PTR [eax+0x56],cl
  417ea1:	lds    edi,FWORD PTR [edx+0x63]
  417ea4:	sbb    ebp,DWORD PTR [ebp-0x352705e5]
  417eaa:	int    0xec
  417eac:	fistp  DWORD PTR [ebp+ebp*1+0x44bbe4ea]
  417eb3:	aam    0x38
  417eb5:	and    al,0x68
  417eb7:	ds sbb eax,0x3c177934
  417ebd:	xor    dh,BYTE PTR [eax-0x736795ab]
  417ec3:	ins    BYTE PTR es:[edi],dx
  417ec4:	cmp    DWORD PTR [ebx+ebp*2-0x7],ebp
  417ec8:	cmp    al,0xc3
  417eca:	add    al,0x3f
  417ecc:	add    al,0x9f
  417ece:	xor    al,0xe7
  417ed0:	sbb    DWORD PTR [ecx],esi
  417ed2:	or     BYTE PTR [edi],0x4b
  417ed5:	mov    esi,0x2bbd068a
  417eda:	js     0x417e7c
  417edc:	pop    eax
  417edd:	sub    al,0x30
  417edf:	data16 idiv BYTE PTR [esi+0x38]
  417ee3:	push   0x3d
  417ee5:	mov    ecx,0xdd9c2ea4
  417eea:	mov    bh,ch
  417eec:	adc    ch,BYTE PTR [esi+eiz*4+0xdf6965a]
  417ef3:	xchg   esp,eax
  417ef4:	test   al,0x8e
  417ef6:	inc    edx
  417ef7:	jl     0x417f5d
  417ef9:	mov    ds:0x9435c148,eax
  417efe:	rcr    DWORD PTR [eax+0x33b54bb0],0xed
  417f05:	or     bh,BYTE PTR [ebx+0x59de78b2]
  417f0b:	dec    ebp
  417f0c:	push   edi
  417f0d:	std    
  417f0e:	cdq    
  417f0f:	mov    ds,WORD PTR [eax]
  417f11:	(bad)  
  417f12:	pop    edx
  417f13:	pop    ss
  417f14:	jge    0x417f7b
  417f16:	xor    eax,0x8ce67581
  417f1b:	stos   BYTE PTR es:[edi],al
  417f1c:	nop
  417f1d:	adc    bl,BYTE PTR ds:0xd2c3f603
  417f23:	adc    al,0x13
  417f25:	add    al,0x58
  417f27:	dec    ebp
  417f28:	clc    
  417f29:	jae    0x417fa1
  417f2b:	xchg   ebx,eax
  417f2c:	mov    bl,0x6d
  417f2e:	jecxz  0x417f55
  417f30:	pop    es
  417f31:	adc    ch,cl
  417f33:	retf   0x45d0
  417f36:	es (bad) 
  417f38:	hlt    
  417f39:	cdq    
  417f3a:	std    
  417f3b:	fnsave [eax+ebx*2+0x5b]
  417f3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f40:	sub    eax,0xb6f01037
  417f45:	and    BYTE PTR [edx],0x67
  417f48:	pusha  
  417f49:	sbb    edx,DWORD PTR [esp-0x1b]
  417f4d:	inc    eax
  417f4e:	sub    BYTE PTR [ebp+0x351cb3ac],dh
  417f54:	pop    es
  417f55:	in     eax,0x73
  417f57:	jnp    0x417f64
  417f59:	inc    esi
  417f5a:	imul   eax,DWORD PTR [ebp-0x2e4f2888],0xffffff9c
  417f61:	xor    al,0xed
  417f63:	jle    0x417f6e
  417f65:	in     eax,dx
  417f66:	jecxz  0x417f2a
  417f68:	mov    eax,ds:0x3b9e77b9
  417f6d:	mov    ebp,0xed9f7f11
  417f72:	test   DWORD PTR [esi+0x3f517571],esp
  417f78:	jg     0x417f33
  417f7a:	adc    DWORD PTR [eax+edx*2-0x35],esp
  417f7e:	jg     0x417fd6
  417f80:	adc    DWORD PTR [ebp-0x3b185c32],ebx
  417f86:	shl    ebx,1
  417f88:	pop    ds
  417f89:	pop    ebx
  417f8a:	mov    bl,0xff
  417f8c:	aaa    
  417f8d:	bound  esi,QWORD PTR [ecx]
  417f8f:	inc    eax
  417f90:	ins    BYTE PTR es:[edi],dx
  417f91:	sub    eax,0x10b7e0d8
  417f96:	jp     0x417f6f
  417f98:	fs push ecx
  417f9a:	(bad)  
  417f9b:	sbb    eax,0xd5762867
  417fa0:	and    DWORD PTR [ecx-0x22],0xfddba5f8
  417fa7:	inc    edi
  417fa8:	pop    edi
  417fa9:	inc    edx
  417faa:	lahf   
  417fab:	test   DWORD PTR [edi+eax*2],esp
  417fae:	(bad)  [ebx+esi*8+0x7d]
  417fb2:	in     eax,dx
  417fb3:	jns    0x417f57
  417fb5:	ret    
  417fb6:	jmp    0x28e65bf4
  417fbb:	int    0x1b
  417fbd:	loop   0x417fda
  417fbf:	jae    0x418020
  417fc1:	and    DWORD PTR [ecx-0x777c6f70],ebx
  417fc7:	shl    BYTE PTR [ebp+0x462cfd10],1
  417fcd:	in     al,dx
  417fce:	je     0x417fdd
  417fd0:	not    DWORD PTR [esp+edi*1]
  417fd3:	xchg   esi,eax
  417fd4:	push   ebp
  417fd5:	in     al,0xff
  417fd7:	and    al,0x66
  417fd9:	xchg   ebx,eax
  417fda:	mov    WORD PTR [eax],?
  417fdc:	fs ret 
  417fde:	test   al,0x9c
  417fe0:	and    DWORD PTR [edx-0x2b4240e2],edi
  417fe6:	sub    BYTE PTR ss:[ecx+0x73],al
  417fea:	pop    ss
  417feb:	dec    esp
  417fec:	or     al,dl
  417fee:	aas    
  417fef:	nop
  417ff0:	div    BYTE PTR [ebx-0x975bece]
  417ff6:	adc    BYTE PTR [eax],ah
  417ff8:	ins    DWORD PTR es:[edi],dx
  417ff9:	mov    eax,eax
  417ffb:	cwde   
  417ffc:	mov    esi,0xe336c47f
  418001:	mov    WORD PTR ss:[ebx],ss
  418004:	nop
  418005:	add    al,0x3
  418007:	mov    al,0x5
  418009:	jle    0x417fa5
  41800b:	(bad)  
  41800c:	mov    cl,0x35
  41800e:	ret    
  41800f:	xchg   edi,eax
  418010:	mov    ds:0xa7b2fd65,al
  418015:	dec    edx
  418016:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418017:	sbb    al,0xed
  418019:	rcl    BYTE PTR [eax],1
  41801b:	inc    esp
  41801c:	jle    0x418017
  41801e:	sub    ch,BYTE PTR [edi]
  418020:	pop    edi
  418021:	addr16 sbb eax,0x3db6ab60
  418027:	cli    
  418028:	daa    
  418029:	js     0x417fd8
  41802b:	pop    eax
  41802c:	in     al,0x9d
  41802e:	sub    DWORD PTR [edx-0x7d8e64da],ebp
  418034:	pop    ds
  418035:	in     eax,0x88
  418037:	adc    al,0xaa
  418039:	jnp    0x8209d24e
  41803f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418040:	mov    bh,0xb9
  418042:	std    
  418043:	clc    
  418044:	sub    BYTE PTR [ebx+0x3e4c17ab],dh
  41804a:	data16 xlat BYTE PTR ds:[ebx]
  41804c:	xchg   BYTE PTR [edi],dl
  41804e:	stos   DWORD PTR es:[edi],eax
  41804f:	cli    
  418050:	sbb    ch,BYTE PTR ds:0x1e11fa4b
  418056:	cli    
  418057:	push   0x7600e787
  41805c:	mov    BYTE PTR [edi+0x0],ch
  41805f:	jg     0x4180c7
  418061:	xchg   ecx,eax
  418062:	int3   
  418063:	nop
  418064:	ficom  WORD PTR [eax+0x42]
  418067:	cmp    dl,BYTE PTR [edx]
  418069:	jbe    0x418024
  41806b:	inc    ebp
  41806c:	xchg   ebp,eax
  41806d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41806e:	imul   esi,DWORD PTR [esi+eiz*8-0x43131d15],0x1
  418076:	mov    esp,0xfe608258
  41807b:	(bad)  
  41807c:	mov    ds:0x49001a52,eax
  418081:	push   ebx
  418082:	call   0x662ff7b4
  418087:	scas   eax,DWORD PTR es:[edi]
  418088:	jb     0x41801d
  41808a:	and    bh,BYTE PTR [eax+0x1b6eea3e]
  418090:	add    BYTE PTR [edx+0x32],bl
  418093:	jle    0x41809f
  418095:	imul   edi,DWORD PTR [esi],0x71
  418098:	push   es
  418099:	inc    ecx
  41809a:	arpl   WORD PTR [edi+0x7b5d8b82],dx
  4180a0:	ja     0x4180df
  4180a2:	call   0x251f:0x7a8e15b1
  4180a9:	jecxz  0x4180a4
  4180ab:	lahf   
  4180ac:	arpl   WORD PTR [edi],si
  4180ae:	inc    ebp
  4180af:	pop    edi
  4180b0:	mov    bl,0x56
  4180b2:	mov    cs,WORD PTR [esi]
  4180b4:	imul   edx,DWORD PTR [edx+0x62710c9a],0x549292bf
  4180be:	jb     0x418066
  4180c0:	sbb    DWORD PTR [ebx+0x43],esp
  4180c3:	sub    al,0x86
  4180c5:	loop   0x41812b
  4180c7:	jl     0x4180ac
  4180c9:	or     cl,BYTE PTR [eax-0xa]
  4180cc:	pinsrw mm0,esp,0xfa
  4180d0:	inc    ebp
  4180d1:	test   DWORD PTR [esi+0x7a],ebp
  4180d4:	push   es
  4180d5:	aam    0x42
  4180d7:	jo     0x418096
  4180d9:	cmp    eax,0x4b33ae67
  4180de:	adc    eax,0x4ce52b39
  4180e3:	xor    eax,0x92477c6
  4180e8:	ror    BYTE PTR [edx],1
  4180ea:	mov    ecx,0xa7d3bfe6
  4180ef:	dec    ebp
  4180f0:	inc    eax
  4180f1:	rcr    DWORD PTR [ecx-0x2656d3eb],1
  4180f7:	mov    esi,0x7f7fffaf
  4180fc:	cmp    eax,0x3cf5dfbe
  418101:	ret    
  418102:	mov    dh,0x40
  418104:	push   esi
  418105:	jnp    0x41808e
  418107:	mov    ch,0x5f
  418109:	fst    QWORD PTR [edx+0x6f4867c1]
  41810f:	fcom   QWORD PTR [edi+0xa]
  418112:	int3   
  418113:	inc    edi
  418114:	fcom   DWORD PTR [eax-0x3d80e434]
  41811a:	or     bh,ah
  41811c:	mov    bl,0x53
  41811e:	or     edx,esp
  418120:	or     BYTE PTR [esi+0x45],ah
  418123:	jbe    0x41818b
  418125:	mov    dh,0x7f
  418127:	ss enter 0xe2e7,0x2a
  41812c:	add    DWORD PTR [edi],esp
  41812e:	mov    esi,DWORD PTR [edi-0x35ca5588]
  418134:	mov    ebp,cr4
  418137:	xor    bl,0xa
  41813a:	and    ecx,ebp
  41813c:	xor    eax,0x207415b
  418141:	cs jnp 0x418190
  418144:	sti    
  418145:	aaa    
  418146:	retf   0xa945
  418149:	pop    ebx
  41814a:	inc    edi
  41814b:	leave  
  41814c:	cs sub al,0x15
  41814f:	std    
  418150:	adc    bl,BYTE PTR [edi]
  418152:	xlat   BYTE PTR ds:[ebx]
  418153:	pop    esp
  418154:	dec    esi
  418155:	ins    DWORD PTR es:[edi],dx
  418156:	sbb    ch,BYTE PTR [eax-0xe]
  418159:	lock mov ah,0x26
  41815c:	xor    DWORD PTR [eax+ebx*4-0x8bcb1e6],edi
  418163:	(bad)  
  418165:	pop    edx
  418166:	dec    edx
  418167:	sahf   
  418168:	fidiv  WORD PTR [ecx]
  41816a:	jne    0x418147
  41816c:	jno    0x418137
  41816e:	fnstcw WORD PTR [edx+edi*1]
  418171:	jns    0x4181ab
  418173:	adc    DWORD PTR [eax+0x48],esp
  418176:	sub    BYTE PTR [edx-0x42],0x81
  41817a:	mov    bl,0x41
  41817c:	std    
  41817d:	push   esi
  41817e:	cmc    
  41817f:	adc    eax,0xb7a9b01
  418184:	push   edx
  418185:	sub    DWORD PTR [ebx+0x1cc912ff],0xc2b75813
  41818f:	xchg   BYTE PTR [ebp-0x56278621],bl
  418195:	jmp    0x418216
  418197:	aad    0xa0
  418199:	mov    ds,WORD PTR [ebp-0x23e4bb1b]
  41819f:	aam    0x41
  4181a1:	pop    eax
  4181a2:	mov    ds:0xaefa5125,al
  4181a7:	ds jmp 0xdc534128
  4181ad:	in     al,dx
  4181ae:	loop   0x41817e
  4181b0:	fstp   QWORD PTR [ecx]
  4181b2:	sub    BYTE PTR [esi+0x2e8288d7],dl
  4181b8:	imul   ebp,DWORD PTR [ebx],0x7a
  4181bb:	inc    ecx
  4181bc:	lds    ebx,FWORD PTR [ecx]
  4181be:	int3   
  4181bf:	imul   esp,DWORD PTR [edi+0x51b7f043],0x1a
  4181c6:	mov    ecx,0x79ec4073
  4181cb:	(bad)  
  4181cc:	cwde   
  4181cd:	jo     0x418227
  4181cf:	test   BYTE PTR [ecx+esi*1-0x51],ch
  4181d3:	sbb    BYTE PTR [eax-0x14],dl
  4181d6:	lock mov ebx,0xef3c683b
  4181dc:	int    0x8
  4181de:	retf   0x55f
  4181e1:	in     al,0x8f
  4181e3:	cwde   
  4181e4:	jle    0x41824e
  4181e6:	std    
  4181e7:	cmp    DWORD PTR [eax],ebp
  4181e9:	rol    DWORD PTR [ecx+0x7ecd81f],0x89
  4181f0:	and    dh,cl
  4181f2:	xor    edx,DWORD PTR [ebp+0x7a762c86]
  4181f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181f9:	aam    0xf5
  4181fb:	mov    ebp,0xdac73f17
  418200:	out    dx,al
  418201:	in     eax,dx
  418202:	mov    edx,0x1bc558da
  418207:	and    DWORD PTR [eax+0x61336d97],ebx
  41820d:	add    eax,0xbe7c6846
  418212:	jnp    0x41823b
  418214:	mov    ecx,0x65d7c67f
  418219:	and    esp,esp
  41821b:	cwde   
  41821c:	mov    gs,WORD PTR [eax]
  41821e:	jno    0x418213
  418220:	mov    esi,0x9e53ac17
  418225:	sub    bh,0x7f
  418228:	jbe    0x418230
  41822a:	sub    DWORD PTR [edi-0x3e],0xffffffe3
  41822e:	cmp    al,0x80
  418230:	or     DWORD PTR ds:0x4fbe20f5,0x56
  418237:	(bad)  
  418238:	push   ecx
  418239:	hlt    
  41823a:	jns    0x41821e
  41823c:	adc    edi,ebx
  41823e:	xor    DWORD PTR [eax+0x205e99a8],0x42
  418245:	jnp    0x4181dd
  418247:	mov    ds:0xb8c61d3a,eax
  41824c:	pop    ecx
  41824d:	sbb    ah,BYTE PTR [edx-0x5f]
  418250:	mov    bh,BYTE PTR [edi]
  418252:	mov    ah,0x72
  418254:	int    0x1
  418256:	fisub  WORD PTR ds:0x5e0e7578
  41825c:	pop    esp
  41825d:	and    dl,0x69
  418260:	sub    ecx,DWORD PTR [edi+0x7e]
  418263:	and    edi,DWORD PTR fs:[ebx-0x7f6f0e2a]
  41826a:	jg     0x4182cd
  41826c:	mov    al,ds:0xcce8723d
  418271:	ins    BYTE PTR es:[edi],dx
  418272:	stos   BYTE PTR es:[edi],al
  418273:	inc    esp
  418274:	repz jno 0x418211
  418277:	(bad)  
  418278:	mov    ds:0x5c93a641,al
  41827d:	jmp    0xab10:0x77f56529
  418284:	inc    edx
  418285:	in     eax,0x1d
  418287:	fmul   DWORD PTR [eax-0x58ef3c43]
  41828d:	push   edx
  41828e:	cmp    eax,0x5cdfb7bd
  418293:	(bad)  
  418294:	imul   edx,DWORD PTR [esp+eax*4+0x37157602],0x76
  41829c:	mov    al,ds:0xca2d35eb
  4182a1:	mov    dh,0x53
  4182a3:	out    dx,al
  4182a4:	pop    eax
  4182a5:	out    dx,eax
  4182a6:	ins    BYTE PTR es:[edi],dx
  4182a7:	(bad)  
  4182a9:	loop   0x418312
  4182ab:	inc    esp
  4182ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182ad:	sub    DWORD PTR [ecx],eax
  4182af:	retf   
  4182b0:	pop    es
  4182b1:	popf   
  4182b2:	or     eax,0x9734f252
  4182b7:	cld    
  4182b8:	nop
  4182b9:	sub    DWORD PTR [ebp+0x37],edi
  4182bc:	add    DWORD PTR [esi+ebp*2-0x67c0385b],eax
  4182c3:	jg     0x418279
  4182c5:	push   0x5b
  4182c7:	rcr    DWORD PTR [edx-0x6e999d45],cl
  4182cd:	test   al,0x10
  4182cf:	sbb    DWORD PTR [esi+0x43],esi
  4182d2:	fwait
  4182d3:	xor    dh,BYTE PTR ds:0x112bc392
  4182d9:	aaa    
  4182da:	jmp    0x4182c7
  4182dc:	and    eax,0x2459756e
  4182e1:	test   al,0xd2
  4182e3:	repnz int 0xde
  4182e6:	test   DWORD PTR [edx],eax
  4182e8:	mov    edi,0x49dd163a
  4182ed:	sar    DWORD PTR [edx-0x4d00bcef],cl
  4182f3:	ja     0x418357
  4182f5:	mov    esi,0x2e579233
  4182fa:	shl    DWORD PTR [eax+0x37],1
  4182fd:	out    0x4,al
  4182ff:	adc    ah,ah
  418301:	call   FWORD PTR [ebx+eax*4+0x64]
  418305:	jge    0x4182a9
  418307:	adc    ch,BYTE PTR [edx+0x37937f9d]
  41830d:	pusha  
  41830e:	add    esp,DWORD PTR [ebp+0x4b37cf41]
  418314:	mov    ecx,0xa7cdf7fb
  418319:	mov    edi,0xb4f8542c
  41831e:	arpl   bp,dx
  418320:	and    BYTE PTR [esi-0x6a2aa715],ch
  418326:	mov    edx,0xf9474abf
  41832b:	and    eax,0x1d21e519
  418330:	int3   
  418331:	dec    ebx
  418332:	pop    edx
  418333:	mov    al,0x8
  418335:	push   edi
  418336:	sub    BYTE PTR [esi],bl
  418338:	mov    edi,0x9c094dfa
  41833d:	std    
  41833e:	pop    esp
  41833f:	test   eax,edi
  418341:	bound  eax,QWORD PTR [eax+ebx*4]
  418344:	fisttp DWORD PTR [esi+0x14577957]
  41834a:	sti    
  41834b:	xlat   BYTE PTR ds:[ebx]
  41834c:	cwde   
  41834d:	dec    BYTE PTR [ebx+0x37a7dab2]
  418353:	and    esi,DWORD PTR [eax+0x3f]
  418356:	and    cl,BYTE PTR [eax+0x17]
  418359:	add    esp,ebx
  41835b:	adc    BYTE PTR fs:[eax+eiz*2],ah
  41835f:	ds push esi
  418361:	cmp    esp,DWORD PTR [eax]
  418363:	sbb    al,BYTE PTR [ebp+0x14]
  418366:	popa   
  418367:	stos   DWORD PTR es:[edi],eax
  418368:	inc    edi
  418369:	push   ss
  41836a:	shr    dh,0xb8
  41836d:	mov    esp,0xdcecf3e0
  418372:	in     eax,dx
  418373:	in     eax,dx
  418374:	outs   dx,DWORD PTR ds:[esi]
  418375:	and    ecx,DWORD PTR [ecx+0x4815b53]
  41837b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41837c:	das    
  41837d:	jp     0x4183e2
  41837f:	sbb    bl,0xae
  418382:	xor    ch,BYTE PTR [ebx+0xf68582e]
  418388:	adc    eax,0xcb4f9a02
  41838d:	mov    dl,0x9f
  41838f:	and    eax,DWORD PTR [edi+0x54a8b01b]
  418395:	mov    edi,0xd1d4d46a
  41839a:	adc    ah,BYTE PTR [edx-0xd6421c1]
  4183a0:	inc    edi
  4183a1:	adc    eax,DWORD PTR [ebp-0x51]
  4183a4:	xor    ah,ch
  4183a6:	inc    esp
  4183a7:	sbb    al,0xd7
  4183a9:	lds    esi,FWORD PTR [esi]
  4183ab:	inc    edx
  4183ac:	lds    ebp,FWORD PTR [eax+0x7b6bc931]
  4183b2:	push   ebp
  4183b3:	cld    
  4183b4:	in     al,0x32
  4183b6:	mov    dl,BYTE PTR [edi]
  4183b8:	mov    ch,0xd8
  4183ba:	int    0xc2
  4183bc:	jns    0x418396
  4183be:	or     al,0xbb
  4183c0:	inc    ebp
  4183c1:	inc    esp
  4183c2:	sub    edx,DWORD PTR ds:0x27dd7433
  4183c8:	push   0xabb6cd6d
  4183cd:	jp     0x418423
  4183cf:	pop    ss
  4183d0:	push   es
  4183d1:	mov    al,ds:0x95db5ecd
  4183d6:	mov    edx,0x3842b03a
  4183db:	pop    ebp
  4183dc:	sub    DWORD PTR [ebp-0x1c],ebp
  4183df:	xchg   DWORD PTR [eax+0x14],ebp
  4183e2:	cdq    
  4183e3:	fcomp  QWORD PTR [esi]
  4183e5:	shr    BYTE PTR [ebx-0x62],1
  4183e8:	or     ecx,eax
  4183ea:	mov    dl,0xe5
  4183ec:	out    dx,al
  4183ed:	push   ebp
  4183ee:	in     eax,0x8e
  4183f0:	sub    BYTE PTR [ebp+0x51],ah
  4183f3:	sub    cl,BYTE PTR [ebp+0x52]
  4183f6:	xchg   ebp,eax
  4183f7:	xor    dl,BYTE PTR [edi]
  4183f9:	jae    0x418430
  4183fb:	adc    DWORD PTR [ebp+0x3c],esp
  4183fe:	data16 jecxz 0x418432
  418401:	or     DWORD PTR [eax-0x5b],0xffffffb7
  418405:	inc    esi
  418406:	fdiv   st,st(5)
  418408:	push   ecx
  418409:	arpl   WORD PTR [edx-0x26378888],di
  41840f:	add    eax,0xeb6ae96c
  418414:	jl     0x4183a3
  418416:	ins    DWORD PTR es:[edi],dx
  418417:	das    
  418418:	es push cs
  41841a:	inc    edx
  41841b:	(bad)  
  41841c:	fcom   QWORD PTR [ecx]
  41841e:	mov    dl,0xa2
  418420:	jb     0x418409
  418422:	xor    eax,0xa9ff1699
  418427:	ret    0x4b31
  41842a:	and    eax,0xd8ad169d
  41842f:	sbb    BYTE PTR [ecx+0x48c94594],ah
  418435:	add    BYTE PTR [edx+esi*1-0x31],ch
  418439:	fisttp QWORD PTR [ebx]
  41843b:	rcl    DWORD PTR [ecx+0x4e],cl
  41843e:	or     al,0xda
  418440:	das    
  418441:	add    BYTE PTR [eax-0x696cd92c],dl
  418447:	lock or DWORD PTR [eax+0x19f88ab7],ecx
  41844e:	jb     0x41845d
  418450:	add    al,0x71
  418452:	add    eax,0xc3a1c73e
  418457:	in     al,0x8b
  418459:	bound  eax,QWORD PTR [ebx+edx*8+0x79f753d2]
  418460:	push   cs
  418461:	inc    esp
  418462:	sbb    dl,al
  418464:	stos   DWORD PTR es:[edi],eax
  418465:	scas   eax,DWORD PTR es:[edi]
  418466:	mov    al,0xe5
  418468:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418469:	cmp    eax,0xc836cc07
  41846e:	xlat   BYTE PTR ds:[ebx]
  41846f:	push   esi
  418470:	mov    ds:0xd1608331,al
  418475:	xchg   BYTE PTR [edx],cl
  418477:	fcomp  st(2)
  418479:	or     al,bl
  41847b:	dec    eax
  41847c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41847d:	cld    
  41847e:	dec    ecx
  41847f:	adc    al,0x4b
  418481:	(bad)  
  418483:	mov    cl,0x83
  418485:	(bad)  
  418486:	adc    ebp,edx
  418488:	jo     0x41842c
  41848a:	inc    edi
  41848b:	js     0x418420
  41848d:	cwde   
  41848e:	mov    BYTE PTR [edx+esi*1],0x8a
  418492:	dec    edi
  418493:	jae    0x4184c4
  418495:	mov    BYTE PTR [edx-0xda82349],dl
  41849b:	std    
  41849c:	inc    edi
  41849d:	pop    ebp
  41849e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41849f:	pop    edi
  4184a0:	dec    esp
  4184a1:	push   cs
  4184a2:	repnz fmul QWORD PTR [ebx+0x4e]
  4184a6:	jb     0x4184a7
  4184a8:	jle    0x41850a
  4184aa:	repz mov fs,WORD PTR [eax]
  4184ad:	xchg   edx,eax
  4184af:	out    dx,al
  4184b0:	pop    es
  4184b1:	aas    
  4184b2:	push   esi
  4184b3:	mov    ss,WORD PTR [ebx-0x4538cd5c]
  4184b9:	jae    0x4184ae
  4184bb:	cmp    ebp,ecx
  4184bd:	shl    edx,cl
  4184bf:	inc    ebp
  4184c0:	push   cs
  4184c1:	or     bh,BYTE PTR fs:[ebx+0x4d92b3a9]
  4184c8:	jmp    0xcaa:0x869da0f6
  4184cf:	stos   DWORD PTR es:[edi],eax
  4184d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184d1:	mov    cl,0x1d
  4184d3:	(bad)  
  4184d4:	fnstsw WORD PTR ds:0x1d85b7a4
  4184da:	xor    BYTE PTR [esi-0x422c21f6],0x94
  4184e1:	loope  0x4184d7
  4184e3:	adc    cl,BYTE PTR [eax+ebx*1-0x3f]
  4184e7:	jbe    0x41850e
  4184e9:	dec    ecx
  4184ea:	test   DWORD PTR [esi+0x3d],ebx
  4184ed:	cmc    
  4184ee:	mov    dl,0x4f
  4184f0:	dec    ecx
  4184f1:	push   ecx
  4184f2:	sbb    eax,0xc7d97117
  4184f7:	push   edi
  4184f8:	fmul   st,st(2)
  4184fa:	fiadd  WORD PTR [ecx+ecx*1+0x4ecef1e1]
  418501:	jae    0x418526
  418503:	jb     0x418522
  418505:	in     al,0x36
  418507:	in     eax,0x1f
  418509:	jb     0x4184e6
  41850b:	test   al,0xce
  41850d:	jns    0x418563
  41850f:	cli    
  418510:	mov    bl,0x5b
  418512:	pop    ss
  418513:	ror    BYTE PTR [edi-0x3f],1
  418516:	nop
  418517:	aad    0x69
  418519:	fld    DWORD PTR [ecx+0x5b]
  41851c:	pop    ebp
  41851d:	fist   DWORD PTR [esi+ecx*8]
  418520:	pop    edx
  418521:	or     esp,esi
  418523:	xor    eax,DWORD PTR [esi]
  418525:	sub    eax,DWORD PTR [esi]
  418527:	or     al,0x6d
  418529:	rcl    DWORD PTR [ebx+0x12cd05d9],cl
  41852f:	aam    0x83
  418531:	inc    ebx
  418532:	push   ss
  418533:	aad    0x6
  418535:	into   
  418536:	push   edi
  418537:	cmp    al,ah
  418539:	int3   
  41853a:	lds    ebx,FWORD PTR [edx+0x44]
  41853d:	lock scas al,BYTE PTR es:[edi]
  41853f:	pop    eax
  418540:	push   DWORD PTR [eax-0x6044a33b]
  418546:	or     eax,DWORD PTR ds:0xd2aaae6d
  41854c:	and    eax,0xb95dc989
  418551:	adc    ebp,DWORD PTR [ecx-0x69]
  418554:	and    al,0x97
  418556:	xor    ebx,DWORD PTR ds:0x8f0f14e
  41855c:	setns  BYTE PTR [eax+0x7909c604]
  418563:	adc    edi,eax
  418565:	out    0xcd,eax
  418567:	pop    eax
  418568:	hlt    
  418569:	inc    ebx
  41856a:	sar    cl,0x34
  41856d:	adc    edi,DWORD PTR [edi]
  41856f:	adc    DWORD PTR ds:0xc9c3e574,ebx
  418575:	fcomi  st,st(3)
  418577:	xchg   ebx,eax
  418578:	xor    ebp,DWORD PTR [eax-0x6a]
  41857b:	and    ah,BYTE PTR [esi+0x11d49597]
  418581:	mov    cl,0xdc
  418583:	mov    ds:0xdccfe4fb,al
  418588:	and    eax,0x792ceafe
  41858d:	fwait
  41858e:	push   cs
  41858f:	xor    DWORD PTR [ebx+0x55],esi
  418592:	xchg   bl,ah
  418594:	jo     0x41860c
  418596:	in     al,0x93
  418598:	cld    
  418599:	imul   edx,DWORD PTR ds:0x55aaceb1,0x32
  4185a0:	sahf   
  4185a1:	sbb    al,0x66
  4185a3:	xor    ah,BYTE PTR [bp-0x5d26]
  4185a8:	retf   0x7e5f
  4185ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185ac:	jb     0x4185e4
  4185ae:	pop    ebp
  4185af:	cmp    DWORD PTR [edx+0x49],0xffffff9e
  4185b3:	push   ss
  4185b4:	aas    
  4185b5:	outs   dx,DWORD PTR ds:[esi]
  4185b6:	loopne 0x418567
  4185b8:	std    
  4185b9:	push   esi
  4185ba:	jecxz  0x4185ca
  4185bc:	mov    cl,0xbc
  4185be:	ja     0x4185a6
  4185c0:	cld    
  4185c1:	ins    DWORD PTR es:[edi],dx
  4185c2:	xchg   esi,eax
  4185c3:	adc    al,0xf9
  4185c5:	ins    DWORD PTR es:[edi],dx
  4185c6:	repnz loopne 0x4185e2
  4185c9:	test   DWORD PTR [edx-0x2],ecx
  4185cc:	gs jmp 0x866a74c9
  4185d2:	push   cs
  4185d3:	sub    DWORD PTR [ebx],ebx
  4185d5:	cmp    ah,BYTE PTR [edx-0x4e4894f3]
  4185db:	test   dl,dh
  4185dd:	jg     0x418634
  4185df:	add    al,0x95
  4185e1:	dec    esi
  4185e2:	push   es
  4185e3:	test   BYTE PTR [ecx-0x1f],bl
  4185e6:	aam    0xe2
  4185e8:	(bad)  
  4185ea:	lea    ebx,[eax+0x72184f4c]
  4185f0:	outs   dx,DWORD PTR ds:[esi]
  4185f1:	(bad)  
  4185f2:	fisub  WORD PTR [esi-0x78e51002]
  4185f8:	push   0xffd7b834
  4185fd:	sub    ah,BYTE PTR [edx+0x4b380ba4]
  418603:	xchg   ebp,eax
  418604:	push   ebp
  418605:	popa   
  418606:	nop
  418607:	sub    BYTE PTR [edx-0x4629b2c5],ch
  41860d:	sbb    BYTE PTR [edx],bl
  41860f:	add    DWORD PTR [eax],eax
  418611:	pop    ecx
  418612:	outs   dx,DWORD PTR ds:[esi]
  418613:	push   0xa6b736ae
  418618:	ins    DWORD PTR es:[edi],dx
  418619:	inc    edx
  41861a:	and    DWORD PTR [edx-0x30],ecx
  41861d:	stc    
  41861e:	lea    ebx,[edx-0x719c9fc5]
  418624:	push   ds
  418625:	fadd   QWORD PTR fs:[edi]
  418628:	push   cs
  418629:	adc    al,0x37
  41862b:	add    eax,0x1c28eda3
  418630:	popa   
  418631:	rcr    DWORD PTR ds:0xb8d7e6ba,1
  418637:	mov    dh,0xfe
  418639:	mov    eax,ds:0x73c22a1a
  41863e:	sti    
  41863f:	dec    esi
  418640:	loop   0x418608
  418642:	lods   eax,DWORD PTR ds:[esi]
  418643:	xlat   BYTE PTR ds:[ebx]
  418644:	xor    eax,0x6a6dfafd
  418649:	and    eax,0x400cf9e8
  41864e:	jg     0x418634
  418650:	xchg   ebx,eax
  418651:	or     DWORD PTR [ebx+edi*4],esp
  418654:	or     DWORD PTR [esi+0x36],esp
  418657:	mov    WORD PTR [ebx-0x21a6a1b7],ds
  41865d:	(bad)  
  41865e:	adc    BYTE PTR [ebp-0x64],bh
  418661:	sahf   
  418662:	lar    ebp,si
  418665:	mov    dh,0xc6
  418667:	push   ebp
  418668:	cs pop ecx
  41866a:	pop    ebp
  41866b:	sahf   
  41866c:	jns    0x41861f
  41866e:	int3   
  41866f:	ins    BYTE PTR es:[edi],dx
  418670:	mov    cl,BYTE PTR [edi]
  418672:	es xchg edi,eax
  418674:	mov    esp,0x485025b3
  418679:	mov    DWORD PTR [ebx+0x6a572640],esi
  41867f:	xchg   ebx,eax
  418680:	rdmsr  
  418682:	in     al,0xd
  418684:	in     eax,0xff
  418686:	les    esi,FWORD PTR [edi-0x21]
  418689:	(bad)  
  41868a:	aad    0x6a
  41868c:	scas   al,BYTE PTR es:[edi]
  41868d:	mov    WORD PTR [edx+0x71539037],gs
  418693:	in     eax,0x52
  418695:	sbb    DWORD PTR [ebx+ebp*8-0x4e9e748],0xe8d695a8
  4186a0:	adc    eax,0x7f1674cb
  4186a5:	int    0x98
  4186a7:	outs   dx,BYTE PTR ds:[esi]
  4186a8:	xchg   ebx,eax
  4186a9:	pop    ebp
  4186aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186ab:	popf   
  4186ac:	(bad)  
  4186ad:	cli    
  4186ae:	scas   al,BYTE PTR es:[edi]
  4186af:	int    0x88
  4186b1:	xor    ah,BYTE PTR [edx]
  4186b3:	jbe    0x41872a
  4186b5:	xchg   edi,eax
  4186b6:	rcl    edi,0x46
  4186b9:	push   0xcf307167
  4186be:	adc    bl,BYTE PTR ds:0xa78b161c
  4186c4:	in     al,0x9e
  4186c6:	sti    
  4186c7:	push   ds
  4186c8:	push   esi
  4186c9:	xor    ebp,DWORD PTR [edx+0x1d]
  4186cc:	push   ecx
  4186cd:	cdq    
  4186ce:	push   esp
  4186cf:	pop    esp
  4186d0:	addr16 cmp eax,0x9c5dced1
  4186d6:	daa    
  4186d7:	and    al,0xfa
  4186d9:	inc    ebx
  4186da:	xchg   edx,eax
  4186db:	mov    edi,0x63b012ce
  4186e0:	inc    esp
  4186e1:	pop    ebp
  4186e2:	add    DWORD PTR [edx+0x2b],ebp
  4186e5:	lods   al,BYTE PTR ds:[esi]
  4186e6:	xor    ecx,DWORD PTR [esi]
  4186e8:	dec    ecx
  4186e9:	mov    dl,0xae
  4186eb:	clc    
  4186ec:	leave  
  4186ed:	cdq    
  4186ee:	cli    
  4186ef:	push   ecx
  4186f0:	xchg   BYTE PTR ds:0xfd5f7146,dh
  4186f6:	sbb    eax,0x5dc25ec
  4186fb:	pop    es
  4186fc:	daa    
  4186fd:	xchg   edi,eax
  4186fe:	addr16 xchg esi,eax
  418700:	mov    dh,BYTE PTR [ebp-0x52]
  418703:	iret   
  418704:	mov    edx,0x60f99cf7
  418709:	cmp    esi,edi
  41870b:	pop    ebp
  41870c:	mov    al,ds:0x804f3b4b
  418711:	add    al,0xa3
  418713:	xchg   edx,eax
  418714:	jns    0x418757
  418716:	cs test ecx,edx
  418719:	ret    0x2a66
  41871c:	xchg   esp,eax
  41871d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41871e:	cmp    DWORD PTR [eax+0x4bf76fc6],ebp
  418724:	mov    ecx,0x409fd731
  418729:	pop    ebx
  41872a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41872b:	sahf   
  41872c:	ret    
  41872d:	and    BYTE PTR [esi+0x12],bh
  418730:	out    0xab,al
  418732:	inc    ebp
  418733:	js     0x41874e
  418735:	(bad)  
  418736:	into   
  418737:	dec    edi
  418738:	mov    ch,0xdb
  41873a:	pushf  
  41873b:	into   
  41873c:	jo     0x4186e5
  41873e:	xchg   ecx,eax
  41873f:	stos   BYTE PTR es:[edi],al
  418740:	adc    BYTE PTR [esi+0x498146be],cl
  418746:	mov    cl,0x32
  418748:	push   DWORD PTR [esi-0x3]
  41874b:	bnd ret 
  41874d:	cdq    
  41874e:	xor    BYTE PTR [ecx-0x7b],ch
  418751:	xchg   ecx,eax
  418752:	dec    ebp
  418753:	mov    esi,0xe8f61ec5
  418758:	data16 jle 0x41879b
  41875b:	cmp    dh,dh
  41875d:	int    0xde
  41875f:	add    BYTE PTR [edi],cl
  418761:	pop    ebp
  418762:	mov    edx,0x8ee003e5
  418767:	aaa    
  418768:	jno    0x418746
  41876a:	rol    bh,1
  41876c:	sti    
  41876d:	push   ebx
  41876e:	lods   al,BYTE PTR ds:[esi]
  41876f:	xor    al,BYTE PTR [eax+0x15]
  418772:	dec    esp
  418773:	jnp    0x418784
  418775:	mov    cl,0xe2
  418777:	lods   eax,DWORD PTR ds:[esi]
  418778:	sbb    BYTE PTR [ecx+0x3381bc92],ah
  41877e:	pop    esp
  41877f:	jecxz  0x418791
  418781:	stc    
  418782:	jecxz  0x41872c
  418784:	popf   
  418785:	jecxz  0x4187c6
  418787:	sub    al,0x83
  418789:	outs   dx,DWORD PTR ds:[esi]
  41878a:	cld    
  41878b:	cdq    
  41878c:	test   DWORD PTR [eax-0x36db7719],esi
  418792:	arpl   WORD PTR ds:0xb8f7d18,bx
  418798:	rcl    BYTE PTR [edx-0x5fcee29f],0xe2
  41879f:	xchg   DWORD PTR [eiz*1+0x5dbd655c],esp
  4187a6:	dec    ebx
  4187a7:	push   ebp
  4187a8:	inc    esi
  4187a9:	aas    
  4187aa:	cmc    
  4187ab:	ret    0x93c1
  4187ae:	pop    edx
  4187af:	jnp    0x41880a
  4187b1:	clc    
  4187b2:	mov    bl,0xf2
  4187b4:	icebp  
  4187b5:	mov    WORD PTR [ecx-0x43b3bcd6],fs
  4187bb:	das    
  4187bc:	adc    dl,BYTE PTR [ebp+0x4a]
  4187bf:	and    bl,BYTE PTR ss:[ebp-0x6b933bfd]
  4187c6:	(bad)  
  4187c7:	jmp    0xfe391b06
  4187cc:	(bad)  
  4187cd:	mov    al,0x52
  4187cf:	push   ebp
  4187d0:	in     eax,0x76
  4187d2:	or     eax,0xa5017505
  4187d7:	push   0xffffffbf
  4187d9:	jo     0x4187ba
  4187db:	out    dx,eax
  4187dc:	mov    bl,0xc1
  4187de:	xchg   edx,eax
  4187df:	aam    0x8c
  4187e1:	loop   0x4187db
  4187e3:	adc    bh,bh
  4187e5:	or     ch,BYTE PTR [esi]
  4187e7:	mov    esp,0x33ea6da0
  4187ec:	inc    ebx
  4187ed:	inc    esi
  4187ee:	std    
  4187ef:	leave  
  4187f0:	mov    edx,0x7a897e65
  4187f5:	js     0x4187af
  4187f7:	lahf   
  4187f8:	jno    0x4187e0
  4187fa:	fistp  DWORD PTR [ebp-0x5c]
  4187fd:	mov    al,ds:0x1ea73772
  418802:	ret    
  418803:	cld    
  418804:	mov    esi,0xd830fb06
  418809:	icebp  
  41880a:	push   ss
  41880b:	jno    0x41883c
  41880d:	xor    eax,0xf3428667
  418812:	fwait
  418813:	inc    edi
  418814:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418815:	sub    ch,ah
  418817:	add    cl,cl
  418819:	jns    0x41885c
  41881b:	lds    esp,FWORD PTR [edx+0x59]
  41881e:	sub    DWORD PTR [esi+edi*8-0x5b8acbf5],esp
  418825:	sbb    dh,ch
  418827:	adc    bh,BYTE PTR [esi+0x69]
  41882a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41882b:	xlat   BYTE PTR cs:[ebx]
  41882d:	adc    DWORD PTR [ebx+0x1b],0x60a5173b
  418834:	xor    al,0x62
  418836:	xor    edi,ecx
  418838:	cmp    BYTE PTR [edx],al
  41883a:	jmp    0xc067:0x7923dd9a
  418841:	repz xor edx,ebx
  418844:	xor    eax,edx
  418846:	jp     0x418863
  418848:	mov    dl,al
  41884a:	or     esp,esp
  41884c:	jg     0x41889a
  41884e:	js     0x41888a
  418850:	int    0x84
  418852:	or     edi,DWORD PTR [ebx]
  418854:	mov    bl,0x3
  418856:	bound  esp,QWORD PTR [edx-0x24f9b155]
  41885c:	std    
  41885d:	aad    0x2e
  41885f:	jae    0x4188b7
  418861:	fisubr DWORD PTR [edx]
  418863:	clc    
  418864:	jge    0x4188d3
  418866:	push   ecx
  418867:	jecxz  0x418840
  418869:	test   ebx,0xd43ed26f
  41886f:	into   
  418870:	xchg   dl,dh
  418872:	fld    QWORD PTR [eax]
  418874:	out    dx,eax
  418875:	dec    esi
  418876:	aam    0x7f
  418878:	not    DWORD PTR [edx]
  41887a:	shr    BYTE PTR [esi+esi*8],1
  41887d:	jmp    0x418835
  41887f:	lods   eax,DWORD PTR ds:[esi]
  418880:	popf   
  418881:	stos   DWORD PTR es:[edi],eax
  418882:	inc    esp
  418883:	xchg   ebp,eax
  418884:	dec    eax
  418885:	sub    eax,0xfbd723f5
  41888a:	push   ds
  41888b:	lods   eax,DWORD PTR ds:[esi]
  41888c:	or     DWORD PTR [ecx],ebp
  41888e:	daa    
  41888f:	pop    ss
  418890:	imul   edx,eax,0xebd713d5
  418896:	fdiv   QWORD PTR [eax]
  418898:	mov    bh,0x8c
  41889a:	mov    ds:0x10827b8b,eax
  41889f:	(bad)  [ebx-0x7c]
  4188a2:	mov    esp,0xe50a41d
  4188a7:	sub    al,BYTE PTR ds:0x603be9ad
  4188ad:	mov    cl,0x4f
  4188af:	jmp    DWORD PTR [esi+0x13]
  4188b2:	rol    DWORD PTR [edi],1
  4188b4:	cs repz hlt 
  4188b7:	adc    eax,0x1dcde547
  4188bc:	push   cs
  4188bd:	add    DWORD PTR [edx-0x156f105b],edx
  4188c3:	fcomp  DWORD PTR [ecx+0x2e]
  4188c6:	fwait
  4188c7:	push   ss
  4188c8:	sub    ah,ch
  4188ca:	loopne 0x418911
  4188cc:	in     eax,0xe4
  4188ce:	xor    al,0x89
  4188d0:	icebp  
  4188d1:	mov    eax,ds:0x76ae268f
  4188d6:	inc    ebp
  4188d7:	cli    
  4188d8:	push   ss
  4188d9:	shl    DWORD PTR [ebx+eax*4-0x1f8d92c5],1
  4188e0:	xchg   esi,eax
  4188e1:	test   al,0x29
  4188e3:	(bad)  
  4188e4:	mov    al,bh
  4188e6:	stos   DWORD PTR es:[edi],eax
  4188e7:	pop    ss
  4188e8:	jl     0x4188f3
  4188ea:	je     0x4188fc
  4188ec:	pop    eax
  4188ed:	sbb    ecx,esi
  4188ef:	dec    edx
  4188f0:	es sti 
  4188f2:	outs   dx,DWORD PTR ds:[esi]
  4188f3:	dec    edx
  4188f4:	adc    BYTE PTR [edx-0x5f],ch
  4188f7:	scas   eax,DWORD PTR es:[edi]
  4188f8:	push   ecx
  4188f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188fa:	or     al,0x46
  4188fc:	mov    edi,0x2ec0800a
  418901:	sbb    ax,0xcbf6
  418905:	addr16 stc 
  418907:	mov    ds,ebx
  418909:	fld    QWORD PTR [edi-0x2fc78a23]
  41890f:	inc    esi
  418910:	xchg   ecx,eax
  418911:	stos   DWORD PTR es:[edi],eax
  418912:	or     cl,ch
  418914:	call   0x51a6:0x1ca6f75e
  41891b:	mov    al,0x3e
  41891d:	or     ah,BYTE PTR [ecx]
  41891f:	in     eax,0x93
  418921:	scas   al,BYTE PTR es:[edi]
  418922:	inc    ebp
  418923:	cmp    esp,DWORD PTR [edx-0x42]
  418926:	add    eax,0x54adce76
  41892b:	sti    
  41892c:	sub    eax,0x9c38bff2
  418931:	dec    esi
  418932:	inc    edi
  418933:	or     eax,0xee378144
  418938:	(bad)  
  418939:	and    eax,0x3b13ba3
  41893e:	aaa    
  41893f:	dec    ebp
  418940:	daa    
  418941:	es pushf 
  418943:	mul    BYTE PTR [eax-0x76]
  418946:	xchg   esi,eax
  418947:	retf   0x2a53
  41894a:	(bad)  
  41894b:	inc    eax
  41894c:	icebp  
  41894d:	and    DWORD PTR [ecx+edi*2],ebx
  418950:	sub    BYTE PTR [ebx+0x5a05d07f],dl
  418956:	add    DWORD PTR [esi-0x2666f935],esi
  41895c:	mov    ecx,0x8c42b4c3
  418961:	fadd   st,st(2)
  418963:	cli    
  418964:	fild   DWORD PTR [ebp-0x72]
  418967:	stos   DWORD PTR es:[edi],eax
  418968:	aam    0x7a
  41896a:	pusha  
  41896b:	add    bl,bh
  41896d:	inc    edi
  41896e:	aas    
  41896f:	arpl   bp,ax
  418971:	aas    
  418972:	xchg   esi,eax
  418973:	jge    0x4189f3
  418975:	adc    DWORD PTR ds:0xca882fb4,ebx
  41897b:	push   ecx
  41897c:	pop    edx
  41897d:	jle    0x418904
  41897f:	mov    al,0x86
  418981:	imul   esp
  418983:	aas    
  418984:	retw   
  418986:	mov    al,0x4
  418988:	xor    eax,0x46d6681c
  41898d:	jmp    0x883f6ec2
  418992:	add    DWORD PTR [ebx+ebp*1+0x5d],esi
  418996:	adc    esi,esi
  418998:	and    al,0xfb
  41899a:	fdiv   QWORD PTR [esi+edx*2-0x6c2008fb]
  4189a1:	and    ecx,DWORD PTR [ebx-0x4751cbe2]
  4189a7:	loope  0x4189f6
  4189a9:	push   0xffffffe9
  4189ab:	pop    eax
  4189ac:	and    eax,DWORD PTR [ecx+0x1bff17c5]
  4189b2:	adc    ah,BYTE PTR [ebx+0x2a]
  4189b5:	(bad)  [ebx+esi*8+0x77]
  4189b9:	mov    bh,BYTE PTR [eax+0x65]
  4189bc:	xor    ebx,esi
  4189be:	and    BYTE PTR [eax-0x7c4ade44],0x99
  4189c5:	repnz aam 0xbb
  4189c8:	in     eax,0x29
  4189ca:	and    al,0x23
  4189cc:	xchg   ebx,eax
  4189cd:	aad    0x91
  4189cf:	aam    0xc0
  4189d1:	scas   eax,DWORD PTR es:[edi]
  4189d2:	mov    esp,0xc7e776c2
  4189d7:	test   eax,0x1db754
  4189dc:	bound  ebp,QWORD PTR ds:0xb72e2566
  4189e2:	sbb    esp,DWORD PTR [ebx+0x26cd35c8]
  4189e8:	mov    bl,BYTE PTR [esi-0x77be997c]
  4189ee:	adc    BYTE PTR [esp+eax*8-0xa],al
  4189f2:	scas   al,BYTE PTR es:[edi]
  4189f3:	mov    ch,0xa0
  4189f5:	(bad)  
  4189f6:	fidivr WORD PTR [edi-0x63]
  4189f9:	in     eax,0xe1
  4189fb:	mov    al,ds:0xe973ca15
  418a00:	test   BYTE PTR [ebp+0x328545a1],ah
  418a06:	add    BYTE PTR ds:0x5caa083d,bh
  418a0c:	aad    0xde
  418a0e:	fcmovu st,st(1)
  418a10:	outs   dx,DWORD PTR ds:[esi]
  418a11:	retf   
  418a12:	repnz sub ebp,DWORD PTR [esi-0xb]
  418a16:	sbb    DWORD PTR [ebx+edx*4-0x1e],0xfffffff5
  418a1b:	push   edi
  418a1c:	cld    
  418a1d:	dec    ecx
  418a1e:	mov    ebp,0xda0c9588
  418a23:	mul    DWORD PTR ds:0x80ba0b59
  418a29:	adc    DWORD PTR [esi],0x102ed8c7
  418a2f:	clc    
  418a30:	js     0x418a9a
  418a32:	enter  0x4d9b,0xc0
  418a36:	pushf  
  418a37:	dec    esp
  418a38:	and    DWORD PTR [ecx+0x40],esp
  418a3b:	pop    ecx
  418a3c:	test   BYTE PTR [ecx-0x6],ah
  418a3f:	inc    eax
  418a40:	or     BYTE PTR [edi+0x2eeb7d41],ch
  418a46:	xchg   BYTE PTR [ebp+0x2e6cdbe4],ah
  418a4c:	jle    0x418a9f
  418a4e:	sub    eax,0x3efca696
  418a53:	jno    0x418ac8
  418a55:	adc    bh,BYTE PTR [ebx+0x7c]
  418a58:	scas   eax,DWORD PTR es:[edi]
  418a59:	lods   al,BYTE PTR ds:[esi]
  418a5a:	jmp    0x418a07
  418a5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a5d:	cmp    eax,0x99aa4bd
  418a62:	push   ds
  418a63:	out    dx,eax
  418a64:	cli    
  418a65:	dec    ebp
  418a66:	imul   edx,eax,0xffffff81
  418a69:	scas   al,BYTE PTR es:[edi]
  418a6a:	mov    DWORD PTR [ecx],edi
  418a6c:	xchg   edx,eax
  418a6d:	cdq    
  418a6e:	adc    al,0xb0
  418a70:	dec    ebp
  418a71:	push   ebp
  418a72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a73:	bound  esi,QWORD PTR [eax+0x5f]
  418a76:	dec    ecx
  418a77:	pop    edx
  418a78:	or     al,0x38
  418a7a:	clc    
  418a7b:	sar    BYTE PTR [bx],0xa0
  418a7f:	push   cs
  418a80:	xchg   ebx,eax
  418a81:	dec    edi
  418a82:	shl    DWORD PTR [edx+eiz*2],cl
  418a85:	add    eax,0x49f5120a
  418a8a:	fmul   st(4),st
  418a8c:	retf   0x6ba7
  418a8f:	xchg   ecx,eax
  418a90:	mov    ebp,0xc73795d8
  418a95:	dec    eax
  418a96:	jns    0x418a3c
  418a98:	and    bh,BYTE PTR [edx-0x7b]
  418a9b:	or     BYTE PTR [edx],dh
  418a9d:	aas    
  418a9e:	jno    0x418a7a
  418aa0:	ja     0x418a89
  418aa2:	mov    es,WORD PTR [ebp-0x39]
  418aa5:	dec    ecx
  418aa6:	mov    ah,0x6b
  418aa8:	psraw  mm0,QWORD PTR [eax-0x7d]
  418aac:	or     al,0x39
  418aae:	popa   
  418aaf:	xchg   dh,bh
  418ab1:	xchg   edx,eax
  418ab2:	aaa    
  418ab3:	and    edi,DWORD PTR [ebx+0x6341e60c]
  418ab9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418aba:	or     eax,0x3044be5a
  418abf:	int    0x39
  418ac1:	xchg   ebp,eax
  418ac2:	repz in al,dx
  418ac4:	cmp    BYTE PTR [edx],cl
  418ac6:	sub    al,0x4f
  418ac9:	push   0xb71d25f7
  418ace:	xchg   ecx,eax
  418acf:	sbb    DWORD PTR [eax-0x2027a70a],0x78
  418ad6:	mov    al,ds:0xf3d04b8
  418adb:	pop    eax
  418adc:	and    al,0xc5
  418ade:	popa   
  418adf:	or     ebp,esp
  418ae1:	jb     0x418ae4
  418ae3:	not    ebp
  418ae5:	cdq    
  418ae6:	out    0x13,al
  418ae8:	push   ss
  418ae9:	jmp    0xf77d2cbc
  418aee:	mov    dl,0x56
  418af0:	stc    
  418af1:	sar    al,cl
  418af3:	mov    al,0x53
  418af5:	arpl   sp,bx
  418af7:	retf   
  418af8:	jne    0x418b5f
  418afa:	pop    ebp
  418afb:	iret   
  418afc:	popa   
  418afd:	test   al,0x6a
  418aff:	mov    edx,0xb59625d8
  418b04:	lock bound edi,QWORD PTR [eax]
  418b07:	or     dl,BYTE PTR [eax]
  418b09:	mov    cl,0x38
  418b0b:	outs   dx,BYTE PTR ds:[esi]
  418b0c:	iret   
  418b0d:	push   ecx
  418b0e:	mov    BYTE PTR [ebx-0x19e2cb5e],dl
  418b14:	xchg   ecx,eax
  418b15:	cmp    edi,DWORD PTR [eax-0x6e]
  418b18:	sahf   
  418b19:	adc    WORD PTR [edi+0x134715cb],ax
  418b20:	retf   0x8dee
  418b23:	and    bh,dh
  418b25:	or     al,0x4
  418b27:	(bad)  
  418b28:	mul    ebx
  418b2a:	arpl   WORD PTR [esp+eax*4+0x7c576abd],cx
  418b31:	adc    eax,DWORD PTR [esi-0x17d13fba]
  418b37:	jnp    0x418b13
  418b39:	iret   
  418b3a:	adc    ah,al
  418b3c:	jmp    0x418b5e
  418b3e:	imul   esi,DWORD PTR [ecx],0x36
  418b41:	cld    
  418b42:	jns    0x418b3c
  418b44:	and    cl,BYTE PTR [ebx-0xa]
  418b47:	xchg   ebp,eax
  418b48:	pop    es
  418b49:	fld    QWORD PTR [eax+0x5dd7bbde]
  418b4f:	dec    edx
  418b50:	(bad)  
  418b51:	xchg   esi,eax
  418b52:	enter  0xeed9,0x47
  418b56:	sub    al,0x77
  418b58:	mov    ah,0xc0
  418b5a:	push   esi
  418b5b:	mov    ds:0x3443ad61,al
  418b60:	inc    edi
  418b61:	mov    dl,0x4e
  418b63:	pop    ecx
  418b64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b65:	add    esp,ebp
  418b67:	push   ss
  418b68:	mov    al,ds:0xe0cb2534
  418b6d:	xor    al,dh
  418b6f:	inc    DWORD PTR [ecx-0x72]
  418b72:	test   BYTE PTR [ebx-0x24],0x3e
  418b76:	sub    bl,BYTE PTR [ebx+0x40]
  418b79:	inc    ebp
  418b7a:	inc    ebx
  418b7b:	xchg   ah,cl
  418b7d:	mov    ah,0x8e
  418b7f:	xlat   BYTE PTR ds:[ebx]
  418b80:	aaa    
  418b81:	jmp    0x418bb2
  418b83:	inc    esi
  418b84:	std    
  418b85:	inc    DWORD PTR [eax+0x21]
  418b88:	les    esp,FWORD PTR [eax]
  418b8a:	ds push ebx
  418b8c:	sub    al,0xc8
  418b8e:	outs   dx,BYTE PTR ds:[esi]
  418b8f:	je     0x418bdd
  418b91:	test   BYTE PTR [eax+0x21be910c],cl
  418b97:	pop    ebx
  418b98:	rcl    BYTE PTR [eax-0x1a8bdf60],1
  418b9e:	dec    eax
  418b9f:	outs   dx,BYTE PTR ds:[esi]
  418ba0:	jno    0x418b2f
  418ba2:	jnp    0x418ba0
  418ba4:	add    al,0x5b
  418ba6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ba7:	gs jne 0x418c29
  418baa:	lahf   
  418bab:	mov    ch,0x26
  418bad:	xor    cl,cl
  418baf:	jge    0x418bf4
  418bb1:	and    eax,0x5919d9fd
  418bb6:	adc    dh,ah
  418bb8:	sahf   
  418bb9:	mov    eax,0x390ba310
  418bbe:	pop    ecx
  418bbf:	xchg   ecx,eax
  418bc0:	jl     0x418c2c
  418bc2:	or     edx,esp
  418bc4:	int    0x42
  418bc6:	out    0x86,eax
  418bc8:	push   ebx
  418bc9:	sbb    bh,BYTE PTR [ebx-0x25]
  418bcc:	stos   BYTE PTR es:[edi],al
  418bcd:	outs   dx,DWORD PTR ds:[esi]
  418bce:	sub    ebx,0xa
  418bd1:	jo     0x418b68
  418bd3:	into   
  418bd4:	mov    eax,0xa90978b2
  418bd9:	jmp    0x3032194a
  418bde:	mov    ebp,0xdfb646a6
  418be3:	js     0x418c5b
  418be5:	pop    eax
  418be6:	cmp    al,0x80
  418be8:	cmp    ebx,DWORD PTR [ebp+0x37927906]
  418bee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bef:	jmp    0x418c29
  418bf1:	jmp    0x418bc5
  418bf3:	push   ecx
  418bf4:	push   es
  418bf5:	and    al,0x8f
  418bf7:	inc    edx
  418bf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bf9:	daa    
  418bfa:	mov    esi,0x80f00200
  418bff:	push   esp
  418c00:	jmp    0x715599bd
  418c05:	dec    ebx
  418c06:	rcl    DWORD PTR [esi+eiz*4-0x5b],cl
  418c0a:	into   
  418c0b:	iret   
  418c0c:	retf   
  418c0d:	mov    ebx,0x8c8fc945
  418c12:	inc    esi
  418c13:	je     0x418bbd
  418c15:	ins    DWORD PTR es:[edi],dx
  418c16:	xchg   dl,bh
  418c18:	cwde   
  418c19:	enter  0xe38,0xd4
  418c1d:	js     0x418c61
  418c1f:	call   FWORD PTR [eax-0x5c]
  418c22:	or     BYTE PTR [esi],0xfe
  418c25:	pop    ss
  418c26:	(bad)  
  418c27:	retf   0x8727
  418c2a:	in     al,dx
  418c2b:	xlat   BYTE PTR ds:[ebx]
  418c2c:	adc    al,0x7e
  418c2e:	inc    edx
  418c2f:	cmp    cl,0x6f
  418c32:	retf   0x227b
  418c35:	call   0xd31891
  418c3a:	jae    0x418bf4
  418c3c:	adc    edi,DWORD PTR [ebx-0x6f]
  418c3f:	mov    bh,0x27
  418c41:	pop    es
  418c42:	xchg   esi,eax
  418c43:	push   es
  418c44:	ds mov ecx,0x739a2441
  418c4a:	loope  0x418c25
  418c4c:	icebp  
  418c4d:	retf   
  418c4e:	ds aad 0xa5
  418c51:	jg     0x418c8a
  418c53:	inc    eax
  418c54:	fwait
  418c55:	mov    eax,0x21b2ced5
  418c5a:	inc    ebp
  418c5b:	enter  0xe4f6,0xf0
  418c5f:	push   eax
  418c60:	loop   0x418ca3
  418c62:	pop    edi
  418c63:	inc    ecx
  418c64:	adc    BYTE PTR ds:0x3caa1eeb,ch
  418c6a:	scas   eax,DWORD PTR es:[edi]
  418c6b:	inc    eax
  418c6c:	std    
  418c6d:	bswap  ecx
  418c6f:	std    
  418c70:	scas   al,BYTE PTR es:[edi]
  418c71:	mov    ah,0xc9
  418c73:	jl     0x418c87
  418c75:	jo     0x418cf3
  418c77:	in     eax,dx
  418c78:	ret    0x3f91
  418c7b:	gs in  eax,dx
  418c7d:	push   edi
  418c7e:	push   edi
  418c7f:	ja     0x418c36
  418c81:	mov    al,0xed
  418c83:	cmp    BYTE PTR [eax],cl
  418c85:	enter  0x1984,0x8c
  418c89:	je     0x418cd6
  418c8b:	leave  
  418c8c:	int    0x54
  418c8e:	test   DWORD PTR [ebp+0x7f],ebp
  418c91:	test   eax,0xc695b322
  418c96:	div    BYTE PTR [ecx]
  418c98:	mov    cl,0x9f
  418c9a:	ret    0xa018
  418c9d:	cmp    eax,0xb61682d6
  418ca2:	mov    dl,BYTE PTR [eiz*8-0x4165686f]
  418ca9:	xchg   ebx,eax
  418caa:	mov    ebx,0x407327ab
  418caf:	hlt    
  418cb0:	xchg   dl,dh
  418cb2:	cmp    ah,BYTE PTR [edx]
  418cb4:	outs   dx,BYTE PTR ds:[esi]
  418cb5:	outs   dx,DWORD PTR ds:[esi]
  418cb6:	xchg   edx,eax
  418cb7:	push   cs
  418cb8:	sub    eax,0x65442c2a
  418cbd:	sub    al,0x38
  418cbf:	mov    ecx,0x670bffcb
  418cc4:	rol    BYTE PTR [bx+di],1
  418cc7:	xor    cl,dh
  418cc9:	mov    ah,ch
  418ccb:	cld    
  418ccc:	pop    edx
  418ccd:	int    0xc7
  418ccf:	and    al,0xbb
  418cd1:	fnsave [eax+0x23]
  418cd4:	pop    eax
  418cd5:	in     eax,dx
  418cd6:	ret    
  418cd7:	sub    edi,ecx
  418cd9:	lahf   
  418cda:	mov    cl,0xa8
  418cdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418cdd:	jnp    0x418c8e
  418cdf:	pusha  
  418ce0:	into   
  418ce1:	icebp  
  418ce2:	scas   al,BYTE PTR es:[edi]
  418ce3:	xor    eax,0x98f82535
  418ce8:	test   DWORD PTR [eax-0x4e],ecx
  418ceb:	xor    esp,DWORD PTR [ebp+0x34]
  418cee:	jmp    0x5f87d253
  418cf3:	jno    0x418d3e
  418cf5:	(bad)  
  418cf7:	mov    al,bh
  418cf9:	popw   es
  418cfb:	adc    esp,DWORD PTR ds:0xae92a3ab
  418d01:	mov    dl,0xc9
  418d03:	jmp    0x42c834ed
  418d08:	mov    eax,esp
  418d0a:	adc    al,BYTE PTR [edi]
  418d0c:	jae    0x418d7e
  418d0e:	cmp    eax,0xd0690a84
  418d13:	xchg   DWORD PTR [ebx],ecx
  418d15:	fcom   QWORD PTR ds:0xc8826b46
  418d1b:	xchg   edi,eax
  418d1c:	xor    eax,0x7cf37062
  418d21:	test   eax,0x7da6c07d
  418d26:	adc    eax,DWORD PTR [ecx+0x55]
  418d29:	or     BYTE PTR [edi-0x41],dh
  418d2c:	pusha  
  418d2d:	imul   edi,DWORD PTR [eax+0xf9db5c1],0x4d
  418d34:	sub    bh,BYTE PTR fs:[edx]
  418d37:	sbb    DWORD PTR [ecx+edx*2-0x70f3083d],0xffffff98
  418d3f:	je     0x418d4c
  418d41:	fadd   DWORD PTR [ecx-0x59]
  418d44:	and    ebp,DWORD PTR [ebp+0x7d30003c]
  418d4a:	xchg   edi,eax
  418d4b:	dec    eax
  418d4c:	xchg   esp,eax
  418d4d:	lods   eax,DWORD PTR ds:[esi]
  418d4e:	sbb    al,BYTE PTR [edx]
  418d50:	push   0xdd62fe3
  418d55:	js     0x418daa
  418d57:	aad    0x92
  418d59:	gs inc ebx
  418d5b:	pop    es
  418d5c:	jbe    0x418cf4
  418d5e:	mov    cl,BYTE PTR [eax]
  418d60:	cli    
  418d61:	push   ecx
  418d62:	idiv   BYTE PTR [ebp-0x28]
  418d65:	outs   dx,DWORD PTR ds:[esi]
  418d66:	ficomp DWORD PTR [esi+0x56]
  418d69:	fldenv [ebx-0x25]
  418d6c:	shr    BYTE PTR [edx],1
  418d6e:	xchg   esi,eax
  418d6f:	jbe    0x418db5
  418d71:	adc    al,0x61
  418d73:	jp     0x418ddc
  418d75:	(bad)  
  418d77:	and    ah,ah
  418d79:	xchg   edx,eax
  418d7a:	jbe    0x418d0b
  418d7c:	and    DWORD PTR [esi+0x350aaa7c],0x6f768ccb
  418d86:	or     al,0x69
  418d88:	adc    dh,cl
  418d8a:	loope  0x418d93
  418d8c:	dec    edx
  418d8d:	enter  0x3dac,0xf0
  418d91:	pushf  
  418d92:	push   es
  418d93:	imul   esi,ecx,0xfffffff4
  418d96:	inc    edx
  418d97:	pop    ebx
  418d98:	cli    
  418d99:	mov    ebp,ds
  418d9b:	xchg   ebp,eax
  418d9c:	pop    ecx
  418d9d:	sub    DWORD PTR [eax+0xfc29d84],edi
  418da3:	sar    esp,0x9c
  418da6:	xor    bl,BYTE PTR [edi+0x31dbe699]
  418dac:	pop    ebx
  418dad:	jl     0x418e14
  418daf:	adc    ebp,DWORD PTR [ecx+0x2d]
  418db2:	int3   
  418db3:	and    ch,BYTE PTR ds:0x479ea05d
  418db9:	adc    ebp,DWORD PTR [ebx]
  418dbb:	pushf  
  418dbc:	push   esi
  418dbd:	xlat   BYTE PTR ds:[ebx]
  418dbe:	sub    al,0xe4
  418dc0:	dec    ebx
  418dc1:	stc    
  418dc2:	xchg   ebp,eax
  418dc3:	adc    eax,0xc50968ac
  418dc8:	call   0xc5984bd4
  418dcd:	xchg   edx,eax
  418dce:	fs pop eax
  418dd0:	arpl   WORD PTR [ebx+0x3c6757c3],ax
  418dd6:	pop    ebp
  418dd7:	mov    esp,0xce23c69
  418ddd:	(bad)  
  418ddf:	sub    eax,0xa982b92c
  418de4:	imul   esi,DWORD PTR [edx-0x2f0c8fc0],0xffffffbc
  418deb:	je     0x418d9d
  418ded:	stos   DWORD PTR es:[edi],eax
  418dee:	scas   eax,DWORD PTR es:[edi]
  418def:	sar    DWORD PTR [ebx-0x60],1
  418df2:	ret    0x1012
  418df5:	dec    bh
  418df7:	xor    eax,0x83cadc4c
  418dfc:	repnz fst DWORD PTR [ebx]
  418dff:	fstp   TBYTE PTR [esi]
  418e01:	add    al,0x23
  418e03:	ins    DWORD PTR es:[edi],dx
  418e04:	shr    DWORD PTR [esi-0x77],0xb3
  418e08:	inc    edi
  418e09:	mov    ecx,0x2ff37ad2
  418e0e:	mov    ecx,0x4176c7a3
  418e13:	cld    
  418e14:	sbb    BYTE PTR [ebp+0x2d],dh
  418e17:	inc    ecx
  418e18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e19:	pop    ds
  418e1a:	jb     0x418e4c
  418e1c:	daa    
  418e1d:	inc    ebp
  418e1e:	xchg   esp,eax
  418e1f:	push   ebx
  418e20:	inc    eax
  418e21:	add    al,0x1d
  418e23:	and    BYTE PTR [edi+0x7b080557],cl
  418e29:	mov    esp,0x376f9941
  418e2e:	outs   dx,BYTE PTR ds:[esi]
  418e2f:	dec    edx
  418e30:	popa   
  418e31:	int    0x17
  418e33:	mov    ebp,0x45f66dc
  418e38:	stc    
  418e39:	(bad)  
  418e3a:	fld    DWORD PTR [edi]
  418e3c:	sbb    DWORD PTR [ebx],edx
  418e3e:	les    edi,FWORD PTR [edx]
  418e40:	outs   dx,DWORD PTR ds:[esi]
  418e41:	sub    eax,0x40ea4be3
  418e46:	in     al,dx
  418e47:	lds    esp,FWORD PTR [ecx]
  418e49:	adc    ch,BYTE PTR [edx]
  418e4b:	push   ebp
  418e4c:	call   0x2a05:0x9306d3e0
  418e53:	jb     0x418e5b
  418e55:	and    al,0x51
  418e57:	pop    ss
  418e58:	xchg   DWORD PTR [edx-0x17],ebp
  418e5b:	push   cs
  418e5c:	loopne 0x418e55
  418e5e:	ss fwait
  418e60:	jmp    0x5e4d527b
  418e65:	and    eax,0x6143158f
  418e6a:	rcl    DWORD PTR [edi+0x6a],cl
  418e6d:	cmc    
  418e6e:	test   al,0x22
  418e70:	cmp    ebx,DWORD PTR [ecx]
  418e72:	pushf  
  418e73:	inc    eax
  418e74:	pop    ds
  418e75:	mov    cl,0xa7
  418e77:	popa   
  418e78:	push   ebx
  418e79:	gs push eax
  418e7b:	aas    
  418e7c:	enter  0xfc71,0xd2
  418e80:	xor    DWORD PTR [ebp+edx*1-0x4e],esi
  418e84:	repz or esp,eax
  418e87:	sbb    edx,ecx
  418e89:	mov    dh,0x9f
  418e8b:	pop    ss
  418e8c:	mov    ecx,0x1e641e68
  418e91:	and    DWORD PTR ds:0xd2223249,esi
  418e97:	add    edi,ecx
  418e99:	sub    al,0xf5
  418e9b:	in     al,0x16
  418e9d:	loope  0x418e21
  418e9f:	cmp    bl,al
  418ea1:	xchg   BYTE PTR [ecx],cl
  418ea3:	setbe  al
  418ea6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ea7:	lock cmp bl,BYTE PTR [ecx]
  418eaa:	call   0xf1d1719e
  418eaf:	outs   dx,BYTE PTR ds:[esi]
  418eb0:	dec    edx
  418eb1:	lods   eax,DWORD PTR ds:[esi]
  418eb2:	mov    ds:0x8c78b72d,al
  418eb7:	aad    0xda
  418eb9:	popf   
  418eba:	rcl    BYTE PTR [ebx+0x2d23fac2],0xe1
  418ec1:	xor    edx,ebp
  418ec3:	mov    edi,0xec9115ca
  418ec8:	jmp    0xedb73bdb
  418ecd:	aam    0x1b
  418ecf:	repz test BYTE PTR [edi+0x69],bl
  418ed3:	xchg   ebx,eax
  418ed4:	in     al,dx
  418ed5:	sbb    eax,0x19cbd848
  418eda:	mov    eax,0xff4b0673
  418edf:	mov    bl,0x17
  418ee1:	mov    eax,ds:0xbd20878
  418ee6:	lods   eax,DWORD PTR ds:[esi]
  418ee7:	(bad)  
  418ee9:	(bad)  
  418eea:	dec    esp
  418eeb:	pop    eax
  418eec:	call   0x7d0d:0x53a35555
  418ef3:	in     al,0x77
  418ef5:	pop    ebx
  418ef6:	cmp    DWORD PTR [edi+0x1d],0x0
  418efa:	sbb    DWORD PTR [esi+0x51919e24],edi
  418f00:	inc    ecx
  418f01:	rol    DWORD PTR [esi+0x6fb5f936],cl
  418f07:	pop    es
  418f08:	bound  ecx,QWORD PTR [edi]
  418f0a:	jge    0x418f34
  418f0c:	fdiv   st,st(3)
  418f0e:	cli    
  418f0f:	xor    BYTE PTR [edx+0x75],dh
  418f12:	jmp    0xc3d3:0x9e6cb14a
  418f19:	es ins DWORD PTR es:[edi],dx
  418f1b:	fucomp st(7)
  418f1d:	mov    ebp,fs
  418f1f:	jbe    0x418f7c
  418f21:	inc    ebx
  418f22:	cmp    BYTE PTR [edi],ah
  418f24:	sub    al,0xd9
  418f26:	and    ah,BYTE PTR [edi]
  418f28:	iret   
  418f29:	in     eax,0x9f
  418f2b:	test   eax,0x124a8ae4
  418f30:	xor    DWORD PTR [edi-0x3c2888a8],edx
  418f36:	jae    0x418f76
  418f38:	sub    al,0x4f
  418f3a:	lock mov al,0x21
  418f3d:	repz mov eax,ds:0x3d4362a7
  418f43:	aad    0x83
  418f45:	inc    edx
  418f46:	cmp    eax,0xe7a125f7
  418f4b:	push   edi
  418f4c:	mov    ch,0x5
  418f4e:	xchg   esi,eax
  418f4f:	jbe    0x418f1a
  418f51:	das    
  418f52:	mov    BYTE PTR [edi+0x419eb583],bl
  418f58:	jl     0x418f79
  418f5a:	jno    0x418f26
  418f5c:	push   ebp
  418f5d:	mov    eax,ds:0xaa2e2d91
  418f62:	pop    ebp
  418f63:	lea    esp,[esi-0x3cbb29b7]
  418f69:	cmp    BYTE PTR [ebx-0x7227b319],0x4d
  418f70:	nop
  418f71:	ret    0xdc55
  418f74:	fisubr DWORD PTR [ebp-0x6b]
  418f77:	add    edx,DWORD PTR [edx]
  418f79:	(bad)  
  418f7a:	imul   ebx,edi,0xffffff9f
  418f7d:	jno    0x418f1d
  418f7f:	dec    esi
  418f80:	test   DWORD PTR [ebx-0x202aef],eax
  418f86:	cmp    eax,0xa86849b5
  418f8b:	les    ecx,FWORD PTR [edx]
  418f8d:	mov    edi,0x444fc4a6
  418f92:	pop    es
  418f93:	and    BYTE PTR [ebx+0x2db006f6],bl
  418f99:	push   ss
  418f9a:	gs aad 0x40
  418f9d:	adc    eax,DWORD PTR [esi-0x53]
  418fa0:	fmul   st(1),st
  418fa2:	and    eax,0x9e24fe1d
  418fa7:	mov    WORD PTR [ecx+0x26],gs
  418faa:	lds    eax,FWORD PTR [esi+0x4a6b8511]
  418fb0:	into   
  418fb1:	ja     0x418fab
  418fb3:	fisttp QWORD PTR [ecx-0x47645e0]
  418fb9:	repz mov esi,0x73fde90b
  418fbf:	mov    dh,BYTE PTR gs:[edx-0x2f]
  418fc3:	jae    0x418ff4
  418fc5:	shl    BYTE PTR [edx-0x18fb79f8],cl
  418fcb:	ret    
  418fcc:	adc    eax,0xd472090c
  418fd1:	sahf   
  418fd2:	mov    ah,0xc
  418fd4:	jmp    0x418fef
  418fd6:	push   cs
  418fd7:	inc    esi
  418fd8:	sbb    DWORD PTR [esi+0x475428d0],eax
  418fde:	stc    
  418fdf:	add    BYTE PTR [eax],dl
  418fe1:	add    eax,0xb866c705
  418fe6:	push   es
  418fe7:	and    al,0x0
  418fe9:	and    al,0x7e
  418feb:	push   ds
  418fec:	(bad)  
  418fed:	dec    edi
  418fee:	xor    BYTE PTR [esi-0x38],ah
  418ff1:	adc    al,BYTE PTR [ebp-0x78]
  418ff4:	imul   esp,edx,0xffffffbe
  418ff7:	jno    0x418f7d
  418ff9:	push   es
  418ffa:	jbe    0x419008
  418ffc:	or     al,0x13
  418ffe:	adc    dl,0x34
  419001:	sub    ch,cl
  419003:	pop    esi
  419004:	jns    0x418fd3
  419006:	(bad)  
  419007:	pop    esp
  419008:	(bad)  [ebx+0x74]
  41900b:	mov    dh,0x89
  41900d:	es jo  0x419036
  419010:	mov    ebp,0xfc68579d
  419015:	cmc    
  419016:	jae    0x41904f
  419018:	adc    ebp,ebx
  41901a:	int    0x5e
  41901c:	int3   
  41901d:	mov    ch,0xb0
  41901f:	fst    QWORD PTR [ebx-0x5c]
  419022:	lock push es
  419024:	mov    dl,0x60
  419026:	jbe    0x41909d
  419028:	pop    ds
  419029:	js     0x419032
  41902b:	mov    cs,WORD PTR [ebx]
  41902d:	mov    gs,WORD PTR [eax]
  41902f:	test   eax,0x13a46d75
  419034:	popa   
  419035:	out    0x48,eax
  419037:	iret   
  419038:	dec    esp
  419039:	lock outs dx,BYTE PTR ds:[esi]
  41903b:	call   0x9379:0xf5712f7f
  419042:	pop    ebx
  419043:	xchg   ebp,eax
  419044:	cmp    eax,0xce27f69c
  419049:	gs (bad) 
  41904b:	sbb    BYTE PTR ds:[eax+0x29],cl
  41904f:	dec    esp
  419050:	aam    0x3c
  419052:	mov    esp,0x7210be76
  419057:	pop    ds
  419058:	jle    0x419088
  41905a:	sar    BYTE PTR [ecx+0x13],cl
  41905d:	pop    ebx
  41905e:	out    0x9,al
  419060:	add    BYTE PTR [edi-0x246cb54b],0xd3
  419067:	and    cl,cl
  419069:	or     BYTE PTR [ebx+0x7cf2bb2f],al
  41906f:	rol    BYTE PTR [ecx-0x7dfd2b07],1
  419075:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419076:	ficomp WORD PTR [ebp+0x4f]
  419079:	fimul  WORD PTR [edi+0x124e5198]
  41907f:	(bad)  
  419080:	dec    edx
  419081:	pusha  
  419082:	pushf  
  419083:	adc    dh,bl
  419085:	leave  
  419086:	and    esp,ebx
  419088:	adc    DWORD PTR [ecx-0x67],ebp
  41908b:	xor    al,0xfe
  41908d:	mov    esp,0x3ebde1f
  419092:	or     ecx,ebx
  419094:	data16 fsubr QWORD PTR [ebx-0x2671e36c]
  41909b:	lahf   
  41909c:	or     esp,DWORD PTR [ebx-0x33]
  41909f:	mov    ah,0x8a
  4190a1:	adc    eax,0x46d79034
  4190a6:	mov    ah,0x5e
  4190a8:	cld    
  4190a9:	push   edx
  4190aa:	sar    DWORD PTR [esi-0x37520779],1
  4190b0:	idiv   BYTE PTR [ebx]
  4190b2:	lahf   
  4190b3:	sahf   
  4190b4:	imul   ecx,DWORD PTR ds:0x1cddbacf,0x792dfdb0
  4190be:	cmp    dh,ch
  4190c0:	cmp    BYTE PTR [edi+0x15ee5367],al
  4190c6:	mov    bl,0x2c
  4190c8:	pop    ds
  4190c9:	mov    dh,0xe9
  4190cb:	jg     0x419103
  4190cd:	stc    
  4190ce:	nop
  4190cf:	loop   0x41906e
  4190d1:	xchg   ebx,eax
  4190d2:	cmp    edi,DWORD PTR [eax]
  4190d4:	jle    0x4190f7
  4190d6:	neg    ah
  4190d8:	scas   al,BYTE PTR es:[edi]
  4190d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190da:	jl     0x41912a
  4190dc:	sbb    bl,al
  4190de:	gs jge 0x4190be
  4190e1:	fimul  WORD PTR [ebx+0x34]
  4190e4:	dec    esi
  4190e5:	das    
  4190e6:	jle    0x4190fb
  4190e8:	repz clc 
  4190ea:	int3   
  4190eb:	fsubr  QWORD PTR [ebx+0x2e]
  4190ee:	add    ebx,0x536bb0cd
  4190f4:	xor    eax,0x5423bb7b
  4190f9:	ror    BYTE PTR [esi-0x2e],1
  4190fc:	push   edi
  4190fd:	and    ah,al
  4190ff:	xor    al,0x3c
  419101:	or     ecx,DWORD PTR [ebx+0x27]
  419104:	pusha  
  419105:	ret    0xd193
  419108:	xor    DWORD PTR [edi],ebx
  41910a:	cwde   
  41910b:	jp     0x419120
  41910d:	jp     0x4190dd
  41910f:	dec    ebp
  419110:	push   0x7ab91f02
  419115:	mov    ds:0x447149ba,eax
  41911a:	in     eax,0xaa
  41911c:	ret    0x2c2c
  41911f:	(bad)  [esi+0x20]
  419122:	jb     0x419192
  419124:	and    edi,esi
  419126:	std    
  419127:	xlat   BYTE PTR ds:[ebx]
  419128:	mov    ds:0xfbe99200,al
  41912d:	jmp    0x8396:0xf04adb01
  419134:	shl    BYTE PTR [ebx+0xe],1
  419137:	xor    dh,BYTE PTR ds:0xcff8423f
  41913d:	mov    ebx,0x5c17bc14
  419142:	mov    DWORD PTR [ebp-0x50],edx
  419145:	mov    edx,DWORD PTR [ebp+0x8]
  419148:	mov    ebx,DWORD PTR [ebp-0x4c]
  41914b:	add    edx,edi
  41914d:	and    edx,ebx
  41914f:	mov    DWORD PTR [ebp-0x4c],edx
  419152:	mov    edx,DWORD PTR [ebp+0x8]
  419155:	mov    ebx,DWORD PTR [ebp-0x48]
  419158:	lea    edx,[ebx+edx*1+0x241fcdf]
  41915f:	mov    DWORD PTR [ebp-0x48],edx
  419162:	mov    edx,DWORD PTR [ebp+0x8]
  419165:	mov    ebx,0xfa5e1524
  41916a:	sub    ebx,edx
  41916c:	add    ebx,DWORD PTR [ebp-0x44]
  41916f:	mov    DWORD PTR [ebp-0x44],ebx
  419172:	mov    edx,DWORD PTR [ebp+0x8]
  419175:	xor    edx,eax
  419177:	add    edx,esi
  419179:	jne    0x416da2
  41917f:	mov    edx,DWORD PTR [ebp-0x8]
  419182:	mov    ebx,DWORD PTR [ebp-0xc]
  419185:	xor    edx,eax
  419187:	lea    edx,[edx+ebx*1+0x3272f5]
  41918e:	mov    DWORD PTR [ebp-0xc],edx
  419191:	mov    edx,DWORD PTR [ebp-0x10]
  419194:	xor    edx,eax
  419196:	add    edx,esi
  419198:	jne    0x4124bd
  41919e:	jmp    0x41b615
  4191a3:	mov    ecx,DWORD PTR [ebp-0x14]
  4191a6:	mov    DWORD PTR [ebp+0x8],ecx
  4191a9:	jmp    0x41b582
  4191ae:	mov    ecx,DWORD PTR [ebp+0x8]
  4191b1:	mov    edx,DWORD PTR [ebp-0x8]
  4191b4:	xor    ecx,eax
  4191b6:	xor    edx,eax
  4191b8:	sub    ecx,edx
  4191ba:	sub    ecx,esi
  4191bc:	xor    ecx,eax
  4191be:	mov    DWORD PTR [ebp+0x8],ecx
  4191c1:	mov    ecx,DWORD PTR [ebp+0x8]
  4191c4:	mov    edx,DWORD PTR [ebp-0x58]
  4191c7:	add    ecx,0x5708e2
  4191cd:	imul   ecx,edx
  4191d0:	mov    DWORD PTR [ebp-0x58],ecx
  4191d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4191d6:	mov    edx,DWORD PTR [ebp-0x54]
  4191d9:	add    ecx,0x64f880
  4191df:	or     ecx,edx
  4191e1:	mov    DWORD PTR [ebp-0x54],ecx
  4191e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4191e7:	mov    edx,DWORD PTR [ebp-0x50]
  4191ea:	add    ecx,0x242ebf1
  4191f0:	xor    ecx,edx
  4191f2:	mov    DWORD PTR [ebp-0x50],ecx
  4191f5:	jmp    0x41b555
  4191fa:	pop    edx
  4191fb:	cmp    al,0xf8
  4191fd:	inc    esp
  4191fe:	xchg   esi,eax
  4191ff:	test   dl,cl
  419201:	and    al,BYTE PTR [edx-0xd08d874]
  419207:	cmp    ch,BYTE PTR [edx]
  419209:	int3   
  41920a:	xor    esp,DWORD PTR [eax]
  41920c:	add    BYTE PTR [ebx-0x7c7ca1c2],0x90
  419213:	sub    BYTE PTR [ebx],al
  419215:	inc    esi
  419216:	dec    esi
  419217:	adc    WORD PTR [eax],cx
  41921a:	xlat   BYTE PTR ds:[ebx]
  41921b:	les    ebx,FWORD PTR [esi]
  41921d:	xchg   ecx,eax
  41921e:	leave  
  41921f:	cwde   
  419220:	ins    DWORD PTR es:[edi],dx
  419221:	xor    DWORD PTR [ecx+ebx*2+0x61],ecx
  419225:	das    
  419226:	dec    eax
  419227:	sahf   
  419228:	add    bl,al
  41922a:	(bad)  
  41922b:	adc    al,0x5d
  41922d:	aas    
  41922e:	loop   0x41928b
  419230:	sub    al,0x68
  419232:	loopne 0x4191ef
  419234:	xchg   esi,eax
  419235:	pop    edi
  419236:	dec    edi
  419237:	daa    
  419238:	clc    
  419239:	xchg   edx,eax
  41923a:	xchg   edi,eax
  41923b:	pop    edi
  41923c:	out    0x46,eax
  41923e:	pop    edx
  41923f:	push   edx
  419240:	mov    dh,0xf0
  419242:	rcr    cl,1
  419244:	or     BYTE PTR [si-0x9],cl
  419248:	lea    edx,[edi+0x22bcc6cc]
  41924e:	xchg   bh,al
  419250:	and    al,0xa5
  419252:	stos   BYTE PTR es:[edi],al
  419253:	or     eax,DWORD PTR ss:[ebx-0x376808ae]
  41925a:	retf   0x882e
  41925d:	fcmovnb st,st(5)
  41925f:	pop    ebx
  419260:	fs inc ebp
  419262:	add    esi,DWORD PTR [eax+0x11]
  419265:	dec    edx
  419266:	hlt    
  419267:	stc    
  419268:	push   ebx
  419269:	bound  ebx,QWORD PTR [edx-0x76]
  41926c:	inc    eax
  41926d:	mov    esi,esp
  41926f:	(bad)  
  419270:	pusha  
  419271:	dec    eax
  419272:	sbb    DWORD PTR [esi-0x76],eax
  419275:	and    edx,DWORD PTR [edi]
  419277:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419278:	inc    ebx
  419279:	ss push ss
  41927b:	mov    ecx,0x6043ddb9
  419280:	ret    
  419281:	in     al,dx
  419282:	jl     0x419243
  419284:	test   BYTE PTR [ebp-0x54],al
  419287:	mov    ds:0xa9948d19,al
  41928c:	imul   ebp
  41928e:	dec    ebx
  41928f:	enter  0xe454,0xf7
  419293:	adc    BYTE PTR [edx],al
  419295:	in     al,dx
  419296:	mov    DWORD PTR [edi-0x1f],ecx
  419299:	mov    bh,0xbb
  41929b:	cmp    ebx,ecx
  41929d:	jnp    0x419281
  41929f:	or     edx,edi
  4192a1:	mov    bh,0x8
  4192a3:	dec    ecx
  4192a4:	fdivr  DWORD PTR [edx+0x7215bec8]
  4192aa:	mov    ecx,0xee784346
  4192af:	xlat   BYTE PTR ds:[ebx]
  4192b0:	lods   al,BYTE PTR ds:[esi]
  4192b1:	xor    esp,esp
  4192b3:	ret    
  4192b4:	mov    ds:0x3973323e,al
  4192b9:	dec    esi
  4192ba:	lods   eax,DWORD PTR ds:[esi]
  4192bb:	(bad)  
  4192bc:	lods   al,BYTE PTR ds:[esi]
  4192bd:	std    
  4192be:	jmp    DWORD PTR [edx-0x51]
  4192c1:	pop    es
  4192c2:	in     eax,dx
  4192c3:	push   eax
  4192c4:	std    
  4192c5:	push   esp
  4192c6:	test   DWORD PTR [eax+0x60],0x3ac13650
  4192cd:	mov    dl,0x65
  4192cf:	lock jmp 0x2c4b4600
  4192d5:	enter  0xeb2c,0xbe
  4192d9:	repz mov ebp,0xdba2fd2d
  4192df:	pop    eax
  4192e0:	ins    DWORD PTR es:[edi],dx
  4192e1:	mov    al,0x35
  4192e3:	imul   ebp,DWORD PTR [edi],0xffffffc3
  4192e6:	mov    bh,0x27
  4192e8:	xchg   edx,eax
  4192e9:	ret    
  4192ea:	dec    edx
  4192eb:	arpl   WORD PTR [ebx],di
  4192ed:	sub    DWORD PTR [esp+ebx*4-0x46],edi
  4192f1:	jbe    0x4192c1
  4192f3:	std    
  4192f4:	jnp    0x41929f
  4192f6:	cwde   
  4192f7:	dec    esi
  4192f8:	add    esp,DWORD PTR [edx]
  4192fa:	pop    ebp
  4192fb:	mov    eax,ds:0xdf66e6d2
  419300:	ret    
  419301:	clc    
  419302:	or     eax,eax
  419304:	jmp    0x4192c5
  419306:	mov    edi,0x9b17fb68
  41930b:	jo     0x4192e3
  41930d:	adc    DWORD PTR [ebx+0x3177f871],edx
  419313:	sbb    bl,BYTE PTR [edi]
  419315:	jmp    0x85b940c5
  41931a:	mov    bh,0xe4
  41931c:	jp     0x4192a0
  41931e:	pop    edi
  41931f:	cdq    
  419320:	retf   0xc641
  419323:	les    ebx,FWORD PTR [ebp+eiz*8+0x76a3bc6b]
  41932a:	mov    cl,0x59
  41932c:	nop
  41932d:	cli    
  41932e:	sbb    al,0x8d
  419330:	add    BYTE PTR [edi+0x40],dl
  419333:	or     dh,BYTE PTR [eax]
  419335:	(bad)  
  419336:	test   BYTE PTR [bx+di-0x34f7],dl
  41933b:	inc    edx
  41933c:	or     al,0x18
  41933e:	cmp    ah,BYTE PTR [edx]
  419340:	add    ch,0xd0
  419343:	fnsave [ecx-0x49]
  419346:	or     DWORD PTR [edx],edi
  419348:	and    ch,dl
  41934a:	push   0x69
  41934c:	jle    0x4192fa
  41934e:	inc    edx
  41934f:	aaa    
  419350:	js     0x4193bc
  419352:	mov    eax,0x6d5a33cb
  419357:	aam    0x6b
  419359:	loope  0x419396
  41935b:	test   DWORD PTR [ecx-0x56],ebp
  41935e:	sbb    dh,BYTE PTR [ecx+eax*2+0x1ba16ae7]
  419365:	push   ecx
  419366:	jne    0x4193b4
  419368:	test   eax,esp
  41936a:	aas    
  41936b:	retf   0x42da
  41936e:	dec    edi
  41936f:	cli    
  419370:	pop    ebp
  419371:	sahf   
  419372:	cmp    DWORD PTR [eax],ecx
  419374:	xor    DWORD PTR gs:[ebx-0x1679f145],ebp
  41937b:	gs xchg ecx,eax
  41937d:	std    
  41937e:	dec    ebx
  41937f:	rol    DWORD PTR [edi],0xb5
  419382:	pop    ds
  419383:	cmp    BYTE PTR [edi-0x605bb1e4],al
  419389:	jne    0x4193af
  41938b:	dec    edx
  41938c:	jne    0x419375
  41938e:	stos   BYTE PTR es:[edi],al
  41938f:	nop
  419390:	jp     0x419348
  419392:	or     BYTE PTR [edi],bh
  419394:	pop    edx
  419395:	jne    0x4193f3
  419397:	xor    eax,0xda42aaaa
  41939c:	sub    BYTE PTR [esp+ecx*4+0x726adb60],dh
  4193a3:	mov    edx,0x5a1b5e01
  4193a8:	ins    DWORD PTR es:[edi],dx
  4193a9:	rcl    BYTE PTR [ebx+0x1f8e82d3],0x4
  4193b0:	xchg   ecx,eax
  4193b1:	jg     0x4193c4
  4193b3:	dec    edx
  4193b4:	les    edi,FWORD PTR [edi-0x69]
  4193b7:	test   dh,dl
  4193b9:	leave  
  4193ba:	and    eax,DWORD PTR [ecx]
  4193bc:	ds inc ebx
  4193be:	lods   al,BYTE PTR ds:[esi]
  4193bf:	sahf   
  4193c0:	loop   0x419374
  4193c2:	(bad)  
  4193c3:	aad    0x78
  4193c5:	std    
  4193c6:	ins    DWORD PTR es:[edi],dx
  4193c7:	inc    ecx
  4193c8:	xchg   ebp,eax
  4193c9:	fs je  0x41936b
  4193cc:	test   BYTE PTR [ebx-0x1c8dffe8],0x8b
  4193d3:	cmp    esi,eax
  4193d5:	jae    0x4193c1
  4193d7:	sti    
  4193d8:	enter  0xb688,0x3e
  4193dc:	lock sbb al,0xdb
  4193df:	pusha  
  4193e0:	push   ebp
  4193e1:	or     ebx,edi
  4193e3:	and    DWORD PTR [edx+0x15],eax
  4193e6:	mov    eax,ds:0x516eb340
  4193eb:	xchg   edi,eax
  4193ec:	inc    ebp
  4193ed:	int    0x5d
  4193ef:	mov    edx,0x15861733
  4193f4:	idiv   BYTE PTR [ecx+0x1889516]
  4193fa:	sbb    bh,BYTE PTR [eax]
  4193fc:	mov    ebp,0x3256e1f4
  419401:	mov    bh,0x17
  419403:	rol    DWORD PTR [eax],0x90
  419406:	xor    ch,BYTE PTR [esi]
  419408:	cmc    
  419409:	arpl   bp,dx
  41940b:	lods   eax,DWORD PTR ds:[esi]
  41940c:	inc    esi
  41940d:	sub    dh,BYTE PTR [edi+0x57]
  419410:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419411:	(bad)  
  419412:	jmp    0xdf5b5966
  419417:	cmc    
  419418:	adc    al,0xec
  41941a:	mov    BYTE PTR [edi],al
  41941c:	ja     0x41949c
  41941e:	and    al,0x98
  419420:	cmp    al,0xd7
  419422:	mov    dh,bl
  419424:	into   
  419425:	xchg   edi,eax
  419426:	and    bh,dh
  419428:	sbb    DWORD PTR [edx+esi*4+0x788698df],esi
  41942f:	pop    ebx
  419430:	and    BYTE PTR [ebx+0x47],ah
  419433:	fadd   QWORD PTR [ebp+0x1d8d7385]
  419439:	in     al,dx
  41943a:	fild   DWORD PTR [edi-0x2dfe26f4]
  419440:	jmp    0xa121710
  419445:	mov    ds:0x223a1d0a,eax
  41944a:	out    0x6,al
  41944c:	pop    esp
  41944d:	(bad)  
  41944f:	gs push esi
  419451:	cmp    eax,0x3657093
  419456:	mov    DWORD PTR [eax-0x6c],ecx
  419459:	sub    DWORD PTR [esi+0x3c],0x3c
  41945d:	rcr    DWORD PTR [edi+0x6abeca1f],1
  419463:	sti    
  419464:	sub    dh,BYTE PTR [ebx+0x1a2a9034]
  41946a:	lock dec ebp
  41946c:	div    BYTE PTR [edi]
  41946e:	retf   0xcc11
  419471:	ret    0xe3e0
  419474:	xchg   esp,eax
  419475:	jg     0x4194ac
  419477:	xlat   BYTE PTR ds:[ebx]
  419478:	repnz loope 0x4194d9
  41947b:	repz dec edi
  41947d:	push   ds
  41947e:	adc    al,0x4c
  419480:	inc    ecx
  419481:	fldcw  WORD PTR [edx-0x20]
  419484:	sub    al,0x5d
  419486:	inc    esi
  419487:	or     ebx,ebp
  419489:	xchg   ebx,eax
  41948a:	inc    eax
  41948b:	mov    DWORD PTR [eax],eax
  41948d:	fistp  QWORD PTR [eax]
  41948f:	sbb    eax,0x7f5c259d
  419494:	mov    esp,0x21a04a46
  419499:	mov    dh,0x5a
  41949b:	cmp    ecx,ecx
  41949d:	mov    bh,0x20
  41949f:	pop    ebp
  4194a0:	cs pop ebp
  4194a2:	mov    al,0x42
  4194a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194a5:	add    DWORD PTR [esi-0x2d],esp
  4194a8:	xchg   BYTE PTR [ebx-0xb],al
  4194ab:	push   ss
  4194ac:	mov    edx,0x731684c1
  4194b1:	inc    edx
  4194b2:	mov    ds:0x8cf825bf,al
  4194b7:	lahf   
  4194b8:	cmp    eax,0x35d7df9e
  4194bd:	mov    ss,WORD PTR [esi-0x47569f78]
  4194c3:	cmp    DWORD PTR [esi],edi
  4194c5:	push   eax
  4194c6:	test   DWORD PTR [ebx+0x6a48244c],ecx
  4194cc:	imul   BYTE PTR [esi]
  4194ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194cf:	inc    ebp
  4194d0:	xchg   edx,eax
  4194d1:	inc    eax
  4194d2:	std    
  4194d3:	and    eax,0x3c311d75
  4194d8:	outs   dx,BYTE PTR ds:[esi]
  4194d9:	inc    ebx
  4194da:	in     al,0x5c
  4194dc:	enter  0xa759,0xa1
  4194e0:	lock fadd DWORD PTR [ebp-0x14]
  4194e4:	xchg   ebx,eax
  4194e5:	xrelease mov BYTE PTR [edi-0x1e],ah
  4194e9:	or     ch,bh
  4194eb:	dec    ebx
  4194ec:	inc    ecx
  4194ed:	or     eax,0x17e71deb
  4194f2:	dec    ebx
  4194f3:	adc    eax,0xf444356c
  4194f8:	dec    edx
  4194f9:	and    DWORD PTR [ebx-0x45],ecx
  4194fc:	mov    dl,0x79
  4194fe:	cmp    BYTE PTR [ecx-0x69a1de0c],bh
  419504:	xchg   BYTE PTR [eax],cl
  419506:	sub    eax,0x6f887ba0
  41950b:	(bad)  
  41950c:	adc    dl,BYTE PTR [edi-0x526e67b3]
  419512:	or     DWORD PTR [edx+0x2d],ebx
  419515:	cmp    edx,edx
  419517:	cwde   
  419518:	ja     0x4194c1
  41951a:	cmp    DWORD PTR [eax],edx
  41951c:	int    0x9b
  41951e:	add    eax,DWORD PTR [ebx-0x19c08dc1]
  419524:	sar    BYTE PTR [esi+0x56],1
  419527:	sub    BYTE PTR [ecx+0x17871d48],al
  41952d:	jae    0x419517
  41952f:	mov    edi,0x94d91dbe
  419534:	xchg   ebx,eax
  419535:	xchg   edx,eax
  419536:	test   sp,si
  419539:	aad    0xc2
  41953b:	xlat   BYTE PTR ds:[ebx]
  41953c:	outs   dx,BYTE PTR ds:[esi]
  41953d:	fdiv   QWORD PTR [ecx]
  41953f:	cs jns 0x41958a
  419542:	ret    0x6a58
  419545:	add    dh,BYTE PTR [edx-0x30]
  419548:	inc    edi
  419549:	jne    0x4194fc
  41954b:	(bad)  
  41954c:	push   ds
  41954d:	popa   
  41954e:	pop    edi
  41954f:	lods   al,BYTE PTR ds:[esi]
  419550:	mov    edi,0x7554835b
  419555:	mov    ebx,0xc74f075d
  41955a:	pop    es
  41955b:	jo     0x4195a7
  41955d:	mov    al,0x5
  41955f:	stos   DWORD PTR es:[edi],eax
  419560:	pop    ss
  419561:	dec    ebx
  419562:	adc    edx,DWORD PTR [edx-0x487f9e13]
  419568:	xor    DWORD PTR [eax],edi
  41956a:	mov    ebp,0x633edbed
  41956f:	aad    0x79
  419571:	test   BYTE PTR ds:0x6a123836,0xb2
  419578:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419579:	ror    bh,cl
  41957b:	mov    edx,0xd37c2bb5
  419580:	loop   0x4195ea
  419582:	mov    BYTE PTR [esi-0x1a91e2da],bh
  419588:	dec    esp
  419589:	retf   0x2af8
  41958c:	js     0x419600
  41958e:	scas   al,BYTE PTR es:[edi]
  41958f:	jge    0x4195b7
  419591:	into   
  419592:	daa    
  419593:	imul   eax,DWORD PTR [eax-0x7e],0xc3e625c0
  41959a:	les    esi,FWORD PTR [edi-0x299cfbb]
  4195a0:	rcl    ecx,cl
  4195a2:	or     DWORD PTR ds:0x3f63bd52,ebp
  4195a8:	sub    ch,bl
  4195aa:	in     eax,0x95
  4195ac:	enter  0x3c39,0xda
  4195b0:	stc    
  4195b1:	outs   dx,BYTE PTR ds:[esi]
  4195b2:	call   0x769e:0x5fc99ae3
  4195b9:	add    al,0x12
  4195bb:	rcr    DWORD PTR [ebp+0x44778c83],cl
  4195c1:	sahf   
  4195c2:	cmp    al,0x8d
  4195c4:	stc    
  4195c5:	mov    edx,DWORD PTR [edi-0x1f]
  4195c8:	cli    
  4195c9:	aad    0xe
  4195cb:	push   0x76
  4195cd:	out    dx,al
  4195ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195cf:	in     al,dx
  4195d0:	fist   DWORD PTR [esi]
  4195d2:	cmc    
  4195d3:	xor    al,0x38
  4195d5:	sbb    dl,bl
  4195d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195d8:	nop
  4195d9:	mov    DWORD PTR [esi],eax
  4195db:	fsubr  st(2),st
  4195dd:	dec    eax
  4195de:	or     DWORD PTR [edi-0x1e3eb3eb],ebx
  4195e4:	or     eax,0x67e8f886
  4195e9:	pushf  
  4195ea:	(bad)  
  4195eb:	mov    ecx,0x34cdc4a2
  4195f0:	dec    ecx
  4195f1:	retf   0x79d3
  4195f4:	add    eax,0x8711ae4b
  4195f9:	xlat   BYTE PTR ds:[ebx]
  4195fa:	lea    eax,[ebx]
  4195fc:	pop    esi
  4195fd:	push   eax
  4195fe:	and    eax,DWORD PTR [eax+0x4f]
  419601:	jo     0x41962c
  419603:	clc    
  419604:	push   cs
  419605:	das    
  419606:	adc    al,0x61
  419608:	dec    ebx
  419609:	pop    edx
  41960a:	je     0x41966f
  41960c:	add    edx,eax
  41960e:	lds    edx,FWORD PTR [edx-0x3a2ec8a5]
  419614:	add    al,dh
  419616:	push   ss
  419617:	fcom   DWORD PTR [ebx-0x737f7655]
  41961d:	div    BYTE PTR [edx+0x1]
  419620:	and    edi,DWORD PTR [edi+0x6906d7e7]
  419626:	push   ecx
  419627:	das    
  419628:	ins    BYTE PTR es:[edi],dx
  419629:	sbb    BYTE PTR [edi+0x200d8c37],al
  41962f:	fidiv  DWORD PTR [ebx+0xa]
  419632:	inc    ebp
  419633:	(bad)  [edx+0x637baa8e]
  419639:	cmp    BYTE PTR [edi],al
  41963b:	mov    dl,0x3a
  41963d:	clc    
  41963e:	lods   eax,DWORD PTR ds:[esi]
  41963f:	shl    DWORD PTR [ecx],cl
  419641:	sti    
  419642:	xor    eax,0x4b5b67ce
  419647:	xchg   edi,eax
  419648:	jl     0x4195fd
  41964a:	xor    BYTE PTR ds:0x5b14769b,0x8e
  419651:	ret    
  419652:	pop    ds
  419653:	into   
  419654:	xor    ebp,DWORD PTR ds:0x1748fb3c
  41965a:	pop    ds
  41965b:	xchg   esi,eax
  41965c:	add    DWORD PTR [edi-0x29],esp
  41965f:	inc    edx
  419660:	dec    esp
  419661:	sti    
  419662:	mov    eax,ds:0xcbe90668
  419667:	mov    cs:0xd29f0603,eax
  41966d:	(bad)  
  41966e:	mov    ecx,0x212db584
  419673:	je     0x419638
  419675:	add    ecx,DWORD PTR [edi-0x4e]
  419678:	xor    BYTE PTR [ecx-0x49],0xb8
  41967c:	mov    esi,0x3ac1b71e
  419681:	in     al,dx
  419682:	dec    ebp
  419683:	sub    eax,eax
  419685:	scas   al,BYTE PTR es:[edi]
  419686:	cwde   
  419687:	shl    BYTE PTR [esi],1
  419689:	xchg   ebp,eax
  41968a:	fs rcl ecx,0xc3
  41968e:	aaa    
  41968f:	or     eax,0xce56d7f5
  419694:	(bad)  
  419696:	push   0xb0ccf75d
  41969b:	out    dx,al
  41969c:	sub    al,0xb6
  41969e:	and    esp,DWORD PTR [eax+0x79]
  4196a1:	int3   
  4196a2:	in     al,dx
  4196a3:	sub    ecx,DWORD PTR [edi+0x117522cc]
  4196a9:	sub    eax,0x6fa4f2e4
  4196ae:	arpl   cx,si
  4196b0:	test   al,0xbc
  4196b2:	lea    eax,[ebx]
  4196b4:	es sub al,ah
  4196b7:	arpl   WORD PTR [esi+0x24],si
  4196ba:	push   ss
  4196bb:	push   esp
  4196bc:	nop
  4196bd:	(bad)  [eax]
  4196bf:	dec    ebx
  4196c0:	popf   
  4196c1:	ss loope 0x419734
  4196c4:	push   es
  4196c5:	mov    WORD PTR cs:[eax+0x70],gs
  4196c9:	push   0x7d
  4196cb:	mov    eax,0x7ca743d6
  4196d0:	xor    ebx,DWORD PTR [ecx+0x1f]
  4196d3:	rcl    DWORD PTR [esi+0x5a],1
  4196d6:	cld    
  4196d7:	cmp    ecx,ecx
  4196d9:	sub    bl,0xd4
  4196dc:	mov    ch,0xdf
  4196de:	iret   
  4196df:	inc    edi
  4196e0:	outs   dx,DWORD PTR ds:[esi]
  4196e1:	ret    0xb7e3
  4196e4:	fwait
  4196e5:	xlat   BYTE PTR ds:[ebx]
  4196e6:	fs inc ebp
  4196e8:	add    DWORD PTR [ebp-0x205d928b],0xffffffe8
  4196ef:	xchg   edi,eax
  4196f0:	sbb    cl,BYTE PTR [edi-0x4f1bf494]
  4196f6:	sbb    al,0x48
  4196f8:	lea    ebx,[eax+ebx*1]
  4196fb:	pushf  
  4196fc:	ret    0x44d6
  4196ff:	lods   al,BYTE PTR ds:[esi]
  419700:	cdq    
  419701:	or     DWORD PTR [esi+0x5560b426],eax
  419707:	and    DWORD PTR [ecx],eax
  419709:	retf   0x278d
  41970c:	xchg   ecx,eax
  41970d:	mov    ds:0xdd342eda,eax
  419712:	xchg   esi,eax
  419713:	push   edx
  419714:	push   eax
  419715:	stc    
  419716:	mov    bl,0xe8
  419718:	sbb    ah,bl
  41971a:	jmp    0x419717
  41971c:	xchg   ch,dl
  41971e:	xor    eax,DWORD PTR ds:0x798c4409
  419724:	jecxz  0x4196ba
  419726:	std    
  419727:	call   0xc1bc:0xdea91867
  41972e:	push   ebp
  41972f:	pop    ecx
  419730:	dec    eax
  419731:	add    eax,0xa68318d5
  419736:	mov    cl,0x1d
  419738:	push   eax
  419739:	mov    al,BYTE PTR [eax-0x7]
  41973c:	adc    ebp,ebx
  41973e:	ins    BYTE PTR es:[edi],dx
  41973f:	out    0xbc,al
  419741:	push   ss
  419742:	cld    
  419743:	push   ss
  419744:	jle    0x4197a2
  419746:	mov    ebp,0xc2993947
  41974b:	in     al,dx
  41974c:	adc    dl,0xd5
  41974f:	xchg   edx,eax
  419750:	inc    ebp
  419751:	push   eax
  419752:	out    dx,al
  419753:	cmc    
  419754:	xor    DWORD PTR [eax],ebx
  419756:	sub    eax,0x6f796cbc
  41975b:	xor    eax,0x7c933e33
  419760:	es popa 
  419762:	fisttp WORD PTR [esp+esi*2-0x54893e6]
  419769:	xchg   esp,eax
  41976a:	int3   
  41976b:	push   eax
  41976c:	lea    eax,[edx]
  41976e:	rcl    BYTE PTR [edx-0x3f],1
  419771:	je     0x419759
  419773:	push   ecx
  419774:	bound  ebp,QWORD PTR [esi-0x12]
  419777:	and    ecx,DWORD PTR [ebx-0x4]
  41977a:	call   0xc9312153
  41977f:	hlt    
  419780:	adc    esi,esi
  419782:	pushf  
  419783:	mov    al,ah
  419785:	jge    0x419726
  419787:	push   ds
  419788:	test   eax,0x79faf068
  41978d:	aad    0x27
  41978f:	retf   
  419790:	or     DWORD PTR [ebp-0x57bcdfab],eax
  419796:	xor    DWORD PTR [ecx+0x18],esi
  419799:	mov    ah,0xfe
  41979b:	lods   eax,DWORD PTR ds:[esi]
  41979c:	xchg   edi,eax
  41979d:	leave  
  41979e:	dec    esp
  41979f:	shrd   DWORD PTR [edi+esi*1+0x5f],esp,cl
  4197a4:	fidivr DWORD PTR [eax]
  4197a6:	fwait
  4197a7:	test   eax,0x5a51d468
  4197ac:	jns    0x419742
  4197ae:	into   
  4197af:	in     eax,0x1b
  4197b1:	xchg   ebp,eax
  4197b2:	or     eax,0x3ec2dc93
  4197b7:	sub    DWORD PTR [ecx-0x7c],0x297dac9
  4197be:	jne    0x4197c4
  4197c0:	mov    esi,DWORD PTR [ebx+0xa]
  4197c3:	add    ch,BYTE PTR [edi+0x4896f71a]
  4197c9:	iret   
  4197ca:	mov    BYTE PTR [esi],dl
  4197cc:	cmp    al,0x27
  4197ce:	test   BYTE PTR [edx+0x77241db7],cl
  4197d4:	sub    ch,BYTE PTR [ebx-0x3a9f2079]
  4197da:	or     bh,BYTE PTR [edx-0x20]
  4197dd:	les    esi,FWORD PTR [edx+0xccd487d]
  4197e3:	daa    
  4197e4:	push   ss
  4197e5:	fbld   TBYTE PTR [edx+0x5f]
  4197e8:	and    DWORD PTR [eax-0x28635351],ebp
  4197ee:	adc    eax,0x6a4d5acd
  4197f3:	pop    DWORD PTR [eax+0x1346bc25]
  4197f9:	jne    0x41980f
  4197fb:	jne    0x41979e
  4197fd:	call   0xfecba3a
  419802:	out    0x4b,eax
  419804:	jbe    0x419863
  419806:	into   
  419807:	cmp    eax,0x9ee5c977
  41980c:	sbb    BYTE PTR [ecx+edi*8-0xc0d5b21],dl
  419813:	xchg   DWORD PTR [esi+0x1f9cc9c6],ecx
  419819:	push   esi
  41981a:	adc    al,0xc4
  41981c:	sbb    al,0x4
  41981e:	cld    
  41981f:	xchg   ebp,eax
  419820:	aaa    
  419821:	sbb    eax,0xbbc71c25
  419826:	dec    edx
  419827:	sbb    eax,0xbd1dcfad
  41982c:	xchg   ecx,eax
  41982d:	outs   dx,DWORD PTR ds:[esi]
  41982e:	daa    
  41982f:	xchg   ebx,eax
  419830:	sbb    BYTE PTR [ecx-0x79c5d1c],cl
  419836:	pushf  
  419837:	cmp    DWORD PTR [ebp-0x3],edi
  41983a:	dec    edi
  41983b:	es loopne 0x4197c5
  41983e:	jnp    0x419829
  419840:	xchg   edi,eax
  419841:	loopne 0x419889
  419843:	inc    eax
  419845:	gs pusha 
  419847:	cmp    al,0x54
  419849:	push   0x21
  41984b:	pop    ecx
  41984c:	jno    0x4198a8
  41984e:	fld    DWORD PTR [edi]
  419850:	cli    
  419851:	sub    esp,DWORD PTR [ebx]
  419853:	xor    ebp,ebx
  419855:	std    
  419856:	push   esp
  419857:	inc    BYTE PTR [edx-0x55fea93c]
  41985d:	xchg   esi,eax
  41985e:	add    al,0x3f
  419860:	lods   al,BYTE PTR ds:[esi]
  419861:	clc    
  419862:	mov    esi,0x2fd993dc
  419867:	mov    edx,0xcdce9ddf
  41986c:	sar    BYTE PTR [eax-0x60cc7f7],cl
  419872:	scas   al,BYTE PTR es:[edi]
  419873:	dec    ecx
  419874:	mov    esp,0xf5afdc52
  419879:	loop   0x419884
  41987b:	mov    dh,0xcc
  41987d:	shr    DWORD PTR [eax+eax*8+0x6564874],1
  419884:	or     dl,BYTE PTR [ecx]
  419886:	xchg   DWORD PTR [edi],ecx
  419888:	(bad)  
  419889:	into   
  41988a:	enter  0x77f9,0x31
  41988e:	mov    eax,ds:0xcc393169
  419893:	mov    dl,0x8c
  419895:	push   0x24
  419897:	in     eax,0x3f
  419899:	cmp    al,0x6d
  41989b:	dec    eax
  41989c:	cmp    eax,0x73ddd4a0
  4198a1:	or     ch,BYTE PTR [edi+edi*1]
  4198a4:	pop    ebp
  4198a5:	xor    dl,bl
  4198a7:	pop    edx
  4198a8:	ins    DWORD PTR es:[edi],dx
  4198a9:	add    BYTE PTR [ecx+esi*8],dl
  4198ac:	loope  0x4198b5
  4198ae:	push   esi
  4198af:	or     esi,edi
  4198b1:	mov    dh,0x36
  4198b3:	mov    ds:0x65fd3e79,eax
  4198b8:	and    DWORD PTR [eax-0x63],esi
  4198bb:	(bad)  
  4198bc:	sub    eax,DWORD PTR [esp+ebx*4-0x17]
  4198c0:	popa   
  4198c1:	adc    dh,cl
  4198c3:	sub    DWORD PTR [ebp+0x3b89df8d],edx
  4198c9:	std    
  4198ca:	add    eax,0xe0b3daab
  4198cf:	mov    ebx,0x7b91c76d
  4198d4:	les    eax,FWORD PTR [esi+edi*8-0x29]
  4198d8:	push   esp
  4198d9:	pop    ecx
  4198da:	in     eax,0x9e
  4198dc:	inc    ecx
  4198dd:	or     ebx,0xb68bfc75
  4198e3:	xor    DWORD PTR [esp+ecx*2-0x2],0x75
  4198e8:	jno    0x4198b6
  4198ea:	pop    ebp
  4198eb:	int    0xbf
  4198ed:	cdq    
  4198ee:	dec    esi
  4198ef:	shl    BYTE PTR [ecx+edi*1-0x591818b4],cl
  4198f6:	mov    al,0xff
  4198f8:	js     0x419947
  4198fa:	add    BYTE PTR [edi+0x7a],ch
  4198fd:	jl     0x4198b8
  4198ff:	jmp    0x13d541a6
  419904:	scas   al,BYTE PTR es:[edi]
  419905:	mov    dh,BYTE PTR [edx]
  419907:	fild   DWORD PTR [eax+0x10]
  41990a:	outs   dx,BYTE PTR ds:[esi]
  41990b:	rcr    DWORD PTR [edi],0x88
  41990e:	pop    ss
  41990f:	out    dx,eax
  419910:	rcl    DWORD PTR [edx-0x80],1
  419913:	cmp    al,0xf8
  419915:	in     eax,dx
  419916:	mov    ebp,0xbbb060e3
  41991b:	dec    ebp
  41991c:	imul   ebx,DWORD PTR [ebx-0x3c],0x73
  419920:	sbb    ch,0x2b
  419923:	adc    eax,0xce1876b0
  419928:	push   ss
  419929:	and    eax,0x895d6eac
  41992e:	test   eax,0xf7c627d4
  419933:	aaa    
  419934:	pop    ecx
  419935:	mov    eax,ds:0x88bf9eee
  41993a:	mov    WORD PTR [esi],?
  41993c:	cld    
  41993d:	inc    esi
  41993e:	cmp    cl,dl
  419940:	arpl   WORD PTR cs:[ebx],ax
  419943:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419944:	out    0xdd,eax
  419946:	fmul   DWORD PTR [edi-0x2]
  419949:	mov    ss:0x7ba57008,eax
  41994f:	fmul   DWORD PTR [ebp+0x32]
  419952:	imul   esi,DWORD PTR [si+0x40],0xbcfec89c
  41995a:	(bad)  
  41995b:	push   ebp
  41995c:	call   0xb34a9b1
  419961:	ficom  WORD PTR [ebx+0x81dca53]
  419967:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419968:	mov    al,0xa9
  41996a:	or     cl,BYTE PTR [edi-0x57]
  41996d:	jnp    0x4198fe
  41996f:	or     ebp,edi
  419971:	push   ebp
  419972:	fidivr DWORD PTR [edi+0x10]
  419975:	int3   
  419976:	pushf  
  419977:	adc    eax,0x52ce630a
  41997c:	dec    ebp
  41997d:	pop    edx
  41997e:	add    al,ah
  419980:	shr    BYTE PTR [eax+0x4d],0x3a
  419984:	ins    DWORD PTR es:[edi],dx
  419985:	test   esi,esi
  419987:	scas   eax,DWORD PTR es:[edi]
  419988:	cmp    bh,BYTE PTR [esp+esi*2-0x4e13503a]
  41998f:	popf   
  419990:	jae    0x4199b6
  419992:	push   edi
  419993:	add    al,0x24
  419995:	inc    esp
  419996:	and    edi,DWORD PTR [edx*8-0x70e69aaa]
  41999d:	push   ds
  41999e:	sub    ch,dl
  4199a0:	lahf   
  4199a1:	arpl   WORD PTR [eax-0x5a],sp
  4199a4:	mov    eax,0xd7ecd330
  4199a9:	cld    
  4199aa:	cld    
  4199ab:	pop    ebp
  4199ac:	es cwde 
  4199ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199af:	sahf   
  4199b0:	xor    BYTE PTR [ebx+0x2f780670],bh
  4199b6:	test   eax,0x7a644cbe
  4199bb:	add    DWORD PTR [eax-0x33e5e826],esi
  4199c1:	xor    DWORD PTR ds:[esi-0x44e24104],esp
  4199c8:	inc    edx
  4199c9:	inc    edi
  4199ca:	xchg   ecx,eax
  4199cb:	loopne 0x419a1e
  4199cd:	not    BYTE PTR [ebx+edx*4]
  4199d0:	sub    BYTE PTR [ecx+eax*4],dl
  4199d3:	push   eax
  4199d4:	xor    DWORD PTR [ebp-0x54],edx
  4199d7:	std    
  4199d8:	cmp    eax,0xa8fbefd3
  4199dd:	ficom  WORD PTR [eax+ebx*8]
  4199e0:	in     al,dx
  4199e1:	repnz sbb BYTE PTR [edi-0x5459bf09],ah
  4199e8:	not    BYTE PTR [ebp-0x75]
  4199eb:	sub    eax,DWORD PTR [ebx+0x55b1db8e]
  4199f1:	retf   0x8279
  4199f4:	pop    ds
  4199f5:	aaa    
  4199f6:	push   0x969855d0
  4199fb:	enter  0xe92b,0x21
  4199ff:	fadd   QWORD PTR [esi-0x56]
  419a02:	idiv   DWORD PTR [ecx+0x1c6bfcb9]
  419a08:	in     eax,dx
  419a09:	sub    eax,0x8145c1e9
  419a0e:	pop    edi
  419a0f:	dec    edi
  419a10:	shl    BYTE PTR [edx+esi*4-0x18],0xdb
  419a15:	adc    al,0xcf
  419a17:	sbb    dh,BYTE PTR [ebp-0x77e07188]
  419a1d:	cli    
  419a1e:	jmp    0x419a64
  419a20:	in     eax,0xc0
  419a22:	jmp    0xa86e:0x2c731b7b
  419a29:	and    eax,0x7bfa0ad4
  419a2e:	loopne 0x4199bd
  419a30:	or     bh,BYTE PTR [ebp+0x2a]
  419a33:	jmp    0x1886949f
  419a38:	ins    DWORD PTR es:[edi],dx
  419a39:	sub    eax,0xe598f16f
  419a3e:	les    eax,FWORD PTR [esi+edi*2]
  419a41:	fwait
  419a42:	lahf   
  419a43:	(bad)  
  419a44:	call   0xed82:0xc7d491bb
  419a4b:	or     DWORD PTR [edx],0x13b726dd
  419a51:	out    0x45,eax
  419a53:	and    al,0x15
  419a55:	dec    ecx
  419a56:	add    DWORD PTR [edx+0x6e],eax
  419a59:	retf   0xfba6
  419a5c:	mov    DWORD PTR [esi+0x2aa31753],0xa3827612
  419a66:	sub    eax,0x2c8bf9c8
  419a6b:	sub    al,BYTE PTR [edx-0x8]
  419a6e:	pop    esp
  419a6f:	mul    DWORD PTR [edx+0x24]
  419a72:	not    DWORD PTR [esi+0x340490d9]
  419a78:	shl    BYTE PTR [esi+0x3f42cd03],cl
  419a7e:	jmp    0x419af3
  419a80:	cmp    BYTE PTR [edx+0x4dd3e3af],dh
  419a86:	(bad)  
  419a87:	fcomi  st,st(1)
  419a89:	or     BYTE PTR [edx-0x4010d9e9],dh
  419a8f:	(bad)  
  419a90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a91:	test   eax,0x5bbe0ce5
  419a96:	push   ecx
  419a97:	cmc    
  419a98:	and    DWORD PTR [ecx-0x478bc2a5],eax
  419a9e:	ret    0xe437
  419aa1:	adc    ecx,ebp
  419aa3:	cwde   
  419aa4:	ss sbb eax,0x70912999
  419aaa:	dec    eax
  419aab:	jo     0x419b2c
  419aad:	stos   DWORD PTR es:[edi],eax
  419aae:	sub    BYTE PTR [ebx],bl
  419ab0:	pop    edi
  419ab1:	xchg   ebx,eax
  419ab2:	jno    0x419aa3
  419ab4:	inc    esp
  419ab5:	mov    ?,edi
  419ab7:	pop    edx
  419ab8:	jno    0x419a61
  419aba:	mov    BYTE PTR [edi-0x30],bh
  419abd:	and    al,0xd
  419abf:	sbb    BYTE PTR [edx-0x72],bh
  419ac2:	and    eax,0xaefa546e
  419ac7:	xchg   esi,eax
  419ac8:	jmp    DWORD PTR [ebp+0x2a]
  419acb:	mov    esi,0x4b15ac05
  419ad0:	mov    bh,0xad
  419ad2:	and    ah,BYTE PTR [edi+0x6f]
  419ad5:	xchg   ebp,eax
  419ad6:	push   ss
  419ad7:	lds    eax,FWORD PTR [ecx]
  419ad9:	aaa    
  419ada:	in     eax,dx
  419adb:	xchg   edi,eax
  419adc:	mov    al,ds:0x5dc93941
  419ae1:	cmp    al,0x58
  419ae3:	jno    0x419a87
  419ae5:	xchg   esi,eax
  419ae6:	cli    
  419ae7:	bound  edi,QWORD PTR [edi]
  419ae9:	in     al,dx
  419aea:	pop    ebp
  419aeb:	xchg   dh,dh
  419aed:	in     eax,dx
  419aee:	fmul   DWORD PTR [ebp+0x44176496]
  419af4:	mov    esp,DWORD PTR [edi-0x4112069c]
  419afa:	into   
  419afb:	aaa    
  419afc:	mov    bh,0x41
  419afe:	leave  
  419aff:	stos   BYTE PTR es:[edi],al
  419b00:	ins    DWORD PTR es:[edi],dx
  419b01:	mov    ds:0x2c64dbff,al
  419b06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b07:	fstp   DWORD PTR [edi-0x7a]
  419b0a:	jecxz  0x419af3
  419b0c:	daa    
  419b0d:	add    BYTE PTR [edx-0x4c],bh
  419b10:	sbb    DWORD PTR [esp+edi*4],ecx
  419b13:	inc    ecx
  419b14:	mov    ds:0xa66357d6,al
  419b19:	pop    ecx
  419b1a:	mov    ebx,0xb9d83376
  419b1f:	(bad)  
  419b20:	(bad)  [edx+0x12]
  419b23:	fs pop ds
  419b25:	or     eax,0x19f37ece
  419b2a:	xchg   edx,eax
  419b2b:	test   ebx,esp
  419b2d:	push   ds
  419b2e:	dec    ebp
  419b2f:	sbb    edx,DWORD PTR [esi-0x5f39d561]
  419b35:	cdq    
  419b36:	xor    DWORD PTR [edi+ecx*8],edx
  419b39:	test   eax,0x39b35fb6
  419b3e:	pop    ebp
  419b3f:	add    eax,0x58074405
  419b44:	mov    ah,0xde
  419b46:	mov    BYTE PTR [ecx-0x6edf6e2a],dl
  419b4c:	add    esi,DWORD PTR [esi]
  419b4e:	or     BYTE PTR [ecx],dh
  419b50:	sar    BYTE PTR [ebp*4+0x60cde41],1
  419b57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b58:	or     ebp,0x8c96ee41
  419b5e:	test   al,0xd1
  419b60:	pop    eax
  419b61:	sub    al,ah
  419b63:	and    edi,DWORD PTR ds:0x6927a513
  419b69:	xchg   ebp,eax
  419b6a:	cmp    DWORD PTR [eax-0x4b83cb0b],ebp
  419b70:	mov    esi,0x5b28fcc0
  419b75:	jne    0x419b70
  419b77:	sub    BYTE PTR [edx+0x70],0xe9
  419b7b:	int3   
  419b7c:	sub    ch,BYTE PTR [edx]
  419b7e:	pop    edx
  419b7f:	mov    ebx,cs
  419b81:	dec    eax
  419b82:	(bad)  
  419b83:	std    
  419b84:	cmp    DWORD PTR [ecx],ecx
  419b86:	je     0x419b88
  419b88:	(bad)  
  419b89:	es stos DWORD PTR es:[edi],eax
  419b8b:	add    al,0x5e
  419b8d:	mov    ecx,0x644c76a1
  419b92:	cld    
  419b93:	cs add al,0xfc
  419b96:	dec    ebx
  419b97:	xchg   DWORD PTR [eax-0x705eb0fe],esi
  419b9d:	dec    ebp
  419b9e:	les    edi,FWORD PTR [ecx+0x52f3ea38]
  419ba4:	jbe    0x419bcc
  419ba6:	lahf   
  419ba7:	pop    ecx
  419ba8:	sbb    eax,0x715ab611
  419bad:	cld    
  419bae:	scas   al,BYTE PTR es:[edi]
  419baf:	adc    al,0x19
  419bb1:	lods   eax,DWORD PTR ds:[esi]
  419bb2:	mov    ah,0xd6
  419bb4:	lock dec ecx
  419bb6:	xor    ebx,DWORD PTR [ecx]
  419bb8:	dec    ebx
  419bb9:	add    al,0xa3
  419bbb:	into   
  419bbc:	cmp    eax,0xfd5f4025
  419bc1:	fcom   DWORD PTR ds:0xbe48e486
  419bc7:	enter  0xd34e,0x9a
  419bcb:	sbb    edx,edi
  419bcd:	cmp    BYTE PTR [ecx+ecx*2],al
  419bd0:	cmp    DWORD PTR [ebx],esi
  419bd2:	dec    eax
  419bd3:	arpl   di,cx
  419bd5:	xchg   edi,eax
  419bd6:	jge    0x419b93
  419bd8:	jmp    0x4fd:0xfec58eb8
  419bdf:	(bad)  
  419be0:	popf   
  419be1:	test   BYTE PTR [edx+edx*8],al
  419be4:	ret    
  419be5:	dec    ebp
  419be6:	jmp    0xa55fa057
  419beb:	aas    
  419bec:	mov    edx,es
  419bee:	call   0xb9b3:0x5739ea22
  419bf5:	addr16 add al,0xd8
  419bf8:	xchg   ecx,eax
  419bf9:	xlat   BYTE PTR ds:[ebx]
  419bfa:	mov    edx,0x81c33152
  419bff:	mov    al,0xa7
  419c01:	lahf   
  419c02:	dec    edx
  419c03:	add    DWORD PTR [ebx+esi*8-0x6d],eax
  419c07:	push   cs
  419c08:	repnz or DWORD PTR [esi-0x1772bdce],eax
  419c0f:	es mov dl,0x2d
  419c12:	add    ah,BYTE PTR [eax-0x43]
  419c15:	adc    bl,BYTE PTR [edi-0x3148d3ee]
  419c1b:	push   es
  419c1c:	pop    esp
  419c1d:	mov    esi,ebx
  419c1f:	ins    BYTE PTR es:[edi],dx
  419c20:	jmp    0x419c65
  419c22:	cmp    edi,ecx
  419c24:	fist   DWORD PTR [ecx+edx*2+0x72b9088c]
  419c2b:	mov    eax,0x8b183450
  419c30:	dec    esi
  419c31:	push   es
  419c32:	enter  0x270e,0xe4
  419c36:	ss and dh,BYTE PTR fs:[edx-0x7183c156]
  419c3e:	je     0x419be1
  419c40:	imul   DWORD PTR [ecx]
  419c42:	loope  0x419c30
  419c44:	jno    0x419bd3
  419c46:	pop    ebx
  419c47:	inc    ebx
  419c48:	jp     0x419ca7
  419c4a:	push   es
  419c4b:	fdivr  DWORD PTR [ebx]
  419c4d:	push   cs
  419c4e:	push   eax
  419c4f:	mov    dl,0x1
  419c51:	clc    
  419c52:	and    DWORD PTR [ecx],esp
  419c54:	mov    esp,0x3c425d81
  419c59:	sub    BYTE PTR [edi-0x2c6c16f8],ch
  419c5f:	outs   dx,DWORD PTR ds:[esi]
  419c60:	dec    ebp
  419c61:	leave  
  419c62:	repz hlt 
  419c64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c65:	shr    DWORD PTR [ecx+eax*1+0x48],cl
  419c69:	test   BYTE PTR [edi+edi*1-0x5d8ec2f4],bh
  419c70:	add    al,0xfd
  419c72:	cdq    
  419c73:	adc    esp,DWORD PTR [edi]
  419c75:	cs test ah,bl
  419c78:	scas   eax,DWORD PTR es:[edi]
  419c79:	lea    esp,[ebx]
  419c7b:	stos   DWORD PTR es:[edi],eax
  419c7c:	div    DWORD PTR [eax-0x10]
  419c7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c80:	(bad)  
  419c81:	xchg   DWORD PTR ss:[esi+0x3daf537e],ebx
  419c88:	jmp    0x419c0c
  419c8a:	mov    BYTE PTR [esi],ch
  419c8c:	sbb    al,0x91
  419c8e:	jae    0x419cfc
  419c90:	and    ebx,DWORD PTR [eax-0x70]
  419c93:	push   0xffffffd4
  419c95:	push   edi
  419c96:	xor    al,0x49
  419c98:	sbb    edx,ecx
  419c9a:	push   cs
  419c9b:	sbb    edx,DWORD PTR [edi]
  419c9d:	xor    esp,esi
  419c9f:	call   0x6282:0x47804ecf
  419ca6:	and    esi,DWORD PTR [ebp+0xb77b4d1]
  419cac:	ja     0x419cb7
  419cae:	mov    esi,0x62ba4276
  419cb3:	out    dx,al
  419cb4:	cmp    eax,0xa0fa6082
  419cb9:	rol    BYTE PTR [esi+eiz*2],1
  419cbc:	push   0x5f783669
  419cc1:	aaa    
  419cc2:	(bad)  
  419cc3:	jbe    0x419cd0
  419cc5:	push   0xc5180f44
  419cca:	and    eax,0xe157b608
  419ccf:	jno    0x419cf9
  419cd1:	out    dx,eax
  419cd2:	(bad)  
  419cd3:	mov    ds:0x5708c0d0,al
  419cd8:	fyl2xp1 
  419cda:	jns    0x419d07
  419cdc:	and    eax,0x5e7f19d
  419ce1:	pop    esi
  419ce2:	nop
  419ce3:	sbb    esi,DWORD PTR [edi]
  419ce5:	enter  0x2512,0x3a
  419ce9:	xchg   DWORD PTR [edi-0x1d],ecx
  419cec:	push   0x7b
  419cee:	lods   al,BYTE PTR ds:[esi]
  419cef:	adc    bh,BYTE PTR es:[esi]
  419cf2:	out    dx,eax
  419cf3:	or     eax,0x3cedf78f
  419cf8:	and    al,0x44
  419cfa:	mov    ds:0xec97739e,eax
  419cff:	sub    al,0xda
  419d01:	(bad)  [ebp-0x39]
  419d04:	inc    eax
  419d05:	shr    ch,cl
  419d07:	pop    esi
  419d08:	fnstenv [ebx+0x65]
  419d0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d0c:	mov    eax,ds:0x340f5a77
  419d11:	xor    DWORD PTR [esi+0x5b0cd91f],ebx
  419d17:	mov    al,0xfe
  419d19:	adc    al,0x1b
  419d1b:	mov    ebx,0xcb207d2d
  419d20:	mov    edx,0x12ec20a4
  419d25:	fs cs inc eax
  419d28:	ror    DWORD PTR [edx+0x10],1
  419d2b:	mov    DWORD PTR ds:0x1722bed5,ecx
  419d31:	int    0xb7
  419d33:	leave  
  419d34:	inc    BYTE PTR [ebp+eax*8-0x3a]
  419d38:	pcmpgtb mm0,QWORD PTR [esi-0x7e46c7b0]
  419d3f:	dec    edi
  419d40:	xor    cl,al
  419d42:	pcmpeqb mm6,QWORD PTR [esi+ecx*1-0x7c]
  419d47:	push   es
  419d48:	cmp    eax,0x7f802155
  419d4d:	enter  0x1647,0x89
  419d51:	retf   
  419d52:	pop    ecx
  419d53:	xor    eax,0x6be8216d
  419d58:	add    BYTE PTR [ebx+ecx*2-0x9],dl
  419d5c:	out    0x75,eax
  419d5e:	dec    ecx
  419d5f:	and    edx,DWORD PTR [edx]
  419d61:	xchg   DWORD PTR [eax+0x53],ebx
  419d64:	mov    cl,bl
  419d66:	fdivrp st(4),st
  419d68:	xchg   esi,eax
  419d69:	sti    
  419d6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d6b:	fwait
  419d6c:	dec    esp
  419d6d:	mov    esi,0x129f4575
  419d72:	push   edx
  419d73:	out    dx,al
  419d74:	jbe    0x419d37
  419d76:	jbe    0x419d7e
  419d78:	jno    0x419dce
  419d7a:	jmp    0x419d0f
  419d7c:	ins    DWORD PTR es:[edi],dx
  419d7d:	push   0x9ca3079d
  419d82:	pop    esp
  419d83:	retf   0x9db5
  419d86:	cwde   
  419d87:	(bad)
  419d8a:	xchg   DWORD PTR [ebx],ecx
  419d8c:	dec    esi
  419d8d:	inc    edx
  419d8e:	call   0xe4187b94
  419d93:	cwde   
  419d94:	shl    DWORD PTR [eax+0x5],1
  419d97:	pop    ebp
  419d98:	pop    ebx
  419d99:	mov    edi,0x439e9541
  419d9e:	popa   
  419d9f:	dec    esp
  419da0:	xchg   esi,eax
  419da1:	adc    DWORD PTR [edx+0x21c8ee2c],edx
  419da7:	outs   dx,DWORD PTR ds:[esi]
  419da8:	or     al,0xd5
  419daa:	scas   al,BYTE PTR es:[edi]
  419dab:	mov    ah,BYTE PTR [ecx-0x414b3fae]
  419db1:	mov    ds:0xac21ce7d,eax
  419db6:	xchg   ebx,eax
  419db7:	sar    DWORD PTR [ecx+eax*8+0x4e3b8f1f],0xbf
  419dbf:	jg     0x419e0c
  419dc1:	call   0xbe1e8bda
  419dc6:	daa    
  419dc7:	daa    
  419dc8:	fimul  WORD PTR [ebp-0x2f7176b]
  419dce:	adc    ecx,DWORD PTR [ecx]
  419dd0:	loop   0x419e45
  419dd2:	adc    ch,BYTE PTR [esi-0x44c711a3]
  419dd8:	bound  eax,QWORD PTR ds:0x72451d8b
  419dde:	ror    edx,0x8b
  419de1:	jmp    0x3204:0xa9332f47
  419de8:	jle    0x419dd5
  419dea:	dec    eax
  419deb:	pop    esi
  419dec:	data16 fistp QWORD PTR [eax]
  419def:	lods   al,BYTE PTR ds:[esi]
  419df0:	pop    edx
  419df1:	mov    ebx,0xcac69d9
  419df6:	mov    dh,BYTE PTR [edi+0x9]
  419df9:	sar    BYTE PTR [eax],1
  419dfb:	sbb    dh,ch
  419dfd:	test   bh,dh
  419dff:	dec    esp
  419e00:	jmp    0x5fd9:0x34b8c17a
  419e07:	inc    eax
  419e08:	pop    edx
  419e09:	sbb    BYTE PTR [eax+0x29],bh
  419e0c:	int    0x50
  419e0e:	daa    
  419e0f:	ins    DWORD PTR es:[edi],dx
  419e10:	cld    
  419e11:	sub    BYTE PTR [esi+0x76],al
  419e14:	adc    edx,DWORD PTR [edx-0x44]
  419e17:	or     DWORD PTR [esi-0x2928afc1],esi
  419e1d:	fadd   DWORD PTR [edi+0x10076353]
  419e23:	dec    edx
  419e24:	test   DWORD PTR [esi],0x2415b3e5
  419e2a:	pop    ecx
  419e2b:	lods   eax,DWORD PTR ds:[esi]
  419e2c:	xchg   edx,eax
  419e2d:	jp     0x419e7d
  419e2f:	adc    ebx,DWORD PTR [edx+0x10084c]
  419e35:	shr    BYTE PTR [ebp-0x26c27d3c],cl
  419e3b:	sbb    al,BYTE PTR [edx-0x42]
  419e3e:	adc    WORD PTR [eax+0x3e],0x5f2c
  419e44:	clc    
  419e45:	sbb    edx,edi
  419e47:	out    dx,al
  419e48:	pop    esi
  419e49:	arpl   WORD PTR ds:0xd913db5,sp
  419e4f:	xchg   edx,eax
  419e50:	stc    
  419e51:	loopne 0x419e82
  419e53:	dec    edx
  419e54:	aam    0xf0
  419e56:	rcr    esp,cl
  419e58:	outs   dx,DWORD PTR ds:[esi]
  419e59:	test   eax,0x3b6a6085
  419e5e:	jns    0x419e53
  419e60:	sar    BYTE PTR [ecx-0x161b135a],cl
  419e66:	or     al,0xc0
  419e68:	in     al,0xea
  419e6a:	aaa    
  419e6b:	mov    eax,0xc1c7911b
  419e70:	aas    
  419e71:	sbb    eax,0xec100dda
  419e76:	icebp  
  419e77:	lahf   
  419e78:	xor    BYTE PTR [edi-0x18a225a0],bh
  419e7e:	les    ecx,FWORD PTR [ebx]
  419e80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e81:	scas   eax,DWORD PTR es:[edi]
  419e82:	cld    
  419e83:	ja     0x419e73
  419e85:	or     esi,0x5141c8dc
  419e8b:	mov    ebp,0xb666335b
  419e90:	shl    dh,1
  419e92:	call   0x383b:0x323fdf3b
  419e99:	je     0x419f0a
  419e9b:	gs aam 0x2c
  419e9e:	mov    bl,bl
  419ea0:	std    
  419ea1:	jl     0x419e3f
  419ea3:	sub    ah,al
  419ea5:	lods   eax,DWORD PTR ds:[esi]
  419ea6:	dec    esi
  419ea7:	jno    0x419ee4
  419ea9:	aas    
  419eaa:	nop
  419eab:	sbb    ebx,edi
  419ead:	jl     0x419e55
  419eaf:	mov    ebx,0xd4ceda0a
  419eb4:	fdivr  QWORD PTR [ebp+edx*8+0x726a04fe]
  419ebb:	test   eax,0xaa0695ba
  419ec0:	mov    ah,0xc8
  419ec2:	inc    ecx
  419ec3:	and    al,0xd8
  419ec5:	loopne 0x419f24
  419ec7:	pop    ds
  419ec8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ec9:	retf   0x3878
  419ecc:	inc    edx
  419ecd:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ecf:	add    bh,al
  419ed1:	pop    ecx
  419ed2:	das    
  419ed3:	not    DWORD PTR [edi+0xc047f22]
  419ed9:	or     BYTE PTR [eax+ecx*1+0x584666f2],dl
  419ee0:	add    eax,esi
  419ee2:	mov    edi,0xe7cd6ee7
  419ee7:	pop    es
  419ee8:	sub    BYTE PTR [edx-0x632c1912],cl
  419eee:	mov    BYTE PTR [esi+0x36],al
  419ef1:	scas   al,BYTE PTR es:[edi]
  419ef2:	xchg   ah,ah
  419ef4:	jnp    0x419efd
  419ef6:	rol    BYTE PTR [eax+0x391a0162],0xbb
  419efd:	outs   dx,BYTE PTR ds:[esi]
  419efe:	sbb    DWORD PTR [eax-0x4810010e],esp
  419f04:	addr16 int 0xa4
  419f07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f08:	mov    ah,0x67
  419f0a:	das    
  419f0b:	ror    DWORD PTR [ecx+edx*8],0xd5
  419f0f:	mov    ebx,0x913a37a4
  419f14:	hlt    
  419f15:	fld    DWORD PTR [ebx-0x22]
  419f18:	xor    cl,ch
  419f1a:	and    eax,0x84956a94
  419f1f:	sar    DWORD PTR [ebx-0x91c7289],cl
  419f25:	ror    DWORD PTR [edx],1
  419f27:	mov    dh,0x17
  419f29:	dec    esp
  419f2a:	cdq    
  419f2b:	dec    esp
  419f2c:	(bad)  
  419f2d:	cli    
  419f2e:	out    0xa,eax
  419f30:	jl     0x419f8b
  419f32:	push   ds
  419f33:	(bad)  
  419f34:	cld    
  419f35:	clc    
  419f36:	jns    0x419f85
  419f38:	xchg   DWORD PTR [eax-0x5],edi
  419f3b:	bound  ebx,QWORD PTR [ecx-0x4a]
  419f3e:	scas   al,BYTE PTR es:[edi]
  419f3f:	xor    cl,BYTE PTR [ecx+eiz*8-0x2a631d1]
  419f46:	outs   dx,DWORD PTR ds:[esi]
  419f47:	lock fdiv DWORD PTR [eax-0x66]
  419f4b:	(bad)  
  419f4d:	ja     0x419f8d
  419f4f:	mov    ds:0xc1b1a38f,al
  419f54:	sub    cl,bh
  419f56:	bound  ebp,QWORD PTR [edx]
  419f58:	sub    al,0x5b
  419f5a:	ins    DWORD PTR es:[edi],dx
  419f5b:	mov    eax,ds:0x2110d995
  419f60:	and    al,0xa
  419f62:	mov    edx,0x869dc1f7
  419f67:	mov    eax,ds:0xbba9b9bb
  419f6c:	fadd   QWORD PTR [eax+0xf]
  419f6f:	cdq    
  419f70:	cmp    eax,0x2042855
  419f75:	in     al,0xa5
  419f77:	inc    edi
  419f78:	test   al,0xf4
  419f7a:	sbb    eax,0x4717a901
  419f7f:	dec    ebx
  419f80:	(bad)  [ebx+0x4c]
  419f83:	jae    0x419f45
  419f85:	not    BYTE PTR ds:0xe89b3c97
  419f8b:	aad    0xf2
  419f8d:	mov    ebp,0xe9faefed
  419f92:	iret   
  419f93:	xor    DWORD PTR [ecx-0x49],esp
  419f96:	cmp    eax,0xcc53f977
  419f9b:	or     BYTE PTR [esi],bl
  419f9d:	inc    esp
  419f9e:	in     al,dx
  419f9f:	mov    ds:0x3167ad53,eax
  419fa4:	ret    0x265d
  419fa7:	dec    esi
  419fa8:	xlat   BYTE PTR ds:[ebx]
  419fa9:	retf   0xeca5
  419fac:	loop   0x419fff
  419fae:	mov    ebx,0x9aa4d77b
  419fb3:	or     al,BYTE PTR [ebx-0x73282f5d]
  419fb9:	dec    esp
  419fba:	in     eax,dx
  419fbb:	scas   eax,DWORD PTR es:[edi]
  419fbc:	aam    0x1
  419fbe:	(bad)  
  419fbf:	mov    edx,0x857c4fc9
  419fc4:	iret   
  419fc5:	aam    0xcf
  419fc7:	fld    DWORD PTR [ebx+0x22]
  419fca:	in     al,0x59
  419fcc:	sbb    al,bl
  419fce:	repz fmul QWORD PTR [ebx+0x46427a59]
  419fd5:	mov    edx,0x1d44e735
  419fda:	pusha  
  419fdb:	sub    edx,DWORD PTR ds:0x919ca0d4
  419fe1:	aam    0xb5
  419fe3:	ins    BYTE PTR es:[edi],dx
  419fe4:	xor    DWORD PTR [ebx+ebp*1],esi
  419fe7:	push   es
  419fe8:	and    eax,0x506a158e
  419fed:	cli    
  419fee:	ja     0x419fa3
  419ff0:	int    0x30
  419ff2:	xchg   esp,eax
  419ff3:	jb     0x419fe5
  419ff5:	fwait
  419ff6:	stc    
  419ff7:	leave  
  419ff8:	push   ecx
  419ff9:	lock out dx,eax
  419ffb:	add    ch,BYTE PTR [eax]
  419ffd:	or     ah,ch
  419fff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a000:	ins    DWORD PTR es:[edi],dx
  41a001:	cmp    bh,BYTE PTR [ebx+0x0]
  41a004:	mov    ecx,0x9a970aa
  41a009:	mov    edi,0xb92f6420
  41a00e:	sbb    BYTE PTR [si-0x15],0xfd
  41a013:	xor    ebp,DWORD PTR [eax]
  41a015:	in     al,dx
  41a016:	shl    BYTE PTR ds:0xcf565673,0x57
  41a01d:	push   esi
  41a01e:	outs   dx,BYTE PTR ds:[esi]
  41a01f:	mov    dl,0xb5
  41a021:	repnz mov ebp,0x25fd9e4f
  41a027:	test   eax,0x7a2756c1
  41a02c:	fnstenv [esp+ecx*2-0x39]
  41a030:	mov    al,0x35
  41a032:	fimul  WORD PTR [esi]
  41a034:	sbb    ebp,0xffffffc8
  41a037:	imul   ecx,DWORD PTR [ebx+0x4ce08990],0x2bf248d5
  41a041:	ds push cs
  41a043:	loop   0x41a074
  41a045:	jg     0x41a090
  41a047:	mul    dl
  41a049:	jmp    0xdb0e:0xd2580008
  41a050:	or     eax,0x1fe51234
  41a055:	sub    al,0x91
  41a057:	imul   edi,ebp,0x78ca3545
  41a05d:	jl     0x41a051
  41a05f:	popf   
  41a060:	ja     0x41a09b
  41a062:	and    eax,DWORD PTR [ecx+0x19]
  41a065:	stos   DWORD PTR es:[edi],eax
  41a066:	adc    dl,dl
  41a068:	(bad)  
  41a069:	jecxz  0x41a0a5
  41a06b:	loop   0x41a021
  41a06d:	sbb    edx,edx
  41a06f:	cmp    eax,0xd68c968e
  41a074:	and    edx,DWORD PTR [ebx+0x5b61ec06]
  41a07a:	push   ds
  41a07b:	sub    eax,0x5a38d62b
  41a080:	test   eax,0xd05e229c
  41a085:	mov    ebx,0x578da9ba
  41a08a:	dec    ecx
  41a08b:	daa    
  41a08c:	fs sbb al,0x53
  41a08f:	pop    esi
  41a090:	fdivr  QWORD PTR [ebx+0x1b852e18]
  41a096:	ret    0xb303
  41a099:	scas   eax,DWORD PTR es:[edi]
  41a09a:	mov    DWORD PTR [esi-0x64862bdf],ebx
  41a0a0:	dec    ebx
  41a0a1:	push   edi
  41a0a2:	ret    0x4f50
  41a0a5:	sbb    ch,BYTE PTR [edi]
  41a0a7:	and    eax,0xe6310871
  41a0ac:	xchg   edx,eax
  41a0ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0ae:	xchg   esi,eax
  41a0af:	inc    esp
  41a0b0:	int3   
  41a0b1:	std    
  41a0b2:	mov    esi,0xf22d7ca1
  41a0b7:	jmp    DWORD PTR [ebp+ebp*2-0x2c63247a]
  41a0be:	into   
  41a0bf:	xchg   edi,eax
  41a0c0:	enter  0x6e6a,0xf0
  41a0c4:	jbe    0x41a11d
  41a0c6:	mov    eax,ds:0x2db747fc
  41a0cb:	dec    edi
  41a0cc:	fisttp WORD PTR [esi+0x6bb5537b]
  41a0d2:	jmp    0x41a131
  41a0d4:	call   0x9cdc:0x2b74264d
  41a0db:	inc    esi
  41a0dc:	int    0xce
  41a0de:	inc    edi
  41a0df:	and    esi,eax
  41a0e1:	push   ebp
  41a0e2:	sbb    eax,0x64f0bcd8
  41a0e7:	mov    ebx,edi
  41a0e9:	loopne 0x41a0ff
  41a0eb:	(bad)  
  41a0ec:	adc    BYTE PTR [ebx-0x59acdd17],bl
  41a0f2:	mov    ds:0xc8911fb2,eax
  41a0f7:	inc    eax
  41a0f8:	sbb    eax,esp
  41a0fa:	pop    es
  41a0fb:	les    esi,FWORD PTR [edi+0x23be6d65]
  41a101:	sahf   
  41a102:	mov    al,ds:0xfdfcce06
  41a107:	test   DWORD PTR [eax+0x24],0x17e9949a
  41a10e:	mov    dl,0x5a
  41a110:	sbb    ebx,DWORD PTR ds:0xfe38988d
  41a116:	cmp    BYTE PTR [ebx-0x3a9c199e],ch
  41a11c:	lahf   
  41a11d:	imul   edi,edx,0xf5c7b407
  41a123:	dec    esp
  41a124:	sbb    al,0x62
  41a126:	shl    BYTE PTR [eax-0x1c],cl
  41a129:	jno    0x41a128
  41a12b:	mov    eax,ds:0xcafab6bd
  41a130:	push   esi
  41a131:	mov    ebx,0x254aae88
  41a136:	inc    edi
  41a137:	aaa    
  41a138:	sar    BYTE PTR [edi+ebx*8-0x7ef247e3],0x25
  41a140:	jg     0x41a0c4
  41a142:	dec    ebx
  41a143:	xchg   ebp,edx
  41a145:	pop    ebp
  41a146:	stc    
  41a147:	jle    0x41a0ff
  41a149:	add    BYTE PTR [edx],bh
  41a14b:	mov    ebp,0x547c2e1
  41a150:	push   ecx
  41a151:	mov    cl,0xde
  41a153:	or     eax,0x47d27bdd
  41a158:	push   ss
  41a159:	push   0x45
  41a15b:	(bad)  
  41a15c:	nop
  41a15d:	je     0x41a0ea
  41a15f:	test   DWORD PTR [edi+0x1acf0d5c],0x31d86b4e
  41a169:	pushf  
  41a16a:	sbb    eax,0xc1d56a37
  41a16f:	int3   
  41a170:	pop    es
  41a171:	push   ds
  41a172:	jmp    0x90040467
  41a177:	enter  0x6d45,0x8d
  41a17b:	pop    ecx
  41a17c:	sub    DWORD PTR [edi-0x34b07aad],esi
  41a182:	add    BYTE PTR [edi],al
  41a184:	sbb    dh,BYTE PTR [ecx+edi*2-0x21]
  41a188:	shr    esp,cl
  41a18a:	push   0x37
  41a18c:	shl    bl,1
  41a18e:	and    bh,al
  41a190:	rol    BYTE PTR [ecx+0x5fc61dd6],cl
  41a196:	loop   0x41a153
  41a198:	adc    esi,DWORD PTR [edi-0x28]
  41a19b:	aad    0xc8
  41a19d:	lea    esp,[ecx+edx*4+0x36]
  41a1a1:	pop    ebx
  41a1a2:	out    dx,eax
  41a1a3:	jo     0x41a211
  41a1a5:	inc    esi
  41a1a6:	call   0x5d33fe7d
  41a1ab:	es sub eax,0x122ef79f
  41a1b1:	pop    ds
  41a1b2:	jl     0x41a1c6
  41a1b4:	test   eax,0xa52b84b8
  41a1b9:	xor    BYTE PTR [esp+eax*8-0x38cfe790],cl
  41a1c0:	sub    ebp,ebp
  41a1c2:	sbb    eax,DWORD PTR es:[esi+0x76]
  41a1c6:	and    ch,BYTE PTR ds:0x2d1f8077
  41a1cc:	test   DWORD PTR [edx],esp
  41a1ce:	(bad)  
  41a1cf:	mov    eax,0x7d066f98
  41a1d4:	sub    DWORD PTR [eax],0x6349dec8
  41a1da:	fldpi  
  41a1dc:	dec    edx
  41a1dd:	inc    edx
  41a1de:	or     al,bh
  41a1e0:	repz mov ch,0xb0
  41a1e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1e4:	push   edx
  41a1e5:	adc    DWORD PTR [edx+0x63],esi
  41a1e8:	dec    esi
  41a1e9:	loopne 0x41a1cc
  41a1eb:	sahf   
  41a1ec:	repz pop ds
  41a1ee:	mov    ebx,0x340f6f31
  41a1f3:	mov    dl,BYTE PTR [ebp+0x33c7c987]
  41a1f9:	jp     0x41a214
  41a1fb:	xchg   DWORD PTR [esi+0x2a],ebp
  41a1fe:	das    
  41a1ff:	jmp    0xec95fee
  41a204:	mov    dh,0xd7
  41a206:	cmc    
  41a207:	(bad)  
  41a208:	cdq    
  41a209:	dec    ecx
  41a20a:	cmp    DWORD PTR [edx+ecx*2-0x43528763],edi
  41a211:	je     0x41a1b4
  41a213:	(bad)  
  41a214:	push   ebp
  41a215:	(bad)  
  41a216:	fcom   st(5)
  41a218:	push   ecx
  41a219:	int3   
  41a21a:	ss sbb cl,cl
  41a21d:	invd   
  41a21f:	jae    0x41a26d
  41a221:	push   DWORD PTR [edx+0x254d59b4]
  41a227:	pop    ss
  41a228:	ds pop ecx
  41a22a:	mov    dh,0xe3
  41a22c:	stos   DWORD PTR es:[edi],eax
  41a22d:	and    al,0x52
  41a22f:	mov    edx,0x5e1f2c88
  41a234:	adc    eax,0xb327b00c
  41a239:	dec    edx
  41a23a:	mov    esi,0xd11aab0e
  41a23f:	int    0xb9
  41a241:	shl    DWORD PTR [edx],cl
  41a243:	add    al,0x84
  41a245:	sbb    BYTE PTR ds:0xf4842e31,bl
  41a24b:	xor    edx,esi
  41a24d:	push   ebx
  41a24e:	jmp    0x4130:0xae2a6ac5
  41a255:	fisubr DWORD PTR [esi+0x7dcfcab8]
  41a25b:	cmp    cl,BYTE PTR [eax]
  41a25d:	mov    bl,0x1e
  41a25f:	leave  
  41a260:	sbb    al,0x94
  41a262:	fisubr WORD PTR [eax]
  41a264:	pusha  
  41a265:	push   0x52e8d761
  41a26a:	xchg   edi,eax
  41a26b:	out    0x1c,al
  41a26d:	ds mov al,0xb8
  41a270:	call   0x3422:0xe75af0dd
  41a277:	and    DWORD PTR [edx-0x6be64c8d],edi
  41a27d:	push   ss
  41a27e:	mov    ch,0x6f
  41a280:	push   ebx
  41a281:	aad    0x24
  41a283:	push   es
  41a284:	shr    esp,0x34
  41a287:	add    ebx,DWORD PTR [ecx+ecx*1+0x3685e1a2]
  41a28e:	div    BYTE PTR [eax]
  41a290:	test   BYTE PTR [edi+0x7],bl
  41a293:	scas   ax,WORD PTR es:[edi]
  41a295:	out    dx,al
  41a296:	pop    ss
  41a297:	scas   ax,WORD PTR es:[edi]
  41a299:	jle    0x41a25b
  41a29b:	mov    esi,0x73f2312
  41a2a0:	pop    ebp
  41a2a1:	mov    edi,0x2c58f323
  41a2a6:	sub    eax,0x4fdeddc1
  41a2ab:	jmp    0xbed70f5c
  41a2b0:	push   eax
  41a2b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2b2:	jle    0x41a239
  41a2b4:	mov    ebx,0x1f23c613
  41a2b9:	mov    dl,0xe2
  41a2bb:	sbb    bh,BYTE PTR ds:0xad88ee0d
  41a2c1:	cmp    eax,DWORD PTR [ecx+0x43a55b93]
  41a2c7:	mov    ds:0xcd44a713,al
  41a2cc:	cmp    al,0x5a
  41a2ce:	fisubr DWORD PTR ds:0x1de86746
  41a2d4:	cmp    al,0x60
  41a2d6:	(bad)  
  41a2d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2d8:	mov    al,ds:0xd69d446d
  41a2dd:	popf   
  41a2de:	push   edx
  41a2df:	pop    esi
  41a2e0:	xchg   ebp,eax
  41a2e1:	add    DWORD PTR [eax+0x60],eax
  41a2e4:	enter  0xb9eb,0xa6
  41a2e8:	cmp    DWORD PTR [eax+0x4d],ebx
  41a2eb:	mov    ds:0x9d787ba9,eax
  41a2f0:	dec    edi
  41a2f1:	stc    
  41a2f2:	test   al,0xf2
  41a2f4:	mov    eax,ds:0x10809657
  41a2f9:	pop    eax
  41a2fa:	cmp    eax,0xb19d4b1a
  41a2ff:	inc    edx
  41a300:	std    
  41a301:	cmc    
  41a302:	or     eax,0x24d7719
  41a307:	fbld   TBYTE PTR [ebx+0x53]
  41a30a:	pop    es
  41a30b:	xchg   BYTE PTR [esi-0x7333ef94],ah
  41a311:	test   al,0xa5
  41a313:	test   BYTE PTR [eax+0x2f],cl
  41a316:	(bad)  
  41a317:	xchg   ebp,eax
  41a318:	int3   
  41a319:	mov    ?,WORD PTR [eax-0x11]
  41a31c:	cmp    eax,0x30ce89a3
  41a321:	cmovg  ebp,DWORD PTR [eax-0x7c]
  41a325:	popa   
  41a326:	nop
  41a327:	frstor [ebp-0x6b]
  41a32a:	iret   
  41a32b:	dec    eax
  41a32c:	add    DWORD PTR [eax-0x58],0xfffffffb
  41a330:	cmp    al,0xb4
  41a332:	test   al,0xbb
  41a334:	pop    edi
  41a335:	add    al,0xe4
  41a337:	cmp    eax,0x88d6e382
  41a33c:	sub    eax,0xb2b0400a
  41a341:	xchg   ecx,eax
  41a342:	push   edi
  41a343:	jmp    0x7d49:0xe04ae4d9
  41a34a:	inc    esp
  41a34b:	retf   0xa5fe
  41a34e:	xor    DWORD PTR [edi+0x38b1b8ae],0xc
  41a355:	ret    0x8d5d
  41a358:	dec    esp
  41a359:	xchg   edx,eax
  41a35a:	cmp    BYTE PTR [edx-0xe87b2b5],ah
  41a360:	popa   
  41a361:	ret    0xdc60
  41a364:	test   al,0x73
  41a366:	mov    bl,0x95
  41a368:	or     ebx,edi
  41a36a:	sub    cl,ch
  41a36c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a36d:	in     al,0x8d
  41a36f:	addr16 pop edx
  41a371:	gs jns 0x41a3a7
  41a374:	adc    DWORD PTR [edi-0x4003662d],edx
  41a37a:	repnz icebp 
  41a37c:	icebp  
  41a37d:	test   DWORD PTR [edx],ebx
  41a37f:	inc    edi
  41a380:	xchg   esp,eax
  41a381:	leave  
  41a382:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a383:	dec    edi
  41a384:	adc    al,0x24
  41a386:	push   edi
  41a387:	sar    DWORD PTR [ecx-0x9],1
  41a38a:	cmp    edi,eax
  41a38c:	das    
  41a38d:	call   0xdbd2:0x174bfb43
  41a394:	loopne 0x41a336
  41a396:	mov    eax,DWORD PTR [ecx-0x3a]
  41a399:	or     esp,DWORD PTR [ebp+0x15324a63]
  41a39f:	mov    eax,0xdf8f3d3e
  41a3a4:	sbb    dl,BYTE PTR [esi]
  41a3a6:	jmp    0x762e60a8
  41a3ab:	pusha  
  41a3ac:	dec    edx
  41a3ad:	and    al,0xc5
  41a3af:	xchg   ebx,eax
  41a3b0:	test   DWORD PTR es:[ecx],eax
  41a3b3:	inc    esp
  41a3b4:	lds    ecx,FWORD PTR [edx+eax*8]
  41a3b7:	test   al,0x82
  41a3b9:	rcl    BYTE PTR [ebx+ecx*1-0x33],cl
  41a3bd:	rcl    DWORD PTR [esi+0x64f8c9f8],1
  41a3c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3c4:	fisub  WORD PTR [ecx-0x3f]
  41a3c7:	mov    bh,0x80
  41a3c9:	add    edx,esi
  41a3cb:	lods   eax,DWORD PTR ds:[esi]
  41a3cc:	pop    ebp
  41a3cd:	call   0xd83d4168
  41a3d2:	loope  0x41a368
  41a3d4:	aam    0x1
  41a3d6:	int3   
  41a3d7:	push   0xffffffea
  41a3d9:	mov    ds:0x7e061d9e,al
  41a3de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3df:	inc    ecx
  41a3e0:	mov    DWORD PTR [ebx],eax
  41a3e2:	lods   eax,DWORD PTR ds:[esi]
  41a3e3:	add    DWORD PTR [esi+0x23],edi
  41a3e6:	in     eax,0x2d
  41a3e8:	cli    
  41a3e9:	jg     0x41a380
  41a3eb:	out    dx,eax
  41a3ec:	mov    al,0xb5
  41a3ee:	test   WORD PTR [eax+0x46],dx
  41a3f2:	rcr    ebp,cl
  41a3f4:	fld    st(7)
  41a3f6:	(bad)  
  41a3f7:	pop    eax
  41a3f8:	cmp    BYTE PTR [edi],dh
  41a3fa:	dec    esi
  41a3fb:	jmp    0xc6e5:0x99eff101
  41a402:	sub    dl,al
  41a404:	pop    ecx
  41a405:	in     al,dx
  41a406:	sbb    cl,dh
  41a408:	out    dx,al
  41a409:	jecxz  0x41a3e6
  41a40b:	call   0xe71d54fb
  41a410:	inc    esi
  41a411:	mov    bl,0x4f
  41a413:	mov    dh,0x36
  41a415:	jbe    0x41a433
  41a417:	xchg   esp,edi
  41a419:	sti    
  41a41a:	jbe    0x41a472
  41a41c:	icebp  
  41a41d:	ret    
  41a41e:	call   0x4ecd:0x186896b2
  41a425:	dec    edi
  41a426:	jno    0x41a498
  41a428:	stc    
  41a429:	mov    WORD PTR [ebp-0x30],es
  41a42c:	imul   ebx,DWORD PTR ds:0xc5d2a7f,0x2f
  41a433:	arpl   WORD PTR [edx+0x4ff80a6e],bp
  41a439:	sbb    al,0xd5
  41a43b:	xchg   esp,eax
  41a43c:	sbb    cl,bh
  41a43e:	xor    al,0x6a
  41a440:	stos   DWORD PTR es:[edi],eax
  41a441:	pushf  
  41a442:	fimul  DWORD PTR [ebp+ecx*4-0x6d7499f5]
  41a449:	inc    ebp
  41a44a:	(bad)  
  41a44b:	xchg   edi,eax
  41a44c:	int3   
  41a44d:	or     edx,DWORD PTR [ebx-0x5b618511]
  41a453:	dec    edi
  41a454:	pop    edi
  41a455:	jg     0x41a447
  41a457:	pusha  
  41a458:	xchg   ebp,eax
  41a459:	aad    0x8e
  41a45b:	scas   al,BYTE PTR es:[edi]
  41a45c:	outs   dx,DWORD PTR ds:[esi]
  41a45d:	leave  
  41a45e:	jmp    DWORD PTR [ebx]
  41a460:	and    al,0xb0
  41a462:	xor    BYTE PTR [ebx],ch
  41a464:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a465:	xor    eax,0xe60845bc
  41a46a:	or     cl,cl
  41a46c:	mov    ebp,0xe00e6c93
  41a471:	mov    cl,0x79
  41a473:	mov    dl,0xa2
  41a475:	add    DWORD PTR [eax],ecx
  41a477:	xor    eax,0x8d497eed
  41a47c:	fldcw  WORD PTR [esi-0x5b]
  41a47f:	mov    ch,0x18
  41a481:	push   esp
  41a482:	daa    
  41a483:	data16 (bad) 
  41a485:	or     DWORD PTR [ecx],ebp
  41a487:	repz repz fwait
  41a48a:	in     eax,dx
  41a48b:	mov    al,0xd1
  41a48d:	pop    edi
  41a48e:	adc    ebx,DWORD PTR [edi+0x4206ae81]
  41a494:	test   BYTE PTR [eax-0x133ed94b],0x32
  41a49b:	add    BYTE PTR [eax+0x73],bh
  41a49e:	or     DWORD PTR [ecx],esi
  41a4a0:	test   DWORD PTR [edx],0xe4b2686b
  41a4a6:	jnp    0x41a4b7
  41a4a8:	mov    BYTE PTR [ebp+0x261f34ac],0x3d
  41a4af:	cmp    BYTE PTR [ecx+eiz*4+0x570a6866],dh
  41a4b6:	dec    eax
  41a4b7:	mov    dh,0xe4
  41a4b9:	in     al,0xdc
  41a4bb:	add    bh,ah
  41a4bd:	lahf   
  41a4be:	call   0x1e01:0x348d7cd
  41a4c5:	and    eax,0xb9ee9302
  41a4ca:	inc    ebp
  41a4cb:	jmp    esp
  41a4cd:	pop    ds
  41a4ce:	jmp    0xb85f:0x8cb34de5
  41a4d5:	push   eax
  41a4d6:	fild   DWORD PTR [edi+0x1c1de0b1]
  41a4dc:	fwait
  41a4dd:	dec    edx
  41a4de:	jmp    0x41a509
  41a4e0:	lods   eax,DWORD PTR ds:[esi]
  41a4e1:	cmc    
  41a4e2:	xor    DWORD PTR [eax],0x62
  41a4e5:	jbe    0x41a4f2
  41a4e7:	imul   ebp,edi,0xffffff85
  41a4ea:	repz sbb cl,dl
  41a4ed:	push   ds
  41a4ee:	push   cs
  41a4ef:	mov    DWORD PTR [edx-0x435359e7],ebp
  41a4f5:	pop    es
  41a4f6:	mov    gs,WORD PTR [ebx+0x26]
  41a4f9:	xor    esp,esi
  41a4fb:	es sub dl,bh
  41a4fe:	fnstcw WORD PTR [esi-0x72]
  41a501:	sub    DWORD PTR [esi+eax*2],eax
  41a504:	(bad)  
  41a505:	out    dx,eax
  41a506:	inc    esi
  41a507:	dec    esi
  41a508:	xor    al,0x3e
  41a50a:	in     al,dx
  41a50b:	adc    al,dl
  41a50d:	lods   al,BYTE PTR ds:[esi]
  41a50e:	inc    ecx
  41a50f:	sbb    al,0xfd
  41a511:	xchg   ecx,eax
  41a512:	inc    ecx
  41a513:	mov    ch,0xd8
  41a515:	cmc    
  41a516:	jmp    0x41a565
  41a518:	test   eax,0x1d1951f4
  41a51d:	imul   ecx,DWORD PTR [eax+esi*2-0x16],0x7d9b4616
  41a525:	push   eax
  41a526:	stos   DWORD PTR es:[edi],eax
  41a527:	loope  0x41a549
  41a529:	out    dx,eax
  41a52a:	or     cl,cl
  41a52c:	or     eax,0x52851cb7
  41a531:	int    0xa2
  41a533:	mov    edi,0x9cdc3790
  41a538:	cmp    BYTE PTR [edi-0x4],bl
  41a53b:	push   cs
  41a53c:	xchg   edi,eax
  41a53d:	sbb    DWORD PTR [edx],edx
  41a53f:	cmp    DWORD PTR [esp+edx*1],eax
  41a542:	sub    DWORD PTR [ebx+edi*4-0x18],eax
  41a546:	inc    ebx
  41a547:	dec    ebx
  41a548:	outs   dx,DWORD PTR ds:[esi]
  41a549:	add    al,0x71
  41a54b:	je     0x41a4d6
  41a54d:	xchg   esp,eax
  41a54e:	push   edx
  41a54f:	and    eax,0xbf402090
  41a554:	fwait
  41a555:	daa    
  41a556:	not    cl
  41a558:	(bad)  
  41a559:	mov    BYTE PTR [edx+ebx*8+0x35a2ea58],bl
  41a560:	jp     0x41a536
  41a562:	(bad)  
  41a563:	sbb    al,0x3e
  41a565:	ror    DWORD PTR [ebx],cl
  41a567:	lds    ebp,FWORD PTR [eax]
  41a569:	sbb    esp,DWORD PTR [esi-0x5ca965b7]
  41a56f:	mul    DWORD PTR [ecx-0x2798b071]
  41a575:	cmp    eax,0xab00c4e1
  41a57a:	neg    BYTE PTR [ebx]
  41a57c:	(bad)  
  41a57d:	shl    DWORD PTR [esi],cl
  41a57f:	or     eax,0xc48fe5d4
  41a584:	fadd   DWORD PTR [edi-0x400379d7]
  41a58a:	pop    ebx
  41a58b:	xlat   BYTE PTR ds:[ebx]
  41a58c:	push   ds
  41a58d:	test   al,0xc9
  41a58f:	mov    edi,0x1397521
  41a594:	in     al,dx
  41a595:	jbe    0x41a607
  41a597:	pop    ebp
  41a598:	add    BYTE PTR [eax-0x32],al
  41a59b:	push   cs
  41a59c:	push   ebp
  41a59d:	dec    esi
  41a59e:	retf   
  41a59f:	enter  0xb9c3,0x55
  41a5a3:	int    0xa
  41a5a5:	arpl   WORD PTR [esi-0x5ce304be],si
  41a5ab:	bound  ebx,QWORD PTR [ecx+0x3e]
  41a5ae:	out    0x5,eax
  41a5b0:	sbb    eax,DWORD PTR [ecx]
  41a5b2:	into   
  41a5b3:	sub    eax,0x291e149f
  41a5b8:	mov    esi,0xf792affd
  41a5bd:	adc    eax,0x73e7a663
  41a5c2:	lods   eax,DWORD PTR ds:[esi]
  41a5c3:	sahf   
  41a5c4:	(bad)  [ecx]
  41a5c6:	sbb    al,BYTE PTR [edx+0x64]
  41a5c9:	icebp  
  41a5ca:	push   esp
  41a5cb:	ror    ebx,0x28
  41a5ce:	push   0x27
  41a5d0:	call   FWORD PTR [ecx]
  41a5d2:	aas    
  41a5d3:	clc    
  41a5d4:	std    
  41a5d5:	into   
  41a5d6:	xchg   esp,eax
  41a5d7:	push   edi
  41a5d8:	popa   
  41a5d9:	outs   dx,BYTE PTR ds:[esi]
  41a5da:	push   ebp
  41a5db:	outs   dx,DWORD PTR ds:[esi]
  41a5dc:	fldcw  WORD PTR [ebx+0x65f805b]
  41a5e2:	mov    ecx,0x71b6b4c
  41a5e7:	popa   
  41a5e8:	sbb    eax,0xce0c03aa
  41a5ed:	int3   
  41a5ee:	(bad)  
  41a5ef:	sub    BYTE PTR [ebx-0x5df2bc25],dh
  41a5f5:	ds cs dec edi
  41a5f8:	into   
  41a5f9:	sbb    ebx,DWORD PTR [ecx+0x70f4eef9]
  41a5ff:	sbb    eax,0x1a9f9f3b
  41a604:	mov    WORD PTR [eax],?
  41a606:	shl    BYTE PTR [edx+0x2],0x12
  41a60a:	xor    ecx,DWORD PTR [edx-0x15f063b7]
  41a610:	retf   0xd6bc
  41a613:	sahf   
  41a614:	dec    ebx
  41a615:	push   ebp
  41a616:	retf   0x9b91
  41a619:	imul   dl
  41a61b:	shl    DWORD PTR [ebx+0x7d67015a],1
  41a621:	pop    esp
  41a622:	leave  
  41a623:	aad    0x91
  41a625:	inc    edi
  41a626:	and    BYTE PTR [edx+0x13],cl
  41a629:	test   al,0xcc
  41a62b:	addr16 pop esp
  41a62d:	push   ebx
  41a62e:	xor    eax,0x95c5e347
  41a633:	mov    ebp,0x4cd74876
  41a638:	push   0x70
  41a63a:	cmp    BYTE PTR [edx+ebp*8],0x9
  41a63e:	jbe    0x41a6af
  41a640:	hlt    
  41a641:	push   ebx
  41a642:	cmp    DWORD PTR [edi+0x69],eax
  41a645:	(bad)  
  41a646:	ja     0x41a5fb
  41a648:	call   ebx
  41a64a:	sub    cl,0xa8
  41a64d:	cmc    
  41a64e:	stos   BYTE PTR es:[edi],al
  41a64f:	push   ecx
  41a650:	xchg   edx,eax
  41a651:	shr    ch,0x70
  41a654:	mov    ch,0x2
  41a656:	ins    BYTE PTR es:[edi],dx
  41a657:	mov    BYTE PTR [edx-0x2a8c62fd],ch
  41a65d:	push   ebp
  41a65e:	pop    edx
  41a65f:	cmp    ebp,DWORD PTR [ebx-0x16]
  41a662:	push   es
  41a663:	lods   al,BYTE PTR ds:[esi]
  41a664:	leave  
  41a665:	pop    ecx
  41a666:	pop    esi
  41a667:	xchg   ecx,eax
  41a668:	leave  
  41a669:	(bad)  
  41a66a:	iret   
  41a66b:	jl     0x41a69c
  41a66d:	lods   al,BYTE PTR ds:[esi]
  41a66e:	std    
  41a66f:	cld    
  41a670:	leave  
  41a671:	std    
  41a672:	mov    edi,0x10e54eb7
  41a677:	pop    ecx
  41a678:	lds    edi,FWORD PTR fs:[ebx-0x25]
  41a67c:	cmp    esi,DWORD PTR [ecx+0x2a]
  41a67f:	cmp    eax,0x5b024b7e
  41a684:	retf   
  41a685:	mov    cl,0x42
  41a687:	retf   0x643b
  41a68a:	add    BYTE PTR [ecx+ebx*4],dh
  41a68d:	fist   WORD PTR [esi-0x2f]
  41a690:	sub    DWORD PTR [ebx-0x29],esi
  41a693:	es sahf 
  41a695:	inc    ecx
  41a696:	fcmove st,st(5)
  41a698:	push   ebp
  41a699:	shl    ebp,1
  41a69b:	and    BYTE PTR [ebx+0xe08c591],0x7e
  41a6a2:	pop    esi
  41a6a3:	adc    edi,eax
  41a6a5:	adc    DWORD PTR [ebx-0x31ddc8ae],esp
  41a6ab:	push   ds
  41a6ac:	mov    ch,0x9d
  41a6ae:	(bad)
  41a6b1:	and    eax,0x87773b88
  41a6b6:	or     eax,0xea2e1538
  41a6bb:	stos   DWORD PTR es:[edi],eax
  41a6bc:	cmc    
  41a6bd:	inc    esp
  41a6be:	inc    edi
  41a6bf:	dec    eax
  41a6c0:	cdq    
  41a6c1:	in     al,dx
  41a6c2:	cld    
  41a6c3:	xchg   ecx,eax
  41a6c4:	add    al,0x74
  41a6c6:	popa   
  41a6c7:	clc    
  41a6c8:	jbe    0x41a6aa
  41a6ca:	xor    DWORD PTR [ecx+edx*2],esp
  41a6cd:	cld    
  41a6ce:	test   al,0x9e
  41a6d0:	sahf   
  41a6d1:	test   al,0x62
  41a6d3:	xchg   ecx,eax
  41a6d4:	pushf  
  41a6d5:	shl    BYTE PTR [esi+0x15],0x6e
  41a6d9:	jg     0x41a677
  41a6db:	jg     0x41a65e
  41a6dd:	add    BYTE PTR [edi-0x47],0xfa
  41a6e1:	pushf  
  41a6e2:	sub    al,0x99
  41a6e4:	in     al,dx
  41a6e5:	outs   dx,DWORD PTR ds:[esi]
  41a6e6:	dec    ebp
  41a6e7:	scas   eax,DWORD PTR es:[edi]
  41a6e8:	adc    BYTE PTR [edi],ch
  41a6ea:	rcl    BYTE PTR [edx+ebp*1-0x72],cl
  41a6ee:	sbb    BYTE PTR [esi+0x15],cl
  41a6f1:	and    al,0x74
  41a6f3:	pop    ebp
  41a6f4:	mov    eax,ds:0x24dec9c4
  41a6f9:	cmp    al,0x1c
  41a6fb:	push   es
  41a6fc:	aad    0x3
  41a6fe:	add    eax,0x3675e066
  41a703:	mov    dl,0x3e
  41a705:	xchg   edi,eax
  41a706:	cmp    BYTE PTR ds:0x29924643,al
  41a70c:	popf   
  41a70d:	jmp    0x3109ae78
  41a712:	xlat   BYTE PTR ds:[ebx]
  41a713:	dec    ebx
  41a714:	out    0x60,eax
  41a716:	cwde   
  41a717:	fs sub al,0x26
  41a71a:	test   edx,edx
  41a71c:	push   ss
  41a71d:	sar    BYTE PTR [edi-0x5b0a54b6],cl
  41a723:	sub    al,0x4b
  41a725:	idiv   bh
  41a727:	pop    ss
  41a728:	dec    ebx
  41a729:	pop    ebx
  41a72a:	cmp    al,0xf4
  41a72c:	cmp    eax,0x8f1d673a
  41a731:	jmp    0x2484:0x3623d5a1
  41a738:	adc    BYTE PTR [edi],dl
  41a73a:	mov    ds:0xc3b36608,eax
  41a73f:	xchg   ecx,eax
  41a740:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a741:	cli    
  41a742:	es jmp 0x35ac:0xc2aeea7a
  41a74a:	jp     0x41a717
  41a74c:	push   es
  41a74d:	ret    0xdab7
  41a750:	stos   DWORD PTR es:[edi],eax
  41a751:	mov    edi,cs
  41a753:	out    dx,eax
  41a754:	sti    
  41a755:	xchg   BYTE PTR [esi-0x79],cl
  41a758:	in     eax,dx
  41a759:	in     eax,0x3c
  41a75b:	out    dx,al
  41a75c:	jne    0x41a7d9
  41a75e:	inc    bh
  41a760:	(bad)  
  41a762:	mov    WORD PTR [edx],cs
  41a764:	pop    ds
  41a765:	cmp    al,0x44
  41a767:	shr    ch,0x56
  41a76a:	cmp    DWORD PTR [ebx],esi
  41a76c:	cmp    ebx,ebp
  41a76e:	add    al,BYTE PTR [esi]
  41a770:	pop    eax
  41a771:	stos   DWORD PTR es:[edi],eax
  41a772:	pop    edx
  41a773:	lock jge 0x41a741
  41a776:	(bad)  
  41a777:	adc    ecx,esi
  41a779:	mov    eax,0xe748d45a
  41a77e:	xor    BYTE PTR [ebx+0x52548e98],al
  41a784:	cmp    eax,0xbf6dead4
  41a789:	retf   
  41a78a:	fld    DWORD PTR [ebx]
  41a78c:	or     al,0x7d
  41a78e:	xor    al,0x77
  41a790:	mov    bl,0xbd
  41a792:	cld    
  41a793:	fdivrp st(5),st
  41a795:	shr    DWORD PTR [ebx],1
  41a797:	lock out dx,al
  41a799:	xchg   al,bl
  41a79b:	pop    ebx
  41a79c:	fwait
  41a79d:	int    0x4b
  41a79f:	cmp    cl,BYTE PTR [edx]
  41a7a1:	dec    esp
  41a7a2:	sub    al,0xfd
  41a7a4:	mov    es,eax
  41a7a6:	test   al,0x26
  41a7a8:	mov    ebp,0xd3ea99ed
  41a7ad:	pop    es
  41a7ae:	push   ebp
  41a7af:	aaa    
  41a7b0:	cmp    eax,0x63aebbec
  41a7b5:	stos   BYTE PTR es:[edi],al
  41a7b6:	outs   dx,DWORD PTR ds:[esi]
  41a7b7:	sbb    eax,0x5e388a2e
  41a7bc:	sub    ebp,DWORD PTR [ebp-0x2f]
  41a7bf:	mov    DWORD PTR [ecx+eax*8],esi
  41a7c2:	dec    edx
  41a7c3:	mov    gs,WORD PTR [esi-0x70f31661]
  41a7c9:	add    eax,0x41e89ed3
  41a7ce:	lock dec ecx
  41a7d0:	mov    ds:0xff1bb789,al
  41a7d5:	repz cmp al,0x96
  41a7d8:	xor    eax,0x80667f2c
  41a7dd:	in     al,dx
  41a7de:	jmp    0xac18:0xec0aebf6
  41a7e5:	mov    ebp,0x5709ffc2
  41a7ea:	call   0xe122:0xa7c3ac01
  41a7f1:	pop    edi
  41a7f2:	inc    ecx
  41a7f3:	aas    
  41a7f4:	push   esp
  41a7f5:	jge    0x41a828
  41a7f7:	jg     0x41a85c
  41a7f9:	cmp    BYTE PTR [esi-0x799f2245],dl
  41a7ff:	or     BYTE PTR [eax+0x3c],al
  41a802:	sti    
  41a803:	push   ebp
  41a804:	add    ecx,ebp
  41a806:	mov    ecx,0x8f2900d9
  41a80b:	pop    edi
  41a80c:	addr16 (bad) 
  41a80e:	and    bl,BYTE PTR [esi+eiz*2-0x28e220e9]
  41a815:	je     0x41a85c
  41a817:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a818:	adc    DWORD PTR [ecx-0x432db936],edx
  41a81e:	add    DWORD PTR [eax],eax
  41a820:	xor    ebp,eax
  41a822:	sub    ch,ch
  41a824:	adc    esp,esp
  41a826:	pop    esp
  41a827:	mov    ds:0x1d061e2e,eax
  41a82c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a82d:	xchg   esp,eax
  41a82e:	mov    esp,0xdcaebafc
  41a833:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a834:	mov    esp,DWORD PTR [edi+0x78]
  41a837:	or     edx,DWORD PTR [esp+edi*1-0x1b442c0b]
  41a83e:	mov    eax,0x6a10d170
  41a843:	test   DWORD PTR [ecx],esi
  41a845:	jmp    0x41a858
  41a847:	mov    eax,0x832714fa
  41a84c:	test   eax,0x1a1c9d85
  41a851:	push   cs
  41a852:	sbb    eax,0xbe7e303e
  41a857:	xchg   edx,eax
  41a858:	push   edx
  41a859:	cli    
  41a85a:	mov    eax,ds:0x5e7bdc22
  41a85f:	xor    eax,DWORD PTR ds:0xdb72caf2
  41a865:	jecxz  0x41a81e
  41a867:	mov    esp,0x2de855f4
  41a86d:	fsub   DWORD PTR [eax-0x46]
  41a870:	f2xm1  
  41a872:	ins    BYTE PTR es:[edi],dx
  41a873:	lahf   
  41a874:	mov    ecx,0x70356478
  41a879:	pop    edx
  41a87a:	sar    DWORD PTR [ebp-0x6],cl
  41a87d:	push   ecx
  41a87e:	sbb    DWORD PTR [ebx+eiz*4+0x3c],ebx
  41a882:	in     eax,0x88
  41a884:	push   ecx
  41a885:	imul   eax,DWORD PTR [esi+ebp*1-0x2452832d],0xfd38ef6
  41a890:	shl    BYTE PTR [edx+0x2f],1
  41a893:	stos   BYTE PTR es:[edi],al
  41a894:	rcl    BYTE PTR ds:0x5f11753d,cl
  41a89a:	loop   0x41a8b0
  41a89c:	dec    eax
  41a89d:	cmp    ah,BYTE PTR [edi]
  41a89f:	les    esp,FWORD PTR [ecx+0x3]
  41a8a2:	xchg   ebp,eax
  41a8a3:	ins    DWORD PTR es:[edi],dx
  41a8a4:	les    esi,FWORD PTR [ebp+eiz*8+0x2b202855]
  41a8ab:	shl    DWORD PTR [eax-0x6ec59db5],0x52
  41a8b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8b3:	mov    WORD PTR [edi-0x6],cs
  41a8b6:	mov    ds:0x6dbeacb1,eax
  41a8bb:	push   ds
  41a8bc:	out    dx,al
  41a8bd:	add    edi,ecx
  41a8bf:	jmp    0x6d18:0x3a418e09
  41a8c6:	lea    ecx,[esi]
  41a8c8:	repnz adc eax,0xfaaf5558
  41a8ce:	out    0x2c,al
  41a8d0:	dec    esi
  41a8d1:	sub    BYTE PTR [edi],dh
  41a8d3:	stos   DWORD PTR es:[edi],eax
  41a8d4:	push   ecx
  41a8d5:	adc    eax,0x4e345356
  41a8da:	ss popf 
  41a8dc:	dec    esi
  41a8dd:	xchg   esi,eax
  41a8de:	jae    0x41a8de
  41a8e0:	mov    bh,BYTE PTR [edi+eax*2+0x47]
  41a8e4:	cmc    
  41a8e5:	cs inc edi
  41a8e7:	mov    dl,0x25
  41a8e9:	cld    
  41a8ea:	imul   esp,ebx,0x4c
  41a8ed:	push   0x5d626d6d
  41a8f2:	mov    edx,DWORD PTR [edi]
  41a8f4:	scas   al,BYTE PTR es:[edi]
  41a8f5:	xor    BYTE PTR [edx-0x54],bl
  41a8f8:	(bad)  
  41a8f9:	adc    eax,0x144c9def
  41a8fe:	adc    al,0x71
  41a900:	stos   BYTE PTR es:[edi],al
  41a901:	jno    0x41a8f3
  41a903:	jae    0x41a97d
  41a905:	test   al,0x4b
  41a907:	in     al,0xad
  41a909:	outs   dx,DWORD PTR ds:[esi]
  41a90a:	fst    QWORD PTR [ecx+0x26fa4251]
  41a910:	sbb    eax,0x1b86885e
  41a915:	pushf  
  41a916:	nop
  41a917:	popa   
  41a918:	push   esp
  41a919:	xor    eax,0x455da274
  41a91e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a91f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a920:	xor    BYTE PTR [eax],cl
  41a922:	fld    DWORD PTR [ebp+0x5e]
  41a925:	dec    eax
  41a926:	jbe    0x41a936
  41a928:	mov    cl,0x6d
  41a92a:	fisttp WORD PTR [eax+0x3f]
  41a92d:	outs   dx,DWORD PTR ds:[esi]
  41a92e:	mov    ch,0x3d
  41a930:	dec    esp
  41a931:	shr    BYTE PTR [edx-0x2ac7f472],0x22
  41a938:	(bad)  
  41a939:	aas    
  41a93a:	pop    esp
  41a93b:	fisubr DWORD PTR [edi+0x18]
  41a93e:	stos   BYTE PTR es:[edi],al
  41a93f:	xor    eax,0x34495a8b
  41a944:	aaa    
  41a945:	adc    dh,dh
  41a947:	bound  edi,QWORD PTR [esp+0x157c3aa6]
  41a94e:	leave  
  41a94f:	cmp    DWORD PTR [ebx-0x26fcb774],0x23
  41a956:	shr    DWORD PTR [edi],1
  41a958:	jb     0x41a904
  41a95a:	loopne 0x41a962
  41a95c:	imul   edx,DWORD PTR [eax-0x39],0x61
  41a960:	jg     0x41a92a
  41a962:	rol    al,0xe7
  41a965:	xlat   BYTE PTR ds:[ebx]
  41a966:	mov    ds:0xfba691bd,al
  41a96b:	mov    ch,0x56
  41a96d:	mov    edi,0x11ed9085
  41a972:	add    eax,0xf0b9eca3
  41a977:	xchg   edi,eax
  41a978:	or     al,0x8a
  41a97a:	add    dl,BYTE PTR [edx-0x2adc9b36]
  41a980:	dec    edi
  41a981:	fcmovnbe st,st(1)
  41a983:	sbb    BYTE PTR [edx],cl
  41a985:	xor    dh,BYTE PTR ds:0x51d1c319
  41a98b:	iret   
  41a98c:	retfw  
  41a98e:	lds    edx,FWORD PTR [esp+ecx*8+0x51]
  41a992:	xlat   BYTE PTR ds:[ebx]
  41a993:	mov    edx,0x416faca7
  41a998:	dec    ebx
  41a999:	push   ebp
  41a99a:	cmp    dl,BYTE PTR [ecx-0x455ca004]
  41a9a0:	mov    ds:0x5caf406e,al
  41a9a5:	shr    BYTE PTR [esi-0x7d],1
  41a9a8:	xchg   ecx,eax
  41a9a9:	jb     0x41a9fa
  41a9ab:	test   BYTE PTR [edx],dh
  41a9ad:	fcomp  DWORD PTR [ebx]
  41a9af:	leave  
  41a9b0:	sbb    al,0x4a
  41a9b2:	str    esi
  41a9b5:	mov    esp,0x475ffc6
  41a9ba:	or     BYTE PTR [edx-0x72e74440],bl
  41a9c0:	inc    edx
  41a9c1:	loop   0x41aa2a
  41a9c3:	ds jg  0x41a959
  41a9c6:	xchg   ebx,eax
  41a9c7:	mov    esi,0xe995b02e
  41a9cc:	push   esi
  41a9cd:	pop    DWORD PTR [ebx]
  41a9cf:	and    ch,BYTE PTR ds:0x2271aa66
  41a9d5:	in     al,dx
  41a9d6:	cmc    
  41a9d7:	aas    
  41a9d8:	jae    0x41a988
  41a9da:	loopne 0x41a97d
  41a9dc:	xchg   esp,eax
  41a9dd:	jno    0x41a989
  41a9df:	fldcw  WORD PTR [esi-0x41f501f2]
  41a9e5:	add    bh,BYTE PTR [edx-0x15]
  41a9e8:	pop    edi
  41a9e9:	xchg   ebp,eax
  41a9ea:	test   eax,0xb301b486
  41a9ef:	xchg   edi,eax
  41a9f0:	pusha  
  41a9f1:	push   0x7d6d817d
  41a9f6:	sbb    BYTE PTR [esi],bh
  41a9f8:	repnz test al,0x5a
  41a9fb:	pop    ebx
  41a9fc:	fcmovnu st,st(4)
  41a9fe:	loop   0x41aa6b
  41aa00:	(bad)  
  41aa01:	aam    0xe
  41aa03:	push   edi
  41aa04:	fadd   DWORD PTR [ecx+0x334a9374]
  41aa0a:	sbb    ebx,DWORD PTR [edx-0x23]
  41aa0d:	bswap  ecx
  41aa0f:	sub    eax,0x6ee547ad
  41aa14:	dec    ebx
  41aa15:	sbb    ah,BYTE PTR [edx-0x58]
  41aa18:	enter  0x1299,0xb
  41aa1c:	outs   dx,DWORD PTR ds:[esi]
  41aa1d:	shr    ecx,cl
  41aa1f:	in     eax,0xcc
  41aa21:	(bad)  [edi+0x56d16f48]
  41aa27:	add    BYTE PTR ss:[ecx-0x75],0xc6
  41aa2c:	and    edi,DWORD PTR [eax-0x23]
  41aa2f:	sbb    edi,esi
  41aa31:	lds    edi,FWORD PTR [edi]
  41aa33:	or     BYTE PTR [esi],cl
  41aa35:	sti    
  41aa36:	xchg   esp,eax
  41aa37:	lahf   
  41aa38:	dec    eax
  41aa39:	out    dx,al
  41aa3a:	(bad)  
  41aa3b:	popf   
  41aa3c:	inc    ecx
  41aa3d:	test   DWORD PTR [edi-0x67],ecx
  41aa40:	add    DWORD PTR [eax],ebx
  41aa42:	icebp  
  41aa43:	das    
  41aa44:	pop    ebx
  41aa45:	pop    ebp
  41aa46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa47:	nop
  41aa48:	fsubr  st,st(4)
  41aa4a:	sti    
  41aa4b:	sbb    DWORD PTR [edx-0x63],esp
  41aa4e:	int    0xb9
  41aa50:	in     eax,0xe2
  41aa52:	aas    
  41aa53:	ficomp WORD PTR [ebx+0x6dcb7f68]
  41aa59:	xchg   ebx,eax
  41aa5a:	or     ch,BYTE PTR [edi+eiz*8-0x6d]
  41aa5e:	push   es
  41aa5f:	icebp  
  41aa60:	sbb    eax,0x30fc0948
  41aa65:	sub    BYTE PTR [edi+ecx*1-0x706be282],bh
  41aa6c:	xor    ch,BYTE PTR [edi]
  41aa6e:	sahf   
  41aa6f:	data16 hlt 
  41aa71:	into   
  41aa72:	ds loope 0x41aa46
  41aa75:	lods   al,BYTE PTR ds:[esi]
  41aa76:	cwde   
  41aa77:	push   esp
  41aa78:	(bad)  
  41aa79:	push   es
  41aa7a:	jb     0x41aa6f
  41aa7c:	cld    
  41aa7d:	out    dx,al
  41aa7e:	push   eax
  41aa7f:	inc    eax
  41aa80:	jbe    0x41aa0e
  41aa82:	jmp    0x41aac3
  41aa84:	dec    eax
  41aa85:	and    ah,BYTE PTR [edx]
  41aa87:	and    DWORD PTR [esi],edx
  41aa89:	aas    
  41aa8a:	js     0x41aa50
  41aa8c:	mov    ecx,0x4745d200
  41aa91:	push   es
  41aa92:	mov    ch,0xcc
  41aa94:	cmp    ebp,esp
  41aa96:	popf   
  41aa97:	je     0x41aa24
  41aa99:	mov    edi,0xf23c10ce
  41aa9e:	rol    BYTE PTR [esp+ecx*4+0x4d],0xfa
  41aaa3:	in     al,0xd
  41aaa5:	repz sbb al,0xfd
  41aaa8:	test   eax,0xd21a5762
  41aaad:	fwait
  41aaae:	pop    edi
  41aaaf:	xchg   esp,eax
  41aab0:	mov    bl,0xd5
  41aab2:	out    dx,eax
  41aab3:	sub    BYTE PTR [ecx+0x3a65b74c],0xca
  41aaba:	sbb    al,0x5d
  41aabc:	cmp    eax,0xa352a2e6
  41aac1:	sbb    DWORD PTR [edx-0x4],esi
  41aac4:	mov    BYTE PTR [esi],0x3c
  41aac7:	mov    ah,0xa8
  41aac9:	bound  eax,QWORD PTR [ecx]
  41aacb:	mov    dh,BYTE PTR [ecx-0xcaa3c33]
  41aad1:	ss jno 0x41ab4e
  41aad4:	int3   
  41aad5:	stos   DWORD PTR es:[edi],eax
  41aad6:	xchg   edx,eax
  41aad7:	popf   
  41aad8:	inc    edi
  41aad9:	add    DWORD PTR [esi+0x7139d992],0xffffff81
  41aae0:	neg    dh
  41aae2:	xlat   BYTE PTR ds:[ebx]
  41aae3:	popa   
  41aae4:	out    dx,al
  41aae5:	daa    
  41aae6:	jmp    0x41aaf4
  41aae8:	outs   dx,DWORD PTR ds:[esi]
  41aae9:	jle    0x41aaab
  41aaeb:	mov    ecx,0xa3e3b938
  41aaf0:	or     eax,0x5c811042
  41aaf5:	jge    0x41ab76
  41aaf7:	in     al,0xab
  41aaf9:	xchg   cl,ah
  41aafb:	push   es
  41aafc:	adc    eax,0x452a20f4
  41ab01:	mov    dh,0x9f
  41ab03:	(bad)  
  41ab04:	xchg   ecx,eax
  41ab05:	jb     0x41aae1
  41ab07:	stc    
  41ab08:	add    al,0x94
  41ab0a:	and    DWORD PTR [ebx+0x1d],edx
  41ab0d:	mov    ds:0xbbb70170,eax
  41ab12:	loop   0x41ab61
  41ab14:	dec    esi
  41ab15:	ins    BYTE PTR es:[edi],dx
  41ab16:	addr16 jge 0x41ab34
  41ab19:	or     esp,DWORD PTR [ecx+0x36]
  41ab1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab1d:	aaa    
  41ab1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab1f:	push   ebx
  41ab20:	add    bl,BYTE PTR [eax+0x18830383]
  41ab26:	cmp    dh,bl
  41ab28:	je     0x41ab47
  41ab2a:	data16 sbb BYTE PTR [bx-0x3893],dh
  41ab30:	pushf  
  41ab31:	lods   al,BYTE PTR ds:[esi]
  41ab32:	mov    edx,0xc4b75493
  41ab37:	push   ecx
  41ab38:	push   esp
  41ab39:	popf   
  41ab3a:	push   esp
  41ab3b:	jns    0x41ab09
  41ab3d:	stos   DWORD PTR es:[edi],eax
  41ab3e:	add    al,0x6e
  41ab40:	cwde   
  41ab41:	retf   
  41ab42:	xchg   esp,eax
  41ab43:	out    0x57,eax
  41ab45:	stos   BYTE PTR es:[edi],al
  41ab46:	mov    ecx,0x26cf99b2
  41ab4b:	fdiv   QWORD PTR [edx]
  41ab4d:	je     0x41abac
  41ab4f:	inc    ebp
  41ab50:	pop    edx
  41ab51:	xor    ebx,ebp
  41ab53:	jnp    0x41ab3a
  41ab55:	jge    0x41ab00
  41ab57:	inc    edx
  41ab58:	xchg   BYTE PTR [edi+0x17f36ae0],dl
  41ab5e:	das    
  41ab5f:	out    0x7c,eax
  41ab61:	clc    
  41ab62:	dec    edi
  41ab63:	sub    DWORD PTR [eax+0x29],ebp
  41ab66:	xor    BYTE PTR [edx-0x39],ch
  41ab69:	ins    DWORD PTR es:[edi],dx
  41ab6a:	repz xor esi,ecx
  41ab6d:	aas    
  41ab6e:	je     0x41abb3
  41ab70:	pop    es
  41ab71:	xchg   ebp,eax
  41ab72:	xchg   esp,eax
  41ab73:	inc    ecx
  41ab74:	stos   BYTE PTR es:[edi],al
  41ab75:	bound  ecx,QWORD PTR [eax]
  41ab77:	mov    ebp,?
  41ab79:	std    
  41ab7a:	jg     0x41ab94
  41ab7c:	add    esp,DWORD PTR [eax+eiz*4+0x37]
  41ab80:	jg     0x41abe8
  41ab82:	int    0x9d
  41ab84:	pop    ebp
  41ab85:	adc    ch,BYTE PTR [ecx]
  41ab87:	out    0x92,al
  41ab89:	fucomi st,st(2)
  41ab8b:	adc    DWORD PTR [ecx],edx
  41ab8d:	outs   dx,BYTE PTR ds:[esi]
  41ab8e:	fwait
  41ab8f:	fs xchg ebp,eax
  41ab91:	into   
  41ab92:	or     esp,DWORD PTR [edi]
  41ab94:	fidivr WORD PTR [edx-0x2c]
  41ab97:	jbe    0x41ab82
  41ab99:	inc    edx
  41ab9a:	sbb    al,0x1c
  41ab9c:	pushf  
  41ab9d:	jae    0x41ac04
  41ab9f:	jae    0x41abe1
  41aba1:	xor    eax,0x468db484
  41aba6:	lahf   
  41aba7:	adc    ebp,DWORD PTR [esi]
  41aba9:	dec    esi
  41abaa:	inc    BYTE PTR [ebp+0x5f]
  41abad:	cmp    eax,0x2839837a
  41abb2:	sbb    eax,0xaa261a44
  41abb7:	dec    DWORD PTR [edx]
  41abb9:	jns    0x41ac24
  41abbb:	(bad)  
  41abbc:	dec    esp
  41abbd:	ss addr16 or al,0x7a
  41abc1:	retf   
  41abc2:	xor    al,0x35
  41abc4:	xchg   esp,eax
  41abc5:	add    esp,ecx
  41abc7:	adc    esi,eax
  41abc9:	fadd   QWORD PTR [eax+0x2f29f87a]
  41abcf:	mov    dh,0x4e
  41abd1:	mov    eax,ds:0x2c622927
  41abd6:	mov    al,BYTE PTR [eax-0x718af03c]
  41abdc:	aaa    
  41abdd:	and    dh,BYTE PTR [edi+0x5a]
  41abe0:	sbb    eax,0xb7262e5
  41abe5:	pop    ebx
  41abe6:	fdiv   DWORD PTR [edx-0x3ebeb2a7]
  41abec:	int    0xea
  41abee:	inc    esp
  41abef:	lea    ebx,[ecx+eax*8+0x7f13a5de]
  41abf6:	jmp    0x6c71:0x65d0efac
  41abfd:	inc    edx
  41abfe:	add    BYTE PTR [eax],dl
  41ac00:	pop    esi
  41ac01:	retf   0x1c4c
  41ac04:	pop    ecx
  41ac05:	int    0xcb
  41ac07:	pop    ecx
  41ac08:	aaa    
  41ac09:	push   cs
  41ac0a:	lds    eax,FWORD PTR [edx-0x64159265]
  41ac10:	jge    0x41abc2
  41ac12:	or     al,0x57
  41ac14:	or     eax,edi
  41ac16:	cmp    al,0x58
  41ac18:	jg     0x41ab9d
  41ac1a:	or     DWORD PTR [edx],0x6cff8813
  41ac20:	imul   ebx,DWORD PTR [edx+0x63ca952f],0xffffffdf
  41ac27:	(bad)  
  41ac28:	mov    edi,0x171aaa01
  41ac2d:	fcomp  QWORD PTR ds:0x22607522
  41ac33:	repz pop edi
  41ac35:	and    ah,0x6d
  41ac38:	outs   dx,DWORD PTR ds:[esi]
  41ac39:	mov    dh,0xe
  41ac3b:	dec    esp
  41ac3c:	lods   al,BYTE PTR ds:[esi]
  41ac3d:	rcr    DWORD PTR [esi+0x27c52d89],0xe9
  41ac44:	enter  0x348,0xe1
  41ac48:	popf   
  41ac49:	cmp    cl,BYTE PTR [ebp+0x33]
  41ac4c:	int    0x82
  41ac4e:	cwde   
  41ac4f:	add    ebx,DWORD PTR [ebx+0x67]
  41ac52:	cmp    esi,DWORD PTR [ecx+0x6f]
  41ac55:	jmp    0xa6ca5e94
  41ac5a:	cmp    cl,BYTE PTR [esi+0x3d]
  41ac5d:	sub    ch,dl
  41ac5f:	push   ecx
  41ac60:	xor    edi,DWORD PTR [ebp+0x6dec6bd3]
  41ac66:	push   0x71
  41ac68:	push   ds
  41ac69:	mov    al,ds:0xf1a83fb1
  41ac6e:	pop    esp
  41ac6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac70:	int3   
  41ac71:	test   BYTE PTR [esi-0x404b98fd],dh
  41ac77:	add    BYTE PTR [esi+0x70679597],0xd5
  41ac7e:	push   esp
  41ac7f:	xchg   ebx,eax
  41ac80:	push   ebp
  41ac81:	iret   
  41ac82:	or     BYTE PTR [edi-0x661f011c],cl
  41ac88:	je     0x41accb
  41ac8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac8b:	into   
  41ac8c:	push   edx
  41ac8d:	adc    BYTE PTR [ebx+0x1e899a6],0xc0
  41ac94:	cdq    
  41ac95:	sbb    ch,BYTE PTR [eax+0x20]
  41ac98:	xor    al,0x1c
  41ac9a:	scas   al,BYTE PTR es:[edi]
  41ac9b:	out    dx,al
  41ac9c:	clc    
  41ac9d:	into   
  41ac9e:	scas   eax,DWORD PTR es:[edi]
  41ac9f:	jnp    0x41ac51
  41aca1:	push   eax
  41aca2:	cmp    ecx,DWORD PTR [ecx]
  41aca4:	(bad)  
  41aca5:	dec    DWORD PTR [ebp-0x1e96463e]
  41acab:	cmp    edi,DWORD PTR [edi+ecx*8]
  41acae:	cmp    al,0x2
  41acb0:	xor    eax,0xc3055dbb
  41acb5:	mov    edi,0xe2c7d37
  41acba:	test   BYTE PTR [ebp+ebp*8+0x4e],ah
  41acbe:	call   FWORD PTR [eax]
  41acc0:	xchg   edx,eax
  41acc1:	sbb    eax,0x43e461b8
  41acc6:	add    esi,ebx
  41acc8:	mov    edx,0xdec375b0
  41accd:	leave  
  41acce:	(bad)  
  41accf:	dec    edx
  41acd0:	ret    
  41acd1:	fwait
  41acd2:	jnp    0x41ac91
  41acd4:	push   esi
  41acd5:	add    eax,0x2f237a74
  41acda:	dec    edx
  41acdb:	inc    eax
  41acdc:	mov    ecx,0xa21ad5bc
  41ace1:	les    esi,FWORD PTR [eax]
  41ace3:	add    cl,BYTE PTR ds:0xd4d2f4ba
  41ace9:	and    edi,DWORD PTR [esi-0x1b]
  41acec:	and    DWORD PTR [edx+0x440721e9],esi
  41acf2:	inc    eax
  41acf3:	adc    ebp,ebp
  41acf5:	(bad)  
  41acf6:	ja     0x41acf3
  41acf8:	mov    eax,ds:0x3d9e33da
  41acfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acfe:	jmp    0x41ad30
  41ad00:	dec    ecx
  41ad01:	mov    edi,0x3c1029fb
  41ad06:	stc    
  41ad07:	lahf   
  41ad08:	push   ss
  41ad09:	jg     0x41ac98
  41ad0b:	sbb    edx,DWORD PTR [edi+0x30d2c838]
  41ad11:	pop    esi
  41ad12:	scas   eax,DWORD PTR es:[edi]
  41ad13:	push   ds
  41ad14:	(bad)  
  41ad15:	stc    
  41ad16:	call   0x29d0c6a
  41ad1b:	loop   0x41ad7a
  41ad1d:	jl     0x41ad41
  41ad1f:	and    BYTE PTR [ebx+0x2d],cl
  41ad22:	push   edx
  41ad23:	cld    
  41ad24:	mov    ecx,0x9253338
  41ad29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad2a:	mov    bl,bh
  41ad2c:	je     0x41acbd
  41ad2e:	sub    al,0x55
  41ad30:	cmp    eax,0x43f851df
  41ad35:	adc    eax,0xab0a40ff
  41ad3a:	jae    0x41ad2d
  41ad3c:	test   dh,dl
  41ad3e:	sub    edx,DWORD PTR [esi+0x2509b889]
  41ad44:	pop    ecx
  41ad45:	or     eax,DWORD PTR [ebx+0x4a4e3687]
  41ad4b:	push   edi
  41ad4c:	dec    esp
  41ad4d:	outs   dx,DWORD PTR ds:[si]
  41ad4f:	(bad)  
  41ad50:	rol    BYTE PTR [esi-0x3e],0x8e
  41ad54:	popa   
  41ad55:	sub    eax,0x6838fd28
  41ad5a:	std    
  41ad5b:	push   esi
  41ad5c:	mov    al,0xd6
  41ad5e:	push   ss
  41ad5f:	xor    DWORD PTR [ecx-0xcf9fc06],0xa9721448
  41ad69:	or     al,0x3c
  41ad6b:	mov    al,ds:0x431f3fa9
  41ad70:	add    al,0x90
  41ad72:	push   0x1c
  41ad74:	push   edx
  41ad75:	mov    ds:0xd4e6a607,al
  41ad7a:	xchg   ecx,eax
  41ad7b:	mov    esi,0x52440631
  41ad80:	sub    BYTE PTR [ebx-0x50fd6845],bl
  41ad86:	lds    ecx,FWORD PTR [esp+edx*4]
  41ad89:	cmp    ebp,DWORD PTR [eax-0x5]
  41ad8c:	fmul   st(2),st
  41ad8e:	add    al,0x99
  41ad90:	clc    
  41ad91:	jb     0x41ade7
  41ad93:	rol    DWORD PTR [ebx-0xfab0d2],0x72
  41ad9a:	into   
  41ad9b:	sub    ch,BYTE PTR [esi-0x4107542f]
  41ada1:	aam    0xf3
  41ada3:	jae    0x41addb
  41ada5:	mov    BYTE PTR ds:0x9dfe0c3,dh
  41adab:	shl    dl,0xe4
  41adae:	push   ebp
  41adaf:	sbb    al,0xb8
  41adb1:	aaa    
  41adb2:	cmp    al,0x60
  41adb4:	sar    BYTE PTR [eax+0x2630f142],cl
  41adba:	lds    esp,FWORD PTR [edx-0x2f08b02b]
  41adc0:	mov    ebp,0x40b01e8e
  41adc5:	cld    
  41adc6:	scas   eax,DWORD PTR es:[edi]
  41adc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41adc8:	dec    eax
  41adc9:	mov    bh,0xc7
  41adcb:	shr    bl,0x5b
  41adce:	xchg   ecx,eax
  41adcf:	jmp    0xf5:0x3a545fa5
  41add6:	cmovge ebp,DWORD PTR [ecx+0x108ee48c]
  41addd:	mov    dl,BYTE PTR [edx+0x4]
  41ade0:	adc    edx,DWORD PTR ds:0xdc75bed2
  41ade6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ade7:	jno    0x41adf9
  41ade9:	pushf  
  41adea:	mov    esp,0x97ad9d39
  41adef:	pusha  
  41adf0:	push   ebp
  41adf1:	mov    ?,eax
  41adf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41adf4:	lds    eax,FWORD PTR cs:[ebx+0x69]
  41adf8:	dec    eax
  41adf9:	aaa    
  41adfa:	push   eax
  41adfb:	push   esp
  41adfc:	(bad)  
  41adfd:	xor    DWORD PTR [ebx-0xfe18d85],edx
  41ae03:	xor    eax,0x6d919648
  41ae08:	xchg   esi,eax
  41ae09:	mov    ds:0xb527acda,al
  41ae0e:	pop    esp
  41ae0f:	mov    bl,bh
  41ae11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae13:	fiadd  WORD PTR [ebx+0x6a98d0ff]
  41ae19:	int3   
  41ae1a:	jecxz  0x41ae70
  41ae1c:	ficomp DWORD PTR [esi+0x33aaada4]
  41ae22:	or     al,0xe0
  41ae24:	sbb    al,0x8d
  41ae26:	cli    
  41ae27:	xor    DWORD PTR [ecx+0x23499891],0x49e754de
  41ae31:	int    0xa6
  41ae33:	and    al,0xc1
  41ae35:	or     BYTE PTR [edi+ecx*2],bl
  41ae38:	or     al,0xc4
  41ae3a:	sub    bl,BYTE PTR [eax-0x47]
  41ae3d:	push   ecx
  41ae3e:	add    dl,BYTE PTR [ecx]
  41ae40:	sub    al,0xb0
  41ae42:	pop    ebx
  41ae43:	cmp    ah,ah
  41ae45:	adc    DWORD PTR [ebp-0x7d],ebp
  41ae48:	add    BYTE PTR [esi-0x64d9a713],dl
  41ae4e:	pop    edi
  41ae4f:	aaa    
  41ae50:	and    ebx,ecx
  41ae52:	aas    
  41ae53:	push   0x682f2e90
  41ae58:	sbb    eax,0x88709659
  41ae5d:	mov    ss,WORD PTR [eax+0x4a51c2ff]
  41ae63:	dec    ecx
  41ae64:	retf   
  41ae65:	inc    esp
  41ae66:	aas    
  41ae67:	(bad)  
  41ae68:	cld    
  41ae69:	cmp    ah,dl
  41ae6b:	in     eax,dx
  41ae6c:	add    eax,0x924385df
  41ae71:	sub    BYTE PTR [edx],ah
  41ae73:	pop    ebp
  41ae74:	push   DWORD PTR [ebx]
  41ae76:	push   edx
  41ae77:	jge    0x41ae44
  41ae79:	cmp    DWORD PTR [esi],0x80deeef3
  41ae7f:	cs pop ss
  41ae81:	sub    bl,BYTE PTR [ebx+0x78]
  41ae84:	mov    dl,0xf4
  41ae86:	add    eax,DWORD PTR [edi-0x5284ea13]
  41ae8c:	sub    al,0xba
  41ae8e:	scas   al,BYTE PTR es:[edi]
  41ae8f:	add    al,0x1a
  41ae91:	xchg   edx,eax
  41ae92:	nop
  41ae93:	(bad)  
  41ae94:	xlat   BYTE PTR ds:[ebx]
  41ae95:	mov    esp,0xe01c5c17
  41ae9a:	push   ebp
  41ae9b:	daa    
  41ae9c:	adc    ebp,DWORD PTR [ebx]
  41ae9e:	inc    esi
  41ae9f:	loope  0x41af17
  41aea1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aea2:	xor    DWORD PTR [ecx],eax
  41aea4:	mov    ebp,0xe1250ca8
  41aea9:	adc    eax,DWORD PTR [ebp+esi*1-0x4b5ed9c1]
  41aeb0:	call   0xda3d2d38
  41aeb5:	ret    0x667a
  41aeb8:	and    bl,BYTE PTR [esi-0x1c583349]
  41aebe:	jg     0x41ae4c
  41aec0:	lods   eax,DWORD PTR ds:[esi]
  41aec1:	repnz in eax,0x8b
  41aec4:	or     al,BYTE PTR [ebx-0x24]
  41aec7:	add    DWORD PTR [edi+edi*2-0x54],eax
  41aecb:	imul   eax,DWORD PTR [ebp+0x1b],0x3286c531
  41aed2:	inc    ebp
  41aed3:	sbb    ch,bl
  41aed5:	stos   BYTE PTR es:[edi],al
  41aed6:	inc    ebp
  41aed7:	cli    
  41aed8:	mov    ds:0xa3cd9b79,al
  41aedd:	mov    bh,0x38
  41aedf:	sub    ah,bh
  41aee1:	pop    ecx
  41aee2:	dec    esp
  41aee3:	mov    ah,0xce
  41aee5:	xchg   edx,eax
  41aee6:	call   0x698e:0xe26221d0
  41aeed:	aad    0xbd
  41aeef:	bound  edx,QWORD PTR ds:0xd2825694
  41aef5:	mov    WORD PTR [ecx+0x5234f82c],gs
  41aefb:	aas    
  41aefc:	pop    edx
  41aefd:	cmp    al,0xd3
  41aeff:	jecxz  0x41aeb1
  41af01:	outs   dx,BYTE PTR ds:[esi]
  41af02:	jns    0x41aece
  41af04:	sbb    bh,BYTE PTR [ebx-0x1ad67e1c]
  41af0a:	dec    esi
  41af0b:	jno    0x41aed6
  41af0d:	dec    eax
  41af0e:	loopne 0x41af10
  41af10:	and    al,0x27
  41af12:	retf   0xb331
  41af15:	jno    0x41af70
  41af17:	out    dx,al
  41af18:	(bad)  
  41af1a:	lods   eax,DWORD PTR ds:[esi]
  41af1b:	mov    dl,0x9d
  41af1d:	sar    BYTE PTR [ecx+edx*2],1
  41af20:	cmc    
  41af21:	fild   DWORD PTR [edi+ecx*2-0x56]
  41af25:	mov    eax,0x6f2eb654
  41af2a:	fstp   QWORD PTR [edi-0x26]
  41af2d:	add    BYTE PTR [esi],dh
  41af2f:	lods   al,BYTE PTR ds:[esi]
  41af30:	aaa    
  41af31:	cld    
  41af32:	aaa    
  41af33:	or     BYTE PTR ds:0xdebb5e3d,cl
  41af39:	sub    cl,BYTE PTR [edx-0x65]
  41af3c:	lea    esi,[esi+0x2271f0c0]
  41af42:	call   0x243e793d
  41af47:	sbb    al,0xa3
  41af49:	in     eax,dx
  41af4a:	js     0x41af27
  41af4c:	add    al,0x47
  41af4e:	dec    ebp
  41af4f:	leave  
  41af50:	or     BYTE PTR [esi],0x8d
  41af53:	aam    0x2a
  41af55:	daa    
  41af56:	xor    cl,al
  41af58:	ja     0x41afd7
  41af5a:	mov    es,WORD PTR [ebx+0x7e]
  41af5d:	stos   BYTE PTR es:[edi],al
  41af5e:	xchg   esp,eax
  41af5f:	xchg   BYTE PTR [edx],ch
  41af61:	dec    esi
  41af62:	xchg   ebx,eax
  41af63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af64:	pop    ss
  41af65:	in     al,0x8a
  41af67:	(bad)  
  41af68:	fwait
  41af69:	cmp    DWORD PTR [ecx+0x51],0x43
  41af6d:	rcl    ebp,cl
  41af6f:	add    ah,al
  41af71:	les    edx,FWORD PTR [edx]
  41af73:	call   0xdb05112b
  41af78:	dec    esi
  41af79:	fiadd  DWORD PTR [eax]
  41af7b:	jle    0x41af38
  41af7d:	or     BYTE PTR [edi+0x5172dc51],0xa0
  41af84:	test   BYTE PTR [ebp-0x69eec36d],al
  41af8a:	mov    dl,0xef
  41af8c:	ret    
  41af8d:	ret    0xb029
  41af90:	jmp    0xfdb:0xbe87aa95
  41af97:	dec    ecx
  41af98:	add    al,0x90
  41af9a:	scas   al,BYTE PTR es:[edi]
  41af9b:	xchg   edx,eax
  41af9c:	fucomp st(6)
  41af9e:	repnz fmul QWORD PTR [ebx+ebp*2-0x4d5672a3]
  41afa6:	xchg   BYTE PTR [edx+0x6d],bl
  41afa9:	mov    ds:0xbd04e57c,eax
  41afae:	popa   
  41afaf:	hlt    
  41afb0:	into   
  41afb1:	iret   
  41afb2:	jae    0x41af9a
  41afb4:	and    al,bh
  41afb6:	dec    ebp
  41afb7:	jmp    0x41af4d
  41afb9:	stos   DWORD PTR es:[edi],eax
  41afba:	sti    
  41afbb:	pop    ebp
  41afbc:	es inc edi
  41afbe:	das    
  41afbf:	test   al,0xef
  41afc1:	in     eax,dx
  41afc2:	xlat   BYTE PTR ds:[ebx]
  41afc3:	mov    DWORD PTR [edi+0x1a01debf],esi
  41afc9:	fimul  DWORD PTR [edx]
  41afcb:	sar    edi,0x99
  41afce:	mov    ch,0xbc
  41afd0:	scas   al,BYTE PTR es:[edi]
  41afd1:	inc    esp
  41afd2:	push   ds
  41afd3:	pminsw mm6,QWORD PTR [eax]
  41afd6:	retf   
  41afd7:	pop    esp
  41afd8:	repz mov esp,0x857c73cc
  41afde:	lahf   
  41afdf:	mov    ds:0x440afa6a,al
  41afe4:	mov    eax,0xafce73fd
  41afe9:	leave  
  41afea:	idiv   DWORD PTR [esi]
  41afec:	mov    bh,0x4c
  41afee:	imul   ecx,DWORD PTR [esi-0x5a],0xe6253c69
  41aff5:	out    0x43,al
  41aff7:	in     eax,dx
  41aff8:	sub    eax,0x97c2476b
  41affd:	cmp    DWORD PTR [edx+0x6452b3f2],esp
  41b003:	shl    al,1
  41b005:	xor    ebx,DWORD PTR [ebx+0xb]
  41b008:	fld    DWORD PTR [eax+0x7d5ee433]
  41b00e:	rcr    DWORD PTR [ecx],cl
  41b010:	sbb    dh,al
  41b012:	or     DWORD PTR [esi+0x70],eax
  41b015:	and    BYTE PTR [ebp+0x8],bh
  41b018:	out    dx,al
  41b019:	dec    BYTE PTR [ecx+0x4c]
  41b01c:	test   eax,0x1a9ac8ad
  41b021:	adc    eax,0xdcfafffe
  41b026:	xchg   BYTE PTR [ecx+0x4c],ch
  41b029:	imul   edx,esi,0xffffff9c
  41b02c:	push   ebp
  41b02d:	adc    al,BYTE PTR [edx+0x3d]
  41b030:	fisub  DWORD PTR [edx-0x14e8db5f]
  41b036:	or     al,0x5
  41b038:	push   cs
  41b039:	fs xchg ebx,eax
  41b03b:	push   ebp
  41b03c:	or     al,ch
  41b03e:	xor    al,0x66
  41b040:	out    dx,eax
  41b041:	sub    edi,ecx
  41b043:	xchg   esp,eax
  41b044:	xchg   esp,eax
  41b045:	lock sahf 
  41b047:	shl    DWORD PTR [ebp-0x7ceab205],1
  41b04d:	int3   
  41b04e:	jne    0x41b00c
  41b050:	adc    al,BYTE PTR [esi+ecx*8+0x4b]
  41b054:	addr16 mov eax,0x9cc5ee4
  41b05a:	bswap  ebx
  41b05c:	popa   
  41b05d:	mov    esi,DWORD PTR [edi+0x29]
  41b060:	mov    esp,0x8d09cef3
  41b065:	mov    cl,0x84
  41b067:	sub    DWORD PTR [edi+0x327f6225],eax
  41b06d:	or     BYTE PTR [edx-0x548ceaf7],dl
  41b073:	pushf  
  41b074:	(bad)  
  41b075:	out    dx,eax
  41b076:	retf   0xa92d
  41b079:	pop    edx
  41b07a:	push   eax
  41b07b:	adc    BYTE PTR [eax],0x86
  41b07e:	fxch   st(2)
  41b080:	ja     0x41b0a7
  41b082:	sahf   
  41b083:	cdq    
  41b084:	mov    ecx,0xe904656c
  41b089:	or     esp,esp
  41b08b:	cmp    dh,ch
  41b08d:	outs   dx,DWORD PTR ds:[esi]
  41b08e:	call   0xbf0e:0x569f7295
  41b095:	sub    ch,cl
  41b097:	sbb    ebp,edx
  41b099:	and    al,0x5c
  41b09b:	pushf  
  41b09c:	ja     0x41b0e4
  41b09e:	sub    dh,BYTE PTR [ebp+0x3b]
  41b0a1:	lahf   
  41b0a2:	inc    edx
  41b0a3:	dec    eax
  41b0a4:	push   ecx
  41b0a5:	out    dx,eax
  41b0a6:	sbb    ebx,DWORD PTR [eax+0x24f07206]
  41b0ac:	shl    DWORD PTR [ecx],0x4d
  41b0af:	adc    al,0x2f
  41b0b1:	inc    edi
  41b0b2:	iret   
  41b0b3:	add    dh,BYTE PTR [esi-0x4471db84]
  41b0b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0ba:	or     BYTE PTR [edi-0x5a],cl
  41b0bd:	into   
  41b0be:	jmp    0x41b109
  41b0c0:	daa    
  41b0c1:	out    0x23,al
  41b0c3:	jne    0x41b138
  41b0c5:	icebp  
  41b0c6:	inc    ecx
  41b0c7:	ficomp WORD PTR [eax-0x57b0d81c]
  41b0cd:	cmp    dh,ah
  41b0cf:	add    dl,dh
  41b0d1:	xchg   ebx,eax
  41b0d2:	es xor al,bh
  41b0d5:	dec    esi
  41b0d6:	(bad)  
  41b0d7:	inc    esi
  41b0d8:	je     0x41b114
  41b0da:	xchg   edi,eax
  41b0db:	fs push 0x9527b532
  41b0e1:	push   ebp
  41b0e2:	inc    ebx
  41b0e3:	(bad)  
  41b0e4:	hlt    
  41b0e5:	nop
  41b0e6:	out    0x7b,eax
  41b0e8:	lds    ecx,FWORD PTR [ebx-0x39]
  41b0eb:	shl    DWORD PTR [edi+edx*1+0x30],cl
  41b0ef:	leave  
  41b0f0:	jp     0x41b0a0
  41b0f2:	cdq    
  41b0f3:	in     al,dx
  41b0f4:	das    
  41b0f5:	inc    bh
  41b0f7:	xor    eax,0x1a788611
  41b0fc:	xor    eax,0x3b25955f
  41b101:	cld    
  41b102:	cmp    DWORD PTR [edi],ecx
  41b104:	dec    ebx
  41b105:	int3   
  41b106:	sbb    al,0x3
  41b108:	icebp  
  41b109:	rol    BYTE PTR [ebx],1
  41b10b:	test   ebp,eax
  41b10d:	int    0x98
  41b10f:	sbb    bh,BYTE PTR [esi-0x53]
  41b112:	inc    ebp
  41b113:	xchg   ebp,eax
  41b114:	xor    DWORD PTR [esi],0x64
  41b117:	lods   eax,DWORD PTR ds:[esi]
  41b118:	mov    ds:0x2296ee1f,eax
  41b11d:	inc    ebx
  41b11e:	cmp    ebp,DWORD PTR [esi-0x47]
  41b121:	nop
  41b122:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b123:	js     0x41b0c8
  41b125:	mov    cl,0xc5
  41b127:	out    0x2,al
  41b129:	ret    0x2642
  41b12c:	das    
  41b12d:	dec    edi
  41b12e:	or     al,0x5d
  41b130:	cmp    al,0x3e
  41b132:	mov    ds:0x724b6c16,eax
  41b137:	js     0x41b0f0
  41b139:	cmp    bh,BYTE PTR [eax]
  41b13b:	add    BYTE PTR [esi],dl
  41b13d:	sub    eax,0x4a8895c1
  41b142:	jnp    0x41b0dd
  41b144:	retf   
  41b145:	(bad)  
  41b146:	sub    dl,BYTE PTR [ecx+0x50]
  41b149:	gs sbb eax,0x577b2b7e
  41b14f:	mov    edi,0xad8a4e8d
  41b154:	xchg   esp,eax
  41b155:	cs xchg ecx,eax
  41b157:	sahf   
  41b158:	push   esi
  41b159:	rol    BYTE PTR [ebx],0x82
  41b15c:	out    0xeb,eax
  41b15e:	ret    
  41b15f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b160:	inc    ebx
  41b161:	xor    bh,dl
  41b163:	lss    esp,FWORD PTR [ecx-0x507bc67a]
  41b16a:	jbe    0x41b196
  41b16c:	dec    edx
  41b16d:	les    edi,FWORD PTR [edi-0x55ce4480]
  41b173:	xchg   dh,dh
  41b175:	dec    edi
  41b176:	jno    0x41b134
  41b178:	mov    cl,0xb
  41b17a:	add    esp,DWORD PTR [edx]
  41b17c:	leave  
  41b17d:	enter  0x52c6,0x4a
  41b181:	xchg   edi,eax
  41b182:	ins    BYTE PTR es:[edi],dx
  41b183:	dec    esp
  41b184:	pushf  
  41b185:	repz or DWORD PTR fs:[ebp+0x4],esp
  41b18a:	int    0x42
  41b18c:	xor    esp,DWORD PTR [ebp+0x2fb5af4e]
  41b192:	and    BYTE PTR [esi-0x1f],0xe2
  41b196:	mov    ch,BYTE PTR [ebp+0x3a]
  41b199:	and    al,0x90
  41b19b:	push   cs
  41b19c:	sahf   
  41b19d:	or     eax,0x5b1c8175
  41b1a2:	push   es
  41b1a3:	jb     0x41b16e
  41b1a5:	mov    ah,0x73
  41b1a7:	lods   al,BYTE PTR ds:[esi]
  41b1a8:	mov    cl,0xfb
  41b1aa:	sar    BYTE PTR [ecx-0x8d3e1b],0xa7
  41b1b1:	add    cl,BYTE PTR [ecx+0x7b]
  41b1b4:	mov    BYTE PTR [edi-0xfecf12a],dh
  41b1ba:	aam    0x7
  41b1bc:	test   BYTE PTR [ebx],cl
  41b1be:	xchg   edi,eax
  41b1bf:	ror    DWORD PTR [ebx-0x12ed2070],cl
  41b1c5:	shl    DWORD PTR [edi+ebp*1+0x53],cl
  41b1c9:	ret    0x61fc
  41b1cc:	dec    esi
  41b1cd:	daa    
  41b1ce:	push   ds
  41b1cf:	dec    ebx
  41b1d0:	mov    esp,0x4e86b6ef
  41b1d5:	mov    esi,0x4e5e42bb
  41b1da:	lea    ebx,[esi-0x6740d707]
  41b1e0:	jp     0x41b21e
  41b1e2:	stos   BYTE PTR es:[edi],al
  41b1e3:	and    DWORD PTR [edx-0x20],ebp
  41b1e6:	xor    al,0x3a
  41b1e8:	sub    DWORD PTR [edi-0x41],eax
  41b1eb:	sbb    DWORD PTR [eax+0x14],esi
  41b1ee:	nop
  41b1ef:	push   ds
  41b1f0:	int    0x2e
  41b1f2:	cwde   
  41b1f3:	inc    edi
  41b1f4:	and    BYTE PTR [ebp+0x5b],ah
  41b1f7:	mov    BYTE PTR [edx-0x3f],bl
  41b1fa:	push   es
  41b1fb:	add    eax,0x3131d236
  41b200:	out    dx,eax
  41b201:	iret   
  41b202:	dec    ebx
  41b203:	jne    0x41b1ae
  41b205:	addr16 es in eax,dx
  41b208:	or     DWORD PTR [edx-0x7558632f],ebx
  41b20e:	cwde   
  41b20f:	fimul  WORD PTR [esi+edi*8-0x43f2710c]
  41b216:	jle    0x41b27f
  41b218:	add    BYTE PTR [ebp+0x2],bl
  41b21b:	jae    0x41b267
  41b21d:	mov    dl,0x8d
  41b21f:	pop    eax
  41b220:	ds retf 0xf359
  41b224:	frstor [edx+0x3e]
  41b227:	cli    
  41b228:	jo     0x41b27f
  41b22a:	jns    0x41b21c
  41b22c:	mov    eax,ds:0x6851c773
  41b231:	add    DWORD PTR [edx],ebx
  41b233:	xchg   esi,eax
  41b234:	and    eax,0xb60ba9e2
  41b239:	mov    dh,BYTE PTR [eax+ebp*8]
  41b23c:	jae    0x41b27b
  41b23e:	mov    eax,0x2dba7785
  41b243:	test   eax,0x651b805
  41b248:	jecxz  0x41b1d6
  41b24a:	int3   
  41b24b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b24c:	icebp  
  41b24d:	(bad)  
  41b24e:	xchg   ecx,eax
  41b24f:	pop    ds
  41b250:	pop    es
  41b251:	outs   dx,DWORD PTR ds:[esi]
  41b252:	mul    DWORD PTR [esi+ecx*8-0x7f]
  41b256:	int3   
  41b257:	jae    0x41b2c5
  41b259:	push   cs
  41b25a:	push   ss
  41b25b:	rol    esi,1
  41b25d:	psubd  mm6,QWORD PTR [esi]
  41b260:	enter  0x8b2d,0x45
  41b264:	pop    ebx
  41b265:	stos   BYTE PTR es:[edi],al
  41b266:	ror    BYTE PTR [esi],0x28
  41b269:	cmp    esp,DWORD PTR [eax-0x3b]
  41b26c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b26d:	mov    ds:0xe8266d75,eax
  41b272:	cwde   
  41b273:	dec    esi
  41b274:	outs   dx,DWORD PTR ds:[esi]
  41b275:	loopne 0x41b288
  41b277:	dec    ecx
  41b278:	add    al,0xfd
  41b27a:	sub    eax,0x3b131475
  41b27f:	aam    0xa2
  41b281:	jns    0x41b2a1
  41b283:	les    ebp,FWORD PTR [edx-0x2b2087af]
  41b289:	imul   edx,DWORD PTR [ebx],0x7c324aaa
  41b28f:	jecxz  0x41b26b
  41b291:	inc    edx
  41b292:	outs   dx,DWORD PTR ds:[esi]
  41b293:	or     BYTE PTR [edx+edx*2-0x60],dh
  41b297:	icebp  
  41b298:	stos   BYTE PTR es:[edi],al
  41b299:	and    BYTE PTR [edi+esi*2+0x1c],ah
  41b29d:	jns    0x41b2ba
  41b29f:	add    dl,BYTE PTR [edi+edx*8+0xf729192]
  41b2a6:	xor    BYTE PTR [edx],cl
  41b2a8:	inc    ecx
  41b2a9:	and    BYTE PTR [edi],dl
  41b2ab:	in     eax,dx
  41b2ac:	in     eax,0xc9
  41b2ae:	pop    edi
  41b2af:	mov    ?,WORD PTR [ebp+ebx*8-0x2]
  41b2b3:	pop    esp
  41b2b4:	jle    0x41b24c
  41b2b6:	jle    0x41b2ce
  41b2b8:	loopne 0x41b337
  41b2ba:	cdq    
  41b2bb:	sub    eax,0x91cd76c3
  41b2c0:	mov    edx,0xa86ce171
  41b2c5:	stc    
  41b2c6:	(bad)  
  41b2c7:	jae    0x41b29d
  41b2c9:	cmp    bl,BYTE PTR [eax+0x49]
  41b2cc:	push   0xc5c467a6
  41b2d1:	xchg   edx,eax
  41b2d2:	(bad)  
  41b2d3:	xor    al,0x2
  41b2d5:	outs   dx,DWORD PTR ds:[esi]
  41b2d6:	stc    
  41b2d7:	fldcw  WORD PTR [eax+0x41a3e372]
  41b2dd:	and    edi,esp
  41b2df:	push   0xffffff8f
  41b2e1:	cwde   
  41b2e2:	mov    es,WORD PTR [eax+0x7c9c220d]
  41b2e8:	mov    esp,0xcf9b4957
  41b2ed:	pop    ss
  41b2ee:	in     eax,dx
  41b2ef:	and    esi,DWORD PTR [ebp+0x62d0fdb8]
  41b2f5:	push   cs
  41b2f6:	sub    al,0x24
  41b2f8:	xchg   edx,eax
  41b2f9:	loope  0x41b340
  41b2fb:	and    eax,0xcc350a6f
  41b300:	sbb    eax,0x1b879570
  41b305:	jl     0x41b321
  41b307:	sbb    eax,0xa40d5915
  41b30c:	and    BYTE PTR [edx-0x36e0b45],0xa5
  41b313:	call   0x91cfc2c7
  41b318:	call   0x8c0e0587
  41b31d:	adc    DWORD PTR [ecx],0xb9187cdc
  41b323:	mov    ch,0xb2
  41b325:	push   eax
  41b326:	repnz repz adc BYTE PTR [edx-0x4c99a2bd],ah
  41b32e:	mov    edx,0x2e90b7f5
  41b333:	xchg   esi,eax
  41b334:	adc    dl,ah
  41b336:	ja     0x41b2e9
  41b338:	std    
  41b339:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b33a:	push   ds
  41b33b:	and    BYTE PTR [eax],0x57
  41b33e:	ds mov dl,0x3a
  41b341:	adc    BYTE PTR [edx-0x3cf61b5a],0xd8
  41b348:	mov    eax,0x14505525
  41b34d:	nop
  41b34e:	xor    eax,0x93891722
  41b353:	jmp    0xe6a6:0xb69ba00b
  41b35a:	pop    es
  41b35b:	sub    al,0x94
  41b35d:	xor    ecx,edi
  41b35f:	jne    0x41b386
  41b361:	gs sbb ecx,ecx
  41b364:	cmp    al,0x2e
  41b366:	or     DWORD PTR [edx],eax
  41b368:	push   ebp
  41b369:	sahf   
  41b36a:	jns    0x41b3a1
  41b36c:	shr    dh,1
  41b36e:	cmp    ch,BYTE PTR [esi-0x2b]
  41b371:	adc    al,0x1a
  41b373:	ret    
  41b374:	mov    dl,0x80
  41b376:	pop    eax
  41b377:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b378:	inc    ebx
  41b379:	jmp    0x46d1:0x8730364e
  41b380:	xor    al,0xe9
  41b382:	in     eax,dx
  41b383:	adc    eax,0xe036aec4
  41b388:	xor    bh,BYTE PTR [edi]
  41b38a:	shl    BYTE PTR [esi],cl
  41b38c:	(bad)  
  41b38d:	(bad)  [ebx]
  41b38f:	mov    al,ds:0x5ea8ecff
  41b394:	retf   
  41b395:	int3   
  41b396:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b397:	adc    eax,0x93394cc
  41b39c:	mov    esi,DWORD PTR [ecx+0x4026450c]
  41b3a2:	out    dx,al
  41b3a3:	adc    al,0xbc
  41b3a5:	mov    edx,0xca77a838
  41b3aa:	push   cs
  41b3ab:	cmc    
  41b3ac:	in     eax,0xd9
  41b3ae:	jb     0x41b3f0
  41b3b0:	push   ebp
  41b3b1:	sahf   
  41b3b2:	imul   esp,DWORD PTR [esi],0x1aa9a776
  41b3b8:	sub    ebp,DWORD PTR [esi-0x55]
  41b3bb:	retf   
  41b3bc:	les    ecx,FWORD PTR [esi+0x2851f253]
  41b3c2:	push   eax
  41b3c3:	jge    0x41b43f
  41b3c5:	adc    eax,0x1b5841ba
  41b3ca:	das    
  41b3cb:	xor    BYTE PTR [edx],al
  41b3cd:	add    ch,BYTE PTR [eax-0x5e50f5a7]
  41b3d3:	stc    
  41b3d4:	addr16 lahf 
  41b3d6:	sub    BYTE PTR [esp+esi*8+0x2b60e4e7],al
  41b3dd:	sbb    bl,BYTE PTR [ebx]
  41b3df:	dec    esp
  41b3e0:	mov    DWORD PTR [esi+0x51],ebx
  41b3e3:	and    BYTE PTR [esi+0x4f],dl
  41b3e6:	pop    ecx
  41b3e7:	sbb    BYTE PTR [edi+ebp*4],dl
  41b3ea:	push   esi
  41b3eb:	cdq    
  41b3ec:	in     al,0x2a
  41b3ee:	fwait
  41b3ef:	div    DWORD PTR [edx+0x61]
  41b3f2:	lds    ebp,FWORD PTR [edi-0x69]
  41b3f5:	xor    ecx,DWORD PTR [ebx-0x65]
  41b3f8:	or     DWORD PTR [esi-0x75ebf480],0xf106cee4
  41b402:	out    0x3d,eax
  41b404:	es inc eax
  41b406:	les    esp,FWORD PTR [eax]
  41b408:	aad    0xd9
  41b40a:	sub    eax,0xc5d79516
  41b40f:	sbb    DWORD PTR [ebp+0x3d4ae4bd],ecx
  41b415:	xchg   ebx,eax
  41b416:	aam    0xbb
  41b418:	sahf   
  41b419:	daa    
  41b41a:	(bad)  
  41b41b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b41c:	xchg   edx,eax
  41b41d:	xchg   DWORD PTR [ebx+0x46],edi
  41b420:	ret    
  41b421:	out    dx,al
  41b422:	es pop edx
  41b424:	dec    eax
  41b425:	mov    ecx,0x4e5fbd2f
  41b42a:	fwait
  41b42b:	(bad)  
  41b42c:	jns    0x41b3d9
  41b42e:	scas   eax,DWORD PTR es:[edi]
  41b42f:	cmp    bh,ah
  41b431:	and    eax,0x6c73406b
  41b436:	fild   WORD PTR [esp+ecx*4+0x5d4aa525]
  41b43d:	push   edi
  41b43e:	mov    al,ds:0x559bed40
  41b443:	ss stc 
  41b445:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b446:	inc    edx
  41b447:	jns    0x41b463
  41b449:	xchg   edx,eax
  41b44a:	push   eax
  41b44b:	push   esp
  41b44c:	push   cs
  41b44d:	in     eax,dx
  41b44e:	(bad)  
  41b44f:	cmp    eax,0xa1be12d1
  41b454:	stc    
  41b455:	call   0x768cb0e8
  41b45a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b45b:	out    dx,al
  41b45c:	adc    al,0xc9
  41b45e:	pop    es
  41b45f:	mov    BYTE PTR [edi+0x672b8511],ah
  41b465:	daa    
  41b466:	or     al,0xc7
  41b468:	dec    edi
  41b469:	sbb    DWORD PTR [ecx+0x74ada831],0x63
  41b470:	cli    
  41b471:	mov    al,0x8e
  41b473:	push   ebx
  41b474:	adc    eax,0x453e573a
  41b479:	jecxz  0x41b498
  41b47b:	repz enter 0xd615,0x71
  41b480:	in     al,0x45
  41b482:	sub    esi,edi
  41b484:	jo     0x41b492
  41b486:	test   edx,ecx
  41b488:	push   ecx
  41b489:	pop    edi
  41b48a:	mov    edx,0x627d06de
  41b48f:	dec    eax
  41b490:	inc    ebx
  41b491:	cdq    
  41b492:	cld    
  41b493:	inc    esi
  41b494:	mov    esp,ebp
  41b496:	std    
  41b497:	gs jg  0x41b492
  41b49a:	aas    
  41b49b:	dec    edi
  41b49c:	xchg   BYTE PTR [edi+0x3a290ae3],cl
  41b4a2:	es ss not edx
  41b4a6:	add    DWORD PTR [eax-0x20],esi
  41b4a9:	loope  0x41b51b
  41b4ab:	clc    
  41b4ac:	mov    edi,0x3f5bedbb
  41b4b1:	push   0xffffffe6
  41b4b3:	test   eax,0x240202a
  41b4b8:	adc    BYTE PTR [edx],bl
  41b4ba:	add    ch,BYTE PTR [eax+esi*4]
  41b4bd:	(bad)  
  41b4be:	in     al,0x20
  41b4c0:	dec    ebp
  41b4c1:	sbb    bh,ah
  41b4c3:	or     BYTE PTR [edi],dl
  41b4c5:	jmp    0xd3fda329
  41b4ca:	push   ebx
  41b4cb:	fwait
  41b4cc:	inc    esi
  41b4cd:	inc    ebx
  41b4ce:	xchg   ebp,eax
  41b4cf:	lods   al,BYTE PTR ds:[esi]
  41b4d0:	xor    ecx,0x5e20ab04
  41b4d6:	sub    bh,cl
  41b4d8:	sbb    eax,0xd79f5140
  41b4dd:	arpl   WORD PTR fs:[edx-0x31497a20],bx
  41b4e4:	dec    edi
  41b4e5:	je     0x41b4de
  41b4e7:	mov    dh,0xb3
  41b4e9:	cmp    al,0x51
  41b4eb:	dec    edi
  41b4ec:	and    BYTE PTR [edx+edi*8+0x2b5b64e0],bl
  41b4f3:	imul   esi,esi,0x3
  41b4f6:	lods   eax,DWORD PTR ds:[esi]
  41b4f7:	sub    eax,0xcec05875
  41b4fc:	cmp    esp,ebp
  41b4fe:	xlat   BYTE PTR ds:[ebx]
  41b4ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b500:	or     dl,BYTE PTR [ebx+0x3b]
  41b503:	and    bh,dl
  41b505:	fimul  WORD PTR [ebx+0x439c553a]
  41b50b:	nop
  41b50c:	pop    esi
  41b50d:	jecxz  0x41b51f
  41b50f:	push   ebp
  41b510:	cwde   
  41b511:	xlat   BYTE PTR ds:[ebx]
  41b512:	add    bl,BYTE PTR [esp+edi*2]
  41b515:	sub    al,0xa0
  41b517:	dec    eax
  41b518:	(bad)  
  41b51a:	push   cs
  41b51b:	jle    0x41b4c4
  41b51d:	int    0xe5
  41b51f:	lods   eax,DWORD PTR ds:[esi]
  41b520:	sbb    eax,0x5184afe
  41b525:	popa   
  41b526:	mov    ss,esi
  41b528:	mov    ecx,0x4b539a70
  41b52d:	add    eax,0x25f756db
  41b532:	add    al,0xf
  41b534:	inc    eax
  41b535:	shl    esp,1
  41b537:	xchg   esi,eax
  41b538:	pop    esp
  41b539:	cli    
  41b53a:	sbb    ebx,eax
  41b53c:	inc    esp
  41b53d:	xchg   ebx,eax
  41b53e:	cs mov ebx,0xe81bb6ec
  41b544:	int3   
  41b545:	into   
  41b546:	cdq    
  41b547:	mov    dl,0x31
  41b549:	(bad)  
  41b54a:	adc    DWORD PTR ds:0xeaf0436b,esp
  41b550:	inc    ecx
  41b551:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b552:	xchg   esi,eax
  41b553:	sbb    DWORD PTR [edi-0x74f7b275],edx
  41b559:	push   ebp
  41b55a:	mov    ah,0x3
  41b55c:	iret   
  41b55d:	and    ecx,edx
  41b55f:	mov    DWORD PTR [ebp-0x4c],ecx
  41b562:	mov    ecx,DWORD PTR [ebp+0x8]
  41b565:	mov    edx,DWORD PTR [ebp-0x48]
  41b568:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41b56f:	mov    DWORD PTR [ebp-0x48],ecx
  41b572:	mov    ecx,DWORD PTR [ebp+0x8]
  41b575:	mov    edx,0xfa5e1524
  41b57a:	sub    edx,ecx
  41b57c:	add    edx,DWORD PTR [ebp-0x44]
  41b57f:	mov    DWORD PTR [ebp-0x44],edx
  41b582:	mov    ecx,DWORD PTR [ebp+0x8]
  41b585:	xor    ecx,eax
  41b587:	add    ecx,esi
  41b589:	jne    0x4191ae
  41b58f:	jmp    0x41b621
  41b594:	mov    ecx,DWORD PTR [ebp+0x8]
  41b597:	mov    edx,DWORD PTR [ebp-0x8]
  41b59a:	xor    ecx,eax
  41b59c:	xor    edx,eax
  41b59e:	sub    ecx,edx
  41b5a0:	sub    ecx,esi
  41b5a2:	xor    ecx,eax
  41b5a4:	mov    DWORD PTR [ebp+0x8],ecx
  41b5a7:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5aa:	mov    edx,DWORD PTR [ebp-0x58]
  41b5ad:	add    ecx,0x5708e2
  41b5b3:	imul   ecx,edx
  41b5b6:	mov    DWORD PTR [ebp-0x58],ecx
  41b5b9:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5bc:	mov    edx,DWORD PTR [ebp-0x54]
  41b5bf:	add    ecx,0x64f880
  41b5c5:	or     ecx,edx
  41b5c7:	mov    DWORD PTR [ebp-0x54],ecx
  41b5ca:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5cd:	mov    edx,DWORD PTR [ebp-0x50]
  41b5d0:	add    ecx,0x242ebf1
  41b5d6:	xor    ecx,edx
  41b5d8:	mov    DWORD PTR [ebp-0x50],ecx
  41b5db:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5de:	mov    edx,DWORD PTR [ebp-0x4c]
  41b5e1:	add    ecx,edi
  41b5e3:	and    ecx,edx
  41b5e5:	mov    DWORD PTR [ebp-0x4c],ecx
  41b5e8:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5eb:	mov    edx,DWORD PTR [ebp-0x48]
  41b5ee:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41b5f5:	mov    DWORD PTR [ebp-0x48],ecx
  41b5f8:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5fb:	mov    edx,0xfa5e1524
  41b600:	sub    edx,ecx
  41b602:	add    edx,DWORD PTR [ebp-0x44]
  41b605:	mov    DWORD PTR [ebp-0x44],edx
  41b608:	mov    ecx,DWORD PTR [ebp+0x8]
  41b60b:	xor    ecx,eax
  41b60d:	add    ecx,esi
  41b60f:	jne    0x41b594
  41b615:	mov    ecx,DWORD PTR [ebp-0x8]
  41b618:	xor    ecx,eax
  41b61a:	mov    eax,DWORD PTR [ebp+0x10]
  41b61d:	add    ecx,esi
  41b61f:	mov    DWORD PTR [eax],ecx
  41b621:	pop    edi
  41b622:	pop    esi
  41b623:	pop    ebx
  41b624:	leave  
  41b625:	ret    0xc
  41b628:	push   ebp
  41b629:	mov    ebp,esp
  41b62b:	sub    esp,0x78
  41b62e:	push   esi
  41b62f:	mov    DWORD PTR ds:0x42b21e,0x12
  41b639:	cmp    DWORD PTR ds:0x42b21e,0x0
  41b640:	je     0x41b684
  41b646:	cmp    DWORD PTR ds:0x42b21e,0x16
  41b64d:	jle    0x41b684
  41b653:	jmp    0x41b672
  41b658:	push   0x42b1fa
  41b65d:	push   0x8597
  41b662:	push   0x42a285
  41b667:	push   0x42a1b7
  41b66c:	call   DWORD PTR ds:0x42b31e
  41b672:	mov    esi,DWORD PTR ds:0x42b21e
  41b678:	dec    esi
  41b679:	mov    DWORD PTR ds:0x42b21e,esi
  41b67f:	jmp    0x41b639
  41b684:	push   edi
  41b685:	sub    DWORD PTR ds:0x42b1ca,0x4941
  41b68f:	mov    eax,ds:0x42a472
  41b694:	xor    esi,esi
  41b696:	xor    esi,DWORD PTR ds:0x42b1d6
  41b69c:	add    esi,DWORD PTR ds:0x42b1da
  41b6a2:	mov    DWORD PTR ds:0x42b1d6,esi
  41b6a8:	mov    DWORD PTR [ebp-0x24],eax
  41b6ab:	and    DWORD PTR ds:0x42b226,edx
  41b6b1:	mov    eax,ds:0x42a592
  41b6b6:	mov    ecx,DWORD PTR ds:0x42b256
  41b6bc:	mov    ecx,DWORD PTR [ecx]
  41b6be:	xor    DWORD PTR ds:0x42b1f2,ecx
  41b6c4:	mov    DWORD PTR [ebp-0x30],eax
  41b6c7:	mov    DWORD PTR ds:0x42b1b2,0x10
  41b6d1:	cmp    DWORD PTR ds:0x42b1b2,0x0
  41b6d8:	je     0x41b70e
  41b6de:	cmp    DWORD PTR ds:0x42b1b2,0x1e
  41b6e5:	ja     0x41b70e
  41b6eb:	jmp    0x41b6fb
  41b6f0:	push   0x25ea
  41b6f5:	call   DWORD PTR ds:0x42b322
  41b6fb:	xor    eax,eax
  41b6fd:	xor    eax,DWORD PTR ds:0x42b1b2
  41b703:	dec    eax
  41b704:	mov    ds:0x42b1b2,eax
  41b709:	jmp    0x41b6d1
  41b70e:	mov    DWORD PTR [ebp-0x2c],0xf89c85a5
  41b715:	and    DWORD PTR ds:0x42b21e,0x0
  41b71f:	jmp    0x41b733
  41b724:	xor    esi,esi
  41b726:	add    esi,DWORD PTR ds:0x42b21e
  41b72c:	inc    esi
  41b72d:	mov    DWORD PTR ds:0x42b21e,esi
  41b733:	cmp    DWORD PTR ds:0x42b21e,0x14
  41b73a:	jae    0x41b77c
  41b740:	cmp    DWORD PTR ds:0x42b21e,0x7
  41b747:	jl     0x41b77c
  41b74d:	jmp    0x41b75d
  41b752:	push   0x3b69
  41b757:	call   DWORD PTR ds:0x42b326
  41b75d:	cmp    DWORD PTR ds:0x42b21e,0x6
  41b764:	jne    0x41b777
  41b76a:	mov    esi,DWORD PTR ds:0x42b21e
  41b770:	inc    esi
  41b771:	mov    DWORD PTR ds:0x42b21e,esi
  41b777:	jmp    0x41b724
  41b77c:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  41b783:	or     eax,DWORD PTR ds:0x42b212
  41b789:	mov    eax,DWORD PTR [ebp-0x10]
  41b78c:	and    DWORD PTR ds:0x42b1c2,0x0
  41b796:	jmp    0x41b7aa
  41b79b:	xor    ecx,ecx
  41b79d:	or     ecx,DWORD PTR ds:0x42b1c2
  41b7a3:	inc    ecx
  41b7a4:	mov    DWORD PTR ds:0x42b1c2,ecx
  41b7aa:	cmp    DWORD PTR ds:0x42b1c2,0x16
  41b7b1:	jae    0x41b7ee
  41b7b7:	cmp    DWORD PTR ds:0x42b1c2,0x22
  41b7be:	jb     0x41b7ee
  41b7c4:	jmp    0x41b7e9
  41b7c9:	push   0x42a121
  41b7ce:	push   0x73a7
  41b7d3:	push   DWORD PTR [ebp-0x18]
  41b7d6:	push   0x5cd1
  41b7db:	push   0x2368
  41b7e0:	push   DWORD PTR [ebp-0xc]
  41b7e3:	call   DWORD PTR ds:0x42b2ea
  41b7e9:	jmp    0x41b79b
  41b7ee:	mov    ecx,DWORD PTR [ebp-0x10]
  41b7f1:	mov    DWORD PTR ds:0x42b1be,0x10
  41b7fb:	cmp    DWORD PTR ds:0x42b1be,0x0
  41b802:	je     0x41b85b
  41b808:	cmp    DWORD PTR ds:0x42b1be,0x9
  41b80f:	jle    0x41b85b
  41b815:	jmp    0x41b82f
  41b81a:	push   0x42a03d
  41b81f:	push   0x0
  41b821:	push   DWORD PTR [ebp-0xc]
  41b824:	push   0x5431
  41b829:	call   DWORD PTR ds:0x42b2ee
  41b82f:	cmp    DWORD PTR ds:0x42b1be,0xa
  41b836:	jne    0x41b849
  41b83c:	mov    edi,DWORD PTR ds:0x42b1be
  41b842:	dec    edi
  41b843:	mov    DWORD PTR ds:0x42b1be,edi
  41b849:	mov    edi,DWORD PTR ds:0x42b1be
  41b84f:	dec    edi
  41b850:	mov    DWORD PTR ds:0x42b1be,edi
  41b856:	jmp    0x41b7fb
  41b85b:	sub    eax,ecx
  41b85d:	and    esi,esi
  41b85f:	jmp    0x41dbf0
  41b864:	xchg   ch,bl
  41b866:	fdiv   st,st(3)
  41b868:	test   dl,ah
  41b86a:	xchg   BYTE PTR [edx+0x1c89e04a],dl
  41b870:	das    
  41b871:	xlat   BYTE PTR ds:[ebx]
  41b872:	test   ebp,esp
  41b874:	out    dx,al
  41b875:	inc    DWORD PTR [eax-0x7ca1f07d]
  41b87b:	add    DWORD PTR [ecx+0x6f110d6],0xffffffd0
  41b882:	and    BYTE PTR [ebx+esi*8-0x4b],dh
  41b886:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b887:	(bad)  
  41b888:	aam    0x44
  41b88a:	push   esi
  41b88b:	pop    esi
  41b88c:	mov    edi,0x8f00e5ac
  41b891:	inc    edi
  41b892:	xor    DWORD PTR [esi+0x2],0x3a
  41b896:	cmp    eax,0xdbe88456
  41b89b:	out    dx,eax
  41b89c:	rol    BYTE PTR [eax+0x1],1
  41b89f:	jl     0x41b854
  41b8a1:	mov    WORD PTR [eax],cs
  41b8a3:	cli    
  41b8a4:	and    BYTE PTR [eax+0x64],bh
  41b8a7:	dec    ebp
  41b8a8:	ins    DWORD PTR es:[edi],dx
  41b8a9:	(bad)  
  41b8ab:	dec    esp
  41b8ac:	loope  0x41b92d
  41b8ae:	adc    cl,BYTE PTR [ebx+0x71536d2]
  41b8b4:	pushf  
  41b8b5:	cmp    bh,BYTE PTR [ecx+0x2]
  41b8b8:	jp     0x41b91e
  41b8ba:	mov    dh,0x9e
  41b8bc:	adc    al,0xc4
  41b8be:	out    dx,al
  41b8bf:	loop   0x41b8ef
  41b8c1:	pusha  
  41b8c2:	xchg   ecx,eax
  41b8c3:	stos   BYTE PTR es:[edi],al
  41b8c4:	mov    eax,ds:0x9b426878
  41b8c9:	cmc    
  41b8ca:	mov    eax,ds:0xb9dfcb7f
  41b8cf:	mov    ds:0xb81b5e6e,al
  41b8d4:	loope  0x41b93e
  41b8d6:	hlt    
  41b8d7:	mov    edx,0xb5a042ff
  41b8dc:	and    dl,cl
  41b8de:	clc    
  41b8df:	jnp    0x41b955
  41b8e1:	ins    DWORD PTR es:[edi],dx
  41b8e2:	rol    ebx,1
  41b8e4:	mov    ds:0x8d49585,eax
  41b8e9:	xchg   DWORD PTR [ebp+0x49],edx
  41b8ec:	mov    WORD PTR [ecx+0x3d],?
  41b8ef:	cmc    
  41b8f0:	push   ds
  41b8f1:	adc    BYTE PTR [eax-0x27e6f8b2],bh
  41b8f7:	cmc    
  41b8f8:	adc    DWORD PTR ds:0x11174afa,edx
  41b8fe:	xchg   esi,eax
  41b8ff:	outs   dx,DWORD PTR ds:[esi]
  41b900:	pop    esi
  41b901:	pop    edi
  41b902:	jp     0x41b8ea
  41b904:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b905:	jle    0x41b94f
  41b907:	shl    DWORD PTR [ecx+0x43],cl
  41b90a:	jle    0x41b8b0
  41b90c:	retf   
  41b90d:	mov    cl,0xd5
  41b90f:	push   ss
  41b910:	dec    ecx
  41b911:	fwait
  41b912:	test   DWORD PTR [ebp+0x72807177],esp
  41b918:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b919:	and    cl,BYTE PTR [edx]
  41b91b:	jg     0x41b938
  41b91d:	xchg   ebx,eax
  41b91e:	loop   0x41b99b
  41b920:	mov    edx,0x5dfb2766
  41b925:	or     al,BYTE PTR [ebp-0x5d3a9e57]
  41b92b:	fmul   st,st(0)
  41b92d:	shr    BYTE PTR [edi],1
  41b92f:	scas   eax,DWORD PTR es:[edi]
  41b930:	loop   0x41b94e
  41b932:	sar    BYTE PTR [edi-0x48],1
  41b935:	fwait
  41b936:	scas   eax,DWORD PTR es:[edi]
  41b937:	xchg   ecx,eax
  41b938:	(bad)  
  41b939:	test   al,0xc3
  41b93b:	push   0xfe6f4357
  41b940:	xor    al,0x54
  41b942:	test   al,0xd
  41b944:	jne    0x41b98f
  41b946:	repnz popa 
  41b948:	xchg   ebp,eax
  41b949:	mov    al,ds:0x657e9a3a
  41b94e:	cmc    
  41b94f:	jg     0x41b946
  41b951:	adc    BYTE PTR [esi+0x46],bl
  41b954:	mov    dl,0x47
  41b956:	mov    eax,DWORD PTR [ebx+0x6b]
  41b959:	push   ss
  41b95a:	sbb    DWORD PTR [edx+0x44],ebx
  41b95d:	xchg   ecx,eax
  41b95e:	call   0x9fd0f52b
  41b963:	nop
  41b964:	pop    edx
  41b965:	xchg   edi,eax
  41b966:	int3   
  41b967:	fbstp  TBYTE PTR [edx]
  41b969:	or     ecx,DWORD PTR ds:0x6980759c
  41b96f:	add    BYTE PTR [eax],ah
  41b971:	in     eax,dx
  41b972:	pop    ebx
  41b973:	pop    ebp
  41b974:	aaa    
  41b975:	fs dec esi
  41b977:	push   eax
  41b978:	adc    al,0xc2
  41b97a:	dec    edi
  41b97b:	xor    BYTE PTR [ebp+0x3f677d7f],dh
  41b981:	imul   edx,DWORD PTR [eax+0x6b],0x4beb1ce9
  41b988:	add    dl,al
  41b98a:	lea    ebx,ds:0x906a977b
  41b990:	cli    
  41b991:	push   ds
  41b992:	ret    0x1c3b
  41b995:	sbb    al,0xf6
  41b997:	inc    edx
  41b998:	mov    WORD PTR [eax-0x27],fs
  41b99b:	adc    eax,0xd8407caf
  41b9a0:	push   ecx
  41b9a1:	adc    ecx,DWORD PTR [ebp+0x2774d8cd]
  41b9a7:	daa    
  41b9a8:	push   esi
  41b9a9:	aad    0xc0
  41b9ab:	dec    ebp
  41b9ac:	idiv   cl
  41b9ae:	std    
  41b9af:	or     dl,BYTE PTR [esi+0x6a]
  41b9b2:	add    esi,DWORD PTR [ebp-0x4ee169ac]
  41b9b8:	mov    bh,0xc9
  41b9ba:	test   al,0x73
  41b9bc:	pop    ds
  41b9bd:	pushf  
  41b9be:	dec    edi
  41b9bf:	sbb    al,0x0
  41b9c1:	mov    ch,0xc7
  41b9c3:	sbb    edx,ebp
  41b9c5:	xor    eax,0xd8f98e3e
  41b9ca:	xchg   ecx,eax
  41b9cb:	or     al,0x42
  41b9cd:	sbb    eax,DWORD PTR [esi-0x7b]
  41b9d0:	loop   0x41b9a4
  41b9d2:	popa   
  41b9d3:	mov    dl,0x25
  41b9d5:	add    DWORD PTR [ebx],ecx
  41b9d7:	scas   eax,DWORD PTR es:[edi]
  41b9d8:	(bad)  
  41b9d9:	mov    al,0x2f
  41b9db:	xor    bl,BYTE PTR [ebx-0x41]
  41b9de:	in     eax,dx
  41b9df:	jns    0x41ba0c
  41b9e1:	or     BYTE PTR [eax],ah
  41b9e3:	xchg   ecx,eax
  41b9e4:	add    al,0x32
  41b9e6:	lods   al,BYTE PTR ds:[esi]
  41b9e7:	outs   dx,DWORD PTR ds:[esi]
  41b9e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b9e9:	nop
  41b9ea:	popa   
  41b9eb:	outs   dx,BYTE PTR ds:[esi]
  41b9ec:	rol    DWORD PTR [ebx+eiz*8-0x30],0x27
  41b9f1:	jl     0x41b991
  41b9f3:	push   edi
  41b9f4:	stos   DWORD PTR es:[edi],eax
  41b9f5:	pop    ecx
  41b9f6:	xor    ah,BYTE PTR [edx]
  41b9f8:	sub    bl,BYTE PTR [ebx]
  41b9fa:	rcr    BYTE PTR [ebx],cl
  41b9fc:	int3   
  41b9fd:	inc    ebx
  41b9fe:	push   0x6
  41ba00:	sbb    eax,edx
  41ba02:	ja     0x41ba63
  41ba04:	mov    BYTE PTR [ebx+0x34],cl
  41ba07:	mov    al,ds:0xef3272a3
  41ba0c:	mov    edi,0xd7ff4808
  41ba11:	inc    edx
  41ba12:	leave  
  41ba13:	mov    dh,0x56
  41ba15:	inc    ebp
  41ba16:	xchg   esi,eax
  41ba17:	cmc    
  41ba18:	mov    al,0xb8
  41ba1a:	and    DWORD PTR [esi-0x577572ef],0xdef965d2
  41ba24:	jns    0x41ba79
  41ba26:	and    ecx,DWORD PTR [esi]
  41ba28:	push   esi
  41ba29:	out    0xad,al
  41ba2b:	mov    ah,0x83
  41ba2d:	jp     0x41b9db
  41ba2f:	mov    cl,BYTE PTR [ecx]
  41ba31:	int    0xd
  41ba33:	inc    esi
  41ba34:	add    esp,esi
  41ba36:	(bad)  
  41ba37:	ss push ebx
  41ba39:	jae    0x41bab3
  41ba3b:	add    BYTE PTR [esp+ecx*2],0x39
  41ba3f:	fs enter 0xd7f4,0x1e
  41ba44:	aaa    
  41ba45:	ja     0x41baaa
  41ba47:	in     al,0xfa
  41ba49:	mov    cl,0x46
  41ba4b:	add    bh,BYTE PTR [edi+0x3a]
  41ba4e:	adc    BYTE PTR [eax],dl
  41ba50:	or     al,BYTE PTR [ecx]
  41ba52:	and    edi,eax
  41ba54:	cwde   
  41ba55:	arpl   WORD PTR [edi],ax
  41ba57:	xor    esi,ecx
  41ba59:	(bad)  
  41ba5a:	test   DWORD PTR [eax-0x42ceb5e9],0x4fb121cf
  41ba64:	jne    0x41ba5e
  41ba66:	addr16 add dl,0x17
  41ba6a:	mov    eax,0x953b89f7
  41ba6f:	push   es
  41ba70:	dec    esp
  41ba71:	inc    esi
  41ba72:	sbb    BYTE PTR [ecx-0x99c4e15],ah
  41ba78:	daa    
  41ba79:	mov    al,0xe2
  41ba7b:	lods   eax,DWORD PTR ds:[esi]
  41ba7c:	lock inc ecx
  41ba7e:	pop    ebx
  41ba7f:	mov    ebx,0x7513eabf
  41ba84:	cmp    dl,BYTE PTR [eax-0x6957044a]
  41ba8a:	fcomip st,st(4)
  41ba8c:	mov    ebp,0x9bb9c580
  41ba91:	mov    eax,ds:0xc0615461
  41ba96:	iret   
  41ba97:	cmp    eax,0xd1d502d6
  41ba9d:	cmp    ebp,esp
  41ba9f:	push   edi
  41baa0:	loopne 0x41ba44
  41baa2:	imul   ebx,edi,0xffffffb5
  41baa5:	and    al,BYTE PTR [edx+0x30]
  41baa8:	in     eax,0x1a
  41baaa:	sub    al,0xfd
  41baac:	cmp    eax,0x6c461edd
  41bab1:	shr    DWORD PTR [eax+0x1a06e731],0xd5
  41bab8:	data16 mov al,0x1f
  41babb:	inc    ecx
  41babc:	adc    al,0xee
  41babe:	sbb    DWORD PTR [esi],eax
  41bac0:	mov    dh,0x84
  41bac2:	inc    BYTE PTR [ecx+edi*1+0x6e0c9dd2]
  41bac9:	sbb    eax,0xf1c02851
  41bace:	inc    edx
  41bacf:	jbe    0x41bb2f
  41bad1:	test   DWORD PTR [ecx+0x6],eax
  41bad4:	repnz aad 0x4a
  41bad7:	lods   eax,DWORD PTR ds:[esi]
  41bad8:	adc    DWORD PTR ss:[edx],ebp
  41badb:	out    0xe4,eax
  41badd:	jle    0x41bacb
  41badf:	(bad)  
  41bae0:	pop    esp
  41bae1:	mov    esp,0x26dd4927
  41bae6:	add    BYTE PTR [eax-0x102f15ec],0x8b
  41baed:	cmp    al,BYTE PTR [edi+0x38222a15]
  41baf3:	arpl   WORD PTR [ecx-0x2],si
  41baf6:	shrd   DWORD PTR [eax],edi,0xed
  41bafa:	add    DWORD PTR [ecx-0x5b],ecx
  41bafd:	outs   dx,DWORD PTR ds:[esi]
  41bafe:	inc    ebx
  41baff:	pop    ebx
  41bb00:	ret    
  41bb01:	and    esp,DWORD PTR [ebx]
  41bb03:	adc    BYTE PTR [edx-0x48cfb7c6],bh
  41bb09:	add    al,0x6f
  41bb0b:	cmp    al,0x95
  41bb0d:	mov    ecx,0x53bf10a5
  41bb12:	xchg   edi,eax
  41bb13:	imul   ecx,DWORD PTR [edi],0xfffffffd
  41bb16:	bsr    esp,DWORD PTR [eax+0x2f]
  41bb1a:	push   0x745dbb83
  41bb1f:	xchg   edi,eax
  41bb20:	push   eax
  41bb21:	mov    cl,0x4e
  41bb23:	and    ch,bh
  41bb25:	or     eax,DWORD PTR [ecx-0x3993dc8e]
  41bb2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb2c:	out    dx,eax
  41bb2d:	adc    DWORD PTR [eax-0x4c],ebp
  41bb30:	inc    edx
  41bb31:	xchg   edx,eax
  41bb32:	ins    DWORD PTR es:[edi],dx
  41bb33:	jns    0x41bb0b
  41bb35:	xor    ebx,ebx
  41bb37:	sub    DWORD PTR [esi],0x33
  41bb3a:	in     eax,dx
  41bb3b:	aas    
  41bb3c:	adc    al,0x9c
  41bb3e:	fld    TBYTE PTR [ecx-0x373e0527]
  41bb44:	sub    esp,edx
  41bb46:	dec    eax
  41bb47:	or     BYTE PTR [edi],0xfa
  41bb4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb4b:	fst    DWORD PTR [edi]
  41bb4d:	and    eax,DWORD PTR ds:[edi+ebx*1+0x524c044a]
  41bb55:	mov    eax,ds:0xeb797e8f
  41bb5a:	inc    esi
  41bb5b:	push   ecx
  41bb5c:	push   esp
  41bb5d:	call   0x634f3e77
  41bb62:	lods   eax,DWORD PTR ds:[esi]
  41bb63:	xor    eax,0x890f4fae
  41bb68:	(bad)  
  41bb69:	fstp   TBYTE PTR [esi]
  41bb6b:	test   DWORD PTR [esi],ebp
  41bb6d:	xchg   ebp,eax
  41bb6e:	push   ebx
  41bb6f:	cdq    
  41bb70:	data16 stc 
  41bb72:	mov    ebp,0x8acaeba
  41bb77:	shl    BYTE PTR [ebp+0xd],0x6f
  41bb7b:	(bad)  
  41bb7c:	iret   
  41bb7d:	dec    edi
  41bb7e:	sub    bh,0xf0
  41bb81:	shl    DWORD PTR [esi+0xa],0x5c
  41bb85:	xchg   ecx,eax
  41bb86:	je     0x41bb2b
  41bb88:	aaa    
  41bb89:	and    DWORD PTR [edx-0x69e466e1],esi
  41bb8f:	arpl   di,bp
  41bb91:	(bad)  
  41bb92:	sti    
  41bb93:	push   ss
  41bb94:	in     eax,0xc6
  41bb96:	div    BYTE PTR [ecx+ebx*1]
  41bb99:	and    BYTE PTR [eax],ch
  41bb9b:	sbb    BYTE PTR [eax-0x67],0xc
  41bb9f:	xchg   esp,eax
  41bba0:	sar    BYTE PTR [edi-0x4a],cl
  41bba3:	aam    0x99
  41bba5:	xchg   edi,eax
  41bba6:	jnp    0x41bbae
  41bba8:	dec    edi
  41bba9:	das    
  41bbaa:	dec    ax
  41bbac:	(bad)  
  41bbad:	xchg   ebp,eax
  41bbae:	sti    
  41bbaf:	lods   eax,DWORD PTR ds:[esi]
  41bbb0:	jp     0x41bb7a
  41bbb2:	adc    al,0x1
  41bbb4:	scas   eax,DWORD PTR es:[edi]
  41bbb5:	mov    edx,esp
  41bbb7:	or     edx,DWORD PTR [ebx]
  41bbb9:	in     eax,dx
  41bbba:	popf   
  41bbbb:	in     eax,dx
  41bbbc:	sub    ch,BYTE PTR [ebx-0x3bef84f0]
  41bbc2:	inc    edx
  41bbc3:	int    0x23
  41bbc5:	xor    dl,BYTE PTR [eax]
  41bbc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbc8:	adc    DWORD PTR [eax-0x38],edx
  41bbcb:	fild   WORD PTR [edx+ecx*2-0x2a]
  41bbcf:	adc    al,0xdc
  41bbd1:	scas   al,BYTE PTR es:[edi]
  41bbd2:	sub    dh,al
  41bbd4:	and    eax,0x86daf1a0
  41bbd9:	xchg   ecx,eax
  41bbda:	ins    DWORD PTR es:[edi],dx
  41bbdb:	mov    ebx,0xdb650f94
  41bbe0:	hlt    
  41bbe1:	(bad)  
  41bbe2:	jnp    0x41bbb4
  41bbe4:	xchg   esp,eax
  41bbe5:	mov    eax,ds:0x8f4156a0
  41bbea:	(bad)  
  41bbeb:	fdisi(8087 only) 
  41bbee:	ins    BYTE PTR es:[edi],dx
  41bbef:	lds    ebp,FWORD PTR [edx]
  41bbf1:	xor    bh,BYTE PTR [esi]
  41bbf3:	pop    ss
  41bbf4:	xor    BYTE PTR [ebx+0x5],bl
  41bbf7:	nop
  41bbf8:	dec    eax
  41bbf9:	cs js  0x41bbe0
  41bbfc:	out    0xaf,al
  41bbfe:	dec    eax
  41bbff:	stos   BYTE PTR es:[edi],al
  41bc00:	fimul  WORD PTR [ebp-0x59d75568]
  41bc06:	rcl    DWORD PTR [ebx-0x53],cl
  41bc09:	sti    
  41bc0a:	je     0x41bbe7
  41bc0c:	popa   
  41bc0d:	arpl   WORD PTR [eax-0x14],bp
  41bc10:	adc    DWORD PTR ds:0xec30970,ebx
  41bc16:	add    eax,0x1bdc8563
  41bc1b:	cmp    ebx,DWORD PTR [edi-0x26]
  41bc1e:	into   
  41bc1f:	inc    esp
  41bc20:	push   edx
  41bc21:	rol    edi,0x2c
  41bc24:	sub    al,0x37
  41bc26:	popf   
  41bc27:	mov    eax,0xe627b7cb
  41bc2c:	test   al,0xad
  41bc2e:	add    eax,0xfe9be6d9
  41bc33:	fs ret 0x649e
  41bc37:	popa   
  41bc38:	xchg   ecx,ebp
  41bc3a:	xchg   edi,eax
  41bc3b:	inc    esp
  41bc3c:	(bad)  
  41bc3e:	iret   
  41bc3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc40:	or     al,0xae
  41bc42:	pusha  
  41bc43:	ins    DWORD PTR es:[edi],dx
  41bc44:	scas   al,BYTE PTR es:[edi]
  41bc45:	cld    
  41bc46:	and    al,cl
  41bc48:	push   ebp
  41bc49:	add    DWORD PTR ss:[ecx],edi
  41bc4c:	sub    edx,DWORD PTR [edx-0x72]
  41bc4f:	jne    0x41bcb9
  41bc51:	in     al,0x64
  41bc53:	arpl   WORD PTR [eax+edx*4],cx
  41bc56:	push   edi
  41bc57:	xchg   edi,eax
  41bc58:	or     bh,BYTE PTR [eax]
  41bc5a:	push   cs
  41bc5b:	in     eax,dx
  41bc5c:	popa   
  41bc5d:	pop    esp
  41bc5e:	mov    bl,0x47
  41bc60:	ja     0x41bc50
  41bc62:	push   cs
  41bc63:	xlat   BYTE PTR ds:[ebx]
  41bc64:	lds    esp,FWORD PTR [edx+0x2a797a46]
  41bc6a:	rcl    BYTE PTR [ecx+esi*4+0x5],cl
  41bc6e:	push   edx
  41bc6f:	push   es
  41bc70:	mov    ch,0x37
  41bc72:	clc    
  41bc73:	scas   al,BYTE PTR es:[edi]
  41bc74:	mov    ch,bl
  41bc76:	imul   ebx,DWORD PTR [eax+0x7b3233e3],0x70
  41bc7d:	test   eax,0xe7a980ad
  41bc82:	(bad)  
  41bc83:	(bad)  
  41bc84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc85:	into   
  41bc86:	loop   0x41bc60
  41bc88:	jb     0x41bc84
  41bc8a:	loopne 0x41bc6e
  41bc8c:	aam    0x52
  41bc8e:	xchg   DWORD PTR [esi],esi
  41bc90:	jmp    0x41bc74
  41bc92:	ret    
  41bc93:	pop    ebx
  41bc94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc95:	mov    ?,WORD PTR [ecx-0x7d]
  41bc98:	xchg   esp,eax
  41bc99:	dec    ebp
  41bc9a:	jbe    0x41bcbb
  41bc9c:	bound  esi,QWORD PTR [edi+0x66d525bd]
  41bca2:	xchg   esi,eax
  41bca3:	sub    al,0xe0
  41bca5:	cwde   
  41bca6:	xchg   esi,eax
  41bca7:	in     eax,dx
  41bca8:	ret    0xd089
  41bcab:	inc    edi
  41bcac:	mov    DWORD PTR [ecx+0x14a8a8c8],edi
  41bcb2:	lock xor edi,ecx
  41bcb5:	push   esp
  41bcb6:	mov    ebp,0xb30330c7
  41bcbb:	lahf   
  41bcbc:	dec    ebx
  41bcbd:	(bad)  
  41bcbe:	stos   DWORD PTR es:[edi],eax
  41bcbf:	dec    ebp
  41bcc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bcc1:	mov    eax,ds:0xeabc013
  41bcc6:	or     eax,0xe1d7f2f
  41bccb:	scas   al,BYTE PTR es:[edi]
  41bccc:	cld    
  41bccd:	lock ins BYTE PTR es:[edi],dx
  41bccf:	dec    edi
  41bcd0:	fist   WORD PTR [eax-0x49b40646]
  41bcd6:	pop    esi
  41bcd7:	iret   
  41bcd8:	xor    al,0x1a
  41bcda:	aaa    
  41bcdb:	je     0x41bc98
  41bcdd:	and    al,0xad
  41bcdf:	rcr    ah,0xc4
  41bce2:	xchg   ebx,eax
  41bce3:	pop    ebp
  41bce4:	sbb    eax,0x9dd6c801
  41bce9:	xor    esp,DWORD PTR [edi+0x36ab80a1]
  41bcef:	js     0x41bd3b
  41bcf1:	mov    dl,0xb5
  41bcf3:	mov    ?,WORD PTR [ecx]
  41bcf5:	icebp  
  41bcf6:	mov    bh,0xc7
  41bcf8:	cli    
  41bcf9:	sbb    al,BYTE PTR [eax+0xd]
  41bcfc:	mov    ds:0x5846de7b,al
  41bd01:	mov    cl,0x33
  41bd03:	mov    al,0xe
  41bd05:	les    eax,FWORD PTR [ebp-0x75]
  41bd08:	xchg   ecx,eax
  41bd09:	push   esi
  41bd0a:	mov    ds:0x2d0c168,eax
  41bd0f:	rcl    eax,1
  41bd11:	shl    BYTE PTR [ecx+edx*4+0x11],0x8
  41bd16:	bound  ebp,QWORD PTR [esi+0x1f]
  41bd19:	jns    0x41bd5b
  41bd1b:	in     eax,dx
  41bd1c:	std    
  41bd1d:	ins    DWORD PTR es:[edi],dx
  41bd1e:	jbe    0x41bd59
  41bd20:	rol    BYTE PTR ds:0xc361a233,cl
  41bd26:	(bad)  
  41bd27:	mov    eax,DWORD PTR [ebp+0x4b102d88]
  41bd2d:	repnz lds ebp,FWORD PTR [edi-0x76d0f045]
  41bd34:	xor    eax,ecx
  41bd36:	pop    esp
  41bd37:	pop    esi
  41bd38:	sti    
  41bd39:	xor    eax,0x3c19d98
  41bd3e:	nop
  41bd3f:	pop    edx
  41bd40:	lds    edi,FWORD PTR [eax+edx*2]
  41bd43:	pop    esp
  41bd44:	push   ds
  41bd45:	inc    BYTE PTR [eax]
  41bd47:	pushf  
  41bd48:	sbb    ch,BYTE PTR [eax+0x50]
  41bd4b:	jmp    0xf5f6267e
  41bd50:	pop    edi
  41bd51:	jb     0x41bd34
  41bd53:	xor    BYTE PTR [ecx],ch
  41bd55:	xlat   BYTE PTR ds:[ebx]
  41bd56:	add    BYTE PTR [eax-0x3cb52085],0x91
  41bd5d:	das    
  41bd5e:	ror    eax,1
  41bd60:	fwait
  41bd61:	mov    bl,bl
  41bd63:	mov    ch,0x10
  41bd65:	dec    edx
  41bd66:	jmp    0xc8efbc7
  41bd6b:	frstor [esi]
  41bd6d:	push   0x9cc5bd74
  41bd72:	ja     0x41bd30
  41bd74:	sub    eax,0xbde37ee1
  41bd79:	retf   0xcace
  41bd7c:	adc    cl,BYTE PTR [edx+0x65]
  41bd7f:	xchg   edi,eax
  41bd80:	inc    ebx
  41bd81:	mov    ch,0xa5
  41bd83:	adc    al,0xd8
  41bd85:	lods   eax,DWORD PTR ds:[esi]
  41bd86:	add    DWORD PTR [ebx-0x6dc1e55e],ebp
  41bd8c:	cmp    bl,BYTE PTR [eax+0x21e7c549]
  41bd92:	mov    al,BYTE PTR [ecx-0x50d643d9]
  41bd98:	mov    edi,0xc6435381
  41bd9d:	pop    ebx
  41bd9e:	pop    ebp
  41bd9f:	fnstcw WORD PTR ds:0x70d3426d
  41bda5:	jg     0x41bdc7
  41bda7:	cmp    dl,BYTE PTR [ebx]
  41bda9:	sar    DWORD PTR [ecx+0x61],cl
  41bdac:	fild   DWORD PTR [eax]
  41bdae:	sar    edx,1
  41bdb0:	leave  
  41bdb1:	retf   0xb602
  41bdb4:	cli    
  41bdb5:	pop    ebp
  41bdb6:	cld    
  41bdb7:	push   ss
  41bdb8:	adc    al,0xb0
  41bdba:	mov    ecx,0xe8b3b5bd
  41bdbf:	dec    eax
  41bdc0:	and    eax,0x2a82174e
  41bdc5:	xor    BYTE PTR [eax-0x7c],ch
  41bdc8:	xor    BYTE PTR [esi-0x19505e44],0xd6
  41bdcf:	dec    ebp
  41bdd0:	mov    edi,0xc9fb4ef8
  41bdd5:	repz add BYTE PTR [ecx],cl
  41bdd8:	dec    eax
  41bdd9:	shl    ah,1
  41bddb:	cmp    DWORD PTR [edi+ebp*4+0x4cf96d3e],eax
  41bde2:	out    0xd3,eax
  41bde4:	or     esi,DWORD PTR [ebp+0x773f2ba5]
  41bdea:	and    BYTE PTR [ecx+0x683002ab],dl
  41bdf0:	mov    eax,?
  41bdf2:	add    eax,0x28123fbe
  41bdf7:	ins    DWORD PTR es:[edi],dx
  41bdf8:	lods   al,BYTE PTR ds:[esi]
  41bdf9:	pop    esp
  41bdfa:	pop    ss
  41bdfb:	loopne 0x41bdc6
  41bdfd:	add    al,0xcd
  41bdff:	cmc    
  41be00:	in     al,0xfb
  41be02:	gs retf 
  41be04:	(bad)  
  41be05:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41be07:	cmp    ch,ah
  41be09:	popf   
  41be0a:	cmp    DWORD PTR [ebp-0x60f343c0],0x48
  41be11:	xor    DWORD PTR [edx+0x22274e97],ebx
  41be17:	outs   dx,DWORD PTR ds:[esi]
  41be18:	fnsave [bx+di+0x62ec]
  41be1d:	nop
  41be1e:	hlt    
  41be1f:	and    BYTE PTR [ebp+0x3db528b4],0xd3
  41be26:	cs push 0x25
  41be29:	cdq    
  41be2a:	sbb    BYTE PTR [esi],ah
  41be2c:	push   ds
  41be2d:	call   0xe57f4fe1
  41be32:	addr16 adc bh,0x92
  41be36:	lds    edi,FWORD PTR [ecx+0x2c]
  41be39:	sub    ecx,edx
  41be3b:	test   BYTE PTR [ecx+0x17fe9dc7],ah
  41be41:	call   0xbaa8a77e
  41be46:	mov    edi,0x63e083d9
  41be4b:	jnp    0x41be97
  41be4d:	pop    esp
  41be4e:	add    BYTE PTR [eax+0x19],ch
  41be51:	sub    ebp,DWORD PTR [eax+0x609f3e23]
  41be57:	mov    esp,0xeb18e00b
  41be5c:	hlt    
  41be5d:	mov    ?,esi
  41be5f:	jmp    0x616d:0x98867575
  41be66:	repz div BYTE PTR [eax]
  41be69:	(bad)  
  41be6a:	loop   0x41becf
  41be6c:	ret    
  41be6d:	cmp    BYTE PTR [edi+ebp*2+0x35e02dcf],al
  41be74:	jmp    0x8022e48b
  41be79:	and    eax,0x210b490e
  41be7e:	out    0x16,eax
  41be80:	enter  0x64cd,0x16
  41be84:	aas    
  41be85:	gs mov al,0x34
  41be88:	enter  0x846,0xb1
  41be8c:	or     eax,0x5715da40
  41be91:	cmp    ecx,DWORD PTR [ecx+0xd]
  41be94:	pop    eax
  41be95:	lea    ebp,[ecx+0x11]
  41be98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be99:	push   ds
  41be9a:	jge    0x41be6b
  41be9c:	imul   eax,DWORD PTR [esi+0x7f439ff7],0xffffffef
  41bea3:	sti    
  41bea4:	or     dl,BYTE PTR [edi+0x6a]
  41bea7:	mov    eax,ds:0x842e1b86
  41beac:	xchg   ebp,eax
  41bead:	fadd   st,st(5)
  41beaf:	lock cmp esi,DWORD PTR [esi]
  41beb2:	pop    ss
  41beb3:	push   0xa1d83ce2
  41beb8:	into   
  41beb9:	ret    0xef4c
  41bebc:	cld    
  41bebd:	mov    esi,0x8fad90c3
  41bec2:	sahf   
  41bec3:	push   eax
  41bec4:	and    DWORD PTR [ebx-0x80],ecx
  41bec7:	dec    esp
  41bec8:	nop
  41bec9:	adc    BYTE PTR [esi+0x14],0xb4
  41becd:	adc    eax,0x9a804f98
  41bed2:	scas   al,BYTE PTR es:[edi]
  41bed3:	sbb    BYTE PTR gs:[ebx+esi*8+0x4e667a13],al
  41bedb:	outs   dx,DWORD PTR ds:[esi]
  41bedc:	inc    ebx
  41bedd:	mov    edi,0x373ef44c
  41bee2:	inc    eax
  41bee3:	jne    0x41bf36
  41bee5:	call   0x693d:0x800c7b01
  41beec:	sti    
  41beed:	jmp    FWORD PTR [ecx+eax*4+0x22]
  41bef1:	jne    0x41beb9
  41bef3:	and    BYTE PTR [ecx-0x11],cl
  41bef6:	aas    
  41bef7:	scas   al,BYTE PTR es:[edi]
  41bef8:	push   ss
  41bef9:	imul   esp,DWORD PTR [ebp-0x1f],0xa5233b5d
  41bf00:	pop    edi
  41bf01:	out    0x44,eax
  41bf03:	pop    ebp
  41bf04:	jb     0x41be9e
  41bf06:	lds    esp,FWORD PTR [edi+0x7ff0bd1]
  41bf0c:	sbb    al,0x21
  41bf0e:	lods   al,BYTE PTR ds:[esi]
  41bf0f:	cwde   
  41bf10:	ins    BYTE PTR es:[edi],dx
  41bf11:	lahf   
  41bf12:	sub    al,0x4
  41bf14:	xor    al,0x8a
  41bf16:	mov    cl,0x82
  41bf18:	inc    esi
  41bf19:	pop    edx
  41bf1a:	push   esi
  41bf1b:	mov    ebp,0x4aff21b0
  41bf20:	or     BYTE PTR [edx-0x3a309c45],0xd4
  41bf27:	scas   al,BYTE PTR es:[edi]
  41bf28:	repz pop es
  41bf2a:	mov    ?,WORD PTR [esi-0x55]
  41bf2d:	pop    eax
  41bf2e:	std    
  41bf2f:	cwde   
  41bf30:	mov    edi,0xcc4a5a4
  41bf35:	push   ebp
  41bf37:	pop    esp
  41bf38:	ja     0x41bf26
  41bf3a:	adc    eax,0xf1ca9e8e
  41bf3f:	add    dh,BYTE PTR [edi-0x60]
  41bf42:	retf   0x29aa
  41bf45:	inc    ebx
  41bf46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf47:	and    al,0x22
  41bf49:	sub    bh,BYTE PTR [edx+edi*1+0x700e0ff3]
  41bf50:	xchg   esi,eax
  41bf51:	or     eax,0xd4b44e25
  41bf56:	sub    al,0xfb
  41bf58:	mov    edx,0x1c82a115
  41bf5d:	loop   0x41bfb2
  41bf5f:	mov    ds:0x1c495a70,al
  41bf64:	es daa 
  41bf66:	repnz fisubr WORD PTR [edi-0x30f59c21]
  41bf6d:	or     eax,0x70b32248
  41bf72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf73:	pop    ds
  41bf74:	test   esi,ebx
  41bf76:	test   al,0x84
  41bf78:	enter  0x57c1,0x29
  41bf7c:	(bad)  
  41bf7d:	ss rcl ebp,cl
  41bf80:	dec    esp
  41bf81:	fnstenv [esi-0x4e]
  41bf84:	(bad)  
  41bf85:	mov    edx,0x8a2c0750
  41bf8a:	iret   
  41bf8b:	pop    ss
  41bf8c:	or     BYTE PTR [ebx-0x5b],ah
  41bf8f:	jmp    0x236:0x329094
  41bf96:	sbb    edi,DWORD PTR [edi-0x39]
  41bf99:	xor    esi,DWORD PTR [esi]
  41bf9b:	sub    esi,DWORD PTR [edi-0x3b]
  41bf9e:	sub    al,0xa4
  41bfa0:	in     al,dx
  41bfa1:	enter  0x8618,0x7c
  41bfa5:	pop    ecx
  41bfa6:	xor    al,0x50
  41bfa8:	(bad)  
  41bfa9:	lock mov esp,0x9d4044cd
  41bfaf:	(bad)  
  41bfb0:	fst    DWORD PTR [ebx-0x7376d684]
  41bfb6:	int3   
  41bfb7:	xchg   ebx,eax
  41bfb8:	ret    0x5c29
  41bfbb:	xchg   ebp,eax
  41bfbc:	xor    DWORD PTR [ecx-0x61b7ebf4],edi
  41bfc2:	push   ebx
  41bfc3:	dec    esp
  41bfc4:	mov    esi,DWORD PTR [edx-0x16]
  41bfc7:	lods   al,BYTE PTR ds:[esi]
  41bfc8:	xor    DWORD PTR [ecx],0xffffff8b
  41bfcb:	into   
  41bfcc:	nop
  41bfcd:	in     eax,0xbc
  41bfcf:	xchg   DWORD PTR [edx-0x2a],ecx
  41bfd2:	arpl   WORD PTR [ebp-0x799acad0],di
  41bfd8:	loope  0x41bfdb
  41bfda:	fcmovb st,st(6)
  41bfdc:	ficomp DWORD PTR [edx+0x4fc3c169]
  41bfe2:	icebp  
  41bfe3:	dec    ebx
  41bfe4:	jnp    0x41bf9c
  41bfe6:	xor    BYTE PTR [ecx-0x6d],ch
  41bfe9:	jle    0x41c069
  41bfeb:	outs   dx,BYTE PTR ss:[esi]
  41bfed:	jb     0x41c06c
  41bfef:	retf   
  41bff0:	xor    eax,0xcb98ad9a
  41bff5:	add    BYTE PTR [ebx],bl
  41bff7:	jmp    0x41bfb8
  41bff9:	fisubr DWORD PTR [ebx]
  41bffb:	mov    edi,0xf7e9963f
  41c000:	sbb    esp,ebx
  41c002:	xor    BYTE PTR [edi+0x9],al
  41c005:	adc    esi,DWORD PTR [eax]
  41c007:	pop    ss
  41c008:	cli    
  41c009:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c00a:	pop    ss
  41c00b:	retf   
  41c00c:	sahf   
  41c00d:	adc    ch,BYTE PTR [edx+edi*2+0x4691879d]
  41c014:	in     eax,0x83
  41c016:	xchg   ebx,eax
  41c017:	add    BYTE PTR [ebx],bl
  41c019:	ffreep st(0)
  41c01b:	rol    BYTE PTR [ecx+0x10a8e5c2],cl
  41c021:	sub    eax,0xe99d794e
  41c026:	scas   al,BYTE PTR es:[edi]
  41c027:	arpl   WORD PTR [edx],ax
  41c029:	inc    ebx
  41c02a:	pop    ebx
  41c02b:	stc    
  41c02c:	add    al,0xca
  41c02e:	sti    
  41c02f:	xchg   ecx,eax
  41c030:	adc    DWORD PTR [edx-0x7b464363],ebx
  41c036:	daa    
  41c037:	mov    al,0x21
  41c039:	adc    al,0xf9
  41c03b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c03c:	les    esp,FWORD PTR [ebx-0x6307f1cd]
  41c042:	test   DWORD PTR [edi],eax
  41c044:	loopne 0x41bffb
  41c046:	sub    al,0x73
  41c048:	mov    bh,0x12
  41c04a:	jle    0x41c09d
  41c04c:	mov    ebp,0x81fa4ca4
  41c051:	sbb    eax,0x56078a77
  41c056:	sub    DWORD PTR ds:0x2347776a,esp
  41c05c:	dec    esp
  41c05d:	popa   
  41c05e:	mov    cl,0xc3
  41c060:	mov    edx,0xf8333174
  41c065:	push   0x28e21577
  41c06a:	mov    ebp,0x2b4d563e
  41c06f:	fs (bad) 
  41c071:	out    dx,al
  41c072:	jne    0x41c002
  41c074:	inc    esp
  41c075:	cmp    eax,0x9c516721
  41c07a:	mov    ebx,DWORD PTR [eax+esi*1+0x1d]
  41c07e:	cmp    edi,esp
  41c080:	push   esi
  41c081:	jnp    0x41c066
  41c083:	mov    bl,0xd4
  41c085:	adc    eax,0xeb38e389
  41c08a:	fisubr DWORD PTR [eax+0x79]
  41c08d:	cmp    al,0xa8
  41c08f:	repz mov dl,0xd7
  41c092:	add    ch,BYTE PTR [eax-0x2e]
  41c095:	jnp    0x41c034
  41c097:	cmp    ah,bh
  41c099:	push   ecx
  41c09a:	xor    bh,ah
  41c09c:	pop    esi
  41c09d:	shr    DWORD PTR [ebx+0x4d99dae],1
  41c0a3:	push   edi
  41c0a4:	fimul  DWORD PTR [ecx+ebx*2]
  41c0a7:	mov    esp,0xd6b9feb6
  41c0ac:	leave  
  41c0ad:	mov    edx,0x77870a8f
  41c0b2:	jae    0x41c067
  41c0b4:	xor    BYTE PTR [ebx-0x3b],bl
  41c0b7:	retf   0x5ee1
  41c0ba:	sub    DWORD PTR [ebx+edx*8+0x177dccae],ecx
  41c0c1:	add    eax,DWORD PTR [edx+0x71]
  41c0c4:	outs   dx,BYTE PTR ds:[esi]
  41c0c5:	mov    ds:0x463793d9,al
  41c0ca:	inc    esi
  41c0cb:	mov    ds:0xe129b30c,al
  41c0d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0d1:	sub    ebx,DWORD PTR [ecx-0x6f2ccb1e]
  41c0d7:	jbe    0x41c13a
  41c0d9:	mov    al,0xc2
  41c0db:	ins    DWORD PTR es:[edi],dx
  41c0dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0dd:	jmp    0x16b356d6
  41c0e2:	xchg   DWORD PTR [ecx],ebx
  41c0e4:	out    dx,al
  41c0e5:	ret    0x386b
  41c0e8:	(bad)  
  41c0e9:	xor    eax,0xa898f241
  41c0ee:	pop    edi
  41c0ef:	pop    ds
  41c0f0:	xor    al,0x95
  41c0f2:	pop    edi
  41c0f3:	(bad)  ds:0x8a851681
  41c0f9:	lods   eax,DWORD PTR ds:[esi]
  41c0fa:	loopne 0x41c0ad
  41c0fc:	arpl   WORD PTR [esi+edi*2+0x4e91fe50],cx
  41c103:	jbe    0x41c09e
  41c105:	imul   ebp,DWORD PTR [ebx+0x1d],0x43af7595
  41c10c:	push   cs
  41c10d:	int3   
  41c10e:	loopne 0x41c13f
  41c110:	xor    ebx,edx
  41c112:	dec    ebx
  41c113:	mov    edx,0x747ffb73
  41c118:	das    
  41c119:	add    BYTE PTR [ecx],bl
  41c11b:	inc    ecx
  41c11c:	out    0xa,al
  41c11e:	fdiv   st,st(0)
  41c120:	cld    
  41c121:	sub    ch,cl
  41c123:	cmp    al,BYTE PTR [eax-0x6735f7f]
  41c129:	and    DWORD PTR [eax],edi
  41c12b:	or     al,0xb5
  41c12d:	pop    ebp
  41c12e:	cli    
  41c12f:	mov    cl,0x7d
  41c131:	push   edx
  41c132:	pop    ss
  41c133:	sub    cl,dh
  41c135:	xchg   ebx,eax
  41c136:	cmp    eax,0xfb9f905b
  41c13b:	retf   
  41c13c:	sbb    bh,BYTE PTR [edi+0x5df71b18]
  41c142:	inc    ebp
  41c143:	xchg   ecx,eax
  41c144:	jl     0x41c170
  41c146:	cmp    al,0x5a
  41c148:	dec    ebx
  41c149:	sahf   
  41c14a:	and    eax,0xf0c05502
  41c14f:	mov    esi,0x3a14226d
  41c154:	xchg   ebp,eax
  41c155:	pop    esp
  41c156:	or     al,0x2e
  41c158:	inc    esi
  41c159:	pop    ds
  41c15a:	or     ecx,edi
  41c15c:	mov    dh,0xbe
  41c15e:	mov    esp,0x215087
  41c163:	xor    bh,BYTE PTR [ebx-0x5c5f2f8a]
  41c169:	pop    ebx
  41c16a:	mov    ch,BYTE PTR [ebx+0x1c]
  41c16d:	mov    ?,WORD PTR [ebx-0x3b]
  41c170:	cmp    DWORD PTR [esi+0x59],edx
  41c173:	ss stos BYTE PTR es:[edi],al
  41c175:	dec    esp
  41c176:	ins    BYTE PTR es:[edi],dx
  41c177:	inc    eax
  41c178:	int    0xb5
  41c17a:	fxch   st(0)
  41c17c:	xor    eax,0x92033643
  41c181:	cmp    ebp,DWORD PTR [edx+0x32]
  41c184:	push   edi
  41c185:	cmp    ch,ch
  41c187:	je     0x41c183
  41c189:	adc    eax,0x990b62e0
  41c18e:	sbb    eax,0x9700730d
  41c193:	mov    esi,DWORD PTR [edx+0x24a470c6]
  41c199:	push   ss
  41c19a:	push   edi
  41c19b:	and    DWORD PTR [edx+0x6d],esi
  41c19e:	push   cs
  41c19f:	out    0xa1,eax
  41c1a1:	in     al,dx
  41c1a2:	lea    esp,[ebp+eax*2+0xdc69fec]
  41c1a9:	ss xchg ebp,eax
  41c1ab:	add    edx,0x5c
  41c1ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1af:	les    esi,FWORD PTR [bp+si]
  41c1b2:	cwde   
  41c1b3:	jae    0x41c138
  41c1b5:	pop    ss
  41c1b6:	outs   dx,BYTE PTR ds:[esi]
  41c1b7:	out    dx,al
  41c1b8:	sbb    eax,0x6072d7c3
  41c1bd:	les    ecx,FWORD PTR [ebx+0x71]
  41c1c0:	icebp  
  41c1c1:	mov    ds:0xc4509017,al
  41c1c6:	mov    ch,0xca
  41c1c8:	data16 mov ds:0xbfcb3317,al
  41c1ce:	mov    ebp,0x2ff8ed0f
  41c1d3:	idiv   DWORD PTR [ebx+0x30]
  41c1d6:	mov    esi,0x8c657d13
  41c1db:	pop    edx
  41c1dc:	push   esp
  41c1dd:	sahf   
  41c1de:	dec    ebx
  41c1df:	push   es
  41c1e0:	imul   ebp,DWORD PTR [edx],0x623dd9f4
  41c1e6:	and    DWORD PTR [edi+0x5cf78d4f],esi
  41c1ec:	cli    
  41c1ed:	retf   
  41c1ee:	mov    eax,0x1fbf741f
  41c1f3:	int3   
  41c1f4:	cwde   
  41c1f5:	sub    al,0x1a
  41c1f7:	retf   0xfd2a
  41c1fa:	mov    dh,0xba
  41c1fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1fd:	dec    edi
  41c1fe:	in     al,dx
  41c1ff:	lahf   
  41c200:	sub    esp,DWORD PTR [ebp-0x30]
  41c203:	jp     0x41c27f
  41c205:	dec    edx
  41c206:	mov    esi,0x261aa28f
  41c20b:	mov    ?,edx
  41c20d:	or     esp,DWORD PTR [ecx+0x26]
  41c210:	repz out dx,eax
  41c212:	pop    ebp
  41c213:	mov    dh,0xdd
  41c215:	jecxz  0x41c19c
  41c217:	out    0xe2,al
  41c219:	fimul  DWORD PTR [ebp+0x30]
  41c21c:	mov    ds:0xd6b635f0,al
  41c221:	cmp    BYTE PTR [ecx+0x77],ch
  41c224:	jge    0x41c212
  41c226:	cdq    
  41c227:	int    0xc7
  41c229:	out    0xbd,ax
  41c22c:	(bad)  
  41c22d:	jge    0x41c2a0
  41c22f:	movlpd xmm2,QWORD PTR [ecx]
  41c233:	ins    DWORD PTR es:[edi],dx
  41c234:	imul   ebx,DWORD PTR [ecx+0x33],0xffffffe9
  41c238:	rcr    bl,1
  41c23a:	push   edi
  41c23b:	mov    ds:0x4ef511e,al
  41c240:	push   0xffffffc0
  41c242:	pop    esi
  41c243:	or     al,BYTE PTR [esp+ecx*1]
  41c246:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c247:	sub    al,BYTE PTR [ebx-0x53f4d21]
  41c24d:	jg     0x41c24c
  41c24f:	inc    edx
  41c250:	ja     0x41c1de
  41c252:	push   edx
  41c253:	jl     0x41c244
  41c255:	push   0xffffffde
  41c257:	sub    al,0xca
  41c259:	in     eax,0x6c
  41c25b:	cld    
  41c25c:	ins    DWORD PTR es:[edi],dx
  41c25d:	jne    0x41c1eb
  41c25f:	fs popa 
  41c261:	dec    edx
  41c262:	repz and BYTE PTR [ebx+0x6cdb4ec6],ch
  41c269:	(bad)  
  41c26a:	sbb    DWORD PTR [ebx-0x17],esp
  41c26d:	(bad)  
  41c26e:	adc    al,0x27
  41c270:	xor    esi,0x68
  41c273:	add    al,0x3a
  41c275:	in     al,0x9b
  41c277:	mov    DWORD PTR [eax-0x15],0xe2702712
  41c27e:	xlat   BYTE PTR ds:[ebx]
  41c27f:	mov    cl,0xeb
  41c281:	pop    edi
  41c282:	nop
  41c283:	pop    ss
  41c284:	adc    BYTE PTR [eax-0x5b],bl
  41c287:	cli    
  41c288:	cs and eax,0x581a55d0
  41c28e:	dec    edx
  41c28f:	in     eax,0x1a
  41c291:	fstp   QWORD PTR [eax+0x362e28dd]
  41c297:	inc    ecx
  41c298:	sbb    esi,DWORD PTR [esi-0x56]
  41c29b:	bound  ebx,QWORD PTR [ebx+0x36]
  41c29e:	pop    edi
  41c29f:	mov    esp,DWORD PTR [edx+0x498134f5]
  41c2a5:	addr16 clc 
  41c2a7:	fcom   QWORD PTR ss:[edi-0x55]
  41c2ab:	push   edi
  41c2ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2ad:	mov    ah,dh
  41c2af:	push   ebp
  41c2b0:	clc    
  41c2b1:	inc    edx
  41c2b2:	jns    0x41c2cc
  41c2b4:	mov    ecx,0xef2ecde4
  41c2b9:	push   cs
  41c2ba:	and    ah,bl
  41c2bc:	clc    
  41c2bd:	pop    edi
  41c2be:	mov    es,WORD PTR [edi]
  41c2c0:	xor    al,0xc1
  41c2c2:	es fwait
  41c2c4:	or     ah,BYTE PTR [edi]
  41c2c6:	adc    BYTE PTR [esp+ebx*1],ah
  41c2c9:	sahf   
  41c2ca:	push   ebp
  41c2cb:	jno    0x41c2b2
  41c2cd:	pop    eax
  41c2ce:	fsubr  DWORD PTR [edi-0x50]
  41c2d1:	dec    ebx
  41c2d2:	pop    ss
  41c2d3:	adc    eax,0x795e3555
  41c2d8:	(bad)  
  41c2d9:	retf   0x4239
  41c2dc:	jbe    0x41c2fb
  41c2de:	fimul  WORD PTR [ebp-0x5fcfaaed]
  41c2e4:	sahf   
  41c2e5:	mov    ah,0x9a
  41c2e7:	mov    ds,ebp
  41c2e9:	mul    DWORD PTR [ecx-0x3cfe6e60]
  41c2ef:	popa   
  41c2f0:	aam    0x35
  41c2f2:	test   DWORD PTR [ebp-0x68],edx
  41c2f5:	repz push edi
  41c2f7:	pop    ebp
  41c2f8:	(bad)  
  41c2f9:	in     al,0x63
  41c2fb:	popa   
  41c2fc:	mov    ebx,0xe9d9f309
  41c301:	int    0x3f
  41c303:	or     ebx,DWORD PTR cs:[ecx+0x1ab0490d]
  41c30a:	adc    ch,BYTE PTR [ecx+0x24]
  41c30d:	aaa    
  41c30e:	jae    0x41c373
  41c310:	in     eax,dx
  41c311:	sub    DWORD PTR [esi],eax
  41c313:	mov    WORD PTR [ebx+0x2f],es
  41c316:	or     BYTE PTR [ebx+0x3e27d244],dl
  41c31c:	and    BYTE PTR [eax],bh
  41c31e:	jmp    FWORD PTR [eax-0x3d]
  41c321:	inc    eax
  41c322:	cmc    
  41c323:	pop    ebp
  41c324:	cmp    BYTE PTR [esi-0x5ceeffe6],al
  41c32a:	mov    edx,0x8894d851
  41c32f:	(bad)  
  41c330:	sub    esp,DWORD PTR [ebp-0x58]
  41c333:	fstp   QWORD PTR [esi+0xb0a70e9]
  41c339:	adc    ebx,DWORD PTR [ebp-0x3d]
  41c33c:	adc    ah,bl
  41c33e:	repnz adc al,0xa3
  41c341:	in     eax,dx
  41c342:	repnz (bad) 
  41c344:	jecxz  0x41c34a
  41c346:	xchg   ebp,eax
  41c347:	ins    DWORD PTR es:[edi],dx
  41c348:	mov    al,0x73
  41c34a:	or     BYTE PTR ds:0x9d4b8d26,bl
  41c350:	mov    bh,0xfc
  41c352:	jne    0x41c3a0
  41c354:	call   0x3633:0xa2767250
  41c35b:	enter  0xd2e1,0x82
  41c35f:	dec    edi
  41c360:	sub    DWORD PTR [ecx],ebp
  41c362:	cmc    
  41c363:	das    
  41c364:	out    dx,eax
  41c365:	shl    edi,1
  41c367:	and    bh,BYTE PTR [ebx]
  41c369:	imul   ebx,DWORD PTR [edi],0x1a
  41c36c:	cmc    
  41c36d:	and    DWORD PTR [eax],0x260b89ab
  41c373:	xor    esi,DWORD PTR [ebx]
  41c375:	inc    eax
  41c376:	sbb    DWORD PTR [edx-0x1c3b6e28],ebp
  41c37c:	aaa    
  41c37d:	push   0xffffff9d
  41c37f:	popf   
  41c380:	add    dh,BYTE PTR [ebp+0x6d7366c1]
  41c386:	xor    esp,DWORD PTR [eax-0x59]
  41c389:	xchg   esi,eax
  41c38a:	jns    0x41c383
  41c38c:	js     0x41c3a7
  41c38e:	mov    bh,0x65
  41c390:	dec    BYTE PTR [edx+0x378c650a]
  41c396:	pop    esp
  41c397:	stc    
  41c398:	pmaddwd mm3,mm0
  41c39b:	scas   eax,DWORD PTR es:[edi]
  41c39c:	dec    edi
  41c39d:	sbb    BYTE PTR [esi+0x3f],cl
  41c3a0:	daa    
  41c3a1:	fadd   QWORD PTR [edx+esi*1]
  41c3a4:	xchg   esi,eax
  41c3a5:	dec    esp
  41c3a6:	cmp    DWORD PTR [ebp-0x75],0xffffffc4
  41c3aa:	(bad)  
  41c3ab:	out    dx,eax
  41c3ac:	or     esi,DWORD PTR [ecx]
  41c3ae:	dec    ebp
  41c3af:	and    al,0x7e
  41c3b1:	xor    al,ch
  41c3b3:	fs or  ch,dh
  41c3b6:	adc    eax,0xbc0a8a23
  41c3bb:	imul   eax,ebp,0xc1d6804
  41c3c1:	neg    al
  41c3c3:	push   esp
  41c3c4:	adc    DWORD PTR [ebx],edi
  41c3c6:	pop    ebp
  41c3c7:	cli    
  41c3c8:	adc    eax,0x9d492337
  41c3cd:	mov    dh,0xe4
  41c3cf:	or     al,0x21
  41c3d1:	pop    ebp
  41c3d2:	jbe    0x41c3c0
  41c3d4:	div    BYTE PTR [esi-0x35]
  41c3d7:	lods   eax,DWORD PTR ds:[esi]
  41c3d8:	add    al,0xad
  41c3da:	clc    
  41c3db:	clc    
  41c3dc:	adc    al,0xf0
  41c3de:	(bad)  
  41c3df:	in     eax,0xa1
  41c3e1:	lock lock pop ebx
  41c3e4:	int3   
  41c3e5:	jne    0x41c382
  41c3e7:	arpl   WORD PTR [eax-0x30],si
  41c3ea:	(bad)  
  41c3eb:	sub    dh,BYTE PTR [eax+0x3c]
  41c3ee:	add    al,0xbd
  41c3f0:	mov    dl,0xef
  41c3f2:	stos   BYTE PTR es:[edi],al
  41c3f3:	dec    dx
  41c3f5:	push   eax
  41c3f6:	popa   
  41c3f7:	pop    eax
  41c3f8:	add    eax,eax
  41c3fa:	push   ecx
  41c3fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3fc:	xor    BYTE PTR [eax-0x4c],al
  41c3ff:	fld    st(3)
  41c401:	inc    DWORD PTR [ebx-0x52fe15c6]
  41c407:	rcl    dh,cl
  41c409:	dec    ecx
  41c40a:	repz mov edx,0xc19b61e8
  41c410:	pop    ss
  41c411:	sub    al,0xc3
  41c413:	in     al,0xcf
  41c415:	test   edx,edx
  41c417:	js     0x41c3e7
  41c419:	push   esp
  41c41a:	fwait
  41c41b:	call   0xd213c51b
  41c420:	mov    WORD PTR [edx],ss
  41c422:	test   BYTE PTR [eax+0x5c],al
  41c425:	add    edx,DWORD PTR [edi+0x645f8cf9]
  41c42b:	or     al,0x47
  41c42d:	push   ss
  41c42e:	xchg   edx,eax
  41c42f:	stos   DWORD PTR es:[edi],eax
  41c430:	sub    bl,al
  41c432:	sub    dh,dl
  41c434:	or     bh,bh
  41c436:	xchg   edi,eax
  41c437:	jns    0x41c4b5
  41c439:	pushw  ss
  41c43b:	push   edi
  41c43c:	shl    ebx,0x56
  41c43f:	(bad)  
  41c440:	fild   WORD PTR ds:0x7967f8aa
  41c446:	and    ebp,DWORD PTR ds:0xc211562e
  41c44c:	inc    ebx
  41c44d:	call   0x44427c56
  41c452:	sti    
  41c453:	add    ah,BYTE PTR [ecx+0x6ed4c6ff]
  41c459:	or     edi,edx
  41c45b:	xor    al,0xe0
  41c45d:	inc    ecx
  41c45e:	mov    dh,0xb1
  41c460:	iret   
  41c461:	inc    bp
  41c463:	mov    cl,0x59
  41c465:	dec    edi
  41c466:	cwde   
  41c467:	es push es
  41c469:	push   eax
  41c46a:	jae    0x41c4a4
  41c46c:	sbb    DWORD PTR [edx],ecx
  41c46e:	mov    edx,0x8226ec97
  41c473:	pop    edx
  41c474:	sbb    BYTE PTR [ebx],ch
  41c476:	dec    eax
  41c477:	je     0x41c492
  41c479:	jb     0x41c421
  41c47b:	adc    BYTE PTR [ecx+0x6c],dl
  41c47e:	stos   BYTE PTR es:[edi],al
  41c47f:	mov    ebx,0x2451a052
  41c484:	je     0x41c4d1
  41c486:	je     0x41c500
  41c488:	adc    BYTE PTR ds:0x45314001,bh
  41c48e:	mov    edx,0xf7a426c
  41c493:	fidivr DWORD PTR ds:0xcd0b0a
  41c499:	inc    esi
  41c49a:	imul   BYTE PTR [edi+0x51]
  41c49d:	enter  0x850d,0x16
  41c4a1:	addr16 sub al,0xfc
  41c4a4:	pop    ss
  41c4a5:	sub    BYTE PTR [eax+ecx*1],ah
  41c4a8:	lods   eax,DWORD PTR ds:[esi]
  41c4a9:	sbb    al,0xa6
  41c4ab:	mov    edx,0xf29e67ab
  41c4b0:	xor    ch,al
  41c4b2:	xor    dl,BYTE PTR [si]
  41c4b5:	sbb    al,0x8f
  41c4b7:	repnz es and eax,0x21935621
  41c4be:	jmp    0xd4a2861f
  41c4c3:	sub    BYTE PTR [ebx],dh
  41c4c5:	xchg   edx,eax
  41c4c6:	push   ss
  41c4c7:	fcmovb st,st(5)
  41c4c9:	pop    es
  41c4ca:	adc    bl,BYTE PTR [ebx+ebx*8-0x7166c155]
  41c4d1:	mov    eax,0x2142ae33
  41c4d6:	iret   
  41c4d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4d8:	dec    esp
  41c4d9:	dec    esp
  41c4da:	push   cs
  41c4db:	enter  0x9477,0x62
  41c4df:	loope  0x41c55b
  41c4e1:	mov    ch,0x55
  41c4e3:	(bad)  
  41c4e5:	(bad)  
  41c4e6:	icebp  
  41c4e7:	mov    esi,0xa777f9bf
  41c4ec:	sar    BYTE PTR [eax+0x2b303d0f],0xa6
  41c4f3:	ds adc eax,0xe7e305b3
  41c4f9:	pusha  
  41c4fa:	fs popf 
  41c4fc:	mov    ebx,0x20b5eb50
  41c501:	cwde   
  41c502:	icebp  
  41c503:	or     ecx,DWORD PTR [edx-0xbdf5723]
  41c509:	jl     0x41c55a
  41c50b:	in     eax,0xa1
  41c50d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c50e:	xchg   edi,eax
  41c50f:	and    BYTE PTR es:[edx],dh
  41c512:	xchg   BYTE PTR [edi-0x2d],bh
  41c515:	outs   dx,BYTE PTR ds:[esi]
  41c516:	push   es
  41c517:	aam    0xe2
  41c519:	pop    eax
  41c51a:	enter  0x8852,0xc9
  41c51e:	aaa    
  41c51f:	push   ecx
  41c520:	ja     0x41c55f
  41c522:	inc    esi
  41c523:	int    0x52
  41c525:	xchg   dl,cl
  41c527:	mov    dh,0xff
  41c529:	push   edx
  41c52a:	jnp    0x41c500
  41c52c:	inc    edx
  41c52d:	(bad)  
  41c52e:	lods   eax,DWORD PTR ds:[esi]
  41c52f:	and    BYTE PTR [eax+0x535df6d2],ch
  41c535:	sub    DWORD PTR [edi],esi
  41c537:	jns    0x41c538
  41c539:	loop   0x41c4ce
  41c53b:	pop    ss
  41c53c:	push   cs
  41c53d:	xchg   esp,eax
  41c53e:	adc    esi,DWORD PTR [ebx]
  41c540:	ficomp DWORD PTR [ebx+0x30]
  41c543:	in     al,0xd1
  41c545:	ret    
  41c546:	test   BYTE PTR [esi+0x22],0xc0
  41c54a:	test   BYTE PTR [ebx],0xf9
  41c54d:	outs   dx,BYTE PTR ds:[esi]
  41c54e:	jb     0x41c5a8
  41c550:	xor    dh,cl
  41c552:	cli    
  41c553:	jnp    0x41c57f
  41c555:	ds pop ds
  41c557:	cld    
  41c558:	add    ebx,DWORD PTR [esi+0x4c864fc2]
  41c55e:	mov    DWORD PTR [esi],ebx
  41c560:	rcr    ah,cl
  41c562:	adc    ebp,edx
  41c564:	dec    edx
  41c565:	and    eax,0xbe6c086d
  41c56a:	pop    eax
  41c56b:	sbb    esp,DWORD PTR [eax+0x54]
  41c56e:	pop    ds
  41c56f:	pop    ss
  41c570:	call   0x568a0eca
  41c575:	inc    esp
  41c576:	push   ebx
  41c577:	cmp    edi,DWORD PTR [eax+ecx*8-0x2eba6dc5]
  41c57e:	aaa    
  41c57f:	stc    
  41c580:	mov    cl,0xd2
  41c582:	mov    ds:0xc917b3cd,al
  41c587:	add    eax,0x2b8e897a
  41c58c:	imul   eax,esi,0x94009bdf
  41c592:	lods   al,BYTE PTR ds:[esi]
  41c593:	sbb    ecx,DWORD PTR [esp+ebx*4-0x6ff2785c]
  41c59a:	cmc    
  41c59b:	cmp    al,BYTE PTR ss:[edx]
  41c59e:	dec    ecx
  41c59f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5a0:	xor    ah,ah
  41c5a2:	mov    edi,0xf733b7fd
  41c5a7:	xchg   ebx,eax
  41c5a8:	jae    0x41c5c9
  41c5aa:	test   eax,0x826cc7b8
  41c5af:	div    DWORD PTR cs:[ebx-0x24]
  41c5b3:	(bad)  
  41c5b4:	xchg   esi,eax
  41c5b5:	pop    ds
  41c5b6:	adc    bh,BYTE PTR [ebp+edi*1+0x28c834ec]
  41c5bd:	xor    esi,edi
  41c5bf:	cld    
  41c5c0:	shl    esp,cl
  41c5c2:	retf   
  41c5c3:	inc    ecx
  41c5c4:	jg     0x41c626
  41c5c6:	cs or  dl,al
  41c5c9:	or     dh,BYTE PTR [edi+0x717837c5]
  41c5cf:	call   0xe597ca5a
  41c5d4:	mov    dl,0x94
  41c5d6:	stos   BYTE PTR es:[edi],al
  41c5d7:	pop    esi
  41c5d8:	jp     0x41c632
  41c5da:	out    dx,eax
  41c5db:	test   BYTE PTR [esp+edi*8],dl
  41c5de:	sbb    ebp,eax
  41c5e0:	stc    
  41c5e1:	mov    ebp,edx
  41c5e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5e4:	xchg   edi,eax
  41c5e5:	jmp    0xaf87:0xdedd591d
  41c5ec:	not    BYTE PTR [ebx+0x51]
  41c5ef:	pop    esi
  41c5f0:	xor    al,0x3e
  41c5f2:	aas    
  41c5f3:	push   esp
  41c5f4:	mov    ebp,0x7ac4139e
  41c5f9:	lods   eax,DWORD PTR ds:[esi]
  41c5fa:	bound  eax,QWORD PTR [edi+ecx*1]
  41c5fd:	jmp    DWORD PTR [eax+esi*1-0x4]
  41c601:	add    BYTE PTR [ebp+esi*8-0x5b],0x81
  41c606:	mov    esp,0x97e302f2
  41c60b:	pop    ecx
  41c60c:	push   esp
  41c60d:	cli    
  41c60e:	lock inc eax
  41c610:	jmp    0x41c5b4
  41c612:	mov    eax,ds:0x3a9db85b
  41c617:	test   BYTE PTR [edx],al
  41c619:	inc    ecx
  41c61a:	das    
  41c61b:	xchg   ebp,eax
  41c61c:	pusha  
  41c61d:	pop    esi
  41c61e:	inc    esp
  41c61f:	ja     0x41c672
  41c621:	leave  
  41c622:	loopne 0x41c5c9
  41c624:	push   esi
  41c625:	in     eax,dx
  41c626:	inc    esi
  41c627:	mov    ds:0x553220ce,eax
  41c62c:	aad    0x10
  41c62e:	pop    esp
  41c62f:	into   
  41c630:	or     eax,DWORD PTR [ecx-0x578d13d9]
  41c636:	sub    DWORD PTR [edx-0x76],esi
  41c639:	and    al,0x21
  41c63b:	mov    BYTE PTR [ecx-0x432da597],bh
  41c641:	sti    
  41c642:	adc    eax,0xe1183eb
  41c647:	pop    ebx
  41c648:	sbb    eax,0xf800baa8
  41c64d:	popa   
  41c64e:	add    ecx,DWORD PTR [ecx+0x7c999398]
  41c654:	fidivr WORD PTR [ebx]
  41c656:	loope  0x41c5f8
  41c658:	jo     0x41c6c1
  41c65a:	xchg   BYTE PTR [eax],bl
  41c65c:	jae    0x41c626
  41c65e:	sub    DWORD PTR [edx-0x2b7d8080],0xce73d36a
  41c668:	jg     0x41c60e
  41c66a:	inc    edx
  41c66b:	pop    ebp
  41c66c:	or     BYTE PTR [edi+ecx*8],dh
  41c66f:	rep outs dx,DWORD PTR ds:[esi]
  41c671:	outs   dx,DWORD PTR ds:[esi]
  41c672:	jge    0x41c694
  41c674:	add    al,0x7c
  41c676:	xor    BYTE PTR [edi],ah
  41c678:	mov    ch,0xea
  41c67a:	push   cs
  41c67b:	jne    0x41c633
  41c67d:	cmp    al,0x81
  41c67f:	test   DWORD PTR [esi+0x2c],0x6a56bcd4
  41c686:	dec    eax
  41c687:	push   edx
  41c688:	mov    al,ds:0xdbf5be5
  41c68d:	inc    esp
  41c68e:	fdiv   QWORD PTR [edi+ecx*8+0xf]
  41c692:	ficom  WORD PTR [esi+0x4451fd63]
  41c698:	jne    0x41c68e
  41c69a:	jmp    0xb0d3b314
  41c69f:	dec    ecx
  41c6a0:	in     al,dx
  41c6a1:	ds jbe 0x41c68d
  41c6a4:	dec    esp
  41c6a5:	int3   
  41c6a6:	lahf   
  41c6a7:	pop    ebp
  41c6a8:	(bad)  
  41c6a9:	int    0xbd
  41c6ab:	lds    ebp,FWORD PTR [edx]
  41c6ad:	ja     0x41c69e
  41c6af:	jno    0x41c72e
  41c6b1:	ret    
  41c6b2:	pop    ebx
  41c6b3:	fstp   st(7)
  41c6b5:	cdq    
  41c6b6:	xor    BYTE PTR [edi-0x6e],dl
  41c6b9:	call   0xe598:0x30a7d7b6
  41c6c0:	fnstenv [eax+ecx*2-0x4f]
  41c6c4:	dec    esi
  41c6c5:	mov    dh,0xf2
  41c6c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6c8:	pushf  
  41c6c9:	push   esp
  41c6ca:	ficom  DWORD PTR ds:0xf82ca603
  41c6d0:	in     eax,0x4d
  41c6d2:	test   eax,0xc8000cd8
  41c6d7:	out    dx,eax
  41c6d8:	mov    ch,0x33
  41c6da:	addr16 and cl,bh
  41c6dd:	mov    ch,0x69
  41c6df:	daa    
  41c6e0:	pop    esi
  41c6e1:	fstp   DWORD PTR [ebx+0x3]
  41c6e4:	inc    ebp
  41c6e5:	jns    0x41c74f
  41c6e7:	(bad)  
  41c6e8:	pop    ss
  41c6e9:	jmp    0x41c682
  41c6eb:	add    BYTE PTR [edx+0x5af7bd1f],0x13
  41c6f2:	jecxz  0x41c69f
  41c6f4:	mov    ah,0x8e
  41c6f6:	mov    al,ds:0x1eb4b122
  41c6fb:	iret   
  41c6fc:	scas   eax,DWORD PTR es:[edi]
  41c6fd:	rcr    DWORD PTR [edx],0xb2
  41c700:	mov    dl,0x70
  41c702:	cmp    BYTE PTR [ebx-0x25],ch
  41c705:	cmp    al,0xc2
  41c707:	inc    ecx
  41c708:	pushf  
  41c709:	push   ss
  41c70a:	repnz mov BYTE PTR [eax+0x1d],dl
  41c70e:	xchg   ebx,eax
  41c70f:	adc    BYTE PTR [edx-0x38],0xf6
  41c713:	retf   0xc27b
  41c716:	retf   0xe9f
  41c719:	inc    eax
  41c71a:	or     al,0x0
  41c71c:	sub    ch,BYTE PTR [ecx]
  41c71e:	push   ebp
  41c71f:	adc    eax,DWORD PTR [edx]
  41c721:	rol    BYTE PTR [ebp-0x1f53babc],0x55
  41c728:	cmp    al,0xb1
  41c72a:	xchg   ecx,eax
  41c72b:	aas    
  41c72c:	mov    ds:0xf36544d9,eax
  41c731:	int    0x14
  41c733:	jnp    0x41c6f2
  41c735:	xor    dh,dh
  41c737:	int    0x88
  41c739:	xor    DWORD PTR [esi+0x668032c5],ebx
  41c73f:	mov    ah,0x2b
  41c741:	ja     0x41c78d
  41c743:	push   0x1a0e0247
  41c748:	xchg   ebp,eax
  41c749:	jmp    0x41c73d
  41c74b:	cmp    eax,0x4222f2b3
  41c750:	fbld   TBYTE PTR [bx+si]
  41c753:	in     al,dx
  41c754:	mov    al,0x45
  41c756:	pop    ds
  41c757:	dec    edx
  41c758:	ss and edx,0x69
  41c75c:	xor    DWORD PTR [eax-0xf],ebx
  41c75f:	mov    ebx,0x60a56735
  41c764:	fmul   QWORD PTR [ebx+0x58]
  41c767:	lahf   
  41c768:	fstp   TBYTE PTR [eax-0x41a60e5c]
  41c76e:	lahf   
  41c76f:	jo     0x41c78d
  41c771:	les    ebx,FWORD PTR [ebx-0x19dff14a]
  41c777:	sbb    bh,dl
  41c779:	test   al,0xb3
  41c77b:	xchg   esp,eax
  41c77c:	mov    cl,0xb1
  41c77e:	les    ecx,FWORD PTR [eax-0x6a]
  41c781:	outs   dx,BYTE PTR ds:[esi]
  41c782:	xchg   ebp,eax
  41c783:	mov    esi,0x187b73ae
  41c788:	sub    eax,0xd93fca0e
  41c78d:	int    0x3d
  41c78f:	or     dl,ch
  41c791:	fwait
  41c792:	dec    ecx
  41c793:	js     0x41c7bd
  41c795:	fstp   QWORD PTR [edi]
  41c797:	dec    ebp
  41c798:	js     0x41c7eb
  41c79a:	cmp    eax,0x21210e37
  41c79f:	push   es
  41c7a0:	vunpcklps xmm3,xmm5,XMMWORD PTR [ebp+0x1e]
  41c7a5:	push   edi
  41c7a6:	mov    esi,0x8235dddd
  41c7ab:	ja     0x41c7d5
  41c7ad:	(bad)  
  41c7ae:	jno    0x41c732
  41c7b0:	sbb    eax,0x9c5841c2
  41c7b5:	lods   al,BYTE PTR ds:[esi]
  41c7b6:	inc    ebx
  41c7b7:	pop    eax
  41c7b8:	jne    0x41c764
  41c7ba:	das    
  41c7bb:	retf   
  41c7bc:	adc    eax,0x1f99490b
  41c7c1:	test   DWORD PTR [ebx-0x92e810c],esi
  41c7c7:	pop    ds
  41c7c8:	out    0x1,al
  41c7ca:	inc    ebx
  41c7cb:	lock dec BYTE PTR [esi]
  41c7ce:	test   al,0x5c
  41c7d0:	inc    eax
  41c7d1:	pop    ecx
  41c7d2:	test   eax,0xc58c6838
  41c7d7:	pop    edi
  41c7d8:	xor    DWORD PTR [ebp+ebp*2+0x57],esp
  41c7dc:	mov    ds:0xb225c9c0,al
  41c7e1:	repz leave 
  41c7e3:	sbb    cl,BYTE PTR ds:0x2f7c2965
  41c7e9:	arpl   WORD PTR [edx-0x4],di
  41c7ec:	adc    al,0xf
  41c7ee:	jge    0x41c81a
  41c7f0:	jb     0x41c81f
  41c7f2:	ror    BYTE PTR [ebp+0x1c],cl
  41c7f5:	pop    esi
  41c7f6:	cmp    eax,0x440a8843
  41c7fb:	mov    ebx,0xd263e3c0
  41c800:	inc    esi
  41c801:	test   DWORD PTR [edi+0x4751feb],esi
  41c807:	mov    dl,0xe
  41c809:	sub    eax,0x22f65cb9
  41c80e:	int3   
  41c80f:	call   0xb0fc9edf
  41c814:	(bad)  
  41c815:	arpl   WORD PTR [ecx],bp
  41c817:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c818:	fadd   QWORD PTR [esi+0x32a582d3]
  41c81e:	xchg   DWORD PTR [esi-0x5b],esp
  41c821:	dec    ebx
  41c822:	xor    al,0x47
  41c824:	push   esp
  41c825:	push   ebx
  41c826:	ds or  al,0xcb
  41c829:	mov    ds:0xb0bf693e,eax
  41c82e:	icebp  
  41c82f:	in     al,0x37
  41c831:	call   0xbab8:0xe032224e
  41c838:	mov    ds:0xa9a5e08c,eax
  41c83d:	dec    esi
  41c83e:	iret   
  41c83f:	pop    ebx
  41c840:	pop    ecx
  41c841:	inc    edi
  41c842:	je     0x41c8b4
  41c844:	(bad)  
  41c846:	fst    DWORD PTR [esi]
  41c848:	bound  edx,QWORD PTR ds:0xd6f6dc42
  41c84e:	xchg   esp,eax
  41c84f:	dec    ecx
  41c850:	xor    edx,ecx
  41c852:	aaa    
  41c853:	mov    esi,0x86507770
  41c858:	pop    edx
  41c859:	imul   eax,DWORD PTR [esi],0x8c6eac9a
  41c85f:	jne    0x41c89f
  41c861:	mov    bl,0x46
  41c863:	test   DWORD PTR fs:[edx-0x30e548a7],eax
  41c86a:	or     eax,0xbcacd0c0
  41c86f:	ret    
  41c870:	or     edi,DWORD PTR [esi+0x6a]
  41c873:	fistp  DWORD PTR [edx-0x4461026c]
  41c879:	jle    0x41c81a
  41c87b:	jo     0x41c8b0
  41c87d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c87e:	ins    DWORD PTR es:[edi],dx
  41c87f:	cs icebp 
  41c881:	ret    0x83af
  41c884:	xor    eax,0xe8f406f7
  41c889:	sub    eax,0x6f35063c
  41c88e:	push   edi
  41c88f:	cmp    al,0x53
  41c891:	mov    esp,0xb55e3794
  41c896:	add    eax,0x1f5b6d3a
  41c89b:	add    DWORD PTR [edx-0x5ed03883],esi
  41c8a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8a2:	sub    BYTE PTR ds:[ebp-0x7c],dh
  41c8a6:	mov    edx,DWORD PTR [ecx-0x7f]
  41c8a9:	dec    edx
  41c8aa:	arpl   WORD PTR [esi],si
  41c8ac:	shl    BYTE PTR [eax+0x33f32d65],1
  41c8b2:	pop    es
  41c8b3:	dec    eax
  41c8b4:	ins    BYTE PTR es:[edi],dx
  41c8b5:	cmp    ebp,edx
  41c8b7:	aas    
  41c8b8:	sahf   
  41c8b9:	rol    BYTE PTR [ecx],1
  41c8bb:	pop    ecx
  41c8bc:	mov    DWORD PTR [edx-0x62],edi
  41c8bf:	(bad)
  41c8c2:	dec    edi
  41c8c3:	cmp    al,0x8e
  41c8c5:	(bad)  
  41c8c6:	lock stos BYTE PTR es:[edi],al
  41c8c8:	iret   
  41c8c9:	push   es
  41c8ca:	push   ebp
  41c8cb:	sub    ebx,DWORD PTR [eax]
  41c8cd:	in     eax,dx
  41c8ce:	hlt    
  41c8cf:	mov    bl,0xdc
  41c8d1:	(bad)  
  41c8d2:	and    eax,0x6aaf5674
  41c8d7:	cmp    ecx,DWORD PTR [edi+0x5999a3f3]
  41c8dd:	lock sub BYTE PTR [edx+edi*1],0x59
  41c8e2:	and    DWORD PTR [ecx+0x237e2e54],esp
  41c8e8:	lahf   
  41c8e9:	mov    dh,0xa3
  41c8eb:	sub    ch,BYTE PTR [eax]
  41c8ed:	aam    0xe3
  41c8ef:	jne    0x41c958
  41c8f1:	fbstp  TBYTE PTR [edx-0x69]
  41c8f4:	sahf   
  41c8f5:	test   al,0xd7
  41c8f7:	clc    
  41c8f8:	sahf   
  41c8f9:	(bad)  
  41c8fa:	rcl    DWORD PTR [edi],cl
  41c8fc:	loop   0x41c96e
  41c8fe:	test   DWORD PTR [ecx-0x7b],esi
  41c901:	jnp    0x41c8d7
  41c903:	das    
  41c904:	out    0x64,al
  41c906:	jbe    0x41c8f1
  41c908:	cmp    eax,0xf14a61d6
  41c90d:	test   eax,0x7411f505
  41c912:	fwait
  41c913:	sub    ch,BYTE PTR [ecx+0x6c621bd6]
  41c919:	mov    esp,eax
  41c91b:	adc    al,bh
  41c91d:	jns    0x41c98c
  41c91f:	push   es
  41c920:	mov    BYTE PTR [edx+0x1ba2e4ab],bl
  41c926:	push   esp
  41c927:	and    dh,bh
  41c929:	fsubr  QWORD PTR es:[ebx+eiz*8-0x17b403ee]
  41c931:	xchg   ecx,eax
  41c932:	mov    eax,ds:0x1f481641
  41c937:	stos   DWORD PTR es:[edi],eax
  41c938:	mov    edx,0x7bd3088b
  41c93d:	fld    st(6)
  41c93f:	push   esp
  41c940:	lds    ebx,FWORD PTR [ebx+edx*1]
  41c943:	inc    edx
  41c944:	push   esp
  41c945:	pop    ebp
  41c946:	sbb    DWORD PTR [esi+0x20],esp
  41c949:	mov    ah,0x9b
  41c94b:	pop    ebp
  41c94c:	and    al,0x25
  41c94e:	cmc    
  41c94f:	mov    eax,ecx
  41c951:	(bad)
  41c954:	hlt    
  41c955:	lods   al,BYTE PTR ds:[esi]
  41c956:	ja     0x41c8f1
  41c958:	es dec edx
  41c95a:	ds jb  0x41c9d1
  41c95d:	retf   
  41c95e:	adc    bh,BYTE PTR [eax+0x3a7022b]
  41c964:	pop    edi
  41c965:	gs sub eax,0x65464e2f
  41c96b:	jo     0x41c927
  41c96d:	rcr    BYTE PTR [edi+0x69],1
  41c970:	lds    ebx,FWORD PTR [ecx+0x35]
  41c973:	cwde   
  41c974:	inc    eax
  41c975:	jmp    DWORD PTR [edi-0x2f465816]
  41c97b:	mov    bh,0x94
  41c97d:	xchg   ebx,eax
  41c97e:	dec    ecx
  41c97f:	push   ecx
  41c980:	std    
  41c981:	sbb    al,0x3d
  41c983:	aas    
  41c984:	jns    0x41c972
  41c986:	(bad)  
  41c987:	ja     0x41c980
  41c989:	inc    esi
  41c98a:	loopne 0x41c9ca
  41c98c:	jecxz  0x41c9f6
  41c98e:	jge    0x41c9e9
  41c990:	imul   edi,DWORD PTR [ebx+0x56017c1c],0xdb796a58
  41c99a:	add    BYTE PTR [edi+0x7b],bh
  41c99d:	aad    0x5d
  41c99f:	xor    cl,BYTE PTR [eax+eax*2]
  41c9a2:	outs   dx,BYTE PTR ds:[esi]
  41c9a3:	xor    esi,ecx
  41c9a5:	inc    ebp
  41c9a6:	fcom   st(4)
  41c9a8:	and    eax,0xc0b0bd51
  41c9ad:	mov    cl,0x3f
  41c9af:	and    edx,DWORD PTR [ecx]
  41c9b1:	imul   edi,eax,0xd8b8adf0
  41c9b7:	xchg   edi,eax
  41c9b8:	cld    
  41c9b9:	repnz adc bh,BYTE PTR [ebx-0x573e594c]
  41c9c0:	fist   DWORD PTR cs:[ecx+0x1a]
  41c9c4:	test   eax,0x35dc8145
  41c9c9:	jp     0x41ca30
  41c9cb:	push   eax
  41c9cc:	jae    0x41c9ce
  41c9ce:	push   eax
  41c9cf:	push   ecx
  41c9d0:	fwait
  41c9d1:	and    ebx,DWORD PTR [edi+edx*4+0x71ba4910]
  41c9d8:	mov    al,0x84
  41c9da:	cmp    edi,ecx
  41c9dc:	xchg   BYTE PTR [eax+edi*4+0x1c],bh
  41c9e0:	xchg   esp,eax
  41c9e1:	and    eax,0xb3aedfc2
  41c9e6:	icebp  
  41c9e7:	ds mov esp,0x3cbd3540
  41c9ed:	popf   
  41c9ee:	xchg   ecx,eax
  41c9ef:	aad    0x40
  41c9f1:	add    esp,DWORD PTR [esi+0x35]
  41c9f4:	in     eax,0x9c
  41c9f6:	cdq    
  41c9f7:	mov    esp,0x478adc57
  41c9fc:	jb     0x41c996
  41c9fe:	call   0xe757:0x14719c00
  41ca05:	ret    
  41ca06:	jne    0x41c9e1
  41ca08:	or     bh,BYTE PTR ds:0x640f6ff
  41ca0e:	jae    0x41ca5c
  41ca10:	aaa    
  41ca11:	ins    BYTE PTR es:[edi],dx
  41ca12:	fbld   TBYTE PTR [edx+0x413dfd3]
  41ca18:	or     DWORD PTR [edx+0x2bb306e8],eax
  41ca1e:	sub    BYTE PTR [edi+0x5a],al
  41ca21:	xchg   edi,eax
  41ca22:	mov    esp,0x12e8bd1b
  41ca27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca28:	fdivr  DWORD PTR [edx+0x7b]
  41ca2b:	nop
  41ca2c:	jge    0x41ca94
  41ca2e:	fcom   st(4)
  41ca30:	mov    WORD PTR [edx],es
  41ca32:	out    dx,eax
  41ca33:	cmp    ebx,DWORD PTR [ebp-0x6a747504]
  41ca39:	stos   BYTE PTR es:[edi],al
  41ca3a:	pop    edi
  41ca3b:	inc    eax
  41ca3c:	mov    al,BYTE PTR [eax+esi*8-0x47]
  41ca40:	(bad)  
  41ca41:	cmc    
  41ca42:	aad    0x30
  41ca44:	aam    0xaa
  41ca46:	sbb    bh,BYTE PTR [ebp-0x8]
  41ca49:	push   cs
  41ca4a:	cmp    eax,0x3eec87fc
  41ca4f:	or     edx,ebx
  41ca51:	ins    BYTE PTR es:[edi],dx
  41ca52:	cli    
  41ca53:	sub    al,0xcc
  41ca55:	fnstsw WORD PTR [esi-0x45ead95a]
  41ca5b:	xor    BYTE PTR [ebx],bl
  41ca5d:	fld    QWORD PTR [ebx]
  41ca5f:	xor    eax,0xa5d5bce1
  41ca64:	mov    ah,0x56
  41ca66:	imul   ah
  41ca68:	inc    ebp
  41ca69:	and    eax,0x152431e4
  41ca6e:	lods   al,BYTE PTR ds:[esi]
  41ca6f:	or     ch,ch
  41ca71:	push   ds
  41ca72:	cmp    ecx,DWORD PTR [eax-0x29]
  41ca75:	pop    esi
  41ca76:	fucom  st(4)
  41ca78:	imul   eax,edx,0xf4b9c1e9
  41ca7e:	mov    ss,esi
  41ca80:	sub    al,0x99
  41ca82:	mov    esp,0x3487ce97
  41ca87:	ja     0x41cad5
  41ca89:	and    bl,cl
  41ca8b:	ja     0x41ca2f
  41ca8d:	dec    ebp
  41ca8e:	rcr    DWORD PTR [esi+0x28],0xa7
  41ca92:	(bad)  
  41ca93:	in     eax,dx
  41ca94:	and    esi,DWORD PTR [edi+0x16]
  41ca97:	imul   edi,DWORD PTR [ebp+0x645db198],0xffffff86
  41ca9e:	ss pop ebp
  41caa0:	cli    
  41caa1:	aaa    
  41caa2:	dec    esi
  41caa3:	adc    eax,0x39362f27
  41caa8:	push   eax
  41caa9:	cmc    
  41caaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41caab:	popa   
  41caac:	aad    0xdb
  41caae:	jp     0x41cafc
  41cab0:	pop    edx
  41cab1:	mov    edx,0x4fd2d327
  41cab6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cab7:	stc    
  41cab8:	push   eax
  41cab9:	rcl    DWORD PTR ds:0x70813634,cl
  41cabf:	cmp    DWORD PTR [edx],ecx
  41cac1:	pop    edx
  41cac2:	je     0x41ca64
  41cac4:	xor    al,0xcb
  41cac6:	adc    eax,0x71c76d22
  41cacb:	inc    ebx
  41cacc:	ror    al,cl
  41cace:	fwait
  41cacf:	pop    DWORD PTR [esi+0x428c0ed3]
  41cad5:	add    edi,0x7a
  41cad8:	jns    0x41cb18
  41cada:	xlat   BYTE PTR ds:[ebx]
  41cadb:	sbb    ch,BYTE PTR [edx+0x44]
  41cade:	rol    BYTE PTR [edi+0x3b6b88e1],1
  41cae4:	data16 xor ch,dl
  41cae7:	pusha  
  41cae8:	pop    ebp
  41cae9:	sbb    eax,0x81fb3096
  41caee:	leave  
  41caef:	pop    es
  41caf0:	sub    eax,0x2d92a485
  41caf5:	pusha  
  41caf6:	fs mov cl,0xc4
  41caf9:	mov    al,ds:0x527371dd
  41cafe:	mov    bl,0x3f
  41cb00:	sub    eax,0x45ddbfd3
  41cb05:	jno    0x41cb14
  41cb07:	pushf  
  41cb08:	mov    bl,BYTE PTR [edx]
  41cb0a:	fucomp st(4)
  41cb0c:	pop    ebx
  41cb0e:	pop    esi
  41cb0f:	adc    eax,0x38e4bb2c
  41cb14:	jae    0x41cac3
  41cb16:	popa   
  41cb17:	out    dx,al
  41cb18:	leave  
  41cb19:	pop    ebp
  41cb1a:	dec    esp
  41cb1b:	jecxz  0x41cb5a
  41cb1d:	xor    eax,0x5a069358
  41cb22:	fisubr WORD PTR [esi-0x5f]
  41cb25:	mov    ah,0x3e
  41cb27:	mul    BYTE PTR [esi+0x7b]
  41cb2a:	(bad)  
  41cb2b:	ror    BYTE PTR fs:[edi+0x6a],0xc0
  41cb30:	jnp    0x41cb78
  41cb32:	mov    al,ds:0xa6f5e130
  41cb37:	dec    edx
  41cb38:	adc    eax,esi
  41cb3a:	push   0x51
  41cb3c:	jbe    0x41cae3
  41cb3e:	mov    dh,BYTE PTR [esi+0x6641768e]
  41cb44:	sub    al,0x7c
  41cb46:	pop    es
  41cb47:	iret   
  41cb48:	add    BYTE PTR [eax-0x23],0xd3
  41cb4c:	adc    cl,BYTE PTR [ebp-0x3e8ff0c1]
  41cb52:	jmp    0x41caeb
  41cb54:	cld    
  41cb55:	cmp    ebp,DWORD PTR [eax-0x13ccbff4]
  41cb5b:	xchg   ebp,eax
  41cb5c:	std    
  41cb5d:	cmc    
  41cb5e:	sub    DWORD PTR [edi-0x18],ebp
  41cb61:	les    esi,FWORD PTR ds:0xed42454b
  41cb67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb68:	(bad)  
  41cb69:	dec    edx
  41cb6a:	pop    edi
  41cb6b:	jp     0x41cb51
  41cb6d:	ret    
  41cb6e:	xchg   edx,eax
  41cb6f:	dec    edi
  41cb70:	inc    ebx
  41cb71:	sbb    al,0x1e
  41cb73:	in     al,0x31
  41cb75:	arpl   WORD PTR [edi+0x28bca72e],ax
  41cb7b:	ss pop edi
  41cb7d:	inc    ebx
  41cb7e:	sar    esi,cl
  41cb80:	add    eax,0x9f8c4c15
  41cb85:	pop    ebx
  41cb86:	mov    edx,0x7b1a9ec3
  41cb8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb8c:	xlat   BYTE PTR ds:[ebx]
  41cb8d:	repnz int 0x46
  41cb90:	aam    0x26
  41cb92:	push   esi
  41cb93:	cld    
  41cb94:	xchg   ecx,eax
  41cb95:	ins    BYTE PTR es:[edi],dx
  41cb96:	loop   0x41cbaa
  41cb98:	add    DWORD PTR [ebp+0x77],0x821d0c32
  41cb9f:	dec    ebp
  41cba0:	sahf   
  41cba1:	popf   
  41cba2:	cmp    eax,0x74978bc2
  41cba7:	push   eax
  41cba8:	pop    edi
  41cba9:	jl     0x41cc07
  41cbab:	sbb    DWORD PTR [edi+edi*2+0x4ab28e9d],esp
  41cbb2:	sub    DWORD PTR [eax+0x669820c1],0x32427c7e
  41cbbc:	dec    ebp
  41cbbd:	cwde   
  41cbbe:	push   ds
  41cbbf:	loope  0x41cbc6
  41cbc1:	clc    
  41cbc2:	je     0x41cbdd
  41cbc4:	and    edi,DWORD PTR [ebx]
  41cbc6:	fmul   QWORD PTR [ebx+ebx*4+0x56561876]
  41cbcd:	sub    ecx,ecx
  41cbcf:	sbb    al,0xa
  41cbd1:	(bad)  
  41cbd2:	fst    QWORD PTR [esp-0x37]
  41cbd6:	out    dx,eax
  41cbd7:	add    dl,BYTE PTR [edi]
  41cbd9:	in     eax,0x0
  41cbdb:	add    eax,DWORD PTR [esi+0x7a9d083d]
  41cbe1:	sub    BYTE PTR [eax],bh
  41cbe3:	lahf   
  41cbe4:	dec    BYTE PTR [ebx+0x27]
  41cbe7:	test   DWORD PTR [edx-0x4dba39db],edx
  41cbed:	repnz in eax,0xb8
  41cbf0:	fstp   TBYTE PTR [ecx+0x54b0ae71]
  41cbf6:	cmc    
  41cbf7:	dec    edi
  41cbf8:	scas   al,BYTE PTR es:[edi]
  41cbf9:	(bad)  
  41cbfa:	shl    ecx,cl
  41cbfc:	and    al,0x8f
  41cbfe:	in     al,0xc
  41cc00:	push   0xfffffffe
  41cc02:	add    eax,0xb03e7242
  41cc07:	bound  edi,QWORD PTR [ebp+0x4c]
  41cc0a:	mov    DWORD PTR es:[edi-0x55],edx
  41cc0e:	add    eax,0xba51491
  41cc13:	hlt    
  41cc14:	jl     0x41cc02
  41cc16:	xor    al,0x6c
  41cc18:	pop    ecx
  41cc19:	or     eax,0x6ff18c57
  41cc1e:	addr16 and eax,0x841094a9
  41cc24:	dec    ebx
  41cc25:	popf   
  41cc26:	jnp    0x41cbd4
  41cc28:	jmp    0x41cbee
  41cc2a:	jmp    0x41cc22
  41cc2c:	test   DWORD PTR [ebx],ebx
  41cc2e:	sbb    eax,0x1d83576
  41cc33:	out    dx,eax
  41cc34:	and    ah,BYTE PTR [ebp-0x2d]
  41cc37:	aad    0x6f
  41cc39:	jo     0x41cbf0
  41cc3b:	xor    al,0xbd
  41cc3d:	das    
  41cc3e:	stos   BYTE PTR es:[edi],al
  41cc3f:	je     0x41ccac
  41cc41:	jmp    0x3af3e3bb
  41cc46:	fxch   st(2)
  41cc48:	mov    esi,edx
  41cc4a:	inc    esp
  41cc4b:	or     dh,BYTE PTR ds:0x5439c5f5
  41cc51:	bswap  ecx
  41cc53:	pop    ecx
  41cc54:	inc    edi
  41cc55:	sub    esi,DWORD PTR [edi]
  41cc57:	xor    DWORD PTR [esi+0x6eef9a25],0xffffffde
  41cc5e:	std    
  41cc5f:	cmp    eax,0x5b5c8c75
  41cc64:	push   esp
  41cc65:	into   
  41cc66:	fcmove st,st(1)
  41cc68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc69:	pop    ecx
  41cc6a:	cmp    ah,bh
  41cc6c:	bound  eax,QWORD PTR [eax]
  41cc6e:	fsub   st(3),st
  41cc70:	stos   BYTE PTR es:[edi],al
  41cc71:	jge    0x41cce2
  41cc73:	pusha  
  41cc74:	sub    eax,ecx
  41cc76:	mov    al,ds:0x16736606
  41cc7b:	adc    al,0xeb
  41cc7d:	jmp    0x984f:0x429b9b30
  41cc84:	out    dx,al
  41cc85:	into   
  41cc86:	int3   
  41cc87:	and    BYTE PTR [ecx-0x5a8ae0df],al
  41cc8d:	jg     0x41cc3d
  41cc8f:	inc    esi
  41cc90:	mov    ebp,0xd2a07d5b
  41cc95:	mov    ch,0x76
  41cc97:	(bad)  
  41cc98:	ins    DWORD PTR es:[edi],dx
  41cc99:	adc    BYTE PTR [edx],dl
  41cc9b:	sbb    BYTE PTR [eax+0x7],dl
  41cc9e:	add    dl,dl
  41cca0:	dec    edx
  41cca1:	arpl   bp,dx
  41cca3:	pop    edx
  41cca4:	jnp    0x41cceb
  41cca6:	sbb    eax,0x13e85753
  41ccab:	test   BYTE PTR [edx-0x2249bbf8],cl
  41ccb1:	adc    DWORD PTR [eax],edx
  41ccb3:	mov    dh,0x7c
  41ccb5:	fistp  QWORD PTR [ecx+0x5d]
  41ccb8:	in     al,dx
  41ccb9:	ret    
  41ccba:	aaa    
  41ccbb:	sub    al,BYTE PTR [edi+ecx*1+0x9bff0fe]
  41ccc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ccc3:	cmp    BYTE PTR [esi-0x142a907a],cl
  41ccc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ccca:	xor    al,0xa
  41cccc:	lds    edi,FWORD PTR [edx]
  41ccce:	sar    BYTE PTR [esi+0x70],0x76
  41ccd2:	jl     0x41cd03
  41ccd4:	pop    esi
  41ccd5:	iret   
  41ccd6:	mov    dl,0x4d
  41ccd8:	add    dl,BYTE PTR [esi]
  41ccda:	push   ecx
  41ccdb:	pop    ebx
  41ccdc:	cld    
  41ccdd:	mov    gs,WORD PTR [edi+0x7402dcdd]
  41cce3:	cli    
  41cce4:	adc    BYTE PTR [edx-0x65],bl
  41cce7:	or     eax,0xbd9e9971
  41ccec:	jmp    0xccc1085f
  41ccf1:	jg     0x41cc7c
  41ccf3:	xor    BYTE PTR [ebx+0x24],0x35
  41ccf7:	mov    bl,0xbd
  41ccf9:	sub    al,0x11
  41ccfb:	ins    DWORD PTR es:[edi],dx
  41ccfc:	popa   
  41ccfd:	je     0x41cd2d
  41ccff:	std    
  41cd00:	aas    
  41cd01:	push   esp
  41cd02:	inc    ebx
  41cd03:	push   0x989a13bb
  41cd08:	hlt    
  41cd09:	push   ss
  41cd0a:	dec    ebx
  41cd0b:	jg     0x41cd0a
  41cd0d:	add    eax,0x455e64b
  41cd12:	xchg   esi,eax
  41cd13:	cwde   
  41cd14:	inc    edx
  41cd15:	mov    edi,0xf077deda
  41cd1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd1b:	inc    eax
  41cd1c:	lods   al,BYTE PTR ds:[esi]
  41cd1d:	(bad)
  41cd20:	inc    ebx
  41cd21:	inc    ebp
  41cd22:	addr16 jo 0x41ccef
  41cd25:	and    ebp,esi
  41cd27:	(bad)  
  41cd29:	stos   BYTE PTR es:[edi],al
  41cd2a:	cli    
  41cd2b:	push   eax
  41cd2c:	in     eax,dx
  41cd2d:	inc    eax
  41cd2e:	mov    cl,0xd6
  41cd30:	push   ds
  41cd31:	(bad)  
  41cd32:	sbb    BYTE PTR ds:0x437d7e72,bh
  41cd38:	shl    DWORD PTR [ebp+0x0],0x65
  41cd3c:	ret    
  41cd3d:	add    bh,cl
  41cd3f:	mov    dh,0xf7
  41cd41:	sbb    al,0x7d
  41cd43:	popw   ds
  41cd45:	sub    DWORD PTR es:[ebp+0x5c532e40],esi
  41cd4c:	jmp    0x41ccff
  41cd4e:	inc    esp
  41cd4f:	add    cl,BYTE PTR cs:0x5a38c07d
  41cd56:	jnp    0x41cd77
  41cd58:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41cd5a:	stc    
  41cd5b:	push   ss
  41cd5c:	(bad)  
  41cd5d:	cmp    BYTE PTR [esp+ebp*4+0x58ba9268],al
  41cd64:	and    edx,DWORD PTR [eax+ebp*2-0x2e]
  41cd68:	jmp    0xdfef94e9
  41cd6d:	fidiv  DWORD PTR [esi-0x73d907ab]
  41cd73:	(bad)  
  41cd75:	pop    ecx
  41cd76:	sub    bl,BYTE PTR [edx-0x759be463]
  41cd7c:	jmp    0x48f4:0x66365c49
  41cd83:	push   esp
  41cd84:	addr16 mov edx,0xc4d4f144
  41cd8a:	add    al,cl
  41cd8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd8d:	mov    bh,BYTE PTR [ecx]
  41cd8f:	pop    edx
  41cd90:	mov    eax,ds:0xf42c3664
  41cd95:	test   eax,0x1258a177
  41cd9a:	xchg   ebx,eax
  41cd9b:	hlt    
  41cd9c:	pop    ebx
  41cd9d:	out    0x42,al
  41cd9f:	in     eax,0xc4
  41cda1:	xchg   edx,eax
  41cda2:	pop    eax
  41cda3:	imul   esi,DWORD PTR [esi-0x1c],0xfffffff8
  41cda7:	pushf  
  41cda8:	rcl    DWORD PTR [esi-0x1d58b271],cl
  41cdae:	sti    
  41cdaf:	xchg   esp,eax
  41cdb0:	les    esp,FWORD PTR [ebp-0x78d2fab9]
  41cdb6:	call   0x6114d134
  41cdbb:	or     BYTE PTR [ebx+eax*1+0xfe7f854],dh
  41cdc2:	dec    ebp
  41cdc3:	call   0x432c07c6
  41cdc8:	jmp    0xdacb:0x588e8624
  41cdcf:	es nop
  41cdd1:	adc    BYTE PTR [eax+0x71],cl
  41cdd4:	pop    eax
  41cdd5:	lahf   
  41cdd6:	outs   dx,BYTE PTR ds:[esi]
  41cdd7:	jae    0x41ce2b
  41cdd9:	outs   dx,DWORD PTR ds:[esi]
  41cdda:	add    edi,DWORD PTR [ecx+0x4d]
  41cddd:	loope  0x41ce5e
  41cddf:	into   
  41cde0:	push   edx
  41cde1:	pop    edi
  41cde2:	pop    ss
  41cde3:	cdq    
  41cde4:	stos   DWORD PTR es:[edi],eax
  41cde5:	and    DWORD PTR [edi],edi
  41cde7:	add    eax,0x4fdcfcf2
  41cdec:	mov    eax,ds:0xce7d7511
  41cdf1:	not    BYTE PTR [ebx]
  41cdf3:	dec    DWORD PTR [edx+0x34]
  41cdf6:	mov    bl,0xc5
  41cdf8:	(bad)  
  41cdf9:	adc    ebp,DWORD PTR ds:0x440aacb0
  41cdff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce00:	fwait
  41ce01:	adc    bh,BYTE PTR [eax]
  41ce03:	push   si
  41ce05:	and    ah,ah
  41ce07:	adc    esp,DWORD PTR [edx]
  41ce09:	fisub  DWORD PTR [edi]
  41ce0b:	push   ss
  41ce0c:	pop    esp
  41ce0d:	push   esi
  41ce0e:	out    dx,al
  41ce0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce10:	jae    0x41ce7f
  41ce12:	xchg   BYTE PTR [eax+0x4f4b7411],ah
  41ce18:	mov    ebx,0x1bf95343
  41ce1d:	pop    ss
  41ce1e:	add    eax,0x25189295
  41ce23:	aaa    
  41ce24:	mov    al,ds:0x52fee0a5
  41ce29:	xor    DWORD PTR [ebx],esp
  41ce2b:	xchg   DWORD PTR [ecx],ecx
  41ce2d:	jbe    0x41cdbd
  41ce2f:	dec    ebp
  41ce30:	push   edi
  41ce31:	(bad)  
  41ce32:	out    dx,eax
  41ce33:	sbb    ecx,edi
  41ce35:	in     al,0xf8
  41ce37:	ins    DWORD PTR es:[edi],dx
  41ce38:	dec    esi
  41ce39:	and    bl,cl
  41ce3b:	sbb    cl,BYTE PTR [esi+edx*8]
  41ce3e:	mov    ebx,0x87978e45
  41ce43:	jo     0x41ce75
  41ce45:	xrelease xchg DWORD PTR [ebx],ebx
  41ce48:	fwait
  41ce49:	mov    al,ds:0xe51f972e
  41ce4e:	ss xchg ecx,eax
  41ce50:	mov    cl,0xa4
  41ce52:	adc    BYTE PTR [eax-0x57],dl
  41ce55:	(bad)  
  41ce57:	repnz test DWORD PTR [ebx],ebp
  41ce5a:	pop    edx
  41ce5b:	mov    ebp,0xc28d1b2c
  41ce60:	xchg   edi,eax
  41ce61:	loopne 0x41ce61
  41ce63:	mov    esp,ebx
  41ce65:	xchg   ebp,eax
  41ce66:	popf   
  41ce67:	lahf   
  41ce68:	lods   eax,DWORD PTR ds:[esi]
  41ce69:	repnz in eax,0x83
  41ce6c:	cdq    
  41ce6d:	push   ebx
  41ce6e:	rcr    DWORD PTR [edx],1
  41ce70:	mov    edx,0x8fb858b6
  41ce75:	inc    eax
  41ce76:	nop
  41ce77:	sub    al,0x1f
  41ce79:	inc    eax
  41ce7b:	mov    al,0x3
  41ce7d:	xchg   esp,eax
  41ce7e:	sub    al,0x27
  41ce80:	lock enter 0x2880,0xc6
  41ce85:	inc    ebx
  41ce86:	ja     0x41ce74
  41ce88:	adc    eax,0xc4e0cc1f
  41ce8d:	or     DWORD PTR [ebp-0xd6cf210],0xf4268127
  41ce97:	addr16 mov al,0xe6
  41ce9a:	addr16 adc al,0x2d
  41ce9d:	ins    BYTE PTR es:[edi],dx
  41ce9e:	xlat   BYTE PTR ds:[ebx]
  41cea0:	xchg   edi,eax
  41cea1:	fbld   TBYTE PTR [ebx-0x46]
  41cea4:	cmp    eax,0xc2e05fff
  41cea9:	mov    ds:0x75222e26,al
  41ceae:	(bad)  
  41ceaf:	fmul   DWORD PTR ds:0xbeb8dff6
  41ceb5:	jg     0x41cf12
  41ceb7:	fisub  WORD PTR [ebp+0x204181ee]
  41cebd:	int3   
  41cebe:	mov    al,0x9c
  41cec0:	je     0x41cf11
  41cec2:	lock adc BYTE PTR [ebx+0x6b6a75c9],bh
  41cec9:	inc    ecx
  41ceca:	jp     0x41ce71
  41cecc:	fisubr DWORD PTR [ebx+esi*2+0x2d]
  41ced0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ced1:	inc    ecx
  41ced2:	or     al,0x3a
  41ced4:	cmp    DWORD PTR [esi],0xffffffbe
  41ced7:	dec    esi
  41ced8:	pop    eax
  41ced9:	dec    edi
  41ceda:	or     eax,0xbca9570d
  41cedf:	(bad)  
  41cee0:	mov    DWORD PTR ds:0x35fb11f0,eax
  41cee6:	pop    edx
  41cee7:	loope  0x41cf5e
  41cee9:	stos   DWORD PTR es:[edi],eax
  41ceea:	jg     0x41ced2
  41ceec:	jg     0x41cf42
  41ceee:	out    dx,al
  41ceef:	cdq    
  41cef0:	pop    eax
  41cef1:	sti    
  41cef2:	mov    ebp,0x6cdee4f6
  41cef7:	or     eax,0x611ec63a
  41cefc:	dec    ebp
  41cefd:	mov    edi,0xf6ad2446
  41cf02:	sbb    esi,DWORD PTR [edx+0x6883a297]
  41cf08:	mov    DWORD PTR [eax],eax
  41cf0a:	cmc    
  41cf0b:	cmp    eax,0xdf6427fe
  41cf10:	sub    BYTE PTR [ebx+edx*8],bh
  41cf13:	add    esp,ecx
  41cf15:	retf   
  41cf16:	pop    ss
  41cf17:	add    BYTE PTR [edi+0x41],cl
  41cf1a:	popf   
  41cf1b:	jns    0x41cf45
  41cf1d:	test   DWORD PTR [esi],edx
  41cf1f:	mov    ah,0xf6
  41cf21:	mov    bh,0xa2
  41cf23:	and    dh,bh
  41cf25:	mov    cl,0xaf
  41cf27:	pop    ecx
  41cf28:	jmp    0x41cf94
  41cf2a:	je     0x41cf90
  41cf2c:	retf   0x7834
  41cf2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf30:	loopne 0x41ceb4
  41cf32:	popf   
  41cf33:	or     cl,al
  41cf35:	inc    ebx
  41cf36:	mov    al,ds:0xd761e022
  41cf3b:	(bad)  
  41cf3c:	stc    
  41cf3d:	iret   
  41cf3e:	ret    0xc90
  41cf41:	and    DWORD PTR [esi-0x5f],ebx
  41cf44:	jnp    0x41cfb6
  41cf46:	push   0xc7f1ad93
  41cf4b:	retf   0xe5b9
  41cf4e:	popa   
  41cf4f:	scas   al,BYTE PTR es:[edi]
  41cf50:	and    BYTE PTR [esi],bh
  41cf52:	das    
  41cf53:	pop    ds
  41cf54:	es (bad) 
  41cf56:	fldenv [edi]
  41cf58:	arpl   WORD PTR [ecx],di
  41cf5a:	pop    edi
  41cf5b:	jno    0x41cfb5
  41cf5d:	test   BYTE PTR ds:0x55bb96bf,cl
  41cf63:	cli    
  41cf64:	stos   BYTE PTR es:[edi],al
  41cf65:	mov    dh,0x68
  41cf67:	in     al,dx
  41cf68:	(bad)  
  41cf69:	mov    dh,0xff
  41cf6b:	inc    BYTE PTR [edi-0x54d76e85]
  41cf71:	mov    ds:0x405a9380,al
  41cf76:	dec    edx
  41cf77:	xchg   esp,eax
  41cf78:	js     0x41cfea
  41cf7a:	imul   edx,edx,0xffffffbe
  41cf7d:	aaa    
  41cf7e:	sub    BYTE PTR [ebx],al
  41cf80:	xchg   ecx,eax
  41cf81:	xlat   BYTE PTR ds:[ebx]
  41cf82:	sbb    al,0x92
  41cf84:	adc    al,0x3d
  41cf86:	xchg   ebx,eax
  41cf87:	xchg   BYTE PTR ds:0xb17713c8,ch
  41cf8d:	adc    ebx,ebx
  41cf8f:	push   cs
  41cf90:	sub    dh,ah
  41cf92:	dec    ebp
  41cf93:	adc    ah,BYTE PTR cs:[edx-0x36a68e94]
  41cf9a:	mov    ebx,0xa682937e
  41cf9f:	popa   
  41cfa0:	out    dx,al
  41cfa1:	jp     0x41cfcb
  41cfa3:	hlt    
  41cfa4:	sbb    ebp,ebx
  41cfa6:	sbb    al,0x1a
  41cfa8:	inc    ecx
  41cfa9:	and    BYTE PTR [edi],bh
  41cfab:	outs   dx,BYTE PTR ds:[esi]
  41cfac:	enter  0xede6,0x3c
  41cfb0:	inc    ebp
  41cfb1:	pop    ds
  41cfb2:	push   ebp
  41cfb3:	push   ecx
  41cfb4:	jne    0x41cf64
  41cfb6:	fisttp WORD PTR [esi+0x49]
  41cfb9:	inc    ecx
  41cfba:	push   esi
  41cfbb:	push   esi
  41cfbc:	pop    ebp
  41cfbd:	mov    ds:0xa09f81a0,eax
  41cfc2:	mov    dh,0x87
  41cfc4:	sbb    ecx,DWORD PTR [edi]
  41cfc6:	fisub  DWORD PTR [ebp-0x69]
  41cfc9:	cmp    ecx,ebp
  41cfcb:	inc    eax
  41cfcc:	xchg   ebp,eax
  41cfcd:	jecxz  0x41d011
  41cfcf:	je     0x41cfe5
  41cfd1:	in     al,dx
  41cfd2:	iret   
  41cfd3:	int3   
  41cfd4:	push   DWORD PTR [esi+edi*8-0x54]
  41cfd8:	push   0xf15762c3
  41cfdd:	or     edi,edi
  41cfdf:	pop    edx
  41cfe0:	(bad)  
  41cfe1:	push   ebp
  41cfe2:	pusha  
  41cfe3:	push   ss
  41cfe4:	inc    ebx
  41cfe5:	ds int 0x5c
  41cfe8:	inc    ecx
  41cfe9:	addr16 in al,0xd7
  41cfec:	sbb    BYTE PTR [edi+0x5106b547],0xc7
  41cff3:	test   eax,0xa8982eac
  41cff8:	push   0xffffffd2
  41cffa:	mov    WORD PTR [esi+0x13],?
  41cffd:	imul   ecx,edi,0xffffff96
  41d000:	sub    eax,0x5ddd6e73
  41d005:	mov    dh,0x4f
  41d007:	sub    dl,BYTE PTR [ebx+0x679e2a0a]
  41d00d:	dec    edx
  41d00e:	mov    ds:0x65a58328,eax
  41d013:	pop    ebx
  41d014:	jmp    0x6ccc:0xb73a4e66
  41d01b:	lods   eax,DWORD PTR ds:[esi]
  41d01c:	mov    eax,0x2ebbee7f
  41d021:	fwait
  41d022:	dec    edi
  41d023:	inc    ebp
  41d024:	and    edx,DWORD PTR [ebp+0x49204531]
  41d02a:	cmc    
  41d02b:	loope  0x41d054
  41d02d:	ficomp DWORD PTR [edx+0x1f2ff5f8]
  41d033:	out    0x61,eax
  41d035:	push   ss
  41d036:	imul   ebx
  41d038:	(bad)  
  41d039:	jmp    0xb75a5016
  41d03e:	out    dx,eax
  41d03f:	imul   BYTE PTR [ecx+0x7a9c283a]
  41d045:	jp     0x41d075
  41d047:	out    dx,al
  41d048:	cmc    
  41d049:	(bad)  
  41d04a:	push   edi
  41d04b:	test   al,0x57
  41d04d:	dec    ebx
  41d04e:	(bad)  
  41d04f:	sbb    DWORD PTR [edx-0x992b629],edi
  41d055:	push   ecx
  41d056:	fistp  QWORD PTR [edx]
  41d058:	push   0x70
  41d05a:	cli    
  41d05b:	inc    eax
  41d05c:	sub    bl,BYTE PTR [edi-0x4f]
  41d05f:	sub    al,0xab
  41d061:	cs dec ebx
  41d063:	sub    eax,0x315574c7
  41d068:	push   ebp
  41d069:	push   esp
  41d06a:	fdiv   DWORD PTR [edx-0x419e0850]
  41d070:	idiv   DWORD PTR [eax-0x1c]
  41d073:	ds in  al,0x27
  41d076:	sub    ch,al
  41d078:	dec    edx
  41d079:	xor    ecx,ebx
  41d07b:	xchg   DWORD PTR [ebx+0x17587792],edi
  41d081:	(bad)  
  41d082:	into   
  41d083:	xor    ah,dl
  41d085:	test   eax,0x23388c57
  41d08a:	or     BYTE PTR [ebx-0x24],bh
  41d08d:	and    al,0xec
  41d08f:	mov    BYTE PTR [edx],bl
  41d091:	xchg   DWORD PTR [eax],ecx
  41d093:	imul   ebx,DWORD PTR [ecx+0x2f2cfa54],0x99a6de65
  41d09d:	or     eax,DWORD PTR [edx+0x2156e5b7]
  41d0a3:	repz add ah,ah
  41d0a6:	pop    esp
  41d0a7:	mov    ah,0x7c
  41d0a9:	jmp    0xcfa5:0x5239958b
  41d0b0:	mov    eax,esi
  41d0b2:	lahf   
  41d0b3:	sub    eax,0x1e7b8779
  41d0b8:	xor    ah,ah
  41d0ba:	mov    ah,0xd2
  41d0bc:	ss mov ecx,0xabf92379
  41d0c2:	jecxz  0x41d073
  41d0c4:	adc    bl,BYTE PTR [edi+0x59]
  41d0c7:	fcomp  QWORD PTR [ecx+ebp*4-0x2e3fd635]
  41d0ce:	or     al,0xa3
  41d0d1:	push   esp
  41d0d2:	xchg   ebp,eax
  41d0d3:	(bad)  
  41d0d4:	imul   ebp,DWORD PTR [esi-0x2c315686],0x7222776e
  41d0de:	xchg   BYTE PTR [ebp+0x71c72fc0],cl
  41d0e4:	inc    ecx
  41d0e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0e6:	add    ch,ch
  41d0e8:	mov    ds:0xf3a4dd2d,eax
  41d0ed:	idiv   BYTE PTR [eax-0x5e]
  41d0f0:	jmp    0x8eac:0x4358
  41d0f6:	or     al,0xe6
  41d0f8:	int    0x7b
  41d0fa:	push   esi
  41d0fb:	push   edi
  41d0fc:	mov    edi,0xda69ccb
  41d101:	push   0xffffff9e
  41d103:	dec    ebx
  41d104:	dec    edx
  41d105:	mov    esp,0x755fcb9c
  41d10a:	mov    ds:0xaed84f7f,al
  41d10f:	lods   eax,DWORD PTR ds:[esi]
  41d110:	shl    BYTE PTR [edx+0x14],cl
  41d113:	push   eax
  41d114:	std    
  41d115:	ja     0x41d189
  41d117:	sub    eax,0x5b55c850
  41d11c:	inc    edi
  41d11d:	mov    bl,0x6e
  41d11f:	jo     0x41d145
  41d121:	fbstp  TBYTE PTR [edx-0x14]
  41d124:	sbb    dh,bh
  41d126:	out    dx,al
  41d127:	clc    
  41d128:	in     al,0xa9
  41d12a:	or     DWORD PTR [ebp-0x48e3426f],ecx
  41d130:	(bad)  
  41d131:	mov    bh,cl
  41d133:	gs leave 
  41d135:	or     ecx,DWORD PTR [ecx-0x4]
  41d138:	add    BYTE PTR [esi],dh
  41d13a:	outs   dx,BYTE PTR ds:[esi]
  41d13b:	das    
  41d13c:	inc    edx
  41d13d:	pop    ds
  41d13e:	pop    edi
  41d13f:	outs   dx,BYTE PTR ds:[esi]
  41d140:	shl    BYTE PTR [ebx+ebx*1],0xb5
  41d144:	js     0x41d167
  41d146:	test   DWORD PTR [eax-0x1c],edx
  41d149:	xor    al,0x5b
  41d14b:	sahf   
  41d14c:	jnp    0x41d148
  41d14e:	xchg   ebp,eax
  41d14f:	jns    0x41d0eb
  41d151:	imul   ecx,DWORD PTR [ebx-0x2e5d924c],0xffffffca
  41d158:	or     BYTE PTR [ecx+0x30],0x9b
  41d15c:	mov    ch,0xd
  41d15e:	pop    eax
  41d15f:	jmp    0x7c1fbb3b
  41d164:	pusha  
  41d165:	sahf   
  41d166:	mov    ebp,0xd250585
  41d16b:	push   esi
  41d16c:	xor    esp,DWORD PTR [edx-0x389368d2]
  41d172:	xor    BYTE PTR [edi-0x48576f7c],ch
  41d178:	retf   0x84c
  41d17b:	les    esi,FWORD PTR [ebx]
  41d17d:	loopne 0x41d171
  41d17f:	sbb    al,0x27
  41d181:	or     ebx,DWORD PTR [ebp-0x5f]
  41d184:	push   esp
  41d185:	push   es
  41d186:	xor    DWORD PTR [edx-0x1cd50b91],0x4540a3ee
  41d190:	pop    ecx
  41d191:	into   
  41d192:	data16 loope 0x41d1c5
  41d195:	xchg   ebx,eax
  41d196:	mov    dh,0x18
  41d198:	add    DWORD PTR [esi],edi
  41d19a:	repnz cmp cl,BYTE PTR [ecx]
  41d19d:	mov    edx,0x3e9bfd17
  41d1a2:	ret    
  41d1a3:	push   ss
  41d1a4:	and    eax,0xca6142a0
  41d1a9:	mov    ah,0x36
  41d1ab:	arpl   ax,si
  41d1ad:	pushf  
  41d1ae:	jg     0x41d209
  41d1b0:	iret   
  41d1b1:	aas    
  41d1b2:	fmul   QWORD PTR [ecx+0x759b8f71]
  41d1b8:	push   esi
  41d1b9:	cli    
  41d1ba:	mov    bl,0xad
  41d1bc:	sub    eax,DWORD PTR [edx+0x7d]
  41d1bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d1c0:	int    0x14
  41d1c2:	add    eax,0xdea2a553
  41d1c7:	mov    eax,ds:0xf94a1886
  41d1cc:	push   0xacbaded9
  41d1d1:	repnz sbb DWORD PTR [esi+0x9],esp
  41d1d5:	jp     0x41d255
  41d1d7:	pop    edx
  41d1d8:	lea    ebx,[edx+0x5f]
  41d1db:	dec    esi
  41d1dc:	outs   dx,DWORD PTR ds:[esi]
  41d1dd:	bound  eax,QWORD PTR [edi+0x3545359]
  41d1e3:	or     BYTE PTR ds:0x23fc5188,dh
  41d1e9:	sti    
  41d1ea:	call   0x4dec:0x42199b0d
  41d1f1:	pop    ds
  41d1f2:	cdq    
  41d1f3:	int3   
  41d1f4:	mov    WORD PTR ds:0x14bd5a12,?
  41d1fa:	push   eax
  41d1fb:	mov    al,0xa1
  41d1fd:	dec    eax
  41d1fe:	lods   eax,DWORD PTR ds:[esi]
  41d1ff:	jnp    0x41d19d
  41d201:	xor    eax,0x908999f9
  41d206:	ss push edi
  41d208:	cwde   
  41d209:	das    
  41d20a:	cmp    eax,0xffe4b94a
  41d20f:	addr16 mov ds:0x1a1b,al
  41d213:	mov    ebx,0x4e3bb9df
  41d218:	cmp    DWORD PTR [ebx-0x65],ecx
  41d21b:	shr    BYTE PTR [ebx-0x6f22b33],1
  41d221:	dec    ecx
  41d222:	push   0xf798e6
  41d227:	test   bh,0x6e
  41d22a:	ins    DWORD PTR es:[edi],dx
  41d22b:	aas    
  41d22c:	mov    ecx,0x2b3e8e56
  41d231:	mov    al,ds:0xa8a9ac25
  41d236:	mov    al,0x73
  41d238:	xchg   DWORD PTR [edi+0x29],ebp
  41d23b:	mov    ah,cl
  41d23d:	sub    esp,DWORD PTR [edx+0x11]
  41d240:	xchg   ebp,eax
  41d241:	cli    
  41d242:	mov    ah,0x66
  41d244:	ret    
  41d245:	push   0x4350b114
  41d24a:	aas    
  41d24b:	dec    ebx
  41d24c:	sub    eax,0xe871a747
  41d251:	aad    0xc5
  41d253:	mov    eax,ds:0xaf583642
  41d258:	dec    edx
  41d259:	hlt    
  41d25a:	dec    ecx
  41d25b:	pop    es
  41d25c:	test   al,0xdd
  41d25e:	aas    
  41d25f:	sti    
  41d260:	scas   eax,DWORD PTR es:[edi]
  41d261:	icebp  
  41d262:	inc    eax
  41d263:	mov    ecx,DWORD PTR [edx]
  41d265:	loop   0x41d2ad
  41d267:	mov    eax,0x8d711d81
  41d26c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d26d:	fbstp  TBYTE PTR [esi+eiz*8+0x631bd3c5]
  41d274:	aam    0x4c
  41d276:	mov    edi,cs
  41d278:	loopne 0x41d27c
  41d27a:	mov    edx,0x62e209fd
  41d27f:	xchg   edx,eax
  41d280:	xor    al,BYTE PTR [edi+0x49dc4d8b]
  41d286:	std    
  41d287:	xor    eax,0xcd4f5167
  41d28c:	test   esi,esi
  41d28e:	and    ebx,DWORD PTR [edi-0x68]
  41d291:	popf   
  41d292:	outs   dx,BYTE PTR ds:[esi]
  41d293:	repnz pop eax
  41d295:	dec    esi
  41d296:	cmp    DWORD PTR [ebp-0x34],esi
  41d299:	in     eax,dx
  41d29a:	jl     0x41d269
  41d29c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d29d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d29e:	aad    0xfd
  41d2a0:	hlt    
  41d2a1:	mov    ebx,0xefead3aa
  41d2a6:	push   esi
  41d2a7:	psllq  mm6,QWORD PTR [eax]
  41d2aa:	fs mov al,0x98
  41d2ad:	or     BYTE PTR [esp],bl
  41d2b0:	loopne 0x41d26e
  41d2b2:	popf   
  41d2b3:	push   es
  41d2b4:	ficomp DWORD PTR [edx+eax*8]
  41d2b7:	sub    eax,0x427699ad
  41d2bc:	adc    DWORD PTR [edx-0x16f17336],esi
  41d2c2:	daa    
  41d2c3:	add    DWORD PTR [ecx+0x0],eax
  41d2c6:	sbb    ebx,DWORD PTR [edx-0xf6b50f7]
  41d2cc:	pop    ebp
  41d2cd:	push   0xa8e25adb
  41d2d2:	jge    0x41d30b
  41d2d4:	mov    ds:0xf7dd2a83,eax
  41d2d9:	mov    esi,0xf83ceaec
  41d2de:	xchg   ebp,eax
  41d2df:	jg     0x41d2d3
  41d2e1:	jle    0x41d267
  41d2e3:	stos   DWORD PTR es:[edi],eax
  41d2e4:	sbb    bl,BYTE PTR [edx]
  41d2e6:	and    eax,0xcfcfa366
  41d2eb:	add    bl,BYTE PTR ds:0xe42b5560
  41d2f1:	call   0xb000c790
  41d2f6:	ret    0xc69c
  41d2f9:	push   es
  41d2fa:	scas   al,BYTE PTR es:[edi]
  41d2fb:	aas    
  41d2fc:	retf   0x9639
  41d2ff:	(bad)
  41d303:	scas   eax,DWORD PTR es:[edi]
  41d304:	or     al,0x5
  41d306:	mov    al,ds:0x722d1d21
  41d30b:	das    
  41d30c:	inc    edi
  41d30d:	inc    ebp
  41d30e:	ja     0x41d297
  41d310:	stos   BYTE PTR es:[edi],al
  41d311:	mov    ebx,0xc4054fe2
  41d316:	addr16 jo 0x41d377
  41d319:	mov    al,ds:0x92ad41b0
  41d31e:	cmp    BYTE PTR [esi-0x29],al
  41d321:	popa   
  41d322:	ret    
  41d323:	jo     0x41d2ab
  41d325:	mov    WORD PTR [esi],?
  41d327:	ror    BYTE PTR [eax+0x52a68cee],cl
  41d32d:	push   ebx
  41d32e:	retf   
  41d32f:	lods   eax,DWORD PTR ds:[esi]
  41d330:	and    dl,BYTE PTR [eax]
  41d332:	enter  0x7edc,0x5e
  41d336:	or     bh,BYTE PTR ds:0xb306ba22
  41d33c:	xor    ecx,DWORD PTR [eax-0x54327b2d]
  41d342:	xor    al,ch
  41d344:	dec    eax
  41d345:	addr16 iret 
  41d347:	nop
  41d348:	lahf   
  41d349:	shl    DWORD PTR [edx+0x256081e3],1
  41d34f:	push   ebp
  41d350:	xor    esi,DWORD PTR [eax]
  41d352:	jle    0x41d361
  41d354:	rol    BYTE PTR [edi-0x5205b037],cl
  41d35a:	std    
  41d35b:	lock dec ecx
  41d35d:	xchg   DWORD PTR [edx],esp
  41d35f:	cmp    BYTE PTR [ebp-0x74273b96],ch
  41d365:	icebp  
  41d366:	hlt    
  41d367:	mov    edi,0x2ce811e3
  41d36c:	dec    esp
  41d36d:	xchg   esp,eax
  41d36e:	xor    edi,DWORD PTR [ebp-0x4e90fdfa]
  41d374:	push   cs
  41d375:	dec    edx
  41d376:	pop    eax
  41d377:	push   ds
  41d378:	bound  ebp,QWORD PTR [edx+eax*8+0x40d65469]
  41d37f:	shl    DWORD PTR [eax],cl
  41d381:	xor    DWORD PTR [esi+0x11b34d8e],edx
  41d387:	xor    ah,BYTE PTR [esp+esi*8]
  41d38a:	xor    bl,dh
  41d38c:	rol    BYTE PTR [ebx],cl
  41d38e:	push   esp
  41d38f:	sub    al,0x6d
  41d391:	fidivr WORD PTR [esi+0x32e1b6ce]
  41d397:	lods   eax,DWORD PTR ds:[esi]
  41d398:	out    dx,al
  41d399:	out    dx,eax
  41d39a:	adc    ah,BYTE PTR [ebx]
  41d39c:	fdivr  DWORD PTR [ecx+edi*8]
  41d39f:	mov    cs,WORD PTR [ebx-0x2fd7429a]
  41d3a5:	xor    DWORD PTR [ecx+0x896a735],esi
  41d3ab:	(bad)
  41d3ae:	adc    ecx,DWORD PTR [edi]
  41d3b0:	push   edx
  41d3b1:	sti    
  41d3b2:	or     bh,bl
  41d3b4:	stc    
  41d3b5:	or     DWORD PTR [eax+0x60],0x14
  41d3b9:	mov    al,0x9e
  41d3bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3bc:	sbb    ch,BYTE PTR [eax-0x34]
  41d3bf:	mov    eax,ds:0x93e10b35
  41d3c4:	in     al,dx
  41d3c5:	sbb    edi,ebp
  41d3c7:	xor    DWORD PTR [ebx],ecx
  41d3c9:	xchg   edx,eax
  41d3ca:	inc    edi
  41d3cb:	push   ss
  41d3cc:	int    0x49
  41d3ce:	lea    ecx,[ebp+0x567eb410]
  41d3d4:	shr    BYTE PTR [ecx-0x735682e],1
  41d3da:	test   eax,0x6c74f89c
  41d3df:	mov    BYTE PTR [edi],dl
  41d3e1:	std    
  41d3e2:	or     DWORD PTR [ebx+0x68],ebx
  41d3e5:	dec    edx
  41d3e6:	cmp    edx,esi
  41d3e8:	dec    edi
  41d3e9:	test   al,0x7b
  41d3eb:	xor    eax,DWORD PTR [edi+edi*1+0x5b]
  41d3ef:	xor    bl,BYTE PTR [ebp+0x50df172d]
  41d3f5:	cld    
  41d3f6:	pop    ebp
  41d3f7:	icebp  
  41d3f8:	shr    cl,1
  41d3fa:	stos   BYTE PTR es:[edi],al
  41d3fb:	(bad)  
  41d3fc:	cmc    
  41d3fd:	test   eax,0x10a7556d
  41d402:	xchg   edi,eax
  41d403:	cli    
  41d404:	test   BYTE PTR [ecx+0x3e],ah
  41d407:	push   ebx
  41d408:	pop    eax
  41d409:	retf   
  41d40a:	int    0x5
  41d40c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d40d:	jo     0x41d48c
  41d40f:	stos   BYTE PTR es:[edi],al
  41d410:	and    al,0x4
  41d412:	xchg   esi,esi
  41d414:	mov    ds:0x9a5209c8,eax
  41d419:	or     BYTE PTR [edi+edi*8+0x63],bl
  41d41d:	icebp  
  41d41e:	cmp    DWORD PTR [ebx-0x7c],ecx
  41d421:	jl     0x41d46f
  41d423:	xchg   edx,eax
  41d424:	push   ecx
  41d425:	mov    al,ds:0xbbf00e0a
  41d42a:	jbe    0x41d3ed
  41d42c:	mov    dl,0x86
  41d42e:	inc    ecx
  41d42f:	loope  0x41d4ae
  41d431:	inc    ebx
  41d432:	loop   0x41d48e
  41d434:	pop    edi
  41d435:	repnz sub eax,0x5bd05b56
  41d43b:	out    dx,eax
  41d43c:	lods   al,BYTE PTR ds:[esi]
  41d43d:	scas   al,BYTE PTR es:[edi]
  41d43e:	lods   al,BYTE PTR ds:[esi]
  41d43f:	cld    
  41d440:	movhps QWORD PTR [edx+0x52],xmm0
  41d444:	push   ebp
  41d445:	into   
  41d446:	jbe    0x41d42d
  41d448:	hlt    
  41d449:	iret   
  41d44a:	(bad)  [ecx+0x7a]
  41d44d:	or     DWORD PTR [ebx-0x3c89fea3],edx
  41d453:	call   0x326814b2
  41d458:	retf   0xb176
  41d45b:	cmp    edx,ebx
  41d45d:	idiv   BYTE PTR [ebx]
  41d45f:	inc    esi
  41d460:	jo     0x41d42c
  41d462:	gs inc ebp
  41d464:	test   bl,ch
  41d466:	fwait
  41d467:	dec    ecx
  41d468:	scas   eax,DWORD PTR es:[edi]
  41d469:	sub    DWORD PTR [ebx],0x45
  41d46c:	(bad)  
  41d46d:	aam    0x58
  41d46f:	adc    ah,BYTE PTR [esi-0x49]
  41d472:	jecxz  0x41d4f0
  41d474:	jmp    0x62a5:0x25075a9c
  41d47b:	and    esi,esi
  41d47d:	mov    esp,0x4d91897b
  41d482:	mov    BYTE PTR [ebx+edx*1+0x66764f40],dl
  41d489:	(bad)  
  41d48a:	jns    0x41d488
  41d48c:	or     DWORD PTR [ebp-0x62a8f63b],eax
  41d492:	lds    edi,FWORD PTR [edx]
  41d494:	or     DWORD PTR [ebx],0xd4737f7a
  41d49a:	dec    eax
  41d49b:	adc    al,0xbc
  41d49d:	out    0x7f,al
  41d49f:	xchg   BYTE PTR [ebx-0xeaf151a],bh
  41d4a5:	mov    ebp,0x68537400
  41d4aa:	push   es
  41d4ab:	das    
  41d4ac:	jo     0x41d4ac
  41d4ae:	in     al,dx
  41d4af:	repz fstp QWORD PTR [edi+0x1aae71f8]
  41d4b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4b7:	test   BYTE PTR [ebx-0x17],0x7a
  41d4bb:	(bad)
  41d4be:	and    ebx,0x3d592d13
  41d4c4:	jle    0x41d454
  41d4c6:	aad    0x9e
  41d4c8:	mov    dh,0x2a
  41d4ca:	outs   dx,BYTE PTR ds:[esi]
  41d4cb:	cmp    al,ah
  41d4cd:	xor    ch,BYTE PTR [esi]
  41d4cf:	sbb    edx,esi
  41d4d1:	dec    esi
  41d4d2:	ret    
  41d4d3:	inc    ebx
  41d4d4:	jmp    0x41d47c
  41d4d6:	cmp    ch,BYTE PTR [edi]
  41d4d8:	fs popf 
  41d4da:	xchg   esi,eax
  41d4db:	int    0x56
  41d4dd:	xchg   ebx,eax
  41d4de:	jbe    0x41d47e
  41d4e0:	mov    dl,0x3
  41d4e2:	ret    0xd647
  41d4e5:	mov    DWORD PTR [ecx+0x1e],edx
  41d4e8:	inc    edx
  41d4e9:	adc    BYTE PTR ss:[ebp+0xb22071b],0x18
  41d4f1:	mov    bh,0x57
  41d4f3:	stos   BYTE PTR es:[edi],al
  41d4f4:	add    DWORD PTR [esi+0x763f250a],0x565a5846
  41d4fe:	stos   BYTE PTR es:[edi],al
  41d4ff:	sbb    al,0xb4
  41d501:	das    
  41d502:	je     0x41d53e
  41d504:	int3   
  41d505:	sahf   
  41d506:	push   ecx
  41d507:	inc    ebp
  41d508:	mov    ah,0xa9
  41d50a:	xor    DWORD PTR [ecx-0x176eb4b0],0xc54723bb
  41d514:	xchg   edx,eax
  41d515:	imul   esi,DWORD PTR [edi],0xe66c873a
  41d51b:	dec    esp
  41d51c:	rcl    DWORD PTR [ecx-0x38],1
  41d51f:	jg     0x41d581
  41d521:	sbb    BYTE PTR [eax-0x2e],bl
  41d524:	ja     0x41d5a5
  41d526:	cmp    ecx,ebx
  41d528:	aad    0x84
  41d52a:	dec    DWORD PTR [ebp+0x2a]
  41d52d:	rcl    esp,cl
  41d52f:	mov    bh,0x46
  41d531:	jo     0x41d4fb
  41d533:	retf   0xda08
  41d536:	pop    ds
  41d537:	aad    0x95
  41d539:	in     eax,0x7
  41d53b:	sbb    al,0x89
  41d53d:	sub    dl,cl
  41d53f:	mov    edi,0xd011ff58
  41d544:	mov    dh,0x12
  41d546:	lahf   
  41d547:	pop    es
  41d548:	mov    al,0xd7
  41d54a:	push   esi
  41d54b:	mov    esi,0x229ac698
  41d550:	retf   
  41d551:	jg     0x41d4d9
  41d553:	xor    eax,0x9d454957
  41d558:	pop    esp
  41d559:	aad    0xc4
  41d55b:	fnstsw WORD PTR [edx+0x5817cebe]
  41d561:	test   DWORD PTR [ebx-0x7c4f3858],esp
  41d567:	retf   
  41d568:	jmp    0x41d55b
  41d56a:	cld    
  41d56b:	js     0x41d536
  41d56d:	sti    
  41d56e:	ret    
  41d56f:	mov    eax,ds:0x834d02e5
  41d574:	jl     0x41d5f4
  41d576:	pop    ds
  41d577:	push   ss
  41d578:	mov    al,ds:0x471e4535
  41d57d:	lea    eax,[ebx+0xe38042f]
  41d583:	(bad)  
  41d584:	shr    dh,0x7f
  41d587:	pop    edx
  41d588:	(bad)  
  41d589:	int    0x1f
  41d58b:	jbe    0x41d549
  41d58d:	mov    al,ds:0x36281c3b
  41d592:	sti    
  41d593:	cmp    ecx,ebx
  41d595:	mov    ebx,0xa017b39b
  41d59a:	sbb    DWORD PTR [ecx],ebp
  41d59c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d59d:	mov    eax,0x6f3efc07
  41d5a2:	and    DWORD PTR [esi],ebp
  41d5a4:	xor    BYTE PTR [edi-0x5c],ch
  41d5a7:	in     eax,dx
  41d5a8:	and    ebx,DWORD PTR [ebx+0xc]
  41d5ab:	dec    esi
  41d5ac:	lods   eax,DWORD PTR ds:[esi]
  41d5ad:	push   edx
  41d5ae:	bound  ebx,QWORD PTR [ecx+0x4d720310]
  41d5b4:	call   0xa845:0xaed00c7b
  41d5bb:	jbe    0x41d5da
  41d5bd:	idiv   bl
  41d5bf:	aam    0xa9
  41d5c1:	sbb    eax,0xe319148d
  41d5c6:	mov    BYTE PTR [eax],cl
  41d5c8:	fldenv [edx-0x2c]
  41d5cb:	sti    
  41d5cc:	jmp    0xd12b:0x5c9919a4
  41d5d3:	ror    DWORD PTR [edi+0x44],1
  41d5d6:	and    al,0xc6
  41d5d8:	cmc    
  41d5d9:	stos   BYTE PTR es:[edi],al
  41d5da:	mov    cl,0xf6
  41d5dc:	div    esi
  41d5de:	fucomi st,st(0)
  41d5e0:	(bad)  
  41d5e1:	mov    ebp,0x8e445392
  41d5e6:	add    eax,0x13653a4d
  41d5eb:	mov    bh,0xc4
  41d5ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5ee:	cld    
  41d5ef:	inc    eax
  41d5f0:	neg    bh
  41d5f2:	fwait
  41d5f3:	push   es
  41d5f4:	mov    al,ds:0x82e66bb4
  41d5f9:	lods   eax,DWORD PTR ds:[esi]
  41d5fa:	sbb    cl,BYTE PTR [ebx]
  41d5fc:	lahf   
  41d5fd:	fs jmp 0x5bd123a9
  41d603:	fsub   DWORD PTR [esi+0x7faa6d79]
  41d609:	scas   al,BYTE PTR es:[edi]
  41d60a:	in     al,dx
  41d60b:	and    al,0x32
  41d60d:	push   ebx
  41d60e:	pop    edx
  41d60f:	daa    
  41d610:	inc    edx
  41d611:	xor    eax,edi
  41d613:	adc    BYTE PTR [edi+0x3d],cl
  41d616:	mov    BYTE PTR [edi+0x1f29ead7],bl
  41d61c:	fidiv  DWORD PTR ds:0x2ef67c23
  41d622:	fs clc 
  41d624:	push   esp
  41d625:	test   BYTE PTR [ebp-0x8bd56aa],cl
  41d62b:	mov    ds:0xec5691d0,al
  41d630:	add    DWORD PTR [eax-0x74],0x7b66e58f
  41d637:	cld    
  41d638:	cmp    ebx,DWORD PTR [edx-0x57]
  41d63b:	add    BYTE PTR ds:0x8298659f,cl
  41d641:	lea    esp,[eax-0x74]
  41d644:	pop    ds
  41d645:	dec    ebp
  41d646:	adc    eax,0xbe7c00bd
  41d64b:	mov    ecx,0xdd94a186
  41d650:	icebp  
  41d651:	mov    dl,0x50
  41d653:	dec    ecx
  41d654:	push   ebx
  41d655:	aad    0x47
  41d657:	xchg   esi,eax
  41d658:	out    0x2f,al
  41d65a:	push   0xde4f3f14
  41d65f:	cwde   
  41d660:	fiadd  WORD PTR [edi+0x7b]
  41d663:	pop    edi
  41d664:	jnp    0x41d682
  41d666:	dec    esi
  41d667:	jbe    0x41d63e
  41d669:	push   esi
  41d66a:	mov    dh,0xea
  41d66c:	adc    cl,BYTE PTR [edi+0x1946223d]
  41d672:	add    eax,DWORD PTR [ebx-0x7f010fe6]
  41d678:	lea    ebp,[ebx]
  41d67a:	test   DWORD PTR [ebx],ebx
  41d67c:	lock inc ecx
  41d67e:	sub    BYTE PTR [edi],cl
  41d680:	dec    esp
  41d681:	mov    edi,0x72cea597
  41d686:	fs (bad) 
  41d688:	sub    BYTE PTR [edi],al
  41d68a:	imul   DWORD PTR [ecx]
  41d68c:	inc    edx
  41d68d:	and    al,0xaf
  41d68f:	mov    bl,0xcf
  41d691:	jle    0x41d69f
  41d693:	xchg   BYTE PTR [edi+0x725a4d7b],dh
  41d699:	pop    ss
  41d69a:	pop    ebx
  41d69b:	mov    edx,DWORD PTR [ebx+0x68f63367]
  41d6a1:	pushf  
  41d6a2:	adc    BYTE PTR [edx-0x64],ch
  41d6a5:	lahf   
  41d6a6:	les    edx,FWORD PTR [ebx-0x1e]
  41d6a9:	div    BYTE PTR [eax+0x39d5a494]
  41d6af:	pop    ebx
  41d6b0:	icebp  
  41d6b1:	cld    
  41d6b2:	jae    0x41d671
  41d6b4:	sub    al,0xaf
  41d6b6:	or     edx,DWORD PTR [ecx+0x78ff33f6]
  41d6bc:	inc    esi
  41d6bd:	fsubr  DWORD PTR [esi-0x72]
  41d6c0:	inc    ebx
  41d6c1:	pop    edi
  41d6c2:	and    edx,DWORD PTR [esi+0xf]
  41d6c5:	push   ds
  41d6c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6c7:	adc    DWORD PTR [esi],0xfffffff9
  41d6ca:	xchg   eax,edx
  41d6cc:	or     dh,ch
  41d6ce:	dec    ecx
  41d6cf:	test   BYTE PTR [esi-0x2e],0x34
  41d6d3:	adc    al,BYTE PTR [edx]
  41d6d5:	cmp    ah,BYTE PTR [edi]
  41d6d7:	int    0x80
  41d6d9:	fcmove st,st(0)
  41d6db:	adc    BYTE PTR [edi-0x7d],dl
  41d6de:	cli    
  41d6df:	daa    
  41d6e0:	hlt    
  41d6e1:	pop    ebp
  41d6e2:	je     0x41d678
  41d6e4:	ins    DWORD PTR es:[edi],dx
  41d6e5:	mov    ah,0x4f
  41d6e7:	mov    esp,0x72a906c6
  41d6ec:	xlat   BYTE PTR ds:[ebx]
  41d6ed:	push   ebx
  41d6ee:	lahf   
  41d6ef:	push   ss
  41d6f0:	sbb    DWORD PTR [esi-0x42d24a53],eax
  41d6f6:	sub    DWORD PTR [edi],esi
  41d6f8:	dec    esi
  41d6f9:	adc    esp,eax
  41d6fb:	inc    ebp
  41d6fc:	in     eax,0xc
  41d6fe:	add    edx,DWORD PTR [eax+0x3fe4cb56]
  41d704:	mov    WORD PTR [esi+0x747f50d1],gs
  41d70a:	je     0x41d774
  41d70c:	cmp    dh,BYTE PTR [edi-0x5f79afa3]
  41d712:	test   DWORD PTR [edi-0x4],esi
  41d715:	repnz push ebx
  41d717:	jno    0x41d728
  41d719:	inc    esi
  41d71a:	je     0x41d77a
  41d71c:	das    
  41d71d:	mov    bh,0xb2
  41d71f:	mov    ds:0x6e04db38,eax
  41d724:	sbb    BYTE PTR [ebx],cl
  41d726:	outs   dx,DWORD PTR ds:[esi]
  41d727:	xchg   ebp,eax
  41d728:	mov    ecx,0x5fdc3d64
  41d72d:	mov    bl,0xf0
  41d72f:	lock dec esp
  41d731:	retf   0x1a01
  41d734:	(bad)
  41d737:	pop    ss
  41d738:	xor    dl,BYTE PTR [edi+0x41]
  41d73b:	lods   al,BYTE PTR fs:[esi]
  41d73d:	jg     0x41d731
  41d73f:	jl     0x41d70f
  41d741:	inc    edx
  41d742:	loop   0x41d73d
  41d744:	mov    al,ds:0x9e01b293
  41d749:	push   0x4c
  41d74b:	xor    eax,0x23dd0fd6
  41d750:	jns    0x41d763
  41d752:	scas   eax,DWORD PTR es:[edi]
  41d753:	push   ecx
  41d754:	and    eax,DWORD PTR [esi]
  41d756:	ins    BYTE PTR es:[edi],dx
  41d757:	or     eax,0x12da19a9
  41d75c:	mov    dh,0xab
  41d75e:	jnp    0x41d776
  41d760:	retf   0xb582
  41d763:	add    bl,BYTE PTR [edx-0x38]
  41d766:	pop    es
  41d767:	call   FWORD PTR [edx+0x1d]
  41d76a:	and    DWORD PTR [eax+ecx*2],0xfffffffe
  41d76e:	inc    ebp
  41d76f:	dec    edi
  41d770:	dec    ecx
  41d771:	adc    BYTE PTR [ebx-0x24],ch
  41d774:	fwait
  41d775:	push   ecx
  41d776:	xchg   esi,eax
  41d777:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d778:	jle    0x41d719
  41d77a:	sbb    eax,0x8e35631f
  41d77f:	iret   
  41d780:	jne    0x41d7f6
  41d782:	and    dl,BYTE PTR [edi]
  41d784:	mov    ch,al
  41d786:	add    edx,DWORD PTR gs:[eax+0x1ad7c73b]
  41d78d:	ds test eax,0x92cb6b8d
  41d793:	int    0xe1
  41d795:	shl    ch,1
  41d797:	pop    ecx
  41d798:	mov    dl,0xf2
  41d79a:	hlt    
  41d79b:	mov    edi,0x8fe10b7
  41d7a0:	inc    edx
  41d7a1:	and    esp,esi
  41d7a3:	jns    0x41d786
  41d7a5:	jnp    0x41d7ef
  41d7a7:	pop    ss
  41d7a8:	retf   
  41d7a9:	stc    
  41d7aa:	xor    BYTE PTR [edx-0x377125ac],ah
  41d7b0:	dec    ebp
  41d7b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7b2:	fisub  DWORD PTR [eax+0x5a]
  41d7b5:	aam    0xdd
  41d7b7:	dec    esi
  41d7b8:	loope  0x41d74f
  41d7ba:	adc    esp,DWORD PTR [edx+0x4e]
  41d7bd:	mov    edx,DWORD PTR [esi+0x5d67b3]
  41d7c3:	es pop esi
  41d7c5:	mov    bl,BYTE PTR [edx-0x71]
  41d7c8:	mov    ah,0xe7
  41d7ca:	or     ah,ch
  41d7cc:	pop    ds
  41d7cd:	inc    edi
  41d7ce:	aad    0x20
  41d7d0:	(bad)  
  41d7d2:	out    0x0,al
  41d7d4:	cmc    
  41d7d5:	test   eax,0xa3bc05b1
  41d7da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7dd:	jnp    0x41d7a8
  41d7df:	xchg   edi,eax
  41d7e0:	(bad)  
  41d7e1:	fstp   TBYTE PTR [eax]
  41d7e3:	pop    ecx
  41d7e4:	dec    edx
  41d7e5:	xchg   esi,eax
  41d7e6:	pop    ds
  41d7e7:	cmp    dh,BYTE PTR [ebp-0xa]
  41d7ea:	scas   al,BYTE PTR es:[edi]
  41d7eb:	icebp  
  41d7ec:	xchg   ebx,eax
  41d7ed:	jb     0x41d7d3
  41d7ef:	and    al,0xe3
  41d7f1:	(bad)  
  41d7f2:	(bad)  
  41d7f3:	jge    0x41d793
  41d7f5:	in     al,0xe2
  41d7f7:	or     DWORD PTR [eax-0x75fd2b10],ebp
  41d7fd:	sbb    al,0x28
  41d7ff:	shr    DWORD PTR [ecx-0x1b],0x23
  41d803:	push   ebp
  41d804:	xor    edi,DWORD PTR [ebx+0x3d0934e9]
  41d80a:	push   ss
  41d80b:	xchg   BYTE PTR [ecx],bh
  41d80d:	fidivr DWORD PTR [edx+ecx*1+0x6798ccf1]
  41d814:	mov    cl,0x95
  41d816:	sahf   
  41d817:	fnstenv [ebp+0x3f6f9b9c]
  41d81d:	dec    esp
  41d81e:	aaa    
  41d81f:	retf   0x7a4b
  41d822:	pop    ecx
  41d823:	sti    
  41d824:	and    esp,DWORD PTR ds:0x9f58deec
  41d82a:	mov    bl,0xf0
  41d82c:	gs mov ebx,0x4df63525
  41d832:	push   ds
  41d833:	sub    BYTE PTR [edi+0x5f3c1618],ah
  41d839:	or     DWORD PTR [ecx],ebx
  41d83b:	jg     0x41d845
  41d83d:	push   edx
  41d83e:	mov    eax,ds:0x58ca8399
  41d843:	pop    ecx
  41d844:	adc    BYTE PTR [ebx-0x6a3898da],0x93
  41d84b:	into   
  41d84c:	xchg   ebp,eax
  41d84d:	iret   
  41d84e:	hlt    
  41d84f:	xor    eax,0xc9d18f29
  41d854:	das    
  41d855:	stos   BYTE PTR es:[edi],al
  41d856:	add    DWORD PTR [edi+ebp*8-0x15],edx
  41d85a:	ror    dh,0x15
  41d85d:	sub    BYTE PTR [edx-0x5a],ah
  41d860:	fcmovbe st,st(1)
  41d862:	inc    ebp
  41d863:	inc    esp
  41d864:	fstp   TBYTE PTR [ebx+edx*1+0x6c]
  41d868:	xlat   BYTE PTR ds:[ebx]
  41d869:	mov    ah,0x89
  41d86b:	jecxz  0x41d8a2
  41d86d:	ja     0x41d852
  41d86f:	arpl   sp,ax
  41d871:	adc    esp,edi
  41d873:	std    
  41d874:	stos   DWORD PTR es:[edi],eax
  41d875:	pop    ebx
  41d876:	push   ebp
  41d877:	ficom  WORD PTR [esi+0x2f]
  41d87a:	js     0x41d8e3
  41d87c:	loop   0x41d80f
  41d87e:	jecxz  0x41d811
  41d880:	fsubr  QWORD PTR ds:0xf0f31961
  41d886:	adc    bl,BYTE PTR [edx-0xd1667ab]
  41d88c:	repz ds push ebp
  41d88f:	xor    eax,0xe9e2a524
  41d894:	repz and al,0x93
  41d897:	xchg   BYTE PTR [eax+0x3fd8466d],cl
  41d89d:	aaa    
  41d89e:	mov    al,ds:0xd5db2a57
  41d8a3:	push   ss
  41d8a4:	js     0x41d862
  41d8a6:	jmp    0x41d88a
  41d8a8:	xchg   ecx,eax
  41d8a9:	neg    BYTE PTR [ebx-0x5b]
  41d8ac:	fistp  WORD PTR [eax]
  41d8ae:	cmp    BYTE PTR [edx],bh
  41d8b0:	inc    edx
  41d8b1:	pop    esp
  41d8b2:	pop    ecx
  41d8b3:	aad    0xcb
  41d8b5:	sahf   
  41d8b6:	in     eax,dx
  41d8b7:	inc    esp
  41d8b8:	sub    al,0xd0
  41d8ba:	dec    esi
  41d8bb:	add    ebp,DWORD PTR [esi-0x4f]
  41d8be:	or     dl,BYTE PTR [ebx+0x648d030a]
  41d8c4:	push   cs
  41d8c5:	push   esp
  41d8c6:	retf   0x6389
  41d8c9:	and    ebx,eax
  41d8cb:	cmc    
  41d8cc:	into   
  41d8cd:	mul    ah
  41d8cf:	int3   
  41d8d0:	pop    esi
  41d8d1:	mov    esp,0xe656dc83
  41d8d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8d7:	fsub   QWORD PTR [ebx+edi*1-0x42]
  41d8db:	loopne 0x41d87b
  41d8dd:	in     eax,dx
  41d8de:	in     eax,0xa3
  41d8e0:	fwait
  41d8e1:	inc    esp
  41d8e2:	and    ebp,DWORD PTR [esi-0x36ad1a04]
  41d8e8:	xor    dh,BYTE PTR [edx+0x7113ba6a]
  41d8ee:	ret    
  41d8ef:	fadd   st(0),st
  41d8f1:	mov    al,ds:0xdb8661c3
  41d8f6:	mov    ebx,0x5aeea6ba
  41d8fb:	pop    edi
  41d8fc:	in     al,0x9b
  41d8fe:	jmp    0x41d904
  41d900:	out    0xde,eax
  41d902:	and    BYTE PTR [eax+eax*8-0x6f5496b6],al
  41d909:	loope  0x41d897
  41d90b:	aad    0xd0
  41d90d:	(bad)
  41d911:	jg     0x41d94b
  41d913:	lods   eax,DWORD PTR ds:[esi]
  41d914:	(bad)  
  41d915:	div    DWORD PTR [ebp-0x59c379ea]
  41d91b:	mov    eax,0xba149487
  41d920:	(bad)  
  41d921:	adc    al,0xf3
  41d923:	jp     0x41d926
  41d925:	sub    DWORD PTR [eax+ecx*1+0x627df0dd],esi
  41d92c:	mov    ebx,0x2f65c265
  41d931:	and    BYTE PTR [edx],ah
  41d933:	pop    es
  41d934:	adc    al,BYTE PTR [esp+edi*2]
  41d937:	imul   esi,edi,0x5
  41d93a:	and    al,0x17
  41d93c:	mov    WORD PTR [ebp-0x3b],fs
  41d93f:	aam    0x96
  41d941:	stc    
  41d942:	repz ss push edx
  41d945:	ret    0x1a
  41d948:	in     eax,dx
  41d949:	aad    0xac
  41d94b:	sub    cl,BYTE PTR [ebp-0x7d15ec8d]
  41d951:	arpl   WORD PTR [ebx-0x4ed53e68],di
  41d957:	push   edx
  41d958:	call   0x7512392a
  41d95d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d95e:	cmp    al,0x9f
  41d960:	ror    DWORD PTR [ebp-0x1],cl
  41d963:	sbb    BYTE PTR [ebx+ecx*1],0xbd
  41d967:	aad    0x8
  41d969:	jge    0x41d94c
  41d96b:	mov    fs,WORD PTR [edx-0x66df5d2d]
  41d971:	fs test eax,0x44c92eb4
  41d977:	lea    ebx,[ebp+0x3b831914]
  41d97d:	and    ch,BYTE PTR [ebp-0xe]
  41d980:	xor    dh,BYTE PTR [ecx+0x5538184c]
  41d986:	cwde   
  41d987:	dec    DWORD PTR [ebp+0x26e8e06e]
  41d98d:	imul   ecx,esp,0x67
  41d990:	jmp    0x41d9cc
  41d992:	jo     0x41d9c3
  41d994:	gs mov ecx,0x337d90f5
  41d99a:	cmp    DWORD PTR [edx],edi
  41d99c:	sbb    ecx,DWORD PTR [ebx]
  41d99e:	nop
  41d99f:	cmp    dh,ah
  41d9a1:	fs je  0x41d9df
  41d9a4:	(bad)  
  41d9a5:	call   0x8906:0x5682f770
  41d9ac:	pop    esi
  41d9ad:	sub    esp,esp
  41d9af:	mov    ah,0xc6
  41d9b1:	mov    WORD PTR [edx+ebp*1],cs
  41d9b4:	mov    ebp,0xe40001ce
  41d9b9:	or     ecx,ebp
  41d9bb:	leave  
  41d9bc:	add    al,0xbb
  41d9be:	pop    esp
  41d9bf:	out    0x4a,eax
  41d9c1:	xchg   ecx,eax
  41d9c2:	push   cs
  41d9c3:	call   0xc569:0x9739698
  41d9ca:	stc    
  41d9cb:	ins    BYTE PTR es:[edi],dx
  41d9cc:	pop    ebx
  41d9cd:	or     eax,0x68ad5a67
  41d9d2:	in     al,dx
  41d9d3:	int    0x3
  41d9d5:	inc    eax
  41d9d6:	push   ebx
  41d9d7:	add    DWORD PTR [edi+0x6252eb51],0x9b2c3816
  41d9e1:	cmp    ebx,DWORD PTR [eax+0x1b]
  41d9e4:	and    DWORD PTR [esi+0x1e],esp
  41d9e7:	xchg   BYTE PTR [ebx],bh
  41d9e9:	(bad)
  41d9ec:	test   al,0xa3
  41d9ee:	aas    
  41d9ef:	test   DWORD PTR [ecx-0x2d8e73f2],ecx
  41d9f5:	mov    dl,0x9a
  41d9f7:	adc    BYTE PTR [edi+edi*2+0x7e2b4b8b],0x2f
  41d9ff:	ja     0x41da11
  41da01:	and    esp,edx
  41da03:	idiv   BYTE PTR [ebp-0x23]
  41da06:	retf   
  41da07:	into   
  41da08:	cmp    dh,BYTE PTR [esi+0x34f9697f]
  41da0e:	and    DWORD PTR [edx-0x59],ebp
  41da11:	push   esi
  41da12:	dec    ebx
  41da13:	push   ss
  41da14:	sahf   
  41da15:	arpl   WORD PTR [ebx+0x1c],di
  41da18:	aam    0x32
  41da1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da1b:	add    eax,0x22e28719
  41da20:	push   ds
  41da21:	or     al,0x9
  41da23:	sbb    al,0x25
  41da25:	inc    esi
  41da26:	clc    
  41da27:	mov    DWORD PTR [edi+0x20],esp
  41da2a:	hlt    
  41da2b:	mov    eax,ds:0x2455bdbe
  41da30:	sbb    eax,0x19279b56
  41da35:	fcom   QWORD PTR [esi+0x50ab92e9]
  41da3b:	and    DWORD PTR [eax-0x2ae91dc],esi
  41da41:	fidivr WORD PTR [esi+0x185ba403]
  41da47:	mov    eax,esp
  41da49:	cmp    bl,BYTE PTR [edi+edi*4]
  41da4c:	ja     0x41d9e2
  41da4e:	mov    eax,ds:0x62885a3a
  41da53:	imul   esi,DWORD PTR [esi-0x3a],0xffffff95
  41da57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da58:	push   edx
  41da59:	and    eax,0x2fc5c7d1
  41da5e:	bound  eax,QWORD PTR [esi+0x49]
  41da61:	and    BYTE PTR [eax+0x29f81854],dh
  41da67:	je     0x41da6b
  41da69:	mov    al,ds:0xdcac132a
  41da6e:	mov    esi,0x7cac7f96
  41da73:	outs   dx,BYTE PTR ds:[esi]
  41da74:	xchg   edx,eax
  41da75:	and    eax,0x1ff44ead
  41da7a:	jnp    0x41da61
  41da7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da7d:	xor    edx,DWORD PTR [eax+eiz*8-0x46]
  41da81:	push   esi
  41da82:	mov    cl,bh
  41da84:	mov    edi,0x2056af8c
  41da89:	ret    
  41da8a:	jp     0x41dab2
  41da8c:	push   esp
  41da8d:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da8f:	jne    0x41da9f
  41da91:	rcr    BYTE PTR [ecx],0xdf
  41da94:	(bad)  
  41da95:	es test eax,0x9448c231
  41da9b:	and    DWORD PTR [esp+eiz*8],0xb76fc647
  41daa2:	jecxz  0x41dadc
  41daa4:	gs js  0x41da4a
  41daa7:	in     al,dx
  41daa8:	fistp  QWORD PTR [ecx+0x55]
  41daab:	es or  al,0xe9
  41daae:	jle    0x41da7f
  41dab0:	pop    edx
  41dab1:	loop   0x41dae2
  41dab3:	mov    al,ds:0x67c7ba94
  41dab8:	inc    ebp
  41dab9:	jge    0x41db2d
  41dabb:	mov    cl,0x37
  41dabd:	je     0x41da74
  41dabf:	push   ds
  41dac0:	imul   ebp,DWORD PTR [edx-0x38],0xffffffc7
  41dac4:	pop    eax
  41dac5:	(bad)  [edx]
  41dac7:	mov    edx,eax
  41dac9:	push   eax
  41daca:	ret    0x89b7
  41dacd:	lahf   
  41dace:	out    dx,al
  41dacf:	repz mov ds:0x483dc138,eax
  41dad5:	call   0x787cc6c4
  41dada:	fnsave [esi+0x6824b462]
  41dae0:	mov    bh,0xc4
  41dae2:	fst    QWORD PTR [edi+0x396917f0]
  41dae8:	dec    ebx
  41dae9:	call   0x3e07:0x2c41d45c
  41daf0:	xor    ecx,eax
  41daf2:	enter  0x8e95,0xfd
  41daf6:	ins    DWORD PTR es:[edi],dx
  41daf7:	mov    DWORD PTR [esi],ebp
  41daf9:	mov    cl,ah
  41dafb:	mov    edx,0x4ea24c07
  41db00:	push   0x60
  41db02:	fisttp DWORD PTR [esi+ecx*1]
  41db05:	mov    ds:0x728055ab,eax
  41db0a:	sub    DWORD PTR [ebp+0xd5323f6],0x470d35a4
  41db14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db15:	push   esp
  41db16:	sub    edx,DWORD PTR [ebx-0x21]
  41db19:	pop    edi
  41db1a:	adc    ch,BYTE PTR [esi]
  41db1c:	cwde   
  41db1d:	push   ebx
  41db1e:	sbb    ch,bl
  41db20:	cli    
  41db21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db22:	(bad)  
  41db23:	int3   
  41db24:	mov    esi,0x3b6f3f15
  41db29:	arpl   WORD PTR [ebp+0x526e55ce],bx
  41db2f:	mov    ecx,edi
  41db31:	push   esp
  41db32:	in     eax,0xd1
  41db34:	sub    al,0xe4
  41db36:	movups xmm1,XMMWORD PTR [ebp+0xe]
  41db3a:	cli    
  41db3b:	jns    0x41dba7
  41db3d:	dec    esp
  41db3e:	(bad)
  41db41:	cs nop
  41db43:	add    BYTE PTR [ebx],0xd5
  41db46:	mov    bh,0xbc
  41db48:	lea    esp,[edi-0x1303edeb]
  41db4e:	mov    ebp,0xfb6858e1
  41db53:	aaa    
  41db54:	fidivr WORD PTR [eax+0xbb21a29]
  41db5a:	jns    0x41daf3
  41db5c:	pop    esi
  41db5d:	xchg   BYTE PTR [ebx+0x5d],al
  41db60:	stos   BYTE PTR es:[edi],al
  41db61:	or     al,0x10
  41db63:	test   BYTE PTR [ecx+0x26b3dc7d],ah
  41db69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db6a:	imul   DWORD PTR [edi]
  41db6c:	mov    ebx,0xa58e5867
  41db71:	imul   ecx,ecx,0x22
  41db74:	cmp    ecx,DWORD PTR [edx+0x3b]
  41db77:	pop    ds
  41db78:	mov    edi,0x457dc4dd
  41db7d:	cld    
  41db7e:	test   al,0x56
  41db80:	and    eax,0xd87a97df
  41db85:	ja     0x41db32
  41db87:	push   0x564ade7c
  41db8c:	push   edi
  41db8d:	(bad)  
  41db8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db8f:	or     BYTE PTR [eax+0x1d41e18f],dl
  41db95:	xchg   BYTE PTR [esi+eax*4],bl
  41db98:	outs   dx,BYTE PTR ds:[esi]
  41db99:	xor    al,0x0
  41db9b:	fsub   DWORD PTR [edx]
  41db9d:	mov    ch,0x53
  41db9f:	fild   QWORD PTR [eax]
  41dba1:	imul   ebx,ebp,0x9dde81db
  41dba7:	int    0xee
  41dba9:	push   ebp
  41dbaa:	sbb    al,0x8
  41dbac:	cmp    DWORD PTR [ebx+0x56],edi
  41dbaf:	idiv   BYTE PTR [edx-0xe06c4f4]
  41dbb5:	or     al,BYTE PTR [eax+eax*8]
  41dbb8:	popa   
  41dbb9:	sbb    edi,ebp
  41dbbb:	sbb    ch,BYTE PTR [ebx+0x18d0141f]
  41dbc1:	out    dx,eax
  41dbc2:	jnp    0x41dbde
  41dbc4:	ins    BYTE PTR es:[edi],dx
  41dbc5:	inc    esp
  41dbc6:	inc    ebx
  41dbc7:	int    0x9c
  41dbc9:	push   ebx
  41dbca:	xchg   esp,eax
  41dbcb:	sbb    cl,BYTE PTR [esi]
  41dbcd:	ficom  DWORD PTR [eax+ebp*8-0x1e1badae]
  41dbd4:	xor    bh,BYTE PTR [ebx-0x74bfe8c1]
  41dbda:	mov    bl,0x48
  41dbdc:	cwde   
  41dbdd:	adc    eax,0xad3f73f6
  41dbe2:	pop    edi
  41dbe3:	cmp    BYTE PTR [edi],ch
  41dbe5:	inc    ebx
  41dbe6:	fild   DWORD PTR [esi]
  41dbe8:	lods   al,BYTE PTR ds:[esi]
  41dbe9:	dec    ecx
  41dbea:	arpl   WORD PTR [edi],bx
  41dbec:	rcl    DWORD PTR [edi-0x30],cl
  41dbef:	pop    ss
  41dbf0:	mov    DWORD PTR [ebp-0x10],eax
  41dbf3:	mov    ecx,DWORD PTR ds:0x42b1de
  41dbf9:	and    DWORD PTR ds:0x42b212,ecx
  41dbff:	xor    DWORD PTR [ebp-0x10],0xf89cb5a5
  41dc06:	mov    eax,DWORD PTR [ebp-0x18]
  41dc09:	mov    DWORD PTR ds:0x42b19a,0x12
  41dc13:	cmp    DWORD PTR ds:0x42b19a,0x0
  41dc1a:	je     0x41fffa
  41dc20:	cmp    DWORD PTR ds:0x42b19a,0x4
  41dc27:	jle    0x41fffa
  41dc2d:	jmp    0x41dc3b
  41dc32:	push   DWORD PTR [ebp-0x18]
  41dc35:	call   DWORD PTR ds:0x42b2f2
  41dc3b:	cmp    DWORD PTR ds:0x42b19a,0x5
  41dc42:	jne    0x41dc57
  41dc48:	xor    ecx,ecx
  41dc4a:	add    ecx,DWORD PTR ds:0x42b19a
  41dc50:	dec    ecx
  41dc51:	mov    DWORD PTR ds:0x42b19a,ecx
  41dc57:	mov    ecx,DWORD PTR ds:0x42b19a
  41dc5d:	dec    ecx
  41dc5e:	mov    DWORD PTR ds:0x42b19a,ecx
  41dc64:	jmp    0x41dc13
  41dc69:	jmp    0x41fffa
  41dc6e:	push   cs
  41dc6f:	mov    BYTE PTR [edi-0x79d57893],0x82
  41dc76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc77:	mov    dl,0xfb
  41dc79:	cs xchg ecx,eax
  41dc7b:	(bad)  
  41dc7c:	sub    esi,ebx
  41dc7e:	jp     0x41dc5b
  41dc80:	add    BYTE PTR [ebx-0x7c7ca1f1],0x55
  41dc87:	sub    BYTE PTR [edx-0x2e],ch
  41dc8a:	pop    ecx
  41dc8b:	cld    
  41dc8c:	jno    0x41dcb3
  41dc8e:	call   0x6f65:0x27d317e4
  41dc95:	popf   
  41dc96:	push   esi
  41dc97:	mov    ds:0xb56c52b7,eax
  41dc9c:	push   ecx
  41dc9d:	fs xchg ebx,eax
  41dc9f:	aas    
  41dca0:	sbb    BYTE PTR ds:0xa33586e9,ch
  41dca6:	push   ebp
  41dca7:	scas   al,BYTE PTR es:[edi]
  41dca8:	mov    al,0xe2
  41dcaa:	jle    0x41dc79
  41dcac:	inc    esp
  41dcad:	pop    eax
  41dcae:	in     eax,dx
  41dcaf:	ficomp WORD PTR [edi-0x77]
  41dcb2:	push   esp
  41dcb3:	ret    
  41dcb4:	nop
  41dcb5:	pop    ds
  41dcb6:	sub    al,0xd0
  41dcb8:	fcomp  DWORD PTR [eax+0x62]
  41dcbb:	stc    
  41dcbc:	pop    esi
  41dcbd:	push   eax
  41dcbe:	cmc    
  41dcbf:	mov    al,BYTE PTR [edx-0x3243d604]
  41dcc5:	fsubp  st(5),st
  41dcc7:	xchg   edi,eax
  41dcc8:	jae    0x41dcb3
  41dcca:	and    eax,0x22b8c5e8
  41dccf:	xchg   edi,eax
  41dcd0:	push   ebp
  41dcd1:	mov    bh,0x74
  41dcd3:	mov    BYTE PTR ds:0x9e7cbb31,0x1a
  41dcda:	cs cs stc 
  41dcdd:	fisub  WORD PTR [eax-0x16]
  41dce0:	(bad)  
  41dce1:	xor    eax,DWORD PTR [edi+0x5e]
  41dce4:	jmp    0xc653d6fc
  41dce9:	hlt    
  41dcea:	mov    edi,DWORD PTR [edi]
  41dcec:	retf   0x4535
  41dcef:	icebp  
  41dcf0:	loope  0x41dd00
  41dcf2:	mov    ebp,0xa4a09fd9
  41dcf7:	and    al,0x36
  41dcf9:	xor    DWORD PTR [eax+0x60],ecx
  41dcfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcfd:	mov    bh,0x1f
  41dcff:	lods   eax,DWORD PTR ds:[esi]
  41dd00:	jmp    0x44355b09
  41dd05:	aam    0x57
  41dd07:	xor    al,0x86
  41dd09:	test   BYTE PTR [esi-0x1719167],dh
  41dd0f:	pop    ss
  41dd10:	xchg   esi,eax
  41dd11:	nop
  41dd12:	mov    DWORD PTR [ebx-0x4a9cac4b],esp
  41dd18:	call   0x66c9:0x257d62f0
  41dd1f:	cmp    cl,BYTE PTR [eax]
  41dd21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd22:	mov    esp,0xe5dbb879
  41dd27:	(bad)  
  41dd28:	retf   
  41dd29:	push   esp
  41dd2a:	stc    
  41dd2b:	arpl   cx,si
  41dd2d:	cld    
  41dd2e:	jge    0x41dcc4
  41dd30:	or     DWORD PTR [edi+0x147bd6bb],edi
  41dd36:	or     al,0x23
  41dd38:	icebp  
  41dd39:	xor    bh,bl
  41dd3b:	add    al,0x37
  41dd3d:	jno    0x41dd5e
  41dd3f:	stos   DWORD PTR es:[edi],eax
  41dd40:	js     0x41ddb8
  41dd42:	(bad)  
  41dd43:	out    0x45,eax
  41dd45:	mov    esi,0x7e1cfacf
  41dd4a:	das    
  41dd4b:	jnp    0x41dd12
  41dd4d:	call   0x9cfe:0x6822d563
  41dd54:	ja     0x41dd7c
  41dd56:	xlat   BYTE PTR ds:[ebx]
  41dd57:	shl    DWORD PTR [ecx-0x62d0200d],1
  41dd5d:	popf   
  41dd5e:	and    DWORD PTR [edi],esp
  41dd60:	(bad)  
  41dd61:	out    dx,eax
  41dd62:	in     al,0xc9
  41dd64:	(bad)  
  41dd65:	xor    ah,al
  41dd67:	fistp  QWORD PTR [ebp-0x43832011]
  41dd6e:	fwait
  41dd6f:	je     0x41dddb
  41dd71:	xchg   ecx,eax
  41dd72:	dec    eax
  41dd73:	mov    ebx,0xf5e656c9
  41dd78:	sbb    ax,0x9c14
  41dd7c:	pop    edi
  41dd7d:	jecxz  0x41dd09
  41dd7f:	mov    esp,0xdb54451b
  41dd84:	sbb    bl,bl
  41dd86:	mov    al,0x55
  41dd88:	xor    ebp,DWORD PTR [edx+0x2]
  41dd8b:	push   eax
  41dd8c:	fcomp  DWORD PTR ds:0x1e3021f0
  41dd92:	inc    esi
  41dd93:	add    eax,0xa899bde
  41dd98:	lahf   
  41dd99:	adc    ebx,DWORD PTR [esi+0x6f5df811]
  41dd9f:	leave  
  41dda0:	dec    edx
  41dda1:	xchg   esp,eax
  41dda2:	mov    cl,0x6e
  41dda4:	jmp    0x41dd66
  41dda6:	stos   DWORD PTR es:[edi],eax
  41dda7:	mov    bh,0xd9
  41dda9:	les    ebx,FWORD PTR [eax]
  41ddab:	popa   
  41ddac:	xchg   edi,eax
  41ddad:	and    DWORD PTR [edi+0x22],0x27
  41ddb1:	sahf   
  41ddb2:	sub    DWORD PTR [edx],ecx
  41ddb4:	pop    ebp
  41ddb5:	test   ebp,esi
  41ddb7:	test   DWORD PTR [edi-0x2e],ebx
  41ddba:	sub    BYTE PTR [edi],al
  41ddbc:	test   BYTE PTR [ebx],al
  41ddbe:	adc    BYTE PTR [eax+0x49],bh
  41ddc1:	and    al,0x56
  41ddc3:	adc    al,0xc7
  41ddc5:	mul    BYTE PTR [ecx-0x7d9c49cf]
  41ddcb:	mov    cl,0xe7
  41ddcd:	into   
  41ddce:	push   esi
  41ddcf:	icebp  
  41ddd0:	scas   al,BYTE PTR es:[edi]
  41ddd1:	rcr    BYTE PTR [edi],1
  41ddd3:	xchg   esi,eax
  41ddd4:	jg     0x41dd8b
  41ddd6:	cmp    eax,0x2040f9da
  41dddb:	fnstcw WORD PTR [eax+0x171f06b6]
  41dde1:	aas    
  41dde2:	(bad)  
  41dde3:	sbb    dl,BYTE PTR [edx+0x76cec564]
  41dde9:	(bad)  
  41ddeb:	push   ds
  41ddec:	mov    esp,0xd75e3b06
  41ddf1:	je     0x41de06
  41ddf3:	daa    
  41ddf4:	or     al,0x91
  41ddf6:	ss cmp cl,cl
  41ddf9:	test   eax,0x1cf6071c
  41ddfe:	stos   DWORD PTR es:[edi],eax
  41ddff:	xor    al,0x2
  41de01:	(bad)  
  41de02:	mov    ebx,0xf7793075
  41de07:	rol    DWORD PTR [ecx-0x3afbc7e9],1
  41de0d:	sub    ebx,DWORD PTR [di+0x2068]
  41de12:	lods   al,BYTE PTR ds:[esi]
  41de13:	jnp    0x41ddf5
  41de15:	mov    esp,es
  41de17:	xor    eax,0xb64d977
  41de1c:	ficomp WORD PTR [ecx+edx*8+0x46]
  41de20:	cli    
  41de21:	add    BYTE PTR [esi],0xf2
  41de24:	pop    ebp
  41de25:	sub    eax,0x52ea476a
  41de2a:	or     DWORD PTR [edx+edx*2-0x1d],ebx
  41de2e:	repnz cmp BYTE PTR [edi+0x1c93cc0e],dl
  41de35:	inc    DWORD PTR [eax+0x5c5929df]
  41de3b:	dec    edx
  41de3c:	push   ebp
  41de3d:	xlat   BYTE PTR ds:[ebx]
  41de3e:	retf   
  41de3f:	xchg   dx,ax
  41de41:	fbstp  TBYTE PTR [ebx-0x482fc040]
  41de47:	std    
  41de48:	xor    BYTE PTR [edx+0x186d23f8],0xcc
  41de4f:	pop    esp
  41de50:	jb     0x3bb407ea
  41de56:	stos   BYTE PTR es:[edi],al
  41de57:	addr16 std 
  41de59:	in     al,dx
  41de5a:	fst    DWORD PTR [edi-0x21b4b93f]
  41de60:	das    
  41de61:	inc    ebp
  41de62:	iret   
  41de63:	(bad)  
  41de64:	push   edx
  41de65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de66:	idiv   BYTE PTR [eax]
  41de68:	fcmovnbe st,st(5)
  41de6a:	mov    BYTE PTR [ebx+ebp*1-0x17b3e72d],0x20
  41de72:	pop    ds
  41de73:	jmp    0x41de3e
  41de75:	hlt    
  41de76:	js     0x41dec1
  41de78:	sub    ecx,DWORD PTR [edx+0x3db7eff]
  41de7e:	mov    ebp,0xb7d56a3c
  41de83:	mov    WORD PTR [ebx+0xe],fs
  41de86:	loopne 0x41de56
  41de88:	push   edi
  41de89:	arpl   bx,cx
  41de8b:	inc    esp
  41de8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de8d:	jb     0x41deba
  41de8f:	pusha  
  41de90:	je     0x41de52
  41de92:	jnp    0x41de84
  41de94:	mov    eax,0xdfd2f3e7
  41de99:	xor    al,cl
  41de9b:	int3   
  41de9c:	iret   
  41de9d:	stc    
  41de9e:	enter  0x1c8a,0xe5
  41dea2:	mov    ch,0x9a
  41dea4:	popf   
  41dea5:	mov    ecx,0x77616a3
  41deaa:	cwde   
  41deab:	push   0xffffffa8
  41dead:	push   0x7c
  41deaf:	out    0xd6,al
  41deb1:	dec    ebx
  41deb2:	pusha  
  41deb3:	xchg   ebp,eax
  41deb4:	repnz ror DWORD PTR [edi],1
  41deb7:	push   cs
  41deb8:	aad    0x2a
  41deba:	jp     0x41deb6
  41debc:	ja     0x41de82
  41debe:	call   0xdc90f6e8
  41dec3:	xor    DWORD PTR [edx-0x6c],0x57
  41dec7:	cmc    
  41dec8:	push   es
  41dec9:	jns    0x41dea4
  41decb:	push   0xffffff9f
  41decd:	lds    edi,FWORD PTR [ebp-0x5b1ee872]
  41ded3:	mov    WORD PTR [edx-0x4f5de7c0],es
  41ded9:	rcr    al,cl
  41dedb:	jle    0x41de7b
  41dedd:	cmp    al,0x9d
  41dedf:	pop    ecx
  41dee0:	cmp    cl,BYTE PTR [ebx]
  41dee2:	xor    eax,0xbe803770
  41dee7:	pop    edx
  41dee8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dee9:	clc    
  41deea:	jp     0x41de9e
  41deec:	mov    edx,0x11612189
  41def1:	loop   0x41de78
  41def3:	mov    ch,BYTE PTR [edi+edi*4-0x7640158e]
  41defa:	adc    eax,0x895fc94
  41deff:	xor    eax,DWORD PTR [edi-0x37]
  41df02:	jbe    0x41df06
  41df04:	and    ebx,esi
  41df06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df07:	dec    BYTE PTR [edi-0x18ede826]
  41df0d:	test   esp,esp
  41df0f:	xchg   DWORD PTR [eax+0x5fc32530],ebp
  41df15:	mov    ch,0x79
  41df17:	das    
  41df18:	cs pusha 
  41df1a:	cmp    ch,dh
  41df1c:	std    
  41df1d:	cmp    eax,0xcb0bf7a5
  41df22:	and    al,0x8f
  41df24:	mov    ecx,0x9f11e7f1
  41df29:	inc    eax
  41df2a:	mov    edx,0x5db9714f
  41df2f:	sbb    al,0x80
  41df31:	fadd   st,st(3)
  41df33:	arpl   WORD PTR [edx+eiz*8],sp
  41df36:	in     al,dx
  41df37:	fistp  WORD PTR [eax-0x1]
  41df3a:	fiadd  DWORD PTR [ecx+0x48]
  41df3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df3e:	add    ah,BYTE PTR [eax+esi*2-0x44]
  41df42:	jmp    DWORD PTR [edx-0x62c0c28a]
  41df48:	fwait
  41df49:	dec    esp
  41df4a:	mov    ?,WORD PTR [edi-0x3e]
  41df4d:	mov    dl,0x18
  41df4f:	jl     0x41dfbc
  41df51:	jle    0x41df03
  41df53:	scas   eax,DWORD PTR es:[edi]
  41df54:	push   eax
  41df55:	lods   eax,DWORD PTR ds:[esi]
  41df56:	inc    edi
  41df57:	cld    
  41df58:	stos   BYTE PTR es:[edi],al
  41df59:	add    eax,0x53ecaf3b
  41df5e:	dec    ecx
  41df5f:	(bad)  
  41df61:	fmul   DWORD PTR [esi+0x758931a5]
  41df67:	sub    edi,eax
  41df69:	pop    es
  41df6a:	(bad)  
  41df6b:	shl    ah,1
  41df6d:	jmp    0x41df88
  41df6f:	cld    
  41df70:	mov    ds:0x73350e73,eax
  41df75:	sub    al,0x65
  41df77:	out    0x6a,eax
  41df79:	ins    DWORD PTR es:[edi],dx
  41df7a:	adc    eax,0xf8cb5ef
  41df7f:	gs lock push edi
  41df82:	pop    ss
  41df83:	and    al,0xc7
  41df85:	cmp    ecx,DWORD PTR [ecx+0x61]
  41df88:	popf   
  41df89:	loop   0x41df27
  41df8b:	or     bh,BYTE PTR [ebp+0x4cd7eb04]
  41df91:	jmp    0x41dfad
  41df93:	fdivp  st(1),st
  41df95:	mov    al,0xbf
  41df97:	hlt    
  41df98:	or     al,0xea
  41df9a:	dec    edx
  41df9b:	cwde   
  41df9c:	test   DWORD PTR [edi+0x222ffc06],ecx
  41dfa2:	jp     0x41e009
  41dfa4:	pop    es
  41dfa5:	add    al,0xe6
  41dfa7:	add    BYTE PTR [ebx+0x43f89247],al
  41dfad:	cmp    BYTE PTR [edx-0x2f],dl
  41dfb0:	test   al,0xee
  41dfb2:	xlat   BYTE PTR ds:[ebx]
  41dfb3:	cmp    ebx,DWORD PTR [eax-0x270752ce]
  41dfb9:	loop   0x41dff5
  41dfbb:	xor    BYTE PTR [esi+eax*4-0x58a8bf23],dh
  41dfc2:	xchg   edx,eax
  41dfc3:	repz fwait
  41dfc5:	lods   eax,DWORD PTR ds:[esi]
  41dfc6:	es (bad) 
  41dfc8:	or     ebx,ebx
  41dfca:	fisubr WORD PTR [ebx+edx*2+0x5a]
  41dfce:	arpl   WORD PTR [ecx-0x32],cx
  41dfd1:	cmp    bh,BYTE PTR [esp+ecx*1-0x9]
  41dfd5:	jmp    0xf29010c0
  41dfda:	and    edx,DWORD PTR [esi+0x69]
  41dfdd:	adc    DWORD PTR [ebx+edx*1],ecx
  41dfe0:	cdq    
  41dfe1:	fld    TBYTE PTR [ebp-0x5e]
  41dfe4:	test   al,0x47
  41dfe6:	ins    BYTE PTR es:[edi],dx
  41dfe7:	ror    BYTE PTR [ecx-0x30],0x40
  41dfeb:	and    eax,0x15507882
  41dff0:	inc    esi
  41dff1:	out    0xab,al
  41dff3:	std    
  41dff4:	push   ss
  41dff5:	xchg   edx,eax
  41dff6:	xor    eax,0xc7fc0f02
  41dffb:	out    0xaa,eax
  41dffd:	fisubr WORD PTR [eax-0xc]
  41e000:	jp     0x41e012
  41e002:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e003:	mov    edi,DWORD PTR [edx+edx*8-0x41]
  41e007:	jbe    0x41e042
  41e009:	fs fsubr st(2),st
  41e00c:	xchg   edi,eax
  41e00d:	mul    DWORD PTR [ebx]
  41e00f:	mov    eax,0xabee6ed5
  41e014:	jp     0x41e064
  41e016:	imul   edx,DWORD PTR [eax],0x24bac991
  41e01c:	lea    edi,[ebp+0x1d]
  41e01f:	addr16 and al,0x62
  41e022:	mov    bl,0x36
  41e024:	sbb    ecx,DWORD PTR [esi+0x6259f7f]
  41e02a:	in     al,0x7
  41e02c:	in     eax,dx
  41e02d:	ins    DWORD PTR es:[edi],dx
  41e02e:	das    
  41e02f:	cmp    DWORD PTR [esi],0x4f
  41e032:	lock xchg DWORD PTR [edi],esi
  41e035:	cmp    BYTE PTR [edi+0x55],dh
  41e038:	sbb    al,0x4
  41e03a:	aaa    
  41e03b:	leave  
  41e03c:	jns    0x41e09f
  41e03e:	mov    dl,0x11
  41e040:	out    dx,al
  41e041:	xlat   BYTE PTR ds:[ebx]
  41e042:	adc    dh,BYTE PTR [eax]
  41e044:	cmp    DWORD PTR [esp+edi*1],0x7c
  41e048:	lahf   
  41e049:	scas   al,BYTE PTR es:[edi]
  41e04a:	mov    esp,0x24320111
  41e04f:	bound  edx,QWORD PTR [ecx+0x41]
  41e052:	arpl   WORD PTR [edx-0x9],bx
  41e055:	mov    dh,0x33
  41e057:	cwde   
  41e058:	jnp    0x41e0c8
  41e05a:	jbe    0x41e01a
  41e05c:	shl    DWORD PTR [eax],cl
  41e05e:	push   ebx
  41e05f:	inc    eax
  41e060:	aad    0x92
  41e062:	cli    
  41e063:	or     al,0x13
  41e065:	add    al,0x18
  41e067:	rcl    bl,0x85
  41e06a:	ret    
  41e06b:	test   al,0x9
  41e06d:	jae    0x41e087
  41e06f:	mov    edi,0x7cb75b0c
  41e074:	xor    BYTE PTR [esi+0x7631d2ab],0x63
  41e07b:	shr    DWORD PTR [edx+edi*1],0x9f
  41e07f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e080:	jecxz  0x41e0e3
  41e082:	jns    0x41e0d2
  41e084:	mov    dh,0x4a
  41e086:	add    eax,0x9d04c54a
  41e08b:	fs cld 
  41e08d:	cmp    al,0x89
  41e08f:	push   esp
  41e090:	imul   esi,eax,0xfe87c28c
  41e096:	leave  
  41e097:	gs inc ecx
  41e099:	or     cl,al
  41e09b:	imul   esp,DWORD PTR [ebx+0x58],0x2a48f382
  41e0a2:	inc    edi
  41e0a3:	test   ch,bh
  41e0a5:	lea    edx,[edx]
  41e0a7:	jp     0x41e064
  41e0a9:	inc    eax
  41e0aa:	add    al,0xed
  41e0ac:	(bad)  
  41e0ad:	clc    
  41e0ae:	and    DWORD PTR [eax+0x7a96336d],ebp
  41e0b4:	push   eax
  41e0b5:	jno    0x41e0b8
  41e0b7:	and    ah,bh
  41e0b9:	fistp  WORD PTR ds:0xf60ed383
  41e0bf:	gs nop
  41e0c1:	fldcw  WORD PTR [ebx+0x6f]
  41e0c4:	dec    dh
  41e0c6:	(bad)  
  41e0c7:	jb     0x41e0d3
  41e0c9:	adc    eax,0xf6fb1469
  41e0ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0cf:	scas   al,BYTE PTR es:[edi]
  41e0d0:	jb     0x41e088
  41e0d2:	jo     0x41e147
  41e0d4:	jbe    0x41e075
  41e0d6:	outs   dx,DWORD PTR ds:[esi]
  41e0d7:	sub    DWORD PTR [esi+ecx*1+0x55],edi
  41e0db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0dc:	enter  0xf06e,0xa5
  41e0e0:	fldcw  WORD PTR ds:0x14f2cd31
  41e0e6:	and    DWORD PTR [ecx+0x5687ac49],esp
  41e0ec:	or     DWORD PTR [ebx-0x5a9b05e6],ecx
  41e0f2:	sar    BYTE PTR [ebx-0xd],cl
  41e0f5:	(bad)  
  41e0f6:	cmp    eax,0x1ac28343
  41e0fb:	mov    gs,WORD PTR [esi+esi*1+0x12]
  41e0ff:	xchg   edi,eax
  41e100:	je     0x41e15e
  41e102:	(bad)  
  41e103:	cmp    al,0x43
  41e105:	mov    dl,0xd0
  41e107:	xchg   esi,eax
  41e108:	stos   DWORD PTR es:[edi],eax
  41e109:	mov    al,ds:0x92a503a1
  41e10e:	setnp  bh
  41e111:	dec    edx
  41e112:	les    edx,FWORD PTR [ecx]
  41e114:	ror    BYTE PTR [eax+0xa91d68c],0x50
  41e11b:	outs   dx,DWORD PTR ds:[esi]
  41e11c:	push   eax
  41e11d:	cmp    al,0xd1
  41e11f:	xor    esi,DWORD PTR [ebx]
  41e121:	aaa    
  41e122:	jle    0x41e182
  41e124:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e125:	dec    eax
  41e126:	call   FWORD PTR [edi]
  41e128:	out    dx,al
  41e129:	cs iret 
  41e12b:	nop
  41e12c:	pop    esp
  41e12d:	mov    edx,0x229768df
  41e132:	outs   dx,DWORD PTR ds:[esi]
  41e133:	test   DWORD PTR [edi+0x24],0x6a9ea37d
  41e13a:	cmp    DWORD PTR [ecx+0x30d82cda],edx
  41e140:	jmp    0xb2e:0xa9ab9b07
  41e147:	stc    
  41e148:	add    ebp,DWORD PTR [edi]
  41e14a:	push   ecx
  41e14b:	sbb    al,0xf6
  41e14e:	int    0xdd
  41e150:	jmp    0x41e141
  41e152:	shr    cl,0xcb
  41e155:	cmp    esp,ebp
  41e157:	xchg   DWORD PTR [eax+ebx*8],eax
  41e15a:	pop    eax
  41e15b:	jne    0x41e11d
  41e15d:	cs and eax,0x993f5972
  41e163:	fiadd  WORD PTR [edi+0x7b]
  41e167:	sbb    DWORD PTR [edi-0x1798c68e],edx
  41e16d:	cld    
  41e16e:	sub    esp,DWORD PTR [eax+0x3]
  41e171:	add    DWORD PTR [eax],ecx
  41e173:	mov    ds:0x1fe60de,eax
  41e178:	ror    DWORD PTR [ebx+ecx*1-0x37],cl
  41e17c:	dec    esp
  41e17d:	inc    edx
  41e17e:	push   0xffffffb3
  41e180:	imul   esi,DWORD PTR [edx-0x1a253519],0xce4fae5a
  41e18a:	cmp    bh,ch
  41e18c:	or     eax,DWORD PTR [ecx]
  41e18e:	xchg   ebp,eax
  41e18f:	(bad)  
  41e190:	add    al,BYTE PTR [edx+esi*1-0x44]
  41e194:	push   ss
  41e195:	sbb    DWORD PTR [eax+0x54],ebx
  41e198:	jnp    0x41e1a1
  41e19a:	push   ds
  41e19b:	mov    bh,0xd0
  41e19d:	jg     0x41e1a4
  41e19f:	repnz nop
  41e1a1:	jae    0x41e1a8
  41e1a3:	in     eax,0x38
  41e1a5:	mov    ?,edi
  41e1a7:	test   esi,0x49d769f6
  41e1ad:	aam    0xf
  41e1af:	cmp    al,0x64
  41e1b1:	out    dx,al
  41e1b2:	jno    0x41e175
  41e1b4:	or     BYTE PTR [edx+edx*8],0x6e
  41e1b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1b9:	(bad)  
  41e1ba:	push   0x7ac4c04b
  41e1bf:	sbb    BYTE PTR [ebx],dh
  41e1c1:	rcr    esp,cl
  41e1c3:	in     al,0x42
  41e1c5:	aam    0xb8
  41e1c7:	pop    eax
  41e1c8:	jno    0x41e243
  41e1ca:	xchg   ebx,eax
  41e1cb:	jmp    0x41e228
  41e1cd:	shr    dl,cl
  41e1cf:	in     eax,0x85
  41e1d1:	pop    edx
  41e1d2:	mov    eax,0x51cc7d1c
  41e1d7:	push   cs
  41e1d8:	(bad)  
  41e1d9:	cwde   
  41e1da:	xchg   edi,eax
  41e1db:	or     DWORD PTR ds:0x496c87af,edi
  41e1e1:	scas   eax,DWORD PTR es:[edi]
  41e1e2:	sbb    DWORD PTR [esi],0x391ded11
  41e1e8:	mov    DWORD PTR es:[eax-0x6237dc61],esi
  41e1ef:	xor    DWORD PTR [ecx],0x48c70554
  41e1f5:	cmp    eax,0x1b04e60d
  41e1fa:	pop    ecx
  41e1fb:	sbb    edi,eax
  41e1fd:	imul   edx,DWORD PTR [edx+ecx*2+0x5faef327],0x68
  41e205:	fadd   DWORD PTR [edi]
  41e207:	repnz and esi,DWORD PTR [ecx]
  41e20a:	push   ebp
  41e20b:	stos   DWORD PTR es:[edi],eax
  41e20c:	xchg   ebp,eax
  41e20d:	push   ebp
  41e20e:	inc    ebx
  41e20f:	shl    DWORD PTR ds:0x3bfc2b87,0x3c
  41e216:	mov    ch,0x4
  41e218:	shr    BYTE PTR [edx],0x23
  41e21b:	sub    eax,0x63c9bc32
  41e220:	xor    DWORD PTR [ecx-0x25cd4a3c],esp
  41e226:	mov    WORD PTR [edx+0x6d],es
  41e229:	sub    ebx,eax
  41e22b:	or     al,0x5
  41e22d:	push   esi
  41e22e:	lods   eax,DWORD PTR ds:[esi]
  41e22f:	push   ebp
  41e230:	cmp    DWORD PTR [ebx+ecx*4],esi
  41e233:	cwde   
  41e234:	mov    BYTE PTR [ebx+eiz*8-0x703bfd74],dh
  41e23b:	xchg   BYTE PTR ss:[edi],cl
  41e23e:	push   es
  41e23f:	or     al,0x16
  41e241:	add    edx,DWORD PTR [ecx]
  41e243:	jmp    0x46d6:0x6a84c086
  41e24a:	push   esi
  41e24b:	cmp    eax,0x47b82ece
  41e250:	mov    BYTE PTR [ebx+0xf],cl
  41e253:	retf   0x949c
  41e256:	or     dl,BYTE PTR [edx-0x24]
  41e259:	add    BYTE PTR [ecx+0x73],ah
  41e25c:	int    0x69
  41e25e:	ret    
  41e25f:	in     eax,0xeb
  41e261:	loopne 0x41e299
  41e263:	push   ebx
  41e264:	out    dx,eax
  41e265:	and    eax,0xe117f1af
  41e26a:	mov    dh,BYTE PTR [esi+0x3f459ac0]
  41e270:	into   
  41e271:	loope  0x41e2b2
  41e273:	popa   
  41e274:	(bad)  
  41e275:	xor    al,BYTE PTR [edi+0x1d6af9f0]
  41e27b:	rcr    BYTE PTR [ecx+ebp*1-0x5f],1
  41e27f:	stos   DWORD PTR es:[edi],eax
  41e280:	mov    edx,es
  41e282:	adc    DWORD PTR [ebp+0x844e5a7],edi
  41e288:	adc    eax,0x4d15ece0
  41e28d:	pop    ss
  41e28e:	xchg   DWORD PTR [edx],ecx
  41e290:	lds    ecx,FWORD PTR [esi-0x31]
  41e293:	and    BYTE PTR ss:[edx+eiz*1+0x70246938],dl
  41e29b:	iret   
  41e29c:	mov    edi,ecx
  41e29e:	leave  
  41e29f:	push   0x747ccb
  41e2a4:	and    BYTE PTR [ebp+ecx*4-0x49],bh
  41e2a8:	call   0x1de9df1e
  41e2ad:	jo     0x41e2f9
  41e2af:	mov    ebx,0xb613c7d6
  41e2b4:	ret    
  41e2b5:	test   eax,0x96f1696c
  41e2ba:	ror    BYTE PTR [eax+0x44e61d77],1
  41e2c0:	cli    
  41e2c1:	adc    eax,0x69f9b9f0
  41e2c6:	std    
  41e2c7:	or     al,0x9c
  41e2c9:	int    0x3e
  41e2cb:	(bad)  
  41e2cc:	cmp    al,0xe
  41e2ce:	repz sub DWORD PTR [ecx],ecx
  41e2d1:	retf   
  41e2d2:	jbe    0x41e319
  41e2d4:	jl     0x41e2f6
  41e2d6:	(bad)  
  41e2d7:	mov    ebp,0x1582057a
  41e2dc:	ror    dl,cl
  41e2de:	cld    
  41e2df:	add    eax,0x27c0838c
  41e2e4:	fistp  WORD PTR [esi-0x63]
  41e2e7:	and    al,BYTE PTR [edi]
  41e2e9:	js     0x41e324
  41e2eb:	xchg   ebp,eax
  41e2ec:	sub    DWORD PTR [esi-0x6],esi
  41e2ef:	js     0x41e2ae
  41e2f1:	sti    
  41e2f2:	jo     0x41e2fe
  41e2f4:	inc    ebx
  41e2f5:	out    0x3,eax
  41e2f7:	mov    dh,0x44
  41e2f9:	mov    dh,0x58
  41e2fb:	and    DWORD PTR [ebx+eax*4+0x35],ebx
  41e2ff:	add    ebx,DWORD PTR [edi+0x3e]
  41e302:	push   0x4db75567
  41e307:	sbb    al,0x9c
  41e309:	or     DWORD PTR [edx],ebp
  41e30b:	shr    BYTE PTR [ebx+esi*8],0xe3
  41e30f:	aad    0x89
  41e311:	lds    eax,FWORD PTR [ebx]
  41e313:	xchg   DWORD PTR [ecx],esi
  41e315:	inc    eax
  41e316:	inc    ecx
  41e317:	xor    al,BYTE PTR [ebp-0x35]
  41e31a:	push   ebp
  41e31b:	inc    edx
  41e31c:	mov    al,0xab
  41e31e:	stos   BYTE PTR es:[edi],al
  41e31f:	add    bh,bl
  41e321:	leave  
  41e322:	loop   0x41e2d4
  41e324:	inc    eax
  41e325:	hlt    
  41e326:	xchg   edx,eax
  41e327:	xor    al,0x78
  41e329:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e32a:	pop    edx
  41e32b:	int3   
  41e32c:	pusha  
  41e32d:	mov    ebp,0x2caabc2f
  41e332:	ret    
  41e333:	in     eax,dx
  41e334:	jns    0x41e340
  41e336:	push   0xffffffe2
  41e338:	push   ss
  41e339:	std    
  41e33a:	cld    
  41e33b:	or     esi,DWORD PTR [eax+0x68ad65f7]
  41e341:	dec    esi
  41e342:	rcl    dl,0xf1
  41e345:	das    
  41e346:	pop    esp
  41e347:	jg     0x41e3b7
  41e349:	cmp    eax,0xa5941ba
  41e34e:	xchg   ebp,eax
  41e34f:	dec    ecx
  41e350:	inc    ebx
  41e351:	mov    BYTE PTR [ebx+0x3b716560],ch
  41e357:	mov    ch,0xc8
  41e359:	pop    eax
  41e35a:	push   ecx
  41e35b:	adc    al,0xd2
  41e35d:	mov    ?,edi
  41e35f:	sbb    BYTE PTR [ecx+0x3e],0x78
  41e363:	icebp  
  41e364:	mov    ah,0x76
  41e366:	pop    edi
  41e367:	push   ebp
  41e368:	pop    ebx
  41e369:	add    BYTE PTR [esi],al
  41e36b:	leave  
  41e36c:	ja     0x41e37b
  41e36e:	or     esi,DWORD PTR [ebx+0x3c]
  41e371:	jle    0x41e32f
  41e373:	and    BYTE PTR [esp+eiz*2],bl
  41e376:	cmp    esp,DWORD PTR [edx+ebx*4-0x61]
  41e37a:	xchg   ecx,eax
  41e37b:	lods   al,BYTE PTR ds:[esi]
  41e37c:	and    BYTE PTR [edi-0x1d],0xc6
  41e380:	test   BYTE PTR [edx+0x75],ch
  41e383:	mov    al,0x87
  41e385:	test   eax,0x63c854e3
  41e38a:	pop    esp
  41e38b:	inc    eax
  41e38c:	xchg   ebx,eax
  41e38d:	jnp    0x41e3df
  41e38f:	ss in  al,dx
  41e391:	adc    BYTE PTR [edi],bh
  41e393:	pop    ebx
  41e394:	int3   
  41e395:	mov    eax,0x8e09c10c
  41e39a:	or     esp,ebp
  41e39c:	xchg   ecx,eax
  41e39d:	mov    es,esi
  41e39f:	ret    0x604
  41e3a2:	mov    ah,0x1a
  41e3a4:	sbb    bh,BYTE PTR [edx+0x42]
  41e3a7:	push   esi
  41e3a8:	dec    esp
  41e3a9:	popf   
  41e3aa:	xor    ch,BYTE PTR [edi-0x5b]
  41e3ad:	push   edx
  41e3ae:	pusha  
  41e3af:	xchg   edi,eax
  41e3b0:	ds popa 
  41e3b2:	nop
  41e3b3:	adc    ah,ah
  41e3b5:	das    
  41e3b6:	mov    bh,0xf5
  41e3b8:	mov    edx,0x16f5d3cb
  41e3bd:	lds    ebp,FWORD PTR [eax+0x77]
  41e3c0:	in     al,0xc6
  41e3c2:	xchg   ebp,eax
  41e3c3:	sbb    eax,0x7465e601
  41e3c8:	mov    ebp,0x7d52fdc8
  41e3cd:	and    BYTE PTR [eax+0x8],bl
  41e3d0:	outs   dx,DWORD PTR ds:[esi]
  41e3d1:	pop    esp
  41e3d2:	cmp    eax,0xffffff87
  41e3d5:	adc    eax,0x798f99e7
  41e3da:	les    ebp,FWORD PTR [edi+0x18]
  41e3dd:	mov    esp,0xfc6b5c93
  41e3e2:	add    eax,0x8928c54b
  41e3e7:	xor    DWORD PTR [ecx+0xe70a474],ebx
  41e3ed:	jne    0x41e3b6
  41e3ef:	outs   dx,DWORD PTR ds:[esi]
  41e3f0:	test   ah,bh
  41e3f2:	popf   
  41e3f3:	aas    
  41e3f4:	call   0xd55184d9
  41e3f9:	shl    DWORD PTR [eax],0xae
  41e3fc:	mov    ah,0xc3
  41e3fe:	pop    edx
  41e3ff:	in     al,dx
  41e400:	add    BYTE PTR [ecx-0x6e],dh
  41e403:	mov    eax,0xfa83c561
  41e408:	pop    ebx
  41e409:	cli    
  41e40a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e40b:	or     eax,0x5bea52b9
  41e410:	stos   BYTE PTR es:[edi],al
  41e411:	mov    ah,0x4c
  41e413:	paddb  mm1,QWORD PTR [edi]
  41e416:	pop    ebp
  41e417:	push   esp
  41e418:	shl    ebx,cl
  41e41a:	inc    ecx
  41e41b:	adc    BYTE PTR [ebp-0x691cd68c],ch
  41e421:	nop
  41e422:	fidivr DWORD PTR [edx-0x5f799ad6]
  41e428:	ja     0x41e3e2
  41e42a:	push   edi
  41e42b:	es cwde 
  41e42d:	push   esi
  41e42e:	sbb    DWORD PTR [ebx],edx
  41e430:	sbb    eax,0x58e1ac0e
  41e435:	arpl   WORD PTR [edx-0x573f5d09],bp
  41e43b:	mov    dl,cl
  41e43d:	stos   DWORD PTR es:[edi],eax
  41e43e:	jno    0x41e3dd
  41e440:	test   DWORD PTR [ebx],0x2901e823
  41e446:	aas    
  41e447:	shl    esi,cl
  41e449:	mov    cs,WORD PTR [ebx]
  41e44b:	fist   WORD PTR [esi+ebx*1-0x1e1b0116]
  41e452:	fdivr  DWORD PTR [esp+ebp*1]
  41e455:	jae    0x60457d98
  41e45b:	mov    ah,0x1d
  41e45d:	pop    ebx
  41e45e:	rcl    esp,cl
  41e460:	sar    BYTE PTR [eax+0x68abde3a],1
  41e466:	mov    ah,0x2c
  41e468:	lahf   
  41e469:	mov    edi,0xaf21637d
  41e46e:	mov    esp,0xaa3e7772
  41e473:	ret    0x52e9
  41e476:	scas   eax,DWORD PTR es:[edi]
  41e477:	fidiv  WORD PTR ds:0xdb5f3c4b
  41e47d:	sbb    al,0xda
  41e47f:	out    dx,al
  41e480:	mov    dl,dh
  41e482:	and    BYTE PTR [edx+0x1f3b925f],bl
  41e488:	inc    ebp
  41e489:	xlat   BYTE PTR ds:[ebx]
  41e48a:	cmp    DWORD PTR ss:[ecx-0x1a],0x41
  41e48f:	sub    edi,edx
  41e491:	ins    DWORD PTR es:[edi],dx
  41e492:	iret   
  41e493:	out    0xe8,al
  41e495:	xor    al,0x8f
  41e497:	pop    ecx
  41e498:	(bad)  
  41e499:	iret   
  41e49a:	push   ecx
  41e49b:	mov    ebp,0xb51c5796
  41e4a0:	mov    edi,0xa7febafc
  41e4a5:	shl    BYTE PTR [eax+edi*4],1
  41e4a8:	xor    DWORD PTR [edx+0x7a],ecx
  41e4ab:	inc    ebp
  41e4ac:	dec    ebx
  41e4ad:	sub    DWORD PTR [edi-0x53],ebp
  41e4b0:	cmp    DWORD PTR [ebx+ebp*8-0x703c8ec],eax
  41e4b7:	push   ecx
  41e4b8:	pop    ss
  41e4b9:	jl     0x41e4d2
  41e4bb:	mov    ch,0xc2
  41e4bd:	gs (bad) 
  41e4bf:	loope  0x41e458
  41e4c1:	dec    esp
  41e4c2:	mov    esp,0xfcd1b32c
  41e4c7:	or     BYTE PTR [ebx+0x66],ah
  41e4ca:	fsub   DWORD PTR [esi+edx*2+0x56]
  41e4ce:	loop   0x41e4b6
  41e4d0:	mov    fs,ebx
  41e4d2:	lea    ecx,[esi-0x5f]
  41e4d5:	inc    edi
  41e4d6:	jle    0x41e4ae
  41e4d8:	lea    ecx,[edi+0x67421fca]
  41e4de:	mov    ?,WORD PTR [ebx-0x6b0eb0ce]
  41e4e4:	jo     0x41e481
  41e4e6:	inc    BYTE PTR [edi-0x69]
  41e4e9:	push   0x3e
  41e4eb:	repz adc eax,0x5326b51d
  41e4f1:	popf   
  41e4f2:	test   ebx,0x94f44a6b
  41e4f8:	adc    eax,0x8cf1859f
  41e4fd:	sub    bh,BYTE PTR [edx+0x94b9005]
  41e503:	inc    sp
  41e505:	jmp    0xc269:0x965b2cbe
  41e50c:	jmp    0x41e4d4
  41e50e:	mov    ds:0x3276d471,eax
  41e513:	pop    ebx
  41e514:	xchg   ebp,eax
  41e515:	repnz or DWORD PTR [eax+0x10],eax
  41e519:	add    DWORD PTR [ebp+esi*2+0x5cb3afa1],ebp
  41e520:	test   DWORD PTR [edx-0xcaffb4d],edi
  41e526:	push   ss
  41e527:	pushf  
  41e528:	enter  0x665c,0xe2
  41e52c:	lea    esp,ds:0x7358beb8
  41e532:	or     DWORD PTR [ebx],0xbd0739e6
  41e538:	add    ah,BYTE PTR [esi+0xf4218bb]
  41e53e:	xchg   ebx,eax
  41e53f:	cmp    eax,0xc39c59c6
  41e544:	data16 jecxz 0x41e5a8
  41e547:	dec    edx
  41e548:	inc    ebp
  41e549:	pop    ebp
  41e54a:	cmp    dh,bh
  41e54c:	lods   eax,DWORD PTR ds:[esi]
  41e54d:	or     ebp,DWORD PTR [ebp-0x53]
  41e550:	cmp    esp,DWORD PTR [eax-0x23]
  41e553:	jmp    0x6a9c:0xae8bdfce
  41e55a:	and    eax,0x8aac5a3a
  41e55f:	mov    ah,0x10
  41e561:	repz hlt 
  41e563:	mov    ds:0x78bef7c5,eax
  41e568:	sbb    cl,BYTE PTR [ecx]
  41e56a:	shl    DWORD PTR [edi-0x57],0x8d
  41e56e:	xor    DWORD PTR [ebx],0xeddc8b41
  41e574:	mov    cl,0x25
  41e576:	sub    bl,al
  41e578:	jmp    0x451e4147
  41e57d:	int3   
  41e57e:	test   al,0x58
  41e580:	pop    es
  41e581:	mov    edi,0x813eb599
  41e586:	and    eax,0xfec9616c
  41e58b:	push   es
  41e58c:	dec    ecx
  41e58d:	cmc    
  41e58e:	jge    0x41e5e0
  41e590:	fild   WORD PTR [eax+0x36]
  41e593:	(bad)  
  41e594:	jns    0x41e520
  41e596:	out    dx,eax
  41e597:	adc    edx,edi
  41e599:	nop
  41e59a:	mov    edx,0x978e95a0
  41e59f:	dec    ebx
  41e5a0:	das    
  41e5a1:	in     al,0x98
  41e5a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5a4:	cmp    eax,0xc6a92a29
  41e5a9:	mov    cl,0xf3
  41e5ab:	mov    ebx,0x57086393
  41e5b0:	rol    bl,cl
  41e5b2:	jns    0x41e61a
  41e5b4:	jmp    0x41e5b4
  41e5b6:	mov    bh,BYTE PTR [eax+0x41]
  41e5b9:	adc    ecx,esi
  41e5bb:	mov    eax,DWORD PTR [edi]
  41e5bd:	fbstp  TBYTE PTR [ebx+ebp*4+0x4f93c66f]
  41e5c4:	fdiv   QWORD PTR [ebx-0x74a5684d]
  41e5ca:	xor    eax,0x4e4f8508
  41e5cf:	mov    eax,ds:0x8fc552d6
  41e5d4:	les    esp,FWORD PTR [ebp+esi*2+0x24d2fc3d]
  41e5db:	push   edx
  41e5dc:	ja     0x41e5ad
  41e5de:	sahf   
  41e5df:	je     0x41e621
  41e5e1:	push   ds
  41e5e2:	pop    ebp
  41e5e3:	inc    edi
  41e5e4:	jbe    0x41e5f0
  41e5e6:	push   eax
  41e5e7:	push   ebp
  41e5e8:	and    eax,0xc94f219a
  41e5ed:	stc    
  41e5ee:	and    BYTE PTR [ebx+0x40bf1959],cl
  41e5f4:	aad    0xb5
  41e5f6:	inc    eax
  41e5f7:	stc    
  41e5f8:	stc    
  41e5f9:	xor    ah,BYTE PTR [edi]
  41e5fb:	push   edx
  41e5fc:	add    DWORD PTR [eax],0x97e1abd9
  41e602:	jns    0x41e655
  41e604:	xchg   ebp,eax
  41e605:	pop    es
  41e606:	push   ss
  41e607:	mov    dl,0xe9
  41e609:	add    esp,DWORD PTR [esi-0x20d1934b]
  41e60f:	stc    
  41e610:	mov    dh,0xa6
  41e612:	repnz xor DWORD PTR [edx],ecx
  41e615:	popf   
  41e616:	mov    edi,0xc3d34675
  41e61b:	jae    0x41e648
  41e61d:	popa   
  41e61e:	xlat   BYTE PTR ds:[ebx]
  41e61f:	js     0x41e5a7
  41e621:	les    edi,FWORD PTR cs:[esi+0x2e]
  41e625:	mov    bh,0x1b
  41e627:	and    DWORD PTR [edx],esi
  41e629:	enter  0x7ec7,0x38
  41e62d:	es aaa 
  41e62f:	push   0xe4b05b90
  41e634:	adc    DWORD PTR [ebp+0x788e5d9e],0x39
  41e63b:	out    0x6,al
  41e63d:	ss jbe 0x41e6ac
  41e640:	jl     0x41e6a0
  41e642:	sbb    cl,BYTE PTR [ecx-0x40c7c046]
  41e648:	jae    0x41e68c
  41e64a:	ds jmp 0x8013:0x280640a2
  41e652:	cwde   
  41e653:	arpl   WORD PTR [esi+edx*2],cx
  41e656:	pop    ebp
  41e657:	add    edx,esi
  41e659:	repnz scas eax,DWORD PTR es:[edi]
  41e65b:	dec    esi
  41e65c:	mov    eax,0xb9d445d2
  41e661:	loope  0x41e66d
  41e663:	dec    eax
  41e664:	sahf   
  41e665:	push   ss
  41e666:	mov    bh,0xa9
  41e668:	and    al,0xe5
  41e66a:	lods   eax,DWORD PTR ds:[esi]
  41e66b:	adc    ebx,DWORD PTR [edx+edi*1+0x17]
  41e66f:	adc    DWORD PTR [ecx],edx
  41e671:	int3   
  41e672:	in     eax,0x80
  41e674:	or     bl,BYTE PTR [ecx-0x2d]
  41e677:	mov    al,0x83
  41e679:	(bad)  
  41e67a:	cmp    dl,ah
  41e67c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e67d:	sub    al,0x57
  41e67f:	imul   eax,DWORD PTR [eax-0x516cae53],0x8b29fe5b
  41e689:	sub    eax,DWORD PTR [esi+0x49]
  41e68c:	rcr    al,1
  41e68e:	ss adc edi,0x46cb8a41
  41e695:	xor    al,0x74
  41e697:	inc    ecx
  41e698:	out    dx,al
  41e699:	hlt    
  41e69a:	jl     0x41e6c5
  41e69c:	int3   
  41e69d:	cdq    
  41e69e:	mov    edi,eax
  41e6a0:	cmp    eax,0xffffff90
  41e6a3:	inc    esp
  41e6a4:	out    0xb5,eax
  41e6a6:	dec    edx
  41e6a7:	jl     0x41e6f6
  41e6a9:	push   edi
  41e6aa:	lahf   
  41e6ab:	int3   
  41e6ac:	lock jmp 0x4277:0xd9696112
  41e6b4:	mov    ebp,0x70134863
  41e6b9:	pop    es
  41e6ba:	lea    eax,ds:[edi]
  41e6bd:	jns    0x41e6c7
  41e6bf:	popa   
  41e6c0:	jne    0x41e740
  41e6c2:	retf   
  41e6c3:	and    BYTE PTR [ebx-0xd],al
  41e6c6:	and    BYTE PTR [ecx-0x1],0xb3
  41e6ca:	xlat   BYTE PTR ds:[ebx]
  41e6cb:	jne    0x41e716
  41e6cd:	jns    0x41e730
  41e6cf:	or     BYTE PTR [ebx-0x5104a3a4],bl
  41e6d5:	call   0x8341:0x6e077c4f
  41e6dc:	adc    esi,DWORD PTR [edx+0x37]
  41e6df:	jg     0x41e739
  41e6e1:	pop    ds
  41e6e2:	loope  0x41e69f
  41e6e4:	popf   
  41e6e5:	inc    esp
  41e6e6:	xor    al,0x90
  41e6e8:	imul   esp,DWORD PTR [ecx-0x21],0xffffffd6
  41e6ec:	pop    ds
  41e6ed:	and    ecx,DWORD PTR [edi+0x43]
  41e6f0:	pop    ecx
  41e6f1:	jle    0x41e72a
  41e6f3:	test   DWORD PTR ds:0xf956cb96,edi
  41e6f9:	push   ecx
  41e6fa:	cwde   
  41e6fb:	xchg   ebp,eax
  41e6fc:	sbb    DWORD PTR fs:[edi+0x52ae7928],esp
  41e703:	adc    ebx,edx
  41e705:	aaa    
  41e706:	mov    WORD PTR [ebp+0x77],?
  41e709:	or     BYTE PTR [edi],al
  41e70b:	mov    ebp,0xeaea1b70
  41e710:	in     eax,dx
  41e711:	jns    0x41e6e3
  41e713:	ret    
  41e714:	mov    ebx,0xa20d77d
  41e719:	stos   BYTE PTR es:[edi],al
  41e71a:	mov    edi,0x39dca9a5
  41e71f:	inc    ecx
  41e720:	or     eax,0xde04bb21
  41e725:	ds cdq 
  41e727:	out    dx,eax
  41e728:	dec    ebx
  41e729:	mov    ebp,ss
  41e72b:	in     eax,0xee
  41e72d:	jnp    0x41e72f
  41e72f:	mov    dl,0x6c
  41e731:	jno    0x41e757
  41e733:	jmp    0xc5b1:0xe1cede6e
  41e73a:	xchg   ecx,eax
  41e73b:	leave  
  41e73c:	mov    dh,0xcf
  41e73e:	add    eax,0xaa298f0f
  41e743:	mov    al,ds:0xc090c2e7
  41e748:	pop    esi
  41e749:	scas   eax,DWORD PTR es:[edi]
  41e74a:	rcr    BYTE PTR ds:0x32a6519d,1
  41e750:	jbe    0x41e711
  41e752:	fnstenv [ebx-0x3711e987]
  41e758:	loop   0x41e76d
  41e75a:	hlt    
  41e75b:	das    
  41e75c:	mov    ds:0x57baa735,al
  41e761:	repz jne 0x41e7c0
  41e764:	and    bh,0xeb
  41e767:	sbb    bh,bh
  41e769:	xchg   esi,eax
  41e76a:	jmp    0x35d5:0x787aeda2
  41e771:	xlat   BYTE PTR ds:[ebx]
  41e772:	ins    BYTE PTR es:[edi],dx
  41e773:	out    0x8a,al
  41e775:	rcr    edi,cl
  41e777:	sbb    al,0x31
  41e779:	sub    dl,al
  41e77b:	fild   QWORD PTR [ebp+ebx*2-0x3b]
  41e77f:	sub    BYTE PTR [eax+0x7e56fe6f],ch
  41e785:	repnz inc esi
  41e787:	push   esi
  41e788:	adc    DWORD PTR [ebx],ebp
  41e78a:	scas   eax,DWORD PTR es:[edi]
  41e78b:	sbb    esp,DWORD PTR [edi+eax*8+0x21a1fc6f]
  41e792:	out    dx,eax
  41e793:	add    eax,0x96f520dc
  41e798:	mov    esi,0x587b4b29
  41e79d:	mov    edi,0x1874f3e0
  41e7a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7a3:	dec    esi
  41e7a4:	cmp    DWORD PTR [ecx-0x20e1c4ab],ebp
  41e7aa:	ja     0x41e7ce
  41e7ac:	retf   0xae6b
  41e7af:	cmp    ebx,ecx
  41e7b1:	xchg   edx,eax
  41e7b2:	popa   
  41e7b3:	push   esi
  41e7b4:	ret    0x6401
  41e7b7:	pop    esp
  41e7b8:	xchg   edi,eax
  41e7b9:	lods   al,BYTE PTR ds:[esi]
  41e7ba:	imul   esi,esp,0xf3159fab
  41e7c0:	push   ds
  41e7c1:	pop    eax
  41e7c2:	adc    ebp,esi
  41e7c4:	int3   
  41e7c5:	popf   
  41e7c6:	fwait
  41e7c7:	retf   
  41e7c8:	call   FWORD PTR [ebp+0x1ca56e63]
  41e7ce:	cmc    
  41e7cf:	mov    eax,ds:0xde14a0d2
  41e7d4:	and    ebp,esp
  41e7d6:	mov    eax,es:0x584f2211
  41e7dc:	xor    al,0x38
  41e7de:	sbb    BYTE PTR [edx-0x10],al
  41e7e1:	js     0x41e862
  41e7e3:	nop
  41e7e4:	or     eax,0x649e2d11
  41e7e9:	inc    edi
  41e7ea:	test   BYTE PTR [ecx+0x19],0xe9
  41e7ee:	inc    esp
  41e7ef:	xor    eax,0x63f94523
  41e7f4:	cmp    al,0x3
  41e7f6:	push   ss
  41e7f7:	mov    fs,WORD PTR [esi]
  41e7f9:	and    BYTE PTR [edi+ebp*8-0x7e],al
  41e7fd:	jb     0x41e811
  41e7ff:	and    al,0x2d
  41e801:	pop    es
  41e802:	push   ds
  41e803:	sub    al,0xac
  41e805:	jl     0x41e7e6
  41e807:	adc    BYTE PTR [ecx],bh
  41e809:	mov    bl,0x86
  41e80b:	stos   DWORD PTR es:[edi],eax
  41e80c:	push   ebx
  41e80d:	and    BYTE PTR [eax+0x48],0xa4
  41e811:	fnstsw WORD PTR [eax+0x30]
  41e814:	cmp    ah,BYTE PTR [esi]
  41e816:	(bad)
  41e819:	cmp    eax,0xb76d4fc
  41e81e:	fdivr  st,st(3)
  41e820:	and    eax,0xa8466839
  41e825:	pop    ebx
  41e826:	cvtpi2ps xmm2,mm5
  41e829:	xchg   ebx,eax
  41e82a:	ins    BYTE PTR es:[edi],dx
  41e82b:	test   eax,0x1c943475
  41e830:	scas   al,BYTE PTR es:[edi]
  41e831:	mov    dl,0x9c
  41e833:	or     DWORD PTR [esi+0x5e],esi
  41e836:	xchg   ebx,eax
  41e837:	es xor al,dh
  41e83a:	push   edi
  41e83b:	mov    bl,0x64
  41e83d:	dec    edi
  41e83e:	pop    edx
  41e83f:	mov    edx,0xf602a3d1
  41e844:	pop    ecx
  41e845:	sbb    dl,BYTE PTR [eax+0xe06005d]
  41e84b:	jo     0x41e8a7
  41e84d:	mov    ah,0x46
  41e84f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e850:	sub    ebp,DWORD PTR [esp+esi*8]
  41e853:	out    dx,eax
  41e854:	pop    ebp
  41e855:	sti    
  41e856:	aam    0x98
  41e858:	popa   
  41e859:	sub    al,0x80
  41e85b:	inc    ebx
  41e85c:	aaa    
  41e85d:	leave  
  41e85e:	pop    ebp
  41e85f:	sbb    al,0xa3
  41e861:	js     0x41e810
  41e863:	push   esi
  41e864:	mov    ss,WORD PTR [esp+edx*4-0x4e]
  41e868:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e869:	mov    ecx,0x21afcaf0
  41e86e:	stos   BYTE PTR es:[edi],al
  41e86f:	push   ds
  41e870:	(bad)  
  41e871:	mov    edx,0xd4db90b3
  41e876:	clc    
  41e877:	sbb    eax,0x912b8402
  41e87c:	push   esi
  41e87d:	cli    
  41e87e:	inc    ebp
  41e87f:	into   
  41e880:	xlat   BYTE PTR es:[ebx]
  41e882:	aas    
  41e883:	mov    ah,0x8e
  41e885:	bound  edx,QWORD PTR [ebx+0x1d]
  41e888:	sub    DWORD PTR [ebp+0x22],0xc37971bf
  41e88f:	scas   eax,DWORD PTR es:[edi]
  41e890:	xor    al,BYTE PTR [ecx+esi*4]
  41e893:	retf   
  41e894:	push   ds
  41e895:	jle    0x41e85f
  41e897:	and    BYTE PTR [ebx-0x41],cl
  41e89a:	sbb    al,ch
  41e89c:	push   esi
  41e89d:	adc    ch,BYTE PTR [ebx+0x25]
  41e8a0:	cmp    DWORD PTR [ecx-0x7],eax
  41e8a3:	cld    
  41e8a4:	outs   dx,DWORD PTR ds:[esi]
  41e8a5:	outs   dx,BYTE PTR ds:[esi]
  41e8a6:	and    esi,DWORD PTR [ebx+eiz*1-0x45]
  41e8aa:	in     eax,dx
  41e8ab:	xor    BYTE PTR [eax],ah
  41e8ad:	scas   al,BYTE PTR es:[edi]
  41e8ae:	imul   edi,ecx,0xd
  41e8b1:	pop    ebx
  41e8b2:	inc    edi
  41e8b3:	cmp    al,0x5b
  41e8b5:	sub    al,0x38
  41e8b7:	ja     0x41e926
  41e8b9:	hlt    
  41e8ba:	jmp    0x5d98861a
  41e8bf:	lock rol DWORD PTR [ebp+0x6c69b942],1
  41e8c6:	clc    
  41e8c7:	xchg   esp,eax
  41e8c8:	in     al,0x9e
  41e8ca:	data16 shl BYTE PTR [esi+0x79],1
  41e8ce:	mov    edi,0x3d9ac87c
  41e8d3:	mov    ah,0x6
  41e8d5:	outs   dx,BYTE PTR ds:[esi]
  41e8d6:	jle    0x41e900
  41e8d8:	sbb    DWORD PTR [edx+ebp*1],0xb1225d3a
  41e8df:	dec    ecx
  41e8e0:	adc    ebx,DWORD PTR [ecx]
  41e8e2:	push   ecx
  41e8e3:	or     BYTE PTR [ebp-0x6f88c212],bh
  41e8e9:	and    BYTE PTR [ebp+0x61],ch
  41e8ec:	or     edi,ebp
  41e8ee:	push   edi
  41e8ef:	aam    0x1b
  41e8f1:	ss mov ecx,0x3a1af44
  41e8f7:	push   0x39
  41e8f9:	out    0x64,eax
  41e8fb:	icebp  
  41e8fc:	jecxz  0x41e889
  41e8fe:	mov    ebp,0xec0ac8a9
  41e903:	xchg   ebp,eax
  41e904:	mov    ebp,0x87c0dab3
  41e909:	push   cs
  41e90a:	(bad)  
  41e90b:	(bad)
  41e90f:	cmc    
  41e910:	(bad)  
  41e911:	pop    ss
  41e912:	and    al,0x7
  41e914:	std    
  41e915:	rcr    DWORD PTR [ecx+0x15],1
  41e918:	outs   dx,DWORD PTR ds:[esi]
  41e919:	fwait
  41e91a:	cmp    cl,al
  41e91c:	push   edx
  41e91d:	pop    ds
  41e91e:	mov    ebx,0xba66c4e1
  41e923:	(bad)  
  41e924:	hlt    
  41e925:	push   esp
  41e926:	(bad)  
  41e927:	cli    
  41e928:	xchg   esi,eax
  41e929:	push   ebp
  41e92a:	jb     0x41e967
  41e92c:	sar    BYTE PTR [ebp-0x66279674],1
  41e932:	in     eax,dx
  41e933:	shl    DWORD PTR [ebx],0x89
  41e936:	cmp    cl,dh
  41e938:	std    
  41e939:	loopne 0x41e997
  41e93b:	aaa    
  41e93c:	pop    ss
  41e93d:	pop    eax
  41e93e:	mov    dh,0xc9
  41e940:	jp     0x41e907
  41e942:	ror    DWORD PTR [ebx],0x61
  41e945:	cmp    DWORD PTR [edi-0x4e],ebp
  41e948:	push   ss
  41e949:	in     al,0x72
  41e94b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e94c:	xor    DWORD PTR [ebx],edi
  41e94e:	xor    edi,DWORD PTR [edi]
  41e950:	pop    ebp
  41e951:	or     DWORD PTR [edx],edx
  41e953:	xchg   ecx,eax
  41e954:	mov    ch,0x6a
  41e956:	test   DWORD PTR [edx],ecx
  41e958:	(bad)  
  41e959:	in     eax,dx
  41e95a:	cmc    
  41e95b:	xor    edx,DWORD PTR [eax+0x5e]
  41e95e:	sub    DWORD PTR [ebx+edi*1+0x42],esp
  41e962:	add    eax,0x42e601f1
  41e967:	mov    DWORD PTR [ebp+0x7b],ebx
  41e96a:	fs mov esp,0xf5cb05af
  41e970:	mov    ah,0xea
  41e972:	sub    ecx,eax
  41e974:	pop    edx
  41e975:	ss pop edx
  41e977:	mov    al,ds:0x71680241
  41e97c:	nop
  41e97d:	push   esp
  41e97e:	xlat   BYTE PTR ds:[ebx]
  41e97f:	xchg   esp,eax
  41e980:	mov    al,0x2b
  41e982:	call   ebx
  41e984:	test   cl,bl
  41e986:	inc    edi
  41e987:	enter  0xefca,0x9c
  41e98b:	jmp    0x387f8115
  41e990:	(bad)  
  41e991:	retf   
  41e992:	and    al,0x4d
  41e994:	dec    ecx
  41e995:	test   DWORD PTR [edi+ebx*8],eax
  41e998:	or     BYTE PTR [ebp-0x2a],cl
  41e99b:	inc    ebp
  41e99c:	daa    
  41e99d:	xchg   esi,eax
  41e99e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e99f:	mov    bl,0xaa
  41e9a1:	repz div BYTE PTR [ebp+0x2d649cd4]
  41e9a8:	pop    ds
  41e9a9:	fwait
  41e9aa:	nop
  41e9ab:	in     eax,dx
  41e9ac:	mov    dl,0xb0
  41e9ae:	sub    BYTE PTR [edx+ebx*8+0x1f],ah
  41e9b2:	add    bh,ah
  41e9b4:	leave  
  41e9b5:	aam    0xca
  41e9b7:	sub    eax,0xd9c0ba29
  41e9bc:	(bad)  
  41e9bd:	fidiv  DWORD PTR [ebx-0x45]
  41e9c0:	mov    es,WORD PTR [eax+eiz*8-0x4230fe7b]
  41e9c7:	outs   dx,DWORD PTR ds:[esi]
  41e9c8:	repnz popa 
  41e9ca:	sub    bh,BYTE PTR [edi-0x4be491f8]
  41e9d0:	lahf   
  41e9d1:	retf   
  41e9d2:	out    0xff,eax
  41e9d4:	scas   al,BYTE PTR es:[edi]
  41e9d5:	neg    esi
  41e9d7:	adc    BYTE PTR [ebp-0x10bd33ea],0x13
  41e9de:	xchg   esp,eax
  41e9df:	mov    al,0xad
  41e9e1:	sbb    al,0xac
  41e9e3:	push   eax
  41e9e4:	inc    ebp
  41e9e5:	cld    
  41e9e6:	mov    bl,0x48
  41e9e8:	faddp  st(4),st
  41e9ea:	xor    DWORD PTR [eax-0x58],edi
  41e9ed:	lds    esi,FWORD PTR [edi-0x5f3e02f2]
  41e9f3:	dec    esi
  41e9f4:	cmp    eax,0xc6b4ae44
  41e9f9:	mov    DWORD PTR [ecx-0x67],esi
  41e9fc:	stos   BYTE PTR es:[edi],al
  41e9fd:	int    0x56
  41e9ff:	push   esi
  41ea00:	je     0x41ea27
  41ea02:	or     dl,dl
  41ea04:	adc    BYTE PTR [eax-0x35d00074],al
  41ea0a:	sahf   
  41ea0b:	enter  0x6757,0xd3
  41ea0f:	cwde   
  41ea10:	xchg   esp,eax
  41ea11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea12:	das    
  41ea13:	ficom  DWORD PTR [ecx-0x1276f1ed]
  41ea19:	pop    eax
  41ea1a:	push   DWORD PTR [edi]
  41ea1c:	or     ebp,edx
  41ea1e:	stos   DWORD PTR es:[edi],eax
  41ea1f:	mov    ch,0xf8
  41ea21:	fs enter 0x2f0b,0xc1
  41ea26:	test   bl,ah
  41ea28:	cdq    
  41ea29:	test   al,0xbc
  41ea2b:	lods   al,BYTE PTR ds:[esi]
  41ea2c:	js     0x41ea0a
  41ea2e:	cmp    edi,eax
  41ea30:	jmp    0xde7a:0x53fee615
  41ea37:	stc    
  41ea38:	jle    0x41ea7a
  41ea3a:	(bad)  
  41ea3b:	xchg   edx,eax
  41ea3c:	dec    esp
  41ea3d:	jmp    0x41e9d0
  41ea3f:	imul   ebx,DWORD PTR [ebx-0x67cc7a5b],0x24e7e870
  41ea49:	pop    edx
  41ea4a:	mov    edx,0x6809673c
  41ea4f:	and    eax,0x66a78a14
  41ea54:	pop    esi
  41ea55:	in     eax,0x9b
  41ea57:	cmp    al,0xc9
  41ea59:	pop    esi
  41ea5a:	rol    BYTE PTR [edi],1
  41ea5c:	int3   
  41ea5d:	(bad)  
  41ea5e:	xor    BYTE PTR [eax],bl
  41ea60:	mov    bh,0xcc
  41ea62:	dec    ecx
  41ea63:	xor    eax,0xb4b738ba
  41ea68:	sub    dl,BYTE PTR [ebx-0x1e]
  41ea6b:	mov    ah,0x53
  41ea6d:	push   cs
  41ea6e:	xchg   ebx,eax
  41ea6f:	mov    WORD PTR [eax+0x75],fs
  41ea72:	pop    esp
  41ea73:	fwait
  41ea74:	jecxz  0x41ea1a
  41ea76:	into   
  41ea77:	inc    ebx
  41ea78:	clc    
  41ea79:	loop   0x41ea2e
  41ea7b:	sub    dl,0x1b
  41ea7e:	cwde   
  41ea7f:	dec    edx
  41ea80:	sbb    DWORD PTR [esi-0x2ec1263],esi
  41ea86:	je     0x41eb00
  41ea88:	ss xor eax,0x59807c72
  41ea8e:	pop    ds
  41ea8f:	call   0x1d498f3f
  41ea94:	mov    eax,0x4284ed7f
  41ea99:	jp     0x41ea2f
  41ea9b:	mov    cl,0x69
  41ea9d:	and    eax,DWORD PTR [ebx+esi*4+0x38e0eec6]
  41eaa4:	jb     0x41ea65
  41eaa6:	jno    0x41eaf6
  41eaa8:	mov    bl,0x11
  41eaaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eaab:	retf   0x7bd4
  41eaae:	push   ecx
  41eaaf:	es pop esp
  41eab1:	repnz mov bl,0x55
  41eab4:	mov    dh,0xf8
  41eab6:	xchg   edi,eax
  41eab7:	std    
  41eab8:	dec    esp
  41eab9:	js     0x41eae6
  41eabb:	sbb    dh,BYTE PTR [esi+edx*1-0x1a35d962]
  41eac2:	stos   DWORD PTR es:[edi],eax
  41eac3:	mov    ebx,0x78f4373b
  41eac8:	add    eax,0x2a83c1e
  41eacd:	(bad)  
  41eace:	adc    al,0xb4
  41ead0:	ret    0x8ff1
  41ead3:	ror    BYTE PTR [edi+0x44eede20],cl
  41ead9:	push   esi
  41eada:	mov    edi,0x82c4ecc4
  41eadf:	xchg   esp,eax
  41eae0:	mov    edi,0x269c18bb
  41eae5:	sub    dl,ch
  41eae7:	inc    esi
  41eae8:	sbb    cl,BYTE PTR [ecx]
  41eaea:	push   esp
  41eaeb:	(bad)  
  41eaec:	scas   al,BYTE PTR es:[edi]
  41eaed:	push   ebx
  41eaee:	jnp    0x41eaa9
  41eaf0:	pop    ecx
  41eaf1:	jno    0x41eabe
  41eaf3:	in     al,dx
  41eaf4:	pop    ds
  41eaf5:	inc    edx
  41eaf6:	inc    edi
  41eaf7:	xchg   ebx,eax
  41eaf8:	int    0x5b
  41eafa:	or     bh,BYTE PTR [esi-0x6e1d40b1]
  41eb00:	xchg   edi,eax
  41eb01:	enter  0xa129,0x0
  41eb05:	test   BYTE PTR [eax+esi*2+0x39],cl
  41eb09:	nop
  41eb0a:	jp     0x41eaf0
  41eb0c:	inc    ebp
  41eb0d:	mov    ds:0x9b3fccbe,eax
  41eb12:	out    dx,eax
  41eb13:	mov    ah,0x14
  41eb15:	mov    eax,0x62ff6801
  41eb1a:	mov    dl,0xdc
  41eb1c:	push   es
  41eb1d:	int    0x62
  41eb1f:	leave  
  41eb20:	out    dx,eax
  41eb21:	mov    ah,bh
  41eb23:	mov    ds:0xc96b8042,al
  41eb28:	gs cmp ebx,eax
  41eb2b:	mov    bl,0x1b
  41eb2d:	sub    BYTE PTR [eax-0x3a],dh
  41eb30:	retf   
  41eb31:	ds add ebx,0xb3cbd1d
  41eb38:	(bad)  
  41eb39:	daa    
  41eb3a:	push   0x2134556c
  41eb3f:	adc    ebx,ebx
  41eb41:	std    
  41eb42:	add    BYTE PTR [edi+0x60198a91],dh
  41eb48:	sbb    bh,BYTE PTR [edi+0x541a8e2a]
  41eb4e:	or     edi,ebp
  41eb50:	or     eax,0xa614e413
  41eb55:	icebp  
  41eb56:	enter  0x8620,0x89
  41eb5a:	fisubr DWORD PTR [eax-0x49]
  41eb5d:	pusha  
  41eb5e:	pop    ebx
  41eb5f:	xchg   BYTE PTR [ebx+0x5eb51901],cl
  41eb65:	lods   al,BYTE PTR ds:[esi]
  41eb66:	xchg   ebx,eax
  41eb67:	jne    0x41ebb7
  41eb69:	xchg   esi,eax
  41eb6a:	mov    WORD PTR [eax+0x218e8243],cs
  41eb70:	jno    0x41eb1f
  41eb72:	inc    al
  41eb74:	cmp    ch,BYTE PTR [ebp+0x46]
  41eb77:	or     BYTE PTR [edi],dh
  41eb79:	inc    esp
  41eb7a:	loope  0x41eb3a
  41eb7c:	mov    eax,ds:0x5b82d188
  41eb81:	lea    eax,[eax+0x2b]
  41eb84:	ret    
  41eb85:	cs cmp eax,0x35c39914
  41eb8b:	mov    edx,DWORD PTR [ecx]
  41eb8d:	mov    esp,0xd796a4a5
  41eb92:	inc    ebp
  41eb93:	inc    esp
  41eb94:	jae    0x41eb61
  41eb96:	xor    edi,DWORD PTR [edx-0x65753b53]
  41eb9c:	test   eax,0x16d94c75
  41eba1:	cwde   
  41eba2:	jp     0x41ec1d
  41eba4:	mov    bh,0xf7
  41eba6:	xchg   edi,eax
  41eba7:	outs   dx,DWORD PTR ds:[esi]
  41eba8:	sub    DWORD PTR [ecx],eax
  41ebaa:	mov    ds:0x8db6991,eax
  41ebaf:	(bad)  [ebp+0x4422717]
  41ebb5:	mov    eax,0x878c14d8
  41ebba:	fmul   st(2),st
  41ebbc:	adc    edx,eax
  41ebbe:	fist   WORD PTR [esi+eax*8-0x3bff225b]
  41ebc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebc6:	inc    ebx
  41ebc7:	mov    dl,0x3f
  41ebc9:	xor    eax,0x4d324d92
  41ebce:	inc    esi
  41ebcf:	mov    ah,BYTE PTR [edi-0xc31cadd]
  41ebd5:	dec    esp
  41ebd6:	jmp    0xc86138f1
  41ebdb:	in     al,0x23
  41ebdd:	(bad)  
  41ebde:	xchg   edi,eax
  41ebdf:	xlat   BYTE PTR ds:[ebx]
  41ebe0:	mov    WORD PTR [eax],ds
  41ebe2:	jb     0x41ebd1
  41ebe4:	add    eax,0xcb8b5c82
  41ebe9:	(bad)  
  41ebea:	push   ecx
  41ebeb:	xchg   edx,eax
  41ebec:	lahf   
  41ebed:	test   al,0x84
  41ebef:	cmp    al,0x52
  41ebf1:	cmp    BYTE PTR [esi+edi*1-0x19ca9740],ch
  41ebf8:	loopne 0x41eb90
  41ebfa:	(bad)  
  41ebfb:	ds scas eax,DWORD PTR es:[edi]
  41ebfd:	shr    DWORD PTR [ecx],0x26
  41ec00:	shr    BYTE PTR [ecx-0x6f],0x21
  41ec04:	inc    ebx
  41ec05:	aaa    
  41ec06:	fiadd  WORD PTR [ebx-0x1d]
  41ec09:	outs   dx,BYTE PTR ds:[esi]
  41ec0a:	inc    edx
  41ec0b:	iret   
  41ec0c:	adc    DWORD PTR [ebp-0x6b92c10b],esp
  41ec12:	sub    DWORD PTR [edx+0x2],ebp
  41ec15:	jne    0x41ebd7
  41ec17:	dec    esp
  41ec18:	test   BYTE PTR [ebx-0x65f5a9ff],ch
  41ec1e:	test   eax,0x6de4b259
  41ec23:	jge    0x41ec24
  41ec25:	xor    eax,0xe99de438
  41ec2a:	mov    dl,0x90
  41ec2c:	rcl    DWORD PTR [esi-0x4],cl
  41ec2f:	jne    0x41ec65
  41ec31:	inc    eax
  41ec32:	fnstenv [esi-0x3e48d3b1]
  41ec38:	push   esi
  41ec39:	idiv   ah
  41ec3b:	jae    0x41ec80
  41ec3d:	sar    BYTE PTR [edx],0xe8
  41ec40:	mov    ebp,0x25fbe194
  41ec45:	call   0x8a6f:0xcafc9d49
  41ec4c:	lahf   
  41ec4d:	inc    edi
  41ec4e:	das    
  41ec4f:	mov    BYTE PTR [edx+0x1d],cl
  41ec52:	jns    0x41ecc0
  41ec54:	pop    esp
  41ec55:	mov    bl,0x35
  41ec57:	sbb    ebx,ebx
  41ec59:	sbb    ah,bl
  41ec5b:	mov    ebx,0x25f53a5e
  41ec60:	(bad)  
  41ec61:	xchg   esp,eax
  41ec62:	ret    
  41ec63:	loop   0x41ecce
  41ec65:	xchg   esp,eax
  41ec66:	addr16 or al,0xb4
  41ec69:	in     al,0x15
  41ec6b:	push   esp
  41ec6c:	cmp    eax,0xa793ed63
  41ec71:	rol    bl,cl
  41ec73:	sub    eax,0xe5f987c4
  41ec78:	int3   
  41ec79:	sahf   
  41ec7a:	les    edi,FWORD PTR [eax+0x25dee9f7]
  41ec80:	adc    DWORD PTR [edi-0x64],ebx
  41ec83:	imul   ecx,DWORD PTR [ecx-0x46f65722],0x11beb67a
  41ec8d:	mov    ds:0x600d8aba,al
  41ec92:	sti    
  41ec93:	icebp  
  41ec94:	popa   
  41ec95:	mov    dl,0x6
  41ec97:	ja     0x41ec63
  41ec99:	out    dx,al
  41ec9a:	add    BYTE PTR [edi],ah
  41ec9c:	xchg   ebx,eax
  41ec9d:	xchg   esi,eax
  41ec9e:	sub    ch,BYTE PTR [esi]
  41eca0:	xor    al,bh
  41eca2:	out    0x9b,al
  41eca4:	je     0x41ec3e
  41eca6:	sbb    dl,al
  41eca8:	inc    ebx
  41eca9:	sub    al,0x21
  41ecab:	pop    esi
  41ecac:	aam    0x6e
  41ecae:	push   esi
  41ecaf:	scas   al,BYTE PTR es:[edi]
  41ecb0:	add    BYTE PTR [ebp-0x3c],dh
  41ecb3:	stos   DWORD PTR es:[edi],eax
  41ecb4:	aas    
  41ecb5:	sbb    DWORD PTR [ebx],0xffffffc9
  41ecb8:	clc    
  41ecb9:	pop    ebp
  41ecba:	pop    esi
  41ecbb:	cwde   
  41ecbc:	pop    eax
  41ecbd:	nop
  41ecbe:	mov    ah,0x57
  41ecc0:	sti    
  41ecc1:	sbb    edi,DWORD PTR [ebx]
  41ecc3:	test   BYTE PTR [eax],dl
  41ecc5:	fbstp  TBYTE PTR [eax-0x37a5f761]
  41eccb:	hlt    
  41eccc:	cmp    esp,0xf7d21eb0
  41ecd2:	(bad)  
  41ecd3:	xchg   esi,eax
  41ecd4:	jb     0x41ed3e
  41ecd6:	mov    ch,0xd0
  41ecd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ecd9:	cwde   
  41ecda:	paddw  mm6,QWORD PTR [edx-0x1134d5cd]
  41ece1:	mov    BYTE PTR [ecx],0x75
  41ece4:	push   edi
  41ece5:	add    BYTE PTR [edi],cl
  41ece7:	xor    esp,0xa0fcd08c
  41eced:	inc    edx
  41ecee:	sbb    BYTE PTR [edi+0x17399e05],cl
  41ecf4:	jmp    0xc1ad:0xce3f6e69
  41ecfb:	mov    DWORD PTR [ebp-0x65eb281b],ecx
  41ed01:	jmp    0x41eca1
  41ed03:	ret    
  41ed04:	xchg   ecx,eax
  41ed05:	xchg   ecx,eax
  41ed06:	add    BYTE PTR [edi],dl
  41ed08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed09:	sahf   
  41ed0a:	jne    0x41eccb
  41ed0c:	in     eax,0xa9
  41ed0e:	repnz (bad) 
  41ed10:	mov    ebp,0x869e1e2c
  41ed15:	mov    dh,0x99
  41ed17:	loope  0x41ecda
  41ed19:	jp     0x41ed5b
  41ed1b:	sub    BYTE PTR [ecx+0x4d],0xd8
  41ed1f:	stos   DWORD PTR es:[edi],eax
  41ed20:	cmp    al,0x7b
  41ed22:	loop   0x41eccb
  41ed24:	xchg   ebx,eax
  41ed25:	test   esp,eax
  41ed27:	pusha  
  41ed28:	jmp    0xeafab015
  41ed2d:	mov    dh,0x80
  41ed2f:	dec    esi
  41ed30:	retf   
  41ed31:	icebp  
  41ed32:	fxch   st(5)
  41ed34:	xor    cl,BYTE PTR ds:[ebx-0x6fb7e190]
  41ed3b:	das    
  41ed3c:	mov    al,ds:0xc85133ec
  41ed41:	sbb    eax,0xdb219148
  41ed46:	pop    edx
  41ed47:	and    BYTE PTR ds:0x44de7714,ah
  41ed4d:	pop    ebx
  41ed4e:	je     0x41edab
  41ed50:	pop    ds
  41ed51:	lock pop ebp
  41ed53:	(bad)
  41ed56:	and    al,0xf9
  41ed58:	jp     0x41ed62
  41ed5a:	out    dx,eax
  41ed5b:	out    0x6c,al
  41ed5d:	jge    0x41ed94
  41ed5f:	frstpm(287 only) 
  41ed61:	xor    eax,0xdc444abb
  41ed66:	mov    ebp,0x27f29b87
  41ed6b:	stc    
  41ed6c:	dec    eax
  41ed6d:	aam    0x28
  41ed6f:	int    0xcd
  41ed71:	loope  0x41edc2
  41ed73:	push   esi
  41ed74:	call   0xf27fcd76
  41ed79:	pop    edi
  41ed7a:	sub    DWORD PTR [eax],esp
  41ed7c:	cmp    DWORD PTR [ecx+edi*8+0x2582016d],ecx
  41ed83:	pop    eax
  41ed84:	call   0x423c:0x5fe5fb78
  41ed8b:	leave  
  41ed8c:	fisttp QWORD PTR [ebx+edi*1-0x14]
  41ed90:	push   esp
  41ed91:	xchg   edi,eax
  41ed92:	ins    BYTE PTR es:[edi],dx
  41ed93:	mov    eax,0x1eca767e
  41ed98:	mov    esp,DWORD PTR [ecx+0x331e42f5]
  41ed9e:	push   ebp
  41ed9f:	xchg   ebp,eax
  41eda0:	and    BYTE PTR [edx],dl
  41eda2:	shl    BYTE PTR [eax],cl
  41eda4:	xchg   ebp,eax
  41eda5:	sub    ch,BYTE PTR [eax]
  41eda7:	add    ecx,edi
  41eda9:	test   eax,0x25b1a8d5
  41edae:	lods   eax,DWORD PTR ds:[esi]
  41edaf:	cmp    DWORD PTR [esi+0x16ce7ae0],ebx
  41edb5:	fdiv   QWORD PTR [esi+edx*1]
  41edb8:	pusha  
  41edb9:	add    dl,dl
  41edbb:	xchg   edx,eax
  41edbc:	aas    
  41edbd:	imul   eax,DWORD PTR [ecx+0x5ebdea2d],0xffffffff
  41edc4:	mov    al,ds:0xf8c57091
  41edc9:	pop    edx
  41edca:	lods   eax,DWORD PTR ds:[esi]
  41edcb:	adc    eax,0x6789c3ba
  41edd0:	and    edi,DWORD PTR [ecx+ebp*2]
  41edd3:	out    dx,al
  41edd4:	mov    WORD PTR [edx+0x27],cs
  41edd7:	push   cs
  41edd8:	pop    ecx
  41edd9:	jo     0x41ed74
  41eddb:	or     eax,0x619e11a7
  41ede0:	lods   eax,DWORD PTR ds:[esi]
  41ede1:	push   ecx
  41ede2:	or     ah,dl
  41ede4:	in     eax,0xaa
  41ede6:	or     al,0x3d
  41ede8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ede9:	in     al,0x8a
  41edeb:	call   0xa099:0xab99a10e
  41edf2:	sbb    BYTE PTR [edx-0x28],bh
  41edf5:	test   DWORD PTR [esi-0x785b33cc],ebp
  41edfb:	nop
  41edfc:	in     al,0x20
  41edfe:	into   
  41edff:	inc    esi
  41ee00:	data16 jno 0x41ee7a
  41ee03:	into   
  41ee04:	dec    ebx
  41ee05:	dec    edi
  41ee06:	inc    ebp
  41ee07:	add    dl,BYTE PTR [ebp-0x16]
  41ee0a:	pop    eax
  41ee0b:	cmp    BYTE PTR [ecx],ah
  41ee0d:	stos   DWORD PTR es:[edi],eax
  41ee0e:	adc    al,0x6b
  41ee10:	push   cs
  41ee11:	mov    eax,ds:0x14265879
  41ee16:	fs aam 0xb1
  41ee19:	scas   al,BYTE PTR es:[edi]
  41ee1a:	inc    eax
  41ee1b:	rcr    BYTE PTR [esi-0x50c1a4b9],1
  41ee21:	leave  
  41ee22:	inc    edx
  41ee23:	sub    BYTE PTR [edi],dh
  41ee25:	mov    al,ds:0x2bb2eb49
  41ee2a:	mov    eax,0x9b022830
  41ee2f:	div    DWORD PTR ss:[eax+0x645aec45]
  41ee36:	sub    dh,BYTE PTR [eax+edx*8+0x62]
  41ee3a:	mov    ebp,DWORD PTR [eax]
  41ee3c:	mov    al,0x7f
  41ee3e:	push   esp
  41ee3f:	iret   
  41ee40:	aam    0xfb
  41ee42:	ret    
  41ee43:	push   DWORD PTR [edi-0x48]
  41ee46:	loop   0x41edf1
  41ee48:	jnp    0x41ee8f
  41ee4a:	and    al,0x8e
  41ee4c:	mov    ebx,0x51262faa
  41ee51:	jae    0x41edda
  41ee53:	shr    esp,0x8e
  41ee56:	in     eax,0x3f
  41ee58:	daa    
  41ee59:	adc    DWORD PTR [ebx+0x5a],esi
  41ee5c:	push   es
  41ee5d:	and    eax,0xd52ae3ec
  41ee62:	outs   dx,BYTE PTR ds:[esi]
  41ee63:	aam    0x92
  41ee65:	xchg   ecx,eax
  41ee66:	ss mov esp,0x72061986
  41ee6c:	jmp    0x5696:0xe762e06e
  41ee73:	ins    DWORD PTR es:[edi],dx
  41ee74:	pop    ebx
  41ee75:	fs add al,0x2c
  41ee78:	retf   0x7865
  41ee7b:	and    dl,bl
  41ee7d:	xchg   ebx,eax
  41ee7e:	(bad)  
  41ee7f:	jl     0x41ee49
  41ee81:	or     esp,esi
  41ee83:	aas    
  41ee84:	cmc    
  41ee85:	test   al,0x72
  41ee87:	jbe    0x41eead
  41ee89:	inc    ecx
  41ee8a:	loopne 0x41eed7
  41ee8c:	stos   DWORD PTR es:[edi],eax
  41ee8d:	jb     0x41ee1d
  41ee8f:	test   BYTE PTR [ebp-0x62483f1c],bh
  41ee95:	test   al,0x90
  41ee97:	enter  0xdb85,0xe3
  41ee9b:	ret    0x43a3
  41ee9e:	push   ebp
  41ee9f:	test   DWORD PTR [ecx+0x1cbc141a],ebx
  41eea5:	inc    esi
  41eea6:	mov    esi,0x39ca3a1f
  41eeab:	ds xchg ebx,eax
  41eead:	add    eax,0x644145ab
  41eeb2:	pop    edx
  41eeb3:	xchg   bh,ch
  41eeb5:	in     eax,dx
  41eeb6:	pop    ebp
  41eeb7:	mov    edi,0x3cff359b
  41eebc:	pop    ecx
  41eebd:	sti    
  41eebe:	ins    DWORD PTR es:[edi],dx
  41eebf:	inc    ecx
  41eec0:	inc    ebx
  41eec1:	arpl   WORD PTR [ebx],dx
  41eec3:	dec    esi
  41eec4:	shr    ebx,1
  41eec6:	mov    dl,0xb9
  41eec8:	fcom   DWORD PTR [edx]
  41eeca:	or     DWORD PTR [ebp+0x77],esi
  41eecd:	outs   dx,BYTE PTR ds:[esi]
  41eece:	mov    WORD PTR [eax+ebp*1+0xc],fs
  41eed2:	inc    ebp
  41eed3:	cmp    al,0xc5
  41eed5:	test   esi,ebp
  41eed7:	mov    edi,0xb88cc14a
  41eedc:	sbb    BYTE PTR [edi+0x8e7ec56],al
  41eee2:	pop    edi
  41eee3:	pop    esi
  41eee4:	pop    esi
  41eee5:	mov    ecx,0x54ccbff6
  41eeea:	jecxz  0x41eef2
  41eeec:	lods   eax,DWORD PTR ds:[esi]
  41eeed:	mov    cl,0xed
  41eeef:	inc    esi
  41eef0:	cwde   
  41eef1:	pushf  
  41eef2:	adc    ecx,DWORD PTR [edi+0x43ccac10]
  41eef8:	fnstenv [edi]
  41eefa:	pop    edi
  41eefb:	xor    eax,DWORD PTR [eax-0x5f212f41]
  41ef01:	jecxz  0x41eeb7
  41ef03:	(bad)  
  41ef04:	pusha  
  41ef05:	clc    
  41ef06:	mov    esi,esi
  41ef08:	and    al,0x97
  41ef0a:	aad    0xf1
  41ef0c:	pop    es
  41ef0d:	pop    ecx
  41ef0e:	addr16 aam 0x6a
  41ef11:	jl     0x41eee8
  41ef13:	outs   dx,BYTE PTR ds:[esi]
  41ef14:	test   DWORD PTR [esi-0x786077b4],edx
  41ef1a:	cli    
  41ef1b:	push   0x4d
  41ef1d:	shr    BYTE PTR [ecx-0x11],cl
  41ef20:	mov    ebx,0xd601c672
  41ef25:	cdq    
  41ef26:	adc    DWORD PTR [ebx-0x7886ad93],ebx
  41ef2c:	mov    bh,0x3e
  41ef2e:	out    0x71,al
  41ef30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef31:	(bad)  [eax+0xd4f0493]
  41ef37:	adc    al,0x54
  41ef39:	iret   
  41ef3a:	retf   0xff7b
  41ef3d:	dec    edi
  41ef3e:	push   edx
  41ef3f:	add    ebx,DWORD PTR ds:0x6b7e3451
  41ef45:	daa    
  41ef46:	nop
  41ef47:	adc    eax,0xdd6b72e8
  41ef4c:	call   0xf262c44f
  41ef51:	ret    
  41ef52:	jl     0x41ef66
  41ef54:	or     dh,BYTE PTR [ebx+0x7d]
  41ef57:	(bad)  [ebx-0x7314712e]
  41ef5d:	push   esi
  41ef5e:	jb     0x41eef5
  41ef60:	jp     0x41ef54
  41ef62:	int3   
  41ef63:	enter  0x98e3,0x28
  41ef67:	adc    eax,edx
  41ef69:	neg    BYTE PTR [esi+edx*1-0x1dfdc8b0]
  41ef70:	sti    
  41ef71:	pop    esp
  41ef72:	enter  0xcaa2,0xc0
  41ef76:	jmp    0xcf776907
  41ef7b:	out    dx,eax
  41ef7c:	mov    es,ecx
  41ef7e:	or     eax,0xcc8a7278
  41ef83:	scas   eax,DWORD PTR es:[edi]
  41ef84:	adc    DWORD PTR [eax],0x315aefc2
  41ef8a:	inc    esi
  41ef8b:	adc    edi,DWORD PTR [edx-0x1a]
  41ef8e:	popa   
  41ef8f:	add    al,BYTE PTR [esi+0x2ba068dd]
  41ef95:	or     DWORD PTR [edi-0x17],esp
  41ef98:	push   esp
  41ef99:	sub    cl,dh
  41ef9b:	shr    bh,1
  41ef9d:	je     0x41ef66
  41ef9f:	test   DWORD PTR [eax],ecx
  41efa1:	xor    DWORD PTR [edi-0x6d54a532],esp
  41efa7:	lods   eax,DWORD PTR ds:[esi]
  41efa8:	push   ebx
  41efa9:	imul   edx,DWORD PTR [ebx],0x747ad3ff
  41efaf:	loope  0x41ef53
  41efb1:	push   edx
  41efb2:	xchg   esp,eax
  41efb3:	pop    edx
  41efb4:	(bad)  
  41efb5:	out    dx,eax
  41efb6:	cmp    al,0x9c
  41efb8:	mov    esp,0x3340660b
  41efbd:	add    edi,DWORD PTR [eax]
  41efbf:	adc    cl,0xaa
  41efc2:	mov    ds:0x150f47a6,al
  41efc7:	repz sti 
  41efc9:	inc    eax
  41efca:	mov    edx,0x963dce33
  41efcf:	push   ss
  41efd0:	xchg   ecx,eax
  41efd1:	mov    dh,0xaf
  41efd3:	jo     0x41eff3
  41efd5:	mov    bh,BYTE PTR [ebx-0x33]
  41efd8:	stc    
  41efd9:	push   esi
  41efda:	jle    0x41effd
  41efdc:	bnd js 0x41f037
  41efdf:	jo     0x41efe0
  41efe1:	out    0xa2,eax
  41efe3:	into   
  41efe4:	add    eax,0x6001a113
  41efe9:	sahf   
  41efea:	mov    cl,0x14
  41efec:	sbb    BYTE PTR [bp+si+0x15],cl
  41eff0:	mov    esp,0x6bc11c28
  41eff5:	jae    0x41f017
  41eff7:	push   ss
  41eff8:	and    BYTE PTR [ecx+eiz*4-0x7fcc2327],ch
  41efff:	fldcw  WORD PTR [edx]
  41f001:	sbb    al,0x10
  41f003:	aam    0x65
  41f005:	mov    DWORD PTR [ebx+0xa],ebx
  41f008:	xor    al,0x7b
  41f00a:	add    ch,BYTE PTR [edi+ebx*4]
  41f00d:	popa   
  41f00e:	enter  0xcf52,0x9a
  41f012:	mov    ebx,0xe3a98607
  41f017:	inc    ecx
  41f018:	enter  0xb6a,0xbe
  41f01c:	push   ss
  41f01d:	sub    edi,esp
  41f01f:	mov    esp,0x91bf4aca
  41f024:	adc    eax,0x68efd739
  41f029:	push   ecx
  41f02a:	and    ecx,DWORD PTR [eax-0x34]
  41f02d:	aas    
  41f02e:	cs aas 
  41f030:	sub    eax,0xaf4a05a
  41f035:	or     bl,BYTE PTR [ebx-0x1d]
  41f038:	jb     0x41f0a2
  41f03a:	push   ds
  41f03b:	pop    eax
  41f03c:	sub    ebp,ecx
  41f03e:	imul   esp,ebp,0xffffffa1
  41f041:	push   ss
  41f042:	iret   
  41f043:	xchg   ecx,eax
  41f044:	dec    esi
  41f045:	lods   eax,DWORD PTR ds:[esi]
  41f046:	mov    esi,0x715c8cbf
  41f04b:	push   0xffffffc1
  41f04d:	mov    DWORD PTR [edx],esp
  41f04f:	xchg   BYTE PTR [eax-0x67e19836],bh
  41f055:	adc    BYTE PTR [ecx+0x31d2407f],0x0
  41f05c:	ja     0x41f043
  41f05e:	pop    esi
  41f05f:	dec    edx
  41f060:	mov    edx,0x69226d84
  41f065:	fcomp  QWORD PTR [eax+esi*2]
  41f068:	fimul  DWORD PTR ds:0x2868cd7b
  41f06e:	inc    ecx
  41f06f:	fmul   QWORD PTR [edx]
  41f071:	add    DWORD PTR [esi],edi
  41f073:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f074:	int    0xb9
  41f076:	mov    cl,0x1f
  41f078:	pop    ebp
  41f079:	aam    0x62
  41f07b:	xchg   ebp,eax
  41f07c:	sbb    DWORD PTR [esp+ebx*2+0x323b3ca3],0x71
  41f084:	repz cmp al,0x57
  41f087:	bound  ecx,QWORD PTR [eax]
  41f089:	imul   edx,DWORD PTR [ebx],0x7f
  41f08c:	into   
  41f08d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f08e:	int3   
  41f08f:	jae    0x41f110
  41f091:	call   0x797cb776
  41f096:	shl    bl,cl
  41f098:	clc    
  41f099:	(bad)
  41f09e:	add    dh,BYTE PTR [esp+edx*8+0x71]
  41f0a2:	inc    edi
  41f0a3:	scas   eax,DWORD PTR es:[edi]
  41f0a4:	nop
  41f0a5:	ins    BYTE PTR es:[edi],dx
  41f0a6:	sub    BYTE PTR [esi],ch
  41f0a8:	shr    DWORD PTR [ebx+0x7b],1
  41f0ab:	stos   DWORD PTR es:[edi],eax
  41f0ac:	pop    ebp
  41f0ad:	xor    al,0x7f
  41f0af:	xchg   ecx,eax
  41f0b0:	mov    eax,ds:0xef31db69
  41f0b5:	sbb    eax,0x4867f4d6
  41f0ba:	lea    ecx,[edx-0x70a731eb]
  41f0c0:	cmp    esi,ebp
  41f0c2:	cli    
  41f0c3:	iret   
  41f0c4:	dec    edx
  41f0c5:	pop    es
  41f0c6:	ret    0x44cd
  41f0c9:	stos   DWORD PTR es:[edi],eax
  41f0ca:	int3   
  41f0cb:	mov    ecx,0x6a283a78
  41f0d0:	add    ecx,DWORD PTR [edi+0x5acb7835]
  41f0d6:	mov    ds:0xb47605e1,eax
  41f0db:	sbb    DWORD PTR [edx+ebx*1+0x41],0x60
  41f0e0:	dec    edi
  41f0e1:	cwde   
  41f0e2:	fisubr WORD PTR [eax-0x57e22547]
  41f0e8:	and    eax,0xae9a4bfe
  41f0ed:	and    BYTE PTR [edi+0xc773c24],dh
  41f0f3:	mov    esi,0x45a5d429
  41f0f8:	push   0xffffffef
  41f0fa:	lahf   
  41f0fb:	pop    edi
  41f0fc:	call   0x2dd4f797
  41f101:	lods   al,BYTE PTR ds:[esi]
  41f102:	clc    
  41f103:	test   DWORD PTR [edi-0x27],eax
  41f106:	xlat   BYTE PTR ds:[ebx]
  41f107:	ds repz mov eax,0x55a347c8
  41f10e:	xchg   edi,eax
  41f10f:	adc    al,0xb0
  41f111:	dec    ebp
  41f112:	and    al,BYTE PTR [edi+eiz*8-0x7bf8505b]
  41f119:	shl    BYTE PTR [ecx+0x578d43e7],0xea
  41f120:	lds    ecx,FWORD PTR [edi]
  41f122:	jnp    0x41f0ce
  41f124:	loope  0x41f162
  41f126:	aaa    
  41f127:	jns    0x41f11a
  41f129:	out    dx,eax
  41f12a:	repnz cmp BYTE PTR [ebx-0x4f3fc38c],0x44
  41f132:	and    edx,DWORD PTR [ecx-0x2d39298b]
  41f138:	or     ebx,DWORD PTR [ebp+edi*8-0xf]
  41f13c:	out    0x81,eax
  41f13e:	xor    eax,0x3aa85cf8
  41f143:	imul   edi,DWORD PTR [edi],0x46
  41f146:	sub    ebp,ecx
  41f148:	(bad)  
  41f149:	fnstsw WORD PTR [ecx-0x194a2cec]
  41f14f:	cmp    BYTE PTR [eax+0x52a48df],al
  41f155:	das    
  41f156:	je     0x41f17c
  41f158:	adc    eax,0x3845626c
  41f15d:	call   0xc23e:0x5fe120e6
  41f164:	ins    DWORD PTR es:[edi],dx
  41f165:	outs   dx,DWORD PTR ds:[esi]
  41f166:	push   0x19dc5d63
  41f16b:	adc    al,0x11
  41f16d:	popf   
  41f16e:	(bad)  
  41f16f:	scas   al,BYTE PTR es:[edi]
  41f170:	lods   eax,DWORD PTR ds:[esi]
  41f171:	(bad)  
  41f172:	out    dx,eax
  41f173:	mov    bl,0xf3
  41f175:	sub    BYTE PTR [eax+0x54a900dc],al
  41f17b:	cmc    
  41f17c:	inc    ebp
  41f17d:	mov    al,ds:0xecad5f26
  41f182:	cmp    BYTE PTR fs:[ecx+0x36b213d1],dl
  41f189:	add    al,0xff
  41f18b:	mov    ebp,fs
  41f18d:	jecxz  0x41f12c
  41f18f:	lea    ebp,[ecx+0x1c6e5cd5]
  41f195:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f196:	aad    0xd5
  41f198:	in     al,0xd4
  41f19a:	popa   
  41f19b:	pop    ebp
  41f19c:	push   es
  41f19d:	xchg   esi,eax
  41f19e:	sbb    al,0x3b
  41f1a0:	test   bh,bh
  41f1a2:	xlat   BYTE PTR ds:[ebx]
  41f1a3:	mov    ebp,0x2d03e004
  41f1a8:	jle    0x41f1b7
  41f1aa:	xchg   ebx,eax
  41f1ab:	mov    cl,0x76
  41f1ad:	scas   eax,DWORD PTR es:[edi]
  41f1ae:	ret    
  41f1af:	sahf   
  41f1b0:	repnz sti 
  41f1b2:	out    0x70,al
  41f1b4:	les    ebp,FWORD PTR [ebp+0x6d]
  41f1b7:	fst    DWORD PTR [ecx+0x63224796]
  41f1bd:	sbb    al,0x26
  41f1bf:	mov    dh,BYTE PTR [eax-0x47]
  41f1c2:	cld    
  41f1c3:	jecxz  0x41f177
  41f1c5:	adc    DWORD PTR [ebp-0x1a],ecx
  41f1c8:	arpl   bp,sp
  41f1ca:	inc    ebx
  41f1cb:	mov    ebx,0x7ae914fb
  41f1d0:	stc    
  41f1d1:	add    eax,0xfdf9d04a
  41f1d6:	mov    DWORD PTR [edi],edx
  41f1d8:	pop    ebp
  41f1d9:	mov    al,0x7
  41f1db:	adc    eax,0x9f28271
  41f1e0:	pop    ecx
  41f1e1:	sub    ecx,ebx
  41f1e3:	xchg   ebx,eax
  41f1e4:	push   esi
  41f1e5:	xor    cl,al
  41f1e7:	xchg   esp,eax
  41f1e8:	mov    bl,0x5d
  41f1ea:	pop    ss
  41f1eb:	pop    ecx
  41f1ec:	xor    DWORD PTR [ecx-0x77df0521],0x20251c25
  41f1f6:	test   DWORD PTR [esi],ebx
  41f1f8:	and    al,ch
  41f1fa:	mov    BYTE PTR [esp+ebx*2+0x3c9d8355],dh
  41f201:	xchg   edi,eax
  41f202:	popa   
  41f203:	fs jg  0x41f21a
  41f206:	and    DWORD PTR [ebp+0x62],esi
  41f209:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f20a:	or     BYTE PTR [edi+0xf],dl
  41f20d:	pop    ds
  41f20e:	je     0x41f1d7
  41f210:	mov    esp,0x2acdaa39
  41f215:	ret    0xfa66
  41f218:	jmp    0xbb6d:0x137f8ba8
  41f21f:	jbe    0x41f1fc
  41f221:	call   0x686:0x5d2d36ca
  41f228:	xor    eax,0xe5a66c2a
  41f22d:	dec    ebx
  41f22e:	nop
  41f22f:	inc    eax
  41f230:	adc    DWORD PTR [edx-0x5e0bdd7],esp
  41f236:	retf   0xba18
  41f239:	cld    
  41f23a:	mov    bh,0xe7
  41f23c:	sub    BYTE PTR [ebx-0x80],dl
  41f23f:	dec    edx
  41f240:	xchg   edx,eax
  41f241:	sbb    esp,esp
  41f243:	fisttp QWORD PTR [ecx-0x7a]
  41f246:	dec    ebp
  41f247:	adc    al,0xf5
  41f249:	xchg   edx,eax
  41f24a:	arpl   WORD PTR [edx+esi*2-0x47],ax
  41f24e:	jmp    0xe0344ab9
  41f253:	fwait
  41f254:	std    
  41f255:	cmp    eax,DWORD PTR [ebx]
  41f257:	mov    ecx,0x58f6f5ab
  41f25c:	in     eax,0xff
  41f25e:	shl    DWORD PTR [eax],cl
  41f260:	mov    dh,0x6e
  41f262:	retf   
  41f263:	push   0x9bac3d86
  41f268:	rcl    edi,0x5c
  41f26b:	lock lods al,BYTE PTR ds:[esi]
  41f26d:	add    eax,0xb01762b
  41f272:	(bad)  
  41f273:	cmp    eax,0xd55d90d
  41f278:	jecxz  0x41f202
  41f27a:	sbb    eax,0x4f9c3a79
  41f27f:	gs in  al,dx
  41f281:	mov    dl,0x75
  41f283:	out    dx,eax
  41f284:	loopne 0x41f2a8
  41f286:	push   edx
  41f287:	inc    edx
  41f288:	jge    0x41f26e
  41f28a:	sbb    ebp,edx
  41f28c:	cmc    
  41f28d:	(bad)
  41f290:	xchg   DWORD PTR [ebp+0x3a],eax
  41f293:	idiv   BYTE PTR [esp+edx*8-0x482b1221]
  41f29a:	call   0xe10e:0xc159115a
  41f2a1:	out    0x5b,eax
  41f2a3:	icebp  
  41f2a4:	and    DWORD PTR [ebx+0x7b],ecx
  41f2a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2a8:	xor    DWORD PTR [eax],0x49ae312a
  41f2ae:	cmp    dh,BYTE PTR [edx]
  41f2b0:	pop    edx
  41f2b1:	add    cl,BYTE PTR [eax-0x2b]
  41f2b4:	mov    ?,ecx
  41f2b6:	aad    0xce
  41f2b8:	jo     0x41f2de
  41f2ba:	ins    DWORD PTR es:[edi],dx
  41f2bb:	push   esi
  41f2bc:	cmp    DWORD PTR [ecx],esi
  41f2be:	pop    edi
  41f2bf:	mov    fs,WORD PTR [ebx+0x3223acd3]
  41f2c5:	lock mov dl,BYTE PTR [esi-0x6d]
  41f2c9:	sti    
  41f2ca:	hlt    
  41f2cb:	inc    ebx
  41f2cc:	adc    bl,dl
  41f2ce:	inc    ebx
  41f2cf:	mov    gs,ebp
  41f2d1:	jmp    0xfe377714
  41f2d6:	loopne 0x41f355
  41f2d8:	dec    ebx
  41f2d9:	stos   DWORD PTR es:[edi],eax
  41f2da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2db:	not    BYTE PTR [ebp+ebx*2-0x33]
  41f2df:	push   edx
  41f2e0:	inc    esi
  41f2e1:	fcomp  DWORD PTR [eax+0x2]
  41f2e4:	lds    ebp,FWORD PTR [esp+esi*8+0x71]
  41f2e8:	xchg   ebp,eax
  41f2e9:	mov    DWORD PTR [ecx],ebx
  41f2eb:	sub    eax,0x9da1bf83
  41f2f0:	inc    edi
  41f2f1:	adc    bl,BYTE PTR [ebp+0x54]
  41f2f4:	ja     0x41f2c3
  41f2f6:	out    0xed,eax
  41f2f8:	retf   
  41f2f9:	dec    ebx
  41f2fa:	or     BYTE PTR [esi],0x4f
  41f2fd:	push   es
  41f2fe:	in     eax,dx
  41f2ff:	nop
  41f300:	imul   ebx,DWORD PTR [edi],0x4d18b7
  41f306:	jnp    0x41f291
  41f308:	imul   esp,eax,0x64
  41f30b:	int3   
  41f30c:	iret   
  41f30d:	cmp    dl,dh
  41f30f:	jp     0x41f2e9
  41f311:	mov    al,ds:0xa09db9b4
  41f316:	cwde   
  41f317:	retf   0x7fc
  41f31a:	mov    esp,0xe7631bfa
  41f31f:	scas   eax,DWORD PTR es:[edi]
  41f320:	or     ecx,0xd661b58d
  41f326:	ss sub edx,0x1f
  41f32a:	pop    ebp
  41f32b:	xchg   ebp,eax
  41f32c:	push   edi
  41f32d:	les    dx,DWORD PTR es:[esi+0x49]
  41f332:	lds    edx,FWORD PTR [edx+0x47]
  41f335:	int3   
  41f336:	pop    ecx
  41f337:	mov    esp,0x3f4a968e
  41f33c:	mov    esi,DWORD PTR [ebx+0x3fdb315f]
  41f342:	cli    
  41f343:	xor    al,0xff
  41f345:	imul   ecx,DWORD PTR [edi],0x5b6f800b
  41f34b:	cmp    edx,DWORD PTR [esi-0x62]
  41f34e:	stc    
  41f34f:	xor    ebp,esi
  41f351:	fs lock xchg ebp,eax
  41f354:	xor    eax,0xa970df3
  41f359:	lock mov eax,0x5a5ce595
  41f35f:	pop    ss
  41f360:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f361:	rcr    DWORD PTR [edi],1
  41f363:	push   eax
  41f364:	loopne 0x41f35c
  41f366:	stos   DWORD PTR es:[edi],eax
  41f367:	mov    bh,0x4c
  41f369:	adc    ebp,DWORD PTR [bx+di]
  41f36c:	jmp    FWORD PTR [edi-0x6f]
  41f36f:	jno    0x41f3e9
  41f371:	sub    al,0x2c
  41f373:	imul   eax,DWORD PTR ds:0x1ba3e1c2,0x88b4d42
  41f37d:	jp     0x41f300
  41f37f:	push   ebx
  41f380:	inc    edx
  41f381:	mov    esp,0x61c8d5d1
  41f386:	cmp    BYTE PTR [eax],cl
  41f388:	into   
  41f389:	fdivr  DWORD PTR [ecx+0x28fc8e81]
  41f38f:	cld    
  41f390:	mov    bl,0x78
  41f392:	xor    eax,0x855ae3ef
  41f397:	icebp  
  41f398:	xor    DWORD PTR [edi+edx*8],eax
  41f39b:	addr16 hlt 
  41f39d:	dec    edi
  41f39e:	adc    DWORD PTR [ebx],edx
  41f3a0:	pop    ebp
  41f3a1:	push   ebp
  41f3a2:	and    al,0xd1
  41f3a4:	jno    0x41f3c0
  41f3a6:	sahf   
  41f3a7:	mov    ds:0x55bf37ec,al
  41f3ac:	pushf  
  41f3ad:	dec    ecx
  41f3ae:	pop    ecx
  41f3af:	icebp  
  41f3b0:	iret   
  41f3b1:	add    BYTE PTR [esi-0x37],ch
  41f3b4:	add    DWORD PTR [ebp-0x58c00a21],0xfffffffb
  41f3bb:	inc    ecx
  41f3bc:	and    eax,0x9cd51bf6
  41f3c1:	xor    edx,esi
  41f3c3:	sti    
  41f3c4:	(bad)  
  41f3c5:	pushf  
  41f3c6:	adc    eax,0x6a47ba61
  41f3cb:	mov    BYTE PTR [ebx],dh
  41f3cd:	xchg   edi,eax
  41f3ce:	pop    edi
  41f3cf:	xor    al,0x1c
  41f3d1:	ss inc ecx
  41f3d3:	mov    cl,0xbd
  41f3d5:	loopne 0x41f41c
  41f3d7:	and    ah,bl
  41f3d9:	jnp    0x41f387
  41f3db:	(bad)  
  41f3dc:	dec    esi
  41f3dd:	rcr    BYTE PTR [ecx-0x4e],cl
  41f3e0:	stos   BYTE PTR es:[edi],al
  41f3e1:	stos   DWORD PTR es:[edi],eax
  41f3e2:	ror    DWORD PTR [edx+0x73a1f100],cl
  41f3e8:	mov    cl,0x87
  41f3ea:	cmove  eax,DWORD PTR [ebp+0x74bc389c]
  41f3f1:	ffreep st(0)
  41f3f3:	sub    bh,BYTE PTR [edx-0x2a]
  41f3f6:	sahf   
  41f3f7:	sub    dl,BYTE PTR [ebx]
  41f3f9:	jbe    0x41f3d7
  41f3fb:	sbb    bh,bh
  41f3fd:	dec    ebp
  41f3fe:	mov    BYTE PTR [eax+eax*8-0x46337cbb],ch
  41f405:	jo     0x41f458
  41f407:	mov    al,ds:0xf5f0a21
  41f40c:	test   BYTE PTR ds:0xf5410be7,0xf2
  41f413:	ds (bad) 
  41f415:	xchg   edx,eax
  41f416:	sbb    DWORD PTR [ecx],eax
  41f418:	mov    esp,0xe2e7ec25
  41f41d:	cmp    ecx,DWORD PTR [esi-0x40e5e2ab]
  41f423:	xchg   ebx,eax
  41f424:	push   edx
  41f425:	mov    eax,0x9ed7b758
  41f42a:	xor    eax,0x26093098
  41f42f:	gs jnp 0x41f408
  41f432:	jg     0x41f3c2
  41f434:	pusha  
  41f435:	sbb    al,0xe2
  41f437:	aas    
  41f438:	(bad)  
  41f43a:	sub    ecx,DWORD PTR [ecx-0x2df8021c]
  41f440:	jmp    0x41f3e0
  41f442:	mov    eax,ds:0x9d0b66cd
  41f447:	cmp    DWORD PTR [edi-0x3b543457],esp
  41f44d:	xchg   ebp,edi
  41f44f:	cmp    cl,dh
  41f451:	out    dx,al
  41f452:	loop   0x41f44d
  41f454:	mov    edx,0x332a1674
  41f459:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f45a:	jge    0x41f491
  41f45c:	mov    cl,0x10
  41f45f:	pop    es
  41f460:	jle    0x41f4a5
  41f462:	and    al,0xaa
  41f464:	add    al,0xfb
  41f466:	test   DWORD PTR ds:0x9e48743d,edi
  41f46c:	sbb    eax,DWORD PTR [edi-0x7b]
  41f46f:	xchg   esi,eax
  41f470:	aas    
  41f471:	fmul   DWORD PTR [ebp-0x22ba8fa3]
  41f477:	push   eax
  41f478:	adc    ecx,DWORD PTR [edx+esi*4-0x3f]
  41f47c:	pop    edi
  41f47d:	push   edi
  41f47e:	cli    
  41f47f:	and    al,0xf5
  41f481:	enter  0x9d34,0xe8
  41f485:	and    DWORD PTR ds:0x94f9ed50,edi
  41f48b:	fnsave [eax-0x45027371]
  41f491:	jecxz  0x41f447
  41f493:	pop    esp
  41f494:	(bad)  
  41f495:	jns    0x41f4e8
  41f497:	inc    ebp
  41f498:	sar    BYTE PTR [edx-0x3],1
  41f49b:	jnp    0x41f4ff
  41f49d:	jo     0x41f44e
  41f49f:	pop    ecx
  41f4a0:	mov    eax,ds:0x5dfd01b0
  41f4a5:	pushf  
  41f4a6:	shl    ebp,cl
  41f4a8:	push   ebp
  41f4a9:	fldenv fs:[edx+0x3c]
  41f4ad:	adc    eax,0xc01f9696
  41f4b2:	data16 jne 0x41f499
  41f4b5:	mov    ch,0x49
  41f4b7:	imul   ebx,DWORD PTR [ebp+esi*2-0x1a],0xffffffb9
  41f4bc:	aaa    
  41f4bd:	aam    0xaa
  41f4bf:	lds    ebx,FWORD PTR [eax+esi*1-0x3c]
  41f4c3:	mov    edi,0xd259235b
  41f4c8:	aaa    
  41f4c9:	jmp    0x9127:0xe2066da2
  41f4d0:	add    ecx,edx
  41f4d2:	jle    0x41f52f
  41f4d4:	cmp    DWORD PTR [eax+eiz*1+0x476ec687],eax
  41f4db:	jnp    0x41f530
  41f4dd:	leave  
  41f4de:	xchg   esp,eax
  41f4df:	lahf   
  41f4e0:	jl     0x41f4c9
  41f4e2:	cmp    eax,0x4bcffb81
  41f4e7:	cmp    al,0x8
  41f4e9:	push   ds
  41f4ea:	in     eax,dx
  41f4eb:	daa    
  41f4ec:	fdivr  st,st(1)
  41f4ee:	std    
  41f4ef:	lock stos DWORD PTR es:[edi],eax
  41f4f1:	adc    DWORD PTR [edi+0x2e],ecx
  41f4f4:	test   al,0x4a
  41f4f6:	jb     0x41f4d6
  41f4f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4f9:	les    ecx,FWORD PTR [esi-0x2aaf5c7]
  41f4ff:	xor    eax,0x666e4dfd
  41f504:	mov    al,0x3e
  41f506:	outs   dx,DWORD PTR ds:[esi]
  41f507:	dec    edx
  41f508:	xchg   edx,eax
  41f509:	aas    
  41f50a:	mov    ds:0xe61da810,al
  41f50f:	pop    ecx
  41f510:	inc    ebp
  41f511:	dec    esp
  41f512:	jl     0x41f58b
  41f514:	mov    dl,0xa8
  41f516:	repz push ebp
  41f518:	sbb    eax,DWORD PTR [ecx+0x5e]
  41f51b:	inc    edi
  41f51c:	or     eax,0xd0807691
  41f521:	mov    esi,0x640c83d3
  41f526:	outs   dx,DWORD PTR ds:[esi]
  41f527:	dec    ecx
  41f528:	lods   al,BYTE PTR ds:[esi]
  41f529:	sbb    DWORD PTR [eax],0x38
  41f52c:	mov    ah,0x8f
  41f52e:	ret    0x260a
  41f531:	psubsb mm0,mm4
  41f534:	cmp    eax,0x7c4a38b9
  41f539:	adc    ebp,ebx
  41f53b:	push   0x6f
  41f53d:	mov    al,0x54
  41f53f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f540:	adc    dh,0x5d
  41f543:	outs   dx,BYTE PTR ds:[esi]
  41f544:	ds pop esp
  41f546:	cs push ds
  41f548:	or     DWORD PTR [edx+ebx*4+0x3b],0x43ebf6e3
  41f550:	push   ds
  41f551:	daa    
  41f552:	in     al,0x84
  41f554:	in     eax,0x99
  41f556:	and    BYTE PTR [eax],0xca
  41f559:	es push eax
  41f55b:	ffreep st(2)
  41f55d:	xchg   ecx,eax
  41f55e:	push   esp
  41f55f:	ss mov ebx,0xe6393064
  41f565:	jg     0x41f51e
  41f567:	mul    DWORD PTR [ebp+0x739c8a36]
  41f56d:	xchg   esp,eax
  41f56e:	and    ebp,DWORD PTR [edi]
  41f570:	jle    0x41f5d2
  41f572:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f573:	sub    al,0x14
  41f575:	jae    0x41f5b8
  41f577:	nop
  41f578:	pop    ecx
  41f579:	dec    esi
  41f57a:	jb     0x41f512
  41f57c:	loop   0x41f570
  41f57e:	sub    esp,DWORD PTR [esp+ebp*8-0x51c0363f]
  41f585:	out    dx,eax
  41f586:	rol    dh,cl
  41f588:	ss in  al,0x8b
  41f58b:	or     bl,cl
  41f58d:	daa    
  41f58e:	aad    0xa0
  41f590:	lahf   
  41f591:	call   0xf49c:0xd0014611
  41f598:	inc    edi
  41f599:	push   ebx
  41f59a:	cmp    ch,BYTE PTR [edx+0x4a]
  41f59d:	pop    ecx
  41f59e:	outs   dx,DWORD PTR ds:[esi]
  41f59f:	inc    ebp
  41f5a0:	dec    ebp
  41f5a1:	jbe    0x41f5c4
  41f5a3:	inc    esp
  41f5a4:	pop    ecx
  41f5a5:	aam    0x4
  41f5a7:	(bad)  
  41f5a9:	mov    ds,edi
  41f5ab:	enter  0x91ca,0x4c
  41f5af:	jmp    0x41f532
  41f5b1:	inc    esi
  41f5b2:	retf   
  41f5b3:	xor    DWORD PTR [esi+ebp*1],0x87ce083b
  41f5ba:	cmp    al,0xce
  41f5bc:	cdq    
  41f5bd:	mov    edx,0xe19b0971
  41f5c2:	push   ecx
  41f5c3:	jmp    0x41f5f2
  41f5c5:	ds cwde 
  41f5c7:	mov    bh,0xa8
  41f5c9:	dec    edi
  41f5ca:	inc    ecx
  41f5cb:	aaa    
  41f5cc:	nop
  41f5cd:	cmp    eax,0xa38d24c3
  41f5d2:	leave  
  41f5d3:	in     eax,0x80
  41f5d5:	xchg   edi,eax
  41f5d6:	ret    
  41f5d7:	fwait
  41f5d8:	xor    edi,0x5eaf6a66
  41f5de:	dec    esi
  41f5df:	fsub   st,st(5)
  41f5e1:	ret    
  41f5e2:	xor    BYTE PTR [edx+0x46],bl
  41f5e5:	or     al,0x9f
  41f5e7:	pop    ebx
  41f5e8:	pop    edi
  41f5e9:	stos   BYTE PTR es:[edi],al
  41f5ea:	pop    ebx
  41f5eb:	fmul   st,st(5)
  41f5ed:	jecxz  0x41f5bc
  41f5ef:	or     eax,0x1f9a8d97
  41f5f4:	rcr    DWORD PTR [edi+esi*4],cl
  41f5f7:	jbe    0x41f5b3
  41f5f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5fa:	jecxz  0x41f595
  41f5fc:	xchg   edi,eax
  41f5fd:	or     edi,ecx
  41f5ff:	jb     0x41f62f
  41f601:	scas   eax,DWORD PTR es:[edi]
  41f602:	mov    al,0xcd
  41f604:	mov    ?,WORD PTR [esi+0x5ee4d30e]
  41f60a:	repz sub eax,0xce1aeae2
  41f610:	push   ebp
  41f611:	and    ch,BYTE PTR [edx+0x7152f1b9]
  41f617:	push   0xffffffe7
  41f619:	mov    dl,0xc5
  41f61b:	sahf   
  41f61c:	add    esp,esi
  41f61e:	je     0x41f5b7
  41f620:	xor    eax,0xb399e1c7
  41f625:	fstp   st(5)
  41f627:	lahf   
  41f628:	shl    BYTE PTR [ecx-0x56],cl
  41f62b:	rcl    ch,0x41
  41f62e:	popf   
  41f62f:	push   ebx
  41f630:	mov    ds:0xe6b15434,al
  41f635:	push   0xc2f70b64
  41f63a:	hlt    
  41f63b:	sub    edx,DWORD PTR [edi-0x4e5ba96f]
  41f641:	lock mov BYTE PTR [eax],0xb7
  41f645:	sub    dl,BYTE PTR [ebx-0x52]
  41f648:	test   al,0x8
  41f64a:	cmp    BYTE PTR [edi],bh
  41f64c:	pop    ecx
  41f64d:	jbe    0x41f6be
  41f64f:	ins    BYTE PTR es:[edi],dx
  41f650:	lods   eax,DWORD PTR ds:[esi]
  41f651:	lahf   
  41f652:	enter  0xf6a5,0x42
  41f656:	aad    0x6
  41f658:	push   ss
  41f659:	mov    WORD PTR [edx],ds
  41f65b:	(bad)  
  41f65c:	mov    ebp,esi
  41f65e:	cmc    
  41f65f:	add    esp,DWORD PTR [edx]
  41f661:	mov    dl,0x1d
  41f663:	inc    esi
  41f664:	outs   dx,DWORD PTR ds:[esi]
  41f665:	loopne 0x41f696
  41f667:	(bad)  
  41f668:	je     0x41f64b
  41f66a:	rcr    DWORD PTR [eax-0x28],cl
  41f66d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f66e:	hlt    
  41f66f:	rol    DWORD PTR ds:0x1fa086fb,cl
  41f675:	xchg   ebx,eax
  41f676:	nop
  41f677:	dec    esp
  41f678:	jb     0x41f6aa
  41f67a:	in     eax,dx
  41f67b:	adc    al,0x2d
  41f67d:	cli    
  41f67e:	cdq    
  41f67f:	(bad)  
  41f680:	outs   dx,BYTE PTR ds:[esi]
  41f681:	mov    ss,WORD PTR [esi+0x3f]
  41f684:	stc    
  41f685:	push   ebx
  41f686:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f687:	out    0x4b,eax
  41f689:	jp     0x41f667
  41f68b:	js     0x41f694
  41f68d:	je     0x41f641
  41f68f:	jmp    0x9cb1:0x32139018
  41f696:	aam    0x2e
  41f698:	mov    esi,eax
  41f69a:	call   FWORD PTR [eax-0x2e]
  41f69d:	jb     0x41f66c
  41f69f:	fmul   DWORD PTR [esi+eax*4]
  41f6a2:	or     ah,dl
  41f6a4:	push   esi
  41f6a5:	lods   al,BYTE PTR ds:[esi]
  41f6a6:	pop    ss
  41f6a7:	ss cmp eax,0x8ad28f
  41f6ad:	aas    
  41f6ae:	or     cl,ch
  41f6b0:	popf   
  41f6b1:	push   esi
  41f6b2:	loope  0x41f6e8
  41f6b4:	es mov edi,?
  41f6b7:	or     al,0xfc
  41f6b9:	repnz sbb esi,esi
  41f6bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6bd:	out    0x2d,eax
  41f6bf:	mov    edx,0x8239aefe
  41f6c4:	(bad)  
  41f6c5:	xchg   esp,eax
  41f6c6:	mov    DWORD PTR [esi-0x793029af],esi
  41f6cc:	mov    edi,0x74cc58cd
  41f6d1:	add    eax,0xcd402e8b
  41f6d6:	out    dx,al
  41f6d7:	add    ecx,DWORD PTR [eax]
  41f6d9:	popf   
  41f6da:	xor    ebx,eax
  41f6dc:	arpl   sp,si
  41f6de:	call   0xb771:0x6f3a14b9
  41f6e5:	push   ecx
  41f6e6:	outs   dx,DWORD PTR ds:[esi]
  41f6e7:	das    
  41f6e8:	cmp    al,0xe7
  41f6ea:	pop    ds
  41f6eb:	dec    edx
  41f6ec:	dec    ecx
  41f6ed:	scas   al,BYTE PTR es:[edi]
  41f6ee:	jg     0x41f72e
  41f6f0:	mov    eax,DWORD PTR fs:[ecx+0x66e9da70]
  41f6f7:	test   al,0x67
  41f6f9:	dec    edx
  41f6fa:	cmp    BYTE PTR [esi-0x5402cd9d],bh
  41f700:	pop    es
  41f701:	pop    ecx
  41f702:	jmp    0x84e1:0x30171726
  41f709:	pop    ss
  41f70a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f70b:	shl    BYTE PTR [eax-0x71bf6540],1
  41f711:	loop   0x41f6fc
  41f713:	fs dec ebx
  41f715:	scas   al,BYTE PTR es:[edi]
  41f716:	in     eax,0xed
  41f718:	test   BYTE PTR [ecx-0x7060646f],bh
  41f71e:	sub    DWORD PTR [esi-0x5efb00a],ecx
  41f724:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f725:	pop    edi
  41f726:	nop
  41f727:	popa   
  41f728:	adc    al,0xb3
  41f72a:	adc    bl,BYTE PTR [edx+0x6725c7f4]
  41f730:	push   ds
  41f731:	inc    esi
  41f732:	inc    edx
  41f733:	arpl   WORD PTR [edx],ax
  41f735:	jne    0x41f72d
  41f737:	dec    ecx
  41f738:	pop    esp
  41f739:	pop    ds
  41f73a:	pop    ss
  41f73b:	cmp    DWORD PTR [edi],ebx
  41f73d:	adc    al,0xfe
  41f73f:	inc    ecx
  41f740:	fld    QWORD PTR [edi]
  41f742:	mov    ds:0x2ef53dcc,al
  41f747:	jmp    0x41f788
  41f749:	stos   BYTE PTR es:[edi],al
  41f74a:	lea    ecx,[edi]
  41f74c:	sahf   
  41f74d:	shl    BYTE PTR [eax],1
  41f74f:	mov    ds:0xb2b42b9f,al
  41f754:	push   esi
  41f755:	ss fs in al,dx
  41f758:	outs   dx,DWORD PTR ds:[esi]
  41f759:	cmp    esi,DWORD PTR [edi+0x77bd33bc]
  41f75f:	sbb    DWORD PTR [ecx],esp
  41f761:	stos   BYTE PTR es:[edi],al
  41f762:	popa   
  41f763:	add    edi,0xffffffc0
  41f766:	ret    
  41f767:	mov    bh,0x5b
  41f769:	adc    DWORD PTR ds:[esi-0x28468d69],esp
  41f770:	xchg   ebx,eax
  41f771:	sbb    eax,0x792be5db
  41f776:	jae    0x41f799
  41f778:	imul   eax,DWORD PTR [ebp-0x1d162bf8],0x74a4f795
  41f782:	(bad)  
  41f784:	mov    cl,0x3c
  41f786:	(bad)  [esi-0x7593651b]
  41f78c:	loope  0x41f75d
  41f78e:	jl     0x41f7d1
  41f790:	out    0x3a,eax
  41f792:	sub    BYTE PTR [eax],al
  41f794:	mov    dh,0xbc
  41f796:	cmp    ax,0x1721
  41f79a:	stc    
  41f79b:	pop    edx
  41f79c:	pushf  
  41f79d:	xor    al,0xbc
  41f79f:	fnstenv [edx+0x3e]
  41f7a2:	dec    edi
  41f7a3:	gs test dl,dh
  41f7a6:	scas   eax,DWORD PTR es:[edi]
  41f7a7:	xchg   ebx,eax
  41f7a8:	imul   ebp,DWORD PTR [eax],0xffffff94
  41f7ab:	mov    esi,eax
  41f7ad:	sbb    DWORD PTR ds:0xf4412db8,edi
  41f7b3:	aam    0x35
  41f7b5:	jns    0x41f807
  41f7b7:	fst    DWORD PTR [eax+eax*4-0x6c000bb0]
  41f7be:	mov    ss,WORD PTR [ebp+0x6ff3d657]
  41f7c4:	dec    esp
  41f7c5:	inc    BYTE PTR [esi+0xb]
  41f7c8:	and    al,0xf3
  41f7ca:	adc    DWORD PTR [edi],esi
  41f7cc:	iret   
  41f7cd:	jmp    0x91ae5bcf
  41f7d2:	mov    ah,0xc0
  41f7d4:	fs mov eax,0xbd8d45aa
  41f7da:	xor    eax,0xf64e1ac2
  41f7df:	or     bl,ah
  41f7e1:	js     0x41f81b
  41f7e3:	imul   edx,DWORD PTR ds:0x22d43024,0x87cc4bfe
  41f7ed:	and    al,0xb9
  41f7ef:	or     bl,bh
  41f7f1:	inc    eax
  41f7f2:	rol    BYTE PTR [ebp+0x70],0x56
  41f7f6:	je     0x41f7fa
  41f7f8:	inc    esp
  41f7f9:	enter  0x13f7,0x5b
  41f7fd:	jo     0x41f832
  41f7ff:	xor    DWORD PTR [ebx-0xce8252],eax
  41f805:	push   esp
  41f806:	jb     0x41f7af
  41f808:	cld    
  41f809:	mov    bl,0x98
  41f80b:	in     eax,dx
  41f80c:	dec    ecx
  41f80d:	(bad)  
  41f80e:	adc    eax,0xd6062ac6
  41f813:	sub    al,0xc9
  41f815:	(bad)  
  41f816:	in     eax,0x9e
  41f818:	cdq    
  41f819:	push   ebx
  41f81a:	hlt    
  41f81b:	cli    
  41f81c:	lock pop esi
  41f81e:	scas   eax,DWORD PTR es:[edi]
  41f81f:	jmp    0x36313d18
  41f824:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f825:	mov    ebp,0xc536c0d5
  41f82a:	inc    esp
  41f82b:	lods   al,BYTE PTR ds:[esi]
  41f82c:	dec    edx
  41f82d:	mov    dh,0x21
  41f82f:	in     al,dx
  41f830:	out    dx,eax
  41f831:	jg     0x41f887
  41f833:	sub    BYTE PTR [edx-0x39],ch
  41f836:	add    ch,BYTE PTR [eax]
  41f838:	jno    0x41f89f
  41f83a:	imul   ecx,DWORD PTR [ecx],0x66
  41f83d:	mov    edi,0x422d2aff
  41f842:	fwait
  41f843:	mov    ch,0x6f
  41f845:	pop    ebp
  41f846:	inc    eax
  41f847:	ds push esp
  41f849:	pop    edx
  41f84a:	xchg   esp,eax
  41f84b:	sbb    eax,0x1a8aaf8a
  41f850:	jns    0x41f87c
  41f852:	fwait
  41f853:	xor    DWORD PTR [edx+0x5d],ecx
  41f856:	add    dh,BYTE PTR [ebx]
  41f858:	shl    eax,0xd8
  41f85b:	xchg   ebp,eax
  41f85c:	sahf   
  41f85d:	xor    BYTE PTR [ecx],al
  41f85f:	jnp    0x41f87c
  41f861:	mov    ch,0xfa
  41f863:	ret    
  41f864:	pop    esi
  41f865:	or     BYTE PTR [ecx+eiz*4-0x9],bh
  41f869:	pop    es
  41f86a:	int3   
  41f86b:	test   al,0xcd
  41f86d:	jmp    0x41f8a5
  41f86f:	sub    al,0xb1
  41f871:	pushf  
  41f872:	adc    eax,0x81e2f216
  41f877:	jae    0x41f86f
  41f879:	not    DWORD PTR [esi-0x35b316e0]
  41f87f:	imul   edi,DWORD PTR [edx-0x2f],0x6bfbd945
  41f886:	or     BYTE PTR [eax+eiz*4],bl
  41f889:	cmp    al,0xdc
  41f88b:	iret   
  41f88c:	gs jge 0x41f902
  41f88f:	lahf   
  41f890:	lods   al,BYTE PTR ds:[esi]
  41f891:	mov    ds:0x31ed75ba,eax
  41f896:	rcl    BYTE PTR [ebp-0x12a1712],cl
  41f89c:	pop    ebp
  41f89d:	inc    ebx
  41f89e:	into   
  41f89f:	pop    esp
  41f8a0:	neg    DWORD PTR [edi+0x75]
  41f8a3:	sbb    bh,cl
  41f8a5:	mov    ?,edi
  41f8a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8a8:	(bad)  
  41f8a9:	out    0x1b,eax
  41f8ab:	or     DWORD PTR [edx+0x33],ebp
  41f8ae:	call   0xe4a:0xb29a31d4
  41f8b5:	jne    0x41f83f
  41f8b7:	lock std 
  41f8b9:	sbb    al,0xd6
  41f8bb:	sbb    al,0xdc
  41f8bd:	aam    0x74
  41f8bf:	cmp    al,0xca
  41f8c1:	jmp    0xbdf6:0x724d0541
  41f8c8:	adc    eax,0xd3e725c9
  41f8cd:	push   ebx
  41f8ce:	push   esi
  41f8cf:	lea    esp,[ecx]
  41f8d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8d2:	cmp    DWORD PTR [ebp-0x69],edi
  41f8d5:	das    
  41f8d6:	jg     0x41f8d9
  41f8d8:	cmp    DWORD PTR [edi+0x43],ebx
  41f8db:	jg     0x41f931
  41f8dd:	dec    eax
  41f8de:	jae    0x41f90e
  41f8e0:	les    ecx,FWORD PTR [esp+eax*1]
  41f8e3:	jnp    0x41f8c8
  41f8e5:	sub    DWORD PTR [eax-0x527b8160],edi
  41f8eb:	lods   al,BYTE PTR ds:[esi]
  41f8ec:	mov    eax,ds:0x280bd3bc
  41f8f1:	loope  0x41f8a0
  41f8f3:	push   ss
  41f8f4:	xor    al,0x30
  41f8f6:	addr16 cdq 
  41f8f8:	fiadd  WORD PTR [eax-0xd147648]
  41f8fe:	fistp  QWORD PTR [ecx-0x342f86b5]
  41f904:	stos   DWORD PTR es:[edi],eax
  41f905:	stos   BYTE PTR es:[edi],al
  41f906:	in     al,dx
  41f907:	add    al,0x3a
  41f909:	out    dx,eax
  41f90a:	ret    
  41f90b:	push   edx
  41f90c:	xchg   esp,eax
  41f90d:	sbb    ecx,DWORD PTR [edi-0xd048eb7]
  41f913:	sub    edx,ecx
  41f915:	push   ds
  41f916:	ret    0x44e2
  41f919:	and    BYTE PTR [edx],al
  41f91b:	iret   
  41f91c:	into   
  41f91d:	stos   BYTE PTR es:[edi],al
  41f91e:	inc    ebp
  41f91f:	push   ds
  41f920:	(bad)  
  41f921:	jns    0x41f950
  41f923:	sahf   
  41f924:	fwait
  41f925:	mov    BYTE PTR [ecx-0xb],bh
  41f928:	mov    eax,ds:0xfa7098da
  41f92d:	dec    edx
  41f92e:	jnp    0x41f8d0
  41f930:	mov    dh,0x85
  41f932:	jb     0x41f8f5
  41f934:	xchg   ebx,eax
  41f935:	lahf   
  41f936:	xchg   edi,eax
  41f937:	mov    BYTE PTR es:[ebp*2+0x4e237cd4],dh
  41f93f:	test   al,0x56
  41f941:	xchg   dh,al
  41f943:	(bad)  
  41f944:	push   ebx
  41f945:	sub    al,0xcd
  41f947:	dec    edi
  41f948:	xchg   esp,eax
  41f949:	clc    
  41f94a:	test   esp,0xc0be1af
  41f950:	pushf  
  41f951:	out    0x64,al
  41f953:	pop    ecx
  41f954:	ror    ebp,1
  41f956:	cwde   
  41f957:	das    
  41f958:	lods   al,BYTE PTR ds:[esi]
  41f959:	rol    DWORD PTR [esi],0x9e
  41f95c:	mov    esi,edi
  41f95e:	in     al,0x93
  41f960:	iret   
  41f961:	neg    BYTE PTR [ecx+0x5c]
  41f964:	inc    eax
  41f965:	jbe    0x41f9d9
  41f967:	add    dh,al
  41f969:	lods   eax,DWORD PTR ds:[esi]
  41f96a:	lock push esi
  41f96c:	popf   
  41f96d:	push   esp
  41f96e:	or     BYTE PTR [ebp+edx*4+0xe],ch
  41f972:	xchg   edi,eax
  41f973:	mov    edx,0x7ac31af9
  41f978:	aas    
  41f979:	push   ecx
  41f97a:	jp     0x41f95d
  41f97c:	xor    DWORD PTR [ebx],0xfffffff8
  41f97f:	ins    BYTE PTR es:[edi],dx
  41f980:	push   ss
  41f981:	jg     0x41f9a3
  41f983:	xor    ebx,DWORD PTR [esi+ebx*2+0x5d]
  41f987:	(bad)  
  41f988:	in     eax,0x1a
  41f98a:	(bad)  
  41f98b:	cli    
  41f98c:	jmp    0x41f967
  41f98e:	unpcklps xmm3,XMMWORD PTR [ebx-0x290059b7]
  41f995:	sbb    BYTE PTR [ecx-0x6],0x12
  41f999:	enter  0x3ba7,0x6b
  41f99d:	js     0x41f9ab
  41f99f:	dec    edx
  41f9a0:	pop    edi
  41f9a1:	xchg   bh,ah
  41f9a3:	sbb    ch,BYTE PTR [edx-0x77]
  41f9a6:	dec    edx
  41f9a7:	sbb    ah,dl
  41f9a9:	push   esp
  41f9aa:	inc    eax
  41f9ab:	mov    ebx,ebx
  41f9ad:	inc    ebp
  41f9ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f9af:	push   eax
  41f9b0:	inc    esp
  41f9b1:	mov    eax,DWORD PTR [esi-0x7f]
  41f9b4:	pop    esp
  41f9b5:	mov    al,BYTE PTR [ebp+0x6]
  41f9b8:	test   bh,0x87
  41f9bb:	pop    edx
  41f9bc:	mov    ch,0xbd
  41f9be:	mov    bh,0xb6
  41f9c0:	les    eax,FWORD PTR [edx+ebx*1]
  41f9c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9c4:	and    BYTE PTR [edi+0x65],ch
  41f9c7:	ins    BYTE PTR es:[edi],dx
  41f9c8:	ins    BYTE PTR es:[edi],dx
  41f9c9:	lahf   
  41f9ca:	sub    al,0x91
  41f9cc:	pop    ecx
  41f9cd:	imul   ebx
  41f9cf:	pop    ecx
  41f9d0:	adc    DWORD PTR [edx+0x500e11d],esi
  41f9d6:	xchg   ebp,eax
  41f9d7:	jecxz  0x41f9dd
  41f9d9:	(bad)  
  41f9da:	jmp    0x41fa1a
  41f9dc:	sub    al,0x96
  41f9df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9e0:	adc    eax,0x2d9ad63b
  41f9e5:	(bad)
  41f9e8:	das    
  41f9e9:	add    al,0x48
  41f9eb:	adc    eax,0x96cb5bd4
  41f9f0:	mov    dh,0x72
  41f9f2:	test   dl,0xe6
  41f9f5:	add    eax,0xb1170770
  41f9fa:	shl    BYTE PTR [edx],1
  41f9fc:	push   esp
  41f9fd:	(bad)  
  41f9ff:	pop    ds
  41fa00:	lds    edi,FWORD PTR [ebx-0x73]
  41fa03:	sbb    ah,dh
  41fa05:	xlat   BYTE PTR ds:[ebx]
  41fa06:	and    ebp,eax
  41fa08:	xchg   ebx,eax
  41fa09:	std    
  41fa0a:	inc    ebp
  41fa0b:	xchg   edi,eax
  41fa0c:	add    eax,0xa6265e41
  41fa11:	jge    0x41f995
  41fa13:	push   esp
  41fa14:	pop    ebx
  41fa15:	pop    eax
  41fa16:	ret    
  41fa17:	xlat   BYTE PTR ds:[ebx]
  41fa18:	jecxz  0x41fa0c
  41fa1a:	cmp    BYTE PTR [ebp+0x60ecffd0],dh
  41fa20:	or     al,0x47
  41fa22:	ror    DWORD PTR [ebx-0x9e78274],1
  41fa28:	dec    ebx
  41fa29:	std    
  41fa2a:	ret    0x7f69
  41fa2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa2e:	out    dx,al
  41fa2f:	add    al,0xc8
  41fa31:	xchg   edi,eax
  41fa32:	out    0x6b,al
  41fa34:	fwait
  41fa35:	sub    bh,ch
  41fa37:	gs jmp 0x1b64:0x30fa997
  41fa3f:	in     eax,dx
  41fa40:	je     0x41fa95
  41fa42:	cmp    eax,DWORD PTR ds:0x5609afcb
  41fa48:	(bad)  
  41fa49:	sbb    bh,ah
  41fa4b:	mov    ecx,0xc36741a1
  41fa50:	jne    0x41fa2d
  41fa52:	push   eax
  41fa53:	push   es
  41fa54:	in     eax,0x20
  41fa56:	ficomp WORD PTR [edx+0x28]
  41fa59:	les    edx,FWORD PTR [ebp-0x560a7988]
  41fa5f:	test   al,0xd3
  41fa61:	adc    edi,ecx
  41fa63:	ss ins DWORD PTR es:[edi],dx
  41fa65:	pop    es
  41fa66:	pushf  
  41fa67:	or     eax,ebx
  41fa69:	mov    BYTE PTR [ecx*2+0x3070e8f2],dh
  41fa70:	out    0x76,al
  41fa72:	jo     0x41fa75
  41fa74:	mov    ah,0x61
  41fa76:	dec    ebx
  41fa77:	push   eax
  41fa78:	sub    eax,0xd6fb8ba7
  41fa7d:	inc    ebx
  41fa7e:	shr    BYTE PTR [ecx+0x5b442ed3],0xd1
  41fa85:	mov    WORD PTR [eax],es
  41fa87:	cmp    al,0xd3
  41fa89:	jg     0x41fabc
  41fa8b:	inc    ebx
  41fa8c:	mov    bh,0xc8
  41fa8e:	cwde   
  41fa8f:	sbb    eax,DWORD PTR [esi]
  41fa91:	outs   dx,DWORD PTR ds:[esi]
  41fa92:	ins    DWORD PTR es:[edi],dx
  41fa93:	add    eax,0x3e8d0b9f
  41fa98:	scas   al,BYTE PTR es:[edi]
  41fa99:	inc    edi
  41fa9a:	and    BYTE PTR [esi-0x70aee49f],ch
  41faa0:	sbb    BYTE PTR [edi+0x32],ch
  41faa3:	retf   0x2c4
  41faa6:	jae    0x41fa2a
  41faa8:	aas    
  41faa9:	inc    edx
  41faaa:	or     DWORD PTR [eax],edx
  41faac:	call   0xaae8:0xfdc13bbf
  41fab3:	addr16 push 0xffffffdf
  41fab6:	mov    ebx,0x8acef10c
  41fabb:	mov    eax,0x278f8c01
  41fac0:	mov    bh,0x9a
  41fac2:	jmp    0x67186bf3
  41fac7:	pop    ss
  41fac8:	xor    al,0x2c
  41faca:	add    BYTE PTR [eax+edi*1+0x8bf3c95],bh
  41fad1:	mov    ebx,esi
  41fad3:	(bad)  
  41fad4:	mov    bl,0x77
  41fad6:	add    BYTE PTR [edx],ah
  41fad8:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41fada:	sub    edx,esp
  41fadc:	repz inc ebp
  41fade:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fadf:	sbb    DWORD PTR [esp+ecx*4-0xc2fb567],ebp
  41fae6:	push   0xe
  41fae8:	aam    0x48
  41faea:	add    DWORD PTR [eax],ebx
  41faec:	xchg   esi,eax
  41faed:	out    0x8f,al
  41faef:	mov    WORD PTR [edi-0x7f],es
  41faf2:	leave  
  41faf3:	push   esp
  41faf4:	jmp    0xb9b54cb8
  41faf9:	cmovl  ecx,ebx
  41fafc:	(bad)  [eax+0x6c]
  41faff:	dec    ebx
  41fb00:	xchg   edx,eax
  41fb01:	icebp  
  41fb02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb03:	pop    ebp
  41fb04:	push   0xffffff96
  41fb06:	mov    esi,0x28286091
  41fb0b:	jbe    0x41fb23
  41fb0d:	out    0x85,eax
  41fb0f:	shl    BYTE PTR [esi-0x2205308e],0x40
  41fb16:	call   0x1e0c216a
  41fb1b:	adc    al,0x4c
  41fb1d:	scas   al,BYTE PTR es:[edi]
  41fb1e:	mov    ebp,0x9bd1f988
  41fb23:	xor    BYTE PTR [ebp-0x791750d9],dh
  41fb29:	cmp    al,0x65
  41fb2b:	push   es
  41fb2c:	out    0x34,al
  41fb2e:	push   es
  41fb2f:	pop    ds
  41fb30:	jle    0x41fb2f
  41fb32:	pop    ss
  41fb33:	(bad)  
  41fb34:	xchg   ebp,eax
  41fb35:	das    
  41fb36:	mov    ecx,0xb8d5179b
  41fb3b:	lods   al,BYTE PTR ds:[esi]
  41fb3c:	(bad)  
  41fb3d:	adc    eax,DWORD PTR [ecx]
  41fb3f:	jmp    0x5a15:0x85ddf572
  41fb46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb47:	add    esi,DWORD PTR [eax-0x5e]
  41fb4a:	push   ebx
  41fb4b:	call   0x3a52f67a
  41fb50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb51:	ins    DWORD PTR es:[edi],dx
  41fb52:	adc    BYTE PTR [ebx+ebx*4+0x46],dl
  41fb56:	adc    BYTE PTR [ebx+0x4920c517],dl
  41fb5c:	nop
  41fb5d:	hlt    
  41fb5e:	jae    0x41fb99
  41fb60:	xchg   BYTE PTR es:0x436980db,cl
  41fb67:	dec    edi
  41fb68:	addr16 loope 0x41fb39
  41fb6b:	leave  
  41fb6c:	fstp   DWORD PTR [edi+0x7c]
  41fb6f:	cmp    dh,al
  41fb71:	fdiv   DWORD PTR [ebp-0x68]
  41fb74:	addr16 mov eax,ss
  41fb77:	jnp    0x41fbaf
  41fb79:	push   es
  41fb7a:	cmp    eax,DWORD PTR [ebp+eax*8+0x71]
  41fb7e:	inc    ebx
  41fb7f:	push   edx
  41fb80:	mov    bl,0x5
  41fb82:	sbb    ch,ah
  41fb84:	cs jbe 0x41fbed
  41fb87:	jbe    0x41fb7c
  41fb89:	retf   0x80b2
  41fb8c:	inc    edx
  41fb8d:	push   edi
  41fb8e:	ror    DWORD PTR [eax-0x3d],0x38
  41fb92:	adc    eax,0xe549afec
  41fb97:	xchg   DWORD PTR [esi+edx*8-0x3959e170],ebx
  41fb9e:	mov    DWORD PTR [ebx-0x6a0c17f2],esi
  41fba4:	jge    0x41fbb7
  41fba6:	ins    DWORD PTR es:[edi],dx
  41fba7:	shr    DWORD PTR [edx],0x76
  41fbaa:	pop    edx
  41fbab:	(bad)  
  41fbac:	adc    al,0x8a
  41fbae:	cmp    al,0x11
  41fbb0:	inc    ebp
  41fbb1:	test   BYTE PTR [eax+ebp*4+0x74ff71ed],0x5d
  41fbb9:	dec    ebp
  41fbba:	loop   0x41fc1c
  41fbbc:	cli    
  41fbbd:	arpl   WORD PTR [edx+0x5],di
  41fbc0:	mov    ch,0xf6
  41fbc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbc3:	retf   0x645f
  41fbc6:	or     al,ch
  41fbc8:	jmp    0xdfac7adb
  41fbcd:	je     0x41fbec
  41fbcf:	sti    
  41fbd0:	pop    ebp
  41fbd1:	ja     0x41fb74
  41fbd3:	dec    ebx
  41fbd4:	jmp    0x41fbef
  41fbd6:	es mov bl,0x2e
  41fbd9:	mov    eax,ds:0x670fe90a
  41fbde:	mov    ecx,0x80cd5433
  41fbe3:	enter  0xa33d,0x5c
  41fbe7:	rol    DWORD PTR [esi-0x548fcfe2],1
  41fbed:	sub    al,0xc7
  41fbef:	jle    0x41fc70
  41fbf1:	jmp    0x9d2be1c0
  41fbf6:	and    DWORD PTR [ebx+0x3b],esi
  41fbf9:	jmp    0x930adce5
  41fbfe:	(bad)  
  41fbff:	xchg   esi,eax
  41fc00:	call   0x3756:0x952c005e
  41fc07:	cmp    al,0xea
  41fc09:	dec    ecx
  41fc0a:	push   ebx
  41fc0b:	dec    ebp
  41fc0c:	std    
  41fc0d:	mov    WORD PTR [esi+0x335577a9],ds
  41fc13:	or     dl,cl
  41fc15:	xor    ebx,ebx
  41fc17:	stos   BYTE PTR es:[edi],al
  41fc18:	push   ds
  41fc19:	cwde   
  41fc1a:	push   esp
  41fc1b:	loopne 0x41fbb6
  41fc1d:	pusha  
  41fc1e:	jmp    FWORD PTR [ecx-0x1f6cfc5a]
  41fc24:	lea    edi,[edx+0x71]
  41fc27:	inc    eax
  41fc28:	or     eax,0x812ce67
  41fc2d:	xchg   ah,al
  41fc2f:	ins    DWORD PTR es:[edi],dx
  41fc30:	xchg   DWORD PTR [ecx+0x40],eax
  41fc33:	call   0x599:0x8500a6fa
  41fc3a:	mov    ss,edi
  41fc3c:	jg     0x41fcb8
  41fc3e:	adc    ch,bh
  41fc40:	jne    0x41fcbd
  41fc42:	sar    BYTE PTR [edi],1
  41fc44:	scas   al,BYTE PTR es:[edi]
  41fc45:	xor    BYTE PTR [esi-0x18],al
  41fc48:	mov    esi,0x4c6ac6ec
  41fc4d:	int3   
  41fc4e:	lods   al,BYTE PTR ds:[esi]
  41fc4f:	pop    ss
  41fc50:	cmp    eax,0x3f48f434
  41fc55:	jl     0x41fc81
  41fc57:	out    dx,eax
  41fc58:	jns    0x41fc0e
  41fc5a:	xchg   DWORD PTR [edx],ebp
  41fc5c:	jb     0x41fc90
  41fc5e:	addr16 pop edi
  41fc60:	bound  edi,QWORD PTR [esp+ecx*1+0x62faa048]
  41fc67:	outs   dx,BYTE PTR ds:[esi]
  41fc68:	or     DWORD PTR [edi],ecx
  41fc6a:	call   0x231fb6f9
  41fc6f:	or     eax,0x51cab654
  41fc74:	mov    al,0x4e
  41fc76:	repz xchg ebp,eax
  41fc78:	jl     0x41fc00
  41fc7a:	lea    ecx,[ebp+esi*2-0x6a966c26]
  41fc81:	push   edi
  41fc82:	cs push ebp
  41fc84:	rol    BYTE PTR [edi+0x7],1
  41fc87:	jns    0x41fca0
  41fc89:	mov    cl,0xf5
  41fc8b:	into   
  41fc8c:	pop    eax
  41fc8d:	lods   al,BYTE PTR ds:[esi]
  41fc8e:	dec    esi
  41fc8f:	xchg   ebp,eax
  41fc90:	leave  
  41fc91:	xchg   DWORD PTR [edx],esi
  41fc93:	xchg   edi,eax
  41fc94:	dec    edx
  41fc95:	pop    ss
  41fc96:	test   al,0x27
  41fc98:	scas   al,BYTE PTR es:[edi]
  41fc99:	add    eax,0xa4e850c4
  41fc9e:	xchg   esp,eax
  41fc9f:	test   eax,0x35de1ae8
  41fca5:	ds mov si,0x65db
  41fcaa:	js     0x41fcd9
  41fcac:	test   eax,0x1f9100dd
  41fcb1:	or     dh,cl
  41fcb3:	dec    eax
  41fcb4:	pop    ss
  41fcb5:	push   ebp
  41fcb6:	mov    bl,0xd6
  41fcb8:	adc    al,0xa2
  41fcba:	fistp  WORD PTR [eax+ebp*1+0x490a9e47]
  41fcc1:	mov    ds:0x564eb838,al
  41fcc6:	in     eax,0x20
  41fcc8:	jmp    0x159c3cfa
  41fccd:	mov    BYTE PTR [ebx-0x45],bl
  41fcd0:	ret    0xde0
  41fcd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fcd4:	in     eax,dx
  41fcd5:	jmp    0x2b54:0x24f291b4
  41fcdc:	add    DWORD PTR [ebx],ebp
  41fcde:	add    ax,0xc5d
  41fce2:	cmc    
  41fce3:	je     0x41fca7
  41fce5:	scas   al,BYTE PTR es:[edi]
  41fce6:	clc    
  41fce7:	xchg   esp,eax
  41fce8:	into   
  41fce9:	push   edi
  41fcea:	and    eax,0x6b298644
  41fcef:	sub    al,BYTE PTR [edx-0x18]
  41fcf2:	dec    esi
  41fcf3:	outs   dx,DWORD PTR ds:[esi]
  41fcf4:	adc    dh,BYTE PTR [esi+0x76e3e420]
  41fcfa:	lock push ecx
  41fcfc:	xor    eax,0x89b54cc
  41fd01:	mov    WORD PTR [eax+0x62],ss
  41fd04:	bswap  ebx
  41fd06:	cmp    DWORD PTR [edi-0x1f],0xadc03e50
  41fd0d:	std    
  41fd0e:	adc    ecx,DWORD PTR [eax-0x44]
  41fd11:	mov    edi,0x9a95b26e
  41fd16:	loopne 0x41fd73
  41fd18:	das    
  41fd19:	cmp    DWORD PTR [edx],ecx
  41fd1b:	into   
  41fd1c:	(bad)  
  41fd1d:	repnz mov esp,0x7fa73d59
  41fd23:	cmp    eax,0x9b60f48a
  41fd28:	push   ebx
  41fd29:	test   eax,0x96ee311e
  41fd2e:	mov    al,ds:0x4d84166e
  41fd33:	adc    ah,bl
  41fd35:	and    dh,BYTE PTR [esi]
  41fd37:	mov    ds:0xf29350ef,eax
  41fd3c:	jmp    0x42d8e2be
  41fd41:	adc    DWORD PTR [edi+eiz*4],0x33ef7c8f
  41fd48:	mov    eax,0x26f080ee
  41fd4d:	push   ecx
  41fd4e:	rcr    DWORD PTR [edx],1
  41fd50:	xchg   ebp,eax
  41fd51:	inc    esp
  41fd52:	mov    ebx,0x2042c9a9
  41fd57:	icebp  
  41fd58:	mov    dh,0x70
  41fd5a:	fdiv   st,st(0)
  41fd5c:	pop    ecx
  41fd5d:	mov    esp,ebx
  41fd5f:	and    DWORD PTR [ebp-0x715edfe8],ebp
  41fd65:	jne    0x41fd52
  41fd67:	inc    ebx
  41fd69:	pop    edx
  41fd6a:	imul   ebp,ebp,0x51f26a6e
  41fd70:	dec    edi
  41fd71:	out    0x76,eax
  41fd73:	hlt    
  41fd74:	sbb    BYTE PTR [edx+0x41],ah
  41fd77:	pop    eax
  41fd78:	sub    esp,DWORD PTR [eax+eax*4+0x31]
  41fd7c:	cmp    bh,dl
  41fd7e:	out    0xe9,eax
  41fd80:	mov    ch,0xa2
  41fd82:	cld    
  41fd83:	ficom  WORD PTR [ecx]
  41fd85:	and    eax,0xdbd89ce3
  41fd8a:	push   edi
  41fd8b:	sub    edx,ecx
  41fd8d:	outs   dx,BYTE PTR ds:[esi]
  41fd8e:	test   eax,0xcceb4740
  41fd93:	adc    BYTE PTR [esi+0x4917d7b9],0xc
  41fd9a:	or     DWORD PTR ds:0x78a33d2a,0x7c
  41fda1:	mov    WORD PTR [ebx+0x50],cs
  41fda4:	xor    eax,0x97d3de22
  41fda9:	push   es
  41fdaa:	push   esp
  41fdab:	fs aam 0x40
  41fdae:	aas    
  41fdaf:	add    BYTE PTR [ecx],bh
  41fdb1:	pop    esi
  41fdb2:	inc    edi
  41fdb3:	(bad)  
  41fdb4:	mov    ss,WORD PTR [ebp+0x1fbcd5e6]
  41fdba:	push   esp
  41fdbb:	xor    al,0x57
  41fdbd:	out    dx,eax
  41fdbe:	push   eax
  41fdbf:	xchg   esi,eax
  41fdc0:	jecxz  0x41fd50
  41fdc2:	dec    ebp
  41fdc3:	xor    ebp,edx
  41fdc5:	mov    dh,0xfc
  41fdc7:	and    edi,edx
  41fdc9:	gs aam 0x35
  41fdcc:	sbb    ah,BYTE PTR [eax-0x3]
  41fdcf:	(bad)  
  41fdd0:	mov    DWORD PTR [ecx-0x4d],ebp
  41fdd3:	adc    edx,DWORD PTR [ebx-0x1e2f49fc]
  41fdd9:	xor    ah,al
  41fddb:	in     al,dx
  41fddc:	push   ds
  41fddd:	(bad)  
  41fdde:	ja     0x41fe3d
  41fde0:	stc    
  41fde1:	cwde   
  41fde2:	mov    ah,0xa6
  41fde4:	push   esi
  41fde5:	and    al,0xe
  41fde7:	ja     0x41fd7a
  41fde9:	iret   
  41fdea:	mov    ecx,0x7771ca44
  41fdef:	data16 int 0xe7
  41fdf2:	scas   eax,DWORD PTR es:[edi]
  41fdf3:	shr    BYTE PTR [ecx-0x54],cl
  41fdf6:	test   eax,0x7d82e6a7
  41fdfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdfc:	cmc    
  41fdfd:	out    0x68,eax
  41fdff:	pop    edx
  41fe00:	ret    0x4769
  41fe03:	or     al,0xc4
  41fe05:	es inc ecx
  41fe07:	cld    
  41fe08:	mov    cl,0x7a
  41fe0a:	fldcw  WORD PTR [ebp+ecx*1+0x3b]
  41fe0e:	mov    ds:0x947fe881,al
  41fe13:	xchg   edi,eax
  41fe14:	pop    ecx
  41fe15:	sbb    esp,DWORD PTR [ebx+0x3e]
  41fe18:	int    0x1b
  41fe1a:	pusha  
  41fe1b:	test   al,0x9c
  41fe1d:	cmc    
  41fe1e:	jae    0x41fe4d
  41fe20:	jae    0x41fdd0
  41fe22:	sbb    eax,ebx
  41fe24:	cmp    esp,esp
  41fe26:	dec    ecx
  41fe27:	xchg   esi,eax
  41fe28:	add    eax,0x5b323fe1
  41fe2d:	div    DWORD PTR [edx]
  41fe2f:	mov    esi,0x41994be3
  41fe34:	push   es
  41fe35:	popf   
  41fe36:	cmp    BYTE PTR [edi+esi*8],dh
  41fe39:	or     BYTE PTR [edi+0x27],bh
  41fe3c:	(bad)  
  41fe3d:	sub    eax,0x46d15843
  41fe42:	ss and eax,0x790e30c7
  41fe48:	mov    esi,0xbcc13848
  41fe4d:	pushf  
  41fe4e:	or     DWORD PTR [esi],0x8aae771b
  41fe54:	add    esp,edi
  41fe56:	lahf   
  41fe57:	push   ecx
  41fe58:	fwait
  41fe59:	or     dl,BYTE PTR [ecx]
  41fe5b:	scas   eax,DWORD PTR es:[edi]
  41fe5c:	ja     0x41fe52
  41fe5e:	or     edx,DWORD PTR [esi-0x26]
  41fe61:	mov    edx,0xd7c26ea2
  41fe66:	jnp    0x41fe14
  41fe68:	or     ebx,DWORD PTR [ebp*2-0x19d61054]
  41fe6f:	mov    cl,0x7a
  41fe71:	pop    es
  41fe72:	push   edi
  41fe73:	mov    ah,0x84
  41fe75:	xlat   BYTE PTR ds:[ebx]
  41fe76:	mov    al,0x37
  41fe78:	lds    edi,FWORD PTR fs:[ecx]
  41fe7b:	and    dl,BYTE PTR [ecx-0x48]
  41fe7e:	push   ecx
  41fe7f:	lds    ebp,FWORD PTR [ecx]
  41fe81:	sahf   
  41fe82:	jmp    0xe6f7:0xa4476260
  41fe89:	dec    ecx
  41fe8a:	loope  0x41fe28
  41fe8c:	retf   0xd07c
  41fe8f:	jp     0x41fe78
  41fe91:	stc    
  41fe92:	dec    ebp
  41fe93:	mov    edx,0xe68ea610
  41fe98:	inc    esi
  41fe99:	add    dh,bl
  41fe9b:	xchg   edx,eax
  41fe9c:	nop
  41fe9d:	pop    esp
  41fe9e:	inc    esi
  41fe9f:	ins    BYTE PTR es:[edi],dx
  41fea0:	xchg   esp,eax
  41fea1:	in     eax,dx
  41fea2:	leave  
  41fea3:	inc    eax
  41fea4:	jae    0x41fe5d
  41fea6:	pop    esp
  41fea7:	repz mov al,0xdd
  41feaa:	leave  
  41feab:	jo     0x41fe6c
  41fead:	xchg   BYTE PTR [edi],cl
  41feaf:	imul   ecx,DWORD PTR [edx+0x47],0x7d1ef1cb
  41feb6:	and    DWORD PTR [edx-0x32],0x94c07331
  41febd:	pushf  
  41febe:	and    DWORD PTR [esi],eax
  41fec0:	jae    0x41fe95
  41fec2:	pusha  
  41fec3:	popf   
  41fec4:	call   0xd23595c
  41fec9:	pop    ebp
  41feca:	push   0xf8df4529
  41fecf:	in     al,0xa1
  41fed1:	and    al,0x5a
  41fed3:	std    
  41fed4:	jb     0x41fe8d
  41fed6:	scas   al,BYTE PTR es:[edi]
  41fed7:	push   ss
  41fed8:	sbb    DWORD PTR [edx],edx
  41feda:	jne    0x41feb9
  41fedc:	inc    eax
  41fedd:	inc    esi
  41fede:	dec    esp
  41fedf:	mov    ah,0x4
  41fee1:	icebp  
  41fee2:	push   0x70c52de
  41fee7:	mov    DWORD PTR [ebp-0x8a63259],0x2f1dd7fc
  41fef1:	add    esi,DWORD PTR [ecx]
  41fef3:	(bad)  
  41fef4:	and    BYTE PTR [edx+eiz*2-0x60443f1b],dl
  41fefb:	sbb    eax,DWORD PTR [esi+0x62e4c7a1]
  41ff01:	in     eax,dx
  41ff02:	xchg   ebp,eax
  41ff03:	mul    eax
  41ff05:	cli    
  41ff06:	repnz add ecx,DWORD PTR [esi-0x6c648d02]
  41ff0d:	xchg   ebp,eax
  41ff0e:	adc    bh,0x7e
  41ff11:	cmp    DWORD PTR [esi+0x5747373c],ebx
  41ff17:	fisub  WORD PTR [esi-0x17]
  41ff1a:	and    esp,0xa2ea5b0e
  41ff20:	xchg   ebx,eax
  41ff21:	mov    esp,0xba91c11c
  41ff26:	or     esi,esp
  41ff28:	add    BYTE PTR [esi+0x59],bl
  41ff2b:	frstor [esi-0x7e1009a1]
  41ff31:	test   bl,0xb4
  41ff34:	push   eax
  41ff35:	retf   
  41ff36:	adc    al,0x61
  41ff38:	pusha  
  41ff39:	fld    st(1)
  41ff3b:	inc    edi
  41ff3c:	sahf   
  41ff3d:	push   esi
  41ff3e:	inc    ecx
  41ff3f:	lea    esi,[ebx+0x1a]
  41ff42:	stos   BYTE PTR es:[edi],al
  41ff43:	or     edi,DWORD PTR [ebp-0x1d54ab30]
  41ff49:	sbb    al,BYTE PTR [edx+edx*8]
  41ff4c:	clc    
  41ff4d:	pop    esp
  41ff4e:	cmp    eax,0x352fd09b
  41ff53:	aam    0xb9
  41ff55:	(bad)  
  41ff56:	fcomp  DWORD PTR [esi+0x5b7a42c0]
  41ff5c:	pop    ds
  41ff5d:	add    ah,BYTE PTR [eax+esi*2-0x4c]
  41ff61:	xchg   ebx,eax
  41ff62:	popa   
  41ff63:	test   ch,al
  41ff65:	jmp    0x82245918
  41ff6a:	out    0x42,eax
  41ff6c:	dec    eax
  41ff6d:	lods   al,BYTE PTR ds:[esi]
  41ff6e:	shl    BYTE PTR [edi+ebp*8+0x2e],1
  41ff72:	ja     0x41ff43
  41ff74:	adc    ebx,DWORD PTR [edi+0x13]
  41ff77:	les    esi,FWORD PTR [eax]
  41ff79:	cli    
  41ff7a:	pushf  
  41ff7b:	xchg   esp,eax
  41ff7c:	test   eax,0xaa22a1f2
  41ff81:	inc    esp
  41ff82:	add    al,0x2a
  41ff84:	out    dx,eax
  41ff85:	cmp    ah,BYTE PTR [edx-0x7a17c373]
  41ff8b:	mov    bh,0x3d
  41ff8d:	and    eax,0x46a5ef86
  41ff92:	inc    ebx
  41ff93:	in     eax,dx
  41ff94:	loope  0x41ffd8
  41ff96:	outs   dx,DWORD PTR ds:[esi]
  41ff97:	cmp    eax,DWORD PTR [ecx-0x46]
  41ff9a:	mov    esp,0x24680f11
  41ff9f:	bound  edi,QWORD PTR [ebx-0x59802ee6]
  41ffa5:	xchg   esi,eax
  41ffa6:	hlt    
  41ffa7:	les    ebp,FWORD PTR [esi+0x7a]
  41ffaa:	and    BYTE PTR [ecx],0xac
  41ffad:	pop    edx
  41ffae:	loope  0x41ffb5
  41ffb0:	xor    al,0x59
  41ffb2:	stos   BYTE PTR es:[edi],al
  41ffb3:	je     0x42000d
  41ffb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffb6:	aas    
  41ffb7:	cmp    eax,0xc73bb91f
  41ffbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ffbd:	push   ds
  41ffbe:	xchg   esi,eax
  41ffbf:	stos   BYTE PTR es:[edi],al
  41ffc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ffc1:	jnp    0x420002
  41ffc3:	leave  
  41ffc4:	lds    ebp,FWORD PTR [ecx-0x74a3c990]
  41ffca:	shl    DWORD PTR [ebx+0x38b70ca9],0x2c
  41ffd1:	xchg   esi,eax
  41ffd2:	test   DWORD PTR [eax],edx
  41ffd4:	scas   eax,DWORD PTR es:[edi]
  41ffd5:	and    edi,0x412b769b
  41ffdb:	out    dx,eax
  41ffdc:	mov    ch,0xe0
  41ffde:	jo     0x420007
  41ffe0:	push   ebx
  41ffe1:	dec    edx
  41ffe2:	sar    ecx,0xcb
  41ffe5:	mov    ah,ah
  41ffe7:	(bad)  
  41ffe8:	dec    ebx
  41ffe9:	ins    BYTE PTR es:[edi],dx
  41ffea:	inc    esi
  41ffeb:	jno    0x420021
  41ffed:	jmp    0xa0c83d8e
  41fff2:	sub    DWORD PTR [ecx+0x5f38eeae],eax
  41fff8:	mov    ecx,0xe84d8b0a
  41fffd:	sub    eax,ecx
  41ffff:	mov    DWORD PTR [ebp-0x18],eax
  420002:	or     DWORD PTR [ebp-0x18],0xf89f05a5
  420009:	mov    eax,DWORD PTR [ebp-0xc]
  42000c:	mov    ecx,DWORD PTR [ebp-0xc]
  42000f:	sub    eax,ecx
  420011:	mov    DWORD PTR [ebp-0xc],eax
  420014:	or     DWORD PTR [ebp-0xc],0xf89c85e5
  42001b:	mov    eax,DWORD PTR [ebp-0x1c]
  42001e:	mov    ecx,DWORD PTR [ebp-0x1c]
  420021:	sub    eax,ecx
  420023:	mov    DWORD PTR [ebp-0x1c],eax
  420026:	or     DWORD PTR [ebp-0x1c],0xf89c8585
  42002d:	mov    eax,DWORD PTR [ebp-0x20]
  420030:	mov    ecx,DWORD PTR [ebp-0x20]
  420033:	sub    eax,ecx
  420035:	mov    DWORD PTR [ebp-0x20],eax
  420038:	mov    eax,DWORD PTR [ebp-0x2c]
  42003b:	mov    ecx,DWORD PTR [ebp-0x20]
  42003e:	mov    esi,0x75108ae
  420043:	xor    eax,esi
  420045:	mov    edi,0x3272f5
  42004a:	add    eax,edi
  42004c:	or     eax,ecx
  42004e:	mov    DWORD PTR [ebp-0x20],eax
  420051:	mov    eax,DWORD PTR [ebp-0x4]
  420054:	mov    ecx,DWORD PTR [ebp-0x4]
  420057:	sub    eax,ecx
  420059:	mov    DWORD PTR [ebp-0x4],eax
  42005c:	or     DWORD PTR [ebp-0x4],0xf89c85be
  420063:	mov    eax,DWORD PTR [ebp-0xc]
  420066:	xor    eax,esi
  420068:	add    eax,edi
  42006a:	push   eax
  42006b:	mov    eax,DWORD PTR [ebp-0x10]
  42006e:	xor    eax,esi
  420070:	add    eax,edi
  420072:	push   eax
  420073:	mov    eax,DWORD PTR [ebp-0x4]
  420076:	xor    eax,esi
  420078:	add    eax,edi
  42007a:	push   eax
  42007b:	lea    eax,[ebp-0x78]
  42007e:	push   eax
  42007f:	push   DWORD PTR [ebp-0x2c]
  420082:	push   DWORD PTR [ebp-0x28]
  420085:	call   0x40f76f
  42008a:	test   eax,eax
  42008c:	je     0x4200ba
  420092:	lea    eax,[ebp-0x78]
  420095:	push   eax
  420096:	mov    eax,DWORD PTR [ebp-0x28]
  420099:	xor    eax,esi
  42009b:	add    eax,edi
  42009d:	push   eax
  42009e:	mov    eax,DWORD PTR [ebp-0x24]
  4200a1:	add    eax,0xaa
  4200a6:	push   eax
  4200a7:	mov    eax,DWORD PTR [ebp-0x24]
  4200aa:	mov    eax,DWORD PTR [eax+0x198]
  4200b0:	push   DWORD PTR [eax]
  4200b2:	call   0x4061fa
  4200b7:	mov    DWORD PTR [ebp-0x14],eax
  4200ba:	mov    ecx,DWORD PTR ds:0x42a56a
  4200c0:	lea    eax,[ebp+0x4]
  4200c3:	mov    DWORD PTR [ecx*4+0x42a562],eax
  4200ca:	inc    DWORD PTR ds:0x42a56a
  4200d0:	mov    eax,DWORD PTR [ebp-0x14]
  4200d3:	test   eax,eax
  4200d5:	je     0x4224ce
  4200db:	lea    eax,[ebp-0x8]
  4200de:	mov    DWORD PTR [ebp-0x34],eax
  4200e1:	mov    eax,DWORD PTR [ebp-0x30]
  4200e4:	mov    DWORD PTR [ebp-0x8],eax
  4200e7:	mov    eax,DWORD PTR [ebp-0x8]
  4200ea:	mov    ecx,DWORD PTR [ebp-0x14]
  4200ed:	sub    eax,ecx
  4200ef:	mov    DWORD PTR [ebp-0x8],eax
  4200f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4200f5:	xor    ecx,esi
  4200f7:	mov    eax,0xffcd8d0b
  4200fc:	sub    eax,ecx
  4200fe:	add    DWORD PTR [ebp-0x8],eax
  420101:	mov    eax,DWORD PTR [ebp-0x8]
  420104:	mov    ecx,DWORD PTR [ebp-0x14]
  420107:	mov    DWORD PTR [ecx+0x1],eax
  42010a:	mov    eax,DWORD PTR [ebp-0x14]
  42010d:	jmp    0x42249e
  420112:	adc    ebp,DWORD PTR [ebx]
  420114:	inc    BYTE PTR [eax-0x2a]
  420117:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420118:	xchg   ecx,eax
  420119:	or     dh,bh
  42011b:	lahf   
  42011c:	cmp    eax,0x126cb0a
  420121:	push   es
  420122:	push   es
  420123:	mov    dh,0x80
  420125:	or     DWORD PTR [edi],0x5e
  420128:	add    DWORD PTR [ebx-0x8099e2e],0xffffff9a
  42012f:	sub    BYTE PTR [eax+edx*1+0x691fe865],dl
  420136:	mov    ds:0xa152405c,eax
  42013b:	ds mov al,0x1c
  42013e:	pop    edi
  42013f:	daa    
  420140:	ficomp WORD PTR [esp+eax*8]
  420143:	sti    
  420144:	popf   
  420145:	jmp    0xec2b:0x33b987cc
  42014c:	adc    eax,0xeb826f20
  420151:	xchg   ebp,eax
  420152:	clc    
  420153:	enter  0x97d8,0x88
  420157:	sahf   
  420158:	arpl   WORD PTR [ebp-0x4e],cx
  42015b:	mov    ebx,0x1ff26966
  420160:	(bad)  
  420161:	scas   eax,DWORD PTR es:[edi]
  420162:	mov    edi,0x6f4fcd08
  420167:	and    ch,BYTE PTR [edx-0x40]
  42016a:	stos   BYTE PTR es:[edi],al
  42016b:	loope  0x420190
  42016d:	aaa    
  42016e:	jmp    0xc0620e84
  420173:	mov    bl,0x25
  420175:	clc    
  420176:	adc    BYTE PTR [eax],0x93
  420179:	pop    edx
  42017a:	jle    0x4200ff
  42017c:	rol    DWORD PTR [edi],1
  42017e:	jg     0x4201ed
  420180:	nop
  420181:	imul   DWORD PTR [ebx-0x4a]
  420184:	mov    esi,eax
  420186:	mov    eax,0x66d0461b
  42018b:	fiadd  WORD PTR [edx+0x7edb65ee]
  420191:	push   esi
  420192:	xchg   edx,eax
  420193:	rol    DWORD PTR [esi+eax*1-0x6a0aab95],1
  42019a:	jmp    0x229c:0x7cc8a950
  4201a1:	adc    al,dl
  4201a3:	lock in eax,0x80
  4201a6:	idiv   edx
  4201a8:	sahf   
  4201a9:	iret   
  4201aa:	lock push cs
  4201ac:	in     eax,dx
  4201ad:	and    eax,0xbc24e4b6
  4201b2:	xor    eax,0xf4b399a0
  4201b7:	call   0x40697822
  4201bc:	adc    BYTE PTR [ebp-0x661b4733],ah
  4201c2:	popf   
  4201c3:	mov    WORD PTR [ecx-0x6f],es
  4201c6:	xchg   esi,ebx
  4201c8:	aam    0x5f
  4201ca:	mov    eax,0x8581ad39
  4201cf:	push   edx
  4201d0:	(bad)  [ebp-0x50]
  4201d3:	ins    BYTE PTR es:[edi],dx
  4201d4:	rcr    DWORD PTR [edx+0x36dbfbab],cl
  4201da:	stc    
  4201db:	or     edi,esi
  4201dd:	mov    edx,edi
  4201df:	popa   
  4201e0:	mov    edx,edi
  4201e2:	test   DWORD PTR [edi-0x38bf1c8b],0x2cd35040
  4201ec:	push   ebx
  4201ed:	fiadd  WORD PTR [ebx+0x3447ec6c]
  4201f3:	cs loop 0x4201c5
  4201f6:	inc    edx
  4201f7:	pop    esi
  4201f8:	sub    BYTE PTR [eax],al
  4201fa:	fs cmp edi,esi
  4201fd:	push   0xf81702b5
  420202:	leave  
  420203:	sub    edx,ecx
  420205:	out    dx,al
  420206:	int3   
  420207:	and    cl,0xa0
  42020a:	adc    esp,esi
  42020c:	inc    esp
  42020d:	bound  edi,QWORD PTR [esi+0x27]
  420210:	es mov dh,0xc8
  420213:	in     eax,0x8f
  420215:	pop    ebx
  420216:	imul   eax,DWORD PTR [esi],0xb8dbb92b
  42021c:	addr16 mov dl,0x43
  42021f:	cwde   
  420220:	adc    ch,ah
  420222:	pop    esi
  420223:	scas   al,BYTE PTR es:[edi]
  420224:	jmp    0x12a0:0x4e36e731
  42022b:	xchg   esp,eax
  42022c:	sbb    al,0x10
  42022e:	push   edx
  42022f:	mov    ah,0x43
  420231:	ret    0xc167
  420234:	dec    ebx
  420235:	cmp    edi,edi
  420237:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420238:	xor    BYTE PTR [esp],0xdf
  42023c:	ds pop esi
  42023e:	pop    eax
  42023f:	lea    ebx,[ebx]
  420241:	(bad)  
  420242:	ds push esi
  420244:	and    al,0x8a
  420246:	adc    al,0x58
  420248:	cmp    eax,DWORD PTR [esi+0x1d5e09af]
  42024e:	jnp    0x4202b2
  420250:	nop
  420251:	sar    al,1
  420253:	out    dx,eax
  420254:	lea    ecx,[ebx+0x666abbbf]
  42025a:	pop    esp
  42025b:	mov    esi,0x99e50be9
  420260:	add    eax,DWORD PTR [edi+0x5a18157a]
  420266:	fld    TBYTE PTR [ecx+edx*1+0x24]
  42026a:	cs cmp al,0x49
  42026d:	xor    eax,0xf729844c
  420272:	mov    eax,0xe7ca6e25
  420277:	dec    edi
  420278:	mov    dl,0x20
  42027a:	stos   BYTE PTR es:[edi],al
  42027b:	into   
  42027c:	adc    edx,DWORD PTR [ebx+0x39fd7f79]
  420282:	adc    ah,BYTE PTR [ebx-0x5da22f4e]
  420288:	add    bl,ah
  42028a:	pop    edi
  42028b:	loopne 0x420223
  42028d:	dec    ebp
  42028e:	mov    ebp,0xa6b6107a
  420293:	(bad)  
  420295:	test   al,0x42
  420297:	lahf   
  420298:	sar    DWORD PTR [edx],1
  42029a:	addr16 js 0x42026d
  42029d:	shl    BYTE PTR [ebp-0xc51a4bf],1
  4202a3:	ret    
  4202a4:	push   0xba63b848
  4202a9:	fcomi  st,st(7)
  4202ab:	inc    esi
  4202ac:	cwde   
  4202ad:	sub    eax,0x336484bf
  4202b2:	jmp    0xa7c10e63
  4202b7:	add    BYTE PTR [ebp+0x48],0x8f
  4202bb:	shl    ch,1
  4202bd:	inc    ecx
  4202be:	sti    
  4202bf:	xor    ah,ch
  4202c1:	jecxz  0x420316
  4202c3:	or     al,0xb8
  4202c5:	std    
  4202c6:	shl    cl,0x29
  4202c9:	mov    ebp,DWORD PTR [esi-0x1a]
  4202cc:	(bad)  
  4202cd:	push   eax
  4202ce:	iret   
  4202cf:	popa   
  4202d0:	or     BYTE PTR [eax-0x1e4fbfa8],ah
  4202d6:	aad    0x1c
  4202d8:	xor    eax,0x5bca5f36
  4202dd:	jle    0x420268
  4202df:	adc    dh,ch
  4202e1:	sahf   
  4202e2:	sahf   
  4202e3:	mov    ds:0x7998e542,al
  4202e8:	and    BYTE PTR ds:0xec171d26,ah
  4202ee:	dec    ebp
  4202ef:	lods   eax,DWORD PTR ds:[esi]
  4202f0:	cld    
  4202f1:	stos   BYTE PTR es:[edi],al
  4202f2:	mov    ch,0x2a
  4202f4:	adc    bl,bl
  4202f6:	or     DWORD PTR [edi],0xf957840c
  4202fc:	push   ebx
  4202fd:	dec    ecx
  4202fe:	(bad)  [edi+0x5e]
  420301:	loopne 0x420322
  420303:	mov    al,ds:0x7807f322
  420308:	add    BYTE PTR [edx],ch
  42030a:	mov    ecx,0xcec6484e
  42030f:	outs   dx,DWORD PTR ds:[esi]
  420310:	inc    edx
  420311:	push   esi
  420312:	inc    eax
  420313:	mov    esi,0x894f3df4
  420318:	scas   eax,DWORD PTR es:[edi]
  420319:	push   ss
  42031a:	mov    ds,WORD PTR [edx]
  42031c:	dec    edi
  42031d:	adc    al,0x6e
  42031f:	jb     0x42030b
  420321:	pop    esp
  420322:	jae    0x420307
  420324:	inc    ebx
  420325:	(bad)  
  420326:	les    esi,FWORD PTR ds:0x69275350
  42032c:	retf   
  42032d:	fisttp WORD PTR [edx]
  42032f:	dec    ebp
  420330:	das    
  420331:	sub    DWORD PTR [edx],edi
  420333:	jmp    0x43ca34b6
  420338:	jb     0x42038e
  42033a:	loop   0x4202ee
  42033c:	jo     0x420379
  42033e:	sub    eax,DWORD PTR [edi+0x7f4dccdc]
  420344:	iret   
  420345:	sub    eax,0x4e294a40
  42034a:	retf   
  42034b:	adc    ebx,edx
  42034d:	push   edx
  42034e:	das    
  42034f:	cmp    ebp,DWORD PTR [ebx+0x3fdde41b]
  420355:	imul   esi,ebp,0xa1b69af0
  42035b:	pop    edx
  42035c:	push   ecx
  42035d:	jecxz  0x420397
  42035f:	test   al,0xbb
  420361:	ss push eax
  420363:	mov    bh,0x8f
  420365:	(bad)  
  420366:	dec    esp
  420367:	mov    ecx,0xb0997b20
  42036c:	ret    0xf0e1
  42036f:	out    0xa8,eax
  420371:	inc    esi
  420372:	or     esp,DWORD PTR [eax-0x68]
  420375:	jl     0x420304
  420377:	mov    BYTE PTR [ebx+0x20],ah
  42037a:	or     ah,BYTE PTR [ebp-0x30528421]
  420380:	test   BYTE PTR [ebp-0x1584386d],0xb0
  420387:	ja     0x420393
  420389:	imul   eax,DWORD PTR [edx],0xd2816c1e
  42038f:	cwde   
  420390:	add    DWORD PTR [ebp-0x187846dc],esp
  420396:	mov    dl,0x9c
  420398:	shl    DWORD PTR [ebx-0xe6ca495],1
  42039e:	mov    edi,esi
  4203a0:	pusha  
  4203a1:	mov    dl,0xeb
  4203a3:	in     al,dx
  4203a4:	mov    dh,0x7d
  4203a6:	mov    ebx,0x315ebd44
  4203ab:	push   ecx
  4203ac:	mov    dh,0x72
  4203ae:	fwait
  4203af:	out    0xf,al
  4203b1:	arpl   WORD PTR [esi-0x25b776db],ax
  4203b7:	sub    BYTE PTR [edi+0x79],dh
  4203ba:	add    ch,bl
  4203bc:	jle    0x420359
  4203be:	lea    edi,[ebp-0x3f]
  4203c1:	mov    dl,0x4b
  4203c3:	js     0x420397
  4203c5:	aas    
  4203c6:	loope  0x4203bf
  4203c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203c9:	mov    ecx,0x627a0a82
  4203ce:	retf   0x278f
  4203d1:	dec    edx
  4203d2:	dec    esi
  4203d3:	jns    0x420374
  4203d5:	xchg   esi,eax
  4203d6:	daa    
  4203d7:	mov    bh,0x93
  4203d9:	xor    eax,0x87bf5350
  4203de:	dec    ebx
  4203df:	push   edi
  4203e0:	cmc    
  4203e1:	addr16 xor al,0xc8
  4203e4:	sti    
  4203e5:	mov    eax,ds:0x81e23fce
  4203ea:	or     dl,BYTE PTR [esi+eiz*4]
  4203ed:	test   al,0xc6
  4203ef:	inc    esp
  4203f0:	(bad)  
  4203f1:	gs push esi
  4203f3:	jns    0x4203d7
  4203f5:	je     0x420427
  4203f7:	jmp    0x23c8:0x36555531
  4203fe:	(bad)  [edx+0x3af13dec]
  420404:	jae    0x42045a
  420406:	jp     0x420418
  420408:	in     al,dx
  420409:	ds pushf 
  42040b:	jmp    0x420429
  42040d:	fwait
  42040e:	xor    eax,0x2255846f
  420413:	push   ebp
  420414:	pop    edi
  420415:	cmp    al,0x2e
  420417:	jl     0x4203a4
  420419:	xchg   ebp,eax
  42041a:	cwde   
  42041b:	lods   al,BYTE PTR ds:[esi]
  42041c:	mov    al,ds:0x129c5690
  420421:	(bad)  [esi-0x45cc66c8]
  420427:	pusha  
  420428:	push   ebp
  420429:	cmp    ebx,DWORD PTR [ecx+0x30]
  42042c:	inc    eax
  42042d:	mov    ch,0xce
  42042f:	xor    edx,DWORD PTR [ecx]
  420431:	jl     0x420485
  420433:	aam    0x6d
  420435:	loopne 0x42047e
  420437:	jp     0x4203dc
  420439:	sub    edi,ecx
  42043b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42043c:	mov    al,ds:0xfb69679d
  420441:	xor    eax,0xe17ab9e9
  420446:	dec    ebp
  420447:	pop    eax
  420448:	cmp    DWORD PTR [esi-0x6855cbca],eax
  42044e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42044f:	push   eax
  420450:	mov    ebp,0x87696b6e
  420455:	add    DWORD PTR [esi+0x5e],esi
  420458:	mov    esi,0xaea04c05
  42045d:	jbe    0x4204a8
  42045f:	loope  0x420496
  420461:	ins    BYTE PTR es:[edi],dx
  420462:	and    edx,DWORD PTR [edi-0x3]
  420465:	pop    esp
  420466:	fadd   DWORD PTR [edx+0x6578b627]
  42046c:	mov    ds:0x25b9204a,eax
  420471:	xchg   edi,eax
  420472:	in     al,dx
  420473:	out    dx,al
  420474:	dec    eax
  420475:	das    
  420476:	inc    ebp
  420477:	in     al,0x8b
  420479:	lods   eax,DWORD PTR ds:[esi]
  42047a:	add    DWORD PTR [eax+edx*4-0x195f2561],ecx
  420481:	enter  0x90e2,0x12
  420485:	in     eax,0xb9
  420487:	cwde   
  420488:	leave  
  420489:	fucomp st(6)
  42048b:	sub    ebx,edi
  42048d:	mov    ebx,0x7aefe1fe
  420492:	fdivr  DWORD PTR [edi]
  420494:	cmp    ebx,edx
  420496:	sub    BYTE PTR ds:0x50a40a42,ch
  42049c:	mov    ebp,0x2cede3f3
  4204a1:	mov    WORD PTR [ecx],gs
  4204a3:	pop    ss
  4204a4:	fimul  DWORD PTR [edi]
  4204a6:	mov    esp,0xbe71b585
  4204ab:	ja     0x4204cb
  4204ad:	sub    esp,edx
  4204af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204b0:	aaa    
  4204b1:	(bad)  
  4204b2:	cs scas al,BYTE PTR es:[edi]
  4204b4:	je     0x4204e3
  4204b6:	sbb    al,0x88
  4204b8:	jmp    0x7c58:0xca555f85
  4204bf:	dec    edx
  4204c0:	mov    al,ds:0x9b42de46
  4204c5:	inc    edx
  4204c6:	xchg   ecx,eax
  4204c7:	push   esi
  4204c8:	dec    esp
  4204c9:	sub    al,0x40
  4204cb:	xor    eax,0x2defc0e8
  4204d0:	sar    BYTE PTR [edi+eax*4+0x61192f16],1
  4204d7:	imul   ecx,DWORD PTR [ebx],0xffffffd9
  4204da:	jae    0x420469
  4204dc:	sub    ebp,eax
  4204de:	pop    edx
  4204df:	cwde   
  4204e0:	push   DWORD PTR [esi]
  4204e2:	test   dl,bh
  4204e4:	(bad)  
  4204e5:	mov    dl,0x65
  4204e7:	aas    
  4204e8:	fwait
  4204e9:	(bad)  
  4204ea:	mov    edi,0x12c793a1
  4204ef:	loop   0x42056d
  4204f1:	pop    eax
  4204f2:	aad    0x54
  4204f4:	sti    
  4204f5:	das    
  4204f6:	inc    edi
  4204f7:	xchg   ebp,eax
  4204f8:	jno    0x420498
  4204fa:	jecxz  0x42055c
  4204fc:	or     eax,0x81c38cc1
  420501:	icebp  
  420502:	or     edi,0x82ba17d3
  420508:	ins    BYTE PTR es:[edi],dx
  420509:	jmp    0x420582
  42050b:	int3   
  42050c:	adc    ah,bh
  42050e:	and    ebx,DWORD PTR [edx-0x6]
  420511:	sbb    DWORD PTR [edi+0x0],edi
  420514:	sub    al,0x15
  420516:	jae    0x4204fd
  420518:	xchg   ecx,eax
  420519:	sbb    dh,BYTE PTR [ebx+edi*2-0x5e5b57e9]
  420520:	sub    eax,0x3334f415
  420525:	xor    BYTE PTR [ebp-0x4ea7e1e3],0xa9
  42052c:	into   
  42052d:	xor    BYTE PTR [edx],bh
  42052f:	and    DWORD PTR [ecx+0xf],edx
  420532:	lods   eax,DWORD PTR ds:[esi]
  420533:	daa    
  420534:	popf   
  420535:	xor    ch,BYTE PTR [ecx-0x7426dd89]
  42053b:	shl    BYTE PTR [eax+0x75],1
  42053e:	xchg   esp,eax
  42053f:	std    
  420540:	mov    dl,0xd
  420542:	xchg   esi,eax
  420543:	fisttp QWORD PTR [edi-0x29]
  420546:	xlat   BYTE PTR ds:[ebx]
  420547:	inc    edx
  420548:	fsub   st,st(1)
  42054a:	jbe    0x4205a3
  42054c:	push   edx
  42054d:	imul   edi,DWORD PTR [eax],0x4c
  420550:	int3   
  420551:	push   0xe81b41c3
  420556:	add    esp,DWORD PTR [edx+eax*1-0x4276869a]
  42055d:	ins    DWORD PTR es:[edi],dx
  42055e:	in     eax,0xd4
  420560:	sub    BYTE PTR [ecx+0x2e4a9549],cl
  420566:	rcr    BYTE PTR [ecx-0xc],0x96
  42056a:	sbb    edx,DWORD PTR [ecx+0x48]
  42056d:	xchg   ebp,eax
  42056e:	adc    BYTE PTR [edx-0x584950f5],al
  420574:	sub    eax,0x80685f1
  420579:	stos   BYTE PTR es:[edi],al
  42057a:	or     esp,DWORD PTR [ebp-0x7c]
  42057d:	arpl   WORD PTR [edx+0x71fe9bce],bx
  420583:	jle    0x42057c
  420585:	in     eax,0x3
  420587:	imul   edi,DWORD PTR [ecx-0x74],0x10
  42058b:	sub    DWORD PTR [esi-0x66],ebp
  42058e:	pop    eax
  42058f:	or     eax,edi
  420591:	push   esi
  420592:	adc    ebp,DWORD PTR ds:0xf3091732
  420598:	and    eax,0x8c9d86df
  42059d:	out    dx,al
  42059e:	(bad)  
  42059f:	jmp    0xee25a0ef
  4205a4:	nop
  4205a5:	das    
  4205a6:	in     eax,0x7
  4205a8:	mov    edx,0x13514322
  4205ad:	or     bh,dl
  4205af:	xlat   BYTE PTR ds:[ebx]
  4205b0:	jae    0x4205bf
  4205b2:	loop   0x420622
  4205b4:	xor    esi,ebp
  4205b6:	mov    ecx,0xc1f7a37c
  4205bb:	aas    
  4205bc:	xor    DWORD PTR [esi-0x4a],edx
  4205bf:	push   esi
  4205c0:	bound  esp,QWORD PTR [esi]
  4205c2:	out    0x84,eax
  4205c4:	ficomp WORD PTR [ebx]
  4205c6:	xor    esp,edx
  4205c8:	and    eax,0x323ef009
  4205cd:	not    edi
  4205cf:	test   edx,esi
  4205d1:	out    0xd,eax
  4205d3:	sbb    dl,ah
  4205d5:	out    0xf2,al
  4205d7:	out    0x2d,al
  4205d9:	je     0x420568
  4205db:	nop
  4205dc:	(bad)  
  4205dd:	xor    al,0xfd
  4205df:	repnz test cl,dh
  4205e2:	je     0x420584
  4205e4:	and    al,0x2
  4205e7:	mov    ds:0x17ed40a2,al
  4205ec:	repnz push esi
  4205ee:	mov    eax,ds:0x93d84553
  4205f3:	in     eax,0xcf
  4205f5:	sub    ebp,DWORD PTR [ebp-0x352b7a78]
  4205fb:	pusha  
  4205fc:	mov    ebp,0xb7dfdb29
  420601:	push   ebx
  420602:	jl     0x420657
  420604:	(bad)  
  420605:	push   esi
  420606:	inc    ebp
  420608:	xchg   ebx,esp
  42060a:	sub    DWORD PTR [eax-0x3a],0x53
  42060e:	adc    eax,0x78ee1ea
  420613:	sbb    eax,0x8163c304
  420618:	pop    eax
  420619:	add    eax,0x81967ad3
  42061e:	scas   eax,DWORD PTR es:[edi]
  42061f:	popa   
  420620:	jle    0x420661
  420622:	or     al,0xf4
  420624:	jecxz  0x42067c
  420626:	pop    edx
  420627:	xor    BYTE PTR [edi],0xb2
  42062a:	lahf   
  42062b:	or     esi,ebx
  42062d:	les    ebx,FWORD PTR [ecx]
  42062f:	(bad)  
  420630:	shr    DWORD PTR [ecx+0x6844a0fd],0x85
  420637:	cli    
  420638:	outs   dx,DWORD PTR ds:[esi]
  420639:	out    dx,al
  42063a:	out    0xef,al
  42063c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42063d:	repnz mov BYTE PTR [eax],bh
  420640:	ss dec ebp
  420642:	test   ebx,ebp
  420644:	(bad)  
  420645:	in     eax,0x99
  420647:	push   esp
  420648:	cmp    esp,DWORD PTR [eax]
  42064a:	push   edi
  42064b:	jne    0x420674
  42064d:	xor    al,0xe2
  42064f:	mov    al,0x4c
  420651:	or     esp,0x1b
  420654:	cld    
  420655:	ja     0x420609
  420657:	xchg   edx,eax
  420658:	or     DWORD PTR [edx-0x67],ebp
  42065b:	ss xchg edi,eax
  42065d:	sbb    DWORD PTR [eax+ecx*2+0x1a812aa4],edi
  420664:	ror    BYTE PTR [esi+eax*4+0x6ea9b4d9],1
  42066b:	repz cmp BYTE PTR [edx],ah
  42066e:	mov    DWORD PTR [edx+0x68a1e585],ebp
  420674:	fcomp  DWORD PTR [ebp-0x7c]
  420677:	out    0xb4,eax
  420679:	out    0x23,al
  42067b:	xor    BYTE PTR [esi],cl
  42067d:	sub    BYTE PTR [edx+0x19],cl
  420680:	into   
  420681:	inc    ebp
  420682:	inc    ebp
  420683:	jecxz  0x420681
  420685:	mov    al,0xaa
  420687:	adc    al,0x83
  420689:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42068a:	rcr    BYTE PTR [ecx+0x3c],cl
  42068d:	jge    0x420654
  42068f:	mov    BYTE PTR [edx+0x5eb6c217],al
  420695:	lock popa 
  420697:	fcmovu st,st(6)
  420699:	lds    eax,FWORD PTR [ecx]
  42069b:	mov    cl,0x5c
  42069d:	inc    ecx
  42069e:	or     edx,DWORD PTR [eax-0x63ac2adf]
  4206a4:	repz jbe 0x4206e1
  4206a7:	and    eax,0x2a6ba6ca
  4206ac:	push   ss
  4206ad:	shr    BYTE PTR [ebp+0x1c],1
  4206b0:	cli    
  4206b1:	inc    ecx
  4206b2:	repz scas al,BYTE PTR es:[edi]
  4206b4:	pop    ecx
  4206b5:	push   0x7ab36345
  4206ba:	std    
  4206bb:	cmp    ebp,ebp
  4206bd:	jmp    0x4206ed
  4206bf:	inc    ebx
  4206c0:	fbld   TBYTE PTR [eax+0x59]
  4206c3:	jecxz  0x42071d
  4206c5:	add    bh,dl
  4206c7:	jns    0x21c562e8
  4206cd:	shr    DWORD PTR [ecx+0x30],1
  4206d0:	fcomp  QWORD PTR [eax]
  4206d2:	jmp    0x6e6b:0x8a0c2e11
  4206d9:	test   BYTE PTR [esi-0x69033898],ah
  4206df:	xchg   DWORD PTR [ebx+0x703850f2],edx
  4206e5:	cld    
  4206e6:	jns    0x4206ff
  4206e8:	pop    esi
  4206e9:	xor    al,0x6e
  4206eb:	int    0x64
  4206ed:	mov    bl,0x8c
  4206ef:	add    esp,ecx
  4206f1:	mov    ds:0x75e54151,eax
  4206f6:	pop    esp
  4206f7:	cld    
  4206f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206f9:	jmp    0xdd6f:0xc0816915
  420700:	cmc    
  420701:	or     eax,0xafb8604b
  420706:	fild   WORD PTR [edx]
  420708:	stos   BYTE PTR es:[edi],al
  420709:	ja     0x42073a
  42070b:	xchg   DWORD PTR [edx+0x74],esp
  42070e:	bound  eax,QWORD PTR [ecx+0xc68bd86]
  420714:	inc    esi
  420715:	test   eax,0xd28b0f45
  42071a:	loopne 0x420799
  42071c:	sub    ecx,DWORD PTR [ebx+esi*4-0x18]
  420720:	push   ecx
  420721:	or     DWORD PTR [esi],ebp
  420723:	mov    bh,0x2d
  420725:	mov    cl,0xd5
  420727:	push   ds
  420728:	mov    cl,0x6a
  42072a:	jmp    0x77:0xc00c9195
  420731:	mov    bl,0x88
  420733:	(bad)  
  420734:	mov    edx,0xf72b6e5d
  420739:	inc    edi
  42073a:	in     al,dx
  42073b:	fdiv   QWORD PTR [eax-0x21]
  42073e:	sbb    al,0xeb
  420740:	(bad)  
  420741:	push   edi
  420742:	and    al,0xdd
  420744:	push   ss
  420745:	fcomp  st(5)
  420747:	dec    edx
  420748:	push   ecx
  420749:	push   ebx
  42074a:	push   edx
  42074b:	jo     0x420742
  42074d:	xor    ch,BYTE PTR [esi]
  42074f:	sub    DWORD PTR [edi],ecx
  420751:	xor    al,bl
  420753:	div    dh
  420755:	add    ch,al
  420757:	adc    BYTE PTR [esi],dl
  420759:	sbb    eax,0xd43e11c6
  42075e:	add    al,0x6d
  420760:	inc    esi
  420761:	imul   ebx,DWORD PTR [esi],0xb
  420764:	ret    
  420765:	js     0x4207cb
  420767:	xchg   esp,eax
  420768:	in     eax,0x84
  42076a:	ret    0xc1be
  42076d:	pop    eax
  42076e:	dec    ebx
  42076f:	jge    0x42074e
  420771:	fnsave [esi]
  420773:	mov    ecx,0x73c0056e
  420778:	mov    esp,0x5a295b80
  42077d:	mov    bl,BYTE PTR [edi-0x49]
  420780:	xor    eax,0x33817b6b
  420785:	dec    ecx
  420786:	leave  
  420787:	inc    ecx
  420788:	adc    ah,BYTE PTR [esi+0x637b8e75]
  42078e:	mov    ds:0x137ede6e,eax
  420793:	mov    ah,0xba
  420795:	pop    ebx
  420796:	stc    
  420797:	popa   
  420798:	dec    esi
  420799:	fst    DWORD PTR [edi-0x710984bb]
  42079f:	cmp    BYTE PTR [ecx-0x52496410],ch
  4207a5:	add    eax,DWORD PTR ds:0xe8aee99f
  4207ab:	cmp    bh,0x4d
  4207ae:	mov    edx,0xeeb48c26
  4207b3:	add    ebx,ecx
  4207b5:	pop    edx
  4207b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207b7:	addr16 popa 
  4207b9:	cld    
  4207ba:	stos   BYTE PTR es:[edi],al
  4207bb:	cmp    eax,0xc664fa25
  4207c0:	jne    0x420783
  4207c2:	adc    bh,BYTE PTR [esp+eax*8]
  4207c5:	xor    eax,0xadc2635a
  4207ca:	popf   
  4207cb:	add    cl,BYTE PTR [edx]
  4207cd:	not    dh
  4207cf:	sbb    DWORD PTR [edi],ecx
  4207d1:	fstp   QWORD PTR ds:0x3f1310d4
  4207d7:	hlt    
  4207d8:	xchg   DWORD PTR [ebx],esp
  4207da:	(bad)  
  4207db:	cs aas 
  4207dd:	and    eax,0xc4288ed1
  4207e2:	sub    DWORD PTR [esi-0x4c],0xffffffdf
  4207e6:	ins    DWORD PTR es:[edi],dx
  4207e7:	pop    ebx
  4207e8:	lods   al,BYTE PTR ds:[esi]
  4207e9:	enter  0x4920,0x2e
  4207ed:	shl    DWORD PTR [edi-0x6a0f823],0x89
  4207f4:	mov    dl,0xc4
  4207f6:	hlt    
  4207f7:	pop    esp
  4207f8:	adc    BYTE PTR [edi+0x40f1687f],cl
  4207fe:	dec    esp
  4207ff:	ins    DWORD PTR es:[edi],dx
  420800:	clc    
  420801:	cmp    ah,ch
  420803:	mov    al,0xdd
  420805:	inc    edi
  420806:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420807:	cmp    esi,eax
  420809:	loop   0x4207dc
  42080b:	mov    esi,0x39655137
  420810:	fsub   QWORD PTR [eax+esi*2+0x6e47b347]
  420817:	adc    eax,edi
  420819:	(bad)  
  42081a:	jns    0x420898
  42081c:	(bad)  
  42081d:	loopne 0x420819
  42081f:	xchg   esp,eax
  420820:	sbb    ebx,esi
  420822:	data16 loope 0x420839
  420825:	retf   0x502d
  420828:	mov    esi,0x928651ea
  42082d:	xchg   ecx,eax
  42082e:	jge    0x4208a8
  420830:	arpl   bx,si
  420832:	adc    eax,0x23e58de9
  420837:	aad    0xb5
  420839:	push   0x6be4dd1d
  42083e:	imul   edi,edi,0xffffffb5
  420841:	les    ebp,FWORD PTR [esi+ecx*4+0x73]
  420845:	dec    edx
  420846:	test   al,0xc9
  420848:	je     0x420887
  42084a:	add    BYTE PTR [ebx-0x471867dc],ch
  420850:	adc    bl,BYTE PTR [esp+edx*4]
  420853:	pop    ebx
  420854:	aaa    
  420855:	add    bl,BYTE PTR [eiz*1-0x5a370c3a]
  42085c:	xor    esp,DWORD PTR [ecx+0x56cc467a]
  420862:	mov    ah,BYTE PTR [ebx+0x2f]
  420865:	push   eax
  420866:	add    BYTE PTR [ebx],0x2
  420869:	xchg   esi,eax
  42086a:	scas   al,BYTE PTR es:[edi]
  42086b:	sub    BYTE PTR [edx],dl
  42086d:	jae    0x4208ea
  42086f:	test   eax,0x4ced111b
  420874:	cmp    al,BYTE PTR [esi-0xf]
  420877:	clc    
  420878:	call   0x1614:0x8970ef70
  42087f:	into   
  420880:	xchg   esp,eax
  420881:	loop   0x4208c0
  420883:	sti    
  420884:	bound  ebx,QWORD PTR [ecx-0x1b]
  420887:	xchg   esp,eax
  420888:	repnz lods al,BYTE PTR ds:[esi]
  42088a:	test   DWORD PTR [ebx],esi
  42088c:	daa    
  42088d:	inc    edi
  42088e:	sbb    al,0x5d
  420890:	cmp    cl,dl
  420892:	jbe    0x4208e5
  420894:	mov    bl,0x82
  420896:	aaa    
  420897:	or     BYTE PTR [ecx-0x2100ec8b],bh
  42089d:	in     al,0x81
  42089f:	rcl    al,0xb9
  4208a2:	sub    al,0x2a
  4208a4:	sbb    eax,0x3a982218
  4208a9:	mov    al,0xc5
  4208ab:	and    eax,0x523b91b8
  4208b0:	xor    al,0x56
  4208b2:	clc    
  4208b3:	popf   
  4208b4:	dec    ecx
  4208b5:	mov    ch,0xba
  4208b7:	das    
  4208b8:	jo     0x420885
  4208ba:	in     eax,dx
  4208bb:	outs   dx,BYTE PTR ds:[esi]
  4208bc:	sub    esp,esi
  4208be:	add    eax,0x852ac6e
  4208c3:	loopne 0x4208da
  4208c5:	shr    DWORD PTR [esp+edi*8+0x46881f50],cl
  4208cc:	int    0x46
  4208ce:	fcomp  DWORD PTR [ebx-0x35ab4380]
  4208d4:	mov    WORD PTR [ebx-0x72d25057],?
  4208da:	(bad)  
  4208db:	xchg   edi,eax
  4208dc:	jg     0x4208ba
  4208de:	adc    DWORD PTR [edi],edi
  4208e0:	sbb    al,0x9e
  4208e2:	pop    esp
  4208e3:	sbb    BYTE PTR [eax-0xa],bl
  4208e6:	jl     0x420874
  4208e8:	loopne 0x420947
  4208ea:	daa    
  4208eb:	xlat   BYTE PTR ds:[ebx]
  4208ec:	ja     0x420936
  4208ee:	outs   dx,DWORD PTR ds:[esi]
  4208ef:	push   esi
  4208f0:	push   es
  4208f1:	mov    ebx,0x8658af10
  4208f6:	jle    0x420965
  4208f8:	mov    bh,0xfe
  4208fa:	out    dx,eax
  4208fb:	das    
  4208fc:	sbb    BYTE PTR [ebx],cl
  4208fe:	add    esi,ebp
  420900:	xchg   esi,eax
  420901:	sbb    eax,0xb252316a
  420906:	repnz ror DWORD PTR [ebx],0xd1
  42090a:	cmp    al,0x53
  42090c:	call   0x42385e7c
  420911:	fadd   DWORD PTR [eax]
  420913:	rol    BYTE PTR [edx+0x20fc7fe4],1
  420919:	sahf   
  42091a:	loopne 0x4208dd
  42091c:	jmp    0xd944:0x5d71dfbf
  420923:	sub    DWORD PTR ss:[eax],esi
  420926:	retf   0xbd3c
  420929:	pushf  
  42092a:	pop    ebp
  42092b:	fdivr  DWORD PTR [edx]
  42092d:	loopne 0x420983
  42092f:	jmp    0x22bc:0xa57f0e7b
  420936:	mov    edi,0xbed4db70
  42093b:	in     al,0x88
  42093d:	pushf  
  42093e:	nop
  42093f:	das    
  420940:	push   cs
  420941:	adc    eax,0xd3c05d56
  420946:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420947:	push   es
  420948:	sbb    bh,BYTE PTR [esi-0x29]
  42094b:	cwde   
  42094c:	in     eax,0xe5
  42094e:	stos   DWORD PTR es:[edi],eax
  42094f:	cdq    
  420950:	outs   dx,DWORD PTR cs:[esi]
  420952:	dec    esi
  420953:	fdiv   st,st(0)
  420955:	ins    DWORD PTR es:[edi],dx
  420956:	push   ecx
  420957:	and    eax,0xb84c7ac4
  42095c:	add    al,0x32
  42095e:	test   al,0x77
  420960:	out    dx,eax
  420961:	mov    esi,0xb626c16b
  420966:	out    0x18,eax
  420968:	stos   DWORD PTR es:[edi],eax
  420969:	(bad)  
  42096a:	enter  0x1f1f,0xfe
  42096e:	jne    0x42099c
  420970:	xchg   BYTE PTR [ebx-0x74],ah
  420973:	ret    
  420974:	ss retf 0x78fe
  420978:	mov    al,ds:0x74e3102f
  42097d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42097e:	leave  
  42097f:	cs repnz sbb al,0xa6
  420983:	neg    DWORD PTR [ebp-0x49]
  420986:	xchg   esi,eax
  420987:	lods   eax,DWORD PTR ds:[esi]
  420988:	daa    
  420989:	jg     0x420940
  42098b:	aaa    
  42098c:	jl     0x4209aa
  42098e:	mov    cl,0xb3
  420990:	cmp    bh,BYTE PTR [ebp+0xb]
  420993:	cmc    
  420994:	sub    ch,BYTE PTR [edi]
  420996:	int    0x2
  420998:	xchg   BYTE PTR [ecx+0x56],bh
  42099b:	sbb    DWORD PTR [ebx],0x2d6de194
  4209a1:	addr16 pop esi
  4209a3:	mov    dh,BYTE PTR [ebp+0x62849414]
  4209a9:	and    ch,0x4f
  4209ac:	fild   DWORD PTR [edi-0x10157f69]
  4209b2:	(bad)  
  4209b4:	and    al,0xdc
  4209b6:	inc    esp
  4209b7:	mov    eax,0x1b426ceb
  4209bc:	lock pop eax
  4209be:	out    0x43,al
  4209c0:	sbb    eax,0x52ba8536
  4209c5:	dec    esp
  4209c6:	sbb    eax,0x2d21ddbb
  4209cb:	jge    0x4209ae
  4209cd:	push   esi
  4209ce:	push   esi
  4209cf:	sbb    eax,0xb769ce4e
  4209d4:	je     0x420985
  4209d6:	or     dl,BYTE PTR [eax+0x73a826a9]
  4209dc:	lock push ebx
  4209de:	sti    
  4209df:	jmp    0xf209:0x840e3a2f
  4209e6:	out    dx,eax
  4209e7:	(bad)  
  4209e8:	fs icebp 
  4209ea:	jnp    0x420a1b
  4209ec:	data16 (bad) 
  4209ee:	jo     0x4209a8
  4209f0:	mov    edx,0x14a64e8
  4209f5:	in     eax,0xb0
  4209f7:	pushf  
  4209f8:	jl     0x420a06
  4209fa:	outs   dx,BYTE PTR ds:[esi]
  4209fb:	punpckhwd mm3,QWORD PTR ss:[edx+eiz*1+0x2d]
  420a01:	dec    eax
  420a02:	lods   eax,DWORD PTR ds:[esi]
  420a03:	and    al,dh
  420a05:	in     eax,dx
  420a06:	lea    ebx,[ecx]
  420a08:	bound  ebp,QWORD PTR [ebp+0x68]
  420a0b:	jle    0x4209d9
  420a0d:	ror    BYTE PTR [ebp+0x5c],0xc9
  420a11:	lahf   
  420a12:	les    ebp,FWORD PTR [eax]
  420a14:	sbb    eax,0x9b5960a5
  420a19:	das    
  420a1a:	pusha  
  420a1b:	mov    ds:0xfa789907,al
  420a20:	mov    ch,0xde
  420a22:	pop    ss
  420a23:	popf   
  420a24:	pushf  
  420a25:	pop    ebx
  420a26:	test   eax,0x9b9a65
  420a2b:	lock and DWORD PTR [ebx],ebx
  420a2e:	jmp    0xb2fc:0x36b83009
  420a35:	fcom   DWORD PTR [edi+0x44]
  420a38:	fs inc eax
  420a3a:	sbb    eax,0x196643bd
  420a3f:	sar    DWORD PTR [ecx+0x36],cl
  420a42:	add    cl,cl
  420a44:	jae    0x420aab
  420a46:	mov    bl,0x64
  420a48:	or     al,cl
  420a4a:	idiv   bl
  420a4c:	les    edi,FWORD PTR [edi+edx*2+0x3fea0e01]
  420a53:	dec    ecx
  420a54:	xor    edi,ebp
  420a56:	dec    ebp
  420a57:	iret   
  420a58:	mov    WORD PTR [ebx-0x5e327e9a],gs
  420a5e:	lea    edi,[eax+0x32]
  420a61:	sahf   
  420a62:	dec    edi
  420a63:	cmp    eax,0xe90f2c96
  420a68:	dec    edx
  420a69:	mov    bh,0xb6
  420a6b:	cdq    
  420a6c:	jge    0x4209ee
  420a6e:	sub    cl,dl
  420a70:	mov    ds:0xadb914c9,al
  420a75:	xchg   ebx,eax
  420a76:	inc    edx
  420a78:	lds    ebp,FWORD PTR [bp+di]
  420a7b:	xchg   ebp,eax
  420a7c:	pop    esi
  420a7d:	cli    
  420a7e:	loop   0x420ade
  420a80:	pop    ds
  420a81:	xchg   esp,eax
  420a82:	clc    
  420a83:	cdq    
  420a84:	cld    
  420a85:	out    dx,eax
  420a86:	mov    al,ds:0x423a7233
  420a8b:	or     DWORD PTR [eax+0x6d],edi
  420a8e:	jp     0x420a21
  420a90:	psubusb mm2,mm5
  420a93:	icebp  
  420a94:	pop    esi
  420a95:	test   esp,esp
  420a97:	jmp    0x420a34
  420a99:	jb     0x420a7e
  420a9b:	or     eax,0xf9347ab9
  420aa0:	mov    ds:0xddc7bead,eax
  420aa5:	jge    0x420b09
  420aa7:	call   0x6b67:0x57982360
  420aae:	lods   eax,DWORD PTR ds:[esi]
  420aaf:	scas   al,BYTE PTR es:[edi]
  420ab0:	arpl   WORD PTR [ebx],cx
  420ab2:	xchg   esp,eax
  420ab3:	adc    BYTE PTR [edx],0x5
  420ab6:	shr    dh,0x95
  420ab9:	out    0xed,eax
  420abb:	pusha  
  420abc:	repz mov cs:0xaba31eb5,eax
  420ac3:	ret    0xe89c
  420ac6:	mov    ch,0xc0
  420ac8:	dec    edi
  420ac9:	adc    esp,ebp
  420acb:	pop    edi
  420acc:	scas   eax,DWORD PTR es:[edi]
  420acd:	int    0x1c
  420acf:	repnz pusha 
  420ad1:	jnp    0x420a81
  420ad3:	pop    eax
  420ad4:	sub    bl,BYTE PTR [ecx]
  420ad6:	mov    ds:0x511b97c2,eax
  420adb:	mov    al,0x66
  420add:	jo     0x420b2c
  420adf:	add    BYTE PTR cs:[ebx],0xbd
  420ae3:	sub    al,0x40
  420ae5:	fsub   QWORD PTR [ebx+0x3f]
  420ae8:	(bad)  
  420ae9:	fild   WORD PTR [eax]
  420aeb:	adc    cl,0x2d
  420aee:	xchg   esi,eax
  420aef:	xchg   ecx,eax
  420af0:	jecxz  0x420b00
  420af2:	loop   0x420aa0
  420af4:	pop    ds
  420af5:	inc    esi
  420af6:	ja     0x420aa2
  420af8:	sbb    DWORD PTR [ecx+edx*2],edi
  420afb:	ror    BYTE PTR [edx+eax*1],cl
  420afe:	das    
  420aff:	loope  0x420ac6
  420b01:	je     0x420aa4
  420b03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b04:	or     DWORD PTR [eax+edi*1+0x7820f658],0xffffffd5
  420b0c:	sti    
  420b0d:	imul   ecx,DWORD PTR [ebx+0x3e602fb3],0x740b3ec
  420b17:	pop    edx
  420b18:	int    0x14
  420b1a:	pop    ds
  420b1b:	xchg   ebx,eax
  420b1c:	icebp  
  420b1d:	push   cs
  420b1e:	or     eax,0xb1e1c1fe
  420b23:	pusha  
  420b24:	ret    0x985b
  420b27:	cwde   
  420b28:	iret   
  420b29:	and    eax,0x804c6ef1
  420b2e:	add    dh,0x95
  420b31:	aaa    
  420b32:	adc    eax,0x2668259
  420b37:	xor    eax,0xe7080e6d
  420b3c:	in     al,0x41
  420b3e:	repnz (bad) 
  420b40:	mov    bh,0x37
  420b42:	aam    0xb8
  420b44:	pop    ss
  420b45:	xor    ch,BYTE PTR [ebp+eax*1+0x3c]
  420b49:	pop    eax
  420b4a:	pop    esp
  420b4b:	mov    esi,0xa80ae152
  420b50:	out    0xe3,eax
  420b52:	outs   dx,DWORD PTR ds:[esi]
  420b53:	sub    al,0xe6
  420b55:	pop    esp
  420b56:	mov    ds:0x998db55e,eax
  420b5b:	jg     0x420aec
  420b5d:	push   ss
  420b5e:	int3   
  420b5f:	sbb    eax,0x8a92297c
  420b64:	pop    edi
  420b65:	out    0x5f,al
  420b67:	mov    al,0x79
  420b69:	push   ss
  420b6a:	jg     0x420be3
  420b6c:	jne    0x420af7
  420b6e:	sahf   
  420b6f:	dec    DWORD PTR [esi-0x4ed64a6d]
  420b75:	in     eax,0xf2
  420b77:	jb     0x420b1b
  420b79:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b7b:	mov    dh,0xbe
  420b7d:	dec    edx
  420b7e:	out    0xa2,eax
  420b80:	sbb    bh,BYTE PTR [ecx+0x4c1b9158]
  420b86:	imul   ebx,DWORD PTR [esi+0x5e],0xccaf6ec8
  420b8d:	icebp  
  420b8e:	xlat   BYTE PTR ds:[ebx]
  420b8f:	shl    DWORD PTR [ecx-0x41],0x8
  420b93:	sbb    BYTE PTR [ecx+0x3f4d8f7a],ch
  420b99:	cmp    BYTE PTR [ecx+0x74],0x2c
  420b9d:	xchg   esp,eax
  420b9e:	out    0x5e,al
  420ba0:	pushf  
  420ba1:	leave  
  420ba2:	jne    0x420b5f
  420ba4:	cs cmp eax,0x9f8a3abf
  420baa:	cld    
  420bab:	inc    eax
  420bac:	xor    esi,edi
  420bae:	(bad)  
  420baf:	retf   
  420bb0:	sub    BYTE PTR [ebx],0xb5
  420bb3:	xor    bh,BYTE PTR [ebx-0x70]
  420bb6:	cwde   
  420bb7:	sbb    dl,BYTE PTR [edx+0xc]
  420bba:	and    eax,0x80a16956
  420bbf:	and    BYTE PTR [edi-0x11],dh
  420bc2:	fidiv  WORD PTR [edi+0x20]
  420bc5:	sub    al,0x3d
  420bc7:	ds out 0xed,al
  420bca:	or     bh,BYTE PTR [ecx-0x79]
  420bcd:	int3   
  420bce:	jg     0x420c19
  420bd0:	push   ds
  420bd1:	hlt    
  420bd2:	xor    eax,0x4e942b10
  420bd7:	test   al,0x8e
  420bd9:	call   0xfa3b:0xa4e286dd
  420be0:	cli    
  420be1:	mov    ecx,0xe7a1fefd
  420be6:	jnp    0x420c38
  420be8:	ja     0x420b86
  420bea:	sahf   
  420beb:	in     eax,0x26
  420bed:	jmp    0x420bb9
  420bef:	es xchg esp,eax
  420bf1:	cs pop edi
  420bf3:	and    BYTE PTR [edx+0x578511fa],bl
  420bf9:	lds    ebp,FWORD PTR [esi]
  420bfb:	xor    eax,0x9eda14f1
  420c00:	jo     0x420bd5
  420c02:	daa    
  420c03:	add    ah,BYTE PTR [edi-0x288565ef]
  420c09:	push   ebx
  420c0a:	std    
  420c0b:	es inc esp
  420c0d:	push   0xba67a439
  420c12:	cdq    
  420c13:	jl     0x420b9d
  420c15:	xchg   ebx,eax
  420c16:	xchg   esp,eax
  420c17:	inc    edx
  420c18:	inc    ecx
  420c19:	jmp    0x645ae4e5
  420c1e:	xchg   edi,eax
  420c1f:	lods   al,BYTE PTR ds:[esi]
  420c20:	imul   ebp,eax,0xfffffff2
  420c23:	jg     0x420ba9
  420c25:	sub    BYTE PTR ds:0xc5a36893,dh
  420c2b:	pop    edi
  420c2c:	sub    edi,ecx
  420c2e:	pusha  
  420c2f:	jl     0x420be4
  420c31:	int3   
  420c32:	inc    dh
  420c34:	mov    eax,ds:0x4d55752
  420c39:	sbb    bh,BYTE PTR [eax-0x5b]
  420c3c:	push   ss
  420c3d:	stos   DWORD PTR es:[edi],eax
  420c3e:	inc    ecx
  420c3f:	outs   dx,BYTE PTR ds:[esi]
  420c40:	push   ds
  420c41:	mov    eax,ds:0x93a8f7a6
  420c46:	mov    BYTE PTR [esi],dh
  420c48:	lea    edx,[ebp+0x45]
  420c4b:	push   ecx
  420c4c:	mov    eax,0xdd4c0a52
  420c51:	pop    es
  420c52:	(bad)  [esi-0x178891ce]
  420c58:	in     al,0xf0
  420c5a:	xchg   esi,eax
  420c5b:	and    al,0xc4
  420c5d:	mov    sp,0xe753
  420c61:	xor    eax,0x6da32bdc
  420c66:	jae    0x420c3d
  420c68:	lock fiadd DWORD PTR [bx-0x22ba]
  420c6e:	pop    eax
  420c6f:	push   edx
  420c70:	jmp    0x420ca8
  420c72:	push   ss
  420c73:	test   BYTE PTR [edi+0x20],al
  420c76:	or     ebp,DWORD PTR [ecx-0x16]
  420c79:	lods   eax,DWORD PTR ds:[esi]
  420c7a:	outs   dx,DWORD PTR ds:[esi]
  420c7b:	jmp    0x8b8d4d4b
  420c80:	pop    edi
  420c81:	dec    ecx
  420c82:	dec    edi
  420c83:	xor    DWORD PTR [esi+0x50],edi
  420c86:	inc    ecx
  420c87:	xchg   BYTE PTR [edx],cl
  420c89:	jb     0x420c63
  420c8b:	js     0x420c94
  420c8d:	cmp    BYTE PTR [edx+0xf],ah
  420c90:	add    BYTE PTR [edi],dl
  420c92:	mov    eax,ds:0xd54cff25
  420c97:	repnz daa 
  420c99:	data16 cmp BYTE PTR [eax],cl
  420c9c:	jge    0x420c9c
  420c9e:	(bad)
  420ca1:	add    DWORD PTR cs:[eax+0x1160da50],edx
  420ca8:	pop    es
  420ca9:	aam    0xde
  420cab:	inc    edx
  420cac:	xor    al,0x78
  420cae:	ins    DWORD PTR es:[edi],dx
  420caf:	push   edx
  420cb0:	mov    ebp,0x85915858
  420cb6:	iret   
  420cb7:	xchg   ecx,eax
  420cb8:	outs   dx,DWORD PTR ds:[esi]
  420cb9:	jae    0x420c91
  420cbb:	mov    esi,0x406b0dc2
  420cc0:	dec    ecx
  420cc1:	adc    al,ch
  420cc3:	(bad)  
  420cc4:	retf   
  420cc5:	call   0x70e2b0d5
  420cca:	xchg   edi,eax
  420ccb:	xchg   ebp,eax
  420ccc:	cdq    
  420ccd:	cmp    DWORD PTR [edx-0x1d],esi
  420cd0:	loope  0x420c84
  420cd2:	or     DWORD PTR [edi+0x67],0xfffffffb
  420cd6:	loopne 0x420d0f
  420cd8:	int3   
  420cd9:	dec    edi
  420cda:	lock sub dh,bl
  420cdd:	mov    dl,BYTE PTR [esi-0x132afdfe]
  420ce3:	js     0x420d5d
  420ce5:	and    edi,DWORD PTR [eax+esi*2+0x6b]
  420ce9:	cmp    edx,DWORD PTR [eax+ebp*2]
  420cec:	(bad)
  420cef:	mov    cs,eax
  420cf1:	out    dx,al
  420cf2:	(bad)  [edx+0x58723ea1]
  420cf8:	loopne 0x420d16
  420cfa:	es inc ecx
  420cfc:	cmp    dh,BYTE PTR [edi+ebp*4+0x7d919c57]
  420d03:	aad    0x8c
  420d05:	into   
  420d06:	push   es
  420d07:	xor    DWORD PTR [edx],eax
  420d09:	mov    eax,ds:0x6fe63f86
  420d0e:	mov    cl,0xd0
  420d10:	test   BYTE PTR [ecx],0x67
  420d13:	into   
  420d14:	std    
  420d15:	lds    ebx,FWORD PTR [ebx]
  420d17:	sbb    dl,BYTE PTR [esi]
  420d19:	jecxz  0x420cf6
  420d1b:	push   ds
  420d1c:	mov    edx,cs
  420d1e:	je     0x420cd2
  420d20:	sub    DWORD PTR [edx],esi
  420d22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d23:	adc    eax,0xf44324c0
  420d28:	test   ah,cl
  420d2a:	ins    DWORD PTR es:[edi],dx
  420d2b:	jb     0x420cdf
  420d2d:	test   eax,0x6342be85
  420d32:	int    0x66
  420d34:	jmp    0x420d72
  420d36:	popa   
  420d37:	xor    eax,0x866c26b8
  420d3c:	add    DWORD PTR [ecx-0x37b8bc49],edi
  420d42:	jmp    0x5a6d9061
  420d47:	add    eax,edi
  420d49:	imul   ebx,ebp,0x2c
  420d4c:	daa    
  420d4d:	push   es
  420d4e:	gs push edi
  420d50:	test   BYTE PTR [esi+ebp*1],bl
  420d53:	imul   ecx,eax,0x3f
  420d56:	mov    eax,ds:0x712ceb2f
  420d5b:	aam    0xd6
  420d5d:	mov    edx,0xa1041aee
  420d62:	fisub  DWORD PTR [edi+0x7021bfc6]
  420d68:	or     ecx,DWORD PTR [edx-0x54e9674c]
  420d6e:	pop    ds
  420d6f:	jb     0x420d7d
  420d71:	mov    esi,DWORD PTR cs:[ecx]
  420d74:	sbb    dh,BYTE PTR [edx+0x4f600b85]
  420d7a:	add    BYTE PTR [eax+0x73],ch
  420d7d:	lahf   
  420d7e:	jp     0x420d90
  420d80:	cmp    eax,0x8a6bc922
  420d85:	sar    BYTE PTR [edx],cl
  420d87:	scas   eax,DWORD PTR es:[edi]
  420d88:	mov    ds:0xa95ed7fe,eax
  420d8d:	mov    edi,?
  420d8f:	iret   
  420d90:	popf   
  420d91:	arpl   WORD PTR [edi],sp
  420d93:	outs   dx,BYTE PTR ds:[esi]
  420d94:	jecxz  0x420d1d
  420d96:	sbb    eax,0x763923f9
  420d9b:	nop
  420d9c:	xchg   al,dl
  420d9e:	test   DWORD PTR [esi],ecx
  420da0:	pop    eax
  420da1:	cmp    BYTE PTR [eax-0x30],bh
  420da4:	dec    eax
  420da5:	inc    edi
  420da6:	push   eax
  420da7:	mov    ecx,0x673f6203
  420dac:	or     dl,bh
  420dae:	dec    ecx
  420daf:	pop    ds
  420db0:	scas   al,BYTE PTR es:[edi]
  420db1:	mov    ebp,edi
  420db3:	pop    ds
  420db4:	sbb    ah,BYTE PTR [ecx]
  420db6:	xor    al,0x3a
  420db8:	and    al,0x1d
  420dba:	pop    DWORD PTR [ebp+0x65511f25]
  420dc0:	enter  0xfa93,0xe
  420dc4:	adc    BYTE PTR ds:0xd5a20bb5,cl
  420dca:	lahf   
  420dcb:	push   ss
  420dcc:	in     eax,dx
  420dcd:	or     bh,ch
  420dcf:	pop    edx
  420dd0:	daa    
  420dd1:	sbb    al,0xa3
  420dd3:	mov    ch,0xbf
  420dd5:	mov    esi,0x1eb17cab
  420dda:	je     0x420e32
  420ddc:	repz mov ch,0xc4
  420ddf:	push   ebp
  420de0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420de1:	lock xchg edx,eax
  420de3:	mov    ch,0x26
  420de5:	leave  
  420de6:	mov    eax,0x90835a9b
  420deb:	sar    BYTE PTR [ecx-0xa],1
  420dee:	mov    bh,0x89
  420df0:	(bad)  
  420df1:	push   ecx
  420df2:	fnstenv [esi-0x7687168d]
  420df8:	mov    DWORD PTR [ebp+ebp*4+0x1aa724b0],edx
  420dff:	loop   0x420de1
  420e01:	ds cmp eax,eax
  420e04:	push   ds
  420e05:	fild   QWORD PTR [ebx+esi*8+0x487eeb77]
  420e0c:	pop    edx
  420e0d:	fucomp st(7)
  420e0f:	xor    al,0xb2
  420e11:	es pop edx
  420e13:	gs jl  0x420e7d
  420e16:	mov    edi,0x2d3044a1
  420e1b:	sbb    DWORD PTR [ebx],edi
  420e1d:	xchg   edx,eax
  420e1e:	hlt    
  420e1f:	sub    al,0xd4
  420e21:	push   ecx
  420e22:	dec    edi
  420e23:	push   ecx
  420e24:	popf   
  420e25:	xor    edi,DWORD PTR [edi]
  420e27:	cmp    BYTE PTR [ebp+0x3b],0x25
  420e2b:	loopne 0x420dc3
  420e2d:	mov    BYTE PTR [esi+0x4],cl
  420e30:	arpl   WORD PTR [ecx+ecx*2+0x3f41dac],sp
  420e37:	rcr    dh,1
  420e39:	scas   eax,DWORD PTR es:[edi]
  420e3a:	stos   DWORD PTR es:[edi],eax
  420e3b:	or     al,0xef
  420e3d:	pop    ebp
  420e3e:	js     0x420e2d
  420e40:	xchg   esp,eax
  420e41:	ds push ax
  420e44:	test   BYTE PTR [edx-0x60],ah
  420e47:	cmp    edx,esi
  420e49:	mov    DWORD PTR [edx-0x38],esp
  420e4c:	jbe    0x420e7b
  420e4e:	jb     0x420e37
  420e50:	or     al,0x55
  420e52:	and    bl,dh
  420e54:	les    esi,FWORD PTR [edi+eiz*1]
  420e57:	adc    DWORD PTR [eax+edx*2+0x67],eax
  420e5b:	rcr    BYTE PTR [edx+0x6cbbf44c],1
  420e61:	rcr    DWORD PTR [edx+0x2cf82ee2],0x15
  420e68:	int    0xc8
  420e6a:	iret   
  420e6b:	dec    ecx
  420e6c:	loope  0x420e3c
  420e6e:	fwait
  420e6f:	mov    DWORD PTR [ecx-0x21b0c97],0x81484550
  420e79:	aas    
  420e7a:	fadd   st(5),st
  420e7c:	aaa    
  420e7d:	jl     0x420eaf
  420e7f:	outs   dx,BYTE PTR ds:[esi]
  420e80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e81:	mov    ds:0x2f9766f3,eax
  420e86:	mov    ecx,0x575f7c84
  420e8b:	mov    BYTE PTR [edx],cl
  420e8d:	pop    ss
  420e8e:	xchg   esp,eax
  420e8f:	inc    ebp
  420e90:	and    BYTE PTR [eax+0xdb0903b],dh
  420e96:	sbb    bl,BYTE PTR [eax-0x388fdb2e]
  420e9c:	popa   
  420e9d:	jg     0x420f19
  420e9f:	xchg   edx,eax
  420ea0:	sub    DWORD PTR [eax+eax*1+0x28339966],edx
  420ea7:	jmp    0x7691:0x84a17dcb
  420eae:	dec    eax
  420eaf:	mov    ah,0x9e
  420eb1:	fldcw  WORD PTR [eax+esi*1-0x72095652]
  420eb8:	xor    eax,0xf26c66ee
  420ebd:	sbb    bl,BYTE PTR [ebx-0x4bb26933]
  420ec3:	popa   
  420ec4:	test   al,0xe8
  420ec6:	adc    BYTE PTR [ecx],0x33
  420ec9:	mov    bh,0x55
  420ecb:	loopne 0x420e8c
  420ecd:	(bad)  [eax]
  420ecf:	sbb    eax,0xee64de7f
  420ed4:	sub    esp,ebp
  420ed6:	dec    edx
  420ed7:	popa   
  420ed8:	imul   ebx,ecx,0x7c
  420edb:	xchg   edx,eax
  420edc:	aad    0xd2
  420ede:	xor    al,0xaf
  420ee0:	jno    0x420f30
  420ee2:	lea    ebp,[eax-0x33]
  420ee5:	xchg   ax,ax
  420ee7:	or     eax,0xd8911eb5
  420eec:	push   eax
  420eed:	sub    ebp,esp
  420eef:	in     eax,0x8b
  420ef1:	pop    eax
  420ef2:	and    BYTE PTR [edx-0x5bb177da],al
  420ef8:	or     dl,bh
  420efa:	cmp    bh,dl
  420efc:	xchg   BYTE PTR [eax],dl
  420efe:	mov    BYTE PTR [ebx+0x22],dh
  420f01:	mov    ebp,0x2d03d9ad
  420f06:	sbb    BYTE PTR [ecx],0xe0
  420f09:	jae    0x420edc
  420f0b:	sub    DWORD PTR [edi-0x48],esp
  420f0e:	jne    0x420ec3
  420f10:	jns    0x420ed5
  420f12:	jns    0x420f0c
  420f14:	repz imul ecx,DWORD PTR [ebx-0x584b2f48],0x22
  420f1c:	inc    eax
  420f1d:	fnstenv [ecx]
  420f1f:	call   0x2eb0:0xe3e77463
  420f26:	inc    eax
  420f27:	cmp    BYTE PTR [ebp+0xcc82ab2],0xe3
  420f2e:	aad    0x57
  420f30:	cli    
  420f31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f32:	icebp  
  420f33:	inc    edx
  420f34:	ja     0x420f4c
  420f36:	push   0xbd4bc5fc
  420f3b:	mov    edx,0xbc2a534d
  420f40:	push   ss
  420f41:	cs cwde 
  420f43:	and    al,0xae
  420f45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f46:	retf   0x6a5
  420f49:	xchg   edi,eax
  420f4a:	jb     0x420f7a
  420f4c:	mov    eax,ds:0x33edc8d5
  420f51:	rcr    BYTE PTR ds:0xc20a40d2,cl
  420f57:	mov    bl,0x83
  420f59:	lds    eax,FWORD PTR [edx-0x5b]
  420f5c:	jmp    0xd2ad5b34
  420f61:	das    
  420f62:	sbb    eax,DWORD PTR [eax]
  420f64:	ja     0x420ef0
  420f66:	(bad)
  420f69:	or     dh,BYTE PTR [ecx]
  420f6b:	daa    
  420f6c:	(bad)  
  420f6f:	cli    
  420f70:	pop    edx
  420f71:	cs out 0xce,eax
  420f74:	mov    eax,0x11924b49
  420f79:	pop    ebp
  420f7a:	mov    al,ds:0x875d257a
  420f7f:	js     0x420f55
  420f81:	dec    ecx
  420f82:	ja     0x420fea
  420f84:	pop    ds
  420f85:	ja     0x420fa8
  420f87:	xchg   edi,eax
  420f89:	ja     0x420f7a
  420f8b:	xlat   BYTE PTR ds:[ebx]
  420f8c:	push   0xfcc08ee2
  420f91:	imul   esi,DWORD PTR [ebp+0xa],0x4e
  420f95:	retf   
  420f96:	sub    BYTE PTR [esi],0x7a
  420f99:	in     al,0x7d
  420f9b:	cmc    
  420f9c:	arpl   WORD PTR [ebp+ecx*2-0x63881b7f],ax
  420fa3:	or     eax,0xfe389b4e
  420fa8:	and    cl,BYTE PTR [ebp-0xc9f89f7]
  420fae:	repnz push ebp
  420fb0:	push   ebp
  420fb1:	sub    BYTE PTR [ebp+0x3e],cl
  420fb4:	cmp    DWORD PTR [ebp+0x3dfacc77],edi
  420fba:	dec    DWORD PTR [edi-0x3821c098]
  420fc0:	stos   BYTE PTR es:[edi],al
  420fc1:	mov    al,0xf
  420fc3:	xor    eax,0x622cad92
  420fc8:	dec    ebx
  420fc9:	push   ebx
  420fca:	mov    al,ds:0xcffdd5f9
  420fcf:	mov    eax,ds:0xd3957b71
  420fd4:	or     DWORD PTR [ebx-0x5c],esi
  420fd7:	push   edx
  420fd8:	inc    ebx
  420fd9:	push   esp
  420fda:	leave  
  420fdb:	(bad)  
  420fdc:	adc    eax,0xece88b52
  420fe1:	call   0xae0f7f12
  420fe6:	ins    DWORD PTR es:[edi],dx
  420fe7:	fistp  QWORD PTR [edi+0x58]
  420fea:	in     al,0x21
  420fec:	addr16 loope 0x420ff5
  420fef:	int3   
  420ff0:	xchg   edi,eax
  420ff1:	sbb    dh,al
  420ff3:	(bad)  
  420ff4:	dec    esi
  420ff5:	mov    bh,0xc5
  420ff7:	cld    
  420ff8:	sbb    bl,cl
  420ffa:	push   ebp
  420ffb:	mov    fs,WORD PTR [edi]
  420ffd:	and    eax,edx
  420fff:	adc    DWORD PTR [edx-0x3b],esi
  421002:	call   0xac02:0x835780ec
  421009:	add    ecx,DWORD PTR ds:0x3d32ff2b
  42100f:	cld    
  421010:	pusha  
  421011:	stos   BYTE PTR es:[edi],al
  421012:	sbb    DWORD PTR ds:0xfb8ae160,0xffffffbf
  421019:	xor    al,0xda
  42101b:	and    DWORD PTR [ebx+0x2cba1bc5],0xa52ba20c
  421025:	mov    eax,ds:0xac948761
  42102a:	xor    ecx,DWORD PTR ds:0x7b872909
  421030:	data16 clc 
  421032:	mov    bh,0x53
  421034:	mov    edi,0x9449836a
  421039:	inc    BYTE PTR [ecx-0x13]
  42103c:	jae    0x421048
  42103e:	jle    0x421061
  421040:	scas   eax,DWORD PTR es:[edi]
  421041:	sub    dl,dh
  421043:	add    bl,BYTE PTR [ebx]
  421045:	cmp    BYTE PTR [edi],bl
  421047:	or     ah,BYTE PTR [esi]
  421049:	xlat   BYTE PTR ds:[ebx]
  42104a:	jle    0x421016
  42104c:	lods   eax,DWORD PTR ds:[esi]
  42104d:	repz xor al,0x8
  421050:	mov    BYTE PTR [edx+ebp*2-0x69],ch
  421054:	inc    esp
  421055:	push   es
  421056:	sub    al,0xa0
  421058:	jne    0x4210b8
  42105a:	and    eax,0x75cdbe42
  42105f:	into   
  421060:	outs   dx,DWORD PTR ds:[esi]
  421061:	ja     0x42102c
  421063:	(bad)  
  421064:	sub    DWORD PTR [ebx+ebp*8-0x46000234],ebp
  42106b:	xor    esp,DWORD PTR [eax+0xb]
  42106e:	sbb    eax,0x8bcd2838
  421073:	xchg   ebp,eax
  421074:	adc    DWORD PTR [edi-0x1d6252b4],ebp
  42107a:	pop    esp
  42107b:	sahf   
  42107c:	push   ebx
  42107d:	nop
  42107e:	cmp    DWORD PTR [edi+0x59bf517e],ecx
  421084:	sbb    al,0x9b
  421086:	(bad)  
  421087:	xor    DWORD PTR cs:[ebp-0x6d],edi
  42108b:	retf   0x3778
  42108e:	ret    
  42108f:	leave  
  421090:	ins    DWORD PTR es:[edi],dx
  421091:	cmp    al,0x1e
  421093:	pop    ebx
  421094:	adc    al,0x38
  421096:	fist   WORD PTR [esi-0x2c]
  421099:	sbb    ebp,0xffffffc9
  42109c:	stc    
  42109d:	(bad)  
  42109e:	xlat   BYTE PTR ds:[ebx]
  42109f:	shr    DWORD PTR [ebx+0x0],0x3c
  4210a3:	dec    edx
  4210a4:	stos   DWORD PTR es:[edi],eax
  4210a5:	mov    eax,0xbbcf3156
  4210aa:	stc    
  4210ab:	push   cs
  4210ac:	mov    dh,0xf4
  4210ae:	xor    eax,ecx
  4210b0:	inc    esp
  4210b1:	(bad)  
  4210b3:	call   0x8425:0xf61b18f3
  4210ba:	push   ds
  4210bb:	mov    ebx,0x4c5dd808
  4210c0:	add    bh,BYTE PTR [esi+0x40]
  4210c3:	jnp    0x4210af
  4210c5:	out    dx,al
  4210c6:	(bad)  
  4210c7:	pop    ecx
  4210c8:	add    ecx,edi
  4210ca:	ins    BYTE PTR es:[edi],dx
  4210cb:	outs   dx,DWORD PTR ds:[esi]
  4210cc:	aam    0x13
  4210ce:	and    dl,bh
  4210d0:	cwde   
  4210d1:	pop    ds
  4210d2:	inc    eax
  4210d3:	pop    edx
  4210d4:	dec    ebx
  4210d5:	enter  0xea5d,0xf4
  4210d9:	and    eax,0xa5a8f718
  4210de:	mov    dh,0x69
  4210e0:	dec    esp
  4210e1:	lds    edi,FWORD PTR [edi+0x5de72d8a]
  4210e7:	shl    bh,cl
  4210e9:	add    al,0xab
  4210eb:	aam    0xa5
  4210ed:	pop    esi
  4210ee:	dec    ebp
  4210ef:	cmp    DWORD PTR [ebx-0x32],eax
  4210f2:	fcom   DWORD PTR [ebp-0x56b7e953]
  4210f8:	cdq    
  4210f9:	mov    eax,ds:0x2447c615
  4210fe:	jae    0x4210e0
  421100:	pop    ds
  421101:	dec    eax
  421102:	mov    eax,0x36f420a1
  421107:	stc    
  421108:	not    dh
  42110a:	icebp  
  42110b:	ds setae bl
  42110f:	dec    edi
  421110:	inc    ebp
  421111:	dec    esi
  421112:	jge    0x421153
  421114:	fidiv  WORD PTR [esi+0x7e]
  421117:	sub    DWORD PTR [ebx+0x20],esp
  42111a:	adc    BYTE PTR [edx+0x17],ch
  42111d:	push   edi
  42111e:	mov    bh,BYTE PTR [ebp-0x766cb381]
  421124:	stc    
  421125:	fist   WORD PTR [ecx-0x4130e988]
  42112b:	xor    al,0xa
  42112d:	xor    DWORD PTR [ecx+0x1b],ecx
  421130:	jg     0x4210da
  421132:	add    BYTE PTR [esi-0x792e72f1],0x25
  421139:	popa   
  42113a:	mov    edi,0x3517ed09
  42113f:	pusha  
  421140:	inc    eax
  421141:	and    esp,DWORD PTR gs:[edi]
  421144:	sbb    BYTE PTR [edi+0x64d6d217],dh
  42114a:	hlt    
  42114b:	add    ah,ah
  42114d:	leave  
  42114e:	inc    edi
  42114f:	popf   
  421150:	test   bl,ah
  421152:	pop    es
  421153:	idiv   edi
  421155:	ret    0x7819
  421158:	repnz out dx,al
  42115a:	cmc    
  42115b:	inc    edx
  42115c:	iret   
  42115d:	test   DWORD PTR [eax-0x26c53c9c],eax
  421163:	jl     0x4211c6
  421165:	imul   edx,DWORD PTR [ecx+0x3f],0x2298a0f4
  42116c:	mov    es,eax
  42116e:	adc    eax,0xe68d2bfc
  421173:	mov    DWORD PTR [ebp+0x66a40b49],esi
  421179:	fisttp WORD PTR [edx]
  42117b:	mov    bh,0x48
  42117d:	adc    ecx,DWORD PTR [ebx+0x51b10f91]
  421183:	shl    BYTE PTR ds:0x8443d5e3,0xe7
  42118a:	pop    eax
  42118b:	mov    edx,DWORD PTR ds:0xc3718b9d
  421191:	sbb    BYTE PTR fs:[eax],dh
  421194:	pop    es
  421195:	push   ebp
  421196:	in     eax,dx
  421197:	pusha  
  421198:	cld    
  421199:	mov    ecx,0xd558828a
  42119e:	scas   eax,DWORD PTR es:[edi]
  42119f:	adc    DWORD PTR [edi],esp
  4211a1:	(bad)  
  4211a2:	sbb    edx,DWORD PTR [esi-0x6c893284]
  4211a8:	xchg   ebx,eax
  4211a9:	or     edi,DWORD PTR [ecx+0x63]
  4211ac:	pusha  
  4211ad:	dec    edx
  4211ae:	ucomiss xmm5,xmm7
  4211b1:	inc    ecx
  4211b2:	ss leave 
  4211b4:	sar    BYTE PTR [esi-0x7565841f],cl
  4211ba:	or     DWORD PTR [ebx+0x17],edx
  4211bd:	jmp    0x4211a4
  4211bf:	cmp    ch,BYTE PTR [edi]
  4211c1:	addr16 ss ds popa 
  4211c5:	push   eax
  4211c6:	pop    esi
  4211c7:	ds dec edx
  4211c9:	addr16 hlt 
  4211cb:	push   0x57
  4211cd:	imul   edi,DWORD PTR [eax],0x44
  4211d0:	les    ecx,FWORD PTR [ecx]
  4211d2:	jg     0x421189
  4211d4:	adc    eax,0x9eabd383
  4211d9:	mov    bl,0x9a
  4211db:	arpl   dx,bp
  4211dd:	push   ecx
  4211de:	aam    0xc8
  4211e0:	and    DWORD PTR [edx+eiz*1-0xc446465],0x319b56c2
  4211eb:	xor    DWORD PTR [ecx],edi
  4211ed:	jb     0x4211ef
  4211ef:	ds push ecx
  4211f1:	xor    dh,0x7e
  4211f4:	dec    ecx
  4211f5:	fild   QWORD PTR [edi]
  4211f7:	pop    edx
  4211f8:	xor    eax,0x26113f1f
  4211fd:	inc    esp
  4211fe:	in     al,dx
  4211ff:	in     eax,0xc
  421201:	pop    ebx
  421202:	dec    ebx
  421203:	stos   DWORD PTR es:[edi],eax
  421204:	xor    edx,esp
  421206:	loop   0x42127c
  421208:	jmp    0x55fa844c
  42120d:	xchg   DWORD PTR [ebp-0x4588e164],ecx
  421213:	(bad)  
  421214:	lds    edi,FWORD PTR [ebp+ebp*2-0x10]
  421218:	mov    ebx,0xfbc53ab0
  42121d:	and    bl,BYTE PTR [esi-0x4f09181b]
  421223:	and    al,0xe9
  421225:	mov    ch,ah
  421227:	shl    BYTE PTR [ebx],0x87
  42122a:	pminsw mm4,QWORD PTR [ebx-0x6958e557]
  421231:	outs   dx,BYTE PTR ds:[esi]
  421232:	pop    edx
  421233:	nop
  421234:	push   cs
  421235:	test   al,0xca
  421237:	mov    ebp,0xba7a3ab8
  42123c:	push   ebp
  42123d:	fsub   QWORD PTR [ebp+0x38]
  421240:	and    DWORD PTR [eax],eax
  421242:	xchg   edx,eax
  421243:	push   ecx
  421244:	mov    ebx,0xc3a68142
  421249:	das    
  42124a:	jne    0x42128e
  42124c:	pop    eax
  42124d:	shr    BYTE PTR [ebx],1
  42124f:	xor    dh,dh
  421251:	in     al,dx
  421252:	adc    eax,0x46c2a42e
  421257:	mov    BYTE PTR [ecx+0x1b57f6c],dl
  42125d:	sub    edx,DWORD PTR [ebx+0x29]
  421260:	xchg   ecx,eax
  421261:	sahf   
  421262:	cmp    DWORD PTR [ebx-0x367683e2],ebp
  421268:	shr    cl,cl
  42126a:	pop    esi
  42126b:	mov    eax,0xd30d455d
  421270:	push   ss
  421271:	fstp   DWORD PTR [ebx+0x13]
  421274:	and    eax,DWORD PTR [eax]
  421276:	popa   
  421277:	inc    esp
  421278:	int3   
  421279:	call   0x9029:0x9588d650
  421280:	ds ror dh,cl
  421283:	outs   dx,BYTE PTR ds:[esi]
  421284:	and    bh,cl
  421286:	les    esi,FWORD PTR [eax+esi*8+0x5d97dc38]
  42128d:	mov    cl,BYTE PTR [ebx*2-0x36f6e1aa]
  421294:	xchg   edi,eax
  421295:	push   eax
  421296:	jmp    0x421243
  421298:	loope  0x4212de
  42129a:	mov    ds:0xc851fa4b,al
  42129f:	lea    esp,[edx+0x2e0eaaa0]
  4212a5:	shl    DWORD PTR [eax+edi*8-0x5834f8cf],1
  4212ac:	sbb    bh,0xb1
  4212af:	mov    dh,BYTE PTR [eax]
  4212b1:	fbstp  TBYTE PTR [eax+0x32bd922f]
  4212b7:	sub    ch,bl
  4212b9:	mov    al,0x1a
  4212bb:	lods   eax,DWORD PTR ds:[esi]
  4212bc:	jp     0x42128c
  4212be:	loopne 0x4212a5
  4212c0:	push   cs
  4212c1:	not    DWORD PTR [esi]
  4212c3:	(bad)  
  4212c4:	icebp  
  4212c5:	in     al,dx
  4212c6:	lods   eax,DWORD PTR ds:[esi]
  4212c7:	push   cs
  4212c8:	shl    BYTE PTR [eax],1
  4212ca:	or     dl,ch
  4212cc:	push   eax
  4212cd:	loope  0x421331
  4212cf:	aad    0xd9
  4212d1:	dec    esi
  4212d2:	add    eax,0x9011092e
  4212d7:	test   DWORD PTR [eax+0x2f12aa75],edi
  4212dd:	leave  
  4212de:	int3   
  4212df:	mov    edi,0xf192915f
  4212e4:	jns    0x421324
  4212e6:	lods   eax,DWORD PTR ds:[esi]
  4212e7:	sub    ecx,esp
  4212e9:	dec    esi
  4212ea:	rol    DWORD PTR ds:0x84186c38,cl
  4212f0:	ror    DWORD PTR [esi],0x2c
  4212f3:	retf   0x3caa
  4212f6:	inc    edx
  4212f7:	pushf  
  4212f8:	inc    edx
  4212f9:	push   esp
  4212fa:	adc    BYTE PTR [esi-0x277e318a],ch
  421300:	ja     0x42135d
  421302:	add    al,0x42
  421304:	test   al,0xc
  421306:	add    DWORD PTR [edi+eax*1],ebp
  421309:	xor    esi,DWORD PTR [ebx-0x4]
  42130c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42130d:	xlat   BYTE PTR ds:[ebx]
  42130e:	lea    esp,[esi+0x6c85bced]
  421314:	mov    BYTE PTR [eax-0x77],ch
  421317:	aad    0x2
  421319:	stc    
  42131a:	inc    esp
  42131b:	(bad)
  42131e:	inc    esp
  42131f:	jecxz  0x4212bb
  421321:	cdq    
  421322:	adc    al,0x26
  421324:	retf   
  421325:	out    0x98,eax
  421327:	or     edx,DWORD PTR [edi+0x360b8301]
  42132d:	in     eax,0x9f
  42132f:	xchg   edx,eax
  421330:	push   edi
  421331:	ror    ebx,1
  421333:	jg     0x42132c
  421335:	adc    DWORD PTR ds:0x2a638b6d,eax
  42133b:	mov    al,ds:0xcedc5a81
  421340:	jg     0x4213a0
  421342:	out    0x81,eax
  421344:	or     eax,0x90c1f8ec
  421349:	fdiv   st,st(7)
  42134b:	inc    edi
  42134c:	(bad)  
  42134d:	push   ebp
  42134e:	inc    ebp
  42134f:	jno    0x42131a
  421351:	and    BYTE PTR [esi-0x40d18932],cl
  421357:	aaa    
  421358:	mov    dh,dl
  42135a:	add    al,0x3b
  42135c:	enter  0x7a32,0x2f
  421360:	add    BYTE PTR [edi],cl
  421362:	jmp    0xd15742ab
  421367:	lods   al,BYTE PTR ds:[esi]
  421368:	inc    ebx
  421369:	(bad)  
  42136a:	xchg   ecx,eax
  42136b:	push   ds
  42136c:	and    al,BYTE PTR [esi]
  42136e:	mov    esi,0x944b6ac4
  421373:	ss leave 
  421375:	cmp    BYTE PTR [esi-0x26],dh
  421378:	cdq    
  421379:	push   cs
  42137a:	xchg   ecx,eax
  42137b:	cs enter 0x25ec,0xb2
  421380:	jp     0x42133a
  421382:	sbb    al,0xd9
  421384:	data16 frstpm(287 only) 
  421387:	jle    0x421338
  421389:	jmp    0x603d:0x4db847e3
  421390:	sti    
  421391:	sti    
  421392:	push   0x18
  421394:	lods   eax,DWORD PTR ds:[esi]
  421395:	icebp  
  421396:	inc    esi
  421397:	pop    ss
  421398:	mov    bh,0x9d
  42139a:	je     0x421369
  42139c:	mov    eax,ds:0xd2f1da72
  4213a1:	xor    DWORD PTR [ecx],ecx
  4213a3:	pop    es
  4213a4:	hlt    
  4213a5:	mov    BYTE PTR [esi+0x6d],al
  4213a8:	mov    ch,0xec
  4213aa:	dec    ebx
  4213ab:	jbe    0x421395
  4213ad:	mov    eax,0x244a78ef
  4213b2:	vunpcklps xmm4,xmm7,XMMWORD PTR [ecx]
  4213b6:	cmp    al,0xeb
  4213b8:	jo     0x4213ff
  4213ba:	inc    ecx
  4213bb:	adc    al,0x46
  4213bd:	mov    dh,0x8a
  4213bf:	cli    
  4213c0:	in     eax,dx
  4213c1:	sbb    BYTE PTR [esi],cl
  4213c3:	jo     0x4213bc
  4213c5:	add    al,BYTE PTR [esi+eax*1]
  4213c8:	push   0x4aa25b08
  4213cd:	jmp    0x4213c6
  4213cf:	aas    
  4213d0:	idiv   BYTE PTR [ebx+0x5c]
  4213d3:	out    dx,al
  4213d4:	push   0xffffffea
  4213d6:	stos   DWORD PTR es:[edi],eax
  4213d7:	nop
  4213d8:	sub    al,0xc
  4213da:	add    DWORD PTR [eax+0x65715dc8],esi
  4213e0:	and    cl,bl
  4213e2:	jno    0x4213ee
  4213e4:	out    0x34,eax
  4213e6:	fst    st(3)
  4213e8:	push   0xeb28f41b
  4213ed:	push   esi
  4213ee:	test   eax,0xa83f64a4
  4213f3:	or     BYTE PTR [eax],bl
  4213f5:	and    dh,BYTE PTR ds:0xdc1c8465
  4213fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213fc:	mov    eax,ds:0x1b13db97
  421401:	add    al,0x8f
  421403:	aas    
  421404:	pop    edx
  421405:	rcl    BYTE PTR [esi],cl
  421407:	mov    bl,0x1d
  421409:	dec    edi
  42140a:	mov    al,ds:0x2f7aeeea
  42140f:	rcr    DWORD PTR ds:0x64693122,0xb
  421416:	lds    edi,FWORD PTR [ebp-0x70]
  421419:	mov    DWORD PTR [esi+0x637e9e91],ebp
  42141f:	add    eax,0x1b442417
  421424:	mov    ecx,0xa5a1666d
  421429:	aam    0x66
  42142b:	push   0x82bec13d
  421430:	cmp    BYTE PTR [edi],ah
  421432:	lock sbb DWORD PTR [eax-0x6e1b60a4],0xc8401579
  42143d:	cmp    al,0xdc
  42143f:	push   es
  421440:	inc    edi
  421441:	jl     0x42140b
  421443:	enter  0xd65d,0x6
  421447:	mov    eax,ds:0x451db35d
  42144c:	sahf   
  42144d:	mov    cl,BYTE PTR [ebp+0x6c6277cd]
  421453:	mov    DWORD PTR [edi-0x24],0x7ad78f0f
  42145a:	sub    BYTE PTR [ebx-0x652144b7],ah
  421460:	push   0xffffffc1
  421462:	shl    dh,1
  421464:	cdq    
  421465:	mov    bh,0x3c
  421467:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421468:	ror    DWORD PTR [edx],0x53
  42146b:	mov    ebx,0xcb0b4821
  421470:	xor    DWORD PTR [ebx-0x5b9a03e5],ecx
  421476:	js     0x42146b
  421478:	push   ebx
  421479:	inc    esi
  42147a:	shr    DWORD PTR [ebx+ecx*2-0x6c],0xc1
  42147f:	push   0xf1324c98
  421484:	inc    edx
  421485:	rol    al,1
  421487:	pop    ebx
  421488:	adc    eax,0xef26e6ef
  42148d:	das    
  42148e:	stos   BYTE PTR es:[edi],al
  42148f:	loop   0x42146d
  421491:	hlt    
  421492:	mov    ebx,0xbf1be909
  421497:	jo     0x4214ca
  421499:	add    ecx,DWORD PTR [edi+0x3d]
  42149c:	repnz in al,dx
  42149e:	fldenv [esi+edi*1]
  4214a1:	mov    ebx,DWORD PTR [esi-0x6d50469a]
  4214a7:	add    al,0xe6
  4214a9:	inc    bh
  4214ab:	sbb    BYTE PTR [edi+0x43bbaaf3],bl
  4214b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4214b2:	adc    esp,edi
  4214b4:	and    ch,BYTE PTR [edx-0x7b]
  4214b7:	sub    DWORD PTR [ebp-0x37],esi
  4214ba:	(bad)  
  4214bb:	mov    ebx,0xf44ac560
  4214c0:	stos   DWORD PTR es:[edi],eax
  4214c1:	aam    0x4f
  4214c3:	aaa    
  4214c4:	dec    edx
  4214c5:	sub    ah,dl
  4214c7:	test   eax,0xb605bff0
  4214cc:	faddp  st(7),st
  4214ce:	outs   dx,DWORD PTR ds:[esi]
  4214cf:	push   esi
  4214d0:	or     DWORD PTR ds:[ebx+0x22],0xffffff8d
  4214d5:	mov    edi,0xcb84fad0
  4214da:	ins    BYTE PTR es:[edi],dx
  4214db:	sbb    cl,dl
  4214dd:	adc    DWORD PTR [ebx],edx
  4214df:	cdq    
  4214e0:	mov    ebp,0x75c2238a
  4214e5:	repnz xor bl,ch
  4214e8:	mov    DWORD PTR [ecx-0x27],esp
  4214eb:	hlt    
  4214ec:	dec    eax
  4214ed:	or     bl,BYTE PTR [esi-0x45]
  4214f0:	mov    ds:0x2401b57d,al
  4214f5:	mov    al,0x50
  4214f7:	and    DWORD PTR [edi],ebx
  4214f9:	or     BYTE PTR [edx-0x3c],bh
  4214fc:	cmp    BYTE PTR [edi+0x24],bl
  4214ff:	xlat   BYTE PTR ds:[ebx]
  421500:	retf   0xd707
  421503:	mov    ds:0x380f65dc,al
  421508:	mov    al,0x76
  42150a:	pop    ebx
  42150b:	xlat   BYTE PTR ds:[ebx]
  42150c:	sti    
  42150d:	cmp    eax,0xdf5c1d21
  421512:	mov    DWORD PTR [esi+ecx*8-0x65],edx
  421516:	add    al,0x2c
  421518:	push   ds
  421519:	inc    eax
  42151a:	add    al,BYTE PTR [esi+0x77]
  42151d:	mov    eax,ds:0x81af3272
  421522:	(bad)  
  421523:	or     bh,cl
  421525:	xor    ch,BYTE PTR [eax]
  421527:	cmp    BYTE PTR [esi-0x1b],dh
  42152a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42152b:	mov    esi,0x7b404fa9
  421530:	and    bl,al
  421532:	scas   eax,DWORD PTR es:[edi]
  421533:	fsubr  DWORD PTR [ecx+ecx*8+0x59]
  421537:	jp     0x421516
  421539:	push   0xfffffff1
  42153b:	or     bl,BYTE PTR [esi+0x63cbdf67]
  421541:	jbe    0x421550
  421543:	vcvttss2si ecx,DWORD PTR [esi+0xef5f2f2]
  42154b:	push   ecx
  42154c:	arpl   cx,cx
  42154e:	clc    
  42154f:	mov    BYTE PTR [edx],dh
  421551:	test   ah,0xd3
  421554:	mov    al,ds:0xfdbe64d4
  421559:	stos   DWORD PTR es:[edi],eax
  42155a:	push   esp
  42155b:	fcmovnu st,st(2)
  42155d:	ins    BYTE PTR es:[edi],dx
  42155e:	jmp    DWORD PTR ds:0xa28e9b3e
  421564:	jmp    0xa7c5:0x33da7c9d
  42156b:	inc    ebx
  42156c:	xlat   BYTE PTR ds:[ebx]
  42156d:	jmp    0x98d2:0xa596154e
  421574:	enter  0x67e3,0x8f
  421578:	out    dx,al
  421579:	and    ebx,DWORD PTR [edi+ebp*2+0x52]
  42157d:	out    0x96,eax
  42157f:	les    esp,FWORD PTR [eax+ecx*2+0x2f906b69]
  421586:	repnz mul DWORD PTR [edx+0x7c4074e9]
  42158d:	cmp    al,0x19
  42158f:	call   0xa8ed7250
  421594:	pop    ebp
  421595:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421596:	popa   
  421597:	pop    edx
  421598:	aam    0x1d
  42159a:	jl     0x42152a
  42159c:	and    eax,0x779fccb8
  4215a1:	cmp    BYTE PTR [ecx-0x53],bh
  4215a4:	out    0x2f,eax
  4215a6:	and    esp,DWORD PTR [ebp+0x7c7295a2]
  4215ac:	ins    DWORD PTR es:[edi],dx
  4215ad:	adc    ebp,ecx
  4215af:	cmp    al,0x2b
  4215b1:	mov    eax,0x7f360154
  4215b6:	ret    
  4215b7:	pop    esp
  4215b8:	xchg   ecx,eax
  4215b9:	repz mov edx,0x947d2d9e
  4215bf:	mov    DWORD PTR [edx-0x20bf081f],esp
  4215c5:	lods   eax,DWORD PTR ds:[esi]
  4215c6:	cli    
  4215c7:	into   
  4215c8:	dec    ebx
  4215c9:	nop
  4215ca:	mov    DWORD PTR [ebp-0x35],edx
  4215cd:	vpunpcklwd ymm7,ymm7,YMMWORD PTR [edi+0x7e]
  4215d2:	sar    DWORD PTR [esi+0x7c1a4e4a],cl
  4215d8:	mov    edx,0x3133ca86
  4215dd:	enter  0x4b0f,0x7e
  4215e1:	xor    ch,BYTE PTR [ebx-0x60]
  4215e4:	pusha  
  4215e5:	and    BYTE PTR [edx],ch
  4215e7:	add    BYTE PTR [ecx+0x1f],0x23
  4215eb:	push   ds
  4215ec:	ja     0x421623
  4215ee:	jp     0x4215bf
  4215f0:	(bad)  
  4215f1:	mov    esi,0x1a4175de
  4215f6:	pushf  
  4215f7:	frndint 
  4215f9:	sub    ecx,ecx
  4215fb:	mov    DWORD PTR ds:0xab03137a,ebx
  421601:	add    eax,0x89b864ad
  421606:	push   ecx
  421607:	clc    
  421608:	push   esi
  421609:	sbb    eax,0x1e87da5e
  42160e:	sub    al,0xb5
  421610:	cmp    eax,0xd230adcb
  421615:	int    0xac
  421617:	xlat   BYTE PTR ds:[ebx]
  421618:	push   edx
  421619:	shr    esi,cl
  42161b:	push   ebp
  42161c:	mov    fs,WORD PTR [esi+0x54f0fadd]
  421622:	shl    BYTE PTR [ecx+0x7c],1
  421625:	dec    ebp
  421626:	out    dx,al
  421627:	pop    esi
  421628:	push   edi
  421629:	mov    ecx,0x24245522
  42162e:	lods   eax,DWORD PTR ds:[esi]
  42162f:	jecxz  0x4215e0
  421631:	jns    0x421635
  421633:	(bad)  
  421635:	xchg   ecx,eax
  421636:	sub    BYTE PTR [eax],bl
  421638:	adc    al,0xb0
  42163a:	ret    0x500d
  42163d:	cmp    BYTE PTR [ebp-0x6a],bh
  421640:	xchg   ebp,eax
  421641:	int    0xa0
  421643:	mov    ch,0x20
  421645:	mov    al,ds:0x2a9a76c4
  42164a:	arpl   si,bp
  42164c:	outs   dx,BYTE PTR ds:[esi]
  42164d:	mov    ebx,0xf7fee083
  421652:	ss mov ebp,0xa849524c
  421658:	loope  0x421694
  42165a:	sub    BYTE PTR [esi-0x9],0x6b
  42165e:	hlt    
  42165f:	test   DWORD PTR [ecx-0x339cbfb1],0x3873741b
  421669:	sub    ebx,DWORD PTR [esi-0x63f07bb7]
  42166f:	mov    ebp,0xec792ac1
  421674:	iret   
  421675:	jne    0x4216f6
  421677:	add    esp,DWORD PTR [edi-0x3d]
  42167a:	push   eax
  42167b:	scas   eax,DWORD PTR es:[edi]
  42167c:	xchg   esi,eax
  42167d:	retf   0xdbb0
  421680:	fist   DWORD PTR [eax]
  421682:	ins    BYTE PTR es:[edi],dx
  421683:	bound  ebx,QWORD PTR [ecx-0x1c15e18d]
  421689:	jle    0x42169c
  42168b:	xchg   ebx,eax
  42168c:	jbe    0x421692
  42168e:	or     esp,ebx
  421690:	xchg   edx,eax
  421691:	loop   0x4216d3
  421693:	cli    
  421694:	jp     0x421628
  421696:	stos   DWORD PTR es:[edi],eax
  421697:	mov    bl,ah
  421699:	retf   0x68cf
  42169c:	xor    DWORD PTR [edi],esi
  42169e:	xchg   edx,eax
  42169f:	jns    0x421635
  4216a1:	arpl   cx,cx
  4216a3:	xor    edi,ebx
  4216a5:	in     al,dx
  4216a6:	popf   
  4216a7:	ds pop ebp
  4216a9:	rcl    BYTE PTR [ebx-0x6f],0x97
  4216ad:	mov    edx,0xd728630f
  4216b2:	push   0x79649b08
  4216b7:	xor    DWORD PTR [edi+0x7b],esi
  4216ba:	iret   
  4216bb:	xchg   ebp,eax
  4216bc:	and    DWORD PTR [bx+si-0x4],edi
  4216c0:	outs   dx,BYTE PTR ds:[esi]
  4216c1:	sub    al,0xad
  4216c3:	fbld   TBYTE PTR [ebx-0x42]
  4216c6:	cmc    
  4216c7:	out    dx,eax
  4216c8:	(bad)  
  4216c9:	or     al,cl
  4216cb:	ret    
  4216cc:	ret    0x9edc
  4216cf:	sub    eax,0xe55a2eba
  4216d4:	cmp    ah,bl
  4216d6:	lea    esi,[edx+edx*2]
  4216d9:	sbb    al,0x10
  4216db:	mov    dl,0xd9
  4216dd:	loopne 0x421720
  4216df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216e0:	mov    bl,0xbd
  4216e2:	outs   dx,BYTE PTR ds:[esi]
  4216e3:	inc    edi
  4216e4:	jp     0x4216fa
  4216e6:	add    cl,bl
  4216e8:	mov    edx,DWORD PTR [edi]
  4216ea:	hlt    
  4216eb:	push   ds
  4216ec:	data16 fcomp QWORD PTR [esi+0x29]
  4216f0:	nop
  4216f1:	idiv   BYTE PTR [edx]
  4216f3:	xchg   ecx,eax
  4216f4:	and    eax,0x29d07368
  4216f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216fa:	sti    
  4216fb:	add    DWORD PTR [edx],esp
  4216fd:	mov    BYTE PTR [eax],bl
  4216ff:	aam    0xcf
  421701:	jmp    0x35e7:0xabb4a80d
  421708:	push   ebp
  421709:	dec    edi
  42170a:	pushf  
  42170b:	les    ebx,FWORD PTR [esi]
  42170d:	mov    esi,0x832f699d
  421712:	dec    eax
  421713:	push   esp
  421714:	fisttp QWORD PTR [ecx-0x6f4f9d64]
  42171a:	mov    ds:0xecf38e0e,al
  42171f:	sahf   
  421720:	outs   dx,DWORD PTR ds:[esi]
  421721:	or     al,0x7e
  421723:	adc    al,BYTE PTR [esi-0x38449320]
  421729:	imul   esi,DWORD PTR [edi],0xffffffac
  42172c:	mov    gs,WORD PTR [ebx+ebp*8-0x33]
  421730:	outs   dx,BYTE PTR ds:[esi]
  421731:	stos   BYTE PTR es:[edi],al
  421732:	add    al,0x70
  421734:	pop    esp
  421735:	dec    eax
  421736:	jnp    0x4216d6
  421738:	xor    al,0xb9
  42173a:	cmc    
  42173b:	sub    eax,0x398a8386
  421740:	sbb    al,0xaf
  421742:	mov    DWORD PTR ds:0x7b5b0044,ebp
  421748:	inc    esi
  421749:	sbb    eax,0x913c33b9
  42174e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42174f:	add    DWORD PTR [edx+0x664109bc],0x3e
  421756:	push   ebx
  421757:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421758:	and    eax,ebp
  42175a:	jmp    0xe66f029e
  42175f:	jno    0x4217a3
  421761:	fwait
  421762:	adc    DWORD PTR [edx-0x1b50f17d],ecx
  421768:	addr16 inc ebx
  42176a:	xchg   ebx,eax
  42176b:	cli    
  42176c:	cmp    cl,0x18
  42176f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421770:	in     eax,0xf5
  421772:	cmp    al,0x6e
  421774:	adc    ah,BYTE PTR [ecx]
  421776:	(bad)  
  421777:	fnstcw WORD PTR [ebx-0x65]
  42177a:	pop    es
  42177b:	ins    DWORD PTR es:[edi],dx
  42177c:	jl     0x421777
  42177e:	cmp    bh,BYTE PTR [ebp+0x39e065ed]
  421784:	mov    esp,0xf5ae6957
  421789:	mov    ah,0x71
  42178b:	ss nop
  42178d:	jmp    0x2f3c:0x9e71ab6a
  421794:	mov    edi,0x99698bbd
  421799:	ja     0x421812
  42179b:	cmp    BYTE PTR [ebp-0x1d070e4a],dh
  4217a1:	icebp  
  4217a2:	adc    BYTE PTR [edx-0x47b52bb3],bl
  4217a8:	sbb    al,0x7
  4217aa:	inc    eax
  4217ab:	(bad)  
  4217ad:	add    BYTE PTR [edx-0x69],bl
  4217b0:	pop    edx
  4217b1:	fs out dx,al
  4217b3:	ins    BYTE PTR es:[edi],dx
  4217b4:	inc    edi
  4217b5:	pushf  
  4217b6:	imul   esi,edx,0xffffffa4
  4217b9:	data16 data16 hlt 
  4217bc:	outs   dx,DWORD PTR ds:[esi]
  4217bd:	inc    ebx
  4217be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217bf:	adc    esp,DWORD PTR [edi]
  4217c1:	cdq    
  4217c2:	push   ebp
  4217c3:	jmp    0xa9f5041f
  4217c8:	fist   DWORD PTR [ebp-0x80]
  4217cb:	je     0x4217a2
  4217cd:	(bad)  
  4217ce:	cmp    dh,dh
  4217d0:	jb     0x4217cc
  4217d2:	dec    esp
  4217d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217d4:	sbb    edi,esp
  4217d6:	rcr    ebx,cl
  4217d8:	cmp    bl,dl
  4217da:	or     ebp,DWORD PTR [esi]
  4217dc:	mov    ds:0x62f3a0cd,eax
  4217e1:	lods   al,BYTE PTR ds:[esi]
  4217e2:	xor    esp,DWORD PTR ds:0x230a6de7
  4217e8:	mov    bl,0x29
  4217ea:	es out 0xb5,al
  4217ed:	push   edi
  4217ee:	(bad)  
  4217f0:	int    0x14
  4217f2:	pop    edx
  4217f3:	cmp    dh,BYTE PTR ds:0xb38929b4
  4217f9:	data16 cs pop si
  4217fd:	mov    DWORD PTR [edx+0x4c],eax
  421800:	fidiv  DWORD PTR [ecx+0x33]
  421803:	jnp    0x42182c
  421805:	jne    0x421875
  421807:	je     0x42181c
  421809:	xor    eax,0x3ad78fb2
  42180e:	jp     0x4217e3
  421810:	test   al,0x1c
  421812:	out    dx,eax
  421813:	popa   
  421814:	push   edx
  421815:	push   ss
  421816:	call   0x3aaa:0x19dd66ef
  42181d:	or     al,0x91
  42181f:	sbb    bl,dh
  421821:	iret   
  421822:	lahf   
  421823:	adc    edi,DWORD PTR [ebp-0x72]
  421826:	out    dx,eax
  421827:	out    dx,eax
  421828:	loopne 0x4217ad
  42182a:	jnp    0x421827
  42182c:	fs pop ebp
  42182e:	xlat   BYTE PTR ds:[ebx]
  42182f:	adc    BYTE PTR [edi],0xdf
  421832:	(bad)  
  421833:	dec    ch
  421835:	mov    ch,0xfe
  421837:	add    DWORD PTR [eax],ebx
  421839:	dec    ebp
  42183a:	xchg   DWORD PTR [edi-0x3bcdcbfb],ecx
  421840:	adc    ebp,esp
  421842:	mov    cl,dl
  421844:	adc    ebx,ebx
  421846:	clc    
  421847:	xchg   ebx,eax
  421848:	push   0x4f8a537c
  42184d:	jb     0x4218b4
  42184f:	xchg   edi,eax
  421850:	inc    esp
  421851:	add    al,0x40
  421853:	cwde   
  421854:	das    
  421855:	xchg   ecx,eax
  421856:	les    edx,FWORD PTR [ecx+0x2b]
  421859:	(bad)  
  42185a:	xor    BYTE PTR [edx+esi*1+0x19],ah
  42185e:	inc    esi
  42185f:	int3   
  421860:	pop    ecx
  421861:	scas   eax,DWORD PTR es:[edi]
  421862:	or     BYTE PTR [ecx],ah
  421864:	cmp    ah,ch
  421866:	retf   
  421867:	xchg   esi,eax
  421868:	or     al,0x8c
  42186a:	push   edi
  42186b:	imul   ebx,DWORD PTR [ecx],0x5c885871
  421871:	sub    DWORD PTR es:[si+0x2130],0xb
  421878:	cdq    
  421879:	jp     0x4218a7
  42187b:	inc    ebp
  42187c:	push   esp
  42187d:	sar    BYTE PTR [esi],0x23
  421880:	retf   
  421881:	and    dh,BYTE PTR [edx+0x63497845]
  421887:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421889:	nop
  42188a:	inc    esp
  42188b:	imul   ebp,DWORD PTR [ebp+0x79943c20],0x926bb379
  421895:	and    edx,DWORD PTR [edx-0x46f84c36]
  42189b:	stc    
  42189c:	cli    
  42189d:	add    al,0xe6
  42189f:	xor    eax,0x5623244a
  4218a4:	mov    eax,0xc9e9899e
  4218a9:	ds push ss
  4218ab:	aad    0x57
  4218ad:	in     al,dx
  4218ae:	rcr    DWORD PTR [ebp+ebp*8-0x3d],1
  4218b2:	pop    ebx
  4218b3:	in     al,0x76
  4218b5:	out    0x83,al
  4218b7:	inc    ebx
  4218b8:	jb     0x4218e1
  4218ba:	out    dx,al
  4218bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218bc:	mov    ebp,0x11569027
  4218c1:	push   ebx
  4218c2:	or     eax,0xc34fa193
  4218c7:	aad    0x95
  4218c9:	mov    edi,0x69203969
  4218ce:	push   edi
  4218cf:	jmp    0x4218ed
  4218d1:	push   edi
  4218d2:	jae    0x421903
  4218d4:	test   edx,ebx
  4218d6:	cmp    eax,0xb879885b
  4218db:	push   ebp
  4218dc:	call   0xb9127049
  4218e1:	push   ecx
  4218e2:	(bad)  
  4218e3:	mov    edx,0xd40ae90e
  4218e8:	mov    al,ds:0x8fa768d0
  4218ed:	dec    esp
  4218ee:	mov    ebp,0xb53d9e38
  4218f3:	mov    eax,0x8449c88f
  4218f8:	rcl    BYTE PTR [edx],0xf7
  4218fb:	into   
  4218fc:	imul   esp,ecx,0xffffffd0
  4218ff:	imul   edi,DWORD PTR [esi+ebp*1+0x2e95b294],0xd7b91993
  42190a:	bound  eax,QWORD PTR [edi-0x5661542d]
  421910:	or     ecx,DWORD PTR [ecx]
  421912:	stos   BYTE PTR es:[edi],al
  421913:	mov    esp,ebp
  421915:	sbb    DWORD PTR [eax-0x4a80451],ebp
  42191b:	add    BYTE PTR [edi-0x15],dl
  42191e:	sahf   
  42191f:	stos   DWORD PTR es:[edi],eax
  421920:	push   ebx
  421921:	shl    DWORD PTR [edx+0x74],1
  421924:	ss aaa 
  421926:	pop    ds
  421927:	je     0x421912
  421929:	je     0x421914
  42192b:	mov    dl,0xb0
  42192d:	cmp    eax,0xc1684a2c
  421932:	or     al,0x6f
  421934:	cmp    eax,0x6aa5a816
  421939:	jmp    0x421931
  42193b:	cs out dx,eax
  42193d:	iret   
  42193e:	test   BYTE PTR [edi],ch
  421940:	xchg   edi,eax
  421941:	adc    ecx,ecx
  421943:	nop
  421944:	loopne 0x421927
  421946:	hlt    
  421947:	out    0x99,eax
  421949:	ins    DWORD PTR es:[edi],dx
  42194a:	jle    0x4218da
  42194c:	jmp    0x16:0xdadda467
  421953:	xchg   esi,eax
  421954:	popa   
  421955:	ret    0x9aec
  421958:	pop    ebp
  421959:	mov    ecx,0x9b5c8cde
  42195e:	mov    ds:0xae83b7b3,al
  421963:	fwait
  421964:	xchg   edx,eax
  421965:	out    0x88,eax
  421967:	and    BYTE PTR [ebp+edi*4-0x4fe77153],0xc7
  42196f:	sbb    ah,BYTE PTR [ebx*4-0x1b7dc66b]
  421976:	sub    ebp,edx
  421978:	call   0x4409:0x46efb397
  42197f:	cmp    ebx,DWORD PTR [ecx+edi*2+0x5]
  421983:	test   DWORD PTR [edx],0xae9d53ef
  421989:	jl     0x4219a9
  42198b:	fsub   DWORD PTR [ecx-0xf]
  42198e:	leavew 
  421990:	gs js  0x42194f
  421993:	inc    ebp
  421994:	cmp    DWORD PTR ds:0xabd66661,esp
  42199a:	sub    dh,dh
  42199c:	in     eax,0x8c
  42199e:	mov    dh,BYTE PTR [ecx-0x2a]
  4219a1:	aas    
  4219a2:	adc    DWORD PTR [edx+0x313cf753],ebp
  4219a8:	mov    al,ds:0x16f00fb2
  4219ad:	pusha  
  4219ae:	sub    bl,BYTE PTR [ebp-0x1c]
  4219b1:	sub    ebp,DWORD PTR [ecx+0x3b]
  4219b4:	mov    dh,0x39
  4219b6:	jbe    0x421999
  4219b8:	mov    esi,0x5690597b
  4219bd:	pushf  
  4219be:	and    BYTE PTR [edx],bl
  4219c0:	scas   al,BYTE PTR es:[edi]
  4219c1:	or     dl,BYTE PTR [ecx]
  4219c3:	pop    ss
  4219c4:	mov    esp,0x7d99c7dc
  4219c9:	adc    eax,0x37c76645
  4219ce:	mov    edi,0x2c3dddd3
  4219d3:	push   cs
  4219d4:	arpl   WORD PTR [edi-0x73],bx
  4219d7:	shl    BYTE PTR [esi],0x17
  4219da:	outs   dx,BYTE PTR ds:[esi]
  4219db:	push   cs
  4219dc:	cs fcom DWORD PTR gs:[edi+0x7a6eec5d]
  4219e4:	cmp    edi,DWORD PTR [edi]
  4219e6:	out    0x17,eax
  4219e8:	mov    ecx,0x2fc344e5
  4219ed:	inc    esi
  4219ee:	jne    0x421a68
  4219f0:	mov    bh,0xed
  4219f2:	out    dx,al
  4219f3:	mov    esi,0x7fc2e7
  4219f8:	pop    es
  4219f9:	ins    DWORD PTR es:[edi],dx
  4219fa:	repz sti 
  4219fc:	(bad)  
  4219fd:	mov    bh,0x89
  4219ff:	mov    ch,0x4f
  421a01:	xchg   esp,eax
  421a02:	out    dx,al
  421a03:	repnz xchg edi,eax
  421a05:	neg    ch
  421a07:	xchg   DWORD PTR [esi-0xb],edx
  421a0a:	dec    ebx
  421a0b:	icebp  
  421a0c:	out    0xd3,eax
  421a0e:	or     DWORD PTR [edx+0x6b],ecx
  421a11:	xchg   ebx,eax
  421a12:	add    DWORD PTR [ebx],edx
  421a14:	aas    
  421a15:	sar    DWORD PTR [ebp-0x51661618],1
  421a1b:	test   DWORD PTR [ecx+eax*1+0x4b2be7d9],0xab50b9d0
  421a26:	mov    al,0xd8
  421a28:	ss dec ecx
  421a2a:	xchg   ebp,eax
  421a2b:	adc    ecx,DWORD PTR [ebx]
  421a2d:	ror    DWORD PTR [ebx],0xe4
  421a30:	mov    ah,0xd2
  421a32:	cmc    
  421a33:	mov    ds:0xcc1ea51d,eax
  421a38:	inc    ax
  421a3a:	mov    eax,0x7d557ab0
  421a3f:	jo     0x421a44
  421a41:	pusha  
  421a42:	lods   eax,DWORD PTR ds:[esi]
  421a43:	sbb    ah,BYTE PTR [ebx-0x50d1d569]
  421a49:	je     0x421a13
  421a4b:	fst    st(5)
  421a4d:	loope  0x421a1d
  421a4f:	inc    esp
  421a50:	lods   al,BYTE PTR ds:[esi]
  421a51:	mov    BYTE PTR [ecx-0x24ce85b],cl
  421a57:	lods   al,BYTE PTR ds:[esi]
  421a58:	lods   eax,DWORD PTR ds:[esi]
  421a59:	mov    ds:0x3265ef37,al
  421a5e:	out    dx,al
  421a5f:	bnd jae 0x421aa3
  421a62:	add    DWORD PTR [ebp+0x4c],ebp
  421a65:	sbb    BYTE PTR [ebx-0x48],ch
  421a68:	cmp    ecx,DWORD PTR [esi+0x27b7ff6b]
  421a6e:	fadd   DWORD PTR [edi-0x4]
  421a71:	sbb    bh,BYTE PTR ds:0x35334813
  421a77:	test   DWORD PTR [ebp-0x57d98f83],0xfd6b31be
  421a81:	adc    al,0x65
  421a83:	in     eax,dx
  421a84:	sahf   
  421a85:	add    BYTE PTR [esi],ch
  421a87:	rcr    bh,cl
  421a89:	loopne 0x421ae5
  421a8b:	dec    esi
  421a8c:	cwde   
  421a8d:	arpl   WORD PTR [edi+edi*4],bx
  421a90:	aam    0x1
  421a92:	(bad)  
  421a93:	(bad)  
  421a94:	call   0x5784a6df
  421a99:	mov    edi,0xd7adfee8
  421a9e:	or     ch,BYTE PTR [esp+ecx*4+0x4f]
  421aa2:	and    DWORD PTR [eax+0x3b],0xfdd722d3
  421aa9:	lds    edx,FWORD PTR [eax]
  421aab:	lds    ebp,FWORD PTR [ebp-0x68893405]
  421ab1:	daa    
  421ab2:	out    0x6,al
  421ab4:	imul   esp,ecx,0xffffffe7
  421ab7:	add    al,0x44
  421ab9:	jmp    0xc582:0x5aef8bce
  421ac0:	fs push esp
  421ac2:	and    eax,0xd5cf8fc0
  421ac7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ac8:	add    al,0x4b
  421aca:	sub    DWORD PTR [ecx+0x24],edi
  421acd:	test   edi,edx
  421acf:	lea    ecx,[eax+0x2a]
  421ad2:	pop    esp
  421ad4:	into   
  421ad5:	sahf   
  421ad6:	dec    ecx
  421ad7:	pop    ds
  421ad8:	push   ecx
  421ad9:	shl    al,0x41
  421adc:	bsr    ecx,ebx
  421adf:	sbb    al,0xfa
  421ae1:	(bad)  [ebp+0x7d519fb8]
  421ae7:	je     0x421ae4
  421ae9:	xchg   ebx,eax
  421aea:	dec    esi
  421aeb:	sub    ebp,esi
  421aed:	push   edi
  421aee:	push   0xffffff85
  421af0:	dec    ecx
  421af1:	inc    ebx
  421af2:	test   DWORD PTR [eax-0x3c168c44],edx
  421af8:	rol    cl,0x71
  421afb:	call   FWORD PTR [esi+0x2]
  421afe:	data16 (bad) 
  421b00:	xchg   ebp,eax
  421b01:	mov    BYTE PTR [edx+0x3d],dl
  421b04:	mov    DWORD PTR [edi+0x46],edi
  421b07:	cli    
  421b08:	xchg   esi,eax
  421b09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b0a:	add    ah,ah
  421b0c:	xchg   edx,eax
  421b0d:	jo     0x421aab
  421b0f:	xor    edx,DWORD PTR ds:0xe69b13d6
  421b15:	dec    edi
  421b16:	lock xor eax,0x4e3da7da
  421b1c:	pop    edx
  421b1d:	stc    
  421b1e:	pop    edi
  421b1f:	mov    al,ds:0x6ee26322
  421b24:	scas   eax,DWORD PTR es:[edi]
  421b25:	xchg   edi,eax
  421b26:	xchg   ecx,eax
  421b27:	push   0x7276314c
  421b2c:	repz adc DWORD PTR ds:0x7e72547a,esi
  421b33:	or     al,0x86
  421b35:	add    al,0xe1
  421b37:	jmp    0xd05f:0x8df3e096
  421b3e:	in     al,0xaa
  421b40:	loop   0x421b62
  421b42:	jmp    0x5b88e83e
  421b47:	cmp    BYTE PTR [esi-0x7c],al
  421b4a:	pop    ds
  421b4b:	xchg   DWORD PTR [ebp+0x11f8d5cc],edi
  421b51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b52:	push   ebp
  421b53:	gs std 
  421b55:	lock (bad) 
  421b57:	repnz xor esp,edx
  421b5a:	aad    0x71
  421b5c:	inc    ebx
  421b5d:	sub    DWORD PTR [ebp-0x6eabaf15],ebx
  421b63:	enter  0x1bda,0x1a
  421b67:	adc    eax,0x5cc6541c
  421b6c:	dec    esi
  421b6d:	inc    dh
  421b6f:	mov    al,0x73
  421b71:	jge    0x421b55
  421b73:	add    DWORD PTR [eax+edi*4+0x160f6a2e],0x17
  421b7b:	mov    eax,ds:0x123f073f
  421b80:	adc    BYTE PTR [ebp-0x779a54df],bl
  421b86:	fisttp WORD PTR [eax+0x23e5c46b]
  421b8c:	sub    BYTE PTR [edx-0x3bbc8c34],bl
  421b92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b93:	das    
  421b94:	dec    esp
  421b95:	loope  0x421b25
  421b97:	push   es
  421b98:	and    edx,DWORD PTR [esi-0x1e]
  421b9b:	outs   dx,BYTE PTR ds:[esi]
  421b9c:	fwait
  421b9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b9e:	xor    ebx,ebx
  421ba0:	dec    esp
  421ba1:	clc    
  421ba2:	idiv   DWORD PTR [ebx]
  421ba4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ba5:	pop    ebx
  421ba6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ba7:	sub    bl,BYTE PTR [esi-0x70]
  421baa:	mov    gs,WORD PTR fs:[edi]
  421bad:	or     bl,BYTE PTR [edx-0x34]
  421bb0:	imul   ebp,ebp,0x4a
  421bb3:	ss lock aad 0x49
  421bb7:	inc    ebp
  421bb8:	xor    al,0xd9
  421bba:	push   ebx
  421bbb:	lods   ax,WORD PTR ds:[esi]
  421bbd:	in     eax,0x4
  421bbf:	push   esp
  421bc0:	inc    edi
  421bc1:	cmp    eax,0x58849728
  421bc6:	fisub  DWORD PTR [ebx-0x73]
  421bc9:	jae    0x421c3f
  421bcb:	sub    BYTE PTR [eax+ebx*8-0x41],dl
  421bcf:	imul   edx,DWORD PTR [edx],0x54
  421bd2:	ficomp DWORD PTR [ebx-0x7c16fd87]
  421bd8:	repnz arpl WORD PTR [edx],ax
  421bdb:	sub    ebx,eax
  421bdd:	xchg   edx,eax
  421bde:	and    dl,bh
  421be0:	sbb    ah,BYTE PTR [eax]
  421be2:	test   BYTE PTR ds:0xa109ea50,dh
  421be8:	sub    dl,0x5b
  421beb:	adc    BYTE PTR [ebx-0xa],0x6f
  421bef:	adc    eax,0xe2a8cd2
  421bf4:	dec    edx
  421bf5:	inc    edx
  421bf6:	mov    ch,0x84
  421bf8:	xchg   edi,ecx
  421bfa:	jb     0x421bcb
  421bfc:	jge    0x421c78
  421bfe:	xor    cl,al
  421c00:	xchg   edx,eax
  421c01:	in     eax,0x13
  421c03:	adc    esp,DWORD PTR [eax+0x72]
  421c06:	adc    al,0x9b
  421c08:	scas   eax,DWORD PTR es:[edi]
  421c09:	dec    ebp
  421c0a:	je     0x421bae
  421c0c:	stc    
  421c0d:	inc    esi
  421c0e:	imul   eax,DWORD PTR [esi-0x5e95b85f],0xc76ac176
  421c18:	push   ecx
  421c19:	out    0xcf,eax
  421c1b:	cdq    
  421c1c:	xchg   edi,eax
  421c1d:	mov    ebx,0xd678cd30
  421c22:	int3   
  421c23:	fdiv   QWORD PTR ds:0x6d3f0d48
  421c29:	scas   eax,DWORD PTR es:[edi]
  421c2a:	ret    
  421c2b:	dec    edi
  421c2c:	mov    ds,WORD PTR ds:0xc40b69c1
  421c32:	out    dx,al
  421c33:	xchg   DWORD PTR [esi+0x29],edi
  421c36:	dec    edi
  421c37:	or     eax,0xfba0c623
  421c3c:	stos   DWORD PTR es:[edi],eax
  421c3d:	test   BYTE PTR [edi],cl
  421c3f:	sahf   
  421c40:	cmp    BYTE PTR [edx-0x44],al
  421c43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c44:	add    esp,esp
  421c46:	gs and ah,bh
  421c49:	add    BYTE PTR [ebp+0x3f6d7ab6],ah
  421c4f:	sub    bh,BYTE PTR [edi-0x65cf67af]
  421c55:	pop    eax
  421c56:	push   ebp
  421c57:	jge    0x421c85
  421c59:	pushf  
  421c5a:	ins    BYTE PTR es:[edi],dx
  421c5b:	icebp  
  421c5c:	dec    eax
  421c5d:	outs   dx,DWORD PTR ds:[esi]
  421c5e:	jb     0x421c43
  421c60:	adc    BYTE PTR [eax+0x3c],ah
  421c63:	inc    edx
  421c64:	shr    DWORD PTR [edx+0x67c74d2a],1
  421c6a:	mov    ebx,0x8cee516
  421c6f:	adc    ecx,DWORD PTR [edi+0x4991dd51]
  421c75:	aad    0x5c
  421c77:	jae    0x421c8a
  421c79:	jmp    FWORD PTR [ecx]
  421c7b:	cmp    DWORD PTR [esi+0x35afd259],edx
  421c81:	(bad)  
  421c82:	sbb    al,0x8
  421c84:	lock cmp eax,0x799264ba
  421c8a:	mov    ebp,0xf4d73b39
  421c8f:	cld    
  421c90:	fmul   st,st(1)
  421c92:	jnp    0x421c39
  421c94:	ror    BYTE PTR [esi],1
  421c96:	fstp   TBYTE PTR [ebx]
  421c98:	into   
  421c99:	cs xchg ecx,eax
  421c9b:	adc    esi,DWORD PTR [eax]
  421c9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c9e:	icebp  
  421c9f:	cmp    BYTE PTR [edx+ebx*2-0x5a],0x16
  421ca4:	sub    eax,0xd54d916
  421ca9:	inc    ecx
  421caa:	xor    eax,0xa8575e06
  421caf:	in     eax,dx
  421cb0:	xchg   BYTE PTR [ecx],ch
  421cb2:	ror    DWORD PTR [eax-0xd0a08dd],0x72
  421cb9:	push   edx
  421cba:	int3   
  421cbb:	repz jns 0x421c6f
  421cbe:	sub    eax,0xa25f0e58
  421cc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cc4:	(bad)  
  421cc5:	mov    al,cl
  421cc7:	dec    eax
  421cc8:	and    ebx,DWORD PTR [edx+0x25]
  421ccb:	popa   
  421ccc:	xchg   ebp,eax
  421ccd:	mov    edi,0x7e667f24
  421cd2:	(bad)  
  421cd3:	mov    esp,0x31b31af4
  421cd8:	cld    
  421cd9:	mov    bh,0x35
  421cdb:	jg     0x421c77
  421cdd:	or     eax,0xa80d8696
  421ce2:	push   ss
  421ce3:	lahf   
  421ce4:	mov    bl,0xf9
  421ce6:	cld    
  421ce7:	pop    edx
  421ce8:	stc    
  421ce9:	int    0x1c
  421ceb:	(bad)  
  421cec:	aam    0x4
  421cee:	jnp    0x421d06
  421cf0:	in     eax,dx
  421cf1:	push   edx
  421cf2:	push   eax
  421cf3:	dec    edx
  421cf4:	dec    ebx
  421cf5:	cmc    
  421cf6:	in     eax,dx
  421cf7:	cmp    DWORD PTR [edi+0x3a19f285],esi
  421cfd:	sar    BYTE PTR [edi+0x263d2f57],0x26
  421d04:	xchg   esi,eax
  421d05:	test   al,0x56
  421d07:	outs   dx,BYTE PTR ds:[esi]
  421d08:	sbb    BYTE PTR [edi+0x15],dh
  421d0b:	mov    WORD PTR [eax+0x19],?
  421d0e:	bound  ecx,QWORD PTR [eax+0x2c]
  421d11:	(bad)  
  421d12:	fld    DWORD PTR [esi+0x67]
  421d15:	pop    ds
  421d16:	out    dx,eax
  421d17:	xchg   BYTE PTR cs:[ebx+0x47],cl
  421d1b:	mov    edi,DWORD PTR [edi+0x2f]
  421d1e:	xor    al,0xce
  421d20:	or     DWORD PTR [edx-0x219b0f16],edx
  421d26:	add    al,0x69
  421d28:	sbb    eax,0x99e1574f
  421d2d:	arpl   WORD PTR [edx-0x195eee17],bp
  421d33:	push   ecx
  421d34:	sub    edx,DWORD PTR [bp+si-0x3f25]
  421d39:	loopne 0x421da2
  421d3b:	add    DWORD PTR [eax-0x7b],edx
  421d3e:	popf   
  421d3f:	and    dh,ah
  421d41:	inc    esi
  421d42:	bound  ebx,QWORD PTR [ebp+0x7d]
  421d45:	cmc    
  421d46:	fld    QWORD PTR [eax+eax*8]
  421d49:	repz mov dx,0xee52
  421d4e:	aam    0x3d
  421d50:	scas   eax,DWORD PTR es:[edi]
  421d51:	dec    edx
  421d52:	ja     0x421da6
  421d54:	loop   0x421d52
  421d56:	scas   eax,DWORD PTR es:[edi]
  421d57:	jmp    0xc92616ff
  421d5c:	cmp    ecx,eax
  421d5e:	jne    0x421da6
  421d60:	adc    BYTE PTR [edi],dl
  421d62:	mov    edi,DWORD PTR [edi+0x65e7a103]
  421d68:	jp     0x421d6d
  421d6a:	stos   DWORD PTR es:[edi],eax
  421d6b:	into   
  421d6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d6d:	push   edi
  421d6e:	icebp  
  421d6f:	(bad)  
  421d70:	mov    eax,0x6b9c061d
  421d75:	mov    dl,0x69
  421d77:	das    
  421d78:	adc    eax,0x2a6e5f76
  421d7d:	adc    BYTE PTR [esi+0x6bd9104e],bl
  421d83:	pop    edi
  421d84:	mov    ebx,0x90faf67e
  421d89:	pop    ebx
  421d8a:	pop    ebx
  421d8b:	mov    esi,0x3d8909fc
  421d90:	cwde   
  421d91:	cmp    BYTE PTR [edx-0x720be5aa],al
  421d97:	lock and ecx,DWORD PTR [eax+0x76]
  421d9b:	jecxz  0x421d4c
  421d9d:	adc    cl,BYTE PTR [eax+0x491887ed]
  421da3:	xor    eax,0x5efcae29
  421da8:	sub    dl,BYTE PTR [eax+ebp*1-0x1745438c]
  421daf:	fld    TBYTE PTR [ebx]
  421db1:	fidivr DWORD PTR [ecx-0x59]
  421db4:	sub    al,BYTE PTR [edx]
  421db6:	add    al,0x9e
  421db8:	enter  0x15b6,0x8d
  421dbc:	jbe    0x421d46
  421dbe:	pop    ebx
  421dbf:	xchg   ebx,eax
  421dc0:	dec    ebx
  421dc1:	mov    cl,0xe1
  421dc4:	bound  ebx,QWORD PTR [ecx-0x51cdcb5b]
  421dca:	fbstp  TBYTE PTR [esi]
  421dcc:	out    0x4a,al
  421dce:	lods   eax,DWORD PTR ds:[esi]
  421dcf:	fmulp  st(2),st
  421dd1:	pop    ecx
  421dd2:	sti    
  421dd3:	sub    BYTE PTR [edx+0xf24fe2b],0xde
  421dda:	mov    ds:0xa1281e65,eax
  421ddf:	retf   
  421de0:	mov    esp,0x5e0dcc89
  421de5:	push   ecx
  421de6:	mov    al,0xf3
  421de8:	(bad)  
  421de9:	fadd   DWORD PTR [ebp+0x67]
  421dec:	cld    
  421ded:	imul   BYTE PTR [esp+ebx*4-0x6095b78c]
  421df4:	ja     0x421de1
  421df6:	sub    BYTE PTR [ebp+0x3f],dh
  421df9:	fidivr DWORD PTR [eax]
  421dfb:	icebp  
  421dfc:	jns    0x421da5
  421dfe:	jp     0x421e78
  421e00:	mov    WORD PTR [eax],?
  421e02:	pop    ss
  421e03:	lods   al,BYTE PTR ds:[esi]
  421e04:	adc    BYTE PTR [edi+eiz*1],0xf5
  421e08:	sbb    eax,DWORD PTR [ebx-0x18]
  421e0b:	mov    esi,0x3ed361f5
  421e10:	or     ch,BYTE PTR [ebx-0xd]
  421e13:	int    0x3b
  421e15:	shr    dh,cl
  421e17:	rol    ch,0x1b
  421e1a:	call   0x7960:0x2feac355
  421e21:	enter  0x3543,0x83
  421e25:	adc    eax,0x55e503a0
  421e2a:	test   DWORD PTR [edi],edi
  421e2c:	adc    DWORD PTR [esi+0x233b1618],edi
  421e32:	test   BYTE PTR [eax+0xdbfac10],cl
  421e38:	loope  0x421eab
  421e3a:	into   
  421e3b:	clc    
  421e3c:	sub    eax,0xcf3c1461
  421e41:	jbe    0x421e91
  421e43:	cmp    BYTE PTR cs:[edx-0x158a0230],0xeb
  421e4b:	mov    ds:0x961fab6a,eax
  421e50:	div    eax
  421e52:	or     al,0x3e
  421e54:	in     eax,dx
  421e55:	(bad)  
  421e56:	pusha  
  421e57:	mov    dl,0xdc
  421e59:	sbb    al,0xd0
  421e5b:	ret    
  421e5c:	and    eax,0x7bab686f
  421e61:	ss sbb al,0x66
  421e64:	or     bh,0xde
  421e67:	adc    cl,BYTE PTR [edx]
  421e69:	(bad)  
  421e6a:	loopne 0x421ec9
  421e6c:	adc    ecx,ebx
  421e6e:	and    esp,edi
  421e70:	lahf   
  421e71:	or     eax,0x34eab255
  421e76:	sar    BYTE PTR [eax+0x7d],0x6c
  421e7a:	sbb    DWORD PTR [ecx],ebp
  421e7c:	fimul  DWORD PTR [esi]
  421e7e:	pxor   mm1,QWORD PTR [esi+ebx*8]
  421e82:	jl     0x421ead
  421e84:	jbe    0x421eb7
  421e86:	xchg   edx,eax
  421e87:	xchg   edi,eax
  421e88:	stc    
  421e89:	sbb    eax,0x2e23ee26
  421e8e:	int3   
  421e8f:	lea    esi,[edi]
  421e91:	xchg   esp,eax
  421e92:	mov    ah,0xe9
  421e94:	std    
  421e95:	adc    ecx,DWORD PTR [esi+0x4d]
  421e98:	gs jne 0x421f0c
  421e9b:	inc    ecx
  421e9c:	dec    edx
  421e9d:	ret    0xf2ec
  421ea0:	xor    al,0x41
  421ea2:	sub    BYTE PTR [ebx],bl
  421ea4:	aas    
  421ea5:	sub    BYTE PTR [ebx-0x3],0xab
  421ea9:	dec    esp
  421eaa:	and    al,0x9f
  421eac:	push   es
  421ead:	mov    WORD PTR [esi+0x20],es
  421eb0:	imul   esi,DWORD PTR [esi],0x15a06d4b
  421eb6:	lea    ecx,[esi+0x5c]
  421eb9:	aaa    
  421eba:	mov    ecx,0xc508e55d
  421ebf:	jl     0x421e92
  421ec1:	loope  0x421ead
  421ec3:	into   
  421ec4:	lods   al,BYTE PTR ds:[esi]
  421ec5:	push   esi
  421ec6:	sbb    al,0x3d
  421ec9:	dec    ebx
  421eca:	push   edx
  421ecb:	ret    
  421ecc:	enter  0x61ca,0xd7
  421ed0:	fwait
  421ed1:	or     eax,0x7fd17981
  421ed6:	int    0xce
  421ed8:	pushf  
  421ed9:	lea    ecx,[eax-0x3df48d57]
  421edf:	int    0xf6
  421ee1:	into   
  421ee2:	cdq    
  421ee3:	jg     0x421f40
  421ee5:	xchg   esp,eax
  421ee6:	sti    
  421ee7:	dec    edi
  421ee8:	cli    
  421ee9:	retf   0x4a4d
  421eec:	(bad)  
  421eee:	sub    al,BYTE PTR [ebp-0x75700b6d]
  421ef4:	jb     0x421ec9
  421ef6:	sbb    DWORD PTR [edx-0x7f],ecx
  421ef9:	xor    eax,0x2889b224
  421efe:	sub    DWORD PTR [ebp+0x2a99142b],ebp
  421f04:	or     BYTE PTR [edx+eax*4+0x29],0xb6
  421f09:	and    al,BYTE PTR [ebx]
  421f0b:	dec    ecx
  421f0c:	xor    al,0xbd
  421f0e:	pop    ds
  421f0f:	scas   al,BYTE PTR es:[edi]
  421f10:	pushf  
  421f11:	into   
  421f12:	sbb    esi,eax
  421f14:	iret   
  421f15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f16:	lods   eax,DWORD PTR ds:[esi]
  421f17:	inc    edx
  421f18:	inc    esp
  421f19:	xchg   ebp,eax
  421f1a:	dec    ecx
  421f1b:	sbb    al,ah
  421f1d:	sbb    bh,al
  421f1f:	mov    edi,0x294afbf1
  421f24:	(bad)  
  421f25:	daa    
  421f26:	leave  
  421f27:	enter  0xdad9,0xe2
  421f2b:	dec    eax
  421f2c:	pop    ds
  421f2d:	test   BYTE PTR [edx+0x65c2e152],ch
  421f33:	pop    ebp
  421f34:	jg     0x421efe
  421f36:	in     eax,0x28
  421f38:	in     al,0xc1
  421f3a:	dec    eax
  421f3b:	js     0x421ee6
  421f3d:	fldcw  WORD PTR [eax+edi*2+0x56]
  421f41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f42:	lods   al,BYTE PTR ds:[esi]
  421f43:	xlat   BYTE PTR ds:[ebx]
  421f44:	mov    eax,ds:0x31dfbdf0
  421f49:	sub    ebx,ecx
  421f4b:	outs   dx,DWORD PTR ds:[esi]
  421f4c:	ds mov ah,0x1e
  421f4f:	aad    0xe0
  421f51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f52:	cmp    eax,edx
  421f54:	and    al,0x68
  421f56:	sar    edx,0xbc
  421f59:	jge    0x421f9a
  421f5b:	pop    ebx
  421f5c:	(bad)  
  421f5d:	test   eax,0xdaf43c37
  421f62:	std    
  421f63:	mov    dl,0x9b
  421f65:	adc    al,0xe0
  421f67:	push   ebx
  421f68:	lock xor ah,BYTE PTR [ebp+0x58729845]
  421f6f:	mov    ?,WORD PTR ds:0xa0336500
  421f75:	push   esi
  421f76:	stos   DWORD PTR es:[edi],eax
  421f77:	xchg   DWORD PTR [eax-0x47],ebx
  421f7a:	inc    ebx
  421f7b:	call   0xdfd7:0xa1ad0fa
  421f82:	stos   DWORD PTR es:[edi],eax
  421f83:	aam    0x83
  421f85:	mov    eax,ds:0xe1501eda
  421f8a:	add    al,0x33
  421f8c:	and    eax,0x29d69b46
  421f91:	retf   
  421f92:	mov    ah,0xba
  421f94:	cmp    ebp,DWORD PTR [eax-0x186e4eac]
  421f9a:	pop    ds
  421f9b:	jo     0x422010
  421f9d:	repnz mov BYTE PTR [edi+0x62],0xb0
  421fa2:	jmp    0x745c:0xdd583a67
  421fa9:	mov    dl,0x2b
  421fab:	jg     0x422010
  421fad:	lock jo 0x421f5b
  421fb0:	jb     0x421f39
  421fb2:	or     BYTE PTR [ebp+0x73c143cc],dh
  421fb8:	jmp    0xf1f91fb3
  421fbd:	ins    DWORD PTR es:[edi],dx
  421fbe:	or     BYTE PTR [ebx+0x4],al
  421fc1:	mov    eax,cs:0xb7a2f328
  421fc7:	jno    0x421ff7
  421fc9:	test   DWORD PTR [edx],esp
  421fcb:	mov    cl,0x81
  421fcd:	imul   esp,DWORD PTR ds:0x8d0607b0,0x31
  421fd4:	dec    edi
  421fd5:	rcr    cl,cl
  421fd7:	jns    0x421f62
  421fd9:	pop    ecx
  421fda:	mov    ds:0xbc9665d8,al
  421fdf:	cs aam 0x3d
  421fe2:	jo     0x421fd3
  421fe4:	inc    ebx
  421fe5:	sbb    al,0xf6
  421fe7:	fwait
  421fe8:	mov    ecx,0xbea53bde
  421fed:	and    DWORD PTR [ecx],0x59ce5149
  421ff3:	sub    eax,0x3e8fe5fa
  421ff8:	mov    ecx,0x40c13521
  421ffd:	cli    
  421ffe:	adc    BYTE PTR [eax+0x3f6cf9e1],0x38
  422005:	mov    bl,BYTE PTR [ecx-0x80]
  422008:	mov    esi,0xfe4f24a1
  42200d:	(bad)  
  42200e:	retf   0xd160
  422011:	jo     0x42201d
  422013:	dec    edx
  422014:	rcr    DWORD PTR [esi-0x43],0x4b
  422018:	les    esp,FWORD PTR [edx+0x32]
  42201b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42201c:	(bad)  
  42201d:	(bad)  
  42201e:	dec    esp
  42201f:	and    DWORD PTR [esi+0x3fe644ad],edx
  422025:	jmp    0x421fbc
  422027:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422028:	cs xor esp,ebx
  42202b:	sub    ebx,esi
  42202d:	jecxz  0x421fd0
  42202f:	pop    ebp
  422030:	add    edx,eax
  422032:	and    BYTE PTR [eax+0x31561992],ah
  422038:	sbb    al,0xd2
  42203a:	jg     0x422003
  42203c:	mov    dh,0xfc
  42203e:	jne    0x42207a
  422040:	in     eax,0xb6
  422042:	or     DWORD PTR [ebx-0x14],0x4e877a8a
  422049:	or     eax,0xa5562745
  42204e:	or     dh,al
  422050:	repz jo 0x421fd7
  422053:	push   eax
  422054:	xor    ebp,ebp
  422056:	push   0xffffffe6
  422058:	jnp    0x422057
  42205a:	ss shl ebp,1
  42205d:	cs jp  0x421fe4
  422060:	and    edi,DWORD PTR [ebx+ebp*8+0x41]
  422064:	pop    edi
  422065:	int3   
  422066:	mov    al,cl
  422068:	enter  0x1db9,0xca
  42206c:	mov    eax,ebp
  42206e:	or     dh,BYTE PTR [ecx]
  422070:	and    BYTE PTR [ecx+0x49],al
  422073:	add    DWORD PTR [eax+0x18],ebx
  422076:	out    dx,al
  422077:	and    dh,BYTE PTR [ecx-0x63]
  42207a:	lea    ebx,[ebx-0x2658d723]
  422080:	sub    al,0x82
  422082:	jge    0x42208e
  422084:	jmp    0x422093
  422086:	xlat   BYTE PTR ds:[ebx]
  422087:	xchg   edx,eax
  422088:	pop    ebp
  422089:	pop    esi
  42208a:	aas    
  42208b:	push   eax
  42208c:	icebp  
  42208d:	and    cl,BYTE PTR [edi+0x34]
  422090:	ja     0x4220f5
  422092:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422093:	fs jge 0x42203a
  422096:	or     ebx,ecx
  422098:	test   BYTE PTR [ebx-0x31],cl
  42209b:	fwait
  42209c:	dec    edi
  42209d:	dec    edi
  42209e:	add    BYTE PTR [ecx-0x34],ah
  4220a1:	jecxz  0x422067
  4220a3:	(bad)  
  4220a5:	mov    al,al
  4220a7:	pop    ss
  4220a8:	mov    edx,DWORD PTR [ebx-0x1fa1c172]
  4220ae:	lea    edi,[ecx-0x51fd01ac]
  4220b4:	and    eax,0x1b5f606b
  4220b9:	pop    esi
  4220ba:	(bad)  
  4220bb:	dec    edx
  4220bc:	cmp    esi,ebx
  4220be:	jmp    0x4220d1
  4220c0:	sbb    al,0xb3
  4220c2:	dec    eax
  4220c3:	(bad)  
  4220c4:	mov    dh,0x39
  4220c6:	mov    dl,0xa4
  4220c8:	retf   
  4220c9:	inc    ecx
  4220ca:	cmp    BYTE PTR [ebx+0x2],dl
  4220cd:	test   al,0x8f
  4220cf:	outs   dx,DWORD PTR ds:[esi]
  4220d0:	jp     0x422070
  4220d2:	enter  0x8eaa,0x66
  4220d6:	mov    al,0x9c
  4220d8:	fdivr  st(5),st
  4220da:	xchg   esi,eax
  4220db:	cmp    al,0x2c
  4220dd:	inc    edx
  4220de:	inc    esi
  4220df:	dec    edx
  4220e0:	or     al,0x2b
  4220e2:	cmc    
  4220e3:	dec    esp
  4220e4:	fwait
  4220e5:	sbb    bh,BYTE PTR [edi]
  4220e7:	xchg   DWORD PTR [esi+0x7a],ecx
  4220ea:	aad    0xa
  4220ec:	ins    DWORD PTR es:[edi],dx
  4220ed:	aad    0xf0
  4220ef:	in     eax,0xa5
  4220f1:	mov    edi,es
  4220f3:	pop    ecx
  4220f4:	(bad)  
  4220f5:	sbb    BYTE PTR [esi-0x309f287],ch
  4220fb:	loope  0x422165
  4220fd:	and    DWORD PTR [edx+0x21],ecx
  422100:	into   
  422101:	xchg   DWORD PTR [edx],edi
  422103:	and    al,0xb9
  422105:	ret    0x8258
  422108:	jmp    0xef7c64b3
  42210d:	repnz (bad) 
  42210f:	sub    ecx,ebp
  422111:	fild   DWORD PTR [esi-0x23b04ffa]
  422117:	dec    ebp
  422118:	lahf   
  422119:	inc    ebx
  42211a:	cmp    bl,bl
  42211c:	lods   eax,DWORD PTR ds:[esi]
  42211d:	push   ss
  42211e:	js     0x42215d
  422120:	push   esp
  422121:	add    ebx,DWORD PTR [ebx]
  422123:	inc    edx
  422124:	xor    DWORD PTR [edi+0x62],0xfffffffd
  422128:	inc    eax
  422129:	loope  0x422169
  42212b:	inc    ebx
  42212c:	stc    
  42212d:	mov    bh,0x85
  42212f:	enter  0x24ca,0xc0
  422133:	(bad)  
  422134:	mov    ebp,0x9e26cda6
  422139:	aam    0x2c
  42213b:	(bad)  
  42213c:	das    
  42213d:	lahf   
  42213e:	pop    ecx
  42213f:	ds ret 0x491b
  422143:	mov    ah,0x7f
  422145:	hlt    
  422146:	mov    bh,0xeb
  422148:	dec    eax
  422149:	mov    ebx,0x98701fe9
  42214e:	sbb    DWORD PTR [ecx-0x71e7396b],ecx
  422154:	loopne 0x4221ca
  422156:	push   0xffffffcc
  422158:	xchg   ecx,eax
  422159:	in     al,0xb0
  42215b:	fcom   QWORD PTR [ebx]
  42215d:	jne    0x422149
  42215f:	ja     0x422190
  422161:	hlt    
  422162:	mov    dh,0x75
  422164:	pop    ecx
  422165:	push   esp
  422166:	mov    esi,0xc13e5907
  42216b:	enter  0x61fe,0x5f
  42216f:	fisubr DWORD PTR ds:0x3d1aa058
  422175:	xchg   ebx,eax
  422176:	adc    cl,BYTE PTR [edi-0x46]
  422179:	jge    0x422178
  42217b:	das    
  42217c:	sub    al,BYTE PTR [ecx-0x34]
  42217f:	jno    0x422164
  422181:	ja     0x42219d
  422183:	push   ecx
  422184:	nop
  422185:	jmp    0xdaed:0x44ccf6ed
  42218c:	jge    0x422142
  42218e:	imul   ecx,DWORD PTR [ebx+0x2],0x763fe2a6
  422195:	cld    
  422196:	jle    0x422132
  422198:	mov    cl,0x77
  42219a:	loop   0x422199
  42219c:	or     ecx,DWORD PTR [eax]
  42219e:	push   ebp
  42219f:	mov    eax,0xb8021b3
  4221a4:	fcom   DWORD PTR [ecx+eiz*1-0x11]
  4221a8:	(bad)  
  4221a9:	or     eax,esp
  4221ab:	in     al,dx
  4221ac:	push   edx
  4221ad:	inc    ebx
  4221ae:	stos   DWORD PTR es:[edi],eax
  4221af:	xchg   DWORD PTR cs:[esi-0x513a557f],esp
  4221b6:	cld    
  4221b7:	mov    ebx,0xadbc8b9c
  4221bc:	jmp    0xc11c:0x1a9507e3
  4221c3:	jno    0x42219c
  4221c5:	mov    al,ds:0xc7929874
  4221ca:	inc    edx
  4221cb:	and    al,0x1b
  4221cd:	es js  0x4221c1
  4221d0:	stos   BYTE PTR es:[edi],al
  4221d1:	(bad)
  4221d5:	jnp    0x4221b7
  4221d7:	xor    al,0x71
  4221d9:	jecxz  0x4221fc
  4221db:	data16 rcr BYTE PTR [ebx+ecx*4],1
  4221df:	cwde   
  4221e0:	leave  
  4221e1:	scas   al,BYTE PTR es:[edi]
  4221e2:	sar    BYTE PTR [esp+eiz*8],cl
  4221e5:	and    al,0x89
  4221e7:	inc    edx
  4221e8:	or     ah,al
  4221ea:	ins    DWORD PTR es:[edi],dx
  4221eb:	inc    ecx
  4221ec:	sbb    bh,0xe
  4221ef:	out    0x4d,al
  4221f1:	pusha  
  4221f2:	adc    eax,0x1e4dc28d
  4221f7:	and    DWORD PTR [eax+0x7f0fca6d],ebx
  4221fd:	in     eax,0xe4
  4221ff:	loopne 0x4221b0
  422201:	out    dx,eax
  422202:	cmp    eax,0xf8cb525f
  422207:	cdq    
  422208:	je     0x422280
  42220a:	int3   
  42220b:	push   ebx
  42220c:	inc    ebx
  42220d:	std    
  42220e:	mov    DWORD PTR [ecx-0x64],esp
  422211:	retf   0x875e
  422214:	xchg   edx,eax
  422215:	pop    ds
  422216:	or     dh,ah
  422218:	ret    
  422219:	out    0x79,al
  42221b:	fstp   DWORD PTR ds:0x12597d2c
  422221:	push   0x41
  422223:	mov    BYTE PTR [edx+0x32],ah
  422226:	mov    bh,0x69
  422228:	ins    BYTE PTR es:[edi],dx
  422229:	ss pop eax
  42222b:	xor    al,0xe0
  42222d:	cdq    
  42222e:	jno    0x4221c1
  422230:	shl    bh,0x2c
  422233:	sbb    dl,bl
  422235:	xchg   ebp,eax
  422236:	ret    0xd90c
  422239:	cs push edi
  42223b:	iret   
  42223c:	loopne 0x42222a
  42223e:	push   0xffffffda
  422240:	jg     0x4222a3
  422242:	jnp    0x422214
  422244:	enter  0x49ed,0x8a
  422248:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422249:	mov    ebx,0x35d77238
  42224e:	push   ds
  42224f:	ins    DWORD PTR es:[edi],dx
  422250:	scas   eax,DWORD PTR es:[edi]
  422251:	jmp    0x4221e3
  422253:	ins    DWORD PTR es:[edi],dx
  422254:	add    al,0xf5
  422256:	js     0x422247
  422258:	sbb    eax,edx
  42225a:	ins    BYTE PTR es:[edi],dx
  42225b:	sub    ch,BYTE PTR [ebx]
  42225d:	ds scas al,BYTE PTR es:[edi]
  42225f:	out    dx,eax
  422260:	push   0x76d24b33
  422265:	push   0x25565586
  42226a:	inc    ecx
  42226b:	mov    eax,ds:0x642e67eb
  422270:	sub    eax,0xab29fb40
  422275:	in     al,dx
  422276:	pop    ebp
  422277:	shr    DWORD PTR [edi],1
  422279:	dec    edx
  42227a:	or     eax,0x5803443e
  42227f:	sar    DWORD PTR [ecx-0x125757f3],0x9e
  422286:	lock enter 0xe792,0xd1
  42228b:	clc    
  42228c:	mov    bh,0x4a
  42228e:	repnz out 0xa4,al
  422291:	xchg   ecx,eax
  422292:	outs   dx,DWORD PTR ds:[esi]
  422293:	mov    ecx,0x399542f7
  422298:	push   cs
  422299:	fld    DWORD PTR [ebx+edx*8+0x6bb1c964]
  4222a0:	ss jmp 0x422242
  4222a3:	dec    eax
  4222a4:	xor    ebx,ebp
  4222a6:	fisub  DWORD PTR [ebp+0x6afe309a]
  4222ac:	sub    al,BYTE PTR [esi-0x58dfec1a]
  4222b2:	mov    DWORD PTR [esi+0x3e],eax
  4222b5:	add    al,BYTE PTR [edi]
  4222b7:	jecxz  0x42230c
  4222b9:	icebp  
  4222ba:	popf   
  4222bb:	dec    edx
  4222bc:	add    BYTE PTR [ecx+0x371495f5],bh
  4222c2:	lods   al,BYTE PTR ds:[esi]
  4222c3:	pop    edi
  4222c4:	push   esp
  4222c5:	mov    BYTE PTR [ecx+0x45cb2e24],0x9f
  4222cc:	jmp    0x42229e
  4222ce:	lods   eax,DWORD PTR ds:[esi]
  4222cf:	mov    BYTE PTR [eax-0x45],cl
  4222d2:	xor    eax,0x23ff7242
  4222d7:	cs cdq 
  4222d9:	sbb    al,0xe
  4222db:	clc    
  4222dc:	dec    edx
  4222dd:	out    dx,al
  4222de:	jg     0x4222a5
  4222e0:	mov    dh,0xf4
  4222e2:	sbb    DWORD PTR [edx-0x78ea7054],eax
  4222e8:	adc    al,0xdb
  4222ea:	pop    esp
  4222eb:	mov    esi,0xd1c4bed
  4222f0:	int    0xc0
  4222f2:	add    edx,esi
  4222f4:	dec    esp
  4222f5:	mov    ds:0xc208b8c3,eax
  4222fa:	xchg   BYTE PTR [edx+0x73],bl
  4222fd:	push   ecx
  4222fe:	fidivr WORD PTR [ecx+eax*4+0x67]
  422302:	arpl   WORD PTR [ebx-0x7cbbdbf7],cx
  422308:	mov    eax,0xab3026a1
  42230d:	out    dx,eax
  42230e:	sub    al,0x72
  422310:	mov    bl,0x32
  422312:	repnz icebp 
  422314:	aas    
  422315:	mov    ch,0x9a
  422317:	pop    eax
  422318:	sub    DWORD PTR [ebp-0x2],ecx
  42231b:	pop    ss
  42231c:	fstp   DWORD PTR [ecx+edx*4+0x18cbf381]
  422323:	popa   
  422324:	or     cl,0xda
  422327:	es pushf 
  422329:	dec    esp
  42232a:	stos   DWORD PTR es:[edi],eax
  42232b:	sub    DWORD PTR [edi],eax
  42232d:	push   ebx
  42232e:	scas   eax,DWORD PTR es:[edi]
  42232f:	into   
  422330:	es (bad) 
  422332:	aas    
  422333:	test   DWORD PTR [edx+edx*4],esi
  422336:	push   ds
  422337:	dec    ebp
  422338:	mov    DWORD PTR [edi-0x16],ecx
  42233b:	rol    ecx,cl
  42233d:	in     eax,0x67
  42233f:	ret    0x2eeb
  422342:	gs pop ebx
  422344:	mov    ah,0x68
  422346:	push   edi
  422347:	pop    esp
  422348:	das    
  422349:	push   ss
  42234a:	push   ss
  42234b:	dec    ebp
  42234c:	cmp    al,0x6
  42234e:	and    DWORD PTR [ebp-0x194593d8],esi
  422354:	ds dec esi
  422356:	dec    edi
  422357:	adc    eax,0x4db4550a
  42235c:	jns    0x4223ce
  42235e:	imul   edx,DWORD PTR [esi],0x39
  422361:	pusha  
  422362:	add    eax,DWORD PTR [edx-0x3ac088c]
  422368:	xchg   dh,ch
  42236a:	pop    ss
  42236b:	cmovbe ebp,ebx
  42236e:	out    0x9c,eax
  422370:	mov    ch,0xca
  422372:	je     0x422365
  422374:	sub    DWORD PTR [ecx+0x46c0f009],ecx
  42237a:	and    eax,0x96675ba8
  42237f:	clc    
  422380:	loope  0x4223b3
  422382:	das    
  422383:	in     al,dx
  422384:	sahf   
  422385:	jp     0x4223f5
  422387:	sbb    dh,BYTE PTR [edi+0x208eb48d]
  42238d:	jo     0x4223e0
  42238f:	stc    
  422390:	jg     0x42237d
  422392:	push   es
  422393:	cli    
  422394:	loop   0x42232b
  422396:	add    al,0x1
  422398:	ss scas eax,DWORD PTR es:[edi]
  42239a:	mov    ch,0x30
  42239c:	inc    ecx
  42239d:	mov    ds:0x49359352,al
  4223a2:	mov    dh,0xc5
  4223a4:	inc    ebx
  4223a5:	xchg   esp,eax
  4223a6:	shl    DWORD PTR [esi+0x6b90251a],0xa1
  4223ad:	shl    BYTE PTR [ecx-0x590fc2db],cl
  4223b3:	cvttps2pi mm3,xmm1
  4223b6:	push   cs
  4223b7:	add    eax,0xb8318e77
  4223bc:	mov    esi,0x5cc62cc4
  4223c1:	stos   BYTE PTR es:[edi],al
  4223c2:	loope  0x4223cb
  4223c4:	hlt    
  4223c5:	sahf   
  4223c6:	mov    al,ds:0x2b2845d0
  4223cb:	ins    DWORD PTR es:[edi],dx
  4223cc:	add    eax,0x785299c1
  4223d1:	jp     0x422413
  4223d3:	das    
  4223d4:	and    al,0x38
  4223d6:	mov    ah,BYTE PTR [edx-0x12]
  4223d9:	mov    bh,0x42
  4223db:	add    edx,DWORD PTR [ebx+0x66bdafbc]
  4223e1:	pop    ds
  4223e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4223e3:	(bad)  
  4223e4:	(bad)  
  4223e5:	mov    edx,0x79b1b28f
  4223ea:	nop
  4223eb:	or     al,0x2f
  4223ed:	xchg   ecx,eax
  4223ee:	pop    eax
  4223ef:	daa    
  4223f0:	sbb    esi,esi
  4223f2:	out    0x28,al
  4223f4:	cwde   
  4223f5:	cmp    al,0xd5
  4223f7:	jp     0x422381
  4223f9:	es in  ax,0x96
  4223fd:	call   0x33b4:0x2f1f2b18
  422404:	test   WORD PTR [ecx-0x67d67cb5],sp
  42240b:	push   ebx
  42240c:	add    eax,0x9256c794
  422411:	mov    bl,0x34
  422413:	and    DWORD PTR [edi],esi
  422415:	jg     0x4223e2
  422417:	arpl   WORD PTR [esi],si
  422419:	fstp   QWORD PTR [edi-0x25]
  42241c:	mov    bh,0x6c
  42241e:	lahf   
  42241f:	fdiv   DWORD PTR [edi]
  422421:	adc    eax,0xdf615b15
  422426:	jg     0x4223c5
  422428:	in     eax,0xc2
  42242a:	ins    BYTE PTR es:[edi],dx
  42242b:	jno    0x422404
  42242d:	gs xor eax,ebp
  422430:	retf   
  422431:	das    
  422432:	jle    0x4223ca
  422434:	add    ecx,edx
  422436:	mov    ebp,0x5bceacf
  42243b:	adc    DWORD PTR [ebx+0x23884e0],ebp
  422441:	xchg   DWORD PTR [eiz*4-0x6b18eca2],ebp
  422448:	pop    ebx
  422449:	pop    esp
  42244a:	dec    esp
  42244b:	push   esp
  42244c:	adc    eax,0x564e5c8c
  422451:	popa   
  422452:	sbb    ah,ah
  422454:	dec    edx
  422455:	pop    eax
  422456:	add    DWORD PTR [edi-0x5215bf4b],esp
  42245c:	push   edi
  42245d:	lea    esp,[esi+0x7ad3b892]
  422463:	stc    
  422464:	or     DWORD PTR [ebx],edi
  422466:	test   al,0xc0
  422469:	mov    edi,0x14782fd4
  42246e:	test   al,0x2f
  422470:	test   DWORD PTR [ebp-0x20],esi
  422473:	(bad)  
  422474:	(bad)
  422477:	int    0x5
  422479:	sub    al,0xd4
  42247b:	xchg   esp,eax
  42247c:	sub    DWORD PTR [eax-0x4f],ecx
  42247f:	jmp    0x4224e7
  422481:	in     al,0x24
  422483:	out    0x64,al
  422485:	mov    edi,0xd7d976ef
  42248a:	sbb    esp,edi
  42248c:	lods   al,BYTE PTR ds:[esi]
  42248d:	jmp    0xac05ca5e
  422492:	add    ecx,DWORD PTR [edi-0x7ff15c20]
  422498:	je     0x422426
  42249a:	xchg   ebx,eax
  42249b:	pop    es
  42249c:	mov    dh,0xf4
  42249e:	push   DWORD PTR [ebp-0x24]
  4224a1:	mov    BYTE PTR [eax],0xe9
  4224a4:	mov    eax,ds:0x42a2ee
  4224a9:	push   DWORD PTR [eax]
  4224ab:	push   DWORD PTR ds:0x42a552
  4224b1:	push   DWORD PTR ds:0x42a2f6
  4224b7:	push   DWORD PTR ds:0x42a532
  4224bd:	push   DWORD PTR ds:0x42af72
  4224c3:	push   DWORD PTR [ebp-0x28]
  4224c6:	push   DWORD PTR [ebp-0x2c]
  4224c9:	mov    eax,DWORD PTR [ebp-0x14]
  4224cc:	call   eax
  4224ce:	pop    edi
  4224cf:	pop    esi
  4224d0:	leave  
  4224d1:	ret    
  4224d2:	push   ebp
  4224d3:	mov    ebp,esp
  4224d5:	sub    esp,0x34
  4224d8:	push   ebx
  4224d9:	adc    edx,DWORD PTR ds:0x42b1aa
  4224df:	push   esi
  4224e0:	movzx  ecx,BYTE PTR ds:0x42b1ea
  4224e7:	sbb    DWORD PTR ds:0x42b21a,ecx
  4224ed:	push   edi
  4224ee:	mov    DWORD PTR [ebp-0x10],0xf89f85a5
  4224f5:	and    DWORD PTR ds:0x42b1c6,0x0
  4224ff:	mov    ecx,DWORD PTR ds:0x42b1c6
  422505:	inc    ecx
  422506:	mov    DWORD PTR ds:0x42b1c6,ecx
  42250c:	cmp    DWORD PTR ds:0x42b1c6,0xd
  422513:	jg     0x422552
  422519:	jmp    0x422529
  42251e:	push   0x42b1ba
  422523:	call   DWORD PTR ds:0x42b2f6
  422529:	cmp    DWORD PTR ds:0x42b1c6,0xc
  422530:	jne    0x422545
  422536:	xor    ecx,ecx
  422538:	xor    ecx,DWORD PTR ds:0x42b1c6
  42253e:	inc    ecx
  42253f:	mov    DWORD PTR ds:0x42b1c6,ecx
  422545:	cmp    DWORD PTR ds:0x42b1c6,0x1b
  42254c:	jb     0x4224ff
  422552:	lea    eax,[ebp+0x14]
  422555:	mov    DWORD PTR [ebp-0x4],eax
  422558:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  42255f:	lea    eax,[ebp-0xc]
  422562:	mov    DWORD PTR ds:0x42b19e,0x11
  42256c:	cmp    DWORD PTR ds:0x42b19e,0x0
  422573:	je     0x4225cf
  422579:	cmp    DWORD PTR ds:0x42b19e,0x2
  422580:	jge    0x4225cf
  422586:	jmp    0x4225a3
  42258b:	push   0x42b1fa
  422590:	push   0x42b222
  422595:	push   DWORD PTR [ebp-0x28]
  422598:	push   0x42a03d
  42259d:	call   DWORD PTR ds:0x42b2fa
  4225a3:	cmp    DWORD PTR ds:0x42b19e,0x3
  4225aa:	jne    0x4225bd
  4225b0:	mov    esi,DWORD PTR ds:0x42b19e
  4225b6:	dec    esi
  4225b7:	mov    DWORD PTR ds:0x42b19e,esi
  4225bd:	mov    esi,DWORD PTR ds:0x42b19e
  4225c3:	dec    esi
  4225c4:	mov    DWORD PTR ds:0x42b19e,esi
  4225ca:	jmp    0x42256c
  4225cf:	mov    DWORD PTR [ebp-0x14],eax
  4225d2:	and    DWORD PTR ds:0x42b1f2,0x0
  4225dc:	jmp    0x4225ee
  4225e1:	mov    esi,DWORD PTR ds:0x42b1f2
  4225e7:	inc    esi
  4225e8:	mov    DWORD PTR ds:0x42b1f2,esi
  4225ee:	cmp    DWORD PTR ds:0x42b1f2,0x1a
  4225f5:	jae    0x422622
  4225fb:	cmp    DWORD PTR ds:0x42b1f2,0x2a
  422602:	jle    0x422622
  422608:	jmp    0x42261d
  42260d:	push   0x42b1ca
  422612:	push   0x42a18d
  422617:	call   DWORD PTR ds:0x42b2fe
  42261d:	jmp    0x4225e1
  422622:	mov    eax,DWORD PTR [ebp-0xc]
  422625:	mov    DWORD PTR ds:0x42b202,0x1d
  42262f:	cmp    DWORD PTR ds:0x42b202,0x0
  422636:	je     0x422692
  42263c:	cmp    DWORD PTR ds:0x42b202,0xb
  422643:	jbe    0x422692
  422649:	jmp    0x422664
  42264e:	push   DWORD PTR [ebp-0x28]
  422651:	push   0x8416
  422656:	push   0x42a285
  42265b:	push   DWORD PTR [ebp-0xc]
  42265e:	call   DWORD PTR ds:0x42b306
  422664:	cmp    DWORD PTR ds:0x42b202,0xc
  42266b:	jne    0x42267e
  422671:	mov    esi,DWORD PTR ds:0x42b202
  422677:	dec    esi
  422678:	mov    DWORD PTR ds:0x42b202,esi
  42267e:	xor    esi,esi
  422680:	add    esi,DWORD PTR ds:0x42b202
  422686:	dec    esi
  422687:	mov    DWORD PTR ds:0x42b202,esi
  42268d:	jmp    0x42262f
  422692:	mov    edx,DWORD PTR [ebp-0x14]
  422695:	xor    esi,ecx
  422697:	mov    ecx,0x75108ae
  42269c:	sbb    esi,0x78cf
  4226a2:	xor    eax,ecx
  4226a4:	add    eax,0x3272f5
  4226a9:	mov    DWORD PTR [edx],eax
  4226ab:	xor    eax,eax
  4226ad:	or     eax,DWORD PTR ds:0x42b2b6
  4226b3:	mov    eax,DWORD PTR [eax]
  4226b5:	and    DWORD PTR ds:0x42b1c2,eax
  4226bb:	mov    eax,ds:0x42a2ea
  4226c0:	mov    edx,DWORD PTR [ebp-0x4]
  4226c3:	movzx  esi,BYTE PTR ds:0x42b1b2
  4226ca:	adc    DWORD PTR ds:0x42b206,esi
  4226d0:	mov    eax,DWORD PTR [eax]
  4226d2:	add    eax,DWORD PTR [edx]
  4226d4:	and    DWORD PTR ds:0x42b1ee,ecx
  4226da:	mov    DWORD PTR [ebp-0x8],eax
  4226dd:	mov    esi,DWORD PTR [ebp+0x8]
  4226e0:	and    DWORD PTR ds:0x42b1b2,0x0
  4226ea:	jmp    0x4226fa
  4226ef:	mov    eax,ds:0x42b1b2
  4226f4:	inc    eax
  4226f5:	mov    ds:0x42b1b2,eax
  4226fa:	cmp    DWORD PTR ds:0x42b1b2,0x15
  422701:	jae    0x422746
  422707:	cmp    DWORD PTR ds:0x42b1b2,0x9
  42270e:	jbe    0x422746
  422714:	jmp    0x422729
  422719:	push   0x42a26b
  42271e:	push   0x0
  422720:	push   DWORD PTR [ebp-0x28]
  422723:	call   DWORD PTR ds:0x42b30e
  422729:	cmp    DWORD PTR ds:0x42b1b2,0x8
  422730:	jne    0x422741
  422736:	mov    eax,ds:0x42b1b2
  42273b:	inc    eax
  42273c:	mov    ds:0x42b1b2,eax
  422741:	jmp    0x4226ef
  422746:	mov    eax,ds:0x42a472
  42274b:	mov    DWORD PTR ds:0x42b21e,0x16
  422755:	cmp    DWORD PTR ds:0x42b21e,0x0
  42275c:	je     0x42278f
  422762:	cmp    DWORD PTR ds:0x42b21e,0x19
  422769:	jbe    0x42278f
  42276f:	jmp    0x42277d
  422774:	push   DWORD PTR [ebp-0x20]
  422777:	call   DWORD PTR ds:0x42b316
  42277d:	mov    edx,DWORD PTR ds:0x42b21e
  422783:	dec    edx
  422784:	mov    DWORD PTR ds:0x42b21e,edx
  42278a:	jmp    0x422755
  42278f:	mov    eax,DWORD PTR [eax+0x198]
  422795:	movzx  edx,WORD PTR ds:0x42b18e
  42279c:	xor    edx,DWORD PTR ds:0x42b1d6
  4227a2:	mov    DWORD PTR ds:0x42b18e,edx
  4227a8:	xor    esi,ecx
  4227aa:	and    DWORD PTR ds:0x42b1c2,0x42b1b2
  4227b4:	mov    edx,0x3272f5
  4227b9:	add    DWORD PTR ds:0x42b1ce,0x42b1c2
  4227c3:	add    esi,edx
  4227c5:	mov    DWORD PTR ds:0x42b1be,0x75ce
  4227cf:	cmp    DWORD PTR [eax],esi
  4227d1:	je     0x4227e8
  4227d7:	mov    eax,DWORD PTR [eax]
  4227d9:	mov    DWORD PTR ds:0x42b18e,0x18de
  4227e3:	jmp    0x422b4e
  4227e8:	mov    eax,DWORD PTR [ebp+0x18]
  4227eb:	mov    esi,DWORD PTR ds:0x42b1ee
  4227f1:	adc    DWORD PTR ds:0x42b212,esi
  4227f7:	mov    esi,DWORD PTR [ebp+0x1c]
  4227fa:	or     ebx,0xffffffff
  4227fd:	mov    DWORD PTR ds:0x42b21a,0x5f57
  422807:	cmp    eax,0x70941f95
  42280c:	mov    DWORD PTR ds:0x42b19e,0x397d
  422816:	jne    0x422857
  42281c:	mov    DWORD PTR ds:0x42b196,0x41c1
  422826:	cmp    esi,ebx
  422828:	mov    DWORD PTR ds:0x42b18e,0x6f0
  422832:	jne    0x422857
  422838:	mov    DWORD PTR ds:0x42b1e6,0x1213
  422842:	push   ebx
  422843:	push   0x70941f94
  422848:	mov    DWORD PTR ds:0x42b1ea,0x77db
  422852:	jmp    0x422b3d
  422857:	mov    eax,DWORD PTR [ebp+0x18]
  42285a:	mov    esi,DWORD PTR [ebp+0x1c]
  42285d:	mov    DWORD PTR ds:0x42b1f6,0x6621
  422867:	cmp    eax,0x70941f94
  42286c:	jne    0x422899
  422872:	mov    DWORD PTR ds:0x42b1d2,0x1239
  42287c:	cmp    esi,ebx
  42287e:	mov    DWORD PTR ds:0x42b1ea,0x2737
  422888:	jne    0x422899
  42288e:	push   ebx
  42288f:	push   0x70941f97
  422894:	jmp    0x422b3d
  422899:	mov    eax,DWORD PTR [ebp+0x18]
  42289c:	mov    esi,DWORD PTR [ebp+0x1c]
  42289f:	cmp    eax,0x70941f97
  4228a4:	jne    0x4228c7
  4228aa:	mov    DWORD PTR ds:0x42b1ba,0x121e
  4228b4:	cmp    esi,ebx
  4228b6:	jne    0x4228c7
  4228bc:	push   ebx
  4228bd:	push   0x70941f96
  4228c2:	jmp    0x422b3d
  4228c7:	mov    eax,DWORD PTR [ebp+0x18]
  4228ca:	mov    DWORD PTR ds:0x42b202,0x572d
  4228d4:	mov    esi,DWORD PTR [ebp+0x1c]
  4228d7:	cmp    eax,0x70941f96
  4228dc:	mov    DWORD PTR ds:0x42b1aa,0x369b
  4228e6:	jne    0x42291d
  4228ec:	cmp    esi,ebx
  4228ee:	jne    0x42291d
  4228f4:	mov    DWORD PTR ds:0x42b18a,0xe5c
  4228fe:	push   ebx
  4228ff:	mov    DWORD PTR ds:0x42b22e,0x5e71
  422909:	push   0x70941f99
  42290e:	mov    DWORD PTR ds:0x42b1d6,0x2b39
  422918:	jmp    0x422b3d
  42291d:	mov    DWORD PTR ds:0x42b1da,edi
  422923:	mov    esi,DWORD PTR [ebp+0x18]
  422926:	mov    eax,0x5593
  42292b:	mov    edi,DWORD PTR [ebp+0x1c]
  42292e:	mov    eax,0x70941f98
  422933:	mov    DWORD PTR ds:0x42b1a2,0x1ef3
  42293d:	cmp    esi,eax
  42293f:	mov    DWORD PTR ds:0x42b1be,0x2a6e
  422949:	jne    0x422b21
  42294f:	cmp    edi,ebx
  422951:	mov    DWORD PTR ds:0x42b19e,0x8e7
  42295b:	jne    0x422b21
  422961:	sbb    DWORD PTR ds:0x42b1ea,0x3412
  42296b:	mov    eax,DWORD PTR [ebp+0x10]
  42296e:	or     edi,edi
  422970:	xor    eax,ecx
  422972:	sbb    DWORD PTR ds:0x42b1c2,edx
  422978:	add    eax,edx
  42297a:	mov    DWORD PTR [ebp-0x20],eax
  42297d:	mov    eax,DWORD PTR [ebp+0xc]
  422980:	mov    esi,DWORD PTR [ebp-0x8]
  422983:	xor    eax,ecx
  422985:	add    eax,edx
  422987:	imul   eax,DWORD PTR [esi]
  42298a:	mov    esi,DWORD PTR [ebp+0x8]
  42298d:	xor    esi,ecx
  42298f:	add    esi,edx
  422991:	cmp    esi,eax
  422993:	mov    eax,DWORD PTR [ebp-0x4]
  422996:	mov    edi,0xffcd8d0b
  42299b:	je     0x4229ba
  4229a1:	mov    esi,DWORD PTR [ebp-0x20]
  4229a4:	add    DWORD PTR [eax],esi
  4229a6:	mov    eax,DWORD PTR [ebp-0x4]
  4229a9:	mov    esi,DWORD PTR [ebp+0xc]
  4229ac:	xor    esi,ecx
  4229ae:	add    esi,edx
  4229b0:	imul   esi,DWORD PTR [eax]
  4229b3:	mov    DWORD PTR [eax],esi
  4229b5:	jmp    0x4229bf
  4229ba:	mov    esi,DWORD PTR [ebp+0x14]
  4229bd:	xor    DWORD PTR [eax],esi
  4229bf:	mov    eax,DWORD PTR [ebp-0x4]
  4229c2:	mov    esi,DWORD PTR [ebp+0x10]
  4229c5:	xor    esi,ecx
  4229c7:	sub    edi,esi
  4229c9:	add    DWORD PTR [eax],edi
  4229cb:	mov    eax,DWORD PTR [ebp-0x4]
  4229ce:	mov    esi,DWORD PTR [ebp-0x8]
  4229d1:	add    esi,DWORD PTR [eax]
  4229d3:	mov    DWORD PTR [ebp-0x8],esi
  4229d6:	mov    eax,DWORD PTR [ebp+0xc]
  4229d9:	mov    esi,DWORD PTR [ebp+0xc]
  4229dc:	xor    esi,ecx
  4229de:	xor    eax,ecx
  4229e0:	lea    eax,[eax+esi*1+0x64e5ea]
  4229e7:	mov    esi,DWORD PTR [ebp+0xc]
  4229ea:	xor    esi,ecx
  4229ec:	add    esi,edx
  4229ee:	imul   eax,esi
  4229f1:	mov    esi,DWORD PTR [ebp+0xc]
  4229f4:	xor    esi,ecx
  4229f6:	sub    esi,eax
  4229f8:	mov    eax,DWORD PTR [ebp-0x4]
  4229fb:	add    esi,edx
  4229fd:	cmp    DWORD PTR [eax],esi
  4229ff:	mov    eax,DWORD PTR [ebp-0x4]
  422a02:	mov    esi,DWORD PTR [ebp+0x10]
  422a05:	jg     0x422a1b
  422a0b:	xor    esi,ecx
  422a0d:	mov    edi,0xffcd8d0b
  422a12:	sub    edi,esi
  422a14:	add    DWORD PTR [eax],edi
  422a16:	jmp    0x422a21
  422a1b:	xor    esi,ecx
  422a1d:	add    esi,edx
  422a1f:	add    DWORD PTR [eax],esi
  422a21:	mov    eax,DWORD PTR [ebp-0x8]
  422a24:	mov    esi,DWORD PTR [ebp-0x10]
  422a27:	mov    eax,DWORD PTR [eax]
  422a29:	xor    esi,ecx
  422a2b:	add    esi,0x3272f4
  422a31:	mov    DWORD PTR [ebp-0x28],0x7097b860
  422a38:	mov    DWORD PTR [ebp-0x24],ebx
  422a3b:	not    esi
  422a3d:	mov    DWORD PTR [ebp-0x30],0x7097a55e
  422a44:	mov    DWORD PTR [ebp-0x2c],ebx
  422a47:	mov    ebx,DWORD PTR [ebp-0x28]
  422a4a:	mov    edi,DWORD PTR [ebp-0x24]
  422a4d:	and    eax,esi
  422a4f:	mov    esi,0xa141
  422a54:	xor    bx,si
  422a57:	mov    esi,0x412c
  422a5c:	add    bx,si
  422a5f:	cmp    WORD PTR [eax],bx
  422a62:	je     0x422aac
  422a68:	mov    edi,DWORD PTR [ebp-0x10]
  422a6b:	xor    edi,ecx
  422a6d:	mov    DWORD PTR [ebp-0x28],0x7097b860
  422a74:	mov    DWORD PTR [ebp-0x24],0xffffffff
  422a7b:	mov    ebx,0xffcd8d0b
  422a80:	sub    ebx,edi
  422a82:	mov    DWORD PTR [ebp-0x30],0x7097a55e
  422a89:	add    eax,ebx
  422a8b:	mov    DWORD PTR [ebp-0x2c],0xffffffff
  422a92:	mov    edi,DWORD PTR [ebp-0x28]
  422a95:	mov    ebx,DWORD PTR [ebp-0x24]
  422a98:	mov    ebx,0xa141
  422a9d:	xor    di,bx
  422aa0:	add    di,si
  422aa3:	cmp    WORD PTR [eax],di
  422aa6:	jne    0x422a68
  422aac:	mov    edi,DWORD PTR [ebp-0x14]
  422aaf:	mov    edi,DWORD PTR [edi]
  422ab1:	mov    ebx,DWORD PTR [eax+0x3c]
  422ab4:	lea    edi,[ebx+edi*8+0x78]
  422ab8:	mov    edi,DWORD PTR [edi+eax*1]
  422abb:	mov    DWORD PTR [ebp-0x18],edi
  422abe:	mov    edi,DWORD PTR [ebp+0x8]
  422ac1:	xor    edi,ecx
  422ac3:	add    edi,edx
  422ac5:	mov    DWORD PTR [ebp-0x1c],edi
  422ac8:	mov    edi,DWORD PTR [ebp+0x8]
  422acb:	xor    edi,ecx
  422acd:	mov    ecx,DWORD PTR [ebp-0x18]
  422ad0:	add    edi,edx
  422ad2:	cmp    ecx,edi
  422ad4:	je     0x422b16
  422ada:	mov    ecx,DWORD PTR [ebp-0x18]
  422add:	add    ecx,eax
  422adf:	mov    DWORD PTR [ebp-0x1c],ecx
  422ae2:	mov    ecx,DWORD PTR [ebp-0x30]
  422ae5:	mov    edx,DWORD PTR [ebp-0x2c]
  422ae8:	mov    edx,0xa141
  422aed:	xor    cx,dx
  422af0:	mov    edx,DWORD PTR [ebp-0x1c]
  422af3:	mov    edx,DWORD PTR [edx+0xc]
  422af6:	add    cx,si
  422af9:	cmp    WORD PTR [eax+edx*1],cx
  422afd:	jne    0x422b16
  422b03:	mov    ecx,DWORD PTR ds:0x42a472
  422b09:	mov    ecx,DWORD PTR [ecx+0x198]
  422b0f:	mov    DWORD PTR [ecx],eax
  422b11:	jmp    0x422b4e
  422b16:	push   DWORD PTR [ebp+0x1c]
  422b19:	push   DWORD PTR [ebp+0x18]
  422b1c:	jmp    0x422b3d
  422b21:	mov    ecx,DWORD PTR [ebp+0x18]
  422b24:	mov    edx,DWORD PTR [ebp+0x1c]
  422b27:	cmp    ecx,0x70941f99
  422b2d:	jne    0x422b4e
  422b33:	cmp    edx,ebx
  422b35:	jne    0x422b4e
  422b3b:	push   ebx
  422b3c:	push   eax
  422b3d:	push   DWORD PTR [ebp+0x14]
  422b40:	push   DWORD PTR [ebp+0x10]
  422b43:	push   DWORD PTR [ebp+0xc]
  422b46:	push   DWORD PTR [ebp+0x8]
  422b49:	call   0x4224d2
  422b4e:	pop    edi
  422b4f:	pop    esi
  422b50:	pop    ebx
  422b51:	leave  
  422b52:	ret    0x18
  422b55:	push   ebp
  422b56:	mov    ebp,esp
  422b58:	and    esp,0xfffffff8
  422b5b:	sub    esp,0x3fc
  422b61:	or     DWORD PTR ds:0x42b1a6,0x42b1c2
  422b6b:	push   ebx
  422b6c:	xor    DWORD PTR ds:0x42b216,0x42b1b6
  422b76:	push   esi
  422b77:	push   edi
  422b78:	or     DWORD PTR ds:0x42b19e,0x42b192
  422b82:	lea    eax,[esp+0x1b8]
  422b89:	push   eax
  422b8a:	sub    DWORD PTR ds:0x42b222,0x377b
  422b94:	push   0x42a596
  422b99:	call   DWORD PTR ds:0x42b312
  422b9f:	mov    DWORD PTR ds:0x42b1ee,0x356c
  422ba9:	cmp    eax,0xffffffff
  422bac:	mov    DWORD PTR ds:0x42b1d6,0x3f42
  422bb6:	je     0x422bf9
  422bbc:	sub    DWORD PTR ds:0x42b206,0x3b29
  422bc6:	push   0x42a5ca
  422bcb:	adc    DWORD PTR ds:0x42b1a6,0xd7b
  422bd5:	push   0x89677644
  422bda:	adc    DWORD PTR ds:0x42b226,0x42b22a
  422be4:	call   DWORD PTR ds:0x42b2e2
  422bea:	mov    DWORD PTR ds:0x42b1da,0xf4c
  422bf4:	jmp    0x423de7
  422bf9:	and    DWORD PTR ds:0x42b202,0xcb9
  422c03:	mov    esi,DWORD PTR ds:0x42b302
  422c09:	add    DWORD PTR ds:0x42b21e,0x42b22a
  422c13:	push   0xf
  422c15:	lea    eax,[esp+0x44]
  422c19:	push   eax
  422c1a:	push   0x42a5de
  422c1f:	push   0x42a5f2
  422c24:	mov    DWORD PTR ds:0x42b19a,0x6718
  422c2e:	push   0x42a616
  422c33:	add    DWORD PTR ds:0x42b1fe,0x42b1be
  422c3d:	call   esi
  422c3f:	imul   eax,eax,0x300000
  422c45:	cmp    eax,0x1b00000
  422c4a:	mov    DWORD PTR ds:0x42b1a6,0x2dc4
  422c54:	je     0x422c6b
  422c5a:	xor    eax,eax
  422c5c:	mov    DWORD PTR ds:0x42b18e,0x4419
  422c66:	jmp    0x423de7
  422c6b:	add    DWORD PTR ds:0x42b19e,0x42b1e6
  422c75:	lea    eax,[esp+0x78]
  422c79:	or     DWORD PTR ds:0x42b1b2,0x1042
  422c83:	push   eax
  422c84:	add    DWORD PTR ds:0x42b1a6,0x42b1e2
  422c8e:	push   0xffffffff
  422c90:	xor    DWORD PTR ds:0x42b1be,0x42b22a
  422c9a:	call   DWORD PTR ds:0x42b30a
  422ca0:	test   eax,eax
  422ca2:	mov    DWORD PTR ds:0x42b192,0x385a
  422cac:	jne    0x422c5a
  422cb2:	and    DWORD PTR ds:0x42b1de,0x0
  422cbc:	jmp    0x422cce
  422cc1:	mov    edi,DWORD PTR ds:0x42b1de
  422cc7:	inc    edi
  422cc8:	mov    DWORD PTR ds:0x42b1de,edi
  422cce:	cmp    DWORD PTR ds:0x42b1de,0x1d
  422cd5:	jae    0x422d1a
  422cdb:	cmp    DWORD PTR ds:0x42b1de,0xe
  422ce2:	jg     0x422d1a
  422ce8:	jmp    0x422cf9
  422ced:	push   DWORD PTR [ebp-0x10]
  422cf0:	push   DWORD PTR [ebp-0x14]
  422cf3:	call   DWORD PTR ds:0x42b31a
  422cf9:	cmp    DWORD PTR ds:0x42b1de,0xd
  422d00:	jne    0x422d15
  422d06:	xor    edi,edi
  422d08:	or     edi,DWORD PTR ds:0x42b1de
  422d0e:	inc    edi
  422d0f:	mov    DWORD PTR ds:0x42b1de,edi
  422d15:	jmp    0x422cc1
  422d1a:	mov    DWORD PTR [esp+0x30],eax
  422d1e:	mov    ecx,0xf89c85a5
  422d23:	and    DWORD PTR ds:0x42b20e,0x0
  422d2d:	mov    edx,DWORD PTR ds:0x42b20e
  422d33:	inc    edx
  422d34:	mov    DWORD PTR ds:0x42b20e,edx
  422d3a:	cmp    DWORD PTR ds:0x42b20e,0x21
  422d41:	jl     0x422d73
  422d47:	jmp    0x422d66
  422d4c:	push   0x42b1a2
  422d51:	push   0x1a2f
  422d56:	push   0x42a26b
  422d5b:	push   0x42a000
  422d60:	call   DWORD PTR ds:0x42b31e
  422d66:	cmp    DWORD PTR ds:0x42b20e,0x13
  422d6d:	jb     0x422d2d
  422d73:	mov    DWORD PTR [esp+0x18],ecx
  422d77:	mov    ebx,DWORD PTR ds:0x42b28e
  422d7d:	mov    edx,DWORD PTR ds:0x42b2be
  422d83:	sub    edx,ebx
  422d85:	add    ebx,DWORD PTR [ebx+edx*1]
  422d88:	mov    DWORD PTR [esp+0xc],0xf89c85a2
  422d90:	mov    ebx,DWORD PTR ds:0x42b26a
  422d96:	xor    edx,edx
  422d98:	or     edx,DWORD PTR ds:0x42b2aa
  422d9e:	sub    ebx,edx
  422da0:	and    ebx,DWORD PTR [ebx+edx*1]
  422da3:	lea    eax,[esp+0x3c]
  422da7:	or     edi,0x6d65
  422dad:	mov    DWORD PTR [esp+0x30],eax
  422db1:	adc    DWORD PTR ds:0x42b212,0x17e9
  422dbb:	lea    eax,[esp+0x38]
  422dbf:	and    DWORD PTR ds:0x42b20a,0x0
  422dc9:	mov    edx,DWORD PTR ds:0x42b20a
  422dcf:	inc    edx
  422dd0:	mov    DWORD PTR ds:0x42b20a,edx
  422dd6:	cmp    DWORD PTR ds:0x42b20a,0xc
  422ddd:	jle    0x422e18
  422de3:	jmp    0x422df1
  422de8:	push   DWORD PTR [ebp-0x14]
  422deb:	call   DWORD PTR ds:0x42b322
  422df1:	cmp    DWORD PTR ds:0x42b20a,0xb
  422df8:	jne    0x422e0b
  422dfe:	mov    edx,DWORD PTR ds:0x42b20a
  422e04:	inc    edx
  422e05:	mov    DWORD PTR ds:0x42b20a,edx
  422e0b:	cmp    DWORD PTR ds:0x42b20a,0x12
  422e12:	jb     0x422dc9
  422e18:	mov    DWORD PTR [esp+0x20],eax
  422e1c:	xor    edx,edx
  422e1e:	add    edx,DWORD PTR ds:0x42b292
  422e24:	mov    eax,ds:0x42b29a
  422e29:	sub    eax,edx
  422e2b:	add    edx,DWORD PTR [edx+eax*1]
  422e2e:	mov    eax,ds:0x42a472
  422e33:	mov    eax,DWORD PTR [eax+0x1c8]
  422e39:	mov    eax,DWORD PTR [eax]
  422e3b:	adc    edi,0x4659
  422e41:	mov    edx,DWORD PTR [esp+0x20]
  422e45:	xor    ebx,ebx
  422e47:	mov    edi,0x75108ae
  422e4c:	adc    ebx,DWORD PTR ds:0x42b226
  422e52:	xor    eax,edi
  422e54:	mov    ebx,DWORD PTR ds:0x42b1d2
  422e5a:	sbb    ebx,DWORD PTR ds:0x42b1ca
  422e60:	mov    DWORD PTR ds:0x42b1d2,ebx
  422e66:	mov    ebx,0x3272f5
  422e6b:	add    eax,ebx
  422e6d:	mov    DWORD PTR ds:0x42b182,0x4af1
  422e77:	mov    DWORD PTR [edx],eax
  422e79:	mov    eax,ds:0x42b042
  422e7e:	cmp    eax,0x455dedfa
  422e83:	jne    0x422fd8
  422e89:	and    DWORD PTR ds:0x42b1c6,0x0
  422e93:	mov    eax,ds:0x42b1c6
  422e98:	inc    eax
  422e99:	mov    ds:0x42b1c6,eax
  422e9e:	cmp    DWORD PTR ds:0x42b1c6,0x9
  422ea5:	ja     0x422ede
  422eab:	jmp    0x422eb9
  422eb0:	push   DWORD PTR [ebp-0x18]
  422eb3:	call   DWORD PTR ds:0x42b326
  422eb9:	cmp    DWORD PTR ds:0x42b1c6,0x8
  422ec0:	jne    0x422ed1
  422ec6:	mov    eax,ds:0x42b1c6
  422ecb:	inc    eax
  422ecc:	mov    ds:0x42b1c6,eax
  422ed1:	cmp    DWORD PTR ds:0x42b1c6,0x17
  422ed8:	jb     0x422e93
  422ede:	mov    eax,DWORD PTR [esp+0x18]
  422ee2:	and    DWORD PTR ds:0x42b1ca,0x0
  422eec:	jmp    0x422f00
  422ef1:	xor    edx,edx
  422ef3:	add    edx,DWORD PTR ds:0x42b1ca
  422ef9:	inc    edx
  422efa:	mov    DWORD PTR ds:0x42b1ca,edx
  422f00:	cmp    DWORD PTR ds:0x42b1ca,0x11
  422f07:	jae    0x422f60
  422f0d:	cmp    DWORD PTR ds:0x42b1ca,0x7
  422f14:	ja     0x422f60
  422f1a:	jmp    0x422f41
  422f1f:	push   0x42a04a
  422f24:	push   DWORD PTR [ebp-0x18]
  422f27:	push   0x268e
  422f2c:	push   0x3495
  422f31:	push   0x4b1a
  422f36:	push   0x4d1d
  422f3b:	call   DWORD PTR ds:0x42b2ea
  422f41:	cmp    DWORD PTR ds:0x42b1ca,0x6
  422f48:	jne    0x422f5b
  422f4e:	mov    edx,DWORD PTR ds:0x42b1ca
  422f54:	inc    edx
  422f55:	mov    DWORD PTR ds:0x42b1ca,edx
  422f5b:	jmp    0x422ef1
  422f60:	mov    edx,DWORD PTR ds:0x42a472
  422f66:	add    DWORD PTR ds:0x42b20e,0x42b1fe
  422f70:	mov    edx,DWORD PTR [edx+0x198]
  422f76:	sbb    DWORD PTR ds:0x42b1aa,0x42b21e
  422f80:	xor    eax,edi
  422f82:	add    eax,ebx
  422f84:	sub    DWORD PTR ds:0x42b202,0x7175
  422f8e:	mov    DWORD PTR [edx],eax
  422f90:	sbb    DWORD PTR ds:0x42b1da,edi
  422f96:	mov    eax,DWORD PTR [esp+0x18]
  422f9a:	xor    eax,edi
  422f9c:	add    DWORD PTR ds:0x42b1f2,0x42b22a
  422fa6:	add    eax,ebx
  422fa8:	or     DWORD PTR ds:0x42b1c6,0x2272
  422fb2:	mov    ds:0x42b042,eax
  422fb7:	mov    eax,DWORD PTR [esp+0x18]
  422fbb:	xor    eax,edi
  422fbd:	adc    DWORD PTR ds:0x42b192,0x42b18e
  422fc7:	add    eax,ebx
  422fc9:	sbb    DWORD PTR ds:0x42b212,0x42b1b6
  422fd3:	mov    ds:0x42a56a,eax
  422fd8:	sub    DWORD PTR ds:0x42b1a6,edi
  422fde:	mov    eax,ds:0x42a472
  422fe3:	adc    DWORD PTR ds:0x42b1b2,0x42b206
  422fed:	mov    eax,DWORD PTR [eax+0x18c]
  422ff3:	adc    DWORD PTR ds:0x42b1ee,0x42b1da
  422ffd:	mov    eax,DWORD PTR [eax]
  422fff:	or     DWORD PTR ds:0x42b20e,0x42b1c6
  423009:	mov    DWORD PTR [esp+0x60],eax
  42300d:	not    eax
  42300f:	mov    eax,0xf89c85a1
  423014:	sbb    DWORD PTR ds:0x42b1d2,0xc9c
  42301e:	mov    DWORD PTR [esp+0x10],eax
  423022:	mov    DWORD PTR [esp+0x10],eax
  423026:	sbb    DWORD PTR ds:0x42b222,0x42b21e
  423030:	mov    DWORD PTR [esp+0x10],eax
  423034:	mov    DWORD PTR [esp+0x10],ecx
  423038:	sub    DWORD PTR ds:0x42b22a,0x42b1ce
  423042:	mov    DWORD PTR [esp+0x20],eax
  423046:	mov    DWORD PTR [esp+0x20],0xf89c85bd
  42304e:	and    DWORD PTR ds:0x42b1aa,0x45c4
  423058:	mov    eax,DWORD PTR [esp+0x18]
  42305c:	add    DWORD PTR ds:0x42b1c2,0x42b18a
  423066:	xor    eax,edi
  423068:	add    eax,ebx
  42306a:	jmp    0x4231b3
  42306f:	or     DWORD PTR ds:0x42b21a,0x42b18e
  423079:	lea    eax,[esp+0x1b8]
  423080:	push   eax
  423081:	push   0x42a646
  423086:	call   DWORD PTR ds:0x42b312
  42308c:	mov    DWORD PTR ds:0x42b1e2,0x6a7b
  423096:	cmp    eax,0xffffffff
  423099:	mov    DWORD PTR ds:0x42b1be,0xa85
  4230a3:	jne    0x422c5a
  4230a9:	xor    DWORD PTR ds:0x42b1ee,0x42b19a
  4230b3:	push   0xf
  4230b5:	sub    DWORD PTR ds:0x42b1c6,0x42b1a6
  4230bf:	lea    eax,[esp+0x44]
  4230c3:	push   eax
  4230c4:	push   0x42a67a
  4230c9:	push   0x42a68e
  4230ce:	add    DWORD PTR ds:0x42b1ce,0x42b22a
  4230d8:	push   0x42a6b2
  4230dd:	dec    DWORD PTR ds:0x42b1f2
  4230e3:	call   esi
  4230e5:	imul   eax,eax,0x300000
  4230eb:	cmp    eax,0x1b00000
  4230f0:	jne    0x422c5a
  4230f6:	sbb    DWORD PTR ds:0x42b1be,0x817
  423100:	lea    eax,[esp+0x78]
  423104:	push   eax
  423105:	or     DWORD PTR ds:0x42b18e,0x42b1e2
  42310f:	push   0xffffffff
  423111:	add    DWORD PTR ds:0x42b1d6,0x42b18a
  42311b:	call   DWORD PTR ds:0x42b30a
  423121:	xor    DWORD PTR ds:0x42b1fe,0x42b19e
  42312b:	test   eax,eax
  42312d:	mov    DWORD PTR ds:0x42b20e,0x786b
  423137:	jne    0x422c5a
  42313d:	mov    eax,DWORD PTR [esp+0xc]
  423141:	mov    ecx,DWORD PTR [esp+0x20]
  423145:	or     DWORD PTR ds:0x42b1fa,0x5b03
  42314f:	xor    eax,edi
  423151:	and    DWORD PTR ds:0x42b182,0x42b1da
  42315b:	lea    eax,[eax+ecx*1+0x3272f5]
  423162:	push   eax
  423163:	sub    DWORD PTR ds:0x42b1fe,ecx
  423169:	mov    eax,DWORD PTR [esp+0x14]
  42316d:	xor    eax,edi
  42316f:	lea    eax,[ebp+eax*1+0x3272fd]
  423176:	add    DWORD PTR ds:0x42b212,0x505
  423180:	push   eax
  423181:	adc    eax,0xe25
  423186:	mov    eax,ds:0x42a472
  42318b:	push   DWORD PTR [eax+0x1bc]
  423191:	and    DWORD PTR ds:0x42b186,0x42b1b6
  42319b:	call   0x423df0
  4231a0:	mov    eax,DWORD PTR [esp+0xc]
  4231a4:	neg    edx
  4231a6:	mov    ecx,DWORD PTR [esp+0x20]
  4231aa:	xor    eax,edi
  4231ac:	lea    eax,[ecx+eax*1+0x3272f5]
  4231b3:	adc    ecx,DWORD PTR ds:0x42b1fa
  4231b9:	mov    ecx,DWORD PTR [esp+0xc]
  4231bd:	add    DWORD PTR ds:0x42b1ce,edi
  4231c3:	mov    edx,DWORD PTR [esp+0xc]
  4231c7:	and    DWORD PTR ds:0x42b1aa,0x42b186
  4231d1:	xor    edx,edi
  4231d3:	xor    ecx,edi
  4231d5:	not    DWORD PTR ds:0x42b1e6
  4231db:	add    ecx,edx
  4231dd:	mov    edx,DWORD PTR ds:0x42b20a
  4231e3:	and    DWORD PTR ds:0x42b222,edx
  4231e9:	mov    edx,DWORD PTR [esp+0xc]
  4231ed:	xor    edx,edi
  4231ef:	mov    DWORD PTR ds:0x42b182,0x14ab
  4231f9:	lea    ecx,[ecx+edx*1+0x9758df]
  423200:	mov    DWORD PTR ds:0x42b1e2,0x2305
  42320a:	mov    DWORD PTR [esp+0x20],eax
  42320e:	cmp    eax,ecx
  423210:	jbe    0x42306f
  423216:	xor    eax,ecx
  423218:	mov    eax,DWORD PTR [ebp+0xc]
  42321b:	adc    DWORD PTR ds:0x42b186,edi
  423221:	mov    ds:0x42a2f6,eax
  423226:	mov    ecx,DWORD PTR ds:0x42b1fe
  42322c:	adc    DWORD PTR ds:0x42b1f2,ecx
  423232:	mov    eax,DWORD PTR [ebp+0x10]
  423235:	inc    ecx
  423236:	mov    ds:0x42a552,eax
  42323b:	mov    eax,ds:0x42a2f6
  423240:	and    DWORD PTR ds:0x42b1b6,ebx
  423246:	mov    ecx,DWORD PTR [esp+0x30]
  42324a:	sub    eax,ebx
  42324c:	sbb    DWORD PTR ds:0x42b1be,0x1289
  423256:	xor    eax,edi
  423258:	xor    DWORD PTR ds:0x42b216,0x69d8
  423262:	mov    DWORD PTR [ecx],eax
  423264:	sub    DWORD PTR ds:0x42b1fe,0x6484
  42326e:	lea    eax,[esp+0x2c]
  423272:	mov    DWORD PTR [esp+0x6c],eax
  423276:	lea    eax,[ebp+0x4]
  423279:	sbb    DWORD PTR ds:0x42b1ba,0x4eab
  423283:	mov    DWORD PTR [esp+0x2c],eax
  423287:	lea    eax,[esp+0x1b8]
  42328e:	push   eax
  42328f:	xor    DWORD PTR ds:0x42b1b2,0x3d91
  423299:	push   0x42a6e2
  42329e:	mov    DWORD PTR ds:0x42b20e,0x4af0
  4232a8:	call   DWORD PTR ds:0x42b312
  4232ae:	cmp    eax,0xffffffff
  4232b1:	jne    0x422c5a
  4232b7:	push   0xf
  4232b9:	lea    eax,[esp+0x44]
  4232bd:	sub    DWORD PTR ds:0x42b20e,0x42b18a
  4232c7:	push   eax
  4232c8:	or     DWORD PTR ds:0x42b1ba,0x144a
  4232d2:	push   0x42a716
  4232d7:	push   0x42a72a
  4232dc:	sbb    DWORD PTR ds:0x42b1ba,0x42b182
  4232e6:	push   0x42a74e
  4232eb:	xor    DWORD PTR ds:0x42b19e,0x42b1fe
  4232f5:	call   esi
  4232f7:	imul   eax,eax,0x300000
  4232fd:	mov    DWORD PTR ds:0x42b1fa,0x26c3
  423307:	cmp    eax,0x1b00000
  42330c:	mov    DWORD PTR ds:0x42b19a,0x6081
  423316:	jne    0x422c5a
  42331c:	lea    eax,[esp+0x78]
  423320:	push   eax
  423321:	push   0xffffffff
  423323:	and    DWORD PTR ds:0x42b1e6,0x42b1aa
  42332d:	call   DWORD PTR ds:0x42b30a
  423333:	sbb    DWORD PTR ds:0x42b19a,0x42b1f6
  42333d:	test   eax,eax
  42333f:	mov    DWORD PTR ds:0x42b1a2,0x6ec1
  423349:	jne    0x422c5a
  42334f:	sub    DWORD PTR ds:0x42b1b2,0x1fda
  423359:	lea    eax,[esp+0x1b8]
  423360:	sbb    DWORD PTR ds:0x42b1fe,0x42b1ee
  42336a:	push   eax
  42336b:	push   0x42a77e
  423370:	adc    DWORD PTR ds:0x42b1f2,0x42b1c6
  42337a:	call   DWORD PTR ds:0x42b312
  423380:	mov    DWORD PTR ds:0x42b19e,0x2ae7
  42338a:	cmp    eax,0xffffffff
  42338d:	jne    0x422c5a
  423393:	adc    DWORD PTR ds:0x42b206,0x701e
  42339d:	push   0xf
  42339f:	lea    eax,[esp+0x44]
  4233a3:	or     DWORD PTR ds:0x42b18e,0x5b00
  4233ad:	push   eax
  4233ae:	push   0x42a7b2
  4233b3:	dec    DWORD PTR ds:0x42b1ba
  4233b9:	push   0x42a7c6
  4233be:	push   0x42a7ea
  4233c3:	sub    DWORD PTR ds:0x42b1e6,0x42b20e
  4233cd:	call   esi
  4233cf:	imul   eax,eax,0x300000
  4233d5:	mov    DWORD PTR ds:0x42b1be,0x6087
  4233df:	cmp    eax,0x1b00000
  4233e4:	mov    DWORD PTR ds:0x42b1d6,0x2e79
  4233ee:	jne    0x422c5a
  4233f4:	lea    eax,[esp+0x78]
  4233f8:	and    DWORD PTR ds:0x42b21e,0x6601
  423402:	push   eax
  423403:	add    DWORD PTR ds:0x42b206,0x4958
  42340d:	push   0xffffffff
  42340f:	and    DWORD PTR ds:0x42b1fa,0x42b1aa
  423419:	call   DWORD PTR ds:0x42b30a
  42341f:	mov    DWORD PTR ds:0x42b222,0x2f7c
  423429:	test   eax,eax
  42342b:	jne    0x422c5a
  423431:	and    DWORD PTR ds:0x42b1e2,0x6b99
  42343b:	lea    eax,[esp+0x1b8]
  423442:	push   eax
  423443:	add    DWORD PTR ds:0x42b22a,0x61ec
  42344d:	push   0x42a81a
  423452:	call   DWORD PTR ds:0x42b312
  423458:	mov    DWORD PTR ds:0x42b1c6,0x2abd
  423462:	cmp    eax,0xffffffff
  423465:	jne    0x422c5a
  42346b:	sbb    DWORD PTR ds:0x42b202,0x42b212
  423475:	push   0xf
  423477:	sub    DWORD PTR ds:0x42b192,0x503c
  423481:	lea    eax,[esp+0x44]
  423485:	push   eax
  423486:	push   0x42a84e
  42348b:	push   0x42a862
  423490:	push   0x42a886
  423495:	call   esi
  423497:	and    DWORD PTR ds:0x42b1c6,0x7bbe
  4234a1:	imul   eax,eax,0x300000
  4234a7:	cmp    eax,0x1b00000
  4234ac:	mov    DWORD PTR ds:0x42b1fe,0x19ae
  4234b6:	jne    0x422c5a
  4234bc:	lea    eax,[esp+0x78]
  4234c0:	push   eax
  4234c1:	neg    DWORD PTR ds:0x42b19e
  4234c7:	push   0xffffffff
  4234c9:	call   DWORD PTR ds:0x42b30a
  4234cf:	sbb    DWORD PTR ds:0x42b1aa,0x42b21e
  4234d9:	test   eax,eax
  4234db:	mov    DWORD PTR ds:0x42b196,0x192f
  4234e5:	jne    0x422c5a
  4234eb:	or     DWORD PTR ds:0x42b186,0x42b22e
  4234f5:	lea    eax,[esp+0x1b8]
  4234fc:	push   eax
  4234fd:	push   0x42a8b6
  423502:	sbb    DWORD PTR ds:0x42b216,0x426f
  42350c:	call   DWORD PTR ds:0x42b312
  423512:	cmp    eax,0xffffffff
  423515:	mov    DWORD PTR ds:0x42b18e,0x3e1f
  42351f:	jne    0x422c5a
  423525:	push   0xf
  423527:	or     DWORD PTR ds:0x42b182,0x42b1da
  423531:	lea    eax,[esp+0x44]
  423535:	push   eax
  423536:	push   0x42a8ea
  42353b:	xor    DWORD PTR ds:0x42b226,0x42b20a
  423545:	push   0x42a8fe
  42354a:	sub    DWORD PTR ds:0x42b226,0x42b22a
  423554:	push   0x42a922
  423559:	add    DWORD PTR ds:0x42b216,0x42b1d6
  423563:	call   esi
  423565:	add    DWORD PTR ds:0x42b1f6,0x38e
  42356f:	imul   eax,eax,0x300000
  423575:	mov    DWORD PTR ds:0x42b19a,0x2257
  42357f:	cmp    eax,0x1b00000
  423584:	mov    DWORD PTR ds:0x42b21a,0x2a1a
  42358e:	jne    0x422c5a
  423594:	adc    DWORD PTR ds:0x42b206,0x42b1a6
  42359e:	lea    eax,[esp+0x78]
  4235a2:	or     DWORD PTR ds:0x42b22e,0x42b1ca
  4235ac:	push   eax
  4235ad:	push   0xffffffff
  4235af:	call   DWORD PTR ds:0x42b30a
  4235b5:	and    DWORD PTR ds:0x42b182,0x42b1a6
  4235bf:	test   eax,eax
  4235c1:	mov    DWORD PTR ds:0x42b1aa,0x4002
  4235cb:	jne    0x422c5a
  4235d1:	dec    DWORD PTR ds:0x42b212
  4235d7:	lea    eax,[esp+0x1b8]
  4235de:	dec    DWORD PTR ds:0x42b18e
  4235e4:	push   eax
  4235e5:	or     DWORD PTR ds:0x42b1ea,0x42b212
  4235ef:	push   0x42a952
  4235f4:	add    DWORD PTR ds:0x42b202,0x42b216
  4235fe:	call   DWORD PTR ds:0x42b312
  423604:	cmp    eax,0xffffffff
  423607:	mov    DWORD PTR ds:0x42b212,0x6bd3
  423611:	jne    0x422c5a
  423617:	push   0xf
  423619:	add    DWORD PTR ds:0x42b1da,0x37be
  423623:	lea    eax,[esp+0x44]
  423627:	xor    DWORD PTR ds:0x42b216,0x42b21e
  423631:	push   eax
  423632:	push   0x42a986
  423637:	sub    DWORD PTR ds:0x42b1be,0x5164
  423641:	push   0x42a99a
  423646:	push   0x42a9be
  42364b:	or     DWORD PTR ds:0x42b182,0x42b21e
  423655:	call   esi
  423657:	and    DWORD PTR ds:0x42b20e,0x1f3e
  423661:	imul   eax,eax,0x300000
  423667:	mov    DWORD PTR ds:0x42b1ee,0x7e45
  423671:	cmp    eax,0x1b00000
  423676:	jne    0x422c5a
  42367c:	add    DWORD PTR ds:0x42b182,0x42b1b2
  423686:	lea    eax,[esp+0x78]
  42368a:	sub    DWORD PTR ds:0x42b1c6,0x42b1a6
  423694:	push   eax
  423695:	sbb    DWORD PTR ds:0x42b1b2,0x42b18a
  42369f:	push   0xffffffff
  4236a1:	adc    DWORD PTR ds:0x42b212,0x32d0
  4236ab:	call   DWORD PTR ds:0x42b30a
  4236b1:	or     DWORD PTR ds:0x42b1f2,0x42b1fe
  4236bb:	test   eax,eax
  4236bd:	jne    0x422c5a
  4236c3:	and    DWORD PTR ds:0x42b186,0x42b1fa
  4236cd:	lea    eax,[esp+0x1b8]
  4236d4:	xor    DWORD PTR ds:0x42b202,0x42b1fa
  4236de:	push   eax
  4236df:	push   0x42a9ee
  4236e4:	call   DWORD PTR ds:0x42b312
  4236ea:	mov    DWORD PTR ds:0x42b1ea,0x2426
  4236f4:	cmp    eax,0xffffffff
  4236f7:	mov    DWORD PTR ds:0x42b20a,0x3daf
  423701:	jne    0x422c5a
  423707:	sub    DWORD PTR ds:0x42b1e6,0x42b22a
  423711:	push   0xf
  423713:	adc    DWORD PTR ds:0x42b1ee,0x42b20a
  42371d:	lea    eax,[esp+0x44]
  423721:	and    DWORD PTR ds:0x42b20a,0x3b25
  42372b:	push   eax
  42372c:	push   0x42aa22
  423731:	sub    DWORD PTR ds:0x42b1fe,0x42b21e
  42373b:	push   0x42aa36
  423740:	mov    DWORD PTR ds:0x42b1fa,0x4cb4
  42374a:	push   0x42aa5a
  42374f:	call   esi
  423751:	inc    DWORD PTR ds:0x42b1a2
  423757:	imul   eax,eax,0x300000
  42375d:	cmp    eax,0x1b00000
  423762:	mov    DWORD PTR ds:0x42b1ea,0x7ee6
  42376c:	jne    0x422c5a
  423772:	or     DWORD PTR ds:0x42b1ea,0x7d0f
  42377c:	lea    eax,[esp+0x78]
  423780:	mov    DWORD PTR ds:0x42b1aa,0x7d0c
  42378a:	push   eax
  42378b:	adc    DWORD PTR ds:0x42b1aa,0x4970
  423795:	push   0xffffffff
  423797:	and    DWORD PTR ds:0x42b212,0x37c9
  4237a1:	call   DWORD PTR ds:0x42b30a
  4237a7:	sbb    DWORD PTR ds:0x42b21e,0x7cde
  4237b1:	test   eax,eax
  4237b3:	mov    DWORD PTR ds:0x42b206,0x64c2
  4237bd:	jne    0x422c5a
  4237c3:	sub    DWORD PTR ds:0x42b1c6,0x42b182
  4237cd:	lea    eax,[esp+0x1b8]
  4237d4:	add    DWORD PTR ds:0x42b19e,0x42b1ee
  4237de:	push   eax
  4237df:	and    DWORD PTR ds:0x42b212,0x42b1de
  4237e9:	push   0x42aa8a
  4237ee:	sbb    DWORD PTR ds:0x42b20e,0x42b1fe
  4237f8:	call   DWORD PTR ds:0x42b312
  4237fe:	mov    DWORD PTR ds:0x42b222,0x5e52
  423808:	cmp    eax,0xffffffff
  42380b:	mov    DWORD PTR ds:0x42b19a,0x4e9b
  423815:	jne    0x422c5a
  42381b:	or     DWORD PTR ds:0x42b1a6,0x4b96
  423825:	push   0xf
  423827:	lea    eax,[esp+0x44]
  42382b:	or     DWORD PTR ds:0x42b22e,0x42b192
  423835:	push   eax
  423836:	push   0x42aabe
  42383b:	push   0x42aad2
  423840:	push   0x42aaf6
  423845:	add    DWORD PTR ds:0x42b216,0x42b1ee
  42384f:	call   esi
  423851:	xor    DWORD PTR ds:0x42b1e2,0x982
  42385b:	imul   eax,eax,0x300000
  423861:	mov    DWORD PTR ds:0x42b1aa,0x5061
  42386b:	cmp    eax,0x1b00000
  423870:	jne    0x422c5a
  423876:	lea    eax,[esp+0x78]
  42387a:	xor    DWORD PTR ds:0x42b1fa,0x42b1ee
  423884:	push   eax
  423885:	push   0xffffffff
  423887:	call   DWORD PTR ds:0x42b30a
  42388d:	test   eax,eax
  42388f:	jne    0x422c5a
  423895:	add    DWORD PTR ds:0x42b21e,0x42b1ce
  42389f:	lea    eax,[esp+0x1b8]
  4238a6:	push   eax
  4238a7:	adc    DWORD PTR ds:0x42b1fe,0x6ad9
  4238b1:	push   0x42ab26
  4238b6:	or     DWORD PTR ds:0x42b1d6,0x42b1be
  4238c0:	call   DWORD PTR ds:0x42b312
  4238c6:	mov    DWORD PTR ds:0x42b216,0x33dc
  4238d0:	cmp    eax,0xffffffff
  4238d3:	mov    DWORD PTR ds:0x42b182,0x32d8
  4238dd:	jne    0x422c5a
  4238e3:	add    DWORD PTR ds:0x42b1b6,0x3dc0
  4238ed:	push   0xf
  4238ef:	lea    eax,[esp+0x44]
  4238f3:	xor    DWORD PTR ds:0x42b19a,0x42b1ce
  4238fd:	push   eax
  4238fe:	push   0x42ab5a
  423903:	add    DWORD PTR ds:0x42b1e6,0x62a8
  42390d:	push   0x42ab6e
  423912:	push   0x42ab92
  423917:	xor    DWORD PTR ds:0x42b19e,0x23c8
  423921:	call   esi
  423923:	xor    DWORD PTR ds:0x42b226,0x14f0
  42392d:	imul   eax,eax,0x300000
  423933:	mov    DWORD PTR ds:0x42b1ea,0x193b
  42393d:	cmp    eax,0x1b00000
  423942:	mov    DWORD PTR ds:0x42b1ee,0x7050
  42394c:	jne    0x422c5a
  423952:	or     DWORD PTR ds:0x42b1ce,0x3f0
  42395c:	lea    eax,[esp+0x78]
  423960:	push   eax
  423961:	push   0xffffffff
  423963:	call   DWORD PTR ds:0x42b30a
  423969:	test   eax,eax
  42396b:	jne    0x422c5a
  423971:	lea    eax,[esp+0x1b8]
  423978:	push   eax
  423979:	push   0x42abc2
  42397e:	call   DWORD PTR ds:0x42b312
  423984:	cmp    eax,0xffffffff
  423987:	jne    0x422c5a
  42398d:	push   0xf
  42398f:	lea    eax,[esp+0x44]
  423993:	push   eax
  423994:	push   0x42abf6
  423999:	push   0x42ac0a
  42399e:	push   0x42ac2e
  4239a3:	call   esi
  4239a5:	imul   eax,eax,0x300000
  4239ab:	cmp    eax,0x1b00000
  4239b0:	jne    0x422c5a
  4239b6:	lea    eax,[esp+0x78]
  4239ba:	push   eax
  4239bb:	push   0xffffffff
  4239bd:	call   DWORD PTR ds:0x42b30a
  4239c3:	test   eax,eax
  4239c5:	jne    0x422c5a
  4239cb:	lea    eax,[esp+0x1b8]
  4239d2:	push   eax
  4239d3:	push   0x42ac5e
  4239d8:	call   DWORD PTR ds:0x42b312
  4239de:	cmp    eax,0xffffffff
  4239e1:	jne    0x422c5a
  4239e7:	push   0xf
  4239e9:	lea    eax,[esp+0x44]
  4239ed:	push   eax
  4239ee:	push   0x42ac92
  4239f3:	push   0x42aca6
  4239f8:	push   0x42acca
  4239fd:	call   esi
  4239ff:	imul   eax,eax,0x300000
  423a05:	cmp    eax,0x1b00000
  423a0a:	jne    0x422c5a
  423a10:	lea    eax,[esp+0x78]
  423a14:	push   eax
  423a15:	push   0xffffffff
  423a17:	call   DWORD PTR ds:0x42b30a
  423a1d:	test   eax,eax
  423a1f:	jne    0x422c5a
  423a25:	lea    eax,[esp+0x1b8]
  423a2c:	push   eax
  423a2d:	push   0x42acfa
  423a32:	call   DWORD PTR ds:0x42b312
  423a38:	cmp    eax,0xffffffff
  423a3b:	jne    0x422c5a
  423a41:	push   0xf
  423a43:	lea    eax,[esp+0x44]
  423a47:	push   eax
  423a48:	push   0x42ad2e
  423a4d:	push   0x42ad42
  423a52:	push   0x42ad66
  423a57:	call   esi
  423a59:	imul   eax,eax,0x300000
  423a5f:	cmp    eax,0x1b00000
  423a64:	jne    0x422c5a
  423a6a:	lea    eax,[esp+0x78]
  423a6e:	push   eax
  423a6f:	push   0xffffffff
  423a71:	call   DWORD PTR ds:0x42b30a
  423a77:	test   eax,eax
  423a79:	jne    0x422c5a
  423a7f:	lea    eax,[esp+0x1b8]
  423a86:	push   eax
  423a87:	push   0x42ad96
  423a8c:	call   DWORD PTR ds:0x42b312
  423a92:	cmp    eax,0xffffffff
  423a95:	jne    0x422c5a
  423a9b:	push   0xf
  423a9d:	lea    eax,[esp+0x44]
  423aa1:	push   eax
  423aa2:	push   0x42adca
  423aa7:	push   0x42adde
  423aac:	push   0x42ae02
  423ab1:	call   esi
  423ab3:	imul   eax,eax,0x300000
  423ab9:	cmp    eax,0x1b00000
  423abe:	jne    0x422c5a
  423ac4:	lea    eax,[esp+0x78]
  423ac8:	push   eax
  423ac9:	push   0xffffffff
  423acb:	call   DWORD PTR ds:0x42b30a
  423ad1:	test   eax,eax
  423ad3:	jne    0x422c5a
  423ad9:	mov    eax,DWORD PTR [esp+0x3c]
  423add:	cmp    eax,0xf89c85a2
  423ae2:	je     0x423b41
  423ae8:	mov    eax,DWORD PTR [esp+0x18]
  423aec:	mov    ecx,DWORD PTR [esp+0x38]
  423af0:	xor    eax,edi
  423af2:	add    eax,ebx
  423af4:	cmp    eax,ecx
  423af6:	je     0x423b41
  423afc:	mov    eax,ds:0x42a472
  423b01:	mov    eax,DWORD PTR [eax+0x194]
  423b07:	mov    ecx,DWORD PTR [eax]
  423b09:	mov    eax,DWORD PTR [ecx+0x3c]
  423b0c:	push   DWORD PTR ds:0x42a552
  423b12:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  423b16:	push   DWORD PTR ds:0x42a2f6
  423b1c:	add    eax,ecx
  423b1e:	mov    ecx,DWORD PTR ds:0x42a472
  423b24:	mov    ecx,DWORD PTR [ecx+0x194]
  423b2a:	push   DWORD PTR [ecx]
  423b2c:	call   eax
  423b2e:	mov    ecx,DWORD PTR ds:0x42a472
  423b34:	mov    ecx,DWORD PTR [ecx+0x1cc]
  423b3a:	mov    DWORD PTR [ecx],eax
  423b3c:	jmp    0x423d6c
  423b41:	mov    eax,DWORD PTR [esp+0x18]
  423b45:	mov    ecx,DWORD PTR [esp+0x60]
  423b49:	xor    eax,edi
  423b4b:	add    eax,ebx
  423b4d:	cmp    eax,ecx
  423b4f:	jne    0x423bba
  423b55:	mov    eax,DWORD PTR [esp+0x18]
  423b59:	mov    ecx,DWORD PTR ds:0x42a472
  423b5f:	mov    ecx,DWORD PTR [ecx+0x198]
  423b65:	xor    eax,edi
  423b67:	add    eax,ebx
  423b69:	cmp    eax,DWORD PTR [ecx]
  423b6b:	jne    0x423b93
  423b71:	mov    eax,DWORD PTR [esp+0x18]
  423b75:	push   0xffffffff
  423b77:	push   0x70941f95
  423b7c:	xor    eax,edi
  423b7e:	add    eax,ebx
  423b80:	push   eax
  423b81:	push   0xf89c85a1
  423b86:	push   DWORD PTR [esp+0x1c]
  423b8a:	push   DWORD PTR [esp+0x2c]
  423b8e:	call   0x4224d2
  423b93:	push   DWORD PTR [esp+0xc]
  423b97:	push   DWORD PTR [esp+0x1c]
  423b9b:	call   0x401000
  423ba0:	mov    eax,DWORD PTR [esp+0x18]
  423ba4:	xor    eax,edi
  423ba6:	add    eax,ebx
  423ba8:	mov    ds:0x42a4fe,eax
  423bad:	mov    eax,DWORD PTR [esp+0x18]
  423bb1:	xor    eax,edi
  423bb3:	add    eax,ebx
  423bb5:	mov    ds:0x42a4f6,eax
  423bba:	mov    eax,DWORD PTR [esp+0x2c]
  423bbe:	test   eax,eax
  423bc0:	je     0x423d6c
  423bc6:	lea    eax,[esp+0x1b8]
  423bcd:	mov    DWORD PTR [esp+0x64],0xf152c3a
  423bd5:	push   eax
  423bd6:	mov    DWORD PTR [esp+0x78],0x712ed2f
  423bde:	mov    DWORD PTR [esp+0x74],0x373fc0d
  423be6:	push   0x42ae32
  423beb:	mov    DWORD PTR [esp+0x70],0x72670add
  423bf3:	call   DWORD PTR ds:0x42b312
  423bf9:	cmp    eax,0xffffffff
  423bfc:	jne    0x422c5a
  423c02:	push   0xf
  423c04:	lea    eax,[esp+0x44]
  423c08:	push   eax
  423c09:	push   0x42ae66
  423c0e:	push   0x42ae7a
  423c13:	push   0x42ae9e
  423c18:	call   esi
  423c1a:	imul   eax,eax,0x300000
  423c20:	cmp    eax,0x1b00000
  423c25:	jne    0x422c5a
  423c2b:	lea    eax,[esp+0x78]
  423c2f:	push   eax
  423c30:	push   0xffffffff
  423c32:	call   DWORD PTR ds:0x42b30a
  423c38:	test   eax,eax
  423c3a:	jne    0x422c5a
  423c40:	call   0x41b628
  423c45:	mov    eax,DWORD PTR [esp+0x34]
  423c49:	mov    eax,DWORD PTR [esp+0xc]
  423c4d:	mov    DWORD PTR [esp+0x30],eax
  423c51:	mov    eax,DWORD PTR [esp+0x18]
  423c55:	mov    DWORD PTR [esp+0xc],eax
  423c59:	mov    eax,eax
  423c5b:	mov    eax,ds:0x42a472
  423c60:	mov    ecx,DWORD PTR [eax+0x1c0]
  423c66:	mov    edx,DWORD PTR [ecx]
  423c68:	and    DWORD PTR [esp+0x14],0x0
  423c6d:	mov    esi,0xfabdbed4
  423c72:	add    edx,esi
  423c74:	adc    DWORD PTR [esp+0x14],0xffffffff
  423c79:	mov    ecx,0x8a29a141
  423c7e:	xor    edx,ecx
  423c80:	mov    DWORD PTR [esp+0x20],edx
  423c84:	mov    edx,DWORD PTR [esp+0x14]
  423c88:	xor    edx,0x0
  423c8b:	cmp    DWORD PTR [esp+0x20],0x70941f94
  423c93:	mov    DWORD PTR [esp+0x24],edx
  423c97:	jne    0x423ca6
  423c9d:	cmp    edx,0xffffffff
  423ca0:	je     0x423d0f
  423ca6:	mov    eax,DWORD PTR [eax+0x1c8]
  423cac:	mov    eax,DWORD PTR [eax]
  423cae:	cdq    
  423caf:	add    eax,esi
  423cb1:	adc    edx,0xffffffff
  423cb4:	and    DWORD PTR [esp+0x14],0x0
  423cb9:	xor    edx,0x0
  423cbc:	mov    DWORD PTR [esp+0x1c],edx
  423cc0:	mov    edx,DWORD PTR [esp+0xc]
  423cc4:	mov    DWORD PTR [esp+0x10],edx
  423cc8:	xor    eax,ecx
  423cca:	add    DWORD PTR [esp+0x10],esi
  423cce:	mov    edx,DWORD PTR [esp+0x10]
  423cd2:	adc    DWORD PTR [esp+0x14],0xffffffff
  423cd7:	xor    edx,ecx
  423cd9:	mov    DWORD PTR [esp+0x20],edx
  423cdd:	mov    edx,DWORD PTR [esp+0x14]
  423ce1:	xor    edx,0x0
  423ce4:	mov    DWORD PTR [esp+0x24],edx
  423ce8:	cmp    DWORD PTR [esp+0x20],eax
  423cec:	jne    0x423cfe
  423cf2:	mov    eax,DWORD PTR [esp+0x1c]
  423cf6:	cmp    edx,eax
  423cf8:	je     0x423d0f
  423cfe:	mov    eax,DWORD PTR [esp+0xc]
  423d02:	add    eax,DWORD PTR [esp+0x30]
  423d06:	mov    DWORD PTR [esp+0xc],eax
  423d0a:	jmp    0x423d6c
  423d0f:	mov    eax,ds:0x42a4f6
  423d14:	mov    edx,DWORD PTR ds:0x42a4fe
  423d1a:	xor    eax,edx
  423d1c:	mov    ds:0x42a4f6,eax
  423d21:	mov    edx,DWORD PTR ds:0x42a4f6
  423d27:	mov    eax,DWORD PTR [esp+0x2c]
  423d2b:	add    DWORD PTR [eax],edx
  423d2d:	mov    edx,DWORD PTR [esp+0xc]
  423d31:	mov    eax,ds:0x42a4f6
  423d36:	xor    edx,edi
  423d38:	add    edx,ebx
  423d3a:	xor    ebx,ebx
  423d3c:	add    edx,esi
  423d3e:	adc    ebx,0xffffffff
  423d41:	xor    edi,edi
  423d43:	xor    edx,ecx
  423d45:	xor    ebx,0x0
  423d48:	add    eax,esi
  423d4a:	adc    edi,0xffffffff
  423d4d:	xor    eax,ecx
  423d4f:	xor    edi,0x0
  423d52:	cmp    eax,edx
  423d54:	jne    0x423d6c
  423d5a:	cmp    edi,ebx
  423d5c:	jne    0x423d6c
  423d62:	mov    eax,ds:0x42a4f6
  423d67:	mov    ds:0x42a4fe,eax
  423d6c:	lea    eax,[esp+0x1b8]
  423d73:	push   eax
  423d74:	push   0x42aece
  423d79:	call   DWORD PTR ds:0x42b312
  423d7f:	cmp    eax,0xffffffff
  423d82:	jne    0x422c5a
  423d88:	push   0xf
  423d8a:	lea    eax,[esp+0x44]
  423d8e:	push   eax
  423d8f:	push   0x42af02
  423d94:	push   0x42af16
  423d99:	push   0x42af3a
  423d9e:	call   DWORD PTR ds:0x42b302
  423da4:	imul   eax,eax,0x300000
  423daa:	cmp    eax,0x1b00000
  423daf:	jne    0x422c5a
  423db5:	lea    eax,[esp+0x78]
  423db9:	push   eax
  423dba:	push   0xffffffff
  423dbc:	call   DWORD PTR ds:0x42b30a
  423dc2:	test   eax,eax
  423dc4:	jne    0x422c5a
  423dca:	mov    eax,ds:0x42a472
  423dcf:	push   0x4
  423dd1:	add    eax,0x1cc
  423dd6:	push   eax
  423dd7:	lea    eax,[esp+0x3c]
  423ddb:	push   eax
  423ddc:	call   0x423df0
  423de1:	mov    eax,DWORD PTR [esp+0x34]
  423de5:	mov    eax,DWORD PTR [eax]
  423de7:	pop    edi
  423de8:	pop    esi
  423de9:	pop    ebx
  423dea:	mov    esp,ebp
  423dec:	pop    ebp
  423ded:	ret    0xc
  423df0:	push   ebp
  423df1:	mov    ebp,esp
  423df3:	sub    esp,0x10
  423df6:	mov    eax,0xf89c85a5
  423dfb:	mov    DWORD PTR ds:0x42b222,0x14
  423e05:	cmp    DWORD PTR ds:0x42b222,0x0
  423e0c:	je     0x423e66
  423e12:	cmp    DWORD PTR ds:0x42b222,0x9
  423e19:	jbe    0x423e66
  423e1f:	jmp    0x423e38
  423e24:	push   0x42a03d
  423e29:	push   0x1
  423e2b:	push   0x1
  423e2d:	push   0x14be
  423e32:	call   DWORD PTR ds:0x42b2ee
  423e38:	cmp    DWORD PTR ds:0x42b222,0xa
  423e3f:	jne    0x423e54
  423e45:	xor    edx,edx
  423e47:	add    edx,DWORD PTR ds:0x42b222
  423e4d:	dec    edx
  423e4e:	mov    DWORD PTR ds:0x42b222,edx
  423e54:	mov    edx,DWORD PTR ds:0x42b222
  423e5a:	dec    edx
  423e5b:	mov    DWORD PTR ds:0x42b222,edx
  423e61:	jmp    0x423e05
  423e66:	mov    DWORD PTR [ebp-0x4],eax
  423e69:	and    DWORD PTR ds:0x42b1fa,0x0
  423e73:	jmp    0x423e85
  423e78:	mov    edx,DWORD PTR ds:0x42b1fa
  423e7e:	inc    edx
  423e7f:	mov    DWORD PTR ds:0x42b1fa,edx
  423e85:	cmp    DWORD PTR ds:0x42b1fa,0x19
  423e8c:	jae    0x423ece
  423e92:	cmp    DWORD PTR ds:0x42b1fa,0xc
  423e99:	jg     0x423ece
  423e9f:	jmp    0x423eaf
  423ea4:	push   0x863f
  423ea9:	call   DWORD PTR ds:0x42b2f2
  423eaf:	cmp    DWORD PTR ds:0x42b1fa,0xb
  423eb6:	jne    0x423ec9
  423ebc:	mov    edx,DWORD PTR ds:0x42b1fa
  423ec2:	inc    edx
  423ec3:	mov    DWORD PTR ds:0x42b1fa,edx
  423ec9:	jmp    0x423e78
  423ece:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  423ed5:	mov    edx,DWORD PTR ds:0x42b1aa
  423edb:	or     edx,DWORD PTR ds:0x42b1da
  423ee1:	mov    DWORD PTR ds:0x42b1aa,edx
  423ee7:	mov    ecx,DWORD PTR [ebp-0x4]
  423eea:	not    edx
  423eec:	push   esi
  423eed:	and    edx,esi
  423eef:	mov    edx,0x75108ae
  423ef4:	xor    ecx,edx
  423ef6:	adc    DWORD PTR ds:0x42b18e,ebx
  423efc:	mov    esi,0x3272f5
  423f01:	and    DWORD PTR ds:0x42b186,0x14f5
  423f0b:	push   edi
  423f0c:	adc    edi,DWORD PTR ds:0x42b1c2
  423f12:	mov    edi,DWORD PTR [ebp+0x10]
  423f15:	xor    DWORD PTR ds:0x42b1fa,0x42b1ce
  423f1f:	add    ecx,esi
  423f21:	mov    DWORD PTR ds:0x42b1da,0x1b10
  423f2b:	cmp    ecx,edi
  423f2d:	mov    DWORD PTR ds:0x42b1d6,0x199
  423f37:	je     0x42401c
  423f3d:	xor    edi,ecx
  423f3f:	mov    ecx,DWORD PTR [ebp-0x4]
  423f42:	sbb    DWORD PTR ds:0x42b202,0x792c
  423f4c:	mov    edi,DWORD PTR [ebp+0x10]
  423f4f:	sub    DWORD PTR ds:0x42b1ba,0xd36
  423f59:	xor    eax,eax
  423f5b:	xor    ecx,edx
  423f5d:	xor    DWORD PTR ds:0x42b216,0x49be
  423f67:	add    ecx,esi
  423f69:	add    edi,0xfabdbed4
  423f6f:	adc    eax,0xffffffff
  423f72:	xor    eax,0x0
  423f75:	mov    DWORD PTR [ebp-0xc],eax
  423f78:	push   ebx
  423f79:	xor    ebx,ebx
  423f7b:	xor    edi,0x8a29a141
  423f81:	mov    eax,ecx
  423f83:	add    eax,0xfabdbed4
  423f88:	adc    ebx,0xffffffff
  423f8b:	xor    eax,0x8a29a141
  423f90:	xor    ebx,0x0
  423f93:	cmp    eax,edi
  423f95:	jne    0x423fae
  423f9b:	cmp    ebx,DWORD PTR [ebp-0xc]
  423f9e:	je     0x424016
  423fa4:	jmp    0x423fae
  423fa9:	mov    esi,0x3272f5
  423fae:	mov    eax,DWORD PTR [ebp-0x4]
  423fb1:	mov    edi,DWORD PTR [ebp-0x8]
  423fb4:	xor    edi,edx
  423fb6:	add    edi,esi
  423fb8:	mov    esi,DWORD PTR [ebp+0x8]
  423fbb:	imul   edi,ecx
  423fbe:	mov    ebx,DWORD PTR [ebp+0xc]
  423fc1:	xor    eax,edx
  423fc3:	add    eax,ecx
  423fc5:	mov    al,BYTE PTR [ebx+eax*1+0x3272f5]
  423fcc:	mov    BYTE PTR [edi+esi*1],al
  423fcf:	mov    eax,DWORD PTR [ebp-0x8]
  423fd2:	mov    esi,DWORD PTR [ebp+0x10]
  423fd5:	xor    eax,edx
  423fd7:	xor    ebx,ebx
  423fd9:	add    esi,0xfabdbed4
  423fdf:	adc    ebx,0xffffffff
  423fe2:	lea    ecx,[ecx+eax*1+0x3272f5]
  423fe9:	xor    edi,edi
  423feb:	xor    esi,0x8a29a141
  423ff1:	xor    ebx,0x0
  423ff4:	mov    eax,ecx
  423ff6:	add    eax,0xfabdbed4
  423ffb:	adc    edi,0xffffffff
  423ffe:	xor    eax,0x8a29a141
  424003:	xor    edi,0x0
  424006:	cmp    eax,esi
  424008:	jne    0x423fa9
  42400e:	cmp    edi,ebx
  424010:	jne    0x423fa9
  424016:	mov    eax,0xf89c85a2
  42401b:	pop    ebx
  42401c:	pop    edi
  42401d:	pop    esi
  42401e:	leave  
  42401f:	ret    0xc
  424022:	push   ebp
  424023:	mov    ebp,esp
  424025:	push   ecx
  424026:	and    DWORD PTR ds:0x42b19e,0x0
  424030:	jmp    0x424043
  424035:	xor    eax,eax
  424037:	xor    eax,DWORD PTR ds:0x42b19e
  42403d:	inc    eax
  42403e:	mov    ds:0x42b19e,eax
  424043:	cmp    DWORD PTR ds:0x42b19e,0x14
  42404a:	jae    0x424072
  424050:	cmp    DWORD PTR ds:0x42b19e,0x1e
  424057:	jg     0x424072
  42405d:	jmp    0x42406d
  424062:	push   0x42b182
  424067:	call   DWORD PTR ds:0x42b2f6
  42406d:	jmp    0x424035
  424072:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  424079:	and    DWORD PTR ds:0x42b1b2,0x0
  424083:	xor    ecx,ecx
  424085:	xor    ecx,DWORD PTR ds:0x42b1b2
  42408b:	inc    ecx
  42408c:	mov    DWORD PTR ds:0x42b1b2,ecx
  424092:	cmp    DWORD PTR ds:0x42b1b2,0x4
  424099:	jle    0x4240e5
  42409f:	jmp    0x4240be
  4240a4:	push   0x42b206
  4240a9:	push   0x42b1c6
  4240ae:	push   0x6e36
  4240b3:	push   0x42a0fe
  4240b8:	call   DWORD PTR ds:0x42b2fa
  4240be:	cmp    DWORD PTR ds:0x42b1b2,0x3
  4240c5:	jne    0x4240d8
  4240cb:	mov    ecx,DWORD PTR ds:0x42b1b2
  4240d1:	inc    ecx
  4240d2:	mov    DWORD PTR ds:0x42b1b2,ecx
  4240d8:	cmp    DWORD PTR ds:0x42b1b2,0x1b
  4240df:	jb     0x424083
  4240e5:	mov    eax,DWORD PTR [ebp+0x8]
  4240e8:	movsx  eax,BYTE PTR [eax]
  4240eb:	mov    edx,0x3272f5
  4240f0:	sub    eax,edx
  4240f2:	mov    ecx,0x75108ae
  4240f7:	xor    eax,ecx
  4240f9:	cmp    eax,0xf89c85f6
  4240fe:	jne    0x42412d
  424104:	mov    eax,DWORD PTR [ebp+0x8]
  424107:	push   esi
  424108:	mov    esi,DWORD PTR [ebp+0x8]
  42410b:	add    esi,DWORD PTR [eax+0x3c]
  42410e:	mov    DWORD PTR [ebp+0x8],esi
  424111:	mov    eax,DWORD PTR [ebp-0x4]
  424114:	mov    esi,DWORD PTR [ebp+0x8]
  424117:	xor    eax,ecx
  424119:	add    eax,edx
  42411b:	cmp    DWORD PTR [esi+0x54],eax
  42411e:	pop    esi
  42411f:	je     0x42412d
  424125:	mov    eax,DWORD PTR [ebp+0x8]
  424128:	jmp    0x424134
  42412d:	mov    eax,DWORD PTR [ebp-0x4]
  424130:	xor    eax,ecx
  424132:	add    eax,edx
  424134:	leave  
  424135:	ret    0x4
  424138:	push   ebp
  424139:	mov    ebp,esp
  42413b:	sub    esp,0xc
  42413e:	and    DWORD PTR ds:0x42b1c6,0x0
  424148:	jmp    0x42415a
  42414d:	mov    edx,DWORD PTR ds:0x42b1c6
  424153:	inc    edx
  424154:	mov    DWORD PTR ds:0x42b1c6,edx
  42415a:	cmp    DWORD PTR ds:0x42b1c6,0x1b
  424161:	jae    0x4241a8
  424167:	cmp    DWORD PTR ds:0x42b1c6,0xd
  42416e:	jle    0x4241a8
  424174:	jmp    0x424189
  424179:	push   0x42b216
  42417e:	push   0x42a1f3
  424183:	call   DWORD PTR ds:0x42b2fe
  424189:	cmp    DWORD PTR ds:0x42b1c6,0xc
  424190:	jne    0x4241a3
  424196:	mov    edx,DWORD PTR ds:0x42b1c6
  42419c:	inc    edx
  42419d:	mov    DWORD PTR ds:0x42b1c6,edx
  4241a3:	jmp    0x42414d
  4241a8:	push   esi
  4241a9:	and    DWORD PTR ds:0x42b222,0x0
  4241b3:	xor    esi,esi
  4241b5:	or     esi,DWORD PTR ds:0x42b222
  4241bb:	inc    esi
  4241bc:	mov    DWORD PTR ds:0x42b222,esi
  4241c2:	cmp    DWORD PTR ds:0x42b222,0x7
  4241c9:	jl     0x424211
  4241cf:	jmp    0x4241ea
  4241d4:	push   DWORD PTR [ebp-0x28]
  4241d7:	push   DWORD PTR [ebp-0x24]
  4241da:	push   0x42a1b7
  4241df:	push   0x400000
  4241e4:	call   DWORD PTR ds:0x42b306
  4241ea:	cmp    DWORD PTR ds:0x42b222,0x6
  4241f1:	jne    0x424204
  4241f7:	mov    esi,DWORD PTR ds:0x42b222
  4241fd:	inc    esi
  4241fe:	mov    DWORD PTR ds:0x42b222,esi
  424204:	cmp    DWORD PTR ds:0x42b222,0x15
  42420b:	jb     0x4241b3
  424211:	mov    esi,0xf89c85a5
  424216:	or     DWORD PTR ds:0x42b1d6,0x459e
  424220:	mov    DWORD PTR [ebp-0x8],esi
  424223:	and    DWORD PTR ds:0x42b1d6,0x0
  42422d:	jmp    0x424241
  424232:	xor    ecx,ecx
  424234:	xor    ecx,DWORD PTR ds:0x42b1d6
  42423a:	inc    ecx
  42423b:	mov    DWORD PTR ds:0x42b1d6,ecx
  424241:	cmp    DWORD PTR ds:0x42b1d6,0x1c
  424248:	jae    0x42428f
  42424e:	cmp    DWORD PTR ds:0x42b1d6,0xf
  424255:	jge    0x42428f
  42425b:	jmp    0x424270
  424260:	push   0x42a1a1
  424265:	push   0x0
  424267:	push   DWORD PTR [ebp-0x20]
  42426a:	call   DWORD PTR ds:0x42b30e
  424270:	cmp    DWORD PTR ds:0x42b1d6,0xe
  424277:	jne    0x42428a
  42427d:	mov    ecx,DWORD PTR ds:0x42b1d6
  424283:	inc    ecx
  424284:	mov    DWORD PTR ds:0x42b1d6,ecx
  42428a:	jmp    0x424232
  42428f:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  424296:	push   edi
  424297:	mov    eax,eax
  424299:	mov    eax,DWORD PTR [ebp-0x4]
  42429c:	mov    edi,DWORD PTR [ebp-0x8]
  42429f:	mov    ecx,0x75108ae
  4242a4:	xor    eax,ecx
  4242a6:	xor    edi,ecx
  4242a8:	mov    edx,0x3272f5
  4242ad:	add    edi,edx
  4242af:	add    eax,edx
  4242b1:	imul   eax,edi
  4242b4:	mov    edi,DWORD PTR [ebp+0xc]
  4242b7:	jmp    0x4257bb
  4242bc:	jge    0x42427f
  4242be:	jnp    0x42427a
  4242c0:	mov    bh,0xb2
  4242c2:	mov    dl,0xbe
  4242c4:	jmp    0x4d2776ec
  4242c9:	pushf  
  4242ca:	bound  edx,QWORD PTR [edx]
  4242cc:	xchg   edx,eax
  4242cd:	xchg   ebp,eax
  4242ce:	add    BYTE PTR [ebx-0x7c7c9066],0x77
  4242d5:	fadd   DWORD PTR [eax+0x48115d2f]
  4242db:	mov    ecx,0x2c860dd6
  4242e0:	jmp    0x3015:0x2b841271
  4242e7:	adc    DWORD PTR [ebp+edi*1+0x5da804e2],esi
  4242ee:	test   DWORD PTR [ebx+0x73],ebx
  4242f1:	mov    esp,0x88764e94
  4242f6:	xchg   esi,eax
  4242f7:	push   0xffffff85
  4242f9:	dec    DWORD PTR [ecx]
  4242fb:	xor    edi,DWORD PTR [ecx]
  4242fd:	xchg   BYTE PTR [edx],bl
  4242ff:	imul   eax,DWORD PTR [ebp+edx*8-0x57400381],0xc5e1535b
  42430a:	and    eax,0x2316baad
  42430f:	pop    es
  424310:	test   eax,0xc7066a4c
  424315:	retf   0x6465
  424318:	(bad)  
  42431a:	shr    dh,1
  42431c:	xor    DWORD PTR [eax],eax
  42431e:	push   ebp
  42431f:	mov    ss,WORD PTR [edx+0x14d410d1]
  424325:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424326:	mov    dh,0x3f
  424328:	test   ebp,ebp
  42432a:	push   edx
  42432b:	imul   ecx,DWORD PTR [ebp-0x41bc14a1],0x5a
  424332:	cmp    ecx,DWORD PTR [ebx]
  424334:	jl     0x4242d5
  424336:	sahf   
  424337:	test   al,0xd0
  424339:	cmp    ch,ch
  42433b:	pop    esi
  42433c:	xchg   ecx,eax
  42433d:	sub    edx,esp
  42433f:	in     eax,0xd7
  424341:	xchg   esi,eax
  424342:	sbb    eax,0xc870733b
  424347:	pop    ebp
  424348:	jbe    0x4242ca
  42434a:	ja     0x42437a
  42434c:	jp     0x4243ac
  42434e:	add    eax,0x6e37e529
  424353:	inc    ebx
  424354:	inc    esp
  424355:	cmp    dl,BYTE PTR [eax-0xc]
  424358:	test   BYTE PTR [ebx+0x3680a764],bh
  42435e:	ret    0x1e80
  424361:	pushf  
  424362:	push   ecx
  424363:	retf   0xeed2
  424366:	aam    0xce
  424368:	xlat   BYTE PTR ds:[ebx]
  424369:	xor    ebx,DWORD PTR [ebp-0x6]
  42436c:	jle    0x4243c1
  42436e:	cmp    eax,0x780cc779
  424373:	push   cs
  424374:	cwde   
  424375:	lea    ecx,[edx]
  424377:	fwait
  424378:	mov    al,ds:0x9f3851c9
  42437d:	les    ebx,FWORD PTR [bp-0x523b]
  424382:	push   ebx
  424383:	sub    ah,BYTE PTR [esp+ecx*1+0x69]
  424387:	cld    
  424388:	inc    eax
  424389:	lock xlat BYTE PTR ds:[ebx]
  42438b:	repnz repnz dec edx
  42438e:	test   BYTE PTR [ebx+0x21252bd6],cl
  424394:	xor    cl,BYTE PTR [esi]
  424396:	adc    BYTE PTR [ecx-0x543b6276],0xa9
  42439d:	rcr    esi,1
  42439f:	mov    ecx,0x19249298
  4243a4:	(bad)
  4243a8:	cwde   
  4243a9:	add    ebp,DWORD PTR ds:0xb011cc18
  4243af:	jl     0x424385
  4243b1:	jge    0x424420
  4243b3:	jne    0x4243ab
  4243b5:	jle    0x42439e
  4243b7:	sub    esi,eax
  4243b9:	lahf   
  4243ba:	cmc    
  4243bb:	imul   ebp,DWORD PTR [ebx],0xffffff89
  4243be:	mov    cl,bl
  4243c0:	cdq    
  4243c1:	imul   edi,ebp,0x4a876164
  4243c7:	pop    edi
  4243c8:	ins    BYTE PTR es:[edi],dx
  4243c9:	mov    WORD PTR [ecx+0x21],gs
  4243cc:	push   ebp
  4243cd:	jmp    0xbbeaeae1
  4243d2:	fistp  DWORD PTR [edi+0x1b]
  4243d5:	push   ebp
  4243d6:	xor    edx,DWORD PTR ds:0x9b07c112
  4243dc:	enter  0xb049,0x5
  4243e0:	dec    ecx
  4243e1:	pop    ebx
  4243e2:	push   ebp
  4243e3:	mov    ecx,0x48f6abf7
  4243e8:	stc    
  4243e9:	dec    edi
  4243ea:	rcl    DWORD PTR [ebp-0x7d],1
  4243ed:	dec    edx
  4243ee:	adc    DWORD PTR [edx-0x60085a1e],0x6adb082d
  4243f8:	cli    
  4243f9:	retf   
  4243fa:	sbb    ebp,esp
  4243fc:	jnp    0x4243af
  4243fe:	jle    0x42441d
  424400:	cmp    dh,bl
  424402:	outs   dx,BYTE PTR ds:[esi]
  424403:	mov    ebp,0x3800a540
  424408:	adc    edx,DWORD PTR [ebp-0x38b9ba4b]
  42440e:	mov    ebp,0xe47e0dd2
  424413:	dec    esp
  424414:	xchg   esp,eax
  424415:	and    bl,BYTE PTR [edi+ebp*1+0x27]
  424419:	retf   0xde5a
  42441c:	test   DWORD PTR [ebx+0x307096f4],ebx
  424422:	cdq    
  424423:	retf   0xa542
  424426:	fdiv   st,st(6)
  424428:	xchg   ebx,eax
  424429:	int3   
  42442a:	adc    dl,BYTE PTR [edx+0x5f]
  42442d:	mov    cl,0xb5
  42442f:	xor    BYTE PTR [ecx],bh
  424431:	call   0xa71e:0xf4c60b39
  424438:	es dec edx
  42443a:	mov    dh,BYTE PTR [edx+0x66bc2b95]
  424440:	sbb    DWORD PTR [edx],ebx
  424442:	sub    BYTE PTR [ecx-0x30],ah
  424445:	pop    es
  424446:	add    edi,DWORD PTR ds:0x11dc8614
  42444c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42444d:	lahf   
  42444e:	lea    esp,[ecx-0x68]
  424451:	iret   
  424452:	mov    DWORD PTR [eax+ecx*1],0xfcb92386
  424459:	sbb    eax,0xae93c7d9
  42445e:	sub    esi,esp
  424460:	jo     0x4243e5
  424462:	or     eax,0x3791d0bb
  424467:	mov    edx,0x274a1f5
  42446c:	inc    ebp
  42446d:	retf   0x333f
  424470:	fadd   QWORD PTR [ebp+0x28c5ac3d]
  424476:	inc    ebx
  424477:	xlat   BYTE PTR ds:[ebx]
  424478:	push   edx
  424479:	arpl   WORD PTR [edx-0x7f1bfe0a],dx
  42447f:	xor    eax,0xae28da40
  424484:	stc    
  424485:	mov    ds:0x894f5d7a,al
  42448a:	mov    WORD PTR [eax],fs
  42448c:	cmp    al,0x3e
  42448e:	gs iret 
  424490:	jns    0x4244d4
  424492:	sahf   
  424493:	adc    al,0x19
  424495:	push   es
  424496:	leave  
  424497:	xchg   BYTE PTR [edi],cl
  424499:	pop    ecx
  42449a:	cmove  ecx,DWORD PTR [ecx-0x5f]
  42449e:	ret    0xafb1
  4244a1:	mov    ch,0x4d
  4244a3:	cmp    eax,DWORD PTR [edx]
  4244a5:	scas   eax,DWORD PTR es:[edi]
  4244a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4244a7:	xchg   edx,eax
  4244a8:	push   es
  4244a9:	in     eax,dx
  4244aa:	sbb    ecx,DWORD PTR [ebp+0x35]
  4244ad:	jg     0x424508
  4244af:	mov    dh,0x1a
  4244b1:	push   ds
  4244b2:	or     edx,DWORD PTR [eax-0x33]
  4244b5:	dec    esi
  4244b6:	sub    al,BYTE PTR [esi-0x6b0f96eb]
  4244bc:	loope  0x424454
  4244be:	xchg   DWORD PTR [edx-0x3c],esi
  4244c1:	or     al,0xd4
  4244c3:	fwait
  4244c4:	test   DWORD PTR [ebx],esi
  4244c6:	cwde   
  4244c7:	mov    bh,0x0
  4244c9:	push   ebp
  4244ca:	sub    edi,DWORD PTR [ebx]
  4244cc:	sbb    DWORD PTR [eax],ecx
  4244ce:	mov    ds:0x24a00340,al
  4244d3:	mov    esp,0xa43edcfc
  4244d8:	daa    
  4244d9:	jg     0x42453b
  4244db:	ret    0x5f5d
  4244de:	cmp    eax,0xc5fc9cc4
  4244e3:	push   cs
  4244e4:	arpl   WORD PTR [edx-0x363adb37],sp
  4244ea:	push   ebx
  4244eb:	out    dx,al
  4244ec:	enter  0xb045,0x69
  4244f0:	xchg   edi,eax
  4244f1:	or     ch,BYTE PTR [ecx]
  4244f3:	jmp    0x4244ed
  4244f5:	ret    0x77e2
  4244f8:	sbb    DWORD PTR [edx+0x21],edx
  4244fb:	mov    fs,ebx
  4244fd:	or     DWORD PTR [ebp-0x7737e602],esi
  424503:	xlat   BYTE PTR ds:[ebx]
  424504:	mov    dh,0x67
  424506:	pop    es
  424507:	enter  0x25a,0xcd
  42450b:	pop    ecx
  42450c:	sub    BYTE PTR [eax],bh
  42450e:	cwde   
  42450f:	push   cs
  424510:	mov    ah,ah
  424512:	sar    DWORD PTR [ebx-0x62],0x6
  424516:	and    BYTE PTR [esi],dl
  424518:	retf   
  424519:	out    dx,al
  42451a:	jnp    0x424582
  42451c:	push   ebp
  42451d:	jns    0x424548
  42451f:	js     0x424510
  424521:	jns    0x4244eb
  424523:	mov    dl,0x71
  424525:	inc    edi
  424526:	pop    edx
  424527:	xchg   esi,eax
  424528:	shl    DWORD PTR [edi],cl
  42452a:	ds test al,0xe3
  42452d:	pop    edi
  42452e:	test   al,0x86
  424530:	xchg   edi,eax
  424531:	xchg   ebx,eax
  424532:	fs jbe 0x42456e
  424535:	icebp  
  424536:	cmc    
  424537:	rol    BYTE PTR [edi+0x387a5418],1
  42453d:	das    
  42453e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42453f:	cmp    eax,0x521965b8
  424544:	pop    edi
  424545:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424546:	out    0x47,eax
  424548:	push   esp
  424549:	inc    edi
  42454a:	sar    BYTE PTR [esi-0x5b],0x4c
  42454e:	cmp    eax,0xe684a0c8
  424553:	dec    ebp
  424554:	clc    
  424555:	in     al,0xf0
  424557:	mov    ah,0x33
  424559:	int    0x8
  42455b:	(bad)  
  42455c:	sti    
  42455d:	(bad)  
  42455e:	call   0xcd92533c
  424563:	push   cs
  424564:	test   DWORD PTR [esp+ebp*8],ebp
  424567:	fidiv  WORD PTR [esi+0x3a1b186d]
  42456d:	inc    ebx
  42456e:	imul   esp,DWORD PTR ds:0x781cd553,0xec1769a3
  424578:	into   
  424579:	test   dl,0xb5
  42457c:	call   0x7444d87c
  424581:	dec    ecx
  424582:	outs   dx,DWORD PTR ds:[esi]
  424583:	retf   0xd060
  424586:	adc    bh,BYTE PTR [ecx+ecx*2+0x3b4fe9d2]
  42458d:	inc    ecx
  42458e:	(bad)  [edi-0x62be259]
  424594:	enter  0xc6d2,0xe2
  424598:	retf   
  424599:	dec    ebp
  42459a:	sub    al,0x23
  42459c:	ror    ecx,cl
  42459e:	add    eax,0x4905d674
  4245a3:	adc    ebp,DWORD PTR [ebx+0x2d0994c0]
  4245a9:	mov    ch,0x3a
  4245ab:	jns    0x42455c
  4245ad:	sbb    ah,BYTE PTR [eax+0x49213ec9]
  4245b3:	js     0x4245cf
  4245b5:	sti    
  4245b6:	mov    bh,0xe5
  4245b8:	pop    ss
  4245b9:	leave  
  4245ba:	mov    fs,WORD PTR [ebp-0x2e48a057]
  4245c0:	and    al,0xd8
  4245c2:	ret    0xde4e
  4245c5:	xor    cl,BYTE PTR [ebp-0x68]
  4245c8:	add    esp,0x710c9c0f
  4245ce:	xor    al,0x8a
  4245d0:	adc    ebp,DWORD PTR ds:0x3cfc6e8
  4245d6:	push   esp
  4245d7:	sub    al,0x4f
  4245d9:	popf   
  4245da:	add    BYTE PTR [ebx+0x5671b17a],al
  4245e0:	jne    0x4245f0
  4245e2:	mov    al,ds:0x7ee41fdf
  4245e7:	das    
  4245e8:	xor    bl,BYTE PTR [edi+0x2a74873b]
  4245ee:	pop    ecx
  4245ef:	js     0x4245fb
  4245f1:	or     DWORD PTR [ebp-0x79],ecx
  4245f4:	adc    DWORD PTR [ebx],edi
  4245f6:	ret    0xaae3
  4245f9:	inc    ebp
  4245fa:	xor    DWORD PTR [edx],esi
  4245fc:	ret    0x17f
  4245ff:	mov    ebp,0x65b5fa6c
  424604:	pop    edi
  424605:	mov    eax,0x4a60fa7
  42460a:	jecxz  0x424590
  42460c:	push   0xd9c8a22a
  424611:	xchg   edx,eax
  424612:	mov    bh,0x49
  424614:	push   es
  424615:	hlt    
  424616:	mov    cl,0x34
  424618:	cmp    al,0x30
  42461a:	push   ebp
  42461b:	(bad)  
  42461c:	xchg   ebx,eax
  42461d:	xor    DWORD PTR [ecx+0x3b5ce085],edx
  424623:	xchg   ecx,eax
  424624:	sub    esi,DWORD PTR [esi-0x63495d58]
  42462a:	shl    dl,cl
  42462c:	mov    ebx,0x101be9a7
  424631:	(bad)  
  424632:	in     al,0x31
  424634:	clc    
  424635:	scas   al,BYTE PTR es:[edi]
  424636:	and    dl,BYTE PTR [ebx+0x212f0d2c]
  42463c:	fstp   QWORD PTR [ecx+0x78]
  42463f:	inc    edi
  424640:	lahf   
  424641:	pop    ebp
  424642:	cmp    al,0xc
  424644:	rcl    BYTE PTR [ebx],cl
  424646:	xor    dl,dh
  424648:	shl    cl,cl
  42464a:	sbb    dl,bl
  42464c:	jg     0x4245dc
  42464e:	dec    ebx
  42464f:	pop    ebx
  424650:	lock cmp cl,BYTE PTR [edx-0x4d372f6d]
  424657:	sbb    ebp,ebx
  424659:	inc    ebp
  42465a:	or     DWORD PTR [esp+ebp*1-0x40b9dc79],0xffffff82
  424662:	mov    eax,DWORD PTR ds:0x90050c86
  424668:	jle    0x424611
  42466a:	dec    ebp
  42466b:	or     BYTE PTR [eax+0x6874ceff],ah
  424671:	mov    ebp,0x2ff3fae7
  424676:	nop
  424677:	pop    ds
  424678:	xchg   DWORD PTR [ebx+0x21],edi
  42467b:	sub    eax,0x40117628
  424680:	test   BYTE PTR [esi],cl
  424682:	mov    DWORD PTR [ebp+0x3d3da90a],ecx
  424688:	jg     0x424693
  42468a:	repz test BYTE PTR [eax+0x15d64e4d],bh
  424691:	icebp  
  424692:	inc    ebx
  424693:	mov    esp,0x2606f59a
  424698:	or     BYTE PTR [ebp-0x55],cl
  42469b:	test   BYTE PTR [ebx+esi*4-0x3e],ch
  42469f:	sbb    DWORD PTR [ebx-0x46f58d24],ebp
  4246a5:	mov    esi,0x9ca3eb06
  4246aa:	jge    0x4246ba
  4246ac:	xchg   ecx,eax
  4246ad:	sub    ch,BYTE PTR [ebp-0x6dda005c]
  4246b3:	scas   eax,DWORD PTR es:[edi]
  4246b4:	stc    
  4246b5:	(bad)  
  4246b6:	lds    esi,FWORD PTR [eax+0x7a55189d]
  4246bc:	stos   DWORD PTR es:[edi],eax
  4246bd:	test   eax,0x57798784
  4246c2:	test   BYTE PTR [ecx-0x4e13602b],dh
  4246c8:	adc    ch,BYTE PTR [ebx]
  4246ca:	or     ah,BYTE PTR [ecx]
  4246cc:	push   ecx
  4246cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4246ce:	ret    
  4246cf:	sar    BYTE PTR [esi+0x4b],1
  4246d2:	repnz push ss
  4246d4:	int3   
  4246d5:	add    dh,dl
  4246d7:	ret    
  4246d8:	mov    bp,0xde46
  4246dc:	push   ebx
  4246dd:	mov    ds:0x1e6b1665,al
  4246e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4246e3:	mov    esi,0xba2a2f2e
  4246e8:	or     al,0xbb
  4246ea:	lock inc ecx
  4246ec:	jmp    0x99d0:0xbc0c5726
  4246f3:	ds mov dl,0x34
  4246f6:	gs out dx,eax
  4246f8:	mov    ds:0x68eb76bb,eax
  4246fd:	aam    0x1b
  4246ff:	stos   DWORD PTR es:[edi],eax
  424700:	sub    BYTE PTR [edi+0x67bc3275],dl
  424706:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424707:	jns    0x424751
  424709:	jmp    0x4246d2
  42470b:	test   DWORD PTR [ebx-0x458dfdc2],esp
  424711:	mov    cl,0xe1
  424713:	push   es
  424714:	mov    eax,DWORD PTR [eax]
  424716:	and    al,0x5f
  424718:	dec    ebx
  424719:	fld    TBYTE PTR [ecx+0x4a]
  42471c:	push   edi
  42471d:	push   esp
  42471e:	add    DWORD PTR [edx],eax
  424720:	push   0xa0ae205b
  424725:	push   edx
  424726:	push   esi
  424727:	cmp    BYTE PTR [ecx],bh
  424729:	imul   ebx,ebp,0x2e
  42472c:	cmp    eax,0xc92957ef
  424731:	pop    edx
  424732:	sbb    bl,BYTE PTR [edi-0x375035b8]
  424738:	mov    ah,0x37
  42473a:	scas   eax,DWORD PTR es:[edi]
  42473b:	push   0x98e2ee8f
  424740:	cmc    
  424741:	nop
  424742:	ins    BYTE PTR es:[edi],dx
  424743:	inc    esi
  424744:	test   al,0x75
  424746:	jmp    0x81fc:0xebc1f924
  42474d:	pop    ebx
  42474e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42474f:	(bad)  
  424751:	ror    BYTE PTR [edi-0x36],cl
  424754:	cmp    eax,DWORD PTR [edi+0x4e]
  424757:	or     BYTE PTR [edx+esi*1-0x3112044c],ch
  42475e:	adc    edi,ebp
  424760:	sbb    ebx,DWORD PTR [edx+0x13508e68]
  424766:	push   edi
  424767:	sahf   
  424768:	add    al,0x74
  42476a:	inc    ebp
  42476b:	pop    ebx
  42476c:	xlat   BYTE PTR ds:[ebx]
  42476d:	sti    
  42476e:	pop    eax
  42476f:	or     edi,ebx
  424771:	inc    eax
  424772:	xchg   ecx,eax
  424773:	test   al,0x83
  424775:	pop    ebp
  424776:	adc    ebx,DWORD PTR [ebx]
  424778:	push   ss
  424779:	xchg   esi,eax
  42477a:	lods   al,BYTE PTR ds:[esi]
  42477b:	les    ebp,FWORD PTR [esp]
  42477e:	jne    0x424715
  424780:	cdq    
  424781:	xor    DWORD PTR [edi],eax
  424783:	and    DWORD PTR [eax],0x23
  424786:	jmp    0x52b8:0xdac5d6f
  42478d:	jb     0x42478d
  42478f:	sahf   
  424790:	out    dx,eax
  424791:	and    DWORD PTR [edx+ebp*2+0xe541855],ebp
  424798:	icebp  
  424799:	mov    dh,0x77
  42479b:	ds or  dh,dl
  42479e:	jbe    0x424790
  4247a0:	jg     0x424803
  4247a2:	inc    edi
  4247a3:	shl    DWORD PTR [esi-0x7fedea99],cl
  4247a9:	popf   
  4247aa:	add    ch,ch
  4247ac:	xchg   BYTE PTR [ebx+0x6b43dd9],al
  4247b2:	sub    eax,0x8aedd4a8
  4247b7:	inc    esp
  4247b8:	repnz cdq 
  4247ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4247bb:	sub    cl,dl
  4247bd:	bound  ebx,QWORD PTR [ebx-0x4e]
  4247c0:	test   al,0x87
  4247c2:	push   esi
  4247c3:	pop    es
  4247c4:	sbb    DWORD PTR [edx+0x24],eax
  4247c7:	push   edi
  4247c8:	lock xchg esp,eax
  4247ca:	add    BYTE PTR [eax],bl
  4247cc:	(bad)
  4247cf:	sub    esi,esp
  4247d1:	jge    0x42479f
  4247d3:	bnd jo 0x424781
  4247d6:	retf   
  4247d7:	lods   al,BYTE PTR ds:[esi]
  4247d8:	aam    0xf7
  4247da:	lods   eax,DWORD PTR ds:[esi]
  4247db:	pminsw mm2,QWORD PTR [eax]
  4247de:	mov    al,ds:0x79226fe5
  4247e3:	loope  0x424773
  4247e5:	arpl   WORD PTR [ebx-0x5218576d],bx
  4247eb:	pop    ebp
  4247ec:	push   ecx
  4247ed:	mov    DWORD PTR [esi-0x53],ebx
  4247f0:	push   0x9502a442
  4247f5:	ins    BYTE PTR es:[edi],dx
  4247f6:	dec    esp
  4247f7:	pop    ebp
  4247f8:	(bad)  
  4247fa:	mov    ecx,0x234ea8b1
  4247ff:	popf   
  424800:	cmp    esi,DWORD PTR [edx+0x1d]
  424803:	(bad)  
  424804:	jmp    0x424789
  424806:	xchg   esi,eax
  424807:	adc    BYTE PTR [ebp-0x6383b298],0x20
  42480e:	mov    al,ds:0x86a09a1e
  424813:	inc    ebp
  424814:	test   BYTE PTR [edi],al
  424816:	xchg   DWORD PTR [esi+0x955d142],edx
  42481c:	add    edi,esp
  42481e:	arpl   sp,ax
  424820:	test   DWORD PTR [ebx+eiz*1],ebp
  424823:	dec    ebp
  424824:	or     BYTE PTR [ebx],0xa9
  424827:	pop    ebp
  424828:	scas   al,BYTE PTR es:[edi]
  424829:	push   0x37
  42482b:	mov    eax,0xbb09663
  424830:	adc    ebp,eax
  424832:	xor    eax,0x20c24abe
  424837:	in     al,0x7a
  424839:	ret    
  42483a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42483b:	push   esi
  42483c:	and    al,0x63
  42483e:	xor    al,0xe3
  424840:	(bad)  
  424841:	sub    al,BYTE PTR [eax]
  424843:	rcr    BYTE PTR [ebx],1
  424845:	fcomp  st(2)
  424847:	fnstcw WORD PTR [edx+edx*8+0x0]
  42484b:	inc    esi
  42484c:	sar    DWORD PTR [ebp-0x6c82448],1
  424852:	mov    al,0x50
  424854:	in     eax,0x60
  424856:	mov    edx,0xba64c68d
  42485b:	xor    al,0x49
  42485d:	fidivr DWORD PTR [ebp+0x3a]
  424860:	out    0xd9,eax
  424862:	dec    ecx
  424863:	mov    edi,0xd77b557f
  424868:	aam    0x3c
  42486a:	or     eax,0xa27d8a68
  42486f:	mov    esp,0x8bb63c98
  424874:	pop    ds
  424875:	ss jo  0x424853
  424878:	mov    ds:0xdc27cb9,al
  42487d:	int3   
  42487e:	test   al,0xe8
  424880:	(bad)  
  424881:	lahf   
  424882:	add    BYTE PTR [edx],al
  424884:	and    ch,BYTE PTR [esi+0x2bddf45d]
  42488a:	adc    al,0x27
  42488c:	ficomp WORD PTR [ecx+edi*2+0x14424fd5]
  424893:	push   edi
  424894:	pop    ebp
  424895:	pop    es
  424896:	jecxz  0x4248ec
  424898:	aaa    
  424899:	int    0xa2
  42489b:	in     eax,0x25
  42489d:	in     al,0x87
  42489f:	mov    edi,edi
  4248a1:	loope  0x4248d4
  4248a3:	mov    al,0xf6
  4248a5:	push   cs
  4248a6:	mov    al,0xd6
  4248a8:	daa    
  4248a9:	call   0xbf9d59d7
  4248ae:	cmp    dl,bl
  4248b0:	(bad)  
  4248b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248b2:	fcmove st,st(2)
  4248b4:	ins    BYTE PTR es:[edi],dx
  4248b5:	shl    DWORD PTR [ebp+0x6f],1
  4248b8:	fidivr DWORD PTR [eax+ebx*1-0x7d]
  4248bc:	push   edi
  4248bd:	iret   
  4248be:	mov    bl,0x47
  4248c0:	cld    
  4248c1:	dec    ah
  4248c3:	mov    ds:0x692a327,eax
  4248c8:	jne    0x424927
  4248ca:	jno    0x4248b4
  4248cc:	mov    ch,0x1e
  4248ce:	fwait
  4248cf:	test   al,0x19
  4248d1:	push   es
  4248d2:	add    eax,0xe61e728a
  4248d7:	lods   eax,DWORD PTR ds:[esi]
  4248d8:	daa    
  4248d9:	xor    al,0x9f
  4248db:	mov    dh,0xa
  4248dd:	xor    ebp,DWORD PTR [ecx+esi*8-0x42a150b6]
  4248e4:	xchg   edi,eax
  4248e5:	mov    al,0x51
  4248e7:	and    BYTE PTR [ecx],ch
  4248e9:	jo     0x424916
  4248eb:	dec    ebp
  4248ec:	inc    eax
  4248ed:	ret    0xee9c
  4248f0:	neg    BYTE PTR [edi+ebp*8-0x1a396ac2]
  4248f7:	fcom   st(7)
  4248f9:	(bad)  
  4248fa:	xlat   BYTE PTR ds:[ebx]
  4248fb:	(bad)  
  4248fc:	cmc    
  4248fd:	test   eax,0x7401f3fe
  424902:	fucom  st(6)
  424904:	ror    ebp,0x23
  424907:	push   eax
  424908:	mov    DWORD PTR [esi],esi
  42490a:	mov    edi,0x589aa206
  42490f:	sar    ebp,cl
  424911:	mov    bl,0x6d
  424913:	sbb    al,BYTE PTR [ebx]
  424915:	lods   al,BYTE PTR ds:[esi]
  424916:	add    bl,BYTE PTR [ecx-0xb]
  424919:	cmp    ecx,DWORD PTR [esi]
  42491b:	mov    bl,0x9
  42491d:	xchg   esp,eax
  42491e:	leave  
  42491f:	sbb    esi,edx
  424921:	fs push esp
  424923:	fidiv  DWORD PTR [edi]
  424925:	jmp    0x4249a5
  424927:	mov    dl,0xa7
  424929:	mov    ecx,eax
  42492b:	inc    ecx
  42492c:	je     0x42491c
  42492e:	dec    eax
  42492f:	mov    ebp,0x621e9ecd
  424934:	iret   
  424935:	mov    ds:0x47e53336,eax
  42493a:	out    dx,eax
  42493b:	jp     0x424945
  42493d:	jb     0x4249a0
  42493f:	mov    ah,BYTE PTR [edi+0x41fec7d1]
  424945:	jb     0x4248ed
  424947:	mov    esp,0x3d573514
  42494c:	(bad)  
  42494d:	lahf   
  42494e:	dec    esp
  42494f:	(bad)  
  424950:	jmp    0x16e7:0xfe3e4631
  424957:	sub    ebp,0x7c
  42495a:	sbb    dl,BYTE PTR [eax-0x30]
  42495d:	jg     0x424968
  42495f:	call   0xaaf9:0x1a197714
  424966:	inc    edx
  424967:	je     0x4249da
  424969:	fld    DWORD PTR [eax+0x68]
  42496c:	retf   0xdb78
  42496f:	sbb    esi,DWORD PTR [ecx]
  424971:	xchg   esp,eax
  424972:	xchg   ecx,eax
  424973:	cdq    
  424974:	das    
  424975:	inc    ebx
  424976:	inc    esi
  424977:	xor    al,0xfb
  424979:	adc    edx,DWORD PTR [eax+0xf5ee2fb]
  42497f:	jle    0x424948
  424981:	cwde   
  424982:	retf   0xb408
  424985:	in     al,0xaa
  424987:	mov    BYTE PTR [edi-0x720531b5],dl
  42498d:	dec    edi
  42498e:	dec    edx
  42498f:	mov    dl,0xef
  424991:	rcl    DWORD PTR [edx+0x6c8a5cd5],cl
  424997:	add    bl,BYTE PTR [ecx]
  424999:	(bad)  
  42499a:	in     al,dx
  42499b:	mov    dh,0x2d
  42499d:	nop
  42499e:	(bad)  
  42499f:	enter  0xb2ab,0xe5
  4249a3:	xor    al,BYTE PTR [esi]
  4249a5:	xlat   BYTE PTR ds:[ebx]
  4249a6:	retf   0x3d58
  4249a9:	jg     0x424984
  4249ab:	xchg   ecx,eax
  4249ac:	ds bound ebx,QWORD PTR ss:[ebx]
  4249b0:	loopne 0x4249e3
  4249b2:	dec    esp
  4249b3:	(bad)  
  4249b4:	and    ebx,ebp
  4249b6:	and    al,0xea
  4249b8:	int3   
  4249b9:	mov    al,BYTE PTR [eax]
  4249bb:	aad    0x7f
  4249bd:	ror    ecx,1
  4249bf:	aaa    
  4249c0:	ja     0x42494f
  4249c2:	inc    esp
  4249c3:	test   dl,0xc1
  4249c6:	lds    ebx,FWORD PTR [edx]
  4249c8:	xchg   ebp,eax
  4249c9:	xchg   esp,eax
  4249ca:	push   esp
  4249cb:	test   eax,0x23850982
  4249d0:	in     eax,0xe6
  4249d2:	and    eax,0xaee29f0a
  4249d7:	aas    
  4249d8:	outs   dx,BYTE PTR ds:[esi]
  4249d9:	and    ebx,DWORD PTR [edx+0x7d1e618e]
  4249df:	or     eax,ebp
  4249e1:	mov    BYTE PTR ds:[ecx+0x139d5ba6],dl
  4249e8:	sub    eax,0x40111752
  4249ed:	push   0x7081e9f5
  4249f2:	jecxz  0x424a67
  4249f4:	iret   
  4249f5:	div    BYTE PTR [ecx+0x6164065a]
  4249fb:	mov    ebp,0x39961af0
  424a00:	jns    0x4249ab
  424a02:	and    eax,0xc4050add
  424a07:	inc    edx
  424a08:	jnp    0x424a4e
  424a0a:	mov    edi,0xf5df4d95
  424a0f:	(bad)  
  424a10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424a11:	jne    0x424a31
  424a13:	rcl    BYTE PTR [ebx+0x55],1
  424a16:	adc    ecx,DWORD PTR [ecx-0x4bf9c7e5]
  424a1c:	mov    ecx,DWORD PTR [eax]
  424a1e:	and    eax,0xdecff365
  424a23:	push   esi
  424a24:	out    dx,eax
  424a25:	(bad)  
  424a27:	cs inc edi
  424a29:	mov    bh,0xbd
  424a2b:	data16 cli 
  424a2d:	ins    BYTE PTR es:[edi],dx
  424a2e:	(bad)  
  424a2f:	xchg   ebp,eax
  424a30:	mov    cl,0x7d
  424a32:	outs   dx,DWORD PTR ds:[esi]
  424a33:	cmp    BYTE PTR [esi],cl
  424a35:	(bad)
  424a38:	add    DWORD PTR [ebx+0x52aa5aee],0x793443f2
  424a42:	mov    ebx,DWORD PTR [ebp+0x2309a56a]
  424a48:	shl    ch,cl
  424a4a:	adc    cl,BYTE PTR [ecx]
  424a4c:	push   edi
  424a4e:	sbb    bl,ah
  424a50:	inc    eax
  424a51:	jg     0x424aa6
  424a53:	mov    eax,ds:0x29fd4197
  424a58:	pop    es
  424a59:	imul   edi,DWORD PTR [ecx+edi*4-0x42e63ac7],0xfec67907
  424a64:	jp     0x424a32
  424a66:	pop    esi
  424a67:	imul   esp,esp,0xfffffff8
  424a6a:	cmp    eax,0x85297a72
  424a6f:	mov    al,0xc4
  424a71:	pop    es
  424a72:	(bad)  
  424a73:	cmc    
  424a74:	mov    fs,esp
  424a76:	jg     0x424a49
  424a78:	add    eax,0xdbb4595e
  424a7d:	inc    eax
  424a7e:	mov    esi,DWORD PTR [eax+eiz*4]
  424a81:	pop    es
  424a82:	adc    DWORD PTR [ebp+0x6e],ebp
  424a85:	push   DWORD PTR [esi]
  424a87:	test   al,0xff
  424a89:	(bad)
  424a8c:	mov    ecx,ebx
  424a8e:	push   edx
  424a8f:	hlt    
  424a90:	rcl    DWORD PTR [edx+0x3ee6b2f7],cl
  424a96:	int    0x69
  424a98:	inc    ecx
  424a99:	pop    edx
  424a9a:	popa   
  424a9b:	sub    BYTE PTR [ebp+0x7],0xd
  424a9f:	xchg   edx,eax
  424aa0:	stc    
  424aa1:	adc    eax,0xc3b11930
  424aa6:	repz sbb eax,0xf34c3de8
  424aac:	xchg   ecx,eax
  424aad:	inc    ebp
  424aae:	xor    DWORD PTR [eax],edx
  424ab0:	inc    esp
  424ab1:	jle    0x424b0b
  424ab3:	push   ss
  424ab4:	fiadd  WORD PTR [ebx]
  424ab6:	call   0x6a7dd8a8
  424abb:	dec    ebx
  424abc:	pop    esi
  424abe:	inc    eax
  424abf:	and    eax,0x745ca6ff
  424ac4:	test   eax,0x1b9ee7d7
  424ac9:	scas   al,BYTE PTR es:[edi]
  424aca:	call   0xf259:0x593fb0dc
  424ad1:	les    ecx,FWORD PTR ds:0x3a7fa5f2
  424ad7:	dec    ebp
  424ad8:	sub    ebp,ebx
  424ada:	sar    ch,0xfc
  424add:	gs ret 0x1ce6
  424ae1:	iret   
  424ae2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ae3:	out    0x87,al
  424ae5:	pop    ebp
  424ae6:	lods   al,BYTE PTR ds:[esi]
  424ae7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ae8:	out    dx,eax
  424ae9:	(bad)  
  424aea:	push   esi
  424aeb:	mov    eax,0x3e200802
  424af0:	scas   al,BYTE PTR es:[edi]
  424af1:	outs   dx,DWORD PTR ds:[esi]
  424af2:	or     BYTE PTR [ebp-0x14],0xbd
  424af6:	stos   DWORD PTR es:[edi],eax
  424af7:	fnstcw WORD PTR ds:0x18e44116
  424afd:	inc    ebx
  424afe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424aff:	call   0x4c3b:0x4628d081
  424b06:	xor    eax,0x29bab9da
  424b0b:	pop    eax
  424b0c:	out    0x33,eax
  424b0e:	pause  
  424b10:	push   eax
  424b11:	das    
  424b12:	add    DWORD PTR [ebx-0x7feb0f63],ecx
  424b18:	mov    ds:0xcae87ab2,eax
  424b1d:	js     0x424b17
  424b1f:	or     DWORD PTR [ebx-0x56],eax
  424b22:	or     al,0xfb
  424b24:	dec    BYTE PTR [eax]
  424b26:	push   ebp
  424b27:	sub    eax,0xb94c8a52
  424b2c:	nop
  424b2d:	xor    ebp,DWORD PTR [ebp-0x682ceaee]
  424b33:	call   0xbf90:0xb019f9b9
  424b3a:	aaa    
  424b3b:	fild   WORD PTR [ecx+ebx*1]
  424b3e:	fldenv [eax+ebx*2+0x6b]
  424b42:	sahf   
  424b43:	int3   
  424b44:	hlt    
  424b45:	pop    esi
  424b46:	stos   DWORD PTR es:[edi],eax
  424b47:	gs std 
  424b49:	hlt    
  424b4a:	ret    0xad9e
  424b4d:	(bad)  
  424b4e:	xchg   esp,eax
  424b4f:	jg     0x424b44
  424b51:	cmp    DWORD PTR [ebx+ebp*1+0x1e],ebx
  424b55:	adc    DWORD PTR [esi+0xf],edi
  424b58:	popf   
  424b59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424b5a:	es jne 0x424b5a
  424b5d:	mov    ebp,ss
  424b5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424b60:	loop   0x424ba6
  424b62:	mov    eax,ds:0x253f0dba
  424b67:	cmp    esi,ebp
  424b69:	je     0x424b1d
  424b6b:	and    DWORD PTR [ecx],ebp
  424b6d:	sbb    bh,BYTE PTR [edx+0x7]
  424b70:	je     0x424b3a
  424b72:	mov    ebx,0x4bbedda2
  424b77:	cdq    
  424b78:	js     0x424bc9
  424b7a:	push   eax
  424b7b:	and    DWORD PTR [ebx-0x20],esi
  424b7e:	adc    DWORD PTR [ecx-0x39],ebx
  424b81:	mov    al,0x0
  424b83:	cmp    BYTE PTR [ecx+edi*1-0x4617d87b],cl
  424b8a:	das    
  424b8b:	out    dx,ax
  424b8d:	inc    esp
  424b8e:	sar    DWORD PTR [eax+0x6d6cbb1b],cl
  424b94:	dec    ecx
  424b95:	js     0x424b53
  424b97:	or     BYTE PTR [ebx-0x41883813],dl
  424b9d:	lea    ebx,[eax-0x157bd747]
  424ba3:	scas   al,BYTE PTR es:[edi]
  424ba4:	mov    dl,0xbc
  424ba6:	pop    eax
  424ba7:	dec    esi
  424ba8:	mov    dl,BYTE PTR [esi]
  424baa:	adc    al,0x36
  424bac:	sbb    cl,BYTE PTR [esi]
  424bae:	and    DWORD PTR [ecx+0x1e8e816d],0xfffffffa
  424bb5:	dec    edx
  424bb6:	xor    eax,0x5dc0870a
  424bbb:	inc    edi
  424bbc:	and    esi,DWORD PTR [ebp+0x1d]
  424bbf:	ret    
  424bc0:	(bad)  
  424bc2:	sti    
  424bc3:	push   es
  424bc4:	xchg   edx,eax
  424bc5:	xor    eax,0xd35ba1da
  424bca:	mov    esp,0xe5491fe7
  424bcf:	es mov cl,0x51
  424bd2:	mov    eax,ds:0xb3c97ab8
  424bd7:	lock adc bh,0x21
  424bdb:	hlt    
  424bdc:	jecxz  0x424c32
  424bde:	out    dx,al
  424bdf:	xchg   esp,eax
  424be0:	push   ebp
  424be1:	wrmsr  
  424be3:	push   0x53
  424be5:	and    al,0xa
  424be7:	mov    ds:0xbd9dcced,eax
  424bec:	xchg   edi,eax
  424bed:	mov    eax,0xf6ae496a
  424bf2:	jb     0x424bb8
  424bf4:	mov    bl,0x28
  424bf6:	add    BYTE PTR [edx+0x37a2e538],bh
  424bfc:	push   ss
  424bfd:	sub    al,BYTE PTR [ebp+0x24c4d899]
  424c03:	lds    ebp,FWORD PTR [eax]
  424c05:	sbb    DWORD PTR [eax],esp
  424c07:	arpl   WORD PTR [eax-0x7f66fad1],di
  424c0d:	cmp    al,0x32
  424c0f:	push   es
  424c10:	icebp  
  424c11:	and    bh,BYTE PTR [eax+0x5c]
  424c14:	or     ecx,DWORD PTR [ecx]
  424c16:	jle    0x424c7b
  424c18:	or     DWORD PTR [ebx+ebx*4],ebp
  424c1b:	fwait
  424c1c:	les    eax,FWORD PTR [eax+0x6383f5e8]
  424c22:	pop    ebp
  424c23:	(bad)  
  424c24:	or     BYTE PTR [ebp-0x67eaae20],0x47
  424c2b:	mov    edx,0x6de96212
  424c30:	fstp   TBYTE PTR [ebp+0x7e984482]
  424c36:	ds inc ebp
  424c38:	push   ebp
  424c39:	scas   al,BYTE PTR es:[edi]
  424c3a:	ss sbb eax,0x73928ef8
  424c40:	mov    ecx,0x73877481
  424c45:	jmp    DWORD PTR [ebp+0x63]
  424c48:	sti    
  424c49:	xchg   ebp,eax
  424c4a:	push   edx
  424c4b:	adc    bh,BYTE PTR [ebx-0x28]
  424c4e:	fsub   st(7),st
  424c50:	xchg   edx,eax
  424c51:	(bad)  
  424c53:	cdq    
  424c54:	fdiv   st(1),st
  424c56:	mov    dl,0x87
  424c58:	(bad)  
  424c59:	dec    edx
  424c5a:	xor    eax,0x5a9a04da
  424c5f:	mov    ds:0x77366fcb,eax
  424c64:	jg     0x424c48
  424c66:	inc    edx
  424c67:	adc    ebx,0xffffffd2
  424c6a:	lahf   
  424c6b:	sbb    edx,DWORD PTR [esi-0x2330afc0]
  424c71:	xor    dl,al
  424c73:	repz and al,0x74
  424c76:	mov    edi,0xe46ec060
  424c7b:	cld    
  424c7c:	xchg   ebp,eax
  424c7d:	daa    
  424c7e:	xchg   BYTE PTR [eax+esi*8+0x27],dl
  424c82:	and    ebp,0x2d
  424c85:	jl     0x424c94
  424c87:	loope  0x424cea
  424c89:	aam    0x75
  424c8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c8c:	std    
  424c8d:	xchg   BYTE PTR [edx],ch
  424c8f:	adc    cl,bh
  424c91:	adc    eax,0xfd558e9
  424c96:	int3   
  424c97:	test   BYTE PTR [ecx-0x34],bh
  424c9a:	leave  
  424c9b:	pop    esi
  424c9c:	gs faddp st(2),st
  424c9f:	mov    cl,0x6a
  424ca1:	lods   al,BYTE PTR ds:[esi]
  424ca2:	ins    DWORD PTR es:[edi],dx
  424ca3:	(bad)  
  424ca4:	in     eax,dx
  424ca5:	adc    bl,bl
  424ca7:	stc    
  424ca8:	pop    edx
  424ca9:	cli    
  424caa:	pop    es
  424cab:	int3   
  424cac:	dec    ebx
  424cad:	lahf   
  424cae:	xchg   esi,eax
  424caf:	cdq    
  424cb0:	mov    ?,WORD PTR [edx+0x1fd841fc]
  424cb6:	jnp    0x424d1a
  424cb8:	arpl   WORD PTR [ebp-0x7],si
  424cbb:	int    0x76
  424cbd:	lahf   
  424cbe:	sbb    al,0xa6
  424cc0:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424cc2:	add    ebp,DWORD PTR [ebx]
  424cc4:	(bad)
  424cc8:	mov    al,bh
  424cca:	(bad)  
  424ccc:	test   eax,0x4cc80c12
  424cd1:	js     0x424cd6
  424cd3:	sub    eax,0xeceb050f
  424cd8:	test   esp,edx
  424cda:	mov    edi,0xb4968ff7
  424cdf:	cmp    edx,DWORD PTR [ebp-0x6c]
  424ce2:	mov    al,0x7c
  424ce4:	in     eax,dx
  424ce5:	shl    dh,cl
  424ce7:	stos   DWORD PTR es:[edi],eax
  424ce8:	clc    
  424ce9:	inc    edi
  424cea:	push   0xdc5087a4
  424cef:	call   0xa8b5:0x35663b8
  424cf6:	mov    edi,DWORD PTR [ebp-0x23bfe2e6]
  424cfc:	mov    bl,0x8d
  424cfe:	inc    edx
  424cff:	stos   BYTE PTR es:[edi],al
  424d00:	retf   0xb0ab
  424d03:	pop    esp
  424d04:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  424d06:	call   0xe7da:0xbf292c6a
  424d0d:	mov    cl,0xa3
  424d0f:	mov    bl,0xa9
  424d11:	icebp  
  424d12:	and    DWORD PTR [ebx-0x34],ecx
  424d15:	enter  0x52b3,0x2a
  424d19:	fcomp  DWORD PTR [ecx-0x66]
  424d1c:	aaa    
  424d1d:	shl    DWORD PTR cs:[esi-0x71],0xf
  424d22:	and    eax,0x38612f7d
  424d27:	retf   0x76c7
  424d2a:	fistp  WORD PTR [edi+0x27ef6241]
  424d30:	xor    eax,0x149af40f
  424d35:	xchg   edx,eax
  424d36:	repz pusha 
  424d38:	push   0xfffffff3
  424d3a:	loop   0x424cf2
  424d3c:	dec    esi
  424d3d:	mov    eax,ds:0xd1689607
  424d42:	mov    ss,WORD PTR [edi-0x53639bcd]
  424d48:	xchg   esp,eax
  424d49:	and    eax,eax
  424d4b:	scas   eax,DWORD PTR es:[edi]
  424d4c:	fwait
  424d4d:	jmp    0x424cfe
  424d4f:	cmp    BYTE PTR [ebp+eax*1-0x410eaa98],ah
  424d56:	adc    al,0xc
  424d58:	retf   0x49fc
  424d5b:	hlt    
  424d5c:	and    DWORD PTR [edi-0x39566c46],esi
  424d62:	inc    ebp
  424d63:	mov    eax,ds:0xfd868807
  424d68:	ds ret 0x9c39
  424d6c:	mov    esi,0x98b7370
  424d71:	lea    eax,[eax]
  424d73:	cdq    
  424d74:	jmp    0x7a85abe1
  424d79:	div    DWORD PTR [ebx+0xcd1b0dc]
  424d7f:	retf   
  424d80:	adc    ebx,esp
  424d82:	mov    edx,DWORD PTR [edx+edi*8-0x24]
  424d86:	pop    ds
  424d87:	dec    ebp
  424d88:	in     al,0xd0
  424d8a:	out    dx,al
  424d8b:	rol    BYTE PTR [eax],0x7
  424d8e:	enter  0xd1b4,0xac
  424d92:	cmp    eax,0x20ddf1e1
  424d97:	and    ecx,DWORD PTR [esi]
  424d99:	(bad)  
  424d9a:	in     eax,0x2a
  424d9c:	stos   BYTE PTR es:[edi],al
  424d9d:	aas    
  424d9e:	mov    dh,0x95
  424da0:	mov    BYTE PTR [esi+0x4fabedd2],ah
  424da6:	repz sub eax,0x8c6d6e1
  424dac:	std    
  424dad:	sbb    bh,cl
  424daf:	xchg   edi,eax
  424db0:	and    ebx,DWORD PTR [ebx]
  424db2:	aaa    
  424db3:	icebp  
  424db4:	lahf   
  424db5:	adc    eax,0x7b224bb4
  424dba:	dec    eax
  424dbb:	push   0x55
  424dbd:	xor    eax,0x11df8f01
  424dc2:	sar    DWORD PTR [eax-0x25],1
  424dc5:	cmp    BYTE PTR [eax],al
  424dc7:	add    al,0x68
  424dc9:	mov    es,WORD PTR [ecx]
  424dcb:	or     eax,0x2880856e
  424dd0:	idiv   dh
  424dd2:	and    al,0x6
  424dd4:	aaa    
  424dd5:	inc    esi
  424dd6:	mov    ah,0x26
  424dd8:	xor    DWORD PTR [esi],0x1813d753
  424dde:	mov    edx,0xfab621a4
  424de3:	and    BYTE PTR [esi+eax*1+0xb0721e2],cl
  424dea:	inc    esi
  424deb:	xchg   ecx,eax
  424dec:	xchg   ebx,eax
  424ded:	fild   WORD PTR [eax-0x7f]
  424df0:	cmp    ah,BYTE PTR [eax+edx*1+0x734c79e9]
  424df7:	icebp  
  424df8:	fistp  WORD PTR [ecx-0x1130e60d]
  424dfe:	lds    ecx,FWORD PTR [ecx-0x3c]
  424e01:	in     al,dx
  424e02:	xor    eax,0x12c61286
  424e07:	imul   ebx,DWORD PTR ds:0xfc2d10ad,0x2371ebbc
  424e11:	push   ebp
  424e12:	sub    ebx,ecx
  424e14:	shl    BYTE PTR [edi],1
  424e16:	jle    0x424e2d
  424e18:	mov    ds:0x387f3aba,eax
  424e1d:	and    al,0xa3
  424e1f:	mov    ch,0xa8
  424e21:	pop    es
  424e22:	pop    edx
  424e23:	leave  
  424e24:	pop    ebx
  424e25:	rol    DWORD PTR [edi],1
  424e27:	xchg   ebx,eax
  424e28:	pop    edx
  424e29:	and    eax,0xd2544d4e
  424e2e:	jle    0x424df2
  424e30:	push   edi
  424e31:	lock inc eax
  424e33:	adc    BYTE PTR [edi-0x570555e],dl
  424e39:	xchg   BYTE PTR [ebx+0x2c68e996],ah
  424e3f:	sub    ebp,DWORD PTR [eax+0x3ce130fd]
  424e45:	lea    edi,[edi]
  424e47:	rol    ah,cl
  424e49:	std    
  424e4a:	leave  
  424e4b:	adc    bl,BYTE PTR [eax+0x3dbe1033]
  424e51:	test   eax,0x48a31b9b
  424e56:	push   ecx
  424e57:	xchg   ebx,eax
  424e58:	xlat   BYTE PTR ds:[ebx]
  424e59:	fcom   DWORD PTR [edx]
  424e5b:	pop    ss
  424e5c:	leave  
  424e5d:	pop    ds
  424e5e:	call   0x9a55167
  424e63:	enter  0x3f77,0x29
  424e67:	adc    edi,DWORD PTR [eax-0x73]
  424e6a:	js     0x424eaa
  424e6c:	pusha  
  424e6d:	push   0xfffffff6
  424e6f:	cmp    al,0x33
  424e71:	mov    ds:0x6a71a712,eax
  424e76:	mov    cs,esp
  424e78:	je     0x424e8d
  424e7a:	xor    bl,cl
  424e7c:	sbb    BYTE PTR [ecx+0x47],0x8c
  424e80:	mov    ds,WORD PTR gs:[esi-0x6f]
  424e84:	daa    
  424e85:	in     al,0xf1
  424e87:	or     DWORD PTR [eax+edx*8-0x76],ebx
  424e8b:	or     bl,dh
  424e8d:	scas   eax,DWORD PTR es:[edi]
  424e8e:	mov    al,0xc3
  424e90:	fsubr  DWORD PTR [edi+eiz*4]
  424e93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424e94:	sub    dh,bl
  424e96:	(bad)  
  424e97:	add    BYTE PTR [edx],cl
  424e99:	sub    DWORD PTR [esi+eiz*8+0x29f00973],esp
  424ea0:	fistp  WORD PTR [esi]
  424ea2:	rol    BYTE PTR [ebp-0x61fde9cf],0x68
  424ea9:	popf   
  424eaa:	xlat   BYTE PTR ds:[ebx]
  424eab:	add    esp,DWORD PTR [eax]
  424ead:	(bad)  
  424eae:	mov    ds:0x188fdd6a,eax
  424eb3:	sbb    al,0x67
  424eb5:	inc    esi
  424eb6:	clc    
  424eb7:	mov    ch,0x14
  424eb9:	cmp    al,0x2e
  424ebb:	in     al,dx
  424ebc:	sbb    BYTE PTR [ecx-0x62e7f795],dh
  424ec2:	test   eax,0x2b2387c5
  424ec7:	sub    BYTE PTR [eax],bl
  424ec9:	and    eax,0xab80d421
  424ece:	outs   dx,BYTE PTR ds:[esi]
  424ecf:	sbb    al,0xdf
  424ed1:	adc    eax,0x73d9c428
  424ed6:	pop    esi
  424ed7:	cdq    
  424ed8:	xor    BYTE PTR [edi+edx*1+0x0],al
  424edc:	xor    eax,0xcfeebc4d
  424ee1:	xchg   DWORD PTR [edx-0x44],esi
  424ee4:	ds cmp esi,ebp
  424ee7:	mov    esi,0x488846bf
  424eec:	out    dx,al
  424eed:	mov    fs,WORD PTR [edi+0x70]
  424ef0:	loopne 0x424ef6
  424ef2:	sbb    ch,bl
  424ef4:	xor    esp,esi
  424ef6:	inc    ebx
  424ef7:	jl     0x424f00
  424ef9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424efa:	cld    
  424efb:	outs   dx,DWORD PTR ds:[esi]
  424efc:	jl     0x424edb
  424efe:	jecxz  0x424ec9
  424f00:	pop    esi
  424f01:	jnp    0x424ef6
  424f03:	cs push 0x77f5c6be
  424f09:	gs mov edi,0x33137e3b
  424f0f:	pop    es
  424f10:	ins    BYTE PTR es:[edi],dx
  424f11:	xchg   ebx,eax
  424f12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f13:	cdq    
  424f14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f15:	shl    bh,0x37
  424f18:	mov    edi,0x37240c19
  424f1d:	push   0x74
  424f1f:	push   ebx
  424f20:	inc    esp
  424f21:	repz xor bh,BYTE PTR [ebp-0x22daa1a9]
  424f28:	sbb    eax,0x11345fcc
  424f2d:	xchg   ecx,eax
  424f2e:	and    DWORD PTR [edi],0x687604d7
  424f34:	xchg   DWORD PTR [ebx+0x3b6685b1],esi
  424f3a:	das    
  424f3b:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f3d:	jg     0x424ed7
  424f3f:	xor    al,0xe7
  424f41:	inc    ebp
  424f42:	daa    
  424f43:	fidivr WORD PTR [edx-0x3d]
  424f46:	adc    edx,eax
  424f48:	xchg   esp,eax
  424f49:	je     0x424f29
  424f4b:	pop    esp
  424f4c:	jp     0x424f47
  424f4e:	mov    esi,0x90aceecc
  424f53:	push   ds
  424f54:	aam    0xd0
  424f56:	pushf  
  424f57:	(bad)  
  424f59:	mov    bl,0x83
  424f5b:	push   cs
  424f5c:	pop    ebp
  424f5d:	push   ebp
  424f5e:	int3   
  424f5f:	adc    BYTE PTR [ebp+0x6f],cl
  424f62:	sub    eax,0x674ff226
  424f67:	or     eax,0x65be241d
  424f6c:	in     eax,0xda
  424f6e:	sti    
  424f6f:	pop    edx
  424f70:	test   al,0x50
  424f72:	out    0x8f,al
  424f74:	push   ebx
  424f75:	push   0x5
  424f77:	cmp    ah,BYTE PTR [esi]
  424f79:	sahf   
  424f7a:	ja     0x424f47
  424f7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424f7d:	in     al,0xe4
  424f7f:	mov    al,0xeb
  424f81:	cs cld 
  424f83:	mov    esp,ebp
  424f85:	test   BYTE PTR ds:0x4317a03c,ch
  424f8b:	cld    
  424f8c:	fmul   DWORD PTR [eax]
  424f8e:	fsubr  QWORD PTR [ecx-0x3c6c8d79]
  424f94:	ins    DWORD PTR es:[edi],dx
  424f95:	pusha  
  424f96:	add    DWORD PTR [ebx-0xc726768],edi
  424f9c:	mov    ebp,0x8b8907cf
  424fa1:	int3   
  424fa2:	xlat   BYTE PTR ds:[ebx]
  424fa3:	sbb    al,0x5
  424fa5:	pop    esp
  424fa6:	popf   
  424fa7:	(bad)  
  424fa8:	in     al,dx
  424fa9:	inc    ecx
  424faa:	mov    DWORD PTR [edi-0x4],ebp
  424fad:	xchg   DWORD PTR es:0xa3ef95e9,esi
  424fb4:	outs   dx,DWORD PTR ds:[esi]
  424fb5:	cld    
  424fb6:	sbb    DWORD PTR [edi],0x70f85ba9
  424fbc:	clc    
  424fbd:	out    0xff,eax
  424fbf:	mov    cl,0x7c
  424fc1:	imul   BYTE PTR [eax+0x1d]
  424fc4:	add    eax,0x456f21b6
  424fc9:	fidiv  DWORD PTR [eax]
  424fcb:	mov    ebp,0xbe90d3ca
  424fd0:	daa    
  424fd1:	sbb    ah,BYTE PTR ds:0x1d13bbea
  424fd7:	jno    0x424ff6
  424fd9:	pop    ds
  424fda:	mov    DWORD PTR [esi],ebp
  424fdc:	mov    bh,0xc5
  424fde:	fdiv   QWORD PTR [eax+0x52]
  424fe1:	sub    eax,0x3572088a
  424fe6:	cmp    eax,0x6d2855c9
  424feb:	sti    
  424fec:	mov    bh,0xdb
  424fee:	push   esi
  424fef:	mov    cl,0x20
  424ff1:	add    ch,al
  424ff3:	mov    ch,0xe
  424ff5:	es popa 
  424ff7:	sbb    al,BYTE PTR [ebx-0x65]
  424ffa:	mov    esp,0xe04d47a
  424fff:	arpl   WORD PTR [edi],dx
  425001:	inc    edi
  425002:	mov    ecx,0x581f0f42
  425007:	inc    eax
  425008:	jmp    0x424fd4
  42500a:	mov    ebx,0x848bb08d
  42500f:	adc    DWORD PTR [esi-0x6ab9bf35],eax
  425015:	cmp    cl,BYTE PTR [eax+edx*4-0x6a6109ca]
  42501c:	or     cl,dl
  42501e:	test   eax,0xc98ee0fc
  425023:	dec    ebx
  425024:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425025:	data16 fiadd WORD PTR [ecx+0x8]
  425029:	daa    
  42502a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42502b:	add    ebx,DWORD PTR [esi]
  42502d:	pop    esp
  42502e:	xchg   edi,eax
  42502f:	and    eax,0xbe298e19
  425034:	mov    edx,0x8465bea3
  425039:	jecxz  0x4250a9
  42503b:	pusha  
  42503c:	aad    0x50
  42503e:	lods   eax,DWORD PTR ds:[esi]
  42503f:	je     0x424ff2
  425041:	and    al,0x2c
  425043:	xchg   ebp,eax
  425044:	scas   eax,DWORD PTR es:[edi]
  425045:	mov    al,0x5a
  425047:	cmp    BYTE PTR [eax-0x1d],ch
  42504a:	inc    esp
  42504b:	imul   esi,esp,0xffffffc4
  42504e:	jp     0x425049
  425050:	lods   al,BYTE PTR ds:[esi]
  425051:	add    BYTE PTR [edi-0x5c20f3c8],ah
  425057:	push   esi
  425058:	add    bh,al
  42505a:	mov    al,0x8c
  42505c:	jp     0x425055
  42505e:	out    dx,eax
  42505f:	cli    
  425060:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425061:	iret   
  425062:	je     0x4250b9
  425064:	stos   BYTE PTR es:[edi],al
  425065:	xchg   esi,eax
  425066:	jge    0x424fed
  425068:	cmp    eax,0xbf52aee
  42506d:	sub    dl,BYTE PTR [ecx-0x49]
  425070:	mov    ch,0x4f
  425072:	es sahf 
  425074:	fs dec esp
  425076:	std    
  425077:	sbb    esi,DWORD PTR [ecx-0xfa9ac1]
  42507d:	shr    ebx,cl
  42507f:	imul   edx,ebp,0x41e17793
  425085:	jae    0x425101
  425087:	sbb    al,al
  425089:	clc    
  42508a:	mov    bl,0x85
  42508c:	addr16 dec esi
  42508e:	scas   al,BYTE PTR es:[edi]
  42508f:	arpl   WORD PTR [edi-0x77ddf30c],cx
  425095:	mov    esi,0x413c2dd9
  42509a:	jmp    0x4250f2
  42509c:	hlt    
  42509d:	add    ebx,DWORD PTR ds:0x5ad03fe5
  4250a3:	mov    DWORD PTR [ebp-0x447160e6],esi
  4250a9:	pop    DWORD PTR [esi]
  4250ab:	es mov dh,0x68
  4250ae:	clc    
  4250af:	adc    BYTE PTR [edx-0x1ab2f5ad],bh
  4250b5:	int    0xb2
  4250b7:	test   al,0x65
  4250b9:	add    al,al
  4250bb:	je     0x425137
  4250bd:	pop    esp
  4250be:	cmp    eax,0xc95d8ed1
  4250c3:	jns    0x42512c
  4250c5:	lea    esp,[ebx]
  4250c7:	rcr    BYTE PTR [esi+edx*2-0x64b5512e],0x38
  4250cf:	adc    ah,ch
  4250d1:	sub    al,0x81
  4250d3:	mov    al,0x93
  4250d5:	add    eax,ebx
  4250d7:	les    eax,FWORD PTR [ebx-0x4c]
  4250da:	fisubr DWORD PTR [edi-0x1e]
  4250dd:	xchg   edi,eax
  4250de:	icebp  
  4250df:	add    eax,0xfde453a0
  4250e4:	mov    edx,0x700f7074
  4250e9:	cli    
  4250ea:	pop    esi
  4250eb:	push   ss
  4250ec:	inc    ebp
  4250ed:	inc    esp
  4250ee:	rol    BYTE PTR [ecx+eiz*8+0x69269c60],0xe0
  4250f6:	jne    0x425091
  4250f8:	add    DWORD PTR [eax+edi*1],edi
  4250fb:	pop    ecx
  4250fc:	(bad)  
  4250fd:	aad    0x3f
  4250ff:	fmulp  st(1),st
  425101:	push   edi
  425102:	adc    DWORD PTR [edx+0x69],ecx
  425105:	test   eax,0xf966e44f
  42510a:	neg    DWORD PTR [ebx+0x10]
  42510d:	dec    esi
  42510e:	(bad)  
  42510f:	pop    eax
  425110:	retw   
  425112:	div    BYTE PTR [ebp+0x4c]
  425115:	sbb    al,BYTE PTR [ecx+ecx*8]
  425118:	lock hlt 
  42511a:	je     0x4250c2
  42511c:	stos   DWORD PTR es:[edi],eax
  42511d:	pop    edx
  42511e:	ret    0x2ee0
  425121:	jge    0x425138
  425123:	sub    edi,DWORD PTR [edx+0x7dde5c8b]
  425129:	add    cl,BYTE PTR [edi+0xf]
  42512c:	inc    esp
  42512d:	fcomi  st,st(3)
  42512f:	cmp    DWORD PTR [edx+0x67af07ce],edx
  425135:	push   cs
  425136:	jns    0x4251a1
  425138:	lea    esi,[eax+0x19fe99c9]
  42513e:	out    dx,eax
  42513f:	std    
  425140:	mov    edi,DWORD PTR [ebx]
  425142:	ror    DWORD PTR [edi],0x5
  425145:	rcl    DWORD PTR [edx-0x6],cl
  425148:	(bad)  
  425149:	cmp    BYTE PTR [esp+ecx*8+0x5365ebbd],0xcf
  425151:	iret   
  425152:	jmp    0x425188
  425154:	ins    DWORD PTR es:[edi],dx
  425155:	cmp    eax,0xfdf67078
  42515a:	lock test bh,dl
  42515d:	je     0x42510c
  42515f:	lds    edx,FWORD PTR [ecx]
  425161:	xchg   ecx,eax
  425162:	jge    0x425181
  425164:	into   
  425165:	sbb    eax,0x4958d7a6
  42516a:	dec    ecx
  42516b:	or     edx,DWORD PTR [eax]
  42516d:	out    dx,eax
  42516e:	cmp    dl,ah
  425170:	fwait
  425171:	ror    esi,cl
  425173:	popa   
  425174:	adc    DWORD PTR [edx-0x7d2a9546],0x3
  42517b:	leave  
  42517c:	xlat   BYTE PTR ds:[ebx]
  42517d:	xchg   edi,eax
  42517e:	pop    esp
  42517f:	clc    
  425180:	mov    ebx,0xa13c2ac4
  425185:	cld    
  425186:	sbb    BYTE PTR [edx+0x3f],al
  425189:	cmp    dl,BYTE PTR [ebp+0x12]
  42518c:	retf   0xb66d
  42518f:	test   ch,ch
  425191:	retf   
  425192:	inc    eax
  425193:	xchg   BYTE PTR [esi+ebp*8],al
  425196:	xchg   esp,eax
  425197:	and    al,0x2b
  425199:	adc    eax,0xb8aae1f6
  42519e:	xor    eax,0x27be1d65
  4251a3:	addr16 out dx,eax
  4251a5:	outs   dx,DWORD PTR ds:[esi]
  4251a6:	inc    edx
  4251a7:	fsub   st,st(5)
  4251a9:	loopne 0x425222
  4251ab:	fsub   DWORD PTR [ebx-0x58fb6c3e]
  4251b1:	lock jge 0x425215
  4251b4:	mov    ebx,0x47a8eeef
  4251b9:	push   ebx
  4251ba:	fdivr  DWORD PTR [esi-0x42a71084]
  4251c0:	xor    bh,dl
  4251c2:	test   BYTE PTR [eax*4-0x375b847a],cl
  4251c9:	xchg   ecx,eax
  4251ca:	push   eax
  4251cb:	in     eax,dx
  4251cc:	repz jge 0x4251b5
  4251cf:	mov    esp,0x44dad5fd
  4251d4:	xchg   edx,eax
  4251d5:	or     al,0x7e
  4251d7:	out    dx,al
  4251d8:	and    DWORD PTR [ecx+0x437c1416],0x68
  4251df:	mov    cl,BYTE PTR [ecx+0x2f8c46b5]
  4251e5:	cmp    bl,BYTE PTR [ebp+0x17]
  4251e8:	dec    esi
  4251e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4251ea:	inc    esi
  4251eb:	fisttp DWORD PTR [esi]
  4251ed:	adc    esi,DWORD PTR [edi-0x1e]
  4251f0:	inc    esi
  4251f1:	cwde   
  4251f2:	cmp    BYTE PTR [ebp+0x625e2f4b],bh
  4251f8:	inc    eax
  4251f9:	icebp  
  4251fa:	lea    edx,[ebx]
  4251fc:	(bad)  
  4251fd:	cmp    edx,edi
  4251ff:	xchg   edi,eax
  425200:	and    eax,DWORD PTR [ecx+0x1d]
  425203:	and    al,BYTE PTR [edi+0x4e]
  425206:	cs pop es
  425208:	sub    bh,BYTE PTR [ecx-0x58e5d2ba]
  42520e:	mov    cs,esi
  425210:	ror    BYTE PTR [esi-0x1f],cl
  425213:	sahf   
  425214:	xor    esi,DWORD PTR [edi+eiz*2]
  425217:	gs xchg ecx,eax
  425219:	lods   al,BYTE PTR ds:[esi]
  42521a:	scas   eax,DWORD PTR es:[edi]
  42521b:	stos   DWORD PTR es:[edi],eax
  42521c:	ud1    esp,DWORD PTR [eax]
  42521f:	lea    ebx,[ebp-0x53]
  425222:	xor    al,0x43
  425224:	test   DWORD PTR [ecx-0x58643c81],0x3b38579b
  42522e:	shl    DWORD PTR [esi+0x3ff95167],1
  425234:	repz xchg esp,eax
  425236:	mov    eax,0xbb3f0417
  42523b:	mov    bl,0x10
  42523d:	sar    BYTE PTR [ebp-0x1f8acaae],cl
  425243:	outs   dx,BYTE PTR ds:[esi]
  425244:	inc    esp
  425245:	iret   
  425246:	shl    DWORD PTR [esi+0xba25c8c],1
  42524c:	push   ds
  42524d:	call   FWORD PTR [edx+edx*2-0x338ea816]
  425254:	or     BYTE PTR [ecx],bh
  425256:	adc    al,0x74
  425258:	adc    eax,0x33c19dcd
  42525d:	xchg   dh,dh
  42525f:	mov    al,ds:0x5eb84a22
  425264:	mov    ebx,0xe756724
  425269:	inc    ebp
  42526a:	xor    eax,0xdbf72a26
  42526f:	and    DWORD PTR [ebx-0x35],ecx
  425272:	xor    eax,0x2c4f37bd
  425277:	sbb    eax,0xdeeac7d3
  42527c:	xchg   BYTE PTR [edi],ah
  42527e:	mov    ebx,0xe9b38144
  425283:	ror    DWORD PTR [edx+esi*4+0x24],cl
  425287:	rol    bh,1
  425289:	dec    ebx
  42528a:	jecxz  0x425274
  42528c:	retf   
  42528d:	sub    eax,0xd0bbe130
  425292:	xor    eax,0x78ea6f4c
  425297:	jp     0x425255
  425299:	call   0xa0c9:0xa7a8dac
  4252a0:	inc    edx
  4252a1:	cmp    eax,0x11d69d9c
  4252a6:	xchg   BYTE PTR [edx-0x65],ah
  4252a9:	jo     0x425318
  4252ab:	mov    eax,0xb0cead30
  4252b0:	gs loope 0x42527b
  4252b3:	mov    ecx,0xdd012649
  4252b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4252b9:	dec    eax
  4252ba:	xchg   ebp,eax
  4252bb:	or     ah,BYTE PTR [esi]
  4252bd:	adc    BYTE PTR [ecx+eax*4],bh
  4252c0:	jg     0x425334
  4252c2:	scas   al,BYTE PTR es:[edi]
  4252c3:	mov    ds:0x841e954f,eax
  4252c8:	je     0x4252ec
  4252ca:	rcl    DWORD PTR [ebx-0x47a1ef44],1
  4252d0:	mov    esp,0xf69fbd2f
  4252d5:	mov    edx,0xb16004a5
  4252da:	(bad)  
  4252db:	mov    ds:0x49b3273,al
  4252e0:	mov    al,0xa1
  4252e2:	sub    esi,DWORD PTR [ebx]
  4252e4:	mov    WORD PTR [eax-0x27f393d9],fs
  4252ea:	cmp    al,0xdf
  4252ec:	test   BYTE PTR [edi],al
  4252ee:	push   es
  4252ef:	sub    bh,cl
  4252f1:	or     BYTE PTR [ebx+edx*2+0x30a64c2],bl
  4252f8:	fwait
  4252f9:	push   edx
  4252fa:	mov    BYTE PTR [edx],al
  4252fc:	mov    cl,0x60
  4252fe:	js     0x4252bb
  425300:	add    al,bl
  425302:	inc    edx
  425303:	mov    al,ds:0xaaf40b11
  425308:	mov    eax,ds:0x6e378ea2
  42530d:	fdivr  st,st(7)
  42530f:	cmp    BYTE PTR [esi+0x63],0xd8
  425313:	sub    al,0x24
  425315:	(bad)  
  425318:	sbb    DWORD PTR [edx],ebp
  42531a:	leave  
  42531b:	repnz mov BYTE PTR [esi+0x61],bl
  42531f:	rol    BYTE PTR [edx],0x49
  425322:	cmp    al,0xee
  425324:	jle    0x42531a
  425326:	push   ecx
  425327:	stos   DWORD PTR es:[edi],eax
  425328:	dec    edx
  425329:	cli    
  42532a:	mov    ecx,DWORD PTR [ebx-0x9a1e8b6]
  425330:	out    0x2f,al
  425332:	hlt    
  425333:	dec    edx
  425334:	xor    ch,0x44
  425337:	dec    eax
  425338:	cmc    
  425339:	pop    ebp
  42533a:	push   ebx
  42533b:	clc    
  42533c:	cmp    al,0xd4
  42533e:	cmp    edx,0x2710280a
  425344:	add    eax,0xe5b330f7
  425349:	mov    ecx,edx
  42534b:	mov    bh,BYTE PTR [eax-0x2b9107af]
  425351:	jecxz  0x425356
  425353:	lds    edi,FWORD PTR [edx+esi*8+0x3c]
  425357:	xor    eax,edi
  425359:	dec    ecx
  42535a:	fstp   DWORD PTR [edi-0x3dd58fed]
  425360:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425361:	fcmovu st,st(5)
  425363:	add    bl,BYTE PTR [ebx-0x2b]
  425366:	nop
  425367:	push   0xc
  425369:	nop
  42536a:	in     al,0x60
  42536c:	xchg   BYTE PTR [ebx+0x4f],ah
  42536f:	xchg   esp,eax
  425370:	or     al,0x48
  425372:	mov    ch,0x48
  425374:	jmp    0x76b850e8
  425379:	xor    edx,DWORD PTR [ebx]
  42537b:	lods   al,BYTE PTR ds:[esi]
  42537c:	ret    
  42537d:	adc    dh,BYTE PTR [esi-0x13071e52]
  425383:	mov    dh,ah
  425385:	dec    esi
  425386:	jne    0x4253ae
  425388:	pop    ebx
  425389:	mov    ebx,0xc5eab4c4
  42538e:	sbb    al,0x5c
  425390:	ror    ebx,0xe4
  425393:	xor    DWORD PTR [eax],esp
  425395:	outs   dx,BYTE PTR ds:[esi]
  425396:	aaa    
  425397:	xor    ah,BYTE PTR [ebx-0x31d963cb]
  42539d:	test   ah,dh
  42539f:	xchg   ecx,eax
  4253a0:	jbe    0x4253a8
  4253a2:	ror    DWORD PTR [edx+0x170e5a13],cl
  4253a8:	sbb    al,0x6b
  4253aa:	je     0x4253b7
  4253ac:	in     al,0x9a
  4253ae:	fld    QWORD PTR [ecx]
  4253b0:	sub    esp,DWORD PTR gs:[ebp-0x7f]
  4253b4:	and    BYTE PTR [edx-0x5d043c60],ch
  4253ba:	jp     0x4253ea
  4253bc:	adc    bl,bh
  4253be:	adc    BYTE PTR ds:0x3c83086f,dh
  4253c4:	jnp    0x425444
  4253c6:	and    bl,cl
  4253c8:	fs stos BYTE PTR es:[edi],al
  4253ca:	out    0x47,al
  4253cc:	outs   dx,DWORD PTR ds:[esi]
  4253cd:	and    BYTE PTR [eax],ah
  4253cf:	fimul  DWORD PTR [edx]
  4253d1:	cli    
  4253d2:	pop    ss
  4253d3:	or     BYTE PTR [edx+eax*1+0x35007df7],bl
  4253da:	dec    ebp
  4253db:	mov    ebp,DWORD PTR [esi]
  4253dd:	mov    ch,0x2
  4253df:	or     BYTE PTR [edx+0xc],bh
  4253e2:	cmp    eax,0x7b971f81
  4253e7:	cli    
  4253e8:	mov    al,ds:0x1fd23e39
  4253ed:	cmp    al,0x4f
  4253ef:	pop    edi
  4253f0:	mov    esp,0x77d59050
  4253f5:	jl     0x4253b3
  4253f7:	(bad)  
  4253f8:	pop    esp
  4253f9:	iret   
  4253fa:	outs   dx,DWORD PTR ds:[esi]
  4253fb:	ror    BYTE PTR ds:0x1638a041,0xf9
  425402:	pop    eax
  425403:	mov    edi,DWORD PTR [edi+esi*4-0x1a]
  425407:	or     BYTE PTR ds:0x2d007f64,ch
  42540d:	or     DWORD PTR [eax+0x64],ebx
  425410:	(bad)  
  425411:	xor    eax,0xd9402806
  425416:	icebp  
  425417:	popf   
  425418:	mov    ebp,0x47424b1f
  42541d:	cli    
  42541e:	push   ecx
  42541f:	jl     0x4253eb
  425421:	jle    0x42547f
  425423:	fwait
  425424:	adc    dl,ch
  425426:	cwde   
  425427:	shr    BYTE PTR [eax-0x36],0xa3
  42542b:	pop    ebx
  42542c:	ret    0xbab
  42542f:	push   es
  425430:	fldcw  WORD PTR [ecx]
  425432:	ja     0x425408
  425434:	fstp   DWORD PTR [ebx-0x1127f9ed]
  42543a:	scas   al,BYTE PTR es:[edi]
  42543b:	or     eax,0xd6a92e93
  425440:	jg     0x4253ff
  425442:	sbb    eax,0xbdc4ae57
  425447:	mov    edi,DWORD PTR [edx]
  425449:	mov    ch,0x1c
  42544b:	std    
  42544c:	jno    0x7cb4fc3c
  425452:	aas    
  425453:	pop    DWORD PTR [ecx]
  425455:	rcr    DWORD PTR [ecx],cl
  425457:	xchg   edx,eax
  425458:	aas    
  425459:	pop    ds
  42545a:	mov    ah,0xd5
  42545c:	shl    BYTE PTR fs:[edi+0x6d],cl
  425460:	xchg   ebx,eax
  425461:	jl     0x42545f
  425463:	stos   BYTE PTR es:[edi],al
  425464:	inc    edx
  425465:	jge    0x42544e
  425467:	mov    ch,0x3d
  425469:	adc    BYTE PTR ds:0xa417cd1e,bl
  42546f:	ja     0x42543a
  425471:	mov    ds:0x214d235b,eax
  425476:	xchg   ebx,eax
  425477:	mov    ds:0x40dca98b,eax
  42547c:	imul   ebp,DWORD PTR [ecx],0x54
  42547f:	ffree  st(3)
  425481:	retf   
  425482:	pop    edi
  425483:	add    DWORD PTR [esi-0x21],ecx
  425486:	jo     0x4254b5
  425488:	push   ss
  425489:	lods   eax,DWORD PTR ds:[esi]
  42548a:	mov    esi,0x3ce4e3b4
  42548f:	fldenv [eax-0x51432558]
  425495:	cli    
  425496:	gs call 0x714d:0x1d21b7a9
  42549e:	jecxz  0x4254d3
  4254a0:	outs   dx,DWORD PTR ds:[esi]
  4254a1:	in     eax,dx
  4254a2:	ret    0x7780
  4254a5:	out    dx,al
  4254a6:	push   ebp
  4254a7:	fcmovbe st,st(2)
  4254a9:	pop    ebx
  4254aa:	loop   0x425465
  4254ac:	retf   
  4254ad:	push   DWORD PTR [edx-0x40f3dd41]
  4254b3:	mov    dl,0x59
  4254b5:	mov    ebx,DWORD PTR [ecx-0x75]
  4254b8:	jmp    0x8e7f3a67
  4254bd:	inc    ecx
  4254be:	push   0x45
  4254c0:	pusha  
  4254c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4254c2:	addr16 cli 
  4254c4:	jecxz  0x4254e4
  4254c6:	test   esp,0xe227d157
  4254cc:	cli    
  4254cd:	pusha  
  4254ce:	out    0xda,al
  4254d0:	pushf  
  4254d1:	cmp    eax,0xb9034493
  4254d6:	inc    esi
  4254d7:	ins    DWORD PTR es:[edi],dx
  4254d8:	sti    
  4254d9:	and    DWORD PTR [ebx-0xcfdb4a1],esp
  4254df:	mov    edx,0x9d6700d6
  4254e4:	fidiv  WORD PTR [edi]
  4254e6:	and    DWORD PTR [eax-0x52],0x48
  4254ea:	mov    DWORD PTR [esi-0x4611bc78],edx
  4254f0:	mov    eax,0x64f02539
  4254f5:	cld    
  4254f6:	addr16 push ss
  4254f8:	dec    ecx
  4254f9:	lahf   
  4254fa:	cmp    DWORD PTR [ecx+0x8],edi
  4254fd:	and    DWORD PTR [ebp-0x56456e79],ecx
  425503:	inc    edi
  425504:	and    BYTE PTR [edx+0x67985758],ch
  42550a:	nop
  42550b:	mov    ch,0xdf
  42550d:	inc    ebx
  42550e:	dec    esi
  42550f:	mov    ecx,0xf404fabe
  425514:	add    DWORD PTR [edx],ecx
  425516:	in     al,dx
  425517:	ret    0x647f
  42551a:	jnp    0x42549d
  42551c:	dec    ecx
  42551d:	and    al,0xc
  42551f:	mov    bl,0x17
  425521:	jno    0x4254e7
  425523:	jg     0x42555c
  425525:	shl    BYTE PTR [ebp+edi*2+0x3f],0x87
  42552a:	call   0xdc834994
  42552f:	jae    0x4254e3
  425531:	xchg   esp,eax
  425532:	mov    ds:0xb6cae0fb,al
  425537:	ret    0x1d4b
  42553a:	jne    0x4255a0
  42553c:	retf   
  42553d:	push   ebp
  42553e:	adc    DWORD PTR [edx+0x4e],ecx
  425541:	mov    dl,0x5a
  425543:	(bad)  
  425544:	push   0x69f4e2c8
  425549:	ins    BYTE PTR es:[edi],dx
  42554a:	push   0xc752f72c
  42554f:	push   esi
  425550:	mul    DWORD PTR [ebx]
  425552:	ja     0x4255a7
  425554:	in     al,dx
  425555:	push   0x2f
  425557:	enter  0x6b1d,0x25
  42555b:	xchg   ebp,eax
  42555c:	fwait
  42555d:	ins    BYTE PTR es:[edi],dx
  42555e:	movlps QWORD PTR [ecx-0x12b6c98f],xmm7
  425565:	dec    DWORD PTR [ecx+0x50d6c9d9]
  42556b:	shr    BYTE PTR [eax],0x21
  42556e:	push   ebx
  42556f:	sahf   
  425570:	and    DWORD PTR [eax],esp
  425572:	ins    BYTE PTR es:[edi],dx
  425573:	mov    ch,0xda
  425575:	jp     0x42550d
  425577:	mov    dl,0x3e
  425579:	pop    es
  42557a:	ja     0x4255d1
  42557c:	lahf   
  42557d:	pop    ebp
  42557e:	lods   eax,DWORD PTR ds:[esi]
  42557f:	xor    BYTE PTR [ebp-0x2ec71d84],0x25
  425586:	pop    esi
  425587:	ins    DWORD PTR es:[edi],dx
  425588:	add    eax,0xe5684a0e
  42558d:	ss hlt 
  42558f:	shl    DWORD PTR [edx],cl
  425591:	cmp    BYTE PTR [ebp+0x59f12970],cl
  425597:	mov    esi,0x52fb0247
  42559c:	sub    BYTE PTR [ecx],al
  42559e:	fbstp  TBYTE PTR [edx-0x4b3cae7a]
  4255a4:	add    eax,0x4c4da5fc
  4255a9:	mov    edi,0x634ae44f
  4255ae:	scas   al,BYTE PTR es:[edi]
  4255af:	mov    eax,0x98a576ae
  4255b4:	push   esi
  4255b5:	mov    esp,0x6beca6ea
  4255ba:	jge    0x4255ce
  4255bc:	stc    
  4255bd:	and    al,0xcc
  4255bf:	inc    edx
  4255c0:	adc    eax,0xb5cb6cd4
  4255c5:	ds mov al,0xee
  4255c8:	popa   
  4255c9:	xchg   esi,eax
  4255ca:	dec    edx
  4255cb:	xchg   DWORD PTR [ecx-0x10c924bb],edi
  4255d1:	cmp    al,0x1b
  4255d3:	add    cl,BYTE PTR [ebp+0x72]
  4255d6:	es shl dh,1
  4255d9:	cld    
  4255da:	scas   al,BYTE PTR es:[edi]
  4255db:	call   0x5a6b4749
  4255e0:	test   DWORD PTR [edx+0x283a3699],ebx
  4255e6:	sbb    al,BYTE PTR [ebp-0x32]
  4255e9:	jne    0x4255a9
  4255eb:	xor    eax,DWORD PTR [esi]
  4255ed:	cmp    bl,BYTE PTR [edi]
  4255ef:	jo     0x425653
  4255f1:	mov    ch,0x85
  4255f3:	cmp    esi,DWORD PTR [eax+0x70bb7419]
  4255f9:	pop    ebx
  4255fa:	cmp    DWORD PTR [eax+0x0],esi
  4255fd:	sbb    ebp,DWORD PTR [eax]
  4255ff:	cwde   
  425600:	or     esp,edi
  425602:	mov    ch,0x1d
  425604:	cmp    dh,bh
  425606:	jge    0x425609
  425608:	jl     0x42566e
  42560a:	inc    ebp
  42560b:	pop    ss
  42560c:	push   esi
  42560d:	push   edi
  42560e:	ret    
  42560f:	outs   dx,BYTE PTR ds:[esi]
  425610:	retf   0xcfe2
  425613:	or     ch,BYTE PTR [esi]
  425615:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425616:	cmp    eax,0x151a431a
  42561b:	fcmovnbe st,st(4)
  42561d:	es xchg ebp,eax
  42561f:	data16 loope 0x4255d8
  425622:	cmp    esp,DWORD PTR [eax-0x5468a594]
  425628:	iret   
  425629:	add    esi,edi
  42562b:	jge    0x425610
  42562d:	jb     0x425676
  42562f:	push   ss
  425630:	add    bl,BYTE PTR [ecx-0x59f757fa]
  425636:	pop    ss
  425637:	aad    0x84
  425639:	out    dx,al
  42563a:	popa   
  42563b:	inc    eax
  42563c:	xor    eax,0xfb9ba7af
  425641:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425642:	fsubr  st,st(3)
  425644:	sbb    BYTE PTR [eax-0x43],bl
  425647:	sub    al,0x56
  425649:	fld    QWORD PTR [edi+eax*8+0x40624bb4]
  425650:	inc    edx
  425651:	jl     0x42561e
  425653:	add    edi,DWORD PTR [ebx+0x12]
  425656:	add    bl,bh
  425658:	daa    
  425659:	mov    ah,0x62
  42565b:	jnp    0x425655
  42565d:	scas   eax,DWORD PTR es:[edi]
  42565e:	stos   BYTE PTR es:[edi],al
  42565f:	jp     0x42566f
  425661:	add    eax,0xe5ce86e
  425666:	dec    ecx
  425667:	(bad)  
  425669:	adc    bl,BYTE PTR [esi+0x64]
  42566c:	sub    ecx,0xfffffffe
  42566f:	mov    ebx,0x6d86ddd
  425674:	cmp    BYTE PTR [esi],0x10
  425677:	cmp    eax,0x84453264
  42567c:	aaa    
  42567d:	or     BYTE PTR [ebp+ecx*4-0x14],0xe1
  425682:	and    DWORD PTR [eax-0x6a],eax
  425685:	dec    ebx
  425686:	jecxz  0x42563f
  425688:	int3   
  425689:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42568a:	jb     0x4256a2
  42568c:	pop    esi
  42568d:	mov    DWORD PTR [ebx],edx
  42568f:	aas    
  425690:	cmp    eax,0x563bdfb0
  425695:	xchg   ecx,eax
  425696:	inc    ebx
  425697:	inc    ebp
  425698:	out    dx,eax
  425699:	dec    ecx
  42569a:	cdq    
  42569b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42569c:	sbb    DWORD PTR [ebx+ebx*8-0x52104995],0xffffff87
  4256a4:	sbb    DWORD PTR ds:0xeb2db1c,0xfffffff8
  4256ab:	add    BYTE PTR [ecx],bl
  4256ad:	or     BYTE PTR [esp+ebp*1+0x26],ah
  4256b1:	mov    ah,0xd5
  4256b3:	mov    al,0x1b
  4256b5:	pshufw mm7,QWORD PTR [ebp-0x7],0xe1
  4256ba:	(bad)  
  4256bb:	xor    ah,bl
  4256bd:	pop    edi
  4256be:	push   edx
  4256bf:	cmp    ah,al
  4256c1:	mov    ebp,0xd90def50
  4256c6:	in     al,0xf1
  4256c8:	mul    bh
  4256ca:	fmul   QWORD PTR [edx-0x35]
  4256cd:	mov    ds:0xf8469e5a,eax
  4256d2:	pop    esi
  4256d3:	jbe    0x425686
  4256d5:	dec    ecx
  4256d6:	jge    0x4256b5
  4256d8:	pushf  
  4256d9:	fwait
  4256da:	not    DWORD PTR [edx+0x6]
  4256dd:	je     0x4256e1
  4256df:	test   DWORD PTR [eax-0x6054232b],0x6491fca5
  4256e9:	mov    ebx,DWORD PTR [edx-0x72]
  4256ec:	outs   dx,DWORD PTR ds:[esi]
  4256ed:	retf   
  4256ee:	or     ebp,DWORD PTR [ecx-0x411aabfc]
  4256f4:	xlat   BYTE PTR ds:[ebx]
  4256f5:	jmp    0xc460:0xabb97b11
  4256fc:	shr    DWORD PTR [esi+0x57],1
  4256ff:	cmp    DWORD PTR [ecx-0x6b],esi
  425702:	push   edi
  425703:	sub    cl,BYTE PTR [ebx-0x4e]
  425706:	loope  0x42568a
  425708:	xchg   ecx,eax
  425709:	test   eax,0x687b00fe
  42570e:	loop   0x425760
  425710:	sub    eax,0xf2e28a39
  425715:	into   
  425716:	sbb    bh,ah
  425718:	sub    edx,DWORD PTR [ebx-0x6a]
  42571b:	mov    al,0x62
  42571d:	mov    eax,0x57656bf5
  425722:	mov    ebx,0x3971a3d7
  425727:	fdiv   DWORD PTR [edx-0x76621d64]
  42572d:	int    0xbd
  42572f:	(bad)  
  425731:	or     cl,BYTE PTR [ebp-0x4f01249]
  425737:	push   ds
  425738:	jle    0x425798
  42573a:	mov    cl,0xfe
  42573c:	sub    dh,BYTE PTR [ebx+0x2c772326]
  425742:	adc    ch,ah
  425744:	cwde   
  425745:	jle    0x42579d
  425747:	test   BYTE PTR [ecx-0x62],bl
  42574a:	aas    
  42574b:	bound  esp,QWORD PTR [edx]
  42574d:	or     BYTE PTR [ebx+0x8],0x14
  425751:	(bad)  
  425752:	(bad)  
  425753:	xchg   ecx,eax
  425754:	fcom   DWORD PTR [ecx]
  425756:	imul   ebx,ebp,0x8236ce29
  42575c:	leave  
  42575d:	pop    ds
  42575e:	xchg   ebp,eax
  42575f:	(bad)
  425762:	add    eax,0xf23c4759
  425767:	push   ebx
  425768:	adc    eax,0xbc33a2f7
  42576d:	push   ds
  42576e:	inc    edi
  42576f:	lock dec edx
  425771:	xlat   BYTE PTR ds:[ebx]
  425772:	jmp    0x42570f
  425774:	inc    esi
  425775:	add    DWORD PTR [ebp+0x23],ebp
  425778:	push   0xf1ddc002
  42577d:	repnz int 0x18
  425780:	jg     0x42571e
  425782:	loopne 0x42575d
  425784:	sub    edx,DWORD PTR [edx+0x30f9282c]
  42578a:	jp     0x4257d6
  42578c:	push   esi
  42578d:	and    DWORD PTR [ebx-0x6f],0xffffff92
  425791:	inc    eax
  425792:	clc    
  425793:	mov    ebp,0xd0c98c64
  425798:	adc    BYTE PTR [edx],0x47
  42579b:	aaa    
  42579c:	inc    ebx
  42579d:	and    eax,0x742032fb
  4257a2:	xchg   DWORD PTR [ecx+eiz*8],eax
  4257a5:	jle    0x42578c
  4257a7:	jmp    0xe0c52de0
  4257ac:	in     eax,0x36
  4257ae:	cmp    al,BYTE PTR [ebx-0x50]
  4257b1:	pop    esp
  4257b2:	fucomip st,st(4)
  4257b4:	stos   BYTE PTR es:[edi],al
  4257b5:	pop    ecx
  4257b6:	iret   
  4257b7:	(bad)  
  4257b8:	scas   eax,DWORD PTR es:[edi]
  4257b9:	stos   DWORD PTR es:[edi],eax
  4257ba:	ins    DWORD PTR es:[edi],dx
  4257bb:	cmp    edi,eax
  4257bd:	je     0x425812
  4257c3:	mov    DWORD PTR [ebp-0xc],esi
  4257c6:	mov    eax,DWORD PTR [ebp-0xc]
  4257c9:	mov    esi,DWORD PTR [ebp+0xc]
  4257cc:	xor    eax,ecx
  4257ce:	lea    eax,[eax*8+0x1939820]
  4257d5:	mov    eax,DWORD PTR [esi+eax*1]
  4257d8:	mov    DWORD PTR [ebp+0xc],eax
  4257db:	mov    eax,DWORD PTR [ebp-0x4]
  4257de:	mov    esi,DWORD PTR [ebp-0x8]
  4257e1:	xor    eax,ecx
  4257e3:	xor    esi,ecx
  4257e5:	add    esi,edx
  4257e7:	add    eax,edx
  4257e9:	imul   eax,esi
  4257ec:	mov    esi,DWORD PTR [ebp+0xc]
  4257ef:	cmp    esi,eax
  4257f1:	je     0x425812
  4257f7:	mov    eax,DWORD PTR [ebp-0x4]
  4257fa:	xor    eax,ecx
  4257fc:	mov    ecx,DWORD PTR [ebp+0xc]
  4257ff:	add    eax,edx
  425801:	imul   eax,ecx
  425804:	add    eax,DWORD PTR [ebp+0x8]
  425807:	mov    DWORD PTR [ebp+0xc],eax
  42580a:	mov    eax,DWORD PTR [ebp+0xc]
  42580d:	jmp    0x425823
  425812:	mov    eax,DWORD PTR [ebp-0x4]
  425815:	mov    esi,DWORD PTR [ebp-0x8]
  425818:	xor    esi,ecx
  42581a:	xor    eax,ecx
  42581c:	add    esi,edx
  42581e:	add    eax,edx
  425820:	imul   eax,esi
  425823:	pop    edi
  425824:	pop    esi
  425825:	leave  
  425826:	ret    0x8
	...
  425831:	add    BYTE PTR [eax],al
  425833:	add    ah,cl
  425835:	cmp    al,0xf3
  425837:	dec    ebp
  425838:	add    BYTE PTR [eax],al
  42583a:	add    BYTE PTR [eax],al
  42583c:	add    al,BYTE PTR [eax]
  42583e:	add    BYTE PTR [eax],al
  425840:	add    BYTE PTR ss:[eax],al
  425843:	add    BYTE PTR [eax+0x58],dl
  425846:	add    al,BYTE PTR [eax]
  425848:	push   eax
  425849:	dec    esp
  42584a:	add    al,BYTE PTR [eax]
  42584c:	add    BYTE PTR [eax],al
  42584e:	add    BYTE PTR [eax],al
  425850:	push   edx
  425851:	push   ebx
  425852:	inc    esp
  425853:	push   ebx
  425854:	adc    BYTE PTR [edi-0x3f],ah
  425857:	jbe    0x425820
  425859:	(bad)  
  42585a:	mov    ah,0x4c
  42585c:	mov    ch,0x4c
  42585e:	push   ss
  42585f:	adc    eax,0xb75d5ee5
  425864:	add    DWORD PTR [eax],eax
  425866:	add    BYTE PTR [eax],al
  425868:	inc    edi
  425869:	cmp    bl,BYTE PTR [ebx+edx*2+0x79]
  42586d:	jae    0x42588f
  42586f:	inc    esp
  425870:	imul   esi,DWORD PTR [edx+0x20],0x5c6e6957
  425877:	inc    esi
  425878:	imul   ebp,DWORD PTR [ebp+eiz*2+0x44],0x49617461
  425880:	outs   dx,BYTE PTR ds:[esi]
  425881:	jae    0x4258ec
  425883:	fs add BYTE PTR gs:[ebx-0x137e13ab],cl
  42588b:	or     BYTE PTR [ecx],al
  42588d:	add    BYTE PTR [eax],al
  42588f:	push   ebx
  425890:	mov    eax,ebx
  425892:	xchg   ecx,eax
  425893:	mov    eax,DWORD PTR [ebp+0x8]
  425896:	cmp    eax,0xf89c85a5
  42589b:	jne    0x425d5c
  4258a1:	mov    eax,DWORD PTR [ebp+0xc]
  4258a4:	cmp    eax,0xf89c85a2
  4258a9:	jne    0x425d5c
  4258af:	mov    eax,DWORD PTR [ebp+0x24]
  4258b2:	mov    DWORD PTR [ebp-0x4],eax
  4258b5:	mov    eax,DWORD PTR [ebp-0x4]
  4258b8:	mov    eax,DWORD PTR [eax+0x1d8]
  4258be:	mov    eax,DWORD PTR [eax]
  4258c0:	mov    eax,DWORD PTR [eax]
  4258c2:	mov    DWORD PTR [ebp-0x8],eax
  4258c5:	mov    BYTE PTR [ebp-0x18],0x1a
  4258c9:	mov    BYTE PTR [ebp-0x17],0x1f
  4258cd:	mov    BYTE PTR [ebp-0x16],0x18
  4258d1:	mov    BYTE PTR [ebp-0x15],0x4e
  4258d5:	mov    BYTE PTR [ebp-0x14],0x51
  4258d9:	mov    BYTE PTR [ebp-0x13],0x83
  4258dd:	mov    BYTE PTR [ebp-0x20],0xc
  4258e1:	mov    BYTE PTR [ebp-0x1f],0xe
  4258e5:	mov    BYTE PTR [ebp-0x1e],0x1c
  4258e9:	mov    BYTE PTR [ebp-0x1d],0x11
  4258ed:	mov    BYTE PTR [ebp-0x1c],0x4e
  4258f1:	mov    BYTE PTR [ebp-0x1b],0x51
  4258f5:	mov    BYTE PTR [ebp-0x1a],0x83
  4258f9:	mov    BYTE PTR [ebp-0x28],0xe
  4258fd:	mov    BYTE PTR [ebp-0x27],0x1b
  425901:	mov    BYTE PTR [ebp-0x26],0x17
  425905:	mov    BYTE PTR [ebp-0x25],0xa
  425909:	mov    BYTE PTR [ebp-0x24],0x20
  42590d:	mov    BYTE PTR [ebp-0x23],0x13
  425911:	mov    BYTE PTR [ebp-0x22],0x18
  425915:	mov    BYTE PTR [ebp-0x21],0x83
  425919:	xor    ecx,ecx
  42591b:	lea    eax,[ebp+ecx*1-0x18]
  42591f:	movzx  edx,BYTE PTR [eax]
  425922:	xor    edx,0x7e
  425925:	add    edx,0x3
  425928:	inc    ecx
  425929:	mov    BYTE PTR [eax],dl
  42592b:	cmp    ecx,0x6
  42592e:	jb     0x42591b
  425930:	xor    ecx,ecx
  425932:	lea    eax,[ebp+ecx*1-0x20]
  425936:	movzx  edx,BYTE PTR [eax]
  425939:	xor    edx,0x7e
  42593c:	add    edx,0x3
  42593f:	inc    ecx
  425940:	mov    BYTE PTR [eax],dl
  425942:	cmp    ecx,0x7
  425945:	jb     0x425932
  425947:	xor    ecx,ecx
  425949:	lea    eax,[ebp+ecx*1-0x28]
  42594d:	movzx  edx,BYTE PTR [eax]
  425950:	xor    edx,0x7e
  425953:	add    edx,0x3
  425956:	inc    ecx
  425957:	mov    BYTE PTR [eax],dl
  425959:	cmp    ecx,0x8
  42595c:	jb     0x425949
  42595e:	lea    eax,[ebp-0x2c]
  425961:	mov    DWORD PTR [ebp-0x8],eax
  425964:	mov    ecx,DWORD PTR [ebp-0x8]
  425967:	mov    eax,0x7113fccf
  42596c:	mov    DWORD PTR [ecx],eax
  42596e:	mov    ecx,DWORD PTR [ebp-0x2c]
  425971:	push   esi
  425972:	push   edi
  425973:	mov    esi,0x4e3e
  425978:	mov    ebx,0x3272f5
  42597d:	cmp    ecx,eax
  42597f:	jne    0x425a4a
  425985:	lea    eax,[esi+0x39]
  425988:	mov    WORD PTR [ebp-0x78],ax
  42598c:	mov    eax,esi
  42598e:	mov    WORD PTR [ebp-0x76],ax
  425992:	add    eax,0x3f
  425995:	mov    WORD PTR [ebp-0x74],ax
  425999:	lea    eax,[esi-0x2]
  42599c:	mov    WORD PTR [ebp-0x72],ax
  4259a0:	add    eax,0x43
  4259a3:	mov    ecx,eax
  4259a5:	lea    eax,[esi-0x9]
  4259a8:	mov    WORD PTR [ebp-0x66],ax
  4259ac:	mov    eax,esi
  4259ae:	mov    WORD PTR [ebp-0x64],ax
  4259b2:	add    eax,0xffffffec
  4259b5:	mov    WORD PTR [ebp-0x62],ax
  4259b9:	mov    eax,0x443
  4259be:	mov    WORD PTR [ebp-0x60],ax
  4259c2:	mov    eax,0x5670
  4259c7:	mov    WORD PTR [ebp-0x5e],ax
  4259cb:	mov    eax,0x6110
  4259d0:	mov    WORD PTR [ebp-0x5c],ax
  4259d4:	lea    eax,[ebp-0xe0]
  4259da:	push   eax
  4259db:	mov    eax,DWORD PTR [ebp+0xc]
  4259de:	mov    edi,0x75108ae
  4259e3:	xor    eax,edi
  4259e5:	add    eax,ebx
  4259e7:	push   eax
  4259e8:	mov    WORD PTR [ebp-0x70],cx
  4259ec:	lea    ecx,[esi-0xe]
  4259ef:	mov    edx,ecx
  4259f1:	lea    eax,[ebp-0x78]
  4259f4:	push   eax
  4259f5:	mov    eax,DWORD PTR [ebp-0x4]
  4259f8:	mov    eax,DWORD PTR [eax+0x198]
  4259fe:	mov    WORD PTR [ebp-0x6e],dx
  425a02:	mov    edx,0x4f8a
  425a07:	mov    WORD PTR [ebp-0x6c],dx
  425a0b:	mov    DWORD PTR [ebp-0x6a],0x4e7f4e31
  425a12:	mov    DWORD PTR [ebp-0x5a],0x4e30f1e6
  425a19:	mov    DWORD PTR [ebp-0xe0],0x1
  425a23:	mov    DWORD PTR [ebp-0xdc],0x255
  425a2d:	push   DWORD PTR [eax]
  425a2f:	mov    eax,DWORD PTR [ebp+0x10]
  425a32:	call   eax
  425a34:	mov    DWORD PTR [ebp-0x8],eax
  425a37:	mov    eax,DWORD PTR [ebp-0x8]
  425a3a:	test   eax,eax
  425a3c:	je     0x425a4f
  425a3e:	xor    DWORD PTR ds:0x76586876,0x87687666
  425a48:	jmp    0x425a4f
  425a4a:	mov    edi,0x75108ae
  425a4f:	mov    eax,DWORD PTR [ebp-0x4]
  425a52:	mov    ecx,DWORD PTR [eax+0x18c]
  425a58:	xor    eax,eax
  425a5a:	cmp    DWORD PTR [ecx],eax
  425a5c:	jne    0x425ccf
  425a62:	mov    ecx,DWORD PTR [ebp-0x4]
  425a65:	mov    ecx,DWORD PTR [ecx+0x17c]
  425a6b:	mov    DWORD PTR [ecx],eax
  425a6d:	mov    ecx,DWORD PTR [ebp-0x4]
  425a70:	mov    ecx,DWORD PTR [ecx+0x180]
  425a76:	mov    DWORD PTR [ecx],eax
  425a78:	mov    eax,0x4e6d
  425a7d:	mov    WORD PTR [ebp-0x9c],ax
  425a84:	mov    eax,esi
  425a86:	mov    WORD PTR [ebp-0x9a],ax
  425a8d:	mov    eax,0x4e7d
  425a92:	mov    WORD PTR [ebp-0x98],ax
  425a99:	add    eax,0xffffffc0
  425a9c:	mov    WORD PTR [ebp-0x96],ax
  425aa3:	mov    eax,0x4f8e
  425aa8:	mov    WORD PTR [ebp-0x94],ax
  425aaf:	mov    eax,0x4e32
  425ab4:	mov    WORD PTR [ebp-0x92],ax
  425abb:	add    eax,0x4d
  425abe:	mov    WORD PTR [ebp-0x90],ax
  425ac5:	mov    eax,0x4e30
  425aca:	mov    WORD PTR [ebp-0x8e],ax
  425ad1:	mov    eax,esi
  425ad3:	mov    WORD PTR [ebp-0x8c],ax
  425ada:	mov    eax,0x4e31
  425adf:	mov    WORD PTR [ebp-0x8a],ax
  425ae6:	mov    eax,0x99fd
  425aeb:	mov    WORD PTR [ebp-0x88],ax
  425af2:	mov    eax,0x8d62
  425af7:	mov    WORD PTR [ebp-0x86],ax
  425afe:	mov    eax,0xd66f
  425b03:	mov    WORD PTR [ebp-0x84],ax
  425b0a:	mov    eax,0xd783
  425b0f:	mov    WORD PTR [ebp-0x82],ax
  425b16:	mov    eax,0x2780
  425b1b:	mov    WORD PTR [ebp-0x80],ax
  425b1f:	mov    eax,0x4780
  425b24:	mov    WORD PTR [ebp-0x7e],ax
  425b28:	mov    eax,0x4e33
  425b2d:	push   0x8
  425b2f:	mov    WORD PTR [ebp-0x7c],ax
  425b33:	mov    DWORD PTR [ebp-0x10],0xa171b0e
  425b3a:	mov    DWORD PTR [ebp-0xc],0x83181320
  425b41:	lea    eax,[ebp-0x10]
  425b44:	pop    ecx
  425b45:	mov    dl,BYTE PTR [eax]
  425b47:	xor    dl,0x7e
  425b4a:	add    dl,0x3
  425b4d:	mov    BYTE PTR [eax],dl
  425b4f:	inc    eax
  425b50:	dec    ecx
  425b51:	jne    0x425b45
  425b53:	lea    eax,[ebp-0x10]
  425b56:	mov    DWORD PTR [ebp-0xdc],eax
  425b5c:	lea    eax,[ebp-0xe0]
  425b62:	push   eax
  425b63:	mov    eax,DWORD PTR [ebp+0xc]
  425b66:	xor    eax,edi
  425b68:	add    eax,ebx
  425b6a:	push   eax
  425b6b:	mov    eax,DWORD PTR [ebp-0x4]
  425b6e:	add    eax,0x66
  425b71:	push   eax
  425b72:	mov    eax,DWORD PTR [ebp-0x4]
  425b75:	mov    eax,DWORD PTR [eax+0x198]
  425b7b:	mov    DWORD PTR [ebp-0xe0],0x1
  425b85:	push   DWORD PTR [eax]
  425b87:	mov    eax,DWORD PTR [ebp+0x10]
  425b8a:	call   eax
  425b8c:	mov    ecx,DWORD PTR [ebp+0x8]
  425b8f:	xor    ecx,edi
  425b91:	add    ecx,ebx
  425b93:	mov    DWORD PTR [ebp-0x8],eax
  425b96:	cmp    eax,ecx
  425b98:	jne    0x425bb3
  425b9a:	mov    eax,ds:0x33730bcc
  425b9f:	or     eax,0x22150bcf
  425ba4:	mov    ds:0x33730bcc,eax
  425ba9:	add    eax,0x3372e92f
  425bae:	mov    ds:0x33730bcc,eax
  425bb3:	mov    ecx,0x4e66
  425bb8:	mov    eax,ecx
  425bba:	mov    WORD PTR [ebp-0x40],ax
  425bbe:	add    eax,0x5
  425bc1:	mov    edx,eax
  425bc3:	mov    WORD PTR [ebp-0x3e],dx
  425bc7:	mov    edx,0x4f93
  425bcc:	mov    WORD PTR [ebp-0x3c],dx
  425bd0:	add    edx,0xfffffff8
  425bd3:	mov    WORD PTR [ebp-0x3a],dx
  425bd7:	mov    edx,0x4f89
  425bdc:	mov    WORD PTR [ebp-0x38],dx
  425be0:	add    edx,0x3
  425be3:	mov    WORD PTR [ebp-0x36],dx
  425be7:	mov    edx,0x4f87
  425bec:	mov    WORD PTR [ebp-0x34],dx
  425bf0:	mov    WORD PTR [ebp-0x32],cx
  425bf4:	mov    ecx,esi
  425bf6:	mov    WORD PTR [ebp-0x30],cx
  425bfa:	lea    ecx,[edx-0x1]
  425bfd:	mov    edx,ecx
  425bff:	mov    WORD PTR [ebp-0x54],dx
  425c03:	mov    edx,eax
  425c05:	mov    WORD PTR [ebp-0x52],dx
  425c09:	mov    edx,0x4e73
  425c0e:	mov    WORD PTR [ebp-0x50],dx
  425c12:	mov    WORD PTR [ebp-0x4e],ax
  425c16:	lea    eax,[edx-0xa]
  425c19:	mov    WORD PTR [ebp-0x4c],ax
  425c1d:	add    eax,0x3
  425c20:	mov    WORD PTR [ebp-0x4a],ax
  425c24:	lea    eax,[edx-0xc]
  425c27:	mov    WORD PTR [ebp-0x48],ax
  425c2b:	mov    WORD PTR [ebp-0x46],cx
  425c2f:	mov    WORD PTR [ebp-0x44],si
  425c33:	mov    eax,DWORD PTR [ebp+0x8]
  425c36:	movzx  ecx,WORD PTR [ebp-0x54]
  425c3a:	xor    eax,edi
  425c3c:	add    eax,ebx
  425c3e:	xor    eax,ecx
  425c40:	mov    WORD PTR [ebp-0x54],ax
  425c44:	mov    eax,DWORD PTR [ebp+0x8]
  425c47:	movzx  ecx,WORD PTR [ebp-0x40]
  425c4b:	xor    eax,edi
  425c4d:	add    eax,ebx
  425c4f:	xor    eax,ecx
  425c51:	mov    WORD PTR [ebp-0x40],ax
  425c55:	xor    eax,eax
  425c57:	mov    WORD PTR [ebp-0xf4],ax
  425c5e:	mov    WORD PTR [ebp-0x108],ax
  425c65:	mov    edi,DWORD PTR [ebp+0x24]
  425c68:	lea    eax,[ebp-0xf4]
  425c6e:	lea    edx,[ebp-0x54]
  425c71:	mov    DWORD PTR [ebp-0xe0],0x2
  425c7b:	mov    DWORD PTR [ebp-0xdc],eax
  425c81:	call   0x4286b9
  425c86:	mov    DWORD PTR [ebp-0xd8],eax
  425c8c:	lea    eax,[ebp-0xe0]
  425c92:	push   eax
  425c93:	mov    eax,DWORD PTR [ebp+0xc]
  425c96:	xor    eax,0x75108ae
  425c9b:	add    eax,ebx
  425c9d:	push   eax
  425c9e:	lea    eax,[ebp-0x9c]
  425ca4:	push   eax
  425ca5:	push   DWORD PTR [ebp-0x8]
  425ca8:	mov    eax,DWORD PTR [ebp+0x10]
  425cab:	call   eax
  425cad:	mov    edi,DWORD PTR [ebp+0x24]
  425cb0:	lea    eax,[ebp-0x108]
  425cb6:	lea    edx,[ebp-0x40]
  425cb9:	mov    DWORD PTR [ebp-0xdc],eax
  425cbf:	call   0x4286b9
  425cc4:	mov    DWORD PTR [ebp-0xd8],eax
  425cca:	mov    edi,0x75108ae
  425ccf:	mov    eax,DWORD PTR [ebp+0x14]
  425cd2:	push   DWORD PTR [ebp-0x4]
  425cd5:	push   DWORD PTR [ebp+0x20]
  425cd8:	push   DWORD PTR [ebp+0x1c]
  425cdb:	push   DWORD PTR [ebp+0x18]
  425cde:	push   DWORD PTR [ebp+0x10]
  425ce1:	push   DWORD PTR [ebp+0x8]
  425ce4:	push   DWORD PTR [ebp+0xc]
  425ce7:	call   0x426f5a
  425cec:	test   eax,eax
  425cee:	je     0x425d32
  425cf0:	add    DWORD PTR [ebp-0x4],eax
  425cf3:	push   DWORD PTR [ebp-0x4]
  425cf6:	lea    esi,[ebp+0x4]
  425cf9:	call   0x42614a
  425cfe:	mov    eax,DWORD PTR [ebp-0x4]
  425d01:	mov    eax,DWORD PTR [eax+0x1c8]
  425d07:	mov    eax,DWORD PTR [eax]
  425d09:	xor    eax,edi
  425d0b:	add    eax,ebx
  425d0d:	mov    eax,DWORD PTR [ebp-0x4]
  425d10:	jne    0x425d28
  425d12:	mov    ecx,DWORD PTR [ebp-0x4]
  425d15:	mov    ecx,DWORD PTR [ecx+0x1cc]
  425d1b:	push   DWORD PTR [ecx]
  425d1d:	mov    eax,DWORD PTR [eax+0x1e0]
  425d23:	call   DWORD PTR [eax+0x28]
  425d26:	jmp    0x425d32
  425d28:	mov    eax,DWORD PTR [eax+0x17c]
  425d2e:	mov    eax,DWORD PTR [eax]
  425d30:	add    DWORD PTR [esi],eax
  425d32:	mov    eax,DWORD PTR [ebp-0x4]
  425d35:	mov    eax,DWORD PTR [eax+0x1dc]
  425d3b:	dec    DWORD PTR [eax]
  425d3d:	mov    ecx,DWORD PTR [ebp-0x4]
  425d40:	mov    ecx,DWORD PTR [ecx+0x1d8]
  425d46:	mov    eax,DWORD PTR [eax]
  425d48:	lea    eax,[ecx+eax*4]
  425d4b:	mov    ecx,DWORD PTR [ebp-0x4]
  425d4e:	mov    ecx,DWORD PTR [ecx+0x17c]
  425d54:	mov    eax,DWORD PTR [eax]
  425d56:	mov    ecx,DWORD PTR [ecx]
  425d58:	add    DWORD PTR [eax],ecx
  425d5a:	pop    edi
  425d5b:	pop    esi
  425d5c:	pop    ebx
  425d5d:	leave  
  425d5e:	ret    0x20
  425d61:	push   edi
  425d62:	push   esi
  425d63:	push   ebx
  425d64:	push   ebp
  425d65:	mov    ebp,esp
  425d67:	mov    eax,DWORD PTR [ebp+0x24]
  425d6a:	add    DWORD PTR [ebp+0x28],eax
  425d6d:	push   eax
  425d6e:	cld    
  425d6f:	mov    esi,DWORD PTR [ebp+0x18]
  425d72:	add    DWORD PTR [ebp+0x1c],esi
  425d75:	push   esi
  425d76:	mov    esi,DWORD PTR [ebp+0x14]
  425d79:	lods   eax,DWORD PTR ds:[esi]
  425d7a:	xchg   edx,eax
  425d7b:	push   edx
  425d7c:	mov    cl,BYTE PTR [esi-0x2]
  425d7f:	or     eax,0xffffffff
  425d82:	shl    eax,cl
  425d84:	not    eax
  425d86:	push   eax
  425d87:	mov    cl,dh
  425d89:	or     eax,0xffffffff
  425d8c:	shl    eax,cl
  425d8e:	not    eax
  425d90:	push   eax
  425d91:	add    cl,dl
  425d93:	mov    edi,esi
  425d95:	sub    esp,0xc
  425d98:	sub    eax,eax
  425d9a:	inc    eax
  425d9b:	push   eax
  425d9c:	push   eax
  425d9d:	push   eax
  425d9e:	push   eax
  425d9f:	push   eax
  425da0:	push   edi
  425da1:	sub    esi,esi
  425da3:	push   esi
  425da4:	or     ebx,0xffffffff
  425da7:	mov    eax,0x300
  425dac:	shl    eax,cl
  425dae:	lea    ecx,[eax+0x736]
  425db4:	mov    eax,0x4000400
  425db9:	shr    ecx,1
  425dbb:	rep stos DWORD PTR es:[edi],eax
  425dbd:	push   0x5
  425dbf:	pop    ecx
  425dc0:	call   0x4260ab
  425dc5:	loop   0x425dc0
  425dc7:	lea    esi,[esi]
  425dc9:	lea    edi,[edi]
  425dcb:	mov    edi,DWORD PTR [ebp-0x4]
  425dce:	mov    eax,DWORD PTR [ebp-0x10]
  425dd1:	sub    edi,DWORD PTR [ebp+0x24]
  425dd4:	and    eax,edi
  425dd6:	mov    DWORD PTR [ebp-0x18],eax
  425dd9:	mov    al,0x0
  425ddb:	call   0x4260c3
  425de0:	jne    0x425e7b
  425de6:	mov    cl,BYTE PTR [ebp-0xc]
  425de9:	and    edi,DWORD PTR [ebp-0x14]
  425dec:	shl    edi,cl
  425dee:	sub    cl,0x8
  425df1:	neg    cl
  425df3:	shr    esi,cl
  425df5:	pop    eax
  425df6:	add    edi,esi
  425df8:	pop    esi
  425df9:	lea    edi,[edi+edi*2]
  425dfc:	shl    edi,0x8
  425dff:	cmp    al,0x7
  425e01:	pop    edx
  425e02:	lea    ecx,[esi+edi*2+0xe6c]
  425e09:	push   ecx
  425e0a:	push   esi
  425e0b:	mov    esi,0x100
  425e10:	push   eax
  425e11:	mov    al,0x1
  425e13:	jb     0x425e49
  425e15:	mov    edi,DWORD PTR [ebp-0x4]
  425e18:	sub    edi,DWORD PTR [ebp-0x24]
  425e1b:	movzx  edi,BYTE PTR [edi]
  425e1e:	mov    ebp,DWORD PTR [ebp-0x34]
  425e21:	shl    edi,1
  425e23:	mov    ecx,esi
  425e25:	and    esi,edi
  425e27:	add    ecx,esi
  425e29:	lea    ebp,[ebp+ecx*2+0x0]
  425e2d:	call   0x4260e2
  425e32:	mov    ecx,eax
  425e34:	shr    esi,0x8
  425e37:	and    ecx,0x1
  425e3a:	cmp    esi,ecx
  425e3c:	mov    esi,0x100
  425e41:	jne    0x425e51
  425e43:	cmp    eax,esi
  425e45:	jb     0x425e1e
  425e47:	jmp    0x425e5d
  425e49:	mov    ebp,DWORD PTR [ebp-0x34]
  425e4c:	call   0x4260e2
  425e51:	inc    eax
  425e52:	inc    esi
  425e53:	sub    eax,0x1
  425e56:	sub    esi,0x1
  425e59:	cmp    eax,esi
  425e5b:	jb     0x425e49
  425e5d:	pop    edx
  425e5e:	inc    edx
  425e5f:	cmp    edx,0x5
  425e62:	dec    edx
  425e63:	mov    ecx,edx
  425e65:	jb     0x425e76
  425e67:	inc    edx
  425e68:	cmp    edx,0xb
  425e6b:	dec    edx
  425e6c:	mov    cl,0x4
  425e6e:	dec    cl
  425e70:	jb     0x425e76
  425e72:	mov    cl,0x7
  425e74:	dec    cl
  425e76:	sub    edx,ecx
  425e78:	push   edx
  425e79:	jmp    0x425eca
  425e7b:	mov    al,0xc1
  425e7d:	dec    al
  425e7f:	call   0x4260d3
  425e84:	jne    0x425e9a
  425e86:	pop    eax
  425e87:	pop    edi
  425e88:	pop    edx
  425e89:	pop    ecx
  425e8a:	pop    edx
  425e8b:	pop    ecx
  425e8c:	push   DWORD PTR [esp]
  425e8f:	push   ecx
  425e90:	push   edx
  425e91:	mov    edx,0x664
  425e96:	mov    cl,0x0
  425e98:	jmp    0x425f0d
  425e9a:	mov    al,0xcd
  425e9c:	dec    al
  425e9e:	call   0x4260d3
  425ea3:	jne    0x425ed3
  425ea5:	mov    al,0xf1
  425ea7:	dec    al
  425ea9:	call   0x4260c3
  425eae:	jne    0x425f03
  425eb0:	pop    eax
  425eb1:	cmp    al,0x7
  425eb3:	mov    al,0x9
  425eb5:	jb     0x425eb9
  425eb7:	mov    al,0xb
  425eb9:	push   eax
  425eba:	mov    esi,DWORD PTR [ebp-0x4]
  425ebd:	sub    esi,DWORD PTR [ebp-0x24]
  425ec0:	cmp    esi,DWORD PTR [ebp+0x24]
  425ec3:	jb     0x42609a
  425ec9:	lods   al,BYTE PTR ds:[esi]
  425eca:	mov    edi,DWORD PTR [ebp-0x4]
  425ecd:	stos   BYTE PTR es:[edi],al
  425ece:	jmp    0x426061
  425ed3:	mov    al,0xd8
  425ed5:	call   0x4260d3
  425eda:	mov    esi,DWORD PTR [ebp-0x28]
  425edd:	je     0x425efa
  425edf:	mov    al,0xe4
  425ee1:	call   0x4260d3
  425ee6:	mov    esi,DWORD PTR [ebp-0x2c]
  425ee9:	je     0x425ef4
  425eeb:	mov    esi,DWORD PTR [ebp-0x30]
  425eee:	mov    ecx,DWORD PTR [ebp-0x2c]
  425ef1:	mov    DWORD PTR [ebp-0x30],ecx
  425ef4:	mov    ecx,DWORD PTR [ebp-0x28]
  425ef7:	mov    DWORD PTR [ebp-0x2c],ecx
  425efa:	mov    ecx,DWORD PTR [ebp-0x24]
  425efd:	mov    DWORD PTR [ebp-0x28],ecx
  425f00:	mov    DWORD PTR [ebp-0x24],esi
  425f03:	pop    eax
  425f04:	pop    edi
  425f05:	pop    ecx
  425f06:	mov    edx,0xa68
  425f0b:	mov    cl,0x8
  425f0d:	add    edx,edi
  425f0f:	push   edx
  425f10:	push   edi
  425f11:	cmp    al,0x7
  425f13:	mov    al,cl
  425f15:	jb     0x425f19
  425f17:	add    al,0x3
  425f19:	push   eax
  425f1a:	mov    ebp,DWORD PTR [ebp-0x34]
  425f1d:	call   0x4260e0
  425f22:	jne    0x425f38
  425f24:	mov    eax,DWORD PTR [ebp-0x18]
  425f27:	mov    edi,DWORD PTR [ebp-0x34]
  425f2a:	shl    eax,0x3
  425f2d:	sub    ecx,ecx
  425f2f:	push   0x8
  425f31:	pop    esi
  425f32:	lea    edi,[edi+eax*2+0x4]
  425f36:	jmp    0x425f6d
  425f38:	mov    ebp,DWORD PTR [ebp-0x34]
  425f3b:	add    ebp,0x2
  425f3e:	call   0x4260e0
  425f43:	jne    0x425f5d
  425f45:	mov    eax,DWORD PTR [ebp-0x18]
  425f48:	mov    edi,DWORD PTR [ebp-0x34]
  425f4b:	shl    eax,0x3
  425f4e:	push   0x8
  425f50:	pop    ecx
  425f51:	push   0x8
  425f53:	pop    esi
  425f54:	lea    edi,[edi+eax*2+0x104]
  425f5b:	jmp    0x425f6d
  425f5d:	mov    edi,0x204
  425f62:	add    edi,DWORD PTR [ebp-0x34]
  425f65:	push   0x10
  425f67:	pop    ecx
  425f68:	mov    esi,0x100
  425f6d:	mov    DWORD PTR [ebp-0x1c],ecx
  425f70:	sub    eax,eax
  425f72:	inc    eax
  425f73:	mov    ebp,edi
  425f75:	call   0x4260e2
  425f7a:	mov    ecx,eax
  425f7c:	sub    ecx,esi
  425f7e:	jb     0x425f73
  425f80:	add    DWORD PTR [ebp-0x1c],ecx
  425f83:	cmp    DWORD PTR [ebp-0x3c],0x4
  425f87:	jae    0x42603d
  425f8d:	add    DWORD PTR [ebp-0x3c],0x7
  425f91:	mov    ecx,DWORD PTR [ebp-0x1c]
  425f94:	cmp    ecx,0x4
  425f97:	jb     0x425f9c
  425f99:	push   0x3
  425f9b:	pop    ecx
  425f9c:	mov    edi,DWORD PTR [ebp-0x38]
  425f9f:	shl    ecx,0x6
  425fa2:	sub    eax,eax
  425fa4:	inc    eax
  425fa5:	push   0x40
  425fa7:	pop    esi
  425fa8:	lea    edi,[edi+ecx*2+0x360]
  425faf:	mov    ebp,edi
  425fb1:	call   0x4260e2
  425fb6:	mov    ecx,eax
  425fb8:	sub    ecx,esi
  425fba:	jb     0x425faf
  425fbc:	mov    DWORD PTR [ebp-0x18],ecx
  425fbf:	mov    DWORD PTR [ebp-0x24],ecx
  425fc2:	cmp    ecx,0x4
  425fc5:	jb     0x42603a
  425fc7:	mov    esi,ecx
  425fc9:	and    DWORD PTR [ebp-0x24],0x1
  425fcd:	shr    esi,1
  425fcf:	or     DWORD PTR [ebp-0x24],0x2
  425fd3:	dec    esi
  425fd4:	cmp    ecx,0xe
  425fd7:	jae    0x425ff2
  425fd9:	mov    eax,0x2af
  425fde:	sub    eax,ecx
  425fe0:	mov    ecx,esi
  425fe2:	shl    BYTE PTR [ebp-0x24],cl
  425fe5:	add    eax,DWORD PTR [ebp-0x24]
  425fe8:	shl    eax,1
  425fea:	add    eax,DWORD PTR [ebp-0x38]
  425fed:	mov    DWORD PTR [ebp-0x34],eax
  425ff0:	jmp    0x42601f
  425ff2:	sub    esi,0x4
  425ff5:	call   0x42609f
  425ffa:	shr    ebx,1
  425ffc:	shl    DWORD PTR [ebp-0x24],1
  425fff:	cmp    DWORD PTR [ebp-0x20],ebx
  426002:	jb     0x42600a
  426004:	inc    DWORD PTR [ebp-0x24]
  426007:	sub    DWORD PTR [ebp-0x20],ebx
  42600a:	dec    esi
  42600b:	jne    0x425ff5
  42600d:	mov    eax,0x644
  426012:	add    eax,DWORD PTR [ebp-0x38]
  426015:	mov    DWORD PTR [ebp-0x34],eax
  426018:	shl    DWORD PTR [ebp-0x24],0x4
  42601c:	push   0x4
  42601e:	pop    esi
  42601f:	sub    edi,edi
  426021:	inc    edi
  426022:	mov    eax,edi
  426024:	mov    ebp,DWORD PTR [ebp-0x34]
  426027:	call   0x4260e2
  42602c:	test   al,0x1
  42602e:	je     0x426033
  426030:	or     DWORD PTR [ebp-0x24],edi
  426033:	shl    edi,1
  426035:	dec    esi
  426036:	jne    0x426024
  426038:	jmp    0x42603a
  42603a:	inc    DWORD PTR [ebp-0x24]
  42603d:	mov    ecx,DWORD PTR [ebp-0x1c]
  426040:	add    ecx,0x2
  426043:	mov    edi,DWORD PTR [ebp-0x4]
  426046:	mov    eax,edi
  426048:	sub    eax,DWORD PTR [ebp+0x24]
  42604b:	cmp    DWORD PTR [ebp-0x24],eax
  42604e:	ja     0x42609a
  426050:	mov    esi,edi
  426052:	sub    esi,DWORD PTR [ebp-0x24]
  426055:	mov    edx,DWORD PTR [ebp+0x28]
  426058:	lods   al,BYTE PTR ds:[esi]
  426059:	stos   BYTE PTR es:[edi],al
  42605a:	cmp    edi,edx
  42605c:	jae    0x426061
  42605e:	dec    ecx
  42605f:	jne    0x426058
  426061:	mov    DWORD PTR [ebp-0x4],edi
  426064:	movzx  esi,al
  426067:	cmp    edi,DWORD PTR [ebp+0x28]
  42606a:	jb     0x425dcb
  426070:	call   0x42609f
  426075:	sub    eax,eax
  426077:	lea    ebp,[esp+0x3c]
  42607b:	mov    edx,DWORD PTR [ebp+0x20]
  42607e:	mov    esi,DWORD PTR [ebp-0x8]
  426081:	sub    esi,DWORD PTR [ebp+0x18]
  426084:	mov    DWORD PTR [edx],esi
  426086:	mov    dh,0xdd
  426088:	cmp    BYTE PTR [esi+0x7d347b7d],dh
  42608e:	sbb    BYTE PTR [esi+0x1f5af70],ch
  426094:	add    eax,0x188f893
  426099:	jmp    0x37cbebd2
  42609e:	jmp    0x42602e
  4260a0:	ja     0x42602a
  4260a2:	mov    BYTE PTR [eax-0x6873ae74],cl
  4260a8:	(bad)  
  4260a9:	pop    ss
  4260aa:	test   al,0xe1
  4260ac:	mov    dh,0x5d
  4260ae:	imul   esi,DWORD PTR [ebp+ebx*2-0x8],0x55
  4260b3:	sbb    esi,DWORD PTR [esi+0xb8f0b9d]
  4260b9:	test   al,0x3a
  4260bb:	scas   al,BYTE PTR es:[edi]
  4260bc:	popf   
  4260bd:	or     ebp,DWORD PTR [esi-0x68fe94a3]
  4260c3:	mov    dh,0xbd
  4260c5:	fwait
  4260c6:	les    esp,FWORD PTR [edx-0x75]
  4260c9:	(bad)  
  4260ca:	sets   BYTE PTR [ebp+ebx*4+0x378f942b]
  4260d2:	mov    al,ds:0x948b62c4
  4260d7:	popf   
  4260d8:	fwait
  4260d9:	mov    dh,0x3d
  4260db:	stos   DWORD PTR es:[edi],eax
  4260dc:	mov    esi,0x34889d39
  4260e1:	mov    edi,DWORD PTR [esi-0x717762c7]
  4260e7:	ja     0x426071
  4260e9:	mov    BYTE PTR [eax-0x4907aa74],cl
  4260ef:	mov    ecx,0x198f6818
  4260f4:	sbb    BYTE PTR [eax],cl
  4260f6:	test   al,0x74
  4260f8:	mov    ecx,0xfa55f918
  4260fd:	mov    dl,0xcc
  4260ff:	xchg   DWORD PTR [ecx+0x178f6818],ebx
  426105:	test   al,0x88
  426107:	push   esp
  426108:	and    al,0x20
  42610a:	mov    ecx,ebx
  42610c:	movzx  edx,WORD PTR [ebp+0x0]
  426110:	shr    ecx,0xb
  426113:	imul   ecx,edx
  426116:	cmp    DWORD PTR [esp+0x20],ecx
  42611a:	jae    0x426133
  42611c:	mov    ebx,ecx
  42611e:	mov    ecx,0x800
  426123:	sub    ecx,edx
  426125:	shr    ecx,0x5
  426128:	add    WORD PTR [ebp+0x0],cx
  42612c:	add    eax,eax
  42612e:	lea    ebp,[esp+0x40]
  426132:	ret    
  426133:	shr    edx,0x5
  426136:	sub    DWORD PTR [esp+0x20],ecx
  42613a:	sub    ebx,ecx
  42613c:	sub    WORD PTR [ebp+0x0],dx
  426140:	add    eax,eax
  426142:	add    eax,0x1
  426145:	lea    ebp,[esp+0x40]
  426149:	ret    
  42614a:	push   ebp
  42614b:	mov    ebp,esp
  42614d:	sub    esp,0x12c
  426153:	push   ebx
  426154:	push   esi
  426155:	push   edi
  426156:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  42615d:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  426164:	mov    eax,DWORD PTR [ebp+0x8]
  426167:	mov    DWORD PTR [ebp+0x8],eax
  42616a:	mov    ecx,DWORD PTR [ebp-0x10]
  42616d:	mov    ebx,0x75108ae
  426172:	xor    ecx,ebx
  426174:	mov    eax,0x3272f5
  426179:	add    ecx,eax
  42617b:	mov    DWORD PTR [ebp-0x24],ecx
  42617e:	mov    ecx,DWORD PTR [ebp-0x10]
  426181:	xor    ecx,ebx
  426183:	add    ecx,eax
  426185:	mov    DWORD PTR [ebp-0x40],ecx
  426188:	mov    ecx,DWORD PTR [ebp-0x10]
  42618b:	xor    ecx,ebx
  42618d:	add    ecx,eax
  42618f:	mov    DWORD PTR [ebp-0x3c],ecx
  426192:	mov    ecx,DWORD PTR [ebp-0x10]
  426195:	xor    ecx,ebx
  426197:	add    ecx,eax
  426199:	mov    DWORD PTR [ebp-0xd8],ecx
  42619f:	mov    DWORD PTR [ebp-0x50],0xf89f05a5
  4261a6:	mov    DWORD PTR [ebp-0x3c],0xf89cb5a5
  4261ad:	mov    DWORD PTR [ebp-0x54],0xf89c85a1
  4261b4:	push   0x25
  4261b6:	pop    ecx
  4261b7:	mov    DWORD PTR [ebp-0x30],ecx
  4261ba:	mov    DWORD PTR [ebp-0x30],ecx
  4261bd:	push   0x65
  4261bf:	pop    ecx
  4261c0:	mov    DWORD PTR [ebp-0x30],ecx
  4261c3:	mov    DWORD PTR [ebp-0x30],ecx
  4261c6:	mov    DWORD PTR [ebp-0x30],0x4d
  4261cd:	mov    DWORD PTR [ebp-0x30],0x43
  4261d4:	mov    ecx,DWORD PTR [ebp-0x10]
  4261d7:	xor    ecx,ebx
  4261d9:	add    ecx,eax
  4261db:	mov    DWORD PTR [ebp-0x30],ecx
  4261de:	mov    ecx,DWORD PTR [ebp-0x10]
  4261e1:	xor    ecx,ebx
  4261e3:	add    ecx,eax
  4261e5:	mov    DWORD PTR [ebp-0x30],ecx
  4261e8:	mov    DWORD PTR [ebp-0x28],0x258
  4261ef:	mov    DWORD PTR [ebp-0x34],0x36
  4261f6:	mov    DWORD PTR [ebp-0x14],0x7a
  4261fd:	lea    edi,[ebp-0x10c]
  426203:	lea    esi,[ebp-0x12c]
  426209:	call   0x426ec9
  42620e:	dec    DWORD PTR [ebp-0x14]
  426211:	jne    0x4261fd
  426213:	dec    DWORD PTR [ebp-0x34]
  426216:	jne    0x4261f6
  426218:	dec    DWORD PTR [ebp-0x28]
  42621b:	jne    0x4261ef
  42621d:	mov    DWORD PTR [ebp-0x28],0x400e
  426224:	mov    eax,DWORD PTR [ebp-0x10]
  426227:	xor    eax,ebx
  426229:	mov    esi,0x3272f5
  42622e:	add    eax,esi
  426230:	mov    DWORD PTR [ebp-0x1c],eax
  426233:	mov    eax,DWORD PTR [ebp-0x10]
  426236:	and    DWORD PTR [ebp-0x94],0x0
  42623d:	xor    eax,ebx
  42623f:	add    eax,esi
  426241:	mov    DWORD PTR [ebp-0x38],eax
  426244:	mov    eax,fs:0x18
  42624a:	mov    DWORD PTR [ebp-0x94],eax
  426250:	mov    eax,DWORD PTR [eax+0x30]
  426253:	mov    DWORD PTR [ebp-0xcc],eax
  426259:	mov    eax,DWORD PTR [eax+0xc]
  42625c:	mov    DWORD PTR [ebp-0xc0],eax
  426262:	mov    eax,DWORD PTR [ebp+0x8]
  426265:	lea    ecx,[ebp-0x94]
  42626b:	mov    DWORD PTR [eax+0x1a0],ecx
  426271:	mov    eax,DWORD PTR [ebp+0x8]
  426274:	lea    ecx,[ebp-0xcc]
  42627a:	mov    DWORD PTR [eax+0x1a4],ecx
  426280:	mov    eax,DWORD PTR [ebp+0x8]
  426283:	push   DWORD PTR [ebp+0x8]
  426286:	lea    ecx,[ebp-0xc0]
  42628c:	mov    DWORD PTR [eax+0x1a8],ecx
  426292:	call   0x42868a
  426297:	mov    ecx,DWORD PTR [ebp-0x10]
  42629a:	xor    ecx,ebx
  42629c:	add    ecx,esi
  42629e:	cmp    ecx,eax
  4262a0:	je     0x426623
  4262a6:	mov    eax,DWORD PTR [ebp+0x8]
  4262a9:	mov    eax,DWORD PTR [eax+0x194]
  4262af:	mov    ecx,DWORD PTR [eax]
  4262b1:	mov    eax,DWORD PTR [ebp+0x8]
  4262b4:	mov    eax,DWORD PTR [eax+0x194]
  4262ba:	mov    eax,DWORD PTR [eax]
  4262bc:	add    eax,DWORD PTR [ecx+0x3c]
  4262bf:	mov    ecx,DWORD PTR [ebp+0x8]
  4262c2:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4262c8:	lea    edx,[ebp-0xec]
  4262ce:	push   edx
  4262cf:	mov    edx,DWORD PTR [ebp+0x8]
  4262d2:	mov    edx,DWORD PTR [edx+0x18c]
  4262d8:	mov    edx,DWORD PTR [edx]
  4262da:	add    edx,DWORD PTR [eax+0x88]
  4262e0:	push   0x4
  4262e2:	push   DWORD PTR [eax+0x8c]
  4262e8:	push   edx
  4262e9:	call   DWORD PTR [ecx+0x1c]
  4262ec:	push   DWORD PTR [ebp+0x8]
  4262ef:	xor    eax,eax
  4262f1:	mov    DWORD PTR [ebp-0xa8],0x1b3e0e38
  4262fb:	mov    DWORD PTR [ebp-0xa4],0x12371120
  426305:	mov    DWORD PTR [ebp-0xa0],0x40111c0a
  42630f:	mov    BYTE PTR [ebp-0x9c],0x83
  426316:	lea    edi,[ebp-0x9b]
  42631c:	stos   DWORD PTR es:[edi],eax
  42631d:	stos   WORD PTR es:[edi],ax
  42631f:	stos   BYTE PTR es:[edi],al
  426320:	xor    eax,eax
  426322:	mov    DWORD PTR [ebp-0xbc],0x1b3e0e38
  42632c:	mov    DWORD PTR [ebp-0xb8],0x12371120
  426336:	mov    DWORD PTR [ebp-0xb4],0x2a111c0a
  426340:	mov    BYTE PTR [ebp-0xb0],0x83
  426347:	lea    edi,[ebp-0xaf]
  42634d:	stos   DWORD PTR es:[edi],eax
  42634e:	stos   WORD PTR es:[edi],ax
  426350:	stos   BYTE PTR es:[edi],al
  426351:	mov    edi,DWORD PTR [ebp+0x8]
  426354:	mov    eax,DWORD PTR [ebp+0x8]
  426357:	mov    edx,DWORD PTR [eax+0x1b8]
  42635d:	mov    DWORD PTR [ebp-0x68],0x110f0e17
  426364:	mov    DWORD PTR [ebp-0x64],0x1813141e
  42636b:	mov    WORD PTR [ebp-0x60],0x8340
  426371:	mov    DWORD PTR [ebp-0x90],0x1b3e0e38
  42637b:	mov    DWORD PTR [ebp-0x8c],0x17401120
  426385:	mov    DWORD PTR [ebp-0x88],0x35201b13
  42638f:	mov    DWORD PTR [ebp-0x84],0x111c140c
  426399:	mov    DWORD PTR [ebp-0x80],0x83401e18
  4263a0:	mov    DWORD PTR [ebp-0x7c],0x1b3e0e38
  4263a7:	mov    DWORD PTR [ebp-0x78],0x17401120
  4263ae:	mov    DWORD PTR [ebp-0x74],0x35201b13
  4263b5:	mov    DWORD PTR [ebp-0x70],0x111c140c
  4263bc:	mov    DWORD PTR [ebp-0x6c],0x832a1e18
  4263c3:	call   0x4286b9
  4263c8:	push   eax
  4263c9:	mov    eax,DWORD PTR [ebp+0x8]
  4263cc:	mov    eax,DWORD PTR [eax+0x1a8]
  4263d2:	push   DWORD PTR [eax]
  4263d4:	call   0x42835a
  4263d9:	test   eax,eax
  4263db:	jne    0x42642d
  4263dd:	mov    eax,DWORD PTR [ebp+0x8]
  4263e0:	mov    eax,DWORD PTR [eax+0x1e0]
  4263e6:	mov    edi,DWORD PTR [ebp+0x8]
  4263e9:	add    eax,0x4
  4263ec:	mov    DWORD PTR [ebp-0x20],eax
  4263ef:	mov    eax,DWORD PTR [ebp+0x8]
  4263f2:	mov    edx,DWORD PTR [eax+0x1b8]
  4263f8:	call   0x4286b9
  4263fd:	push   eax
  4263fe:	mov    eax,DWORD PTR [ebp-0x20]
  426401:	call   DWORD PTR [eax]
  426403:	test   eax,eax
  426405:	jne    0x42642d
  426407:	mov    eax,DWORD PTR [ebp+0x8]
  42640a:	mov    eax,DWORD PTR [eax+0x1e0]
  426410:	mov    edi,DWORD PTR [ebp+0x8]
  426413:	add    eax,0x10
  426416:	mov    DWORD PTR [ebp-0x20],eax
  426419:	mov    eax,DWORD PTR [ebp+0x8]
  42641c:	mov    edx,DWORD PTR [eax+0x1b8]
  426422:	call   0x4286b9
  426427:	push   eax
  426428:	mov    eax,DWORD PTR [ebp-0x20]
  42642b:	call   DWORD PTR [eax]
  42642d:	mov    eax,DWORD PTR [ebp-0x10]
  426430:	mov    ecx,DWORD PTR [ebp-0x28]
  426433:	xor    eax,ebx
  426435:	add    eax,esi
  426437:	cmp    eax,ecx
  426439:	je     0x4265fc
  42643f:	mov    eax,DWORD PTR [ebp-0x18]
  426442:	xor    eax,ebx
  426444:	mov    ecx,0xffcd8d0b
  426449:	sub    ecx,eax
  42644b:	add    ecx,DWORD PTR [ebp-0x28]
  42644e:	mov    eax,DWORD PTR [ebp-0x1c]
  426451:	cmp    eax,ecx
  426453:	ja     0x4265fc
  426459:	mov    DWORD PTR [ebp-0x34],0x0
  426460:	push   DWORD PTR [ebp+0x8]
  426463:	mov    edi,DWORD PTR [ebp+0x8]
  426466:	mov    eax,DWORD PTR [ebp+0x8]
  426469:	mov    edx,DWORD PTR [eax+0x1b4]
  42646f:	call   0x4286b9
  426474:	push   eax
  426475:	mov    eax,DWORD PTR [ebp+0x8]
  426478:	mov    eax,DWORD PTR [eax+0x1a8]
  42647e:	push   DWORD PTR [eax]
  426480:	call   0x42835a
  426485:	mov    ecx,DWORD PTR [ebp+0x8]
  426488:	mov    ecx,DWORD PTR [ecx+0x19c]
  42648e:	mov    DWORD PTR [ecx],eax
  426490:	mov    eax,DWORD PTR [ebp+0x8]
  426493:	mov    edi,DWORD PTR [eax+0x1e0]
  426499:	mov    esi,DWORD PTR [ebp+0x8]
  42649c:	xor    eax,eax
  42649e:	lea    edx,[ebp-0x7c]
  4264a1:	call   0x4286ef
  4264a6:	push   eax
  4264a7:	mov    eax,DWORD PTR [ebp+0x8]
  4264aa:	mov    eax,DWORD PTR [eax+0x19c]
  4264b0:	push   DWORD PTR [eax]
  4264b2:	call   DWORD PTR [edi+0x8]
  4264b5:	mov    DWORD PTR [ebp-0x20],eax
  4264b8:	mov    eax,DWORD PTR [ebp+0x8]
  4264bb:	mov    edi,DWORD PTR [eax+0x1e0]
  4264c1:	mov    esi,DWORD PTR [ebp+0x8]
  4264c4:	xor    eax,eax
  4264c6:	lea    edx,[ebp-0x90]
  4264cc:	call   0x4286ef
  4264d1:	push   eax
  4264d2:	mov    eax,DWORD PTR [ebp+0x8]
  4264d5:	mov    eax,DWORD PTR [eax+0x19c]
  4264db:	push   DWORD PTR [eax]
  4264dd:	call   DWORD PTR [edi+0x8]
  4264e0:	mov    eax,DWORD PTR [ebp+0x8]
  4264e3:	mov    edi,DWORD PTR [eax+0x1e0]
  4264e9:	mov    esi,DWORD PTR [ebp+0x8]
  4264ec:	xor    eax,eax
  4264ee:	lea    edx,[ebp-0xa8]
  4264f4:	call   0x4286ef
  4264f9:	push   eax
  4264fa:	mov    eax,DWORD PTR [ebp+0x8]
  4264fd:	mov    eax,DWORD PTR [eax+0x19c]
  426503:	push   DWORD PTR [eax]
  426505:	call   DWORD PTR [edi+0x8]
  426508:	and    DWORD PTR [ebp-0x8],0x0
  42650c:	mov    DWORD PTR [ebp-0x48],eax
  42650f:	mov    eax,DWORD PTR [ebp-0x8]
  426512:	and    eax,0x7
  426515:	add    eax,0x31
  426518:	push   eax
  426519:	call   DWORD PTR [ebp-0x20]
  42651c:	test   eax,eax
  42651e:	je     0x426562
  426520:	mov    eax,DWORD PTR [ebp-0x8]
  426523:	push   0x19
  426525:	xor    edx,edx
  426527:	pop    ecx
  426528:	div    ecx
  42652a:	add    dl,0x41
  42652d:	movzx  eax,dl
  426530:	push   eax
  426531:	call   DWORD PTR [ebp-0x48]
  426534:	test   eax,eax
  426536:	jne    0x426562
  426538:	mov    eax,DWORD PTR [ebp+0x8]
  42653b:	mov    edi,DWORD PTR [eax+0x1e0]
  426541:	mov    esi,DWORD PTR [ebp+0x8]
  426544:	xor    eax,eax
  426546:	lea    edx,[ebp-0x68]
  426549:	call   0x4286ef
  42654e:	push   eax
  42654f:	mov    eax,DWORD PTR [ebp+0x8]
  426552:	mov    eax,DWORD PTR [eax+0x198]
  426558:	push   DWORD PTR [eax]
  42655a:	call   DWORD PTR [edi+0x8]
  42655d:	mov    DWORD PTR [ebp-0x14],eax
  426560:	jmp    0x426566
  426562:	and    DWORD PTR [ebp-0x14],0x0
  426566:	inc    DWORD PTR [ebp-0x8]
  426569:	cmp    DWORD PTR [ebp-0x8],0x10
  42656d:	jb     0x42650f
  42656f:	mov    eax,DWORD PTR [ebp-0x18]
  426572:	mov    esi,DWORD PTR [ebp+0x8]
  426575:	xor    eax,ebx
  426577:	mov    edi,0x3272f5
  42657c:	add    eax,edi
  42657e:	lea    edx,[ebp-0x10c]
  426584:	call   0x4286ef
  426589:	push   eax
  42658a:	mov    eax,DWORD PTR [ebp-0x10]
  42658d:	mov    esi,DWORD PTR [ebp+0x8]
  426590:	xor    eax,ebx
  426592:	add    eax,edi
  426594:	lea    edx,[ebp-0x12c]
  42659a:	call   0x4286ef
  42659f:	push   eax
  4265a0:	call   DWORD PTR [ebp-0x14]
  4265a3:	mov    ecx,DWORD PTR [ebp-0x10]
  4265a6:	xor    ecx,ebx
  4265a8:	add    ecx,edi
  4265aa:	cmp    ecx,eax
  4265ac:	jne    0x4265b5
  4265ae:	mov    DWORD PTR [ebp-0x34],0x1
  4265b5:	mov    eax,DWORD PTR [ebp-0x18]
  4265b8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4265bb:	xor    eax,ebx
  4265bd:	lea    eax,[eax+ecx*1+0x3272f5]
  4265c4:	mov    DWORD PTR [ebp-0x1c],eax
  4265c7:	mov    eax,DWORD PTR [ebp-0x34]
  4265ca:	test   eax,eax
  4265cc:	je     0x4265e0
  4265ce:	mov    eax,DWORD PTR [ebp-0x18]
  4265d1:	mov    ecx,DWORD PTR [ebp-0x38]
  4265d4:	xor    eax,ebx
  4265d6:	lea    eax,[eax+ecx*1+0x3272f5]
  4265dd:	mov    DWORD PTR [ebp-0x38],eax
  4265e0:	mov    eax,DWORD PTR [ebp-0x18]
  4265e3:	xor    eax,ebx
  4265e5:	mov    ecx,0xffcd8d0b
  4265ea:	sub    ecx,eax
  4265ec:	add    ecx,DWORD PTR [ebp-0x28]
  4265ef:	mov    eax,DWORD PTR [ebp-0x1c]
  4265f2:	cmp    eax,ecx
  4265f4:	jbe    0x426459
  4265fa:	mov    esi,edi
  4265fc:	mov    eax,DWORD PTR [ebp-0x38]
  4265ff:	mov    ecx,DWORD PTR [ebp-0x1c]
  426602:	cmp    ecx,eax
  426604:	jne    0x426617
  426606:	push   DWORD PTR [ebp+0x8]
  426609:	lea    eax,[ebp-0x40]
  42660c:	push   eax
  42660d:	call   0x42915e
  426612:	mov    DWORD PTR [ebp-0x24],eax
  426615:	jmp    0x426623
  426617:	mov    eax,DWORD PTR [ebp-0x24]
  42661a:	mov    ecx,DWORD PTR [ebp-0x18]
  42661d:	xor    ecx,ebx
  42661f:	add    ecx,esi
  426621:	xor    DWORD PTR [eax],ecx
  426623:	mov    eax,DWORD PTR [ebp-0x10]
  426626:	mov    ecx,DWORD PTR [ebp-0x24]
  426629:	xor    eax,ebx
  42662b:	add    eax,esi
  42662d:	cmp    eax,ecx
  42662f:	je     0x426da7
  426635:	mov    eax,DWORD PTR [ebp-0x10]
  426638:	mov    ecx,DWORD PTR [ebp-0x40]
  42663b:	xor    eax,ebx
  42663d:	add    eax,esi
  42663f:	cmp    eax,ecx
  426641:	je     0x426da7
  426647:	mov    eax,DWORD PTR [ebp-0x10]
  42664a:	xor    eax,ebx
  42664c:	add    eax,esi
  42664e:	jmp    0x42666c
  426650:	mov    edi,DWORD PTR [ebp-0x24]
  426653:	mov    cl,al
  426655:	and    cl,0x1f
  426658:	or     dl,0xff
  42665b:	sub    dl,cl
  42665d:	add    BYTE PTR [edi+eax*1],dl
  426660:	mov    ecx,DWORD PTR [ebp-0x18]
  426663:	xor    ecx,ebx
  426665:	lea    eax,[eax+ecx*1+0x3272f5]
  42666c:	mov    ecx,DWORD PTR [ebp-0x40]
  42666f:	cmp    eax,ecx
  426671:	jb     0x426650
  426673:	mov    eax,DWORD PTR [ebp-0x40]
  426676:	mov    DWORD PTR [ebp-0x28],eax
  426679:	mov    eax,DWORD PTR [ebp-0x24]
  42667c:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  426683:	mov    DWORD PTR [ebp-0xd4],eax
  426689:	mov    edi,0xf89c85a2
  42668e:	mov    DWORD PTR [ebp-0x2c],edi
  426691:	mov    eax,DWORD PTR [ebp-0x38]
  426694:	xor    eax,ebx
  426696:	add    eax,esi
  426698:	mov    DWORD PTR [ebp-0xc],eax
  42669b:	mov    eax,DWORD PTR [ebp-0x38]
  42669e:	xor    eax,ebx
  4266a0:	add    eax,esi
  4266a2:	mov    DWORD PTR [ebp-0x8],eax
  4266a5:	mov    DWORD PTR [ebp-0x48],0xf89c8585
  4266ac:	mov    DWORD PTR [ebp-0x4c],0xf89c85bc
  4266b3:	mov    eax,DWORD PTR [ebp-0x38]
  4266b6:	mov    ecx,DWORD PTR [ebp-0x28]
  4266b9:	xor    eax,ebx
  4266bb:	add    eax,esi
  4266bd:	cmp    ecx,eax
  4266bf:	je     0x4268be
  4266c5:	jmp    0x42689a
  4266ca:	mov    ecx,DWORD PTR [ebp-0xc]
  4266cd:	mov    eax,DWORD PTR [ebp-0x28]
  4266d0:	sub    eax,ecx
  4266d2:	mov    ecx,DWORD PTR [ebp-0x48]
  4266d5:	xor    ecx,ebx
  4266d7:	add    ecx,esi
  4266d9:	xor    edx,edx
  4266db:	div    ecx
  4266dd:	mov    DWORD PTR [ebp-0x8],eax
  4266e0:	mov    eax,DWORD PTR [ebp-0x4c]
  4266e3:	mov    ecx,DWORD PTR [ebp-0x8]
  4266e6:	xor    eax,ebx
  4266e8:	add    eax,esi
  4266ea:	cmp    ecx,eax
  4266ec:	jbe    0x4266f8
  4266ee:	mov    eax,DWORD PTR [ebp-0x4c]
  4266f1:	xor    eax,ebx
  4266f3:	add    eax,esi
  4266f5:	mov    DWORD PTR [ebp-0x8],eax
  4266f8:	mov    eax,DWORD PTR [ebp-0x48]
  4266fb:	mov    ecx,DWORD PTR [ebp-0x8]
  4266fe:	xor    eax,ebx
  426700:	add    eax,esi
  426702:	imul   eax,ecx
  426705:	mov    DWORD PTR [ebp-0x8],eax
  426708:	mov    eax,DWORD PTR [ebp-0x38]
  42670b:	mov    ecx,DWORD PTR [ebp-0x8]
  42670e:	xor    eax,ebx
  426710:	add    eax,esi
  426712:	cmp    ecx,eax
  426714:	je     0x426888
  42671a:	mov    eax,DWORD PTR [ebp-0x8]
  42671d:	mov    DWORD PTR [ebp-0x14],eax
  426720:	mov    eax,DWORD PTR [ebp-0xc]
  426723:	add    eax,DWORD PTR [ebp-0xd4]
  426729:	mov    DWORD PTR [ebp-0x20],0xf89c85a5
  426730:	mov    DWORD PTR [ebp-0x34],edi
  426733:	mov    DWORD PTR [ebp-0xe8],0xf89c85a3
  42673d:	mov    DWORD PTR [ebp-0x8],eax
  426740:	mov    DWORD PTR [ebp-0x30],0xf89c85a0
  426747:	mov    DWORD PTR [ebp-0x1c],edi
  42674a:	mov    eax,DWORD PTR [ebp-0x20]
  42674d:	xor    eax,ebx
  42674f:	add    eax,esi
  426751:	jmp    0x426847
  426756:	mov    DWORD PTR [ebp-0xe0],0xf89c85b8
  426760:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  42676a:	mov    eax,DWORD PTR [ebp-0x1c]
  42676d:	mov    ecx,DWORD PTR [ebp-0x44]
  426770:	xor    eax,ebx
  426772:	add    eax,esi
  426774:	imul   eax,ecx
  426777:	mov    ecx,DWORD PTR [ebp-0x8]
  42677a:	mov    al,BYTE PTR [eax+ecx*1]
  42677d:	mov    BYTE PTR [ebp-0x2],al
  426780:	mov    eax,DWORD PTR [ebp-0x1c]
  426783:	mov    ecx,DWORD PTR [ebp-0x44]
  426786:	xor    eax,ebx
  426788:	add    eax,esi
  42678a:	imul   eax,ecx
  42678d:	mov    ecx,DWORD PTR [ebp-0xe8]
  426793:	xor    ecx,ebx
  426795:	add    eax,ecx
  426797:	mov    ecx,DWORD PTR [ebp-0x8]
  42679a:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  4267a2:	mov    ecx,DWORD PTR [ebp-0xe0]
  4267a8:	xor    ecx,ebx
  4267aa:	lea    eax,[ecx+eax*1+0x3272f5]
  4267b1:	movzx  ecx,BYTE PTR [ebp-0x2]
  4267b5:	xor    ecx,eax
  4267b7:	mov    BYTE PTR [ebp-0x2],cl
  4267ba:	mov    al,BYTE PTR [ebp-0x2]
  4267bd:	mov    ecx,DWORD PTR [ebp-0x1c]
  4267c0:	mov    edx,DWORD PTR [ebp-0x44]
  4267c3:	xor    ecx,ebx
  4267c5:	add    ecx,esi
  4267c7:	imul   ecx,edx
  4267ca:	mov    edx,DWORD PTR [ebp-0x8]
  4267cd:	mov    BYTE PTR [ecx+edx*1],al
  4267d0:	mov    eax,DWORD PTR [ebp-0x1c]
  4267d3:	mov    ecx,DWORD PTR [ebp-0x44]
  4267d6:	xor    eax,ebx
  4267d8:	add    eax,esi
  4267da:	imul   eax,ecx
  4267dd:	mov    ecx,DWORD PTR [ebp-0x8]
  4267e0:	mov    al,BYTE PTR [eax+ecx*1]
  4267e3:	mov    BYTE PTR [ebp-0x2],al
  4267e6:	mov    eax,DWORD PTR [ebp-0x1c]
  4267e9:	mov    ecx,DWORD PTR [ebp-0x44]
  4267ec:	xor    eax,ebx
  4267ee:	add    eax,esi
  4267f0:	imul   eax,ecx
  4267f3:	mov    ecx,DWORD PTR [ebp-0x34]
  4267f6:	xor    ecx,ebx
  4267f8:	add    eax,ecx
  4267fa:	mov    ecx,DWORD PTR [ebp-0x8]
  4267fd:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  426805:	mov    ecx,DWORD PTR [ebp-0xc4]
  42680b:	xor    ecx,ebx
  42680d:	lea    eax,[ecx+eax*1+0x3272f5]
  426814:	movzx  ecx,BYTE PTR [ebp-0x2]
  426818:	xor    ecx,eax
  42681a:	mov    BYTE PTR [ebp-0x2],cl
  42681d:	mov    al,BYTE PTR [ebp-0x2]
  426820:	mov    ecx,DWORD PTR [ebp-0x1c]
  426823:	mov    edx,DWORD PTR [ebp-0x44]
  426826:	xor    ecx,ebx
  426828:	add    ecx,esi
  42682a:	imul   ecx,edx
  42682d:	mov    edx,DWORD PTR [ebp-0x8]
  426830:	mov    BYTE PTR [ecx+edx*1],al
  426833:	mov    eax,DWORD PTR [ebp-0x30]
  426836:	mov    ecx,DWORD PTR [ebp-0x34]
  426839:	xor    eax,ebx
  42683b:	xor    ecx,ebx
  42683d:	add    eax,esi
  42683f:	add    ecx,esi
  426841:	imul   eax,ecx
  426844:	add    eax,DWORD PTR [ebp-0x44]
  426847:	mov    DWORD PTR [ebp-0x44],eax
  42684a:	mov    eax,DWORD PTR [ebp-0x44]
  42684d:	mov    ecx,DWORD PTR [ebp-0x14]
  426850:	cmp    ecx,eax
  426852:	jb     0x426756
  426858:	mov    eax,DWORD PTR [ebp-0x34]
  42685b:	mov    ecx,DWORD PTR [ebp-0x14]
  42685e:	xor    eax,ebx
  426860:	add    eax,esi
  426862:	imul   eax,ecx
  426865:	mov    ecx,DWORD PTR [ebp-0x20]
  426868:	xor    ecx,ebx
  42686a:	add    ecx,esi
  42686c:	or     eax,ecx
  42686e:	mov    ecx,DWORD PTR [ebp-0x2c]
  426871:	xor    ecx,ebx
  426873:	add    eax,ecx
  426875:	mov    ecx,DWORD PTR [ebp-0x2c]
  426878:	xor    ecx,ebx
  42687a:	add    eax,ecx
  42687c:	mov    ecx,DWORD PTR [ebp-0xc]
  42687f:	lea    eax,[eax+ecx*1+0x64e5ea]
  426886:	jmp    0x426897
  426888:	mov    eax,DWORD PTR [ebp-0x2c]
  42688b:	mov    ecx,DWORD PTR [ebp-0xc]
  42688e:	xor    eax,ebx
  426890:	lea    eax,[eax+ecx*1+0x3272f5]
  426897:	mov    DWORD PTR [ebp-0xc],eax
  42689a:	mov    eax,DWORD PTR [ebp-0x2c]
  42689d:	xor    eax,ebx
  42689f:	mov    ecx,0xffcd8d0b
  4268a4:	sub    ecx,eax
  4268a6:	add    ecx,DWORD PTR [ebp-0x28]
  4268a9:	mov    eax,DWORD PTR [ebp-0x2c]
  4268ac:	mov    edx,DWORD PTR [ebp-0xc]
  4268af:	xor    eax,ebx
  4268b1:	add    eax,esi
  4268b3:	imul   eax,edx
  4268b6:	cmp    eax,ecx
  4268b8:	jbe    0x4266ca
  4268be:	mov    eax,DWORD PTR [ebp-0x10]
  4268c1:	mov    ecx,DWORD PTR [ebp-0x40]
  4268c4:	mov    eax,DWORD PTR [ebp+0x8]
  4268c7:	mov    edx,DWORD PTR [ebp-0x54]
  4268ca:	mov    eax,DWORD PTR [eax+0x1e0]
  4268d0:	xor    edx,ebx
  4268d2:	add    edx,esi
  4268d4:	push   edx
  4268d5:	mov    edx,DWORD PTR [ebp-0x3c]
  4268d8:	xor    edx,ebx
  4268da:	add    edx,esi
  4268dc:	push   edx
  4268dd:	push   ecx
  4268de:	mov    DWORD PTR [ebp-0x30],ecx
  4268e1:	mov    ecx,DWORD PTR [ebp-0x10]
  4268e4:	xor    ecx,ebx
  4268e6:	add    ecx,esi
  4268e8:	push   ecx
  4268e9:	call   DWORD PTR [eax+0x14]
  4268ec:	mov    edi,eax
  4268ee:	mov    eax,DWORD PTR [ebp-0x10]
  4268f1:	xor    eax,ebx
  4268f3:	add    eax,esi
  4268f5:	cmp    eax,edi
  4268f7:	je     0x426952
  4268f9:	mov    eax,DWORD PTR [ebp-0x10]
  4268fc:	jmp    0x42691f
  4268fe:	mov    ecx,DWORD PTR [ebp-0x24]
  426901:	xor    eax,ebx
  426903:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f5]
  42690a:	mov    BYTE PTR [eax+edi*1+0x3272f5],cl
  426911:	mov    ecx,DWORD PTR [ebp-0x18]
  426914:	xor    ecx,ebx
  426916:	lea    eax,[ecx+eax*1+0x3272f5]
  42691d:	xor    eax,ebx
  42691f:	mov    ecx,DWORD PTR [ebp-0x40]
  426922:	sub    ecx,esi
  426924:	xor    ecx,ebx
  426926:	cmp    eax,ecx
  426928:	jne    0x4268fe
  42692a:	mov    eax,DWORD PTR [ebp+0x8]
  42692d:	mov    ecx,DWORD PTR [ebp-0x50]
  426930:	mov    eax,DWORD PTR [eax+0x1e0]
  426936:	xor    ecx,ebx
  426938:	add    ecx,esi
  42693a:	push   ecx
  42693b:	mov    ecx,DWORD PTR [ebp-0x10]
  42693e:	xor    ecx,ebx
  426940:	add    ecx,esi
  426942:	push   ecx
  426943:	push   DWORD PTR [ebp-0x24]
  426946:	call   DWORD PTR [eax+0x18]
  426949:	mov    eax,DWORD PTR [ebp-0x30]
  42694c:	mov    DWORD PTR [ebp-0x24],edi
  42694f:	mov    DWORD PTR [ebp-0x40],eax
  426952:	mov    edi,DWORD PTR [ebp-0x24]
  426955:	mov    eax,DWORD PTR [ebp-0x18]
  426958:	mov    ecx,DWORD PTR [ebp-0x10]
  42695b:	xor    eax,ebx
  42695d:	mov    DWORD PTR [ebp-0x30],edi
  426960:	add    eax,esi
  426962:	mov    DWORD PTR [ebp-0x5c],0x402b332b
  426969:	mov    DWORD PTR [ebp-0x58],0x362b3e2b
  426970:	jmp    0x4269a4
  426972:	xor    ecx,ebx
  426974:	mov    dl,BYTE PTR [ebp+ecx*1+0x327299]
  42697b:	xor    dl,0x7e
  42697e:	add    dl,0x3
  426981:	mov    DWORD PTR [ebp-0x3c],ecx
  426984:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272f5]
  42698c:	movzx  edx,dl
  42698f:	cmp    ecx,edx
  426991:	jne    0x4269ae
  426993:	mov    ecx,DWORD PTR [ebp-0x18]
  426996:	mov    edx,DWORD PTR [ebp-0x3c]
  426999:	xor    ecx,ebx
  42699b:	lea    ecx,[ecx+edx*1+0x3272f5]
  4269a2:	xor    ecx,ebx
  4269a4:	cmp    ecx,0xf89c85bd
  4269aa:	jne    0x426972
  4269ac:	jmp    0x4269b5
  4269ae:	mov    eax,DWORD PTR [ebp-0x10]
  4269b1:	xor    eax,ebx
  4269b3:	add    eax,esi
  4269b5:	mov    ecx,DWORD PTR [ebp-0x10]
  4269b8:	xor    ecx,ebx
  4269ba:	add    ecx,esi
  4269bc:	cmp    ecx,eax
  4269be:	je     0x426b31
  4269c4:	mov    eax,DWORD PTR [edi+0x8]
  4269c7:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  4269ce:	mov    DWORD PTR [ebp-0x3c],0xf89cc3d4
  4269d5:	mov    DWORD PTR [ebp-0x48],0xf89cb5a5
  4269dc:	mov    DWORD PTR [ebp-0x20],0xf89c85a1
  4269e3:	mov    DWORD PTR [ebp-0x14],eax
  4269e6:	mov    eax,DWORD PTR [ebp+0x8]
  4269e9:	mov    ecx,DWORD PTR [ebp-0x20]
  4269ec:	xor    ecx,ebx
  4269ee:	add    ecx,esi
  4269f0:	push   ecx
  4269f1:	mov    ecx,DWORD PTR [ebp-0x48]
  4269f4:	mov    eax,DWORD PTR [eax+0x1e0]
  4269fa:	xor    ecx,ebx
  4269fc:	add    ecx,esi
  4269fe:	push   ecx
  4269ff:	mov    ecx,DWORD PTR [ebp-0x3c]
  426a02:	xor    ecx,ebx
  426a04:	add    ecx,esi
  426a06:	push   ecx
  426a07:	mov    ecx,DWORD PTR [ebp-0xc]
  426a0a:	xor    ecx,ebx
  426a0c:	add    ecx,esi
  426a0e:	push   ecx
  426a0f:	call   DWORD PTR [eax+0x14]
  426a12:	mov    edi,eax
  426a14:	mov    eax,DWORD PTR [ebp+0x8]
  426a17:	mov    ecx,DWORD PTR [ebp-0x20]
  426a1a:	mov    eax,DWORD PTR [eax+0x1e0]
  426a20:	xor    ecx,ebx
  426a22:	add    ecx,esi
  426a24:	push   ecx
  426a25:	mov    ecx,DWORD PTR [ebp-0x48]
  426a28:	xor    ecx,ebx
  426a2a:	add    ecx,esi
  426a2c:	push   ecx
  426a2d:	mov    ecx,DWORD PTR [ebp-0xc]
  426a30:	push   DWORD PTR [ebp-0x14]
  426a33:	xor    ecx,ebx
  426a35:	add    ecx,esi
  426a37:	push   ecx
  426a38:	call   DWORD PTR [eax+0x14]
  426a3b:	mov    ecx,DWORD PTR [ebp-0xc]
  426a3e:	xor    ecx,ebx
  426a40:	add    ecx,esi
  426a42:	mov    DWORD PTR [ebp-0x20],eax
  426a45:	cmp    ecx,edi
  426a47:	je     0x426dd4
  426a4d:	mov    ecx,DWORD PTR [ebp-0xc]
  426a50:	xor    ecx,ebx
  426a52:	add    ecx,esi
  426a54:	cmp    ecx,eax
  426a56:	je     0x426dd4
  426a5c:	mov    DWORD PTR [ebp-0x3c],0xf89c85a0
  426a63:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  426a6a:	mov    ecx,DWORD PTR [ebp-0x3c]
  426a6d:	xor    cl,0xae
  426a70:	sub    cl,0xb
  426a73:	mov    BYTE PTR [edi],cl
  426a75:	mov    ecx,DWORD PTR [ebp-0xc]
  426a78:	xor    cl,0xae
  426a7b:	sub    cl,0xb
  426a7e:	mov    BYTE PTR [edi+0x1],cl
  426a81:	mov    ecx,DWORD PTR [ebp-0x54]
  426a84:	xor    cl,0xae
  426a87:	sub    cl,0xb
  426a8a:	mov    BYTE PTR [edi+0x2],cl
  426a8d:	and    DWORD PTR [ebp-0xc8],0x0
  426a94:	and    DWORD PTR [ebp-0xdc],0x0
  426a9b:	lea    ecx,[ebp-0xdc]
  426aa1:	push   ecx
  426aa2:	push   DWORD PTR [ebp-0x14]
  426aa5:	push   eax
  426aa6:	lea    eax,[ebp-0xc8]
  426aac:	push   eax
  426aad:	mov    eax,DWORD PTR [ebp-0x30]
  426ab0:	push   DWORD PTR [eax+0xc]
  426ab3:	mov    eax,DWORD PTR [ebp-0x24]
  426ab6:	add    eax,0x10
  426ab9:	push   eax
  426aba:	push   edi
  426abb:	call   0x425d61
  426ac0:	mov    DWORD PTR [ebp-0x3c],eax
  426ac3:	mov    eax,DWORD PTR [ebp+0x8]
  426ac6:	mov    ecx,DWORD PTR [ebp-0x50]
  426ac9:	mov    eax,DWORD PTR [eax+0x1e0]
  426acf:	xor    ecx,ebx
  426ad1:	add    ecx,esi
  426ad3:	push   ecx
  426ad4:	mov    ecx,DWORD PTR [ebp-0xc]
  426ad7:	xor    ecx,ebx
  426ad9:	add    ecx,esi
  426adb:	push   ecx
  426adc:	push   edi
  426add:	call   DWORD PTR [eax+0x18]
  426ae0:	mov    eax,DWORD PTR [ebp-0x3c]
  426ae3:	add    eax,0xffcd8d0b
  426ae8:	xor    eax,ebx
  426aea:	cmp    eax,0xf89c85a5
  426aef:	mov    eax,DWORD PTR [ebp+0x8]
  426af2:	mov    eax,DWORD PTR [eax+0x1e0]
  426af8:	mov    ecx,DWORD PTR [ebp-0x50]
  426afb:	jne    0x426b1e
  426afd:	xor    ecx,ebx
  426aff:	add    ecx,esi
  426b01:	push   ecx
  426b02:	mov    ecx,DWORD PTR [ebp-0xc]
  426b05:	xor    ecx,ebx
  426b07:	add    ecx,esi
  426b09:	push   ecx
  426b0a:	push   DWORD PTR [ebp-0x24]
  426b0d:	call   DWORD PTR [eax+0x18]
  426b10:	mov    eax,DWORD PTR [ebp-0x20]
  426b13:	mov    DWORD PTR [ebp-0x24],eax
  426b16:	mov    eax,DWORD PTR [ebp-0x14]
  426b19:	mov    DWORD PTR [ebp-0x40],eax
  426b1c:	jmp    0x426b31
  426b1e:	xor    ecx,ebx
  426b20:	add    ecx,esi
  426b22:	push   ecx
  426b23:	mov    ecx,DWORD PTR [ebp-0xc]
  426b26:	xor    ecx,ebx
  426b28:	add    ecx,esi
  426b2a:	push   ecx
  426b2b:	push   DWORD PTR [ebp-0x20]
  426b2e:	call   DWORD PTR [eax+0x18]
  426b31:	mov    eax,DWORD PTR [ebp-0x40]
  426b34:	mov    DWORD PTR [ebp-0x38],eax
  426b37:	mov    eax,DWORD PTR [ebp-0x24]
  426b3a:	mov    DWORD PTR [ebp-0x28],0xf89c85a5
  426b41:	mov    DWORD PTR [ebp-0x3c],eax
  426b44:	mov    edi,0xf89c85a2
  426b49:	mov    DWORD PTR [ebp-0x2c],edi
  426b4c:	mov    eax,DWORD PTR [ebp-0x28]
  426b4f:	xor    eax,ebx
  426b51:	add    eax,esi
  426b53:	mov    DWORD PTR [ebp-0xc],eax
  426b56:	mov    eax,DWORD PTR [ebp-0x28]
  426b59:	xor    eax,ebx
  426b5b:	add    eax,esi
  426b5d:	mov    DWORD PTR [ebp-0x14],eax
  426b60:	mov    DWORD PTR [ebp-0x48],0xf89c8585
  426b67:	mov    DWORD PTR [ebp-0x20],0xf89c85bc
  426b6e:	mov    eax,DWORD PTR [ebp-0x28]
  426b71:	mov    ecx,DWORD PTR [ebp-0x38]
  426b74:	xor    eax,ebx
  426b76:	add    eax,esi
  426b78:	cmp    ecx,eax
  426b7a:	je     0x426d70
  426b80:	jmp    0x426d4c
  426b85:	mov    ecx,DWORD PTR [ebp-0xc]
  426b88:	mov    eax,DWORD PTR [ebp-0x38]
  426b8b:	sub    eax,ecx
  426b8d:	mov    ecx,DWORD PTR [ebp-0x48]
  426b90:	xor    ecx,ebx
  426b92:	add    ecx,esi
  426b94:	xor    edx,edx
  426b96:	div    ecx
  426b98:	mov    DWORD PTR [ebp-0x14],eax
  426b9b:	mov    eax,DWORD PTR [ebp-0x20]
  426b9e:	mov    ecx,DWORD PTR [ebp-0x14]
  426ba1:	xor    eax,ebx
  426ba3:	add    eax,esi
  426ba5:	cmp    ecx,eax
  426ba7:	jbe    0x426bb3
  426ba9:	mov    eax,DWORD PTR [ebp-0x20]
  426bac:	xor    eax,ebx
  426bae:	add    eax,esi
  426bb0:	mov    DWORD PTR [ebp-0x14],eax
  426bb3:	mov    eax,DWORD PTR [ebp-0x48]
  426bb6:	mov    ecx,DWORD PTR [ebp-0x14]
  426bb9:	xor    eax,ebx
  426bbb:	add    eax,esi
  426bbd:	imul   eax,ecx
  426bc0:	mov    DWORD PTR [ebp-0x14],eax
  426bc3:	mov    eax,DWORD PTR [ebp-0x28]
  426bc6:	mov    ecx,DWORD PTR [ebp-0x14]
  426bc9:	xor    eax,ebx
  426bcb:	add    eax,esi
  426bcd:	cmp    ecx,eax
  426bcf:	je     0x426d3a
  426bd5:	mov    eax,DWORD PTR [ebp-0x14]
  426bd8:	mov    DWORD PTR [ebp-0x34],eax
  426bdb:	mov    eax,DWORD PTR [ebp-0xc]
  426bde:	add    eax,DWORD PTR [ebp-0x3c]
  426be1:	mov    DWORD PTR [ebp-0x4c],0xf89c85a5
  426be8:	mov    DWORD PTR [ebp-0x14],edi
  426beb:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  426bf2:	mov    DWORD PTR [ebp-0x1c],eax
  426bf5:	mov    DWORD PTR [ebp-0x30],0xf89c85a0
  426bfc:	mov    DWORD PTR [ebp-0x8],edi
  426bff:	mov    eax,DWORD PTR [ebp-0x4c]
  426c02:	xor    eax,ebx
  426c04:	add    eax,esi
  426c06:	jmp    0x426cf9
  426c0b:	mov    DWORD PTR [ebp-0xe4],0xf89c85b8
  426c15:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  426c1f:	mov    eax,DWORD PTR [ebp-0x8]
  426c22:	mov    ecx,DWORD PTR [ebp-0x18]
  426c25:	xor    eax,ebx
  426c27:	add    eax,esi
  426c29:	imul   eax,ecx
  426c2c:	mov    ecx,DWORD PTR [ebp-0x1c]
  426c2f:	mov    al,BYTE PTR [eax+ecx*1]
  426c32:	mov    BYTE PTR [ebp-0x1],al
  426c35:	mov    eax,DWORD PTR [ebp-0x8]
  426c38:	mov    ecx,DWORD PTR [ebp-0x18]
  426c3b:	xor    eax,ebx
  426c3d:	add    eax,esi
  426c3f:	imul   eax,ecx
  426c42:	mov    ecx,DWORD PTR [ebp-0x54]
  426c45:	xor    ecx,ebx
  426c47:	add    eax,ecx
  426c49:	mov    ecx,DWORD PTR [ebp-0x1c]
  426c4c:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  426c54:	mov    ecx,DWORD PTR [ebp-0xe4]
  426c5a:	xor    ecx,ebx
  426c5c:	lea    eax,[ecx+eax*1+0x3272f5]
  426c63:	movzx  ecx,BYTE PTR [ebp-0x1]
  426c67:	xor    ecx,eax
  426c69:	mov    BYTE PTR [ebp-0x1],cl
  426c6c:	mov    al,BYTE PTR [ebp-0x1]
  426c6f:	mov    ecx,DWORD PTR [ebp-0x8]
  426c72:	mov    edx,DWORD PTR [ebp-0x18]
  426c75:	xor    ecx,ebx
  426c77:	add    ecx,esi
  426c79:	imul   ecx,edx
  426c7c:	mov    edx,DWORD PTR [ebp-0x1c]
  426c7f:	mov    BYTE PTR [ecx+edx*1],al
  426c82:	mov    eax,DWORD PTR [ebp-0x8]
  426c85:	mov    ecx,DWORD PTR [ebp-0x18]
  426c88:	xor    eax,ebx
  426c8a:	add    eax,esi
  426c8c:	imul   eax,ecx
  426c8f:	mov    ecx,DWORD PTR [ebp-0x1c]
  426c92:	mov    al,BYTE PTR [eax+ecx*1]
  426c95:	mov    BYTE PTR [ebp-0x1],al
  426c98:	mov    eax,DWORD PTR [ebp-0x8]
  426c9b:	mov    ecx,DWORD PTR [ebp-0x18]
  426c9e:	xor    eax,ebx
  426ca0:	add    eax,esi
  426ca2:	imul   eax,ecx
  426ca5:	mov    ecx,DWORD PTR [ebp-0x14]
  426ca8:	xor    ecx,ebx
  426caa:	add    eax,ecx
  426cac:	mov    ecx,DWORD PTR [ebp-0x1c]
  426caf:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  426cb7:	mov    ecx,DWORD PTR [ebp-0xd0]
  426cbd:	xor    ecx,ebx
  426cbf:	lea    eax,[ecx+eax*1+0x3272f5]
  426cc6:	movzx  ecx,BYTE PTR [ebp-0x1]
  426cca:	xor    ecx,eax
  426ccc:	mov    BYTE PTR [ebp-0x1],cl
  426ccf:	mov    al,BYTE PTR [ebp-0x1]
  426cd2:	mov    ecx,DWORD PTR [ebp-0x8]
  426cd5:	mov    edx,DWORD PTR [ebp-0x18]
  426cd8:	xor    ecx,ebx
  426cda:	add    ecx,esi
  426cdc:	imul   ecx,edx
  426cdf:	mov    edx,DWORD PTR [ebp-0x1c]
  426ce2:	mov    BYTE PTR [ecx+edx*1],al
  426ce5:	mov    eax,DWORD PTR [ebp-0x30]
  426ce8:	mov    ecx,DWORD PTR [ebp-0x14]
  426ceb:	xor    eax,ebx
  426ced:	xor    ecx,ebx
  426cef:	add    eax,esi
  426cf1:	add    ecx,esi
  426cf3:	imul   eax,ecx
  426cf6:	add    eax,DWORD PTR [ebp-0x18]
  426cf9:	mov    DWORD PTR [ebp-0x18],eax
  426cfc:	mov    eax,DWORD PTR [ebp-0x18]
  426cff:	mov    ecx,DWORD PTR [ebp-0x34]
  426d02:	cmp    ecx,eax
  426d04:	jb     0x426c0b
  426d0a:	mov    eax,DWORD PTR [ebp-0x14]
  426d0d:	mov    ecx,DWORD PTR [ebp-0x34]
  426d10:	xor    eax,ebx
  426d12:	add    eax,esi
  426d14:	imul   eax,ecx
  426d17:	mov    ecx,DWORD PTR [ebp-0x4c]
  426d1a:	xor    ecx,ebx
  426d1c:	add    ecx,esi
  426d1e:	or     eax,ecx
  426d20:	mov    ecx,DWORD PTR [ebp-0x2c]
  426d23:	xor    ecx,ebx
  426d25:	add    eax,ecx
  426d27:	mov    ecx,DWORD PTR [ebp-0x2c]
  426d2a:	xor    ecx,ebx
  426d2c:	add    eax,ecx
  426d2e:	mov    ecx,DWORD PTR [ebp-0xc]
  426d31:	lea    eax,[eax+ecx*1+0x64e5ea]
  426d38:	jmp    0x426d49
  426d3a:	mov    eax,DWORD PTR [ebp-0x2c]
  426d3d:	mov    ecx,DWORD PTR [ebp-0xc]
  426d40:	xor    eax,ebx
  426d42:	lea    eax,[eax+ecx*1+0x3272f5]
  426d49:	mov    DWORD PTR [ebp-0xc],eax
  426d4c:	mov    eax,DWORD PTR [ebp-0x2c]
  426d4f:	xor    eax,ebx
  426d51:	mov    ecx,0xffcd8d0b
  426d56:	sub    ecx,eax
  426d58:	add    ecx,DWORD PTR [ebp-0x38]
  426d5b:	mov    eax,DWORD PTR [ebp-0x2c]
  426d5e:	mov    edx,DWORD PTR [ebp-0xc]
  426d61:	xor    eax,ebx
  426d63:	add    eax,esi
  426d65:	imul   eax,edx
  426d68:	cmp    eax,ecx
  426d6a:	jbe    0x426b85
  426d70:	push   DWORD PTR [ebp+0x8]
  426d73:	mov    eax,DWORD PTR [ebp+0x8]
  426d76:	push   DWORD PTR [eax+0x1cc]
  426d7c:	lea    eax,[ebp-0xd8]
  426d82:	push   eax
  426d83:	mov    eax,DWORD PTR [ebp+0x8]
  426d86:	mov    eax,DWORD PTR [eax+0x1c4]
  426d8c:	push   DWORD PTR [eax]
  426d8e:	mov    eax,DWORD PTR [ebp+0x8]
  426d91:	mov    eax,DWORD PTR [eax+0x1c0]
  426d97:	push   DWORD PTR [eax]
  426d99:	push   DWORD PTR [ebp-0x40]
  426d9c:	push   DWORD PTR [ebp-0x24]
  426d9f:	call   0x427836
  426da4:	mov    DWORD PTR [ebp-0x3c],eax
  426da7:	mov    eax,DWORD PTR [ebp-0x10]
  426daa:	mov    ecx,DWORD PTR [ebp-0x24]
  426dad:	xor    eax,ebx
  426daf:	add    eax,esi
  426db1:	cmp    eax,ecx
  426db3:	je     0x426dd4
  426db5:	mov    eax,DWORD PTR [ebp+0x8]
  426db8:	mov    ecx,DWORD PTR [ebp-0x50]
  426dbb:	mov    eax,DWORD PTR [eax+0x1e0]
  426dc1:	xor    ecx,ebx
  426dc3:	add    ecx,esi
  426dc5:	push   ecx
  426dc6:	mov    ecx,DWORD PTR [ebp-0x10]
  426dc9:	xor    ecx,ebx
  426dcb:	add    ecx,esi
  426dcd:	push   ecx
  426dce:	push   DWORD PTR [ebp-0x24]
  426dd1:	call   DWORD PTR [eax+0x18]
  426dd4:	pop    edi
  426dd5:	pop    esi
  426dd6:	pop    ebx
  426dd7:	leave  
  426dd8:	ret    0x4
  426ddb:	push   ebp
  426ddc:	mov    ebp,esp
  426dde:	push   ecx
  426ddf:	push   ecx
  426de0:	lea    eax,[ebp-0x8]
  426de3:	mov    DWORD PTR [ebp-0x4],eax
  426de6:	push   esi
  426de7:	mov    esi,DWORD PTR [ebp-0x4]
  426dea:	mov    eax,0xf881ba2f
  426def:	mov    DWORD PTR [esi],eax
  426df1:	mov    esi,DWORD PTR [ebp-0x8]
  426df4:	cmp    esi,eax
  426df6:	pop    esi
  426df7:	jne    0x426e01
  426df9:	mov    BYTE PTR [ecx+0xa],0x83
  426dfd:	mov    BYTE PTR [edx+0x8],0x2e
  426e01:	mov    BYTE PTR [edx+0xa],0x83
  426e05:	mov    BYTE PTR [ecx+0x2],0x15
  426e09:	leave  
  426e0a:	ret    
  426e0b:	push   ebp
  426e0c:	mov    ebp,esp
  426e0e:	push   ecx
  426e0f:	push   ecx
  426e10:	lea    eax,[ebp-0x8]
  426e13:	mov    DWORD PTR [ebp-0x4],eax
  426e16:	mov    edx,DWORD PTR [ebp-0x4]
  426e19:	mov    eax,0xf88b0bcb
  426e1e:	mov    DWORD PTR [edx],eax
  426e20:	mov    edx,DWORD PTR [ebp-0x8]
  426e23:	cmp    edx,eax
  426e25:	jne    0x426e36
  426e27:	mov    eax,DWORD PTR [ebp+0x8]
  426e2a:	mov    BYTE PTR [ecx+0x9],0xf
  426e2e:	mov    BYTE PTR [eax+0x7],0x56
  426e32:	mov    BYTE PTR [ecx+0x6],0xe
  426e36:	mov    BYTE PTR [ecx+0x3],0x1f
  426e3a:	leave  
  426e3b:	ret    0x4
  426e3e:	push   ebp
  426e3f:	mov    ebp,esp
  426e41:	push   ecx
  426e42:	push   ecx
  426e43:	lea    eax,[ebp-0x8]
  426e46:	mov    DWORD PTR [ebp-0x4],eax
  426e49:	mov    edx,DWORD PTR [ebp-0x4]
  426e4c:	mov    eax,0x7e0da2f
  426e51:	mov    DWORD PTR [edx],eax
  426e53:	mov    edx,DWORD PTR [ebp-0x8]
  426e56:	cmp    edx,eax
  426e58:	jne    0x426e5e
  426e5a:	mov    BYTE PTR [ecx+0x7],0x56
  426e5e:	mov    eax,DWORD PTR [ebp+0x8]
  426e61:	mov    BYTE PTR [ecx+0x1],0x18
  426e65:	mov    BYTE PTR [eax+0x9],0x2f
  426e69:	leave  
  426e6a:	ret    0x4
  426e6d:	push   ebp
  426e6e:	mov    ebp,esp
  426e70:	push   ecx
  426e71:	push   ecx
  426e72:	lea    eax,[ebp-0x8]
  426e75:	mov    DWORD PTR [ebp-0x4],eax
  426e78:	push   esi
  426e79:	mov    esi,DWORD PTR [ebp-0x4]
  426e7c:	mov    eax,0x7060e3c
  426e81:	mov    DWORD PTR [esi],eax
  426e83:	mov    esi,DWORD PTR [ebp-0x8]
  426e86:	cmp    esi,eax
  426e88:	pop    esi
  426e89:	jne    0x426e95
  426e8b:	mov    BYTE PTR [edx+0x4],0x12
  426e8f:	mov    WORD PTR [ecx+0x3],0x121f
  426e95:	mov    BYTE PTR [edx],0x3e
  426e98:	leave  
  426e99:	ret    
  426e9a:	push   ebp
  426e9b:	mov    ebp,esp
  426e9d:	push   ecx
  426e9e:	push   ecx
  426e9f:	lea    eax,[ebp-0x8]
  426ea2:	mov    DWORD PTR [ebp-0x4],eax
  426ea5:	mov    edx,DWORD PTR [ebp-0x4]
  426ea8:	mov    eax,0xf8870b3f
  426ead:	mov    DWORD PTR [edx],eax
  426eaf:	mov    edx,DWORD PTR [ebp-0x8]
  426eb2:	cmp    edx,eax
  426eb4:	jne    0x426ec1
  426eb6:	mov    eax,DWORD PTR [ebp+0x8]
  426eb9:	mov    BYTE PTR [ecx+0x8],0xe
  426ebd:	mov    BYTE PTR [eax+0x1],0x18
  426ec1:	mov    BYTE PTR [ecx+0x5],0xa
  426ec5:	leave  
  426ec6:	ret    0x4
  426ec9:	push   esi
  426eca:	mov    ecx,edi
  426ecc:	call   0x426e9a
  426ed1:	mov    edx,edi
  426ed3:	mov    ecx,esi
  426ed5:	mov    BYTE PTR [esi],0x1e
  426ed8:	call   0x426e6d
  426edd:	push   esi
  426ede:	mov    ecx,edi
  426ee0:	mov    BYTE PTR [esi+0x5],0xa
  426ee4:	call   0x426e3e
  426ee9:	push   esi
  426eea:	mov    BYTE PTR [esi+0x6],0xe
  426eee:	call   0x426e0b
  426ef3:	mov    BYTE PTR [esi+0x2],0x15
  426ef7:	mov    edx,esi
  426ef9:	jmp    0x426ddb
  426efe:	push   ebp
  426eff:	mov    ebp,esp
  426f01:	push   ecx
  426f02:	mov    ecx,DWORD PTR [edx+0x194]
  426f08:	push   esi
  426f09:	mov    esi,DWORD PTR [ebp+0x8]
  426f0c:	mov    esi,DWORD PTR [esi]
  426f0e:	mov    DWORD PTR [ecx],esi
  426f10:	mov    ecx,DWORD PTR [edx+0x194]
  426f16:	mov    ecx,DWORD PTR [ecx]
  426f18:	mov    esi,DWORD PTR [edx+0x190]
  426f1e:	mov    DWORD PTR [esi],ecx
  426f20:	mov    eax,DWORD PTR [edx+0x194]
  426f26:	mov    ecx,DWORD PTR [eax]
  426f28:	mov    ecx,DWORD PTR [ecx+0x3c]
  426f2b:	add    ecx,DWORD PTR [eax]
  426f2d:	mov    DWORD PTR [ebp-0x4],0xf89ca5a5
  426f34:	mov    eax,DWORD PTR [ebp-0x4]
  426f37:	movzx  ecx,WORD PTR [ecx+0x16]
  426f3b:	xor    eax,0x75108ae
  426f40:	add    eax,0x3272f5
  426f45:	pop    esi
  426f46:	test   ecx,eax
  426f48:	je     0x426f56
  426f4a:	mov    eax,DWORD PTR [edx+0x1c8]
  426f50:	mov    DWORD PTR [eax],0xf89c85a2
  426f56:	leave  
  426f57:	ret    0x4
  426f5a:	push   ebp
  426f5b:	mov    ebp,esp
  426f5d:	sub    esp,0x70
  426f60:	and    DWORD PTR [ebp-0x20],0x0
  426f64:	mov    DWORD PTR [ebp-0x18],0xf89cb5a5
  426f6b:	mov    DWORD PTR [ebp-0x1c],0xf89c85e5
  426f72:	mov    DWORD PTR [ebp-0x2c],0xf89c85a1
  426f79:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  426f80:	mov    DWORD PTR [ebp-0x2c],0xf89f05a5
  426f87:	mov    eax,DWORD PTR [ebp+0x20]
  426f8a:	mov    eax,DWORD PTR [eax+0x194]
  426f90:	mov    DWORD PTR [ebp-0xc],eax
  426f93:	mov    eax,DWORD PTR [ebp+0x20]
  426f96:	push   ebx
  426f97:	push   esi
  426f98:	mov    esi,DWORD PTR [eax+0x190]
  426f9e:	mov    eax,DWORD PTR [ebp+0x20]
  426fa1:	mov    eax,DWORD PTR [eax+0x18c]
  426fa7:	mov    DWORD PTR [ebp-0x8],eax
  426faa:	mov    eax,DWORD PTR [eax]
  426fac:	push   edi
  426fad:	mov    DWORD PTR [ebp-0x4],esi
  426fb0:	test   eax,eax
  426fb2:	jne    0x426fbf
  426fb4:	push   DWORD PTR [ebp+0x1c]
  426fb7:	mov    edx,DWORD PTR [ebp+0x20]
  426fba:	call   0x426efe
  426fbf:	mov    eax,DWORD PTR [esi]
  426fc1:	mov    ebx,DWORD PTR [esi]
  426fc3:	add    ebx,DWORD PTR [eax+0x3c]
  426fc6:	mov    eax,DWORD PTR [ebp+0xc]
  426fc9:	mov    ecx,DWORD PTR [ebp-0x8]
  426fcc:	mov    ecx,DWORD PTR [ecx]
  426fce:	mov    esi,0x75108ae
  426fd3:	xor    eax,esi
  426fd5:	mov    edi,0x3272f5
  426fda:	add    eax,edi
  426fdc:	cmp    eax,ecx
  426fde:	jne    0x427216
  426fe4:	mov    eax,DWORD PTR [ebp-0xc]
  426fe7:	mov    eax,DWORD PTR [eax]
  426fe9:	mov    DWORD PTR [ebp-0x10],eax
  426fec:	mov    eax,DWORD PTR [ebx+0x50]
  426fef:	mov    DWORD PTR [ebp-0x68],eax
  426ff2:	mov    eax,DWORD PTR [ebp-0x18]
  426ff5:	xor    eax,esi
  426ff7:	add    eax,edi
  426ff9:	mov    DWORD PTR [ebp-0x64],eax
  426ffc:	mov    eax,DWORD PTR [ebp-0x14]
  426fff:	and    DWORD PTR [ebp-0x6c],0x0
  427003:	xor    eax,esi
  427005:	add    eax,edi
  427007:	mov    DWORD PTR [ebp-0x60],eax
  42700a:	lea    eax,[ebp-0x70]
  42700d:	push   eax
  42700e:	mov    eax,DWORD PTR [ebp+0x8]
  427011:	xor    eax,esi
  427013:	add    eax,edi
  427015:	push   eax
  427016:	mov    eax,DWORD PTR [ebp+0x20]
  427019:	add    eax,0xaa
  42701e:	push   eax
  42701f:	mov    eax,DWORD PTR [ebp+0x20]
  427022:	mov    eax,DWORD PTR [eax+0x198]
  427028:	mov    DWORD PTR [ebp-0x70],0x4
  42702f:	push   DWORD PTR [eax]
  427031:	mov    eax,DWORD PTR [ebp+0x10]
  427034:	call   eax
  427036:	mov    ecx,DWORD PTR [ebp-0xc]
  427039:	mov    ecx,DWORD PTR [ecx]
  42703b:	mov    edx,DWORD PTR [ebp-0x8]
  42703e:	mov    DWORD PTR [ebp-0x6c],eax
  427041:	mov    DWORD PTR [ebp+0x1c],eax
  427044:	mov    DWORD PTR [edx],ecx
  427046:	mov    ecx,DWORD PTR [ebp-0x4]
  427049:	mov    DWORD PTR [ecx],eax
  42704b:	mov    eax,DWORD PTR [ebx+0x50]
  42704e:	mov    DWORD PTR [ebp-0x68],eax
  427051:	mov    eax,DWORD PTR [ebp-0x1c]
  427054:	xor    eax,esi
  427056:	add    eax,edi
  427058:	mov    DWORD PTR [ebp-0x64],eax
  42705b:	lea    eax,[ebp-0x20]
  42705e:	mov    DWORD PTR [ebp-0x60],eax
  427061:	lea    eax,[ebp-0x70]
  427064:	push   eax
  427065:	mov    eax,DWORD PTR [ebp+0x8]
  427068:	xor    eax,esi
  42706a:	add    eax,edi
  42706c:	push   eax
  42706d:	mov    eax,DWORD PTR [ebp+0x20]
  427070:	add    eax,0xee
  427075:	push   eax
  427076:	mov    eax,DWORD PTR [ebp+0x20]
  427079:	mov    eax,DWORD PTR [eax+0x198]
  42707f:	mov    DWORD PTR [ebp-0x70],0x4
  427086:	push   DWORD PTR [eax]
  427088:	mov    eax,DWORD PTR [ebp+0x10]
  42708b:	call   eax
  42708d:	test   eax,eax
  42708f:	je     0x4270b4
  427091:	and    DWORD PTR [ebp+0xc],0x0
  427095:	cmp    DWORD PTR [ebx+0x50],0x0
  427099:	jbe    0x4270b4
  42709b:	mov    eax,DWORD PTR [ebp+0x1c]
  42709e:	mov    ecx,DWORD PTR [ebp-0x10]
  4270a1:	sub    ecx,eax
  4270a3:	mov    dl,BYTE PTR [ecx+eax*1]
  4270a6:	inc    DWORD PTR [ebp+0xc]
  4270a9:	mov    BYTE PTR [eax],dl
  4270ab:	mov    edx,DWORD PTR [ebp+0xc]
  4270ae:	inc    eax
  4270af:	cmp    edx,DWORD PTR [ebx+0x50]
  4270b2:	jb     0x4270a3
  4270b4:	mov    edx,DWORD PTR [ebp+0x1c]
  4270b7:	mov    ecx,DWORD PTR [edx+0x3c]
  4270ba:	add    ecx,edx
  4270bc:	mov    eax,DWORD PTR [ecx+0xa0]
  4270c2:	mov    ebx,DWORD PTR [ecx+0x28]
  4270c5:	add    eax,edx
  4270c7:	sub    edx,DWORD PTR [ebp-0x10]
  4270ca:	add    ebx,DWORD PTR [ebp+0x1c]
  4270cd:	mov    DWORD PTR [ebp+0xc],edx
  4270d0:	mov    DWORD PTR [ebp-0x2c],ecx
  4270d3:	mov    DWORD PTR [ebp-0x14],ebx
  4270d6:	mov    DWORD PTR [ebp-0x8],0x0
  4270dd:	jmp    0x427159
  4270df:	add    edx,0xfffffff8
  4270e2:	shr    edx,1
  4270e4:	mov    DWORD PTR [ebp-0x18],edx
  4270e7:	je     0x427145
  4270e9:	lea    edx,[eax+0x8]
  4270ec:	mov    DWORD PTR [ebp-0x4],edx
  4270ef:	mov    edx,DWORD PTR [ebp-0x18]
  4270f2:	mov    DWORD PTR [ebp-0x18],edx
  4270f5:	mov    edx,DWORD PTR [ebp-0x4]
  4270f8:	movzx  edx,WORD PTR [edx]
  4270fb:	mov    DWORD PTR [ebp-0x24],edx
  4270fe:	and    edx,0xfff
  427104:	mov    DWORD PTR [ebp-0x28],edx
  427107:	mov    edx,DWORD PTR [ebp-0x24]
  42710a:	shr    edx,0xc
  42710d:	add    edx,0xffcd8d0b
  427113:	xor    edx,esi
  427115:	cmp    edx,0xf89c85a0
  42711b:	jne    0x42713c
  42711d:	mov    edx,DWORD PTR [ebp-0x28]
  427120:	add    edx,DWORD PTR [ebp+0x1c]
  427123:	mov    ebx,DWORD PTR [eax]
  427125:	cmp    DWORD PTR [ebx+edx*1],0x0
  427129:	je     0x427139
  42712b:	mov    ecx,DWORD PTR [ebp+0xc]
  42712e:	add    ecx,DWORD PTR [ebx+edx*1]
  427131:	mov    ebx,DWORD PTR [eax]
  427133:	mov    DWORD PTR [edx+ebx*1],ecx
  427136:	mov    ecx,DWORD PTR [ebp-0x2c]
  427139:	mov    ebx,DWORD PTR [ebp-0x14]
  42713c:	add    DWORD PTR [ebp-0x4],0x2
  427140:	dec    DWORD PTR [ebp-0x18]
  427143:	jne    0x4270f5
  427145:	mov    edx,DWORD PTR [ebp-0xc]
  427148:	add    DWORD PTR [ebp-0x8],edx
  42714b:	mov    edx,DWORD PTR [ebp-0x8]
  42714e:	cmp    edx,DWORD PTR [ecx+0xa4]
  427154:	jae    0x427167
  427156:	add    eax,DWORD PTR [ebp-0xc]
  427159:	mov    edx,DWORD PTR [eax+0x4]
  42715c:	mov    DWORD PTR [ebp-0xc],edx
  42715f:	test   edx,edx
  427161:	jne    0x4270df
  427167:	mov    eax,DWORD PTR [ebp-0x10]
  42716a:	mov    DWORD PTR [ebp-0x6c],eax
  42716d:	mov    DWORD PTR [ebp-0x70],0x4
  427174:	mov    eax,DWORD PTR [ecx+0x50]
  427177:	mov    DWORD PTR [ebp-0x68],eax
  42717a:	mov    eax,DWORD PTR [ebp-0x1c]
  42717d:	xor    eax,esi
  42717f:	add    eax,edi
  427181:	mov    DWORD PTR [ebp-0x64],eax
  427184:	lea    eax,[ebp-0x20]
  427187:	mov    DWORD PTR [ebp-0x60],eax
  42718a:	lea    eax,[ebp-0x70]
  42718d:	push   eax
  42718e:	mov    eax,DWORD PTR [ebp+0x8]
  427191:	xor    eax,esi
  427193:	add    eax,edi
  427195:	push   eax
  427196:	mov    eax,DWORD PTR [ebp+0x20]
  427199:	add    eax,0xee
  42719e:	push   eax
  42719f:	mov    eax,DWORD PTR [ebp+0x20]
  4271a2:	mov    eax,DWORD PTR [eax+0x198]
  4271a8:	push   DWORD PTR [eax]
  4271aa:	mov    eax,DWORD PTR [ebp+0x10]
  4271ad:	call   eax
  4271af:	mov    eax,DWORD PTR [ebp+0x20]
  4271b2:	mov    eax,DWORD PTR [eax+0x180]
  4271b8:	add    eax,DWORD PTR [ebp+0xc]
  4271bb:	mov    ecx,DWORD PTR [ebp+0xc]
  4271be:	push   DWORD PTR [ebp+0x18]
  4271c1:	mov    DWORD PTR [eax],ecx
  4271c3:	push   DWORD PTR [ebp+0x14]
  4271c6:	push   DWORD PTR [ebp+0x1c]
  4271c9:	call   ebx
  4271cb:	mov    ecx,DWORD PTR [ebp+0xc]
  4271ce:	add    ecx,DWORD PTR [ebp+0x20]
  4271d1:	lea    eax,[ebp+0x4]
  4271d4:	mov    DWORD PTR [ebp+0x20],ecx
  4271d7:	mov    ecx,DWORD PTR [ebp+0x20]
  4271da:	mov    ecx,DWORD PTR [ebp+0x20]
  4271dd:	mov    edx,DWORD PTR [ecx+0x190]
  4271e3:	mov    ecx,DWORD PTR [ebp+0x20]
  4271e6:	mov    ecx,DWORD PTR [ecx+0x18c]
  4271ec:	mov    esi,DWORD PTR [ecx]
  4271ee:	cmp    DWORD PTR [eax],esi
  4271f0:	jb     0x427211
  4271f2:	mov    esi,DWORD PTR [edx]
  4271f4:	mov    edi,DWORD PTR [edx]
  4271f6:	mov    esi,DWORD PTR [esi+0x3c]
  4271f9:	lea    esi,[edi+esi*1+0x50]
  4271fd:	mov    edi,DWORD PTR [ecx]
  4271ff:	add    edi,DWORD PTR [esi]
  427201:	cmp    DWORD PTR [eax],edi
  427203:	jae    0x427211
  427205:	mov    esi,DWORD PTR [ecx]
  427207:	mov    ecx,DWORD PTR [eax]
  427209:	mov    edx,DWORD PTR [edx]
  42720b:	sub    ecx,esi
  42720d:	add    edx,ecx
  42720f:	mov    DWORD PTR [eax],edx
  427211:	mov    eax,DWORD PTR [ebp+0xc]
  427214:	jmp    0x427218
  427216:	xor    eax,eax
  427218:	pop    edi
  427219:	pop    esi
  42721a:	pop    ebx
  42721b:	leave  
  42721c:	ret    0x1c
  42721f:	push   ebp
  427220:	mov    ebp,esp
  427222:	sub    esp,0x1c
  427225:	push   esi
  427226:	mov    esi,eax
  427228:	mov    eax,DWORD PTR [ecx+0x190]
  42722e:	cmp    DWORD PTR [eax],0x0
  427231:	je     0x427341
  427237:	test   edx,edx
  427239:	je     0x427341
  42723f:	test   esi,esi
  427241:	je     0x427341
  427247:	mov    eax,DWORD PTR [esi+0x88]
  42724d:	test   eax,eax
  42724f:	je     0x42733c
  427255:	cmp    DWORD PTR [esi+0x8c],0x10
  42725c:	je     0x42733c
  427262:	cmp    DWORD PTR [esi+0x34],edx
  427265:	je     0x42733c
  42726b:	mov    esi,DWORD PTR [ecx+0x18c]
  427271:	and    DWORD PTR [ebp-0x10],0x0
  427275:	mov    ecx,edx
  427277:	sub    ecx,DWORD PTR [esi]
  427279:	add    eax,edx
  42727b:	movzx  edx,WORD PTR [eax+0xc]
  42727f:	mov    DWORD PTR [ebp-0x1c],ecx
  427282:	movzx  ecx,WORD PTR [eax+0xe]
  427286:	add    ecx,edx
  427288:	je     0x42733c
  42728e:	lea    ecx,[eax+0x14]
  427291:	push   ebx
  427292:	mov    DWORD PTR [ebp-0x18],ecx
  427295:	mov    esi,0x7fffffff
  42729a:	push   edi
  42729b:	test   DWORD PTR [ecx],esi
  42729d:	je     0x42731e
  42729f:	mov    edx,DWORD PTR [ecx]
  4272a1:	and    DWORD PTR [ebp-0xc],0x0
  4272a5:	and    edx,esi
  4272a7:	add    edx,eax
  4272a9:	movzx  edi,WORD PTR [edx+0xe]
  4272ad:	movzx  ebx,WORD PTR [edx+0xc]
  4272b1:	add    edi,ebx
  4272b3:	je     0x42731e
  4272b5:	lea    ecx,[edx+0x14]
  4272b8:	mov    DWORD PTR [ebp-0x14],ecx
  4272bb:	test   DWORD PTR [ecx],esi
  4272bd:	je     0x427300
  4272bf:	mov    ecx,DWORD PTR [ecx]
  4272c1:	and    DWORD PTR [ebp-0x8],0x0
  4272c5:	and    ecx,esi
  4272c7:	add    ecx,eax
  4272c9:	movzx  edi,WORD PTR [ecx+0xe]
  4272cd:	movzx  ebx,WORD PTR [ecx+0xc]
  4272d1:	add    edi,ebx
  4272d3:	je     0x427300
  4272d5:	lea    edi,[ecx+0x14]
  4272d8:	mov    DWORD PTR [ebp-0x4],edi
  4272db:	mov    edi,DWORD PTR [ebp-0x4]
  4272de:	mov    edi,DWORD PTR [edi]
  4272e0:	test   edi,edi
  4272e2:	je     0x4272ea
  4272e4:	mov    ebx,DWORD PTR [ebp-0x1c]
  4272e7:	add    DWORD PTR [edi+eax*1],ebx
  4272ea:	movzx  edi,WORD PTR [ecx+0xe]
  4272ee:	movzx  ebx,WORD PTR [ecx+0xc]
  4272f2:	inc    DWORD PTR [ebp-0x8]
  4272f5:	add    DWORD PTR [ebp-0x4],0x8
  4272f9:	add    edi,ebx
  4272fb:	cmp    DWORD PTR [ebp-0x8],edi
  4272fe:	jb     0x4272db
  427300:	movzx  edi,WORD PTR [edx+0xe]
  427304:	movzx  ebx,WORD PTR [edx+0xc]
  427308:	mov    ecx,DWORD PTR [ebp-0x14]
  42730b:	inc    DWORD PTR [ebp-0xc]
  42730e:	add    ecx,0x8
  427311:	add    edi,ebx
  427313:	mov    DWORD PTR [ebp-0x14],ecx
  427316:	cmp    DWORD PTR [ebp-0xc],edi
  427319:	jb     0x4272bb
  42731b:	mov    ecx,DWORD PTR [ebp-0x18]
  42731e:	movzx  edx,WORD PTR [eax+0xe]
  427322:	movzx  edi,WORD PTR [eax+0xc]
  427326:	inc    DWORD PTR [ebp-0x10]
  427329:	add    ecx,0x8
  42732c:	add    edx,edi
  42732e:	mov    DWORD PTR [ebp-0x18],ecx
  427331:	cmp    DWORD PTR [ebp-0x10],edx
  427334:	jb     0x42729b
  42733a:	pop    edi
  42733b:	pop    ebx
  42733c:	xor    eax,eax
  42733e:	inc    eax
  42733f:	jmp    0x427343
  427341:	xor    eax,eax
  427343:	pop    esi
  427344:	leave  
  427345:	ret    
  427346:	push   ebp
  427347:	mov    ebp,esp
  427349:	mov    ecx,DWORD PTR [ecx+0x190]
  42734f:	mov    eax,DWORD PTR [ebp+0xc]
  427352:	sub    esp,0x10
  427355:	push   ebx
  427356:	xor    ebx,ebx
  427358:	push   esi
  427359:	push   edi
  42735a:	cmp    DWORD PTR [ecx],ebx
  42735c:	je     0x4273e4
  427362:	cmp    eax,ebx
  427364:	je     0x4273e4
  427366:	cmp    DWORD PTR [eax+0x78],ebx
  427369:	jne    0x427370
  42736b:	xor    eax,eax
  42736d:	inc    eax
  42736e:	jmp    0x4273e6
  427370:	mov    eax,DWORD PTR [eax+0x78]
  427373:	add    eax,DWORD PTR [ebp+0x8]
  427376:	mov    ecx,DWORD PTR [eax+0x1c]
  427379:	mov    edx,DWORD PTR [eax+0x24]
  42737c:	mov    esi,DWORD PTR [eax+0x14]
  42737f:	mov    edi,DWORD PTR [eax+0x18]
  427382:	add    ecx,DWORD PTR [ebp+0x8]
  427385:	add    edx,DWORD PTR [ebp+0x8]
  427388:	mov    DWORD PTR [ebp-0x4],esi
  42738b:	cmp    esi,edi
  42738d:	ja     0x427392
  42738f:	mov    DWORD PTR [ebp-0x4],edi
  427392:	mov    DWORD PTR [ebp-0x8],ebx
  427395:	cmp    DWORD PTR [ebp-0x4],ebx
  427398:	jbe    0x42736b
  42739a:	cmp    ebx,DWORD PTR [eax+0x14]
  42739d:	jae    0x4273a5
  42739f:	movzx  esi,WORD PTR [edx+ebx*2]
  4273a3:	jmp    0x4273a7
  4273a5:	mov    esi,ebx
  4273a7:	lea    esi,[ecx+esi*4]
  4273aa:	mov    edi,DWORD PTR [esi]
  4273ac:	test   edi,edi
  4273ae:	je     0x4273d9
  4273b0:	add    edi,DWORD PTR [ebp+0x8]
  4273b3:	mov    DWORD PTR [ebp-0x10],edi
  4273b6:	cmp    edi,eax
  4273b8:	jbe    0x4273ca
  4273ba:	mov    ebx,DWORD PTR [ebp+0xc]
  4273bd:	mov    ebx,DWORD PTR [ebx+0x7c]
  4273c0:	add    ebx,eax
  4273c2:	cmp    edi,ebx
  4273c4:	jae    0x4273ca
  4273c6:	mov    esi,DWORD PTR [esi]
  4273c8:	jmp    0x4273d2
  4273ca:	sub    edi,DWORD PTR [ebp+0x8]
  4273cd:	mov    DWORD PTR [esi],edi
  4273cf:	mov    esi,DWORD PTR [ebp-0x10]
  4273d2:	test   esi,esi
  4273d4:	je     0x4273e4
  4273d6:	mov    ebx,DWORD PTR [ebp-0x8]
  4273d9:	inc    ebx
  4273da:	mov    DWORD PTR [ebp-0x8],ebx
  4273dd:	cmp    ebx,DWORD PTR [ebp-0x4]
  4273e0:	jb     0x42739a
  4273e2:	jmp    0x42736b
  4273e4:	xor    eax,eax
  4273e6:	pop    edi
  4273e7:	pop    esi
  4273e8:	pop    ebx
  4273e9:	leave  
  4273ea:	ret    0x8
  4273ed:	push   ebp
  4273ee:	mov    ebp,esp
  4273f0:	sub    esp,0x2c
  4273f3:	mov    edx,0xf89c85a5
  4273f8:	mov    DWORD PTR [ebp-0x4],edx
  4273fb:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  427402:	mov    eax,DWORD PTR [ebp-0x4]
  427405:	mov    ecx,DWORD PTR [ebp-0x4]
  427408:	mov    ecx,DWORD PTR [ebp-0x4]
  42740b:	mov    ecx,DWORD PTR [ebp-0x4]
  42740e:	mov    ecx,DWORD PTR [ebp-0x4]
  427411:	mov    ecx,DWORD PTR [ebp-0x4]
  427414:	push   ebx
  427415:	mov    ebx,DWORD PTR [ebp+0x10]
  427418:	push   esi
  427419:	mov    esi,0x75108ae
  42741e:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  427425:	mov    ecx,DWORD PTR [ebp-0x4]
  427428:	mov    ebx,DWORD PTR [ebx+0x190]
  42742e:	push   edi
  42742f:	mov    edi,0x3272f5
  427434:	xor    ecx,esi
  427436:	xor    eax,esi
  427438:	add    eax,edi
  42743a:	add    ecx,edi
  42743c:	mov    DWORD PTR [ebp-0x18],eax
  42743f:	cmp    ecx,DWORD PTR [ebx]
  427441:	je     0x4276c2
  427447:	mov    ebx,DWORD PTR [ebp-0x4]
  42744a:	mov    ecx,DWORD PTR [ebp+0xc]
  42744d:	xor    ebx,esi
  42744f:	add    ebx,edi
  427451:	cmp    ebx,ecx
  427453:	je     0x4276c2
  427459:	mov    ebx,DWORD PTR [ebp-0x4]
  42745c:	mov    ecx,DWORD PTR [ecx+0x80]
  427462:	xor    ebx,esi
  427464:	add    ebx,edi
  427466:	cmp    ecx,ebx
  427468:	je     0x4276bd
  42746e:	add    ecx,DWORD PTR [ebp+0x8]
  427471:	mov    DWORD PTR [ebp-0x2c],ecx
  427474:	mov    ebx,edx
  427476:	xor    ebx,esi
  427478:	add    ebx,edi
  42747a:	mov    DWORD PTR [ebp-0x10],ebx
  42747d:	mov    ebx,DWORD PTR [ebp-0x10]
  427480:	cmp    ebx,edx
  427482:	je     0x427496
  427484:	mov    edx,DWORD PTR [ebp-0x10]
  427487:	mov    ebx,DWORD PTR [ebp-0x4]
  42748a:	imul   edx,edx,0x14
  42748d:	xor    ebx,esi
  42748f:	add    ebx,edi
  427491:	cmp    DWORD PTR [edx+ecx*1],ebx
  427494:	jne    0x4274ad
  427496:	mov    edx,DWORD PTR [ebp-0x10]
  427499:	mov    ebx,DWORD PTR [ebp-0x4]
  42749c:	imul   edx,edx,0x14
  42749f:	xor    ebx,esi
  4274a1:	add    ebx,edi
  4274a3:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  4274a7:	je     0x4276af
  4274ad:	mov    eax,DWORD PTR [ebp-0x4]
  4274b0:	mov    ebx,DWORD PTR [ebp-0x4]
  4274b3:	mov    eax,DWORD PTR [ebp-0x10]
  4274b6:	imul   eax,eax,0x14
  4274b9:	add    eax,ecx
  4274bb:	mov    ecx,DWORD PTR [eax+0x10]
  4274be:	add    ecx,DWORD PTR [ebp+0x8]
  4274c1:	xor    ebx,esi
  4274c3:	mov    DWORD PTR [ebp-0x1c],ecx
  4274c6:	mov    ecx,DWORD PTR [ebp-0x4]
  4274c9:	mov    edx,DWORD PTR [ebp-0x4]
  4274cc:	xor    ecx,esi
  4274ce:	add    ecx,edi
  4274d0:	xor    edx,esi
  4274d2:	mov    DWORD PTR [ebp-0x24],ecx
  4274d5:	mov    ecx,DWORD PTR [eax]
  4274d7:	add    edx,edi
  4274d9:	add    ebx,edi
  4274db:	cmp    ecx,edx
  4274dd:	je     0x4274e5
  4274df:	add    ecx,DWORD PTR [ebp+0x8]
  4274e2:	mov    DWORD PTR [ebp-0x24],ecx
  4274e5:	mov    ecx,DWORD PTR [ebp-0x4]
  4274e8:	xor    ecx,esi
  4274ea:	add    ecx,DWORD PTR [eax+0xc]
  4274ed:	mov    eax,DWORD PTR [ebp+0x8]
  4274f0:	lea    eax,[ecx+eax*1+0x3272f5]
  4274f7:	mov    DWORD PTR [ebp+0xc],eax
  4274fa:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  427501:	mov    eax,DWORD PTR [ebp+0x10]
  427504:	push   DWORD PTR [ebp+0xc]
  427507:	mov    eax,DWORD PTR [eax+0x1e0]
  42750d:	call   DWORD PTR [eax]
  42750f:	mov    ecx,DWORD PTR [ebp-0x4]
  427512:	xor    ecx,esi
  427514:	add    ecx,edi
  427516:	mov    DWORD PTR [ebp-0xc],eax
  427519:	cmp    ecx,eax
  42751b:	jne    0x42752f
  42751d:	mov    eax,DWORD PTR [ebp+0x10]
  427520:	push   DWORD PTR [ebp+0xc]
  427523:	mov    eax,DWORD PTR [eax+0x1e0]
  427529:	call   DWORD PTR [eax+0xc]
  42752c:	mov    DWORD PTR [ebp-0xc],eax
  42752f:	mov    DWORD PTR [ebp-0x20],0x7f661b2a
  427536:	mov    DWORD PTR [ebp-0x20],0xf89c985a
  42753d:	mov    eax,DWORD PTR [ebp-0x4]
  427540:	xor    eax,esi
  427542:	add    eax,edi
  427544:	cmp    eax,DWORD PTR [ebp-0xc]
  427547:	jne    0x42756c
  427549:	mov    eax,DWORD PTR [ebp-0x8]
  42754c:	mov    ecx,DWORD PTR [ebp-0x20]
  42754f:	xor    eax,esi
  427551:	xor    ecx,esi
  427553:	lea    ebx,[ebx+eax*1+0x3272f5]
  42755a:	mov    eax,DWORD PTR [ebp+0x10]
  42755d:	mov    eax,DWORD PTR [eax+0x1e0]
  427563:	add    ecx,edi
  427565:	imul   ecx,ebx
  427568:	push   ecx
  427569:	call   DWORD PTR [eax+0x24]
  42756c:	mov    eax,DWORD PTR [ebp-0x4]
  42756f:	xor    eax,esi
  427571:	add    eax,edi
  427573:	cmp    eax,DWORD PTR [ebp-0xc]
  427576:	jne    0x427587
  427578:	mov    eax,DWORD PTR [ebp-0x28]
  42757b:	xor    eax,esi
  42757d:	add    eax,edi
  42757f:	cmp    ebx,eax
  427581:	jbe    0x427501
  427587:	mov    eax,DWORD PTR [ebp-0x4]
  42758a:	xor    eax,esi
  42758c:	add    eax,edi
  42758e:	cmp    eax,DWORD PTR [ebp-0xc]
  427591:	jne    0x4275aa
  427593:	mov    eax,DWORD PTR [ebp-0x8]
  427596:	mov    ecx,DWORD PTR [ebp-0x18]
  427599:	xor    eax,esi
  42759b:	lea    eax,[ecx+eax*1+0x3272f5]
  4275a2:	mov    DWORD PTR [ebp-0x18],eax
  4275a5:	jmp    0x427699
  4275aa:	mov    DWORD PTR [ebp-0x14],0x1121b2d
  4275b1:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  4275b8:	mov    ebx,DWORD PTR [ebp-0x4]
  4275bb:	xor    ebx,esi
  4275bd:	add    ebx,edi
  4275bf:	jmp    0x427686
  4275c4:	mov    eax,DWORD PTR [ebp-0x4]
  4275c7:	xor    eax,esi
  4275c9:	add    eax,edi
  4275cb:	mov    DWORD PTR [ebp-0x14],eax
  4275ce:	mov    eax,DWORD PTR [ebp-0x4]
  4275d1:	xor    eax,esi
  4275d3:	add    eax,edi
  4275d5:	mov    DWORD PTR [ebp+0xc],eax
  4275d8:	mov    ecx,DWORD PTR [ebp-0x4]
  4275db:	mov    eax,DWORD PTR [ebp-0x24]
  4275de:	xor    ecx,esi
  4275e0:	add    ecx,edi
  4275e2:	cmp    ecx,eax
  4275e4:	je     0x4275ec
  4275e6:	mov    eax,DWORD PTR [eax+ebx*4]
  4275e9:	mov    DWORD PTR [ebp-0x14],eax
  4275ec:	mov    eax,DWORD PTR [ebp-0x1c]
  4275ef:	mov    eax,DWORD PTR [eax+ebx*4]
  4275f2:	mov    DWORD PTR [ebp+0xc],eax
  4275f5:	mov    eax,DWORD PTR [ebp-0x4]
  4275f8:	mov    ecx,DWORD PTR [ebp-0x14]
  4275fb:	xor    eax,esi
  4275fd:	add    eax,edi
  4275ff:	cmp    eax,ecx
  427601:	je     0x42762c
  427603:	mov    eax,DWORD PTR [ebp-0x4]
  427606:	mov    ecx,DWORD PTR [ebp-0x14]
  427609:	xor    eax,esi
  42760b:	add    eax,edi
  42760d:	shr    ecx,0x1f
  427610:	cmp    eax,ecx
  427612:	je     0x42762c
  427614:	mov    ecx,DWORD PTR [ebp-0x14]
  427617:	mov    eax,DWORD PTR [ebp+0x10]
  42761a:	mov    eax,DWORD PTR [eax+0x1e0]
  427620:	movzx  ecx,cx
  427623:	push   ecx
  427624:	push   DWORD PTR [ebp-0xc]
  427627:	call   DWORD PTR [eax+0x8]
  42762a:	jmp    0x427645
  42762c:	mov    eax,DWORD PTR [ebp+0xc]
  42762f:	add    eax,DWORD PTR [ebp+0x8]
  427632:	mov    ecx,DWORD PTR [ebp+0x10]
  427635:	mov    ecx,DWORD PTR [ecx+0x1e0]
  42763b:	add    eax,0x2
  42763e:	push   eax
  42763f:	push   DWORD PTR [ebp-0xc]
  427642:	call   DWORD PTR [ecx+0x8]
  427645:	mov    DWORD PTR [ebp+0xc],eax
  427648:	mov    eax,DWORD PTR [ebp-0x4]
  42764b:	mov    ecx,DWORD PTR [ebp+0xc]
  42764e:	xor    eax,esi
  427650:	add    eax,edi
  427652:	cmp    eax,ecx
  427654:	mov    eax,DWORD PTR [ebp-0x8]
  427657:	jne    0x42766a
  427659:	mov    ecx,DWORD PTR [ebp-0x18]
  42765c:	xor    eax,esi
  42765e:	lea    eax,[ecx+eax*1+0x3272f5]
  427665:	mov    DWORD PTR [ebp-0x18],eax
  427668:	jmp    0x42767a
  42766a:	mov    ecx,DWORD PTR [ebp+0xc]
  42766d:	xor    eax,esi
  42766f:	add    eax,edi
  427671:	imul   eax,ecx
  427674:	mov    ecx,DWORD PTR [ebp-0x1c]
  427677:	mov    DWORD PTR [ecx+ebx*4],eax
  42767a:	mov    eax,DWORD PTR [ebp-0x8]
  42767d:	xor    eax,esi
  42767f:	lea    ebx,[ebx+eax*1+0x3272f5]
  427686:	mov    eax,DWORD PTR [ebp-0x4]
  427689:	mov    ecx,DWORD PTR [ebp-0x1c]
  42768c:	xor    eax,esi
  42768e:	add    eax,edi
  427690:	cmp    DWORD PTR [ecx+ebx*4],eax
  427693:	jne    0x4275c4
  427699:	mov    edx,DWORD PTR [ebp-0x10]
  42769c:	mov    eax,DWORD PTR [ebp-0x18]
  42769f:	mov    ecx,DWORD PTR [ebp-0x2c]
  4276a2:	sub    edx,0x3272f4
  4276a8:	xor    edx,esi
  4276aa:	jmp    0x427474
  4276af:	mov    ecx,DWORD PTR [ebp-0x4]
  4276b2:	xor    ecx,esi
  4276b4:	add    ecx,edi
  4276b6:	cmp    eax,ecx
  4276b8:	mov    eax,DWORD PTR [ebp-0x4]
  4276bb:	jne    0x4276c5
  4276bd:	mov    eax,DWORD PTR [ebp-0x8]
  4276c0:	jmp    0x4276c5
  4276c2:	mov    eax,DWORD PTR [ebp-0x4]
  4276c5:	xor    eax,esi
  4276c7:	add    eax,edi
  4276c9:	pop    edi
  4276ca:	pop    esi
  4276cb:	pop    ebx
  4276cc:	leave  
  4276cd:	ret    0xc
  4276d0:	push   ebp
  4276d1:	mov    ebp,esp
  4276d3:	sub    esp,0x28
  4276d6:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  4276dd:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  4276e4:	mov    eax,DWORD PTR [ebp+0xc]
  4276e7:	mov    DWORD PTR [ebp+0xc],eax
  4276ea:	push   esi
  4276eb:	mov    eax,eax
  4276ed:	mov    eax,DWORD PTR [ebp-0x4]
  4276f0:	mov    esi,DWORD PTR [ebp+0x8]
  4276f3:	mov    ecx,0x75108ae
  4276f8:	xor    eax,ecx
  4276fa:	mov    edx,0x3272f5
  4276ff:	add    eax,edx
  427701:	cmp    esi,eax
  427703:	je     0x42782a
  427709:	mov    eax,DWORD PTR [ebp+0x8]
  42770c:	mov    esi,DWORD PTR [ebp+0x8]
  42770f:	add    esi,DWORD PTR [eax+0x3c]
  427712:	push   edi
  427713:	mov    DWORD PTR [ebp+0xc],esi
  427716:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  42771d:	mov    eax,DWORD PTR [ebp-0x1c]
  427720:	mov    esi,DWORD PTR [ebp-0x4]
  427723:	mov    edi,DWORD PTR [ebp+0xc]
  427726:	xor    esi,ecx
  427728:	xor    eax,ecx
  42772a:	add    esi,edx
  42772c:	cmp    DWORD PTR [edi+eax*8+0x1939820],esi
  427733:	je     0x427824
  427739:	mov    esi,DWORD PTR [ebp+0xc]
  42773c:	mov    eax,DWORD PTR [ebp+0x8]
  42773f:	add    eax,DWORD PTR [esi+0xa0]
  427745:	mov    esi,DWORD PTR [ebp+0x8]
  427748:	mov    edi,DWORD PTR [ebp+0xc]
  42774b:	sub    esi,DWORD PTR [edi+0x34]
  42774e:	mov    edi,DWORD PTR [ebp-0x4]
  427751:	xor    edi,ecx
  427753:	add    edi,edx
  427755:	mov    DWORD PTR [ebp-0x24],esi
  427758:	cmp    esi,edi
  42775a:	je     0x427824
  427760:	mov    esi,DWORD PTR [ebp-0x4]
  427763:	xor    esi,ecx
  427765:	add    esi,edx
  427767:	mov    DWORD PTR [ebp-0x8],esi
  42776a:	push   ebx
  42776b:	mov    DWORD PTR [ebp-0x10],0xf89c85a0
  427772:	jmp    0x42780e
  427777:	mov    esi,DWORD PTR [ebp-0x4]
  42777a:	xor    esi,ecx
  42777c:	lea    edi,[ebx-0x8]
  42777f:	add    esi,edx
  427781:	shr    edi,1
  427783:	cmp    esi,edi
  427785:	jae    0x4277f4
  427787:	sub    edi,esi
  427789:	lea    ebx,[eax+esi*2+0x8]
  42778d:	mov    DWORD PTR [ebp-0x18],edi
  427790:	movzx  esi,WORD PTR [ebx]
  427793:	and    esi,0xfff
  427799:	mov    DWORD PTR [ebp-0x14],esi
  42779c:	mov    edi,DWORD PTR [ebp-0x14]
  42779f:	mov    esi,DWORD PTR [eax]
  4277a1:	sub    esi,edx
  4277a3:	add    edi,esi
  4277a5:	movzx  esi,WORD PTR [ebx]
  4277a8:	shr    esi,0xc
  4277ab:	xor    edi,ecx
  4277ad:	mov    DWORD PTR [ebp-0x20],edi
  4277b0:	mov    DWORD PTR [ebp-0x14],esi
  4277b3:	mov    esi,DWORD PTR [ebp-0x20]
  4277b6:	mov    edi,DWORD PTR [ebp+0x8]
  4277b9:	xor    esi,ecx
  4277bb:	lea    esi,[esi+edi*1+0x3272f5]
  4277c2:	mov    DWORD PTR [ebp-0x20],esi
  4277c5:	mov    esi,DWORD PTR [ebp-0x10]
  4277c8:	mov    edi,DWORD PTR [ebp-0x14]
  4277cb:	xor    esi,ecx
  4277cd:	add    esi,edx
  4277cf:	cmp    edi,esi
  4277d1:	jne    0x4277e9
  4277d3:	mov    esi,DWORD PTR [ebp-0x10]
  4277d6:	mov    edi,DWORD PTR [ebp-0x14]
  4277d9:	xor    esi,ecx
  4277db:	add    esi,edx
  4277dd:	cmp    edi,esi
  4277df:	jne    0x4277e9
  4277e1:	mov    esi,DWORD PTR [ebp-0x20]
  4277e4:	mov    edi,DWORD PTR [ebp-0x24]
  4277e7:	add    DWORD PTR [esi],edi
  4277e9:	add    ebx,0x2
  4277ec:	dec    DWORD PTR [ebp-0x18]
  4277ef:	jne    0x427790
  4277f1:	mov    ebx,DWORD PTR [ebp-0xc]
  4277f4:	add    DWORD PTR [ebp-0x8],ebx
  4277f7:	mov    esi,DWORD PTR [ebp-0x1c]
  4277fa:	mov    edi,DWORD PTR [ebp-0x8]
  4277fd:	mov    ebx,DWORD PTR [ebp+0xc]
  427800:	xor    esi,ecx
  427802:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939824]
  427809:	jae    0x427823
  42780b:	add    eax,DWORD PTR [ebp-0xc]
  42780e:	mov    esi,DWORD PTR [ebp-0x4]
  427811:	mov    ebx,DWORD PTR [eax+0x4]
  427814:	xor    esi,ecx
  427816:	add    esi,edx
  427818:	mov    DWORD PTR [ebp-0xc],ebx
  42781b:	cmp    ebx,esi
  42781d:	jne    0x427777
  427823:	pop    ebx
  427824:	mov    eax,DWORD PTR [ebp-0x28]
  427827:	pop    edi
  427828:	jmp    0x42782d
  42782a:	mov    eax,DWORD PTR [ebp-0x4]
  42782d:	xor    eax,ecx
  42782f:	add    eax,edx
  427831:	pop    esi
  427832:	leave  
  427833:	ret    0x8
  427836:	push   ebp
  427837:	mov    ebp,esp
  427839:	sub    esp,0xd8
  42783f:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  427846:	mov    DWORD PTR [ebp-0x24],0xf89c85a2
  42784d:	mov    eax,DWORD PTR [ebp-0x4]
  427850:	push   ebx
  427851:	push   esi
  427852:	mov    esi,0x75108ae
  427857:	xor    eax,esi
  427859:	push   edi
  42785a:	mov    edi,0x3272f5
  42785f:	add    eax,edi
  427861:	mov    DWORD PTR [ebp-0x18],eax
  427864:	mov    eax,DWORD PTR [ebp-0x4]
  427867:	xor    eax,esi
  427869:	add    eax,edi
  42786b:	mov    DWORD PTR [ebp-0x8],eax
  42786e:	mov    ebx,DWORD PTR [ebp+0x20]
  427871:	mov    eax,DWORD PTR [ebp-0x1c]
  427874:	mov    ecx,DWORD PTR [ebp-0x1c]
  427877:	xor    eax,ecx
  427879:	mov    DWORD PTR [ebp-0x1c],eax
  42787c:	add    DWORD PTR [ebp-0x1c],0xf89cb5a5
  427883:	mov    eax,DWORD PTR [ebp-0xc]
  427886:	mov    ecx,DWORD PTR [ebp-0xc]
  427889:	xor    eax,ecx
  42788b:	mov    DWORD PTR [ebp-0xc],eax
  42788e:	add    DWORD PTR [ebp-0xc],0xf89c85e5
  427895:	mov    eax,DWORD PTR [ebp-0x10]
  427898:	mov    ecx,DWORD PTR [ebp-0x10]
  42789b:	xor    eax,ecx
  42789d:	mov    DWORD PTR [ebp-0x10],eax
  4278a0:	add    DWORD PTR [ebp-0x10],0xf89c85a1
  4278a7:	mov    eax,DWORD PTR [ebp-0x28]
  4278aa:	mov    ecx,DWORD PTR [ebp-0x28]
  4278ad:	xor    eax,ecx
  4278af:	mov    DWORD PTR [ebp-0x28],eax
  4278b2:	add    DWORD PTR [ebp-0x28],0xf89f05a5
  4278b9:	mov    DWORD PTR [ebp+0x20],0xf89ceff6
  4278c0:	mov    eax,DWORD PTR [ebp+0x8]
  4278c3:	test   eax,eax
  4278c5:	je     0x427d4c
  4278cb:	mov    eax,DWORD PTR [ebp+0xc]
  4278ce:	test   eax,eax
  4278d0:	je     0x427d4c
  4278d6:	mov    eax,DWORD PTR [ebp+0x18]
  4278d9:	test   eax,eax
  4278db:	je     0x427d4c
  4278e1:	mov    eax,DWORD PTR [ebp+0x20]
  4278e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4278e7:	xor    eax,0x8ae
  4278ec:	add    eax,0x72f5
  4278f1:	cmp    WORD PTR [ecx],ax
  4278f4:	jne    0x427d4c
  4278fa:	mov    eax,DWORD PTR [ebp-0x4]
  4278fd:	xor    eax,esi
  4278ff:	add    eax,edi
  427901:	mov    DWORD PTR [ebp-0x30],eax
  427904:	mov    eax,DWORD PTR [ebp-0x4]
  427907:	mov    ecx,DWORD PTR [ebp+0x8]
  42790a:	mov    eax,DWORD PTR [ebp+0x8]
  42790d:	add    eax,DWORD PTR [ecx+0x3c]
  427910:	mov    DWORD PTR [ebp+0xc],eax
  427913:	mov    eax,DWORD PTR [eax+0x50]
  427916:	test   eax,eax
  427918:	je     0x427d4c
  42791e:	mov    DWORD PTR [ebp-0x2c],0xf88c85a5
  427925:	mov    eax,DWORD PTR [ebp-0x2c]
  427928:	xor    eax,esi
  42792a:	add    eax,edi
  42792c:	mov    DWORD PTR [ebp-0x2c],eax
  42792f:	mov    eax,DWORD PTR [ebp-0x4]
  427932:	mov    eax,DWORD PTR [ebx+0x190]
  427938:	mov    ecx,DWORD PTR [eax]
  42793a:	mov    ecx,DWORD PTR [ecx+0x3c]
  42793d:	add    ecx,DWORD PTR [eax]
  42793f:	mov    eax,DWORD PTR [ebp-0x4]
  427942:	mov    eax,DWORD PTR [ebx+0x18c]
  427948:	mov    edx,DWORD PTR [eax]
  42794a:	mov    DWORD PTR [ebp-0x20],ecx
  42794d:	mov    DWORD PTR [ebp+0x20],edx
  427950:	cmp    edx,edx
  427952:	jne    0x427986
  427954:	mov    eax,DWORD PTR [ebx+0x1e0]
  42795a:	lea    edx,[ebp-0x18]
  42795d:	push   edx
  42795e:	mov    edx,DWORD PTR [ebp-0xc]
  427961:	xor    edx,esi
  427963:	add    edx,edi
  427965:	push   edx
  427966:	push   DWORD PTR [ecx+0x50]
  427969:	push   DWORD PTR [ebp+0x20]
  42796c:	call   DWORD PTR [eax+0x1c]
  42796f:	mov    eax,DWORD PTR [ebp-0x20]
  427972:	mov    ecx,DWORD PTR [eax+0x54]
  427975:	mov    eax,DWORD PTR [eax+0x50]
  427978:	sub    eax,ecx
  42797a:	add    ecx,DWORD PTR [ebp+0x20]
  42797d:	push   ecx
  42797e:	call   0x4282e9
  427983:	mov    edx,DWORD PTR [ebp+0x20]
  427986:	mov    eax,DWORD PTR [ebx+0x194]
  42798c:	mov    DWORD PTR [eax],edx
  42798e:	mov    eax,DWORD PTR [ebp+0xc]
  427991:	push   DWORD PTR [eax+0x54]
  427994:	push   DWORD PTR [ebp+0x8]
  427997:	push   edx
  427998:	call   0x4281df
  42799d:	mov    ecx,DWORD PTR [ebp+0x20]
  4279a0:	mov    eax,DWORD PTR [ecx+0x3c]
  4279a3:	add    eax,ecx
  4279a5:	movzx  ecx,WORD PTR [eax+0x14]
  4279a9:	lea    ecx,[ecx+eax*1+0x18]
  4279ad:	mov    DWORD PTR [ebp+0x18],ecx
  4279b0:	mov    ecx,DWORD PTR [ebp-0x4]
  4279b3:	movzx  edx,WORD PTR [eax+0x6]
  4279b7:	xor    ecx,esi
  4279b9:	add    ecx,edi
  4279bb:	mov    DWORD PTR [ebp+0xc],eax
  4279be:	cmp    edx,ecx
  4279c0:	je     0x427a6d
  4279c6:	mov    ecx,DWORD PTR [ebp-0x4]
  4279c9:	xor    ecx,esi
  4279cb:	add    ecx,edi
  4279cd:	mov    DWORD PTR [ebp-0x8],ecx
  4279d0:	mov    ecx,DWORD PTR [ebp-0x24]
  4279d3:	movzx  edx,WORD PTR [eax+0x6]
  4279d7:	xor    ecx,esi
  4279d9:	sub    edx,ecx
  4279db:	sub    edx,edi
  4279dd:	cmp    DWORD PTR [ebp-0x8],edx
  4279e0:	ja     0x427a6d
  4279e6:	mov    edx,DWORD PTR [ebp+0x18]
  4279e9:	add    edx,0x8
  4279ec:	mov    DWORD PTR [ebp+0x18],edx
  4279ef:	jmp    0x4279f4
  4279f1:	mov    edx,DWORD PTR [ebp+0x18]
  4279f4:	mov    eax,DWORD PTR [eax+0x38]
  4279f7:	lea    ecx,[eax-0x1]
  4279fa:	mov    DWORD PTR [ebp-0x38],eax
  4279fd:	mov    eax,DWORD PTR [edx]
  4279ff:	test   eax,ecx
  427a01:	je     0x427a0a
  427a03:	not    ecx
  427a05:	and    eax,ecx
  427a07:	add    eax,DWORD PTR [ebp-0x38]
  427a0a:	mov    ecx,DWORD PTR [edx+0x4]
  427a0d:	add    ecx,DWORD PTR [ebp+0x20]
  427a10:	push   ecx
  427a11:	call   0x4282e9
  427a16:	mov    edx,DWORD PTR [ebp-0x4]
  427a19:	mov    eax,DWORD PTR [ebp+0x18]
  427a1c:	mov    ecx,DWORD PTR [eax+0x8]
  427a1f:	xor    edx,esi
  427a21:	add    edx,edi
  427a23:	cmp    ecx,edx
  427a25:	je     0x427a3e
  427a27:	push   ecx
  427a28:	mov    ecx,DWORD PTR [ebp+0x8]
  427a2b:	add    ecx,DWORD PTR [eax+0xc]
  427a2e:	mov    eax,DWORD PTR [eax+0x4]
  427a31:	add    eax,DWORD PTR [ebp+0x20]
  427a34:	push   ecx
  427a35:	push   eax
  427a36:	call   0x4281df
  427a3b:	mov    eax,DWORD PTR [ebp+0x18]
  427a3e:	mov    ecx,DWORD PTR [ebp-0x24]
  427a41:	mov    edx,DWORD PTR [ebp-0x8]
  427a44:	add    eax,0x28
  427a47:	xor    ecx,esi
  427a49:	lea    ecx,[edx+ecx*1+0x3272f5]
  427a50:	mov    edx,DWORD PTR [ebp+0xc]
  427a53:	mov    DWORD PTR [ebp+0x18],eax
  427a56:	mov    eax,DWORD PTR [ebp-0x24]
  427a59:	movzx  edx,WORD PTR [edx+0x6]
  427a5d:	xor    eax,esi
  427a5f:	sub    edx,eax
  427a61:	mov    eax,DWORD PTR [ebp+0xc]
  427a64:	sub    edx,edi
  427a66:	mov    DWORD PTR [ebp-0x8],ecx
  427a69:	cmp    ecx,edx
  427a6b:	jbe    0x4279f1
  427a6d:	mov    edx,DWORD PTR [ebx+0x18c]
  427a73:	mov    ecx,DWORD PTR [ebp+0x20]
  427a76:	cmp    ecx,DWORD PTR [edx]
  427a78:	jne    0x427aa1
  427a7a:	mov    eax,DWORD PTR [ebx+0x1e0]
  427a80:	lea    edx,[ebp-0x18]
  427a83:	push   edx
  427a84:	mov    edx,DWORD PTR [ebp-0x10]
  427a87:	xor    edx,esi
  427a89:	add    edx,edi
  427a8b:	push   edx
  427a8c:	mov    edx,DWORD PTR [ebp-0x20]
  427a8f:	push   DWORD PTR [edx+0x54]
  427a92:	push   ecx
  427a93:	call   DWORD PTR [eax+0x1c]
  427a96:	test   eax,eax
  427a98:	je     0x427d3d
  427a9e:	mov    eax,DWORD PTR [ebp+0xc]
  427aa1:	mov    ecx,DWORD PTR [ebx+0x1c8]
  427aa7:	mov    ecx,DWORD PTR [ecx]
  427aa9:	xor    ecx,esi
  427aab:	add    ecx,edi
  427aad:	je     0x427c68
  427ab3:	mov    eax,DWORD PTR [ebp-0x4]
  427ab6:	xor    eax,esi
  427ab8:	add    eax,edi
  427aba:	and    DWORD PTR [ebp+0x8],0x0
  427abe:	mov    DWORD PTR [ebp-0x14],eax
  427ac1:	mov    eax,0xf89c85c1
  427ac6:	lea    ecx,[eax+0x18]
  427ac9:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  427ad0:	mov    DWORD PTR [ebp-0x54],0xf89c85d1
  427ad7:	mov    DWORD PTR [ebp-0x50],eax
  427ada:	mov    DWORD PTR [ebp-0x4c],ecx
  427add:	mov    DWORD PTR [ebp-0x48],ecx
  427ae0:	mov    DWORD PTR [ebp-0x44],0xf89c85a5
  427ae7:	mov    edx,DWORD PTR [ebp+0x8]
  427aea:	mov    ecx,0x8ae
  427aef:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  427af4:	mov    edx,0x72f5
  427af9:	add    cx,dx
  427afc:	mov    edx,DWORD PTR [ebp+0x8]
  427aff:	inc    DWORD PTR [ebp+0x8]
  427b02:	cmp    DWORD PTR [ebp+0x8],0x6
  427b06:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  427b0e:	jb     0x427ae7
  427b10:	mov    ecx,0xf89c85d3
  427b15:	mov    DWORD PTR [ebp-0xb0],eax
  427b1b:	mov    DWORD PTR [ebp-0x9c],eax
  427b21:	mov    DWORD PTR [ebp-0x74],eax
  427b24:	mov    DWORD PTR [ebp-0x70],eax
  427b27:	lea    eax,[ecx-0x3]
  427b2a:	lea    edx,[ecx+0x2c]
  427b2d:	mov    DWORD PTR [ebp-0x64],eax
  427b30:	mov    DWORD PTR [ebp-0x60],eax
  427b33:	mov    DWORD PTR [ebp-0xb4],0xf89c85f9
  427b3d:	mov    DWORD PTR [ebp-0xac],ecx
  427b43:	mov    DWORD PTR [ebp-0xa8],edx
  427b49:	mov    DWORD PTR [ebp-0xa4],0xf89c85da
  427b53:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  427b5d:	mov    DWORD PTR [ebp-0x98],0xf89c85fe
  427b67:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  427b71:	mov    DWORD PTR [ebp-0x90],0xf89c85d1
  427b7b:	mov    DWORD PTR [ebp-0x8c],ecx
  427b81:	mov    DWORD PTR [ebp-0x88],0xf89c852a
  427b8b:	mov    DWORD PTR [ebp-0x84],edx
  427b91:	mov    DWORD PTR [ebp-0x80],0xf89c85d4
  427b98:	mov    DWORD PTR [ebp-0x7c],ecx
  427b9b:	mov    DWORD PTR [ebp-0x78],0xf89c85e2
  427ba2:	mov    DWORD PTR [ebp-0x6c],ecx
  427ba5:	mov    DWORD PTR [ebp-0x68],0xf89c85de
  427bac:	mov    DWORD PTR [ebp-0x5c],0xf89c85a5
  427bb3:	xor    eax,eax
  427bb5:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  427bbc:	xor    cl,0xae
  427bbf:	sub    cl,0xb
  427bc2:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  427bc9:	inc    eax
  427bca:	cmp    eax,0x17
  427bcd:	jb     0x427bb5
  427bcf:	mov    eax,DWORD PTR [ebx+0x1e0]
  427bd5:	lea    ecx,[ebp-0xc0]
  427bdb:	push   ecx
  427bdc:	call   DWORD PTR [eax+0x4]
  427bdf:	mov    ecx,DWORD PTR [ebx+0x1e0]
  427be5:	lea    edx,[ebp-0xd8]
  427beb:	push   edx
  427bec:	push   eax
  427bed:	call   DWORD PTR [ecx+0x8]
  427bf0:	mov    DWORD PTR [ebp-0x40],eax
  427bf3:	lea    eax,[ebp-0x14]
  427bf6:	push   eax
  427bf7:	mov    eax,DWORD PTR [ebx+0x18c]
  427bfd:	push   DWORD PTR [eax]
  427bff:	mov    eax,DWORD PTR [ebp-0x40]
  427c02:	call   eax
  427c04:	mov    eax,DWORD PTR [ebp-0x4]
  427c07:	xor    eax,esi
  427c09:	add    eax,edi
  427c0b:	mov    DWORD PTR [ebp-0x34],eax
  427c0e:	mov    ecx,DWORD PTR [ebp-0x4]
  427c11:	mov    eax,DWORD PTR [ebp-0x14]
  427c14:	xor    ecx,esi
  427c16:	add    ecx,edi
  427c18:	cmp    eax,ecx
  427c1a:	je     0x427c65
  427c1c:	mov    DWORD PTR [ebp-0x3c],eax
  427c1f:	jmp    0x427c30
  427c21:	mov    eax,DWORD PTR [eax]
  427c23:	mov    ecx,DWORD PTR [ebp-0x3c]
  427c26:	mov    DWORD PTR [ebp-0x14],eax
  427c29:	mov    eax,DWORD PTR [ebp-0x14]
  427c2c:	cmp    eax,ecx
  427c2e:	je     0x427c3d
  427c30:	mov    edx,DWORD PTR [eax+0x18]
  427c33:	mov    ecx,DWORD PTR [ebx+0x18c]
  427c39:	cmp    edx,DWORD PTR [ecx]
  427c3b:	jne    0x427c21
  427c3d:	mov    ecx,DWORD PTR [ebx+0x18c]
  427c43:	mov    edx,DWORD PTR [eax+0x18]
  427c46:	cmp    edx,DWORD PTR [ecx]
  427c48:	jne    0x427c65
  427c4a:	mov    ecx,DWORD PTR [ebx+0x190]
  427c50:	mov    edx,DWORD PTR [ebp-0x20]
  427c53:	mov    edx,DWORD PTR [edx+0x28]
  427c56:	add    edx,DWORD PTR [ecx]
  427c58:	mov    DWORD PTR [eax+0x1c],edx
  427c5b:	mov    eax,DWORD PTR [ebp-0x24]
  427c5e:	xor    eax,esi
  427c60:	add    eax,edi
  427c62:	mov    DWORD PTR [ebp-0x34],eax
  427c65:	mov    eax,DWORD PTR [ebp+0xc]
  427c68:	push   ebx
  427c69:	push   eax
  427c6a:	push   DWORD PTR [ebp+0x20]
  427c6d:	call   0x4273ed
  427c72:	test   eax,eax
  427c74:	je     0x427d3d
  427c7a:	push   DWORD PTR [ebp+0xc]
  427c7d:	mov    ecx,ebx
  427c7f:	push   DWORD PTR [ebp+0x20]
  427c82:	call   0x427346
  427c87:	test   eax,eax
  427c89:	je     0x427d3d
  427c8f:	mov    eax,DWORD PTR [ebp+0xc]
  427c92:	mov    edx,DWORD PTR [ebp+0x20]
  427c95:	mov    ecx,ebx
  427c97:	call   0x42721f
  427c9c:	test   eax,eax
  427c9e:	je     0x427d3d
  427ca4:	push   ebx
  427ca5:	push   DWORD PTR [ebp+0x20]
  427ca8:	call   0x4276d0
  427cad:	test   eax,eax
  427caf:	je     0x427d3d
  427cb5:	mov    eax,DWORD PTR [ebx+0x18c]
  427cbb:	mov    edx,DWORD PTR [ebp+0x20]
  427cbe:	cmp    edx,DWORD PTR [eax]
  427cc0:	jne    0x427cdc
  427cc2:	mov    eax,DWORD PTR [ebx+0x1e0]
  427cc8:	lea    ecx,[ebp-0x18]
  427ccb:	push   ecx
  427ccc:	push   DWORD PTR [ebp-0x18]
  427ccf:	mov    ecx,DWORD PTR [ebp-0x20]
  427cd2:	push   DWORD PTR [ecx+0x54]
  427cd5:	push   edx
  427cd6:	call   DWORD PTR [eax+0x1c]
  427cd9:	mov    edx,DWORD PTR [ebp+0x20]
  427cdc:	mov    eax,DWORD PTR [ebx+0x1c8]
  427ce2:	mov    eax,DWORD PTR [eax]
  427ce4:	xor    eax,esi
  427ce6:	add    eax,edi
  427ce8:	je     0x427d21
  427cea:	mov    ecx,DWORD PTR [ebp+0xc]
  427ced:	mov    eax,DWORD PTR [ecx+0x28]
  427cf0:	mov    DWORD PTR [ebp+0x8],0xf89ca5a5
  427cf7:	mov    esi,DWORD PTR [ebp+0x8]
  427cfa:	push   DWORD PTR [ebp+0x14]
  427cfd:	xor    esi,0x8ae
  427d03:	push   DWORD PTR [ebp+0x10]
  427d06:	add    esi,0x72f5
  427d0c:	or     WORD PTR [ecx+0x16],si
  427d10:	add    eax,edx
  427d12:	push   edx
  427d13:	call   eax
  427d15:	mov    DWORD PTR [ebx+0x1d0],0xf89c85a2
  427d1f:	jmp    0x427d2b
  427d21:	mov    eax,DWORD PTR [ebp+0xc]
  427d24:	mov    eax,DWORD PTR [eax+0x28]
  427d27:	add    eax,edx
  427d29:	call   eax
  427d2b:	mov    DWORD PTR [ebp-0x8],eax
  427d2e:	mov    eax,DWORD PTR [ebp-0x8]
  427d31:	mov    ecx,DWORD PTR [ebp+0x1c]
  427d34:	mov    DWORD PTR [ecx],eax
  427d36:	mov    DWORD PTR [ebp-0x30],0x1
  427d3d:	cmp    DWORD PTR [ebp-0x30],0x0
  427d41:	jne    0x427d47
  427d43:	and    DWORD PTR [ebp+0x20],0x0
  427d47:	mov    eax,DWORD PTR [ebp+0x20]
  427d4a:	jmp    0x427d4e
  427d4c:	xor    eax,eax
  427d4e:	pop    edi
  427d4f:	pop    esi
  427d50:	pop    ebx
  427d51:	leave  
  427d52:	ret    0x1c
  427d55:	push   ebp
  427d56:	mov    ebp,esp
  427d58:	movzx  edx,WORD PTR [ecx+0x6]
  427d5c:	movzx  eax,WORD PTR [ecx+0x14]
  427d60:	push   ebx
  427d61:	push   edi
  427d62:	xor    edi,edi
  427d64:	lea    eax,[eax+ecx*1+0x18]
  427d68:	test   edx,edx
  427d6a:	je     0x427d8b
  427d6c:	mov    ecx,DWORD PTR [eax+0xc]
  427d6f:	lea    ebx,[ecx+esi*1]
  427d72:	cmp    DWORD PTR [ebp+0x8],ebx
  427d75:	jb     0x427d83
  427d77:	mov    ebx,DWORD PTR [eax+0x8]
  427d7a:	add    ebx,ecx
  427d7c:	add    ebx,esi
  427d7e:	cmp    DWORD PTR [ebp+0x8],ebx
  427d81:	jb     0x427d8d
  427d83:	add    eax,0x28
  427d86:	inc    edi
  427d87:	cmp    edi,edx
  427d89:	jb     0x427d6c
  427d8b:	xor    eax,eax
  427d8d:	pop    edi
  427d8e:	pop    ebx
  427d8f:	pop    ebp
  427d90:	ret    0x4
  427d93:	push   ebp
  427d94:	mov    ebp,esp
  427d96:	sub    esp,0x34
  427d99:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  427da0:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  427da7:	mov    DWORD PTR [ebp-0x1c],0xf89c85a3
  427dae:	mov    DWORD PTR [ebp-0x8],0xf89c85c2
  427db5:	mov    DWORD PTR [ebp-0x20],0xf89c85e2
  427dbc:	mov    DWORD PTR [ebp-0x2c],0xf89c852b
  427dc3:	mov    DWORD PTR [ebp-0x2c],0xf89c85cb
  427dca:	mov    DWORD PTR [ebp-0x10],eax
  427dcd:	mov    eax,DWORD PTR [ebp+0x8]
  427dd0:	mov    DWORD PTR [ebp-0x14],eax
  427dd3:	mov    eax,DWORD PTR [ebp-0xc]
  427dd6:	push   ebx
  427dd7:	mov    ecx,0x75108ae
  427ddc:	xor    eax,ecx
  427dde:	push   esi
  427ddf:	mov    esi,DWORD PTR [ebp-0x10]
  427de2:	mov    edx,0x3272f5
  427de7:	add    eax,edx
  427de9:	push   edi
  427dea:	cmp    esi,eax
  427dec:	je     0x427fcb
  427df2:	mov    eax,DWORD PTR [ebp-0xc]
  427df5:	mov    esi,DWORD PTR [ebp-0x14]
  427df8:	xor    eax,ecx
  427dfa:	add    eax,edx
  427dfc:	cmp    esi,eax
  427dfe:	je     0x427fcb
  427e04:	mov    eax,DWORD PTR [ebp-0xc]
  427e07:	xor    eax,ecx
  427e09:	add    eax,edx
  427e0b:	mov    DWORD PTR [ebp-0x24],eax
  427e0e:	mov    eax,DWORD PTR [ebp-0xc]
  427e11:	xor    eax,ecx
  427e13:	add    eax,edx
  427e15:	mov    DWORD PTR [ebp-0x28],eax
  427e18:	mov    edi,DWORD PTR [ebp-0x20]
  427e1b:	mov    ebx,DWORD PTR [ebp-0x8]
  427e1e:	mov    esi,0x8ae
  427e23:	xor    edi,esi
  427e25:	mov    eax,0x72f5
  427e2a:	xor    ebx,esi
  427e2c:	add    edi,eax
  427e2e:	add    ebx,eax
  427e30:	sub    ebx,edi
  427e32:	mov    WORD PTR [ebp-0x8],bx
  427e36:	jmp    0x427efb
  427e3b:	mov    edi,DWORD PTR [ebp-0xc]
  427e3e:	mov    bx,WORD PTR [ebp-0x4]
  427e42:	xor    edi,esi
  427e44:	add    edi,eax
  427e46:	cmp    bx,di
  427e49:	je     0x427f3d
  427e4f:	mov    edi,DWORD PTR [ebp-0xc]
  427e52:	mov    ebx,DWORD PTR [ebp+0xc]
  427e55:	xor    edi,ecx
  427e57:	add    edi,edx
  427e59:	cmp    ebx,edi
  427e5b:	mov    di,WORD PTR [ebp-0x4]
  427e5f:	mov    bx,WORD PTR [ebp+0x8]
  427e63:	je     0x427ece
  427e65:	cmp    bx,di
  427e68:	je     0x427ed7
  427e6a:	mov    edi,DWORD PTR [ebp-0x20]
  427e6d:	mov    bx,WORD PTR [ebp+0x8]
  427e71:	xor    edi,esi
  427e73:	add    edi,eax
  427e75:	cmp    bx,di
  427e78:	jb     0x427e98
  427e7a:	mov    edi,DWORD PTR [ebp-0x2c]
  427e7d:	mov    bx,WORD PTR [ebp+0x8]
  427e81:	xor    edi,esi
  427e83:	add    edi,eax
  427e85:	cmp    bx,di
  427e88:	ja     0x427e98
  427e8a:	movzx  edi,WORD PTR [ebp+0x8]
  427e8e:	movzx  ebx,WORD PTR [ebp-0x8]
  427e92:	add    edi,ebx
  427e94:	mov    WORD PTR [ebp+0x8],di
  427e98:	mov    edi,DWORD PTR [ebp-0x20]
  427e9b:	mov    bx,WORD PTR [ebp-0x4]
  427e9f:	xor    edi,esi
  427ea1:	add    edi,eax
  427ea3:	cmp    bx,di
  427ea6:	jb     0x427ec6
  427ea8:	mov    edi,DWORD PTR [ebp-0x2c]
  427eab:	mov    bx,WORD PTR [ebp-0x4]
  427eaf:	xor    edi,esi
  427eb1:	add    edi,eax
  427eb3:	cmp    bx,di
  427eb6:	ja     0x427ec6
  427eb8:	movzx  edi,WORD PTR [ebp-0x4]
  427ebc:	movzx  ebx,WORD PTR [ebp-0x8]
  427ec0:	add    edi,ebx
  427ec2:	mov    WORD PTR [ebp-0x4],di
  427ec6:	mov    di,WORD PTR [ebp-0x4]
  427eca:	mov    bx,WORD PTR [ebp+0x8]
  427ece:	cmp    bx,di
  427ed1:	jne    0x427fcb
  427ed7:	mov    edi,DWORD PTR [ebp-0x1c]
  427eda:	mov    ebx,DWORD PTR [ebp-0x10]
  427edd:	xor    edi,ecx
  427edf:	lea    edi,[edi+ebx*1+0x3272f5]
  427ee6:	mov    DWORD PTR [ebp-0x10],edi
  427ee9:	mov    edi,DWORD PTR [ebp-0x1c]
  427eec:	mov    ebx,DWORD PTR [ebp-0x14]
  427eef:	xor    edi,ecx
  427ef1:	lea    edi,[edi+ebx*1+0x3272f5]
  427ef8:	mov    DWORD PTR [ebp-0x14],edi
  427efb:	mov    edi,DWORD PTR [ebp-0x24]
  427efe:	mov    ebx,DWORD PTR [ebp-0x10]
  427f01:	mov    di,WORD PTR [ebx+edi*2]
  427f05:	mov    WORD PTR [ebp+0x8],di
  427f09:	mov    edi,DWORD PTR [ebp-0x28]
  427f0c:	mov    ebx,DWORD PTR [ebp-0x14]
  427f0f:	mov    di,WORD PTR [ebx+edi*2]
  427f13:	mov    WORD PTR [ebp-0x4],di
  427f17:	mov    edi,DWORD PTR [ebp-0xc]
  427f1a:	mov    bx,WORD PTR [ebp+0x8]
  427f1e:	xor    edi,esi
  427f20:	add    edi,eax
  427f22:	cmp    bx,di
  427f25:	jne    0x427e3b
  427f2b:	mov    eax,DWORD PTR [ebp-0x18]
  427f2e:	mov    esi,DWORD PTR [ebp-0xc]
  427f31:	xor    eax,ecx
  427f33:	add    eax,edx
  427f35:	imul   eax,esi
  427f38:	mov    DWORD PTR [ebp-0xc],eax
  427f3b:	jmp    0x427f4f
  427f3d:	mov    eax,DWORD PTR [ebp-0xc]
  427f40:	mov    esi,DWORD PTR [ebp-0x18]
  427f43:	xor    eax,ecx
  427f45:	lea    eax,[eax+esi*1+0x3272f5]
  427f4c:	mov    DWORD PTR [ebp-0x18],eax
  427f4f:	mov    eax,DWORD PTR [ebp-0x24]
  427f52:	sub    eax,edx
  427f54:	xor    eax,ecx
  427f56:	mov    DWORD PTR [ebp-0x30],eax
  427f59:	mov    eax,DWORD PTR [ebp-0x28]
  427f5c:	sub    eax,edx
  427f5e:	xor    eax,ecx
  427f60:	mov    DWORD PTR [ebp-0x34],eax
  427f63:	mov    eax,DWORD PTR [ebp-0x34]
  427f66:	mov    esi,DWORD PTR [ebp-0x1c]
  427f69:	xor    esi,ecx
  427f6b:	add    esi,edx
  427f6d:	xor    eax,ecx
  427f6f:	add    eax,0x3272f5
  427f74:	imul   esi,eax
  427f77:	mov    eax,DWORD PTR [ebp-0x14]
  427f7a:	movzx  eax,WORD PTR [esi+eax*1]
  427f7e:	mov    esi,DWORD PTR [ebp-0x30]
  427f81:	mov    edi,DWORD PTR [ebp-0x1c]
  427f84:	xor    esi,ecx
  427f86:	add    esi,edx
  427f88:	xor    edi,ecx
  427f8a:	add    edi,edx
  427f8c:	imul   edi,esi
  427f8f:	mov    esi,DWORD PTR [ebp-0x10]
  427f92:	movzx  esi,WORD PTR [edi+esi*1]
  427f96:	sub    eax,edx
  427f98:	sub    esi,edx
  427f9a:	xor    eax,ecx
  427f9c:	xor    esi,ecx
  427f9e:	cmp    esi,eax
  427fa0:	jne    0x427fcb
  427fa2:	mov    eax,DWORD PTR [ebp-0x30]
  427fa5:	mov    esi,DWORD PTR [ebp-0x1c]
  427fa8:	xor    eax,ecx
  427faa:	add    eax,0x3272f5
  427faf:	xor    esi,ecx
  427fb1:	add    esi,edx
  427fb3:	imul   esi,eax
  427fb6:	mov    eax,DWORD PTR [ebp-0x10]
  427fb9:	movzx  eax,WORD PTR [esi+eax*1]
  427fbd:	mov    esi,DWORD PTR [ebp-0xc]
  427fc0:	sub    eax,edx
  427fc2:	xor    eax,ecx
  427fc4:	cmp    eax,esi
  427fc6:	mov    eax,DWORD PTR [ebp-0xc]
  427fc9:	je     0x427fce
  427fcb:	mov    eax,DWORD PTR [ebp-0x18]
  427fce:	pop    edi
  427fcf:	xor    eax,ecx
  427fd1:	pop    esi
  427fd2:	add    eax,edx
  427fd4:	pop    ebx
  427fd5:	leave  
  427fd6:	ret    0x8
  427fd9:	push   ebp
  427fda:	mov    ebp,esp
  427fdc:	push   ecx
  427fdd:	mov    cx,WORD PTR [eax]
  427fe0:	push   esi
  427fe1:	mov    esi,0x3b5c
  427fe6:	sub    cx,si
  427fe9:	mov    esi,0x8a9a
  427fee:	xor    cx,si
  427ff1:	mov    esi,0x4e3e
  427ff6:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  427ffd:	mov    edx,0xf89c85a5
  428002:	cmp    cx,si
  428005:	je     0x428064
  428007:	push   ebx
  428008:	push   edi
  428009:	movzx  ecx,cx
  42800c:	mov    edi,0xffcd8d0b
  428011:	mov    esi,0x75108ae
  428016:	mov    ebx,0x4f9a
  42801b:	cmp    cx,bx
  42801e:	jne    0x428023
  428020:	mov    DWORD PTR [ebp-0x4],edx
  428023:	lea    edx,[edi+0x1]
  428026:	xor    edx,esi
  428028:	mov    edi,edx
  42802a:	xor    edi,esi
  42802c:	mov    cx,WORD PTR [eax+edi*2+0x64e5ea]
  428034:	mov    ebx,0x3b5c
  428039:	sub    cx,bx
  42803c:	mov    ebx,0x8a9a
  428041:	xor    cx,bx
  428044:	mov    ebx,0x4e3e
  428049:	cmp    cx,bx
  42804c:	jne    0x428016
  42804e:	mov    ecx,DWORD PTR [ebp-0x4]
  428051:	pop    edi
  428052:	pop    ebx
  428053:	cmp    ecx,0xf89c85a4
  428059:	je     0x428064
  42805b:	xor    ecx,esi
  42805d:	lea    eax,[eax+ecx*2+0x64e5ec]
  428064:	pop    esi
  428065:	leave  
  428066:	ret    
  428067:	push   ebp
  428068:	mov    ebp,esp
  42806a:	push   ecx
  42806b:	push   esi
  42806c:	push   edi
  42806d:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  428074:	mov    esi,0xf89c85a5
  428079:	call   0x427fd9
  42807e:	mov    edi,eax
  428080:	mov    al,BYTE PTR [edi]
  428082:	sub    al,0x3
  428084:	xor    al,0x7e
  428086:	cmp    al,0x83
  428088:	je     0x4280eb
  42808a:	mov    eax,edi
  42808c:	mov    edx,0xffcd8d0b
  428091:	mov    ecx,0x75108ae
  428096:	push   ebx
  428097:	mov    ax,WORD PTR [eax]
  42809a:	mov    ebx,0x3b5c
  42809f:	sub    ax,bx
  4280a2:	mov    ebx,0x8a9a
  4280a7:	xor    ax,bx
  4280aa:	mov    ebx,0x4e48
  4280af:	cmp    ax,bx
  4280b2:	jne    0x4280b7
  4280b4:	mov    DWORD PTR [ebp-0x4],esi
  4280b7:	lea    esi,[edx+0x1]
  4280ba:	xor    esi,ecx
  4280bc:	mov    edx,esi
  4280be:	xor    edx,ecx
  4280c0:	lea    eax,[edi+edx*2+0x64e5ea]
  4280c7:	mov    bl,BYTE PTR [eax]
  4280c9:	sub    bl,0x3
  4280cc:	xor    bl,0x7e
  4280cf:	cmp    bl,0x83
  4280d2:	jne    0x428097
  4280d4:	mov    eax,DWORD PTR [ebp-0x4]
  4280d7:	pop    ebx
  4280d8:	cmp    eax,0xf89c85a4
  4280dd:	je     0x4280eb
  4280df:	xor    eax,ecx
  4280e1:	xor    ecx,ecx
  4280e3:	mov    WORD PTR [edi+eax*2+0x64e5ea],cx
  4280eb:	mov    eax,edi
  4280ed:	pop    edi
  4280ee:	pop    esi
  4280ef:	leave  
  4280f0:	ret    
  4280f1:	push   ebp
  4280f2:	mov    ebp,esp
  4280f4:	push   ecx
  4280f5:	push   esi
  4280f6:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  4280fd:	mov    esi,0xf89c85a5
  428102:	call   0x427fd9
  428107:	mov    cx,WORD PTR [eax]
  42810a:	mov    edx,0x3b5c
  42810f:	sub    cx,dx
  428112:	mov    edx,0x8a9a
  428117:	xor    cx,dx
  42811a:	mov    edx,0x4e3e
  42811f:	cmp    cx,dx
  428122:	je     0x42817b
  428124:	push   ebx
  428125:	push   edi
  428126:	movzx  ecx,cx
  428129:	mov    edx,0xffcd8d0b
  42812e:	mov    edi,0x75108ae
  428133:	mov    ebx,0x4e48
  428138:	cmp    cx,bx
  42813b:	jne    0x428140
  42813d:	mov    DWORD PTR [ebp-0x4],esi
  428140:	lea    esi,[edx+0x1]
  428143:	xor    esi,edi
  428145:	mov    edx,esi
  428147:	xor    edx,edi
  428149:	mov    cx,WORD PTR [eax+edx*2+0x64e5ea]
  428151:	mov    ebx,0x3b5c
  428156:	sub    cx,bx
  428159:	mov    ebx,0x8a9a
  42815e:	xor    cx,bx
  428161:	mov    ebx,0x4e3e
  428166:	cmp    cx,bx
  428169:	jne    0x428133
  42816b:	cmp    DWORD PTR [ebp-0x4],0xf89c85a4
  428172:	pop    edi
  428173:	pop    ebx
  428174:	je     0x42817b
  428176:	xor    eax,eax
  428178:	inc    eax
  428179:	jmp    0x42817d
  42817b:	xor    eax,eax
  42817d:	pop    esi
  42817e:	leave  
  42817f:	ret    
  428180:	push   ebp
  428181:	mov    ebp,esp
  428183:	push   ecx
  428184:	mov    eax,DWORD PTR [ebp+0x8]
  428187:	movzx  ecx,WORD PTR [eax]
  42818a:	push   esi
  42818b:	lea    eax,[ecx-0x3b5c]
  428191:	mov    esi,0x8a9a
  428196:	push   edi
  428197:	xor    eax,esi
  428199:	mov    edi,0x4e3e
  42819e:	mov    DWORD PTR [ebp-0x4],edx
  4281a1:	cmp    ax,di
  4281a4:	je     0x4281d1
  4281a6:	mov    eax,DWORD PTR [ebp+0x8]
  4281a9:	sub    eax,edx
  4281ab:	mov    DWORD PTR [ebp+0x8],eax
  4281ae:	jmp    0x4281b3
  4281b0:	mov    eax,DWORD PTR [ebp+0x8]
  4281b3:	mov    WORD PTR [edx],cx
  4281b6:	add    edx,0x2
  4281b9:	movzx  edi,WORD PTR [eax+edx*1]
  4281bd:	mov    ecx,edi
  4281bf:	add    edi,0xffffc4a4
  4281c5:	xor    edi,esi
  4281c7:	mov    eax,0x4e3e
  4281cc:	cmp    di,ax
  4281cf:	jne    0x4281b0
  4281d1:	xor    eax,eax
  4281d3:	pop    edi
  4281d4:	mov    WORD PTR [edx],ax
  4281d7:	mov    eax,DWORD PTR [ebp-0x4]
  4281da:	pop    esi
  4281db:	leave  
  4281dc:	ret    0x4
  4281df:	push   ebp
  4281e0:	mov    ebp,esp
  4281e2:	sub    esp,0x18
  4281e5:	mov    DWORD PTR [ebp-0x8],0xf89c85a5
  4281ec:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  4281f3:	mov    ecx,DWORD PTR [ebp-0x8]
  4281f6:	push   esi
  4281f7:	mov    eax,0x75108ae
  4281fc:	xor    ecx,eax
  4281fe:	mov    esi,0x3272f5
  428203:	add    ecx,esi
  428205:	mov    DWORD PTR [ebp-0x4],ecx
  428208:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42820f:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  428216:	push   edi
  428217:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  42821e:	jmp    0x4282bf
  428223:	mov    ecx,DWORD PTR [ebp-0x4]
  428226:	mov    edx,DWORD PTR [ebp+0x10]
  428229:	sub    edx,ecx
  42822b:	mov    ecx,DWORD PTR [ebp-0xc]
  42822e:	xor    ecx,eax
  428230:	add    ecx,esi
  428232:	cmp    edx,ecx
  428234:	jbe    0x428251
  428236:	mov    edx,DWORD PTR [ebp-0x4]
  428239:	add    edx,DWORD PTR [ebp+0x8]
  42823c:	mov    ecx,DWORD PTR [ebp-0x4]
  42823f:	add    ecx,DWORD PTR [ebp+0xc]
  428242:	mov    edi,DWORD PTR [ecx]
  428244:	mov    DWORD PTR [edx],edi
  428246:	mov    ecx,DWORD PTR [ecx+0x4]
  428249:	mov    DWORD PTR [edx+0x4],ecx
  42824c:	mov    ecx,DWORD PTR [ebp-0xc]
  42824f:	jmp    0x42829e
  428251:	mov    ecx,DWORD PTR [ebp-0x4]
  428254:	mov    edx,DWORD PTR [ebp+0x10]
  428257:	sub    edx,ecx
  428259:	mov    ecx,DWORD PTR [ebp-0x10]
  42825c:	xor    ecx,eax
  42825e:	add    ecx,esi
  428260:	cmp    edx,ecx
  428262:	mov    ecx,DWORD PTR [ebp-0x4]
  428265:	jbe    0x428279
  428267:	add    ecx,DWORD PTR [ebp+0x8]
  42826a:	mov    edx,DWORD PTR [ebp-0x4]
  42826d:	add    edx,DWORD PTR [ebp+0xc]
  428270:	mov    edx,DWORD PTR [edx]
  428272:	mov    DWORD PTR [ecx],edx
  428274:	mov    ecx,DWORD PTR [ebp-0x10]
  428277:	jmp    0x42829e
  428279:	mov    edx,DWORD PTR [ebp+0x10]
  42827c:	sub    edx,ecx
  42827e:	mov    ecx,DWORD PTR [ebp-0x14]
  428281:	xor    ecx,eax
  428283:	add    ecx,esi
  428285:	cmp    edx,ecx
  428287:	mov    ecx,DWORD PTR [ebp-0x4]
  42828a:	jbe    0x4282af
  42828c:	add    ecx,DWORD PTR [ebp+0x8]
  42828f:	mov    edx,DWORD PTR [ebp-0x4]
  428292:	add    edx,DWORD PTR [ebp+0xc]
  428295:	mov    dx,WORD PTR [edx]
  428298:	mov    WORD PTR [ecx],dx
  42829b:	mov    ecx,DWORD PTR [ebp-0x14]
  42829e:	mov    edx,DWORD PTR [ebp-0x4]
  4282a1:	xor    ecx,eax
  4282a3:	lea    ecx,[ecx+edx*1+0x3272f5]
  4282aa:	mov    DWORD PTR [ebp-0x4],ecx
  4282ad:	jmp    0x4282bf
  4282af:	add    ecx,DWORD PTR [ebp+0x8]
  4282b2:	mov    edx,DWORD PTR [ebp-0x4]
  4282b5:	add    edx,DWORD PTR [ebp+0xc]
  4282b8:	mov    dl,BYTE PTR [edx]
  4282ba:	mov    BYTE PTR [ecx],dl
  4282bc:	inc    DWORD PTR [ebp-0x4]
  4282bf:	mov    ecx,DWORD PTR [ebp-0x18]
  4282c2:	mov    edx,DWORD PTR [ebp+0x10]
  4282c5:	xor    ecx,eax
  4282c7:	add    ecx,esi
  4282c9:	imul   ecx,edx
  4282cc:	mov    edx,DWORD PTR [ebp-0x8]
  4282cf:	mov    edi,DWORD PTR [ebp-0x4]
  4282d2:	xor    edx,eax
  4282d4:	lea    edx,[edx+edi*1+0x3272f5]
  4282db:	cmp    edx,ecx
  4282dd:	jb     0x428223
  4282e3:	pop    edi
  4282e4:	pop    esi
  4282e5:	leave  
  4282e6:	ret    0xc
  4282e9:	push   ebp
  4282ea:	mov    ebp,esp
  4282ec:	sub    esp,0xc
  4282ef:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  4282f6:	push   esi
  4282f7:	mov    esi,eax
  4282f9:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  428300:	mov    edx,DWORD PTR [ebp-0x4]
  428303:	mov    eax,0x75108ae
  428308:	xor    edx,eax
  42830a:	mov    ecx,0x3272f5
  42830f:	add    edx,ecx
  428311:	cmp    esi,edx
  428313:	je     0x428355
  428315:	push   ebx
  428316:	push   edi
  428317:	mov    edx,DWORD PTR [ebp-0x8]
  42831a:	mov    ebx,DWORD PTR [ebp+0x8]
  42831d:	xor    edx,eax
  42831f:	mov    edi,0xffcd8d0b
  428324:	sub    edi,edx
  428326:	add    esi,edi
  428328:	lea    edx,[esi-0x3272f5]
  42832e:	xor    edx,eax
  428330:	mov    DWORD PTR [ebp-0xc],edx
  428333:	mov    edx,DWORD PTR [ebp-0x4]
  428336:	mov    edi,DWORD PTR [ebp-0xc]
  428339:	xor    dl,0xae
  42833c:	sub    dl,0xb
  42833f:	xor    edi,eax
  428341:	mov    BYTE PTR [edi+ebx*1+0x3272f5],dl
  428348:	mov    edx,DWORD PTR [ebp-0x4]
  42834b:	xor    edx,eax
  42834d:	add    edx,ecx
  42834f:	cmp    esi,edx
  428351:	jne    0x428317
  428353:	pop    edi
  428354:	pop    ebx
  428355:	pop    esi
  428356:	leave  
  428357:	ret    0x4
  42835a:	push   ebp
  42835b:	mov    ebp,esp
  42835d:	sub    esp,0x21c
  428363:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  42836a:	mov    DWORD PTR [ebp-0x14],0xf89c85a2
  428371:	mov    eax,DWORD PTR [ebp+0x10]
  428374:	mov    eax,DWORD PTR [ebp-0x4]
  428377:	mov    ecx,DWORD PTR [ebp+0x8]
  42837a:	push   esi
  42837b:	push   edi
  42837c:	mov    edi,0x75108ae
  428381:	xor    eax,edi
  428383:	mov    esi,0x3272f5
  428388:	add    eax,esi
  42838a:	cmp    eax,ecx
  42838c:	mov    eax,DWORD PTR [ebp-0x4]
  42838f:	jne    0x42839a
  428391:	xor    eax,edi
  428393:	add    eax,esi
  428395:	jmp    0x428446
  42839a:	mov    ecx,DWORD PTR [ebp+0xc]
  42839d:	xor    eax,edi
  42839f:	add    eax,esi
  4283a1:	cmp    eax,ecx
  4283a3:	jne    0x4283aa
  4283a5:	mov    eax,DWORD PTR [ebp-0x4]
  4283a8:	jmp    0x428391
  4283aa:	lea    eax,[ebp-0x21c]
  4283b0:	mov    DWORD PTR [ebp-0x8],eax
  4283b3:	mov    eax,DWORD PTR [ebp+0xc]
  4283b6:	mov    DWORD PTR [ebp-0x10],eax
  4283b9:	mov    eax,DWORD PTR [ebp-0x4]
  4283bc:	xor    eax,edi
  4283be:	add    eax,esi
  4283c0:	mov    DWORD PTR [ebp+0x10],eax
  4283c3:	mov    eax,DWORD PTR [ebp+0xc]
  4283c6:	push   ebx
  4283c7:	call   0x4280f1
  4283cc:	mov    ebx,eax
  4283ce:	mov    eax,DWORD PTR [ebp+0x8]
  4283d1:	mov    eax,DWORD PTR [eax+0x14]
  4283d4:	jmp    0x42842e
  4283d6:	mov    eax,DWORD PTR [ebp+0xc]
  4283d9:	sub    eax,0x8
  4283dc:	mov    DWORD PTR [ebp-0xc],eax
  4283df:	mov    eax,DWORD PTR [ebp-0xc]
  4283e2:	mov    eax,DWORD PTR [eax+0x28]
  4283e5:	call   0x427fd9
  4283ea:	mov    DWORD PTR [ebp+0x10],eax
  4283ed:	push   DWORD PTR [ebp+0x10]
  4283f0:	mov    edx,DWORD PTR [ebp-0x8]
  4283f3:	call   0x428180
  4283f8:	mov    eax,DWORD PTR [ebp-0x4]
  4283fb:	xor    eax,edi
  4283fd:	add    eax,esi
  4283ff:	cmp    eax,ebx
  428401:	jne    0x42840b
  428403:	mov    eax,DWORD PTR [ebp-0x8]
  428406:	call   0x428067
  42840b:	mov    eax,DWORD PTR [ebp-0x14]
  42840e:	xor    eax,edi
  428410:	add    eax,esi
  428412:	push   eax
  428413:	push   DWORD PTR [ebp-0x10]
  428416:	mov    eax,DWORD PTR [ebp-0x8]
  428419:	call   0x427d93
  42841e:	mov    ecx,DWORD PTR [ebp-0x4]
  428421:	xor    ecx,edi
  428423:	add    ecx,esi
  428425:	cmp    eax,ecx
  428427:	je     0x42844c
  428429:	mov    eax,DWORD PTR [ebp+0xc]
  42842c:	mov    eax,DWORD PTR [eax]
  42842e:	mov    DWORD PTR [ebp+0xc],eax
  428431:	mov    eax,DWORD PTR [ebp+0x8]
  428434:	mov    ecx,DWORD PTR [ebp+0xc]
  428437:	add    eax,0x14
  42843a:	cmp    ecx,eax
  42843c:	jne    0x4283d6
  42843e:	mov    eax,DWORD PTR [ebp-0x4]
  428441:	xor    eax,edi
  428443:	add    eax,esi
  428445:	pop    ebx
  428446:	pop    edi
  428447:	pop    esi
  428448:	leave  
  428449:	ret    0xc
  42844c:	mov    eax,DWORD PTR [ebp-0xc]
  42844f:	mov    eax,DWORD PTR [eax+0x18]
  428452:	jmp    0x428445
  428454:	push   ebp
  428455:	mov    ebp,esp
  428457:	mov    eax,DWORD PTR [ebp+0xc]
  42845a:	sub    esp,0x10
  42845d:	cmp    DWORD PTR [ebp+0x8],0x0
  428461:	push   ebx
  428462:	push   esi
  428463:	push   edi
  428464:	je     0x428519
  42846a:	test   eax,eax
  42846c:	je     0x428519
  428472:	movzx  eax,WORD PTR [eax+0x20]
  428476:	mov    ecx,eax
  428478:	mov    DWORD PTR [ebp-0x10],eax
  42847b:	xor    edx,edx
  42847d:	and    DWORD PTR [ebp-0x8],edx
  428480:	mov    eax,0x8a9a
  428485:	xor    ecx,eax
  428487:	add    ecx,0x3b5c
  42848d:	mov    DWORD PTR [ebp-0xc],ecx
  428490:	and    DWORD PTR [ebp-0x4],0x0
  428494:	xor    ecx,ecx
  428496:	push   0xffffff81
  428498:	pop    edi
  428499:	cmp    cx,WORD PTR [ebp-0xc]
  42849d:	jae    0x428503
  42849f:	lea    esi,[edx-0x3b5c]
  4284a5:	xor    esi,eax
  4284a7:	movzx  ecx,WORD PTR [ebp-0x4]
  4284ab:	mov    ebx,DWORD PTR [ebp+0xc]
  4284ae:	lea    ecx,[ebx+ecx*4]
  4284b1:	cmp    WORD PTR [ecx+0x2],si
  4284b5:	jne    0x4284ee
  4284b7:	movzx  ecx,WORD PTR [ecx]
  4284ba:	mov    edi,0x4e3e
  4284bf:	cmp    cx,di
  4284c2:	jne    0x4284d0
  4284c4:	mov    ebx,DWORD PTR [ebp+0x8]
  4284c7:	movzx  edi,dx
  4284ca:	cmp    BYTE PTR [edi+ebx*1],0x0
  4284ce:	je     0x4284fd
  4284d0:	mov    ebx,DWORD PTR [ebp+0x8]
  4284d3:	movzx  edi,dx
  4284d6:	movsx  di,BYTE PTR [edi+ebx*1]
  4284db:	mov    ebx,0x3b5c
  4284e0:	sub    di,bx
  4284e3:	xor    di,ax
  4284e6:	cmp    cx,di
  4284e9:	je     0x4284fd
  4284eb:	push   0xffffff83
  4284ed:	pop    edi
  4284ee:	inc    DWORD PTR [ebp-0x4]
  4284f1:	mov    cx,WORD PTR [ebp-0xc]
  4284f5:	cmp    WORD PTR [ebp-0x4],cx
  4284f9:	jb     0x4284a7
  4284fb:	jmp    0x428503
  4284fd:	inc    DWORD PTR [ebp-0x8]
  428500:	push   0xffffff80
  428502:	pop    edi
  428503:	mov    esi,DWORD PTR [ebp+0x8]
  428506:	movzx  ecx,dx
  428509:	cmp    BYTE PTR [ecx+esi*1],0x0
  42850d:	je     0x428522
  42850f:	inc    edx
  428510:	cmp    edi,0xffffff83
  428513:	jne    0x428490
  428519:	xor    eax,eax
  42851b:	pop    edi
  42851c:	pop    esi
  42851d:	pop    ebx
  42851e:	leave  
  42851f:	ret    0x8
  428522:	mov    ecx,DWORD PTR [ebp-0x8]
  428525:	add    ecx,0xffffc4a4
  42852b:	xor    cx,ax
  42852e:	xor    eax,eax
  428530:	cmp    cx,WORD PTR [ebp-0x10]
  428534:	sete   al
  428537:	jmp    0x42851b
  428539:	push   ebp
  42853a:	mov    ebp,esp
  42853c:	sub    esp,0x50
  42853f:	push   edi
  428540:	mov    edi,eax
  428542:	mov    eax,DWORD PTR [edi+0x1a8]
  428548:	cmp    DWORD PTR [eax],0x0
  42854b:	jne    0x428554
  42854d:	xor    eax,eax
  42854f:	jmp    0x428685
  428554:	push   DWORD PTR [ebp+0x8]
  428557:	push   0x2c
  428559:	pop    eax
  42855a:	call   0x4282e9
  42855f:	mov    edx,DWORD PTR [edi+0x1ac]
  428565:	lea    eax,[edi+0x22]
  428568:	mov    DWORD PTR [ebp-0x4c],eax
  42856b:	lea    eax,[edi+0x44]
  42856e:	mov    DWORD PTR [ebp-0x48],eax
  428571:	lea    eax,[edi+0x66]
  428574:	mov    DWORD PTR [ebp-0x44],eax
  428577:	lea    eax,[edi+0x88]
  42857d:	mov    DWORD PTR [ebp-0x40],eax
  428580:	lea    eax,[edi+0xaa]
  428586:	mov    DWORD PTR [ebp-0x3c],eax
  428589:	lea    eax,[edi+0xcc]
  42858f:	mov    DWORD PTR [ebp-0x38],eax
  428592:	lea    eax,[edi+0xee]
  428598:	mov    DWORD PTR [ebp-0x34],eax
  42859b:	lea    eax,[edi+0x110]
  4285a1:	mov    DWORD PTR [ebp-0x30],eax
  4285a4:	lea    eax,[edi+0x132]
  4285aa:	mov    DWORD PTR [ebp-0x2c],eax
  4285ad:	lea    eax,[edi+0x154]
  4285b3:	push   edi
  4285b4:	mov    DWORD PTR [ebp-0x50],edi
  4285b7:	mov    DWORD PTR [ebp-0x28],eax
  4285ba:	call   0x4286b9
  4285bf:	push   eax
  4285c0:	mov    eax,DWORD PTR [edi+0x1a8]
  4285c6:	push   DWORD PTR [eax]
  4285c8:	call   0x42835a
  4285cd:	mov    DWORD PTR [ebp-0x10],eax
  4285d0:	test   eax,eax
  4285d2:	je     0x428685
  4285d8:	mov    ecx,DWORD PTR [eax+0x3c]
  4285db:	push   ebx
  4285dc:	push   esi
  4285dd:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  4285e1:	add    esi,eax
  4285e3:	mov    edi,DWORD PTR [esi+0x24]
  4285e6:	mov    ecx,DWORD PTR [esi+0x1c]
  4285e9:	mov    edx,DWORD PTR [esi+0x20]
  4285ec:	mov    ebx,DWORD PTR [esi+0x18]
  4285ef:	add    edi,eax
  4285f1:	mov    DWORD PTR [ebp-0x20],edi
  4285f4:	mov    edi,DWORD PTR [esi+0x14]
  4285f7:	add    ecx,eax
  4285f9:	add    edx,eax
  4285fb:	mov    DWORD PTR [ebp-0xc],ecx
  4285fe:	mov    DWORD PTR [ebp-0x1c],edx
  428601:	mov    DWORD PTR [ebp-0x8],edi
  428604:	cmp    edi,ebx
  428606:	ja     0x42860b
  428608:	mov    DWORD PTR [ebp-0x8],ebx
  42860b:	xor    ebx,ebx
  42860d:	mov    DWORD PTR [ebp-0x18],ebx
  428610:	cmp    DWORD PTR [ebp-0x8],ebx
  428613:	jbe    0x428683
  428615:	jmp    0x42861a
  428617:	mov    edx,DWORD PTR [ebp-0x1c]
  42861a:	mov    edi,DWORD PTR [ebp-0x20]
  42861d:	movzx  edi,WORD PTR [edi+ebx*2]
  428621:	cmp    ebx,DWORD PTR [esi+0x18]
  428624:	jae    0x428683
  428626:	cmp    edi,DWORD PTR [esi+0x14]
  428629:	jae    0x428683
  42862b:	mov    ebx,DWORD PTR [edx+ebx*4]
  42862e:	mov    edx,DWORD PTR [ebp+0x8]
  428631:	mov    edi,DWORD PTR [ecx+edi*4]
  428634:	mov    DWORD PTR [ebp-0x4],edx
  428637:	lea    edx,[ebp-0x50]
  42863a:	add    ebx,eax
  42863c:	add    edi,eax
  42863e:	sub    edx,DWORD PTR [ebp+0x8]
  428641:	mov    DWORD PTR [ebp-0x14],0xb
  428648:	mov    DWORD PTR [ebp-0x24],edx
  42864b:	mov    edx,DWORD PTR [ebp-0x4]
  42864e:	cmp    DWORD PTR [edx],0x0
  428651:	jne    0x42866e
  428653:	mov    eax,DWORD PTR [ebp-0x24]
  428656:	push   DWORD PTR [eax+edx*1]
  428659:	push   ebx
  42865a:	call   0x428454
  42865f:	mov    ecx,DWORD PTR [ebp-0xc]
  428662:	test   eax,eax
  428664:	je     0x42866b
  428666:	mov    eax,DWORD PTR [ebp-0x4]
  428669:	mov    DWORD PTR [eax],edi
  42866b:	mov    eax,DWORD PTR [ebp-0x10]
  42866e:	add    DWORD PTR [ebp-0x4],0x4
  428672:	dec    DWORD PTR [ebp-0x14]
  428675:	jne    0x42864b
  428677:	mov    ebx,DWORD PTR [ebp-0x18]
  42867a:	inc    ebx
  42867b:	mov    DWORD PTR [ebp-0x18],ebx
  42867e:	cmp    ebx,DWORD PTR [ebp-0x8]
  428681:	jb     0x428617
  428683:	pop    esi
  428684:	pop    ebx
  428685:	pop    edi
  428686:	leave  
  428687:	ret    0x4
  42868a:	push   ebp
  42868b:	mov    ebp,esp
  42868d:	mov    eax,DWORD PTR [ebp+0x8]
  428690:	push   esi
  428691:	push   DWORD PTR [eax+0x1e0]
  428697:	lea    esi,[eax+0x198]
  42869d:	mov    eax,DWORD PTR [ebp+0x8]
  4286a0:	call   0x428539
  4286a5:	mov    ecx,DWORD PTR [esi]
  4286a7:	mov    DWORD PTR [ecx],eax
  4286a9:	mov    eax,DWORD PTR [esi]
  4286ab:	xor    ecx,ecx
  4286ad:	cmp    DWORD PTR [eax],ecx
  4286af:	pop    esi
  4286b0:	setne  cl
  4286b3:	mov    eax,ecx
  4286b5:	pop    ebp
  4286b6:	ret    0x4
  4286b9:	mov    ecx,DWORD PTR [edi+0x188]
  4286bf:	push   ebx
  4286c0:	jmp    0x4286d5
  4286c2:	xor    eax,0x8a9a
  4286c7:	add    eax,0x3b5c
  4286cc:	mov    WORD PTR [ecx],ax
  4286cf:	add    ecx,0x2
  4286d2:	add    edx,0x2
  4286d5:	movzx  eax,WORD PTR [edx]
  4286d8:	mov    ebx,0x4e3e
  4286dd:	cmp    ax,bx
  4286e0:	jne    0x4286c2
  4286e2:	xor    eax,eax
  4286e4:	mov    WORD PTR [ecx],ax
  4286e7:	mov    eax,DWORD PTR [edi+0x188]
  4286ed:	pop    ebx
  4286ee:	ret    
  4286ef:	push   edi
  4286f0:	mov    edi,eax
  4286f2:	mov    eax,DWORD PTR [esi+0x188]
  4286f8:	shl    edi,0x6
  4286fb:	add    eax,edi
  4286fd:	jmp    0x428709
  4286ff:	xor    cl,0x7e
  428702:	add    cl,0x3
  428705:	mov    BYTE PTR [eax],cl
  428707:	inc    eax
  428708:	inc    edx
  428709:	mov    cl,BYTE PTR [edx]
  42870b:	cmp    cl,0x83
  42870e:	jne    0x4286ff
  428710:	mov    BYTE PTR [eax],0x0
  428713:	mov    eax,DWORD PTR [esi+0x188]
  428719:	add    eax,edi
  42871b:	pop    edi
  42871c:	ret    
  42871d:	push   ebp
  42871e:	mov    ebp,esp
  428720:	sub    esp,0x14
  428723:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  42872a:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  428731:	mov    eax,DWORD PTR [ebx]
  428733:	mov    DWORD PTR [ebp-0x8],eax
  428736:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42873d:	push   esi
  42873e:	push   edi
  42873f:	mov    DWORD PTR [ebp-0x14],0xead71885
  428746:	mov    edi,DWORD PTR [ebp-0x4]
  428749:	mov    ecx,DWORD PTR [ebp-0x10]
  42874c:	mov    eax,0x75108ae
  428751:	xor    edi,eax
  428753:	mov    edx,0x3272f5
  428758:	xor    ecx,eax
  42875a:	add    edi,edx
  42875c:	add    ecx,edx
  42875e:	imul   edi,ecx
  428761:	jmp    0x4287a9
  428763:	mov    ecx,DWORD PTR [ebp-0x8]
  428766:	mov    esi,DWORD PTR [ebp-0x4]
  428769:	xor    ecx,eax
  42876b:	xor    esi,eax
  42876d:	add    ecx,edx
  42876f:	add    esi,edx
  428771:	test   esi,ecx
  428773:	mov    esi,DWORD PTR [ebp-0x8]
  428776:	mov    ecx,DWORD PTR [ebp-0x4]
  428779:	je     0x428790
  42877b:	xor    ecx,eax
  42877d:	xor    esi,eax
  42877f:	add    ecx,edx
  428781:	add    esi,edx
  428783:	shr    esi,cl
  428785:	mov    ecx,DWORD PTR [ebp-0x14]
  428788:	xor    ecx,eax
  42878a:	add    ecx,edx
  42878c:	xor    esi,ecx
  42878e:	jmp    0x42879a
  428790:	xor    esi,eax
  428792:	xor    ecx,eax
  428794:	add    esi,edx
  428796:	add    ecx,edx
  428798:	shr    esi,cl
  42879a:	mov    DWORD PTR [ebp-0x8],esi
  42879d:	mov    ecx,DWORD PTR [ebp-0x4]
  4287a0:	xor    ecx,eax
  4287a2:	lea    edi,[edi+ecx*1+0x3272f5]
  4287a9:	mov    ecx,DWORD PTR [ebp-0xc]
  4287ac:	mov    esi,DWORD PTR [ebp-0x4]
  4287af:	xor    esi,eax
  4287b1:	xor    ecx,eax
  4287b3:	sub    ecx,esi
  4287b5:	cmp    edi,ecx
  4287b7:	jbe    0x428763
  4287b9:	mov    eax,DWORD PTR [ebp-0x8]
  4287bc:	pop    edi
  4287bd:	mov    DWORD PTR [ebx],eax
  4287bf:	mov    eax,DWORD PTR [ebp-0x8]
  4287c2:	pop    esi
  4287c3:	leave  
  4287c4:	ret    
  4287c5:	push   ebp
  4287c6:	mov    ebp,esp
  4287c8:	sub    esp,0x38
  4287cb:	push   ebx
  4287cc:	mov    ebx,0xf89c85a5
  4287d1:	mov    DWORD PTR [ebp-0x4],ebx
  4287d4:	lea    ecx,[ebx-0x3]
  4287d7:	mov    DWORD PTR [ebp-0x24],ecx
  4287da:	mov    eax,DWORD PTR [ebp-0x4]
  4287dd:	mov    edx,DWORD PTR [ebp+0x8]
  4287e0:	push   esi
  4287e1:	mov    esi,0x75108ae
  4287e6:	xor    eax,esi
  4287e8:	push   edi
  4287e9:	mov    edi,0x3272f5
  4287ee:	add    eax,edi
  4287f0:	cmp    edx,eax
  4287f2:	mov    eax,DWORD PTR [ebp-0x4]
  4287f5:	je     0x42895a
  4287fb:	mov    edx,DWORD PTR [ebp+0xc]
  4287fe:	xor    eax,esi
  428800:	add    eax,edi
  428802:	cmp    edx,eax
  428804:	je     0x428957
  42880a:	mov    eax,DWORD PTR [ebp+0x10]
  42880d:	mov    edx,DWORD PTR [ebp+0xc]
  428810:	mov    DWORD PTR [ebp-0x14],eax
  428813:	mov    eax,DWORD PTR [ebp+0x8]
  428816:	mov    DWORD PTR [ebp-0x18],0xf89c853d
  42881d:	mov    DWORD PTR [ebp-0xc],eax
  428820:	lea    eax,[ebx-0x2]
  428823:	mov    DWORD PTR [ebp-0x1c],eax
  428826:	mov    DWORD PTR [ebp-0x10],ebx
  428829:	mov    DWORD PTR [ebp+0xc],ecx
  42882c:	mov    DWORD PTR [ebp+0x10],eax
  42882f:	mov    eax,DWORD PTR [ebp+0xc]
  428832:	xor    eax,esi
  428834:	mov    DWORD PTR [ebp-0x20],edx
  428837:	sub    edx,eax
  428839:	sub    edx,edi
  42883b:	mov    DWORD PTR [ebp+0x8],edx
  42883e:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  428845:	jmp    0x428947
  42884a:	mov    eax,DWORD PTR [ebp+0xc]
  42884d:	mov    ecx,DWORD PTR [ebp+0xc]
  428850:	xor    eax,esi
  428852:	xor    ecx,esi
  428854:	lea    ecx,[eax+ecx*1+0x64e5ea]
  42885b:	mov    eax,DWORD PTR [ebp+0x8]
  42885e:	xor    edx,edx
  428860:	div    ecx
  428862:	mov    eax,DWORD PTR [ebp+0x10]
  428865:	mov    ecx,DWORD PTR [ebp+0xc]
  428868:	xor    eax,esi
  42886a:	xor    ecx,esi
  42886c:	sub    eax,ecx
  42886e:	cmp    edx,eax
  428870:	jne    0x428906
  428876:	mov    eax,DWORD PTR [ebp+0x8]
  428879:	mov    ecx,DWORD PTR [ebp-0xc]
  42887c:	mov    dl,BYTE PTR [eax+ecx*1]
  42887f:	mov    eax,DWORD PTR [ebp-0x10]
  428882:	mov    ecx,DWORD PTR [ebp-0x8]
  428885:	xor    eax,esi
  428887:	xor    ecx,esi
  428889:	add    eax,edi
  42888b:	add    ecx,edi
  42888d:	cmp    eax,ecx
  42888f:	jae    0x4288d7
  428891:	lea    ecx,[eax-0x3272f5]
  428897:	mov    DWORD PTR [ebp-0x4],ecx
  42889a:	mov    ebx,DWORD PTR [ebp-0x4]
  42889d:	xor    ebx,esi
  42889f:	add    ebx,0x7f55d8e3
  4288a5:	lea    ecx,[ebp+eax*4-0x38]
  4288a9:	mov    DWORD PTR [ecx],ebx
  4288ab:	mov    ebx,DWORD PTR [ecx]
  4288ad:	cmp    ebx,0x244ecb80
  4288b3:	jbe    0x4288bd
  4288b5:	add    DWORD PTR [ecx],0x405fcc1
  4288bb:	jmp    0x4288c3
  4288bd:	add    DWORD PTR [ecx],0xfdaf433f
  4288c3:	mov    ecx,DWORD PTR [ebp-0x8]
  4288c6:	xor    ecx,esi
  4288c8:	inc    eax
  4288c9:	inc    DWORD PTR [ebp-0x4]
  4288cc:	add    ecx,edi
  4288ce:	cmp    eax,ecx
  4288d0:	jb     0x42889a
  4288d2:	mov    ebx,0xf89c85a5
  4288d7:	cmp    DWORD PTR [ebp-0x14],0x0
  4288db:	jne    0x4288e5
  4288dd:	xor    dl,0x7e
  4288e0:	add    dl,0x3
  4288e3:	jmp    0x4288fb
  4288e5:	mov    eax,DWORD PTR [ebp-0x18]
  4288e8:	xor    al,0xae
  4288ea:	mov    cl,0xb
  4288ec:	sub    cl,al
  4288ee:	add    dl,cl
  4288f0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4288f3:	xor    cl,0xae
  4288f6:	sub    cl,0xb
  4288f9:	ror    dl,cl
  4288fb:	xor    eax,eax
  4288fd:	mov    eax,DWORD PTR [ebp+0x8]
  428900:	mov    ecx,DWORD PTR [ebp-0xc]
  428903:	mov    BYTE PTR [eax+ecx*1],dl
  428906:	mov    eax,DWORD PTR [ebp+0x8]
  428909:	mov    ecx,DWORD PTR [ebp-0x10]
  42890c:	sub    eax,edi
  42890e:	xor    eax,esi
  428910:	cmp    eax,ecx
  428912:	jne    0x428935
  428914:	mov    eax,DWORD PTR [ebp+0x10]
  428917:	mov    ecx,DWORD PTR [ebp+0xc]
  42891a:	xor    eax,esi
  42891c:	xor    ecx,esi
  42891e:	sub    eax,ecx
  428920:	mov    ecx,DWORD PTR [ebp-0x20]
  428923:	sub    eax,edi
  428925:	xor    eax,esi
  428927:	mov    DWORD PTR [ebp+0x10],eax
  42892a:	mov    eax,DWORD PTR [ebp+0xc]
  42892d:	xor    eax,esi
  42892f:	sub    ecx,eax
  428931:	sub    ecx,edi
  428933:	jmp    0x428944
  428935:	mov    eax,DWORD PTR [ebp+0xc]
  428938:	xor    eax,esi
  42893a:	mov    ecx,0xffcd8d0b
  42893f:	sub    ecx,eax
  428941:	add    ecx,DWORD PTR [ebp+0x8]
  428944:	mov    DWORD PTR [ebp+0x8],ecx
  428947:	mov    eax,DWORD PTR [ebp+0x10]
  42894a:	cmp    eax,ebx
  42894c:	jne    0x42884a
  428952:	mov    eax,DWORD PTR [ebp-0x24]
  428955:	jmp    0x42895a
  428957:	mov    eax,DWORD PTR [ebp-0x4]
  42895a:	xor    eax,esi
  42895c:	add    eax,edi
  42895e:	pop    edi
  42895f:	pop    esi
  428960:	pop    ebx
  428961:	leave  
  428962:	ret    0xc
  428965:	push   ebp
  428966:	mov    ebp,esp
  428968:	sub    esp,0x420
  42896e:	mov    DWORD PTR [ebp-0x14],0xf89c85a5
  428975:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  42897c:	mov    DWORD PTR [ebp-0x18],0xf89c86a5
  428983:	push   ebx
  428984:	mov    DWORD PTR [ebp-0x1c],0xf89c85a4
  42898b:	mov    eax,DWORD PTR [ebp-0x14]
  42898e:	push   esi
  42898f:	mov    esi,0x75108ae
  428994:	push   edi
  428995:	xor    eax,esi
  428997:	mov    edi,0x3272f5
  42899c:	add    eax,edi
  42899e:	mov    DWORD PTR [ebp-0x8],eax
  4289a1:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  4289a8:	mov    DWORD PTR [ebp-0x4],0xead71885
  4289af:	mov    DWORD PTR [ebp-0x10],0x8
  4289b6:	mov    ecx,ecx
  4289b8:	mov    eax,DWORD PTR [ebp-0xc]
  4289bb:	mov    ecx,DWORD PTR [ebp-0x14]
  4289be:	xor    eax,esi
  4289c0:	xor    ecx,esi
  4289c2:	add    eax,edi
  4289c4:	add    ecx,edi
  4289c6:	imul   eax,ecx
  4289c9:	jmp    0x4289fc
  4289cb:	mov    eax,DWORD PTR [ebp-0x4]
  4289ce:	sub    eax,edi
  4289d0:	xor    eax,esi
  4289d2:	mov    DWORD PTR [ebp-0x8],eax
  4289d5:	lea    ebx,[ebp-0x8]
  4289d8:	call   0x42871d
  4289dd:	mov    DWORD PTR [ebp-0x8],eax
  4289e0:	mov    eax,DWORD PTR [ebp-0x8]
  4289e3:	mov    ecx,DWORD PTR [ebp-0x4]
  4289e6:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  4289ed:	mov    eax,DWORD PTR [ebp-0xc]
  4289f0:	mov    ecx,DWORD PTR [ebp-0x4]
  4289f3:	xor    eax,esi
  4289f5:	lea    eax,[eax+ecx*1+0x3272f5]
  4289fc:	mov    DWORD PTR [ebp-0x4],eax
  4289ff:	mov    eax,DWORD PTR [ebp-0x18]
  428a02:	mov    ecx,DWORD PTR [ebp-0xc]
  428a05:	xor    ecx,esi
  428a07:	xor    eax,esi
  428a09:	sub    eax,ecx
  428a0b:	mov    ecx,DWORD PTR [ebp-0x4]
  428a0e:	cmp    ecx,eax
  428a10:	jbe    0x4289cb
  428a12:	mov    eax,DWORD PTR [ebp-0x1c]
  428a15:	xor    eax,esi
  428a17:	add    eax,edi
  428a19:	mov    DWORD PTR [ebp-0x8],eax
  428a1c:	mov    DWORD PTR [ebp-0x18],0xf89c86a4
  428a23:	mov    ebx,ebx
  428a25:	jmp    0x428a88
  428a27:	mov    ecx,DWORD PTR [ebp-0x20]
  428a2a:	mov    eax,DWORD PTR [ebp-0x8]
  428a2d:	xor    ecx,esi
  428a2f:	add    ecx,edi
  428a31:	shr    eax,cl
  428a33:	mov    DWORD PTR [ebp-0x4],eax
  428a36:	mov    eax,DWORD PTR [ebp+0x8]
  428a39:	mov    cl,BYTE PTR [eax]
  428a3b:	mov    BYTE PTR [ebp+0xb],cl
  428a3e:	mov    cl,BYTE PTR [ebp+0xb]
  428a41:	mov    edx,DWORD PTR [ebp-0x8]
  428a44:	movzx  ecx,cl
  428a47:	xor    ecx,edx
  428a49:	mov    DWORD PTR [ebp+0x8],ecx
  428a4c:	mov    ecx,DWORD PTR [ebp-0x18]
  428a4f:	mov    edx,DWORD PTR [ebp+0x8]
  428a52:	xor    ecx,esi
  428a54:	add    ecx,edi
  428a56:	and    ecx,edx
  428a58:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  428a5f:	mov    edx,DWORD PTR [ebp-0x4]
  428a62:	xor    ecx,edx
  428a64:	mov    DWORD PTR [ebp-0x8],ecx
  428a67:	mov    ecx,DWORD PTR [ebp-0xc]
  428a6a:	xor    ecx,esi
  428a6c:	lea    eax,[eax+ecx*1+0x3272f5]
  428a73:	mov    DWORD PTR [ebp+0x8],eax
  428a76:	mov    eax,DWORD PTR [ebp-0xc]
  428a79:	xor    eax,esi
  428a7b:	mov    ecx,0xffcd8d0b
  428a80:	sub    ecx,eax
  428a82:	add    ecx,DWORD PTR [ebp-0x10]
  428a85:	mov    DWORD PTR [ebp-0x10],ecx
  428a88:	mov    eax,DWORD PTR [ebp-0x14]
  428a8b:	mov    ecx,DWORD PTR [ebp-0x10]
  428a8e:	xor    eax,esi
  428a90:	add    eax,edi
  428a92:	cmp    ecx,eax
  428a94:	jne    0x428a27
  428a96:	mov    eax,DWORD PTR [ebp-0x1c]
  428a99:	mov    ecx,DWORD PTR [ebp-0x8]
  428a9c:	xor    eax,esi
  428a9e:	add    eax,edi
  428aa0:	pop    edi
  428aa1:	pop    esi
  428aa2:	xor    eax,ecx
  428aa4:	pop    ebx
  428aa5:	leave  
  428aa6:	ret    0x4
  428aa9:	push   ebp
  428aaa:	mov    ebp,esp
  428aac:	mov    eax,DWORD PTR [ebp+0x1c]
  428aaf:	mov    ecx,DWORD PTR [ebp+0x8]
  428ab2:	mov    edx,DWORD PTR [ebp+0x10]
  428ab5:	mov    eax,DWORD PTR [eax+0x190]
  428abb:	mov    eax,DWORD PTR [eax]
  428abd:	sub    esp,0x64
  428ac0:	push   ebx
  428ac1:	push   esi
  428ac2:	push   edi
  428ac3:	mov    edi,0x75108ae
  428ac8:	xor    ecx,edi
  428aca:	mov    ebx,0x3272f5
  428acf:	add    ecx,ebx
  428ad1:	cmp    ecx,edx
  428ad3:	jne    0x428ae4
  428ad5:	or     DWORD PTR ds:0x3750c3f,0x4263eb2c
  428adf:	jmp    0x428fe0
  428ae4:	mov    ecx,DWORD PTR [ebp+0x8]
  428ae7:	mov    esi,DWORD PTR [ebp+0x14]
  428aea:	mov    edx,DWORD PTR [esi]
  428aec:	xor    ecx,edi
  428aee:	add    ecx,ebx
  428af0:	cmp    edx,ecx
  428af2:	je     0x428f9b
  428af8:	mov    ecx,DWORD PTR [ebp+0x1c]
  428afb:	mov    DWORD PTR [ebp-0x1c],eax
  428afe:	mov    DWORD PTR [ebp+0x1c],ecx
  428b01:	mov    ecx,DWORD PTR [ebp+0x18]
  428b04:	mov    eax,DWORD PTR [esi]
  428b06:	mov    DWORD PTR [ebp-0x20],eax
  428b09:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  428b10:	mov    edx,0xf89c85a2
  428b15:	mov    DWORD PTR [ebp-0x8],edx
  428b18:	mov    eax,DWORD PTR [ebp+0x1c]
  428b1b:	mov    DWORD PTR [ebp+0x1c],eax
  428b1e:	mov    eax,DWORD PTR [ebp+0x1c]
  428b21:	mov    eax,DWORD PTR [eax+0x190]
  428b27:	mov    eax,DWORD PTR [eax]
  428b29:	mov    DWORD PTR [ebp-0x24],ecx
  428b2c:	mov    ecx,DWORD PTR [ebp+0x1c]
  428b2f:	mov    ecx,DWORD PTR [ecx+0x190]
  428b35:	mov    ecx,DWORD PTR [ecx]
  428b37:	add    ecx,DWORD PTR [eax+0x3c]
  428b3a:	mov    DWORD PTR [ebp+0x10],ecx
  428b3d:	mov    eax,DWORD PTR [ebp+0x8]
  428b40:	xor    eax,edi
  428b42:	add    eax,ebx
  428b44:	mov    DWORD PTR [ebp-0x4],eax
  428b47:	mov    eax,DWORD PTR [ebp+0x8]
  428b4a:	xor    eax,edi
  428b4c:	add    eax,ebx
  428b4e:	mov    DWORD PTR [ebp+0x18],eax
  428b51:	mov    eax,DWORD PTR [ebp+0x10]
  428b54:	mov    eax,DWORD PTR [eax+0x50]
  428b57:	sub    eax,0xc
  428b5a:	mov    DWORD PTR [ebp-0x28],eax
  428b5d:	mov    eax,DWORD PTR [ebp+0x10]
  428b60:	mov    eax,DWORD PTR [eax+0x38]
  428b63:	mov    ecx,DWORD PTR [ebp+0x10]
  428b66:	dec    eax
  428b67:	test   DWORD PTR [ecx+0x54],eax
  428b6a:	mov    eax,DWORD PTR [ebp+0x10]
  428b6d:	je     0x428b87
  428b6f:	mov    eax,DWORD PTR [eax+0x38]
  428b72:	mov    ecx,DWORD PTR [ebp+0x10]
  428b75:	mov    ecx,DWORD PTR [ecx+0x54]
  428b78:	dec    eax
  428b79:	not    eax
  428b7b:	and    ecx,eax
  428b7d:	mov    eax,DWORD PTR [ebp+0x10]
  428b80:	mov    eax,DWORD PTR [eax+0x38]
  428b83:	add    eax,ecx
  428b85:	jmp    0x428b8a
  428b87:	mov    eax,DWORD PTR [eax+0x54]
  428b8a:	mov    DWORD PTR [ebp+0x1c],eax
  428b8d:	mov    eax,DWORD PTR [ebp+0x8]
  428b90:	xor    eax,edi
  428b92:	add    eax,ebx
  428b94:	mov    DWORD PTR [ebp+0x18],eax
  428b97:	mov    eax,DWORD PTR [ebp+0x8]
  428b9a:	xor    eax,edi
  428b9c:	add    eax,ebx
  428b9e:	mov    DWORD PTR [ebp+0x18],eax
  428ba1:	mov    eax,DWORD PTR [ebp+0x8]
  428ba4:	mov    ecx,DWORD PTR [ebp-0x24]
  428ba7:	xor    eax,edi
  428ba9:	add    eax,ebx
  428bab:	mov    DWORD PTR [ecx],eax
  428bad:	mov    DWORD PTR [ebp+0x18],edx
  428bb0:	mov    DWORD PTR [ebp+0x18],0xf89c85a3
  428bb7:	mov    DWORD PTR [ebp+0x18],0xf89c85a0
  428bbe:	mov    DWORD PTR [ebp+0x18],0xf89c85a1
  428bc5:	mov    eax,DWORD PTR [ebp-0x8]
  428bc8:	mov    ecx,DWORD PTR [ebp+0x1c]
  428bcb:	xor    eax,edi
  428bcd:	add    eax,ebx
  428bcf:	imul   eax,ecx
  428bd2:	mov    ecx,DWORD PTR [ebp+0x8]
  428bd5:	mov    edx,DWORD PTR [ebp-0x28]
  428bd8:	xor    ecx,edi
  428bda:	lea    ecx,[ecx+edx*1+0x3272f5]
  428be1:	cmp    eax,ecx
  428be3:	jae    0x428f94
  428be9:	mov    eax,DWORD PTR [ebp+0x8]
  428bec:	xor    eax,edi
  428bee:	add    eax,ebx
  428bf0:	mov    DWORD PTR [ebp+0x18],eax
  428bf3:	mov    eax,DWORD PTR [ebp+0x1c]
  428bf6:	add    eax,DWORD PTR [ebp-0x1c]
  428bf9:	mov    DWORD PTR [ebp-0x4],eax
  428bfc:	push   DWORD PTR [ebp-0x4]
  428bff:	mov    esi,DWORD PTR [ebp-0x1c]
  428c02:	mov    ecx,DWORD PTR [ebp+0x10]
  428c05:	call   0x427d55
  428c0a:	mov    DWORD PTR [ebp+0xc],eax
  428c0d:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  428c14:	mov    eax,DWORD PTR [ebp-0x18]
  428c17:	xor    eax,edi
  428c19:	lea    ecx,[ebp-0x40]
  428c1c:	add    eax,ebx
  428c1e:	push   ecx
  428c1f:	call   0x4282e9
  428c24:	mov    eax,DWORD PTR [ebp+0xc]
  428c27:	test   eax,eax
  428c29:	je     0x428c79
  428c2b:	mov    eax,DWORD PTR [ebp-0x18]
  428c2e:	xor    eax,edi
  428c30:	add    eax,ebx
  428c32:	push   eax
  428c33:	push   DWORD PTR [ebp+0xc]
  428c36:	lea    eax,[ebp-0x40]
  428c39:	push   eax
  428c3a:	call   0x4281df
  428c3f:	mov    eax,DWORD PTR [ebp-0x4]
  428c42:	mov    DWORD PTR [ebp-0x18],eax
  428c45:	mov    eax,DWORD PTR [ebp-0x18]
  428c48:	mov    ecx,DWORD PTR [ebp-0x1c]
  428c4b:	sub    eax,ecx
  428c4d:	mov    DWORD PTR [ebp-0x18],eax
  428c50:	mov    eax,DWORD PTR [ebp+0xc]
  428c53:	mov    ecx,DWORD PTR [ebp+0xc]
  428c56:	mov    eax,DWORD PTR [eax+0x10]
  428c59:	add    eax,DWORD PTR [ecx+0xc]
  428c5c:	mov    ecx,DWORD PTR [ebp-0x18]
  428c5f:	cmp    ecx,eax
  428c61:	jb     0x428c79
  428c63:	mov    eax,DWORD PTR [ebp+0xc]
  428c66:	mov    eax,DWORD PTR [eax+0xc]
  428c69:	mov    ecx,DWORD PTR [ebp+0xc]
  428c6c:	add    eax,DWORD PTR [ecx+0x8]
  428c6f:	mov    ecx,DWORD PTR [ebp-0x18]
  428c72:	sub    eax,ecx
  428c74:	jmp    0x428f67
  428c79:	push   0xc
  428c7b:	push   DWORD PTR [ebp-0x4]
  428c7e:	lea    eax,[ebp-0x4c]
  428c81:	push   eax
  428c82:	call   0x4281df
  428c87:	mov    eax,0xf89c85a5
  428c8c:	mov    DWORD PTR [ebp-0x2c],eax
  428c8f:	mov    DWORD PTR [ebp-0x30],0xf89c85a2
  428c96:	mov    DWORD PTR [ebp-0x34],0xf89c85a3
  428c9d:	mov    DWORD PTR [ebp-0x38],0xf89c85a0
  428ca4:	lea    ecx,[ebp-0x2c]
  428ca7:	mov    DWORD PTR [ebp-0xc],ecx
  428caa:	lea    ecx,[ebp-0x30]
  428cad:	mov    DWORD PTR [ebp-0x10],ecx
  428cb0:	lea    ecx,[ebp-0x34]
  428cb3:	mov    DWORD PTR [ebp+0xc],ecx
  428cb6:	lea    ecx,[ebp-0x38]
  428cb9:	mov    DWORD PTR [ebp-0x14],ecx
  428cbc:	mov    ecx,DWORD PTR [ebp+0x8]
  428cbf:	xor    ecx,edi
  428cc1:	add    ecx,ebx
  428cc3:	mov    DWORD PTR [ebp-0x18],ecx
  428cc6:	jmp    0x428ec2
  428ccb:	cmp    eax,0xf89c85a3
  428cd0:	je     0x428ed4
  428cd6:	mov    ecx,DWORD PTR [ebp-0x8]
  428cd9:	xor    ecx,edi
  428cdb:	mov    esi,eax
  428cdd:	add    ecx,ebx
  428cdf:	mov    DWORD PTR [ebp+0x18],ecx
  428ce2:	mov    eax,DWORD PTR [ebp-0x18]
  428ce5:	xor    esi,edi
  428ce7:	lea    eax,[eax+esi*1+0x3272f5]
  428cee:	mov    DWORD PTR [ebp-0x18],eax
  428cf1:	mov    eax,DWORD PTR [ebp-0x8]
  428cf4:	mov    ecx,DWORD PTR [ebp-0x18]
  428cf7:	xor    eax,edi
  428cf9:	add    eax,ebx
  428cfb:	cmp    ecx,eax
  428cfd:	jne    0x428d12
  428cff:	mov    eax,DWORD PTR [ebp+0x8]
  428d02:	xor    eax,edi
  428d04:	add    eax,ebx
  428d06:	push   eax
  428d07:	push   0xc
  428d09:	lea    eax,[ebp-0x4c]
  428d0c:	push   eax
  428d0d:	call   0x4287c5
  428d12:	mov    eax,DWORD PTR [ebp-0xc]
  428d15:	mov    eax,DWORD PTR [eax]
  428d17:	xor    eax,edi
  428d19:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428d20:	mov    ecx,DWORD PTR [ebp+0x8]
  428d23:	xor    ecx,edi
  428d25:	movzx  eax,al
  428d28:	add    ecx,ebx
  428d2a:	cmp    eax,ecx
  428d2c:	je     0x428eaa
  428d32:	mov    eax,DWORD PTR [ebp-0x10]
  428d35:	mov    eax,DWORD PTR [eax]
  428d37:	xor    eax,edi
  428d39:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428d40:	mov    ecx,DWORD PTR [ebp+0x8]
  428d43:	xor    ecx,edi
  428d45:	movzx  eax,al
  428d48:	add    ecx,ebx
  428d4a:	cmp    eax,ecx
  428d4c:	je     0x428eaa
  428d52:	mov    eax,DWORD PTR [ebp+0xc]
  428d55:	mov    eax,DWORD PTR [eax]
  428d57:	xor    eax,edi
  428d59:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428d60:	mov    ecx,DWORD PTR [ebp+0x8]
  428d63:	xor    ecx,edi
  428d65:	movzx  eax,al
  428d68:	add    ecx,ebx
  428d6a:	cmp    eax,ecx
  428d6c:	je     0x428eaa
  428d72:	mov    eax,DWORD PTR [ebp-0x14]
  428d75:	mov    eax,DWORD PTR [eax]
  428d77:	xor    eax,edi
  428d79:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428d80:	mov    ecx,DWORD PTR [ebp+0x8]
  428d83:	xor    ecx,edi
  428d85:	movzx  eax,al
  428d88:	add    ecx,ebx
  428d8a:	cmp    eax,ecx
  428d8c:	je     0x428eaa
  428d92:	mov    eax,DWORD PTR [ebp-0x10]
  428d95:	mov    eax,DWORD PTR [eax]
  428d97:	xor    eax,edi
  428d99:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428da0:	mov    ecx,DWORD PTR [ebp-0xc]
  428da3:	mov    ecx,DWORD PTR [ecx]
  428da5:	xor    ecx,edi
  428da7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428dae:	xor    al,cl
  428db0:	mov    ecx,DWORD PTR [ebp+0xc]
  428db3:	mov    ecx,DWORD PTR [ecx]
  428db5:	xor    ecx,edi
  428db7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428dbe:	or     al,cl
  428dc0:	mov    ecx,DWORD PTR [ebp-0xc]
  428dc3:	mov    ecx,DWORD PTR [ecx]
  428dc5:	xor    ecx,edi
  428dc7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428dce:	cmp    cl,al
  428dd0:	jne    0x428eaa
  428dd6:	mov    eax,DWORD PTR [ebp+0xc]
  428dd9:	mov    eax,DWORD PTR [eax]
  428ddb:	xor    eax,edi
  428ddd:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428de4:	mov    ecx,DWORD PTR [ebp-0x10]
  428de7:	mov    ecx,DWORD PTR [ecx]
  428de9:	xor    ecx,edi
  428deb:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428df2:	xor    al,cl
  428df4:	mov    ecx,DWORD PTR [ebp-0x14]
  428df7:	mov    ecx,DWORD PTR [ecx]
  428df9:	xor    ecx,edi
  428dfb:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428e02:	or     al,cl
  428e04:	mov    ecx,DWORD PTR [ebp-0x10]
  428e07:	mov    ecx,DWORD PTR [ecx]
  428e09:	xor    ecx,edi
  428e0b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428e12:	cmp    cl,al
  428e14:	jne    0x428eaa
  428e1a:	mov    eax,DWORD PTR [ebp-0x14]
  428e1d:	mov    eax,DWORD PTR [eax]
  428e1f:	xor    eax,edi
  428e21:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428e28:	mov    ecx,DWORD PTR [ebp+0xc]
  428e2b:	mov    ecx,DWORD PTR [ecx]
  428e2d:	xor    ecx,edi
  428e2f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428e36:	xor    al,cl
  428e38:	mov    ecx,DWORD PTR [ebp-0xc]
  428e3b:	mov    ecx,DWORD PTR [ecx]
  428e3d:	xor    ecx,edi
  428e3f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428e46:	or     al,cl
  428e48:	mov    ecx,DWORD PTR [ebp+0xc]
  428e4b:	mov    ecx,DWORD PTR [ecx]
  428e4d:	xor    ecx,edi
  428e4f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428e56:	cmp    cl,al
  428e58:	jne    0x428eaa
  428e5a:	mov    eax,DWORD PTR [ebp-0x14]
  428e5d:	mov    eax,DWORD PTR [eax]
  428e5f:	xor    eax,edi
  428e61:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428e68:	mov    ecx,DWORD PTR [ebp-0xc]
  428e6b:	mov    ecx,DWORD PTR [ecx]
  428e6d:	xor    ecx,edi
  428e6f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428e76:	xor    al,cl
  428e78:	mov    ecx,DWORD PTR [ebp-0x10]
  428e7b:	mov    ecx,DWORD PTR [ecx]
  428e7d:	xor    ecx,edi
  428e7f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428e86:	or     al,cl
  428e88:	mov    ecx,DWORD PTR [ebp-0x14]
  428e8b:	mov    ecx,DWORD PTR [ecx]
  428e8d:	xor    ecx,edi
  428e8f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428e96:	cmp    cl,al
  428e98:	jne    0x428eaa
  428e9a:	lea    eax,[ebp-0x4c]
  428e9d:	push   eax
  428e9e:	call   0x428965
  428ea3:	mov    ecx,DWORD PTR [ebp-0x44]
  428ea6:	cmp    eax,ecx
  428ea8:	je     0x428eb4
  428eaa:	mov    eax,DWORD PTR [ebp+0x8]
  428ead:	xor    eax,edi
  428eaf:	add    eax,ebx
  428eb1:	mov    DWORD PTR [ebp+0x18],eax
  428eb4:	mov    eax,DWORD PTR [ebp-0x8]
  428eb7:	xor    eax,edi
  428eb9:	lea    eax,[eax+esi*1+0x3272f5]
  428ec0:	xor    eax,edi
  428ec2:	mov    ecx,DWORD PTR [ebp+0x8]
  428ec5:	mov    edx,DWORD PTR [ebp+0x18]
  428ec8:	xor    ecx,edi
  428eca:	add    ecx,ebx
  428ecc:	cmp    edx,ecx
  428ece:	je     0x428ccb
  428ed4:	mov    eax,DWORD PTR [ebp+0x8]
  428ed7:	mov    ecx,DWORD PTR [ebp+0x18]
  428eda:	xor    eax,edi
  428edc:	add    eax,ebx
  428ede:	cmp    ecx,eax
  428ee0:	jne    0x428ef3
  428ee2:	mov    eax,DWORD PTR [ebp-0x8]
  428ee5:	mov    ecx,DWORD PTR [ebp+0x1c]
  428ee8:	xor    eax,edi
  428eea:	lea    eax,[eax+ecx*1+0x3272f5]
  428ef1:	jmp    0x428f6a
  428ef3:	push   0x18
  428ef5:	push   DWORD PTR [ebp-0x4]
  428ef8:	lea    eax,[ebp-0x64]
  428efb:	push   eax
  428efc:	call   0x4281df
  428f01:	mov    eax,DWORD PTR [ebp+0x8]
  428f04:	mov    ecx,DWORD PTR [ebp-0x18]
  428f07:	xor    eax,edi
  428f09:	add    eax,ebx
  428f0b:	cmp    eax,ecx
  428f0d:	je     0x428f22
  428f0f:	mov    eax,DWORD PTR [ebp+0x8]
  428f12:	xor    eax,edi
  428f14:	add    eax,ebx
  428f16:	push   eax
  428f17:	push   0x18
  428f19:	lea    eax,[ebp-0x64]
  428f1c:	push   eax
  428f1d:	call   0x4287c5
  428f22:	mov    eax,DWORD PTR [ebp-0x4]
  428f25:	add    eax,0x18
  428f28:	mov    DWORD PTR [ebp+0x18],eax
  428f2b:	push   DWORD PTR [ebp-0x50]
  428f2e:	push   DWORD PTR [ebp+0x18]
  428f31:	mov    eax,DWORD PTR [ebp-0x54]
  428f34:	add    eax,DWORD PTR [ebp-0x20]
  428f37:	push   eax
  428f38:	call   0x4281df
  428f3d:	mov    eax,DWORD PTR [ebp+0x8]
  428f40:	mov    ecx,DWORD PTR [ebp-0x18]
  428f43:	xor    eax,edi
  428f45:	add    eax,ebx
  428f47:	cmp    eax,ecx
  428f49:	je     0x428f5c
  428f4b:	push   0x0
  428f4d:	push   DWORD PTR [ebp-0x50]
  428f50:	mov    eax,DWORD PTR [ebp-0x54]
  428f53:	add    eax,DWORD PTR [ebp-0x20]
  428f56:	push   eax
  428f57:	call   0x4287c5
  428f5c:	mov    eax,DWORD PTR [ebp-0x24]
  428f5f:	mov    ecx,DWORD PTR [ebp-0x50]
  428f62:	add    DWORD PTR [eax],ecx
  428f64:	mov    eax,DWORD PTR [ebp-0x50]
  428f67:	add    eax,DWORD PTR [ebp+0x1c]
  428f6a:	mov    DWORD PTR [ebp+0x1c],eax
  428f6d:	mov    eax,DWORD PTR [ebp-0x8]
  428f70:	mov    ecx,DWORD PTR [ebp+0x1c]
  428f73:	xor    eax,edi
  428f75:	add    eax,ebx
  428f77:	imul   eax,ecx
  428f7a:	mov    ecx,DWORD PTR [ebp+0x8]
  428f7d:	mov    edx,DWORD PTR [ebp-0x28]
  428f80:	xor    ecx,edi
  428f82:	lea    ecx,[ecx+edx*1+0x3272f5]
  428f89:	cmp    eax,ecx
  428f8b:	jb     0x428be9
  428f91:	mov    esi,DWORD PTR [ebp+0x14]
  428f94:	mov    eax,DWORD PTR [ebp-0x20]
  428f97:	mov    DWORD PTR [esi],eax
  428f99:	jmp    0x428fe0
  428f9b:	mov    ecx,DWORD PTR [ebp+0x8]
  428f9e:	mov    edx,DWORD PTR [ebp+0xc]
  428fa1:	xor    ecx,edi
  428fa3:	xor    edx,edi
  428fa5:	add    ecx,ebx
  428fa7:	add    edx,ebx
  428fa9:	cmp    ecx,edx
  428fab:	jne    0x428fbf
  428fad:	mov    eax,ds:0x7f642ddc
  428fb2:	imul   eax,eax,0x9f15fccf
  428fb8:	mov    ds:0x7f642ddc,eax
  428fbd:	jmp    0x428fe0
  428fbf:	mov    ecx,DWORD PTR [ebp+0x8]
  428fc2:	xor    ecx,edi
  428fc4:	add    ecx,ebx
  428fc6:	cmp    eax,ecx
  428fc8:	je     0x428fd6
  428fca:	sub    DWORD PTR ds:0xf861e3c,0x709beac4
  428fd4:	jmp    0x428fe0
  428fd6:	and    DWORD PTR ds:0x3343fadc,0x5265ec3f
  428fe0:	pop    edi
  428fe1:	pop    esi
  428fe2:	pop    ebx
  428fe3:	leave  
  428fe4:	ret    0x18
  428fe7:	push   ebp
  428fe8:	mov    ebp,esp
  428fea:	and    esp,0xfffffff8
  428fed:	mov    eax,DWORD PTR [ebp+0x20]
  428ff0:	sub    esp,0x14
  428ff3:	push   ebx
  428ff4:	mov    ebx,DWORD PTR [ebp+0x14]
  428ff7:	push   esi
  428ff8:	push   edi
  428ff9:	cmp    eax,0xf89c85a5
  428ffe:	jne    0x42900a
  429000:	push   0xf89c85a2
  429005:	jmp    0x42913c
  42900a:	mov    eax,DWORD PTR [ebp+0x20]
  42900d:	cmp    eax,0xf89c85a2
  429012:	jne    0x42901e
  429014:	push   0xf89c85a3
  429019:	jmp    0x42913c
  42901e:	mov    eax,DWORD PTR [ebp+0x20]
  429021:	cmp    eax,0xf89c85a3
  429026:	jne    0x429032
  429028:	push   0xf89c85a0
  42902d:	jmp    0x42913c
  429032:	mov    eax,DWORD PTR [ebp+0x20]
  429035:	cmp    eax,0xf89c85a0
  42903a:	jne    0x429046
  42903c:	push   0xf89c85a1
  429041:	jmp    0x42913c
  429046:	mov    ecx,DWORD PTR [ebp+0x20]
  429049:	mov    eax,0xf89c85bc
  42904e:	cmp    ecx,eax
  429050:	jne    0x42910c
  429056:	mov    eax,DWORD PTR [ebp+0x10]
  429059:	mov    DWORD PTR [esp+0xc],eax
  42905d:	mov    eax,DWORD PTR [ebp+0x18]
  429060:	mov    DWORD PTR [esp+0x14],eax
  429064:	mov    eax,DWORD PTR [ebp+0xc]
  429067:	mov    DWORD PTR [esp+0x18],eax
  42906b:	mov    eax,DWORD PTR [ebp+0x8]
  42906e:	mov    DWORD PTR [esp+0x10],eax
  429072:	mov    eax,DWORD PTR [esp+0x10]
  429076:	mov    ecx,DWORD PTR [esp+0x14]
  42907a:	mov    edi,0x75108ae
  42907f:	xor    eax,edi
  429081:	mov    esi,0x3272f5
  429086:	add    eax,esi
  429088:	mov    DWORD PTR [ecx],eax
  42908a:	mov    eax,DWORD PTR [esp+0xc]
  42908e:	mov    eax,DWORD PTR [eax+0x194]
  429094:	mov    ecx,DWORD PTR [eax]
  429096:	mov    eax,DWORD PTR [esp+0xc]
  42909a:	mov    eax,DWORD PTR [eax+0x194]
  4290a0:	mov    eax,DWORD PTR [eax]
  4290a2:	add    eax,DWORD PTR [ecx+0x3c]
  4290a5:	mov    ecx,DWORD PTR [esp+0xc]
  4290a9:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4290af:	mov    ecx,DWORD PTR [ecx+0x14]
  4290b2:	push   0x4
  4290b4:	push   0x3000
  4290b9:	push   DWORD PTR [eax+0x50]
  4290bc:	push   0x0
  4290be:	call   ecx
  4290c0:	mov    DWORD PTR [ebx],eax
  4290c2:	mov    eax,DWORD PTR [esp+0x10]
  4290c6:	push   DWORD PTR [esp+0xc]
  4290ca:	xor    eax,edi
  4290cc:	add    eax,esi
  4290ce:	mov    DWORD PTR [esp+0x20],eax
  4290d2:	lea    eax,[esp+0x20]
  4290d6:	push   eax
  4290d7:	push   ebx
  4290d8:	push   DWORD PTR [esp+0x20]
  4290dc:	push   DWORD PTR [esp+0x28]
  4290e0:	push   DWORD PTR [esp+0x24]
  4290e4:	call   0x428aa9
  4290e9:	mov    eax,DWORD PTR [esp+0x10]
  4290ed:	mov    ecx,DWORD PTR [ebx]
  4290ef:	xor    eax,edi
  4290f1:	add    eax,esi
  4290f3:	cmp    ecx,eax
  4290f5:	je     0x429153
  4290f7:	mov    eax,DWORD PTR [esp+0x18]
  4290fb:	mov    ecx,DWORD PTR [esp+0x14]
  4290ff:	xor    eax,edi
  429101:	add    eax,esi
  429103:	imul   eax,DWORD PTR [esp+0x1c]
  429108:	mov    DWORD PTR [ecx],eax
  42910a:	jmp    0x429153
  42910c:	mov    ecx,DWORD PTR [ebp+0x20]
  42910f:	cmp    ecx,0xf89c85a1
  429115:	jne    0x42911e
  429117:	push   0xf89c85be
  42911c:	jmp    0x42913c
  42911e:	mov    ecx,DWORD PTR [ebp+0x20]
  429121:	cmp    ecx,0xf89c85be
  429127:	jne    0x429130
  429129:	push   0xf89c85bf
  42912e:	jmp    0x42913c
  429130:	mov    ecx,DWORD PTR [ebp+0x20]
  429133:	cmp    ecx,0xf89c85bf
  429139:	jne    0x429153
  42913b:	push   eax
  42913c:	push   DWORD PTR [ebp+0x1c]
  42913f:	push   DWORD PTR [ebp+0x18]
  429142:	push   ebx
  429143:	push   DWORD PTR [ebp+0x10]
  429146:	push   DWORD PTR [ebp+0xc]
  429149:	push   DWORD PTR [ebp+0x8]
  42914c:	call   0x428fe7
  429151:	mov    DWORD PTR [ebx],eax
  429153:	mov    eax,DWORD PTR [ebx]
  429155:	pop    edi
  429156:	pop    esi
  429157:	pop    ebx
  429158:	mov    esp,ebp
  42915a:	pop    ebp
  42915b:	ret    0x1c
  42915e:	push   ebp
  42915f:	mov    ebp,esp
  429161:	sub    esp,0xc
  429164:	mov    eax,0xf89c85a5
  429169:	mov    DWORD PTR [ebp-0x8],eax
  42916c:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  429173:	mov    ecx,DWORD PTR [ebp-0x8]
  429176:	xor    ecx,0x75108ae
  42917c:	add    ecx,0x3272f5
  429182:	mov    DWORD PTR [ebp-0x4],ecx
  429185:	mov    ecx,DWORD PTR [ebp+0xc]
  429188:	push   eax
  429189:	mov    DWORD PTR [ebp+0xc],ecx
  42918c:	push   DWORD PTR [ebp+0xc]
  42918f:	lea    eax,[ebp-0x4]
  429192:	push   DWORD PTR [ebp+0x8]
  429195:	push   eax
  429196:	push   DWORD PTR [ebp+0xc]
  429199:	push   DWORD PTR [ebp-0xc]
  42919c:	push   DWORD PTR [ebp-0x8]
  42919f:	call   0x428fe7
  4291a4:	mov    DWORD PTR [ebp-0x4],eax
  4291a7:	mov    eax,DWORD PTR [ebp-0x4]
  4291aa:	leave  
  4291ab:	ret    0x8
