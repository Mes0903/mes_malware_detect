
c6a407ce45b5949e06262f9d2027b387ccb976f7becbcec4662b455885dfcba2.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	push   ecx
  411001:	push   ebp
  411002:	mov    ebp,DWORD PTR [esp+0x10]
  411006:	xor    eax,eax
  411008:	test   ebp,ebp
  41100a:	push   esi
  41100b:	mov    DWORD PTR [esp+0x8],eax
  41100f:	mov    esi,0xfffffffd
  411014:	je     0x41107a
  411016:	push   ebx
  411017:	push   edi
  411018:	mov    edi,DWORD PTR [esp+0x18]
  41101c:	mov    DWORD PTR [esp+0x1c],0x1
  411024:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  411028:	add    esi,0x2
  41102b:	inc    esi
  41102c:	mov    BYTE PTR [esi+edi*1],cl
  41102f:	mov    ecx,DWORD PTR [esp+0x24]
  411033:	movzx  ecx,BYTE PTR [eax+ecx*1]
  411037:	mov    edx,DWORD PTR [esp+0x10]
  41103b:	mov    eax,DWORD PTR [esp+0x1c]
  41103f:	add    edx,eax
  411041:	mov    DWORD PTR [esp+0x10],edx
  411045:	ror    eax,cl
  411047:	mov    eax,DWORD PTR [esp+0x10]
  41104b:	mov    edx,eax
  41104d:	shr    edx,0x3
  411050:	mov    ebx,0x1
  411055:	sub    ebx,edx
  411057:	imul   eax,ebx
  41105a:	mov    DWORD PTR [esp+0x10],eax
  41105e:	shl    ebx,0x3
  411061:	mov    bl,BYTE PTR [esi+edi*1]
  411064:	add    bl,cl
  411066:	mov    ecx,DWORD PTR [esp+0x20]
  41106a:	mov    BYTE PTR [esi+edi*1],bl
  41106d:	sub    esi,0x2
  411070:	cmp    esi,ecx
  411072:	jl     0x411024
  411074:	pop    edi
  411075:	pop    ebx
  411076:	pop    esi
  411077:	pop    ebp
  411078:	pop    ecx
  411079:	ret    
  41107a:	mov    cl,0xc2
  41107c:	das    
  41107d:	mov    bl,0x40
  41107f:	fbstp  TBYTE PTR [eax]
  411081:	adc    al,0xff
  411083:	int    0x45
  411085:	or     BYTE PTR [ebx],dh
  411087:	sub    DWORD PTR [eax-0x2650d83c],esp
  41108d:	push   ss
  41108e:	ss cmp al,0xc4
  411091:	and    ah,BYTE PTR [eax+esi*8]
  411094:	sbb    ebp,esi
  411096:	push   ds
  411097:	and    edi,esi
  411099:	mov    ?,esi
  41109b:	lds    ebp,FWORD PTR [ecx+0x26133640]
  4110a1:	push   edi
  4110a2:	imul   edx,DWORD PTR [edx-0x57],0x2c
  4110a6:	pop    esp
  4110a7:	dec    eax
  4110a8:	iret   
  4110a9:	int3   
  4110aa:	push   ecx
  4110ab:	mov    ecx,0x5d148096
  4110b0:	xchg   BYTE PTR [ecx+0x5b8c6206],bl
  4110b6:	bound  ebx,QWORD PTR [ecx+0x53]
  4110b9:	out    dx,eax
  4110ba:	adc    BYTE PTR [eax],bl
  4110bc:	scas   al,BYTE PTR es:[edi]
  4110bd:	cmp    al,0x83
  4110bf:	scas   al,BYTE PTR es:[edi]
  4110c0:	jb     0x4110ce
  4110c2:	rcr    BYTE PTR [ecx+0x5],0xaf
  4110c6:	fiadd  WORD PTR [eiz*1+0x6e2e53d0]
  4110cd:	push   0x25
  4110cf:	rcr    DWORD PTR [esi],cl
  4110d1:	push   esi
  4110d2:	sbb    edx,ebx
  4110d4:	push   edx
  4110d5:	xchg   esi,eax
  4110d6:	daa    
  4110d7:	jle    0x4110ac
  4110d9:	jmp    0xddcb:0xe53bbf39
  4110e0:	sbb    al,0xcf
  4110e2:	rcr    BYTE PTR [edi],1
  4110e4:	retf   
  4110e5:	push   ecx
  4110e6:	sbb    DWORD PTR [ecx-0x50624abe],esp
  4110ec:	int3   
  4110ed:	fcom   st(4)
  4110ef:	jae    0x411137
  4110f1:	jl     0x4110dd
  4110f3:	cdq    
  4110f4:	std    
  4110f5:	mov    esi,0x3e69b64f
  4110fa:	aad    0x90
  4110fc:	push   ds
  4110fd:	ds test al,0xe6
  411100:	and    ah,BYTE PTR [ebx]
  411102:	stos   BYTE PTR es:[edi],al
  411103:	aaa    
  411104:	aaa    
  411105:	ds push edi
  411107:	out    0xab,eax
  411109:	and    al,0xcf
  41110b:	ins    BYTE PTR es:[edi],dx
  41110c:	ret    0x3bdc
  41110f:	hlt    
  411110:	repz xchg edi,eax
  411112:	rol    ecx,1
  411114:	cmp    BYTE PTR [edx+edi*8+0x11f87b37],bl
  41111b:	rcr    BYTE PTR [ecx+0x5247bc72],0x74
  411122:	loop   0x4110a7
  411124:	or     eax,0x56d0b274
  411129:	and    BYTE PTR [esi],bh
  41112b:	pushf  
  41112c:	call   0x66068e76
  411131:	mov    eax,ds:0x8ecef2cf
  411136:	stc    
  411137:	inc    ecx
  411138:	(bad)  
  411139:	dec    edi
  41113a:	addr16 faddp st(6),st
  41113d:	call   0x6e4e:0x702df253
  411144:	ja     0x411125
  411146:	(bad)  
  411147:	mov    cl,0xf4
  411149:	cmp    edi,DWORD PTR [eax-0x28df0cb2]
  41114f:	add    DWORD PTR [ecx],esp
  411151:	xor    eax,0xa84bd98a
  411156:	ja     0x41112d
  411158:	dec    edx
  411159:	mov    bh,0x76
  41115b:	loope  0x411110
  41115d:	imul   eax,DWORD PTR [ecx+0x5],0xffffffb7
  411161:	mov    edi,0xe349f7bf
  411166:	sbb    BYTE PTR [edx-0x5b],dl
  411169:	je     0x41114e
  41116b:	push   ecx
  41116c:	mov    ch,0xf4
  41116e:	add    bh,cl
  411170:	jmp    0x411188
  411172:	pop    edi
  411173:	cdq    
  411174:	(bad)  
  411175:	xor    DWORD PTR [edx],ebx
  411177:	cmp    al,0xe1
  411179:	adc    al,0x4
  41117b:	mov    DWORD PTR [esi+0x20],ecx
  41117e:	sahf   
  41117f:	mov    esi,0x455af11e
  411184:	leave  
  411185:	jmp    0x1710847d
  41118a:	cmc    
  41118b:	arpl   WORD PTR [edx+0x29],si
  41118e:	xor    DWORD PTR [edx],ebx
  411190:	lods   eax,DWORD PTR ds:[esi]
  411191:	adc    DWORD PTR [esi-0x7a],edi
  411194:	pop    ebx
  411195:	adc    al,0x1d
  411197:	test   BYTE PTR [ecx],dl
  411199:	xlat   BYTE PTR ds:[ebx]
  41119a:	cli    
  41119b:	dec    edx
  41119c:	jle    0x411204
  41119e:	sub    al,0x1e
  4111a0:	cli    
  4111a1:	clc    
  4111a2:	fstp   st(7)
  4111a4:	pushf  
  4111a5:	sub    eax,0x78c03f38
  4111aa:	aas    
  4111ab:	pop    ss
  4111ac:	jnp    0x411201
  4111ae:	je     0x4111ba
  4111b0:	mov    dh,BYTE PTR [eax+0x6022578e]
  4111b6:	push   0xffffff84
  4111b8:	inc    eax
  4111b9:	mov    ah,0xc5
  4111bb:	(bad)  [ecx-0x1a]
  4111be:	in     eax,0xc8
  4111c0:	inc    esp
  4111c1:	cmp    al,0x10
  4111c3:	jmp    0xd05ca610
  4111c8:	or     ah,BYTE PTR [eax+0x1]
  4111cb:	sti    
  4111cc:	fs pop eax
  4111ce:	add    edx,ecx
  4111d0:	pop    ebp
  4111d1:	mov    ecx,0x4e207599
  4111d6:	out    dx,eax
  4111d7:	ret    0x1369
  4111da:	mov    DWORD PTR [ebx-0x6d],eax
  4111dd:	sti    
  4111de:	stos   BYTE PTR es:[edi],al
  4111df:	xor    eax,0xb43c1f95
  4111e4:	adc    BYTE PTR [eax-0x1cf5b140],dl
  4111ea:	xchg   ebx,eax
  4111eb:	(bad)  
  4111ec:	push   edi
  4111ed:	push   ebp
  4111ee:	cli    
  4111ef:	jo     0x4111bb
  4111f1:	xchg   ebx,ecx
  4111f3:	jge    0x4111c9
  4111f5:	xchg   ebx,eax
  4111f6:	mov    cl,0xe3
  4111f8:	mov    cl,0x5f
  4111fa:	mov    ebx,0xbfe2ddbc
  4111ff:	popf   
  411200:	inc    esi
  411201:	push   edx
  411202:	push   edi
  411203:	mov    ch,BYTE PTR [edx+eiz*8+0x41]
  411207:	cmc    
  411208:	ror    DWORD PTR [ebx],cl
  41120a:	and    dl,BYTE PTR [edi-0x1c]
  41120d:	sahf   
  41120e:	popa   
  41120f:	jno    0x41128f
  411211:	dec    ebx
  411212:	sub    eax,0xceba5215
  411217:	jmp    0x7179c3a1
  41121c:	cmp    DWORD PTR [ebx-0x7ae363f7],ebp
  411222:	mov    cs:0xffcee980,eax
  411228:	jbe    0x411288
  41122a:	add    ebp,DWORD PTR [ebp-0xc4f3467]
  411230:	sub    al,BYTE PTR [edi+esi*4-0x7cc25416]
  411237:	add    BYTE PTR [esi+0x5373cecb],0x16
  41123e:	mov    ds:0xce463e2a,eax
  411243:	add    edx,DWORD PTR [ebp-0x2a]
  411246:	mov    bh,0x1e
  411248:	fwait
  411249:	aas    
  41124a:	iret   
  41124b:	mov    edx,0x9ee21a82
  411250:	mov    ecx,0x6c1f4230
  411255:	lea    ebp,[eax-0x2a]
  411258:	dec    ecx
  411259:	fidiv  WORD PTR [edi+0x44827cd1]
  41125f:	xchg   esi,eax
  411260:	dec    esi
  411261:	mov    BYTE PTR [ecx+0x42],ah
  411264:	pop    eax
  411265:	mov    ds:0x2cc65473,al
  41126a:	xchg   edx,eax
  41126b:	popf   
  41126c:	fnsave [edi+0x48]
  41126f:	cdq    
  411270:	sbb    edx,ecx
  411272:	mov    BYTE PTR [ecx],0x1e
  411275:	and    edx,ebx
  411277:	shr    DWORD PTR [edi],0x7a
  41127a:	mov    dh,0x46
  41127c:	in     al,dx
  41127d:	dec    esi
  41127e:	repnz xor BYTE PTR [eax],cl
  411281:	push   ebp
  411282:	outs   dx,BYTE PTR ds:[esi]
  411283:	out    dx,al
  411284:	or     edx,DWORD PTR [edi]
  411286:	and    DWORD PTR [edx-0x6cace3f7],esi
  41128c:	add    eax,DWORD PTR [ebx]
  41128e:	ret    0xa3
  411291:	cmp    BYTE PTR [ebx+ecx*1],al
  411294:	jecxz  0x411255
  411296:	icebp  
  411297:	xlat   BYTE PTR ds:[ebx]
  411298:	daa    
  411299:	cmovg  esi,DWORD PTR [ecx+eax*1+0x21]
  41129e:	cmp    edi,esp
  4112a0:	data16 sbb al,0x1
  4112a3:	mov    edx,0x28ae4f6f
  4112a8:	fisttp WORD PTR [edi]
  4112aa:	push   0x4aef9d4c
  4112af:	shl    DWORD PTR [edx],1
  4112b1:	test   DWORD PTR [ecx],0x220907ed
  4112b7:	xchg   BYTE PTR [eax-0x4e7e33e9],bh
  4112bd:	popa   
  4112be:	adc    bl,BYTE PTR [ecx+0x680ee8e1]
  4112c4:	nop
  4112c5:	xchg   ebx,eax
  4112c6:	jecxz  0x411294
  4112c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112c9:	cs into 
  4112cb:	xchg   edx,eax
  4112cc:	icebp  
  4112cd:	adc    ebx,esi
  4112cf:	sbb    eax,0xffffffb1
  4112d2:	and    DWORD PTR [esi-0x1d2c7673],esi
  4112d8:	dec    eax
  4112d9:	je     0x41134f
  4112db:	jb     0x41129f
  4112dd:	mov    ds:0x4155f4d,al
  4112e2:	cld    
  4112e3:	xchg   ecx,eax
  4112e4:	and    al,0x3
  4112e6:	ins    DWORD PTR es:[edi],dx
  4112e7:	test   eax,0xd57a2cba
  4112ec:	lea    ebp,[edx-0x61ea3438]
  4112f2:	dec    eax
  4112f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112f4:	test   BYTE PTR [ecx-0x74],dl
  4112f7:	mov    al,ds:0xe18d3137
  4112fc:	push   ecx
  4112fd:	sub    eax,0x4622c0d2
  411302:	in     al,dx
  411303:	outs   dx,BYTE PTR ds:[esi]
  411304:	int3   
  411305:	pop    esi
  411306:	mul    DWORD PTR fs:[ebx+0x31]
  41130a:	mov    eax,ds:0xf2faddd2
  41130f:	mov    WORD PTR [eax+edi*2-0x6525457e],ss
  411316:	mov    ds:0x55b048b4,eax
  41131b:	or     bh,BYTE PTR [ebx+ebp*2-0x61]
  41131f:	in     al,0xbb
  411321:	mov    ch,0xd6
  411323:	fyl2x  
  411325:	fcomi  st,st(2)
  411327:	push   esp
  411328:	retf   0x1e46
  41132b:	clc    
  41132c:	pop    ebx
  41132d:	sub    ebx,DWORD PTR [ebp+0x24]
  411330:	test   BYTE PTR [esi-0x78ae3b00],al
  411336:	jl     0x41137c
  411338:	xchg   esp,eax
  411339:	inc    edi
  41133a:	push   ecx
  41133b:	and    al,0xe
  41133d:	mov    al,ds:0x5deed148
  411342:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411343:	fucomi st,st(0)
  411345:	or     ebp,eax
  411347:	xor    al,0xbd
  411349:	pop    esp
  41134a:	jae    0x4112d6
  41134c:	mov    dh,BYTE PTR [ecx]
  41134e:	mov    DWORD PTR [esi+0x67],ecx
  411351:	ins    BYTE PTR es:[edi],dx
  411352:	ja     0x41134c
  411354:	pop    edi
  411355:	xor    eax,0x5ee56497
  41135a:	lds    edx,FWORD PTR [ecx-0x51dda294]
  411360:	daa    
  411361:	and    eax,0x544a7259
  411366:	add    edx,ebx
  411368:	adc    al,0x85
  41136a:	in     eax,dx
  41136b:	pop    esp
  41136c:	jne    0x4112f8
  41136e:	inc    esp
  41136f:	sbb    bh,BYTE PTR [ebx-0x5be24130]
  411375:	out    dx,eax
  411376:	aam    0x36
  411378:	test   eax,0x94146557
  41137d:	add    al,0x3b
  41137f:	test   eax,0x3478d797
  411384:	loopne 0x4113a8
  411386:	shr    BYTE PTR [ebp+0x41556f1d],1
  41138c:	push   ecx
  41138d:	or     al,0xfd
  41138f:	jb     0x411365
  411391:	jmp    0x41133a
  411393:	dec    ebx
  411394:	jmp    0x41135d
  411396:	loopne 0x411345
  411398:	or     BYTE PTR [esp+ecx*8-0x7b],0xd7
  41139d:	push   eax
  41139e:	jp     0x4113f8
  4113a0:	xchg   esp,eax
  4113a1:	call   0xcb2b:0xd7a943ee
  4113a8:	cli    
  4113a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113aa:	jns    0x411334
  4113ac:	add    ah,BYTE PTR [eax-0x39]
  4113af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113b0:	or     al,0xab
  4113b2:	and    edx,esi
  4113b4:	jns    0x411411
  4113b6:	inc    esi
  4113b7:	dec    edi
  4113b8:	push   ss
  4113b9:	xchg   DWORD PTR [eax+0x7],ebp
  4113bc:	hlt    
  4113bd:	xor    al,0x5a
  4113bf:	(bad)  
  4113c0:	ins    DWORD PTR es:[edi],dx
  4113c1:	jnp    0x4113c8
  4113c3:	inc    esp
  4113c4:	pop    ecx
  4113c5:	sti    
  4113c6:	jge    0x4113c4
  4113c8:	outs   dx,DWORD PTR ds:[esi]
  4113c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113ca:	shl    BYTE PTR [eax+ecx*8-0x74b03404],cl
  4113d1:	aad    0x16
  4113d3:	stos   DWORD PTR es:[edi],eax
  4113d4:	dec    ebx
  4113d5:	scas   eax,DWORD PTR es:[edi]
  4113d6:	jl     0x411367
  4113d8:	jmp    0x411398
  4113da:	in     eax,0xdb
  4113dc:	add    eax,0xfda853a9
  4113e1:	(bad)  
  4113e2:	xor    cl,BYTE PTR [eax+ebx*8+0x66]
  4113e6:	call   FWORD PTR [edi-0x2d53e274]
  4113ec:	adc    eax,0xb108fd96
  4113f1:	jp     0x411417
  4113f3:	push   0x5db99062
  4113f8:	sbb    cl,dh
  4113fa:	fstp   st(0)
  4113fc:	ret    
  4113fd:	mov    al,ds:0x5fa3ab3b
  411402:	hlt    
  411403:	popf   
  411404:	mov    BYTE PTR [ebp-0x6df3ed3d],al
  41140a:	add    al,0xc1
  41140c:	mov    eax,0xc79c4133
  411411:	out    dx,al
  411412:	and    eax,0xabafba2f
  411417:	add    ah,BYTE PTR ds:0xa78f382
  41141d:	sbb    eax,0x43f92e69
  411422:	ret    0xbf44
  411425:	jle    0x4113ff
  411427:	(bad)  
  411428:	sbb    al,0x22
  41142a:	repnz cwde 
  41142c:	or     DWORD PTR [ecx-0x115f8e33],esp
  411432:	clc    
  411433:	js     0x41147f
  411435:	daa    
  411436:	aad    0x39
  411438:	aam    0x20
  41143a:	xchg   ebp,eax
  41143b:	and    BYTE PTR [esp+ebp*1],cl
  41143e:	sub    al,0x15
  411440:	repz out dx,eax
  411442:	dec    edx
  411443:	cmp    eax,0x24b17454
  411448:	icebp  
  411449:	es adc al,ah
  41144c:	pop    ecx
  41144d:	aas    
  41144e:	test   ah,dh
  411450:	jmp    DWORD PTR [edi-0x478cfc92]
  411456:	call   0xec7a:0x4374d4e1
  41145d:	daa    
  41145e:	test   DWORD PTR [edi],eax
  411460:	cli    
  411461:	nop
  411462:	cwde   
  411463:	xchg   esp,eax
  411464:	dec    cx
  411466:	push   ss
  411467:	popf   
  411468:	mov    WORD PTR [edi],gs
  41146a:	sbb    BYTE PTR [ecx-0x4c7bd26b],cl
  411470:	mov    ebx,0x747434bc
  411475:	xchg   esp,eax
  411476:	icebp  
  411477:	or     eax,DWORD PTR [ecx]
  411479:	into   
  41147a:	hlt    
  41147b:	clc    
  41147c:	pop    edi
  41147d:	jnp    0x41145c
  41147f:	call   0xb290:0xb56ac32
  411486:	mov    dh,0x5d
  411488:	xor    BYTE PTR [edx+0x49ead1f3],bh
  41148e:	jnp    0x411498
  411490:	rol    edi,cl
  411492:	mov    WORD PTR [edx+0x37b271b2],fs
  411498:	and    ebx,edi
  41149a:	fiadd  WORD PTR [ecx+0x2a]
  41149d:	mov    edi,0xb45f3b85
  4114a2:	dec    eax
  4114a3:	add    ch,BYTE PTR ds:0x5455d7d0
  4114a9:	mov    dh,0xc4
  4114ab:	js     0x4114a3
  4114ad:	add    cl,ch
  4114af:	ja     0x4114ad
  4114b1:	mov    edi,0x16379a7e
  4114b6:	stos   DWORD PTR es:[edi],eax
  4114b7:	ins    BYTE PTR es:[edi],dx
  4114b8:	push   cs
  4114b9:	or     DWORD PTR [edx-0x36d7aa7b],esp
  4114bf:	adc    BYTE PTR [ecx-0x37],0x87
  4114c3:	rol    DWORD PTR ds:0x594ae9aa,1
  4114c9:	(bad)  
  4114ca:	add    edi,0x86647610
  4114d0:	pop    esi
  4114d1:	and    bh,dl
  4114d3:	adc    DWORD PTR [ecx-0x355d26c9],0xffffffee
  4114da:	pusha  
  4114db:	sub    ecx,ebx
  4114dd:	pop    edx
  4114de:	lods   eax,DWORD PTR ds:[esi]
  4114df:	pop    ebx
  4114e0:	fiadd  WORD PTR [ebx+0x70275d36]
  4114e6:	out    0xea,eax
  4114e8:	sbb    eax,DWORD PTR [edx-0x46482cdc]
  4114ee:	stos   DWORD PTR es:[edi],eax
  4114ef:	fsubp  st(0),st
  4114f1:	pop    esp
  4114f2:	and    al,0xa3
  4114f4:	cli    
  4114f5:	push   ss
  4114f6:	icebp  
  4114f7:	test   BYTE PTR [edi],ah
  4114f9:	cld    
  4114fa:	out    0x7d,al
  4114fc:	repz out 0xb1,al
  4114ff:	inc    edi
  411500:	test   eax,0x1b58e06c
  411505:	out    0xa4,al
  411507:	mov    esi,DWORD PTR [esi+ecx*8]
  41150a:	sbb    eax,0x5acf0c5c
  41150f:	(bad)  
  411510:	ror    BYTE PTR [eax+0xaf8914d],0xea
  411517:	js     0x411571
  411519:	adc    al,0x9f
  41151b:	cmp    BYTE PTR [ecx-0x74709d9f],dh
  411521:	xchg   edi,eax
  411522:	es push edi
  411524:	inc    ebp
  411525:	mov    DWORD PTR [ecx+0x620b7db4],ebx
  41152b:	das    
  41152c:	nop
  41152d:	pop    esi
  41152e:	pop    ds
  41152f:	mov    cl,BYTE PTR [eax+ecx*1]
  411532:	inc    eax
  411533:	call   FWORD PTR [esi]
  411535:	ret    0xa238
  411538:	add    al,0x8
  41153a:	mov    cs,edx
  41153c:	jmp    0x4115ae
  41153e:	dec    edi
  41153f:	adc    DWORD PTR [edx+0x19ed5418],ebx
  411545:	push   0x28
  411547:	arpl   dx,bp
  411549:	fiadd  WORD PTR [eax]
  41154b:	(bad)
  41154e:	cld    
  41154f:	or     eax,0xb39de69c
  411554:	je     0x41157a
  411556:	jae    0x41157b
  411558:	mov    eax,ds:0x312fc246
  41155d:	ins    BYTE PTR es:[edi],dx
  41155e:	push   edx
  41155f:	outs   dx,BYTE PTR ds:[esi]
  411560:	mov    al,0x9d
  411562:	inc    ebx
  411563:	cli    
  411564:	popa   
  411565:	sbb    esp,DWORD PTR [eax]
  411567:	inc    esi
  411568:	ror    esi,cl
  41156a:	mov    dl,0xf5
  41156c:	jbe    0x4114f8
  41156e:	xor    eax,0x56ea79ec
  411573:	jno    0x4114f8
  411575:	(bad)  
  411576:	fild   DWORD PTR [esi-0x8]
  411579:	push   edx
  41157a:	adc    al,0xde
  41157c:	lods   eax,DWORD PTR fs:[esi]
  41157e:	nop
  41157f:	in     eax,0x3b
  411581:	fidiv  DWORD PTR [esp+edx*2-0x3a]
  411585:	icebp  
  411586:	aas    
  411587:	aaa    
  411588:	imul   ecx,DWORD PTR ds:0xc1086066,0xbb97b8e8
  411592:	imul   DWORD PTR [eax+ebp*4+0x26]
  411596:	adc    dl,BYTE PTR ds:0xc7824b8e
  41159c:	sbb    edx,edx
  41159e:	mov    esp,0xe24bcaa7
  4115a3:	and    ah,bl
  4115a5:	pop    esi
  4115a6:	or     BYTE PTR [edx+0x5f],ch
  4115a9:	mov    ebp,0xee43318f
  4115ae:	daa    
  4115af:	jmp    0x41162b
  4115b1:	mov    WORD PTR [edx-0x22f6583d],gs
  4115b7:	(bad)  
  4115b8:	cmp    al,ah
  4115ba:	pop    esp
  4115bb:	adc    BYTE PTR [edi+0x17],0x21
  4115bf:	pop    ecx
  4115c0:	imul   edx,DWORD PTR [ecx-0xfcf632e],0x2b
  4115c7:	lods   al,BYTE PTR ds:[esi]
  4115c8:	das    
  4115c9:	ret    0xc14f
  4115cc:	dec    esp
  4115cd:	loopne 0x4115be
  4115cf:	and    eax,0x5682f3d6
  4115d4:	dec    edx
  4115d5:	pop    edx
  4115d6:	pop    es
  4115d7:	jb     0x4115aa
  4115d9:	jmp    0x564b:0xa5e4ef49
  4115e0:	xor    edx,DWORD PTR [ebp+0x7fbe66ab]
  4115e6:	ins    WORD PTR es:[edi],dx
  4115e8:	xor    ah,bl
  4115ea:	mov    bl,0x89
  4115ec:	sub    edi,0x8f6b66b0
  4115f2:	gs xchg esp,eax
  4115f4:	jg     0x41164f
  4115f6:	pop    eax
  4115f7:	cmp    al,0x5b
  4115f9:	xor    dh,BYTE PTR [ebp-0x13]
  4115fc:	jb     0x411617
  4115fe:	in     eax,dx
  4115ff:	shl    BYTE PTR [edi+0x53c6549],0x4c
  411606:	dec    ebp
  411607:	test   DWORD PTR [edx-0x29],esp
  41160a:	jmp    0x3ac:0xd4a6830f
  411611:	sbb    ebx,DWORD PTR [edx+0x45ec5d58]
  411617:	xlat   BYTE PTR ds:[ebx]
  411618:	ins    DWORD PTR es:[edi],dx
  411619:	rcr    DWORD PTR ds:0x9633db1e,0x52
  411620:	inc    esi
  411621:	cld    
  411622:	fistp  DWORD PTR [esi+0x5e44d628]
  411628:	lds    ecx,FWORD PTR [ebp-0x5c16130]
  41162e:	xchg   esi,eax
  41162f:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  411631:	adc    ebp,edi
  411633:	fnstcw WORD PTR [esi]
  411635:	outs   dx,BYTE PTR ds:[esi]
  411636:	mov    al,ds:0xe5f3277e
  41163b:	pop    es
  41163c:	mov    bl,BYTE PTR ds:0xaa9a7dcc
  411642:	call   0xc3c6:0xec63c26b
  411649:	cmc    
  41164a:	xchg   DWORD PTR [edx+ecx*8+0x22c1585b],ecx
  411651:	mov    bl,0xc9
  411653:	jb     0x4115e4
  411655:	add    al,0x8d
  411657:	mov    bh,0xc7
  411659:	sar    eax,cl
  41165b:	ja     0x411660
  41165d:	gs xchg esi,eax
  41165f:	sbb    DWORD PTR [esp+ebx*2-0x6ab51666],esi
  411666:	rol    BYTE PTR [edi],1
  411668:	sbb    eax,0x2ee56e1
  41166d:	sahf   
  41166e:	lahf   
  41166f:	sub    al,0x1d
  411671:	(bad)  
  411672:	call   0x190d:0x2f50ff49
  411679:	jno    0x411675
  41167b:	xor    DWORD PTR [ecx+0x1c],eax
  41167e:	std    
  41167f:	dec    ecx
  411681:	loop   0x4116d9
  411683:	inc    eax
  411684:	push   ds
  411685:	mov    ds:0x4d78b31b,eax
  41168a:	test   BYTE PTR [esi],cl
  41168c:	xlat   BYTE PTR ds:[ebx]
  41168d:	push   esp
  41168e:	jge    0x4116e1
  411690:	lods   al,BYTE PTR ds:[esi]
  411691:	mov    ds:0xd35d3b47,al
  411696:	push   0x2204a188
  41169b:	jbe    0x4116d5
  41169d:	sbb    dl,BYTE PTR [edi-0x707e2499]
  4116a3:	sub    al,0xc1
  4116a5:	adc    ch,ah
  4116a7:	jg     0x41165b
  4116a9:	mov    ebx,0xbb05d8d9
  4116ae:	out    0x9e,eax
  4116b0:	pushf  
  4116b1:	hlt    
  4116b2:	imul   ecx,DWORD PTR [edi+0xc2ac0ad],0xffffffce
  4116b9:	test   DWORD PTR [edi-0x12bd875b],ebx
  4116bf:	shl    BYTE PTR [esi+ebx*8-0x79],cl
  4116c3:	dec    ebp
  4116c4:	(bad)  
  4116c5:	popa   
  4116c6:	pop    ebp
  4116c7:	mov    DWORD PTR [edx],eax
  4116c9:	mov    edx,0x8d95321c
  4116ce:	fstp   DWORD PTR [eax+0x46]
  4116d1:	add    bl,BYTE PTR [esi]
  4116d3:	dec    ecx
  4116d4:	ret    0x69f7
  4116d7:	out    dx,eax
  4116d8:	push   0x2d
  4116da:	mov    edi,0x18e5296c
  4116df:	jne    0x411758
  4116e1:	mov    ebp,0x4ae37788
  4116e6:	inc    edx
  4116e7:	mov    dl,0x51
  4116e9:	fild   DWORD PTR [edi-0x18e1540a]
  4116ef:	inc    ebx
  4116f0:	push   0xe5a0bd2e
  4116f5:	mov    dh,0x88
  4116f7:	push   esi
  4116f8:	popf   
  4116f9:	adc    BYTE PTR ds:0xd8bb54be,bl
  4116ff:	leave  
  411700:	cmp    esp,DWORD PTR [esi]
  411702:	jecxz  0x4116a4
  411704:	in     eax,dx
  411705:	inc    ecx
  411706:	aad    0xf
  411708:	jg     0x41168d
  41170a:	push   es
  41170b:	mov    esi,0xa6a8e9da
  411710:	and    al,0xde
  411712:	mov    al,ds:0x8d8e2bff
  411717:	std    
  411718:	je     0x41174e
  41171a:	out    0xca,al
  41171c:	jg     0x4116f7
  41171e:	inc    ebx
  41171f:	cwde   
  411720:	inc    ebx
  411721:	loope  0x411783
  411723:	sbb    DWORD PTR [edi-0x552322fa],ebp
  411729:	jne    0x4116e3
  41172b:	adc    eax,0xa4a878b9
  411730:	cmp    BYTE PTR ds:0x9f6043ce,bl
  411736:	add    bh,0x85
  411739:	(bad)  
  41173a:	(bad)  
  41173b:	daa    
  41173c:	(bad)  
  41173e:	xor    BYTE PTR [esp+edi*2],0x59
  411742:	pop    ebp
  411743:	mov    bh,0x3b
  411745:	xchg   esp,eax
  411746:	in     al,0xfa
  411748:	xor    eax,0x5d6aa362
  41174d:	adc    eax,0xaf24ef25
  411752:	add    DWORD PTR [ecx],ebp
  411754:	adc    dl,BYTE PTR [ebx+0x46]
  411757:	into   
  411758:	fwait
  411759:	mov    eax,0x4b16dabc
  41175e:	dec    eax
  41175f:	out    dx,al
  411760:	nop
  411761:	dec    edi
  411762:	addr16 adc al,0xb6
  411765:	lods   al,BYTE PTR ds:[esi]
  411766:	mov    edi,0x2422b1ce
  41176b:	push   esi
  41176c:	stos   DWORD PTR es:[edi],eax
  41176d:	adc    al,al
  41176f:	mov    BYTE PTR [eax+edx*8+0x45],bh
  411773:	dec    ebp
  411774:	gs dec eax
  411776:	je     0x411788
  411778:	sub    al,0xe4
  41177a:	push   esi
  41177b:	pop    edi
  41177c:	cmpps  xmm4,XMMWORD PTR [edx+edi*2+0x6bd79206],0xb4
  411785:	sub    BYTE PTR [edx+edx*2],dh
  411788:	cli    
  411789:	(bad)  
  41178b:	pop    ecx
  41178c:	push   edi
  41178d:	dec    ebp
  41178e:	mov    gs,WORD PTR [ebp+0x71]
  411791:	std    
  411792:	(bad)  
  411793:	pop    esp
  411794:	cmp    al,BYTE PTR gs:[ebp-0x41]
  411798:	jmp    0x41174a
  41179a:	ja     0x4117d0
  41179c:	add    cl,BYTE PTR [ecx+0x62]
  41179f:	adc    al,0x56
  4117a1:	push   ss
  4117a2:	adc    DWORD PTR [eax-0x16],0x22762a05
  4117a9:	cmp    BYTE PTR [eax],cl
  4117ab:	dec    edi
  4117ac:	or     cl,cl
  4117ae:	in     eax,0xca
  4117b0:	inc    edi
  4117b1:	test   cl,bh
  4117b3:	dec    eax
  4117b4:	int3   
  4117b5:	cmp    DWORD PTR ds:0x8648b93a,edx
  4117bb:	cmp    DWORD PTR [ecx+0x4a31e831],ebp
  4117c1:	fs xor dl,0xf4
  4117c5:	or     eax,0x92b3ce22
  4117ca:	mov    ah,0x58
  4117cc:	inc    ecx
  4117cd:	fsubr  st(0),st
  4117cf:	scas   eax,DWORD PTR es:[edi]
  4117d0:	(bad)  
  4117d2:	(bad)  
  4117d3:	pop    edx
  4117d4:	loop   0x4117e5
  4117d6:	inc    esi
  4117d7:	xor    eax,0x8c93c06a
  4117dc:	sub    eax,0xc000d612
  4117e1:	push   cs
  4117e2:	neg    DWORD PTR [ebp-0x3e4e2d86]
  4117e8:	je     0x4117f2
  4117ea:	cs pop esp
  4117ec:	iret   
  4117ed:	jb     0x4117ef
  4117ef:	test   bl,0xcb
  4117f2:	clc    
  4117f3:	daa    
  4117f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117f5:	jne    0x4117e2
  4117f7:	push   esp
  4117f8:	(bad)  
  4117f9:	loope  0x41180f
  4117fb:	push   eax
  4117fc:	sub    bl,BYTE PTR [edi-0x400b8259]
  411802:	repz mov ebp,0xf2b4d156
  411808:	adc    eax,0xcfa58015
  41180d:	and    eax,esp
  41180f:	pop    ecx
  411810:	cli    
  411811:	into   
  411812:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411814:	sub    bl,BYTE PTR [esi-0x57]
  411817:	retf   0x89aa
  41181a:	(bad)  
  41181b:	aas    
  41181c:	dec    esi
  41181d:	(bad)  
  41181f:	enter  0x9548,0xad
  411823:	cdq    
  411824:	loopne 0x4117f2
  411826:	inc    BYTE PTR [eax+0x4e675f81]
  41182c:	xchg   edx,eax
  41182d:	mov    eax,DWORD PTR [ebp-0x2914d751]
  411833:	xor    cl,dl
  411835:	fidivr WORD PTR [esi-0x1911e936]
  41183b:	xchg   ebp,eax
  41183c:	test   DWORD PTR [esi],edi
  41183e:	sub    al,0xa7
  411840:	mov    dl,0xa9
  411842:	inc    esi
  411843:	adc    BYTE PTR [edx+0x3ce736d9],bl
  411849:	(bad)  
  41184a:	jo     0x411874
  41184c:	in     eax,dx
  41184d:	push   esp
  41184e:	pop    ecx
  41184f:	push   ss
  411850:	imul   esp,DWORD PTR [esp-0x1a],0x72
  411855:	in     eax,dx
  411856:	mov    cl,0xb0
  411858:	mov    eax,ds:0x175b6ff9
  41185d:	add    dl,dh
  41185f:	ret    0xb9df
  411862:	push   esi
  411863:	retf   0xc986
  411866:	mov    ah,0x7e
  411868:	fstp   DWORD PTR [ecx+esi*2+0x4d]
  41186c:	mov    esi,DWORD PTR [ecx+0x7c]
  41186f:	sar    DWORD PTR [edi+0x79a0b0c1],0xd1
  411876:	sub    ebp,DWORD PTR [edx+ebp*1]
  411879:	loop   0x411837
  41187b:	inc    ebp
  41187c:	fist   DWORD PTR [edi-0x6746ac0d]
  411882:	stos   DWORD PTR es:[edi],eax
  411883:	xlat   BYTE PTR ds:[ebx]
  411884:	aaa    
  411885:	mov    al,ds:0xdd561d62
  41188a:	cmc    
  41188b:	jmp    0x41184a
  41188d:	dec    eax
  41188e:	pop    eax
  41188f:	test   bh,bl
  411891:	pop    edi
  411892:	jbe    0x411856
  411894:	cmp    dh,BYTE PTR [edi]
  411896:	cwde   
  411897:	adc    DWORD PTR [esi-0x25],ebx
  41189a:	clc    
  41189b:	int3   
  41189c:	push   edi
  41189d:	dec    edi
  41189e:	imul   ecx,DWORD PTR [ebx],0xac1fa576
  4118a4:	pop    esp
  4118a5:	fisttp QWORD PTR [ebx+0xa5685a2]
  4118ab:	xchg   esi,eax
  4118ac:	les    ecx,FWORD PTR [ecx+0x2a525f43]
  4118b2:	mov    ebx,0xcc5d85c9
  4118b7:	xchg   edi,eax
  4118b8:	xchg   edx,eax
  4118b9:	inc    ebx
  4118ba:	push   edx
  4118bb:	inc    esp
  4118bc:	pop    esp
  4118bd:	sub    al,0x88
  4118bf:	mov    bh,0xb4
  4118c1:	mov    dl,0x85
  4118c3:	jle    0x4118a9
  4118c5:	shr    BYTE PTR [esi-0x33],cl
  4118c8:	enter  0x285,0xfe
  4118cc:	test   al,0xf5
  4118ce:	pop    ds
  4118cf:	test   DWORD PTR [esi+0x4b91c8d7],0x8385c6f6
  4118d9:	mov    eax,ds:0x3beccfac
  4118de:	add    ebp,DWORD PTR [ecx-0x6b419a84]
  4118e4:	xchg   BYTE PTR [ebx+edx*2+0x588b47d7],dl
  4118eb:	mov    ss,WORD PTR [edx+0x46ec195d]
  4118f1:	sbb    DWORD PTR [ecx+0x6b],edi
  4118f4:	jp     0x4118b1
  4118f6:	jne    0x4118c4
  4118f8:	sbb    al,0x29
  4118fa:	adc    eax,0x3693135e
  4118ff:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411901:	mov    ds:0x5fd3dfef,al
  411906:	lds    ebp,FWORD PTR [bp+di-0x6e80]
  41190b:	cld    
  41190c:	shl    BYTE PTR [esi],0xf9
  41190f:	pop    eax
  411910:	ins    BYTE PTR es:[edi],dx
  411911:	mov    ah,0xb6
  411913:	mov    ecx,0x1a0896ce
  411918:	adc    BYTE PTR [ecx+0xbd95f54],cl
  41191e:	cld    
  41191f:	inc    edx
  411920:	loop   0x411984
  411922:	cli    
  411923:	cwde   
  411924:	ret    0x4e10
  411927:	repnz (bad) 
  411929:	and    eax,DWORD PTR [edx+ebp*8]
  41192c:	sub    eax,0x4de56fee
  411931:	xchg   al,bh
  411933:	call   0xdef5:0x149906ae
  41193a:	mov    eax,ds:0x85af247a
  41193f:	push   ds
  411940:	call   0x200d:0xa739c0f7
  411947:	adc    DWORD PTR [ecx],ebp
  411949:	enter  0x664d,0x59
  41194d:	popf   
  41194e:	loop   0x411917
  411950:	jbe    0x4119c8
  411952:	cmp    eax,0x7b42eafe
  411957:	xor    DWORD PTR [ebx],0x6a4ebe8c
  41195d:	dec    ebx
  41195e:	sub    DWORD PTR [ecx],esp
  411960:	ins    DWORD PTR es:[edi],dx
  411961:	(bad)  
  411962:	cli    
  411963:	or     eax,0x86808603
  411968:	sub    BYTE PTR [ebx-0x64],al
  41196b:	hlt    
  41196c:	fs (bad) 
  41196e:	or     ah,BYTE PTR [edi]
  411970:	aam    0x25
  411972:	out    dx,al
  411973:	sbb    al,0x37
  411975:	push   esp
  411976:	jno    0x4119da
  411978:	loopne 0x4119f6
  41197a:	bnd ret 
  41197c:	jnp    0x41192e
  41197e:	sbb    BYTE PTR [ecx-0x564aa9a2],0x9a
  411985:	or     al,0x98
  411987:	scas   al,BYTE PTR es:[edi]
  411988:	or     ebx,ebp
  41198a:	mov    esi,0x81899d66
  41198f:	mov    DWORD PTR [ebx],eax
  411991:	loopne 0x4119f3
  411993:	cwde   
  411994:	sub    al,0xd8
  411996:	or     edx,ebp
  411998:	test   al,0xc3
  41199a:	push   ss
  41199b:	ins    BYTE PTR es:[edi],dx
  41199c:	add    BYTE PTR [ebp-0x69],dl
  41199f:	sub    al,0xee
  4119a1:	xchg   edi,eax
  4119a2:	push   0x16b86c0f
  4119a7:	(bad)  
  4119a8:	cmp    ch,BYTE PTR [edx+0x3715fb69]
  4119ae:	xchg   ecx,eax
  4119af:	xchg   edx,eax
  4119b0:	neg    BYTE PTR [ebp+0x66408014]
  4119b6:	xor    dh,BYTE PTR [ecx-0x7ef31a4]
  4119bc:	je     0x4119a9
  4119be:	mov    bl,0xda
  4119c0:	leave  
  4119c1:	xor    al,0x1b
  4119c3:	add    BYTE PTR [edx],dl
  4119c5:	fsubr  QWORD PTR [eax]
  4119c7:	or     DWORD PTR [eax-0x48d48400],eax
  4119cd:	inc    ebx
  4119ce:	sub    eax,0x3f37664c
  4119d3:	retf   0x3a1d
  4119d6:	and    BYTE PTR [esi+0xfa6bbbb],al
  4119dc:	add    al,0xb5
  4119de:	ds dec esp
  4119e0:	adc    WORD PTR [edx-0x17],bx
  4119e4:	nop
  4119e5:	fs or  eax,0x59d0c07a
  4119eb:	xor    eax,0xfb2b25f8
  4119f0:	and    DWORD PTR [ecx],edi
  4119f2:	xchg   esp,eax
  4119f3:	mov    ebx,DWORD PTR [ecx+0x23]
  4119f6:	fcomi  st,st(0)
  4119f8:	mov    dl,0x3e
  4119fa:	ret    0x15a5
  4119fd:	(bad)  
  4119fe:	jmp    0x219e:0x4bf67bef
  411a05:	ins    DWORD PTR es:[edi],dx
  411a06:	mov    ds:0x7a4fe9ac,al
  411a0b:	mov    ah,0xc7
  411a0d:	sub    DWORD PTR [esi+0x212468f6],esi
  411a13:	xchg   esp,eax
  411a14:	popf   
  411a15:	imul   edx,DWORD PTR [edi+0x3c],0x7f
  411a19:	call   0x8460f9cb
  411a1e:	loopne 0x411a2e
  411a20:	leave  
  411a21:	inc    ebx
  411a22:	jbe    0x411a8d
  411a24:	cmp    eax,0x1aeb3d99
  411a29:	cmp    BYTE PTR [eax+0x3f],bh
  411a2c:	mov    ecx,DWORD PTR [ecx+0x5]
  411a2f:	cmc    
  411a30:	jno    0x4119fe
  411a32:	mov    ah,0xd5
  411a34:	aam    0x8b
  411a36:	stos   DWORD PTR es:[edi],eax
  411a37:	jle    0x4119cc
  411a39:	xor    eax,DWORD PTR [ebx+0x3f9cea7d]
  411a3f:	ror    BYTE PTR [esi+0x57392b2],1
  411a45:	add    esp,ebx
  411a47:	ins    DWORD PTR es:[edi],dx
  411a48:	(bad)  
  411a4a:	in     al,dx
  411a4b:	fsincos 
  411a4d:	and    bl,bl
  411a4f:	clc    
  411a50:	jle    0x411a38
  411a52:	pop    esi
  411a53:	xor    al,0x29
  411a55:	daa    
  411a56:	daa    
  411a57:	dec    esi
  411a58:	pop    ss
  411a59:	std    
  411a5a:	adc    ah,bh
  411a5c:	jl     0x411a20
  411a5e:	inc    esi
  411a5f:	adc    DWORD PTR [ebx+eiz*8],ecx
  411a62:	push   cs
  411a63:	and    bl,BYTE PTR [ebp+0x5b]
  411a66:	cs pop ss
  411a68:	jmp    0x774efc0d
  411a6d:	mov    esi,0x133ae187
  411a72:	push   esp
  411a73:	das    
  411a74:	sbb    eax,DWORD PTR [edx+0x78d5c187]
  411a7a:	inc    ebp
  411a7b:	add    DWORD PTR [edi],0x5e
  411a7e:	mov    ebp,0x51d6de5f
  411a83:	mov    al,0x41
  411a85:	scas   al,BYTE PTR es:[edi]
  411a86:	int    0x86
  411a88:	mov    ds:0x2f6e7600,al
  411a8d:	lahf   
  411a8e:	or     ebx,esi
  411a90:	or     al,0x4f
  411a92:	mov    bl,0x2a
  411a94:	inc    esp
  411a95:	push   es
  411a96:	stos   BYTE PTR es:[edi],al
  411a97:	mov    cl,0x32
  411a99:	push   ds
  411a9a:	or     eax,0x97a53239
  411a9f:	and    DWORD PTR [eax],ebx
  411aa1:	inc    ecx
  411aa2:	shr    DWORD PTR [edx-0x497858fc],0x44
  411aa9:	sub    dh,BYTE PTR [ecx]
  411aab:	das    
  411aac:	and    dl,BYTE PTR [ebx-0x75503711]
  411ab2:	sahf   
  411ab3:	js     0x411b02
  411ab5:	mov    ds:0xe448bcda,eax
  411aba:	add    eax,0x4a96c79f
  411abf:	xchg   ebx,eax
  411ac0:	jnp    0x411af6
  411ac2:	sbb    eax,0xc623622e
  411ac7:	mov    esp,0xcc508929
  411acc:	pop    es
  411acd:	jecxz  0x411ade
  411acf:	daa    
  411ad0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ad1:	xchg   BYTE PTR ds:0xaf619023,bl
  411ad7:	or     eax,0x66e96fb7
  411adc:	mov    dh,0x61
  411ade:	push   eax
  411adf:	push   ss
  411ae0:	stc    
  411ae1:	repz fs pop edi
  411ae4:	rol    BYTE PTR [ebx],cl
  411ae6:	add    BYTE PTR [ebx-0x448828a4],0x49
  411aed:	pop    esp
  411aee:	adc    ecx,0x98097751
  411af4:	pushfw 
  411af6:	es mov cl,0x57
  411af9:	sub    dl,al
  411afb:	jo     0x411ae7
  411afd:	cmp    BYTE PTR [ebx+0x3d07b905],dh
  411b03:	inc    ecx
  411b04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b05:	push   0xf8c8c5f7
  411b0a:	loope  0x411b1e
  411b0c:	xchg   edx,eax
  411b0d:	cmc    
  411b0e:	mov    edi,0xe3133d69
  411b13:	ins    DWORD PTR es:[edi],dx
  411b14:	xchg   dl,al
  411b16:	nop
  411b17:	(bad)  
  411b18:	icebp  
  411b19:	push   eax
  411b1a:	lea    ebp,[edx+esi*1]
  411b1d:	push   cs
  411b1e:	sub    esi,ebx
  411b20:	repz pop ds
  411b22:	pop    ebx
  411b23:	out    0xa7,al
  411b25:	cmovge edx,edx
  411b28:	sub    dl,BYTE PTR [edx+0x29b53]
  411b2e:	and    BYTE PTR [ebp+0x692e8054],al
  411b34:	(bad)  
  411b35:	popa   
  411b36:	jbe    0x411b94
  411b38:	(bad)  
  411b39:	aam    0xdc
  411b3b:	push   ss
  411b3c:	pop    edi
  411b3d:	fcmovu st,st(6)
  411b3f:	and    al,0xc1
  411b41:	ja     0x411b29
  411b43:	and    DWORD PTR [edx],esp
  411b45:	loope  0x411b2e
  411b47:	xchg   ebp,eax
  411b48:	mov    al,ds:0xe2a3f29b
  411b4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b4e:	hlt    
  411b4f:	outs   dx,DWORD PTR ds:[esi]
  411b50:	jmp    0x9c9f1701
  411b55:	fisttp QWORD PTR [edx]
  411b57:	jne    0x411b4b
  411b59:	ret    
  411b5a:	mov    fs,WORD PTR [eax-0x16e9018a]
  411b60:	pushf  
  411b61:	bound  esi,QWORD PTR [ebx]
  411b63:	sub    DWORD PTR [ebx],ecx
  411b65:	dec    eax
  411b66:	or     eax,0x2ea74152
  411b6b:	ficom  WORD PTR [ebx-0x12]
  411b6e:	imul   al
  411b70:	iret   
  411b71:	hlt    
  411b72:	mov    ah,0x23
  411b74:	lods   al,BYTE PTR ds:[esi]
  411b75:	mov    esp,ebx
  411b77:	dec    edx
  411b78:	popa   
  411b79:	xlat   BYTE PTR ds:[ebx]
  411b7a:	cmp    ah,al
  411b7c:	rcl    DWORD PTR [eax],1
  411b7e:	mov    DWORD PTR [ebp-0x23],eax
  411b81:	add    BYTE PTR [eax+edx*1+0x70],bh
  411b85:	mov    ds:0x775f9e70,al
  411b8a:	into   
  411b8b:	or     DWORD PTR [edx],0x4
  411b8e:	daa    
  411b8f:	xchg   esp,eax
  411b90:	mov    bh,dh
  411b92:	xor    eax,DWORD PTR [ecx+0x647c2c8c]
  411b98:	je     0x411b32
  411b9a:	mov    BYTE PTR [ebx+0x78],dl
  411b9d:	push   ds
  411b9e:	mov    eax,0xe9b4e702
  411ba4:	loop   0x411b82
  411ba6:	leave  
  411ba7:	add    eax,0x46353586
  411bac:	sar    BYTE PTR [ebx-0x49],1
  411baf:	pop    esi
  411bb0:	and    eax,0xd6307021
  411bb5:	gs cwde 
  411bb7:	in     al,dx
  411bb8:	inc    ebp
  411bb9:	int3   
  411bba:	cmp    edi,DWORD PTR [ebx]
  411bbc:	mov    edi,0x46bbe31a
  411bc1:	adc    edx,ecx
  411bc3:	clc    
  411bc4:	inc    edx
  411bc5:	dec    edx
  411bc6:	(bad)  
  411bc7:	xor    al,0xd4
  411bc9:	test   eax,0x91c9ade1
  411bce:	arpl   WORD PTR [esi+0x6f],ax
  411bd1:	push   ds
  411bd2:	lahf   
  411bd3:	(bad)
  411bd6:	scas   al,BYTE PTR es:[edi]
  411bd7:	shl    DWORD PTR [ebx-0x2a],0xfb
  411bdb:	add    ebp,DWORD PTR [ebx+0x5a]
  411bde:	inc    si
  411be0:	mov    ch,0xd6
  411be2:	int    0x64
  411be4:	dec    ebx
  411be5:	jmp    0x411bfd
  411be7:	es mov esp,0x2beb8c57
  411bed:	pop    ecx
  411bee:	clc    
  411bef:	in     eax,dx
  411bf0:	mov    DWORD PTR [edi+0x428ed0db],ebp
  411bf6:	shl    dl,1
  411bf8:	in     eax,0xe9
  411bfa:	mul    BYTE PTR [esi-0x42]
  411bfd:	jle    0x411ba2
  411bff:	shl    ah,0x7a
  411c02:	adc    BYTE PTR [eax-0x68],bl
  411c05:	push   ebx
  411c06:	into   
  411c07:	pop    ds
  411c08:	push   esp
  411c09:	ret    
  411c0a:	(bad)  
  411c0b:	inc    ebx
  411c0c:	std    
  411c0d:	dec    DWORD PTR [ebp+0xc]
  411c10:	jae    0x411c43
  411c12:	cmc    
  411c13:	dec    esp
  411c14:	pop    ebx
  411c15:	inc    esi
  411c16:	mov    eax,0x64c7a19a
  411c1b:	mov    bh,0x2
  411c1d:	and    esp,DWORD PTR [ebx+eiz*2]
  411c20:	loopne 0x411c26
  411c22:	sub    ecx,ebx
  411c24:	add    edx,ecx
  411c26:	xor    ecx,edx
  411c28:	inc    edx
  411c29:	lock jmp 0x269b6f15
  411c2f:	and    ch,ch
  411c31:	int3   
  411c32:	das    
  411c33:	std    
  411c34:	push   ss
  411c35:	sbb    eax,0xcb08a531
  411c3a:	lods   eax,DWORD PTR ds:[esi]
  411c3b:	fld    QWORD PTR [esi+0x3556dcc6]
  411c41:	mov    ?,esi
  411c43:	in     eax,dx
  411c44:	mov    ?,esp
  411c46:	clc    
  411c47:	imul   ecx,DWORD PTR [ebp+0x5d],0x158b826
  411c4e:	dec    edi
  411c4f:	mov    ds:0x54dfeb92,eax
  411c54:	mov    ch,0xa4
  411c56:	(bad)  
  411c57:	fbstp  TBYTE PTR [ebp-0x49]
  411c5a:	ror    BYTE PTR [edx+0x23],1
  411c5d:	aad    0xa7
  411c5f:	and    ebp,DWORD PTR [edi-0x77]
  411c62:	pop    edx
  411c63:	xchg   esp,eax
  411c64:	aaa    
  411c65:	mov    cl,0xfe
  411c67:	daa    
  411c68:	sub    BYTE PTR [edi-0x60],al
  411c6b:	mov    BYTE PTR [esi],dl
  411c6d:	jle    0x411c85
  411c6f:	daa    
  411c70:	pop    edi
  411c71:	rcr    DWORD PTR [edi-0x18e70c7a],1
  411c77:	ret    0xc306
  411c7a:	mov    dl,0xfa
  411c7c:	pop    esp
  411c7d:	icebp  
  411c7e:	jmp    0xa0c558a1
  411c83:	retf   
  411c84:	rol    DWORD PTR [ebx],0xaa
  411c87:	mov    eax,0x1830ef6a
  411c8c:	sbb    DWORD PTR fs:[edx-0x60e1ddb],0x1b
  411c94:	xor    ebp,ebx
  411c96:	push   esp
  411c97:	push   eax
  411c98:	inc    edx
  411c99:	imul   edx,DWORD PTR ds:0xec6374ed,0x2cee3872
  411ca3:	adc    edi,DWORD PTR [edi+0x6c]
  411ca6:	or     al,0x40
  411ca8:	and    al,0xce
  411caa:	jecxz  0x411d01
  411cac:	aaa    
  411cad:	adc    eax,0xe59b9950
  411cb2:	pop    es
  411cb3:	cmc    
  411cb4:	and    eax,0x15b6fcf3
  411cb9:	add    ch,BYTE PTR [ebp-0x3658f407]
  411cbf:	(bad)  
  411cc0:	in     eax,0xf8
  411cc2:	sub    BYTE PTR [edx+0x7d],dh
  411cc5:	fstp   TBYTE PTR [ecx]
  411cc7:	push   ebx
  411cc8:	les    ebp,FWORD PTR [ecx+0x570ad22f]
  411cce:	sbb    ecx,eax
  411cd0:	mov    ch,0xf5
  411cd2:	sbb    al,0x2c
  411cd4:	jo     0x411c75
  411cd6:	out    dx,eax
  411cd7:	mov    ebp,esp
  411cd9:	(bad)  
  411cda:	mov    dh,0x49
  411cdc:	mov    bl,0x5f
  411cde:	cld    
  411cdf:	mov    esi,0x7915c2c3
  411ce4:	or     edx,DWORD PTR [esi+0x10df1152]
  411cea:	popa   
  411ceb:	inc    eax
  411cec:	out    0x1f,al
  411cee:	xchg   ebx,eax
  411cef:	or     ecx,DWORD PTR [ebp-0x67]
  411cf2:	jmp    0xda17ff5b
  411cf7:	es into 
  411cf9:	cmc    
  411cfa:	aas    
  411cfb:	pop    es
  411cfc:	push   0x5b8363d8
  411d01:	loop   0x411cab
  411d03:	adc    al,0xca
  411d05:	js     0x411d3d
  411d07:	xor    DWORD PTR [edx-0x734b5f24],0x25
  411d0e:	inc    esi
  411d0f:	push   es
  411d10:	and    esp,DWORD PTR [edi]
  411d12:	leave  
  411d13:	ror    BYTE PTR [edi],0x89
  411d16:	daa    
  411d17:	imul   esi,DWORD PTR [esi-0x4ca46602],0x560421b5
  411d21:	xchg   esi,eax
  411d22:	jge    0x411ce9
  411d24:	xchg   edi,eax
  411d25:	push   eax
  411d26:	aas    
  411d27:	mov    dl,0x5f
  411d29:	(bad)  
  411d2b:	mov    ebp,0x96a8281f
  411d30:	cmp    eax,0x29c6b44e
  411d35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d36:	test   DWORD PTR [esi+0x52],ecx
  411d39:	idiv   BYTE PTR [edx+esi*4-0x1b]
  411d3d:	jge    0x411d7d
  411d3f:	(bad)  
  411d40:	int    0x82
  411d42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d43:	clc    
  411d44:	popa   
  411d45:	lahf   
  411d46:	idiv   BYTE PTR [eax-0x52]
  411d49:	call   0xb886:0xa273ce1f
  411d50:	ins    BYTE PTR es:[di],dx
  411d52:	mov    eax,0x515e189
  411d57:	clc    
  411d58:	lods   eax,DWORD PTR ds:[esi]
  411d59:	sub    ebp,esi
  411d5b:	gs inc esp
  411d5d:	into   
  411d5e:	adc    eax,0xbb85785d
  411d63:	(bad)  
  411d64:	ret    
  411d65:	in     eax,0xa4
  411d67:	jno    0x411d09
  411d69:	push   ecx
  411d6a:	push   ds
  411d6b:	add    esp,DWORD PTR [eax+0xbf3def9]
  411d71:	int3   
  411d72:	inc    cx
  411d74:	and    dl,BYTE PTR [esi-0x40f6569b]
  411d7a:	pop    esi
  411d7b:	(bad)  
  411d7c:	and    al,0xe2
  411d7e:	cld    
  411d7f:	cmc    
  411d80:	pop    edi
  411d81:	push   esp
  411d82:	repnz rcl DWORD PTR [ecx-0x306d2f25],1
  411d89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d8a:	mov    WORD PTR [edx],ss
  411d8c:	sbb    al,BYTE PTR [edx+0x53]
  411d8f:	jns    0x411dd6
  411d91:	mov    ebp,0x4f291869
  411d96:	out    dx,al
  411d97:	mov    edx,0xf608a40e
  411d9c:	fisttp QWORD PTR [esi]
  411d9e:	pop    esp
  411d9f:	scas   eax,DWORD PTR es:[edi]
  411da0:	sub    al,0xdc
  411da2:	jmp    0xfd6f:0x3fb34176
  411da9:	mov    cl,0xc6
  411dab:	cld    
  411dac:	in     al,0x8c
  411dae:	fwait
  411daf:	jns    0x411e0b
  411db1:	sub    eax,0xab02d7bf
  411db6:	ins    BYTE PTR es:[edi],dx
  411db7:	ds inc eax
  411db9:	cmp    eax,0xa8571bcd
  411dbe:	add    esi,DWORD PTR [edi-0x58]
  411dc1:	pop    ebx
  411dc2:	ss cli 
  411dc4:	fld    TBYTE PTR [esi-0x20]
  411dc7:	mov    WORD PTR [ebp+eax*2-0x36],es
  411dcb:	gs dec ebx
  411dcd:	sbb    BYTE PTR [esi+ebp*1+0x10be7c90],dl
  411dd4:	jne    0x411d6f
  411dd6:	cld    
  411dd7:	ret    0x1697
  411dda:	dec    esp
  411ddb:	add    DWORD PTR [edx],eax
  411ddd:	pop    edi
  411dde:	add    DWORD PTR [edx-0x27304a3e],ecx
  411de4:	mov    esp,esp
  411de6:	inc    ecx
  411de7:	ret    0x23f9
  411dea:	jp     0x411e50
  411dec:	dec    ecx
  411ded:	adc    edx,DWORD PTR [ebp-0x4e]
  411df0:	sbb    eax,0xcaa12b8d
  411df5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411df6:	aaa    
  411df7:	call   0x479d:0x66e1285a
  411dfe:	xchg   DWORD PTR [ebx+edi*1-0x230e970d],edx
  411e05:	adc    ah,BYTE PTR [edi-0x4dffc02a]
  411e0b:	add    esp,DWORD PTR [ebx-0x2aaf188a]
  411e11:	add    BYTE PTR ds:0x9ce427ea,dl
  411e17:	jg     0x411d9f
  411e19:	rcl    BYTE PTR [ecx+0x2e],0xe8
  411e1d:	dec    ebp
  411e1e:	inc    eax
  411e1f:	push   ebx
  411e20:	pmaxub mm7,mm5
  411e23:	fwait
  411e24:	add    ebx,esi
  411e26:	inc    esp
  411e27:	dec    eax
  411e28:	out    0x46,eax
  411e2a:	dec    ebx
  411e2b:	imul   ebp,DWORD PTR [ebx-0x7d],0x4a
  411e2f:	das    
  411e30:	cwde   
  411e31:	and    DWORD PTR [edx+edx*2-0x4a7a0970],ebx
  411e38:	sbb    al,0xe5
  411e3a:	mov    ch,0xeb
  411e3c:	movaps xmm6,XMMWORD PTR [ecx]
  411e3f:	push   ebp
  411e40:	aas    
  411e41:	pop    ecx
  411e42:	push   eax
  411e43:	dec    eax
  411e44:	dec    edi
  411e45:	push   ss
  411e46:	jae    0x411e6e
  411e48:	mov    ds:0x9daa3025,eax
  411e4d:	push   edi
  411e4e:	sbb    BYTE PTR [esi-0xb],bl
  411e51:	in     al,0x7f
  411e53:	mov    esi,0xa64a3a23
  411e58:	pushf  
  411e59:	cmc    
  411e5a:	leave  
  411e5b:	in     al,dx
  411e5c:	jle    0x411dec
  411e5e:	lods   eax,DWORD PTR ds:[esi]
  411e5f:	push   0x73d0bee4
  411e64:	lds    edx,FWORD PTR [edi-0x5303c5c6]
  411e6a:	int3   
  411e6b:	jle    0x411df9
  411e6d:	lods   eax,DWORD PTR ds:[esi]
  411e6e:	fisttp QWORD PTR [ebx+0x39]
  411e71:	fbstp  TBYTE PTR [ebx]
  411e73:	xchg   esi,eax
  411e74:	xor    esp,0xb4d636de
  411e7a:	data16 adc BYTE PTR [ecx],cl
  411e7d:	int    0x63
  411e7f:	pop    ebx
  411e80:	mov    ch,0x6e
  411e82:	mov    dl,0xb5
  411e84:	pop    ss
  411e85:	cmp    dl,BYTE PTR [edx-0x544dbb41]
  411e8b:	imul   edx,DWORD PTR [ebx+ecx*2+0xd],0x8205ef57
  411e93:	lods   al,BYTE PTR ds:[esi]
  411e94:	sub    DWORD PTR [esi],eax
  411e96:	shr    ebx,1
  411e98:	and    al,0x64
  411e9a:	fldcw  WORD PTR [esi+0x443e6c59]
  411ea0:	dec    edx
  411ea1:	lods   al,BYTE PTR ds:[esi]
  411ea2:	mov    eax,0xec13849c
  411ea7:	inc    ecx
  411ea8:	inc    ebp
  411ea9:	and    dh,0xc9
  411eac:	add    BYTE PTR [ebx-0x58],bh
  411eaf:	mov    ecx,0x1585dbce
  411eb4:	xor    BYTE PTR [ebx+eax*2+0x6075ec89],ch
  411ebb:	inc    ebp
  411ebc:	sbb    edx,ebp
  411ebe:	inc    ecx
  411ebf:	outs   dx,DWORD PTR ds:[esi]
  411ec0:	int    0x62
  411ec2:	xor    eax,0x1e6b767e
  411ec7:	ins    DWORD PTR es:[edi],dx
  411ec8:	inc    esi
  411ec9:	lock jmp 0x411f3a
  411ecc:	loope  0x411f21
  411ece:	xor    DWORD PTR [ecx+0x2d],ebx
  411ed1:	mov    DWORD PTR [edx-0x37],edx
  411ed4:	mov    BYTE PTR [ebp-0x21c5b60b],dl
  411eda:	xlat   BYTE PTR ds:[ebx]
  411edb:	inc    ecx
  411edc:	dec    eax
  411edd:	and    al,0x50
  411edf:	mov    ebp,DWORD PTR [edi]
  411ee1:	adc    al,0x4a
  411ee3:	cwde   
  411ee4:	mov    ebp,0xa5f43941
  411ee9:	xor    BYTE PTR [esi+esi*2-0x14],dh
  411eed:	add    BYTE PTR [edi-0x2c68e08e],0x7
  411ef4:	mov    al,0x2
  411ef6:	dec    eax
  411ef7:	fwait
  411ef8:	push   0xffffffd5
  411efa:	fimul  WORD PTR [edx]
  411efc:	out    dx,al
  411efd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411efe:	call   0x3bc62562
  411f03:	push   ss
  411f04:	aam    0x70
  411f06:	sbb    BYTE PTR [edx+0xb0fa3f1],bh
  411f0c:	pop    ebx
  411f0d:	adc    BYTE PTR es:[esi+eiz*8-0x19],bh
  411f12:	fincstp 
  411f14:	fdivr  DWORD PTR [esi+0x22]
  411f17:	(bad)  
  411f19:	ret    
  411f1a:	retf   
  411f1b:	int    0x7d
  411f1d:	jle    0x411ef3
  411f1f:	and    BYTE PTR [edx-0x7],ah
  411f22:	adc    dl,dl
  411f24:	not    DWORD PTR [eax-0x5]
  411f27:	push   esi
  411f28:	adc    al,0x97
  411f2a:	mov    ds:0xb7716491,eax
  411f2f:	and    BYTE PTR [esp+edi*4+0x20],dh
  411f33:	aam    0xdc
  411f35:	mov    ah,dh
  411f37:	xchg   esp,eax
  411f38:	sub    eax,0x3f1f72db
  411f3d:	and    eax,0xdb2d5f1e
  411f42:	retf   
  411f43:	mov    ebx,0xb8db2ca
  411f48:	(bad)  
  411f49:	neg    DWORD PTR [edi*8+0x6dda12aa]
  411f50:	and    ebx,DWORD PTR [ebp+0x665817a6]
  411f56:	jl     0x411f26
  411f58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f59:	adc    ah,BYTE PTR [ecx-0x6564d51f]
  411f5f:	call   0x84fd4e3d
  411f64:	in     al,0xf3
  411f66:	cmp    esp,edi
  411f68:	adc    cl,BYTE PTR [esi-0x11]
  411f6b:	in     eax,0x48
  411f6d:	stc    
  411f6e:	jae    0x411feb
  411f70:	xor    DWORD PTR [eax+0x1924eebb],0x2b
  411f77:	scas   eax,DWORD PTR es:[edi]
  411f78:	loope  0x411f66
  411f7a:	sti    
  411f7b:	jp     0x411f33
  411f7d:	in     al,0x0
  411f7f:	mov    ds:0x2fb0a305,al
  411f84:	fwait
  411f85:	mov    eax,0xdee322f3
  411f8a:	nop
  411f8b:	jle    0x411fee
  411f8d:	fisub  WORD PTR [edi+ecx*1-0x21401fa3]
  411f94:	imul   edx,DWORD PTR [ebx+0x706a5039],0x470bb982
  411f9e:	out    dx,eax
  411f9f:	push   ss
  411fa0:	test   eax,0x7aa4ee52
  411fa5:	sub    BYTE PTR [edi],al
  411fa7:	xchg   ebx,eax
  411fa8:	cwde   
  411fa9:	fidiv  WORD PTR [ecx]
  411fab:	xor    al,0xe1
  411fad:	inc    ecx
  411fae:	shl    DWORD PTR [ecx],1
  411fb0:	pushf  
  411fb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fb2:	mov    DWORD PTR [esi+0x282791ab],esp
  411fb8:	pop    edx
  411fb9:	sub    bl,BYTE PTR [eax-0x2b]
  411fbc:	(bad)  [edx-0x74868f4b]
  411fc2:	xchg   edi,eax
  411fc3:	inc    eax
  411fc4:	sbb    al,0xd3
  411fc6:	adc    al,0x82
  411fc8:	outs   dx,BYTE PTR ds:[esi]
  411fc9:	dec    edi
  411fca:	das    
  411fcb:	push   cs
  411fcc:	jns    0x411f72
  411fce:	pushf  
  411fcf:	(bad)  
  411fd0:	push   ecx
  411fd1:	ficom  WORD PTR [edx+eax*4-0xc]
  411fd5:	pusha  
  411fd6:	cwde   
  411fd7:	stos   BYTE PTR es:[edi],al
  411fd8:	shr    BYTE PTR [ecx+0x17],cl
  411fdb:	push   ebp
  411fdc:	sub    BYTE PTR [ebp-0x1634343c],0x77
  411fe3:	(bad)  
  411fe4:	fmul   QWORD PTR [esi]
  411fe6:	rcr    BYTE PTR [eax+ebx*4+0x30318c47],0xd5
  411fee:	cmp    bh,0x61
  411ff1:	mov    cl,0x96
  411ff3:	fdivr  st,st(7)
  411ff5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ff6:	mov    esi,0x81647034
  411ffb:	aaa    
  411ffc:	mov    edi,0xad1938d4
  412001:	rcl    DWORD PTR [edi-0x1195fa9b],1
  412007:	popf   
  412008:	stos   DWORD PTR es:[edi],eax
  412009:	sbb    cl,BYTE PTR [edx]
  41200b:	nop
  41200c:	jo     0x412035
  41200e:	jb     0x411fa3
  412010:	stos   DWORD PTR es:[edi],eax
  412011:	push   ecx
  412012:	lods   al,BYTE PTR ds:[esi]
  412013:	out    dx,al
  412014:	out    dx,al
  412015:	and    WORD PTR [esi],bx
  412018:	mov    ah,0x61
  41201a:	retf   0x2cc0
  41201d:	dec    esp
  41201e:	sahf   
  41201f:	stos   DWORD PTR es:[edi],eax
  412020:	mov    ecx,0xa66e17eb
  412025:	dec    ebp
  412026:	daa    
  412027:	sti    
  412028:	cdq    
  412029:	adc    eax,0xbba24c4f
  41202e:	pop    esi
  41202f:	jno    0x41202a
  412031:	inc    ecx
  412032:	jb     0x412062
  412034:	cdq    
  412035:	in     al,dx
  412036:	mov    eax,0x611ed9fe
  41203b:	xor    esi,edi
  41203d:	cmp    al,0x24
  41203f:	dec    ebp
  412040:	xchg   DWORD PTR [eax+edi*2-0x7d],edx
  412044:	pop    ss
  412045:	fiadd  WORD PTR [esi]
  412047:	jnp    0x41200f
  412049:	clc    
  41204a:	sub    eax,edx
  41204c:	leave  
  41204d:	mov    ebp,esp
  41204f:	sbb    al,0xdb
  412051:	popw   ss
  412053:	inc    esp
  412054:	xor    dl,BYTE PTR [edx+0x79]
  412057:	mov    ds:0x6f2c0822,al
  41205c:	inc    esi
  41205d:	test   al,0xb2
  41205f:	push   esi
  412060:	jns    0x41207c
  412062:	cdq    
  412063:	sbb    al,0x84
  412065:	fiadd  WORD PTR ds:0x97b6ff5f
  41206b:	jmp    0x71e5:0x69e63547
  412072:	test   eax,0xd8b9d52c
  412077:	mov    ecx,edi
  412079:	repz dec esi
  41207b:	cld    
  41207c:	dec    eax
  41207d:	or     bl,al
  41207f:	and    al,0xd7
  412081:	and    ah,BYTE PTR [ebx+0x56]
  412084:	dec    ebp
  412085:	lahf   
  412086:	dec    esp
  412087:	in     eax,0x1d
  412089:	(bad)  
  41208a:	(bad)  
  41208b:	jl     0x412088
  41208d:	pop    ebp
  41208e:	dec    ebx
  41208f:	sbb    ebp,ecx
  412091:	repnz inc esp
  412093:	repz clc 
  412095:	ret    0x3b37
  412098:	cld    
  412099:	cdq    
  41209a:	xchg   BYTE PTR [ebx],dh
  41209c:	imul   ebp,eax,0x38
  41209f:	push   ecx
  4120a0:	push   eax
  4120a1:	fisub  WORD PTR [ebp+0x3b]
  4120a4:	out    0x48,eax
  4120a6:	or     ecx,ebx
  4120a8:	mov    al,0xf6
  4120aa:	adc    DWORD PTR [edx],0xb9a9a39f
  4120b0:	fimul  WORD PTR [edi+0x17]
  4120b3:	sbb    ebp,DWORD PTR [esi]
  4120b5:	fwait
  4120b6:	push   ebp
  4120b7:	pop    edx
  4120b8:	cmp    DWORD PTR [esi+0x99b6f96],edi
  4120be:	jne    0x4120e3
  4120c0:	in     eax,0xcd
  4120c2:	push   ds
  4120c3:	or     al,0xf4
  4120c5:	sub    eax,0x5f9b2f25
  4120ca:	addr16 (bad) 
  4120cc:	jb     0x4120fc
  4120ce:	out    dx,al
  4120cf:	enter  0x8f9,0xee
  4120d3:	int3   
  4120d4:	and    BYTE PTR [eax+0xc],al
  4120d7:	fstp   TBYTE PTR [eax+0x6b4fb0ad]
  4120dd:	inc    ebx
  4120de:	jmp    0x5bda:0xba408492
  4120e5:	leave  
  4120e6:	cmp    BYTE PTR [eax+0x3b],cl
  4120e9:	push   esp
  4120ea:	ins    BYTE PTR es:[edi],dx
  4120eb:	mov    ebx,0xd775c14f
  4120f0:	xchg   ebp,eax
  4120f1:	add    eax,0x84dec8a3
  4120f6:	pop    esp
  4120f7:	call   0x2378538a
  4120fc:	sub    BYTE PTR [edi-0x436a5a00],dh
  412102:	icebp  
  412103:	icebp  
  412104:	pop    es
  412105:	jle    0x4120a9
  412107:	xor    BYTE PTR [edi+0x21f5a8ad],0xdc
  41210e:	stos   BYTE PTR es:[edi],al
  41210f:	loope  0x4120ac
  412111:	stos   BYTE PTR es:[edi],al
  412112:	xor    DWORD PTR [eax+0x13552ee3],eax
  412118:	rcr    DWORD PTR [eax],1
  41211a:	in     eax,0xad
  41211c:	cwde   
  41211d:	push   ecx
  41211e:	stc    
  41211f:	test   DWORD PTR [esi],eax
  412121:	push   0x48
  412123:	or     dl,BYTE PTR [edx+0x443fc0c6]
  412129:	xchg   ebp,eax
  41212a:	adc    edx,DWORD PTR [eax+0x4c5823ec]
  412130:	xlat   BYTE PTR ds:[ebx]
  412131:	push   esp
  412132:	popa   
  412133:	add    eax,0xf7fa6c5a
  412138:	lahf   
  412139:	or     edi,DWORD PTR [edx-0x56fe0a81]
  41213f:	imul   ecx,DWORD PTR [ebx-0xd97116e],0xffffffb4
  412146:	(bad)  
  412147:	hlt    
  412148:	lods   eax,DWORD PTR ds:[esi]
  412149:	push   eax
  41214a:	cmp    ah,cl
  41214c:	in     al,dx
  41214d:	or     dh,dh
  41214f:	xchg   esp,eax
  412150:	and    DWORD PTR [edi],eax
  412152:	mov    dh,0x53
  412154:	mov    ebp,0xef98d05b
  412159:	pop    ss
  41215a:	mov    dl,0xb6
  41215c:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41215e:	(bad)  
  41215f:	pop    esi
  412160:	mov    esp,DWORD PTR [esi]
  412162:	jmp    0xc8d3efe7
  412167:	cmp    bl,BYTE PTR [edx]
  412169:	ror    BYTE PTR [edi+0x29],1
  41216c:	in     eax,0x12
  41216e:	repz jl 0x412188
  412171:	mov    esi,DWORD PTR [esi+0x55]
  412174:	imul   esi,ecx,0xffffffbd
  412177:	jae    0x412199
  412179:	push   ds
  41217a:	fst    QWORD PTR [esi-0x34]
  41217d:	out    0xe8,eax
  41217f:	inc    ecx
  412180:	loop   0x412127
  412182:	pop    ebx
  412183:	out    0xc0,al
  412185:	dec    eax
  412186:	push   edx
  412187:	pop    ecx
  412188:	sub    al,0x54
  41218a:	cdq    
  41218b:	ret    0x3ff5
  41218e:	xor    BYTE PTR ss:[eax-0x4c07e1d],0x66
  412196:	push   ecx
  412197:	pop    esi
  412198:	add    eax,edi
  41219a:	lds    ebx,FWORD PTR [edi]
  41219c:	pop    es
  41219d:	mov    ds:0xd51a41fb,al
  4121a2:	enter  0xd65a,0xd7
  4121a6:	adc    dl,dh
  4121a8:	inc    ebx
  4121a9:	push   edi
  4121aa:	pusha  
  4121ab:	lock sbb ebx,DWORD PTR [esi-0x78494722]
  4121b2:	not    DWORD PTR [edi*4+0x6a016c7]
  4121b9:	lock jo 0x4121db
  4121bc:	lds    ecx,FWORD PTR [ecx-0x1a]
  4121bf:	sub    DWORD PTR [esi-0x4d36754f],edi
  4121c5:	cmp    ebp,esi
  4121c7:	and    edx,DWORD PTR [edi-0x5c]
  4121ca:	mov    ecx,0xb5332e74
  4121cf:	test   BYTE PTR [eax+0x187afa4f],bl
  4121d5:	cs iret 
  4121d7:	push   esi
  4121d8:	push   edi
  4121d9:	(bad)  
  4121da:	jle    0x4121ec
  4121dc:	jge    0x4121b0
  4121de:	cmp    esp,DWORD PTR [edi+0x75]
  4121e1:	jmp    0x50b:0x3e079827
  4121e8:	push   0x769772c
  4121ed:	sbb    DWORD PTR [esi],eax
  4121ef:	pop    ecx
  4121f0:	xchg   ebx,eax
  4121f1:	jns    0x412256
  4121f3:	lock pop es
  4121f5:	scas   al,BYTE PTR es:[edi]
  4121f6:	pop    eax
  4121f7:	lds    ecx,FWORD PTR [ecx-0x7c]
  4121fa:	ins    BYTE PTR es:[edi],dx
  4121fb:	jns    0x412212
  4121fd:	and    al,0x2d
  4121ff:	or     al,0x8e
  412201:	or     BYTE PTR [edi-0x25db13d3],0x11
  412208:	add    DWORD PTR [ecx],esp
  41220a:	push   0x76c4f464
  41220f:	leave  
  412210:	sar    DWORD PTR [ebx+0x74bc4ab8],cl
  412216:	xchg   BYTE PTR [edi],al
  412218:	xchg   ebx,eax
  412219:	loopne 0x41221c
  41221b:	lods   eax,DWORD PTR ds:[esi]
  41221c:	cmp    cl,BYTE PTR [ebp+esi*8+0x5d6d9c06]
  412223:	mov    cl,0x29
  412225:	mov    esp,0xba0f62c6
  41222a:	clc    
  41222b:	sub    al,0x1d
  41222d:	jp     0x41222a
  41222f:	pop    ss
  412230:	and    al,0xe6
  412232:	retf   0xfa77
  412235:	push   edx
  412236:	mov    BYTE PTR [ecx+0x69ad4995],bl
  41223c:	adc    DWORD PTR [eax-0x5d],ebp
  41223f:	jno    0x4121c8
  412241:	mov    bh,0x62
  412243:	loopne 0x412299
  412245:	sahf   
  412246:	or     ah,ch
  412248:	xor    bh,BYTE PTR [ebx+0x6a]
  41224b:	popa   
  41224c:	xchg   ebp,eax
  41224d:	loopne 0x41222e
  41224f:	mov    ds:0x257afc31,eax
  412254:	push   eax
  412255:	ins    BYTE PTR es:[edi],dx
  412256:	mov    eax,0x8e388efd
  41225b:	loopne 0x412219
  41225d:	pop    es
  41225e:	xor    BYTE PTR ds:0x8e97eabc,0x13
  412265:	arpl   di,si
  412267:	jno    0x41222a
  412269:	sahf   
  41226a:	pop    ecx
  41226b:	jno    0x412283
  41226d:	gs xor al,0xb5
  412270:	jo     0x412269
  412272:	dec    ebx
  412273:	xchg   esi,esp
  412275:	or     dl,BYTE PTR es:[ebp+0x40]
  412279:	or     dl,BYTE PTR [edi+0x3748705a]
  41227f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412280:	sbb    al,BYTE PTR [edx-0x60]
  412283:	enter  0xe532,0xd3
  412287:	sar    edx,0x94
  41228a:	pushf  
  41228b:	adc    esi,esi
  41228d:	sar    BYTE PTR [edi+0x3f],0x62
  412291:	push   edi
  412292:	sub    bl,al
  412294:	xor    eax,0x91266f2d
  412299:	test   BYTE PTR [ebx+0x65a2bd84],cl
  41229f:	sub    eax,0x6204a148
  4122a4:	pop    eax
  4122a5:	xlat   BYTE PTR ds:[ebx]
  4122a6:	fist   DWORD PTR [esi-0x3c]
  4122a9:	pop    es
  4122aa:	jnp    0x4122ad
  4122ac:	mov    bh,0x10
  4122ae:	cmc    
  4122af:	lock int 0x8b
  4122b2:	inc    esi
  4122b3:	cmp    eax,0x10f4ba7c
  4122b8:	out    dx,eax
  4122b9:	test   eax,0x657077e5
  4122be:	leave  
  4122bf:	pxor   mm5,QWORD PTR ds:0x357225a6
  4122c6:	push   edi
  4122c7:	xchg   edx,eax
  4122c8:	and    eax,0xe1670517
  4122cd:	cmp    BYTE PTR [eax],0x64
  4122d0:	mov    WORD PTR [esi-0xb],cs
  4122d3:	sbb    DWORD PTR [esi],0x1cb21bc6
  4122d9:	ret    0x2b46
  4122dc:	mov    eax,0xaabf5eb4
  4122e1:	pop    ebp
  4122e2:	fst    DWORD PTR [esi]
  4122e4:	mov    eax,0x68c30b12
  4122e9:	push   es
  4122ea:	add    eax,0xff84640f
  4122ef:	aam    0x21
  4122f1:	idiv   DWORD PTR [ebx]
  4122f3:	pop    ebx
  4122f4:	out    0x50,al
  4122f6:	ins    DWORD PTR es:[edi],dx
  4122f7:	cmp    DWORD PTR [eax-0x3c],edx
  4122fa:	jle    0x412318
  4122fc:	or     ch,BYTE PTR [edi+0x3422dcde]
  412302:	and    esi,DWORD PTR [eax]
  412304:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412305:	mov    WORD PTR [ebx],ss
  412307:	ja     0x4122b8
  412309:	shr    BYTE PTR [edx],0x78
  41230c:	push   esp
  41230d:	popf   
  41230e:	mov    esi,0x9e70e9db
  412313:	or     ecx,DWORD PTR [eax+0x70]
  412316:	and    DWORD PTR ds:0xc854b616,0xa3df1ce8
  412320:	xchg   edx,eax
  412321:	or     al,0x29
  412323:	dec    ebx
  412324:	fmul   QWORD PTR [esp+edx*8]
  412327:	pushf  
  412328:	out    dx,eax
  412329:	fcom   DWORD PTR [edx]
  41232b:	js     0x41237e
  41232d:	sti    
  41232e:	ja     0x4122bb
  412330:	sub    BYTE PTR [edx-0x5c15c7d4],cl
  412336:	add    BYTE PTR [edi],al
  412338:	popa   
  412339:	push   eax
  41233a:	(bad)  
  41233b:	push   esp
  41233c:	test   al,0x82
  41233f:	dec    ebp
  412340:	xor    BYTE PTR [edx-0x67856617],bh
  412346:	das    
  412347:	dec    edx
  412348:	sahf   
  412349:	(bad)  [ecx]
  41234b:	ret    0xc51d
  41234e:	mov    ebx,0xaf43e55c
  412353:	mov    DWORD PTR [esi+0x1f],ebx
  412356:	shl    BYTE PTR [edi+ebx*8],1
  412359:	cld    
  41235a:	adc    al,0x77
  41235c:	fsubr  st(0),st
  41235e:	(bad)  
  412360:	mov    dh,0x3d
  412362:	pop    ecx
  412363:	ins    DWORD PTR es:[edi],dx
  412364:	retf   0x4323
  412367:	pop    ebx
  412368:	mov    esp,0x54d1b880
  41236d:	dec    edi
  41236e:	data16 ds (bad) 
  412372:	lds    edx,FWORD PTR [ebp+0x3d359c19]
  412378:	les    edx,FWORD PTR [ecx]
  41237a:	call   0x22ae73ed
  41237f:	imul   ebx,DWORD PTR [edx+edx*1],0x4d
  412383:	mov    eax,ds:0xc1f41c7
  412388:	jge    0x41230a
  41238a:	add    bh,BYTE PTR [ebx+ecx*4+0x46c3b4d]
  412391:	push   esp
  412392:	pop    esi
  412393:	xor    eax,0x41bad4c0
  412398:	js     0x41236e
  41239a:	jge    0x4123e7
  41239c:	in     eax,0x28
  41239e:	lahf   
  41239f:	dec    BYTE PTR [eax+0x4a]
  4123a2:	mov    ds:0x1397e6f6,eax
  4123a7:	or     edx,DWORD PTR [edx+ebx*4]
  4123aa:	xchg   ebx,eax
  4123ab:	enter  0x9452,0x22
  4123af:	mov    ah,0xa9
  4123b1:	(bad)  
  4123b2:	ins    BYTE PTR es:[edi],dx
  4123b3:	inc    ebp
  4123b4:	inc    ebx
  4123b5:	mov    ecx,0x40222b11
  4123ba:	pop    es
  4123bb:	mov    BYTE PTR [edx+0x1],0xcd
  4123bf:	push   ecx
  4123c0:	cmp    al,0xad
  4123c2:	xor    DWORD PTR [ebp-0xe],eax
  4123c5:	mov    bh,0x3e
  4123c7:	push   0xffffffb0
  4123c9:	bound  ecx,QWORD PTR [ecx-0x501337cf]
  4123cf:	sbb    BYTE PTR [ecx],dl
  4123d1:	adc    esp,esp
  4123d3:	lahf   
  4123d4:	cmp    eax,0x2a1ab3bd
  4123d9:	rcr    esi,1
  4123db:	jl     0x41238d
  4123dd:	sub    DWORD PTR [ecx+0x4967dd0b],ecx
  4123e3:	(bad)  
  4123e4:	jns    0x412426
  4123e6:	rol    BYTE PTR [ebp+0x45],cl
  4123e9:	pop    es
  4123ea:	sbb    BYTE PTR [eax],cl
  4123ec:	pop    ebx
  4123ed:	xor    bl,BYTE PTR [edi+edi*2]
  4123f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123f1:	fwait
  4123f2:	pop    edx
  4123f3:	test   eax,0x9f1dc366
  4123f8:	push   ebx
  4123f9:	imul   ebx,ebx,0x56
  4123fc:	inc    esi
  4123fd:	ror    eax,0x68
  412400:	sbb    ch,dl
  412402:	xchg   ecx,eax
  412403:	out    0x23,al
  412405:	test   al,0x87
  412407:	out    dx,eax
  412408:	push   es
  412409:	stos   BYTE PTR es:[edi],al
  41240a:	or     al,0x1b
  41240c:	xor    DWORD PTR [eax],edi
  41240e:	call   0xed4584c8
  412413:	dec    ecx
  412414:	fwait
  412415:	call   0x305752a0
  41241a:	sahf   
  41241b:	ret    
  41241c:	and    ecx,DWORD PTR [ecx-0x2e]
  41241f:	fld    TBYTE PTR [eax]
  412421:	mov    dh,BYTE PTR [edx-0xa]
  412424:	and    cl,0xb8
  412427:	inc    ecx
  412428:	gs pop edi
  41242a:	mov    edx,0xd7c8d041
  41242f:	mov    ebp,0x62c837ad
  412434:	inc    esi
  412435:	jo     0x412472
  412437:	gs leave 
  412439:	mov    dh,BYTE PTR [esp+edx*8+0x45]
  41243d:	and    eax,0xf434ead1
  412442:	es add ebp,0xffffffcc
  412446:	fld    TBYTE PTR [edi+0x38f6eabf]
  41244c:	xor    bh,dl
  41244e:	jne    0x412492
  412450:	das    
  412451:	sbb    eax,0xf93b69fe
  412456:	adc    ecx,ebp
  412458:	adc    eax,0x32ed5f34
  41245d:	aam    0x55
  41245f:	scas   eax,DWORD PTR es:[edi]
  412460:	nop
  412461:	xor    dh,BYTE PTR [eax]
  412463:	xchg   edx,eax
  412464:	mul    BYTE PTR [esi+0x22]
  412467:	and    DWORD PTR [ebx+0x11],esi
  41246a:	xor    ebx,DWORD PTR [ecx]
  41246c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41246d:	in     al,0x8a
  41246f:	out    0x41,al
  412471:	push   es
  412472:	sbb    al,0xa9
  412474:	loop   0x4124b4
  412476:	xchg   ebx,eax
  412477:	push   ecx
  412478:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412479:	adc    DWORD PTR [ecx-0x5129b8a6],edx
  41247f:	aam    0x9c
  412481:	inc    ebp
  412482:	(bad)  
  412483:	in     eax,0x44
  412485:	push   ebx
  412486:	aad    0x1f
  412488:	retf   0x24ec
  41248b:	cmp    eax,esi
  41248d:	cwde   
  41248e:	jl     0x4124f7
  412490:	adc    eax,0xfa30aea
  412495:	mov    ch,0x4c
  412497:	xchg   edx,eax
  412498:	sub    al,0x33
  41249a:	xchg   ebp,eax
  41249b:	ror    DWORD PTR [esi],cl
  41249d:	std    
  41249e:	arpl   WORD PTR [ebx],dx
  4124a0:	push   cs
  4124a1:	lds    ebp,FWORD PTR [edi]
  4124a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124a4:	addr16 mov dl,0xde
  4124a7:	ret    0x3309
  4124aa:	aaa    
  4124ab:	xchg   edi,esi
  4124ad:	lock out 0x6e,eax
  4124b0:	mov    bh,0x97
  4124b2:	or     eax,0x5d5cb654
  4124b7:	nop
  4124b8:	ret    
  4124b9:	mov    bl,0x69
  4124bb:	push   0xfffffffb
  4124bd:	fwait
  4124be:	xor    dh,dh
  4124c0:	cmp    edi,ebp
  4124c2:	and    BYTE PTR [edx+0x42],dl
  4124c5:	sbb    eax,0x51439166
  4124ca:	cmp    ecx,edi
  4124cc:	xchg   ebp,eax
  4124cd:	pop    edi
  4124ce:	mov    bl,BYTE PTR [esi+0x5951613]
  4124d4:	int3   
  4124d5:	mov    bl,0x18
  4124d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124d8:	aas    
  4124d9:	xchg   ebp,eax
  4124da:	sbb    al,0x81
  4124dc:	test   al,0x46
  4124de:	sbb    eax,0x496a602e
  4124e3:	sbb    bh,cl
  4124e5:	jg     0x4124b4
  4124e7:	ins    BYTE PTR es:[edi],dx
  4124e8:	lea    edx,[esi-0x7920ef93]
  4124ee:	cmc    
  4124ef:	adc    DWORD PTR [esp+ecx*1],ecx
  4124f2:	inc    ecx
  4124f3:	in     eax,dx
  4124f4:	loopne 0x4124ad
  4124f6:	xor    eax,0x3aeec45b
  4124fb:	add    esi,DWORD PTR [edx+eax*2+0x68]
  4124ff:	push   ds
  412500:	sub    BYTE PTR [ebx],ch
  412502:	xchg   ebx,eax
  412503:	push   0x5141920d
  412508:	push   ebp
  412509:	jl     0x4124a1
  41250b:	jmp    0xc29d:0xb7930433
  412512:	mov    dh,0x67
  412514:	push   es
  412515:	jne    0x412556
  412517:	push   edi
  412518:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412519:	and    DWORD PTR [ecx+0x2dc384da],0xffffff84
  412520:	dec    edx
  412521:	mov    bh,cl
  412523:	mov    esi,0x2653a233
  412528:	push   0x5d9ae005
  41252d:	xchg   edi,eax
  41252e:	jge    0x412512
  412530:	cdq    
  412531:	xchg   esi,eax
  412532:	hlt    
  412533:	inc    ecx
  412534:	loop   0x4124e7
  412536:	(bad)
  41253a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41253b:	sub    eax,DWORD PTR [eax]
  41253d:	mov    bh,0x94
  41253f:	jbe    0x4124f2
  412541:	pop    ss
  412542:	stc    
  412543:	add    BYTE PTR [esi],dl
  412545:	in     eax,dx
  412546:	aaa    
  412547:	push   eax
  412548:	sub    DWORD PTR [ecx],eax
  41254a:	dec    eax
  41254b:	cmp    dh,BYTE PTR [edi]
  41254d:	cmc    
  41254e:	pop    ebp
  41254f:	ret    
  412550:	sti    
  412551:	mov    bh,BYTE PTR [esi-0x850e269]
  412557:	outs   dx,DWORD PTR ds:[esi]
  412558:	mov    BYTE PTR [eax+ebp*2-0x1e],0x9b
  41255d:	in     eax,0xb2
  41255f:	mov    ch,0x70
  412561:	mov    DWORD PTR [eax+edi*1+0x76],eax
  412565:	mov    bh,0x78
  412567:	nop
  412568:	or     eax,0x2c6bf4ca
  41256d:	in     al,dx
  41256e:	ret    
  41256f:	jmp    0xbd06:0xab5edc9e
  412576:	mov    bh,0x35
  412578:	stc    
  412579:	push   ds
  41257a:	retf   0x8b83
  41257d:	or     edx,edi
  41257f:	scas   al,BYTE PTR es:[edi]
  412580:	inc    edi
  412581:	mov    gs,edx
  412583:	or     ch,BYTE PTR [ecx-0x511c2fd7]
  412589:	enter  0xa77b,0x46
  41258d:	mov    bh,bh
  41258f:	cmp    DWORD PTR [ebx+0x5a343b16],esi
  412595:	outs   dx,BYTE PTR ds:[esi]
  412596:	(bad)  
  412597:	jb     0x4125c4
  412599:	mov    al,ds:0xb0cc30cb
  41259e:	sub    esi,DWORD PTR [ecx+0x8]
  4125a1:	iret   
  4125a2:	repz repnz add dl,0x12
  4125a7:	push   ebp
  4125a8:	push   ss
  4125a9:	(bad)  
  4125aa:	ins    DWORD PTR es:[edi],dx
  4125ab:	cwde   
  4125ac:	dec    edx
  4125ad:	mov    esp,0xc19308c2
  4125b2:	mov    BYTE PTR [esp+ebp*2+0x1bd2c2f3],dh
  4125b9:	jmp    FWORD PTR [eax]
  4125bb:	mov    ecx,0x56852bc4
  4125c0:	test   BYTE PTR [edi],bh
  4125c2:	sub    ah,0x4d
  4125c5:	add    al,0x6
  4125c7:	fcomp  DWORD PTR gs:[ebx-0x70a70e48]
  4125ce:	daa    
  4125cf:	sbb    DWORD PTR [esi+0x27],esp
  4125d2:	ror    BYTE PTR [ecx+0x45a2ce6c],cl
  4125d8:	test   eax,0x6bef0c45
  4125dd:	jae    0x412649
  4125df:	dec    ebp
  4125e0:	mov    esi,0x2d8b2c52
  4125e5:	dec    edi
  4125e6:	popa   
  4125e7:	jno    0x41264b
  4125e9:	loop   0x4125cc
  4125eb:	inc    esi
  4125ec:	add    DWORD PTR [esi+0x5f2ac5c3],ecx
  4125f2:	scas   eax,DWORD PTR es:[edi]
  4125f3:	sbb    eax,0x9848844e
  4125f8:	xor    bl,BYTE PTR [ecx-0x2786b3ca]
  4125fe:	xor    ch,cl
  412600:	mov    dl,0x93
  412602:	nop
  412603:	jbe    0x4125d9
  412605:	or     ah,BYTE PTR [eax+0x53]
  412608:	add    al,dl
  41260a:	xlat   BYTE PTR ds:[ebx]
  41260b:	or     ebp,esi
  41260d:	mov    ebp,0x9a02d402
  412612:	lea    esi,[ecx]
  412614:	lahf   
  412615:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412616:	mov    ebx,0x265a0720
  41261b:	stos   DWORD PTR es:[edi],eax
  41261c:	mov    cl,0x77
  41261e:	push   ebp
  41261f:	test   ebx,0x7d64d372
  412625:	rcr    BYTE PTR [ecx+0x2a6da714],0xbd
  41262c:	icebp  
  41262d:	xchg   esp,eax
  41262e:	sbb    BYTE PTR [eax+0x7d],bh
  412631:	pop    ebp
  412632:	push   ebx
  412633:	xchg   edx,eax
  412634:	ja     0x41262f
  412636:	popf   
  412637:	aas    
  412638:	jmp    0xfc26af1
  41263d:	fadd   st(4),st
  41263f:	jg     0x412681
  412641:	sub    DWORD PTR [eax],edx
  412643:	pop    eax
  412644:	mov    ch,0x72
  412646:	sbb    eax,0xa7a5db82
  41264b:	or     eax,0x521002b6
  412650:	xlat   BYTE PTR ds:[ebx]
  412651:	dec    DWORD PTR [esi-0x28829cc3]
  412657:	mov    ecx,0x3c76bc66
  41265c:	ss popf 
  41265e:	and    al,al
  412660:	fisttp WORD PTR [edi]
  412662:	sub    BYTE PTR [ebx+0x5fade986],dh
  412668:	jns    0x412616
  41266a:	mov    dh,0x71
  41266c:	and    dh,bh
  41266e:	(bad)  
  41266f:	ror    DWORD PTR [edi],1
  412671:	repnz mov edi,0xdb1b3f65
  412677:	and    DWORD PTR [ebp-0x394abcae],ebx
  41267d:	adc    dl,0x75
  412680:	jno    0x412672
  412682:	mov    esi,DWORD PTR [ebx+0x5a]
  412685:	or     bh,BYTE PTR [edi+0x21095e7c]
  41268b:	dec    edi
  41268c:	scas   al,BYTE PTR es:[edi]
  41268d:	sub    DWORD PTR [edi+0x1f],edx
  412690:	xchg   ebx,eax
  412691:	test   BYTE PTR [eax],bl
  412693:	stos   DWORD PTR es:[edi],eax
  412694:	aas    
  412695:	push   ecx
  412696:	and    ebx,DWORD PTR [esi-0xb0bb1e]
  41269c:	xor    bh,cl
  41269e:	inc    ecx
  41269f:	mov    bl,BYTE PTR [edi]
  4126a1:	push   ds
  4126a2:	test   BYTE PTR [ebp+0x8],al
  4126a5:	push   es
  4126a6:	xchg   ecx,eax
  4126a7:	(bad)  
  4126a8:	(bad)  
  4126a9:	push   es
  4126aa:	xchg   DWORD PTR [eax+0x4c8ee074],edi
  4126b0:	sub    esp,DWORD PTR [eax-0x59]
  4126b3:	sbb    eax,edx
  4126b5:	fcomp  DWORD PTR [ebx]
  4126b7:	cmp    ebx,0xffffff81
  4126ba:	mov    ebp,0xbf0017fc
  4126bf:	retf   
  4126c0:	scas   al,BYTE PTR es:[edi]
  4126c1:	push   ds
  4126c2:	sbb    eax,0x457e518b
  4126c7:	and    eax,0x58cc0957
  4126cc:	clc    
  4126cd:	push   eax
  4126ce:	mov    edi,0x228954c
  4126d3:	xchg   ebp,eax
  4126d4:	js     0x412742
  4126d6:	adc    eax,0xa742ec23
  4126db:	nop
  4126dc:	(bad)  
  4126dd:	mov    ds:0xa121840c,al
  4126e2:	xchg   edi,eax
  4126e3:	add    al,BYTE PTR [edi+0x49802b78]
  4126e9:	sub    eax,0x685974d8
  4126ee:	push   ebp
  4126ef:	retf   
  4126f0:	pop    ds
  4126f1:	mov    edx,0xd017b14c
  4126f6:	add    ch,bl
  4126f8:	add    eax,0xbbf68149
  4126fd:	pop    esp
  4126fe:	imul   eax,DWORD PTR [edi+0x70],0xac5de3f8
  412705:	dec    edx
  412706:	or     eax,0x844ddeeb
  41270b:	xor    edi,DWORD PTR [esi]
  41270d:	out    dx,eax
  41270e:	into   
  41270f:	xor    al,0x8
  412711:	(bad)  
  412712:	mov    edx,0xe93d4254
  412717:	pop    ecx
  412718:	out    dx,al
  412719:	cdq    
  41271a:	mov    ds,WORD PTR [esi+0x6a217a73]
  412720:	adc    bl,BYTE PTR [esi-0x5aba5451]
  412726:	std    
  412727:	int    0xff
  412729:	in     eax,0xab
  41272b:	fcomp  QWORD PTR [ebp*2-0x6ba7d6bb]
  412732:	aam    0xf4
  412734:	sub    bh,bh
  412736:	push   ebp
  412737:	dec    esi
  412738:	(bad)  
  412739:	inc    esp
  41273a:	mov    al,ds:0x61118071
  41273f:	sbb    al,0x42
  412741:	push   ss
  412742:	call   0xb8ec:0x17209e57
  412749:	mov    DWORD PTR [ebx],ecx
  41274b:	and    DWORD PTR [eax-0x51d1c00c],ebp
  412751:	int3   
  412752:	sbb    dl,BYTE PTR [esi+0x7d3316e8]
  412758:	jne    0x41277d
  41275a:	test   BYTE PTR ds:0x4e80a684,dl
  412760:	in     al,0x70
  412762:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412763:	adc    esp,DWORD PTR [ebx]
  412765:	mov    ecx,0x392562b3
  41276a:	sub    ch,dh
  41276c:	fiadd  WORD PTR ds:0x9f4bdea6
  412772:	sub    dl,BYTE PTR [edx]
  412774:	(bad)  
  412775:	jmp    0x4127b1
  412777:	xchg   edx,eax
  412778:	inc    esi
  412779:	data16 jns 0x41278e
  41277c:	test   eax,0xdfedbb7f
  412781:	mov    bh,0x61
  412783:	shr    DWORD PTR [edx+eiz*1+0x613dd238],0xfd
  41278b:	cmp    eax,0x84c99ae9
  412790:	cs sbb dl,cl
  412793:	xlat   BYTE PTR ds:[ebx]
  412794:	mov    eax,0xae50713b
  412799:	add    ch,BYTE PTR [ebx+0x4f]
  41279c:	inc    esi
  41279d:	test   al,0x63
  41279f:	mov    al,0x6d
  4127a1:	or     BYTE PTR [ecx-0x70],bl
  4127a4:	cs lahf 
  4127a6:	stc    
  4127a7:	scas   al,BYTE PTR es:[edi]
  4127a8:	sub    eax,0x9a01e43d
  4127ad:	inc    esi
  4127ae:	inc    ecx
  4127af:	into   
  4127b0:	mov    esp,ecx
  4127b2:	sbb    DWORD PTR [ebx-0x2adc634f],0x7d597d86
  4127bc:	movhps QWORD PTR [ebp+0x3b],xmm3
  4127c0:	push   0xa
  4127c2:	call   0x1fdb:0x900dca96
  4127c9:	fwait
  4127ca:	call   0xfb8d:0xc892aeb5
  4127d1:	dec    ecx
  4127d2:	add    al,BYTE PTR [ecx-0x6a]
  4127d5:	mov    edx,0x6712ba41
  4127da:	mov    ds:0xa20b879d,al
  4127df:	pop    ebp
  4127e0:	jmp    0x41285b
  4127e2:	out    dx,al
  4127e3:	pop    eax
  4127e4:	push   edx
  4127e5:	loopne 0x41285f
  4127e7:	fwait
  4127e8:	pusha  
  4127e9:	(bad)  
  4127ea:	gs xor ebx,edi
  4127ed:	or     al,BYTE PTR [eax-0x62]
  4127f0:	mov    esi,DWORD PTR [eax+edi*2+0x7d]
  4127f4:	inc    edx
  4127f5:	fist   DWORD PTR [eax-0x713caffb]
  4127fb:	pop    es
  4127fc:	ins    DWORD PTR es:[edi],dx
  4127fd:	mov    bh,0x1d
  4127ff:	dec    esi
  412800:	fnsave [eax-0x1b]
  412803:	sub    bh,bl
  412805:	jp     0x412840
  412807:	push   ds
  412808:	daa    
  412809:	and    BYTE PTR [esi],0x50
  41280c:	in     eax,0xc0
  41280e:	in     al,0x88
  412810:	mov    bl,0x9d
  412812:	into   
  412813:	fldcw  WORD PTR [edi+0x5e]
  412816:	ds jb  0x4127c9
  412819:	retf   
  41281a:	jmp    0x412892
  41281c:	loopne 0x412857
  41281e:	int3   
  41281f:	fdiv   st(4),st
  412821:	fld    QWORD PTR [edi]
  412823:	popf   
  412824:	(bad)  
  412826:	or     DWORD PTR [ebx+0x426efb39],ebp
  41282c:	(bad)  
  41282e:	ja     0x4127e9
  412830:	or     dl,0x72
  412833:	pushf  
  412834:	loopne 0x4127f5
  412836:	aam    0x72
  412838:	and    cl,ch
  41283a:	test   eax,0xaeecfc59
  41283f:	jle    0x41288e
  412841:	pusha  
  412842:	push   ecx
  412843:	test   eax,0xd9e0670f
  412848:	cmp    ebp,eax
  41284a:	mov    dh,0x92
  41284c:	pop    ds
  41284d:	repz loope 0x412830
  412850:	push   ecx
  412851:	scas   eax,DWORD PTR es:[edi]
  412852:	scas   al,BYTE PTR es:[edi]
  412853:	mov    bl,0xeb
  412855:	push   ebp
  412856:	dec    edx
  412857:	cmp    al,0xd5
  412859:	and    eax,0xc2f87a77
  41285e:	xor    ch,BYTE PTR [ebx]
  412860:	adc    DWORD PTR [ebx+0x15334014],0x38
  412867:	arpl   WORD PTR [edi-0x4c],sp
  41286a:	mov    ch,0x58
  41286c:	scas   al,BYTE PTR es:[edi]
  41286d:	rol    BYTE PTR [esi+0x50],cl
  412870:	mov    bl,0xaf
  412872:	mov    al,0xc2
  412874:	inc    esi
  412875:	ror    BYTE PTR [edx+0x195fc7aa],1
  41287b:	lods   eax,DWORD PTR ds:[esi]
  41287c:	jo     0x4128f2
  41287e:	das    
  41287f:	push   ebx
  412880:	ins    BYTE PTR es:[edi],dx
  412881:	scas   al,BYTE PTR es:[edi]
  412882:	dec    esp
  412883:	push   ss
  412884:	mov    al,ds:0x9f0b223f
  412889:	or     DWORD PTR [edx+0x55],esp
  41288c:	jle    0x412844
  41288e:	imul   ebp,ebx,0x213c0675
  412894:	stos   DWORD PTR es:[edi],eax
  412895:	dec    ecx
  412896:	xchg   ebp,eax
  412897:	(bad)  
  412898:	rcr    BYTE PTR [eax],1
  41289a:	pop    esi
  41289b:	ins    DWORD PTR es:[edi],dx
  41289c:	sbb    eax,0xbd18f8c0
  4128a1:	add    al,0x6
  4128a3:	(bad)  
  4128a4:	ret    
  4128a5:	inc    ebx
  4128a6:	icebp  
  4128a7:	mov    ecx,0xcbe3011d
  4128ac:	int3   
  4128ad:	dec    esi
  4128ae:	mov    ds:0xee1a66f,eax
  4128b3:	jnp    0x4128c7
  4128b5:	adc    BYTE PTR [eax+0x59ae6a2f],ch
  4128bb:	loopne 0x4128a7
  4128bd:	lock aad 0x6
  4128c0:	sar    BYTE PTR [esi+edi*4-0x52c2aaca],0xe6
  4128c8:	cmp    eax,0xb5761de8
  4128cd:	sbb    BYTE PTR [ebp-0x7c],0x6e
  4128d1:	ja     0x41285f
  4128d3:	imul   ebp,DWORD PTR [edi-0x5f],0xfffffff4
  4128d7:	aaa    
  4128d8:	push   0x68
  4128da:	dec    esp
  4128db:	mov    ebp,0x479e01e0
  4128e0:	xor    eax,0xef126c27
  4128e5:	out    0xe7,eax
  4128e7:	jno    0x4128ba
  4128e9:	fdiv   DWORD PTR [esi]
  4128eb:	cld    
  4128ec:	daa    
  4128ed:	dec    edx
  4128ee:	aas    
  4128ef:	mov    ah,0x7b
  4128f1:	xor    al,ah
  4128f3:	das    
  4128f4:	ins    BYTE PTR es:[edi],dx
  4128f5:	fstp   TBYTE PTR [esi+eiz*1-0x48d1da14]
  4128fc:	dec    ebp
  4128fd:	sbb    eax,0xa3ba20ca
  412902:	scas   al,BYTE PTR es:[edi]
  412903:	mov    ah,0x3
  412905:	test   DWORD PTR [ebx],ebp
  412907:	inc    edx
  412908:	pop    edi
  412909:	stos   DWORD PTR es:[edi],eax
  41290a:	lds    ebx,FWORD PTR [edx]
  41290c:	in     eax,dx
  41290d:	mov    ch,0xf3
  41290f:	jl     0x4128c2
  412911:	inc    esp
  412912:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412913:	dec    eax
  412914:	mov    ebx,0xe795b664
  412919:	add    BYTE PTR [esi+0x3b6fdc3f],dl
  41291f:	mov    ds:0x351d5376,al
  412924:	leave  
  412925:	fwait
  412926:	leave  
  412927:	dec    edi
  412928:	outs   dx,DWORD PTR ds:[esi]
  412929:	jmp    0xe63cbf18
  41292e:	xchg   BYTE PTR ds:0xb9208bb7,al
  412934:	int3   
  412935:	mov    al,ds:0xe770bfb0
  41293a:	adc    BYTE PTR [edx-0x5f27a9b2],ch
  412940:	adc    al,0xe6
  412942:	in     al,dx
  412943:	mov    eax,0x27a95ca
  412948:	push   edx
  412949:	jle    0x4129a9
  41294b:	sbb    ecx,ebx
  41294d:	in     eax,0x14
  41294f:	or     esp,eax
  412951:	arpl   bx,bx
  412953:	sbb    al,BYTE PTR [ecx-0x42]
  412956:	ins    BYTE PTR es:[edi],dx
  412957:	cmp    ebx,DWORD PTR [edi-0x78]
  41295a:	and    al,0xf4
  41295c:	in     al,dx
  41295d:	addr16 arpl di,cx
  412960:	push   0x8c77781a
  412965:	mov    es,WORD PTR [edi+0x57087d73]
  41296b:	push   cs
  41296c:	sbb    eax,0x2a9959b
  412971:	jns    0x41297d
  412973:	push   es
  412974:	jno    0x4129d4
  412976:	mov    ?,eax
  412978:	push   esi
  412979:	xchg   esi,esp
  41297b:	jbe    0x412996
  41297d:	mov    eax,ds:0x2028138a
  412982:	arpl   WORD PTR [edi+0x11],sp
  412985:	jns    0x412a05
  412987:	(bad)  
  412988:	in     eax,dx
  412989:	xchg   ebp,eax
  41298a:	xchg   ecx,eax
  41298b:	pop    es
  41298c:	mov    ds:0x3bcf673d,eax
  412991:	retf   0xccc7
  412994:	cmp    DWORD PTR [ebp+0x50efff3],esp
  41299a:	add    al,0x9e
  41299c:	idiv   DWORD PTR [ebp+0xe]
  41299f:	fist   DWORD PTR [edi]
  4129a1:	push   esp
  4129a2:	scas   al,BYTE PTR es:[edi]
  4129a3:	ror    BYTE PTR [esi],0x2b
  4129a6:	ret    
  4129a7:	jne    0x412965
  4129a9:	ficomp DWORD PTR [edi+0x77]
  4129ac:	gs in  eax,0xc9
  4129af:	loopne 0x412991
  4129b1:	push   0xffffffe0
  4129b3:	jnp    0x41297c
  4129b5:	loop   0x4129d8
  4129b7:	push   eax
  4129b8:	pop    ss
  4129b9:	pop    esi
  4129ba:	fild   WORD PTR [eax-0x3e676455]
  4129c0:	push   edi
  4129c1:	lea    edx,[ecx-0x14]
  4129c4:	push   ebx
  4129c5:	sub    al,BYTE PTR es:[edx-0x1c]
  4129c9:	pop    edx
  4129ca:	adc    ecx,DWORD PTR [esi+0x25]
  4129cd:	or     BYTE PTR [eax+0x4f],ch
  4129d0:	call   0xafd9ddab
  4129d5:	ror    DWORD PTR [edi+0x6f9aebbf],0xe4
  4129dc:	out    0x30,eax
  4129de:	outs   dx,BYTE PTR ds:[esi]
  4129df:	push   cs
  4129e0:	fdiv   st,st(1)
  4129e2:	xchg   dl,ch
  4129e4:	sbb    eax,0x99479c2
  4129e9:	jns    0x412970
  4129eb:	fstp   TBYTE PTR [edx-0x3723c30d]
  4129f1:	scas   al,BYTE PTR es:[edi]
  4129f2:	jnp    0x41297c
  4129f4:	dec    ecx
  4129f5:	mov    ecx,0x5d43bf01
  4129fa:	(bad)  
  4129fb:	mov    dl,0x7a
  4129fd:	enter  0xc021,0x61
  412a01:	dec    edi
  412a02:	fistp  QWORD PTR [esi+0x24]
  412a05:	jp     0x412a54
  412a07:	xchg   edi,eax
  412a08:	mov    ds:0x2b42ff6e,eax
  412a0d:	out    dx,al
  412a0e:	ja     0x4129fc
  412a10:	sub    al,0x1a
  412a12:	or     DWORD PTR [eax+0x2ab86199],0xd
  412a19:	jg     0x412a07
  412a1b:	dec    eax
  412a1c:	fwait
  412a1d:	add    eax,0x29aa9168
  412a22:	or     DWORD PTR [eax+0x4030ea4],0x52
  412a29:	stos   DWORD PTR es:[edi],eax
  412a2a:	and    eax,DWORD PTR [edi]
  412a2c:	jmp    0x9d1d89b2
  412a31:	fs sbb eax,0xaff8b326
  412a37:	and    ebx,esp
  412a39:	scas   eax,DWORD PTR es:[edi]
  412a3a:	xor    DWORD PTR [ebp+0xa],esi
  412a3d:	aaa    
  412a3e:	pop    ecx
  412a3f:	sar    eax,cl
  412a41:	vpxor  xmm7,xmm2,xmm2
  412a45:	jbe    0x4129d9
  412a47:	cmp    esp,DWORD PTR [eax]
  412a49:	pop    ecx
  412a4a:	loopne 0x412a40
  412a4c:	shr    ch,1
  412a4e:	clc    
  412a4f:	test   BYTE PTR [edi+ebp*8-0x59],dl
  412a53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a54:	aad    0x15
  412a56:	xor    al,0x2
  412a58:	inc    edx
  412a59:	sbb    al,0x8f
  412a5b:	lds    ecx,FWORD PTR [ebx-0x159cd654]
  412a61:	pop    ebp
  412a62:	cli    
  412a63:	jl     0x412a8b
  412a65:	in     al,dx
  412a66:	and    eax,0x80b20a3a
  412a6b:	pslld  mm1,QWORD PTR [ebx-0x65d916ce]
  412a72:	das    
  412a73:	xor    dh,BYTE PTR [edi+0x33]
  412a76:	mov    bl,0xa9
  412a78:	call   0xe2740edc
  412a7d:	push   cs
  412a7e:	pop    ds
  412a7f:	mov    eax,es:0xba79fc7d
  412a85:	pusha  
  412a86:	mov    edx,0xebdec9d8
  412a8b:	stc    
  412a8c:	or     bl,bl
  412a8e:	bound  esi,QWORD PTR [edi+edi*8]
  412a91:	sub    al,0x6c
  412a93:	mov    ebx,0xdc8e599e
  412a98:	cmp    DWORD PTR [edi*1-0x23aaf2cb],eax
  412a9f:	addr16 xchg edx,eax
  412aa1:	enter  0xbef4,0x68
  412aa5:	push   0xffffffdd
  412aa7:	or     al,0xe8
  412aa9:	fstp   TBYTE PTR [edi]
  412aab:	jo     0x412b16
  412aad:	mov    dh,0xd1
  412aaf:	mov    dh,0x6b
  412ab1:	mov    ebx,0x9da42bfd
  412ab6:	add    al,0xa3
  412ab8:	sbb    al,0x36
  412aba:	fcomi  st,st(5)
  412abc:	in     al,0x7a
  412abe:	mov    edx,0x29c5282
  412ac3:	inc    esi
  412ac4:	shl    BYTE PTR [eax+0x4d5f37dc],1
  412aca:	or     al,0x49
  412acc:	xor    eax,0xc186586f
  412ad1:	jae    0x412afa
  412ad3:	lds    edx,FWORD PTR ds:0x144e77ac
  412ad9:	sub    bh,BYTE PTR cs:[ecx+0x5a]
  412add:	mov    al,dh
  412adf:	imul   edx,DWORD PTR [esi+eax*8+0x5f3209af],0x8a117037
  412aea:	addr16 imul eax,ecx,0xa6a8a1ab
  412af1:	ja     0x412a99
  412af3:	or     edx,ecx
  412af5:	mov    eax,0x7e697525
  412afa:	fild   WORD PTR [edx-0x7f]
  412afd:	popf   
  412afe:	mov    dh,0x6
  412b00:	mov    ebx,0x69182347
  412b05:	retf   
  412b06:	push   ds
  412b07:	bound  ebx,QWORD PTR [ebx-0x6b]
  412b0a:	das    
  412b0b:	sbb    BYTE PTR [edi-0x4b],dl
  412b0e:	pushf  
  412b0f:	mov    esp,0x64b7f594
  412b14:	test   eax,0xd60ac9cf
  412b19:	fmul   QWORD PTR [esi+0x2a]
  412b1c:	sar    DWORD PTR fs:[esi+0x58],cl
  412b20:	int    0x2d
  412b22:	mov    dh,0x63
  412b24:	inc    ecx
  412b25:	rcr    DWORD PTR [ecx+0x4e1c7970],cl
  412b2b:	or     al,0x2
  412b2d:	dec    edx
  412b2e:	mov    ch,0xa6
  412b30:	push   ebx
  412b31:	dec    esi
  412b32:	test   al,0x87
  412b34:	stos   DWORD PTR es:[edi],eax
  412b35:	sub    BYTE PTR [ecx+0x40ffe768],dh
  412b3b:	outs   dx,DWORD PTR ds:[esi]
  412b3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b3d:	adc    al,0xd9
  412b3f:	xor    BYTE PTR [esi-0x63],bh
  412b42:	scas   al,BYTE PTR es:[edi]
  412b43:	add    eax,DWORD PTR [edi+0x5f2a9c88]
  412b49:	jle    0x412b4b
  412b4b:	mov    dl,0x3b
  412b4d:	and    al,0x4a
  412b4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b50:	jecxz  0x412b40
  412b52:	push   esi
  412b53:	retf   0x812c
  412b56:	sub    esp,DWORD PTR [edx-0x55]
  412b59:	jnp    0x412bb5
  412b5b:	sub    DWORD PTR [eax+ecx*4-0x6f],eax
  412b5f:	fwait
  412b60:	cmp    eax,0xe633e30b
  412b65:	int    0xd5
  412b67:	daa    
  412b68:	jecxz  0x412b3d
  412b6a:	jb     0x412b53
  412b6c:	mov    al,0xb0
  412b6e:	sbb    al,0x53
  412b70:	aam    0xa
  412b72:	add    BYTE PTR [ecx-0x2e],ah
  412b75:	lahf   
  412b76:	dec    edi
  412b77:	and    DWORD PTR [esi],0x9e8a1ede
  412b7d:	cdq    
  412b7e:	cdq    
  412b7f:	int3   
  412b80:	pop    DWORD PTR ds:0x3adc25b0
  412b86:	inc    esi
  412b87:	int    0xf8
  412b89:	(bad)  
  412b8a:	push   edi
  412b8b:	mov    eax,ds:0xd418f12f
  412b90:	jbe    0x412c08
  412b92:	outs   dx,DWORD PTR ds:[esi]
  412b93:	mov    ch,0x2f
  412b95:	sub    al,0x61
  412b97:	sbb    eax,0xad2d494f
  412b9c:	sbb    eax,0x1e269405
  412ba1:	ds inc edx
  412ba3:	push   0xffffffbc
  412ba5:	stos   BYTE PTR es:[edi],al
  412ba6:	mov    ds:0xd0fb4d70,al
  412bab:	cmp    BYTE PTR [edx-0x6],dl
  412bae:	cmp    eax,0xf4a9e820
  412bb3:	dec    edx
  412bb4:	and    esp,DWORD PTR [ebp+0x2a]
  412bb7:	loopne 0x412b72
  412bb9:	inc    eax
  412bba:	xchg   esp,eax
  412bbb:	dec    edi
  412bbc:	push   es
  412bbd:	ss pop si
  412bc0:	sub    edx,ebx
  412bc2:	mov    BYTE PTR [ebx+ebp*2+0x3d571313],cl
  412bc9:	gs cmp eax,0x387f22ec
  412bcf:	jo     0x412bdb
  412bd1:	jb     0x412bce
  412bd3:	xor    BYTE PTR [ebp-0x7d],bl
  412bd6:	loopne 0x412b9c
  412bd8:	or     al,0xcc
  412bda:	imul   eax,DWORD PTR [edi+0x30c333bf],0xffffff98
  412be1:	popf   
  412be2:	enter  0x681f,0x9f
  412be6:	call   0x874ea63b
  412beb:	imul   eax,esi,0x5f4e275b
  412bf1:	rcr    BYTE PTR [edx],cl
  412bf3:	mov    BYTE PTR [edi],0x7d
  412bf6:	je     0x412ba5
  412bf8:	push   0x8bb25cb9
  412bfd:	and    dh,bl
  412bff:	adc    al,0xb4
  412c01:	lahf   
  412c02:	in     al,dx
  412c03:	movlhps xmm6,xmm2
  412c06:	test   al,0xe0
  412c08:	xor    eax,0xb43ea4e2
  412c0d:	and    DWORD PTR [edx+0x329f453],edi
  412c13:	push   ss
  412c14:	leave  
  412c15:	out    dx,al
  412c16:	cmp    al,0x34
  412c18:	dec    ebp
  412c19:	jl     0x412c45
  412c1b:	out    dx,al
  412c1c:	dec    ebx
  412c1d:	sub    esi,esi
  412c1f:	push   esi
  412c20:	sbb    BYTE PTR [edi-0x8],ch
  412c23:	add    al,0x89
  412c25:	ins    BYTE PTR es:[edi],dx
  412c26:	sub    ch,BYTE PTR [ebx-0x76]
  412c29:	cmp    edx,DWORD PTR [edx-0x197f1def]
  412c2f:	sub    BYTE PTR [ebp-0x2ba0d538],ah
  412c35:	push   es
  412c36:	aad    0x4f
  412c38:	inc    ebp
  412c39:	sub    bh,BYTE PTR [ebx]
  412c3b:	jecxz  0x412c5b
  412c3d:	xchg   ecx,eax
  412c3e:	sbb    BYTE PTR [edx],cl
  412c40:	cli    
  412c41:	mov    ds:0xcce9da17,al
  412c46:	mov    al,0x9a
  412c48:	mov    eax,ds:0xbab2249a
  412c4d:	mov    esp,0xeb61a93
  412c52:	xor    eax,0xb22f9c4a
  412c57:	bound  esp,QWORD PTR [esi]
  412c59:	fisttp QWORD PTR [eax-0x424e3446]
  412c5f:	aad    0x16
  412c61:	jae    0x412bfc
  412c63:	loop   0x412bea
  412c65:	out    0xa5,eax
  412c67:	sub    BYTE PTR [ebx+0x3c],dl
  412c6a:	call   0xa9bcbb64
  412c6f:	sub    eax,0x35ec2441
  412c74:	shl    DWORD PTR [ebx-0x277a53c1],cl
  412c7a:	imul   ebx,DWORD PTR [eax-0x49bb1809],0x6f
  412c81:	es mov ecx,0x7fe091bc
  412c87:	pop    edi
  412c88:	in     al,0x35
  412c8a:	push   es
  412c8b:	adc    ah,BYTE PTR [ebx+0x1a]
  412c8e:	lock jbe 0x412c8d
  412c91:	sub    al,0xba
  412c93:	adc    ebp,DWORD PTR [ecx+esi*2-0x63]
  412c97:	std    
  412c98:	jge    0x412cd7
  412c9a:	jge    0x412cb4
  412c9c:	push   edi
  412c9d:	inc    edi
  412c9e:	sar    edx,cl
  412ca0:	mov    edx,DWORD PTR [edi-0x11f0878e]
  412ca6:	mov    bh,0xfe
  412ca8:	jp     0x412c5f
  412caa:	mov    DWORD PTR [ebx+0x7af231d3],ebp
  412cb0:	xchg   esp,eax
  412cb1:	jmp    0x412d15
  412cb3:	popa   
  412cb4:	jnp    0x412c94
  412cb6:	std    
  412cb7:	push   edx
  412cb8:	push   ds
  412cb9:	(bad)  
  412cbb:	xchg   ecx,eax
  412cbc:	stos   BYTE PTR es:[edi],al
  412cbd:	fs addr16 pop ds
  412cc0:	sbb    DWORD PTR [ecx-0x6a],edi
  412cc3:	inc    ecx
  412cc4:	ja     0x412c8d
  412cc6:	(bad)  
  412cc7:	push   cs
  412cc8:	fiadd  WORD PTR [eax-0x7af9b245]
  412cce:	daa    
  412ccf:	(bad)  
  412cd0:	mov    ds:0x622b32ab,eax
  412cd5:	sar    BYTE PTR [esi-0x12],0x7
  412cd9:	pop    esi
  412cda:	sbb    al,0x2a
  412cdc:	inc    ecx
  412cdd:	and    bh,bh
  412cdf:	arpl   WORD PTR [edi-0x2446757],si
  412ce5:	icebp  
  412ce6:	fcom   DWORD PTR [edi+0xf973b5f]
  412cec:	iret   
  412ced:	(bad)  
  412cee:	push   bx
  412cf0:	sub    bl,dl
  412cf2:	lea    edi,[eax+ebx*2+0x6a3f582f]
  412cf9:	add    DWORD PTR [ebx],esi
  412cfb:	out    0xc8,al
  412cfd:	xor    BYTE PTR [ebp+0x0],dl
  412d00:	test   DWORD PTR [edi],esi
  412d02:	test   DWORD PTR [eax+0x74],edi
  412d05:	in     al,0x32
  412d07:	mov    al,BYTE PTR [edx]
  412d09:	out    0xee,al
  412d0b:	mov    eax,ds:0xa24e98a9
  412d10:	xchg   edx,eax
  412d11:	or     dh,BYTE PTR [ebp-0x55]
  412d14:	aas    
  412d15:	jae    0x412d1d
  412d17:	sub    DWORD PTR [esi],eax
  412d19:	imul   ecx,edi,0x20b221b5
  412d1f:	mov    ds:0x9b03fd9,eax
  412d24:	retf   
  412d25:	mov    eax,ds:0xeb988c81
  412d2a:	test   DWORD PTR [ecx-0x4d810e0b],ecx
  412d30:	(bad)  
  412d31:	adc    ebp,DWORD PTR [esi-0x447f3c2b]
  412d37:	cmp    ecx,edi
  412d39:	push   eax
  412d3a:	aaa    
  412d3b:	ficom  WORD PTR [esi-0x41]
  412d3e:	aam    0xc0
  412d40:	imul   eax,DWORD PTR ds:0x37d466e1,0x34a76fd3
  412d4a:	or     bh,al
  412d4c:	stos   BYTE PTR es:[edi],al
  412d4d:	inc    ecx
  412d4e:	dec    ebx
  412d4f:	fisttp DWORD PTR [ebp+0x40]
  412d52:	xchg   edx,eax
  412d53:	cmp    edx,DWORD PTR [edx+eiz*2-0x53ad8ec9]
  412d5a:	aas    
  412d5b:	popf   
  412d5c:	xlat   BYTE PTR ds:[ebx]
  412d5d:	popf   
  412d5e:	mov    eax,0x9540d794
  412d63:	imul   ebx,DWORD PTR [ebx-0x2ebae9b9],0x11
  412d6a:	jg     0x412db7
  412d6c:	and    al,0xcb
  412d6e:	xor    esi,esi
  412d70:	loopne 0x412d21
  412d72:	arpl   WORD PTR [ebx+0x4246dd7d],cx
  412d78:	jle    0x412da2
  412d7a:	lods   al,BYTE PTR ds:[esi]
  412d7b:	xchg   esp,eax
  412d7c:	xor    BYTE PTR [esi+0x37d518cd],ah
  412d82:	aad    0xfb
  412d84:	out    dx,al
  412d85:	lock imul edi,DWORD PTR [edx+0x7],0x46745f63
  412d8d:	mov    bh,0x1d
  412d8f:	push   0xffffffb0
  412d91:	xchg   cl,bh
  412d93:	sub    DWORD PTR [edx],esi
  412d95:	pop    edx
  412d96:	push   0x20
  412d98:	mov    ch,0x74
  412d9a:	add    BYTE PTR [edx],bl
  412d9c:	pop    eax
  412d9d:	sub    BYTE PTR [edi],bh
  412d9f:	sub    eax,0xbb19a0ea
  412da4:	push   esp
  412da5:	iret   
  412da6:	jnp    0x412d3b
  412da8:	mov    fs,WORD PTR [esi]
  412daa:	push   es
  412dab:	fidivr WORD PTR [ecx+ebp*8]
  412dae:	cmp    ebp,esi
  412db0:	cmp    DWORD PTR [ecx+0x53c0ec9c],ecx
  412db6:	mov    bl,0x78
  412db8:	jne    0x412e36
  412dba:	and    ecx,DWORD PTR [edx]
  412dbc:	jnp    0x412ddd
  412dbe:	push   eax
  412dbf:	mov    ch,0x86
  412dc1:	and    eax,0xdee95cf7
  412dc6:	nop
  412dc7:	jbe    0x412ddc
  412dc9:	adc    bh,bh
  412dcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412dcc:	mov    esp,0xb707652b
  412dd1:	outs   dx,BYTE PTR ds:[esi]
  412dd2:	out    0xf2,eax
  412dd4:	adc    eax,0xa580e7e9
  412dd9:	jg     0x412dcf
  412ddb:	cdq    
  412ddc:	imul   ebp,DWORD PTR [ebp-0x12afb4fb],0xd98211c
  412de6:	ins    BYTE PTR es:[edi],dx
  412de7:	call   0xd92362be
  412dec:	mov    ebp,DWORD PTR [edx-0x54ba47e6]
  412df2:	pop    ecx
  412df3:	gs dec ecx
  412df5:	lock inc esi
  412df7:	test   DWORD PTR [ecx],esp
  412df9:	adc    eax,esp
  412dfb:	xor    BYTE PTR [edx],0xe2
  412dfe:	and    edi,DWORD PTR [esi]
  412e00:	shr    BYTE PTR [eax-0x35cd8e04],1
  412e06:	je     0x412d99
  412e08:	sub    eax,0x83212718
  412e0d:	out    dx,al
  412e0e:	cmp    al,0x76
  412e10:	and    eax,0x8d93bf0f
  412e15:	or     DWORD PTR [ebx+0x607c903e],0x7e
  412e1c:	fwait
  412e1d:	pop    ss
  412e1e:	fst    DWORD PTR ds:0xcf130ff9
  412e24:	jmp    0xa5cc:0x21f7d197
  412e2b:	std    
  412e2c:	jo     0x412e97
  412e2e:	cli    
  412e2f:	mov    ds:0xd576c9c7,eax
  412e34:	and    bh,0x46
  412e37:	fcomp  QWORD PTR [edx-0x30]
  412e3a:	cmp    edx,DWORD PTR [eax+eiz*1]
  412e3d:	ja     0x412dfd
  412e3f:	mov    ecx,0x35c525ea
  412e44:	shl    DWORD PTR [edi+0x42],cl
  412e47:	xchg   esp,eax
  412e48:	mov    bl,0x25
  412e4a:	lahf   
  412e4b:	retf   
  412e4c:	or     BYTE PTR [edx],ch
  412e4e:	mov    esi,0xb0ddaac7
  412e53:	popa   
  412e54:	inc    edi
  412e55:	sbb    al,0xd6
  412e57:	jecxz  0x412ed8
  412e59:	xchg   esi,eax
  412e5a:	out    0xed,eax
  412e5c:	jae    0x412ebd
  412e5e:	mov    ebx,0xbe452a04
  412e63:	xrelease mov DWORD PTR [esi],esi
  412e66:	mov    dl,0x8c
  412e68:	repz cmp esp,DWORD PTR [ecx]
  412e6b:	or     BYTE PTR [edx+ebx*2],dl
  412e6e:	mov    ebp,ebp
  412e70:	mov    dh,0x29
  412e72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e73:	leave  
  412e74:	test   DWORD PTR [edi+0x39ec616e],eax
  412e7a:	(bad)  
  412e7c:	test   eax,0x5becc6b1
  412e81:	sbb    DWORD PTR [esi+0x3e],edx
  412e84:	test   al,0xa9
  412e86:	mov    ecx,0x1f36ba60
  412e8b:	push   0xffffffd6
  412e8d:	imul   edx,eax,0xff87cd74
  412e93:	mov    dh,0x42
  412e95:	sbb    edi,DWORD PTR [edi+0x7ba03163]
  412e9b:	ja     0x412f1a
  412e9d:	push   ebx
  412e9e:	mov    BYTE PTR [eax],dl
  412ea0:	xchg   ebx,eax
  412ea1:	rol    edi,cl
  412ea3:	jecxz  0x412eeb
  412ea5:	fdiv   DWORD PTR [edi-0x42e197f]
  412eab:	mov    ds:0xb7048038,eax
  412eb0:	push   ebx
  412eb2:	js     0x412ead
  412eb4:	and    bh,BYTE PTR [esp+eax*2-0x39]
  412eb8:	fwait
  412eb9:	pop    esp
  412eba:	mov    al,0x22
  412ebc:	xor    al,0xd9
  412ebe:	sub    al,0x92
  412ec0:	adc    ecx,DWORD PTR [edx-0x7b]
  412ec3:	fcomp  QWORD PTR [edx+0x2948263e]
  412ec9:	dec    ebp
  412eca:	sub    ch,BYTE PTR [esp+edx*8+0x563762e2]
  412ed1:	push   ss
  412ed2:	adc    dl,BYTE PTR ds:0xd124b3a4
  412ed8:	dec    esp
  412ed9:	push   cs
  412eda:	push   esi
  412edb:	push   ds
  412edc:	lds    esp,FWORD PTR [esi]
  412ede:	je     0x412ead
  412ee0:	stos   BYTE PTR es:[edi],al
  412ee1:	fwait
  412ee2:	rcl    BYTE PTR [edx+0x67],1
  412ee5:	and    dl,BYTE PTR [eax-0xa34ba5f]
  412eeb:	aas    
  412eec:	or     ebp,DWORD PTR [ebx-0x62]
  412eef:	push   ss
  412ef0:	dec    edi
  412ef1:	and    BYTE PTR [esi],0xd9
  412ef4:	xchg   DWORD PTR ds:[esi-0xc981f56],esp
  412efb:	adc    BYTE PTR [ecx],bh
  412efd:	xchg   BYTE PTR [ebx-0x54],bl
  412f00:	push   edx
  412f01:	aaa    
  412f02:	lods   eax,DWORD PTR ds:[esi]
  412f03:	sbb    al,0xb6
  412f05:	mov    edi,0xcb98f20
  412f0a:	ja     0x412ede
  412f0c:	mov    eax,ds:0x8be2b46d
  412f11:	repz cld 
  412f13:	outs   dx,DWORD PTR ds:[esi]
  412f14:	popa   
  412f15:	sub    bh,ch
  412f17:	add    BYTE PTR [eax-0x37],0x3d
  412f1b:	mov    ebx,edx
  412f1d:	sbb    ebx,esi
  412f1f:	pop    es
  412f20:	xor    BYTE PTR [edx],ch
  412f22:	inc    esi
  412f23:	sub    BYTE PTR [edx+0x39dbd24],ah
  412f29:	stos   DWORD PTR es:[edi],eax
  412f2a:	ret    0x54b9
  412f2d:	push   0xf2519474
  412f32:	out    0xbe,eax
  412f34:	je     0x412f45
  412f36:	int3   
  412f37:	gs cmp eax,0xcf4f5505
  412f3d:	mov    ecx,0xc2a80399
  412f42:	dec    ebp
  412f43:	call   DWORD PTR [ecx+ebx*1+0x26281808]
  412f4a:	mov    ds:0x17d64f44,eax
  412f4f:	mov    edi,0xb93e4f8f
  412f54:	mov    edi,?
  412f56:	out    0xad,al
  412f58:	mov    edx,0x55dc2b49
  412f5d:	jbe    0x412fcf
  412f5f:	mov    bl,0x22
  412f61:	inc    esi
  412f62:	xchg   ecx,ebp
  412f64:	loope  0x412f83
  412f66:	test   eax,0x6b250414
  412f6b:	sbb    al,0xd8
  412f6d:	data16 mov ah,0x45
  412f70:	fisub  WORD PTR [ecx*8+0x6e7cdfd]
  412f77:	fs dec edi
  412f79:	xchg   DWORD PTR [edi+0xb],eax
  412f7c:	push   ds
  412f7d:	and    al,0xe
  412f7f:	pushf  
  412f80:	jae    0x412f3c
  412f82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f83:	js     0x412f1c
  412f85:	fdivp  st(6),st
  412f87:	es data16 jb 0x412f8d
  412f8b:	inc    ebx
  412f8c:	push   edi
  412f8d:	retf   
  412f8e:	arpl   WORD PTR [edi-0x3f],si
  412f91:	jb     0x412fbd
  412f93:	jle    0x412feb
  412f95:	loopne 0x412f45
  412f97:	mov    ah,0x43
  412f99:	retf   
  412f9a:	sub    al,0x84
  412f9c:	ja     0x412fbb
  412f9e:	mov    esp,0xec4a6721
  412fa3:	(bad)  
  412fa4:	fdiv   QWORD PTR fs:[esi]
  412fa7:	les    ebp,FWORD PTR [eax+ebp*8-0x43b3ebfc]
  412fae:	ffree  st(1)
  412fb0:	push   ecx
  412fb1:	xchg   ebx,eax
  412fb2:	out    0x89,al
  412fb4:	adc    al,BYTE PTR [ecx+0x4e]
  412fb7:	and    ebp,0xb5d12293
  412fbd:	push   ecx
  412fbe:	jl     0x41302d
  412fc0:	add    al,0xaa
  412fc2:	xor    al,0x7d
  412fc4:	stc    
  412fc5:	ret    0xd17e
  412fc8:	and    ecx,DWORD PTR [esi-0x38]
  412fcb:	fadd   DWORD PTR [ecx+0x32d15aa7]
  412fd1:	aas    
  412fd2:	arpl   WORD PTR [ebx-0x73cf9301],ax
  412fd8:	call   0xe592:0x4854ddfb
  412fdf:	stos   DWORD PTR es:[edi],eax
  412fe0:	call   0x1195307
  412fe5:	pop    ebp
  412fe6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fe7:	enter  0x5e18,0xdc
  412feb:	and    eax,0x99358ab7
  412ff0:	ss push esp
  412ff2:	iret   
  412ff3:	xchg   ebx,eax
  412ff4:	stc    
  412ff5:	pop    es
  412ff6:	psubusw mm4,mm7
  412ff9:	mov    ch,0xa9
  412ffb:	pop    eax
  412ffc:	cmovle eax,DWORD PTR [ecx+0x1e]
  413000:	ret    0x97b4
  413003:	ss jb  0x412f8a
  413006:	(bad)  
  413007:	mov    ah,ch
  413009:	and    DWORD PTR [eax],esi
  41300b:	dec    eax
  41300c:	push   0xb41803eb
  413011:	loope  0x41301a
  413013:	daa    
  413014:	(bad)  
  413015:	data16 sbb cl,dl
  413018:	retf   
  413019:	add    DWORD PTR [edx],0x9fdc21c4
  41301f:	in     eax,0x31
  413021:	mov    edi,fs
  413023:	test   BYTE PTR [edx-0x28086a99],cl
  413029:	inc    esi
  41302a:	(bad)  
  41302b:	pop    eax
  41302c:	cmp    dl,BYTE PTR [ebx+0x597418e8]
  413032:	test   al,0x2c
  413034:	test   al,0x3e
  413036:	lock and esp,ebx
  413039:	mov    esp,0x56f20e92
  41303e:	(bad)  
  41303f:	adc    eax,ebp
  413041:	mov    DWORD PTR [edx+0x65],edx
  413044:	jmp    FWORD PTR [esi+0x6f]
  413047:	pop    esi
  413048:	mov    ss,ebp
  41304a:	pop    edi
  41304b:	inc    ebp
  41304c:	mul    DWORD PTR [ebx+0x60]
  41304f:	in     al,0x74
  413051:	sub    dl,BYTE PTR [edi-0x18]
  413054:	mov    cl,cl
  413056:	adc    BYTE PTR [eax],bh
  413058:	mov    bl,0x9e
  41305a:	call   0x3aed640c
  41305f:	rol    ch,cl
  413061:	ins    BYTE PTR es:[edi],dx
  413062:	push   cs
  413063:	xchg   esp,eax
  413064:	jmp    0x41305e
  413066:	cmp    BYTE PTR [edi-0x19],dl
  413069:	mov    al,0x52
  41306b:	fcom   QWORD PTR [edx-0x47]
  41306e:	and    DWORD PTR [eax],0xffffffe4
  413071:	and    BYTE PTR [eax+0x76],0x4e
  413075:	ins    DWORD PTR es:[edi],dx
  413076:	loopne 0x413035
  413078:	test   DWORD PTR [edx+0x42],edx
  41307b:	cwde   
  41307c:	cmp    al,0x67
  41307e:	jle    0x4130bd
  413080:	jl     0x413061
  413082:	mov    eax,ds:0x561b1194
  413087:	fs xchg edi,eax
  413089:	in     al,0xd
  41308b:	sbb    al,0x7d
  41308d:	loop   0x413092
  41308f:	in     al,dx
  413090:	xor    eax,DWORD PTR [edx+0x48]
  413093:	out    0x1a,eax
  413095:	push   ecx
  413097:	sub    cl,BYTE PTR [ebp+0x5a084c6b]
  41309d:	jp     0x413053
  41309f:	jbe    0x4130cf
  4130a1:	(bad)  [ebx]
  4130a3:	test   al,0x28
  4130a5:	add    al,0xd8
  4130a7:	out    0x47,eax
  4130a9:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130ab:	push   0x5ebb6414
  4130b0:	daa    
  4130b1:	pushf  
  4130b2:	out    dx,eax
  4130b3:	pop    ds
  4130b4:	aaa    
  4130b5:	pop    es
  4130b6:	sbb    edi,DWORD PTR [ecx+edi*4+0x7c4c7777]
  4130bd:	(bad)  
  4130be:	pop    ecx
  4130bf:	test   BYTE PTR [ecx+0x6],ah
  4130c2:	jle    0x4130b6
  4130c4:	cld    
  4130c5:	(bad)  
  4130c6:	fist   WORD PTR [ecx+0x6e]
  4130c9:	xor    ch,BYTE PTR [esi+esi*1+0x23]
  4130cd:	stos   BYTE PTR es:[edi],al
  4130ce:	imul   ecx,ebx,0x32ce0578
  4130d4:	push   ebx
  4130d5:	add    edx,DWORD PTR [eax]
  4130d7:	push   esi
  4130d8:	(bad)  
  4130d9:	dec    edx
  4130da:	test   BYTE PTR [eax+0x2e5c1a02],ch
  4130e0:	retf   0xa546
  4130e3:	inc    esi
  4130e4:	fdiv   st(7),st
  4130e6:	adc    cl,BYTE PTR [ebp+0x5837cccf]
  4130ec:	test   BYTE PTR [ebx-0x65],bl
  4130ef:	lahf   
  4130f0:	dec    ecx
  4130f1:	cmp    BYTE PTR [ebx+ecx*2+0x6cf4bcad],cl
  4130f8:	enter  0x895,0x44
  4130fc:	push   edi
  4130fd:	mov    BYTE PTR [ebx-0x4a],dl
  413100:	adc    ecx,DWORD PTR [edx-0x6d]
  413103:	add    ch,dl
  413105:	push   ds
  413106:	mov    edi,0xe054c6cb
  41310b:	xor    al,0x2b
  41310d:	push   es
  41310e:	nop
  41310f:	add    al,0x4b
  413111:	adc    DWORD PTR [edx+ebx*1-0x41],ebx
  413115:	and    al,ch
  413117:	xlat   BYTE PTR ds:[ebx]
  413118:	js     0x41311e
  41311a:	ss xchg edi,eax
  41311c:	xchg   ebx,eax
  41311d:	cmovge esi,DWORD PTR [esi]
  413120:	ret    0xb16c
  413123:	jmp    0x4130f0
  413125:	mov    DWORD PTR [edx+0x3f],eax
  413128:	in     eax,0xd7
  41312a:	mov    WORD PTR [eax+0x6b88a4db],ds
  413130:	arpl   WORD PTR [ebx-0x73],bx
  413133:	xchg   ebp,eax
  413134:	das    
  413135:	jp     0x413165
  413137:	and    al,al
  413139:	daa    
  41313a:	loope  0x413147
  41313c:	test   eax,0x9a976246
  413141:	push   ss
  413142:	data16 mov cl,0xce
  413145:	xchg   esi,eax
  413146:	jp     0x413116
  413148:	cli    
  413149:	pop    eax
  41314a:	imul   ebp,DWORD PTR ds:0x11f63948,0x98422ca
  413154:	cmp    eax,0xdb6234ad
  413159:	jnp    0x4131d6
  41315b:	loope  0x413183
  41315d:	stos   WORD PTR es:[edi],ax
  41315f:	cmp    ebp,DWORD PTR [edx]
  413161:	fs dec eax
  413163:	pop    ss
  413164:	mov    edx,DWORD PTR [edi+esi*1]
  413167:	fisubr DWORD PTR [esi+ebp*4]
  41316a:	inc    edi
  41316b:	pop    ds
  41316c:	fs mov ebp,0x809bf2dd
  413172:	jle    0x413139
  413174:	out    dx,eax
  413175:	jno    0x413143
  413177:	push   esi
  413178:	popa   
  413179:	cmp    eax,0xe7e4bc6c
  41317e:	repnz inc edi
  413180:	dec    edi
  413181:	push   esi
  413182:	mov    ah,0xfd
  413184:	int3   
  413185:	pop    edi
  413186:	mov    dh,0xa9
  413188:	fisub  DWORD PTR [edi-0x1b]
  41318b:	loopne 0x4131f8
  41318d:	sbb    BYTE PTR [edi],cl
  41318f:	xchg   edx,eax
  413190:	std    
  413191:	retf   
  413192:	jmp    0x6428edf2
  413197:	jb     0x41320f
  413199:	sub    BYTE PTR [ebx],dl
  41319b:	mov    bl,BYTE PTR [ecx+0xd0e3226]
  4131a1:	dec    edx
  4131a2:	dec    ecx
  4131a3:	mov    al,ds:0x57e86783
  4131a8:	aam    0x85
  4131aa:	sub    bl,ah
  4131ac:	sahf   
  4131ad:	and    esi,DWORD PTR [ebx+0x7027b8f3]
  4131b3:	js     0x41319c
  4131b5:	lea    edx,[ebx]
  4131b7:	mov    ah,0x4a
  4131b9:	cmp    ah,BYTE PTR [ebx+ecx*8-0x56]
  4131bd:	out    0xc4,al
  4131bf:	stc    
  4131c0:	imul   eax,DWORD PTR [esi],0x7b7060bf
  4131c6:	test   eax,0xa110fee2
  4131cb:	cmp    ecx,DWORD PTR [ecx+0x17]
  4131ce:	mov    ebp,0xe219e3c7
  4131d3:	pop    ebx
  4131d4:	outs   dx,DWORD PTR ds:[esi]
  4131d5:	xchg   esp,eax
  4131d6:	enter  0x2779,0xe9
  4131da:	idiv   DWORD PTR [edx-0x5b]
  4131dd:	cld    
  4131de:	pop    edi
  4131df:	dec    esp
  4131e0:	sbb    eax,0xb97d9773
  4131e5:	ins    BYTE PTR es:[edi],dx
  4131e6:	and    BYTE PTR [edx],cl
  4131e8:	cli    
  4131e9:	cli    
  4131ea:	xchg   esi,eax
  4131eb:	loopne 0x4131a5
  4131ed:	jge    0x413229
  4131ef:	retf   
  4131f0:	pushw  0x4d76
  4131f4:	in     eax,dx
  4131f5:	or     dh,BYTE PTR [edx+0x7268f548]
  4131fb:	pushf  
  4131fc:	clc    
  4131fd:	sar    esi,1
  4131ff:	inc    edx
  413200:	fwait
  413201:	pop    esi
  413202:	and    ecx,DWORD PTR [esi-0x3b1711ce]
  413208:	clc    
  413209:	xchg   edi,eax
  41320a:	dec    esi
  41320b:	and    BYTE PTR [ebx-0x43918231],ah
  413211:	mov    ds:0x9ee2c552,al
  413216:	add    al,BYTE PTR ds:0x63989ead
  41321c:	push   cs
  41321d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41321e:	shr    BYTE PTR [esi+0x3a],0x41
  413222:	dec    ebx
  413223:	pop    esp
  413224:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413225:	fabs   
  413227:	mov    cl,0x95
  413229:	push   ecx
  41322a:	push   ebp
  41322b:	dec    edi
  41322c:	and    ebp,ebp
  41322e:	xlat   BYTE PTR ds:[ebx]
  41322f:	mov    bl,cl
  413231:	sbb    al,0x85
  413233:	xchg   ebx,eax
  413234:	push   es
  413235:	jo     0x413232
  413237:	xchg   esp,eax
  413238:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413239:	sbb    ecx,DWORD PTR cs:[ecx]
  41323c:	pop    ebp
  41323d:	std    
  41323e:	mov    al,ds:0xdb26b6ae
  413243:	ds int 0x4e
  413246:	cmp    al,BYTE PTR ds:0x9989b816
  41324c:	sbb    al,0x37
  41324e:	inc    ebx
  41324f:	lahf   
  413250:	mov    ebp,0xf339e452
  413255:	cmp    eax,0x908d46a8
  41325a:	and    eax,0xc44b877b
  41325f:	adc    al,0xae
  413261:	xchg   edi,eax
  413262:	mov    ebx,0x3d598990
  413267:	push   ecx
  413268:	xchg   edi,eax
  413269:	mov    ah,0x46
  41326b:	jg     0x4131f2
  41326d:	pop    esp
  41326e:	push   edx
  41326f:	mov    ebx,0x20b64aa1
  413274:	add    dl,al
  413276:	or     eax,0xb5d2de76
  41327b:	dec    edi
  41327c:	push   edi
  41327d:	and    DWORD PTR [ebx+0x1f89ab4f],0xffffffde
  413284:	sbb    BYTE PTR [eax-0x54],dl
  413287:	xor    DWORD PTR [eax],ebx
  413289:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41328a:	popf   
  41328b:	loop   0x413305
  41328d:	fs leave 
  41328f:	push   edx
  413290:	inc    ebp
  413291:	xchg   esi,eax
  413292:	push   es
  413293:	mov    DWORD PTR [eax],0x30191bda
  413299:	adc    BYTE PTR [ebx-0x45],cl
  41329c:	push   esp
  41329d:	and    DWORD PTR [ebp-0x42],edx
  4132a0:	idiv   DWORD PTR [ebp+0x67]
  4132a3:	adc    DWORD PTR [ecx-0x6e],ebp
  4132a6:	imul   esi,DWORD PTR [eax],0x50
  4132a9:	lods   al,BYTE PTR ds:[esi]
  4132aa:	sbb    edx,edi
  4132ac:	inc    ebp
  4132ad:	gs mov cl,0xab
  4132b0:	(bad)  
  4132b1:	jg     0x41327d
  4132b3:	mov    esi,0xa0c19e28
  4132b8:	and    ecx,esi
  4132ba:	mov    BYTE PTR [eax],ah
  4132bc:	jo     0x413270
  4132be:	fistp  DWORD PTR [edx+edi*4]
  4132c1:	mov    ds:0x8db6eefe,eax
  4132c6:	xor    DWORD PTR [edx-0x29297c71],esi
  4132cc:	push   cs
  4132cd:	je     0x413342
  4132cf:	jmp    0xa43a:0x74f4a9c7
  4132d6:	je     0x41331c
  4132d8:	mov    ebx,0x4af19d5d
  4132dd:	pop    ss
  4132de:	nop
  4132df:	push   esi
  4132e0:	mov    bl,0x23
  4132e2:	or     al,0x5b
  4132e4:	sbb    ah,BYTE PTR [eax]
  4132e6:	cmp    bl,dh
  4132e8:	div    DWORD PTR [ecx+0x37]
  4132eb:	dec    ecx
  4132ec:	ins    BYTE PTR es:[edi],dx
  4132ed:	test   eax,0x47856e37
  4132f2:	in     eax,dx
  4132f3:	mov    BYTE PTR [ecx-0x42],0xa2
  4132f7:	or     ebp,DWORD PTR [edi]
  4132f9:	push   ebp
  4132fa:	push   edx
  4132fb:	xlat   BYTE PTR ds:[ebx]
  4132fc:	enter  0xdfb8,0x59
  413300:	stc    
  413301:	(bad)  
  413302:	push   ecx
  413303:	add    al,0x1f
  413305:	repz and ch,BYTE PTR [ebx-0x13be2183]
  41330c:	test   BYTE PTR [eax+eiz*4+0x31],cl
  413310:	and    edx,DWORD PTR [ebp+0x3f1f4c24]
  413316:	pusha  
  413317:	sub    esp,DWORD PTR [edi+eiz*1-0x3294459e]
  41331e:	gs repnz out 0x21,al
  413322:	mov    ecx,0xb34acf2a
  413327:	mov    eax,ds:0xef550a9
  41332c:	inc    esp
  41332d:	mov    esi,DWORD PTR [ecx+0x7739195]
  413333:	pop    eax
  413334:	xchg   ebp,eax
  413335:	scas   al,BYTE PTR es:[edi]
  413336:	enter  0xe49,0x1
  41333a:	add    bh,BYTE PTR [ecx+edx*2]
  41333d:	int    0xa9
  41333f:	lods   eax,DWORD PTR ds:[esi]
  413340:	pop    edx
  413341:	push   eax
  413342:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413343:	lock cmp ebp,ecx
  413346:	repz xchg esi,eax
  413348:	xchg   ecx,eax
  413349:	jb     0x413306
  41334b:	jmp    0x8c8:0x3fdbd867
  413352:	rcl    BYTE PTR cs:[esi+0x45],0xbd
  413357:	sub    al,0xda
  413359:	js     0x413383
  41335b:	bound  edx,QWORD PTR [eax-0x14]
  41335e:	in     eax,dx
  41335f:	adc    al,0x40
  413361:	fdivr  st,st(0)
  413363:	outs   dx,BYTE PTR ds:[esi]
  413364:	lods   eax,DWORD PTR ds:[esi]
  413365:	adc    eax,0xa582d96a
  41336a:	mov    BYTE PTR [ebx-0x6cf638a8],dl
  413370:	aad    0x49
  413372:	and    al,ch
  413374:	mov    edi,?
  413376:	xor    ah,BYTE PTR [esi+0x0]
  413379:	mov    al,0x9d
  41337b:	jg     0x413394
  41337d:	je     0x4133df
  41337f:	inc    esi
  413380:	dec    ecx
  413381:	sub    ch,BYTE PTR [eax]
  413383:	cmp    eax,0x912a858
  413388:	adc    al,0x44
  41338a:	pop    ebx
  41338b:	cmp    DWORD PTR [ebx-0x2170e542],edi
  413391:	and    bl,ah
  413393:	call   0xcb5c:0xf8fac6b9
  41339a:	dec    ecx
  41339b:	lods   eax,DWORD PTR ds:[esi]
  41339c:	call   0xa7ef33c4
  4133a1:	ds out dx,eax
  4133a3:	aam    0x83
  4133a5:	je     0x413392
  4133a7:	jle    0x413362
  4133a9:	sti    
  4133aa:	cmp    eax,0x4a5245be
  4133af:	xchg   ecx,eax
  4133b0:	sub    DWORD PTR [eax-0x7e],0xffffffc7
  4133b4:	add    eax,0x217d41ae
  4133b9:	aad    0xb7
  4133bb:	sbb    ebp,DWORD PTR [edx-0x6b]
  4133be:	not    dh
  4133c0:	js     0x413354
  4133c2:	xor    eax,edx
  4133c4:	xor    BYTE PTR [ebx-0x2b1d11c0],0x75
  4133cb:	in     eax,0x86
  4133cd:	xor    edx,ecx
  4133cf:	or     eax,0xa0026641
  4133d4:	test   al,0x12
  4133d6:	and    bl,al
  4133d8:	and    eax,0x66329269
  4133dd:	fld    DWORD PTR [eax]
  4133df:	adc    BYTE PTR [ebx],dl
  4133e1:	dec    edi
  4133e2:	es pop esp
  4133e4:	outs   dx,DWORD PTR ds:[esi]
  4133e5:	inc    edx
  4133e6:	es std 
  4133e8:	or     eax,0xa001127d
  4133ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133ee:	mov    DWORD PTR [ecx-0x51],esi
  4133f1:	mov    bl,0x3d
  4133f3:	xchg   esi,eax
  4133f4:	pusha  
  4133f5:	out    dx,eax
  4133f6:	or     al,0xc7
  4133f8:	mov    dl,0xad
  4133fa:	ins    BYTE PTR es:[edi],dx
  4133fb:	dec    ebp
  4133fc:	push   ecx
  4133fd:	push   esp
  4133fe:	add    al,0x22
  413400:	jl     0x413444
  413402:	push   0x47
  413404:	in     eax,0x5f
  413406:	jmp    0xa0f76a97
  41340b:	mov    esi,0x8db83cdb
  413410:	mov    ch,0x72
  413412:	ins    DWORD PTR es:[edi],dx
  413413:	add    DWORD PTR [ebp+0x647c68a8],edx
  413419:	sahf   
  41341a:	imul   ebp,DWORD PTR [ebx-0x4e],0x52
  41341e:	xor    DWORD PTR [ebx-0x30],esi
  413421:	ja     0x413409
  413423:	es out 0xca,al
  413426:	pop    es
  413427:	pop    edi
  413428:	sti    
  413429:	lock cs xchg esp,eax
  41342c:	call   0xc6f316ee
  413431:	add    al,0x2b
  413433:	shr    DWORD PTR [edx+0x44facd4f],cl
  413439:	test   eax,0xd322b0d9
  41343e:	mov    ebp,0xbfe384f1
  413443:	mov    WORD PTR [edx-0x5],?
  413446:	add    BYTE PTR [ebx],al
  413448:	aam    0x3
  41344a:	int3   
  41344b:	mov    ebx,0xb9ccfbef
  413450:	mov    al,ds:0xed832390
  413455:	inc    esp
  413456:	repz lahf 
  413458:	dec    ebp
  413459:	dec    edx
  41345a:	cwde   
  41345b:	inc    ebx
  41345c:	xchg   esp,eax
  41345d:	mov    fs,WORD PTR [eax]
  41345f:	imul   edx,DWORD PTR ds:0xfba66470,0x2b3537a2
  413469:	js     0x41341b
  41346b:	cwde   
  41346c:	fnstsw WORD PTR [edi+0x2b28eeb5]
  413472:	call   0x3b7e3394
  413477:	adc    BYTE PTR [ecx+esi*1+0x318d7300],al
  41347e:	test   al,0x56
  413480:	xor    edi,DWORD PTR [eax+0x7216f45d]
  413486:	jecxz  0x413443
  413488:	stos   BYTE PTR es:[edi],al
  413489:	dec    eax
  41348a:	cld    
  41348b:	retf   
  41348c:	jl     0x4134e4
  41348e:	sti    
  41348f:	aam    0x4a
  413491:	(bad)  
  413492:	jge    0x413500
  413494:	scas   eax,DWORD PTR es:[edi]
  413495:	cmp    DWORD PTR [eax+0x48081d6d],ebp
  41349b:	rcl    DWORD PTR [edx+0x5c],cl
  41349e:	mov    bl,0x57
  4134a0:	fdiv   DWORD PTR [edx]
  4134a2:	sbb    al,0x72
  4134a4:	and    esp,ecx
  4134a6:	xchg   ebp,eax
  4134a7:	and    eax,0xab329867
  4134ac:	cmp    bh,cl
  4134ae:	push   es
  4134af:	test   al,0x5c
  4134b1:	das    
  4134b2:	imul   esi,DWORD PTR [edx],0xffffff9c
  4134b5:	mov    ecx,?
  4134b7:	gs cwde 
  4134b9:	lods   al,BYTE PTR ds:[esi]
  4134ba:	mov    eax,0xf620ef96
  4134bf:	pusha  
  4134c0:	je     0x413474
  4134c2:	pop    esp
  4134c3:	xchg   cl,al
  4134c5:	imul   DWORD PTR [ecx+edi*4+0x70]
  4134c9:	mov    cl,0x1d
  4134cb:	mov    eax,0x680d753c
  4134d0:	xor    eax,0xcb88b53a
  4134d5:	shl    bh,1
  4134d7:	aam    0xbd
  4134d9:	jmp    0x413460
  4134db:	xor    BYTE PTR [edi],0x98
  4134de:	cld    
  4134df:	mov    eax,0x4c6c4163
  4134e4:	sahf   
  4134e5:	fild   DWORD PTR [edi+0x16]
  4134e8:	pop    esi
  4134e9:	lock scas al,BYTE PTR es:[edi]
  4134eb:	mov    al,ds:0xfadfb10e
  4134f0:	or     DWORD PTR [edi+0x67debf55],eax
  4134f6:	(bad)  
  4134f7:	jne    0x4134da
  4134f9:	ins    BYTE PTR es:[edi],dx
  4134fa:	or     eax,0x3fddda76
  4134ff:	sbb    ch,0x42
  413502:	enter  0x5959,0x20
  413506:	imul   ebx,DWORD PTR [eax-0x77],0xa5928426
  41350d:	xor    BYTE PTR [ebx+0x4f],bh
  413510:	popa   
  413511:	xchg   edx,eax
  413512:	(bad)
  413516:	jecxz  0x41356a
  413518:	mov    ch,0xee
  41351a:	fmul   DWORD PTR [esi]
  41351c:	push   eax
  41351d:	popa   
  41351e:	add    eax,0xad97b60b
  413523:	sub    eax,DWORD PTR [ebx]
  413525:	aad    0xca
  413527:	ret    0x95dc
  41352a:	jl     0x4134ff
  41352c:	mov    eax,0xbf54ab32
  413531:	mov    ds:0xdee55b95,al
  413536:	adc    DWORD PTR [esi],edi
  413538:	sub    esp,DWORD PTR [ebx+0x41b3d2fb]
  41353e:	jg     0x41358b
  413540:	(bad)  [ebp+0x53]
  413543:	ja     0x4135c2
  413545:	pop    esp
  413546:	gs pop ebp
  413548:	mov    dh,0xaf
  41354a:	cmp    al,0xb5
  41354c:	ficomp DWORD PTR [edi+0x25]
  41354f:	or     al,0xf8
  413551:	jae    0x4134e2
  413553:	(bad)  
  413554:	pop    ecx
  413555:	jg     0x4135a9
  413557:	iret   
  413558:	jns    0x413534
  41355a:	xchg   BYTE PTR [esi+0x79],ah
  41355d:	sbb    DWORD PTR [esi],edx
  41355f:	and    al,0xe2
  413561:	ins    BYTE PTR es:[edi],dx
  413562:	xchg   ecx,eax
  413563:	dec    ecx
  413564:	push   0xa1c0a917
  413569:	popf   
  41356a:	shr    DWORD PTR [ebx-0x28b1bd3d],cl
  413570:	cld    
  413571:	lahf   
  413572:	(bad)  [ebx+0x42]
  413575:	add    cl,BYTE PTR [ebx+0x62095289]
  41357b:	push   ds
  41357c:	push   ds
  41357d:	sti    
  41357e:	bound  ecx,QWORD PTR [edx+0x5426e1ba]
  413584:	mov    edx,DWORD PTR [edi]
  413586:	sub    eax,0x6022f313
  41358b:	and    al,0x68
  41358d:	pop    edx
  41358e:	aad    0xaa
  413590:	hlt    
  413591:	jns    0x4135d2
  413593:	fs cs cmp edx,eax
  413597:	push   ebp
  413598:	jg     0x413567
  41359a:	cmp    eax,0x29
  41359d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41359e:	dec    esi
  41359f:	jmp    0x4b529ac9
  4135a4:	sbb    al,0xd4
  4135a6:	int3   
  4135a7:	push   0xf3b55146
  4135ac:	jns    0x4135ec
  4135ae:	mov    bl,0x26
  4135b0:	pusha  
  4135b1:	in     eax,dx
  4135b2:	xor    esi,esp
  4135b4:	leave  
  4135b5:	les    ecx,FWORD PTR [eax+0x14]
  4135b8:	adc    DWORD PTR [esi-0x50],ebp
  4135bb:	retf   
  4135bc:	dec    ebp
  4135bd:	cmp    eax,0x8aa0ea0f
  4135c2:	cmp    eax,0x2bb42318
  4135c7:	fwait
  4135c8:	ret    
  4135c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135ca:	icebp  
  4135cb:	pop    edi
  4135cc:	test   BYTE PTR [ecx-0x72],bl
  4135cf:	jecxz  0x413573
  4135d1:	xor    al,0x2
  4135d3:	jae    0x41359d
  4135d5:	pop    esp
  4135d6:	cwde   
  4135d7:	gs stos DWORD PTR es:[edi],eax
  4135d9:	cld    
  4135da:	sti    
  4135db:	push   edx
  4135dc:	xor    DWORD PTR [ebx+0xfbd53ba],0xbe7deff6
  4135e6:	ins    BYTE PTR es:[edi],dx
  4135e7:	leave  
  4135e8:	xchg   ebp,eax
  4135e9:	ins    DWORD PTR es:[edi],dx
  4135ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135eb:	clc    
  4135ec:	cdq    
  4135ed:	vmovss xmm6,xmm2,xmm2
  4135f1:	and    cl,BYTE PTR [ebx-0x38]
  4135f4:	ret    
  4135f5:	push   ebp
  4135f6:	(bad)  
  4135f7:	in     eax,dx
  4135f8:	push   esp
  4135f9:	cmp    al,0x2c
  4135fb:	mov    esp,0xaa9eff73
  413600:	push   bx
  413602:	pop    ebx
  413603:	push   eax
  413604:	aas    
  413605:	lods   al,BYTE PTR ds:[esi]
  413606:	iret   
  413607:	mov    al,0x99
  413609:	dec    edx
  41360a:	scas   eax,DWORD PTR es:[edi]
  41360b:	and    eax,0x5f7123a6
  413610:	jae    0x41359a
  413612:	(bad)  
  413613:	cmc    
  413614:	icebp  
  413615:	retf   0xd87
  413618:	daa    
  413619:	pop    ecx
  41361a:	int    0x24
  41361c:	mov    esi,ecx
  41361e:	sbb    BYTE PTR [ebx-0x4b],0xe0
  413622:	loope  0x413664
  413624:	xchg   ebx,eax
  413625:	dec    ebx
  413626:	mov    al,ds:0x62a464fc
  41362b:	mov    ds:0x9acd645b,eax
  413630:	jmp    0xc15b:0x9e1becf8
  413637:	das    
  413638:	ror    DWORD PTR es:[edi+0x50],1
  41363c:	dec    ecx
  41363d:	lds    ecx,FWORD PTR [ebx]
  41363f:	jns    0x4135f6
  413641:	push   esi
  413642:	mov    al,ds:0xc9ccfb62
  413647:	lods   eax,DWORD PTR ds:[esi]
  413648:	sub    BYTE PTR [esi+0x45],al
  41364b:	ret    0xf6f7
  41364e:	data16 mov dl,0x78
  413651:	cli    
  413652:	pop    edx
  413653:	mov    ch,BYTE PTR [ecx]
  413655:	imul   eax,DWORD PTR [ecx+0x5b],0x2c
  413659:	fsub   DWORD PTR [edx-0x76fe5c94]
  41365f:	mov    bl,0x9a
  413661:	ret    
  413662:	imul   esp,DWORD PTR [edi],0x63dfd29a
  413668:	leave  
  413669:	or     BYTE PTR [eax+0x6560e06a],al
  41366f:	sub    BYTE PTR ds:0xdd8715e9,dh
  413675:	inc    edx
  413676:	lds    edx,FWORD PTR [edi+ebp*2]
  413679:	cmp    BYTE PTR [ecx],dl
  41367b:	push   es
  41367c:	cld    
  41367d:	mov    ebp,DWORD PTR [esi-0x758b4de5]
  413683:	fistp  WORD PTR [ecx-0x2d]
  413686:	xor    BYTE PTR [edx+0x22748de3],al
  41368c:	js     0x41362d
  41368e:	mov    esi,DWORD PTR [ecx]
  413690:	push   esp
  413691:	data16 int 0xf5
  413694:	adc    al,BYTE PTR [eax+0xf]
  413697:	adc    DWORD PTR [eax-0x5a9e2977],0x804c5c71
  4136a1:	add    ebp,ecx
  4136a3:	mov    ebp,0xe18ff57f
  4136a8:	pusha  
  4136a9:	fwait
  4136aa:	jne    0x413683
  4136ac:	add    al,0xa7
  4136ae:	inc    ebx
  4136af:	scas   al,BYTE PTR es:[edi]
  4136b0:	mov    WORD PTR [ebx],gs
  4136b2:	fdiv   DWORD PTR [ebp-0x28]
  4136b5:	mov    al,ds:0x382b50d9
  4136ba:	push   esp
  4136bb:	adc    bl,BYTE PTR [esi]
  4136bd:	jecxz  0x413677
  4136bf:	in     eax,0xf6
  4136c1:	(bad)  
  4136c2:	out    0x15,al
  4136c4:	push   ecx
  4136c5:	sub    eax,0xf4a5158d
  4136ca:	(bad)  
  4136cc:	(bad)  
  4136cd:	push   edx
  4136ce:	cmp    al,0xad
  4136d0:	push   esi
  4136d1:	call   0x8fd0:0xef26a41b
  4136d8:	iret   
  4136d9:	(bad)  [ecx+ebp*4-0x5fee482c]
  4136e0:	frstor [ecx-0x75]
  4136e3:	xor    BYTE PTR [ecx],cl
  4136e5:	mov    esi,0xed2f424c
  4136ea:	sar    BYTE PTR [ebp+0x3275f264],cl
  4136f0:	les    eax,FWORD PTR [edx+ecx*8]
  4136f3:	xor    BYTE PTR [ecx-0x67],0x7f
  4136f7:	int    0x7d
  4136f9:	or     edi,0xffffffaf
  4136fc:	je     0x413747
  4136fe:	out    0x78,eax
  413700:	hlt    
  413701:	stos   DWORD PTR es:[edi],eax
  413702:	ror    DWORD PTR es:[eax+0x79563260],1
  413709:	jge    0x41373f
  41370b:	mov    edx,0xd3138349
  413710:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413711:	(bad)  
  413712:	ds loope 0x41369b
  413715:	or     dl,al
  413717:	test   DWORD PTR [ebp-0x1d13d050],ecx
  41371d:	or     DWORD PTR [ecx],ebx
  41371f:	cmp    ah,dl
  413721:	pop    ecx
  413722:	mov    cl,0xce
  413724:	mov    ss,WORD PTR [esp+esi*1+0x74]
  413728:	and    DWORD PTR [eax-0x40],esp
  41372b:	sub    cl,cl
  41372d:	test   DWORD PTR [esi+0x15],ebp
  413730:	add    BYTE PTR [ecx+0x34],cl
  413733:	lods   al,BYTE PTR ds:[esi]
  413734:	cmp    eax,0xe128f2c1
  413739:	repz inc edx
  41373b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41373c:	add    edi,DWORD PTR [edi]
  41373e:	and    DWORD PTR [esi+0x214b7acd],ebx
  413744:	xor    dh,BYTE PTR [ebx+0x79]
  413747:	sti    
  413748:	add    dh,BYTE PTR [edx+0x3e2d232e]
  41374e:	pop    ds
  41374f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413750:	mov    edx,0x27e426ef
  413755:	xchg   ebx,eax
  413756:	ror    DWORD PTR [eax+0x42ad3d0c],1
  41375c:	leave  
  41375d:	test   DWORD PTR [ecx],0x929270e8
  413763:	shr    BYTE PTR [ebp-0x7c],0x8f
  413767:	in     eax,0x2
  413769:	mov    ah,BYTE PTR [eax]
  41376b:	stos   BYTE PTR es:[edi],al
  41376c:	jbe    0x4137da
  41376e:	stos   DWORD PTR es:[edi],eax
  41376f:	xor    DWORD PTR ss:[eax-0x47f936aa],edi
  413776:	faddp  st(0),st
  413778:	(bad)  [ebp+0x25]
  41377b:	pop    es
  41377c:	push   es
  41377d:	ficomp WORD PTR [edx+eiz*1-0x51]
  413781:	outs   dx,BYTE PTR ds:[esi]
  413782:	cmp    eax,DWORD PTR [eax+0x18]
  413785:	imul   ebx,DWORD PTR [edi-0x226a74d3],0x0
  41378c:	mov    eax,0x25d3c796
  413791:	imul   esi,DWORD PTR [edi+0x57],0xd5b1a47a
  413798:	pop    ebp
  413799:	pop    es
  41379a:	jl     0x41372c
  41379c:	sbb    ebx,esp
  41379e:	dec    esp
  41379f:	pusha  
  4137a0:	(bad)  
  4137a1:	int3   
  4137a2:	sahf   
  4137a3:	and    DWORD PTR [eax+0xf],esi
  4137a6:	xor    esi,ebx
  4137a8:	mov    eax,0x4074eea9
  4137ad:	test   eax,0x6f18e9c7
  4137b2:	push   eax
  4137b3:	retf   
  4137b4:	cmp    edi,DWORD PTR [eax]
  4137b6:	dec    BYTE PTR [eax+0x44d865f]
  4137bc:	ret    
  4137bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137be:	ret    
  4137bf:	test   eax,0xcb2a9279
  4137c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137c5:	pop    es
  4137c6:	(bad)  [edi]
  4137c8:	jno    0x413781
  4137ca:	or     DWORD PTR [eax+0x2a],edi
  4137cd:	and    cl,cl
  4137cf:	in     al,dx
  4137d0:	mov    ebp,eax
  4137d2:	loop   0x413833
  4137d4:	lods   eax,DWORD PTR ds:[esi]
  4137d5:	fistp  QWORD PTR [ebx+0x39]
  4137d8:	in     eax,0x5a
  4137da:	sbb    bh,BYTE PTR [ebx]
  4137dc:	in     eax,dx
  4137dd:	inc    esp
  4137de:	addr16 xchg edi,eax
  4137e0:	inc    ecx
  4137e1:	adc    al,0xc8
  4137e3:	push   eax
  4137e4:	adc    eax,0x1af1cec4
  4137e9:	scas   ax,WORD PTR es:[edi]
  4137eb:	bound  ebp,QWORD PTR [edi+0x3f9880a3]
  4137f1:	add    eax,0xe8b49882
  4137f6:	(bad)  
  4137f7:	xor    al,BYTE PTR [eax]
  4137f9:	jae    0x413832
  4137fb:	stos   DWORD PTR es:[edi],eax
  4137fc:	or     BYTE PTR [ebp-0x40],ch
  4137ff:	xchg   DWORD PTR [edi],edi
  413801:	sub    eax,0x568c0990
  413806:	sub    eax,edx
  413808:	call   0xc5dc0894
  41380d:	dec    esi
  41380e:	aas    
  41380f:	add    eax,0x44310c3b
  413814:	stos   DWORD PTR es:[edi],eax
  413815:	int    0xdc
  413817:	push   esi
  413818:	mov    eax,ds:0x54f8674c
  41381d:	sbb    ebx,DWORD PTR [ecx+0x6]
  413820:	mov    ch,0xa4
  413822:	push   edx
  413823:	cmp    BYTE PTR [ebx-0x417640a0],cl
  413829:	sub    al,0xc
  41382b:	mov    al,0xb0
  41382d:	jb     0x4137bd
  41382f:	ficomp DWORD PTR [eax+0x69]
  413832:	iret   
  413833:	scas   eax,DWORD PTR es:[edi]
  413834:	jo     0x41382c
  413836:	outs   dx,DWORD PTR ds:[esi]
  413837:	out    0xa9,eax
  413839:	mov    ?,WORD PTR [ecx-0x38d7bf1e]
  41383f:	mov    bl,0x6e
  413841:	call   0x1fc32aaf
  413846:	jbe    0x413860
  413848:	or     BYTE PTR [ecx+eax*4],bl
  41384b:	fisubr WORD PTR fs:[edx+0x31]
  41384f:	(bad)  
  413851:	sub    DWORD PTR [esi+0x56d35e6a],ecx
  413857:	(bad)  
  413858:	jmp    0xa922251a
  41385d:	mov    edi,ebx
  41385f:	es (bad) 
  413861:	add    al,0x65
  413863:	out    0x7c,al
  413865:	jno    0x4138a6
  413867:	xchg   edx,eax
  413868:	fs inc esi
  41386a:	retf   
  41386b:	enter  0x1ddf,0x2c
  41386f:	inc    ecx
  413870:	js     0x4138d1
  413872:	dec    ecx
  413873:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413874:	gs js  0x4138a2
  413877:	sbb    eax,0xba30b9c6
  41387c:	(bad)  
  41387d:	call   0x2778054b
  413882:	(bad)  
  413883:	clc    
  413884:	(bad)  
  413885:	xchg   ecx,eax
  413886:	imul   ebp,DWORD PTR [edi-0x13f9160b],0x4641cfab
  413890:	pop    edx
  413891:	jmp    0xfa109dab
  413896:	out    0x1c,al
  413898:	pop    edi
  413899:	inc    ecx
  41389a:	jns    0x413842
  41389c:	mov    ebx,0x8ac1d027
  4138a1:	test   BYTE PTR [esi],bh
  4138a3:	or     BYTE PTR [eax+0x61ec43a8],ah
  4138a9:	int3   
  4138aa:	repz inc ebp
  4138ac:	dec    ebp
  4138ad:	outs   dx,DWORD PTR ds:[esi]
  4138ae:	mov    ebx,0x5c466b9d
  4138b3:	pop    ecx
  4138b4:	inc    edx
  4138b5:	xchg   ebx,ebp
  4138b7:	inc    ecx
  4138b8:	fisubr WORD PTR [esi]
  4138ba:	push   0xcaf7d545
  4138bf:	fisubr WORD PTR [ecx+0x7642645d]
  4138c5:	xor    ebp,DWORD PTR [eax+0x39]
  4138c8:	popf   
  4138c9:	cmc    
  4138ca:	daa    
  4138cb:	imul   eax,DWORD PTR [eax],0x36
  4138ce:	int    0x55
  4138d0:	sub    edi,DWORD PTR [ecx+0x124dfb91]
  4138d6:	shl    BYTE PTR [ebx-0x29dbe1ce],0x61
  4138dd:	sbb    edi,0xffffffdc
  4138e0:	(bad)  
  4138e2:	push   ss
  4138e3:	pushf  
  4138e4:	or     al,0xcf
  4138e6:	xchg   esp,eax
  4138e7:	dec    ecx
  4138e8:	sbb    ecx,eax
  4138ea:	(bad)  
  4138eb:	cli    
  4138ec:	fst    DWORD PTR [ebx+edi*1-0x316b37cc]
  4138f3:	mov    al,ds:0xa51d8b0c
  4138f8:	retf   0xb4be
  4138fb:	shr    DWORD PTR [eax+0x3466506e],0x2d
  413902:	push   es
  413903:	adc    BYTE PTR [edx],bl
  413905:	lods   al,BYTE PTR ds:[esi]
  413906:	fidivr WORD PTR ds:0x5717150a
  41390c:	call   0x45ff:0xa814caa
  413913:	scas   al,BYTE PTR es:[edi]
  413914:	cmp    al,0x79
  413916:	sbb    bh,BYTE PTR [ebx-0x7c]
  413919:	gs retf 0xfaf0
  41391d:	dec    ecx
  41391e:	fsubrp st(0),st
  413920:	(bad)  
  413921:	cmp    bl,bh
  413923:	jecxz  0x41399f
  413925:	pop    ecx
  413926:	repnz dec ecx
  413928:	push   esp
  413929:	gs (bad) 
  41392b:	in     eax,0x45
  41392d:	(bad)  
  41392e:	lgs    edx,FWORD PTR [ebx]
  413931:	add    al,BYTE PTR [eax+0x2905d137]
  413937:	adc    DWORD PTR [edi-0x65872834],esp
  41393d:	sbb    eax,0xc27a9141
  413942:	sub    BYTE PTR [ecx-0x44817892],ch
  413948:	mov    bl,0xf1
  41394a:	(bad)  
  41394b:	int    0x7c
  41394d:	mov    ecx,edx
  41394f:	ds popa 
  413951:	call   0x2f72:0x7ff5e895
  413958:	gs mov dx,0x8c80
  41395d:	rcr    DWORD PTR [edx+0x52d00948],0xe6
  413964:	xchg   edx,eax
  413965:	div    DWORD PTR [ecx+0x3f68392c]
  41396b:	leave  
  41396c:	sub    cx,WORD PTR [edx-0x1]
  413970:	in     al,dx
  413971:	imul   eax,DWORD PTR [si-0x5b],0xffffffa1
  413976:	sub    DWORD PTR [eax-0x37],esp
  413979:	fwait
  41397a:	xchg   esi,eax
  41397b:	mov    fs,WORD PTR [edi+0x11]
  41397e:	xor    ebx,DWORD PTR [edi+0x22183e3b]
  413984:	cs fsubr st(0),st
  413987:	je     0x4139bd
  413989:	inc    eax
  41398a:	stos   BYTE PTR es:[edi],al
  41398b:	or     DWORD PTR [edi-0x29],0xa94d3867
  413992:	mov    bh,0x1f
  413994:	sbb    eax,DWORD PTR ds:0x9f279279
  41399a:	stos   DWORD PTR es:[edi],eax
  41399b:	cli    
  41399c:	adc    DWORD PTR [edi+0x54],esp
  41399f:	mov    ss,WORD PTR [edx-0x43]
  4139a2:	adc    DWORD PTR [ecx+0x55c5c17a],edi
  4139a8:	sahf   
  4139a9:	ja     0x4139d7
  4139ab:	xchg   ebx,eax
  4139ac:	lock push edx
  4139ae:	jb     0x41396c
  4139b0:	and    BYTE PTR ds:0xfb2ef466,dl
  4139b6:	pop    ecx
  4139b7:	push   esp
  4139b8:	add    ecx,DWORD PTR [esi+0x6d]
  4139bb:	shl    ebp,0x72
  4139be:	cld    
  4139bf:	cwde   
  4139c0:	fisttp DWORD PTR [edx-0x33fe53]
  4139c6:	cdq    
  4139c7:	sbb    BYTE PTR [eax-0x61711aa8],cl
  4139cd:	xlat   BYTE PTR ds:[ebx]
  4139ce:	and    cl,bh
  4139d0:	lods   al,BYTE PTR ds:[esi]
  4139d1:	mov    ebp,0x2637e50f
  4139d6:	int    0x80
  4139d8:	jns    0x413a4f
  4139da:	icebp  
  4139db:	mov    ebp,0xab309960
  4139e0:	add    BYTE PTR [edi+0x61a59e04],bl
  4139e6:	or     al,0x82
  4139e8:	jo     0x41398d
  4139ea:	dec    ebp
  4139eb:	xchg   ecx,eax
  4139ec:	fwait
  4139ed:	bound  eax,QWORD PTR [edx]
  4139ef:	adc    eax,0x44718e0d
  4139f4:	cmp    eax,0x850315fa
  4139f9:	arpl   WORD PTR [ebx+0x6efb904f],di
  4139ff:	lds    esp,FWORD PTR [edi-0x5ce633e]
  413a05:	(bad)  
  413a06:	(bad)  
  413a07:	mov    ch,0xe2
  413a09:	dec    esi
  413a0a:	rol    DWORD PTR [edi-0x60],1
  413a0d:	ret    
  413a0e:	sbb    al,0x16
  413a10:	or     eax,0x40a71735
  413a15:	mov    ebx,0xf33178d1
  413a1a:	cld    
  413a1b:	adc    BYTE PTR [ecx+ecx*8+0x6b],cl
  413a1f:	sti    
  413a20:	cmp    edx,DWORD PTR [edx+0x23]
  413a23:	jb     0x413a61
  413a25:	int3   
  413a26:	sahf   
  413a27:	mov    DWORD PTR [edx-0x2d2ec893],0xdaa31205
  413a31:	rol    DWORD PTR [ebx+ebx*1-0x63999af7],0x85
  413a39:	sar    BYTE PTR [ecx],1
  413a3b:	and    bh,BYTE PTR [ecx+ebx*1+0x23]
  413a3f:	push   eax
  413a40:	or     ch,al
  413a42:	sbb    eax,0xf5a66c2b
  413a47:	xchg   edi,eax
  413a48:	addr16 ret 
  413a4a:	adc    edx,DWORD PTR [ecx-0x591ef0d2]
  413a50:	mov    ah,0xe6
  413a52:	out    0x4d,eax
  413a54:	test   eax,0x7ec6a196
  413a59:	(bad)  
  413a5a:	xlat   BYTE PTR ds:[ebx]
  413a5b:	xor    edx,DWORD PTR [esp+eiz*4+0x315a4da0]
  413a62:	inc    ecx
  413a63:	push   ebx
  413a64:	in     al,dx
  413a65:	jns    0x413a51
  413a67:	rcl    BYTE PTR [esi],0xb8
  413a6a:	inc    esp
  413a6b:	mov    bh,0xf6
  413a6d:	retf   
  413a6e:	lock arpl di,bp
  413a71:	push   ebp
  413a72:	leave  
  413a73:	ret    
  413a74:	rol    DWORD PTR [ecx+0x69],cl
  413a77:	test   eax,0x9b49de91
  413a7c:	cmp    eax,0x2e98946d
  413a81:	scas   al,BYTE PTR es:[edi]
  413a82:	sbb    ah,BYTE PTR [edi-0x6]
  413a85:	add    BYTE PTR [eax],ah
  413a87:	mov    WORD PTR [ebp-0x38af8ca3],cs
  413a8d:	shl    DWORD PTR [esp+edx*4+0x6a],0x81
  413a92:	stos   DWORD PTR es:[edi],eax
  413a93:	jo     0x413a93
  413a95:	xchg   esi,eax
  413a96:	cmp    ch,bh
  413a98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a99:	int    0x37
  413a9b:	mov    BYTE PTR [ebp+edi*1+0x161cf2ce],al
  413aa2:	mov    eax,ds:0xafdbb572
  413aa7:	dec    edi
  413aa8:	cmp    eax,0xfe891e42
  413aad:	dec    esi
  413aae:	xchg   ebx,eax
  413aaf:	adc    BYTE PTR [ecx-0x1646beca],dh
  413ab5:	or     eax,0x4f2168c7
  413aba:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  413abc:	mov    dh,0x62
  413abe:	pop    edx
  413abf:	dec    eax
  413ac0:	pop    edx
  413ac1:	pop    ss
  413ac2:	fisub  DWORD PTR [ecx-0x10]
  413ac5:	ja     0x413b14
  413ac7:	scas   eax,DWORD PTR es:[edi]
  413ac8:	adc    ch,BYTE PTR [eax+0x4888e34]
  413ace:	repz addr16 aad 0xe8
  413ad2:	loopne 0x413a6c
  413ad4:	push   ebp
  413ad5:	mov    edx,DWORD PTR [ebp-0x59]
  413ad8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ad9:	cld    
  413ada:	stc    
  413adb:	xchg   esp,eax
  413adc:	cmp    cl,bh
  413ade:	mov    al,0xfb
  413ae0:	mov    WORD PTR [ebx],?
  413ae2:	in     al,0x6b
  413ae4:	lods   al,BYTE PTR ds:[esi]
  413ae5:	sbb    BYTE PTR [ebp*1-0x6a599892],dl
  413aec:	in     eax,dx
  413aed:	sbb    ecx,DWORD PTR [ebp-0x61]
  413af0:	mov    ah,0x9c
  413af2:	mov    bl,0x29
  413af4:	pushf  
  413af5:	cs xor eax,0x61a246e4
  413afb:	in     al,dx
  413afc:	jmp    0xefc7fac0
  413b01:	xchg   ecx,eax
  413b02:	xchg   BYTE PTR [edx+0x2551137f],bl
  413b08:	pop    ebp
  413b09:	xchg   edi,eax
  413b0a:	mov    edi,0xe41c7c60
  413b0f:	lock fbstp TBYTE PTR [eax+0x1eeeb9ca]
  413b16:	or     DWORD PTR [edx+0x3a],esp
  413b19:	imul   eax,DWORD PTR [ebp+0x76d38743],0xffffffef
  413b20:	mov    ds:0x8084b3a1,al
  413b25:	fild   DWORD PTR [ebp-0x5a2a44de]
  413b2b:	enter  0x12ea,0x34
  413b2f:	jmp    0x713a:0x590fa02f
  413b36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b37:	or     ch,BYTE PTR [esi-0x27]
  413b3a:	icebp  
  413b3b:	nop
  413b3c:	or     dl,BYTE PTR [eax+0x3b]
  413b3f:	shl    bl,cl
  413b41:	rol    DWORD PTR [ebp+ecx*2+0x1a],0x3f
  413b46:	fbld   TBYTE PTR [edx-0x7aa087b5]
  413b4c:	ffree  st(5)
  413b4e:	int    0x44
  413b50:	mov    edx,0x68f7df5a
  413b55:	xor    eax,DWORD PTR [ebp+0x7b]
  413b58:	push   ebp
  413b59:	mov    ah,0x5
  413b5b:	pop    edx
  413b5c:	fidiv  DWORD PTR [edi-0x4d1b8c66]
  413b62:	dec    edx
  413b63:	cmp    dh,BYTE PTR [esi]
  413b65:	out    dx,eax
  413b66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b67:	loope  0x413bbe
  413b69:	xchg   ecx,eax
  413b6a:	jae    0x413b69
  413b6c:	out    0x8b,eax
  413b6e:	ds adc eax,0xdc0f9ca4
  413b74:	hlt    
  413b75:	mov    al,ds:0x5cb2d3e5
  413b7a:	in     eax,0x5b
  413b7c:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  413b7e:	ss loop 0x413b47
  413b81:	movlps xmm0,QWORD PTR [esi]
  413b84:	iret   
  413b85:	out    0x21,eax
  413b87:	push   ss
  413b88:	jp     0x413b56
  413b8a:	test   al,0xd3
  413b8c:	xor    DWORD PTR [ecx-0x2],ebp
  413b8f:	inc    ebp
  413b90:	xchg   edx,eax
  413b91:	adc    BYTE PTR [ebx+0xcbf8851],bh
  413b97:	push   esi
  413b98:	jb     0x413ba9
  413b9a:	ds or  edx,edi
  413b9d:	leave  
  413b9e:	int    0xf
  413ba0:	push   ds
  413ba1:	mov    edx,DWORD PTR [eax+0x54]
  413ba4:	sbb    al,0x62
  413ba6:	inc    esi
  413ba7:	or     al,0x2
  413ba9:	sub    ch,0x3f
  413bac:	js     0x413bd6
  413bae:	pop    ds
  413baf:	icebp  
  413bb0:	push   cs
  413bb1:	xor    al,cl
  413bb3:	cdq    
  413bb4:	into   
  413bb5:	cwde   
  413bb6:	and    eax,0x88082ae6
  413bbb:	imul   edx,DWORD PTR [ebp+0x15],0x2d
  413bbf:	dec    esp
  413bc0:	xchg   edx,eax
  413bc1:	mov    eax,DWORD PTR [ebp-0x36]
  413bc4:	fild   DWORD PTR [edi-0x12c81e82]
  413bca:	ficomp WORD PTR [edx]
  413bcc:	(bad)  
  413bcd:	fiadd  DWORD PTR [ecx+0x52496f8d]
  413bd3:	sub    DWORD PTR [esi+0x41],ebx
  413bd6:	dec    ecx
  413bd7:	xchg   DWORD PTR [edx+0x34],edx
  413bda:	mov    ds:0xff2c30d8,al
  413bdf:	push   esi
  413be0:	jge    0x413b93
  413be2:	pushf  
  413be3:	es push 0x79
  413be6:	pop    es
  413be7:	popf   
  413be8:	xor    eax,0xdc1ae3c7
  413bed:	push   ebp
  413bee:	push   eax
  413bef:	pop    edi
  413bf0:	xor    DWORD PTR [ebx+0x39],edi
  413bf3:	bswap  ecx
  413bf5:	mov    ecx,0x7ac8848
  413bfa:	fmul   QWORD PTR [esi]
  413bfc:	cmp    dh,cl
  413bfe:	je     0x413bdb
  413c00:	xor    DWORD PTR [ecx+0x1385626f],esi
  413c06:	lds    esi,FWORD PTR [edi]
  413c08:	jge    0x413ba6
  413c0a:	in     al,0xa3
  413c0c:	retf   0x6170
  413c0f:	out    dx,al
  413c10:	jl     0x413c1e
  413c12:	fbld   TBYTE PTR [esi+0x25]
  413c15:	gs std 
  413c17:	cmp    bl,BYTE PTR [ecx-0x41d9dd34]
  413c1d:	xor    eax,0xc28e8291
  413c22:	xchg   DWORD PTR [esi],esp
  413c24:	pop    edi
  413c25:	cmc    
  413c26:	mov    ebp,0x7f14c090
  413c2b:	scas   eax,DWORD PTR es:[edi]
  413c2c:	push   edx
  413c2d:	aaa    
  413c2e:	popa   
  413c2f:	mov    esi,0xbd7c7ad1
  413c34:	into   
  413c35:	sbb    eax,0x7884f300
  413c3a:	fdivr  st(4),st
  413c3c:	jg     0x413c04
  413c3e:	shr    eax,0x30
  413c41:	ja     0x413bf8
  413c43:	or     esi,esp
  413c45:	mov    edi,0x32260745
  413c4a:	push   ecx
  413c4b:	or     DWORD PTR [eax],esp
  413c4d:	cli    
  413c4e:	jmp    0x963f:0x879326c6
  413c55:	mov    ebp,0xac2743cf
  413c5a:	sub    BYTE PTR [ebp-0x20],bl
  413c5d:	daa    
  413c5e:	mov    dh,0x2d
  413c60:	mov    ah,0x82
  413c62:	sbb    eax,DWORD PTR [ebp-0x13a8ea09]
  413c68:	mov    cl,0x22
  413c6a:	aam    0xd5
  413c6c:	pusha  
  413c6d:	fcom   st(6)
  413c6f:	(bad)  
  413c70:	fmul   QWORD PTR ds:0xda116579
  413c76:	sub    BYTE PTR [ebp+0x32],0x1
  413c7a:	mov    esp,0x89266873
  413c7f:	adc    al,0xb3
  413c81:	and    BYTE PTR [ecx+0x7ff28c61],al
  413c87:	jmp    0x5aaa1c0a
  413c8c:	xchg   ebx,eax
  413c8d:	mov    ecx,0x15201320
  413c92:	das    
  413c93:	jbe    0x413c22
  413c95:	shr    BYTE PTR [ebp+0x74d5eb73],cl
  413c9b:	das    
  413c9c:	nop
  413c9d:	fldlg2 
  413c9f:	pop    ebx
  413ca0:	call   0x6109b587
  413ca5:	cld    
  413ca6:	fistp  DWORD PTR [eax+0x3f013821]
  413cac:	jmp    0x413c3f
  413cae:	jns    0x413cbe
  413cb0:	cld    
  413cb1:	jecxz  0x413c41
  413cb3:	mov    al,ds:0x1acf04fa
  413cb8:	jl     0x413d16
  413cba:	xor    esp,DWORD PTR [ebx]
  413cbc:	mov    ah,0x9c
  413cbe:	mov    eax,ds:0x64cd9d47
  413cc3:	jle    0x413cdd
  413cc5:	test   al,0x86
  413cc7:	pop    ebx
  413cc8:	enter  0xc099,0xa1
  413ccc:	lods   al,BYTE PTR ds:[esi]
  413ccd:	out    0xe4,al
  413ccf:	aam    0xcd
  413cd1:	fwait
  413cd2:	data16 sub al,0x9a
  413cd5:	ds mov bl,0xcf
  413cd8:	test   dh,dh
  413cda:	and    al,0x9e
  413cdc:	(bad)  [edi-0x4c7841f5]
  413ce2:	imul   eax,DWORD PTR [edi-0x312d80e6],0x40
  413ce9:	ss sti 
  413ceb:	pop    ebp
  413cec:	xchg   esp,eax
  413ced:	sti    
  413cee:	pop    ds
  413cef:	inc    eax
  413cf0:	int    0xfb
  413cf2:	lds    edx,FWORD PTR [edi+0x1d3f884a]
  413cf8:	sub    al,0x52
  413cfa:	inc    edi
  413cfb:	pop    esp
  413cfc:	ret    
  413cfd:	mov    bh,0xd9
  413cff:	outs   dx,BYTE PTR ds:[esi]
  413d00:	mov    ds:0x4db63fe4,eax
  413d05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d06:	push   0x4fb9ecb4
  413d0b:	(bad)  
  413d0c:	mov    ah,0x80
  413d0e:	jmp    0xed46170f
  413d13:	jae    0x413d5a
  413d15:	pop    esp
  413d16:	mov    esp,0xd18f22ce
  413d1b:	push   ebp
  413d1c:	lds    esi,FWORD PTR [edx]
  413d1e:	mov    bl,0x1b
  413d20:	cld    
  413d21:	cmc    
  413d22:	adc    ch,BYTE PTR [ebp+0x4d]
  413d25:	hlt    
  413d26:	inc    ecx
  413d27:	sti    
  413d28:	sbb    al,BYTE PTR [ecx+0x28]
  413d2b:	je     0x413cb9
  413d2d:	arpl   WORD PTR [edx-0x17],dx
  413d30:	pop    edx
  413d31:	sub    eax,DWORD PTR [ebx+0x44]
  413d34:	cmp    al,0x73
  413d36:	xchg   ebx,eax
  413d37:	ds inc esp
  413d39:	dec    ecx
  413d3a:	aaa    
  413d3b:	jmp    0x187c3786
  413d40:	stos   DWORD PTR es:[edi],eax
  413d41:	lea    edx,[edx+0xb]
  413d44:	dec    esi
  413d45:	lods   eax,DWORD PTR ds:[esi]
  413d46:	(bad)  
  413d47:	(bad)  
  413d48:	jns    0x413d6e
  413d4a:	pop    esi
  413d4b:	or     ecx,ebp
  413d4d:	pushf  
  413d4e:	xlat   BYTE PTR ds:[ebx]
  413d4f:	adc    edx,DWORD PTR [ebx+0x39a4c2ed]
  413d55:	sub    DWORD PTR [ebx],ebp
  413d57:	pop    ds
  413d58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d59:	lds    ebp,FWORD PTR [esi+0x61320758]
  413d5f:	(bad)  
  413d60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d61:	fisub  DWORD PTR [edi+0x3cebfde7]
  413d67:	xor    cl,al
  413d69:	pushf  
  413d6a:	add    al,0x4c
  413d6c:	nop
  413d6d:	cmp    BYTE PTR [edi+0x76296233],bl
  413d73:	popa   
  413d74:	inc    ecx
  413d75:	std    
  413d76:	stos   DWORD PTR es:[edi],eax
  413d77:	inc    ecx
  413d78:	jne    0x413d55
  413d7a:	nop
  413d7b:	push   ecx
  413d7c:	sub    BYTE PTR [ebp-0x77],0x36
  413d80:	dec    ebx
  413d81:	and    dh,BYTE PTR [ecx-0x4c8a7961]
  413d87:	out    0xbd,eax
  413d89:	fxch   st(3)
  413d8b:	(bad)  
  413d8c:	mov    eax,ds:0x86a5a30d
  413d91:	jmp    0x3f5a5445
  413d96:	or     BYTE PTR [eax],bh
  413d98:	pusha  
  413d99:	adc    BYTE PTR [edi+0x216b0428],bl
  413d9f:	push   ebx
  413da0:	dec    eax
  413da1:	(bad)  
  413da2:	mov    BYTE PTR [edx],0x82
  413da5:	ds ins DWORD PTR es:[edi],dx
  413da7:	rcr    ebx,cl
  413da9:	dec    edx
  413daa:	adc    esi,DWORD PTR ds:[eax-0x76ca4708]
  413db1:	test   ebx,ebp
  413db3:	fist   WORD PTR [ebx]
  413db5:	pushf  
  413db6:	push   ds
  413db7:	aas    
  413db8:	rcl    DWORD PTR [ebp-0x3d1ec43],0x74
  413dbf:	pop    ebx
  413dc0:	pushf  
  413dc1:	pop    ebp
  413dc2:	mov    eax,0xff2d3014
  413dc7:	sub    eax,0xcb3f69e6
  413dcc:	mov    ebx,0xeb07a032
  413dd1:	inc    ebp
  413dd2:	mov    dl,0xea
  413dd4:	xchg   ecx,eax
  413dd5:	(bad)  
  413dd6:	pop    ds
  413dd7:	loope  0x413dd4
  413dd9:	outs   dx,BYTE PTR ds:[esi]
  413dda:	shl    BYTE PTR [ebp+0x59],cl
  413ddd:	mov    esp,0x9fe38b4e
  413de2:	js     0x413d71
  413de4:	xor    BYTE PTR [ebx+0x6d],dl
  413de7:	sub    BYTE PTR [esi],ch
  413de9:	cmp    DWORD PTR ds:0x41122590,esp
  413def:	inc    ebp
  413df0:	pusha  
  413df1:	adc    ch,al
  413df3:	xor    DWORD PTR [edi+0x50],0x37
  413df7:	mov    bl,0xa
  413df9:	inc    esi
  413dfa:	push   esp
  413dfb:	scas   al,BYTE PTR es:[edi]
  413dfc:	or     eax,0x795b1c50
  413e01:	push   es
  413e02:	fst    DWORD PTR [edi-0x62]
  413e05:	inc    esi
  413e06:	popf   
  413e07:	sbb    edi,DWORD PTR [edi-0x6b]
  413e0a:	pop    ebx
  413e0b:	int3   
  413e0c:	or     DWORD PTR [edx+0x4a],edi
  413e0f:	shr    BYTE PTR [edx+0x6a],cl
  413e12:	repz sbb ebp,DWORD PTR [edx-0x5b2a006b]
  413e19:	xor    eax,0x9fb899bd
  413e1e:	repz scas eax,DWORD PTR es:[edi]
  413e20:	xchg   BYTE PTR [edx-0x5c61d656],cl
  413e26:	sub    bl,bh
  413e28:	mov    eax,0xd09de43d
  413e2d:	test   ah,bl
  413e2f:	xchg   edx,eax
  413e30:	mov    bh,0xfb
  413e32:	lds    ebp,FWORD PTR [ecx-0x78]
  413e35:	ins    DWORD PTR es:[edi],dx
  413e36:	inc    ebx
  413e37:	push   eax
  413e38:	ror    BYTE PTR [esi+0x2],1
  413e3b:	pop    ebp
  413e3c:	sub    BYTE PTR [edx+eax*8-0x143052e1],dh
  413e43:	adc    al,0xf7
  413e45:	clc    
  413e46:	cmp    esp,DWORD PTR [eax+0x5687aa9]
  413e4c:	rol    BYTE PTR [edx],1
  413e4e:	sub    eax,0xa255f2db
  413e53:	dec    eax
  413e54:	fstp   QWORD PTR [ecx+0x7a]
  413e57:	mov    bl,0x6
  413e59:	pushf  
  413e5a:	push   esp
  413e5b:	gs dec edx
  413e5d:	inc    edi
  413e5e:	nop
  413e5f:	pop    edx
  413e60:	pop    edx
  413e61:	mov    ds:0x29a00a1,eax
  413e66:	mov    ebp,DWORD PTR es:[edi]
  413e69:	jge    0x413e04
  413e6b:	dec    ebx
  413e6c:	outs   dx,BYTE PTR ds:[esi]
  413e6d:	std    
  413e6e:	jne    0x413e4a
  413e70:	push   0xbbdc8260
  413e75:	imul   edi,ebx,0x90af9776
  413e7b:	mov    gs:0xb0e1e6ef,eax
  413e81:	iret   
  413e82:	add    al,0xd
  413e84:	scas   eax,DWORD PTR es:[edi]
  413e85:	(bad)  
  413e86:	pop    edi
  413e87:	enter  0xe283,0xb
  413e8b:	adc    ah,BYTE PTR [edx+0x172d4537]
  413e91:	jmp    0x83bb:0x7f5f0d0c
  413e98:	and    DWORD PTR [ecx-0x318c366f],esp
  413e9e:	add    eax,0xa4dc2715
  413ea3:	js     0x413f1e
  413ea5:	cmc    
  413ea6:	jmp    0x413ee2
  413ea8:	(bad)  
  413ea9:	imul   DWORD PTR [ecx-0x7c]
  413eac:	xor    DWORD PTR [eax],ecx
  413eae:	outs   dx,DWORD PTR ds:[esi]
  413eaf:	push   edx
  413eb0:	jmp    0x27be:0x956a5ed6
  413eb7:	stos   DWORD PTR es:[edi],eax
  413eb8:	adc    ch,cl
  413eba:	loope  0x413efc
  413ebc:	pop    esp
  413ebd:	jmp    0x696d:0x4c1c9dc7
  413ec4:	mov    WORD PTR [ebx-0xd7ebbe8],fs
  413eca:	out    dx,al
  413ecb:	or     BYTE PTR [edi+0x24326f86],bh
  413ed1:	ss pop ss
  413ed3:	inc    esp
  413ed4:	scas   al,BYTE PTR es:[edi]
  413ed5:	xlat   BYTE PTR ds:[ebx]
  413ed6:	cmc    
  413ed7:	in     al,0x68
  413ed9:	push   0x4f
  413edb:	sti    
  413edc:	pop    ss
  413edd:	or     ecx,DWORD PTR [edx]
  413edf:	jnp    0x413ea6
  413ee1:	(bad)  
  413ee2:	dec    BYTE PTR [edx-0x24ce2e0f]
  413ee8:	push   edi
  413ee9:	inc    esi
  413eea:	jp     0x413f0a
  413eec:	jae    0x413f0f
  413eee:	jno    0x413f3e
  413ef0:	stos   DWORD PTR es:[edi],eax
  413ef1:	pop    edi
  413ef2:	push   ss
  413ef3:	and    bh,BYTE PTR [edx+0x22ffeec8]
  413ef9:	arpl   WORD PTR [edi-0x752fbd21],cx
  413eff:	mov    cs,WORD PTR [ecx+0x57de2ec2]
  413f05:	xchg   ebp,eax
  413f06:	fidivr WORD PTR [edx+ecx*8-0x7b]
  413f0a:	(bad)
  413f0d:	xchg   ebx,eax
  413f0e:	inc    esp
  413f0f:	fsubr  QWORD PTR [eax+0x15]
  413f12:	in     al,0x63
  413f14:	adc    eax,0xe0777d41
  413f19:	jecxz  0x413f6b
  413f1b:	add    eax,0x57a54c2e
  413f20:	(bad)  
  413f21:	repz push eax
  413f23:	xor    al,0xe2
  413f25:	mov    cl,0x57
  413f27:	popa   
  413f28:	sbb    al,BYTE PTR [ebx+ebp*4]
  413f2b:	pop    esp
  413f2c:	ja     0x413f9c
  413f2e:	xchg   ebx,eax
  413f2f:	shl    ebx,1
  413f31:	repnz pop es
  413f33:	pop    edi
  413f34:	jns    0x413eed
  413f36:	push   edi
  413f37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f38:	inc    esi
  413f39:	outs   dx,DWORD PTR ds:[esi]
  413f3a:	push   ss
  413f3b:	ficomp WORD PTR [eax-0x50]
  413f3e:	arpl   ax,di
  413f40:	jl     0x413f6c
  413f42:	(bad)  [ebx-0x6d540168]
  413f48:	test   DWORD PTR [ebx-0x9],edi
  413f4b:	pop    esp
  413f4c:	ds ins DWORD PTR es:[edi],dx
  413f4e:	nop
  413f4f:	push   ss
  413f50:	adc    ch,BYTE PTR [esi]
  413f52:	ins    DWORD PTR es:[edi],dx
  413f53:	dec    esp
  413f54:	lods   al,BYTE PTR ds:[esi]
  413f55:	cmp    esp,esi
  413f57:	push   ss
  413f58:	fcmovu st,st(1)
  413f5a:	mov    dh,0xa8
  413f5c:	test   eax,0x341e3ade
  413f61:	pushf  
  413f62:	xchg   esi,ebx
  413f64:	xor    eax,0xbe2482bf
  413f69:	add    BYTE PTR [edx+0x49f033b8],ah
  413f6f:	jb     0x413f33
  413f71:	loop   0x413ef3
  413f73:	cmp    eax,0x9cbed843
  413f78:	in     al,0x6b
  413f7a:	rcl    BYTE PTR [esi+eiz*1],cl
  413f7d:	pop    ebp
  413f7e:	add    DWORD PTR [ecx+edx*2],0x23939310
  413f85:	and    al,0xfb
  413f87:	inc    eax
  413f88:	add    al,0x33
  413f8a:	dec    esp
  413f8b:	jcxz   0x413fc3
  413f8e:	ins    DWORD PTR es:[edi],dx
  413f8f:	bnd jge 0x413ff3
  413f92:	je     0x413fbb
  413f94:	dec    ebx
  413f95:	mov    WORD PTR [edi],cs
  413f97:	pop    edi
  413f98:	in     eax,dx
  413f99:	push   ecx
  413f9a:	mov    ds:0x6e6e478b,al
  413f9f:	mov    dh,0xbe
  413fa1:	xor    BYTE PTR [ebp-0x78],dh
  413fa4:	repz int 0x3d
  413fa7:	mov    al,0x23
  413fa9:	jns    0x413f34
  413fab:	fs ss pop eax
  413fae:	mov    ebp,0x3fd96970
  413fb3:	jne    0x413fcd
  413fb5:	jge    0x413fed
  413fb7:	out    0xde,eax
  413fb9:	nop
  413fba:	mov    bl,0xf1
  413fbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fbd:	xchg   DWORD PTR [ebx+0x57],ebx
  413fc0:	adc    BYTE PTR [eax+0x1],cl
  413fc3:	into   
  413fc4:	mov    ds:0xb72d8a4a,eax
  413fc9:	call   0x2c94b0b3
  413fce:	retf   
  413fcf:	cdq    
  413fd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fd1:	jnp    0x414025
  413fd3:	add    BYTE PTR [edx+0x23f06b26],0x94
  413fda:	push   ecx
  413fdb:	repz sahf 
  413fdd:	call   0xfadde751
  413fe2:	mov    bh,0xbb
  413fe4:	mov    ah,0x9e
  413fe6:	sbb    edx,ebx
  413fe8:	xor    eax,0xd089c9e7
  413fed:	ss hlt 
  413fef:	adc    eax,0x8b0fdc01
  413ff4:	imul   esi,DWORD PTR [eax+edx*4+0x6ace5df7],0x1b
  413ffc:	inc    edx
  413ffd:	jmp    0x3746:0x2a063564
  414004:	popa   
  414005:	and    DWORD PTR [ebx],eax
  414007:	and    BYTE PTR [esi],ch
  414009:	inc    esp
  41400a:	jecxz  0x413fa4
  41400c:	pop    ecx
  41400d:	mov    edi,0xa127a525
  414012:	sahf   
  414013:	fadd   QWORD PTR [edx+0x64]
  414016:	pusha  
  414017:	(bad)
  41401a:	push   ebx
  41401b:	xchg   ebp,eax
  41401c:	mov    dl,BYTE PTR [edx+ebx*1]
  41401f:	mov    dl,0x5a
  414021:	sub    eax,0x4133fdf3
  414026:	into   
  414027:	scas   al,BYTE PTR es:[edi]
  414028:	inc    edx
  414029:	out    dx,eax
  41402a:	mov    cl,0x26
  41402c:	pop    ebx
  41402d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41402e:	dec    edx
  41402f:	repnz sbb edi,DWORD PTR [ecx-0x75]
  414033:	mov    eax,ds:0x883b6924
  414038:	push   edi
  414039:	ficom  WORD PTR [ecx-0x1e0ed0bd]
  41403f:	into   
  414040:	or     BYTE PTR [edi+0x7c],al
  414043:	and    eax,0xd537cf66
  414048:	xchg   BYTE PTR [esi+ebp*4-0x23],bl
  41404c:	add    ebx,ecx
  41404e:	inc    ecx
  41404f:	loopne 0x41404a
  414051:	jae    0x414089
  414053:	ja     0x4140b7
  414055:	in     eax,dx
  414056:	daa    
  414057:	sti    
  414058:	lods   al,BYTE PTR ds:[esi]
  414059:	cmp    eax,0x9f947a91
  41405e:	(bad)  
  41405f:	loopne 0x414048
  414061:	pop    DWORD PTR [eax-0x191b9923]
  414067:	mov    ah,0x37
  414069:	cmp    al,0x8e
  41406b:	outs   dx,DWORD PTR ds:[esi]
  41406c:	pop    ebp
  41406d:	xchg   esp,eax
  41406e:	(bad)  
  41406f:	aam    0x4f
  414071:	les    ecx,FWORD PTR [esi]
  414073:	cwde   
  414074:	push   esp
  414075:	fcomp  QWORD PTR [ebx+0x61]
  414078:	lahf   
  414079:	ret    0x9c92
  41407c:	xlat   BYTE PTR ds:[ebx]
  41407d:	loope  0x41404e
  41407f:	inc    ecx
  414080:	pushf  
  414081:	and    ah,0x42
  414084:	pop    ds
  414085:	and    eax,0xb30a5169
  41408a:	xchg   esi,eax
  41408b:	je     0x4140ec
  41408d:	sbb    DWORD PTR ds:0xded445c3,ecx
  414093:	or     bh,BYTE PTR [eax]
  414095:	(bad)  
  414096:	std    
  414097:	mov    eax,ds:0xacaafca9
  41409c:	fdivr  DWORD PTR [edx+0x18]
  41409f:	stos   BYTE PTR es:[edi],al
  4140a0:	mov    ds:0x88cd8083,al
  4140a5:	pushf  
  4140a6:	iret   
  4140a7:	and    eax,DWORD PTR [ebp+esi*4-0x5c6e13f7]
  4140ae:	ret    
  4140af:	xchg   edx,eax
  4140b0:	cwde   
  4140b1:	and    esi,ebp
  4140b3:	xchg   edi,eax
  4140b4:	in     al,0xea
  4140b6:	(bad)  
  4140b7:	out    0xcd,eax
  4140b9:	cmc    
  4140ba:	sub    al,0xd4
  4140bc:	xchg   ebx,eax
  4140bd:	sub    eax,0x32105e43
  4140c2:	sub    dh,ch
  4140c4:	stc    
  4140c5:	imul   esp,DWORD PTR [edi+eax*2],0xcbc6932e
  4140cc:	or     dl,BYTE PTR [ecx]
  4140ce:	inc    edx
  4140cf:	and    DWORD PTR [esi-0x7f7effb2],ebp
  4140d5:	xchg   DWORD PTR [ebx],esp
  4140d7:	jp     0x4140f1
  4140d9:	imul   ebp,ebp,0x3eee5736
  4140df:	cmp    BYTE PTR [ebp-0x5289ee9],dh
  4140e5:	or     ah,BYTE PTR [esi+0x129f6dd1]
  4140eb:	nop
  4140ec:	dec    edi
  4140ed:	pop    ebp
  4140ee:	mov    ds:0x83f352c5,eax
  4140f3:	sbb    ah,dh
  4140f5:	gs sbb eax,0x39f571d
  4140fb:	adc    dh,BYTE PTR [edi]
  4140fd:	ret    
  4140fe:	leave  
  4140ff:	je     0x414175
  414101:	pop    edx
  414102:	push   ebx
  414103:	dec    ecx
  414104:	mov    BYTE PTR [edx-0x65],0xf0
  414108:	in     al,0x5c
  41410a:	cmp    al,0xc2
  41410c:	jmp    0xa063:0x17506106
  414113:	jmp    0x414151
  414115:	jg     0x4140f6
  414117:	push   edx
  414118:	stos   DWORD PTR es:[edi],eax
  414119:	(bad)  
  41411a:	add    DWORD PTR [eax-0x4d],0x9
  41411e:	imul   ecx,DWORD PTR [ecx+0x4bcfe68f],0xffffff9a
  414125:	call   0xdb6e7d9d
  41412a:	inc    edx
  41412b:	out    0x56,al
  41412d:	das    
  41412e:	jne    0x4140d8
  414130:	dec    ebp
  414131:	int3   
  414132:	scas   eax,DWORD PTR es:[edi]
  414133:	pop    esi
  414134:	cli    
  414135:	mov    ebx,0xda98ada2
  41413a:	arpl   WORD PTR [ebp-0x5a],dx
  41413d:	push   esi
  41413e:	dec    DWORD PTR [ebx+ebx*8]
  414141:	or     al,0x7f
  414143:	jecxz  0x414139
  414145:	loop   0x41412c
  414147:	sub    eax,ebx
  414149:	push   es
  41414a:	or     DWORD PTR [edx+0x39],edx
  41414d:	in     eax,0xce
  41414f:	push   ecx
  414150:	xchg   ebx,eax
  414151:	inc    ecx
  414152:	inc    ecx
  414153:	mov    esp,0xc717a6c2
  414158:	push   esp
  414159:	std    
  41415a:	inc    edx
  41415b:	xor    eax,edi
  41415d:	cs xchg esi,eax
  41415f:	dec    ecx
  414160:	jmp    0x4141a1
  414162:	jno    0x414164
  414164:	mov    DWORD PTR [esi-0x64aaa18a],ebp
  41416a:	and    BYTE PTR [esi*4-0x17cd2866],bh
  414171:	jmp    0xa05e4d1a
  414176:	mov    al,0x59
  414178:	pop    ebp
  414179:	dec    esp
  41417a:	cmp    esp,ecx
  41417c:	inc    cl
  41417e:	shr    DWORD PTR [eax+0x27],cl
  414181:	mov    ebx,0xfc7ea104
  414186:	jge    0x4141ec
  414188:	xchg   edx,eax
  414189:	mov    edi,0xe9ded073
  41418e:	xor    ebx,DWORD PTR [esi+0x65]
  414191:	xchg   ebx,eax
  414192:	outs   dx,BYTE PTR ds:[esi]
  414193:	or     al,0x13
  414195:	sbb    dh,BYTE PTR [edi+0x5ace061a]
  41419b:	mov    ebp,0x32c1535c
  4141a0:	loope  0x4141bb
  4141a2:	je     0x414178
  4141a4:	jmp    0xe0f497fd
  4141a9:	cld    
  4141aa:	into   
  4141ab:	pop    ss
  4141ac:	aas    
  4141ad:	xchg   esi,eax
  4141ae:	dec    ebx
  4141af:	inc    edx
  4141b0:	out    0xd7,eax
  4141b2:	and    al,0x45
  4141b4:	pop    ebp
  4141b5:	cld    
  4141b6:	jnp    0x41415c
  4141b8:	mov    BYTE PTR [ecx],bh
  4141ba:	fcom   DWORD PTR ds:0xf45cdb8
  4141c0:	xor    DWORD PTR [esi],ecx
  4141c2:	loopne 0x414183
  4141c4:	add    ch,BYTE PTR [ebx]
  4141c6:	mov    esi,0x2d2ca959
  4141cb:	jae    0x41423d
  4141cd:	lock sar DWORD PTR [ebp-0x1955db1b],1
  4141d4:	lea    esp,[esi+0x2b]
  4141d7:	sbb    al,0x8b
  4141d9:	mov    WORD PTR [edx+edi*2-0x70bb250e],fs
  4141e0:	xchg   ebx,eax
  4141e1:	cmp    dh,BYTE PTR ds:0x69737c61
  4141e7:	cmp    BYTE PTR [ebx],ah
  4141e9:	mov    ah,bl
  4141eb:	push   esi
  4141ec:	fdiv   DWORD PTR [ecx+0x21]
  4141ef:	xchg   esi,eax
  4141f0:	or     DWORD PTR cs:[esi-0x72],0xffffffe7
  4141f5:	xor    esi,DWORD PTR [edi]
  4141f7:	cli    
  4141f8:	push   eax
  4141f9:	push   eax
  4141fa:	xchg   esi,eax
  4141fb:	push   ebp
  4141fc:	enter  0x4b18,0x0
  414200:	sub    dl,al
  414202:	jmp    0x840eab2f
  414207:	mov    DWORD PTR [ecx-0x756e0fea],ecx
  41420d:	inc    edi
  41420e:	mov    eax,ds:0x6bb30c2e
  414213:	in     al,0x78
  414215:	sar    DWORD PTR [edx+0x4cbe6182],1
  41421b:	cdq    
  41421c:	mov    bh,0x5e
  41421e:	aaa    
  41421f:	mov    cl,0xee
  414221:	repz mov bh,0x33
  414224:	cmp    al,0x8
  414226:	ss mov ebx,0x699c4cbf
  41422c:	mov    ebp,0x155eb5ad
  414231:	push   ss
  414232:	mov    al,0xe8
  414234:	push   esp
  414235:	(bad)  
  414236:	push   cs
  414237:	mov    DWORD PTR [ebx-0x63],ecx
  41423a:	mov    ds:0xe8b167e4,eax
  41423f:	das    
  414240:	test   al,0x73
  414242:	push   0xd1ea71f1
  414247:	in     al,0xf7
  414249:	and    al,0x3f
  41424b:	xor    esi,DWORD PTR [ecx+ebx*8+0x42]
  41424f:	mov    cl,0xff
  414251:	outs   dx,DWORD PTR ds:[esi]
  414252:	jne    0x4142cf
  414254:	xor    BYTE PTR [ebx*8+0x775ccc54],cl
  41425b:	fsub   st(0),st
  41425d:	inc    edx
  41425e:	in     al,dx
  41425f:	and    BYTE PTR [esi],ch
  414261:	sub    DWORD PTR [ebp+ecx*8-0x57],0x14
  414266:	mov    dl,0x2c
  414268:	in     al,0x3a
  41426a:	(bad)  [esp-0x5f83a3e1]
  414271:	pop    ebx
  414272:	mov    esi,0x4b1f7e9b
  414277:	jp     0x414207
  414279:	fist   WORD PTR [eax-0x79d0cbba]
  41427f:	jo     0x414281
  414281:	cwde   
  414282:	sahf   
  414283:	push   edi
  414284:	lods   al,BYTE PTR ds:[esi]
  414285:	or     esp,DWORD PTR [ebx-0x32781b09]
  41428b:	mov    al,0x7d
  41428d:	es mov edx,ss
  414290:	push   ebx
  414291:	cli    
  414292:	jmp    0x4142af
  414294:	or     eax,0x32541154
  414299:	push   cs
  41429a:	add    al,0xa0
  41429c:	xchg   ebx,esp
  41429e:	fnstenv [esi]
  4142a0:	loopne 0x414307
  4142a2:	pop    eax
  4142a3:	xchg   BYTE PTR [eax-0x3596e24d],bh
  4142a9:	ret    0xd8c6
  4142ac:	repnz dec ecx
  4142ae:	cmp    esp,DWORD PTR [ecx-0x75]
  4142b1:	xchg   DWORD PTR [ebp-0x1e],esp
  4142b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142b5:	sub    BYTE PTR [eax],ch
  4142b7:	ret    0xac61
  4142ba:	xchg   esp,eax
  4142bb:	daa    
  4142bc:	not    BYTE PTR [edx]
  4142be:	lahf   
  4142bf:	jns    0x414291
  4142c1:	popf   
  4142c2:	push   0x21
  4142c4:	pop    esp
  4142c5:	add    al,0xfe
  4142c7:	mov    eax,ds:0xfa4c1f54
  4142cc:	jge    0x41427a
  4142ce:	fstp   DWORD PTR [edx-0x1df4e717]
  4142d4:	loop   0x414287
  4142d6:	and    ecx,edx
  4142d8:	aam    0x9a
  4142da:	ins    DWORD PTR es:[edi],dx
  4142db:	fs xchg edx,eax
  4142dd:	dec    ecx
  4142de:	enter  0x168,0x4d
  4142e2:	aas    
  4142e3:	stos   BYTE PTR es:[edi],al
  4142e4:	rcr    DWORD PTR [edx+0x7c],0xd
  4142e8:	in     eax,0x4a
  4142ea:	in     al,0xe3
  4142ec:	in     al,0xad
  4142ee:	imul   edx,DWORD PTR [edx+0x18],0x413d65f
  4142f5:	xor    al,cl
  4142f7:	adc    BYTE PTR [edx],0x74
  4142fa:	sahf   
  4142fb:	pop    ebp
  4142fc:	inc    edx
  4142fd:	fisttp QWORD PTR [edx+0x2e]
  414300:	mov    gs,WORD PTR [edx]
  414302:	inc    ecx
  414303:	jb     0x4142ce
  414305:	imul   ebp,DWORD PTR [edi+0x3e],0x7d
  414309:	sub    eax,0xb1f1a9b2
  41430e:	mov    ds:0x6b3cb2e3,eax
  414313:	stc    
  414314:	repz pop ebx
  414316:	push   ds
  414317:	mov    ebx,0xe07fd013
  41431c:	add    DWORD PTR [esi+eiz*1+0x50bdccbd],eax
  414323:	fdiv   DWORD PTR [eax]
  414325:	jl     0x414362
  414327:	dec    esi
  414328:	mov    ch,0x4b
  41432a:	dec    ebx
  41432b:	cmp    eax,0x31917dd1
  414330:	shr    BYTE PTR [eax],cl
  414332:	xchg   edx,eax
  414333:	leave  
  414334:	in     eax,dx
  414335:	sub    eax,0x84fa67be
  41433a:	mov    ecx,0x7818026b
  41433f:	out    dx,al
  414340:	sub    eax,0x9a9a8ce0
  414345:	aam    0x7a
  414347:	xor    eax,eax
  414349:	js     0x414389
  41434b:	xchg   ebx,eax
  41434c:	ret    
  41434d:	inc    esi
  41434e:	push   cs
  41434f:	xchg   esi,eax
  414350:	jae    0x4142ed
  414352:	aas    
  414353:	or     al,0xd6
  414355:	push   edi
  414356:	mov    esi,0x25bf10d6
  41435b:	fidivr WORD PTR [eax-0xc15d813]
  414361:	retf   0xddd2
  414364:	push   ebx
  414365:	mov    DWORD PTR [edx],0xc2827697
  41436b:	xor    bh,0x2c
  41436e:	cmp    DWORD PTR [esi-0x66],ebx
  414371:	out    0x6e,eax
  414373:	ss push edi
  414375:	pop    ecx
  414376:	cmp    eax,0xc466c714
  41437b:	test   BYTE PTR [edi],ch
  41437d:	pop    ecx
  41437e:	inc    esi
  41437f:	adc    ch,ah
  414381:	adc    BYTE PTR [esp+ebp*8+0x1134e2dd],ch
  414388:	and    eax,edi
  41438a:	fdiv   st,st(0)
  41438c:	adc    BYTE PTR [edi+0x26],ch
  41438f:	adc    bl,ah
  414391:	mov    ch,0xef
  414393:	jne    0x4143a1
  414395:	(bad)  
  414396:	fld    DWORD PTR [esi-0x53a80533]
  41439c:	xor    cl,bl
  41439e:	mov    dl,0x3a
  4143a0:	loop   0x41438b
  4143a2:	ror    BYTE PTR [ebx-0x22b7a3d9],1
  4143a8:	sbb    ch,BYTE PTR [ecx-0x2b1ee628]
  4143ae:	cwde   
  4143af:	mov    ah,0x49
  4143b1:	fwait
  4143b2:	cld    
  4143b3:	xor    eax,0xfd09c39c
  4143b8:	jo     0x4143ff
  4143ba:	fimul  DWORD PTR [esp+eiz*4+0x39bd5bcf]
  4143c1:	jnp    0x414428
  4143c3:	jns    0x414355
  4143c5:	lock push ss
  4143c7:	xchg   ecx,edi
  4143c9:	cmp    dh,BYTE PTR [edi]
  4143cb:	mov    eax,ds:0xf60f5e1
  4143d0:	in     eax,dx
  4143d1:	les    ecx,FWORD PTR [edx+0x51]
  4143d4:	jne    0x414388
  4143d6:	mov    BYTE PTR [esi-0x425c6e58],ah
  4143dc:	sub    esp,DWORD PTR [ecx-0x3e7828d3]
  4143e2:	sub    ebx,DWORD PTR [edx]
  4143e4:	mov    ecx,0xaaa1fdbe
  4143e9:	mov    edi,0x7faf4f75
  4143ee:	mov    bh,0x71
  4143f0:	push   es
  4143f1:	hlt    
  4143f2:	loope  0x41438f
  4143f4:	inc    ebp
  4143f5:	gs fwait
  4143f7:	loope  0x414456
  4143f9:	pop    esp
  4143fa:	xor    bh,ch
  4143fc:	adc    BYTE PTR [ebp-0x64607874],dl
  414402:	call   0x3471:0xd1694dc2
  414409:	or     al,0x88
  41440b:	mov    edi,es
  41440d:	and    DWORD PTR [ecx+0x74],0x50
  414411:	sub    BYTE PTR [edx],0x56
  414414:	stos   BYTE PTR es:[edi],al
  414415:	cmp    edi,DWORD PTR [ecx+0x78707924]
  41441b:	push   es
  41441c:	fstp   DWORD PTR [ecx+esi*8+0x28]
  414420:	loop   0x414452
  414422:	cmp    bl,cl
  414424:	cwde   
  414425:	stos   BYTE PTR es:[edi],al
  414426:	stc    
  414427:	jl     0x414477
  414429:	jno    0x414447
  41442b:	dec    edi
  41442c:	jno    0x414455
  41442e:	popf   
  41442f:	dec    edi
  414430:	idiv   DWORD PTR [ecx-0x70]
  414433:	dec    esp
  414434:	outs   dx,BYTE PTR ds:[esi]
  414435:	into   
  414436:	adc    eax,0x2aa0f6bc
  41443b:	mov    ebx,0x3fed6e2c
  414440:	or     al,0x3b
  414442:	cld    
  414443:	push   ebx
  414444:	sbb    ecx,edi
  414446:	push   edi
  414447:	mov    ah,0x2a
  414449:	or     al,0x6c
  41444b:	aaa    
  41444c:	sub    eax,0xa89c5489
  414451:	sbb    esi,DWORD PTR [ecx+0x6e]
  414454:	xor    eax,0xde8eccc0
  414459:	mov    dl,0x69
  41445b:	mov    ?,ebp
  41445d:	jmp    0x4143ed
  41445f:	add    esp,DWORD PTR [ebx+0x71c06f49]
  414465:	loope  0x414478
  414467:	dec    edi
  414468:	mov    cl,0x43
  41446a:	mov    dl,0x61
  41446c:	xchg   edi,eax
  41446d:	sbb    al,0xcc
  41446f:	dec    DWORD PTR [edi+eax*8+0x5f]
  414473:	xchg   ecx,eax
  414474:	ins    BYTE PTR es:[edi],dx
  414475:	es jnp 0x414448
  414478:	or     ebx,ebp
  41447a:	or     al,0xa7
  41447c:	dec    eax
  41447d:	sti    
  41447e:	(bad)  
  41447f:	jecxz  0x41442c
  414481:	aad    0xd8
  414483:	sbb    cl,BYTE PTR [eax+ecx*1+0x58]
  414487:	mov    eax,0x5649c7ff
  41448c:	getsec 
  41448e:	xor    edx,DWORD PTR [edi]
  414490:	jno    0x414450
  414492:	jmp    0x741b4a52
  414497:	imul   edx,DWORD PTR [esp+ebx*1],0x68
  41449b:	pop    eax
  41449c:	std    
  41449d:	loopne 0x414437
  41449f:	pop    ss
  4144a0:	mov    ebx,0x540c8bc9
  4144a5:	imul   edx,edx,0x6837a054
  4144ab:	dec    esp
  4144ac:	or     BYTE PTR [edx-0x15600e78],dl
  4144b2:	test   eax,0x7922020
  4144b7:	jb     0x414478
  4144b9:	pop    esi
  4144ba:	pusha  
  4144bb:	iret   
  4144bc:	inc    ecx
  4144bd:	nop
  4144be:	int3   
  4144bf:	loopne 0x414500
  4144c1:	scas   al,BYTE PTR es:[edi]
  4144c2:	or     eax,DWORD PTR [edi+0x2d]
  4144c5:	into   
  4144c6:	jmp    0x524b5108
  4144cb:	jne    0x41452c
  4144cd:	mul    DWORD PTR ds:0xd9a7f755
  4144d3:	push   edx
  4144d4:	add    bh,dl
  4144d6:	xor    DWORD PTR [edi-0x4681ceca],ecx
  4144dc:	nop
  4144dd:	xchg   edx,eax
  4144de:	stos   BYTE PTR es:[edi],al
  4144df:	xchg   BYTE PTR ds:0xa3a5af81,ah
  4144e5:	or     al,0x97
  4144e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144e8:	add    al,0x74
  4144ea:	test   eax,0xb470990b
  4144ef:	sbb    dl,BYTE PTR [edi]
  4144f1:	lea    ecx,[eax]
  4144f3:	dec    ebx
  4144f4:	mov    ch,0xc1
  4144f6:	scas   al,BYTE PTR es:[edi]
  4144f7:	adc    eax,0x7f268530
  4144fc:	cmp    DWORD PTR [ebp+0x4e],edi
  4144ff:	push   es
  414500:	scas   eax,DWORD PTR es:[edi]
  414501:	shr    BYTE PTR [ebp+0x2c],cl
  414504:	adc    eax,0x86882de9
  414509:	inc    ecx
  41450a:	mov    esp,0x94223701
  41450f:	outs   dx,DWORD PTR ds:[esi]
  414510:	sub    cl,ch
  414512:	idiv   BYTE PTR [edi]
  414514:	mov    BYTE PTR [ebp+0x4f3823c1],dh
  41451a:	aaa    
  41451b:	push   edx
  41451c:	scas   eax,DWORD PTR es:[edi]
  41451d:	pop    ebx
  41451e:	cli    
  41451f:	xchg   ecx,eax
  414520:	inc    ebp
  414521:	out    dx,al
  414522:	jg     0x4144ac
  414524:	(bad)  
  414526:	mov    cl,0xe4
  414528:	sub    al,BYTE PTR [edx+edx*1]
  41452b:	push   0x52
  41452d:	cmp    esp,DWORD PTR [ebp+0x756d05d1]
  414533:	jle    0x414539
  414535:	inc    edx
  414536:	jne    0x41450d
  414538:	retf   0xee6e
  41453b:	mov    bh,0x12
  41453d:	dec    esi
  41453e:	mov    bl,0xf
  414540:	dec    esp
  414541:	outs   dx,DWORD PTR ds:[esi]
  414542:	jns    0x41452d
  414544:	jecxz  0x414559
  414546:	test   al,0x3c
  414548:	(bad)  
  414549:	mov    esi,0x5269a65e
  41454e:	dec    ecx
  41454f:	xchg   ebx,eax
  414550:	rol    BYTE PTR [edi],cl
  414552:	retf   
  414553:	push   edi
  414554:	iret   
  414555:	inc    edx
  414556:	pop    ecx
  414557:	jge    0x4145c5
  414559:	or     al,0xde
  41455b:	inc    edx
  41455c:	leave  
  41455d:	ror    DWORD PTR [ecx+0x4f64fa4c],1
  414563:	popf   
  414564:	xchg   BYTE PTR [ebp-0x72f5d2f9],al
  41456a:	mov    ch,0x15
  41456c:	(bad)  
  41456d:	cli    
  41456e:	sub    DWORD PTR [edx+edx*2+0x3ba9e318],eax
  414575:	adc    DWORD PTR [ebx],ebx
  414577:	sbb    BYTE PTR [edi],ah
  414579:	fidivr DWORD PTR [edi+0x8394a61]
  41457f:	cmp    al,al
  414581:	outs   dx,BYTE PTR ds:[esi]
  414582:	push   esp
  414583:	sti    
  414584:	dec    esp
  414585:	in     eax,0xff
  414587:	inc    edi
  414588:	outs   dx,BYTE PTR ds:[esi]
  414589:	adc    dh,cl
  41458b:	dec    ecx
  41458c:	in     eax,dx
  41458d:	and    ah,0x0
  414590:	cmp    BYTE PTR [edx+0x7483bb03],dl
  414596:	mov    al,ds:0x9afa13e2
  41459b:	sub    DWORD PTR [edx],ebp
  41459d:	xchg   ebp,eax
  41459e:	aad    0x6d
  4145a0:	ret    0x876e
  4145a3:	pop    ss
  4145a4:	(bad)  
  4145a5:	jg     0x41456f
  4145a7:	mov    esi,DWORD PTR [ecx+ebp*4+0xb]
  4145ab:	push   0x2b35151c
  4145b0:	jmp    0x41457c
  4145b2:	and    eax,0x38180579
  4145b7:	push   ebp
  4145b8:	jo     0x4145b3
  4145ba:	xor    ebx,esp
  4145bc:	(bad)  [ecx-0xe]
  4145bf:	enter  0x5996,0x9c
  4145c3:	fld    DWORD PTR [edi]
  4145c5:	enter  0x2ab2,0x69
  4145c9:	(bad)  [ecx-0x1]
  4145cd:	push   ebp
  4145ce:	adc    ah,bh
  4145d0:	cmp    esp,DWORD PTR [eax-0x2b]
  4145d3:	test   BYTE PTR [ebx],bh
  4145d5:	sbb    edi,DWORD PTR [ebp-0x7c]
  4145d8:	js     0x4145fb
  4145da:	fwait
  4145db:	loope  0x414623
  4145dd:	stos   BYTE PTR es:[edi],al
  4145de:	out    dx,al
  4145df:	push   ebx
  4145e0:	aas    
  4145e1:	hlt    
  4145e2:	rcr    dl,1
  4145e4:	pop    ebx
  4145e5:	jle    0x4145cb
  4145e7:	sbb    eax,0x2b745e8b
  4145ec:	xor    al,BYTE PTR [ebx-0x3735f]
  4145f2:	arpl   bx,dx
  4145f4:	cwde   
  4145f5:	adc    DWORD PTR [edi+ebp*2+0x381e95c6],edi
  4145fc:	cwde   
  4145fd:	sti    
  4145fe:	jmp    0xeea2ad85
  414603:	xchg   edi,eax
  414604:	mov    ecx,0x1ab23f97
  414609:	push   esi
  41460a:	xor    BYTE PTR [ebx],ah
  41460c:	mov    edi,0xfe49f8e7
  414611:	(bad)  
  414612:	adc    ebp,DWORD PTR [ecx]
  414614:	repz rep stos DWORD PTR es:[edi],eax
  414617:	mov    bl,0x2a
  414619:	or     al,BYTE PTR [ecx]
  41461b:	sahf   
  41461c:	scas   al,BYTE PTR es:[edi]
  41461d:	xor    DWORD PTR [eax],edi
  41461f:	fiadd  DWORD PTR [edx]
  414621:	in     al,0xa3
  414623:	mov    ch,0xa1
  414625:	jae    0x414641
  414627:	mov    bl,0x94
  414629:	iret   
  41462a:	in     eax,dx
  41462b:	cmp    eax,DWORD PTR [esi+0x7a]
  41462e:	repnz aas 
  414630:	sub    al,0x41
  414632:	inc    esp
  414633:	clc    
  414634:	pop    eax
  414635:	inc    ch
  414637:	in     al,dx
  414638:	cwde   
  414639:	mov    ebx,0x7d467ee1
  41463e:	sub    eax,0xf1bd49c1
  414643:	add    cl,BYTE PTR [edx+0x45976df7]
  414649:	jmp    0x602918a9
  41464e:	jnp    0x414613
  414650:	rcl    DWORD PTR [bp+di+0x36],cl
  414654:	or     ebx,DWORD PTR [esp+ebx*2+0x40d67d4b]
  41465b:	sub    al,0xc3
  41465d:	and    eax,0x7ab15a6f
  414662:	div    ah
  414664:	jecxz  0x4146a4
  414666:	mov    BYTE PTR [ebx+0x14],ch
  414669:	sub    eax,0xc0c5df19
  41466e:	ja     0x41460f
  414670:	adc    al,0xfd
  414672:	add    al,0x72
  414674:	sub    DWORD PTR [edx],ecx
  414676:	dec    ebx
  414677:	jg     0x4146d1
  414679:	scas   eax,DWORD PTR es:[edi]
  41467a:	loopne 0x4146a7
  41467c:	jae    0x414623
  41467e:	xor    BYTE PTR [edi],dl
  414680:	xor    edx,esp
  414682:	or     eax,0xbd3f276c
  414687:	adc    al,BYTE PTR [eax-0x5e]
  41468a:	fdiv   DWORD PTR [ebx+0x47]
  41468d:	dec    esp
  41468e:	push   ds
  41468f:	fsubr  DWORD PTR [eax]
  414691:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414692:	retf   0x481d
  414695:	mov    DWORD PTR [edi-0x34],ecx
  414698:	pop    edi
  414699:	rol    DWORD PTR [ebx+0x5a6617cc],cl
  41469f:	cmp    al,0x4b
  4146a1:	cwde   
  4146a2:	push   ds
  4146a3:	enter  0x6a24,0x48
  4146a7:	sbb    ch,BYTE PTR [eax+0x2e]
  4146aa:	push   cs
  4146ab:	mov    ss,WORD PTR [esi-0x70]
  4146ae:	int3   
  4146af:	rcr    BYTE PTR [eax-0x159f8cde],1
  4146b5:	jmp    DWORD PTR ds:0xb68058a7
  4146bb:	fdiv   DWORD PTR [edx-0x44]
  4146be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146bf:	fst    DWORD PTR [ecx+ebx*2+0x6a473e51]
  4146c6:	int    0xa
  4146c8:	jno    0x414726
  4146ca:	cmp    BYTE PTR [eax-0x8],bh
  4146cd:	fadd   QWORD PTR [ebx]
  4146cf:	xor    ch,ah
  4146d1:	clc    
  4146d2:	stc    
  4146d3:	sub    BYTE PTR [ebp+0x32],ch
  4146d6:	retf   
  4146d7:	mov    DWORD PTR [bx-0x64],ebx
  4146db:	les    esp,FWORD PTR [edi]
  4146dd:	xchg   ecx,edi
  4146df:	lods   al,BYTE PTR ds:[esi]
  4146e0:	cmp    dh,BYTE PTR [edi]
  4146e2:	xchg   ebx,eax
  4146e3:	xor    DWORD PTR [eax-0x3d3ee967],ebx
  4146e9:	add    ebp,DWORD PTR [edi-0x30d04985]
  4146ef:	jecxz  0x41470c
  4146f1:	daa    
  4146f2:	dec    esp
  4146f3:	into   
  4146f4:	jo     0x4146d6
  4146f6:	xlat   BYTE PTR ds:[ebx]
  4146f7:	and    DWORD PTR ds:0x22a4575a,edx
  4146fd:	test   edi,edx
  4146ff:	js     0x4146df
  414701:	or     eax,0xaa2f1bdd
  414706:	cmc    
  414707:	xchg   BYTE PTR [edi-0x73d762a9],dh
  41470d:	xchg   esp,eax
  41470e:	dec    ebx
  41470f:	jg     0x4146a4
  414711:	clc    
  414712:	jnp    0x414750
  414714:	in     al,0xee
  414716:	retf   
  414717:	dec    esp
  414718:	pop    edx
  414719:	mov    ds:0xec8eca54,eax
  41471e:	adc    BYTE PTR [ebx+0x7f],ah
  414721:	push   0xfa72f11f
  414726:	mov    esi,0x5c7d98a3
  41472b:	(bad)  
  41472c:	dec    esi
  41472d:	jg     0x414798
  41472f:	fs (bad) 
  414731:	jg     0x4146df
  414733:	push   cs
  414734:	xchg   DWORD PTR [edx-0x6f4359b2],esp
  41473a:	iret   
  41473b:	cmp    BYTE PTR [ebx+0x1f87a7f],0xc9
  414742:	xchg   esi,eax
  414743:	mov    ebp,0x770f2134
  414748:	loop   0x4146fc
  41474a:	call   0xb44b:0x1deef4a0
  414751:	icebp  
  414752:	sbb    BYTE PTR [edx+0x69],ah
  414755:	sub    edi,esi
  414757:	sbb    BYTE PTR [ebx-0x1a],bh
  41475a:	out    0xbf,al
  41475c:	inc    edx
  41475d:	mov    dl,dl
  41475f:	jge    0x4147a0
  414761:	mov    dh,0x5b
  414763:	or     ebx,DWORD PTR [ecx-0x58451013]
  414769:	jmp    0x2e9c268c
  41476e:	pop    eax
  41476f:	in     eax,0xb6
  414771:	(bad)  [bp+di]
  414774:	dec    esi
  414775:	or     DWORD PTR [ebx],ebx
  414777:	jbe    0x414757
  414779:	add    ebx,DWORD PTR [edx+0x2a84f265]
  41477f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414780:	push   ecx
  414781:	push   esp
  414782:	push   esi
  414783:	cmp    eax,0xd8fb3425
  414788:	data16 je 0x414745
  41478b:	or     al,BYTE PTR [eax-0xe]
  41478e:	test   BYTE PTR [ebx-0x15],bl
  414791:	inc    eax
  414793:	mov    edx,0xd47be063
  414798:	jg     0x414795
  41479a:	fcom   QWORD PTR [ecx-0x18]
  41479d:	mov    es,WORD PTR [esi]
  41479f:	int3   
  4147a0:	pushf  
  4147a1:	bnd jns 0x41477f
  4147a4:	pop    eax
  4147a5:	hlt    
  4147a6:	je     0x4147e8
  4147a8:	call   0xa750323d
  4147ad:	push   ds
  4147ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147af:	call   0xfacd537d
  4147b4:	inc    ebx
  4147b5:	jno    0x41473e
  4147b7:	repnz mov esi,0xd89987e6
  4147bd:	cmp    eax,0x628fc11d
  4147c2:	loope  0x414770
  4147c4:	adc    eax,0x6a4e54ae
  4147c9:	call   0xec47:0x40519a59
  4147d0:	sub    bh,0x4e
  4147d3:	rol    BYTE PTR [edi-0x17],0xe
  4147d7:	pop    esi
  4147d8:	sahf   
  4147d9:	hlt    
  4147da:	mov    edi,0x7b8de7cd
  4147df:	mov    gs,WORD PTR [ebx]
  4147e1:	test   BYTE PTR [eax+0x9dedb71],0xf8
  4147e8:	pop    ebx
  4147e9:	mov    esp,0x853688a6
  4147ee:	gs stos DWORD PTR es:[edi],eax
  4147f0:	sar    BYTE PTR [esi],cl
  4147f2:	aas    
  4147f3:	push   ss
  4147f4:	xor    bh,al
  4147f6:	aaa    
  4147f7:	sub    bl,BYTE PTR [ecx]
  4147f9:	cmp    BYTE PTR [edi*2-0x1b46421e],cl
  414800:	xor    eax,0xcd9c2aba
  414805:	push   ebx
  414806:	push   ss
  414807:	retf   
  414808:	ror    BYTE PTR [eax],1
  41480a:	ss pop ebp
  41480c:	inc    ebp
  41480d:	sbb    esi,DWORD PTR [eax-0x73]
  414810:	imul   esp,DWORD PTR [edi],0xffffffbc
  414813:	mov    cl,0x96
  414815:	mov    es,WORD PTR [edx-0x62ce55a6]
  41481b:	dec    esi
  41481c:	shl    BYTE PTR [ebp+0x70],0x63
  414820:	add    ecx,DWORD PTR [edx-0x4]
  414823:	mov    BYTE PTR ds:0x283fd0d9,al
  414829:	add    eax,0x5d4030e5
  41482e:	aas    
  41482f:	mov    cl,0xce
  414831:	out    0x6f,eax
  414833:	add    ah,bh
  414835:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414836:	pop    edx
  414837:	xchg   esi,eax
  414838:	xor    eax,0x12a609e0
  41483d:	adc    eax,0x18254556
  414842:	pop    ebx
  414843:	call   0xf983:0x2c7e3c3
  41484a:	xchg   ecx,eax
  41484b:	sub    ecx,eax
  41484d:	jo     0x414890
  41484f:	sti    
  414850:	xlat   BYTE PTR ds:[ebx]
  414851:	jge    0x414882
  414853:	ret    0xea54
  414856:	jecxz  0x4148cd
  414858:	loope  0x414840
  41485a:	fcom   DWORD PTR [ebx+0x4b]
  41485d:	mov    edx,0xc125ca33
  414862:	cmp    al,0x67
  414864:	cmp    eax,0x3d07bbaa
  414869:	xchg   ecx,eax
  41486a:	scas   eax,DWORD PTR es:[edi]
  41486b:	dec    edi
  41486c:	sbb    BYTE PTR [edi-0x78],al
  41486f:	cdq    
  414870:	cmp    al,0x86
  414872:	pop    ss
  414873:	daa    
  414874:	sub    BYTE PTR [ebx],dh
  414876:	or     BYTE PTR [edi-0x33],dh
  414879:	neg    DWORD PTR [esi+0x4d24a288]
  41487f:	mov    dh,0x42
  414881:	mov    eax,ds:0x704b3bc8
  414886:	mov    al,0x44
  414888:	inc    edx
  414889:	pop    esi
  41488a:	jno    0x4148dd
  41488c:	(bad)  
  41488d:	and    BYTE PTR [eax+ecx*1],bh
  414890:	sbb    al,0x1c
  414892:	xchg   DWORD PTR [ebp-0x2c],esi
  414895:	popf   
  414896:	loope  0x414885
  414898:	pop    ecx
  414899:	and    ah,dl
  41489b:	pop    ebp
  41489c:	dec    edx
  41489d:	push   0xa79e7121
  4148a2:	lahf   
  4148a3:	enter  0xb2f1,0x97
  4148a7:	out    0xe9,eax
  4148a9:	sbb    ecx,DWORD PTR [edx+0x3cbc3a91]
  4148af:	xor    BYTE PTR [eax+edi*8],cl
  4148b2:	sub    DWORD PTR [ecx-0x66],ebp
  4148b5:	dec    edi
  4148b6:	jnp    0x414879
  4148b8:	lods   al,BYTE PTR ds:[esi]
  4148b9:	xchg   edi,eax
  4148ba:	scas   eax,DWORD PTR es:[edi]
  4148bb:	aas    
  4148bc:	call   0xc6c694b5
  4148c1:	clc    
  4148c2:	call   0x812b276d
  4148c7:	daa    
  4148c8:	inc    ebp
  4148c9:	iret   
  4148ca:	aaa    
  4148cb:	mov    ds:0x2c3faa83,eax
  4148d0:	mov    edi,0xfe12c987
  4148d5:	ret    0xac87
  4148d8:	or     al,0x95
  4148da:	sub    ch,BYTE PTR [eax+eiz*4+0x4]
  4148de:	mov    ebp,0xf19e8e3
  4148e3:	les    ebx,FWORD PTR [ebp+0x6ae13ea6]
  4148e9:	sbb    al,0x22
  4148eb:	outs   dx,DWORD PTR ds:[esi]
  4148ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148ed:	daa    
  4148ee:	retf   
  4148ef:	push   esi
  4148f0:	push   es
  4148f1:	jo     0x4148db
  4148f3:	lock adc BYTE PTR [edx-0x75b55c04],ah
  4148fa:	imul   eax,DWORD PTR [eax],0x52
  4148fd:	(bad)  
  4148fe:	jns    0x4148b2
  414900:	and    al,0x7c
  414902:	push   0xffffff87
  414904:	sbb    BYTE PTR [edi-0x51],dl
  414907:	cdq    
  414908:	xchg   ecx,eax
  414909:	aas    
  41490a:	(bad)  
  41490b:	sbb    BYTE PTR [ebp-0x6fb99636],cl
  414911:	sbb    eax,0xe736f9d3
  414916:	mov    ah,BYTE PTR [ecx-0x25]
  414919:	imul   edx,DWORD PTR [ecx-0x417abb46],0xffffffb4
  414920:	lods   al,BYTE PTR ds:[esi]
  414921:	fisub  WORD PTR [edi+edx*2-0xf0999b8]
  414928:	sbb    dh,BYTE PTR [edi-0x52]
  41492b:	(bad)  
  41492c:	repz jmp 0x36fe091b
  414932:	cmp    eax,DWORD PTR [esi]
  414934:	idiv   DWORD PTR [edi+ecx*2-0x2dc141a5]
  41493b:	(bad)  
  41493c:	shr    BYTE PTR [ecx+0x165b9172],0xdb
  414943:	mov    ebx,0x30def6f8
  414948:	out    0xff,eax
  41494a:	mov    al,ds:0xd39dc276
  41494f:	or     bl,BYTE PTR [ecx]
  414951:	mov    ah,0xec
  414953:	sbb    al,0x37
  414955:	push   0xffffff84
  414957:	xchg   edx,eax
  414958:	mov    al,0x2
  41495a:	cmp    dl,BYTE PTR [edi]
  41495c:	jnp    0x4149bd
  41495e:	dec    edi
  41495f:	cmc    
  414960:	and    DWORD PTR [edi-0x1f],esi
  414963:	cs out dx,al
  414965:	imul   BYTE PTR [ecx]
  414967:	fistp  QWORD PTR [esi+0x3fcc4be3]
  41496d:	outs   dx,DWORD PTR ds:[esi]
  41496e:	sbb    eax,0x6c1fa31a
  414973:	xor    BYTE PTR [eax],al
  414975:	out    dx,eax
  414976:	xlat   BYTE PTR ds:[ebx]
  414977:	mov    ebp,DWORD PTR [ecx+0x5572e891]
  41497d:	xor    BYTE PTR [esi+0x3f6f2bb8],bl
  414983:	push   es
  414984:	test   eax,0x73f6284c
  414989:	xor    BYTE PTR ds:0x6fc1326b,dl
  41498f:	daa    
  414990:	fld    st(6)
  414992:	pop    ss
  414993:	imul   esp,edi,0x4b03b694
  414999:	call   0x684802ae
  41499e:	jmp    0x41495e
  4149a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149a1:	jmp    0x50e3:0x1a0fd4e4
  4149a8:	imul   esi,DWORD PTR [ebx+0x6f6d537],0x6c
  4149af:	pop    ebx
  4149b0:	hlt    
  4149b1:	cmc    
  4149b2:	jecxz  0x414a1b
  4149b4:	push   ss
  4149b5:	cmp    ebp,edi
  4149b7:	push   ds
  4149b8:	or     BYTE PTR [edi+0x4545fa52],dl
  4149be:	data16 mov BYTE PTR [esp+ebx*2-0x1bb13ee3],al
  4149c6:	pavgw  mm0,mm3
  4149c9:	loope  0x4149dc
  4149cb:	shl    ebx,0x10
  4149ce:	lods   al,BYTE PTR ds:[esi]
  4149cf:	mov    ds:0x7f59151c,eax
  4149d4:	test   al,0xab
  4149d6:	sbb    bl,BYTE PTR [edi+0x37f887e8]
  4149dc:	dec    edx
  4149dd:	jae    0x414997
  4149df:	xchg   ebp,eax
  4149e0:	test   eax,0x22ac13d9
  4149e5:	int3   
  4149e6:	rcl    DWORD PTR [ebp+esi*1+0x7e],cl
  4149ea:	adc    ebx,DWORD PTR [esi-0x31a278d4]
  4149f0:	xchg   BYTE PTR fs:[esi+0x4ac16b7f],dh
  4149f7:	inc    DWORD PTR [eax]
  4149f9:	mov    DWORD PTR [eax+0x7f75e8ce],esi
  4149ff:	fiadd  DWORD PTR [ebx-0x9]
  414a02:	or     eax,0xf8334ca5
  414a07:	int    0x54
  414a09:	push   es
  414a0a:	(bad)  
  414a0c:	push   0xffffffc5
  414a0e:	hlt    
  414a0f:	sub    al,0x1c
  414a11:	ffree  st(1)
  414a13:	xchg   esi,eax
  414a14:	adc    eax,0xe15a5f83
  414a19:	sbb    esp,DWORD PTR [esi-0x22]
  414a1c:	call   0x918b34f9
  414a21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a22:	outs   dx,DWORD PTR ds:[esi]
  414a23:	xchg   ebp,eax
  414a24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a25:	shl    BYTE PTR [edx+0x3405b2ba],0xfd
  414a2c:	mov    gs,esi
  414a2e:	test   eax,0x11192616
  414a34:	adc    BYTE PTR [edx+0xa8e9e70],0x28
  414a3b:	xchg   al,cl
  414a3d:	mov    ecx,0x7f2dd992
  414a42:	test   al,0x9d
  414a44:	fidiv  DWORD PTR [esi]
  414a46:	iret   
  414a47:	push   ss
  414a48:	mov    edx,0x968caa43
  414a4d:	mov    al,BYTE PTR [edx]
  414a4f:	adc    BYTE PTR [edi],ah
  414a51:	xchg   esi,eax
  414a52:	std    
  414a53:	sub    eax,0x5a4277b8
  414a58:	add    esi,ebp
  414a5a:	cli    
  414a5b:	stc    
  414a5c:	inc    eax
  414a5d:	scas   al,BYTE PTR es:[edi]
  414a5e:	fisttp DWORD PTR ds:0xcf779a36
  414a64:	sub    DWORD PTR [eax+0x24],0x68
  414a68:	addr16 das 
  414a6a:	pop    edx
  414a6b:	dec    ecx
  414a6c:	sub    bh,ah
  414a6e:	scas   al,BYTE PTR es:[edi]
  414a6f:	mov    edx,esp
  414a71:	outs   dx,DWORD PTR ds:[esi]
  414a72:	out    dx,al
  414a73:	xchg   ecx,eax
  414a74:	mov    bh,0x8a
  414a76:	mov    dh,0xdb
  414a78:	int3   
  414a79:	sahf   
  414a7a:	fbld   TBYTE PTR [edx-0x76b22d6b]
  414a80:	sbb    al,0xc1
  414a82:	dec    edi
  414a83:	pop    ss
  414a84:	retf   0x725
  414a87:	in     al,0x82
  414a89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a8a:	mov    ecx,DWORD PTR ds:[esi]
  414a8d:	push   esi
  414a8e:	mov    ebp,DWORD PTR [ebp-0x60]
  414a91:	inc    DWORD PTR ds:0x129995c1
  414a97:	dec    eax
  414a98:	ret    0xecfe
  414a9b:	pop    ebx
  414a9c:	mov    edi,0x1a9f7546
  414aa1:	pop    ds
  414aa2:	and    DWORD PTR [eax-0x57],0xffffffe6
  414aa6:	and    dl,BYTE PTR [edx-0x3d]
  414aa9:	add    dh,0x4e
  414aac:	stc    
  414aad:	clc    
  414aae:	cwde   
  414aaf:	add    bh,0x20
  414ab2:	inc    ebx
  414ab3:	or     BYTE PTR [edi],0xd6
  414ab6:	fidiv  WORD PTR [ecx+0x2e]
  414ab9:	jmp    0x414aa0
  414abb:	push   esi
  414abc:	mov    cl,0x80
  414abe:	mov    ebp,0xac6d2091
  414ac3:	das    
  414ac4:	out    0x18,al
  414ac6:	mov    dh,0x22
  414ac8:	repnz pop ss
  414aca:	push   eax
  414acb:	not    DWORD PTR ds:0x1205b67e
  414ad1:	mov    ebx,edx
  414ad3:	scas   al,BYTE PTR es:[edi]
  414ad4:	mov    bh,0x24
  414ad6:	dec    eax
  414ad7:	lods   eax,DWORD PTR ds:[esi]
  414ad8:	std    
  414ad9:	fld    QWORD PTR [eax+0x6a533a5]
  414adf:	stos   BYTE PTR es:[edi],al
  414ae0:	mov    ch,0xdf
  414ae2:	cli    
  414ae3:	retf   0x4ec9
  414ae6:	int3   
  414ae7:	sub    bh,BYTE PTR [edx]
  414ae9:	inc    eax
  414aea:	neg    dl
  414aec:	repz pop ds
  414aee:	jae    0x414b45
  414af0:	js     0x414b70
  414af2:	xor    ah,dl
  414af4:	stc    
  414af5:	inc    esi
  414af6:	adc    dl,BYTE PTR [di]
  414af9:	push   eax
  414afa:	dec    esp
  414afb:	hlt    
  414afc:	outs   dx,BYTE PTR ds:[esi]
  414afd:	retf   0x6f7a
  414b00:	out    0xb4,eax
  414b02:	in     eax,0x6d
  414b04:	fmul   QWORD PTR [ebx-0xa]
  414b07:	(bad)  
  414b08:	rcl    DWORD PTR [ebp-0x53],cl
  414b0b:	cmp    BYTE PTR [ecx+0x72],bh
  414b0e:	add    ecx,DWORD PTR [ebx+0x45]
  414b11:	or     ah,dh
  414b13:	popa   
  414b14:	ret    
  414b15:	sub    eax,0xc24bf414
  414b1a:	pop    ecx
  414b1b:	push   ebx
  414b1c:	fwait
  414b1d:	lea    eax,[ebx-0x2f358411]
  414b23:	fidivr WORD PTR [edx]
  414b25:	sub    DWORD PTR [ecx-0xe88e2ac],0x7d
  414b2c:	jmp    0x414ad7
  414b2e:	sub    BYTE PTR [edx],0x47
  414b31:	jns    0x414ab7
  414b33:	cmp    esp,esp
  414b35:	jb     0x414b2e
  414b37:	test   eax,0x35884bb6
  414b3c:	inc    edi
  414b3d:	test   eax,0xe5ac8a8f
  414b43:	out    dx,eax
  414b44:	stos   DWORD PTR es:[edi],eax
  414b45:	js     0x414ad3
  414b47:	jge    0x414b8f
  414b49:	ret    0xea65
  414b4c:	pop    ds
  414b4d:	mov    di,0x4779
  414b51:	out    0x45,al
  414b53:	cli    
  414b54:	pop    eax
  414b55:	dec    DWORD PTR [ebp+0x67b33b5]
  414b5b:	inc    edi
  414b5c:	ficomp WORD PTR [esi]
  414b5e:	js     0x414b55
  414b60:	add    al,0xac
  414b62:	xchg   ebx,eax
  414b63:	shl    DWORD PTR [ecx-0x5b],1
  414b66:	mov    cl,0x75
  414b68:	adc    ch,ch
  414b6a:	xchg   ebx,eax
  414b6b:	(bad)  
  414b6c:	xor    ecx,DWORD PTR [edx-0x4c]
  414b6f:	dec    edi
  414b70:	inc    esi
  414b71:	test   al,0x21
  414b73:	pop    ss
  414b74:	enter  0x7719,0x44
  414b78:	cmp    DWORD PTR [ecx],esi
  414b7a:	imul   edi,DWORD PTR [eax],0xfb2222e4
  414b80:	dec    edx
  414b81:	xor    eax,0x590d766d
  414b86:	mov    cl,0x60
  414b88:	fst    QWORD PTR [ebx+eiz*8+0x15b29cc5]
  414b8f:	mov    bh,0xac
  414b91:	(bad)  
  414b92:	push   esp
  414b93:	out    0xe1,al
  414b95:	sbb    al,BYTE PTR [edx]
  414b97:	addr16 pop esp
  414b99:	into   
  414b9a:	pop    eax
  414b9b:	(bad)  
  414b9c:	repnz pop edx
  414b9e:	pop    ebp
  414b9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ba0:	add    eax,0xf416894f
  414ba5:	out    dx,al
  414ba6:	xor    al,0x9f
  414ba8:	in     al,0xc6
  414baa:	mov    ah,0x9d
  414bac:	jne    0x414b40
  414bae:	leave  
  414baf:	lock push ss
  414bb1:	rcl    BYTE PTR [esi-0x7f51245e],cl
  414bb7:	mov    ah,0xc8
  414bb9:	les    esi,FWORD PTR [eax+0x23]
  414bbc:	cmc    
  414bbd:	aaa    
  414bbe:	rol    DWORD PTR [eax],1
  414bc0:	in     al,0x12
  414bc2:	stos   BYTE PTR es:[edi],al
  414bc3:	fdiv   QWORD PTR [ecx-0x39]
  414bc6:	icebp  
  414bc7:	int    0x65
  414bc9:	aaa    
  414bca:	or     eax,0xffffffcb
  414bcd:	jg     0x414b75
  414bcf:	cwde   
  414bd0:	pop    ebx
  414bd1:	(bad)  
  414bd2:	mov    edi,esp
  414bd4:	scas   al,BYTE PTR es:[edi]
  414bd5:	xchg   esp,eax
  414bd6:	fisubr WORD PTR [edi-0x29]
  414bd9:	adc    esi,DWORD PTR [edi]
  414bdb:	mov    esp,0x62874136
  414be0:	mov    ebx,0xc312c893
  414be5:	neg    BYTE PTR [ebx]
  414be7:	or     DWORD PTR [ebp+0x500b6c22],edx
  414bed:	sar    dl,0x5b
  414bf0:	mov    dh,0x54
  414bf2:	in     al,dx
  414bf3:	int3   
  414bf4:	jno    0x414b9f
  414bf6:	lds    ebx,FWORD PTR [edx+0x1a]
  414bf9:	hlt    
  414bfa:	pop    ss
  414bfb:	loop   0x414c1a
  414bfd:	mov    BYTE PTR [ecx],dl
  414bff:	shl    ebx,cl
  414c01:	imul   ebp,DWORD PTR [ebp+0x1c],0xaee1c395
  414c08:	in     eax,0x8e
  414c0a:	pushf  
  414c0b:	sbb    eax,0xb12ca08d
  414c10:	add    eax,0xc97136d1
  414c15:	das    
  414c16:	push   eax
  414c17:	push   cs
  414c18:	jp     0x414c54
  414c1a:	cmp    ebp,edx
  414c1c:	adc    al,0xeb
  414c1e:	push   edi
  414c1f:	mov    ch,ch
  414c21:	lods   al,BYTE PTR ds:[esi]
  414c22:	ss dec edx
  414c24:	push   ds
  414c25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c26:	ror    BYTE PTR [esi],0x25
  414c29:	mov    DWORD PTR [eax],edx
  414c2b:	or     al,0x81
  414c2d:	dec    eax
  414c2e:	mov    ecx,DWORD PTR [edi-0x3d]
  414c31:	sbb    esp,DWORD PTR [edi-0x1e]
  414c34:	into   
  414c35:	retf   0xa5fe
  414c38:	jbe    0x414c1f
  414c3a:	ins    DWORD PTR es:[edi],dx
  414c3b:	cmp    bh,BYTE PTR [edx+0x3faa3675]
  414c41:	add    BYTE PTR [edx+0x2faf046b],al
  414c47:	ret    0xb692
  414c4a:	inc    esi
  414c4b:	call   0x92a6:0x9b387112
  414c52:	jno    0x414c29
  414c54:	sbb    DWORD PTR [edi],eax
  414c56:	addr16 mov dl,0x7d
  414c59:	inc    ebx
  414c5a:	lods   eax,DWORD PTR ds:[esi]
  414c5b:	sbb    esi,DWORD PTR [edi]
  414c5d:	shl    BYTE PTR [esi-0x3d],1
  414c60:	(bad)  
  414c61:	mov    DWORD PTR [eax],ecx
  414c63:	push   ecx
  414c64:	lea    eax,[eax+0xe]
  414c67:	aaa    
  414c68:	mov    ecx,ebp
  414c6a:	mov    ds:0x9d7442d2,eax
  414c6f:	cld    
  414c70:	jecxz  0x414c94
  414c72:	mov    eax,ds:0xf0696f0b
  414c77:	test   al,0x51
  414c79:	fwait
  414c7a:	ret    0x655d
  414c7d:	adc    al,0xf5
  414c7f:	data16 jge 0x414c48
  414c82:	jne    0x414c91
  414c84:	cmp    cl,al
  414c86:	lea    ebx,[edx]
  414c88:	jmp    0xe2871d45
  414c8d:	lods   eax,DWORD PTR ds:[esi]
  414c8e:	sbb    BYTE PTR [ecx-0x44],0x71
  414c92:	enter  0xbf02,0xeb
  414c96:	jecxz  0x414cc9
  414c98:	call   0xb10eab4
  414c9d:	in     eax,dx
  414c9e:	adc    al,0x79
  414ca0:	xchg   edx,eax
  414ca1:	sub    ebp,DWORD PTR [ebp-0x6b]
  414ca4:	push   0x8a650260
  414ca9:	arpl   WORD PTR [eax],bp
  414cab:	rcl    DWORD PTR [esi+0x3a542e1b],cl
  414cb1:	nop
  414cb2:	mov    ch,0x70
  414cb4:	mov    bh,0xa5
  414cb6:	add    esp,DWORD PTR [eax+0x3663fbec]
  414cbc:	js     0x414ce5
  414cbe:	pop    ecx
  414cbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cc0:	mov    ebp,0x7aad8b36
  414cc5:	dec    esp
  414cc6:	js     0x414c7f
  414cc8:	mov    bl,BYTE PTR [ebx]
  414cca:	test   eax,0x3e14196e
  414ccf:	and    ch,BYTE PTR [edx]
  414cd1:	fdiv   DWORD PTR [edx+0x292444a5]
  414cd7:	jbe    0x414ca0
  414cd9:	or     bl,ah
  414cdb:	sbb    BYTE PTR [ebx+0x69],0xc9
  414cdf:	add    eax,ebp
  414ce1:	lock mov al,ds:0x3036698a
  414ce7:	or     al,0xe5
  414ce9:	jmp    0x3c98:0x695d7a66
  414cf0:	ins    DWORD PTR es:[edi],dx
  414cf1:	(bad)  
  414cf2:	outs   dx,DWORD PTR ds:[esi]
  414cf3:	mov    ds:0x4be97639,al
  414cf8:	jb     0x414d17
  414cfa:	pop    eax
  414cfb:	inc    esi
  414cfc:	adc    bh,BYTE PTR [ebx-0x31]
  414cff:	arpl   WORD PTR [eax+0x67],sp
  414d02:	jnp    0x414d76
  414d04:	push   ss
  414d05:	sbb    BYTE PTR [ebp-0x38b2ca3d],bh
  414d0b:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d0d:	or     al,0x5a
  414d0f:	adc    edi,esp
  414d11:	scas   eax,DWORD PTR es:[edi]
  414d12:	aam    0x4c
  414d14:	ja     0x414d92
  414d16:	inc    esi
  414d17:	push   es
  414d18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d19:	test   DWORD PTR [esi+0x3863f49f],edx
  414d1f:	mov    ds:0x5f485107,eax
  414d24:	mov    cl,0xc6
  414d26:	(bad)  
  414d27:	bsf    esp,DWORD PTR [edi-0x69]
  414d2b:	dec    edi
  414d2c:	(bad)  
  414d2d:	in     al,dx
  414d2e:	in     al,dx
  414d2f:	mov    al,ds:0x9b86c4b6
  414d34:	mov    ecx,DWORD PTR [edx+0xa2c1341]
  414d3a:	mov    dl,0x3f
  414d3c:	xlat   BYTE PTR ds:[ebx]
  414d3d:	add    BYTE PTR [eax+ebp*2-0x534b3bc0],dl
  414d44:	cs push cs
  414d46:	sub    al,BYTE PTR [edi]
  414d48:	xchg   esp,eax
  414d49:	xlat   BYTE PTR ds:[ebx]
  414d4a:	jno    0x414da3
  414d4c:	cmp    eax,0xe379fba2
  414d51:	scas   eax,DWORD PTR es:[edi]
  414d52:	dec    esi
  414d53:	mov    eax,0x7113f065
  414d58:	cmp    al,0xb0
  414d5a:	jecxz  0x414d7b
  414d5c:	xor    DWORD PTR es:[esi-0x7b2793a6],0xc4353dd4
  414d67:	lods   eax,DWORD PTR ds:[esi]
  414d68:	outs   dx,DWORD PTR gs:[esi]
  414d6a:	(bad)  
  414d6b:	inc    esp
  414d6c:	jae    0x414cef
  414d6e:	ficom  DWORD PTR [esi+0x23772d2b]
  414d74:	nop
  414d75:	nop
  414d76:	sbb    BYTE PTR [edx-0x4f],0xf1
  414d7a:	int3   
  414d7b:	jne    0x414d5f
  414d7d:	xchg   BYTE PTR [eax-0x53],bh
  414d80:	push   ebp
  414d81:	and    edi,DWORD PTR [edi+0x2d]
  414d84:	outs   dx,BYTE PTR ds:[esi]
  414d85:	push   ebx
  414d86:	ins    BYTE PTR es:[edi],dx
  414d87:	out    0x49,eax
  414d89:	cld    
  414d8a:	(bad)  
  414d8b:	stos   DWORD PTR es:[edi],eax
  414d8c:	xchg   esp,eax
  414d8d:	mov    esp,eax
  414d8f:	mov    ah,0xcb
  414d91:	imul   esp,edi,0xffffffd5
  414d94:	retf   0x64ba
  414d97:	jle    0x414d6d
  414d99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d9a:	jns    0x414dc0
  414d9c:	rcl    BYTE PTR [edi+0x2a],0xe7
  414da0:	dec    ebx
  414da1:	iret   
  414da2:	test   DWORD PTR [si-0x4832],ecx
  414da7:	out    dx,al
  414da8:	fnstenv [edx-0x7602a29f]
  414dae:	pop    esp
  414daf:	sbb    eax,0x4baf3479
  414db4:	int3   
  414db5:	fwait
  414db6:	mov    DWORD PTR [eax],ebx
  414db8:	inc    esi
  414db9:	es loope 0x414dc9
  414dbc:	fdivr  DWORD PTR [esi-0x2a8b4b63]
  414dc2:	mul    DWORD PTR [edi+0x14]
  414dc5:	cmp    al,0x72
  414dc7:	fwait
  414dc8:	std    
  414dc9:	sbb    eax,0x18ff5544
  414dce:	aaa    
  414dcf:	sbb    DWORD PTR [edi],esp
  414dd1:	les    ecx,FWORD PTR [ebp-0x2aff72a8]
  414dd7:	test   eax,0x369bffc9
  414ddc:	je     0x414d9b
  414dde:	or     eax,0x1e1b7d25
  414de3:	mov    eax,ds:0xd4dc1e4d
  414de8:	fwait
  414de9:	jmp    0x414e4b
  414deb:	dec    ebx
  414dec:	fidiv  WORD PTR ds:0xc5092c66
  414df2:	sbb    ebx,esp
  414df4:	out    0x1a,al
  414df6:	test   al,0xe7
  414df8:	mov    bh,0xcf
  414dfa:	xor    DWORD PTR [eax],0xffffffe1
  414dfd:	icebp  
  414dfe:	retf   
  414dff:	loope  0x414e3f
  414e01:	or     dl,BYTE PTR [esi*2+0x509f8a61]
  414e08:	adc    eax,0x3396b3d0
  414e0d:	repz add bh,BYTE PTR [ecx]
  414e10:	mov    ch,0xbc
  414e12:	inc    esp
  414e13:	xor    al,0x9b
  414e15:	and    BYTE PTR [ebx-0x65],dh
  414e18:	xor    al,0x3
  414e1a:	in     eax,0x94
  414e1c:	push   edi
  414e1d:	pop    esi
  414e1e:	aaa    
  414e1f:	pop    ebp
  414e20:	in     al,dx
  414e21:	out    0x1b,al
  414e23:	fld    DWORD PTR [edi*8+0xa885311]
  414e2a:	or     dh,BYTE PTR [edx+0x7]
  414e2d:	push   ss
  414e2e:	jo     0x414dc1
  414e30:	outs   dx,DWORD PTR ds:[esi]
  414e31:	retf   0xf18e
  414e34:	loope  0x414dbd
  414e36:	fstp   TBYTE PTR [ebx]
  414e38:	mov    cl,bl
  414e3a:	enter  0x2692,0x58
  414e3e:	jae    0x414ded
  414e40:	pop    edx
  414e41:	in     al,0xd5
  414e43:	fs dec esp
  414e45:	fild   QWORD PTR [edi-0x1]
  414e48:	pop    ebx
  414e49:	xor    ebp,edi
  414e4b:	ja     0x414e5e
  414e4d:	xor    DWORD PTR [esp+ebx*8],0x822f93c8
  414e54:	pushf  
  414e55:	adc    al,0xaf
  414e57:	aas    
  414e58:	retf   
  414e59:	scas   al,BYTE PTR es:[edi]
  414e5a:	and    bh,cl
  414e5c:	mov    esi,DWORD PTR [eax+0x72657bd3]
  414e62:	stos   DWORD PTR es:[edi],eax
  414e63:	lea    ebp,[eax-0x218f3bc2]
  414e69:	imul   ebx,DWORD PTR [eax+0x5ff4c0f1],0xb5be3b94
  414e73:	sti    
  414e74:	pushf  
  414e75:	adc    BYTE PTR [edi],dl
  414e77:	add    esi,ebp
  414e79:	jecxz  0x414e35
  414e7b:	inc    ebx
  414e7c:	inc    ecx
  414e7d:	mov    al,0xe9
  414e7f:	aas    
  414e80:	push   esp
  414e81:	daa    
  414e82:	mov    bh,0x2f
  414e84:	fild   QWORD PTR [ebp-0xcb0f237]
  414e8a:	loope  0x414e54
  414e8c:	shl    bh,cl
  414e8e:	pop    eax
  414e8f:	push   ebx
  414e90:	push   ecx
  414e91:	dec    esi
  414e92:	lahf   
  414e93:	mov    cl,0x77
  414e95:	out    dx,eax
  414e96:	call   0x70babaf5
  414e9b:	inc    edi
  414e9c:	cmp    BYTE PTR [edi+0x44],dl
  414e9f:	xchg   ebp,eax
  414ea0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ea1:	retf   0x6ef0
  414ea4:	nop
  414ea5:	inc    edx
  414ea6:	retf   
  414ea7:	mov    esi,0x51409bb2
  414eac:	(bad)  
  414ead:	hlt    
  414eae:	push   edi
  414eaf:	jge    0x414ebf
  414eb1:	js     0x414ed1
  414eb3:	cmp    esi,DWORD PTR [ebx-0x5c]
  414eb6:	sahf   
  414eb7:	push   ss
  414eb8:	mov    ebp,0x21f48dd3
  414ebd:	or     ch,BYTE PTR [edx+0x45]
  414ec0:	daa    
  414ec1:	fwait
  414ec2:	jno    0x414e91
  414ec4:	cwde   
  414ec5:	mov    ebx,0x80a0203
  414eca:	xchg   ebp,eax
  414ecb:	dec    eax
  414ecc:	out    0xed,al
  414ece:	inc    esi
  414ecf:	scas   al,BYTE PTR es:[edi]
  414ed0:	add    eax,DWORD PTR [ebx-0x1c]
  414ed3:	pop    ebx
  414ed4:	add    al,0xbb
  414ed6:	and    esp,DWORD PTR [esi-0x12]
  414ed9:	mul    BYTE PTR [esi]
  414edb:	cmp    ecx,edi
  414edd:	mov    DWORD PTR [ebx+0x73],ebx
  414ee0:	jb     0x414e97
  414ee2:	out    0xe9,al
  414ee4:	es mov esp,0xfafb1c70
  414eea:	dec    esi
  414eeb:	mov    esp,0x33df8ec9
  414ef0:	mov    edx,0x6cac30da
  414ef5:	mov    ebp,DWORD PTR [ecx-0x76224ce2]
  414efb:	scas   al,BYTE PTR es:[edi]
  414efc:	adc    ah,ch
  414efe:	jns    0x414eb6
  414f00:	je     0x414ebe
  414f02:	sub    al,0xe1
  414f04:	mov    dh,0xe0
  414f06:	aaa    
  414f07:	retf   
  414f08:	repnz dec eax
  414f0a:	push   ecx
  414f0b:	jo     0x414f6e
  414f0d:	jo     0x414ec5
  414f0f:	retf   
  414f10:	les    edx,FWORD PTR [edx+0x709b0ed3]
  414f16:	push   cs
  414f17:	lahf   
  414f18:	add    DWORD PTR [edx-0x4d95c248],edx
  414f1e:	hlt    
  414f1f:	mov    dl,0xbf
  414f21:	ss pop esp
  414f23:	or     BYTE PTR ds:0xbc76c766,ah
  414f29:	leave  
  414f2a:	mov    edi,0x4f315034
  414f2f:	mov    WORD PTR [esi+0x354d91e0],cs
  414f35:	popf   
  414f36:	hlt    
  414f37:	cmp    ch,cl
  414f39:	xchg   esp,ebx
  414f3b:	mov    al,0x1d
  414f3d:	and    esi,DWORD PTR [ebp-0x2d]
  414f40:	(bad)  [edx]
  414f42:	cwde   
  414f43:	mov    ds:0xcad1185a,al
  414f48:	push   es
  414f49:	daa    
  414f4a:	sbb    eax,0xdc22926c
  414f4f:	fsubr  DWORD PTR [esi+0x64c47a15]
  414f55:	daa    
  414f56:	mov    al,0xde
  414f58:	sbb    eax,0x3790eeda
  414f5d:	jns    0x414f48
  414f5f:	and    eax,DWORD PTR [eax]
  414f61:	adc    DWORD PTR [bx+di-0x6b],esi
  414f65:	xor    bl,BYTE PTR [edx]
  414f67:	sub    eax,0x55dc41a0
  414f6c:	in     eax,dx
  414f6d:	ret    
  414f6e:	xor    bl,BYTE PTR [eax-0x1c]
  414f71:	cmp    dh,ah
  414f73:	sub    DWORD PTR [edi+ebp*8-0x59],eax
  414f77:	dec    edi
  414f78:	pop    edi
  414f79:	and    eax,0x35982b3a
  414f7e:	adc    BYTE PTR [esp+ecx*2-0x3e6cef5],bl
  414f85:	dec    edx
  414f86:	add    DWORD PTR [esp+ecx*4],ecx
  414f89:	mov    esp,0xc70c9a9c
  414f8e:	mov    eax,0xa9bd0542
  414f93:	test   BYTE PTR [eax-0x53],al
  414f96:	lds    ebx,FWORD PTR [ecx+0x58]
  414f99:	mov    al,ds:0x1fdabfe5
  414f9e:	mov    al,bh
  414fa0:	stos   DWORD PTR es:[edi],eax
  414fa1:	fsub   st(2),st
  414fa3:	xchg   ebx,eax
  414fa4:	sbb    DWORD PTR [ecx],ebp
  414fa6:	adc    al,0x40
  414fa8:	sub    edi,DWORD PTR gs:[ebx]
  414fab:	test   eax,0xe3197c7
  414fb0:	ror    DWORD PTR [ecx],0x5
  414fb3:	and    bl,BYTE PTR [ecx-0x80]
  414fb6:	fisubr WORD PTR [eax+0x6a]
  414fb9:	shr    DWORD PTR [edx-0x33],cl
  414fbc:	stos   BYTE PTR es:[edi],al
  414fbd:	jecxz  0x414f83
  414fbf:	outs   dx,BYTE PTR ds:[esi]
  414fc0:	dec    esi
  414fc1:	leave  
  414fc2:	in     al,0xbd
  414fc4:	xchg   ecx,eax
  414fc5:	push   ds
  414fc6:	mov    ecx,0xa554cbbe
  414fcb:	dec    edx
  414fcc:	shl    BYTE PTR [ecx+0xf],0x91
  414fd0:	repz sbb esp,DWORD PTR ds:0xc30163a2
  414fd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fd8:	(bad)  
  414fd9:	sub    ebx,DWORD PTR gs:[ecx+0x3a8fc241]
  414fe0:	(bad)  
  414fe2:	sbb    esi,DWORD PTR [esi-0x1e]
  414fe5:	cwde   
  414fe6:	icebp  
  414fe7:	retf   
  414fe8:	jae    0x414faa
  414fea:	pop    eax
  414feb:	cmp    DWORD PTR [ebp-0x422951f2],eax
  414ff1:	or     al,0x89
  414ff3:	pop    esi
  414ff4:	jl     0x41503c
  414ff6:	dec    edx
  414ff7:	in     al,dx
  414ff8:	cld    
  414ff9:	xor    cl,BYTE PTR [edi+esi*1-0x465b9303]
  415000:	xchg   edx,eax
  415001:	enter  0x2ff7,0x6d
  415005:	je     0x414ff4
  415007:	sub    al,BYTE PTR [ebp+0x3f]
  41500a:	cmp    DWORD PTR fs:[edi-0xd91f701],ebp
  415011:	cli    
  415012:	lea    esp,[ecx]
  415014:	loopne 0x414ff4
  415016:	aam    0x73
  415018:	std    
  415019:	mov    BYTE PTR [ecx],bl
  41501b:	cli    
  41501c:	mov    edx,0x1259065
  415021:	pop    ecx
  415022:	xor    al,0xd5
  415024:	dec    ebp
  415025:	iret   
  415026:	hlt    
  415027:	jno    0x41503d
  415029:	mov    edi,0xa3f82bde
  41502e:	stos   BYTE PTR es:[edi],al
  41502f:	repnz xchg esi,eax
  415031:	dec    edx
  415032:	out    0x5,eax
  415034:	add    BYTE PTR [ebp-0x9],0xe9
  415038:	mov    ebp,0x84b3aa2e
  41503d:	mov    dl,0x9f
  41503f:	test   eax,0xbec22831
  415044:	pop    ss
  415045:	and    al,0x7a
  415047:	(bad)  
  415048:	adc    BYTE PTR [edi-0x4],bl
  41504b:	in     eax,0xef
  41504d:	sub    al,0x51
  41504f:	adc    al,0xe3
  415051:	div    esp
  415053:	xchg   ebp,eax
  415054:	dec    eax
  415055:	sbb    al,0x1e
  415057:	lock outs dx,DWORD PTR ds:[esi]
  415059:	stos   BYTE PTR es:[edi],al
  41505a:	xchg   edi,eax
  41505b:	add    eax,ebx
  41505d:	arpl   WORD PTR [ebx-0x76],cx
  415060:	adc    al,0xce
  415062:	dec    ebx
  415063:	sar    BYTE PTR [eax+0x29df0ca9],cl
  415069:	repz push es
  41506b:	mov    cl,0x8d
  41506d:	cmp    eax,0xff36332b
  415072:	or     eax,0x1546e980
  415077:	or     DWORD PTR [edx-0x26],0xffffffe2
  41507b:	jl     0x415087
  41507d:	int    0x61
  41507f:	mov    dh,0xb6
  415081:	xor    eax,0xcf7d5ad6
  415086:	mul    DWORD PTR [edi+ebx*4-0x80d9330]
  41508d:	fadd   st,st(6)
  41508f:	(bad)  
  415091:	cwde   
  415092:	xchg   esp,eax
  415093:	push   ebx
  415094:	xchg   DWORD PTR [ebx+0x4e],edx
  415097:	je     0x41507e
  415099:	test   eax,0xba7fdb93
  41509e:	xor    DWORD PTR [eax-0x43],eax
  4150a1:	retf   0xc53a
  4150a4:	or     bl,BYTE PTR [ecx-0x4708f7ce]
  4150aa:	mov    bl,0xfa
  4150ac:	jle    0x41510f
  4150ae:	mov    ah,0x48
  4150b0:	or     esp,esp
  4150b2:	bound  esi,QWORD PTR [ebp-0x59]
  4150b5:	add    ecx,edx
  4150b7:	adc    eax,0x8bdc5adb
  4150bc:	and    al,0x1f
  4150be:	push   edi
  4150bf:	xor    esi,esi
  4150c1:	jmp    0x4713:0xf4d4a333
  4150c8:	sub    eax,0xd5a7d08d
  4150cd:	adc    DWORD PTR [esi],ebp
  4150cf:	rol    DWORD PTR [edx-0x7137d0d3],cl
  4150d5:	and    esp,edx
  4150d7:	pop    ecx
  4150d8:	call   0xc0d899cf
  4150dd:	shl    BYTE PTR [ecx],1
  4150df:	pop    ss
  4150e0:	jne    0x41508f
  4150e2:	cmp    eax,0x4336cbce
  4150e7:	inc    eax
  4150e8:	xchg   ebp,eax
  4150e9:	push   edx
  4150ea:	mov    dl,0xa
  4150ec:	xlat   BYTE PTR ds:[ebx]
  4150ed:	pop    ecx
  4150ee:	iret   
  4150ef:	nop
  4150f0:	inc    ecx
  4150f1:	xchg   ebx,eax
  4150f2:	jbe    0x4150ba
  4150f4:	cdq    
  4150f5:	mov    ch,0x85
  4150f7:	es stos DWORD PTR es:[edi],eax
  4150f9:	xor    eax,0x9218e8c0
  4150fe:	add    ebp,DWORD PTR [edx+0x7f5e445d]
  415104:	mov    al,0x56
  415106:	test   ch,cl
  415108:	hlt    
  415109:	pop    ebp
  41510a:	pop    edi
  41510b:	dec    esi
  41510c:	jp     0x41518c
  41510e:	fnstsw WORD PTR [ecx-0x2a]
  415111:	and    al,0x5c
  415113:	sar    edi,0xfc
  415116:	dec    ebx
  415117:	data16 ja 0x415192
  41511a:	and    al,0xa
  41511c:	or     BYTE PTR cs:[ecx],ah
  41511f:	cli    
  415120:	sbb    esi,DWORD PTR [ebp-0x6e]
  415123:	jnp    0x415172
  415125:	fscale 
  415127:	rol    BYTE PTR [ebx],0x42
  41512a:	push   ecx
  41512b:	inc    edx
  41512c:	sub    DWORD PTR [edi+0x1c9d1ed8],0x34
  415133:	xlat   BYTE PTR ds:[ebx]
  415134:	adc    eax,ebx
  415136:	or     BYTE PTR [ecx+0x1a],dh
  415139:	dec    ecx
  41513a:	xchg   DWORD PTR [ebx+0x24],ebp
  41513d:	aam    0xb1
  41513f:	xor    dh,bh
  415141:	imul   edx,DWORD PTR [edx+0x5d],0xfffffff3
  415145:	dec    edx
  415146:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415147:	aaa    
  415148:	jg     0x41515e
  41514a:	mov    ebx,gs
  41514c:	fwait
  41514d:	rcl    BYTE PTR [edx+0x75],cl
  415150:	adc    ch,dh
  415152:	aad    0x2a
  415154:	jecxz  0x4150e0
  415156:	jnp    0x4151d3
  415158:	fild   WORD PTR [edi-0x3bc62323]
  41515e:	loopne 0x415133
  415160:	mov    ah,0xac
  415162:	dec    ebx
  415163:	lock jnp 0x415198
  415166:	sub    eax,0x8e060161
  41516b:	dec    ecx
  41516c:	mov    ds:0x73b4eb34,al
  415171:	mov    edx,0xf514f1a9
  415176:	cmp    bl,BYTE PTR [ebx+0x32c53e43]
  41517c:	scas   eax,DWORD PTR es:[edi]
  41517d:	out    0x87,eax
  41517f:	xchg   DWORD PTR ds:0x35f3dc68,edi
  415185:	dec    ebp
  415186:	inc    edx
  415187:	sub    ch,BYTE PTR [ecx+0x30b1dde5]
  41518d:	push   cs
  41518e:	jecxz  0x41512b
  415190:	test   BYTE PTR ds:0xddd66666,bl
  415196:	add    al,0xd4
  415198:	sbb    ebp,ebx
  41519a:	mov    ebx,DWORD PTR [ebx]
  41519c:	dec    BYTE PTR [esi+edi*2-0x95ee637]
  4151a3:	retf   
  4151a4:	push   esi
  4151a5:	inc    esp
  4151a6:	and    dh,0x37
  4151a9:	in     eax,0x3a
  4151ab:	inc    esp
  4151ac:	sub    dl,0xe
  4151af:	mov    bl,0xf8
  4151b1:	push   ebx
  4151b2:	pop    ebp
  4151b3:	cld    
  4151b4:	cmp    DWORD PTR [edx-0x79],ecx
  4151b7:	ret    0xb629
  4151ba:	mov    edi,0x35bf0d8d
  4151bf:	repz or bh,BYTE PTR [edx+0x3c]
  4151c3:	sub    BYTE PTR [edi-0x1c11b626],dh
  4151c9:	xlat   BYTE PTR ds:[ebx]
  4151ca:	jns    0x4151ac
  4151cc:	int3   
  4151cd:	nop
  4151ce:	cmc    
  4151cf:	xor    DWORD PTR [edi-0x5f5ee2a3],0xffffff8b
  4151d6:	push   ebx
  4151d7:	pop    esi
  4151d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151d9:	or     DWORD PTR [ecx+0x41e83d75],edi
  4151df:	arpl   WORD PTR [esi-0x2ab66436],cx
  4151e5:	js     0x415237
  4151e7:	stos   BYTE PTR es:[edi],al
  4151e8:	scas   al,BYTE PTR es:[edi]
  4151e9:	pop    ecx
  4151ea:	mov    eax,ds:0xe0b5f47a
  4151ef:	(bad)  
  4151f0:	shl    DWORD PTR [ebp-0x21],0xcf
  4151f4:	mov    edx,0xd6f77da2
  4151f9:	leave  
  4151fa:	ds mov eax,0x710a061b
  415200:	mov    dl,0x90
  415202:	mov    ds:0xa43ea36e,al
  415207:	push   eax
  415208:	or     eax,0xd9d3e8d8
  41520d:	in     al,dx
  41520e:	pop    esi
  41520f:	lods   eax,DWORD PTR ds:[esi]
  415210:	cld    
  415211:	std    
  415212:	das    
  415213:	mov    edi,0x3633800
  415218:	and    ecx,DWORD PTR [esi+0x11850ac4]
  41521e:	dec    BYTE PTR ds:0x79db929b
  415224:	adc    ebp,DWORD PTR [esi-0x5d]
  415227:	in     eax,dx
  415228:	add    ebx,DWORD PTR [edx+0x3f28286f]
  41522e:	(bad)  
  41522f:	push   0x7a
  415231:	mov    BYTE PTR [ebx-0x3e0adba8],bl
  415237:	cmp    BYTE PTR [edx],0x7a
  41523a:	(bad)  
  41523b:	out    dx,eax
  41523c:	inc    edx
  41523d:	xchg   esp,eax
  41523e:	add    cl,ah
  415240:	jbe    0x415207
  415242:	les    ebp,FWORD PTR [eax-0xfa43e94]
  415248:	loop   0x41521c
  41524a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41524b:	inc    ebx
  41524c:	inc    esp
  41524d:	sub    al,0xc4
  41524f:	leave  
  415250:	adc    DWORD PTR [esi],eax
  415252:	mov    ah,0xe6
  415254:	ja     0x415202
  415256:	push   ds
  415257:	sbb    eax,0xbf0a106b
  41525c:	loope  0x4151eb
  41525e:	cmp    DWORD PTR [ebp-0x50],esp
  415261:	sub    ecx,ebx
  415263:	mov    ds:0x3235106c,eax
  415268:	scas   al,BYTE PTR es:[edi]
  415269:	and    DWORD PTR [edx-0x252aa86b],esi
  41526f:	xchg   edi,eax
  415270:	adc    eax,0x61f3f5af
  415275:	out    dx,al
  415276:	fdivr  QWORD PTR [ebp+0x8cb2859]
  41527c:	jmp    0x43c:0x7b676f0e
  415283:	add    eax,0x19af276b
  415288:	jnp    0x415247
  41528a:	cmp    BYTE PTR [esi+0x47],bl
  41528d:	into   
  41528e:	sub    al,0xbc
  415290:	xor    dh,BYTE PTR [edi-0x30]
  415293:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415294:	or     al,0x6
  415297:	pop    ss
  415298:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415299:	jmp    DWORD PTR [eax+0x60b45f45]
  41529f:	xor    esi,0x87eed3a4
  4152a5:	xchg   ebp,eax
  4152a6:	jg     0x41522d
  4152a8:	xor    al,0xd3
  4152aa:	and    ecx,DWORD PTR [ebx+0x1]
  4152ad:	pusha  
  4152ae:	stos   BYTE PTR es:[edi],al
  4152af:	dec    DWORD PTR [edi-0x625fbd85]
  4152b5:	out    dx,eax
  4152b6:	push   es
  4152b7:	dec    eax
  4152b8:	or     esi,DWORD PTR [eax]
  4152ba:	push   esp
  4152bb:	xor    eax,0xceb68441
  4152c0:	and    BYTE PTR [ebp-0x2],dl
  4152c3:	es mov al,0x52
  4152c6:	loop   0x415289
  4152c8:	sub    eax,0x1ea0ab3a
  4152cd:	aam    0xe0
  4152cf:	sbb    eax,DWORD PTR [edi+0xe]
  4152d2:	and    eax,0x9d03cad4
  4152d7:	jno    0x41534c
  4152d9:	or     ecx,DWORD PTR [ecx-0x7c5dd178]
  4152df:	mov    edi,0x2d9293ff
  4152e4:	gs xor al,0x6c
  4152e7:	dec    edi
  4152e8:	mov    cl,0x56
  4152ea:	mov    edx,DWORD PTR [edx+0x55f421cd]
  4152f0:	pushf  
  4152f1:	jle    0x41527a
  4152f3:	imul   ebp,DWORD PTR [ebx],0xcc082e50
  4152f9:	(bad)  
  4152fa:	jmp    FWORD PTR [eax+0x56]
  4152fd:	push   esp
  4152fe:	xlat   BYTE PTR ds:[ebx]
  4152ff:	dec    ebx
  415300:	stc    
  415301:	shr    DWORD PTR ds:0xa752ce3a,cl
  415307:	shr    BYTE PTR [ebp-0x6a],0x55
  41530b:	mov    edi,0xf99032eb
  415310:	mov    edi,0x2e819bc6
  415315:	xchg   esp,eax
  415316:	std    
  415317:	cmp    BYTE PTR [eax],0x57
  41531a:	mov    esi,0xa5b2c3f1
  41531f:	dec    esp
  415320:	pop    ss
  415321:	pop    esp
  415322:	mov    al,ds:0x46741638
  415327:	mov    al,0x1d
  415329:	mov    dh,0x5b
  41532b:	jmp    0x627549f2
  415330:	jmp    0x415342
  415332:	push   ebp
  415333:	cmp    eax,0x249f5e68
  415338:	push   eax
  415339:	inc    edi
  41533a:	or     DWORD PTR [ecx],ecx
  41533c:	test   al,0xf8
  41533e:	adc    ebx,DWORD PTR [esi-0x2ba697a3]
  415344:	adc    bh,cl
  415346:	mov    esp,0x59d4a4e6
  41534b:	popf   
  41534c:	cmp    eax,0x72dec9cf
  415351:	cmp    BYTE PTR [esi],bh
  415353:	mov    DWORD PTR [ebp+0x5bea9620],ebp
  415359:	sub    ecx,ebp
  41535b:	(bad)  
  41535d:	loop   0x415319
  41535f:	jbe    0x4152f8
  415361:	lods   al,BYTE PTR ds:[esi]
  415362:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415363:	sbb    BYTE PTR [edi],dl
  415365:	les    edx,FWORD PTR [eax+0x4688fedd]
  41536b:	and    ax,0x4a7d
  41536f:	mov    ebp,0xab822fe6
  415374:	fbld   TBYTE PTR ds:0x7ec70058
  41537a:	cmp    cl,BYTE PTR [ebx+0x4c]
  41537d:	mov    eax,esp
  41537f:	push   ebp
  415380:	jno    0x4153b2
  415382:	add    eax,DWORD PTR ds:[ebx-0x73]
  415386:	mov    ebx,0x280e2a3
  41538b:	lock jmp 0x415368
  41538e:	inc    ebx
  41538f:	pop    ebp
  415390:	out    0xa7,eax
  415392:	jo     0x4153ed
  415394:	fnstsw WORD PTR [edx]
  415396:	push   ss
  415397:	or     DWORD PTR [eax-0x2cb8e8bd],0xaa1f513b
  4153a1:	inc    ebp
  4153a2:	(bad)  
  4153a3:	in     eax,dx
  4153a4:	or     bl,bh
  4153a6:	idiv   BYTE PTR [edx+0x1799bc8f]
  4153ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153ad:	dec    edx
  4153ae:	scas   al,BYTE PTR es:[edi]
  4153af:	call   0xbfb3:0x17badcaf
  4153b6:	std    
  4153b7:	pop    edi
  4153b8:	add    dl,BYTE PTR [ebp+0xbd876da]
  4153be:	jb     0x41538a
  4153c0:	mov    ecx,0x471ec1c0
  4153c5:	or     DWORD PTR [ebp+0x50f4c527],edx
  4153cb:	lods   eax,DWORD PTR ds:[esi]
  4153cc:	das    
  4153cd:	mov    ds:0x5041cf40,eax
  4153d2:	ss xor cl,al
  4153d5:	mov    ebx,0x4c2cfc5b
  4153da:	adc    esp,eax
  4153dc:	test   BYTE PTR [ebp+0x75ff4f04],ch
  4153e2:	inc    eax
  4153e3:	sti    
  4153e4:	adc    BYTE PTR [eax+0x3d],ch
  4153e7:	clc    
  4153e8:	in     al,dx
  4153e9:	daa    
  4153ea:	cmp    eax,DWORD PTR [ecx]
  4153ec:	fs dec edx
  4153ee:	das    
  4153ef:	nop
  4153f0:	mov    cl,0x88
  4153f2:	out    dx,al
  4153f3:	xchg   esp,eax
  4153f4:	mov    bh,0xd5
  4153f6:	scas   eax,DWORD PTR es:[edi]
  4153f7:	xor    DWORD PTR [eax-0x44],esi
  4153fa:	pop    es
  4153fb:	or     al,0x59
  4153fd:	aad    0x46
  4153ff:	pop    ds
  415400:	das    
  415401:	cmp    al,0x61
  415403:	mov    bh,0xe7
  415405:	pop    esp
  415406:	sti    
  415407:	pusha  
  415408:	mov    edi,0x568f966c
  41540d:	push   edi
  41540e:	jno    0x4153d8
  415410:	cwde   
  415411:	not    DWORD PTR [edi+0xd]
  415414:	fucomp st(3)
  415416:	sub    BYTE PTR [edi],dh
  415418:	scas   al,BYTE PTR es:[edi]
  415419:	cld    
  41541a:	shr    DWORD PTR [edx-0x5f],0x54
  41541e:	xor    dh,al
  415420:	repz push esp
  415422:	inc    esp
  415423:	pop    ds
  415424:	jle    0x415417
  415426:	aam    0xdd
  415428:	and    ah,ah
  41542a:	jmp    0xea5a6e97
  41542f:	mov    esi,0x800229a4
  415434:	inc    ecx
  415435:	fmul   DWORD PTR [ebp+0x52]
  415438:	fisubr WORD PTR [eax]
  41543a:	mov    ds:0xc61a27af,al
  41543f:	dec    edi
  415440:	ja     0x41545f
  415442:	pop    esi
  415443:	outs   dx,DWORD PTR ds:[esi]
  415444:	addr16 jg 0x415464
  415447:	test   BYTE PTR [edi+0x7a],bl
  41544a:	inc    eax
  41544b:	sbb    ah,BYTE PTR [ecx+0x4b]
  41544e:	div    ah
  415450:	cmp    eax,0x22e1154c
  415455:	xchg   edx,eax
  415456:	mov    bh,0x19
  415458:	and    DWORD PTR [ebx-0x60],esi
  41545b:	pop    ebp
  41545c:	(bad)  
  41545d:	and    al,0xca
  41545f:	dec    edx
  415460:	ds push esi
  415462:	retf   0xa659
  415465:	cmp    BYTE PTR [edx+0x10],ah
  415468:	hlt    
  415469:	inc    esi
  41546a:	js     0x4154dd
  41546c:	daa    
  41546d:	jg     0x415433
  41546f:	into   
  415470:	push   ss
  415471:	idiv   esp
  415473:	cwde   
  415474:	out    dx,al
  415475:	cwde   
  415476:	(bad)  
  415477:	xor    DWORD PTR [esi+ecx*8-0x7a34112],eax
  41547e:	(bad)  
  41547f:	cmp    al,BYTE PTR [eax]
  415481:	push   edx
  415482:	cld    
  415483:	add    DWORD PTR [ecx+0x537aa059],edi
  415489:	lea    esp,[esi]
  41548b:	pop    ds
  41548c:	xchg   esi,eax
  41548d:	dec    esi
  41548e:	mov    ?,ecx
  415490:	mov    al,ds:0x3672bf5a
  415495:	and    al,0x90
  415497:	jmp    0xe08ad91e
  41549c:	iret   
  41549d:	mov    edi,DWORD PTR [edx+0x2f389271]
  4154a3:	lahf   
  4154a4:	mov    ebx,0xccdf8244
  4154a9:	jle    0x415436
  4154ab:	pusha  
  4154ac:	xchg   BYTE PTR [edx+0xd],dh
  4154af:	xchg   BYTE PTR [eax],al
  4154b1:	or     ebx,ecx
  4154b3:	scas   eax,DWORD PTR es:[edi]
  4154b4:	add    ah,bh
  4154b6:	std    
  4154b7:	ret    
  4154b8:	sub    ah,BYTE PTR [edi]
  4154ba:	jnp    0x41544e
  4154bc:	iret   
  4154bd:	rcr    edi,0xbe
  4154c0:	leave  
  4154c1:	xor    eax,0x9d5acc5
  4154c6:	dec    edi
  4154c7:	jecxz  0x415520
  4154c9:	and    edx,edi
  4154cb:	test   BYTE PTR [esi-0xc958601],0x6
  4154d2:	pop    edi
  4154d3:	mov    BYTE PTR [ebp+0x3873d2f7],bl
  4154d9:	jbe    0x415491
  4154db:	cmp    eax,0xea048043
  4154e0:	mov    bl,0x78
  4154e2:	pusha  
  4154e3:	jbe    0x4154ba
  4154e5:	in     al,0x75
  4154e7:	sub    eax,0x78598d84
  4154ec:	shl    BYTE PTR [ecx-0x48a6cdff],0xf4
  4154f3:	mov    ecx,0xae3e963a
  4154f8:	popa   
  4154f9:	adc    eax,0x1788ac5d
  4154fe:	stos   DWORD PTR es:[edi],eax
  4154ff:	push   esi
  415500:	outs   dx,BYTE PTR ds:[esi]
  415501:	ins    BYTE PTR es:[edi],dx
  415502:	sbb    bh,BYTE PTR [eax+edi*1-0x7d425ed4]
  415509:	je     0x415531
  41550b:	xchg   esi,eax
  41550c:	push   ebx
  41550d:	(bad)  [eax+0x49]
  415510:	xchg   ecx,eax
  415511:	add    ebp,edx
  415513:	inc    ebx
  415514:	xor    eax,0xa8c1fa9d
  415519:	sti    
  41551a:	xor    DWORD PTR [edi],edx
  41551c:	inc    ebx
  41551d:	ins    BYTE PTR es:[edi],dx
  41551e:	inc    esp
  41551f:	in     al,0x8e
  415521:	xchg   ebp,eax
  415522:	enter  0x42be,0x93
  415526:	inc    ecx
  415527:	or     dl,BYTE PTR [ecx-0x576caf72]
  41552d:	adc    BYTE PTR [eax],cl
  41552f:	cdq    
  415530:	test   DWORD PTR [ecx],0x47c60f46
  415536:	sbb    ch,dh
  415538:	cwde   
  415539:	mov    eax,0xf6f40fc3
  41553e:	inc    esi
  41553f:	icebp  
  415540:	ret    
  415541:	xlat   BYTE PTR ds:[ebx]
  415542:	in     al,0xaa
  415544:	xlat   BYTE PTR ds:[ebx]
  415545:	sbb    eax,0xea50b1c1
  41554a:	in     al,dx
  41554b:	jmp    0x2a66bc4b
  415550:	sub    al,dl
  415552:	mov    ah,dl
  415554:	aam    0xab
  415556:	stc    
  415557:	loopne 0x415548
  415559:	(bad)  
  41555a:	shr    BYTE PTR [esi+0x5298f188],cl
  415560:	mov    dh,0x17
  415562:	std    
  415563:	cmp    ah,BYTE PTR [ecx+0x74]
  415566:	aas    
  415567:	cmp    DWORD PTR [ebx+0x57e263ae],ebp
  41556d:	jp     0x415552
  41556f:	dec    esp
  415570:	lods   eax,DWORD PTR ds:[esi]
  415571:	adc    eax,0xad82ef57
  415576:	xor    ebx,DWORD PTR [esi-0x17ccdc70]
  41557c:	or     cl,BYTE PTR [ecx+0x4c]
  41557f:	dec    ebp
  415580:	stos   DWORD PTR es:[edi],eax
  415581:	cwde   
  415582:	pop    eax
  415583:	in     eax,dx
  415584:	xchg   edi,eax
  415585:	cli    
  415586:	mov    ds:0x9d137ba4,eax
  41558b:	pop    edi
  41558c:	sbb    DWORD PTR [esi+edi*4],0x2dc1580f
  415593:	mov    edi,0xa4ca4893
  415598:	fidivr WORD PTR [esi+0x5d06bff4]
  41559e:	pop    ecx
  41559f:	idiv   BYTE PTR [ebp-0x30697ec7]
  4155a5:	pop    edx
  4155a6:	lahf   
  4155a7:	dec    edx
  4155a8:	or     esp,ecx
  4155aa:	int    0xc6
  4155ac:	inc    edi
  4155ad:	in     al,dx
  4155ae:	das    
  4155af:	jbe    0x41556d
  4155b1:	mov    edi,0x5f29142b
  4155b6:	int    0x8a
  4155b8:	dec    ecx
  4155b9:	fs cmp esp,esi
  4155bc:	loopne 0x4155c8
  4155be:	mov    al,ds:0x1a54cce4
  4155c3:	push   esi
  4155c4:	scas   eax,DWORD PTR es:[edi]
  4155c5:	jno    0x4155f7
  4155c7:	add    DWORD PTR [edx],ebp
  4155c9:	cmp    eax,0x18aba286
  4155ce:	sbb    eax,0xce7bb8e9
  4155d3:	xor    BYTE PTR [ebx+0x51ea23c6],bh
  4155d9:	add    eax,0x1c277224
  4155de:	jns    0x41562f
  4155e0:	ins    DWORD PTR es:[edi],dx
  4155e1:	mov    cl,0xf9
  4155e3:	inc    esp
  4155e4:	cmp    BYTE PTR [ebx-0x13],ch
  4155e7:	test   BYTE PTR [ebp-0x71],bl
  4155ea:	fs dec eax
  4155ec:	loopne 0x415669
  4155ee:	in     eax,dx
  4155ef:	pop    esi
  4155f0:	mov    ds:0xca716f1f,eax
  4155f5:	aam    0x70
  4155f7:	add    ch,BYTE PTR [edi-0x7d54876b]
  4155fd:	sbb    al,0x5
  4155ff:	(bad)  
  415600:	ins    BYTE PTR es:[edi],dx
  415601:	inc    esp
  415602:	and    BYTE PTR [esi+0x46],bl
  415605:	xor    DWORD PTR [esi-0x5c],esp
  415608:	rcr    cl,0x4a
  41560b:	inc    eax
  41560c:	out    0x76,eax
  41560e:	pop    ebp
  41560f:	mov    cl,0x76
  415611:	sahf   
  415612:	jae    0x415650
  415614:	push   ss
  415615:	push   0xc13aedd2
  41561a:	sti    
  41561b:	cdq    
  41561c:	push   esi
  41561d:	test   DWORD PTR [eax+0x301b6f64],ecx
  415623:	call   FWORD PTR [esi+ebx*8+0x2bc25e28]
  41562a:	inc    ebp
  41562b:	ss out 0x8b,al
  41562e:	(bad)
  415631:	test   BYTE PTR [ebx-0x2f23225b],0x94
  415638:	jg     0x41568f
  41563a:	jl     0x415634
  41563c:	xor    DWORD PTR [edx+0x71],ebp
  41563f:	mov    dh,0x96
  415641:	inc    ebx
  415642:	into   
  415643:	in     al,0x5e
  415645:	jbe    0x4155fd
  415647:	ins    DWORD PTR es:[edi],dx
  415648:	add    ch,BYTE PTR [edi-0x63]
  41564b:	(bad)
  41564f:	retf   0xd0a
  415652:	hlt    
  415653:	jg     0x4156c8
  415655:	and    ah,bh
  415657:	mov    ebx,0x402059f1
  41565c:	adc    al,0x9f
  41565e:	jb     0x41569e
  415660:	sub    ch,cl
  415662:	ss and al,0x9a
  415665:	jbe    0x415609
  415667:	mov    edi,0xad47adb7
  41566c:	pop    ecx
  41566d:	pop    ebx
  41566e:	fnstsw WORD PTR [ebp+edi*4+0x49]
  415672:	adc    eax,DWORD PTR [eax+0x6b]
  415675:	les    ecx,FWORD PTR [ecx+0x22]
  415678:	and    BYTE PTR [edx],0xbb
  41567b:	sahf   
  41567c:	das    
  41567d:	shl    cl,0xf4
  415680:	jae    0x415678
  415682:	mov    ch,0xac
  415684:	push   0xffffffc2
  415686:	shr    ch,1
  415688:	stos   DWORD PTR es:[edi],eax
  415689:	add    bl,BYTE PTR [edx]
  41568b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41568c:	dec    edi
  41568d:	xor    DWORD PTR [ebp+esi*4+0x62570c42],edx
  415694:	xchg   ecx,eax
  415695:	xor    al,0xa7
  415697:	in     al,0x2f
  415699:	fnsave [esi]
  41569b:	test   al,0x88
  41569d:	xchg   esi,eax
  41569e:	ficom  WORD PTR [eax+0x79b8eb89]
  4156a4:	xchg   dl,cl
  4156a6:	mov    ebx,0x5b07f9f6
  4156ab:	inc    ebp
  4156ac:	nop
  4156ad:	outs   dx,DWORD PTR ds:[esi]
  4156ae:	fs addr16 dec edi
  4156b1:	adc    BYTE PTR [ecx],0xd3
  4156b4:	sar    bl,cl
  4156b6:	sub    al,BYTE PTR [ecx-0x2d536c05]
  4156bc:	cmp    BYTE PTR [eax-0x4222cd4e],ah
  4156c2:	mov    al,0xb9
  4156c4:	sbb    al,0xdb
  4156c6:	adc    DWORD PTR [eax+0x66e51679],eax
  4156cc:	mov    DWORD PTR [ecx-0x6b],0xeaa8d5d
  4156d3:	inc    esi
  4156d4:	jmp    0xb5b1cd18
  4156d9:	lea    ebx,[edx]
  4156db:	xlat   BYTE PTR ds:[ebx]
  4156dc:	dec    esi
  4156dd:	push   ebp
  4156de:	cwde   
  4156df:	mov    ebp,0x81748cd7
  4156e4:	cmp    BYTE PTR [ebx+esi*1-0x7c],0xe7
  4156e9:	inc    ecx
  4156ea:	ins    DWORD PTR es:[edi],dx
  4156eb:	cmp    al,0xcc
  4156ed:	imul   esi,DWORD PTR [ebx],0xe6b3cf90
  4156f3:	add    eax,0xea551b48
  4156f8:	adc    BYTE PTR [edx+eiz*8],ch
  4156fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156fc:	fild   QWORD PTR [esp+eax*1+0x15]
  415700:	ins    DWORD PTR es:[edi],dx
  415701:	adc    BYTE PTR [ecx+0x68],bh
  415704:	hlt    
  415705:	mov    DWORD PTR [esi+esi*2+0x1e],esp
  415709:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41570a:	mul    BYTE PTR [ecx]
  41570c:	or     eax,0x2821bace
  415711:	push   ecx
  415712:	push   edx
  415713:	pop    ds
  415714:	mov    ?,WORD PTR [esi+0x2b69acd5]
  41571a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41571b:	add    BYTE PTR [ebp+0x66],ch
  41571e:	mov    edi,ebp
  415720:	pop    ds
  415721:	mov    dl,0x29
  415723:	sub    DWORD PTR [ecx+0x6fc045c2],ecx
  415729:	popf   
  41572a:	adc    ebx,DWORD PTR [ecx+0x19b7f741]
  415730:	or     bh,dh
  415732:	xchg   esp,eax
  415733:	loop   0x41576b
  415735:	pop    esi
  415736:	push   esi
  415737:	pop    ebp
  415738:	(bad)  
  415739:	pop    edi
  41573a:	mov    edi,0x68121097
  41573f:	shl    DWORD PTR [edi+0x19dedd63],0x1f
  415746:	or     BYTE PTR [esi],ch
  415748:	imul   esi,DWORD PTR [ebx+0x74a293a6],0xffffffe2
  41574f:	xchg   edi,eax
  415750:	das    
  415751:	retf   
  415752:	pop    es
  415753:	mov    ds:0x82d4627c,eax
  415758:	mov    eax,ds:0x6f52dc15
  41575d:	enter  0xee8f,0x89
  415761:	ficomp DWORD PTR [esi+0x7cf7dc3f]
  415767:	push   esp
  415768:	mov    cl,0xc8
  41576a:	xacquire xchg BYTE PTR [eax+eiz*8-0x59],ch
  41576f:	adc    eax,0xa316abab
  415774:	retf   
  415775:	cs dec ebp
  415777:	jle    0x415732
  415779:	inc    ecx
  41577a:	mov    esi,0x5b8186cc
  41577f:	cmc    
  415780:	jmp    0x415787
  415782:	mov    ch,0x1d
  415784:	ret    
  415785:	cmp    edi,edx
  415787:	ins    DWORD PTR es:[edi],dx
  415788:	inc    ecx
  415789:	or     DWORD PTR [edx],0xc8ab7069
  41578f:	les    esp,FWORD PTR [edx]
  415791:	loope  0x41572c
  415793:	sbb    ebp,eax
  415795:	ret    
  415796:	outs   dx,BYTE PTR ds:[esi]
  415797:	pop    edi
  415798:	mov    eax,0x7110c440
  41579d:	int    0xc5
  41579f:	fisubr WORD PTR [ebx+edi*2-0x29888f42]
  4157a6:	dec    esp
  4157a7:	clc    
  4157a8:	(bad)  
  4157aa:	push   es
  4157ab:	popf   
  4157ac:	adc    al,0x63
  4157ae:	mov    edx,ebp
  4157b0:	jge    0x41574c
  4157b2:	mov    edx,0x1a6ecf62
  4157b7:	rol    DWORD PTR [ebx-0x37],1
  4157ba:	out    dx,al
  4157bb:	dec    edx
  4157bc:	push   edx
  4157bd:	dec    eax
  4157be:	push   0x8a7343ca
  4157c3:	mov    eax,0xb5098816
  4157c8:	sahf   
  4157c9:	xlat   BYTE PTR ds:[ebx]
  4157ca:	sbb    al,0x4c
  4157cc:	sbb    DWORD PTR [eax],0x8d09439d
  4157d2:	int    0xa4
  4157d4:	cmp    BYTE PTR [ebx],ah
  4157d6:	or     eax,0xad3c9424
  4157db:	(bad)  
  4157dc:	das    
  4157dd:	cmp    ch,BYTE PTR [esi+ecx*4+0x462056cc]
  4157e4:	repz xchg ebx,eax
  4157e6:	(bad)  
  4157e7:	cmc    
  4157e8:	dec    ebp
  4157e9:	imul   eax,DWORD PTR [ecx+0x1],0xffffffcb
  4157ed:	popa   
  4157ee:	int3   
  4157ef:	cmp    eax,eax
  4157f1:	adc    DWORD PTR ds:0x14d45963,ebx
  4157f7:	clc    
  4157f8:	xlat   BYTE PTR ds:[ebx]
  4157f9:	xchg   edi,eax
  4157fa:	cwde   
  4157fb:	or     ecx,DWORD PTR [esi+0x5008c2b1]
  415801:	loopne 0x415838
  415803:	in     al,0xf1
  415805:	cdq    
  415806:	push   0x524d74b0
  41580b:	dec    esi
  41580c:	(bad)  
  41580e:	shl    BYTE PTR [esi-0x7d],1
  415811:	sbb    ch,BYTE PTR [ebp+0x54]
  415814:	add    al,0xbe
  415816:	sbb    BYTE PTR [edi+0x30d24de5],al
  41581c:	mov    al,ds:0x73a27c0c
  415821:	push   0xc35581d7
  415826:	repz inc ebx
  415828:	xchg   al,ch
  41582a:	in     eax,0xe2
  41582c:	push   es
  41582d:	test   bl,al
  41582f:	cmp    esi,DWORD PTR [ecx]
  415831:	or     eax,0x780178ba
  415836:	pop    esp
  415837:	jmp    0xe9c7fe73
  41583c:	mov    WORD PTR [ecx+eiz*4],es
  41583f:	mov    eax,0xffa37477
  415844:	xor    dl,bl
  415846:	inc    ebx
  415847:	mov    bl,0x52
  415849:	popa   
  41584a:	fidiv  DWORD PTR [edx]
  41584c:	(bad)  
  41584d:	push   ds
  41584e:	add    edi,ebp
  415850:	fwait
  415851:	jle    0x41581f
  415853:	sahf   
  415854:	jne    0x4158bb
  415856:	or     edi,esi
  415858:	out    0x9d,eax
  41585a:	push   0x1e4e8497
  41585f:	les    edx,FWORD PTR [eax-0x76]
  415862:	push   0xd012b21c
  415867:	adc    al,0x6
  415869:	inc    esi
  41586a:	out    dx,eax
  41586b:	mov    dl,0xb3
  41586d:	xchg   edi,eax
  41586e:	xchg   esp,eax
  41586f:	loop   0x415811
  415871:	aas    
  415872:	pop    ds
  415873:	or     BYTE PTR [eax+eax*1],0xa6
  415877:	jg     0x415893
  415879:	mov    ebx,0x1ac08fea
  41587e:	dec    DWORD PTR [ecx]
  415880:	div    DWORD PTR [edx+edi*1+0x59]
  415884:	jne    0x415839
  415886:	pushw  cs
  415888:	dec    edi
  415889:	and    DWORD PTR [eax-0x5a],ecx
  41588c:	jp     0x415812
  41588e:	xchg   esp,eax
  41588f:	push   0x5cca1ca6
  415894:	dec    edx
  415895:	pop    ecx
  415896:	mov    esp,0xd5311c8
  41589b:	les    edi,FWORD PTR [eax-0x37]
  41589e:	sbb    al,0xb1
  4158a0:	inc    esi
  4158a1:	fild   WORD PTR [edi+0x3951c991]
  4158a7:	pop    ebp
  4158a8:	(bad)  
  4158a9:	and    eax,edi
  4158ab:	dec    ebx
  4158ac:	out    dx,eax
  4158ad:	stc    
  4158ae:	mul    esp
  4158b0:	repnz mov al,ds:0xdda67385
  4158b6:	inc    edi
  4158b7:	pop    edi
  4158b8:	lods   eax,DWORD PTR ds:[esi]
  4158b9:	adc    ah,BYTE PTR [esi]
  4158bb:	sar    BYTE PTR [edi+eiz*1-0x78],cl
  4158bf:	out    dx,al
  4158c0:	cmp    BYTE PTR [ebp+0x7457b37b],bh
  4158c6:	push   cs
  4158c7:	or     BYTE PTR [ebx-0x17],bl
  4158ca:	addr16 retf 
  4158cc:	jp     0x41587e
  4158ce:	mov    ebp,eax
  4158d0:	and    al,0x24
  4158d2:	push   eax
  4158d3:	mov    ds:0x17296607,al
  4158d8:	inc    ebp
  4158d9:	or     ebp,DWORD PTR ss:[eax]
  4158dc:	ins    BYTE PTR es:[edi],dx
  4158dd:	sub    BYTE PTR [eax-0xbd32cb1],dh
  4158e3:	push   ebp
  4158e4:	shl    BYTE PTR [eax-0xc5c237c],cl
  4158ea:	outs   dx,DWORD PTR ds:[esi]
  4158eb:	sub    al,0xdf
  4158ed:	push   0x34
  4158ef:	and    DWORD PTR [ebx+0x43],ebx
  4158f2:	xor    DWORD PTR [edx-0xa],0x3f
  4158f6:	(bad)
  4158f9:	test   esi,ebx
  4158fb:	sbb    esi,ebp
  4158fd:	lods   al,BYTE PTR ds:[esi]
  4158fe:	adc    cl,ch
  415900:	test   eax,0x4273c2ce
  415905:	pop    eax
  415906:	sbb    BYTE PTR [esi-0x59],dh
  415909:	fdivr  QWORD PTR [edi]
  41590b:	jo     0x4158df
  41590d:	pop    edx
  41590e:	out    0x0,eax
  415910:	std    
  415911:	mov    eax,0x50b2029
  415916:	test   DWORD PTR [ebx],edx
  415918:	bound  ebx,QWORD PTR [edx-0x3]
  41591b:	push   0x51cebc89
  415920:	repz jmp 0xc3ce5394
  415926:	push   es
  415927:	sub    esi,DWORD PTR [eax-0x34678480]
  41592d:	das    
  41592e:	cmp    DWORD PTR [ebp-0x6f],0x69b49f26
  415935:	jae    0x41599c
  415937:	mov    cl,0x45
  415939:	jge    0x41598b
  41593b:	daa    
  41593c:	dec    ecx
  41593d:	(bad)  
  415940:	int    0x64
  415942:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  415944:	xor    BYTE PTR [ebx-0x32],0x86
  415948:	sahf   
  415949:	inc    ecx
  41594a:	cmp    eax,0xf80f8f99
  41594f:	push   es
  415950:	mov    al,ds:0xb0e03c45
  415955:	ficomp DWORD PTR [edi+ecx*1]
  415958:	inc    edx
  415959:	frstor [ebp-0x62b6c090]
  41595f:	mov    edi,0x74832b95
  415964:	retf   
  415965:	call   DWORD PTR [ecx-0x73ddcf0a]
  41596b:	or     al,0x56
  41596d:	sbb    DWORD PTR [edx-0x77],0xcb201231
  415974:	enter  0x3dd,0x13
  415978:	into   
  415979:	xchg   esi,eax
  41597a:	add    edx,ebp
  41597c:	aad    0xa1
  41597e:	add    BYTE PTR [edx],dh
  415980:	inc    edi
  415981:	lahf   
  415982:	mov    esp,DWORD PTR [esi]
  415984:	mov    edi,fs
  415986:	dec    edx
  415987:	clc    
  415988:	(bad)  
  415989:	jg     0x4159d6
  41598b:	jbe    0x415927
  41598d:	pusha  
  41598e:	das    
  41598f:	xor    ch,BYTE PTR [ebx+0x6cf17cff]
  415995:	mov    ds,WORD PTR [edx-0x26]
  415998:	ret    
  415999:	enter  0xdbdf,0xa6
  41599d:	imul   eax,DWORD PTR [ebp+0x37a07d14],0xffffffa4
  4159a4:	pushf  
  4159a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159a6:	fnstcw WORD PTR [ebx]
  4159a8:	mov    al,0xc6
  4159aa:	pop    esp
  4159ab:	mov    ah,0xb4
  4159ad:	and    DWORD PTR [ecx-0x7b5c53c9],ebp
  4159b3:	stos   DWORD PTR es:[edi],eax
  4159b4:	out    0xdd,al
  4159b6:	xor    esp,DWORD PTR [esi+ecx*4]
  4159b9:	sahf   
  4159ba:	(bad)  
  4159bb:	test   eax,0x926f3b5
  4159c0:	js     0x4159c0
  4159c2:	pop    ss
  4159c3:	fdiv   DWORD PTR [ebx]
  4159c5:	fstp   TBYTE PTR [eax-0x7991388]
  4159cb:	xor    al,0xda
  4159cd:	jmp    0xe596:0xa75271a5
  4159d4:	and    al,0x70
  4159d6:	dec    esp
  4159d7:	sub    ebx,esi
  4159d9:	hlt    
  4159da:	in     al,0xf5
  4159dc:	(bad)  
  4159dd:	jbe    0x415979
  4159df:	scas   al,BYTE PTR es:[edi]
  4159e0:	xlat   BYTE PTR ds:[ebx]
  4159e1:	rcr    DWORD PTR [edi],1
  4159e3:	retf   0xc36b
  4159e6:	cmp    BYTE PTR [ebx+0x470959df],ch
  4159ec:	stos   DWORD PTR es:[edi],eax
  4159ed:	jmp    0x415a53
  4159ef:	mov    dh,0xed
  4159f1:	dec    ebx
  4159f2:	lahf   
  4159f3:	loopne 0x415a72
  4159f5:	sbb    eax,0xa2aa9530
  4159fa:	mov    bh,0xd3
  4159fc:	pop    es
  4159fd:	push   edi
  4159fe:	out    dx,eax
  4159ff:	xor    DWORD PTR [ebx],edi
  415a01:	sahf   
  415a02:	aas    
  415a03:	and    eax,0x431d25ba
  415a08:	dec    eax
  415a09:	pop    ebp
  415a0a:	push   ebx
  415a0b:	and    ecx,ebp
  415a0d:	out    0x89,al
  415a0f:	jmp    0x4159e7
  415a11:	lahf   
  415a12:	sbb    esi,DWORD PTR [edi-0x5e]
  415a15:	fstp   DWORD PTR ds:0x31fcbbf5
  415a1b:	call   0x7d86:0x90e9ec02
  415a22:	inc    edi
  415a23:	sbb    BYTE PTR ds:0xeafd87aa,bl
  415a29:	jmp    0x6d5b:0xc230d288
  415a30:	mov    eax,ds:0xce1f6614
  415a35:	cdq    
  415a36:	stc    
  415a37:	push   cs
  415a38:	aam    0x45
  415a3a:	and    ebp,esp
  415a3c:	adc    edi,DWORD PTR [edx+0xa]
  415a3f:	or     al,0xf7
  415a41:	push   ecx
  415a42:	inc    ebp
  415a43:	or     ecx,DWORD PTR [esi]
  415a45:	adc    DWORD PTR [ecx-0x1528536c],edi
  415a4b:	test   ebx,esi
  415a4d:	push   ebp
  415a4e:	aas    
  415a4f:	jbe    0x4159e9
  415a51:	stos   BYTE PTR es:[edi],al
  415a52:	fcom   QWORD PTR [edx-0x72d5201f]
  415a58:	lods   al,BYTE PTR ds:[esi]
  415a59:	and    eax,0xa2d0194e
  415a5e:	add    eax,0xb646eabf
  415a63:	fs mov dh,0x4d
  415a66:	imul   edi,esp,0x39
  415a69:	loop   0x415a86
  415a6b:	sub    al,ah
  415a6d:	repnz sahf 
  415a6f:	dec    edx
  415a70:	inc    di
  415a72:	cmp    al,0xd3
  415a74:	test   al,0xf
  415a76:	dec    ebx
  415a77:	jg     0x415a38
  415a79:	cmp    BYTE PTR [esi+0x21],cl
  415a7c:	shl    DWORD PTR [eax+0x69],1
  415a7f:	cli    
  415a80:	mov    DWORD PTR [ecx-0x3f],ebx
  415a83:	and    bh,BYTE PTR [ecx+0x5b3c1f5f]
  415a89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a8a:	sub    ebp,esp
  415a8c:	scas   eax,DWORD PTR es:[edi]
  415a8d:	inc    edi
  415a8e:	adc    ch,BYTE PTR [esi+0xc36bbe9]
  415a94:	sub    BYTE PTR [esi+0x1484f7c3],dl
  415a9a:	ins    DWORD PTR es:[edi],dx
  415a9b:	outs   dx,DWORD PTR ds:[esi]
  415a9c:	xchg   esi,eax
  415a9d:	into   
  415a9e:	dec    ebx
  415a9f:	jo     0x415acc
  415aa1:	add    ebp,DWORD PTR [esi+0x78]
  415aa4:	mov    eax,0xdfad01d7
  415aa9:	push   0xc716bd14
  415aae:	jmp    0x86d4cb8a
  415ab3:	gs jg  0x415ab6
  415ab6:	test   eax,0xf511769a
  415abb:	adc    ebp,esp
  415abd:	add    al,0x9a
  415abf:	mov    gs,WORD PTR [eax]
  415ac1:	xor    BYTE PTR [ebx],cl
  415ac3:	push   0xffffff94
  415ac5:	outs   dx,BYTE PTR ds:[esi]
  415ac6:	pop    es
  415ac7:	stc    
  415ac8:	push   ebx
  415ac9:	dec    esi
  415aca:	lahf   
  415acb:	in     al,0x78
  415acd:	sbb    BYTE PTR [eax+0x23],bh
  415ad0:	adc    al,0xc7
  415ad2:	aad    0xf4
  415ad4:	pop    esi
  415ad5:	pop    ds
  415ad6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ad7:	jns    0x415af9
  415ad9:	xchg   ebx,eax
  415ada:	cld    
  415adb:	iret   
  415adc:	retf   
  415add:	jl     0x415a77
  415adf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ae0:	sti    
  415ae1:	rcr    DWORD PTR [edx],0xda
  415ae4:	std    
  415ae5:	sub    eax,0x2edb0730
  415aea:	fmul   st(3),st
  415aec:	xor    al,0xc6
  415aee:	(bad)  
  415aef:	xchg   edx,eax
  415af0:	or     edi,edx
  415af2:	push   edx
  415af3:	or     eax,0x53bda29b
  415af8:	sahf   
  415af9:	push   eax
  415afa:	push   ebx
  415afb:	test   DWORD PTR [edx+0x6286ee81],0xad3b4925
  415b05:	loope  0x415b33
  415b07:	or     eax,eax
  415b09:	xor    ch,BYTE PTR [esi+0x70bd1e60]
  415b0f:	xchg   edx,eax
  415b10:	and    BYTE PTR [ebp-0x6f],dh
  415b13:	popf   
  415b14:	xchg   edi,eax
  415b15:	fst    DWORD PTR [edx+0xb]
  415b18:	out    0x48,al
  415b1a:	sbb    edx,DWORD PTR [edx]
  415b1c:	pushf  
  415b1d:	mov    cl,0xa0
  415b1f:	mov    dh,0xe9
  415b21:	sub    al,0xd1
  415b23:	loope  0x415ad7
  415b25:	sbb    al,0x1
  415b27:	add    esp,DWORD PTR [eax]
  415b29:	jno    0x415af3
  415b2b:	std    
  415b2c:	push   ebp
  415b2d:	loope  0x415b3e
  415b2f:	sub    BYTE PTR [edx],al
  415b31:	inc    ebp
  415b32:	mov    edi,0xa965de8d
  415b37:	inc    eax
  415b38:	mov    ch,BYTE PTR [edx+0x46]
  415b3b:	enter  0xaa44,0x67
  415b3f:	fcom   DWORD PTR [esi+ebx*8+0x7f]
  415b43:	enter  0x6b4,0xdd
  415b47:	retf   
  415b48:	daa    
  415b49:	xchg   esi,eax
  415b4a:	pop    eax
  415b4b:	jnp    0x55ca9848
  415b51:	xchg   esp,eax
  415b52:	mov    esp,0xc19f301a
  415b57:	xlat   BYTE PTR ds:[ebx]
  415b58:	push   edx
  415b59:	add    ecx,ebp
  415b5b:	popf   
  415b5c:	xor    ah,BYTE PTR [edi]
  415b5e:	xchg   ebp,eax
  415b5f:	mov    edx,0x53ba6247
  415b64:	cmp    eax,0x57996396
  415b69:	dec    ebx
  415b6a:	mov    eax,0x21dca7f0
  415b6f:	loop   0x415bdd
  415b71:	sub    BYTE PTR [ebx+0xbba1b24],0xe0
  415b78:	mov    ds,ebx
  415b7a:	daa    
  415b7b:	fs and eax,0x7eb821b2
  415b81:	stos   DWORD PTR es:[edi],eax
  415b82:	pusha  
  415b83:	dec    ebp
  415b84:	sbb    DWORD PTR [esi+eax*4-0x16],0x24fbc5fa
  415b8c:	(bad)  
  415b8d:	sbb    eax,0x80f89ef0
  415b92:	jns    0x415ba3
  415b94:	lods   al,BYTE PTR ds:[esi]
  415b95:	adc    al,0x94
  415b97:	ja     0x415bbf
  415b99:	(bad)  
  415b9a:	cmp    ah,BYTE PTR [ebx+0x71d1356d]
  415ba0:	pop    ebp
  415ba1:	xchg   ecx,eax
  415ba2:	mov    DWORD PTR ds:0x793db087,ebp
  415ba8:	data16 sbb ch,BYTE PTR [edi]
  415bab:	in     al,dx
  415bac:	imul   DWORD PTR ds:0xd675cfa8
  415bb2:	jb     0x415bf3
  415bb4:	cs nop
  415bb6:	aam    0xd9
  415bb8:	pop    eax
  415bb9:	sbb    dl,BYTE PTR [esp+esi*8+0x7b4ebb86]
  415bc0:	pop    esi
  415bc1:	cmp    dl,bh
  415bc3:	mov    cl,0x85
  415bc5:	xchg   edi,eax
  415bc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bc7:	inc    esi
  415bc8:	pop    esp
  415bc9:	into   
  415bca:	scas   al,BYTE PTR es:[edi]
  415bcb:	daa    
  415bcc:	stos   DWORD PTR es:[edi],eax
  415bcd:	sbb    esi,DWORD PTR [eax+esi*2]
  415bd0:	or     ebp,esp
  415bd2:	out    0x85,al
  415bd4:	cmp    DWORD PTR [edi-0x15],0x5f
  415bd8:	call   0x3ce90fed
  415bdd:	bound  ebx,QWORD PTR [ebp-0x57]
  415be0:	je     0x415b9f
  415be2:	aaa    
  415be3:	mov    ch,0xcc
  415be5:	dec    esi
  415be6:	call   0xc730f4c8
  415beb:	push   cs
  415bec:	cmc    
  415bed:	sub    DWORD PTR [edx-0x5a],ebx
  415bf0:	ins    DWORD PTR es:[edi],dx
  415bf1:	leave  
  415bf2:	data16 aaa 
  415bf4:	mov    edi,0x2ea15348
  415bf9:	leave  
  415bfa:	mov    edi,0xa1bbdb41
  415bff:	push   eax
  415c00:	xor    al,0x80
  415c02:	outs   dx,DWORD PTR ds:[esi]
  415c03:	xor    cl,dh
  415c05:	pop    es
  415c06:	xchg   esi,eax
  415c07:	cmp    BYTE PTR [ebp-0x26dde8b6],bh
  415c0d:	xchg   esi,eax
  415c0e:	cs cs in eax,0xaa
  415c12:	push   ebp
  415c13:	jb     0x415be6
  415c15:	xor    eax,0xf6936377
  415c1a:	idiv   ah
  415c1c:	test   BYTE PTR [edx-0x18],0x63
  415c20:	scas   al,BYTE PTR es:[edi]
  415c21:	adc    BYTE PTR [ecx*1+0x47483eb5],bl
  415c28:	cwde   
  415c29:	ins    BYTE PTR es:[edi],dx
  415c2a:	mov    DWORD PTR [edx],esi
  415c2c:	nop
  415c2d:	icebp  
  415c2e:	out    dx,al
  415c2f:	pop    ebx
  415c30:	xor    al,0xca
  415c32:	jge    0x415c8a
  415c34:	or     bh,ah
  415c36:	add    eax,0x2d7aed62
  415c3b:	fsubr  DWORD PTR [edx]
  415c3d:	jb     0x415c5b
  415c3f:	lock dec BYTE PTR fs:[esi-0x1b6349bd]
  415c47:	mov    cl,BYTE PTR [edi]
  415c49:	and    DWORD PTR [ecx],0xffffff85
  415c4c:	pop    ebx
  415c4d:	xor    esi,ecx
  415c4f:	(bad)  [esi]
  415c51:	retf   0xa95a
  415c54:	mov    cl,0x11
  415c56:	xor    ecx,eax
  415c58:	stos   DWORD PTR es:[edi],eax
  415c59:	mov    esp,0x3fa55a6d
  415c5e:	fistp  DWORD PTR [esi-0x40]
  415c61:	in     eax,dx
  415c62:	sbb    al,0xad
  415c64:	je     0x415cbc
  415c66:	addr16 sub al,0xce
  415c69:	call   0xd8cb7563
  415c6e:	and    al,0x21
  415c70:	and    eax,0xe114dd23
  415c75:	loope  0x415c64
  415c77:	ja     0x415c32
  415c79:	mov    fs,WORD PTR [ebp+0x65]
  415c7c:	push   ds
  415c7d:	jne    0x415c9f
  415c7f:	imul   ecx,DWORD PTR [si],0x65
  415c83:	dec    eax
  415c84:	adc    al,0xc5
  415c86:	push   esi
  415c87:	sub    eax,0xed7071d5
  415c8c:	sub    al,BYTE PTR [ebx]
  415c8e:	add    eax,0x5480a214
  415c93:	jno    0x415c78
  415c95:	inc    eax
  415c96:	xchg   edx,eax
  415c97:	test   eax,0xf25b2482
  415c9c:	inc    ecx
  415c9d:	jge    0x415ca2
  415c9f:	int3   
  415ca0:	leave  
  415ca1:	inc    ecx
  415ca2:	or     ecx,ecx
  415ca4:	push   ecx
  415ca5:	cmc    
  415ca6:	sbb    edi,DWORD PTR [eax-0x7b]
  415ca9:	push   ebp
  415caa:	push   0x38a94c9a
  415caf:	jmp    0x415c4c
  415cb1:	clc    
  415cb2:	(bad)  [esp+edi*1]
  415cb5:	fcomp  QWORD PTR [edi+0x7b]
  415cb8:	aad    0xe0
  415cba:	push   0x6
  415cbc:	push   esp
  415cbd:	popf   
  415cbe:	sbb    BYTE PTR [edi+0x5f],ch
  415cc1:	(bad)  
  415cc2:	ret    0x4191
  415cc5:	imul   eax,DWORD PTR [edi+0x53],0x58
  415cc9:	jmp    0xbb43:0xf586112d
  415cd0:	jg     0x415c8a
  415cd2:	retf   0x8fb7
  415cd5:	into   
  415cd6:	data16 scas al,BYTE PTR es:[edi]
  415cd8:	jge    0x415cc6
  415cda:	les    ebx,FWORD PTR [ecx-0x620074c4]
  415ce0:	cmp    al,0xcc
  415ce2:	jp     0x415cc7
  415ce4:	adc    dh,BYTE PTR [ecx]
  415ce6:	not    DWORD PTR [eax]
  415ce8:	leave  
  415ce9:	sbb    al,0xcd
  415ceb:	mov    dh,0x0
  415ced:	lea    ebx,[ebp-0x25]
  415cf0:	push   eax
  415cf1:	push   0x22
  415cf3:	out    dx,al
  415cf4:	cmp    edx,eax
  415cf6:	jmp    0x415cb5
  415cf8:	mov    eax,0x7bae40ae
  415cfd:	les    ecx,FWORD PTR [edx+eiz*1-0x5f]
  415d01:	stos   DWORD PTR es:[edi],eax
  415d02:	repnz push edi
  415d04:	vmwrite edi,DWORD PTR [eax+edx*1]
  415d08:	sahf   
  415d09:	(bad)  
  415d0a:	int3   
  415d0b:	out    0x7e,eax
  415d0d:	jo     0x415c9c
  415d0f:	or     eax,0x676ae539
  415d14:	cmc    
  415d15:	aas    
  415d16:	mov    ch,BYTE PTR [esi]
  415d18:	jg     0x415ca0
  415d1a:	fmul   DWORD PTR [eax+0x66505913]
  415d20:	adc    bl,BYTE PTR [eax]
  415d22:	adc    BYTE PTR [eax],bl
  415d24:	mov    edx,0xe4c8a809
  415d29:	mov    ebx,0x1363f689
  415d2e:	je     0x415cfb
  415d30:	ss jecxz 0x415cce
  415d33:	ss mov al,0xe1
  415d36:	sbb    al,0xb4
  415d38:	pop    eax
  415d39:	ja     0x415d7e
  415d3b:	inc    esp
  415d3c:	jae    0x415cd2
  415d3e:	xlat   BYTE PTR ds:[ebx]
  415d3f:	push   ss
  415d40:	(bad)  
  415d41:	cmp    dh,BYTE PTR [esi]
  415d43:	mov    cl,0x73
  415d45:	das    
  415d46:	and    edx,DWORD PTR [ecx]
  415d48:	push   ebp
  415d49:	rol    DWORD PTR [ecx-0x57dc5dac],1
  415d4f:	or     DWORD PTR [eax],ecx
  415d51:	dec    edx
  415d52:	pop    edi
  415d53:	cwde   
  415d54:	xor    eax,eax
  415d56:	adc    DWORD PTR [edx-0x209f682b],esi
  415d5c:	push   ds
  415d5d:	adc    eax,0xf4706710
  415d62:	xchg   edx,eax
  415d63:	in     eax,0xdb
  415d65:	nop
  415d66:	xchg   ebx,eax
  415d67:	scas   eax,DWORD PTR es:[edi]
  415d68:	fdivr  QWORD PTR [bx+si]
  415d6b:	sbb    BYTE PTR [eax+0x2d],al
  415d6e:	mov    edx,DWORD PTR [ecx+0x3c54ca7b]
  415d74:	data16 and bl,BYTE PTR [eax+0x65b9ebf8]
  415d7b:	xchg   edi,eax
  415d7c:	jbe    0x415dd4
  415d7e:	jl     0x415dc7
  415d80:	ja     0x415de5
  415d82:	jae    0x415d31
  415d84:	push   edx
  415d85:	xchg   ecx,eax
  415d86:	dec    ebp
  415d87:	sbb    ebx,DWORD PTR [eax]
  415d89:	dec    ecx
  415d8a:	loope  0x415dac
  415d8c:	adc    eax,0xbaa9fd1b
  415d91:	and    BYTE PTR [eax],dh
  415d93:	(bad)  
  415d94:	cdq    
  415d95:	jae    0x415dec
  415d97:	ins    DWORD PTR es:[edi],dx
  415d98:	mov    BYTE PTR [eax+ecx*4+0x5b],bh
  415d9c:	in     eax,dx
  415d9d:	ret    0xde42
  415da0:	or     eax,0x7474ff47
  415da5:	adc    ch,BYTE PTR [esi]
  415da7:	shr    DWORD PTR [eax-0x2110e45],cl
  415dad:	inc    eax
  415dae:	jg     0x415d7b
  415db0:	dec    edx
  415db1:	shr    BYTE PTR [edi],cl
  415db3:	sti    
  415db4:	sub    dh,BYTE PTR [esi+0x5c240eff]
  415dba:	mov    esi,DWORD PTR [edx-0x39]
  415dbd:	and    BYTE PTR [edx],dh
  415dbf:	add    eax,0x357f60b9
  415dc4:	inc    esi
  415dc5:	loopne 0x415d9e
  415dc7:	leave  
  415dc8:	in     al,0xf
  415dca:	mov    edi,0x6661bfc6
  415dcf:	jmp    0x3bcb:0x3c3b4176
  415dd6:	and    al,0x6b
  415dd8:	dec    ecx
  415dd9:	add    eax,0x18af9cf4
  415dde:	ret    0x6be9
  415de1:	pop    ebp
  415de2:	and    al,0x3
  415de4:	(bad)  
  415de5:	ficomp WORD PTR [ebx+ebp*8+0x71317353]
  415dec:	pop    ecx
  415ded:	nop
  415dee:	ja     0x415e65
  415df0:	shl    DWORD PTR [ebx+ecx*8-0x6],1
  415df4:	push   DWORD PTR [esi-0x16]
  415df7:	or     eax,0xc898865a
  415dfd:	out    0xa7,eax
  415dff:	nop
  415e00:	pop    edx
  415e01:	js     0x415dde
  415e03:	jmp    0x4060:0xfd1bfe40
  415e0a:	xor    sp,WORD PTR [eax-0x129f2bf7]
  415e11:	sub    BYTE PTR [eax],cl
  415e13:	js     0x415e29
  415e15:	mov    WORD PTR [ebx],ss
  415e17:	push   ds
  415e18:	mov    edx,edi
  415e1a:	add    cl,dh
  415e1c:	inc    esp
  415e1d:	pop    eax
  415e1e:	push   edx
  415e1f:	imul   ecx,edi,0xfabb7d3b
  415e25:	mov    ebp,0x81b99840
  415e2a:	xlat   BYTE PTR ds:[ebx]
  415e2b:	sub    ebx,esi
  415e2d:	push   0x1
  415e2f:	inc    esi
  415e30:	pop    es
  415e31:	mov    cl,0x10
  415e33:	gs jg  0x415dbe
  415e36:	pop    esi
  415e37:	mov    ?,esp
  415e39:	push   ebp
  415e3a:	mov    edi,0x59eed794
  415e3f:	ficomp DWORD PTR [eax]
  415e41:	xchg   ebx,eax
  415e42:	cmp    DWORD PTR ss:[esi],ecx
  415e45:	out    dx,al
  415e46:	or     DWORD PTR [esp+eiz*2],esp
  415e49:	fwait
  415e4a:	and    dl,0x16
  415e4d:	sub    eax,0x71c4be68
  415e52:	retf   0x558f
  415e55:	mov    BYTE PTR [ebp+0x1c],ah
  415e58:	inc    esp
  415e59:	xchg   ecx,eax
  415e5a:	neg    ah
  415e5c:	ficomp WORD PTR [edx-0x256bc8d7]
  415e63:	or     eax,0x32f69330
  415e68:	imul   esp,DWORD PTR [esi+eiz*4+0x75],0x2c69e967
  415e70:	push   esi
  415e71:	daa    
  415e72:	inc    esp
  415e73:	push   ss
  415e74:	lods   eax,DWORD PTR ds:[esi]
  415e75:	mov    ebp,0x406f6911
  415e7a:	bswap  esp
  415e7c:	mov    ecx,0xc047c866
  415e81:	enter  0xffe8,0xe1
  415e85:	rcl    DWORD PTR [ebp+0x22],cl
  415e88:	pop    ebp
  415e89:	dec    edx
  415e8a:	cmp    ecx,esp
  415e8c:	scas   eax,DWORD PTR es:[edi]
  415e8d:	jp     0x415e2f
  415e8f:	daa    
  415e90:	aas    
  415e91:	es mov edx,0x11452b84
  415e97:	hlt    
  415e98:	add    ch,BYTE PTR [ebx+0x2d8cb232]
  415e9e:	(bad)  
  415e9f:	adc    esi,DWORD PTR ds:0x46c333e4
  415ea5:	(bad)  
  415ea6:	push   edi
  415ea7:	enterw 0xbd91,0xd7
  415eac:	sbb    esp,DWORD PTR [esi+0x914131]
  415eb2:	dec    ebx
  415eb3:	push   0xa598b702
  415eb8:	cwde   
  415eb9:	dec    ebx
  415eba:	inc    esp
  415ebb:	sti    
  415ebc:	pop    esp
  415ebd:	or     edx,DWORD PTR [ebx+0xfd33887]
  415ec3:	ja     0x415ed1
  415ec5:	das    
  415ec6:	seta   BYTE PTR [ecx+0x17]
  415eca:	js     0x415ec1
  415ecc:	and    eax,0x5cd82f59
  415ed1:	pop    edx
  415ed2:	mov    eax,0x522f1494
  415ed7:	or     eax,DWORD PTR [ecx+eax*2+0x714a9bbb]
  415ede:	mov    ebp,0x72e4313a
  415ee3:	mov    ds:0xa3ff34e,al
  415ee8:	sar    DWORD PTR [edx-0xd6f4b43],1
  415eee:	ficomp WORD PTR [esi]
  415ef0:	xor    ch,BYTE PTR [esi+ecx*2]
  415ef3:	adc    eax,0xa471123c
  415ef8:	(bad)  
  415efa:	aaa    
  415efb:	stos   DWORD PTR es:[edi],eax
  415efc:	or     eax,0xcf59f8eb
  415f01:	div    DWORD PTR [edx+0x7a7ee12b]
  415f07:	mov    edi,DWORD PTR [esi-0x16a5afa9]
  415f0d:	scas   eax,DWORD PTR es:[edi]
  415f0e:	mov    al,ds:0x5d70e172
  415f13:	(bad)  
  415f14:	cmp    BYTE PTR [ecx-0x193b3122],dl
  415f1a:	xor    al,0x84
  415f1c:	push   ecx
  415f1d:	scas   al,BYTE PTR es:[edi]
  415f1e:	clc    
  415f1f:	shr    BYTE PTR [ebx+0x50052f20],1
  415f25:	mov    bh,0x66
  415f27:	sub    al,0xea
  415f29:	xor    BYTE PTR [ecx],cl
  415f2b:	in     eax,0x26
  415f2d:	jno    0x415ebe
  415f2f:	pop    es
  415f30:	xchg   edx,eax
  415f31:	js     0x415fae
  415f33:	push   esp
  415f34:	or     DWORD PTR ds:0x7eecef40,edi
  415f3a:	jp     0x415fb9
  415f3c:	arpl   WORD PTR [eax],cx
  415f3e:	aas    
  415f3f:	add    DWORD PTR [esi+0x41],esp
  415f42:	call   0x51a03602
  415f47:	(bad)
  415f4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f4c:	push   ebp
  415f4d:	test   BYTE PTR [ebx-0x3a],ah
  415f50:	cmp    DWORD PTR [edx+0x587df0c6],esp
  415f56:	nop
  415f57:	and    BYTE PTR [edx-0x3e90b729],0xd4
  415f5e:	inc    esi
  415f5f:	cld    
  415f60:	das    
  415f61:	push   ebx
  415f62:	popa   
  415f63:	inc    edx
  415f64:	xchg   ecx,eax
  415f65:	test   al,0x52
  415f67:	xor    eax,ecx
  415f69:	sbb    al,BYTE PTR [ebx+0x33047c34]
  415f6f:	xchg   esi,eax
  415f70:	(bad)  
  415f71:	jbe    0x415f22
  415f73:	add    al,0x39
  415f75:	inc    ecx
  415f76:	inc    esi
  415f77:	mov    esp,0x6a9be309
  415f7c:	xor    BYTE PTR [edi+eiz*2-0x28e61fce],dh
  415f83:	addr16 jno 0x415f84
  415f86:	(bad)  
  415f88:	repz pushf 
  415f8a:	cld    
  415f8b:	repz cmp eax,0x79429fe4
  415f91:	pop    ebp
  415f92:	inc    esp
  415f93:	xor    BYTE PTR [ebp-0x1e],dh
  415f96:	mov    al,ds:0xf2bf679f
  415f9b:	push   ds
  415f9c:	inc    esp
  415f9d:	hlt    
  415f9e:	mov    ds:0x2171d049,eax
  415fa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fa4:	xchg   ebx,eax
  415fa5:	shl    BYTE PTR [eax-0x6955381c],0x7d
  415fac:	daa    
  415fad:	out    dx,al
  415fae:	sub    DWORD PTR [ecx+0x35],0x4bdb0a3a
  415fb5:	push   cs
  415fb6:	shl    DWORD PTR ds:0xa8a7a64f,cl
  415fbc:	sbb    BYTE PTR [eax+0xda726c8],dl
  415fc2:	xchg   esp,eax
  415fc3:	sbb    dh,BYTE PTR [edx+0xa]
  415fc6:	or     DWORD PTR [edi+0x54802703],ecx
  415fcc:	ds mov al,0x52
  415fcf:	test   BYTE PTR [ebx+0x18d518d0],ch
  415fd5:	(bad)  
  415fd7:	loopne 0x415f72
  415fd9:	in     al,0x2a
  415fdb:	pop    esi
  415fdc:	xchg   ebx,eax
  415fdd:	adc    BYTE PTR [eax-0x1],cl
  415fe0:	(bad)
  415fe3:	aad    0x93
  415fe5:	xor    eax,0xe5188bea
  415fea:	sub    BYTE PTR [edx],dh
  415fec:	out    0x1,al
  415fee:	mov    esi,ebp
  415ff0:	ins    DWORD PTR es:[edi],dx
  415ff1:	aam    0x60
  415ff3:	cdq    
  415ff4:	sbb    al,0x6a
  415ff6:	adc    ebx,DWORD PTR [ecx+esi*8+0x4]
  415ffa:	add    eax,0x4e764626
  415fff:	push   cs
  416000:	dec    esi
  416001:	xchg   ebx,eax
  416002:	lds    ebp,FWORD PTR [esi-0x47]
  416005:	pop    ss
  416006:	push   DWORD PTR [edi-0x6c9aaebc]
  41600c:	mov    DWORD PTR [edi-0x2d],eax
  41600f:	leave  
  416010:	clc    
  416011:	push   eax
  416012:	mov    ecx,0xefd42ad1
  416017:	adc    ebp,esp
  416019:	in     al,dx
  41601a:	push   0x6b83debc
  41601f:	mov    ecx,0x33d86826
  416024:	inc    ebx
  416025:	mov    DWORD PTR [ebx+ebx*2-0x79be2c9a],esi
  41602c:	xor    al,0xbb
  41602e:	pop    edx
  41602f:	mov    edi,0xb8956c57
  416034:	add    al,0x4a
  416036:	dec    esi
  416037:	pop    ebp
  416038:	push   ebp
  416039:	pop    ecx
  41603a:	and    ah,BYTE PTR [eax]
  41603c:	outs   dx,DWORD PTR ds:[esi]
  41603d:	cmp    al,0x7f
  41603f:	arpl   WORD PTR ds:0x30e7202b,ax
  416045:	fbstp  TBYTE PTR [eax-0x1b9352f3]
  41604b:	dec    esi
  41604c:	jnp    0x416010
  41604e:	mov    bh,0x7e
  416050:	pusha  
  416051:	pop    ds
  416052:	sub    al,ch
  416054:	fs mov ebp,0x4562920b
  41605a:	mov    ecx,0x92b224fe
  41605f:	mov    cl,0x97
  416061:	mov    dl,0xd6
  416063:	jp     0x4160a7
  416065:	call   0xa1cbab5e
  41606a:	sub    al,cl
  41606c:	sahf   
  41606d:	sub    ebx,ecx
  41606f:	pop    esp
  416070:	cmove  esp,DWORD PTR [edx-0x7604bb87]
  416077:	fwait
  416078:	(bad)  
  416079:	dec    edi
  41607a:	jge    0x416040
  41607c:	jmp    0x4160a2
  41607e:	nop
  41607f:	pop    edi
  416080:	xchg   edx,eax
  416081:	outs   dx,BYTE PTR ds:[esi]
  416082:	ret    0x215
  416085:	mov    al,ds:0xecf66c3d
  41608a:	in     al,0x79
  41608c:	push   esi
  41608d:	jo     0x4160d1
  41608f:	in     eax,dx
  416090:	std    
  416091:	mov    al,0x79
  416093:	mov    al,0x1f
  416095:	ja     0x416060
  416097:	stos   DWORD PTR es:[edi],eax
  416098:	das    
  416099:	stos   BYTE PTR es:[edi],al
  41609a:	pop    eax
  41609b:	into   
  41609c:	rcl    BYTE PTR [ecx+0x2065d904],1
  4160a2:	test   eax,0x60ced75f
  4160a7:	inc    edx
  4160a8:	in     eax,dx
  4160a9:	pop    eax
  4160aa:	sbb    BYTE PTR [eax-0x71],0xca
  4160ae:	adc    BYTE PTR [eax+0x4],bl
  4160b1:	fs retf 
  4160b3:	jns    0x4160f4
  4160b5:	in     al,0xb9
  4160b7:	repz das 
  4160b9:	pusha  
  4160ba:	mov    eax,0x84518b1f
  4160bf:	inc    eax
  4160c0:	std    
  4160c1:	sub    BYTE PTR [edx],ch
  4160c3:	pop    esp
  4160c4:	data16 fist DWORD PTR ds:0x9d954279
  4160cb:	loop   0x416125
  4160cd:	cld    
  4160ce:	inc    edi
  4160cf:	cld    
  4160d0:	in     al,0xc7
  4160d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160d3:	lea    ebp,[esi-0x26]
  4160d6:	stos   DWORD PTR es:[edi],eax
  4160d7:	cmc    
  4160d8:	jl     0x41610f
  4160da:	fiadd  WORD PTR [eax+0x21b4e8c4]
  4160e0:	sub    edi,DWORD PTR [ecx]
  4160e2:	jnp    0x4160fb
  4160e4:	ret    
  4160e5:	push   0xffffffeb
  4160e7:	push   ebx
  4160e8:	sub    al,0xc9
  4160ea:	(bad)
  4160ef:	fidiv  WORD PTR [ecx+edi*4-0x104614d]
  4160f6:	fidiv  DWORD PTR [ebx]
  4160f8:	cmp    DWORD PTR [ecx],ecx
  4160fa:	xchg   ecx,eax
  4160fb:	out    dx,eax
  4160fc:	lods   eax,DWORD PTR ds:[esi]
  4160fd:	loopne 0x416149
  4160ff:	in     al,0xeb
  416101:	mov    al,ds:0xa755f7ac
  416106:	cmp    eax,0x8fc814c5
  41610b:	rcl    BYTE PTR [edx+0x0],1
  41610e:	sub    bl,0x67
  416111:	psubusb mm4,QWORD PTR [ecx-0x44]
  416115:	daa    
  416116:	into   
  416117:	fdiv   st,st(7)
  416119:	push   ecx
  41611a:	das    
  41611b:	call   0x67f13531
  416120:	test   DWORD PTR [ecx-0x82ef41e],ecx
  416126:	mov    eax,ds:0xd0bd553b
  41612b:	loop   0x4160f0
  41612d:	shr    DWORD PTR [eax-0x23],0xcb
  416131:	(bad)  
  416132:	cdq    
  416133:	jno    0x416131
  416135:	cmp    ch,BYTE PTR [edx]
  416137:	xchg   ebp,eax
  416138:	sti    
  416139:	icebp  
  41613a:	nop
  41613b:	and    eax,0x5e7c4ac8
  416140:	imul   ecx,DWORD PTR [esi],0xec4dcf62
  416146:	push   cs
  416147:	mov    cl,0x34
  416149:	cmp    BYTE PTR [ecx+0x58],al
  41614c:	jg     0x4160f9
  41614e:	cdq    
  41614f:	data16 aas 
  416151:	mov    edx,0xde147474
  416156:	addr16 mov dh,0xc3
  416159:	fld    QWORD PTR [ecx]
  41615b:	fcomp  DWORD PTR [eax+0x5a32aed0]
  416161:	mov    dh,0x84
  416163:	sbb    ebx,ecx
  416165:	mov    esi,0x443be0e6
  41616a:	in     al,0x8d
  41616c:	lods   al,BYTE PTR ds:[esi]
  41616d:	sub    ebp,DWORD PTR [esi]
  41616f:	jle    0x41613e
  416171:	je     0x416145
  416173:	sub    BYTE PTR [edi],dl
  416175:	popf   
  416176:	cs scas eax,DWORD PTR es:[edi]
  416178:	fcom   QWORD PTR ds:0xc546ae8c
  41617e:	jae    0x416154
  416180:	mov    dl,0x44
  416182:	lock scas al,BYTE PTR es:[edi]
  416184:	clc    
  416185:	inc    esi
  416186:	int3   
  416187:	call   0x8f9f:0xb4c6c939
  41618e:	xchg   ebp,eax
  41618f:	jmp    0x241db7a0
  416194:	mov    BYTE PTR [edi],dh
  416196:	and    ecx,DWORD PTR [edx+esi*2-0x2]
  41619a:	jae    0x416158
  41619c:	imul   edx,DWORD PTR [edi-0x3288efb7],0x22ffc078
  4161a6:	cmp    ecx,0x63cb9c93
  4161ac:	in     al,dx
  4161ad:	or     al,0x5b
  4161af:	inc    ecx
  4161b0:	sti    
  4161b1:	imul   edx,DWORD PTR [esi],0xffffff9d
  4161b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161b5:	adc    BYTE PTR [edx],ah
  4161b7:	je     0x41620c
  4161b9:	addr16 repz dec eax
  4161bc:	jg     0x4161e2
  4161be:	and    ebx,edx
  4161c0:	pop    edi
  4161c1:	into   
  4161c2:	xchg   BYTE PTR [edi+0x4de3cd8a],al
  4161c8:	mov    ebp,0x9ad26982
  4161cd:	sub    DWORD PTR [eax],edi
  4161cf:	mov    ss,WORD PTR [edi-0x1e]
  4161d2:	jmp    0x2ba8:0x77fd7c71
  4161d9:	loopne 0x41622d
  4161db:	data16 out 0xd4,al
  4161de:	push   edi
  4161df:	nop
  4161e0:	mov    al,ds:0x1675bae9
  4161e5:	mov    ebx,0xfe64f259
  4161ea:	jecxz  0x4161de
  4161ec:	inc    ebp
  4161ed:	adc    al,cl
  4161ef:	pop    esp
  4161f0:	je     0x41620d
  4161f2:	push   0x8b9de4ec
  4161f7:	mov    bl,0x8e
  4161f9:	in     eax,dx
  4161fa:	hlt    
  4161fb:	(bad)  
  4161fc:	lock jmp 0xcbe0:0xef135a70
  416204:	push   edx
  416205:	outs   dx,BYTE PTR ds:[esi]
  416206:	add    al,0x61
  416208:	mov    esi,0xfff0f880
  41620d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41620e:	mov    WORD PTR [edx],ds
  416210:	cs mov bl,0x68
  416213:	test   eax,0xa1e8cb96
  416218:	jle    0x41624b
  41621a:	cmp    ebp,DWORD PTR [ebx-0x57]
  41621d:	rcl    DWORD PTR [ebp-0x316c75f2],cl
  416223:	push   edx
  416224:	scas   eax,DWORD PTR es:[edi]
  416225:	mov    ah,0x83
  416227:	aad    0x22
  416229:	pop    ss
  41622a:	ins    DWORD PTR es:[edi],dx
  41622b:	aam    0x7c
  41622d:	xor    DWORD PTR [ebx+0x1],esp
  416230:	arpl   WORD PTR [ecx],si
  416232:	ret    0xd93a
  416235:	push   ss
  416236:	popa   
  416237:	loope  0x4161f5
  416239:	loopne 0x416216
  41623b:	test   al,0x48
  41623d:	jg     0x416224
  41623f:	not    DWORD PTR [edi]
  416241:	in     eax,0xae
  416243:	aam    0x8f
  416245:	inc    esi
  416246:	fabs   
  416248:	mov    WORD PTR [eax+0x24],?
  41624b:	dec    ebp
  41624c:	add    BYTE PTR [esi+0x38e2eff5],dh
  416252:	addr16 push 0x1e
  416255:	push   es
  416256:	rcr    DWORD PTR [edx+0x75],1
  416259:	jnp    0x4161f9
  41625b:	mov    bh,0x88
  41625d:	push   ebp
  41625e:	cmp    al,0x84
  416260:	or     BYTE PTR [edi],ch
  416262:	lock jb 0x416289
  416265:	jl     0x416296
  416267:	xlat   BYTE PTR ds:[ebx]
  416268:	push   edx
  416269:	add    al,0xe3
  41626b:	popf   
  41626c:	push   ebx
  41626d:	push   eax
  41626e:	rcl    DWORD PTR [ecx],cl
  416270:	pop    ebx
  416271:	int    0xdd
  416273:	mov    ah,0x32
  416275:	adc    BYTE PTR [ecx+0x44],0xf5
  416279:	adc    bh,0xf
  41627c:	scas   eax,DWORD PTR es:[edi]
  41627d:	dec    ebx
  41627e:	inc    edi
  41627f:	or     eax,0x1ee18683
  416284:	js     0x416269
  416286:	jno    0x416251
  416288:	xchg   ecx,eax
  416289:	push   es
  41628a:	xchg   ebp,eax
  41628b:	imul   esi,DWORD PTR [esi],0xc655dc20
  416291:	sahf   
  416292:	sub    esp,edx
  416294:	push   cs
  416295:	xor    al,0x17
  416297:	nop
  416298:	out    dx,al
  416299:	dec    edi
  41629a:	or     ebx,edx
  41629c:	or     bl,BYTE PTR [eax]
  41629e:	ja     0x4162d9
  4162a0:	dec    ebp
  4162a1:	mov    ch,0xd7
  4162a3:	loope  0x4162c8
  4162a5:	das    
  4162a6:	mov    ?,esi
  4162a8:	lock jmp 0x416322
  4162ab:	or     DWORD PTR [ebx+0x3],0x5a
  4162af:	and    eax,0x49e06231
  4162b4:	jo     0x416332
  4162b6:	xchg   edx,eax
  4162b7:	into   
  4162b8:	sub    BYTE PTR [edx+0x62fc059a],ch
  4162be:	shl    DWORD PTR [ecx-0xf],cl
  4162c1:	adc    al,0x78
  4162c3:	mov    dh,0x9e
  4162c5:	mov    ch,0xea
  4162c7:	popa   
  4162c8:	(bad)  
  4162ca:	mov    al,ds:0x5b09b91d
  4162cf:	lahf   
  4162d0:	mov    ecx,0xf36d7669
  4162d5:	cmp    BYTE PTR [edx+0x9],cl
  4162d8:	in     eax,0x67
  4162da:	retf   
  4162db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162dc:	(bad)  
  4162dd:	aas    
  4162de:	inc    edi
  4162df:	jmp    0x416334
  4162e1:	add    esp,DWORD PTR [edx-0x31]
  4162e4:	jb     0x41632e
  4162e6:	or     bh,dl
  4162e8:	ret    
  4162e9:	cmp    BYTE PTR [eax+0x67],0x6b
  4162ed:	xchg   ebp,eax
  4162ee:	jp     0x416319
  4162f0:	addr16 xor ah,dl
  4162f3:	add    BYTE PTR [ecx],al
  4162f5:	test   eax,0x23e42e6e
  4162fa:	pop    ds
  4162fb:	ja     0x4162b5
  4162fd:	jb     0x41636c
  4162ff:	mov    ecx,0xe60825a5
  416304:	je     0x4162ab
  416306:	add    al,BYTE PTR [ebp-0x1619ca17]
  41630c:	pop    es
  41630d:	pop    ebx
  41630e:	adc    al,0x7
  416310:	mov    eax,eax
  416312:	jnp    0x416378
  416314:	ror    DWORD PTR [ebx],0x2f
  416317:	idiv   BYTE PTR [esi-0x6e]
  41631a:	pop    ebp
  41631b:	xor    BYTE PTR [edi+eax*8+0x67],al
  41631f:	outs   dx,DWORD PTR ds:[esi]
  416320:	pop    ebx
  416321:	add    DWORD PTR [ecx+0x6f370560],ebp
  416327:	mov    bh,0x88
  416329:	jne    0x416320
  41632b:	nop
  41632c:	(bad)  
  41632d:	mov    bh,0xdf
  41632f:	sbb    cl,ah
  416331:	cdq    
  416332:	mov    esp,0x6fe30f65
  416337:	shl    BYTE PTR [ebx],cl
  416339:	leave  
  41633a:	int3   
  41633b:	add    dl,ch
  41633d:	loope  0x4162f2
  41633f:	mov    ds:0x537e35ba,al
  416344:	test   BYTE PTR [ecx+0x90179c6],0x97
  41634b:	sbb    dh,BYTE PTR [edx-0x45d0e0fa]
  416351:	imul   ebx,DWORD PTR [edi+0x267f6e83],0xffffffd5
  416358:	hlt    
  416359:	fs pushf 
  41635b:	add    eax,0xecfa39fa
  416360:	test   BYTE PTR [edi],0x79
  416363:	push   0x9011782a
  416368:	imul   esi,DWORD PTR [edi+0x6f],0x2e
  41636c:	jmp    0x278e:0x16d1d0c7
  416373:	inc    ebx
  416374:	pop    ecx
  416375:	lock hlt 
  416377:	sahf   
  416378:	pop    ebx
  416379:	pop    esp
  41637a:	xchg   edx,eax
  41637b:	into   
  41637c:	sbb    eax,0x9102b671
  416381:	add    esi,DWORD PTR [ebp-0x5b]
  416384:	imul   edi,DWORD PTR [ecx],0x63aa8a1f
  41638a:	in     eax,0x3e
  41638c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41638d:	test   al,0x8a
  416390:	inc    ecx
  416391:	div    BYTE PTR [ebx-0x1b31643c]
  416397:	add    bh,ch
  416399:	and    DWORD PTR [esi-0x76],ebp
  41639c:	jmp    0x416364
  41639e:	scas   al,BYTE PTR es:[edi]
  41639f:	ins    BYTE PTR es:[edi],dx
  4163a0:	pop    esp
  4163a1:	sbb    eax,0x8b5b0103
  4163a6:	cwde   
  4163a7:	or     bh,BYTE PTR [edi+eax*4+0x6097539c]
  4163ae:	gs (bad) 
  4163b0:	xor    bl,BYTE PTR [ebp-0x77caf178]
  4163b6:	or     BYTE PTR [ecx-0x428de09c],dh
  4163bc:	pop    edi
  4163bd:	or     ah,ah
  4163bf:	pusha  
  4163c0:	aam    0xe
  4163c2:	dec    esp
  4163c3:	sub    DWORD PTR [eax-0x325f97a1],edx
  4163c9:	dec    eax
  4163ca:	in     eax,0x6c
  4163cc:	pop    ecx
  4163cd:	ins    BYTE PTR es:[edi],dx
  4163ce:	not    cl
  4163d0:	and    dl,cl
  4163d2:	adc    BYTE PTR [ebp+0x17],bl
  4163d5:	std    
  4163d6:	mov    edi,0x5a5fc887
  4163db:	(bad)  
  4163dd:	push   es
  4163de:	xchg   esi,eax
  4163df:	jbe    0x416389
  4163e1:	cwde   
  4163e2:	(bad)  [eax+0x3c]
  4163e5:	test   eax,0x90039914
  4163ea:	and    edx,DWORD PTR [edi+0xc]
  4163ed:	fwait
  4163ee:	cmc    
  4163ef:	cmp    ch,BYTE PTR [edi+ebx*8+0x5cf102e6]
  4163f6:	dec    edx
  4163f7:	dec    ebx
  4163f8:	in     eax,0xa3
  4163fa:	xchg   ebx,eax
  4163fb:	loopne 0x4163c0
  4163fd:	into   
  4163fe:	ja     0x4163fb
  416400:	and    eax,0x4a8061e2
  416405:	mov    esp,0x26d8e448
  41640a:	fdivp  st(6),st
  41640c:	int    0x3b
  41640e:	imul   ecx
  416410:	mov    gs,WORD PTR [eax]
  416412:	jbe    0x4163d8
  416414:	jo     0x4163a7
  416416:	xlat   BYTE PTR ds:[ebx]
  416417:	jne    0x4163e8
  416419:	sbb    eax,0x2262c3fb
  41641e:	int    0x7c
  416420:	fild   WORD PTR [ebx-0x6aec014f]
  416426:	xor    DWORD PTR [ecx],esp
  416428:	jno    0x4163e2
  41642a:	jmp    0x4163c1
  41642c:	cs mov ecx,0xc902f1f9
  416432:	into   
  416433:	add    BYTE PTR [edx],0xa9
  416436:	inc    eax
  416437:	add    esp,DWORD PTR [edx+0x1191736d]
  41643d:	add    eax,0x16d7ddf8
  416442:	sahf   
  416443:	cs cld 
  416445:	aad    0xa4
  416447:	stos   BYTE PTR es:[edi],al
  416448:	test   DWORD PTR [edi-0x6f],ebx
  41644b:	enter  0xef2d,0xd
  41644f:	repnz aad 0xe
  416452:	popf   
  416453:	retf   0xdbe7
  416456:	shl    DWORD PTR [ebx],1
  416458:	(bad)  
  416459:	call   0x7b8b1739
  41645e:	and    DWORD PTR [ebx-0x71],eax
  416461:	stc    
  416462:	sbb    al,0x7f
  416464:	mov    esi,0x934db915
  416469:	test   eax,0xf04201e7
  41646e:	add    BYTE PTR [edi],cl
  416470:	ds dec ebp
  416472:	cmp    ch,BYTE PTR [edi-0xf10e522]
  416478:	xor    edi,DWORD PTR [ecx]
  41647a:	dec    edx
  41647b:	push   eax
  41647c:	loop   0x416471
  41647e:	int3   
  41647f:	mov    DWORD PTR [ebp+0x7173f34f],esp
  416485:	inc    esi
  416486:	mov    esi,0x15ea9dd
  41648b:	fs pop ds
  41648d:	mov    ebx,DWORD PTR [eax+ebx*8-0x6a]
  416491:	or     ecx,edx
  416493:	cmp    al,0x4e
  416495:	loope  0x41648e
  416497:	pop    ds
  416498:	and    al,0x5c
  41649a:	mov    ds:0xa56fbadc,al
  41649f:	cdq    
  4164a0:	push   ebp
  4164a1:	jp     0x4164cb
  4164a3:	push   esi
  4164a4:	stc    
  4164a5:	mov    ebx,DWORD PTR [esp+eiz*8-0x7d68ad9b]
  4164ac:	or     BYTE PTR [ecx+0x3fb2da91],0x4a
  4164b3:	shl    al,1
  4164b5:	hlt    
  4164b6:	cmc    
  4164b7:	aad    0x94
  4164b9:	lea    edi,[ebx+0x7f]
  4164bc:	push   ss
  4164bd:	cmp    esi,ebp
  4164bf:	mov    dl,0xe2
  4164c1:	add    ebx,DWORD PTR [ebp+eax*1+0x7d]
  4164c5:	pop    ss
  4164c6:	bound  esp,QWORD PTR [edi+0x6f562cfe]
  4164cc:	in     al,0x5e
  4164ce:	mov    eax,0x802f46ee
  4164d3:	stos   BYTE PTR es:[edi],al
  4164d4:	sbb    BYTE PTR [esi+0x41],ch
  4164d7:	and    BYTE PTR [edx+0x4905a849],al
  4164dd:	mov    eax,ds:0x4d937b96
  4164e2:	das    
  4164e3:	aas    
  4164e4:	or     ebp,DWORD PTR [eax-0x65e0f829]
  4164ea:	adc    BYTE PTR [edx-0x67be0a2a],al
  4164f0:	xor    al,0x17
  4164f2:	xchg   edi,eax
  4164f3:	loop   0x416565
  4164f5:	mov    ebp,0x359d48d2
  4164fa:	mov    ds:0x90e05597,al
  4164ff:	mov    eax,0x90df436f
  416504:	mov    esp,0x2cb816bb
  416509:	leave  
  41650a:	jmp    0x53aa90c4
  41650f:	xor    bh,BYTE PTR [edx+0x19]
  416512:	ja     0x416521
  416514:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416515:	adc    eax,0xdf14a8e1
  41651a:	push   edx
  41651b:	push   ds
  41651c:	sar    BYTE PTR [ebx+0x35],1
  41651f:	pop    esi
  416520:	cmp    bh,BYTE PTR [eax-0x540bf1af]
  416526:	mov    ?,WORD PTR [edi-0x13]
  416529:	int3   
  41652a:	sub    ebx,ecx
  41652c:	jge    0x416544
  41652e:	jecxz  0x416592
  416530:	mov    dh,0xd7
  416532:	mov    cl,0x3f
  416534:	scas   al,BYTE PTR es:[edi]
  416535:	mov    ah,0x5b
  416537:	mov    ds:0xe816d006,al
  41653c:	xor    al,0x9f
  41653e:	in     al,dx
  41653f:	js     0x416520
  416541:	gs popf 
  416543:	inc    eax
  416544:	sub    esp,DWORD PTR [edi]
  416546:	into   
  416547:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416548:	or     DWORD PTR [edi],0xfffffff3
  41654b:	adc    ebx,ecx
  41654d:	cli    
  41654e:	loopne 0x4164df
  416550:	dec    eax
  416551:	and    eax,0xf9107157
  416556:	or     edi,DWORD PTR [esi+eiz*4]
  416559:	out    0x4,al
  41655b:	jle    0x41659f
  41655d:	enter  0x562f,0x37
  416561:	(bad)  
  416562:	xor    eax,0xbcf76926
  416567:	stc    
  416568:	mov    eax,ds:0x6d0303bb
  41656d:	sub    ah,BYTE PTR [eax]
  41656f:	xchg   ecx,eax
  416570:	pushf  
  416571:	cmp    cl,dh
  416573:	les    esi,FWORD PTR [ebx+0x18]
  416576:	cdq    
  416577:	js     0x416508
  416579:	pop    ebx
  41657a:	lea    esp,[eax+0x1a]
  41657d:	into   
  41657e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41657f:	push   ebx
  416580:	jmp    0x35ce4a81
  416585:	aaa    
  416586:	fsub   QWORD PTR [eax+0x2]
  416589:	in     al,0xaf
  41658b:	je     0x41651b
  41658d:	shl    esp,cl
  41658f:	ret    0xff10
  416592:	stos   DWORD PTR es:[edi],eax
  416593:	hlt    
  416594:	data16 jo 0x4165b1
  416597:	lods   eax,DWORD PTR ds:[esi]
  416598:	and    dl,dh
  41659a:	addr16 or eax,0x24d818cc
  4165a0:	xchg   edi,eax
  4165a1:	xor    ch,BYTE PTR [ebx+0x6]
  4165a4:	lea    esp,[ecx-0x39]
  4165a7:	push   ecx
  4165a8:	or     eax,0x465e855f
  4165ad:	ds pushf 
  4165af:	(bad)  
  4165b1:	xchg   ebp,eax
  4165b2:	cmp    eax,0xa70c05e0
  4165b7:	pavgb  mm2,QWORD PTR [ebx+eiz*8+0x4591e593]
  4165bf:	inc    edi
  4165c0:	jne    0x4165b2
  4165c2:	pop    edi
  4165c3:	push   edx
  4165c4:	inc    esp
  4165c5:	xchg   esp,eax
  4165c6:	test   DWORD PTR [edi],0x17790b88
  4165cc:	mov    ch,0x52
  4165ce:	xor    ebp,ebp
  4165d0:	dec    edx
  4165d1:	ins    DWORD PTR es:[edi],dx
  4165d2:	or     al,0x10
  4165d4:	enter  0x746a,0x8f
  4165d8:	daa    
  4165d9:	push   ebx
  4165da:	shl    DWORD PTR [eax],0x10
  4165dd:	retf   0x4696
  4165e0:	mov    cl,0x3e
  4165e2:	mov    ecx,0xba1b4d13
  4165e7:	sbb    bh,al
  4165e9:	and    ecx,DWORD PTR [ebx+0x14]
  4165ec:	and    esi,DWORD PTR [ebp-0x1b397b8c]
  4165f2:	pop    es
  4165f3:	cmp    BYTE PTR [edi],0xf4
  4165f6:	xchg   ebx,eax
  4165f7:	int    0x61
  4165f9:	cmp    al,0x5c
  4165fb:	ror    BYTE PTR [eax-0x4de56b46],1
  416601:	je     0xa15c2288
  416607:	aad    0xbb
  416609:	pop    ds
  41660a:	leave  
  41660b:	jmp    0x41667e
  41660d:	in     al,dx
  41660e:	shl    BYTE PTR [ecx],cl
  416610:	ret    0x25f4
  416613:	dec    ebp
  416614:	shl    DWORD PTR [edi],1
  416616:	xchg   DWORD PTR [edx],ecx
  416618:	daa    
  416619:	sti    
  41661a:	mov    al,0xd9
  41661c:	cdq    
  41661d:	fst    QWORD PTR [ebx+0x60]
  416620:	jo     0x416611
  416622:	shr    DWORD PTR [ebx-0x2250ebb9],cl
  416628:	or     DWORD PTR [ecx],esp
  41662a:	loopne 0x4165c9
  41662c:	adc    al,0x89
  41662e:	add    edi,DWORD PTR [edx+0x12d7c61b]
  416634:	jnp    0x4166a9
  416636:	sbb    eax,ecx
  416638:	xlat   BYTE PTR ds:[ebx]
  416639:	mov    eax,ds:0x8c663855
  41663e:	arpl   WORD PTR [ecx],dx
  416640:	das    
  416641:	das    
  416642:	dec    edi
  416643:	sar    BYTE PTR [esi-0x48076008],cl
  416649:	jno    0x416666
  41664b:	xchg   esi,eax
  41664c:	fsub   QWORD PTR [ecx+0x58]
  41664f:	mov    dl,BYTE PTR [ecx-0x43]
  416652:	popf   
  416653:	mov    ss,ecx
  416655:	int    0xf4
  416657:	jbe    0x416678
  416659:	stc    
  41665a:	leave  
  41665b:	pop    ecx
  41665c:	xchg   esi,eax
  41665d:	sbb    ah,ch
  41665f:	stos   DWORD PTR es:[edi],eax
  416660:	in     eax,dx
  416661:	add    cl,bl
  416663:	xor    eax,0x5fdade7c
  416668:	dec    ebp
  416669:	pop    ds
  41666a:	mov    dl,0x5a
  41666c:	imul   ebp,DWORD PTR [ecx-0x716ed97f],0x5addcde6
  416676:	into   
  416677:	xchg   ebp,eax
  416678:	inc    edx
  416679:	xor    al,0x94
  41667b:	sub    DWORD PTR [ecx+esi*2],edx
  41667e:	call   0x9242:0x4fbf2009
  416685:	out    dx,al
  416686:	add    BYTE PTR [eax],dh
  416688:	sbb    bh,BYTE PTR [ecx-0x3ea27833]
  41668e:	add    eax,0xf6a3087
  416693:	rcl    BYTE PTR [eax],cl
  416695:	mov    ebp,0x3b3f20be
  41669a:	test   al,0x69
  41669c:	pushf  
  41669d:	cmp    ebp,edx
  41669f:	stc    
  4166a0:	add    esp,edi
  4166a2:	inc    esp
  4166a3:	imul   esp,DWORD PTR ds:0xf5c62b48,0x57d0ad9f
  4166ad:	xchg   edi,eax
  4166ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166af:	mov    edi,esi
  4166b1:	into   
  4166b2:	mov    ecx,0x3af8f6dc
  4166b7:	mov    edx,0xc101bd2
  4166bc:	jp     0x416667
  4166be:	dec    edx
  4166bf:	mov    ebp,0xcbd25b25
  4166c4:	retf   
  4166c5:	lods   eax,DWORD PTR ds:[esi]
  4166c6:	jne    0x4166a2
  4166c8:	clc    
  4166c9:	cmp    DWORD PTR [esi+edi*1-0x28],0x46
  4166ce:	test   DWORD PTR [ebx-0x376e6d49],0x6bfbf1c1
  4166d8:	jmp    0x9f87:0xbf840bf2
  4166df:	and    DWORD PTR [edi-0xf],esp
  4166e2:	nop
  4166e3:	rcl    DWORD PTR [edx],0x29
  4166e6:	push   ecx
  4166e7:	jmp    FWORD PTR [ebp+0x529cd9dc]
  4166ed:	xchg   edi,eax
  4166ee:	je     0x4166be
  4166f0:	icebp  
  4166f1:	jno    0x41675f
  4166f3:	ror    DWORD PTR [ecx+0x47],1
  4166f6:	lds    ecx,FWORD PTR [edx+ecx*1-0x56]
  4166fa:	or     edi,DWORD PTR [ebp+0x29a77ef0]
  416700:	dec    esp
  416701:	(bad)  
  416702:	enter  0xc6be,0x89
  416706:	cmp    al,0xa2
  416708:	cmc    
  416709:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41670a:	adc    ch,BYTE PTR [ebp+esi*4+0x22756472]
  416711:	push   esi
  416712:	neg    cl
  416714:	pop    eax
  416715:	mov    eax,ds:0x4b14c806
  41671a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41671b:	sub    cl,BYTE PTR [ebp+eiz*1+0x2a]
  41671f:	lds    ecx,FWORD PTR [esi+0x4c24ee18]
  416725:	test   BYTE PTR [esi-0x1f],bl
  416728:	sbb    esp,DWORD PTR [edx-0x12800088]
  41672e:	pop    esp
  41672f:	cmp    DWORD PTR [edi],ebx
  416731:	dec    edi
  416732:	jbe    0x4166e2
  416734:	mov    edx,0x9dba2ee2
  416739:	and    BYTE PTR [eax+ebx*4+0x3],ah
  41673d:	pop    ebx
  41673e:	cmp    bl,BYTE PTR [esi]
  416740:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416741:	and    DWORD PTR [esi],edi
  416743:	mov    ch,0x1f
  416745:	mov    WORD PTR [eax-0x28307d5a],ds
  41674b:	add    BYTE PTR [esi],bl
  41674d:	or     al,0xb7
  41674f:	lods   eax,DWORD PTR ds:[esi]
  416750:	cwde   
  416751:	(bad)  
  416753:	cs xchg esp,eax
  416755:	nop
  416756:	popf   
  416757:	cmp    ch,BYTE PTR [ebx+edx*2-0x3be6ea05]
  41675e:	data16 xchg BYTE PTR [esp+ebp*1+0x733c2d26],bh
  416766:	cmp    ch,bh
  416768:	fld    DWORD PTR [ebx-0x6a]
  41676b:	xchg   BYTE PTR [ebx],cl
  41676d:	repz add eax,0x92772d3d
  416773:	sbb    eax,0xbfacad2a
  416778:	cld    
  416779:	jno    0x4167cb
  41677b:	mov    DWORD PTR [edx+0x48],esi
  41677e:	out    0x1f,al
  416780:	in     al,dx
  416781:	inc    esp
  416782:	and    eax,0xae745c2b
  416787:	mov    bh,0xec
  416789:	and    eax,0x958428c2
  41678e:	push   ecx
  41678f:	fyl2xp1 
  416791:	lahf   
  416792:	imul   esp,DWORD PTR [eax-0x6476095c],0x2f
  416799:	das    
  41679a:	mov    DWORD PTR [ecx],ecx
  41679c:	or     cl,cl
  41679e:	jp     0x4167cb
  4167a0:	repnz out 0xe6,al
  4167a3:	fwait
  4167a4:	in     eax,0xf9
  4167a6:	pop    ebp
  4167a7:	sbb    al,0xb1
  4167a9:	daa    
  4167aa:	mov    dh,BYTE PTR [edx+0x56]
  4167ad:	add    eax,0x6e0f1761
  4167b2:	scas   al,BYTE PTR es:[edi]
  4167b3:	push   0x7f
  4167b5:	sar    DWORD PTR [ecx],cl
  4167b7:	mov    eax,0x91233529
  4167bc:	cwde   
  4167bd:	jo     0x41683e
  4167bf:	sbb    al,0xda
  4167c1:	loopne 0x416758
  4167c3:	adc    dh,BYTE PTR [ebp-0x11e8484a]
  4167c9:	addr16 mov dl,0xc0
  4167cc:	pop    ebx
  4167cd:	sbb    ch,al
  4167cf:	inc    ebp
  4167d0:	fwait
  4167d1:	and    esi,DWORD PTR [esi-0x72]
  4167d4:	pop    ds
  4167d5:	retf   
  4167d6:	cmp    al,0x2e
  4167d8:	sbb    eax,0x3c6d8962
  4167dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167de:	add    al,0x18
  4167e0:	push   ecx
  4167e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167e2:	outs   dx,DWORD PTR ds:[esi]
  4167e3:	xlat   BYTE PTR ds:[ebx]
  4167e4:	mov    dl,0x4c
  4167e6:	clc    
  4167e7:	sub    eax,0x340fe846
  4167ec:	push   cs
  4167ed:	(bad)  
  4167ee:	cld    
  4167ef:	xchg   ebp,eax
  4167f0:	mov    DWORD PTR [ecx],ecx
  4167f2:	int    0x2
  4167f4:	sbb    cl,dl
  4167f6:	pop    ss
  4167f7:	dec    esi
  4167f8:	push   0xd
  4167fa:	outs   dx,DWORD PTR ds:[esi]
  4167fb:	jne    0x4167e8
  4167fd:	push   eax
  4167fe:	sti    
  4167ff:	sub    eax,0x22c3b501
  416804:	clc    
  416805:	jg     0x41686d
  416807:	mov    ecx,0x1fab2b1e
  41680c:	out    0xf1,al
  41680e:	scas   al,BYTE PTR es:[edi]
  41680f:	mov    ah,0x90
  416811:	push   eax
  416812:	imul   eax,DWORD PTR [ebp-0x4769faa3],0x6c
  416819:	mov    esp,0xfc9f664b
  41681e:	sub    BYTE PTR [eax+ebx*8-0x282cceb7],0x55
  416826:	mov    DWORD PTR [ebx+0x57],esp
  416829:	xchg   edx,esi
  41682b:	fsub   QWORD PTR [ebx-0x4610d46f]
  416831:	scas   eax,DWORD PTR es:[edi]
  416832:	into   
  416833:	jbe    0x4168b4
  416835:	push   es
  416836:	mov    BYTE PTR [ebx-0x3c],bh
  416839:	ins    DWORD PTR es:[edi],dx
  41683a:	sbb    ebx,DWORD PTR [eax+ebp*1]
  41683d:	imul   edx,DWORD PTR [edi-0x70],0xc20ab767
  416844:	mov    ?,WORD PTR [esi]
  416846:	jns    0x4168a6
  416848:	bound  eax,QWORD PTR [esi+0x34262cad]
  41684e:	dec    esi
  41684f:	das    
  416850:	test   eax,0x35fef790
  416855:	out    0xa1,eax
  416857:	inc    esi
  416858:	mov    bh,0x2
  41685a:	bnd jle 0x41680d
  41685d:	mov    dl,0x7d
  41685f:	jge    0x4168bb
  416861:	ins    DWORD PTR es:[edi],dx
  416862:	mov    ecx,0xbf2abf04
  416867:	jno    0x416860
  416869:	daa    
  41686a:	sub    al,0x89
  41686c:	mov    ebx,0x8fdcea7f
  416871:	jg     0x4168e3
  416873:	imul   esp,edx,0x74cdca1f
  416879:	popa   
  41687a:	mov    cs,WORD PTR ds:0xbe42fd97
  416880:	xor    eax,0x7e68b19f
  416885:	clc    
  416886:	cmp    al,0x40
  416888:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416889:	ins    BYTE PTR es:[edi],dx
  41688a:	and    al,0x23
  41688c:	ficom  DWORD PTR [esp+eiz*8+0x6d]
  416890:	jns    0x4168ff
  416892:	xchg   edx,eax
  416893:	xchg   ecx,edi
  416895:	xchg   edi,eax
  416896:	into   
  416897:	fsub   DWORD PTR [eax*8-0x7b366503]
  41689e:	jae    0x4168b3
  4168a0:	arpl   WORD PTR ds:0x276f492d,di
  4168a6:	add    ah,BYTE PTR [edx]
  4168a8:	das    
  4168a9:	xchg   ebx,eax
  4168aa:	push   esi
  4168ab:	inc    edx
  4168ac:	out    dx,al
  4168ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168ae:	inc    esi
  4168af:	xchg   DWORD PTR [eax+0x12],edx
  4168b2:	in     eax,dx
  4168b3:	mov    DWORD PTR [edi+0x48],edx
  4168b6:	out    0x39,al
  4168b8:	mov    ebp,0xf324ad51
  4168bd:	aam    0x94
  4168bf:	cmp    eax,0x22ef4740
  4168c4:	sbb    ecx,DWORD PTR [ebx+0x59f94306]
  4168ca:	xor    ecx,ecx
  4168cc:	and    bl,BYTE PTR [eax+0x19]
  4168cf:	and    edx,ebx
  4168d1:	inc    esp
  4168d2:	sub    BYTE PTR [esi+ebx*4+0x1a3b8c67],bh
  4168d9:	and    DWORD PTR [ebp-0x6fa13dbb],edi
  4168df:	mov    edi,0x93470ed3
  4168e4:	mov    ebx,0x69aa93de
  4168e9:	mov    eax,0x7621ebe6
  4168ee:	jo     0x4168a2
  4168f0:	out    0xcb,eax
  4168f2:	neg    DWORD PTR [ebx]
  4168f4:	mov    ah,0x5
  4168f6:	mov    bh,0x3
  4168f8:	outs   dx,DWORD PTR ds:[esi]
  4168f9:	sahf   
  4168fa:	inc    esi
  4168fb:	in     al,0x3e
  4168fd:	in     eax,dx
  4168fe:	fnstcw WORD PTR [edi+0x3]
  416901:	pop    edx
  416902:	pop    ebp
  416903:	ds arpl dx,dx
  416906:	pop    eax
  416907:	sbb    al,0xa1
  416909:	jl     0x41695e
  41690b:	adc    DWORD PTR ds:0xc995c7f4,esi
  416911:	in     al,dx
  416912:	cld    
  416913:	jge    0x416912
  416915:	inc    eax
  416916:	pop    es
  416917:	mov    ah,0x13
  416919:	sar    dl,0x77
  41691c:	fistp  WORD PTR [ebp+0x5f]
  41691f:	or     DWORD PTR [edx+eiz*1+0x5b],edi
  416923:	mov    esp,0x37ebe29a
  416928:	outs   dx,BYTE PTR ds:[esi]
  416929:	add    edx,esi
  41692b:	pusha  
  41692c:	retf   
  41692d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41692e:	outs   dx,DWORD PTR ds:[esi]
  41692f:	ficomp WORD PTR [ecx+0x52]
  416932:	cmp    BYTE PTR [ecx],al
  416934:	cmp    BYTE PTR [esi-0x61],ah
  416937:	sbb    dh,cl
  416939:	sub    DWORD PTR [edi],ecx
  41693b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41693c:	jo     0x4168ed
  41693e:	mov    al,0x3f
  416940:	int    0x51
  416942:	or     dh,BYTE PTR [esi]
  416944:	enter  0xbb12,0x2b
  416948:	retf   0x245c
  41694b:	mov    al,0x28
  41694d:	stos   DWORD PTR es:[edi],eax
  41694e:	xchg   BYTE PTR [esi+0x59e1f410],bl
  416954:	pop    es
  416955:	repz mov eax,DWORD PTR cs:[esi-0x793eed7]
  41695d:	aam    0xc3
  41695f:	addr16 mov bh,0x83
  416962:	jo     0x416962
  416964:	sub    dl,BYTE PTR [eax]
  416966:	mov    ds:0x69704946,al
  41696b:	add    esp,edx
  41696d:	cmp    al,0x2b
  41696f:	mov    DWORD PTR [edi-0x47],esi
  416972:	test   BYTE PTR [ecx],ch
  416974:	aaa    
  416975:	out    dx,al
  416976:	mov    bh,0x71
  416978:	nop
  416979:	hlt    
  41697a:	dec    ax
  41697c:	inc    edx
  41697d:	popf   
  41697e:	lock pop ebp
  416980:	push   cs
  416981:	and    al,0x83
  416983:	jb     0x416968
  416985:	in     al,dx
  416986:	in     al,dx
  416987:	xchg   esp,eax
  416988:	pushf  
  416989:	mov    al,0x26
  41698b:	es daa 
  41698d:	repz push esi
  41698f:	add    BYTE PTR [eax-0x77],al
  416992:	ins    BYTE PTR es:[edi],dx
  416993:	into   
  416994:	sbb    BYTE PTR [esi-0x58],bh
  416997:	and    al,0xf6
  416999:	push   ecx
  41699a:	lea    ebp,[esi]
  41699c:	and    DWORD PTR [ecx],ebx
  41699e:	mov    ebx,0x746e3d15
  4169a3:	xchg   ebp,eax
  4169a4:	add    BYTE PTR [esp+eax*4],0xf3
  4169a8:	or     DWORD PTR [ebx],ebp
  4169aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169ab:	rol    BYTE PTR [edx-0x32],1
  4169ae:	jnp    0x4169f2
  4169b0:	ss dec ebx
  4169b2:	sbb    eax,0x9365d026
  4169b7:	repnz sub DWORD PTR [edx+0xa],esp
  4169bb:	shl    al,1
  4169bd:	out    0x60,al
  4169bf:	rol    al,0xb2
  4169c2:	retf   
  4169c3:	jb     0x416989
  4169c5:	push   edx
  4169c6:	iret   
  4169c7:	sbb    cl,ch
  4169c9:	daa    
  4169ca:	faddp  st(5),st
  4169cc:	mov    esi,0xfd8ca425
  4169d1:	push   ss
  4169d2:	xlat   BYTE PTR ds:[ebx]
  4169d3:	fsub   DWORD PTR [ebx+edx*1+0x6d393efb]
  4169da:	sbb    BYTE PTR [eax+0x15aa71e0],dh
  4169e0:	pop    ebp
  4169e1:	repz jbe 0x416a32
  4169e4:	push   eax
  4169e5:	jle    0x4169f2
  4169e7:	add    eax,0xc8705c63
  4169ec:	add    cl,BYTE PTR [ebx+0x50d48de2]
  4169f2:	test   DWORD PTR [edi],ebx
  4169f4:	addr16 ss js 0x41697d
  4169f8:	xchg   esi,eax
  4169f9:	push   edi
  4169fa:	(bad)  
  4169fb:	cmp    eax,0xab76db8a
  416a00:	jl     0x416a31
  416a02:	pop    esp
  416a03:	test   ax,0x3ab8
  416a07:	xchg   edi,eax
  416a08:	popf   
  416a09:	fdiv   QWORD PTR [ecx]
  416a0b:	add    dl,BYTE PTR [ebx]
  416a0d:	fisttp QWORD PTR [ebp-0x397e47c7]
  416a13:	mov    al,ds:0xf90b97b8
  416a18:	adc    al,0xe0
  416a1a:	stc    
  416a1b:	dec    ebx
  416a1c:	outs   dx,BYTE PTR ds:[esi]
  416a1d:	lock sbb dl,0x60
  416a21:	jmp    0x86c23e26
  416a26:	rcl    DWORD PTR [ebx-0x65adfa85],cl
  416a2c:	add    BYTE PTR [ebx-0x4d103c37],bh
  416a32:	hlt    
  416a33:	popa   
  416a34:	loopne 0x416a4f
  416a36:	mov    eax,ds:0xb6e2c513
  416a3b:	test   al,0x8e
  416a3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a3e:	pop    edi
  416a3f:	es clc 
  416a41:	cld    
  416a42:	mov    eax,0xfce074d7
  416a47:	ins    DWORD PTR es:[edi],dx
  416a48:	retf   0x26c0
  416a4b:	outs   dx,DWORD PTR ds:[esi]
  416a4c:	test   DWORD PTR [edi+0x24],ecx
  416a4f:	nop
  416a50:	xor    eax,0x6a3a31fd
  416a55:	cdq    
  416a56:	cld    
  416a57:	xlat   BYTE PTR ds:[ebx]
  416a58:	sub    eax,0x3da2f07c
  416a5d:	addr16 pop ecx
  416a5f:	fbstp  TBYTE PTR [ebp+0x23]
  416a62:	jge    0x416a5a
  416a64:	fmul   st,st(1)
  416a66:	xchg   BYTE PTR [ebp-0x67aa5c06],dh
  416a6c:	mov    ds:0xaa228228,al
  416a71:	shl    DWORD PTR [bx+si-0x555d],0x8e
  416a77:	and    esp,DWORD PTR [edx-0x64ec8cdf]
  416a7d:	test   DWORD PTR [ebp+ecx*1+0x73],esi
  416a81:	call   0x799f:0xfb49a41c
  416a88:	cld    
  416a89:	xor    eax,0x6ce9afce
  416a8e:	pop    ds
  416a8f:	outs   dx,DWORD PTR ds:[esi]
  416a90:	sbb    BYTE PTR ds:0x1deb1e05,dl
  416a96:	loop   0x416b08
  416a98:	fstp   QWORD PTR [esi]
  416a9a:	xor    al,0x7c
  416a9c:	cs dec edx
  416a9e:	jecxz  0x416acd
  416aa0:	sbb    edi,DWORD PTR [esi+0x5d]
  416aa3:	inc    eax
  416aa4:	dec    BYTE PTR [esi-0x373695d1]
  416aaa:	sub    BYTE PTR [ebx+0x3b],bh
  416aad:	retf   
  416aae:	add    dl,BYTE PTR [ebp+ebx*8-0x2d]
  416ab2:	push   0x5d
  416ab4:	push   edi
  416ab5:	jmp    0xb9f:0xb80caa01
  416abc:	loop   0x416a74
  416abe:	pop    edi
  416abf:	pop    ebx
  416ac0:	dec    ebx
  416ac1:	cmp    ah,BYTE PTR [edi+esi*2+0xe]
  416ac5:	jnp    0x416a84
  416ac7:	dec    eax
  416ac8:	xchg   esi,eax
  416ac9:	mov    esi,DWORD PTR [edi+0x24f90b58]
  416acf:	mov    ebp,eax
  416ad1:	scas   al,BYTE PTR es:[edi]
  416ad2:	(bad)  
  416ad3:	sub    bl,BYTE PTR [esi+0x35]
  416ad6:	pop    eax
  416ad7:	dec    eax
  416ad8:	out    dx,eax
  416ad9:	push   esi
  416ada:	push   eax
  416adb:	adc    BYTE PTR [esp+edi*8-0x7],0x5b
  416ae0:	popa   
  416ae1:	jae    0x416a85
  416ae3:	and    DWORD PTR [ecx-0xf],edx
  416ae6:	add    ebx,DWORD PTR [edi]
  416ae8:	out    dx,eax
  416ae9:	fwait
  416aea:	mov    ds:0x72c176d7,eax
  416aef:	imul   edx,DWORD PTR [eax+0x1e],0x5a
  416af3:	dec    eax
  416af4:	fistp  QWORD PTR [edx+0x10f9d13c]
  416afa:	xor    al,0xe2
  416afc:	adc    ebx,DWORD PTR [ecx+0x3477c807]
  416b02:	adc    eax,0x77407db1
  416b07:	sar    DWORD PTR [esi],cl
  416b09:	pop    ebp
  416b0a:	xlat   BYTE PTR ds:[ebx]
  416b0b:	shl    BYTE PTR [edi+edx*2-0x37],0x40
  416b10:	retf   0x3c09
  416b13:	cmp    al,0xc3
  416b15:	pop    ss
  416b16:	sahf   
  416b17:	push   edx
  416b18:	arpl   WORD PTR [ecx-0x1cb7d692],si
  416b1e:	sbb    DWORD PTR [ecx+0x191e2be0],0x30
  416b25:	pop    edi
  416b26:	cmc    
  416b27:	dec    esi
  416b28:	add    BYTE PTR [eax],cl
  416b2a:	mov    ch,0xfa
  416b2c:	pop    eax
  416b2d:	nop
  416b2e:	(bad)  
  416b2f:	pop    ebp
  416b30:	(bad)  
  416b31:	xor    al,0x75
  416b33:	pushf  
  416b34:	in     al,0xd7
  416b36:	jmp    0x416634c3
  416b3b:	arpl   WORD PTR [esi+0x31d13dd],sp
  416b41:	(bad)  
  416b43:	loopne 0x416b70
  416b45:	pop    ds
  416b46:	test   eax,0x71f8ae45
  416b4b:	mov    ebx,0xca6298e7
  416b50:	sbb    DWORD PTR [esi+0x119afb52],edi
  416b56:	les    ecx,FWORD PTR [edx]
  416b58:	pop    edx
  416b59:	mov    ah,0x2a
  416b5b:	(bad)  
  416b5c:	fisubr DWORD PTR cs:[edi]
  416b5f:	jo     0x416b02
  416b61:	add    bl,cl
  416b63:	add    al,0xf5
  416b65:	dec    ebx
  416b66:	das    
  416b67:	popa   
  416b68:	std    
  416b69:	xchg   esp,esi
  416b6b:	in     eax,dx
  416b6c:	push   esp
  416b6d:	dec    eax
  416b6e:	or     BYTE PTR [esi+ebx*8-0x48],ch
  416b72:	push   edi
  416b73:	inc    ebx
  416b74:	or     eax,0xc7a624e7
  416b79:	mov    esi,DWORD PTR [edi]
  416b7b:	and    dh,al
  416b7d:	and    esi,DWORD PTR [edi]
  416b7f:	cmp    eax,0x5e7786
  416b84:	sbb    al,0xba
  416b86:	sub    dh,cl
  416b88:	jae    0x416b7c
  416b8a:	sahf   
  416b8b:	push   ss
  416b8c:	ror    DWORD PTR [esi+0x53],1
  416b8f:	icebp  
  416b90:	adc    DWORD PTR [ebp+0x56],ecx
  416b93:	and    al,0x6f
  416b95:	jbe    0x416be5
  416b97:	cmp    al,0x4e
  416b99:	fidivr DWORD PTR [eax+0x33]
  416b9c:	push   eax
  416b9d:	loopne 0x416b38
  416b9f:	pusha  
  416ba0:	jmp    0xd718:0x91b50300
  416ba7:	mov    ?,WORD PTR [edx]
  416ba9:	sbb    ch,bh
  416bab:	aad    0x85
  416bad:	pop    es
  416bae:	adc    eax,DWORD PTR [ebp+0xfd790f3]
  416bb4:	cdq    
  416bb5:	lahf   
  416bb6:	sub    eax,0x40b24363
  416bbb:	ror    ebx,1
  416bbd:	push   cs
  416bbe:	jno    0x416be6
  416bc0:	lds    ecx,FWORD PTR [ecx+0x38]
  416bc3:	adc    ah,ch
  416bc5:	cmp    eax,edx
  416bc7:	inc    esi
  416bc8:	ret    
  416bc9:	imul   edx,DWORD PTR [esi-0x16],0x46ab4c83
  416bd0:	jb     0x416b60
  416bd2:	xchg   ebp,eax
  416bd3:	(bad)  
  416bd4:	jne    0x416c22
  416bd6:	(bad)  
  416bd7:	out    dx,al
  416bd8:	cdq    
  416bd9:	sub    BYTE PTR [edx+0x5b],ah
  416bdc:	(bad)  
  416bdd:	cwde   
  416bde:	ins    BYTE PTR es:[edi],dx
  416bdf:	mov    esi,0xea14a39e
  416be4:	popa   
  416be5:	and    al,0xe1
  416be7:	aam    0x97
  416be9:	test   BYTE PTR [ecx+eax*4],0xdb
  416bed:	in     eax,0x24
  416bef:	pop    ds
  416bf0:	retf   0xe33
  416bf3:	jp     0x416c48
  416bf5:	pusha  
  416bf6:	pop    edx
  416bf7:	inc    DWORD PTR [esi+0x63]
  416bfa:	lahf   
  416bfb:	push   cs
  416bfc:	imul   ebx,DWORD PTR [eax-0x6b],0x31035f3
  416c03:	ins    BYTE PTR es:[edi],dx
  416c04:	cmp    edx,eax
  416c06:	scas   eax,DWORD PTR es:[edi]
  416c07:	test   WORD PTR [edx+0x5b],ax
  416c0b:	sub    al,0x85
  416c0d:	psubsw mm3,QWORD PTR es:[esi-0x4b]
  416c12:	mov    BYTE PTR [ecx+0x2f],bl
  416c15:	pop    esp
  416c16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c17:	std    
  416c18:	mov    ebp,0xf1f7458c
  416c1d:	xchg   ecx,eax
  416c1e:	jae    0x416c00
  416c20:	pop    edi
  416c21:	out    dx,al
  416c22:	js     0x416c4d
  416c24:	sbb    BYTE PTR [eax],ah
  416c26:	dec    edx
  416c27:	jmp    0x416c6b
  416c29:	je     0x416c5c
  416c2b:	hlt    
  416c2c:	fild   WORD PTR [ebx]
  416c2e:	and    BYTE PTR [esi],0x1b
  416c31:	and    cl,BYTE PTR [ebp+0x6b5ce586]
  416c37:	cmp    cl,ah
  416c39:	popf   
  416c3a:	xchg   ecx,eax
  416c3b:	xchg   edx,eax
  416c3c:	cmp    DWORD PTR [ebx+0x3],0x70
  416c40:	pop    edx
  416c41:	xchg   esp,eax
  416c42:	mov    DWORD PTR [esi-0x30e4f9ae],0xe5776193
  416c4c:	add    BYTE PTR [eax],bh
  416c4e:	lock push esi
  416c50:	hlt    
  416c51:	xor    al,0x8
  416c53:	or     ch,ch
  416c55:	jg     0x416c95
  416c57:	test   BYTE PTR [ecx+edi*4+0x5d6c8b15],cl
  416c5e:	or     dh,BYTE PTR ds:0x1b184953
  416c64:	inc    edx
  416c65:	aas    
  416c66:	add    BYTE PTR [ecx],ch
  416c68:	sbb    al,0x81
  416c6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c6b:	and    BYTE PTR [ecx],al
  416c6d:	add    al,0x5e
  416c6f:	jp     0x416cc3
  416c71:	push   eax
  416c72:	ds ret 0x8186
  416c76:	outs   dx,DWORD PTR ds:[esi]
  416c77:	mov    esp,0x4baec89
  416c7c:	lds    ecx,FWORD PTR [ebx-0x46]
  416c7f:	aad    0x2f
  416c81:	stos   BYTE PTR es:[edi],al
  416c82:	pushf  
  416c83:	loopne 0x416cda
  416c85:	inc    ebx
  416c86:	dec    edx
  416c87:	pop    esi
  416c88:	jns    0x416c72
  416c8a:	lods   eax,DWORD PTR ds:[esi]
  416c8b:	rcr    DWORD PTR ds:0xb03abebd,cl
  416c91:	sbb    eax,0x9ee232b2
  416c96:	sub    BYTE PTR [ebx],dh
  416c98:	push   0x169c8e14
  416c9d:	mov    ah,0x4a
  416c9f:	mov    BYTE PTR [ebp-0x76ed8dda],ah
  416ca5:	mov    eax,ds:0x211e8d32
  416caa:	daa    
  416cab:	dec    esi
  416cac:	int    0x72
  416cae:	imul   edi,DWORD PTR ds:0xe250f52,0xa5706b77
  416cb8:	adc    bl,bh
  416cba:	adc    edi,esi
  416cbc:	retf   0x97c1
  416cbf:	xlat   BYTE PTR ds:[ebx]
  416cc0:	div    DWORD PTR [ebp+0x279e52f9]
  416cc6:	push   0xffffffd3
  416cc8:	imul   esi,DWORD PTR [edx],0x79490c18
  416cce:	stos   DWORD PTR es:[edi],eax
  416ccf:	mov    ebp,0xaadb4dfb
  416cd4:	inc    ecx
  416cd5:	add    DWORD PTR [eax-0x17],ebx
  416cd8:	pop    eax
  416cd9:	sub    BYTE PTR [esi],ah
  416cdb:	loop   0x416d1d
  416cdd:	arpl   WORD PTR [ebx+ebp*1-0x321bf549],bx
  416ce4:	ins    BYTE PTR es:[edi],dx
  416ce5:	arpl   WORD PTR [ecx],cx
  416ce7:	sbb    eax,0xaa84de6b
  416cec:	mov    eax,0xd58760c
  416cf1:	jge    0x416cca
  416cf3:	pop    ecx
  416cf4:	push   ebx
  416cf5:	push   ebx
  416cf6:	dec    edx
  416cf7:	or     BYTE PTR [ecx+0x847acdb],al
  416cfd:	gs adc DWORD PTR fs:[ecx+edi*4],esi
  416d02:	push   edi
  416d03:	ja     0x416ce2
  416d05:	jl     0x416c8a
  416d07:	mov    BYTE PTR [ecx],bl
  416d09:	js     0x416d60
  416d0b:	mov    edi,0xe81d3909
  416d10:	outs   dx,DWORD PTR ds:[esi]
  416d11:	daa    
  416d12:	dec    esp
  416d13:	inc    ebp
  416d14:	xor    dl,BYTE PTR [ecx]
  416d16:	test   DWORD PTR [eax],edi
  416d18:	out    dx,al
  416d19:	stc    
  416d1a:	xor    DWORD PTR [edi-0x24],ebx
  416d1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d1e:	loope  0x416d19
  416d20:	in     eax,0x77
  416d22:	sbb    dh,cl
  416d24:	dec    esi
  416d25:	pop    edx
  416d26:	neg    edx
  416d28:	dec    ecx
  416d29:	jno    0x416d91
  416d2b:	push   edi
  416d2c:	adc    DWORD PTR [esi+0x5c],eax
  416d2f:	adc    al,0xfb
  416d31:	(bad)  
  416d32:	and    al,0xd4
  416d34:	pusha  
  416d35:	(bad)  
  416d36:	and    edi,esp
  416d38:	push   eax
  416d39:	add    al,ch
  416d3b:	mov    cl,0x97
  416d3d:	dec    eax
  416d3e:	aam    0xdb
  416d40:	bound  ebp,QWORD PTR [esi+0x3c9243e8]
  416d46:	and    eax,0x3a62360
  416d4b:	lea    ecx,[esi+0x6b]
  416d4e:	jbe    0x416d7f
  416d50:	pop    ebp
  416d51:	inc    ebp
  416d52:	mov    al,0xaf
  416d54:	sbb    ebp,0x4e
  416d57:	ret    0x5d3d
  416d5a:	dec    esp
  416d5b:	jg     0x416da8
  416d5d:	add    DWORD PTR [ecx-0x35cd20ff],esi
  416d63:	mov    edi,0xb70dfc92
  416d68:	gs ror edi,1
  416d6b:	mov    bh,0x91
  416d6d:	outs   dx,DWORD PTR ds:[esi]
  416d6e:	inc    eax
  416d6f:	pop    ds
  416d70:	add    ebp,ebx
  416d72:	mov    dh,0xd
  416d74:	gs cdq 
  416d76:	sbb    BYTE PTR [eax],0x63
  416d79:	push   ebx
  416d7a:	ds push edx
  416d7c:	retf   
  416d7d:	in     al,0x9d
  416d7f:	cdq    
  416d80:	fcom   DWORD PTR [ebx]
  416d82:	fiadd  WORD PTR [ecx]
  416d84:	aam    0xf3
  416d86:	int3   
  416d87:	pop    ss
  416d88:	bound  ebx,QWORD PTR [edx]
  416d8a:	pusha  
  416d8b:	adc    eax,0xe0a4d7e2
  416d90:	sbb    eax,0x3efad2e5
  416d95:	xchg   ebp,edi
  416d97:	cmp    ecx,DWORD PTR [ebp+edi*4+0x38a2918a]
  416d9e:	les    edx,FWORD PTR [edx-0x53]
  416da1:	mov    ch,0xb2
  416da3:	mov    ch,0xab
  416da5:	cwde   
  416da6:	std    
  416da7:	mov    ecx,0x41dd7dd3
  416dac:	not    dl
  416dae:	or     al,0x27
  416db0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416db1:	stos   DWORD PTR es:[edi],eax
  416db2:	xchg   ebp,eax
  416db3:	add    eax,DWORD PTR [esi]
  416db5:	or     DWORD PTR [ebp-0x69],0xb3c5b6e5
  416dbc:	fst    DWORD PTR [ecx+ebx*8]
  416dbf:	aaa    
  416dc0:	aam    0xb1
  416dc2:	mov    al,0x5d
  416dc4:	push   ss
  416dc5:	jbe    0x416dd1
  416dc7:	cmp    ecx,DWORD PTR [edx]
  416dc9:	mov    WORD PTR [edx-0x543e6cb3],?
  416dcf:	add    eax,0x58bf321e
  416dd4:	xchg   ebp,eax
  416dd5:	add    dh,BYTE PTR [ecx*4+0x64f57be9]
  416ddc:	cmp    al,0x3e
  416dde:	mov    ds:0xa0b1eb30,al
  416de3:	and    DWORD PTR [ebp+0x8],ebx
  416de6:	mov    ah,0x72
  416de8:	mov    DWORD PTR [edx+0x55],0x7101f05d
  416def:	cmc    
  416df0:	push   ebp
  416df1:	and    al,0xb2
  416df3:	sti    
  416df4:	jae    0x416d9f
  416df6:	outs   dx,DWORD PTR ds:[esi]
  416df7:	sbb    BYTE PTR [eax-0x4de54ab0],dl
  416dfd:	xchg   DWORD PTR [edi+0x49],esp
  416e00:	push   esi
  416e01:	mov    eax,0xf2615033
  416e06:	push   ebp
  416e07:	aaa    
  416e08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e09:	fdiv   st,st(0)
  416e0b:	cwde   
  416e0c:	fiadd  WORD PTR [ebx+0x6b]
  416e0f:	bound  ebx,QWORD PTR [eax+0x53]
  416e12:	mov    al,cl
  416e14:	iret   
  416e15:	add    BYTE PTR [esi+0x58a0e8e8],dl
  416e1b:	hlt    
  416e1c:	ins    BYTE PTR es:[edi],dx
  416e1d:	nop
  416e1e:	icebp  
  416e1f:	shl    DWORD PTR [ecx+0x30432cca],0x6e
  416e26:	push   0xc
  416e28:	dec    edi
  416e29:	fisubr DWORD PTR ds:0x67fdcca5
  416e2f:	lock xchg esi,eax
  416e31:	pusha  
  416e32:	push   edx
  416e33:	loope  0x416dbe
  416e35:	test   eax,0x982beffd
  416e3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e3b:	mov    cl,0x61
  416e3d:	mov    ch,0x1
  416e3f:	inc    esp
  416e40:	icebp  
  416e41:	or     esp,0x552fadb
  416e47:	and    al,0x24
  416e49:	test   BYTE PTR [esi],bh
  416e4b:	inc    ecx
  416e4d:	dec    esp
  416e4e:	pop    eax
  416e4f:	or     esi,DWORD PTR [edi+0x12]
  416e52:	mov    eax,ds:0xb4685581
  416e57:	es in  al,dx
  416e59:	xor    ch,BYTE PTR ds:0x54a1ca9d
  416e5f:	arpl   WORD PTR [ecx+ebx*4+0x60df4732],sp
  416e66:	(bad)  
  416e67:	push   0x8f6f217f
  416e6c:	mov    eax,ds:0x1f86b4cc
  416e71:	dec    esi
  416e72:	test   DWORD PTR [edx-0x56634453],ebp
  416e78:	in     al,0xb0
  416e7a:	inc    esi
  416e7b:	daa    
  416e7c:	mov    bl,0xf8
  416e7e:	ror    DWORD PTR [eiz*1+0x3996c4e5],0x2f
  416e86:	inc    esi
  416e87:	scas   eax,DWORD PTR es:[edi]
  416e88:	retf   0xcf2c
  416e8b:	ss aad 0xe8
  416e8e:	repz and BYTE PTR [esi+edx*1+0x23f1cc47],dh
  416e96:	jns    0x416e74
  416e98:	cmp    DWORD PTR [eax-0x10aa0183],edx
  416e9e:	xor    bl,BYTE PTR [ebp-0x79f9311c]
  416ea4:	cmc    
  416ea5:	jp     0x416e42
  416ea7:	or     ah,BYTE PTR [edx]
  416ea9:	push   ss
  416eaa:	cwde   
  416eab:	pop    esp
  416eac:	(bad)  
  416ead:	iret   
  416eae:	stos   BYTE PTR es:[edi],al
  416eaf:	xor    eax,0x64ae23c3
  416eb4:	daa    
  416eb5:	cli    
  416eb6:	ins    BYTE PTR es:[edi],dx
  416eb7:	adc    al,0xd9
  416eb9:	and    edx,DWORD PTR [ebx]
  416ebb:	leave  
  416ebc:	lds    edi,FWORD PTR [ecx+0x31d5f358]
  416ec2:	dec    esp
  416ec3:	ds ret 0xc06b
  416ec7:	(bad)  
  416ec8:	dec    BYTE PTR [ebp-0x613ee1f8]
  416ece:	(bad)  
  416ecf:	ror    ah,1
  416ed1:	push   eax
  416ed2:	jge    0x416e84
  416ed4:	(bad)  
  416ed5:	cmp    eax,0xf666a676
  416eda:	inc    esp
  416edb:	xchg   esi,eax
  416edc:	imul   eax,DWORD PTR [edi+ecx*1],0xffffffea
  416ee0:	ss jns 0x416f50
  416ee3:	aam    0x48
  416ee5:	and    bl,BYTE PTR [eax]
  416ee7:	jnp    0x416eb4
  416ee9:	ret    0xddd9
  416eec:	jnp    0x416eb5
  416eee:	mov    ?,WORD PTR [ecx-0x6f]
  416ef1:	data16 xlat BYTE PTR ds:[ebx]
  416ef3:	push   eax
  416ef4:	and    bh,bh
  416ef6:	inc    ebp
  416ef7:	xchg   ecx,eax
  416ef8:	xchg   ecx,eax
  416ef9:	cs pop ebp
  416efb:	xchg   esi,eax
  416efc:	xchg   BYTE PTR [eax+0x42d74a55],cl
  416f02:	mov    ah,0x86
  416f04:	sub    dh,BYTE PTR [ecx-0x2b588490]
  416f0a:	mov    ch,0x71
  416f0c:	idiv   DWORD PTR [edx-0x15bd91e6]
  416f12:	scas   al,BYTE PTR es:[edi]
  416f13:	xor    eax,0x438108d3
  416f18:	daa    
  416f19:	jl     0x416eef
  416f1b:	dec    esp
  416f1c:	push   0x3d
  416f1e:	lods   al,BYTE PTR ds:[esi]
  416f1f:	mov    ebx,edx
  416f21:	(bad)  
  416f22:	mov    ecx,DWORD PTR [eax+0x2b5008f0]
  416f28:	jle    0x416f11
  416f2a:	or     al,BYTE PTR [ecx+ebp*4-0x1a]
  416f2e:	dec    ebx
  416f2f:	mov    bh,0x50
  416f31:	fs and al,0xf6
  416f34:	(bad)  
  416f35:	lea    eax,[ecx+eax*1]
  416f38:	or     dl,BYTE PTR [eax+0x4a]
  416f3b:	mov    ebp,0x14a91320
  416f40:	out    0xfe,al
  416f42:	cmp    ch,BYTE PTR [ebp+0x57abc11]
  416f48:	call   0xaf9efa94
  416f4d:	int    0xcb
  416f4f:	pop    edi
  416f50:	sti    
  416f51:	fcmovne st,st(6)
  416f53:	std    
  416f54:	nop
  416f55:	fs iret 
  416f57:	dec    DWORD PTR [ecx-0x311beede]
  416f5d:	push   edi
  416f5e:	pop    esp
  416f5f:	cmp    eax,0xa138276f
  416f64:	cmp    ah,BYTE PTR [ecx-0x7]
  416f67:	ss mov ch,0xdc
  416f6a:	jecxz  0x416fe1
  416f6c:	cmp    al,0xce
  416f6e:	sub    esi,esp
  416f70:	push   0x8cfd7dfe
  416f75:	sar    DWORD PTR [edx],1
  416f77:	mov    al,BYTE PTR [ebp-0xd]
  416f7a:	xlat   BYTE PTR ds:[ebx]
  416f7b:	call   0x5a16:0xad94f44f
  416f82:	push   eax
  416f83:	jns    0x417004
  416f85:	dec    ecx
  416f86:	dec    di
  416f88:	pop    ebx
  416f89:	inc    ebp
  416f8a:	xchg   DWORD PTR ds:0x7dd3e17e,esi
  416f90:	and    al,0xe5
  416f92:	jecxz  0x416f26
  416f94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f95:	ficomp WORD PTR [ebx+0x21]
  416f98:	sbb    al,0x13
  416f9a:	lea    eax,[eax]
  416f9c:	les    edx,FWORD PTR [ebp+0x53]
  416f9f:	addr16 es pop ebp
  416fa2:	add    DWORD PTR [ebx],ecx
  416fa4:	aas    
  416fa5:	pop    ecx
  416fa6:	scas   eax,DWORD PTR es:[edi]
  416fa7:	std    
  416fa8:	in     eax,dx
  416fa9:	(bad)  
  416faa:	push   eax
  416fab:	push   ebx
  416fac:	jns    0x416fe7
  416fae:	ror    BYTE PTR [ebx],0xb5
  416fb1:	xlat   BYTE PTR ds:[ebx]
  416fb2:	dec    edx
  416fb3:	test   eax,0x94ef0dc4
  416fb8:	std    
  416fb9:	test   BYTE PTR [ebx-0x47],dl
  416fbc:	jbe    0x416fcf
  416fbe:	data16 std 
  416fc0:	push   esi
  416fc1:	adc    DWORD PTR [ecx+0x1b],ebp
  416fc4:	fwait
  416fc5:	out    dx,al
  416fc6:	int    0x94
  416fc8:	test   DWORD PTR [edx+0x413c94bd],0x9ab8ac5e
  416fd2:	fwait
  416fd3:	hlt    
  416fd4:	test   al,0x44
  416fd6:	repnz mov ebx,0x61fd96f0
  416fdc:	sub    eax,0xb6dccba7
  416fe1:	jmp    0x1c57:0xee414a9e
  416fe8:	or     bh,cl
  416fea:	call   0x104f:0xcc62f6f7
  416ff1:	mov    ebp,0xced0db96
  416ff6:	int3   
  416ff7:	and    ebp,0xffffffd1
  416ffa:	sbb    cl,BYTE PTR ds:0xf29504d8
  417000:	les    ebp,FWORD PTR [edx-0x27]
  417003:	inc    eax
  417004:	rcl    ecx,0x3d
  417007:	push   ebx
  417008:	mov    ah,0x1
  41700a:	outs   dx,BYTE PTR ds:[esi]
  41700b:	and    BYTE PTR [eax+0x1],bh
  41700e:	mov    bl,0x61
  417010:	les    esp,FWORD PTR [eax+0x27]
  417013:	xor    ch,bl
  417015:	dec    esi
  417016:	sti    
  417017:	ret    0x32b6
  41701a:	push   edx
  41701b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41701c:	mov    eax,ds:0xb49fed77
  417021:	scas   eax,DWORD PTR es:[edi]
  417022:	mov    al,0xa5
  417024:	pop    edi
  417025:	pop    DWORD PTR [edi]
  417027:	hlt    
  417028:	mov    al,0x1f
  41702a:	sbb    eax,DWORD PTR [ebx+ecx*2+0x36]
  41702e:	aad    0x7
  417030:	and    DWORD PTR [edi+0xefc1b81],0x72fdf5e3
  41703a:	stos   BYTE PTR es:[edi],al
  41703b:	icebp  
  41703c:	inc    esp
  41703d:	es int 0xb2
  417040:	mov    WORD PTR [esi+ecx*4+0x1d3a4d66],ds
  417047:	mul    DWORD PTR [edx+0x3840e542]
  41704d:	(bad)  
  41704e:	int3   
  41704f:	test   eax,0x31723761
  417054:	jl     0x4170b9
  417056:	sbb    edx,ebx
  417058:	out    0x54,al
  41705a:	clc    
  41705b:	out    dx,eax
  41705c:	aad    0xb5
  41705e:	mov    cl,0x3
  417060:	push   ss
  417061:	sub    dl,al
  417063:	jl     0x416fea
  417065:	add    BYTE PTR [ebp+0x25de5f11],dl
  41706b:	xchg   BYTE PTR gs:[ecx],bl
  41706e:	ret    
  41706f:	mov    ds:0x3b317f4b,eax
  417074:	repz or eax,0x75c35bd5
  41707a:	rol    WORD PTR [ebx+0x262b6e1],0x98
  417082:	jae    0x4170f1
  417084:	cwde   
  417085:	outs   dx,BYTE PTR ds:[esi]
  417086:	jle    0x4170ca
  417088:	add    eax,0xd403071f
  41708d:	adc    eax,0x695e7ff
  417092:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417093:	es adc ebp,esi
  417096:	dec    eax
  417097:	or     DWORD PTR [edi],0x94d99fe2
  41709d:	mov    bh,0x14
  41709f:	jae    0x417103
  4170a1:	xor    al,0xa0
  4170a3:	cmp    DWORD PTR [ecx],edx
  4170a5:	jbe    0x4170be
  4170a7:	sub    al,0xb5
  4170a9:	adc    BYTE PTR [edi],bl
  4170ab:	mov    dh,0x4
  4170ad:	iret   
  4170ae:	push   0xb226c947
  4170b3:	mov    esi,0x2979eb6e
  4170b8:	popa   
  4170b9:	mov    ecx,0xf36d8559
  4170be:	cld    
  4170bf:	mov    esi,0x8e5ae52d
  4170c4:	jmp    0x9766:0xad814296
  4170cb:	xchg   esp,eax
  4170cc:	lods   eax,DWORD PTR ds:[esi]
  4170cd:	enter  0x6ca9,0xf8
  4170d1:	lea    esi,[edx-0x2c]
  4170d4:	pusha  
  4170d5:	xor    dh,ch
  4170d7:	or     eax,ebp
  4170d9:	mov    esi,cs
  4170db:	xor    eax,0x2edf7b44
  4170e0:	(bad)  
  4170e1:	adc    DWORD PTR [eax],esi
  4170e3:	lea    ebp,[edx-0x5714807b]
  4170e9:	aas    
  4170ea:	test   ecx,ebx
  4170ec:	das    
  4170ed:	mov    edx,0x1aee110a
  4170f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170f3:	into   
  4170f4:	std    
  4170f5:	inc    eax
  4170f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170f7:	sub    eax,0x76e0cc77
  4170fc:	shl    dh,1
  4170fe:	in     al,dx
  4170ff:	cmp    DWORD PTR [ebp-0x52],0xffffff93
  417103:	mul    DWORD PTR [edi]
  417105:	push   esi
  417106:	sbb    dh,dh
  417108:	cmp    DWORD PTR ds:0x46c3727a,0x62
  41710f:	mov    edi,0x456c9b20
  417114:	mov    BYTE PTR [eax+0x102184c8],bh
  41711a:	mov    dl,0x19
  41711c:	bound  ecx,QWORD PTR gs:[ecx]
  41711f:	fwait
  417120:	cmp    DWORD PTR [edx-0x12],0x2f
  417124:	or     al,dh
  417126:	ss inc esi
  417128:	add    DWORD PTR [ebx],ecx
  41712a:	dec    ecx
  41712b:	xor    bl,BYTE PTR ds:0xceab9219
  417131:	push   es
  417132:	sbb    al,0xf6
  417134:	ret    
  417135:	pop    esi
  417136:	push   ecx
  417137:	mov    esi,0xfd368f54
  41713c:	sub    eax,0x4917d18
  417141:	int    0x5b
  417143:	ss inc ecx
  417145:	js     0x4170f5
  417147:	and    al,0x9a
  417149:	mov    dh,0xf6
  41714b:	jae    0x417124
  41714d:	pop    ds
  41714e:	fidiv  WORD PTR [eax+0x4d]
  417151:	daa    
  417152:	fist   WORD PTR [edi+0x27e5b9f0]
  417158:	dec    esp
  417159:	or     al,0xf1
  41715b:	mov    al,ds:0xe7e7cd4d
  417160:	iret   
  417161:	stos   BYTE PTR es:[edi],al
  417162:	(bad)  
  417163:	cli    
  417164:	mov    edi,DWORD PTR [eax+ecx*2+0x67]
  417168:	(bad)  ss:[ebx+0x10cf4c19]
  41716f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417170:	(bad)  
  417171:	mul    BYTE PTR [ebx]
  417173:	xor    esp,DWORD PTR [ecx+0x298e437]
  417179:	sbb    ebp,DWORD PTR [eax]
  41717b:	test   DWORD PTR [ecx+0x55],0x65cbe929
  417182:	jmp    0x842b:0xa089748d
  417189:	fild   WORD PTR [ebp-0x3969f2ed]
  41718f:	scas   al,BYTE PTR es:[edi]
  417190:	test   al,0xf9
  417192:	or     DWORD PTR [ebx-0x5dfaa984],edi
  417198:	inc    ebp
  417199:	cwde   
  41719a:	out    0x2a,eax
  41719c:	mov    ds:0x4a8dc66e,eax
  4171a1:	dec    ebx
  4171a2:	sbb    eax,0xff949e1
  4171a7:	pop    edi
  4171a8:	dec    ebp
  4171a9:	pop    ebp
  4171aa:	pop    es
  4171ab:	mov    ch,0x1e
  4171ad:	mov    cl,0x4f
  4171af:	sub    al,BYTE PTR [ecx+ebp*2+0x4045e0ea]
  4171b6:	cli    
  4171b7:	js     0x417171
  4171b9:	les    eax,FWORD PTR es:[ebx+0x5a]
  4171bd:	inc    edx
  4171be:	test   DWORD PTR [eax+eiz*4-0x42336433],0x6d717808
  4171c9:	mov    ds:0x6780655a,eax
  4171ce:	and    eax,0xd63a358b
  4171d3:	and    DWORD PTR [edx+0x63],edx
  4171d6:	fldcw  WORD PTR [edx]
  4171d8:	frstor [ebx]
  4171da:	leave  
  4171db:	in     al,0x1
  4171dd:	mov    ebx,fs
  4171df:	pop    ss
  4171e0:	fst    DWORD PTR [esp+eax*1]
  4171e3:	mov    bh,0x9
  4171e5:	or     dl,bl
  4171e7:	xchg   edi,eax
  4171e8:	(bad)  
  4171e9:	in     al,dx
  4171ea:	imul   edi,DWORD PTR [bx+di],0x5cf28467
  4171f1:	lock dec DWORD PTR [edi]
  4171f4:	mov    cl,0x4c
  4171f6:	add    BYTE PTR [esi],0x92
  4171f9:	and    DWORD PTR [esp+eax*1],edi
  4171fc:	jno    0x41724c
  4171fe:	aaa    
  4171ff:	add    BYTE PTR [eax],dh
  417201:	sub    al,0x74
  417203:	ins    DWORD PTR es:[edi],dx
  417204:	std    
  417205:	(bad)  
  417206:	frstor ds:[ebx-0x5ad06b53]
  41720d:	jmp    0x78c4:0x9b5be496
  417214:	test   BYTE PTR [eax-0x58],0x6d
  417218:	ins    BYTE PTR es:[edi],dx
  417219:	pop    esp
  41721a:	(bad)  
  41721c:	inc    edi
  41721d:	bound  ecx,QWORD PTR [ebp-0x5c]
  417220:	push   eax
  417221:	push   ebx
  417222:	push   ebx
  417223:	sbb    ecx,DWORD PTR [eax-0x6b3bc5ed]
  417229:	or     cl,BYTE PTR [eax]
  41722b:	cmp    ebp,ebx
  41722d:	(bad)  
  41722e:	sub    BYTE PTR [ebx+0x60],cl
  417231:	ret    0x5fe2
  417234:	push   edi
  417235:	adc    BYTE PTR [ebx-0x47],bh
  417238:	test   al,0x37
  41723a:	push   ebp
  41723b:	cmp    dl,BYTE PTR [ebx-0x4874a29a]
  417241:	mov    dh,0x7d
  417243:	out    dx,al
  417244:	adc    eax,0x1189c346
  417249:	sbb    eax,0xc4b16df6
  41724e:	mov    al,ds:0x37f157b9
  417253:	ror    DWORD PTR fs:[edi+0x252ca864],cl
  41725a:	mov    bh,ch
  41725c:	push   cs
  41725d:	sbb    edx,ecx
  41725f:	retf   0x1a82
  417262:	in     eax,0x72
  417264:	int    0xc9
  417266:	add    cl,BYTE PTR es:[ecx-0xd43acff]
  41726d:	push   ecx
  41726e:	pop    ebp
  41726f:	test   BYTE PTR ds:0xcd140bc9,bl
  417275:	loopne 0x417218
  417277:	(bad)  
  417279:	(bad)  
  41727a:	out    0x5e,eax
  41727c:	sub    BYTE PTR ds:0xde377d5a,bl
  417282:	sbb    bl,bl
  417284:	mov    edi,0x2d4d175
  417289:	inc    DWORD PTR [ebx]
  41728b:	jp     0x4172be
  41728d:	shl    BYTE PTR [ebx-0x45],0xc5
  417291:	rcr    ecx,cl
  417293:	mov    al,ds:0xb3744431
  417298:	adc    cl,ah
  41729a:	call   0x637f2160
  41729f:	out    dx,eax
  4172a0:	sar    BYTE PTR [ecx],cl
  4172a2:	jns    0x4172b2
  4172a4:	adc    al,bh
  4172a6:	jle    0x4172de
  4172a8:	scas   al,BYTE PTR es:[edi]
  4172a9:	sub    dl,ch
  4172ab:	push   ds
  4172ac:	shr    BYTE PTR [esi],0x53
  4172af:	jg     0x4172d9
  4172b1:	je     0x4172f1
  4172b3:	push   esi
  4172b4:	mov    edx,0x532038b2
  4172b9:	aam    0x77
  4172bb:	push   cs
  4172bc:	icebp  
  4172bd:	mov    ds:0x25f7bff7,eax
  4172c2:	ds jg  0x417334
  4172c5:	repnz (bad) 
  4172c7:	mov    eax,0x7f648878
  4172cc:	clc    
  4172cd:	mov    esp,0xaf0b25d6
  4172d2:	or     al,0xc0
  4172d4:	and    ch,BYTE PTR [edx+0x50]
  4172d7:	and    DWORD PTR es:[eax-0x25],0xffffffb6
  4172dc:	(bad)  
  4172dd:	ins    DWORD PTR es:[edi],dx
  4172de:	inc    eax
  4172df:	and    DWORD PTR [ebp+0x71],ebp
  4172e2:	out    dx,al
  4172e3:	into   
  4172e4:	inc    edi
  4172e5:	pop    eax
  4172e6:	pushf  
  4172e7:	sbb    dh,BYTE PTR [edi-0x30]
  4172ea:	push   cs
  4172eb:	aas    
  4172ec:	push   es
  4172ed:	adc    DWORD PTR [ebp+0x4c101288],edx
  4172f3:	xor    eax,0x78643cfc
  4172f8:	dec    ebp
  4172f9:	fwait
  4172fa:	inc    esi
  4172fb:	adc    eax,0x7080c4d6
  417300:	leave  
  417301:	push   ds
  417302:	push   ds
  417303:	sar    eax,cl
  417305:	jle    0x4172bb
  417307:	pop    eax
  417308:	xchg   DWORD PTR [eax+0x651d6502],esi
  41730e:	jmp    DWORD PTR [esi]
  417310:	stos   DWORD PTR es:[edi],eax
  417311:	adc    BYTE PTR ds:0x34803700,bl
  417317:	mov    eax,0x6c7224a4
  41731c:	add    esp,DWORD PTR [ecx]
  41731e:	pop    edi
  41731f:	or     cl,ch
  417321:	mov    ebx,0x1f18f849
  417326:	inc    ebp
  417327:	mov    fs,WORD PTR [eax+0x71]
  41732a:	pop    ebx
  41732b:	add    dh,0xdc
  41732e:	adc    edi,DWORD PTR [ebx+0x57]
  417331:	add    eax,0x7fae3137
  417336:	ds (bad) 
  417338:	push   esi
  417339:	mov    WORD PTR [edi],ss
  41733b:	mov    ebp,0x6c67a93c
  417340:	pop    ebp
  417341:	call   0x28efbd32
  417346:	push   ss
  417347:	xchg   DWORD PTR [ecx+0x18],ecx
  41734a:	(bad)  
  41734b:	sbb    eax,0x9cf48825
  417350:	push   es
  417351:	push   0x81229b41
  417356:	mov    ds:0x16e7d3bb,al
  41735b:	jne    0x41736b
  41735d:	adc    ebp,esp
  41735f:	mov    ebp,0xb6706e3a
  417364:	ret    0xb565
  417367:	fs jge 0x417305
  41736a:	sbb    al,0x96
  41736c:	dec    esi
  41736d:	mov    edi,0xd07cdb02
  417372:	xlat   BYTE PTR ds:[ebx]
  417373:	aam    0x4e
  417375:	xchg   esp,eax
  417376:	iret   
  417377:	fwait
  417378:	cmp    BYTE PTR [ebx],0x95
  41737b:	jmp    0x417347
  41737d:	pop    esi
  41737e:	std    
  41737f:	retf   0xe1b9
  417382:	iret   
  417383:	or     eax,0x9afba2a8
  417388:	fld    QWORD PTR [eax+edi*1+0x6]
  41738c:	int    0xea
  41738e:	lods   al,BYTE PTR ds:[esi]
  41738f:	mov    dl,0xc5
  417391:	xor    al,0xa6
  417393:	fimul  DWORD PTR [ebp-0x6a]
  417396:	pop    es
  417397:	xor    ecx,DWORD PTR [ecx+0x68d262d7]
  41739d:	retf   
  41739e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41739f:	dec    esi
  4173a0:	loope  0x41739e
  4173a2:	sub    ecx,DWORD PTR [ebp+0x24]
  4173a5:	jle    0x417417
  4173a7:	and    BYTE PTR [esp+ebx*4-0x784f1c18],bl
  4173ae:	ins    BYTE PTR es:[edi],dx
  4173af:	bnd jnp 0x41738c
  4173b2:	int    0x2d
  4173b4:	jo     0x41735c
  4173b6:	fidivr WORD PTR [edx+0x33]
  4173b9:	das    
  4173ba:	dec    edi
  4173bb:	fmulp  st(6),st
  4173bd:	in     al,0xa3
  4173bf:	mov    cl,0xc9
  4173c1:	int    0x56
  4173c3:	clc    
  4173c4:	jecxz  0x4173e8
  4173c6:	mov    eax,0xa02e231c
  4173cb:	das    
  4173cc:	mov    ah,0xe
  4173ce:	ja     0x417365
  4173d0:	imul   ebx,DWORD PTR [esi+ebp*1+0x2f],0x3e
  4173d5:	adc    dh,0x59
  4173d8:	(bad)  
  4173d9:	ins    BYTE PTR es:[edi],dx
  4173da:	div    BYTE PTR [edx+ecx*2+0x6118b41e]
  4173e1:	sub    cl,BYTE PTR [edi]
  4173e3:	stos   BYTE PTR es:[edi],al
  4173e4:	stos   BYTE PTR es:[edi],al
  4173e5:	arpl   sp,cx
  4173e7:	or     edi,DWORD PTR [edx-0x40]
  4173ea:	scas   eax,DWORD PTR es:[edi]
  4173eb:	push   edx
  4173ec:	push   cs
  4173ed:	ror    DWORD PTR [ebp-0x4a],1
  4173f0:	fsubr  QWORD PTR [esi+0x15e2dda0]
  4173f6:	dec    edx
  4173f7:	call   0xa3d7a802
  4173fc:	cs jbe 0x417477
  4173ff:	cmp    BYTE PTR [ebx+edx*4-0x5c9da7d0],ah
  417406:	or     BYTE PTR [edx+0x68af9356],dl
  41740c:	fidivr WORD PTR [edi]
  41740e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41740f:	adc    ch,cl
  417411:	out    0x8,eax
  417413:	fimul  WORD PTR [edx]
  417415:	pop    edx
  417416:	imul   ecx,DWORD PTR [ecx+0x37],0x96172995
  41741d:	dec    esp
  41741e:	mov    al,ds:0x90844932
  417423:	inc    ecx
  417424:	js     0x41745d
  417426:	and    al,0xb6
  417428:	inc    esi
  417429:	fs mov ecx,0x6956a3c1
  41742f:	call   ecx
  417431:	or     al,0xb7
  417433:	pop    edi
  417434:	aaa    
  417435:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417436:	xor    esi,DWORD PTR [ebp+esi*4+0x13c2ee77]
  41743d:	push   ds
  41743e:	lods   al,BYTE PTR ds:[esi]
  41743f:	scas   eax,DWORD PTR es:[edi]
  417440:	push   esi
  417441:	cli    
  417442:	sti    
  417443:	and    eax,0x2ebe4dbb
  417448:	stos   BYTE PTR es:[edi],al
  417449:	shr    BYTE PTR [edi+0x31],1
  41744c:	(bad)  
  41744d:	pop    ecx
  41744e:	fwait
  41744f:	aam    0xa4
  417451:	push   0x37
  417453:	ds (bad) 
  417455:	in     al,dx
  417456:	addr16 push 0xeddebe0a
  41745c:	sub    esp,DWORD PTR [ebp-0x3a9f8966]
  417462:	push   cs
  417463:	je     0x41740d
  417465:	mov    edx,0x4b53dba5
  41746a:	cs hlt 
  41746c:	sub    al,0x87
  41746e:	or     DWORD PTR [ecx+eax*8],ecx
  417471:	js     0x417458
  417473:	inc    ebp
  417474:	rcl    DWORD PTR [edi],0x4e
  417477:	mov    esi,0xbaf7cf82
  41747c:	xchg   ebp,eax
  41747d:	inc    eax
  41747e:	inc    eax
  41747f:	jns    0x417419
  417481:	xchg   ebx,eax
  417482:	outs   dx,DWORD PTR ds:[esi]
  417483:	pop    ss
  417484:	mov    ds,WORD PTR [edx]
  417486:	mov    eax,ds:0x72fa1d21
  41748b:	ins    BYTE PTR es:[edi],dx
  41748c:	push   ecx
  41748d:	jl     0x4174cf
  41748f:	int    0x9d
  417491:	scas   eax,DWORD PTR es:[edi]
  417492:	cmp    eax,0xacd27265
  417497:	and    BYTE PTR [edi+0x7009aa52],al
  41749d:	jmp    0xd2c2c6b9
  4174a2:	sub    ecx,ebp
  4174a4:	stos   BYTE PTR es:[edi],al
  4174a5:	fst    DWORD PTR [ecx]
  4174a7:	push   ds
  4174a8:	sahf   
  4174a9:	add    ebp,eax
  4174ab:	fs mov ebx,0x1fb21884
  4174b1:	jns    0x4174df
  4174b3:	jb     0x4174ce
  4174b5:	ficomp WORD PTR [ebx+edx*2-0x63e9aea9]
  4174bc:	test   bl,bl
  4174be:	sub    eax,0xb595d9af
  4174c3:	mov    esp,ss
  4174c5:	bound  ebp,QWORD PTR [esi+0x69]
  4174c8:	cmc    
  4174c9:	sub    eax,0x550b2e37
  4174ce:	fimul  WORD PTR [eax]
  4174d0:	shl    BYTE PTR [esi],0xf
  4174d3:	jmp    0xb6325db3
  4174d8:	jbe    0x4174f6
  4174da:	sub    eax,0xcaf41be5
  4174df:	push   ebp
  4174e0:	mov    cs,ebp
  4174e2:	mov    ah,ah
  4174e4:	mov    ecx,0x7e134668
  4174e9:	xchg   esi,eax
  4174ea:	jb     0x4174d7
  4174ec:	fild   WORD PTR [ebp-0x5]
  4174ef:	xchg   DWORD PTR [ecx+0xfba7e35],edi
  4174f5:	sbb    dh,cl
  4174f7:	dec    ebx
  4174f8:	loopne 0x41747b
  4174fa:	xor    bh,ah
  4174fc:	shl    BYTE PTR [edx-0x6],1
  4174ff:	dec    ecx
  417500:	dec    esi
  417501:	addr16 add edi,ecx
  417504:	shr    DWORD PTR [edx+0x77],1
  417507:	loope  0x417569
  417509:	fsubr  QWORD PTR [esp+edi*2-0x61]
  41750d:	je     0x4174b2
  41750f:	idiv   BYTE PTR [edi+0x7c6b508b]
  417515:	retf   0x9a80
  417518:	int3   
  417519:	xchg   esi,eax
  41751a:	push   es
  41751b:	sbb    BYTE PTR [edx],0xfe
  41751e:	inc    ebp
  41751f:	popa   
  417520:	fdivr  QWORD PTR [ecx+esi*1]
  417523:	test   ebp,edx
  417525:	mov    ecx,ebp
  417527:	inc    edi
  417528:	xchg   edx,eax
  417529:	pop    ss
  41752a:	test   al,0x61
  41752c:	xor    ecx,DWORD PTR ds:0xdfe25057
  417532:	imul   edx
  417534:	push   esp
  417536:	ja     0x4175a3
  417538:	xlat   BYTE PTR ds:[ebx]
  417539:	jmp    0x45ab5ca6
  41753e:	cld    
  41753f:	jns    0x417562
  417541:	nop
  417542:	push   0xffffff82
  417544:	push   ss
  417545:	jb     0x41757b
  417547:	mov    ebp,0xfd679e92
  41754c:	mov    cl,0xc6
  41754e:	jo     0x4175a1
  417550:	dec    esp
  417551:	adc    ecx,DWORD PTR [ecx+0x4]
  417554:	mov    eax,DWORD PTR [esp+ecx*4-0x1940249b]
  41755b:	push   ebx
  41755c:	sbb    eax,0x31518b1a
  417561:	cdq    
  417562:	adc    dh,ch
  417564:	mov    esp,0x7a24cdc2
  417569:	mov    edi,0x62101167
  41756e:	push   esp
  41756f:	adc    DWORD PTR [ebx],0xffffffa2
  417572:	nop
  417573:	(bad)  
  417574:	ja     0x4175b1
  417576:	(bad)  
  417577:	fadd   DWORD PTR [eax]
  417579:	pop    ebx
  41757a:	adc    esp,DWORD PTR [edx+0x4fa24571]
  417580:	jge    0x417587
  417582:	aas    
  417583:	lds    esi,FWORD PTR [ebp-0x3a]
  417586:	mov    dl,0x93
  417588:	mov    ds:0x86f0ca2c,al
  41758d:	popa   
  41758e:	mov    cs,WORD PTR [ebx+eax*2+0x68]
  417592:	xchg   esp,eax
  417593:	add    ebx,ecx
  417595:	cmp    al,0xaf
  417597:	mov    bl,BYTE PTR [ebp+0x31d4bd9c]
  41759d:	inc    edx
  41759e:	pop    ds
  41759f:	or     edx,ebp
  4175a1:	mov    al,ds:0xf00c0d6c
  4175a6:	data16 mov al,ch
  4175a9:	mov    ebp,0x9a7e66c4
  4175ae:	dec    eax
  4175af:	xchg   ecx,eax
  4175b0:	or     BYTE PTR ds:0x79633b0f,al
  4175b6:	inc    edx
  4175b7:	icebp  
  4175b8:	dec    edi
  4175b9:	xlat   BYTE PTR ds:[ebx]
  4175ba:	test   eax,0x95fff4cf
  4175bf:	outs   dx,BYTE PTR ds:[esi]
  4175c0:	mov    ds:0xa469ece5,eax
  4175c5:	lea    ecx,[ebx+0x27]
  4175c8:	aad    0x6f
  4175ca:	rol    al,0x4a
  4175cd:	cmp    BYTE PTR [edx*4+0x52d121fe],dl
  4175d4:	mov    esi,0x28c9529b
  4175d9:	mov    al,ds:0xf6e06648
  4175de:	test   eax,0x71acc72f
  4175e3:	push   ebp
  4175e4:	(bad)  
  4175e5:	jmp    0xadfde7fa
  4175ea:	leave  
  4175eb:	int3   
  4175ec:	mov    bh,0xd8
  4175ee:	sub    esp,DWORD PTR [ecx+ebp*8]
  4175f1:	loop   0x41762f
  4175f3:	mov    edi,0x1a50f91d
  4175f8:	out    0xff,eax
  4175fa:	retf   
  4175fb:	sbb    BYTE PTR [eax+ebx*2+0x7c54d8e4],ch
  417602:	xor    al,0x90
  417604:	lea    ecx,[eax+0xf]
  417607:	sub    dl,BYTE PTR [edx+0x3]
  41760a:	and    eax,0x63f4d5e8
  41760f:	retf   0x6f99
  417612:	and    BYTE PTR [edi+0x19],bl
  417615:	mov    ebp,0xd0c28cc
  41761a:	fstp   TBYTE PTR [esi+ebp*8-0x54289a98]
  417621:	push   0xffffff88
  417623:	out    0xaf,eax
  417625:	and    bl,BYTE PTR [edi-0x27fde488]
  41762b:	cmp    al,0x73
  41762d:	adc    al,0x4c
  41762f:	and    eax,0x10b71618
  417634:	mov    edx,0x35db1e50
  417639:	aas    
  41763a:	leave  
  41763b:	or     eax,0x64f639a
  417640:	in     al,dx
  417641:	(bad)  
  417642:	iret   
  417643:	iret   
  417644:	pop    esp
  417645:	mov    al,ds:0x318d4cc7
  41764a:	inc    ebp
  41764b:	retf   
  41764c:	loope  0x41768e
  41764e:	in     eax,dx
  41764f:	pop    ebp
  417650:	fcomi  st,st(1)
  417652:	repnz pop ss
  417654:	popa   
  417655:	fs std 
  417657:	sar    DWORD PTR [eax-0x49],1
  41765a:	adc    BYTE PTR [ebx+0x1981cfd1],ah
  417660:	mov    eax,0xee14423e
  417665:	in     al,0x25
  417667:	push   eax
  417668:	(bad)  
  417669:	sbb    ch,dl
  41766b:	mov    ch,0x1b
  41766d:	in     eax,dx
  41766e:	shl    DWORD PTR [edi],1
  417670:	in     al,dx
  417671:	(bad)  
  417672:	mov    al,0x56
  417674:	mov    al,0x44
  417676:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417677:	cmp    edi,DWORD PTR [esi]
  417679:	push   ds
  41767a:	inc    esp
  41767b:	mov    bl,0x2d
  41767d:	mov    BYTE PTR [eax],cl
  41767f:	outs   dx,BYTE PTR ds:[esi]
  417680:	mov    al,ds:0xbf8768df
  417685:	add    eax,0x5412c824
  41768a:	sbb    al,BYTE PTR ds:0x1dbfd0c
  417690:	mov    ecx,0x83916a9e
  417695:	fisttp DWORD PTR [ebx+0x5e]
  417698:	xchg   ebp,eax
  417699:	fisttp DWORD PTR [ebp+0x9]
  41769c:	xchg   esp,eax
  41769d:	mov    esi,0x8e9eb1d8
  4176a2:	sbb    al,0x46
  4176a4:	cwde   
  4176a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176a6:	retf   0xef14
  4176a9:	mov    al,ds:0x261e65da
  4176ae:	sahf   
  4176af:	pop    eax
  4176b0:	mov    esi,0x9aab983d
  4176b5:	xor    eax,0x2ada9e3b
  4176ba:	inc    esp
  4176bb:	inc    ebx
  4176bc:	inc    ecx
  4176bd:	daa    
  4176be:	inc    ebp
  4176bf:	stos   DWORD PTR es:[edi],eax
  4176c0:	xchg   edi,eax
  4176c1:	adc    BYTE PTR [eax],0x64
  4176c4:	xchg   BYTE PTR [ecx+esi*1+0x3],bh
  4176c8:	out    0xab,al
  4176ca:	test   eax,0x89d0dee
  4176cf:	stc    
  4176d0:	dec    edi
  4176d1:	mov    al,ds:0x9643f9a7
  4176d6:	test   BYTE PTR [edi-0x53f85943],ch
  4176dc:	cdq    
  4176dd:	adc    BYTE PTR [eax-0x79],dl
  4176e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176e2:	sub    ecx,DWORD PTR [esi]
  4176e4:	stos   DWORD PTR es:[edi],eax
  4176e5:	mov    esp,0xa1da1d31
  4176ea:	out    dx,eax
  4176eb:	xor    al,0x15
  4176ed:	inc    eax
  4176ee:	lock or BYTE PTR [esi+0x36],bh
  4176f2:	sbb    ecx,ebx
  4176f4:	test   BYTE PTR [eax],0x91
  4176f7:	xchg   ebx,eax
  4176f8:	push   es
  4176f9:	iret   
  4176fa:	mov    eax,0xd78c29dc
  4176ff:	inc    ebx
  417700:	push   esi
  417701:	jp     0x41776c
  417703:	mov    dh,0x9
  417705:	int3   
  417706:	jle    0x417733
  417708:	sub    edx,DWORD PTR [ebp+0x1e3c29fd]
  41770e:	or     BYTE PTR [eax-0x606cb5ef],dh
  417714:	add    al,dl
  417716:	ror    BYTE PTR ds:0xb42d707d,cl
  41771c:	idiv   eax
  41771e:	xchg   ecx,eax
  41771f:	push   ds
  417720:	int    0x9d
  417722:	pop    ebx
  417723:	int    0x1e
  417725:	and    DWORD PTR [ebp-0x4f839dae],edi
  41772b:	jne    0x4176d9
  41772d:	push   edi
  41772e:	inc    edi
  41772f:	enter  0xb1c7,0x7d
  417733:	(bad)  
  417734:	ja     0x4176da
  417736:	sbb    DWORD PTR [edx],edi
  417738:	add    al,0xf9
  41773a:	imul   esp,edi,0xffffff8f
  41773d:	pop    ebp
  41773e:	dec    edx
  41773f:	sub    BYTE PTR [esi+0x37],bh
  417742:	aas    
  417743:	xchg   edx,eax
  417744:	mov    bh,0xb1
  417746:	cmp    cl,BYTE PTR [edx]
  417748:	sbb    al,0xe4
  41774a:	daa    
  41774b:	lods   eax,DWORD PTR ds:[esi]
  41774c:	mov    ebx,0xc46fd54f
  417751:	mov    ch,BYTE PTR [esi+edi*2+0x22ea965a]
  417758:	out    0xc4,eax
  41775a:	xor    eax,ecx
  41775c:	loop   0x417715
  41775e:	call   DWORD PTR [edi]
  417760:	lods   al,BYTE PTR ds:[esi]
  417761:	or     cl,BYTE PTR ds:0x1f1aceb3
  417767:	xor    DWORD PTR [ecx],ecx
  417769:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41776a:	jae    0x41777e
  41776c:	or     edx,DWORD PTR [ebx-0x3a]
  41776f:	test   al,0x2d
  417771:	sbb    BYTE PTR [esi+0x3c],dh
  417774:	mov    edx,0x338a2b3d
  417779:	sub    dl,BYTE PTR [esi]
  41777b:	push   es
  41777c:	add    bl,dl
  41777e:	dec    esi
  41777f:	push   edi
  417780:	add    DWORD PTR [eax-0x7a],ebp
  417783:	xlat   BYTE PTR ds:[ebx]
  417784:	xchg   ebx,eax
  417785:	dec    esi
  417786:	mov    gs,esp
  417788:	mov    cl,0x9
  41778a:	inc    edi
  41778b:	loope  0x4177a7
  41778d:	es out 0x8c,eax
  417790:	data16 (bad) 
  417792:	push   esi
  417793:	sub    DWORD PTR [edi],ebp
  417795:	push   ebp
  417796:	fwait
  417797:	stc    
  417798:	ror    DWORD PTR [edi*8-0x3cbd5b9e],cl
  41779f:	cdq    
  4177a0:	sub    BYTE PTR [ebx-0x68],al
  4177a3:	(bad)  
  4177a5:	cmp    esi,DWORD PTR ds:0x36283269
  4177ab:	stos   DWORD PTR es:[edi],eax
  4177ac:	push   ss
  4177ad:	popa   
  4177ae:	shl    BYTE PTR [edx+edi*1-0x2b998c0d],cl
  4177b5:	cmp    DWORD PTR [ecx],0x7ebc2d8
  4177bb:	xor    cl,bl
  4177bd:	in     al,0xe2
  4177bf:	xor    cl,BYTE PTR [ebx]
  4177c1:	cli    
  4177c2:	div    DWORD PTR [edx+0xb825081]
  4177c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177c9:	rdpmc  
  4177cb:	mov    eax,DWORD PTR [ebp+0x218cad39]
  4177d1:	imul   edx,esi,0xffffffc0
  4177d4:	cmp    BYTE PTR [edx],ah
  4177d6:	pop    esi
  4177d7:	out    dx,al
  4177d8:	jmp    0xef7f:0xb76a412b
  4177df:	(bad)  
  4177e0:	pop    edi
  4177e1:	mov    eax,ds:0x76572f26
  4177e6:	ins    DWORD PTR es:[edi],dx
  4177e7:	scas   eax,DWORD PTR es:[edi]
  4177e8:	pop    ss
  4177e9:	jge    0x417842
  4177eb:	sub    al,0xcc
  4177ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177ee:	add    DWORD PTR [edi-0x62edfae],edx
  4177f4:	pop    ebx
  4177f5:	push   ebp
  4177f6:	pop    edx
  4177f7:	call   0xbecc:0xcd0f8ef3
  4177fe:	inc    ebx
  4177ff:	repnz mov ah,0x40
  417802:	ss iret 
  417804:	les    ecx,FWORD PTR [ebx-0x38]
  417807:	add    al,0x82
  417809:	scas   al,BYTE PTR es:[edi]
  41780a:	and    eax,0x752737
  41780f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417810:	test   BYTE PTR [edi+0x5eefce33],bh
  417816:	fdiv   QWORD PTR [esi+ecx*4+0x4aa91fa]
  41781d:	mov    esi,0x2877b0c4
  417822:	or     al,0x29
  417824:	gs inc ebx
  417826:	in     al,dx
  417827:	xchg   DWORD PTR [eax],esp
  417829:	jge    0x41782c
  41782b:	or     al,al
  41782d:	inc    edx
  41782e:	lea    ebx,[edi]
  417830:	int3   
  417831:	iret   
  417832:	das    
  417833:	or     eax,0x6f8a141d
  417838:	adc    bl,BYTE PTR [ebp+0x6bd92f4d]
  41783e:	cmc    
  41783f:	pop    esi
  417840:	sbb    bl,bh
  417842:	adc    eax,0x847aa2f
  417847:	mov    edx,0x4456f46c
  41784c:	xchg   DWORD PTR [ebx+0x35a32f94],esp
  417852:	jbe    0x4177eb
  417854:	mov    ecx,0xc0e9f4
  417859:	dec    edi
  41785a:	xchg   ecx,eax
  41785b:	push   edx
  41785c:	push   es
  41785d:	(bad)  
  41785f:	aas    
  417860:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417861:	dec    ebp
  417862:	or     al,0x0
  417864:	add    dl,BYTE PTR es:[esi+0x77]
  417868:	xchg   esp,eax
  417869:	les    esi,FWORD PTR [edx]
  41786b:	ror    DWORD PTR [ecx+0x58],0xc7
  41786f:	inc    ecx
  417870:	int    0x83
  417872:	push   esp
  417873:	call   0x6417:0x67a034f
  41787a:	jb     0x4178b4
  41787c:	jnp    0x4178c8
  41787e:	rcr    esp,0x5c
  417881:	sub    eax,0x611fd1b6
  417886:	cmp    bh,al
  417888:	jle    0x417843
  41788a:	hlt    
  41788b:	mov    esp,0x8ffc34e
  417890:	sub    eax,0xcf2605b8
  417895:	jne    0x41790c
  417897:	ret    0x22be
  41789a:	dec    eax
  41789b:	test   al,0xc2
  41789d:	push   eax
  41789e:	test   DWORD PTR [ebx+0x1ce11963],ebx
  4178a4:	add    edi,0x4795765b
  4178aa:	sbb    eax,0x6b1ce5d2
  4178af:	push   0xffffffa6
  4178b1:	into   
  4178b2:	sbb    BYTE PTR [edi],bh
  4178b4:	inc    edx
  4178b5:	loope  0x4178c3
  4178b7:	pop    ss
  4178b8:	into   
  4178b9:	adc    DWORD PTR [edx+0x74cdb332],ebx
  4178bf:	retf   0xf675
  4178c2:	pushf  
  4178c3:	idiv   BYTE PTR [edx-0x26]
  4178c6:	sub    BYTE PTR [ebx],ch
  4178c8:	xchg   edi,eax
  4178c9:	ss adc al,0x81
  4178cc:	pushf  
  4178cd:	jle    0x4178b0
  4178cf:	mov    ah,0xa7
  4178d1:	mov    esp,0x47d6de86
  4178d6:	xor    al,0x9d
  4178d8:	es sub al,0xb7
  4178db:	mov    ebx,0xb5243d3
  4178e0:	dec    esi
  4178e1:	into   
  4178e2:	sbb    DWORD PTR [edi+0x327b643f],ebp
  4178e8:	jg     0x417923
  4178ea:	mov    ebp,0x88de3088
  4178ef:	cmp    eax,0xffd71793
  4178f4:	jbe    0x417916
  4178f6:	in     eax,0x61
  4178f8:	int    0xc9
  4178fa:	and    eax,0x27a5530
  4178ff:	js     0x41797e
  417901:	ror    esp,1
  417903:	cmp    esp,DWORD PTR [eax-0xa4233f0]
  417909:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41790b:	push   eax
  41790c:	shl    BYTE PTR [ecx+0x184087e5],1
  417912:	pop    edx
  417913:	pop    es
  417914:	and    al,al
  417916:	lock dec ecx
  417918:	mov    WORD PTR ds:0xd2cff8e1,fs
  41791e:	mov    DWORD PTR [ebx],edi
  417920:	ret    0x618e
  417923:	mov    WORD PTR [ebp-0x7e],gs
  417926:	shr    BYTE PTR [esi],1
  417928:	fst    QWORD PTR [esi-0x55a71670]
  41792e:	and    DWORD PTR ds:0x8a93839f,eax
  417934:	arpl   WORD PTR [ebx-0x60],bx
  417937:	jb     0x4179b7
  417939:	das    
  41793a:	xor    ebx,ebp
  41793c:	aad    0xcb
  41793e:	dec    DWORD PTR [eax+0x1a]
  417941:	push   ebp
  417942:	imul   edx,DWORD PTR [ebp+0x404e8921],0x75cba95a
  41794c:	popa   
  41794d:	sbb    al,0x4c
  41794f:	cmc    
  417950:	jns    0x4178d6
  417952:	cmp    al,0x33
  417954:	imul   BYTE PTR [esi]
  417956:	mov    ds:0xdcd7a4ac,al
  41795b:	outs   dx,DWORD PTR ds:[esi]
  41795c:	jmp    0x417943
  41795e:	(bad)  
  41795f:	aas    
  417960:	sbb    edx,edx
  417962:	xchg   ebx,eax
  417963:	sbb    bl,0x3a
  417966:	xchg   ebx,eax
  417967:	ds xchg ecx,eax
  417969:	jns    0x4178f4
  41796b:	cmp    edx,esi
  41796d:	adc    dh,dl
  41796f:	inc    DWORD PTR [edi+eiz*1]
  417972:	frstor [ecx+0x4dae7970]
  417978:	ret    
  417979:	add    DWORD PTR [edi],ebx
  41797b:	jne    0x4179d0
  41797d:	and    eax,0xf4371caf
  417982:	push   edi
  417983:	xchg   esi,eax
  417984:	mov    DWORD PTR [esi+ebx*4],ebx
  417987:	loope  0x4179f9
  417989:	push   esi
  41798a:	dec    eax
  41798b:	rol    DWORD PTR [eax+esi*8-0x6ce7eb8c],1
  417992:	pop    ecx
  417993:	mov    esp,0xa1196993
  417998:	xor    BYTE PTR [esi-0x2],dh
  41799b:	jns    0x417946
  41799d:	inc    ecx
  41799e:	mov    al,0x98
  4179a0:	fwait
  4179a1:	pop    esi
  4179a2:	test   eax,0xa69461bd
  4179a7:	dec    ebx
  4179a8:	xchg   ecx,eax
  4179a9:	sub    eax,DWORD PTR [ecx]
  4179ab:	je     0x41792e
  4179ad:	ret    
  4179ae:	inc    ax
  4179b0:	and    eax,0xf9b83ebd
  4179b5:	mov    ecx,0x8eba0797
  4179ba:	call   0x51d8:0x8fb3722e
  4179c1:	ins    DWORD PTR es:[edi],dx
  4179c2:	dec    eax
  4179c3:	push   eax
  4179c4:	lahf   
  4179c5:	popa   
  4179c6:	jb     0x417a02
  4179c8:	cmp    DWORD PTR [edi+edx*4+0x4f],esi
  4179cc:	(bad)  
  4179cd:	mov    BYTE PTR [eax+edi*2-0x54],dh
  4179d1:	adc    al,0x39
  4179d3:	mov    esi,0x40270cf2
  4179d8:	aas    
  4179d9:	mov    edx,0xff7d328e
  4179de:	js     0x417a4b
  4179e0:	push   ecx
  4179e1:	and    DWORD PTR [eax+ebx*1-0x4c210d63],ebx
  4179e8:	fmul   DWORD PTR [edx]
  4179ea:	outs   dx,BYTE PTR ds:[esi]
  4179eb:	mov    bl,0xd
  4179ed:	call   0x37fbd927
  4179f2:	mov    ah,0x12
  4179f4:	and    esp,DWORD PTR [edx]
  4179f6:	(bad)  
  4179f7:	lahf   
  4179f8:	xchg   ebx,eax
  4179f9:	pusha  
  4179fa:	sbb    BYTE PTR [ecx+0x7630324d],0x6d
  417a01:	fcomp  QWORD PTR [edi-0x51]
  417a04:	pop    esp
  417a05:	adc    eax,0x2fa03363
  417a0a:	lds    esp,FWORD PTR [ebx-0x1]
  417a0d:	jmp    FWORD PTR [eax+0x41bf30c0]
  417a13:	cld    
  417a14:	dec    ebx
  417a15:	cdq    
  417a16:	call   edx
  417a18:	mov    esi,0xd7b2b6f9
  417a1d:	repnz inc eax
  417a1f:	add    dh,dh
  417a21:	lea    esp,[edi]
  417a23:	xchg   ebp,eax
  417a24:	jge    0x417a50
  417a26:	mov    dl,0x88
  417a28:	mov    ch,0x9d
  417a2a:	out    dx,al
  417a2b:	sub    DWORD PTR [ebp-0x30],ebp
  417a2e:	cwde   
  417a2f:	push   0xffffffad
  417a31:	lock hlt 
  417a33:	pop    edi
  417a34:	xor    DWORD PTR [eax-0x2b570e8c],ebp
  417a3a:	inc    ecx
  417a3b:	retf   0x4694
  417a3e:	mov    dl,dh
  417a40:	mov    eax,0x86806bc3
  417a45:	shl    BYTE PTR [eax+edx*8+0x1c],0x33
  417a4a:	dec    edx
  417a4b:	add    eax,0xed5bc760
  417a50:	bound  ebp,QWORD PTR [eiz*8+0x3bb5403f]
  417a57:	mov    bl,0x52
  417a59:	daa    
  417a5a:	dec    dl
  417a5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a5d:	fcmovb st,st(7)
  417a5f:	ffreep st(0)
  417a61:	pop    eax
  417a62:	icebp  
  417a63:	cdq    
  417a64:	iret   
  417a65:	xor    eax,0x8a7192ff
  417a6a:	(bad)  
  417a6b:	xchg   esp,eax
  417a6c:	sub    DWORD PTR [eax+0x100539c3],ebp
  417a72:	loop   0x417ab4
  417a74:	fild   QWORD PTR [ebx+0x1e]
  417a77:	and    eax,0xfb394efb
  417a7c:	retf   
  417a7d:	pop    ds
  417a7e:	xor    DWORD PTR [ebx],esp
  417a80:	inc    ebx
  417a81:	mov    dl,0x9f
  417a83:	or     DWORD PTR [ebx-0x74],ecx
  417a86:	jge    0x417ac3
  417a88:	test   BYTE PTR [eax],dl
  417a8a:	das    
  417a8b:	inc    eax
  417a8c:	and    al,bh
  417a8e:	in     al,dx
  417a8f:	push   ebp
  417a90:	ss call 0xe3d8:0x4e76c43f
  417a98:	test   eax,0xa760d871
  417a9d:	mov    bl,0xb2
  417a9f:	in     eax,dx
  417aa0:	xchg   ebx,edx
  417aa2:	cmp    BYTE PTR [edx+0x31],dl
  417aa5:	pusha  
  417aa6:	or     dh,BYTE PTR [esi-0x75d61b16]
  417aac:	imul   edi,DWORD PTR [edx+0x24],0x2a502f6b
  417ab3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ab4:	or     edx,ebp
  417ab6:	mov    esi,0xa853516f
  417abb:	mov    edx,0xd9ab8271
  417ac0:	out    dx,al
  417ac1:	xchg   ecx,eax
  417ac2:	xchg   bl,bl
  417ac4:	xor    eax,0xd54d776
  417ac9:	dec    edi
  417aca:	and    al,0x21
  417acc:	and    DWORD PTR [ecx-0x35881d5f],0x1a
  417ad3:	inc    edi
  417ad4:	jmp    FWORD PTR [ebx-0x4c]
  417ad7:	xor    al,0x28
  417ad9:	ja     0x417b2d
  417adb:	arpl   WORD PTR [ebx],cx
  417add:	xor    eax,0xd7e00d17
  417ae2:	sub    BYTE PTR [eax],bh
  417ae4:	popa   
  417ae5:	inc    edi
  417ae6:	mov    bl,0xaf
  417ae8:	push   eax
  417ae9:	stc    
  417aea:	int3   
  417aeb:	cld    
  417aec:	fcomp  st(7)
  417aee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417aef:	mov    ebp,0x46c43bfb
  417af4:	cwde   
  417af5:	adc    bl,BYTE PTR [edx-0x80]
  417af8:	push   edi
  417af9:	mov    al,ds:0x60261563
  417afe:	mov    dl,0xc9
  417b00:	out    dx,al
  417b01:	xor    al,BYTE PTR [ebp+0x31]
  417b04:	out    0xf0,al
  417b06:	xor    edx,ebp
  417b08:	lds    eax,FWORD PTR [eax-0x9]
  417b0b:	fs dec ebp
  417b0d:	shr    ebp,0x94
  417b10:	fcom   DWORD PTR [esi+ebx*4-0x686fe82f]
  417b17:	push   edi
  417b18:	es push edx
  417b1a:	(bad)  
  417b1b:	into   
  417b1c:	dec    edi
  417b1d:	jb     0x417b97
  417b1f:	push   ecx
  417b20:	js     0x417af4
  417b22:	sub    dl,BYTE PTR [ebx]
  417b24:	mov    esp,0xbfe0a1d2
  417b29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b2a:	mov    dl,0x7c
  417b2c:	dec    edi
  417b2d:	dec    esp
  417b2e:	jle    0x417baa
  417b30:	adc    DWORD PTR [esi],edi
  417b32:	mov    cl,ch
  417b34:	inc    edi
  417b35:	and    al,0xa9
  417b37:	pop    es
  417b38:	imul   bl
  417b3a:	repnz inc eax
  417b3c:	or     al,0x94
  417b3e:	jae    0x417ae6
  417b40:	dec    esp
  417b41:	or     al,0xe9
  417b43:	jns    0x417b4f
  417b45:	por    mm3,mm4
  417b48:	xchg   ebx,eax
  417b49:	jg     0x417afe
  417b4b:	inc    esi
  417b4c:	pop    eax
  417b4d:	es push ebx
  417b4f:	ret    0x6f79
  417b52:	inc    esp
  417b53:	repnz clc 
  417b55:	nop
  417b56:	jb     0x417af9
  417b58:	mov    ecx,0x83e4cdaa
  417b5d:	mov    edx,0x8cf4f49
  417b62:	cmp    cl,BYTE PTR [ebx]
  417b64:	jp     0x417b9d
  417b66:	lahf   
  417b67:	imul   edi,ebx,0xffffff9f
  417b6a:	inc    ebp
  417b6b:	fldcw  WORD PTR [edi+0x673f9fe]
  417b71:	repz sahf 
  417b73:	mov    ebp,0x712e8aaa
  417b78:	repnz arpl bp,sp
  417b7b:	into   
  417b7c:	lds    esp,FWORD PTR [edx]
  417b7e:	xlat   BYTE PTR ds:[ebx]
  417b7f:	test   DWORD PTR [edi],ebx
  417b81:	scas   eax,DWORD PTR es:[edi]
  417b82:	adc    DWORD PTR ds:0x3634f26e,ebx
  417b88:	pop    ecx
  417b89:	test   BYTE PTR [ecx+0x5a],0xb5
  417b8d:	or     edi,edx
  417b8f:	pop    ecx
  417b90:	adc    esp,DWORD PTR [edx+0x2d1cc9f7]
  417b96:	sbb    al,0xb2
  417b98:	and    BYTE PTR [esi+0x45],dl
  417b9b:	cwde   
  417b9c:	mov    dh,0xba
  417b9e:	retf   0x8645
  417ba1:	bound  ebx,QWORD PTR [esp+edi*1-0x768fe451]
  417ba8:	lgs    esp,FWORD PTR [ebx+esi*4-0x4c]
  417bad:	aam    0xb7
  417baf:	fnstcw WORD PTR [esi+ebx*8]
  417bb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bb3:	ret    
  417bb4:	adc    DWORD PTR [ebx+eiz*2],ecx
  417bb7:	aad    0x37
  417bb9:	stos   DWORD PTR es:[edi],eax
  417bba:	and    al,0x1d
  417bbc:	mov    al,0x9
  417bbe:	imul   esi,DWORD PTR cs:[ebx+eiz*8],0xffffff81
  417bc3:	leave  
  417bc4:	into   
  417bc5:	or     eax,0x26ec71d6
  417bca:	push   ss
  417bcb:	sub    al,0x69
  417bcd:	mov    ds:0x26a5d109,al
  417bd2:	les    esi,FWORD PTR [ebp+0x54b4bcb1]
  417bd8:	repz mov cl,0xf5
  417bdb:	xor    DWORD PTR [esi+ebp*4],ebx
  417bde:	lock iret 
  417be0:	loope  0x417bc1
  417be2:	xor    al,0xe3
  417be4:	shl    BYTE PTR ss:[ebp+0x32ca6480],0x29
  417bec:	or     DWORD PTR [ecx],eax
  417bee:	(bad)  
  417bef:	in     al,0x77
  417bf1:	add    al,0x9d
  417bf3:	lds    ecx,FWORD PTR [edi-0x7a8271ba]
  417bf9:	sub    DWORD PTR [ebx],0xffffff97
  417bfc:	shl    DWORD PTR [edx+0x24d4ee59],1
  417c02:	add    bl,BYTE PTR ds:0xcbbf9932
  417c08:	pop    ecx
  417c09:	cwde   
  417c0a:	xchg   BYTE PTR [ebx],bl
  417c0c:	push   esp
  417c0d:	dec    esp
  417c0e:	xchg   WORD PTR [ebp-0x4c],dx
  417c12:	push   0x60
  417c14:	push   0x30f02635
  417c19:	push   esi
  417c1a:	add    dl,BYTE PTR [ebp-0x2a1dab3d]
  417c20:	and    DWORD PTR [eax],edi
  417c22:	inc    ebx
  417c23:	test   eax,0xe2b20d63
  417c28:	sahf   
  417c29:	and    BYTE PTR [edx-0x2819c92],bh
  417c2f:	int    0xe4
  417c31:	test   eax,0x43d19692
  417c36:	pop    ds
  417c37:	add    DWORD PTR [bp-0x4d],ecx
  417c3b:	dec    ebx
  417c3c:	scas   al,BYTE PTR es:[edi]
  417c3d:	mov    ds:0x37730359,eax
  417c42:	push   0x6f
  417c44:	das    
  417c45:	mov    eax,ds:0x352aa27c
  417c4a:	mov    cl,BYTE PTR [ebp+0x16e166eb]
  417c50:	in     al,0x9
  417c52:	fst    QWORD PTR [edx-0x6913be1]
  417c58:	xchg   ebx,eax
  417c59:	jns    0x417ca7
  417c5b:	mov    al,ds:0x318e4ed0
  417c60:	jns    0x417c86
  417c62:	or     eax,0xcbca7f8e
  417c67:	sbb    eax,0x91d33d56
  417c6c:	dec    eax
  417c6d:	sbb    bh,cl
  417c6f:	inc    esi
  417c70:	xor    BYTE PTR [esi-0x31b43b39],bl
  417c76:	add    al,0x28
  417c78:	cmp    DWORD PTR [edi+edi*1],edx
  417c7b:	mov    ch,0x16
  417c7d:	xchg   esi,eax
  417c7e:	les    ebx,FWORD PTR [edx-0x25c8db33]
  417c84:	jno    0x417cd9
  417c86:	or     BYTE PTR [ebx-0x80],dl
  417c89:	repz jle 0x417c57
  417c8c:	xor    ebx,0xfffffff8
  417c8f:	mov    ecx,0xdf95a760
  417c94:	out    dx,eax
  417c95:	(bad)  
  417c96:	imul   eax,DWORD PTR [edi-0x60],0xffffff92
  417c9a:	pop    ss
  417c9b:	retf   
  417c9c:	xor    eax,ebp
  417c9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c9f:	add    dh,al
  417ca1:	rcl    DWORD PTR [ecx-0x535a9f9c],1
  417ca7:	mov    ds:0x681cf5e6,eax
  417cac:	sti    
  417cad:	push   ecx
  417cae:	sbb    dh,BYTE PTR [edi-0x74620258]
  417cb4:	push   ebx
  417cb5:	mov    ebp,0xf6e7d117
  417cba:	cmp    eax,0x6e00a56b
  417cbf:	rcr    DWORD PTR [eax+0x57],0xfa
  417cc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cc4:	popa   
  417cc5:	ja     0x417d25
  417cc7:	ja     0x417c6c
  417cc9:	loop   0x417d15
  417ccb:	in     eax,dx
  417ccc:	and    ebx,DWORD PTR [eax]
  417cce:	sbb    dl,BYTE PTR [ebx+0x7cd97290]
  417cd4:	outs   dx,BYTE PTR ds:[esi]
  417cd5:	jne    0x417cc6
  417cd7:	cld    
  417cd8:	mov    WORD PTR [eax],?
  417cda:	test   BYTE PTR [ebp+0x3c],0xac
  417cde:	dec    edx
  417cdf:	push   ss
  417ce0:	in     eax,dx
  417ce1:	aaa    
  417ce2:	jmp    0xdbd7ee64
  417ce7:	test   DWORD PTR ds:0xd59d36f9,0x1d99e13e
  417cf1:	sub    DWORD PTR [esp+edx*2+0x1c],ebp
  417cf5:	or     BYTE PTR [eax-0x38],al
  417cf8:	xor    eax,0xbc2d71b1
  417cfd:	xchg   esi,eax
  417cfe:	js     0x417d45
  417d00:	dec    eax
  417d01:	mov    ch,0xdd
  417d03:	ficomp DWORD PTR [ecx]
  417d05:	and    edx,DWORD PTR [edi+esi*8-0x46]
  417d09:	retf   0x3e65
  417d0c:	call   0x9620c166
  417d11:	push   esi
  417d12:	bswap  edi
  417d14:	adc    eax,0x23b68ed7
  417d19:	push   eax
  417d1a:	and    esi,DWORD PTR [edx-0x57]
  417d1d:	dec    ebp
  417d1e:	dec    ecx
  417d1f:	xchg   esp,eax
  417d20:	out    0xd7,al
  417d22:	hlt    
  417d23:	and    al,0x1
  417d25:	adc    bl,BYTE PTR [ecx+esi*8-0x674877ec]
  417d2c:	(bad)  
  417d2e:	xchg   ch,al
  417d30:	int    0xa8
  417d32:	ss nop
  417d34:	inc    edx
  417d35:	push   eax
  417d36:	scas   al,BYTE PTR es:[edi]
  417d37:	out    dx,al
  417d38:	stos   BYTE PTR es:[edi],al
  417d39:	push   ebx
  417d3a:	xor    eax,0x91978c65
  417d3f:	add    cl,cl
  417d41:	sbb    DWORD PTR [eax],eax
  417d43:	mov    esi,0x9a7b9d12
  417d48:	jp     0x417db3
  417d4a:	inc    ebx
  417d4c:	cli    
  417d4d:	jecxz  0x417cf1
  417d4f:	pop    es
  417d50:	mov    bl,0xcd
  417d52:	jg     0x417d85
  417d54:	xor    edx,DWORD PTR [ebp*4+0xc2e14dc]
  417d5b:	lock dec esi
  417d5d:	adc    cl,BYTE PTR [edx-0x25]
  417d60:	retf   
  417d61:	ds dec ebx
  417d63:	lods   eax,DWORD PTR ds:[esi]
  417d64:	leave  
  417d65:	imul   esp,DWORD PTR [edi],0xffffff81
  417d68:	leave  
  417d69:	ins    BYTE PTR es:[edi],dx
  417d6a:	stos   DWORD PTR es:[edi],eax
  417d6b:	or     al,0xe5
  417d6d:	jl     0x417cfc
  417d6f:	adc    ah,bl
  417d71:	lds    eax,FWORD PTR [ecx+edx*8-0x2]
  417d75:	mov    BYTE PTR [edx],dl
  417d77:	aam    0xa5
  417d79:	test   DWORD PTR [ebx],0x380ae720
  417d7f:	add    al,0xb6
  417d81:	push   0xffffff93
  417d83:	daa    
  417d84:	cmp    DWORD PTR [ebp-0x46],esp
  417d87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d88:	and    ebx,DWORD PTR [ebx-0x7f88b192]
  417d8e:	mov    WORD PTR [eax],?
  417d90:	mov    bh,al
  417d92:	sbb    al,BYTE PTR [ebx-0x2981f595]
  417d98:	add    DWORD PTR es:[edx],edi
  417d9b:	bound  edi,QWORD PTR [edx-0x35]
  417d9e:	cmc    
  417d9f:	(bad)  
  417da0:	nop
  417da1:	je     0x417e03
  417da3:	jns    0x417dd2
  417da5:	lods   al,BYTE PTR ds:[esi]
  417da6:	imul   esp,DWORD PTR [edx+edi*4],0x18e0459a
  417dad:	dec    eax
  417dae:	addr16 das 
  417db0:	in     al,0x56
  417db2:	push   ds
  417db3:	jge    0x417d6f
  417db5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417db6:	cs bswap ebp
  417db9:	cmp    BYTE PTR [ecx-0x34],cl
  417dbc:	mov    bh,BYTE PTR [edx+0x25]
  417dbf:	jmp    0x9235:0x7036312b
  417dc6:	adc    eax,0x699db35
  417dcb:	fcom   QWORD PTR ds:0xc52165e8
  417dd1:	xor    al,0xba
  417dd3:	xchg   edi,eax
  417dd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417dd5:	js     0x417d76
  417dd7:	mov    dl,0xe0
  417dd9:	sub    al,0xea
  417ddb:	jg     0x417e27
  417ddd:	dec    edx
  417dde:	fild   DWORD PTR [eax+eax*8-0x4de09198]
  417de5:	sti    
  417de6:	les    ebx,FWORD PTR [eax]
  417de8:	sti    
  417de9:	xor    dl,BYTE PTR [ebp+0x5c8cd11]
  417def:	rcl    DWORD PTR [eiz*1+0x2a6edf65],1
  417df6:	ss call 0xe5dc:0x9d3d442e
  417dfe:	out    0x22,al
  417e00:	shr    BYTE PTR [ebx+eiz*8+0x5d],0x7d
  417e05:	jnp    0x417e59
  417e07:	retf   
  417e08:	xor    ch,dh
  417e0a:	mov    dl,0x43
  417e0c:	jmp    0x417e1c
  417e0e:	add    al,0x5b
  417e10:	xor    eax,0x2fa52ad
  417e15:	jmp    0xcbe7:0x58a8320c
  417e1c:	adc    eax,DWORD PTR [ecx]
  417e1e:	dec    eax
  417e1f:	sti    
  417e20:	nop
  417e21:	je     0x417de6
  417e23:	jl     0x417e7b
  417e25:	sbb    DWORD PTR [ebp+0x41764da],eax
  417e2b:	or     ecx,ebx
  417e2d:	stc    
  417e2e:	sub    ch,BYTE PTR [ecx+0x4f]
  417e31:	or     BYTE PTR [edi-0x24380694],0xe6
  417e38:	stos   BYTE PTR es:[edi],al
  417e39:	sbb    cl,BYTE PTR [ebp+ebp*8-0x13]
  417e3d:	out    0xf8,al
  417e3f:	ins    BYTE PTR es:[edi],dx
  417e40:	(bad)  
  417e41:	or     edx,DWORD PTR [ecx+0x7ce42887]
  417e47:	inc    esi
  417e48:	or     edx,DWORD PTR [ebx]
  417e4a:	sbb    eax,0x9fdd189f
  417e4f:	add    ebx,edx
  417e51:	repnz sti 
  417e53:	rol    DWORD PTR [edx],cl
  417e55:	pop    eax
  417e56:	out    0x4b,al
  417e58:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  417e5a:	jle    0x417e7b
  417e5c:	and    eax,0xfb020f52
  417e61:	push   ebx
  417e62:	stos   DWORD PTR es:[edi],eax
  417e63:	test   eax,0xdad6b82
  417e68:	fcomip st,st(1)
  417e6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e6b:	mov    ecx,0xf40f1b42
  417e70:	cs leave 
  417e72:	std    
  417e73:	addr16 icebp 
  417e75:	sbb    dl,BYTE PTR [esi]
  417e77:	in     al,dx
  417e78:	retf   0x7e5a
  417e7b:	xchg   edi,eax
  417e7c:	leave  
  417e7d:	daa    
  417e7e:	jecxz  0x417eb8
  417e80:	ret    0xe8
  417e83:	out    0x12,eax
  417e85:	jmp    0x61f9:0x68769da7
  417e8c:	das    
  417e8d:	jb     0x417e5c
  417e8f:	pop    eax
  417e90:	and    al,0x6
  417e92:	sbb    DWORD PTR [edx],edx
  417e94:	inc    ecx
  417e95:	jno    0x417ec5
  417e97:	shl    BYTE PTR [esi+0x23bad5f3],cl
  417e9d:	sub    al,0x8
  417e9f:	gs inc ebx
  417ea1:	adc    eax,0x314532e8
  417ea6:	cmp    al,0x27
  417ea8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ea9:	mov    al,ds:0x7ad45881
  417eae:	cmp    BYTE PTR gs:[ebx+eax*1-0x4e0c069],0xf
  417eb7:	dec    ebp
  417eb8:	fstp   TBYTE PTR [ecx]
  417eba:	inc    ebx
  417ebb:	xchg   ecx,eax
  417ebc:	retf   
  417ebd:	in     al,dx
  417ebe:	dec    edx
  417ebf:	shl    DWORD PTR [ecx+0x7e],0xe8
  417ec3:	or     ah,0x2e
  417ec6:	mov    ah,BYTE PTR [eax+0x25]
  417ec9:	dec    ecx
  417eca:	and    DWORD PTR [edx+0x6],0x1a90c418
  417ed1:	in     al,dx
  417ed2:	jge    0x417e7f
  417ed4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ed5:	cmp    esi,esp
  417ed7:	inc    ecx
  417ed8:	bound  esi,QWORD PTR [edi]
  417eda:	pop    edi
  417edb:	outs   dx,BYTE PTR ds:[esi]
  417edc:	into   
  417edd:	mov    DWORD PTR ds:0x4a03d08f,edx
  417ee3:	rcr    BYTE PTR ds:0x3c7dec75,0x6c
  417eea:	lock sub DWORD PTR [ebx+0x76],edx
  417eee:	leave  
  417eef:	and    bh,al
  417ef1:	out    0x73,eax
  417ef3:	and    ah,BYTE PTR [ecx+0x64360fdc]
  417ef9:	mov    BYTE PTR [esi+0x5e],bh
  417efc:	fistp  DWORD PTR [ecx+0x58ccc9b4]
  417f02:	sbb    bl,ah
  417f04:	mov    esi,0xb0ec1522
  417f09:	push   ss
  417f0a:	inc    eax
  417f0b:	lahf   
  417f0c:	pop    ds
  417f0d:	mov    bl,0x9d
  417f0f:	test   al,0x13
  417f11:	push   edi
  417f12:	cmp    BYTE PTR [eax-0x4e],ah
  417f15:	(bad)  
  417f16:	ficom  WORD PTR [ebx-0x648a5941]
  417f1c:	les    edx,FWORD PTR [edi]
  417f1e:	not    DWORD PTR [esi+0x74]
  417f21:	int    0x35
  417f23:	xchg   ecx,eax
  417f24:	hlt    
  417f25:	clc    
  417f26:	pop    ss
  417f27:	lock mov dh,0xc2
  417f2a:	rcl    BYTE PTR [esi+0x7933ce11],1
  417f30:	outs   dx,DWORD PTR ds:[esi]
  417f31:	test   DWORD PTR [eax+eax*8],esi
  417f34:	pusha  
  417f35:	pop    esi
  417f36:	into   
  417f37:	and    ebp,DWORD PTR ds:0xb668d1eb
  417f3d:	shr    BYTE PTR [edi+0x74],1
  417f40:	pop    ds
  417f41:	jle    0x417efe
  417f43:	xor    eax,eax
  417f45:	sbb    al,0xcf
  417f47:	cmp    BYTE PTR [esp+esi*8],0x26
  417f4b:	rol    DWORD PTR [edx],1
  417f4d:	sub    al,0x39
  417f4f:	arpl   WORD PTR [ebx],dx
  417f51:	mov    eax,0x5bae646c
  417f56:	or     eax,0x2962e6a6
  417f5b:	jg     0x417f30
  417f5d:	jae    0x417f5e
  417f5f:	fist   DWORD PTR [edx-0x7e480ff1]
  417f65:	mov    ch,dl
  417f67:	outs   dx,DWORD PTR ds:[esi]
  417f68:	into   
  417f69:	xchg   edi,eax
  417f6a:	inc    edx
  417f6b:	hlt    
  417f6c:	in     al,0xcf
  417f6e:	xchg   esp,eax
  417f6f:	(bad)  
  417f70:	sub    cl,BYTE PTR [esi+edx*4+0x5fe6202f]
  417f77:	int    0x9a
  417f79:	fisubr WORD PTR [ecx-0x50ff0d7d]
  417f7f:	add    DWORD PTR [edi-0x3759c166],esp
  417f85:	jmp    0xff78:0x9f2dde43
  417f8c:	adc    edx,DWORD PTR [ecx+0x63]
  417f8f:	popf   
  417f90:	sub    esp,DWORD PTR [eax+ebp*1-0x57]
  417f94:	cmp    BYTE PTR [eax+edx*1],bl
  417f97:	push   es
  417f98:	cmc    
  417f99:	sub    BYTE PTR [edx],ah
  417f9b:	dec    edx
  417f9c:	test   eax,0x21b9ca18
  417fa1:	ficomp WORD PTR [edx-0x75c9dbe3]
  417fa7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fa8:	adc    DWORD PTR [ebx+0x4e814f92],edi
  417fae:	inc    edi
  417faf:	cmp    DWORD PTR [edi],ebx
  417fb1:	mov    esi,0x96342cd6
  417fb6:	pop    es
  417fb7:	fs push ebp
  417fb9:	jnp    0x417f98
  417fbb:	or     BYTE PTR [ecx],al
  417fbd:	lahf   
  417fbe:	xchg   DWORD PTR [ebx],ebp
  417fc0:	data16 mov cl,0xc
  417fc3:	or     bh,BYTE PTR [ebp+0x6cf4543a]
  417fc9:	jb     0x417f69
  417fcb:	and    eax,0xdb596bb8
  417fd0:	ret    0xf4a6
  417fd3:	cli    
  417fd4:	sub    dh,cl
  417fd6:	loop   0x418046
  417fd8:	inc    esp
  417fd9:	adc    ebp,edi
  417fdb:	or     bh,BYTE PTR [edx]
  417fdd:	ja     0x417fce
  417fdf:	mov    ecx,0xc71cfb28
  417fe4:	add    eax,0x1321f1d3
  417fe9:	add    dh,dl
  417feb:	dec    esp
  417fec:	xlat   BYTE PTR ds:[ebx]
  417fed:	stos   BYTE PTR es:[edi],al
  417fee:	iret   
  417fef:	shl    ch,cl
  417ff1:	fst    DWORD PTR [edi+0x64214c84]
  417ff7:	adc    eax,0x634484e6
  417ffc:	jmp    0x5428951b
  418001:	cld    
  418002:	out    0xeb,al
  418004:	call   0x5b5c:0xcf4c7254
  41800b:	aad    0xc8
  41800d:	in     al,dx
  41800e:	cmp    DWORD PTR [eax-0x760c269a],ebp
  418014:	xchg   ebx,eax
  418015:	pop    edx
  418016:	lds    esi,FWORD PTR [ebp-0x2e12508f]
  41801c:	adc    DWORD PTR [ecx+0x4a0b47c0],0xffffffa0
  418023:	lock add bl,BYTE PTR [esi+edi*1+0x5c]
  418028:	in     al,0x4d
  41802a:	stos   DWORD PTR es:[edi],eax
  41802b:	out    dx,eax
  41802c:	sub    eax,DWORD PTR [ebp-0x3aba5d3c]
  418032:	lods   al,BYTE PTR ds:[esi]
  418033:	jbe    0x417fdc
  418035:	pop    esp
  418036:	ja     0x418099
  418038:	xor    eax,DWORD PTR [edx]
  41803a:	popf   
  41803b:	xor    cl,BYTE PTR [esi]
  41803d:	popf   
  41803e:	cwde   
  41803f:	xchg   esi,eax
  418040:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418041:	ins    BYTE PTR es:[edi],dx
  418042:	jmp    0x5adf544
  418047:	jns    0x418085
  418049:	push   es
  41804a:	scas   eax,DWORD PTR es:[edi]
  41804b:	mov    esp,0xabc6c114
  418050:	aas    
  418051:	dec    edx
  418052:	and    bl,BYTE PTR [edi]
  418054:	mov    cl,0xde
  418056:	fld    DWORD PTR [esi]
  418058:	mov    ds:0xd17f37ae,al
  41805d:	push   0xffffff9b
  41805f:	into   
  418060:	scas   al,BYTE PTR es:[edi]
  418061:	ss mov edi,0xa676f7d2
  418067:	dec    esi
  418068:	sar    dl,cl
  41806a:	mov    ebp,0xc4da0f7f
  41806f:	xchg   ecx,eax
  418070:	mov    eax,0x4e74a791
  418075:	das    
  418076:	and    esi,esi
  418078:	cmp    DWORD PTR [edx+0x4f],ebx
  41807b:	cwde   
  41807c:	retf   
  41807d:	dec    DWORD PTR [edi+edi*2]
  418080:	sub    edx,ecx
  418082:	sti    
  418083:	mov    dl,0x1b
  418085:	scas   eax,DWORD PTR es:[edi]
  418086:	dec    ecx
  418087:	out    0xf8,al
  418089:	and    BYTE PTR [ecx],bh
  41808b:	jecxz  0x418049
  41808d:	pop    esp
  41808e:	ret    0x5830
  418091:	dec    edi
  418092:	xor    al,0x3c
  418094:	sub    DWORD PTR [edx-0x17],ebp
  418097:	push   ds
  418098:	and    eax,0xf167b4ae
  41809d:	lds    ebx,FWORD PTR [eax-0x78]
  4180a0:	mov    bh,0xb6
  4180a2:	mov    eax,ds:0xc0cd5550
  4180a7:	mov    ebx,0xa7d67324
  4180ac:	loop   0x418127
  4180ae:	in     al,0x43
  4180b0:	mov    ds:0x94dd31f8,al
  4180b5:	rcl    DWORD PTR [ecx+0x48],0x90
  4180b9:	and    cl,BYTE PTR [eax-0x63f94843]
  4180bf:	mov    ecx,0x1771f855
  4180c4:	adc    DWORD PTR [ebx-0x40e1c64d],ebp
  4180ca:	das    
  4180cb:	(bad)  
  4180cc:	inc    ebp
  4180cd:	adc    ch,BYTE PTR [ebp+0xc]
  4180d0:	sub    DWORD PTR [eax],ecx
  4180d2:	mov    ds:0x2b21e9c5,al
  4180d7:	inc    ebx
  4180d8:	pop    ebx
  4180d9:	jmp    0x4180c4
  4180db:	or     al,0xd1
  4180dd:	or     eax,0xb28b6cb4
  4180e2:	cmp    esp,eax
  4180e4:	pop    ecx
  4180e5:	test   eax,0xac9cb655
  4180ea:	inc    eax
  4180eb:	int    0x90
  4180ed:	sbb    dh,BYTE PTR [ebx+0x71c8467e]
  4180f3:	push   ds
  4180f4:	or     edx,DWORD PTR [esi+0x40]
  4180f7:	or     BYTE PTR [esi],0x24
  4180fa:	xor    eax,0x96eebccd
  4180ff:	fs sub eax,0xc0b4020e
  418105:	bound  ecx,QWORD PTR [edx+0x5]
  418108:	jge    0x41810d
  41810a:	jb     0x41814c
  41810c:	jb     0x4180d2
  41810e:	cmc    
  41810f:	dec    edx
  418110:	mov    edi,0x9e9e24e0
  418115:	jns    0x418102
  418117:	mov    dl,0x48
  418119:	dec    edx
  41811a:	and    ecx,ebx
  41811c:	loope  0x418140
  41811e:	sub    al,0x8b
  418120:	mov    ds,WORD PTR [ebp-0x16]
  418123:	imul   BYTE PTR [ebp+0x7949ba96]
  418129:	xor    eax,0x32ff7423
  41812e:	cmp    esi,ebp
  418130:	(bad)  
  418131:	add    DWORD PTR [edx-0x79],0x36
  418135:	push   ebx
  418136:	fistp  DWORD PTR [edi-0x56adec28]
  41813c:	inc    ebx
  41813d:	push   ds
  41813e:	leave  
  41813f:	xor    eax,0x9bcef639
  418144:	push   ecx
  418145:	jae    0x41816c
  418147:	push   ecx
  418148:	(bad)  
  418149:	fld    DWORD PTR [ebp+eax*8-0x28]
  41814d:	fsub   QWORD PTR [ebp-0x72]
  418150:	repz or DWORD PTR [edi-0x51],ebx
  418154:	adc    BYTE PTR [eax+edi*8+0x37],ch
  418158:	mov    ch,0x2b
  41815a:	push   edx
  41815b:	ret    
  41815c:	pop    eax
  41815d:	(bad)  
  41815e:	cwde   
  41815f:	inc    ecx
  418160:	fsub   QWORD PTR [edx-0x6180bb07]
  418166:	xchg   esi,eax
  418167:	aas    
  418168:	imul   edi,DWORD PTR [ebp-0x67b92b98],0xf91ffc4e
  418172:	push   ebx
  418173:	les    edx,FWORD PTR [esi-0x3d]
  418176:	xchg   ebx,eax
  418177:	mov    al,ds:0xc3ae0342
  41817c:	arpl   bp,bx
  41817e:	or     DWORD PTR [edx+0xd],ebx
  418181:	inc    eax
  418182:	(bad)  
  418183:	lods   al,BYTE PTR ds:[esi]
  418184:	cmp    DWORD PTR [eax+ecx*2+0x6c4ce1cc],edi
  41818b:	stos   BYTE PTR es:[edi],al
  41818c:	mov    bl,0x4
  41818e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41818f:	push   0xf7557602
  418194:	scas   al,BYTE PTR es:[edi]
  418195:	daa    
  418196:	pop    ecx
  418197:	xchg   ebx,eax
  418198:	fwait
  418199:	push   0x56ae2b74
  41819e:	imul   ebp,DWORD PTR [esi],0xa9556631
  4181a4:	adc    BYTE PTR [edx],dh
  4181a6:	or     eax,0x43e75d25
  4181ab:	push   esi
  4181ac:	scas   al,BYTE PTR es:[edi]
  4181ad:	ret    0xd674
  4181b0:	sub    al,0x2c
  4181b2:	ret    
  4181b3:	je     0x4181f6
  4181b5:	cmp    DWORD PTR [eax-0x6c],esp
  4181b8:	xor    al,0x81
  4181ba:	js     0x4181d5
  4181bc:	add    dl,BYTE PTR [ebp+0x4cc0d17d]
  4181c2:	mov    esp,0xda020cfb
  4181c7:	or     eax,0xf319929d
  4181cc:	outs   dx,DWORD PTR ds:[esi]
  4181cd:	adc    eax,0xbad5a4c8
  4181d2:	ror    ebx,cl
  4181d4:	jae    0x418200
  4181d6:	retf   0x1fb9
  4181d9:	sub    dh,bl
  4181db:	shl    BYTE PTR [ecx-0x12c532e5],0x8c
  4181e2:	shl    BYTE PTR [edi],cl
  4181e4:	test   al,0x67
  4181e6:	int    0xfc
  4181e8:	dec    edi
  4181e9:	shl    BYTE PTR ds:0xeb6c2762,1
  4181ef:	gs jmp 0x4181d7
  4181f2:	popf   
  4181f3:	fdivr  st,st(2)
  4181f5:	inc    esi
  4181f6:	ja     0x4181e5
  4181f8:	mov    esi,DWORD PTR [esi]
  4181fa:	xor    eax,0xd3538c1a
  4181ff:	out    dx,al
  418200:	mov    edi,0x4bf45db
  418205:	adc    eax,0xc1021e9a
  41820a:	add    ebx,DWORD PTR [ecx-0x70]
  41820d:	fwait
  41820e:	push   DWORD PTR [eax+ebx*4+0x6a502fde]
  418215:	cmp    al,0x8a
  418217:	(bad)  
  418218:	shl    eax,1
  41821a:	fs loop 0x41823f
  41821d:	mov    dh,ch
  41821f:	lahf   
  418220:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418221:	pop    es
  418222:	dec    edx
  418223:	dec    ebx
  418224:	sub    BYTE PTR [ecx+0x0],0x45
  418228:	test   eax,0x8144e83d
  41822d:	xchg   BYTE PTR [ebp-0x59],bh
  418230:	fsub   st(2),st
  418232:	call   FWORD PTR [edx+0xc268191]
  418238:	loope  0x4181c8
  41823a:	mov    ebx,0x4a080a77
  41823f:	and    dh,bl
  418241:	fcomp  QWORD PTR [edx]
  418243:	es dec ebx
  418245:	call   0x2dcdcb80
  41824a:	ds mov dh,0xc5
  41824d:	mov    ebp,0xee10a445
  418252:	add    eax,DWORD PTR [ebx+0x39]
  418255:	mov    cl,0x28
  418257:	add    BYTE PTR [ebx+ebx*1-0x7ccef001],bl
  41825e:	sbb    DWORD PTR [edi+0xb11cc13],esp
  418264:	fnstsw WORD PTR [edi-0x5dbd0817]
  41826a:	jb     0x4182d6
  41826c:	adc    al,0xd7
  41826e:	mov    ah,0x49
  418270:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418271:	mov    al,ds:0x39fc6666
  418276:	jmp    0x4182b6
  418278:	int    0x5f
  41827a:	mov    al,ds:0x38ed02f9
  41827f:	pop    edi
  418280:	iret   
  418281:	test   DWORD PTR [esi-0x6996022c],esp
  418287:	mov    edi,0x261865f4
  41828c:	outs   dx,DWORD PTR es:[esi]
  41828e:	push   edi
  41828f:	push   cs
  418290:	mov    eax,ds:0xc90fd7be
  418295:	xchg   edx,eax
  418296:	dec    ebx
  418297:	dec    edx
  418298:	push   ds
  418299:	jo     0x4182be
  41829b:	xor    eax,0x79e9c8e5
  4182a0:	test   DWORD PTR [esi-0x2a],0x77069f1c
  4182a7:	pushf  
  4182a8:	pop    ecx
  4182a9:	in     al,0x9b
  4182ab:	test   DWORD PTR [ebp+0x156097ec],ecx
  4182b1:	adc    dl,BYTE PTR [ebx-0x6e]
  4182b4:	cli    
  4182b5:	adc    BYTE PTR [edi-0x59028ef2],bh
  4182bb:	mov    edx,0x49f4f0d3
  4182c0:	or     cl,BYTE PTR [edi-0x26dd9c30]
  4182c6:	loope  0x418258
  4182c8:	or     eax,0x484cdf83
  4182cd:	nop
  4182ce:	jbe    0x4182be
  4182d0:	push   esp
  4182d1:	div    ch
  4182d3:	ret    
  4182d4:	inc    eax
  4182d5:	cmp    DWORD PTR [edx+0x64dbb1fc],esi
  4182db:	ins    BYTE PTR es:[edi],dx
  4182dc:	add    dh,BYTE PTR [eax-0x1]
  4182df:	dec    esp
  4182e0:	dec    ebx
  4182e1:	xchg   edi,eax
  4182e2:	inc    ebp
  4182e3:	cdq    
  4182e4:	not    DWORD PTR [edi-0x3f]
  4182e7:	xchg   BYTE PTR [ebx+0x50],ch
  4182ea:	into   
  4182eb:	out    dx,al
  4182ec:	sbb    eax,DWORD PTR [esi+0x2]
  4182ef:	(bad)  
  4182f0:	or     ch,BYTE PTR ds:0xf49a0a69
  4182f6:	mov    dh,0x5
  4182f8:	add    al,0xad
  4182fa:	fcmovb st,st(5)
  4182fc:	scas   eax,DWORD PTR es:[edi]
  4182fd:	cmp    dl,dh
  4182ff:	mov    cl,0x3a
  418301:	mov    ds:0xc68e34b9,eax
  418306:	daa    
  418307:	pop    esi
  418308:	jmp    0x41828b
  41830a:	push   eax
  41830b:	popf   
  41830c:	inc    esp
  41830d:	xchg   esi,eax
  41830e:	mov    ?,WORD PTR [eax-0x2a1fec69]
  418314:	or     DWORD PTR [edi],0xfc1ca2b2
  41831a:	daa    
  41831b:	aaa    
  41831c:	jp     0x418391
  41831e:	lock adc esi,DWORD PTR [esi+0x21]
  418322:	add    WORD PTR [esi+0x79],bx
  418326:	or     esp,DWORD PTR [ecx]
  418328:	aam    0x35
  41832a:	std    
  41832b:	lds    eax,FWORD PTR [esi+0x7e]
  41832e:	xchg   ecx,eax
  41832f:	out    dx,eax
  418330:	push   esp
  418331:	push   esp
  418332:	sbb    esp,eax
  418334:	in     eax,0x51
  418336:	fistp  WORD PTR [ecx+0x3e]
  418339:	test   dh,0x7e
  41833c:	push   es
  41833d:	jmp    0x41836e
  41833f:	setp   BYTE PTR [ebx+0x9]
  418343:	daa    
  418344:	arpl   dx,bp
  418346:	push   es
  418347:	icebp  
  418348:	cmp    eax,0x6050f4fc
  41834d:	cdq    
  41834e:	outs   dx,BYTE PTR ds:[esi]
  41834f:	lods   al,BYTE PTR ds:[esi]
  418350:	sbb    ebp,DWORD PTR ds:0x59118bdc
  418356:	or     eax,0xfdba921c
  41835b:	and    BYTE PTR [ebp-0x29],0xa6
  41835f:	into   
  418360:	xor    eax,0xfb40aa11
  418365:	cmp    edx,ecx
  418367:	pushf  
  418368:	lods   al,BYTE PTR ds:[esi]
  418369:	sti    
  41836a:	jl     0x4182f0
  41836c:	dec    ecx
  41836d:	inc    ecx
  41836e:	or     eax,0x619b5727
  418373:	sub    al,0x27
  418375:	pusha  
  418376:	mov    eax,0x61c5a3d7
  41837b:	dec    esi
  41837c:	js     0x418323
  41837e:	mov    cl,0xdb
  418380:	ins    DWORD PTR es:[edi],dx
  418381:	jecxz  0x4183d5
  418383:	ins    DWORD PTR es:[edi],dx
  418384:	fisttp QWORD PTR [ecx-0x4d]
  418387:	in     al,dx
  418388:	ins    DWORD PTR es:[edi],dx
  418389:	jge    0x418377
  41838b:	pop    edi
  41838c:	sbb    ebp,DWORD PTR [edi-0x4236cc87]
  418392:	(bad)  
  418394:	mov    ch,bl
  418396:	adc    ah,BYTE PTR [ecx-0x514a42e3]
  41839c:	ins    DWORD PTR es:[edi],dx
  41839d:	stc    
  41839e:	in     al,dx
  41839f:	add    DWORD PTR [edi],eax
  4183a1:	cmp    al,0xc3
  4183a3:	sbb    eax,0x564eb054
  4183a8:	add    al,0xa4
  4183aa:	jecxz  0x4183fa
  4183ac:	push   edx
  4183ad:	mov    ah,0x57
  4183af:	sbb    DWORD PTR ds:0x3530b852,0x6f533a89
  4183b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183ba:	stc    
  4183bb:	stos   DWORD PTR es:[edi],eax
  4183bc:	jnp    0x4183ea
  4183be:	mov    ebp,0xbf9fa62d
  4183c3:	mov    edi,0xfb8ee589
  4183c8:	and    eax,ecx
  4183ca:	jo     0x4183d0
  4183cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183cd:	jo     0x4183b1
  4183cf:	sub    al,0xa7
  4183d1:	fcom   DWORD PTR [ebp+0x65]
  4183d4:	xlat   BYTE PTR ds:[ebx]
  4183d5:	cwde   
  4183d6:	jb     0x418360
  4183d8:	sbb    eax,0xfa2c4980
  4183dd:	and    BYTE PTR [esi+0x53],bl
  4183e0:	add    BYTE PTR [ecx],dl
  4183e2:	sbb    bl,0x27
  4183e5:	das    
  4183e6:	pop    edi
  4183e7:	mov    ds,WORD PTR [esi-0x6e]
  4183ea:	and    BYTE PTR [ebx+0x6b],bl
  4183ed:	icebp  
  4183ee:	mov    al,0xa4
  4183f0:	mov    edi,0xce670759
  4183f5:	adc    cl,dl
  4183f7:	push   eax
  4183f8:	cdq    
  4183f9:	jl     0x41841c
  4183fb:	mov    edx,0xffe37879
  418400:	sahf   
  418401:	arpl   WORD PTR [ebp+0x73],sp
  418404:	fwait
  418405:	mov    ecx,0x7e827da
  41840a:	call   0x6030e95
  41840f:	mov    ebx,0x22ef943e
  418414:	stc    
  418415:	xor    eax,0xf4474165
  41841a:	pop    ebx
  41841b:	js     0x418475
  41841d:	jmp    0xa584:0x54e5749c
  418424:	dec    ebp
  418425:	xchg   ebx,eax
  418426:	stc    
  418427:	shr    BYTE PTR [edi-0x3d],cl
  41842a:	nop
  41842b:	data16 jecxz 0x418488
  41842e:	das    
  41842f:	fs sub eax,0x25246dc9
  418435:	or     ebp,DWORD PTR [eax]
  418437:	jo     0x418486
  418439:	xchg   ebx,eax
  41843a:	push   esp
  41843b:	ins    DWORD PTR es:[edi],dx
  41843c:	mov    al,0x40
  41843e:	sub    eax,0x3c518760
  418443:	or     eax,0x4737143f
  418448:	iret   
  418449:	xchg   ebp,eax
  41844a:	jns    0x418437
  41844c:	ds xchg esp,eax
  41844e:	loop   0x418441
  418450:	adc    esp,ebp
  418452:	xchg   BYTE PTR [ebx+ebx*4+0x964d961],dh
  418459:	pusha  
  41845a:	ficomp WORD PTR [ecx+0x4e9460fd]
  418460:	(bad)  
  418462:	out    dx,eax
  418463:	in     al,dx
  418464:	fldcw  WORD PTR [ebx+0x15]
  418467:	(bad)  [edi+0x463fff6f]
  41846d:	sub    BYTE PTR ds:0xdea6f21f,0x6b
  418474:	dec    eax
  418475:	mov    gs,WORD PTR [eax+0x5b]
  418478:	and    al,0xa1
  41847a:	sti    
  41847b:	pop    edi
  41847c:	adc    al,0xc2
  41847e:	mov    ebx,0x214e98fc
  418483:	out    0xf2,al
  418485:	out    0xae,al
  418487:	push   ebx
  418488:	xchg   ecx,eax
  418489:	fwait
  41848a:	and    al,0x4
  41848c:	xchg   esi,eax
  41848d:	out    dx,eax
  41848e:	pop    eax
  41848f:	xchg   ecx,eax
  418490:	xor    esi,ebp
  418492:	fild   WORD PTR [esi+0x34]
  418495:	jne    0x4184a0
  418497:	scas   eax,DWORD PTR es:[edi]
  418498:	jmp    0xe071:0xe447890e
  41849f:	fcmovbe st,st(0)
  4184a1:	push   eax
  4184a2:	lock out dx,al
  4184a4:	adc    DWORD PTR [ecx-0x7d4ee91a],ebx
  4184aa:	adc    ebp,eax
  4184ac:	outs   dx,DWORD PTR ds:[esi]
  4184ad:	mov    esi,0x6a93ba4a
  4184b2:	in     al,dx
  4184b3:	xor    eax,0x6336ec7f
  4184b8:	gs jne 0x418487
  4184bb:	rcl    edx,cl
  4184bd:	or     al,0xe2
  4184bf:	add    al,0xac
  4184c1:	xchg   esp,eax
  4184c2:	mov    ah,0xac
  4184c4:	ins    DWORD PTR es:[edi],dx
  4184c5:	test   al,0x67
  4184c7:	jmp    0xa081e38b
  4184cc:	jne    0x4184ee
  4184ce:	jb     0x4184ad
  4184d0:	or     eax,0xc05af03c
  4184d5:	cmc    
  4184d6:	sub    bl,ah
  4184d8:	(bad)  
  4184d9:	clc    
  4184da:	jge    0x418523
  4184dc:	rcr    BYTE PTR [ecx+0xe],cl
  4184df:	or     bl,bl
  4184e1:	int3   
  4184e2:	push   edx
  4184e3:	push   cs
  4184e4:	jne    0x418503
  4184e6:	cld    
  4184e7:	sbb    eax,DWORD PTR [edi]
  4184e9:	push   0x43
  4184eb:	data16 loop 0x418498
  4184ee:	fnstcw WORD PTR [edx+0x6705e35c]
  4184f4:	mov    al,0x2d
  4184f6:	idiv   BYTE PTR [edi+0xbebd865]
  4184fc:	jae    0x41854a
  4184fe:	xchg   ebx,eax
  4184ff:	out    dx,al
  418500:	mov    ch,0x1c
  418502:	xor    BYTE PTR [edx+0x6043cb86],ah
  418508:	push   esp
  418509:	mov    al,0xbc
  41850b:	push   ecx
  41850c:	lods   al,BYTE PTR ds:[esi]
  41850d:	call   0xfd4e98a4
  418512:	mov    edi,0x3ea2388a
  418517:	ds jbe 0x41851f
  41851a:	loop   0x4184c9
  41851c:	add    DWORD PTR [eax+0x16],0xa3bce00
  418523:	add    al,BYTE PTR [edi-0x14]
  418526:	pop    ds
  418527:	and    BYTE PTR [ebp+eiz*8+0x2fab8873],0xe1
  41852f:	add    ebp,DWORD PTR [eax]
  418531:	dec    edi
  418532:	push   es
  418533:	adc    al,0xc8
  418535:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418536:	adc    ebx,DWORD PTR [edi]
  418538:	xor    al,0x53
  41853a:	xor    BYTE PTR [edi],bh
  41853c:	(bad)  
  41853d:	jo     0x4184df
  41853f:	adc    al,BYTE PTR [edx-0x57871641]
  418545:	add    edx,ebp
  418547:	mov    edi,0x718022d9
  41854c:	xor    DWORD PTR [edi+edi*2+0x7f],esp
  418550:	mov    ds:0x633c3479,al
  418555:	pop    ss
  418556:	mov    DWORD PTR [ecx],edx
  418558:	fs mov dh,0xcf
  41855b:	add    al,0xdb
  41855d:	pop    esp
  41855e:	xor    al,0x63
  418560:	rol    DWORD PTR ds:0xe6e1d6f5,cl
  418566:	aaa    
  418567:	arpl   bx,bp
  418569:	inc    ebp
  41856a:	or     al,0xe9
  41856c:	fiadd  WORD PTR [esi+0x75]
  41856f:	repnz test al,0x94
  418572:	js     0x418506
  418574:	in     eax,dx
  418575:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418576:	cmp    al,0x95
  418578:	push   edi
  418579:	sbb    eax,0x48476a21
  41857e:	test   ecx,ecx
  418580:	push   ebp
  418581:	cmp    DWORD PTR [esi+0x4aa13292],0xffffffb4
  418588:	test   bl,dl
  41858a:	mov    edx,0xeb014ea8
  41858f:	sub    edx,eax
  418591:	push   eax
  418592:	jecxz  0x41854b
  418594:	leave  
  418595:	add    dh,ah
  418597:	mov    dh,0x3
  418599:	mov    BYTE PTR [esp+ebp*2+0x4b],dh
  41859d:	cld    
  41859e:	xlat   BYTE PTR ds:[ebx]
  41859f:	fucomp st(7)
  4185a1:	outs   dx,BYTE PTR ds:[esi]
  4185a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185a3:	int    0x5b
  4185a5:	call   0x8ecd6912
  4185aa:	and    eax,0x4e9a60c6
  4185af:	lock hlt 
  4185b1:	mov    eax,0xf66645de
  4185b6:	test   al,0x0
  4185b8:	dec    eax
  4185b9:	inc    edi
  4185ba:	cli    
  4185bb:	loop   0x418561
  4185bd:	cmp    dl,bl
  4185bf:	sub    ebp,DWORD PTR [edx+0x4b524e]
  4185c5:	pop    ebx
  4185c6:	jo     0x41858d
  4185c8:	push   ss
  4185c9:	ins    DWORD PTR es:[edi],dx
  4185ca:	pop    ds
  4185cb:	dec    eax
  4185cc:	loopne 0x4185e9
  4185ce:	mov    DWORD PTR [esi+eiz*1],esi
  4185d1:	retf   
  4185d2:	or     eax,ecx
  4185d4:	mov    bl,0xa6
  4185d6:	or     al,0xce
  4185d8:	test   eax,0xa05d49df
  4185dd:	add    eax,0x25bc2a63
  4185e2:	div    dh
  4185e4:	daa    
  4185e5:	sub    esi,DWORD PTR [edx+0x548d7166]
  4185eb:	and    ebp,ecx
  4185ed:	int3   
  4185ee:	test   DWORD PTR [esi+0x62],0xc2955eed
  4185f5:	gs mov cl,0x28
  4185f8:	retf   0xe335
  4185fb:	dec    edx
  4185fc:	or     DWORD PTR [edi],0x1c
  4185ff:	std    
  418600:	adc    cl,BYTE PTR [ebx+0x58a9c919]
  418606:	sahf   
  418607:	(bad)  
  418609:	mov    edx,0xf641cb1c
  41860e:	xchg   ecx,eax
  41860f:	pop    es
  418610:	jecxz  0x41866c
  418612:	imul   bh
  418614:	lds    eax,FWORD PTR [ecx]
  418616:	lods   al,BYTE PTR ds:[esi]
  418617:	cmp    dh,cl
  418619:	test   ebx,esi
  41861b:	xchg   ebp,eax
  41861c:	fcom   DWORD PTR [esp+ecx*4]
  41861f:	repz fnstsw WORD PTR [esi+ebp*8]
  418623:	adc    esi,DWORD PTR [ebx-0x5ecfe3a9]
  418629:	in     eax,dx
  41862a:	mov    al,ds:0xe813d598
  41862f:	mov    WORD PTR [edi+0x29a12dbe],fs
  418635:	fs aaa 
  418637:	add    cl,BYTE PTR [edx+0xa]
  41863a:	(bad)
  41863d:	mov    ds:0xc7e5bcf2,al
  418642:	test   al,0x86
  418644:	test   eax,0x133d32f1
  418649:	push   ebx
  41864a:	clc    
  41864b:	test   DWORD PTR [edx],ebx
  41864d:	pop    ss
  41864e:	and    esp,0xa07a0084
  418654:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418655:	push   0x67e3ab80
  41865a:	rcr    DWORD PTR [edx+0x9],0x9c
  41865e:	leave  
  41865f:	pusha  
  418660:	inc    esp
  418661:	aam    0x55
  418663:	push   edx
  418664:	inc    sp
  418666:	js     0x418688
  418668:	mov    ebx,0xc1d39601
  41866d:	dec    ecx
  41866e:	push   esp
  41866f:	add    BYTE PTR [esi-0x17],dl
  418672:	pop    edi
  418673:	push   ss
  418674:	leave  
  418675:	mov    edi,0x1dd8dbfb
  41867a:	fldenv [esi+0x197f51fe]
  418680:	jb     0x418668
  418682:	inc    eax
  418683:	cmp    al,0x37
  418685:	or     eax,0xf50cbfae
  41868a:	ficom  DWORD PTR [ebx+0x1b078990]
  418690:	jle    0x418678
  418692:	and    dl,BYTE PTR [ebx+0x795637ad]
  418698:	das    
  418699:	pop    ds
  41869a:	jns    0x4186b7
  41869c:	cs push esp
  41869e:	pusha  
  41869f:	inc    edx
  4186a0:	fcmove st,st(0)
  4186a2:	sub    al,0xdb
  4186a4:	sbb    eax,0xa5641155
  4186a9:	mov    bh,0x82
  4186ab:	lock push ebx
  4186ad:	call   0x4332:0xdd68d6a1
  4186b4:	jmp    0x8c5a1069
  4186b9:	pop    esi
  4186ba:	test   DWORD PTR [esi-0x61eb0ada],0xec0c045c
  4186c4:	fidiv  WORD PTR gs:[ecx-0x72]
  4186c8:	inc    edi
  4186c9:	xor    bl,BYTE PTR [ebp+0x74b1a6f4]
  4186cf:	(bad)  
  4186d1:	leave  
  4186d2:	or     esp,DWORD PTR [esi-0x53]
  4186d5:	stc    
  4186d6:	pop    ss
  4186d7:	sub    ecx,ebp
  4186d9:	xchg   esi,eax
  4186da:	lds    ebp,FWORD PTR [edi*4+0x1d88bf38]
  4186e1:	and    al,0x95
  4186e3:	add    al,0x68
  4186e5:	and    ebx,DWORD PTR ds:[eax+0x54ea5fcf]
  4186ec:	rol    DWORD PTR [ebp+0x4005eb18],0xc1
  4186f3:	xor    al,0x5a
  4186f5:	ud1    ebx,DWORD PTR [eax-0x3aeb7a7b]
  4186fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186fd:	mov    al,dh
  4186ff:	mov    WORD PTR [ecx+0x14],es
  418702:	sub    BYTE PTR [edx+0x11],dh
  418705:	loope  0x4186d3
  418707:	(bad)  
  418708:	fwait
  418709:	retf   
  41870a:	pop    ecx
  41870b:	lds    esi,FWORD PTR [ecx]
  41870d:	push   0xb8076472
  418712:	fld    QWORD PTR [eax-0xea81696]
  418718:	xchg   esi,eax
  418719:	sub    BYTE PTR [esi+0x2d12ca24],0x88
  418720:	cli    
  418721:	(bad)  
  418722:	mov    cl,0xea
  418724:	mov    ch,0x9c
  418726:	data16 jmp 0x418723
  418729:	or     BYTE PTR [ebp+0x33],al
  41872c:	fisttp DWORD PTR [eax-0x59]
  41872f:	xchg   ebx,eax
  418730:	xchg   ebp,eax
  418731:	retf   0xcd4f
  418734:	push   ss
  418735:	ret    0xd4e3
  418738:	lea    esi,[eax+ebp*4-0x80]
  41873c:	sub    BYTE PTR [ebx-0x75ab8148],0xb8
  418743:	pop    ebp
  418744:	sub    al,0x3a
  418746:	add    al,0xed
  418748:	repnz or ebx,0xffffff8f
  41874c:	mov    WORD PTR [eax+ebx*8-0x5b],ss
  418750:	imul   BYTE PTR [edx+edi*4]
  418753:	xchg   esi,eax
  418754:	push   esp
  418755:	cwde   
  418756:	mov    DWORD PTR [ebx-0x38],esp
  418759:	and    al,0x1e
  41875b:	and    BYTE PTR [eax+0x5b2f2a65],0x45
  418762:	xor    BYTE PTR [esi],dh
  418764:	cli    
  418765:	ror    BYTE PTR [edi+0x50c15ae2],1
  41876b:	jle    0x418732
  41876d:	inc    esp
  41876e:	jnp    0x41874e
  418770:	push   es
  418771:	(bad)  
  418772:	pop    eax
  418773:	mov    ch,BYTE PTR ds:0x41676c8f
  418779:	push   eax
  41877a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41877b:	jmp    0x7cf0360
  418780:	addr16 into 
  418782:	mov    eax,0x2b4ee9f1
  418787:	push   ss
  418788:	mov    esp,0x86deb570
  41878d:	idiv   bl
  41878f:	inc    edx
  418790:	adc    BYTE PTR [ecx],bl
  418792:	mov    ebx,0x94ae2756
  418797:	out    dx,eax
  418798:	dec    edx
  418799:	mov    eax,0x78a507b2
  41879e:	pop    ss
  41879f:	fnstsw WORD PTR [edx+ebp*4-0x2d]
  4187a3:	outs   dx,DWORD PTR ds:[esi]
  4187a4:	pusha  
  4187a5:	push   ss
  4187a6:	jmp    0x41880f
  4187a8:	cld    
  4187a9:	jge    0x41874d
  4187ab:	fs xchg edi,eax
  4187ad:	and    eax,0xbabe428
  4187b2:	pop    edx
  4187b3:	dec    ebp
  4187b4:	mov    esi,0x21fe99e
  4187b9:	(bad)  
  4187ba:	jb     0x41881d
  4187bc:	sbb    dl,BYTE PTR [eax]
  4187be:	out    dx,eax
  4187bf:	inc    edx
  4187c0:	lds    ecx,FWORD PTR [ebx+0x26]
  4187c3:	pushf  
  4187c4:	xor    dh,BYTE PTR [esi]
  4187c6:	fdivr  st(2),st
  4187c8:	test   al,0x8e
  4187ca:	pop    ds
  4187cb:	mov    esp,0xd67f5269
  4187d0:	jmp    0xbea1:0x1136a74
  4187d7:	adc    dl,BYTE PTR [esi]
  4187d9:	push   cs
  4187da:	or     eax,0x8ba7fbe7
  4187df:	mov    cl,BYTE PTR [eax]
  4187e1:	daa    
  4187e2:	stos   BYTE PTR es:[edi],al
  4187e3:	sub    eax,0x2ab3f074
  4187e8:	sbb    DWORD PTR [ebx],eax
  4187ea:	fimul  DWORD PTR [edx-0x70]
  4187ed:	fmulp  st(0),st
  4187ef:	add    ecx,eax
  4187f1:	stos   BYTE PTR es:[edi],al
  4187f2:	jl     0x418786
  4187f4:	mov    cs,edi
  4187f6:	bound  edi,QWORD PTR [ecx+0x75c756e1]
  4187fc:	push   edx
  4187fd:	ret    0xb655
  418800:	xchg   edx,eax
  418801:	out    dx,eax
  418802:	nop
  418803:	setg   BYTE PTR [eax-0x6d]
  418807:	cmp    eax,0xf7c58d9e
  41880c:	adc    al,BYTE PTR [ecx+0x1497a9ad]
  418812:	stos   DWORD PTR es:[edi],eax
  418813:	or     DWORD PTR [ebx+eax*2],ecx
  418816:	sbb    DWORD PTR [eax-0x7da96071],ebx
  41881c:	aam    0x2
  41881e:	mov    bl,0x8
  418820:	bound  edx,QWORD PTR [ecx+0x4b755b6e]
  418826:	add    BYTE PTR [ebx+ebx*1],0xc9
  41882a:	rol    DWORD PTR [ecx],1
  41882c:	or     bh,dl
  41882e:	push   esp
  41882f:	dec    ebp
  418830:	add    BYTE PTR [ebx],0xc
  418833:	sbb    edi,ebx
  418835:	add    DWORD PTR [eax+ecx*4-0x6e],0x719f32a5
  41883d:	or     eax,DWORD PTR [edi]
  41883f:	dec    esi
  418840:	lock adc BYTE PTR [ecx-0x257a68f6],bl
  418847:	dec    ebx
  418848:	cmp    BYTE PTR [ecx+0xb986500],ah
  41884e:	inc    eax
  41884f:	xor    eax,esi
  418851:	mov    bh,0xc4
  418853:	leave  
  418854:	mov    ebp,0x6d1108ce
  418859:	sbb    edx,DWORD PTR [esi+0x6b]
  41885c:	fsub   DWORD PTR [ecx-0x6a]
  41885f:	daa    
  418860:	push   edi
  418861:	jo     0x4188b6
  418863:	test   BYTE PTR [ebp-0x255c6e3e],ah
  418869:	imul   ebp,DWORD PTR [edx-0x4c2e9235],0x5010cbc3
  418873:	stos   BYTE PTR es:[edi],al
  418874:	nop
  418875:	add    edx,DWORD PTR [ebx-0x58]
  418878:	and    BYTE PTR [esi-0x3372b0be],al
  41887e:	xor    DWORD PTR [edx],edi
  418880:	mov    eax,ds:0xd8c87b49
  418885:	xor    BYTE PTR [ebx+0x61e6b969],bh
  41888b:	push   0x85f62c66
  418890:	mov    bh,0xae
  418892:	adc    BYTE PTR [edi+0xa],dl
  418895:	xchg   esi,eax
  418896:	cmp    eax,0xbee5d811
  41889b:	mov    WORD PTR [ebx+ebx*8],fs
  41889e:	push   edi
  41889f:	stos   DWORD PTR es:[edi],eax
  4188a0:	jbe    0x41889e
  4188a2:	fxch   st(1)
  4188a4:	int    0x8
  4188a6:	loope  0x418867
  4188a8:	cmp    BYTE PTR [ebx+0x56],ch
  4188ab:	iret   
  4188ac:	lods   al,BYTE PTR ds:[esi]
  4188ad:	dec    eax
  4188ae:	mov    dh,BYTE PTR [edx+0x59]
  4188b1:	je     0x41890a
  4188b3:	lea    ebp,[eax]
  4188b5:	scas   eax,DWORD PTR es:[edi]
  4188b6:	inc    ecx
  4188b7:	or     al,0x6f
  4188b9:	test   al,0x9e
  4188bb:	pusha  
  4188bc:	pop    eax
  4188bd:	lods   eax,DWORD PTR ds:[esi]
  4188be:	(bad)  
  4188bf:	dec    DWORD PTR [ebp-0x5]
  4188c2:	pop    esp
  4188c3:	pop    ds
  4188c4:	xor    al,0xa2
  4188c6:	aas    
  4188c7:	ins    DWORD PTR es:[edi],dx
  4188c8:	push   es
  4188c9:	rcl    BYTE PTR [eax+0x7a24fae1],cl
  4188cf:	lock mov ecx,0x4c83509c
  4188d5:	stc    
  4188d6:	xchg   edx,eax
  4188d7:	sub    ecx,DWORD PTR [eax+0x2c3354c]
  4188dd:	inc    ebx
  4188de:	dec    ebp
  4188df:	pop    es
  4188e0:	hlt    
  4188e1:	pop    ebx
  4188e2:	adc    eax,0x655b5a89
  4188e7:	stc    
  4188e8:	or     eax,0xff499ac4
  4188ed:	sbb    DWORD PTR [edx+0x4b4273c],0xffffff9d
  4188f4:	sbb    bl,0xab
  4188f7:	cmp    al,0xf4
  4188f9:	lds    ebp,FWORD PTR [eax]
  4188fb:	or     DWORD PTR [ecx+0x127e0597],0x36
  418902:	mov    ds:0x32e81eef,al
  418907:	aas    
  418908:	cwde   
  418909:	add    dl,BYTE PTR [edx+eax*4]
  41890c:	xor    bh,BYTE PTR [ebp-0x7ce8dc75]
  418912:	pusha  
  418913:	(bad)  
  418914:	mov    edx,0x4853a96
  418919:	mov    ch,0xf7
  41891b:	scas   eax,DWORD PTR es:[edi]
  41891c:	xor    eax,ebp
  41891e:	jle    0x418974
  418920:	es sub edi,edi
  418923:	fdiv   DWORD PTR [ebx+eiz*1-0x2e]
  418927:	dec    eax
  418928:	add    BYTE PTR [ebp+0x21],dl
  41892b:	bswap  edi
  41892d:	(bad)  
  41892e:	sub    BYTE PTR [esp+eiz*8-0x38],bh
  418932:	push   cs
  418933:	out    0xa5,eax
  418935:	int    0x8d
  418937:	imul   edi,DWORD PTR [edi],0x6e
  41893a:	loopne 0x4188bd
  41893c:	xor    DWORD PTR [ebx],0x4d
  41893f:	adc    al,0xf7
  418941:	stos   BYTE PTR es:[edi],al
  418942:	jp     0x4189bd
  418944:	jbe    0x418990
  418946:	outs   dx,DWORD PTR ds:[esi]
  418947:	mov    esp,0xf3a1ec64
  41894c:	dec    ebx
  41894d:	and    cl,al
  41894f:	and    BYTE PTR [eax+0x17],bl
  418952:	inc    edx
  418953:	retf   0xa460
  418956:	pop    ecx
  418957:	xchg   BYTE PTR [edi-0x6],dl
  41895a:	aas    
  41895b:	inc    ebx
  41895c:	(bad)  [ebx+ebp*1-0x4f4be3ba]
  418963:	(bad)  
  418965:	add    BYTE PTR [edi+ebx*4],dl
  418968:	std    
  418969:	push   edi
  41896a:	pcmpgtw mm7,QWORD PTR [ebx+0x531a12f7]
  418971:	xor    eax,0xe0f75afe
  418976:	test   BYTE PTR [ebx+0x7f],bl
  418979:	jmp    DWORD PTR [edx]
  41897b:	into   
  41897c:	xor    eax,0x4b6d0289
  418981:	call   0x30d0de6a
  418986:	mov    esi,0xd099b030
  41898b:	pop    ebx
  41898c:	inc    edx
  41898d:	ror    DWORD PTR [ebp-0x7afd5072],1
  418993:	lahf   
  418994:	cld    
  418995:	push   ds
  418996:	repz fsubr QWORD PTR [ebx+esi*1]
  41899a:	adc    DWORD PTR [edi],0xffffffcf
  41899d:	loop   0x418a09
  41899f:	cmp    eax,0xf185e909
  4189a4:	call   0xd7d2:0xb7798e8d
  4189ab:	sbb    al,0x23
  4189ad:	mov    BYTE PTR [esi+0x56],0x71
  4189b1:	push   cs
  4189b2:	daa    
  4189b3:	in     al,0x8d
  4189b5:	inc    ebx
  4189b6:	nop
  4189b7:	add    al,0x6b
  4189b9:	mov    ebx,0x1a381289
  4189be:	pop    edi
  4189bf:	loopne 0x4189c4
  4189c1:	cwde   
  4189c2:	xor    dh,BYTE PTR [ebx]
  4189c4:	repz loope 0x41896c
  4189c7:	fst    st(5)
  4189c9:	fstp   TBYTE PTR [ecx+edi*1]
  4189cc:	ret    0xf137
  4189cf:	mov    gs,WORD PTR [esi-0x6f]
  4189d2:	test   al,0x3c
  4189d4:	mov    ebx,DWORD PTR [ebx+esi*2+0x2e65fb06]
  4189db:	xor    eax,0xf1c87cfb
  4189e0:	push   eax
  4189e1:	mov    al,ds:0x1e7d4207
  4189e6:	int3   
  4189e7:	mov    ebx,0xb6b3972e
  4189ec:	mov    bh,0xb1
  4189ee:	mov    bh,0xd6
  4189f0:	lds    edi,FWORD PTR [edx-0x8b7c78b]
  4189f6:	adc    DWORD PTR [ebx+0x1114fa9],esp
  4189fc:	xchg   edx,eax
  4189fd:	mov    ch,0x83
  4189ff:	out    0x4b,al
  418a01:	pop    ecx
  418a02:	arpl   WORD PTR [edx+0x48e71bab],sp
  418a08:	push   edi
  418a09:	fsub   DWORD PTR [edx]
  418a0b:	mov    al,ds:0x767e82e6
  418a10:	les    ebp,FWORD PTR [esi-0x40]
  418a13:	mov    al,0x54
  418a15:	das    
  418a16:	xor    al,0xee
  418a18:	bndldx (bad),[ebp-0x3ded2beb]
  418a1f:	popa   
  418a20:	rol    BYTE PTR [eax+edi*2-0x63],1
  418a24:	or     ch,dh
  418a26:	adc    BYTE PTR [edi],0xcd
  418a29:	into   
  418a2a:	sbb    DWORD PTR [ebp+0x1e95ee4c],ebx
  418a30:	inc    edx
  418a31:	ins    BYTE PTR es:[edi],dx
  418a32:	xchg   DWORD PTR [esp+eax*8-0x71],ecx
  418a36:	push   ebp
  418a37:	adc    ah,BYTE PTR gs:[eax+0xbf2bef5]
  418a3e:	sti    
  418a3f:	shr    dl,0x60
  418a42:	std    
  418a43:	add    al,0x81
  418a45:	mov    bh,0xf9
  418a47:	push   edi
  418a48:	(bad)  
  418a49:	arpl   WORD PTR [ecx-0xf469f7f],ax
  418a4f:	jmp    0xcff527bb
  418a54:	sub    ecx,esi
  418a56:	push   ebp
  418a57:	sbb    ebp,DWORD PTR [ecx-0x9495aef]
  418a5d:	push   DWORD PTR [edi+0x44]
  418a60:	fcom   DWORD PTR [eax]
  418a62:	scas   eax,DWORD PTR es:[edi]
  418a63:	push   ds
  418a64:	in     eax,0x6b
  418a66:	loopne 0x418a47
  418a68:	inc    ecx
  418a69:	mov    BYTE PTR [ebp+edx*2+0x2487aaa5],al
  418a70:	add    dl,BYTE PTR [eax-0x18]
  418a73:	push   eax
  418a74:	out    0x6,al
  418a76:	mov    ah,0xb0
  418a78:	push   es
  418a79:	cwde   
  418a7a:	dec    ecx
  418a7b:	pop    ds
  418a7c:	push   cs
  418a7d:	push   ss
  418a7e:	dec    esi
  418a7f:	sub    DWORD PTR [eax+esi*2+0x4ab74b5a],esp
  418a86:	sub    eax,0x313e9552
  418a8b:	jmp    0x9da9:0x9902048a
  418a92:	xchg   ebp,eax
  418a93:	mov    WORD PTR [eax-0x413b09e1],?
  418a99:	outs   dx,DWORD PTR ds:[esi]
  418a9a:	xor    dl,BYTE PTR [eax+edx*4]
  418a9d:	call   0x1a55606d
  418aa2:	sbb    ch,0x76
  418aa5:	in     al,dx
  418aa6:	iret   
  418aa7:	(bad)  
  418aa8:	xor    esi,DWORD PTR [edi]
  418aaa:	pop    esp
  418aab:	idiv   DWORD PTR [eax-0x79feb14d]
  418ab1:	sbb    BYTE PTR [esi-0x44],0x80
  418ab5:	cmp    bl,ch
  418ab7:	mov    ds:0xe6b81eea,al
  418abc:	xor    DWORD PTR [edi+0x40dcc1d3],edx
  418ac2:	xor    eax,0x23e1eda4
  418ac7:	xor    al,0xff
  418ac9:	sar    DWORD PTR [ebx],0x30
  418acc:	and    DWORD PTR [edi+esi*4+0x73],esp
  418ad0:	jbe    0x418b1e
  418ad2:	scas   eax,DWORD PTR es:[edi]
  418ad3:	stc    
  418ad4:	add    ebp,DWORD PTR [edi]
  418ad6:	xchg   DWORD PTR [edi-0x6fd46208],ecx
  418adc:	inc    eax
  418add:	and    al,0xd5
  418adf:	out    dx,al
  418ae0:	dec    ecx
  418ae1:	jmp    0x8966ae57
  418ae6:	scas   al,BYTE PTR es:[edi]
  418ae7:	jmp    0x3ff37ad9
  418aec:	js     0x418a9c
  418aee:	enter  0xc0c4,0x5
  418af2:	fdivr  DWORD PTR [edi+0xcafd64a]
  418af8:	push   edi
  418af9:	or     bh,bl
  418afb:	add    cl,BYTE PTR [ebx]
  418afd:	dec    esp
  418afe:	inc    eax
  418aff:	cld    
  418b00:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  418b02:	mov    BYTE PTR [eax+0x4a],bh
  418b05:	fs xchg ebp,eax
  418b07:	leave  
  418b08:	pop    ss
  418b09:	inc    esp
  418b0a:	inc    ecx
  418b0b:	ficomp DWORD PTR [eax-0x77]
  418b0e:	ins    DWORD PTR es:[edi],dx
  418b0f:	arpl   WORD PTR [edx-0x54],di
  418b12:	sbb    dh,al
  418b14:	icebp  
  418b15:	and    edi,ebp
  418b17:	repz pusha 
  418b19:	rcl    DWORD PTR [edx+0x730aa2f7],1
  418b1f:	iret   
  418b20:	nop
  418b21:	jle    0x418ad5
  418b23:	sub    BYTE PTR [edi+0x63],bh
  418b26:	xlat   BYTE PTR ds:[ebx]
  418b27:	mov    edx,0xfd51e6c0
  418b2c:	mov    ch,0xdc
  418b2e:	std    
  418b2f:	or     dl,BYTE PTR [edx]
  418b31:	cmp    esi,DWORD PTR [esi]
  418b33:	jecxz  0x418b09
  418b35:	pop    edi
  418b36:	push   ebp
  418b37:	iret   
  418b38:	(bad)  
  418b39:	punpckhwd mm0,QWORD PTR [ebp+0x65]
  418b3d:	or     BYTE PTR [ebp-0x20],dh
  418b40:	aad    0xe5
  418b42:	add    DWORD PTR [ecx],edi
  418b44:	adc    edi,DWORD PTR [ecx+eiz*2]
  418b47:	outs   dx,BYTE PTR ds:[esi]
  418b48:	neg    BYTE PTR [eax+0x4c78d3d7]
  418b4e:	neg    BYTE PTR [esi+0x1f]
  418b51:	mov    ebp,0x4aa918f9
  418b56:	pop    eax
  418b57:	adc    dl,BYTE PTR [ecx+0x74]
  418b5a:	test   eax,0x587b7f5b
  418b5f:	dec    eax
  418b60:	fimul  DWORD PTR [eax+0x1e]
  418b63:	jae    0x418bb7
  418b65:	dec    esi
  418b66:	stos   DWORD PTR es:[edi],eax
  418b67:	xchg   ecx,eax
  418b68:	retf   
  418b69:	js     0x418b24
  418b6b:	lods   al,BYTE PTR ds:[esi]
  418b6c:	rcl    BYTE PTR [ebx+0x32],cl
  418b6f:	push   ss
  418b70:	ins    DWORD PTR es:[edi],dx
  418b71:	xor    DWORD PTR [esi-0x3a],0xdfe3d174
  418b78:	enter  0x8eb5,0x9d
  418b7c:	test   BYTE PTR [ebp+0x191eac],bh
  418b82:	cmp    BYTE PTR [eax+0x75],bl
  418b85:	add    ecx,DWORD PTR [ecx-0x4c2b358a]
  418b8b:	cmp    esi,DWORD PTR [esi]
  418b8d:	sub    BYTE PTR [eax-0x4f],dl
  418b90:	cmp    ah,BYTE PTR [edi]
  418b92:	mov    ecx,0x93b69217
  418b97:	adc    ecx,esi
  418b99:	outs   dx,BYTE PTR ds:[esi]
  418b9a:	xchg   edi,eax
  418b9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b9c:	arpl   WORD PTR [edx+eax*2+0x4a04d126],dx
  418ba3:	sahf   
  418ba4:	inc    ebx
  418ba5:	adc    ebp,DWORD PTR [esi]
  418ba7:	push   ebp
  418ba8:	mov    esi,0x495ff28
  418bad:	xor    ah,cl
  418baf:	mov    eax,ds:0x2814202c
  418bb4:	scas   al,BYTE PTR es:[edi]
  418bb5:	adc    BYTE PTR [esi+0x5ee094d3],al
  418bbb:	xchg   BYTE PTR [ebx],bh
  418bbd:	pushf  
  418bbe:	fild   WORD PTR [eax-0x2a]
  418bc1:	test   BYTE PTR [esp+ecx*8],dh
  418bc4:	fisttp WORD PTR [esi+0x47047db0]
  418bca:	clc    
  418bcb:	or     BYTE PTR [eax],ah
  418bcd:	ds scas al,BYTE PTR es:[edi]
  418bcf:	test   BYTE PTR [ecx+0xf],0xa
  418bd3:	pop    eax
  418bd4:	push   0x7d
  418bd6:	sub    ebp,ecx
  418bd8:	mov    DWORD PTR [edi],edx
  418bda:	xor    BYTE PTR [edi+esi*8],cl
  418bdd:	add    BYTE PTR [eax-0x7d5d90a9],ch
  418be3:	inc    edx
  418be4:	imul   esi,DWORD PTR [edi-0x548d20],0x72983435
  418bee:	(bad)  
  418bf0:	pop    ebp
  418bf1:	sbb    DWORD PTR [eax-0x48],ebx
  418bf4:	in     al,0xf1
  418bf6:	int3   
  418bf7:	loopne 0x418c50
  418bf9:	mov    al,ds:0x1bc8f5d6
  418bfe:	mov    ds:0x5fb910ca,al
  418c03:	lock inc esp
  418c05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c06:	ss fld st(0)
  418c09:	scas   al,BYTE PTR es:[edi]
  418c0a:	and    al,0x3c
  418c0c:	push   ebp
  418c0d:	mov    al,0x53
  418c0f:	xor    BYTE PTR [ebx+0x2e12921b],bl
  418c15:	lods   al,BYTE PTR ds:[esi]
  418c16:	mov    ds:0x62719b8a,al
  418c1b:	and    eax,0x7c7e5577
  418c20:	sub    ch,dl
  418c22:	push   edi
  418c23:	jmp    0x418bc8
  418c25:	leave  
  418c26:	sub    al,0x2b
  418c28:	addr16 dec edx
  418c2a:	jbe    0x418c57
  418c2c:	(bad)  [edi-0x5905ad14]
  418c32:	mov    ecx,0xb11281a9
  418c37:	push   ebp
  418c38:	shr    DWORD PTR [esi],cl
  418c3a:	mov    ebx,0x42d1c63a
  418c3f:	popa   
  418c40:	mov    dh,0x55
  418c42:	(bad)  
  418c43:	fsubr  QWORD PTR [esi+ebx*4+0x3bd45e4a]
  418c4a:	mov    al,ds:0xba2a185d
  418c4f:	icebp  
  418c50:	int3   
  418c51:	and    edi,DWORD PTR [ebx-0x33f90966]
  418c57:	sbb    BYTE PTR [edx],0x11
  418c5a:	push   esi
  418c5b:	mov    ah,0x2c
  418c5d:	out    dx,al
  418c5e:	mov    ch,0x77
  418c60:	and    BYTE PTR [edx],ah
  418c62:	add    ecx,ecx
  418c64:	or     cl,BYTE PTR [eax]
  418c66:	sbb    DWORD PTR [eax],esp
  418c68:	inc    ebp
  418c69:	aam    0x57
  418c6b:	mov    dh,0xd7
  418c6d:	xor    ebp,esp
  418c6f:	dec    eax
  418c70:	pusha  
  418c71:	xor    eax,0xd6833fd7
  418c76:	das    
  418c77:	cld    
  418c78:	inc    ecx
  418c79:	aad    0x8a
  418c7b:	adc    eax,0xaf6faa88
  418c80:	mov    esi,0x8601a903
  418c85:	pop    ebp
  418c86:	adc    eax,0xa12ef4f2
  418c8b:	jl     0x418c6a
  418c8d:	or     eax,0x69013d3f
  418c92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c93:	dec    edx
  418c94:	ret    0x9df4
  418c97:	ins    BYTE PTR es:[edi],dx
  418c98:	repz (bad) 
  418c9a:	and    al,0x31
  418c9c:	(bad)  [ebp+0x67]
  418c9f:	or     al,0x63
  418ca1:	pop    esi
  418ca2:	and    dl,bh
  418ca4:	xchg   edx,eax
  418ca5:	es jge 0x418c6c
  418ca8:	lods   eax,DWORD PTR ds:[esi]
  418ca9:	add    ebx,edi
  418cab:	(bad)  [ebp+0x1998e29]
  418cb1:	sar    ebx,cl
  418cb3:	inc    eax
  418cb4:	or     eax,0x9f3054d6
  418cb9:	(bad)  
  418cbb:	push   ss
  418cbc:	es aam 0xc6
  418cbf:	push   ebx
  418cc0:	or     edi,DWORD PTR [edi+0x7b]
  418cc3:	lds    ebx,FWORD PTR [eax]
  418cc5:	xor    BYTE PTR [esi+0x7935a4b4],al
  418ccb:	cmp    bl,BYTE PTR [ecx-0x3d]
  418cce:	xor    DWORD PTR [ecx+0x21],ebx
  418cd1:	neg    BYTE PTR [esp+ebx*8+0x6c]
  418cd5:	or     ah,al
  418cd7:	mov    bh,0x41
  418cd9:	loopne 0x418ced
  418cdb:	mov    ecx,0xb9fa1854
  418ce0:	mov    BYTE PTR [ebx+0x572dcbc0],dh
  418ce6:	sbb    al,BYTE PTR [esi+0x4251b385]
  418cec:	sahf   
  418ced:	mov    DWORD PTR [esi],eax
  418cef:	sar    DWORD PTR [eax-0x150daf39],0x20
  418cf6:	aad    0x3d
  418cf8:	lods   eax,DWORD PTR ds:[esi]
  418cf9:	pop    edx
  418cfa:	pop    edx
  418cfb:	push   cs
  418cfc:	loopne 0x418d4e
  418cfe:	fcomp  DWORD PTR [eax+ebp*2-0x6c44a8f5]
  418d05:	or     bl,dh
  418d07:	test   BYTE PTR [ebx-0x7af686e7],ah
  418d0d:	pop    ds
  418d0e:	sbb    eax,0xf0e9224b
  418d13:	fild   QWORD PTR [esi+0x56]
  418d16:	out    dx,al
  418d17:	jecxz  0x418d90
  418d19:	and    eax,0xbecc729d
  418d1e:	mov    bl,0x3f
  418d20:	sbb    BYTE PTR [ecx-0x44],al
  418d23:	add    esi,ebp
  418d25:	xchg   eax,esp
  418d27:	rcr    BYTE PTR [edi+0x0],cl
  418d2a:	xor    BYTE PTR [edi+0x78bf2136],0xd0
  418d31:	lahf   
  418d32:	mov    ebx,0x3a16c320
  418d37:	dec    esp
  418d38:	rsm    
  418d3a:	add    bh,ah
  418d3c:	aad    0x81
  418d3e:	int3   
  418d3f:	cld    
  418d40:	stos   DWORD PTR es:[edi],eax
  418d41:	xor    eax,0xe9c7b055
  418d46:	mov    bl,0x9
  418d48:	repnz scas eax,DWORD PTR es:[edi]
  418d4a:	hlt    
  418d4b:	in     al,0x8a
  418d4d:	and    eax,0x4c0e30b3
  418d52:	fsubr  DWORD PTR ds:0x9ea2b69b
  418d58:	adc    eax,0x5c06272d
  418d5d:	and    DWORD PTR [ecx],0x60
  418d60:	lock aad 0x41
  418d63:	test   BYTE PTR [ebp+0x3e0510a8],ch
  418d69:	adc    bh,BYTE PTR [edi+eiz*4+0x190843a3]
  418d70:	(bad)  
  418d71:	jmp    0x43f7:0xcb9c67fa
  418d78:	(bad)  
  418d79:	fs mov edx,ecx
  418d7c:	out    dx,eax
  418d7d:	xor    al,0x22
  418d7f:	(bad)  
  418d80:	call   0xd213:0x65e32c78
  418d87:	fldenv [edx]
  418d89:	mov    ah,0x96
  418d8b:	dec    ecx
  418d8c:	scas   al,BYTE PTR es:[edi]
  418d8d:	cmp    edi,edx
  418d8f:	sub    eax,esp
  418d91:	mov    esi,0x58eef729
  418d96:	pop    ebp
  418d97:	les    esi,FWORD PTR [edx]
  418d99:	and    edx,esi
  418d9b:	xlat   BYTE PTR ds:[ebx]
  418d9c:	dec    bp
  418d9e:	sahf   
  418d9f:	and    BYTE PTR [edi+0x25],cl
  418da2:	add    esp,ebx
  418da4:	into   
  418da5:	ins    DWORD PTR es:[edi],dx
  418da6:	lods   eax,DWORD PTR ds:[esi]
  418da7:	scas   al,BYTE PTR es:[edi]
  418da8:	xor    BYTE PTR [edi+0x48],dh
  418dab:	(bad)  
  418dac:	pop    eax
  418dad:	pop    esp
  418dae:	mov    edx,0xfe985d21
  418db3:	popa   
  418db4:	cmp    DWORD PTR [esi+edi*2+0x1b],edx
  418db8:	out    dx,al
  418db9:	mov    ch,0x91
  418dbb:	or     dl,BYTE PTR [eax]
  418dbd:	mov    al,ds:0x3d3c51e1
  418dc2:	and    eax,0xc0e2d4be
  418dc7:	call   0xa91c:0x89c44220
  418dce:	nop
  418dcf:	inc    ecx
  418dd0:	or     edi,esi
  418dd2:	mov    eax,ds:0x796bcbf2
  418dd7:	lea    esp,[esi]
  418dd9:	gs in  eax,dx
  418ddb:	ins    DWORD PTR es:[edi],dx
  418ddc:	pushf  
  418ddd:	pop    esi
  418dde:	or     ebp,edx
  418de0:	retf   0xb271
  418de3:	mov    bl,0x88
  418de5:	sbb    al,0xe3
  418de7:	aad    0x96
  418de9:	daa    
  418dea:	in     al,dx
  418deb:	xchg   edx,eax
  418dec:	addr16 jne 0x418dd2
  418def:	test   DWORD PTR [edx-0x44],edi
  418df2:	hlt    
  418df3:	mov    bl,BYTE PTR [ecx+ecx*4-0x20]
  418df7:	jmp    FWORD PTR [ebx]
  418df9:	add    eax,0xb5def207
  418dfe:	mov    dl,0x15
  418e00:	popf   
  418e01:	imul   edi,edi,0x35
  418e04:	inc    ecx
  418e05:	sub    BYTE PTR [esi],al
  418e07:	not    BYTE PTR [ebx]
  418e09:	sub    ax,0xd9eb
  418e0d:	enter  0xcdcc,0x66
  418e11:	pop    ss
  418e12:	jns    0x418dfa
  418e14:	loope  0x418e90
  418e16:	icebp  
  418e17:	or     eax,0xe64788d6
  418e1c:	retf   
  418e1d:	xor    BYTE PTR [edx-0x60c267df],bh
  418e23:	or     BYTE PTR [edx+0x1],bh
  418e26:	cmp    BYTE PTR [edx+esi*8-0x1b],bh
  418e2a:	mov    bh,0x76
  418e2c:	stos   WORD PTR es:[edi],ax
  418e2e:	adc    dl,BYTE PTR [esi+ecx*8+0x43]
  418e32:	push   ebp
  418e33:	data16 mov ds:0xaa1ff758,al
  418e39:	out    0x12,al
  418e3b:	popa   
  418e3c:	push   cs
  418e3d:	adc    eax,0x54bbea21
  418e42:	add    dl,BYTE PTR [ecx-0x1d]
  418e45:	xor    ebp,DWORD PTR [edx+0x10]
  418e48:	neg    DWORD PTR [ebx+0x73]
  418e4b:	ds scas al,BYTE PTR es:[edi]
  418e4d:	imul   BYTE PTR [eax+0x6adf1666]
  418e53:	mov    esi,0x498a3b84
  418e58:	ins    BYTE PTR es:[edi],dx
  418e59:	sar    DWORD PTR [edx-0x59],1
  418e5c:	ror    eax,1
  418e5e:	inc    ebx
  418e5f:	dec    ebp
  418e60:	jge    0x418dfb
  418e62:	cli    
  418e63:	rcl    DWORD PTR [eax-0x18df4466],cl
  418e69:	mov    cl,0xaf
  418e6b:	push   eax
  418e6c:	push   ss
  418e6d:	mov    BYTE PTR [edi+0xe586473],al
  418e73:	in     al,0x65
  418e75:	inc    edi
  418e76:	inc    eax
  418e77:	mov    esp,0x39aa71c9
  418e7c:	mov    ds:0x8e4c2436,eax
  418e81:	mov    ebp,0xa6aac4bd
  418e86:	mov    ecx,0x1e3be721
  418e8b:	mov    ebx,0x990ca095
  418e90:	ficom  WORD PTR [ecx]
  418e92:	mov    WORD PTR [edi+0x5a],gs
  418e95:	les    ecx,FWORD PTR [ebp+0x5f4c0d70]
  418e9b:	sub    DWORD PTR [ecx],esi
  418e9d:	pop    edi
  418e9e:	in     eax,0x38
  418ea0:	mov    ds:0x3b20be36,al
  418ea5:	sbb    ebp,ebp
  418ea7:	(bad)  
  418ea9:	loop   0x418ea4
  418eab:	lock stos DWORD PTR es:[edi],eax
  418ead:	outs   dx,BYTE PTR ds:[esi]
  418eae:	cmp    ebp,DWORD PTR [esi-0x62db90bc]
  418eb4:	dec    edx
  418eb5:	(bad)  
  418eb6:	iret   
  418eb7:	xchg   ebx,eax
  418eb8:	jmp    0x418f2a
  418eba:	xor    eax,0xb5467048
  418ebf:	and    ch,BYTE PTR [esi]
  418ec1:	pusha  
  418ec2:	gs or  eax,0xc4441010
  418ec8:	adc    ah,0x83
  418ecb:	stc    
  418ecc:	popf   
  418ecd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ece:	(bad)  
  418ecf:	mov    eax,0x44a22754
  418ed4:	mov    ds:0x2e2c9963,al
  418ed9:	in     eax,0x22
  418edb:	xchg   edx,eax
  418edc:	gs jo  0x418f55
  418edf:	fnstsw ax
  418ee1:	mov    al,ds:0xa01c98b
  418ee6:	push   ecx
  418ee7:	xchg   edi,eax
  418ee8:	xor    eax,0x24cdc166
  418eed:	(bad)  
  418eee:	aaa    
  418eef:	mov    ?,ebx
  418ef1:	rcr    BYTE PTR [ebp+0x5ccec11d],cl
  418ef7:	lahf   
  418ef8:	xchg   ebp,eax
  418ef9:	pusha  
  418efa:	jmp    DWORD PTR [eax+esi*2-0x39]
  418efe:	pop    es
  418eff:	adc    DWORD PTR ds:[ebx-0x6ed4a3a2],esp
  418f06:	dec    eax
  418f07:	cmp    ch,BYTE PTR [eax-0x34f4cb3e]
  418f0d:	pop    edx
  418f0e:	xchg   ecx,eax
  418f0f:	outs   dx,BYTE PTR ds:[si]
  418f11:	or     BYTE PTR [edi],dh
  418f13:	ret    
  418f14:	sub    eax,0xfa0c5b78
  418f19:	pop    edx
  418f1a:	mov    dh,0x7
  418f1c:	jp     0x418f4f
  418f1e:	adc    bh,dl
  418f20:	mov    edx,0x37dead7f
  418f25:	fadd   QWORD PTR [ecx+edi*2+0x7e]
  418f29:	mov    ?,esi
  418f2b:	ret    0xcca0
  418f2e:	or     DWORD PTR [esi-0x79],eax
  418f31:	sti    
  418f32:	push   0x5d
  418f34:	stc    
  418f35:	out    0x1,eax
  418f37:	add    BYTE PTR [ecx+esi*8+0x285313f9],dh
  418f3e:	mov    dh,0xe2
  418f40:	stos   BYTE PTR es:[edi],al
  418f41:	mov    al,ds:0x524961c5
  418f46:	push   eax
  418f47:	mov    cl,0xe1
  418f49:	ret    
  418f4a:	mov    dh,BYTE PTR [ecx-0x49]
  418f4d:	neg    BYTE PTR [esi-0x365bb8eb]
  418f53:	(bad)  
  418f54:	push   ebp
  418f55:	cli    
  418f56:	jne    0x418fcd
  418f58:	cmc    
  418f59:	out    dx,eax
  418f5a:	jae    0x418fb1
  418f5c:	jmp    0x418f54
  418f5e:	ins    BYTE PTR es:[edi],dx
  418f5f:	cmp    al,0xe5
  418f61:	xor    al,0xd4
  418f63:	dec    ecx
  418f64:	add    BYTE PTR [ebp-0x3efd2a05],ah
  418f6a:	push   ds
  418f6b:	into   
  418f6c:	sahf   
  418f6d:	sub    ch,BYTE PTR ss:[ebx-0x7f]
  418f71:	or     eax,0x8d30b533
  418f76:	mov    ds:0xb12de6dc,al
  418f7b:	leave  
  418f7c:	dec    esi
  418f7d:	(bad)  
  418f7e:	adc    DWORD PTR [eax+0x37],edi
  418f81:	push   es
  418f82:	not    DWORD PTR [esi-0x39d5e29c]
  418f88:	das    
  418f89:	jo     0x418fcd
  418f8b:	in     eax,0x2a
  418f8d:	sbb    esi,edi
  418f8f:	repnz dec ebx
  418f91:	clc    
  418f92:	call   0xd1ab8515
  418f97:	sbb    cl,bl
  418f99:	xchg   edx,eax
  418f9a:	xor    esi,DWORD PTR [ecx]
  418f9c:	retf   0x34f6
  418f9f:	sub    eax,0xb42a64c1
  418fa4:	loopne 0x418f9a
  418fa6:	xchg   edi,eax
  418fa7:	fsub   st(6),st
  418fa9:	mov    ebx,0x90dc4b21
  418fae:	xchg   edx,eax
  418faf:	pop    eax
  418fb0:	cmp    BYTE PTR [edx+edx*1+0x7fbd2ec0],bh
  418fb7:	or     bh,BYTE PTR [ebx-0x63318332]
  418fbd:	cmp    DWORD PTR [edx],ebx
  418fbf:	xchg   edx,eax
  418fc0:	cdq    
  418fc1:	inc    edx
  418fc2:	add    eax,DWORD PTR [ebx-0x2aef5ccc]
  418fc8:	xor    eax,0x256defd3
  418fcd:	jo     0x418f59
  418fcf:	push   ebp
  418fd0:	cwde   
  418fd1:	sub    ah,BYTE PTR [eax+esi*8-0x1aa2ee2c]
  418fd8:	fidivr DWORD PTR [eax]
  418fda:	push   esp
  418fdb:	(bad)  
  418fdd:	mov    dh,0xc1
  418fdf:	stc    
  418fe0:	add    esi,DWORD PTR [edi+0x7bf6f8c5]
  418fe6:	shl    DWORD PTR [ecx+esi*8+0x18e6cf3b],1
  418fed:	xchg   ecx,eax
  418fee:	dec    ebp
  418fef:	and    al,0x36
  418ff1:	mov    eax,0xa2501a12
  418ff6:	push   es
  418ff7:	mov    eax,0x1d58403a
  418ffc:	jmp    0xec94:0x80205274
  419003:	rdpru  
  419006:	dec    ebx
  419007:	call   0xa757f5a8
  41900c:	out    0xdd,eax
  41900e:	sbb    eax,0x99e0a069
  419013:	arpl   sp,cx
  419015:	push   ebx
  419016:	in     eax,dx
  419017:	out    0xf5,eax
  419019:	push   edi
  41901a:	inc    esi
  41901b:	lahf   
  41901c:	mov    DWORD PTR [esi+0x40],ecx
  41901f:	outs   dx,DWORD PTR ds:[esi]
  419020:	rcr    DWORD PTR [edx+0x350510d4],cl
  419026:	inc    ecx
  419027:	xchg   edx,eax
  419028:	retf   0x8d68
  41902b:	jb     0x418fdd
  41902d:	push   ss
  41902e:	test   al,0x14
  419030:	or     dh,BYTE PTR [ebx-0x18]
  419033:	jne    0x41903a
  419035:	pop    es
  419036:	jmp    0x3828:0xe21d392c
  41903d:	cmp    ecx,0xffffff94
  419040:	sbb    al,0x56
  419042:	test   al,0x62
  419044:	(bad)  
  419045:	xchg   edx,eax
  419046:	in     eax,0xec
  419048:	(bad)  
  419049:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41904a:	daa    
  41904b:	adc    ah,0x84
  41904e:	jmp    0xb558:0x76f689f2
  419055:	loopne 0x4190b9
  419057:	inc    edi
  419058:	add    DWORD PTR [edi-0x40],ecx
  41905b:	mov    dl,0x1e
  41905d:	(bad)  
  41905e:	retf   
  41905f:	arpl   WORD PTR [esi+0x38e7d76b],bp
  419065:	imul   ebx,DWORD PTR [ecx],0xcd915194
  41906b:	cmp    BYTE PTR [eax+0x48a00883],0xda
  419072:	cmp    dh,BYTE PTR [ebx-0x7e3f0d65]
  419078:	je     0x4190e7
  41907a:	push   0x5cdca7f9
  41907f:	retf   0x57b2
  419082:	cmc    
  419083:	add    edx,DWORD PTR [ebx+esi*1+0x532b386a]
  41908a:	push   ds
  41908b:	push   edx
  41908c:	adc    al,0xf7
  41908e:	dec    ecx
  41908f:	(bad)  
  419090:	out    0xa9,al
  419092:	cmp    eax,0xa0b194a5
  419097:	or     DWORD PTR [esi+0x5f],esp
  41909a:	sbb    eax,0x3788c126
  41909f:	push   cs
  4190a0:	add    BYTE PTR ds:0x67e621dc,0x2b
  4190a7:	mov    eax,ds:0x8dcfdaf8
  4190ac:	je     0x419116
  4190ae:	xchg   ebx,eax
  4190af:	pop    DWORD PTR [edx+0x3d091d28]
  4190b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190b6:	dec    esi
  4190b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190b8:	test   BYTE PTR [eax+0x66],0x8a
  4190bc:	retf   0x2eb8
  4190bf:	sbb    al,0xc4
  4190c1:	daa    
  4190c2:	call   0xf212b79b
  4190c7:	daa    
  4190c8:	test   BYTE PTR [esi],ah
  4190ca:	aas    
  4190cb:	pusha  
  4190cc:	into   
  4190cd:	jae    0x419136
  4190cf:	xchg   ebp,eax
  4190d0:	gs mov bl,0xb9
  4190d3:	cmc    
  4190d4:	fcmovne st,st(4)
  4190d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190d7:	add    al,0xfe
  4190d9:	dec    edi
  4190da:	add    DWORD PTR [ecx],edi
  4190dc:	cmp    al,0x32
  4190de:	ins    BYTE PTR es:[edi],dx
  4190df:	clc    
  4190e0:	jae    0x41908c
  4190e2:	aad    0xa8
  4190e4:	inc    ecx
  4190e5:	adc    ch,ah
  4190e7:	or     eax,0x1b38cb90
  4190ec:	sbb    al,0x70
  4190ee:	cmp    eax,DWORD PTR [eax+0x7a]
  4190f1:	adc    eax,0x9634b38a
  4190f6:	int3   
  4190f7:	ret    
  4190f8:	(bad)  
  4190f9:	icebp  
  4190fa:	mov    dl,0x6e
  4190fc:	mov    ds:0x5d0907b3,al
  419101:	adc    al,0x3e
  419103:	cmp    BYTE PTR ds:0x713d7ffe,cl
  419109:	adc    dh,ah
  41910b:	push   0x70fe5569
  419110:	das    
  419111:	jmp    0x28a9:0xec342c38
  419118:	add    BYTE PTR [edx+0x10],bl
  41911b:	push   ebx
  41911c:	hlt    
  41911d:	push   ebx
  41911e:	sbb    BYTE PTR [eax+0x72],0xb4
  419122:	inc    eax
  419123:	rol    BYTE PTR [edx-0x4d],0xc8
  419127:	ins    BYTE PTR es:[edi],dx
  419128:	int    0x46
  41912a:	loopne 0x4191a5
  41912c:	sub    dh,dl
  41912e:	cmp    cl,BYTE PTR [esi]
  419130:	(bad)  
  419131:	jl     0x419156
  419133:	ss mov esp,0x289e1fd3
  419139:	xchg   esp,eax
  41913a:	test   DWORD PTR [edx-0x59],esi
  41913d:	add    al,0xca
  41913f:	mov    edx,0x390bc99d
  419144:	imul   DWORD PTR [ebx-0x65172ada]
  41914a:	jae    0x4190d7
  41914c:	mov    dh,0xe
  41914e:	jno    0x41913c
  419150:	ins    BYTE PTR es:[edi],dx
  419151:	dec    esp
  419152:	pop    DWORD PTR ds:0x6022ef4c
  419158:	cmp    BYTE PTR [eax-0x688d72ae],dl
  41915e:	adc    DWORD PTR [esi-0x7e707147],0x2a6672f5
  419168:	mov    ecx,0x154c6125
  41916d:	add    dl,ah
  41916f:	clc    
  419170:	pop    esp
  419171:	xchg   esi,eax
  419172:	fiadd  DWORD PTR [ebx-0x4fb02af8]
  419178:	mov    eax,ds:0x44af2a3d
  41917d:	test   al,0xd7
  41917f:	out    dx,al
  419180:	mov    ah,0xfa
  419182:	push   esp
  419183:	rol    DWORD PTR [edx+0x7e3ae82],0xb4
  41918a:	pop    ss
  41918b:	repz rcl DWORD PTR [esi+0x40ac76a],cl
  419192:	out    dx,al
  419193:	mov    edi,0x4d9a8163
  419198:	push   0x6d
  41919a:	dec    edi
  41919b:	push   ebx
  41919c:	xlat   BYTE PTR ds:[ebx]
  41919d:	pop    ds
  41919e:	pop    esi
  41919f:	pop    esp
  4191a0:	cmp    DWORD PTR [edx+eax*8-0x47],edi
  4191a4:	ins    DWORD PTR es:[edi],dx
  4191a5:	aad    0xcb
  4191a7:	shl    BYTE PTR [ebp+0x3c],0x93
  4191ab:	inc    eax
  4191ac:	xchg   DWORD PTR [ebx],esp
  4191ae:	push   ebx
  4191af:	mov    eax,ds:0x443f6f4a
  4191b4:	or     DWORD PTR [edi-0x3862f54c],ecx
  4191ba:	out    0xe4,eax
  4191bc:	push   esi
  4191bd:	stc    
  4191be:	nop
  4191bf:	push   cs
  4191c0:	mov    DWORD PTR [esi-0x8],0xdf294fbf
  4191c7:	jl     0x4191c8
  4191c9:	outs   dx,BYTE PTR fs:[esi]
  4191cb:	push   edi
  4191cc:	xchg   ebp,eax
  4191cd:	into   
  4191ce:	inc    esi
  4191cf:	jg     0x419248
  4191d1:	push   edi
  4191d2:	xlat   BYTE PTR ds:[ebx]
  4191d3:	mov    ebx,0x80933cdc
  4191d8:	jbe    0x419200
  4191da:	ret    
  4191db:	pop    edi
  4191dc:	jmp    0x58d47563
  4191e1:	mov    ebp,0x348c451f
  4191e6:	mov    al,al
  4191e8:	sbb    cl,BYTE PTR [eax+0x35]
  4191eb:	pop    ecx
  4191ec:	xor    al,0x57
  4191ee:	adc    ebx,DWORD PTR [ebp+0xa8b21f6]
  4191f4:	cwde   
  4191f5:	fdivr  QWORD PTR [edi+ebp*2+0x4279db1d]
  4191fc:	pop    ds
  4191fd:	inc    eax
  4191fe:	sbb    DWORD PTR [ebx+ebx*4-0x4c748c6c],ecx
  419205:	sbb    bl,cl
  419207:	mov    dl,0xb7
  419209:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41920a:	mov    edi,0x6c447232
  41920f:	xchg   esi,eax
  419210:	add    ecx,DWORD PTR [edi+0x38]
  419213:	cmp    bh,BYTE PTR [edi]
  419215:	pop    ecx
  419216:	aas    
  419217:	fiadd  DWORD PTR [ecx-0x4c]
  41921a:	inc    ebp
  41921b:	loop   0x419259
  41921d:	out    0xbc,eax
  41921f:	add    eax,0xba5aed73
  419224:	cdq    
  419225:	sub    eax,0xb206a6a6
  41922a:	mov    WORD PTR [ecx],?
  41922c:	scas   eax,DWORD PTR es:[edi]
  41922d:	bound  esp,QWORD PTR [ecx+0x6]
  419230:	mov    eax,0xc76f7de2
  419235:	sub    eax,0xb6bf05cd
  41923a:	cmp    ecx,DWORD PTR [eax]
  41923c:	iret   
  41923d:	imul   esi,DWORD PTR [eax*2+0x1656d57a],0xf82d24d2
  419248:	add    ch,BYTE PTR [eax-0x705e4c4d]
  41924e:	lahf   
  41924f:	addr16 dec eax
  419251:	dec    ecx
  419252:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419253:	clc    
  419254:	ja     0x41924f
  419256:	(bad)  
  419257:	fnstcw WORD PTR [ebx-0x791ae9e3]
  41925d:	mov    esp,0x83ecfbb4
  419262:	or     al,0xfe
  419264:	adc    al,ch
  419266:	dec    esp
  419267:	push   0xffffffef
  419269:	push   esi
  41926a:	ins    BYTE PTR es:[edi],dx
  41926b:	xchg   ebx,eax
  41926c:	arpl   WORD PTR [ecx+0x58],di
  41926f:	(bad)  
  419271:	sub    eax,0xa08ecd38
  419276:	fmul   QWORD PTR [eax-0x23]
  419279:	pop    esi
  41927a:	lock loopne 0x4192d9
  41927d:	push   ds
  41927e:	in     al,dx
  41927f:	out    dx,al
  419280:	pop    ebx
  419281:	aad    0xeb
  419283:	mov    ds:0xdf0ec7de,al
  419288:	and    esi,DWORD PTR [ecx-0x58]
  41928b:	std    
  41928c:	fist   WORD PTR [eax]
  41928e:	push   edi
  41928f:	repz std 
  419291:	cli    
  419292:	fstp   TBYTE PTR [eax]
  419294:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419295:	inc    edx
  419296:	xchg   edi,eax
  419297:	gs mov gs,ecx
  41929a:	and    cl,BYTE PTR [edx-0x6205e893]
  4192a0:	test   eax,0x62eb4fe9
  4192a5:	fs jp  0x419263
  4192a8:	push   es
  4192a9:	out    0xa8,eax
  4192ab:	jge    0x419260
  4192ad:	mov    ebp,0xf7cdc1e5
  4192b2:	push   edx
  4192b3:	sub    BYTE PTR [ebx+0x137e2080],bl
  4192b9:	mov    edi,0x8feb4023
  4192be:	mov    edx,0x9b8a592a
  4192c3:	ret    0x2138
  4192c6:	addr16 dec ebx
  4192c8:	pushw  es
  4192ca:	push   ss
  4192cb:	cli    
  4192cc:	lds    eax,FWORD PTR [edx-0x7c]
  4192cf:	push   es
  4192d0:	cmp    bl,BYTE PTR [ebp+0x9]
  4192d3:	dec    esp
  4192d4:	arpl   WORD PTR [esi+0x19],dx
  4192d7:	adc    al,0x81
  4192d9:	in     al,dx
  4192da:	out    0x16,al
  4192dc:	xchg   edi,eax
  4192dd:	mov    ds:0xa7021967,al
  4192e2:	xchg   ebx,eax
  4192e3:	mov    ebp,0xfb3bbc2
  4192e8:	mov    DWORD PTR [ebp-0x78c39c72],ecx
  4192ee:	and    DWORD PTR [eax],esp
  4192f0:	hlt    
  4192f1:	push   0xffffffff
  4192f3:	mov    eax,ds:0x9b133500
  4192f8:	sbb    ecx,DWORD PTR [ecx+esi*2+0x2b444222]
  4192ff:	into   
  419300:	jg     0x41928e
  419302:	imul   ebx,DWORD PTR [eax],0xffffffb4
  419305:	xor    al,0x32
  419307:	xor    al,0xee
  419309:	jmp    0x306bf2d8
  41930e:	push   ebp
  41930f:	xor    eax,DWORD PTR [eax]
  419311:	div    DWORD PTR [esi+0x32]
  419314:	ss xchg ecx,eax
  419316:	pop    es
  419317:	add    cl,BYTE PTR [ecx+0x63825f80]
  41931d:	call   0x9a3edabd
  419322:	xor    eax,0x5ffe77a3
  419327:	mov    ds:0x44ea2779,eax
  41932c:	sahf   
  41932d:	adc    bh,BYTE PTR [edi]
  41932f:	lahf   
  419330:	and    DWORD PTR [eax],edi
  419332:	mov    eax,ds:0xa24c862e
  419337:	jge    0x4193a3
  419339:	pop    edi
  41933a:	xchg   edx,eax
  41933b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41933c:	loop   0x41935b
  41933e:	call   FWORD PTR [edi+0x4107fbfe]
  419344:	pushf  
  419345:	mov    esp,0xf7b9cd59
  41934a:	daa    
  41934b:	dec    esi
  41934c:	or     BYTE PTR [ebx-0x4d5df0d3],dh
  419352:	sar    DWORD PTR [edx+0x308e8881],1
  419358:	mov    esp,0x743257e2
  41935d:	or     BYTE PTR ds:0x26a43e8d,al
  419363:	test   eax,0x1cec5e53
  419368:	js     0x4193b2
  41936a:	or     eax,DWORD PTR [ebx-0x25]
  41936d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41936e:	jmp    0x42e2:0x48c84af8
  419375:	push   esp
  419376:	retf   
  419377:	adc    DWORD PTR [ecx+0x6d],ecx
  41937a:	push   ecx
  41937b:	cld    
  41937c:	lea    eax,[ecx]
  41937e:	push   ds
  41937f:	test   BYTE PTR [edx+0x75a76d2c],0xcf
  419386:	sub    DWORD PTR [eax],ecx
  419388:	ja     0x41939a
  41938a:	(bad)  
  41938b:	out    0x8b,al
  41938d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41938e:	jae    0x4193dd
  419390:	jecxz  0x4193e2
  419392:	loopne 0x419386
  419394:	stos   BYTE PTR es:[edi],al
  419395:	push   ecx
  419396:	adc    DWORD PTR [eax+0x2],0xffffff93
  41939a:	mov    al,0xe8
  41939c:	pop    es
  41939d:	cmp    eax,0x516d1631
  4193a2:	(bad)  
  4193a3:	jae    0x419401
  4193a5:	sti    
  4193a6:	sbb    eax,0xa6dd8040
  4193ab:	lahf   
  4193ac:	mov    eax,ds:0x34a837a1
  4193b1:	neg    ecx
  4193b3:	lea    esi,[esi-0x78c76c6a]
  4193b9:	add    BYTE PTR [edi+edx*8],dh
  4193bc:	data16 aam 0x5b
  4193bf:	imul   ecx,DWORD PTR [ebx-0x1e433a8c],0x5490535d
  4193c9:	inc    ebp
  4193ca:	shr    BYTE PTR ds:0x991994f0,0x1a
  4193d1:	aaa    
  4193d2:	mov    edi,ebx
  4193d4:	les    esi,FWORD PTR [eax+edi*4+0x2828a13c]
  4193db:	outs   dx,BYTE PTR ds:[esi]
  4193dc:	inc    edx
  4193dd:	aas    
  4193de:	mov    cl,0x8d
  4193e0:	add    DWORD PTR [edi],ebx
  4193e2:	mov    ch,0x2
  4193e4:	xchg   edx,eax
  4193e5:	retf   0x3ddb
  4193e8:	bound  esp,QWORD PTR [ecx-0x7451e8a8]
  4193ee:	js     0x419393
  4193f0:	or     BYTE PTR [edx+0x7c479649],dl
  4193f6:	rep lods al,BYTE PTR ds:[esi]
  4193f8:	mov    bl,0xda
  4193fa:	aam    0x58
  4193fc:	int    0x9d
  4193fe:	add    al,0xea
  419400:	out    dx,al
  419401:	es xor eax,0xbe619535
  419407:	(bad)  
  419408:	into   
  419409:	iretw  
  41940b:	xor    esp,DWORD PTR [ecx+0x2e]
  41940e:	mov    bl,0xf1
  419410:	loope  0x419411
  419412:	adc    DWORD PTR [eax-0x51b64050],eax
  419418:	or     BYTE PTR gs:[ebp+0xe],ch
  41941c:	fiadd  WORD PTR [ebx+0x338be90e]
  419422:	adc    eax,DWORD PTR [eax+0x1ade9a41]
  419428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419429:	pop    ds
  41942a:	pushf  
  41942b:	xor    al,0x3c
  41942d:	sbb    bl,al
  41942f:	sbb    eax,edi
  419431:	mov    ebx,0x21d779c4
  419436:	mov    edx,0xe2c4b3f5
  41943b:	frstor [edi+0x1a2bb48f]
  419441:	jae    0x41944e
  419443:	lahf   
  419444:	cld    
  419445:	pop    eax
  419446:	lea    ebp,[edi]
  419448:	jns    0x4194c5
  41944a:	inc    ebx
  41944b:	jmp    0xaaa91b1e
  419450:	test   BYTE PTR [ecx-0x26],ch
  419453:	into   
  419454:	push   ebx
  419455:	jb     0x419490
  419457:	push   esi
  419459:	stos   BYTE PTR es:[edi],al
  41945a:	and    al,0x8a
  41945c:	sub    eax,0x44192512
  419461:	shl    DWORD PTR [edi+0x818b5ac],0x2f
  419468:	sti    
  419469:	(bad)  
  41946a:	out    dx,al
  41946b:	fldl2e 
  41946d:	jmp    FWORD PTR [edi-0x11d6dcf9]
  419473:	xor    BYTE PTR [esi-0x1e736e3],ch
  419479:	xor    DWORD PTR [eax+0x1b],edx
  41947c:	es pushf 
  41947e:	add    esp,DWORD PTR [edi]
  419480:	std    
  419481:	dec    esp
  419482:	mov    ebp,0x76da5546
  419487:	sbb    al,0xdf
  419489:	jmp    0xcde16bf7
  41948e:	stc    
  41948f:	xchg   ebp,eax
  419490:	dec    eax
  419491:	mov    es,WORD PTR [edi-0x36]
  419494:	push   esi
  419495:	imul   esp,ebx,0x7287a60
  41949b:	dec    esi
  41949c:	rcr    ebp,0xfa
  41949f:	xchg   edx,eax
  4194a0:	aad    0x1
  4194a2:	ret    0x7e09
  4194a5:	imul   BYTE PTR [edi+0x214d36a2]
  4194ab:	adc    ebx,DWORD PTR [ecx+eax*2+0xe772a4e]
  4194b2:	mov    bh,0x30
  4194b4:	dec    edi
  4194b5:	push   edx
  4194b6:	xchg   BYTE PTR [ecx+0x68],ch
  4194b9:	mov    cl,0x55
  4194bb:	repnz push cs
  4194bd:	and    bh,BYTE PTR [ebp+0x64459d1d]
  4194c3:	lods   al,BYTE PTR ds:[esi]
  4194c4:	lds    ebp,FWORD PTR [edx+0xa]
  4194c7:	xchg   ebx,eax
  4194c8:	dec    esi
  4194c9:	sahf   
  4194ca:	cmp    BYTE PTR [edi+ebp*4],al
  4194cd:	pop    esp
  4194ce:	sti    
  4194cf:	cmp    DWORD PTR [esi-0x13],ebx
  4194d2:	pop    edi
  4194d3:	dec    ebp
  4194d4:	push   eax
  4194d5:	ficom  WORD PTR [ebx-0x5e]
  4194d8:	stos   BYTE PTR es:[edi],al
  4194d9:	enter  0x855c,0x3b
  4194dd:	fwait
  4194de:	dec    edi
  4194df:	idiv   edx
  4194e1:	les    ebx,FWORD PTR [eax-0x3c254849]
  4194e7:	das    
  4194e8:	loope  0x4194c5
  4194ea:	leave  
  4194eb:	cmp    ebp,DWORD PTR [ebx-0x3]
  4194ee:	jo     0x4194ed
  4194f0:	ss push edx
  4194f2:	add    eax,0xd8cabccf
  4194f7:	dec    edi
  4194f8:	dec    edi
  4194f9:	enter  0x953a,0x76
  4194fd:	or     al,0xa2
  4194ff:	sub    DWORD PTR [ecx+0x71],edx
  419502:	mov    esi,0xe934573e
  419507:	les    ebx,FWORD PTR [eax-0x1a30b071]
  41950d:	fnstsw WORD PTR [eax+0x1ed1cde]
  419513:	outs   dx,DWORD PTR ds:[esi]
  419514:	dec    ecx
  419515:	lock mov al,ds:0x71b9384d
  41951b:	cwde   
  41951c:	shl    DWORD PTR [eax-0x76],1
  41951f:	fwait
  419520:	sub    DWORD PTR [edi],ecx
  419522:	gs popa 
  419524:	sub    ebx,DWORD PTR [edx-0x4a]
  419527:	retf   
  419528:	ja     0x419531
  41952a:	pop    esi
  41952b:	adc    DWORD PTR [edi-0x2bf14d6a],edx
  419531:	lea    ebp,[ebp+0x2c]
  419534:	scas   al,BYTE PTR es:[edi]
  419535:	in     eax,0x42
  419537:	sar    BYTE PTR [ecx],1
  419539:	test   eax,0xb7b491b3
  41953e:	pop    es
  41953f:	inc    esp
  419540:	xor    DWORD PTR [ebx-0x53],esp
  419543:	mov    dh,0xc1
  419545:	xor    eax,DWORD PTR [ebx+0x58b4a49]
  41954b:	cmp    ah,0x4d
  41954e:	cmp    eax,0x8c6c92b1
  419553:	xchg   BYTE PTR [edi+0x38],ah
  419556:	pop    es
  419557:	mov    bh,0xce
  419559:	call   0x8a4e9bfc
  41955e:	push   edx
  41955f:	hlt    
  419560:	dec    edx
  419561:	jnp    0x41955a
  419563:	ret    
  419564:	xchg   esi,eax
  419565:	mov    ch,0x39
  419567:	scas   eax,DWORD PTR es:[edi]
  419568:	out    0x3f,eax
  41956a:	sub    cl,dl
  41956c:	ds mov ebp,0x592c4d03
  419572:	out    dx,al
  419573:	mov    bh,0xac
  419575:	xor    ch,0x67
  419578:	scas   al,BYTE PTR es:[edi]
  419579:	loope  0x419598
  41957b:	in     eax,dx
  41957c:	xor    al,BYTE PTR [ebp+edi*1+0x21]
  419580:	mov    ds:0xc3c1b527,al
  419585:	pop    es
  419586:	mov    cl,BYTE PTR [edi-0xaa6065]
  41958c:	fld    DWORD PTR [ecx]
  41958e:	retf   0x5059
  419591:	sbb    BYTE PTR [edi-0x22],ch
  419594:	push   ebp
  419595:	and    eax,ebp
  419597:	jmp    FWORD PTR [ecx]
  419599:	dec    edx
  41959a:	jg     0x419597
  41959c:	inc    edi
  41959d:	dec    ecx
  41959e:	imul   ebx,edx,0x674751e
  4195a4:	sub    eax,0x27109ded
  4195a9:	push   ebp
  4195aa:	clc    
  4195ab:	(bad)  
  4195ac:	sar    DWORD PTR [ebx-0x7a27b734],1
  4195b2:	test   al,0xe8
  4195b4:	or     edi,DWORD PTR [edx-0x17a0cb47]
  4195ba:	fwait
  4195bb:	aad    0x32
  4195bd:	lahf   
  4195be:	std    
  4195bf:	fs mov al,0xa
  4195c2:	lods   eax,DWORD PTR ds:[esi]
  4195c3:	ins    BYTE PTR es:[edi],dx
  4195c4:	xor    DWORD PTR [edx-0x34ef0191],ebx
  4195ca:	sbb    bh,cl
  4195cc:	iret   
  4195cd:	push   edx
  4195ce:	popf   
  4195cf:	mov    ecx,0x5b93fdbc
  4195d4:	fistp  QWORD PTR [ebx]
  4195d6:	mov    eax,esp
  4195d8:	dec    ebx
  4195d9:	ret    
  4195da:	sub    BYTE PTR [esi-0x7ad89c7d],0x58
  4195e1:	das    
  4195e2:	les    edi,FWORD PTR [ebx-0x68492d2]
  4195e8:	xchg   ebp,eax
  4195e9:	iret   
  4195ea:	rcl    BYTE PTR [ebx-0x80],0x2d
  4195ee:	dec    edx
  4195ef:	imul   esi,esp,0xc2498d98
  4195f5:	jno    0x4195ea
  4195f7:	mov    edx,0xb63679ba
  4195fc:	in     al,0xfb
  4195fe:	xchg   edi,eax
  4195ff:	ret    0xb639
  419602:	fld    DWORD PTR [ebx]
  419604:	dec    ecx
  419605:	loop   0x41967a
  419607:	mov    BYTE PTR [ebx+0x6b],al
  41960a:	xchg   edi,eax
  41960b:	push   eax
  41960c:	jmp    0x419606
  41960e:	jl     0x41968e
  419610:	pop    esi
  419611:	mov    al,ds:0xb19a31e6
  419616:	pop    ebp
  419617:	scas   al,BYTE PTR es:[edi]
  419618:	adc    ebx,DWORD PTR [ecx+0x2d3a412c]
  41961e:	(bad)  
  41961f:	xchg   ebp,eax
  419620:	mov    BYTE PTR gs:[edi+0x312a4a32],bh
  419627:	pop    ebp
  419628:	adc    eax,0xa55c489a
  41962d:	scas   eax,DWORD PTR es:[edi]
  41962e:	xlat   BYTE PTR ds:[ebx]
  41962f:	jecxz  0x419622
  419631:	inc    ebx
  419632:	mov    ah,0x9f
  419634:	pop    ecx
  419635:	push   eax
  419636:	xchg   ebp,ebx
  419638:	shl    DWORD PTR [edi-0x729cb284],cl
  41963e:	mov    dl,0xa7
  419640:	jge    0x4195db
  419642:	repz test BYTE PTR ds:0xd075d56c,bh
  419649:	iret   
  41964a:	add    ah,BYTE PTR [eax+0x3]
  41964d:	xor    al,0xf2
  41964f:	test   esi,edi
  419651:	jbe    0x4195d9
  419653:	xor    ah,BYTE PTR [ecx+0x2798b32d]
  419659:	mov    esi,0xc2c976ab
  41965e:	fs je  0x4196d0
  419661:	mov    ch,0xf7
  419663:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419664:	lea    ebp,[ebp+0x2a809538]
  41966a:	push   esi
  41966b:	mov    al,0x3a
  41966d:	push   cs
  41966e:	out    0x5d,al
  419670:	xor    eax,0xa0840d19
  419675:	jnp    0x41961a
  419677:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419678:	fwait
  419679:	in     al,dx
  41967a:	inc    edi
  41967b:	mov    edx,0x9d0a714
  419680:	cmp    ch,cl
  419682:	and    BYTE PTR [edx-0x231f3439],dh
  419688:	add    eax,0x4d8a6741
  41968d:	test   eax,0x2f13fa5c
  419692:	popa   
  419693:	sub    eax,0xf02de3b
  419698:	ja     0x4196ff
  41969a:	ror    esp,0xfe
  41969d:	lahf   
  41969e:	out    0x7b,eax
  4196a0:	xchg   BYTE PTR ds:0x9f200a9c,bl
  4196a6:	and    al,BYTE PTR [esi+edx*2-0x24a73bf3]
  4196ad:	cmp    bl,dl
  4196af:	cmp    al,0x1a
  4196b1:	mov    bl,bh
  4196b3:	cmp    DWORD PTR [ebx+0x2686e852],ebp
  4196b9:	imul   ecx,ebp,0xd2ad819
  4196bf:	jp     0x41969c
  4196c1:	leave  
  4196c2:	add    BYTE PTR [esi-0x30],bh
  4196c5:	jne    0x41970b
  4196c7:	push   ds
  4196c8:	enter  0x39b,0xfc
  4196cc:	ss add bl,ah
  4196cf:	ins    DWORD PTR es:[edi],dx
  4196d0:	aad    0x4a
  4196d2:	mov    esi,0xbcc9d5d8
  4196d7:	xor    al,0xac
  4196d9:	mov    ebx,0xdacec1dc
  4196de:	addr16 xchg ebx,eax
  4196e0:	ins    BYTE PTR es:[edi],dx
  4196e1:	les    esp,FWORD PTR [edi-0x27]
  4196e4:	push   edi
  4196e5:	mov    edx,0x766b1f25
  4196ea:	loop   0x419712
  4196ec:	or     dl,BYTE PTR [edi]
  4196ee:	dec    edx
  4196ef:	mov    eax,0x7a72a150
  4196f4:	mov    eax,DWORD PTR [esi]
  4196f6:	out    dx,eax
  4196f7:	dec    esp
  4196f8:	in     al,dx
  4196f9:	ret    0x670c
  4196fc:	fwait
  4196fd:	enter  0x14aa,0xd5
  419701:	inc    esp
  419702:	sub    dl,BYTE PTR [esi-0x432da87d]
  419708:	in     al,dx
  419709:	adc    eax,DWORD PTR [edi-0x64b31d25]
  41970f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419710:	lock lea ebx,[edx-0x2b19b4]
  419717:	push   edi
  419718:	mul    BYTE PTR [ebx+0x64b9a76a]
  41971e:	cmp    al,al
  419720:	cmp    al,0xc7
  419722:	inc    edx
  419723:	xor    al,0x2e
  419725:	test   DWORD PTR [ebx],edi
  419727:	aas    
  419728:	hlt    
  419729:	sbb    ebp,edx
  41972b:	mov    bl,0x65
  41972d:	outs   dx,BYTE PTR ds:[esi]
  41972e:	and    bh,BYTE PTR [esi]
  419730:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419731:	xchg   esi,eax
  419732:	push   0x5cf13f9
  419737:	mov    bh,0xd9
  419739:	add    BYTE PTR [eax],dh
  41973b:	xor    bl,bl
  41973d:	in     al,dx
  41973e:	xor    DWORD PTR [esi],esp
  419740:	xchg   ecx,eax
  419741:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419742:	fidivr DWORD PTR [ecx+0x26398767]
  419748:	in     eax,dx
  419749:	and    DWORD PTR [edx],0x6b
  41974c:	inc    eax
  41974d:	xor    eax,0x8522cbf0
  419752:	stos   BYTE PTR es:[edi],al
  419753:	(bad)  
  419754:	aas    
  419755:	sub    bl,BYTE PTR [ecx-0x67]
  419758:	ret    0x6648
  41975b:	ret    
  41975c:	(bad)
  419760:	jmp    0x1901:0xa55f33c2
  419767:	in     al,dx
  419768:	cmc    
  419769:	in     al,0x60
  41976b:	pop    cx
  41976d:	repnz (bad) 
  41976f:	mov    edi,0xe2c4464f
  419774:	ficom  WORD PTR [ebp+0x5c2c3748]
  41977a:	pop    edi
  41977b:	not    DWORD PTR [ecx]
  41977d:	ds ret 0xcf59
  419781:	daa    
  419782:	loope  0x419769
  419784:	jnp    0x4197ef
  419786:	sbb    BYTE PTR [ecx+ebx*1-0x383161e1],ch
  41978d:	mov    eax,0x3d5d011c
  419792:	cmp    ah,BYTE PTR [esp+eax*4-0x7e83f040]
  419799:	stos   DWORD PTR es:[edi],eax
  41979a:	stos   BYTE PTR es:[edi],al
  41979b:	mov    al,ds:0xa9c0c3d2
  4197a0:	addr16 jp 0x4197a8
  4197a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197a4:	cmp    BYTE PTR [edx+0x18],dh
  4197a7:	and    eax,DWORD PTR ss:[edx]
  4197aa:	outs   dx,DWORD PTR ds:[esi]
  4197ab:	dec    esp
  4197ac:	cdq    
  4197ad:	shl    BYTE PTR [edi+0x5c],cl
  4197b0:	test   al,0x99
  4197b2:	into   
  4197b3:	dec    ebp
  4197b4:	aaa    
  4197b5:	push   ebp
  4197b6:	dec    ecx
  4197b7:	(bad)  ds:0xa0fda793
  4197bd:	mov    eax,ds:0x6313fd53
  4197c2:	push   edi
  4197c3:	mov    dh,0x7d
  4197c5:	arpl   WORD PTR [ebx],bp
  4197c7:	inc    edi
  4197c8:	stc    
  4197c9:	ret    0xc4fa
  4197cc:	retf   0xb1e8
  4197cf:	cmp    DWORD PTR [edx+0x7bb8f1a6],0x45e565df
  4197d9:	lahf   
  4197da:	cdq    
  4197db:	jnp    0x4197f9
  4197dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197de:	push   esi
  4197df:	lds    esi,FWORD PTR [ecx+0x1c]
  4197e2:	or     DWORD PTR [eax],0xffffffd2
  4197e5:	or     dh,dl
  4197e7:	mov    dl,0xd6
  4197e9:	xor    bl,BYTE PTR [esi+0x255e0889]
  4197ef:	frstor [edi-0x153878fd]
  4197f5:	sbb    al,0xda
  4197f7:	add    eax,0xe04b8a36
  4197fc:	icebp  
  4197fd:	cvtdq2ps xmm4,XMMWORD PTR [esi]
  419800:	push   es
  419801:	mov    esi,0x4b55bf21
  419806:	pop    es
  419807:	xacquire xchg BYTE PTR [esi-0x2b],cl
  41980b:	push   eax
  41980c:	adc    DWORD PTR ds:0x382ae3af,edi
  419812:	scas   al,BYTE PTR es:[edi]
  419813:	cmp    edx,DWORD PTR [edi-0x50663976]
  419819:	fwait
  41981a:	enter  0xc3c8,0x6d
  41981e:	sbb    esp,ebx
  419820:	jp     0x4197cb
  419822:	sbb    al,0xe9
  419824:	sahf   
  419825:	imul   ecx,DWORD PTR [edi-0x4d],0x48dcf191
  41982c:	jp     0x419806
  41982e:	jmp    0x192b4642
  419833:	push   0x741bc0a4
  419838:	hlt    
  419839:	loopne 0x4197ec
  41983b:	popf   
  41983c:	xchg   esi,eax
  41983d:	jmp    0x176f:0x203cd2ee
  419844:	in     eax,0x49
  419846:	scas   eax,DWORD PTR es:[edi]
  419847:	imul   esp,DWORD PTR [ecx-0x59297275],0x5a
  41984e:	pop    esi
  41984f:	(bad)  
  419850:	xor    al,0x38
  419852:	mov    eax,0x23172647
  419857:	imul   edx,ecx,0xac58dc6c
  41985d:	mov    ch,0x2d
  41985f:	iret   
  419860:	int    0x32
  419862:	xor    DWORD PTR [ebp+0x31],0xffffff89
  419866:	es (bad) 
  419868:	mov    eax,0xa8670121
  41986d:	out    dx,al
  41986e:	cdq    
  41986f:	sbb    BYTE PTR [edi-0x2aea8d4],ah
  419875:	call   0x95cf:0x1417cc4c
  41987c:	das    
  41987d:	daa    
  41987e:	loope  0x41987c
  419880:	scas   al,BYTE PTR es:[edi]
  419881:	int3   
  419882:	lods   al,BYTE PTR ds:[esi]
  419883:	rcl    BYTE PTR [ebp+0x7b],cl
  419886:	and    al,0x25
  419888:	push   ss
  419889:	jmp    0x419825
  41988b:	pop    edi
  41988c:	sub    eax,0x10c58d4e
  419891:	aas    
  419892:	cwde   
  419893:	push   es
  419894:	pushf  
  419895:	add    BYTE PTR [edx*1+0x3ac49cad],bl
  41989c:	xchg   BYTE PTR [edi+0x31e96e7],ch
  4198a2:	pop    edi
  4198a3:	repnz xchg edi,eax
  4198a5:	fistp  QWORD PTR [ebp-0x5a]
  4198a8:	sbb    BYTE PTR [ecx+0x5d],0x6b
  4198ac:	mov    dl,0x8
  4198ae:	outs   dx,BYTE PTR ds:[esi]
  4198af:	mov    ch,0x41
  4198b1:	daa    
  4198b2:	add    eax,0x11d4cfae
  4198b7:	ds (bad) 
  4198b9:	adc    BYTE PTR [esi-0x28],cl
  4198bc:	jbe    0x4198a1
  4198be:	dec    ebp
  4198bf:	mov    eax,ds:0xde4654ac
  4198c4:	xor    eax,edi
  4198c6:	ret    
  4198c7:	adc    eax,0xefae5bb7
  4198cc:	nop
  4198cd:	(bad)  
  4198ce:	icebp  
  4198cf:	pmullw mm2,QWORD PTR [ebx-0x27]
  4198d3:	rcr    esi,1
  4198d5:	mov    ah,0x7d
  4198d7:	sbb    bl,BYTE PTR [ebp+0x43182832]
  4198dd:	imul   DWORD PTR [edi+ebx*8-0x230235a9]
  4198e4:	jg     0x4198ee
  4198e6:	sahf   
  4198e7:	mov    ecx,0xd977a166
  4198ec:	lahf   
  4198ed:	pop    ecx
  4198ee:	xor    al,0xa0
  4198f0:	stos   BYTE PTR es:[edi],al
  4198f1:	mov    WORD PTR [ecx-0x770ffae3],cs
  4198f7:	xchg   esp,eax
  4198f8:	test   ah,ah
  4198fa:	fcom   QWORD PTR [edx-0x3dc2f219]
  419900:	pop    ebx
  419901:	push   ds
  419902:	jo     0xec7919dd
  419908:	xchg   BYTE PTR [edi+0x34a691f3],ch
  41990e:	jmp    0xb74d6844
  419913:	fldenv [eax+0x19]
  419916:	mov    ah,0xf6
  419918:	pop    ebx
  419919:	test   bl,al
  41991b:	das    
  41991c:	xor    eax,DWORD PTR fs:[esi+0x32]
  419920:	cwde   
  419921:	iret   
  419922:	rcl    ah,1
  419924:	pop    ecx
  419925:	outs   dx,BYTE PTR ds:[si]
  419927:	cli    
  419928:	shl    BYTE PTR [esi+0x1f542408],cl
  41992e:	lahf   
  41992f:	mov    eax,0xc34d1421
  419934:	cmp    dl,BYTE PTR [edx+0x2b]
  419937:	jb     0x4198ba
  419939:	and    esi,ecx
  41993b:	loopne 0x41990a
  41993d:	shl    BYTE PTR [eax*4-0x419afae9],0xb8
  419945:	lahf   
  419946:	mov    al,0xa9
  419948:	les    ebp,FWORD PTR [ecx+edi*2-0x714c63ff]
  41994f:	and    dh,BYTE PTR [ebp+0x2efd535e]
  419955:	add    eax,0x2638c462
  41995a:	mov    esi,0xb2795cbd
  41995f:	cmp    BYTE PTR [eax-0x1f8500a7],al
  419965:	(bad)  
  419966:	imul   edi,DWORD PTR [ebx-0xde246e6],0x5f
  41996d:	jno    0x419957
  41996f:	adc    ecx,ebp
  419971:	call   0x3200:0x54fe2124
  419978:	scas   al,BYTE PTR es:[edi]
  419979:	dec    esi
  41997a:	sub    al,BYTE PTR [ecx+0x41fa3b66]
  419980:	test   DWORD PTR [ecx+edx*2],esp
  419983:	xchg   ecx,eax
  419984:	jecxz  0x4199ca
  419986:	sub    BYTE PTR [esi+0x566049e5],bh
  41998c:	push   es
  41998d:	jle    0x419929
  41998f:	loop   0x419a02
  419991:	call   FWORD PTR [bx+si]
  419994:	pushf  
  419995:	push   edx
  419996:	lahf   
  419997:	push   es
  419998:	cli    
  419999:	jp     0x4199a5
  41999b:	adc    ebp,eax
  41999d:	js     0x419998
  41999f:	ds or  eax,0xdd15d484
  4199a5:	psrld  mm5,QWORD PTR [ebx-0xe]
  4199a9:	sbb    eax,0x111db80f
  4199ae:	lods   eax,DWORD PTR ds:[esi]
  4199af:	jnp    0x419954
  4199b1:	xlat   BYTE PTR ds:[ebx]
  4199b2:	jnp    0x4199d9
  4199b4:	sub    al,0x64
  4199b6:	lahf   
  4199b7:	adc    dl,BYTE PTR [ecx-0x6c]
  4199ba:	fisttp QWORD PTR [edx]
  4199bc:	sub    BYTE PTR ds:0x7ce5e194,cl
  4199c2:	out    dx,eax
  4199c3:	les    ebp,FWORD PTR [eax+0x13]
  4199c6:	sbb    DWORD PTR [edi],0xfffffffa
  4199c9:	fidivr WORD PTR [edx]
  4199cb:	sbb    DWORD PTR [esi+0x29],ecx
  4199ce:	mov    ds:0xf9c76de4,eax
  4199d3:	in     eax,0x1b
  4199d5:	adc    DWORD PTR [ebp-0x3b5808d2],esp
  4199db:	mov    edx,DWORD PTR [ebp+0x1b08b8c2]
  4199e1:	xor    BYTE PTR [edi],bl
  4199e3:	imul   esp,DWORD PTR [eax-0x673e986c],0x4c9de5f1
  4199ed:	cmp    BYTE PTR [ecx-0x13a4f148],0xc1
  4199f4:	xor    BYTE PTR [ebx+0x42],0x95
  4199f8:	mov    cl,0xd2
  4199fa:	ins    BYTE PTR es:[edi],dx
  4199fb:	scas   al,BYTE PTR es:[edi]
  4199fc:	enter  0x3586,0xe5
  419a00:	scas   eax,DWORD PTR es:[edi]
  419a01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a02:	stc    
  419a03:	mov    ebp,0xa0890cfa
  419a08:	in     eax,dx
  419a09:	into   
  419a0a:	mov    edi,0x72161b13
  419a0f:	js     0x419a85
  419a11:	frstor ds:0x809e0fc
  419a17:	jb     0x419a01
  419a19:	sahf   
  419a1a:	xor    dl,BYTE PTR [esp+ecx*4]
  419a1d:	push   0xffffffa3
  419a1f:	jae    0x4199f3
  419a21:	push   cs
  419a22:	rcl    esi,cl
  419a24:	nop
  419a25:	neg    edx
  419a27:	dec    edi
  419a28:	pop    ss
  419a29:	pusha  
  419a2a:	mov    dh,0xb0
  419a2c:	push   ds
  419a2d:	mov    ebx,0x951415ae
  419a32:	stos   BYTE PTR es:[edi],al
  419a33:	jb     0x419a19
  419a35:	push   esi
  419a36:	mov    ds:0x65e87d6,al
  419a3b:	add    al,0x24
  419a3d:	lock cmp bl,BYTE PTR [ebp+0x5a01e556]
  419a44:	fidiv  WORD PTR [ebp-0x76]
  419a47:	sub    edi,ecx
  419a49:	cld    
  419a4a:	lea    ebp,[ecx]
  419a4c:	sbb    BYTE PTR [ecx-0x2ed8c2d3],dl
  419a52:	idiv   DWORD PTR [edi]
  419a54:	push   0xffffffe1
  419a56:	jge    0x4199f5
  419a58:	in     eax,0xad
  419a5a:	add    eax,0x4b101da7
  419a5f:	scas   eax,DWORD PTR es:[edi]
  419a60:	add    ebp,ebp
  419a62:	adc    ecx,eax
  419a64:	or     bh,ch
  419a66:	mov    ah,0x6
  419a68:	and    BYTE PTR [ebx],bh
  419a6a:	adc    DWORD PTR [edx],edi
  419a6c:	mov    BYTE PTR [edi],bl
  419a6e:	and    edx,DWORD PTR [eax+0x5d79972c]
  419a74:	(bad)  [eax+0x39b79434]
  419a7a:	pop    esp
  419a7b:	icebp  
  419a7c:	xchg   esp,eax
  419a7d:	lock call 0x3d11:0xe76f3bc2
  419a85:	push   edx
  419a86:	loope  0x419a53
  419a88:	ret    0x5dd5
  419a8b:	push   es
  419a8c:	cmp    dh,BYTE PTR [edx-0x525cd91e]
  419a92:	mov    dh,0x22
  419a94:	inc    eax
  419a95:	push   esp
  419a96:	push   ss
  419a97:	adc    esp,edx
  419a99:	popf   
  419a9a:	rep ins BYTE PTR es:[edi],dx
  419a9c:	mov    ah,0x34
  419a9e:	xor    cl,BYTE PTR ds:0xf3347f07
  419aa4:	sub    BYTE PTR [edx+0x19c8fc17],0x66
  419aab:	jecxz  0x419b0c
  419aad:	pop    ss
  419aae:	(bad)  [ecx+0x26]
  419ab1:	stos   BYTE PTR es:[edi],al
  419ab2:	(bad)  
  419ab3:	dec    esi
  419ab4:	push   edi
  419ab5:	bound  esi,QWORD PTR es:[edi+0x40]
  419ab9:	aaa    
  419aba:	pushf  
  419abb:	(bad)  
  419abc:	mov    esp,0x7bb18880
  419ac1:	mov    ds:0xe33fba1a,eax
  419ac6:	mov    esi,0x4195a668
  419acb:	add    DWORD PTR [ebp+edi*8+0x5d],edx
  419acf:	xchg   edi,eax
  419ad0:	cmp    DWORD PTR [edi],edx
  419ad2:	inc    esi
  419ad3:	mov    edx,0xc1662246
  419ad8:	setle  BYTE PTR [eax-0x58942a6f]
  419adf:	xor    BYTE PTR [ebp+0xc8c423b],ch
  419ae5:	int    0x4e
  419ae7:	push   ebx
  419ae8:	mov    dl,BYTE PTR [edi]
  419aea:	add    ebp,ecx
  419aec:	ds xchg ebp,eax
  419aee:	add    BYTE PTR [edi+ebp*1],ah
  419af1:	inc    ebp
  419af2:	rol    DWORD PTR [ebp+0x0],0xbf
  419af6:	inc    eax
  419af7:	xor    al,0x84
  419af9:	and    DWORD PTR [ecx],edx
  419afb:	popa   
  419afc:	dec    esi
  419afd:	cmp    al,0x1b
  419aff:	xchg   edi,eax
  419b00:	cmp    DWORD PTR [ebx+0x3571f5aa],ebp
  419b06:	dec    edx
  419b07:	push   ecx
  419b08:	je     0x419b4a
  419b0a:	(bad)  
  419b0b:	mov    eax,ds:0x826b1d16
  419b10:	repnz shl DWORD PTR [esi+0x8],cl
  419b14:	(bad)
  419b17:	inc    edx
  419b18:	hlt    
  419b19:	pushf  
  419b1a:	add    dh,BYTE PTR ds:[ecx]
  419b1d:	dec    ecx
  419b1e:	je     0x419aba
  419b20:	add    BYTE PTR [esi+eiz*4],cl
  419b23:	push   ebp
  419b24:	sub    al,0x4e
  419b26:	fistp  QWORD PTR [eax+0x63]
  419b29:	xchg   ebx,eax
  419b2a:	(bad)  
  419b2b:	sub    eax,0xffaf1ea2
  419b30:	adc    eax,0x2e14d82f
  419b35:	fadd   DWORD PTR [edi-0x4ce1517a]
  419b3b:	cmp    bh,BYTE PTR [eax+0x62180faf]
  419b41:	sbb    eax,0xa6be3694
  419b46:	outs   dx,DWORD PTR ds:[esi]
  419b47:	sbb    BYTE PTR [ebx+0x1a204e23],0x6e
  419b4e:	or     esi,DWORD PTR [esi]
  419b50:	rol    ebx,1
  419b52:	outs   dx,DWORD PTR ds:[esi]
  419b53:	test   BYTE PTR [ecx],0xc1
  419b56:	cmp    ecx,esi
  419b58:	das    
  419b59:	in     al,0x81
  419b5b:	pusha  
  419b5c:	cs pop edi
  419b5e:	bound  ebp,QWORD PTR [edi+0x252cb30d]
  419b64:	or     DWORD PTR [edi],ebp
  419b66:	(bad)  
  419b67:	jmp    0x419b08
  419b69:	aad    0x99
  419b6b:	pop    edx
  419b6c:	xchg   edx,eax
  419b6d:	sub    esp,DWORD PTR [ebx+0x10]
  419b70:	cmp    dh,BYTE PTR [edi+0x3d]
  419b73:	push   ebp
  419b74:	jo     0x419b63
  419b76:	mov    esi,0xda9fd957
  419b7b:	js     0x419b97
  419b7d:	lock push ds
  419b7f:	mov    ebx,0xaf2a4a47
  419b84:	ja     0x419b86
  419b86:	mov    ecx,0xbb3fe61
  419b8b:	xchg   ecx,eax
  419b8c:	sub    BYTE PTR [edi+0x558074b2],cl
  419b92:	aas    
  419b93:	adc    esp,DWORD PTR [ecx+0x41]
  419b96:	arpl   WORD PTR [eax],sp
  419b98:	mov    bh,dh
  419b9a:	dec    edi
  419b9b:	and    al,0x79
  419b9d:	ss pop edi
  419b9f:	sub    ah,bl
  419ba1:	test   al,0x26
  419ba3:	aaa    
  419ba4:	fisub  DWORD PTR gs:[eax+0x2]
  419ba8:	daa    
  419ba9:	movzx  esi,WORD PTR [edx-0x1e]
  419bad:	adc    DWORD PTR [edi],ebp
  419baf:	hlt    
  419bb0:	imul   edi,esp,0x9eefb40f
  419bb6:	xchg   BYTE PTR [ecx],al
  419bb8:	push   ss
  419bb9:	pop    esi
  419bba:	jae    0x419b6a
  419bbc:	enter  0x9cfe,0x93
  419bc0:	loope  0x419c19
  419bc2:	out    0x8b,al
  419bc4:	jnp    0x419b69
  419bc6:	sub    BYTE PTR ds:0x39b29e16,ch
  419bcc:	shl    BYTE PTR [ebp-0x51],0x3d
  419bd0:	in     al,dx
  419bd1:	lods   eax,DWORD PTR ds:[esi]
  419bd2:	mov    ds,WORD PTR [ecx+0x69]
  419bd5:	repnz mov ds:0xf0a6ca38,al
  419bdb:	repnz test al,dl
  419bde:	xor    ch,cl
  419be0:	xlat   BYTE PTR ds:[ebx]
  419be1:	inc    ebx
  419be2:	aas    
  419be3:	sti    
  419be4:	nop
  419be5:	jmp    0x419bea
  419be7:	cmp    eax,0xf2d8a608
  419bec:	push   ds
  419bed:	or     DWORD PTR [ecx-0x7dfc4c55],ecx
  419bf3:	out    dx,eax
  419bf4:	daa    
  419bf5:	ret    
  419bf6:	(bad)  
  419bf7:	mov    ds:0xed00fc14,eax
  419bfc:	jno    0x419bbd
  419bfe:	mov    dh,0x7a
  419c00:	mov    bh,0xb2
  419c02:	pop    ebp
  419c03:	xchg   esi,eax
  419c04:	mov    dh,0x99
  419c06:	and    al,0x26
  419c08:	arpl   si,ax
  419c0a:	xchg   ebp,eax
  419c0b:	cli    
  419c0c:	in     eax,0x55
  419c0e:	jp     0x419c30
  419c10:	int    0x1
  419c12:	inc    esi
  419c13:	dec    ecx
  419c14:	pusha  
  419c15:	mov    DWORD PTR es:[edi+0x24],esp
  419c19:	test   BYTE PTR [edx+0x17],bl
  419c1c:	mov    edx,0xa208f918
  419c21:	sbb    esi,ebx
  419c23:	jbe    0x419bac
  419c25:	sub    DWORD PTR [esp+edi*2+0x6a6c24a0],esp
  419c2c:	add    ch,BYTE PTR [ebp+0x4e1e7372]
  419c32:	fcomp  QWORD PTR [esi-0x60e9c674]
  419c38:	jmp    DWORD PTR [eax+0x22d842e6]
  419c3e:	ficom  WORD PTR [ebx+0x6c]
  419c41:	xor    ebp,DWORD PTR [edi]
  419c43:	inc    esi
  419c44:	pop    eax
  419c45:	jnp    0x419c0a
  419c47:	mov    bl,BYTE PTR [esi-0x11]
  419c4a:	icebp  
  419c4b:	push   ebx
  419c4c:	imul   esp,esi,0xffffff95
  419c4f:	jmp    0x419bde
  419c51:	nop
  419c52:	mov    ah,0x94
  419c54:	ret    
  419c55:	stos   DWORD PTR es:[edi],eax
  419c56:	call   0xc00a:0x2a6c9fb7
  419c5d:	ja     0x419bf7
  419c5f:	sub    edi,DWORD PTR [ebp-0x5b]
  419c62:	out    dx,al
  419c63:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c65:	jae    0x419c9b
  419c67:	bound  edi,QWORD PTR [ebx+0x67]
  419c6a:	(bad)  
  419c6b:	ins    BYTE PTR es:[edi],dx
  419c6c:	jb     0x419c2a
  419c6e:	fwait
  419c6f:	out    0x74,eax
  419c71:	pop    ss
  419c72:	(bad)  
  419c74:	outs   dx,DWORD PTR ds:[esi]
  419c75:	mov    ebx,0x1c816ca6
  419c7a:	jp     0x419c51
  419c7c:	fimul  WORD PTR [esi-0x22]
  419c7f:	mov    ah,0xc0
  419c81:	inc    eax
  419c82:	jno    0x419c25
  419c84:	popf   
  419c85:	inc    esp
  419c86:	(bad)  
  419c87:	les    eax,FWORD PTR ds:0x73458e53
  419c8d:	std    
  419c8e:	mov    dh,0x3b
  419c91:	fs push 0xa
  419c94:	adc    BYTE PTR [esi],bl
  419c96:	pop    es
  419c97:	jp     0x419c35
  419c99:	div    edi
  419c9b:	pop    es
  419c9c:	and    BYTE PTR [edx],al
  419c9e:	xchg   ecx,eax
  419c9f:	hlt    
  419ca0:	adc    eax,0xb935cdeb
  419ca5:	je     0x419c86
  419ca7:	pusha  
  419ca8:	and    bh,BYTE PTR [eax+eiz*4+0x2c]
  419cac:	push   edx
  419cad:	pop    ss
  419cae:	inc    eax
  419caf:	add    BYTE PTR [ebx-0x2e],0x71
  419cb3:	or     ebx,ebx
  419cb5:	dec    edi
  419cb6:	cli    
  419cb7:	cmp    BYTE PTR [esi-0x35],0xe2
  419cbb:	popa   
  419cbc:	inc    ebp
  419cbd:	fs jle 0x419cce
  419cc0:	fucomip st,st(4)
  419cc2:	dec    esp
  419cc3:	jmp    0x419ce0
  419cc5:	rcr    BYTE PTR [edx+0x2c81c02],0x7
  419ccc:	mov    esi,0xb898a25b
  419cd1:	mov    dh,al
  419cd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cd4:	lods   al,BYTE PTR ds:[esi]
  419cd5:	and    edx,ecx
  419cd7:	adc    edx,DWORD PTR [esi]
  419cd9:	sahf   
  419cda:	sub    BYTE PTR ds:0x518328d0,dl
  419ce0:	mov    ds:0x8c5def16,eax
  419ce5:	jne    0x419cf5
  419ce7:	pop    ss
  419ce8:	ret    0x3d98
  419ceb:	pushf  
  419cec:	mov    dh,0x17
  419cee:	push   es
  419cef:	jbe    0x419c7e
  419cf1:	push   ebx
  419cf2:	xchg   edx,eax
  419cf3:	div    DWORD PTR [eax]
  419cf5:	adc    DWORD PTR [ebp-0x68cfe66c],0x6677a749
  419cff:	push   ebp
  419d00:	icebp  
  419d01:	sub    DWORD PTR ds:0xb5089044,ebx
  419d07:	call   0x4a5:0x121cb81f
  419d0e:	mov    al,BYTE PTR [edi]
  419d10:	adc    eax,0x633a9ded
  419d15:	sahf   
  419d16:	bound  ecx,QWORD PTR [edx+0x10]
  419d19:	repz icebp 
  419d1b:	(bad)  
  419d1c:	addr16 inc ecx
  419d1e:	outs   dx,DWORD PTR ds:[esi]
  419d1f:	cwde   
  419d20:	std    
  419d21:	fisttp DWORD PTR [edx+ebp*4+0x50]
  419d25:	push   0x4033af57
  419d2a:	(bad)  
  419d2c:	inc    edx
  419d2d:	dec    edx
  419d2e:	pop    esi
  419d2f:	cmc    
  419d30:	scas   eax,DWORD PTR es:[edi]
  419d31:	lock je 0x419ccf
  419d34:	sar    edx,cl
  419d36:	scas   al,BYTE PTR es:[edi]
  419d37:	xor    ebx,DWORD PTR [ebx]
  419d39:	iret   
  419d3a:	stos   BYTE PTR es:[edi],al
  419d3b:	add    dl,bl
  419d3d:	cmp    eax,0x5c572d9b
  419d42:	(bad)  
  419d43:	or     ecx,DWORD PTR [eax+0x32585747]
  419d49:	sub    BYTE PTR [eax],ch
  419d4b:	push   edx
  419d4c:	outs   dx,DWORD PTR ds:[esi]
  419d4d:	mov    bh,0x60
  419d4f:	sbb    DWORD PTR [edx+0x2234b716],ecx
  419d55:	call   0x4159:0x8627147e
  419d5c:	loope  0x419d14
  419d5e:	test   eax,0xf7506da0
  419d63:	dec    ecx
  419d64:	retf   0xc62c
  419d67:	fwait
  419d68:	ret    
  419d69:	adc    BYTE PTR [edi+ebp*4-0x18ff2ec],al
  419d70:	loope  0x419d30
  419d72:	je     0x419cff
  419d74:	out    dx,al
  419d75:	sub    al,BYTE PTR ss:[ecx-0x12]
  419d79:	std    
  419d7a:	cld    
  419d7b:	and    DWORD PTR [esi+0x72b607ce],esi
  419d81:	nop
  419d82:	push   0xe
  419d84:	and    esp,DWORD PTR [edx+0x12]
  419d87:	dec    BYTE PTR [edx]
  419d89:	jecxz  0x419d33
  419d8b:	lock jmp 0x419d80
  419d8e:	cdq    
  419d8f:	shl    BYTE PTR [edi+edx*8],1
  419d92:	jg     0x419d1d
  419d94:	pushf  
  419d95:	out    0x42,al
  419d97:	mov    WORD PTR [ebx],gs
  419d99:	cmp    DWORD PTR [edx],ebx
  419d9b:	push   ecx
  419d9c:	repnz pop es
  419d9e:	cld    
  419d9f:	gs jbe 0x419d8a
  419da2:	pop    ss
  419da3:	bound  edi,QWORD PTR [ecx+0x17]
  419da6:	dec    edx
  419da7:	cmc    
  419da8:	sti    
  419da9:	test   al,0x8d
  419dab:	lods   eax,DWORD PTR ds:[esi]
  419dac:	pushf  
  419dad:	and    al,BYTE PTR [ecx]
  419daf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419db0:	push   es
  419db1:	sub    bl,0x8a
  419db4:	add    eax,0x28f4fe50
  419db9:	or     DWORD PTR [eax-0x681ad700],ebp
  419dbf:	sbb    eax,0xe0ad5adb
  419dc5:	xor    eax,DWORD PTR [ecx+ecx*8+0x47]
  419dc9:	mov    bh,0xb2
  419dcb:	dec    esi
  419dcc:	lods   al,BYTE PTR ds:[esi]
  419dcd:	ret    
  419dce:	adc    al,0xa7
  419dd0:	std    
  419dd1:	dec    ecx
  419dd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419dd3:	mov    ds:0x2a75864d,eax
  419dd8:	add    BYTE PTR [ecx+ebx*4+0x34],al
  419ddc:	add    bl,dh
  419dde:	daa    
  419ddf:	icebp  
  419de0:	or     esp,DWORD PTR [edx-0x5b7321ea]
  419de6:	jb     0x419e45
  419de8:	lea    ecx,[ebp-0x23b09d49]
  419dee:	mov    ecx,0xaceac240
  419df3:	clc    
  419df4:	js     0x419e3f
  419df6:	fcomi  st,st(4)
  419df8:	jp     0x419e52
  419dfa:	data16 fstp DWORD PTR [eax+0x6b]
  419dfe:	lea    ecx,[eax]
  419e00:	jmp    0x6f2a99a
  419e05:	mov    al,0xec
  419e07:	daa    
  419e08:	loopne 0x419d97
  419e0a:	fs lahf 
  419e0c:	jp     0x419e44
  419e0e:	enter  0xb468,0xd4
  419e12:	mov    cl,0x5d
  419e14:	xchg   ecx,eax
  419e15:	popf   
  419e16:	enter  0x7b6f,0xdc
  419e1a:	stos   BYTE PTR es:[edi],al
  419e1b:	std    
  419e1c:	xor    bl,dl
  419e1e:	jle    0x419e77
  419e20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e21:	sub    edx,DWORD PTR [ebp-0x7e]
  419e24:	call   0x1c5e:0x47a7c552
  419e2b:	mov    ah,0x3f
  419e2d:	xchg   BYTE PTR [eax-0x15],dl
  419e30:	jae    0x419e6c
  419e32:	adc    BYTE PTR [edi],cl
  419e34:	arpl   WORD PTR [esi-0x75],sp
  419e37:	adc    DWORD PTR [edi-0x6f2c5ad3],edi
  419e3d:	add    eax,0x30690f81
  419e42:	lahf   
  419e43:	iret   
  419e44:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e46:	retf   0x4f2f
  419e49:	jmp    0x4d335181
  419e4e:	mov    BYTE PTR [esi],0xac
  419e51:	jmp    0xf2f1:0xf4d0914f
  419e58:	mov    BYTE PTR [eax+0x73],0xab
  419e5c:	scas   al,BYTE PTR es:[edi]
  419e5d:	pop    eax
  419e5e:	stos   DWORD PTR es:[edi],eax
  419e5f:	push   ecx
  419e60:	stos   DWORD PTR es:[edi],eax
  419e61:	pop    eax
  419e62:	mov    esi,0x3ecdf697
  419e67:	imul   ecx,DWORD PTR [esi+0x5a2a3ad2],0xffffffe9
  419e6e:	mov    ecx,0x9a3dcdca
  419e73:	gs mov bh,0x58
  419e76:	ret    
  419e77:	dec    esi
  419e78:	and    BYTE PTR [edx-0x2a],dl
  419e7b:	daa    
  419e7c:	scas   al,BYTE PTR es:[edi]
  419e7d:	pop    ss
  419e7e:	or     eax,0x7108bcd3
  419e83:	jp     0x419e7b
  419e85:	scas   al,BYTE PTR es:[edi]
  419e86:	fisubr DWORD PTR [edi]
  419e88:	pop    esp
  419e89:	jo     0x419e14
  419e8b:	push   0xffffffcc
  419e8d:	outs   dx,DWORD PTR ds:[esi]
  419e8e:	test   bh,ah
  419e90:	stc    
  419e91:	xchg   edi,eax
  419e92:	pop    ss
  419e93:	fwait
  419e94:	mov    edi,0x6af15a4d
  419e99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e9a:	mov    DWORD PTR [eax+0x5606f97b],edx
  419ea0:	xchg   esp,eax
  419ea1:	retf   
  419ea2:	(bad)  [esi-0x7b]
  419ea5:	shl    esi,1
  419ea7:	cmp    al,0xaa
  419ea9:	imul   DWORD PTR [ebx]
  419eab:	adc    eax,edx
  419ead:	xchg   ebx,eax
  419eae:	jmp    0x419f0e
  419eb0:	(bad)  [eax+0x267a3c93]
  419eb6:	inc    esp
  419eb7:	mov    dl,0x50
  419eb9:	mov    al,0x38
  419ebb:	inc    eax
  419ebc:	mov    dh,0x42
  419ebe:	add    al,0xd7
  419ec0:	(bad)  
  419ec2:	aad    0x2b
  419ec4:	or     ecx,DWORD PTR [ebx-0x9]
  419ec7:	dec    ecx
  419ec8:	mov    WORD PTR [eax],es
  419eca:	sbb    eax,DWORD PTR [ebx+0xfab0d7f]
  419ed0:	xchg   edx,eax
  419ed1:	jmp    0x89c22fbf
  419ed6:	mov    al,0x33
  419ed8:	pop    ecx
  419ed9:	adc    esp,esp
  419edb:	lock xchg ecx,eax
  419edd:	jp     0x419eda
  419edf:	sahf   
  419ee0:	outs   dx,DWORD PTR ds:[esi]
  419ee1:	xor    eax,DWORD PTR [eax]
  419ee3:	lahf   
  419ee4:	rcr    esp,0x9c
  419ee7:	pop    ebx
  419ee8:	fisttp QWORD PTR [ebx]
  419eea:	add    cl,bl
  419eec:	add    al,0x44
  419eee:	mov    ecx,0xcf0ef66e
  419ef3:	mov    edx,0x68def13d
  419ef8:	stos   DWORD PTR es:[edi],eax
  419ef9:	sbb    ebp,esi
  419efb:	and    DWORD PTR [ebp-0xf],0x128302df
  419f02:	imul   edx,DWORD PTR es:0xcf692e6c,0x13956962
  419f0d:	gs xor eax,0xad218475
  419f13:	pop    es
  419f14:	xor    DWORD PTR [eax+0x17],ecx
  419f17:	(bad)  
  419f18:	push   0x1
  419f1a:	sub    eax,0x2b8f82b2
  419f1f:	(bad)  
  419f20:	shl    BYTE PTR [ecx+esi*1+0x36c67d00],0x3d
  419f28:	pushf  
  419f29:	mov    edi,0xfd63d534
  419f2e:	jg     0x419f62
  419f30:	mov    esi,0xcc6d67ec
  419f35:	jb     0x419fb1
  419f37:	in     eax,dx
  419f38:	jmp    0xa82d:0x5a12e183
  419f3f:	sub    bh,BYTE PTR [eax+ecx*2+0xc]
  419f43:	dec    esi
  419f44:	push   esi
  419f45:	loope  0x419f2c
  419f47:	cli    
  419f48:	xor    edi,esi
  419f4a:	loopne 0x419fb5
  419f4c:	cmp    DWORD PTR ds:0x1efdf81d,edi
  419f52:	xor    DWORD PTR [ebx],ebx
  419f54:	fcomp  DWORD PTR [eax-0xd]
  419f57:	jle    0x419f63
  419f59:	(bad)  
  419f5a:	(bad)  
  419f5c:	dec    edi
  419f5d:	shr    DWORD PTR [ecx],1
  419f5f:	test   eax,0xa153fed1
  419f64:	add    eax,0x46f9f5d3
  419f69:	dec    edx
  419f6a:	outs   dx,BYTE PTR ds:[esi]
  419f6b:	sbb    al,0x36
  419f6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f6e:	into   
  419f6f:	mov    edx,0x25f2ccc6
  419f74:	jne    0x419ef6
  419f76:	nop
  419f77:	mov    al,ds:0x23367a
  419f7c:	adc    DWORD PTR [edx-0x16822148],ebx
  419f82:	adc    esp,ebp
  419f84:	mov    ebx,DWORD PTR [edi]
  419f86:	and    BYTE PTR [edi+0x47],bh
  419f89:	adc    dl,BYTE PTR [ecx+0x1ae1f3ed]
  419f8f:	mov    ah,0x89
  419f91:	repz jno 0x419f55
  419f94:	outs   dx,BYTE PTR ds:[esi]
  419f95:	xor    esp,DWORD PTR [ebp-0x59]
  419f98:	lock ja 0x419fdc
  419f9b:	xchg   ebp,eax
  419f9c:	xchg   esi,eax
  419f9d:	(bad)  
  419f9e:	int3   
  419f9f:	bound  edi,QWORD PTR [eax]
  419fa1:	push   esi
  419fa2:	hlt    
  419fa3:	lock xor edi,edx
  419fa6:	pop    ebp
  419fa7:	gs jnp 0x419f76
  419faa:	add    ah,BYTE PTR [esi+0x16f15d10]
  419fb0:	jmp    0x5285:0x20b7bb31
  419fb7:	in     al,0x6c
  419fb9:	mov    esp,0x6bafef6a
  419fbe:	pop    esp
  419fbf:	sub    ebx,DWORD PTR [edi-0x6974209a]
  419fc5:	lods   eax,DWORD PTR ds:[esi]
  419fc6:	mov    dl,0xb6
  419fc8:	mov    esi,0xe987094d
  419fcd:	lds    edi,FWORD PTR [edi+0xe4085d]
  419fd3:	ss clc 
  419fd5:	ja     0x419fa1
  419fd7:	xor    al,0xa7
  419fd9:	out    dx,eax
  419fda:	or     cl,ch
  419fdc:	inc    ebx
  419fdd:	pop    ecx
  419fde:	imul   esi,DWORD PTR [esi+0x73],0x3e2e008e
  419fe5:	dec    ecx
  419fe6:	pop    ds
  419fe7:	pop    esi
  419fe8:	mov    esi,0xdaed0486
  419fed:	cli    
  419fee:	sti    
  419fef:	lahf   
  419ff0:	add    DWORD PTR [esi-0x56beb7de],ecx
  419ff6:	les    ebp,FWORD PTR [ecx]
  419ff8:	aam    0x81
  419ffa:	mov    al,ds:0x238cacfb
  419fff:	xor    BYTE PTR [esp+edi*8-0xf],ah
  41a003:	leave  
  41a004:	enter  0xeace,0x99
  41a008:	or     eax,0xd75fea40
  41a00d:	xchg   ecx,eax
  41a00e:	adc    edi,DWORD PTR [ebx+0x4d7bc8]
  41a014:	dec    esi
  41a015:	jo     0x419fd7
  41a017:	pop    ecx
  41a018:	pop    ds
  41a019:	jle    0x419fe9
  41a01b:	mov    ds:0x2e621dc3,al
  41a020:	in     eax,dx
  41a021:	sub    DWORD PTR [ecx+edi*2],edi
  41a024:	loope  0x41a07d
  41a026:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a027:	push   DWORD PTR [esi-0x79b604f9]
  41a02d:	push   ebp
  41a02e:	sub    al,0x2b
  41a030:	xchg   DWORD PTR [ecx],edi
  41a032:	mov    bh,BYTE PTR [esi+edi*2]
  41a035:	int    0x9
  41a037:	jb     0x419fe1
  41a039:	push   ss
  41a03a:	clc    
  41a03b:	repz shl ebx,0xd5
  41a03f:	repz push ebx
  41a041:	dec    esi
  41a042:	cmp    ecx,DWORD PTR [ecx-0x309f204b]
  41a048:	ror    DWORD PTR [ebp+0x2f3f3cc],1
  41a04e:	div    BYTE PTR ds:0x4dc3aca1
  41a054:	(bad)  
  41a055:	push   esp
  41a056:	push   edi
  41a057:	adc    al,BYTE PTR [ecx+0x17]
  41a05a:	test   esp,esi
  41a05c:	xchg   BYTE PTR [ebx],dh
  41a05e:	lods   eax,DWORD PTR ds:[esi]
  41a05f:	xchg   DWORD PTR [edi+edi*2+0x66],esi
  41a063:	add    al,0xd8
  41a065:	push   0x69
  41a067:	adc    BYTE PTR [edi+0x13],dh
  41a06a:	aam    0xc1
  41a06c:	test   BYTE PTR [ebp+0x2f],al
  41a06f:	jp     0x41a026
  41a071:	push   edx
  41a072:	jecxz  0x41a042
  41a074:	fnsave [edi]
  41a076:	std    
  41a077:	pop    ds
  41a078:	and    eax,0x3abd4a33
  41a07d:	xchg   ebx,eax
  41a07e:	sub    BYTE PTR [ebx+0x38],bh
  41a081:	dec    esi
  41a082:	adc    eax,0xb7c6c619
  41a087:	xchg   esi,eax
  41a088:	xchg   ecx,eax
  41a089:	mov    ds:0x86b2d11f,al
  41a08e:	jmp    ecx
  41a090:	fnstenv [esi-0x64]
  41a093:	aam    0x9e
  41a095:	int    0x65
  41a097:	or     edi,DWORD PTR [ecx+0x17f0a64b]
  41a09d:	daa    
  41a09e:	sbb    dh,BYTE PTR [ebx+esi*8-0x50]
  41a0a2:	and    DWORD PTR [ebx+edx*1+0x66],ebp
  41a0a6:	pop    esi
  41a0a7:	xor    DWORD PTR [edi],esp
  41a0a9:	sbb    al,0xd0
  41a0ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0ac:	fcmovnb st,st(2)
  41a0ae:	mov    eax,ds:0x9d1a0d61
  41a0b3:	jne    0x41a06d
  41a0b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0b6:	jo     0x41a113
  41a0b8:	imul   ebx,DWORD PTR [edi]
  41a0bb:	pop    esi
  41a0bc:	inc    eax
  41a0bd:	pushf  
  41a0be:	mov    ebx,0xafb78ff8
  41a0c3:	dec    edi
  41a0c4:	pop    esi
  41a0c5:	not    BYTE PTR [esi-0x5]
  41a0c8:	stos   DWORD PTR es:[edi],eax
  41a0c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0ca:	fcmovnbe st,st(4)
  41a0cc:	dec    ecx
  41a0cd:	sub    edx,DWORD PTR [ebp-0x4d]
  41a0d0:	std    
  41a0d1:	or     al,0xd5
  41a0d3:	sub    DWORD PTR [ebx+0x36a861f0],0xafccdf77
  41a0dd:	xlat   BYTE PTR ds:[ebx]
  41a0de:	aam    0xb5
  41a0e0:	lahf   
  41a0e1:	sbb    eax,0xe9aa9f81
  41a0e6:	cmp    BYTE PTR [eax+edx*1+0x33afc884],0xcf
  41a0ee:	fild   DWORD PTR [esi+ebx*1]
  41a0f1:	push   ecx
  41a0f2:	pop    ebp
  41a0f3:	fdivr  QWORD PTR ds:0xdeb4417a
  41a0f9:	mov    ah,0x91
  41a0fb:	inc    ecx
  41a0fc:	dec    edi
  41a0fd:	sbb    eax,0xa8eca9f2
  41a102:	cmp    eax,0x2ff99010
  41a107:	cmp    BYTE PTR [ecx+0x2d],cl
  41a10a:	inc    edi
  41a10b:	pop    ecx
  41a10c:	js     0x41a0d8
  41a10e:	comiss xmm6,xmm0
  41a111:	xlat   BYTE PTR ds:[ebx]
  41a112:	in     eax,0xc
  41a114:	ins    BYTE PTR es:[edi],dx
  41a115:	cli    
  41a116:	fdivr  DWORD PTR [esi]
  41a118:	mov    esp,0x3110c69d
  41a11d:	push   cs
  41a11e:	xchg   esp,eax
  41a11f:	prefetchnta BYTE PTR [esi-0x45041bd5]
  41a126:	in     eax,0x6c
  41a128:	push   0xa5c44fd5
  41a12d:	aaa    
  41a12e:	mov    ebp,DWORD PTR [eax+ebp*2]
  41a131:	sbb    eax,0x1cd65c82
  41a136:	push   0xe03ebd32
  41a13b:	popf   
  41a13c:	stos   DWORD PTR es:[edi],eax
  41a13d:	pusha  
  41a13e:	inc    edi
  41a13f:	xchg   edx,eax
  41a140:	dec    ebp
  41a141:	rol    DWORD PTR [esi],0xe7
  41a144:	or     DWORD PTR [ebp+0x12],0x23
  41a148:	mov    ebx,0xc9901b40
  41a14d:	xor    ecx,DWORD PTR [edx-0x44767dd]
  41a153:	inc    esi
  41a154:	enter  0xcc9d,0x4f
  41a158:	(bad)  
  41a15a:	jp     0x41a15d
  41a15c:	aad    0xa3
  41a15e:	adc    BYTE PTR [ebp+0x4916c16a],0xea
  41a165:	das    
  41a166:	mov    ch,0x73
  41a168:	xchg   ebx,eax
  41a169:	and    eax,0xcb6c6fe0
  41a16e:	mov    ds:0xbdc3b184,al
  41a173:	push   0x7a
  41a175:	pop    ebp
  41a176:	push   0x35a70cd2
  41a17b:	adc    ebx,DWORD PTR [edx+0x16687f98]
  41a181:	psrld  mm3,mm2
  41a184:	xor    eax,0x88a086fb
  41a189:	and    DWORD PTR [esi-0x1c],esp
  41a18c:	js     0x41a1c4
  41a18e:	stos   DWORD PTR es:[edi],eax
  41a18f:	mov    esi,0xba143fcd
  41a194:	cwde   
  41a195:	inc    edi
  41a196:	(bad)  
  41a197:	push   eax
  41a198:	cmp    ch,al
  41a19a:	mov    ch,0xb7
  41a19c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a19d:	inc    edx
  41a19e:	inc    eax
  41a19f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1a0:	outs   dx,BYTE PTR ds:[esi]
  41a1a1:	rol    bl,0x6
  41a1a4:	mov    ebx,cs
  41a1a6:	xchg   esp,eax
  41a1a7:	loope  0x41a1d2
  41a1a9:	ins    DWORD PTR es:[edi],dx
  41a1aa:	loope  0x41a1b3
  41a1ac:	or     edi,esp
  41a1ae:	and    BYTE PTR [ebx],dl
  41a1b0:	imul   edx,DWORD PTR [esi],0xffffff95
  41a1b3:	ins    DWORD PTR es:[edi],dx
  41a1b4:	sub    dl,al
  41a1b6:	inc    edi
  41a1b7:	inc    ebx
  41a1b8:	xchg   esp,eax
  41a1b9:	(bad)  [edx+ebx*1]
  41a1bc:	cmp    eax,0xdbd25c36
  41a1c1:	arpl   WORD PTR gs:[eax-0x4ce1efa7],bp
  41a1c8:	xor    ebp,esi
  41a1ca:	es jbe 0x41a157
  41a1cd:	cmp    ah,bh
  41a1cf:	loope  0x41a173
  41a1d1:	fistp  DWORD PTR [ecx-0x61]
  41a1d4:	inc    ebx
  41a1d5:	xlat   BYTE PTR ds:[ebx]
  41a1d6:	rol    DWORD PTR [edx],cl
  41a1d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1d9:	rcr    BYTE PTR [edi],cl
  41a1db:	rcr    BYTE PTR [ebp+eiz*2+0x6e],cl
  41a1df:	mov    eax,ds:0xd71b0a85
  41a1e4:	xor    ah,BYTE PTR [ebx+0x2b468596]
  41a1ea:	add    ch,0x9a
  41a1ed:	push   ds
  41a1ee:	and    bh,BYTE PTR [edx]
  41a1f0:	into   
  41a1f1:	jno    0x41a24e
  41a1f3:	inc    ecx
  41a1f4:	xor    DWORD PTR [ebx+0x76],ebp
  41a1f7:	bound  ebx,QWORD PTR [ebp+ebx*8+0x5c]
  41a1fb:	jne    0x584e9922
  41a201:	ror    BYTE PTR [edi],0x9c
  41a204:	hlt    
  41a205:	adc    DWORD PTR [eax+0x7],0x694ab9c1
  41a20c:	xchg   edi,eax
  41a20d:	jmp    0x4bbf108a
  41a212:	pop    edi
  41a213:	jo     0x41a1f5
  41a215:	scas   al,BYTE PTR es:[edi]
  41a216:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41a218:	cld    
  41a219:	sub    al,0x67
  41a21b:	xor    al,0x33
  41a21d:	ror    BYTE PTR [eax-0x4a3fba71],1
  41a223:	outs   dx,BYTE PTR ds:[esi]
  41a224:	mov    ds:0x9b077f8b,al
  41a229:	in     eax,dx
  41a22a:	xchg   edx,eax
  41a22b:	xor    esi,0xcc340e5c
  41a231:	in     al,0xaf
  41a233:	or     eax,0x8b7975f1
  41a238:	sar    eax,1
  41a23a:	les    eax,FWORD PTR [ecx+0x1de802de]
  41a240:	pop    edi
  41a241:	jo     0x41a1fc
  41a243:	jo     0x41a2b8
  41a245:	ret    0x70c5
  41a248:	pop    ss
  41a249:	xchg   ecx,eax
  41a24a:	pop    ds
  41a24b:	jmp    0x41a2a1
  41a24d:	sub    DWORD PTR [esp+edi*1+0x79],0xffffffd6
  41a252:	into   
  41a253:	fsub   QWORD PTR [esi+ecx*1]
  41a256:	cmp    DWORD PTR [edi],0x4
  41a259:	int3   
  41a25a:	test   ch,cl
  41a25c:	add    eax,0x7db6825
  41a261:	pop    eax
  41a262:	nop
  41a263:	(bad)  
  41a264:	and    eax,0xd49bd2e1
  41a269:	push   0xffffffa1
  41a26b:	out    dx,al
  41a26c:	push   0x68
  41a26e:	jmp    0xc9df1e38
  41a273:	(bad)  
  41a274:	leave  
  41a275:	sahf   
  41a276:	jp     0x41a210
  41a278:	cld    
  41a279:	mov    eax,0x69dae6c1
  41a27e:	(bad)  
  41a27f:	push   ecx
  41a280:	jbe    0x41a2ba
  41a282:	je     0x41a2d4
  41a284:	lea    eax,[esi-0x3b]
  41a287:	mov    esi,0xce2bc377
  41a28c:	dec    edx
  41a28d:	cmp    ebp,ecx
  41a28f:	(bad)  
  41a290:	jmp    0xa16c:0x1ac8151
  41a297:	(bad)  
  41a298:	xor    eax,0xf30024a
  41a29d:	(bad)  
  41a29e:	push   0x7e9cbc8
  41a2a3:	xchg   ebx,eax
  41a2a4:	in     al,dx
  41a2a5:	mov    bp,0xeffa
  41a2a9:	in     al,0x95
  41a2ab:	js     0x41a2d0
  41a2ad:	repnz arpl ax,bp
  41a2b0:	mov    ecx,0xdc3a83f5
  41a2b5:	ins    BYTE PTR es:[edi],dx
  41a2b6:	fisttp DWORD PTR [edi-0x6fcc061]
  41a2bc:	out    0x9f,eax
  41a2be:	in     al,0x8f
  41a2c0:	sub    DWORD PTR [ebp+0x4872505d],esi
  41a2c6:	push   edx
  41a2c7:	test   BYTE PTR cs:[ebx-0x30],bh
  41a2cb:	adc    al,0x3c
  41a2ce:	xchg   edi,eax
  41a2cf:	pop    ds
  41a2d0:	je     0x41a34d
  41a2d2:	push   es
  41a2d3:	xchg   edi,eax
  41a2d4:	(bad)  
  41a2d5:	pop    ds
  41a2d6:	dec    esp
  41a2d7:	jg     0x41a33a
  41a2d9:	add    bl,BYTE PTR [edx]
  41a2db:	or     dl,BYTE PTR [ebp+0x69e0213e]
  41a2e1:	xchg   ebp,eax
  41a2e2:	les    esi,FWORD PTR [ebx+0x66]
  41a2e5:	push   edx
  41a2e6:	ja     0x41a361
  41a2e8:	sub    eax,0x6cab7f2a
  41a2ed:	movq   QWORD PTR [ebx+0x25ec21f5],mm3
  41a2f4:	int    0x90
  41a2f6:	push   0x4e368f22
  41a2fb:	xchg   edi,ebp
  41a2fd:	jge    0x41a2fb
  41a2ff:	push   0x9a1974a1
  41a304:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a306:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a307:	out    0x3b,eax
  41a309:	lea    ecx,[esi+0x44]
  41a30c:	sub    BYTE PTR [ecx-0x49],dh
  41a30f:	add    cl,BYTE PTR [eax+ebx*1+0x5b22a4a9]
  41a316:	xchg   ebx,eax
  41a317:	out    0x7c,eax
  41a319:	sti    
  41a31a:	aas    
  41a31b:	or     DWORD PTR [esi],esp
  41a31d:	adc    DWORD PTR [edi],ebx
  41a31f:	std    
  41a320:	sbb    eax,0x1ea185fb
  41a325:	mov    bh,0x26
  41a327:	popf   
  41a328:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a329:	outs   dx,BYTE PTR ds:[esi]
  41a32a:	mov    BYTE PTR [ebp-0x199d08e7],cl
  41a330:	push   ebp
  41a331:	dec    ecx
  41a332:	push   edi
  41a333:	nop
  41a334:	mov    eax,0xbb429b0c
  41a339:	aam    0xfd
  41a33b:	or     DWORD PTR [edi],0xffffffad
  41a33e:	or     ch,dl
  41a340:	cld    
  41a341:	inc    edi
  41a342:	das    
  41a343:	cmp    esp,ecx
  41a345:	stc    
  41a346:	aas    
  41a347:	push   eax
  41a348:	dec    edx
  41a349:	sub    ebx,DWORD PTR [eax+ecx*4]
  41a34c:	imul   eax,DWORD PTR [edi+0x4ea63130],0x5c
  41a353:	enter  0x5b26,0xe7
  41a357:	data16 stos BYTE PTR es:[edi],al
  41a359:	sar    eax,0x6
  41a35c:	(bad)  
  41a35d:	cs fdiv st(5),st
  41a360:	push   eax
  41a361:	xlat   BYTE PTR ds:[ebx]
  41a362:	aaa    
  41a363:	cmp    esi,edx
  41a365:	push   edi
  41a366:	loopne 0x41a396
  41a368:	bound  ecx,QWORD PTR [ecx]
  41a36a:	retf   0x7bca
  41a36d:	lea    ebx,[edi-0x30]
  41a370:	dec    edi
  41a371:	popf   
  41a372:	pop    esp
  41a373:	push   edi
  41a374:	in     eax,0xa4
  41a376:	inc    esp
  41a377:	fwait
  41a378:	mov    ch,0xd5
  41a37a:	add    eax,0x8849bd7f
  41a37f:	mov    eax,0x65a6511d
  41a384:	and    cl,ah
  41a386:	imul   eax,DWORD PTR [ebp+0x6da33b34],0xffffffa8
  41a38d:	mov    ds,WORD PTR [ebp-0x2e]
  41a390:	pusha  
  41a391:	ins    DWORD PTR es:[edi],dx
  41a392:	test   BYTE PTR [ebx-0x1d],cl
  41a395:	lahf   
  41a396:	shr    DWORD PTR [eax],cl
  41a398:	cs inc ebp
  41a39a:	mov    bh,0x20
  41a39c:	sahf   
  41a39d:	xor    eax,0x8995d366
  41a3a2:	xor    BYTE PTR [esi],cl
  41a3a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3a5:	jo     0x41a3b1
  41a3a7:	outs   dx,DWORD PTR ds:[esi]
  41a3a8:	push   edx
  41a3a9:	jmp    0x9a9a9fd3
  41a3ae:	xchg   edx,eax
  41a3af:	dec    ebp
  41a3b0:	jg     0x41a431
  41a3b2:	retf   0xac90
  41a3b5:	scas   eax,DWORD PTR es:[edi]
  41a3b6:	jl     0x41a3e2
  41a3b8:	mov    cl,0x92
  41a3ba:	out    dx,eax
  41a3bb:	test   BYTE PTR [esi+0x4c],dh
  41a3be:	out    dx,al
  41a3bf:	mov    cl,0x6d
  41a3c1:	sbb    al,BYTE PTR [eax+0x60e7e5cd]
  41a3c7:	mov    ebp,DWORD PTR [ecx]
  41a3c9:	sbb    eax,0x6643d0ee
  41a3ce:	inc    eax
  41a3cf:	fisttp QWORD PTR ds:0x64b1deeb
  41a3d5:	jne    0x41a3c8
  41a3d7:	repnz lods al,BYTE PTR ds:[esi]
  41a3d9:	or     ebx,DWORD PTR [ecx-0x3995c5c8]
  41a3df:	sbb    al,0x2f
  41a3e1:	sub    al,BYTE PTR [ecx]
  41a3e3:	xlat   BYTE PTR ds:[ebx]
  41a3e4:	mov    dh,0x5d
  41a3e6:	push   edx
  41a3e7:	std    
  41a3e8:	outs   dx,BYTE PTR ds:[esi]
  41a3e9:	and    ch,BYTE PTR [ebx+eax*4-0x773bbd65]
  41a3f0:	jno    0x41a444
  41a3f2:	arpl   cx,ax
  41a3f4:	jbe    0x41a3ea
  41a3f6:	gs iret 
  41a3f8:	arpl   WORD PTR [eax-0x26259f19],bx
  41a3fe:	push   ss
  41a3ff:	adc    al,0xa2
  41a401:	in     al,dx
  41a402:	mov    ebx,0xe9b62ca0
  41a407:	xchg   ecx,eax
  41a408:	sbb    esp,DWORD PTR [edi+0x33d7ab81]
  41a40e:	mov    ecx,0xa458122
  41a413:	addr16 jle 0x41a41f
  41a416:	sbb    BYTE PTR [ebp-0x66cbaac7],bh
  41a41c:	in     eax,dx
  41a41d:	or     DWORD PTR [eax-0x19],0x59
  41a421:	add    esi,0xffffffc5
  41a424:	jg     0x41a3ad
  41a426:	fild   DWORD PTR [esi+0x6d04ef46]
  41a42c:	add    BYTE PTR [edi],ah
  41a42e:	scas   al,BYTE PTR es:[edi]
  41a42f:	mov    bh,0xd4
  41a431:	stc    
  41a432:	sbb    DWORD PTR [ecx-0x5e],edi
  41a435:	jge    0x41a3d3
  41a437:	xor    BYTE PTR [esi+0x38603d29],ah
  41a43d:	xchg   ecx,eax
  41a43e:	push   ecx
  41a43f:	repnz push ss
  41a441:	mov    ebp,DWORD PTR [edx-0x63b83879]
  41a447:	xchg   ecx,eax
  41a448:	pop    esi
  41a449:	out    0x7e,eax
  41a44b:	push   esp
  41a44c:	sbb    BYTE PTR [ecx],al
  41a44e:	mov    ecx,ecx
  41a450:	push   edi
  41a451:	mov    ah,0x35
  41a453:	test   al,0xc6
  41a455:	push   ecx
  41a456:	dec    esi
  41a457:	fs pop ebx
  41a459:	push   ecx
  41a45a:	and    eax,0xcf769d9f
  41a45f:	rcr    dh,cl
  41a461:	push   ss
  41a462:	shl    DWORD PTR [edi+0x21ca80c8],0x9a
  41a469:	add    al,BYTE PTR [esi+0x4e]
  41a46c:	mov    bl,0x6c
  41a46e:	and    al,ch
  41a470:	cmp    esi,esi
  41a472:	jnp    0x41a4d6
  41a474:	(bad)  
  41a475:	lock and dh,al
  41a478:	ja     0x41a4ab
  41a47a:	repz (bad) [ecx-0x543e55a9]
  41a481:	lock sub al,0x46
  41a484:	test   al,0x85
  41a486:	fild   DWORD PTR [edx-0x7caa278b]
  41a48c:	aad    0xc6
  41a48e:	es std 
  41a490:	dec    esi
  41a491:	mov    ch,0xe5
  41a493:	push   edx
  41a494:	xor    dh,BYTE PTR [ebx+ebx*2+0x2c9379d1]
  41a49b:	stc    
  41a49c:	fdivp  st(0),st
  41a49e:	sti    
  41a49f:	add    cl,BYTE PTR [ecx-0x151d963b]
  41a4a5:	loop   0x41a465
  41a4a7:	outs   dx,DWORD PTR ds:[esi]
  41a4a8:	push   es
  41a4a9:	sbb    eax,0xd4d44a24
  41a4ae:	and    ebx,DWORD PTR [eax]
  41a4b0:	cmp    eax,0xee005f16
  41a4b5:	mov    bl,0xc0
  41a4b7:	mov    ah,0xb6
  41a4b9:	call   0x7785bca6
  41a4be:	loopne 0x41a49b
  41a4c0:	test   DWORD PTR [ebp+esi*8+0x6d19f326],0xaa4ade3c
  41a4cb:	test   eax,0x3962068f
  41a4d0:	push   ds
  41a4d1:	(bad)  [eax+0x41552a6b]
  41a4d7:	inc    ebp
  41a4d8:	sbb    ah,BYTE PTR [eax+0x6e]
  41a4db:	ins    DWORD PTR es:[edi],dx
  41a4dc:	in     al,0xb4
  41a4de:	jno    0x41a4bb
  41a4e0:	mov    dh,0xa9
  41a4e2:	push   ss
  41a4e3:	ins    BYTE PTR es:[edi],dx
  41a4e4:	loop   0x41a4b2
  41a4e6:	fistp  DWORD PTR [edi+0xf8b5d06]
  41a4ec:	inc    cl
  41a4ee:	xchg   ecx,eax
  41a4ef:	sub    BYTE PTR [ebp+0x2fb6c45],bh
  41a4f5:	bound  edx,QWORD PTR [edi+ebx*8]
  41a4f8:	loope  0x41a524
  41a4fa:	arpl   WORD PTR [ebp+0x26],bp
  41a4fd:	idiv   BYTE PTR [esi]
  41a4ff:	out    0xe7,al
  41a501:	sbb    ebp,DWORD PTR ds:0xddf2b035
  41a507:	xchg   edi,eax
  41a508:	(bad)  
  41a509:	in     eax,0xbb
  41a50b:	bnd jge 0x41a4c9
  41a50e:	pop    ebx
  41a50f:	sahf   
  41a510:	dec    esi
  41a511:	dec    esp
  41a512:	adc    BYTE PTR [edi+0x75],bh
  41a515:	inc    edx
  41a516:	pop    eax
  41a517:	jbe    0x41a556
  41a519:	nop
  41a51a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a51b:	shl    edx,cl
  41a51d:	adc    BYTE PTR [edx],dl
  41a51f:	leave  
  41a520:	in     eax,dx
  41a521:	imul   esi,DWORD PTR ds:0xaed7b9f9,0x7e20af86
  41a52b:	adc    ecx,esi
  41a52d:	adc    eax,ebx
  41a52f:	imul   ebp,DWORD PTR [ebp-0x1dda2679],0xffffff81
  41a536:	scas   al,BYTE PTR es:[edi]
  41a537:	mov    dl,0x80
  41a539:	cmp    ecx,DWORD PTR ds:0x3ba9a20b
  41a53f:	xlat   BYTE PTR ds:[ebx]
  41a540:	retf   0x42a
  41a543:	push   0x536511c7
  41a548:	inc    ebp
  41a549:	clc    
  41a54a:	and    al,0x22
  41a54c:	mov    ah,0x18
  41a54e:	popf   
  41a54f:	add    ecx,DWORD PTR [edx+0x348bd5fb]
  41a555:	adc    eax,0x58050b2e
  41a55a:	cmp    eax,edi
  41a55c:	push   cs
  41a55d:	aam    0x35
  41a55f:	mov    cl,0x5d
  41a561:	addr16 mov cl,0xd9
  41a564:	add    esp,DWORD PTR [ecx-0x3f]
  41a567:	jno    0x41a507
  41a569:	dec    esi
  41a56a:	jmp    0x87edb510
  41a56f:	rcr    BYTE PTR [esi+0x605c8be0],cl
  41a575:	arpl   WORD PTR [edi-0x5daad11e],bx
  41a57b:	adc    bh,BYTE PTR [edi]
  41a57d:	mov    dh,dh
  41a57f:	pop    esi
  41a580:	push   ds
  41a581:	jmp    0x41a5b2
  41a583:	sbb    eax,0x1a798c74
  41a588:	cwde   
  41a589:	adc    dl,dh
  41a58b:	pop    ebp
  41a58c:	mov    ebp,0xc37e223f
  41a591:	(bad)  
  41a592:	je     0x41a579
  41a594:	mov    ch,0xf2
  41a596:	das    
  41a597:	(bad)  
  41a599:	push   edi
  41a59a:	hlt    
  41a59b:	lods   al,BYTE PTR ds:[esi]
  41a59c:	mov    ah,0x9c
  41a59e:	shl    DWORD PTR [eax-0x285279d2],0xd0
  41a5a5:	ficom  DWORD PTR [ecx+0x6e]
  41a5a8:	sub    al,0x2a
  41a5aa:	paddusb mm0,QWORD PTR [edx]
  41a5ad:	xchg   BYTE PTR [edx-0x7dde9ead],dh
  41a5b3:	stos   BYTE PTR es:[edi],al
  41a5b4:	pop    eax
  41a5b5:	stos   BYTE PTR es:[edi],al
  41a5b6:	ficom  DWORD PTR [edx]
  41a5b8:	push   esi
  41a5b9:	mov    al,ds:0xa457750e
  41a5be:	sub    al,0x57
  41a5c0:	cmp    esi,esi
  41a5c2:	xchg   ebx,eax
  41a5c3:	cmc    
  41a5c4:	cmc    
  41a5c5:	push   ebx
  41a5c6:	in     al,0x4
  41a5c8:	in     eax,dx
  41a5c9:	fild   DWORD PTR [eax-0x272aa32f]
  41a5cf:	push   edi
  41a5d0:	scas   eax,DWORD PTR es:[edi]
  41a5d1:	jno    0x41a63d
  41a5d3:	rcr    BYTE PTR [edi-0x75],1
  41a5d6:	mov    edi,DWORD PTR [ecx+ebp*8+0x4604792d]
  41a5dd:	pop    edi
  41a5de:	jmp    0x41a65e
  41a5e0:	int3   
  41a5e1:	xor    BYTE PTR [ebx],bl
  41a5e3:	mov    dl,0x39
  41a5e5:	sub    al,0x68
  41a5e7:	mov    eax,0xd452757c
  41a5ec:	pop    esp
  41a5ed:	sbb    edx,DWORD PTR [eax-0x3c]
  41a5f0:	jecxz  0x41a5aa
  41a5f2:	popf   
  41a5f3:	or     dl,bh
  41a5f5:	lahf   
  41a5f6:	mov    edx,0x8615733d
  41a5fb:	mov    dh,0x6a
  41a5fd:	int3   
  41a5fe:	mov    eax,0x6780dde8
  41a603:	cmp    BYTE PTR [ebx-0x79c3a00],bl
  41a609:	daa    
  41a60a:	xor    BYTE PTR ds:0x9991b09,al
  41a610:	aad    0x4a
  41a612:	jmp    0xc5:0x9caf4d3
  41a619:	repnz or ecx,esi
  41a61c:	xchg   ecx,eax
  41a61d:	mov    dh,0x5f
  41a61f:	and    ecx,DWORD PTR [ecx+0x71571adf]
  41a625:	xor    dh,BYTE PTR [ebp+0x26]
  41a628:	les    ecx,FWORD PTR [edi+eax*8]
  41a62b:	out    0xfc,al
  41a62d:	cld    
  41a62e:	popf   
  41a62f:	push   ss
  41a630:	nop
  41a631:	loope  0x41a668
  41a633:	add    dl,ch
  41a635:	adc    ch,bl
  41a637:	ins    DWORD PTR es:[edi],dx
  41a638:	stc    
  41a639:	and    BYTE PTR [ecx+edi*4-0x2a],bh
  41a63d:	in     al,0x7e
  41a63f:	rcr    DWORD PTR [ecx+0x7],cl
  41a642:	cmp    DWORD PTR [eax],esp
  41a644:	fnsetpm(287 only) 
  41a646:	pop    ebx
  41a647:	mov    ds:0xd56bfddb,al
  41a64c:	jl     0x41a602
  41a64e:	jne    0x41a675
  41a650:	mov    esp,0x9fc85c69
  41a655:	rol    DWORD PTR [esi],1
  41a657:	adc    al,0x1c
  41a659:	inc    esp
  41a65a:	loope  0x41a63f
  41a65c:	push   0x7b59dc70
  41a661:	outs   dx,BYTE PTR ds:[esi]
  41a662:	dec    edx
  41a663:	push   edi
  41a664:	dec    esi
  41a665:	push   ebp
  41a666:	cs push ebp
  41a668:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a669:	dec    eax
  41a66a:	mov    bl,0xb0
  41a66c:	sbb    BYTE PTR [ebx],dl
  41a66e:	adc    al,ch
  41a670:	out    0x54,al
  41a672:	out    0x1c,al
  41a674:	(bad)  
  41a675:	sbb    eax,0xb3218f16
  41a67a:	fld    QWORD PTR [ebx]
  41a67c:	sahf   
  41a67d:	jge    0x41a67e
  41a67f:	mov    WORD PTR [edi+ebx*8-0x13],?
  41a683:	addr16 icebp 
  41a685:	jnp    0x41a6c6
  41a687:	dec    ecx
  41a688:	ins    DWORD PTR es:[edi],dx
  41a689:	mov    esp,0x9d94c50
  41a68e:	xchg   BYTE PTR [edx+0x240b6f66],al
  41a694:	int    0xda
  41a696:	test   ecx,edx
  41a698:	addr16 jb 0x41a62e
  41a69b:	xor    BYTE PTR [ebp-0x46421de8],al
  41a6a1:	inc    ecx
  41a6a2:	fidiv  WORD PTR [ebp-0x4b]
  41a6a5:	enter  0x193b,0x6
  41a6a9:	cmp    al,0x17
  41a6ab:	repnz pop esi
  41a6ad:	inc    edi
  41a6ae:	nop
  41a6af:	int3   
  41a6b0:	xor    eax,0xb2e123b1
  41a6b5:	scas   eax,DWORD PTR es:[edi]
  41a6b6:	xchg   ebp,eax
  41a6b7:	aam    0x15
  41a6b9:	and    dl,al
  41a6bb:	pop    edx
  41a6bc:	inc    eax
  41a6bd:	pushf  
  41a6be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6bf:	add    DWORD PTR [eax-0x5b584405],edx
  41a6c5:	retf   0x580e
  41a6c8:	daa    
  41a6c9:	add    eax,edx
  41a6cb:	mov    ds:0xc3d080ac,eax
  41a6d0:	and    al,0xf3
  41a6d2:	(bad)  
  41a6d3:	js     0x41a6dc
  41a6d5:	sub    ebp,eax
  41a6d7:	sbb    DWORD PTR [esi],esi
  41a6d9:	into   
  41a6da:	jge    0x41a754
  41a6dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6dd:	rol    edx,cl
  41a6df:	and    eax,0x9b75d762
  41a6e4:	mov    BYTE PTR [ebp-0xe805ad6],al
  41a6ea:	out    dx,eax
  41a6eb:	mov    dl,0x44
  41a6ed:	mov    esp,0xcb3eab8
  41a6f2:	mov    edx,0x6616f296
  41a6f7:	out    dx,eax
  41a6f8:	inc    ebx
  41a6f9:	and    al,0x7d
  41a6fb:	shl    BYTE PTR [eax-0x5f],0x5a
  41a6ff:	test   DWORD PTR [edx+ecx*8-0x4259c250],ecx
  41a706:	push   ebp
  41a707:	sbb    esp,DWORD PTR [edx+0x2de49cfe]
  41a70d:	retf   
  41a70e:	inc    ebx
  41a70f:	and    DWORD PTR [edx+0x76d50b00],edx
  41a715:	gs dec ecx
  41a717:	mul    BYTE PTR [ecx-0x52]
  41a71a:	in     eax,dx
  41a71b:	fild   DWORD PTR [eax+0x295d3e48]
  41a721:	(bad)  
  41a722:	push   ebx
  41a723:	push   ebp
  41a724:	jb     0x41a77c
  41a726:	push   0xfffffff0
  41a728:	mov    cs,WORD PTR [edx+0x7b4ba13d]
  41a72e:	xchg   ebx,eax
  41a72f:	pop    esp
  41a730:	or     bl,BYTE PTR [edx]
  41a732:	loopne 0x41a72f
  41a734:	stc    
  41a735:	(bad)  
  41a737:	push   ss
  41a738:	int3   
  41a739:	std    
  41a73a:	scas   al,BYTE PTR es:[edi]
  41a73b:	jbe    0x41a7a6
  41a73d:	icebp  
  41a73e:	xlat   BYTE PTR ds:[ebx]
  41a73f:	or     eax,0x7afbb67b
  41a744:	ret    0x24e3
  41a747:	lods   al,BYTE PTR ds:[esi]
  41a748:	stos   DWORD PTR es:[edi],eax
  41a749:	mov    ecx,0x87ad9268
  41a74e:	pop    esi
  41a74f:	mov    bh,0xc1
  41a751:	mov    eax,ds:0xe27269e5
  41a756:	fiadd  WORD PTR [edx+edx*2]
  41a759:	xor    BYTE PTR [ebp-0x1c],0xd0
  41a75d:	add    esi,esi
  41a75f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a760:	jnp    0x41a7ac
  41a762:	inc    edi
  41a763:	sub    DWORD PTR [ebp+0x19],esi
  41a766:	and    esp,DWORD PTR [edi-0x5073ecf7]
  41a76c:	stos   DWORD PTR es:[edi],eax
  41a76d:	add    al,0x86
  41a76f:	mov    bl,0x48
  41a771:	pop    ecx
  41a772:	scas   eax,DWORD PTR es:[edi]
  41a773:	cmp    dh,BYTE PTR [edi-0x2f548ca0]
  41a779:	lods   eax,DWORD PTR ds:[esi]
  41a77a:	lods   eax,DWORD PTR ds:[esi]
  41a77b:	call   FWORD PTR [ebp+0xd]
  41a77e:	out    dx,eax
  41a77f:	pop    eax
  41a780:	outs   dx,BYTE PTR ds:[esi]
  41a781:	jmp    0x54d:0xeab97168
  41a788:	fprem  
  41a78a:	out    0x9c,al
  41a78c:	out    dx,al
  41a78d:	pop    edx
  41a78e:	imul   edx,DWORD PTR [esi+0x26],0xffffffc6
  41a792:	loop   0x41a75d
  41a794:	push   esi
  41a795:	(bad)  
  41a796:	fcmovnb st,st(7)
  41a798:	fcomp  QWORD PTR [edx]
  41a79a:	push   esi
  41a79b:	xor    BYTE PTR [ebx],ah
  41a79d:	mov    DWORD PTR [edx+eiz*1],edx
  41a7a0:	inc    ecx
  41a7a1:	mov    edi,0x7ebfe701
  41a7a6:	mov    edx,0x62cb3f0a
  41a7ab:	nop
  41a7ac:	mov    ch,0x8f
  41a7ae:	jb     0x41a7f7
  41a7b0:	xchg   edx,eax
  41a7b1:	in     eax,dx
  41a7b2:	xchg   edi,eax
  41a7b3:	data16 repz adc al,0x10
  41a7b7:	cmp    BYTE PTR [edi-0x10],ch
  41a7ba:	fnstsw WORD PTR ds:0x38f057b2
  41a7c0:	repnz cdq 
  41a7c2:	xchg   BYTE PTR [esi-0x3f],bl
  41a7c5:	sub    ecx,ebx
  41a7c7:	sbb    dh,0xed
  41a7ca:	lods   eax,DWORD PTR ds:[esi]
  41a7cb:	push   ecx
  41a7cc:	pusha  
  41a7cd:	dec    eax
  41a7ce:	fsubr  DWORD PTR [eax-0x3b]
  41a7d1:	clc    
  41a7d2:	pop    ebx
  41a7d3:	inc    edx
  41a7d4:	jl     0x41a77c
  41a7d6:	ins    DWORD PTR es:[edi],dx
  41a7d7:	pop    esp
  41a7d8:	lods   al,BYTE PTR ds:[esi]
  41a7d9:	inc    edi
  41a7da:	pop    esp
  41a7db:	pushf  
  41a7dc:	out    0xed,al
  41a7de:	mov    ds:0x51ec45d5,eax
  41a7e3:	out    dx,al
  41a7e4:	cmp    esi,ecx
  41a7e6:	fstp   QWORD PTR [edi-0x65]
  41a7e9:	add    al,dl
  41a7eb:	hlt    
  41a7ec:	sub    eax,0x76d6057d
  41a7f1:	inc    ebp
  41a7f2:	loope  0x41a7de
  41a7f4:	mov    dh,0xfd
  41a7f6:	dec    ebp
  41a7f7:	sbb    cl,BYTE PTR [ebx]
  41a7f9:	pop    esi
  41a7fa:	mov    edx,0x193b4edb
  41a7ff:	rcr    BYTE PTR [ecx+0x6d619c7a],0x75
  41a806:	fwait
  41a807:	rol    DWORD PTR [ecx],cl
  41a809:	into   
  41a80a:	mov    ?,WORD PTR [eax+0x1c]
  41a80d:	inc    ecx
  41a80e:	inc    edi
  41a80f:	js     0x41a7ef
  41a811:	sub    BYTE PTR [edi-0x7bf239b8],dh
  41a817:	jmp    0x476a0c77
  41a81c:	popa   
  41a81d:	push   eax
  41a81e:	hlt    
  41a81f:	popa   
  41a820:	out    dx,eax
  41a821:	add    al,0x53
  41a823:	pop    es
  41a824:	lea    esp,[ebx+0x579f7812]
  41a82a:	mov    bh,0x1b
  41a82c:	lds    ecx,FWORD PTR [esi+0x6]
  41a82f:	clc    
  41a830:	mov    eax,ebp
  41a832:	inc    ebp
  41a833:	add    BYTE PTR [ecx],dl
  41a835:	repnz lahf 
  41a837:	inc    edx
  41a838:	dec    esi
  41a839:	sbb    DWORD PTR [ebx+0x72],edi
  41a83c:	pop    esi
  41a83d:	nop
  41a83e:	jp     0x41a8a9
  41a840:	add    al,0x45
  41a842:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a843:	mov    dl,0xc6
  41a845:	or     bh,BYTE PTR [eax+eiz*1-0x77]
  41a849:	pop    eax
  41a84a:	sbb    al,0x7a
  41a84c:	dec    esi
  41a84d:	loop   0x41a84f
  41a84f:	test   BYTE PTR [eax+0x10],0x89
  41a853:	outs   dx,DWORD PTR ds:[esi]
  41a854:	pop    edi
  41a855:	or     ebp,DWORD PTR [edx]
  41a857:	retf   0x26cb
  41a85a:	icebp  
  41a85b:	jp     0x41a7ef
  41a85d:	and    ch,BYTE PTR [eax-0x6c343c14]
  41a863:	daa    
  41a864:	add    BYTE PTR [edx],dl
  41a866:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a867:	dec    edx
  41a868:	sbb    DWORD PTR [edx-0x1a],esp
  41a86b:	mov    esi,0x25445c86
  41a870:	sbb    eax,0x5f82feec
  41a875:	dec    eax
  41a876:	ds mov eax,0x5b9c87c0
  41a87c:	(bad)  
  41a87d:	out    dx,eax
  41a87e:	fisubr WORD PTR [eax+0x286ac5a2]
  41a884:	jle    0x41a852
  41a886:	ins    BYTE PTR es:[edi],dx
  41a887:	lock push esp
  41a889:	add    BYTE PTR [ecx-0x786b6279],0xf8
  41a890:	mov    al,0x32
  41a892:	and    ah,ah
  41a894:	lods   eax,DWORD PTR ds:[esi]
  41a895:	enter  0x9792,0x54
  41a899:	aas    
  41a89a:	idiv   DWORD PTR [edx-0x5c]
  41a89d:	adc    esi,DWORD PTR [edx+0x6e]
  41a8a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8a1:	fadd   QWORD PTR [ebx-0x7226e89]
  41a8a7:	inc    esi
  41a8a8:	int3   
  41a8a9:	push   edx
  41a8aa:	fcmovb st,st(0)
  41a8ac:	call   0xe3ea:0x93b55f7c
  41a8b3:	pop    eax
  41a8b4:	in     eax,0x4f
  41a8b6:	fcomp  DWORD PTR [ebx-0x61]
  41a8b9:	js     0x41a93a
  41a8bb:	adc    al,0x1d
  41a8bd:	adc    bh,BYTE PTR [edx+edi*8]
  41a8c0:	repnz sbb BYTE PTR [ebx+0x34ab2a3a],al
  41a8c7:	icebp  
  41a8c8:	sub    bh,BYTE PTR [eax+0x1d]
  41a8cb:	add    BYTE PTR [edi+0x1403a5e6],dl
  41a8d1:	push   esp
  41a8d2:	scas   eax,DWORD PTR es:[edi]
  41a8d3:	xchg   edx,eax
  41a8d4:	jbe    0x41a944
  41a8d6:	push   ss
  41a8d7:	pmullw mm5,mm7
  41a8da:	ret    0xf0
  41a8dd:	mov    ah,0xea
  41a8df:	mov    WORD PTR [esi-0x95f814f],cs
  41a8e5:	mov    ah,0x75
  41a8e7:	imul   ebp,DWORD PTR [ebx],0x94a1535d
  41a8ed:	test   DWORD PTR [edi-0x33],esi
  41a8f0:	jbe    0x41a8fc
  41a8f2:	js     0x41a93d
  41a8f4:	scas   eax,DWORD PTR es:[edi]
  41a8f5:	(bad)  
  41a8f6:	fisttp DWORD PTR [ebx+eax*1+0x23074d5e]
  41a8fd:	push   eax
  41a8fe:	mov    fs,WORD PTR [edx-0x3b]
  41a901:	dec    ecx
  41a902:	and    DWORD PTR [edx],0x1a3d22b3
  41a908:	mov    ecx,esp
  41a90a:	(bad)  
  41a90c:	stos   DWORD PTR es:[edi],eax
  41a90d:	xlat   BYTE PTR ds:[ebx]
  41a90e:	fdivr  QWORD PTR [esi]
  41a910:	sbb    al,al
  41a912:	mov    edx,0xa3491cbe
  41a917:	shr    DWORD PTR [esi+0x28],1
  41a91a:	mov    ah,0x11
  41a91c:	pop    esp
  41a91d:	mov    ah,0xa2
  41a91f:	mov    es,edi
  41a921:	mov    ecx,0xf0b8faf5
  41a926:	ins    DWORD PTR es:[edi],dx
  41a927:	iret   
  41a928:	retf   
  41a929:	ret    
  41a92a:	push   0xc3958d00
  41a92f:	rcl    edi,1
  41a931:	push   cs
  41a932:	add    al,0x35
  41a934:	rcr    DWORD PTR [ecx],cl
  41a936:	hlt    
  41a937:	ret    0xb4f7
  41a93a:	loope  0x41a8f8
  41a93c:	push   eax
  41a93d:	adc    al,0xc5
  41a93f:	jl     0x41a92c
  41a941:	or     al,0xc6
  41a943:	arpl   si,di
  41a945:	repz leave 
  41a947:	mov    al,0xe6
  41a949:	xchg   esp,eax
  41a94a:	(bad)  
  41a94b:	sbb    ch,BYTE PTR [eax+0x4db21dab]
  41a951:	mov    eax,0x6e812758
  41a956:	xor    al,0x42
  41a958:	push   esp
  41a959:	daa    
  41a95a:	(bad)
  41a95f:	mov    ebp,0x450d5bb8
  41a964:	inc    ebp
  41a965:	imul   edx,DWORD PTR [edi+0x52],0xffffffd1
  41a969:	ja     0x41a972
  41a96b:	popa   
  41a96c:	lods   eax,DWORD PTR ds:[esi]
  41a96d:	jb     0x41a95f
  41a96f:	sub    bh,ah
  41a971:	icebp  
  41a972:	mov    esi,0xf8ccd5dd
  41a977:	push   0x72
  41a979:	stos   DWORD PTR es:[edi],eax
  41a97a:	dec    ecx
  41a97b:	rcr    DWORD PTR ds:0x1168ad3,1
  41a981:	xchg   edi,eax
  41a982:	cld    
  41a983:	(bad)  
  41a984:	popa   
  41a985:	dec    ecx
  41a986:	push   ss
  41a987:	test   al,0xe1
  41a989:	stos   DWORD PTR es:[edi],eax
  41a98a:	(bad)  
  41a98b:	aam    0x22
  41a98d:	lods   eax,DWORD PTR ds:[esi]
  41a98e:	inc    edx
  41a98f:	adc    DWORD PTR [edx],edi
  41a991:	dec    ecx
  41a992:	sub    esi,esp
  41a994:	arpl   sp,dx
  41a996:	and    DWORD PTR [edi+0x7076d820],edi
  41a99c:	add    eax,0x9149ff73
  41a9a1:	lahf   
  41a9a2:	jns    0x41a95e
  41a9a4:	xor    al,0x28
  41a9a6:	xor    cl,BYTE PTR [ebp-0xcb59a61]
  41a9ac:	pop    es
  41a9ad:	dec    esp
  41a9ae:	xchg   esi,eax
  41a9af:	mov    eax,0xaa5743a8
  41a9b4:	inc    edi
  41a9b5:	call   DWORD PTR [ecx-0x1d]
  41a9b8:	cmc    
  41a9b9:	sar    DWORD PTR [esi-0x5c9c15d1],1
  41a9bf:	stc    
  41a9c0:	pop    esp
  41a9c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9c3:	out    0xf5,al
  41a9c5:	mov    al,ds:0x871c4d4a
  41a9ca:	adc    edx,0xffffffc1
  41a9cd:	mov    eax,0x6a519bd9
  41a9d2:	dec    ebx
  41a9d3:	ins    DWORD PTR es:[edi],dx
  41a9d4:	add    DWORD PTR [ebx],eax
  41a9d6:	push   edi
  41a9d7:	xor    BYTE PTR [esi-0xf],dl
  41a9da:	scas   al,BYTE PTR es:[edi]
  41a9db:	push   es
  41a9dc:	add    al,0x5f
  41a9de:	push   edi
  41a9df:	lods   eax,DWORD PTR ds:[esi]
  41a9e0:	fisub  WORD PTR [ebp+0x6e]
  41a9e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9e4:	push   ecx
  41a9e5:	fcomip st,st(6)
  41a9e7:	xchg   esp,eax
  41a9e8:	inc    edi
  41a9e9:	fsubp  st(3),st
  41a9eb:	iret   
  41a9ec:	xor    eax,0xf460d006
  41a9f1:	(bad)  
  41a9f2:	xchg   ecx,eax
  41a9f3:	loope  0x41aa71
  41a9f5:	cmp    eax,DWORD PTR [ebx-0x54]
  41a9f8:	push   esp
  41a9f9:	dec    edi
  41a9fa:	xchg   esp,eax
  41a9fb:	call   FWORD PTR [ebx]
  41a9fd:	popa   
  41a9fe:	mov    al,0x3d
  41aa00:	enter  0x7022,0x45
  41aa04:	ja     0x41aa1b
  41aa06:	add    DWORD PTR [eax-0x7f51986c],0xffffffc7
  41aa0d:	mov    dl,0xc
  41aa0f:	call   0xf90d:0x6bdd6776
  41aa16:	dec    ebp
  41aa17:	xchg   edx,eax
  41aa18:	aad    0x79
  41aa1a:	and    eax,0x4f
  41aa1d:	fild   QWORD PTR [eax]
  41aa1f:	jno    0x41aa01
  41aa21:	fwait
  41aa22:	push   ds
  41aa23:	or     esp,DWORD PTR [ecx-0x52de7482]
  41aa29:	retf   
  41aa2a:	fimul  WORD PTR [edi]
  41aa2c:	sbb    eax,0x8a32bd43
  41aa31:	inc    ecx
  41aa32:	xor    ebx,eax
  41aa34:	rcl    DWORD PTR [eax-0x75da2953],cl
  41aa3a:	fadd   st,st(6)
  41aa3c:	and    eax,0xd1f13488
  41aa41:	mov    al,0xb1
  41aa43:	ror    BYTE PTR [esi],cl
  41aa45:	sar    DWORD PTR [eax],1
  41aa47:	dec    edi
  41aa48:	dec    ecx
  41aa49:	loopne 0x41aa7a
  41aa4b:	dec    esp
  41aa4c:	mov    ds:0xc183e814,eax
  41aa51:	ret    0xeeb9
  41aa54:	xor    eax,0x5ca73586
  41aa59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa5a:	push   eax
  41aa5b:	dec    edi
  41aa5c:	test   ecx,edi
  41aa5e:	jmp    0x41aa98
  41aa60:	rol    DWORD PTR [bx+di-0x262a],0xd7
  41aa66:	int3   
  41aa67:	adc    ebx,DWORD PTR [ebx]
  41aa69:	hlt    
  41aa6a:	cwde   
  41aa6b:	lea    ebx,[edi+0x740a9528]
  41aa71:	jnp    0x41aa12
  41aa73:	jl     0x41aa1e
  41aa75:	mov    eax,0x913a1d47
  41aa7a:	in     al,dx
  41aa7b:	adc    ch,al
  41aa7d:	test   BYTE PTR [edi],0x5b
  41aa80:	dec    edi
  41aa81:	pop    ebx
  41aa82:	dec    edi
  41aa83:	int    0x8d
  41aa85:	retf   
  41aa86:	push   esi
  41aa87:	imul   BYTE PTR [ecx]
  41aa89:	or     BYTE PTR [ecx],ah
  41aa8b:	jecxz  0x41aaf6
  41aa8d:	in     al,0x22
  41aa8f:	fsubr  st,st(1)
  41aa91:	sub    al,0xca
  41aa93:	mov    cl,0xb2
  41aa95:	xor    ch,ch
  41aa97:	outs   dx,BYTE PTR ds:[esi]
  41aa98:	aas    
  41aa99:	fisubr DWORD PTR [ecx+eiz*1]
  41aa9c:	popa   
  41aa9d:	sub    dh,BYTE PTR [eax+0x6fcb7c29]
  41aaa3:	adc    BYTE PTR [ecx],ch
  41aaa5:	out    0xc4,al
  41aaa7:	mov    ebx,0x1ee63aa6
  41aaac:	ins    DWORD PTR es:[edi],dx
  41aaad:	pop    ebx
  41aaae:	(bad)  
  41aaaf:	in     al,0x3e
  41aab1:	ret    0x396e
  41aab4:	retf   
  41aab5:	out    dx,eax
  41aab6:	sub    DWORD PTR [ebp+0x50],ebp
  41aab9:	xor    dh,BYTE PTR [ebx+0x1fba04e3]
  41aabf:	xchg   esp,eax
  41aac0:	jb     0x41aab6
  41aac2:	retf   0x173f
  41aac5:	test   cl,cl
  41aac7:	cdq    
  41aac8:	xchg   ecx,eax
  41aac9:	cmp    eax,0x3df1506a
  41aace:	mov    eax,DWORD PTR [edx+edx*4-0x6251c245]
  41aad5:	in     eax,dx
  41aad6:	sub    eax,ecx
  41aad8:	inc    eax
  41aad9:	pusha  
  41aada:	mov    al,ds:0x5157a3b5
  41aadf:	shr    DWORD PTR [esi-0x51efd0b1],cl
  41aae5:	in     eax,0xa3
  41aae7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aae8:	outs   dx,DWORD PTR ds:[esi]
  41aae9:	sbb    BYTE PTR [edx+0x1be307e2],ah
  41aaef:	scas   al,BYTE PTR es:[edi]
  41aaf0:	call   0xc482:0x9987828f
  41aaf7:	cmp    eax,0x4c218876
  41aafc:	cmp    eax,0x24c158f0
  41ab01:	jmp    0x65e60e30
  41ab06:	adc    eax,0x5603e302
  41ab0b:	(bad)  
  41ab0c:	cmp    BYTE PTR [eax+0x721c774e],ah
  41ab12:	stc    
  41ab13:	cmp    ah,ch
  41ab15:	out    0xf9,al
  41ab17:	inc    ecx
  41ab18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab19:	sbb    edx,ebx
  41ab1b:	or     eax,0x6cef8f99
  41ab20:	pusha  
  41ab21:	pop    ecx
  41ab22:	push   0x22e28006
  41ab27:	inc    ebx
  41ab28:	scas   eax,DWORD PTR es:[edi]
  41ab29:	pusha  
  41ab2a:	ds inc edi
  41ab2c:	das    
  41ab2d:	imul   edx,DWORD PTR [ebp-0x56adbe88],0x73
  41ab34:	mov    ecx,0x13224f03
  41ab3a:	adc    DWORD PTR [edx+0x6b],edi
  41ab3d:	loopne 0x41ab3d
  41ab3f:	add    ecx,edx
  41ab41:	pop    edi
  41ab42:	ret    0x21
  41ab45:	lds    esp,FWORD PTR [bp+0x6f]
  41ab49:	mov    bh,0x78
  41ab4b:	out    dx,eax
  41ab4c:	ins    BYTE PTR es:[edi],dx
  41ab4d:	dec    esp
  41ab4e:	and    al,0xc4
  41ab50:	xor    ebx,edi
  41ab52:	test   al,0x75
  41ab54:	(bad)  
  41ab55:	mov    eax,ds:0x27ee265d
  41ab5a:	mov    ebp,DWORD PTR [ebp+edx*2-0x56]
  41ab5e:	jbe    0x41ab37
  41ab60:	int    0x40
  41ab62:	ror    dl,cl
  41ab64:	inc    BYTE PTR [eax+0x4d]
  41ab67:	mov    bh,0x45
  41ab69:	sub    dh,bh
  41ab6b:	lahf   
  41ab6c:	out    dx,eax
  41ab6d:	sub    ebp,DWORD PTR [edx]
  41ab6f:	ja     0x41ab5f
  41ab71:	mov    ds:0x8a0a23fa,al
  41ab76:	dec    esp
  41ab77:	(bad)  
  41ab78:	cdq    
  41ab79:	popa   
  41ab7a:	in     al,dx
  41ab7b:	dec    ecx
  41ab7c:	sahf   
  41ab7d:	mov    cl,0x95
  41ab7f:	in     eax,0xb7
  41ab81:	inc    eax
  41ab82:	sbb    eax,0x767e1847
  41ab87:	add    ecx,ecx
  41ab89:	cmp    BYTE PTR [ebp-0x1b],ch
  41ab8c:	lea    esp,[edx]
  41ab8e:	sahf   
  41ab8f:	push   esp
  41ab90:	lahf   
  41ab91:	aam    0xd5
  41ab93:	cwde   
  41ab94:	mov    edx,0x78e2a5bf
  41ab99:	sub    DWORD PTR ds:0xbf93163d,0x9d264cc9
  41aba3:	push   ebp
  41aba4:	das    
  41aba5:	sbb    BYTE PTR [esi+esi*8+0x77c47fb7],bh
  41abac:	push   esp
  41abad:	and    dh,BYTE PTR [ebx-0x3e]
  41abb0:	ins    BYTE PTR es:[edi],dx
  41abb1:	adc    eax,0x2b0d9b6d
  41abb6:	xchg   ecx,eax
  41abb7:	(bad)  
  41abb8:	lahf   
  41abb9:	fbld   TBYTE PTR [edx]
  41abbb:	mov    ebx,0x9d08b75b
  41abc0:	jb     0x41ac1a
  41abc2:	jecxz  0x41ac34
  41abc4:	dec    ecx
  41abc5:	mov    DWORD PTR [eax+0xaae223a],eax
  41abcb:	pop    ss
  41abcc:	jge    0x41abe0
  41abce:	cmp    esp,DWORD PTR ss:[esi]
  41abd1:	imul   eax,DWORD PTR [edx+0x51],0x67
  41abd5:	jl     0x41ac50
  41abd7:	not    ecx
  41abd9:	shl    edx,cl
  41abdb:	in     eax,dx
  41abdc:	mov    ch,0xa1
  41abde:	push   esi
  41abdf:	stc    
  41abe0:	loop   0x41ac06
  41abe2:	loop   0x41abcb
  41abe4:	adc    DWORD PTR [edi-0x12],esp
  41abe7:	xchg   edi,eax
  41abe8:	add    al,0x53
  41abea:	cs dec eax
  41abec:	scas   eax,DWORD PTR es:[edi]
  41abed:	jp     0x41ac2f
  41abef:	or     BYTE PTR [edx],0x3e
  41abf2:	add    DWORD PTR ds:0xceb7c6f6,esi
  41abf8:	sti    
  41abf9:	jb     0x41ac04
  41abfb:	loopne 0x41abf2
  41abfd:	repz or ch,ah
  41ac00:	lds    eax,FWORD PTR [edx]
  41ac02:	push   ds
  41ac03:	imul   eax,eax,0x9fb5ae5d
  41ac09:	cmp    al,0xad
  41ac0b:	mov    DWORD PTR [eax-0x30ae8477],0xc0b812e6
  41ac15:	push   0x1ba9279d
  41ac1a:	push   esp
  41ac1b:	loope  0x41abc3
  41ac1d:	enter  0x27bb,0xdb
  41ac21:	pop    edi
  41ac22:	call   0x2754:0x54c2ee6f
  41ac29:	mov    dh,0x6a
  41ac2b:	ret    0x8b10
  41ac2e:	jmp    0x2bdc3e14
  41ac33:	pusha  
  41ac34:	push   edi
  41ac35:	int3   
  41ac36:	dec    eax
  41ac37:	mov    edx,0xdb4f3a9b
  41ac3c:	test   DWORD PTR [edx-0x2fa1251e],ebp
  41ac42:	xchg   BYTE PTR [edi+0x735cacd0],bh
  41ac48:	data16 das 
  41ac4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac4b:	arpl   WORD PTR [ebx+0x3869031d],cx
  41ac51:	imul   edx,DWORD PTR [ebx+0x503184a6],0xffffff8f
  41ac58:	jae    0x41ac89
  41ac5a:	xchg   ecx,eax
  41ac5b:	mov    ds:0x2d4522ac,eax
  41ac60:	sti    
  41ac61:	pop    ds
  41ac62:	int3   
  41ac63:	sub    eax,0xe770a010
  41ac68:	call   0xf8c3ffc5
  41ac6d:	pop    eax
  41ac6e:	pop    ebp
  41ac6f:	dec    ecx
  41ac70:	push   ds
  41ac71:	mov    bl,0x67
  41ac73:	push   0xffffffac
  41ac75:	(bad)  
  41ac76:	or     DWORD PTR [ecx*4+0x14a2295e],esi
  41ac7d:	lea    eax,[eax+0x5a]
  41ac80:	jle    0x41ac55
  41ac82:	push   cs
  41ac83:	lods   eax,DWORD PTR ds:[esi]
  41ac84:	xchg   ebp,eax
  41ac85:	xor    al,0x5
  41ac87:	fwait
  41ac88:	cmp    BYTE PTR [esi],dh
  41ac8a:	mov    bh,0xc4
  41ac8c:	cmc    
  41ac8d:	add    eax,0x687ed845
  41ac92:	jl     0x41ac88
  41ac94:	xor    eax,0x5c47826d
  41ac99:	fcmovnu st,st(0)
  41ac9b:	popf   
  41ac9c:	repz push ecx
  41ac9e:	fst    DWORD PTR [ecx+0x6585e2bc]
  41aca4:	and    esp,DWORD PTR [edi-0x259e099f]
  41acaa:	pop    ds
  41acab:	or     eax,0x948ab0b6
  41acb0:	fsubr  QWORD PTR [ebp+0x17]
  41acb3:	in     al,0xd2
  41acb5:	sub    eax,0x47738c47
  41acba:	lods   al,BYTE PTR ds:[esi]
  41acbb:	scas   eax,DWORD PTR es:[edi]
  41acbc:	lods   eax,DWORD PTR ds:[esi]
  41acbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acbe:	repz addr16 test al,0xe3
  41acc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acc3:	xchg   BYTE PTR [ecx-0x49],bh
  41acc6:	fist   DWORD PTR [ecx-0x8]
  41acc9:	push   ecx
  41acca:	mov    eax,ds:0x606e90f7
  41accf:	pop    eax
  41acd0:	test   eax,eax
  41acd2:	into   
  41acd3:	jb     0x41ad1e
  41acd5:	mov    cl,0xec
  41acd7:	ins    DWORD PTR es:[edi],dx
  41acd8:	mov    eax,0xea38f49a
  41acdd:	add    eax,0xcf9bfe9
  41ace2:	sub    al,BYTE PTR [eax]
  41ace4:	push   edx
  41ace5:	(bad)  
  41ace6:	hlt    
  41ace7:	in     al,0x12
  41ace9:	or     cl,al
  41aceb:	jb     0x41aca5
  41aced:	jg     0x41ad1f
  41acef:	in     al,dx
  41acf0:	add    DWORD PTR [edx],edi
  41acf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acf3:	mov    ecx,0x4a2f017d
  41acf8:	fild   WORD PTR [eax]
  41acfa:	sub    dh,BYTE PTR [edx-0x3db4adb5]
  41ad00:	mov    dl,0x5a
  41ad02:	inc    esi
  41ad03:	lods   eax,DWORD PTR ds:[esi]
  41ad04:	sar    DWORD PTR [esi-0x35],0x54
  41ad08:	push   eax
  41ad09:	add    eax,edi
  41ad0b:	xor    DWORD PTR [eax+0x6478eaa6],edx
  41ad11:	ja     0x41ad31
  41ad13:	rcr    DWORD PTR [edx+0x60],cl
  41ad16:	sbb    al,0xa0
  41ad18:	jmp    0x82d7:0xc4eabbb9
  41ad1f:	xchg   esi,eax
  41ad20:	rol    ecx,cl
  41ad22:	mov    eax,ds:0xc10b1440
  41ad27:	test   eax,0xc539f030
  41ad2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad2d:	in     al,dx
  41ad2e:	push   ds
  41ad2f:	add    ebp,DWORD PTR [esi+0x582bf675]
  41ad35:	add    BYTE PTR [eax],bh
  41ad37:	pop    ax
  41ad39:	popf   
  41ad3a:	and    al,BYTE PTR es:[ecx]
  41ad3d:	add    eax,ecx
  41ad3f:	repnz out 0xf6,al
  41ad42:	fcomp  DWORD PTR [ebp+0x1f]
  41ad45:	jecxz  0x41ad81
  41ad47:	cmp    eax,0xb016952f
  41ad4c:	jns    0x41ace0
  41ad4e:	inc    esp
  41ad4f:	or     ch,bh
  41ad51:	lods   eax,DWORD PTR ds:[esi]
  41ad52:	out    0xa1,al
  41ad54:	mov    edx,0x736d1337
  41ad59:	and    BYTE PTR [esi+0x2c6a1491],ah
  41ad5f:	inc    esi
  41ad60:	inc    esp
  41ad61:	jmp    0x202fbc9a
  41ad66:	mov    ch,0x6e
  41ad68:	cwde   
  41ad69:	std    
  41ad6a:	call   0x4433:0x14e07fef
  41ad71:	push   0x1d
  41ad73:	cmp    bh,BYTE PTR [edx+0x18]
  41ad76:	lahf   
  41ad77:	xchg   ebx,eax
  41ad78:	mov    eax,0x5ae6fe91
  41ad7d:	stc    
  41ad7e:	xchg   ebx,eax
  41ad7f:	pop    ebx
  41ad80:	int3   
  41ad81:	inc    eax
  41ad82:	rcl    bl,0xe3
  41ad85:	ror    BYTE PTR [eax+edi*4+0x1fa1d843],1
  41ad8c:	(bad)  
  41ad8d:	mov    dh,0x2e
  41ad8f:	call   0x727e:0x472fd03b
  41ad96:	cmp    ebx,DWORD PTR [edi-0x188b9741]
  41ad9c:	retf   0xc56e
  41ad9f:	sub    DWORD PTR [edi-0x2c],0x659a3acc
  41ada6:	cmp    BYTE PTR [eax],bl
  41ada8:	hlt    
  41ada9:	aam    0xa5
  41adab:	mov    WORD PTR [ecx],?
  41adad:	dec    edi
  41adae:	out    0xed,eax
  41adb0:	pop    esi
  41adb1:	outs   dx,DWORD PTR ds:[esi]
  41adb2:	xchg   DWORD PTR [esi+0x79f30e5a],esi
  41adb8:	scas   al,BYTE PTR es:[edi]
  41adb9:	lods   al,BYTE PTR ds:[esi]
  41adba:	push   eax
  41adbb:	dec    edi
  41adbc:	add    bl,BYTE PTR [edi+0x25e83169]
  41adc2:	pop    eax
  41adc3:	xchg   edx,eax
  41adc4:	aas    
  41adc5:	mov    cl,0x46
  41adc7:	pop    esp
  41adc8:	mov    esi,0xd92c89d2
  41adcd:	ret    
  41adce:	jns    0x41adea
  41add0:	fsub   QWORD PTR [edi-0x2c8eb2af]
  41add6:	xchg   ecx,eax
  41add7:	test   BYTE PTR [ebx+0x48],bh
  41adda:	adc    bh,BYTE PTR [ebp+0x4ac458b9]
  41ade0:	mov    cl,0x34
  41ade2:	cmp    BYTE PTR [edx+0xa],al
  41ade5:	repnz dec eax
  41ade7:	add    ebp,DWORD PTR fs:[edi+eax*1]
  41adeb:	jmp    0xe62b8178
  41adf0:	outs   dx,BYTE PTR ds:[esi]
  41adf1:	out    dx,eax
  41adf2:	inc    eax
  41adf3:	sub    al,0xa5
  41adf5:	push   es
  41adf6:	ja     0x72b21318
  41adfc:	or     ebp,ecx
  41adfe:	lock xchg esp,eax
  41ae00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae01:	sbb    al,0x87
  41ae03:	out    0x43,al
  41ae05:	xchg   edi,eax
  41ae06:	mov    dh,0x54
  41ae08:	mov    edi,esp
  41ae0a:	inc    ecx
  41ae0b:	icebp  
  41ae0c:	test   al,0x56
  41ae0e:	retf   0x119f
  41ae11:	jo     0x41adb9
  41ae13:	pop    ebx
  41ae14:	or     edx,DWORD PTR [esi]
  41ae16:	dec    ecx
  41ae17:	les    ecx,FWORD PTR [eax+0x681a66fa]
  41ae1d:	(bad)  
  41ae1f:	rcl    al,0xb9
  41ae22:	fwait
  41ae23:	in     al,0xcd
  41ae25:	or     eax,0xc24edc3
  41ae2a:	xor    BYTE PTR [ebx-0x2f],0x70
  41ae2e:	sub    bh,ah
  41ae30:	inc    esp
  41ae31:	add    DWORD PTR [edx],esp
  41ae33:	mov    ecx,0xfe743559
  41ae38:	push   ds
  41ae39:	aas    
  41ae3a:	jecxz  0x41ae07
  41ae3c:	mov    al,ds:0xe0fac09c
  41ae41:	in     eax,0x1a
  41ae43:	cwde   
  41ae44:	cld    
  41ae45:	js     0x41ae04
  41ae47:	outs   dx,BYTE PTR ds:[esi]
  41ae48:	push   ss
  41ae49:	inc    ebx
  41ae4a:	enter  0xbf42,0x64
  41ae4e:	push   ds
  41ae4f:	and    edx,ebx
  41ae51:	lock popa 
  41ae53:	lahf   
  41ae54:	sub    al,0x9c
  41ae56:	mov    esp,DWORD PTR [eax-0x2f431913]
  41ae5c:	adc    esi,ebp
  41ae5e:	pop    esp
  41ae5f:	adc    DWORD PTR [ebx],ecx
  41ae61:	retf   
  41ae62:	div    BYTE PTR [esi-0x4e]
  41ae65:	sbb    al,0x62
  41ae67:	pop    ebp
  41ae68:	xchg   ecx,eax
  41ae69:	(bad)  
  41ae6a:	ss jnp 0x41ae04
  41ae6d:	dec    ebp
  41ae6e:	rol    BYTE PTR [ecx-0xfa84eb9],0xb7
  41ae75:	mov    ch,0x17
  41ae77:	and    ah,BYTE PTR [edx]
  41ae79:	push   ss
  41ae7a:	(bad)  
  41ae7b:	sub    BYTE PTR [edx+0x2c],cl
  41ae7e:	inc    edi
  41ae7f:	and    edi,DWORD PTR [esi]
  41ae81:	mov    ch,0x33
  41ae83:	sub    DWORD PTR [ecx+0x20],esp
  41ae86:	cmp    ecx,eax
  41ae88:	add    al,0xf7
  41ae8a:	stos   DWORD PTR es:[edi],eax
  41ae8b:	push   ebx
  41ae8c:	xor    BYTE PTR [eax],dh
  41ae8e:	push   edx
  41ae8f:	mov    ebx,0x9812ab88
  41ae94:	add    al,0x7f
  41ae96:	adc    al,0xd
  41ae98:	pop    esp
  41ae99:	iret   
  41ae9a:	enter  0x5b84,0xbd
  41ae9e:	xchg   DWORD PTR [ecx],ebx
  41aea0:	or     DWORD PTR [edx],ebp
  41aea2:	ins    DWORD PTR es:[edi],dx
  41aea3:	sbb    al,0x17
  41aea5:	sahf   
  41aea6:	outs   dx,BYTE PTR ds:[esi]
  41aea7:	pop    ecx
  41aea8:	and    cl,bh
  41aeaa:	scas   al,BYTE PTR es:[edi]
  41aeab:	jmp    FWORD PTR [ebp+0x2c]
  41aeae:	fcomip st,st(3)
  41aeb0:	or     eax,0x3a69727f
  41aeb5:	shr    DWORD PTR [eax-0x3278643],0xbc
  41aebc:	inc    BYTE PTR [ebx+0x78]
  41aebf:	xor    al,0x13
  41aec1:	repnz call 0x97fd:0xe4e2c256
  41aec9:	in     eax,dx
  41aeca:	je     0x41af08
  41aecc:	mov    bh,0x5f
  41aece:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aecf:	std    
  41aed0:	repnz add al,0x14
  41aed3:	mov    eax,0x5833b9e7
  41aed8:	jb     0x41af4a
  41aeda:	sahf   
  41aedb:	cmp    ebp,DWORD PTR [eax]
  41aedd:	aad    0xaf
  41aedf:	test   al,0xe6
  41aee1:	das    
  41aee2:	mov    ds:0x2c4a72a6,al
  41aee7:	imul   ebp,DWORD PTR [ebx+0x73596abe],0xffffffd7
  41aeee:	mov    bh,0xac
  41aef0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aef1:	sbb    edx,eax
  41aef3:	inc    esi
  41aef4:	inc    ebp
  41aef5:	clc    
  41aef6:	lods   al,BYTE PTR ds:[esi]
  41aef7:	jns    0x41af1c
  41aef9:	mov    esi,ebp
  41aefb:	push   ss
  41aefc:	jmp    0x1d04:0x8a446ca5
  41af03:	push   0x28
  41af05:	clc    
  41af06:	dec    esp
  41af07:	std    
  41af08:	push   0xc1a57ea1
  41af0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af0e:	ret    0xd6b5
  41af11:	jle    0x41af7d
  41af13:	(bad)  
  41af14:	mov    ebp,0x3385adc7
  41af19:	(bad)  
  41af1a:	stc    
  41af1b:	fild   DWORD PTR [ecx+0x21]
  41af1e:	ins    BYTE PTR es:[edi],dx
  41af1f:	wrmsr  
  41af21:	stc    
  41af22:	aam    0xd0
  41af24:	pop    edx
  41af25:	adc    dh,ah
  41af27:	adc    ebx,DWORD PTR [ebp-0x44]
  41af2a:	retf   
  41af2b:	xchg   DWORD PTR [eax-0x3d],ebx
  41af2e:	or     eax,0xba396c16
  41af33:	pop    ds
  41af34:	out    0x3e,al
  41af36:	retf   0x6193
  41af39:	ds aaa 
  41af3b:	sbb    al,0x5a
  41af3d:	pop    ebp
  41af3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af3f:	xchg   esp,eax
  41af40:	retf   0xff79
  41af43:	xor    BYTE PTR [esi],ch
  41af45:	gs dec edi
  41af47:	mov    cl,0xbf
  41af49:	push   edx
  41af4a:	inc    edi
  41af4b:	or     bl,ch
  41af4d:	imul   ecx,DWORD PTR [eax-0x1e],0xffffffb7
  41af51:	repz les ebx,FWORD PTR [ebp-0x7a]
  41af55:	mul    DWORD PTR [eax]
  41af57:	and    dh,dh
  41af59:	in     al,0x11
  41af5b:	jp     0x41af2e
  41af5d:	jmp    0x8cd772b6
  41af62:	xor    DWORD PTR fs:[edi],eax
  41af65:	in     al,dx
  41af66:	hlt    
  41af67:	add    BYTE PTR ds:0xedc09a24,0x6f
  41af6e:	int    0x25
  41af70:	test   DWORD PTR [edx+0x4607bc91],esp
  41af76:	xchg   esp,eax
  41af77:	adc    al,0xd2
  41af79:	test   al,0xff
  41af7b:	test   DWORD PTR [esp+edx*4-0x3bd99d13],esp
  41af82:	push   edi
  41af83:	add    cl,BYTE PTR [esi+0x2c820ca5]
  41af89:	mov    cl,0xff
  41af8b:	and    BYTE PTR [edi+ebp*1],dh
  41af8e:	mov    bl,0x6
  41af90:	xor    eax,0xc932561b
  41af95:	adc    DWORD PTR [ebx+0x7e4bdd9f],eax
  41af9b:	mov    bl,0x33
  41af9d:	jle    0x41af54
  41af9f:	les    ebx,FWORD PTR [ebx]
  41afa1:	push   es
  41afa2:	js     0x41af75
  41afa4:	push   0x66
  41afa6:	and    DWORD PTR [ebx+0x2bf7afb0],ebp
  41afac:	inc    ecx
  41afad:	or     BYTE PTR es:[ebx+0x52a3b3e7],ch
  41afb4:	ret    0x613b
  41afb7:	mov    eax,0x3ed23d17
  41afbc:	fsub   DWORD PTR [edi+0x30]
  41afbf:	pop    edi
  41afc0:	sbb    DWORD PTR [eax],eax
  41afc2:	adc    DWORD PTR [ecx+edi*1-0x28],edx
  41afc6:	out    dx,eax
  41afc7:	add    eax,0x988912d6
  41afcc:	adc    BYTE PTR [edi-0x73],ch
  41afcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afd0:	add    edx,DWORD PTR [ebp+0x315d573f]
  41afd6:	std    
  41afd7:	out    0xfe,al
  41afd9:	(bad)  
  41afda:	push   esi
  41afdb:	mov    BYTE PTR [esi],0x73
  41afde:	imul   ebp,DWORD PTR [ebp+0x4e],0x4193fa17
  41afe5:	fnstenv [ecx]
  41afe7:	and    esi,edi
  41afe9:	(bad)
  41afed:	sub    dh,dl
  41afef:	sar    BYTE PTR [edi+0x4a355404],1
  41aff5:	mov    bl,0xca
  41aff7:	iret   
  41aff8:	push   esp
  41aff9:	daa    
  41affa:	push   cs
  41affb:	addr16 pop ecx
  41affd:	pop    edx
  41affe:	add    esi,0x35f1dc76
  41b004:	arpl   WORD PTR ds:0xca2f3a18,ax
  41b00a:	mov    DWORD PTR [ebp-0x788159a3],0x33b6b6d7
  41b014:	mov    cl,al
  41b016:	jmp    0x9314:0x84a06b29
  41b01d:	std    
  41b01e:	fcom   QWORD PTR [ebx+0x5]
  41b021:	cwde   
  41b022:	shr    BYTE PTR [esp+ecx*8+0x19f63c74],cl
  41b029:	ja     0x41b072
  41b02b:	sub    al,0x5
  41b02d:	sub    eax,0x56065b0f
  41b032:	imul   edx,ecx,0x2726c3c8
  41b038:	aas    
  41b039:	jne    0x41b05a
  41b03b:	xchg   esp,eax
  41b03c:	(bad)  
  41b03d:	mov    esp,0x4cca89ee
  41b042:	ins    DWORD PTR es:[edi],dx
  41b043:	jne    0x41b016
  41b045:	sub    ebx,0xc3b0b5a1
  41b04b:	cdq    
  41b04c:	call   0xfb6ebeb2
  41b051:	mov    fs,WORD PTR [ecx-0x80]
  41b054:	jo     0x41b0b8
  41b056:	jo     0x41b09f
  41b058:	xchg   ebp,eax
  41b059:	inc    esp
  41b05a:	sub    dl,BYTE PTR [ebp-0xf]
  41b05d:	mov    esi,0x20802dd6
  41b062:	push   es
  41b063:	mov    esp,0x7a4c1cb2
  41b068:	adc    dh,dl
  41b06a:	pop    eax
  41b06b:	sahf   
  41b06c:	pop    ebp
  41b06d:	loope  0x41b0b2
  41b06f:	jb     0x41b02e
  41b071:	jb     0x41b027
  41b073:	adc    eax,0xbaa3bbef
  41b078:	sub    bl,BYTE PTR [edx]
  41b07a:	sbb    DWORD PTR [esi],esi
  41b07c:	adc    BYTE PTR [eax],al
  41b07e:	ret    0x9f4a
  41b081:	pop    ecx
  41b082:	popf   
  41b083:	jb     0x41b0f7
  41b085:	mov    edx,0x798a7078
  41b08a:	shl    BYTE PTR [esi],0x32
  41b08d:	sub    BYTE PTR [esi+eiz*8+0x5f8fbeed],bh
  41b094:	inc    eax
  41b095:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b096:	fwait
  41b097:	test   BYTE PTR [ebx],dl
  41b099:	dec    ecx
  41b09a:	and    DWORD PTR [eax-0x58],ebp
  41b09d:	mov    edi,0xd9d92ca7
  41b0a2:	pop    ss
  41b0a3:	and    ebp,DWORD PTR [esi]
  41b0a5:	inc    edx
  41b0a6:	dec    edx
  41b0a7:	pop    ds
  41b0a8:	pop    ss
  41b0a9:	mov    cl,0xef
  41b0ab:	push   cs
  41b0ac:	xchg   edx,eax
  41b0ad:	push   es
  41b0ae:	int    0x4b
  41b0b0:	ss ss push ebx
  41b0b3:	sbb    bh,0xf
  41b0b6:	inc    ecx
  41b0b7:	push   0xffffffdf
  41b0b9:	pop    es
  41b0ba:	pop    es
  41b0bb:	outs   dx,DWORD PTR ds:[esi]
  41b0bc:	mov    eax,0x72155267
  41b0c1:	pop    ebx
  41b0c2:	outs   dx,BYTE PTR ds:[esi]
  41b0c3:	cmp    DWORD PTR [edi-0x80],ebx
  41b0c6:	mov    dh,0xa6
  41b0c8:	xchg   edx,eax
  41b0c9:	lods   al,BYTE PTR ds:[esi]
  41b0ca:	into   
  41b0cb:	scas   al,BYTE PTR es:[edi]
  41b0cc:	push   0x8b0552d4
  41b0d1:	mov    dh,BYTE PTR ds:0xfa399028
  41b0d7:	stc    
  41b0d8:	mov    edx,0xc930f3fa
  41b0dd:	dec    ebp
  41b0de:	or     al,BYTE PTR [ebp+0x74]
  41b0e1:	popa   
  41b0e2:	sub    eax,0xcf925639
  41b0e7:	adc    ebx,ecx
  41b0e9:	ds push edi
  41b0eb:	xchg   BYTE PTR [ecx],cl
  41b0ed:	fld    QWORD PTR [ebp+0x5b280dc5]
  41b0f3:	or     al,0x7e
  41b0f5:	mov    DWORD PTR [ebx+0x6e],ebp
  41b0f8:	and    DWORD PTR [edx+eiz*8+0x63be3ff6],esi
  41b0ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b100:	mov    ebx,0x5e6679c5
  41b105:	or     DWORD PTR [eax-0x61],edx
  41b108:	xchg   ecx,eax
  41b109:	mov    bh,0xef
  41b10b:	stos   DWORD PTR es:[edi],eax
  41b10c:	stos   BYTE PTR es:[edi],al
  41b10d:	mov    bl,0xbc
  41b10f:	call   0x2078:0x8f77bb31
  41b116:	jmp    0x66a0:0xcbd0df86
  41b11d:	add    ebp,DWORD PTR [edx]
  41b11f:	push   ss
  41b120:	pop    ecx
  41b121:	outs   dx,DWORD PTR ds:[esi]
  41b122:	test   eax,0xb28436da
  41b127:	pop    eax
  41b128:	inc    eax
  41b129:	mov    al,BYTE PTR [ecx-0x47608894]
  41b12f:	cmp    eax,0x5596a0e5
  41b134:	xor    esp,DWORD PTR [esi+0x17]
  41b137:	adc    ebx,esp
  41b139:	mov    bl,0x2c
  41b13b:	sbb    eax,0x5435f66a
  41b140:	hlt    
  41b141:	and    dl,BYTE PTR [ebx]
  41b143:	xchg   edi,eax
  41b144:	cmp    DWORD PTR [edi-0x44],esi
  41b147:	fwait
  41b148:	mov    ebx,0xf46b523a
  41b14d:	test   eax,0x4a158b69
  41b152:	(bad)  
  41b153:	gs shl bl,cl
  41b156:	mov    eax,0xf41d5351
  41b15b:	inc    esi
  41b15c:	cld    
  41b15d:	enter  0x74cb,0x2d
  41b161:	add    bl,0xc4
  41b164:	adc    DWORD PTR [edi-0x5d5e4158],ecx
  41b16a:	or     BYTE PTR [ecx-0x1e],ah
  41b16d:	and    ah,al
  41b16f:	sub    al,0x4c
  41b171:	stos   DWORD PTR es:[edi],eax
  41b172:	imul   edi,DWORD PTR [edx-0x25861c86],0x7837aeb
  41b17c:	sub    ah,BYTE PTR es:[eax-0x2efc7677]
  41b183:	push   esp
  41b184:	mov    edx,0xfcca819c
  41b189:	popf   
  41b18a:	(bad)  
  41b18b:	lods   al,BYTE PTR ds:[esi]
  41b18c:	mov    WORD PTR [eax+0x38],ds
  41b18f:	push   esp
  41b190:	mov    dl,0xde
  41b192:	mov    ebx,0xde400957
  41b197:	push   es
  41b198:	rcl    bl,1
  41b19a:	aad    0x2c
  41b19c:	test   al,0xd
  41b19e:	call   0x4181:0xb75615d6
  41b1a5:	cmc    
  41b1a6:	test   DWORD PTR [eax-0x3],ecx
  41b1a9:	pop    ds
  41b1aa:	popf   
  41b1ab:	ins    BYTE PTR es:[edi],dx
  41b1ac:	sub    BYTE PTR [eax-0x39],ch
  41b1af:	shl    DWORD PTR [edx*8-0x5fa06f11],1
  41b1b6:	mov    ebx,0xcfc3ab66
  41b1bb:	xor    eax,0x4445ee71
  41b1c0:	fst    QWORD PTR [eax]
  41b1c2:	add    al,0x69
  41b1c4:	jmp    0xbdc:0xecf9ec05
  41b1cb:	xor    ecx,0x79
  41b1ce:	jl     0x41b1db
  41b1d0:	push   edi
  41b1d1:	lds    esi,FWORD PTR cs:[eax-0x385ee00f]
  41b1d8:	add    DWORD PTR [edx],edx
  41b1da:	inc    ebx
  41b1db:	pop    es
  41b1dc:	xlat   BYTE PTR ds:[ebx]
  41b1dd:	lock mov ecx,DWORD PTR ds:0xe2b9d921
  41b1e4:	sbb    ebx,DWORD PTR [ebx-0x5d1afc9e]
  41b1ea:	fimul  WORD PTR ds:0x53d9bfeb
  41b1f0:	cdq    
  41b1f1:	ret    0xd5f9
  41b1f4:	jnp    0x41b205
  41b1f6:	jbe    0x41b1ec
  41b1f8:	adc    DWORD PTR [ebx+0x4c834d64],ecx
  41b1fe:	stos   DWORD PTR es:[edi],eax
  41b1ff:	xchg   edi,eax
  41b200:	or     ah,BYTE PTR [esi+0x136534ab]
  41b206:	push   edi
  41b207:	xchg   BYTE PTR [edi+edi*1],cl
  41b20a:	mov    eax,0x2b4d2944
  41b20f:	addr16 retf 0xfd5d
  41b213:	or     DWORD PTR [ebx-0x55d5a3b8],0x38c36bcb
  41b21d:	mov    ch,0x73
  41b21f:	dec    eax
  41b220:	xchg   edi,eax
  41b221:	imul   ebp,ebp,0x5a6890d5
  41b227:	retf   0xfc9a
  41b22a:	lahf   
  41b22b:	dec    edx
  41b22c:	mov    eax,ds:0x70665830
  41b231:	idiv   BYTE PTR [edi+0x73]
  41b234:	inc    eax
  41b235:	hlt    
  41b236:	lods   al,BYTE PTR ds:[esi]
  41b237:	fnstenv [ecx]
  41b239:	and    BYTE PTR [ebp-0x1],dh
  41b23c:	mov    ebp,DWORD PTR [esi+0x3f7a41b3]
  41b242:	pop    ebx
  41b243:	ret    
  41b244:	pop    eax
  41b245:	and    al,0xaf
  41b247:	loopne 0x41b276
  41b249:	scas   eax,DWORD PTR es:[edi]
  41b24a:	rcl    edi,0x35
  41b24d:	dec    esi
  41b24e:	jb     0x41b25e
  41b250:	in     eax,dx
  41b251:	gs loopne 0x41b1f2
  41b254:	add    BYTE PTR [eax+0x4d256d5c],0x1e
  41b25b:	sbb    al,0x8f
  41b25d:	push   eax
  41b25e:	xchg   esi,eax
  41b25f:	shl    DWORD PTR [edi],1
  41b261:	mov    ss,WORD PTR [ebp-0x13]
  41b264:	adc    eax,0x3c486f0d
  41b269:	dec    eax
  41b26a:	cmp    DWORD PTR [ebx+ecx*1-0x38365861],0xa69efb0a
  41b275:	jp     0x41b26a
  41b277:	mov    eax,0x50f1f921
  41b27c:	inc    ebp
  41b27d:	or     edx,DWORD PTR [esi-0x80]
  41b280:	mov    es,WORD PTR [eax+0x4a63231f]
  41b286:	add    al,0xfb
  41b288:	imul   ecx,DWORD PTR [eax+0x65e33dff],0x78
  41b28f:	clc    
  41b290:	dec    ecx
  41b291:	(bad)  
  41b292:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b293:	jb     0x41b2f8
  41b295:	mov    al,0x86
  41b297:	push   ds
  41b298:	and    bh,BYTE PTR [eax-0x64]
  41b29b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b29c:	jmp    FWORD PTR [edx-0x387d1ade]
  41b2a2:	inc    edi
  41b2a3:	mov    DWORD PTR [esi-0x41e6834e],0xed177b01
  41b2ad:	or     BYTE PTR [esi+0x79d99798],dh
  41b2b3:	aam    0x8f
  41b2b5:	mov    ebx,0xd96db9c8
  41b2ba:	and    edi,eax
  41b2bc:	int3   
  41b2bd:	push   ss
  41b2be:	(bad)  
  41b2bf:	in     al,0x93
  41b2c1:	xchg   edi,eax
  41b2c2:	xor    al,0xbc
  41b2c4:	mov    edi,0xe89f8539
  41b2c9:	mov    ds:0x2509e576,eax
  41b2ce:	cs sub al,0xaa
  41b2d1:	adc    BYTE PTR [ebx+0x6f],cl
  41b2d4:	dec    eax
  41b2d5:	in     eax,0xe0
  41b2d7:	dec    esi
  41b2d8:	int    0xd5
  41b2da:	xchg   esp,eax
  41b2db:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41b2dd:	sbb    bh,dh
  41b2df:	xchg   ebx,eax
  41b2e0:	jmp    0x318012f6
  41b2e5:	dec    ebp
  41b2e6:	xchg   ebx,eax
  41b2e7:	call   DWORD PTR [di]
  41b2ea:	pop    edi
  41b2eb:	and    al,0xc2
  41b2ed:	mov    ebx,0x76824f3f
  41b2f2:	jecxz  0x41b359
  41b2f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2f5:	mov    bh,0xa7
  41b2f7:	xor    BYTE PTR [esi],ch
  41b2f9:	pop    ebp
  41b2fa:	jbe    0x41b2db
  41b2fc:	call   0x91ba9f32
  41b301:	push   ebx
  41b302:	mov    cl,0x6f
  41b304:	xor    edi,DWORD PTR [esi+ecx*1+0x17]
  41b308:	mov    edi,0xb857959
  41b30d:	mov    al,ds:0x95803690
  41b312:	hlt    
  41b313:	inc    esp
  41b314:	repnz mov esi,0xac3ea284
  41b31a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b31b:	ins    BYTE PTR es:[edi],dx
  41b31c:	sbb    cl,BYTE PTR [esi-0x2de599ca]
  41b322:	imul   eax,edx,0x59a336d5
  41b328:	outs   dx,BYTE PTR ds:[esi]
  41b329:	in     eax,0x54
  41b32b:	adc    eax,0xcd5b5cd2
  41b330:	sbb    eax,0x6185cbe7
  41b335:	pop    edi
  41b336:	sbb    esi,DWORD PTR [ebx-0x16]
  41b339:	dec    esi
  41b33a:	dec    edx
  41b33b:	cmp    al,0xce
  41b33d:	add    eax,0x4acdac95
  41b342:	cmp    DWORD PTR [ebx-0x57f119eb],edx
  41b348:	mov    edx,0x1e98edeb
  41b34d:	in     al,dx
  41b34e:	jecxz  0x41b339
  41b350:	xchg   BYTE PTR [ebx],bl
  41b352:	mov    dh,0x49
  41b354:	or     edx,DWORD PTR [edi-0x4d]
  41b357:	pop    ebx
  41b358:	mov    ah,BYTE PTR [esi]
  41b35a:	enter  0xfaca,0xc7
  41b35e:	push   esi
  41b35f:	test   al,0x96
  41b361:	sar    edi,cl
  41b363:	dec    ebx
  41b364:	push   edi
  41b365:	pop    ebp
  41b366:	push   0x4c
  41b368:	sbb    edx,DWORD PTR ds:0xf1ce4f2
  41b36e:	xor    al,0x34
  41b370:	xchg   esp,eax
  41b371:	pop    esp
  41b372:	inc    edi
  41b373:	pop    ds
  41b374:	(bad)  
  41b375:	xchg   ecx,eax
  41b376:	mov    ebp,0x95b728e6
  41b37b:	sahf   
  41b37c:	repz (bad) 
  41b37e:	rcr    DWORD PTR [edi-0x75823a8c],1
  41b384:	popa   
  41b385:	repnz aad 0x28
  41b388:	pop    esp
  41b389:	inc    esi
  41b38a:	inc    edi
  41b38b:	mov    WORD PTR [esi-0x15],ss
  41b38e:	cmp    DWORD PTR [eax-0x7b],0x5b
  41b392:	sbb    cl,BYTE PTR [ecx+0x56]
  41b395:	std    
  41b396:	loope  0x41b330
  41b398:	push   ecx
  41b399:	pop    es
  41b39a:	sub    dh,BYTE PTR [edx+0x221717b4]
  41b3a0:	jge    0x41b3f8
  41b3a2:	stos   BYTE PTR es:[edi],al
  41b3a3:	pop    edi
  41b3a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3a5:	pop    eax
  41b3a6:	test   al,0x9c
  41b3a8:	or     BYTE PTR [esi+ebp*1],al
  41b3ab:	pop    esp
  41b3ac:	imul   ebp,DWORD PTR [ecx+edx*1],0xe9a55fdd
  41b3b3:	xor    BYTE PTR [edi+0x4efd6928],bl
  41b3b9:	popa   
  41b3ba:	out    0xfd,al
  41b3bc:	outs   dx,BYTE PTR ds:[esi]
  41b3bd:	dec    edx
  41b3be:	jp     0x41b427
  41b3c0:	test   eax,0x9914624
  41b3c5:	jb     0x41b3fc
  41b3c7:	out    0x94,al
  41b3c9:	adc    al,0x53
  41b3cb:	add    BYTE PTR [esi+0x24],0xee
  41b3cf:	and    ch,0xb
  41b3d2:	data16 mov dl,0x5f
  41b3d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3d6:	hlt    
  41b3d7:	out    dx,eax
  41b3d8:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3da:	fnstcw WORD PTR [edx+edi*2+0x5348a0bc]
  41b3e1:	stc    
  41b3e2:	mov    ah,0xbc
  41b3e4:	clc    
  41b3e5:	push   edi
  41b3e6:	scas   eax,DWORD PTR es:[edi]
  41b3e7:	(bad)  
  41b3e8:	je     0x41b37c
  41b3ea:	sbb    eax,0x662d9086
  41b3ef:	jmp    0x41b374
  41b3f1:	push   0xd13d52ac
  41b3f6:	call   0x3254e0a0
  41b3fb:	inc    ebx
  41b3fc:	int    0xf1
  41b3fe:	fdivr  st,st(7)
  41b400:	push   cs
  41b401:	cmp    al,0xc5
  41b403:	loope  0x41b433
  41b405:	push   cs
  41b406:	push   ebx
  41b407:	lahf   
  41b408:	fiadd  WORD PTR [edx]
  41b40a:	add    eax,0x18d99f2e
  41b40f:	ins    DWORD PTR es:[edi],dx
  41b410:	xor    DWORD PTR [edi-0x1db1a750],eax
  41b416:	cmp    eax,0x8f20053d
  41b41b:	inc    eax
  41b41c:	inc    esi
  41b41d:	bound  edx,QWORD PTR [ebp-0x1d1bc031]
  41b423:	pop    edi
  41b424:	leave  
  41b425:	jne    0x41b435
  41b427:	dec    ecx
  41b428:	push   ebx
  41b429:	or     DWORD PTR [esi+0x3f],0x415a6cf3
  41b430:	pop    esp
  41b431:	inc    eax
  41b432:	mov    ah,0x3c
  41b434:	xlat   BYTE PTR ds:[ebx]
  41b435:	scas   eax,DWORD PTR es:[edi]
  41b436:	sub    bh,BYTE PTR [edi+0x3a]
  41b439:	div    DWORD PTR [ecx-0x4aa876aa]
  41b43f:	and    ecx,edx
  41b441:	inc    eax
  41b442:	ins    DWORD PTR es:[edi],dx
  41b443:	jp     0x41b490
  41b445:	push   ecx
  41b446:	mov    dh,BYTE PTR [ebp-0x51]
  41b449:	mov    al,0x82
  41b44b:	mov    ah,0x4a
  41b44d:	cmp    cl,dl
  41b44f:	sub    ebx,DWORD PTR [eax-0x8]
  41b452:	jecxz  0x41b4c2
  41b454:	shr    edi,cl
  41b456:	shl    cl,1
  41b458:	jbe    0x41b46a
  41b45a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b45b:	(bad)  [ecx-0x63]
  41b45e:	adc    al,0x86
  41b460:	popa   
  41b461:	inc    edi
  41b462:	push   ds
  41b463:	in     eax,dx
  41b464:	mov    ebp,DWORD PTR [ecx-0x1f]
  41b467:	je     0x41b4dd
  41b469:	jbe    0x41b405
  41b46b:	call   0xabfd4a34
  41b470:	xor    cl,ch
  41b472:	push   0x7c939539
  41b477:	or     DWORD PTR [edi],0x97776170
  41b47d:	xchg   DWORD PTR [edi-0x1c],ebp
  41b480:	ins    BYTE PTR es:[edi],dx
  41b481:	push   ebx
  41b482:	icebp  
  41b483:	xchg   BYTE PTR [edx-0x29aef9c],bl
  41b489:	or     eax,0x9585d6a0
  41b48e:	fstp   DWORD PTR [ebx+edi*2]
  41b491:	stos   DWORD PTR es:[edi],eax
  41b492:	xor    BYTE PTR [eax],ah
  41b494:	pop    esi
  41b495:	mov    ch,0x40
  41b497:	xor    ebx,esp
  41b499:	in     al,0x10
  41b49b:	adc    al,0xac
  41b49d:	mov    ch,0x52
  41b49f:	enter  0xfd91,0xcc
  41b4a3:	mov    al,ds:0x26d672bf
  41b4a8:	jmp    0x2e2cff67
  41b4ad:	clc    
  41b4ae:	outs   dx,DWORD PTR ds:[esi]
  41b4af:	mov    esp,0x91a2f176
  41b4b4:	pop    ebp
  41b4b5:	test   al,0x25
  41b4b7:	sbb    ebx,DWORD PTR [edx]
  41b4b9:	mov    esp,0x724f9321
  41b4be:	mov    WORD PTR [eax+ebx*2+0x2e0b0510],cs
  41b4c5:	es ja  0x41b4be
  41b4c8:	shr    BYTE PTR [ebx],1
  41b4ca:	xchg   ecx,eax
  41b4cb:	push   ecx
  41b4cc:	in     al,dx
  41b4cd:	mov    eax,0x7ab2ec47
  41b4d2:	and    BYTE PTR [esi-0x467325de],dl
  41b4d8:	mov    cl,0xa5
  41b4da:	(bad)  
  41b4db:	or     ch,BYTE PTR [ebx-0x4a]
  41b4de:	sbb    DWORD PTR [ecx-0x67],edx
  41b4e1:	xor    edx,edi
  41b4e3:	sbb    BYTE PTR [ebx],bl
  41b4e5:	ins    DWORD PTR es:[edi],dx
  41b4e6:	mov    esi,DWORD PTR [ebx]
  41b4e8:	into   
  41b4e9:	pushf  
  41b4ea:	(bad)  
  41b4eb:	gs and eax,0x612624bb
  41b4f1:	lds    edi,FWORD PTR [edx+0x6f]
  41b4f4:	adc    ebx,DWORD PTR [ebx-0x700024ae]
  41b4fa:	sub    BYTE PTR [edi-0xdf60c83],0x94
  41b501:	mov    ds:0xb8615089,eax
  41b506:	push   0x71
  41b508:	ret    
  41b509:	mul    BYTE PTR [eax]
  41b50b:	dec    eax
  41b50c:	mov    ebp,0x8f836a14
  41b511:	call   FWORD PTR [ebx+0x7b]
  41b514:	mov    eax,0xd962c0ed
  41b519:	mov    dh,0xbd
  41b51b:	pushf  
  41b51c:	mov    eax,0xff16e765
  41b521:	dec    ecx
  41b522:	call   0xf906cc74
  41b527:	and    al,0xb6
  41b529:	dec    esp
  41b52a:	mov    esi,0xc6c84ebd
  41b52f:	cld    
  41b530:	loope  0x41b4c3
  41b532:	xchg   ebp,eax
  41b533:	jge    0x41b54b
  41b535:	imul   edi,edi,0x5f
  41b538:	mov    ch,0xa
  41b53a:	ja     0x41b5a5
  41b53c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b53d:	stos   DWORD PTR es:[edi],eax
  41b53e:	adc    DWORD PTR [edx+eiz*2+0x5d],esi
  41b542:	mov    ds:0xdfb9d97e,al
  41b547:	inc    ebp
  41b548:	jmp    0xc2dc:0xc2cb9c50
  41b54f:	call   0x66687979
  41b554:	sub    al,0xbd
  41b556:	ret    
  41b557:	test   BYTE PTR [eax+0x5248b54e],ch
  41b55d:	test   al,0x98
  41b55f:	jle    0x41b5d7
  41b561:	add    esi,edx
  41b563:	es call 0xc8cf:0x31acc58c
  41b56b:	or     DWORD PTR [edi+0x16],0xffffffd1
  41b56f:	sub    ebx,esp
  41b571:	mov    ah,0xef
  41b573:	aad    0xa5
  41b575:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b576:	inc    esp
  41b577:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b578:	inc    esi
  41b579:	(bad)  
  41b57a:	push   ecx
  41b57b:	in     eax,dx
  41b57c:	(bad)  
  41b57e:	stc    
  41b57f:	mov    eax,ds
  41b581:	cmc    
  41b582:	xchg   ecx,eax
  41b583:	bound  esp,QWORD PTR [ebp-0x68]
  41b586:	adc    BYTE PTR [edx],al
  41b588:	je     0x41b603
  41b58a:	je     0x41b598
  41b58c:	sub    al,0xd4
  41b58e:	xor    BYTE PTR [ecx],dl
  41b590:	sub    BYTE PTR [edx+eax*1],bl
  41b593:	mov    BYTE PTR ds:0x7b3a849c,dh
  41b599:	push   ebp
  41b59a:	dec    esi
  41b59b:	adc    dl,BYTE PTR [eax-0x4fb8b32c]
  41b5a1:	push   es
  41b5a2:	jne    0x41b5d0
  41b5a4:	stos   DWORD PTR es:[edi],eax
  41b5a5:	cmovge esi,DWORD PTR [ebx+eax*4]
  41b5a9:	jo     0x41b5cd
  41b5ab:	or     DWORD PTR [esp+eiz*8+0x4b],ebx
  41b5af:	sti    
  41b5b0:	enter  0xdb6a,0xa4
  41b5b4:	jge    0x41b5c2
  41b5b6:	xor    BYTE PTR [esi],ah
  41b5b8:	push   0x45
  41b5ba:	mov    ds:0xc99ff7df,eax
  41b5bf:	je     0x41b54a
  41b5c1:	int    0xcf
  41b5c3:	stc    
  41b5c4:	xchg   edx,eax
  41b5c5:	cmp    ecx,edx
  41b5c7:	dec    eax
  41b5c8:	jmp    0x41b5cf
  41b5ca:	mov    bh,0x13
  41b5cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5cd:	mov    dl,0xda
  41b5cf:	push   0xb242fc54
  41b5d4:	retf   
  41b5d5:	cli    
  41b5d6:	loope  0x41b635
  41b5d8:	lods   al,BYTE PTR ds:[esi]
  41b5d9:	sahf   
  41b5da:	inc    ebx
  41b5db:	test   eax,0x3e5312f6
  41b5e0:	int3   
  41b5e1:	mov    ecx,0xaddb15a3
  41b5e6:	xor    eax,0xac134921
  41b5eb:	cmp    eax,0xddaa383a
  41b5f0:	push   0x2eebe71d
  41b5f5:	std    
  41b5f6:	jae    0x41b5b1
  41b5f8:	push   edi
  41b5f9:	pop    ebp
  41b5fa:	lods   al,BYTE PTR ds:[esi]
  41b5fb:	adc    BYTE PTR [esp+edi*8+0x5365e30a],bh
  41b602:	mov    esi,0x26d969dd
  41b607:	call   0x37036c5
  41b60c:	ret    
  41b60d:	inc    eax
  41b60e:	mov    eax,DWORD PTR [ecx]
  41b610:	mov    cl,0x82
  41b612:	pop    eax
  41b613:	(bad)  
  41b614:	clc    
  41b615:	adc    ch,BYTE PTR [edx+0x6a]
  41b618:	mov    DWORD PTR [eax],ebp
  41b61a:	jecxz  0x41b60f
  41b61c:	fmul   st,st(7)
  41b61e:	mov    bh,0x46
  41b620:	fsubrp st(0),st
  41b622:	call   0xa9d629c3
  41b627:	push   edi
  41b628:	inc    di
  41b62a:	(bad)  
  41b62b:	and    al,0x80
  41b62d:	fisub  DWORD PTR [ecx-0x60]
  41b630:	pop    ss
  41b631:	add    DWORD PTR [eax+esi*1-0x58],0xdb0dba13
  41b639:	and    esp,ebp
  41b63b:	inc    ebp
  41b63c:	pop    eax
  41b63d:	inc    edi
  41b63e:	pop    ebx
  41b63f:	inc    ebx
  41b640:	enter  0x3934,0xa5
  41b644:	pop    ebp
  41b645:	retf   0x4786
  41b648:	ins    DWORD PTR es:[edi],dx
  41b649:	ja     0x41b5d1
  41b64b:	clc    
  41b64c:	dec    ecx
  41b64d:	push   eax
  41b64e:	js     0x41b604
  41b650:	fnstsw WORD PTR [eax+ebx*4-0x16e44110]
  41b657:	repnz xchg esp,eax
  41b659:	mov    dh,0xa9
  41b65b:	iret   
  41b65c:	jne    0x41b61e
  41b65e:	mov    ebp,ebx
  41b660:	out    0x2,al
  41b662:	inc    edx
  41b663:	clc    
  41b664:	push   es
  41b665:	mov    eax,ds:0x6520bf0f
  41b66a:	and    DWORD PTR ds:0x9c7d4ade,edx
  41b670:	dec    ecx
  41b671:	shl    DWORD PTR [eax+0x72021ec4],0xd7
  41b678:	out    0x19,al
  41b67a:	push   esp
  41b67b:	test   eax,0x12b79834
  41b680:	cmp    eax,0xd4e65541
  41b685:	or     eax,0xdba04284
  41b68a:	inc    ecx
  41b68b:	hlt    
  41b68c:	iret   
  41b68d:	xchg   ebp,eax
  41b68e:	sub    ebp,ebp
  41b690:	pop    DWORD PTR [edi+0x66]
  41b693:	dec    esi
  41b694:	fimul  DWORD PTR [ecx+0x38b1a9ca]
  41b69a:	stc    
  41b69b:	push   cs
  41b69c:	pop    ds
  41b69d:	mov    ecx,0x537a8e6b
  41b6a2:	sbb    DWORD PTR [edx+0x736c2ed3],0x165b402
  41b6ac:	mov    DWORD PTR [ebx+0x39],edi
  41b6af:	sbb    al,0x9a
  41b6b1:	cmp    dh,BYTE PTR [ebx+ebp*8+0x1f]
  41b6b5:	dec    esi
  41b6b6:	xchg   edi,eax
  41b6b7:	mov    cl,0x32
  41b6b9:	fdivr  DWORD PTR ds:0xa7425b5d
  41b6bf:	mov    edx,0x7c91159b
  41b6c4:	mov    al,0x2f
  41b6c6:	jp     0x41b717
  41b6c8:	pop    ecx
  41b6c9:	rcl    ch,cl
  41b6cb:	fs pop ss
  41b6cd:	fwait
  41b6ce:	shr    DWORD PTR [eax-0x40],0xe7
  41b6d2:	jge    0x41b6d8
  41b6d4:	ds push esi
  41b6d6:	jmp    0xa9ef7676
  41b6db:	inc    edx
  41b6dc:	and    al,0x1f
  41b6de:	shl    DWORD PTR [ebx-0x76bb1651],0xd
  41b6e5:	repnz dec edx
  41b6e7:	xchg   ecx,eax
  41b6e8:	add    DWORD PTR [eax+0x5e],ebp
  41b6eb:	sbb    eax,0xc61f002f
  41b6f0:	mov    ecx,0x39c1f021
  41b6f5:	mov    bl,0x33
  41b6f7:	int3   
  41b6f8:	dec    ebp
  41b6f9:	push   0xffffff90
  41b6fb:	jnp    0x41b733
  41b6fd:	pop    ss
  41b6fe:	cmp    bl,BYTE PTR ds:0x56217de2
  41b704:	or     BYTE PTR [edx-0xb5ad5a6],0x11
  41b70b:	ror    BYTE PTR [eax+0x58c384f8],cl
  41b711:	shr    DWORD PTR [eax],1
  41b713:	sbb    esp,eax
  41b715:	or     ecx,DWORD PTR [esi+0x6718779e]
  41b71b:	in     al,0xd7
  41b71d:	pop    ds
  41b71e:	dec    edx
  41b71f:	sar    DWORD PTR [esi+0x52],0x26
  41b723:	cmp    ch,BYTE PTR [esp+edi*8-0x58]
  41b727:	fimul  WORD PTR [esi+0x4]
  41b72a:	dec    esi
  41b72b:	jp     0x41b71c
  41b72d:	ret    0x7f95
  41b730:	add    dh,al
  41b732:	add    DWORD PTR [edi+0x5b],ebx
  41b735:	mov    eax,ds:0xf6956a31
  41b73a:	push   cs
  41b73b:	xchg   esp,eax
  41b73c:	mov    esi,0x949daa6b
  41b741:	sub    al,0x96
  41b743:	jne    0x41b792
  41b745:	xor    DWORD PTR [ebp+0x1f],esp
  41b748:	ror    ebp,0xbb
  41b74b:	dec    ebp
  41b74c:	shl    BYTE PTR [esi+ebx*8-0x68],1
  41b750:	sbb    dl,BYTE PTR [ecx-0x6565ad45]
  41b756:	or     al,0x21
  41b758:	pop    edx
  41b759:	xchg   dh,al
  41b75b:	jmp    0x4802f082
  41b760:	push   ebp
  41b761:	jg     0x41b6f3
  41b763:	nop
  41b764:	ds jae 0x41b73c
  41b767:	(bad)  
  41b768:	jp     0x41b6f4
  41b76a:	retf   0xa690
  41b76d:	push   ebx
  41b76e:	jno    0x41b727
  41b770:	popf   
  41b771:	jg     0x41b79c
  41b773:	xchg   ebp,eax
  41b774:	fsub   st(1),st
  41b776:	lahf   
  41b777:	das    
  41b778:	test   edi,0xa32a3dd0
  41b77e:	mov    ah,0x6b
  41b780:	loope  0x41b708
  41b782:	rcl    DWORD PTR [ecx-0x48],1
  41b785:	out    0xc8,eax
  41b787:	ds mov ebx,0xb22c574e
  41b78d:	adc    ebx,esp
  41b78f:	lock pop esi
  41b791:	lea    eax,[edx+0x3a7b47cc]
  41b797:	cld    
  41b798:	mov    al,0x24
  41b79a:	dec    eax
  41b79b:	jg     0x41b722
  41b79d:	jmp    0x25052e28
  41b7a2:	retf   
  41b7a3:	cmp    al,0x2e
  41b7a5:	outs   dx,DWORD PTR ds:[esi]
  41b7a6:	pop    ebp
  41b7a7:	das    
  41b7a8:	dec    edx
  41b7a9:	and    eax,DWORD PTR [ecx+0x75]
  41b7ac:	push   edi
  41b7ad:	imul   ebp,DWORD PTR [ebp+0x3496bbcb],0x40d22c4
  41b7b7:	dec    ebx
  41b7b8:	cmc    
  41b7b9:	xchg   edi,eax
  41b7ba:	or     eax,0x85bcc38a
  41b7bf:	pop    edx
  41b7c0:	add    BYTE PTR [ebx],bh
  41b7c2:	lahf   
  41b7c3:	sub    ax,0x43f9
  41b7c7:	sub    ebp,DWORD PTR [esi+0x39cdb115]
  41b7cd:	add    DWORD PTR [eax+0x19],edi
  41b7d0:	mov    gs,ecx
  41b7d2:	(bad)  
  41b7d3:	(bad)  
  41b7d4:	addr16 push 0x69
  41b7d7:	ins    BYTE PTR es:[edi],dx
  41b7d8:	cmp    ecx,ecx
  41b7da:	jno    0x41b839
  41b7dc:	bound  esi,QWORD PTR [edi+0xa035902]
  41b7e2:	xor    al,dl
  41b7e4:	xchg   edx,ebx
  41b7e6:	sti    
  41b7e7:	imul   eax,DWORD PTR [ecx],0x8a3cd6a8
  41b7ed:	cmp    bh,BYTE PTR [eiz*8-0x3ee6bd60]
  41b7f4:	xchg   BYTE PTR [eax-0x12],bl
  41b7f7:	pop    edi
  41b7f8:	mov    cl,0xcb
  41b7fa:	cmp    al,0x5c
  41b7fc:	mul    BYTE PTR [ecx+eax*1-0x26]
  41b800:	into   
  41b801:	es sbb cl,cl
  41b804:	mov    ah,0x7
  41b806:	in     al,0x1f
  41b808:	xchg   esi,eax
  41b809:	jle    0x41b80b
  41b80b:	shl    DWORD PTR [edi+0x11],cl
  41b80e:	retf   
  41b80f:	in     eax,dx
  41b810:	mov    al,BYTE PTR [ebp+0x43]
  41b813:	clc    
  41b814:	inc    ebx
  41b815:	dec    ebx
  41b816:	je     0x41b895
  41b818:	pushf  
  41b819:	jbe    0x41b7fb
  41b81b:	jp     0x41b847
  41b81d:	inc    esi
  41b81e:	les    edx,FWORD PTR [ebx-0x2abc46c5]
  41b824:	ja     0x41b898
  41b826:	callw  0x2a64
  41b82a:	and    bl,0xb4
  41b82d:	dec    esp
  41b82e:	out    0xa9,eax
  41b830:	jecxz  0x41b880
  41b832:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b833:	and    DWORD PTR [eax],ecx
  41b835:	int    0x8
  41b837:	sar    bh,1
  41b839:	adc    eax,0x50989863
  41b83e:	mov    ebx,eax
  41b840:	mov    cl,0xc1
  41b842:	cmp    eax,0xe7bae91f
  41b847:	adc    DWORD PTR [edx+0x9],edx
  41b84a:	cmp    eax,0x969ced65
  41b84f:	jae    0x41b892
  41b851:	push   esp
  41b852:	push   ebp
  41b853:	ret    0x82f7
  41b856:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b857:	psubb  mm5,QWORD PTR [edi+ecx*1-0x3e6134dd]
  41b85f:	add    edi,edx
  41b861:	in     eax,dx
  41b862:	xor    BYTE PTR [ebx],0xd5
  41b865:	dec    esp
  41b866:	(bad)  
  41b867:	cmc    
  41b868:	les    ebx,FWORD PTR [esi]
  41b86a:	add    eax,0xcf4bc015
  41b86f:	ins    DWORD PTR es:[edi],dx
  41b870:	add    cl,BYTE PTR [edx-0x21]
  41b873:	cwde   
  41b874:	sbb    BYTE PTR [edi],0x34
  41b877:	push   ss
  41b878:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b879:	xchg   ecx,eax
  41b87a:	in     al,dx
  41b87b:	jle    0x41b898
  41b87d:	js     0x41b880
  41b87f:	mov    dh,0x18
  41b881:	mov    ch,0xb3
  41b883:	sub    DWORD PTR fs:[edx+0x30325db6],edx
  41b88a:	cmp    al,0x46
  41b88c:	cmp    DWORD PTR [esi+esi*2],ebx
  41b88f:	fsubr  DWORD PTR [ecx]
  41b891:	jnp    0x41b895
  41b893:	mov    ?,esp
  41b895:	pop    esp
  41b896:	sub    esi,DWORD PTR [esi+0x48638fb7]
  41b89c:	xchg   esp,eax
  41b89d:	pop    ebp
  41b89e:	mov    al,0xde
  41b8a0:	and    eax,0x9ee84ed3
  41b8a5:	xchg   ebx,eax
  41b8a6:	inc    ebx
  41b8a7:	je     0x41b899
  41b8a9:	and    eax,eax
  41b8ab:	mov    BYTE PTR [eax+0x9],bl
  41b8ae:	and    eax,edi
  41b8b0:	ds or  cl,al
  41b8b3:	ins    DWORD PTR es:[edi],dx
  41b8b4:	test   al,0x28
  41b8b6:	clc    
  41b8b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8b8:	fwait
  41b8b9:	mov    al,0x7f
  41b8bb:	rol    BYTE PTR [ebp*1+0x7c5bbaf3],cl
  41b8c2:	outs   dx,DWORD PTR ds:[esi]
  41b8c3:	pop    esp
  41b8c4:	and    cl,ch
  41b8c6:	fcom   QWORD PTR [ecx-0x71]
  41b8c9:	in     eax,dx
  41b8ca:	nop
  41b8cb:	push   ds
  41b8cc:	sbb    BYTE PTR ds:0x679b2fd9,al
  41b8d2:	ret    0xb4bf
  41b8d5:	stos   BYTE PTR es:[edi],al
  41b8d6:	xchg   DWORD PTR [edi+eax*4-0xf177d34],edi
  41b8dd:	iret   
  41b8de:	add    eax,0x9444aa5d
  41b8e3:	ret    
  41b8e4:	pop    esi
  41b8e5:	(bad)  [ebp-0x43]
  41b8e8:	hlt    
  41b8e9:	pop    ds
  41b8ea:	mov    dl,0x34
  41b8ec:	xchg   BYTE PTR [eax-0x44],al
  41b8ef:	sar    DWORD PTR [edx],cl
  41b8f1:	sub    al,0x93
  41b8f3:	call   0xcd98dba6
  41b8f8:	mov    edx,0x1cf57bcd
  41b8fd:	pop    edi
  41b8fe:	rcl    DWORD PTR ss:[esi-0x3d31b92c],1
  41b905:	mov    cl,0x6b
  41b907:	fwait
  41b908:	mov    dl,0x25
  41b90a:	and    BYTE PTR [edi],cl
  41b90c:	mov    eax,ds:0x50a8a6c1
  41b911:	pusha  
  41b912:	in     al,0xf4
  41b914:	cdq    
  41b915:	jmp    0x739ae067
  41b91a:	xchg   esp,eax
  41b91b:	lock xor DWORD PTR [edx-0x10],ebp
  41b91f:	nop
  41b920:	inc    ebx
  41b921:	xchg   edx,eax
  41b922:	loop   0x41b99f
  41b924:	sti    
  41b925:	mov    ebx,0xaf224e63
  41b92a:	dec    ebx
  41b92b:	cmp    DWORD PTR ds:0x713f2e88,edi
  41b931:	mov    eax,ds:0x70d51555
  41b936:	xchg   esi,eax
  41b937:	sbb    esp,ebp
  41b939:	addr16 sub eax,0x3ad8f2c2
  41b93f:	inc    ecx
  41b940:	xor    dh,BYTE PTR [ecx+eax*4]
  41b943:	aam    0xc7
  41b945:	dec    ebp
  41b946:	(bad)  
  41b947:	mov    dl,0xa9
  41b949:	into   
  41b94a:	jl     0x41b8d7
  41b94c:	mov    esi,esp
  41b94e:	cmp    bl,BYTE PTR [edx+0x5f866764]
  41b954:	dec    edx
  41b955:	popf   
  41b956:	push   ebx
  41b957:	mov    ebx,0x46edf89f
  41b95c:	inc    esi
  41b95d:	push   ss
  41b95e:	into   
  41b95f:	fld    TBYTE PTR [edi+edx*8-0x54]
  41b963:	fadd   DWORD PTR [esi-0xe]
  41b966:	cmp    esi,DWORD PTR [edi+0x4908db31]
  41b96c:	sar    DWORD PTR [edi],1
  41b96e:	repz push edx
  41b970:	xor    eax,0xc5c98867
  41b975:	mov    dl,0xfd
  41b977:	repz repnz or cl,BYTE PTR [ebx-0x9c9d9bd]
  41b97f:	jl     0x41b9d4
  41b981:	push   es
  41b982:	push   ebp
  41b983:	ret    0xa09d
  41b986:	(bad)
  41b98a:	cld    
  41b98b:	and    bl,bl
  41b98d:	je     0x41b96d
  41b98f:	pushf  
  41b990:	sbb    DWORD PTR [edx-0x64],edx
  41b993:	add    ah,BYTE PTR [esi-0x19]
  41b996:	xlat   BYTE PTR ds:[ebx]
  41b997:	jo     0x41b9cd
  41b999:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b99a:	ret    0xb863
  41b99d:	jg     0x41b980
  41b99f:	ret    
  41b9a0:	or     edx,0xc0976ad7
  41b9a6:	ffree  st(5)
  41b9a8:	test   eax,0x71d0620c
  41b9ad:	add    al,0xbb
  41b9af:	int    0x8
  41b9b1:	ror    DWORD PTR [eax],1
  41b9b3:	fadd   QWORD PTR [edx]
  41b9b5:	adc    ebp,DWORD PTR [ebp-0x59]
  41b9b8:	imul   ebp
  41b9ba:	mov    bh,BYTE PTR [ecx+0x58]
  41b9bd:	and    BYTE PTR [esp+esi*1+0x4a422e91],0xd4
  41b9c5:	aas    
  41b9c6:	clc    
  41b9c7:	xchg   ebx,eax
  41b9c8:	add    BYTE PTR [edx],dl
  41b9ca:	iret   
  41b9cb:	mov    bh,0x24
  41b9cd:	scas   al,BYTE PTR es:[edi]
  41b9ce:	push   es
  41b9cf:	int    0x1
  41b9d1:	xchg   BYTE PTR [esi],bh
  41b9d3:	mov    eax,ds:0x94033188
  41b9d8:	sbb    BYTE PTR [edx+0x30a42ad5],0xd2
  41b9df:	stos   DWORD PTR es:[edi],eax
  41b9e0:	push   cs
  41b9e1:	aad    0x58
  41b9e3:	pop    ebp
  41b9e4:	adc    eax,0x3c42e681
  41b9e9:	aam    0xbe
  41b9eb:	sbb    DWORD PTR [edi],esp
  41b9ed:	mov    BYTE PTR [ecx],bl
  41b9ef:	out    dx,al
  41b9f0:	add    al,0x0
  41b9f2:	(bad)
  41b9f5:	mov    ds:0xdcf5b209,eax
  41b9fa:	jo     0x41ba55
  41b9fc:	push   edx
  41b9fd:	int3   
  41b9fe:	push   edx
  41b9ff:	das    
  41ba00:	xor    dl,bl
  41ba02:	scas   eax,DWORD PTR es:[edi]
  41ba03:	enter  0x4ccc,0x3c
  41ba07:	pmaxsw mm0,mm7
  41ba0a:	cdq    
  41ba0b:	xchg   ebp,eax
  41ba0c:	dec    ecx
  41ba0d:	imul   edx,DWORD PTR [esi],0xcc17227d
  41ba13:	iret   
  41ba14:	mov    cs,WORD PTR [edi-0x36a120c6]
  41ba1a:	mov    WORD PTR [ebp-0x1193941b],gs
  41ba20:	cmp    al,0x23
  41ba22:	pop    esp
  41ba23:	adc    eax,0x4bfcf447
  41ba28:	repnz xchg ebx,eax
  41ba2a:	xor    al,0xa7
  41ba2c:	aad    0x38
  41ba2e:	mov    ch,0x83
  41ba30:	xor    BYTE PTR [ecx],dh
  41ba32:	inc    BYTE PTR [ecx+0xcb1ce26]
  41ba38:	inc    ebx
  41ba39:	lock inc esp
  41ba3b:	cwde   
  41ba3c:	or     al,0x15
  41ba3e:	iret   
  41ba3f:	mov    ch,0xfa
  41ba41:	pop    edx
  41ba42:	int    0x6d
  41ba44:	mov    DWORD PTR [ecx+0x5c214ba9],ecx
  41ba4a:	mov    bh,cl
  41ba4c:	adc    DWORD PTR [edx-0x5ffea3f7],esp
  41ba52:	popa   
  41ba53:	xadd   esi,ebx
  41ba56:	rol    BYTE PTR [eax-0x4931ba04],cl
  41ba5c:	xor    esp,DWORD PTR [esi+0x22]
  41ba5f:	push   ds
  41ba60:	xor    ch,BYTE PTR ds:0x3544ce60
  41ba66:	in     al,0xe8
  41ba68:	hlt    
  41ba69:	push   ebx
  41ba6a:	add    DWORD PTR [esp+edx*4+0x71bddb5f],0xfffffff2
  41ba72:	leave  
  41ba73:	adc    esi,DWORD PTR [ecx]
  41ba75:	mov    ch,0x47
  41ba77:	adc    edi,0x50
  41ba7a:	jnp    0x41ba0c
  41ba7c:	mov    ch,0x2f
  41ba7e:	dec    ecx
  41ba7f:	mov    DWORD PTR [edx+0xd],eax
  41ba82:	adc    DWORD PTR [edx+eiz*8],eax
  41ba85:	sbb    edx,DWORD PTR [ebp+0x42]
  41ba88:	stc    
  41ba89:	add    BYTE PTR [eax],bl
  41ba8b:	(bad)  [ebx-0x3fe8d7fa]
  41ba91:	cli    
  41ba92:	mov    cl,0x6a
  41ba94:	sbb    eax,0xcfb3adf2
  41ba99:	mov    edi,0x1c67447
  41ba9e:	jb     0x41bb15
  41baa0:	lods   eax,DWORD PTR ds:[esi]
  41baa1:	pop    esi
  41baa2:	jl     0x41ba99
  41baa4:	repnz pop edx
  41baa6:	loope  0x41baa0
  41baa8:	arpl   WORD PTR [eax+0x4b],bp
  41baab:	call   0xc73562a8
  41bab0:	and    DWORD PTR [edx+0x71],esi
  41bab3:	jb     0x41bb00
  41bab5:	mov    cl,0x61
  41bab7:	call   0x285863fa
  41babc:	pop    es
  41babd:	dec    edx
  41babe:	cmp    eax,0x8441c936
  41bac3:	sub    ah,BYTE PTR [edx+0x3150a0ff]
  41bac9:	or     eax,0xee8f9458
  41bace:	pop    esp
  41bacf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bad0:	test   eax,0xa3d209ba
  41bad5:	ds mov esi,0x94d731c6
  41badb:	rcl    esp,1
  41badd:	inc    edx
  41bade:	jns    0x41bb3b
  41bae0:	mov    dl,0xf0
  41bae2:	in     al,0x2e
  41bae4:	sahf   
  41bae5:	mov    ah,0x76
  41bae7:	enter  0x1081,0x2a
  41baeb:	mov    al,0x56
  41baed:	popf   
  41baee:	and    ah,BYTE PTR [edx+ecx*8]
  41baf1:	inc    ebx
  41baf2:	clc    
  41baf3:	sbb    DWORD PTR [edi-0x6e],edx
  41baf6:	lea    edx,fs:[edx-0x6b]
  41bafa:	sar    BYTE PTR [ebx+0x18],cl
  41bafd:	jg     0x41bb16
  41baff:	rcr    DWORD PTR [ebx],0xaf
  41bb02:	jnp    0x41bb60
  41bb04:	jo     0x41baa9
  41bb06:	inc    ecx
  41bb07:	xor    eax,0xdd31c3df
  41bb0c:	push   edx
  41bb0d:	clc    
  41bb0e:	mov    esp,0xa6a1e6d3
  41bb13:	inc    ebp
  41bb14:	inc    esi
  41bb15:	xor    bl,dl
  41bb17:	fdiv   st(6),st
  41bb19:	data16 mov fs,WORD PTR [esp+eiz*2-0x6bed382e]
  41bb21:	pop    ss
  41bb22:	pop    edx
  41bb23:	and    eax,0x8cf88a1f
  41bb28:	shl    BYTE PTR [edi+0xa2a9cc3],cl
  41bb2e:	mov    dh,BYTE PTR [esi+0x708c49f4]
  41bb34:	push   edi
  41bb35:	addr16 dec ebp
  41bb37:	push   es
  41bb38:	neg    DWORD PTR [ebx-0x781efa86]
  41bb3e:	dec    esi
  41bb3f:	jne    0x41bac2
  41bb41:	push   eax
  41bb42:	push   edx
  41bb43:	fistp  DWORD PTR [edx]
  41bb45:	fwait
  41bb46:	and    eax,0x3d900b39
  41bb4b:	mov    ds:0x4418c4fe,al
  41bb50:	retf   
  41bb51:	into   
  41bb52:	nop
  41bb53:	dec    ebp
  41bb54:	add    eax,0x1e60004e
  41bb59:	scas   eax,DWORD PTR es:[edi]
  41bb5a:	cwde   
  41bb5b:	repnz sub eax,0xdb33f1b2
  41bb61:	xchg   edx,eax
  41bb62:	call   0x465ed5f3
  41bb67:	mov    edi,0x74193634
  41bb6c:	pop    ss
  41bb6d:	add    eax,0x9465ceb0
  41bb72:	nop
  41bb73:	inc    eax
  41bb74:	pusha  
  41bb75:	dec    edx
  41bb76:	adc    ah,BYTE PTR [eax]
  41bb78:	and    BYTE PTR [esi],0xa2
  41bb7b:	leave  
  41bb7c:	and    cl,BYTE PTR [ebp-0x2]
  41bb7f:	adc    ebp,edi
  41bb81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb82:	(bad)  
  41bb83:	cdq    
  41bb84:	pop    edi
  41bb85:	sub    dh,al
  41bb87:	xchg   BYTE PTR [ecx-0x59112fef],dl
  41bb8d:	popf   
  41bb8e:	push   ebx
  41bb8f:	ins    BYTE PTR es:[edi],dx
  41bb90:	hlt    
  41bb91:	dec    eax
  41bb92:	jge    0x41bb48
  41bb94:	sub    eax,0x21e8f5d5
  41bb99:	sbb    eax,0xbb6c5473
  41bb9e:	jle    0x41bbc9
  41bba0:	push   edx
  41bba1:	pop    edi
  41bba2:	sub    eax,0xc7e2fbdc
  41bba7:	imul   ecx,DWORD PTR [ebx+0x67],0x11
  41bbab:	pop    ecx
  41bbac:	push   ss
  41bbad:	std    
  41bbae:	out    0x13,al
  41bbb0:	fwait
  41bbb1:	xchg   ebp,eax
  41bbb2:	pusha  
  41bbb3:	push   esi
  41bbb4:	add    dl,bl
  41bbb6:	jmp    0x41bc28
  41bbb8:	cmc    
  41bbb9:	mov    ebp,0x68fde6f5
  41bbbe:	fwait
  41bbbf:	in     eax,0x82
  41bbc1:	fwait
  41bbc2:	rol    dl,1
  41bbc4:	aaa    
  41bbc5:	mov    eax,0x5029b7df
  41bbca:	stc    
  41bbcb:	xlat   BYTE PTR ds:[ebx]
  41bbcc:	jl     0x41bc06
  41bbce:	loope  0x41bbff
  41bbd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbd1:	mov    ebx,0xae13666c
  41bbd6:	sbb    ebp,edx
  41bbd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bbd9:	inc    ecx
  41bbda:	pop    ebp
  41bbdb:	rdmsr  
  41bbdd:	(bad)  
  41bbde:	cli    
  41bbdf:	mov    ch,0x9d
  41bbe1:	push   edi
  41bbe2:	cmp    DWORD PTR [eax],ebp
  41bbe4:	or     edi,ebx
  41bbe6:	scas   al,BYTE PTR es:[edi]
  41bbe7:	mov    edx,0x80c7da97
  41bbec:	arpl   WORD PTR [esi-0x5c768e2b],di
  41bbf2:	and    DWORD PTR [ecx+0x54],esi
  41bbf5:	cmp    edi,DWORD PTR [esi]
  41bbf7:	cmp    eax,0xf0530ff5
  41bbfc:	mov    ebp,DWORD PTR [esi]
  41bbfe:	dec    eax
  41bbff:	push   es
  41bc00:	ins    BYTE PTR es:[edi],dx
  41bc01:	(bad)
  41bc04:	mov    ebx,0x1ed1535
  41bc09:	pop    edx
  41bc0a:	pop    es
  41bc0b:	popa   
  41bc0c:	push   cs
  41bc0d:	repz mov cl,0x51
  41bc10:	mov    al,ds:0xf8a00083
  41bc15:	adc    al,0x49
  41bc17:	push   0x6
  41bc19:	sbb    DWORD PTR [esp+ecx*1-0x5b01ea],eax
  41bc20:	mov    BYTE PTR [eax],ah
  41bc22:	jae    0x41bbb2
  41bc24:	dec    edx
  41bc25:	fisubr DWORD PTR gs:0xda17038b
  41bc2c:	and    BYTE PTR [edx+0x7d],dl
  41bc2f:	sub    bl,BYTE PTR [ebx]
  41bc31:	xor    al,0xfd
  41bc33:	pop    ebx
  41bc34:	repz int 0x4d
  41bc37:	dec    esi
  41bc38:	sub    BYTE PTR [ebx-0x5fdf3dfd],al
  41bc3e:	pop    eax
  41bc3f:	inc    edi
  41bc40:	dec    ebx
  41bc41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc42:	gs icebp 
  41bc44:	(bad)  
  41bc45:	das    
  41bc46:	jo     0x41bc3e
  41bc48:	(bad)  
  41bc49:	(bad)  
  41bc4a:	and    BYTE PTR [eax-0x14],ch
  41bc4d:	lock leave 
  41bc4f:	mov    al,0xc
  41bc51:	sub    eax,0x95590eca
  41bc56:	pop    edi
  41bc57:	cmc    
  41bc58:	xchg   esp,eax
  41bc59:	adc    eax,0x31ce562b
  41bc5e:	mov    dh,ch
  41bc60:	pusha  
  41bc61:	cmp    eax,0xdec37284
  41bc66:	in     eax,dx
  41bc67:	scas   eax,DWORD PTR es:[edi]
  41bc68:	cld    
  41bc69:	(bad)  
  41bc6a:	inc    ecx
  41bc6b:	in     al,dx
  41bc6c:	inc    ebp
  41bc6d:	pop    eax
  41bc6e:	push   esi
  41bc6f:	cs scas eax,DWORD PTR es:[edi]
  41bc71:	push   edi
  41bc72:	xchg   ebp,eax
  41bc73:	add    eax,0xb36969c6
  41bc78:	je     0x41bccc
  41bc7a:	cwde   
  41bc7b:	into   
  41bc7c:	aam    0x25
  41bc7e:	shl    bl,cl
  41bc80:	jnp    0x41bc53
  41bc82:	scas   al,BYTE PTR es:[edi]
  41bc83:	loop   0x41bcb1
  41bc85:	dec    ebx
  41bc86:	cmp    eax,0xe05de932
  41bc8b:	push   0x70
  41bc8d:	or     eax,0x51f6710b
  41bc92:	arpl   WORD PTR [ebx-0x66],dx
  41bc95:	cmp    eax,0x68a8c2f0
  41bc9a:	push   esp
  41bc9b:	mov    ds:0x30cf62d3,al
  41bca0:	scas   eax,DWORD PTR es:[edi]
  41bca1:	push   edi
  41bca2:	(bad)  
  41bca3:	xor    al,0x30
  41bca5:	pop    eax
  41bca6:	mov    cl,0x91
  41bca8:	ds pop ecx
  41bcaa:	push   0xe19e62e9
  41bcaf:	inc    edi
  41bcb0:	out    dx,al
  41bcb1:	xchg   ebx,eax
  41bcb2:	daa    
  41bcb3:	sub    BYTE PTR [edx+0x5e],ch
  41bcb6:	jbe    0x41bc5d
  41bcb8:	sbb    dh,cl
  41bcba:	xor    bl,BYTE PTR [ecx-0x1805e6fb]
  41bcc0:	jmp    0x41bce1
  41bcc2:	test   eax,0xf66ec338
  41bcc7:	mov    al,0xe6
  41bcc9:	in     eax,dx
  41bcca:	shl    DWORD PTR [edx+0x36],0x76
  41bcce:	adc    BYTE PTR [eax+0x7150b10b],al
  41bcd4:	sub    ch,BYTE PTR [ecx-0x469ebbcf]
  41bcda:	mov    dh,0x15
  41bcdc:	pop    ds
  41bcdd:	mov    ch,0x53
  41bcdf:	push   edx
  41bce0:	mov    DWORD PTR [eax+0x12],edi
  41bce3:	mul    edi
  41bce5:	inc    esp
  41bce6:	push   esp
  41bce7:	inc    edx
  41bce8:	push   eax
  41bce9:	or     BYTE PTR [esi],ch
  41bceb:	xor    esp,ecx
  41bced:	adc    eax,ebp
  41bcef:	jo     0x41bd05
  41bcf1:	js     0x41bd15
  41bcf3:	add    BYTE PTR [eax+0x37054d3a],0x85
  41bcfa:	sbb    ebp,DWORD PTR [esi+0x1e]
  41bcfd:	xchg   BYTE PTR [edi-0x128d5c31],ah
  41bd03:	push   edx
  41bd04:	inc    DWORD PTR [edx+0x3d]
  41bd07:	pop    edi
  41bd08:	xor    ecx,DWORD PTR [ebx-0xf]
  41bd0b:	jne    0x41bce1
  41bd0d:	int3   
  41bd0e:	aam    0x59
  41bd10:	sti    
  41bd11:	ret    
  41bd12:	iret   
  41bd13:	mov    DWORD PTR [edx-0x56e84198],eax
  41bd19:	xchg   esi,eax
  41bd1a:	adc    ah,BYTE PTR [ebx+ebp*2-0x6efb776e]
  41bd21:	pushf  
  41bd22:	or     al,0xa1
  41bd24:	and    eax,ecx
  41bd26:	cli    
  41bd27:	into   
  41bd28:	mov    edx,0x2121ee8c
  41bd2e:	push   edx
  41bd2f:	stc    
  41bd30:	retf   
  41bd31:	push   0x7c
  41bd33:	sbb    BYTE PTR [ebx],bl
  41bd35:	(bad)  
  41bd36:	jbe    0x41bcbb
  41bd38:	mov    ebx,0x919e176d
  41bd3d:	xor    ebp,edi
  41bd3f:	adc    DWORD PTR [ecx+0x4a830d4f],edx
  41bd45:	cwde   
  41bd46:	jno    0x41bcf3
  41bd48:	mov    eax,0xd69c48d8
  41bd4d:	dec    ecx
  41bd4e:	lds    edi,FWORD PTR [ecx]
  41bd50:	nop
  41bd51:	mov    bh,0x55
  41bd53:	cmp    ebp,DWORD PTR [eax-0x1f1565fd]
  41bd59:	inc    eax
  41bd5a:	sbb    DWORD PTR [esi],ebx
  41bd5c:	fwait
  41bd5d:	loope  0x41bcf9
  41bd5f:	cmp    DWORD PTR [edx+0x64],ecx
  41bd62:	lods   al,BYTE PTR fs:[esi]
  41bd64:	mov    al,0x76
  41bd66:	adc    al,0x2
  41bd68:	cmp    eax,DWORD PTR [edx]
  41bd6a:	mov    esp,0xc0a2dfc
  41bd6f:	xor    dh,BYTE PTR [esi+0x73eadfe3]
  41bd75:	mov    edi,0x9b8028e2
  41bd7a:	jmp    0xb458:0xbfbdef4d
  41bd81:	mov    ebx,0x75a65465
  41bd86:	pop    ebx
  41bd87:	fsub   DWORD PTR [ecx+ecx*8]
  41bd8a:	gs stos BYTE PTR es:[edi],al
  41bd8c:	fisubr DWORD PTR [edx-0x77]
  41bd8f:	sbb    al,0x9
  41bd91:	and    BYTE PTR [ebx+0x4a],dh
  41bd94:	push   ecx
  41bd95:	xchg   edi,eax
  41bd96:	adc    bl,BYTE PTR [edx]
  41bd98:	cmp    esi,edx
  41bd9a:	shr    bl,0x11
  41bd9d:	pop    ss
  41bd9e:	lds    edx,FWORD PTR [ebx-0x4781c7ec]
  41bda4:	loopne 0x41be0f
  41bda6:	adc    al,0x35
  41bda8:	leave  
  41bda9:	mov    DWORD PTR [eax],0xb1ecc22e
  41bdaf:	aad    0xd5
  41bdb1:	pushf  
  41bdb2:	adc    DWORD PTR [esi-0x18],edx
  41bdb5:	mov    ah,0xc5
  41bdb7:	shr    ch,1
  41bdb9:	inc    ebx
  41bdba:	stos   BYTE PTR es:[edi],al
  41bdbb:	cmp    al,0xcf
  41bdbd:	mov    esp,0xaed3dd12
  41bdc2:	daa    
  41bdc3:	xchg   esp,eax
  41bdc4:	sti    
  41bdc5:	mul    DWORD PTR [esi+0x4]
  41bdc8:	or     ecx,DWORD PTR [ebp+eiz*1-0x6b18047]
  41bdcf:	arpl   WORD PTR [eax+0x26],sp
  41bdd2:	xchg   BYTE PTR [ecx+0x2cbc58b7],dl
  41bdd8:	aad    0x7b
  41bdda:	sub    bl,BYTE PTR [edx+0x65ea3c10]
  41bde0:	jnp    0x41be57
  41bde2:	inc    esp
  41bde3:	add    ebp,DWORD PTR [edi-0x42]
  41bde6:	jge    0x41bd86
  41bde8:	pop    esp
  41bde9:	sub    eax,0x4448064
  41bdee:	xor    ebx,DWORD PTR [edi-0x7e]
  41bdf1:	cmp    al,0x70
  41bdf3:	push   esp
  41bdf4:	shl    DWORD PTR [ebp+0x7b2f19fe],1
  41bdfa:	pop    edx
  41bdfb:	mov    edi,0x9bd3b158
  41be00:	sub    eax,edi
  41be02:	pop    ecx
  41be03:	mov    ds:0x65500e8c,al
  41be08:	jns    0x41bdeb
  41be0a:	xchg   ecx,eax
  41be0b:	push   edx
  41be0c:	xchg   BYTE PTR [edx],dl
  41be0e:	add    DWORD PTR [edi],0x14
  41be11:	aaa    
  41be12:	sub    al,0x4a
  41be14:	inc    ebp
  41be15:	and    DWORD PTR [eax+0x6b],0x14
  41be19:	pop    eax
  41be1a:	mov    ebp,0x804b59eb
  41be1f:	cmp    BYTE PTR [edx],bh
  41be21:	jl     0x41be1c
  41be23:	pop    eax
  41be24:	xor    ebx,DWORD PTR [edx-0x1a]
  41be27:	lds    esp,FWORD PTR [edx]
  41be29:	push   ecx
  41be2a:	call   FWORD PTR [eax]
  41be2c:	and    BYTE PTR [esi+0x6229bf2d],al
  41be32:	or     bh,BYTE PTR [ebp-0x1e]
  41be35:	jnp    0x41be73
  41be37:	aaa    
  41be38:	pushf  
  41be39:	idiv   DWORD PTR [esi]
  41be3b:	mov    eax,DWORD PTR [ebx-0x1564e51a]
  41be41:	js     0x41be17
  41be43:	mov    dh,BYTE PTR [edx-0x3ea9d0ce]
  41be49:	outs   dx,DWORD PTR ds:[esi]
  41be4a:	push   edx
  41be4b:	das    
  41be4c:	dec    ecx
  41be4d:	mov    esp,0x806e4b30
  41be52:	fidiv  WORD PTR [edx+0x42191d9]
  41be58:	push   eax
  41be59:	cwde   
  41be5a:	push   eax
  41be5b:	pop    esi
  41be5c:	ins    BYTE PTR es:[edi],dx
  41be5d:	or     ebp,edx
  41be5f:	jg     0x41be4f
  41be61:	enter  0xa93a,0x9d
  41be65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be66:	sub    ecx,DWORD PTR [edi-0x31]
  41be69:	adc    ah,cl
  41be6b:	stos   BYTE PTR es:[edi],al
  41be6c:	cmc    
  41be6d:	scas   eax,DWORD PTR es:[edi]
  41be6e:	pop    ebp
  41be6f:	xchg   DWORD PTR [edi],edi
  41be71:	jmp    0xb5c5beb8
  41be76:	adc    BYTE PTR [edi-0xd],cl
  41be79:	adc    eax,0xcea5508f
  41be7e:	out    0xfd,eax
  41be80:	cwde   
  41be81:	pop    ebp
  41be82:	(bad)  
  41be83:	pushf  
  41be84:	fisttp WORD PTR [edx]
  41be86:	sbb    BYTE PTR [eax+0x63d317e6],0x44
  41be8d:	and    ebp,DWORD PTR [ebp-0x64ab5484]
  41be93:	rcr    esp,cl
  41be95:	dec    ecx
  41be96:	sahf   
  41be97:	(bad)  
  41be99:	cdq    
  41be9a:	rcr    edx,1
  41be9c:	adc    al,0xb4
  41be9e:	mov    edx,ss
  41bea0:	jne    0x41be60
  41bea2:	jmp    0x41be68
  41bea4:	fdiv   QWORD PTR [edx-0x8]
  41bea7:	adc    al,0xfb
  41bea9:	iret   
  41beaa:	adc    BYTE PTR [ebp+edx*8+0xd4e7d92],cl
  41beb1:	lahf   
  41beb2:	inc    ebx
  41beb3:	mov    al,ds:0x1443f28b
  41beb8:	cmp    al,0xd0
  41beba:	sub    DWORD PTR [esi+0x2a],eax
  41bebd:	sub    al,0x6a
  41bebf:	scas   eax,DWORD PTR es:[edi]
  41bec0:	popa   
  41bec1:	sar    DWORD PTR [eax+edi*4+0x7db22571],cl
  41bec8:	fidiv  WORD PTR [edi]
  41beca:	mov    ecx,0x4468124
  41becf:	mov    ds:0xb2eb30d8,eax
  41bed4:	mov    ebp,0x9ff38c08
  41bed9:	test   al,0x5b
  41bedb:	jecxz  0x41bee2
  41bedd:	xor    ebx,DWORD PTR [eax+ebx*1+0x68]
  41bee1:	add    BYTE PTR [ebp*8+0x2ec386fc],ah
  41bee8:	push   0xffffffdf
  41beea:	test   BYTE PTR [ebp-0x4c4da821],0xff
  41bef1:	ds push eax
  41bef3:	aas    
  41bef4:	push   0xffffffaa
  41bef6:	out    0x88,al
  41bef8:	xlat   BYTE PTR ds:[ebx]
  41bef9:	int    0xa
  41befb:	(bad)  
  41befd:	lods   eax,DWORD PTR ds:[esi]
  41befe:	out    0x85,al
  41bf00:	lods   al,BYTE PTR ds:[esi]
  41bf01:	loopne 0x41bf81
  41bf03:	push   0x7a
  41bf05:	out    dx,al
  41bf06:	mov    ah,BYTE PTR [ecx+0x34f5abd8]
  41bf0c:	in     al,dx
  41bf0d:	popa   
  41bf0e:	cmp    ebp,DWORD PTR [eax+0x78]
  41bf11:	fdivr  st(3),st
  41bf13:	rcl    DWORD PTR [ebp+0x67c51fe2],1
  41bf19:	(bad)  
  41bf1b:	adc    BYTE PTR [eax-0x71],0x74
  41bf1f:	es popf 
  41bf21:	nop
  41bf22:	stos   DWORD PTR es:[edi],eax
  41bf23:	clc    
  41bf24:	add    eax,0xb3be84c7
  41bf29:	out    dx,eax
  41bf2a:	mov    ecx,0x6e43dc50
  41bf2f:	outs   dx,DWORD PTR ds:[esi]
  41bf30:	dec    edx
  41bf31:	shl    BYTE PTR [eax],1
  41bf33:	jge    0x41beb9
  41bf35:	data16 cmc 
  41bf37:	fcmovnu st,st(2)
  41bf39:	les    ebx,FWORD PTR [eax+0x1c1f74f7]
  41bf3f:	sbb    BYTE PTR [edx+0x23],0x70
  41bf43:	inc    edi
  41bf44:	or     eax,0x57086525
  41bf49:	imul   ecx,DWORD PTR [edx+0x13],0xffffff93
  41bf4d:	or     DWORD PTR [ecx+0x6840b21e],0x6d191570
  41bf57:	xor    BYTE PTR [edi-0x8],dl
  41bf5a:	out    dx,eax
  41bf5b:	outs   dx,DWORD PTR ds:[esi]
  41bf5c:	xchg   ebx,eax
  41bf5d:	imul   edx,DWORD PTR [eax+0x3f],0xfffffffc
  41bf61:	stc    
  41bf62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf63:	or     DWORD PTR [edx],esp
  41bf65:	adc    bh,BYTE PTR [ebx-0x3c]
  41bf68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf69:	xchg   BYTE PTR [edx-0x22bb48e6],al
  41bf6f:	adc    DWORD PTR [ebx],esp
  41bf71:	add    al,BYTE PTR [esi-0x79e6a167]
  41bf77:	xor    al,0x3
  41bf7a:	addr16 xchg ebx,eax
  41bf7c:	sbb    BYTE PTR [ebp-0x2897ebed],0xf3
  41bf83:	adc    al,bh
  41bf85:	fld    TBYTE PTR [edx-0x5cf6abad]
  41bf8b:	stc    
  41bf8c:	popf   
  41bf8d:	mov    esi,0x560ed1b4
  41bf92:	es inc ebp
  41bf94:	call   0x476e4134
  41bf99:	jle    0x41bf5c
  41bf9b:	push   ss
  41bf9c:	and    dl,BYTE PTR [edi+0x37]
  41bf9f:	enter  0x4e97,0xef
  41bfa3:	sub    al,0xfd
  41bfa5:	mov    ah,0x1c
  41bfa7:	xchg   ecx,eax
  41bfa8:	inc    eax
  41bfa9:	cli    
  41bfaa:	lods   eax,DWORD PTR ds:[esi]
  41bfab:	and    DWORD PTR [edi],edi
  41bfad:	daa    
  41bfae:	lds    esi,FWORD PTR [ebx+0x111c2a35]
  41bfb4:	push   ebx
  41bfb5:	push   0xffffffb0
  41bfb7:	lea    esp,ss:[ecx+0x6]
  41bfbb:	push   esp
  41bfbc:	or     BYTE PTR [ecx],al
  41bfbe:	xor    BYTE PTR [ecx],0x60
  41bfc1:	xadd   DWORD PTR [esi+0x55c2e8f2],edi
  41bfc8:	mov    DWORD PTR [ebp+0x17665b6d],esi
  41bfce:	je     0x41bfdb
  41bfd0:	xor    DWORD PTR [edi+0x71310ec7],ecx
  41bfd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bfd7:	inc    ebx
  41bfd8:	shl    BYTE PTR [ebx+0x5736df22],cl
  41bfde:	(bad)  
  41bfdf:	jg     0x41c04e
  41bfe1:	div    esi
  41bfe3:	sbb    edx,DWORD PTR [ebp+eax*2-0x5c7a14c3]
  41bfea:	sbb    dh,BYTE PTR [ecx+0x4de61373]
  41bff0:	or     al,0x81
  41bff2:	cld    
  41bff3:	mov    eax,ds:0xc59beda0
  41bff8:	mov    ?,WORD PTR [eax-0x31]
  41bffb:	gs add edi,ebx
  41bffe:	repnz sahf 
  41c000:	mov    gs,WORD PTR [ecx+0x427b7441]
  41c006:	es inc ebx
  41c008:	ins    DWORD PTR es:[edi],dx
  41c009:	sbb    esi,edx
  41c00b:	shl    DWORD PTR [ecx-0x5d],1
  41c00e:	retf   0x269b
  41c011:	dec    ebp
  41c012:	call   0x2a0fd300
  41c017:	add    ch,BYTE PTR [edx+0x62ccb97e]
  41c01d:	xchg   esp,ecx
  41c01f:	pop    edx
  41c020:	fdivr  QWORD PTR [edi+0x4d]
  41c023:	pop    ds
  41c024:	sub    bh,BYTE PTR [ecx+0x4a6abb98]
  41c02a:	mov    ?,WORD PTR [esi+0x55]
  41c02d:	jne    0x41c05b
  41c02f:	fwait
  41c030:	clc    
  41c031:	ins    DWORD PTR es:[edi],dx
  41c032:	pop    edi
  41c033:	ds cmp dl,bl
  41c036:	lock shl DWORD PTR [esi+0x9d47d58],0xca
  41c03e:	adc    cl,BYTE PTR [ebx-0x11066be]
  41c044:	xchg   edx,eax
  41c045:	mov    ecx,0x6ff8f372
  41c04a:	xor    eax,0xc56a1aad
  41c04f:	sar    DWORD PTR [eax],0x1c
  41c052:	icebp  
  41c053:	cmc    
  41c054:	lock int3 
  41c056:	sahf   
  41c057:	mov    bl,0x46
  41c059:	xchg   dl,al
  41c05b:	pop    ds
  41c05c:	or     DWORD PTR [eax+0x2871916c],ebx
  41c062:	push   esi
  41c063:	pop    ds
  41c064:	xchg   ebp,eax
  41c065:	int3   
  41c066:	aaa    
  41c067:	mov    bh,0x3f
  41c069:	mov    bh,0x3
  41c06b:	daa    
  41c06c:	pop    esi
  41c06d:	aam    0x13
  41c06f:	ins    DWORD PTR es:[edi],dx
  41c070:	dec    ebx
  41c071:	test   eax,0xf7b4c296
  41c076:	mov    cl,BYTE PTR [esi+0x7a9c09fd]
  41c07c:	inc    eax
  41c07d:	adc    al,0xcf
  41c07f:	test   al,dh
  41c081:	imul   eax,DWORD PTR [edi*4+0x4ef58719],0xffffffa6
  41c089:	out    0x53,eax
  41c08b:	loopne 0x41c061
  41c08d:	jns    0x41c109
  41c08f:	pop    esi
  41c090:	mov    ebp,0x8124eeb8
  41c095:	xchg   esp,eax
  41c096:	in     eax,0xe4
  41c098:	std    
  41c099:	adc    al,0xb2
  41c09b:	add    dh,bh
  41c09d:	inc    esi
  41c09e:	rol    BYTE PTR [esi-0x6b8a6b6e],1
  41c0a4:	arpl   WORD PTR [edx+eax*8-0x63],dx
  41c0a8:	cmp    eax,0x685b6a69
  41c0ad:	lods   al,BYTE PTR ds:[esi]
  41c0ae:	fsubr  st(4),st
  41c0b0:	stos   DWORD PTR es:[edi],eax
  41c0b1:	sub    ch,BYTE PTR [esi-0x4c564c8e]
  41c0b7:	and    BYTE PTR fs:[edx],ch
  41c0ba:	out    dx,eax
  41c0bb:	sub    ecx,ecx
  41c0bd:	stos   DWORD PTR es:[edi],eax
  41c0be:	icebp  
  41c0bf:	(bad)  
  41c0c0:	fiadd  WORD PTR [ecx+0x603ed3a4]
  41c0c6:	loope  0x41c0d9
  41c0c8:	jg     0x41c08b
  41c0ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0cb:	ret    0x258e
  41c0ce:	int    0xf5
  41c0d0:	pop    edi
  41c0d1:	iret   
  41c0d2:	imul   BYTE PTR [edi-0x48b3ed10]
  41c0d8:	cdq    
  41c0d9:	mov    edi,DWORD PTR [edi]
  41c0db:	inc    edx
  41c0dc:	or     al,0xe0
  41c0de:	aas    
  41c0df:	enter  0x60d1,0x2b
  41c0e3:	push   esp
  41c0e4:	add    eax,0x9fd07700
  41c0e9:	inc    edx
  41c0ea:	xor    BYTE PTR [eax+eiz*8+0x4c8e77b0],dl
  41c0f1:	sub    ah,BYTE PTR ds:0xfde8aaa6
  41c0f7:	dec    esp
  41c0f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0f9:	and    DWORD PTR [ebx+0x48],0xe8d72f3c
  41c100:	xlat   BYTE PTR ds:[ebx]
  41c101:	adc    edx,edi
  41c103:	xchg   ecx,esi
  41c105:	imul   ebp,DWORD PTR [ebx],0x7d472d56
  41c10b:	les    esi,FWORD PTR [ebx]
  41c10d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c10e:	sahf   
  41c10f:	mov    ds:0x25fcd0b0,eax
  41c114:	popf   
  41c115:	pop    eax
  41c116:	icebp  
  41c117:	cmp    cl,al
  41c119:	inc    esi
  41c11a:	and    al,0x85
  41c11c:	add    al,0x7a
  41c11e:	daa    
  41c11f:	add    esi,edi
  41c121:	mov    eax,0xc8fff4d
  41c126:	push   0xffffffd3
  41c128:	pop    ebp
  41c129:	nop
  41c12a:	(bad)
  41c12d:	inc    ecx
  41c12e:	cmc    
  41c12f:	mov    ch,0x7d
  41c131:	mov    esp,0x9900f66f
  41c136:	int3   
  41c137:	dec    ebp
  41c138:	outs   dx,BYTE PTR ds:[esi]
  41c139:	mov    edi,0xe637e33a
  41c13e:	dec    edi
  41c13f:	mov    edx,0x71388ebe
  41c144:	lahf   
  41c145:	sub    cl,ah
  41c147:	aas    
  41c148:	div    BYTE PTR [edi+0x717ce915]
  41c14e:	dec    ecx
  41c14f:	cs rcl dl,0xc
  41c153:	mov    ds:0xb7a9ac84,eax
  41c158:	push   esp
  41c159:	pop    edx
  41c15a:	ret    0x2049
  41c15d:	sahf   
  41c15e:	sub    eax,0xfe12b7d5
  41c163:	xlat   BYTE PTR ds:[ebx]
  41c164:	or     BYTE PTR [ebp-0xf],dh
  41c167:	aam    0xa
  41c169:	jp     0x41c14d
  41c16b:	scas   al,BYTE PTR es:[edi]
  41c16c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c16d:	into   
  41c16e:	stos   DWORD PTR es:[edi],eax
  41c16f:	jp     0x41c1a5
  41c171:	pop    eax
  41c172:	jnp    0x41c127
  41c174:	mov    dh,0x8b
  41c176:	shl    BYTE PTR [ebx],1
  41c178:	pushf  
  41c179:	adc    ch,cl
  41c17b:	scas   eax,DWORD PTR es:[edi]
  41c17c:	jmp    0x41c1b2
  41c17e:	add    ch,BYTE PTR [esi-0x6]
  41c181:	fcmovb st,st(7)
  41c183:	ds cmp eax,edi
  41c186:	xor    DWORD PTR [ecx+ebx*1],ecx
  41c189:	test   al,0xab
  41c18b:	sub    eax,0x9ac5b07b
  41c190:	add    ecx,ebp
  41c192:	inc    ebx
  41c193:	mov    al,0xed
  41c195:	cmp    al,0x6a
  41c197:	rcl    DWORD PTR [ecx-0x70bb043d],cl
  41c19d:	inc    esi
  41c19e:	hlt    
  41c19f:	push   0x3c
  41c1a1:	xchg   ebx,esi
  41c1a3:	mov    esi,0x31928c9e
  41c1a8:	mov    ds:0x3fb86b95,al
  41c1ad:	xor    eax,0x30c0e208
  41c1b2:	leave  
  41c1b3:	push   0xe1dc59b8
  41c1b8:	push   ebx
  41c1b9:	pop    es
  41c1ba:	mov    dh,0x2e
  41c1bd:	jne    0x41c198
  41c1bf:	and    DWORD PTR [edx-0x2bf46ae9],ebx
  41c1c5:	xchg   ecx,eax
  41c1c6:	ja     0x41c23a
  41c1c8:	push   ss
  41c1c9:	cmp    al,0x2d
  41c1cb:	gs push es
  41c1cd:	mov    ebx,ebx
  41c1cf:	inc    esi
  41c1d0:	cmp    ebx,eax
  41c1d2:	xor    ecx,ecx
  41c1d4:	and    BYTE PTR [ebx+edi*2+0x74],ch
  41c1d8:	pop    eax
  41c1d9:	push   eax
  41c1da:	out    0x1d,eax
  41c1dc:	out    dx,al
  41c1dd:	pop    edi
  41c1de:	inc    esi
  41c1df:	pop    ds
  41c1e0:	mov    eax,0xfa50eaf1
  41c1e5:	std    
  41c1e6:	(bad)
  41c1e9:	nop
  41c1ea:	daa    
  41c1eb:	push   eax
  41c1ec:	mov    ecx,0x66cbc5bb
  41c1f1:	push   es
  41c1f2:	cmp    eax,0x4986c664
  41c1f7:	repz cmp edx,DWORD PTR [edx+0x76]
  41c1fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1fc:	inc    edi
  41c1fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1fe:	ret    
  41c1ff:	inc    esp
  41c200:	fst    st(2)
  41c202:	ins    BYTE PTR es:[edi],dx
  41c203:	and    DWORD PTR [ebp-0x36],edi
  41c206:	jae    0x41c20c
  41c208:	dec    ecx
  41c209:	sbb    BYTE PTR [ebx-0x2d79c526],ah
  41c20f:	js     0x41c26f
  41c211:	imul   esp,DWORD PTR [ebp+0x13b3c3ea],0x2d
  41c218:	or     eax,0x5003c111
  41c21d:	pop    es
  41c21e:	adc    eax,0x5924b9b1
  41c223:	or     BYTE PTR [edx-0x63],cl
  41c226:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c227:	addr16 adc dl,dh
  41c22a:	scas   eax,DWORD PTR es:[edi]
  41c22b:	add    eax,0x275a7295
  41c230:	stos   DWORD PTR es:[edi],eax
  41c231:	fbld   TBYTE PTR [ebx-0x7599861a]
  41c237:	mov    bh,0xfe
  41c239:	adc    al,0xb7
  41c23b:	mov    ds:0xc50ae847,al
  41c240:	repnz or DWORD PTR [ecx],edx
  41c243:	xchg   esi,eax
  41c244:	mov    ebx,0xf285912b
  41c249:	sbb    BYTE PTR [ebx-0x558b151e],0x12
  41c250:	pop    ebx
  41c251:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c252:	xchg   ch,dl
  41c254:	out    0xb,eax
  41c256:	jb     0x41c2a0
  41c258:	jmp    0x2423b475
  41c25d:	pop    ss
  41c25e:	mov    BYTE PTR [esi-0x763c4ad9],ah
  41c264:	mov    DWORD PTR [edi-0x79c535fb],ebp
  41c26a:	(bad)  
  41c26b:	pop    edi
  41c26c:	out    dx,al
  41c26d:	jne    0x41c217
  41c26f:	mov    ecx,esi
  41c271:	adc    BYTE PTR [ebp+0x161a37da],0x9
  41c278:	dec    edx
  41c279:	sub    ch,BYTE PTR [eax+eax*2-0x4242c796]
  41c280:	mov    bl,0x85
  41c282:	mov    ds,WORD PTR [edi]
  41c284:	inc    ebp
  41c285:	jp     0x41c224
  41c287:	sub    al,0x92
  41c289:	inc    ecx
  41c28a:	jne    0x41c2be
  41c28c:	es ins BYTE PTR es:[edi],dx
  41c28e:	aas    
  41c28f:	mov    esi,0x2a13d8a4
  41c294:	dec    eax
  41c295:	mov    al,0xa4
  41c297:	hlt    
  41c298:	imul   esi,eax,0xb56f1ec
  41c29e:	retf   0xc012
  41c2a1:	test   al,0x65
  41c2a3:	jl     0x41c2be
  41c2a5:	dec    eax
  41c2a6:	xchg   BYTE PTR [esi],al
  41c2a8:	add    dl,BYTE PTR [edi+0x40d5a9cf]
  41c2ae:	sbb    al,0xeb
  41c2b0:	sti    
  41c2b1:	pop    ecx
  41c2b2:	jecxz  0x41c2f4
  41c2b4:	mov    edi,DWORD PTR [ebx+0x5b7b69e3]
  41c2ba:	or     ecx,DWORD PTR [edx+0xb]
  41c2bd:	hlt    
  41c2be:	mov    dh,0x53
  41c2c0:	test   BYTE PTR [edx+0x41632951],0xaa
  41c2c7:	jnp    0x41c2a2
  41c2c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2ca:	push   ebx
  41c2cb:	xor    eax,0x1b795288
  41c2d0:	dec    edi
  41c2d1:	add    bl,cl
  41c2d3:	push   ebp
  41c2d4:	xlat   BYTE PTR ds:[ebx]
  41c2d5:	xchg   esi,eax
  41c2d6:	pushf  
  41c2d7:	push   ebp
  41c2d8:	push   ss
  41c2d9:	div    BYTE PTR [ebx]
  41c2db:	inc    ebx
  41c2dc:	xor    al,0x2e
  41c2de:	pop    ebx
  41c2df:	push   esi
  41c2e0:	sbb    al,0x4a
  41c2e2:	xchg   ebp,eax
  41c2e3:	lahf   
  41c2e4:	adc    edx,DWORD PTR [eax]
  41c2e6:	(bad)  
  41c2e7:	out    dx,eax
  41c2e8:	mov    dh,bh
  41c2ea:	jecxz  0x41c272
  41c2ec:	in     al,dx
  41c2ed:	and    DWORD PTR [esi],ecx
  41c2ef:	retf   
  41c2f0:	sti    
  41c2f1:	mov    cl,0x52
  41c2f3:	xor    esi,edx
  41c2f5:	pop    ebx
  41c2f6:	mov    al,ds:0x2f045567
  41c2fb:	cmp    DWORD PTR [ecx+0x48f4f58],edx
  41c301:	leavew 
  41c303:	jg     0x41c341
  41c305:	pop    ebx
  41c306:	push   ss
  41c307:	mov    ds:0xf2e87dea,eax
  41c30c:	arpl   WORD PTR [ebx],bp
  41c30e:	pop    ebx
  41c30f:	repz and DWORD PTR [ebp-0x7ea6cc78],esi
  41c316:	aad    0x54
  41c318:	mov    esp,0x83419d28
  41c31e:	imul   BYTE PTR [edx-0x10fb1df7]
  41c324:	xchg   edi,eax
  41c325:	cmp    BYTE PTR [ebp-0x54],bl
  41c328:	xchg   edx,eax
  41c329:	and    eax,0xa2b72db5
  41c32e:	popf   
  41c32f:	push   cs
  41c330:	mov    cl,0xe7
  41c332:	inc    esi
  41c333:	cdq    
  41c334:	(bad)  
  41c335:	pop    ss
  41c336:	(bad)  
  41c337:	or     dl,BYTE PTR [bx+di]
  41c33a:	add    DWORD PTR [esi+ebp*1],edx
  41c33d:	mov    ebx,0x478b0b1d
  41c342:	push   ds
  41c343:	cmp    ah,ah
  41c345:	pop    ecx
  41c346:	mov    ds:0xc82befd6,eax
  41c34b:	xchg   BYTE PTR [edi],cl
  41c34d:	mov    esp,0xb010ed1
  41c352:	shl    ch,cl
  41c354:	daa    
  41c355:	ds push eax
  41c357:	dec    edx
  41c358:	cmc    
  41c359:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c35a:	outs   dx,BYTE PTR ds:[esi]
  41c35b:	mov    eax,ds:0xb617fa0e
  41c360:	xchg   BYTE PTR [ebx+0x3b],ah
  41c363:	call   0xba08:0x9b038d46
  41c36a:	mov    ah,0x9
  41c36c:	les    eax,FWORD PTR [edi+0x34]
  41c36f:	iret   
  41c370:	xchg   ebp,eax
  41c371:	push   es
  41c372:	jbe    0x41c3b9
  41c374:	add    DWORD PTR [edi-0x37684601],ebp
  41c37a:	mov    al,ds:0x864143b5
  41c37f:	sub    BYTE PTR [ebx-0x29ac411e],ah
  41c385:	ds inc edi
  41c387:	push   cs
  41c388:	inc    esp
  41c389:	sbb    BYTE PTR [edx-0xd],dl
  41c38c:	xor    BYTE PTR [eax],ch
  41c38e:	jnp    0x41c33d
  41c390:	imul   edx,DWORD PTR [esi+edi*4],0x12
  41c394:	outs   dx,DWORD PTR ds:[esi]
  41c395:	dec    edi
  41c396:	loop   0x41c36c
  41c398:	cmp    BYTE PTR [esi-0x2e],dh
  41c39b:	xchg   edi,eax
  41c39c:	daa    
  41c39d:	sub    BYTE PTR [esi+0x3a0808ec],ah
  41c3a3:	xchg   edx,eax
  41c3a4:	and    edi,DWORD PTR [ebx+0x29a01f91]
  41c3aa:	cmp    al,0xc8
  41c3ac:	mov    dh,0x98
  41c3ae:	and    al,0xc1
  41c3b0:	sub    eax,DWORD PTR [eax+ebp*1+0x66c9de]
  41c3b7:	int3   
  41c3b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3b9:	inc    ecx
  41c3ba:	mov    al,ds:0x60eb3e5
  41c3bf:	xchg   di,ax
  41c3c1:	dec    ecx
  41c3c2:	repnz mov bl,0x6
  41c3c5:	push   edi
  41c3c6:	call   FWORD PTR [edi+edi*4+0x5d]
  41c3ca:	stc    
  41c3cb:	dec    esp
  41c3cc:	test   al,0xc3
  41c3ce:	cmp    ebp,DWORD PTR [edi-0x74]
  41c3d1:	daa    
  41c3d2:	aas    
  41c3d3:	sub    cl,BYTE PTR [eax]
  41c3d5:	push   edi
  41c3d6:	and    bh,BYTE PTR [ecx]
  41c3d8:	mov    ?,WORD PTR [ecx+esi*4-0xb]
  41c3dc:	dec    esp
  41c3dd:	xchg   ebx,eax
  41c3de:	mov    cl,0x80
  41c3e0:	adc    ch,bl
  41c3e2:	dec    ebx
  41c3e3:	sub    al,0xbd
  41c3e5:	pop    esi
  41c3e6:	xchg   ebp,eax
  41c3e7:	repz jmp FWORD PTR [eax-0x45]
  41c3eb:	pop    es
  41c3ec:	mov    ds:0x8210bee4,al
  41c3f1:	out    0xad,eax
  41c3f3:	and    eax,0x35f8123c
  41c3f8:	iret   
  41c3f9:	and    al,0x49
  41c3fb:	pop    es
  41c3fc:	adc    eax,0x76c7f3a3
  41c401:	daa    
  41c402:	(bad)  
  41c403:	and    dh,BYTE PTR [eax+0x69]
  41c406:	dec    esp
  41c407:	lahf   
  41c408:	add    DWORD PTR [esi-0x21],ebx
  41c40b:	sbb    al,0xa8
  41c40d:	js     0x41c408
  41c40f:	fidiv  DWORD PTR [ecx+0x78]
  41c412:	add    DWORD PTR [eax],esi
  41c414:	jecxz  0x41c46d
  41c416:	sbb    al,0x7d
  41c418:	sub    DWORD PTR ds:0x2fd45cca,eax
  41c41e:	jo     0x41c487
  41c420:	xchg   esi,eax
  41c421:	push   ebp
  41c422:	push   0xd
  41c424:	aad    0xff
  41c426:	adc    DWORD PTR [edi-0x2a],ebp
  41c429:	mov    esp,0x77e7a2a
  41c42e:	mov    al,0xb7
  41c430:	fnstcw WORD PTR [ecx-0x8e481b]
  41c436:	or     eax,0xd8cc61bf
  41c43b:	or     al,0xfb
  41c43d:	mov    BYTE PTR [esi+esi*2+0x15],0xc8
  41c442:	dec    ebp
  41c443:	enter  0xf769,0xce
  41c447:	mov    esp,ebp
  41c449:	(bad)  
  41c44a:	neg    DWORD PTR [ebx+0x3e08fcae]
  41c450:	aas    
  41c451:	repz or cl,BYTE PTR [esi-0x7b6a4745]
  41c458:	not    ch
  41c45a:	push   ebp
  41c45b:	or     ebp,edx
  41c45d:	mov    ecx,0xd76cf138
  41c462:	inc    DWORD PTR [eax+0x37480f38]
  41c468:	push   esi
  41c469:	xchg   BYTE PTR [edx],bl
  41c46b:	xchg   esp,eax
  41c46c:	mov    ss,WORD PTR [esi+esi*4]
  41c46f:	jmp    0x41c4da
  41c471:	outs   dx,BYTE PTR ss:[esi]
  41c473:	jo     0x41c412
  41c475:	push   eax
  41c476:	cmp    al,0x18
  41c478:	mov    eax,ds:0x410031ff
  41c47d:	mov    ebp,DWORD PTR [edi+eax*1+0x2285b344]
  41c484:	xchg   BYTE PTR [edx+0x2cdebb31],ah
  41c48a:	xor    BYTE PTR [ecx+0x6c],cl
  41c48d:	mov    esp,0xbd5ee2ec
  41c492:	rcr    BYTE PTR [edi-0x7e],0x14
  41c496:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c497:	sub    DWORD PTR [esi],ecx
  41c499:	les    esp,FWORD PTR [esi+0x36]
  41c49c:	fcmovne st,st(0)
  41c49e:	aaa    
  41c49f:	sbb    al,0xb1
  41c4a1:	in     al,dx
  41c4a2:	adc    al,0xf5
  41c4a4:	xchg   ebp,eax
  41c4a5:	or     eax,0xdcf428bd
  41c4aa:	or     al,0xfc
  41c4ac:	sti    
  41c4ad:	ja     0x41c4fd
  41c4af:	xor    al,0xd7
  41c4b1:	sbb    ah,al
  41c4b3:	test   DWORD PTR [ecx-0x12],ecx
  41c4b6:	mov    edx,0x5cd61995
  41c4bb:	sub    esp,edx
  41c4bd:	mov    edx,0xb2d515ee
  41c4c2:	aaa    
  41c4c3:	arpl   bp,dx
  41c4c5:	icebp  
  41c4c6:	inc    esp
  41c4c7:	jecxz  0x41c48e
  41c4c9:	or     ebx,edi
  41c4cb:	pusha  
  41c4cc:	push   ebp
  41c4cd:	fst    QWORD PTR [edi-0x5a859674]
  41c4d3:	push   es
  41c4d4:	test   eax,0xf1df6aa9
  41c4d9:	lock adc bl,ch
  41c4dc:	xchg   edx,eax
  41c4dd:	mov    edi,0x36d9924
  41c4e2:	add    al,0xfb
  41c4e4:	sbb    edi,DWORD PTR [edx+0x28]
  41c4e7:	out    0x1d,al
  41c4e9:	inc    esi
  41c4ea:	test   al,0xc5
  41c4ec:	bound  ecx,QWORD PTR [eax]
  41c4ee:	ins    BYTE PTR es:[edi],dx
  41c4ef:	xor    DWORD PTR [edi],0x29
  41c4f2:	lahf   
  41c4f3:	enter  0x754,0xa6
  41c4f7:	mov    ch,0x7c
  41c4f9:	pop    ss
  41c4fa:	add    eax,ebp
  41c4fc:	mov    dh,0x7e
  41c4fe:	push   esi
  41c4ff:	jmp    0x41c518
  41c501:	loope  0x41c555
  41c503:	out    dx,al
  41c504:	lods   eax,DWORD PTR ds:[esi]
  41c505:	xchg   ecx,eax
  41c506:	in     eax,dx
  41c507:	mov    esp,0x82eedcb9
  41c50c:	xchg   ebp,eax
  41c50d:	(bad)  
  41c50f:	aas    
  41c510:	push   cs
  41c511:	add    ebx,ebp
  41c513:	push   ds
  41c514:	pop    esi
  41c515:	jb     0x41c4a7
  41c517:	xlat   BYTE PTR ds:[ebx]
  41c518:	mov    al,ds:0x419a9c1f
  41c51d:	into   
  41c51e:	mov    edx,0xfd09cdb8
  41c523:	jmp    0x41c4c9
  41c525:	mov    dh,0x64
  41c527:	cmp    dl,ah
  41c529:	ret    0x2fd5
  41c52c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c52d:	test   ah,dl
  41c52f:	sbb    eax,0x8b8d93c6
  41c534:	inc    ebx
  41c535:	aam    0x6f
  41c537:	adc    ebp,esi
  41c539:	gs hlt 
  41c53b:	dec    ebx
  41c53c:	stos   DWORD PTR es:[edi],eax
  41c53d:	mov    al,ds:0xe475fced
  41c542:	je     0x41c51d
  41c544:	jg     0x41c4d3
  41c546:	in     al,0x31
  41c548:	add    al,0x23
  41c54a:	jmp    0x41c530
  41c54c:	push   edx
  41c54e:	(bad)  
  41c54f:	ficom  WORD PTR [edi-0x63524c54]
  41c555:	add    eax,0xd955eb8f
  41c55a:	sub    BYTE PTR [ebp-0x15],dh
  41c55d:	out    0x43,al
  41c55f:	inc    esp
  41c560:	dec    eax
  41c561:	aad    0x71
  41c563:	sbb    ebx,DWORD PTR [edx]
  41c565:	repz clc 
  41c567:	adc    ah,al
  41c569:	jns    0x41c558
  41c56b:	lock adc BYTE PTR [ebx+0x77],bh
  41c56f:	fidiv  WORD PTR [eax+eiz*8-0x5]
  41c573:	or     eax,0x9cbbd7f
  41c578:	lock test al,0xd4
  41c57b:	lea    edx,[edi+0x58]
  41c57e:	jb     0x41c593
  41c580:	repnz stc 
  41c582:	pop    ebp
  41c583:	xlat   BYTE PTR ds:[ebx]
  41c584:	xor    DWORD PTR [esi-0x3d],eax
  41c587:	jae    0x41c50b
  41c589:	cld    
  41c58a:	push   esp
  41c58b:	imul   edx,DWORD PTR [eax],0x9b613356
  41c591:	test   al,0xfc
  41c593:	cs cmp eax,0x4ed05840
  41c599:	cwde   
  41c59a:	jmp    0x41c583
  41c59c:	fwait
  41c59d:	and    al,0x49
  41c59f:	in     eax,0xea
  41c5a1:	ret    0x65b7
  41c5a4:	leave  
  41c5a5:	outs   dx,BYTE PTR ds:[esi]
  41c5a6:	icebp  
  41c5a7:	push   ds
  41c5a8:	jno    0x41c5d9
  41c5aa:	inc    edi
  41c5ab:	dec    esi
  41c5ac:	cmp    BYTE PTR [edx-0x11],0xd5
  41c5b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5b1:	mov    edi,0xecb62d3
  41c5b6:	push   cs
  41c5b7:	mov    bl,0xc
  41c5b9:	fist   WORD PTR [ecx+0x4e2968cd]
  41c5bf:	mov    ebp,DWORD PTR [ebx+edx*2+0x2c17585d]
  41c5c6:	std    
  41c5c7:	mov    bl,0x71
  41c5c9:	push   ebx
  41c5ca:	iret   
  41c5cb:	dec    ecx
  41c5cc:	add    eax,0x80e0422
  41c5d1:	mov    fs,WORD PTR [esi+0x438911ad]
  41c5d7:	jno    0x41c5ca
  41c5d9:	xor    eax,0x24fd49f9
  41c5de:	or     bl,ch
  41c5e0:	add    bl,dh
  41c5e2:	cmp    BYTE PTR [esp+ebx*1+0x712592e],0x76
  41c5ea:	iret   
  41c5eb:	test   al,0xfa
  41c5ed:	cmp    DWORD PTR [edi+0x59ab6be9],0xffffff81
  41c5f4:	or     eax,0x1f5fe18b
  41c5f9:	push   ecx
  41c5fa:	and    ch,bl
  41c5fc:	xchg   esp,esi
  41c5fe:	lods   eax,DWORD PTR ds:[esi]
  41c5ff:	or     al,0x9a
  41c601:	shl    BYTE PTR [eax+0x6871d763],0xdc
  41c608:	shr    esp,0xc7
  41c60b:	icebp  
  41c60c:	jecxz  0x41c655
  41c60e:	adc    DWORD PTR [esi-0x12],0xc1cde787
  41c615:	es retf 
  41c617:	add    BYTE PTR [eax-0x3fc33e97],0xf3
  41c61e:	in     eax,dx
  41c61f:	arpl   WORD PTR [ecx-0x2f68f01d],sp
  41c625:	xor    DWORD PTR [esi-0x5350268],0xaa648713
  41c62f:	loop   0x41c5d6
  41c631:	mov    ds:0x32733c3f,al
  41c636:	lods   al,BYTE PTR ds:[esi]
  41c637:	jge    0x41c677
  41c639:	out    dx,al
  41c63a:	sub    edi,eax
  41c63c:	sub    dh,BYTE PTR [eax]
  41c63e:	adc    edi,DWORD PTR [ebp-0x1083b17d]
  41c644:	push   ds
  41c645:	shl    DWORD PTR [ecx],cl
  41c647:	scas   eax,DWORD PTR es:[edi]
  41c648:	test   DWORD PTR [ecx],0xee5ba8d
  41c64e:	stos   BYTE PTR es:[edi],al
  41c64f:	mov    dl,0x87
  41c651:	add    DWORD PTR ds:0xe41028af,edx
  41c657:	test   eax,0x87f56a
  41c65c:	push   edi
  41c65d:	sub    DWORD PTR [esi],0x3e
  41c660:	retf   0xbf76
  41c663:	cmc    
  41c664:	inc    ebx
  41c665:	inc    edi
  41c666:	xchg   edi,eax
  41c667:	pop    ebx
  41c668:	inc    esi
  41c669:	cmp    ebx,ecx
  41c66b:	push   ebx
  41c66c:	lea    eax,[eax+esi*4+0x6ea7bebc]
  41c673:	xor    ebx,DWORD PTR [eax+0x45]
  41c676:	adc    eax,0x946ab907
  41c67b:	cld    
  41c67c:	and    bh,al
  41c67e:	jl     0x41c691
  41c680:	sub    al,0xec
  41c682:	pop    ebx
  41c683:	or     bh,BYTE PTR [ebx+0x2776da0b]
  41c689:	inc    esi
  41c68a:	mov    ds:0xe3ad64a5,al
  41c68f:	dec    ebx
  41c690:	lds    esi,FWORD PTR [edx-0x33d3fdb]
  41c696:	mov    dl,0x7d
  41c698:	xchg   ebp,eax
  41c699:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c69a:	cmp    al,0xd0
  41c69c:	loop   0x41c6de
  41c69e:	xor    cl,cl
  41c6a0:	ss sub ebx,esp
  41c6a3:	cwde   
  41c6a4:	cmp    esi,DWORD PTR [edx+0xc]
  41c6a7:	(bad)  
  41c6a9:	(bad)  
  41c6aa:	sbb    al,0x9d
  41c6ac:	dec    edx
  41c6ad:	out    dx,eax
  41c6ae:	pop    ss
  41c6af:	sub    al,0xbf
  41c6b1:	and    al,0xc1
  41c6b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6b4:	js     0x41c724
  41c6b6:	mov    edi,0x834d3fdc
  41c6bb:	inc    esp
  41c6bc:	cmp    al,0x17
  41c6be:	jmp    0x34e6:0x427a3d90
  41c6c5:	sub    DWORD PTR [ebx-0x72657930],eax
  41c6cb:	mov    ds:0x68b801a2,al
  41c6d0:	pop    edi
  41c6d1:	jmp    0x3224d63d
  41c6d6:	pop    es
  41c6d7:	pop    ds
  41c6d8:	ins    DWORD PTR es:[edi],dx
  41c6d9:	ds stos DWORD PTR es:[edi],eax
  41c6db:	ins    BYTE PTR es:[edi],dx
  41c6dc:	add    ebp,DWORD PTR [eax]
  41c6de:	xor    eax,0xf3601b80
  41c6e3:	push   0x61
  41c6e5:	jmp    0x6877:0x2cd8926e
  41c6ec:	mov    esi,0xfe48bf8b
  41c6f1:	repnz mov ds:0x29fe5cd9,al
  41c6f7:	imul   edx,DWORD PTR [edx+0x33],0xffffffff
  41c6fb:	mov    ds:0x8733b013,eax
  41c700:	adc    al,BYTE PTR [esi+0x7be30ae1]
  41c706:	pop    ecx
  41c707:	and    DWORD PTR [esi-0x54],0xee520774
  41c70e:	pop    ss
  41c70f:	repnz aas 
  41c711:	mov    bl,0x7f
  41c713:	jge    0x41c6f3
  41c715:	dec    ecx
  41c716:	imul   ecx,DWORD PTR [ebx],0x6e
  41c719:	or     edi,esi
  41c71b:	cmc    
  41c71c:	push   ebp
  41c71d:	call   0x4a2d1502
  41c722:	adc    bh,BYTE PTR [edi]
  41c724:	das    
  41c725:	in     al,dx
  41c726:	das    
  41c727:	shl    BYTE PTR [edx+0x4b6a3ac5],cl
  41c72d:	lock mov edi,0xcff4465b
  41c733:	cmc    
  41c734:	jmp    0xeb0e2b3e
  41c739:	sbb    al,0xdb
  41c73b:	sbb    cl,BYTE PTR [edx-0x3d]
  41c73e:	mov    cl,0x36
  41c740:	in     al,0x61
  41c742:	inc    edx
  41c743:	push   eax
  41c744:	(bad)  
  41c745:	call   0x47a3bdcb
  41c74a:	loopne 0x41c71f
  41c74c:	push   edx
  41c74d:	sqrtps xmm4,xmm6
  41c750:	inc    ebp
  41c751:	retf   0x4f70
  41c754:	ror    BYTE PTR [eax+0x7c],cl
  41c757:	xchg   ecx,esi
  41c759:	mov    cs,WORD PTR [esp+eiz*8-0x1d566efb]
  41c760:	cmp    ah,BYTE PTR [ebp+eiz*1-0x2dadd99c]
  41c767:	shr    BYTE PTR [ebx],0x3
  41c76a:	pop    ds
  41c76b:	pop    es
  41c76c:	and    eax,0x4237a5f6
  41c771:	mov    al,ds:0xfc12238f
  41c776:	cmp    al,0xe8
  41c778:	sub    al,0x75
  41c77a:	ja     0x41c789
  41c77c:	test   eax,0x31fdea57
  41c781:	stos   DWORD PTR es:[edi],eax
  41c782:	test   DWORD PTR [ecx+0x36],eax
  41c785:	lods   al,BYTE PTR ds:[esi]
  41c786:	faddp  st(6),st
  41c788:	test   eax,0xba96fa86
  41c78d:	outs   dx,DWORD PTR ds:[esi]
  41c78e:	ja     0x41c7bb
  41c790:	cdq    
  41c791:	sbb    DWORD PTR [esi+0x5e],ebp
  41c794:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c795:	jg     0x41c732
  41c797:	mov    dh,0xf3
  41c799:	call   0x85b9760d
  41c79e:	xchg   ebp,eax
  41c79f:	shl    DWORD PTR [esi+0x56],1
  41c7a2:	leave  
  41c7a3:	jne    0x41c74d
  41c7a5:	cli    
  41c7a6:	scas   eax,DWORD PTR es:[edi]
  41c7a7:	gs inc ebx
  41c7a9:	xor    ch,BYTE PTR [esi-0x2e]
  41c7ac:	std    
  41c7ad:	jmp    0xace7cb51
  41c7b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7b3:	es ftst 
  41c7b6:	adc    ebx,DWORD PTR [ebx]
  41c7b8:	call   0xcb19:0xcd4bf9a9
  41c7bf:	xchg   esi,eax
  41c7c0:	sub    DWORD PTR [ebx-0x63f2d7d2],0x287ea559
  41c7ca:	call   0xa41406fc
  41c7cf:	mov    edi,DWORD PTR [edx]
  41c7d1:	popa   
  41c7d2:	jecxz  0x41c7a7
  41c7d4:	and    esi,DWORD PTR [esi-0x1c]
  41c7d7:	lds    ebp,FWORD PTR [edx-0x54c012f0]
  41c7dd:	push   esp
  41c7df:	and    al,0x6b
  41c7e1:	lods   al,BYTE PTR ds:[esi]
  41c7e2:	imul   eax,DWORD PTR [ebx-0x84306c3],0x72
  41c7e9:	lods   eax,DWORD PTR ds:[esi]
  41c7ea:	xchg   DWORD PTR ds:0x26ce1e6f,esi
  41c7f0:	ja     0x41c7b8
  41c7f2:	sti    
  41c7f3:	xchg   esp,eax
  41c7f4:	ins    BYTE PTR es:[edi],dx
  41c7f5:	and    BYTE PTR [ecx],bh
  41c7f7:	mov    ds:0x755178b6,al
  41c7fc:	sub    dh,0x30
  41c7ff:	je     0x41c804
  41c801:	pop    eax
  41c802:	pop    es
  41c803:	repz inc ebp
  41c805:	add    eax,0x2015e2a2
  41c80a:	mov    edx,0x67316bd3
  41c80f:	xchg   BYTE PTR [edi+eiz*8-0x7c],bl
  41c813:	inc    esi
  41c814:	popa   
  41c815:	(bad)  
  41c816:	aad    0xfd
  41c818:	jmp    0x6ae9:0x7dc04156
  41c81f:	cmp    ebp,0xfffffffe
  41c822:	push   cs
  41c823:	jae    0x41c868
  41c825:	jmp    0x8c9e:0x1b3ae750
  41c82c:	test   DWORD PTR [ecx],eax
  41c82e:	adc    ch,BYTE PTR [ebx+0x3e]
  41c831:	mov    al,ds:0xe46424cc
  41c836:	mov    al,0xad
  41c838:	sub    al,0x83
  41c83a:	scas   eax,DWORD PTR es:[edi]
  41c83b:	(bad)  
  41c83c:	mov    dl,0x75
  41c83e:	jecxz  0x41c82b
  41c840:	stos   DWORD PTR es:[edi],eax
  41c841:	add    esi,DWORD PTR ds:0x17aa1af3
  41c847:	scas   al,BYTE PTR es:[edi]
  41c848:	add    bh,dh
  41c84a:	sar    DWORD PTR ss:[edx+0x6b015712],0xf4
  41c852:	mov    ds:0xf9e96c22,al
  41c857:	icebp  
  41c858:	repnz mov WORD PTR [ebp-0x5a3e53ba],ds
  41c85f:	inc    edx
  41c860:	jmp    0x41c8d6
  41c862:	mov    ?,WORD PTR [edi-0x5e]
  41c865:	adc    dh,dl
  41c867:	into   
  41c868:	cmp    al,0xda
  41c86a:	in     al,0xe8
  41c86c:	pusha  
  41c86d:	add    eax,0x94eb8557
  41c872:	add    DWORD PTR [esp+ebx*8-0x74637632],ebp
  41c879:	fidivr DWORD PTR [esi-0x33]
  41c87c:	in     eax,0x45
  41c87e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c87f:	mov    ah,0xb4
  41c881:	xlat   BYTE PTR ds:[ebx]
  41c882:	lods   al,BYTE PTR ds:[esi]
  41c883:	in     al,dx
  41c884:	or     ebp,ebx
  41c886:	dec    esi
  41c887:	pop    ebp
  41c888:	jb     0x41c8aa
  41c88a:	adc    DWORD PTR [ebx+0x30030ce7],edi
  41c890:	dec    edx
  41c891:	retf   
  41c892:	sahf   
  41c893:	inc    esi
  41c894:	adc    edi,DWORD PTR [edi]
  41c896:	pop    DWORD PTR [esp+eiz*4-0xf]
  41c89a:	jge    0x41c8bc
  41c89c:	mov    esi,DWORD PTR [ebx]
  41c89e:	fcmove st,st(1)
  41c8a0:	cwde   
  41c8a1:	or     DWORD PTR [ecx-0x35182094],0xfffffffa
  41c8a8:	lock xor esp,DWORD PTR ds:0xa8a37afd
  41c8af:	adc    BYTE PTR [edi],dh
  41c8b1:	adc    DWORD PTR [eax+0xda7391a],esi
  41c8b7:	push   esp
  41c8b8:	xor    BYTE PTR [edi],0xbc
  41c8bb:	pop    ss
  41c8bc:	dec    eax
  41c8bd:	inc    eax
  41c8be:	and    DWORD PTR [edi+edi*2+0x3486e918],0x16c60841
  41c8c9:	dec    esi
  41c8ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8cb:	push   ecx
  41c8cc:	mov    bl,0x5f
  41c8ce:	std    
  41c8cf:	pusha  
  41c8d0:	sbb    eax,edi
  41c8d2:	push   0x29
  41c8d4:	or     al,0x3f
  41c8d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c8d7:	xor    al,0x47
  41c8d9:	aad    0x44
  41c8db:	xchg   ebp,eax
  41c8dc:	sub    al,0xf
  41c8de:	jecxz  0x41c8e9
  41c8e0:	dec    edx
  41c8e1:	and    BYTE PTR [edi+0x33],0x55
  41c8e5:	(bad)  
  41c8e6:	int3   
  41c8e7:	jmp    0x1d19:0x4368c866
  41c8ee:	mulps  xmm7,XMMWORD PTR [ebx]
  41c8f1:	sub    esi,ebx
  41c8f3:	into   
  41c8f4:	jecxz  0x41c935
  41c8f6:	sub    eax,0x306efc9
  41c8fb:	sbb    dh,bh
  41c8fd:	mov    ebp,0xe6e7e550
  41c902:	clc    
  41c903:	mov    edx,0xde3a2c56
  41c908:	adc    DWORD PTR [esp+ebx*4],ecx
  41c90b:	lock mov ebp,0x55702591
  41c911:	push   ebp
  41c912:	pmuludq mm5,QWORD PTR [edx+0x63e6c6cc]
  41c919:	out    dx,al
  41c91a:	and    eax,0x3d2d2952
  41c91f:	inc    ebp
  41c920:	in     eax,dx
  41c921:	test   DWORD PTR [esi+0x9],ecx
  41c924:	push   0x22
  41c926:	jnp    0x41c901
  41c928:	fscale 
  41c92a:	hlt    
  41c92b:	enter  0x64fc,0x6d
  41c92f:	xchg   esi,eax
  41c930:	mov    cl,0x60
  41c932:	sub    BYTE PTR [ebx+ebx*2-0x336818d6],dl
  41c939:	popa   
  41c93a:	pshufw mm6,QWORD PTR [eax+0x29],0x9a
  41c93f:	cdq    
  41c940:	stos   DWORD PTR es:[edi],eax
  41c941:	lods   al,BYTE PTR ds:[esi]
  41c942:	mov    WORD PTR [ebx+0x1f3e82f4],cs
  41c948:	mov    bh,0xd6
  41c94a:	or     DWORD PTR [ecx-0x39],ebp
  41c94d:	jns    0x41c99d
  41c94f:	dec    esi
  41c951:	repnz leave 
  41c953:	popa   
  41c954:	or     esp,DWORD PTR [eax]
  41c956:	mov    ah,0x6f
  41c958:	ja     0x41c956
  41c95a:	in     al,0xf7
  41c95c:	mov    ss,WORD PTR [eax-0x55]
  41c95f:	xchg   ecx,eax
  41c960:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c961:	mov    WORD PTR [esi],?
  41c963:	(bad)  
  41c965:	jle    0x41c986
  41c967:	add    ah,BYTE PTR [edx]
  41c969:	jmp    0x3768f4cd
  41c96e:	jmp    0xe9b1:0x3a414437
  41c975:	mov    al,ds:0x4984d295
  41c97a:	jge    0x41c9dc
  41c97c:	in     eax,0x4
  41c97e:	cmp    eax,0xffffff98
  41c981:	mov    eax,0x9118bdf1
  41c986:	shl    BYTE PTR ds:0x66e7a55,1
  41c98c:	in     al,0xb1
  41c98e:	pop    ebp
  41c98f:	mov    ecx,0x453851dd
  41c994:	sbb    DWORD PTR [ecx+ebx*8-0x9bf7e66],ebx
  41c99b:	scas   eax,DWORD PTR es:[edi]
  41c99c:	jmp    0x41c9ae
  41c99e:	sar    al,cl
  41c9a0:	les    ecx,FWORD PTR [eax+0x65]
  41c9a3:	xor    eax,DWORD PTR [esi+0xf]
  41c9a6:	lods   al,BYTE PTR ds:[esi]
  41c9a7:	cs inc esi
  41c9a9:	lock popf 
  41c9ab:	inc    esi
  41c9ac:	mov    ah,0xb3
  41c9ae:	sbb    BYTE PTR [esi],dh
  41c9b0:	pop    ebp
  41c9b1:	fwait
  41c9b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9b3:	mov    ebp,0x47d20988
  41c9b8:	clc    
  41c9b9:	push   esp
  41c9ba:	adc    eax,0x4cacc19
  41c9bf:	pop    esp
  41c9c0:	mov    dh,dh
  41c9c2:	test   BYTE PTR [edx-0x7f917fad],dl
  41c9c8:	ret    
  41c9c9:	jbe    0x41c9de
  41c9cb:	popf   
  41c9cc:	or     BYTE PTR [ecx+0x37bce192],0x2c
  41c9d3:	adc    al,0xd8
  41c9d5:	mov    eax,ds:0x42b657a8
  41c9da:	shl    BYTE PTR [esi+ecx*8-0x1220d1a],1
  41c9e1:	and    BYTE PTR es:[edi],dh
  41c9e4:	inc    edi
  41c9e5:	(bad)  
  41c9e6:	dec    DWORD PTR [esi+0x20]
  41c9e9:	ja     0x41ca06
  41c9eb:	repnz mov ebx,0xabac899a
  41c9f1:	xchg   ebp,eax
  41c9f2:	lea    ebp,[edi+0x7fb6f8bf]
  41c9f8:	lock in al,dx
  41c9fa:	mov    dh,0xac
  41c9fc:	and    al,0xb3
  41c9fe:	cld    
  41c9ff:	pop    ss
  41ca00:	dec    esi
  41ca01:	sbb    al,0x5c
  41ca03:	xor    DWORD PTR [edx-0x4e],esp
  41ca06:	mov    ebp,0xf6bd9558
  41ca0b:	out    dx,al
  41ca0c:	cmc    
  41ca0d:	add    BYTE PTR [esi+edi*1-0x53670c3b],ah
  41ca14:	inc    edx
  41ca15:	cdq    
  41ca16:	out    0xb2,al
  41ca18:	lds    ebp,FWORD PTR [ebx-0x630c3e9c]
  41ca1e:	aam    0x1e
  41ca20:	dec    DWORD PTR [edi-0xe]
  41ca23:	jns    0x41ca55
  41ca25:	xor    al,0x85
  41ca27:	test   eax,0xfa7db74
  41ca2c:	cli    
  41ca2d:	mov    esi,0x7a85567e
  41ca32:	jbe    0x41ca78
  41ca34:	stos   BYTE PTR es:[edi],al
  41ca35:	mov    ecx,0x25baa0c2
  41ca3a:	push   edx
  41ca3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca3c:	scas   al,BYTE PTR es:[edi]
  41ca3d:	and    esp,eax
  41ca3f:	push   ds
  41ca40:	jp     0x41caa7
  41ca42:	(bad)  
  41ca43:	push   edx
  41ca44:	sub    al,BYTE PTR [ebx+eiz*1+0x5f92aaee]
  41ca4b:	in     eax,dx
  41ca4c:	cmp    bl,BYTE PTR [esi+0x59]
  41ca4f:	out    0x27,al
  41ca51:	mov    dl,0xe6
  41ca53:	or     ah,BYTE PTR [ebp-0x5b]
  41ca56:	xchg   edx,eax
  41ca57:	push   ebx
  41ca58:	ins    DWORD PTR es:[edi],dx
  41ca59:	push   eax
  41ca5a:	shufps xmm1,XMMWORD PTR [eax+0x534c0b80],0xd6
  41ca62:	call   FWORD PTR [edi-0x42fca9ff]
  41ca68:	add    eax,0x767562bf
  41ca6d:	add    eax,0x4d4824de
  41ca72:	xchg   esp,eax
  41ca73:	mov    ebx,0xeeefdc10
  41ca78:	lds    ecx,FWORD PTR [edx]
  41ca7a:	leave  
  41ca7b:	jae    0x41caec
  41ca7d:	adc    DWORD PTR [ebx],ebx
  41ca7f:	lds    esi,FWORD PTR [edi]
  41ca81:	push   edi
  41ca82:	inc    esp
  41ca83:	(bad)  
  41ca84:	neg    edx
  41ca86:	mov    ch,0x87
  41ca88:	add    BYTE PTR [edi+ecx*2],dh
  41ca8b:	imul   esi,DWORD PTR [ecx],0x5c03e5b6
  41ca91:	jnp    0x41ca4a
  41ca93:	mov    al,0x24
  41ca95:	mov    BYTE PTR [esi+eax*2],bl
  41ca98:	int    0x41
  41ca9a:	(bad)  
  41ca9b:	jge    0x41cad8
  41ca9d:	mov    bl,0xf0
  41ca9f:	in     eax,0xe7
  41caa1:	sar    DWORD PTR [esi+edx*2],0xc2
  41caa5:	test   eax,0xbfe220d9
  41caaa:	inc    esp
  41caab:	jg     0x41ca58
  41caad:	xor    esp,ecx
  41caaf:	aad    0x4d
  41cab1:	xlat   BYTE PTR ds:[ebx]
  41cab2:	xor    al,0x3e
  41cab4:	xor    ch,BYTE PTR [edi]
  41cab6:	adc    BYTE PTR [ebp+0x60a5dc01],bh
  41cabc:	sahf   
  41cabd:	or     BYTE PTR [ecx-0x2ea751db],ch
  41cac3:	es push esi
  41cac5:	lock js 0x41cb2c
  41cac8:	inc    ebx
  41cac9:	ffreep st(0)
  41cacb:	mov    ebx,0xf45aff59
  41cad0:	and    BYTE PTR [esi+0x164079b9],0xf8
  41cad7:	ret    0x295f
  41cada:	adc    bl,al
  41cadc:	xor    eax,0xd7ed7c7a
  41cae1:	stos   BYTE PTR es:[edi],al
  41cae2:	pop    ebx
  41cae3:	fnsave [ecx+0x4e]
  41cae6:	(bad)  
  41cae7:	aam    0xef
  41cae9:	in     al,dx
  41caea:	sahf   
  41caeb:	pop    edi
  41caec:	pop    ebx
  41caed:	xchg   ebp,eax
  41caee:	push   ecx
  41caef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41caf0:	(bad)  
  41caf1:	mov    edx,0x86935cf3
  41caf6:	inc    esi
  41caf7:	xchg   edx,eax
  41caf8:	cmp    bl,BYTE PTR [esi]
  41cafa:	xor    esi,DWORD PTR [ebx-0x17171cd]
  41cb00:	mov    WORD PTR [ebx],ss
  41cb02:	sar    BYTE PTR [eax],cl
  41cb04:	fild   QWORD PTR [ecx+0x4c]
  41cb07:	jbe    0x41cb35
  41cb09:	in     al,dx
  41cb0a:	push   eax
  41cb0b:	mov    ebp,DWORD PTR [ebp+0x33]
  41cb0e:	cmp    eax,edi
  41cb10:	add    BYTE PTR [edi+eax*4-0x7a12ec77],bl
  41cb17:	xor    BYTE PTR [esi],ch
  41cb19:	dec    edi
  41cb1a:	push   ebp
  41cb1b:	adc    BYTE PTR [ebp-0x79252480],cl
  41cb21:	xlat   BYTE PTR ds:[ebx]
  41cb22:	call   0x5ed43adf
  41cb27:	jecxz  0x41caff
  41cb29:	int3   
  41cb2a:	loop   0x41cb1f
  41cb2c:	call   0xc44:0xd548a95a
  41cb33:	gs retf 
  41cb35:	cmp    bh,dl
  41cb37:	mov    edi,eax
  41cb39:	rol    DWORD PTR [eax+0x7cb32639],0x9f
  41cb40:	mov    ebp,0x9faa9913
  41cb45:	and    cl,cl
  41cb47:	pop    ss
  41cb48:	push   ss
  41cb49:	sti    
  41cb4a:	push   ebp
  41cb4b:	sub    bh,dl
  41cb4d:	push   eax
  41cb4e:	mov    WORD PTR [esi+0x3d],?
  41cb51:	mov    ?,WORD PTR [eax+0xd87d5ad]
  41cb57:	adc    al,BYTE PTR [ebx]
  41cb59:	imul   esi,DWORD PTR [edx+0x7d],0xffffffc8
  41cb5d:	dec    edi
  41cb5e:	pop    edi
  41cb5f:	sahf   
  41cb60:	dec    ebp
  41cb61:	loopne 0x41cb43
  41cb63:	stos   BYTE PTR es:[edi],al
  41cb64:	mov    ch,0x8
  41cb66:	fidivr DWORD PTR [ecx]
  41cb68:	sbb    BYTE PTR [esi],bh
  41cb6a:	data16 jae 0x41cb7e
  41cb6d:	xchg   ebx,eax
  41cb6e:	imul   ebx,DWORD PTR [edi-0x3e],0xb7300d43
  41cb75:	jb     0x41cb9f
  41cb77:	jecxz  0x41cb64
  41cb79:	aad    0x7e
  41cb7b:	js     0x41cba0
  41cb7d:	jmp    0x41cbe3
  41cb7f:	imul   ecx,DWORD PTR [ecx],0x4a
  41cb82:	dec    edi
  41cb83:	pop    eax
  41cb84:	jp     0x41cb74
  41cb86:	(bad)  
  41cb87:	pusha  
  41cb88:	out    0x1a,al
  41cb8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb8b:	sub    DWORD PTR [edx+0x31],edx
  41cb8e:	cs push ebp
  41cb90:	(bad)  
  41cb91:	test   dh,0xe
  41cb94:	fucomp st(0)
  41cb96:	cwde   
  41cb97:	out    0x69,eax
  41cb99:	add    DWORD PTR [ecx-0x635daae2],edi
  41cb9f:	les    ebp,FWORD PTR [eax+0x5e]
  41cba2:	cmp    eax,0x83c59d61
  41cba7:	hlt    
  41cba8:	cmp    bh,BYTE PTR [esi]
  41cbaa:	out    dx,al
  41cbab:	stc    
  41cbac:	jne    0x41cbaf
  41cbae:	dec    edi
  41cbaf:	push   eax
  41cbb0:	cmp    esp,ebx
  41cbb2:	test   eax,0x166da9f0
  41cbb7:	imul   eax,DWORD PTR [esi],0x1d
  41cbba:	(bad)  
  41cbbb:	mov    eax,0x825af24
  41cbc0:	icebp  
  41cbc1:	push   edi
  41cbc2:	popf   
  41cbc3:	or     eax,0x113f9a5f
  41cbc8:	inc    esi
  41cbc9:	adc    BYTE PTR es:[esi],dl
  41cbcc:	ds pop ebp
  41cbce:	cmp    al,0xb2
  41cbd0:	sub    al,0x98
  41cbd2:	cmp    al,0x9b
  41cbd4:	and    DWORD PTR [edi-0x286d2f77],ebx
  41cbda:	stos   DWORD PTR es:[edi],eax
  41cbdb:	out    dx,al
  41cbdc:	cs adc al,0x57
  41cbdf:	popf   
  41cbe0:	push   ebp
  41cbe1:	(bad)  
  41cbe2:	ja     0x41cb8b
  41cbe4:	push   edi
  41cbe5:	xlat   BYTE PTR ds:[ebx]
  41cbe6:	std    
  41cbe7:	dec    ebx
  41cbe8:	out    0xfa,eax
  41cbea:	jp     0x41cb7c
  41cbec:	and    eax,0x7b329ffc
  41cbf1:	ror    BYTE PTR [eax-0x7c],cl
  41cbf4:	pop    esp
  41cbf5:	jl     0x41cbec
  41cbf7:	fsub   DWORD PTR [ebx-0x45888cb2]
  41cbfd:	test   al,0xdb
  41cbff:	fiadd  DWORD PTR [eax-0x6d]
  41cc02:	arpl   WORD PTR [edx],bp
  41cc04:	adc    BYTE PTR [ebp+0x38],ch
  41cc07:	dec    eax
  41cc08:	and    eax,0x79069bf8
  41cc0d:	and    edx,esp
  41cc0f:	xor    DWORD PTR [eax+0x54],ecx
  41cc12:	xor    DWORD PTR [eax+0x1a],esp
  41cc15:	add    dh,0xfe
  41cc18:	and    DWORD PTR ds:0xe37645e9,0x9ac25ce5
  41cc22:	loope  0x41cc42
  41cc24:	addr16 aaa 
  41cc26:	and    DWORD PTR [esi-0xc],eax
  41cc29:	or     edi,esp
  41cc2b:	bound  ebp,QWORD PTR [eax]
  41cc2d:	popa   
  41cc2e:	popa   
  41cc2f:	cld    
  41cc30:	cs in  al,0x28
  41cc33:	xchg   ebp,esi
  41cc35:	dec    esp
  41cc36:	mov    eax,ds:0xd8414ef8
  41cc3b:	lahf   
  41cc3c:	mov    esi,0x5d4c0bfc
  41cc41:	xor    eax,0x457acdaa
  41cc46:	scas   al,BYTE PTR es:[edi]
  41cc47:	cli    
  41cc48:	call   0xcc54:0xf26fb599
  41cc4f:	mov    al,ds:0x84af9734
  41cc54:	aad    0x26
  41cc56:	pop    ss
  41cc57:	scas   al,BYTE PTR es:[edi]
  41cc58:	jmp    0x41cc3d
  41cc5a:	push   esp
  41cc5b:	in     eax,0x0
  41cc5d:	imul   esp,DWORD PTR [esi+0x6a],0x1b158c69
  41cc64:	imul   esp,DWORD PTR [ebx],0xffffffc8
  41cc67:	inc    esp
  41cc68:	mov    BYTE PTR ds:0xe8293b9f,ah
  41cc6e:	stc    
  41cc6f:	in     eax,dx
  41cc70:	pusha  
  41cc71:	xchg   esi,eax
  41cc72:	in     al,0x8a
  41cc74:	pushf  
  41cc75:	lds    esi,FWORD PTR [edi-0x6bb737d3]
  41cc7b:	stc    
  41cc7c:	xor    al,BYTE PTR [eax+0x55]
  41cc7f:	pusha  
  41cc80:	jmp    0xaea1:0x48c6052b
  41cc87:	pop    ebx
  41cc88:	bound  esp,QWORD PTR [edx+0x76e4f697]
  41cc8e:	out    0xd0,eax
  41cc90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc91:	xchg   BYTE PTR [esi+0xb],ch
  41cc94:	cmp    DWORD PTR [ecx+ebx*4-0x11],esp
  41cc98:	loopne 0x41cc9f
  41cc9a:	in     al,0x18
  41cc9c:	xor    dl,BYTE PTR [eax]
  41cc9e:	cdq    
  41cc9f:	inc    eax
  41cca0:	clc    
  41cca1:	loop   0x41cc27
  41cca3:	xor    BYTE PTR [eax+0x60],al
  41cca6:	inc    esi
  41cca7:	mov    BYTE PTR ds:0x1bd0c8a,cl
  41ccad:	loope  0x41cd1c
  41ccaf:	aad    0xc4
  41ccb1:	fs retf 
  41ccb3:	les    ebx,FWORD PTR [edi+0x29]
  41ccb6:	inc    edi
  41ccb7:	jae    0x41cc63
  41ccb9:	outs   dx,BYTE PTR ds:[esi]
  41ccba:	stos   BYTE PTR es:[edi],al
  41ccbb:	aad    0x5c
  41ccbd:	adc    bl,bh
  41ccbf:	ror    DWORD PTR [ebx-0x6a],1
  41ccc2:	lods   al,BYTE PTR ds:[esi]
  41ccc3:	jmp    DWORD PTR [ebp+0x4e]
  41ccc6:	xchg   ecx,eax
  41ccc7:	aad    0x30
  41ccc9:	sti    
  41ccca:	adc    al,0x0
  41cccc:	mov    edx,0xdfca91ae
  41ccd1:	xchg   DWORD PTR [ebp-0x61],eax
  41ccd4:	and    DWORD PTR [ecx+0x3740b6ff],edx
  41ccda:	loopne 0x41cd3c
  41ccdc:	enter  0x2136,0x94
  41cce0:	retf   0x36d
  41cce3:	dec    eax
  41cce4:	dec    ebp
  41cce5:	sbb    ah,dh
  41cce7:	xchg   ebx,eax
  41cce8:	pop    ebp
  41cce9:	fwait
  41ccea:	fwait
  41cceb:	add    BYTE PTR [edi],ah
  41cced:	mov    al,ds:0x66c9cc7c
  41ccf2:	ins    BYTE PTR es:[edi],dx
  41ccf3:	fmul   DWORD PTR [ebx-0x71]
  41ccf6:	pop    es
  41ccf7:	out    dx,al
  41ccf8:	pusha  
  41ccf9:	sub    BYTE PTR [ecx],al
  41ccfb:	imul   edx,DWORD PTR [eax+0x20],0x52
  41ccff:	inc    ecx
  41cd00:	jnp    0x41ccd7
  41cd02:	outs   dx,DWORD PTR ds:[esi]
  41cd03:	dec    edx
  41cd04:	push   ss
  41cd05:	repz xlat BYTE PTR ds:[ebx]
  41cd07:	scas   eax,DWORD PTR es:[edi]
  41cd08:	ds (bad) 
  41cd0a:	adc    DWORD PTR [ebx+0x34b42a45],eax
  41cd10:	sub    BYTE PTR [esi],ah
  41cd12:	mov    eax,ds:0xcb7aa7b7
  41cd17:	or     eax,edx
  41cd19:	add    al,0x29
  41cd1b:	in     al,dx
  41cd1c:	daa    
  41cd1d:	push   eax
  41cd1e:	mov    es,edi
  41cd20:	xlat   BYTE PTR ds:[ebx]
  41cd21:	in     al,0x1
  41cd23:	stos   DWORD PTR es:[edi],eax
  41cd24:	imul   ebx,DWORD PTR [ebx-0x73],0xaf5bf505
  41cd2b:	mov    esi,0x94b8faae
  41cd30:	xor    DWORD PTR [edi+0x5871d2df],edx
  41cd36:	pop    edx
  41cd37:	jae    0x41cd70
  41cd39:	add    eax,0xb07e8af3
  41cd3e:	inc    ecx
  41cd3f:	push   cs
  41cd40:	xchg   edx,eax
  41cd41:	pop    eax
  41cd42:	pop    ebp
  41cd43:	cmc    
  41cd44:	aad    0xed
  41cd46:	bound  esi,QWORD PTR [esi+0x1b]
  41cd49:	sub    eax,0x6fbabb48
  41cd4e:	pop    es
  41cd4f:	add    eax,0x45278eb8
  41cd54:	add    cl,bl
  41cd56:	xchg   edx,eax
  41cd57:	mov    cl,0xb8
  41cd59:	aad    0xc1
  41cd5b:	adc    DWORD PTR [ecx],ebx
  41cd5d:	and    BYTE PTR [edx],bl
  41cd5f:	mov    cx,0x47ff
  41cd63:	(bad)  
  41cd64:	mov    ds:0x45320378,al
  41cd69:	and    BYTE PTR [ebx+0x1ad39595],bl
  41cd6f:	xchg   edx,eax
  41cd70:	enter  0xc865,0x9b
  41cd74:	ins    BYTE PTR es:[edi],dx
  41cd75:	daa    
  41cd76:	pushf  
  41cd77:	and    DWORD PTR [edx+eiz*1],0xffffff90
  41cd7b:	cdq    
  41cd7c:	sbb    esp,DWORD PTR [edx]
  41cd7e:	add    esi,DWORD PTR [edi-0x6f071c25]
  41cd84:	pop    ebx
  41cd85:	pop    esp
  41cd86:	xchg   edx,eax
  41cd87:	icebp  
  41cd88:	inc    ecx
  41cd89:	jmp    0xe1b2:0x73b98a03
  41cd90:	outs   dx,DWORD PTR ds:[esi]
  41cd91:	adc    BYTE PTR [esi-0x66c96cc4],bl
  41cd97:	push   0x2a4cb4b4
  41cd9c:	push   ds
  41cd9d:	lea    eax,ds:0x795448c7
  41cda3:	pop    esi
  41cda4:	rol    BYTE PTR [esp+eax*1],0x8c
  41cda8:	fcmovb st,st(1)
  41cdaa:	or     al,0x78
  41cdac:	adc    DWORD PTR [esi-0x6256dd86],ebx
  41cdb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cdb3:	sbb    esi,DWORD PTR [edi]
  41cdb5:	(bad)  
  41cdb6:	cmp    al,0xfb
  41cdb8:	push   ds
  41cdb9:	imul   eax,DWORD PTR [ebx+0x58550262],0x9bcb2e7b
  41cdc3:	iret   
  41cdc4:	in     eax,dx
  41cdc5:	jp     0x41ce33
  41cdc7:	mov    al,0xe4
  41cdc9:	fdivr  DWORD PTR [ecx+0x73]
  41cdcc:	ins    DWORD PTR es:[edi],dx
  41cdcd:	repnz xor dh,BYTE PTR ds:0xcc88f07
  41cdd4:	add    BYTE PTR [ebx-0x73],ch
  41cdd7:	xchg   ecx,eax
  41cdd8:	mov    WORD PTR [ecx-0x7583c472],?
  41cdde:	cmp    esp,ebx
  41cde0:	xor    al,0xa
  41cde2:	pop    ecx
  41cde3:	pop    es
  41cde4:	mov    ds:0xb8316791,al
  41cde9:	ins    BYTE PTR es:[edi],dx
  41cdea:	pop    ebp
  41cdeb:	sbb    BYTE PTR [ebx-0x72],bl
  41cdee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdef:	dec    esp
  41cdf0:	jb     0x41cd98
  41cdf2:	jg     0x41ce03
  41cdf4:	out    dx,eax
  41cdf5:	scas   eax,DWORD PTR es:[edi]
  41cdf6:	lods   al,BYTE PTR ds:[esi]
  41cdf7:	inc    ebp
  41cdf8:	xchg   dx,ax
  41cdfa:	push   es
  41cdfb:	shl    esp,cl
  41cdfd:	fcom   DWORD PTR [ecx+0x27]
  41ce00:	jns    0x41ce32
  41ce02:	cmp    eax,0x4d6bb853
  41ce07:	cmp    DWORD PTR [edx-0x16],edi
  41ce0a:	dec    ebp
  41ce0b:	inc    ebp
  41ce0c:	xchg   ebp,eax
  41ce0d:	loope  0x41cd9c
  41ce0f:	fs jl  0x41cdde
  41ce12:	and    DWORD PTR [edx],esi
  41ce14:	test   al,0xcc
  41ce16:	jne    0x41cdb9
  41ce18:	or     BYTE PTR [edx+0x30],ch
  41ce1b:	pusha  
  41ce1c:	(bad)  
  41ce1d:	scas   eax,DWORD PTR es:[edi]
  41ce1e:	dec    edi
  41ce1f:	mov    BYTE PTR [ebx+esi*8-0x7a],bh
  41ce23:	push   es
  41ce24:	ja     0x41ce68
  41ce26:	out    0xe2,al
  41ce28:	push   eax
  41ce29:	loop   0x41ce60
  41ce2b:	aad    0x12
  41ce2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce2e:	sbb    cl,BYTE PTR [ecx]
  41ce30:	(bad)  
  41ce31:	sbb    ch,ah
  41ce33:	push   ebp
  41ce34:	xor    edx,edx
  41ce36:	es mov ch,0xad
  41ce39:	and    eax,0xa54e90c4
  41ce3e:	ins    DWORD PTR es:[edi],dx
  41ce3f:	push   edi
  41ce40:	push   esi
  41ce41:	cmp    BYTE PTR [edx+eax*4+0x4954ba89],bh
  41ce48:	nop
  41ce49:	or     al,0xc3
  41ce4b:	xor    ecx,ebp
  41ce4d:	loop   0x41ce66
  41ce4f:	stc    
  41ce50:	sub    eax,0xf763662f
  41ce55:	mov    BYTE PTR [ebx],0x31
  41ce58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce59:	call   0xd09b08c1
  41ce5e:	xchg   edx,eax
  41ce5f:	std    
  41ce60:	sbb    DWORD PTR [edi],0x115d1f3
  41ce66:	push   edi
  41ce67:	mov    ds,WORD PTR [ecx-0x27c1bbb]
  41ce6d:	retf   0x46bf
  41ce70:	jb     0x41ce67
  41ce72:	jmp    0x7373c22d
  41ce77:	pop    ds
  41ce78:	xchg   DWORD PTR [eax-0x56de17e1],edx
  41ce7e:	repnz inc esi
  41ce80:	or     al,0xd8
  41ce82:	pop    ebp
  41ce83:	add    bl,BYTE PTR [ebp+0x30a43cdb]
  41ce89:	je     0x41ce2c
  41ce8b:	not    DWORD PTR gs:[ebx+0x4d0343a5]
  41ce92:	pop    ds
  41ce93:	fidiv  DWORD PTR [ebx-0x54]
  41ce96:	or     ecx,DWORD PTR [ecx+0x79]
  41ce99:	pop    esi
  41ce9a:	cs xchg edx,eax
  41ce9c:	sbb    BYTE PTR [ebx],cl
  41ce9e:	push   es
  41ce9f:	mov    dh,0x76
  41cea1:	pop    edi
  41cea2:	inc    eax
  41cea3:	push   eax
  41cea4:	sahf   
  41cea5:	cmp    ebx,DWORD PTR [ebx+0x76f5478f]
  41ceab:	sub    bh,BYTE PTR [ecx]
  41cead:	add    dh,BYTE PTR [ebx+0x3fd49730]
  41ceb3:	or     edx,DWORD PTR [esi]
  41ceb5:	into   
  41ceb6:	aaa    
  41ceb7:	and    ah,cl
  41ceb9:	or     eax,0x1951482f
  41cebe:	xor    dh,ch
  41cec0:	leave  
  41cec1:	push   cs
  41cec2:	jmp    0x41ce5d
  41cec4:	sbb    edi,esi
  41cec6:	imul   esp,edx,0xfffffffb
  41cec9:	ins    DWORD PTR es:[edi],dx
  41ceca:	repz sub dh,dl
  41cecd:	repz or eax,0xcf1cc576
  41ced3:	inc    ebx
  41ced4:	mov    eax,ds:0x29cf2af
  41ced9:	idiv   BYTE PTR [ecx+ebp*4+0x8]
  41cedd:	mov    ds:0xb6970fd0,eax
  41cee2:	ret    0xf8c9
  41cee5:	jp     0x41cf25
  41cee7:	sbb    DWORD PTR [edx+0x49],ebp
  41ceea:	jnp    0x41cf29
  41ceec:	dec    ebp
  41ceed:	icebp  
  41ceee:	pop    ebx
  41ceef:	(bad)  
  41cef0:	cmp    al,0x79
  41cef2:	enter  0xeb0b,0x96
  41cef6:	mov    edi,0x3b4fcd51
  41cefb:	(bad)  
  41cefc:	pop    ebx
  41cefd:	mov    eax,ds:0x68e3e7fa
  41cf02:	fwait
  41cf03:	and    ebx,DWORD PTR [ecx-0x30]
  41cf06:	sahf   
  41cf07:	out    0x38,eax
  41cf09:	cdq    
  41cf0a:	push   esp
  41cf0b:	outs   dx,DWORD PTR ds:[esi]
  41cf0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf0d:	dec    eax
  41cf0e:	push   esp
  41cf0f:	daa    
  41cf10:	mov    al,ds:0xfd6fe2f0
  41cf15:	mov    eax,ds:0xcb36121a
  41cf1a:	and    esp,DWORD PTR [ecx]
  41cf1c:	cmp    DWORD PTR [ebp-0x36],esi
  41cf1f:	(bad)  
  41cf20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf21:	mov    dl,BYTE PTR [edi]
  41cf23:	pushf  
  41cf24:	aaa    
  41cf25:	xchg   edx,eax
  41cf26:	xor    ebx,eax
  41cf28:	cmc    
  41cf29:	sbb    al,0x76
  41cf2b:	retf   
  41cf2c:	sbb    eax,0x38288f07
  41cf31:	shr    BYTE PTR [ebx+0x20],cl
  41cf34:	and    bh,ah
  41cf36:	test   eax,0xd4c3f82e
  41cf3b:	test   BYTE PTR [ecx],bh
  41cf3d:	inc    ebp
  41cf3e:	div    DWORD PTR [esi+edx*2-0x5d]
  41cf42:	jmp    0x41cf7d
  41cf44:	mov    ?,eax
  41cf46:	sub    BYTE PTR [ecx-0x75],ch
  41cf49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf4a:	aas    
  41cf4b:	in     al,0xe6
  41cf4d:	int3   
  41cf4e:	xchg   edi,eax
  41cf4f:	outs   dx,BYTE PTR ds:[esi]
  41cf50:	mov    eax,0xd251535b
  41cf55:	or     bh,dh
  41cf57:	or     BYTE PTR gs:[ecx-0x36],cl
  41cf5b:	(bad)  
  41cf5c:	cmp    DWORD PTR [esi-0x59],ecx
  41cf5f:	hlt    
  41cf60:	jnp    0x41cfe1
  41cf62:	sbb    al,0x8f
  41cf64:	into   
  41cf65:	test   DWORD PTR [ecx+esi*4-0x1c],esp
  41cf69:	xor    al,BYTE PTR [edx+0x14]
  41cf6c:	jmp    0x41cf12
  41cf6e:	test   BYTE PTR [ebp-0x1a],ch
  41cf71:	jbe    0x41cf54
  41cf73:	mov    al,0x62
  41cf75:	in     al,dx
  41cf76:	push   0x8db02a89
  41cf7b:	cmp    BYTE PTR [edx+0x249992a8],0x8a
  41cf82:	add    DWORD PTR [edx-0x37ce634],0xc633d480
  41cf8c:	je     0x41cfd8
  41cf8e:	gs push esp
  41cf90:	xchg   ebx,eax
  41cf91:	int    0xee
  41cf93:	xchg   esp,eax
  41cf94:	jmp    0x8e53755d
  41cf99:	push   ebx
  41cf9a:	and    al,0x69
  41cf9c:	sub    al,0x54
  41cf9e:	sahf   
  41cf9f:	fcom   DWORD PTR [ebx]
  41cfa1:	push   cs
  41cfa2:	fdiv   DWORD PTR [eax-0x7aeaf9b2]
  41cfa8:	inc    edi
  41cfa9:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41cfab:	jns    0x41d028
  41cfad:	mul    BYTE PTR [esi-0x3f]
  41cfb0:	cmp    BYTE PTR [edi+0x7829bcbe],bh
  41cfb6:	cmp    edx,DWORD PTR [edx-0xb382d9a]
  41cfbc:	push   edi
  41cfbd:	ror    DWORD PTR [edi],1
  41cfbf:	inc    eax
  41cfc0:	pop    ebp
  41cfc1:	xchg   DWORD PTR [ecx-0x1a],edi
  41cfc4:	and    BYTE PTR [esi-0x1b6f7d6e],bl
  41cfca:	cmp    eax,0x537db7cf
  41cfcf:	jns    0x41cfa1
  41cfd1:	clc    
  41cfd2:	xlat   BYTE PTR ds:[ebx]
  41cfd3:	ins    BYTE PTR es:[edi],dx
  41cfd4:	rcl    DWORD PTR [eax],0x5e
  41cfd7:	das    
  41cfd8:	mov    BYTE PTR [esi+0x79cc4b22],bh
  41cfde:	mov    ds:0xbc20820,al
  41cfe3:	imul   ebx,DWORD PTR [esi+0x23a77393],0x2ec4cbf9
  41cfed:	fmul   DWORD PTR [ebp+0x173a7d1f]
  41cff3:	ds in  eax,dx
  41cff5:	sub    DWORD PTR [eax],eax
  41cff7:	fs lock cmp bl,bh
  41cffb:	add    al,BYTE PTR [edx-0x498644a]
  41d001:	imul   eax,ebp,0x31a2a478
  41d007:	mov    ecx,0xa0f8c1dc
  41d00c:	mov    ebx,0x9711b412
  41d011:	add    ah,BYTE PTR [esi+esi*1-0xed25047]
  41d018:	push   0x2f49d018
  41d01d:	scas   al,BYTE PTR es:[edi]
  41d01e:	dec    esi
  41d01f:	ja     0x41d051
  41d021:	aad    0xd2
  41d023:	(bad)  
  41d024:	into   
  41d025:	lahf   
  41d026:	sbb    esi,eax
  41d028:	pop    esp
  41d029:	imul   eax,DWORD PTR [eax+0x2e],0x5509df7a
  41d030:	xchg   esi,eax
  41d031:	fidiv  DWORD PTR gs:[esi+eax*1]
  41d035:	rol    BYTE PTR [ecx-0x52fb0942],0xd
  41d03c:	cdq    
  41d03d:	push   ds
  41d03e:	je     0x41d047
  41d040:	mov    al,0xad
  41d042:	stos   BYTE PTR es:[edi],al
  41d043:	adc    ch,BYTE PTR [esi+eiz*2-0x5e]
  41d047:	jne    0x41d07b
  41d049:	mov    esi,0xce162ad
  41d04e:	xchg   esi,eax
  41d04f:	mov    ds:0x5e23bad0,al
  41d054:	aas    
  41d055:	push   ds
  41d056:	dec    edx
  41d057:	pop    ds
  41d058:	xchg   ebx,eax
  41d059:	jle    0x41d089
  41d05b:	mov    dl,0x2e
  41d05d:	xlat   BYTE PTR ds:[ebx]
  41d05e:	(bad)  
  41d05f:	mov    esp,DWORD PTR [ecx]
  41d061:	fcomi  st,st(2)
  41d063:	dec    edx
  41d064:	mov    dl,0xf0
  41d066:	repz retf 0x8e38
  41d06a:	or     BYTE PTR [edx+0x2c],ah
  41d06d:	mov    edx,0xa9ee9593
  41d072:	push   esp
  41d073:	out    0xab,eax
  41d075:	popf   
  41d076:	cdq    
  41d077:	enter  0x2a45,0x2d
  41d07b:	(bad)  
  41d07f:	mov    ecx,0xb6608ab
  41d084:	dec    esp
  41d085:	ret    0x3f2d
  41d088:	xor    al,ch
  41d08a:	enter  0x3752,0x69
  41d08e:	(bad)  
  41d090:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d091:	add    edi,edi
  41d093:	mov    edx,DWORD PTR [edx+0x5a9f90be]
  41d099:	push   cs
  41d09a:	add    eax,0xad26cea5
  41d09f:	retf   0x6e11
  41d0a2:	rol    BYTE PTR [ebp+0x377dd0f],1
  41d0a8:	mov    ecx,0x88bc599b
  41d0ad:	into   
  41d0ae:	clc    
  41d0af:	sbb    bh,bh
  41d0b1:	retf   
  41d0b2:	(bad)  
  41d0b3:	xor    DWORD PTR [ecx],ebx
  41d0b5:	adc    al,0xff
  41d0b7:	outs   dx,BYTE PTR ds:[esi]
  41d0b8:	in     eax,0x8
  41d0ba:	std    
  41d0bb:	mov    ebx,0xb4e855c5
  41d0c0:	shr    DWORD PTR [ecx+0x29],1
  41d0c3:	les    esp,FWORD PTR [ebx-0x5c]
  41d0c6:	push   0x3f
  41d0c8:	dec    esi
  41d0c9:	sub    eax,0x901ee5df
  41d0ce:	or     BYTE PTR [edi],al
  41d0d0:	inc    esp
  41d0d1:	aaa    
  41d0d2:	push   esp
  41d0d3:	add    al,0x68
  41d0d5:	xor    eax,0xeb4f5ffa
  41d0da:	in     al,0x72
  41d0dc:	jmp    0xb83d:0x2ce5df32
  41d0e3:	les    esp,FWORD PTR [edi*8-0xa90022d]
  41d0ea:	jbe    0x41d163
  41d0ec:	mov    eax,ds:0x76654eaf
  41d0f1:	test   al,0xf6
  41d0f3:	inc    esi
  41d0f4:	xchg   edi,eax
  41d0f5:	(bad)  
  41d0f7:	push   edi
  41d0f8:	dec    ebp
  41d0f9:	ror    BYTE PTR [ecx],0x6c
  41d0fc:	xchg   esp,eax
  41d0fd:	daa    
  41d0fe:	add    DWORD PTR [esi],ebx
  41d100:	lahf   
  41d101:	loopne 0x41d0b9
  41d103:	sbb    al,0xdd
  41d105:	pop    ebp
  41d106:	or     eax,0x26d540e4
  41d10b:	mov    ebx,0x4985c5c6
  41d110:	(bad)
  41d113:	mov    ecx,0x7fdf4d10
  41d118:	pop    edx
  41d119:	loop   0x41d0d4
  41d11b:	lds    edi,FWORD PTR [eax-0x198f7d6d]
  41d121:	push   edi
  41d122:	push   0xb3d889f8
  41d127:	jl     0x41d0f7
  41d129:	inc    esi
  41d12a:	sbb    ebp,0xffffffa2
  41d12d:	cmp    DWORD PTR [eax],ecx
  41d12f:	out    0x37,al
  41d131:	jb     0x41d0f6
  41d133:	popa   
  41d134:	int3   
  41d135:	inc    ebx
  41d136:	sahf   
  41d137:	add    al,0x88
  41d139:	bound  edx,QWORD PTR [edx-0x3]
  41d13c:	fist   DWORD PTR [esp+eiz*2]
  41d13f:	jl     0x41d0fd
  41d141:	cmp    eax,0x5d773ca6
  41d146:	shl    cl,0x1
  41d149:	jns    0x41d167
  41d14b:	jb     0x41d14a
  41d14d:	sub    BYTE PTR [esi+ecx*1],dh
  41d150:	(bad)  
  41d151:	in     al,0x87
  41d153:	jmp    0x8a5b:0xe4c5d10e
  41d15a:	jbe    0x41d1ca
  41d15c:	mov    esi,0x3ffe21c3
  41d161:	aaa    
  41d162:	inc    eax
  41d163:	push   edx
  41d164:	ficomp WORD PTR [eax-0x71]
  41d167:	aas    
  41d168:	mov    bl,0xfd
  41d16a:	mov    bx,0x797c
  41d16e:	nop
  41d16f:	mov    ds:0x415e6587,eax
  41d174:	nop
  41d175:	dec    esp
  41d176:	and    cl,cl
  41d178:	hlt    
  41d179:	pop    ss
  41d17a:	sub    DWORD PTR [ebx-0x465f20b6],esp
  41d180:	jecxz  0x41d1af
  41d182:	mov    dl,BYTE PTR [edi]
  41d184:	lock xchg ebx,eax
  41d186:	pop    edx
  41d187:	pop    esp
  41d188:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d189:	add    ebp,eax
  41d18b:	add    ecx,0xdf5e2565
  41d191:	rcr    edx,cl
  41d193:	sbb    BYTE PTR [eax-0xb7b2583],al
  41d199:	arpl   WORD PTR [esp+edx*1-0x48],di
  41d19d:	pop    ds
  41d19e:	(bad)  
  41d19f:	shr    DWORD PTR [esi*4-0x13b71014],1
  41d1a6:	adc    ecx,DWORD PTR [edx+0xa]
  41d1a9:	mov    esp,0x614d8c1a
  41d1ae:	mov    ch,BYTE PTR [esi-0x2c]
  41d1b1:	adc    BYTE PTR [bx+di-0x80],cl
  41d1b5:	test   dh,dh
  41d1b7:	clc    
  41d1b8:	mov    es,WORD PTR [eax+0x10e48fa0]
  41d1be:	cdq    
  41d1bf:	daa    
  41d1c0:	mov    edx,0x7e046b12
  41d1c5:	(bad)  
  41d1c6:	push   ecx
  41d1c7:	sbb    al,0xbf
  41d1c9:	cmp    BYTE PTR [edx-0x40fa6c0c],al
  41d1cf:	inc    edi
  41d1d0:	ss aas 
  41d1d2:	mov    ecx,0xc0894cad
  41d1d7:	pop    es
  41d1d8:	or     eax,0x16d26369
  41d1dd:	mov    WORD PTR [ecx],fs
  41d1df:	test   eax,0x59d8fef6
  41d1e4:	loopne 0x41d214
  41d1e6:	pop    es
  41d1e7:	push   0x7b
  41d1e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d1ea:	xor    bh,BYTE PTR [eax]
  41d1ec:	dec    cl
  41d1ee:	clc    
  41d1ef:	inc    eax
  41d1f0:	aad    0xe
  41d1f2:	jg     0x41d233
  41d1f4:	div    BYTE PTR [edx-0x62]
  41d1f7:	into   
  41d1f8:	addr16 mov edx,0x5bd4c8d8
  41d1fe:	int3   
  41d1ff:	or     eax,0xe7ce4ccf
  41d204:	sbb    BYTE PTR [edi],bh
  41d206:	movntq QWORD PTR [ebx-0x80],mm0
  41d20a:	test   DWORD PTR [eax-0x6547ac7b],ebp
  41d210:	daa    
  41d211:	or     al,0xc4
  41d213:	and    BYTE PTR [eax+0x12],0xfb
  41d217:	pop    eax
  41d218:	cmp    eax,edx
  41d21a:	mov    cl,BYTE PTR [ebx+edx*4-0x3751b73d]
  41d221:	push   edx
  41d222:	inc    eax
  41d223:	or     dl,BYTE PTR ss:[eax+0x63]
  41d227:	ret    
  41d228:	and    eax,0x5641cc1e
  41d22d:	dec    ebx
  41d22e:	xor    esp,esi
  41d230:	nop
  41d231:	pop    ss
  41d232:	pop    esp
  41d233:	out    0x7c,al
  41d235:	pop    eax
  41d236:	mov    edx,DWORD PTR [esi-0x21]
  41d239:	adc    ecx,ebx
  41d23b:	dec    eax
  41d23c:	xor    al,0xf1
  41d23e:	adc    al,0xce
  41d240:	inc    esp
  41d241:	fdiv   st(7),st
  41d243:	mov    DWORD PTR [ebx+ecx*2],esp
  41d246:	in     eax,0xfb
  41d248:	and    edi,DWORD PTR [eax]
  41d24a:	push   ebp
  41d24b:	ret    
  41d24c:	outs   dx,BYTE PTR ds:[esi]
  41d24d:	dec    edi
  41d24e:	loope  0x41d2b9
  41d250:	lods   eax,DWORD PTR ds:[esi]
  41d251:	retf   
  41d252:	xchg   esi,eax
  41d253:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d254:	mov    dl,0x67
  41d256:	enter  0x16cd,0xe9
  41d25a:	aas    
  41d25b:	mov    dl,0xff
  41d25d:	jle    0x41d2ba
  41d25f:	stos   BYTE PTR es:[edi],al
  41d260:	rcr    cl,1
  41d262:	or     BYTE PTR [ebx],0xb0
  41d265:	fdivr  QWORD PTR [eax]
  41d267:	cmp    DWORD PTR [ebp+0x718e31bf],eax
  41d26d:	stc    
  41d26e:	sbb    eax,0x518e8eb0
  41d273:	mov    ebp,0x51f70c80
  41d278:	daa    
  41d279:	rol    DWORD PTR [edx-0x79],cl
  41d27c:	stos   DWORD PTR es:[edi],eax
  41d27d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d27e:	fwait
  41d27f:	into   
  41d280:	cld    
  41d281:	adc    al,BYTE PTR [edx]
  41d283:	outs   dx,BYTE PTR ds:[esi]
  41d284:	and    DWORD PTR [ebp+0x1f600269],0x6b
  41d28b:	les    edx,FWORD PTR [eax+0x23dd4029]
  41d291:	call   0x44f8:0x690d1c66
  41d298:	xchg   ebx,eax
  41d299:	add    eax,0x182b55b2
  41d29e:	mov    cl,BYTE PTR [ebp-0x3320ebd]
  41d2a4:	pop    edx
  41d2a5:	pop    ss
  41d2a6:	sub    esi,DWORD PTR [eax-0xd]
  41d2a9:	popa   
  41d2aa:	pop    edi
  41d2ab:	push   edx
  41d2ac:	in     eax,dx
  41d2ad:	int3   
  41d2ae:	inc    esi
  41d2af:	bound  edx,QWORD PTR [edx-0x6c]
  41d2b2:	mov    cl,0xf5
  41d2b4:	xor    edx,DWORD PTR [edi-0x57ea7f23]
  41d2ba:	sbb    bl,BYTE PTR [eax]
  41d2bc:	dec    edi
  41d2bd:	pop    esp
  41d2be:	xchg   ebp,eax
  41d2bf:	mov    edi,DWORD PTR [esi]
  41d2c1:	xchg   edi,eax
  41d2c2:	outs   dx,DWORD PTR ds:[esi]
  41d2c3:	xor    bh,BYTE PTR [eax+0x6fe29467]
  41d2c9:	lahf   
  41d2ca:	sbb    eax,0x550aef28
  41d2cf:	mov    esp,0x7eee4f7a
  41d2d4:	pop    ecx
  41d2d5:	rol    BYTE PTR [edi],cl
  41d2d7:	sub    ecx,edx
  41d2d9:	pop    es
  41d2da:	xor    al,0xf1
  41d2dc:	lock hlt 
  41d2de:	sub    BYTE PTR [ecx-0x7c],0xd6
  41d2e2:	test   eax,0x941fc687
  41d2e7:	cmp    BYTE PTR [ecx],dh
  41d2e9:	xchg   esi,eax
  41d2ea:	dec    ecx
  41d2eb:	int3   
  41d2ec:	xchg   esi,eax
  41d2ed:	and    DWORD PTR [ecx-0x44],ebx
  41d2f0:	dec    edi
  41d2f1:	mov    al,ds:0x5aa46d4e
  41d2f6:	iret   
  41d2f7:	xor    BYTE PTR [ebp+0x54f454e4],ah
  41d2fd:	ret    
  41d2fe:	or     DWORD PTR [edx],eax
  41d300:	fldcw  WORD PTR [ecx+0x68]
  41d303:	add    al,0x66
  41d305:	sub    al,0x1d
  41d307:	std    
  41d308:	dec    ebx
  41d309:	cdq    
  41d30a:	in     eax,0x69
  41d30c:	sbb    DWORD PTR [edi+0x79],esp
  41d30f:	cdq    
  41d310:	mov    ebx,0x9c7252f4
  41d315:	das    
  41d316:	push   edi
  41d317:	retf   
  41d318:	push   ebp
  41d319:	adc    dl,BYTE PTR [edi+eiz*8+0x47]
  41d31d:	sub    ebp,DWORD PTR [edi]
  41d31f:	push   ds
  41d320:	mov    cl,0xd
  41d322:	and    bl,0x9a
  41d325:	arpl   bp,di
  41d327:	cmp    eax,0xd3d96a2d
  41d32c:	dec    bl
  41d32e:	xor    BYTE PTR [esi+0x911ef96],al
  41d334:	aaa    
  41d335:	loope  0x41d35c
  41d337:	rcl    BYTE PTR [edi-0x12],1
  41d33a:	arpl   WORD PTR [ecx+0x3],sp
  41d33d:	mov    dl,al
  41d33f:	sub    DWORD PTR [edx+0x54],ecx
  41d342:	cli    
  41d343:	test   ah,ah
  41d345:	(bad)  
  41d346:	push   ds
  41d347:	xchg   ecx,eax
  41d348:	dec    ebx
  41d349:	mov    WORD PTR [esi+0x39b3cdef],ss
  41d34f:	sahf   
  41d350:	add    ah,BYTE PTR [eax+eiz*4]
  41d353:	pop    ds
  41d354:	test   al,0x30
  41d356:	hlt    
  41d357:	data16 add al,0x68
  41d35a:	(bad)
  41d35e:	add    eax,0x76d7a2dc
  41d363:	xor    edx,ecx
  41d365:	jge    0x41d301
  41d367:	mov    ds:0x298aa982,al
  41d36c:	ins    BYTE PTR es:[edi],dx
  41d36d:	add    BYTE PTR [edi+ebx*8-0x7993c46b],0xc2
  41d375:	push   ebp
  41d376:	xchg   esi,eax
  41d377:	into   
  41d378:	loop   0x41d395
  41d37a:	inc    DWORD PTR [ebx]
  41d37c:	dec    ecx
  41d37d:	lods   al,BYTE PTR ds:[esi]
  41d37e:	fcom   DWORD PTR gs:[edx+0x6c1d6e4d]
  41d385:	lahf   
  41d386:	sub    al,0xfd
  41d388:	out    dx,eax
  41d389:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d38a:	lea    ebx,[edi-0x4fbfdce9]
  41d390:	xchg   esi,eax
  41d391:	(bad)  
  41d392:	dec    esp
  41d393:	into   
  41d394:	loope  0x41d390
  41d396:	ret    
  41d397:	ror    DWORD PTR [esi+0x27901542],1
  41d39d:	enter  0xe867,0xbc
  41d3a1:	fimul  DWORD PTR [ebx+0x27]
  41d3a4:	push   edx
  41d3a5:	(bad)  
  41d3a6:	aaa    
  41d3a7:	dec    ecx
  41d3a8:	inc    ebp
  41d3a9:	jnp    0x41d40e
  41d3ab:	cwde   
  41d3ac:	sbb    eax,0x3f7bbc4f
  41d3b1:	repnz sub al,0x6c
  41d3b4:	sar    DWORD PTR [eiz*4-0x415244c1],1
  41d3bb:	daa    
  41d3bc:	scas   eax,DWORD PTR es:[edi]
  41d3bd:	or     DWORD PTR [eax-0x46],edi
  41d3c0:	sub    al,0x3d
  41d3c2:	xchg   ebx,eax
  41d3c3:	scas   al,BYTE PTR es:[edi]
  41d3c4:	mov    dl,0xdd
  41d3c6:	jnp    0x41d3ee
  41d3c8:	sti    
  41d3c9:	fisubr DWORD PTR [ebx+0x71]
  41d3cc:	aaa    
  41d3cd:	shr    DWORD PTR [eax-0x3c65c578],1
  41d3d3:	mov    ah,0x5c
  41d3d5:	sub    al,0x13
  41d3d7:	pop    ecx
  41d3d8:	shr    DWORD PTR [ecx-0x77],0xe4
  41d3dc:	jmp    0xb58ac1f5
  41d3e1:	inc    ebx
  41d3e2:	psadbw mm3,QWORD PTR [esi]
  41d3e5:	repnz cmp DWORD PTR [edx-0x37331362],esi
  41d3ec:	icebp  
  41d3ed:	cmp    BYTE PTR [ebx+ebx*1],0xd2
  41d3f1:	sub    DWORD PTR [edx-0x4c],eax
  41d3f4:	push   ebx
  41d3f5:	xlat   BYTE PTR ds:[ebx]
  41d3f6:	pop    eax
  41d3f7:	mov    dl,0xe7
  41d3f9:	popf   
  41d3fa:	outs   dx,DWORD PTR ds:[esi]
  41d3fb:	sbb    bh,ch
  41d3fd:	mov    ds:0x53dd5c90,eax
  41d402:	outs   dx,DWORD PTR ds:[esi]
  41d403:	pop    esp
  41d404:	add    al,0xc7
  41d406:	mov    ecx,0xd364fb4f
  41d40b:	mov    ebx,0x722d79e3
  41d410:	jb     0x41d460
  41d412:	push   ecx
  41d413:	cwde   
  41d414:	cmp    DWORD PTR [ebp-0x2575cbb5],ebp
  41d41a:	pop    edi
  41d41b:	or     eax,0x11b311a4
  41d420:	fistp  DWORD PTR [edx]
  41d422:	cwde   
  41d423:	xchg   ebp,eax
  41d424:	dec    edi
  41d425:	pop    edx
  41d426:	jb     0x41d3b3
  41d428:	cs jno 0x41d3ee
  41d42b:	repz (bad) 
  41d42e:	test   eax,0x790af122
  41d433:	xchg   ebp,eax
  41d434:	cmp    ebp,DWORD PTR [esi+eiz*4-0x5a]
  41d438:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d439:	xchg   edx,eax
  41d43a:	dec    edx
  41d43b:	call   FWORD PTR [ecx-0x64a23633]
  41d441:	mov    BYTE PTR [esp+ecx*8+0x1b43fe7],al
  41d448:	fld    st(5)
  41d44a:	cwde   
  41d44b:	cmovp  esi,DWORD PTR [ebx-0x6b7402]
  41d452:	cmc    
  41d453:	cmp    BYTE PTR [edi-0x3e],cl
  41d456:	and    esp,DWORD PTR [eax]
  41d458:	mov    eax,ds:0x89b66a09
  41d45d:	sahf   
  41d45e:	add    BYTE PTR [eax-0x10],cl
  41d461:	adc    dl,BYTE PTR fs:[edi-0x77]
  41d465:	iret   
  41d466:	push   edx
  41d467:	mov    ?,esi
  41d469:	lds    eax,FWORD PTR [ebx]
  41d46b:	retf   
  41d46c:	cmp    dl,BYTE PTR [edx+0x2e0fa39a]
  41d472:	mov    eax,ds:0xc16d2517
  41d477:	sub    DWORD PTR [edx+0x2fd509a8],ebx
  41d47d:	mov    dh,0x0
  41d47f:	pop    es
  41d480:	jmp    0x41d42e
  41d482:	cli    
  41d483:	mov    edx,0x3ad8e342
  41d488:	aam    0x44
  41d48a:	icebp  
  41d48b:	sbb    BYTE PTR ds:[ecx-0x1a],dh
  41d48f:	mov    ds:0x38efa805,eax
  41d494:	arpl   WORD PTR [edi-0x6f],ax
  41d497:	xor    eax,0x582f6576
  41d49c:	jno    0x41d506
  41d49e:	inc    eax
  41d49f:	dec    ebp
  41d4a0:	js     0x41d469
  41d4a2:	retf   0x8c80
  41d4a5:	sub    ebp,DWORD PTR [ecx-0x352c9eae]
  41d4ab:	repnz lock retf 
  41d4ae:	and    BYTE PTR [ebx-0x55bb08a],0x20
  41d4b5:	lods   eax,DWORD PTR ds:[esi]
  41d4b6:	nop
  41d4b7:	repz sti 
  41d4b9:	push   edx
  41d4ba:	sbb    DWORD PTR [ebp-0x6e],esp
  41d4bd:	mov    al,0x56
  41d4bf:	into   
  41d4c0:	mov    bl,0x86
  41d4c2:	dec    esp
  41d4c3:	bswap  esp
  41d4c5:	mov    esi,DWORD PTR ds:0x899d1a0a
  41d4cb:	pop    ss
  41d4cc:	retf   0x6ff9
  41d4cf:	inc    ecx
  41d4d0:	inc    DWORD PTR [esi+0x4807c119]
  41d4d6:	fcmovu st,st(6)
  41d4d8:	jo     0x41d53c
  41d4da:	pushf  
  41d4db:	cmc    
  41d4dc:	pop    es
  41d4dd:	ret    
  41d4de:	cwde   
  41d4df:	call   0xc756:0xe4223d7f
  41d4e6:	(bad)  
  41d4e7:	jle    0x41d514
  41d4e9:	das    
  41d4ea:	(bad)  
  41d4eb:	push   esi
  41d4ec:	dec    esp
  41d4ed:	inc    edi
  41d4ee:	xor    eax,0x47995cd4
  41d4f3:	iret   
  41d4f4:	jmp    0xaafb:0xb29fcf78
  41d4fb:	fldcw  WORD PTR [eax-0x24]
  41d4fe:	and    eax,0xc2ed44c5
  41d503:	jl     0x41d568
  41d505:	fstp   DWORD PTR [edx+0x2e]
  41d508:	test   al,0xad
  41d50a:	cmc    
  41d50b:	imul   edi,ecx,0x31720c86
  41d511:	cmp    DWORD PTR [ecx+0x5e],esi
  41d514:	cmp    DWORD PTR [ecx+0x1c07f8e5],0xd1a30682
  41d51e:	inc    esi
  41d51f:	mov    bl,BYTE PTR [eax-0x2dc10164]
  41d525:	mov    ds:0xe38958f3,eax
  41d52a:	cdq    
  41d52b:	inc    esi
  41d52c:	xchg   DWORD PTR [edi+eax*8+0x6a],eax
  41d530:	daa    
  41d531:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d532:	jle    0x41d5a1
  41d534:	inc    ebx
  41d535:	add    ebx,esp
  41d537:	jae    0x41d554
  41d539:	or     dl,bl
  41d53b:	push   eax
  41d53c:	std    
  41d53d:	scas   eax,DWORD PTR es:[edi]
  41d53e:	and    al,0x91
  41d540:	pushf  
  41d541:	sub    cl,BYTE PTR [edi+0x104c88f]
  41d547:	ret    
  41d548:	out    0x61,al
  41d54a:	repz xchg edi,eax
  41d54c:	outs   dx,DWORD PTR ds:[esi]
  41d54d:	xor    BYTE PTR ds:0xca37eff0,dh
  41d553:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d554:	mov    esi,0x57be611
  41d559:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d55a:	mov    ?,edi
  41d55c:	jne    0x41d5c5
  41d55e:	mov    bh,BYTE PTR [esi-0x7eb7d117]
  41d564:	xchg   edx,eax
  41d565:	mov    edx,0x4813c2b3
  41d56a:	sti    
  41d56b:	(bad)  
  41d56c:	xchg   ecx,eax
  41d56d:	cmp    eax,0x4f5c8259
  41d572:	jnp    0x41d5e6
  41d574:	rol    DWORD PTR [edx-0x1cf2285],cl
  41d57a:	in     al,dx
  41d57b:	adc    eax,0x57ebd8ed
  41d580:	dec    eax
  41d581:	scas   al,BYTE PTR es:[edi]
  41d582:	inc    BYTE PTR [ebx+eax*1]
  41d585:	ins    BYTE PTR es:[edi],dx
  41d586:	xor    eax,0xffdf24fc
  41d58b:	inc    esp
  41d58c:	push   ecx
  41d58d:	jp     0x41d5ba
  41d58f:	call   0x962e1102
  41d594:	or     si,WORD PTR [ecx+0x65]
  41d598:	xor    eax,0xc1ed511d
  41d59d:	jge    0x41d5ec
  41d59f:	not    DWORD PTR [ebx+0xd015afd]
  41d5a5:	lahf   
  41d5a6:	sbb    BYTE PTR [edi+0x2dfddf4a],dh
  41d5ac:	mov    bl,0x6c
  41d5ae:	rcr    BYTE PTR [ebx],0xa
  41d5b1:	push   ebx
  41d5b2:	jmp    0x41d5f9
  41d5b4:	fdivr  QWORD PTR [esp+eiz*8]
  41d5b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5b8:	mov    al,ds:0x4356a198
  41d5bd:	cld    
  41d5be:	int    0x18
  41d5c0:	xor    al,0xc3
  41d5c2:	dec    eax
  41d5c3:	mov    ebx,DWORD PTR [esi-0x47]
  41d5c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5c7:	or     bl,BYTE PTR [edx]
  41d5c9:	fwait
  41d5ca:	or     bl,BYTE PTR [ebp-0x11]
  41d5cd:	sub    ch,bh
  41d5cf:	mov    edx,0xdd04fec6
  41d5d4:	lahf   
  41d5d5:	fsub   QWORD PTR [edx-0x3ddb61af]
  41d5db:	iret   
  41d5dc:	jb     0x41d5ef
  41d5de:	mov    es,WORD PTR [eax+0x74d01776]
  41d5e4:	ret    0xb919
  41d5e7:	sub    DWORD PTR ds:0x1a46fd80,edi
  41d5ed:	test   al,0x8e
  41d5ef:	lods   al,BYTE PTR ds:[esi]
  41d5f0:	mov    eax,0x1a0aabf5
  41d5f5:	dec    esp
  41d5f6:	aam    0x34
  41d5f8:	test   DWORD PTR [ecx],ebx
  41d5fa:	pop    ss
  41d5fb:	rcr    DWORD PTR [ebp-0x5545f3c],0x65
  41d602:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d603:	mov    esi,0x181e1ffc
  41d608:	ror    eax,0x44
  41d60b:	repnz and al,0xda
  41d60e:	popa   
  41d60f:	shr    DWORD PTR [edx-0xafa0ee3],1
  41d615:	xchg   BYTE PTR [ebx],dh
  41d617:	push   esi
  41d618:	es das 
  41d61a:	es inc edx
  41d61c:	lea    edx,[eax+0x1f146a29]
  41d622:	test   BYTE PTR [ebx+0x6bd2d4f4],dl
  41d628:	xchg   ebp,eax
  41d629:	neg    DWORD PTR [esi]
  41d62b:	xchg   ebx,eax
  41d62c:	retf   0x5c33
  41d62f:	fld    DWORD PTR [edx-0x17bd96bc]
  41d635:	cmp    al,0x11
  41d637:	out    dx,al
  41d638:	jmp    0x41d689
  41d63a:	imul   ebx,esp,0x491004b5
  41d640:	popf   
  41d641:	jo     0x41d6b9
  41d643:	push   es
  41d644:	call   0xa75e:0xffd1fe8d
  41d64b:	test   esi,esp
  41d64d:	das    
  41d64e:	pop    edi
  41d64f:	popa   
  41d650:	stc    
  41d651:	xlat   BYTE PTR ds:[ebx]
  41d652:	addr16 add esp,ebx
  41d655:	inc    ebx
  41d656:	retf   0x4b46
  41d659:	shl    DWORD PTR [ebx+0x64],1
  41d65c:	lods   al,BYTE PTR ds:[esi]
  41d65d:	sub    eax,0x2e89b14d
  41d662:	push   0x910eb308
  41d667:	lods   al,BYTE PTR ds:[esi]
  41d668:	xchg   ecx,eax
  41d669:	retf   
  41d66a:	rol    ebx,0x84
  41d66d:	daa    
  41d66e:	mov    edx,0x9a0c4202
  41d673:	retf   
  41d674:	xchg   ecx,eax
  41d675:	test   eax,0x37b83cd7
  41d67a:	lods   al,BYTE PTR ds:[esi]
  41d67b:	test   al,0xb9
  41d67d:	mul    dl
  41d67f:	push   edx
  41d680:	jmp    0xce6b:0x428d7cf7
  41d687:	add    ch,BYTE PTR [edx+ebp*1-0x17cb8f59]
  41d68e:	popa   
  41d68f:	fidivr DWORD PTR [esi+edx*1]
  41d692:	out    dx,eax
  41d693:	sub    ebp,edx
  41d695:	in     eax,0xbb
  41d697:	add    DWORD PTR [ebx+0x63950021],edx
  41d69d:	xor    ebx,esp
  41d69f:	inc    eax
  41d6a0:	aas    
  41d6a1:	not    DWORD PTR [esi]
  41d6a3:	popf   
  41d6a4:	jbe    0x41d6d4
  41d6a6:	enter  0xef3,0x6e
  41d6aa:	jg     0x41d637
  41d6ac:	jae    0x41d6d5
  41d6ae:	dec    esp
  41d6af:	pop    ss
  41d6b0:	adc    eax,0x6e24ab48
  41d6b5:	cmp    eax,0x98223b51
  41d6ba:	aad    0xfe
  41d6bc:	lods   eax,DWORD PTR ds:[esi]
  41d6bd:	pushf  
  41d6be:	rcl    ebx,0x58
  41d6c1:	(bad)  
  41d6c2:	popf   
  41d6c3:	push   ebx
  41d6c4:	fst    DWORD PTR [eax-0x54]
  41d6c7:	push   esp
  41d6c8:	mov    ah,0xb1
  41d6ca:	push   ds
  41d6cb:	mov    al,ds:0x733a3337
  41d6d0:	in     ax,0xe
  41d6d3:	push   ds
  41d6d4:	dec    eax
  41d6d5:	pop    esp
  41d6d6:	xchg   edx,eax
  41d6d7:	lods   eax,DWORD PTR ds:[esi]
  41d6d8:	not    BYTE PTR [esp+ebx*2]
  41d6db:	jb     0x41d75a
  41d6dd:	stos   DWORD PTR es:[edi],eax
  41d6de:	jl     0x41d747
  41d6e0:	mov    edi,DWORD PTR ds:[ebx]
  41d6e3:	and    dh,BYTE PTR [edi+ebp*8-0x68]
  41d6e7:	rcl    DWORD PTR [ebx-0x24a41705],1
  41d6ed:	ss sbb ax,0x8cbe
  41d6f2:	dec    edi
  41d6f3:	test   BYTE PTR [edx],al
  41d6f5:	(bad)  
  41d6f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6f7:	pop    es
  41d6f8:	sbb    al,0x74
  41d6fa:	add    DWORD PTR [edi-0x40c41d4b],ebp
  41d700:	jne    0x41d76c
  41d702:	call   0x3feba20a
  41d707:	cmp    DWORD PTR [ecx+ebx*8+0x36],esi
  41d70b:	dec    edx
  41d70c:	jb     0x41d732
  41d70e:	dec    ebp
  41d70f:	int3   
  41d710:	xor    edi,edx
  41d712:	test   al,0x67
  41d714:	es daa 
  41d716:	xchg   ecx,eax
  41d717:	popa   
  41d718:	push   eax
  41d719:	outs   dx,DWORD PTR ds:[esi]
  41d71a:	dec    DWORD PTR [esi+0x17]
  41d71d:	cmp    dh,al
  41d71f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d720:	fs pusha 
  41d722:	mov    bl,0x9c
  41d724:	adc    eax,0x610e26d
  41d729:	sub    al,0x48
  41d72b:	jbe    0x41d7a1
  41d72d:	sar    ebx,1
  41d72f:	shl    DWORD PTR [ebx+ebx*2+0x36],cl
  41d733:	mov    ds:0x338e9803,al
  41d738:	outs   dx,BYTE PTR ds:[esi]
  41d739:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41d73b:	popa   
  41d73c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d73d:	shr    cl,1
  41d73f:	rol    BYTE PTR [esi+0x15b61170],cl
  41d745:	outs   dx,BYTE PTR ds:[esi]
  41d746:	retf   
  41d747:	hlt    
  41d748:	sbb    DWORD PTR [esi-0x1],edi
  41d74b:	outs   dx,BYTE PTR ds:[esi]
  41d74c:	xchg   BYTE PTR [ebx],cl
  41d74e:	mov    bl,BYTE PTR [eax-0x1db1eefd]
  41d754:	pop    ebx
  41d755:	sub    al,cl
  41d757:	pop    eax
  41d758:	pop    ecx
  41d759:	xchg   esi,eax
  41d75a:	mov    edi,0x5bd4a4a6
  41d75f:	jno    0x41d796
  41d761:	in     eax,dx
  41d762:	hlt    
  41d763:	xchg   esp,eax
  41d764:	sub    DWORD PTR [ebp+ebx*2-0x5d],ebp
  41d768:	ret    
  41d769:	xchg   DWORD PTR [esi],eax
  41d76b:	retf   0x877c
  41d76e:	arpl   WORD PTR [esi+0x62efc2a0],sp
  41d774:	jge    0x41d72f
  41d776:	dec    eax
  41d777:	add    esi,0x4d6d63a4
  41d77d:	push   es
  41d77e:	fcomp  DWORD PTR [eax-0x63f76825]
  41d784:	inc    ebx
  41d785:	inc    edi
  41d786:	xchg   ebx,eax
  41d787:	add    esi,DWORD PTR [eax]
  41d789:	vmread DWORD PTR [edx+0x50],ebx
  41d78d:	je     0x41d7c6
  41d78f:	mov    bl,0x60
  41d791:	outs   dx,BYTE PTR ds:[esi]
  41d792:	jae    0x41d7e2
  41d794:	pushf  
  41d795:	gs push esi
  41d797:	add    eax,0x2b8bb70
  41d79c:	enter  0x5688,0x91
  41d7a0:	adc    dh,BYTE PTR [eax-0x938c6fc]
  41d7a6:	inc    ebp
  41d7a7:	or     ecx,ebx
  41d7a9:	xchg   di,ax
  41d7ab:	lds    ecx,FWORD PTR [eax-0x44ec1ccb]
  41d7b1:	(bad)  
  41d7b2:	out    0xe3,al
  41d7b4:	ins    DWORD PTR es:[edi],dx
  41d7b5:	leave  
  41d7b6:	xchg   esp,eax
  41d7b7:	mov    WORD PTR [eax-0x80],?
  41d7ba:	lods   eax,DWORD PTR ds:[esi]
  41d7bb:	fdiv   DWORD PTR [eax-0x5e72d033]
  41d7c1:	sbb    ebx,DWORD PTR [edx+eax*4+0x650f54e2]
  41d7c8:	or     BYTE PTR [eax-0x73],dl
  41d7cb:	in     al,dx
  41d7cc:	arpl   WORD PTR [ebp+0x18],cx
  41d7cf:	mov    dh,0xda
  41d7d1:	or     eax,0x3a17030a
  41d7d6:	add    eax,DWORD PTR [edi+0x1278497c]
  41d7dc:	jne    0x41d84f
  41d7de:	or     bl,BYTE PTR [ebp-0x30]
  41d7e1:	or     eax,0xd474fa75
  41d7e6:	mov    al,ds:0xfc30bf0f
  41d7eb:	ror    eax,cl
  41d7ed:	mov    esp,ecx
  41d7ef:	inc    esp
  41d7f0:	lea    esp,[ebx]
  41d7f2:	fistp  WORD PTR [ecx]
  41d7f4:	pushf  
  41d7f5:	cmp    edi,DWORD PTR [esi]
  41d7f7:	xor    cl,cl
  41d7f9:	adc    DWORD PTR [ebx],ebp
  41d7fb:	aad    0xdc
  41d7fd:	jae    0x41d7c7
  41d7ff:	inc    ecx
  41d800:	add    BYTE PTR [ecx],0xdb
  41d803:	inc    ecx
  41d804:	rcr    DWORD PTR [ecx],0xd2
  41d807:	push   esi
  41d808:	sbb    BYTE PTR [edx+0xa],ah
  41d80b:	and    DWORD PTR [eax-0x38],esp
  41d80e:	sbb    al,0x83
  41d810:	aad    0xf1
  41d812:	clc    
  41d813:	pop    ss
  41d814:	jne    0x41d7fd
  41d816:	adc    eax,DWORD PTR [edi+edi*4+0x5b1e9bd9]
  41d81d:	mov    BYTE PTR [edx-0x8],ch
  41d820:	or     ch,BYTE PTR [edi+0x32973800]
  41d826:	xchg   dh,bl
  41d828:	fidiv  DWORD PTR [ecx-0x1890962f]
  41d82e:	inc    ebp
  41d82f:	pop    esp
  41d830:	pop    esp
  41d831:	push   esi
  41d832:	into   
  41d833:	daa    
  41d834:	in     eax,0x5f
  41d836:	fisub  DWORD PTR [ecx+edx*4+0x37f40468]
  41d83d:	pop    edi
  41d83e:	ficom  WORD PTR [ecx]
  41d840:	inc    esp
  41d841:	(bad)  
  41d844:	and    eax,0xb809a60c
  41d849:	add    al,BYTE PTR [edi]
  41d84b:	push   ebx
  41d84c:	push   ecx
  41d84d:	xor    ecx,DWORD PTR [esp+eax*4-0x17]
  41d851:	hlt    
  41d852:	dec    esp
  41d853:	or     BYTE PTR [ebx+0x46],al
  41d856:	(bad)  
  41d857:	mov    ebx,0xf299d40f
  41d85c:	dec    ecx
  41d85d:	and    BYTE PTR [edi-0x40066593],0xd7
  41d864:	jp     0x41d8d0
  41d866:	mov    al,ds:0x1bfe15ba
  41d86b:	(bad)  
  41d86c:	scas   al,BYTE PTR es:[edi]
  41d86d:	mov    fs,WORD PTR [eax+0x30f7df92]
  41d873:	dec    ebx
  41d874:	xchg   esi,eax
  41d875:	cmp    BYTE PTR [ecx+0x1ca76298],bh
  41d87b:	jecxz  0x41d8a1
  41d87d:	sbb    DWORD PTR [esi-0x8],eax
  41d880:	and    cl,BYTE PTR [esi+edx*8-0x28]
  41d884:	mov    eax,0x3618b30f
  41d889:	xchg   esi,eax
  41d88a:	lds    ebx,FWORD PTR [edi]
  41d88c:	pop    edi
  41d88d:	mov    edi,0x4ff50e8d
  41d892:	jecxz  0x41d883
  41d894:	inc    esp
  41d895:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d896:	test   eax,0x8eed83e1
  41d89b:	pusha  
  41d89c:	gs pop edi
  41d89e:	xor    cl,0x90
  41d8a1:	jle    0x41d8ed
  41d8a3:	fidivr DWORD PTR [edx+ebp*2-0x6]
  41d8a7:	inc    edi
  41d8a8:	scas   eax,DWORD PTR es:[edi]
  41d8a9:	icebp  
  41d8aa:	xor    eax,DWORD PTR ds:0xdafde2fa
  41d8b0:	pop    esi
  41d8b1:	out    dx,al
  41d8b2:	sub    al,ah
  41d8b4:	push   0xfffffff9
  41d8b6:	jo     0x41d932
  41d8b8:	xchg   ebx,eax
  41d8b9:	dec    eax
  41d8ba:	out    dx,eax
  41d8bb:	mul    esi
  41d8bd:	aam    0x42
  41d8bf:	push   ds
  41d8c0:	cmp    bl,BYTE PTR ds:0xf88b9918
  41d8c6:	outs   dx,BYTE PTR ds:[esi]
  41d8c7:	jne    0x41d893
  41d8c9:	xchg   edx,eax
  41d8ca:	inc    ebx
  41d8cb:	ret    
  41d8cc:	and    eax,DWORD PTR [edi-0x4904c577]
  41d8d2:	or     BYTE PTR [esi-0x7b3aab3c],ah
  41d8d8:	outs   dx,DWORD PTR ds:[esi]
  41d8d9:	pop    ss
  41d8da:	and    ecx,edi
  41d8dc:	cmp    eax,0x51ca9460
  41d8e1:	or     ch,BYTE PTR [edi]
  41d8e3:	push   0x46bc0e4a
  41d8e8:	out    0xe7,eax
  41d8ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8eb:	mov    ecx,0x17147fd5
  41d8f0:	pop    ss
  41d8f1:	ret    
  41d8f2:	iret   
  41d8f3:	and    DWORD PTR [ecx-0x27],0x1c
  41d8f7:	add    DWORD PTR [ebx+0x561b9b1b],0x62f4189b
  41d901:	mov    DWORD PTR [ebx],esp
  41d903:	and    DWORD PTR [eax+0x71364c70],edx
  41d909:	into   
  41d90a:	hlt    
  41d90b:	dec    ecx
  41d90c:	xor    bh,BYTE PTR [ebp+0x64ad39dd]
  41d912:	push   0x94aa76fa
  41d917:	cmp    eax,0xf87612ec
  41d91c:	cld    
  41d91d:	ret    0x6d61
  41d920:	xchg   edx,eax
  41d921:	dec    edx
  41d922:	jo     0x41d993
  41d924:	shl    DWORD PTR [eax+esi*8+0x75d0fa80],cl
  41d92b:	lock imul ebp,DWORD PTR [eax+0x38ed5306],0xfffffff1
  41d933:	imul   esp,DWORD PTR [edx-0xf],0xffffffe6
  41d937:	fs rcl esi,cl
  41d93a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d93b:	scas   al,BYTE PTR es:[edi]
  41d93c:	test   BYTE PTR [esi+ebp*1-0x19],0x0
  41d941:	(bad)  
  41d942:	(bad)  
  41d943:	cmp    dh,BYTE PTR [edx-0x4db44b2e]
  41d949:	xor    DWORD PTR [ecx+ebp*1-0x60540d25],eax
  41d950:	pop    esi
  41d951:	mov    sp,0xb0ae
  41d955:	addr16 (bad) 
  41d957:	push   ebx
  41d958:	jae    0x41d901
  41d95a:	arpl   WORD PTR [ebx],bp
  41d95c:	fimul  WORD PTR [eax]
  41d95e:	nop
  41d95f:	add    ah,al
  41d961:	outs   dx,BYTE PTR ds:[esi]
  41d962:	mov    esi,0xf6d7ec5d
  41d967:	or     edi,DWORD PTR [ecx+0x57]
  41d96a:	xchg   edi,eax
  41d96b:	and    al,0x3f
  41d96d:	(bad)  
  41d96e:	pop    es
  41d96f:	jne    0x41d913
  41d971:	and    al,0xfa
  41d973:	pushf  
  41d974:	sbb    BYTE PTR [ebp+0x5783d4fe],ch
  41d97a:	jbe    0x41d9e1
  41d97c:	test   dl,0x28
  41d97f:	(bad)  
  41d980:	and    dh,bl
  41d982:	daa    
  41d983:	xor    ebp,DWORD PTR [esi]
  41d985:	(bad)  
  41d986:	aas    
  41d987:	out    dx,al
  41d988:	mov    ebx,0xaa62a8b
  41d98d:	jl     0x41d99e
  41d98f:	ror    BYTE PTR [esi+0x2b776c70],1
  41d995:	and    BYTE PTR [esi],0xf2
  41d998:	push   edx
  41d999:	jl     0x41d94c
  41d99b:	rol    BYTE PTR [edi+0x54],1
  41d99e:	xchg   edi,eax
  41d99f:	out    dx,al
  41d9a0:	idiv   edi
  41d9a2:	loope  0x41d9f4
  41d9a4:	jecxz  0x41d93b
  41d9a6:	xchg   ecx,eax
  41d9a7:	or     DWORD PTR [ebp-0x7d],ebx
  41d9aa:	outs   dx,BYTE PTR ds:[esi]
  41d9ab:	push   ss
  41d9ac:	xlat   BYTE PTR ds:[ebx]
  41d9ad:	or     eax,0x9a49dfd0
  41d9b2:	mov    edx,edx
  41d9b4:	sbb    BYTE PTR [esi+edx*4],al
  41d9b7:	push   ecx
  41d9b8:	imul   ecx,DWORD PTR ds:[ebx-0x53],0x2e
  41d9bd:	pop    edx
  41d9be:	adc    al,BYTE PTR [ebx]
  41d9c0:	scas   al,BYTE PTR es:[edi]
  41d9c1:	xor    eax,0xcf2e960f
  41d9c6:	mov    dh,0x17
  41d9c8:	aas    
  41d9c9:	imul   BYTE PTR [ebx-0x1c]
  41d9cc:	xor    edx,DWORD PTR ds:0x6aad3506
  41d9d2:	jns    0x41da38
  41d9d4:	nop
  41d9d5:	shl    eax,cl
  41d9d7:	pop    ebp
  41d9d8:	out    dx,al
  41d9d9:	push   ss
  41d9da:	jl     0x41da2a
  41d9dc:	addr16 pusha 
  41d9de:	mov    bl,0xbd
  41d9e0:	mov    ebp,0x59ef1553
  41d9e5:	jmp    0x5a24:0x6ffc830d
  41d9ec:	cmp    esp,DWORD PTR [edi+0x38]
  41d9ef:	pop    ebx
  41d9f0:	mov    ch,0xec
  41d9f2:	adc    BYTE PTR [edx-0x2ee62dd],0x30
  41d9f9:	fistp  DWORD PTR [edi+edi*2]
  41d9fc:	sbb    esp,ebx
  41d9fe:	out    0x81,eax
  41da00:	or     eax,0x256106d5
  41da05:	jge    0x41d9ef
  41da07:	repz (bad)
  41da0a:	push   cs
  41da0b:	add    edx,ebx
  41da0d:	add    al,bl
  41da0f:	cwde   
  41da10:	scas   eax,DWORD PTR es:[edi]
  41da11:	ja     0x41da12
  41da13:	adc    DWORD PTR [ebx+0x52],ebp
  41da16:	push   ebx
  41da17:	in     eax,dx
  41da18:	adc    cl,bl
  41da1a:	inc    esi
  41da1b:	xchg   edx,eax
  41da1c:	dec    edi
  41da1d:	xor    edi,DWORD PTR [eax]
  41da1f:	scas   eax,DWORD PTR es:[edi]
  41da20:	retf   0xa37f
  41da23:	lods   al,BYTE PTR ds:[esi]
  41da24:	or     ch,0x9d
  41da27:	call   0xac209adb
  41da2c:	test   dh,ch
  41da2e:	mov    dh,bh
  41da30:	and    al,0xdd
  41da32:	fimul  WORD PTR [ebp-0xf]
  41da35:	cmp    DWORD PTR [edx],0xe316849
  41da3b:	jge    0x41dab8
  41da3d:	fmul   DWORD PTR [ecx-0x14e883bc]
  41da43:	dec    ebx
  41da44:	or     DWORD PTR [ebx],ecx
  41da46:	or     DWORD PTR [ecx+0x46],edx
  41da49:	ja     0x41da40
  41da4b:	fstp   DWORD PTR [ecx+0x49b3b2f2]
  41da51:	mov    bl,BYTE PTR [esi]
  41da53:	ins    BYTE PTR es:[edi],dx
  41da54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da55:	sbb    ch,bh
  41da57:	mov    esp,0x6d22312c
  41da5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da5d:	or     eax,0xd51a41c5
  41da62:	hlt    
  41da63:	sub    al,0x26
  41da65:	pop    eax
  41da66:	jecxz  0x41da70
  41da68:	dec    ecx
  41da69:	xor    ecx,DWORD PTR [ecx-0x23]
  41da6c:	js     0x41da8a
  41da6e:	pop    edx
  41da6f:	cmp    bh,BYTE PTR [edi+0x3f]
  41da72:	repnz dec eax
  41da74:	je     0x41da57
  41da76:	mov    al,BYTE PTR [edi-0x3f84fed2]
  41da7c:	and    ah,BYTE PTR [edi-0x76aea4cd]
  41da82:	scas   al,BYTE PTR es:[edi]
  41da83:	cld    
  41da84:	jmp    0x1fd6461d
  41da89:	repnz setg BYTE PTR cs:[ecx+0x315cf56b]
  41da92:	lahf   
  41da93:	cmp    ch,BYTE PTR ds:0xf91f80cd
  41da99:	sub    dl,ch
  41da9b:	lods   al,BYTE PTR ss:[esi]
  41da9d:	push   ss
  41da9e:	and    al,0x80
  41daa0:	cmp    al,0xb2
  41daa2:	jl     0x41da90
  41daa4:	mov    bl,0x82
  41daa6:	mov    esi,DWORD PTR [eax+ecx*2-0x43]
  41daaa:	ins    DWORD PTR es:[edi],dx
  41daab:	mov    bl,0x75
  41daad:	dec    edx
  41daae:	mov    ebx,0x8e2caff5
  41dab3:	jmp    esp
  41dab5:	push   ecx
  41dab6:	dec    eax
  41dab7:	pop    es
  41dab8:	lock lods al,BYTE PTR ds:[esi]
  41daba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dabb:	js     0x41daa2
  41dabd:	fcomp  st(0)
  41dabf:	adc    BYTE PTR [edx+0x75],al
  41dac2:	jno    0x41daaa
  41dac4:	fs xchg edi,eax
  41dac6:	fisttp DWORD PTR [ecx-0x3c5b2bac]
  41dacc:	inc    esp
  41dacd:	mov    ch,0x56
  41dacf:	inc    edi
  41dad0:	cmp    DWORD PTR [edi+edx*4+0x6c],esp
  41dad4:	ss sbb al,0x2f
  41dad7:	mov    ch,0xff
  41dad9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dada:	adc    DWORD PTR [ebp+0x250d4608],edi
  41dae0:	cmc    
  41dae1:	adc    cl,BYTE PTR [eax-0x5ae28868]
  41dae7:	dec    esi
  41dae8:	shl    edi,cl
  41daea:	sti    
  41daeb:	mov    ds:0x5156b099,al
  41daf0:	sub    al,0x62
  41daf2:	(bad)  
  41daf3:	fdivrp st(6),st
  41daf5:	pop    esi
  41daf6:	ins    DWORD PTR es:[edi],dx
  41daf7:	mov    esp,?
  41daf9:	xchg   DWORD PTR [edi+eiz*8-0x78d5b7bb],eax
  41db00:	mov    dl,0xc4
  41db02:	nop
  41db03:	mov    bh,0x16
  41db05:	test   BYTE PTR [edx-0x45],al
  41db08:	adc    bh,dl
  41db0a:	or     edi,ebx
  41db0c:	loope  0x41daa1
  41db0e:	aas    
  41db0f:	xchg   esi,eax
  41db10:	pushf  
  41db11:	ror    cl,0x48
  41db14:	ins    BYTE PTR es:[edi],dx
  41db15:	cmp    al,0x5c
  41db17:	ins    BYTE PTR es:[edi],dx
  41db18:	fidivr WORD PTR [edi-0x4c2be840]
  41db1e:	stos   BYTE PTR es:[edi],al
  41db1f:	in     eax,0xf6
  41db21:	xchg   edx,eax
  41db22:	shr    DWORD PTR [ecx+0x35],1
  41db25:	jle    0x41db6b
  41db27:	xor    eax,0x2516025a
  41db2c:	loope  0x41dbab
  41db2e:	jmp    0xbacf724b
  41db33:	enter  0x331d,0x37
  41db37:	or     BYTE PTR [edx+0x70],dh
  41db3a:	outs   dx,DWORD PTR ds:[esi]
  41db3b:	xor    al,0x5d
  41db3d:	xor    esp,esp
  41db3f:	stos   BYTE PTR es:[edi],al
  41db40:	sbb    BYTE PTR [edi+0x51],al
  41db43:	dec    esp
  41db44:	mov    ebx,0x2adab93f
  41db49:	ins    DWORD PTR es:[edi],dx
  41db4a:	cli    
  41db4b:	mov    dl,0x78
  41db4d:	repnz add al,0x25
  41db50:	adc    eax,0x5db88b38
  41db55:	ss (bad) 
  41db57:	jge    0x41db11
  41db59:	mov    esp,0xc6c01807
  41db5e:	xchg   ebp,eax
  41db5f:	imul   edi,DWORD PTR ds:0xbf664d51,0xffffff96
  41db66:	loop   0x41db20
  41db68:	ins    BYTE PTR es:[edi],dx
  41db69:	mov    WORD PTR [edi],gs
  41db6b:	xor    eax,0x2c11d087
  41db70:	call   0x8cefcef8
  41db75:	faddp  st(4),st
  41db77:	jb     0x41dba2
  41db79:	or     eax,0xfd1cfd1b
  41db7e:	ret    0x3b00
  41db81:	ja     0x41db9b
  41db83:	dec    ecx
  41db84:	sub    al,0xd5
  41db86:	aad    0xb6
  41db88:	dec    eax
  41db89:	inc    esp
  41db8a:	or     DWORD PTR [ebp-0x25],ecx
  41db8d:	pop    edx
  41db8e:	push   es
  41db8f:	jle    0x41dbe3
  41db91:	enter  0x5fb9,0x6c
  41db95:	or     BYTE PTR [edi],cl
  41db97:	mov    al,ds:0x168684bf
  41db9c:	pop    esi
  41db9d:	in     al,dx
  41db9e:	and    eax,0x77db314d
  41dba3:	jl     0x41dbdf
  41dba5:	inc    edi
  41dba6:	mov    esi,0x97270175
  41dbab:	in     eax,0x4
  41dbad:	push   ebp
  41dbae:	mov    WORD PTR es:[eax+0x22],?
  41dbb2:	jne    0x41dc07
  41dbb4:	ds jbe 0x41dc2d
  41dbb7:	xor    BYTE PTR [eax+eiz*1],bl
  41dbba:	ss mov ebx,0xc42ff3cd
  41dbc0:	shl    ecx,0x0
  41dbc3:	(bad)  
  41dbc4:	imul   eax,DWORD PTR [ebx+0x42],0xbee8e544
  41dbcb:	fild   DWORD PTR [ecx+0x7b]
  41dbce:	ds popa 
  41dbd0:	std    
  41dbd1:	cmp    edi,edi
  41dbd3:	je     0x41db90
  41dbd5:	lea    eax,[ebp+0xc]
  41dbd8:	sub    al,BYTE PTR [ecx-0x4]
  41dbdb:	add    BYTE PTR [edi+0x18],al
  41dbde:	sbb    edi,eax
  41dbe0:	cli    
  41dbe1:	mov    bl,0x1e
  41dbe3:	in     eax,dx
  41dbe4:	or     ch,bl
  41dbe6:	scas   eax,DWORD PTR es:[edi]
  41dbe7:	test   al,0x31
  41dbe9:	inc    eax
  41dbea:	mov    dl,ch
  41dbec:	(bad)  
  41dbed:	repz dec edx
  41dbef:	je     0x41db86
  41dbf1:	xchg   edi,eax
  41dbf2:	inc    esp
  41dbf3:	cmc    
  41dbf4:	inc    eax
  41dbf5:	ja     0x41dc44
  41dbf7:	ror    edi,cl
  41dbf9:	ss xor ecx,0xb7484d19
  41dc00:	sub    edx,esi
  41dc02:	cs adc eax,0x71875af7
  41dc08:	les    esp,FWORD PTR [ecx]
  41dc0a:	jbe    0x41dbd3
  41dc0c:	and    DWORD PTR [esi-0x1466fecf],eax
  41dc12:	and    esp,esi
  41dc14:	sub    BYTE PTR [eax],ah
  41dc16:	test   al,0x32
  41dc18:	inc    ebx
  41dc19:	lahf   
  41dc1a:	sub    al,0x2b
  41dc1c:	inc    edx
  41dc1d:	gs jle 0x41dbe4
  41dc20:	mov    bh,0x83
  41dc22:	add    ebx,DWORD PTR [edi+0x14]
  41dc25:	pusha  
  41dc26:	or     eax,DWORD PTR [esi+0x2a]
  41dc29:	xchg   edx,eax
  41dc2a:	mov    esi,0x3662f30a
  41dc2f:	pop    eax
  41dc30:	in     al,0x44
  41dc32:	inc    edi
  41dc33:	or     al,0x74
  41dc35:	rcl    BYTE PTR [ebx+0x12],0x4d
  41dc39:	or     eax,0x28109813
  41dc3e:	jle    0x41dcb7
  41dc40:	aas    
  41dc41:	pop    eax
  41dc42:	dec    edi
  41dc43:	popf   
  41dc44:	aam    0x3
  41dc46:	sub    ecx,ecx
  41dc48:	stos   DWORD PTR es:[edi],eax
  41dc49:	fisub  WORD PTR [edx-0x73]
  41dc4c:	adc    DWORD PTR [ebp+0x5b],esp
  41dc4f:	and    eax,0x358000c2
  41dc54:	mov    ebp,0x233b24fb
  41dc59:	dec    ecx
  41dc5a:	sbb    DWORD PTR [esi],esi
  41dc5c:	dec    eax
  41dc5d:	js     0x41dc9f
  41dc5f:	enter  0x658f,0xf9
  41dc63:	sbb    ah,BYTE PTR [ebx+0x68]
  41dc66:	outs   dx,BYTE PTR ds:[esi]
  41dc67:	sub    dh,BYTE PTR ds:0x32afd3b1
  41dc6d:	popf   
  41dc6e:	xchg   ecx,eax
  41dc6f:	les    ebx,FWORD PTR [eax-0x70]
  41dc72:	lds    ecx,FWORD PTR ds:0x159aa3c3
  41dc78:	pop    ds
  41dc79:	jo     0x41dcdb
  41dc7b:	mov    ecx,0x7df3363
  41dc80:	and    al,0xa0
  41dc82:	mov    edx,0x5067af9b
  41dc87:	mov    fs,WORD PTR [ecx]
  41dc89:	xlat   BYTE PTR ds:[ebx]
  41dc8a:	add    ah,BYTE PTR [ebx-0x4e3eb7b6]
  41dc90:	cwde   
  41dc91:	les    ecx,FWORD PTR [edi]
  41dc93:	and    eax,0x3fffd9db
  41dc98:	add    ebx,DWORD PTR [ebx+0x104d7b68]
  41dc9e:	pop    esp
  41dc9f:	ins    BYTE PTR es:[edi],dx
  41dca0:	ss ds call 0xbefa:0xb0d659df
  41dca9:	mov    eax,ecx
  41dcab:	sub    BYTE PTR [edi+esi*8],al
  41dcae:	lds    ebx,FWORD PTR [ebx-0x7831a8ae]
  41dcb4:	mov    ds:0x6a5c2ecd,al
  41dcb9:	or     ch,ah
  41dcbb:	rol    DWORD PTR [edx-0xf],1
  41dcbe:	jg     0x41dcdb
  41dcc0:	adc    eax,0x12f30fc6
  41dcc5:	cmp    ch,BYTE PTR [edx]
  41dcc7:	sar    BYTE PTR [edi+ebp*1+0x29caaed9],1
  41dcce:	aam    0x25
  41dcd0:	fstenv [esi-0x73]
  41dcd4:	shl    DWORD PTR [edx-0x18],1
  41dcd7:	sbb    DWORD PTR [eax+0x5],edx
  41dcda:	lds    esp,FWORD PTR [ebx-0x53b0675e]
  41dce0:	lea    esi,[eax-0x3882acb7]
  41dce6:	ret    0x188d
  41dce9:	mov    bh,0x8d
  41dceb:	sti    
  41dcec:	adc    cl,ch
  41dcee:	cwde   
  41dcef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dcf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dcf1:	mov    ecx,0x35c2c3ea
  41dcf6:	mov    eax,ds:0xb9cb2875
  41dcfb:	mov    al,0x87
  41dcfd:	(bad)  
  41dcfe:	or     edx,DWORD PTR [ebx-0x4f286194]
  41dd04:	mov    edi,0xfa12ef07
  41dd09:	aaa    
  41dd0a:	dec    edi
  41dd0b:	fsubrp st(2),st
  41dd0d:	xchg   ebx,eax
  41dd0e:	push   0x70135764
  41dd13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd14:	add    al,0x75
  41dd16:	test   DWORD PTR [esi],ebx
  41dd18:	or     al,0xb7
  41dd1a:	jl     0x41dd6f
  41dd1c:	dec    esi
  41dd1d:	or     eax,0xb1d47657
  41dd22:	stc    
  41dd23:	adc    eax,0x5f80b451
  41dd28:	add    BYTE PTR [eax-0x4fc23996],ch
  41dd2e:	fst    DWORD PTR [esi+0x980f28d]
  41dd34:	rol    BYTE PTR [ebx-0x1c],0x9b
  41dd38:	xor    cl,BYTE PTR [ebx+ecx*2]
  41dd3b:	mov    eax,ds:0x69b9118d
  41dd40:	out    dx,eax
  41dd41:	inc    edi
  41dd42:	bound  esp,QWORD PTR [ebp+edi*2+0x7c]
  41dd46:	shr    DWORD PTR [eax],0x7a
  41dd49:	les    ebx,FWORD PTR [edi+0x27]
  41dd4c:	sti    
  41dd4d:	dec    eax
  41dd4e:	addr16 jmp 0x5644:0xb79a8911
  41dd56:	cmp    DWORD PTR ds:0x39badcc5,0xc8d40ba9
  41dd60:	push   esp
  41dd61:	loope  0x41dd84
  41dd63:	and    eax,0xcb004116
  41dd68:	adc    ebx,DWORD PTR [edx-0x6faf6f92]
  41dd6e:	fsubr  DWORD PTR [ecx+esi*8]
  41dd71:	xor    edx,DWORD PTR ds:0xf62778ec
  41dd77:	sahf   
  41dd78:	inc    esp
  41dd79:	adc    BYTE PTR [esi+ebp*4],ah
  41dd7c:	pop    edx
  41dd7d:	shr    ah,cl
  41dd7f:	shr    BYTE PTR [ecx+0x57],cl
  41dd82:	mov    ebx,0x6d3b2cec
  41dd87:	fstp   QWORD PTR [ebp-0x108951a7]
  41dd8d:	mov    ecx,ebx
  41dd8f:	dec    eax
  41dd90:	repnz loopne 0x41dd3d
  41dd93:	push   cs
  41dd94:	jnp    0x41dd61
  41dd96:	add    eax,0xbc50a02c
  41dd9b:	aas    
  41dd9c:	scas   al,BYTE PTR es:[edi]
  41dd9d:	cmp    DWORD PTR [ecx],edx
  41dd9f:	jg     0x41ddfc
  41dda1:	cld    
  41dda2:	mov    edi,0x54fcd387
  41dda7:	push   cs
  41dda8:	and    ah,dh
  41ddaa:	mov    dh,0x28
  41ddac:	mov    esp,0x9d55e4a9
  41ddb1:	ficom  DWORD PTR [edx-0x26]
  41ddb4:	ficomp WORD PTR [esi-0x30768b89]
  41ddba:	xchg   ebx,eax
  41ddbb:	adc    dh,al
  41ddbd:	xor    DWORD PTR [eax],esp
  41ddbf:	fsub   QWORD PTR [eax-0x30]
  41ddc2:	xchg   esi,eax
  41ddc3:	mov    ds:0x7a6408c8,eax
  41ddc8:	mov    ds:0xbd5fee9,al
  41ddcd:	push   ds
  41ddce:	push   ds
  41ddcf:	jne    0x41de49
  41ddd1:	pop    es
  41ddd2:	bound  eax,QWORD PTR [ebx]
  41ddd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ddd5:	push   0x16
  41ddd7:	sub    DWORD PTR [esi+0x45c0afc0],edi
  41dddd:	in     eax,dx
  41ddde:	loope  0x41dd84
  41dde0:	cmp    DWORD PTR [edx+eax*1],ecx
  41dde3:	pop    ss
  41dde4:	(bad)  
  41dde5:	jne    0x41de0c
  41dde7:	call   0x2c5b:0xfcaa3471
  41ddee:	in     eax,dx
  41ddef:	mov    al,0xc1
  41ddf1:	pop    eax
  41ddf2:	push   eax
  41ddf3:	jg     0x41de1f
  41ddf5:	mov    dh,BYTE PTR ds:0x1f7f00a
  41ddfb:	rcl    BYTE PTR [esi+0x21d451b0],0xfd
  41de02:	lock mov ds:0xe508564a,eax
  41de08:	mov    cl,0x31
  41de0a:	mov    eax,ds:0x502e3985
  41de0f:	jmp    FWORD PTR [esp+eiz*8+0x496055d9]
  41de16:	dec    ebp
  41de17:	in     eax,0x6f
  41de19:	pop    edx
  41de1a:	shl    BYTE PTR [eax-0x71],0xba
  41de1e:	push   edx
  41de1f:	stc    
  41de20:	or     BYTE PTR ds:0x733b60cb,0xa2
  41de27:	test   DWORD PTR [eax+0x8],edx
  41de2a:	mov    cl,BYTE PTR [eax-0x42a29f18]
  41de30:	xchg   edi,eax
  41de31:	inc    esp
  41de32:	jmp    FWORD PTR [ebp-0x5e]
  41de35:	cmc    
  41de36:	xchg   ebp,eax
  41de37:	dec    ebp
  41de38:	mov    dl,0x8f
  41de3a:	jecxz  0x41de6a
  41de3c:	(bad)  
  41de3d:	aas    
  41de3e:	mov    ebp,0x93e358d3
  41de43:	jecxz  0x41de9e
  41de45:	out    0x10,eax
  41de47:	mov    al,ds:0x8553b680
  41de4c:	in     al,dx
  41de4d:	hlt    
  41de4e:	add    BYTE PTR [edx-0x21],dl
  41de51:	inc    ebx
  41de52:	add    al,0x2e
  41de54:	add    DWORD PTR ss:[edx+0xe49f07c],eax
  41de5b:	xchg   BYTE PTR [ebx-0x953eecd],bh
  41de61:	jns    0x41de46
  41de63:	mov    edi,0xa940f2de
  41de68:	test   eax,0x7123c271
  41de6d:	pop    ds
  41de6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de6f:	(bad)  
  41de70:	jp     0x41deb4
  41de72:	stos   BYTE PTR es:[edi],al
  41de73:	fisub  DWORD PTR [eax-0x76c0f8ca]
  41de79:	outs   dx,DWORD PTR ds:[esi]
  41de7a:	rcl    DWORD PTR [ecx+0x22],0x52
  41de7e:	mov    edi,0xbaa8d31e
  41de83:	test   BYTE PTR [esi+eax*8],dh
  41de86:	mov    dh,0xb
  41de88:	or     al,0x87
  41de8a:	jge    0x41de4f
  41de8c:	lods   eax,DWORD PTR ds:[esi]
  41de8d:	sar    ecx,0x9
  41de90:	xor    ah,ah
  41de92:	idiv   esp
  41de94:	mov    ds:0x6587be47,al
  41de99:	fld    DWORD PTR [eax-0x263d1d8b]
  41de9f:	stc    
  41dea0:	mov    esi,0x895a1657
  41dea5:	lods   al,BYTE PTR ds:[esi]
  41dea6:	sahf   
  41dea7:	jns    0x41deb4
  41dea9:	(bad)  [esi]
  41deab:	(bad)  
  41deac:	out    dx,eax
  41dead:	and    ebp,DWORD PTR ds:[edi]
  41deb0:	xlat   BYTE PTR ds:[ebx]
  41deb1:	call   0x4e67b690
  41deb6:	in     al,0xaf
  41deb8:	mov    ebp,0x5f2c4b88
  41debd:	push   0x68
  41debf:	cwde   
  41dec0:	pop    edi
  41dec1:	sub    dh,BYTE PTR [ecx+0x2f]
  41dec4:	cmp    eax,0x8f4d6463
  41dec9:	inc    ebx
  41deca:	test   eax,0x9378b5bb
  41decf:	aad    0x68
  41ded1:	js     0x41de89
  41ded3:	popf   
  41ded4:	cli    
  41ded5:	bound  edx,QWORD PTR [eax]
  41ded7:	sub    DWORD PTR [ebp+0x44ce1fcd],edi
  41dedd:	mov    edi,0x24cd2e35
  41dee2:	push   esi
  41dee3:	xor    eax,0x9c8d3d11
  41dee8:	jecxz  0x41debf
  41deea:	xor    DWORD PTR [edx],esi
  41deec:	inc    esp
  41deed:	(bad)  
  41deee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41deef:	ror    BYTE PTR [edx],cl
  41def1:	das    
  41def2:	dec    ecx
  41def3:	mov    bl,0xcf
  41def5:	xor    edx,DWORD PTR [edi]
  41def7:	fisub  DWORD PTR [edx+0x0]
  41defa:	ret    0xa8b6
  41defd:	adc    al,0x3e
  41deff:	fstp   DWORD PTR [ecx]
  41df01:	jo     0x41df7e
  41df03:	adc    esi,DWORD PTR [ebp+0x49]
  41df06:	arpl   WORD PTR [ebx-0xc],dx
  41df09:	mov    esp,DWORD PTR [edx+0x2193da93]
  41df0f:	mov    WORD PTR [edx],es
  41df11:	in     al,0x7d
  41df13:	xlat   BYTE PTR ds:[ebx]
  41df14:	out    dx,eax
  41df15:	fcmovnbe st,st(0)
  41df17:	mov    esp,0xeb1816fa
  41df1c:	mov    dh,0x70
  41df1e:	stos   BYTE PTR es:[edi],al
  41df1f:	jo     0x41df90
  41df21:	adc    eax,0x6f538145
  41df26:	jbe    0x41df82
  41df28:	adc    dh,BYTE PTR [esi-0x68a01458]
  41df2e:	test   al,0x9e
  41df30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df31:	sar    DWORD PTR [ebx+eax*2+0x71],cl
  41df35:	inc    edi
  41df36:	cli    
  41df37:	lods   eax,DWORD PTR ds:[esi]
  41df38:	dec    esp
  41df39:	hlt    
  41df3a:	mov    ds:0x94a41bbb,al
  41df3f:	mov    ebp,0xb51feb90
  41df44:	push   edx
  41df45:	sub    DWORD PTR fs:[ebx],ebp
  41df48:	into   
  41df49:	cli    
  41df4a:	call   0x309bbd48
  41df4f:	je     0x41df56
  41df51:	hlt    
  41df52:	cmp    al,0x16
  41df54:	adc    DWORD PTR [edi+esi*4-0x69733b47],esi
  41df5b:	xor    cl,ch
  41df5d:	shl    BYTE PTR [eax],0x25
  41df60:	enter  0x97e5,0xbd
  41df64:	js     0x41df15
  41df66:	pop    eax
  41df67:	push   ds
  41df68:	adc    bh,0xd1
  41df6b:	lock or BYTE PTR [ecx],cl
  41df6e:	xlat   BYTE PTR ds:[ebx]
  41df6f:	test   cl,bh
  41df71:	test   al,0x63
  41df73:	into   
  41df74:	out    0xa3,al
  41df76:	inc    edi
  41df77:	out    dx,al
  41df78:	xor    BYTE PTR [eax+0x246e60c],dl
  41df7e:	sbb    DWORD PTR [edi-0x75],edi
  41df81:	mov    bl,BYTE PTR [esi+0x20cda836]
  41df87:	iret   
  41df88:	pcmpeqw mm5,QWORD PTR [ebp-0x1aa91bea]
  41df8f:	add    al,0x28
  41df91:	pop    edx
  41df92:	repnz mov edx,0x3549441
  41df98:	inc    edi
  41df99:	and    DWORD PTR [ebp+0xcfccf95],0xd4d85ab3
  41dfa3:	xadd   DWORD PTR [ebx+0x2c],esp
  41dfa7:	xor    eax,0x1940c130
  41dfac:	xchg   edx,eax
  41dfad:	call   0x15f0e6cd
  41dfb2:	sar    bl,1
  41dfb4:	mov    edi,0xa531a4b2
  41dfb9:	pop    edi
  41dfba:	mov    ecx,ebp
  41dfbc:	and    ebp,DWORD PTR [esi+0x4a9dd580]
  41dfc2:	lds    edi,FWORD PTR [ecx]
  41dfc4:	lahf   
  41dfc5:	push   ecx
  41dfc6:	mov    esp,0x7c4fc7e4
  41dfcb:	push   0xffffffb2
  41dfcd:	push   ecx
  41dfce:	push   eax
  41dfcf:	loopne 0x41dfa2
  41dfd1:	add    ebx,ecx
  41dfd3:	scas   eax,DWORD PTR es:[edi]
  41dfd4:	add    eax,DWORD PTR ds:0x66ad1dd0
  41dfda:	aaa    
  41dfdb:	adc    al,BYTE PTR [eax+eax*8+0x3b]
  41dfdf:	out    0x8a,al
  41dfe1:	cmp    BYTE PTR [edi-0x4780a284],al
  41dfe7:	and    BYTE PTR [edx],0x3c
  41dfea:	add    dl,BYTE PTR [edx+0x63]
  41dfed:	mov    esp,0xbb9a0962
  41dff2:	(bad)  
  41dff3:	mov    ds:0x9d063c42,eax
  41dff8:	shr    BYTE PTR [edi-0x239914d9],0xed
  41dfff:	add    ebp,DWORD PTR [eax+0x74f11b31]
  41e005:	out    0x91,eax
  41e007:	cld    
  41e008:	imul   edi,ebp,0x1fe41878
  41e00e:	or     al,0x67
  41e010:	sahf   
  41e011:	jae    0x41e06b
  41e013:	dec    ebx
  41e014:	jbe    0x41e087
  41e016:	mov    DWORD PTR [ebx-0x7c548a8a],ebx
  41e01c:	mov    ebx,0xa8dca64
  41e021:	in     al,dx
  41e022:	test   al,0x2d
  41e024:	cs pop ebp
  41e026:	pop    ebx
  41e027:	and    BYTE PTR [eax-0x3ef74402],dl
  41e02d:	inc    ebp
  41e02e:	xor    eax,0xeb1d0963
  41e033:	sub    ebx,DWORD PTR ds:0x8ee7abe0
  41e039:	push   eax
  41e03a:	into   
  41e03b:	shl    BYTE PTR [edx-0x664c762c],0xd7
  41e042:	fcmovnu st,st(2)
  41e044:	xchg   ecx,eax
  41e045:	nop
  41e046:	mov    al,0xe9
  41e048:	jbe    0x41e071
  41e04a:	in     eax,0xfc
  41e04c:	jmp    0x41dfcf
  41e04e:	dec    ecx
  41e04f:	daa    
  41e050:	int3   
  41e051:	sbb    al,0x80
  41e053:	jmp    0x1c2d:0x78e28352
  41e05a:	cli    
  41e05b:	daa    
  41e05c:	mov    WORD PTR [ebx+0x279be2ae],cs
  41e062:	aam    0x3e
  41e064:	sbb    ah,dl
  41e066:	mov    bh,0x33
  41e068:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e069:	dec    esi
  41e06a:	dec    edx
  41e06b:	mov    ch,0x5f
  41e06d:	and    al,0xd8
  41e06f:	call   0xd1f4:0x4582dd40
  41e076:	lods   al,BYTE PTR ds:[esi]
  41e077:	jns    0x41e0b1
  41e079:	fsubr  QWORD PTR [esi+0x598f0ce7]
  41e07f:	add    al,0xfb
  41e081:	cmp    DWORD PTR [si],0x69
  41e085:	leave  
  41e086:	inc    edi
  41e087:	(bad)  
  41e088:	fdivrp st(7),st
  41e08a:	xlat   BYTE PTR ds:[ebx]
  41e08b:	(bad)
  41e090:	or     BYTE PTR [edi-0x6692ed2a],dh
  41e096:	jmp    0x41e0ee
  41e098:	pop    edx
  41e099:	jbe    0x41e115
  41e09b:	pushf  
  41e09c:	or     ah,BYTE PTR [eax]
  41e09e:	jbe    0x41e05e
  41e0a0:	arpl   sp,bp
  41e0a2:	sbb    edi,ebp
  41e0a4:	pop    ebp
  41e0a5:	push   esi
  41e0a6:	jns    0x41e0c9
  41e0a8:	aam    0xb3
  41e0aa:	test   BYTE PTR [edi+0x53],dh
  41e0ad:	mov    al,0x10
  41e0af:	push   0xabb76704
  41e0b4:	mov    BYTE PTR [esi-0x14],0xfa
  41e0b8:	sbb    esi,DWORD PTR [ebx-0x32046a7]
  41e0be:	in     eax,dx
  41e0bf:	inc    eax
  41e0c0:	inc    ecx
  41e0c1:	int    0x23
  41e0c3:	sub    esp,DWORD PTR ds:0xdf8fdf4d
  41e0c9:	into   
  41e0ca:	cmp    edx,DWORD PTR [ebp-0x6f]
  41e0cd:	out    0xaa,eax
  41e0cf:	mov    ah,0x71
  41e0d1:	shl    BYTE PTR [edi+0x3086431d],1
  41e0d7:	nop
  41e0d8:	call   DWORD PTR [eax+0x359296f8]
  41e0de:	push   cs
  41e0df:	push   esi
  41e0e0:	inc    esi
  41e0e1:	mov    dl,0x73
  41e0e3:	push   es
  41e0e4:	pop    ebx
  41e0e5:	cmc    
  41e0e6:	mov    dh,0xda
  41e0e8:	lea    ecx,[eax+0x6f7452c8]
  41e0ee:	ret    0xfbd9
  41e0f1:	test   DWORD PTR [ecx-0x53],esi
  41e0f4:	xchg   edx,eax
  41e0f5:	retf   0x4d00
  41e0f8:	mov    eax,ds:0xe684e155
  41e0fd:	cli    
  41e0fe:	inc    esi
  41e0ff:	jmp    0x834bc1c1
  41e104:	icebp  
  41e105:	std    
  41e106:	push   ebx
  41e107:	jg     0x41e159
  41e109:	js     0x41e0c8
  41e10b:	mov    dh,0x6a
  41e10d:	test   al,0x53
  41e10f:	xchg   DWORD PTR cs:[ebx-0x8d7dc1f],eax
  41e116:	repz xor DWORD PTR [esi-0x33f96413],0xeb18fe70
  41e121:	push   ss
  41e122:	xchg   ebx,eax
  41e123:	dec    ecx
  41e124:	int    0x2f
  41e126:	enter  0xbe95,0xb9
  41e12a:	jle    0x41e17d
  41e12c:	push   ebp
  41e12d:	jge    0x41e190
  41e12f:	js     0x41e11b
  41e131:	retf   0x342
  41e134:	neg    DWORD PTR [eax+0x638690a]
  41e13a:	pop    esp
  41e13b:	dec    eax
  41e13c:	sub    DWORD PTR [eax+0x6e],0xffffffa4
  41e140:	and    eax,0xe0a97c69
  41e145:	jecxz  0x41e1be
  41e147:	pop    ss
  41e148:	sbb    eax,0x1e5ba156
  41e14d:	shr    DWORD PTR [ebx],cl
  41e14f:	pop    ds
  41e150:	sbb    ebx,DWORD PTR [esi]
  41e152:	cld    
  41e153:	fcmovbe st,st(4)
  41e155:	mov    ebp,0xf0a61d2d
  41e15a:	lock inc edx
  41e15c:	int    0x9d
  41e15e:	and    eax,0x3f798a7c
  41e163:	scas   eax,DWORD PTR es:[edi]
  41e164:	test   BYTE PTR [eax-0x50],bh
  41e167:	ss jmp 0x21e2:0x81fb114b
  41e16f:	in     al,0xa1
  41e171:	sar    BYTE PTR [edi],1
  41e173:	inc    esi
  41e174:	xor    ebx,esi
  41e176:	das    
  41e177:	cld    
  41e178:	leave  
  41e179:	sbb    ebx,eax
  41e17b:	pop    edx
  41e17c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e17d:	and    bh,BYTE PTR [edi]
  41e17f:	xchg   ebx,eax
  41e180:	jb     0x41e15b
  41e182:	data16 mov ch,0xcb
  41e185:	iret   
  41e186:	mov    bl,BYTE PTR [edi]
  41e188:	fadd   DWORD PTR [esi+0x70]
  41e18b:	adc    bh,dl
  41e18d:	jmp    0x1290:0xa32ff4
  41e194:	in     al,0x89
  41e196:	cmp    dh,BYTE PTR [esi-0x56]
  41e199:	mov    BYTE PTR ds:0x5b13fb07,ch
  41e19f:	aad    0x41
  41e1a1:	adc    ah,BYTE PTR [ebx]
  41e1a3:	mov    esp,0x33d2248b
  41e1a8:	ja     0x41e1ec
  41e1aa:	mov    esi,0xd6e4cec3
  41e1af:	dec    ecx
  41e1b0:	mov    edi,0x7fb3bbe0
  41e1b5:	nop
  41e1b6:	out    0x37,al
  41e1b8:	fwait
  41e1b9:	jge    0x41e15a
  41e1bb:	out    dx,eax
  41e1bc:	ds js  0x41e17f
  41e1bf:	or     BYTE PTR [esi-0x3b],0xce
  41e1c3:	inc    edi
  41e1c4:	dec    esp
  41e1c5:	mov    ds:0xbd37a917,al
  41e1ca:	xor    al,0x69
  41e1cc:	mov    BYTE PTR [ecx-0x70],bh
  41e1cf:	pop    ss
  41e1d0:	pop    edx
  41e1d1:	mov    al,ds:0x737aaa13
  41e1d6:	sbb    BYTE PTR [ebp-0x7ae8241b],0x69
  41e1dd:	(bad)  
  41e1de:	in     eax,dx
  41e1df:	out    0xf3,al
  41e1e1:	ss out dx,al
  41e1e3:	cmp    eax,0x895befa2
  41e1e8:	cmp    edi,eax
  41e1ea:	or     BYTE PTR [edx-0x68],bh
  41e1ed:	dec    esp
  41e1ee:	rcr    ch,1
  41e1f0:	xor    DWORD PTR [esi-0x1d],ebx
  41e1f3:	xchg   esi,eax
  41e1f4:	int    0xc3
  41e1f6:	shr    dl,cl
  41e1f8:	or     eax,0x2bd09af3
  41e1fd:	es pop edx
  41e1ff:	jecxz  0x41e23c
  41e201:	inc    edi
  41e202:	call   FWORD PTR [ebp-0x5eb32939]
  41e208:	push   esi
  41e209:	(bad)  
  41e20b:	and    edi,DWORD PTR [ebp+0x514fa550]
  41e211:	popa   
  41e212:	mov    cl,0xbe
  41e214:	mov    cl,0x13
  41e216:	xchg   esp,eax
  41e217:	(bad)  
  41e218:	hlt    
  41e219:	test   al,0x8c
  41e21b:	(bad)  
  41e21c:	pop    ecx
  41e21d:	jbe    0x41e1c4
  41e21f:	xchg   esp,eax
  41e220:	cmp    al,cl
  41e222:	xor    BYTE PTR [ebp-0x27],0x8
  41e226:	data16 stos BYTE PTR es:[edi],al
  41e228:	test   BYTE PTR [eax],dh
  41e22a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e22b:	jmp    0x7bab:0x4c5ec397
  41e232:	mov    edx,DWORD PTR [edi]
  41e234:	adc    DWORD PTR ds:0x3cae25ca,ecx
  41e23a:	js     0x41e2bb
  41e23c:	cmp    WORD PTR [ebp+0x90ef7c9],cx
  41e243:	jb     0x41e21f
  41e245:	push   es
  41e246:	mov    esi,ebp
  41e248:	ficom  DWORD PTR [eax+0x4f]
  41e24b:	xchg   esp,eax
  41e24c:	fisttp DWORD PTR [esi-0x7]
  41e24f:	xchg   al,al
  41e251:	test   BYTE PTR [esi-0x68],bh
  41e254:	aam    0x35
  41e256:	push   ds
  41e257:	push   0x835074b7
  41e25c:	jno    0x41e280
  41e25e:	ins    DWORD PTR es:[edi],dx
  41e25f:	and    DWORD PTR [edx-0x381af42f],esp
  41e265:	data16 mov al,0x9d
  41e268:	push   ss
  41e269:	in     al,dx
  41e26a:	repnz mov dh,0xaa
  41e26d:	push   cs
  41e26e:	imul   DWORD PTR [edi+eiz*2-0x3d]
  41e272:	sub    DWORD PTR [ebx],esi
  41e274:	xor    eax,0xd2f3ca1a
  41e279:	shl    BYTE PTR [ebx+0x393b5ae1],0x1d
  41e280:	xchg   ebx,eax
  41e281:	push   ss
  41e282:	sbb    ah,BYTE PTR [ebx]
  41e284:	aam    0x57
  41e286:	fs pop ds
  41e288:	scas   al,BYTE PTR es:[edi]
  41e289:	xor    al,0xdb
  41e28b:	dec    ecx
  41e28c:	push   ss
  41e28d:	ret    0x42d7
  41e290:	mov    ecx,0xc1882d91
  41e295:	push   cs
  41e296:	out    0xd5,eax
  41e298:	stos   DWORD PTR es:[edi],eax
  41e299:	sar    DWORD PTR [edi],cl
  41e29b:	sbb    al,0x15
  41e29d:	pop    ebx
  41e29e:	pop    es
  41e29f:	(bad)  
  41e2a0:	fild   QWORD PTR [esi+0x29]
  41e2a3:	in     al,dx
  41e2a4:	addr16 adc edx,edi
  41e2a7:	test   BYTE PTR [edx-0x6c],dl
  41e2aa:	call   0xd2ee15bf
  41e2af:	jbe    0x41e28e
  41e2b1:	ror    BYTE PTR [ecx],1
  41e2b3:	imul   edx,DWORD PTR [ecx-0x79516f6e],0xd29a548
  41e2bd:	jne    0x41e2bc
  41e2bf:	sbb    dh,ah
  41e2c1:	out    0x8e,al
  41e2c3:	jo     0x41e289
  41e2c5:	or     DWORD PTR [eax-0x11],edx
  41e2c8:	hlt    
  41e2c9:	mov    ds:0xb95e51e7,eax
  41e2ce:	xor    al,BYTE PTR [ebx+0x7e227011]
  41e2d4:	aas    
  41e2d5:	aaa    
  41e2d6:	test   BYTE PTR [ebp+0xedbd58f],cl
  41e2dc:	fnstenv [eax]
  41e2de:	call   0x4f2011a2
  41e2e3:	push   0xc4893209
  41e2e8:	(bad)
  41e2eb:	inc    edx
  41e2ec:	pop    ds
  41e2ed:	push   edx
  41e2ee:	cmp    DWORD PTR [edx+0x53],edx
  41e2f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e2f2:	jno    0x41e2e3
  41e2f4:	cmp    ah,BYTE PTR [eax+0x3d]
  41e2f7:	mov    cl,0x21
  41e2f9:	popf   
  41e2fa:	enter  0x1006,0x71
  41e2fe:	xchg   esp,eax
  41e2ff:	pop    ecx
  41e300:	dec    esp
  41e301:	iret   
  41e302:	sub    DWORD PTR [edi],0x4dc6ce59
  41e308:	int3   
  41e309:	xlat   BYTE PTR ds:[ebx]
  41e30a:	dec    edx
  41e30b:	dec    esp
  41e30c:	retf   0x2cd3
  41e30f:	or     eax,0x51cfd183
  41e314:	cli    
  41e315:	out    0x0,eax
  41e317:	inc    ebx
  41e318:	mov    eax,0xa56bd493
  41e31d:	rol    BYTE PTR [edx+ebp*1+0x64105f8f],cl
  41e324:	ret    
  41e325:	xor    ebp,esp
  41e327:	jge    0x41e2d8
  41e329:	jbe    0x41e2eb
  41e32b:	jne    0x41e354
  41e32d:	ror    BYTE PTR [ebp-0x18],cl
  41e330:	jb     0x41e378
  41e332:	push   eax
  41e333:	daa    
  41e334:	xor    bh,bl
  41e336:	xchg   BYTE PTR [ebp+0x79],cl
  41e339:	ret    0x825a
  41e33c:	cmp    BYTE PTR [eax],al
  41e33e:	add    cl,ah
  41e340:	(bad)  
  41e341:	pop    edi
  41e342:	xchg   edi,eax
  41e343:	data16 outs dx,BYTE PTR ds:[esi]
  41e345:	jle    0x41e35f
  41e347:	mov    esp,0xe0f32694
  41e34c:	mov    BYTE PTR [edi-0x52f35775],dl
  41e352:	mov    al,ds:0xa96dc1cd
  41e357:	xchg   ebx,eax
  41e358:	repz xor DWORD PTR ds:0xf48593e1,ecx
  41e35f:	xchg   BYTE PTR [ebx],dl
  41e361:	stos   BYTE PTR es:[edi],al
  41e362:	pushf  
  41e363:	jb     0x41e39f
  41e365:	cs cli 
  41e367:	mov    ss,esi
  41e369:	xchg   BYTE PTR [esp+ecx*4-0x671faa6c],ch
  41e370:	sub    DWORD PTR [edx-0x56e61b9e],esp
  41e376:	sub    ebp,DWORD PTR [ecx-0x6d]
  41e379:	pop    eax
  41e37a:	mov    edx,0x5df3f6cc
  41e37f:	jmp    0xe44:0xece468a1
  41e386:	dec    DWORD PTR [ecx-0x3c958b52]
  41e38c:	xchg   BYTE PTR [ecx+0x7b5b7a92],ah
  41e392:	(bad)  
  41e393:	int3   
  41e394:	inc    edi
  41e395:	loop   0x41e3c4
  41e397:	ror    BYTE PTR [ecx-0x13],cl
  41e39a:	xor    dh,BYTE PTR [ebx-0x59]
  41e39d:	ret    0xd822
  41e3a0:	ja     0x41e41a
  41e3a2:	jl     0x41e3e8
  41e3a4:	dec    eax
  41e3a5:	es and eax,0xad7881fe
  41e3ab:	and    ebp,esp
  41e3ad:	push   ecx
  41e3ae:	(bad)  
  41e3af:	sub    dl,BYTE PTR [ebx+0x535a2df7]
  41e3b5:	call   0x5262:0x72259bef
  41e3bc:	inc    esp
  41e3bd:	mov    bh,0xe5
  41e3bf:	mov    dl,BYTE PTR ds:0x40072906
  41e3c5:	aaa    
  41e3c6:	mov    ebx,0xf10c60ce
  41e3cb:	std    
  41e3cc:	shr    BYTE PTR [eax-0x31347831],cl
  41e3d2:	jnp    0x41e39c
  41e3d4:	sub    al,al
  41e3d6:	sti    
  41e3d7:	das    
  41e3d8:	inc    eax
  41e3d9:	pop    edi
  41e3da:	push   es
  41e3db:	jmp    0x41e416
  41e3dd:	or     DWORD PTR [edi-0x7],esi
  41e3e0:	and    edi,edi
  41e3e2:	cmp    BYTE PTR [edi+0xe8ee944],ch
  41e3e8:	push   0x50
  41e3ea:	div    BYTE PTR [ecx-0x58fa2c20]
  41e3f0:	mov    al,ds:0xaa1578d5
  41e3f5:	out    dx,al
  41e3f6:	push   cs
  41e3f7:	test   BYTE PTR [edi],bh
  41e3f9:	xor    al,0x6a
  41e3fb:	push   cs
  41e3fc:	mov    ch,0x12
  41e3fe:	addr16 aaa 
  41e400:	test   DWORD PTR [esi],esp
  41e402:	sub    DWORD PTR [edi-0x45],esp
  41e405:	adc    ch,dl
  41e407:	xchg   ecx,eax
  41e408:	xlat   BYTE PTR ds:[ebx]
  41e409:	nop
  41e40a:	cmp    eax,0x6573e91
  41e40f:	scas   al,BYTE PTR es:[edi]
  41e410:	or     dl,BYTE PTR [edi]
  41e412:	inc    ebp
  41e413:	cmp    BYTE PTR [ecx],0xb9
  41e416:	xchg   edi,eax
  41e417:	popa   
  41e418:	pop    esi
  41e419:	push   eax
  41e41a:	cmp    BYTE PTR [esi],al
  41e41c:	dec    esi
  41e41d:	cmp    DWORD PTR [edi+0x623eab0f],esi
  41e423:	outs   dx,BYTE PTR ds:[esi]
  41e424:	repz (bad) 
  41e426:	rcl    BYTE PTR [ebx+0x1e463dfc],cl
  41e42c:	xchg   edx,eax
  41e42d:	popa   
  41e42e:	fld    DWORD PTR ss:[ecx]
  41e431:	loope  0x41e4a7
  41e433:	ins    BYTE PTR es:[edi],dx
  41e434:	loopne 0x41e3c2
  41e436:	test   eax,0x10bfaac2
  41e43b:	xor    BYTE PTR [edx+0x2f84b0d],bl
  41e441:	js     0x41e44a
  41e443:	jmp    FWORD PTR [esi-0x4d7cb787]
  41e449:	xor    BYTE PTR [edx-0x5f4c6c06],dl
  41e44f:	inc    esi
  41e450:	call   FWORD PTR [edx+esi*4]
  41e453:	or     edx,DWORD PTR [ebx-0x4d236a4c]
  41e459:	mov    esp,0x58dd116b
  41e45e:	sbb    edi,DWORD PTR [ebx-0xd]
  41e461:	cli    
  41e462:	cmp    edx,DWORD PTR [ecx]
  41e464:	(bad)  
  41e465:	js     0x41e47a
  41e467:	fld    st(3)
  41e469:	fcomp  QWORD PTR [ecx]
  41e46b:	inc    BYTE PTR [ebx+esi*2+0x2b]
  41e46f:	arpl   WORD PTR [ebx],cx
  41e471:	test   BYTE PTR [ecx],bl
  41e473:	xchg   ebx,eax
  41e474:	nop
  41e475:	imul   edi,eax,0xa159d4b9
  41e47b:	mov    cl,0x7a
  41e47d:	mov    edx,0x34c5d13d
  41e483:	mov    esp,es
  41e485:	mov    ds:0x3a0057ea,eax
  41e48a:	xor    BYTE PTR [eax-0x2c],dl
  41e48d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e48e:	std    
  41e48f:	rcr    DWORD PTR [edx+0x2bcf9776],cl
  41e495:	sahf   
  41e496:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e497:	mov    ah,0xe1
  41e499:	mov    ebp,0x1d6b8503
  41e49e:	mov    esp,0x84777b7e
  41e4a3:	sahf   
  41e4a4:	pop    edi
  41e4a5:	inc    esi
  41e4a6:	sbb    BYTE PTR [edi+0x5573f471],bh
  41e4ac:	stos   DWORD PTR es:[edi],eax
  41e4ad:	rcl    dh,0x49
  41e4b0:	mov    cs,WORD PTR [esi+0x2beba6f8]
  41e4b6:	mov    eax,0xe861eb6b
  41e4bb:	or     dh,bh
  41e4bd:	xlat   BYTE PTR ds:[ebx]
  41e4be:	addr16 push ebp
  41e4c0:	adc    ch,BYTE PTR [ecx+0x70706706]
  41e4c6:	lds    eax,FWORD PTR [edi+0x2422dd86]
  41e4cc:	das    
  41e4cd:	dec    eax
  41e4ce:	xor    DWORD PTR [esi+ebp*2-0x46],esp
  41e4d2:	gs ins DWORD PTR es:[edi],dx
  41e4d4:	(bad)  
  41e4d5:	jmp    0x41e489
  41e4d7:	cmp    eax,DWORD PTR [eax+edi*4]
  41e4da:	adc    esi,DWORD PTR [edi]
  41e4dc:	mov    dl,0xa4
  41e4de:	xchg   esi,eax
  41e4df:	out    0x99,al
  41e4e1:	push   ss
  41e4e2:	scas   al,BYTE PTR es:[edi]
  41e4e3:	mov    ds:0xe1562834,eax
  41e4e8:	xchg   ecx,eax
  41e4e9:	push   esp
  41e4ea:	lock mov BYTE PTR [edx],0xeb
  41e4ee:	push   edx
  41e4ef:	add    DWORD PTR [ebx+0xe7affbc],0xffffffe1
  41e4f6:	int3   
  41e4f7:	jno    0x41e569
  41e4f9:	add    BYTE PTR [eax+eiz*2+0x29ab348a],bh
  41e500:	bound  esi,QWORD PTR [ebx+eax*8-0x2f]
  41e504:	xchg   edx,eax
  41e505:	nop
  41e506:	xchg   edi,eax
  41e507:	mov    esp,0x82b34d34
  41e50c:	sbb    esi,0xf167ebd0
  41e512:	or     bl,BYTE PTR [eax-0x78]
  41e515:	xchg   esi,eax
  41e516:	imul   ebx,DWORD PTR [esi+0x75542e2],0x58ade2cf
  41e520:	pop    ds
  41e521:	stc    
  41e522:	imul   edx,DWORD PTR [ecx+0x2b],0xffffffe2
  41e526:	pop    ss
  41e527:	xor    cl,BYTE PTR [ecx]
  41e529:	loope  0x41e4b8
  41e52b:	shl    DWORD PTR [esi+0x7e],cl
  41e52e:	nop
  41e52f:	xchg   esi,eax
  41e530:	jnp    0x41e4fa
  41e532:	fwait
  41e533:	int3   
  41e534:	scas   al,BYTE PTR es:[edi]
  41e535:	iret   
  41e536:	cwde   
  41e537:	into   
  41e538:	lahf   
  41e539:	add    eax,ebx
  41e53b:	cmp    bh,cl
  41e53d:	xor    al,0xaf
  41e53f:	mov    al,0x72
  41e541:	add    DWORD PTR [ebp-0x7a010c8b],esi
  41e547:	push   ss
  41e548:	push   ebx
  41e549:	shr    ecx,1
  41e54b:	sahf   
  41e54c:	and    BYTE PTR [esi+0x5d],dl
  41e54f:	aas    
  41e550:	(bad)  
  41e551:	retf   
  41e552:	test   al,0x97
  41e554:	xchg   BYTE PTR [ecx+0x1c],cl
  41e557:	ja     0x41e5a3
  41e559:	pusha  
  41e55a:	fsubr  DWORD PTR [ebx+0x58b2c3bd]
  41e560:	mov    dl,0x22
  41e562:	mov    ebx,0x25af1966
  41e567:	jl     0x41e57d
  41e569:	fwait
  41e56a:	daa    
  41e56b:	xor    BYTE PTR [ebx-0x17849984],bh
  41e571:	push   cs
  41e572:	or     dl,BYTE PTR [edi]
  41e574:	mov    dl,0x47
  41e576:	(bad)  [esi+0x684d56ed]
  41e57c:	dec    eax
  41e57d:	xchg   edx,eax
  41e57e:	inc    eax
  41e57f:	test   DWORD PTR [esi+ebx*4+0x63dd3a74],ecx
  41e586:	in     eax,dx
  41e587:	(bad)  
  41e589:	jno    0x41e56f
  41e58b:	mov    ds:0xce5aeacf,al
  41e590:	pop    edx
  41e591:	mov    dh,0x9a
  41e593:	call   0xe2276e6f
  41e598:	pop    ss
  41e599:	pop    eax
  41e59a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e59b:	dec    eax
  41e59c:	iret   
  41e59d:	sub    al,0x95
  41e59f:	loop   0x41e553
  41e5a1:	jno    0x41e61d
  41e5a3:	inc    esp
  41e5a4:	jmp    0x41e5b7
  41e5a6:	push   eax
  41e5a7:	hlt    
  41e5a8:	mov    bh,0x71
  41e5aa:	fcom   DWORD PTR [edi]
  41e5ac:	add    bh,bl
  41e5ae:	adc    bh,BYTE PTR [edx]
  41e5b0:	repz call 0x4004f20f
  41e5b6:	retf   0x6350
  41e5b9:	stc    
  41e5ba:	iret   
  41e5bb:	into   
  41e5bc:	dec    edx
  41e5bd:	loope  0x41e597
  41e5bf:	and    esi,esi
  41e5c1:	cmc    
  41e5c2:	mov    DWORD PTR ds:0xaca3a365,0xf950f446
  41e5cc:	pusha  
  41e5cd:	dec    edi
  41e5ce:	(bad)  
  41e5cf:	pop    esi
  41e5d0:	in     al,dx
  41e5d1:	add    edx,DWORD PTR [ecx-0x68]
  41e5d4:	cmp    eax,DWORD PTR [ebx+0x6e]
  41e5d7:	hlt    
  41e5d8:	ins    BYTE PTR es:[edi],dx
  41e5d9:	sti    
  41e5da:	int    0x93
  41e5dc:	xor    eax,0x21e23b55
  41e5e1:	icebp  
  41e5e2:	shl    BYTE PTR [edi],1
  41e5e4:	mov    bh,BYTE PTR [eax+0x28]
  41e5e7:	sahf   
  41e5e8:	jnp    0x41e570
  41e5ea:	loope  0x41e5e5
  41e5ec:	jge    0x41e5e9
  41e5ee:	mov    cl,0x7f
  41e5f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5f1:	mov    bh,cl
  41e5f3:	es inc esp
  41e5f5:	add    DWORD PTR [ecx-0x45],0xe606bcf5
  41e5fc:	aad    0x86
  41e5fe:	fwait
  41e5ff:	cmp    al,0x6e
  41e601:	add    eax,0x1920374e
  41e606:	pop    esi
  41e607:	and    edx,esp
  41e609:	or     DWORD PTR [esi+0x65bed0e6],ebp
  41e60f:	popa   
  41e610:	out    0x3e,al
  41e612:	and    ebx,eax
  41e614:	pop    ss
  41e615:	in     al,dx
  41e616:	fwait
  41e617:	push   edx
  41e618:	pop    eax
  41e619:	test   DWORD PTR [edx-0x7d],0xac901fa1
  41e620:	and    al,0x1e
  41e622:	jmp    0xeaf:0x79e45964
  41e629:	in     eax,0xee
  41e62b:	pop    ecx
  41e62c:	jmp    0x65ba56b4
  41e631:	cmp    al,0x68
  41e633:	jp     0x41e5e1
  41e635:	add    DWORD PTR [eax-0x62],ebx
  41e638:	fadd   QWORD PTR [esi-0x25]
  41e63b:	xchg   BYTE PTR [esi-0x671d80d5],ah
  41e641:	jmp    0x41e64c
  41e643:	pop    edi
  41e644:	sar    BYTE PTR [eax],0xd7
  41e647:	out    dx,al
  41e648:	dec    esi
  41e649:	cmp    dh,BYTE PTR [eax+eiz*8+0x3a86a7f9]
  41e650:	pop    esp
  41e651:	xchg   ebx,eax
  41e652:	in     eax,dx
  41e653:	pop    ss
  41e654:	pop    edx
  41e655:	xchg   edi,eax
  41e656:	mov    ecx,0xccf16589
  41e65b:	lahf   
  41e65c:	loope  0x41e699
  41e65e:	sub    BYTE PTR [eax],0xe9
  41e661:	jmp    0x14396da8
  41e666:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e667:	jbe    0x41e6b6
  41e669:	inc    BYTE PTR [edi+0x4994941]
  41e66f:	dec    ecx
  41e670:	scas   al,BYTE PTR es:[edi]
  41e671:	mov    cs,ecx
  41e673:	pop    es
  41e674:	and    eax,0xdd0d132
  41e679:	adc    esi,DWORD PTR [ecx+0x716a3ff4]
  41e67f:	jbe    0x41e6a5
  41e681:	jmp    0x53da:0xd776ab68
  41e688:	in     eax,dx
  41e689:	mov    cl,0x4d
  41e68b:	or     BYTE PTR [eax],ah
  41e68d:	leave  
  41e68e:	shl    ebp,1
  41e690:	cmp    esp,DWORD PTR [edx-0x1]
  41e693:	fdivr  DWORD PTR [edx]
  41e695:	sbb    ebp,DWORD PTR [ebx+ecx*4+0x2b8a9e6]
  41e69c:	jno    0x41e6f9
  41e69e:	call   0x6a5b:0x3ab4f136
  41e6a5:	push   ebp
  41e6a6:	nop
  41e6a7:	pop    ebx
  41e6a8:	jne    0x41e661
  41e6aa:	cmp    edx,DWORD PTR [esi+0x3d4d0706]
  41e6b0:	fxch   st(5)
  41e6b2:	and    BYTE PTR [eax],bh
  41e6b4:	xchg   esp,eax
  41e6b5:	jle    0x41e702
  41e6b7:	mov    eax,0x97f8f402
  41e6bc:	repnz xlat BYTE PTR ds:[ebx]
  41e6be:	inc    esp
  41e6bf:	fwait
  41e6c0:	sbb    ah,BYTE PTR [esi+0x4c]
  41e6c3:	outs   dx,DWORD PTR ds:[esi]
  41e6c4:	mov    eax,0x541130d8
  41e6c9:	repnz out dx,ax
  41e6cc:	xchg   DWORD PTR [eax+0x19f924ad],edx
  41e6d2:	ffreep st(0)
  41e6d4:	scas   al,BYTE PTR es:[edi]
  41e6d5:	stc    
  41e6d6:	call   0x839c5657
  41e6db:	test   ch,bh
  41e6dd:	sbb    DWORD PTR [edi],edi
  41e6df:	jg     0x41e6fc
  41e6e1:	and    ecx,esi
  41e6e3:	cmp    BYTE PTR [esp+esi*4+0x6bf7c1b],0xb5
  41e6eb:	push   cs
  41e6ec:	rcl    DWORD PTR [esi-0x4c],1
  41e6ef:	outs   dx,DWORD PTR ds:[esi]
  41e6f0:	mov    ecx,0xba16d4b
  41e6f5:	lock (bad) 
  41e6f7:	jmp    0x50d3:0xadc2d20c
  41e6fe:	bound  eax,QWORD PTR [ebp-0x4e]
  41e701:	jo     0x41e76f
  41e703:	xchg   ebx,eax
  41e704:	mov    cl,BYTE PTR [eax-0x725ba078]
  41e70a:	push   ss
  41e70b:	and    DWORD PTR [esp+esi*2+0x62],0x93c8c84d
  41e713:	test   DWORD PTR [ebx-0x14f3e4dc],ecx
  41e719:	and    eax,0x94093963
  41e71e:	std    
  41e71f:	ret    0x1844
  41e722:	das    
  41e723:	stos   BYTE PTR es:[edi],al
  41e724:	addr16 ret 
  41e726:	repz sub bh,dh
  41e729:	mov    al,ds:0xdb671afa
  41e72e:	(bad)  
  41e730:	dec    ebx
  41e731:	add    al,BYTE PTR [edx+0x715a0c96]
  41e737:	jg     0x41e704
  41e739:	gs aaa 
  41e73b:	sub    DWORD PTR [esi-0x2],0xb313bb74
  41e742:	cmp    bl,BYTE PTR [edi]
  41e744:	mov    edx,DWORD PTR [ebx-0x10]
  41e747:	inc    esi
  41e748:	outs   dx,BYTE PTR ds:[esi]
  41e749:	leave  
  41e74a:	xor    bl,ah
  41e74c:	sbb    eax,0x3241483d
  41e751:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e752:	gs fwait
  41e754:	mov    esp,0x864c2977
  41e759:	test   DWORD PTR [eax+0x25b7da83],eax
  41e75f:	cli    
  41e760:	mov    ch,0x85
  41e762:	push   edi
  41e763:	xor    eax,0x723cb30b
  41e768:	mov    ecx,0x4a47702a
  41e76d:	not    DWORD PTR es:[ecx+0xc]
  41e771:	cmp    bh,ch
  41e773:	adc    bh,al
  41e775:	cmp    DWORD PTR [edi+0xe],0x1f
  41e779:	sbb    BYTE PTR [eax+0x45fac80c],cl
  41e77f:	xchg   edi,eax
  41e780:	sub    esp,esp
  41e782:	sbb    DWORD PTR [ebx-0x37],0x11cfbf2c
  41e789:	jle    0x41e70e
  41e78b:	cmp    ah,cl
  41e78d:	pop    esi
  41e78e:	adc    al,0xcf
  41e790:	add    ch,0x3a
  41e793:	imul   ebp,eax,0xdcc75f2d
  41e799:	cs adc al,0x72
  41e79c:	out    0x48,eax
  41e79e:	pop    ecx
  41e79f:	push   es
  41e7a0:	aad    0x90
  41e7a2:	inc    edx
  41e7a3:	jb     0x41e808
  41e7a5:	or     al,0x32
  41e7a7:	stc    
  41e7a8:	jmp    0xf6436ee4
  41e7ad:	add    ecx,DWORD PTR [ebx-0x2d1ed36b]
  41e7b3:	mov    BYTE PTR [edi+0x23],bh
  41e7b6:	sub    ch,cl
  41e7b8:	dec    esi
  41e7b9:	adc    DWORD PTR [ebx+0x2],ebp
  41e7bc:	cdq    
  41e7bd:	hlt    
  41e7be:	mov    WORD PTR [ebx-0x1e],ss
  41e7c1:	mov    bl,0x9e
  41e7c3:	fsub   st,st(6)
  41e7c5:	out    0x52,al
  41e7c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7c8:	mov    ecx,0x4f4a8b6d
  41e7cd:	xchg   edi,eax
  41e7ce:	stc    
  41e7cf:	je     0x41e83e
  41e7d1:	or     esp,esp
  41e7d3:	xor    eax,esi
  41e7d5:	dec    edi
  41e7d6:	int    0x5d
  41e7d8:	cmp    al,0xe
  41e7da:	lods   eax,DWORD PTR ds:[esi]
  41e7db:	aad    0xb1
  41e7dd:	gs retf 
  41e7df:	mov    dh,0x99
  41e7e1:	aaa    
  41e7e2:	stos   BYTE PTR es:[edi],al
  41e7e3:	test   al,0x6
  41e7e5:	push   0xe339fa57
  41e7ea:	xchg   BYTE PTR [eax+0x85bdad8],bl
  41e7f0:	out    dx,al
  41e7f1:	ret    0xf9ff
  41e7f4:	jmp    0x74ab28a
  41e7f9:	inc    ebp
  41e7fa:	inc    ecx
  41e7fb:	mov    ebp,0xeec7b0a2
  41e800:	leave  
  41e801:	mov    eax,0x29900617
  41e806:	jmp    0x5272:0xa4067aa4
  41e80d:	dec    ecx
  41e80e:	jmp    0xf0899c42
  41e813:	cli    
  41e814:	int3   
  41e815:	or     BYTE PTR [esi+0x6f],0xef
  41e819:	pusha  
  41e81a:	nop
  41e81b:	int3   
  41e81c:	adc    cl,BYTE PTR [eax]
  41e81e:	outs   dx,DWORD PTR ds:[esi]
  41e81f:	aaa    
  41e820:	sub    DWORD PTR [edi],edx
  41e822:	ins    DWORD PTR es:[edi],dx
  41e823:	mov    eax,ds:0x93b2e475
  41e828:	sub    DWORD PTR [ecx+0x6d],edx
  41e82b:	jge    0x41e8aa
  41e82d:	(bad)  
  41e82e:	mov    ebp,0xda74e3ea
  41e833:	test   al,0x83
  41e835:	push   esi
  41e836:	cmp    eax,0xad5f116
  41e83b:	dec    ebp
  41e83c:	aaa    
  41e83d:	push   0x4b8739c3
  41e842:	mov    eax,0x58b151a8
  41e847:	cmp    DWORD PTR [ebx-0x14bc7c29],esp
  41e84d:	fdiv   DWORD PTR [ebp-0x679548c8]
  41e853:	mov    bl,0x9
  41e855:	jb     0x41e8b2
  41e857:	dec    esp
  41e858:	pushf  
  41e859:	sbb    eax,0x5c30fe51
  41e85e:	mov    eax,ds:0xb9b43909
  41e863:	pop    eax
  41e864:	out    0x31,al
  41e866:	jp     0x41e8bb
  41e868:	pop    eax
  41e869:	fst    QWORD PTR [esi]
  41e86b:	out    dx,al
  41e86c:	dec    eax
  41e86d:	jmp    0x41e8b6
  41e86f:	adc    BYTE PTR [ecx],bl
  41e871:	int    0x33
  41e873:	enter  0xbbf7,0x0
  41e877:	loop   0x41e839
  41e879:	mov    ds:0x1f3669a0,al
  41e87e:	daa    
  41e87f:	fdiv   st,st(1)
  41e881:	mov    ds:0xdba59d83,al
  41e886:	cmp    esp,DWORD PTR [esi+0x7288e581]
  41e88c:	jae    0x41e886
  41e88e:	pop    ds
  41e88f:	push   ss
  41e890:	inc    ebx
  41e891:	mov    edi,0xf28de306
  41e896:	icebp  
  41e897:	xchg   ecx,eax
  41e898:	je     0x41e8c4
  41e89a:	jno    0x41e886
  41e89c:	pop    ss
  41e89d:	jnp    0x41e8f4
  41e89f:	jle    0x41e8ce
  41e8a1:	inc    edx
  41e8a2:	mov    edx,DWORD PTR [eax+0x1a]
  41e8a5:	inc    ebp
  41e8a6:	dec    eax
  41e8a7:	in     al,0x6a
  41e8a9:	dec    ebp
  41e8aa:	cmp    eax,0xc279ca08
  41e8af:	cmp    eax,0x4013cccb
  41e8b4:	jnp    0x41e8f0
  41e8b6:	lock pusha 
  41e8b8:	push   0xc6ec9d0b
  41e8bd:	pop    ebp
  41e8be:	test   DWORD PTR [ebx+ecx*2],0x7ac5a1c
  41e8c5:	stos   BYTE PTR es:[edi],al
  41e8c6:	pop    ss
  41e8c7:	push   ds
  41e8c8:	pop    ecx
  41e8c9:	rol    BYTE PTR [ebx],1
  41e8cb:	ret    0x293f
  41e8ce:	xchg   ecx,eax
  41e8cf:	ins    BYTE PTR es:[edi],dx
  41e8d0:	mov    edi,0xb65b55cb
  41e8d5:	sbb    al,0x40
  41e8d7:	int3   
  41e8d8:	xchg   edx,eax
  41e8d9:	mov    al,0x8a
  41e8db:	xor    eax,0xedfead5
  41e8e0:	cmp    DWORD PTR [ecx+0x30],ebp
  41e8e3:	jle    0x41e872
  41e8e5:	or     DWORD PTR [esi+0x69],edx
  41e8e8:	dec    esp
  41e8e9:	inc    esp
  41e8ea:	add    ecx,edi
  41e8ec:	sub    dl,al
  41e8ee:	sbb    al,0x9f
  41e8f0:	ds fst st(6)
  41e8f3:	cwde   
  41e8f4:	mov    ebp,0x21355a3d
  41e8f9:	imul   eax,DWORD PTR [eax+edx*2-0x2],0x1b
  41e8fe:	dec    esi
  41e8ff:	or     DWORD PTR [ebp+0x647e614f],eax
  41e905:	out    0xd3,eax
  41e907:	xor    eax,0x7af3fb46
  41e90c:	daa    
  41e90d:	push   ds
  41e90e:	mov    DWORD PTR [ecx],esi
  41e910:	mov    ebx,0xf3b883e8
  41e915:	pusha  
  41e916:	fstp   DWORD PTR [ecx+0x68]
  41e919:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e91a:	pop    ebx
  41e91b:	mov    ds:0x17370bc5,al
  41e920:	mov    edx,0xe7179a72
  41e925:	or     ebx,DWORD PTR [edi+eiz*4+0x60fce67e]
  41e92c:	test   al,0x82
  41e92e:	mov    esi,0x41a9e3ff
  41e933:	iret   
  41e934:	ret    0xb7b1
  41e937:	int3   
  41e938:	pop    edx
  41e939:	add    BYTE PTR [esi],bh
  41e93b:	(bad)  
  41e93c:	hlt    
  41e93d:	pop    ebp
  41e93e:	shl    al,1
  41e940:	or     dl,ch
  41e942:	jbe    0x41e9bd
  41e944:	mov    BYTE PTR [edx-0x70],bh
  41e947:	int    0xf
  41e949:	ins    DWORD PTR es:[edi],dx
  41e94a:	pusha  
  41e94b:	test   edi,ebp
  41e94d:	and    esp,DWORD PTR [ecx]
  41e94f:	mov    al,0xea
  41e951:	mov    ds:0x537a5aef,eax
  41e956:	shl    DWORD PTR [edi+0x2c],1
  41e959:	sub    esi,DWORD PTR [edi]
  41e95b:	sub    ebp,ecx
  41e95d:	add    DWORD PTR [edx+eax*4+0x3b],esi
  41e961:	sbb    DWORD PTR ss:[esi],ebp
  41e964:	push   edx
  41e965:	into   
  41e966:	adc    DWORD PTR [ebx+0x283da57d],edx
  41e96c:	pop    esi
  41e96d:	inc    ebx
  41e96e:	dec    esp
  41e96f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e970:	push   edx
  41e971:	cli    
  41e972:	(bad)  
  41e973:	cmp    DWORD PTR [eax],ecx
  41e975:	hlt    
  41e976:	pop    edi
  41e977:	sti    
  41e978:	or     DWORD PTR [eax+0x2fbc6e1f],0x69
  41e97f:	sbb    BYTE PTR [ecx],al
  41e981:	xor    BYTE PTR [esi],dl
  41e983:	sar    DWORD PTR [esi+0x2c1fa9c1],cl
  41e989:	clc    
  41e98a:	enter  0x4fc,0x1c
  41e98e:	pop    es
  41e98f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e990:	cmp    BYTE PTR [edi-0x6a6c51a],bl
  41e996:	js     0x41e9b7
  41e998:	xlat   BYTE PTR ds:[ebx]
  41e999:	lods   eax,DWORD PTR ds:[esi]
  41e99a:	pushf  
  41e99b:	pop    esp
  41e99c:	hlt    
  41e99d:	xlat   BYTE PTR ds:[ebx]
  41e99e:	add    BYTE PTR [ecx],ch
  41e9a0:	je     0x41e986
  41e9a2:	repnz xor eax,0xd69d0e1e
  41e9a8:	xchg   cx,ax
  41e9aa:	inc    ecx
  41e9ab:	dec    esp
  41e9ac:	xor    al,BYTE PTR [edx-0x3877c8a6]
  41e9b2:	mov    edx,0x8f088ceb
  41e9b7:	aam    0x7e
  41e9b9:	nop
  41e9ba:	aas    
  41e9bb:	xlat   BYTE PTR ds:[ebx]
  41e9bc:	sub    edi,edi
  41e9be:	shr    BYTE PTR [edi-0x643146fe],0x39
  41e9c5:	or     DWORD PTR [eax-0x2e],0xe
  41e9c9:	ins    DWORD PTR es:[edi],dx
  41e9ca:	pop    ds
  41e9cb:	pop    esi
  41e9cc:	ins    DWORD PTR es:[edi],dx
  41e9cd:	xchg   ebp,eax
  41e9ce:	cmp    al,0x37
  41e9d0:	jbe    0x41e987
  41e9d2:	shl    ah,cl
  41e9d4:	outs   dx,DWORD PTR ds:[esi]
  41e9d5:	mov    ds:0x336d50f0,eax
  41e9da:	and    eax,0x27614764
  41e9df:	aas    
  41e9e0:	add    ch,BYTE PTR [edi-0x43578737]
  41e9e6:	mov    ebp,0xc46ebf1
  41e9eb:	imul   ecx,ebx,0xffffffd6
  41e9ee:	out    dx,al
  41e9ef:	add    al,0xe7
  41e9f1:	arpl   WORD PTR [edx-0x19],si
  41e9f4:	(bad)  [esi+0x8]
  41e9f7:	loop   0x41ea36
  41e9f9:	cmp    ebp,DWORD PTR [ecx-0x1]
  41e9fc:	add    BYTE PTR [eax+0x497fa387],ah
  41ea02:	inc    esp
  41ea03:	nop
  41ea04:	fs mov edi,0x9802d9ff
  41ea0a:	xchg   DWORD PTR [ecx],ecx
  41ea0c:	jbe    0x41ea83
  41ea0e:	outs   dx,BYTE PTR ds:[esi]
  41ea0f:	outs   dx,DWORD PTR ds:[esi]
  41ea10:	std    
  41ea11:	ret    
  41ea12:	jle    0x41e9fe
  41ea14:	adc    al,0x57
  41ea16:	jns    0x41e9ff
  41ea18:	cmp    DWORD PTR [edi+0x6e6ee070],edi
  41ea1e:	push   ss
  41ea1f:	inc    ecx
  41ea20:	jo     0x41ea34
  41ea22:	ret    0x134d
  41ea25:	das    
  41ea26:	bound  ecx,QWORD PTR [ebp+0x7c]
  41ea29:	daa    
  41ea2a:	ds int3 
  41ea2c:	scas   al,BYTE PTR es:[edi]
  41ea2d:	mov    edi,0x710f8166
  41ea32:	(bad)  
  41ea34:	push   esi
  41ea35:	xlat   BYTE PTR ds:[ebx]
  41ea36:	(bad)  
  41ea37:	mov    WORD PTR [ecx+ebp*2-0x21],fs
  41ea3b:	ss fadd st,st(6)
  41ea3e:	sub    BYTE PTR [edi+0x4c6ae35e],al
  41ea44:	xchg   DWORD PTR ds:[esi+edi*8+0x7ddddcd5],ebx
  41ea4c:	fild   WORD PTR [eax+0x22]
  41ea4f:	adc    eax,0x736716c1
  41ea54:	push   cs
  41ea55:	xor    esp,DWORD PTR [esi-0x6608b47e]
  41ea5b:	pop    esp
  41ea5c:	rol    bh,cl
  41ea5e:	repnz add al,0x18
  41ea61:	ds loope 0x41ea30
  41ea64:	ja     0x41eae2
  41ea66:	jo     0x41eab7
  41ea68:	popf   
  41ea69:	shr    BYTE PTR [ebx-0x116e4d65],1
  41ea6f:	jne    0x41ea79
  41ea71:	mov    WORD PTR [ecx],es
  41ea73:	push   es
  41ea74:	sahf   
  41ea75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea76:	sbb    bh,BYTE PTR [ebx*8+0x70d1e43e]
  41ea7d:	sub    DWORD PTR [ecx+0x7edf618a],ebp
  41ea83:	div    BYTE PTR [edi+0x17]
  41ea86:	cmp    edi,ebp
  41ea88:	fld    QWORD PTR [ebx]
  41ea8a:	inc    eax
  41ea8b:	jb     0x41eaf8
  41ea8d:	fdiv   DWORD PTR [ecx-0x25]
  41ea90:	jae    0x41ea77
  41ea92:	push   ss
  41ea93:	popa   
  41ea94:	mov    al,ds:0xedc1a9ce
  41ea99:	mov    ebp,0xd60b7ace
  41ea9e:	mov    bl,0xf0
  41eaa0:	cld    
  41eaa1:	xor    al,0xcc
  41eaa3:	daa    
  41eaa4:	aad    0x12
  41eaa6:	jmp    0x3021:0xff826447
  41eaad:	push   esi
  41eaae:	pop    eax
  41eaaf:	leave  
  41eab0:	push   0x92b7cea4
  41eab5:	sbb    DWORD PTR [ecx-0x3eaaab7],esi
  41eabb:	mov    dh,0xab
  41eabd:	fsubr  DWORD PTR [esi]
  41eabf:	repnz scas al,BYTE PTR es:[edi]
  41eac1:	mov    ebp,0xe01ba024
  41eac6:	jecxz  0x41eae9
  41eac8:	retf   
  41eac9:	sub    BYTE PTR [ecx+0xd],0x68
  41eacd:	inc    cx
  41eacf:	mov    edi,0xf917bf9e
  41ead4:	dec    edi
  41ead5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ead6:	and    ch,al
  41ead8:	(bad)  
  41ead9:	pop    edx
  41eada:	pop    es
  41eadb:	and    BYTE PTR [ebx+0x4e],al
  41eade:	cmp    eax,0x43f31692
  41eae3:	jmp    FWORD PTR [edi+esi*4]
  41eae6:	mov    esp,0x3d78d355
  41eaeb:	stc    
  41eaec:	int3   
  41eaed:	shr    DWORD PTR [ebp+0xa741efb],0xa0
  41eaf4:	fld    st(5)
  41eaf6:	leave  
  41eaf7:	sbb    BYTE PTR [ecx+0x27],dh
  41eafa:	sahf   
  41eafb:	jbe    0x41eb1b
  41eafd:	or     BYTE PTR [edx-0xe],0x90
  41eb01:	cmp    bl,BYTE PTR [edx]
  41eb03:	jmp    0x921e:0x44fab3e
  41eb0a:	test   eax,0xc50b5476
  41eb0f:	outs   dx,BYTE PTR ds:[esi]
  41eb10:	setl   bh
  41eb13:	jbe    0x41eb4c
  41eb15:	cmp    dh,dl
  41eb17:	xchg   edx,eax
  41eb18:	push   ss
  41eb19:	imul   edi,DWORD PTR [edi+0x4b],0x510ec5ee
  41eb20:	(bad)
  41eb23:	jmp    0x3b74:0x9a51d792
  41eb2a:	jb     0x41eabf
  41eb2c:	clc    
  41eb2d:	gs push eax
  41eb2f:	out    0xe3,eax
  41eb31:	imul   esi,ecx,0x925b9114
  41eb37:	sbb    eax,0x5a6d69c0
  41eb3c:	xor    BYTE PTR [ebp-0x4],ch
  41eb3f:	sbb    cl,cl
  41eb41:	pushf  
  41eb42:	add    BYTE PTR [ebx],ch
  41eb44:	xchg   esp,eax
  41eb45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb46:	ror    DWORD PTR [edi+0x2fe12ed8],0xbb
  41eb4d:	repnz dec edx
  41eb4f:	ss jo  0x41eb84
  41eb52:	cli    
  41eb53:	enter  0x4c48,0x94
  41eb57:	push   0x2480d082
  41eb5c:	imul   edi,esi,0xbdcecafd
  41eb62:	pop    es
  41eb63:	fisttp QWORD PTR [ecx+edi*4]
  41eb66:	mov    edx,ebp
  41eb68:	frstor [ebp-0x15]
  41eb6b:	add    eax,0x894b7296
  41eb70:	push   edx
  41eb71:	adc    edi,ecx
  41eb73:	out    dx,eax
  41eb74:	les    esp,FWORD PTR [edx+0x39]
  41eb77:	pop    eax
  41eb78:	jecxz  0x41eb2a
  41eb7a:	mov    esi,0x708f4c29
  41eb7f:	jo     0x41eb71
  41eb81:	or     bl,BYTE PTR [ebx+0x58708df8]
  41eb87:	nop
  41eb88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb89:	jbe    0x41eb5e
  41eb8b:	pop    ds
  41eb8c:	jns    0x41eb17
  41eb8e:	pop    ebx
  41eb8f:	mov    eax,0xee7588a4
  41eb94:	sti    
  41eb95:	push   0xffffff84
  41eb97:	jbe    0x41ebf4
  41eb99:	xchg   BYTE PTR [ebp+0xc],dh
  41eb9c:	sbb    BYTE PTR [ebp-0x6d90cf7e],0xa6
  41eba3:	xchg   ebx,eax
  41eba4:	cmp    cl,BYTE PTR [ebp-0x60632c32]
  41ebaa:	ret    
  41ebab:	repz xchg edx,eax
  41ebad:	ret    
  41ebae:	dec    esp
  41ebaf:	xor    BYTE PTR [ebx],bl
  41ebb1:	outs   dx,BYTE PTR ds:[esi]
  41ebb2:	add    al,0x7a
  41ebb4:	(bad)
  41ebb8:	ss cs out dx,eax
  41ebbb:	in     al,0x4a
  41ebbd:	mov    esi,0x5521c6b6
  41ebc2:	out    0xe7,eax
  41ebc4:	int3   
  41ebc5:	repz (bad) 
  41ebc7:	push   esp
  41ebc8:	shl    edi,0x5d
  41ebcb:	pop    ss
  41ebcc:	(bad)  [esi-0x1ecacf3d]
  41ebd2:	enter  0x65e7,0x18
  41ebd6:	dec    edi
  41ebd7:	xor    DWORD PTR [ecx+0x53],eax
  41ebda:	mov    DWORD PTR [ecx],esp
  41ebdc:	pop    es
  41ebdd:	(bad)  
  41ebde:	push   edx
  41ebdf:	call   FWORD PTR [ecx]
  41ebe1:	not    ebp
  41ebe3:	xchg   ecx,eax
  41ebe4:	inc    edx
  41ebe5:	pusha  
  41ebe6:	mov    ah,0x29
  41ebe8:	(bad)  
  41ebe9:	adc    dh,dh
  41ebeb:	test   DWORD PTR [edx+esi*2-0x67],esp
  41ebef:	pop    ss
  41ebf0:	stos   BYTE PTR es:[edi],al
  41ebf1:	or     al,0xc2
  41ebf3:	pop    es
  41ebf4:	inc    edi
  41ebf5:	jl     0x41ec40
  41ebf7:	in     eax,0xb4
  41ebf9:	push   esp
  41ebfa:	int    0x41
  41ebfc:	das    
  41ebfd:	pop    ss
  41ebfe:	into   
  41ebff:	retf   0xc8eb
  41ec02:	push   ecx
  41ec03:	sub    DWORD PTR [edx+edi*4+0x7f036dd1],esp
  41ec0a:	ss pop ecx
  41ec0c:	sub    BYTE PTR [ebp-0x1ab49aa2],dl
  41ec12:	and    BYTE PTR [eax+0x45745da2],ch
  41ec18:	sbb    BYTE PTR [ecx-0x63],ch
  41ec1b:	pop    ebp
  41ec1c:	jns    0x41ec1a
  41ec1e:	mov    eax,ds:0x191f7149
  41ec23:	xchg   ebp,eax
  41ec24:	hlt    
  41ec25:	push   edx
  41ec26:	xchg   ecx,eax
  41ec27:	out    dx,al
  41ec28:	lds    edx,FWORD PTR [ebx+0x18839504]
  41ec2e:	inc    ax
  41ec30:	pop    ebp
  41ec31:	xchg   esi,eax
  41ec32:	mov    esi,0xcb2f78aa
  41ec37:	xchg   DWORD PTR [esi],esi
  41ec39:	lds    esp,FWORD PTR [ecx]
  41ec3b:	in     eax,dx
  41ec3c:	fimul  DWORD PTR [ebx+0x1d]
  41ec3f:	cmp    ah,BYTE PTR [esi+0x740f261f]
  41ec45:	sub    al,0x77
  41ec47:	loope  0x41ec2d
  41ec49:	jle    0x41ebdb
  41ec4b:	add    ecx,ecx
  41ec4d:	push   ebp
  41ec4e:	test   BYTE PTR [esi],0x38
  41ec51:	sub    ebp,DWORD PTR [ecx+0x8]
  41ec54:	mov    ecx,0xbaf3abf9
  41ec59:	jae    0x41ec1a
  41ec5b:	gs je  0x41ec08
  41ec5e:	arpl   WORD PTR [ebx-0x26],cx
  41ec61:	mov    eax,0x7d51768a
  41ec66:	pusha  
  41ec67:	mov    cl,0xb9
  41ec69:	test   BYTE PTR [eax+0xf],ch
  41ec6c:	(bad)  ds:0xd03310b2
  41ec72:	and    ebx,DWORD PTR [edx-0x11]
  41ec75:	inc    ecx
  41ec76:	inc    ecx
  41ec77:	lahf   
  41ec78:	aas    
  41ec79:	mov    bl,0x73
  41ec7b:	mov    esp,0xe99fa449
  41ec80:	add    ebp,esi
  41ec82:	(bad)  
  41ec83:	sub    esp,DWORD PTR [esi-0x1d]
  41ec86:	inc    ebx
  41ec87:	(bad)  
  41ec88:	cdq    
  41ec89:	and    al,0x88
  41ec8b:	jns    0x41ec1a
  41ec8d:	jmp    0xa177:0xe7b4ac7d
  41ec94:	add    DWORD PTR [esi-0x3],0xffffffde
  41ec98:	mov    edx,0x29cf3acd
  41ec9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec9e:	enter  0xc0eb,0x8b
  41eca2:	jmp    0x5fe1afb
  41eca7:	aaa    
  41eca8:	sub    esi,DWORD PTR [edx+eax*1]
  41ecab:	enter  0xd500,0x39
  41ecaf:	cld    
  41ecb0:	(bad)  
  41ecb1:	cdq    
  41ecb2:	push   ebp
  41ecb3:	ins    BYTE PTR es:[edi],dx
  41ecb4:	iret   
  41ecb5:	xchg   esi,eax
  41ecb6:	jnp    0x41ec56
  41ecb8:	dec    ecx
  41ecb9:	(bad)  
  41ecba:	fwait
  41ecbb:	cmp    eax,DWORD PTR [eax]
  41ecbd:	pop    ecx
  41ecbe:	out    dx,eax
  41ecbf:	in     eax,dx
  41ecc0:	dec    ebx
  41ecc1:	fisttp WORD PTR [ebp-0x34732e28]
  41ecc7:	retf   0xbff
  41ecca:	add    ebp,DWORD PTR [edi+0x603302d3]
  41ecd0:	adc    al,0x25
  41ecd2:	mov    bh,BYTE PTR [esi+0x4940baee]
  41ecd8:	cmc    
  41ecd9:	push   es
  41ecda:	jecxz  0x41ed15
  41ecdc:	leave  
  41ecdd:	sbb    esp,DWORD PTR [edi]
  41ecdf:	mov    edi,0x9227c6b6
  41ece4:	inc    edx
  41ece5:	cmp    BYTE PTR [esi+0x1],0x80
  41ece9:	call   0x6646:0xe6873d2d
  41ecf0:	(bad)  
  41ecf1:	push   ecx
  41ecf2:	ja     0x41ed5e
  41ecf4:	sahf   
  41ecf5:	mov    es,ebp
  41ecf7:	cmp    DWORD PTR [esi-0x66],ebp
  41ecfa:	mov    ecx,0x8d519b1c
  41ecff:	and    al,0x4c
  41ed01:	mov    al,0xc4
  41ed03:	out    0x66,al
  41ed05:	ret    0x7388
  41ed08:	push   ds
  41ed09:	push   esi
  41ed0a:	pop    ecx
  41ed0b:	xchg   DWORD PTR [esi],esp
  41ed0d:	arpl   WORD PTR [edi+ecx*4-0x300bdafa],cx
  41ed14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed15:	mov    ebp,DWORD PTR [edx]
  41ed17:	lahf   
  41ed18:	pop    ss
  41ed19:	push   0xaaa94bc8
  41ed1e:	rcr    eax,1
  41ed20:	in     eax,0x6a
  41ed22:	mov    ch,0xbd
  41ed24:	adc    cl,ah
  41ed26:	mov    edi,edi
  41ed28:	inc    ebx
  41ed29:	sbb    al,0x96
  41ed2b:	jbe    0x41ecc2
  41ed2d:	cmp    cl,BYTE PTR [esi]
  41ed2f:	jmp    0x41ed9c
  41ed31:	ja     0x41ed34
  41ed33:	cdq    
  41ed34:	jbe    0x41ecc8
  41ed36:	jp     0x41ed5d
  41ed38:	pushf  
  41ed39:	add    dl,0x29
  41ed3c:	mov    ch,0x95
  41ed3e:	aas    
  41ed3f:	dec    esp
  41ed40:	sti    
  41ed41:	push   edx
  41ed42:	dec    di
  41ed44:	retf   0xef28
  41ed47:	mov    esi,0xf187877a
  41ed4c:	xlat   BYTE PTR ds:[ebx]
  41ed4d:	xchg   esi,eax
  41ed4e:	adc    BYTE PTR [edx],0xb3
  41ed51:	push   edx
  41ed52:	or     bh,dl
  41ed54:	push   ss
  41ed55:	xor    eax,0x4a68c420
  41ed5a:	mov    edi,0x3bc49fbc
  41ed5f:	out    0x2e,eax
  41ed61:	or     esp,DWORD PTR [edi+edx*1]
  41ed64:	das    
  41ed65:	arpl   cx,sp
  41ed67:	jle    0x41ed1d
  41ed69:	pop    ebx
  41ed6a:	lock test BYTE PTR [eax-0x12934985],0x5d
  41ed72:	ret    
  41ed73:	sub    DWORD PTR [edi-0x5a64ab3a],edi
  41ed79:	pop    ebp
  41ed7a:	push   edi
  41ed7b:	mov    ds:0x78a6e63f,al
  41ed80:	test   DWORD PTR [ebx+0x54],esi
  41ed83:	imul   ebx,DWORD PTR [ebx+0x12279018],0x6d688db4
  41ed8d:	xor    al,0x4d
  41ed8f:	xlat   BYTE PTR ds:[ebx]
  41ed90:	xchg   ebx,eax
  41ed91:	(bad)  
  41ed92:	push   ecx
  41ed93:	(bad)  
  41ed94:	fs dec esp
  41ed96:	xlat   BYTE PTR ds:[ebx]
  41ed97:	inc    ebp
  41ed98:	pop    esp
  41ed99:	dec    eax
  41ed9a:	mov    dl,0x20
  41ed9c:	lods   al,BYTE PTR ds:[esi]
  41ed9d:	jp     0x41edff
  41ed9f:	mov    bh,0x8b
  41eda1:	jle    0x41edea
  41eda3:	out    dx,al
  41eda4:	fcom   DWORD PTR [ecx+0xb1e15e0]
  41edaa:	repnz inc eax
  41edac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edad:	sub    al,dh
  41edaf:	pop    ebx
  41edb0:	cdq    
  41edb1:	sub    BYTE PTR [edx-0x4d],bh
  41edb4:	xor    eax,0x1f3d6c42
  41edb9:	pushf  
  41edba:	mov    ds:0xc208e079,eax
  41edbf:	xchg   esp,eax
  41edc0:	xor    al,0x2e
  41edc2:	mov    bh,0x23
  41edc4:	inc    ebx
  41edc5:	or     eax,0x5e081b62
  41edca:	fs jns 0x41edc8
  41edcd:	ret    0x3254
  41edd0:	cmc    
  41edd1:	xchg   ebx,eax
  41edd2:	mov    edi,0xe9311954
  41edd7:	xor    al,BYTE PTR [ebx-0x7898cf6d]
  41eddd:	dec    eax
  41edde:	pop    esi
  41eddf:	jno    0x41ee3c
  41ede1:	popf   
  41ede2:	jae    0x41edce
  41ede4:	cmp    DWORD PTR [eax+0x3],esi
  41ede7:	and    eax,0x302ddf08
  41edec:	add    eax,0x32b75fcd
  41edf1:	add    esi,esi
  41edf3:	arpl   WORD PTR [ecx],sp
  41edf5:	add    cl,BYTE PTR [ecx+0x2c]
  41edf8:	dec    esi
  41edf9:	jp     0x41ee1e
  41edfb:	jo     0x41ee43
  41edfd:	ins    DWORD PTR es:[edi],dx
  41edfe:	fistp  QWORD PTR [edi-0xe]
  41ee01:	int    0xd1
  41ee03:	jb     0x41ee22
  41ee05:	jae    0x41ee64
  41ee07:	inc    esi
  41ee08:	inc    edx
  41ee09:	loope  0x41edcb
  41ee0b:	mov    esp,0x69d6a822
  41ee10:	ins    BYTE PTR es:[edi],dx
  41ee11:	pop    esi
  41ee12:	scas   al,BYTE PTR es:[edi]
  41ee13:	test   al,0xc3
  41ee15:	stos   DWORD PTR es:[edi],eax
  41ee16:	lods   eax,DWORD PTR ds:[esi]
  41ee17:	ss data16 jbe 0x41edcd
  41ee1b:	and    eax,0x7408cb36
  41ee20:	dec    eax
  41ee21:	outs   dx,DWORD PTR ds:[esi]
  41ee22:	pop    edx
  41ee23:	into   
  41ee24:	dec    edx
  41ee25:	cdq    
  41ee26:	inc    esi
  41ee27:	stos   BYTE PTR es:[edi],al
  41ee28:	push   ss
  41ee29:	add    al,0xf7
  41ee2b:	ins    DWORD PTR es:[edi],dx
  41ee2c:	hlt    
  41ee2d:	xchg   esi,eax
  41ee2e:	cmp    dl,BYTE PTR [eax]
  41ee30:	push   edx
  41ee31:	dec    edi
  41ee32:	xor    ah,BYTE PTR fs:[edi+0x48]
  41ee36:	jbe    0x41ee55
  41ee38:	xor    al,0xa9
  41ee3a:	mov    ebx,0x8c9c1d2e
  41ee3f:	pop    ecx
  41ee40:	add    DWORD PTR [esi-0x3c],edi
  41ee43:	or     eax,0x98f68cc1
  41ee48:	ds addr16 leave 
  41ee4b:	sub    ch,al
  41ee4d:	push   edi
  41ee4e:	cwde   
  41ee4f:	mov    BYTE PTR [eax+0x1e980117],bh
  41ee55:	push   esp
  41ee56:	inc    edx
  41ee57:	dec    edi
  41ee58:	dec    edi
  41ee59:	(bad)  
  41ee5a:	push   DWORD PTR [esi]
  41ee5c:	cmp    BYTE PTR [eax+edi*2-0x5e],dh
  41ee60:	jg     0x41ee5a
  41ee62:	xor    bl,BYTE PTR [edi-0x2bd1bddc]
  41ee68:	dec    esi
  41ee69:	adc    eax,0x3562bbc5
  41ee6e:	rol    dl,0x7c
  41ee71:	jl     0x41ee15
  41ee73:	retf   0xefe8
  41ee76:	mov    fs,WORD PTR [ecx+0x4f]
  41ee79:	pop    ebp
  41ee7a:	and    edx,esp
  41ee7c:	(bad)  
  41ee7d:	daa    
  41ee7e:	cmp    BYTE PTR [ebx-0x2d],dl
  41ee81:	push   ds
  41ee82:	cmp    al,0xaf
  41ee84:	cld    
  41ee85:	xor    DWORD PTR [eax],edi
  41ee87:	mov    cl,0x9b
  41ee89:	xor    ch,BYTE PTR [edi+0x54]
  41ee8c:	jns    0x41eec0
  41ee8e:	mov    dl,0xe8
  41ee90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee91:	cdq    
  41ee92:	pop    esi
  41ee93:	dec    ebx
  41ee94:	xchg   ebx,eax
  41ee95:	pop    ecx
  41ee96:	mov    ah,0x0
  41ee98:	sbb    al,0xe1
  41ee9a:	fsub   st,st(3)
  41ee9c:	int3   
  41ee9d:	jg     0x41eec8
  41ee9f:	(bad)  
  41eea0:	push   edi
  41eea1:	retf   
  41eea2:	aas    
  41eea3:	add    ecx,edi
  41eea5:	xor    ebp,DWORD PTR [eax]
  41eea7:	pop    es
  41eea8:	pop    esi
  41eea9:	mov    ebx,0x77d5591b
  41eeae:	sub    bl,cl
  41eeb0:	and    ebp,ecx
  41eeb2:	mov    eax,ds:0xd6817986
  41eeb7:	out    0x8,eax
  41eeb9:	sahf   
  41eeba:	pushf  
  41eebb:	add    eax,0x20f0fd24
  41eec0:	mov    ebp,0x1b2c75ff
  41eec5:	xor    esp,edx
  41eec7:	into   
  41eec8:	cwde   
  41eec9:	(bad)  
  41eeca:	jnp    0x41eec2
  41eecc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eecd:	sbb    DWORD PTR [ecx+0x6353978a],ecx
  41eed3:	jo     0x41ef2f
  41eed5:	adc    DWORD PTR [ebx],esi
  41eed7:	and    DWORD PTR [edx],0xcde33805
  41eedd:	pop    eax
  41eede:	inc    ebx
  41eedf:	sub    DWORD PTR [ebp-0x44],ebp
  41eee2:	sbb    eax,0x42b7dd48
  41eee7:	xor    al,0x6a
  41eee9:	or     DWORD PTR [ebp+0x65],ebx
  41eeec:	mov    esi,eax
  41eeee:	dec    esp
  41eeef:	mov    bl,0xc4
  41eef1:	loope  0x41ee8d
  41eef3:	dec    esi
  41eef4:	jne    0x41eeb0
  41eef6:	xchg   ebx,eax
  41eef7:	jp     0x41ef5a
  41eef9:	ss or  eax,0x7f3c2205
  41eeff:	xchg   ebp,eax
  41ef00:	imul   edx,eax,0x31285b1
  41ef06:	push   ds
  41ef07:	addr16 popf 
  41ef09:	loope  0x41ef80
  41ef0b:	add    DWORD PTR ds:0xd251be4e,ebx
  41ef11:	pop    esp
  41ef12:	inc    ebx
  41ef13:	nop
  41ef14:	sub    eax,0xb884b355
  41ef19:	dec    edi
  41ef1a:	sbb    DWORD PTR [edx*8+0x56229820],ebx
  41ef21:	and    ebp,DWORD PTR [esp+edi*8+0x46]
  41ef25:	leave  
  41ef26:	dec    eax
  41ef27:	repz cmp ebx,esi
  41ef2a:	pusha  
  41ef2b:	adc    eax,0x136c79a7
  41ef30:	ret    
  41ef31:	jmp    0x41efb0
  41ef33:	fstp   TBYTE PTR [esi+0x5e]
  41ef36:	jnp    0x41efaf
  41ef38:	outs   dx,BYTE PTR ds:[esi]
  41ef39:	jmp    0x41ef6f
  41ef3b:	fldenv [ebx-0x175c97bf]
  41ef41:	retf   
  41ef42:	scas   al,BYTE PTR es:[edi]
  41ef43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef44:	mov    bl,dh
  41ef46:	pop    edx
  41ef47:	in     al,dx
  41ef48:	call   0x14a:0x5d4b3c57
  41ef4f:	cs dec esi
  41ef51:	xchg   ecx,eax
  41ef52:	mov    ds:0xb01cb719,al
  41ef57:	jmp    0x56700613
  41ef5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef5d:	nop
  41ef5e:	or     BYTE PTR [edx-0x7],al
  41ef61:	shl    esi,cl
  41ef63:	call   0x3cf22bd
  41ef68:	mov    ebp,0x79a7d3e0
  41ef6d:	popf   
  41ef6e:	pop    ds
  41ef6f:	cli    
  41ef70:	test   BYTE PTR [ebx],bh
  41ef72:	jmp    DWORD PTR [edx+ebp*1-0x29beee09]
  41ef79:	pop    esp
  41ef7a:	xor    ebp,esi
  41ef7c:	mov    ch,0xa5
  41ef7e:	cmc    
  41ef7f:	fist   DWORD PTR [edx-0x23]
  41ef82:	pusha  
  41ef83:	outs   dx,BYTE PTR ds:[esi]
  41ef84:	push   ss
  41ef85:	fwait
  41ef86:	pop    eax
  41ef87:	sar    ch,0xa6
  41ef8a:	or     cl,dh
  41ef8c:	mov    bh,0x30
  41ef8e:	das    
  41ef8f:	sbb    al,0x7
  41ef91:	rol    BYTE PTR [edi+0x68],1
  41ef94:	add    ebp,DWORD PTR [edi-0x24c0c8e0]
  41ef9a:	inc    esi
  41ef9b:	dec    ecx
  41ef9c:	adc    BYTE PTR [ecx+0x6b104851],bh
  41efa2:	pop    ebx
  41efa3:	sbb    al,0x7a
  41efa5:	or     al,dh
  41efa7:	cs ss aas 
  41efaa:	das    
  41efab:	cmp    eax,0x3e87d306
  41efb0:	pop    ebp
  41efb1:	cld    
  41efb2:	(bad)  
  41efb4:	add    eax,0x412385d7
  41efb9:	ja     0x41f011
  41efbb:	scas   eax,DWORD PTR es:[edi]
  41efbc:	in     eax,dx
  41efbd:	jnp    0x41ef60
  41efbf:	js     0x41f028
  41efc1:	jnp    0x41efff
  41efc3:	inc    ecx
  41efc4:	adc    ah,ch
  41efc6:	lods   al,BYTE PTR ds:[esi]
  41efc7:	inc    ecx
  41efc8:	jne    0x41efc9
  41efca:	pusha  
  41efcb:	cli    
  41efcc:	mov    cl,0xd6
  41efce:	jnp    0x41f027
  41efd0:	mov    esp,0x25cc58b6
  41efd5:	pop    edx
  41efd6:	sar    BYTE PTR [esi],cl
  41efd8:	mov    esi,0xc4f6894e
  41efdd:	xor    DWORD PTR [esi],eax
  41efdf:	not    BYTE PTR [eax-0x1ad762f4]
  41efe5:	push   es
  41efe6:	icebp  
  41efe7:	mov    ah,0x57
  41efe9:	outs   dx,BYTE PTR ds:[esi]
  41efea:	jmp    0x41efe2
  41efec:	test   al,0x7d
  41efee:	loopne 0x41f02a
  41eff0:	retf   
  41eff1:	aas    
  41eff2:	adc    BYTE PTR [edi-0x5920cf5e],ah
  41eff8:	mov    ebx,0xe8e07d1e
  41effd:	lea    ecx,[ebx-0x7476b9f6]
  41f003:	mov    ecx,0xd4ad5f35
  41f008:	push   edi
  41f009:	cmp    al,0x65
  41f00b:	ret    
  41f00c:	stc    
  41f00d:	dec    esp
  41f00e:	pusha  
  41f00f:	cli    
  41f010:	idiv   DWORD PTR [ebx]
  41f012:	fs js  0x41f04d
  41f015:	ret    0x2b8f
  41f018:	jbe    0x41efca
  41f01a:	(bad)  
  41f01b:	(bad)  
  41f01c:	call   0xcfc3ea0e
  41f021:	push   0x4e1809e6
  41f026:	push   edi
  41f027:	cmp    bh,BYTE PTR [eax]
  41f029:	jnp    0x41f02a
  41f02b:	lahf   
  41f02c:	cmp    BYTE PTR [ecx-0x1034252e],dl
  41f032:	lahf   
  41f033:	or     al,0x95
  41f035:	add    BYTE PTR [eax+0x1f4d780c],bh
  41f03b:	inc    edi
  41f03c:	sub    BYTE PTR [edi-0x19],ah
  41f03f:	mov    bl,0x4f
  41f041:	push   es
  41f042:	repz test al,0x48
  41f045:	mov    ds,WORD PTR [ecx]
  41f047:	aam    0xb
  41f049:	lods   al,BYTE PTR ds:[esi]
  41f04a:	fistp  QWORD PTR [ecx+0x6a9d1fd2]
  41f050:	ret    
  41f051:	repz inc ebp
  41f053:	xchg   dl,ch
  41f055:	add    al,0x36
  41f057:	je     0x41f096
  41f059:	push   eax
  41f05a:	cmp    BYTE PTR [ecx],bh
  41f05c:	jle    0x41f09a
  41f05e:	pop    ebp
  41f05f:	test   bl,0x10
  41f062:	push   ebx
  41f063:	jp     0x41f04a
  41f065:	test   DWORD PTR [esi+0x2a],ecx
  41f068:	repz adc dh,cl
  41f06b:	sbb    DWORD PTR [ecx-0x7a905bec],0x3709cba4
  41f075:	sbb    dl,al
  41f077:	or     ecx,DWORD PTR [eax-0x3f]
  41f07a:	mov    ebp,0x8b189022
  41f07f:	or     DWORD PTR [ecx+0x10d6ee37],esi
  41f085:	xor    eax,0x7d7b1ec5
  41f08a:	pop    eax
  41f08b:	ret    
  41f08c:	jge    0x41f0fb
  41f08e:	fwait
  41f08f:	imul   DWORD PTR [ecx+edi*4+0x125c91fd]
  41f096:	rol    DWORD PTR [eax-0x5e],cl
  41f099:	xchg   ebx,eax
  41f09a:	pop    esi
  41f09b:	lods   eax,DWORD PTR ds:[esi]
  41f09c:	cli    
  41f09d:	add    al,0x54
  41f09f:	rol    BYTE PTR [edi-0x21],0xbb
  41f0a3:	xor    BYTE PTR [esi],dl
  41f0a5:	dec    edx
  41f0a6:	aam    0x9b
  41f0a8:	push   ecx
  41f0a9:	push   ecx
  41f0aa:	jg     0x41f08a
  41f0ac:	lods   al,BYTE PTR ds:[esi]
  41f0ad:	sbb    DWORD PTR [edx-0x6f0d2e10],edi
  41f0b3:	xchg   DWORD PTR [edi],esp
  41f0b5:	shl    BYTE PTR [eax],0xb2
  41f0b8:	sub    bh,dh
  41f0ba:	js     0x41f04a
  41f0bc:	adc    eax,0xf75dd53f
  41f0c1:	ins    DWORD PTR es:[edi],dx
  41f0c2:	out    0xb9,al
  41f0c4:	retf   0xafeb
  41f0c7:	bound  esi,QWORD PTR [edi]
  41f0c9:	dec    eax
  41f0ca:	pushf  
  41f0cb:	and    BYTE PTR [edx],ah
  41f0cd:	ins    BYTE PTR es:[edi],dx
  41f0ce:	lock shl DWORD PTR ss:[esi+0x271eca00],1
  41f0d6:	jg     0x41f117
  41f0d8:	ret    
  41f0d9:	cmp    BYTE PTR [ebp+ecx*8-0x15],cl
  41f0dd:	adc    eax,0xc79ac96b
  41f0e2:	mov    dh,0x2d
  41f0e4:	repz sbb BYTE PTR ds:0x1f82e6f9,ch
  41f0eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0ec:	pop    ebx
  41f0ed:	(bad)  
  41f0ee:	out    0x38,eax
  41f0f0:	or     al,0x4f
  41f0f2:	jmp    0x1366bfa3
  41f0f7:	xor    eax,0xa3679bca
  41f0fc:	stos   DWORD PTR es:[edi],eax
  41f0fd:	clc    
  41f0fe:	jge    0x41f09f
  41f100:	icebp  
  41f101:	dec    ebp
  41f102:	dec    esp
  41f103:	sbb    DWORD PTR fs:[edi-0x46],esi
  41f107:	mov    ebx,0xc3d3d2c6
  41f10c:	ins    DWORD PTR es:[edi],dx
  41f10d:	jbe    0x41f0b4
  41f10f:	ret    
  41f110:	leave  
  41f111:	xchg   edx,eax
  41f112:	inc    esp
  41f113:	sbb    al,0xd4
  41f115:	mov    esp,0x6d558053
  41f11a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f11b:	test   BYTE PTR [eax*8-0x51d3de4d],0xfd
  41f123:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f124:	sub    DWORD PTR [ecx],0xffffffa1
  41f127:	pop    ecx
  41f128:	pop    ebx
  41f129:	inc    eax
  41f12a:	sar    DWORD PTR [edi+0x5],cl
  41f12d:	and    ch,BYTE PTR [esi]
  41f12f:	dec    edx
  41f130:	cmp    al,0x36
  41f132:	arpl   WORD PTR [edi+0x1a59a98d],ax
  41f138:	xchg   ebx,eax
  41f139:	and    DWORD PTR [edi+edx*8],ecx
  41f13c:	(bad)  [ecx]
  41f13e:	add    DWORD PTR [esp],edi
  41f141:	pop    ebx
  41f142:	jg     0x41f114
  41f144:	repnz test BYTE PTR [eax+0x2218e335],dh
  41f14b:	sbb    BYTE PTR [ecx+edx*8],dl
  41f14e:	repz out 0x2,eax
  41f151:	dec    eax
  41f152:	jbe    0x41f154
  41f154:	jae    0x41f13e
  41f156:	and    edx,DWORD PTR [ecx]
  41f158:	pusha  
  41f159:	mov    dh,ch
  41f15b:	sbb    eax,0x7ac983
  41f160:	out    0xbd,al
  41f162:	cmp    ebx,DWORD PTR [edx-0x5fb812a0]
  41f168:	ret    0xb8de
  41f16b:	adc    ch,bl
  41f16d:	mov    eax,0x5eb63724
  41f172:	ror    BYTE PTR [ebx-0x3d],cl
  41f175:	mov    esp,0x523ee666
  41f17a:	inc    esi
  41f17b:	and    DWORD PTR [ecx+0x2d],ebp
  41f17e:	lds    esi,FWORD PTR [ecx+0x702d8b90]
  41f184:	push   es
  41f185:	xor    eax,0xe8ce8224
  41f18a:	nop
  41f18b:	out    0x78,al
  41f18d:	pop    eax
  41f18e:	test   bh,ah
  41f190:	mov    eax,ds:0xa9a04e3c
  41f195:	pop    ebx
  41f196:	inc    esp
  41f197:	xchg   edx,eax
  41f198:	mov    dl,cl
  41f19a:	popa   
  41f19b:	add    DWORD PTR [eax-0x64],ebx
  41f19e:	clc    
  41f19f:	ins    DWORD PTR es:[edi],dx
  41f1a0:	dec    ecx
  41f1a1:	call   0xdb48:0x252327c8
  41f1a8:	retf   0x80f0
  41f1ab:	jns    0x41f215
  41f1ad:	jo     0x41f219
  41f1af:	xor    esi,DWORD PTR [ebx]
  41f1b1:	leave  
  41f1b2:	cmp    al,0x5c
  41f1b4:	mov    WORD PTR [ebp+0x3f],ss
  41f1b7:	(bad)  
  41f1b9:	and    DWORD PTR [esi+ebx*2+0x15],eax
  41f1bd:	and    BYTE PTR [ebp-0x31],al
  41f1c0:	cli    
  41f1c1:	mov    esp,0x89ec94d3
  41f1c6:	ret    
  41f1c7:	xor    ah,BYTE PTR [edi-0x69a860de]
  41f1cd:	sub    DWORD PTR [esi+ebp*8+0x3],edx
  41f1d1:	or     eax,0x7fb8c88c
  41f1d6:	pushf  
  41f1d7:	ds mov dl,0xa3
  41f1da:	inc    ebx
  41f1db:	adc    al,BYTE PTR [ecx-0x374789b8]
  41f1e1:	ss mov al,0xd9
  41f1e4:	dec    esp
  41f1e5:	je     0x41f1ae
  41f1e7:	mov    edx,0xad2181ef
  41f1ec:	mov    al,0x30
  41f1ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1ef:	cld    
  41f1f0:	sti    
  41f1f1:	mov    al,ds:0xc9c4e2cb
  41f1f6:	outs   dx,DWORD PTR ds:[esi]
  41f1f7:	push   esi
  41f1f8:	cmc    
  41f1f9:	imul   ebp,esi,0xb91c25b8
  41f1ff:	out    dx,eax
  41f200:	aaa    
  41f201:	outs   dx,DWORD PTR ds:[esi]
  41f202:	xor    eax,0x143ee904
  41f207:	push   esi
  41f208:	leave  
  41f209:	nop
  41f20a:	ss sti 
  41f20c:	push   eax
  41f20d:	sti    
  41f20e:	xchg   esp,eax
  41f20f:	adc    dl,BYTE PTR [edx-0x36]
  41f212:	mov    edx,0xb257367b
  41f217:	mov    esp,0xa3610ee8
  41f21c:	xchg   esi,eax
  41f21d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f21e:	shl    DWORD PTR [esi-0x2d91b7e5],1
  41f224:	jae    0x41f230
  41f226:	(bad)  
  41f227:	fneni(8087 only) 
  41f229:	aas    
  41f22a:	adc    dl,BYTE PTR [ecx+0x759d51ed]
  41f230:	mov    al,ds:0x12243fc0
  41f235:	or     ebp,DWORD PTR [ecx+0x75bcb7b6]
  41f23b:	and    eax,0x9a98cc8
  41f240:	imul   edi,esp,0x4822af9b
  41f246:	inc    edi
  41f247:	imul   esi,esi,0x6e
  41f24a:	cwde   
  41f24b:	cli    
  41f24c:	jo     0x41f268
  41f24e:	mov    ds:0xad0769aa,eax
  41f253:	lea    eax,[eax+0x35a64e5b]
  41f259:	cmp    al,0xfe
  41f25b:	pop    esp
  41f25c:	xchg   DWORD PTR ds:0x8bfebbac,ebx
  41f262:	nop
  41f263:	or     BYTE PTR [ecx],al
  41f265:	or     bl,cl
  41f267:	out    dx,al
  41f268:	data16 cmc 
  41f26a:	jmp    DWORD PTR [edx-0x59310a23]
  41f270:	mov    ch,0xa6
  41f272:	retf   0x8a5a
  41f275:	out    dx,eax
  41f276:	sbb    DWORD PTR [eax-0xababa73],0x3a
  41f27d:	mov    al,ds:0xc78b2f1a
  41f282:	imul   esi,esi,0x7f5444a
  41f288:	addr16 addr16 test al,0x46
  41f28c:	scas   eax,DWORD PTR es:[edi]
  41f28d:	(bad)  
  41f28e:	sar    ecx,cl
  41f290:	not    BYTE PTR [edx+0x23]
  41f293:	addr16 push ds
  41f295:	push   ebp
  41f296:	inc    edi
  41f297:	jns    0x41f269
  41f299:	ins    DWORD PTR es:[edi],dx
  41f29a:	or     DWORD PTR [edx],eax
  41f29c:	lods   eax,DWORD PTR ds:[esi]
  41f29d:	in     al,0xd9
  41f29f:	sub    ah,BYTE PTR [esi+0x45]
  41f2a2:	or     DWORD PTR [esi+0x3b],eax
  41f2a5:	fisub  WORD PTR [ecx+0x2c]
  41f2a8:	idiv   BYTE PTR [esi]
  41f2aa:	sub    DWORD PTR [edi-0x5f],0x79c12e5d
  41f2b1:	fist   WORD PTR [ecx]
  41f2b3:	mov    cl,0x8f
  41f2b5:	test   DWORD PTR [ecx+0x7fcc37ab],esp
  41f2bb:	xchg   esp,eax
  41f2bc:	ret    0x2db8
  41f2bf:	push   esi
  41f2c0:	add    BYTE PTR ds:0x9ebae76d,bh
  41f2c6:	or     BYTE PTR [ebx-0x19],bh
  41f2c9:	imul   ecx,edx,0xffffffc6
  41f2cc:	repz mov ebp,0x53a454cb
  41f2d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2d3:	sbb    eax,0xc39578fe
  41f2d8:	aas    
  41f2d9:	and    al,0x60
  41f2db:	fdivr  st(6),st
  41f2dd:	and    eax,0x3165670f
  41f2e2:	ins    DWORD PTR es:[edi],dx
  41f2e3:	adc    BYTE PTR [edx-0x23a14304],ah
  41f2e9:	lds    ebp,FWORD PTR [ecx-0x66b3524a]
  41f2ef:	push   esp
  41f2f0:	js     0x41f29a
  41f2f2:	nop
  41f2f3:	mov    ah,0xe3
  41f2f5:	mov    ds:0xa6b7c3a5,al
  41f2fa:	sub    BYTE PTR ds:0x5bfa0889,ah
  41f300:	lds    ebp,FWORD PTR [edx+0x2caa7dc3]
  41f306:	out    dx,al
  41f307:	mov    eax,ds:0x86cbce8f
  41f30c:	pushf  
  41f30d:	jne    0x41f2e4
  41f30f:	push   0xf288fea1
  41f314:	dec    edx
  41f315:	adc    edx,DWORD PTR [edx-0x4b93963f]
  41f31b:	scas   eax,DWORD PTR es:[edi]
  41f31c:	adc    al,0x4c
  41f31e:	mov    DWORD PTR [ebp-0x45e02448],ecx
  41f324:	add    al,0xd6
  41f326:	lods   al,BYTE PTR ds:[esi]
  41f327:	mov    bl,0xdf
  41f329:	jmp    0x41f31f
  41f32b:	adc    DWORD PTR [ecx+0x14],esi
  41f32e:	push   cs
  41f32f:	mov    es,WORD PTR [edx-0x123d49fd]
  41f335:	xchg   esi,eax
  41f336:	lds    edx,FWORD PTR [edx-0x4c1f7faf]
  41f33c:	fsubr  DWORD PTR [eax-0x2ed03ffe]
  41f342:	lock in eax,dx
  41f344:	xchg   BYTE PTR [ebp+ecx*1+0x699f466d],dl
  41f34b:	xor    DWORD PTR [esi],0xfb818d6f
  41f351:	mov    eax,0x2b2c1146
  41f356:	push   cs
  41f357:	aad    0x5f
  41f359:	test   DWORD PTR [esp+eiz*4],esi
  41f35c:	scas   eax,DWORD PTR es:[edi]
  41f35d:	push   edx
  41f35e:	scas   al,BYTE PTR es:[edi]
  41f35f:	imul   edx,DWORD PTR cs:[ebx+0x5a],0xa
  41f364:	and    eax,0x1ee37bfc
  41f369:	ss push eax
  41f36b:	sahf   
  41f36c:	xlat   BYTE PTR ds:[ebx]
  41f36d:	jp     0x41f30d
  41f36f:	pop    esp
  41f370:	adc    al,0x35
  41f372:	cmc    
  41f373:	repz xor edx,DWORD PTR [eax+0x31674b68]
  41f37a:	test   eax,0xbffb6781
  41f37f:	mov    ?,ecx
  41f381:	and    dl,BYTE PTR [eax]
  41f383:	les    eax,FWORD PTR [ebp+0x4b4495d]
  41f389:	mov    ebp,0xee71eb01
  41f38e:	sub    dl,BYTE PTR [ebx+0x3e3eaaf3]
  41f394:	pop    ss
  41f395:	mov    ds:0xef62602b,eax
  41f39a:	js     0x41f359
  41f39c:	pop    ebx
  41f39d:	lock inc edi
  41f39f:	iret   
  41f3a0:	push   ebp
  41f3a1:	ss xor eax,0xb0c48907
  41f3a7:	out    dx,al
  41f3a8:	jo     0x41f3d9
  41f3aa:	or     eax,0xabdaa8e
  41f3af:	push   es
  41f3b0:	sti    
  41f3b1:	loopne 0x41f39b
  41f3b3:	imul   esi,ebp,0xfffffff9
  41f3b6:	dec    ebx
  41f3b7:	mov    al,ds:0x1e13ca53
  41f3bc:	xor    BYTE PTR [edi+0x4],bl
  41f3bf:	sub    al,0x67
  41f3c1:	into   
  41f3c2:	aam    0x62
  41f3c4:	lock cld 
  41f3c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3c7:	cs pop edi
  41f3c9:	jb     0x41f419
  41f3cb:	cmp    dh,0x9
  41f3ce:	and    DWORD PTR ds:0x91975eea,ebx
  41f3d4:	(bad)  
  41f3d5:	cli    
  41f3d6:	jb     0x41f38a
  41f3d8:	lods   eax,DWORD PTR ds:[esi]
  41f3d9:	add    DWORD PTR [ebx-0x26],0x8f722666
  41f3e0:	(bad)  
  41f3e1:	jmp    0x41f433
  41f3e3:	fidivr WORD PTR [esi-0x1ce41cc6]
  41f3e9:	shl    DWORD PTR [eax],0xf2
  41f3ec:	add    BYTE PTR [ecx-0x1ee6f206],ch
  41f3f2:	jne    0x41f3fa
  41f3f4:	jmp    0x41f422
  41f3f6:	(bad)  
  41f3f7:	mov    ds:0x77759ea2,eax
  41f3fc:	or     BYTE PTR [edi],bh
  41f3fe:	int3   
  41f3ff:	add    ebx,DWORD PTR [ecx-0x1]
  41f402:	add    ecx,DWORD PTR [ecx-0x49256db3]
  41f408:	adc    BYTE PTR [ebp-0x50],0x6d
  41f40c:	rol    bh,1
  41f40e:	(bad)  
  41f40f:	out    dx,al
  41f410:	(bad)  
  41f411:	or     BYTE PTR [eax],bl
  41f413:	mov    al,0xbf
  41f415:	test   DWORD PTR [edx-0x7c2dc909],eax
  41f41b:	test   DWORD PTR [ebx-0x5cc5348e],esi
  41f421:	fwait
  41f422:	data16 jns 0x41f406
  41f425:	push   ecx
  41f426:	adc    cl,ch
  41f428:	ss inc edx
  41f42a:	mov    cl,0xad
  41f42c:	xchg   esi,eax
  41f42d:	test   DWORD PTR [edx],edx
  41f42f:	cmp    BYTE PTR [ecx+0x44],dh
  41f432:	ins    BYTE PTR es:[edi],dx
  41f433:	hlt    
  41f434:	sbb    eax,0x2490d756
  41f439:	mov    BYTE PTR [esi],al
  41f43b:	aam    0x0
  41f43d:	outs   dx,DWORD PTR ds:[esi]
  41f43e:	popa   
  41f43f:	loop   0x41f413
  41f441:	neg    BYTE PTR [edi-0x5641694d]
  41f447:	cmp    dh,BYTE PTR [esi]
  41f449:	pop    esi
  41f44a:	jae    0x41f40d
  41f44c:	mov    edx,0x17d6e854
  41f451:	dec    edi
  41f452:	adc    al,0xcd
  41f454:	jg     0x41f493
  41f456:	into   
  41f457:	pop    es
  41f458:	sub    al,0xe6
  41f45a:	dec    ecx
  41f45b:	repnz scas al,BYTE PTR es:[edi]
  41f45d:	pop    edx
  41f45e:	rcl    BYTE PTR [bp-0x46e0],cl
  41f463:	jmp    0xd071:0x2ea09742
  41f46a:	lods   eax,DWORD PTR ds:[esi]
  41f46b:	out    0x6b,al
  41f46d:	add    cl,BYTE PTR [edi+0x61]
  41f470:	out    0x91,eax
  41f472:	mov    eax,ds:0xf07e51dd
  41f477:	mov    DWORD PTR [edi-0x3f],esi
  41f47a:	es in  eax,0xac
  41f47d:	daa    
  41f47e:	mov    edi,0x824c5901
  41f484:	imul   edi,edi,0x7890bda9
  41f48a:	xchg   esp,eax
  41f48b:	repz aad 0x5d
  41f48e:	(bad)  
  41f48f:	inc    edi
  41f490:	rcr    BYTE PTR [edi+0x71546ab9],cl
  41f496:	sub    ebx,edi
  41f498:	or     eax,0x5100fc9a
  41f49d:	repnz in eax,dx
  41f49f:	fimul  DWORD PTR [edx-0x54]
  41f4a2:	ficomp WORD PTR [eax]
  41f4a4:	and    eax,esi
  41f4a6:	dec    edx
  41f4a7:	fcmovu st,st(2)
  41f4a9:	mov    cl,0x38
  41f4ab:	loopne 0x41f4a9
  41f4ad:	cmp    eax,0x7821abe2
  41f4b2:	inc    edx
  41f4b3:	xchg   esp,eax
  41f4b4:	jo     0x41f43f
  41f4b6:	retf   0x5bf9
  41f4b9:	aam    0x5f
  41f4bb:	sub    DWORD PTR [edi-0x4e],0x59
  41f4bf:	xor    al,0x1b
  41f4c1:	dec    edi
  41f4c2:	jp     0x41f459
  41f4c4:	and    cl,BYTE PTR [edx]
  41f4c6:	out    dx,eax
  41f4c7:	and    ebp,DWORD PTR [ebx+0x3226f00]
  41f4cd:	dec    eax
  41f4ce:	push   esp
  41f4cf:	fs test al,0x98
  41f4d2:	or     BYTE PTR [eax-0x15],dh
  41f4d5:	push   0x9991b1be
  41f4da:	dec    edx
  41f4db:	or     ecx,edi
  41f4dd:	test   DWORD PTR [esi-0x7e],ebp
  41f4e0:	mov    dh,0x8
  41f4e2:	clc    
  41f4e3:	(bad)  
  41f4e4:	mov    edi,0x6b14c603
  41f4e9:	iret   
  41f4ea:	fs pop edi
  41f4ec:	lahf   
  41f4ed:	popf   
  41f4ee:	xchg   edi,eax
  41f4ef:	xor    edi,eax
  41f4f1:	push   0xffffffc2
  41f4f3:	ret    
  41f4f4:	dec    eax
  41f4f5:	mov    ch,0x28
  41f4f7:	popa   
  41f4f8:	popa   
  41f4f9:	push   ds
  41f4fa:	stc    
  41f4fb:	pop    ds
  41f4fc:	xchg   esp,eax
  41f4fd:	ins    BYTE PTR es:[edi],dx
  41f4fe:	fild   QWORD PTR [eax+0x5f]
  41f501:	jl     0x41f514
  41f503:	mov    DWORD PTR ds:0xbd56e3a4,edi
  41f509:	pop    ds
  41f50a:	and    eax,0x9f8c0cf3
  41f50f:	jb     0x41f4d6
  41f511:	mov    dh,0x9e
  41f513:	in     al,dx
  41f514:	(bad)  
  41f515:	and    esp,DWORD PTR ds:0x531d631c
  41f51b:	fldenv [eax+0x70598727]
  41f521:	and    al,0x31
  41f523:	sub    al,0xf0
  41f525:	mov    ch,0x65
  41f527:	ins    BYTE PTR es:[edi],dx
  41f528:	gs or  dl,bl
  41f52b:	out    dx,eax
  41f52c:	sub    dh,BYTE PTR [eax+ebx*2]
  41f52f:	dec    ecx
  41f530:	jmp    0x41f4d4
  41f532:	push   edx
  41f533:	add    BYTE PTR [ebx+0x21ecfa11],0x6f
  41f53a:	data16 jp 0x41f5b7
  41f53d:	(bad)  
  41f53e:	and    al,0x3f
  41f540:	scas   eax,DWORD PTR es:[edi]
  41f541:	retf   
  41f542:	ins    BYTE PTR es:[edi],dx
  41f543:	jmp    0x25d02c7a
  41f548:	mov    es,edx
  41f54a:	ret    0x38e7
  41f54d:	dec    edx
  41f54e:	hlt    
  41f54f:	outs   dx,BYTE PTR ds:[esi]
  41f550:	xor    eax,0x4a885f69
  41f555:	iret   
  41f556:	adc    bh,dl
  41f558:	or     DWORD PTR [ebx+0x57bdd234],ebx
  41f55e:	dec    edi
  41f55f:	push   cs
  41f560:	inc    esp
  41f561:	and    esp,DWORD PTR [esi-0x2f]
  41f564:	aas    
  41f565:	leave  
  41f566:	add    al,0xb8
  41f568:	cwde   
  41f569:	xchg   ecx,eax
  41f56a:	pop    ss
  41f56b:	xchg   ebx,eax
  41f56c:	jno    0x41f4f8
  41f56e:	jle    0x41f5d4
  41f570:	icebp  
  41f571:	dec    edi
  41f572:	lods   al,BYTE PTR ds:[esi]
  41f573:	sti    
  41f574:	sub    ebp,esp
  41f576:	xor    eax,0xb2de251b
  41f57b:	add    al,0xd5
  41f57d:	push   ds
  41f57e:	xor    eax,0x6a4f929
  41f583:	add    BYTE PTR [edi-0x5a],0x9
  41f587:	jecxz  0x41f5ad
  41f589:	aas    
  41f58a:	ret    0x7e85
  41f58d:	add    ecx,DWORD PTR [ebp+0x7f5b660d]
  41f593:	sbb    eax,0x7a0aa2ed
  41f598:	sti    
  41f599:	aaa    
  41f59a:	inc    edi
  41f59b:	dec    eax
  41f59c:	pop    esi
  41f59d:	sbb    bl,dh
  41f59f:	and    eax,0x1a74a4fe
  41f5a4:	xor    eax,DWORD PTR [eax+0x75bcb1d3]
  41f5aa:	loope  0x41f557
  41f5ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5ad:	xchg   esi,eax
  41f5ae:	lock mov eax,0x72bd2190
  41f5b4:	fmul   QWORD PTR [edx-0x7]
  41f5b7:	hlt    
  41f5b8:	sti    
  41f5b9:	push   sp
  41f5bb:	fcmove st,st(7)
  41f5bd:	cmc    
  41f5be:	fsubr  DWORD PTR [ebp+0x40befd97]
  41f5c4:	pusha  
  41f5c5:	pop    esi
  41f5c6:	mov    al,0xda
  41f5c8:	dec    ebp
  41f5c9:	and    DWORD PTR [ebp-0x7f64f508],0x20285c2b
  41f5d3:	mov    DWORD PTR [ecx-0x4e],edx
  41f5d6:	jne    0x41f5d9
  41f5d8:	popf   
  41f5d9:	fnstenv [ecx-0x65]
  41f5dc:	adc    ecx,DWORD PTR [edx]
  41f5de:	push   ecx
  41f5df:	add    eax,0xc0032563
  41f5e4:	xor    al,0x4d
  41f5e6:	fsub   QWORD PTR [edx-0x68]
  41f5e9:	jg     0x41f655
  41f5eb:	aas    
  41f5ec:	add    al,0x8f
  41f5ee:	aam    0xbc
  41f5f0:	addr16 iret 
  41f5f2:	mov    ds:0x81c271cd,eax
  41f5f7:	into   
  41f5f8:	push   cs
  41f5f9:	pop    es
  41f5fa:	pusha  
  41f5fb:	test   al,0x59
  41f5fd:	jmp    0x41f5da
  41f5ff:	inc    esi
  41f600:	test   DWORD PTR [esi],ebp
  41f602:	inc    edi
  41f603:	mov    ds:0x7fcdd3c0,al
  41f608:	pop    ebp
  41f609:	out    0x4b,al
  41f60b:	jbe    0x41f667
  41f60d:	pop    edx
  41f60e:	sbb    DWORD PTR [ecx-0x77],edx
  41f611:	js     0x41f607
  41f613:	mov    ?,WORD PTR [ecx+ebx*8]
  41f616:	dec    ebp
  41f617:	mov    bh,0xf5
  41f619:	call   0x7d6e3bba
  41f61e:	out    dx,al
  41f61f:	dec    eax
  41f620:	shl    BYTE PTR [esi+0x27],cl
  41f623:	mov    al,ds:0xe046167e
  41f628:	call   0x41dc:0x3078a9a9
  41f62f:	mov    esp,0xf0d1a508
  41f634:	adc    DWORD PTR [esi+0x6],ebx
  41f637:	sbb    edx,ecx
  41f639:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f63a:	stos   DWORD PTR es:[edi],eax
  41f63b:	cmp    eax,0x86e22d38
  41f640:	jge    0x41f6bc
  41f642:	add    BYTE PTR [ebx+0x41],dh
  41f645:	out    0xf3,eax
  41f647:	or     esp,DWORD PTR [eax+0x404e0400]
  41f64d:	push   esi
  41f64e:	mov    bh,0xc9
  41f650:	jae    0x41f5d8
  41f652:	xor    edx,DWORD PTR [ebx+0x78]
  41f655:	dec    eax
  41f656:	push   es
  41f657:	add    BYTE PTR [ecx+0x1f],0x8
  41f65b:	sub    dh,bh
  41f65d:	fild   QWORD PTR [esi]
  41f65f:	lea    ebx,[eax+0x2ed471b7]
  41f665:	add    al,0xa7
  41f667:	xlat   BYTE PTR ds:[ebx]
  41f668:	js     0x41f615
  41f66a:	xchg   ebp,eax
  41f66b:	mov    edi,0x2a8be25d
  41f670:	inc    esp
  41f671:	aaa    
  41f672:	lds    esi,FWORD PTR [edi]
  41f674:	mov    edx,0x61d3af67
  41f679:	idiv   DWORD PTR [ebx-0x13]
  41f67c:	pushf  
  41f67d:	imul   esp,DWORD PTR [edi+0x3d],0x8073f701
  41f684:	and    DWORD PTR [edi+0x8],eax
  41f687:	mov    ds:0xc440fc76,al
  41f68c:	daa    
  41f68d:	(bad)  
  41f68e:	jbe    0x41f659
  41f690:	out    dx,eax
  41f691:	mov    al,0xc6
  41f693:	mov    cl,0x4d
  41f695:	outs   dx,BYTE PTR ds:[esi]
  41f696:	push   ecx
  41f697:	xor    esp,ebx
  41f699:	jo     0x41f709
  41f69b:	je     0x41f6c0
  41f69d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f69e:	call   0x7dc18a5b
  41f6a3:	jae    0x41f62a
  41f6a5:	dec    BYTE PTR [ebx]
  41f6a7:	add    esi,ecx
  41f6a9:	call   0x73f2:0xfb007b3c
  41f6b0:	and    ch,BYTE PTR [esi-0x6]
  41f6b3:	cli    
  41f6b4:	push   ebp
  41f6b5:	pushf  
  41f6b6:	stos   BYTE PTR es:[edi],al
  41f6b7:	cmp    al,0xdc
  41f6b9:	mov    ah,0x8f
  41f6bb:	pop    ebp
  41f6bc:	aas    
  41f6bd:	xchg   ecx,eax
  41f6be:	adc    eax,DWORD PTR [edx+0x76f47a0b]
  41f6c4:	test   DWORD PTR [eax-0x2f3fc753],eax
  41f6ca:	cmp    ch,BYTE PTR [eax+0x60af1b9a]
  41f6d0:	adc    DWORD PTR [ecx+ecx*4],0xffffffdb
  41f6d4:	and    eax,0xb888052c
  41f6d9:	retf   
  41f6da:	loope  0x41f6bd
  41f6dc:	cmp    DWORD PTR [ebx+0x10],esp
  41f6df:	repz push 0xc7b659a6
  41f6e5:	gs push eax
  41f6e7:	jp     0x41f73b
  41f6e9:	mov    BYTE PTR [eax-0x60],bh
  41f6ec:	xlat   BYTE PTR ds:[ebx]
  41f6ed:	rcr    DWORD PTR [edx-0xc89b171],cl
  41f6f3:	(bad)  
  41f6f4:	fmul   DWORD PTR [edx]
  41f6f6:	mov    ds,WORD PTR [eax+0x72a79de1]
  41f6fc:	sbb    al,0xda
  41f6fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6ff:	ins    DWORD PTR es:[edi],dx
  41f700:	stos   BYTE PTR es:[edi],al
  41f701:	fmulp  st(6),st
  41f703:	inc    edi
  41f704:	or     eax,DWORD PTR [edi]
  41f706:	inc    ebx
  41f707:	push   0x12ddb4d2
  41f70c:	adc    al,0x70
  41f70e:	hlt    
  41f70f:	jmp    FWORD PTR [edx-0x4c]
  41f712:	pushf  
  41f713:	lods   eax,DWORD PTR ds:[esi]
  41f714:	ror    bh,0x7
  41f717:	test   DWORD PTR [ebp-0x51],eax
  41f71a:	cld    
  41f71b:	dec    ecx
  41f71c:	pop    edi
  41f71d:	jmp    0xf660:0x98b34d0d
  41f724:	int3   
  41f725:	in     al,0xb1
  41f727:	ds mov dl,0x50
  41f72a:	pop    ss
  41f72b:	daa    
  41f72c:	cld    
  41f72d:	fsub   QWORD PTR [edi-0x38]
  41f730:	rcr    DWORD PTR [eax-0x19],0xfc
  41f734:	push   eax
  41f735:	int    0xf6
  41f737:	jb     0x41f6e4
  41f739:	or     DWORD PTR [esp+edi*4-0x5d],ebp
  41f73d:	mov    al,ds:0xbcbb560
  41f742:	lds    esi,FWORD PTR [ecx]
  41f744:	pusha  
  41f745:	xchg   ebx,eax
  41f746:	xor    al,0x92
  41f748:	nop
  41f749:	mov    ah,BYTE PTR [ecx]
  41f74b:	xor    ebp,DWORD PTR [esi+0x13]
  41f74e:	fs dec esi
  41f750:	ins    BYTE PTR es:[edi],dx
  41f751:	out    0x3b,al
  41f753:	inc    eax
  41f754:	fcom   QWORD PTR ds:0xc37df996
  41f75a:	retf   
  41f75b:	loope  0x41f71e
  41f75d:	das    
  41f75e:	scas   eax,DWORD PTR es:[edi]
  41f75f:	(bad)
  41f763:	jmp    0x41f6f2
  41f765:	std    
  41f766:	adc    dx,WORD PTR ss:[ebp+0x1acae700]
  41f76e:	sbb    ch,BYTE PTR [esi+0x62e2171f]
  41f774:	loop   0x41f7a1
  41f776:	push   edi
  41f777:	pop    ds
  41f778:	xchg   ebp,eax
  41f779:	adc    al,0xbe
  41f77b:	inc    edi
  41f77c:	lahf   
  41f77d:	cdq    
  41f77e:	popa   
  41f77f:	lods   eax,DWORD PTR ds:[esi]
  41f780:	xchg   esi,eax
  41f781:	out    0x27,al
  41f783:	mov    ch,0xff
  41f785:	mov    bh,BYTE PTR [eax+0x21]
  41f788:	and    DWORD PTR [edx],0xffffffcd
  41f78b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f78c:	mov    BYTE PTR [bx+di+0x15],ah
  41f790:	dec    edx
  41f791:	push   esp
  41f792:	xor    dl,BYTE PTR [ebp+0x651fce3c]
  41f798:	sub    ebx,DWORD PTR [eax+0x10b1da28]
  41f79e:	out    dx,eax
  41f79f:	mov    WORD PTR [eax],?
  41f7a1:	daa    
  41f7a2:	icebp  
  41f7a3:	int3   
  41f7a4:	mov    edx,0x5b03695f
  41f7a9:	lods   al,BYTE PTR ds:[esi]
  41f7aa:	test   al,0xe9
  41f7ac:	mov    ebp,0xe4805642
  41f7b1:	inc    ebp
  41f7b2:	sahf   
  41f7b3:	or     dh,BYTE PTR [ebp-0x25bfe4c7]
  41f7b9:	xor    BYTE PTR [edi],al
  41f7bb:	mov    ecx,ebp
  41f7bd:	call   0xc6576d05
  41f7c2:	pusha  
  41f7c3:	mov    ds:0xe54e31cf,al
  41f7c8:	sub    cl,BYTE PTR [eax]
  41f7ca:	sbb    cl,BYTE PTR [edx+0x1ceceb0a]
  41f7d0:	std    
  41f7d1:	sub    al,bl
  41f7d3:	and    ecx,DWORD PTR [ecx+ebx*8-0x53b0f3b9]
  41f7da:	push   0xb8a8b68
  41f7df:	jne    0x41f7fd
  41f7e1:	jne    0x41f7a0
  41f7e3:	das    
  41f7e4:	or     al,0xfd
  41f7e6:	mov    ch,al
  41f7e8:	inc    ecx
  41f7e9:	dec    esp
  41f7ea:	popa   
  41f7eb:	and    cl,BYTE PTR [esi]
  41f7ed:	mov    esp,0xa21b9f46
  41f7f2:	les    ebp,FWORD PTR [bp-0x9]
  41f7f6:	pop    edx
  41f7f7:	sub    edi,DWORD PTR [edx+0x3c]
  41f7fa:	fs sbb eax,0xb20eeb0e
  41f800:	inc    esp
  41f801:	dec    ebx
  41f802:	mov    ebp,0x274af58a
  41f807:	push   ds
  41f808:	cmp    ah,0x16
  41f80b:	clc    
  41f80c:	lds    esi,FWORD PTR [eax+edi*1+0x6434834d]
  41f813:	pop    ebp
  41f814:	imul   edi,DWORD PTR [ebp+ebx*4-0x54],0xffffffac
  41f819:	inc    eax
  41f81a:	dec    DWORD PTR [esi-0x5d]
  41f81d:	shl    BYTE PTR [esi*2-0x7a8f4e06],cl
  41f824:	test   al,0x7e
  41f826:	aam    0x83
  41f828:	xor    ch,BYTE PTR [ebx+0x6b627962]
  41f82e:	or     eax,0xddfe34f0
  41f833:	ja     0x41f88c
  41f835:	sbb    eax,0x8ea30eaa
  41f83a:	xor    al,0x3
  41f83c:	and    eax,0x3618a5bc
  41f841:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f842:	lea    eax,[edx]
  41f844:	imul   ecx,DWORD PTR [edi-0x78d9e8cc],0xffffff88
  41f84b:	jnp    0x41f822
  41f84d:	adc    ecx,0x6d96f9a4
  41f853:	stc    
  41f854:	nop
  41f855:	pop    es
  41f856:	loop   0x41f843
  41f858:	push   0x28
  41f85a:	rcl    DWORD PTR [eax-0x21e8c52c],0xde
  41f861:	xchg   edx,eax
  41f862:	push   ebp
  41f863:	hlt    
  41f864:	xor    eax,0xe29d2853
  41f869:	(bad)  
  41f86a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f86b:	leave  
  41f86c:	adc    eax,0x3c04741f
  41f871:	jge    0x41f87f
  41f873:	xchg   ebp,eax
  41f874:	xchg   ecx,eax
  41f875:	dec    eax
  41f876:	add    DWORD PTR [edx-0x47fb5d],esi
  41f87c:	add    esi,edi
  41f87e:	push   esp
  41f87f:	lds    ebx,FWORD PTR [edx]
  41f881:	inc    ebp
  41f882:	push   esp
  41f883:	push   eax
  41f884:	ins    BYTE PTR es:[edi],dx
  41f885:	xchg   DWORD PTR ss:[esi+ebx*1],esp
  41f889:	test   al,0xb9
  41f88b:	adc    ebx,DWORD PTR [ebx+0x58]
  41f88e:	retf   
  41f88f:	outs   dx,DWORD PTR ds:[esi]
  41f890:	rol    DWORD PTR [esi],cl
  41f892:	jle    0x41f89e
  41f894:	je     0x41f84d
  41f896:	ret    0xe70a
  41f899:	bound  edx,QWORD PTR [edi+0x27c1bbce]
  41f89f:	fldcw  WORD PTR ss:[ebp-0x55]
  41f8a3:	cli    
  41f8a4:	mov    ecx,0x1a1ed217
  41f8a9:	push   ss
  41f8aa:	stos   BYTE PTR es:[edi],al
  41f8ab:	fmul   st,st(2)
  41f8ad:	fsub   DWORD PTR [ecx+ebp*2-0x11386b91]
  41f8b4:	out    0xdc,al
  41f8b6:	sahf   
  41f8b7:	jno    0x41f87d
  41f8b9:	(bad)  
  41f8bb:	pop    eax
  41f8bc:	out    dx,eax
  41f8bd:	sar    edi,0xac
  41f8c0:	adc    edx,esi
  41f8c2:	jne    0x41f8d2
  41f8c4:	test   ecx,ecx
  41f8c6:	nop
  41f8c7:	dec    ebp
  41f8c8:	mov    dh,0x6
  41f8ca:	(bad)  
  41f8cb:	jg     0x41f8aa
  41f8cd:	push   ss
  41f8ce:	cli    
  41f8cf:	mov    al,ds:0x83a785e1
  41f8d4:	push   edx
  41f8d5:	mov    ecx,0x7aa4e7bd
  41f8da:	cwde   
  41f8db:	adc    cl,bl
  41f8dd:	push   ebx
  41f8de:	inc    edx
  41f8df:	std    
  41f8e0:	adc    ecx,esp
  41f8e2:	shr    BYTE PTR [edi],cl
  41f8e4:	cmc    
  41f8e5:	mov    dl,0x28
  41f8e7:	std    
  41f8e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8e9:	addr16 pop esi
  41f8eb:	jg     0x41f8c2
  41f8ed:	adc    DWORD PTR [ecx],ebx
  41f8ef:	lods   al,BYTE PTR ds:[esi]
  41f8f0:	ds adc al,0x2
  41f8f3:	jno    0x41f8cd
  41f8f5:	call   0xd374b313
  41f8fa:	lods   eax,DWORD PTR ds:[esi]
  41f8fb:	sbb    al,0xdb
  41f8fd:	push   edx
  41f8fe:	jae    0x41f8ba
  41f900:	cmp    BYTE PTR [ebp-0x641d2bc2],0x1f
  41f907:	retf   0xcf21
  41f90a:	icebp  
  41f90b:	push   0xfffffff9
  41f90d:	pop    esp
  41f90e:	inc    eax
  41f90f:	sti    
  41f910:	mov    al,ds:0x869df75c
  41f915:	dec    ecx
  41f916:	and    esi,eax
  41f918:	dec    ecx
  41f919:	mov    esi,0x3edb7546
  41f91e:	jae    0x41f994
  41f920:	or     edi,DWORD PTR [ebx-0x50]
  41f923:	cmp    esi,DWORD PTR [ebx+0x3f95c490]
  41f929:	inc    edi
  41f92a:	xor    al,0x44
  41f92c:	cmp    esp,DWORD PTR [edx+0x2a]
  41f92f:	bound  esi,QWORD PTR [ebx*4+0x862e643]
  41f936:	jae    0x41f917
  41f938:	cwde   
  41f939:	fsub   DWORD PTR [ebx]
  41f93b:	sub    dh,dl
  41f93d:	xchg   edi,eax
  41f93e:	xlat   BYTE PTR ds:[ebx]
  41f93f:	push   ebx
  41f940:	leave  
  41f941:	mov    ds:0x1769ba63,eax
  41f946:	jmp    0x47a8:0x97b3663
  41f94d:	xor    DWORD PTR [edi],edi
  41f94f:	sub    al,0x73
  41f951:	es lahf 
  41f953:	in     eax,dx
  41f954:	push   0x3b
  41f956:	sub    ah,BYTE PTR [esi]
  41f958:	leave  
  41f959:	scas   al,BYTE PTR es:[edi]
  41f95a:	dec    esp
  41f95b:	je     0x41f9ce
  41f95d:	das    
  41f95e:	cmp    DWORD PTR [ebx-0x372cdb40],ebp
  41f964:	pop    es
  41f965:	xchg   BYTE PTR [edi+0x5c6c620b],ch
  41f96b:	adc    eax,0x1200553b
  41f970:	sub    DWORD PTR [edx+0x6675751c],esi
  41f976:	and    eax,0x487fbe7f
  41f97b:	pop    ss
  41f97c:	stos   BYTE PTR es:[edi],al
  41f97d:	in     al,dx
  41f97e:	sbb    DWORD PTR [edi-0x67],edx
  41f981:	popa   
  41f982:	aas    
  41f983:	mov    dl,0xc8
  41f985:	inc    esi
  41f986:	mov    dh,0x92
  41f988:	xor    al,0xa1
  41f98a:	push   0xa287a07f
  41f98f:	and    eax,0x2cd2b4cb
  41f994:	aaa    
  41f995:	les    esi,FWORD PTR [edi+0x746cee95]
  41f99b:	repz rcl esp,0x2f
  41f99f:	jnp    0x41f965
  41f9a1:	jmp    0x41f946
  41f9a3:	xchg   edx,esi
  41f9a5:	xor    BYTE PTR [eax-0x6ba4b429],ch
  41f9ab:	jmp    0x41f996
  41f9ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9ae:	gs push edx
  41f9b0:	or     BYTE PTR es:[ecx],dl
  41f9b3:	and    BYTE PTR [ebx-0x3b],dl
  41f9b6:	outs   dx,DWORD PTR ds:[esi]
  41f9b7:	inc    ebx
  41f9b8:	xchg   esi,eax
  41f9b9:	sub    DWORD PTR [ecx],eax
  41f9bb:	mov    cl,0x48
  41f9bd:	cmp    eax,0x8854e92a
  41f9c2:	in     al,0x5e
  41f9c4:	pushw  ds
  41f9c6:	sar    BYTE PTR [ebp*4+0x4849cd39],0xc9
  41f9ce:	arpl   WORD PTR [esi+0x1efa85c5],ax
  41f9d4:	shr    esp,cl
  41f9d6:	sbb    BYTE PTR [ebx+eiz*2],ah
  41f9d9:	cli    
  41f9da:	add    al,0xe7
  41f9dc:	mov    fs,WORD PTR [eax+0x58]
  41f9df:	jle    0x41f9f0
  41f9e1:	mov    cl,0x3e
  41f9e3:	sbb    al,0xc1
  41f9e5:	mov    al,ds:0x7e362e52
  41f9ea:	aad    0xd8
  41f9ec:	fsin   
  41f9ee:	jne    0x41f9da
  41f9f0:	cmc    
  41f9f1:	xor    ch,0xa
  41f9f4:	pop    ss
  41f9f5:	cmp    al,0x55
  41f9f7:	cmc    
  41f9f8:	dec    edi
  41f9f9:	mov    ecx,0x14950696
  41f9fe:	stos   BYTE PTR es:[edi],al
  41f9ff:	mov    edx,0xe9e7309e
  41fa04:	mov    edi,0x2da6093e
  41fa09:	shl    DWORD PTR [edi+edi*2-0x70faeed5],1
  41fa10:	jne    0x41f9ed
  41fa12:	pop    eax
  41fa13:	fnstenv [ecx+0x7d]
  41fa16:	sub    esp,0xc87d7d80
  41fa1c:	scas   eax,DWORD PTR es:[edi]
  41fa1d:	shr    DWORD PTR [edi-0x6],cl
  41fa20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa21:	xor    eax,0x41a29354
  41fa26:	test   DWORD PTR [ebp+0x50],ebp
  41fa29:	sbb    al,0x63
  41fa2b:	xlat   BYTE PTR ds:[ebx]
  41fa2c:	loopne 0x41f9dc
  41fa2e:	test   eax,0xef775c71
  41fa33:	(bad)  
  41fa34:	jg     0x41f9e6
  41fa36:	push   0xffffffa0
  41fa38:	shl    DWORD PTR [ebx-0x4ff4f718],cl
  41fa3e:	aam    0x89
  41fa40:	inc    edi
  41fa41:	dec    edi
  41fa42:	fidiv  DWORD PTR [esi-0xd]
  41fa45:	sbb    DWORD PTR [ecx],0xeb62d515
  41fa4b:	mov    edi,0xcad6be7d
  41fa50:	call   0x9318bc7e
  41fa55:	sub    eax,0x4a2c24a7
  41fa5a:	test   eax,0x37371293
  41fa5f:	push   ss
  41fa60:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa62:	int    0xbd
  41fa64:	xor    eax,0x669ba2e8
  41fa69:	shl    BYTE PTR [eax],0x3d
  41fa6c:	mov    ?,WORD PTR [ecx]
  41fa6e:	in     al,0x1a
  41fa70:	or     cl,dl
  41fa72:	and    BYTE PTR [eax],bl
  41fa74:	push   es
  41fa75:	lock (bad) 
  41fa77:	xlat   BYTE PTR ds:[ebx]
  41fa78:	iret   
  41fa79:	mov    esp,0xef092555
  41fa7e:	(bad)  
  41fa7f:	mov    eax,ds:0x7a7d4228
  41fa84:	out    dx,eax
  41fa85:	daa    
  41fa86:	fs push ds
  41fa88:	pop    es
  41fa89:	lock gs mov fs,esp
  41fa8d:	push   0xffffffa0
  41fa8f:	dec    ecx
  41fa90:	or     edx,DWORD PTR [eax+0x6091c181]
  41fa96:	xchg   edx,eax
  41fa97:	je     0x41fa8f
  41fa99:	ret    
  41fa9a:	jecxz  0x41fa78
  41fa9c:	xor    al,0xa7
  41fa9e:	mov    DWORD PTR [eax+edi*1+0x56212222],esi
  41faa5:	add    BYTE PTR [ecx+0x66],0x12
  41faa9:	aas    
  41faaa:	aam    0x72
  41faac:	dec    edx
  41faad:	mov    al,ds:0xabde2f59
  41fab2:	mov    edx,0xd30f18b7
  41fab7:	scas   eax,DWORD PTR es:[edi]
  41fab8:	inc    ebx
  41fab9:	xlat   BYTE PTR ds:[ebx]
  41faba:	dec    eax
  41fabb:	sub    al,0x4b
  41fabd:	jno    0x41fab9
  41fabf:	or     al,BYTE PTR [ebp-0x61]
  41fac2:	clc    
  41fac3:	jb     0x41faec
  41fac5:	data16 add bh,ah
  41fac8:	into   
  41fac9:	cmp    al,0xb0
  41facb:	adc    dh,BYTE PTR [ebx+0x49db3f04]
  41fad1:	sbb    BYTE PTR [edx+0x1643a3ad],bh
  41fad7:	sub    al,0xce
  41fad9:	fdiv   DWORD PTR [edi+0x5a]
  41fadc:	adc    eax,0x8b55269a
  41fae1:	xchg   edx,eax
  41fae2:	sub    ch,BYTE PTR [ebp-0x30]
  41fae5:	test   al,0x2c
  41fae7:	cs (bad) 
  41fae9:	sub    eax,0x4d44090f
  41faee:	jns    0x41fadf
  41faf0:	xchg   esi,eax
  41faf1:	js     0x41fb3e
  41faf3:	mov    esp,0xf284d955
  41faf8:	pop    ds
  41faf9:	es rol ch,1
  41fafc:	mov    ch,BYTE PTR [ebx-0x76]
  41faff:	cmp    al,0xec
  41fb01:	fidivr WORD PTR [eax-0x63]
  41fb04:	and    al,0x40
  41fb06:	jae    0x41fb87
  41fb08:	jmp    0xe0d1:0xad0ccde5
  41fb0f:	sbb    al,0xb5
  41fb11:	arpl   WORD PTR [esi+0x40],dx
  41fb14:	sbb    dh,cl
  41fb16:	ja     0x41fb27
  41fb18:	aaa    
  41fb19:	push   eax
  41fb1a:	inc    esp
  41fb1b:	repz and ebx,DWORD PTR [di-0x7b14]
  41fb21:	push   eax
  41fb22:	or     al,0xc2
  41fb24:	push   esi
  41fb25:	or     al,0x76
  41fb27:	imul   ebp,DWORD PTR [eax-0x6c],0xffffffda
  41fb2b:	stc    
  41fb2c:	ins    DWORD PTR es:[edi],dx
  41fb2d:	hlt    
  41fb2e:	fsub   st(4),st
  41fb30:	ins    BYTE PTR es:[edi],dx
  41fb31:	fild   WORD PTR [eax+0x18a2700a]
  41fb37:	popa   
  41fb38:	add    esp,ebp
  41fb3a:	xor    BYTE PTR [ebp+eiz*1+0x9cb6d3c],0x7b
  41fb42:	mov    al,0x90
  41fb44:	cmp    DWORD PTR [ebx],edi
  41fb46:	and    ebx,ebx
  41fb48:	mov    dh,0x6f
  41fb4a:	leave  
  41fb4b:	mov    eax,ds:0xe1da3c40
  41fb50:	sub    dh,BYTE PTR [ecx+0x24]
  41fb53:	or     ch,dh
  41fb55:	lds    ebp,FWORD PTR [esi+0x3e]
  41fb58:	(bad)  
  41fb59:	xchg   esi,eax
  41fb5a:	shr    dh,cl
  41fb5c:	xchg   ecx,eax
  41fb5d:	nop
  41fb5e:	mov    eax,0x5693a4cb
  41fb63:	jmp    0xf403093b
  41fb68:	rol    BYTE PTR [edi+0x61a3e919],1
  41fb6e:	test   DWORD PTR [ecx-0x2c],edi
  41fb71:	xor    al,0x53
  41fb73:	add    bl,BYTE PTR [ebp+esi*2+0x27]
  41fb77:	dec    ebx
  41fb78:	mov    dh,0xfc
  41fb7a:	jp     0x41fbdb
  41fb7c:	or     ebx,esi
  41fb7e:	push   esp
  41fb7f:	sub    eax,0xd6a4d76e
  41fb84:	pushf  
  41fb85:	pop    edx
  41fb86:	inc    eax
  41fb87:	jmp    0xcca3057c
  41fb8c:	pop    edi
  41fb8d:	mov    edx,0x7360a34
  41fb92:	aaa    
  41fb93:	add    DWORD PTR [eax-0x43],eax
  41fb96:	(bad)  
  41fb97:	jb     0x41fbd5
  41fb99:	push   0x1f9d2f11
  41fb9e:	pop    ds
  41fb9f:	popf   
  41fba0:	fldln2 
  41fba2:	pop    esi
  41fba3:	push   ds
  41fba4:	sub    al,0xf1
  41fba6:	repnz xor cl,al
  41fba9:	mov    dh,0xe9
  41fbab:	popa   
  41fbac:	mov    ebp,0xbc3501f6
  41fbb1:	adc    BYTE PTR [ebx-0x34c8fe38],bh
  41fbb7:	cmp    dl,BYTE PTR [ecx+0x3d]
  41fbba:	or     BYTE PTR [edx+0x1adfe0df],al
  41fbc0:	or     dl,BYTE PTR [edi+0x2f8ecc7d]
  41fbc6:	add    al,BYTE PTR [edi-0x5d]
  41fbc9:	popa   
  41fbca:	sub    cl,BYTE PTR [edi+ecx*4-0x39bb5012]
  41fbd1:	sti    
  41fbd2:	nop
  41fbd3:	or     esp,eax
  41fbd5:	and    al,0x98
  41fbd7:	pop    eax
  41fbd8:	es fsub st(6),st
  41fbdb:	lock mov edi,0xda680e13
  41fbe1:	clc    
  41fbe2:	jns    0x41fb96
  41fbe4:	jp     0x41fc30
  41fbe6:	jmp    0x115ee11
  41fbeb:	shr    ecx,1
  41fbed:	out    dx,eax
  41fbee:	test   eax,0xee9c4650
  41fbf3:	into   
  41fbf4:	retf   
  41fbf5:	inc    edx
  41fbf6:	mov    esi,0xdac5ad04
  41fbfb:	nop
  41fbfc:	arpl   WORD PTR [si+0x1a],di
  41fc00:	xchg   ebx,eax
  41fc01:	into   
  41fc02:	popf   
  41fc03:	aam    0x7a
  41fc05:	lods   eax,DWORD PTR ds:[esi]
  41fc06:	das    
  41fc07:	xor    DWORD PTR [ebp-0x2957aed8],0xcabe50c9
  41fc11:	mov    ecx,0x861c6892
  41fc16:	mov    DWORD PTR [edi-0x4],ebx
  41fc19:	ffree  st(0)
  41fc1b:	dec    ebx
  41fc1c:	jg     0x41fbd5
  41fc1e:	sbb    ecx,DWORD PTR [esi-0x4]
  41fc21:	mov    esp,0x3d5eb381
  41fc26:	xchg   esp,eax
  41fc27:	ror    BYTE PTR [ebx+edi*2-0x49],cl
  41fc2b:	add    edi,esi
  41fc2d:	fild   DWORD PTR [ebx]
  41fc2f:	pop    ebp
  41fc30:	jge    0x41fc00
  41fc32:	int3   
  41fc33:	aad    0x6c
  41fc35:	jle    0x41fc05
  41fc37:	shr    DWORD PTR [edx],0xb7
  41fc3a:	test   DWORD PTR [edi+0x2229308e],eax
  41fc40:	(bad)  
  41fc41:	sar    eax,cl
  41fc43:	inc    ebp
  41fc44:	cmc    
  41fc45:	fild   QWORD PTR [ecx-0x3d744a97]
  41fc4b:	fmulp  st(5),st
  41fc4d:	push   eax
  41fc4e:	xchg   ecx,eax
  41fc4f:	ins    BYTE PTR es:[edi],dx
  41fc50:	and    eax,0x6d85e239
  41fc55:	cmp    DWORD PTR [ebx+0x70f97e81],ebp
  41fc5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc5c:	jge    0x41fc35
  41fc5e:	jecxz  0x41fbfd
  41fc60:	out    dx,eax
  41fc61:	or     bl,ah
  41fc63:	xchg   ebx,eax
  41fc64:	push   edi
  41fc65:	rol    BYTE PTR [ebp+0x2],1
  41fc68:	sbb    edi,DWORD PTR [ebx-0x1503bd92]
  41fc6e:	jae    0x41fcc6
  41fc70:	xor    eax,0x98f2bc82
  41fc75:	jnp    0x41fc9e
  41fc77:	sbb    eax,0xebc5c14e
  41fc7c:	inc    esi
  41fc7d:	test   al,0x1c
  41fc7f:	mov    bh,dh
  41fc81:	mov    dh,0xf8
  41fc83:	xor    al,0xf4
  41fc85:	lea    ebp,[edx]
  41fc87:	xchg   ebp,eax
  41fc88:	add    dh,ah
  41fc8a:	fwait
  41fc8b:	xchg   edx,eax
  41fc8c:	mov    ebx,0x6a6b6189
  41fc91:	maxps  xmm7,xmm0
  41fc94:	xor    edi,DWORD PTR [esi]
  41fc96:	xchg   edi,eax
  41fc97:	ins    DWORD PTR es:[edi],dx
  41fc98:	(bad)  
  41fc99:	and    al,0x80
  41fc9b:	ss js  0x41fc26
  41fc9e:	cmp    BYTE PTR [edi+0x77],ah
  41fca1:	in     eax,dx
  41fca2:	adc    DWORD PTR [ebp+0x6b],edx
  41fca5:	or     DWORD PTR [edi-0x5e2cad28],ecx
  41fcab:	sbb    al,0xed
  41fcad:	fistp  WORD PTR [eax]
  41fcaf:	cmp    eax,0xd7640159
  41fcb4:	icebp  
  41fcb5:	ror    DWORD PTR [ecx],1
  41fcb7:	popa   
  41fcb8:	outs   dx,DWORD PTR ds:[esi]
  41fcb9:	pop    ss
  41fcba:	adc    al,0x7f
  41fcbc:	(bad)  
  41fcbe:	imul   eax,edx,0x9400503c
  41fcc4:	dec    edx
  41fcc5:	imul   edx,DWORD PTR [ebp*2-0x736d417c],0xc
  41fccd:	test   eax,0x34b28041
  41fcd2:	mov    ecx,0x464af0ff
  41fcd7:	test   eax,0x855eab25
  41fcdc:	jno    0x41fceb
  41fcde:	mov    bl,0xaf
  41fce0:	mov    eax,ds:0x7fee4a20
  41fce5:	mov    ?,edx
  41fce7:	xchg   ecx,eax
  41fce8:	lock cmp DWORD PTR [ebp-0x67],eax
  41fcec:	into   
  41fced:	std    
  41fcee:	xor    bl,0x20
  41fcf1:	(bad)  
  41fcf2:	jg     0x41fd63
  41fcf4:	mov    ds:0xc1177f4,eax
  41fcf9:	loop   0x41fcdf
  41fcfb:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcfd:	dec    ebx
  41fcfe:	push   ds
  41fcff:	(bad)  
  41fd00:	jp     0x41fca8
  41fd02:	jge    0x41fd71
  41fd04:	mov    dl,0xdd
  41fd06:	cmp    BYTE PTR [edx+0x5e0deb53],ch
  41fd0c:	xor    eax,0x35f32e35
  41fd11:	aad    0x64
  41fd13:	cmpxchg8b (bad)
  41fd14:	(bad)  
  41fd15:	enter  0xe499,0x82
  41fd19:	mov    ebx,ebp
  41fd1b:	and    BYTE PTR ds:0x87d2019a,bl
  41fd21:	ror    DWORD PTR [esp+esi*2-0x4ce69509],cl
  41fd28:	xor    eax,esp
  41fd2a:	std    
  41fd2b:	inc    eax
  41fd2c:	cld    
  41fd2d:	jne    0x41fcb4
  41fd2f:	mov    ds:0xdeba9a96,al
  41fd34:	dec    esi
  41fd35:	mov    ds:0x1e0ff1aa,al
  41fd3a:	push   0xdf9547d6
  41fd3f:	mov    bh,0x77
  41fd41:	stc    
  41fd42:	inc    ecx
  41fd43:	push   esi
  41fd44:	push   ds
  41fd45:	aam    0xc7
  41fd47:	stos   DWORD PTR es:[edi],eax
  41fd48:	jbe    0x41fcf3
  41fd4a:	dec    eax
  41fd4b:	mov    al,ds:0xbc53c1ee
  41fd50:	xchg   edi,eax
  41fd51:	ins    DWORD PTR es:[edi],dx
  41fd52:	pushf  
  41fd53:	mov    edi,0xf642e2c3
  41fd58:	lods   al,BYTE PTR ds:[esi]
  41fd59:	sbb    dh,BYTE PTR [ebx-0x11]
  41fd5c:	out    0xfe,al
  41fd5e:	inc    edx
  41fd5f:	xchg   ecx,eax
  41fd60:	mov    esp,0x9e05c356
  41fd65:	pop    ds
  41fd66:	jmp    0x41fdd7
  41fd68:	mov    al,0xc5
  41fd6a:	sub    DWORD PTR [ecx-0x78f16bdb],ebx
  41fd70:	(bad)  
  41fd71:	in     al,0x92
  41fd73:	mov    cs,WORD PTR [ebx-0x40206bc8]
  41fd79:	iret   
  41fd7a:	or     eax,0x23e43783
  41fd7f:	sbb    al,0xdb
  41fd81:	mov    ah,0x6d
  41fd83:	xchg   edi,eax
  41fd84:	or     cl,bh
  41fd86:	and    edx,DWORD PTR [esi]
  41fd88:	pop    edi
  41fd89:	sub    cl,BYTE PTR [edi]
  41fd8b:	aad    0xaf
  41fd8d:	dec    ebp
  41fd8e:	sbb    ebp,esi
  41fd90:	(bad)  
  41fd92:	xchg   ebx,eax
  41fd93:	sub    ebx,DWORD PTR [edi-0x3216cbab]
  41fd99:	(bad)  
  41fd9a:	bound  ebp,QWORD PTR [edi]
  41fd9c:	add    al,0xed
  41fd9e:	scas   eax,DWORD PTR es:[edi]
  41fd9f:	es and ebx,edx
  41fda2:	dec    ecx
  41fda3:	cli    
  41fda4:	xlat   BYTE PTR ds:[ebx]
  41fda5:	dec    ecx
  41fda6:	pop    ss
  41fda7:	lods   al,BYTE PTR ds:[esi]
  41fda8:	ins    DWORD PTR es:[edi],dx
  41fda9:	xchg   edx,eax
  41fdaa:	cli    
  41fdab:	ficomp DWORD PTR [edi+esi*2]
  41fdae:	jnp    0x41fe1e
  41fdb0:	sub    edx,ebp
  41fdb2:	add    dl,BYTE PTR [edx-0x50cde691]
  41fdb8:	jo     0x41fddf
  41fdba:	iret   
  41fdbb:	push   esi
  41fdbc:	push   es
  41fdbd:	jmp    FWORD PTR [edx+ebp*8]
  41fdc0:	xchg   ebp,eax
  41fdc1:	xchg   DWORD PTR [edi],esi
  41fdc3:	adc    al,0x3b
  41fdc5:	mov    ecx,0xef0f7cef
  41fdca:	call   0x5d2:0xd04ac61b
  41fdd1:	xor    al,0xfe
  41fdd3:	jecxz  0x41fdb0
  41fdd5:	les    edx,FWORD PTR [esi]
  41fdd7:	jbe    0x41fdb3
  41fdd9:	fsub   st(4),st
  41fddb:	je     0x41fe46
  41fddd:	in     eax,dx
  41fdde:	mov    bl,0x8a
  41fde0:	gs inc edx
  41fde2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fde3:	fst    QWORD PTR [edx]
  41fde5:	out    dx,al
  41fde6:	mov    ebx,DWORD PTR [edi-0x4bc1c2de]
  41fdec:	dec    eax
  41fded:	add    edx,ecx
  41fdef:	mov    al,ds:0xaf64c724
  41fdf4:	shr    DWORD PTR [esp+ebp*8+0x78cd49f],cl
  41fdfb:	sbb    bh,ch
  41fdfd:	and    eax,0x18fe4c50
  41fe02:	push   edi
  41fe03:	retf   
  41fe04:	sub    al,0xc8
  41fe06:	call   0xafb3:0x6e0b9324
  41fe0d:	xor    al,BYTE PTR [edx+0x426a2308]
  41fe13:	mov    ebp,0xaabeb15d
  41fe18:	mov    gs,ebx
  41fe1a:	add    DWORD PTR [ecx+0x2b],0xfffffffa
  41fe1e:	call   0x6631:0xc0f9ff9d
  41fe25:	int3   
  41fe26:	mov    dl,0x63
  41fe28:	clc    
  41fe29:	inc    edi
  41fe2a:	gs cli 
  41fe2c:	int3   
  41fe2d:	and    BYTE PTR [esi-0x2df6de03],bh
  41fe33:	sti    
  41fe34:	(bad)  
  41fe35:	mov    bh,0x5e
  41fe37:	mov    ds:0x984ac8f0,al
  41fe3c:	inc    ecx
  41fe3d:	push   es
  41fe3e:	adc    al,0x7
  41fe40:	cmp    DWORD PTR [esi+0x5c3ebcda],esi
  41fe46:	cld    
  41fe47:	int    0xa
  41fe49:	loopne 0x41fe4a
  41fe4b:	jmp    0x81be:0x3f5b5b1f
  41fe52:	jg     0x41fe82
  41fe54:	adc    DWORD PTR [ecx-0x38],edx
  41fe57:	(bad)  
  41fe58:	pop    ds
  41fe59:	shl    ch,cl
  41fe5b:	sub    ebp,DWORD PTR ds:0x270a0129
  41fe61:	arpl   WORD PTR [eax-0x3fb1f185],cx
  41fe67:	sbb    eax,0xf55509d
  41fe6c:	jmp    0x41feb6
  41fe6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe6f:	push   esi
  41fe70:	retf   0xde2f
  41fe73:	adc    BYTE PTR [edi+0x7d],dh
  41fe76:	(bad)  
  41fe78:	mov    eax,ds:0x76b37510
  41fe7d:	lea    esi,[edx]
  41fe7f:	xchg   edi,eax
  41fe80:	out    dx,al
  41fe81:	jns    0x41fe3c
  41fe83:	mov    dl,0x19
  41fe85:	popa   
  41fe86:	into   
  41fe87:	cmp    BYTE PTR [edx-0x47],bh
  41fe8a:	and    BYTE PTR [edx*1-0x138ff6ad],0x71
  41fe92:	cld    
  41fe93:	imul   ebx,DWORD PTR [edi+0x18],0xffffffc6
  41fe97:	sub    eax,edi
  41fe99:	leave  
  41fe9a:	push   edx
  41fe9b:	inc    esp
  41fe9c:	or     bh,0x6e
  41fe9f:	add    al,0xca
  41fea1:	call   0x7f9970e4
  41fea6:	xor    al,0x80
  41fea8:	or     DWORD PTR [eax+0x32c542d1],ebp
  41feae:	addr16 lahf 
  41feb0:	sub    al,0x3e
  41feb2:	pop    ss
  41feb3:	mov    al,0x22
  41feb5:	js     0x41fe8e
  41feb7:	inc    esp
  41feb8:	icebp  
  41feb9:	popa   
  41feba:	lahf   
  41febb:	inc    ecx
  41febc:	push   ebx
  41febd:	sbb    DWORD PTR [eax+0x62],ebx
  41fec0:	push   ecx
  41fec1:	cmp    BYTE PTR [esi-0x7a],bh
  41fec4:	mov    dh,0xca
  41fec6:	mov    esi,0xc673d050
  41fecb:	mov    eax,ds:0xfb2bb7a3
  41fed0:	in     al,dx
  41fed1:	in     eax,dx
  41fed2:	div    DWORD PTR [eax-0x3a]
  41fed5:	outs   dx,DWORD PTR ds:[esi]
  41fed6:	fidiv  DWORD PTR [edx]
  41fed8:	mov    esp,0x82928e46
  41fedd:	cld    
  41fede:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fedf:	adc    eax,0xf9853a8f
  41fee4:	mov    ch,0x5d
  41fee6:	lahf   
  41fee7:	dec    ecx
  41fee8:	sub    ch,BYTE PTR [esi+ebp*1+0x2]
  41feec:	outs   dx,DWORD PTR cs:[esi]
  41feee:	pop    esp
  41feef:	xlat   BYTE PTR ds:[ebx]
  41fef0:	sub    esi,esp
  41fef2:	cmc    
  41fef3:	jge    0x41ff56
  41fef5:	or     DWORD PTR [edx+ebx*8+0x3d],eax
  41fef9:	mov    ds:0x742bdcac,al
  41fefe:	push   ebp
  41feff:	push   ss
  41ff00:	test   BYTE PTR [ebx+eax*4+0x21e280c8],0x3e
  41ff08:	or     bl,ah
  41ff0a:	(bad)  
  41ff0b:	xor    bh,BYTE PTR [eax-0x7b]
  41ff0e:	aad    0xa7
  41ff10:	xchg   ecx,eax
  41ff11:	push   ebp
  41ff12:	xchg   ebp,eax
  41ff13:	push   es
  41ff14:	sub    esi,0xffffff92
  41ff17:	mov    ah,0x8e
  41ff19:	xchg   BYTE PTR [ebx],dh
  41ff1b:	xlat   BYTE PTR ds:[ebx]
  41ff1c:	and    eax,0xa6b7b0c0
  41ff21:	xchg   esp,eax
  41ff22:	mov    dl,0x34
  41ff24:	cmc    
  41ff25:	mov    ds:0x59773c84,al
  41ff2a:	lds    edx,FWORD PTR [esi]
  41ff2c:	jp     0x41ff57
  41ff2e:	jmp    0x41ff30
  41ff30:	sbb    eax,0xa3aad62a
  41ff35:	mov    esi,0x5e9b65a5
  41ff3a:	jae    0x41fecf
  41ff3c:	in     al,0x31
  41ff3e:	pusha  
  41ff3f:	xor    BYTE PTR [eax],dl
  41ff41:	push   ss
  41ff42:	inc    esp
  41ff43:	shr    BYTE PTR [edx],1
  41ff45:	inc    ebp
  41ff46:	fwait
  41ff47:	aad    0xfd
  41ff49:	std    
  41ff4a:	gs in  al,0x9b
  41ff4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff4e:	cwde   
  41ff4f:	(bad)  
  41ff51:	pop    ecx
  41ff52:	test   bx,bp
  41ff55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff56:	lahf   
  41ff57:	pop    esi
  41ff58:	call   0xcc01bea2
  41ff5d:	imul   edx,DWORD PTR [ecx+0x3c],0x27
  41ff61:	add    eax,0x8c8b8e8a
  41ff66:	jecxz  0x41ffe3
  41ff68:	jle    0x41ff7a
  41ff6a:	xchg   edx,eax
  41ff6b:	jbe    0x41ffa1
  41ff6d:	mov    cs,WORD PTR [ebp+0x7545c90d]
  41ff73:	sub    ecx,ebx
  41ff75:	mov    ds:0x26d24276,eax
  41ff7a:	(bad)  
  41ff7b:	mov    ah,0x4f
  41ff7d:	cdq    
  41ff7e:	pop    eax
  41ff7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff80:	ss or  al,0x9e
  41ff83:	xor    BYTE PTR [edi],0xc4
  41ff86:	pop    ds
  41ff87:	adc    al,0x74
  41ff89:	test   BYTE PTR [edi-0x44],bh
  41ff8c:	add    ch,bh
  41ff8e:	cmp    ecx,esi
  41ff90:	mov    DWORD PTR [esi+edx*2],0x3fe6e247
  41ff97:	call   0xe693:0xd744c2ce
  41ff9e:	dec    ecx
  41ffa0:	fnstenv [esi-0x1b970437]
  41ffa6:	inc    edi
  41ffa7:	mov    esp,0x9894f343
  41ffac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffad:	in     eax,dx
  41ffae:	test   DWORD PTR [ecx+eax*2],esp
  41ffb1:	ret    0xcf75
  41ffb4:	out    dx,eax
  41ffb5:	fcmove st,st(6)
  41ffb7:	push   ss
  41ffb8:	pop    esp
  41ffb9:	pop    edi
  41ffba:	inc    esi
  41ffbb:	(bad)  
  41ffbc:	adc    BYTE PTR [ebx+0x7],dl
  41ffbf:	or     edx,DWORD PTR [ecx+ebx*1+0x65]
  41ffc3:	int3   
  41ffc4:	xchg   esp,eax
  41ffc5:	ja     0x420043
  41ffc7:	sbb    BYTE PTR [ebp-0x69],0x55
  41ffcb:	mov    ebx,0x9114313
  41ffd0:	inc    eax
  41ffd1:	or     DWORD PTR [edi],0x92a3e4f4
  41ffd7:	add    DWORD PTR [edi],edx
  41ffd9:	cmp    edi,ebx
  41ffdb:	push   edx
  41ffdc:	stos   DWORD PTR es:[edi],eax
  41ffdd:	mov    bl,0xaf
  41ffdf:	and    eax,0x628f490
  41ffe4:	mov    bl,0x81
  41ffe6:	sub    BYTE PTR [ebx],ah
  41ffe8:	pop    edi
  41ffe9:	and    BYTE PTR [ecx+0x6e],ch
  41ffec:	adc    al,0x7d
  41ffee:	call   0x4a8e:0xb84d6785
  41fff5:	in     eax,dx
  41fff6:	outs   dx,BYTE PTR ds:[esi]
  41fff7:	add    al,0x3c
  41fff9:	out    dx,al
  41fffa:	cmp    esp,ecx
  41fffc:	xchg   esi,eax
  41fffd:	out    dx,al
  41fffe:	add    DWORD PTR [eax-0x16],edi
  420001:	mov    ds:0x2bace2de,al
  420006:	jns    0x41fffc
  420008:	dec    esi
  420009:	xor    dh,BYTE PTR ds:0xa9679f4a
  42000f:	ret    0x1e30
  420012:	and    eax,0x146a70d8
  420017:	std    
  420018:	ins    DWORD PTR es:[edi],dx
  420019:	dec    edx
  42001a:	inc    esp
  42001b:	xor    esi,DWORD PTR [edi+0x390d47ab]
  420021:	inc    ebp
  420022:	add    al,BYTE PTR [ebx-0x64]
  420025:	and    DWORD PTR [ebp+0x22],ebx
  420028:	jno    0x420054
  42002a:	push   eax
  42002b:	hlt    
  42002c:	not    BYTE PTR [edx]
  42002e:	add    eax,0xad947fde
  420033:	jns    0x420001
  420035:	jo     0x420078
  420037:	sub    DWORD PTR [edi],ebx
  420039:	add    al,0xf
  42003b:	add    BYTE PTR [eax],bl
  42003d:	out    dx,al
  42003e:	and    eax,0x6f6b6eac
  420043:	pop    edi
  420044:	in     eax,0x54
  420046:	pop    ebp
  420047:	jl     0x4200ae
  420049:	stc    
  42004a:	fsub   DWORD PTR [ebx-0x4c6b0f4b]
  420050:	adc    ecx,DWORD PTR fs:[ecx]
  420053:	inc    ecx
  420054:	adc    al,0x27
  420056:	pop    ebx
  420057:	retf   
  420058:	ss ins BYTE PTR es:[edi],dx
  42005a:	aam    0xc7
  42005c:	iret   
  42005d:	jns    0x420082
  42005f:	push   esi
  420060:	dec    esp
  420061:	mov    ecx,ebp
  420063:	std    
  420064:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420065:	inc    edi
  420066:	xchg   edi,eax
  420067:	call   0xc8165869
  42006c:	cli    
  42006d:	add    al,0x84
  42006f:	std    
  420070:	push   edi
  420071:	xchg   esp,eax
  420072:	and    al,0xc6
  420074:	cmp    esp,DWORD PTR [edi]
  420076:	les    ecx,FWORD PTR [ecx]
  420078:	lds    ebx,FWORD PTR [eax-0x16a86773]
  42007e:	jecxz  0x4200c7
  420080:	dec    ebp
  420081:	inc    esi
  420082:	jbe    0x4200d0
  420084:	add    al,0x6d
  420086:	stos   DWORD PTR es:[edi],eax
  420087:	jmp    0x42008f
  420089:	mov    ebp,DWORD PTR [edi+0x7c]
  42008c:	and    ebp,DWORD PTR [esi]
  42008e:	mov    eax,0xe4005d9
  420093:	ret    
  420094:	mov    edi,0x82b9e4d2
  420099:	add    BYTE PTR [edi+eiz*8-0x3c],ch
  42009d:	rcl    BYTE PTR [edx-0x1e8e5b6f],0x63
  4200a4:	fldenv [edi+0x77a7aab5]
  4200aa:	push   edx
  4200ab:	test   eax,0xaf2621fc
  4200b0:	pop    eax
  4200b1:	jo     0x4200de
  4200b3:	pop    ss
  4200b4:	(bad)  
  4200b5:	dec    edx
  4200b6:	jecxz  0x4200ae
  4200b8:	fwait
  4200b9:	mov    al,BYTE PTR [ebx-0x61]
  4200bc:	sti    
  4200bd:	cmp    edx,DWORD PTR [ebx+0x31]
  4200c0:	lods   eax,DWORD PTR ds:[esi]
  4200c1:	mov    DWORD PTR [ecx-0x3b],ecx
  4200c4:	and    DWORD PTR [esi],esi
  4200c6:	rol    BYTE PTR [ebp+0x7b2c1c1f],cl
  4200cc:	sub    DWORD PTR [ebx-0x2e],esi
  4200cf:	push   es
  4200d0:	ja     0x4200c6
  4200d2:	es pop es
  4200d4:	mov    bl,0x76
  4200d6:	aam    0x62
  4200d8:	test   DWORD PTR [ebp+0x6e],0xb86d141a
  4200df:	xchg   ebx,eax
  4200e0:	(bad)  
  4200e1:	mov    bh,0xb5
  4200e3:	ins    DWORD PTR es:[edi],dx
  4200e4:	jbe    0x420134
  4200e6:	or     eax,0x14a7b6f7
  4200eb:	mov    cl,0x0
  4200ed:	sbb    bh,bl
  4200ef:	in     eax,0xe
  4200f1:	mov    BYTE PTR [esi],ah
  4200f3:	inc    esp
  4200f4:	pusha  
  4200f5:	adc    DWORD PTR [esi],ebx
  4200f7:	sub    BYTE PTR gs:[ecx-0x70],bl
  4200fb:	xchg   ebx,esi
  4200fd:	inc    eax
  4200fe:	inc    eax
  4200ff:	mov    al,ds:0x80591941
  420104:	mov    dh,0x3c
  420106:	ins    BYTE PTR es:[edi],dx
  420107:	or     eax,0x35fb55ab
  42010c:	div    edi
  42010e:	loope  0x420137
  420110:	jmp    0x4200bf
  420112:	(bad)  
  420114:	les    ebx,FWORD PTR [edi-0xe9f9807]
  42011a:	cmp    BYTE PTR [ebx+0xbf0efc8],bl
  420120:	daa    
  420121:	push   ebp
  420122:	xchg   ebx,eax
  420123:	aam    0xb5
  420125:	icebp  
  420126:	fnstenv [ebx+edx*4+0x22626bd7]
  42012d:	fisub  DWORD PTR [edi+0x34b582b3]
  420133:	sub    eax,0x393e793e
  420138:	addr16 (bad) 
  42013a:	push   0x72514698
  42013f:	xchg   DWORD PTR [esi+edx*2],edi
  420142:	scas   al,BYTE PTR es:[edi]
  420143:	inc    edx
  420144:	or     edx,ebx
  420146:	or     DWORD PTR ds:0xc71bd9c1,0x47
  42014d:	sbb    dh,BYTE PTR [ebx+esi*4]
  420150:	sub    esp,DWORD PTR [ecx+edi*4-0x547f7f87]
  420157:	sub    BYTE PTR [ebx+0xe],cl
  42015a:	inc    ebp
  42015b:	icebp  
  42015c:	xchg   edi,eax
  42015d:	cwde   
  42015e:	iret   
  42015f:	and    cl,BYTE PTR [ebp-0x38]
  420162:	adc    al,0xfb
  420164:	cmp    al,0x9b
  420166:	retf   
  420167:	pop    esp
  420168:	jge    0x4201ad
  42016a:	mov    eax,ds:0x87ae50fe
  42016f:	adc    bh,BYTE PTR [esi-0x2edfad3d]
  420175:	cli    
  420176:	test   al,0xcf
  420178:	sbb    ebx,DWORD PTR [esi]
  42017a:	cmc    
  42017b:	mov    bl,0x7d
  42017d:	pop    ds
  42017e:	pop    edi
  42017f:	stc    
  420180:	int3   
  420181:	sbb    DWORD PTR [edi],esp
  420183:	pop    ss
  420184:	out    dx,al
  420185:	mov    bh,0xe9
  420187:	pop    ds
  420188:	pop    ebp
  420189:	xchg   ecx,eax
  42018a:	xor    ebx,esi
  42018c:	fs into 
  42018e:	jb     0x4201a3
  420190:	xor    ah,dh
  420192:	repz repz mov bl,0x8c
  420196:	cmp    ch,bh
  420198:	sbb    ch,BYTE PTR [edx+ebp*1]
  42019b:	sbb    eax,0x540fd32
  4201a0:	outs   dx,DWORD PTR ds:[esi]
  4201a1:	jo     0x4201b7
  4201a3:	sub    ah,BYTE PTR [edx+0x41]
  4201a6:	and    al,0x37
  4201a8:	imul   eax,DWORD PTR [esi-0x4a],0xa
  4201ac:	jbe    0x4201fd
  4201ae:	cmp    eax,0x7b2dce65
  4201b3:	outs   dx,BYTE PTR ds:[esi]
  4201b4:	jmp    0xc486:0x995b0c05
  4201bb:	stos   DWORD PTR es:[edi],eax
  4201bc:	sbb    al,0x64
  4201be:	jno    0x42023f
  4201c0:	pusha  
  4201c1:	and    esi,esi
  4201c3:	and    eax,0x91e49014
  4201c8:	and    edi,DWORD PTR [ecx]
  4201ca:	data16 sbb al,0x38
  4201cd:	or     ch,dh
  4201cf:	mov    bh,0xd
  4201d1:	push   DWORD PTR [esi+0x5c5aed60]
  4201d7:	test   eax,0x59096717
  4201dc:	adc    al,BYTE PTR [eax-0x74]
  4201df:	ret    
  4201e0:	pandn  mm4,mm7
  4201e3:	shl    BYTE PTR [ebx-0x6d],0x3e
  4201e7:	cmp    ecx,DWORD PTR [edi-0x7c9609]
  4201ed:	sbb    BYTE PTR [edi+0x2db53109],bl
  4201f3:	les    edi,FWORD PTR [esi-0x76e7f3d2]
  4201f9:	push   ecx
  4201fa:	mov    esp,0x855a570d
  4201ff:	cdq    
  420200:	cwde   
  420201:	test   DWORD PTR [ebx],0xf8ed8e3f
  420207:	mov    eax,0x9d22768e
  42020c:	xor    eax,0x4d468645
  420211:	dec    eax
  420212:	jge    0x420287
  420214:	(bad)  
  420215:	xchg   edi,eax
  420216:	sbb    eax,0xad605bde
  42021b:	cld    
  42021c:	stc    
  42021d:	cmc    
  42021e:	sar    DWORD PTR [ebp+0x7a4feb2f],cl
  420224:	stc    
  420225:	cmp    al,0x81
  420227:	jl     0x42023b
  420229:	or     dl,BYTE PTR [ecx+edi*1]
  42022c:	mov    ebp,0x3baec63d
  420231:	(bad)  
  420233:	ja     0x4201c4
  420235:	push   es
  420236:	out    dx,eax
  420237:	add    BYTE PTR [eax+edi*4+0x2cc331a5],0x9
  42023f:	jae    0x420206
  420241:	mov    dl,0x45
  420243:	fwait
  420244:	adc    edi,DWORD PTR [esi+0x2d]
  420247:	or     al,0xf4
  420249:	push   0xdc918edb
  42024e:	dec    edi
  42024f:	pop    esp
  420250:	test   BYTE PTR ds:0xb72a736d,cl
  420256:	pop    eax
  420257:	fs push cs
  420259:	push   ebp
  42025a:	ja     0x420284
  42025c:	and    esi,ebx
  42025e:	or     edx,DWORD PTR [edi+0x3bdb189d]
  420264:	jbe    0x420200
  420266:	cmp    BYTE PTR [ebx-0x2fab45d1],0x66
  42026d:	fadd   QWORD PTR [ebx]
  42026f:	ss mov dl,bl
  420272:	lea    ecx,[ecx+0x7b]
  420275:	test   bh,ch
  420277:	push   0xb90bccb6
  42027c:	(bad)  
  42027d:	ffree  st(5)
  42027f:	cmp    BYTE PTR [ebx+eiz*4+0x70f42a03],bl
  420286:	popa   
  420287:	cwde   
  420288:	mov    bl,0x14
  42028a:	neg    BYTE PTR ds:0x8dfaa8ed
  420290:	cld    
  420291:	sar    dh,0x9e
  420294:	(bad)  
  420295:	imul   esi,DWORD PTR [ecx],0x25
  420298:	adc    dl,bl
  42029a:	add    edi,ebp
  42029c:	xor    DWORD PTR [ebp-0x31],ebp
  42029f:	fidivr WORD PTR [eax-0x70]
  4202a2:	mov    bh,0xfa
  4202a4:	fld    DWORD PTR [edx]
  4202a6:	xchg   BYTE PTR [ecx+0x73a82fcb],bh
  4202ac:	dec    di
  4202ae:	(bad)  
  4202af:	stos   BYTE PTR es:[edi],al
  4202b0:	lock jne 0x4202ca
  4202b3:	in     al,dx
  4202b4:	xchg   BYTE PTR [eax-0x5aebc748],cl
  4202ba:	imul   eax,ebp,0xffffffbb
  4202bd:	ins    DWORD PTR es:[edi],dx
  4202be:	cli    
  4202bf:	das    
  4202c0:	icebp  
  4202c1:	xchg   edi,eax
  4202c2:	sbb    eax,0xa9ac5ce
  4202c7:	ins    DWORD PTR es:[edi],dx
  4202c8:	lea    eax,[esi]
  4202ca:	imul   DWORD PTR [esi-0x80]
  4202cd:	cmp    DWORD PTR [ebx-0x7],esi
  4202d0:	adc    edx,ebp
  4202d2:	pop    ss
  4202d3:	sub    dl,BYTE PTR [edx]
  4202d5:	jbe    0x420345
  4202d7:	call   0xf3c8:0x5fce4286
  4202de:	jp     0x420328
  4202e0:	pop    esi
  4202e1:	clc    
  4202e2:	jnp    0x42029a
  4202e4:	pop    es
  4202e5:	fdivr  QWORD PTR [ebp+0x34]
  4202e8:	leave  
  4202e9:	es and al,0x9
  4202ec:	inc    ecx
  4202ed:	loope  0x420317
  4202ef:	cmp    edx,esi
  4202f1:	stos   BYTE PTR es:[edi],al
  4202f2:	and    edx,DWORD PTR [esi]
  4202f4:	sar    dl,cl
  4202f6:	or     dl,BYTE PTR [eax+0x7e]
  4202f9:	js     0x420354
  4202fb:	cmp    eax,0x881f79b8
  420300:	or     DWORD PTR ds:0x5f4af6f7,ecx
  420306:	out    dx,eax
  420307:	push   esp
  420308:	xchg   edx,eax
  420309:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42030a:	data16 or bl,dl
  42030d:	mov    ds:0xd6a6565b,al
  420312:	adc    DWORD PTR [ebx+0x72],esp
  420315:	inc    esp
  420316:	jns    0x42033d
  420318:	(bad)  
  420319:	mov    ebx,0x85a3fd59
  42031e:	and    dl,dh
  420320:	loop   0x420364
  420322:	sti    
  420323:	and    ah,bl
  420325:	loope  0x420302
  420327:	daa    
  420328:	jbe    0x4202f3
  42032a:	cmp    DWORD PTR [eax],ecx
  42032c:	fcomip st,st(3)
  42032e:	sahf   
  42032f:	outs   dx,DWORD PTR ds:[esi]
  420330:	fs push ds
  420332:	mov    bl,0x8e
  420334:	xchg   ebx,eax
  420335:	les    eax,FWORD PTR ds:0xe7a20d35
  42033b:	aam    0xfd
  42033d:	stos   DWORD PTR es:[edi],eax
  42033e:	fwait
  42033f:	loop   0x420392
  420341:	out    dx,eax
  420342:	or     eax,0x4c66a466
  420347:	enter  0x247d,0x74
  42034b:	pop    ebx
  42034c:	les    esi,FWORD PTR [esi-0x7dfe7edb]
  420352:	mov    edx,0x7ace50ef
  420357:	add    DWORD PTR [eax],0x3a
  42035a:	idiv   ebx
  42035c:	push   ss
  42035d:	div    BYTE PTR [ebx]
  42035f:	mov    ecx,0x6a526889
  420364:	sub    ah,dh
  420366:	and    eax,DWORD PTR [edx]
  420368:	push   ebx
  420369:	mov    ebx,0xfcd437de
  42036e:	adc    eax,0xeec84f0a
  420373:	cmp    DWORD PTR [edx+0x75],0xa0e5ae9f
  42037a:	sub    DWORD PTR [eax],edi
  42037c:	(bad)  
  42037d:	dec    ecx
  42037e:	sbb    BYTE PTR [edi],bh
  420380:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420381:	popf   
  420382:	push   ss
  420383:	stos   BYTE PTR es:[edi],al
  420384:	scas   eax,DWORD PTR es:[edi]
  420385:	int    0x3f
  420387:	std    
  420388:	ins    BYTE PTR es:[edi],dx
  420389:	push   ebp
  42038a:	mov    ch,0x5e
  42038c:	cmp    BYTE PTR [esi-0x5c],dl
  42038f:	les    edi,FWORD PTR [ebp+0x3d]
  420392:	or     DWORD PTR [eax],ebx
  420394:	gs aas 
  420396:	xchg   eax,esp
  420398:	and    bl,0x4b
  42039b:	jnp    0x42036a
  42039d:	loope  0x4203da
  42039f:	mov    ch,0xc6
  4203a1:	into   
  4203a2:	in     al,dx
  4203a3:	adc    al,0x34
  4203a5:	mov    bh,0xc
  4203a7:	lahf   
  4203a8:	xchg   esi,eax
  4203a9:	or     bh,BYTE PTR [ebx-0x6b89b32b]
  4203af:	dec    edi
  4203b0:	push   eax
  4203b1:	imul   ebx,DWORD PTR [edx-0x17],0xffffffe2
  4203b5:	inc    ebp
  4203b6:	jo     0x4203ea
  4203b8:	add    ebx,esi
  4203ba:	jle    0x4203dc
  4203bc:	mov    eax,0xf60e0cce
  4203c1:	lahf   
  4203c2:	idiv   BYTE PTR [ebp-0x595a1d2e]
  4203c8:	inc    eax
  4203c9:	xchg   BYTE PTR [ecx-0x73505ff2],bh
  4203cf:	lods   eax,DWORD PTR ds:[esi]
  4203d0:	nop
  4203d1:	mov    ch,0x49
  4203d3:	pop    esp
  4203d4:	pop    edi
  4203d5:	jp     0x4203c5
  4203d7:	dec    ebp
  4203d8:	adc    DWORD PTR [eax+ecx*2-0x26],esi
  4203dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203dd:	test   al,0x60
  4203df:	add    esi,DWORD PTR [esi+0x340841e]
  4203e5:	dec    edx
  4203e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203e7:	data16 stc 
  4203e9:	inc    eax
  4203ea:	cmp    BYTE PTR [ecx],bl
  4203ec:	and    al,0x48
  4203ee:	retf   0xe65a
  4203f1:	cld    
  4203f2:	mov    ds:0x2d7a898b,eax
  4203f7:	retf   0x4aa
  4203fa:	xchg   edx,eax
  4203fb:	xchg   ebx,eax
  4203fc:	mov    ds:0xebe05e20,eax
  420401:	push   edx
  420403:	das    
  420404:	add    cl,BYTE PTR ds:0xf5b06287
  42040a:	sub    al,al
  42040c:	and    cl,BYTE PTR [ebx-0x14]
  42040f:	add    BYTE PTR [ecx],al
  420411:	enter  0x3ced,0x7f
  420415:	inc    ebx
  420416:	mov    eax,ds:0x79b663ac
  42041b:	in     eax,dx
  42041c:	in     al,0x4a
  42041e:	or     DWORD PTR [ebp-0x2c499dcb],esi
  420424:	jo     0x420472
  420426:	js     0x420406
  420428:	pop    esp
  420429:	loopne 0x420445
  42042b:	or     eax,DWORD PTR [esp+ebp*4+0x15]
  42042f:	mov    al,ds:0x146244a6
  420434:	fwait
  420435:	mov    bl,0x12
  420437:	pop    ds
  420438:	lods   eax,DWORD PTR ds:[esi]
  420439:	sub    eax,0x2fe76037
  42043e:	nop
  42043f:	test   eax,0x5b966269
  420444:	test   BYTE PTR [esi-0xc],bl
  420447:	scas   eax,DWORD PTR es:[edi]
  420448:	loope  0x420467
  42044a:	add    dh,BYTE PTR [ebp-0x59497a7]
  420450:	(bad)  
  420451:	(bad)  
  420452:	repnz xor esp,DWORD PTR [edx]
  420455:	sbb    DWORD PTR [esi+0x6d],esi
  420458:	add    ecx,DWORD PTR [ebx+0x64]
  42045b:	add    ecx,DWORD PTR [ecx+0xe89946b]
  420461:	or     ch,BYTE PTR [esi]
  420463:	push   eax
  420464:	inc    esp
  420465:	lock sub eax,0xee615fd0
  42046b:	ins    DWORD PTR es:[edi],dx
  42046c:	mov    ebp,0x16682d15
  420471:	mov    eax,ds:0x91a0dbce
  420476:	mov    ds:0xa5e8c621,eax
  42047b:	push   0x51
  42047d:	popf   
  42047e:	aaa    
  42047f:	lods   al,BYTE PTR ds:[esi]
  420480:	sbb    ah,al
  420482:	das    
  420483:	jno    0x42047e
  420485:	cmp    al,BYTE PTR [eax]
  420487:	out    dx,al
  420488:	bound  ebp,QWORD PTR [edx+0x21]
  42048b:	inc    esp
  42048c:	cmc    
  42048d:	fcom   DWORD PTR [ebx]
  42048f:	(bad)  
  420490:	lock pop ds
  420492:	jmp    0x42045b
  420494:	imul   edx,DWORD PTR [ebx+edi*1-0x60],0xfffffff9
  420499:	popa   
  42049a:	pop    ebp
  42049b:	out    0xe7,al
  42049d:	in     eax,dx
  42049e:	push   eax
  42049f:	sub    al,0x34
  4204a1:	in     al,dx
  4204a2:	xor    DWORD PTR [ecx+ebx*2],0x8ff49d34
  4204a9:	inc    edi
  4204aa:	adc    al,BYTE PTR [ebx]
  4204ac:	ds xor edx,eax
  4204af:	add    BYTE PTR [edi],al
  4204b1:	and    dl,dh
  4204b3:	retf   
  4204b4:	ja     0x4204c2
  4204b6:	dec    ebp
  4204b7:	fnop   
  4204ba:	(bad)  
  4204bb:	(bad)  
  4204bc:	adc    edx,edi
  4204be:	jno    0x4204b7
  4204c0:	leave  
  4204c1:	aad    0x41
  4204c3:	imul   edx,DWORD PTR [ebp+0x62d93a8c],0x8
  4204ca:	aas    
  4204cb:	lahf   
  4204cc:	pop    edx
  4204cd:	neg    BYTE PTR [edi-0x43c30fde]
  4204d3:	neg    BYTE PTR [edx+0x26a17aba]
  4204d9:	jmp    0x478d8ca8
  4204de:	std    
  4204df:	xchg   ebx,eax
  4204e0:	jnp    0x4204f0
  4204e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204e4:	xchg   edi,eax
  4204e5:	cld    
  4204e6:	jg     0x420514
  4204e8:	imul   BYTE PTR [eax]
  4204ea:	dec    eax
  4204eb:	sub    al,0x32
  4204ed:	fistp  QWORD PTR [eax+ebp*8-0x404fead]
  4204f4:	mov    esi,0xf20e83ed
  4204f9:	xor    DWORD PTR [ecx-0x56],0xffffff91
  4204fd:	not    DWORD PTR [edi+0x28]
  420500:	push   ebp
  420501:	push   esi
  420502:	pusha  
  420503:	ret    0x92eb
  420506:	jge    0x420532
  420508:	test   BYTE PTR [ebx+0x4260eabd],dl
  42050e:	pop    ecx
  42050f:	xchg   DWORD PTR [edx],ecx
  420511:	add    BYTE PTR [esi+0x482eca2b],al
  420517:	mov    DWORD PTR [edi-0x513a2784],ecx
  42051d:	add    DWORD PTR [edi-0x35c763bb],esi
  420523:	push   ebx
  420524:	mov    esp,0x3dfbf53e
  420529:	imul   ecx,DWORD PTR [ebx-0x1c],0x66
  42052d:	mov    esp,DWORD PTR [edi]
  42052f:	pop    es
  420530:	xor    al,0x6c
  420532:	mov    ?,WORD PTR [esi+eiz*1+0x2e]
  420536:	xchg   ecx,eax
  420537:	in     eax,dx
  420538:	cwde   
  420539:	stos   DWORD PTR es:[edi],eax
  42053a:	jmp    0xc08c:0x51e0e50
  420541:	xchg   esp,eax
  420542:	fdivr  DWORD PTR [ebp-0x7f4a82aa]
  420548:	scas   al,BYTE PTR es:[edi]
  420549:	sbb    al,0x12
  42054b:	and    ebx,DWORD PTR [esi]
  42054d:	xor    al,0x7
  42054f:	rol    BYTE PTR [ecx-0x61],cl
  420552:	xor    DWORD PTR [ebp+esi*4+0x29],ecx
  420556:	xor    DWORD PTR [ecx+0x1c],eax
  420559:	xchg   BYTE PTR [eax-0x53352a97],al
  42055f:	retf   0xc50d
  420562:	out    dx,al
  420563:	pop    edx
  420564:	inc    edx
  420565:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420566:	push   es
  420567:	mov    eax,0xf4db3530
  42056c:	stc    
  42056d:	setl   BYTE PTR [edi-0x23fdee73]
  420574:	jae    0x420539
  420576:	mov    dh,0x23
  420578:	push   cs
  420579:	iret   
  42057a:	retf   0x7809
  42057d:	shl    DWORD PTR [edi],cl
  42057f:	lods   al,BYTE PTR ds:[esi]
  420580:	xor    al,bh
  420582:	cmp    ah,BYTE PTR fs:[edi-0x9]
  420586:	ficom  DWORD PTR [ebx+0x4d]
  420589:	fadd   DWORD PTR [esi]
  42058b:	add    eax,0x12a5bfca
  420590:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420591:	fistp  WORD PTR [edi-0x46c128f3]
  420597:	sbb    dh,BYTE PTR [ebx+0x38700c74]
  42059d:	add    DWORD PTR [edi+edi*2+0x58af7797],eax
  4205a4:	lock cmps WORD PTR ds:[esi],WORD PTR es:[edi]
  4205a7:	mov    esp,0x98cc883
  4205ac:	mov    dh,0x78
  4205ae:	or     BYTE PTR [ecx+0x47],bh
  4205b1:	jg     0x420538
  4205b3:	loope  0x420558
  4205b5:	aas    
  4205b6:	ja     0x4205a7
  4205b8:	movups xmm7,XMMWORD PTR [eax+0x32]
  4205bc:	jbe    0x4205dc
  4205be:	sub    BYTE PTR [esi-0x55],bh
  4205c1:	call   0x430853c1
  4205c6:	(bad)  
  4205c7:	jmp    0x420602
  4205c9:	in     eax,0xb4
  4205cb:	loope  0x420567
  4205cd:	in     eax,dx
  4205ce:	cli    
  4205cf:	dec    edx
  4205d0:	ds xor eax,0x427b1c7c
  4205d6:	sbb    DWORD PTR [edi+0x53],esi
  4205d9:	or     eax,0x94f07a45
  4205de:	push   0x4cb80969
  4205e3:	or     esp,DWORD PTR [ecx]
  4205e5:	xor    BYTE PTR [eiz*4+0x3cb7abfe],ch
  4205ec:	iret   
  4205ed:	jmp    0x7a3fcb66
  4205f2:	jge    0x4205ff
  4205f4:	js     0x4205b1
  4205f6:	jmp    0x420595
  4205f8:	pop    ss
  4205f9:	xchg   edx,eax
  4205fa:	nop
  4205fb:	into   
  4205fc:	and    bl,dh
  4205fe:	lds    eax,FWORD PTR [edx]
  420600:	fisubr WORD PTR [ecx+eax*4-0x7b]
  420604:	cmp    DWORD PTR [eax],esp
  420606:	dec    ebx
  420607:	mov    ebp,0x65f20117
  42060d:	popf   
  42060e:	repz daa 
  420610:	in     eax,dx
  420611:	data16 cli 
  420613:	daa    
  420614:	inc    esp
  420615:	int    0x40
  420617:	shl    BYTE PTR [edi+0x17],0x29
  42061b:	ret    0x7a4f
  42061e:	lock push es
  420620:	mov    al,0x4e
  420622:	inc    ebx
  420623:	loopne 0x4205d4
  420625:	jmp    0x4205c9
  420627:	pusha  
  420628:	jbe    0x420667
  42062a:	jb     0x4205d2
  42062c:	push   esp
  42062d:	sbb    BYTE PTR [edi-0x47],0xb2
  420631:	repnz cmp ebx,DWORD PTR [ebx+0x4c155d13]
  420638:	push   edi
  420639:	jne    0x4205d1
  42063b:	mov    bl,0xb5
  42063d:	into   
  42063e:	and    eax,0x9cb4db53
  420643:	cwde   
  420644:	shl    DWORD PTR [esi-0x1e],cl
  420647:	adc    al,0x2c
  420649:	test   BYTE PTR [ecx+ebp*2+0x45a92c13],0x47
  420651:	int3   
  420652:	xchg   edx,eax
  420653:	push   ecx
  420654:	push   0x39
  420656:	inc    edx
  420657:	ror    BYTE PTR [edx-0x1a349e37],cl
  42065d:	cwde   
  42065e:	dec    esp
  42065f:	scas   eax,DWORD PTR es:[edi]
  420660:	stos   BYTE PTR es:[edi],al
  420661:	fiadd  WORD PTR [ebx-0x1d]
  420664:	leave  
  420665:	add    esi,esp
  420667:	add    esi,DWORD PTR [esi+ebx*2-0x78580c87]
  42066e:	add    edi,eax
  420670:	dec    edx
  420671:	and    eax,0x5a6403fe
  420676:	mov    bh,BYTE PTR [ebx-0x7555231a]
  42067c:	push   es
  42067d:	jg     0x42067f
  42067f:	jnp    0x4206cb
  420681:	dec    ebp
  420682:	push   eax
  420683:	inc    ecx
  420684:	mov    dh,0x1c
  420686:	push   0x71
  420688:	and    esi,esp
  42068a:	sbb    esi,ecx
  42068c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42068d:	push   cs
  42068e:	shl    ebp,cl
  420690:	ss ins DWORD PTR es:[edi],dx
  420692:	(bad)  
  420693:	icebp  
  420694:	and    DWORD PTR [ebp+0x29a2ea6e],0xf5537212
  42069e:	(bad)  
  42069f:	lock enter 0xcdce,0x2c
  4206a4:	cs xchg ebp,eax
  4206a6:	hlt    
  4206a7:	jne    0x4206b0
  4206a9:	dec    esi
  4206aa:	pop    ds
  4206ab:	jg     0x420728
  4206ad:	fdivp  st(0),st
  4206af:	scas   al,BYTE PTR es:[edi]
  4206b0:	js     0x420698
  4206b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206b3:	sbb    al,0x6d
  4206b5:	out    dx,al
  4206b6:	adc    al,0x57
  4206b8:	test   al,0x97
  4206ba:	outs   dx,DWORD PTR ds:[esi]
  4206bb:	adc    BYTE PTR [esi],bl
  4206bd:	stos   BYTE PTR es:[edi],al
  4206be:	shl    BYTE PTR [edx],1
  4206c0:	data16 (bad) 
  4206c2:	dec    edi
  4206c3:	inc    edx
  4206c4:	popa   
  4206c5:	mov    al,0xe0
  4206c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206c8:	fnsave [ecx+0x3934de86]
  4206ce:	retf   
  4206cf:	not    BYTE PTR [esp+eax*4]
  4206d2:	clc    
  4206d3:	mov    eax,gs
  4206d5:	mov    bh,0x3d
  4206d7:	sub    DWORD PTR [eax-0x1e],edi
  4206da:	(bad)
  4206dd:	mov    ebp,DWORD PTR [edi-0x5e]
  4206e0:	out    0xe2,eax
  4206e2:	(bad)  
  4206e3:	and    edx,DWORD PTR [ebp+edx*4-0x5953c07a]
  4206ea:	ja     0x420678
  4206ec:	clc    
  4206ed:	std    
  4206ee:	mov    ds:0xbe0d51f8,eax
  4206f3:	jmp    0x42075e
  4206f5:	jl     0x4206a5
  4206f7:	add    DWORD PTR [edx+0x60dcd3a5],edx
  4206fd:	shl    BYTE PTR [eax+0x15],1
  420700:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420701:	outs   dx,DWORD PTR ds:[esi]
  420702:	mov    eax,0xd74a5fe2
  420707:	test   BYTE PTR [eax-0x5],ch
  42070a:	push   esp
  42070b:	ss into 
  42070d:	popa   
  42070e:	je     0x420780
  420710:	bnd jnp 0x42071b
  420713:	sub    al,0x86
  420715:	int    0xd7
  420717:	test   al,0x67
  420719:	shl    BYTE PTR [eax-0x79ec4b1c],1
  42071f:	fs (bad) 
  420721:	xchg   esi,eax
  420722:	jmp    0x420787
  420724:	fld    DWORD PTR [ecx-0x5d5d60e4]
  42072a:	(bad)  
  42072b:	pop    ds
  42072c:	(bad)  
  42072d:	mov    esp,0x250c1292
  420732:	add    ch,BYTE PTR [ecx+ecx*8]
  420735:	sub    eax,0xbee976ed
  42073a:	jmp    0x49bd:0x4ee5bb80
  420741:	mov    ah,0x93
  420743:	clc    
  420744:	jnp    0x4207b3
  420746:	loopne 0x420762
  420748:	and    BYTE PTR cs:[ecx+0x77],bh
  42074c:	aam    0xff
  42074e:	inc    ebp
  42074f:	lahf   
  420750:	fadd   QWORD PTR [ecx]
  420752:	pop    ebx
  420753:	dec    ecx
  420754:	or     al,0x3d
  420756:	daa    
  420757:	retf   0x8c71
  42075a:	pop    ecx
  42075b:	scas   eax,DWORD PTR es:[edi]
  42075c:	in     al,dx
  42075d:	mov    al,ds:0xead61f8a
  420762:	inc    eax
  420763:	cmp    edx,DWORD PTR [esp+edx*4-0x29424a0e]
  42076a:	jae    0x4207ae
  42076c:	dec    edi
  42076d:	mov    cl,0x2c
  42076f:	test   al,al
  420771:	mov    bh,0x22
  420773:	dec    esp
  420774:	xor    eax,0x650b27f2
  420779:	out    0xf9,al
  42077b:	fwait
  42077c:	dec    esp
  42077d:	and    DWORD PTR [ebp+0x41],esi
  420780:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420781:	ins    DWORD PTR es:[edi],dx
  420782:	dec    ecx
  420783:	push   esi
  420784:	cmp    edx,DWORD PTR [ebx+0x47a35e5f]
  42078a:	loopne 0x420776
  42078c:	pop    ecx
  42078d:	dec    eax
  42078e:	pop    ss
  42078f:	adc    DWORD PTR [ebx+0x507a387d],0x7f397f05
  420799:	(bad)  
  42079a:	mov    al,0x6b
  42079c:	push   eax
  42079d:	sub    BYTE PTR [ebx+0x15209ea3],cl
  4207a3:	lock adc esp,edi
  4207a6:	callw  0xa21c
  4207aa:	xchg   DWORD PTR [ebp-0x7d6724ff],esi
  4207b0:	push   esi
  4207b1:	pop    ebx
  4207b2:	jo     0x4207c9
  4207b4:	sbb    DWORD PTR ds:0xea0153b1,ecx
  4207ba:	mul    BYTE PTR [ecx]
  4207bc:	loopne 0x420769
  4207be:	popa   
  4207bf:	push   esi
  4207c0:	imul   ebp,DWORD PTR [ebp-0x44c1da2c],0x62
  4207c7:	push   es
  4207c8:	add    eax,0x39ad7929
  4207cd:	mov    ds,WORD PTR [esi-0x26]
  4207d0:	daa    
  4207d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207d2:	adc    eax,edi
  4207d4:	in     al,0xc3
  4207d6:	pop    edi
  4207d7:	mov    eax,ds:0xbbf6a834
  4207dc:	add    ah,BYTE PTR cs:[esi]
  4207df:	test   al,0x3e
  4207e1:	leave  
  4207e2:	int    0x28
  4207e4:	jmp    0xc50d0eef
  4207e9:	adc    eax,0x47d354d8
  4207ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207ef:	mov    bh,0xa7
  4207f1:	stos   BYTE PTR es:[edi],al
  4207f2:	lds    ebp,FWORD PTR [edx]
  4207f4:	inc    ecx
  4207f5:	mov    cl,0xf4
  4207f7:	adc    dh,cl
  4207f9:	xor    bh,dh
  4207fb:	jno    0x4207ff
  4207fd:	mov    edx,0x6a40c286
  420802:	cwde   
  420803:	arpl   WORD PTR [esi+ebp*4],bp
  420806:	ja     0x4207eb
  420808:	or     bh,BYTE PTR [ebx+eax*4]
  42080b:	add    bl,BYTE PTR [esi+0x66aa7d7f]
  420811:	xlat   BYTE PTR ds:[ebx]
  420812:	mov    esp,0xda1c5294
  420817:	(bad)  
  420818:	pop    ebp
  420819:	inc    ebx
  42081a:	mov    bh,0x7a
  42081c:	test   esi,ebx
  42081e:	cmp    DWORD PTR [ebp+0x1f],edi
  420821:	dec    ecx
  420822:	dec    edx
  420823:	and    eax,0x24ace1df
  420828:	adc    al,ch
  42082a:	(bad)  
  42082b:	add    ecx,0x40
  42082e:	add    DWORD PTR [ebx+0x3f],0xffffffcf
  420832:	sub    DWORD PTR [esi+ecx*1-0x73377c18],esi
  420839:	mov    ecx,0x57c6a8cc
  42083e:	and    ecx,DWORD PTR fs:[edi+0x54]
  420842:	inc    ebp
  420843:	sub    ebx,DWORD PTR [ecx+eiz*2+0xbf18fde]
  42084a:	fdiv   QWORD PTR [ebp+0x8]
  42084d:	ins    DWORD PTR es:[edi],dx
  42084e:	inc    esp
  42084f:	test   eax,0xb28edb53
  420854:	add    DWORD PTR [ebp-0x5],0x1a
  420858:	data16 (bad) 
  42085b:	or     esp,edx
  42085d:	adc    dl,BYTE PTR [ebp+0xc]
  420860:	mov    esp,0xfb4c380d
  420865:	ds jge 0x420883
  420868:	ror    ch,0x38
  42086b:	push   cs
  42086c:	mov    eax,ds:0x7b0b9768
  420871:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420872:	addr16 jp 0x42081e
  420875:	adc    BYTE PTR [ecx+0x11],ah
  420878:	daa    
  420879:	xadd   BYTE PTR [ebp+0x4b95e5e0],bh
  420880:	or     eax,0xbb29b9d8
  420885:	inc    edi
  420886:	ret    0xfb91
  420889:	lds    edx,FWORD PTR [esi]
  42088b:	jmp    0x62ff:0xdd01d4ca
  420892:	aaa    
  420893:	nop
  420894:	int3   
  420895:	and    DWORD PTR [ebx+0x6c],0x213923b
  42089c:	jle    0x420907
  42089e:	nop
  42089f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208a0:	lock add eax,0xfd610aa1
  4208a6:	mov    dl,BYTE PTR [ebx]
  4208a8:	dec    ebx
  4208a9:	pop    es
  4208aa:	loopne 0x420925
  4208ac:	fsubrp st(7),st
  4208ae:	or     esp,DWORD PTR [esi]
  4208b0:	cs out dx,eax
  4208b2:	fcomp  QWORD PTR [ecx-0x2e857d21]
  4208b8:	rcr    BYTE PTR [ebx-0x54caa1e6],cl
  4208be:	retf   0x161e
  4208c1:	mov    ebp,0x1dc0fc91
  4208c6:	loop   0x4208d7
  4208c8:	lods   al,BYTE PTR ds:[esi]
  4208c9:	mov    WORD PTR [edx],fs
  4208cb:	dec    ebp
  4208cc:	nop
  4208cd:	mov    bh,0x5c
  4208cf:	or     esp,DWORD PTR [ecx]
  4208d1:	iret   
  4208d2:	sar    DWORD PTR [edx+0x12e959fa],cl
  4208d8:	out    dx,eax
  4208d9:	retf   
  4208da:	adc    al,0x95
  4208dc:	cld    
  4208dd:	xor    bh,cl
  4208df:	dec    esp
  4208e0:	int    0xdf
  4208e2:	mov    ecx,DWORD PTR [edx]
  4208e4:	in     eax,dx
  4208e5:	call   0xd629:0xeab4e096
  4208ec:	mov    WORD PTR [eax+0x73],cs
  4208ef:	pop    edi
  4208f0:	aad    0xbd
  4208f2:	and    DWORD PTR [ebx],0xffffffe5
  4208f5:	(bad)  
  4208f6:	out    dx,eax
  4208f7:	ds xchg esp,eax
  4208f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208fa:	popa   
  4208fb:	lahf   
  4208fc:	add    al,bh
  4208fe:	and    dl,BYTE PTR [ebp+0x59]
  420901:	rol    esp,1
  420903:	mov    dl,0x45
  420905:	inc    ebp
  420906:	ret    
  420907:	jecxz  0x4208ec
  420909:	jae    0x4208d1
  42090b:	inc    edx
  42090c:	jmp    0x4208e6
  42090e:	mov    edi,0xbddf2d7e
  420913:	cmc    
  420914:	das    
  420915:	or     esp,edi
  420917:	inc    edi
  420918:	addr16 loop 0x4208d8
  42091b:	mov    al,0xd0
  42091d:	xor    BYTE PTR [edx],bh
  42091f:	loopne 0x4208fa
  420921:	pop    esp
  420922:	cmp    eax,0x8fde83b6
  420927:	jle    0x420987
  420929:	sub    eax,0x91b62c71
  42092e:	lahf   
  42092f:	mov    ah,0x17
  420931:	js     0x42092a
  420933:	gs dec esp
  420935:	push   edi
  420936:	add    eax,0x15e24d90
  42093b:	jnp    0x42091e
  42093d:	sbb    eax,0xfeeb533f
  420942:	jo     0x42094f
  420944:	fstp   QWORD PTR [ebx+esi*1]
  420947:	imul   edi,DWORD PTR [eax-0x5a],0x6e
  42094b:	jl     0x420989
  42094d:	sub    al,0xb7
  42094f:	push   ss
  420950:	cli    
  420951:	test   BYTE PTR [ebx],dl
  420953:	xor    ch,BYTE PTR [ebx+0x1aa8fc26]
  420959:	mov    bl,BYTE PTR [ebx]
  42095b:	sub    eax,0x2bac5ff0
  420960:	pop    ecx
  420961:	adc    eax,0x267f0cde
  420966:	inc    ebx
  420967:	inc    esi
  420968:	leave  
  420969:	xchg   esi,eax
  42096a:	imul   edi,DWORD PTR [edx+0x761b4976],0x1a7af857
  420974:	loopne 0x4209ce
  420976:	sar    BYTE PTR [eax],1
  420978:	xor    edi,edi
  42097a:	cs jle 0x4209c6
  42097d:	jmp    0x420998
  42097f:	xor    al,0x38
  420981:	push   esi
  420982:	stos   BYTE PTR es:[edi],al
  420983:	push   ss
  420984:	dec    ebp
  420985:	das    
  420986:	mov    esp,0xaee14c3e
  42098b:	lods   eax,DWORD PTR ds:[esi]
  42098c:	adc    edx,DWORD PTR [esi+0x75eb85a4]
  420992:	mov    ebp,0x4de5ce67
  420997:	sub    edi,DWORD PTR [eax+0x5]
  42099a:	in     al,0xd0
  42099c:	and    DWORD PTR [ecx-0x23],eax
  42099f:	add    ecx,DWORD PTR [ebx+0x7f]
  4209a2:	pop    ecx
  4209a3:	dec    edi
  4209a4:	outs   dx,DWORD PTR ds:[esi]
  4209a5:	jo     0x420960
  4209a7:	and    ah,BYTE PTR [esi]
  4209a9:	pop    ebp
  4209aa:	or     eax,0x2ddf0152
  4209af:	ret    
  4209b0:	xchg   edx,eax
  4209b1:	and    al,0x34
  4209b3:	and    ecx,DWORD PTR [esi-0x28]
  4209b6:	ins    DWORD PTR es:[edi],dx
  4209b7:	lea    edi,[ecx-0x5b]
  4209ba:	std    
  4209bb:	int3   
  4209bc:	jp     0x4209d3
  4209be:	mov    ah,BYTE PTR ss:[esi+0x18321e66]
  4209c5:	jnp    0x420953
  4209c7:	mov    bl,0x4b
  4209c9:	mov    DWORD PTR [edi+0x7274e2fe],esi
  4209cf:	jg     0x420980
  4209d1:	inc    ecx
  4209d2:	fild   QWORD PTR [ebx-0x68]
  4209d5:	mov    esi,0x311e4c80
  4209da:	adc    ah,BYTE PTR [ecx+0x6b]
  4209dd:	ja     0x4209ef
  4209df:	test   al,0xec
  4209e1:	int3   
  4209e2:	or     ebx,DWORD PTR [ebp-0x4f9c96b]
  4209e8:	sub    esp,DWORD PTR [ebp+0x2160760e]
  4209ee:	ret    
  4209ef:	ror    edx,1
  4209f1:	add    BYTE PTR [edi],dh
  4209f3:	or     esi,ecx
  4209f5:	xchg   esi,eax
  4209f6:	push   ebx
  4209f7:	push   esp
  4209f8:	mov    bh,0xbd
  4209fa:	sub    dl,al
  4209fc:	das    
  4209fd:	sbb    DWORD PTR [ebp-0x58],edx
  420a00:	clc    
  420a01:	lahf   
  420a02:	retf   
  420a03:	femms  
  420a05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a06:	test   eax,0xefeb946b
  420a0b:	mov    bh,0x5f
  420a0d:	xlat   BYTE PTR ds:[ebx]
  420a0e:	push   edx
  420a0f:	call   0x5945f080
  420a14:	or     BYTE PTR [esi-0x79da6f5],dh
  420a1a:	fldcw  WORD PTR [ecx]
  420a1c:	jp     0x420a26
  420a1e:	popa   
  420a1f:	into   
  420a20:	pop    esp
  420a21:	fld    TBYTE PTR [edx+0x796e96ae]
  420a27:	and    ecx,esi
  420a29:	mov    edi,0xb4ad737
  420a2e:	ficom  DWORD PTR [eax+0x42]
  420a31:	inc    esp
  420a32:	fwait
  420a33:	in     al,dx
  420a34:	push   ebx
  420a35:	(bad)  [esi-0x4a]
  420a38:	cs aaa 
  420a3a:	mov    bh,0x13
  420a3c:	lods   eax,DWORD PTR ds:[esi]
  420a3d:	push   ebx
  420a3e:	loope  0x420a74
  420a40:	xchg   ebp,eax
  420a41:	xchg   edi,eax
  420a42:	pop    esp
  420a43:	jl     0x4209f3
  420a45:	sbb    al,0x6c
  420a47:	sbb    eax,0xa18fa607
  420a4c:	ret    
  420a4d:	pop    ss
  420a4e:	mov    esi,DWORD PTR [ebx-0x2707701d]
  420a54:	aam    0x17
  420a56:	test   DWORD PTR [ebp-0x77e5ccea],edx
  420a5c:	call   0x28aefe57
  420a61:	outs   dx,DWORD PTR ds:[esi]
  420a62:	fild   QWORD PTR [ecx]
  420a64:	cmp    al,ch
  420a66:	inc    DWORD PTR [edx]
  420a68:	sub    al,0x3
  420a6a:	(bad)
  420a6d:	fild   DWORD PTR [ecx+0x38]
  420a70:	test   DWORD PTR [esi-0x2de32829],esp
  420a76:	adc    edx,0xb7ab8209
  420a7c:	leave  
  420a7d:	xchg   esi,eax
  420a7e:	add    DWORD PTR [eax],esi
  420a80:	pusha  
  420a81:	cld    
  420a82:	cmp    DWORD PTR [ecx],esi
  420a84:	or     al,0xb7
  420a86:	ds and cl,ah
  420a89:	inc    ecx
  420a8a:	das    
  420a8b:	pop    eax
  420a8c:	mov    ah,0x19
  420a8e:	xchg   ecx,eax
  420a8f:	jmp    0xe601931c
  420a94:	data16 or BYTE PTR [eax],0xba
  420a98:	or     ebp,esi
  420a9a:	mov    edx,DWORD PTR [edi-0x4481b611]
  420aa0:	arpl   WORD PTR [ebx+ebx*1+0x27],ax
  420aa4:	sbb    bl,dh
  420aa6:	add    al,0x65
  420aa8:	xchg   DWORD PTR [edi-0x43a53d9a],ecx
  420aae:	iret   
  420aaf:	mov    al,ds:0x15251869
  420ab4:	lods   eax,DWORD PTR ds:[esi]
  420ab5:	sbb    eax,0xc1c76541
  420aba:	xchg   esp,eax
  420abb:	xchg   DWORD PTR [edi-0x24],esp
  420abe:	xchg   ebx,eax
  420abf:	dec    ebx
  420ac0:	(bad)  
  420ac1:	rol    DWORD PTR [ebx+edx*1+0x64b8851e],cl
  420ac8:	jp     0x420af4
  420aca:	imul   esp,ebx,0x9182fa88
  420ad0:	inc    edx
  420ad1:	xchg   ebx,eax
  420ad2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ad3:	in     al,0xbb
  420ad5:	(bad)  
  420ad6:	fcmovb st,st(7)
  420ad8:	mov    al,ds:0x77543016
  420add:	inc    esp
  420ade:	nop
  420adf:	sub    al,0x10
  420ae1:	lods   eax,DWORD PTR ds:[esi]
  420ae2:	or     ah,BYTE PTR [edx+eiz*4+0x2b372b23]
  420ae9:	mov    al,ds:0x7b191330
  420aee:	sub    BYTE PTR [ebx-0x1cd8312d],0x31
  420af5:	sti    
  420af6:	mov    dh,0x98
  420af8:	(bad)  
  420af9:	fnstsw WORD PTR [ebp-0x40]
  420afc:	push   0x44f851a0
  420b01:	xchg   edi,eax
  420b02:	cli    
  420b03:	stos   DWORD PTR es:[edi],eax
  420b04:	ins    BYTE PTR es:[edi],dx
  420b05:	jae    0x420b22
  420b07:	sbb    esi,DWORD PTR [edi]
  420b09:	add    esp,ecx
  420b0b:	xchg   edx,eax
  420b0c:	stc    
  420b0d:	dec    edi
  420b0e:	jmp    0x1b63274e
  420b13:	pop    es
  420b14:	cld    
  420b15:	jns    0x420b94
  420b17:	dec    ecx
  420b18:	clc    
  420b19:	mov    bl,0x2
  420b1b:	adc    BYTE PTR [eax],ah
  420b1d:	jno    0x420b3c
  420b1f:	aaa    
  420b20:	add    ebp,ebx
  420b22:	push   0x72f60f47
  420b27:	cld    
  420b28:	or     edx,DWORD PTR [esi-0x6f79d834]
  420b2e:	xor    ebx,DWORD PTR [edi+0x66532f28]
  420b34:	add    DWORD PTR [edi],0x7c0ba04f
  420b3a:	lds    eax,FWORD PTR [ebx-0x62]
  420b3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b3e:	jae    0x420b3f
  420b40:	xchg   ecx,eax
  420b41:	xchg   BYTE PTR [ebp-0x79],ch
  420b44:	pop    eax
  420b45:	out    dx,al
  420b46:	add    al,0x6b
  420b48:	pop    es
  420b49:	daa    
  420b4a:	enter  0xafd9,0x7e
  420b4e:	pusha  
  420b4f:	(bad)  
  420b50:	jg     0x420bc3
  420b52:	scas   eax,DWORD PTR es:[edi]
  420b53:	push   DWORD PTR [edx-0x3b7fcc8c]
  420b59:	lods   al,BYTE PTR ds:[esi]
  420b5a:	call   eax
  420b5c:	sub    DWORD PTR [ebx-0x5cd3234d],eax
  420b62:	shl    DWORD PTR [eax],1
  420b64:	mov    esp,0xb72a4a3c
  420b69:	lahf   
  420b6a:	hlt    
  420b6b:	inc    esp
  420b6c:	lds    eax,FWORD PTR [edx-0x28]
  420b6f:	shl    DWORD PTR fs:[ecx],cl
  420b72:	sti    
  420b73:	call   0x75e338c4
  420b78:	xchg   ecx,eax
  420b79:	and    al,0xcd
  420b7b:	sbb    eax,0xca3e0cb3
  420b80:	dec    ebx
  420b81:	test   BYTE PTR [ebp-0x8],cl
  420b84:	xchg   esp,eax
  420b85:	loopne 0x420be1
  420b87:	sub    bl,bl
  420b89:	push   es
  420b8a:	retf   
  420b8b:	cli    
  420b8c:	jno    0x420b3b
  420b8e:	add    DWORD PTR [ebp+0x2779a610],ebp
  420b94:	xchg   ecx,eax
  420b95:	ret    0x5375
  420b98:	ds push es
  420b9a:	push   ecx
  420b9b:	cdq    
  420b9c:	dec    ebx
  420b9d:	xchg   BYTE PTR [ebp+0x5153d973],cl
  420ba3:	popa   
  420ba4:	loope  0x420b72
  420ba6:	cmp    ch,ah
  420ba8:	sbb    al,bl
  420baa:	jg     0x420b9f
  420bac:	lea    eax,[edx-0x26]
  420baf:	jl     0x420ba2
  420bb1:	cli    
  420bb2:	outs   dx,DWORD PTR ds:[esi]
  420bb3:	cmp    ebx,DWORD PTR [edx]
  420bb5:	pop    ss
  420bb6:	mov    esi,DWORD PTR [ecx+edx*1-0x30fb6a39]
  420bbd:	fistp  QWORD PTR [ecx]
  420bbf:	pop    ds
  420bc0:	jno    0x420bf9
  420bc2:	mov    cl,0x58
  420bc4:	in     eax,0x87
  420bc6:	mov    eax,ds:0xc005674e
  420bcb:	mov    ?,WORD PTR [edx+0x69]
  420bce:	sub    al,0x9c
  420bd0:	int    0xfd
  420bd2:	jno    0x420c00
  420bd4:	mov    ah,ch
  420bd6:	mov    dl,0x5f
  420bd8:	mov    dh,0xfc
  420bda:	fcmovnbe st,st(2)
  420bdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420bdd:	jp     0x420c11
  420bdf:	retf   0x9995
  420be2:	jnp    0x420c36
  420be4:	dec    esi
  420be5:	mov    esi,0x1ef1ed64
  420bea:	in     al,dx
  420beb:	sub    eax,0x2084fe88
  420bf0:	stos   BYTE PTR es:[edi],al
  420bf1:	gs daa 
  420bf3:	aas    
  420bf4:	call   0xf05f033f
  420bf9:	(bad)  
  420bfa:	mov    ebp,0xb5399e08
  420bff:	pop    es
  420c00:	ds retf 
  420c02:	mov    esp,0x1652ce37
  420c07:	cmp    eax,0x9b8eed3a
  420c0c:	xchg   edi,eax
  420c0d:	mov    esi,0x5dd83dfe
  420c12:	(bad)  [ebp+0x2c4394e6]
  420c18:	loop   0x420c6e
  420c1a:	sub    DWORD PTR [edx+0x7632983a],0xffffffe6
  420c21:	push   esp
  420c22:	push   esi
  420c23:	mov    al,0x6b
  420c25:	sbb    DWORD PTR [edi+edi*4],0xc994c302
  420c2c:	xchg   esp,eax
  420c2d:	push   eax
  420c2e:	sbb    al,ah
  420c30:	jne    0x420c2d
  420c32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c33:	fistp  WORD PTR [ebx]
  420c35:	mov    esp,0xc0047d4d
  420c3a:	sbb    ebp,DWORD PTR [ebp+0xb9f4383]
  420c40:	lahf   
  420c41:	fiadd  WORD PTR [edi]
  420c43:	enter  0xd60a,0x28
  420c47:	xlat   BYTE PTR ds:[ebx]
  420c48:	xchg   edx,eax
  420c49:	ret    
  420c4a:	fwait
  420c4b:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  420c4d:	cmp    ebp,ebp
  420c4f:	xchg   esp,eax
  420c50:	(bad)  
  420c51:	sbb    DWORD PTR [edx+0x20a7b113],esp
  420c57:	inc    eax
  420c58:	jl     0x420cba
  420c5a:	sub    ah,BYTE PTR ds:0x2fc81dc2
  420c60:	stc    
  420c61:	sub    al,0xca
  420c63:	push   ebp
  420c64:	out    0x38,eax
  420c66:	jge    0x420c05
  420c68:	dec    esp
  420c69:	test   edx,ebp
  420c6b:	(bad)  
  420c6c:	scas   al,BYTE PTR es:[edi]
  420c6d:	jo     0x420c3b
  420c6f:	xor    dl,BYTE PTR [edi+0x41]
  420c72:	mov    eax,0xdbcb8cf9
  420c77:	inc    ecx
  420c78:	arpl   WORD PTR [esi],cx
  420c7a:	xor    esi,DWORD PTR [esi-0x1]
  420c7d:	lea    eax,[ebx+0x792ec001]
  420c83:	mov    bh,0xd5
  420c85:	repz or edi,DWORD PTR [eax+eiz*4-0x10fc80cf]
  420c8d:	or     al,0xc5
  420c8f:	cmp    dl,BYTE PTR [ebx-0x49a2a331]
  420c95:	fcomp  DWORD PTR [ebx-0xe1d3507]
  420c9b:	cdq    
  420c9c:	xor    DWORD PTR [esi+0x3a],0x5ea72db8
  420ca3:	in     eax,dx
  420ca4:	mov    eax,0xa3921dd8
  420ca9:	add    dl,al
  420cab:	inc    eax
  420cac:	call   0xe5aa2197
  420cb1:	es cli 
  420cb3:	popa   
  420cb4:	inc    BYTE PTR [esi-0xb]
  420cb7:	cli    
  420cb8:	cld    
  420cb9:	push   ss
  420cba:	aad    0x7b
  420cbc:	jge    0x420c49
  420cbe:	aad    0xaf
  420cc0:	sbb    BYTE PTR [ebp-0x34],cl
  420cc3:	push   eax
  420cc4:	dec    edx
  420cc5:	imul   edi,DWORD PTR [edi-0x11],0x13
  420cc9:	popf   
  420cca:	rcr    DWORD PTR [edi],0xb1
  420ccd:	sub    edx,edi
  420ccf:	push   esi
  420cd0:	out    0x14,al
  420cd2:	call   0xb5912444
  420cd7:	fistp  DWORD PTR [edi+0x21360c2d]
  420cdd:	pop    ebx
  420cde:	daa    
  420cdf:	fisubr DWORD PTR [edi-0x74bb20af]
  420ce5:	mov    edx,0xe21d25cd
  420cea:	push   esi
  420ceb:	lods   eax,DWORD PTR ds:[esi]
  420cec:	push   esp
  420ced:	cld    
  420cee:	xchg   esp,eax
  420cef:	fdivr  QWORD PTR [ecx]
  420cf1:	jae    0x420c8a
  420cf3:	std    
  420cf4:	bound  edi,QWORD PTR fs:[edx+eiz*4-0x73f1898c]
  420cfc:	or     ch,BYTE PTR [ecx+0x4200574d]
  420d02:	push   eax
  420d03:	dec    esp
  420d04:	fwait
  420d05:	cdq    
  420d06:	popa   
  420d07:	push   0x12
  420d09:	mov    eax,ds:0x2af1bebf
  420d0e:	push   edi
  420d0f:	push   edi
  420d10:	sub    DWORD PTR [edx+0x5ada01f2],ecx
  420d16:	call   0xd749:0xfd22f329
  420d1d:	fldenv [eax+0x7a6ee33c]
  420d23:	jns    0x420d68
  420d25:	jge    0x420da2
  420d27:	icebp  
  420d28:	xchg   esi,eax
  420d29:	and    esp,edx
  420d2b:	lods   al,BYTE PTR ds:[esi]
  420d2c:	mov    al,ds:0xbda7d2b4
  420d31:	rcr    DWORD PTR [ebx-0x2f7666a4],1
  420d37:	or     al,0x87
  420d39:	mov    ebx,0x6351cb42
  420d3e:	mov    esi,0x6738dad3
  420d43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d44:	pop    esi
  420d45:	xor    cl,BYTE PTR [ecx+0x71b955de]
  420d4b:	jle    0x420d54
  420d4d:	dec    eax
  420d4e:	dec    ebp
  420d4f:	mov    dh,0x66
  420d51:	inc    ecx
  420d52:	push   0xcf166f8c
  420d57:	mov    al,ds:0x9537dc08
  420d5c:	shl    ebp,1
  420d5e:	inc    esp
  420d5f:	out    0x2a,al
  420d61:	add    dl,BYTE PTR [edi+0x6b17dcc3]
  420d67:	pushf  
  420d68:	bound  eax,QWORD PTR [ebx+0x5c18dfc9]
  420d6e:	jmp    0x3f6b:0xe40052d
  420d75:	sbb    bl,BYTE PTR [esi]
  420d77:	push   ds
  420d78:	mov    ebp,0x5d7bf1bc
  420d7d:	xchg   ebx,eax
  420d7e:	bound  ebp,QWORD PTR [edi]
  420d80:	aas    
  420d81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d82:	sbb    BYTE PTR [eax],ah
  420d84:	cwde   
  420d85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d86:	cli    
  420d87:	xchg   ebx,eax
  420d88:	inc    edi
  420d89:	push   ebx
  420d8a:	mov    WORD PTR [edi-0x45],ss
  420d8d:	test   al,0x58
  420d8f:	sub    ch,BYTE PTR [edi+ebx*2-0x12]
  420d93:	sti    
  420d94:	pop    ebp
  420d95:	and    al,0x85
  420d97:	inc    di
  420d99:	inc    esp
  420d9a:	int    0xc4
  420d9c:	jle    0x420d2c
  420d9e:	mov    esp,DWORD PTR [edx+0x2]
  420da1:	sub    ebx,DWORD PTR [esi-0x717ab794]
  420da7:	test   ebx,ecx
  420da9:	mov    al,0x3c
  420dab:	pop    edi
  420dac:	std    
  420dad:	add    esi,esi
  420daf:	adc    edi,eax
  420db1:	leave  
  420db2:	repz fs addr16 aam 0x5b
  420db7:	mov    ah,0x13
  420db9:	sub    DWORD PTR [ebx+ebp*1+0x171b73d5],ebp
  420dc0:	or     BYTE PTR [esi+ecx*4+0x25fbe7c3],dh
  420dc7:	sbb    DWORD PTR ds:0xe7144e88,0x3c
  420dce:	test   BYTE PTR [ebx-0x39],0x92
  420dd2:	call   0x442c:0x27129a75
  420dd9:	push   edi
  420dda:	pop    ebx
  420ddb:	add    BYTE PTR [ebp-0x1db8b75e],al
  420de1:	or     BYTE PTR [edx],ch
  420de3:	fisubr WORD PTR [edx+ebx*4+0x216787ab]
  420dea:	add    al,0xac
  420dec:	mov    eax,0xd3f70eb3
  420df1:	xchg   edi,eax
  420df2:	jl     0x420dfd
  420df4:	inc    ebx
  420df5:	push   ebp
  420df6:	mov    ch,BYTE PTR [eax]
  420df8:	addr16 sbb dh,dh
  420dfb:	lea    ebx,[ecx]
  420dfd:	push   esi
  420dfe:	pop    ebx
  420dff:	out    0x12,al
  420e01:	xor    edx,DWORD PTR [edi-0x2efb8c46]
  420e07:	lods   eax,DWORD PTR ds:[esi]
  420e08:	out    0x64,eax
  420e0a:	sar    BYTE PTR [edx-0x36],cl
  420e0d:	sahf   
  420e0e:	int    0x87
  420e10:	stos   BYTE PTR es:[edi],al
  420e11:	inc    ecx
  420e12:	pop    es
  420e13:	jge    0x420e6c
  420e15:	push   ebp
  420e16:	dec    DWORD PTR [ebx+0x72]
  420e19:	addr16 test al,0xa1
  420e1c:	adc    al,0x72
  420e1e:	sub    DWORD PTR [edx-0x73d8f09d],edx
  420e24:	mov    ebx,0xa55888db
  420e29:	mov    ds:0xd0f768f,al
  420e2e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e30:	mov    BYTE PTR [ebx+0x6a426d69],al
  420e36:	les    esp,FWORD PTR [esp+eax*1]
  420e39:	jns    0x420de2
  420e3b:	test   BYTE PTR [edi],dl
  420e3d:	inc    edi
  420e3e:	xchg   esp,eax
  420e3f:	fs fdiv st,st(4)
  420e42:	xchg   ecx,eax
  420e43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e44:	pop    edx
  420e45:	aam    0x43
  420e47:	out    0xf4,eax
  420e49:	icebp  
  420e4a:	cmp    BYTE PTR [edx],bl
  420e4c:	jne    0x420ea1
  420e4e:	aas    
  420e4f:	and    DWORD PTR [esi+0x6],ecx
  420e52:	mov    bh,0x7d
  420e54:	pop    ebp
  420e55:	lds    esp,FWORD PTR [edi-0x42195e7a]
  420e5b:	stc    
  420e5c:	inc    esi
  420e5d:	sbb    al,0xb9
  420e5f:	fcomip st,st(4)
  420e61:	jmp    0x613640bf
  420e66:	pop    ss
  420e67:	retf   
  420e68:	and    ebp,esp
  420e6a:	sub    cl,BYTE PTR [edi+0x36]
  420e6d:	xlat   BYTE PTR ds:[ebx]
  420e6e:	sub    BYTE PTR [esp+ebx*2],0xda
  420e72:	inc    edx
  420e73:	cmp    BYTE PTR [ecx-0x669ea565],al
  420e79:	cld    
  420e7a:	push   edx
  420e7b:	mov    bh,0x83
  420e7d:	leave  
  420e7e:	fist   DWORD PTR [esi-0x54]
  420e81:	xor    DWORD PTR [eax],esi
  420e83:	sbb    DWORD PTR [eax+0x58],ebp
  420e86:	popf   
  420e87:	imul   ebx,DWORD PTR es:[edx-0x35],0xffffffed
  420e8c:	pop    eax
  420e8d:	mov    BYTE PTR [esi+0x797aa63f],dl
  420e93:	stc    
  420e94:	aas    
  420e95:	mov    eax,0x9ff786a1
  420e9a:	ins    BYTE PTR es:[edi],dx
  420e9b:	mov    al,ds:0x2ad7ca27
  420ea0:	xchg   edi,eax
  420ea1:	hlt    
  420ea2:	or     cl,BYTE PTR [ebx+ebp*2]
  420ea5:	inc    edx
  420ea6:	push   0x50a915a4
  420eab:	(bad)  
  420eac:	ss and eax,0x29b54518
  420eb2:	lahf   
  420eb3:	out    dx,al
  420eb4:	aaa    
  420eb5:	mov    esi,0xd781e492
  420eba:	imul   ebp,DWORD PTR fs:[eax-0x65],0xffffffa1
  420ebf:	stos   DWORD PTR es:[edi],eax
  420ec0:	jg     0x420e9a
  420ec2:	mov    ds:0x38e5f9a0,al
  420ec7:	xor    eax,0x415f0203
  420ecc:	enter  0x2718,0x1a
  420ed0:	xchg   esp,eax
  420ed1:	or     al,0x98
  420ed3:	call   0x2f7c:0x161d4cb2
  420eda:	sbb    edi,DWORD PTR [ebx+esi*2]
  420edd:	inc    eax
  420ede:	imul   edx,edi,0x9a6f0dcb
  420ee4:	stc    
  420ee5:	out    0x7c,al
  420ee7:	xor    DWORD PTR [ebp+0x6d],eax
  420eea:	dec    edi
  420eeb:	xor    ebp,0xffffff9c
  420eee:	dec    esi
  420eef:	sub    eax,0xb66f23b
  420ef4:	(bad)  
  420ef6:	pop    ebx
  420ef7:	stos   BYTE PTR es:[edi],al
  420ef8:	popf   
  420ef9:	ins    DWORD PTR es:[edi],dx
  420efa:	stc    
  420efb:	jmpw   0xf7a2
  420eff:	jmp    DWORD PTR [eax+0x5b]
  420f02:	test   al,0xcc
  420f04:	loopne 0x420ed7
  420f06:	mov    DWORD PTR es:[ebp+0x1b8b5d1b],esp
  420f0d:	jbe    0x420f36
  420f0f:	aad    0xc7
  420f11:	xchg   edi,eax
  420f12:	(bad)  
  420f13:	pop    esp
  420f14:	mov    dl,0x65
  420f16:	cli    
  420f17:	mov    dl,al
  420f19:	mov    eax,edx
  420f1b:	inc    edx
  420f1c:	int    0x9d
  420f1e:	in     eax,0x4b
  420f20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f21:	imul   edi,DWORD PTR [ebx+0x45a74860],0x6b025f7f
  420f2b:	cmp    al,0xe7
  420f2d:	mov    dh,0xb5
  420f2f:	not    DWORD PTR [ecx]
  420f31:	xor    al,0x83
  420f33:	call   0x951672c1
  420f38:	or     esp,DWORD PTR [edi+0x76ffb24b]
  420f3e:	add    eax,0x622ba3ba
  420f43:	and    al,0xe7
  420f45:	test   DWORD PTR [edx+ebx*4+0x6668e691],0xa84c6ef5
  420f50:	or     al,0x38
  420f52:	dec    edx
  420f53:	jmp    0xb122:0x65e1df14
  420f5a:	mov    esp,0xb9cfc8e3
  420f5f:	sub    ah,BYTE PTR [edi-0x7f553e84]
  420f65:	inc    ecx
  420f66:	cmp    al,0xef
  420f68:	push   cs
  420f69:	sub    DWORD PTR ds:0xfa8059f4,edx
  420f6f:	(bad)
  420f72:	loope  0x420fee
  420f74:	pop    edi
  420f75:	push   edi
  420f76:	retf   
  420f77:	out    dx,al
  420f78:	jecxz  0x420fb6
  420f7a:	xor    BYTE PTR [edx-0x4e48d3ed],dh
  420f80:	push   cs
  420f81:	jg     0x420f0f
  420f83:	pusha  
  420f84:	leave  
  420f85:	mov    esi,0x4e234921
  420f8a:	mov    edi,0xb265b627
  420f8f:	test   dl,dh
  420f91:	cld    
  420f92:	ret    
  420f93:	fiadd  DWORD PTR [ecx-0x434df754]
  420f99:	(bad)  
  420f9a:	push   ecx
  420f9b:	test   eax,0xc539fe1
  420fa0:	pop    edi
  420fa1:	imul   edx,esi,0xffffffa1
  420fa4:	mov    edx,0x709ff3cf
  420fa9:	daa    
  420faa:	jb     0x420f8e
  420fac:	jecxz  0x420fa8
  420fae:	in     al,dx
  420faf:	out    0xdb,eax
  420fb1:	sbb    eax,0x84b6d0f5
  420fb6:	lahf   
  420fb7:	call   0x989:0x3a3c8cf3
  420fbe:	xor    al,0xc3
  420fc0:	mov    ah,0xfd
  420fc2:	hlt    
  420fc3:	pop    edx
  420fc4:	outs   dx,BYTE PTR ds:[esi]
  420fc5:	mov    ebp,0x4697c05d
  420fca:	repnz (bad) 
  420fcd:	jmp    0xdde2:0x56ef955c
  420fd4:	enter  0x6825,0x80
  420fd8:	bound  edx,QWORD PTR [ebx]
  420fda:	out    0x7a,eax
  420fdc:	popa   
  420fdd:	jg     0x420f8f
  420fdf:	fwait
  420fe0:	wrmsr  
  420fe2:	inc    ebp
  420fe3:	jle    0x421064
  420fe5:	mov    DWORD PTR [edx+0x1a021797],edi
  420feb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fec:	jecxz  0x421053
  420fee:	mov    ebp,0xde92d4af
  420ff3:	jno    0x421043
  420ff5:	jge    0x420fae
  420ff7:	jno    0x420f85
  420ff9:	dec    ebp
  420ffa:	scas   eax,DWORD PTR es:[edi]
  420ffb:	jmp    0x420faa
  420ffd:	ins    BYTE PTR es:[edi],dx
  420ffe:	cwde   
  420fff:	cmp    BYTE PTR [edi],cl
  421001:	mov    edx,0x12cce146
  421006:	ins    DWORD PTR es:[edi],dx
  421007:	xor    BYTE PTR [ebx-0x4b],bh
  42100a:	outs   dx,DWORD PTR ds:[esi]
  42100b:	jl     0x420fb3
  42100d:	lods   eax,DWORD PTR ds:[esi]
  42100e:	sub    BYTE PTR [ecx+0x68e5773d],dh
  421014:	ror    BYTE PTR [ecx+0x51603fb8],0xc9
  42101b:	call   0x31b4f9d1
  421020:	fwait
  421021:	in     al,dx
  421022:	in     eax,dx
  421023:	inc    eax
  421024:	(bad)  
  421025:	retf   0x1663
  421028:	mov    dh,0xe8
  42102a:	or     BYTE PTR [eax-0x51181039],ah
  421030:	jnp    0x420fcb
  421032:	xor    BYTE PTR [edi+eiz*2],cl
  421035:	leave  
  421036:	ins    BYTE PTR es:[edi],dx
  421037:	fst    DWORD PTR [edx+0x66]
  42103a:	dec    esp
  42103b:	and    al,0xa2
  42103d:	xchg   edx,eax
  42103e:	mov    ebp,0xa1a58861
  421043:	ds ins DWORD PTR es:[edi],dx
  421045:	pop    edi
  421046:	call   0x7391d3f0
  42104b:	test   al,0x6
  42104d:	inc    ebx
  42104e:	popa   
  42104f:	xor    ebp,DWORD PTR [edx-0x43410274]
  421055:	xchg   edx,eax
  421056:	jno    0x4210c4
  421058:	mov    ah,0xff
  42105a:	push   esi
  42105b:	jns    0x42107f
  42105d:	jo     0x4210cb
  42105f:	js     0x4210a0
  421061:	adc    ecx,DWORD PTR [esp+edx*2-0x27]
  421065:	pusha  
  421066:	ss inc edx
  421068:	mov    es,esi
  42106a:	mov    ebp,0x6cfbf5a5
  42106f:	fwait
  421070:	or     BYTE PTR [eax+0x11fd7dd7],bh
  421076:	push   ds
  421077:	repz in eax,0xf5
  42107a:	dec    ebp
  42107b:	test   DWORD PTR [edi],eax
  42107d:	int    0x5e
  42107f:	sub    eax,DWORD PTR [ebx+ebx*2]
  421082:	cwde   
  421083:	push   edi
  421084:	jbe    0x421025
  421086:	fistp  DWORD PTR ds:0xff737198
  42108c:	sub    edi,0xffffffb2
  42108f:	xchg   ebp,eax
  421090:	push   DWORD PTR [edx-0x24f77bb6]
  421096:	dec    eax
  421097:	loopne 0x421077
  421099:	sub    edi,DWORD PTR ds:0xea48bce
  42109f:	jnp    0x42103d
  4210a1:	das    
  4210a2:	into   
  4210a3:	adc    BYTE PTR [eax],cl
  4210a5:	xchg   ebx,eax
  4210a6:	push   0xffffff8d
  4210a8:	sub    ecx,ebp
  4210aa:	add    esi,DWORD PTR [ebx+0x2d97f3f8]
  4210b0:	ss or  eax,0x16472593
  4210b6:	call   0xd669:0x73971347
  4210bd:	repz cdq 
  4210bf:	sbb    DWORD PTR [esi-0x7],ebp
  4210c2:	fist   WORD PTR [edi+0x597f5faa]
  4210c8:	(bad)  
  4210c9:	pop    esi
  4210ca:	sar    BYTE PTR [ebx-0x43744a95],1
  4210d0:	xor    bl,al
  4210d2:	pop    esi
  4210d3:	fwait
  4210d4:	add    BYTE PTR [ebx-0x2b5b5802],ah
  4210da:	mov    DWORD PTR [edx-0x22],0x2c906df9
  4210e1:	mov    dh,0xe2
  4210e3:	sub    BYTE PTR [edi],bl
  4210e5:	xor    dh,BYTE PTR [ebx]
  4210e7:	rcl    cl,1
  4210e9:	sub    DWORD PTR [edi+0x41],edx
  4210ec:	gs or  eax,0xf0de5ed2
  4210f2:	sub    eax,0x41cfff7e
  4210f7:	leave  
  4210f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4210f9:	(bad)  
  4210fa:	push   cs
  4210fb:	jmp    ecx
  4210fd:	push   esi
  4210fe:	push   ecx
  4210ff:	jbe    0x4210fd
  421101:	pop    ecx
  421102:	retf   0x22de
  421105:	popf   
  421106:	ret    0x4548
  421109:	int3   
  42110a:	and    DWORD PTR [ebp-0x2b],esp
  42110d:	adc    BYTE PTR [esi+0x3c],dh
  421110:	xor    ch,dh
  421112:	jl     0x4210b3
  421114:	bound  dx,DWORD PTR [esi]
  421117:	mov    eax,0x8558375d
  42111c:	cmp    BYTE PTR [edx],bh
  42111e:	ds (bad) 
  421120:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421121:	mov    al,0x78
  421123:	add    eax,0xadc2679f
  421128:	rcr    esp,0x5a
  42112b:	fisttp DWORD PTR [edi+0x3e07d299]
  421131:	jl     0x42116f
  421133:	retf   
  421134:	test   eax,0x3288bf5c
  421139:	out    dx,eax
  42113a:	xor    al,0x43
  42113c:	jge    0x42115f
  42113e:	ret    0x5488
  421141:	jg     0x4210fa
  421143:	imul   ebp,ebx,0xffffffd7
  421146:	sahf   
  421147:	mov    ebx,DWORD PTR [ebp+0x56]
  42114a:	and    BYTE PTR [ebp+eiz*8-0x5c3aab28],ch
  421151:	push   0x60
  421153:	push   ecx
  421154:	dec    esp
  421155:	dec    ebp
  421156:	sahf   
  421157:	test   al,0xfb
  421159:	enter  0xb1f1,0x12
  42115d:	cwde   
  42115e:	nop
  42115f:	clc    
  421160:	xchg   ebp,eax
  421161:	jb     0x421138
  421163:	leave  
  421164:	mov    edx,0x6b9361ff
  421169:	push   es
  42116a:	adc    al,0x1f
  42116c:	in     eax,dx
  42116d:	push   0xffffff8b
  42116f:	pop    ss
  421170:	sub    eax,0x9a10561c
  421175:	ret    0xf18d
  421178:	pop    es
  421179:	call   0xfd5054e7
  42117e:	(bad)  
  42117f:	jl     0x421104
  421181:	push   ebp
  421182:	xchg   DWORD PTR [ebx],ebx
  421184:	popa   
  421185:	mov    ecx,0xfd8f387e
  42118a:	jno    0x4211a8
  42118c:	xchg   esi,eax
  42118d:	mov    BYTE PTR [esi],ch
  42118f:	add    edi,edx
  421191:	iret   
  421192:	sbb    DWORD PTR [ecx-0x7d],esp
  421195:	xchg   ebp,eax
  421196:	enter  0x3c14,0xdf
  42119a:	mov    edi,0x81ea57c4
  42119f:	add    DWORD PTR [edi],eax
  4211a1:	push   ds
  4211a2:	mov    al,ds:0x305d597d
  4211a7:	push   edx
  4211a8:	cmp    al,0x87
  4211aa:	push   esp
  4211ab:	and    edx,ebx
  4211ad:	xchg   ecx,eax
  4211ae:	out    0x7e,al
  4211b0:	xor    ebx,DWORD PTR [esi-0x43]
  4211b3:	xor    eax,0x66baa127
  4211b8:	inc    eax
  4211b9:	bound  edi,QWORD PTR ds:0x28dd8489
  4211bf:	or     BYTE PTR [edx],al
  4211c1:	ficom  WORD PTR [edx]
  4211c3:	sti    
  4211c4:	push   0x58
  4211c6:	mov    ebp,0xb41b1b2d
  4211cb:	xlat   BYTE PTR ds:[ebx]
  4211cc:	pop    ecx
  4211cd:	jmp    0x42119a
  4211cf:	shl    DWORD PTR [ecx-0x62279f2f],cl
  4211d5:	and    bh,BYTE PTR [ecx+0x25]
  4211d8:	(bad)  
  4211d9:	icebp  
  4211da:	hlt    
  4211db:	(bad)  
  4211dc:	sbb    al,0x93
  4211de:	sub    BYTE PTR [ebx],bl
  4211e0:	mov    dl,cl
  4211e2:	popa   
  4211e3:	rol    DWORD PTR [eax+0x3e75deb],cl
  4211e9:	pop    ss
  4211ea:	les    ebp,FWORD PTR [ecx+0x5b]
  4211ed:	mov    ds:0x88168868,al
  4211f2:	xchg   BYTE PTR ss:[edi+eax*1-0x2f],bl
  4211f7:	imul   ecx,DWORD PTR [edx],0xd4afeeaa
  4211fd:	sti    
  4211fe:	mov    gs,WORD PTR [eax+esi*8+0x59514c5c]
  421205:	dec    esp
  421206:	or     BYTE PTR cs:[edi+0x46],ah
  42120a:	add    al,0xc5
  42120c:	(bad)  
  42120d:	clc    
  42120e:	imul   ebx,DWORD PTR [edx],0x97402768
  421214:	dec    ecx
  421215:	pop    ebp
  421216:	xor    DWORD PTR [eax+edi*4-0x38],edx
  42121a:	ins    DWORD PTR es:[edi],dx
  42121b:	xchg   edi,eax
  42121c:	icebp  
  42121d:	sbb    BYTE PTR [di],bh
  421220:	shl    DWORD PTR [edi],1
  421222:	sub    eax,0x6fea15bf
  421227:	call   0xae03:0x8dd2443f
  42122e:	cmp    esp,eax
  421230:	out    0x5b,eax
  421232:	xchg   edi,eax
  421233:	(bad)  
  421234:	mov    ds:0x243394cc,al
  421239:	fmul   QWORD PTR [ecx]
  42123b:	test   BYTE PTR [ecx+0x52],dl
  42123e:	hlt    
  42123f:	add    eax,0x3613ea5
  421244:	aad    0xe0
  421246:	adc    DWORD PTR [eax+0x2d],ebp
  421249:	and    DWORD PTR [esi],esp
  42124b:	pop    esp
  42124c:	xor    cl,bl
  42124e:	and    ah,ch
  421250:	shl    BYTE PTR [ebp+0x4fd122b6],0x36
  421257:	add    BYTE PTR [edx],dh
  421259:	dec    ebx
  42125a:	pop    edx
  42125b:	clc    
  42125c:	fstp   TBYTE PTR cs:[ecx+0x4c]
  421260:	pusha  
  421261:	retf   
  421262:	rol    DWORD PTR [edi],0x7d
  421265:	push   0x3451b178
  42126a:	outs   dx,BYTE PTR ds:[esi]
  42126b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42126c:	add    ebx,DWORD PTR [ebx-0x220a5e9f]
  421272:	(bad)  
  421273:	adc    ch,BYTE PTR [ecx+0x19d83ccf]
  421279:	xlat   BYTE PTR ds:[ebx]
  42127a:	jmp    0x421224
  42127c:	jg     0x42125c
  42127e:	(bad)  
  42127f:	gs clc 
  421281:	sbb    ch,BYTE PTR [edi+esi*8+0x17]
  421285:	xor    eax,0xa7d8b97f
  42128a:	xor    eax,0xfaa4f336
  42128f:	bnd jno 0x421228
  421292:	xchg   ebp,eax
  421293:	jmp    0x40432adf
  421298:	mov    dl,0x13
  42129a:	sbb    DWORD PTR [eax],0x2bc90a4a
  4212a0:	ins    DWORD PTR es:[edi],dx
  4212a1:	pop    ss
  4212a2:	xor    bl,BYTE PTR [esp+edi*4+0x32]
  4212a6:	ror    DWORD PTR [esi+0x2058422d],0xdd
  4212ad:	pop    es
  4212ae:	adc    al,0x77
  4212b0:	iret   
  4212b1:	aaa    
  4212b2:	adc    eax,0xdd5c3b95
  4212b7:	lahf   
  4212b8:	cmp    edi,0x6c485ab5
  4212be:	inc    edi
  4212bf:	shr    DWORD PTR ds:0x6d57bb7d,0x62
  4212c6:	aad    0xb7
  4212c8:	xchg   esi,eax
  4212c9:	in     eax,dx
  4212ca:	loope  0x4212e1
  4212cc:	int3   
  4212cd:	scas   eax,DWORD PTR es:[edi]
  4212ce:	xchg   edx,eax
  4212cf:	test   DWORD PTR [edx-0x4e],ebp
  4212d2:	jb     0x42129e
  4212d4:	aas    
  4212d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212d6:	imul   esi,DWORD PTR [esi-0x29c4f6a0],0xffffff9b
  4212dd:	dec    esi
  4212de:	arpl   WORD PTR [ecx+0x222a573d],bx
  4212e4:	mov    ds:0x1bc12d08,eax
  4212e9:	retf   0x82d6
  4212ec:	jmp    0xca87a7f8
  4212f1:	test   DWORD PTR [ebp+0x41],edi
  4212f4:	pop    ecx
  4212f5:	mov    cl,0x5f
  4212f7:	cli    
  4212f8:	out    0xca,eax
  4212fa:	into   
  4212fb:	jecxz  0x421312
  4212fd:	rol    BYTE PTR [ecx+0x54],cl
  421300:	add    cl,dh
  421302:	aad    0xcd
  421304:	or     BYTE PTR [eax+edx*2-0x2a1f659a],dh
  42130b:	(bad)  
  42130c:	into   
  42130d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42130e:	sbb    BYTE PTR [ebx+0x1d8ddd6b],bh
  421314:	or     bl,BYTE PTR [ecx-0x28ca41a2]
  42131a:	jae    0x421388
  42131c:	rcr    DWORD PTR [ebx+edx*4-0x4b2946f1],cl
  421323:	jae    0x42138c
  421325:	dec    eax
  421326:	xor    al,0xb0
  421328:	aad    0x22
  42132a:	inc    ebp
  42132b:	mov    edi,0x7fbf0c6a
  421330:	clc    
  421331:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421332:	ror    DWORD PTR [eax],1
  421334:	fisubr DWORD PTR [eax+0x1b]
  421337:	icebp  
  421338:	add    dl,BYTE PTR [eax]
  42133a:	ja     0x421300
  42133c:	ja     0x421325
  42133e:	mov    eax,0x62e9b47e
  421343:	scas   al,BYTE PTR es:[edi]
  421344:	(bad)  
  421345:	mov    eax,ds:0x590dc500
  42134a:	pushf  
  42134b:	xchg   ebp,eax
  42134c:	xchg   edx,eax
  42134d:	jg     0x421382
  42134f:	ins    DWORD PTR es:[edi],dx
  421350:	shl    cl,1
  421352:	push   0x144fb481
  421357:	xchg   ebp,eax
  421358:	mov    esp,0xfaca7516
  42135d:	sbb    edi,DWORD PTR [esi-0x43]
  421360:	cmc    
  421361:	xchg   ebx,ebx
  421363:	jp     0x421324
  421365:	(bad)  
  421366:	(bad)  
  421367:	neg    ah
  421369:	jne    0x42136d
  42136b:	cmc    
  42136c:	inc    ebp
  42136d:	leave  
  42136e:	inc    BYTE PTR [edi-0x61]
  421371:	inc    esp
  421372:	jge    0x4213a3
  421374:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421375:	imul   edi,DWORD PTR ds:[eax-0x2e],0xffffff84
  42137a:	shr    BYTE PTR [edi-0x2d145a88],cl
  421380:	mov    ds,WORD PTR [ebx+ebx*8+0x63]
  421384:	aam    0xbf
  421386:	push   esp
  421387:	add    al,0x99
  421389:	dec    edi
  42138a:	addr16 test eax,0xffd99c73
  421390:	mov    eax,0x9776610e
  421395:	sub    esp,DWORD PTR [ebx-0x31]
  421398:	sti    
  421399:	jecxz  0x4213b4
  42139b:	sub    DWORD PTR [ebp+edx*8+0x11],esp
  42139f:	nop
  4213a0:	mov    bh,0xa1
  4213a2:	sahf   
  4213a3:	clc    
  4213a4:	or     ebx,DWORD PTR [ecx+0x6a3b6a82]
  4213aa:	cmp    DWORD PTR [esi],0xffffffe3
  4213ad:	sti    
  4213ae:	sbb    dh,cl
  4213b0:	pop    eax
  4213b1:	sbb    DWORD PTR [edx+0x3a50ad9f],eax
  4213b7:	enter  0x2892,0xf5
  4213bb:	xlat   BYTE PTR ds:[ebx]
  4213bc:	xchg   edi,eax
  4213bd:	dec    ecx
  4213be:	push   eax
  4213bf:	pop    ebx
  4213c0:	inc    esp
  4213c1:	inc    ebp
  4213c2:	inc    ebx
  4213c3:	xor    ch,ch
  4213c5:	cmc    
  4213c6:	sbb    DWORD PTR [ebp-0x30],esp
  4213c9:	repnz pop esi
  4213cb:	rcr    BYTE PTR [esp+esi*8+0x26f80ff],cl
  4213d2:	shl    DWORD PTR [eax+0x7d],1
  4213d5:	xor    al,al
  4213d7:	mul    BYTE PTR [edi-0x60]
  4213da:	pop    eax
  4213db:	jg     0x4213c1
  4213dd:	call   0x80455b3a
  4213e2:	dec    esi
  4213e3:	ror    BYTE PTR [edx+0x49],0x95
  4213e7:	or     al,0x94
  4213e9:	ds mov edi,0x5e596e0b
  4213ef:	enter  0x8c09,0x4c
  4213f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213f4:	sbb    dl,BYTE PTR [eax]
  4213f6:	pop    ds
  4213f7:	repnz push edi
  4213f9:	(bad)
  4213fc:	out    0x24,eax
  4213fe:	adc    edx,DWORD PTR [edx-0x4b85f678]
  421404:	xchg   ebp,eax
  421405:	enter  0xe6ac,0x43
  421409:	xchg   ebx,eax
  42140a:	pushf  
  42140b:	jle    0x42142e
  42140d:	push   ebx
  42140e:	jno    0x421427
  421410:	pusha  
  421411:	pop    edi
  421412:	pop    eax
  421413:	xor    al,0x58
  421415:	(bad)  
  421416:	mov    esp,0xbad1de94
  42141b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42141c:	jne    0x4213b0
  42141e:	push   eax
  42141f:	mov    esi,0x15611e77
  421424:	sahf   
  421425:	jmp    0xc948dc8
  42142a:	sub    BYTE PTR [ebx],ch
  42142c:	sbb    BYTE PTR [edi-0x3c],ch
  42142f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421430:	xchg   ebx,eax
  421431:	sbb    eax,0xc3a1ab9
  421436:	pop    edi
  421437:	adc    DWORD PTR [edi],esp
  421439:	adc    ecx,eax
  42143b:	jmp    0xe086:0x3bca3fc6
  421442:	fcomp  QWORD PTR [edi+edi*4-0x1c]
  421446:	inc    edi
  421447:	mov    ds:0x32d0dc0e,al
  42144c:	out    0xe8,al
  42144e:	mul    dl
  421450:	repnz push ss
  421452:	and    cl,BYTE PTR [ebx-0x47]
  421455:	mov    edi,0x499fe0ea
  42145a:	aaa    
  42145b:	xor    BYTE PTR [ebp+0x1f],0x36
  42145f:	add    BYTE PTR [ecx+ebp*1],bh
  421462:	adc    al,0xaa
  421464:	loop   0x4214a2
  421466:	jns    0x4213f3
  421468:	add    DWORD PTR [esi],ebx
  42146a:	mov    ch,0x92
  42146c:	test   al,0x43
  42146e:	dec    edx
  42146f:	sahf   
  421470:	mov    bh,dl
  421472:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421473:	test   eax,0x614d3cd5
  421478:	(bad)  
  421479:	mov    eax,gs
  42147b:	jae    0x42145e
  42147d:	mov    bl,0xc0
  42147f:	jbe    0x4214fc
  421481:	jmp    0x570bc02a
  421486:	sbb    esi,esi
  421488:	xchg   ebp,eax
  421489:	call   0x1ed0d4ad
  42148e:	jns    0x421429
  421490:	pop    ebx
  421491:	push   0xa3f25858
  421496:	mov    bl,0xfb
  421498:	push   ds
  421499:	cli    
  42149a:	jmp    0x4214ad
  42149c:	push   esp
  42149d:	sti    
  42149e:	xchg   edx,eax
  42149f:	sbb    BYTE PTR [ebx+0x7a8a13c5],0x3b
  4214a6:	dec    ebp
  4214a7:	iret   
  4214a8:	or     DWORD PTR [edi+0x5c],eax
  4214ab:	adc    DWORD PTR [esp+ecx*8],ecx
  4214ae:	adc    esi,DWORD PTR [ebx]
  4214b0:	xchg   esp,eax
  4214b1:	jmp    0xcd086da5
  4214b6:	pop    edx
  4214b7:	daa    
  4214b8:	dec    ebx
  4214b9:	push   0x1f92b0fc
  4214be:	and    al,0xae
  4214c0:	popa   
  4214c1:	ss int 0x71
  4214c4:	mov    esi,0x64c1e45c
  4214c9:	xor    al,0xe8
  4214cb:	jne    0x421468
  4214cd:	or     eax,0x92cf5e92
  4214d2:	imul   ecx,edi,0xd2748b9a
  4214d8:	jmp    0x42153d
  4214da:	div    DWORD PTR [ebx-0x63e92f02]
  4214e0:	mov    bl,BYTE PTR [esi-0x3f50c7d8]
  4214e6:	inc    edx
  4214e7:	fistp  DWORD PTR [esi]
  4214e9:	mov    edi,0x6104982d
  4214ee:	push   edx
  4214ef:	call   0x11b4d192
  4214f4:	fs xor ebx,ebx
  4214f7:	cwde   
  4214f8:	cmc    
  4214f9:	loop   0x4214c1
  4214fb:	into   
  4214fc:	(bad)  
  4214fd:	cmc    
  4214fe:	shr    BYTE PTR [ecx-0x56e68350],cl
  421504:	pop    edi
  421505:	adc    al,0xc1
  421507:	stos   BYTE PTR es:[edi],al
  421508:	stc    
  421509:	repz and BYTE PTR [esi+0x5ff2b02e],dh
  421510:	inc    ebx
  421511:	nop
  421512:	lds    edi,FWORD PTR [ebp-0x60]
  421515:	rol    BYTE PTR [ebx+0xf],cl
  421518:	push   ebp
  421519:	rcl    DWORD PTR [ebx-0x76a0377d],0x2f
  421520:	sub    edi,DWORD PTR [edi]
  421522:	mov    BYTE PTR [ecx+edx*1],al
  421525:	sti    
  421526:	ret    0x4d98
  421529:	bound  esi,QWORD PTR [ebx+0x4b068c3a]
  42152f:	dec    edi
  421530:	lahf   
  421531:	mov    ah,0x57
  421533:	inc    edi
  421534:	mov    edi,0x3c38ea28
  421539:	push   esp
  42153a:	adc    al,0x92
  42153c:	mov    WORD PTR [esi+0x4078b618],ss
  421542:	or     BYTE PTR [esi+0x5d],bl
  421545:	pop    ecx
  421546:	ret    
  421547:	nop
  421548:	nop
  421549:	nop
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x70
  421556:	mov    DWORD PTR [ebp-0x48],0x0
  42155d:	mov    DWORD PTR [ebp-0x10],0x0
  421564:	mov    DWORD PTR [ebp-0x58],0x0
  42156b:	mov    DWORD PTR [ebp-0x8],0x0
  421572:	mov    DWORD PTR [ebp-0xc],0x0
  421579:	mov    DWORD PTR [ebp-0x30],0x0
  421580:	mov    DWORD PTR [ebp-0x4],0x0
  421587:	mov    DWORD PTR [ebp-0x5c],0x0
  42158e:	mov    DWORD PTR [ebp-0x54],0x0
  421595:	mov    DWORD PTR [ebp-0x18],0x0
  42159c:	mov    DWORD PTR [ebp-0x70],0x0
  4215a3:	mov    DWORD PTR [ebp-0x6c],0x0
  4215aa:	mov    DWORD PTR [ebp-0x2c],0x0
  4215b1:	mov    DWORD PTR [ebp-0x14],0x0
  4215b8:	mov    DWORD PTR [ebp-0x60],0x0
  4215bf:	mov    DWORD PTR [ebp-0x4c],0x0
  4215c6:	mov    DWORD PTR [ebp-0x50],0x0
  4215cd:	mov    DWORD PTR [ebp-0x68],0x0
  4215d4:	mov    eax,ds:0x428150
  4215d9:	mov    DWORD PTR [ebp-0x28],eax
  4215dc:	mov    ecx,DWORD PTR ds:0x428154
  4215e2:	mov    DWORD PTR [ebp-0x24],ecx
  4215e5:	mov    edx,DWORD PTR ds:0x428158
  4215eb:	mov    DWORD PTR [ebp-0x20],edx
  4215ee:	mov    al,ds:0x42815c
  4215f3:	mov    BYTE PTR [ebp-0x1c],al
  4215f6:	mov    ecx,DWORD PTR ds:0x428140
  4215fc:	mov    DWORD PTR [ebp-0x40],ecx
  4215ff:	mov    edx,DWORD PTR ds:0x428144
  421605:	mov    DWORD PTR [ebp-0x3c],edx
  421608:	mov    eax,ds:0x428148
  42160d:	mov    DWORD PTR [ebp-0x38],eax
  421610:	mov    cx,WORD PTR ds:0x42814c
  421617:	mov    WORD PTR [ebp-0x34],cx
  42161b:	mov    dl,BYTE PTR ds:0x42814e
  421621:	mov    BYTE PTR [ebp-0x32],dl
  421624:	mov    DWORD PTR [ebp-0x2c],0x40
  42162b:	mov    eax,DWORD PTR [ebp-0x70]
  42162e:	push   eax
  42162f:	call   DWORD PTR ds:0x428130
  421635:	mov    ecx,DWORD PTR [ebp-0x70]
  421638:	push   ecx
  421639:	call   DWORD PTR ds:0x428020
  42163f:	lea    edx,[ebp-0x10]
  421642:	push   edx
  421643:	lea    eax,[ebp-0x18]
  421646:	push   eax
  421647:	call   DWORD PTR ds:0x428000
  42164d:	test   eax,eax
  42164f:	jne    0x421662
  421651:	push   0x0
  421653:	call   DWORD PTR ds:0x428008
  421659:	mov    ecx,DWORD PTR [ebp-0x10]
  42165c:	add    ecx,0x1
  42165f:	mov    DWORD PTR [ebp-0x10],ecx
  421662:	mov    BYTE PTR [ebp-0x40],0x56
  421666:	call   DWORD PTR ds:0x42801c
  42166c:	mov    DWORD PTR [ebp-0x30],eax
  42166f:	mov    BYTE PTR [ebp-0x3e],0x72
  421673:	movzx  edx,WORD PTR [ebp-0x30]
  421677:	test   edx,edx
  421679:	jne    0x4216c5
  42167b:	mov    BYTE PTR [ebp-0x34],0x0
  42167f:	mov    DWORD PTR [ebp-0x18],0xe0d
  421686:	lea    eax,[ebp-0x28]
  421689:	push   eax
  42168a:	call   DWORD PTR ds:0x428018
  421690:	mov    DWORD PTR [ebp-0x60],eax
  421693:	mov    DWORD PTR [ebp-0x58],0x3a
  42169a:	lea    ecx,[ebp-0x40]
  42169d:	push   ecx
  42169e:	mov    edx,DWORD PTR [ebp-0x60]
  4216a1:	push   edx
  4216a2:	call   DWORD PTR ds:0x428014
  4216a8:	mov    DWORD PTR [ebp-0x44],eax
  4216ab:	mov    DWORD PTR [ebp-0x4],0x75244bed
  4216b2:	mov    eax,DWORD PTR [ebp-0x60]
  4216b5:	push   eax
  4216b6:	call   DWORD PTR ds:0x428010
  4216bc:	mov    DWORD PTR [ebp-0x68],0x110577
  4216c3:	jmp    0x4216e5
  4216c5:	mov    BYTE PTR ds:0x447e30,0x0
  4216cc:	mov    BYTE PTR ds:0x42bd78,0x0
  4216d3:	push   0x38270
  4216d8:	call   DWORD PTR ds:0x428134
  4216de:	mov    BYTE PTR ds:0x445750,0x0
  4216e5:	mov    DWORD PTR [ebp-0x30],0x410000
  4216ec:	mov    ecx,DWORD PTR [ebp-0x70]
  4216ef:	push   ecx
  4216f0:	call   DWORD PTR ds:0x428034
  4216f6:	push   DWORD PTR [ebp-0x2c]
  4216f9:	push   0x1000
  4216fe:	mov    eax,DWORD PTR [ebp-0x18]
  421701:	add    eax,0x23
  421704:	add    eax,0x23
  421707:	push   eax
  421708:	xor    eax,eax
  42170a:	push   eax
  42170b:	mov    ecx,DWORD PTR [ebp-0x44]
  42170e:	call   ecx
  421710:	mov    edx,eax
  421712:	mov    DWORD PTR [ebp-0x8],edx
  421715:	mov    edx,DWORD PTR [ebp-0x68]
  421718:	sub    edx,0xdae0b
  42171e:	mov    DWORD PTR [ebp-0x68],edx
  421721:	cmp    DWORD PTR [ebp-0x8],0x0
  421725:	jne    0x42172e
  421727:	mov    BYTE PTR ds:0x445750,0x0
  42172e:	mov    eax,DWORD PTR [ebp-0x8]
  421731:	add    eax,DWORD PTR [ebp-0x18]
  421734:	mov    ecx,DWORD PTR [ebp-0x4]
  421737:	mov    DWORD PTR [eax],ecx
  421739:	push   0x64
  42173b:	push   0x0
  42173d:	call   DWORD PTR ds:0x42804c
  421743:	push   DWORD PTR ds:0x428018
  421749:	pop    edx
  42174a:	mov    DWORD PTR [ebp-0x6c],edx
  42174d:	mov    edx,DWORD PTR [ebp-0x8]
  421750:	add    edx,DWORD PTR [ebp-0x58]
  421753:	mov    DWORD PTR [ebp-0x5c],edx
  421756:	mov    eax,ds:0x428014
  42175b:	mov    DWORD PTR [ebp-0x4c],eax
  42175e:	mov    ecx,DWORD PTR [ebp-0x8]
  421761:	add    ecx,DWORD PTR [ebp-0x18]
  421764:	mov    edx,DWORD PTR [ebp+0x8]
  421767:	mov    DWORD PTR [ecx+0x4],edx
  42176a:	mov    eax,DWORD PTR [ebp-0x8]
  42176d:	add    eax,DWORD PTR [ebp-0x18]
  421770:	mov    DWORD PTR [ebp-0xc],eax
  421773:	mov    ecx,DWORD PTR [ebp-0x60]
  421776:	push   ecx
  421777:	call   DWORD PTR ds:0x428048
  42177d:	cmp    DWORD PTR [ebp-0x68],0x0
  421781:	jbe    0x42179e
  421783:	mov    edx,DWORD PTR [ebp-0xc]
  421786:	push   edx
  421787:	mov    eax,DWORD PTR [ebp-0x18]
  42178a:	push   eax
  42178b:	mov    ecx,DWORD PTR [ebp-0x30]
  42178e:	add    ecx,DWORD PTR [ebp-0x68]
  421791:	push   ecx
  421792:	mov    edx,DWORD PTR [ebp-0x8]
  421795:	push   edx
  421796:	call   0x411000
  42179b:	add    esp,0x10
  42179e:	push   0xffff
  4217a3:	mov    eax,DWORD PTR [ebp-0x70]
  4217a6:	push   eax
  4217a7:	call   DWORD PTR ds:0x428054
  4217ad:	cmp    DWORD PTR [ebp-0x5c],0x0
  4217b1:	je     0x4217c1
  4217b3:	push   DWORD PTR [ebp-0x4c]
  4217b6:	push   DWORD PTR [ebp-0x6c]
  4217b9:	mov    edx,DWORD PTR [ebp-0x5c]
  4217bc:	push   eax
  4217bd:	jmp    edx
  4217bf:	jmp    0x4217d2
  4217c1:	mov    ecx,DWORD PTR [ebp+0x8]
  4217c4:	mov    DWORD PTR [ebp-0x14],ecx
  4217c7:	push   0x0
  4217c9:	push   0x3d
  4217cb:	push   0x20
  4217cd:	call   0x4229f6
  4217d2:	mov    eax,0x1
  4217d7:	mov    esp,ebp
  4217d9:	pop    ebp
  4217da:	ret    
  4217db:	int3   
  4217dc:	int3   
  4217dd:	int3   
  4217de:	int3   
  4217df:	int3   
  4217e0:	push   ebp
  4217e1:	mov    ebp,esp
  4217e3:	sub    esp,0x8
  4217e6:	push   esi
  4217e7:	mov    DWORD PTR [ebp-0x4],0x0
  4217ee:	call   DWORD PTR ds:0x42802c
  4217f4:	mov    eax,ds:0x42801c
  4217f9:	push   0x0
  4217fb:	push   0x0
  4217fd:	push   0x0
  4217ff:	push   0x0
  421801:	mov    DWORD PTR [ebp-0x8],eax
  421804:	call   0x4229f0
  421809:	call   DWORD PTR ds:0x428028
  42180f:	push   0x0
  421811:	push   0x4e
  421813:	push   0x1e
  421815:	push   0x0
  421817:	push   0xffffffff
  421819:	call   DWORD PTR ds:0x428024
  42181f:	mov    esi,DWORD PTR [ebp-0x8]
  421822:	call   esi
  421824:	mov    DWORD PTR [ebp-0x4],eax
  421827:	mov    esi,DWORD PTR [ebp-0x4]
  42182a:	cmp    esi,0x57
  42182d:	jne    0x42183c
  42182f:	push   0xdc01db91
  421834:	call   0x421550
  421839:	add    esp,0x4
  42183c:	push   esi
  42183d:	call   DWORD PTR ds:0x428034
  421843:	xor    eax,eax
  421845:	pop    esi
  421846:	mov    esp,ebp
  421848:	pop    ebp
  421849:	ret    
  42184a:	nop
  42184b:	nop
  42184c:	nop
  42184d:	nop
  42184e:	nop
  42184f:	nop
  421850:	sub    esp,0x10
  421853:	push   0xa
  421855:	push   0x0
  421857:	push   0x0
  421859:	call   DWORD PTR ds:0x428044
  42185f:	call   DWORD PTR ds:0x428040
  421865:	lea    eax,[esp+0x0]
  421869:	push   eax
  42186a:	call   DWORD PTR ds:0x42803c
  421870:	push   0x0
  421872:	call   DWORD PTR ds:0x428038
  421878:	cmp    WORD PTR [esp+0x0],0x0
  42187e:	push   0x0
  421880:	je     0x421899
  421882:	push   0x0
  421884:	call   DWORD PTR ds:0x428138
  42188a:	push   0x0
  42188c:	call   0x4217e0
  421891:	add    esp,0x4
  421894:	jmp    0x4229cc
  421899:	call   DWORD PTR ds:0x428050
  42189f:	jmp    FWORD PTR [ebp+0x5c]
  4218a2:	pop    ds
  4218a3:	jb     0x42183b
  4218a5:	inc    esp
  4218a6:	sub    dl,BYTE PTR [ebp-0x6f]
  4218a9:	aaa    
  4218aa:	repz sub eax,0x8f06df7f
  4218b0:	retf   0x4495
  4218b3:	sub    dl,BYTE PTR [ebp-0x6b]
  4218b6:	aaa    
  4218b7:	rep ins DWORD PTR es:[edi],dx
  4218b9:	and    BYTE PTR [eax],0x6
  4218bc:	(bad)  
  4218bd:	jb     0x421854
  4218bf:	inc    esp
  4218c0:	sub    dl,BYTE PTR [ebp-0x6b]
  4218c3:	aaa    
  4218c4:	repz sub eax,0x8f062080
  4218ca:	jb     0x421861
  4218cc:	inc    esp
  4218cd:	sub    dl,BYTE PTR [ebp-0x6b]
  4218d0:	aaa    
  4218d1:	repz sub eax,0x8f062080
  4218d7:	jb     0x42186e
  4218d9:	inc    esp
  4218da:	sub    dl,BYTE PTR [ebp+0x6d]
  4218dd:	aaa    
  4218de:	repz sub eax,0x81bc3f8e
  4218e4:	jb     0x421907
  4218e6:	dec    ebp
  4218e7:	out    0x74,eax
  4218e9:	sub    eax,0xa1e0bf36
  4218ee:	je     0x42195e
  4218f0:	out    0x1,al
  4218f2:	mov    ch,0x34
  4218f4:	pop    eax
  4218f5:	cmp    dh,dl
  4218f7:	inc    ebp
  4218f8:	xchg   edx,eax
  4218f9:	inc    eax
  4218fa:	mov    al,ds:0x1ce16743
  4218ff:	cli    
  421900:	xor    BYTE PTR [edx],cl
  421902:	aaa    
  421903:	lock pop ss
  421905:	sbb    DWORD PTR [eax-0x12],0x52e16f00
  42190c:	ror    DWORD PTR [ebx],1
  42190e:	jns    0x421985
  421910:	clc    
  421911:	pop    eax
  421912:	xchg   edi,eax
  421913:	dec    eax
  421914:	scas   al,BYTE PTR es:[edi]
  421915:	sub    eax,0x9556850b
  42191a:	inc    esp
  42191b:	sub    dl,BYTE PTR [ebp-0x6b]
  42191e:	aaa    
  42191f:	repz sub bl,BYTE PTR [ecx]
  421922:	fcomp  QWORD PTR [edi-0x34]
  421925:	mov    al,BYTE PTR [edi]
  421927:	dec    esi
  421928:	imul   ebp,DWORD PTR [ebp-0x2a4fc2f9],0xea5e2a12
  421932:	jle    0x4218d3
  421934:	sbb    edx,edx
  421936:	(bad)  
  421937:	lahf   
  421938:	outs   dx,DWORD PTR ds:[esi]
  421939:	xchg   esi,eax
  42193a:	adc    eax,0x1dfee28a
  42193f:	js     0x42190e
  421941:	and    DWORD PTR [ebx],edx
  421943:	pop    edi
  421944:	std    
  421945:	iret   
  421946:	popa   
  421947:	daa    
  421948:	lods   al,BYTE PTR ds:[esi]
  421949:	scas   al,BYTE PTR es:[edi]
  42194a:	aas    
  42194b:	test   DWORD PTR [ebp*2+0x151f20d6],esi
  421952:	es stc 
  421954:	addr16 js 0x421909
  421957:	or     al,0xc5
  421959:	repnz xchg esp,eax
  42195b:	dec    esi
  42195c:	jb     0x42190b
  42195e:	pop    es
  42195f:	cmp    eax,0x2a13d5b0
  421964:	cs jbe 0x421947
  421967:	lahf   
  421968:	sti    
  421969:	repnz aad 0x9f
  42196c:	jp     0x421979
  42196e:	mov    edi,0xb263788a
  421973:	js     0x421912
  421975:	mov    esp,0x52cd5fb8
  42197a:	sti    
  42197b:	daa    
  42197c:	ret    0x94d8
  42197f:	test   DWORD PTR [edx],ebp
  421981:	lock dec ebx
  421983:	and    BYTE PTR [edi],dl
  421985:	ins    DWORD PTR es:[edi],dx
  421986:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421987:	stc    
  421988:	jg     0x421973
  42198a:	inc    ebx
  42198b:	outs   dx,BYTE PTR ds:[esi]
  42198c:	int3   
  42198d:	mov    al,BYTE PTR [edi]
  42198f:	dec    esi
  421990:	sub    dl,BYTE PTR [ebp-0x6b]
  421993:	aaa    
  421994:	repz sub eax,0xca562080
  42199a:	jb     0x421931
  42199c:	or     BYTE PTR [ebx],ch
  42199e:	push   edi
  42199f:	xchg   ebp,eax
  4219a0:	fist   DWORD PTR [eax]
  4219a2:	jb     0x421973
  4219a4:	and    BYTE PTR [esi],al
  4219a6:	(bad)  
  4219a7:	jb     0x42193e
  4219a9:	inc    esp
  4219aa:	sub    dl,BYTE PTR [ebp+0x75]
  4219ad:	aaa    
  4219ae:	lock sub al,0x8b
  4219b1:	and    DWORD PTR [edi+ecx*4],ecx
  4219b4:	jb     0x421a2f
  4219b6:	inc    eax
  4219b7:	sub    dl,BYTE PTR [ebp-0x6f]
  4219ba:	xor    ebx,esi
  4219bc:	sub    eax,0x8e062080
  4219c1:	iret   
  4219c2:	xchg   ebp,eax
  4219c3:	inc    esp
  4219c4:	sub    al,BYTE PTR [ebp-0x6b]
  4219c7:	aaa    
  4219c8:	repz sub eax,0x8f062085
  4219ce:	xor    edx,DWORD PTR [ebp-0x6aaac5bc]
  4219d4:	aaa    
  4219d5:	icebp  
  4219d6:	sub    eax,0x8e062580
  4219db:	jb     0x421972
  4219dd:	inc    esp
  4219de:	sub    dl,BYTE PTR [ebp-0x70]
  4219e1:	aaa    
  4219e2:	repnz sub eax,0x8f062080
  4219e8:	jb     0x4219ff
  4219ea:	dec    edi
  4219eb:	sub    dl,BYTE PTR [ebp-0x6f]
  4219ee:	aaa    
  4219ef:	pause  
  4219f1:	mov    cl,0x25
  4219f3:	push   es
  4219f4:	lea    esi,[edx-0x6b]
  4219f7:	les    ebp,FWORD PTR [edx]
  4219f9:	push   ebp
  4219fa:	test   DWORD PTR [edi],esi
  4219fc:	repz cmp eax,0x8f062080
  421a02:	bound  edx,QWORD PTR [ebp-0x6aaac5bc]
  421a08:	aaa    
  421a09:	repz sub eax,0x8f063080
  421a0f:	jb     0x4219a6
  421a11:	inc    esp
  421a12:	sub    dl,BYTE PTR [ebp-0x6b]
  421a15:	aaa    
  421a16:	repz sub eax,0x8f0d4e04
  421a1c:	sbb    edx,DWORD PTR [esi-0x5aaad5bc]
  421a22:	cmp    al,0xf3
  421a24:	loop   0x4219e3
  421a26:	and    BYTE PTR [esi],al
  421a28:	(bad)  
  421a29:	jb     0x4219c0
  421a2b:	inc    esp
  421a2c:	sub    dl,BYTE PTR [ebp-0x6b]
  421a2f:	aaa    
  421a30:	repz sub eax,0x8f062080
  421a36:	jb     0x4219cd
  421a38:	inc    esp
  421a39:	sub    dl,BYTE PTR [ebp-0x6b]
  421a3c:	aaa    
  421a3d:	repz sub eax,0x8f062080
  421a43:	jb     0x4219da
  421a45:	inc    esp
  421a46:	sub    dl,BYTE PTR [ebp-0x6b]
  421a49:	aaa    
  421a4a:	repz sub eax,0x8f062080
  421a50:	jb     0x4219e7
  421a52:	inc    esp
  421a53:	sub    dl,BYTE PTR [ebp-0x6b]
  421a56:	aaa    
  421a57:	repz sub eax,0x8f062080
  421a5d:	jb     0x4219f4
  421a5f:	inc    esp
  421a60:	sub    dl,BYTE PTR [ebp-0x6b]
  421a63:	aaa    
  421a64:	repz sub eax,0x8f062080
  421a6a:	jb     0x421a01
  421a6c:	inc    esp
  421a6d:	sub    dl,BYTE PTR [ebp-0x6b]
  421a70:	aaa    
  421a71:	repz sub eax,0x8f062080
  421a77:	jb     0x421a0e
  421a79:	inc    esp
  421a7a:	sub    dl,BYTE PTR [ebp-0x6b]
  421a7d:	aaa    
  421a7e:	repz sub eax,0x8f062080
  421a84:	jb     0x421a1b
  421a86:	inc    esp
  421a87:	sub    dl,BYTE PTR [ebp-0x6b]
  421a8a:	aaa    
  421a8b:	repz sub eax,0xa1062080
  421a91:	push   es
  421a92:	lock cmp al,0x5e
  421a95:	push   ebp
  421a96:	xchg   ebp,eax
  421a97:	aaa    
  421a98:	repz or eax,0x9f06208b
  421a9e:	jb     0x421a35
  421aa0:	inc    esp
  421aa1:	adc    BYTE PTR [ecx-0x6b],dl
  421aa4:	aaa    
  421aa5:	imul   DWORD PTR ds:0xcc437080
  421aab:	inc    eax
  421aac:	ror    DWORD PTR [ebx],0x2a
  421aaf:	push   ebp
  421ab0:	xchg   ebp,eax
  421ab1:	aaa    
  421ab2:	repz sub eax,0x6f0620a0
  421ab8:	pop    esp
  421ab9:	out    0x37,eax
  421abb:	pop    eax
  421abc:	ss xchg ebp,eax
  421abe:	aaa    
  421abf:	repz sub eax,0x8f0620d0
  421ac5:	inc    edx
  421ac6:	sahf   
  421ac7:	inc    esp
  421ac8:	sub    al,BYTE PTR ds:0x13f33795
  421ace:	test   BYTE PTR [eax],ah
  421ad0:	push   es
  421ad1:	(bad)  
  421ad2:	jb     0x421a69
  421ad4:	inc    esp
  421ad5:	sub    dl,BYTE PTR [ebp-0x6b]
  421ad8:	aaa    
  421ad9:	repz sub eax,0x8f060080
  421adf:	xchg   edx,eax
  421ae0:	xchg   ebp,eax
  421ae1:	inc    esp
  421ae2:	sub    dl,BYTE PTR [ebp-0x6b]
  421ae5:	aaa    
  421ae6:	repz sub eax,0x8f062080
  421aec:	jb     0x421a83
  421aee:	inc    esp
  421aef:	sub    dl,BYTE PTR [ebp-0x6b]
  421af2:	aaa    
  421af3:	repz sub eax,0x8f062080
  421af9:	jb     0x421a90
  421afb:	inc    esp
  421afc:	sub    dl,BYTE PTR [ebp-0x6b]
  421aff:	aaa    
  421b00:	repz sub eax,0x8f062080
  421b06:	jb     0x421a9d
  421b08:	inc    esp
  421b09:	sub    dl,BYTE PTR [ebp-0x6b]
  421b0c:	aaa    
  421b0d:	repz sub eax,0x8f062080
  421b13:	jb     0x421aaa
  421b15:	inc    esp
  421b16:	sub    dl,BYTE PTR [ebp-0x6b]
  421b19:	aaa    
  421b1a:	repz sub eax,0x8f062080
  421b20:	jb     0x421ab7
  421b22:	inc    esp
  421b23:	sub    dl,BYTE PTR [ebp-0x6b]
  421b26:	aaa    
  421b27:	repz sub eax,0x8f062080
  421b2d:	jb     0x421ac4
  421b2f:	inc    esp
  421b30:	sub    dl,BYTE PTR [ebp-0x6b]
  421b33:	aaa    
  421b34:	repz sub eax,0x8f062080
  421b3a:	jb     0x421ad1
  421b3c:	inc    esp
  421b3d:	sub    dl,BYTE PTR [ebp-0x6b]
  421b40:	aaa    
  421b41:	repz sub eax,0x8f062080
  421b47:	jb     0x421ade
  421b49:	inc    esp
  421b4a:	sub    dl,BYTE PTR [ebp-0x6b]
  421b4d:	aaa    
  421b4e:	repz sub eax,0x8f062080
  421b54:	jb     0x421aeb
  421b56:	inc    esp
  421b57:	sub    dl,BYTE PTR [ebp-0x6b]
  421b5a:	aaa    
  421b5b:	repz sub eax,0x8f062080
  421b61:	jb     0x421af8
  421b63:	inc    esp
  421b64:	sub    dl,BYTE PTR [ebp-0x6b]
  421b67:	aaa    
  421b68:	repz sub eax,0x8f062080
  421b6e:	jb     0x421b05
  421b70:	inc    esp
  421b71:	sub    dl,BYTE PTR [ebp-0x6b]
  421b74:	aaa    
  421b75:	repz sub eax,0x8f062080
  421b7b:	jb     0x421b12
  421b7d:	inc    esp
  421b7e:	sub    dl,BYTE PTR [ebp-0x6b]
  421b81:	aaa    
  421b82:	repz sub eax,0x8f062080
  421b88:	jb     0x421b1f
  421b8a:	inc    esp
  421b8b:	sub    dl,BYTE PTR [ebp-0x6b]
  421b8e:	aaa    
  421b8f:	repz sub eax,0x8f062080
  421b95:	jb     0x421b2c
  421b97:	inc    esp
  421b98:	sub    dl,BYTE PTR [ebp-0x6b]
  421b9b:	aaa    
  421b9c:	repz sub eax,0x8f062080
  421ba2:	jb     0x421b39
  421ba4:	inc    esp
  421ba5:	sub    dl,BYTE PTR [ebp-0x6b]
  421ba8:	aaa    
  421ba9:	repz sub eax,0x8f062080
  421baf:	jb     0x421b46
  421bb1:	inc    esp
  421bb2:	sub    dl,BYTE PTR [ebp-0x6b]
  421bb5:	aaa    
  421bb6:	repz sub eax,0x8f062080
  421bbc:	jb     0x421b53
  421bbe:	inc    esp
  421bbf:	sub    dl,BYTE PTR [ebp-0x6b]
  421bc2:	aaa    
  421bc3:	repz sub eax,0x8f062080
  421bc9:	jb     0x421b60
  421bcb:	inc    esp
  421bcc:	sub    dl,BYTE PTR [ebp-0x6b]
  421bcf:	aaa    
  421bd0:	repz sub eax,0x8f062080
  421bd6:	jb     0x421b6d
  421bd8:	inc    esp
  421bd9:	sub    dl,BYTE PTR [ebp-0x6b]
  421bdc:	aaa    
  421bdd:	repz sub eax,0x8f062080
  421be3:	jb     0x421b7a
  421be5:	inc    esp
  421be6:	sub    dl,BYTE PTR [ebp-0x6b]
  421be9:	aaa    
  421bea:	repz sub eax,0x8f062080
  421bf0:	jb     0x421b87
  421bf2:	inc    esp
  421bf3:	sub    dl,BYTE PTR [ebp-0x6b]
  421bf6:	aaa    
  421bf7:	repz sub eax,0x8f062080
  421bfd:	jb     0x421b94
  421bff:	inc    esp
  421c00:	sub    dl,BYTE PTR [ebp-0x6b]
  421c03:	aaa    
  421c04:	repz sub eax,0x8f062080
  421c0a:	jb     0x421ba1
  421c0c:	inc    esp
  421c0d:	sub    dl,BYTE PTR [ebp-0x6b]
  421c10:	aaa    
  421c11:	repz sub eax,0x8f062080
  421c17:	jb     0x421bae
  421c19:	inc    esp
  421c1a:	sub    dl,BYTE PTR [ebp-0x6b]
  421c1d:	aaa    
  421c1e:	repz sub eax,0x8f062080
  421c24:	jb     0x421bbb
  421c26:	inc    esp
  421c27:	sub    dl,BYTE PTR [ebp-0x6b]
  421c2a:	aaa    
  421c2b:	repz sub eax,0x8f062080
  421c31:	jb     0x421bc8
  421c33:	inc    esp
  421c34:	sub    dl,BYTE PTR [ebp-0x6b]
  421c37:	aaa    
  421c38:	repz sub eax,0x8f062080
  421c3e:	jb     0x421bd5
  421c40:	inc    esp
  421c41:	sub    dl,BYTE PTR [ebp-0x6b]
  421c44:	aaa    
  421c45:	repz sub eax,0x8f062080
  421c4b:	jb     0x421be2
  421c4d:	inc    esp
  421c4e:	sub    dl,BYTE PTR [ebp-0x6b]
  421c51:	aaa    
  421c52:	repz sub eax,0x8f062080
  421c58:	jb     0x421bef
  421c5a:	inc    esp
  421c5b:	sub    dl,BYTE PTR [ebp-0x6b]
  421c5e:	aaa    
  421c5f:	repz sub eax,0x8f062080
  421c65:	jb     0x421bfc
  421c67:	inc    esp
  421c68:	sub    dl,BYTE PTR [ebp-0x6b]
  421c6b:	aaa    
  421c6c:	repz sub eax,0x8f062080
  421c72:	jb     0x421c09
  421c74:	inc    esp
  421c75:	sub    dl,BYTE PTR [ebp-0x6b]
  421c78:	aaa    
  421c79:	repz sub eax,0x8f062080
  421c7f:	jb     0x421c16
  421c81:	inc    esp
  421c82:	sub    dl,BYTE PTR [ebp-0x6b]
  421c85:	aaa    
  421c86:	repz sub eax,0x8f062080
  421c8c:	jb     0x421c23
  421c8e:	inc    esp
  421c8f:	sub    dl,BYTE PTR [ebp-0x6b]
  421c92:	aaa    
  421c93:	repz sub eax,0x8f062080
  421c99:	jb     0x421c30
  421c9b:	inc    esp
  421c9c:	sub    dl,BYTE PTR [ebp-0x6b]
  421c9f:	aaa    
  421ca0:	mov    ah,0xc3
  421ca2:	mov    ah,BYTE PTR [eax]
  421ca4:	sub    DWORD PTR [edi+0x2a448572],ecx
  421caa:	jg     0x421ce3
  421cac:	in     eax,dx
  421cad:	or     BYTE PTR [ebx+0x7f],0xd
  421cb1:	cwde   
  421cb2:	or     BYTE PTR [edx],ah
  421cb4:	js     0x421d28
  421cb6:	ret    0x2146
  421cb9:	mov    ds:0x7a045c95,al
  421cbe:	adc    eax,0x2983c53e
  421cc3:	into   
  421cc4:	fist   WORD PTR [ecx+esi*8]
  421cc7:	fisttp QWORD PTR [edi+0x10]
  421cca:	pop    ds
  421ccb:	aas    
  421ccc:	mov    esp,0x853243d
  421cd1:	push   ebp
  421cd2:	mov    dl,0x90
  421cd4:	jnp    0x421d4e
  421cd6:	ror    DWORD PTR [ebp-0x51],1
  421cd9:	mov    ebp,0x9b50484f
  421cde:	xor    eax,0x3cd56c85
  421ce3:	outs   dx,DWORD PTR ds:[esi]
  421ce4:	dec    ecx
  421ce5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ce6:	jecxz  0x421c7d
  421ce8:	das    
  421ce9:	push   0xc9c1d8ed
  421cee:	lds    ebx,FWORD PTR [ebp+0x4d]
  421cf1:	mov    ecx,0x91bb2f04
  421cf6:	rcl    DWORD PTR [ebx+0x6a],cl
  421cf9:	mov    DWORD PTR [edx-0x12],eax
  421cfc:	pushf  
  421cfd:	neg    DWORD PTR cs:[ebp+0x48df3557]
  421d04:	arpl   WORD PTR [eax-0x7],bx
  421d07:	lea    edi,[ecx+0x20]
  421d0a:	enter  0xe0de,0x78
  421d0e:	dec    edi
  421d0f:	lahf   
  421d10:	and    DWORD PTR [ebx+eiz*8+0x56],edi
  421d14:	test   eax,0x6b564d33
  421d19:	inc    ebp
  421d1a:	imul   edx,DWORD PTR [eax-0x299e6b84],0x4d
  421d21:	sbb    al,0x53
  421d23:	sub    DWORD PTR [ebx-0x55],ebp
  421d26:	cwde   
  421d27:	retf   
  421d28:	nop
  421d29:	inc    edx
  421d2a:	or     DWORD PTR ss:[edx-0x48],edx
  421d2e:	in     al,0x23
  421d30:	or     al,0xe5
  421d32:	jp     0x421d82
  421d34:	mov    cl,0x23
  421d36:	push   ss
  421d37:	mov    BYTE PTR [ecx-0x7f],ch
  421d3a:	jle    0x421d71
  421d3c:	sbb    esi,edi
  421d3e:	dec    edx
  421d3f:	loop   0x421d97
  421d41:	mov    ds:0x11f2db54,al
  421d46:	sub    BYTE PTR [ecx-0xc],dh
  421d49:	dec    esp
  421d4a:	test   al,0xd0
  421d4c:	mov    esi,0x2459bd65
  421d51:	mov    bl,0xc5
  421d53:	test   al,0x6c
  421d55:	rol    BYTE PTR [eax],1
  421d57:	mov    ds:0xa26e7a4b,eax
  421d5c:	sbb    BYTE PTR [ecx+0x1312a4be],dl
  421d62:	scas   eax,DWORD PTR es:[edi]
  421d63:	leave  
  421d64:	mov    bl,0x76
  421d66:	sub    DWORD PTR [eax-0x75bf84da],eax
  421d6c:	mov    edx,esi
  421d6e:	inc    ebp
  421d6f:	jecxz  0x421d5e
  421d71:	mov    BYTE PTR [edx+0x4e54defa],ah
  421d77:	mov    eax,ds:0x2536c676
  421d7c:	pop    eax
  421d7d:	loop   0x421d4e
  421d7f:	popf   
  421d80:	pop    ebx
  421d81:	push   edx
  421d82:	pop    ebx
  421d83:	and    BYTE PTR [ecx+ebp*2],al
  421d86:	mov    edx,0x77a0c76c
  421d8b:	out    0x53,al
  421d8d:	xchg   ch,bl
  421d8f:	enter  0xce59,0xd7
  421d93:	out    dx,al
  421d94:	out    0x67,eax
  421d96:	lahf   
  421d97:	inc    ecx
  421d98:	idiv   BYTE PTR [ebx+eiz*1]
  421d9b:	pop    ebp
  421d9c:	in     al,dx
  421d9d:	and    DWORD PTR [esi],ebp
  421d9f:	inc    edx
  421da0:	stos   DWORD PTR es:[edi],eax
  421da1:	sbb    ecx,DWORD PTR [edx]
  421da3:	scas   al,BYTE PTR es:[edi]
  421da4:	nop
  421da5:	xor    edi,ebp
  421da7:	and    ecx,DWORD PTR [ecx+0x15ad9a4]
  421dad:	lock addr16 repz jno 0x421d6e
  421db2:	mov    ch,BYTE PTR [ebx-0xc86ff49]
  421db8:	inc    edx
  421db9:	fiadd  DWORD PTR [eax]
  421dbb:	les    eax,FWORD PTR [ebx+ebx*1]
  421dbe:	fnstcw WORD PTR [ebp-0x3b]
  421dc1:	sbb    ebx,DWORD PTR [eax-0x55f99aa0]
  421dc7:	cmp    eax,ebp
  421dc9:	push   ebp
  421dca:	xor    eax,0x441ddb0f
  421dcf:	aad    0x6d
  421dd1:	xor    ecx,0x5d
  421dd4:	xchg   ebx,eax
  421dd5:	mov    eax,0xd5a1726c
  421dda:	mov    ecx,0x5e700cc5
  421ddf:	jecxz  0x421e55
  421de1:	pop    edi
  421de2:	mov    edi,0xdb066e74
  421de7:	inc    ebx
  421de8:	test   BYTE PTR [ecx],0xcf
  421deb:	and    BYTE PTR [esp+ebp*1],bh
  421dee:	ficomp DWORD PTR [ebx-0x67]
  421df1:	or     esp,esi
  421df3:	push   0x1ac2cf2d
  421df8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421df9:	fidiv  WORD PTR [edi-0x39ccd429]
  421dff:	dec    ebp
  421e00:	fisubr DWORD PTR [ecx-0x1b14386e]
  421e06:	js     0x421def
  421e08:	(bad)  [ebx+0x70]
  421e0b:	xlat   BYTE PTR ds:[ebx]
  421e0c:	dec    ebx
  421e0d:	jg     0x421e17
  421e0f:	dec    edi
  421e10:	mov    ch,0x14
  421e12:	sahf   
  421e13:	sahf   
  421e14:	div    BYTE PTR [ebp+0x58]
  421e17:	or     DWORD PTR [edx+eax*1],esp
  421e1a:	mov    eax,0x7ee09b1f
  421e1f:	mov    bl,0xb5
  421e21:	cmp    bl,BYTE PTR [esi]
  421e23:	dec    edx
  421e24:	retf   
  421e25:	lods   eax,DWORD PTR ds:[esi]
  421e26:	iret   
  421e27:	daa    
  421e28:	jecxz  0x421e36
  421e2a:	out    0x25,eax
  421e2c:	cmp    cl,dh
  421e2e:	jns    0x421e89
  421e30:	dec    edx
  421e31:	push   0x5a6029a5
  421e36:	pop    esi
  421e37:	das    
  421e38:	dec    ebx
  421e39:	and    BYTE PTR [ecx],al
  421e3b:	sti    
  421e3c:	repz xor dl,BYTE PTR [edx]
  421e3f:	inc    BYTE PTR [ebx]
  421e41:	dec    ebx
  421e42:	aaa    
  421e43:	fstp   DWORD PTR [ebx]
  421e45:	ins    BYTE PTR es:[edi],dx
  421e46:	mov    bl,0x28
  421e48:	shl    DWORD PTR [edx+0x29],cl
  421e4b:	cmp    eax,0x3aca7601
  421e50:	xor    eax,0x4c1c9cb1
  421e55:	adc    ebp,DWORD PTR [edi-0x6bb3a503]
  421e5b:	add    DWORD PTR [eax+0x1821d9d5],eax
  421e61:	mov    edi,0x64badcf6
  421e66:	out    dx,al
  421e67:	rcl    DWORD PTR [ebx+0x3cf286f0],1
  421e6d:	aad    0x5b
  421e6f:	jmp    0xc9ef:0xbcbe990e
  421e76:	call   0xb3a7:0x4f0ddba8
  421e7d:	arpl   ax,si
  421e7f:	pushf  
  421e80:	sub    BYTE PTR [ebx-0x34],cl
  421e83:	sahf   
  421e84:	pop    esi
  421e85:	repz rol eax,cl
  421e88:	popa   
  421e89:	int3   
  421e8a:	sbb    DWORD PTR [ebx-0x7f],0xfffffff0
  421e8e:	adc    edi,DWORD PTR [ecx+0x78]
  421e91:	and    edi,DWORD PTR [edx+edx*4]
  421e94:	jns    0x421e83
  421e96:	rol    DWORD PTR [ebp+0x5a],cl
  421e99:	sar    DWORD PTR [ecx-0x6b],1
  421e9c:	cmp    ah,ch
  421e9e:	test   al,0xf1
  421ea0:	lods   eax,DWORD PTR ds:[esi]
  421ea1:	jp     0x421eec
  421ea3:	sbb    DWORD PTR [ecx],ebx
  421ea5:	lods   al,BYTE PTR ds:[esi]
  421ea6:	add    ebx,DWORD PTR [ebx+0x4f]
  421ea9:	xor    DWORD PTR [eax+0x37],eax
  421eac:	cmp    eax,0xaf3da694
  421eb1:	lods   eax,DWORD PTR ds:[esi]
  421eb2:	rcl    bl,0x42
  421eb5:	call   0x8da2:0x18bc4388
  421ebc:	pop    edx
  421ebd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ebe:	add    ecx,DWORD PTR [edx-0x696627cc]
  421ec4:	push   ecx
  421ec5:	fcom   st(7)
  421ec7:	cdq    
  421ec8:	icebp  
  421ec9:	jno    0x421e5a
  421ecb:	fcomi  st,st(5)
  421ecd:	mov    fs,WORD PTR [ebx]
  421ecf:	lahf   
  421ed0:	push   eax
  421ed1:	leave  
  421ed2:	jbe    0x421f20
  421ed4:	mov    al,ch
  421ed6:	das    
  421ed7:	sub    DWORD PTR [ebp-0x54],ebp
  421eda:	shr    DWORD PTR [eax-0x4],cl
  421edd:	in     al,0x1a
  421edf:	es pop ss
  421ee1:	lock push ds
  421ee3:	xor    DWORD PTR [eax],ebp
  421ee5:	loop   0x421ebe
  421ee7:	leave  
  421ee8:	popf   
  421ee9:	cmp    dh,BYTE PTR [esi]
  421eeb:	xor    al,0x64
  421eed:	push   ebp
  421eee:	ds cmp al,0x7e
  421ef1:	sahf   
  421ef2:	dec    ebp
  421ef3:	cwde   
  421ef4:	cmp    DWORD PTR [edx],0x2e
  421ef7:	stos   DWORD PTR es:[edi],eax
  421ef8:	sub    DWORD PTR [ebx+edi*8+0x6b5c20e1],0xb
  421f00:	sub    BYTE PTR [eax-0xa31bdae],ch
  421f06:	fstp   st(0)
  421f08:	aaa    
  421f09:	loop   0x421f14
  421f0b:	(bad)  
  421f0c:	imul   eax
  421f0e:	pushf  
  421f0f:	or     ecx,esi
  421f11:	out    dx,eax
  421f12:	sub    ecx,eax
  421f14:	(bad)  [ecx+0x19]
  421f17:	push   esi
  421f18:	adc    edi,ebx
  421f1a:	push   esp
  421f1b:	test   eax,0xee15d9ae
  421f20:	(bad)  
  421f21:	jbe    0x421f3f
  421f23:	cdq    
  421f24:	jbe    0x421f7a
  421f26:	push   ss
  421f27:	nop
  421f28:	mov    eax,0x8dc588dd
  421f2d:	mov    eax,0xc1ebe771
  421f32:	dec    eax
  421f33:	add    DWORD PTR [edi],edx
  421f35:	add    ecx,DWORD PTR [edx]
  421f37:	fcmovbe st,st(7)
  421f39:	jnp    0x421ef0
  421f3b:	aaa    
  421f3c:	fld    TBYTE PTR [edi+0x44bf35b0]
  421f42:	xor    BYTE PTR [esi],cl
  421f44:	xor    eax,0xc08f98c3
  421f49:	push   ebx
  421f4a:	jmp    0x421f67
  421f4c:	mov    al,ds:0x2c42d1d0
  421f51:	(bad)  
  421f52:	cmp    ebx,esp
  421f54:	test   ch,bh
  421f56:	xor    esi,ebx
  421f58:	test   ebp,edx
  421f5a:	xchg   ecx,eax
  421f5b:	xchg   BYTE PTR [eax+0x41],dh
  421f5e:	jmp    0xfaa4:0xdcd11ce
  421f65:	and    esi,DWORD PTR [ecx-0x2208cd28]
  421f6b:	xchg   ebx,eax
  421f6c:	pop    ds
  421f6d:	push   edi
  421f6e:	mov    ebx,0x59586bba
  421f73:	or     al,0x81
  421f75:	fidiv  WORD PTR [edx+0xd684f35]
  421f7b:	jae    0x421efe
  421f7d:	and    al,0x32
  421f7f:	mov    fs,esi
  421f81:	fstp   QWORD PTR [edx+0x1a]
  421f84:	pop    edx
  421f85:	out    dx,eax
  421f86:	aam    0x23
  421f88:	fsubr  DWORD PTR [ebx-0x3d]
  421f8b:	xchg   DWORD PTR [ebp+0x18],esp
  421f8e:	std    
  421f8f:	cdq    
  421f90:	xor    bh,BYTE PTR [edi+0x1c4c6a1d]
  421f96:	rol    esp,cl
  421f98:	pop    esp
  421f99:	add    al,0x17
  421f9b:	jo     0x421fdd
  421f9d:	int3   
  421f9e:	sbb    eax,0x5b0b8d00
  421fa3:	mov    ah,0x88
  421fa5:	or     BYTE PTR [ebx],bh
  421fa7:	in     eax,dx
  421fa8:	pop    esp
  421fa9:	rcr    DWORD PTR [edx],cl
  421fab:	outs   dx,BYTE PTR ds:[esi]
  421fac:	jl     0x421ff5
  421fae:	mov    ecx,0x7052872d
  421fb3:	test   DWORD PTR [edx-0x1a],edx
  421fb6:	aad    0x75
  421fb8:	pop    esi
  421fb9:	stos   BYTE PTR es:[edi],al
  421fba:	mov    ds,esp
  421fbc:	mov    ds:0x7a25a17d,al
  421fc1:	ins    DWORD PTR es:[edi],dx
  421fc2:	popf   
  421fc3:	sbb    eax,DWORD PTR [edx]
  421fc5:	ja     0x421f52
  421fc7:	xchg   esp,eax
  421fc8:	jp     0x422031
  421fca:	adc    cl,BYTE PTR [edi-0x26b7e9e2]
  421fd0:	std    
  421fd1:	sub    ebp,DWORD PTR [ebx-0x23]
  421fd4:	or     edi,DWORD PTR [edx-0x48]
  421fd7:	dec    ebp
  421fd8:	pop    ss
  421fd9:	into   
  421fda:	mov    WORD PTR [edx-0x6d4aac38],?
  421fe0:	imul   ebx,ebp,0x3b
  421fe3:	es scas al,BYTE PTR es:[edi]
  421fe5:	add    BYTE PTR [ebp+ecx*8-0x5bb9329e],al
  421fec:	sbb    DWORD PTR [edi+ecx*8],edi
  421fef:	cmc    
  421ff0:	add    ch,al
  421ff2:	dec    esi
  421ff3:	and    DWORD PTR [ebx+esi*2],esi
  421ff6:	xor    ecx,DWORD PTR [ebp+0x4e]
  421ff9:	int3   
  421ffa:	or     edi,DWORD PTR [esi]
  421ffc:	adc    bl,ch
  421ffe:	push   ebx
  421fff:	ret    0x26c
  422002:	pop    ecx
  422003:	in     eax,0xd2
  422005:	fidivr DWORD PTR [ebx-0x4da4f9e3]
  42200b:	out    0x9e,eax
  42200d:	and    ch,BYTE PTR fs:[edi+edi*1-0x75]
  422012:	das    
  422013:	mov    DWORD PTR [eax+0x5d],edi
  422016:	and    eax,0x44ce48fd
  42201b:	(bad)  
  42201c:	(bad)  
  42201d:	loope  0x422005
  42201f:	jmp    0x788e77f6
  422024:	inc    ecx
  422025:	stos   BYTE PTR es:[edi],al
  422026:	lods   eax,DWORD PTR ds:[esi]
  422027:	cmp    ecx,DWORD PTR [eax-0x7e]
  42202a:	ja     0x422092
  42202c:	dec    esp
  42202d:	adc    dh,BYTE PTR [ebx-0x3982ed3a]
  422033:	cmp    DWORD PTR [edi+edi*2-0x66e0d395],ebp
  42203a:	push   ebp
  42203b:	sbb    al,0x7c
  42203d:	add    BYTE PTR [edi],dh
  42203f:	or     BYTE PTR [edi],cl
  422041:	sbb    al,0x69
  422043:	adc    esp,DWORD PTR [ecx]
  422045:	mov    ebp,0x6356d295
  42204a:	jp     0x42205c
  42204c:	pop    es
  42204d:	pop    ecx
  42204e:	ds push ebx
  422050:	mov    ds:0xc82220f3,eax
  422055:	enter  0xda2f,0x72
  422059:	dec    edi
  42205a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42205b:	sub    eax,0xf7734f64
  422060:	adc    dl,BYTE PTR [edi+eiz*2]
  422063:	cmp    eax,0x42fceda0
  422068:	aas    
  422069:	call   0x8da:0x5cc4b214
  422070:	(bad)  
  422072:	aad    0x3e
  422074:	adc    ah,BYTE PTR [ecx+0x5e]
  422077:	mov    ebx,0x9c5ce10a
  42207c:	cmp    edi,DWORD PTR [ebx-0x6a]
  42207f:	push   0x393c290e
  422084:	xchg   esp,eax
  422085:	pop    ecx
  422086:	pop    ds
  422087:	fxch   st(2)
  422089:	(bad)  
  42208a:	je     0x4220e7
  42208c:	aad    0x34
  42208e:	cmc    
  42208f:	ins    BYTE PTR es:[edi],dx
  422090:	dec    esp
  422091:	push   0x7c
  422093:	mov    ecx,0x5d3baf81
  422098:	mov    ch,0xc3
  42209a:	stc    
  42209b:	hlt    
  42209c:	mov    ebx,ds
  42209e:	jge    0x4220e3
  4220a0:	adc    al,bl
  4220a2:	xchg   edi,esp
  4220a4:	leave  
  4220a5:	xchg   edi,eax
  4220a6:	(bad)  
  4220a7:	sbb    bh,BYTE PTR [ebp-0x7818f52a]
  4220ad:	adc    BYTE PTR [esi],bl
  4220af:	xor    dh,al
  4220b1:	loopne 0x422111
  4220b3:	(bad)  
  4220b4:	lods   eax,DWORD PTR ds:[esi]
  4220b5:	add    BYTE PTR [edi+ebp*2-0x2d],0xaf
  4220ba:	repz push edx
  4220bc:	mov    esi,0x7091bcf8
  4220c1:	push   edx
  4220c2:	mov    ebx,0x5cb5d11c
  4220c7:	fiadd  WORD PTR [ebx]
  4220c9:	ficomp WORD PTR ds:0xa117513
  4220cf:	xor    ecx,DWORD PTR [ebx]
  4220d1:	test   eax,0x99b34b39
  4220d6:	mov    ch,0xf4
  4220d8:	jo     0x422092
  4220da:	fsub   QWORD PTR [edx]
  4220dc:	jno    0x42210f
  4220de:	retf   0xb2cd
  4220e1:	ss test ebp,0x21536d8
  4220e8:	les    esp,FWORD PTR [eax+0xf20e835]
  4220ee:	retf   0x8e27
  4220f1:	pop    es
  4220f2:	ja     0x422142
  4220f4:	or     DWORD PTR [ecx],eax
  4220f6:	pop    es
  4220f7:	aaa    
  4220f8:	xchg   esi,eax
  4220f9:	hlt    
  4220fa:	xchg   esi,eax
  4220fb:	mov    cl,0x5e
  4220fd:	(bad)  
  4220fe:	push   es
  4220ff:	(bad)  
  422100:	ja     0x4220f2
  422102:	or     eax,0xfa27d508
  422107:	sti    
  422108:	or     esi,0xffffff93
  42210b:	dec    ecx
  42210c:	fistp  DWORD PTR [edi+0x4473ba2]
  422112:	dec    ebp
  422113:	(bad)  
  422114:	cmp    BYTE PTR [edi-0x5254c869],dl
  42211a:	push   es
  42211b:	aaa    
  42211c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42211d:	sub    DWORD PTR es:[edx+0x3f6a6d3d],edi
  422124:	sub    al,0x2d
  422126:	inc    eax
  422127:	pop    ebp
  422128:	pop    ss
  422129:	int    0xa7
  42212b:	iret   
  42212c:	out    dx,al
  42212d:	inc    eax
  42212e:	and    BYTE PTR [edi-0x7],0xa8
  422132:	out    0x3d,eax
  422134:	or     eax,0x6f4510a8
  422139:	sub    dl,BYTE PTR [ebx]
  42213b:	sub    esi,DWORD PTR [ebx+ebp*1+0x17]
  42213f:	ins    DWORD PTR es:[edi],dx
  422140:	mov    es,ebp
  422142:	loope  0x4220f5
  422144:	mov    ah,0xfe
  422146:	loope  0x422123
  422148:	es push cs
  42214a:	stos   DWORD PTR es:[edi],eax
  42214b:	dec    ebx
  42214c:	scas   eax,DWORD PTR es:[edi]
  42214d:	in     eax,dx
  42214e:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  422150:	aad    0xc0
  422152:	imul   DWORD PTR [ecx+0x5499950e]
  422158:	xor    DWORD PTR [eax],0xffffffaf
  42215b:	add    al,0x52
  42215d:	dec    ecx
  42215e:	push   0x42
  422160:	xchg   esi,eax
  422161:	repnz and WORD PTR [ecx],cx
  422165:	dec    ebp
  422166:	fstp   QWORD PTR [eax+0x2e]
  422169:	adc    eax,0xd96cc746
  42216e:	push   edx
  42216f:	push   es
  422170:	or     al,0x1a
  422172:	(bad)
  422176:	nop
  422177:	jno    0x422185
  422179:	leave  
  42217a:	or     al,0x3e
  42217c:	cmp    eax,0x39a34ebf
  422181:	cmc    
  422182:	sbb    cl,BYTE PTR [ebx-0x7d]
  422185:	call   0x1f37:0x5030ac90
  42218c:	fwait
  42218d:	loop   0x42214a
  42218f:	jle    0x422162
  422191:	retf   0x1ec4
  422194:	shl    BYTE PTR [edi+0x62171cf9],0x3e
  42219b:	test   BYTE PTR [ebp-0x52],cl
  42219e:	or     DWORD PTR [edx],0x91a4830c
  4221a4:	sub    eax,0x9ab9469e
  4221a9:	and    edx,DWORD PTR ds:0x6a408a9c
  4221af:	into   
  4221b0:	jb     0x4221b3
  4221b2:	dec    BYTE PTR [ebp+0x10]
  4221b5:	and    al,0xbb
  4221b7:	retf   0x2a96
  4221ba:	jno    0x422171
  4221bc:	in     eax,0x64
  4221be:	aam    0x3d
  4221c0:	jp     0x42221f
  4221c2:	push   edi
  4221c3:	into   
  4221c4:	popf   
  4221c5:	out    0x8f,al
  4221c7:	pop    ebp
  4221c8:	std    
  4221c9:	dec    esi
  4221ca:	xchg   edx,eax
  4221cb:	jl     0x4221df
  4221cd:	jne    0x42220a
  4221cf:	imul   esi,DWORD PTR [eax+eiz*8-0x68],0x53
  4221d4:	mov    eax,0x6fe3dff7
  4221d9:	xor    esi,ebp
  4221db:	push   ebx
  4221dc:	push   edi
  4221dd:	sti    
  4221de:	mul    ah
  4221e0:	and    BYTE PTR [ecx],al
  4221e2:	inc    esi
  4221e3:	sub    al,0x65
  4221e5:	mov    ch,0x7
  4221e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221e8:	gs or  ecx,edi
  4221eb:	outs   dx,DWORD PTR ds:[esi]
  4221ec:	xchg   esi,eax
  4221ed:	aas    
  4221ee:	xlat   BYTE PTR ds:[ebx]
  4221ef:	cmp    bh,ah
  4221f1:	fwait
  4221f2:	addr16 dec ebp
  4221f4:	pop    es
  4221f5:	in     eax,0xe5
  4221f7:	int3   
  4221f8:	add    al,0x24
  4221fa:	rcr    DWORD PTR [eax+0x10],0xff
  4221fe:	lods   eax,DWORD PTR ds:[esi]
  4221ff:	inc    ebx
  422200:	xor    ah,0x29
  422203:	shl    BYTE PTR ds:0x243cbaaf,cl
  422209:	mov    ch,0xa8
  42220b:	mov    dl,0x75
  42220d:	cmp    BYTE PTR ds:0xf8622958,dh
  422213:	jp     0x42227f
  422215:	imul   ebx,DWORD PTR [esi],0xf8779a81
  42221b:	retf   0xa038
  42221e:	cs push 0x15f188f5
  422224:	out    dx,eax
  422225:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422226:	lahf   
  422227:	sbb    DWORD PTR [esi+0x17b4dc22],ebp
  42222d:	lds    ebp,FWORD PTR ds:0x56832f12
  422233:	lahf   
  422234:	adc    DWORD PTR [esi],esp
  422236:	(bad)  
  422238:	mov    bl,0xba
  42223a:	in     al,dx
  42223b:	mov    ebp,0xa25c242c
  422240:	inc    edi
  422241:	outs   dx,BYTE PTR ds:[esi]
  422242:	mov    eax,edi
  422244:	popa   
  422245:	sti    
  422246:	(bad)  
  422247:	loopne 0x4221fe
  422249:	jno    0x42223e
  42224b:	sub    cl,BYTE PTR [edi]
  42224d:	push   esp
  42224e:	call   0xeda6:0xaf2c2700
  422255:	popa   
  422256:	sbb    ecx,DWORD PTR [ebp+0x7153cacf]
  42225c:	pop    eax
  42225d:	shr    edi,1
  42225f:	xchg   esi,eax
  422260:	cmp    al,0x8d
  422262:	loopne 0x4222ce
  422264:	jno    0x42224c
  422266:	leave  
  422267:	out    dx,eax
  422268:	mov    bl,0xf8
  42226a:	jo     0x4222df
  42226c:	ret    0x8122
  42226f:	lods   eax,DWORD PTR ds:[esi]
  422270:	out    0x89,al
  422272:	xor    DWORD PTR [eax-0x6b14f889],eax
  422278:	cs mov ch,0xac
  42227b:	mov    esi,0x5d194d3a
  422280:	pop    edx
  422281:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422282:	test   edi,eax
  422284:	xor    DWORD PTR [ecx-0x59bca4bd],0xfffffff1
  42228b:	stos   DWORD PTR es:[edi],eax
  42228c:	sbb    al,0x9b
  42228e:	test   DWORD PTR [ebx+0x49078269],edi
  422294:	and    DWORD PTR [eax-0x7ba5bcd6],ebp
  42229a:	jmp    0x28834fba
  42229f:	pop    ecx
  4222a0:	lods   al,BYTE PTR ds:[esi]
  4222a1:	sar    DWORD PTR [edi+0x4b49196],cl
  4222a7:	pop    esp
  4222a8:	aad    0x5b
  4222aa:	sbb    eax,0xfd2b8359
  4222af:	fsubr  QWORD PTR [ebp-0x13]
  4222b2:	sub    edx,DWORD PTR [esi]
  4222b4:	lods   eax,DWORD PTR ds:[esi]
  4222b5:	aam    0xa6
  4222b7:	xor    eax,eax
  4222b9:	xor    cl,BYTE PTR [ebx+0x3c]
  4222bc:	imul   edx,ebp,0xdde6960c
  4222c2:	mov    al,ds:0xd73548f9
  4222c7:	xor    al,0x16
  4222c9:	dec    esp
  4222ca:	cmp    DWORD PTR [ecx+0x39],esp
  4222cd:	and    BYTE PTR [ecx+edx*2-0x10],ch
  4222d1:	rol    BYTE PTR [edx+ebx*8],0x4d
  4222d5:	in     eax,0x6
  4222d7:	push   ebp
  4222d8:	test   eax,0xa06e0f58
  4222dd:	(bad)
  4222e1:	mov    al,ds:0xa7e11848
  4222e6:	out    0x38,al
  4222e8:	sbb    DWORD PTR [eax-0x13a1708a],ebx
  4222ee:	std    
  4222ef:	pop    es
  4222f0:	ja     0x422340
  4222f2:	mov    ebp,0x6dd8f2c
  4222f7:	mov    dl,cl
  4222f9:	arpl   WORD PTR [ecx-0x25e55b9],dx
  4222ff:	xchg   DWORD PTR [edx],ebp
  422301:	pop    eax
  422302:	(bad)  
  422303:	jne    0x4222a4
  422305:	js     0x422374
  422307:	xchg   edi,eax
  422308:	loope  0x42230b
  42230a:	pusha  
  42230b:	push   ds
  42230c:	push   eax
  42230d:	mov    ebx,0xc66b6dff
  422312:	arpl   WORD PTR [esi+0x67],ax
  422315:	icebp  
  422316:	es push eax
  422318:	mov    ds:0x48f394b9,al
  42231d:	repnz and bl,ah
  422320:	mov    al,0x69
  422322:	jmp    0x2f29767d
  422327:	lea    esp,[eax-0x15]
  42232a:	add    DWORD PTR [eax+edx*1-0x53],ebx
  42232e:	outs   dx,DWORD PTR ds:[esi]
  42232f:	and    cl,BYTE PTR [eax-0x36ec981e]
  422335:	clc    
  422336:	push   0x3daeec35
  42233b:	retf   
  42233c:	xlat   BYTE PTR ds:[ebx]
  42233d:	and    ecx,DWORD PTR [esi+0x11]
  422340:	add    al,0x7
  422342:	adc    dh,BYTE PTR [esi]
  422344:	mov    ah,0xdb
  422346:	int    0xbe
  422348:	pop    esp
  422349:	scas   al,BYTE PTR es:[edi]
  42234a:	xchg   edi,eax
  42234b:	mov    bl,al
  42234d:	ins    DWORD PTR es:[edi],dx
  42234e:	jae    0x42232e
  422350:	nop
  422351:	jnp    0x422397
  422353:	loope  0x422310
  422355:	lods   eax,DWORD PTR ds:[esi]
  422356:	mov    al,ds:0xaf59b412
  42235b:	ret    
  42235c:	push   0x2d
  42235e:	stc    
  42235f:	xchg   DWORD PTR [edx+edi*1-0x267c6f49],eax
  422366:	jl     0x4222fd
  422368:	jmp    FWORD PTR [ebx-0x7]
  42236b:	inc    ecx
  42236c:	out    0x61,al
  42236e:	lea    ecx,[edx+0x40]
  422371:	outs   dx,BYTE PTR ss:[esi]
  422373:	arpl   WORD PTR [ebx-0x3822263c],ax
  422379:	mov    edx,0x158457be
  42237e:	rcl    BYTE PTR [ecx+0x21807345],0xc8
  422385:	adc    al,0xfa
  422387:	jecxz  0x422363
  422389:	cmp    DWORD PTR [ebp-0x32b24780],ebp
  42238f:	push   ecx
  422390:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422391:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422392:	cld    
  422393:	push   cs
  422394:	fwait
  422395:	mov    ?,WORD PTR [ebx]
  422397:	or     al,0x77
  422399:	xchg   esi,eax
  42239a:	sbb    ecx,DWORD PTR ds:0xdfd73031
  4223a0:	pop    ds
  4223a1:	mov    ?,WORD PTR [edx+ebx*8]
  4223a4:	push   cs
  4223a5:	ds dec ecx
  4223a7:	les    ecx,FWORD PTR [eax-0x232e635a]
  4223ad:	ficom  DWORD PTR [ecx+0x1d157a83]
  4223b3:	lock jo 0x4223e5
  4223b6:	imul   esp,edx,0xde24944a
  4223bc:	retf   0x3524
  4223bf:	mov    dh,0xec
  4223c1:	sub    ecx,DWORD PTR [edi]
  4223c3:	aaa    
  4223c4:	loop   0x4223cc
  4223c6:	dec    esp
  4223c7:	xchg   esp,eax
  4223c8:	test   BYTE PTR ds:0xd0309f7a,bl
  4223ce:	inc    ecx
  4223cf:	sar    bh,0xf1
  4223d2:	je     0x4223f5
  4223d4:	out    dx,eax
  4223d5:	mov    dh,0x4f
  4223d7:	adc    DWORD PTR [ebx-0x6af9403],edx
  4223dd:	sub    BYTE PTR [eax+0x75],al
  4223e0:	fld    DWORD PTR [ecx]
  4223e2:	add    DWORD PTR [eax+ebx*2+0x2a867d1f],0x3f21a657
  4223ed:	lahf   
  4223ee:	jmp    0x422447
  4223f0:	iret   
  4223f1:	(bad)  
  4223f3:	jge    0x422461
  4223f5:	xchg   esp,eax
  4223f6:	aad    0x9f
  4223f8:	jae    0x42239a
  4223fa:	enter  0x242d,0x37
  4223fe:	sub    DWORD PTR ds:0x14c856fb,edi
  422404:	push   esi
  422405:	pop    ecx
  422406:	sub    eax,0xc20d5f74
  42240b:	dec    edi
  42240c:	sbb    BYTE PTR [ebx-0x1d],bl
  42240f:	iret   
  422410:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422411:	sub    al,dl
  422413:	jns    0x422408
  422415:	pop    ebx
  422416:	js     0x422493
  422418:	loopne 0x42241a
  42241a:	retf   0x1a11
  42241d:	jmp    0x46f47aea
  422422:	pop    edx
  422423:	loopne 0x422445
  422425:	es in  eax,dx
  422427:	adc    dl,bh
  422429:	sbb    cl,BYTE PTR [eax]
  42242b:	and    DWORD PTR [esi+0x56698b65],ebp
  422431:	adc    BYTE PTR [ecx-0x3],bl
  422434:	loop   0x422420
  422436:	inc    esp
  422437:	inc    edx
  422438:	retw   
  42243a:	add    eax,0x3cae6fcd
  42243f:	icebp  
  422440:	fld    DWORD PTR [edi+0x2f]
  422443:	shl    cl,0xdd
  422446:	(bad)
  42244b:	inc    ecx
  42244d:	sub    DWORD PTR [esp+ebp*8-0x644fd39f],ecx
  422454:	inc    ebx
  422455:	dec    ebx
  422456:	iret   
  422457:	les    edx,FWORD PTR [edx-0x1a]
  42245a:	pop    ebx
  42245b:	adc    edi,DWORD PTR [edx+0xd]
  42245e:	test   eax,0xf4681015
  422463:	rol    BYTE PTR [edi+0x1e47e9a5],1
  422469:	fild   QWORD PTR [esi+0x3ee40955]
  42246f:	daa    
  422470:	push   edi
  422471:	adc    ah,dh
  422473:	mov    bh,0x3c
  422475:	das    
  422476:	adc    DWORD PTR [ecx+0x77],esi
  422479:	cmp    edi,DWORD PTR [edx-0x762cb9be]
  42247f:	call   0xc0f6:0x13a0b9b8
  422486:	ror    DWORD PTR ds:[ecx-0x45],0xc
  42248b:	mov    ebp,0x864e397c
  422490:	or     DWORD PTR [ebx-0x1d],0xfffffff5
  422494:	or     ch,dh
  422496:	lods   eax,DWORD PTR ds:[esi]
  422497:	out    dx,al
  422498:	ins    BYTE PTR es:[edi],dx
  422499:	and    DWORD PTR [ebp+0x63],esp
  42249c:	stos   DWORD PTR es:[edi],eax
  42249d:	(bad)  
  42249e:	in     eax,dx
  42249f:	pop    ebp
  4224a0:	push   ss
  4224a1:	adc    esi,0x2d
  4224a4:	sub    BYTE PTR [eax+ebx*4],0x9a
  4224a8:	js     0x4224b5
  4224aa:	jnp    0x4224af
  4224ac:	add    bh,bl
  4224ae:	lahf   
  4224af:	ins    BYTE PTR es:[edi],dx
  4224b0:	dec    edi
  4224b1:	pop    edx
  4224b2:	stos   BYTE PTR es:[edi],al
  4224b3:	adc    DWORD PTR [eax-0x7575df44],eax
  4224b9:	xor    eax,0x3e918a3
  4224be:	push   ds
  4224bf:	popa   
  4224c0:	retf   0x3d8b
  4224c3:	pop    ds
  4224c4:	jno    0x4224ca
  4224c6:	test   al,0xc3
  4224c8:	dec    bp
  4224ca:	outs   dx,DWORD PTR ds:[esi]
  4224cb:	or     al,0x30
  4224cd:	cmp    al,0x34
  4224cf:	or     DWORD PTR [edi-0x2a],ebp
  4224d2:	cmp    al,0x2e
  4224d4:	je     0x4224cd
  4224d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4224d7:	jmp    0xddb9352b
  4224dc:	fucomp st(5)
  4224de:	sbb    BYTE PTR ds:[ebp+0x4b],ah
  4224e2:	iret   
  4224e3:	and    DWORD PTR [edi-0x1d],ebp
  4224e6:	fsubrp st(7),st
  4224e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224e9:	leave  
  4224ea:	scas   al,BYTE PTR es:[edi]
  4224eb:	mov    edx,0xf48fb1eb
  4224f0:	xchg   esi,eax
  4224f1:	push   cs
  4224f2:	dec    ebx
  4224f3:	shl    BYTE PTR [edi+edi*1-0x3b930940],1
  4224fa:	inc    esi
  4224fb:	dec    ebx
  4224fc:	inc    esi
  4224fd:	add    esi,DWORD PTR [edi+0x35]
  422500:	int    0x7a
  422502:	retf   0xc6e4
  422505:	jle    0x422513
  422507:	dec    esi
  422508:	push   eax
  422509:	lock xor al,0x1f
  42250c:	adc    eax,0x10d80f8d
  422511:	and    bh,0x16
  422514:	lock gs jno 0x4224fb
  422518:	leave  
  422519:	enter  0x693e,0xc0
  42251d:	jae    0x4224fd
  42251f:	inc    ecx
  422520:	retf   
  422521:	lea    esp,[edx+0x1d]
  422524:	jo     0x422553
  422526:	xor    dh,ch
  422528:	sub    DWORD PTR [edi+0x51f4c811],0x62
  42252f:	jne    0x4225ad
  422531:	addr16 adc esi,edx
  422534:	jo     0x4224c4
  422536:	mov    edi,0x8aab9089
  42253b:	fwait
  42253c:	adc    al,0x42
  42253e:	je     0x422557
  422540:	xchg   ecx,eax
  422541:	push   esi
  422542:	jno    0x422580
  422544:	retf   0x12cc
  422547:	int    0xda
  422549:	and    eax,0x5ec2d2bd
  42254e:	sti    
  42254f:	in     eax,0xd5
  422551:	or     bh,BYTE PTR [esi+0xd]
  422554:	lock jb 0x4224e7
  422557:	push   eax
  422558:	outs   dx,DWORD PTR ds:[esi]
  422559:	adc    DWORD PTR [esi],eax
  42255b:	mov    WORD PTR es:[edi+0x7b],cs
  42255f:	dec    ebx
  422560:	and    BYTE PTR [esi+0x46a50d94],bh
  422566:	sbb    DWORD PTR [ebp+esi*1-0x17cb69f4],ebp
  42256d:	xchg   edx,eax
  42256e:	mov    ds:0x79838c88,al
  422573:	fbld   TBYTE PTR [ebx+0x2335660b]
  422579:	cmpxchg DWORD PTR [ecx],ebp
  42257c:	loop   0x4225ae
  42257e:	test   eax,edi
  422580:	fisttp QWORD PTR [edx]
  422583:	retf   
  422584:	ret    0x226
  422587:	pushf  
  422588:	in     al,0xe3
  42258a:	mov    eax,0x19f1074d
  42258f:	xor    al,0xc2
  422591:	pop    edx
  422592:	add    esi,eax
  422594:	cmp    BYTE PTR [esi+0x2ea5dd85],0xec
  42259b:	mov    al,ds:0x386d74a2
  4225a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225a1:	inc    ebp
  4225a2:	cld    
  4225a3:	sub    DWORD PTR ss:[eax],edi
  4225a6:	xor    BYTE PTR [edi-0x48],al
  4225a9:	dec    ecx
  4225aa:	shl    BYTE PTR [edi-0x28b2471a],1
  4225b0:	lea    ecx,[ebx+0x3a7bf8]
  4225b6:	iret   
  4225b7:	or     BYTE PTR [ebx-0x375bd9f4],ch
  4225bd:	dec    esi
  4225be:	xor    ah,BYTE PTR [ecx-0x53]
  4225c1:	jle    0x422596
  4225c3:	in     eax,dx
  4225c4:	mov    dl,0x6c
  4225c6:	push   ebp
  4225c7:	inc    esp
  4225c8:	cmp    al,0x9f
  4225ca:	inc    eax
  4225cb:	mov    eax,0x6bfd8be4
  4225d0:	imul   edx,DWORD PTR [edi+0x12ba77b8],0xffffffe1
  4225d7:	lahf   
  4225d8:	popf   
  4225d9:	push   0x511dfc29
  4225de:	push   esp
  4225df:	inc    esp
  4225e0:	outs   dx,BYTE PTR ds:[esi]
  4225e1:	in     al,0xf8
  4225e3:	xor    BYTE PTR [eax],dl
  4225e5:	popa   
  4225e6:	iret   
  4225e7:	shr    BYTE PTR [ebx],cl
  4225e9:	or     al,0x85
  4225eb:	rcl    BYTE PTR [ebx+0x354aade9],cl
  4225f1:	das    
  4225f2:	cmp    al,0xd4
  4225f4:	mov    ds:0xdfa561a5,al
  4225f9:	test   DWORD PTR [esi-0x2b],eax
  4225fc:	lds    esi,FWORD PTR [edx]
  4225fe:	mov    ecx,0xff202641
  422603:	mov    ds:0x74dbab09,eax
  422608:	mov    ch,0x5b
  42260a:	xor    eax,0xd3c93f7b
  42260f:	(bad)  
  422610:	cs ss pop ebx
  422613:	and    al,0x4
  422615:	mov    edx,0x8b58e1a
  42261a:	fcomp  st(3)
  42261c:	test   DWORD PTR [ebx-0x6acf5f20],esi
  422622:	pop    esp
  422623:	mov    dh,0x4b
  422625:	enter  0x9cbb,0x7f
  422629:	adc    al,0xe4
  42262b:	outs   dx,BYTE PTR ds:[esi]
  42262c:	jns    0x422650
  42262e:	sti    
  42262f:	fwait
  422630:	repz pop ebp
  422632:	sbb    cl,dl
  422634:	sub    ebx,esp
  422636:	leave  
  422637:	cmp    ch,BYTE PTR [ebx+edx*8-0x35]
  42263b:	call   0x7cf7:0xaaa88056
  422642:	cwde   
  422643:	jmp    0x552abc34
  422648:	cmp    DWORD PTR [ebp+0x25b6b80e],ecx
  42264e:	jno    0x422682
  422650:	imul   esi,DWORD PTR [eax+0x59885231],0x5
  422657:	scas   al,BYTE PTR es:[edi]
  422658:	lods   eax,DWORD PTR ds:[esi]
  422659:	bound  edx,QWORD PTR [ecx+0x5dc91a94]
  42265f:	and    DWORD PTR [ebp+0x287fc019],ecx
  422665:	gs into 
  422667:	push   ecx
  422668:	sahf   
  422669:	clc    
  42266a:	push   edx
  42266b:	out    dx,eax
  42266c:	ins    DWORD PTR es:[edi],dx
  42266d:	mov    cl,0x23
  42266f:	and    BYTE PTR [edi+0x7ac0643f],0xd9
  422676:	xchg   esp,eax
  422677:	call   0xbff45c72
  42267c:	sbb    cl,al
  42267e:	pop    es
  42267f:	les    esi,FWORD PTR [esi-0x3e]
  422682:	mov    esp,0xfe7c3bd6
  422687:	dec    esi
  422688:	fwait
  422689:	iret   
  42268a:	mov    ebp,0x61bca933
  42268f:	inc    esi
  422690:	aad    0x75
  422692:	fsub   DWORD PTR [esi+0x51]
  422695:	jno    0x4226ed
  422697:	clc    
  422698:	sar    BYTE PTR [edx-0xa],cl
  42269b:	mov    cl,0x6f
  42269d:	xor    al,0x9a
  42269f:	jo     0x42271b
  4226a1:	test   BYTE PTR [esi],0x86
  4226a4:	out    dx,al
  4226a5:	(bad)  
  4226a6:	lea    ebx,[edi]
  4226a8:	xor    edi,DWORD PTR [eax+edx*2]
  4226ab:	pop    edi
  4226ac:	inc    edi
  4226ad:	loopne 0x4226ff
  4226af:	adc    DWORD PTR [edi],ecx
  4226b1:	jg     0x4226cd
  4226b3:	push   cs
  4226b4:	sub    BYTE PTR [esi],dl
  4226b6:	xchg   esp,eax
  4226b7:	push   edi
  4226b8:	retf   0x2d9b
  4226bb:	aas    
  4226bc:	jb     0x42267f
  4226be:	scas   al,BYTE PTR es:[edi]
  4226bf:	cmp    DWORD PTR [edx],0xffffffab
  4226c2:	cmp    ecx,ebp
  4226c4:	xor    BYTE PTR [eax+0x8],bh
  4226c7:	loopne 0x4226e0
  4226c9:	and    bh,cl
  4226cb:	xor    BYTE PTR [edx-0x522a84ab],al
  4226d1:	pop    es
  4226d2:	pop    ecx
  4226d3:	nop
  4226d4:	adc    dl,ah
  4226d6:	xchg   edx,eax
  4226d7:	push   cs
  4226d8:	or     eax,0xa812aa12
  4226dd:	sub    DWORD PTR [ecx+0x1f],0x12
  4226e1:	fsub   st,st(4)
  4226e3:	pop    ds
  4226e4:	xchg   edx,eax
  4226e5:	jnp    0x422671
  4226e7:	outs   dx,DWORD PTR ds:[esi]
  4226e8:	shr    BYTE PTR [edi-0x4c],0x10
  4226ec:	fcomi  st,st(1)
  4226ee:	dec    ebp
  4226ef:	loope  0x42272c
  4226f1:	add    DWORD PTR ds:0xec073b29,esp
  4226f7:	xor    BYTE PTR [esi],bl
  4226f9:	jge    0x42276c
  4226fb:	pop    edi
  4226fc:	push   es
  4226fd:	cld    
  4226fe:	(bad)  
  4226ff:	iret   
  422700:	mov    ds:0x70c3e995,al
  422705:	sbb    DWORD PTR [ecx-0x46fc1c20],eax
  42270b:	xlat   BYTE PTR ds:[ebx]
  42270c:	add    ebx,edx
  42270e:	and    BYTE PTR [eax-0x5915abd0],bl
  422714:	repz dec esp
  422716:	cli    
  422717:	mov    cl,0x5d
  422719:	or     ebp,0x47
  42271c:	and    al,0x1
  42271e:	and    ch,BYTE PTR [ecx]
  422720:	cld    
  422721:	dec    edx
  422722:	repnz xor al,0xd7
  422725:	fbstp  TBYTE PTR [esi]
  422727:	sbb    DWORD PTR [esi+0x26],ecx
  42272a:	int3   
  42272b:	icebp  
  42272c:	pop    edi
  42272d:	jmp    0x422724
  42272f:	je     0x4226d3
  422731:	loop   0x4227a4
  422733:	repz xor esi,DWORD PTR [ecx*1+0x4684bca]
  42273b:	mov    esp,0xd1137319
  422740:	mov    ds,ebx
  422742:	add    DWORD PTR [eax+0x7fd67fd],ecx
  422748:	and    BYTE PTR ds:0x56d3e310,bl
  42274e:	jge    0x42279a
  422750:	push   edi
  422751:	pop    ss
  422752:	jnp    0x4227ae
  422754:	popa   
  422755:	imul   ebp,DWORD PTR [ecx-0x10dd6576],0x7e
  42275c:	mov    edi,0x3b123e13
  422761:	mov    ds:0xa6ab4d10,al
  422766:	lahf   
  422767:	rcl    DWORD PTR [edx+0x36e1fa9c],cl
  42276d:	push   esp
  42276e:	or     al,0xed
  422770:	(bad)  
  422771:	stos   DWORD PTR es:[edi],eax
  422772:	fidiv  DWORD PTR [edx-0x108454e7]
  422778:	stos   BYTE PTR es:[edi],al
  422779:	jl     0x4227b1
  42277b:	or     al,0x4f
  42277d:	fsubr  QWORD PTR [edx-0x67d332bd]
  422783:	push   esi
  422784:	cli    
  422785:	sub    dl,cl
  422787:	add    ecx,eax
  422789:	push   eax
  42278a:	jbe    0x422711
  42278c:	popa   
  42278d:	add    DWORD PTR [ecx+0x2e9130ed],esp
  422793:	mov    cl,0x54
  422795:	shr    DWORD PTR [edi],0xe2
  422798:	daa    
  422799:	adc    edi,DWORD PTR ds:0x949dbacf
  42279f:	and    eax,0xf80d108f
  4227a4:	cmovbe eax,DWORD PTR [edi-0x6b1964a2]
  4227ab:	or     DWORD PTR [ecx+0x33],edx
  4227ae:	repz icebp 
  4227b0:	jp     0x42274f
  4227b2:	rol    BYTE PTR [ebp+0xbf2b458],0x2a
  4227b9:	test   al,al
  4227bb:	in     eax,dx
  4227bc:	inc    edx
  4227bd:	adc    al,0x5c
  4227bf:	xlat   BYTE PTR ds:[ebx]
  4227c0:	push   eax
  4227c1:	into   
  4227c2:	(bad)  
  4227c3:	mov    al,ds:0x83cf5af7
  4227c8:	int3   
  4227c9:	ret    0xff07
  4227cc:	xchg   DWORD PTR [ecx],eax
  4227ce:	mov    WORD PTR [eax+0x34],es
  4227d1:	pop    edi
  4227d2:	call   0xdc51:0x33df8930
  4227d9:	push   edx
  4227da:	jb     0x422791
  4227dc:	sub    BYTE PTR [edi],ch
  4227de:	loop   0x422844
  4227e0:	pop    esp
  4227e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227e2:	fstp   TBYTE PTR [edi+0x13]
  4227e5:	jp     0x4227c2
  4227e7:	jg     0x422861
  4227e9:	aas    
  4227ea:	outs   dx,DWORD PTR ds:[esi]
  4227eb:	push   edi
  4227ec:	mov    esp,0xef4683f7
  4227f1:	test   al,0x9d
  4227f3:	addr16 cdq 
  4227f5:	imul   eax,DWORD PTR [edi+0x253644b],0xf0f4b234
  4227ff:	nop    esi
  422802:	xor    al,0x37
  422804:	(bad)  
  422805:	mov    ds:0x5acc2cc5,al
  42280a:	rcl    DWORD PTR [ecx-0x6c6ebabd],0xda
  422811:	sub    dh,BYTE PTR [bx+si]
  422814:	(bad)  
  422815:	ds jge 0xc70602f3
  42281c:	push   eax
  42281d:	fs dec edx
  42281f:	enter  0xec22,0x19
  422823:	hlt    
  422824:	pop    ebp
  422825:	or     bh,BYTE PTR ds:[edi+0x52f05d10]
  42282c:	mov    eax,DWORD PTR [ebx-0x29b22106]
  422832:	sub    al,0xd7
  422834:	call   0x66163b7f
  422839:	pop    edx
  42283a:	loop   0x42286b
  42283c:	and    eax,0x2096c48f
  422841:	cmp    DWORD PTR [ebp-0xa],esi
  422844:	gs pop ds
  422846:	push   esi
  422847:	xchg   esp,eax
  422848:	imul   ebp,eax,0x69
  42284b:	out    dx,al
  42284c:	jl     0x42282d
  42284e:	mov    esi,0x6bb3ac2e
  422853:	push   es
  422854:	rcl    DWORD PTR [edi],0x6
  422857:	(bad)  
  422858:	jp     0x422812
  42285a:	repz into 
  42285c:	(bad)  
  42285e:	(bad)  
  42285f:	pop    edx
  422860:	ss in  al,dx
  422862:	stc    
  422863:	or     al,0xe0
  422865:	scas   eax,DWORD PTR es:[edi]
  422866:	ret    
  422867:	xchg   edx,eax
  422868:	fstp   TBYTE PTR [edx-0x3c]
  42286b:	fmul   DWORD PTR [esi]
  42286d:	inc    esi
  42286e:	in     al,dx
  42286f:	retf   0x300
  422872:	out    dx,al
  422873:	sub    al,0xe5
  422875:	jg     0x4227ff
  422877:	enter  0xd5da,0x74
  42287b:	cmp    BYTE PTR [ebp+esi*1-0x1d61b5dd],dh
  422882:	adc    DWORD PTR [ebp-0xbee7094],ecx
  422888:	pop    ebp
  422889:	outs   dx,BYTE PTR ds:[esi]
  42288a:	inc    ebp
  42288b:	xor    edi,0x32fab7b6
  422891:	jmp    0x4228f2
  422893:	mov    ds:0xefbb8c6a,al
  422898:	pop    esp
  422899:	jno    0x42283c
  42289b:	test   DWORD PTR [ecx+ecx*4+0x51],ebx
  42289f:	cdq    
  4228a0:	ror    DWORD PTR [esi+0xcce6102],cl
  4228a6:	inc    edi
  4228a7:	repnz popf 
  4228a9:	add    eax,DWORD PTR [ecx-0x7297ab56]
  4228af:	push   0x32f90e64
  4228b4:	daa    
  4228b5:	and    bl,BYTE PTR [ebp-0x46]
  4228b8:	mov    ecx,0xff928ad9
  4228bd:	(bad)  
  4228bf:	mov    al,0x98
  4228c1:	lahf   
  4228c2:	pop    ecx
  4228c3:	(bad)  
  4228c4:	sub    al,0x5b
  4228c6:	pushf  
  4228c7:	push   ss
  4228c8:	les    edx,FWORD PTR [esi+0x2a]
  4228cb:	fist   DWORD PTR [edi]
  4228cd:	inc    ebx
  4228ce:	push   edi
  4228cf:	mov    ch,0x27
  4228d1:	ss mov ebx,0x979c63b0
  4228d7:	xchg   ebp,eax
  4228d8:	sbb    DWORD PTR [ebx+0x48df61b],edi
  4228de:	cmc    
  4228df:	add    eax,0xe8dd06db
  4228e4:	mov    DWORD PTR [ebx+0x4a51fdce],edx
  4228ea:	xchg   DWORD PTR [esi-0x4d],esi
  4228ed:	loop   0x4228dd
  4228ef:	or     DWORD PTR [esi+ecx*2],edx
  4228f2:	dec    esp
  4228f3:	xor    BYTE PTR [eax+0x78],dh
  4228f6:	mov    ch,0x4d
  4228f8:	in     al,0x16
  4228fa:	xor    al,0xbc
  4228fc:	pcmpgtd mm0,QWORD PTR [eax+0x1e7133a8]
  422903:	and    al,0x5d
  422905:	dec    edi
  422906:	xchg   esp,eax
  422907:	xor    DWORD PTR [edx-0x32],ebx
  42290a:	(bad)  
  42290b:	in     al,0xc3
  42290d:	mov    cl,0x26
  42290f:	pop    edi
  422910:	je     0x422924
  422912:	adc    DWORD PTR [ebx-0x319f1dbf],ebx
  422918:	ds in  al,dx
  42291a:	jo     0x42297b
  42291c:	push   ebp
  42291d:	int    0x96
  42291f:	sbb    BYTE PTR [esi],0xaf
  422922:	xchg   edx,eax
  422923:	mov    ecx,0x4852b7c2
  422928:	or     bh,al
  42292a:	(bad)  
  42292c:	mov    DWORD PTR [edx],ebp
  42292e:	ja     0x422976
  422930:	xor    BYTE PTR [ecx-0x69],bh
  422933:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422934:	popf   
  422935:	loopne 0x42292a
  422937:	push   edi
  422938:	ins    BYTE PTR es:[edi],dx
  422939:	pop    esp
  42293a:	inc    ebp
  42293b:	push   0x673232b
  422940:	sbb    edx,DWORD PTR [ebx+ecx*1]
  422943:	xor    BYTE PTR [eax-0x8],al
  422946:	xchg   ecx,eax
  422947:	push   ebx
  422948:	cli    
  422949:	mov    DWORD PTR [eax-0x19],esp
  42294c:	or     al,0x4a
  42294e:	jmp    0x4228de
  422950:	push   eax
  422951:	shl    ebx,cl
  422953:	shl    DWORD PTR [esi+edi*1],1
  422956:	ins    BYTE PTR es:[edi],dx
  422957:	sbb    DWORD PTR [edi-0x59],edi
  42295a:	inc    eax
  42295b:	(bad)  
  42295c:	xor    al,0xfa
  42295e:	push   eax
  42295f:	popa   
  422960:	add    al,0x6a
  422962:	pusha  
  422963:	add    DWORD PTR [ebx+eiz*1],ecx
  422966:	or     bh,BYTE PTR [edi-0x54]
  422969:	fisub  WORD PTR [edi+0x47d14130]
  42296f:	sbb    eax,0xe6d55181
  422974:	adc    BYTE PTR [ecx+eiz*2+0x103a2bac],dh
  42297b:	into   
  42297c:	mov    ch,0xc8
  42297e:	inc    bh
  422980:	mov    edi,0x8a318cb7
  422985:	push   ecx
  422986:	xchg   BYTE PTR [esi-0x6d],dh
  422989:	call   0xffa1:0x4acee853
  422990:	xor    al,BYTE PTR [eax-0x6d]
  422993:	jg     0x4229a0
  422995:	repnz popa 
  422997:	or     eax,0x549d223c
  42299c:	gs leave 
  42299e:	jecxz  0x4229ad
  4229a0:	je     0x422986
  4229a2:	inc    edx
  4229a3:	inc    ebp
  4229a4:	arpl   bx,sp
  4229a6:	or     eax,0x3f5a8d7c
  4229ab:	mov    bh,0xe
  4229ad:	jge    0x4229e9
  4229af:	rcr    DWORD PTR [ecx+0x77101d80],cl
  4229b5:	and    eax,0xd29a7a0c
  4229ba:	mov    al,0x69
  4229bc:	xchg   ebp,eax
  4229bd:	(bad)  
  4229be:	cwde   
  4229bf:	xchg   ecx,eax
  4229c0:	call   0x355294aa
  4229c5:	and    al,dh
  4229c7:	cmp    esi,DWORD PTR [esi-0x4d]
  4229ca:	stos   WORD PTR es:[edi],ax
  4229cc:	push   0x2
  4229ce:	push   0xa0
  4229d3:	push   0x0
  4229d5:	call   DWORD PTR ds:0x428030
  4229db:	xor    eax,eax
  4229dd:	add    esp,0x10
  4229e0:	ret    0x10
  4229e3:	nop
  4229e4:	nop
  4229e5:	nop
  4229e6:	nop
  4229e7:	nop
  4229e8:	nop
  4229e9:	nop
  4229ea:	nop
  4229eb:	nop
  4229ec:	nop
  4229ed:	nop
  4229ee:	nop
  4229ef:	nop
  4229f0:	jmp    DWORD PTR ds:0x428128
  4229f6:	jmp    DWORD PTR ds:0x428120
  4229fc:	cmp    DWORD PTR ds:0x462c9c,0x1
  422a03:	jne    0x422a0a
  422a05:	call   0x422f48
  422a0a:	push   DWORD PTR [esp+0x4]
  422a0e:	call   0x422dd1
  422a13:	push   0xff
  422a18:	call   DWORD PTR ds:0x46238c
  422a1e:	pop    ecx
  422a1f:	pop    ecx
  422a20:	ret    
  422a21:	cmp    DWORD PTR ds:0x462c9c,0x1
  422a28:	jne    0x422a2f
  422a2a:	call   0x422f48
  422a2f:	push   DWORD PTR [esp+0x4]
  422a33:	call   0x422dd1
  422a38:	push   0xff
  422a3d:	call   0x422c17
  422a42:	pop    ecx
  422a43:	pop    ecx
  422a44:	ret    
  422a45:	push   0x60
  422a47:	push   0x428160
  422a4c:	call   0x423934
  422a51:	mov    edi,0x94
  422a56:	mov    eax,edi
  422a58:	call   0x423980
  422a5d:	mov    DWORD PTR [ebp-0x18],esp
  422a60:	mov    esi,esp
  422a62:	mov    DWORD PTR [esi],edi
  422a64:	push   esi
  422a65:	call   DWORD PTR ds:0x42806c
  422a6b:	mov    ecx,DWORD PTR [esi+0x10]
  422a6e:	mov    DWORD PTR ds:0x462ca4,ecx
  422a74:	mov    eax,DWORD PTR [esi+0x4]
  422a77:	mov    ds:0x462cb0,eax
  422a7c:	mov    edx,DWORD PTR [esi+0x8]
  422a7f:	mov    DWORD PTR ds:0x462cb4,edx
  422a85:	mov    esi,DWORD PTR [esi+0xc]
  422a88:	and    esi,0x7fff
  422a8e:	mov    DWORD PTR ds:0x462ca8,esi
  422a94:	cmp    ecx,0x2
  422a97:	je     0x422aa5
  422a99:	or     esi,0x8000
  422a9f:	mov    DWORD PTR ds:0x462ca8,esi
  422aa5:	shl    eax,0x8
  422aa8:	add    eax,edx
  422aaa:	mov    ds:0x462cac,eax
  422aaf:	xor    esi,esi
  422ab1:	push   esi
  422ab2:	mov    edi,DWORD PTR ds:0x428018
  422ab8:	call   edi
  422aba:	cmp    WORD PTR [eax],0x5a4d
  422abf:	jne    0x422ae0
  422ac1:	mov    ecx,DWORD PTR [eax+0x3c]
  422ac4:	add    ecx,eax
  422ac6:	cmp    DWORD PTR [ecx],0x4550
  422acc:	jne    0x422ae0
  422ace:	movzx  eax,WORD PTR [ecx+0x18]
  422ad2:	cmp    eax,0x10b
  422ad7:	je     0x422af8
  422ad9:	cmp    eax,0x20b
  422ade:	je     0x422ae5
  422ae0:	mov    DWORD PTR [ebp-0x1c],esi
  422ae3:	jmp    0x422b0c
  422ae5:	cmp    DWORD PTR [ecx+0x84],0xe
  422aec:	jbe    0x422ae0
  422aee:	xor    eax,eax
  422af0:	cmp    DWORD PTR [ecx+0xf8],esi
  422af6:	jmp    0x422b06
  422af8:	cmp    DWORD PTR [ecx+0x74],0xe
  422afc:	jbe    0x422ae0
  422afe:	xor    eax,eax
  422b00:	cmp    DWORD PTR [ecx+0xe8],esi
  422b06:	setne  al
  422b09:	mov    DWORD PTR [ebp-0x1c],eax
  422b0c:	push   0x1
  422b0e:	call   0x4238e3
  422b13:	pop    ecx
  422b14:	test   eax,eax
  422b16:	jne    0x422b20
  422b18:	push   0x1c
  422b1a:	call   0x422a21
  422b1f:	pop    ecx
  422b20:	call   0x42385a
  422b25:	test   eax,eax
  422b27:	jne    0x422b31
  422b29:	push   0x10
  422b2b:	call   0x422a21
  422b30:	pop    ecx
  422b31:	call   0x423743
  422b36:	mov    DWORD PTR [ebp-0x4],esi
  422b39:	call   0x423545
  422b3e:	test   eax,eax
  422b40:	jge    0x422b4a
  422b42:	push   0x1b
  422b44:	call   0x4229fc
  422b49:	pop    ecx
  422b4a:	call   DWORD PTR ds:0x428068
  422b50:	mov    ds:0x463454,eax
  422b55:	call   0x423423
  422b5a:	mov    ds:0x462c94,eax
  422b5f:	call   0x423381
  422b64:	test   eax,eax
  422b66:	jge    0x422b70
  422b68:	push   0x8
  422b6a:	call   0x4229fc
  422b6f:	pop    ecx
  422b70:	call   0x42314e
  422b75:	test   eax,eax
  422b77:	jge    0x422b81
  422b79:	push   0x9
  422b7b:	call   0x4229fc
  422b80:	pop    ecx
  422b81:	call   0x422c59
  422b86:	mov    DWORD PTR [ebp-0x20],eax
  422b89:	cmp    eax,esi
  422b8b:	je     0x422b94
  422b8d:	push   eax
  422b8e:	call   0x4229fc
  422b93:	pop    ecx
  422b94:	mov    DWORD PTR [ebp-0x38],esi
  422b97:	lea    eax,[ebp-0x64]
  422b9a:	push   eax
  422b9b:	call   DWORD PTR ds:0x428064
  422ba1:	call   0x4230e5
  422ba6:	mov    DWORD PTR [ebp-0x68],eax
  422ba9:	test   BYTE PTR [ebp-0x38],0x1
  422bad:	je     0x422bb5
  422baf:	movzx  eax,WORD PTR [ebp-0x34]
  422bb3:	jmp    0x422bb8
  422bb5:	push   0xa
  422bb7:	pop    eax
  422bb8:	push   eax
  422bb9:	push   DWORD PTR [ebp-0x68]
  422bbc:	push   esi
  422bbd:	push   esi
  422bbe:	call   edi
  422bc0:	push   eax
  422bc1:	call   0x421850
  422bc6:	mov    edi,eax
  422bc8:	mov    DWORD PTR [ebp-0x6c],edi
  422bcb:	cmp    DWORD PTR [ebp-0x1c],esi
  422bce:	jne    0x422bd6
  422bd0:	push   edi
  422bd1:	call   0x422d91
  422bd6:	call   0x422db3
  422bdb:	jmp    0x422c08
  422bdd:	mov    eax,DWORD PTR [ebp-0x14]
  422be0:	mov    ecx,DWORD PTR [eax]
  422be2:	mov    ecx,DWORD PTR [ecx]
  422be4:	mov    DWORD PTR [ebp-0x70],ecx
  422be7:	push   eax
  422be8:	push   ecx
  422be9:	call   0x422f81
  422bee:	pop    ecx
  422bef:	pop    ecx
  422bf0:	ret    
  422bf1:	mov    esp,DWORD PTR [ebp-0x18]
  422bf4:	mov    edi,DWORD PTR [ebp-0x70]
  422bf7:	cmp    DWORD PTR [ebp-0x1c],0x0
  422bfb:	jne    0x422c03
  422bfd:	push   edi
  422bfe:	call   0x422da2
  422c03:	call   0x422dc2
  422c08:	or     DWORD PTR [ebp-0x4],0xffffffff
  422c0c:	mov    eax,edi
  422c0e:	lea    esp,[ebp-0x7c]
  422c11:	call   0x42396f
  422c16:	ret    
  422c17:	push   0x42817c
  422c1c:	call   DWORD PTR ds:0x428018
  422c22:	test   eax,eax
  422c24:	je     0x422c3c
  422c26:	push   0x42816c
  422c2b:	push   eax
  422c2c:	call   DWORD PTR ds:0x428014
  422c32:	test   eax,eax
  422c34:	je     0x422c3c
  422c36:	push   DWORD PTR [esp+0x4]
  422c3a:	call   eax
  422c3c:	push   DWORD PTR [esp+0x4]
  422c40:	call   DWORD PTR ds:0x428070
  422c46:	int3   
  422c47:	push   0x8
  422c49:	call   0x423aef
  422c4e:	pop    ecx
  422c4f:	ret    
  422c50:	push   0x8
  422c52:	call   0x423a5b
  422c57:	pop    ecx
  422c58:	ret    
  422c59:	mov    eax,ds:0x463450
  422c5e:	test   eax,eax
  422c60:	je     0x422c64
  422c62:	call   eax
  422c64:	push   esi
  422c65:	push   edi
  422c66:	mov    ecx,0x42a00c
  422c6b:	mov    edi,0x42a018
  422c70:	xor    eax,eax
  422c72:	cmp    ecx,edi
  422c74:	mov    esi,ecx
  422c76:	jae    0x422c8f
  422c78:	test   eax,eax
  422c7a:	jne    0x422cbb
  422c7c:	mov    ecx,DWORD PTR [esi]
  422c7e:	test   ecx,ecx
  422c80:	je     0x422c84
  422c82:	call   ecx
  422c84:	add    esi,0x4
  422c87:	cmp    esi,edi
  422c89:	jb     0x422c78
  422c8b:	test   eax,eax
  422c8d:	jne    0x422cbb
  422c8f:	push   0x423787
  422c94:	call   0x423c00
  422c99:	mov    esi,0x42a000
  422c9e:	mov    eax,esi
  422ca0:	mov    edi,0x42a008
  422ca5:	cmp    eax,edi
  422ca7:	pop    ecx
  422ca8:	jae    0x422cb9
  422caa:	mov    eax,DWORD PTR [esi]
  422cac:	test   eax,eax
  422cae:	je     0x422cb2
  422cb0:	call   eax
  422cb2:	add    esi,0x4
  422cb5:	cmp    esi,edi
  422cb7:	jb     0x422caa
  422cb9:	xor    eax,eax
  422cbb:	pop    edi
  422cbc:	pop    esi
  422cbd:	ret    
  422cbe:	push   ebp
  422cbf:	mov    ebp,esp
  422cc1:	push   esi
  422cc2:	push   edi
  422cc3:	push   0x8
  422cc5:	call   0x423aef
  422cca:	xor    esi,esi
  422ccc:	inc    esi
  422ccd:	cmp    DWORD PTR ds:0x462ce4,esi
  422cd3:	pop    ecx
  422cd4:	jne    0x422ce6
  422cd6:	push   DWORD PTR [ebp+0x8]
  422cd9:	call   DWORD PTR ds:0x428078
  422cdf:	push   eax
  422ce0:	call   DWORD PTR ds:0x428074
  422ce6:	cmp    DWORD PTR [ebp+0xc],0x0
  422cea:	mov    al,BYTE PTR [ebp+0x10]
  422ced:	mov    DWORD PTR ds:0x462ce0,esi
  422cf3:	mov    ds:0x462cdc,al
  422cf8:	jne    0x422d4c
  422cfa:	mov    ecx,DWORD PTR ds:0x463448
  422d00:	test   ecx,ecx
  422d02:	je     0x422d2d
  422d04:	mov    eax,ds:0x463444
  422d09:	sub    eax,0x4
  422d0c:	cmp    eax,ecx
  422d0e:	jmp    0x422d26
  422d10:	mov    eax,DWORD PTR [eax]
  422d12:	test   eax,eax
  422d14:	je     0x422d18
  422d16:	call   eax
  422d18:	mov    eax,ds:0x463444
  422d1d:	sub    eax,0x4
  422d20:	cmp    eax,DWORD PTR ds:0x463448
  422d26:	mov    ds:0x463444,eax
  422d2b:	jae    0x422d10
  422d2d:	mov    eax,0x42a01c
  422d32:	mov    esi,0x42a020
  422d37:	cmp    eax,esi
  422d39:	mov    edi,eax
  422d3b:	jae    0x422d4c
  422d3d:	mov    eax,DWORD PTR [edi]
  422d3f:	test   eax,eax
  422d41:	je     0x422d45
  422d43:	call   eax
  422d45:	add    edi,0x4
  422d48:	cmp    edi,esi
  422d4a:	jb     0x422d3d
  422d4c:	mov    eax,0x42a024
  422d51:	mov    esi,0x42a028
  422d56:	cmp    eax,esi
  422d58:	mov    edi,eax
  422d5a:	jae    0x422d6b
  422d5c:	mov    eax,DWORD PTR [edi]
  422d5e:	test   eax,eax
  422d60:	je     0x422d64
  422d62:	call   eax
  422d64:	add    edi,0x4
  422d67:	cmp    edi,esi
  422d69:	jb     0x422d5c
  422d6b:	cmp    DWORD PTR [ebp+0x10],0x0
  422d6f:	pop    edi
  422d70:	pop    esi
  422d71:	je     0x422d7c
  422d73:	push   0x8
  422d75:	call   0x423a5b
  422d7a:	jmp    0x422d8e
  422d7c:	push   DWORD PTR [ebp+0x8]
  422d7f:	mov    DWORD PTR ds:0x462ce4,0x1
  422d89:	call   0x422c17
  422d8e:	pop    ecx
  422d8f:	pop    ebp
  422d90:	ret    
  422d91:	push   0x0
  422d93:	push   0x0
  422d95:	push   DWORD PTR [esp+0xc]
  422d99:	call   0x422cbe
  422d9e:	add    esp,0xc
  422da1:	ret    
  422da2:	push   0x0
  422da4:	push   0x1
  422da6:	push   DWORD PTR [esp+0xc]
  422daa:	call   0x422cbe
  422daf:	add    esp,0xc
  422db2:	ret    
  422db3:	push   0x1
  422db5:	push   0x0
  422db7:	push   0x0
  422db9:	call   0x422cbe
  422dbe:	add    esp,0xc
  422dc1:	ret    
  422dc2:	push   0x1
  422dc4:	push   0x1
  422dc6:	push   0x0
  422dc8:	call   0x422cbe
  422dcd:	add    esp,0xc
  422dd0:	ret    
  422dd1:	push   ebp
  422dd2:	mov    ebp,esp
  422dd4:	sub    esp,0x10c
  422dda:	mov    eax,ds:0x462600
  422ddf:	xor    eax,DWORD PTR [ebp+0x4]
  422de2:	mov    ecx,DWORD PTR [ebp+0x8]
  422de5:	push   ebx
  422de6:	push   esi
  422de7:	mov    DWORD PTR [ebp-0x4],eax
  422dea:	xor    edx,edx
  422dec:	push   edi
  422ded:	xor    eax,eax
  422def:	cmp    ecx,DWORD PTR [eax*8+0x462398]
  422df6:	je     0x422dfe
  422df8:	inc    eax
  422df9:	cmp    eax,0x12
  422dfc:	jb     0x422def
  422dfe:	mov    esi,eax
  422e00:	shl    esi,0x3
  422e03:	cmp    ecx,DWORD PTR [esi+0x462398]
  422e09:	jne    0x422f32
  422e0f:	mov    eax,ds:0x462c9c
  422e14:	cmp    eax,0x1
  422e17:	je     0x422f0d
  422e1d:	cmp    eax,edx
  422e1f:	jne    0x422e2e
  422e21:	cmp    DWORD PTR ds:0x462390,0x1
  422e28:	je     0x422f0d
  422e2e:	cmp    ecx,0xfc
  422e34:	je     0x422f32
  422e3a:	push   0x104
  422e3f:	lea    eax,[ebp-0x10c]
  422e45:	push   eax
  422e46:	push   edx
  422e47:	mov    BYTE PTR [ebp-0x8],dl
  422e4a:	call   DWORD PTR ds:0x428084
  422e50:	test   eax,eax
  422e52:	jne    0x422e67
  422e54:	lea    eax,[ebp-0x10c]
  422e5a:	push   0x4284d4
  422e5f:	push   eax
  422e60:	call   0x423d10
  422e65:	pop    ecx
  422e66:	pop    ecx
  422e67:	lea    eax,[ebp-0x10c]
  422e6d:	push   eax
  422e6e:	lea    edi,[ebp-0x10c]
  422e74:	call   0x423f40
  422e79:	inc    eax
  422e7a:	cmp    eax,0x3c
  422e7d:	pop    ecx
  422e7e:	jbe    0x422ea9
  422e80:	lea    eax,[ebp-0x10c]
  422e86:	push   eax
  422e87:	call   0x423f40
  422e8c:	mov    edi,eax
  422e8e:	lea    eax,[ebp-0x10c]
  422e94:	sub    eax,0x3b
  422e97:	push   0x3
  422e99:	add    edi,eax
  422e9b:	push   0x4284d0
  422ea0:	push   edi
  422ea1:	call   0x423e10
  422ea6:	add    esp,0x10
  422ea9:	push   edi
  422eaa:	call   0x423f40
  422eaf:	push   DWORD PTR [esi+0x46239c]
  422eb5:	mov    ebx,eax
  422eb7:	call   0x423f40
  422ebc:	lea    eax,[ebx+eax*1+0x1c]
  422ec0:	pop    ecx
  422ec1:	add    eax,0x3
  422ec4:	pop    ecx
  422ec5:	and    eax,0xfffffffc
  422ec8:	call   0x423980
  422ecd:	mov    ebx,esp
  422ecf:	push   0x4284b4
  422ed4:	push   ebx
  422ed5:	call   0x423d10
  422eda:	push   edi
  422edb:	push   ebx
  422edc:	call   0x423d20
  422ee1:	push   0x4284b0
  422ee6:	push   ebx
  422ee7:	call   0x423d20
  422eec:	push   DWORD PTR [esi+0x46239c]
  422ef2:	push   ebx
  422ef3:	call   0x423d20
  422ef8:	push   0x12010
  422efd:	push   0x428488
  422f02:	push   ebx
  422f03:	call   0x423c12
  422f08:	add    esp,0x2c
  422f0b:	jmp    0x422f32
  422f0d:	push   edx
  422f0e:	lea    eax,[ebp+0x8]
  422f11:	push   eax
  422f12:	lea    esi,[esi+0x46239c]
  422f18:	push   DWORD PTR [esi]
  422f1a:	call   0x423f40
  422f1f:	pop    ecx
  422f20:	push   eax
  422f21:	push   DWORD PTR [esi]
  422f23:	push   0xfffffff4
  422f25:	call   DWORD PTR ds:0x428080
  422f2b:	push   eax
  422f2c:	call   DWORD PTR ds:0x42807c
  422f32:	lea    esp,[ebp-0x118]
  422f38:	mov    ecx,DWORD PTR [ebp-0x4]
  422f3b:	xor    ecx,DWORD PTR [ebp+0x4]
  422f3e:	call   0x423ffc
  422f43:	pop    edi
  422f44:	pop    esi
  422f45:	pop    ebx
  422f46:	leave  
  422f47:	ret    
  422f48:	mov    eax,ds:0x462c9c
  422f4d:	cmp    eax,0x1
  422f50:	je     0x422f5f
  422f52:	test   eax,eax
  422f54:	jne    0x422f80
  422f56:	cmp    DWORD PTR ds:0x462390,0x1
  422f5d:	jne    0x422f80
  422f5f:	push   0xfc
  422f64:	call   0x422dd1
  422f69:	mov    eax,ds:0x462ce8
  422f6e:	test   eax,eax
  422f70:	pop    ecx
  422f71:	je     0x422f75
  422f73:	call   eax
  422f75:	push   0xff
  422f7a:	call   0x422dd1
  422f7f:	pop    ecx
  422f80:	ret    
  422f81:	push   ebp
  422f82:	mov    ebp,esp
  422f84:	push   ecx
  422f85:	push   ebx
  422f86:	push   esi
  422f87:	push   edi
  422f88:	call   0x4237e9
  422f8d:	mov    edi,DWORD PTR [ebp+0x8]
  422f90:	mov    esi,eax
  422f92:	mov    edx,DWORD PTR [esi+0x54]
  422f95:	mov    eax,ds:0x4624ac
  422f9a:	mov    ecx,edx
  422f9c:	cmp    DWORD PTR [ecx],edi
  422f9e:	je     0x422fad
  422fa0:	lea    ebx,[eax+eax*2]
  422fa3:	add    ecx,0xc
  422fa6:	lea    ebx,[edx+ebx*4]
  422fa9:	cmp    ecx,ebx
  422fab:	jb     0x422f9c
  422fad:	lea    eax,[eax+eax*2]
  422fb0:	lea    eax,[edx+eax*4]
  422fb3:	cmp    ecx,eax
  422fb5:	jae    0x422fbb
  422fb7:	cmp    DWORD PTR [ecx],edi
  422fb9:	je     0x422fbd
  422fbb:	xor    ecx,ecx
  422fbd:	test   ecx,ecx
  422fbf:	je     0x4230d7
  422fc5:	mov    ebx,DWORD PTR [ecx+0x8]
  422fc8:	test   ebx,ebx
  422fca:	mov    DWORD PTR [ebp+0x8],ebx
  422fcd:	je     0x4230d7
  422fd3:	cmp    ebx,0x5
  422fd6:	jne    0x422fe4
  422fd8:	and    DWORD PTR [ecx+0x8],0x0
  422fdc:	xor    eax,eax
  422fde:	inc    eax
  422fdf:	jmp    0x4230e0
  422fe4:	cmp    ebx,0x1
  422fe7:	je     0x4230d2
  422fed:	mov    eax,DWORD PTR [esi+0x58]
  422ff0:	mov    DWORD PTR [ebp-0x4],eax
  422ff3:	mov    eax,DWORD PTR [ebp+0xc]
  422ff6:	mov    DWORD PTR [esi+0x58],eax
  422ff9:	mov    eax,DWORD PTR [ecx+0x4]
  422ffc:	cmp    eax,0x8
  422fff:	jne    0x4230c4
  423005:	mov    edx,DWORD PTR ds:0x4624a0
  42300b:	mov    eax,ds:0x4624a4
  423010:	add    eax,edx
  423012:	cmp    edx,eax
  423014:	jge    0x42303d
  423016:	lea    eax,[edx+edx*2]
  423019:	shl    eax,0x2
  42301c:	mov    edi,DWORD PTR [esi+0x54]
  42301f:	and    DWORD PTR [eax+edi*1+0x8],0x0
  423024:	mov    edi,DWORD PTR ds:0x4624a0
  42302a:	mov    ebx,DWORD PTR ds:0x4624a4
  423030:	inc    edx
  423031:	add    ebx,edi
  423033:	add    eax,0xc
  423036:	cmp    edx,ebx
  423038:	jl     0x42301c
  42303a:	mov    ebx,DWORD PTR [ebp+0x8]
  42303d:	mov    ecx,DWORD PTR [ecx]
  42303f:	cmp    ecx,0xc000008e
  423045:	mov    edi,DWORD PTR [esi+0x5c]
  423048:	jne    0x423053
  42304a:	mov    DWORD PTR [esi+0x5c],0x83
  423051:	jmp    0x4230b7
  423053:	cmp    ecx,0xc0000090
  423059:	jne    0x423064
  42305b:	mov    DWORD PTR [esi+0x5c],0x81
  423062:	jmp    0x4230b7
  423064:	cmp    ecx,0xc0000091
  42306a:	jne    0x423075
  42306c:	mov    DWORD PTR [esi+0x5c],0x84
  423073:	jmp    0x4230b7
  423075:	cmp    ecx,0xc0000093
  42307b:	jne    0x423086
  42307d:	mov    DWORD PTR [esi+0x5c],0x85
  423084:	jmp    0x4230b7
  423086:	cmp    ecx,0xc000008d
  42308c:	jne    0x423097
  42308e:	mov    DWORD PTR [esi+0x5c],0x82
  423095:	jmp    0x4230b7
  423097:	cmp    ecx,0xc000008f
  42309d:	jne    0x4230a8
  42309f:	mov    DWORD PTR [esi+0x5c],0x86
  4230a6:	jmp    0x4230b7
  4230a8:	cmp    ecx,0xc0000092
  4230ae:	jne    0x4230b7
  4230b0:	mov    DWORD PTR [esi+0x5c],0x8a
  4230b7:	push   DWORD PTR [esi+0x5c]
  4230ba:	push   0x8
  4230bc:	call   ebx
  4230be:	pop    ecx
  4230bf:	mov    DWORD PTR [esi+0x5c],edi
  4230c2:	jmp    0x4230cb
  4230c4:	and    DWORD PTR [ecx+0x8],0x0
  4230c8:	push   eax
  4230c9:	call   ebx
  4230cb:	mov    eax,DWORD PTR [ebp-0x4]
  4230ce:	pop    ecx
  4230cf:	mov    DWORD PTR [esi+0x58],eax
  4230d2:	or     eax,0xffffffff
  4230d5:	jmp    0x4230e0
  4230d7:	push   DWORD PTR [ebp+0xc]
  4230da:	call   DWORD PTR ds:0x428088
  4230e0:	pop    edi
  4230e1:	pop    esi
  4230e2:	pop    ebx
  4230e3:	leave  
  4230e4:	ret    
  4230e5:	cmp    DWORD PTR ds:0x46344c,0x0
  4230ec:	jne    0x4230f3
  4230ee:	call   0x42451c
  4230f3:	push   esi
  4230f4:	mov    esi,DWORD PTR ds:0x463454
  4230fa:	test   esi,esi
  4230fc:	jne    0x423105
  4230fe:	mov    esi,0x4284eb
  423103:	jmp    0x42314a
  423105:	mov    al,BYTE PTR [esi]
  423107:	cmp    al,0x22
  423109:	jne    0x423133
  42310b:	inc    esi
  42310c:	mov    al,BYTE PTR [esi]
  42310e:	cmp    al,0x22
  423110:	je     0x423143
  423112:	test   al,al
  423114:	je     0x42312c
  423116:	movzx  eax,al
  423119:	push   eax
  42311a:	call   0x42403b
  42311f:	test   eax,eax
  423121:	pop    ecx
  423122:	je     0x423125
  423124:	inc    esi
  423125:	inc    esi
  423126:	mov    al,BYTE PTR [esi]
  423128:	cmp    al,0x22
  42312a:	jne    0x423112
  42312c:	cmp    BYTE PTR [esi],0x22
  42312f:	jne    0x423144
  423131:	jmp    0x423143
  423133:	cmp    al,0x20
  423135:	jbe    0x423144
  423137:	inc    esi
  423138:	cmp    BYTE PTR [esi],0x20
  42313b:	ja     0x423137
  42313d:	jmp    0x423144
  42313f:	cmp    al,0x20
  423141:	ja     0x42314a
  423143:	inc    esi
  423144:	mov    al,BYTE PTR [esi]
  423146:	test   al,al
  423148:	jne    0x42313f
  42314a:	mov    eax,esi
  42314c:	pop    esi
  42314d:	ret    
  42314e:	push   ebx
  42314f:	xor    ebx,ebx
  423151:	cmp    DWORD PTR ds:0x46344c,ebx
  423157:	push   esi
  423158:	push   edi
  423159:	jne    0x423160
  42315b:	call   0x42451c
  423160:	mov    esi,DWORD PTR ds:0x462c94
  423166:	xor    edi,edi
  423168:	cmp    esi,ebx
  42316a:	jne    0x42317e
  42316c:	jmp    0x42319e
  42316e:	cmp    al,0x3d
  423170:	je     0x423173
  423172:	inc    edi
  423173:	push   esi
  423174:	call   0x423f40
  423179:	pop    ecx
  42317a:	lea    esi,[esi+eax*1+0x1]
  42317e:	mov    al,BYTE PTR [esi]
  423180:	cmp    al,bl
  423182:	jne    0x42316e
  423184:	lea    eax,[edi*4+0x4]
  42318b:	push   eax
  42318c:	call   0x424652
  423191:	mov    edi,eax
  423193:	cmp    edi,ebx
  423195:	pop    ecx
  423196:	mov    DWORD PTR ds:0x462cc4,edi
  42319c:	jne    0x4231a3
  42319e:	or     eax,0xffffffff
  4231a1:	jmp    0x4231fb
  4231a3:	mov    esi,DWORD PTR ds:0x462c94
  4231a9:	push   ebp
  4231aa:	jmp    0x4231d6
  4231ac:	push   esi
  4231ad:	call   0x423f40
  4231b2:	mov    ebp,eax
  4231b4:	inc    ebp
  4231b5:	cmp    BYTE PTR [esi],0x3d
  4231b8:	pop    ecx
  4231b9:	je     0x4231d4
  4231bb:	push   ebp
  4231bc:	call   0x424652
  4231c1:	cmp    eax,ebx
  4231c3:	pop    ecx
  4231c4:	mov    DWORD PTR [edi],eax
  4231c6:	je     0x4231ff
  4231c8:	push   esi
  4231c9:	push   eax
  4231ca:	call   0x423d10
  4231cf:	pop    ecx
  4231d0:	pop    ecx
  4231d1:	add    edi,0x4
  4231d4:	add    esi,ebp
  4231d6:	cmp    BYTE PTR [esi],bl
  4231d8:	jne    0x4231ac
  4231da:	push   DWORD PTR ds:0x462c94
  4231e0:	call   0x42453a
  4231e5:	mov    DWORD PTR ds:0x462c94,ebx
  4231eb:	mov    DWORD PTR [edi],ebx
  4231ed:	mov    DWORD PTR ds:0x463440,0x1
  4231f7:	xor    eax,eax
  4231f9:	pop    ecx
  4231fa:	pop    ebp
  4231fb:	pop    edi
  4231fc:	pop    esi
  4231fd:	pop    ebx
  4231fe:	ret    
  4231ff:	push   DWORD PTR ds:0x462cc4
  423205:	call   0x42453a
  42320a:	mov    DWORD PTR ds:0x462cc4,ebx
  423210:	or     eax,0xffffffff
  423213:	jmp    0x4231f9
  423215:	push   ebp
  423216:	mov    ebp,esp
  423218:	push   ecx
  423219:	push   ebx
  42321a:	mov    ebx,DWORD PTR [ebp+0xc]
  42321d:	xor    edx,edx
  42321f:	cmp    DWORD PTR [ebp+0x8],edx
  423222:	push   edi
  423223:	mov    DWORD PTR [esi],edx
  423225:	mov    edi,ecx
  423227:	mov    DWORD PTR [ebx],0x1
  42322d:	je     0x423238
  42322f:	mov    ecx,DWORD PTR [ebp+0x8]
  423232:	add    DWORD PTR [ebp+0x8],0x4
  423236:	mov    DWORD PTR [ecx],edi
  423238:	cmp    BYTE PTR [eax],0x22
  42323b:	jne    0x42324b
  42323d:	xor    ecx,ecx
  42323f:	test   edx,edx
  423241:	sete   cl
  423244:	inc    eax
  423245:	mov    edx,ecx
  423247:	mov    cl,0x22
  423249:	jmp    0x423278
  42324b:	inc    DWORD PTR [esi]
  42324d:	test   edi,edi
  42324f:	je     0x423256
  423251:	mov    cl,BYTE PTR [eax]
  423253:	mov    BYTE PTR [edi],cl
  423255:	inc    edi
  423256:	mov    cl,BYTE PTR [eax]
  423258:	movzx  ebx,cl
  42325b:	inc    eax
  42325c:	test   BYTE PTR [ebx+0x463101],0x4
  423263:	je     0x423271
  423265:	inc    DWORD PTR [esi]
  423267:	test   edi,edi
  423269:	je     0x423270
  42326b:	mov    bl,BYTE PTR [eax]
  42326d:	mov    BYTE PTR [edi],bl
  42326f:	inc    edi
  423270:	inc    eax
  423271:	test   cl,cl
  423273:	mov    ebx,DWORD PTR [ebp+0xc]
  423276:	je     0x4232aa
  423278:	test   edx,edx
  42327a:	jne    0x423238
  42327c:	cmp    cl,0x20
  42327f:	je     0x423286
  423281:	cmp    cl,0x9
  423284:	jne    0x423238
  423286:	test   edi,edi
  423288:	je     0x42328e
  42328a:	and    BYTE PTR [edi-0x1],0x0
  42328e:	and    DWORD PTR [ebp-0x4],0x0
  423292:	cmp    BYTE PTR [eax],0x0
  423295:	je     0x423371
  42329b:	mov    cl,BYTE PTR [eax]
  42329d:	cmp    cl,0x20
  4232a0:	je     0x4232a7
  4232a2:	cmp    cl,0x9
  4232a5:	jne    0x4232ad
  4232a7:	inc    eax
  4232a8:	jmp    0x42329b
  4232aa:	dec    eax
  4232ab:	jmp    0x42328e
  4232ad:	cmp    BYTE PTR [eax],0x0
  4232b0:	je     0x423371
  4232b6:	cmp    DWORD PTR [ebp+0x8],0x0
  4232ba:	je     0x4232c5
  4232bc:	mov    ecx,DWORD PTR [ebp+0x8]
  4232bf:	add    DWORD PTR [ebp+0x8],0x4
  4232c3:	mov    DWORD PTR [ecx],edi
  4232c5:	inc    DWORD PTR [ebx]
  4232c7:	xor    ebx,ebx
  4232c9:	inc    ebx
  4232ca:	xor    edx,edx
  4232cc:	jmp    0x4232d0
  4232ce:	inc    eax
  4232cf:	inc    edx
  4232d0:	cmp    BYTE PTR [eax],0x5c
  4232d3:	je     0x4232ce
  4232d5:	cmp    BYTE PTR [eax],0x22
  4232d8:	jne    0x423300
  4232da:	test   dl,0x1
  4232dd:	jne    0x4232fe
  4232df:	cmp    DWORD PTR [ebp-0x4],0x0
  4232e3:	je     0x4232f1
  4232e5:	lea    ecx,[eax+0x1]
  4232e8:	cmp    BYTE PTR [ecx],0x22
  4232eb:	jne    0x4232f1
  4232ed:	mov    eax,ecx
  4232ef:	jmp    0x4232f3
  4232f1:	xor    ebx,ebx
  4232f3:	xor    ecx,ecx
  4232f5:	cmp    DWORD PTR [ebp-0x4],ecx
  4232f8:	sete   cl
  4232fb:	mov    DWORD PTR [ebp-0x4],ecx
  4232fe:	shr    edx,1
  423300:	test   edx,edx
  423302:	je     0x423311
  423304:	test   edi,edi
  423306:	je     0x42330c
  423308:	mov    BYTE PTR [edi],0x5c
  42330b:	inc    edi
  42330c:	inc    DWORD PTR [esi]
  42330e:	dec    edx
  42330f:	jne    0x423304
  423311:	mov    cl,BYTE PTR [eax]
  423313:	test   cl,cl
  423315:	je     0x42335f
  423317:	cmp    DWORD PTR [ebp-0x4],0x0
  42331b:	jne    0x423327
  42331d:	cmp    cl,0x20
  423320:	je     0x42335f
  423322:	cmp    cl,0x9
  423325:	je     0x42335f
  423327:	test   ebx,ebx
  423329:	je     0x423359
  42332b:	test   edi,edi
  42332d:	je     0x423348
  42332f:	movzx  edx,cl
  423332:	test   BYTE PTR [edx+0x463101],0x4
  423339:	je     0x423341
  42333b:	mov    BYTE PTR [edi],cl
  42333d:	inc    edi
  42333e:	inc    eax
  42333f:	inc    DWORD PTR [esi]
  423341:	mov    cl,BYTE PTR [eax]
  423343:	mov    BYTE PTR [edi],cl
  423345:	inc    edi
  423346:	jmp    0x423357
  423348:	movzx  ecx,cl
  42334b:	test   BYTE PTR [ecx+0x463101],0x4
  423352:	je     0x423357
  423354:	inc    eax
  423355:	inc    DWORD PTR [esi]
  423357:	inc    DWORD PTR [esi]
  423359:	inc    eax
  42335a:	jmp    0x4232c7
  42335f:	test   edi,edi
  423361:	je     0x423367
  423363:	and    BYTE PTR [edi],0x0
  423366:	inc    edi
  423367:	inc    DWORD PTR [esi]
  423369:	mov    ebx,DWORD PTR [ebp+0xc]
  42336c:	jmp    0x423292
  423371:	mov    eax,DWORD PTR [ebp+0x8]
  423374:	test   eax,eax
  423376:	je     0x42337b
  423378:	and    DWORD PTR [eax],0x0
  42337b:	inc    DWORD PTR [ebx]
  42337d:	pop    edi
  42337e:	pop    ebx
  42337f:	leave  
  423380:	ret    
  423381:	push   ebp
  423382:	mov    ebp,esp
  423384:	push   ecx
  423385:	push   ecx
  423386:	push   ebx
  423387:	push   esi
  423388:	push   edi
  423389:	xor    edi,edi
  42338b:	cmp    DWORD PTR ds:0x46344c,edi
  423391:	jne    0x423398
  423393:	call   0x42451c
  423398:	and    BYTE PTR ds:0x462df4,0x0
  42339f:	push   0x104
  4233a4:	mov    esi,0x462cf0
  4233a9:	push   esi
  4233aa:	push   edi
  4233ab:	call   DWORD PTR ds:0x428084
  4233b1:	mov    eax,ds:0x463454
  4233b6:	cmp    eax,edi
  4233b8:	mov    DWORD PTR ds:0x462cd4,esi
  4233be:	je     0x4233c7
  4233c0:	cmp    BYTE PTR [eax],0x0
  4233c3:	mov    ebx,eax
  4233c5:	jne    0x4233c9
  4233c7:	mov    ebx,esi
  4233c9:	lea    eax,[ebp-0x4]
  4233cc:	push   eax
  4233cd:	push   edi
  4233ce:	lea    esi,[ebp-0x8]
  4233d1:	xor    ecx,ecx
  4233d3:	mov    eax,ebx
  4233d5:	call   0x423215
  4233da:	mov    esi,DWORD PTR [ebp-0x4]
  4233dd:	mov    eax,DWORD PTR [ebp-0x8]
  4233e0:	shl    esi,0x2
  4233e3:	add    eax,esi
  4233e5:	push   eax
  4233e6:	call   0x424652
  4233eb:	mov    edi,eax
  4233ed:	add    esp,0xc
  4233f0:	test   edi,edi
  4233f2:	jne    0x4233f9
  4233f4:	or     eax,0xffffffff
  4233f7:	jmp    0x42341e
  4233f9:	lea    eax,[ebp-0x4]
  4233fc:	push   eax
  4233fd:	lea    ecx,[esi+edi*1]
  423400:	push   edi
  423401:	lea    esi,[ebp-0x8]
  423404:	mov    eax,ebx
  423406:	call   0x423215
  42340b:	mov    eax,DWORD PTR [ebp-0x4]
  42340e:	dec    eax
  42340f:	pop    ecx
  423410:	mov    ds:0x462cb8,eax
  423415:	pop    ecx
  423416:	mov    DWORD PTR ds:0x462cbc,edi
  42341c:	xor    eax,eax
  42341e:	pop    edi
  42341f:	pop    esi
  423420:	pop    ebx
  423421:	leave  
  423422:	ret    
  423423:	push   ecx
  423424:	push   ecx
  423425:	mov    eax,ds:0x462df8
  42342a:	push   ebx
  42342b:	push   ebp
  42342c:	push   esi
  42342d:	push   edi
  42342e:	mov    edi,DWORD PTR ds:0x428098
  423434:	xor    ebx,ebx
  423436:	xor    esi,esi
  423438:	cmp    eax,ebx
  42343a:	push   0x2
  42343c:	pop    ebp
  42343d:	jne    0x42346c
  42343f:	call   edi
  423441:	mov    esi,eax
  423443:	cmp    esi,ebx
  423445:	je     0x423453
  423447:	mov    DWORD PTR ds:0x462df8,0x1
  423451:	jmp    0x423471
  423453:	call   DWORD PTR ds:0x42801c
  423459:	cmp    eax,0x78
  42345c:	jne    0x423467
  42345e:	mov    eax,ebp
  423460:	mov    ds:0x462df8,eax
  423465:	jmp    0x42346c
  423467:	mov    eax,ds:0x462df8
  42346c:	cmp    eax,0x1
  42346f:	jne    0x4234ee
  423471:	cmp    esi,ebx
  423473:	jne    0x42347d
  423475:	call   edi
  423477:	mov    esi,eax
  423479:	cmp    esi,ebx
  42347b:	je     0x4234f6
  42347d:	cmp    WORD PTR [esi],bx
  423480:	mov    eax,esi
  423482:	je     0x423492
  423484:	add    eax,ebp
  423486:	cmp    WORD PTR [eax],bx
  423489:	jne    0x423484
  42348b:	add    eax,ebp
  42348d:	cmp    WORD PTR [eax],bx
  423490:	jne    0x423484
  423492:	mov    edi,DWORD PTR ds:0x428094
  423498:	push   ebx
  423499:	push   ebx
  42349a:	push   ebx
  42349b:	sub    eax,esi
  42349d:	push   ebx
  42349e:	sar    eax,1
  4234a0:	inc    eax
  4234a1:	push   eax
  4234a2:	push   esi
  4234a3:	push   ebx
  4234a4:	push   ebx
  4234a5:	mov    DWORD PTR [esp+0x34],eax
  4234a9:	call   edi
  4234ab:	mov    ebp,eax
  4234ad:	cmp    ebp,ebx
  4234af:	je     0x4234e3
  4234b1:	push   ebp
  4234b2:	call   0x424652
  4234b7:	cmp    eax,ebx
  4234b9:	pop    ecx
  4234ba:	mov    DWORD PTR [esp+0x10],eax
  4234be:	je     0x4234e3
  4234c0:	push   ebx
  4234c1:	push   ebx
  4234c2:	push   ebp
  4234c3:	push   eax
  4234c4:	push   DWORD PTR [esp+0x24]
  4234c8:	push   esi
  4234c9:	push   ebx
  4234ca:	push   ebx
  4234cb:	call   edi
  4234cd:	test   eax,eax
  4234cf:	jne    0x4234df
  4234d1:	push   DWORD PTR [esp+0x10]
  4234d5:	call   0x42453a
  4234da:	pop    ecx
  4234db:	mov    DWORD PTR [esp+0x10],ebx
  4234df:	mov    ebx,DWORD PTR [esp+0x10]
  4234e3:	push   esi
  4234e4:	call   DWORD PTR ds:0x428090
  4234ea:	mov    eax,ebx
  4234ec:	jmp    0x42353e
  4234ee:	cmp    eax,ebp
  4234f0:	je     0x4234fa
  4234f2:	cmp    eax,ebx
  4234f4:	je     0x4234fa
  4234f6:	xor    eax,eax
  4234f8:	jmp    0x42353e
  4234fa:	call   DWORD PTR ds:0x428040
  423500:	mov    esi,eax
  423502:	cmp    esi,ebx
  423504:	je     0x4234f6
  423506:	cmp    BYTE PTR [esi],bl
  423508:	je     0x423514
  42350a:	inc    eax
  42350b:	cmp    BYTE PTR [eax],bl
  42350d:	jne    0x42350a
  42350f:	inc    eax
  423510:	cmp    BYTE PTR [eax],bl
  423512:	jne    0x42350a
  423514:	sub    eax,esi
  423516:	inc    eax
  423517:	mov    ebp,eax
  423519:	push   ebp
  42351a:	call   0x424652
  42351f:	mov    edi,eax
  423521:	cmp    edi,ebx
  423523:	pop    ecx
  423524:	jne    0x42352a
  423526:	xor    edi,edi
  423528:	jmp    0x423535
  42352a:	push   ebp
  42352b:	push   esi
  42352c:	push   edi
  42352d:	call   0x424670
  423532:	add    esp,0xc
  423535:	push   esi
  423536:	call   DWORD PTR ds:0x42808c
  42353c:	mov    eax,edi
  42353e:	pop    edi
  42353f:	pop    esi
  423540:	pop    ebp
  423541:	pop    ebx
  423542:	pop    ecx
  423543:	pop    ecx
  423544:	ret    
  423545:	sub    esp,0x48
  423548:	push   ebx
  423549:	mov    ebx,0x480
  42354e:	push   ebx
  42354f:	call   0x424652
  423554:	test   eax,eax
  423556:	pop    ecx
  423557:	jne    0x423561
  423559:	or     eax,0xffffffff
  42355c:	jmp    0x42373e
  423561:	mov    ds:0x463340,eax
  423566:	mov    DWORD PTR ds:0x463328,0x20
  423570:	lea    ecx,[eax+0x480]
  423576:	jmp    0x423596
  423578:	and    BYTE PTR [eax+0x4],0x0
  42357c:	or     DWORD PTR [eax],0xffffffff
  42357f:	and    DWORD PTR [eax+0x8],0x0
  423583:	mov    BYTE PTR [eax+0x5],0xa
  423587:	mov    ecx,DWORD PTR ds:0x463340
  42358d:	add    eax,0x24
  423590:	add    ecx,0x480
  423596:	cmp    eax,ecx
  423598:	jb     0x423578
  42359a:	push   ebp
  42359b:	push   esi
  42359c:	push   edi
  42359d:	lea    eax,[esp+0x14]
  4235a1:	push   eax
  4235a2:	call   DWORD PTR ds:0x428064
  4235a8:	cmp    WORD PTR [esp+0x46],0x0
  4235ae:	je     0x42369d
  4235b4:	mov    eax,DWORD PTR [esp+0x48]
  4235b8:	test   eax,eax
  4235ba:	je     0x42369d
  4235c0:	mov    edi,DWORD PTR [eax]
  4235c2:	lea    ebp,[eax+0x4]
  4235c5:	lea    eax,[edi+ebp*1]
  4235c8:	mov    DWORD PTR [esp+0x10],eax
  4235cc:	mov    eax,0x800
  4235d1:	cmp    edi,eax
  4235d3:	jl     0x4235d7
  4235d5:	mov    edi,eax
  4235d7:	cmp    DWORD PTR ds:0x463328,edi
  4235dd:	jge    0x42362d
  4235df:	mov    esi,0x463344
  4235e4:	push   ebx
  4235e5:	call   0x424652
  4235ea:	test   eax,eax
  4235ec:	pop    ecx
  4235ed:	je     0x423627
  4235ef:	add    DWORD PTR ds:0x463328,0x20
  4235f6:	mov    DWORD PTR [esi],eax
  4235f8:	lea    ecx,[eax+0x480]
  4235fe:	jmp    0x423616
  423600:	and    BYTE PTR [eax+0x4],0x0
  423604:	or     DWORD PTR [eax],0xffffffff
  423607:	and    DWORD PTR [eax+0x8],0x0
  42360b:	mov    BYTE PTR [eax+0x5],0xa
  42360f:	mov    ecx,DWORD PTR [esi]
  423611:	add    eax,0x24
  423614:	add    ecx,ebx
  423616:	cmp    eax,ecx
  423618:	jb     0x423600
  42361a:	add    esi,0x4
  42361d:	cmp    DWORD PTR ds:0x463328,edi
  423623:	jl     0x4235e4
  423625:	jmp    0x42362d
  423627:	mov    edi,DWORD PTR ds:0x463328
  42362d:	xor    ebx,ebx
  42362f:	test   edi,edi
  423631:	jle    0x42369d
  423633:	mov    eax,DWORD PTR [esp+0x10]
  423637:	mov    eax,DWORD PTR [eax]
  423639:	cmp    eax,0xffffffff
  42363c:	je     0x423692
  42363e:	mov    cl,BYTE PTR [ebp+0x0]
  423641:	test   cl,0x1
  423644:	je     0x423692
  423646:	test   cl,0x8
  423649:	jne    0x423656
  42364b:	push   eax
  42364c:	call   DWORD PTR ds:0x428050
  423652:	test   eax,eax
  423654:	je     0x423692
  423656:	mov    ecx,ebx
  423658:	mov    eax,ebx
  42365a:	and    eax,0x1f
  42365d:	lea    eax,[eax+eax*8]
  423660:	sar    ecx,0x5
  423663:	mov    ecx,DWORD PTR [ecx*4+0x463340]
  42366a:	lea    esi,[ecx+eax*4]
  42366d:	mov    eax,DWORD PTR [esp+0x10]
  423671:	mov    eax,DWORD PTR [eax]
  423673:	mov    DWORD PTR [esi],eax
  423675:	mov    al,BYTE PTR [ebp+0x0]
  423678:	mov    BYTE PTR [esi+0x4],al
  42367b:	lea    eax,[esi+0xc]
  42367e:	push   0xfa0
  423683:	push   eax
  423684:	call   0x4249bd
  423689:	test   eax,eax
  42368b:	pop    ecx
  42368c:	pop    ecx
  42368d:	je     0x4236bd
  42368f:	inc    DWORD PTR [esi+0x8]
  423692:	add    DWORD PTR [esp+0x10],0x4
  423697:	inc    ebx
  423698:	inc    ebp
  423699:	cmp    ebx,edi
  42369b:	jl     0x423633
  42369d:	xor    ebx,ebx
  42369f:	mov    ecx,DWORD PTR ds:0x463340
  4236a5:	lea    eax,[ebx+ebx*8]
  4236a8:	lea    esi,[ecx+eax*4]
  4236ab:	cmp    DWORD PTR [esi],0xffffffff
  4236ae:	jne    0x42371f
  4236b0:	test   ebx,ebx
  4236b2:	mov    BYTE PTR [esi+0x4],0x81
  4236b6:	jne    0x4236c2
  4236b8:	push   0xfffffff6
  4236ba:	pop    eax
  4236bb:	jmp    0x4236cc
  4236bd:	or     eax,0xffffffff
  4236c0:	jmp    0x42373b
  4236c2:	mov    eax,ebx
  4236c4:	dec    eax
  4236c5:	neg    eax
  4236c7:	sbb    eax,eax
  4236c9:	add    eax,0xfffffff5
  4236cc:	push   eax
  4236cd:	call   DWORD PTR ds:0x428080
  4236d3:	mov    edi,eax
  4236d5:	cmp    edi,0xffffffff
  4236d8:	je     0x423719
  4236da:	push   edi
  4236db:	call   DWORD PTR ds:0x428050
  4236e1:	test   eax,eax
  4236e3:	je     0x423719
  4236e5:	and    eax,0xff
  4236ea:	cmp    eax,0x2
  4236ed:	mov    DWORD PTR [esi],edi
  4236ef:	jne    0x4236f7
  4236f1:	or     BYTE PTR [esi+0x4],0x40
  4236f5:	jmp    0x423700
  4236f7:	cmp    eax,0x3
  4236fa:	jne    0x423700
  4236fc:	or     BYTE PTR [esi+0x4],0x8
  423700:	lea    eax,[esi+0xc]
  423703:	push   0xfa0
  423708:	push   eax
  423709:	call   0x4249bd
  42370e:	test   eax,eax
  423710:	pop    ecx
  423711:	pop    ecx
  423712:	je     0x4236bd
  423714:	inc    DWORD PTR [esi+0x8]
  423717:	jmp    0x423723
  423719:	or     BYTE PTR [esi+0x4],0x40
  42371d:	jmp    0x423723
  42371f:	or     BYTE PTR [esi+0x4],0x80
  423723:	inc    ebx
  423724:	cmp    ebx,0x3
  423727:	jl     0x42369f
  42372d:	push   DWORD PTR ds:0x463328
  423733:	call   DWORD PTR ds:0x42809c
  423739:	xor    eax,eax
  42373b:	pop    edi
  42373c:	pop    esi
  42373d:	pop    ebp
  42373e:	pop    ebx
  42373f:	add    esp,0x48
  423742:	ret    
  423743:	push   0xc
  423745:	push   0x4284f0
  42374a:	call   0x423934
  42374f:	mov    DWORD PTR [ebp-0x1c],0x428f48
  423756:	cmp    DWORD PTR [ebp-0x1c],0x428f48
  42375d:	jae    0x423781
  42375f:	and    DWORD PTR [ebp-0x4],0x0
  423763:	mov    eax,DWORD PTR [ebp-0x1c]
  423766:	mov    eax,DWORD PTR [eax]
  423768:	test   eax,eax
  42376a:	je     0x423777
  42376c:	call   eax
  42376e:	jmp    0x423777
  423770:	xor    eax,eax
  423772:	inc    eax
  423773:	ret    
  423774:	mov    esp,DWORD PTR [ebp-0x18]
  423777:	or     DWORD PTR [ebp-0x4],0xffffffff
  42377b:	add    DWORD PTR [ebp-0x1c],0x4
  42377f:	jmp    0x423756
  423781:	call   0x42396f
  423786:	ret    
  423787:	push   0xc
  423789:	push   0x428500
  42378e:	call   0x423934
  423793:	mov    DWORD PTR [ebp-0x1c],0x428f50
  42379a:	cmp    DWORD PTR [ebp-0x1c],0x428f50
  4237a1:	jae    0x4237c5
  4237a3:	and    DWORD PTR [ebp-0x4],0x0
  4237a7:	mov    eax,DWORD PTR [ebp-0x1c]
  4237aa:	mov    eax,DWORD PTR [eax]
  4237ac:	test   eax,eax
  4237ae:	je     0x4237bb
  4237b0:	call   eax
  4237b2:	jmp    0x4237bb
  4237b4:	xor    eax,eax
  4237b6:	inc    eax
  4237b7:	ret    
  4237b8:	mov    esp,DWORD PTR [ebp-0x18]
  4237bb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4237bf:	add    DWORD PTR [ebp-0x1c],0x4
  4237c3:	jmp    0x42379a
  4237c5:	call   0x42396f
  4237ca:	ret    
  4237cb:	call   0x423a06
  4237d0:	mov    eax,ds:0x4624d4
  4237d5:	cmp    eax,0xffffffff
  4237d8:	je     0x4237e8
  4237da:	push   eax
  4237db:	call   DWORD PTR ds:0x4280a4
  4237e1:	or     DWORD PTR ds:0x4624d4,0xffffffff
  4237e8:	ret    
  4237e9:	push   ebx
  4237ea:	push   esi
  4237eb:	call   DWORD PTR ds:0x42801c
  4237f1:	push   DWORD PTR ds:0x4624d4
  4237f7:	mov    ebx,eax
  4237f9:	call   DWORD PTR ds:0x4280b0
  4237ff:	mov    esi,eax
  423801:	test   esi,esi
  423803:	jne    0x42384e
  423805:	push   0x88
  42380a:	push   0x1
  42380c:	call   0x424a48
  423811:	mov    esi,eax
  423813:	test   esi,esi
  423815:	pop    ecx
  423816:	pop    ecx
  423817:	je     0x423846
  423819:	push   esi
  42381a:	push   DWORD PTR ds:0x4624d4
  423820:	call   DWORD PTR ds:0x4280ac
  423826:	test   eax,eax
  423828:	je     0x423846
  42382a:	mov    DWORD PTR [esi+0x54],0x462428
  423831:	mov    DWORD PTR [esi+0x14],0x1
  423838:	call   DWORD PTR ds:0x42802c
  42383e:	or     DWORD PTR [esi+0x4],0xffffffff
  423842:	mov    DWORD PTR [esi],eax
  423844:	jmp    0x42384e
  423846:	push   0x10
  423848:	call   0x4229fc
  42384d:	pop    ecx
  42384e:	push   ebx
  42384f:	call   DWORD PTR ds:0x4280a8
  423855:	mov    eax,esi
  423857:	pop    esi
  423858:	pop    ebx
  423859:	ret    
  42385a:	call   0x4239bd
  42385f:	test   eax,eax
  423861:	je     0x423873
  423863:	call   DWORD PTR ds:0x4280b4
  423869:	cmp    eax,0xffffffff
  42386c:	mov    ds:0x4624d4,eax
  423871:	jne    0x42387b
  423873:	call   0x4237cb
  423878:	xor    eax,eax
  42387a:	ret    
  42387b:	push   esi
  42387c:	push   0x88
  423881:	push   0x1
  423883:	call   0x424a48
  423888:	mov    esi,eax
  42388a:	test   esi,esi
  42388c:	pop    ecx
  42388d:	pop    ecx
  42388e:	je     0x4238c0
  423890:	push   esi
  423891:	push   DWORD PTR ds:0x4624d4
  423897:	call   DWORD PTR ds:0x4280ac
  42389d:	test   eax,eax
  42389f:	je     0x4238c0
  4238a1:	mov    DWORD PTR [esi+0x54],0x462428
  4238a8:	mov    DWORD PTR [esi+0x14],0x1
  4238af:	call   DWORD PTR ds:0x42802c
  4238b5:	or     DWORD PTR [esi+0x4],0xffffffff
  4238b9:	mov    DWORD PTR [esi],eax
  4238bb:	xor    eax,eax
  4238bd:	inc    eax
  4238be:	pop    esi
  4238bf:	ret    
  4238c0:	call   0x4237cb
  4238c5:	xor    eax,eax
  4238c7:	pop    esi
  4238c8:	ret    
  4238c9:	cmp    DWORD PTR ds:0x462ca4,0x2
  4238d0:	jne    0x4238df
  4238d2:	cmp    DWORD PTR ds:0x462cb0,0x5
  4238d9:	jb     0x4238df
  4238db:	xor    eax,eax
  4238dd:	inc    eax
  4238de:	ret    
  4238df:	push   0x3
  4238e1:	pop    eax
  4238e2:	ret    
  4238e3:	xor    eax,eax
  4238e5:	cmp    DWORD PTR [esp+0x4],eax
  4238e9:	push   0x0
  4238eb:	sete   al
  4238ee:	push   0x1000
  4238f3:	push   eax
  4238f4:	call   DWORD PTR ds:0x4280bc
  4238fa:	test   eax,eax
  4238fc:	mov    ds:0x463320,eax
  423901:	je     0x42392d
  423903:	call   0x4238c9
  423908:	cmp    eax,0x3
  42390b:	mov    ds:0x463324,eax
  423910:	jne    0x423930
  423912:	push   0x3f8
  423917:	call   0x424cca
  42391c:	test   eax,eax
  42391e:	pop    ecx
  42391f:	jne    0x423930
  423921:	push   DWORD PTR ds:0x463320
  423927:	call   DWORD PTR ds:0x4280b8
  42392d:	xor    eax,eax
  42392f:	ret    
  423930:	xor    eax,eax
  423932:	inc    eax
  423933:	ret    
  423934:	push   0x4257f8
  423939:	mov    eax,fs:0x0
  42393f:	push   eax
  423940:	mov    eax,DWORD PTR [esp+0x10]
  423944:	mov    DWORD PTR [esp+0x10],ebp
  423948:	lea    ebp,[esp+0x10]
  42394c:	sub    esp,eax
  42394e:	push   ebx
  42394f:	push   esi
  423950:	push   edi
  423951:	mov    eax,DWORD PTR [ebp-0x8]
  423954:	mov    DWORD PTR [ebp-0x18],esp
  423957:	push   eax
  423958:	mov    eax,DWORD PTR [ebp-0x4]
  42395b:	mov    DWORD PTR [ebp-0x4],0xffffffff
  423962:	mov    DWORD PTR [ebp-0x8],eax
  423965:	lea    eax,[ebp-0x10]
  423968:	mov    fs:0x0,eax
  42396e:	ret    
  42396f:	mov    ecx,DWORD PTR [ebp-0x10]
  423972:	mov    DWORD PTR fs:0x0,ecx
  423979:	pop    ecx
  42397a:	pop    edi
  42397b:	pop    esi
  42397c:	pop    ebx
  42397d:	leave  
  42397e:	push   ecx
  42397f:	ret    
  423980:	cmp    eax,0x1000
  423985:	jae    0x423995
  423987:	neg    eax
  423989:	add    eax,esp
  42398b:	add    eax,0x4
  42398e:	test   DWORD PTR [eax],eax
  423990:	xchg   esp,eax
  423991:	mov    eax,DWORD PTR [eax]
  423993:	push   eax
  423994:	ret    
  423995:	push   ecx
  423996:	lea    ecx,[esp+0x8]
  42399a:	sub    ecx,0x1000
  4239a0:	sub    eax,0x1000
  4239a5:	test   DWORD PTR [ecx],eax
  4239a7:	cmp    eax,0x1000
  4239ac:	jae    0x42399a
  4239ae:	sub    ecx,eax
  4239b0:	mov    eax,esp
  4239b2:	test   DWORD PTR [ecx],eax
  4239b4:	mov    esp,ecx
  4239b6:	mov    ecx,DWORD PTR [eax]
  4239b8:	mov    eax,DWORD PTR [eax+0x4]
  4239bb:	push   eax
  4239bc:	ret    
  4239bd:	push   esi
  4239be:	push   edi
  4239bf:	xor    esi,esi
  4239c1:	mov    edi,0x462e00
  4239c6:	cmp    DWORD PTR [esi*8+0x4624e4],0x1
  4239ce:	jne    0x4239ee
  4239d0:	lea    eax,[esi*8+0x4624e0]
  4239d7:	mov    DWORD PTR [eax],edi
  4239d9:	push   0xfa0
  4239de:	push   DWORD PTR [eax]
  4239e0:	add    edi,0x18
  4239e3:	call   0x4249bd
  4239e8:	test   eax,eax
  4239ea:	pop    ecx
  4239eb:	pop    ecx
  4239ec:	je     0x4239fa
  4239ee:	inc    esi
  4239ef:	cmp    esi,0x24
  4239f2:	jl     0x4239c6
  4239f4:	xor    eax,eax
  4239f6:	inc    eax
  4239f7:	pop    edi
  4239f8:	pop    esi
  4239f9:	ret    
  4239fa:	and    DWORD PTR [esi*8+0x4624e0],0x0
  423a02:	xor    eax,eax
  423a04:	jmp    0x4239f7
  423a06:	push   ebx
  423a07:	mov    ebx,DWORD PTR ds:0x4280a0
  423a0d:	push   esi
  423a0e:	mov    esi,0x4624e0
  423a13:	push   edi
  423a14:	mov    edi,DWORD PTR [esi]
  423a16:	test   edi,edi
  423a18:	je     0x423a2d
  423a1a:	cmp    DWORD PTR [esi+0x4],0x1
  423a1e:	je     0x423a2d
  423a20:	push   edi
  423a21:	call   ebx
  423a23:	push   edi
  423a24:	call   0x42453a
  423a29:	and    DWORD PTR [esi],0x0
  423a2c:	pop    ecx
  423a2d:	add    esi,0x8
  423a30:	cmp    esi,0x462600
  423a36:	jl     0x423a14
  423a38:	mov    esi,0x4624e0
  423a3d:	pop    edi
  423a3e:	mov    eax,DWORD PTR [esi]
  423a40:	test   eax,eax
  423a42:	je     0x423a4d
  423a44:	cmp    DWORD PTR [esi+0x4],0x1
  423a48:	jne    0x423a4d
  423a4a:	push   eax
  423a4b:	call   ebx
  423a4d:	add    esi,0x8
  423a50:	cmp    esi,0x462600
  423a56:	jl     0x423a3e
  423a58:	pop    esi
  423a59:	pop    ebx
  423a5a:	ret    
  423a5b:	push   ebp
  423a5c:	mov    ebp,esp
  423a5e:	mov    eax,DWORD PTR [ebp+0x8]
  423a61:	push   DWORD PTR [eax*8+0x4624e0]
  423a68:	call   DWORD PTR ds:0x4280c8
  423a6e:	pop    ebp
  423a6f:	ret    
  423a70:	push   ebp
  423a71:	mov    ebp,esp
  423a73:	push   esi
  423a74:	mov    esi,DWORD PTR [ebp+0x8]
  423a77:	lea    esi,[esi*8+0x4624e0]
  423a7e:	cmp    DWORD PTR [esi],0x0
  423a81:	je     0x423a88
  423a83:	xor    eax,eax
  423a85:	inc    eax
  423a86:	jmp    0x423aec
  423a88:	push   edi
  423a89:	push   0x18
  423a8b:	call   0x424652
  423a90:	mov    edi,eax
  423a92:	test   edi,edi
  423a94:	pop    ecx
  423a95:	jne    0x423aa6
  423a97:	call   0x4258d0
  423a9c:	mov    DWORD PTR [eax],0xc
  423aa2:	xor    eax,eax
  423aa4:	jmp    0x423aeb
  423aa6:	push   0xa
  423aa8:	call   0x423aef
  423aad:	cmp    DWORD PTR [esi],0x0
  423ab0:	pop    ecx
  423ab1:	jne    0x423ad9
  423ab3:	push   0xfa0
  423ab8:	push   edi
  423ab9:	call   0x4249bd
  423abe:	test   eax,eax
  423ac0:	pop    ecx
  423ac1:	pop    ecx
  423ac2:	jne    0x423ad5
  423ac4:	push   edi
  423ac5:	call   0x42453a
  423aca:	push   0xa
  423acc:	call   0x423a5b
  423ad1:	pop    ecx
  423ad2:	pop    ecx
  423ad3:	jmp    0x423a97
  423ad5:	mov    DWORD PTR [esi],edi
  423ad7:	jmp    0x423ae0
  423ad9:	push   edi
  423ada:	call   0x42453a
  423adf:	pop    ecx
  423ae0:	push   0xa
  423ae2:	call   0x423a5b
  423ae7:	xor    eax,eax
  423ae9:	pop    ecx
  423aea:	inc    eax
  423aeb:	pop    edi
  423aec:	pop    esi
  423aed:	pop    ebp
  423aee:	ret    
  423aef:	push   ebp
  423af0:	mov    ebp,esp
  423af2:	mov    eax,DWORD PTR [ebp+0x8]
  423af5:	push   esi
  423af6:	lea    esi,[eax*8+0x4624e0]
  423afd:	cmp    DWORD PTR [esi],0x0
  423b00:	jne    0x423b15
  423b02:	push   eax
  423b03:	call   0x423a70
  423b08:	test   eax,eax
  423b0a:	pop    ecx
  423b0b:	jne    0x423b15
  423b0d:	push   0x11
  423b0f:	call   0x4229fc
  423b14:	pop    ecx
  423b15:	push   DWORD PTR [esi]
  423b17:	call   DWORD PTR ds:0x4280cc
  423b1d:	pop    esi
  423b1e:	pop    ebp
  423b1f:	ret    
  423b20:	push   esi
  423b21:	push   DWORD PTR ds:0x463448
  423b27:	call   0x425a86
  423b2c:	pop    ecx
  423b2d:	mov    ecx,DWORD PTR ds:0x463444
  423b33:	mov    esi,eax
  423b35:	mov    eax,ds:0x463448
  423b3a:	mov    edx,ecx
  423b3c:	sub    edx,eax
  423b3e:	add    edx,0x4
  423b41:	cmp    esi,edx
  423b43:	jae    0x423b93
  423b45:	mov    ecx,0x800
  423b4a:	cmp    esi,ecx
  423b4c:	jae    0x423b50
  423b4e:	mov    ecx,esi
  423b50:	add    ecx,esi
  423b52:	push   ecx
  423b53:	push   eax
  423b54:	call   0x4258d9
  423b59:	test   eax,eax
  423b5b:	pop    ecx
  423b5c:	pop    ecx
  423b5d:	jne    0x423b76
  423b5f:	add    esi,0x10
  423b62:	push   esi
  423b63:	push   DWORD PTR ds:0x463448
  423b69:	call   0x4258d9
  423b6e:	test   eax,eax
  423b70:	pop    ecx
  423b71:	pop    ecx
  423b72:	jne    0x423b76
  423b74:	pop    esi
  423b75:	ret    
  423b76:	mov    ecx,DWORD PTR ds:0x463444
  423b7c:	sub    ecx,DWORD PTR ds:0x463448
  423b82:	mov    ds:0x463448,eax
  423b87:	sar    ecx,0x2
  423b8a:	lea    ecx,[eax+ecx*4]
  423b8d:	mov    DWORD PTR ds:0x463444,ecx
  423b93:	mov    DWORD PTR [ecx],edi
  423b95:	add    DWORD PTR ds:0x463444,0x4
  423b9c:	mov    eax,edi
  423b9e:	pop    esi
  423b9f:	ret    
  423ba0:	push   0x80
  423ba5:	call   0x424652
  423baa:	test   eax,eax
  423bac:	pop    ecx
  423bad:	mov    ds:0x463448,eax
  423bb2:	jne    0x423bb8
  423bb4:	push   0x18
  423bb6:	pop    eax
  423bb7:	ret    
  423bb8:	and    DWORD PTR [eax],0x0
  423bbb:	mov    eax,ds:0x463448
  423bc0:	mov    ds:0x463444,eax
  423bc5:	xor    eax,eax
  423bc7:	ret    
  423bc8:	push   0xc
  423bca:	push   0x428510
  423bcf:	call   0x423934
  423bd4:	call   0x422c47
  423bd9:	and    DWORD PTR [ebp-0x4],0x0
  423bdd:	mov    edi,DWORD PTR [ebp+0x8]
  423be0:	call   0x423b20
  423be5:	mov    DWORD PTR [ebp-0x1c],eax
  423be8:	or     DWORD PTR [ebp-0x4],0xffffffff
  423bec:	call   0x423bfa
  423bf1:	mov    eax,DWORD PTR [ebp-0x1c]
  423bf4:	call   0x42396f
  423bf9:	ret    
  423bfa:	call   0x422c50
  423bff:	ret    
  423c00:	push   DWORD PTR [esp+0x4]
  423c04:	call   0x423bc8
  423c09:	neg    eax
  423c0b:	sbb    eax,eax
  423c0d:	neg    eax
  423c0f:	pop    ecx
  423c10:	dec    eax
  423c11:	ret    
  423c12:	push   ebp
  423c13:	mov    ebp,esp
  423c15:	sub    esp,0x10
  423c18:	push   ebx
  423c19:	xor    ebx,ebx
  423c1b:	cmp    DWORD PTR ds:0x462f50,ebx
  423c21:	push   esi
  423c22:	push   edi
  423c23:	jne    0x423c92
  423c25:	push   0x428580
  423c2a:	call   DWORD PTR ds:0x4280d0
  423c30:	mov    edi,eax
  423c32:	cmp    edi,ebx
  423c34:	je     0x423ccd
  423c3a:	mov    esi,DWORD PTR ds:0x428014
  423c40:	push   0x428574
  423c45:	push   edi
  423c46:	call   esi
  423c48:	test   eax,eax
  423c4a:	mov    ds:0x462f50,eax
  423c4f:	je     0x423ccd
  423c51:	push   0x428564
  423c56:	push   edi
  423c57:	call   esi
  423c59:	push   0x428550
  423c5e:	push   edi
  423c5f:	mov    ds:0x462f54,eax
  423c64:	call   esi
  423c66:	cmp    DWORD PTR ds:0x462ca4,0x2
  423c6d:	mov    ds:0x462f58,eax
  423c72:	jne    0x423c92
  423c74:	push   0x428534
  423c79:	push   edi
  423c7a:	call   esi
  423c7c:	test   eax,eax
  423c7e:	mov    ds:0x462f60,eax
  423c83:	je     0x423c92
  423c85:	push   0x42851c
  423c8a:	push   edi
  423c8b:	call   esi
  423c8d:	mov    ds:0x462f5c,eax
  423c92:	mov    eax,ds:0x462f5c
  423c97:	test   eax,eax
  423c99:	je     0x423cd7
  423c9b:	call   eax
  423c9d:	test   eax,eax
  423c9f:	je     0x423cbe
  423ca1:	lea    ecx,[ebp-0x4]
  423ca4:	push   ecx
  423ca5:	push   0xc
  423ca7:	lea    ecx,[ebp-0x10]
  423caa:	push   ecx
  423cab:	push   0x1
  423cad:	push   eax
  423cae:	call   DWORD PTR ds:0x462f60
  423cb4:	test   eax,eax
  423cb6:	je     0x423cbe
  423cb8:	test   BYTE PTR [ebp-0x8],0x1
  423cbc:	jne    0x423cd7
  423cbe:	cmp    DWORD PTR ds:0x462cb0,0x4
  423cc5:	jb     0x423cd1
  423cc7:	or     BYTE PTR [ebp+0x12],0x20
  423ccb:	jmp    0x423cf6
  423ccd:	xor    eax,eax
  423ccf:	jmp    0x423d06
  423cd1:	or     BYTE PTR [ebp+0x12],0x4
  423cd5:	jmp    0x423cf6
  423cd7:	mov    eax,ds:0x462f54
  423cdc:	test   eax,eax
  423cde:	je     0x423cf6
  423ce0:	call   eax
  423ce2:	mov    ebx,eax
  423ce4:	test   ebx,ebx
  423ce6:	je     0x423cf6
  423ce8:	mov    eax,ds:0x462f58
  423ced:	test   eax,eax
  423cef:	je     0x423cf6
  423cf1:	push   ebx
  423cf2:	call   eax
  423cf4:	mov    ebx,eax
  423cf6:	push   DWORD PTR [ebp+0x10]
  423cf9:	push   DWORD PTR [ebp+0xc]
  423cfc:	push   DWORD PTR [ebp+0x8]
  423cff:	push   ebx
  423d00:	call   DWORD PTR ds:0x462f50
  423d06:	pop    edi
  423d07:	pop    esi
  423d08:	pop    ebx
  423d09:	leave  
  423d0a:	ret    
  423d0b:	int3   
  423d0c:	int3   
  423d0d:	int3   
  423d0e:	int3   
  423d0f:	int3   
  423d10:	push   edi
  423d11:	mov    edi,DWORD PTR [esp+0x8]
  423d15:	jmp    0x423d85
  423d17:	lea    esp,[esp+0x0]
  423d1e:	mov    edi,edi
  423d20:	mov    ecx,DWORD PTR [esp+0x4]
  423d24:	push   edi
  423d25:	test   ecx,0x3
  423d2b:	je     0x423d40
  423d2d:	mov    al,BYTE PTR [ecx]
  423d2f:	add    ecx,0x1
  423d32:	test   al,al
  423d34:	je     0x423d73
  423d36:	test   ecx,0x3
  423d3c:	jne    0x423d2d
  423d3e:	mov    edi,edi
  423d40:	mov    eax,DWORD PTR [ecx]
  423d42:	mov    edx,0x7efefeff
  423d47:	add    edx,eax
  423d49:	xor    eax,0xffffffff
  423d4c:	xor    eax,edx
  423d4e:	add    ecx,0x4
  423d51:	test   eax,0x81010100
  423d56:	je     0x423d40
  423d58:	mov    eax,DWORD PTR [ecx-0x4]
  423d5b:	test   al,al
  423d5d:	je     0x423d82
  423d5f:	test   ah,ah
  423d61:	je     0x423d7d
  423d63:	test   eax,0xff0000
  423d68:	je     0x423d78
  423d6a:	test   eax,0xff000000
  423d6f:	je     0x423d73
  423d71:	jmp    0x423d40
  423d73:	lea    edi,[ecx-0x1]
  423d76:	jmp    0x423d85
  423d78:	lea    edi,[ecx-0x2]
  423d7b:	jmp    0x423d85
  423d7d:	lea    edi,[ecx-0x3]
  423d80:	jmp    0x423d85
  423d82:	lea    edi,[ecx-0x4]
  423d85:	mov    ecx,DWORD PTR [esp+0xc]
  423d89:	test   ecx,0x3
  423d8f:	je     0x423dae
  423d91:	mov    dl,BYTE PTR [ecx]
  423d93:	add    ecx,0x1
  423d96:	test   dl,dl
  423d98:	je     0x423e00
  423d9a:	mov    BYTE PTR [edi],dl
  423d9c:	add    edi,0x1
  423d9f:	test   ecx,0x3
  423da5:	jne    0x423d91
  423da7:	jmp    0x423dae
  423da9:	mov    DWORD PTR [edi],edx
  423dab:	add    edi,0x4
  423dae:	mov    edx,0x7efefeff
  423db3:	mov    eax,DWORD PTR [ecx]
  423db5:	add    edx,eax
  423db7:	xor    eax,0xffffffff
  423dba:	xor    eax,edx
  423dbc:	mov    edx,DWORD PTR [ecx]
  423dbe:	add    ecx,0x4
  423dc1:	test   eax,0x81010100
  423dc6:	je     0x423da9
  423dc8:	test   dl,dl
  423dca:	je     0x423e00
  423dcc:	test   dh,dh
  423dce:	je     0x423df7
  423dd0:	test   edx,0xff0000
  423dd6:	je     0x423dea
  423dd8:	test   edx,0xff000000
  423dde:	je     0x423de2
  423de0:	jmp    0x423da9
  423de2:	mov    DWORD PTR [edi],edx
  423de4:	mov    eax,DWORD PTR [esp+0x8]
  423de8:	pop    edi
  423de9:	ret    
  423dea:	mov    WORD PTR [edi],dx
  423ded:	mov    eax,DWORD PTR [esp+0x8]
  423df1:	mov    BYTE PTR [edi+0x2],0x0
  423df5:	pop    edi
  423df6:	ret    
  423df7:	mov    WORD PTR [edi],dx
  423dfa:	mov    eax,DWORD PTR [esp+0x8]
  423dfe:	pop    edi
  423dff:	ret    
  423e00:	mov    BYTE PTR [edi],dl
  423e02:	mov    eax,DWORD PTR [esp+0x8]
  423e06:	pop    edi
  423e07:	ret    
  423e08:	int3   
  423e09:	int3   
  423e0a:	int3   
  423e0b:	int3   
  423e0c:	int3   
  423e0d:	int3   
  423e0e:	int3   
  423e0f:	int3   
  423e10:	mov    ecx,DWORD PTR [esp+0xc]
  423e14:	push   edi
  423e15:	test   ecx,ecx
  423e17:	je     0x423eaf
  423e1d:	push   esi
  423e1e:	push   ebx
  423e1f:	mov    ebx,ecx
  423e21:	mov    esi,DWORD PTR [esp+0x14]
  423e25:	test   esi,0x3
  423e2b:	mov    edi,DWORD PTR [esp+0x10]
  423e2f:	jne    0x423e3c
  423e31:	shr    ecx,0x2
  423e34:	jne    0x423ebf
  423e3a:	jmp    0x423e63
  423e3c:	mov    al,BYTE PTR [esi]
  423e3e:	add    esi,0x1
  423e41:	mov    BYTE PTR [edi],al
  423e43:	add    edi,0x1
  423e46:	sub    ecx,0x1
  423e49:	je     0x423e76
  423e4b:	test   al,al
  423e4d:	je     0x423e7e
  423e4f:	test   esi,0x3
  423e55:	jne    0x423e3c
  423e57:	mov    ebx,ecx
  423e59:	shr    ecx,0x2
  423e5c:	jne    0x423ebf
  423e5e:	and    ebx,0x3
  423e61:	je     0x423e76
  423e63:	mov    al,BYTE PTR [esi]
  423e65:	add    esi,0x1
  423e68:	mov    BYTE PTR [edi],al
  423e6a:	add    edi,0x1
  423e6d:	test   al,al
  423e6f:	je     0x423ea8
  423e71:	sub    ebx,0x1
  423e74:	jne    0x423e63
  423e76:	mov    eax,DWORD PTR [esp+0x10]
  423e7a:	pop    ebx
  423e7b:	pop    esi
  423e7c:	pop    edi
  423e7d:	ret    
  423e7e:	test   edi,0x3
  423e84:	je     0x423e9c
  423e86:	mov    BYTE PTR [edi],al
  423e88:	add    edi,0x1
  423e8b:	sub    ecx,0x1
  423e8e:	je     0x423f2c
  423e94:	test   edi,0x3
  423e9a:	jne    0x423e86
  423e9c:	mov    ebx,ecx
  423e9e:	shr    ecx,0x2
  423ea1:	jne    0x423f17
  423ea3:	mov    BYTE PTR [edi],al
  423ea5:	add    edi,0x1
  423ea8:	sub    ebx,0x1
  423eab:	jne    0x423ea3
  423ead:	pop    ebx
  423eae:	pop    esi
  423eaf:	mov    eax,DWORD PTR [esp+0x8]
  423eb3:	pop    edi
  423eb4:	ret    
  423eb5:	mov    DWORD PTR [edi],edx
  423eb7:	add    edi,0x4
  423eba:	sub    ecx,0x1
  423ebd:	je     0x423e5e
  423ebf:	mov    edx,0x7efefeff
  423ec4:	mov    eax,DWORD PTR [esi]
  423ec6:	add    edx,eax
  423ec8:	xor    eax,0xffffffff
  423ecb:	xor    eax,edx
  423ecd:	mov    edx,DWORD PTR [esi]
  423ecf:	add    esi,0x4
  423ed2:	test   eax,0x81010100
  423ed7:	je     0x423eb5
  423ed9:	test   dl,dl
  423edb:	je     0x423f09
  423edd:	test   dh,dh
  423edf:	je     0x423eff
  423ee1:	test   edx,0xff0000
  423ee7:	je     0x423ef5
  423ee9:	test   edx,0xff000000
  423eef:	jne    0x423eb5
  423ef1:	mov    DWORD PTR [edi],edx
  423ef3:	jmp    0x423f0d
  423ef5:	and    edx,0xffff
  423efb:	mov    DWORD PTR [edi],edx
  423efd:	jmp    0x423f0d
  423eff:	and    edx,0xff
  423f05:	mov    DWORD PTR [edi],edx
  423f07:	jmp    0x423f0d
  423f09:	xor    edx,edx
  423f0b:	mov    DWORD PTR [edi],edx
  423f0d:	add    edi,0x4
  423f10:	xor    eax,eax
  423f12:	sub    ecx,0x1
  423f15:	je     0x423f23
  423f17:	xor    eax,eax
  423f19:	mov    DWORD PTR [edi],eax
  423f1b:	add    edi,0x4
  423f1e:	sub    ecx,0x1
  423f21:	jne    0x423f19
  423f23:	and    ebx,0x3
  423f26:	jne    0x423ea3
  423f2c:	mov    eax,DWORD PTR [esp+0x10]
  423f30:	pop    ebx
  423f31:	pop    esi
  423f32:	pop    edi
  423f33:	ret    
  423f34:	int3   
  423f35:	int3   
  423f36:	int3   
  423f37:	int3   
  423f38:	int3   
  423f39:	int3   
  423f3a:	int3   
  423f3b:	int3   
  423f3c:	int3   
  423f3d:	int3   
  423f3e:	int3   
  423f3f:	int3   
  423f40:	mov    ecx,DWORD PTR [esp+0x4]
  423f44:	test   ecx,0x3
  423f4a:	je     0x423f70
  423f4c:	mov    al,BYTE PTR [ecx]
  423f4e:	add    ecx,0x1
  423f51:	test   al,al
  423f53:	je     0x423fa3
  423f55:	test   ecx,0x3
  423f5b:	jne    0x423f4c
  423f5d:	add    eax,0x0
  423f62:	lea    esp,[esp+0x0]
  423f69:	lea    esp,[esp+0x0]
  423f70:	mov    eax,DWORD PTR [ecx]
  423f72:	mov    edx,0x7efefeff
  423f77:	add    edx,eax
  423f79:	xor    eax,0xffffffff
  423f7c:	xor    eax,edx
  423f7e:	add    ecx,0x4
  423f81:	test   eax,0x81010100
  423f86:	je     0x423f70
  423f88:	mov    eax,DWORD PTR [ecx-0x4]
  423f8b:	test   al,al
  423f8d:	je     0x423fc1
  423f8f:	test   ah,ah
  423f91:	je     0x423fb7
  423f93:	test   eax,0xff0000
  423f98:	je     0x423fad
  423f9a:	test   eax,0xff000000
  423f9f:	je     0x423fa3
  423fa1:	jmp    0x423f70
  423fa3:	lea    eax,[ecx-0x1]
  423fa6:	mov    ecx,DWORD PTR [esp+0x4]
  423faa:	sub    eax,ecx
  423fac:	ret    
  423fad:	lea    eax,[ecx-0x2]
  423fb0:	mov    ecx,DWORD PTR [esp+0x4]
  423fb4:	sub    eax,ecx
  423fb6:	ret    
  423fb7:	lea    eax,[ecx-0x3]
  423fba:	mov    ecx,DWORD PTR [esp+0x4]
  423fbe:	sub    eax,ecx
  423fc0:	ret    
  423fc1:	lea    eax,[ecx-0x4]
  423fc4:	mov    ecx,DWORD PTR [esp+0x4]
  423fc8:	sub    eax,ecx
  423fca:	ret    
  423fcb:	push   0x8
  423fcd:	push   0x428590
  423fd2:	call   0x423934
  423fd7:	and    DWORD PTR [ebp-0x4],0x0
  423fdb:	push   0x0
  423fdd:	push   0x1
  423fdf:	call   0x425b52
  423fe4:	pop    ecx
  423fe5:	pop    ecx
  423fe6:	jmp    0x423fef
  423fe8:	xor    eax,eax
  423fea:	inc    eax
  423feb:	ret    
  423fec:	mov    esp,DWORD PTR [ebp-0x18]
  423fef:	or     DWORD PTR [ebp-0x4],0xffffffff
  423ff3:	push   0x3
  423ff5:	call   DWORD PTR ds:0x428070
  423ffb:	int3   
  423ffc:	cmp    ecx,DWORD PTR ds:0x462600
  424002:	jne    0x424005
  424004:	ret    
  424005:	jmp    0x423fcb
  42400a:	movzx  eax,BYTE PTR [esp+0x4]
  42400f:	mov    cl,BYTE PTR [esp+0xc]
  424013:	test   BYTE PTR [eax+0x463101],cl
  424019:	jne    0x424037
  42401b:	cmp    DWORD PTR [esp+0x8],0x0
  424020:	je     0x424030
  424022:	movzx  eax,WORD PTR [eax*2+0x42898a]
  42402a:	and    eax,DWORD PTR [esp+0x8]
  42402e:	jmp    0x424032
  424030:	xor    eax,eax
  424032:	test   eax,eax
  424034:	jne    0x424037
  424036:	ret    
  424037:	xor    eax,eax
  424039:	inc    eax
  42403a:	ret    
  42403b:	push   0x4
  42403d:	push   0x0
  42403f:	push   DWORD PTR [esp+0xc]
  424043:	call   0x42400a
  424048:	add    esp,0xc
  42404b:	ret    
  42404c:	sub    eax,0x3a4
  424051:	je     0x424075
  424053:	sub    eax,0x4
  424056:	je     0x42406f
  424058:	sub    eax,0xd
  42405b:	je     0x424069
  42405d:	dec    eax
  42405e:	je     0x424063
  424060:	xor    eax,eax
  424062:	ret    
  424063:	mov    eax,0x404
  424068:	ret    
  424069:	mov    eax,0x412
  42406e:	ret    
  42406f:	mov    eax,0x804
  424074:	ret    
  424075:	mov    eax,0x411
  42407a:	ret    
  42407b:	push   edi
  42407c:	push   0x40
  42407e:	xor    eax,eax
  424080:	pop    ecx
  424081:	mov    edi,0x463100
  424086:	rep stos DWORD PTR es:[edi],eax
  424088:	stos   BYTE PTR es:[edi],al
  424089:	xor    eax,eax
  42408b:	mov    ds:0x463204,eax
  424090:	mov    ds:0x4630fc,eax
  424095:	mov    ds:0x4630f4,eax
  42409a:	mov    edi,0x463210
  42409f:	stos   DWORD PTR es:[edi],eax
  4240a0:	stos   DWORD PTR es:[edi],eax
  4240a1:	stos   DWORD PTR es:[edi],eax
  4240a2:	pop    edi
  4240a3:	ret    
  4240a4:	push   ebp
  4240a5:	mov    ebp,esp
  4240a7:	sub    esp,0x518
  4240ad:	mov    eax,ds:0x462600
  4240b2:	xor    eax,DWORD PTR [ebp+0x4]
  4240b5:	push   esi
  4240b6:	mov    DWORD PTR [ebp-0x4],eax
  4240b9:	lea    eax,[ebp-0x18]
  4240bc:	push   eax
  4240bd:	push   DWORD PTR ds:0x463204
  4240c3:	call   DWORD PTR ds:0x4280dc
  4240c9:	cmp    eax,0x1
  4240cc:	mov    esi,0x100
  4240d1:	jne    0x4241e4
  4240d7:	xor    eax,eax
  4240d9:	mov    BYTE PTR [ebp+eax*1-0x118],al
  4240e0:	inc    eax
  4240e1:	cmp    eax,esi
  4240e3:	jb     0x4240d9
  4240e5:	mov    al,BYTE PTR [ebp-0x12]
  4240e8:	test   al,al
  4240ea:	mov    BYTE PTR [ebp-0x118],0x20
  4240f1:	je     0x424129
  4240f3:	push   ebx
  4240f4:	lea    edx,[ebp-0x11]
  4240f7:	push   edi
  4240f8:	movzx  ecx,BYTE PTR [edx]
  4240fb:	movzx  eax,al
  4240fe:	cmp    eax,ecx
  424100:	ja     0x42411f
  424102:	sub    ecx,eax
  424104:	inc    ecx
  424105:	mov    ebx,ecx
  424107:	shr    ecx,0x2
  42410a:	lea    edi,[ebp+eax*1-0x118]
  424111:	mov    eax,0x20202020
  424116:	rep stos DWORD PTR es:[edi],eax
  424118:	mov    ecx,ebx
  42411a:	and    ecx,0x3
  42411d:	rep stos BYTE PTR es:[edi],al
  42411f:	inc    edx
  424120:	mov    al,BYTE PTR [edx]
  424122:	inc    edx
  424123:	test   al,al
  424125:	jne    0x4240f8
  424127:	pop    edi
  424128:	pop    ebx
  424129:	push   0x0
  42412b:	push   DWORD PTR ds:0x4630f4
  424131:	lea    eax,[ebp-0x518]
  424137:	push   DWORD PTR ds:0x463204
  42413d:	push   eax
  42413e:	push   esi
  42413f:	lea    eax,[ebp-0x118]
  424145:	push   eax
  424146:	push   0x1
  424148:	call   0x426058
  42414d:	push   0x0
  42414f:	push   DWORD PTR ds:0x463204
  424155:	lea    eax,[ebp-0x218]
  42415b:	push   esi
  42415c:	push   eax
  42415d:	push   esi
  42415e:	lea    eax,[ebp-0x118]
  424164:	push   eax
  424165:	push   esi
  424166:	push   DWORD PTR ds:0x4630f4
  42416c:	call   0x425c9c
  424171:	push   0x0
  424173:	push   DWORD PTR ds:0x463204
  424179:	lea    eax,[ebp-0x318]
  42417f:	push   esi
  424180:	push   eax
  424181:	push   esi
  424182:	lea    eax,[ebp-0x118]
  424188:	push   eax
  424189:	push   0x200
  42418e:	push   DWORD PTR ds:0x4630f4
  424194:	call   0x425c9c
  424199:	add    esp,0x5c
  42419c:	xor    eax,eax
  42419e:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  4241a6:	test   cl,0x1
  4241a9:	je     0x4241c1
  4241ab:	or     BYTE PTR [eax+0x463101],0x10
  4241b2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  4241b9:	mov    BYTE PTR [eax+0x463220],cl
  4241bf:	jmp    0x4241dd
  4241c1:	test   cl,0x2
  4241c4:	je     0x4241d6
  4241c6:	or     BYTE PTR [eax+0x463101],0x20
  4241cd:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  4241d4:	jmp    0x4241b9
  4241d6:	and    BYTE PTR [eax+0x463220],0x0
  4241dd:	inc    eax
  4241de:	cmp    eax,esi
  4241e0:	jb     0x42419e
  4241e2:	jmp    0x424228
  4241e4:	xor    eax,eax
  4241e6:	cmp    eax,0x41
  4241e9:	jb     0x424204
  4241eb:	cmp    eax,0x5a
  4241ee:	ja     0x424204
  4241f0:	or     BYTE PTR [eax+0x463101],0x10
  4241f7:	mov    cl,al
  4241f9:	add    cl,0x20
  4241fc:	mov    BYTE PTR [eax+0x463220],cl
  424202:	jmp    0x424223
  424204:	cmp    eax,0x61
  424207:	jb     0x42421c
  424209:	cmp    eax,0x7a
  42420c:	ja     0x42421c
  42420e:	or     BYTE PTR [eax+0x463101],0x20
  424215:	mov    cl,al
  424217:	sub    cl,0x20
  42421a:	jmp    0x4241fc
  42421c:	and    BYTE PTR [eax+0x463220],0x0
  424223:	inc    eax
  424224:	cmp    eax,esi
  424226:	jb     0x4241e6
  424228:	mov    ecx,DWORD PTR [ebp-0x4]
  42422b:	xor    ecx,DWORD PTR [ebp+0x4]
  42422e:	pop    esi
  42422f:	call   0x423ffc
  424234:	leave  
  424235:	ret    
  424236:	push   ebp
  424237:	mov    ebp,esp
  424239:	sub    esp,0x1c
  42423c:	mov    eax,ds:0x462600
  424241:	xor    eax,DWORD PTR [ebp+0x4]
  424244:	push   ebx
  424245:	push   esi
  424246:	mov    esi,DWORD PTR [ebp+0x8]
  424249:	xor    ebx,ebx
  42424b:	cmp    esi,ebx
  42424d:	mov    DWORD PTR [ebp-0x4],eax
  424250:	push   edi
  424251:	je     0x4243ab
  424257:	xor    edx,edx
  424259:	xor    eax,eax
  42425b:	cmp    DWORD PTR [eax+0x462610],esi
  424261:	je     0x4242c8
  424263:	add    eax,0x30
  424266:	inc    edx
  424267:	cmp    eax,0xf0
  42426c:	jb     0x42425b
  42426e:	lea    eax,[ebp-0x1c]
  424271:	push   eax
  424272:	push   esi
  424273:	call   DWORD PTR ds:0x4280dc
  424279:	cmp    eax,0x1
  42427c:	jne    0x4243a3
  424282:	push   0x40
  424284:	xor    eax,eax
  424286:	cmp    DWORD PTR [ebp-0x1c],0x1
  42428a:	pop    ecx
  42428b:	mov    edi,0x463100
  424290:	rep stos DWORD PTR es:[edi],eax
  424292:	stos   BYTE PTR es:[edi],al
  424293:	mov    DWORD PTR ds:0x463204,esi
  424299:	mov    DWORD PTR ds:0x4630f4,ebx
  42429f:	jbe    0x424391
  4242a5:	cmp    BYTE PTR [ebp-0x16],0x0
  4242a9:	je     0x424369
  4242af:	lea    ecx,[ebp-0x15]
  4242b2:	mov    dl,BYTE PTR [ecx]
  4242b4:	test   dl,dl
  4242b6:	je     0x424369
  4242bc:	movzx  eax,BYTE PTR [ecx-0x1]
  4242c0:	movzx  edx,dl
  4242c3:	jmp    0x424359
  4242c8:	push   0x40
  4242ca:	xor    eax,eax
  4242cc:	pop    ecx
  4242cd:	mov    edi,0x463100
  4242d2:	rep stos DWORD PTR es:[edi],eax
  4242d4:	lea    ecx,[edx+edx*2]
  4242d7:	shl    ecx,0x4
  4242da:	mov    DWORD PTR [ebp-0x8],ebx
  4242dd:	stos   BYTE PTR es:[edi],al
  4242de:	lea    ebx,[ecx+0x462620]
  4242e4:	mov    al,BYTE PTR [ebx]
  4242e6:	mov    esi,ebx
  4242e8:	jmp    0x424313
  4242ea:	mov    dl,BYTE PTR [esi+0x1]
  4242ed:	test   dl,dl
  4242ef:	je     0x424317
  4242f1:	movzx  eax,al
  4242f4:	movzx  edi,dl
  4242f7:	cmp    eax,edi
  4242f9:	ja     0x42430f
  4242fb:	mov    edx,DWORD PTR [ebp-0x8]
  4242fe:	mov    dl,BYTE PTR [edx+0x462608]
  424304:	or     BYTE PTR [eax+0x463101],dl
  42430a:	inc    eax
  42430b:	cmp    eax,edi
  42430d:	jbe    0x424304
  42430f:	inc    esi
  424310:	inc    esi
  424311:	mov    al,BYTE PTR [esi]
  424313:	test   al,al
  424315:	jne    0x4242ea
  424317:	inc    DWORD PTR [ebp-0x8]
  42431a:	add    ebx,0x8
  42431d:	cmp    DWORD PTR [ebp-0x8],0x4
  424321:	jb     0x4242e4
  424323:	mov    eax,DWORD PTR [ebp+0x8]
  424326:	mov    ds:0x463204,eax
  42432b:	mov    DWORD PTR ds:0x4630fc,0x1
  424335:	call   0x42404c
  42433a:	lea    ecx,[ecx+0x462614]
  424340:	mov    esi,ecx
  424342:	mov    edi,0x463210
  424347:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424348:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424349:	mov    ds:0x4630f4,eax
  42434e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42434f:	jmp    0x4243b0
  424351:	or     BYTE PTR [eax+0x463101],0x4
  424358:	inc    eax
  424359:	cmp    eax,edx
  42435b:	jbe    0x424351
  42435d:	inc    ecx
  42435e:	inc    ecx
  42435f:	cmp    BYTE PTR [ecx-0x1],0x0
  424363:	jne    0x4242b2
  424369:	xor    ecx,ecx
  42436b:	inc    ecx
  42436c:	mov    eax,ecx
  42436e:	or     BYTE PTR [eax+0x463101],0x8
  424375:	inc    eax
  424376:	cmp    eax,0xff
  42437b:	jb     0x42436e
  42437d:	mov    eax,esi
  42437f:	call   0x42404c
  424384:	mov    ds:0x4630f4,eax
  424389:	mov    DWORD PTR ds:0x4630fc,ecx
  42438f:	jmp    0x424397
  424391:	mov    DWORD PTR ds:0x4630fc,ebx
  424397:	xor    eax,eax
  424399:	mov    edi,0x463210
  42439e:	stos   DWORD PTR es:[edi],eax
  42439f:	stos   DWORD PTR es:[edi],eax
  4243a0:	stos   DWORD PTR es:[edi],eax
  4243a1:	jmp    0x4243b0
  4243a3:	cmp    DWORD PTR ds:0x462f64,ebx
  4243a9:	je     0x4243b9
  4243ab:	call   0x42407b
  4243b0:	call   0x4240a4
  4243b5:	xor    eax,eax
  4243b7:	jmp    0x4243bc
  4243b9:	or     eax,0xffffffff
  4243bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4243bf:	xor    ecx,DWORD PTR [ebp+0x4]
  4243c2:	pop    edi
  4243c3:	pop    esi
  4243c4:	pop    ebx
  4243c5:	call   0x423ffc
  4243ca:	leave  
  4243cb:	ret    
  4243cc:	push   0x14
  4243ce:	push   0x4285a0
  4243d3:	call   0x423934
  4243d8:	or     DWORD PTR [ebp-0x1c],0xffffffff
  4243dc:	push   0xd
  4243de:	call   0x423aef
  4243e3:	pop    ecx
  4243e4:	xor    edi,edi
  4243e6:	mov    DWORD PTR [ebp-0x4],edi
  4243e9:	mov    DWORD PTR ds:0x462f64,edi
  4243ef:	mov    eax,DWORD PTR [ebp+0x8]
  4243f2:	cmp    eax,0xfffffffe
  4243f5:	jne    0x424409
  4243f7:	mov    DWORD PTR ds:0x462f64,0x1
  424401:	call   DWORD PTR ds:0x4280d8
  424407:	jmp    0x424434
  424409:	cmp    eax,0xfffffffd
  42440c:	jne    0x424420
  42440e:	mov    DWORD PTR ds:0x462f64,0x1
  424418:	call   DWORD PTR ds:0x4280d4
  42441e:	jmp    0x424434
  424420:	cmp    eax,0xfffffffc
  424423:	jne    0x424434
  424425:	mov    DWORD PTR ds:0x462f64,0x1
  42442f:	mov    eax,ds:0x462f94
  424434:	mov    DWORD PTR [ebp+0x8],eax
  424437:	cmp    eax,DWORD PTR ds:0x463204
  42443d:	je     0x4244fe
  424443:	mov    esi,DWORD PTR ds:0x4630f8
  424449:	mov    DWORD PTR [ebp-0x20],esi
  42444c:	cmp    esi,edi
  42444e:	je     0x424454
  424450:	cmp    DWORD PTR [esi],edi
  424452:	je     0x424464
  424454:	push   0x220
  424459:	call   0x424652
  42445e:	pop    ecx
  42445f:	mov    esi,eax
  424461:	mov    DWORD PTR [ebp-0x20],esi
  424464:	cmp    esi,edi
  424466:	je     0x4244e7
  424468:	push   DWORD PTR [ebp+0x8]
  42446b:	call   0x424236
  424470:	pop    ecx
  424471:	mov    DWORD PTR [ebp-0x1c],eax
  424474:	cmp    eax,edi
  424476:	jne    0x4244e7
  424478:	mov    DWORD PTR [esi],edi
  42447a:	mov    eax,ds:0x463204
  42447f:	mov    DWORD PTR [esi+0x4],eax
  424482:	mov    eax,ds:0x4630fc
  424487:	mov    DWORD PTR [esi+0x8],eax
  42448a:	mov    eax,ds:0x4630f4
  42448f:	mov    DWORD PTR [esi+0xc],eax
  424492:	xor    eax,eax
  424494:	mov    DWORD PTR [ebp-0x24],eax
  424497:	cmp    eax,0x5
  42449a:	jge    0x4244ac
  42449c:	mov    cx,WORD PTR [eax*2+0x463210]
  4244a4:	mov    WORD PTR [esi+eax*2+0x10],cx
  4244a9:	inc    eax
  4244aa:	jmp    0x424494
  4244ac:	xor    eax,eax
  4244ae:	mov    DWORD PTR [ebp-0x24],eax
  4244b1:	cmp    eax,0x101
  4244b6:	jge    0x4244c5
  4244b8:	mov    cl,BYTE PTR [eax+0x463100]
  4244be:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  4244c2:	inc    eax
  4244c3:	jmp    0x4244ae
  4244c5:	xor    eax,eax
  4244c7:	mov    DWORD PTR [ebp-0x24],eax
  4244ca:	cmp    eax,0x100
  4244cf:	jge    0x4244e1
  4244d1:	mov    cl,BYTE PTR [eax+0x463220]
  4244d7:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  4244de:	inc    eax
  4244df:	jmp    0x4244c7
  4244e1:	mov    DWORD PTR ds:0x4630f8,esi
  4244e7:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  4244eb:	jne    0x424501
  4244ed:	cmp    esi,DWORD PTR ds:0x4630f8
  4244f3:	je     0x424501
  4244f5:	push   esi
  4244f6:	call   0x42453a
  4244fb:	pop    ecx
  4244fc:	jmp    0x424501
  4244fe:	mov    DWORD PTR [ebp-0x1c],edi
  424501:	or     DWORD PTR [ebp-0x4],0xffffffff
  424505:	call   0x424513
  42450a:	mov    eax,DWORD PTR [ebp-0x1c]
  42450d:	call   0x42396f
  424512:	ret    
  424513:	push   0xd
  424515:	call   0x423a5b
  42451a:	pop    ecx
  42451b:	ret    
  42451c:	cmp    DWORD PTR ds:0x46344c,0x0
  424523:	jne    0x424537
  424525:	push   0xfffffffd
  424527:	call   0x4243cc
  42452c:	pop    ecx
  42452d:	mov    DWORD PTR ds:0x46344c,0x1
  424537:	xor    eax,eax
  424539:	ret    
  42453a:	push   0xc
  42453c:	push   0x4285b0
  424541:	call   0x423934
  424546:	mov    esi,DWORD PTR [ebp+0x8]
  424549:	test   esi,esi
  42454b:	je     0x4245a5
  42454d:	cmp    DWORD PTR ds:0x463324,0x3
  424554:	jne    0x424596
  424556:	push   0x4
  424558:	call   0x423aef
  42455d:	pop    ecx
  42455e:	and    DWORD PTR [ebp-0x4],0x0
  424562:	push   esi
  424563:	call   0x424d12
  424568:	pop    ecx
  424569:	mov    DWORD PTR [ebp-0x1c],eax
  42456c:	test   eax,eax
  42456e:	je     0x424579
  424570:	push   esi
  424571:	push   eax
  424572:	call   0x424d3d
  424577:	pop    ecx
  424578:	pop    ecx
  424579:	or     DWORD PTR [ebp-0x4],0xffffffff
  42457d:	call   0x42458d
  424582:	cmp    DWORD PTR [ebp-0x1c],0x0
  424586:	jne    0x4245a5
  424588:	push   DWORD PTR [ebp+0x8]
  42458b:	jmp    0x424597
  42458d:	push   0x4
  42458f:	call   0x423a5b
  424594:	pop    ecx
  424595:	ret    
  424596:	push   esi
  424597:	push   0x0
  424599:	push   DWORD PTR ds:0x463320
  42459f:	call   DWORD PTR ds:0x4280c4
  4245a5:	call   0x42396f
  4245aa:	ret    
  4245ab:	push   0xc
  4245ad:	push   0x4285c0
  4245b2:	call   0x423934
  4245b7:	mov    esi,DWORD PTR [ebp+0x8]
  4245ba:	cmp    DWORD PTR ds:0x463324,0x3
  4245c1:	jne    0x4245f1
  4245c3:	cmp    esi,DWORD PTR ds:0x4630e4
  4245c9:	ja     0x4245f1
  4245cb:	push   0x4
  4245cd:	call   0x423aef
  4245d2:	pop    ecx
  4245d3:	and    DWORD PTR [ebp-0x4],0x0
  4245d7:	push   esi
  4245d8:	call   0x4254f1
  4245dd:	pop    ecx
  4245de:	mov    DWORD PTR [ebp-0x1c],eax
  4245e1:	or     DWORD PTR [ebp-0x4],0xffffffff
  4245e5:	call   0x42461d
  4245ea:	mov    eax,DWORD PTR [ebp-0x1c]
  4245ed:	test   eax,eax
  4245ef:	jne    0x424614
  4245f1:	test   esi,esi
  4245f3:	jne    0x4245f6
  4245f5:	inc    esi
  4245f6:	cmp    DWORD PTR ds:0x463324,0x1
  4245fd:	je     0x424605
  4245ff:	add    esi,0xf
  424602:	and    esi,0xfffffff0
  424605:	push   esi
  424606:	push   0x0
  424608:	push   DWORD PTR ds:0x463320
  42460e:	call   DWORD PTR ds:0x4280e0
  424614:	call   0x42396f
  424619:	ret    
  42461a:	mov    esi,DWORD PTR [ebp+0x8]
  42461d:	push   0x4
  42461f:	call   0x423a5b
  424624:	pop    ecx
  424625:	ret    
  424626:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42462b:	ja     0x42464f
  42462d:	push   DWORD PTR [esp+0x4]
  424631:	call   0x4245ab
  424636:	test   eax,eax
  424638:	pop    ecx
  424639:	jne    0x424651
  42463b:	cmp    DWORD PTR [esp+0x8],eax
  42463f:	je     0x424651
  424641:	push   DWORD PTR [esp+0x4]
  424645:	call   0x426212
  42464a:	test   eax,eax
  42464c:	pop    ecx
  42464d:	jne    0x42462d
  42464f:	xor    eax,eax
  424651:	ret    
  424652:	push   DWORD PTR ds:0x462fa8
  424658:	push   DWORD PTR [esp+0x8]
  42465c:	call   0x424626
  424661:	pop    ecx
  424662:	pop    ecx
  424663:	ret    
  424664:	int3   
  424665:	int3   
  424666:	int3   
  424667:	int3   
  424668:	int3   
  424669:	int3   
  42466a:	int3   
  42466b:	int3   
  42466c:	int3   
  42466d:	int3   
  42466e:	int3   
  42466f:	int3   
  424670:	push   ebp
  424671:	mov    ebp,esp
  424673:	push   edi
  424674:	push   esi
  424675:	mov    esi,DWORD PTR [ebp+0xc]
  424678:	mov    ecx,DWORD PTR [ebp+0x10]
  42467b:	mov    edi,DWORD PTR [ebp+0x8]
  42467e:	mov    eax,ecx
  424680:	mov    edx,ecx
  424682:	add    eax,esi
  424684:	cmp    edi,esi
  424686:	jbe    0x424690
  424688:	cmp    edi,eax
  42468a:	jb     0x42480c
  424690:	test   edi,0x3
  424696:	jne    0x4246ac
  424698:	shr    ecx,0x2
  42469b:	and    edx,0x3
  42469e:	cmp    ecx,0x8
  4246a1:	jb     0x4246cc
  4246a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246a5:	jmp    DWORD PTR [edx*4+0x4247bc]
  4246ac:	mov    eax,edi
  4246ae:	mov    edx,0x3
  4246b3:	sub    ecx,0x4
  4246b6:	jb     0x4246c4
  4246b8:	and    eax,0x3
  4246bb:	add    ecx,eax
  4246bd:	jmp    DWORD PTR [eax*4+0x4246d0]
  4246c4:	jmp    DWORD PTR [ecx*4+0x4247cc]
  4246cb:	nop
  4246cc:	jmp    DWORD PTR [ecx*4+0x424750]
  4246d3:	nop
  4246d4:	loopne 0x42471c
  4246d6:	inc    edx
  4246d7:	add    BYTE PTR [edi+eax*2],cl
  4246da:	inc    edx
  4246db:	add    BYTE PTR [eax],dh
  4246dd:	inc    edi
  4246de:	inc    edx
  4246df:	add    BYTE PTR [ebx],ah
  4246e1:	ror    DWORD PTR [edx-0x75f877fa],1
  4246e7:	inc    esi
  4246e8:	add    DWORD PTR [eax+0x468a0147],ecx
  4246ee:	add    al,cl
  4246f0:	jmp    0x289cef7
  4246f5:	add    esi,0x3
  4246f8:	add    edi,0x3
  4246fb:	cmp    ecx,0x8
  4246fe:	jb     0x4246cc
  424700:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424702:	jmp    DWORD PTR [edx*4+0x4247bc]
  424709:	lea    ecx,[ecx+0x0]
  42470c:	and    edx,ecx
  42470e:	mov    al,BYTE PTR [esi]
  424710:	mov    BYTE PTR [edi],al
  424712:	mov    al,BYTE PTR [esi+0x1]
  424715:	shr    ecx,0x2
  424718:	mov    BYTE PTR [edi+0x1],al
  42471b:	add    esi,0x2
  42471e:	add    edi,0x2
  424721:	cmp    ecx,0x8
  424724:	jb     0x4246cc
  424726:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424728:	jmp    DWORD PTR [edx*4+0x4247bc]
  42472f:	nop
  424730:	and    edx,ecx
  424732:	mov    al,BYTE PTR [esi]
  424734:	mov    BYTE PTR [edi],al
  424736:	add    esi,0x1
  424739:	shr    ecx,0x2
  42473c:	add    edi,0x1
  42473f:	cmp    ecx,0x8
  424742:	jb     0x4246cc
  424744:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424746:	jmp    DWORD PTR [edx*4+0x4247bc]
  42474d:	lea    ecx,[ecx+0x0]
  424750:	mov    bl,0x47
  424752:	inc    edx
  424753:	add    BYTE PTR [eax-0x67ffbdb9],ah
  424759:	inc    edi
  42475a:	inc    edx
  42475b:	add    BYTE PTR [eax-0x77ffbdb9],dl
  424761:	inc    edi
  424762:	inc    edx
  424763:	add    BYTE PTR [eax+0x78004247],al
  424769:	inc    edi
  42476a:	inc    edx
  42476b:	add    BYTE PTR [eax+0x47],dh
  42476e:	inc    edx
  42476f:	add    BYTE PTR [ebx-0x761b71bc],cl
  424775:	inc    esp
  424776:	(bad)  
  424777:	in     al,0x8b
  424779:	inc    esp
  42477a:	mov    gs,eax
  42477c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  424780:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  424784:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  424788:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42478c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  424790:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  424794:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  424798:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42479c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4247a0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4247a4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4247a8:	lea    eax,[ecx*4+0x0]
  4247af:	add    esi,eax
  4247b1:	add    edi,eax
  4247b3:	jmp    DWORD PTR [edx*4+0x4247bc]
  4247ba:	mov    edi,edi
  4247bc:	int3   
  4247bd:	inc    edi
  4247be:	inc    edx
  4247bf:	add    ah,dl
  4247c1:	inc    edi
  4247c2:	inc    edx
  4247c3:	add    al,ah
  4247c5:	inc    edi
  4247c6:	inc    edx
  4247c7:	add    ah,dh
  4247c9:	inc    edi
  4247ca:	inc    edx
  4247cb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4247d1:	leave  
  4247d2:	ret    
  4247d3:	nop
  4247d4:	mov    al,BYTE PTR [esi]
  4247d6:	mov    BYTE PTR [edi],al
  4247d8:	mov    eax,DWORD PTR [ebp+0x8]
  4247db:	pop    esi
  4247dc:	pop    edi
  4247dd:	leave  
  4247de:	ret    
  4247df:	nop
  4247e0:	mov    al,BYTE PTR [esi]
  4247e2:	mov    BYTE PTR [edi],al
  4247e4:	mov    al,BYTE PTR [esi+0x1]
  4247e7:	mov    BYTE PTR [edi+0x1],al
  4247ea:	mov    eax,DWORD PTR [ebp+0x8]
  4247ed:	pop    esi
  4247ee:	pop    edi
  4247ef:	leave  
  4247f0:	ret    
  4247f1:	lea    ecx,[ecx+0x0]
  4247f4:	mov    al,BYTE PTR [esi]
  4247f6:	mov    BYTE PTR [edi],al
  4247f8:	mov    al,BYTE PTR [esi+0x1]
  4247fb:	mov    BYTE PTR [edi+0x1],al
  4247fe:	mov    al,BYTE PTR [esi+0x2]
  424801:	mov    BYTE PTR [edi+0x2],al
  424804:	mov    eax,DWORD PTR [ebp+0x8]
  424807:	pop    esi
  424808:	pop    edi
  424809:	leave  
  42480a:	ret    
  42480b:	nop
  42480c:	lea    esi,[ecx+esi*1-0x4]
  424810:	lea    edi,[ecx+edi*1-0x4]
  424814:	test   edi,0x3
  42481a:	jne    0x424840
  42481c:	shr    ecx,0x2
  42481f:	and    edx,0x3
  424822:	cmp    ecx,0x8
  424825:	jb     0x424834
  424827:	std    
  424828:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42482a:	cld    
  42482b:	jmp    DWORD PTR [edx*4+0x424958]
  424832:	mov    edi,edi
  424834:	neg    ecx
  424836:	jmp    DWORD PTR [ecx*4+0x424908]
  42483d:	lea    ecx,[ecx+0x0]
  424840:	mov    eax,edi
  424842:	mov    edx,0x3
  424847:	cmp    ecx,0x4
  42484a:	jb     0x424858
  42484c:	and    eax,0x3
  42484f:	sub    ecx,eax
  424851:	jmp    DWORD PTR [eax*4+0x42485c]
  424858:	jmp    DWORD PTR [ecx*4+0x424958]
  42485f:	nop
  424860:	ins    BYTE PTR es:[edi],dx
  424861:	dec    eax
  424862:	inc    edx
  424863:	add    BYTE PTR [eax-0x47ffbdb8],dl
  424869:	dec    eax
  42486a:	inc    edx
  42486b:	add    BYTE PTR [edx-0x2edcfcba],cl
  424871:	mov    BYTE PTR [edi+0x3],al
  424874:	sub    esi,0x1
  424877:	shr    ecx,0x2
  42487a:	sub    edi,0x1
  42487d:	cmp    ecx,0x8
  424880:	jb     0x424834
  424882:	std    
  424883:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424885:	cld    
  424886:	jmp    DWORD PTR [edx*4+0x424958]
  42488d:	lea    ecx,[ecx+0x0]
  424890:	mov    al,BYTE PTR [esi+0x3]
  424893:	and    edx,ecx
  424895:	mov    BYTE PTR [edi+0x3],al
  424898:	mov    al,BYTE PTR [esi+0x2]
  42489b:	shr    ecx,0x2
  42489e:	mov    BYTE PTR [edi+0x2],al
  4248a1:	sub    esi,0x2
  4248a4:	sub    edi,0x2
  4248a7:	cmp    ecx,0x8
  4248aa:	jb     0x424834
  4248ac:	std    
  4248ad:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248af:	cld    
  4248b0:	jmp    DWORD PTR [edx*4+0x424958]
  4248b7:	nop
  4248b8:	mov    al,BYTE PTR [esi+0x3]
  4248bb:	and    edx,ecx
  4248bd:	mov    BYTE PTR [edi+0x3],al
  4248c0:	mov    al,BYTE PTR [esi+0x2]
  4248c3:	mov    BYTE PTR [edi+0x2],al
  4248c6:	mov    al,BYTE PTR [esi+0x1]
  4248c9:	shr    ecx,0x2
  4248cc:	mov    BYTE PTR [edi+0x1],al
  4248cf:	sub    esi,0x3
  4248d2:	sub    edi,0x3
  4248d5:	cmp    ecx,0x8
  4248d8:	jb     0x424834
  4248de:	std    
  4248df:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248e1:	cld    
  4248e2:	jmp    DWORD PTR [edx*4+0x424958]
  4248e9:	lea    ecx,[ecx+0x0]
  4248ec:	or     al,0x49
  4248ee:	inc    edx
  4248ef:	add    BYTE PTR [ecx+ecx*2],dl
  4248f2:	inc    edx
  4248f3:	add    BYTE PTR [ecx+ecx*2],bl
  4248f6:	inc    edx
  4248f7:	add    BYTE PTR [ecx+ecx*2],ah
  4248fa:	inc    edx
  4248fb:	add    BYTE PTR [ecx+ecx*2],ch
  4248fe:	inc    edx
  4248ff:	add    BYTE PTR [ecx+ecx*2],dh
  424902:	inc    edx
  424903:	add    BYTE PTR [ecx+ecx*2],bh
  424906:	inc    edx
  424907:	add    BYTE PTR [edi+0x49],cl
  42490a:	inc    edx
  42490b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424911:	inc    esp
  424912:	(bad)  
  424913:	sbb    al,0x8b
  424915:	inc    esp
  424916:	mov    ds,WORD PTR [eax]
  424918:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42491c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  424920:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  424924:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  424928:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42492c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  424930:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  424934:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  424938:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42493c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  424940:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  424944:	lea    eax,[ecx*4+0x0]
  42494b:	add    esi,eax
  42494d:	add    edi,eax
  42494f:	jmp    DWORD PTR [edx*4+0x424958]
  424956:	mov    edi,edi
  424958:	push   0x70004249
  42495d:	dec    ecx
  42495e:	inc    edx
  42495f:	add    BYTE PTR [eax-0x6bffbdb7],al
  424965:	dec    ecx
  424966:	inc    edx
  424967:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42496d:	leave  
  42496e:	ret    
  42496f:	nop
  424970:	mov    al,BYTE PTR [esi+0x3]
  424973:	mov    BYTE PTR [edi+0x3],al
  424976:	mov    eax,DWORD PTR [ebp+0x8]
  424979:	pop    esi
  42497a:	pop    edi
  42497b:	leave  
  42497c:	ret    
  42497d:	lea    ecx,[ecx+0x0]
  424980:	mov    al,BYTE PTR [esi+0x3]
  424983:	mov    BYTE PTR [edi+0x3],al
  424986:	mov    al,BYTE PTR [esi+0x2]
  424989:	mov    BYTE PTR [edi+0x2],al
  42498c:	mov    eax,DWORD PTR [ebp+0x8]
  42498f:	pop    esi
  424990:	pop    edi
  424991:	leave  
  424992:	ret    
  424993:	nop
  424994:	mov    al,BYTE PTR [esi+0x3]
  424997:	mov    BYTE PTR [edi+0x3],al
  42499a:	mov    al,BYTE PTR [esi+0x2]
  42499d:	mov    BYTE PTR [edi+0x2],al
  4249a0:	mov    al,BYTE PTR [esi+0x1]
  4249a3:	mov    BYTE PTR [edi+0x1],al
  4249a6:	mov    eax,DWORD PTR [ebp+0x8]
  4249a9:	pop    esi
  4249aa:	pop    edi
  4249ab:	leave  
  4249ac:	ret    
  4249ad:	push   DWORD PTR [esp+0x4]
  4249b1:	call   DWORD PTR ds:0x4280e4
  4249b7:	xor    eax,eax
  4249b9:	inc    eax
  4249ba:	ret    0x8
  4249bd:	push   0x10
  4249bf:	push   0x428608
  4249c4:	call   0x423934
  4249c9:	mov    eax,ds:0x462f68
  4249ce:	test   eax,eax
  4249d0:	jne    0x424a09
  4249d2:	cmp    DWORD PTR ds:0x462ca4,0x1
  4249d9:	je     0x4249ff
  4249db:	push   0x4285f4
  4249e0:	call   DWORD PTR ds:0x428018
  4249e6:	test   eax,eax
  4249e8:	je     0x4249ff
  4249ea:	push   0x4285cc
  4249ef:	push   eax
  4249f0:	call   DWORD PTR ds:0x428014
  4249f6:	mov    ds:0x462f68,eax
  4249fb:	test   eax,eax
  4249fd:	jne    0x424a09
  4249ff:	mov    eax,0x4249ad
  424a04:	mov    ds:0x462f68,eax
  424a09:	and    DWORD PTR [ebp-0x4],0x0
  424a0d:	push   DWORD PTR [ebp+0xc]
  424a10:	push   DWORD PTR [ebp+0x8]
  424a13:	call   eax
  424a15:	mov    DWORD PTR [ebp-0x1c],eax
  424a18:	jmp    0x424a3e
  424a1a:	mov    eax,DWORD PTR [ebp-0x14]
  424a1d:	mov    eax,DWORD PTR [eax]
  424a1f:	mov    eax,DWORD PTR [eax]
  424a21:	mov    DWORD PTR [ebp-0x20],eax
  424a24:	xor    eax,eax
  424a26:	inc    eax
  424a27:	ret    
  424a28:	mov    esp,DWORD PTR [ebp-0x18]
  424a2b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  424a32:	jne    0x424a3c
  424a34:	push   0x8
  424a36:	call   DWORD PTR ds:0x4280a8
  424a3c:	xor    eax,eax
  424a3e:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a42:	call   0x42396f
  424a47:	ret    
  424a48:	push   0x10
  424a4a:	push   0x428618
  424a4f:	call   0x423934
  424a54:	mov    esi,DWORD PTR [ebp+0x8]
  424a57:	imul   esi,DWORD PTR [ebp+0xc]
  424a5b:	mov    DWORD PTR [ebp-0x1c],esi
  424a5e:	test   esi,esi
  424a60:	jne    0x424a63
  424a62:	inc    esi
  424a63:	xor    edi,edi
  424a65:	mov    DWORD PTR [ebp-0x20],edi
  424a68:	cmp    esi,0xffffffe0
  424a6b:	ja     0x424ad2
  424a6d:	cmp    DWORD PTR ds:0x463324,0x3
  424a74:	jne    0x424abd
  424a76:	add    esi,0xf
  424a79:	and    esi,0xfffffff0
  424a7c:	mov    DWORD PTR [ebp+0xc],esi
  424a7f:	mov    ebx,DWORD PTR [ebp-0x1c]
  424a82:	cmp    ebx,DWORD PTR ds:0x4630e4
  424a88:	ja     0x424abd
  424a8a:	push   0x4
  424a8c:	call   0x423aef
  424a91:	pop    ecx
  424a92:	and    DWORD PTR [ebp-0x4],edi
  424a95:	push   ebx
  424a96:	call   0x4254f1
  424a9b:	pop    ecx
  424a9c:	mov    DWORD PTR [ebp-0x20],eax
  424a9f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424aa3:	call   0x424af2
  424aa8:	mov    edi,DWORD PTR [ebp-0x20]
  424aab:	test   edi,edi
  424aad:	je     0x424ac1
  424aaf:	push   DWORD PTR [ebp-0x1c]
  424ab2:	push   0x0
  424ab4:	push   edi
  424ab5:	call   0x426230
  424aba:	add    esp,0xc
  424abd:	test   edi,edi
  424abf:	jne    0x424afb
  424ac1:	push   esi
  424ac2:	push   0x8
  424ac4:	push   DWORD PTR ds:0x463320
  424aca:	call   DWORD PTR ds:0x4280e0
  424ad0:	mov    edi,eax
  424ad2:	test   edi,edi
  424ad4:	jne    0x424afb
  424ad6:	cmp    DWORD PTR ds:0x462fa8,edi
  424adc:	je     0x424afb
  424ade:	push   esi
  424adf:	call   0x426212
  424ae4:	pop    ecx
  424ae5:	test   eax,eax
  424ae7:	jne    0x424a63
  424aed:	jmp    0x424afd
  424aef:	mov    esi,DWORD PTR [ebp+0xc]
  424af2:	push   0x4
  424af4:	call   0x423a5b
  424af9:	pop    ecx
  424afa:	ret    
  424afb:	mov    eax,edi
  424afd:	call   0x42396f
  424b02:	ret    
  424b03:	push   esi
  424b04:	mov    esi,DWORD PTR [esp+0x8]
  424b08:	mov    eax,DWORD PTR [esi+0x3c]
  424b0b:	push   edi
  424b0c:	xor    edi,edi
  424b0e:	cmp    eax,DWORD PTR ds:0x462fb4
  424b14:	je     0x424b79
  424b16:	cmp    eax,edi
  424b18:	je     0x424b79
  424b1a:	mov    eax,DWORD PTR [esi+0x2c]
  424b1d:	cmp    DWORD PTR [eax],edi
  424b1f:	jne    0x424b79
  424b21:	mov    eax,DWORD PTR [esi+0x34]
  424b24:	cmp    eax,edi
  424b26:	je     0x424b44
  424b28:	cmp    DWORD PTR [eax],edi
  424b2a:	jne    0x424b44
  424b2c:	cmp    eax,DWORD PTR ds:0x4630d0
  424b32:	je     0x424b44
  424b34:	push   eax
  424b35:	call   0x42453a
  424b3a:	push   DWORD PTR [esi+0x3c]
  424b3d:	call   0x42647f
  424b42:	pop    ecx
  424b43:	pop    ecx
  424b44:	mov    eax,DWORD PTR [esi+0x30]
  424b47:	cmp    eax,edi
  424b49:	je     0x424b67
  424b4b:	cmp    DWORD PTR [eax],edi
  424b4d:	jne    0x424b67
  424b4f:	cmp    eax,DWORD PTR ds:0x4630d4
  424b55:	je     0x424b67
  424b57:	push   eax
  424b58:	call   0x42453a
  424b5d:	push   DWORD PTR [esi+0x3c]
  424b60:	call   0x426420
  424b65:	pop    ecx
  424b66:	pop    ecx
  424b67:	push   DWORD PTR [esi+0x2c]
  424b6a:	call   0x42453a
  424b6f:	push   DWORD PTR [esi+0x3c]
  424b72:	call   0x42453a
  424b77:	pop    ecx
  424b78:	pop    ecx
  424b79:	mov    eax,DWORD PTR [esi+0x40]
  424b7c:	cmp    eax,DWORD PTR ds:0x4630cc
  424b82:	je     0x424b9c
  424b84:	cmp    eax,edi
  424b86:	je     0x424b9c
  424b88:	cmp    DWORD PTR [eax],edi
  424b8a:	jne    0x424b9c
  424b8c:	push   eax
  424b8d:	call   0x42453a
  424b92:	push   DWORD PTR [esi+0x44]
  424b95:	call   0x42453a
  424b9a:	pop    ecx
  424b9b:	pop    ecx
  424b9c:	mov    eax,DWORD PTR [esi+0x50]
  424b9f:	cmp    eax,DWORD PTR ds:0x462fb0
  424ba5:	je     0x424bc3
  424ba7:	cmp    eax,edi
  424ba9:	je     0x424bc3
  424bab:	cmp    DWORD PTR [eax+0xb4],edi
  424bb1:	jne    0x424bc3
  424bb3:	push   eax
  424bb4:	call   0x426290
  424bb9:	push   DWORD PTR [esi+0x50]
  424bbc:	call   0x42453a
  424bc1:	pop    ecx
  424bc2:	pop    ecx
  424bc3:	push   esi
  424bc4:	call   0x42453a
  424bc9:	pop    ecx
  424bca:	pop    edi
  424bcb:	pop    esi
  424bcc:	ret    
  424bcd:	push   esi
  424bce:	call   0x4237e9
  424bd3:	mov    esi,eax
  424bd5:	mov    eax,DWORD PTR [esi+0x64]
  424bd8:	cmp    eax,DWORD PTR ds:0x46275c
  424bde:	je     0x424c8a
  424be4:	test   eax,eax
  424be6:	je     0x424c17
  424be8:	mov    ecx,DWORD PTR [eax+0x2c]
  424beb:	dec    DWORD PTR [eax]
  424bed:	test   ecx,ecx
  424bef:	je     0x424bf3
  424bf1:	dec    DWORD PTR [ecx]
  424bf3:	mov    ecx,DWORD PTR [eax+0x34]
  424bf6:	test   ecx,ecx
  424bf8:	je     0x424bfc
  424bfa:	dec    DWORD PTR [ecx]
  424bfc:	mov    ecx,DWORD PTR [eax+0x30]
  424bff:	test   ecx,ecx
  424c01:	je     0x424c05
  424c03:	dec    DWORD PTR [ecx]
  424c05:	mov    ecx,DWORD PTR [eax+0x40]
  424c08:	test   ecx,ecx
  424c0a:	je     0x424c0e
  424c0c:	dec    DWORD PTR [ecx]
  424c0e:	mov    ecx,DWORD PTR [eax+0x4c]
  424c11:	dec    DWORD PTR [ecx+0xb4]
  424c17:	mov    ecx,DWORD PTR ds:0x46275c
  424c1d:	mov    DWORD PTR [esi+0x64],ecx
  424c20:	mov    ecx,DWORD PTR ds:0x46275c
  424c26:	inc    DWORD PTR [ecx]
  424c28:	mov    ecx,DWORD PTR ds:0x46275c
  424c2e:	mov    ecx,DWORD PTR [ecx+0x2c]
  424c31:	test   ecx,ecx
  424c33:	je     0x424c37
  424c35:	inc    DWORD PTR [ecx]
  424c37:	mov    ecx,DWORD PTR ds:0x46275c
  424c3d:	mov    ecx,DWORD PTR [ecx+0x34]
  424c40:	test   ecx,ecx
  424c42:	je     0x424c46
  424c44:	inc    DWORD PTR [ecx]
  424c46:	mov    ecx,DWORD PTR ds:0x46275c
  424c4c:	mov    ecx,DWORD PTR [ecx+0x30]
  424c4f:	test   ecx,ecx
  424c51:	je     0x424c55
  424c53:	inc    DWORD PTR [ecx]
  424c55:	mov    ecx,DWORD PTR ds:0x46275c
  424c5b:	mov    ecx,DWORD PTR [ecx+0x40]
  424c5e:	test   ecx,ecx
  424c60:	je     0x424c64
  424c62:	inc    DWORD PTR [ecx]
  424c64:	mov    ecx,DWORD PTR ds:0x46275c
  424c6a:	mov    ecx,DWORD PTR [ecx+0x4c]
  424c6d:	inc    DWORD PTR [ecx+0xb4]
  424c73:	test   eax,eax
  424c75:	je     0x424c8a
  424c77:	cmp    DWORD PTR [eax],0x0
  424c7a:	jne    0x424c8a
  424c7c:	cmp    eax,0x462708
  424c81:	je     0x424c8a
  424c83:	push   eax
  424c84:	call   0x424b03
  424c89:	pop    ecx
  424c8a:	mov    eax,DWORD PTR [esi+0x64]
  424c8d:	pop    esi
  424c8e:	ret    
  424c8f:	push   0xc
  424c91:	push   0x4287a8
  424c96:	call   0x423934
  424c9b:	push   0xc
  424c9d:	call   0x423aef
  424ca2:	pop    ecx
  424ca3:	and    DWORD PTR [ebp-0x4],0x0
  424ca7:	call   0x424bcd
  424cac:	mov    DWORD PTR [ebp-0x1c],eax
  424caf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424cb3:	call   0x424cc1
  424cb8:	mov    eax,DWORD PTR [ebp-0x1c]
  424cbb:	call   0x42396f
  424cc0:	ret    
  424cc1:	push   0xc
  424cc3:	call   0x423a5b
  424cc8:	pop    ecx
  424cc9:	ret    
  424cca:	push   0x140
  424ccf:	push   0x0
  424cd1:	push   DWORD PTR ds:0x463320
  424cd7:	call   DWORD PTR ds:0x4280e0
  424cdd:	test   eax,eax
  424cdf:	mov    ds:0x4630e0,eax
  424ce4:	jne    0x424ce7
  424ce6:	ret    
  424ce7:	mov    ecx,DWORD PTR [esp+0x4]
  424ceb:	and    DWORD PTR ds:0x4630d8,0x0
  424cf2:	and    DWORD PTR ds:0x4630dc,0x0
  424cf9:	mov    ds:0x4630e8,eax
  424cfe:	xor    eax,eax
  424d00:	mov    DWORD PTR ds:0x4630e4,ecx
  424d06:	mov    DWORD PTR ds:0x4630ec,0x10
  424d10:	inc    eax
  424d11:	ret    
  424d12:	mov    eax,ds:0x4630dc
  424d17:	lea    ecx,[eax+eax*4]
  424d1a:	mov    eax,ds:0x4630e0
  424d1f:	lea    ecx,[eax+ecx*4]
  424d22:	jmp    0x424d36
  424d24:	mov    edx,DWORD PTR [esp+0x4]
  424d28:	sub    edx,DWORD PTR [eax+0xc]
  424d2b:	cmp    edx,0x100000
  424d31:	jb     0x424d3c
  424d33:	add    eax,0x14
  424d36:	cmp    eax,ecx
  424d38:	jb     0x424d24
  424d3a:	xor    eax,eax
  424d3c:	ret    
  424d3d:	push   ebp
  424d3e:	mov    ebp,esp
  424d40:	sub    esp,0x10
  424d43:	mov    ecx,DWORD PTR [ebp+0x8]
  424d46:	mov    eax,DWORD PTR [ecx+0x10]
  424d49:	push   esi
  424d4a:	mov    esi,DWORD PTR [ebp+0xc]
  424d4d:	push   edi
  424d4e:	mov    edi,esi
  424d50:	sub    edi,DWORD PTR [ecx+0xc]
  424d53:	add    esi,0xfffffffc
  424d56:	shr    edi,0xf
  424d59:	mov    ecx,edi
  424d5b:	imul   ecx,ecx,0x204
  424d61:	lea    ecx,[ecx+eax*1+0x144]
  424d68:	mov    DWORD PTR [ebp-0x10],ecx
  424d6b:	mov    ecx,DWORD PTR [esi]
  424d6d:	dec    ecx
  424d6e:	test   cl,0x1
  424d71:	mov    DWORD PTR [ebp-0x4],ecx
  424d74:	jne    0x425051
  424d7a:	push   ebx
  424d7b:	lea    ebx,[ecx+esi*1]
  424d7e:	mov    edx,DWORD PTR [ebx]
  424d80:	mov    DWORD PTR [ebp-0xc],edx
  424d83:	mov    edx,DWORD PTR [esi-0x4]
  424d86:	mov    DWORD PTR [ebp-0x8],edx
  424d89:	mov    edx,DWORD PTR [ebp-0xc]
  424d8c:	test   dl,0x1
  424d8f:	mov    DWORD PTR [ebp+0xc],ebx
  424d92:	jne    0x424e08
  424d94:	sar    edx,0x4
  424d97:	dec    edx
  424d98:	cmp    edx,0x3f
  424d9b:	jbe    0x424da0
  424d9d:	push   0x3f
  424d9f:	pop    edx
  424da0:	mov    ecx,DWORD PTR [ebx+0x4]
  424da3:	cmp    ecx,DWORD PTR [ebx+0x8]
  424da6:	jne    0x424dea
  424da8:	cmp    edx,0x20
  424dab:	mov    ebx,0x80000000
  424db0:	jae    0x424dcb
  424db2:	mov    ecx,edx
  424db4:	shr    ebx,cl
  424db6:	lea    ecx,[edx+eax*1+0x4]
  424dba:	not    ebx
  424dbc:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424dc0:	dec    BYTE PTR [ecx]
  424dc2:	jne    0x424de7
  424dc4:	mov    ecx,DWORD PTR [ebp+0x8]
  424dc7:	and    DWORD PTR [ecx],ebx
  424dc9:	jmp    0x424de7
  424dcb:	lea    ecx,[edx-0x20]
  424dce:	shr    ebx,cl
  424dd0:	lea    ecx,[edx+eax*1+0x4]
  424dd4:	not    ebx
  424dd6:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424ddd:	dec    BYTE PTR [ecx]
  424ddf:	jne    0x424de7
  424de1:	mov    ecx,DWORD PTR [ebp+0x8]
  424de4:	and    DWORD PTR [ecx+0x4],ebx
  424de7:	mov    ebx,DWORD PTR [ebp+0xc]
  424dea:	mov    edx,DWORD PTR [ebx+0x8]
  424ded:	mov    ebx,DWORD PTR [ebx+0x4]
  424df0:	mov    ecx,DWORD PTR [ebp-0x4]
  424df3:	add    ecx,DWORD PTR [ebp-0xc]
  424df6:	mov    DWORD PTR [edx+0x4],ebx
  424df9:	mov    edx,DWORD PTR [ebp+0xc]
  424dfc:	mov    ebx,DWORD PTR [edx+0x4]
  424dff:	mov    edx,DWORD PTR [edx+0x8]
  424e02:	mov    DWORD PTR [ebx+0x8],edx
  424e05:	mov    DWORD PTR [ebp-0x4],ecx
  424e08:	mov    edx,ecx
  424e0a:	sar    edx,0x4
  424e0d:	dec    edx
  424e0e:	cmp    edx,0x3f
  424e11:	jbe    0x424e16
  424e13:	push   0x3f
  424e15:	pop    edx
  424e16:	mov    ebx,DWORD PTR [ebp-0x8]
  424e19:	and    ebx,0x1
  424e1c:	mov    DWORD PTR [ebp-0xc],ebx
  424e1f:	jne    0x424eb4
  424e25:	sub    esi,DWORD PTR [ebp-0x8]
  424e28:	mov    ebx,DWORD PTR [ebp-0x8]
  424e2b:	sar    ebx,0x4
  424e2e:	push   0x3f
  424e30:	mov    DWORD PTR [ebp+0xc],esi
  424e33:	dec    ebx
  424e34:	pop    esi
  424e35:	cmp    ebx,esi
  424e37:	jbe    0x424e3b
  424e39:	mov    ebx,esi
  424e3b:	add    ecx,DWORD PTR [ebp-0x8]
  424e3e:	mov    edx,ecx
  424e40:	sar    edx,0x4
  424e43:	dec    edx
  424e44:	cmp    edx,esi
  424e46:	mov    DWORD PTR [ebp-0x4],ecx
  424e49:	jbe    0x424e4d
  424e4b:	mov    edx,esi
  424e4d:	cmp    ebx,edx
  424e4f:	je     0x424eaf
  424e51:	mov    ecx,DWORD PTR [ebp+0xc]
  424e54:	mov    esi,DWORD PTR [ecx+0x4]
  424e57:	cmp    esi,DWORD PTR [ecx+0x8]
  424e5a:	jne    0x424e97
  424e5c:	cmp    ebx,0x20
  424e5f:	mov    esi,0x80000000
  424e64:	jae    0x424e7d
  424e66:	mov    ecx,ebx
  424e68:	shr    esi,cl
  424e6a:	not    esi
  424e6c:	and    DWORD PTR [eax+edi*4+0x44],esi
  424e70:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e74:	jne    0x424e97
  424e76:	mov    ecx,DWORD PTR [ebp+0x8]
  424e79:	and    DWORD PTR [ecx],esi
  424e7b:	jmp    0x424e97
  424e7d:	lea    ecx,[ebx-0x20]
  424e80:	shr    esi,cl
  424e82:	not    esi
  424e84:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424e8b:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e8f:	jne    0x424e97
  424e91:	mov    ecx,DWORD PTR [ebp+0x8]
  424e94:	and    DWORD PTR [ecx+0x4],esi
  424e97:	mov    ecx,DWORD PTR [ebp+0xc]
  424e9a:	mov    esi,DWORD PTR [ecx+0x8]
  424e9d:	mov    ecx,DWORD PTR [ecx+0x4]
  424ea0:	mov    DWORD PTR [esi+0x4],ecx
  424ea3:	mov    ecx,DWORD PTR [ebp+0xc]
  424ea6:	mov    esi,DWORD PTR [ecx+0x4]
  424ea9:	mov    ecx,DWORD PTR [ecx+0x8]
  424eac:	mov    DWORD PTR [esi+0x8],ecx
  424eaf:	mov    esi,DWORD PTR [ebp+0xc]
  424eb2:	jmp    0x424eb7
  424eb4:	mov    ebx,DWORD PTR [ebp+0x8]
  424eb7:	cmp    DWORD PTR [ebp-0xc],0x0
  424ebb:	jne    0x424ec5
  424ebd:	cmp    ebx,edx
  424ebf:	je     0x424f45
  424ec5:	mov    ecx,DWORD PTR [ebp-0x10]
  424ec8:	lea    ecx,[ecx+edx*8]
  424ecb:	mov    ebx,DWORD PTR [ecx+0x4]
  424ece:	mov    DWORD PTR [esi+0x8],ecx
  424ed1:	mov    DWORD PTR [esi+0x4],ebx
  424ed4:	mov    DWORD PTR [ecx+0x4],esi
  424ed7:	mov    ecx,DWORD PTR [esi+0x4]
  424eda:	mov    DWORD PTR [ecx+0x8],esi
  424edd:	mov    ecx,DWORD PTR [esi+0x4]
  424ee0:	cmp    ecx,DWORD PTR [esi+0x8]
  424ee3:	jne    0x424f45
  424ee5:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424ee9:	mov    BYTE PTR [ebp+0xf],cl
  424eec:	inc    cl
  424eee:	cmp    edx,0x20
  424ef1:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424ef5:	jae    0x424f1c
  424ef7:	cmp    BYTE PTR [ebp+0xf],0x0
  424efb:	jne    0x424f0b
  424efd:	mov    ecx,edx
  424eff:	mov    ebx,0x80000000
  424f04:	shr    ebx,cl
  424f06:	mov    ecx,DWORD PTR [ebp+0x8]
  424f09:	or     DWORD PTR [ecx],ebx
  424f0b:	mov    ebx,0x80000000
  424f10:	mov    ecx,edx
  424f12:	shr    ebx,cl
  424f14:	lea    eax,[eax+edi*4+0x44]
  424f18:	or     DWORD PTR [eax],ebx
  424f1a:	jmp    0x424f45
  424f1c:	cmp    BYTE PTR [ebp+0xf],0x0
  424f20:	jne    0x424f32
  424f22:	lea    ecx,[edx-0x20]
  424f25:	mov    ebx,0x80000000
  424f2a:	shr    ebx,cl
  424f2c:	mov    ecx,DWORD PTR [ebp+0x8]
  424f2f:	or     DWORD PTR [ecx+0x4],ebx
  424f32:	lea    ecx,[edx-0x20]
  424f35:	mov    edx,0x80000000
  424f3a:	shr    edx,cl
  424f3c:	lea    eax,[eax+edi*4+0xc4]
  424f43:	or     DWORD PTR [eax],edx
  424f45:	mov    eax,DWORD PTR [ebp-0x4]
  424f48:	mov    DWORD PTR [esi],eax
  424f4a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424f4e:	mov    eax,DWORD PTR [ebp-0x10]
  424f51:	dec    DWORD PTR [eax]
  424f53:	jne    0x425050
  424f59:	mov    eax,ds:0x4630d8
  424f5e:	test   eax,eax
  424f60:	je     0x425042
  424f66:	mov    ecx,DWORD PTR ds:0x4630f0
  424f6c:	mov    esi,DWORD PTR ds:0x4280c0
  424f72:	push   0x4000
  424f77:	shl    ecx,0xf
  424f7a:	add    ecx,DWORD PTR [eax+0xc]
  424f7d:	mov    ebx,0x8000
  424f82:	push   ebx
  424f83:	push   ecx
  424f84:	call   esi
  424f86:	mov    ecx,DWORD PTR ds:0x4630f0
  424f8c:	mov    eax,ds:0x4630d8
  424f91:	mov    edx,0x80000000
  424f96:	shr    edx,cl
  424f98:	or     DWORD PTR [eax+0x8],edx
  424f9b:	mov    eax,ds:0x4630d8
  424fa0:	mov    eax,DWORD PTR [eax+0x10]
  424fa3:	mov    ecx,DWORD PTR ds:0x4630f0
  424fa9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424fb1:	mov    eax,ds:0x4630d8
  424fb6:	mov    eax,DWORD PTR [eax+0x10]
  424fb9:	dec    BYTE PTR [eax+0x43]
  424fbc:	mov    eax,ds:0x4630d8
  424fc1:	mov    ecx,DWORD PTR [eax+0x10]
  424fc4:	cmp    BYTE PTR [ecx+0x43],0x0
  424fc8:	jne    0x424fd3
  424fca:	and    DWORD PTR [eax+0x4],0xfffffffe
  424fce:	mov    eax,ds:0x4630d8
  424fd3:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424fd7:	jne    0x425042
  424fd9:	push   ebx
  424fda:	push   0x0
  424fdc:	push   DWORD PTR [eax+0xc]
  424fdf:	call   esi
  424fe1:	mov    eax,ds:0x4630d8
  424fe6:	push   DWORD PTR [eax+0x10]
  424fe9:	push   0x0
  424feb:	push   DWORD PTR ds:0x463320
  424ff1:	call   DWORD PTR ds:0x4280c4
  424ff7:	mov    eax,ds:0x4630dc
  424ffc:	mov    edx,DWORD PTR ds:0x4630e0
  425002:	lea    eax,[eax+eax*4]
  425005:	shl    eax,0x2
  425008:	mov    ecx,eax
  42500a:	mov    eax,ds:0x4630d8
  42500f:	sub    ecx,eax
  425011:	lea    ecx,[ecx+edx*1-0x14]
  425015:	push   ecx
  425016:	lea    ecx,[eax+0x14]
  425019:	push   ecx
  42501a:	push   eax
  42501b:	call   0x426870
  425020:	mov    eax,DWORD PTR [ebp+0x8]
  425023:	add    esp,0xc
  425026:	dec    DWORD PTR ds:0x4630dc
  42502c:	cmp    eax,DWORD PTR ds:0x4630d8
  425032:	jbe    0x425038
  425034:	sub    DWORD PTR [ebp+0x8],0x14
  425038:	mov    eax,ds:0x4630e0
  42503d:	mov    ds:0x4630e8,eax
  425042:	mov    eax,DWORD PTR [ebp+0x8]
  425045:	mov    ds:0x4630d8,eax
  42504a:	mov    DWORD PTR ds:0x4630f0,edi
  425050:	pop    ebx
  425051:	pop    edi
  425052:	pop    esi
  425053:	leave  
  425054:	ret    
  425055:	mov    eax,ds:0x4630dc
  42505a:	mov    ecx,DWORD PTR ds:0x4630ec
  425060:	push   edi
  425061:	xor    edi,edi
  425063:	cmp    eax,ecx
  425065:	jne    0x42509b
  425067:	lea    eax,[ecx+ecx*4+0x50]
  42506b:	shl    eax,0x2
  42506e:	push   eax
  42506f:	push   DWORD PTR ds:0x4630e0
  425075:	push   edi
  425076:	push   DWORD PTR ds:0x463320
  42507c:	call   DWORD PTR ds:0x4280ec
  425082:	cmp    eax,edi
  425084:	jne    0x42508a
  425086:	xor    eax,eax
  425088:	pop    edi
  425089:	ret    
  42508a:	add    DWORD PTR ds:0x4630ec,0x10
  425091:	mov    ds:0x4630e0,eax
  425096:	mov    eax,ds:0x4630dc
  42509b:	mov    ecx,DWORD PTR ds:0x4630e0
  4250a1:	push   esi
  4250a2:	push   0x41c4
  4250a7:	push   0x8
  4250a9:	push   DWORD PTR ds:0x463320
  4250af:	lea    eax,[eax+eax*4]
  4250b2:	lea    esi,[ecx+eax*4]
  4250b5:	call   DWORD PTR ds:0x4280e0
  4250bb:	cmp    eax,edi
  4250bd:	mov    DWORD PTR [esi+0x10],eax
  4250c0:	jne    0x4250c6
  4250c2:	xor    eax,eax
  4250c4:	jmp    0x425109
  4250c6:	push   0x4
  4250c8:	push   0x2000
  4250cd:	push   0x100000
  4250d2:	push   edi
  4250d3:	call   DWORD PTR ds:0x4280e8
  4250d9:	cmp    eax,edi
  4250db:	mov    DWORD PTR [esi+0xc],eax
  4250de:	jne    0x4250f2
  4250e0:	push   DWORD PTR [esi+0x10]
  4250e3:	push   edi
  4250e4:	push   DWORD PTR ds:0x463320
  4250ea:	call   DWORD PTR ds:0x4280c4
  4250f0:	jmp    0x4250c2
  4250f2:	or     DWORD PTR [esi+0x8],0xffffffff
  4250f6:	mov    DWORD PTR [esi],edi
  4250f8:	mov    DWORD PTR [esi+0x4],edi
  4250fb:	inc    DWORD PTR ds:0x4630dc
  425101:	mov    eax,DWORD PTR [esi+0x10]
  425104:	or     DWORD PTR [eax],0xffffffff
  425107:	mov    eax,esi
  425109:	pop    esi
  42510a:	pop    edi
  42510b:	ret    
  42510c:	push   ebp
  42510d:	mov    ebp,esp
  42510f:	push   ecx
  425110:	push   ecx
  425111:	mov    ecx,DWORD PTR [ebp+0x8]
  425114:	mov    eax,DWORD PTR [ecx+0x8]
  425117:	push   ebx
  425118:	push   esi
  425119:	mov    esi,DWORD PTR [ecx+0x10]
  42511c:	push   edi
  42511d:	xor    ebx,ebx
  42511f:	jmp    0x425124
  425121:	shl    eax,1
  425123:	inc    ebx
  425124:	test   eax,eax
  425126:	jge    0x425121
  425128:	mov    eax,ebx
  42512a:	imul   eax,eax,0x204
  425130:	lea    eax,[eax+esi*1+0x144]
  425137:	push   0x3f
  425139:	mov    DWORD PTR [ebp-0x8],eax
  42513c:	pop    edx
  42513d:	mov    DWORD PTR [eax+0x8],eax
  425140:	mov    DWORD PTR [eax+0x4],eax
  425143:	add    eax,0x8
  425146:	dec    edx
  425147:	jne    0x42513d
  425149:	push   0x4
  42514b:	mov    edi,ebx
  42514d:	push   0x1000
  425152:	shl    edi,0xf
  425155:	add    edi,DWORD PTR [ecx+0xc]
  425158:	push   0x8000
  42515d:	push   edi
  42515e:	call   DWORD PTR ds:0x4280e8
  425164:	test   eax,eax
  425166:	jne    0x425170
  425168:	or     eax,0xffffffff
  42516b:	jmp    0x42520d
  425170:	lea    edx,[edi+0x7000]
  425176:	cmp    edi,edx
  425178:	mov    DWORD PTR [ebp-0x4],edx
  42517b:	ja     0x4251c0
  42517d:	mov    ecx,edx
  42517f:	sub    ecx,edi
  425181:	shr    ecx,0xc
  425184:	lea    eax,[edi+0x10]
  425187:	inc    ecx
  425188:	or     DWORD PTR [eax-0x8],0xffffffff
  42518c:	or     DWORD PTR [eax+0xfec],0xffffffff
  425193:	lea    edx,[eax+0xffc]
  425199:	mov    DWORD PTR [eax],edx
  42519b:	lea    edx,[eax-0x1004]
  4251a1:	mov    DWORD PTR [eax-0x4],0xff0
  4251a8:	mov    DWORD PTR [eax+0x4],edx
  4251ab:	mov    DWORD PTR [eax+0xfe8],0xff0
  4251b5:	add    eax,0x1000
  4251ba:	dec    ecx
  4251bb:	jne    0x425188
  4251bd:	mov    edx,DWORD PTR [ebp-0x4]
  4251c0:	mov    eax,DWORD PTR [ebp-0x8]
  4251c3:	add    eax,0x1f8
  4251c8:	lea    ecx,[edi+0xc]
  4251cb:	mov    DWORD PTR [eax+0x4],ecx
  4251ce:	mov    DWORD PTR [ecx+0x8],eax
  4251d1:	lea    ecx,[edx+0xc]
  4251d4:	mov    DWORD PTR [eax+0x8],ecx
  4251d7:	mov    DWORD PTR [ecx+0x4],eax
  4251da:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  4251df:	xor    edi,edi
  4251e1:	inc    edi
  4251e2:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  4251e9:	mov    al,BYTE PTR [esi+0x43]
  4251ec:	mov    cl,al
  4251ee:	inc    cl
  4251f0:	test   al,al
  4251f2:	mov    eax,DWORD PTR [ebp+0x8]
  4251f5:	mov    BYTE PTR [esi+0x43],cl
  4251f8:	jne    0x4251fd
  4251fa:	or     DWORD PTR [eax+0x4],edi
  4251fd:	mov    edx,0x80000000
  425202:	mov    ecx,ebx
  425204:	shr    edx,cl
  425206:	not    edx
  425208:	and    DWORD PTR [eax+0x8],edx
  42520b:	mov    eax,ebx
  42520d:	pop    edi
  42520e:	pop    esi
  42520f:	pop    ebx
  425210:	leave  
  425211:	ret    
  425212:	push   ebp
  425213:	mov    ebp,esp
  425215:	sub    esp,0xc
  425218:	mov    ecx,DWORD PTR [ebp+0x8]
  42521b:	mov    eax,DWORD PTR [ecx+0x10]
  42521e:	push   ebx
  42521f:	push   esi
  425220:	mov    esi,DWORD PTR [ebp+0x10]
  425223:	push   edi
  425224:	mov    edi,DWORD PTR [ebp+0xc]
  425227:	mov    edx,edi
  425229:	sub    edx,DWORD PTR [ecx+0xc]
  42522c:	add    esi,0x17
  42522f:	shr    edx,0xf
  425232:	mov    ecx,edx
  425234:	imul   ecx,ecx,0x204
  42523a:	lea    ecx,[ecx+eax*1+0x144]
  425241:	mov    DWORD PTR [ebp-0xc],ecx
  425244:	mov    ecx,DWORD PTR [edi-0x4]
  425247:	and    esi,0xfffffff0
  42524a:	dec    ecx
  42524b:	cmp    esi,ecx
  42524d:	lea    edi,[ecx+edi*1-0x4]
  425251:	mov    ebx,DWORD PTR [edi]
  425253:	mov    DWORD PTR [ebp+0x10],ecx
  425256:	mov    DWORD PTR [ebp-0x4],ebx
  425259:	jle    0x4253b4
  42525f:	test   bl,0x1
  425262:	jne    0x4253ad
  425268:	add    ebx,ecx
  42526a:	cmp    esi,ebx
  42526c:	jg     0x4253ad
  425272:	mov    ecx,DWORD PTR [ebp-0x4]
  425275:	sar    ecx,0x4
  425278:	dec    ecx
  425279:	cmp    ecx,0x3f
  42527c:	mov    DWORD PTR [ebp-0x8],ecx
  42527f:	jbe    0x425287
  425281:	push   0x3f
  425283:	pop    ecx
  425284:	mov    DWORD PTR [ebp-0x8],ecx
  425287:	mov    ebx,DWORD PTR [edi+0x4]
  42528a:	cmp    ebx,DWORD PTR [edi+0x8]
  42528d:	jne    0x4252d2
  42528f:	cmp    ecx,0x20
  425292:	mov    ebx,0x80000000
  425297:	jae    0x4252b3
  425299:	shr    ebx,cl
  42529b:	mov    ecx,DWORD PTR [ebp-0x8]
  42529e:	lea    ecx,[ecx+eax*1+0x4]
  4252a2:	not    ebx
  4252a4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  4252a8:	dec    BYTE PTR [ecx]
  4252aa:	jne    0x4252d2
  4252ac:	mov    ecx,DWORD PTR [ebp+0x8]
  4252af:	and    DWORD PTR [ecx],ebx
  4252b1:	jmp    0x4252d2
  4252b3:	add    ecx,0xffffffe0
  4252b6:	shr    ebx,cl
  4252b8:	mov    ecx,DWORD PTR [ebp-0x8]
  4252bb:	lea    ecx,[ecx+eax*1+0x4]
  4252bf:	not    ebx
  4252c1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4252c8:	dec    BYTE PTR [ecx]
  4252ca:	jne    0x4252d2
  4252cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4252cf:	and    DWORD PTR [ecx+0x4],ebx
  4252d2:	mov    ecx,DWORD PTR [edi+0x8]
  4252d5:	mov    ebx,DWORD PTR [edi+0x4]
  4252d8:	mov    DWORD PTR [ecx+0x4],ebx
  4252db:	mov    ecx,DWORD PTR [edi+0x4]
  4252de:	mov    edi,DWORD PTR [edi+0x8]
  4252e1:	mov    DWORD PTR [ecx+0x8],edi
  4252e4:	mov    ecx,DWORD PTR [ebp+0x10]
  4252e7:	sub    ecx,esi
  4252e9:	add    DWORD PTR [ebp-0x4],ecx
  4252ec:	cmp    DWORD PTR [ebp-0x4],0x0
  4252f0:	jle    0x42539b
  4252f6:	mov    edi,DWORD PTR [ebp-0x4]
  4252f9:	mov    ecx,DWORD PTR [ebp+0xc]
  4252fc:	sar    edi,0x4
  4252ff:	dec    edi
  425300:	cmp    edi,0x3f
  425303:	lea    ecx,[ecx+esi*1-0x4]
  425307:	jbe    0x42530c
  425309:	push   0x3f
  42530b:	pop    edi
  42530c:	mov    ebx,DWORD PTR [ebp-0xc]
  42530f:	lea    ebx,[ebx+edi*8]
  425312:	mov    DWORD PTR [ebp+0x10],ebx
  425315:	mov    ebx,DWORD PTR [ebx+0x4]
  425318:	mov    DWORD PTR [ecx+0x4],ebx
  42531b:	mov    ebx,DWORD PTR [ebp+0x10]
  42531e:	mov    DWORD PTR [ecx+0x8],ebx
  425321:	mov    DWORD PTR [ebx+0x4],ecx
  425324:	mov    ebx,DWORD PTR [ecx+0x4]
  425327:	mov    DWORD PTR [ebx+0x8],ecx
  42532a:	mov    ebx,DWORD PTR [ecx+0x4]
  42532d:	cmp    ebx,DWORD PTR [ecx+0x8]
  425330:	jne    0x425389
  425332:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  425336:	mov    BYTE PTR [ebp+0x13],cl
  425339:	inc    cl
  42533b:	cmp    edi,0x20
  42533e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  425342:	jae    0x425360
  425344:	cmp    BYTE PTR [ebp+0x13],0x0
  425348:	jne    0x425358
  42534a:	mov    ecx,edi
  42534c:	mov    ebx,0x80000000
  425351:	shr    ebx,cl
  425353:	mov    ecx,DWORD PTR [ebp+0x8]
  425356:	or     DWORD PTR [ecx],ebx
  425358:	lea    eax,[eax+edx*4+0x44]
  42535c:	mov    ecx,edi
  42535e:	jmp    0x425380
  425360:	cmp    BYTE PTR [ebp+0x13],0x0
  425364:	jne    0x425376
  425366:	lea    ecx,[edi-0x20]
  425369:	mov    ebx,0x80000000
  42536e:	shr    ebx,cl
  425370:	mov    ecx,DWORD PTR [ebp+0x8]
  425373:	or     DWORD PTR [ecx+0x4],ebx
  425376:	lea    eax,[eax+edx*4+0xc4]
  42537d:	lea    ecx,[edi-0x20]
  425380:	mov    edx,0x80000000
  425385:	shr    edx,cl
  425387:	or     DWORD PTR [eax],edx
  425389:	mov    edx,DWORD PTR [ebp+0xc]
  42538c:	mov    ecx,DWORD PTR [ebp-0x4]
  42538f:	lea    eax,[edx+esi*1-0x4]
  425393:	mov    DWORD PTR [eax],ecx
  425395:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  425399:	jmp    0x42539e
  42539b:	mov    edx,DWORD PTR [ebp+0xc]
  42539e:	lea    eax,[esi+0x1]
  4253a1:	mov    DWORD PTR [edx-0x4],eax
  4253a4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  4253a8:	jmp    0x4254e9
  4253ad:	xor    eax,eax
  4253af:	jmp    0x4254ec
  4253b4:	jge    0x4254e9
  4253ba:	mov    ebx,DWORD PTR [ebp+0xc]
  4253bd:	sub    DWORD PTR [ebp+0x10],esi
  4253c0:	lea    ecx,[esi+0x1]
  4253c3:	mov    DWORD PTR [ebx-0x4],ecx
  4253c6:	lea    ebx,[ebx+esi*1-0x4]
  4253ca:	mov    esi,DWORD PTR [ebp+0x10]
  4253cd:	sar    esi,0x4
  4253d0:	dec    esi
  4253d1:	cmp    esi,0x3f
  4253d4:	mov    DWORD PTR [ebp+0xc],ebx
  4253d7:	mov    DWORD PTR [ebx-0x4],ecx
  4253da:	jbe    0x4253df
  4253dc:	push   0x3f
  4253de:	pop    esi
  4253df:	test   BYTE PTR [ebp-0x4],0x1
  4253e3:	jne    0x425469
  4253e9:	mov    esi,DWORD PTR [ebp-0x4]
  4253ec:	sar    esi,0x4
  4253ef:	dec    esi
  4253f0:	cmp    esi,0x3f
  4253f3:	jbe    0x4253f8
  4253f5:	push   0x3f
  4253f7:	pop    esi
  4253f8:	mov    ecx,DWORD PTR [edi+0x4]
  4253fb:	cmp    ecx,DWORD PTR [edi+0x8]
  4253fe:	jne    0x425442
  425400:	cmp    esi,0x20
  425403:	mov    ebx,0x80000000
  425408:	jae    0x425423
  42540a:	mov    ecx,esi
  42540c:	shr    ebx,cl
  42540e:	lea    esi,[esi+eax*1+0x4]
  425412:	not    ebx
  425414:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425418:	dec    BYTE PTR [esi]
  42541a:	jne    0x42543f
  42541c:	mov    ecx,DWORD PTR [ebp+0x8]
  42541f:	and    DWORD PTR [ecx],ebx
  425421:	jmp    0x42543f
  425423:	lea    ecx,[esi-0x20]
  425426:	shr    ebx,cl
  425428:	lea    ecx,[esi+eax*1+0x4]
  42542c:	not    ebx
  42542e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425435:	dec    BYTE PTR [ecx]
  425437:	jne    0x42543f
  425439:	mov    ecx,DWORD PTR [ebp+0x8]
  42543c:	and    DWORD PTR [ecx+0x4],ebx
  42543f:	mov    ebx,DWORD PTR [ebp+0xc]
  425442:	mov    ecx,DWORD PTR [edi+0x8]
  425445:	mov    esi,DWORD PTR [edi+0x4]
  425448:	mov    DWORD PTR [ecx+0x4],esi
  42544b:	mov    esi,DWORD PTR [edi+0x8]
  42544e:	mov    ecx,DWORD PTR [edi+0x4]
  425451:	mov    DWORD PTR [ecx+0x8],esi
  425454:	mov    esi,DWORD PTR [ebp+0x10]
  425457:	add    esi,DWORD PTR [ebp-0x4]
  42545a:	mov    DWORD PTR [ebp+0x10],esi
  42545d:	sar    esi,0x4
  425460:	dec    esi
  425461:	cmp    esi,0x3f
  425464:	jbe    0x425469
  425466:	push   0x3f
  425468:	pop    esi
  425469:	mov    ecx,DWORD PTR [ebp-0xc]
  42546c:	lea    ecx,[ecx+esi*8]
  42546f:	mov    edi,DWORD PTR [ecx+0x4]
  425472:	mov    DWORD PTR [ebx+0x8],ecx
  425475:	mov    DWORD PTR [ebx+0x4],edi
  425478:	mov    DWORD PTR [ecx+0x4],ebx
  42547b:	mov    ecx,DWORD PTR [ebx+0x4]
  42547e:	mov    DWORD PTR [ecx+0x8],ebx
  425481:	mov    ecx,DWORD PTR [ebx+0x4]
  425484:	cmp    ecx,DWORD PTR [ebx+0x8]
  425487:	jne    0x4254e0
  425489:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42548d:	mov    BYTE PTR [ebp+0xf],cl
  425490:	inc    cl
  425492:	cmp    esi,0x20
  425495:	mov    BYTE PTR [esi+eax*1+0x4],cl
  425499:	jae    0x4254b7
  42549b:	cmp    BYTE PTR [ebp+0xf],0x0
  42549f:	jne    0x4254af
  4254a1:	mov    ecx,esi
  4254a3:	mov    edi,0x80000000
  4254a8:	shr    edi,cl
  4254aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4254ad:	or     DWORD PTR [ecx],edi
  4254af:	lea    eax,[eax+edx*4+0x44]
  4254b3:	mov    ecx,esi
  4254b5:	jmp    0x4254d7
  4254b7:	cmp    BYTE PTR [ebp+0xf],0x0
  4254bb:	jne    0x4254cd
  4254bd:	lea    ecx,[esi-0x20]
  4254c0:	mov    edi,0x80000000
  4254c5:	shr    edi,cl
  4254c7:	mov    ecx,DWORD PTR [ebp+0x8]
  4254ca:	or     DWORD PTR [ecx+0x4],edi
  4254cd:	lea    eax,[eax+edx*4+0xc4]
  4254d4:	lea    ecx,[esi-0x20]
  4254d7:	mov    edx,0x80000000
  4254dc:	shr    edx,cl
  4254de:	or     DWORD PTR [eax],edx
  4254e0:	mov    eax,DWORD PTR [ebp+0x10]
  4254e3:	mov    DWORD PTR [ebx],eax
  4254e5:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  4254e9:	xor    eax,eax
  4254eb:	inc    eax
  4254ec:	pop    edi
  4254ed:	pop    esi
  4254ee:	pop    ebx
  4254ef:	leave  
  4254f0:	ret    
  4254f1:	push   ebp
  4254f2:	mov    ebp,esp
  4254f4:	sub    esp,0x14
  4254f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4254fa:	mov    eax,ds:0x4630dc
  4254ff:	mov    edx,DWORD PTR ds:0x4630e0
  425505:	add    ecx,0x17
  425508:	and    ecx,0xfffffff0
  42550b:	push   ebx
  42550c:	mov    DWORD PTR [ebp-0x10],ecx
  42550f:	sar    ecx,0x4
  425512:	push   esi
  425513:	lea    eax,[eax+eax*4]
  425516:	push   edi
  425517:	dec    ecx
  425518:	cmp    ecx,0x20
  42551b:	lea    edi,[edx+eax*4]
  42551e:	mov    DWORD PTR [ebp-0x4],edi
  425521:	jge    0x42552e
  425523:	or     esi,0xffffffff
  425526:	shr    esi,cl
  425528:	or     DWORD PTR [ebp-0x8],0xffffffff
  42552c:	jmp    0x42553b
  42552e:	add    ecx,0xffffffe0
  425531:	or     eax,0xffffffff
  425534:	xor    esi,esi
  425536:	shr    eax,cl
  425538:	mov    DWORD PTR [ebp-0x8],eax
  42553b:	mov    eax,ds:0x4630e8
  425540:	mov    ebx,eax
  425542:	mov    DWORD PTR [ebp-0xc],esi
  425545:	cmp    ebx,edi
  425547:	jmp    0x42555d
  425549:	mov    ecx,DWORD PTR [ebx+0x4]
  42554c:	mov    edi,DWORD PTR [ebx]
  42554e:	and    ecx,DWORD PTR [ebp-0x8]
  425551:	and    edi,esi
  425553:	or     ecx,edi
  425555:	jne    0x425562
  425557:	add    ebx,0x14
  42555a:	cmp    ebx,DWORD PTR [ebp-0x4]
  42555d:	mov    DWORD PTR [ebp+0x8],ebx
  425560:	jb     0x425549
  425562:	cmp    ebx,DWORD PTR [ebp-0x4]
  425565:	jne    0x42558b
  425567:	mov    ebx,edx
  425569:	jmp    0x42557c
  42556b:	mov    ecx,DWORD PTR [ebx+0x4]
  42556e:	mov    edi,DWORD PTR [ebx]
  425570:	and    ecx,DWORD PTR [ebp-0x8]
  425573:	and    edi,esi
  425575:	or     ecx,edi
  425577:	jne    0x425583
  425579:	add    ebx,0x14
  42557c:	cmp    ebx,eax
  42557e:	mov    DWORD PTR [ebp+0x8],ebx
  425581:	jb     0x42556b
  425583:	cmp    ebx,eax
  425585:	je     0x42561f
  42558b:	mov    DWORD PTR ds:0x4630e8,ebx
  425591:	mov    eax,DWORD PTR [ebx+0x10]
  425594:	mov    edx,DWORD PTR [eax]
  425596:	cmp    edx,0xffffffff
  425599:	mov    DWORD PTR [ebp-0x4],edx
  42559c:	je     0x4255b2
  42559e:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  4255a5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  4255a9:	and    ecx,DWORD PTR [ebp-0x8]
  4255ac:	and    edi,esi
  4255ae:	or     ecx,edi
  4255b0:	jne    0x4255e8
  4255b2:	mov    edx,DWORD PTR [eax+0xc4]
  4255b8:	and    edx,DWORD PTR [ebp-0x8]
  4255bb:	and    DWORD PTR [ebp-0x4],0x0
  4255bf:	lea    ecx,[eax+0x44]
  4255c2:	mov    esi,DWORD PTR [ecx]
  4255c4:	and    esi,DWORD PTR [ebp-0xc]
  4255c7:	or     edx,esi
  4255c9:	mov    esi,DWORD PTR [ebp-0xc]
  4255cc:	jne    0x4255e5
  4255ce:	mov    edx,DWORD PTR [ecx+0x84]
  4255d4:	and    edx,DWORD PTR [ebp-0x8]
  4255d7:	inc    DWORD PTR [ebp-0x4]
  4255da:	add    ecx,0x4
  4255dd:	mov    edi,DWORD PTR [ecx]
  4255df:	and    edi,esi
  4255e1:	or     edx,edi
  4255e3:	je     0x4255ce
  4255e5:	mov    edx,DWORD PTR [ebp-0x4]
  4255e8:	mov    ecx,edx
  4255ea:	imul   ecx,ecx,0x204
  4255f0:	lea    ecx,[ecx+eax*1+0x144]
  4255f7:	mov    DWORD PTR [ebp-0xc],ecx
  4255fa:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  4255fe:	xor    edi,edi
  425600:	and    ecx,esi
  425602:	jne    0x425671
  425604:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42560b:	and    ecx,DWORD PTR [ebp-0x8]
  42560e:	push   0x20
  425610:	pop    edi
  425611:	jmp    0x425671
  425613:	cmp    DWORD PTR [ebx+0x8],0x0
  425617:	jne    0x425624
  425619:	add    ebx,0x14
  42561c:	mov    DWORD PTR [ebp+0x8],ebx
  42561f:	cmp    ebx,DWORD PTR [ebp-0x4]
  425622:	jb     0x425613
  425624:	cmp    ebx,DWORD PTR [ebp-0x4]
  425627:	jne    0x42564f
  425629:	mov    ebx,edx
  42562b:	jmp    0x425636
  42562d:	cmp    DWORD PTR [ebx+0x8],0x0
  425631:	jne    0x42563d
  425633:	add    ebx,0x14
  425636:	cmp    ebx,eax
  425638:	mov    DWORD PTR [ebp+0x8],ebx
  42563b:	jb     0x42562d
  42563d:	cmp    ebx,eax
  42563f:	jne    0x42564f
  425641:	call   0x425055
  425646:	mov    ebx,eax
  425648:	test   ebx,ebx
  42564a:	mov    DWORD PTR [ebp+0x8],ebx
  42564d:	je     0x425667
  42564f:	push   ebx
  425650:	call   0x42510c
  425655:	pop    ecx
  425656:	mov    ecx,DWORD PTR [ebx+0x10]
  425659:	mov    DWORD PTR [ecx],eax
  42565b:	mov    eax,DWORD PTR [ebx+0x10]
  42565e:	cmp    DWORD PTR [eax],0xffffffff
  425661:	jne    0x42558b
  425667:	xor    eax,eax
  425669:	jmp    0x4257e8
  42566e:	shl    ecx,1
  425670:	inc    edi
  425671:	test   ecx,ecx
  425673:	jge    0x42566e
  425675:	mov    ecx,DWORD PTR [ebp-0xc]
  425678:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  42567c:	mov    ecx,DWORD PTR [edx]
  42567e:	sub    ecx,DWORD PTR [ebp-0x10]
  425681:	mov    esi,ecx
  425683:	sar    esi,0x4
  425686:	dec    esi
  425687:	cmp    esi,0x3f
  42568a:	mov    DWORD PTR [ebp-0x8],ecx
  42568d:	jle    0x425692
  42568f:	push   0x3f
  425691:	pop    esi
  425692:	cmp    esi,edi
  425694:	je     0x42579b
  42569a:	mov    ecx,DWORD PTR [edx+0x4]
  42569d:	cmp    ecx,DWORD PTR [edx+0x8]
  4256a0:	jne    0x4256fe
  4256a2:	cmp    edi,0x20
  4256a5:	mov    ebx,0x80000000
  4256aa:	jge    0x4256d2
  4256ac:	mov    ecx,edi
  4256ae:	shr    ebx,cl
  4256b0:	mov    ecx,DWORD PTR [ebp-0x4]
  4256b3:	lea    edi,[eax+edi*1+0x4]
  4256b7:	not    ebx
  4256b9:	mov    DWORD PTR [ebp-0x14],ebx
  4256bc:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4256c0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4256c4:	dec    BYTE PTR [edi]
  4256c6:	jne    0x4256fb
  4256c8:	mov    ecx,DWORD PTR [ebp-0x14]
  4256cb:	mov    ebx,DWORD PTR [ebp+0x8]
  4256ce:	and    DWORD PTR [ebx],ecx
  4256d0:	jmp    0x4256fe
  4256d2:	lea    ecx,[edi-0x20]
  4256d5:	shr    ebx,cl
  4256d7:	mov    ecx,DWORD PTR [ebp-0x4]
  4256da:	lea    ecx,[eax+ecx*4+0xc4]
  4256e1:	lea    edi,[eax+edi*1+0x4]
  4256e5:	not    ebx
  4256e7:	and    DWORD PTR [ecx],ebx
  4256e9:	dec    BYTE PTR [edi]
  4256eb:	mov    DWORD PTR [ebp-0x14],ebx
  4256ee:	jne    0x4256fb
  4256f0:	mov    ebx,DWORD PTR [ebp+0x8]
  4256f3:	mov    ecx,DWORD PTR [ebp-0x14]
  4256f6:	and    DWORD PTR [ebx+0x4],ecx
  4256f9:	jmp    0x4256fe
  4256fb:	mov    ebx,DWORD PTR [ebp+0x8]
  4256fe:	cmp    DWORD PTR [ebp-0x8],0x0
  425702:	mov    ecx,DWORD PTR [edx+0x8]
  425705:	mov    edi,DWORD PTR [edx+0x4]
  425708:	mov    DWORD PTR [ecx+0x4],edi
  42570b:	mov    ecx,DWORD PTR [edx+0x4]
  42570e:	mov    edi,DWORD PTR [edx+0x8]
  425711:	mov    DWORD PTR [ecx+0x8],edi
  425714:	je     0x4257a7
  42571a:	mov    ecx,DWORD PTR [ebp-0xc]
  42571d:	lea    ecx,[ecx+esi*8]
  425720:	mov    edi,DWORD PTR [ecx+0x4]
  425723:	mov    DWORD PTR [edx+0x8],ecx
  425726:	mov    DWORD PTR [edx+0x4],edi
  425729:	mov    DWORD PTR [ecx+0x4],edx
  42572c:	mov    ecx,DWORD PTR [edx+0x4]
  42572f:	mov    DWORD PTR [ecx+0x8],edx
  425732:	mov    ecx,DWORD PTR [edx+0x4]
  425735:	cmp    ecx,DWORD PTR [edx+0x8]
  425738:	jne    0x425798
  42573a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42573e:	mov    BYTE PTR [ebp+0xb],cl
  425741:	inc    cl
  425743:	cmp    esi,0x20
  425746:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42574a:	jge    0x42576f
  42574c:	cmp    BYTE PTR [ebp+0xb],0x0
  425750:	jne    0x42575d
  425752:	mov    edi,0x80000000
  425757:	mov    ecx,esi
  425759:	shr    edi,cl
  42575b:	or     DWORD PTR [ebx],edi
  42575d:	mov    ecx,esi
  42575f:	mov    edi,0x80000000
  425764:	shr    edi,cl
  425766:	mov    ecx,DWORD PTR [ebp-0x4]
  425769:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42576d:	jmp    0x425798
  42576f:	cmp    BYTE PTR [ebp+0xb],0x0
  425773:	jne    0x425782
  425775:	lea    ecx,[esi-0x20]
  425778:	mov    edi,0x80000000
  42577d:	shr    edi,cl
  42577f:	or     DWORD PTR [ebx+0x4],edi
  425782:	mov    ecx,DWORD PTR [ebp-0x4]
  425785:	lea    edi,[eax+ecx*4+0xc4]
  42578c:	lea    ecx,[esi-0x20]
  42578f:	mov    esi,0x80000000
  425794:	shr    esi,cl
  425796:	or     DWORD PTR [edi],esi
  425798:	mov    ecx,DWORD PTR [ebp-0x8]
  42579b:	test   ecx,ecx
  42579d:	je     0x4257aa
  42579f:	mov    DWORD PTR [edx],ecx
  4257a1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4257a5:	jmp    0x4257aa
  4257a7:	mov    ecx,DWORD PTR [ebp-0x8]
  4257aa:	mov    esi,DWORD PTR [ebp-0x10]
  4257ad:	add    edx,ecx
  4257af:	lea    ecx,[esi+0x1]
  4257b2:	mov    DWORD PTR [edx],ecx
  4257b4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4257b8:	mov    esi,DWORD PTR [ebp-0xc]
  4257bb:	mov    ecx,DWORD PTR [esi]
  4257bd:	test   ecx,ecx
  4257bf:	lea    edi,[ecx+0x1]
  4257c2:	mov    DWORD PTR [esi],edi
  4257c4:	jne    0x4257e0
  4257c6:	cmp    ebx,DWORD PTR ds:0x4630d8
  4257cc:	jne    0x4257e0
  4257ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4257d1:	cmp    ecx,DWORD PTR ds:0x4630f0
  4257d7:	jne    0x4257e0
  4257d9:	and    DWORD PTR ds:0x4630d8,0x0
  4257e0:	mov    ecx,DWORD PTR [ebp-0x4]
  4257e3:	mov    DWORD PTR [eax],ecx
  4257e5:	lea    eax,[edx+0x4]
  4257e8:	pop    edi
  4257e9:	pop    esi
  4257ea:	pop    ebx
  4257eb:	leave  
  4257ec:	ret    
  4257ed:	int3   
  4257ee:	int3   
  4257ef:	int3   
  4257f0:	push   esi
  4257f1:	inc    ebx
  4257f2:	xor    dh,BYTE PTR [eax]
  4257f4:	pop    eax
  4257f5:	inc    ebx
  4257f6:	xor    BYTE PTR [eax],dh
  4257f8:	push   ebp
  4257f9:	mov    ebp,esp
  4257fb:	sub    esp,0x8
  4257fe:	push   ebx
  4257ff:	push   esi
  425800:	push   edi
  425801:	push   ebp
  425802:	cld    
  425803:	mov    ebx,DWORD PTR [ebp+0xc]
  425806:	mov    eax,DWORD PTR [ebp+0x8]
  425809:	test   DWORD PTR [eax+0x4],0x6
  425810:	jne    0x425898
  425816:	mov    DWORD PTR [ebp-0x8],eax
  425819:	mov    eax,DWORD PTR [ebp+0x10]
  42581c:	mov    DWORD PTR [ebp-0x4],eax
  42581f:	lea    eax,[ebp-0x8]
  425822:	mov    DWORD PTR [ebx-0x4],eax
  425825:	mov    esi,DWORD PTR [ebx+0xc]
  425828:	mov    edi,DWORD PTR [ebx+0x8]
  42582b:	cmp    esi,0xffffffff
  42582e:	je     0x425891
  425830:	lea    ecx,[esi+esi*2]
  425833:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  425838:	je     0x42587f
  42583a:	push   esi
  42583b:	push   ebp
  42583c:	lea    ebp,[ebx+0x10]
  42583f:	call   DWORD PTR [edi+ecx*4+0x4]
  425843:	pop    ebp
  425844:	pop    esi
  425845:	mov    ebx,DWORD PTR [ebp+0xc]
  425848:	or     eax,eax
  42584a:	je     0x42587f
  42584c:	js     0x42588a
  42584e:	mov    edi,DWORD PTR [ebx+0x8]
  425851:	push   ebx
  425852:	call   0x426780
  425857:	add    esp,0x4
  42585a:	lea    ebp,[ebx+0x10]
  42585d:	push   esi
  42585e:	push   ebx
  42585f:	call   0x4267c2
  425864:	add    esp,0x8
  425867:	lea    ecx,[esi+esi*2]
  42586a:	push   0x1
  42586c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  425870:	call   0x426856
  425875:	mov    eax,DWORD PTR [edi+ecx*4]
  425878:	mov    DWORD PTR [ebx+0xc],eax
  42587b:	call   DWORD PTR [edi+ecx*4+0x8]
  42587f:	mov    edi,DWORD PTR [ebx+0x8]
  425882:	lea    ecx,[esi+esi*2]
  425885:	mov    esi,DWORD PTR [edi+ecx*4]
  425888:	jmp    0x42582b
  42588a:	mov    eax,0x0
  42588f:	jmp    0x4258ad
  425891:	mov    eax,0x1
  425896:	jmp    0x4258ad
  425898:	push   ebp
  425899:	lea    ebp,[ebx+0x10]
  42589c:	push   0xffffffff
  42589e:	push   ebx
  42589f:	call   0x4267c2
  4258a4:	add    esp,0x8
  4258a7:	pop    ebp
  4258a8:	mov    eax,0x1
  4258ad:	pop    ebp
  4258ae:	pop    edi
  4258af:	pop    esi
  4258b0:	pop    ebx
  4258b1:	mov    esp,ebp
  4258b3:	pop    ebp
  4258b4:	ret    
  4258b5:	push   ebp
  4258b6:	mov    ecx,DWORD PTR [esp+0x8]
  4258ba:	mov    ebp,DWORD PTR [ecx]
  4258bc:	mov    eax,DWORD PTR [ecx+0x1c]
  4258bf:	push   eax
  4258c0:	mov    eax,DWORD PTR [ecx+0x18]
  4258c3:	push   eax
  4258c4:	call   0x4267c2
  4258c9:	add    esp,0x8
  4258cc:	pop    ebp
  4258cd:	ret    0x4
  4258d0:	call   0x4237e9
  4258d5:	add    eax,0x8
  4258d8:	ret    
  4258d9:	push   0x14
  4258db:	push   0x4287b8
  4258e0:	call   0x423934
  4258e5:	mov    edi,DWORD PTR [ebp+0x8]
  4258e8:	xor    ebx,ebx
  4258ea:	cmp    edi,ebx
  4258ec:	jne    0x4258fc
  4258ee:	push   DWORD PTR [ebp+0xc]
  4258f1:	call   0x424652
  4258f6:	pop    ecx
  4258f7:	jmp    0x425a80
  4258fc:	mov    esi,DWORD PTR [ebp+0xc]
  4258ff:	cmp    esi,ebx
  425901:	jne    0x42590f
  425903:	push   edi
  425904:	call   0x42453a
  425909:	pop    ecx
  42590a:	jmp    0x425a7e
  42590f:	cmp    DWORD PTR ds:0x463324,0x3
  425916:	jne    0x425a4a
  42591c:	mov    DWORD PTR [ebp-0x1c],ebx
  42591f:	cmp    esi,0xffffffe0
  425922:	ja     0x425a19
  425928:	push   0x4
  42592a:	call   0x423aef
  42592f:	pop    ecx
  425930:	mov    DWORD PTR [ebp-0x4],ebx
  425933:	push   edi
  425934:	call   0x424d12
  425939:	pop    ecx
  42593a:	mov    DWORD PTR [ebp-0x20],eax
  42593d:	cmp    eax,ebx
  42593f:	je     0x4259e9
  425945:	cmp    esi,DWORD PTR ds:0x4630e4
  42594b:	ja     0x425999
  42594d:	push   esi
  42594e:	push   edi
  42594f:	push   eax
  425950:	call   0x425212
  425955:	add    esp,0xc
  425958:	test   eax,eax
  42595a:	je     0x425961
  42595c:	mov    DWORD PTR [ebp-0x1c],edi
  42595f:	jmp    0x425999
  425961:	push   esi
  425962:	call   0x4254f1
  425967:	pop    ecx
  425968:	mov    DWORD PTR [ebp-0x1c],eax
  42596b:	cmp    eax,ebx
  42596d:	je     0x425999
  42596f:	mov    eax,DWORD PTR [edi-0x4]
  425972:	dec    eax
  425973:	mov    DWORD PTR [ebp-0x24],eax
  425976:	cmp    eax,esi
  425978:	jb     0x42597c
  42597a:	mov    eax,esi
  42597c:	push   eax
  42597d:	push   edi
  42597e:	push   DWORD PTR [ebp-0x1c]
  425981:	call   0x424670
  425986:	push   edi
  425987:	call   0x424d12
  42598c:	mov    DWORD PTR [ebp-0x20],eax
  42598f:	push   edi
  425990:	push   eax
  425991:	call   0x424d3d
  425996:	add    esp,0x18
  425999:	cmp    DWORD PTR [ebp-0x1c],ebx
  42599c:	jne    0x4259e9
  42599e:	cmp    esi,ebx
  4259a0:	jne    0x4259a8
  4259a2:	xor    esi,esi
  4259a4:	inc    esi
  4259a5:	mov    DWORD PTR [ebp+0xc],esi
  4259a8:	add    esi,0xf
  4259ab:	and    esi,0xfffffff0
  4259ae:	mov    DWORD PTR [ebp+0xc],esi
  4259b1:	push   esi
  4259b2:	push   ebx
  4259b3:	push   DWORD PTR ds:0x463320
  4259b9:	call   DWORD PTR ds:0x4280e0
  4259bf:	mov    DWORD PTR [ebp-0x1c],eax
  4259c2:	cmp    eax,ebx
  4259c4:	je     0x4259e9
  4259c6:	mov    eax,DWORD PTR [edi-0x4]
  4259c9:	dec    eax
  4259ca:	mov    DWORD PTR [ebp-0x24],eax
  4259cd:	cmp    eax,esi
  4259cf:	jb     0x4259d3
  4259d1:	mov    eax,esi
  4259d3:	push   eax
  4259d4:	push   edi
  4259d5:	push   DWORD PTR [ebp-0x1c]
  4259d8:	call   0x424670
  4259dd:	push   edi
  4259de:	push   DWORD PTR [ebp-0x20]
  4259e1:	call   0x424d3d
  4259e6:	add    esp,0x14
  4259e9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4259ed:	call   0x425a41
  4259f2:	cmp    DWORD PTR [ebp-0x20],ebx
  4259f5:	jne    0x425a19
  4259f7:	cmp    esi,ebx
  4259f9:	jne    0x4259fe
  4259fb:	xor    esi,esi
  4259fd:	inc    esi
  4259fe:	add    esi,0xf
  425a01:	and    esi,0xfffffff0
  425a04:	mov    DWORD PTR [ebp+0xc],esi
  425a07:	push   esi
  425a08:	push   edi
  425a09:	push   ebx
  425a0a:	push   DWORD PTR ds:0x463320
  425a10:	call   DWORD PTR ds:0x4280ec
  425a16:	mov    DWORD PTR [ebp-0x1c],eax
  425a19:	mov    eax,DWORD PTR [ebp-0x1c]
  425a1c:	cmp    eax,ebx
  425a1e:	jne    0x425a80
  425a20:	cmp    DWORD PTR ds:0x462fa8,ebx
  425a26:	je     0x425a80
  425a28:	push   esi
  425a29:	call   0x426212
  425a2e:	pop    ecx
  425a2f:	test   eax,eax
  425a31:	jne    0x42591c
  425a37:	jmp    0x425a7e
  425a39:	xor    ebx,ebx
  425a3b:	mov    esi,DWORD PTR [ebp+0xc]
  425a3e:	mov    edi,DWORD PTR [ebp+0x8]
  425a41:	push   0x4
  425a43:	call   0x423a5b
  425a48:	pop    ecx
  425a49:	ret    
  425a4a:	xor    eax,eax
  425a4c:	cmp    esi,0xffffffe0
  425a4f:	ja     0x425a67
  425a51:	cmp    esi,ebx
  425a53:	jne    0x425a58
  425a55:	xor    esi,esi
  425a57:	inc    esi
  425a58:	push   esi
  425a59:	push   edi
  425a5a:	push   ebx
  425a5b:	push   DWORD PTR ds:0x463320
  425a61:	call   DWORD PTR ds:0x4280ec
  425a67:	cmp    eax,ebx
  425a69:	jne    0x425a80
  425a6b:	cmp    DWORD PTR ds:0x462fa8,ebx
  425a71:	je     0x425a80
  425a73:	push   esi
  425a74:	call   0x426212
  425a79:	pop    ecx
  425a7a:	test   eax,eax
  425a7c:	jne    0x425a4a
  425a7e:	xor    eax,eax
  425a80:	call   0x42396f
  425a85:	ret    
  425a86:	push   0x10
  425a88:	push   0x4287c8
  425a8d:	call   0x423934
  425a92:	cmp    DWORD PTR ds:0x463324,0x3
  425a99:	jne    0x425ad5
  425a9b:	push   0x4
  425a9d:	call   0x423aef
  425aa2:	pop    ecx
  425aa3:	and    DWORD PTR [ebp-0x4],0x0
  425aa7:	mov    esi,DWORD PTR [ebp+0x8]
  425aaa:	push   esi
  425aab:	call   0x424d12
  425ab0:	pop    ecx
  425ab1:	mov    DWORD PTR [ebp-0x1c],eax
  425ab4:	test   eax,eax
  425ab6:	je     0x425ac3
  425ab8:	mov    esi,DWORD PTR [esi-0x4]
  425abb:	sub    esi,0x9
  425abe:	mov    DWORD PTR [ebp-0x20],esi
  425ac1:	jmp    0x425ac6
  425ac3:	mov    esi,DWORD PTR [ebp-0x20]
  425ac6:	or     DWORD PTR [ebp-0x4],0xffffffff
  425aca:	call   0x425af3
  425acf:	cmp    DWORD PTR [ebp-0x1c],0x0
  425ad3:	jne    0x425ae8
  425ad5:	push   DWORD PTR [ebp+0x8]
  425ad8:	push   0x0
  425ada:	push   DWORD PTR ds:0x463320
  425ae0:	call   DWORD PTR ds:0x4280f0
  425ae6:	mov    esi,eax
  425ae8:	mov    eax,esi
  425aea:	call   0x42396f
  425aef:	ret    
  425af0:	mov    esi,DWORD PTR [ebp-0x20]
  425af3:	push   0x4
  425af5:	call   0x423a5b
  425afa:	pop    ecx
  425afb:	ret    
  425afc:	push   ebp
  425afd:	mov    ebp,esp
  425aff:	sub    esp,0x10
  425b02:	push   esi
  425b03:	lea    eax,[ebp-0x8]
  425b06:	push   eax
  425b07:	call   DWORD PTR ds:0x428100
  425b0d:	mov    esi,DWORD PTR [ebp-0x4]
  425b10:	xor    esi,DWORD PTR [ebp-0x8]
  425b13:	call   DWORD PTR ds:0x4280fc
  425b19:	xor    esi,eax
  425b1b:	call   DWORD PTR ds:0x42802c
  425b21:	xor    esi,eax
  425b23:	call   DWORD PTR ds:0x4280f8
  425b29:	xor    esi,eax
  425b2b:	lea    eax,[ebp-0x10]
  425b2e:	push   eax
  425b2f:	call   DWORD PTR ds:0x4280f4
  425b35:	mov    eax,DWORD PTR [ebp-0xc]
  425b38:	xor    eax,DWORD PTR [ebp-0x10]
  425b3b:	xor    esi,eax
  425b3d:	mov    DWORD PTR ds:0x462600,esi
  425b43:	jne    0x425b4f
  425b45:	mov    DWORD PTR ds:0x462600,0xbb40e64e
  425b4f:	pop    esi
  425b50:	leave  
  425b51:	ret    
  425b52:	push   0x118
  425b57:	push   0x428978
  425b5c:	call   0x423934
  425b61:	mov    eax,ds:0x462600
  425b66:	xor    eax,DWORD PTR [ebp+0x4]
  425b69:	mov    DWORD PTR [ebp-0x1c],eax
  425b6c:	mov    eax,ds:0x462f78
  425b71:	xor    ecx,ecx
  425b73:	cmp    eax,ecx
  425b75:	je     0x425b96
  425b77:	mov    DWORD PTR [ebp-0x4],ecx
  425b7a:	push   DWORD PTR [ebp+0xc]
  425b7d:	push   DWORD PTR [ebp+0x8]
  425b80:	call   eax
  425b82:	pop    ecx
  425b83:	pop    ecx
  425b84:	or     DWORD PTR [ebp-0x4],0xffffffff
  425b88:	jmp    0x425c94
  425b8d:	xor    eax,eax
  425b8f:	inc    eax
  425b90:	ret    
  425b91:	mov    esp,DWORD PTR [ebp-0x18]
  425b94:	jmp    0x425b84
  425b96:	mov    eax,DWORD PTR [ebp+0x8]
  425b99:	dec    eax
  425b9a:	je     0x425baf
  425b9c:	mov    edi,0x428954
  425ba1:	mov    DWORD PTR [ebp-0x20],0x4288a0
  425ba8:	mov    esi,0xd4
  425bad:	jmp    0x425bc0
  425baf:	mov    edi,0x428880
  425bb4:	mov    DWORD PTR [ebp-0x20],0x4287e0
  425bbb:	mov    esi,0xb9
  425bc0:	mov    BYTE PTR [ebp-0x24],cl
  425bc3:	push   0x104
  425bc8:	lea    eax,[ebp-0x128]
  425bce:	push   eax
  425bcf:	push   ecx
  425bd0:	call   DWORD PTR ds:0x428084
  425bd6:	test   eax,eax
  425bd8:	jne    0x425bed
  425bda:	push   0x4284d4
  425bdf:	lea    eax,[ebp-0x128]
  425be5:	push   eax
  425be6:	call   0x423d10
  425beb:	pop    ecx
  425bec:	pop    ecx
  425bed:	lea    ebx,[ebp-0x128]
  425bf3:	lea    eax,[ebp-0x128]
  425bf9:	push   eax
  425bfa:	call   0x423f40
  425bff:	pop    ecx
  425c00:	add    eax,0xb
  425c03:	cmp    eax,0x3c
  425c06:	jbe    0x425c31
  425c08:	lea    eax,[ebp-0x128]
  425c0e:	push   eax
  425c0f:	call   0x423f40
  425c14:	mov    ebx,eax
  425c16:	lea    eax,[ebp-0x128]
  425c1c:	sub    eax,0x31
  425c1f:	add    ebx,eax
  425c21:	push   0x3
  425c23:	push   0x4284d0
  425c28:	push   ebx
  425c29:	call   0x423e10
  425c2e:	add    esp,0x10
  425c31:	push   ebx
  425c32:	call   0x423f40
  425c37:	pop    ecx
  425c38:	lea    eax,[eax+esi*1+0xc]
  425c3c:	add    eax,0x3
  425c3f:	and    eax,0xfffffffc
  425c42:	call   0x423980
  425c47:	mov    DWORD PTR [ebp-0x18],esp
  425c4a:	mov    esi,esp
  425c4c:	push   edi
  425c4d:	push   esi
  425c4e:	call   0x423d10
  425c53:	mov    edi,0x4284b0
  425c58:	push   edi
  425c59:	push   esi
  425c5a:	call   0x423d20
  425c5f:	push   0x4287d4
  425c64:	push   esi
  425c65:	call   0x423d20
  425c6a:	push   ebx
  425c6b:	push   esi
  425c6c:	call   0x423d20
  425c71:	push   edi
  425c72:	push   esi
  425c73:	call   0x423d20
  425c78:	push   DWORD PTR [ebp-0x20]
  425c7b:	push   esi
  425c7c:	call   0x423d20
  425c81:	push   0x12010
  425c86:	push   0x428488
  425c8b:	push   esi
  425c8c:	call   0x423c12
  425c91:	add    esp,0x3c
  425c94:	push   0x3
  425c96:	call   0x422da2
  425c9b:	int3   
  425c9c:	push   0x38
  425c9e:	push   0x428d98
  425ca3:	call   0x423934
  425ca8:	xor    ebx,ebx
  425caa:	cmp    DWORD PTR ds:0x462f9c,ebx
  425cb0:	jne    0x425cea
  425cb2:	push   ebx
  425cb3:	push   ebx
  425cb4:	xor    esi,esi
  425cb6:	inc    esi
  425cb7:	push   esi
  425cb8:	push   0x428d94
  425cbd:	push   0x100
  425cc2:	push   ebx
  425cc3:	call   DWORD PTR ds:0x42810c
  425cc9:	test   eax,eax
  425ccb:	je     0x425cd5
  425ccd:	mov    DWORD PTR ds:0x462f9c,esi
  425cd3:	jmp    0x425cea
  425cd5:	call   DWORD PTR ds:0x42801c
  425cdb:	cmp    eax,0x78
  425cde:	jne    0x425cea
  425ce0:	mov    DWORD PTR ds:0x462f9c,0x2
  425cea:	cmp    DWORD PTR [ebp+0x14],ebx
  425ced:	jle    0x425d0a
  425cef:	mov    ecx,DWORD PTR [ebp+0x14]
  425cf2:	mov    eax,DWORD PTR [ebp+0x10]
  425cf5:	dec    ecx
  425cf6:	cmp    BYTE PTR [eax],bl
  425cf8:	je     0x425d02
  425cfa:	inc    eax
  425cfb:	cmp    ecx,ebx
  425cfd:	jne    0x425cf5
  425cff:	or     ecx,0xffffffff
  425d02:	or     eax,0xffffffff
  425d05:	sub    eax,ecx
  425d07:	add    DWORD PTR [ebp+0x14],eax
  425d0a:	mov    eax,ds:0x462f9c
  425d0f:	cmp    eax,0x2
  425d12:	je     0x425ef4
  425d18:	cmp    eax,ebx
  425d1a:	je     0x425ef4
  425d20:	cmp    eax,0x1
  425d23:	jne    0x425f27
  425d29:	xor    edi,edi
  425d2b:	mov    DWORD PTR [ebp-0x1c],edi
  425d2e:	mov    DWORD PTR [ebp-0x20],ebx
  425d31:	mov    DWORD PTR [ebp-0x24],ebx
  425d34:	cmp    DWORD PTR [ebp+0x20],ebx
  425d37:	jne    0x425d41
  425d39:	mov    eax,ds:0x462f94
  425d3e:	mov    DWORD PTR [ebp+0x20],eax
  425d41:	push   ebx
  425d42:	push   ebx
  425d43:	push   DWORD PTR [ebp+0x14]
  425d46:	push   DWORD PTR [ebp+0x10]
  425d49:	xor    eax,eax
  425d4b:	cmp    DWORD PTR [ebp+0x24],ebx
  425d4e:	setne  al
  425d51:	lea    eax,[eax*8+0x1]
  425d58:	push   eax
  425d59:	push   DWORD PTR [ebp+0x20]
  425d5c:	call   DWORD PTR ds:0x428108
  425d62:	mov    esi,eax
  425d64:	mov    DWORD PTR [ebp-0x28],esi
  425d67:	cmp    esi,ebx
  425d69:	je     0x425f27
  425d6f:	mov    DWORD PTR [ebp-0x4],0x1
  425d76:	lea    eax,[esi+esi*1]
  425d79:	add    eax,0x3
  425d7c:	and    eax,0xfffffffc
  425d7f:	call   0x423980
  425d84:	mov    DWORD PTR [ebp-0x18],esp
  425d87:	mov    eax,esp
  425d89:	mov    DWORD PTR [ebp-0x2c],eax
  425d8c:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d90:	jmp    0x425dad
  425d92:	xor    eax,eax
  425d94:	inc    eax
  425d95:	ret    
  425d96:	mov    esp,DWORD PTR [ebp-0x18]
  425d99:	call   0x426dc5
  425d9e:	xor    ebx,ebx
  425da0:	mov    DWORD PTR [ebp-0x2c],ebx
  425da3:	or     DWORD PTR [ebp-0x4],0xffffffff
  425da7:	mov    edi,DWORD PTR [ebp-0x1c]
  425daa:	mov    esi,DWORD PTR [ebp-0x28]
  425dad:	cmp    DWORD PTR [ebp-0x2c],ebx
  425db0:	jne    0x425dce
  425db2:	lea    eax,[esi+esi*1]
  425db5:	push   eax
  425db6:	call   0x424652
  425dbb:	pop    ecx
  425dbc:	mov    DWORD PTR [ebp-0x2c],eax
  425dbf:	cmp    eax,ebx
  425dc1:	je     0x425f27
  425dc7:	mov    DWORD PTR [ebp-0x20],0x1
  425dce:	push   esi
  425dcf:	push   DWORD PTR [ebp-0x2c]
  425dd2:	push   DWORD PTR [ebp+0x14]
  425dd5:	push   DWORD PTR [ebp+0x10]
  425dd8:	push   0x1
  425dda:	push   DWORD PTR [ebp+0x20]
  425ddd:	call   DWORD PTR ds:0x428108
  425de3:	test   eax,eax
  425de5:	je     0x425ed1
  425deb:	push   ebx
  425dec:	push   ebx
  425ded:	push   esi
  425dee:	push   DWORD PTR [ebp-0x2c]
  425df1:	push   DWORD PTR [ebp+0xc]
  425df4:	push   DWORD PTR [ebp+0x8]
  425df7:	call   DWORD PTR ds:0x42810c
  425dfd:	mov    edi,eax
  425dff:	mov    DWORD PTR [ebp-0x1c],edi
  425e02:	cmp    edi,ebx
  425e04:	je     0x425ed1
  425e0a:	test   BYTE PTR [ebp+0xd],0x4
  425e0e:	je     0x425e3d
  425e10:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e13:	je     0x425ed1
  425e19:	cmp    edi,DWORD PTR [ebp+0x1c]
  425e1c:	jg     0x425ed1
  425e22:	push   DWORD PTR [ebp+0x1c]
  425e25:	push   DWORD PTR [ebp+0x18]
  425e28:	push   esi
  425e29:	push   DWORD PTR [ebp-0x2c]
  425e2c:	push   DWORD PTR [ebp+0xc]
  425e2f:	push   DWORD PTR [ebp+0x8]
  425e32:	call   DWORD PTR ds:0x42810c
  425e38:	jmp    0x425ed1
  425e3d:	mov    DWORD PTR [ebp-0x4],0x2
  425e44:	lea    eax,[edi+edi*1]
  425e47:	add    eax,0x3
  425e4a:	and    eax,0xfffffffc
  425e4d:	call   0x423980
  425e52:	mov    DWORD PTR [ebp-0x18],esp
  425e55:	mov    eax,esp
  425e57:	mov    DWORD PTR [ebp-0x30],eax
  425e5a:	or     DWORD PTR [ebp-0x4],0xffffffff
  425e5e:	jmp    0x425e7b
  425e60:	xor    eax,eax
  425e62:	inc    eax
  425e63:	ret    
  425e64:	mov    esp,DWORD PTR [ebp-0x18]
  425e67:	call   0x426dc5
  425e6c:	xor    ebx,ebx
  425e6e:	mov    DWORD PTR [ebp-0x30],ebx
  425e71:	or     DWORD PTR [ebp-0x4],0xffffffff
  425e75:	mov    edi,DWORD PTR [ebp-0x1c]
  425e78:	mov    esi,DWORD PTR [ebp-0x28]
  425e7b:	cmp    DWORD PTR [ebp-0x30],ebx
  425e7e:	jne    0x425e98
  425e80:	lea    eax,[edi+edi*1]
  425e83:	push   eax
  425e84:	call   0x424652
  425e89:	pop    ecx
  425e8a:	mov    DWORD PTR [ebp-0x30],eax
  425e8d:	cmp    eax,ebx
  425e8f:	je     0x425ed1
  425e91:	mov    DWORD PTR [ebp-0x24],0x1
  425e98:	push   edi
  425e99:	push   DWORD PTR [ebp-0x30]
  425e9c:	push   esi
  425e9d:	push   DWORD PTR [ebp-0x2c]
  425ea0:	push   DWORD PTR [ebp+0xc]
  425ea3:	push   DWORD PTR [ebp+0x8]
  425ea6:	call   DWORD PTR ds:0x42810c
  425eac:	test   eax,eax
  425eae:	je     0x425ed1
  425eb0:	push   ebx
  425eb1:	push   ebx
  425eb2:	cmp    DWORD PTR [ebp+0x1c],ebx
  425eb5:	jne    0x425ebb
  425eb7:	push   ebx
  425eb8:	push   ebx
  425eb9:	jmp    0x425ec1
  425ebb:	push   DWORD PTR [ebp+0x1c]
  425ebe:	push   DWORD PTR [ebp+0x18]
  425ec1:	push   edi
  425ec2:	push   DWORD PTR [ebp-0x30]
  425ec5:	push   ebx
  425ec6:	push   DWORD PTR [ebp+0x20]
  425ec9:	call   DWORD PTR ds:0x428094
  425ecf:	mov    edi,eax
  425ed1:	cmp    DWORD PTR [ebp-0x24],ebx
  425ed4:	je     0x425edf
  425ed6:	push   DWORD PTR [ebp-0x30]
  425ed9:	call   0x42453a
  425ede:	pop    ecx
  425edf:	cmp    DWORD PTR [ebp-0x20],ebx
  425ee2:	je     0x425eed
  425ee4:	push   DWORD PTR [ebp-0x2c]
  425ee7:	call   0x42453a
  425eec:	pop    ecx
  425eed:	mov    eax,edi
  425eef:	jmp    0x42604f
  425ef4:	mov    DWORD PTR [ebp-0x34],ebx
  425ef7:	xor    edi,edi
  425ef9:	mov    DWORD PTR [ebp-0x38],ebx
  425efc:	cmp    DWORD PTR [ebp+0x8],ebx
  425eff:	jne    0x425f09
  425f01:	mov    eax,ds:0x462f84
  425f06:	mov    DWORD PTR [ebp+0x8],eax
  425f09:	cmp    DWORD PTR [ebp+0x20],ebx
  425f0c:	jne    0x425f16
  425f0e:	mov    eax,ds:0x462f94
  425f13:	mov    DWORD PTR [ebp+0x20],eax
  425f16:	push   DWORD PTR [ebp+0x8]
  425f19:	call   0x426bad
  425f1e:	pop    ecx
  425f1f:	mov    DWORD PTR [ebp-0x3c],eax
  425f22:	cmp    eax,0xffffffff
  425f25:	jne    0x425f2e
  425f27:	xor    eax,eax
  425f29:	jmp    0x42604f
  425f2e:	cmp    eax,DWORD PTR [ebp+0x20]
  425f31:	je     0x426025
  425f37:	push   ebx
  425f38:	push   ebx
  425f39:	lea    ecx,[ebp+0x14]
  425f3c:	push   ecx
  425f3d:	push   DWORD PTR [ebp+0x10]
  425f40:	push   eax
  425f41:	push   DWORD PTR [ebp+0x20]
  425f44:	call   0x426bf6
  425f49:	add    esp,0x18
  425f4c:	mov    DWORD PTR [ebp-0x34],eax
  425f4f:	cmp    eax,ebx
  425f51:	je     0x425f27
  425f53:	push   ebx
  425f54:	push   ebx
  425f55:	push   DWORD PTR [ebp+0x14]
  425f58:	push   eax
  425f59:	push   DWORD PTR [ebp+0xc]
  425f5c:	push   DWORD PTR [ebp+0x8]
  425f5f:	call   DWORD PTR ds:0x428104
  425f65:	mov    esi,eax
  425f67:	mov    DWORD PTR [ebp-0x40],esi
  425f6a:	cmp    esi,ebx
  425f6c:	je     0x426014
  425f72:	mov    DWORD PTR [ebp-0x4],ebx
  425f75:	add    eax,0x3
  425f78:	and    eax,0xfffffffc
  425f7b:	call   0x423980
  425f80:	mov    DWORD PTR [ebp-0x18],esp
  425f83:	mov    edi,esp
  425f85:	mov    DWORD PTR [ebp-0x44],edi
  425f88:	push   esi
  425f89:	push   ebx
  425f8a:	push   edi
  425f8b:	call   0x426230
  425f90:	add    esp,0xc
  425f93:	jmp    0x425fa5
  425f95:	xor    eax,eax
  425f97:	inc    eax
  425f98:	ret    
  425f99:	mov    esp,DWORD PTR [ebp-0x18]
  425f9c:	call   0x426dc5
  425fa1:	xor    ebx,ebx
  425fa3:	xor    edi,edi
  425fa5:	or     DWORD PTR [ebp-0x4],0xffffffff
  425fa9:	cmp    edi,ebx
  425fab:	jne    0x425fd0
  425fad:	push   DWORD PTR [ebp-0x40]
  425fb0:	call   0x424652
  425fb5:	pop    ecx
  425fb6:	mov    edi,eax
  425fb8:	cmp    edi,ebx
  425fba:	je     0x425fed
  425fbc:	push   DWORD PTR [ebp-0x40]
  425fbf:	push   ebx
  425fc0:	push   edi
  425fc1:	call   0x426230
  425fc6:	add    esp,0xc
  425fc9:	mov    DWORD PTR [ebp-0x38],0x1
  425fd0:	push   DWORD PTR [ebp-0x40]
  425fd3:	push   edi
  425fd4:	push   DWORD PTR [ebp+0x14]
  425fd7:	push   DWORD PTR [ebp-0x34]
  425fda:	push   DWORD PTR [ebp+0xc]
  425fdd:	push   DWORD PTR [ebp+0x8]
  425fe0:	call   DWORD PTR ds:0x428104
  425fe6:	mov    DWORD PTR [ebp-0x40],eax
  425fe9:	cmp    eax,ebx
  425feb:	jne    0x425ff1
  425fed:	xor    esi,esi
  425fef:	jmp    0x426017
  425ff1:	push   DWORD PTR [ebp+0x1c]
  425ff4:	push   DWORD PTR [ebp+0x18]
  425ff7:	lea    eax,[ebp-0x40]
  425ffa:	push   eax
  425ffb:	push   edi
  425ffc:	push   DWORD PTR [ebp+0x20]
  425fff:	push   DWORD PTR [ebp-0x3c]
  426002:	call   0x426bf6
  426007:	add    esp,0x18
  42600a:	mov    esi,eax
  42600c:	neg    esi
  42600e:	sbb    esi,esi
  426010:	neg    esi
  426012:	jmp    0x426017
  426014:	mov    esi,DWORD PTR [ebp-0x48]
  426017:	cmp    DWORD PTR [ebp-0x38],ebx
  42601a:	je     0x42603f
  42601c:	push   edi
  42601d:	call   0x42453a
  426022:	pop    ecx
  426023:	jmp    0x42603f
  426025:	push   DWORD PTR [ebp+0x1c]
  426028:	push   DWORD PTR [ebp+0x18]
  42602b:	push   DWORD PTR [ebp+0x14]
  42602e:	push   DWORD PTR [ebp+0x10]
  426031:	push   DWORD PTR [ebp+0xc]
  426034:	push   DWORD PTR [ebp+0x8]
  426037:	call   DWORD PTR ds:0x428104
  42603d:	mov    esi,eax
  42603f:	cmp    DWORD PTR [ebp-0x34],ebx
  426042:	je     0x42604d
  426044:	push   DWORD PTR [ebp-0x34]
  426047:	call   0x42453a
  42604c:	pop    ecx
  42604d:	mov    eax,esi
  42604f:	lea    esp,[ebp-0x54]
  426052:	call   0x42396f
  426057:	ret    
  426058:	push   0x1c
  42605a:	push   0x428dc0
  42605f:	call   0x423934
  426064:	xor    esi,esi
  426066:	cmp    DWORD PTR ds:0x462fa0,esi
  42606c:	jne    0x4260a3
  42606e:	lea    eax,[ebp-0x1c]
  426071:	push   eax
  426072:	xor    edi,edi
  426074:	inc    edi
  426075:	push   edi
  426076:	push   0x428d94
  42607b:	push   edi
  42607c:	call   DWORD PTR ds:0x428114
  426082:	test   eax,eax
  426084:	je     0x42608e
  426086:	mov    DWORD PTR ds:0x462fa0,edi
  42608c:	jmp    0x4260a3
  42608e:	call   DWORD PTR ds:0x42801c
  426094:	cmp    eax,0x78
  426097:	jne    0x4260a3
  426099:	mov    DWORD PTR ds:0x462fa0,0x2
  4260a3:	mov    eax,ds:0x462fa0
  4260a8:	cmp    eax,0x2
  4260ab:	je     0x42619b
  4260b1:	cmp    eax,esi
  4260b3:	je     0x42619b
  4260b9:	cmp    eax,0x1
  4260bc:	jne    0x4261c1
  4260c2:	mov    DWORD PTR [ebp-0x20],esi
  4260c5:	mov    DWORD PTR [ebp-0x24],esi
  4260c8:	cmp    DWORD PTR [ebp+0x18],esi
  4260cb:	jne    0x4260d5
  4260cd:	mov    eax,ds:0x462f94
  4260d2:	mov    DWORD PTR [ebp+0x18],eax
  4260d5:	push   esi
  4260d6:	push   esi
  4260d7:	push   DWORD PTR [ebp+0x10]
  4260da:	push   DWORD PTR [ebp+0xc]
  4260dd:	xor    eax,eax
  4260df:	cmp    DWORD PTR [ebp+0x20],esi
  4260e2:	setne  al
  4260e5:	lea    eax,[eax*8+0x1]
  4260ec:	push   eax
  4260ed:	push   DWORD PTR [ebp+0x18]
  4260f0:	call   DWORD PTR ds:0x428108
  4260f6:	mov    edi,eax
  4260f8:	mov    DWORD PTR [ebp-0x28],edi
  4260fb:	test   edi,edi
  4260fd:	je     0x4261c1
  426103:	and    DWORD PTR [ebp-0x4],0x0
  426107:	lea    ebx,[edi+edi*1]
  42610a:	mov    eax,ebx
  42610c:	add    eax,0x3
  42610f:	and    eax,0xfffffffc
  426112:	call   0x423980
  426117:	mov    DWORD PTR [ebp-0x18],esp
  42611a:	mov    esi,esp
  42611c:	mov    DWORD PTR [ebp-0x2c],esi
  42611f:	push   ebx
  426120:	push   0x0
  426122:	push   esi
  426123:	call   0x426230
  426128:	add    esp,0xc
  42612b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42612f:	jmp    0x426146
  426131:	xor    eax,eax
  426133:	inc    eax
  426134:	ret    
  426135:	mov    esp,DWORD PTR [ebp-0x18]
  426138:	call   0x426dc5
  42613d:	xor    esi,esi
  42613f:	or     DWORD PTR [ebp-0x4],0xffffffff
  426143:	mov    edi,DWORD PTR [ebp-0x28]
  426146:	test   esi,esi
  426148:	jne    0x426161
  42614a:	push   edi
  42614b:	push   0x2
  42614d:	call   0x424a48
  426152:	pop    ecx
  426153:	pop    ecx
  426154:	mov    esi,eax
  426156:	test   esi,esi
  426158:	je     0x4261c1
  42615a:	mov    DWORD PTR [ebp-0x24],0x1
  426161:	push   edi
  426162:	push   esi
  426163:	push   DWORD PTR [ebp+0x10]
  426166:	push   DWORD PTR [ebp+0xc]
  426169:	push   0x1
  42616b:	push   DWORD PTR [ebp+0x18]
  42616e:	call   DWORD PTR ds:0x428108
  426174:	test   eax,eax
  426176:	je     0x426189
  426178:	push   DWORD PTR [ebp+0x14]
  42617b:	push   eax
  42617c:	push   esi
  42617d:	push   DWORD PTR [ebp+0x8]
  426180:	call   DWORD PTR ds:0x428114
  426186:	mov    DWORD PTR [ebp-0x20],eax
  426189:	cmp    DWORD PTR [ebp-0x24],0x0
  42618d:	je     0x426196
  42618f:	push   esi
  426190:	call   0x42453a
  426195:	pop    ecx
  426196:	mov    eax,DWORD PTR [ebp-0x20]
  426199:	jmp    0x426209
  42619b:	mov    ebx,DWORD PTR [ebp+0x1c]
  42619e:	cmp    ebx,esi
  4261a0:	jne    0x4261a8
  4261a2:	mov    ebx,DWORD PTR ds:0x462f84
  4261a8:	mov    edi,DWORD PTR [ebp+0x18]
  4261ab:	test   edi,edi
  4261ad:	jne    0x4261b5
  4261af:	mov    edi,DWORD PTR ds:0x462f94
  4261b5:	push   ebx
  4261b6:	call   0x426bad
  4261bb:	pop    ecx
  4261bc:	cmp    eax,0xffffffff
  4261bf:	jne    0x4261c5
  4261c1:	xor    eax,eax
  4261c3:	jmp    0x426209
  4261c5:	cmp    eax,edi
  4261c7:	je     0x4261e7
  4261c9:	push   0x0
  4261cb:	push   0x0
  4261cd:	lea    ecx,[ebp+0x10]
  4261d0:	push   ecx
  4261d1:	push   DWORD PTR [ebp+0xc]
  4261d4:	push   eax
  4261d5:	push   edi
  4261d6:	call   0x426bf6
  4261db:	add    esp,0x18
  4261de:	mov    esi,eax
  4261e0:	test   esi,esi
  4261e2:	je     0x4261c1
  4261e4:	mov    DWORD PTR [ebp+0xc],esi
  4261e7:	push   DWORD PTR [ebp+0x14]
  4261ea:	push   DWORD PTR [ebp+0x10]
  4261ed:	push   DWORD PTR [ebp+0xc]
  4261f0:	push   DWORD PTR [ebp+0x8]
  4261f3:	push   ebx
  4261f4:	call   DWORD PTR ds:0x428110
  4261fa:	mov    edi,eax
  4261fc:	test   esi,esi
  4261fe:	je     0x426207
  426200:	push   esi
  426201:	call   0x42453a
  426206:	pop    ecx
  426207:	mov    eax,edi
  426209:	lea    esp,[ebp-0x38]
  42620c:	call   0x42396f
  426211:	ret    
  426212:	mov    eax,ds:0x462fa4
  426217:	test   eax,eax
  426219:	je     0x42622a
  42621b:	push   DWORD PTR [esp+0x4]
  42621f:	call   eax
  426221:	test   eax,eax
  426223:	pop    ecx
  426224:	je     0x42622a
  426226:	xor    eax,eax
  426228:	inc    eax
  426229:	ret    
  42622a:	xor    eax,eax
  42622c:	ret    
  42622d:	int3   
  42622e:	int3   
  42622f:	int3   
  426230:	mov    edx,DWORD PTR [esp+0xc]
  426234:	mov    ecx,DWORD PTR [esp+0x4]
  426238:	test   edx,edx
  42623a:	je     0x42628b
  42623c:	xor    eax,eax
  42623e:	mov    al,BYTE PTR [esp+0x8]
  426242:	push   edi
  426243:	mov    edi,ecx
  426245:	cmp    edx,0x4
  426248:	jb     0x42627b
  42624a:	neg    ecx
  42624c:	and    ecx,0x3
  42624f:	je     0x42625d
  426251:	sub    edx,ecx
  426253:	mov    BYTE PTR [edi],al
  426255:	add    edi,0x1
  426258:	sub    ecx,0x1
  42625b:	jne    0x426253
  42625d:	mov    ecx,eax
  42625f:	shl    eax,0x8
  426262:	add    eax,ecx
  426264:	mov    ecx,eax
  426266:	shl    eax,0x10
  426269:	add    eax,ecx
  42626b:	mov    ecx,edx
  42626d:	and    edx,0x3
  426270:	shr    ecx,0x2
  426273:	je     0x42627b
  426275:	rep stos DWORD PTR es:[edi],eax
  426277:	test   edx,edx
  426279:	je     0x426285
  42627b:	mov    BYTE PTR [edi],al
  42627d:	add    edi,0x1
  426280:	sub    edx,0x1
  426283:	jne    0x42627b
  426285:	mov    eax,DWORD PTR [esp+0x8]
  426289:	pop    edi
  42628a:	ret    
  42628b:	mov    eax,DWORD PTR [esp+0x4]
  42628f:	ret    
  426290:	push   esi
  426291:	mov    esi,DWORD PTR [esp+0x8]
  426295:	test   esi,esi
  426297:	je     0x42641e
  42629d:	push   DWORD PTR [esi+0x4]
  4262a0:	call   0x42453a
  4262a5:	push   DWORD PTR [esi+0x8]
  4262a8:	call   0x42453a
  4262ad:	push   DWORD PTR [esi+0xc]
  4262b0:	call   0x42453a
  4262b5:	push   DWORD PTR [esi+0x10]
  4262b8:	call   0x42453a
  4262bd:	push   DWORD PTR [esi+0x14]
  4262c0:	call   0x42453a
  4262c5:	push   DWORD PTR [esi+0x18]
  4262c8:	call   0x42453a
  4262cd:	push   DWORD PTR [esi]
  4262cf:	call   0x42453a
  4262d4:	push   DWORD PTR [esi+0x20]
  4262d7:	call   0x42453a
  4262dc:	push   DWORD PTR [esi+0x24]
  4262df:	call   0x42453a
  4262e4:	push   DWORD PTR [esi+0x28]
  4262e7:	call   0x42453a
  4262ec:	push   DWORD PTR [esi+0x2c]
  4262ef:	call   0x42453a
  4262f4:	push   DWORD PTR [esi+0x30]
  4262f7:	call   0x42453a
  4262fc:	push   DWORD PTR [esi+0x34]
  4262ff:	call   0x42453a
  426304:	push   DWORD PTR [esi+0x1c]
  426307:	call   0x42453a
  42630c:	push   DWORD PTR [esi+0x38]
  42630f:	call   0x42453a
  426314:	push   DWORD PTR [esi+0x3c]
  426317:	call   0x42453a
  42631c:	add    esp,0x40
  42631f:	push   DWORD PTR [esi+0x40]
  426322:	call   0x42453a
  426327:	push   DWORD PTR [esi+0x44]
  42632a:	call   0x42453a
  42632f:	push   DWORD PTR [esi+0x48]
  426332:	call   0x42453a
  426337:	push   DWORD PTR [esi+0x4c]
  42633a:	call   0x42453a
  42633f:	push   DWORD PTR [esi+0x50]
  426342:	call   0x42453a
  426347:	push   DWORD PTR [esi+0x54]
  42634a:	call   0x42453a
  42634f:	push   DWORD PTR [esi+0x58]
  426352:	call   0x42453a
  426357:	push   DWORD PTR [esi+0x5c]
  42635a:	call   0x42453a
  42635f:	push   DWORD PTR [esi+0x60]
  426362:	call   0x42453a
  426367:	push   DWORD PTR [esi+0x64]
  42636a:	call   0x42453a
  42636f:	push   DWORD PTR [esi+0x68]
  426372:	call   0x42453a
  426377:	push   DWORD PTR [esi+0x6c]
  42637a:	call   0x42453a
  42637f:	push   DWORD PTR [esi+0x70]
  426382:	call   0x42453a
  426387:	push   DWORD PTR [esi+0x74]
  42638a:	call   0x42453a
  42638f:	push   DWORD PTR [esi+0x78]
  426392:	call   0x42453a
  426397:	push   DWORD PTR [esi+0x7c]
  42639a:	call   0x42453a
  42639f:	add    esp,0x40
  4263a2:	push   DWORD PTR [esi+0x80]
  4263a8:	call   0x42453a
  4263ad:	push   DWORD PTR [esi+0x84]
  4263b3:	call   0x42453a
  4263b8:	push   DWORD PTR [esi+0x88]
  4263be:	call   0x42453a
  4263c3:	push   DWORD PTR [esi+0x8c]
  4263c9:	call   0x42453a
  4263ce:	push   DWORD PTR [esi+0x90]
  4263d4:	call   0x42453a
  4263d9:	push   DWORD PTR [esi+0x94]
  4263df:	call   0x42453a
  4263e4:	push   DWORD PTR [esi+0x98]
  4263ea:	call   0x42453a
  4263ef:	push   DWORD PTR [esi+0x9c]
  4263f5:	call   0x42453a
  4263fa:	push   DWORD PTR [esi+0xa0]
  426400:	call   0x42453a
  426405:	push   DWORD PTR [esi+0xa4]
  42640b:	call   0x42453a
  426410:	push   DWORD PTR [esi+0xa8]
  426416:	call   0x42453a
  42641b:	add    esp,0x2c
  42641e:	pop    esi
  42641f:	ret    
  426420:	push   esi
  426421:	mov    esi,DWORD PTR [esp+0x8]
  426425:	test   esi,esi
  426427:	je     0x42647d
  426429:	mov    eax,DWORD PTR [esi]
  42642b:	mov    ecx,DWORD PTR ds:0x462b04
  426431:	cmp    eax,DWORD PTR [ecx]
  426433:	je     0x426444
  426435:	cmp    eax,DWORD PTR ds:0x462ad4
  42643b:	je     0x426444
  42643d:	push   eax
  42643e:	call   0x42453a
  426443:	pop    ecx
  426444:	mov    eax,DWORD PTR [esi+0x4]
  426447:	mov    ecx,DWORD PTR ds:0x462b04
  42644d:	cmp    eax,DWORD PTR [ecx+0x4]
  426450:	je     0x426461
  426452:	cmp    eax,DWORD PTR ds:0x462ad8
  426458:	je     0x426461
  42645a:	push   eax
  42645b:	call   0x42453a
  426460:	pop    ecx
  426461:	mov    esi,DWORD PTR [esi+0x8]
  426464:	mov    eax,ds:0x462b04
  426469:	cmp    esi,DWORD PTR [eax+0x8]
  42646c:	je     0x42647d
  42646e:	cmp    esi,DWORD PTR ds:0x462adc
  426474:	je     0x42647d
  426476:	push   esi
  426477:	call   0x42453a
  42647c:	pop    ecx
  42647d:	pop    esi
  42647e:	ret    
  42647f:	push   esi
  426480:	mov    esi,DWORD PTR [esp+0x8]
  426484:	test   esi,esi
  426486:	je     0x426556
  42648c:	mov    eax,DWORD PTR [esi+0xc]
  42648f:	mov    ecx,DWORD PTR ds:0x462b04
  426495:	cmp    eax,DWORD PTR [ecx+0xc]
  426498:	je     0x4264a9
  42649a:	cmp    eax,DWORD PTR ds:0x462ae0
  4264a0:	je     0x4264a9
  4264a2:	push   eax
  4264a3:	call   0x42453a
  4264a8:	pop    ecx
  4264a9:	mov    eax,DWORD PTR [esi+0x10]
  4264ac:	mov    ecx,DWORD PTR ds:0x462b04
  4264b2:	cmp    eax,DWORD PTR [ecx+0x10]
  4264b5:	je     0x4264c6
  4264b7:	cmp    eax,DWORD PTR ds:0x462ae4
  4264bd:	je     0x4264c6
  4264bf:	push   eax
  4264c0:	call   0x42453a
  4264c5:	pop    ecx
  4264c6:	mov    eax,DWORD PTR [esi+0x14]
  4264c9:	mov    ecx,DWORD PTR ds:0x462b04
  4264cf:	cmp    eax,DWORD PTR [ecx+0x14]
  4264d2:	je     0x4264e3
  4264d4:	cmp    eax,DWORD PTR ds:0x462ae8
  4264da:	je     0x4264e3
  4264dc:	push   eax
  4264dd:	call   0x42453a
  4264e2:	pop    ecx
  4264e3:	mov    eax,DWORD PTR [esi+0x18]
  4264e6:	mov    ecx,DWORD PTR ds:0x462b04
  4264ec:	cmp    eax,DWORD PTR [ecx+0x18]
  4264ef:	je     0x426500
  4264f1:	cmp    eax,DWORD PTR ds:0x462aec
  4264f7:	je     0x426500
  4264f9:	push   eax
  4264fa:	call   0x42453a
  4264ff:	pop    ecx
  426500:	mov    eax,DWORD PTR [esi+0x1c]
  426503:	mov    ecx,DWORD PTR ds:0x462b04
  426509:	cmp    eax,DWORD PTR [ecx+0x1c]
  42650c:	je     0x42651d
  42650e:	cmp    eax,DWORD PTR ds:0x462af0
  426514:	je     0x42651d
  426516:	push   eax
  426517:	call   0x42453a
  42651c:	pop    ecx
  42651d:	mov    eax,DWORD PTR [esi+0x20]
  426520:	mov    ecx,DWORD PTR ds:0x462b04
  426526:	cmp    eax,DWORD PTR [ecx+0x20]
  426529:	je     0x42653a
  42652b:	cmp    eax,DWORD PTR ds:0x462af4
  426531:	je     0x42653a
  426533:	push   eax
  426534:	call   0x42453a
  426539:	pop    ecx
  42653a:	mov    esi,DWORD PTR [esi+0x24]
  42653d:	mov    eax,ds:0x462b04
  426542:	cmp    esi,DWORD PTR [eax+0x24]
  426545:	je     0x426556
  426547:	cmp    esi,DWORD PTR ds:0x462af8
  42654d:	je     0x426556
  42654f:	push   esi
  426550:	call   0x42453a
  426555:	pop    ecx
  426556:	pop    esi
  426557:	ret    
  426558:	int3   
  426559:	int3   
  42655a:	int3   
  42655b:	int3   
  42655c:	int3   
  42655d:	int3   
  42655e:	int3   
  42655f:	int3   
  426560:	push   ebp
  426561:	mov    ebp,esp
  426563:	push   esi
  426564:	xor    eax,eax
  426566:	push   eax
  426567:	push   eax
  426568:	push   eax
  426569:	push   eax
  42656a:	push   eax
  42656b:	push   eax
  42656c:	push   eax
  42656d:	push   eax
  42656e:	mov    edx,DWORD PTR [ebp+0xc]
  426571:	lea    ecx,[ecx+0x0]
  426574:	mov    al,BYTE PTR [edx]
  426576:	or     al,al
  426578:	je     0x426583
  42657a:	add    edx,0x1
  42657d:	bts    DWORD PTR [esp],eax
  426581:	jmp    0x426574
  426583:	mov    esi,DWORD PTR [ebp+0x8]
  426586:	or     ecx,0xffffffff
  426589:	lea    ecx,[ecx+0x0]
  42658c:	add    ecx,0x1
  42658f:	mov    al,BYTE PTR [esi]
  426591:	or     al,al
  426593:	je     0x42659e
  426595:	add    esi,0x1
  426598:	bt     DWORD PTR [esp],eax
  42659c:	jae    0x42658c
  42659e:	mov    eax,ecx
  4265a0:	add    esp,0x20
  4265a3:	pop    esi
  4265a4:	leave  
  4265a5:	ret    
  4265a6:	int3   
  4265a7:	int3   
  4265a8:	int3   
  4265a9:	int3   
  4265aa:	int3   
  4265ab:	int3   
  4265ac:	int3   
  4265ad:	int3   
  4265ae:	int3   
  4265af:	int3   
  4265b0:	mov    edx,DWORD PTR [esp+0x4]
  4265b4:	mov    ecx,DWORD PTR [esp+0x8]
  4265b8:	test   edx,0x3
  4265be:	jne    0x4265fc
  4265c0:	mov    eax,DWORD PTR [edx]
  4265c2:	cmp    al,BYTE PTR [ecx]
  4265c4:	jne    0x4265f4
  4265c6:	or     al,al
  4265c8:	je     0x4265f0
  4265ca:	cmp    ah,BYTE PTR [ecx+0x1]
  4265cd:	jne    0x4265f4
  4265cf:	or     ah,ah
  4265d1:	je     0x4265f0
  4265d3:	shr    eax,0x10
  4265d6:	cmp    al,BYTE PTR [ecx+0x2]
  4265d9:	jne    0x4265f4
  4265db:	or     al,al
  4265dd:	je     0x4265f0
  4265df:	cmp    ah,BYTE PTR [ecx+0x3]
  4265e2:	jne    0x4265f4
  4265e4:	add    ecx,0x4
  4265e7:	add    edx,0x4
  4265ea:	or     ah,ah
  4265ec:	jne    0x4265c0
  4265ee:	mov    edi,edi
  4265f0:	xor    eax,eax
  4265f2:	ret    
  4265f3:	nop
  4265f4:	sbb    eax,eax
  4265f6:	shl    eax,1
  4265f8:	add    eax,0x1
  4265fb:	ret    
  4265fc:	test   edx,0x1
  426602:	je     0x42661c
  426604:	mov    al,BYTE PTR [edx]
  426606:	add    edx,0x1
  426609:	cmp    al,BYTE PTR [ecx]
  42660b:	jne    0x4265f4
  42660d:	add    ecx,0x1
  426610:	or     al,al
  426612:	je     0x4265f0
  426614:	test   edx,0x2
  42661a:	je     0x4265c0
  42661c:	mov    ax,WORD PTR [edx]
  42661f:	add    edx,0x2
  426622:	cmp    al,BYTE PTR [ecx]
  426624:	jne    0x4265f4
  426626:	or     al,al
  426628:	je     0x4265f0
  42662a:	cmp    ah,BYTE PTR [ecx+0x1]
  42662d:	jne    0x4265f4
  42662f:	or     ah,ah
  426631:	je     0x4265f0
  426633:	add    ecx,0x2
  426636:	jmp    0x4265c0
  426638:	int3   
  426639:	int3   
  42663a:	int3   
  42663b:	int3   
  42663c:	int3   
  42663d:	int3   
  42663e:	int3   
  42663f:	int3   
  426640:	mov    eax,DWORD PTR [esp+0xc]
  426644:	test   eax,eax
  426646:	je     0x426692
  426648:	mov    edx,DWORD PTR [esp+0x4]
  42664c:	push   esi
  42664d:	push   edi
  42664e:	mov    esi,edx
  426650:	mov    edi,DWORD PTR [esp+0x10]
  426654:	or     edx,edi
  426656:	and    edx,0x3
  426659:	je     0x426693
  42665b:	test   eax,0x1
  426660:	je     0x426673
  426662:	mov    cl,BYTE PTR [esi]
  426664:	cmp    cl,BYTE PTR [edi]
  426666:	jne    0x4266c0
  426668:	add    esi,0x1
  42666b:	add    edi,0x1
  42666e:	sub    eax,0x1
  426671:	je     0x426690
  426673:	mov    cl,BYTE PTR [esi]
  426675:	mov    dl,BYTE PTR [edi]
  426677:	cmp    cl,dl
  426679:	jne    0x4266c0
  42667b:	mov    cl,BYTE PTR [esi+0x1]
  42667e:	mov    dl,BYTE PTR [edi+0x1]
  426681:	cmp    cl,dl
  426683:	jne    0x4266c0
  426685:	add    edi,0x2
  426688:	add    esi,0x2
  42668b:	sub    eax,0x2
  42668e:	jne    0x426673
  426690:	pop    edi
  426691:	pop    esi
  426692:	ret    
  426693:	mov    ecx,eax
  426695:	and    eax,0x3
  426698:	shr    ecx,0x2
  42669b:	je     0x4266c8
  42669d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42669f:	je     0x4266c8
  4266a1:	mov    ecx,DWORD PTR [esi-0x4]
  4266a4:	mov    edx,DWORD PTR [edi-0x4]
  4266a7:	cmp    cl,dl
  4266a9:	jne    0x4266bb
  4266ab:	cmp    ch,dh
  4266ad:	jne    0x4266bb
  4266af:	shr    ecx,0x10
  4266b2:	shr    edx,0x10
  4266b5:	cmp    cl,dl
  4266b7:	jne    0x4266bb
  4266b9:	cmp    ch,dh
  4266bb:	mov    eax,0x0
  4266c0:	sbb    eax,eax
  4266c2:	pop    edi
  4266c3:	sbb    eax,0xffffffff
  4266c6:	pop    esi
  4266c7:	ret    
  4266c8:	test   eax,eax
  4266ca:	je     0x426690
  4266cc:	mov    edx,DWORD PTR [esi]
  4266ce:	mov    ecx,DWORD PTR [edi]
  4266d0:	cmp    dl,cl
  4266d2:	jne    0x4266bb
  4266d4:	sub    eax,0x1
  4266d7:	je     0x4266f5
  4266d9:	cmp    dh,ch
  4266db:	jne    0x4266bb
  4266dd:	sub    eax,0x1
  4266e0:	je     0x4266f5
  4266e2:	and    ecx,0xff0000
  4266e8:	and    edx,0xff0000
  4266ee:	cmp    edx,ecx
  4266f0:	jne    0x4266bb
  4266f2:	sub    eax,0x1
  4266f5:	pop    edi
  4266f6:	pop    esi
  4266f7:	ret    
  4266f8:	int3   
  4266f9:	int3   
  4266fa:	int3   
  4266fb:	int3   
  4266fc:	int3   
  4266fd:	int3   
  4266fe:	int3   
  4266ff:	int3   
  426700:	push   ebp
  426701:	mov    ebp,esp
  426703:	push   edi
  426704:	push   esi
  426705:	push   ebx
  426706:	mov    ecx,DWORD PTR [ebp+0x10]
  426709:	jecxz  0x426732
  42670b:	mov    ebx,ecx
  42670d:	mov    edi,DWORD PTR [ebp+0x8]
  426710:	mov    esi,edi
  426712:	xor    eax,eax
  426714:	repnz scas al,BYTE PTR es:[edi]
  426716:	neg    ecx
  426718:	add    ecx,ebx
  42671a:	mov    edi,esi
  42671c:	mov    esi,DWORD PTR [ebp+0xc]
  42671f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426721:	mov    al,BYTE PTR [esi-0x1]
  426724:	xor    ecx,ecx
  426726:	cmp    al,BYTE PTR [edi-0x1]
  426729:	ja     0x426730
  42672b:	je     0x426732
  42672d:	sub    ecx,0x2
  426730:	not    ecx
  426732:	mov    eax,ecx
  426734:	pop    ebx
  426735:	pop    esi
  426736:	pop    edi
  426737:	leave  
  426738:	ret    
  426739:	int3   
  42673a:	int3   
  42673b:	int3   
  42673c:	int3   
  42673d:	int3   
  42673e:	int3   
  42673f:	int3   
  426740:	push   ebp
  426741:	mov    ebp,esp
  426743:	push   esi
  426744:	xor    eax,eax
  426746:	push   eax
  426747:	push   eax
  426748:	push   eax
  426749:	push   eax
  42674a:	push   eax
  42674b:	push   eax
  42674c:	push   eax
  42674d:	push   eax
  42674e:	mov    edx,DWORD PTR [ebp+0xc]
  426751:	lea    ecx,[ecx+0x0]
  426754:	mov    al,BYTE PTR [edx]
  426756:	or     al,al
  426758:	je     0x426763
  42675a:	add    edx,0x1
  42675d:	bts    DWORD PTR [esp],eax
  426761:	jmp    0x426754
  426763:	mov    esi,DWORD PTR [ebp+0x8]
  426766:	mov    edi,edi
  426768:	mov    al,BYTE PTR [esi]
  42676a:	or     al,al
  42676c:	je     0x42677a
  42676e:	add    esi,0x1
  426771:	bt     DWORD PTR [esp],eax
  426775:	jae    0x426768
  426777:	lea    eax,[esi-0x1]
  42677a:	add    esp,0x20
  42677d:	pop    esi
  42677e:	leave  
  42677f:	ret    
  426780:	push   ebp
  426781:	mov    ebp,esp
  426783:	push   ebx
  426784:	push   esi
  426785:	push   edi
  426786:	push   ebp
  426787:	push   0x0
  426789:	push   0x0
  42678b:	push   0x426798
  426790:	push   DWORD PTR [ebp+0x8]
  426793:	call   0x42720e
  426798:	pop    ebp
  426799:	pop    edi
  42679a:	pop    esi
  42679b:	pop    ebx
  42679c:	mov    esp,ebp
  42679e:	pop    ebp
  42679f:	ret    
  4267a0:	mov    ecx,DWORD PTR [esp+0x4]
  4267a4:	test   DWORD PTR [ecx+0x4],0x6
  4267ab:	mov    eax,0x1
  4267b0:	je     0x4267c1
  4267b2:	mov    eax,DWORD PTR [esp+0x8]
  4267b6:	mov    edx,DWORD PTR [esp+0x10]
  4267ba:	mov    DWORD PTR [edx],eax
  4267bc:	mov    eax,0x3
  4267c1:	ret    
  4267c2:	push   ebx
  4267c3:	push   esi
  4267c4:	push   edi
  4267c5:	mov    eax,DWORD PTR [esp+0x10]
  4267c9:	push   eax
  4267ca:	push   0xfffffffe
  4267cc:	push   0x4267a0
  4267d1:	push   DWORD PTR fs:0x0
  4267d8:	mov    DWORD PTR fs:0x0,esp
  4267df:	mov    eax,DWORD PTR [esp+0x20]
  4267e3:	mov    ebx,DWORD PTR [eax+0x8]
  4267e6:	mov    esi,DWORD PTR [eax+0xc]
  4267e9:	cmp    esi,0xffffffff
  4267ec:	je     0x42681c
  4267ee:	cmp    esi,DWORD PTR [esp+0x24]
  4267f2:	je     0x42681c
  4267f4:	lea    esi,[esi+esi*2]
  4267f7:	mov    ecx,DWORD PTR [ebx+esi*4]
  4267fa:	mov    DWORD PTR [esp+0x8],ecx
  4267fe:	mov    DWORD PTR [eax+0xc],ecx
  426801:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426806:	jne    0x42681a
  426808:	push   0x101
  42680d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426811:	call   0x426856
  426816:	call   DWORD PTR [ebx+esi*4+0x8]
  42681a:	jmp    0x4267df
  42681c:	pop    DWORD PTR fs:0x0
  426823:	add    esp,0xc
  426826:	pop    edi
  426827:	pop    esi
  426828:	pop    ebx
  426829:	ret    
  42682a:	xor    eax,eax
  42682c:	mov    ecx,DWORD PTR fs:0x0
  426833:	cmp    DWORD PTR [ecx+0x4],0x4267a0
  42683a:	jne    0x42684c
  42683c:	mov    edx,DWORD PTR [ecx+0xc]
  42683f:	mov    edx,DWORD PTR [edx+0xc]
  426842:	cmp    DWORD PTR [ecx+0x8],edx
  426845:	jne    0x42684c
  426847:	mov    eax,0x1
  42684c:	ret    
  42684d:	push   ebx
  42684e:	push   ecx
  42684f:	mov    ebx,0x462b1c
  426854:	jmp    0x426860
  426856:	push   ebx
  426857:	push   ecx
  426858:	mov    ebx,0x462b1c
  42685d:	mov    ecx,DWORD PTR [ebp+0x8]
  426860:	mov    DWORD PTR [ebx+0x8],ecx
  426863:	mov    DWORD PTR [ebx+0x4],eax
  426866:	mov    DWORD PTR [ebx+0xc],ebp
  426869:	pop    ecx
  42686a:	pop    ebx
  42686b:	ret    0x4
  42686e:	int3   
  42686f:	int3   
  426870:	push   ebp
  426871:	mov    ebp,esp
  426873:	push   edi
  426874:	push   esi
  426875:	mov    esi,DWORD PTR [ebp+0xc]
  426878:	mov    ecx,DWORD PTR [ebp+0x10]
  42687b:	mov    edi,DWORD PTR [ebp+0x8]
  42687e:	mov    eax,ecx
  426880:	mov    edx,ecx
  426882:	add    eax,esi
  426884:	cmp    edi,esi
  426886:	jbe    0x426890
  426888:	cmp    edi,eax
  42688a:	jb     0x426a0c
  426890:	test   edi,0x3
  426896:	jne    0x4268ac
  426898:	shr    ecx,0x2
  42689b:	and    edx,0x3
  42689e:	cmp    ecx,0x8
  4268a1:	jb     0x4268cc
  4268a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268a5:	jmp    DWORD PTR [edx*4+0x4269bc]
  4268ac:	mov    eax,edi
  4268ae:	mov    edx,0x3
  4268b3:	sub    ecx,0x4
  4268b6:	jb     0x4268c4
  4268b8:	and    eax,0x3
  4268bb:	add    ecx,eax
  4268bd:	jmp    DWORD PTR [eax*4+0x4268d0]
  4268c4:	jmp    DWORD PTR [ecx*4+0x4269cc]
  4268cb:	nop
  4268cc:	jmp    DWORD PTR [ecx*4+0x426950]
  4268d3:	nop
  4268d4:	loopne 0x42693e
  4268d6:	inc    edx
  4268d7:	add    BYTE PTR [ecx+ebp*2],cl
  4268da:	inc    edx
  4268db:	add    BYTE PTR [eax],dh
  4268dd:	imul   eax,DWORD PTR [edx+0x0],0x68ad123
  4268e4:	mov    BYTE PTR [edi],al
  4268e6:	mov    al,BYTE PTR [esi+0x1]
  4268e9:	mov    BYTE PTR [edi+0x1],al
  4268ec:	mov    al,BYTE PTR [esi+0x2]
  4268ef:	shr    ecx,0x2
  4268f2:	mov    BYTE PTR [edi+0x2],al
  4268f5:	add    esi,0x3
  4268f8:	add    edi,0x3
  4268fb:	cmp    ecx,0x8
  4268fe:	jb     0x4268cc
  426900:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426902:	jmp    DWORD PTR [edx*4+0x4269bc]
  426909:	lea    ecx,[ecx+0x0]
  42690c:	and    edx,ecx
  42690e:	mov    al,BYTE PTR [esi]
  426910:	mov    BYTE PTR [edi],al
  426912:	mov    al,BYTE PTR [esi+0x1]
  426915:	shr    ecx,0x2
  426918:	mov    BYTE PTR [edi+0x1],al
  42691b:	add    esi,0x2
  42691e:	add    edi,0x2
  426921:	cmp    ecx,0x8
  426924:	jb     0x4268cc
  426926:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426928:	jmp    DWORD PTR [edx*4+0x4269bc]
  42692f:	nop
  426930:	and    edx,ecx
  426932:	mov    al,BYTE PTR [esi]
  426934:	mov    BYTE PTR [edi],al
  426936:	add    esi,0x1
  426939:	shr    ecx,0x2
  42693c:	add    edi,0x1
  42693f:	cmp    ecx,0x8
  426942:	jb     0x4268cc
  426944:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426946:	jmp    DWORD PTR [edx*4+0x4269bc]
  42694d:	lea    ecx,[ecx+0x0]
  426950:	mov    bl,0x69
  426952:	inc    edx
  426953:	add    BYTE PTR [eax-0x67ffbd97],ah
  426959:	imul   eax,DWORD PTR [edx+0x0],0x426990
  426960:	mov    BYTE PTR [ecx+0x42],ch
  426963:	add    BYTE PTR [eax+0x78004269],al
  426969:	imul   eax,DWORD PTR [edx+0x0],0x426970
  426970:	mov    eax,DWORD PTR [esi+ecx*4-0x1c]
  426974:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  426978:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  42697c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426980:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426984:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426988:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42698c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  426990:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  426994:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  426998:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42699c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4269a0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4269a4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4269a8:	lea    eax,[ecx*4+0x0]
  4269af:	add    esi,eax
  4269b1:	add    edi,eax
  4269b3:	jmp    DWORD PTR [edx*4+0x4269bc]
  4269ba:	mov    edi,edi
  4269bc:	int3   
  4269bd:	imul   eax,DWORD PTR [edx+0x0],0x4269d4
  4269c4:	loopne 0x426a2f
  4269c6:	inc    edx
  4269c7:	add    ah,dh
  4269c9:	imul   eax,DWORD PTR [edx+0x0],0x5e08458b
  4269d0:	pop    edi
  4269d1:	leave  
  4269d2:	ret    
  4269d3:	nop
  4269d4:	mov    al,BYTE PTR [esi]
  4269d6:	mov    BYTE PTR [edi],al
  4269d8:	mov    eax,DWORD PTR [ebp+0x8]
  4269db:	pop    esi
  4269dc:	pop    edi
  4269dd:	leave  
  4269de:	ret    
  4269df:	nop
  4269e0:	mov    al,BYTE PTR [esi]
  4269e2:	mov    BYTE PTR [edi],al
  4269e4:	mov    al,BYTE PTR [esi+0x1]
  4269e7:	mov    BYTE PTR [edi+0x1],al
  4269ea:	mov    eax,DWORD PTR [ebp+0x8]
  4269ed:	pop    esi
  4269ee:	pop    edi
  4269ef:	leave  
  4269f0:	ret    
  4269f1:	lea    ecx,[ecx+0x0]
  4269f4:	mov    al,BYTE PTR [esi]
  4269f6:	mov    BYTE PTR [edi],al
  4269f8:	mov    al,BYTE PTR [esi+0x1]
  4269fb:	mov    BYTE PTR [edi+0x1],al
  4269fe:	mov    al,BYTE PTR [esi+0x2]
  426a01:	mov    BYTE PTR [edi+0x2],al
  426a04:	mov    eax,DWORD PTR [ebp+0x8]
  426a07:	pop    esi
  426a08:	pop    edi
  426a09:	leave  
  426a0a:	ret    
  426a0b:	nop
  426a0c:	lea    esi,[ecx+esi*1-0x4]
  426a10:	lea    edi,[ecx+edi*1-0x4]
  426a14:	test   edi,0x3
  426a1a:	jne    0x426a40
  426a1c:	shr    ecx,0x2
  426a1f:	and    edx,0x3
  426a22:	cmp    ecx,0x8
  426a25:	jb     0x426a34
  426a27:	std    
  426a28:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a2a:	cld    
  426a2b:	jmp    DWORD PTR [edx*4+0x426b58]
  426a32:	mov    edi,edi
  426a34:	neg    ecx
  426a36:	jmp    DWORD PTR [ecx*4+0x426b08]
  426a3d:	lea    ecx,[ecx+0x0]
  426a40:	mov    eax,edi
  426a42:	mov    edx,0x3
  426a47:	cmp    ecx,0x4
  426a4a:	jb     0x426a58
  426a4c:	and    eax,0x3
  426a4f:	sub    ecx,eax
  426a51:	jmp    DWORD PTR [eax*4+0x426a5c]
  426a58:	jmp    DWORD PTR [ecx*4+0x426b58]
  426a5f:	nop
  426a60:	ins    BYTE PTR es:[edi],dx
  426a61:	push   0x42
  426a63:	add    BYTE PTR [eax-0x47ffbd96],dl
  426a69:	push   0x42
  426a6b:	add    BYTE PTR [edx-0x2edcfcba],cl
  426a71:	mov    BYTE PTR [edi+0x3],al
  426a74:	sub    esi,0x1
  426a77:	shr    ecx,0x2
  426a7a:	sub    edi,0x1
  426a7d:	cmp    ecx,0x8
  426a80:	jb     0x426a34
  426a82:	std    
  426a83:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a85:	cld    
  426a86:	jmp    DWORD PTR [edx*4+0x426b58]
  426a8d:	lea    ecx,[ecx+0x0]
  426a90:	mov    al,BYTE PTR [esi+0x3]
  426a93:	and    edx,ecx
  426a95:	mov    BYTE PTR [edi+0x3],al
  426a98:	mov    al,BYTE PTR [esi+0x2]
  426a9b:	shr    ecx,0x2
  426a9e:	mov    BYTE PTR [edi+0x2],al
  426aa1:	sub    esi,0x2
  426aa4:	sub    edi,0x2
  426aa7:	cmp    ecx,0x8
  426aaa:	jb     0x426a34
  426aac:	std    
  426aad:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426aaf:	cld    
  426ab0:	jmp    DWORD PTR [edx*4+0x426b58]
  426ab7:	nop
  426ab8:	mov    al,BYTE PTR [esi+0x3]
  426abb:	and    edx,ecx
  426abd:	mov    BYTE PTR [edi+0x3],al
  426ac0:	mov    al,BYTE PTR [esi+0x2]
  426ac3:	mov    BYTE PTR [edi+0x2],al
  426ac6:	mov    al,BYTE PTR [esi+0x1]
  426ac9:	shr    ecx,0x2
  426acc:	mov    BYTE PTR [edi+0x1],al
  426acf:	sub    esi,0x3
  426ad2:	sub    edi,0x3
  426ad5:	cmp    ecx,0x8
  426ad8:	jb     0x426a34
  426ade:	std    
  426adf:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426ae1:	cld    
  426ae2:	jmp    DWORD PTR [edx*4+0x426b58]
  426ae9:	lea    ecx,[ecx+0x0]
  426aec:	or     al,0x6b
  426aee:	inc    edx
  426aef:	add    BYTE PTR [ebx+ebp*2],dl
  426af2:	inc    edx
  426af3:	add    BYTE PTR [ebx+ebp*2],bl
  426af6:	inc    edx
  426af7:	add    BYTE PTR [ebx+ebp*2],ah
  426afa:	inc    edx
  426afb:	add    BYTE PTR [ebx+ebp*2],ch
  426afe:	inc    edx
  426aff:	add    BYTE PTR [ebx+ebp*2],dh
  426b02:	inc    edx
  426b03:	add    BYTE PTR [ebx+ebp*2],bh
  426b06:	inc    edx
  426b07:	add    BYTE PTR [edi+0x6b],cl
  426b0a:	inc    edx
  426b0b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426b11:	inc    esp
  426b12:	(bad)  
  426b13:	sbb    al,0x8b
  426b15:	inc    esp
  426b16:	mov    ds,WORD PTR [eax]
  426b18:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426b1c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426b20:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426b24:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426b28:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426b2c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426b30:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426b34:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426b38:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426b3c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426b40:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426b44:	lea    eax,[ecx*4+0x0]
  426b4b:	add    esi,eax
  426b4d:	add    edi,eax
  426b4f:	jmp    DWORD PTR [edx*4+0x426b58]
  426b56:	mov    edi,edi
  426b58:	push   0x7000426b
  426b5d:	imul   eax,DWORD PTR [edx+0x0],0xffffff80
  426b61:	imul   eax,DWORD PTR [edx+0x0],0xffffff94
  426b65:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426b69:	inc    ebp
  426b6a:	or     BYTE PTR [esi+0x5f],bl
  426b6d:	leave  
  426b6e:	ret    
  426b6f:	nop
  426b70:	mov    al,BYTE PTR [esi+0x3]
  426b73:	mov    BYTE PTR [edi+0x3],al
  426b76:	mov    eax,DWORD PTR [ebp+0x8]
  426b79:	pop    esi
  426b7a:	pop    edi
  426b7b:	leave  
  426b7c:	ret    
  426b7d:	lea    ecx,[ecx+0x0]
  426b80:	mov    al,BYTE PTR [esi+0x3]
  426b83:	mov    BYTE PTR [edi+0x3],al
  426b86:	mov    al,BYTE PTR [esi+0x2]
  426b89:	mov    BYTE PTR [edi+0x2],al
  426b8c:	mov    eax,DWORD PTR [ebp+0x8]
  426b8f:	pop    esi
  426b90:	pop    edi
  426b91:	leave  
  426b92:	ret    
  426b93:	nop
  426b94:	mov    al,BYTE PTR [esi+0x3]
  426b97:	mov    BYTE PTR [edi+0x3],al
  426b9a:	mov    al,BYTE PTR [esi+0x2]
  426b9d:	mov    BYTE PTR [edi+0x2],al
  426ba0:	mov    al,BYTE PTR [esi+0x1]
  426ba3:	mov    BYTE PTR [edi+0x1],al
  426ba6:	mov    eax,DWORD PTR [ebp+0x8]
  426ba9:	pop    esi
  426baa:	pop    edi
  426bab:	leave  
  426bac:	ret    
  426bad:	push   ebp
  426bae:	mov    ebp,esp
  426bb0:	sub    esp,0xc
  426bb3:	mov    eax,ds:0x462600
  426bb8:	xor    eax,DWORD PTR [ebp+0x4]
  426bbb:	and    BYTE PTR [ebp-0x6],0x0
  426bbf:	push   0x6
  426bc1:	mov    DWORD PTR [ebp-0x4],eax
  426bc4:	lea    eax,[ebp-0xc]
  426bc7:	push   eax
  426bc8:	push   0x1004
  426bcd:	push   DWORD PTR [ebp+0x8]
  426bd0:	call   DWORD PTR ds:0x428118
  426bd6:	test   eax,eax
  426bd8:	jne    0x426bdf
  426bda:	or     eax,0xffffffff
  426bdd:	jmp    0x426be9
  426bdf:	lea    eax,[ebp-0xc]
  426be2:	push   eax
  426be3:	call   0x426eee
  426be8:	pop    ecx
  426be9:	mov    ecx,DWORD PTR [ebp-0x4]
  426bec:	xor    ecx,DWORD PTR [ebp+0x4]
  426bef:	call   0x423ffc
  426bf4:	leave  
  426bf5:	ret    
  426bf6:	push   0x38
  426bf8:	push   0x428ef8
  426bfd:	call   0x423934
  426c02:	mov    eax,ds:0x462600
  426c07:	xor    eax,DWORD PTR [ebp+0x4]
  426c0a:	mov    DWORD PTR [ebp-0x1c],eax
  426c0d:	xor    edi,edi
  426c0f:	mov    DWORD PTR [ebp-0x20],edi
  426c12:	mov    DWORD PTR [ebp-0x24],edi
  426c15:	mov    eax,DWORD PTR [ebp+0x14]
  426c18:	mov    ebx,DWORD PTR [eax]
  426c1a:	mov    DWORD PTR [ebp-0x28],ebx
  426c1d:	mov    DWORD PTR [ebp-0x2c],edi
  426c20:	mov    eax,DWORD PTR [ebp+0x8]
  426c23:	cmp    eax,DWORD PTR [ebp+0xc]
  426c26:	je     0x426d9f
  426c2c:	lea    ecx,[ebp-0x40]
  426c2f:	push   ecx
  426c30:	push   eax
  426c31:	mov    esi,DWORD PTR ds:0x4280dc
  426c37:	call   esi
  426c39:	test   eax,eax
  426c3b:	je     0x426c5d
  426c3d:	cmp    DWORD PTR [ebp-0x40],0x1
  426c41:	jne    0x426c5d
  426c43:	lea    eax,[ebp-0x40]
  426c46:	push   eax
  426c47:	push   DWORD PTR [ebp+0xc]
  426c4a:	call   esi
  426c4c:	test   eax,eax
  426c4e:	je     0x426c5d
  426c50:	cmp    DWORD PTR [ebp-0x40],0x1
  426c54:	jne    0x426c5d
  426c56:	mov    DWORD PTR [ebp-0x2c],0x1
  426c5d:	cmp    DWORD PTR [ebp-0x2c],edi
  426c60:	je     0x426c7c
  426c62:	cmp    ebx,0xffffffff
  426c65:	je     0x426c6b
  426c67:	mov    esi,ebx
  426c69:	jmp    0x426c77
  426c6b:	push   DWORD PTR [ebp+0x10]
  426c6e:	call   0x423f40
  426c73:	pop    ecx
  426c74:	mov    esi,eax
  426c76:	inc    esi
  426c77:	mov    DWORD PTR [ebp-0x44],esi
  426c7a:	jmp    0x426c7f
  426c7c:	mov    esi,DWORD PTR [ebp-0x44]
  426c7f:	cmp    DWORD PTR [ebp-0x2c],edi
  426c82:	jne    0x426c9e
  426c84:	push   edi
  426c85:	push   edi
  426c86:	push   ebx
  426c87:	push   DWORD PTR [ebp+0x10]
  426c8a:	push   0x1
  426c8c:	push   DWORD PTR [ebp+0x8]
  426c8f:	call   DWORD PTR ds:0x428108
  426c95:	mov    esi,eax
  426c97:	mov    DWORD PTR [ebp-0x44],esi
  426c9a:	cmp    esi,edi
  426c9c:	je     0x426cf6
  426c9e:	mov    DWORD PTR [ebp-0x4],edi
  426ca1:	lea    eax,[esi+esi*1]
  426ca4:	add    eax,0x3
  426ca7:	and    eax,0xfffffffc
  426caa:	call   0x423980
  426caf:	mov    DWORD PTR [ebp-0x18],esp
  426cb2:	mov    ebx,esp
  426cb4:	mov    DWORD PTR [ebp-0x48],ebx
  426cb7:	lea    eax,[esi+esi*1]
  426cba:	push   eax
  426cbb:	push   edi
  426cbc:	push   ebx
  426cbd:	call   0x426230
  426cc2:	add    esp,0xc
  426cc5:	or     DWORD PTR [ebp-0x4],0xffffffff
  426cc9:	jmp    0x426ce2
  426ccb:	xor    eax,eax
  426ccd:	inc    eax
  426cce:	ret    
  426ccf:	mov    esp,DWORD PTR [ebp-0x18]
  426cd2:	call   0x426dc5
  426cd7:	xor    edi,edi
  426cd9:	xor    ebx,ebx
  426cdb:	or     DWORD PTR [ebp-0x4],0xffffffff
  426cdf:	mov    esi,DWORD PTR [ebp-0x44]
  426ce2:	cmp    ebx,edi
  426ce4:	jne    0x426d04
  426ce6:	push   esi
  426ce7:	push   0x2
  426ce9:	call   0x424a48
  426cee:	pop    ecx
  426cef:	pop    ecx
  426cf0:	mov    ebx,eax
  426cf2:	cmp    ebx,edi
  426cf4:	jne    0x426cfd
  426cf6:	xor    eax,eax
  426cf8:	jmp    0x426db1
  426cfd:	mov    DWORD PTR [ebp-0x24],0x1
  426d04:	push   esi
  426d05:	push   ebx
  426d06:	push   DWORD PTR [ebp-0x28]
  426d09:	push   DWORD PTR [ebp+0x10]
  426d0c:	push   0x1
  426d0e:	push   DWORD PTR [ebp+0x8]
  426d11:	call   DWORD PTR ds:0x428108
  426d17:	test   eax,eax
  426d19:	je     0x426da2
  426d1f:	cmp    DWORD PTR [ebp+0x18],edi
  426d22:	je     0x426d44
  426d24:	push   edi
  426d25:	push   edi
  426d26:	push   DWORD PTR [ebp+0x1c]
  426d29:	push   DWORD PTR [ebp+0x18]
  426d2c:	push   esi
  426d2d:	push   ebx
  426d2e:	push   edi
  426d2f:	push   DWORD PTR [ebp+0xc]
  426d32:	call   DWORD PTR ds:0x428094
  426d38:	test   eax,eax
  426d3a:	je     0x426da2
  426d3c:	mov    eax,DWORD PTR [ebp+0x18]
  426d3f:	mov    DWORD PTR [ebp-0x20],eax
  426d42:	jmp    0x426da2
  426d44:	cmp    DWORD PTR [ebp-0x2c],edi
  426d47:	jne    0x426d5f
  426d49:	push   edi
  426d4a:	push   edi
  426d4b:	push   edi
  426d4c:	push   edi
  426d4d:	push   esi
  426d4e:	push   ebx
  426d4f:	push   edi
  426d50:	push   DWORD PTR [ebp+0xc]
  426d53:	call   DWORD PTR ds:0x428094
  426d59:	mov    esi,eax
  426d5b:	cmp    esi,edi
  426d5d:	je     0x426da2
  426d5f:	push   esi
  426d60:	push   0x1
  426d62:	call   0x424a48
  426d67:	pop    ecx
  426d68:	pop    ecx
  426d69:	mov    DWORD PTR [ebp-0x20],eax
  426d6c:	cmp    eax,edi
  426d6e:	je     0x426da2
  426d70:	push   edi
  426d71:	push   edi
  426d72:	push   esi
  426d73:	push   eax
  426d74:	push   esi
  426d75:	push   ebx
  426d76:	push   edi
  426d77:	push   DWORD PTR [ebp+0xc]
  426d7a:	call   DWORD PTR ds:0x428094
  426d80:	cmp    eax,edi
  426d82:	jne    0x426d92
  426d84:	push   DWORD PTR [ebp-0x20]
  426d87:	call   0x42453a
  426d8c:	pop    ecx
  426d8d:	mov    DWORD PTR [ebp-0x20],edi
  426d90:	jmp    0x426da2
  426d92:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426d96:	je     0x426da2
  426d98:	mov    ecx,DWORD PTR [ebp+0x14]
  426d9b:	mov    DWORD PTR [ecx],eax
  426d9d:	jmp    0x426da2
  426d9f:	mov    ebx,DWORD PTR [ebp-0x48]
  426da2:	cmp    DWORD PTR [ebp-0x24],edi
  426da5:	je     0x426dae
  426da7:	push   ebx
  426da8:	call   0x42453a
  426dad:	pop    ecx
  426dae:	mov    eax,DWORD PTR [ebp-0x20]
  426db1:	lea    esp,[ebp-0x54]
  426db4:	mov    ecx,DWORD PTR [ebp-0x1c]
  426db7:	xor    ecx,DWORD PTR [ebp+0x4]
  426dba:	call   0x423ffc
  426dbf:	call   0x42396f
  426dc4:	ret    
  426dc5:	push   ebp
  426dc6:	mov    ebp,esp
  426dc8:	sub    esp,0x48
  426dcb:	push   ebx
  426dcc:	push   esi
  426dcd:	push   edi
  426dce:	push   0x4
  426dd0:	pop    eax
  426dd1:	call   0x423980
  426dd6:	mov    ebx,esp
  426dd8:	push   0x1c
  426dda:	lea    eax,[ebp-0x24]
  426ddd:	push   eax
  426dde:	push   ebx
  426ddf:	call   DWORD PTR ds:0x428044
  426de5:	test   eax,eax
  426de7:	je     0x426e5a
  426de9:	mov    edi,DWORD PTR [ebp-0x20]
  426dec:	lea    eax,[ebp-0x48]
  426def:	push   eax
  426df0:	call   DWORD PTR ds:0x428058
  426df6:	mov    eax,DWORD PTR [ebp-0x44]
  426df9:	lea    esi,[eax-0x1]
  426dfc:	not    esi
  426dfe:	and    esi,ebx
  426e00:	sub    esi,eax
  426e02:	mov    DWORD PTR [ebp-0x4],eax
  426e05:	mov    eax,ds:0x462ca4
  426e0a:	mov    ecx,eax
  426e0c:	dec    ecx
  426e0d:	neg    ecx
  426e0f:	sbb    ecx,ecx
  426e11:	and    ecx,0xffff1000
  426e17:	add    ecx,0x11000
  426e1d:	add    ecx,edi
  426e1f:	cmp    esi,ecx
  426e21:	jb     0x426e5a
  426e23:	cmp    eax,0x1
  426e26:	je     0x426e72
  426e28:	mov    ebx,edi
  426e2a:	mov    edi,0x1000
  426e2f:	push   0x1c
  426e31:	lea    eax,[ebp-0x24]
  426e34:	push   eax
  426e35:	push   ebx
  426e36:	call   DWORD PTR ds:0x428044
  426e3c:	test   eax,eax
  426e3e:	je     0x426e5a
  426e40:	add    ebx,DWORD PTR [ebp-0x18]
  426e43:	test   DWORD PTR [ebp-0x14],edi
  426e46:	je     0x426e2f
  426e48:	test   BYTE PTR [ebp-0xf],0x1
  426e4c:	mov    ebx,DWORD PTR [ebp-0x24]
  426e4f:	je     0x426e56
  426e51:	xor    eax,eax
  426e53:	inc    eax
  426e54:	jmp    0x426e8e
  426e56:	cmp    esi,ebx
  426e58:	jae    0x426e5e
  426e5a:	xor    eax,eax
  426e5c:	jmp    0x426e8e
  426e5e:	push   0x4
  426e60:	push   edi
  426e61:	push   DWORD PTR [ebp-0x4]
  426e64:	push   ebx
  426e65:	call   DWORD PTR ds:0x4280e8
  426e6b:	mov    eax,ds:0x462ca4
  426e70:	jmp    0x426e74
  426e72:	mov    ebx,esi
  426e74:	dec    eax
  426e75:	neg    eax
  426e77:	sbb    eax,eax
  426e79:	and    eax,0x103
  426e7e:	lea    ecx,[ebp-0x8]
  426e81:	push   ecx
  426e82:	inc    eax
  426e83:	push   eax
  426e84:	push   DWORD PTR [ebp-0x4]
  426e87:	push   ebx
  426e88:	call   DWORD PTR ds:0x42805c
  426e8e:	lea    esp,[ebp-0x54]
  426e91:	pop    edi
  426e92:	pop    esi
  426e93:	pop    ebx
  426e94:	leave  
  426e95:	ret    
  426e96:	int3   
  426e97:	int3   
  426e98:	int3   
  426e99:	int3   
  426e9a:	int3   
  426e9b:	int3   
  426e9c:	int3   
  426e9d:	int3   
  426e9e:	int3   
  426e9f:	int3   
  426ea0:	push   ebp
  426ea1:	mov    ebp,esp
  426ea3:	push   edi
  426ea4:	push   esi
  426ea5:	push   ebx
  426ea6:	mov    esi,DWORD PTR [ebp+0xc]
  426ea9:	mov    edi,DWORD PTR [ebp+0x8]
  426eac:	mov    al,0xff
  426eae:	mov    edi,edi
  426eb0:	or     al,al
  426eb2:	je     0x426ee6
  426eb4:	mov    al,BYTE PTR [esi]
  426eb6:	add    esi,0x1
  426eb9:	mov    ah,BYTE PTR [edi]
  426ebb:	add    edi,0x1
  426ebe:	cmp    ah,al
  426ec0:	je     0x426eb0
  426ec2:	sub    al,0x41
  426ec4:	cmp    al,0x1a
  426ec6:	sbb    cl,cl
  426ec8:	and    cl,0x20
  426ecb:	add    al,cl
  426ecd:	add    al,0x41
  426ecf:	xchg   al,ah
  426ed1:	sub    al,0x41
  426ed3:	cmp    al,0x1a
  426ed5:	sbb    cl,cl
  426ed7:	and    cl,0x20
  426eda:	add    al,cl
  426edc:	add    al,0x41
  426ede:	cmp    al,ah
  426ee0:	je     0x426eb0
  426ee2:	sbb    al,al
  426ee4:	sbb    al,0xff
  426ee6:	movsx  eax,al
  426ee9:	pop    ebx
  426eea:	pop    esi
  426eeb:	pop    edi
  426eec:	leave  
  426eed:	ret    
  426eee:	push   esi
  426eef:	push   edi
  426ef0:	call   0x4237e9
  426ef5:	mov    edi,DWORD PTR [eax+0x64]
  426ef8:	cmp    edi,DWORD PTR ds:0x46275c
  426efe:	je     0x426f07
  426f00:	call   0x424c8f
  426f05:	mov    edi,eax
  426f07:	mov    esi,DWORD PTR [esp+0xc]
  426f0b:	cmp    DWORD PTR [edi+0x28],0x1
  426f0f:	movzx  eax,BYTE PTR [esi]
  426f12:	jle    0x426f22
  426f14:	push   0x8
  426f16:	push   eax
  426f17:	push   edi
  426f18:	call   0x426f76
  426f1d:	add    esp,0xc
  426f20:	jmp    0x426f2c
  426f22:	mov    ecx,DWORD PTR [edi+0x48]
  426f25:	movzx  eax,BYTE PTR [ecx+eax*2]
  426f29:	and    eax,0x8
  426f2c:	test   eax,eax
  426f2e:	je     0x426f33
  426f30:	inc    esi
  426f31:	jmp    0x426f0b
  426f33:	movzx  ecx,BYTE PTR [esi]
  426f36:	inc    esi
  426f37:	cmp    ecx,0x2d
  426f3a:	mov    edx,ecx
  426f3c:	je     0x426f43
  426f3e:	cmp    ecx,0x2b
  426f41:	jne    0x426f47
  426f43:	movzx  ecx,BYTE PTR [esi]
  426f46:	inc    esi
  426f47:	xor    eax,eax
  426f49:	cmp    ecx,0x30
  426f4c:	jl     0x426f58
  426f4e:	cmp    ecx,0x39
  426f51:	jg     0x426f58
  426f53:	sub    ecx,0x30
  426f56:	jmp    0x426f5b
  426f58:	or     ecx,0xffffffff
  426f5b:	cmp    ecx,0xffffffff
  426f5e:	je     0x426f6c
  426f60:	lea    eax,[eax+eax*4]
  426f63:	lea    eax,[ecx+eax*2]
  426f66:	movzx  ecx,BYTE PTR [esi]
  426f69:	inc    esi
  426f6a:	jmp    0x426f49
  426f6c:	cmp    edx,0x2d
  426f6f:	pop    edi
  426f70:	pop    esi
  426f71:	jne    0x426f75
  426f73:	neg    eax
  426f75:	ret    
  426f76:	push   ebp
  426f77:	mov    ebp,esp
  426f79:	push   ecx
  426f7a:	mov    eax,DWORD PTR [ebp+0xc]
  426f7d:	lea    ecx,[eax+0x1]
  426f80:	cmp    ecx,0x100
  426f86:	mov    ecx,DWORD PTR [ebp+0x8]
  426f89:	ja     0x426f94
  426f8b:	mov    ecx,DWORD PTR [ecx+0x48]
  426f8e:	movzx  eax,WORD PTR [ecx+eax*2]
  426f92:	jmp    0x426fe8
  426f94:	push   esi
  426f95:	mov    edx,eax
  426f97:	sar    edx,0x8
  426f9a:	push   edi
  426f9b:	mov    edi,DWORD PTR [ecx+0x48]
  426f9e:	movzx  esi,dl
  426fa1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426fa6:	pop    edi
  426fa7:	pop    esi
  426fa8:	je     0x426fb9
  426faa:	and    BYTE PTR [ebp-0x2],0x0
  426fae:	push   0x2
  426fb0:	mov    BYTE PTR [ebp-0x3],al
  426fb3:	mov    BYTE PTR [ebp-0x4],dl
  426fb6:	pop    eax
  426fb7:	jmp    0x426fc3
  426fb9:	and    BYTE PTR [ebp-0x3],0x0
  426fbd:	mov    BYTE PTR [ebp-0x4],al
  426fc0:	xor    eax,eax
  426fc2:	inc    eax
  426fc3:	push   0x1
  426fc5:	push   DWORD PTR [ecx+0x14]
  426fc8:	push   DWORD PTR [ecx+0x4]
  426fcb:	lea    ecx,[ebp+0xe]
  426fce:	push   ecx
  426fcf:	push   eax
  426fd0:	lea    eax,[ebp-0x4]
  426fd3:	push   eax
  426fd4:	push   0x1
  426fd6:	call   0x426058
  426fdb:	add    esp,0x1c
  426fde:	test   eax,eax
  426fe0:	jne    0x426fe4
  426fe2:	leave  
  426fe3:	ret    
  426fe4:	movzx  eax,WORD PTR [ebp+0xe]
  426fe8:	and    eax,DWORD PTR [ebp+0x10]
  426feb:	leave  
  426fec:	ret    
  426fed:	int3   
  426fee:	int3   
  426fef:	int3   
  426ff0:	mov    eax,DWORD PTR [esp+0x8]
  426ff4:	mov    ecx,DWORD PTR [esp+0x10]
  426ff8:	or     ecx,eax
  426ffa:	mov    ecx,DWORD PTR [esp+0xc]
  426ffe:	jne    0x427009
  427000:	mov    eax,DWORD PTR [esp+0x4]
  427004:	mul    ecx
  427006:	ret    0x10
  427009:	push   ebx
  42700a:	mul    ecx
  42700c:	mov    ebx,eax
  42700e:	mov    eax,DWORD PTR [esp+0x8]
  427012:	mul    DWORD PTR [esp+0x14]
  427016:	add    ebx,eax
  427018:	mov    eax,DWORD PTR [esp+0x8]
  42701c:	mul    ecx
  42701e:	add    edx,ebx
  427020:	pop    ebx
  427021:	ret    0x10
  427024:	int3   
  427025:	int3   
  427026:	int3   
  427027:	int3   
  427028:	int3   
  427029:	int3   
  42702a:	int3   
  42702b:	int3   
  42702c:	int3   
  42702d:	int3   
  42702e:	int3   
  42702f:	int3   
  427030:	push   ebp
  427031:	mov    ebp,esp
  427033:	push   edi
  427034:	push   esi
  427035:	push   ebx
  427036:	mov    ecx,DWORD PTR [ebp+0x10]
  427039:	or     ecx,ecx
  42703b:	je     0x42708a
  42703d:	mov    esi,DWORD PTR [ebp+0x8]
  427040:	mov    edi,DWORD PTR [ebp+0xc]
  427043:	mov    bh,0x41
  427045:	mov    bl,0x5a
  427047:	mov    dh,0x20
  427049:	lea    ecx,[ecx+0x0]
  42704c:	mov    ah,BYTE PTR [esi]
  42704e:	or     ah,ah
  427050:	mov    al,BYTE PTR [edi]
  427052:	je     0x42707b
  427054:	or     al,al
  427056:	je     0x42707b
  427058:	add    esi,0x1
  42705b:	add    edi,0x1
  42705e:	cmp    ah,bh
  427060:	jb     0x427068
  427062:	cmp    ah,bl
  427064:	ja     0x427068
  427066:	add    ah,dh
  427068:	cmp    al,bh
  42706a:	jb     0x427072
  42706c:	cmp    al,bl
  42706e:	ja     0x427072
  427070:	add    al,dh
  427072:	cmp    ah,al
  427074:	jne    0x427081
  427076:	sub    ecx,0x1
  427079:	jne    0x42704c
  42707b:	xor    ecx,ecx
  42707d:	cmp    ah,al
  42707f:	je     0x42708a
  427081:	mov    ecx,0xffffffff
  427086:	jb     0x42708a
  427088:	neg    ecx
  42708a:	mov    eax,ecx
  42708c:	pop    ebx
  42708d:	pop    esi
  42708e:	pop    edi
  42708f:	leave  
  427090:	ret    
  427091:	int3   
  427092:	int3   
  427093:	int3   
  427094:	int3   
  427095:	int3   
  427096:	int3   
  427097:	int3   
  427098:	int3   
  427099:	int3   
  42709a:	int3   
  42709b:	int3   
  42709c:	int3   
  42709d:	int3   
  42709e:	int3   
  42709f:	int3   
  4270a0:	push   esi
  4270a1:	mov    eax,DWORD PTR [esp+0x14]
  4270a5:	or     eax,eax
  4270a7:	jne    0x4270d1
  4270a9:	mov    ecx,DWORD PTR [esp+0x10]
  4270ad:	mov    eax,DWORD PTR [esp+0xc]
  4270b1:	xor    edx,edx
  4270b3:	div    ecx
  4270b5:	mov    ebx,eax
  4270b7:	mov    eax,DWORD PTR [esp+0x8]
  4270bb:	div    ecx
  4270bd:	mov    esi,eax
  4270bf:	mov    eax,ebx
  4270c1:	mul    DWORD PTR [esp+0x10]
  4270c5:	mov    ecx,eax
  4270c7:	mov    eax,esi
  4270c9:	mul    DWORD PTR [esp+0x10]
  4270cd:	add    edx,ecx
  4270cf:	jmp    0x427118
  4270d1:	mov    ecx,eax
  4270d3:	mov    ebx,DWORD PTR [esp+0x10]
  4270d7:	mov    edx,DWORD PTR [esp+0xc]
  4270db:	mov    eax,DWORD PTR [esp+0x8]
  4270df:	shr    ecx,1
  4270e1:	rcr    ebx,1
  4270e3:	shr    edx,1
  4270e5:	rcr    eax,1
  4270e7:	or     ecx,ecx
  4270e9:	jne    0x4270df
  4270eb:	div    ebx
  4270ed:	mov    esi,eax
  4270ef:	mul    DWORD PTR [esp+0x14]
  4270f3:	mov    ecx,eax
  4270f5:	mov    eax,DWORD PTR [esp+0x10]
  4270f9:	mul    esi
  4270fb:	add    edx,ecx
  4270fd:	jb     0x42710d
  4270ff:	cmp    edx,DWORD PTR [esp+0xc]
  427103:	ja     0x42710d
  427105:	jb     0x427116
  427107:	cmp    eax,DWORD PTR [esp+0x8]
  42710b:	jbe    0x427116
  42710d:	dec    esi
  42710e:	sub    eax,DWORD PTR [esp+0x10]
  427112:	sbb    edx,DWORD PTR [esp+0x14]
  427116:	xor    ebx,ebx
  427118:	sub    eax,DWORD PTR [esp+0x8]
  42711c:	sbb    edx,DWORD PTR [esp+0xc]
  427120:	neg    edx
  427122:	neg    eax
  427124:	sbb    edx,0x0
  427127:	mov    ecx,edx
  427129:	mov    edx,ebx
  42712b:	mov    ebx,ecx
  42712d:	mov    ecx,eax
  42712f:	mov    eax,esi
  427131:	pop    esi
  427132:	ret    0x10
  427135:	int3   
  427136:	int3   
  427137:	int3   
  427138:	int3   
  427139:	int3   
  42713a:	int3   
  42713b:	int3   
  42713c:	int3   
  42713d:	int3   
  42713e:	int3   
  42713f:	int3   
  427140:	lea    eax,[edx-0x1]
  427143:	pop    ebx
  427144:	ret    
  427145:	lea    esp,[esp+0x0]
  42714c:	lea    esp,[esp+0x0]
  427150:	xor    eax,eax
  427152:	mov    al,BYTE PTR [esp+0x8]
  427156:	push   ebx
  427157:	mov    ebx,eax
  427159:	shl    eax,0x8
  42715c:	mov    edx,DWORD PTR [esp+0x8]
  427160:	test   edx,0x3
  427166:	je     0x42717d
  427168:	mov    cl,BYTE PTR [edx]
  42716a:	add    edx,0x1
  42716d:	cmp    cl,bl
  42716f:	je     0x427140
  427171:	test   cl,cl
  427173:	je     0x4271c6
  427175:	test   edx,0x3
  42717b:	jne    0x427168
  42717d:	or     ebx,eax
  42717f:	push   edi
  427180:	mov    eax,ebx
  427182:	shl    ebx,0x10
  427185:	push   esi
  427186:	or     ebx,eax
  427188:	mov    ecx,DWORD PTR [edx]
  42718a:	mov    edi,0x7efefeff
  42718f:	mov    eax,ecx
  427191:	mov    esi,edi
  427193:	xor    ecx,ebx
  427195:	add    esi,eax
  427197:	add    edi,ecx
  427199:	xor    ecx,0xffffffff
  42719c:	xor    eax,0xffffffff
  42719f:	xor    ecx,edi
  4271a1:	xor    eax,esi
  4271a3:	add    edx,0x4
  4271a6:	and    ecx,0x81010100
  4271ac:	jne    0x4271ca
  4271ae:	and    eax,0x81010100
  4271b3:	je     0x427188
  4271b5:	and    eax,0x1010100
  4271ba:	jne    0x4271c4
  4271bc:	and    esi,0x80000000
  4271c2:	jne    0x427188
  4271c4:	pop    esi
  4271c5:	pop    edi
  4271c6:	pop    ebx
  4271c7:	xor    eax,eax
  4271c9:	ret    
  4271ca:	mov    eax,DWORD PTR [edx-0x4]
  4271cd:	cmp    al,bl
  4271cf:	je     0x427207
  4271d1:	test   al,al
  4271d3:	je     0x4271c4
  4271d5:	cmp    ah,bl
  4271d7:	je     0x427200
  4271d9:	test   ah,ah
  4271db:	je     0x4271c4
  4271dd:	shr    eax,0x10
  4271e0:	cmp    al,bl
  4271e2:	je     0x4271f9
  4271e4:	test   al,al
  4271e6:	je     0x4271c4
  4271e8:	cmp    ah,bl
  4271ea:	je     0x4271f2
  4271ec:	test   ah,ah
  4271ee:	je     0x4271c4
  4271f0:	jmp    0x427188
  4271f2:	pop    esi
  4271f3:	pop    edi
  4271f4:	lea    eax,[edx-0x1]
  4271f7:	pop    ebx
  4271f8:	ret    
  4271f9:	lea    eax,[edx-0x2]
  4271fc:	pop    esi
  4271fd:	pop    edi
  4271fe:	pop    ebx
  4271ff:	ret    
  427200:	lea    eax,[edx-0x3]
  427203:	pop    esi
  427204:	pop    edi
  427205:	pop    ebx
  427206:	ret    
  427207:	lea    eax,[edx-0x4]
  42720a:	pop    esi
  42720b:	pop    edi
  42720c:	pop    ebx
  42720d:	ret    
  42720e:	jmp    DWORD PTR ds:0x428060
