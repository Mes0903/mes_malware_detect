
cbcd96914342329297ce736f74f9eae0f860143d3b55ea429d3acfe96e1d17da.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    eax,ds:0x42920b
  40100e:	mov    eax,DWORD PTR [eax]
  401010:	and    DWORD PTR ds:0x429157,eax
  401016:	mov    eax,DWORD PTR [ebp+0x8]
  401019:	and    DWORD PTR ds:0x4291e7,0x0
  401023:	mov    ecx,DWORD PTR ds:0x4291e7
  401029:	inc    ecx
  40102a:	mov    DWORD PTR ds:0x4291e7,ecx
  401030:	cmp    DWORD PTR ds:0x4291e7,0xe
  401037:	jle    0x401072
  40103d:	jmp    0x40104b
  401042:	push   DWORD PTR [ebp-0x20]
  401045:	call   DWORD PTR ds:0x42a633
  40104b:	cmp    DWORD PTR ds:0x4291e7,0xd
  401052:	jne    0x401065
  401058:	mov    ecx,DWORD PTR ds:0x4291e7
  40105e:	inc    ecx
  40105f:	mov    DWORD PTR ds:0x4291e7,ecx
  401065:	cmp    DWORD PTR ds:0x4291e7,0x1c
  40106c:	jb     0x401023
  401072:	push   ebx
  401073:	sub    DWORD PTR ds:0x429157,0x3bd6
  40107d:	push   esi
  40107e:	mov    esi,DWORD PTR ds:0x429867
  401084:	mov    ecx,DWORD PTR ds:0x429f53
  40108a:	sub    ecx,esi
  40108c:	add    esi,DWORD PTR [esi+ecx*1]
  40108f:	push   edi
  401090:	mov    esi,0x75108ac
  401095:	xor    DWORD PTR ds:0x4291af,ebx
  40109b:	xor    eax,esi
  40109d:	mov    edi,0x3272f3
  4010a2:	sbb    DWORD PTR ds:0x4291f3,0x4c4b
  4010ac:	add    eax,edi
  4010ae:	and    DWORD PTR ds:0x429163,0x59cd
  4010b8:	mov    DWORD PTR [ebp-0x40],eax
  4010bb:	mov    eax,ds:0x42915f
  4010c0:	sbb    eax,DWORD PTR ds:0x42919f
  4010c6:	mov    ds:0x42915f,eax
  4010cb:	mov    eax,ds:0x42818b
  4010d0:	and    DWORD PTR ds:0x42918b,0x0
  4010da:	jmp    0x4010ee
  4010df:	xor    ecx,ecx
  4010e1:	xor    ecx,DWORD PTR ds:0x42918b
  4010e7:	inc    ecx
  4010e8:	mov    DWORD PTR ds:0x42918b,ecx
  4010ee:	cmp    DWORD PTR ds:0x42918b,0x1e
  4010f5:	jae    0x401144
  4010fb:	cmp    DWORD PTR ds:0x42918b,0xe
  401102:	ja     0x401144
  401108:	jmp    0x401123
  40110d:	push   DWORD PTR [ebp-0x24]
  401110:	push   0x428152
  401115:	push   0x4280c4
  40111a:	push   DWORD PTR [ebp-0x20]
  40111d:	call   DWORD PTR ds:0x42a63b
  401123:	cmp    DWORD PTR ds:0x42918b,0xd
  40112a:	jne    0x40113f
  401130:	xor    ecx,ecx
  401132:	or     ecx,DWORD PTR ds:0x42918b
  401138:	inc    ecx
  401139:	mov    DWORD PTR ds:0x42918b,ecx
  40113f:	jmp    0x4010df
  401144:	mov    eax,DWORD PTR [eax]
  401146:	mov    ecx,DWORD PTR ds:0x4291bf
  40114c:	sbb    DWORD PTR ds:0x42914f,ecx
  401152:	mov    DWORD PTR [ebp-0x3c],eax
  401155:	mov    eax,ds:0x429223
  40115a:	mov    ecx,DWORD PTR ds:0x429f63
  401160:	sub    eax,ecx
  401162:	add    eax,DWORD PTR [eax+ecx*1]
  401165:	mov    eax,ds:0x42839b
  40116a:	mov    DWORD PTR ds:0x429167,0x18
  401174:	cmp    DWORD PTR ds:0x429167,0x0
  40117b:	je     0x4011cb
  401181:	cmp    DWORD PTR ds:0x429167,0x3
  401188:	jle    0x4011cb
  40118e:	jmp    0x40119f
  401193:	push   DWORD PTR [ebp-0x24]
  401196:	push   DWORD PTR [ebp-0x14]
  401199:	call   DWORD PTR ds:0x42a63f
  40119f:	cmp    DWORD PTR ds:0x429167,0x4
  4011a6:	jne    0x4011b9
  4011ac:	mov    ecx,DWORD PTR ds:0x429167
  4011b2:	dec    ecx
  4011b3:	mov    DWORD PTR ds:0x429167,ecx
  4011b9:	mov    ecx,DWORD PTR ds:0x429167
  4011bf:	dec    ecx
  4011c0:	mov    DWORD PTR ds:0x429167,ecx
  4011c6:	jmp    0x401174
  4011cb:	mov    eax,DWORD PTR [eax]
  4011cd:	or     DWORD PTR ds:0x4291b7,0x5973
  4011d7:	mov    DWORD PTR [ebp-0x1c],eax
  4011da:	mov    DWORD PTR [ebp-0x34],0xf89c87a1
  4011e1:	sbb    ecx,ecx
  4011e3:	mov    eax,DWORD PTR [ebp-0x34]
  4011e6:	and    DWORD PTR ds:0x4291bf,ecx
  4011ec:	xor    eax,esi
  4011ee:	add    eax,edi
  4011f0:	adc    DWORD PTR ds:0x42919f,0x1e2a
  4011fa:	mov    DWORD PTR [ebp-0x40],eax
  4011fd:	mov    eax,ds:0x42830b
  401202:	mov    DWORD PTR [ebp-0x40],eax
  401205:	mov    eax,ds:0x429f5f
  40120a:	mov    eax,DWORD PTR [eax]
  40120c:	and    DWORD PTR ds:0x4291f7,eax
  401212:	mov    eax,DWORD PTR [ebp-0x3c]
  401215:	adc    DWORD PTR ds:0x42914b,0x2509
  40121f:	mov    DWORD PTR [ebp-0x14],eax
  401222:	and    ecx,ecx
  401224:	mov    eax,DWORD PTR [ebp-0x14]
  401227:	xor    DWORD PTR ds:0x42918f,ecx
  40122d:	push   0x4
  40122f:	neg    ecx
  401231:	pop    ecx
  401232:	sub    ecx,eax
  401234:	and    DWORD PTR ds:0x42916b,0x0
  40123e:	jmp    0x40124e
  401243:	mov    eax,ds:0x42916b
  401248:	inc    eax
  401249:	mov    ds:0x42916b,eax
  40124e:	cmp    DWORD PTR ds:0x42916b,0x1e
  401255:	jae    0x40127d
  40125b:	cmp    DWORD PTR ds:0x42916b,0x27
  401262:	ja     0x40127d
  401268:	jmp    0x401278
  40126d:	push   0x4291bb
  401272:	call   DWORD PTR ds:0x42a643
  401278:	jmp    0x401243
  40127d:	add    ecx,DWORD PTR [ebp-0x1c]
  401280:	and    DWORD PTR ds:0x42915b,0x0
  40128a:	jmp    0x40129d
  40128f:	xor    eax,eax
  401291:	xor    eax,DWORD PTR ds:0x42915b
  401297:	inc    eax
  401298:	mov    ds:0x42915b,eax
  40129d:	cmp    DWORD PTR ds:0x42915b,0x1a
  4012a4:	jae    0x4012ec
  4012aa:	cmp    DWORD PTR ds:0x42915b,0xe
  4012b1:	jle    0x4012ec
  4012b7:	jmp    0x4012cc
  4012bc:	push   0x1df3
  4012c1:	push   0x428062
  4012c6:	call   DWORD PTR ds:0x42a647
  4012cc:	cmp    DWORD PTR ds:0x42915b,0xd
  4012d3:	jne    0x4012e7
  4012d9:	xor    eax,eax
  4012db:	xor    eax,DWORD PTR ds:0x42915b
  4012e1:	inc    eax
  4012e2:	mov    ds:0x42915b,eax
  4012e7:	jmp    0x40128f
  4012ec:	mov    DWORD PTR [ebp-0x2c],0xf89c85e1
  4012f3:	mov    DWORD PTR ds:0x4291d7,0x3a8d
  4012fd:	mov    DWORD PTR [ebp-0x18],ecx
  401300:	and    DWORD PTR ds:0x42916f,ecx
  401306:	mov    DWORD PTR [ebp-0xa0],0xf89c85bd
  401310:	mov    eax,DWORD PTR [ebp-0x14]
  401313:	xor    DWORD PTR ds:0x4291e7,0x69e7
  40131d:	mov    DWORD PTR [ebp-0x9c],eax
  401323:	mov    eax,DWORD PTR [ebp-0x18]
  401326:	or     DWORD PTR ds:0x42916f,0x429173
  401330:	mov    DWORD PTR [ebp-0x98],eax
  401336:	and    DWORD PTR ds:0x429187,ecx
  40133c:	mov    eax,DWORD PTR [ebp-0x2c]
  40133f:	xor    eax,esi
  401341:	mov    DWORD PTR ds:0x4291ab,0x4dc6
  40134b:	add    eax,edi
  40134d:	mov    DWORD PTR [ebp-0x94],eax
  401353:	adc    DWORD PTR ds:0x429193,0x429197
  40135d:	lea    eax,[ebp-0x48]
  401360:	sbb    DWORD PTR ds:0x42914f,0x4291c3
  40136a:	mov    DWORD PTR [ebp-0x90],eax
  401370:	mov    eax,ds:0x42917f
  401375:	or     DWORD PTR ds:0x4291bf,eax
  40137b:	mov    eax,DWORD PTR [ebp-0xa0]
  401381:	adc    DWORD PTR ds:0x429187,0x4291df
  40138b:	xor    eax,esi
  40138d:	add    eax,edi
  40138f:	mov    DWORD PTR [ebp-0xa0],eax
  401395:	lea    eax,[ebp-0xa0]
  40139b:	and    DWORD PTR ds:0x42919f,0x4291a7
  4013a5:	push   eax
  4013a6:	mov    eax,DWORD PTR [ebp+0xc]
  4013a9:	mov    DWORD PTR ds:0x42917b,0x524d
  4013b3:	xor    eax,esi
  4013b5:	add    eax,edi
  4013b7:	and    DWORD PTR ds:0x429183,0x429193
  4013c1:	push   eax
  4013c2:	sub    DWORD PTR ds:0x429173,0x45d8
  4013cc:	mov    eax,ds:0x42832b
  4013d1:	xor    DWORD PTR ds:0x42917b,0x37ec
  4013db:	push   0x428281
  4013e0:	sub    DWORD PTR ds:0x4291e3,0x5ee0
  4013ea:	push   DWORD PTR [eax]
  4013ec:	xor    DWORD PTR ds:0x42916b,0x429197
  4013f6:	call   0x4085e5
  4013fb:	and    DWORD PTR ds:0x429153,0x0
  401405:	mov    edx,DWORD PTR ds:0x429153
  40140b:	inc    edx
  40140c:	mov    DWORD PTR ds:0x429153,edx
  401412:	cmp    DWORD PTR ds:0x429153,0x24
  401419:	jb     0x401442
  40141f:	jmp    0x401435
  401424:	push   0x4280d6
  401429:	push   DWORD PTR [ebp-0x18]
  40142c:	push   DWORD PTR [ebp-0x14]
  40142f:	call   DWORD PTR ds:0x42a64f
  401435:	cmp    DWORD PTR ds:0x429153,0x15
  40143c:	jb     0x401405
  401442:	mov    ebx,DWORD PTR [ebp-0x14]
  401445:	add    DWORD PTR ds:0x42914f,edx
  40144b:	mov    eax,DWORD PTR [ebp-0x18]
  40144e:	and    DWORD PTR ds:0x42916b,0x0
  401458:	jmp    0x40146a
  40145d:	mov    edx,DWORD PTR ds:0x42916b
  401463:	inc    edx
  401464:	mov    DWORD PTR ds:0x42916b,edx
  40146a:	cmp    DWORD PTR ds:0x42916b,0x17
  401471:	jae    0x4014b1
  401477:	cmp    DWORD PTR ds:0x42916b,0xc
  40147e:	ja     0x4014b1
  401484:	jmp    0x401492
  401489:	push   DWORD PTR [ebp-0x24]
  40148c:	call   DWORD PTR ds:0x42a653
  401492:	cmp    DWORD PTR ds:0x42916b,0xb
  401499:	jne    0x4014ac
  40149f:	mov    edx,DWORD PTR ds:0x42916b
  4014a5:	inc    edx
  4014a6:	mov    DWORD PTR ds:0x42916b,edx
  4014ac:	jmp    0x40145d
  4014b1:	mov    DWORD PTR [ebp-0x58],eax
  4014b4:	add    DWORD PTR ds:0x4291c7,edi
  4014ba:	mov    DWORD PTR [ebp-0x34],0xf89c8538
  4014c1:	mov    eax,0xf89c85a3
  4014c6:	inc    DWORD PTR ds:0x42916f
  4014cc:	mov    DWORD PTR [ebp-0x1c],eax
  4014cf:	lea    ecx,[eax-0x2]
  4014d2:	inc    DWORD PTR ds:0x42919b
  4014d8:	mov    DWORD PTR [ebp-0x28],ecx
  4014db:	movzx  edx,BYTE PTR ds:0x429163
  4014e2:	or     DWORD PTR ds:0x4291e7,edx
  4014e8:	mov    DWORD PTR [ebp-0x10],0xf89c85a2
  4014ef:	mov    DWORD PTR [ebp-0x8],eax
  4014f2:	and    DWORD PTR ds:0x4291e7,0x0
  4014fc:	jmp    0x40150c
  401501:	mov    eax,ds:0x4291e7
  401506:	inc    eax
  401507:	mov    ds:0x4291e7,eax
  40150c:	cmp    DWORD PTR ds:0x4291e7,0x11
  401513:	jae    0x401543
  401519:	cmp    DWORD PTR ds:0x4291e7,0x13
  401520:	jge    0x401543
  401526:	jmp    0x40153e
  40152b:	push   0x4280b5
  401530:	push   DWORD PTR [ebp-0x28]
  401533:	push   0x738c
  401538:	call   DWORD PTR ds:0x42a657
  40153e:	jmp    0x401501
  401543:	mov    eax,DWORD PTR [ebp-0x10]
  401546:	sbb    DWORD PTR ds:0x429193,edi
  40154c:	xor    eax,esi
  40154e:	sub    edx,DWORD PTR ds:0x429193
  401554:	mov    edx,0xffcd8d8d
  401559:	sub    edx,eax
  40155b:	mov    DWORD PTR ds:0x42915b,edx
  401561:	mov    DWORD PTR [ebp-0xc],edx
  401564:	movzx  eax,WORD PTR ds:0x4291f7
  40156b:	mov    DWORD PTR [ebp-0x18],0xf89c85be
  401572:	mov    eax,DWORD PTR [ebp-0x8]
  401575:	mov    DWORD PTR [ebp-0x3c],ebx
  401578:	cmp    eax,ecx
  40157a:	mov    DWORD PTR ds:0x4291d3,0x104a
  401584:	je     0x403bad
  40158a:	add    ecx,0x327f
  401590:	mov    eax,DWORD PTR [ebp-0x10]
  401593:	mov    ecx,DWORD PTR [ebp-0x10]
  401596:	sbb    DWORD PTR ds:0x4291b3,0x52cd
  4015a0:	xor    eax,esi
  4015a2:	xor    ecx,esi
  4015a4:	lea    ecx,[eax+ecx*1+0x64e5e6]
  4015ab:	mov    eax,DWORD PTR [ebp-0xc]
  4015ae:	or     DWORD PTR ds:0x429153,0x67db
  4015b8:	xor    edx,edx
  4015ba:	div    ecx
  4015bc:	mov    eax,DWORD PTR [ebp-0x8]
  4015bf:	xor    ecx,0x4574
  4015c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4015c8:	xor    eax,esi
  4015ca:	or     DWORD PTR ds:0x4291df,0xa4f
  4015d4:	xor    ecx,esi
  4015d6:	or     DWORD PTR ds:0x42915f,0x4291eb
  4015e0:	sub    eax,ecx
  4015e2:	cmp    edx,eax
  4015e4:	jne    0x401764
  4015ea:	mov    eax,DWORD PTR [ebp-0xc]
  4015ed:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  4015f4:	add    ecx,DWORD PTR ds:0x4291d7
  4015fa:	mov    eax,DWORD PTR [ebp-0x28]
  4015fd:	mov    ecx,DWORD PTR [ebp-0x18]
  401600:	sub    DWORD PTR ds:0x42916f,0x2374
  40160a:	xor    eax,esi
  40160c:	add    DWORD PTR ds:0x429197,0x6412
  401616:	xor    ecx,esi
  401618:	add    eax,edi
  40161a:	add    ecx,edi
  40161c:	mov    DWORD PTR ds:0x42914f,0x798e
  401626:	mov    BYTE PTR [ebp-0x21],dl
  401629:	mov    DWORD PTR ds:0x42916f,0x52dc
  401633:	cmp    eax,ecx
  401635:	mov    DWORD PTR ds:0x42918f,0x1786
  40163f:	jae    0x401707
  401645:	and    DWORD PTR ds:0x42915b,ecx
  40164b:	lea    ecx,[eax-0x3272f3]
  401651:	not    edx
  401653:	mov    DWORD PTR [ebp-0x14],ecx
  401656:	mov    edx,DWORD PTR [ebp-0x14]
  401659:	xor    edx,esi
  40165b:	xor    DWORD PTR ds:0x4291a7,0x52cf
  401665:	add    edx,0x7f55d8e3
  40166b:	lea    ecx,[ebp+eax*4-0xb4]
  401672:	mov    DWORD PTR [ecx],edx
  401674:	mov    edx,DWORD PTR ds:0x429193
  40167a:	mov    edx,DWORD PTR [ecx]
  40167c:	cmp    edx,0x244ecb9c
  401682:	jbe    0x4016a7
  401688:	add    DWORD PTR ds:0x42916b,0x3ac8
  401692:	add    DWORD PTR [ecx],0x405fcdd
  401698:	mov    DWORD PTR ds:0x42919f,0x6763
  4016a2:	jmp    0x4016b7
  4016a7:	add    DWORD PTR ds:0x42914f,0x4291af
  4016b1:	add    DWORD PTR [ecx],0xfdaf4323
  4016b7:	sub    ecx,0x38f7
  4016bd:	mov    ecx,DWORD PTR [ebp-0x18]
  4016c0:	xor    DWORD PTR ds:0x4291c7,0x8c7
  4016ca:	xor    ecx,esi
  4016cc:	dec    DWORD PTR ds:0x42915b
  4016d2:	inc    eax
  4016d3:	sbb    DWORD PTR ds:0x4291cf,0x4291df
  4016dd:	inc    DWORD PTR [ebp-0x14]
  4016e0:	add    DWORD PTR ds:0x4291f3,0x429193
  4016ea:	add    ecx,edi
  4016ec:	cmp    eax,ecx
  4016ee:	mov    DWORD PTR ds:0x4291d3,0x74e1
  4016f8:	jb     0x401656
  4016fe:	not    DWORD PTR ds:0x4291af
  401704:	mov    dl,BYTE PTR [ebp-0x21]
  401707:	xor    DWORD PTR ds:0x429153,edi
  40170d:	mov    eax,DWORD PTR [ebp-0x34]
  401710:	mov    DWORD PTR ds:0x429173,0x31f7
  40171a:	xor    al,0xac
  40171c:	xor    DWORD PTR ds:0x429157,0x429193
  401726:	mov    cl,0xd
  401728:	sub    cl,al
  40172a:	add    dl,cl
  40172c:	mov    ecx,DWORD PTR [ebp-0x1c]
  40172f:	adc    DWORD PTR ds:0x4291c3,0x11c9
  401739:	xor    cl,0xac
  40173c:	sub    cl,0xd
  40173f:	and    DWORD PTR ds:0x4291ef,0x4291b7
  401749:	ror    dl,cl
  40174b:	movzx  ecx,WORD PTR ds:0x4291e3
  401752:	sbb    DWORD PTR ds:0x4291ef,ecx
  401758:	xor    eax,eax
  40175a:	mov    eax,DWORD PTR [ebp-0xc]
  40175d:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  401764:	mov    eax,DWORD PTR [ebp-0xc]
  401767:	adc    ecx,0x7a4f
  40176d:	mov    ecx,DWORD PTR [ebp-0x28]
  401770:	or     DWORD PTR ds:0x42918f,0x42919b
  40177a:	jmp    0x403b2b
  40177f:	pop    ss
  401780:	mov    eax,0x80c4d8c4
  401785:	pop    es
  401786:	mov    al,0x4
  401788:	add    eax,0x8f6692fe
  40178d:	std    
  40178e:	sub    al,0x83
  401790:	add    DWORD PTR [ebx-0x7ca3107d],0xffffff83
  401797:	sub    ch,BYTE PTR ds:0x3a263e24
  40179d:	and    BYTE PTR [edx+edi*2],ch
  4017a0:	cmp    eax,0x77f47776
  4017a5:	jae    0x40181a
  4017a7:	jb     0x4017f4
  4017a9:	fcmovu st,st(5)
  4017ab:	(bad)  
  4017ac:	imul   edx,DWORD PTR [ecx+0x70],0x79a9607e
  4017b3:	jb     0x40181b
  4017b5:	int3   
  4017b6:	bound  edx,QWORD PTR [ebx+0x39]
  4017b9:	lea    eax,[ebx]
  4017bb:	xchg   esp,eax
  4017bc:	xchg   DWORD PTR [edx+edx*2+0x7c],esp
  4017c0:	inc    esp
  4017c1:	mov    DWORD PTR [edi+0x40bbb97c],esi
  4017c7:	sub    eax,0x3dd77fc
  4017cc:	push   0x46f21f7c
  4017d1:	rol    bl,cl
  4017d3:	repnz xchg esp,eax
  4017d5:	sub    bh,bl
  4017d7:	nop
  4017d8:	ss or  al,0x66
  4017db:	mov    al,0x93
  4017dd:	aad    0x4
  4017df:	jb     0x4017c3
  4017e1:	adc    eax,0x37030fe5
  4017e6:	and    DWORD PTR [ecx+0xd],edx
  4017e9:	aaa    
  4017ea:	jo     0x40185d
  4017ec:	(bad)  
  4017ed:	lods   al,BYTE PTR ds:[esi]
  4017ee:	sub    BYTE PTR [esi+0x1a],bl
  4017f1:	mov    bh,0xfc
  4017f3:	not    BYTE PTR [esi+0x30]
  4017f6:	test   DWORD PTR [ebx-0x2f],ecx
  4017f9:	pusha  
  4017fa:	push   es
  4017fb:	and    eax,DWORD PTR [ebx]
  4017fd:	cmp    DWORD PTR [esi+0x5ca1e278],0x2514be90
  401807:	fwait
  401808:	dec    esi
  401809:	or     BYTE PTR [edi+0x10888b3d],bl
  40180f:	jecxz  0x401843
  401811:	imul   edx,DWORD PTR [edx-0x79ab7bb],0xffffffcc
  401818:	xchg   ebx,eax
  401819:	ss xchg esi,eax
  40181b:	leave  
  40181c:	(bad)  
  40181d:	int    0x91
  40181f:	outs   dx,BYTE PTR ds:[esi]
  401820:	cmc    
  401821:	pop    edx
  401822:	imul   ecx,DWORD PTR [ebp+0xd],0x3f
  401826:	or     BYTE PTR [edi+0x18],al
  401829:	mov    dl,0x50
  40182b:	shl    DWORD PTR [ecx+ecx*2+0x26715d9],cl
  401832:	imul   esp,DWORD PTR [edi-0x46],0x6
  401836:	jno    0x4017f4
  401838:	add    DWORD PTR [ebx+0x1d],ebx
  40183b:	add    BYTE PTR [esi-0x58],ch
  40183e:	inc    ebp
  40183f:	ins    DWORD PTR es:[edi],dx
  401840:	jl     0x401811
  401842:	add    BYTE PTR [edi],dl
  401844:	and    ebp,edx
  401846:	mov    eax,ds:0x603e13f
  40184b:	dec    ecx
  40184c:	xor    BYTE PTR [ecx],dl
  40184e:	js     0x4018b4
  401850:	in     al,0xc8
  401852:	push   cs
  401853:	fidiv  DWORD PTR [ebx-0x3]
  401856:	shl    BYTE PTR [ebx],0x23
  401859:	push   ebp
  40185a:	push   ebp
  40185b:	sbb    cl,bl
  40185d:	inc    ebx
  40185e:	popa   
  40185f:	ret    
  401860:	nop
  401861:	mov    WORD PTR [esi+edx*8-0x33],ss
  401865:	dec    ebx
  401866:	add    eax,0xa3ce6d16
  40186b:	or     DWORD PTR [ecx+0x58],esp
  40186e:	fucom  st(1)
  401870:	cmp    edi,DWORD PTR [edi+edx*2]
  401873:	jl     0x401828
  401875:	jle    0x401840
  401877:	in     eax,dx
  401878:	inc    esp
  401879:	xchg   edx,eax
  40187a:	push   edx
  40187b:	mov    dl,0xd0
  40187d:	mov    edi,0xc53efe00
  401882:	mov    DWORD PTR [edx+0x7],0xad392474
  401889:	inc    ebx
  40188a:	jmp    0x401856
  40188c:	inc    eax
  40188d:	scas   eax,DWORD PTR es:[edi]
  40188e:	xchg   BYTE PTR [ebp+ecx*1+0x3abec9bb],bl
  401895:	inc    esi
  401896:	shl    ebp,1
  401898:	pop    ds
  401899:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40189a:	iret   
  40189b:	xor    BYTE PTR [esi],ah
  40189d:	lea    esi,[ecx-0x1b]
  4018a0:	dec    esi
  4018a1:	adc    BYTE PTR [ebp-0x5fb57beb],cl
  4018a7:	aaa    
  4018a8:	mov    BYTE PTR [eax+0x46],ch
  4018ab:	jmp    0x40191b
  4018ad:	and    BYTE PTR [esi-0x45db8946],ch
  4018b3:	push   ss
  4018b4:	adc    ch,BYTE PTR [edx+0x21]
  4018b7:	ins    BYTE PTR es:[edi],dx
  4018b8:	rcr    BYTE PTR [edx-0x15],1
  4018bb:	lea    ecx,[ecx+0x5b]
  4018be:	pop    ss
  4018bf:	inc    esi
  4018c0:	std    
  4018c1:	push   0x70
  4018c3:	pop    ebp
  4018c4:	sbb    ah,BYTE PTR [eax+0x37]
  4018c7:	push   ss
  4018c8:	add    al,BYTE PTR [ecx]
  4018ca:	mov    al,0xdc
  4018cc:	bound  edx,QWORD PTR [edx+0x23]
  4018cf:	out    dx,al
  4018d0:	das    
  4018d1:	mov    ds:0x6c3fa573,al
  4018d6:	cli    
  4018d7:	divps  xmm5,XMMWORD PTR [ebx+0x3c2d60e]
  4018de:	ret    
  4018df:	outs   dx,BYTE PTR ds:[esi]
  4018e0:	out    dx,eax
  4018e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4018e2:	ficomp WORD PTR [ebx]
  4018e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4018e5:	scas   eax,DWORD PTR es:[edi]
  4018e6:	repz push ecx
  4018e8:	int3   
  4018e9:	cld    
  4018ea:	push   eax
  4018eb:	adc    edx,DWORD PTR [ebx-0x6a0c0939]
  4018f1:	cli    
  4018f2:	add    DWORD PTR [edi+0x3de15750],eax
  4018f8:	add    al,0xbf
  4018fb:	add    DWORD PTR [eax+edi*2],0x4a38c032
  401902:	popf   
  401903:	or     BYTE PTR [eax+ecx*2-0x197c5037],al
  40190a:	hlt    
  40190b:	sar    esi,0x69
  40190e:	mov    al,0x41
  401910:	lods   eax,DWORD PTR ds:[esi]
  401911:	inc    ebp
  401912:	arpl   WORD PTR [edi+0x30a3b998],dx
  401918:	int3   
  401919:	pop    edi
  40191a:	or     al,0x97
  40191c:	mov    esp,0xcbd2598d
  401921:	(bad)  
  401923:	sub    al,bl
  401925:	mov    DWORD PTR [ecx+ebp*1+0x76],edx
  401929:	jp     0x4019a9
  40192b:	je     0x401964
  40192d:	rcr    BYTE PTR [edx+0x3a39c877],cl
  401933:	xor    al,0x53
  401935:	xchg   esi,eax
  401936:	and    BYTE PTR [eax-0x4eeb7ac6],cl
  40193c:	clc    
  40193d:	add    eax,0x7232fd36
  401942:	aaa    
  401943:	rcl    DWORD PTR [ebx+eiz*4],0x4b
  401947:	cmp    cl,BYTE PTR [ebx-0x11a12812]
  40194d:	jb     0x40199f
  40194f:	pop    ss
  401950:	sub    edx,DWORD PTR [eax]
  401952:	add    al,0xc0
  401954:	rol    DWORD PTR [esi+0x7ea4cfc7],1
  40195a:	mov    bh,0x6b
  40195c:	or     bl,bh
  40195e:	mov    ebp,0x1e38128d
  401963:	mov    eax,ds:0x488605c7
  401968:	rcl    BYTE PTR [edx+0x6c],cl
  40196b:	push   edi
  40196c:	add    DWORD PTR [ebp-0x4a],esi
  40196f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401970:	aas    
  401971:	into   
  401972:	mov    eax,0x20923c60
  401977:	repnz xor BYTE PTR [edx+0x58],ch
  40197b:	jo     0x4019a1
  40197d:	loop   0x4019c2
  40197f:	push   ds
  401980:	push   ecx
  401981:	lds    esi,FWORD PTR [edi-0x5c55a6c8]
  401987:	shr    BYTE PTR [ecx-0x6a86059],0xd
  40198e:	aaa    
  40198f:	pop    ds
  401990:	sbb    ah,BYTE PTR [edx-0x58]
  401993:	jecxz  0x401a0d
  401995:	pop    es
  401996:	into   
  401997:	(bad)  
  401999:	sbb    al,0x5e
  40199b:	cmp    eax,0x54d5fc26
  4019a0:	das    
  4019a1:	push   ecx
  4019a2:	xor    DWORD PTR [ebp-0x48efe100],esp
  4019a8:	xchg   ebp,eax
  4019a9:	dec    esp
  4019aa:	mov    ds:0x49ccef18,al
  4019af:	pop    edi
  4019b0:	jmp    0x25e7cc0e
  4019b5:	inc    ebp
  4019b6:	dec    ebx
  4019b7:	pop    es
  4019b8:	add    eax,DWORD PTR [esi]
  4019ba:	adc    eax,0x94c57d3f
  4019bf:	dec    ebx
  4019c0:	jp     0x4019db
  4019c2:	add    al,0x70
  4019c4:	jl     0x401949
  4019c6:	jmp    0xa764c26f
  4019cb:	xor    eax,0xa1d766dd
  4019d0:	or     ebp,eax
  4019d2:	push   ebp
  4019d3:	leave  
  4019d4:	je     0x401a25
  4019d6:	sbb    edi,esi
  4019d8:	loop   0x401a3e
  4019da:	dec    eax
  4019db:	scas   eax,DWORD PTR es:[edi]
  4019dc:	(bad)  
  4019dd:	(bad)  
  4019de:	ins    BYTE PTR es:[edi],dx
  4019df:	mov    ah,0x5a
  4019e1:	adc    DWORD PTR [eax],esi
  4019e3:	hlt    
  4019e4:	imul   esp,ecx,0x28
  4019e7:	daa    
  4019e8:	ret    0xb143
  4019eb:	mov    cl,0xbe
  4019ed:	mov    ch,0xa6
  4019ef:	add    eax,0x4d1abb7d
  4019f4:	sbb    eax,0xaf41be5d
  4019f9:	pushf  
  4019fa:	enter  0xc304,0x71
  4019fe:	jg     0x4019a3
  401a00:	xchg   esp,eax
  401a01:	push   edx
  401a02:	sub    BYTE PTR [edi],bh
  401a04:	and    BYTE PTR [ebp+0x265f3cf6],dl
  401a0a:	xchg   esi,eax
  401a0b:	cmp    eax,0x506628ae
  401a10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a11:	(bad)  
  401a12:	test   DWORD PTR [esi],ecx
  401a14:	sbb    WORD PTR [ebx+0xcc2d5ee],0xb475
  401a1d:	dec    eax
  401a1e:	test   eax,0x5db843a3
  401a23:	xchg   ebx,eax
  401a24:	push   0x540bb0b
  401a29:	stos   BYTE PTR es:[edi],al
  401a2a:	mov    cs,eax
  401a2c:	ss xchg edx,eax
  401a2e:	rol    BYTE PTR [ebp+0x37],1
  401a31:	mov    edx,0xbbcde9db
  401a36:	pop    esi
  401a37:	and    al,0xab
  401a39:	mov    ah,0x44
  401a3b:	cmp    DWORD PTR [eax+0x1679d56],ecx
  401a41:	imul   ah
  401a43:	cmp    al,0x8f
  401a45:	sub    al,ah
  401a47:	adc    DWORD PTR [ebx],ebx
  401a49:	dec    esi
  401a4a:	arpl   WORD PTR [esi+0x3f430dc9],dx
  401a50:	cmc    
  401a51:	and    ecx,DWORD PTR [edi+0x5e8c868]
  401a57:	jbe    0x4019e5
  401a59:	xchg   BYTE PTR [eax+0x5f],dh
  401a5c:	xor    bh,BYTE PTR [edi+0x5a]
  401a5f:	and    dh,BYTE PTR [esp+edx*8+0x43fc13ba]
  401a66:	scas   al,BYTE PTR es:[edi]
  401a67:	in     al,dx
  401a68:	adc    eax,0x30e54e8d
  401a6d:	cli    
  401a6e:	icebp  
  401a6f:	je     0x401acb
  401a71:	xchg   ecx,eax
  401a72:	aas    
  401a73:	mov    fs:0x5eb54df4,al
  401a79:	pop    ebx
  401a7a:	fwait
  401a7b:	xchg   edi,eax
  401a7c:	inc    esi
  401a7d:	jb     0x401a7e
  401a7f:	adc    ebx,DWORD PTR [esi-0x1d]
  401a82:	fldenv [ecx+edx*4+0x110da035]
  401a89:	shr    BYTE PTR [edx+0xe],1
  401a8c:	adc    al,0xee
  401a8e:	sbb    al,0xb5
  401a90:	jo     0x401a2d
  401a92:	mov    al,ds:0x6116982e
  401a97:	jle    0x401a8d
  401a99:	jmp    0xa7bd061b
  401a9e:	pop    es
  401a9f:	pop    es
  401aa0:	or     dh,bl
  401aa2:	mov    ?,ebp
  401aa4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401aa5:	mov    cl,0xe8
  401aa7:	sbb    al,0xa2
  401aa9:	aam    0x2e
  401aab:	leave  
  401aac:	(bad)  
  401aad:	xchg   edx,eax
  401aae:	inc    esi
  401aaf:	mov    al,ds:0xce5fd2d2
  401ab4:	loope  0x401ad4
  401ab6:	mov    ds:0x70c467d4,eax
  401abb:	xor    eax,DWORD PTR [ecx-0x3661161b]
  401ac1:	mov    cl,0x20
  401ac3:	mov    dl,0xf9
  401ac5:	and    ebp,DWORD PTR [edi]
  401ac7:	and    BYTE PTR [ebx+0x39],bh
  401aca:	push   es
  401acb:	dec    ebp
  401acc:	push   eax
  401acd:	imul   eax,DWORD PTR [ecx+0x5f],0x29
  401ad1:	dec    esi
  401ad2:	lods   al,BYTE PTR ds:[esi]
  401ad3:	fisub  DWORD PTR [ebp+0x25]
  401ad6:	into   
  401ad7:	out    dx,eax
  401ad8:	or     esi,DWORD PTR [esi-0x80]
  401adb:	or     eax,0x928007f2
  401ae0:	inc    ebx
  401ae1:	inc    ebx
  401ae2:	lods   al,BYTE PTR ds:[esi]
  401ae3:	pop    edx
  401ae4:	(bad)  
  401ae5:	aad    0xf2
  401ae7:	jne    0x401b11
  401ae9:	(bad)  
  401aea:	sub    bl,dh
  401aec:	fdivr  DWORD PTR [ecx-0x66]
  401aef:	inc    esi
  401af0:	or     al,0x37
  401af2:	push   edx
  401af3:	jae    0x401b48
  401af5:	push   ebp
  401af6:	cmp    BYTE PTR ds:0x363bf7f,bl
  401afc:	jae    0x401af8
  401afe:	fmul   QWORD PTR ds:0x98a28f41
  401b04:	pop    ss
  401b05:	ins    BYTE PTR es:[edi],dx
  401b06:	jle    0x401ae4
  401b08:	xor    DWORD PTR [ebp+0x603e5da9],esp
  401b0e:	test   eax,0xc4d6641f
  401b13:	adc    DWORD PTR [ebp+0x68],eax
  401b16:	pop    esi
  401b17:	sub    DWORD PTR [ebx],esi
  401b19:	add    BYTE PTR [edx-0x5ec7c687],al
  401b1f:	fsub   st,st(2)
  401b21:	adc    ecx,eax
  401b23:	jns    0x401b87
  401b25:	cmp    esi,ebx
  401b27:	inc    ecx
  401b28:	mov    ecx,0x3c066dc3
  401b2d:	dec    ecx
  401b2e:	xchg   ebp,eax
  401b2f:	iret   
  401b30:	into   
  401b31:	cdq    
  401b32:	push   0x31
  401b34:	push   0x21413699
  401b39:	jg     0x401b85
  401b3b:	xor    ch,BYTE PTR [edi]
  401b3d:	(bad)  
  401b3e:	mov    bl,0x7
  401b40:	push   ss
  401b41:	aad    0x57
  401b43:	pop    es
  401b44:	xchg   ecx,eax
  401b45:	and    ch,BYTE PTR [ebx+0x8]
  401b48:	loopne 0x401afa
  401b4a:	cmp    eax,0x2faa2299
  401b4f:	xchg   BYTE PTR [ebp+esi*2+0x22],ah
  401b53:	sbb    dh,BYTE PTR [ebx]
  401b55:	jns    0x401bbd
  401b57:	pop    eax
  401b58:	cmc    
  401b59:	rcl    BYTE PTR [eax],0x30
  401b5c:	test   eax,0x7a572842
  401b61:	test   eax,0x9746e830
  401b66:	add    dh,BYTE PTR [edx]
  401b68:	lds    ecx,FWORD PTR [ebx-0x74146c6b]
  401b6e:	stc    
  401b6f:	jg     0x401b92
  401b71:	adc    ebp,edi
  401b73:	mov    ds:0x6e21e55e,eax
  401b78:	push   eax
  401b79:	cli    
  401b7a:	es or  eax,0x79589be0
  401b80:	int3   
  401b81:	xor    al,0x7a
  401b83:	mov    esp,0xa7d324d
  401b88:	push   es
  401b89:	xchg   ebx,eax
  401b8a:	clc    
  401b8b:	addr16 mov dh,0x48
  401b8e:	adc    DWORD PTR [ebp-0x2683dbb2],ebx
  401b94:	out    0xbf,eax
  401b96:	sbb    eax,0x259cd109
  401b9b:	retf   
  401b9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b9d:	pusha  
  401b9e:	pushf  
  401b9f:	rcr    DWORD PTR [ecx-0x2e],cl
  401ba2:	cdq    
  401ba3:	loop   0x401bb6
  401ba5:	pop    ebp
  401ba6:	sub    al,0x56
  401ba8:	mov    al,0x5d
  401baa:	cmp    eax,0x1612138c
  401baf:	daa    
  401bb0:	push   esp
  401bb1:	push   ebx
  401bb2:	jae    0x401b86
  401bb4:	clc    
  401bb5:	or     edx,ebx
  401bb7:	je     0x401ba5
  401bb9:	jmp    0x401c22
  401bbb:	sub    eax,0x7cd11dc8
  401bc0:	dec    eax
  401bc1:	int    0x7c
  401bc3:	mov    bh,0x99
  401bc5:	xor    BYTE PTR [esi+0x30ba2521],dl
  401bcb:	(bad)  [esi+0x1461e735]
  401bd1:	fdivr  QWORD PTR ds:0xb79b9242
  401bd7:	ins    DWORD PTR es:[edi],dx
  401bd8:	fdivr  QWORD PTR [esp+ebp*2]
  401bdb:	nop
  401bdc:	jne    0x401b93
  401bde:	maskmovq mm5,mm5
  401be1:	inc    esi
  401be2:	xchg   edi,eax
  401be3:	imul   esp,DWORD PTR ds:0xf74ca5af,0xffffffc6
  401bea:	jmp    0x401bae
  401bec:	jle    0x401c5e
  401bee:	or     BYTE PTR [eax+0x6b],dh
  401bf1:	ret    0x2be6
  401bf4:	aas    
  401bf5:	cmp    DWORD PTR ds:0x7f09c652,esi
  401bfb:	inc    ebp
  401bfc:	jne    0x401c2c
  401bfe:	popa   
  401bff:	pop    esi
  401c00:	dec    ebx
  401c01:	jle    0x401c00
  401c03:	cmp    ecx,edx
  401c05:	int3   
  401c06:	and    al,0x8b
  401c08:	stos   BYTE PTR es:[edi],al
  401c09:	leave  
  401c0a:	and    DWORD PTR [ebp+0x57b90ee7],ebp
  401c10:	test   eax,0xc737bf25
  401c15:	push   0xb
  401c17:	stos   DWORD PTR es:[edi],eax
  401c18:	push   ebx
  401c19:	test   al,0x3f
  401c1b:	jns    0x401bca
  401c1d:	adc    bl,BYTE PTR [ecx]
  401c1f:	jnp    0x401ba2
  401c21:	mov    esp,0x3ddceb74
  401c26:	jae    0x401c8d
  401c28:	popa   
  401c29:	js     0x401c57
  401c2b:	adc    DWORD PTR ds:0x9e586188,0x62
  401c32:	mov    eax,ds:0x202ffbad
  401c37:	call   0x4b1e:0xb035d6ca
  401c3e:	pop    esi
  401c3f:	imul   edx,edx,0x1c
  401c42:	sub    edi,DWORD PTR ds:0xb0fa38bd
  401c48:	ins    BYTE PTR es:[edi],dx
  401c49:	dec    edx
  401c4a:	pop    ss
  401c4b:	pop    edx
  401c4c:	mov    WORD PTR [ecx-0x5bcc36b1],gs
  401c52:	test   al,0x95
  401c54:	xor    bh,BYTE PTR [esi-0x5c]
  401c57:	dec    ebp
  401c58:	xchg   esi,eax
  401c59:	jne    0x401ca6
  401c5b:	inc    edx
  401c5c:	push   edi
  401c5d:	lods   al,BYTE PTR ds:[esi]
  401c5e:	jg     0x401c84
  401c60:	mov    esi,0x7656789d
  401c65:	cmc    
  401c66:	dec    esp
  401c67:	cmc    
  401c68:	mov    eax,ds:0x37473b6
  401c6d:	mov    ds:0x9cb2635c,al
  401c72:	pusha  
  401c73:	inc    edx
  401c74:	mov    bh,0x9b
  401c76:	mov    al,0x1a
  401c78:	add    al,0xd8
  401c7a:	loopne 0x401ca3
  401c7c:	ret    
  401c7d:	std    
  401c7e:	jb     0x401c5f
  401c80:	test   BYTE PTR [edx+eiz*4-0x59],bl
  401c84:	enter  0xc524,0x51
  401c88:	xlat   BYTE PTR ds:[ebx]
  401c89:	xor    ebx,edi
  401c8b:	call   0x604c4c80
  401c90:	xor    eax,0x7045caf7
  401c95:	adc    BYTE PTR [eax+ebp*4+0x79daede4],ah
  401c9c:	inc    edx
  401c9d:	ss mov al,0x39
  401ca0:	shl    DWORD PTR [eax+0x89a56d0],cl
  401ca6:	mov    bh,ah
  401ca8:	popf   
  401ca9:	ret    0x44bf
  401cac:	call   0xafb9:0xbe233216
  401cb3:	aad    0xa6
  401cb5:	ret    0x6c75
  401cb8:	pop    edx
  401cb9:	test   cl,bl
  401cbb:	stc    
  401cbc:	jl     0x401cd7
  401cbe:	pop    esp
  401cbf:	jge    0x401d1a
  401cc1:	dec    ebp
  401cc2:	pop    eax
  401cc3:	outs   dx,BYTE PTR ds:[esi]
  401cc4:	pop    ss
  401cc5:	mov    bl,0x7f
  401cc7:	mov    al,0xe5
  401cc9:	pop    ss
  401cca:	xchg   esi,eax
  401ccb:	enter  0x58aa,0x53
  401ccf:	(bad)  
  401cd0:	adc    cl,BYTE PTR [eax]
  401cd2:	ret    
  401cd3:	dec    ebp
  401cd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cd5:	mov    eax,0x1fbce073
  401cda:	out    0xe6,al
  401cdc:	cld    
  401cdd:	xor    ebp,edx
  401cdf:	addr16 mov ds:0x88de,eax
  401ce3:	pop    es
  401ce4:	fistp  QWORD PTR [esi]
  401ce6:	pusha  
  401ce7:	xchg   esp,eax
  401ce8:	jp     0x401d64
  401cea:	retf   
  401ceb:	push   0x28f413b7
  401cf0:	loope  0x401d71
  401cf2:	cdq    
  401cf3:	sub    bh,bh
  401cf5:	jmp    0x401d2f
  401cf7:	retf   0xa8e6
  401cfa:	jmp    0x2e9f10ea
  401cff:	lock mov ds:0x1ddb0e4f,al
  401d05:	out    0x31,al
  401d07:	shl    cl,1
  401d09:	stos   BYTE PTR es:[edi],al
  401d0a:	std    
  401d0b:	mov    bh,0x55
  401d0d:	es out 0x4d,eax
  401d10:	js     0x401d08
  401d12:	scas   al,BYTE PTR es:[edi]
  401d13:	aas    
  401d14:	mov    dh,0xa8
  401d16:	repnz cmc 
  401d18:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  401d1a:	fst    DWORD PTR [ebp-0xf9deef6]
  401d20:	outs   dx,BYTE PTR ds:[esi]
  401d21:	add    ecx,ebp
  401d23:	dec    ebx
  401d24:	sar    BYTE PTR [ebp+0x5f],0x2c
  401d28:	imul   ebx,edx,0xffffffbf
  401d2b:	out    0x4e,al
  401d2d:	imul   ebx,DWORD PTR [edi-0x13b722fd],0x793becc
  401d37:	mov    ah,0x83
  401d39:	icebp  
  401d3a:	imul   esi,DWORD PTR [eax+0x7ebd83b5],0x6c
  401d41:	jmp    0x401d77
  401d43:	sbb    DWORD PTR [ecx+0xf4c5cc0],esi
  401d49:	je     0x401d61
  401d4b:	sbb    eax,0xd470ce87
  401d50:	lods   al,BYTE PTR ds:[esi]
  401d51:	(bad)  
  401d52:	ins    DWORD PTR es:[edi],dx
  401d53:	sbb    BYTE PTR [ebp-0xbe17ab9],dl
  401d59:	pop    ebp
  401d5a:	ss push 0xffffffd1
  401d5d:	jo     0x401cfc
  401d5f:	data16 sar BYTE PTR [ebx],cl
  401d62:	mov    esi,0xf00b0644
  401d67:	pushf  
  401d68:	mov    dl,0xc5
  401d6a:	div    ebp
  401d6c:	jo     0x401d8a
  401d6e:	sub    BYTE PTR [esi+0x4a],bl
  401d71:	out    dx,al
  401d72:	ret    
  401d73:	pusha  
  401d74:	mov    al,ds:0x7a8e168c
  401d79:	push   0xffffff92
  401d7b:	rcr    DWORD PTR [ecx+0x249fc34c],cl
  401d81:	push   0x223996bd
  401d86:	mov    ch,bl
  401d88:	adc    eax,0xa7f7e84c
  401d8d:	push   ss
  401d8e:	inc    ebp
  401d8f:	jmp    0x401dfd
  401d91:	cmp    al,0x8e
  401d93:	or     BYTE PTR [ebx+edx*4+0x7a],bh
  401d97:	ins    BYTE PTR es:[edi],dx
  401d98:	fwait
  401d99:	out    dx,al
  401d9a:	sahf   
  401d9b:	test   al,0xf
  401d9d:	inc    ebp
  401d9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d9f:	(bad)  
  401da0:	sub    al,0xcc
  401da2:	sub    cl,BYTE PTR [esi]
  401da4:	bound  edi,QWORD PTR [esi]
  401da6:	and    ch,bl
  401da8:	pop    esi
  401da9:	repnz lods al,BYTE PTR ds:[esi]
  401dab:	jmp    0x65c0b50c
  401db0:	add    DWORD PTR [edi+0x46],esp
  401db3:	ficomp WORD PTR [ecx]
  401db5:	push   0xffffffcd
  401db7:	rcl    DWORD PTR [eax+0x57],1
  401dba:	cmp    al,0xaa
  401dbc:	mov    dh,0x69
  401dbe:	shr    BYTE PTR [ecx-0x66dde16a],0x7b
  401dc5:	outs   dx,DWORD PTR ds:[esi]
  401dc6:	push   0x81e3fd99
  401dcb:	cli    
  401dcc:	rcr    al,0xaa
  401dcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401dd0:	shl    BYTE PTR [edi],cl
  401dd2:	add    BYTE PTR [ebx-0x4856ba41],bl
  401dd8:	lods   eax,DWORD PTR ds:[esi]
  401dd9:	mov    ecx,0xdd37a8d4
  401dde:	loopne 0x401e5c
  401de0:	mov    ds:0xff3a4f,eax
  401de5:	or     al,0xe7
  401de7:	push   esi
  401de8:	push   ecx
  401de9:	pushf  
  401dea:	sbb    eax,0x3f6d16ad
  401def:	stos   DWORD PTR es:[edi],eax
  401df0:	xor    DWORD PTR [edi],esi
  401df2:	xlat   BYTE PTR ds:[ebx]
  401df3:	xor    dl,BYTE PTR [edx]
  401df5:	(bad)  
  401df7:	sub    edi,DWORD PTR [ebp-0x7a2132f]
  401dfd:	push   DWORD PTR [esi]
  401dff:	cld    
  401e00:	mov    ebp,0x44590626
  401e05:	jle    0x401d9e
  401e07:	dec    eax
  401e08:	mov    ebx,0xb567e865
  401e0d:	rol    BYTE PTR [eax-0x71],1
  401e10:	out    0x39,eax
  401e12:	xchg   esp,eax
  401e13:	sar    BYTE PTR [ecx+eiz*2-0x34],1
  401e17:	and    eax,0x486eca0b
  401e1c:	xchg   ecx,eax
  401e1d:	sar    BYTE PTR [ecx-0x61812f71],0x56
  401e24:	lds    ecx,FWORD PTR [ebx+ebx*2]
  401e27:	jmp    0xf639161c
  401e2c:	dec    ebx
  401e2d:	test   DWORD PTR [ebp+0x6a1e6036],0x748811b5
  401e37:	xor    BYTE PTR ds:0x3e5b245a,dl
  401e3d:	outs   dx,BYTE PTR ds:[esi]
  401e3e:	lahf   
  401e3f:	add    ah,bl
  401e41:	push   esi
  401e42:	push   esi
  401e43:	hlt    
  401e44:	cwde   
  401e45:	pushf  
  401e46:	add    al,0x5f
  401e48:	inc    eax
  401e49:	test   al,0x67
  401e4b:	and    cl,BYTE PTR [edx+eax*1+0x3bf8e541]
  401e52:	jns    0x401dd4
  401e54:	in     al,0x82
  401e56:	jno    0x401e96
  401e58:	xchg   ebp,eax
  401e59:	mov    ecx,0x5a538957
  401e5e:	ret    0xcce1
  401e61:	adc    DWORD PTR [ebx-0x2d],ecx
  401e64:	mov    ch,0xc8
  401e66:	add    eax,0x59b7199f
  401e6b:	mov    BYTE PTR [edi+0x387af293],ah
  401e71:	pop    eax
  401e72:	test   ch,dh
  401e74:	push   esi
  401e75:	into   
  401e76:	scas   al,BYTE PTR es:[edi]
  401e77:	call   0x253b:0xb8f9d47e
  401e7e:	lods   al,BYTE PTR ds:[esi]
  401e7f:	push   es
  401e80:	xchg   ebp,eax
  401e81:	clc    
  401e82:	sub    ecx,ebx
  401e84:	iret   
  401e85:	jp     0x401e1d
  401e87:	dec    ecx
  401e88:	jns    0x401ed8
  401e8a:	cmp    eax,0x7cb2a9f6
  401e8f:	inc    ecx
  401e90:	(bad)  
  401e91:	cmp    eax,0xd00017e8
  401e96:	pusha  
  401e97:	xchg   esi,eax
  401e98:	stc    
  401e99:	fucomp st(2)
  401e9b:	and    eax,0xaf8615ab
  401ea0:	add    BYTE PTR [ebx+esi*4],bl
  401ea3:	jle    0x401f1c
  401ea5:	test   DWORD PTR [ebx],esi
  401ea7:	adc    dl,BYTE PTR [ebp-0x17c1aebc]
  401ead:	test   eax,0x53733df4
  401eb2:	xor    cl,cl
  401eb4:	push   0x7ac87620
  401eb9:	out    0xc0,al
  401ebb:	mov    DWORD PTR [ebx+0x6d],edx
  401ebe:	sti    
  401ebf:	mov    ds:0x107abcaf,al
  401ec4:	push   ebp
  401ec5:	imul   eax,ecx,0x25e27c61
  401ecb:	add    eax,0xc4eb3aaa
  401ed0:	jl     0x401e7f
  401ed2:	outs   dx,BYTE PTR ds:[esi]
  401ed3:	ds pop ss
  401ed5:	aaa    
  401ed6:	mov    al,0x4e
  401ed8:	xchg   esi,eax
  401ed9:	pusha  
  401eda:	pusha  
  401edb:	adc    al,0xc9
  401edd:	jecxz  0x401f33
  401edf:	repnz mov edx,0xecf7cc12
  401ee5:	gs xor dh,al
  401ee8:	fcom   QWORD PTR [eiz*8+0x4e117d8e]
  401eef:	dec    esi
  401ef0:	iret   
  401ef1:	addr16 aaa 
  401ef3:	mov    bh,0x9b
  401ef5:	retf   0x7fce
  401ef8:	mov    dl,0x54
  401efa:	add    bl,bl
  401efc:	sub    BYTE PTR [ebx-0x20],bl
  401eff:	jp     0x401f71
  401f01:	(bad)  
  401f03:	mov    ecx,eax
  401f05:	push   ss
  401f06:	gs dec eax
  401f08:	ror    BYTE PTR [edx-0x72c2c207],0x1a
  401f0f:	jbe    0x401f8e
  401f11:	fsub   st,st(7)
  401f13:	jno    0x401f49
  401f15:	mov    bl,0xab
  401f17:	mov    al,0x5b
  401f19:	cmp    DWORD PTR [esi+0x67],0xffffff8f
  401f1d:	sbb    DWORD PTR [esi+0x50],edx
  401f20:	hlt    
  401f21:	pop    bp
  401f23:	push   esi
  401f24:	push   cs
  401f25:	adc    ah,BYTE PTR [edi]
  401f27:	stos   BYTE PTR es:[edi],al
  401f28:	mul    BYTE PTR [ecx-0x3ccd35fc]
  401f2e:	shr    ebx,1
  401f30:	and    BYTE PTR [ecx],dh
  401f32:	push   ebp
  401f33:	pop    es
  401f34:	in     eax,dx
  401f35:	adc    DWORD PTR [edx],edi
  401f37:	ret    0x811f
  401f3a:	jmp    0xd0e8:0xc249a5c2
  401f41:	dec    edx
  401f42:	pop    ss
  401f43:	pop    esp
  401f44:	mov    ?,WORD PTR [edx]
  401f46:	jns    0x401fac
  401f48:	sar    DWORD PTR [edi+0x34fc43c6],cl
  401f4e:	jbe    0x401f5f
  401f50:	push   ss
  401f51:	jns    0x401fcd
  401f53:	and    al,0x21
  401f55:	sbb    eax,0x97cc506c
  401f5a:	outs   dx,BYTE PTR ds:[esi]
  401f5b:	cmc    
  401f5c:	inc    ebx
  401f5d:	lock and edx,ecx
  401f60:	shl    BYTE PTR [ecx],cl
  401f62:	test   DWORD PTR [esi-0x7966028d],esi
  401f68:	adc    edx,DWORD PTR [ebx+0x439e63d9]
  401f6e:	mov    dh,0x7a
  401f70:	mov    al,0xa4
  401f72:	dec    ebp
  401f73:	lock lods al,BYTE PTR ds:[esi]
  401f75:	aam    0xf
  401f77:	cmp    ch,BYTE PTR [ecx]
  401f79:	inc    ebp
  401f7a:	pop    edx
  401f7b:	and    esp,edx
  401f7d:	(bad)  [esi+0x28]
  401f80:	push   esi
  401f81:	jl     0x401ff6
  401f83:	mov    al,0x6
  401f85:	aam    0x70
  401f87:	push   cs
  401f88:	pop    ecx
  401f89:	jbe    0x401f71
  401f8b:	push   0xffffff93
  401f8d:	and    DWORD PTR [edx-0x79],edx
  401f90:	loope  0x401f90
  401f92:	int    0xf8
  401f94:	cwde   
  401f95:	jmp    0xe1e5:0xe1d0c6a4
  401f9c:	adc    al,BYTE PTR [edi+0xf802366]
  401fa2:	inc    edi
  401fa3:	mov    ebx,0x7a75d71b
  401fa8:	or     al,0xda
  401faa:	xchg   esp,eax
  401fab:	std    
  401fac:	imul   edx,DWORD PTR [edx-0xd],0xfffffffd
  401fb0:	popf   
  401fb1:	in     eax,0xae
  401fb3:	adc    BYTE PTR [ecx+ecx*2+0x36],0x6b
  401fb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fb9:	aaa    
  401fba:	std    
  401fbb:	sub    eax,DWORD PTR [ebp+0x78]
  401fbe:	adc    al,0x1b
  401fc0:	rcr    ecx,cl
  401fc2:	mov    al,ds:0x30f8b434
  401fc7:	inc    eax
  401fc8:	inc    esi
  401fc9:	scas   al,BYTE PTR es:[edi]
  401fca:	les    esi,FWORD PTR [ebp+0x20810017]
  401fd0:	loope  0x401fc2
  401fd2:	sbb    ebx,DWORD PTR [ebx+0x5ae7d9ff]
  401fd8:	popf   
  401fd9:	cs jle 0x401f7a
  401fdc:	adc    eax,0xda51377f
  401fe1:	(bad)  
  401fe2:	ss sub ebp,edx
  401fe5:	outs   dx,BYTE PTR ds:[esi]
  401fe6:	pop    edx
  401fe7:	std    
  401fe8:	leave  
  401fe9:	add    al,0x59
  401feb:	ja     0x402041
  401fed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fee:	test   DWORD PTR [eax+0x2ae88974],eax
  401ff4:	fldenv [edx]
  401ff6:	aaa    
  401ff7:	ret    
  401ff8:	cmp    al,0x9
  401ffa:	sahf   
  401ffb:	enter  0xb45c,0xbd
  401fff:	add    DWORD PTR [ebx+0x3cdd9c76],ecx
  402005:	shl    DWORD PTR [eax+edi*8],cl
  402008:	in     eax,0xc6
  40200a:	adc    eax,0x945c5e05
  40200f:	pop    esi
  402010:	aad    0x3c
  402012:	mov    edi,0xf1ab581c
  402017:	leave  
  402018:	lods   al,BYTE PTR ds:[esi]
  402019:	jo     0x401fd4
  40201b:	push   esi
  40201c:	jecxz  0x401fa3
  40201e:	int    0xce
  402020:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402021:	data16 addr16 jp 0x40202a
  402025:	fs repz jmp 0xc0f5:0x67524f0e
  40202e:	fs xchg esi,eax
  402030:	cmp    ch,BYTE PTR [eax+0x26052aa0]
  402036:	ins    DWORD PTR es:[edi],dx
  402037:	push   eax
  402038:	xchg   BYTE PTR [edi-0x7a218828],bh
  40203e:	sub    ch,ah
  402040:	in     eax,dx
  402041:	and    BYTE PTR [ecx+0x296b3807],ch
  402047:	sbb    bl,BYTE PTR [esi-0x51]
  40204a:	in     eax,0xa1
  40204c:	pinsrw mm2,WORD PTR [edi+0x7edcf957],0x69
  402054:	ror    esi,1
  402056:	xlat   BYTE PTR ds:[ebx]
  402057:	(bad)  
  402058:	pusha  
  402059:	int3   
  40205a:	or     al,0x53
  40205c:	jl     0x402071
  40205e:	retf   0x83c
  402061:	imul   edi,edx,0x43bf0a99
  402067:	mov    ebp,DWORD PTR [ebp+ecx*2+0x5cddee21]
  40206e:	call   0x6515c71b
  402073:	and    DWORD PTR [eax],esp
  402075:	push   ebp
  402076:	mov    dh,0x8c
  402078:	jne    0x402070
  40207a:	mov    ds:0x9d49d397,al
  40207f:	add    DWORD PTR [esi+edi*4],0x1d
  402083:	mov    ebp,0xb67f6eb3
  402088:	popf   
  402089:	mov    edx,0x2bfde599
  40208e:	pop    edi
  40208f:	inc    ebx
  402090:	sar    BYTE PTR [edi],0xbb
  402093:	icebp  
  402094:	fistp  WORD PTR [edx+0x56]
  402097:	(bad)  
  402099:	jbe    0x4020b0
  40209b:	xor    al,0x68
  40209d:	sahf   
  40209e:	mov    bh,0xf9
  4020a0:	push   ebx
  4020a1:	dec    ecx
  4020a2:	xor    eax,0xb7305807
  4020a7:	mov    al,ds:0xa064246e
  4020ac:	mov    WORD PTR [edx+0x4dd97bac],es
  4020b2:	xchg   DWORD PTR [ecx],ebx
  4020b4:	sub    BYTE PTR [ebx-0x4e3e8734],0x11
  4020bb:	jae    0x402059
  4020bd:	pop    esi
  4020be:	xor    al,0xab
  4020c0:	das    
  4020c1:	sbb    DWORD PTR ds:0x8dffab3b,esi
  4020c7:	push   esi
  4020c8:	inc    esp
  4020c9:	push   0x71
  4020cb:	pop    ebp
  4020cc:	adc    ebp,DWORD PTR [ebp-0x43e4d7a7]
  4020d2:	jno    0x4020f1
  4020d4:	dec    ecx
  4020d5:	or     BYTE PTR [eax-0x7646be61],al
  4020db:	pop    ebp
  4020dc:	mov    gs,esp
  4020de:	sub    dh,ah
  4020e0:	xchg   ebp,eax
  4020e1:	inc    BYTE PTR [esi-0x79e45858]
  4020e7:	pop    es
  4020e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020e9:	xchg   edi,eax
  4020ea:	mov    WORD PTR [edx-0x56],es
  4020ed:	hlt    
  4020ee:	ss int3 
  4020f0:	fwait
  4020f1:	dec    eax
  4020f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020f3:	not    BYTE PTR [esi+0x2cf33840]
  4020f9:	push   edx
  4020fa:	dec    eax
  4020fb:	sub    BYTE PTR [edi+0x64db154c],bh
  402101:	adc    cl,BYTE PTR cs:[eax-0xecfb09]
  402108:	inc    ecx
  402109:	pop    ds
  40210a:	ds sti 
  40210c:	add    ecx,DWORD PTR [edi]
  40210e:	cmp    DWORD PTR [esi],esi
  402110:	addr16 pop edi
  402112:	(bad)  
  402113:	jbe    0x40212a
  402115:	(bad)  
  402116:	popf   
  402117:	dec    esp
  402118:	int3   
  402119:	jle    0x4020cf
  40211b:	pop    esp
  40211c:	(bad)  
  40211d:	bound  eax,QWORD PTR [ebp*8-0x66461ce5]
  402124:	jb     0x40210a
  402126:	sub    al,0xf8
  402128:	js     0x402171
  40212a:	mov    bl,ch
  40212c:	sub    DWORD PTR [edx],ebx
  40212e:	(bad)  
  40212f:	icebp  
  402130:	int3   
  402131:	retf   
  402132:	enter  0x81a8,0x98
  402136:	sbb    ch,BYTE PTR [edi-0x54135310]
  40213c:	inc    esp
  40213d:	aas    
  40213e:	push   ds
  40213f:	(bad)  
  402140:	test   eax,0x856503a8
  402145:	adc    al,0x9a
  402147:	mov    eax,ds:0x5eed5e95
  40214c:	ret    0x3c1d
  40214f:	lds    ebx,FWORD PTR [esp+eax*1-0x78]
  402153:	and    al,ah
  402155:	push   edx
  402156:	cmp    ebp,eax
  402158:	jg     0x40216d
  40215a:	sar    DWORD PTR [ecx+ebx*2+0x593ba3c],cl
  402161:	cmp    bl,BYTE PTR [eax+ebx*8+0x143aca8f]
  402168:	dec    ebp
  402169:	xor    DWORD PTR [ebp+esi*4-0x67],0xcca315a2
  402171:	mov    ecx,0xeef69814
  402176:	mov    dl,0x77
  402178:	dec    esi
  402179:	mov    al,0xc9
  40217b:	or     ah,BYTE PTR ds:0x47d61ca5
  402181:	stos   BYTE PTR es:[edi],al
  402182:	test   ebx,esi
  402184:	loope  0x402185
  402186:	pop    edi
  402187:	sub    DWORD PTR [ecx],esi
  402189:	sbb    al,BYTE PTR [edx+0x35aa5be7]
  40218f:	(bad)  
  402190:	shl    eax,1
  402192:	jmp    0x6d796383
  402197:	inc    ebp
  402198:	and    DWORD PTR [ebp+0xe4eb6e9],ecx
  40219e:	arpl   WORD PTR [eax+ebp*4+0x3ea12c9c],dx
  4021a5:	push   esp
  4021a6:	ret    
  4021a7:	cwde   
  4021a8:	pop    es
  4021a9:	(bad)
  4021ac:	dec    edi
  4021ad:	out    dx,al
  4021ae:	stos   BYTE PTR es:[edi],al
  4021af:	or     al,0x36
  4021b1:	mov    esp,0xd6e1fb88
  4021b6:	stos   DWORD PTR es:[edi],eax
  4021b7:	or     BYTE PTR [edi+0x372c75b8],dh
  4021bd:	cmp    edi,DWORD PTR [esi+eax*8+0x78c81c83]
  4021c4:	lea    ebp,[edi]
  4021c6:	aas    
  4021c7:	mov    DWORD PTR [ebx+0x3924d1ba],0xd2514a68
  4021d1:	dec    edi
  4021d2:	and    BYTE PTR [ecx+ebx*2-0x69],cl
  4021d6:	(bad)  
  4021d7:	jmp    0x602e:0xfb5eabac
  4021de:	aad    0x4
  4021e0:	test   DWORD PTR [ecx+0x2f135e87],0x74c194f7
  4021ea:	mov    esi,?
  4021ec:	int    0x23
  4021ee:	mov    eax,ds:0x790077e
  4021f3:	test   BYTE PTR [esi+0x6f95a6d6],bl
  4021f9:	xchg   edx,eax
  4021fa:	or     BYTE PTR [ebp-0x78],cl
  4021fd:	cli    
  4021fe:	scas   al,BYTE PTR es:[edi]
  4021ff:	mov    ?,WORD PTR [ebx+edi*1+0x4d]
  402203:	fisub  DWORD PTR [ebx]
  402205:	retf   
  402206:	fist   WORD PTR [edx-0x47]
  402209:	aam    0x8c
  40220b:	scas   al,BYTE PTR es:[edi]
  40220c:	arpl   WORD PTR [ebx-0xf644f6b],ax
  402212:	jle    0x402230
  402214:	fild   WORD PTR [esi]
  402216:	inc    edi
  402217:	inc    edi
  402218:	and    ebx,esp
  40221a:	cwde   
  40221b:	mov    bh,0xd3
  40221d:	loopne 0x40225a
  40221f:	xor    DWORD PTR [ebx],esp
  402221:	retf   
  402222:	ret    
  402223:	sub    al,0x7
  402225:	mul    ebx
  402227:	icebp  
  402228:	xchg   ax,ax
  40222a:	in     eax,dx
  40222b:	call   0xe180aa97
  402230:	dec    edi
  402231:	sub    DWORD PTR [ebx],esi
  402233:	outs   dx,DWORD PTR ds:[esi]
  402234:	jge    0x4021cc
  402236:	inc    ecx
  402237:	jl     0x4021d1
  402239:	stos   BYTE PTR es:[edi],al
  40223a:	mov    ebp,0xd9e77245
  40223f:	sti    
  402240:	push   ss
  402241:	in     eax,0x1b
  402243:	cmp    eax,0x3cdd04
  402248:	mov    cl,0x9c
  40224a:	inc    esp
  40224b:	cld    
  40224c:	sbb    al,0xd5
  40224e:	cmp    BYTE PTR [eax],bh
  402250:	push   esi
  402251:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402252:	push   ss
  402253:	sahf   
  402254:	stc    
  402255:	pop    edi
  402256:	iret   
  402257:	or     DWORD PTR [esi-0x7441e3db],0xa7c42474
  402261:	int    0x6b
  402263:	mov    esp,0xa2608ea
  402268:	(bad)  
  402269:	adc    eax,0x5f93e98
  40226e:	repz jns 0x4022c7
  402271:	inc    ebp
  402272:	(bad)  
  402273:	jnp    0x4022bb
  402275:	outs   dx,BYTE PTR ds:[esi]
  402276:	call   FWORD PTR [ebp+0x58]
  402279:	adc    DWORD PTR [ecx+ebp*8],ebp
  40227c:	dec    BYTE PTR [esi-0x2b]
  40227f:	popf   
  402280:	push   ss
  402281:	jns    0x402295
  402283:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402284:	sbb    bl,BYTE PTR [esi-0x2f9e29df]
  40228a:	cwde   
  40228b:	into   
  40228c:	push   edx
  40228d:	int    0xf3
  40228f:	dec    eax
  402290:	sub    BYTE PTR [edi-0x22],0x19
  402294:	pop    es
  402295:	xchg   ebp,eax
  402296:	retf   
  402297:	(bad)  
  402299:	inc    ebx
  40229a:	inc    ebx
  40229b:	xchg   BYTE PTR [esi+0x4b628606],ah
  4022a1:	fnstsw WORD PTR [esi]
  4022a3:	loope  0x4022e2
  4022a5:	cmp    ch,BYTE PTR [edi]
  4022a7:	jl     0x402296
  4022a9:	cmp    BYTE PTR [ecx+eax*8],0x8d
  4022ad:	retf   0xdcdd
  4022b0:	jnp    0x40224f
  4022b2:	push   ds
  4022b3:	push   ecx
  4022b4:	pop    ss
  4022b5:	imul   esp,DWORD PTR [esi-0x5b],0x3f
  4022b9:	mov    ds:0xf61a8dad,eax
  4022be:	mov    al,0x81
  4022c0:	cli    
  4022c1:	mov    eax,0x4061bbb
  4022c6:	(bad)  
  4022c7:	popa   
  4022c8:	je     0x4022f4
  4022ca:	add    edx,DWORD PTR [esi+0x655684f9]
  4022d0:	mov    ds,WORD PTR [esi]
  4022d2:	dec    eax
  4022d3:	mov    edx,0xca73a203
  4022d8:	mov    bh,0x8f
  4022da:	(bad)  
  4022db:	aas    
  4022dc:	scas   al,BYTE PTR es:[edi]
  4022dd:	sub    DWORD PTR [esp+edi*2],eax
  4022e0:	imul   ecx,ebx,0xffffffa9
  4022e3:	sub    ch,BYTE PTR [esi-0x5d]
  4022e6:	aas    
  4022e7:	cli    
  4022e8:	daa    
  4022e9:	push   es
  4022ea:	push   ss
  4022eb:	xor    DWORD PTR [ebx],ecx
  4022ed:	mov    edx,0xae7661e8
  4022f2:	push   ecx
  4022f3:	sbb    al,0x1a
  4022f5:	add    ebp,DWORD PTR [ebx+0x1f]
  4022f8:	xor    ch,BYTE PTR ds:0x2cd216d6
  4022fe:	inc    ebx
  4022ff:	mov    ebx,0xf103d8f9
  402304:	and    ebx,esp
  402306:	(bad)  
  402307:	aaa    
  402308:	loop   0x40236f
  40230a:	retf   
  40230b:	leave  
  40230c:	fstp   QWORD PTR [ecx+esi*4-0x78d29f24]
  402313:	mov    ebp,0x5afc6831
  402318:	xor    DWORD PTR [edi+0x5e5b65b5],edi
  40231e:	icebp  
  40231f:	div    BYTE PTR [eax]
  402321:	lea    esp,[ebp-0x41]
  402324:	icebp  
  402325:	inc    edi
  402326:	shr    BYTE PTR [ebx],cl
  402328:	sub    BYTE PTR [ebx],0xc
  40232b:	mov    ebx,0xf510cd39
  402330:	sub    eax,0x14c6ccfd
  402335:	adc    DWORD PTR [edx-0x59f7610e],ebp
  40233b:	add    bl,BYTE PTR [ecx]
  40233d:	jae    0x4022ee
  40233f:	sahf   
  402340:	lahf   
  402341:	cmp    esi,esi
  402343:	fistp  QWORD PTR [ebx+0x2830b432]
  402349:	cwde   
  40234a:	mov    al,0xbd
  40234c:	leave  
  40234d:	scas   al,BYTE PTR es:[edi]
  40234e:	fisubr WORD PTR [esi-0x59]
  402351:	pushf  
  402352:	aas    
  402353:	clc    
  402354:	iret   
  402355:	add    BYTE PTR [esi+0xd3c440b],bh
  40235b:	mov    al,ds:0xb8642c6f
  402360:	(bad)  
  402361:	dec    BYTE PTR [ebx-0x2f]
  402364:	fsubp  st(7),st
  402366:	inc    ebp
  402367:	or     bh,BYTE PTR [esi+0x1d]
  40236a:	and    eax,0x411138ea
  40236f:	lahf   
  402370:	imul   edx,ebx,0x8490daf3
  402376:	js     0x402381
  402378:	or     ah,BYTE PTR [esi]
  40237a:	punpcklbw mm2,DWORD PTR [edx+0x1d]
  40237e:	inc    ebp
  40237f:	cmp    al,0x59
  402381:	or     al,0xce
  402383:	jmp    0xcaa1:0x1c18b214
  40238a:	xchg   edx,eax
  40238b:	loopne 0x402331
  40238d:	aam    0x81
  40238f:	ins    DWORD PTR es:[edi],dx
  402390:	leave  
  402391:	hlt    
  402392:	pusha  
  402393:	stos   BYTE PTR es:[edi],al
  402394:	sbb    DWORD PTR [eax+0x41],ecx
  402397:	xchg   DWORD PTR [edx-0x38ab51b1],edx
  40239d:	lea    edi,[ebp-0x325bf66]
  4023a3:	or     DWORD PTR [edi+eax*1+0x1d104305],0x7a073b62
  4023ae:	pop    edi
  4023af:	fld    DWORD PTR [ecx]
  4023b1:	lahf   
  4023b2:	ror    BYTE PTR [eax],1
  4023b4:	(bad)  
  4023b5:	imul   esp,DWORD PTR [eax-0x3d],0xfffffff2
  4023b9:	xchg   ecx,eax
  4023ba:	inc    esi
  4023bb:	pusha  
  4023bc:	mul    DWORD PTR [esi+edi*8-0x2122d8a4]
  4023c3:	hlt    
  4023c4:	sbb    al,BYTE PTR [edx-0x34]
  4023c7:	and    ecx,DWORD PTR cs:[eax+0x2cf06684]
  4023ce:	clc    
  4023cf:	es xor eax,0x16779a42
  4023d5:	jmp    FWORD PTR [ecx]
  4023d7:	pop    es
  4023d8:	sbb    DWORD PTR ds:0xa228e61f,ecx
  4023de:	test   BYTE PTR [edi-0x718f34e],dh
  4023e4:	cmp    eax,DWORD PTR [ebx]
  4023e6:	fnstsw WORD PTR [edx+eiz*4-0x2]
  4023ea:	xchg   eax,ecx
  4023ec:	mov    al,0x85
  4023ee:	enter  0xb959,0x1f
  4023f2:	out    0x58,al
  4023f4:	clc    
  4023f5:	sub    esp,DWORD PTR [ecx+0x3e295244]
  4023fb:	sub    dl,ah
  4023fd:	pop    DWORD PTR [edx]
  4023ff:	ds push ss
  402401:	into   
  402402:	or     bl,BYTE PTR [ecx+0x26]
  402405:	bound  ecx,QWORD PTR [ebx+edx*2-0x45]
  402409:	mov    ebx,0x2c24d0ec
  40240e:	push   ss
  40240f:	shr    bl,cl
  402411:	xor    eax,0x7a4843a8
  402416:	call   0xbfc:0x4ffe2761
  40241d:	bound  ebx,QWORD PTR [edx+0x4f]
  402420:	pop    ebx
  402421:	fcomp  QWORD PTR [ecx+0x38]
  402424:	(bad)  
  402426:	shl    DWORD PTR [ebx],1
  402428:	adc    DWORD PTR [ecx],esi
  40242a:	ins    BYTE PTR es:[edi],dx
  40242b:	inc    esp
  40242c:	mov    edx,esi
  40242e:	aad    0x4d
  402430:	xchg   ebx,eax
  402431:	or     ebp,DWORD PTR [edx+edx*8+0x6ad91adc]
  402438:	sbb    DWORD PTR gs:[ebx],esi
  40243b:	in     eax,dx
  40243c:	ins    DWORD PTR es:[edi],dx
  40243d:	int    0x46
  40243f:	mov    ch,0x8b
  402441:	adc    al,0x1
  402443:	push   es
  402444:	sub    ecx,edi
  402446:	icebp  
  402447:	mov    dh,0x38
  402449:	or     al,BYTE PTR [eax+0x47243532]
  40244f:	loop   0x4024c2
  402451:	pop    ecx
  402452:	mov    edx,0x31f96487
  402457:	mov    al,ds:0x91da4459
  40245c:	mov    ebx,DWORD PTR [ebx+0x6208e3d4]
  402462:	cwde   
  402463:	push   esi
  402464:	jp     0x402463
  402466:	inc    esi
  402467:	push   esp
  402468:	ins    BYTE PTR es:[edi],dx
  402469:	xor    BYTE PTR [eax-0x1e],dh
  40246c:	cwde   
  40246d:	scas   eax,DWORD PTR es:[edi]
  40246e:	popf   
  40246f:	in     al,0xb5
  402471:	aad    0xc0
  402473:	add    bl,BYTE PTR [edx+ebx*8]
  402476:	jmp    0x4308:0x68266208
  40247d:	mov    ecx,0x550b7651
  402482:	jo     0x4024ee
  402484:	in     al,dx
  402485:	js     0x40247e
  402487:	push   cs
  402488:	dec    edx
  402489:	into   
  40248a:	jmp    0xc207:0x19efae4
  402491:	out    0x2b,eax
  402493:	ror    edx,1
  402495:	xchg   BYTE PTR [edi+ebp*2+0x389ecd7a],ch
  40249c:	pop    ds
  40249d:	fs adc al,0x9a
  4024a0:	jb     0x402491
  4024a2:	and    BYTE PTR [esi+0x6a],dh
  4024a5:	ja     0x402510
  4024a7:	ret    
  4024a8:	adc    BYTE PTR [esi+0x1919d963],dh
  4024ae:	in     al,dx
  4024af:	aas    
  4024b0:	adc    dl,0xbb
  4024b3:	int    0x84
  4024b5:	dec    ebp
  4024b6:	sub    bl,dh
  4024b8:	in     al,0x9c
  4024ba:	std    
  4024bb:	aad    0xd7
  4024bd:	push   cs
  4024be:	(bad)  
  4024bf:	push   esi
  4024c0:	ins    BYTE PTR es:[edi],dx
  4024c1:	dec    esp
  4024c2:	jbe    0x402459
  4024c4:	fisttp WORD PTR [ecx+edi*1-0x11]
  4024c8:	shl    BYTE PTR [edi-0x49],1
  4024cb:	and    ebp,DWORD PTR [ecx+0x2ff9d225]
  4024d1:	mov    ebx,0xcd3ee13e
  4024d6:	mov    bh,0x65
  4024d8:	add    BYTE PTR ds:0xa10ca0b6,dl
  4024de:	sub    DWORD PTR [ebp-0x6870278c],ebp
  4024e4:	cmp    dl,BYTE PTR [esi+0x27]
  4024e7:	push   edi
  4024e8:	dec    edi
  4024e9:	sub    DWORD PTR [edx-0x21f4fc11],0xb6d57f41
  4024f3:	dec    edi
  4024f4:	lods   eax,DWORD PTR ds:[esi]
  4024f5:	mov    ebx,0x9c9423be
  4024fa:	test   al,0x32
  4024fc:	dec    edx
  4024fd:	(bad)  
  4024fe:	in     al,dx
  4024ff:	test   eax,0x1734aef8
  402504:	hlt    
  402505:	cmp    BYTE PTR [edx+ebx*8-0x54],bh
  402509:	sub    DWORD PTR [ebp+0x19],edi
  40250c:	inc    edx
  40250d:	mov    dh,0x84
  40250f:	jne    0x4024a0
  402511:	rcr    ebx,cl
  402513:	shl    BYTE PTR [edi+edx*2+0x1b2b5b14],0x12
  40251b:	pop    ds
  40251c:	mov    eax,0xe1eee6a7
  402521:	mov    DWORD PTR ds:0x33a9fdd1,esi
  402527:	fsubr  st,st(5)
  402529:	loop   0x402556
  40252b:	mov    ecx,0x531b477c
  402530:	xchg   BYTE PTR [bp+si+0x2d00],al
  402535:	cwde   
  402536:	ins    DWORD PTR es:[edi],dx
  402537:	(bad)  
  402538:	dec    eax
  402539:	outs   dx,DWORD PTR ds:[esi]
  40253a:	inc    ebx
  40253b:	lods   eax,DWORD PTR ds:[esi]
  40253c:	pop    ds
  40253d:	jecxz  0x40250a
  40253f:	and    DWORD PTR [ecx],edi
  402541:	repz mov bh,0x4d
  402544:	sub    ecx,DWORD PTR [ebx-0x5]
  402547:	ss sahf 
  402549:	push   ss
  40254a:	push   edx
  40254b:	xor    DWORD PTR [edi-0x16979470],ecx
  402551:	and    eax,0xf9b8abb6
  402556:	jo     0x40250e
  402558:	out    dx,al
  402559:	addr16 call 0x7f7e0293
  40255f:	enter  0x1768,0x8c
  402563:	out    dx,al
  402564:	int3   
  402565:	cmp    al,0xf8
  402567:	xor    BYTE PTR [edi],bh
  402569:	into   
  40256a:	adc    al,0x37
  40256c:	scas   eax,DWORD PTR es:[edi]
  40256d:	jae    0x4025ba
  40256f:	sbb    ah,dl
  402571:	lea    esp,[bp+si-0x2f]
  402575:	int    0x6b
  402577:	mov    edi,0xb8d8d8f
  40257c:	loope  0x4025c4
  40257e:	pusha  
  40257f:	pop    eax
  402580:	dec    esi
  402581:	aad    0xd7
  402583:	js     0x40258c
  402585:	imul   esp,DWORD PTR [ebx-0x17],0xdca7d77d
  40258c:	int    0x1
  40258e:	clc    
  40258f:	cwde   
  402590:	sbb    bl,BYTE PTR [edx]
  402592:	sti    
  402593:	clc    
  402594:	mov    edx,0x7d673790
  402599:	repz das 
  40259b:	mov    bh,BYTE PTR [edx]
  40259d:	push   edx
  40259e:	push   edx
  40259f:	mov    edi,0xdf003a57
  4025a4:	aad    0x7f
  4025a6:	test   al,0x4f
  4025a8:	out    dx,eax
  4025a9:	and    eax,0x1981486d
  4025ae:	lods   eax,DWORD PTR ds:[esi]
  4025af:	repnz leave 
  4025b1:	in     al,0xf4
  4025b3:	into   
  4025b4:	fimul  DWORD PTR [eax-0x98e1a63]
  4025ba:	cmp    BYTE PTR [edi+eax*1],0x14
  4025be:	rol    cl,0x27
  4025c1:	gs dec esi
  4025c3:	inc    ebp
  4025c4:	dec    ebp
  4025c5:	and    ah,BYTE PTR [esi+0x9]
  4025c8:	int3   
  4025c9:	(bad)  
  4025cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025cc:	sub    esp,0x95671d
  4025d2:	xchg   ebp,eax
  4025d3:	cmp    al,BYTE PTR [edi-0x7f]
  4025d6:	push   edi
  4025d7:	mov    eax,0xf72c8e91
  4025dc:	mov    al,0x44
  4025de:	xor    eax,0xa4b20493
  4025e3:	push   0xffffffae
  4025e5:	sub    al,0xdc
  4025e7:	adc    eax,0x29b48caf
  4025ec:	pushf  
  4025ed:	jb     0x402595
  4025ef:	leave  
  4025f0:	mov    WORD PTR [esi-0x2be1431e],?
  4025f6:	cld    
  4025f7:	inc    eax
  4025f8:	mov    edx,0x1764879b
  4025fd:	icebp  
  4025fe:	out    0xb2,al
  402600:	pushf  
  402601:	popa   
  402602:	sbb    eax,edx
  402604:	lods   eax,DWORD PTR ds:[esi]
  402605:	jmp    0x6189:0xd642396a
  40260c:	je     0x40263d
  40260e:	sub    dl,BYTE PTR [ecx-0x31]
  402611:	jne    0x402619
  402613:	push   edx
  402614:	repnz test al,0x27
  402617:	aas    
  402618:	cmp    esi,esp
  40261a:	js     0x40264a
  40261c:	dec    esp
  40261d:	mov    bh,0x14
  40261f:	cmp    eax,0x465c677c
  402624:	mov    DWORD PTR [esi-0x2bd338a0],edx
  40262a:	ret    0x5143
  40262d:	mov    ecx,0xf8bb44fd
  402632:	sbb    al,0x49
  402634:	(bad)  [ebx]
  402636:	loop   0x402658
  402638:	fwait
  402639:	cli    
  40263a:	lea    ebx,[eax]
  40263c:	or     BYTE PTR [eax+0x32],ah
  40263f:	mov    gs,WORD PTR [edx+0x40e34865]
  402645:	in     eax,dx
  402646:	iret   
  402647:	enter  0xb772,0x15
  40264b:	and    BYTE PTR [edi-0x12be7cb2],ch
  402651:	mov    edx,0x5011694f
  402656:	adc    DWORD PTR [ecx],edi
  402658:	push   edi
  402659:	sbb    BYTE PTR [ebx],0x13
  40265c:	dec    esp
  40265d:	and    al,0xe2
  40265f:	loope  0x4026d4
  402661:	iret   
  402662:	(bad)  
  402663:	mov    ds:0x58365594,eax
  402668:	inc    ebp
  402669:	jle    0x4026d4
  40266b:	or     DWORD PTR [edi+edi*8-0x729f7caa],eax
  402672:	sbb    DWORD PTR ds:0xd3879b42,esp
  402678:	dec    ebp
  402679:	(bad)  
  40267a:	cmp    eax,0x73639d40
  40267f:	sbb    BYTE PTR [edx-0x5a],al
  402682:	(bad)  
  402683:	mov    ah,0x5d
  402685:	(bad)  
  402686:	les    eax,FWORD PTR [edi]
  402688:	(bad)  
  402689:	out    dx,al
  40268a:	sub    DWORD PTR [esi],ecx
  40268c:	icebp  
  40268d:	and    BYTE PTR [edx+esi*2+0x17],cl
  402691:	lea    ebx,es:[esi-0x2e]
  402695:	sahf   
  402696:	test   DWORD PTR [esp+ebx*1-0x41],ecx
  40269a:	je     0x402643
  40269c:	push   esi
  40269d:	dec    edi
  40269e:	(bad)  
  40269f:	pusha  
  4026a0:	daa    
  4026a1:	ret    0x86b4
  4026a4:	(bad)  
  4026a5:	mov    ch,0xba
  4026a7:	out    dx,eax
  4026a8:	(bad)  
  4026aa:	mov    edi,gs
  4026ac:	pop    ebp
  4026ad:	mov    edi,0x30a790a
  4026b2:	jo     0x40263e
  4026b4:	inc    ecx
  4026b5:	lock cdq 
  4026b7:	jmp    FWORD PTR [edx-0x7567babb]
  4026bd:	popf   
  4026be:	adc    dh,BYTE PTR [esi+0x6d917145]
  4026c4:	pop    ds
  4026c5:	scas   al,BYTE PTR es:[edi]
  4026c6:	add    DWORD PTR [esi-0x26be2d1d],ecx
  4026cc:	mov    eax,ds:0x11aeab80
  4026d1:	ret    0x8bfe
  4026d4:	das    
  4026d5:	lods   eax,DWORD PTR ds:[esi]
  4026d6:	retf   
  4026d7:	leave  
  4026d8:	and    ebp,DWORD PTR [ecx]
  4026da:	and    al,0x95
  4026dc:	aas    
  4026dd:	dec    edi
  4026de:	cwde   
  4026df:	repnz push 0x3753963c
  4026e5:	je     0x402675
  4026e7:	ja     0x4026ec
  4026e9:	mov    eax,0x92791d64
  4026ee:	js     0x40267a
  4026f0:	mov    ds:0x2a7e0d3d,al
  4026f5:	fs add eax,0x1e4c01ab
  4026fb:	sub    bl,ah
  4026fd:	xchg   esp,eax
  4026fe:	mov    dh,0xfa
  402700:	push   esp
  402701:	out    dx,al
  402702:	xchg   edi,eax
  402703:	cmc    
  402704:	popf   
  402705:	push   esp
  402706:	pushfw 
  402708:	sbb    eax,0x7a3ce679
  40270d:	or     DWORD PTR [edi+ebx*4-0x21611655],0xffffffeb
  402715:	ret    0x9757
  402718:	mov    gs,WORD PTR [ecx]
  40271a:	dec    ebp
  40271b:	push   edx
  40271c:	xchg   edi,eax
  40271d:	pushf  
  40271e:	xor    eax,0x713ea549
  402723:	jo     0x402716
  402725:	mov    esi,0x3ca6d3c7
  40272a:	in     eax,0x27
  40272c:	pop    esp
  40272d:	not    BYTE PTR [ebp-0x474d78c]
  402733:	call   0xc01fb754
  402738:	(bad)  
  402739:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40273a:	inc    eax
  40273b:	mov    al,ds:0x6f935996
  402740:	mov    esi,0xc78a3824
  402745:	sbb    al,0x73
  402747:	outs   dx,DWORD PTR ds:[esi]
  402748:	lahf   
  402749:	jb     0x40279c
  40274b:	sub    BYTE PTR [edi+ebx*1+0x1d],al
  40274f:	push   edi
  402750:	pop    es
  402751:	ins    DWORD PTR es:[edi],dx
  402752:	jns    0x402729
  402754:	loopne 0x402710
  402756:	mov    al,0xc0
  402758:	jg     0x4027d5
  40275a:	pusha  
  40275b:	pop    ecx
  40275c:	cmp    BYTE PTR [ecx-0x13ef1ff9],dh
  402762:	imul   esi,ebp,0xdb524f2f
  402768:	gs repz push 0x9a979d93
  40276f:	es mov edx,0x790c5406
  402775:	push   edi
  402776:	aaa    
  402777:	fist   WORD PTR [eax-0x2a51dc6f]
  40277d:	dec    ebx
  40277e:	minps  xmm4,XMMWORD PTR [edx+0x6ab68615]
  402785:	daa    
  402786:	rcl    DWORD PTR [ebx+0x54],0x7f
  40278a:	xchg   ebx,eax
  40278b:	and    edx,DWORD PTR [esi-0x6b]
  40278e:	inc    edx
  40278f:	daa    
  402790:	popf   
  402791:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402792:	ret    0x1852
  402795:	adc    eax,0x3dbdac54
  40279a:	pop    ss
  40279b:	sub    al,0x26
  40279d:	pop    eax
  40279e:	sbb    al,0xc
  4027a0:	ins    DWORD PTR es:[edi],dx
  4027a1:	mov    DWORD PTR [edi],ecx
  4027a3:	mov    ds:0xdd386cfb,al
  4027a8:	repnz lahf 
  4027aa:	fisttp WORD PTR [ecx+0x6b]
  4027ad:	fisttp WORD PTR [edi+esi*1+0x24e73939]
  4027b4:	push   ss
  4027b5:	mov    ah,0x3f
  4027b7:	push   ds
  4027b8:	imul   edx,DWORD PTR [edx+0x7a010450],0x639b37a1
  4027c2:	inc    ebx
  4027c3:	mov    bl,0x24
  4027c5:	inc    esi
  4027c6:	jae    0x402833
  4027c8:	sahf   
  4027c9:	cmc    
  4027ca:	adc    BYTE PTR [eax-0x55],bh
  4027cd:	xor    eax,0xa4753659
  4027d2:	xchg   ecx,eax
  4027d3:	mov    cl,bh
  4027d5:	add    al,0x3f
  4027d7:	add    DWORD PTR [ecx],0xffffffcb
  4027da:	lds    esi,FWORD PTR [ecx-0x42]
  4027dd:	neg    DWORD PTR [edi-0x35]
  4027e0:	mov    al,dl
  4027e2:	out    dx,al
  4027e3:	and    bh,BYTE PTR [ebp+0x6c]
  4027e6:	ret    
  4027e7:	mov    bl,0xdd
  4027e9:	pop    ebx
  4027ea:	pop    edx
  4027eb:	dec    ebx
  4027ec:	push   esp
  4027ed:	adc    ah,ah
  4027ef:	fsub   QWORD PTR [edi+0x56]
  4027f2:	(bad)  
  4027f4:	int3   
  4027f5:	sub    ch,BYTE PTR [edx+0x281ed6f9]
  4027fb:	out    dx,eax
  4027fc:	das    
  4027fd:	inc    eax
  4027fe:	ds imul ebp,edx,0xffffffd5
  402802:	xchg   edx,eax
  402803:	sbb    cl,cl
  402805:	and    ecx,DWORD PTR [esi-0x530ecccc]
  40280b:	jae    0x40285d
  40280d:	jne    0x40287c
  40280f:	or     DWORD PTR [ecx-0x2b],0xffffff84
  402813:	cs rcr dh,1
  402816:	jo     0x40285b
  402818:	dec    esi
  402819:	sbb    ebx,0x30154a1c
  40281f:	and    edx,DWORD PTR [ecx+ecx*2]
  402822:	push   eax
  402823:	icebp  
  402824:	cmp    al,0x3c
  402826:	scas   al,BYTE PTR es:[edi]
  402827:	cmp    DWORD PTR [ecx-0x4f],esi
  40282a:	icebp  
  40282b:	inc    ecx
  40282c:	scas   eax,DWORD PTR es:[edi]
  40282d:	sub    eax,0xfd0867e6
  402832:	jmp    0x402859
  402834:	nop
  402835:	ins    BYTE PTR es:[edi],dx
  402836:	mov    eax,ds:0xff0138a7
  40283b:	in     al,dx
  40283c:	jne    0x4027cc
  40283e:	aaa    
  40283f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402840:	out    dx,al
  402841:	inc    ebp
  402842:	push   eax
  402843:	mov    BYTE PTR [edx],dh
  402845:	out    0x2b,eax
  402847:	in     al,0xe9
  402849:	pop    edx
  40284a:	mov    dl,dh
  40284c:	xchg   BYTE PTR [eax+ebp*4+0x51],bh
  402850:	pop    edi
  402851:	lods   al,BYTE PTR ds:[esi]
  402852:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402853:	push   0x27d8f323
  402858:	push   0x4a
  40285a:	sub    ecx,DWORD PTR [ecx]
  40285c:	int3   
  40285d:	int    0xe
  40285f:	hlt    
  402860:	sub    eax,0x3db82f73
  402865:	mov    WORD PTR [ecx+0x6ae1e840],fs
  40286b:	loop   0x402839
  40286d:	push   ebx
  40286e:	das    
  40286f:	sbb    DWORD PTR [edi+ecx*8+0x4e],eax
  402873:	dec    esi
  402874:	push   ss
  402875:	(bad)  
  402877:	into   
  402878:	jae    0x4028dd
  40287a:	ins    BYTE PTR es:[edi],dx
  40287b:	nop    esi
  40287e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40287f:	cmp    eax,0xacb65858
  402884:	add    cl,BYTE PTR [eax-0x16]
  402887:	and    BYTE PTR [ebx+ebx*1-0x70801f8d],ch
  40288e:	dec    eax
  40288f:	and    BYTE PTR [esi-0x605c35cd],bh
  402895:	jns    0x402820
  402897:	mov    bh,0xec
  402899:	push   esp
  40289a:	xchg   DWORD PTR [ebx-0x67e449cd],ebx
  4028a0:	or     al,0xe8
  4028a2:	daa    
  4028a3:	mov    al,0xf3
  4028a5:	repz sbb dl,bl
  4028a8:	mov    dh,0x45
  4028aa:	sbb    al,0xd7
  4028ac:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028ae:	ret    0xcee5
  4028b1:	aad    0x7a
  4028b3:	fild   QWORD PTR [ecx+0x1f]
  4028b6:	jns    0x402846
  4028b8:	ret    0x779e
  4028bb:	fmul   DWORD PTR [edx]
  4028bd:	imul   ecx,DWORD PTR [ebp-0x77],0xffffff89
  4028c1:	xchg   edi,eax
  4028c2:	dec    edi
  4028c3:	mov    ch,BYTE PTR [eax-0x7c8bb2c0]
  4028c9:	dec    esi
  4028ca:	ret    
  4028cb:	or     esi,DWORD PTR [eax]
  4028cd:	fstp   QWORD PTR [edx-0x14cf65d]
  4028d3:	add    dl,BYTE PTR [edx]
  4028d5:	aam    0x12
  4028d7:	fldcw  WORD PTR [ecx-0xdccef95]
  4028dd:	out    0x6d,eax
  4028df:	push   ds
  4028e0:	scas   al,BYTE PTR es:[edi]
  4028e1:	or     eax,0x463ccda8
  4028e6:	lods   eax,DWORD PTR ds:[esi]
  4028e7:	arpl   WORD PTR ds:0x480372b7,si
  4028ed:	scas   al,BYTE PTR es:[edi]
  4028ee:	dec    eax
  4028ef:	aaa    
  4028f0:	fimul  WORD PTR [eax+edx*4]
  4028f3:	cdq    
  4028f4:	and    al,0x65
  4028f6:	pusha  
  4028f7:	lds    ebx,FWORD PTR [ebx-0x3776b8fc]
  4028fd:	lods   eax,DWORD PTR ds:[esi]
  4028fe:	out    0xea,eax
  402900:	into   
  402901:	xor    cl,BYTE PTR fs:[ecx-0xabfa925]
  402908:	inc    ecx
  402909:	dec    edx
  40290a:	jne    0x4028c6
  40290c:	push   es
  40290d:	add    cl,BYTE PTR [ebx-0x4ff2b5b4]
  402913:	sub    DWORD PTR [edi+eax*1+0x37203f1d],edi
  40291a:	xchg   BYTE PTR [eax-0x11fe8262],bh
  402920:	stos   BYTE PTR es:[edi],al
  402921:	repz push ss
  402923:	jns    0x402908
  402925:	mov    esp,0x90192b01
  40292a:	or     al,0x87
  40292c:	push   0x2691ea39
  402931:	pop    esp
  402932:	or     DWORD PTR [ecx+0x55],0xa0a8e0a
  402939:	test   eax,esi
  40293b:	pop    es
  40293c:	and    dh,dh
  40293e:	xchg   ecx,eax
  40293f:	cwde   
  402940:	(bad)  
  402941:	ss jmp 0xc1af:0x64446698
  402949:	pop    es
  40294a:	mov    edi,0xa33026fb
  40294f:	jbe    0x4029c8
  402951:	sub    BYTE PTR [eax-0x76dc854],dh
  402957:	loopne 0x402934
  402959:	das    
  40295a:	repz push ebp
  40295c:	jnp    0x4029b3
  40295e:	rcl    DWORD PTR [ebp+0x71992ad0],cl
  402964:	mov    esi,0xa9d87b6d
  402969:	sahf   
  40296a:	inc    ecx
  40296b:	pop    edi
  40296c:	mov    al,0x8e
  40296e:	je     0x4029c9
  402970:	bound  ecx,QWORD PTR [edi+0x70]
  402973:	(bad)  
  402974:	jp     0x402937
  402976:	aaa    
  402977:	retf   0x4175
  40297a:	or     BYTE PTR [edi-0x24702912],bl
  402980:	xor    dl,dh
  402982:	xor    dl,BYTE PTR [ebx]
  402984:	pushf  
  402985:	xchg   ebp,eax
  402986:	push   esi
  402987:	daa    
  402988:	rol    BYTE PTR [ecx],1
  40298a:	dec    ecx
  40298b:	lods   eax,DWORD PTR ds:[esi]
  40298c:	xlat   BYTE PTR ds:[ebx]
  40298e:	pop    ebp
  40298f:	fwait
  402990:	mov    esp,0x662a768f
  402995:	adc    ebx,edx
  402997:	les    edx,FWORD PTR [ebp+edi*8+0x7b7bf981]
  40299e:	xchg   edx,eax
  40299f:	sub    esp,eax
  4029a1:	stc    
  4029a2:	mov    esp,0x257d2f25
  4029a7:	mov    ds:0xd043230a,eax
  4029ac:	pop    eax
  4029ad:	or     DWORD PTR [ecx],esp
  4029af:	pop    ebp
  4029b0:	fldenv [ebp+0x77]
  4029b3:	ins    BYTE PTR es:[edi],dx
  4029b4:	sub    eax,0xca3b5f82
  4029b9:	add    ah,bh
  4029bb:	loopne 0x402a26
  4029bd:	mov    cl,0x8c
  4029bf:	les    esp,FWORD PTR [edx]
  4029c1:	pop    edx
  4029c2:	leave  
  4029c3:	xchg   dh,cl
  4029c5:	inc    ebp
  4029c6:	dec    edi
  4029c7:	aad    0x44
  4029c9:	mov    ds:0xa4987564,eax
  4029ce:	outs   dx,BYTE PTR ds:[esi]
  4029cf:	jns    0x402984
  4029d1:	popa   
  4029d2:	dec    edi
  4029d3:	fwait
  4029d4:	xor    DWORD PTR [edi-0x7bd59a15],esi
  4029da:	xchg   ecx,eax
  4029db:	fcom   st(0)
  4029dd:	mov    cl,0x79
  4029df:	inc    ebp
  4029e0:	sbb    BYTE PTR [ebx],ah
  4029e2:	ins    DWORD PTR es:[edi],dx
  4029e3:	add    dh,dh
  4029e5:	mov    cl,al
  4029e7:	xor    DWORD PTR [eax],edi
  4029e9:	or     BYTE PTR [ebx-0x396fe242],bl
  4029ef:	cmp    eax,esi
  4029f1:	shl    DWORD PTR [ebp+0x68589992],cl
  4029f7:	push   edi
  4029f8:	push   0xafb7b155
  4029fd:	sub    al,0x24
  4029ff:	gs repz pop edi
  402a02:	shr    BYTE PTR [ebx-0x33],0xcb
  402a06:	cs inc esp
  402a08:	cmp    al,BYTE PTR [edi-0x48]
  402a0b:	mov    dh,0xdd
  402a0d:	gs in  al,0x9e
  402a10:	mov    bl,0x77
  402a12:	fs scas al,BYTE PTR es:[edi]
  402a14:	in     eax,dx
  402a15:	(bad)  
  402a16:	les    eax,FWORD PTR [esi]
  402a18:	adc    eax,0x97c8804b
  402a1d:	jnp    0x4029b2
  402a1f:	adc    DWORD PTR [esi-0x2c],ebp
  402a22:	mov    ss,WORD PTR [edi]
  402a24:	jns    0x402a45
  402a26:	sbb    DWORD PTR [ebp+0x1e],ebx
  402a29:	pop    edi
  402a2a:	pop    ds
  402a2b:	add    BYTE PTR [eax+0x12],bl
  402a2e:	outs   dx,BYTE PTR ds:[esi]
  402a2f:	mov    ebx,0x9bbb1a09
  402a34:	enter  0xe251,0xe6
  402a38:	add    DWORD PTR [esi+0x566ec9b9],edx
  402a3e:	loopne 0x402a76
  402a40:	fist   DWORD PTR ss:[ebp-0x7c0d9eea]
  402a47:	jb     0x402a7d
  402a49:	fadd   DWORD PTR [edx-0x5e10e093]
  402a4f:	dec    eax
  402a50:	mov    ss,WORD PTR [ebp+eiz*4+0x5804d6d1]
  402a57:	gs add eax,0x59e815fe
  402a5d:	jo     0x402a4c
  402a5f:	arpl   WORD PTR [edx+0x20],cx
  402a62:	cmp    ebx,DWORD PTR cs:[edx]
  402a65:	int3   
  402a66:	retf   0x620f
  402a69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a6a:	lock xor DWORD PTR [ecx+0x57],eax
  402a6e:	push   ecx
  402a6f:	inc    ecx
  402a70:	push   ss
  402a71:	in     eax,dx
  402a72:	sub    esi,0x74dda4d1
  402a78:	and    ecx,DWORD PTR [edx+0x1f]
  402a7b:	pop    eax
  402a7c:	ins    DWORD PTR es:[edi],dx
  402a7d:	xchg   ebx,ebx
  402a7f:	adc    esi,eax
  402a81:	add    dl,ch
  402a83:	lea    eax,[ebp+0x12af5894]
  402a89:	jecxz  0x402a4e
  402a8b:	rcl    BYTE PTR [esi+esi*1+0xd],0x4f
  402a90:	pop    ecx
  402a91:	dec    eax
  402a92:	je     0x402ae0
  402a94:	(bad)  
  402a95:	retf   0xd820
  402a98:	jp     0x402a6d
  402a9a:	add    al,0x4f
  402a9c:	ret    
  402a9d:	mov    dl,0x6d
  402a9f:	test   eax,0x43d931c9
  402aa4:	test   BYTE PTR [esi+0x45],bl
  402aa7:	into   
  402aa8:	cmp    ah,dh
  402aaa:	sbb    DWORD PTR [ebx+0x4bc85f54],esp
  402ab0:	and    BYTE PTR [ecx],0xcf
  402ab3:	enter  0xf6aa,0x5c
  402ab7:	dec    eax
  402ab8:	outs   dx,BYTE PTR ds:[esi]
  402ab9:	iret   
  402aba:	adc    dl,bh
  402abc:	and    BYTE PTR [esi-0x28],cl
  402abf:	arpl   WORD PTR [eax+0x29e1768c],ax
  402ac5:	loop   0x402a8f
  402ac7:	pop    edi
  402ac8:	mov    ds:0xbd7a87c8,al
  402acd:	jp     0x402a57
  402acf:	aas    
  402ad0:	lods   eax,DWORD PTR ds:[esi]
  402ad1:	inc    ebp
  402ad2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ad3:	dec    esp
  402ad4:	and    DWORD PTR [edi-0x3a],0x70
  402ad8:	or     DWORD PTR [ebp-0x38],ebp
  402adb:	xor    ch,al
  402add:	cmp    DWORD PTR [edx+0x6b],eax
  402ae0:	xchg   edx,eax
  402ae1:	xor    dl,BYTE PTR [ebp+edi*4+0x10]
  402ae5:	and    eax,DWORD PTR [edi]
  402ae7:	inc    ebx
  402ae8:	mov    ds,WORD PTR [edi+0x6c]
  402aeb:	xchg   esi,eax
  402aec:	fiadd  DWORD PTR [esi]
  402aee:	aaa    
  402aef:	push   ss
  402af0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402af1:	and    eax,ebx
  402af3:	les    esi,FWORD PTR [ecx]
  402af5:	xor    eax,0xbe744097
  402afa:	loope  0x402af7
  402afc:	daa    
  402afd:	jne    0x402b14
  402aff:	scas   eax,DWORD PTR es:[edi]
  402b00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b01:	mov    edi,0x6a759c91
  402b06:	stos   DWORD PTR es:[edi],eax
  402b07:	pusha  
  402b08:	add    ch,ah
  402b0a:	aaa    
  402b0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b0c:	pop    edx
  402b0d:	pop    ecx
  402b0e:	sub    DWORD PTR [ebx+0x3c],0x24
  402b12:	loopne 0x402b22
  402b14:	mov    cl,0x30
  402b16:	mov    ?,WORD PTR [edx-0x26]
  402b19:	ins    BYTE PTR es:[edi],dx
  402b1a:	sub    BYTE PTR [ecx+0x39f1a0c7],al
  402b20:	inc    edi
  402b21:	add    al,0xdb
  402b23:	cmp    eax,0x3fbd61b0
  402b28:	daa    
  402b29:	add    eax,DWORD PTR cs:[edx]
  402b2c:	leave  
  402b2d:	or     BYTE PTR [ebx-0x7f],bh
  402b30:	in     al,dx
  402b31:	or     DWORD PTR [esi+0x6],ebp
  402b34:	pop    ss
  402b35:	xor    ebx,DWORD PTR [eax]
  402b37:	jne    0x402ad0
  402b39:	ss mov ebp,0x42544425
  402b3f:	mov    eax,ds:0x451172e1
  402b44:	pop    esi
  402b45:	or     DWORD PTR [esp+esi*1],esi
  402b48:	dec    ebp
  402b4a:	outs   dx,BYTE PTR ds:[esi]
  402b4b:	pop    ebp
  402b4c:	jae    0x402b10
  402b4e:	dec    edi
  402b4f:	ss in  al,0x37
  402b52:	iret   
  402b53:	nop
  402b54:	loopne 0x402b6f
  402b56:	nop
  402b57:	mov    eax,DWORD PTR [esi+ebp*1-0x68]
  402b5b:	dec    esp
  402b5c:	pop    esp
  402b5d:	in     al,dx
  402b5e:	xor    ebp,DWORD PTR [ebx]
  402b60:	mov    ecx,0xfe258e6b
  402b65:	ds jp  0x402b07
  402b68:	xor    al,ah
  402b6a:	adc    al,0xfc
  402b6c:	out    dx,eax
  402b6d:	ins    BYTE PTR es:[edi],dx
  402b6e:	mov    edi,0xec61504e
  402b73:	xor    al,0xc3
  402b75:	ss cli 
  402b77:	ror    BYTE PTR [edi],0xcb
  402b7a:	pop    esi
  402b7b:	call   0xc8a2eb8c
  402b80:	sub    BYTE PTR [esp+ebp*4-0xf58b2df],ah
  402b87:	sub    edi,esi
  402b89:	pusha  
  402b8a:	mov    dl,0xdc
  402b8c:	pop    edx
  402b8d:	push   edx
  402b8e:	fwait
  402b8f:	mov    DWORD PTR [ebp+0x20],esi
  402b92:	push   eax
  402b93:	xchg   esp,eax
  402b94:	pop    ds
  402b95:	hlt    
  402b96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b97:	cmp    DWORD PTR [eax+0x2ae397b1],esp
  402b9d:	and    DWORD PTR [esi+0x48],ebp
  402ba0:	cmp    ah,ch
  402ba2:	(bad)  
  402ba3:	cli    
  402ba4:	xchg   edx,eax
  402ba5:	adc    ecx,0x10
  402ba8:	mov    cs,edi
  402baa:	cmp    DWORD PTR [esi-0x225f9ac1],ecx
  402bb0:	retf   
  402bb1:	sti    
  402bb2:	xchg   DWORD PTR [eax+0x60],esi
  402bb5:	retf   
  402bb6:	sti    
  402bb7:	adc    ecx,0xd91e0ac7
  402bbd:	int    0xc3
  402bbf:	pop    esp
  402bc0:	xchg   esp,eax
  402bc1:	inc    eax
  402bc2:	pop    ecx
  402bc3:	int    0x97
  402bc5:	pop    eax
  402bc6:	add    al,0x48
  402bc8:	pop    es
  402bc9:	aad    0x87
  402bcb:	mov    ch,0x12
  402bcd:	push   ss
  402bce:	mov    cl,0x79
  402bd0:	in     eax,0xb2
  402bd2:	cmp    al,0x82
  402bd4:	inc    eax
  402bd5:	cwde   
  402bd6:	test   DWORD PTR ds:0xa19ae3d4,eax
  402bdc:	(bad)
  402bdf:	cli    
  402be0:	adc    DWORD PTR [ebx-0x2c718ff7],0x19bd7bf2
  402bea:	test   eax,0xc34e1f4c
  402bef:	sbb    bh,BYTE PTR [edi-0x2ff867b3]
  402bf5:	pop    es
  402bf6:	and    al,0x8c
  402bf8:	cmp    dl,BYTE PTR fs:[ecx]
  402bfb:	pushf  
  402bfc:	sbb    eax,0x54d07c8a
  402c01:	add    BYTE PTR [ebp-0x57],cl
  402c04:	and    al,0x1f
  402c06:	xchg   esp,eax
  402c07:	xor    eax,0xc49a7be6
  402c0c:	sub    BYTE PTR [esi+0x2dfcc089],ah
  402c12:	gs cdq 
  402c14:	and    eax,DWORD PTR [edx]
  402c16:	push   edi
  402c17:	pop    esp
  402c18:	xchg   edi,eax
  402c19:	or     eax,0xe3ec69c8
  402c1e:	mov    edx,0xa1ceb4c7
  402c23:	mov    ds:0xbe88d49c,al
  402c28:	inc    DWORD PTR [eax+0x19]
  402c2b:	lods   eax,DWORD PTR ds:[esi]
  402c2c:	mov    al,0xfd
  402c2e:	pop    ds
  402c2f:	mov    cl,0x6d
  402c31:	cmp    edi,DWORD PTR [ebp+0x6e]
  402c34:	daa    
  402c35:	cmp    BYTE PTR [esi-0x6d],ah
  402c38:	bound  esi,QWORD PTR [edi]
  402c3a:	lock sbb dl,dl
  402c3d:	add    esi,ebx
  402c3f:	in     eax,0xce
  402c41:	jl     0x402c24
  402c43:	sub    dl,BYTE PTR [eax-0x24e4f985]
  402c49:	cli    
  402c4a:	jno    0x402cb9
  402c4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c4d:	jmp    0x402bd7
  402c4f:	pop    ss
  402c50:	rol    BYTE PTR [ebp-0x479d24da],cl
  402c56:	jne    0x402bfd
  402c58:	or     BYTE PTR [ebx],dl
  402c5a:	test   eax,0xda885f53
  402c5f:	je     0x402c31
  402c61:	or     BYTE PTR [edi+0x6f32b0b1],0x35
  402c68:	(bad)  
  402c69:	xchg   edx,eax
  402c6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c6b:	out    0xf7,al
  402c6d:	mov    edx,0xdf1982c8
  402c72:	fstp   QWORD PTR [eax+ecx*8+0x7c]
  402c76:	test   al,0xd4
  402c78:	pop    esi
  402c79:	pop    esp
  402c7a:	mov    fs,WORD PTR [edx]
  402c7c:	jns    0x402c42
  402c7e:	sub    esp,DWORD PTR [eax+0x2b99304]
  402c84:	test   eax,0x76277e7c
  402c89:	mov    ebp,0x752d9064
  402c8e:	push   0xffffffa6
  402c90:	sti    
  402c91:	adc    al,0x51
  402c93:	rcr    ebp,0xfe
  402c96:	xor    BYTE PTR [eax+0x50],bh
  402c99:	mov    ebx,0xd3a00eea
  402c9e:	sub    al,0xa5
  402ca0:	xor    cl,BYTE PTR [ecx+0x37adea00]
  402ca6:	mov    dh,0x5
  402ca8:	sub    esp,DWORD PTR [ecx]
  402caa:	sti    
  402cab:	aas    
  402cac:	mov    ah,0x90
  402cae:	push   edi
  402caf:	daa    
  402cb0:	ins    DWORD PTR es:[edi],dx
  402cb1:	or     eax,0xc6b7edc8
  402cb6:	nop
  402cb7:	sub    eax,0xd072e34e
  402cbc:	fdivr  QWORD PTR [ebx-0x62080dd7]
  402cc2:	data16 es cmc 
  402cc5:	leave  
  402cc6:	ds nop
  402cc8:	cmp    eax,0x1882b20b
  402ccd:	or     dl,BYTE PTR [edx-0x3dd4d08c]
  402cd3:	mov    esi,0x7e4f47dd
  402cd8:	sub    DWORD PTR [edx-0x599de8c0],esp
  402cde:	outs   dx,DWORD PTR ds:[esi]
  402cdf:	sbb    eax,0xad06f518
  402ce4:	mov    dl,0xa6
  402ce6:	jns    0x402d21
  402ce8:	pop    ds
  402ce9:	adc    ax,0x7578
  402ced:	or     eax,0xecf738e0
  402cf2:	fcom   QWORD PTR [ecx+esi*2-0x53]
  402cf6:	scas   eax,DWORD PTR es:[edi]
  402cf7:	mov    dh,0x78
  402cf9:	shl    DWORD PTR [ecx-0x3e613e89],1
  402cff:	leave  
  402d00:	sbb    ebp,DWORD PTR [ebx+0x513f57d1]
  402d06:	and    al,BYTE PTR [ebx+edi*1-0x1e]
  402d0a:	dec    esp
  402d0b:	pop    ds
  402d0c:	sbb    ah,dl
  402d0e:	jae    0x402cce
  402d10:	mov    ecx,0x7df567ec
  402d15:	pusha  
  402d16:	cli    
  402d17:	(bad)  
  402d18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d19:	mov    ebp,0x7c815a4e
  402d1e:	add    ch,bh
  402d20:	fadd   QWORD PTR [ebx+edi*2+0x128881cc]
  402d27:	or     BYTE PTR [ecx],0xaf
  402d2a:	push   esp
  402d2b:	psrld  mm1,mm0
  402d2e:	aad    0xd3
  402d30:	mov    esi,0xf523a90
  402d35:	out    dx,al
  402d36:	or     DWORD PTR [edi+0x4e823193],0x47
  402d3d:	cli    
  402d3e:	fadd   QWORD PTR [edx]
  402d40:	mov    esi,0x746560b6
  402d45:	dec    edx
  402d47:	pop    es
  402d48:	dec    esp
  402d49:	pop    esp
  402d4a:	mov    ebp,ebp
  402d4c:	inc    esi
  402d4d:	push   cs
  402d4e:	and    BYTE PTR [edi+0x732a4998],al
  402d54:	or     BYTE PTR [ebp-0x1f],cl
  402d57:	lahf   
  402d58:	lahf   
  402d59:	push   0x3a744f9f
  402d5e:	icebp  
  402d5f:	mov    DWORD PTR [eax+0x58],esi
  402d62:	xchg   DWORD PTR [eax+0x24],ebp
  402d65:	ror    DWORD PTR [ecx],cl
  402d67:	lods   eax,DWORD PTR ds:[esi]
  402d68:	dec    ebx
  402d69:	scas   eax,DWORD PTR es:[edi]
  402d6a:	xchg   ecx,eax
  402d6b:	and    bh,BYTE PTR [ebp-0x51]
  402d6e:	inc    ecx
  402d6f:	sub    ecx,esp
  402d71:	not    ecx
  402d73:	and    eax,0x45533f7c
  402d78:	shr    esp,1
  402d7a:	dec    ecx
  402d7b:	and    al,BYTE PTR [edi+0x7a7b9dba]
  402d81:	adc    DWORD PTR [esi+0xdaaaa05],ebp
  402d87:	xchg   BYTE PTR [esi-0x2f89abdd],al
  402d8d:	push   0x43b0092a
  402d92:	ja     0x402d1d
  402d94:	pop    edi
  402d95:	outs   dx,BYTE PTR ds:[esi]
  402d96:	dec    esp
  402d97:	push   ebx
  402d99:	mov    eax,ds:0x61cb3874
  402d9e:	or     ch,dh
  402da0:	xlat   BYTE PTR ds:[ebx]
  402da1:	scas   eax,DWORD PTR es:[edi]
  402da2:	sub    eax,0x3e629b64
  402da7:	pop    ecx
  402da8:	clc    
  402da9:	es mov cl,0x8e
  402dac:	aas    
  402dad:	jnp    0x402dd2
  402daf:	dec    edi
  402db0:	out    0x69,eax
  402db2:	sub    al,0xa1
  402db4:	sbb    eax,0x3b13ac64
  402db9:	into   
  402dba:	xchg   edx,eax
  402dbb:	popa   
  402dbc:	mov    DWORD PTR ds:0xb07a6bb6,0xb7fe3757
  402dc6:	mov    eax,0xbf7ccc0c
  402dcc:	or     eax,0x1564983f
  402dd1:	xchg   esp,eax
  402dd2:	pop    ebx
  402dd3:	push   cs
  402dd4:	adc    al,0x11
  402dd6:	fadd   QWORD PTR [edi+0x212fc1da]
  402ddc:	jg     0x402e42
  402dde:	fadd   QWORD PTR [ebx+0x3eb40d9b]
  402de4:	jnp    0x402dbf
  402de6:	es in  eax,dx
  402de8:	mov    ds:0x7653704b,al
  402ded:	mov    ch,BYTE PTR [esi]
  402def:	mov    esi,0xd190e668
  402df4:	pushf  
  402df5:	add    BYTE PTR [edi+0x5fc453fa],0x99
  402dfc:	sub    al,0xd
  402dfe:	push   ebp
  402dff:	outs   dx,BYTE PTR ds:[esi]
  402e00:	fisub  WORD PTR [eax-0x66cb9216]
  402e06:	xchg   ebx,eax
  402e07:	ds jmp 0x18e8:0x5e2b1ea9
  402e0f:	jl     0x402e87
  402e11:	inc    esp
  402e12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e13:	dec    edi
  402e14:	mov    al,0xcf
  402e16:	mov    edi,0x69b0c022
  402e1b:	sbb    ebp,DWORD PTR [esi]
  402e1d:	fidiv  WORD PTR [edi+0x44f72b8c]
  402e23:	xchg   esp,eax
  402e24:	jns    0x402df5
  402e26:	scas   al,BYTE PTR es:[edi]
  402e27:	sbb    al,0xc0
  402e29:	pushf  
  402e2a:	mov    dl,BYTE PTR ds:0x8728977f
  402e30:	add    al,0x48
  402e32:	popf   
  402e33:	int3   
  402e34:	jecxz  0x402df2
  402e36:	idiv   BYTE PTR [edx+edi*2+0x662cae00]
  402e3d:	mov    ?,ebx
  402e3f:	xor    eax,0x16923b08
  402e44:	leave  
  402e45:	cs mov esi,0xc29c8f5c
  402e4b:	stos   DWORD PTR es:[edi],eax
  402e4c:	(bad)  
  402e4d:	(bad)  
  402e4f:	or     ch,cl
  402e51:	in     al,dx
  402e52:	into   
  402e53:	and    BYTE PTR [esi],0xae
  402e56:	in     al,dx
  402e57:	lahf   
  402e58:	jns    0x402eb5
  402e5a:	mov    ecx,0x7e123519
  402e5f:	push   edi
  402e60:	pusha  
  402e61:	xchg   edi,eax
  402e62:	hlt    
  402e63:	mov    bh,0x7
  402e65:	xor    esp,DWORD PTR [esi]
  402e67:	mov    gs,eax
  402e69:	jg     0x402ee9
  402e6b:	add    al,0xc9
  402e6d:	fnstsw WORD PTR gs:[ebp-0x58]
  402e71:	and    ecx,0x34bc0416
  402e77:	mov    dl,0x82
  402e79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e7a:	rol    BYTE PTR [ebp+0x54],0x9b
  402e7e:	dec    ebx
  402e7f:	xor    DWORD PTR ds:0x97478ee1,ecx
  402e85:	inc    ecx
  402e86:	cdq    
  402e87:	xor    BYTE PTR [edi-0x372eba26],ch
  402e8d:	push   edx
  402e8e:	fwait
  402e8f:	sub    eax,0xe10d02cf
  402e94:	inc    ecx
  402e95:	and    DWORD PTR [edi-0x6c1c044a],esp
  402e9b:	cmc    
  402e9c:	mov    cl,bl
  402e9e:	cdq    
  402e9f:	jl     0x402e70
  402ea1:	adc    eax,0xf59ef77b
  402ea6:	adc    al,BYTE PTR [edx+0x30]
  402ea9:	sub    eax,0x131ce7db
  402eae:	pop    es
  402eaf:	sub    eax,0x5f41382a
  402eb4:	mov    cs,WORD PTR [eax]
  402eb6:	test   eax,0xa54cf8e0
  402ebb:	push   edi
  402ebc:	mov    ebx,0x7ecf5f8f
  402ec1:	enter  0x452c,0x27
  402ec5:	pop    ss
  402ec6:	mov    esp,0xbf47ba4c
  402ecb:	push   ds
  402ecc:	aaa    
  402ecd:	std    
  402ece:	cli    
  402ecf:	jg     0x402e9b
  402ed1:	in     al,dx
  402ed2:	sub    eax,0x5e98efe0
  402ed7:	popa   
  402ed8:	cwde   
  402ed9:	cmp    ah,BYTE PTR [eax-0x787879f2]
  402edf:	rcr    DWORD PTR [edi+0x4014732e],0x4f
  402ee6:	test   eax,0xa1f64868
  402eeb:	mov    bl,0x6d
  402eed:	push   ebx
  402eee:	add    BYTE PTR [edi+0x1b],al
  402ef1:	mov    ecx,DWORD PTR [eax+0x36f0a1f1]
  402ef7:	cmp    BYTE PTR ds:[ebx+ebx*8-0x4],ch
  402efc:	daa    
  402efd:	stos   BYTE PTR es:[edi],al
  402efe:	data16 jle 0x402f2e
  402f01:	adc    DWORD PTR [esi+0x5deb930d],0x5eb55804
  402f0b:	nop
  402f0c:	mov    ebp,0x5178cb0e
  402f11:	into   
  402f12:	dec    eax
  402f13:	cmp    ecx,0x467de5fc
  402f19:	scas   eax,DWORD PTR es:[edi]
  402f1a:	xchg   BYTE PTR [edi-0x7a],dl
  402f1d:	hlt    
  402f1e:	or     al,BYTE PTR [edi-0x7d137a5c]
  402f24:	inc    esi
  402f25:	adc    eax,0x3696f8b4
  402f2a:	call   0x2d37:0x3b028ac1
  402f31:	inc    edx
  402f32:	int    0x31
  402f34:	ret    
  402f35:	icebp  
  402f36:	xchg   edx,eax
  402f37:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  402f39:	inc    esp
  402f3a:	add    dh,ch
  402f3c:	sub    ecx,0xe8c3243a
  402f42:	push   esi
  402f43:	dec    edi
  402f44:	pop    ss
  402f45:	daa    
  402f46:	es add esi,esp
  402f49:	fistp  DWORD PTR [ebx]
  402f4b:	push   ds
  402f4c:	iret   
  402f4d:	retf   0x5f4a
  402f50:	fdivr  QWORD PTR [edx+0x299fff64]
  402f56:	lea    esi,[edx+0x3e]
  402f59:	cmp    BYTE PTR [esi+edx*2-0x1c012a41],al
  402f60:	shl    DWORD PTR [esi+edx*1-0x71],cl
  402f64:	aas    
  402f65:	push   ecx
  402f66:	out    dx,al
  402f67:	mov    ecx,0x162c9e34
  402f6c:	je     0x402feb
  402f6e:	sahf   
  402f6f:	mov    cl,0x9a
  402f71:	or     ch,BYTE PTR [ebp+0x3d]
  402f74:	add    BYTE PTR [edi+0x25],dh
  402f77:	imul   edx,DWORD PTR [edi],0xc0830a7a
  402f7d:	ret    0x1a1f
  402f80:	cmp    dl,BYTE PTR [ebx-0x7d]
  402f83:	mov    ebp,0x664eeca6
  402f88:	gs push cs
  402f8a:	or     dl,BYTE PTR [eax]
  402f8c:	jne    0x402f2d
  402f8e:	inc    esi
  402f8f:	icebp  
  402f90:	dec    ebx
  402f91:	xor    BYTE PTR [ecx+0x66],0x1c
  402f95:	sub    cl,dh
  402f97:	scas   eax,DWORD PTR es:[edi]
  402f98:	jnp    0x402ff0
  402f9a:	sbb    al,0x4e
  402f9c:	inc    ecx
  402f9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f9e:	int3   
  402f9f:	jmp    0xae2c:0xa47b0510
  402fa6:	cmp    esi,edi
  402fa8:	js     0x403002
  402faa:	hlt    
  402fab:	call   0xb8cc:0x695f78a5
  402fb2:	es cld 
  402fb4:	aaa    
  402fb5:	sub    al,0xfb
  402fb7:	mov    dl,0xef
  402fb9:	fcomp  QWORD PTR [eax]
  402fbb:	jmp    0x403011
  402fbd:	pop    DWORD PTR [esi]
  402fbf:	mov    ebx,0x9f4f599a
  402fc4:	mov    eax,0x14eedd1a
  402fc9:	and    DWORD PTR ds:0x43ceacb7,esp
  402fcf:	mov    dl,0xb8
  402fd1:	mov    ds:0x1eab08e5,eax
  402fd6:	sub    ah,BYTE PTR [edi-0x185a2443]
  402fdc:	cmp    DWORD PTR [edi],eax
  402fde:	lock inc ebx
  402fe0:	int    0xd
  402fe2:	cmp    bl,BYTE PTR [esi-0x6b65314e]
  402fe8:	sbb    esi,esi
  402fea:	sar    BYTE PTR [edx-0x5f03b5d7],0xaa
  402ff1:	and    esi,DWORD PTR [esi-0x659c1d53]
  402ff7:	inc    edi
  402ff8:	or     al,dl
  402ffa:	ficomp DWORD PTR [ecx]
  402ffc:	mov    edi,0xbf1ff62
  403001:	and    cl,BYTE PTR [eax]
  403003:	jl     0x402f91
  403005:	stos   DWORD PTR es:[edi],eax
  403006:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403007:	enter  0xe313,0xc
  40300b:	ficomp WORD PTR [eax+0x1]
  40300e:	and    BYTE PTR [edx],0xf0
  403011:	dec    eax
  403012:	or     eax,0xe43a704e
  403017:	addr16 add eax,0x2f111fec
  40301d:	push   0xeb545956
  403022:	stos   DWORD PTR es:[edi],eax
  403023:	clc    
  403024:	aaa    
  403025:	pop    esi
  403026:	xchg   BYTE PTR [ebx+0x3a],ah
  403029:	data16 clc 
  40302b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40302c:	fisttp QWORD PTR [edi+0x1fe91fde]
  403032:	in     al,0x5e
  403034:	pop    edx
  403035:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403036:	pusha  
  403037:	fst    DWORD PTR [ecx]
  403039:	into   
  40303a:	inc    BYTE PTR [ebx+0x2c]
  40303d:	xchg   bh,dh
  40303f:	xchg   edx,eax
  403040:	sar    BYTE PTR [edi-0x50],0x56
  403044:	and    BYTE PTR ds:0xe1946683,dh
  40304a:	bound  edi,QWORD PTR [eax-0x77]
  40304d:	sub    BYTE PTR [ecx+0x403dbc93],ah
  403053:	jo     0x403015
  403055:	test   eax,0x19c14b01
  40305a:	push   edi
  40305b:	ins    BYTE PTR es:[edi],dx
  40305c:	nop
  40305d:	mov    ds:0xbf5ab7c9,eax
  403062:	push   edx
  403063:	jbe    0x40308f
  403065:	repz adc ah,BYTE PTR [ebx+0xf]
  403069:	jns    0x402fee
  40306b:	pop    ebx
  40306c:	sti    
  40306d:	push   ebp
  40306e:	push   edi
  40306f:	inc    eax
  403070:	in     al,dx
  403071:	jmp    0x40307c
  403073:	sub    al,0x6e
  403075:	loop   0x4030e4
  403077:	jl     0x403048
  403079:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40307a:	push   esi
  40307b:	popf   
  40307c:	mov    dh,0xf0
  40307e:	push   cs
  40307f:	ret    0x6fe8
  403082:	sbb    al,0xc6
  403084:	ins    DWORD PTR es:[edi],dx
  403085:	js     0x403049
  403087:	int3   
  403088:	repnz sbb DWORD PTR [edi+0xf],edi
  40308c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40308d:	push   ebp
  40308e:	(bad)  
  40308f:	mov    eax,ds:0x244e1e3d
  403094:	in     eax,0xf8
  403096:	(bad)  
  403097:	lods   al,BYTE PTR ds:[esi]
  403098:	adc    DWORD PTR [eax+0x1],eax
  40309b:	or     eax,DWORD PTR [esi+0x193629a0]
  4030a1:	dec    esp
  4030a2:	mov    esp,DWORD PTR [edx]
  4030a4:	std    
  4030a5:	rol    BYTE PTR [ebp+0x36],cl
  4030a8:	dec    ebx
  4030a9:	in     al,0xd3
  4030ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030ac:	rcr    BYTE PTR [esi-0x77ef87],1
  4030b2:	pop    fs
  4030b4:	inc    edx
  4030b5:	push   esp
  4030b6:	mov    ?,WORD PTR [esp+ecx*2+0x6c69be74]
  4030bd:	sub    eax,0xfb935261
  4030c2:	mov    edx,0xdde78b67
  4030c7:	stc    
  4030c8:	inc    ebp
  4030c9:	je     0x4030e4
  4030cb:	cmp    eax,0xd5005cae
  4030d0:	adc    cl,al
  4030d2:	cli    
  4030d3:	xor    ebx,0xffffff99
  4030d6:	popa   
  4030d7:	ret    0x922
  4030da:	mov    al,BYTE PTR [ebx+0x1a899ed1]
  4030e0:	cs mov esi,0x33c87a13
  4030e6:	call   0xa922:0xc6913708
  4030ed:	inc    edi
  4030ee:	pop    ss
  4030ef:	or     DWORD PTR [edx+0x731b9caa],esi
  4030f5:	popf   
  4030f6:	arpl   WORD PTR [edi-0x58],cx
  4030f9:	imul   BYTE PTR [esi-0x3e]
  4030fc:	adc    DWORD PTR [ecx+0x70be5e5c],esp
  403102:	inc    esp
  403103:	(bad)  
  403105:	test   DWORD PTR [ebp+0x224ef645],ecx
  40310b:	neg    BYTE PTR [ebx]
  40310d:	in     eax,dx
  40310e:	jnp    0x403182
  403110:	inc    cx
  403113:	jns    0x4030e5
  403115:	int3   
  403116:	(bad)  
  403117:	adc    dl,BYTE PTR [ebp-0x35168b0d]
  40311d:	not    BYTE PTR [esi-0x406a1296]
  403123:	xchg   esp,eax
  403124:	xchg   esi,eax
  403125:	cmp    esi,DWORD PTR ds:[ecx-0x5bc0216d]
  40312c:	pop    esp
  40312d:	sbb    al,0x48
  40312f:	stc    
  403130:	mov    ecx,0xb63fda85
  403135:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403136:	mov    eax,ds:0x81a898a
  40313b:	or     BYTE PTR [edi+0x11],0xc9
  40313f:	adc    DWORD PTR [ecx-0x55d1c5e3],esp
  403145:	ins    BYTE PTR es:[edi],dx
  403146:	mov    ah,ch
  403148:	int3   
  403149:	xchg   DWORD PTR ds:0xea952c9b,ebx
  40314f:	clc    
  403150:	ss pop edi
  403152:	xchg   edx,eax
  403153:	retf   
  403154:	push   esi
  403155:	pop    edi
  403156:	in     eax,0x58
  403158:	mov    ?,esi
  40315a:	xchg   DWORD PTR [edi],ebp
  40315c:	imul   eax,DWORD PTR [edx-0x6584d157],0x55
  403163:	inc    ebx
  403164:	push   esi
  403165:	pop    ecx
  403166:	pop    ebx
  403167:	sub    eax,0xf722accc
  40316c:	test   BYTE PTR [eax-0x3f],ch
  40316f:	mov    ds:0x3d20db75,al
  403174:	sub    eax,0xb320257d
  403179:	ins    BYTE PTR es:[edi],dx
  40317a:	into   
  40317b:	mov    ch,0x19
  40317d:	push   esp
  40317e:	pop    ecx
  40317f:	in     al,0x16
  403181:	xchg   ecx,eax
  403182:	pop    es
  403183:	retf   
  403184:	sahf   
  403185:	cli    
  403186:	push   es
  403187:	mov    ebp,0x9abe5ef0
  40318c:	fisttp DWORD PTR [ebx+0x40]
  40318f:	push   cs
  403190:	or     eax,0xb2dc3fed
  403195:	neg    DWORD PTR [esi+eiz*4]
  403198:	mov    ah,0xe8
  40319a:	(bad)  
  40319c:	mov    edx,0xa09ef13e
  4031a1:	aad    0x3f
  4031a3:	jbe    0x40320e
  4031a5:	call   0xa301:0xa3e4e82d
  4031ac:	sbb    eax,0xcf788bf7
  4031b1:	jno    0x403193
  4031b3:	imul   eax,DWORD PTR [ecx+0x4ffa9628],0x17
  4031ba:	test   al,0xcd
  4031bc:	push   edx
  4031bd:	xor    esp,DWORD PTR [esi]
  4031bf:	mov    DWORD PTR [edi+0x4e],ecx
  4031c2:	shr    DWORD PTR [esi+0x588d7606],cl
  4031c8:	push   ebx
  4031c9:	cdq    
  4031ca:	inc    esi
  4031cb:	and    esp,DWORD PTR [eax-0x38f5a729]
  4031d1:	xchg   esp,eax
  4031d2:	imul   esp,DWORD PTR [esi+0x7a],0x58
  4031d6:	repz call 0xebb1:0x9c580ed7
  4031de:	push   ebx
  4031df:	fist   WORD PTR [ebx-0x68]
  4031e2:	adc    dh,bl
  4031e4:	add    esp,edi
  4031e6:	or     BYTE PTR es:[ebp-0x20],0x46
  4031eb:	mov    ecx,DWORD PTR [bx]
  4031ee:	(bad)  
  4031ef:	hlt    
  4031f0:	push   edi
  4031f1:	test   eax,0xd9b1c6c5
  4031f6:	ja     0x4031d7
  4031f8:	push   0x5e
  4031fa:	out    0x2a,al
  4031fc:	mov    ch,0x6b
  4031fe:	in     al,0xec
  403200:	and    DWORD PTR [edx+0x37],eax
  403203:	and    BYTE PTR [ebp+0xf84b0c2],0x1b
  40320a:	cdq    
  40320b:	(bad)  
  40320d:	(bad)  
  40320e:	sar    DWORD PTR [edi],0xe4
  403211:	mov    ah,0xb9
  403213:	outs   dx,BYTE PTR ds:[esi]
  403214:	mov    ebx,0xb4cdae2b
  403219:	cmp    al,dh
  40321b:	in     al,dx
  40321c:	or     ch,BYTE PTR [edx-0x38]
  40321f:	loop   0x4031ef
  403221:	aam    0xb3
  403223:	and    dl,BYTE PTR [esi+eiz*8+0x7feb3d6b]
  40322a:	push   edi
  40322b:	(bad)  
  40322c:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40322e:	ret    0x66d5
  403231:	in     eax,0xb7
  403233:	dec    eax
  403234:	pop    edi
  403235:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403236:	add    al,0x7d
  403238:	pop    esi
  403239:	xor    BYTE PTR [eax+0x19d05e0a],0x62
  403240:	xchg   esp,ebx
  403242:	dec    ebx
  403243:	fisttp WORD PTR [esi+ebp*4+0x48f12800]
  40324a:	icebp  
  40324b:	mov    al,ds:0x460f5ed6
  403250:	jge    0x4031f2
  403252:	scas   eax,DWORD PTR es:[edi]
  403253:	out    0x4d,eax
  403255:	pop    ebx
  403256:	and    cl,BYTE PTR [edx-0x150b1e1c]
  40325c:	push   edi
  40325d:	jo     0x4032a1
  40325f:	in     al,dx
  403260:	js     0x403221
  403262:	push   esp
  403263:	in     al,dx
  403264:	(bad)  
  403265:	sub    dh,BYTE PTR [ebx]
  403267:	sub    cl,BYTE PTR [ebp+0x1aa538f0]
  40326d:	xor    DWORD PTR [ebp-0x42640bc7],0xffffffb3
  403274:	aas    
  403275:	fsubr  st(0),st
  403277:	div    DWORD PTR [eax+0x4f]
  40327a:	sub    BYTE PTR [ebp+0x2b],0xd2
  40327e:	sbb    BYTE PTR [eax],bl
  403280:	sti    
  403281:	ret    0x151a
  403284:	jg     0x403216
  403286:	xor    DWORD PTR [edx-0x70],0xd4a2ea45
  40328d:	or     al,0x7
  40328f:	and    bh,ah
  403291:	pop    es
  403292:	test   BYTE PTR [edx],dh
  403294:	cmc    
  403295:	push   eax
  403296:	andnps xmm7,xmm6
  403299:	aaa    
  40329a:	mov    dh,0x89
  40329c:	call   0x39b3:0x9f7622ee
  4032a3:	pushf  
  4032a4:	cmp    edx,DWORD PTR [esi-0x61]
  4032a7:	retf   
  4032a8:	call   0xc39ab881
  4032ad:	xor    eax,0x6ab4049f
  4032b2:	(bad)  
  4032b3:	mov    eax,0x9a188259
  4032b8:	dec    ebp
  4032b9:	cmp    DWORD PTR [edi+0x3b],edi
  4032bc:	or     eax,0x62166a35
  4032c1:	out    0x20,al
  4032c3:	retf   
  4032c4:	cmp    al,0x18
  4032c6:	out    dx,eax
  4032c7:	pop    es
  4032c8:	rol    ch,0x7a
  4032cb:	jae    0x403290
  4032cd:	bound  ecx,QWORD PTR [ecx+0x3a421803]
  4032d3:	mov    edi,0x44098321
  4032d8:	cmp    BYTE PTR [edi+ebx*4-0x51ee8ebb],ch
  4032df:	add    al,0x1b
  4032e1:	out    0x5b,al
  4032e3:	pop    esi
  4032e4:	inc    ecx
  4032e5:	mov    dh,0xb4
  4032e7:	xchg   ebp,eax
  4032e8:	scas   al,BYTE PTR es:[edi]
  4032e9:	int    0xb6
  4032eb:	jl     0x4032ec
  4032ed:	jp     0x403348
  4032ef:	xor    edx,DWORD PTR [eax-0x152031b7]
  4032f5:	aas    
  4032f6:	test   bl,cl
  4032f8:	je     0x403343
  4032fa:	(bad)  
  4032fb:	pusha  
  4032fc:	add    eax,0xcd5bec62
  403301:	jle    0x403373
  403303:	pop    esp
  403304:	mov    cl,0xfa
  403306:	adc    ecx,DWORD PTR [edx-0x25]
  403309:	ja     0x403380
  40330b:	out    0x2d,al
  40330d:	push   esp
  40330e:	pop    ebp
  40330f:	inc    esi
  403310:	mov    al,ds:0x18d322ab
  403315:	sub    al,0x5e
  403317:	mov    edi,0x983d4fc
  40331c:	call   0xc54:0x9c942a01
  403323:	in     al,dx
  403324:	push   ecx
  403325:	add    ebp,edi
  403327:	adc    edx,DWORD PTR [eax+0x6e]
  40332a:	shl    DWORD PTR [edx+0x72],0x34
  40332e:	stos   BYTE PTR es:[edi],al
  40332f:	aam    0x0
  403331:	mov    ds:0x5c3a31f1,eax
  403336:	jno    0x403341
  403338:	jl     0x40336f
  40333a:	dec    ebp
  40333b:	mov    DWORD PTR [edx+0x60],esp
  40333e:	test   eax,0xbcadcc5a
  403343:	adc    cl,BYTE PTR [edi]
  403345:	pusha  
  403346:	xchg   ebp,eax
  403347:	and    eax,0x6d70826c
  40334c:	imul   ebp,DWORD PTR [edx+0x58],0x87cc359
  403353:	jo     0x403311
  403355:	jl     0x40334f
  403357:	inc    eax
  403358:	shl    cl,cl
  40335a:	clc    
  40335b:	or     BYTE PTR [edx],bl
  40335d:	retf   
  40335e:	xor    BYTE PTR [ecx],ah
  403360:	and    al,0x9b
  403362:	fadd   DWORD PTR [edx]
  403364:	mov    esp,0x495bfc33
  403369:	push   esp
  40336a:	shl    DWORD PTR [edi],1
  40336c:	scas   eax,DWORD PTR es:[edi]
  40336d:	sbb    al,BYTE PTR [edx-0x18d6170c]
  403373:	ins    BYTE PTR es:[edi],dx
  403374:	push   ss
  403375:	push   ecx
  403376:	retf   0xcb5b
  403379:	jecxz  0x4033e7
  40337b:	lods   eax,DWORD PTR ds:[esi]
  40337c:	out    0xbf,al
  40337e:	or     al,0xce
  403380:	aaa    
  403381:	shl    esi,cl
  403383:	cmp    dh,BYTE PTR [ebx+edx*2+0x62511a50]
  40338a:	jo     0x403311
  40338c:	test   DWORD PTR [ecx-0xc8b6ca9],ebx
  403392:	add    BYTE PTR [esi+0x14],bh
  403395:	sub    BYTE PTR [ebp-0x3b],0xa4
  403399:	cmc    
  40339a:	xchg   edi,eax
  40339b:	ins    DWORD PTR es:[edi],dx
  40339c:	and    ebx,DWORD PTR [ecx]
  40339e:	inc    edi
  40339f:	repz aas 
  4033a1:	popa   
  4033a2:	jnp    0x4033e5
  4033a4:	sar    ebp,cl
  4033a6:	xor    ah,BYTE PTR [eax]
  4033a8:	and    ebx,DWORD PTR [esi]
  4033aa:	or     al,0x2c
  4033ac:	in     eax,0xdb
  4033ae:	cmp    BYTE PTR [edi],cl
  4033b0:	test   eax,0xdf8a59f4
  4033b5:	cmp    dh,BYTE PTR [ebp+edi*1+0x76]
  4033b9:	rcr    DWORD PTR [ebx],0x82
  4033bc:	pushf  
  4033bd:	call   0x7815228a
  4033c2:	xchg   esp,eax
  4033c3:	lea    esi,[ecx+0x60f5448e]
  4033c9:	or     eax,0x44e4003d
  4033ce:	test   DWORD PTR [edx+0x4a],0x4e6e423d
  4033d5:	int3   
  4033d6:	int3   
  4033d7:	xor    ebp,DWORD PTR [edi+0x63b55b05]
  4033dd:	(bad)  
  4033de:	fs xchg esi,eax
  4033e0:	nop
  4033e1:	scas   al,BYTE PTR es:[edi]
  4033e2:	repz xchg esi,eax
  4033e4:	sub    al,0xf4
  4033e6:	mov    al,0x29
  4033e8:	data16 mov cl,0x94
  4033eb:	fcmovnbe st,st(3)
  4033ed:	push   ss
  4033ee:	out    0x25,eax
  4033f0:	pop    edi
  4033f1:	pop    es
  4033f2:	xor    al,0x2a
  4033f4:	xor    bl,BYTE PTR [edx+0x13d4fede]
  4033fa:	scas   al,BYTE PTR es:[edi]
  4033fb:	dec    esp
  4033fc:	and    al,0xed
  4033fe:	ficomp WORD PTR [edi]
  403400:	sar    BYTE PTR [eax-0xf],0x24
  403404:	cli    
  403405:	jg     0x40342d
  403407:	mov    ebp,0x76b5bea7
  40340c:	cmp    bl,0xce
  40340f:	fcmovnu st,st(7)
  403411:	inc    ebp
  403412:	adc    dl,BYTE PTR [esi]
  403414:	mov    eax,ds:0x235f1343
  403419:	pusha  
  40341a:	mov    ds:0xca7066b6,al
  40341f:	arpl   WORD PTR [ebx],sp
  403421:	or     bl,BYTE PTR [ebx-0xb069821]
  403427:	or     al,0xbf
  403429:	mov    eax,0x21d8757e
  40342e:	dec    edx
  40342f:	lods   eax,DWORD PTR ds:[esi]
  403430:	cld    
  403431:	sub    al,0x5e
  403433:	adc    eax,0x6b947b06
  403438:	out    0xef,al
  40343a:	popa   
  40343b:	(bad)  
  40343d:	jnp    0x4033f5
  40343f:	push   esp
  403440:	data16 scas al,BYTE PTR es:[edi]
  403442:	add    al,0x35
  403444:	push   eax
  403445:	adc    DWORD PTR [ecx+0x3a1dce69],ebx
  40344b:	in     al,dx
  40344c:	(bad)  
  40344d:	imul   ebp,DWORD PTR [ecx],0x92aaa8dd
  403453:	stos   DWORD PTR es:[edi],eax
  403454:	neg    ebp
  403456:	call   0x82a660b3
  40345b:	popf   
  40345c:	mov    al,0x90
  40345e:	sahf   
  40345f:	clc    
  403460:	push   eax
  403461:	(bad)  
  403462:	push   0xd3818cb5
  403467:	lods   al,BYTE PTR ds:[esi]
  403468:	js     0x403449
  40346a:	dec    edx
  40346b:	push   cs
  40346c:	ins    BYTE PTR es:[edi],dx
  40346d:	jb     0x40346d
  40346f:	inc    esi
  403470:	mov    gs,WORD PTR [edi+edi*1-0x41]
  403474:	mov    al,0x8c
  403476:	or     DWORD PTR [edx+0x223e65d0],eax
  40347c:	test   al,0xc5
  40347e:	jnp    0x403497
  403480:	adc    BYTE PTR [edx],cl
  403482:	cmc    
  403483:	push   esp
  403484:	cmp    ah,BYTE PTR [ecx-0x18]
  403487:	ret    
  403488:	sti    
  403489:	mov    ecx,0x331198
  40348e:	into   
  40348f:	stos   DWORD PTR es:[edi],eax
  403490:	out    0x70,eax
  403492:	mov    DWORD PTR [ecx],esi
  403494:	js     0x403462
  403496:	jns    0x40345b
  403498:	xchg   esp,eax
  403499:	mov    cl,0x33
  40349b:	push   esp
  40349c:	sbb    bh,dh
  40349e:	xor    dh,al
  4034a0:	imul   esp
  4034a2:	pop    eax
  4034a3:	mov    dl,0xea
  4034a5:	data16 fisub WORD PTR [ebp+0x2391690d]
  4034ac:	inc    eax
  4034ad:	and    al,0xf
  4034af:	mov    eax,0x68dbf7dd
  4034b4:	xchg   ebp,eax
  4034b5:	mov    BYTE PTR [edi-0x32],cl
  4034b8:	ss push esp
  4034ba:	xor    edx,DWORD PTR [ebx+ebp*4]
  4034bd:	mov    eax,edx
  4034bf:	call   0xb82c:0x7dfc15c3
  4034c6:	mov    edx,0x77004331
  4034cb:	mov    bh,0x8e
  4034cd:	sub    eax,0x3bbd69f3
  4034d2:	push   esi
  4034d3:	mov    ebp,0x880e6551
  4034d8:	ret    0xa4e9
  4034db:	in     al,dx
  4034dc:	push   ecx
  4034dd:	es das 
  4034df:	inc    edi
  4034e0:	(bad)  [esi]
  4034e2:	into   
  4034e3:	mov    bl,dl
  4034e5:	push   ecx
  4034e6:	push   0x55
  4034e8:	inc    edi
  4034e9:	jle    0x403473
  4034eb:	mov    al,0xd6
  4034ed:	scas   al,BYTE PTR es:[edi]
  4034ee:	and    DWORD PTR [ebx+0x65b0901c],0xfffffff0
  4034f5:	sahf   
  4034f6:	ret    
  4034f7:	aam    0xd7
  4034f9:	iret   
  4034fa:	retf   
  4034fb:	scas   al,BYTE PTR es:[edi]
  4034fc:	mov    ebp,esi
  4034fe:	jne    0x40357b
  403500:	shr    bh,0x7c
  403503:	js     0x403572
  403505:	pop    ecx
  403506:	pop    ebx
  403507:	inc    edx
  403508:	pop    edi
  403509:	xchg   ebp,eax
  40350a:	jecxz  0x4034f6
  40350c:	adc    edx,DWORD PTR [edx]
  40350e:	mov    bh,0xb5
  403510:	mov    al,0xdd
  403512:	mov    eax,0xfce0bc4f
  403517:	(bad)  
  403518:	xchg   esp,eax
  403519:	sub    ah,ch
  40351b:	call   0xaeba85e6
  403520:	in     eax,dx
  403521:	int    0x3c
  403523:	xchg   ecx,eax
  403524:	and    BYTE PTR [edi-0x43546f97],0xb4
  40352b:	ret    0xe644
  40352e:	mov    eax,0x2b7cf541
  403533:	cmp    al,0xd
  403535:	xor    esi,eax
  403537:	dec    ebx
  403538:	push   esi
  403539:	cmc    
  40353a:	popa   
  40353b:	mov    bl,ah
  40353d:	cmp    eax,0xa2426ce7
  403542:	test   BYTE PTR [eax],0x81
  403545:	in     al,dx
  403546:	add    esi,eax
  403548:	xor    al,0x21
  40354a:	test   DWORD PTR [edx-0x6e3d9579],edi
  403550:	repz mov dh,BYTE PTR ds:0x1c6df2f9
  403557:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403558:	aas    
  403559:	arpl   WORD PTR [ebp+ebx*8+0x2d],bp
  40355d:	pop    ds
  40355e:	test   eax,0xc7e33b2d
  403563:	jge    0x403556
  403565:	popf   
  403566:	jbe    0x403581
  403568:	dec    ecx
  403569:	inc    esp
  40356a:	mov    cl,0x7a
  40356c:	jbe    0x40351c
  40356e:	seta   bl
  403571:	call   0xc11:0x26dfd9bf
  403578:	mov    dl,0x75
  40357a:	test   eax,0x7ba4476d
  40357f:	rcr    DWORD PTR [esi-0x54191b52],1
  403585:	pop    esp
  403586:	inc    ecx
  403587:	outs   dx,DWORD PTR ds:[esi]
  403588:	pop    edx
  403589:	xor    cl,BYTE PTR [esi+0x4fb77743]
  40358f:	xor    BYTE PTR [eax+eax*2+0x5],0x9d
  403594:	sbb    bh,BYTE PTR [esi]
  403596:	xchg   BYTE PTR [edi+0x74f68f19],al
  40359c:	fld    DWORD PTR [eax]
  40359e:	mov    ebp,gs
  4035a0:	inc    edi
  4035a1:	leave  
  4035a2:	xchg   edx,eax
  4035a3:	xlat   BYTE PTR ds:[ebx]
  4035a4:	jae    0x403576
  4035a6:	jge    0x403575
  4035a8:	push   eax
  4035a9:	mov    eax,0x8e552c3c
  4035ae:	push   esp
  4035af:	jecxz  0x403576
  4035b1:	mov    eax,0xdbe91f75
  4035b6:	mov    ecx,0x75b57192
  4035bb:	nop
  4035bc:	jns    0x40363c
  4035be:	(bad)  ds:0xb45a33e9
  4035c4:	repnz test BYTE PTR [esi+0x56],0xf3
  4035c9:	sahf   
  4035ca:	shl    DWORD PTR [edx+eiz*8],1
  4035cd:	fadd   QWORD PTR [ebx+0x529ad5bd]
  4035d3:	xchg   BYTE PTR [ebp-0xb0507ad],cl
  4035d9:	mov    cl,0x66
  4035db:	mov    eax,0xbc549c7c
  4035e0:	pop    ss
  4035e1:	pop    esp
  4035e2:	popf   
  4035e3:	stos   BYTE PTR es:[edi],al
  4035e4:	pop    ecx
  4035e5:	mov    WORD PTR [esi+0x3e4c68f3],cs
  4035eb:	push   cs
  4035ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035ed:	aaa    
  4035ee:	mov    ebx,0xa0ab011c
  4035f3:	bound  eax,QWORD PTR [esi]
  4035f5:	mov    dl,0x23
  4035f7:	stc    
  4035f8:	pop    es
  4035f9:	xor    al,0xe7
  4035fb:	sbb    BYTE PTR [edi+edx*2-0x40a398e3],bh
  403602:	dec    ecx
  403603:	jnp    0x40358b
  403605:	lock mov esi,0x8be1b025
  40360b:	arpl   WORD PTR [esi+0x41bd0539],bp
  403611:	jp     0x4035d0
  403613:	inc    eax
  403614:	sbb    bl,BYTE PTR [edi-0x3a]
  403617:	fild   QWORD PTR [ecx]
  403619:	(bad)  
  40361a:	rcr    BYTE PTR [eax-0x65],1
  40361d:	nop
  40361e:	sbb    ebx,DWORD PTR [eax]
  403620:	sbb    ah,0x7b
  403623:	xor    DWORD PTR [ebp-0x52],ebx
  403626:	cld    
  403627:	imul   edx,edx,0x23
  40362a:	jecxz  0x403625
  40362c:	loopne 0x40360c
  40362e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40362f:	(bad)  
  403630:	fst    DWORD PTR [esi-0xe]
  403633:	mov    ds,WORD PTR [edx]
  403635:	sti    
  403636:	stc    
  403637:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403638:	push   ecx
  403639:	stos   DWORD PTR es:[edi],eax
  40363a:	mov    cl,0x60
  40363c:	cwde   
  40363d:	xchg   ah,al
  40363f:	dec    ecx
  403640:	push   ecx
  403641:	sahf   
  403642:	loop   0x40361b
  403644:	push   es
  403645:	dec    esi
  403646:	cmp    ch,BYTE PTR [edx-0x6a]
  403649:	pop    edi
  40364a:	dec    esi
  40364b:	push   esi
  40364c:	into   
  40364d:	addr16 or al,0xfe
  403650:	push   ss
  403651:	leave  
  403652:	sbb    BYTE PTR [edx+0x39],0x41
  403656:	test   BYTE PTR [edx],al
  403658:	fs adc eax,0xc79c477e
  40365e:	je     0x403621
  403660:	enter  0xd591,0x23
  403664:	sbb    BYTE PTR [edx-0x5cc063ba],cl
  40366a:	xchg   BYTE PTR [eax],cl
  40366c:	adc    al,0x61
  40366e:	and    BYTE PTR [ecx+0x32],al
  403671:	bound  esi,QWORD PTR ds:0x131c1151
  403677:	pop    ebx
  403678:	in     eax,0x33
  40367a:	cmp    bh,BYTE PTR [edi+eax*8+0x4a3f338b]
  403681:	sbb    al,0xef
  403683:	fldcw  WORD PTR [eax+0x56]
  403686:	loopne 0x403697
  403688:	lods   eax,DWORD PTR ds:[esi]
  403689:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40368a:	xor    BYTE PTR [ecx],dl
  40368c:	ins    DWORD PTR es:[edi],dx
  40368d:	nop
  40368e:	push   esi
  40368f:	cmp    edx,DWORD PTR [edi-0x51902a44]
  403695:	jnp    0x4036c2
  403697:	jae    0x403627
  403699:	cmp    ch,BYTE PTR [edx-0x73]
  40369c:	call   0xcf96c07a
  4036a1:	xchg   ecx,eax
  4036a2:	rol    DWORD PTR [ebp+0x4a],0x29
  4036a6:	mov    eax,ds:0x7b8b76a6
  4036ab:	add    al,BYTE PTR [ebp+0x3800eb32]
  4036b1:	xor    BYTE PTR [ecx],ah
  4036b3:	es loope 0x403663
  4036b6:	ins    BYTE PTR es:[edi],dx
  4036b7:	or     eax,0x7c1d73f8
  4036bc:	lock enter 0x3476,0x8b
  4036c1:	or     eax,0xa024304d
  4036c6:	sbb    edi,eax
  4036c8:	jae    0x4036c5
  4036ca:	mov    ch,0x35
  4036cc:	add    eax,0x309e4af9
  4036d1:	add    al,0xad
  4036d3:	dec    eax
  4036d4:	push   0x5ee1447c
  4036d9:	das    
  4036da:	ds in  al,0xcb
  4036dd:	(bad)  
  4036df:	mov    ds:0xa938b477,eax
  4036e4:	adc    al,0xa
  4036e6:	mov    eax,0x4b966e4b
  4036eb:	mov    eax,ds:0xdde987a6
  4036f0:	dec    esp
  4036f1:	ds mov bl,bh
  4036f4:	or     al,0xc8
  4036f6:	xor    al,0x1a
  4036f8:	inc    esi
  4036f9:	icebp  
  4036fa:	ds or  edx,esi
  4036fd:	or     ch,dl
  4036ff:	add    DWORD PTR [eax],edi
  403701:	fisttp WORD PTR [edi]
  403703:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403704:	rcr    BYTE PTR [ebx],1
  403706:	xchg   edi,eax
  403707:	aad    0x7
  403709:	sbb    esp,DWORD PTR [eax+eax*1-0x20]
  40370d:	call   0x4131:0xbc6a66eb
  403714:	xchg   esp,eax
  403715:	pop    ebp
  403716:	add    DWORD PTR [esi+0x6144452f],edi
  40371c:	xchg   ebx,eax
  40371d:	test   al,0xc7
  40371f:	fmulp  st(5),st
  403721:	repnz xor DWORD PTR cs:[ebx+ecx*8],ecx
  403726:	outs   dx,DWORD PTR ds:[esi]
  403727:	jbe    0x403735
  403729:	sub    esi,esp
  40372b:	and    bh,BYTE PTR [ebx-0xf520d4b]
  403731:	fisttp QWORD PTR [edi+ebx*2]
  403734:	dec    ebx
  403735:	or     al,0x17
  403737:	cmp    BYTE PTR [edx+0x303fe938],cl
  40373d:	int    0xb8
  40373f:	and    esp,DWORD PTR [ebx-0x3c]
  403742:	pop    ss
  403743:	sbb    edi,0x2bac2b74
  403749:	fisttp QWORD PTR [eax-0x5d482b7a]
  40374f:	leave  
  403750:	sub    eax,0xc670abf
  403755:	mov    ebp,0x261ac2e7
  40375a:	or     ebx,ebp
  40375c:	ins    BYTE PTR es:[edi],dx
  40375d:	xchg   edx,eax
  40375e:	arpl   bp,cx
  403760:	mov    edi,edx
  403762:	pusha  
  403763:	add    BYTE PTR [edi],0x2d
  403766:	mov    eax,ds:0x5a5e57f2
  40376b:	retf   
  40376c:	test   BYTE PTR [edx],0x23
  40376f:	stos   DWORD PTR es:[edi],eax
  403770:	arpl   WORD PTR [ecx+edx*2+0x7228ee51],ax
  403777:	(bad)  
  403778:	and    esp,eax
  40377a:	push   0x3e
  40377c:	push   eax
  40377d:	in     eax,dx
  40377e:	dec    eax
  40377f:	daa    
  403780:	sti    
  403781:	xor    eax,0x90073cb6
  403786:	cld    
  403787:	adc    bh,BYTE PTR [ebx-0x61]
  40378a:	enter  0x39e,0x67
  40378e:	adc    bl,0xaf
  403791:	inc    esp
  403792:	sub    BYTE PTR [edx+0x7c],bl
  403795:	push   ebx
  403796:	popa   
  403797:	inc    ebx
  403798:	push   cs
  403799:	dec    esp
  40379a:	mov    ebp,0x4ac410ce
  40379f:	pop    ecx
  4037a0:	jl     0x403730
  4037a2:	je     0x40372a
  4037a4:	sub    ah,BYTE PTR [ebx]
  4037a6:	cmc    
  4037a7:	lods   eax,DWORD PTR ds:[esi]
  4037a8:	mov    dh,0xfe
  4037aa:	fs iret 
  4037ac:	push   esp
  4037ad:	lahf   
  4037ae:	or     DWORD PTR [edi],edi
  4037b0:	fisubr DWORD PTR [eax-0x332e323b]
  4037b6:	cwde   
  4037b7:	sbb    edx,DWORD PTR [edi+0x43a0acb5]
  4037bd:	lods   al,BYTE PTR ds:[esi]
  4037be:	in     al,0x10
  4037c0:	dec    eax
  4037c1:	cld    
  4037c2:	out    0xd,eax
  4037c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037c5:	bound  ecx,QWORD PTR [esi]
  4037c7:	icebp  
  4037c8:	out    0xd2,al
  4037ca:	push   ebp
  4037cb:	mov    WORD PTR [esi-0x2c],fs
  4037ce:	imul   esp,DWORD PTR [ebp-0x19f76ccd],0xdced1add
  4037d8:	cmp    DWORD PTR [ecx],eax
  4037da:	outs   dx,BYTE PTR ds:[esi]
  4037db:	mov    ebp,0x90bfb2af
  4037e0:	out    0xcd,al
  4037e2:	sar    BYTE PTR [ebp-0x4e7d18c3],1
  4037e8:	stos   BYTE PTR es:[edi],al
  4037e9:	cmp    ch,BYTE PTR [ebx+0x1d]
  4037ec:	call   0xf1b:0x840b03da
  4037f3:	icebp  
  4037f4:	dec    edi
  4037f5:	dec    ecx
  4037f6:	adc    esp,esi
  4037f8:	sbb    DWORD PTR [edx-0x2b],eax
  4037fb:	rcr    BYTE PTR [ecx+0x19],0x4c
  4037ff:	mov    ah,0xd2
  403801:	cmp    al,0x81
  403803:	int    0x68
  403805:	frstor [eax-0x3986bc31]
  40380b:	pop    esp
  40380c:	push   eax
  40380d:	mov    ds:0xeb4a9443,eax
  403812:	xor    eax,0x32552fc8
  403817:	mov    ah,0x1
  403819:	int3   
  40381a:	mov    ebp,ebx
  40381c:	adc    DWORD PTR [edx+0x4541d084],0xfffffff4
  403823:	shr    DWORD PTR [esi-0x44],0x41
  403827:	test   BYTE PTR [edx+eiz*8+0x3e],bh
  40382b:	sub    ecx,edx
  40382d:	push   eax
  40382e:	adc    al,0xbb
  403830:	or     DWORD PTR ds:0x5cec18dd,esi
  403836:	and    ecx,DWORD PTR [eax]
  403838:	or     esi,esi
  40383a:	mov    al,ds:0x3af00c20
  40383f:	xor    bl,BYTE PTR [eax-0x2093d581]
  403845:	push   edi
  403846:	mov    eax,ds:0xfd120711
  40384b:	or     eax,esi
  40384d:	jecxz  0x403851
  40384f:	mov    dl,0x34
  403851:	fistp  QWORD PTR [eax-0x2]
  403854:	test   eax,0xb1a44471
  403859:	lahf   
  40385a:	lahf   
  40385b:	pop    edi
  40385c:	mov    dh,0xbc
  40385e:	jne    0x403880
  403860:	xor    edx,DWORD PTR [ecx-0x2e9ed8b6]
  403866:	xor    ch,BYTE PTR [eax+0x3bc52578]
  40386c:	and    esp,edx
  40386e:	xor    DWORD PTR [ecx-0x6871c823],0x49
  403875:	icebp  
  403876:	mov    eax,ds:0x4c58ced
  40387b:	stos   DWORD PTR es:[edi],eax
  40387c:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40387e:	or     eax,0x40853cc
  403883:	gs stos BYTE PTR es:[edi],al
  403885:	jecxz  0x403860
  403887:	mov    bl,0x41
  403889:	xchg   BYTE PTR [ecx-0x26ef597d],cl
  40388f:	adc    bl,ch
  403891:	adc    eax,0x67589cb8
  403896:	bnd jne 0x403862
  403899:	add    al,0xfb
  40389b:	nop
  40389c:	ss cs sub ebp,ebp
  4038a0:	loop   0x403868
  4038a2:	ror    al,1
  4038a4:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4038a6:	pusha  
  4038a7:	cmc    
  4038a8:	scas   eax,DWORD PTR es:[edi]
  4038a9:	sub    eax,0xac10a6ad
  4038ae:	jp     0x4038c9
  4038b0:	mov    bh,0xb7
  4038b2:	pop    edx
  4038b3:	ret    0x38a5
  4038b6:	js     0x403855
  4038b8:	cmp    DWORD PTR [ebp+0x3831f184],eax
  4038be:	xor    dh,BYTE PTR [ecx-0x6b035d51]
  4038c4:	das    
  4038c5:	popf   
  4038c6:	adc    eax,ebx
  4038c8:	mov    esp,0x1b1f906e
  4038cd:	shl    BYTE PTR [ecx-0x1c],cl
  4038d0:	xor    BYTE PTR [ecx-0x29d3c1a2],cl
  4038d6:	lock test BYTE PTR [edi],ah
  4038d9:	inc    edi
  4038da:	mov    esi,0xf6cb84a2
  4038df:	add    DWORD PTR [esi-0x3b],ecx
  4038e2:	imul   edx,DWORD PTR [edx],0xfffffffc
  4038e5:	cmp    ebp,ebx
  4038e7:	add    edi,DWORD PTR [ebp-0x55]
  4038ea:	je     0x403899
  4038ec:	fnsave [ebx]
  4038ee:	in     eax,dx
  4038ef:	(bad)  
  4038f0:	addr16 cdq 
  4038f2:	mov    WORD PTR cs:[edi+edx*4+0x49],fs
  4038f7:	jmp    0x403911
  4038f9:	repz mov ecx,0x7a0665e9
  4038ff:	es pop ecx
  403901:	mov    esp,0xa1b639a7
  403906:	push   ss
  403907:	mov    eax,0x8516fd54
  40390c:	(bad)  
  40390d:	sbb    bh,BYTE PTR [esp+eiz*4-0x5d]
  403911:	add    al,0xc9
  403913:	rcl    DWORD PTR [esi],0x4
  403916:	pop    ebp
  403917:	and    bl,BYTE PTR [ebx]
  403919:	fimul  WORD PTR [esi]
  40391b:	ins    BYTE PTR es:[edi],dx
  40391c:	sub    eax,0xfa38234
  403921:	int    0xae
  403923:	jle    0x403936
  403925:	xor    DWORD PTR [edi+0x3d],edx
  403928:	mov    eax,0x535adcaa
  40392d:	aad    0x2c
  40392f:	sub    ebx,DWORD PTR [ebx]
  403931:	stc    
  403932:	ror    BYTE PTR [esi+0x65],cl
  403935:	dec    esi
  403936:	cli    
  403937:	pop    ss
  403938:	sbb    al,0x4b
  40393a:	adc    ecx,DWORD PTR [esi+0x37e48639]
  403940:	gs xor al,0x65
  403943:	sbb    BYTE PTR [ebx-0x14d529eb],dl
  403949:	(bad)  
  40394b:	push   edx
  40394c:	sbb    eax,0xba98a95e
  403951:	jns    0x40391d
  403953:	jge    0x40397e
  403955:	gs das 
  403957:	pop    ss
  403958:	lea    ecx,[edi-0x6c455bc5]
  40395e:	mov    eax,ds:0xa79b5cf1
  403963:	int    0xd8
  403965:	sti    
  403966:	sahf   
  403967:	inc    eax
  403968:	mov    ebp,0x941edb94
  40396d:	stos   BYTE PTR es:[edi],al
  40396e:	imul   DWORD PTR [eax-0x58]
  403971:	popa   
  403972:	xor    al,0xce
  403974:	int    0xe4
  403976:	lock adc BYTE PTR [edi+0x19],ch
  40397a:	jge    0x403991
  40397c:	push   ebx
  40397d:	dec    esp
  40397e:	push   ebp
  40397f:	sub    eax,ebp
  403981:	test   al,0xe4
  403983:	ret    0x9843
  403986:	fdiv   DWORD PTR [esi+ecx*8-0x5d]
  40398a:	and    DWORD PTR [ebx+0x33],esi
  40398d:	mov    ds:0x424da392,eax
  403992:	and    eax,DWORD PTR [edi+0x39]
  403995:	inc    ecx
  403996:	shl    BYTE PTR [eax],0xa7
  403999:	ja     0x4039fe
  40399b:	mov    BYTE PTR [edi-0x9],cl
  40399e:	xchg   esi,eax
  40399f:	mov    ebp,ebx
  4039a1:	(bad)  
  4039a3:	(bad)  
  4039a4:	das    
  4039a5:	add    DWORD PTR [ebp-0x1df27958],ebx
  4039ab:	cmc    
  4039ac:	imul   ebp,edi,0x33c4b473
  4039b2:	pop    esp
  4039b3:	aaa    
  4039b4:	(bad)  
  4039b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039b7:	xchg   edx,eax
  4039b8:	les    edx,FWORD PTR [edi-0x6d2fdac9]
  4039be:	mov    dl,0x10
  4039c0:	sbb    al,0x9d
  4039c2:	pop    edx
  4039c3:	push   esi
  4039c4:	adc    bl,ah
  4039c6:	mov    ah,0x22
  4039c8:	add    ah,al
  4039ca:	fadd   st,st(0)
  4039cc:	inc    edx
  4039cd:	sub    BYTE PTR [ecx+0x48],dl
  4039d0:	cli    
  4039d1:	loopne 0x4039b9
  4039d3:	mov    ds:0xcb370899,eax
  4039d8:	cmp    DWORD PTR [ecx],esi
  4039da:	xchg   ebx,eax
  4039db:	and    bh,BYTE PTR [edx]
  4039dd:	rol    ebp,cl
  4039df:	jp     0x403967
  4039e1:	mov    WORD PTR [eax+0xd],fs
  4039e4:	fld    QWORD PTR [edx+ebp*1+0x46]
  4039e8:	cmp    al,BYTE PTR [ebp-0x3405a29f]
  4039ee:	xchg   BYTE PTR [eax+0x20],bl
  4039f1:	dec    esp
  4039f2:	pop    edx
  4039f3:	and    al,0x28
  4039f5:	mov    al,0x2a
  4039f7:	pop    ecx
  4039f8:	sub    eax,0x4c81367
  4039fd:	and    al,0x97
  4039ff:	mov    dh,0xca
  403a01:	es inc ecx
  403a03:	outs   dx,DWORD PTR ds:[esi]
  403a04:	out    dx,eax
  403a05:	xchg   ebx,eax
  403a06:	mov    edx,edx
  403a08:	cmp    esp,DWORD PTR [edi+0x3e84856]
  403a0e:	dec    ebp
  403a0f:	sbb    esp,edi
  403a11:	xchg   ecx,eax
  403a12:	or     DWORD PTR [esi+0x51],esp
  403a15:	add    dh,ch
  403a17:	mov    ?,WORD PTR [ebx+0x2e]
  403a1a:	mov    ch,0x12
  403a1c:	shl    DWORD PTR [ecx-0x74],0x2f
  403a20:	fidiv  DWORD PTR [ebx]
  403a22:	or     BYTE PTR [esi],dh
  403a24:	pop    edx
  403a25:	cmp    al,0xf5
  403a27:	lea    esi,[ecx+0x2e]
  403a2a:	xor    esp,ebp
  403a2c:	test   al,0x8a
  403a2e:	jg     0x403a20
  403a30:	add    DWORD PTR [esi+0x14],esp
  403a33:	jnp    0x4039d4
  403a35:	xchg   ecx,eax
  403a36:	jl     0x403aa8
  403a38:	(bad)  
  403a39:	nop
  403a3a:	cmp    dl,cl
  403a3c:	add    DWORD PTR [edi+0x114c6b7d],edx
  403a42:	push   ss
  403a43:	pushf  
  403a44:	sbb    al,0x1f
  403a46:	les    esp,FWORD PTR [ecx+0x51]
  403a49:	aad    0x40
  403a4b:	sub    al,0x37
  403a4d:	jno    0x403a19
  403a4f:	aaa    
  403a50:	mov    al,ds:0x8a4e38ac
  403a55:	sub    al,0xba
  403a57:	jl     0x403ab6
  403a59:	xchg   edx,eax
  403a5a:	(bad)  
  403a5b:	nop
  403a5c:	jge    0x403aa9
  403a5e:	mov    al,ds:0x45e7d84c
  403a63:	xlat   BYTE PTR ds:[ebx]
  403a64:	jmp    0x403a87
  403a66:	out    0x7b,al
  403a68:	sbb    eax,0xdcdf4edb
  403a6d:	sbb    ebp,DWORD PTR [esi+0x20]
  403a70:	xchg   edi,eax
  403a71:	(bad)
  403a74:	mov    ebx,0xe6dbd24e
  403a79:	cli    
  403a7a:	jge    0x403acc
  403a7c:	adc    al,ch
  403a7e:	(bad)
  403a82:	mov    bl,0x1b
  403a84:	mov    dh,0xd0
  403a86:	shl    DWORD PTR [edi+0x62c15007],1
  403a8c:	sahf   
  403a8d:	xor    al,0x25
  403a8f:	scas   eax,DWORD PTR es:[edi]
  403a90:	jmp    0xe4c4:0xd760ed4c
  403a97:	and    bh,bl
  403a99:	xchg   ebp,eax
  403a9a:	mov    cl,0xc4
  403a9c:	inc    eax
  403a9d:	push   ecx
  403a9e:	pop    ebp
  403a9f:	push   0xb4a39f62
  403aa4:	xor    al,0xf
  403aa6:	outs   dx,BYTE PTR es:[esi]
  403aa8:	cwde   
  403aa9:	mov    al,ds:0xc578c0b7
  403aae:	inc    DWORD PTR [ebp+eax*1-0x49]
  403ab2:	js     0x403a9a
  403ab4:	mov    cl,0xbd
  403ab6:	mov    eax,es
  403ab8:	das    
  403ab9:	jno    0x403a3c
  403abb:	pop    es
  403abc:	scas   eax,DWORD PTR es:[edi]
  403abd:	add    BYTE PTR [ebp-0x2ad13e8],bl
  403ac3:	xor    DWORD PTR [edi],ebp
  403ac5:	ja     0x403b0b
  403ac7:	shr    al,0x10
  403aca:	cmp    al,0x65
  403acc:	bound  ebp,QWORD PTR [ebx]
  403ace:	pop    ds
  403acf:	adc    eax,0x8ad3951
  403ad4:	sbb    al,0xb0
  403ad6:	sub    dh,dh
  403ad8:	call   0x30f9cda0
  403add:	fsubr  st,st(5)
  403adf:	push   ds
  403ae0:	stos   DWORD PTR es:[edi],eax
  403ae1:	xchg   edx,eax
  403ae2:	push   es
  403ae3:	inc    ebp
  403ae4:	jae    0x403a66
  403ae6:	jmp    0x403a7b
  403ae8:	cli    
  403ae9:	adc    ch,dl
  403aeb:	pop    ebx
  403aec:	inc    ecx
  403aed:	(bad)  
  403aee:	sub    BYTE PTR [edi+0x11d45c55],al
  403af4:	fidiv  WORD PTR [esi-0x27892e1d]
  403afa:	rol    BYTE PTR [edi],cl
  403afc:	aad    0xfa
  403afe:	je     0x403b2b
  403b00:	inc    ebp
  403b01:	inc    edi
  403b02:	sbb    esi,DWORD PTR [ebx-0x1f39263d]
  403b08:	leave  
  403b09:	fld    st(4)
  403b0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b0c:	nop
  403b0d:	in     eax,0x46
  403b0f:	cmp    edx,edx
  403b11:	inc    edi
  403b12:	les    eax,FWORD PTR [edi-0x42e474fa]
  403b18:	imul   bl
  403b1a:	cwde   
  403b1b:	addr16 push ebx
  403b1d:	dec    esi
  403b1e:	dec    esp
  403b1f:	push   0x6
  403b21:	adc    eax,0xab4f788d
  403b26:	sub    BYTE PTR [ecx+0x2b7f7e1f],ah
  403b2c:	(bad)  
  403b2d:	xor    eax,esi
  403b2f:	cmp    eax,ecx
  403b31:	jne    0x403b8d
  403b37:	or     ecx,0x18fd
  403b3d:	mov    eax,DWORD PTR [ebp-0x8]
  403b40:	and    DWORD PTR ds:0x42916b,0x3a4c
  403b4a:	mov    ecx,DWORD PTR [ebp-0x10]
  403b4d:	adc    DWORD PTR ds:0x42916b,0x4291f3
  403b57:	xor    eax,esi
  403b59:	xor    DWORD PTR ds:0x4291d3,0x4291f7
  403b63:	xor    ecx,esi
  403b65:	sub    eax,ecx
  403b67:	sub    eax,edi
  403b69:	mov    ecx,DWORD PTR ds:0x429bcf
  403b6f:	mov    ecx,DWORD PTR [ecx]
  403b71:	xor    DWORD PTR ds:0x429163,ecx
  403b77:	xor    eax,esi
  403b79:	mov    DWORD PTR [ebp-0x8],eax
  403b7c:	mov    eax,DWORD PTR [ebp-0x10]
  403b7f:	xor    eax,esi
  403b81:	mov    ecx,0xffcd8d8d
  403b86:	sub    ecx,eax
  403b88:	jmp    0x403b9c
  403b8d:	mov    eax,DWORD PTR [ebp-0x10]
  403b90:	xor    eax,esi
  403b92:	mov    ecx,0xffcd8d0d
  403b97:	sub    ecx,eax
  403b99:	add    ecx,DWORD PTR [ebp-0xc]
  403b9c:	mov    DWORD PTR [ebp-0xc],ecx
  403b9f:	mov    eax,DWORD PTR [ebp-0x8]
  403ba2:	cmp    eax,0xf89c85a1
  403ba7:	jne    0x40158a
  403bad:	mov    DWORD PTR [ebp-0x34],0x9
  403bb4:	mov    ecx,DWORD PTR [ebp+0x8]
  403bb7:	xor    ecx,esi
  403bb9:	add    ecx,edi
  403bbb:	jmp    0x40857d
  403bc0:	lea    eax,[ecx+ebx*1]
  403bc3:	mov    DWORD PTR [ebp-0x2c],eax
  403bc6:	mov    eax,DWORD PTR [ebp-0x58]
  403bc9:	sub    eax,ecx
  403bcb:	mov    DWORD PTR [ebp-0x1c],eax
  403bce:	mov    eax,DWORD PTR [ebp-0x1c]
  403bd1:	mov    DWORD PTR [ebp-0x14],eax
  403bd4:	mov    eax,DWORD PTR [ebp-0x2c]
  403bd7:	mov    DWORD PTR [ebp-0x38],0xf89c85a1
  403bde:	mov    DWORD PTR [ebp-0x54],eax
  403be1:	mov    DWORD PTR [ebp-0x20],0xf89c85a2
  403be8:	mov    eax,DWORD PTR [ebp-0x38]
  403beb:	xor    eax,esi
  403bed:	add    eax,edi
  403bef:	mov    DWORD PTR [ebp-0x10],eax
  403bf2:	mov    eax,DWORD PTR [ebp-0x38]
  403bf5:	xor    eax,esi
  403bf7:	add    eax,edi
  403bf9:	mov    DWORD PTR [ebp-0x8],eax
  403bfc:	mov    DWORD PTR [ebp-0x2c],0xf89c8581
  403c03:	mov    DWORD PTR [ebp-0x44],0xf89c85b8
  403c0a:	mov    eax,DWORD PTR [ebp-0x38]
  403c0d:	mov    edx,DWORD PTR [ebp-0x14]
  403c10:	xor    eax,esi
  403c12:	add    eax,edi
  403c14:	cmp    edx,eax
  403c16:	je     0x408571
  403c1c:	mov    eax,DWORD PTR [ebp-0x20]
  403c1f:	xor    eax,esi
  403c21:	mov    edx,0xffcd8d0d
  403c26:	sub    edx,eax
  403c28:	add    edx,DWORD PTR [ebp-0x14]
  403c2b:	mov    eax,DWORD PTR [ebp-0x20]
  403c2e:	mov    ebx,DWORD PTR [ebp-0x10]
  403c31:	xor    eax,esi
  403c33:	add    eax,edi
  403c35:	imul   eax,ebx
  403c38:	cmp    eax,edx
  403c3a:	ja     0x40856e
  403c40:	mov    edx,DWORD PTR [ebp-0x10]
  403c43:	mov    eax,DWORD PTR [ebp-0x14]
  403c46:	mov    ebx,DWORD PTR [ebp-0x2c]
  403c49:	sub    eax,edx
  403c4b:	xor    ebx,esi
  403c4d:	xor    edx,edx
  403c4f:	add    ebx,edi
  403c51:	div    ebx
  403c53:	mov    DWORD PTR [ebp-0x8],eax
  403c56:	mov    eax,DWORD PTR [ebp-0x44]
  403c59:	mov    edx,DWORD PTR [ebp-0x8]
  403c5c:	xor    eax,esi
  403c5e:	add    eax,edi
  403c60:	cmp    edx,eax
  403c62:	jbe    0x403c72
  403c68:	mov    eax,DWORD PTR [ebp-0x44]
  403c6b:	xor    eax,esi
  403c6d:	add    eax,edi
  403c6f:	mov    DWORD PTR [ebp-0x8],eax
  403c72:	mov    eax,DWORD PTR [ebp-0x2c]
  403c75:	mov    edx,DWORD PTR [ebp-0x8]
  403c78:	xor    eax,esi
  403c7a:	add    eax,edi
  403c7c:	imul   eax,edx
  403c7f:	mov    DWORD PTR [ebp-0x8],eax
  403c82:	mov    eax,DWORD PTR [ebp-0x38]
  403c85:	mov    edx,DWORD PTR [ebp-0x8]
  403c88:	jmp    0x406039
  403c8d:	mov    eax,0xa02c6f67
  403c92:	and    al,0xb8
  403c94:	out    0x12,eax
  403c96:	mov    bh,0x24
  403c98:	ffree  st(5)
  403c9a:	jbe    0x403ced
  403c9c:	clc    
  403c9d:	out    dx,eax
  403c9e:	pop    esp
  403c9f:	add    DWORD PTR [ebx-0x7c7ca311],0x6a
  403ca6:	les    eax,FWORD PTR ds:0xb353be99
  403cac:	mov    edx,0xf5231afc
  403cb1:	cwde   
  403cb2:	test   al,0xb2
  403cb4:	js     0x403cf0
  403cb6:	push   esi
  403cb7:	in     al,dx
  403cb8:	imul   edi,DWORD PTR [eax+0x76815256],0xffffffb3
  403cbf:	call   0x851f7301
  403cc4:	jle    0x403ce8
  403cc6:	xor    BYTE PTR [ebp-0x79966348],al
  403ccc:	ror    DWORD PTR [ecx-0x66283f9],1
  403cd2:	fld    DWORD PTR [esi]
  403cd4:	or     cl,BYTE PTR [bp-0xfba]
  403cd9:	ds fsub st(2),st
  403cdc:	shl    DWORD PTR ds:0x6283e9a9,0xdf
  403ce3:	mov    dh,ch
  403ce5:	pop    es
  403ce6:	push   ecx
  403ce7:	inc    ecx
  403ce8:	in     al,0xd0
  403cea:	call   0x29b85219
  403cef:	scas   al,BYTE PTR es:[edi]
  403cf0:	or     BYTE PTR [ebx-0x6de622c6],dl
  403cf6:	xchg   BYTE PTR [ebx],ah
  403cf8:	sub    edi,DWORD PTR [eax-0x4b6dd7e4]
  403cfe:	scas   eax,DWORD PTR es:[edi]
  403cff:	repnz sub BYTE PTR [esi-0x49],ch
  403d03:	pop    es
  403d04:	adc    dl,bl
  403d06:	jecxz  0x403cc0
  403d08:	push   esi
  403d09:	sbb    ebp,edi
  403d0b:	jp     0x403d10
  403d0d:	xchg   edx,eax
  403d0e:	mov    bh,BYTE PTR ds:0x527379fd
  403d14:	call   0x79e5:0x6922a744
  403d1b:	js     0x403d0b
  403d1d:	inc    ebp
  403d1e:	setb   BYTE PTR [edx-0x2611bd4d]
  403d25:	icebp  
  403d26:	dec    DWORD PTR [esi]
  403d28:	adc    eax,0x6e60d60f
  403d2d:	pop    ebx
  403d2e:	pinsrw mm0,WORD PTR [ebp+0x7e],0x45
  403d33:	ds mov ebp,0x496787c1
  403d39:	(bad)
  403d3c:	fstp   QWORD PTR [esi+0x30]
  403d3f:	neg    al
  403d41:	dec    esp
  403d42:	ficom  DWORD PTR [edx+ebx*1-0x4e]
  403d46:	clc    
  403d47:	imul   BYTE PTR [edx+0x1b]
  403d4a:	or     DWORD PTR [edx-0x15],ebx
  403d4d:	and    DWORD PTR [ebp-0x8],ebp
  403d50:	xchg   edi,eax
  403d51:	repnz push eax
  403d53:	rcl    BYTE PTR [eax-0x7d],1
  403d56:	xor    BYTE PTR [eax+0x6a24e56b],0x52
  403d5d:	pop    ss
  403d5e:	int3   
  403d5f:	adc    ch,cl
  403d61:	test   dl,ah
  403d63:	repnz push edi
  403d65:	mov    dl,0x46
  403d67:	movaps xmm3,xmm2
  403d6a:	cld    
  403d6b:	shl    BYTE PTR [edx],1
  403d6d:	mov    cl,0xe8
  403d6f:	cmp    BYTE PTR [esi+ecx*2-0x411134e1],bh
  403d76:	add    esi,DWORD PTR [ecx+0x4e509f96]
  403d7c:	and    al,BYTE PTR ds:0x6a5df179
  403d82:	push   0x83984d7
  403d87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d88:	or     ch,BYTE PTR [ebp+0xad56ea6]
  403d8e:	js     0x403de9
  403d90:	pop    edx
  403d91:	mov    ds:0x10bec2da,al
  403d96:	sub    eax,0x2a927742
  403d9b:	add    eax,DWORD PTR [esi+0x53821922]
  403da1:	pop    es
  403da2:	cwde   
  403da3:	push   0x9240205f
  403da8:	rcr    BYTE PTR [ebx],1
  403daa:	leave  
  403dab:	retf   
  403dac:	or     esp,ecx
  403dae:	push   0x283d68c
  403db3:	stos   BYTE PTR es:[edi],al
  403db4:	jmp    0x403db7
  403db6:	icebp  
  403db7:	das    
  403db8:	push   esi
  403db9:	stc    
  403dba:	add    ch,BYTE PTR [ebx-0x22]
  403dbd:	je     0x403d52
  403dbf:	(bad)  
  403dc0:	repnz xor DWORD PTR [ebx],ebx
  403dc3:	cld    
  403dc4:	and    ecx,DWORD PTR [esi-0xd]
  403dc7:	mov    eax,ds:0xebc036a7
  403dcc:	jle    0x403e1f
  403dce:	sar    esp,0xa
  403dd1:	adc    BYTE PTR [esi+0x11],dl
  403dd4:	mov    cl,0x71
  403dd6:	push   esi
  403dd8:	jno    0x403d6c
  403dda:	sahf   
  403ddb:	or     BYTE PTR [ecx+0x55],ch
  403dde:	cmp    cl,BYTE PTR [ebp-0x51db4f02]
  403de4:	push   ds
  403de5:	adc    ah,BYTE PTR [edx-0x26a70f2a]
  403deb:	jb     0x403d90
  403ded:	and    DWORD PTR [esi+0x798c3ef8],esi
  403df3:	jmp    0x403e0d
  403df5:	das    
  403df6:	nop
  403df7:	ins    BYTE PTR es:[edi],dx
  403df8:	or     eax,0x2fa06424
  403dfd:	cmovg  ecx,DWORD PTR [edx]
  403e00:	push   ds
  403e01:	xchg   ecx,eax
  403e02:	cdq    
  403e03:	inc    ebx
  403e04:	sub    BYTE PTR [ebx+eax*1+0x5e],0x28
  403e09:	aaa    
  403e0a:	dec    esp
  403e0b:	sbb    DWORD PTR [eax+0x7eedc89e],0x13
  403e12:	mov    es,WORD PTR [ebx]
  403e14:	sahf   
  403e15:	mov    ah,BYTE PTR [edx+edx*1+0x145df51e]
  403e1c:	and    ch,BYTE PTR [ecx-0x42]
  403e1f:	jge    0x403e2f
  403e21:	outs   dx,BYTE PTR ds:[esi]
  403e22:	mov    eax,ds:0x97352a95
  403e27:	dec    esp
  403e28:	dec    edx
  403e29:	mov    bl,0x7a
  403e2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e2c:	ret    0x2617
  403e2f:	repnz pop edi
  403e31:	enter  0x7bc3,0xa6
  403e35:	aad    0x8e
  403e37:	mov    esi,DWORD PTR [eax-0x6f]
  403e3a:	and    ecx,DWORD PTR [ecx-0x7e]
  403e3d:	mov    al,0x69
  403e3f:	dec    eax
  403e40:	xchg   edx,eax
  403e41:	sbb    al,0x84
  403e43:	imul   edi,esi,0xf499aac
  403e49:	mov    ch,0xe0
  403e4b:	mov    bh,0x42
  403e4d:	xchg   ebp,eax
  403e4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e4f:	sbb    ah,BYTE PTR [ecx]
  403e51:	jge    0x403e74
  403e53:	mov    esi,0x383d5a6d
  403e58:	sub    DWORD PTR [ebx+0x6099e80e],0xa0fff812
  403e62:	jns    0x403e4a
  403e64:	inc    ecx
  403e65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e66:	sub    ah,BYTE PTR [edx-0xca2d35a]
  403e6c:	sti    
  403e6d:	out    0x0,al
  403e6f:	das    
  403e70:	mov    es,WORD PTR [ecx]
  403e72:	sti    
  403e73:	push   esp
  403e74:	inc    edx
  403e75:	sub    esp,DWORD PTR [ecx+0x8]
  403e78:	and    ch,BYTE PTR [esi-0x20]
  403e7b:	add    bl,BYTE PTR [esi+0x72f13741]
  403e81:	hlt    
  403e82:	imul   DWORD PTR [ebx-0x2248e4f7]
  403e88:	push   esi
  403e89:	cmp    ebp,eax
  403e8b:	pop    esi
  403e8c:	sbb    eax,0x977494d4
  403e91:	xchg   BYTE PTR [eax],al
  403e93:	or     al,0xf1
  403e95:	pop    es
  403e96:	push   esi
  403e97:	fld    TBYTE PTR [edx+0xe6897b0]
  403e9d:	icebp  
  403e9e:	xor    DWORD PTR [edi+edi*8+0x6],edi
  403ea2:	js     0x403e90
  403ea4:	xor    BYTE PTR [ecx],0x4
  403ea7:	jae    0x403e51
  403ea9:	out    dx,eax
  403eaa:	iret   
  403eab:	xor    DWORD PTR [ebp-0x5b586865],ecx
  403eb1:	shl    DWORD PTR [eax-0x2782f1ec],1
  403eb7:	outs   dx,DWORD PTR ds:[esi]
  403eb8:	jns    0x403f24
  403eba:	(bad)  
  403ebb:	les    esi,FWORD PTR [edi-0x4e]
  403ebe:	cs mov ch,0xf
  403ec1:	mov    ecx,0x49c4bd98
  403ec6:	push   ebx
  403ec7:	adc    eax,0xa2cf07a5
  403ecc:	mov    al,ds:0x2cc7147f
  403ed1:	mov    edi,0xadf945f
  403ed6:	(bad)  
  403ed7:	outs   dx,BYTE PTR ds:[esi]
  403ed8:	adc    BYTE PTR [esi],0x68
  403edb:	inc    ecx
  403edc:	mov    es,WORD PTR [ecx]
  403ede:	cld    
  403edf:	cmc    
  403ee0:	jb     0x403eae
  403ee2:	(bad)
  403ee6:	ja     0x403ea8
  403ee8:	mov    al,0xf0
  403eea:	cmp    DWORD PTR [edi-0x49a64522],ecx
  403ef0:	adc    edx,0xffffffc4
  403ef3:	and    eax,0xe4988ee5
  403ef8:	pop    ebx
  403ef9:	mov    BYTE PTR [ebx-0x1e3a9d52],dh
  403eff:	les    ecx,FWORD PTR es:[ebx+0x16]
  403f03:	fbld   TBYTE PTR [edi-0x5fc64132]
  403f09:	mov    esp,0x5b77227
  403f0e:	outs   dx,BYTE PTR ds:[si]
  403f10:	inc    edi
  403f11:	adc    al,0x94
  403f13:	nop
  403f14:	std    
  403f15:	test   al,0xc2
  403f17:	pop    edx
  403f18:	xchg   BYTE PTR [ebx-0x4f5a9377],ah
  403f1e:	or     al,0x26
  403f20:	lock imul esi,DWORD PTR [ecx],0xffffffce
  403f24:	loope  0x403f93
  403f26:	fs inc edi
  403f28:	(bad)  
  403f29:	xor    eax,0xe615f724
  403f2e:	mov    ch,0xe0
  403f30:	imul   edi,DWORD PTR [edi+ecx*4],0xffffff93
  403f34:	jae    0x403ebd
  403f36:	pusha  
  403f37:	push   esi
  403f38:	xchg   esi,eax
  403f39:	mov    edx,0xc79b09ff
  403f3e:	shl    BYTE PTR [ebx-0x5c863e8d],cl
  403f44:	mov    dl,0xbc
  403f46:	adc    al,0x42
  403f48:	mov    bl,0x27
  403f4a:	pop    ss
  403f4b:	adc    al,0x69
  403f4d:	jmp    0xdb36:0xc7fa10be
  403f54:	jae    0x403f59
  403f56:	call   DWORD PTR [esp+ebp*4]
  403f59:	cmc    
  403f5a:	fwait
  403f5b:	sub    eax,0xcb7c86ab
  403f60:	jmp    0x6dbb:0xcf7e60c4
  403f67:	(bad)  
  403f68:	pop    ss
  403f69:	les    esi,FWORD PTR [eax-0x30]
  403f6c:	(bad)  
  403f6d:	pop    ds
  403f6e:	adc    BYTE PTR [eax],dl
  403f70:	imul   esp,DWORD PTR [ecx+0x10ce0d4],0xe
  403f77:	add    BYTE PTR [edx-0x4efd1b7a],bh
  403f7d:	out    0x2c,eax
  403f7f:	mov    ch,0xb6
  403f81:	fs jmp 0x403f0b
  403f84:	dec    edi
  403f85:	leave  
  403f86:	push   0x8b22bae1
  403f8b:	lods   al,BYTE PTR ds:[esi]
  403f8c:	dec    esp
  403f8d:	or     eax,DWORD PTR [edx+0x5fb734cf]
  403f93:	bound  ebx,QWORD PTR [edi+0x1ad7a414]
  403f99:	lock stc 
  403f9b:	cwde   
  403f9c:	adc    al,0xc3
  403f9e:	add    DWORD PTR [edx+0x2f145bff],eax
  403fa4:	mov    esp,0xca1478c
  403fa9:	fnstenv [edx+0x58]
  403fac:	push   edx
  403fad:	cmp    DWORD PTR [ebp+0x16c2eb7d],ebp
  403fb3:	jp     0x40400b
  403fb5:	loop   0x403fb6
  403fb7:	je     0x403f47
  403fb9:	push   0xffffff99
  403fbb:	loopne 0x403ff0
  403fbd:	sti    
  403fbe:	jmp    0x25a9:0x4783dbdb
  403fc5:	or     ecx,ebx
  403fc7:	gs jnp 0x403fe9
  403fca:	or     BYTE PTR [edx+edi*4+0x18e0c6c],0xaf
  403fd2:	popw   ss
  403fd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fd5:	pusha  
  403fd6:	mov    edx,0xbee68d6f
  403fdb:	sub    bl,0xd5
  403fde:	cmp    DWORD PTR [edx],eax
  403fe0:	(bad)  
  403fe1:	ins    BYTE PTR es:[edi],dx
  403fe2:	or     eax,ecx
  403fe4:	fcomp  DWORD PTR [esi+0x75]
  403fe7:	jbe    0x403fef
  403fe9:	jp     0x404055
  403feb:	(bad)  
  403fec:	xchg   ebp,eax
  403fed:	je     0x40406a
  403fef:	sbb    al,bh
  403ff1:	cmp    BYTE PTR [ebx-0x50],dh
  403ff4:	js     0x404021
  403ff6:	mov    al,fs:0xe7b0b456
  403ffc:	push   edx
  403ffd:	xor    DWORD PTR [edx],ebx
  403fff:	cmp    ah,BYTE PTR [ecx-0x665120c4]
  404005:	adc    BYTE PTR [ebp-0x19],dl
  404008:	sub    al,0x10
  40400a:	mov    esi,0x2b7943f
  40400f:	sub    al,0x5a
  404011:	into   
  404012:	xor    al,0x11
  404014:	push   ds
  404015:	jb     0x404015
  404017:	sbb    DWORD PTR [ebp-0x46448013],eax
  40401d:	pop    ds
  40401e:	aam    0xf
  404020:	dec    esi
  404021:	push   0x69346b87
  404026:	push   esi
  404027:	and    dh,BYTE PTR [ebp+0x74]
  40402a:	inc    esi
  40402b:	push   0x39f44882
  404030:	mov    bh,0x1b
  404032:	jl     0x404093
  404034:	pop    edx
  404035:	loope  0x40404d
  404037:	jo     0x4040a6
  404039:	and    BYTE PTR [edi+0x6e],bl
  40403c:	je     0x4040bd
  40403e:	out    0xe1,eax
  404040:	jno    0x40408b
  404042:	or     DWORD PTR [ebx],0xffffff8b
  404045:	je     0x40403c
  404047:	call   0xbd86e15e
  40404c:	dec    edx
  40404d:	je     0x40403f
  40404f:	or     bh,BYTE PTR [edx+0x78cbdf33]
  404055:	add    eax,0x66fade3b
  40405a:	das    
  40405b:	and    BYTE PTR [edi],ah
  40405d:	shl    ecx,0x85
  404060:	(bad)  [ecx+ebx*1+0x5f]
  404064:	jl     0x40406d
  404066:	pop    edx
  404067:	sahf   
  404068:	ins    DWORD PTR es:[edi],dx
  404069:	je     0x404052
  40406b:	mov    ebp,0x1aac0cb8
  404070:	push   edx
  404071:	pop    esi
  404072:	dec    edi
  404073:	into   
  404074:	loope  0x404061
  404076:	pop    ss
  404077:	mov    dh,0xb7
  404079:	xchg   ebx,eax
  40407a:	mov    ch,0xd5
  40407c:	cmp    DWORD PTR [esi],ebx
  40407e:	xchg   ebp,eax
  40407f:	dec    edx
  404080:	mov    eax,ds:0x5c34450f
  404085:	in     al,dx
  404086:	arpl   WORD PTR [edi+0x14],sp
  404089:	jmp    0xa377:0x2d22faf4
  404090:	add    esp,DWORD PTR ds:0xcd9e7e2b
  404096:	sahf   
  404097:	jl     0x4040ef
  404099:	xlat   BYTE PTR ds:[ebx]
  40409a:	fst    st(2)
  40409c:	arpl   WORD PTR [ebp-0x225e10cb],dx
  4040a2:	jecxz  0x40404d
  4040a4:	or     dh,BYTE PTR [edx]
  4040a6:	xchg   ebp,eax
  4040a7:	mov    esi,edi
  4040a9:	xlat   BYTE PTR ds:[ebx]
  4040aa:	adc    ch,BYTE PTR [esi+ebp*8+0x6b69f8fb]
  4040b1:	and    eax,0x8e711b33
  4040b6:	push   0x24415cb3
  4040bb:	fs js  0x404097
  4040be:	dec    ecx
  4040bf:	inc    esi
  4040c0:	xchg   ebp,eax
  4040c1:	jg     0x4040b0
  4040c3:	jle    0x404057
  4040c5:	xchg   edi,eax
  4040c6:	clc    
  4040c7:	cmp    BYTE PTR [esi+0x32],dl
  4040ca:	lock jmp 0x8c94:0x14922c1c
  4040d2:	mov    ebp,0x57c17e0e
  4040d7:	xor    edx,DWORD PTR [ecx+0x49764a81]
  4040dd:	out    dx,al
  4040de:	cli    
  4040df:	xor    ecx,DWORD PTR [ebx+0x4b]
  4040e2:	enter  0x9be1,0x5b
  4040e6:	cdq    
  4040e7:	inc    esi
  4040e8:	lock lock and BYTE PTR [edx+0x41],cl
  4040ed:	outs   dx,BYTE PTR ds:[esi]
  4040ee:	loopne 0x4040c3
  4040f0:	jne    0x4040ba
  4040f2:	pop    ss
  4040f3:	es ret 0xc399
  4040f7:	mov    eax,0xb19140e3
  4040fc:	(bad)  
  4040fd:	ins    BYTE PTR es:[edi],dx
  4040fe:	mov    esp,cs
  404100:	or     DWORD PTR [esi+0x520eddb5],ebp
  404106:	mov    ecx,0xb675221c
  40410b:	packssdw mm0,QWORD PTR [edx+eiz*4-0x6]
  404110:	jbe    0x4040d5
  404112:	push   edi
  404113:	xchg   dh,ch
  404115:	pop    esp
  404116:	xchg   ebp,eax
  404117:	push   ds
  404118:	push   cs
  404119:	push   eax
  40411a:	mov    WORD PTR [esi-0x3313121],ss
  404120:	mov    esi,0x69ffcba8
  404125:	repz push cs
  404127:	and    dh,cl
  404129:	in     al,dx
  40412a:	pop    edx
  40412b:	das    
  40412c:	cmc    
  40412d:	jbe    0x4040b9
  40412f:	add    ah,BYTE PTR [esi]
  404131:	jge    0x404159
  404133:	dec    esi
  404134:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404135:	adc    eax,0xd4f0352e
  40413a:	popa   
  40413b:	mov    cl,0x30
  40413d:	dec    eax
  40413e:	pop    edi
  40413f:	add    BYTE PTR [edi+0x70c77f01],0xdf
  404146:	mov    esi,0x7bab7435
  40414b:	std    
  40414c:	popa   
  40414d:	cmp    eax,0xe3299bad
  404152:	fmul   QWORD PTR [ebp+0x1b]
  404155:	ja     0x40411e
  404157:	jp     0x4041b7
  404159:	sub    ebp,edi
  40415b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40415c:	enter  0x9817,0xc9
  404160:	ds mov eax,0xe1838ae4
  404166:	xor    eax,0x8ef69e5
  40416b:	jl     0x40418b
  40416d:	mov    ch,0x16
  40416f:	jg     0x40413a
  404171:	test   BYTE PTR [edx+0x6c],ch
  404174:	cmp    BYTE PTR [ebp+0x71],cl
  404177:	sbb    esp,DWORD PTR [edi-0x390dcf5c]
  40417d:	cmp    esi,DWORD PTR [ecx+0x56]
  404180:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404181:	(bad)  
  404182:	(bad)  
  404183:	jmp    0xbc68:0xc979f335
  40418a:	aam    0xd7
  40418c:	adc    eax,0x61fc414d
  404191:	test   eax,0x4cb619aa
  404196:	dec    edi
  404197:	sti    
  404198:	pop    ds
  404199:	mov    cl,0xa1
  40419b:	jmp    0x4041e0
  40419d:	adc    BYTE PTR [edx-0x44],bl
  4041a0:	cs in  eax,0x79
  4041a3:	push   edx
  4041a4:	in     eax,0xe7
  4041a6:	aaa    
  4041a7:	pusha  
  4041a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041a9:	cmp    BYTE PTR [ebp-0x15eea1a],bl
  4041af:	mov    ds:0x211018eb,al
  4041b4:	ret    0xc2c6
  4041b7:	mov    ds:0x2f3b2836,eax
  4041bc:	inc    ecx
  4041bd:	pop    esi
  4041be:	lds    eax,FWORD PTR [esi-0x3d18163a]
  4041c4:	test   al,0x7
  4041c6:	mov    edx,0x389da336
  4041cb:	ficomp WORD PTR [edi-0x1c9c6001]
  4041d1:	lea    eax,[esi+ebx*4-0x29]
  4041d5:	iret   
  4041d6:	ficomp DWORD PTR [edi+0x21]
  4041d9:	xlat   BYTE PTR ds:[ebx]
  4041da:	inc    ecx
  4041db:	out    dx,al
  4041dc:	mov    esi,0xeadf71fe
  4041e1:	lods   al,BYTE PTR ds:[esi]
  4041e2:	aad    0x6a
  4041e4:	fs shl eax,0x8e
  4041e8:	adc    DWORD PTR [ebp+0x333e15a4],esi
  4041ee:	mov    ah,0x2c
  4041f0:	sbb    ebp,DWORD PTR [esi-0x61625969]
  4041f6:	out    dx,al
  4041f7:	xchg   ebp,eax
  4041f8:	in     al,dx
  4041f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041fa:	test   DWORD PTR ds:0x39a3171d,edx
  404200:	mov    ah,BYTE PTR [ebx]
  404202:	sub    BYTE PTR [ebp-0x5b],ah
  404205:	mov    WORD PTR [edx-0x50553b98],?
  40420b:	je     0x404248
  40420d:	pop    esi
  40420e:	fidivr DWORD PTR [esi-0x3fe11c69]
  404214:	loop   0x404250
  404216:	mov    bh,0x4f
  404218:	sbb    DWORD PTR [eax-0x54],ecx
  40421b:	fmul   QWORD PTR [eax]
  40421d:	and    al,0x9f
  40421f:	push   ds
  404220:	sbb    eax,0xa1a833e9
  404225:	pop    ss
  404226:	stos   BYTE PTR es:[edi],al
  404227:	fwait
  404228:	inc    eax
  404229:	inc    esi
  40422a:	jno    0x404227
  40422c:	mov    ecx,DWORD PTR [edx]
  40422e:	test   BYTE PTR [edx-0x6f5205ff],0xda
  404235:	lods   al,BYTE PTR ds:[esi]
  404236:	mov    ch,BYTE PTR [edx+0x7d472929]
  40423c:	icebp  
  40423d:	sub    ebp,edx
  40423f:	rcr    BYTE PTR [ebx],1
  404241:	lods   al,BYTE PTR ds:[esi]
  404242:	mov    bh,0x97
  404244:	out    dx,al
  404245:	xor    edx,edx
  404247:	mov    edi,0x665dec7e
  40424c:	fild   QWORD PTR [esi+0x542adb9c]
  404252:	mov    edi,eax
  404254:	les    esp,FWORD PTR [eax-0x11]
  404257:	lahf   
  404258:	ds inc ecx
  40425a:	and    eax,0xbf14b8d3
  40425f:	dec    eax
  404260:	adc    DWORD PTR [eax+0x7f],ecx
  404263:	cli    
  404264:	jle    0x40428a
  404266:	cmp    al,0xed
  404268:	popa   
  404269:	test   BYTE PTR [eax],ah
  40426b:	xchg   BYTE PTR [ebx],ah
  40426d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40426e:	in     al,0x8a
  404270:	jo     0x40424c
  404272:	ds or  eax,0x770509e
  404278:	repz mov ecx,esi
  40427b:	xchg   edi,eax
  40427c:	shl    DWORD PTR [ebx-0x4195c1d9],0xcf
  404283:	out    0x2e,al
  404285:	bound  esi,QWORD PTR [eax-0x3c]
  404288:	jmp    0x98dc4102
  40428d:	mov    ds:0xf2612627,al
  404292:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404293:	stc    
  404294:	mov    BYTE PTR [esi],0xb1
  404297:	or     esp,ecx
  404299:	cmp    edi,DWORD PTR [edx-0xbe04a9e]
  40429f:	dec    esi
  4042a0:	fxch   st(2)
  4042a2:	cmc    
  4042a3:	push   ss
  4042a4:	add    al,0x61
  4042a6:	pop    edi
  4042a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042a8:	jnp    0x404292
  4042aa:	and    ebp,ebp
  4042ac:	aas    
  4042ad:	mov    eax,0x13d35903
  4042b2:	and    eax,0x29e863dd
  4042b7:	lock push 0x4f
  4042ba:	les    esi,FWORD PTR [ebp+0x7d]
  4042bd:	add    al,0x57
  4042bf:	or     BYTE PTR [edx+0x52],cl
  4042c2:	jae    0x4042c8
  4042c4:	inc    esi
  4042c5:	imul   esp,DWORD PTR [edx-0x5],0x4d
  4042c9:	jmp    0x4042ef
  4042cb:	retf   0xfb03
  4042ce:	sbb    esp,DWORD PTR [ebx+0x6ce84022]
  4042d4:	xchg   esi,eax
  4042d5:	mov    bh,0x4e
  4042d7:	out    dx,al
  4042d8:	ins    BYTE PTR es:[edi],dx
  4042d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042da:	addr16 and eax,0x511f4c82
  4042e0:	pop    ecx
  4042e1:	jge    0x4042a1
  4042e3:	jl     0x404347
  4042e5:	lahf   
  4042e6:	push   cs
  4042e7:	and    DWORD PTR [ebp+0x76d2dd64],esp
  4042ed:	push   ecx
  4042ee:	xlat   BYTE PTR ds:[ebx]
  4042ef:	(bad)  
  4042f0:	adc    al,0x88
  4042f2:	jg     0x4042e7
  4042f4:	adc    al,0x17
  4042f6:	loopne 0x4042f0
  4042f8:	xchg   DWORD PTR [edx],edi
  4042fa:	out    dx,eax
  4042fb:	cmp    DWORD PTR [esi-0x4a],0x4c
  4042ff:	repnz pop esp
  404301:	and    BYTE PTR [ebp-0x9bf6947],ch
  404307:	test   eax,0xcd0410e0
  40430c:	xchg   BYTE PTR [ecx-0x5af33f18],bl
  404312:	popa   
  404313:	xchg   BYTE PTR [esi+0x61],ch
  404316:	ins    DWORD PTR es:[edi],dx
  404317:	or     ebp,DWORD PTR [ebp-0x3]
  40431a:	sub    eax,0x11fc203a
  40431f:	lods   al,BYTE PTR ds:[esi]
  404320:	pop    edx
  404321:	push   edx
  404322:	cli    
  404323:	popf   
  404324:	sbb    al,0x52
  404326:	retf   0x4fb7
  404329:	lods   al,BYTE PTR ds:[esi]
  40432a:	stos   BYTE PTR es:[edi],al
  40432b:	add    DWORD PTR [esi-0x33beee85],esi
  404331:	dec    ebp
  404332:	mov    ebx,esi
  404334:	loope  0x4042f3
  404336:	jmp    0x4042ec
  404338:	bnd ret 0x79a1
  40433c:	add    BYTE PTR [edi],0x36
  40433f:	icebp  
  404340:	mov    al,ds:0x3656164b
  404345:	loopne 0x404315
  404347:	fwait
  404348:	sbb    eax,0x8c48d30e
  40434d:	inc    eax
  40434e:	jmp    0x5d10276d
  404353:	jo     0x4043b2
  404355:	jle    0x4043c5
  404357:	dec    ebp
  404358:	adc    bl,BYTE PTR [ebp+0x2c994c23]
  40435e:	imul   eax,DWORD PTR [edi+0xc],0x399d0e8e
  404365:	cmp    al,0x1b
  404367:	sbb    eax,DWORD PTR [ecx]
  404369:	xor    edx,ecx
  40436b:	xchg   edx,eax
  40436c:	popf   
  40436d:	stos   BYTE PTR es:[edi],al
  40436e:	cmp    esp,DWORD PTR [ebx]
  404370:	add    eax,0x90dfd9f7
  404375:	xchg   esi,eax
  404376:	ret    0x66f7
  404379:	loopne 0x40430b
  40437b:	mov    eax,0x60d4101f
  404380:	pop    edi
  404381:	sbb    eax,0xcb197485
  404386:	adc    ebp,edx
  404388:	xchg   ecx,eax
  404389:	clc    
  40438a:	dec    edx
  40438b:	jg     0x4043f6
  40438d:	dec    esi
  40438e:	push   ebp
  40438f:	dec    ebp
  404390:	(bad)  
  404391:	sahf   
  404392:	jmp    FWORD PTR [esi+0x5]
  404395:	rcl    DWORD PTR [edx],cl
  404397:	in     eax,0x28
  404399:	pop    edx
  40439a:	and    al,0x20
  40439c:	jecxz  0x40439f
  40439e:	jecxz  0x4043f3
  4043a0:	std    
  4043a1:	pand   mm6,QWORD PTR [esi-0x68]
  4043a5:	adc    ebx,DWORD PTR [ebx-0x3e]
  4043a8:	enter  0x8a9f,0x1
  4043ac:	retf   
  4043ad:	ja     0x4043d4
  4043af:	enter  0xce33,0x90
  4043b3:	xchg   esp,eax
  4043b4:	leave  
  4043b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043b6:	outs   dx,BYTE PTR ds:[esi]
  4043b7:	bnd jb 0x404340
  4043ba:	inc    esp
  4043bb:	test   al,0xf3
  4043bd:	ret    
  4043be:	add    eax,0x973c3a04
  4043c3:	loope  0x404413
  4043c5:	mov    al,0x5f
  4043c7:	pushf  
  4043c8:	std    
  4043c9:	fist   DWORD PTR [edx]
  4043cb:	and    al,BYTE PTR [edi]
  4043cd:	jecxz  0x4043d0
  4043cf:	xor    eax,DWORD PTR [eax+0x5c]
  4043d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043d3:	mov    esp,DWORD PTR [ecx+0x481be65e]
  4043d9:	mov    bh,0x53
  4043db:	aaa    
  4043dc:	inc    edi
  4043dd:	mov    edi,0xea3558d6
  4043e2:	in     al,dx
  4043e3:	cmp    eax,0x871e6756
  4043e8:	outs   dx,DWORD PTR ds:[esi]
  4043e9:	pop    edx
  4043ea:	sub    eax,0x66cb7b0f
  4043ef:	mov    ds,WORD PTR [ebp+edx*4-0x1b67a1e6]
  4043f6:	xchg   ebx,eax
  4043f7:	sbb    eax,0x48574173
  4043fc:	and    bl,BYTE PTR [ebx+0x77]
  4043ff:	cmp    eax,0xee590ca4
  404404:	mov    WORD PTR [ebx],es
  404406:	push   cs
  404407:	xor    ch,BYTE PTR [esi+0x516fdc41]
  40440d:	or     BYTE PTR [eax-0x18],dh
  404410:	jl     0x40439b
  404412:	and    ebx,DWORD PTR [ebx+0x5c268944]
  404418:	push   edx
  404419:	cmp    bh,BYTE PTR [ebx+0x66]
  40441c:	popaw  
  40441e:	mov    ecx,0xa34f164f
  404423:	lock call 0x48477eb6
  404429:	xlat   BYTE PTR ds:[ebx]
  40442a:	dec    esi
  40442b:	and    esp,DWORD PTR [eax-0x1f]
  40442e:	sbb    DWORD PTR [esi+0x20],ecx
  404431:	push   eax
  404432:	pop    ss
  404433:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404434:	lahf   
  404435:	xchg   edi,eax
  404436:	adc    edx,DWORD PTR [ecx+0x12]
  404439:	mov    ds:0x7be8f3e0,al
  40443e:	in     eax,0x79
  404440:	repnz xchg dl,ah
  404443:	pop    ss
  404444:	test   DWORD PTR [edi+0x49],eax
  404447:	pop    esp
  404448:	mov    al,ds:0x85b498a
  40444d:	aam    0x6d
  40444f:	icebp  
  404450:	das    
  404451:	test   DWORD PTR [ecx+0x55af8e75],0xea6ef0dd
  40445b:	cs (bad) 
  40445d:	pop    ebp
  40445e:	dec    ebp
  40445f:	stc    
  404460:	adc    esp,DWORD PTR [edi]
  404462:	ds popa 
  404464:	nop
  404465:	cmp    ah,BYTE PTR [ebx]
  404467:	pop    eax
  404468:	adc    DWORD PTR [eax+0x5817e810],ebp
  40446e:	rcl    edx,1
  404470:	jl     0x4044a0
  404472:	push   cs
  404473:	xchg   ebx,eax
  404474:	cli    
  404475:	inc    ebp
  404476:	jmp    0x404403
  404478:	lock cmc 
  40447a:	cmp    bh,ch
  40447c:	mov    dh,BYTE PTR [eax+ebp*2]
  40447f:	add    al,0x78
  404481:	mov    ch,BYTE PTR [esi]
  404483:	dec    esi
  404484:	mov    bl,0x84
  404486:	push   edx
  404487:	push   DWORD PTR [ebx+0xf63d448]
  40448d:	xlat   BYTE PTR ds:[ebx]
  40448e:	add    ecx,edi
  404490:	call   0x55fc127
  404495:	(bad)  
  404496:	in     al,dx
  404497:	jge    0x40449f
  404499:	test   BYTE PTR [ebx],dh
  40449b:	pushf  
  40449c:	add    DWORD PTR ds:0xad8d3cf7,esi
  4044a2:	jg     0x404483
  4044a4:	outs   dx,DWORD PTR ds:[esi]
  4044a5:	aas    
  4044a6:	or     bh,0x66
  4044a9:	gs push 0x42000951
  4044af:	je     0x404494
  4044b1:	push   ss
  4044b2:	imul   esp,DWORD PTR [eax],0x78
  4044b5:	push   es
  4044b6:	or     BYTE PTR [ebx-0x529405e0],ch
  4044bc:	adc    eax,0x6d0288a4
  4044c1:	cli    
  4044c2:	lods   al,BYTE PTR ds:[esi]
  4044c3:	mov    bh,0x13
  4044c5:	mov    DWORD PTR [ecx],ebx
  4044c7:	cmp    DWORD PTR [esi+0x404a2370],esi
  4044cd:	push   ecx
  4044ce:	cli    
  4044cf:	mov    esp,0xe8a7ef22
  4044d4:	sti    
  4044d5:	and    ebx,DWORD PTR [edi+0x36]
  4044d8:	inc    ecx
  4044d9:	fyl2x  
  4044db:	xchg   edi,eax
  4044dc:	not    BYTE PTR [ecx-0x7e]
  4044df:	pushf  
  4044e0:	mov    ebp,0x86608b2a
  4044e5:	enter  0x3519,0xfb
  4044e9:	jecxz  0x404471
  4044eb:	sbb    al,0x8d
  4044ed:	test   al,0x57
  4044ef:	out    0xf1,eax
  4044f1:	nop
  4044f2:	mov    edi,0x30ff7e8d
  4044f7:	and    al,0xe2
  4044f9:	int    0x7d
  4044fb:	inc    ebp
  4044fc:	push   0xf6496e88
  404501:	pop    ss
  404502:	int    0x6e
  404504:	sahf   
  404505:	ins    DWORD PTR es:[edi],dx
  404506:	xchg   edx,eax
  404507:	fcomp  DWORD PTR [ebx]
  404509:	gs push ebp
  40450b:	jbe    0x404511
  40450d:	mov    edx,0x66cf1e45
  404512:	jmp    0xaa702b10
  404517:	or     dh,dl
  404519:	les    esp,FWORD PTR [ebp-0x4d52982f]
  40451f:	repz pop es
  404521:	mov    edi,0x6f0b9d88
  404526:	stos   BYTE PTR es:[edi],al
  404527:	inc    esp
  404528:	cwde   
  404529:	dec    edi
  40452a:	test   BYTE PTR [eax+ebx*8],ah
  40452d:	bnd jg 0x40458e
  404530:	je     0x40453a
  404532:	and    al,0x42
  404534:	inc    BYTE PTR [edx+0x3a]
  404537:	jmp    0x9aa6:0xedc8d537
  40453e:	xor    BYTE PTR [esi],dh
  404540:	lock pop ds
  404542:	(bad)  
  404543:	or     al,BYTE PTR [esp+ecx*1+0x79]
  404547:	sbb    ebx,ecx
  404549:	adc    DWORD PTR [edx-0x73],esp
  40454c:	jns    0x40453f
  40454e:	sub    DWORD PTR [edi+0x4c69c0ba],ebp
  404554:	popf   
  404555:	jl     0x4045b7
  404557:	js     0x404555
  404559:	(bad)  
  40455a:	and    cl,BYTE PTR [ebp+0x2419a69f]
  404560:	or     DWORD PTR [edi+0x75c3cd62],edx
  404566:	clc    
  404567:	shl    eax,cl
  404569:	mov    ch,BYTE PTR [eax+0x7c]
  40456c:	in     eax,dx
  40456d:	pop    ecx
  40456e:	and    DWORD PTR ds:0xcd570c38,0xffffff9e
  404575:	sbb    ebp,edi
  404577:	inc    eax
  404578:	push   edi
  404579:	push   0x3e
  40457b:	cmp    ch,BYTE PTR [ecx+0x34]
  40457e:	mov    al,0xca
  404580:	(bad)  
  404581:	stos   BYTE PTR es:[edi],al
  404582:	scas   eax,DWORD PTR es:[edi]
  404583:	sub    BYTE PTR [edi-0x73],0xd6
  404587:	pop    edx
  404588:	dec    ebx
  404589:	mov    esi,0x55055cfc
  40458e:	sub    ebp,ecx
  404590:	jl     0x404527
  404592:	mov    al,ds:0x58126be
  404597:	repz jmp esp
  40459a:	jbe    0x40453b
  40459c:	push   edx
  40459d:	adc    DWORD PTR [edi],eax
  40459f:	sbb    ecx,DWORD PTR [ebp-0xf038d88]
  4045a5:	add    DWORD PTR [eax+0x63],edx
  4045a8:	xchg   ebx,eax
  4045a9:	into   
  4045aa:	(bad)  
  4045ab:	push   DWORD PTR [edi+0x51e10b56]
  4045b1:	mov    eax,ds:0xd28e7a95
  4045b6:	pushf  
  4045b7:	enter  0x919b,0x7a
  4045bb:	stc    
  4045bc:	aam    0xb6
  4045be:	lock imul edx,DWORD PTR [edi+0x1],0x50f1f09
  4045c6:	ins    DWORD PTR es:[edi],dx
  4045c7:	stc    
  4045c8:	jb     0x404626
  4045ca:	leave  
  4045cb:	mov    esp,0x7ca8b8f2
  4045d0:	mov    bh,0xc9
  4045d2:	add    edx,ecx
  4045d4:	inc    edx
  4045d5:	mov    dl,0xb0
  4045d7:	stos   BYTE PTR es:[edi],al
  4045d8:	das    
  4045d9:	mov    ds:0xbf8f7853,eax
  4045de:	inc    edx
  4045df:	leave  
  4045e0:	jb     0x4045a1
  4045e2:	retf   0xe1f5
  4045e5:	outs   dx,DWORD PTR ds:[esi]
  4045e6:	call   0x5c0db4f0
  4045eb:	arpl   si,sp
  4045ed:	cmp    eax,0x8c9c4705
  4045f2:	mov    dl,ah
  4045f4:	mov    ds,WORD PTR [edi]
  4045f6:	adc    BYTE PTR [ebx-0x69],0x15
  4045fa:	pop    ecx
  4045fb:	adc    ch,dl
  4045fd:	mov    ecx,0xae3941b3
  404602:	into   
  404603:	pop    ecx
  404604:	cmc    
  404605:	arpl   WORD PTR [ebp+0x1792d214],sp
  40460b:	outs   dx,DWORD PTR ds:[esi]
  40460c:	push   cs
  40460d:	sub    al,0xf4
  40460f:	ds ds pop ebp
  404612:	out    0x88,eax
  404614:	jns    0x4045b7
  404616:	xor    ecx,DWORD PTR [eax]
  404618:	stos   DWORD PTR es:[edi],eax
  404619:	push   esp
  40461a:	popf   
  40461b:	push   es
  40461c:	ficom  WORD PTR [edx-0x368f282f]
  404622:	mov    edx,0xa0dee53e
  404627:	mov    dl,0x3b
  404629:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40462a:	pusha  
  40462b:	div    DWORD PTR [edi]
  40462d:	adc    eax,0x53be5263
  404632:	xlat   BYTE PTR ds:[ebx]
  404633:	inc    edi
  404634:	mul    BYTE PTR [esi]
  404636:	jne    0x404655
  404638:	mov    bl,0xb5
  40463a:	push   edi
  40463b:	(bad)  
  40463c:	cmc    
  40463d:	sti    
  40463e:	outs   dx,BYTE PTR ds:[esi]
  40463f:	ins    DWORD PTR es:[edi],dx
  404640:	hlt    
  404641:	lock int 0xd9
  404644:	je     0x404647
  404646:	sahf   
  404647:	lahf   
  404648:	(bad)  
  404649:	mov    edx,0x78b3cc0b
  40464e:	lahf   
  40464f:	fimul  DWORD PTR ds:[ebx+ebp*4]
  404653:	xor    DWORD PTR [ecx+edx*2-0x60210c7a],ebx
  40465a:	jbe    0x40462c
  40465c:	mov    esp,0x138722e0
  404661:	cli    
  404662:	mov    eax,0xc2eff465
  404667:	jmp    0xfc7c:0xe108097
  40466e:	cmc    
  40466f:	out    0x77,eax
  404671:	cli    
  404672:	dec    edi
  404673:	dec    edx
  404674:	addr16 das 
  404676:	jle    0x40464a
  404678:	push   ebp
  404679:	outs   dx,DWORD PTR ds:[esi]
  40467a:	popf   
  40467b:	push   cs
  40467c:	mov    ds:0xaeea8783,eax
  404681:	add    WORD PTR [eax+0x71],bx
  404685:	dec    eax
  404686:	addr16 mov bh,0xfa
  404689:	mov    cs,WORD PTR [ebp+0x4c7b4bfa]
  40468f:	xchg   edi,eax
  404690:	mov    esp,0xcafa9897
  404695:	xchg   edi,eax
  404696:	imul   edi,DWORD PTR [eax-0x733cb0f8],0x7c8d7719
  4046a0:	jo     0x4046ae
  4046a2:	xor    BYTE PTR [esi-0x65],0x86
  4046a6:	int    0x71
  4046a8:	icebp  
  4046a9:	or     BYTE PTR [ebx-0x43],bh
  4046ac:	mov    esi,0x30d3c327
  4046b1:	mov    ds:0x803481fe,al
  4046b6:	jno    0x404708
  4046b8:	push   ss
  4046b9:	aad    0x24
  4046bb:	imul   esp,edx,0xffffffd7
  4046be:	cmp    al,0x6b
  4046c0:	shr    BYTE PTR [ecx-0xc],0x9
  4046c4:	jecxz  0x4046d5
  4046c6:	loopne 0x40470d
  4046c8:	cmp    BYTE PTR ds:0x7c4802a5,dl
  4046ce:	jmp    0x60e89108
  4046d3:	pop    edi
  4046d4:	(bad)  
  4046d5:	dec    bl
  4046d7:	pop    ebx
  4046d8:	add    DWORD PTR [edi+0x1e35be7c],edx
  4046de:	in     eax,dx
  4046df:	stos   DWORD PTR es:[edi],eax
  4046e0:	mov    bl,cl
  4046e2:	icebp  
  4046e3:	and    edi,esi
  4046e5:	adc    esp,DWORD PTR [ebx+0x2df61dac]
  4046eb:	aad    0xb
  4046ed:	cmp    BYTE PTR [ebx-0x7b],0x75
  4046f1:	std    
  4046f2:	cmp    BYTE PTR [esi+0x65],dh
  4046f5:	pop    esi
  4046f6:	pop    ds
  4046f7:	xlat   BYTE PTR ds:[ebx]
  4046f8:	mov    bl,0xca
  4046fa:	scas   eax,DWORD PTR es:[edi]
  4046fb:	je     0x4046c9
  4046fd:	je     0x40476d
  4046ff:	mov    dh,0x74
  404701:	inc    ebp
  404702:	cmp    bl,dl
  404704:	repnz pop edi
  404706:	jnp    0x4046db
  404708:	arpl   WORD PTR [edx],di
  40470a:	jne    0x4046fe
  40470c:	(bad)
  40470f:	jbe    0x404707
  404711:	arpl   WORD PTR [esi-0x4d],si
  404714:	ret    0x35bd
  404717:	add    al,0xf6
  404719:	pop    edx
  40471a:	in     al,dx
  40471b:	inc    esi
  40471c:	bound  esp,QWORD PTR [edi+ebp*8-0x25]
  404720:	ss idiv ch
  404723:	mov    bh,0xd0
  404725:	push   0xfbdecf4f
  40472a:	outs   dx,DWORD PTR ds:[esi]
  40472b:	dec    ebx
  40472c:	pop    eax
  40472d:	(bad)  
  40472f:	ret    0x47f4
  404732:	test   eax,0xda3874f9
  404737:	addr16 mov ah,0x6b
  40473a:	push   es
  40473b:	mov    ebx,0xe74075fa
  404740:	xor    BYTE PTR [esi-0x172ae0af],0x1c
  404747:	pop    edi
  404748:	sub    DWORD PTR [ecx],ecx
  40474a:	mov    ecx,0x5f259d56
  40474f:	sbb    ecx,DWORD PTR [ebx]
  404751:	push   edi
  404752:	fwait
  404753:	adc    al,0x4a
  404755:	iret   
  404756:	arpl   sp,bp
  404758:	rcl    ch,0x4e
  40475b:	std    
  40475c:	mov    ah,0xe2
  40475e:	jnp    0x40471d
  404760:	mov    ds:0xa847e43b,al
  404765:	gs push es
  404767:	cmp    cl,cl
  404769:	iret   
  40476a:	or     DWORD PTR [edi+eiz*4+0x533414c7],eax
  404771:	fidivr DWORD PTR [ebp+0x3161adf8]
  404777:	adc    eax,0xb85b66cc
  40477c:	ja     0x4047ca
  40477e:	cmp    DWORD PTR [ecx+edx*8],0xffffffe3
  404782:	sahf   
  404783:	adc    eax,0x748130b9
  404788:	mov    eax,ds:0x2865ef9c
  40478d:	mov    tr2,esp
  404790:	daa    
  404791:	mov    eax,DWORD PTR [eax]
  404793:	dec    ebp
  404794:	das    
  404795:	leave  
  404796:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404797:	arpl   WORD PTR [edi],sp
  404799:	dec    ebp
  40479a:	push   ebx
  40479b:	int3   
  40479c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40479d:	sbb    dl,BYTE PTR [esi-0x4a59a3fd]
  4047a3:	sbb    ah,BYTE PTR [edx]
  4047a5:	sti    
  4047a6:	push   ds
  4047a7:	adc    bh,0xe8
  4047aa:	fcmovb st,st(2)
  4047ac:	outs   dx,DWORD PTR ds:[esi]
  4047ad:	adc    BYTE PTR [edx],dl
  4047af:	add    ebp,ecx
  4047b1:	mov    ah,0x18
  4047b3:	xchg   edi,eax
  4047b4:	push   esi
  4047b5:	push   ds
  4047b6:	pusha  
  4047b7:	in     al,0x3e
  4047b9:	fsubr  DWORD PTR ds:0x94e2d01b
  4047bf:	and    al,0x5e
  4047c1:	cli    
  4047c2:	sub    esi,DWORD PTR [edx-0x19]
  4047c5:	xchg   BYTE PTR ds:0x84774ab2,ah
  4047cb:	in     eax,0x73
  4047cd:	mov    esi,0xceacddfa
  4047d2:	mov    ebp,0xb8dd32bf
  4047d7:	add    al,0xf8
  4047d9:	cwde   
  4047da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047db:	stos   DWORD PTR es:[edi],eax
  4047dc:	mov    edx,0xe9537f24
  4047e1:	dec    esp
  4047e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047e3:	pop    eax
  4047e4:	jp     0x4047ea
  4047e6:	dec    ebx
  4047e7:	(bad)  
  4047e8:	ins    DWORD PTR es:[edi],dx
  4047e9:	xchg   DWORD PTR [ecx-0x34],ebp
  4047ec:	ret    
  4047ed:	xlat   BYTE PTR ds:[ebx]
  4047ee:	fisub  WORD PTR [edi]
  4047f0:	sbb    dl,BYTE PTR [edx]
  4047f2:	jge    0x404796
  4047f4:	shl    bl,0xeb
  4047f7:	loop   0x404854
  4047f9:	dec    edx
  4047fa:	mov    ch,0x6f
  4047fc:	pop    cx
  4047fe:	(bad)  
  4047ff:	std    
  404800:	stos   DWORD PTR es:[edi],eax
  404801:	cs iret 
  404803:	test   al,0x9b
  404805:	cdq    
  404806:	inc    ebp
  404807:	pop    eax
  404808:	jle    0x404884
  40480a:	push   eax
  40480b:	call   0xdfe5:0xaa59e85a
  404812:	jno    0x4047d2
  404814:	inc    edx
  404815:	(bad)  
  404816:	fbstp  TBYTE PTR [edx]
  404818:	cmp    bl,ch
  40481a:	leave  
  40481b:	add    eax,DWORD PTR [eax-0x78]
  40481e:	xor    ah,BYTE PTR [edi]
  404820:	jmp    0x3f98f807
  404825:	test   BYTE PTR [esi+ecx*1-0x105afddc],0xd1
  40482d:	xchg   ebp,eax
  40482e:	mov    ah,0xac
  404830:	loop   0x4047f9
  404832:	test   al,0xda
  404834:	rcl    BYTE PTR [ecx-0x1e86ed5],0x5e
  40483b:	and    al,0x31
  40483d:	adc    DWORD PTR [ebx+0x15],edi
  404840:	or     DWORD PTR [esi+0x58360a03],edi
  404846:	je     0x4048c1
  404848:	gs push 0xffffffde
  40484b:	jne    0x4048b3
  40484d:	das    
  40484e:	cli    
  40484f:	xor    BYTE PTR [ebx],dl
  404851:	push   ebp
  404852:	les    edi,FWORD PTR [ebx+0x128f189]
  404858:	mov    ds:0x81adae7b,al
  40485d:	cs push 0xfffffffc
  404860:	retf   0xee35
  404863:	mov    al,0x48
  404865:	mov    bh,0x5a
  404867:	mov    edi,DWORD PTR [ebx+0x5e]
  40486a:	mov    esi,0xba59b2a5
  40486f:	mov    ds:0x46c2d7db,al
  404874:	jns    0x404811
  404876:	aam    0x8a
  404878:	mov    fs,WORD PTR [esi+ecx*8-0x56]
  40487c:	cdq    
  40487d:	in     al,0x1e
  40487f:	mov    edi,0x6b66c1b6
  404884:	mov    edx,0x5c63b562
  404889:	pop    edi
  40488a:	inc    esp
  40488b:	stc    
  40488c:	idiv   BYTE PTR cs:[ebp+0x54f3330a]
  404893:	outs   dx,BYTE PTR ds:[esi]
  404894:	popf   
  404895:	bound  esp,QWORD PTR [edx-0x651f468e]
  40489b:	pop    ebx
  40489c:	mov    eax,0x13129d16
  4048a1:	aas    
  4048a2:	mov    bl,0x22
  4048a4:	pop    ebp
  4048a5:	mov    ds:0xe9066bf3,al
  4048aa:	in     al,dx
  4048ab:	addr16 push ecx
  4048ad:	(bad)  
  4048ae:	scas   ax,WORD PTR es:[edi]
  4048b0:	sahf   
  4048b1:	sar    ah,0x27
  4048b4:	xchg   ecx,eax
  4048b5:	hlt    
  4048b6:	dec    edx
  4048b7:	mov    BYTE PTR [edi+ebp*8+0x7f84f365],dl
  4048be:	sbb    al,0x19
  4048c0:	mov    cl,0x27
  4048c2:	sbb    DWORD PTR [edi-0x3b8df5cf],0xffffffdd
  4048c9:	dec    ecx
  4048ca:	cli    
  4048cb:	pop    ecx
  4048cc:	(bad)  
  4048cd:	mov    dh,0xd3
  4048cf:	and    bh,al
  4048d1:	sbb    eax,0xc98edd29
  4048d6:	lods   al,BYTE PTR ds:[esi]
  4048d7:	adc    BYTE PTR [ebp+0x6c54080d],bh
  4048dd:	push   ebp
  4048de:	sbb    ebp,DWORD PTR [esi-0x51]
  4048e1:	inc    esp
  4048e2:	fist   WORD PTR [esi-0x24d6cff1]
  4048e9:	lock hlt 
  4048eb:	jle    0x4048bb
  4048ed:	adc    BYTE PTR [ebx],dl
  4048ef:	push   ebx
  4048f0:	push   eax
  4048f1:	nop
  4048f2:	dec    esi
  4048f3:	cwde   
  4048f4:	pop    es
  4048f5:	std    
  4048f6:	xchg   BYTE PTR [esi-0x9],bh
  4048f9:	jle    0x40495d
  4048fb:	mov    ecx,0xcc7453d
  404900:	mov    al,ah
  404902:	je     0x404957
  404904:	xchg   esp,eax
  404905:	sbb    BYTE PTR [ebx+0x26],dl
  404908:	mov    ds:0xb228037a,al
  40490d:	cmp    BYTE PTR [edx-0x7],ah
  404910:	iret   
  404911:	fsubr  DWORD PTR [esi-0x55fa976]
  404917:	dec    ebp
  404918:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404919:	loop   0x404941
  40491b:	(bad)  
  40491c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40491d:	inc    ecx
  40491e:	xchg   edx,eax
  40491f:	mov    DWORD PTR [ecx],0xd8dc6965
  404925:	mov    edx,esp
  404927:	loop   0x4049a8
  404929:	(bad)  
  40492a:	xchg   DWORD PTR [ebx-0x4fbb0eb9],esi
  404930:	idiv   bl
  404932:	or     cl,BYTE PTR [eax-0xa1b01fb]
  404938:	push   esp
  404939:	mov    bh,0xcb
  40493b:	call   0xb6a5487c
  404940:	push   ss
  404941:	sbb    dh,ch
  404943:	outs   dx,BYTE PTR ds:[esi]
  404944:	mov    bh,0x97
  404946:	test   BYTE PTR [ecx-0x5d],ah
  404949:	rcr    BYTE PTR [edx+eiz*1],cl
  40494c:	pop    ds
  40494d:	imul   edx,ecx,0xffffffb8
  404950:	test   al,0xd1
  404952:	in     eax,dx
  404953:	pop    es
  404954:	retf   
  404955:	pop    ss
  404956:	mov    dh,0x1
  404958:	jne    0x4049ce
  40495a:	sub    ebx,DWORD PTR [ebp-0xa]
  40495d:	pop    esi
  40495e:	neg    DWORD PTR [edi+0x34938c8b]
  404964:	mov    cs,WORD PTR [edi+0x5b]
  404967:	adc    al,0x8
  404969:	gs or  bl,ch
  40496c:	xchg   esp,eax
  40496d:	hlt    
  40496e:	jp     0x404900
  404970:	add    BYTE PTR [ecx],cl
  404972:	call   0xb47b:0xa9939833
  404979:	bound  eax,QWORD PTR [ebp+0x299a662]
  40497f:	and    dl,BYTE PTR [ecx-0x66f78024]
  404985:	stc    
  404986:	dec    ebx
  404987:	pop    ebp
  404988:	cmp    eax,0x74891472
  40498d:	test   BYTE PTR [ecx+0x25da9290],cl
  404993:	push   ecx
  404994:	add    eax,0x9e78002b
  404999:	jbe    0x4049b4
  40499b:	fprem1 
  40499d:	jecxz  0x404925
  40499f:	xlat   BYTE PTR ds:[ebx]
  4049a0:	imul   ebx,DWORD PTR [edx+0x78],0x2b7f5808
  4049a7:	cmp    al,0x62
  4049a9:	pop    esi
  4049aa:	into   
  4049ab:	pusha  
  4049ac:	mov    esp,0x132dbc72
  4049b1:	shr    cl,0x8d
  4049b4:	xor    BYTE PTR [edx*8+0x275fbdcd],dl
  4049bb:	fdivr  DWORD PTR [ebx+eiz*4+0x27]
  4049bf:	mov    ebx,0x6603dcc0
  4049c4:	add    cl,ch
  4049c6:	sub    DWORD PTR [ecx],ebx
  4049c8:	ret    
  4049c9:	nop
  4049ca:	enter  0x80fe,0x19
  4049ce:	pop    ss
  4049cf:	xchg   esi,eax
  4049d0:	loopne 0x4049e5
  4049d2:	in     al,dx
  4049d3:	test   eax,0x1b73fe53
  4049d8:	or     ecx,ebp
  4049da:	dec    esi
  4049db:	xor    dh,dl
  4049dd:	mov    ds:0x762d0bbf,eax
  4049e2:	push   0xffffff9f
  4049e4:	cmp    DWORD PTR [edx+edx*1-0x75bf423b],0x9776b309
  4049ef:	mov    ah,0x1a
  4049f1:	and    DWORD PTR [bp+si],0xffffffa0
  4049f5:	fild   DWORD PTR [ebp+esi*1+0x5af3284]
  4049fc:	pop    ebp
  4049fd:	loope  0x4049d6
  4049ff:	clc    
  404a00:	(bad)  
  404a01:	mov    dh,0xdd
  404a03:	mov    bl,0x25
  404a05:	cmp    ebx,ebx
  404a07:	mul    dh
  404a09:	hlt    
  404a0a:	push   ebx
  404a0b:	push   0x85a25577
  404a10:	sti    
  404a11:	lods   al,BYTE PTR ds:[esi]
  404a12:	test   BYTE PTR [edi+0x30],0xaa
  404a16:	jmp    0x89e35e90
  404a1b:	mov    dl,0xdd
  404a1d:	adc    ecx,DWORD PTR [esi+0x58]
  404a20:	or     eax,esi
  404a22:	dec    ebp
  404a23:	imul   ebp,DWORD PTR [eax],0xffffffa4
  404a26:	jl     0x404a28
  404a28:	or     eax,0xc6532a6c
  404a2d:	in     eax,dx
  404a2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a2f:	mov    ah,BYTE PTR [ebx+0x3f]
  404a32:	outs   dx,BYTE PTR ds:[esi]
  404a33:	add    al,0x2b
  404a35:	and    BYTE PTR [edi+0x17],al
  404a38:	xchg   ebp,eax
  404a39:	stc    
  404a3a:	xchg   ecx,eax
  404a3b:	pop    edi
  404a3c:	dec    ebp
  404a3d:	jg     0x404a97
  404a3f:	(bad)  
  404a40:	and    al,0x9b
  404a42:	adc    DWORD PTR [eax+0x7a65d06d],ebp
  404a48:	sahf   
  404a49:	inc    ebx
  404a4a:	mov    al,0xb6
  404a4c:	push   edi
  404a4d:	sbb    DWORD PTR [esp+edx*4-0x62],esi
  404a51:	mov    DWORD PTR [ebx+0x1a3365dd],ebp
  404a57:	jge    0x404a3c
  404a59:	jno    0x404a2f
  404a5b:	pop    es
  404a5c:	cmp    DWORD PTR [ebp+0x6f76db62],edi
  404a62:	in     al,dx
  404a63:	fwait
  404a64:	cli    
  404a65:	xor    ebx,DWORD PTR [eax]
  404a67:	popa   
  404a68:	rcr    DWORD PTR [ebp+0x6f],cl
  404a6b:	inc    esi
  404a6c:	sub    ebp,DWORD PTR [eax+0x7dcf4b83]
  404a72:	add    DWORD PTR [edx+0x48],0xffffffa0
  404a76:	xchg   edi,eax
  404a77:	daa    
  404a78:	repz (bad) 
  404a7a:	cmp    al,0x9a
  404a7c:	cdq    
  404a7d:	cs iret 
  404a7f:	mov    ecx,0xda933e23
  404a84:	push   ebx
  404a85:	xchg   ecx,eax
  404a86:	repz xor BYTE PTR [edx+0xf11590a],0x27
  404a8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a8f:	sub    DWORD PTR [edx+ecx*8-0x6c016a2],eax
  404a96:	dec    esi
  404a97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a98:	repz rcr DWORD PTR [eax+eax*1],1
  404a9c:	jae    0x404a8b
  404a9e:	pop    ss
  404a9f:	stos   BYTE PTR es:[edi],al
  404aa0:	jg     0x404a87
  404aa2:	stos   DWORD PTR es:[edi],eax
  404aa3:	ins    BYTE PTR es:[edi],dx
  404aa4:	clc    
  404aa5:	pop    esp
  404aa6:	inc    esp
  404aa7:	sahf   
  404aa8:	sbb    BYTE PTR [edx+0x51],0x59
  404aac:	push   eax
  404aad:	or     eax,0xcec823c7
  404ab2:	or     edx,eax
  404ab4:	mov    bh,BYTE PTR [eax-0x7f]
  404ab7:	push   edi
  404ab8:	int    0x95
  404aba:	mov    ss,ebx
  404abc:	sub    DWORD PTR [edi-0x78],ecx
  404abf:	push   es
  404ac0:	cmp    al,0x7
  404ac2:	jle    0x404afb
  404ac4:	aam    0x34
  404ac6:	out    0xe6,al
  404ac8:	add    DWORD PTR [eax],eax
  404aca:	inc    ebx
  404acb:	retf   
  404acc:	mov    ebx,0x5e0180d9
  404ad1:	rcl    DWORD PTR [ecx],0xd8
  404ad4:	or     ebx,DWORD PTR [edi-0x1]
  404ad7:	push   0xffffffa9
  404ad9:	imul   edx,edi,0xffffff8c
  404adc:	(bad)  
  404add:	(bad)  
  404ade:	clc    
  404adf:	(bad)  
  404ae0:	std    
  404ae1:	lea    esp,[ebx-0x6]
  404ae4:	int    0x84
  404ae6:	inc    edi
  404ae7:	pop    ebx
  404ae8:	inc    esp
  404ae9:	sbb    al,0x9
  404aeb:	dec    ebp
  404aec:	outs   dx,BYTE PTR ds:[esi]
  404aed:	imul   esi,DWORD PTR [ebp+0x71],0xf40c1a3f
  404af4:	push   ebp
  404af5:	out    0x1c,eax
  404af7:	and    al,bl
  404af9:	in     al,dx
  404afa:	std    
  404afb:	mov    esp,0xca2fce48
  404b00:	div    DWORD PTR [eax+0x29df961d]
  404b06:	push   es
  404b07:	(bad)  
  404b08:	dec    ebx
  404b09:	pop    ebx
  404b0a:	test   al,0xbf
  404b0c:	ins    DWORD PTR es:[edi],dx
  404b0d:	jnp    0x404b6c
  404b0f:	out    dx,al
  404b10:	sar    DWORD PTR [edi-0x55cba279],1
  404b16:	gs push cs
  404b18:	or     al,0x80
  404b1a:	ins    BYTE PTR es:[edi],dx
  404b1b:	adc    BYTE PTR [ecx],al
  404b1d:	cmp    bl,bl
  404b1f:	sahf   
  404b20:	cmp    BYTE PTR [eax-0x7285fe0d],al
  404b26:	jg     0x404b13
  404b28:	mov    ebx,0xe6a15d61
  404b2d:	test   eax,0xaff03f72
  404b32:	xlat   BYTE PTR ds:[ebx]
  404b33:	pusha  
  404b34:	es (bad) 
  404b36:	clc    
  404b37:	scas   eax,DWORD PTR es:[edi]
  404b38:	cmp    al,0x81
  404b3a:	cmc    
  404b3b:	adc    bl,dh
  404b3d:	jns    0x404bb0
  404b3f:	je     0x404b30
  404b41:	add    edi,DWORD PTR [ebx+0x3292fb12]
  404b47:	sub    ah,BYTE PTR [ecx+0x33]
  404b4a:	icebp  
  404b4b:	shr    BYTE PTR [ecx+0x2f755330],cl
  404b51:	sbb    al,bl
  404b53:	push   0x6b
  404b55:	fs dec ebp
  404b57:	movq   mm3,mm1
  404b5a:	nop
  404b5b:	ret    
  404b5c:	jmp    0xd28c449a
  404b61:	pushf  
  404b62:	add    DWORD PTR [edi],eax
  404b64:	push   edx
  404b65:	popa   
  404b66:	push   esp
  404b67:	(bad)  
  404b68:	cmc    
  404b69:	sub    eax,0xa92e3b31
  404b6e:	adc    al,0x62
  404b70:	test   al,0xcb
  404b72:	mov    ds:0xc536881d,eax
  404b77:	out    dx,eax
  404b78:	mov    dh,0xb4
  404b7a:	push   esi
  404b7b:	mov    dh,0xe1
  404b7d:	outs   dx,DWORD PTR ds:[esi]
  404b7e:	mov    dl,0xf1
  404b80:	in     eax,dx
  404b81:	sbb    eax,0xc4c7406
  404b86:	xor    eax,0xea962e55
  404b8b:	jo     0x404b6f
  404b8d:	or     BYTE PTR [ecx+eiz*1+0x6a59df73],al
  404b94:	imul   esi,DWORD PTR [ecx],0xd4f8ffc5
  404b9a:	out    0xd0,eax
  404b9c:	aas    
  404b9d:	xor    edx,esp
  404b9f:	or     BYTE PTR [esi],bl
  404ba1:	popf   
  404ba2:	xchg   esi,eax
  404ba3:	pop    esi
  404ba4:	inc    edx
  404ba5:	push   es
  404ba6:	jge    0x404bb9
  404ba8:	xchg   ecx,eax
  404ba9:	pop    ss
  404baa:	dec    edx
  404bab:	sbb    esi,esp
  404bad:	ret    
  404bae:	and    eax,0xda2beec9
  404bb3:	xchg   esp,eax
  404bb4:	std    
  404bb5:	sbb    eax,0xa7d29f06
  404bba:	jae    0x404c11
  404bbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bbd:	outs   dx,BYTE PTR ds:[esi]
  404bbe:	adc    BYTE PTR [eax+0x205df869],ah
  404bc4:	adc    al,0xb3
  404bc6:	xor    esp,DWORD PTR fs:[esp+eax*1-0x17]
  404bcb:	xor    eax,DWORD PTR [edx+0x6a]
  404bce:	jmp    0xb7978bb1
  404bd3:	mov    edi,0x6a0f5b6a
  404bd8:	inc    edi
  404bd9:	popa   
  404bda:	adc    BYTE PTR [eax+0x534f2ee0],ah
  404be0:	loopne 0x404c08
  404be2:	out    0x25,al
  404be4:	fcmovnb st,st(1)
  404be6:	cmp    ebp,esp
  404be8:	push   esp
  404be9:	ja     0x404c36
  404beb:	push   ss
  404bec:	jmp    0x404b77
  404bee:	es push eax
  404bf0:	pop    edi
  404bf1:	xchg   ebp,eax
  404bf2:	xchg   edi,eax
  404bf3:	(bad)  
  404bf4:	loope  0x404b86
  404bf6:	jmp    0x8603:0xa6fa6197
  404bfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bfe:	jg     0x404c17
  404c00:	cmp    BYTE PTR [ebp+0x58],0x50
  404c04:	dec    edi
  404c05:	popf   
  404c06:	xor    BYTE PTR ds:0xce1727b0,ch
  404c0c:	lahf   
  404c0d:	lds    esi,FWORD PTR [eax-0x1fc8da83]
  404c13:	push   ds
  404c14:	out    0xe9,eax
  404c16:	lods   al,BYTE PTR ds:[esi]
  404c17:	pusha  
  404c18:	pop    eax
  404c19:	das    
  404c1a:	push   edx
  404c1b:	cmp    esi,DWORD PTR [esi]
  404c1d:	xor    al,0x8f
  404c1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c20:	call   edi
  404c22:	or     eax,edx
  404c24:	jl     0x404be7
  404c26:	pop    esp
  404c27:	(bad)  
  404c28:	loope  0x404bab
  404c2a:	jns    0x404c6e
  404c2c:	add    ebx,edi
  404c2e:	xchg   ebp,eax
  404c2f:	jmp    0x404c03
  404c31:	bound  edi,QWORD PTR [ebp+ebx*2-0x80]
  404c35:	sbb    eax,0x811cdab5
  404c3a:	fbld   TBYTE PTR [edi+0x7e6e7cf6]
  404c40:	push   es
  404c41:	jg     0x404c8e
  404c43:	(bad)  
  404c44:	and    eax,0x5acb6cb2
  404c49:	xchg   esi,eax
  404c4a:	push   edx
  404c4b:	dec    edi
  404c4c:	in     al,0x13
  404c4e:	xor    eax,0x7cbdab0d
  404c53:	add    DWORD PTR [edi],0x14b57441
  404c59:	call   0xc0e6:0xd97fe75b
  404c60:	aas    
  404c61:	outs   dx,DWORD PTR ds:[esi]
  404c62:	and    ah,BYTE PTR [esi+0x59]
  404c65:	mov    ch,0xa6
  404c67:	fisub  DWORD PTR [edx-0x5a]
  404c6a:	ss mov bl,0x32
  404c6d:	jo     0x404c20
  404c6f:	retf   0xcfd9
  404c72:	das    
  404c73:	cmp    eax,0xe0fe0083
  404c78:	pop    eax
  404c79:	or     DWORD PTR [esi+0x42],0x9a0e743c
  404c80:	mov    ch,0x4e
  404c82:	imul   ecx,DWORD PTR [ebx],0x58
  404c85:	pop    ds
  404c86:	sub    al,0x41
  404c88:	test   BYTE PTR [eax+0x67],cl
  404c8b:	mov    dl,0xa7
  404c8d:	daa    
  404c8e:	hlt    
  404c8f:	add    al,BYTE PTR [ebp+0x4270e4db]
  404c95:	lds    edi,FWORD PTR [edi-0xb12088d]
  404c9b:	shr    ah,0xbf
  404c9e:	dec    edx
  404c9f:	and    al,BYTE PTR [edx-0x74c73d22]
  404ca5:	xor    cl,bl
  404ca7:	data16 jbe 0x404d0a
  404caa:	fmul   st,st(5)
  404cac:	mov    WORD PTR [ebx+0x3dd10123],cs
  404cb2:	mov    ch,0x8b
  404cb4:	mov    bl,0xd5
  404cb6:	shr    BYTE PTR [ebx-0x1f],0xcf
  404cba:	clc    
  404cbb:	sbb    eax,0xd68c3094
  404cc0:	mov    cl,0x5f
  404cc2:	out    0xd9,al
  404cc4:	(bad)  
  404cc6:	push   edi
  404cc7:	cs inc eax
  404cc9:	call   0x89cbabf8
  404cce:	adc    DWORD PTR [edx],ecx
  404cd0:	cmp    ah,BYTE PTR [edi+0x1e]
  404cd3:	pop    esp
  404cd4:	cmp    DWORD PTR [edx-0x57],edi
  404cd7:	mov    ds:0xfb55f291,al
  404cdc:	or     bh,BYTE PTR [ebp-0x19]
  404cdf:	in     al,dx
  404ce0:	sti    
  404ce1:	mov    si,di
  404ce4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ce5:	sti    
  404ce6:	jo     0x404c70
  404ce8:	mov    bl,0xfd
  404cea:	data16 ss add al,dh
  404cee:	mov    fs,WORD PTR [edx]
  404cf0:	gs push edx
  404cf2:	xor    ebx,DWORD PTR [edx-0x326c4b16]
  404cf8:	mov    WORD PTR [ebx-0x23c22c9e],ds
  404cfe:	cmp    cl,ah
  404d00:	sbb    BYTE PTR [edx+0x21bfe801],ch
  404d06:	pop    ebx
  404d07:	and    ebp,ebp
  404d09:	mov    ebx,0x9e244568
  404d0e:	cwde   
  404d0f:	jns    0x404d7c
  404d11:	popf   
  404d12:	pop    eax
  404d13:	sar    BYTE PTR [ebp-0xd],0xf0
  404d17:	cmp    BYTE PTR [ebp+0x3f],ch
  404d1a:	adc    eax,edx
  404d1c:	test   ebx,ecx
  404d1e:	dec    esi
  404d1f:	out    dx,al
  404d20:	dec    esi
  404d21:	pop    ds
  404d22:	dec    BYTE PTR [ecx]
  404d24:	call   0xe2a9bb90
  404d29:	aam    0xdb
  404d2b:	mov    ebp,0x10883b86
  404d30:	cmp    BYTE PTR [eax+0x46],0x45
  404d34:	fwait
  404d35:	pop    eax
  404d36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d37:	jb     0x404d75
  404d39:	(bad)  
  404d3a:	push   eax
  404d3b:	sub    esi,ebx
  404d3d:	push   0xffffff8c
  404d3f:	lods   eax,DWORD PTR ds:[esi]
  404d40:	hlt    
  404d41:	ins    DWORD PTR es:[edi],dx
  404d42:	je     0x404da0
  404d44:	xchg   esp,eax
  404d45:	dec    edx
  404d46:	ret    
  404d47:	xchg   BYTE PTR [edx+0x2e],dl
  404d4a:	or     eax,0x1ace54a1
  404d4f:	les    edi,FWORD PTR [ebx-0x77bd54c4]
  404d55:	xor    al,0x49
  404d57:	into   
  404d58:	add    BYTE PTR [edi+0x3d],ah
  404d5b:	jo     0x404d29
  404d5d:	jmp    0xc624:0xdb0a694f
  404d64:	rol    dl,0x28
  404d67:	and    bl,BYTE PTR [eax+eiz*2+0x15021936]
  404d6e:	retf   
  404d6f:	mov    eax,ds:0xb68bd37b
  404d74:	push   eax
  404d75:	sub    esi,ebx
  404d77:	xchg   ebx,eax
  404d78:	dec    DWORD PTR [edi+0x72]
  404d7b:	or     bl,0xac
  404d7e:	adc    BYTE PTR [esi+ebp*2],cl
  404d81:	test   edi,esi
  404d83:	push   esi
  404d84:	inc    ebp
  404d85:	clc    
  404d86:	mov    bh,0x6d
  404d88:	inc    ecx
  404d89:	sbb    al,0xee
  404d8b:	pop    esi
  404d8c:	mov    ch,0x15
  404d8e:	xchg   DWORD PTR [edi-0x62372536],esi
  404d94:	add    DWORD PTR [edi+0x163231ac],eax
  404d9a:	in     eax,0xe6
  404d9c:	test   BYTE PTR [ebx+0x45],al
  404d9f:	lods   eax,DWORD PTR ds:[esi]
  404da0:	cld    
  404da1:	dec    edi
  404da2:	cmp    edi,DWORD PTR [edx-0x11810cef]
  404da8:	sar    DWORD PTR [ebp+0x701ad991],0x52
  404daf:	dec    eax
  404db0:	add    dl,ch
  404db2:	cmp    al,BYTE PTR [ebx-0x6]
  404db5:	fadd   QWORD PTR ds:0x7ec5e7ec
  404dbb:	add    esi,DWORD PTR [edi+0x3a]
  404dbe:	and    al,0x45
  404dc0:	or     edi,DWORD PTR [ebp-0x3bf096f]
  404dc6:	(bad)  
  404dc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404dc8:	pop    ecx
  404dc9:	fmul   DWORD PTR [ebx+eax*8-0x2a]
  404dcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404dce:	cmp    al,dh
  404dd0:	mov    es,WORD PTR [ebx+0x491b8e66]
  404dd6:	repnz and eax,0x76443c91
  404ddc:	lahf   
  404ddd:	xchg   bp,ax
  404ddf:	jle    0x404e5b
  404de1:	mov    edi,0x41d9a6a6
  404de6:	xor    DWORD PTR cs:[eax],ebx
  404de9:	mov    bl,0x57
  404deb:	inc    ebx
  404dec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ded:	out    dx,al
  404dee:	adc    al,0xbe
  404df0:	jbe    0x404dc1
  404df2:	mov    esi,0xd2f1586
  404df7:	(bad)  
  404df8:	out    dx,al
  404df9:	popf   
  404dfa:	fcomip st,st(0)
  404dfc:	mov    bh,0x27
  404dfe:	jae    0x404d9e
  404e00:	(bad)  
  404e02:	std    
  404e03:	inc    esp
  404e04:	gs (bad) 
  404e06:	adc    eax,0xd815ced2
  404e0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e0c:	add    ah,cl
  404e0e:	das    
  404e0f:	ds xchg esi,eax
  404e11:	sub    eax,0x2481e7e3
  404e16:	adc    eax,0x457319b4
  404e1b:	inc    edi
  404e1c:	aas    
  404e1d:	xor    eax,0xe85d7478
  404e22:	scas   eax,DWORD PTR es:[edi]
  404e23:	add    eax,0xa9ed0206
  404e28:	xchg   ebp,eax
  404e29:	or     cl,BYTE PTR [esi]
  404e2b:	stos   DWORD PTR es:[edi],eax
  404e2c:	dec    ebx
  404e2d:	sbb    DWORD PTR [bp+si],esi
  404e30:	cmp    eax,0x1e2a43d1
  404e35:	call   0x7d2e:0x306f5192
  404e3c:	xchg   esi,eax
  404e3d:	jmp    0x5c2c:0x6fb121f2
  404e44:	mov    ecx,DWORD PTR [esi]
  404e46:	sub    eax,0x49887a9c
  404e4b:	adc    eax,0x8d6844bc
  404e50:	out    0xe8,al
  404e52:	or     dh,cl
  404e54:	test   DWORD PTR [esi+0x3c20607b],edi
  404e5a:	shl    dh,cl
  404e5c:	xchg   edx,eax
  404e5d:	jp     0x404e6b
  404e5f:	pop    esi
  404e60:	(bad)  
  404e61:	out    0x53,al
  404e63:	jecxz  0x404df9
  404e65:	adc    ebp,DWORD PTR [esi+0x16638d0]
  404e6b:	aaa    
  404e6c:	mov    edi,0xd6dc1988
  404e71:	popa   
  404e72:	jne    0x404e66
  404e74:	and    al,0xb8
  404e76:	mov    ch,0xb8
  404e78:	ret    
  404e79:	sbb    bl,BYTE PTR [ebx]
  404e7b:	mov    ds:0xf7a933a9,al
  404e80:	ins    DWORD PTR es:[edi],dx
  404e81:	xor    DWORD PTR [ebx+0x69],esi
  404e84:	sbb    esi,esp
  404e86:	pusha  
  404e87:	stos   DWORD PTR es:[edi],eax
  404e88:	inc    ebx
  404e89:	inc    ebx
  404e8a:	scas   eax,DWORD PTR es:[edi]
  404e8b:	dec    eax
  404e8c:	and    eax,0x977c7fa7
  404e91:	cld    
  404e92:	mov    al,0x56
  404e94:	xchg   edi,eax
  404e95:	stc    
  404e96:	dec    esp
  404e97:	inc    esp
  404e98:	mov    edi,0x5e4f4bc2
  404e9d:	dec    ebp
  404e9e:	jl     0x404e72
  404ea0:	mov    ds:0x922c26ec,al
  404ea5:	(bad)  
  404ea6:	sbb    al,0xcd
  404ea8:	mov    esi,0x3212c240
  404ead:	popa   
  404eae:	mov    eax,0x8c6b9a3c
  404eb3:	adc    ch,ch
  404eb5:	mov    eax,0x2530cdfd
  404eba:	push   ss
  404ebb:	call   0x24bc:0xc595fbd9
  404ec2:	dec    esp
  404ec3:	fwait
  404ec4:	in     al,0xfa
  404ec6:	add    al,0x64
  404ec8:	dec    ebp
  404ec9:	cld    
  404eca:	popf   
  404ecb:	retf   
  404ecc:	loop   0x404f2e
  404ece:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ecf:	dec    DWORD PTR [ebp+ebp*1+0x70]
  404ed3:	cmp    al,0x9b
  404ed5:	pop    edi
  404ed6:	pushf  
  404ed7:	loop   0x404e9c
  404ed9:	std    
  404eda:	fwait
  404edb:	outs   dx,DWORD PTR gs:[esi]
  404edd:	pop    edi
  404ede:	(bad)  
  404edf:	(bad)  
  404ee0:	stc    
  404ee1:	sbb    al,0xbb
  404ee3:	pushf  
  404ee4:	dec    esp
  404ee5:	cdq    
  404ee6:	and    esp,esi
  404ee8:	dec    edi
  404ee9:	gs or  edi,edi
  404eec:	lods   eax,DWORD PTR ds:[esi]
  404eed:	out    dx,eax
  404eee:	scas   al,BYTE PTR es:[edi]
  404eef:	enter  0xebe9,0x37
  404ef3:	add    al,0x84
  404ef5:	xchg   edx,eax
  404ef6:	xor    ah,BYTE PTR [ecx-0x43dae776]
  404efc:	jmp    0x4ecc750f
  404f01:	out    0x7d,eax
  404f03:	clc    
  404f04:	hlt    
  404f05:	test   BYTE PTR [edx+0x6a],0x24
  404f09:	loop   0x404e95
  404f0b:	mov    ah,0x53
  404f0d:	sbb    ch,BYTE PTR [ebx+0x3d1b9d96]
  404f13:	add    bh,BYTE PTR [ebx]
  404f15:	push   0xa3fa767f
  404f1a:	mov    BYTE PTR [ebp-0x5c],0x9b
  404f1e:	ins    DWORD PTR es:[edi],dx
  404f1f:	arpl   WORD PTR [ecx+0x7fc89501],ax
  404f25:	and    DWORD PTR [esi-0x1b],ecx
  404f28:	test   eax,0xad29bdb3
  404f2d:	sub    esp,ebp
  404f2f:	lods   eax,DWORD PTR ds:[esi]
  404f30:	inc    BYTE PTR [esp+ecx*4-0x6b]
  404f34:	mov    bl,cl
  404f36:	dec    ecx
  404f37:	imul   ecx,DWORD PTR [ecx],0xffffffa6
  404f3a:	cmc    
  404f3b:	jg     0x404ecb
  404f3d:	out    0x81,eax
  404f3f:	add    ecx,ecx
  404f41:	sub    DWORD PTR [esi-0x20],esp
  404f44:	jle    0x404f9f
  404f46:	mov    BYTE PTR [esi+0x2b],bl
  404f49:	inc    ebx
  404f4a:	add    al,0x4d
  404f4c:	mov    al,BYTE PTR [ebx]
  404f4e:	pop    ss
  404f4f:	repnz retf 
  404f51:	xchg   edx,eax
  404f52:	popa   
  404f53:	sbb    al,0xeb
  404f55:	xchg   DWORD PTR [esi-0x6a],ecx
  404f58:	cmc    
  404f59:	stos   BYTE PTR es:[edi],al
  404f5a:	cmp    ah,BYTE PTR [ebx]
  404f5c:	imul   esp,DWORD PTR [ebp-0x2f],0x51cde763
  404f63:	(bad)  [edi-0x72]
  404f66:	ins    DWORD PTR es:[edi],dx
  404f67:	xchg   esi,eax
  404f68:	add    ah,BYTE PTR [edi-0x52]
  404f6b:	xchg   esi,eax
  404f6c:	addr16 xchg edi,eax
  404f6e:	mov    ebp,0xb4fda5e0
  404f73:	mov    bh,0x2f
  404f75:	into   
  404f76:	je     0x404f19
  404f78:	mov    esp,0x72f9d6ef
  404f7d:	xchg   ebp,eax
  404f7e:	into   
  404f7f:	or     eax,0xd98a9039
  404f84:	jmp    FWORD PTR [eax]
  404f86:	sub    al,0xc4
  404f88:	mov    ebp,0x6bf7a141
  404f8d:	int    0x18
  404f8f:	clc    
  404f90:	lds    esp,FWORD PTR [edx]
  404f92:	and    ebx,DWORD PTR [ecx+0x6c]
  404f95:	es xchg edx,eax
  404f97:	les    esi,FWORD PTR [edi]
  404f99:	rcr    bh,0x2a
  404f9c:	or     ax,0x1f06
  404fa0:	xor    dl,BYTE PTR [edi+0x69]
  404fa3:	pusha  
  404fa4:	stc    
  404fa5:	mov    eax,0x8d957da5
  404faa:	mov    esi,0x4ab44f8d
  404faf:	mov    ch,BYTE PTR [esi+0x11f3bb22]
  404fb5:	jnp    0x405033
  404fb7:	les    ecx,FWORD PTR ds:0xecd70a17
  404fbd:	stc    
  404fbe:	jle    0x404f78
  404fc0:	loope  0x404f90
  404fc2:	dec    esp
  404fc3:	nop
  404fc4:	outs   dx,DWORD PTR ds:[esi]
  404fc5:	mul    ecx
  404fc7:	ret    0x13e5
  404fca:	in     al,0x51
  404fcc:	aaa    
  404fcd:	mov    bh,0xaa
  404fcf:	sbb    eax,0xdacd0a17
  404fd4:	inc    ebp
  404fd5:	ins    DWORD PTR es:[edi],dx
  404fd6:	sub    al,0x47
  404fd8:	nop
  404fd9:	into   
  404fda:	arpl   WORD PTR [edi],cx
  404fdc:	mov    edx,0xe7609a84
  404fe1:	xor    BYTE PTR [edi+0x6],al
  404fe4:	pop    edi
  404fe5:	rcl    BYTE PTR [esi+0x3c],0xc4
  404fe9:	out    dx,eax
  404fea:	mov    edi,0xe22f818b
  404fef:	push   ds
  404ff0:	iret   
  404ff1:	mov    ch,0xe4
  404ff3:	jle    0x405051
  404ff5:	out    dx,eax
  404ff6:	nop
  404ff7:	arpl   WORD PTR [ebx-0x54],si
  404ffa:	add    al,0x20
  404ffc:	sbb    DWORD PTR [eax-0x1e],edx
  404fff:	aam    0x5c
  405001:	je     0x404f8f
  405003:	and    al,al
  405005:	das    
  405006:	push   ecx
  405007:	pop    esi
  405008:	and    bl,cl
  40500a:	mov    dh,0x4
  40500c:	push   0x30
  40500e:	daa    
  40500f:	fild   QWORD PTR [edi+0x6315f0ff]
  405015:	push   eax
  405016:	mov    eax,ds:0x64432411
  40501b:	pop    ebp
  40501c:	call   0x62ee:0x6ef85eee
  405023:	and    ecx,DWORD PTR [edx]
  405025:	icebp  
  405026:	cmp    ebp,DWORD PTR [ebp-0x13d49ee0]
  40502c:	lahf   
  40502d:	pop    esi
  40502e:	add    eax,0x5913f212
  405033:	hlt    
  405034:	adc    cl,BYTE PTR [eax]
  405036:	mov    bh,0xdf
  405038:	sub    ecx,DWORD PTR [esi+0xbe1e6da]
  40503e:	frstor [eax]
  405040:	rcr    DWORD PTR ss:[esi],1
  405043:	aam    0xa0
  405045:	sbb    al,0xff
  405047:	xchg   edx,eax
  405048:	call   0x90c6fe36
  40504d:	(bad)
  405050:	and    al,0x73
  405052:	stc    
  405053:	or     eax,DWORD PTR [ebx-0x6c]
  405056:	mov    BYTE PTR [eax-0x80],bh
  405059:	xchg   edi,eax
  40505a:	test   al,0x3f
  40505c:	test   eax,0x39b2d7c1
  405061:	sub    ebp,DWORD PTR [eax]
  405063:	mov    ecx,0xf7c9f253
  405068:	sub    ch,BYTE PTR [ebp-0x402d31f4]
  40506e:	(bad)  
  40506f:	fmul   QWORD PTR [ecx]
  405071:	sbb    ebx,DWORD PTR [ebp-0x35]
  405074:	mov    al,0xd3
  405076:	jno    0x405000
  405078:	mov    eax,ds:0x460ceaeb
  40507d:	test   BYTE PTR ds:0x3caebb86,ah
  405083:	add    DWORD PTR [edi],edx
  405085:	mov    dh,0xf9
  405087:	or     DWORD PTR [ebx+0x75],0x1e
  40508b:	cmp    ebp,edx
  40508d:	mul    BYTE PTR ds:0x8dfe716b
  405093:	pushf  
  405094:	clc    
  405095:	test   al,0x8a
  405097:	push   0xd7b940ec
  40509c:	xlat   BYTE PTR ds:[ebx]
  40509d:	fcomp  DWORD PTR cs:[ecx-0x6f]
  4050a1:	out    0xa8,eax
  4050a3:	push   cs
  4050a4:	popa   
  4050a5:	push   cs
  4050a6:	stos   DWORD PTR es:[edi],eax
  4050a7:	inc    esp
  4050a8:	cld    
  4050a9:	jne    0x4050d4
  4050ab:	(bad)  
  4050ac:	or     al,dh
  4050ae:	push   0x89326673
  4050b3:	push   edi
  4050b4:	and    bl,dh
  4050b6:	pop    edi
  4050b7:	xlat   BYTE PTR ds:[ebx]
  4050b8:	das    
  4050b9:	pusha  
  4050ba:	rol    DWORD PTR [ecx*4-0x117f0d95],1
  4050c1:	sub    DWORD PTR [ebx],0x40da33ef
  4050c7:	ins    DWORD PTR es:[edi],dx
  4050c8:	(bad)  
  4050c9:	into   
  4050ca:	mov    edi,ss
  4050cc:	test   DWORD PTR [ebx-0x5b4556d9],ecx
  4050d2:	push   esi
  4050d3:	outs   dx,BYTE PTR ds:[esi]
  4050d4:	mov    esp,0xeaa279a2
  4050d9:	dec    edi
  4050da:	sub    eax,0x7e22ec37
  4050df:	mov    bh,0x47
  4050e1:	dec    ebp
  4050e2:	cwde   
  4050e3:	mov    eax,0xcd0f40f9
  4050e8:	repnz pop edx
  4050ea:	adc    DWORD PTR [esi-0xd],eax
  4050ed:	pop    edi
  4050ee:	std    
  4050ef:	xchg   edi,ecx
  4050f1:	je     0x405155
  4050f3:	mov    ch,cl
  4050f5:	(bad)  
  4050f6:	xchg   ebp,eax
  4050f7:	cmp    cl,BYTE PTR [edx-0x3eb8c134]
  4050fd:	dec    esi
  4050fe:	std    
  4050ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405100:	imul   ebx,DWORD PTR [ebx-0x736bb42b],0x34b9029
  40510a:	pop    ebp
  40510b:	inc    BYTE PTR [edx+0x6c]
  40510e:	or     eax,0x4b60b56b
  405113:	(bad)  
  405114:	pop    ss
  405115:	mov    al,ds:0xa0a9a026
  40511a:	cld    
  40511b:	lahf   
  40511c:	ret    
  40511d:	push   ss
  40511e:	push   cs
  40511f:	adc    BYTE PTR ds:0x69fa86f,al
  405125:	clc    
  405126:	cdq    
  405127:	xchg   esi,eax
  405128:	adc    dl,BYTE PTR [ebx]
  40512a:	ja     0x4050b5
  40512c:	test   eax,0xd12eed6b
  405131:	out    0x3b,eax
  405133:	xchg   edx,eax
  405134:	dec    eax
  405135:	sbb    ebp,DWORD PTR [edi-0x3]
  405138:	sbb    eax,0xddc9f7e3
  40513d:	adc    al,0xd9
  40513f:	cwde   
  405140:	xor    eax,0x22e2f960
  405145:	mov    ah,0x84
  405147:	xlat   BYTE PTR ds:[ebx]
  405148:	mov    edi,0x162676a5
  40514d:	repnz or BYTE PTR [edx+edx*2-0x1c],dl
  405152:	sub    al,0x10
  405154:	jno    0x405164
  405156:	push   esi
  405158:	(bad)  
  405159:	dec    ecx
  40515a:	pop    eax
  40515b:	test   al,0xa9
  40515d:	or     dh,BYTE PTR [ebp+0x21]
  405160:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405161:	loop   0x4051c5
  405163:	xchg   esi,eax
  405164:	or     eax,0x6173039e
  405169:	and    BYTE PTR [eax+0x42629e29],0xb2
  405170:	inc    ecx
  405171:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405172:	inc    ebp
  405173:	push   es
  405174:	cwde   
  405175:	push   ss
  405176:	mov    fs,edx
  405178:	mov    cl,0xb2
  40517a:	push   0x22
  40517c:	jmp    0x80e4:0x359ea424
  405183:	jnp    0x405170
  405185:	dec    edx
  405186:	icebp  
  405187:	add    DWORD PTR [edx+0x7e],esi
  40518a:	adc    al,0xde
  40518c:	and    al,0xa4
  40518e:	jnp    0x40513a
  405190:	fs aam 0x80
  405193:	and    DWORD PTR [ebx],esp
  405195:	data16 jg 0x4051ef
  405198:	jle    0x4051bf
  40519a:	shl    DWORD PTR [eax+0x69ec12f2],cl
  4051a0:	or     eax,DWORD PTR [eax]
  4051a2:	xchg   ax,ax
  4051a4:	ffreep st(1)
  4051a6:	inc    esp
  4051a7:	fcmovne st,st(7)
  4051a9:	push   eax
  4051aa:	aaa    
  4051ab:	ins    DWORD PTR es:[edi],dx
  4051ac:	cwde   
  4051ad:	add    bh,BYTE PTR [ecx-0x7e]
  4051b0:	xlat   BYTE PTR ds:[ebx]
  4051b1:	mov    ch,0x6f
  4051b3:	push   eax
  4051b4:	jo     0x4051dc
  4051b6:	out    0x14,eax
  4051b8:	sahf   
  4051b9:	dec    eax
  4051ba:	test   al,0x6d
  4051bc:	popa   
  4051bd:	int    0xa
  4051bf:	inc    ecx
  4051c0:	dec    eax
  4051c1:	jmp    0x57025b5f
  4051c6:	push   0x336f27d6
  4051cb:	adc    eax,0x78f9a672
  4051d0:	scas   eax,DWORD PTR es:[edi]
  4051d1:	add    ah,dl
  4051d3:	fsubr  DWORD PTR [edi+0x5dcd74c7]
  4051d9:	add    al,0xdd
  4051db:	jo     0x405249
  4051dd:	mov    ebp,0x152b9fe9
  4051e2:	adc    al,0x46
  4051e4:	ret    
  4051e5:	mov    eax,0x4f36aeed
  4051ea:	retf   
  4051eb:	ins    DWORD PTR es:[edi],dx
  4051ec:	into   
  4051ed:	in     al,0x59
  4051ef:	ret    0xcc9e
  4051f2:	pop    ebp
  4051f3:	retf   
  4051f4:	or     al,0x51
  4051f6:	push   esi
  4051f7:	ss push 0xffffffb6
  4051fa:	int3   
  4051fb:	and    eax,0xe46a911d
  405200:	or     cl,0xa6
  405203:	mov    dl,0x7c
  405205:	repz inc ebp
  405207:	loope  0x4051a9
  405209:	leave  
  40520a:	mov    eax,ds:0x38eb02d3
  40520f:	xor    ch,BYTE PTR [edi+0x7dabc95d]
  405215:	sub    al,0xd
  405217:	or     dl,BYTE PTR [esi+0x67da7a14]
  40521d:	add    BYTE PTR [eax+0x5fefa33e],dl
  405223:	inc    ebp
  405224:	int    0x66
  405226:	mov    esp,0xb28ccc3b
  40522b:	sub    ch,al
  40522d:	outs   dx,BYTE PTR ds:[esi]
  40522e:	and    al,0x40
  405230:	add    DWORD PTR [ecx-0x2c],eax
  405233:	pop    ds
  405234:	pop    edi
  405235:	iret   
  405236:	jne    0x405276
  405238:	mov    ds:0xcbd3dd26,eax
  40523d:	inc    edi
  40523e:	test   BYTE PTR [ecx+0x69],bl
  405241:	push   0xa1519738
  405246:	nop
  405247:	mov    edx,0xbad77ef9
  40524c:	(bad)  
  40524d:	adc    esp,ecx
  40524f:	lds    esp,FWORD PTR [edx-0x1d]
  405252:	mov    esi,0x50fb1aaf
  405257:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405258:	sar    DWORD PTR [ebx-0x71],1
  40525b:	mov    ah,0xd3
  40525d:	sbb    esp,0xffffff8a
  405260:	ss push edi
  405262:	js     0x40527d
  405264:	and    DWORD PTR [edx+0x670a55bf],esi
  40526a:	mov    ds:0x5811a064,al
  40526f:	arpl   WORD PTR [ecx-0x54],bx
  405272:	imul   esp,DWORD PTR [esi-0x799a4b5e],0xd0d90d3c
  40527c:	adc    BYTE PTR [edx+0x3f],dl
  40527f:	jge    0x40521d
  405281:	add    esi,edi
  405283:	cmc    
  405284:	dec    ebx
  405285:	jo     0x4052f0
  405287:	sub    al,0x5f
  405289:	push   cs
  40528a:	dec    ecx
  40528b:	repnz mov cl,0xfd
  40528e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40528f:	int3   
  405290:	ficom  DWORD PTR [eax-0x1c]
  405293:	push   ebx
  405294:	pop    ebx
  405295:	fldenv [esi+0x319b68eb]
  40529b:	aam    0x21
  40529d:	loop   0x4052b8
  40529f:	(bad)  
  4052a0:	mul    ebp
  4052a2:	inc    ecx
  4052a3:	fsubrp st(4),st
  4052a5:	push   ss
  4052a6:	not    BYTE PTR [eax-0x74]
  4052a9:	frstor [edi+0x5a64d491]
  4052af:	dec    esp
  4052b0:	push   0x33c49d48
  4052b5:	sbb    dl,ch
  4052b7:	fadd   QWORD PTR [edi]
  4052b9:	shl    edi,cl
  4052bb:	mov    ebp,0x35580062
  4052c0:	fs or  ch,bh
  4052c3:	cmp    DWORD PTR [edi],ecx
  4052c5:	push   ss
  4052c6:	inc    esi
  4052c7:	popa   
  4052c8:	xor    al,BYTE PTR [ebx]
  4052ca:	mov    al,0x4e
  4052cc:	fbld   TBYTE PTR [edi]
  4052ce:	jns    0x405295
  4052d0:	div    DWORD PTR [eax]
  4052d2:	mov    ecx,0xdb348b70
  4052d7:	sbb    esp,DWORD PTR [edi+esi*4-0x244cf1bd]
  4052de:	loopne 0x4052e2
  4052e0:	pop    ebx
  4052e1:	lds    esp,FWORD PTR [ebx-0x1f]
  4052e4:	lea    ecx,[edi+0x2ef2a940]
  4052ea:	bnd jne 0x573db1c9
  4052f1:	pop    es
  4052f2:	jne    0x405325
  4052f4:	mov    bh,0xa7
  4052f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052f7:	fistp  WORD PTR [edi-0x63f62d8d]
  4052fd:	xchg   ebp,esi
  4052ff:	add    DWORD PTR [eax-0x67],esp
  405302:	cmp    al,0x86
  405304:	sti    
  405305:	mov    WORD PTR [eax],ss
  405307:	jmp    0x40532f
  405309:	adc    al,0x34
  40530b:	mov    edi,DWORD PTR [esi-0x3f]
  40530e:	jne    0x4052ba
  405310:	adc    bh,BYTE PTR [edi+0x6295257d]
  405316:	mov    ds:0x687802bc,eax
  40531b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40531c:	pop    eax
  40531d:	jg     0x4052c9
  40531f:	xchg   ebx,eax
  405320:	inc    ecx
  405321:	js     0x405345
  405323:	sbb    DWORD PTR [ebp-0x540e3bfe],ecx
  405329:	push   esi
  40532a:	mov    eax,0xf37d844d
  40532f:	cdq    
  405330:	ja     0x405341
  405332:	xchg   edx,eax
  405333:	jbe    0x40537c
  405335:	push   esi
  405336:	pop    edx
  405337:	iret   
  405338:	pop    esi
  405339:	pusha  
  40533a:	push   edi
  40533b:	mov    eax,ds:0xa8666a7c
  405340:	inc    esi
  405341:	daa    
  405342:	adc    eax,0x3e7f51cd
  405347:	xor    dh,al
  405349:	or     eax,0xdca39268
  40534e:	outs   dx,BYTE PTR ds:[esi]
  40534f:	repz (bad) 
  405351:	loopne 0x4052fc
  405353:	int    0x52
  405355:	(bad)  
  405356:	sub    al,0x74
  405358:	in     eax,dx
  405359:	cmc    
  40535a:	into   
  40535b:	dec    esp
  40535c:	popf   
  40535d:	pop    ss
  40535e:	enter  0xfaf5,0xb1
  405362:	xor    al,0x8b
  405364:	dec    ax
  405366:	sbb    BYTE PTR [ebx-0x3d],dh
  405369:	das    
  40536a:	call   0xd950:0xd66cd31f
  405371:	ins    BYTE PTR es:[edi],dx
  405372:	out    dx,al
  405373:	js     0x405370
  405375:	inc    edx
  405376:	adc    al,0x17
  405378:	daa    
  405379:	mov    esp,0x6c07d4ee
  40537e:	shl    DWORD PTR [ecx+0x52874acc],1
  405384:	adc    al,0x2b
  405386:	in     eax,dx
  405387:	mov    BYTE PTR [edx+esi*4],dh
  40538a:	sar    DWORD PTR [edx*2+0x6c8c26fa],0x88
  405392:	pop    DWORD PTR [bp+di]
  405395:	sbb    eax,0x58ef2d32
  40539a:	push   esi
  40539b:	ds add al,0xc7
  40539e:	aam    0x2e
  4053a0:	test   DWORD PTR [eax],ebx
  4053a2:	or     dl,bl
  4053a4:	mov    ds:0x7a86837e,al
  4053a9:	mov    al,ds:0xa2632a48
  4053ae:	xchg   DWORD PTR [eax+0x549b2216],eax
  4053b4:	mov    ebx,0x439d09e5
  4053b9:	fdiv   QWORD PTR [edx]
  4053bb:	xor    DWORD PTR [ecx+0x1e7b2e39],0x34b583fd
  4053c5:	xor    BYTE PTR [edi-0x20],0xdf
  4053c9:	clc    
  4053ca:	fs sbb al,0x6f
  4053cd:	sbb    eax,0xae866476
  4053d2:	inc    ecx
  4053d3:	cld    
  4053d4:	fs dec ebp
  4053d6:	pop    es
  4053d7:	(bad)  
  4053d8:	(bad)  
  4053d9:	pop    edi
  4053da:	jne    0x4053f6
  4053dc:	mov    ds:0x1a1c50c6,al
  4053e1:	test   al,0xbb
  4053e3:	sbb    dh,ah
  4053e5:	sbb    ebx,eax
  4053e7:	mov    dh,cl
  4053e9:	or     esp,DWORD PTR [ebp-0x6d1b18e3]
  4053ef:	and    esp,eax
  4053f1:	mov    al,0x7a
  4053f3:	fmul   DWORD PTR ds:0x1fbc7f43
  4053f9:	push   0xcdad45ee
  4053fe:	mov    eax,ds:0xcd7c56b
  405403:	sub    esp,DWORD PTR [ebx]
  405405:	into   
  405406:	in     al,0x69
  405408:	shr    esi,1
  40540a:	in     eax,0xea
  40540c:	mov    WORD PTR [eax-0x3a57a7ef],cs
  405412:	stos   DWORD PTR es:[edi],eax
  405413:	popa   
  405414:	pop    edi
  405415:	mov    ?,WORD PTR [esi+0x588c7a42]
  40541b:	pop    ebp
  40541c:	sti    
  40541d:	mov    bh,0x7b
  40541f:	pop    esi
  405420:	add    BYTE PTR [ebx+0x5ce5afbc],bh
  405426:	inc    edi
  405427:	cwde   
  405428:	(bad)  
  405429:	cld    
  40542a:	dec    esp
  40542b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40542c:	mov    BYTE PTR [ebx-0x71],dl
  40542f:	daa    
  405430:	cmp    eax,0x7cb983ff
  405435:	cld    
  405436:	sub    eax,edi
  405438:	out    dx,al
  405439:	cs scas eax,DWORD PTR es:[edi]
  40543b:	mov    cl,0x50
  40543d:	and    DWORD PTR [ecx+0x4f],0x62
  405441:	aas    
  405442:	dec    ecx
  405443:	(bad)  
  405444:	mov    edi,0x399c6789
  405449:	push   esp
  40544a:	and    al,0x1b
  40544c:	xchg   ecx,eax
  40544d:	lods   al,BYTE PTR ds:[esi]
  40544e:	jmp    0xb0d0:0x775186da
  405455:	stos   DWORD PTR es:[edi],eax
  405456:	inc    ebx
  405457:	or     al,0xd9
  405459:	repnz inc edx
  40545b:	imul   ebp,eax,0x73eef808
  405461:	xchg   esi,eax
  405462:	and    esi,DWORD PTR [edx-0x551ce13c]
  405468:	mov    ebp,0xbc54ab6e
  40546d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40546e:	push   edx
  40546f:	(bad)  
  405470:	ds (bad) 
  405472:	in     al,dx
  405473:	pop    ebp
  405474:	das    
  405475:	cmp    eax,0x1d69b643
  40547a:	or     DWORD PTR [edx-0x589519f7],eax
  405480:	call   0xbd53:0x22988dd9
  405487:	out    dx,al
  405488:	dec    edi
  405489:	test   BYTE PTR ds:0x70d875b0,0x84
  405490:	push   eax
  405491:	(bad)  
  405492:	dec    edx
  405493:	mov    esp,0x4662a3a4
  405498:	imul   edx,DWORD PTR [ecx],0xffffff98
  40549b:	xor    esp,0x60
  40549e:	fwait
  40549f:	add    al,0xac
  4054a1:	or     esi,ecx
  4054a3:	lds    ebp,FWORD PTR [ecx-0x1d]
  4054a6:	mov    al,ds:0x4e9b220e
  4054ab:	jge    0x40552b
  4054ad:	mov    ecx,0x96204e6
  4054b2:	sbb    eax,0xf24f40df
  4054b7:	jmp    0x405523
  4054b9:	stos   DWORD PTR es:[edi],eax
  4054ba:	iret   
  4054bb:	fs adc dl,bh
  4054be:	sbb    al,0x8c
  4054c0:	xchg   ecx,eax
  4054c1:	enter  0xc18d,0x40
  4054c5:	mov    edx,0xddfdf1fe
  4054ca:	adc    ebx,ebp
  4054cc:	and    al,0x53
  4054ce:	pop    esp
  4054cf:	imul   al
  4054d1:	add    eax,0x5ca97b03
  4054d6:	sbb    ecx,DWORD PTR cs:[ebx]
  4054d9:	fidiv  DWORD PTR [edx]
  4054db:	repz push ecx
  4054dd:	and    al,0x49
  4054df:	in     al,0x3c
  4054e1:	and    BYTE PTR es:[ebp+0x520b25af],bh
  4054e8:	lahf   
  4054e9:	ret    
  4054ea:	xor    al,0xf8
  4054ec:	int3   
  4054ed:	or     cl,BYTE PTR [esi]
  4054ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054f0:	jb     0x40556e
  4054f2:	push   edi
  4054f3:	add    edi,DWORD PTR [edi+ecx*2]
  4054f6:	(bad)  
  4054f7:	mov    esp,0xad6c7b68
  4054fc:	fwait
  4054fd:	add    ebx,DWORD PTR [eax+0x1f]
  405500:	mov    ds:0x5939727f,eax
  405505:	fstp   DWORD PTR [edx]
  405507:	cmp    edx,0x948a9ade
  40550d:	and    eax,0xdb4d0d6c
  405512:	push   edx
  405513:	out    dx,al
  405514:	add    dl,bl
  405516:	iret   
  405517:	adc    DWORD PTR [edi-0x76],edi
  40551a:	lock pop ecx
  40551c:	inc    esi
  40551d:	push   eax
  40551e:	push   eax
  40551f:	outs   dx,BYTE PTR ds:[esi]
  405520:	and    al,0xe2
  405522:	fs jp  0x405597
  405525:	inc    ecx
  405526:	xor    al,BYTE PTR [edx+0x78]
  405529:	sub    al,0x1e
  40552b:	sbb    ebp,DWORD PTR [ecx+0x531b2e19]
  405531:	cmp    al,0xd4
  405533:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405534:	lahf   
  405535:	loopne 0x4055af
  405537:	xchg   ebx,eax
  405538:	ss jns 0x405528
  40553b:	jne    0x40551d
  40553d:	mov    ah,al
  40553f:	(bad)  
  405540:	int3   
  405541:	push   ecx
  405542:	addr16 jg 0x4054ef
  405545:	inc    eax
  405546:	mov    al,0x37
  405548:	push   cs
  405549:	add    DWORD PTR [edx+0x1ae69ab7],eax
  40554f:	imul   ebp,DWORD PTR [edi-0x2d],0x1b48aa0a
  405556:	and    edi,esi
  405558:	mov    eax,0x3e8129f5
  40555d:	sbb    eax,0x2424b0e5
  405562:	cmp    eax,0xa919b151
  405567:	pop    ebx
  405568:	lock add al,0x1f
  40556b:	popf   
  40556c:	stos   BYTE PTR es:[edi],al
  40556d:	aaa    
  40556e:	push   edi
  40556f:	sub    bl,bh
  405571:	push   esi
  405572:	jg     0x40557e
  405574:	mov    BYTE PTR [esp+edx*1+0x30772a37],cl
  40557b:	sbb    al,0x6d
  40557d:	jno    0x405534
  40557f:	sahf   
  405580:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405581:	cmp    al,0xfb
  405583:	jecxz  0x405596
  405585:	add    DWORD PTR [ecx],0xf34e1e5b
  40558b:	aad    0x2c
  40558d:	hlt    
  40558e:	vpaddsb ymm0,ymm0,YMMWORD PTR [ebx+edi*8]
  405593:	inc    ebx
  405594:	(bad)  
  405595:	jnp    0x4055d6
  405597:	outs   dx,BYTE PTR ds:[esi]
  405598:	inc    edi
  405599:	test   eax,0x6e5c4b13
  40559e:	push   ecx
  40559f:	hlt    
  4055a0:	adc    BYTE PTR [edi+0x50],dl
  4055a3:	sub    dl,BYTE PTR [ebx-0x31]
  4055a6:	loope  0x40554f
  4055a8:	cmp    edx,edi
  4055aa:	sbb    DWORD PTR ss:[ecx+0x4dfd4dbf],eax
  4055b1:	icebp  
  4055b2:	test   dh,0x35
  4055b5:	ins    BYTE PTR es:[edi],dx
  4055b6:	test   eax,0xd6b25ef2
  4055bb:	mov    WORD PTR [ecx+ecx*2],cs
  4055be:	fsubp  st(3),st
  4055c0:	xchg   esp,eax
  4055c1:	pop    edi
  4055c2:	shr    DWORD PTR [ebp+0x3e],1
  4055c5:	and    BYTE PTR [esi-0x1c],ah
  4055c8:	jle    0x40559a
  4055ca:	pusha  
  4055cb:	mov    edi,0xf29c0825
  4055d0:	cmp    DWORD PTR [eax-0x79],eax
  4055d3:	fwait
  4055d4:	cmp    eax,0x46ef255c
  4055d9:	pop    ebp
  4055da:	adc    bl,BYTE PTR [ebx-0x5341bde6]
  4055e0:	pop    ebp
  4055e1:	out    dx,al
  4055e2:	adc    cl,BYTE PTR [ebp+0x2dbe3786]
  4055e8:	add    edx,edi
  4055ea:	push   ds
  4055eb:	ds push es
  4055ed:	and    bh,ah
  4055ef:	cmp    bl,BYTE PTR [esi+0x4b]
  4055f2:	or     BYTE PTR [esi],ch
  4055f4:	in     eax,dx
  4055f5:	add    edi,DWORD PTR [edi+ebx*2+0x5]
  4055f9:	inc    esi
  4055fa:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4055fc:	mov    dl,0x18
  4055fe:	pop    eax
  4055ff:	shl    ebp,0xf
  405602:	jmp    0xd96b:0xf4406706
  405609:	cwde   
  40560a:	xor    dl,BYTE PTR [edi]
  40560c:	stos   BYTE PTR es:[edi],al
  40560d:	enter  0xcb89,0xda
  405611:	adc    dh,BYTE PTR [ebx]
  405613:	pop    esp
  405614:	sti    
  405615:	or     BYTE PTR [edx+0x7f5631ed],ch
  40561b:	jne    0x4055b1
  40561d:	outs   dx,BYTE PTR ds:[esi]
  40561e:	adc    DWORD PTR [eax+0x6b],ecx
  405621:	sbb    edx,DWORD PTR [edi]
  405623:	push   esi
  405624:	push   ecx
  405625:	sbb    DWORD PTR [esp-0x30],edi
  405629:	mov    esp,0x35a8d3f2
  40562e:	jns    0x4055d3
  405630:	mov    bh,0xd0
  405632:	ins    BYTE PTR es:[edi],dx
  405633:	inc    esp
  405634:	add    ecx,eax
  405636:	cmp    esi,DWORD PTR [eax]
  405638:	loope  0x40562f
  40563a:	outs   dx,BYTE PTR ds:[esi]
  40563b:	and    eax,0x215e5c1c
  405640:	fidiv  DWORD PTR [ecx]
  405642:	ins    DWORD PTR es:[edi],dx
  405643:	hlt    
  405644:	arpl   WORD PTR [ecx+0x3e856f67],dx
  40564a:	xor    BYTE PTR fs:[edx-0x4221c35f],ah
  405651:	adc    eax,0xedbe4ad6
  405656:	pushf  
  405657:	in     al,dx
  405658:	fcomp  QWORD PTR [ebp-0x86c1b8a]
  40565e:	pop    ebx
  40565f:	pop    ss
  405660:	lock xchg ecx,eax
  405662:	mul    DWORD PTR [ebp-0x7a]
  405665:	inc    edi
  405666:	popf   
  405667:	and    edx,0xc
  40566a:	shl    DWORD PTR [ebx+0x59c822df],1
  405670:	ss aas 
  405672:	call   0x9f0c:0x1e14e261
  405679:	sub    al,0x63
  40567b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40567c:	push   ebp
  40567d:	xchg   esi,eax
  40567e:	pop    esi
  40567f:	mov    dh,0xfe
  405681:	xchg   edi,eax
  405682:	jno    0x405622
  405684:	jp     0x40567f
  405686:	mov    esp,db2
  405689:	jmp    0x2bc2:0x3d3d5f76
  405690:	nop
  405691:	lods   eax,DWORD PTR ds:[esi]
  405692:	or     eax,0xc3ea2eda
  405697:	xchg   BYTE PTR cs:[ebx],dh
  40569a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40569b:	std    
  40569c:	adc    al,0x8e
  40569e:	xchg   BYTE PTR [edx],dl
  4056a0:	popf   
  4056a1:	push   0x474682d0
  4056a6:	add    al,BYTE PTR [edx]
  4056a8:	fcomp  st(1)
  4056aa:	je     0x40569f
  4056ac:	add    eax,0xc88375a1
  4056b1:	cwde   
  4056b2:	iret   
  4056b3:	int3   
  4056b4:	or     al,ch
  4056b6:	(bad)  
  4056b7:	add    edx,ebx
  4056b9:	mov    bh,0xd6
  4056bb:	xor    eax,DWORD PTR [esi+0x34]
  4056be:	cmp    DWORD PTR [eax+eiz*2+0x77],0xffffffb3
  4056c3:	adc    BYTE PTR ss:[esi+0x78],ch
  4056c7:	jb     0x40567f
  4056c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056ca:	push   ds
  4056cb:	scas   al,BYTE PTR es:[edi]
  4056cc:	clc    
  4056cd:	jmp    0x4056bd
  4056cf:	clc    
  4056d0:	loopne 0x4056a4
  4056d2:	and    BYTE PTR [edx+0x50],al
  4056d5:	stos   BYTE PTR es:[edi],al
  4056d6:	xor    DWORD PTR [eax-0x7c559126],ebp
  4056dc:	cdq    
  4056dd:	mov    edi,0x75f47c9b
  4056e2:	mov    edi,0x42a9dbea
  4056e7:	ins    DWORD PTR es:[edi],dx
  4056e8:	aad    0xd1
  4056ea:	and    eax,DWORD PTR [edi]
  4056ec:	arpl   WORD PTR [ecx-0x264deeee],bp
  4056f2:	cli    
  4056f3:	pop    esp
  4056f4:	repz mov cl,bh
  4056f7:	gs leave 
  4056f9:	jmp    0xbdfe:0xd1aaca29
  405700:	cs pop eax
  405702:	(bad)  
  405703:	rcr    DWORD PTR [edi-0x66],1
  405706:	pusha  
  405707:	(bad)  
  405708:	pop    ebx
  405709:	repnz out dx,eax
  40570b:	xor    eax,0xccb6bbaa
  405710:	jne    0x405732
  405712:	sbb    eax,0x9af6674a
  405717:	lock fucomp st(2)
  40571a:	sub    eax,0xb8d45d4d
  40571f:	scas   eax,DWORD PTR es:[edi]
  405720:	inc    eax
  405721:	(bad)  
  405722:	and    DWORD PTR [edx+0x48cf431d],esp
  405728:	jle    0x405799
  40572a:	mov    al,bl
  40572c:	jl     0x405702
  40572e:	mov    esp,0xfea6428e
  405733:	arpl   WORD PTR [ecx],di
  405735:	daa    
  405736:	hlt    
  405737:	push   edi
  405738:	jge    0x40572a
  40573a:	aas    
  40573b:	cmp    al,0x8d
  40573d:	jae    0x4056dd
  40573f:	not    BYTE PTR [ecx]
  405741:	push   ebp
  405742:	pop    esi
  405743:	add    DWORD PTR [ebp+0x8],ebx
  405746:	iret   
  405747:	ss ret 
  405749:	shr    dl,cl
  40574b:	aas    
  40574c:	inc    ebp
  40574d:	push   0x57
  40574f:	xchg   edx,eax
  405750:	pop    edi
  405751:	add    al,0xbe
  405753:	sbb    edi,DWORD PTR [ecx+ebx*8]
  405756:	cmp    ebx,DWORD PTR [ebx+ebx*8-0x7f]
  40575a:	jb     0x405733
  40575c:	pop    ebp
  40575d:	mov    bh,0xa8
  40575f:	add    edx,esi
  405761:	add    dl,bh
  405763:	sbb    DWORD PTR [esp+esi*8-0x5ffb0417],eax
  40576a:	xchg   edx,ecx
  40576c:	jp     0x4056f3
  40576e:	cs fabs 
  405771:	neg    dl
  405773:	cld    
  405774:	ja     0x4057c7
  405776:	repnz add eax,0x8a2f5674
  40577c:	push   0xdd6df342
  405781:	sub    ecx,DWORD PTR [ecx+0x1a50ef55]
  405787:	fist   WORD PTR [ebp-0x32]
  40578a:	xor    edi,DWORD PTR [esi+0x36]
  40578d:	fwait
  40578e:	rcl    BYTE PTR [edi+0xb],1
  405791:	and    al,0x94
  405793:	push   ebp
  405794:	sub    BYTE PTR [esi],0xf1
  405797:	and    eax,0xc1898f17
  40579c:	in     al,0xa0
  40579e:	cmp    edi,0xffffffd2
  4057a1:	push   ss
  4057a2:	cmp    eax,0x4a5060b
  4057a7:	jae    0x405782
  4057a9:	inc    eax
  4057aa:	cmp    ecx,ebx
  4057ac:	and    DWORD PTR [edx],0xffffff8f
  4057af:	fldlg2 
  4057b1:	push   ebp
  4057b2:	push   es
  4057b3:	add    al,0x50
  4057b5:	outs   dx,BYTE PTR ds:[esi]
  4057b6:	sub    al,0x4b
  4057b8:	fadd   st,st(2)
  4057ba:	inc    ecx
  4057bb:	mov    eax,0x9e8103c2
  4057c0:	dec    eax
  4057c1:	jae    0x4057d2
  4057c3:	or     esp,0x7
  4057c6:	scas   eax,DWORD PTR es:[edi]
  4057c7:	push   ss
  4057c8:	sub    BYTE PTR es:[edx-0x6041a632],dh
  4057cf:	mov    bh,0xf
  4057d1:	cs out 0x3a,eax
  4057d4:	shl    BYTE PTR [esp+ecx*4-0x3ad63851],1
  4057db:	out    dx,al
  4057dc:	cs imul ebp,eax,0x77
  4057e0:	iret   
  4057e1:	dec    edx
  4057e2:	(bad)  
  4057e3:	rcr    DWORD PTR [ecx],1
  4057e5:	scas   al,BYTE PTR es:[edi]
  4057e6:	fsub   DWORD PTR [edx-0x7e]
  4057e9:	jo     0x405819
  4057eb:	adc    BYTE PTR [eax],ch
  4057ed:	into   
  4057ee:	mov    gs,WORD PTR [ebx+0x3b066633]
  4057f4:	jp     0x405856
  4057f6:	or     ecx,eax
  4057f8:	inc    esp
  4057f9:	jecxz  0x405859
  4057fb:	jbe    0x40580a
  4057fd:	add    eax,0xd96a06c6
  405802:	add    esp,esi
  405804:	or     BYTE PTR [esi+ecx*4],al
  405807:	(bad)  
  405808:	jnp    0x405828
  40580a:	jl     0x40584f
  40580c:	pop    edi
  40580d:	xchg   DWORD PTR [ebx-0x19],edi
  405810:	mov    ebp,fs
  405812:	cdq    
  405813:	or     DWORD PTR [edx-0x4255ddcc],ebx
  405819:	pop    ebp
  40581a:	add    DWORD PTR [edi-0x79ecc2d8],ecx
  405820:	and    al,0x17
  405822:	(bad)  
  405823:	inc    edi
  405824:	push   eax
  405825:	in     al,0x7
  405827:	jo     0x4057e8
  405829:	pusha  
  40582a:	aaa    
  40582b:	out    dx,al
  40582c:	pop    ss
  40582d:	inc    eax
  40582e:	inc    edi
  40582f:	in     al,dx
  405830:	and    cl,bh
  405832:	xor    BYTE PTR [ecx+0x59],0xf4
  405836:	stos   BYTE PTR es:[edi],al
  405837:	retf   0xa99
  40583a:	rol    BYTE PTR [edi],cl
  40583c:	push   0x72d135e9
  405841:	in     eax,0x71
  405843:	push   cs
  405844:	in     al,0x3e
  405846:	aas    
  405847:	iret   
  405848:	clc    
  405849:	xchg   ebp,eax
  40584a:	and    DWORD PTR [edi+0x281dcde7],ebp
  405850:	(bad)  
  405851:	mov    ebp,ecx
  405853:	ss mov esp,0x5f378633
  405859:	popa   
  40585a:	xchg   ecx,eax
  40585b:	test   DWORD PTR [esi],ebx
  40585d:	cmp    dh,ch
  40585f:	enter  0x89e,0xb3
  405863:	xor    DWORD PTR [eax+0x417d53cd],0x42
  40586a:	push   edi
  40586b:	call   0xeb7:0x5f281f8e
  405872:	scas   eax,DWORD PTR es:[edi]
  405873:	and    eax,0x787006e1
  405878:	in     eax,0x6e
  40587a:	push   esp
  40587b:	leave  
  40587c:	outs   dx,DWORD PTR ds:[esi]
  40587d:	mov    eax,ds:0x30199214
  405882:	jle    0x40586d
  405884:	add    esp,DWORD PTR [ecx]
  405886:	push   ebp
  405887:	retf   
  405888:	cmp    eax,0x24f0574b
  40588d:	mov    ds:0x24f9e4b9,al
  405892:	and    al,0x57
  405894:	mov    esp,eax
  405896:	lea    eax,gs:[eax]
  405899:	xor    ebp,esp
  40589b:	fwait
  40589c:	mov    dl,0xbb
  40589e:	jae    0x405841
  4058a0:	test   eax,0xa3dfbbc4
  4058a5:	xor    al,0xd0
  4058a7:	aam    0xf2
  4058a9:	int    0xe
  4058ab:	xchg   ebx,eax
  4058ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058ad:	and    DWORD PTR ss:[esi+0x4b],eax
  4058b1:	retf   
  4058b2:	mov    ds:0xbe027792,eax
  4058b7:	mov    bl,0xbc
  4058b9:	nop
  4058ba:	xor    cl,BYTE PTR [ebp-0x78581713]
  4058c0:	fsubrp st(7),st
  4058c2:	push   ds
  4058c3:	mov    eax,ds:0x4482f107
  4058c8:	cmc    
  4058c9:	jmp    DWORD PTR [esi-0x637647c5]
  4058cf:	adc    BYTE PTR [ebx+0x2537ad5d],cl
  4058d5:	push   edi
  4058d6:	fild   DWORD PTR [esi]
  4058d8:	sub    DWORD PTR [edi+0x72],ecx
  4058db:	inc    esi
  4058dc:	adc    al,0x75
  4058de:	pushf  
  4058df:	(bad)  
  4058e0:	fs push ecx
  4058e2:	shl    DWORD PTR [esi+0x574e4f8e],cl
  4058e8:	into   
  4058e9:	pop    ds
  4058ea:	jge    0x4058de
  4058ec:	(bad)  
  4058ed:	cwde   
  4058ee:	movaps xmm2,xmm0
  4058f1:	pop    eax
  4058f2:	inc    esp
  4058f3:	adc    al,BYTE PTR [esi-0x178b2bb1]
  4058f9:	out    dx,al
  4058fa:	aas    
  4058fb:	pop    ds
  4058fc:	imul   edx
  4058fe:	adc    ah,cl
  405900:	pop    ecx
  405901:	ds fcmovu st,st(5)
  405904:	(bad)  
  405905:	fst    DWORD PTR [ecx-0x17]
  405908:	shl    DWORD PTR ds:[ebp-0x7c5934cb],cl
  40590f:	xchg   edi,eax
  405910:	or     al,0xa
  405912:	mov    ds:0xcc393d24,al
  405917:	std    
  405918:	cmp    bl,bl
  40591a:	(bad)  
  40591b:	stc    
  40591c:	cmp    DWORD PTR [edi-0x26e475fd],esi
  405922:	pop    ebx
  405923:	sar    dh,cl
  405925:	(bad)  
  405926:	jbe    0x4059a6
  405928:	adc    ebx,DWORD PTR [edx]
  40592a:	(bad)  
  40592b:	sti    
  40592c:	retf   
  40592d:	pop    esi
  40592e:	and    al,0x2d
  405930:	or     eax,ecx
  405932:	jo     0x405910
  405934:	iret   
  405935:	dec    esi
  405936:	cmp    esi,DWORD PTR [esi-0x5d]
  405939:	push   edx
  40593a:	mov    ebp,0x27c068bb
  40593f:	adc    DWORD PTR [eax+0x53],0xf10f19f6
  405946:	mov    dl,0x28
  405948:	mov    al,ds:0xd7aa3794
  40594d:	push   ebp
  40594e:	fwait
  40594f:	imul   ebx,DWORD PTR [edi],0xfffffffa
  405952:	aas    
  405953:	icebp  
  405954:	pop    es
  405955:	push   esp
  405956:	outs   dx,DWORD PTR ds:[esi]
  405957:	(bad)  
  405958:	mov    ecx,0xe5f15183
  40595d:	stos   BYTE PTR es:[edi],al
  40595e:	gs jno 0x405903
  405961:	push   esp
  405962:	ins    DWORD PTR es:[edi],dx
  405963:	lahf   
  405964:	jo     0x405982
  405966:	pop    ecx
  405967:	sbb    eax,0x663ac66
  40596c:	adc    bl,dh
  40596e:	ret    
  40596f:	mov    cl,0x98
  405971:	(bad)  
  405972:	jmp    0x4059e6
  405974:	and    edi,DWORD PTR [eax]
  405976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405977:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405978:	pop    edi
  405979:	and    eax,0x49fdaf43
  40597e:	jecxz  0x405919
  405980:	daa    
  405981:	iret   
  405982:	popf   
  405983:	pusha  
  405984:	push   edi
  405985:	sbb    BYTE PTR [ebp+eiz*1-0x54bf54a0],cl
  40598c:	mov    eax,0x528146a
  405991:	retf   
  405992:	cs mov ecx,0x56838943
  405998:	inc    edx
  405999:	in     al,dx
  40599a:	add    eax,0x1c8433e8
  40599f:	scas   al,BYTE PTR es:[edi]
  4059a0:	data16 xchg BYTE PTR [edx+0x42],dl
  4059a4:	in     al,0x4
  4059a6:	(bad)  
  4059a7:	jmp    0x40598d
  4059a9:	out    dx,al
  4059aa:	xor    ah,dh
  4059ac:	int3   
  4059ad:	adc    al,0x7c
  4059af:	fcomp  DWORD PTR [ebx]
  4059b1:	or     eax,0xb320fd28
  4059b6:	add    esp,DWORD PTR [ebp-0x2d]
  4059b9:	stos   BYTE PTR es:[edi],al
  4059ba:	inc    esp
  4059bb:	push   ecx
  4059bc:	enter  0x7629,0xc9
  4059c0:	sbb    ah,dl
  4059c2:	mov    esi,ss
  4059c4:	scas   eax,DWORD PTR es:[edi]
  4059c5:	xor    DWORD PTR [eax*2+0x6ebaa1c3],esi
  4059cc:	dec    esi
  4059cd:	int3   
  4059ce:	mov    al,0x85
  4059d0:	pop    edi
  4059d1:	pop    es
  4059d2:	xchg   ebx,eax
  4059d3:	xchg   edi,eax
  4059d4:	mov    cl,0x2c
  4059d6:	inc    ebx
  4059d7:	adc    DWORD PTR [eax],0x15
  4059da:	in     eax,0xc7
  4059dc:	leave  
  4059dd:	pop    ss
  4059de:	jae    0x405a20
  4059e0:	jle    0x405a26
  4059e2:	sbb    BYTE PTR [eax-0x8c3d40c],bl
  4059e8:	dec    edi
  4059e9:	push   0x53
  4059eb:	(bad)  
  4059ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059ed:	(bad)  
  4059ef:	sahf   
  4059f0:	not    DWORD PTR [eax-0x6f]
  4059f3:	push   cs
  4059f4:	outs   dx,DWORD PTR ds:[esi]
  4059f5:	aaa    
  4059f6:	add    eax,DWORD PTR [ecx-0x71]
  4059f9:	imul   esi,DWORD PTR [edx],0x6a4793d2
  4059ff:	cmp    DWORD PTR [ebx-0x11],esp
  405a02:	sti    
  405a03:	mov    ecx,0x5f0aa781
  405a08:	sub    esp,edi
  405a0a:	inc    esp
  405a0b:	popa   
  405a0c:	pop    ss
  405a0d:	rcr    edx,0x40
  405a10:	mov    edi,ebx
  405a12:	dec    ecx
  405a13:	stos   DWORD PTR es:[edi],eax
  405a14:	adc    BYTE PTR [edi],cl
  405a16:	inc    esi
  405a17:	lods   al,BYTE PTR ds:[esi]
  405a18:	stos   BYTE PTR es:[edi],al
  405a19:	sbb    edx,DWORD PTR [ebp+0x11b79356]
  405a1f:	push   edi
  405a20:	ins    BYTE PTR es:[edi],dx
  405a21:	mov    eax,0xc60ba054
  405a26:	jp     0x4059f3
  405a28:	xchg   ebx,eax
  405a29:	rcl    BYTE PTR [eax+0x5f],1
  405a2c:	test   ecx,edi
  405a2e:	repz (bad) [ecx]
  405a31:	sub    DWORD PTR [edi],esp
  405a33:	(bad)  
  405a35:	inc    eax
  405a36:	sub    ebx,ecx
  405a38:	icebp  
  405a39:	mov    esp,0xb50872c8
  405a3e:	xor    al,bl
  405a40:	add    DWORD PTR [ebp+0x1d],0x17
  405a44:	push   cs
  405a45:	sbb    eax,0x685ef04d
  405a4a:	out    dx,al
  405a4b:	and    BYTE PTR [esi+0x8],0xb1
  405a4f:	push   cs
  405a50:	pop    es
  405a51:	or     cl,BYTE PTR cs:0xfd7c6aac
  405a58:	in     al,dx
  405a59:	bound  edx,QWORD PTR [ecx+0x1c]
  405a5c:	retf   
  405a5d:	xchg   DWORD PTR [esi],ebp
  405a5f:	jl     0x405a6f
  405a61:	(bad)  
  405a62:	xchg   ebp,eax
  405a63:	add    eax,0x94f2505c
  405a68:	push   ss
  405a69:	int3   
  405a6a:	sti    
  405a6b:	xor    bl,BYTE PTR [ebp+0x57]
  405a6e:	in     al,0x6d
  405a70:	xchg   esi,eax
  405a71:	cwde   
  405a72:	inc    esi
  405a73:	adc    esp,ebp
  405a75:	mov    cs,ebp
  405a77:	test   al,0xe0
  405a79:	stc    
  405a7a:	sar    ebx,1
  405a7c:	mov    dh,0xf8
  405a7e:	fxch   st(5)
  405a80:	jl     0x405af2
  405a82:	sahf   
  405a83:	xor    BYTE PTR ds:0x1c38426a,dh
  405a89:	out    0xf6,al
  405a8b:	popa   
  405a8c:	and    al,0xe1
  405a8e:	ror    BYTE PTR [ebx-0x2c44e488],cl
  405a94:	xchg   BYTE PTR [ecx+0x1e0764a1],ah
  405a9a:	cmp    dh,BYTE PTR [edi]
  405a9c:	pop    edx
  405a9d:	bound  edx,QWORD PTR [eax+0x377c09f0]
  405aa3:	xchg   esp,eax
  405aa4:	icebp  
  405aa5:	add    al,0x30
  405aa7:	scas   al,BYTE PTR es:[edi]
  405aa8:	push   ss
  405aa9:	inc    edx
  405aaa:	push   es
  405aab:	popa   
  405aac:	cmc    
  405aad:	dec    ebx
  405aae:	repnz sbb al,0xe2
  405ab1:	mov    al,ds:0xe67ad3c8
  405ab6:	hlt    
  405ab7:	mov    dl,0xa5
  405ab9:	xchg   ebx,eax
  405aba:	sbb    eax,0xa3d4772
  405abf:	or     al,0x71
  405ac1:	jg     0x405a91
  405ac3:	lea    esi,[ebx+0x1d]
  405ac6:	mov    dl,0x3e
  405ac8:	lea    edx,[ecx+0x7f84d9e1]
  405ace:	mov    BYTE PTR [edi-0x65],cl
  405ad1:	imul   edi,DWORD PTR [ebx],0xfde3015e
  405ad7:	or     al,0x1a
  405ad9:	adc    al,ch
  405adb:	jmp    0x9b65:0xad4ae004
  405ae2:	cdq    
  405ae3:	scas   eax,DWORD PTR es:[edi]
  405ae4:	mov    WORD PTR [esi-0x60],gs
  405ae7:	(bad)  
  405ae8:	iret   
  405ae9:	sub    al,0xe6
  405aeb:	dec    edx
  405aec:	cli    
  405aed:	add    al,0x85
  405aef:	repz jmp ebp
  405af2:	mov    al,ds:0xc6dec213
  405af7:	int3   
  405af8:	sbb    ah,0x40
  405afb:	inc    esi
  405afc:	pop    edx
  405afd:	dec    ebx
  405afe:	sub    DWORD PTR [esp+ebx*4-0x61a6cd66],esp
  405b05:	test   DWORD PTR [edi+0x5c],edx
  405b08:	jecxz  0x405b0c
  405b0a:	cmp    ebp,edi
  405b0c:	int    0xfb
  405b0e:	call   0x30bd827a
  405b13:	or     BYTE PTR [ebp-0x20],bl
  405b16:	scas   al,BYTE PTR es:[edi]
  405b17:	sub    al,0xc0
  405b19:	sub    BYTE PTR [ecx+0x1ae5f9b9],ah
  405b1f:	jnp    0x405ade
  405b21:	enter  0x213c,0xe7
  405b25:	fwait
  405b26:	pop    ebp
  405b27:	in     al,dx
  405b28:	scas   al,BYTE PTR es:[edi]
  405b29:	or     eax,0xc2eff2a8
  405b2e:	(bad)  
  405b2f:	mov    edi,0xc1ad38cb
  405b34:	mov    bl,0x36
  405b36:	mov    ebp,0x8d1505f6
  405b3b:	(bad)  
  405b3c:	jp     0x405b9b
  405b3e:	es call 0x3f05ebb5
  405b44:	in     al,dx
  405b45:	and    al,0x5a
  405b47:	dec    ebx
  405b48:	fimul  WORD PTR [esi-0x3]
  405b4b:	ror    BYTE PTR [edi],0x20
  405b4e:	or     BYTE PTR [ecx-0x2b],al
  405b51:	call   0xe188ac1c
  405b56:	aas    
  405b57:	cmp    BYTE PTR [ecx-0x5c],0xa1
  405b5b:	inc    esi
  405b5c:	pop    esi
  405b5d:	or     BYTE PTR [eax-0xdd8323a],ch
  405b63:	daa    
  405b64:	mov    ds:0x9ae8b3ed,al
  405b69:	sub    al,0xd0
  405b6b:	popa   
  405b6c:	xchg   BYTE PTR [edx],dl
  405b6e:	sti    
  405b6f:	fimul  DWORD PTR [eax+ecx*1+0x20]
  405b73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b74:	mov    edx,ss
  405b76:	push   ebx
  405b77:	fild   DWORD PTR fs:[esi+0x223c8bff]
  405b7e:	xchg   esp,eax
  405b7f:	imul   edi,DWORD PTR [esi+edi*2+0x6443b517],0x40d0f474
  405b8a:	cld    
  405b8b:	fwait
  405b8c:	jmp    DWORD PTR [eax+0x7d]
  405b8f:	ror    DWORD PTR [edx+0x1038104b],0xd2
  405b96:	ret    0xa0da
  405b99:	sub    eax,0xf55e6671
  405b9e:	xor    esp,esp
  405ba0:	xchg   edi,eax
  405ba1:	cmp    DWORD PTR [ebx],eax
  405ba3:	pushf  
  405ba4:	mov    al,ds:0xaf98475c
  405ba9:	pop    eax
  405baa:	mov    ebp,0x16e3188b
  405baf:	data16 aaa 
  405bb1:	cmp    DWORD PTR [edi+0x56],esi
  405bb4:	pusha  
  405bb5:	jno    0x405b4b
  405bb7:	sbb    eax,0x2bfaa564
  405bbc:	ins    BYTE PTR es:[edi],dx
  405bbd:	scas   al,BYTE PTR es:[edi]
  405bbe:	xrelease xchg DWORD PTR [eax-0x55321c13],ebp
  405bc5:	xchg   ebp,eax
  405bc6:	add    al,0xd5
  405bc8:	pusha  
  405bc9:	sub    esi,DWORD PTR ds:0x51d139cf
  405bcf:	push   cs
  405bd0:	xchg   ebx,eax
  405bd1:	mov    al,ds:0x7ebd569f
  405bd6:	jmp    FWORD PTR [edx]
  405bd8:	adc    BYTE PTR [ebp+0x2a],bh
  405bdb:	dec    ebx
  405bdc:	push   edx
  405bdd:	xor    edx,DWORD PTR [eax+eax*4+0x36e51b6c]
  405be4:	in     al,dx
  405be5:	test   DWORD PTR [ebx-0x46],ebp
  405be8:	add    DWORD PTR [eax],0x36
  405beb:	data16 jne 0x405bb4
  405bee:	mov    esp,0xca2e66be
  405bf3:	push   eax
  405bf4:	inc    ecx
  405bf5:	das    
  405bf6:	pop    ss
  405bf7:	cmp    ecx,esi
  405bf9:	arpl   WORD PTR [ecx+ebp*1-0x45],dx
  405bfd:	ret    
  405bfe:	and    DWORD PTR [eax],ebp
  405c00:	(bad)  
  405c01:	mov    dh,0xa6
  405c03:	mov    ecx,esp
  405c05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c06:	and    BYTE PTR [ecx],0xe0
  405c09:	shr    esi,0x33
  405c0c:	cs sti 
  405c0e:	cs push ebx
  405c10:	push   es
  405c11:	mov    ah,0xa0
  405c13:	hlt    
  405c14:	gs popf 
  405c16:	inc    eax
  405c17:	fdivr  st,st(2)
  405c19:	jge    0x405be1
  405c1b:	fld    DWORD PTR [ecx-0x41]
  405c1e:	pushf  
  405c1f:	leave  
  405c20:	jmp    0x405c72
  405c22:	aam    0xbf
  405c24:	sub    DWORD PTR [esi],esp
  405c26:	cmp    ebp,DWORD PTR [edx-0x2bed2471]
  405c2c:	dec    ecx
  405c2d:	std    
  405c2e:	push   ds
  405c2f:	jl     0x405be8
  405c31:	fldenv ds:0x21878153
  405c37:	pop    esi
  405c38:	das    
  405c39:	fistp  DWORD PTR [edi-0x18063650]
  405c3f:	xchg   edi,eax
  405c40:	jns    0x405bec
  405c42:	xor    BYTE PTR [edi+0x19cdd623],ah
  405c48:	mov    cl,0x6d
  405c4a:	repnz pop edi
  405c4c:	and    BYTE PTR [esi+edx*8+0x79],bl
  405c50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c51:	in     al,0x77
  405c53:	sbb    eax,0xd88628e8
  405c58:	jne    0x405c2d
  405c5a:	cmp    bh,BYTE PTR [edx+eiz*1-0x545f5c0f]
  405c61:	ins    DWORD PTR es:[edi],dx
  405c62:	jle    0x405bf5
  405c64:	lea    esp,[ecx]
  405c66:	iret   
  405c67:	inc    ecx
  405c68:	jecxz  0x405c8e
  405c6a:	repz in al,0x66
  405c6d:	xor    DWORD PTR [edx+0x55cce91f],esp
  405c73:	jnp    0x405c57
  405c75:	ret    
  405c76:	pop    ebp
  405c77:	pop    ebx
  405c78:	daa    
  405c79:	jmp    0x405c1f
  405c7b:	sahf   
  405c7c:	scas   al,BYTE PTR es:[edi]
  405c7d:	repnz add BYTE PTR [eax],dl
  405c80:	pusha  
  405c81:	xchg   ebx,eax
  405c82:	inc    esi
  405c83:	bound  ebp,QWORD PTR [ebp+0x3a]
  405c86:	(bad)  
  405c87:	adc    al,0x1c
  405c89:	xlat   BYTE PTR fs:[ebx]
  405c8b:	sub    ah,BYTE PTR [esi+0x4b714e19]
  405c91:	into   
  405c92:	ins    BYTE PTR es:[edi],dx
  405c93:	inc    ebp
  405c94:	imul   ebp,DWORD PTR [ecx-0x35],0x90f9345c
  405c9b:	jb     0x405c3f
  405c9d:	mov    ds:0x2dabb847,eax
  405ca2:	pop    edi
  405ca3:	sbb    al,0xeb
  405ca5:	xchg   cl,ch
  405ca7:	inc    edx
  405ca8:	adc    eax,0x1cf31494
  405cad:	push   0x4a3dddc1
  405cb2:	jle    0x405cb2
  405cb4:	retf   
  405cb5:	pop    ebp
  405cb6:	push   cs
  405cb7:	inc    edx
  405cb8:	pop    edi
  405cb9:	mov    ecx,0x3a449255
  405cbe:	xchg   esp,eax
  405cbf:	outs   dx,DWORD PTR ds:[esi]
  405cc0:	xchg   BYTE PTR [edi+0x3],bh
  405cc3:	or     ebx,DWORD PTR [eax+0x31700a18]
  405cc9:	sbb    al,0x8f
  405ccb:	inc    ecx
  405ccc:	test   al,0xd6
  405cce:	jno    0x405c92
  405cd0:	inc    eax
  405cd1:	lock mov dh,0xe7
  405cd4:	es add al,0x7f
  405cd7:	inc    esp
  405cd8:	loopne 0x405cd9
  405cda:	xlat   BYTE PTR ds:[ebx]
  405cdb:	push   edi
  405cdc:	jmp    0x6072925e
  405ce1:	add    al,0x8e
  405ce3:	cli    
  405ce4:	std    
  405ce5:	not    DWORD PTR [edx+0x4f5b4b97]
  405ceb:	call   0xd6c1d03b
  405cf0:	sti    
  405cf1:	popa   
  405cf2:	mov    dl,0xdf
  405cf4:	addr16 in al,dx
  405cf6:	fcom   DWORD PTR [ebp+eiz*8+0x57d188e5]
  405cfd:	dec    edx
  405cfe:	sahf   
  405cff:	mov    ecx,0x9db0c486
  405d04:	outs   dx,BYTE PTR fs:[esi]
  405d06:	gs push 0x1dc42150
  405d0c:	ffree  st(7)
  405d0e:	int3   
  405d0f:	dec    ecx
  405d10:	adc    eax,0xbc8b615b
  405d15:	(bad)  
  405d16:	sti    
  405d17:	in     eax,0xa0
  405d19:	in     al,dx
  405d1a:	pop    edi
  405d1b:	aam    0xcf
  405d1d:	push   edi
  405d1e:	pop    ebp
  405d1f:	ror    BYTE PTR [esp+ecx*8],cl
  405d22:	adc    dh,0x5c
  405d25:	pcmpgtb mm6,QWORD PTR [esi+0x22]
  405d29:	sbb    dl,dh
  405d2b:	xor    al,0x21
  405d2d:	icebp  
  405d2e:	lahf   
  405d2f:	(bad)  
  405d30:	pop    esi
  405d31:	sbb    ecx,esp
  405d33:	fs jg  0x405cd4
  405d36:	jbe    0x405d73
  405d38:	das    
  405d39:	fwait
  405d3a:	inc    ebx
  405d3b:	sbb    DWORD PTR [edi-0x57],eax
  405d3e:	sub    BYTE PTR [eax-0x6841b30c],dl
  405d44:	adc    dh,cl
  405d46:	jge    0x405d47
  405d48:	les    ecx,FWORD PTR [edx-0x53c6547e]
  405d4e:	outs   dx,DWORD PTR ds:[esi]
  405d4f:	test   BYTE PTR [ecx],al
  405d51:	push   esp
  405d52:	jae    0x405d46
  405d54:	out    dx,al
  405d55:	aad    0xcc
  405d57:	out    0x52,al
  405d59:	loop   0x405da6
  405d5b:	add    eax,0x1ddd8172
  405d60:	pop    eax
  405d61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d62:	cmp    edx,0xffffff87
  405d65:	cmp    BYTE PTR [ebx],dl
  405d67:	cmp    ebx,ebx
  405d69:	cld    
  405d6a:	pop    edi
  405d6b:	or     al,0x72
  405d6d:	hlt    
  405d6e:	fdiv   DWORD PTR [esi]
  405d70:	dec    ebp
  405d71:	sbb    DWORD PTR [esi],edi
  405d73:	inc    esp
  405d74:	mov    al,ds:0x106eaa4
  405d79:	or     BYTE PTR ds:0xe9d77154,bl
  405d7f:	pop    ebp
  405d80:	clc    
  405d81:	shl    bh,1
  405d83:	out    0xee,eax
  405d85:	mov    bl,0xbd
  405d87:	dec    ebx
  405d88:	lea    ebp,[esi-0x6b4454a9]
  405d8e:	xchg   DWORD PTR [edi+0x9],edi
  405d91:	push   esp
  405d92:	dec    edx
  405d93:	fs pop esp
  405d95:	push   edi
  405d96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d97:	retf   0x6263
  405d9a:	cli    
  405d9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d9c:	fldenv [edx+0x3]
  405d9f:	jb     0x405dd3
  405da1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405da2:	pop    eax
  405da3:	inc    ax
  405da5:	outs   dx,DWORD PTR ds:[esi]
  405da6:	call   0x2603e7a2
  405dab:	add    eax,0x1c9e5215
  405db0:	sub    eax,0xd1f85c0f
  405db5:	pop    ebp
  405db6:	fdiv   DWORD PTR [ecx]
  405db8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405db9:	add    bh,dl
  405dbb:	or     ebx,DWORD PTR [eax-0x6c0176e4]
  405dc1:	push   ss
  405dc2:	sbb    dh,BYTE PTR [ebx]
  405dc4:	jb     0x405deb
  405dc6:	mov    BYTE PTR [edx-0x14],dh
  405dc9:	popf   
  405dca:	jmp    0x59167e90
  405dcf:	out    dx,al
  405dd0:	and    esp,ebp
  405dd2:	sbb    edi,DWORD PTR [esi]
  405dd4:	or     cl,dl
  405dd6:	fdiv   QWORD PTR [eax]
  405dd9:	fdiv   QWORD PTR [edx-0x6a]
  405ddc:	pop    ds
  405ddd:	sahf   
  405dde:	call   0xe960:0xcf544cc6
  405de5:	pop    ebp
  405de6:	popa   
  405de7:	ret    0x1ba0
  405dea:	jb     0x405dc4
  405dec:	daa    
  405ded:	jo     0x405e4c
  405def:	test   BYTE PTR ds:0xa1be9620,dh
  405df5:	cmc    
  405df6:	mov    ch,0xd3
  405df8:	rcr    dh,cl
  405dfa:	adc    al,0xc5
  405dfc:	and    DWORD PTR [ecx],ebp
  405dfe:	pop    esi
  405dff:	lods   eax,DWORD PTR ds:[esi]
  405e00:	mov    edi,DWORD PTR [edx-0x1daad47]
  405e06:	xor    al,al
  405e08:	fwait
  405e09:	das    
  405e0a:	cmp    bl,dh
  405e0c:	pop    esi
  405e0d:	or     edx,DWORD PTR [edi-0x47]
  405e10:	sub    edx,DWORD PTR [eax+0x73c5bf39]
  405e16:	mov    ds:0x4a77b0c,eax
  405e1b:	ret    
  405e1c:	js     0x405e00
  405e1e:	sub    esi,DWORD PTR ss:[ebx]
  405e21:	inc    ebp
  405e22:	adc    DWORD PTR [edx-0x72],0x1d895b55
  405e29:	jnp    0x405db7
  405e2b:	test   BYTE PTR [ecx+ebx*4+0x50],dl
  405e2f:	jne    0x405dd7
  405e31:	cdq    
  405e32:	repnz mov ?,WORD PTR [esi+0x6b]
  405e36:	clc    
  405e37:	pop    edi
  405e38:	jg     0x405dc7
  405e3a:	into   
  405e3b:	cmc    
  405e3c:	cli    
  405e3d:	fldcw  WORD PTR [edx-0x51]
  405e40:	xlat   BYTE PTR ds:[ebx]
  405e41:	and    BYTE PTR [edx-0x4a8c7454],bl
  405e47:	icebp  
  405e48:	loopne 0x405def
  405e4a:	xor    al,0xd7
  405e4c:	rcr    BYTE PTR [ebp-0x2aad7b63],0x8
  405e53:	cdq    
  405e54:	fcom   QWORD PTR [eax+0x6312d1e1]
  405e5a:	sub    al,0xb9
  405e5c:	inc    esp
  405e5d:	dec    ebp
  405e5e:	cwde   
  405e5f:	and    eax,0xffc2667c
  405e64:	xchg   esi,eax
  405e65:	(bad)  
  405e66:	xchg   ebp,eax
  405e67:	out    dx,eax
  405e68:	(bad)  
  405e69:	loop   0x405e71
  405e6b:	out    0x8e,al
  405e6d:	jae    0x405e4e
  405e6f:	and    BYTE PTR ds:[eax-0x756be6d4],cl
  405e76:	jmp    0x405ee7
  405e78:	sar    DWORD PTR [ebx-0x28],0x3d
  405e7c:	shl    BYTE PTR [ecx],1
  405e7e:	js     0x405e1f
  405e80:	(bad)  
  405e81:	in     al,dx
  405e82:	jo     0x405eb3
  405e84:	test   al,0xfd
  405e86:	push   ebp
  405e87:	ficom  WORD PTR [esi+0x74a7aa84]
  405e8d:	imul   ebp,DWORD PTR [ebp-0xe],0xffffffc8
  405e91:	pop    eax
  405e92:	cmp    BYTE PTR [ebp+0x7e],al
  405e95:	sub    DWORD PTR [ecx],esi
  405e97:	call   0x8126f07f
  405e9c:	cmp    ch,BYTE PTR [eax+0x4d13bc78]
  405ea2:	or     BYTE PTR [edx],dh
  405ea4:	mov    ah,0x67
  405ea6:	adc    eax,0xef1b35a6
  405eab:	cmp    al,0xf8
  405ead:	cmp    eax,0x5ffbc540
  405eb2:	push   eax
  405eb3:	xor    dl,bh
  405eb5:	pop    edi
  405eb6:	jp     0x405e76
  405eb8:	std    
  405eb9:	aas    
  405eba:	inc    ebx
  405ebb:	xor    al,0x82
  405ebd:	sbb    ecx,edi
  405ebf:	cmp    DWORD PTR [ecx+ebx*1],ebx
  405ec2:	push   edx
  405ec3:	pop    edx
  405ec4:	mov    ah,0xd7
  405ec6:	mov    bh,BYTE PTR [ebx+0x76a0f26b]
  405ecc:	dec    ebx
  405ecd:	sub    eax,DWORD PTR [ebx-0x2a20c2e6]
  405ed3:	and    ch,BYTE PTR [ebx+0x25]
  405ed6:	and    ah,BYTE PTR [esi]
  405ed8:	push   ebp
  405ed9:	dec    ebp
  405eda:	and    al,BYTE PTR [eax]
  405edc:	mov    esi,0xaae89bdd
  405ee1:	pop    ebx
  405ee2:	std    
  405ee3:	fstp   QWORD PTR [eax+0xd]
  405ee6:	xchg   esi,eax
  405ee7:	fwait
  405ee8:	xor    BYTE PTR ds:0xb62f0036,cl
  405eee:	xchg   esi,eax
  405eef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ef0:	(bad)  
  405ef1:	call   0xaca92e92
  405ef6:	jno    0x405f5f
  405ef8:	add    al,0x57
  405efa:	data16 fdivp st(0),st
  405efd:	sbb    edi,DWORD PTR [esi+0x2a29c0fd]
  405f03:	sbb    eax,DWORD PTR [ebx+0x47]
  405f06:	jbe    0x405f65
  405f08:	ja     0x405f21
  405f0a:	js     0x405f6f
  405f0c:	das    
  405f0d:	aaa    
  405f0e:	push   esi
  405f0f:	dec    esi
  405f10:	lea    edi,[esi+0x4d]
  405f13:	xorps  xmm6,XMMWORD PTR [ebp-0x976fd88]
  405f1a:	add    al,bh
  405f1c:	dec    ebx
  405f1d:	idiv   eax
  405f1f:	jmp    0xde684384
  405f24:	add    al,0x1f
  405f26:	push   ebp
  405f27:	mov    bh,0x71
  405f29:	or     DWORD PTR ds:0x2766f6ca,esp
  405f2f:	test   DWORD PTR [ecx+eiz*4-0x7f],ecx
  405f33:	mul    DWORD PTR [ebx-0x6]
  405f36:	mov    cl,0x14
  405f38:	push   esi
  405f39:	xlat   BYTE PTR ds:[ebx]
  405f3a:	cs repnz mov dl,0xf
  405f3e:	or     ebx,DWORD PTR es:[ecx+esi*4-0x5d]
  405f43:	mov    edi,0xfe472ce1
  405f48:	pcmpgtb mm5,QWORD PTR [ebx+0x637ba5b7]
  405f4f:	push   es
  405f50:	or     BYTE PTR [eax-0x70daf5fb],ch
  405f56:	cmp    al,0xc9
  405f58:	push   ebp
  405f59:	leave  
  405f5a:	popa   
  405f5b:	xchg   ebx,ebp
  405f5d:	xor    edi,DWORD PTR ds:0x8f7b047d
  405f63:	mov    edi,0xb513c25d
  405f68:	hlt    
  405f69:	ror    BYTE PTR [edi-0x52024d7d],1
  405f6f:	scas   al,BYTE PTR es:[edi]
  405f70:	xchg   esi,eax
  405f71:	scas   al,BYTE PTR es:[edi]
  405f72:	ret    0xf18
  405f75:	mov    eax,DWORD PTR [esi+0x1]
  405f78:	sbb    ecx,DWORD PTR [edi]
  405f7a:	out    dx,al
  405f7b:	mov    dl,0xed
  405f7d:	fadd   st,st(0)
  405f7f:	mov    eax,0x77e16be6
  405f84:	inc    esi
  405f85:	ins    BYTE PTR es:[edi],dx
  405f86:	call   0x3562:0x53330586
  405f8d:	js     0x405f66
  405f8f:	lea    esp,[eax+eiz*8]
  405f92:	fs cwde 
  405f94:	mov    ebp,0x8f05ec5a
  405f99:	daa    
  405f9a:	or     ecx,DWORD PTR [esi+eiz*2+0x34]
  405f9e:	out    0x7d,al
  405fa0:	mov    al,0x5c
  405fa2:	call   FWORD PTR [edx-0x5b]
  405fa5:	mov    eax,0xbdf1274e
  405faa:	push   0x71695ff7
  405faf:	dec    ecx
  405fb0:	loope  0x406028
  405fb2:	push   0xffffffd0
  405fb4:	test   al,0xb7
  405fb6:	mov    bh,0x1f
  405fb8:	inc    eax
  405fb9:	loope  0x405ff9
  405fbb:	inc    edx
  405fbc:	jg     0x405f5f
  405fbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fbf:	das    
  405fc0:	inc    esi
  405fc1:	jmp    0x570ee591
  405fc6:	adc    al,dh
  405fc8:	jnp    0x405f4c
  405fca:	adc    eax,0x45230fa1
  405fcf:	dec    esi
  405fd0:	in     al,0x6f
  405fd2:	enter  0xd4d8,0xd8
  405fd6:	pop    ds
  405fd7:	cmp    dh,BYTE PTR [ecx-0x3487bd37]
  405fdd:	ins    DWORD PTR es:[edi],dx
  405fde:	push   0xfd5ef820
  405fe3:	xchg   BYTE PTR [edx],dl
  405fe5:	dec    edx
  405fe6:	(bad)  
  405fe7:	ins    BYTE PTR es:[edi],dx
  405fe8:	push   eax
  405fe9:	aad    0x3d
  405feb:	ret    0x15d1
  405fee:	mov    cl,0xb0
  405ff0:	(bad)  
  405ff1:	cli    
  405ff2:	dec    ebx
  405ff3:	inc    edi
  405ff4:	imul   ebx,DWORD PTR [edx+0x632011d7],0x2c
  405ffb:	fnstenv [edx+eax*4+0x3995ce62]
  406002:	and    BYTE PTR [eax-0xa],ah
  406005:	shr    DWORD PTR [ecx-0x78],0x2e
  406009:	xchg   edi,eax
  40600a:	mov    bh,BYTE PTR [edx-0x481a7ee3]
  406010:	add    ah,ah
  406012:	stos   DWORD PTR es:[edi],eax
  406013:	and    eax,0xbc205179
  406018:	mov    dl,0xd8
  40601a:	and    esi,eax
  40601c:	add    bl,BYTE PTR [edi]
  40601e:	push   es
  40601f:	jl     0x40608e
  406021:	rol    ebx,cl
  406023:	out    0xa8,eax
  406025:	pop    DWORD PTR [eax-0x75]
  406028:	pop    eax
  406029:	lea    ebx,[ebx-0x61e9526b]
  40602f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406030:	and    DWORD PTR [ebx-0x6de4351f],0x26
  406037:	fisttp DWORD PTR [ecx+0x33]
  40603a:	mov    BYTE PTR [ebx],0xc7
  40603d:	cmp    edx,eax
  40603f:	je     0x408557
  406045:	mov    eax,DWORD PTR [ebp-0x8]
  406048:	mov    DWORD PTR [ebp-0x18],eax
  40604b:	mov    eax,DWORD PTR [ebp-0x10]
  40604e:	add    eax,DWORD PTR [ebp-0x54]
  406051:	mov    DWORD PTR [ebp-0x1c],0xf89c85a1
  406058:	mov    DWORD PTR [ebp-0x8],eax
  40605b:	mov    eax,0xf89c85a2
  406060:	mov    DWORD PTR [ebp-0x28],eax
  406063:	mov    DWORD PTR [ebp-0x5c],0xf89c85a3
  40606a:	mov    DWORD PTR [ebp-0x40],0xf89c85bc
  406071:	mov    DWORD PTR [ebp-0x30],eax
  406074:	mov    eax,DWORD PTR [ebp-0x1c]
  406077:	xor    eax,esi
  406079:	add    eax,edi
  40607b:	jmp    0x408513
  406080:	mov    DWORD PTR [ebp-0x4c],0xf89c85b4
  406087:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  40608e:	mov    eax,DWORD PTR [ebp-0x30]
  406091:	mov    edx,DWORD PTR [ebp-0xc]
  406094:	xor    eax,esi
  406096:	add    eax,edi
  406098:	imul   eax,edx
  40609b:	mov    edx,DWORD PTR [ebp-0x8]
  40609e:	mov    al,BYTE PTR [eax+edx*1]
  4060a1:	mov    BYTE PTR [ebp-0x1],al
  4060a4:	mov    eax,DWORD PTR [ebp-0x30]
  4060a7:	mov    edx,DWORD PTR [ebp-0xc]
  4060aa:	xor    eax,esi
  4060ac:	add    eax,edi
  4060ae:	imul   eax,edx
  4060b1:	mov    edx,DWORD PTR [ebp-0x5c]
  4060b4:	xor    edx,esi
  4060b6:	add    eax,edx
  4060b8:	mov    edx,DWORD PTR [ebp-0x8]
  4060bb:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f3]
  4060c3:	mov    edx,DWORD PTR [ebp-0x4c]
  4060c6:	xor    edx,esi
  4060c8:	lea    eax,[edx+eax*1+0x3272f3]
  4060cf:	movzx  edx,BYTE PTR [ebp-0x1]
  4060d3:	xor    edx,eax
  4060d5:	mov    BYTE PTR [ebp-0x1],dl
  4060d8:	mov    al,BYTE PTR [ebp-0x1]
  4060db:	mov    edx,DWORD PTR [ebp-0x30]
  4060de:	mov    ebx,DWORD PTR [ebp-0xc]
  4060e1:	xor    edx,esi
  4060e3:	add    edx,edi
  4060e5:	imul   edx,ebx
  4060e8:	mov    ebx,DWORD PTR [ebp-0x8]
  4060eb:	mov    BYTE PTR [edx+ebx*1],al
  4060ee:	mov    eax,DWORD PTR [ebp-0x30]
  4060f1:	mov    edx,DWORD PTR [ebp-0xc]
  4060f4:	xor    eax,esi
  4060f6:	add    eax,edi
  4060f8:	imul   eax,edx
  4060fb:	mov    edx,DWORD PTR [ebp-0x8]
  4060fe:	mov    al,BYTE PTR [eax+edx*1]
  406101:	mov    BYTE PTR [ebp-0x1],al
  406104:	mov    eax,DWORD PTR [ebp-0x30]
  406107:	mov    edx,DWORD PTR [ebp-0xc]
  40610a:	xor    eax,esi
  40610c:	add    eax,edi
  40610e:	imul   eax,edx
  406111:	mov    edx,DWORD PTR [ebp-0x28]
  406114:	xor    edx,esi
  406116:	add    eax,edx
  406118:	mov    edx,DWORD PTR [ebp-0x8]
  40611b:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f3]
  406123:	mov    edx,DWORD PTR [ebp-0x50]
  406126:	xor    edx,esi
  406128:	lea    eax,[edx+eax*1+0x3272f3]
  40612f:	movzx  edx,BYTE PTR [ebp-0x1]
  406133:	xor    edx,eax
  406135:	mov    BYTE PTR [ebp-0x1],dl
  406138:	mov    al,BYTE PTR [ebp-0x1]
  40613b:	mov    edx,DWORD PTR [ebp-0x30]
  40613e:	mov    ebx,DWORD PTR [ebp-0xc]
  406141:	xor    edx,esi
  406143:	add    edx,edi
  406145:	imul   edx,ebx
  406148:	mov    ebx,DWORD PTR [ebp-0x8]
  40614b:	jmp    0x4084fc
  406150:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406151:	mov    dh,0x7b
  406153:	sbb    eax,0x86859860
  406158:	scas   eax,DWORD PTR es:[edi]
  406159:	mov    cl,0xac
  40615b:	nop
  40615c:	into   
  40615d:	dec    esp
  40615e:	dec    eax
  40615f:	jecxz  0x4061bc
  406161:	cmp    BYTE PTR [ebx-0x7ca3107d],al
  406167:	cmp    DWORD PTR [ebp-0x320e0860],0xffffffbe
  40616e:	mov    cl,0xbb
  406170:	cdq    
  406171:	sar    DWORD PTR [eax],cl
  406173:	repnz lmsw dx
  406177:	mov    edi,0xbbe7384c
  40617c:	jl     0x4061f9
  40617e:	jmp    0x406108
  406180:	mov    ebx,0xa09d25b1
  406185:	das    
  406186:	dec    eax
  406187:	stc    
  406188:	add    al,0xc9
  40618a:	sub    dl,BYTE PTR ds:0x3b7286a8
  406190:	js     0x406186
  406192:	dec    edx
  406193:	xchg   edi,eax
  406194:	aas    
  406195:	xor    edi,DWORD PTR [ebx+0x67]
  406198:	sub    eax,DWORD PTR [ebx+0x11]
  40619b:	into   
  40619c:	sbb    al,BYTE PTR [edx]
  40619e:	fwait
  40619f:	(bad)  
  4061a0:	push   0xfffffffe
  4061a2:	mov    cl,0x44
  4061a4:	jg     0x406172
  4061a6:	mov    ds:0x16626823,eax
  4061ab:	out    0xe5,al
  4061ad:	test   ecx,edx
  4061af:	out    dx,al
  4061b0:	ss aam 0x5a
  4061b3:	xor    esp,DWORD PTR [ecx-0x2359216a]
  4061b9:	repz pop edx
  4061bb:	imul   edi,DWORD PTR [ebx+ebp*1-0x1e],0xffffff85
  4061c0:	lock (bad) 
  4061c2:	ins    BYTE PTR es:[edi],dx
  4061c3:	adc    dl,dl
  4061c5:	push   0xffffffa9
  4061c7:	js     0x4061db
  4061c9:	jg     0x406183
  4061cb:	xchg   ebp,eax
  4061cc:	mov    edi,0x4f77b53a
  4061d1:	ja     0x40617b
  4061d3:	or     BYTE PTR [ecx-0x2c2500c1],0xf4
  4061da:	int3   
  4061db:	ds mov ah,0x70
  4061de:	sbb    DWORD PTR [esi-0x38d13231],ebx
  4061e4:	leave  
  4061e5:	push   0x29
  4061e7:	pop    ebx
  4061e8:	xchg   ebx,eax
  4061e9:	pop    ds
  4061ea:	mov    al,BYTE PTR [ebx+0x4a95a9b0]
  4061f0:	scas   eax,DWORD PTR es:[edi]
  4061f1:	into   
  4061f2:	xor    BYTE PTR [eax],cl
  4061f4:	ins    BYTE PTR es:[edi],dx
  4061f5:	leave  
  4061f6:	and    cl,ch
  4061f8:	pop    eax
  4061f9:	mov    eax,ds:0xea9bc2d8
  4061fe:	mov    ecx,esi
  406200:	jp     0x4061b0
  406202:	xor    DWORD PTR [ebp-0x6c],ebp
  406205:	adc    ebp,DWORD PTR [ebx+0x55]
  406208:	mov    edx,0x1ace46a5
  40620d:	lea    esi,[edi]
  40620f:	dec    eax
  406210:	sbb    DWORD PTR [eax],ecx
  406212:	mov    ecx,0xf7828a0d
  406217:	pusha  
  406218:	fwait
  406219:	xchg   edx,eax
  40621a:	push   0xb2ee2131
  40621f:	jmp    0x823:0x99015b9f
  406226:	mov    esp,0x4bbf5a1b
  40622b:	pop    ecx
  40622c:	jl     0x4061c7
  40622e:	fwait
  40622f:	dec    esp
  406230:	mov    eax,0xf8e5f08b
  406235:	std    
  406236:	add    edi,0x57d6cb97
  40623c:	retf   0xf60
  40623f:	lahf   
  406240:	fsub   DWORD PTR [edx+0x7bfd42ed]
  406246:	in     al,0xc1
  406248:	push   0x74262194
  40624d:	(bad)  
  40624e:	fmul   DWORD PTR [ebx+0x6514ebb2]
  406254:	dec    esi
  406255:	xchg   BYTE PTR [edi],bl
  406257:	lahf   
  406258:	out    0xe,eax
  40625a:	jo     0x4062c7
  40625c:	test   eax,0x9b66bad4
  406261:	sti    
  406262:	sub    cl,BYTE PTR [ecx]
  406264:	push   eax
  406265:	xor    bh,bl
  406267:	popf   
  406268:	lahf   
  406269:	scas   eax,DWORD PTR es:[edi]
  40626a:	dec    esp
  40626b:	test   BYTE PTR [esi],ah
  40626d:	cmp    DWORD PTR [ecx],edx
  40626f:	xor    al,0xce
  406271:	frstor [esi+0x3bdf7961]
  406277:	fcom   QWORD PTR [ecx]
  406279:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40627a:	sbb    ecx,ebx
  40627c:	xor    eax,0x76a25d2a
  406281:	(bad)  
  406282:	adc    DWORD PTR [edx-0x34b7dea7],ebx
  406288:	pop    esp
  406289:	dec    ebx
  40628a:	fwait
  40628b:	push   0x65a926d3
  406290:	sbb    ch,BYTE PTR [edi+0x66519d43]
  406296:	ja     0x406282
  406298:	xlat   BYTE PTR ds:[ebx]
  406299:	and    DWORD PTR ss:[edi-0x6fc8d0ea],eax
  4062a0:	(bad)  
  4062a1:	xchg   ebp,eax
  4062a2:	enter  0xa446,0x7
  4062a6:	ins    BYTE PTR es:[edi],dx
  4062a7:	sub    esi,ebp
  4062a9:	sub    ah,al
  4062ab:	push   esp
  4062ac:	(bad)  
  4062ae:	dec    ecx
  4062af:	pop    ecx
  4062b0:	cmp    BYTE PTR ds:0x2e48168,0x24
  4062b7:	mov    edx,0x319626c1
  4062bc:	test   eax,0xc7cb5fe8
  4062c1:	dec    DWORD PTR [ebx]
  4062c3:	adc    eax,0x833a333e
  4062c8:	mov    WORD PTR [ecx],ss
  4062ca:	push   0x7e
  4062cc:	mov    ah,0x28
  4062ce:	mov    eax,ds:0x35292770
  4062d3:	sbb    esi,DWORD PTR [ebx]
  4062d5:	pop    ebp
  4062d6:	std    
  4062d7:	jno    0x4062f5
  4062d9:	fcomp  DWORD PTR [eax]
  4062db:	or     bh,BYTE PTR [eax-0x70]
  4062de:	fdiv   QWORD PTR [edi-0x6109d9b0]
  4062e4:	adc    eax,0xd9e63b5
  4062e9:	xlat   BYTE PTR ds:[ebx]
  4062ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062ec:	cdq    
  4062ed:	xchg   al,dh
  4062ef:	cwde   
  4062f0:	push   edx
  4062f1:	pop    ebp
  4062f2:	iret   
  4062f3:	out    0x88,al
  4062f5:	mov    dl,0xf6
  4062f7:	mov    bh,0x15
  4062f9:	je     0x4062e6
  4062fb:	xchg   ebp,eax
  4062fc:	sub    ebx,ebp
  4062fe:	dec    esi
  4062ff:	icebp  
  406300:	or     cl,ch
  406302:	sar    BYTE PTR [eax-0x7587c8b7],1
  406308:	scas   eax,DWORD PTR es:[edi]
  406309:	fisub  DWORD PTR [ebp-0x61]
  40630c:	js     0x4062d1
  40630e:	xchg   ebp,eax
  40630f:	mov    DWORD PTR [edi+eiz*1],0x7db8d79c
  406316:	bnd jbe 0x406349
  406319:	pop    es
  40631a:	mov    BYTE PTR [ecx],ah
  40631c:	push   esi
  40631d:	ffreep st(5)
  40631f:	sbb    edx,ecx
  406321:	loope  0x40633b
  406323:	sub    dl,BYTE PTR [eax+0x18]
  406326:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406327:	dec    eax
  406328:	mov    ch,0x5c
  40632a:	mov    al,ds:0xa6bf6c85
  40632f:	mov    dl,0x12
  406331:	mov    bh,0xbd
  406333:	shr    DWORD PTR [ecx-0x1d0b9877],0x6b
  40633a:	popa   
  40633b:	jl     0x4062fb
  40633d:	xchg   ebx,eax
  40633e:	and    al,0xc3
  406340:	ret    
  406341:	and    edi,eax
  406343:	and    DWORD PTR gs:[edx],edx
  406346:	mov    cl,0xbe
  406348:	jg     0x40630d
  40634a:	cmp    edi,DWORD PTR [esi-0x59]
  40634d:	aad    0xc0
  40634f:	jmp    0x406367
  406351:	(bad)  
  406352:	adc    DWORD PTR [esi-0x53],ecx
  406355:	mov    dl,0x14
  406357:	and    edx,eax
  406359:	icebp  
  40635a:	mov    ch,0x19
  40635c:	xchg   edi,eax
  40635d:	fucomip st,st(4)
  40635f:	jge    0x4063d6
  406361:	xor    al,0xcd
  406363:	les    edi,FWORD PTR [esi+0x1d1906f0]
  406369:	mov    DWORD PTR ds:0xf47c3845,esp
  40636f:	and    DWORD PTR [eax-0x6],ecx
  406372:	dec    eax
  406373:	rcr    BYTE PTR [esp+ebp*8],0x54
  406377:	adc    dl,bh
  406379:	es daa 
  40637b:	pop    esi
  40637c:	rol    ecx,1
  40637e:	inc    ebp
  40637f:	sbb    eax,0xbb67d3e2
  406384:	or     bl,bl
  406386:	das    
  406387:	pop    esp
  406388:	cmc    
  406389:	inc    eax
  40638a:	popa   
  40638b:	test   DWORD PTR [esi],edi
  40638d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40638e:	xchg   ebp,eax
  40638f:	mov    ebx,0x55cf5a19
  406394:	les    esp,FWORD PTR [edx+0x7f]
  406397:	(bad)  
  406398:	adc    eax,0x3d1fbdf3
  40639d:	test   DWORD PTR [edx+0x61cdd17c],esp
  4063a3:	int3   
  4063a4:	jge    0x406329
  4063a6:	push   ecx
  4063a7:	out    dx,al
  4063a8:	dec    ecx
  4063a9:	add    BYTE PTR [esi+ebx*1-0x39c98e70],0x94
  4063b1:	sub    BYTE PTR [edi+edx*4-0x54],0x27
  4063b6:	jb     0x40637c
  4063b8:	jl     0x4063b7
  4063ba:	mov    al,0xe6
  4063bc:	shl    BYTE PTR [ebp-0x67],0x57
  4063c0:	es push 0x33
  4063c3:	test   ch,al
  4063c5:	hlt    
  4063c6:	pop    eax
  4063c7:	icebp  
  4063c8:	pop    eax
  4063c9:	xor    bh,BYTE PTR [ebx+ebx*4-0x4e]
  4063cd:	iret   
  4063ce:	jo     0x4063eb
  4063d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063d1:	xchg   esi,eax
  4063d2:	ins    BYTE PTR es:[edi],dx
  4063d3:	fmul   QWORD PTR [edi+0x55faec34]
  4063d9:	mov    ecx,0xce995a3c
  4063de:	inc    eax
  4063df:	dec    ebx
  4063e0:	push   ds
  4063e1:	push   esi
  4063e2:	sub    DWORD PTR [ecx-0x34d87b43],0x40512e5f
  4063ec:	mov    ah,0x2b
  4063ee:	mov    ecx,0x931164a0
  4063f3:	in     eax,dx
  4063f4:	cld    
  4063f5:	xchg   edx,eax
  4063f6:	loop   0x4063fb
  4063f8:	mov    WORD PTR [esp+ecx*1],?
  4063fb:	data16 cli 
  4063fd:	(bad)  
  4063fe:	sbb    DWORD PTR [edi-0x73],edi
  406401:	lods   eax,DWORD PTR ds:[esi]
  406402:	sub    al,0x4c
  406404:	xchg   edi,eax
  406405:	dec    eax
  406406:	cmp    esp,esi
  406408:	mov    ah,0x6d
  40640a:	add    dh,BYTE PTR [eax-0x22]
  40640d:	mov    ds:0xbf5845c0,al
  406412:	ins    BYTE PTR es:[edi],dx
  406413:	mov    al,0xc2
  406415:	jmp    0x4bd5:0xd5ad11b5
  40641c:	out    0xd4,al
  40641e:	shl    DWORD PTR [edi+0x40bd9728],1
  406424:	adc    edi,DWORD PTR [edi]
  406426:	js     0x4063cf
  406428:	or     al,0x31
  40642a:	lods   eax,DWORD PTR ds:[esi]
  40642b:	lods   eax,DWORD PTR ds:[esi]
  40642c:	inc    ebp
  40642d:	push   ebp
  40642e:	or     ch,BYTE PTR [ebx]
  406430:	push   eax
  406431:	xor    al,0xd3
  406433:	push   ebp
  406434:	sar    DWORD PTR [edx-0x7e],cl
  406437:	or     esi,DWORD PTR [edi-0x2428daa0]
  40643d:	js     0x40642f
  40643f:	jmp    0x4063d5
  406441:	pop    esi
  406442:	pop    edx
  406443:	(bad)  
  406444:	std    
  406445:	std    
  406446:	cli    
  406447:	jo     0x4064a4
  406449:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40644a:	add    bh,al
  40644c:	push   es
  40644d:	leave  
  40644e:	mov    dh,0xbc
  406450:	xor    edi,DWORD PTR [eax+ecx*2-0x74]
  406454:	das    
  406455:	out    dx,al
  406456:	or     ah,BYTE PTR [ecx]
  406458:	jo     0x406412
  40645a:	mov    ds:0xd12b9f8,eax
  40645f:	mov    ah,0x3d
  406461:	inc    ecx
  406462:	sub    al,0xee
  406464:	jmp    0x406487
  406466:	xchg   BYTE PTR [edi+0x10],cl
  406469:	cld    
  40646a:	push   es
  40646b:	jnp    0x4063f7
  40646d:	cdq    
  40646e:	jbe    0x406488
  406470:	fild   DWORD PTR [ebx-0x28499402]
  406476:	ins    BYTE PTR es:[edi],dx
  406477:	mov    ah,0xd8
  406479:	arpl   WORD PTR [esi+0x3e32de76],di
  40647f:	jmp    0x88ea:0xc90adfd8
  406486:	pop    ecx
  406487:	test   BYTE PTR [edi+0x724e637e],0x58
  40648e:	je     0x406420
  406490:	sub    eax,0xf0be921b
  406495:	in     eax,dx
  406496:	out    dx,eax
  406497:	sub    BYTE PTR [esi+ecx*8-0x542ad11],0x88
  40649f:	(bad)  
  4064a0:	out    dx,al
  4064a1:	mov    BYTE PTR [ebx-0x10],dl
  4064a4:	sub    DWORD PTR [ebx-0x63819a4],ecx
  4064aa:	sar    DWORD PTR ds:0xc704cb3f,0x97
  4064b1:	sbb    bh,BYTE PTR [edx]
  4064b3:	fidivr DWORD PTR [eax+0x1f0e5317]
  4064b9:	bound  ecx,QWORD PTR [ebx]
  4064bb:	xchg   edi,eax
  4064bc:	adc    BYTE PTR [ecx],cl
  4064be:	es add eax,eax
  4064c1:	xor    BYTE PTR [ebx-0x6c],ch
  4064c4:	add    al,al
  4064c6:	sub    edi,DWORD PTR [edx-0x67]
  4064c9:	call   0xe579:0x4badfe59
  4064d0:	les    edx,FWORD PTR [esi]
  4064d2:	in     al,dx
  4064d3:	cli    
  4064d4:	popa   
  4064d5:	pop    esp
  4064d6:	pop    esp
  4064d7:	in     eax,dx
  4064d8:	jno    0x406550
  4064da:	mov    eax,0x15c9d0d0
  4064df:	add    eax,0x5a1db5f3
  4064e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064e5:	or     al,0xaa
  4064e7:	push   eax
  4064e8:	dec    edi
  4064e9:	mov    eax,0x5f383e3c
  4064ee:	push   eax
  4064ef:	arpl   WORD PTR [eax],bx
  4064f1:	call   0xa451:0x5144d491
  4064f8:	popf   
  4064f9:	test   al,0x7e
  4064fb:	repz sar DWORD PTR [edx],cl
  4064fe:	inc    edx
  4064ff:	and    al,0x4
  406501:	stc    
  406502:	cdq    
  406503:	mov    dh,0xf0
  406505:	push   cs
  406506:	jmp    FWORD PTR ds:0xc94085
  40650c:	or     eax,0xde237a48
  406511:	bnd jo 0x406530
  406514:	dec    ebp
  406515:	pop    ds
  406516:	push   ebp
  406517:	mov    eax,ds:0x18f3d625
  40651c:	out    0x60,al
  40651e:	cmp    ecx,DWORD PTR [ebx-0x3c]
  406521:	inc    ebp
  406522:	dec    ebp
  406523:	xchg   edx,eax
  406524:	aaa    
  406525:	(bad)  
  406526:	in     al,0xde
  406528:	les    ecx,FWORD PTR ds:0x45bfcb1a
  40652e:	jge    0x406501
  406530:	mov    ebp,0xe3db194a
  406535:	mov    al,0x5e
  406537:	pop    edi
  406538:	mov    ecx,0xff22dd14
  40653d:	imul   ebx,DWORD PTR [ebp+0x3f],0x60
  406541:	bound  edx,QWORD PTR [edi]
  406543:	xor    BYTE PTR [edi+esi*1],dl
  406546:	jp     0x406536
  406548:	retf   
  406549:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40654a:	jne    0x406538
  40654c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40654d:	das    
  40654e:	scas   al,BYTE PTR es:[edi]
  40654f:	xchg   esi,eax
  406550:	mov    DWORD PTR [ebx-0x2eb71867],0x9aa75d9
  40655a:	test   eax,0x900fedf0
  40655f:	fdivr  QWORD PTR ds:0x4cf75329
  406565:	into   
  406566:	push   edx
  406567:	fadd   st(5),st
  406569:	mov    cl,0x15
  40656b:	sub    al,0x97
  40656d:	push   esp
  40656e:	mov    eax,0xc35b64df
  406573:	lods   eax,DWORD PTR ds:[esi]
  406574:	and    BYTE PTR [ecx],0xca
  406577:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406578:	das    
  406579:	idiv   BYTE PTR [edi+edi*2+0x7120695f]
  406580:	push   es
  406581:	sub    eax,0x78438dba
  406586:	aad    0x56
  406588:	sub    BYTE PTR [eax],0xe3
  40658b:	dec    eax
  40658c:	xchg   edi,eax
  40658d:	add    BYTE PTR [edi-0x14],bl
  406590:	lods   eax,DWORD PTR ds:[esi]
  406591:	test   edi,esi
  406593:	nop
  406594:	add    al,0xf1
  406596:	pop    ss
  406597:	loope  0x406538
  406599:	xor    eax,0x327f91e3
  40659e:	(bad)  
  40659f:	aad    0x4d
  4065a1:	xchg   BYTE PTR [ecx],dh
  4065a3:	and    ebp,DWORD PTR [edx]
  4065a5:	loop   0x4065cc
  4065a7:	add    DWORD PTR [edi+esi*4],0x30333d18
  4065ae:	lds    ebp,FWORD PTR [eax+ebx*4-0x267e0487]
  4065b5:	iret   
  4065b6:	xchg   BYTE PTR ds:0x230cd394,dl
  4065bc:	dec    ecx
  4065bd:	(bad)  
  4065be:	mov    DWORD PTR [edx+0x43],edx
  4065c1:	and    eax,0x562d2848
  4065c6:	not    BYTE PTR [esi+0x40759b72]
  4065cc:	cmp    eax,0x7e6d91ad
  4065d1:	sub    BYTE PTR [ebx+0x68],0x68
  4065d5:	adc    ch,BYTE PTR [esi-0x78]
  4065d8:	in     al,dx
  4065d9:	mov    DWORD PTR [eax],0xd637ee64
  4065df:	(bad)  
  4065e0:	jbe    0x40662f
  4065e2:	rol    DWORD PTR [eax+eax*2+0x67],cl
  4065e6:	cmp    eax,0xff3e16
  4065eb:	jmp    0xcc4b:0x3b38a464
  4065f2:	adc    al,BYTE PTR [ecx+ebx*2]
  4065f5:	out    0x8a,eax
  4065f7:	cmc    
  4065f8:	fs hlt 
  4065fa:	cmc    
  4065fb:	addr16 in al,dx
  4065fd:	sub    eax,0x266a05bd
  406602:	push   ebp
  406603:	test   eax,0xcfb6e6d8
  406608:	std    
  406609:	xchg   ebp,eax
  40660a:	or     dl,dh
  40660c:	out    dx,al
  40660d:	adc    edx,DWORD PTR ds:0x963d82df
  406613:	loope  0x40667f
  406615:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406616:	add    cl,BYTE PTR [edx+0x2abefd10]
  40661c:	jns    0x406601
  40661e:	cmp    esp,DWORD PTR [ecx+eiz*2-0x11516769]
  406625:	inc    ebp
  406626:	pop    ss
  406627:	int    0xbc
  406629:	test   DWORD PTR [ecx],ecx
  40662b:	dec    ebx
  40662c:	sub    edi,DWORD PTR [edx-0x6040d71e]
  406632:	pop    ebx
  406633:	mov    al,ds:0x736f7813
  406638:	ins    DWORD PTR es:[edi],dx
  406639:	addr16 xchg ebp,eax
  40663b:	mov    edi,0xdb667a9a
  406640:	xchg   BYTE PTR [ebx],dl
  406642:	(bad)  
  406643:	dec    ebx
  406644:	cmc    
  406645:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406646:	lds    edx,FWORD PTR [ecx+0x15881c31]
  40664c:	pop    ss
  40664d:	sti    
  40664e:	mov    edi,0x8080f5eb
  406653:	stos   DWORD PTR es:[edi],eax
  406654:	sbb    DWORD PTR [edi-0xa192dc7],esp
  40665a:	and    eax,0x9f58da1b
  40665f:	test   DWORD PTR [ebx-0x13d00fe6],edx
  406665:	push   edi
  406666:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406667:	mov    dh,0x48
  406669:	jl     0x406652
  40666b:	mov    eax,ds:0x81bd4b28
  406670:	jmp    0x40668a
  406672:	loopne 0x40665e
  406674:	imul   ecx,DWORD PTR [ecx+eiz*8],0x7a624d36
  40667b:	iret   
  40667c:	dec    edx
  40667d:	adc    dh,ch
  40667f:	pop    ebx
  406680:	pushf  
  406681:	mov    al,0x9
  406683:	fcmovnu st,st(6)
  406685:	fs out 0x40,eax
  406688:	adc    al,BYTE PTR [edx]
  40668a:	shl    DWORD PTR [ebx],1
  40668c:	imul   ebx,ecx,0x88c952ca
  406692:	jmp    0xa9d8c2bb
  406697:	add    edi,DWORD PTR [esi+0x22ed9e1e]
  40669d:	xchg   edi,eax
  40669e:	int    0xc3
  4066a0:	mov    DWORD PTR [edx-0x242ffe37],ecx
  4066a6:	mov    esp,0x93a4ad84
  4066ab:	jae    0x406674
  4066ad:	mov    eax,0x6b53289
  4066b2:	inc    ebx
  4066b3:	jmp    0x4821:0xffeb7512
  4066ba:	xor    al,0xdd
  4066bc:	lds    edi,FWORD PTR [ebx-0x9]
  4066bf:	inc    ebx
  4066c0:	inc    ebp
  4066c1:	sub    dh,BYTE PTR [esi-0x11]
  4066c4:	jne    0x4066ff
  4066c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066c7:	rcl    BYTE PTR [edi],cl
  4066c9:	nop
  4066ca:	(bad)  
  4066cb:	cmp    edi,DWORD PTR [edx-0xd]
  4066ce:	xchg   esp,eax
  4066cf:	(bad)  
  4066d0:	push   ds
  4066d1:	pusha  
  4066d2:	mov    edi,0xb0a4f6be
  4066d7:	jmp    0x81329131
  4066dc:	or     al,0x79
  4066de:	call   0x105f112c
  4066e3:	dec    esi
  4066e4:	jl     0x406678
  4066e6:	xor    DWORD PTR [edx-0x58],ebx
  4066e9:	jae    0x40668a
  4066eb:	div    dh
  4066ed:	test   eax,0x6e75bb05
  4066f2:	ficomp WORD PTR [edi+0x1d]
  4066f5:	(bad)  
  4066f6:	out    dx,eax
  4066f7:	dec    eax
  4066f8:	(bad)  
  4066f9:	adc    cl,bl
  4066fb:	enter  0x41e7,0xac
  4066ff:	or     al,0x4
  406701:	adc    eax,0xfdd4dbc1
  406706:	imul   BYTE PTR [ebp-0x57829866]
  40670c:	pop    ebx
  40670d:	push   cs
  40670e:	dec    eax
  40670f:	int    0x3
  406711:	dec    esi
  406712:	pop    edi
  406713:	inc    esp
  406714:	lock lds edx,FWORD PTR [esi+0x52]
  406718:	cld    
  406719:	icebp  
  40671a:	pop    ebx
  40671b:	fimul  WORD PTR [ebx-0x5530857]
  406721:	sbb    DWORD PTR [ebx-0x16ce4d62],ebx
  406727:	test   eax,0xd0553fda
  40672c:	lods   eax,DWORD PTR ds:[esi]
  40672d:	push   edx
  40672e:	or     ah,BYTE PTR [esi-0x56]
  406731:	mov    edx,0x82ad9228
  406736:	add    al,0xbe
  406738:	inc    cx
  40673a:	out    dx,eax
  40673b:	mov    WORD PTR [eax+0x225d367f],cs
  406741:	lods   eax,DWORD PTR ds:[esi]
  406742:	cmp    eax,0x340df5ad
  406747:	aad    0xb
  406749:	and    esi,DWORD PTR [eax+0x2252c087]
  40674f:	fild   QWORD PTR fs:[ebx-0x33]
  406753:	xchg   edx,eax
  406754:	bound  eax,QWORD PTR [ebx-0x5feb64ad]
  40675a:	shr    BYTE PTR [edi+ebp*2+0x1622a75a],0x1e
  406762:	ror    ebp,0x86
  406765:	cmp    eax,0x9fc50fb
  40676a:	xor    eax,0x41c3d27e
  40676f:	adc    al,0x79
  406771:	xor    BYTE PTR [ecx+ebp*8-0x27285372],bl
  406778:	add    ebp,DWORD PTR [eax+eiz*1+0x58662d8a]
  40677f:	and    esp,ebp
  406781:	sbb    BYTE PTR [eax+0x4a],bl
  406784:	aam    0x5b
  406786:	div    DWORD PTR [edx]
  406788:	in     al,dx
  406789:	lods   al,BYTE PTR ds:[esi]
  40678a:	into   
  40678b:	sbb    DWORD PTR [eax+0x6],edx
  40678e:	mov    BYTE PTR [ebp+edx*2+0xe],ch
  406792:	lods   al,BYTE PTR ds:[esi]
  406793:	push   ss
  406794:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406795:	(bad)  
  406796:	scas   eax,DWORD PTR es:[edi]
  406797:	pop    es
  406798:	mov    ah,0xb0
  40679a:	mov    WORD PTR [edi-0x79],?
  40679d:	push   ds
  40679e:	inc    ecx
  40679f:	xchg   edi,eax
  4067a0:	pop    ebx
  4067a1:	sbb    BYTE PTR [ecx+0x10],0x11
  4067a5:	add    al,0x81
  4067a7:	je     0x40679a
  4067a9:	mov    WORD PTR [ecx+0x4be9db0d],fs
  4067af:	call   0x1bee:0xd8544a61
  4067b6:	xchg   edi,eax
  4067b7:	pop    ebp
  4067b8:	test   DWORD PTR [eax+edx*1],0x8e5dc214
  4067bf:	sub    eax,0x20a94da9
  4067c4:	stos   BYTE PTR es:[edi],al
  4067c5:	test   al,0x72
  4067c7:	in     al,0x68
  4067c9:	push   cs
  4067ca:	rcl    BYTE PTR [ecx],cl
  4067cc:	mov    edi,0xa5db3468
  4067d1:	mov    al,ds:0x5e553f3b
  4067d6:	in     al,0x68
  4067d8:	in     al,dx
  4067d9:	jg     0x4067e0
  4067db:	js     0x406829
  4067dd:	dec    eax
  4067de:	sbb    eax,0xc5cae24a
  4067e3:	fild   DWORD PTR [edx-0x46]
  4067e6:	mov    bl,0xf
  4067e8:	fisttp QWORD PTR cs:[ebx-0x3b]
  4067ec:	fsub   DWORD PTR [edi+0x55]
  4067ef:	push   0xe21f9800
  4067f4:	sub    DWORD PTR [ebx-0x3c],0x9dacdb43
  4067fb:	in     al,0xad
  4067fd:	push   cs
  4067fe:	pcmpgtb mm7,QWORD PTR [edi]
  406801:	mov    eax,0x7a34ac9e
  406806:	adc    al,0x39
  406808:	ficomp WORD PTR [eax-0x423d0498]
  40680e:	jmp    0x8c3e:0xaf629dee
  406815:	fnsave [eax]
  406817:	cli    
  406818:	push   edi
  406819:	sti    
  40681a:	es push ss
  40681c:	mov    ds:0x6bfa9d37,eax
  406821:	(bad)  
  406822:	in     eax,dx
  406823:	and    bh,BYTE PTR [edx-0x6c]
  406826:	arpl   dx,bp
  406828:	xor    eax,edi
  40682a:	out    dx,al
  40682b:	adc    DWORD PTR [ebx],ebp
  40682d:	pop    esp
  40682e:	and    BYTE PTR [ebp+0x0],bh
  406831:	mov    ecx,0xf4173e3f
  406836:	cmp    eax,0x903a2d0f
  40683b:	cmc    
  40683c:	fldenv [edx-0x31fa7efc]
  406842:	test   BYTE PTR [ebx+0x42],ah
  406845:	(bad)  
  406846:	fcom   st(2)
  406848:	retf   0x1bd0
  40684b:	jno    0x4068c8
  40684d:	out    dx,eax
  40684e:	adc    eax,0x8dd543af
  406853:	xchg   edi,eax
  406854:	xor    DWORD PTR [ecx],edx
  406856:	push   es
  406857:	push   0xffffffa4
  406859:	jno    0x40686d
  40685b:	inc    esp
  40685c:	sbb    ebp,ebx
  40685e:	jmp    0xaa1d707b
  406863:	cmc    
  406864:	fidiv  WORD PTR [edi+ecx*2]
  406867:	je     0x406846
  406869:	dec    edi
  40686a:	repnz mul bl
  40686d:	pushfw 
  40686f:	push   edi
  406870:	xor    dh,dl
  406872:	retf   
  406873:	or     BYTE PTR [ebx+0x7d903197],bh
  406879:	ins    BYTE PTR es:[edi],dx
  40687a:	outs   dx,BYTE PTR ds:[esi]
  40687b:	add    al,0x21
  40687d:	sub    eax,DWORD PTR [edi]
  40687f:	mov    dl,0xc2
  406881:	and    eax,0x12a76982
  406886:	popa   
  406887:	pop    eax
  406888:	rol    DWORD PTR [edx+0x164e091b],0x62
  40688f:	jmp    0xbf17e3d7
  406894:	loope  0x4068b6
  406896:	inc    eax
  406897:	push   cs
  406898:	dec    eax
  406899:	aad    0xab
  40689b:	and    ecx,eax
  40689d:	test   eax,0x54c2b6db
  4068a3:	push   0x62f182fc
  4068a8:	fnstenv [ecx+ebp*8]
  4068ab:	cmp    al,BYTE PTR [ebx-0xadbcd8e]
  4068b1:	in     eax,0x48
  4068b3:	pop    ds
  4068b4:	dec    ecx
  4068b5:	push   esi
  4068b6:	sub    ebx,DWORD PTR [ecx-0x1d]
  4068b9:	sahf   
  4068ba:	mov    cl,bh
  4068bc:	cmp    al,ch
  4068be:	adc    BYTE PTR [ebx-0x5f],0xe2
  4068c2:	mov    bh,0xb8
  4068c4:	xor    edx,DWORD PTR [ecx-0x653b1ab0]
  4068ca:	pop    esi
  4068cb:	mov    esi,0x2a75a318
  4068d0:	imul   ebp,DWORD PTR [edi],0x3212341a
  4068d6:	pop    es
  4068d7:	adc    al,0x18
  4068d9:	arpl   WORD PTR [ecx+eax*2+0x37445db0],si
  4068e0:	mov    eax,ds:0xa54c6f10
  4068e5:	fisttp DWORD PTR [ebx-0x34]
  4068e8:	xchg   esp,eax
  4068e9:	mov    ?,WORD PTR [ecx+eax*8+0x7d]
  4068ed:	push   esi
  4068ee:	ds push edx
  4068f0:	adc    eax,0x227d9f8f
  4068f5:	div    BYTE PTR [edx-0x2f]
  4068f8:	mov    ds:0x759340f5,eax
  4068fd:	icebp  
  4068fe:	out    dx,eax
  4068ff:	sti    
  406900:	sub    esp,DWORD PTR [edi-0x46]
  406903:	adc    esp,DWORD PTR [eax-0x29642d58]
  406909:	add    al,0xe8
  40690b:	add    bl,BYTE PTR [eax-0x7173611b]
  406911:	xor    eax,0x9bb12d0d
  406916:	or     DWORD PTR [ebx],ebp
  406918:	dec    esp
  406919:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40691a:	inc    ecx
  40691b:	test   WORD PTR ds:0x28889142,bp
  406922:	(bad)  
  406923:	int    0x34
  406925:	mov    ebp,0x59d57392
  40692a:	bound  esi,QWORD PTR [ecx+ebx*2]
  40692d:	test   eax,0x391f82f3
  406932:	sub    eax,0xd3fa2b06
  406937:	dec    ebx
  406938:	jecxz  0x4068be
  40693a:	test   DWORD PTR [ecx+eiz*8-0x78],ebp
  40693e:	jns    0x4068e6
  406940:	mov    ebx,0x61354e02
  406945:	xchg   ebp,eax
  406946:	into   
  406947:	sar    BYTE PTR [ecx],0x36
  40694a:	pop    ebp
  40694b:	adc    edx,edx
  40694d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40694e:	xchg   ebx,eax
  40694f:	fimul  WORD PTR [edi]
  406951:	lahf   
  406952:	add    al,0xe0
  406954:	jle    0x406930
  406956:	call   0x753f:0xac33153e
  40695d:	mov    bh,0x7
  40695f:	mov    bl,0x4f
  406961:	sub    DWORD PTR [edi+0x38e0dea9],edi
  406967:	mov    bl,BYTE PTR [eax-0xc667ec]
  40696d:	or     BYTE PTR [edi-0x46dd5b26],ah
  406973:	mov    ds:0xbb03465a,eax
  406978:	sahf   
  406979:	stos   DWORD PTR es:[edi],eax
  40697a:	out    dx,eax
  40697b:	ss icebp 
  40697d:	iret   
  40697e:	mov    ds:0xa84bd44b,eax
  406983:	mov    al,ds:0x30d59a5e
  406988:	and    eax,0xdbe39758
  40698d:	xor    BYTE PTR [ebx],ch
  40698f:	pop    ebx
  406990:	cmp    dh,cl
  406992:	mov    ds:0x7311328d,al
  406997:	push   0xffffffcb
  406999:	test   dl,bh
  40699b:	mov    ebx,0xea773702
  4069a0:	retf   0x620
  4069a3:	or     BYTE PTR [ebx-0x516b475],dh
  4069a9:	cwde   
  4069aa:	and    BYTE PTR [eax+0x7b],ch
  4069ad:	mov    esi,0x6e6fadec
  4069b2:	pop    edx
  4069b3:	std    
  4069b4:	push   0x1e348d73
  4069b9:	sub    ch,BYTE PTR gs:[ecx-0x3c04eefa]
  4069c0:	fistp  DWORD PTR [ebx]
  4069c2:	push   es
  4069c3:	adc    DWORD PTR [esi],eax
  4069c5:	and    cl,BYTE PTR [ebp-0x18]
  4069c8:	jno    0x406a21
  4069ca:	pop    eax
  4069cb:	pop    edi
  4069cc:	sub    DWORD PTR [edi-0x3],ebx
  4069cf:	mov    DWORD PTR [ebx+0x79bdb42a],0xaabfc7ac
  4069d9:	jecxz  0x4069c7
  4069db:	jae    0x4069bb
  4069dd:	jge    0x4069cf
  4069df:	mov    esp,0xc428e958
  4069e4:	push   ss
  4069e5:	das    
  4069e6:	aas    
  4069e7:	sahf   
  4069e8:	xchg   esi,eax
  4069e9:	inc    eax
  4069ea:	mov    gs,WORD PTR [edi+0x6010c182]
  4069f0:	mov    bh,0xfe
  4069f2:	scas   eax,DWORD PTR es:[edi]
  4069f3:	mov    ecx,0x42effd52
  4069f8:	push   edx
  4069f9:	pop    edi
  4069fa:	sbb    eax,0x8cb3dba4
  4069ff:	mov    esi,0x740c24f0
  406a04:	aam    0x5
  406a06:	pop    edi
  406a07:	leave  
  406a08:	xchg   ecx,eax
  406a09:	hlt    
  406a0a:	or     al,0x0
  406a0c:	retf   
  406a0d:	dec    esp
  406a0e:	jmp    0x1a82:0x50982b0f
  406a15:	ins    DWORD PTR es:[edi],dx
  406a16:	stc    
  406a17:	popa   
  406a18:	nop
  406a19:	push   ecx
  406a1a:	icebp  
  406a1b:	adc    eax,0x866d12de
  406a20:	mov    edx,0xcfbdb112
  406a25:	mov    esi,0xd6cdb80
  406a2a:	adc    eax,0xdd96470d
  406a2f:	(bad)  
  406a30:	enter  0x13a6,0xe4
  406a34:	xor    edx,DWORD PTR [eax-0x78]
  406a37:	adc    ebp,DWORD PTR [ebx-0x2ce49bca]
  406a3d:	les    ebx,FWORD PTR [edi]
  406a3f:	lods   al,BYTE PTR ds:[esi]
  406a40:	mov    al,0x38
  406a42:	and    eax,0x34ac8af6
  406a47:	dec    eax
  406a48:	lock push ss
  406a4a:	mul    eax
  406a4c:	jbe    0x406a4f
  406a4e:	cdq    
  406a4f:	or     BYTE PTR [ecx+0x4175b2a1],cl
  406a55:	sti    
  406a56:	dec    eax
  406a57:	popa   
  406a58:	xlat   BYTE PTR ds:[ebx]
  406a59:	cmc    
  406a5a:	fwait
  406a5b:	scas   eax,DWORD PTR es:[edi]
  406a5c:	enter  0xb0e6,0xe2
  406a60:	out    dx,eax
  406a61:	mov    eax,0x25d0ecf1
  406a66:	fisub  DWORD PTR [edi+0x1eabbfab]
  406a6c:	xchg   ebp,eax
  406a6d:	ficom  WORD PTR [ebx-0x10]
  406a70:	jo     0x406a6f
  406a72:	mov    ds:0xce69550,eax
  406a77:	inc    edx
  406a78:	push   ss
  406a79:	cs cld 
  406a7b:	adc    ah,dh
  406a7d:	jmp    0xe2716236
  406a82:	mov    ebx,0x299b4dfb
  406a87:	adc    al,0x2f
  406a89:	ss aam 0xa0
  406a8c:	lahf   
  406a8d:	(bad)  
  406a8e:	jae    0x406aad
  406a90:	jl     0x406afc
  406a92:	imul   ebx,esp,0x4040b9dd
  406a98:	sar    DWORD PTR [ecx-0x3a3f9ac4],cl
  406a9e:	clc    
  406a9f:	push   0x96d644d
  406aa4:	jp     0x406b10
  406aa6:	out    0x1e,al
  406aa8:	lds    ecx,FWORD PTR [eax+0x71]
  406aab:	pushf  
  406aac:	aaa    
  406aad:	sbb    eax,0x503e4a55
  406ab2:	loop   0x406b19
  406ab4:	cmp    BYTE PTR [edi-0x69],cl
  406ab7:	cmp    dl,ch
  406ab9:	jae    0x406a3f
  406abb:	pop    ds
  406abc:	adc    BYTE PTR [edx+0x4630ebd9],ch
  406ac2:	rcl    DWORD PTR [ebx+0x193d80f7],1
  406ac8:	xor    esp,eax
  406aca:	rol    BYTE PTR [edx+0x1f6219ed],cl
  406ad0:	dec    esi
  406ad1:	cmp    eax,ebx
  406ad3:	xchg   DWORD PTR [edi],ebx
  406ad5:	adc    edx,DWORD PTR [ebx+edx*4]
  406ad8:	jmp    0x406ac5
  406ada:	xor    eax,0x1790fc74
  406adf:	test   eax,0x3241b22f
  406ae4:	test   eax,0x4a6a9cfc
  406ae9:	push   ds
  406aea:	enter  0x6476,0x55
  406aee:	push   esp
  406aef:	cmp    ah,bh
  406af1:	and    DWORD PTR ds:0x59073f1d,ecx
  406af7:	push   ebp
  406af8:	out    0x9e,al
  406afa:	pop    ecx
  406afb:	jnp    0x406a9f
  406afd:	cli    
  406afe:	mov    cs,WORD PTR [eax+ebx*4+0x3e]
  406b02:	lea    edx,[edi-0x3529113e]
  406b08:	mov    ah,0x99
  406b0a:	mov    ebp,0x2e8a60c8
  406b0f:	cmp    BYTE PTR [eax-0x3eb65987],cl
  406b15:	iret   
  406b16:	add    dh,dl
  406b18:	push   ecx
  406b19:	dec    edx
  406b1a:	(bad)  
  406b1b:	neg    DWORD PTR [esi]
  406b1d:	nop
  406b1e:	iret   
  406b1f:	mov    bh,0xe0
  406b21:	ins    DWORD PTR es:[edi],dx
  406b22:	ret    0x7910
  406b25:	and    esi,DWORD PTR [ebx+ebp*1+0x666daebf]
  406b2c:	das    
  406b2d:	push   cs
  406b2e:	xchg   esi,eax
  406b2f:	cmp    DWORD PTR [eax+0x7f],0x3f
  406b33:	pop    es
  406b34:	cs js  0x406b1d
  406b37:	pop    ss
  406b38:	lock fcom QWORD PTR [edi]
  406b3b:	dec    edi
  406b3c:	mov    ds,WORD PTR [esi+0x163a1393]
  406b42:	stc    
  406b43:	inc    BYTE PTR [edi-0x4d]
  406b46:	push   edi
  406b47:	cmp    BYTE PTR [ebp+0x769cc6ed],ch
  406b4d:	sub    ebp,DWORD PTR [edx-0x3c357ed3]
  406b53:	test   al,0xa2
  406b55:	jno    0x406b51
  406b57:	stos   DWORD PTR es:[edi],eax
  406b58:	adc    bh,bh
  406b5a:	in     eax,dx
  406b5b:	scas   eax,DWORD PTR es:[edi]
  406b5c:	pushf  
  406b5d:	push   ss
  406b5e:	dec    ebp
  406b5f:	(bad)  
  406b60:	fs ds iret 
  406b63:	xchg   ebx,eax
  406b64:	inc    esp
  406b65:	sar    ah,cl
  406b67:	clc    
  406b68:	cdq    
  406b69:	mov    eax,ds:0xd783868d
  406b6e:	ror    ebp,0x8c
  406b71:	ja     0x406b48
  406b73:	in     al,dx
  406b74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b75:	ins    DWORD PTR es:[edi],dx
  406b76:	push   cs
  406b77:	sbb    edi,esp
  406b79:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b7c:	xor    eax,0x377dc382
  406b81:	cmp    ah,BYTE PTR [ecx+0x23638162]
  406b87:	call   0x1a48:0x673830a0
  406b8e:	xchg   esi,eax
  406b8f:	sub    bl,BYTE PTR [eax+0x77]
  406b92:	inc    eax
  406b93:	and    BYTE PTR [esi-0x6d],ch
  406b96:	jp     0x406c08
  406b98:	and    esp,DWORD PTR [ecx]
  406b9a:	jns    0x406bec
  406b9c:	rol    BYTE PTR [edi],0x14
  406b9f:	jb     0x406b8d
  406ba1:	(bad)  
  406ba2:	(bad)  
  406ba3:	sub    eax,0x37ed4804
  406ba8:	int    0xf3
  406baa:	mov    ecx,0xb80ae41
  406baf:	pop    ds
  406bb0:	pop    esi
  406bb1:	clc    
  406bb2:	stos   DWORD PTR es:[edi],eax
  406bb3:	xchg   ebp,eax
  406bb4:	ins    DWORD PTR es:[edi],dx
  406bb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bb6:	xchg   bl,al
  406bb8:	test   al,0xff
  406bba:	in     al,0xa6
  406bbc:	inc    edx
  406bbd:	sti    
  406bbe:	lea    esi,[edi-0x60]
  406bc1:	jbe    0x406b70
  406bc3:	pop    ebp
  406bc4:	fild   QWORD PTR [edx]
  406bc6:	pop    ecx
  406bc7:	pop    edx
  406bc8:	lods   al,BYTE PTR ds:[esi]
  406bc9:	aaa    
  406bca:	imul   esp,DWORD PTR [esi],0x9ef71694
  406bd0:	xchg   ebx,eax
  406bd1:	mov    ah,0xdd
  406bd3:	cmp    al,0x3e
  406bd5:	cmc    
  406bd6:	and    eax,0x6806dc0
  406bdb:	ficom  WORD PTR [ebx+eax*2]
  406bde:	adc    edx,DWORD PTR [esp+eiz*2]
  406be1:	sub    BYTE PTR [edi+esi*1],al
  406be4:	dec    edi
  406be5:	adc    bl,BYTE PTR [edi]
  406be7:	or     BYTE PTR [ebx+0x18],cl
  406bea:	mov    esi,DWORD PTR [ebx-0x3fb7cb2b]
  406bf0:	cmp    ch,dl
  406bf2:	add    eax,0xd1deaa12
  406bf7:	jmp    FWORD PTR [edx]
  406bf9:	test   DWORD PTR [edi+0x63f1202f],ebp
  406bff:	shl    dl,cl
  406c01:	clc    
  406c02:	icebp  
  406c03:	mov    esi,DWORD PTR [edi]
  406c05:	push   0x94b138b4
  406c0a:	les    esi,FWORD PTR [esi-0x38]
  406c0d:	popf   
  406c0e:	push   ecx
  406c0f:	clc    
  406c10:	idiv   BYTE PTR [edi+eiz*8-0x7a95a2e2]
  406c17:	xchg   edx,eax
  406c18:	hlt    
  406c19:	dec    edx
  406c1a:	dec    ecx
  406c1b:	bound  edi,QWORD PTR [edx-0x4d13f203]
  406c21:	lods   eax,DWORD PTR ds:[esi]
  406c22:	dec    esp
  406c23:	sbb    bh,BYTE PTR [ebp+0x77d8407e]
  406c29:	xor    BYTE PTR [ebx+0x536aecab],0x35
  406c30:	frstor [ecx-0x1092f1b4]
  406c36:	dec    ebp
  406c37:	scas   eax,DWORD PTR es:[edi]
  406c38:	jns    0x406c07
  406c3a:	int3   
  406c3b:	rcl    DWORD PTR [edx+eiz*4],cl
  406c3e:	pop    ds
  406c3f:	ss cld 
  406c41:	jbe    0x406bc9
  406c43:	xor    cl,bl
  406c45:	popa   
  406c46:	rcr    esp,0x9b
  406c49:	xor    esp,ebx
  406c4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c4c:	mov    bl,0x19
  406c4e:	pusha  
  406c4f:	and    DWORD PTR [esi-0x61],ebp
  406c52:	mov    ah,0xa6
  406c54:	outs   dx,BYTE PTR ds:[esi]
  406c55:	shl    DWORD PTR [ebx+ebp*8],cl
  406c58:	push   eax
  406c59:	xor    ecx,DWORD PTR [esi-0x6be40201]
  406c5f:	sbb    DWORD PTR [edx],ebx
  406c61:	pop    es
  406c62:	mov    cl,0x1e
  406c64:	in     eax,dx
  406c65:	mov    ch,0x84
  406c67:	pushf  
  406c68:	in     eax,0xc3
  406c6a:	das    
  406c6b:	or     BYTE PTR [esi+0x451d8445],dl
  406c71:	ror    DWORD PTR [edi+edx*8+0x6d07e050],1
  406c78:	out    dx,al
  406c79:	jmp    0x7ca1ee70
  406c7e:	add    al,0xe1
  406c80:	popf   
  406c81:	int    0xcf
  406c83:	pop    es
  406c84:	addr16 mov eax,ds:0x2f6e
  406c88:	fdivr  st,st(4)
  406c8a:	stc    
  406c8b:	fistp  WORD PTR [edx+0xa8ef458]
  406c91:	adc    eax,0x6b35977b
  406c96:	xor    esp,DWORD PTR [edx]
  406c98:	push   0xffffffb0
  406c9a:	cmp    DWORD PTR es:[ebx+edi*4],esi
  406c9e:	or     eax,0xf33e0d31
  406ca3:	sub    BYTE PTR [esi],cl
  406ca5:	add    BYTE PTR [edx],ah
  406ca7:	fisttp WORD PTR [esp+ebx*8-0x2252b174]
  406cae:	(bad)  
  406caf:	fldcw  WORD PTR [ebx]
  406cb1:	rcl    BYTE PTR [ecx],cl
  406cb3:	jp     0x406cc5
  406cb5:	adc    eax,0xb27349b9
  406cba:	mov    DWORD PTR [ebx+0x6f],ebp
  406cbd:	xor    dl,BYTE PTR [eax]
  406cbf:	fnstsw WORD PTR [edx+0x58]
  406cc2:	lods   al,BYTE PTR cs:[esi]
  406cc4:	mov    es:0x83fbc979,al
  406cca:	in     al,0xc1
  406ccc:	(bad)  
  406ccd:	mov    eax,ds:0x475d38ae
  406cd2:	mov    dh,0xc6
  406cd4:	repz pop edx
  406cd6:	jnp    0x406cc8
  406cd8:	call   0xedc3:0xe03c3244
  406cdf:	inc    ebp
  406ce0:	dec    edi
  406ce1:	sti    
  406ce2:	mov    WORD PTR [esi-0x51d723d],gs
  406ce8:	push   edx
  406ce9:	cmp    al,0x6d
  406ceb:	inc    eax
  406cec:	mov    esi,0xbf0753bc
  406cf1:	outs   dx,BYTE PTR ds:[esi]
  406cf2:	push   edx
  406cf3:	cmp    eax,DWORD PTR [ebp-0x15d9f869]
  406cf9:	or     edx,ebx
  406cfb:	cmc    
  406cfc:	inc    eax
  406cfd:	jne    0x406d29
  406cff:	add    edi,0x3c7c2abd
  406d05:	sbb    dl,0x98
  406d08:	mov    ds,WORD PTR [ebp+0x1720fc68]
  406d0e:	push   DWORD PTR ds:0xac51fa47
  406d14:	arpl   sp,di
  406d16:	or     eax,0x6a9b94d9
  406d1b:	repz sub edx,ebp
  406d1e:	popf   
  406d1f:	test   DWORD PTR [edi],ebp
  406d21:	or     ebx,ecx
  406d23:	shl    edx,cl
  406d25:	imul   edx,DWORD PTR [esi],0x9f850ace
  406d2b:	and    DWORD PTR [ebp+0x3688af15],ecx
  406d31:	push   edi
  406d32:	test   ch,cl
  406d34:	push   es
  406d35:	and    DWORD PTR cs:[edx+0x796ab237],ebp
  406d3c:	scas   al,BYTE PTR es:[edi]
  406d3d:	pop    eax
  406d3e:	jae    0x406ceb
  406d40:	pop    edx
  406d41:	pop    ecx
  406d42:	fisttp WORD PTR [ebp-0x26]
  406d45:	in     al,dx
  406d46:	cmp    DWORD PTR [edi+0x76e6b4dd],esp
  406d4c:	or     DWORD PTR [ebx+edi*1],0x55311212
  406d53:	adc    eax,0xc8026068
  406d58:	xchg   ebx,eax
  406d59:	add    ebx,DWORD PTR [ebp+eax*8+0x19422852]
  406d60:	dec    edi
  406d61:	int3   
  406d62:	mov    cl,0x2a
  406d64:	inc    ecx
  406d65:	int3   
  406d66:	jecxz  0x406d5a
  406d68:	inc    edi
  406d69:	lea    esp,[edi]
  406d6b:	jle    0x406d2a
  406d6d:	sahf   
  406d6e:	xor    al,0x92
  406d70:	shr    DWORD PTR [esi+eax*2-0x3e6808d],cl
  406d77:	and    edx,DWORD PTR [ebx]
  406d79:	mov    cl,0x1d
  406d7b:	enter  0xec2f,0x72
  406d7f:	adc    ch,bl
  406d81:	lods   eax,DWORD PTR ds:[esi]
  406d82:	cmp    BYTE PTR [bx-0x57],bl
  406d86:	pop    esi
  406d87:	pop    ds
  406d88:	and    BYTE PTR [edi+0x172ab42d],al
  406d8e:	hlt    
  406d8f:	dec    ebp
  406d90:	pusha  
  406d91:	outs   dx,BYTE PTR ds:[esi]
  406d92:	add    DWORD PTR es:[edx+0x7ce72952],0xffffffaa
  406d9a:	adc    eax,0x2e27b22
  406d9f:	repnz mov bh,0xe2
  406da2:	sbb    ebx,eax
  406da4:	adc    al,0x80
  406da6:	repz xchg ecx,eax
  406da8:	pop    esp
  406da9:	scas   eax,DWORD PTR es:[edi]
  406daa:	push   edx
  406dab:	pop    edx
  406dac:	xchg   edx,eax
  406dad:	pop    esi
  406dae:	int    0x45
  406db0:	retf   0xa200
  406db3:	data16 shr ch,1
  406db6:	loop   0x406d5c
  406db8:	mov    edi,0x77ad2c8c
  406dbd:	ret    0x251e
  406dc0:	and    dh,BYTE PTR [ecx]
  406dc2:	stos   BYTE PTR es:[edi],al
  406dc3:	xchg   ecx,eax
  406dc4:	jnp    0x406e32
  406dc6:	(bad)  
  406dc7:	fs js  0x406dc8
  406dca:	test   DWORD PTR [eiz*1+0x1d827c4f],esp
  406dd1:	xor    ah,BYTE PTR ds:0xa74ff3de
  406dd7:	push   ecx
  406dd8:	jnp    0x406df2
  406dda:	dec    edx
  406ddb:	out    0x32,al
  406ddd:	(bad)  
  406dde:	loope  0x406db3
  406de0:	je     0x406ddd
  406de2:	xchg   ecx,eax
  406de3:	loope  0x406e03
  406de5:	xchg   edi,edx
  406de7:	test   dh,cl
  406de9:	fst    st(6)
  406deb:	(bad)  
  406dee:	dec    edx
  406def:	mov    esi,0xeab3a88b
  406df4:	xchg   edx,eax
  406df5:	sbb    DWORD PTR [edi+edi*8],esp
  406df8:	or     al,bh
  406dfa:	push   edi
  406dfb:	jne    0x406dce
  406dfd:	cmp    edi,DWORD PTR [esi]
  406dff:	arpl   WORD PTR [esp+eiz*4],di
  406e02:	je     0x406e51
  406e04:	mov    esi,0x30716a81
  406e09:	pop    esp
  406e0a:	mov    bl,0xad
  406e0c:	neg    DWORD PTR [ebx]
  406e0e:	js     0x406e63
  406e10:	xchg   esi,eax
  406e11:	test   eax,0x85f73e10
  406e16:	js     0x406e77
  406e18:	xchg   edx,eax
  406e19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e1a:	sub    cl,BYTE PTR [eax-0x6d2db1d0]
  406e20:	add    eax,0x251b3beb
  406e25:	fwait
  406e26:	rcr    BYTE PTR [esi-0x2df30458],1
  406e2c:	or     DWORD PTR [eax+eax*1+0x2ee11da4],ecx
  406e33:	int    0x3d
  406e35:	int3   
  406e36:	outs   dx,BYTE PTR ds:[esi]
  406e37:	jmp    0x9980fb08
  406e3c:	jge    0x406dce
  406e3e:	test   esp,eax
  406e40:	jecxz  0x406e78
  406e42:	lea    esi,[ebp-0x6f]
  406e45:	bound  ebp,QWORD PTR [eax-0x3a90fc01]
  406e4b:	les    ecx,FWORD PTR [ecx-0x41]
  406e4e:	xchg   edx,eax
  406e4f:	out    dx,al
  406e50:	gs int3 
  406e52:	cwde   
  406e53:	aaa    
  406e54:	lds    ebp,FWORD PTR [eax]
  406e56:	mov    BYTE PTR fs:[ebx+0x3d],bh
  406e5a:	xor    al,0x1b
  406e5c:	adc    BYTE PTR [edx-0x7ff14fd8],0xde
  406e63:	pop    esp
  406e64:	pop    ds
  406e65:	xchg   esi,eax
  406e66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e67:	aaa    
  406e68:	and    eax,0x14a9d7a4
  406e6d:	aaa    
  406e6e:	mov    DWORD PTR [edi-0x1b9c721a],0x37dbf8c4
  406e78:	and    al,0x63
  406e7a:	retf   0x86d0
  406e7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e7e:	fdivr  DWORD PTR [eax]
  406e80:	push   ds
  406e81:	int3   
  406e82:	or     DWORD PTR [ebx],0xffffffef
  406e85:	mov    DWORD PTR [ebp+0x37],ecx
  406e88:	mov    esp,0xc352b14
  406e8d:	iret   
  406e8e:	iret   
  406e8f:	push   0xfffffffe
  406e91:	xor    esp,ebx
  406e93:	cmp    eax,0x6dcaa7d5
  406e98:	push   ecx
  406e99:	loop   0x406e24
  406e9b:	mov    ds,WORD PTR [ecx+0x2e]
  406e9e:	in     al,0xc5
  406ea0:	mov    al,0x2
  406ea2:	xor    bh,0xb4
  406ea5:	call   0xa11:0xeec388c8
  406eac:	ret    0x1a7a
  406eaf:	sub    al,0x74
  406eb1:	lods   al,BYTE PTR ds:[esi]
  406eb2:	por    mm3,QWORD PTR [ebx]
  406eb5:	int    0xb7
  406eb7:	mov    bl,0xc7
  406eb9:	retf   
  406eba:	xchg   DWORD PTR [eax-0x58d96791],ebp
  406ec0:	and    DWORD PTR [ebx+0x6bd0caf1],ecx
  406ec6:	add    dh,BYTE PTR [edx]
  406ec8:	jnp    0x406f40
  406eca:	lods   al,BYTE PTR ds:[esi]
  406ecb:	stos   BYTE PTR es:[edi],al
  406ecc:	test   eax,0x2aa9b6d2
  406ed1:	inc    ebp
  406ed2:	cld    
  406ed3:	std    
  406ed4:	push   eax
  406ed5:	xchg   edi,eax
  406ed6:	out    0x2e,eax
  406ed8:	push   esi
  406ed9:	dec    edx
  406eda:	clc    
  406edb:	push   ebx
  406edc:	dec    ebp
  406edd:	aam    0xcd
  406edf:	enter  0x5516,0x53
  406ee3:	arpl   WORD PTR [edx],di
  406ee5:	outs   dx,BYTE PTR ds:[esi]
  406ee6:	or     dl,BYTE PTR [eax+0x34]
  406ee9:	fistp  QWORD PTR [ebp+edi*2+0xc]
  406eed:	and    al,BYTE PTR [edi-0x40]
  406ef0:	jle    0x406f00
  406ef2:	inc    esp
  406ef3:	xor    eax,0xafe013b7
  406ef8:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  406efa:	inc    ecx
  406efb:	mov    ebp,0x40d37501
  406f00:	mov    DWORD PTR [edx-0x4],ebx
  406f03:	outs   dx,BYTE PTR ds:[esi]
  406f05:	scas   eax,DWORD PTR es:[edi]
  406f06:	dec    ebx
  406f07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f08:	cld    
  406f09:	xchg   ecx,eax
  406f0a:	or     cl,BYTE PTR [edi-0x55e0e1cc]
  406f10:	sub    eax,0x774bf416
  406f15:	es xchg ecx,eax
  406f17:	into   
  406f18:	ret    
  406f19:	push   0x87507e9a
  406f1e:	pop    ebp
  406f1f:	xor    al,cl
  406f21:	fidiv  DWORD PTR [ecx+0x3a]
  406f24:	mov    cl,0x62
  406f26:	fistp  DWORD PTR [ebx+0x11d4044a]
  406f2c:	mov    dl,0x60
  406f2e:	push   cs
  406f2f:	and    eax,0xe846d4c0
  406f34:	out    dx,al
  406f35:	test   cl,ah
  406f37:	pop    esp
  406f39:	cmp    DWORD PTR [ebp-0x7c0f1994],edi
  406f3f:	fwait
  406f40:	arpl   WORD PTR [ebx],di
  406f42:	add    ah,cl
  406f44:	sub    eax,0x1ca1526b
  406f49:	mov    eax,ds:0x52cb676c
  406f4e:	rcl    BYTE PTR [edi-0x13ed9197],1
  406f54:	mov    dh,0x2b
  406f56:	lods   al,BYTE PTR ds:[esi]
  406f57:	mov    bh,0x94
  406f59:	fwait
  406f5a:	and    edx,edx
  406f5c:	add    bl,cl
  406f5e:	add    ebx,DWORD PTR [ebp-0x21d3ed19]
  406f64:	mov    al,BYTE PTR [ebx-0x72]
  406f67:	jl     0x406f4c
  406f69:	sbb    BYTE PTR [edx+0xb0dfb30],dh
  406f6f:	jge    0x406fa1
  406f71:	rol    BYTE PTR [ebp+0x5f],1
  406f74:	pusha  
  406f75:	mov    ds:0x62ae6191,al
  406f7a:	cmp    eax,0x63
  406f7d:	mov    al,0xba
  406f7f:	cdq    
  406f80:	push   cs
  406f81:	js     0x406fe9
  406f83:	push   ds
  406f84:	clc    
  406f85:	leave  
  406f86:	jp     0x406fa2
  406f88:	sahf   
  406f89:	cli    
  406f8a:	jae    0x406fcb
  406f8c:	inc    ebx
  406f8d:	outs   dx,DWORD PTR ds:[esi]
  406f8e:	es stos BYTE PTR es:[edi],al
  406f90:	cmp    BYTE PTR [ebx+0x22],0x3f
  406f94:	pop    ebx
  406f95:	daa    
  406f96:	dec    eax
  406f97:	sti    
  406f98:	daa    
  406f99:	or     BYTE PTR [edi],bl
  406f9b:	imul   BYTE PTR [ecx+0x3e]
  406f9e:	dec    ebp
  406f9f:	pop    esp
  406fa0:	cli    
  406fa1:	repz ret 
  406fa3:	adc    BYTE PTR [esi+0x5b7b91c0],bh
  406fa9:	lods   al,BYTE PTR ds:[esi]
  406faa:	inc    edx
  406fab:	inc    edi
  406fac:	adc    eax,0x62604ae2
  406fb1:	jecxz  0x406fcf
  406fb3:	adc    bl,bh
  406fb5:	xor    ecx,DWORD PTR [edx-0x1f]
  406fb8:	inc    esp
  406fb9:	mov    bh,0x7e
  406fbb:	arpl   sp,dx
  406fbd:	sbb    eax,0xf7f60930
  406fc2:	int    0x54
  406fc4:	call   esi
  406fc6:	rcr    DWORD PTR [ebx],0x2
  406fc9:	out    0x55,al
  406fcb:	mov    al,0x34
  406fcd:	pop    ds
  406fce:	mov    ah,0x36
  406fd0:	xor    al,0xf7
  406fd2:	popa   
  406fd3:	dec    eax
  406fd4:	or     BYTE PTR [edx-0x28],al
  406fd7:	ret    
  406fd8:	pop    esi
  406fd9:	(bad)  
  406fda:	cmc    
  406fdb:	std    
  406fdc:	inc    eax
  406fdd:	in     al,0xb5
  406fdf:	cmp    ecx,ebp
  406fe1:	xor    dh,0xa0
  406fe4:	xor    al,0x53
  406fe6:	aaa    
  406fe7:	xor    cl,0x7a
  406fea:	dec    ebx
  406feb:	sub    DWORD PTR [esp+edi*4-0x679b2f6f],0x2fba5eea
  406ff6:	fisub  WORD PTR [ecx+0x63]
  406ff9:	jo     0x406fed
  406ffb:	imul   ebp,DWORD PTR [ecx-0x17cfacbf],0x9b86db2a
  407005:	dec    esi
  407006:	lea    esp,[ebp+0x374ede6e]
  40700c:	out    0x7f,al
  40700e:	mov    al,0x8e
  407010:	add    BYTE PTR [edx],ah
  407012:	xor    esi,ebp
  407014:	fdivr  DWORD PTR [eax]
  407016:	sbb    al,0x61
  407018:	leave  
  407019:	xor    al,0x39
  40701b:	inc    ecx
  40701c:	push   ebx
  40701d:	sbb    al,0xdc
  40701f:	mov    cl,0x70
  407021:	lds    esp,FWORD PTR [ecx]
  407023:	dec    esp
  407024:	and    al,0x8f
  407026:	das    
  407027:	pop    esi
  407028:	(bad)  
  407029:	(bad)  
  40702a:	xchg   esi,eax
  40702b:	call   0x987a:0xee81e8f6
  407032:	mov    eax,ds:0x705e6963
  407037:	lods   al,BYTE PTR ds:[esi]
  407038:	(bad)  
  407039:	mov    ds:0x9e82a9f7,al
  40703e:	aaa    
  40703f:	or     edi,DWORD PTR [ebx-0x2e]
  407042:	push   edx
  407043:	lea    ebp,[ecx+0x30297598]
  407049:	jg     0x406fd4
  40704b:	add    al,0x85
  40704d:	mov    al,ds:0x5f62ce0b
  407052:	neg    DWORD PTR es:[ebp-0x3fde8579]
  407059:	fld    DWORD PTR ds:0x579e947a
  40705f:	jg     0x40709e
  407061:	call   0xe50e1d58
  407066:	leave  
  407067:	dec    edi
  407068:	dec    eax
  407069:	mov    ecx,0x4ed578f0
  40706e:	cmp    eax,0x1f8b97d8
  407073:	xchg   al,ch
  407075:	fldenv [edi+esi*4]
  407078:	jg     0x407001
  40707a:	xchg   ebx,eax
  40707b:	or     ecx,DWORD PTR [edx+edi*8]
  40707e:	xor    al,0xc7
  407080:	xchg   esi,eax
  407081:	adc    bh,bl
  407083:	or     cl,BYTE PTR [ecx]
  407085:	es dec ecx
  407087:	mov    ecx,0x66b2e57d
  40708c:	out    dx,al
  40708d:	rol    DWORD PTR [ebp+0x5],1
  407090:	iret   
  407091:	or     DWORD PTR [edx+edx*4-0x3286ea5e],ecx
  407098:	(bad)  
  407099:	mov    esp,0xeafc8cd9
  40709e:	nop
  40709f:	xchg   ebp,eax
  4070a0:	dec    ebx
  4070a1:	or     esp,DWORD PTR [ecx+0x1cc2dcd6]
  4070a7:	shl    bl,cl
  4070a9:	data16 mov bl,0x5a
  4070ac:	popf   
  4070ad:	test   DWORD PTR [bp+di-0x60c2],ebx
  4070b2:	popf   
  4070b3:	std    
  4070b4:	push   esi
  4070b5:	(bad)  
  4070b6:	pop    ds
  4070b7:	add    eax,0xc21c6abf
  4070bc:	js     0x407059
  4070be:	out    dx,eax
  4070bf:	int    0x66
  4070c1:	daa    
  4070c2:	inc    ecx
  4070c3:	jne    0x4070c8
  4070c5:	clc    
  4070c6:	dec    edi
  4070c7:	popa   
  4070c8:	xchg   esi,eax
  4070c9:	call   0xc5a7e11f
  4070ce:	mov    cl,0x94
  4070d0:	bswap  esp
  4070d2:	scas   eax,DWORD PTR es:[edi]
  4070d3:	xchg   ebp,eax
  4070d4:	aaa    
  4070d5:	or     edi,ebx
  4070d7:	xor    ah,BYTE PTR [esp+edx*4]
  4070da:	paddusw mm5,QWORD PTR [esi+0x1b]
  4070de:	out    dx,eax
  4070df:	mov    dh,0xe1
  4070e1:	inc    ebx
  4070e2:	cs jbe 0x40710d
  4070e5:	(bad)  
  4070e8:	and    al,0xcc
  4070ea:	es dec edx
  4070ec:	xor    ah,BYTE PTR [eax]
  4070ee:	pop    edx
  4070ef:	mov    ebp,0x4b09746a
  4070f4:	add    BYTE PTR [edx+0x10],0x97
  4070f8:	cmp    BYTE PTR [ecx],ch
  4070fa:	cmp    BYTE PTR [ecx-0x49],dh
  4070fd:	ret    
  4070fe:	add    eax,0xc257d17a
  407103:	outs   dx,BYTE PTR ds:[esi]
  407104:	and    BYTE PTR [edx+0x6e],bl
  407107:	shl    BYTE PTR [edi-0x1d],1
  40710a:	pop    esi
  40710b:	xor    eax,0x8890e396
  407110:	sbb    al,0x52
  407112:	fwait
  407113:	push   esi
  407114:	ins    DWORD PTR es:[edi],dx
  407115:	sbb    edx,DWORD PTR [edx-0x77869de3]
  40711b:	test   DWORD PTR [esp+eax*8+0x72],ebx
  40711f:	inc    esi
  407120:	inc    ecx
  407121:	pop    esp
  407122:	and    BYTE PTR [ecx+ebx*4-0x303688fa],bh
  407129:	sti    
  40712a:	mov    ebp,ebx
  40712c:	ds jne 0x40713a
  40712f:	and    ebp,DWORD PTR [edx-0x31]
  407132:	jmp    0x9b63:0xf7e263da
  407139:	xchg   DWORD PTR [edi],ecx
  40713b:	or     BYTE PTR [edi],bl
  40713d:	ja     0x4071a4
  40713f:	cwde   
  407140:	out    dx,al
  407141:	pop    ebp
  407142:	sahf   
  407143:	jmp    0x4070f7
  407145:	(bad)  
  407146:	jno    0x407187
  407148:	xlat   BYTE PTR ds:[ebx]
  407149:	loop   0x4070d2
  40714b:	adc    bh,ch
  40714d:	aam    0x2f
  40714f:	adc    eax,0x25ade42a
  407154:	mov    ds:0xcea62d3a,al
  407159:	fist   WORD PTR [eax]
  40715b:	lods   al,BYTE PTR ds:[esi]
  40715c:	popf   
  40715d:	ret    0x648
  407160:	scas   eax,DWORD PTR es:[edi]
  407161:	xor    al,0xc
  407163:	stc    
  407164:	test   BYTE PTR [esi-0x7438ca51],al
  40716a:	adc    cl,BYTE PTR [ebx+0x20392cb0]
  407170:	inc    esp
  407171:	sub    eax,0x2db8e2dd
  407176:	enter  0xa9e3,0xe4
  40717a:	leave  
  40717b:	loope  0x407141
  40717d:	das    
  40717e:	jp     0x407174
  407180:	mov    ecx,0xe383bc82
  407185:	mov    esp,0x1a886340
  40718a:	mov    BYTE PTR [eax],ch
  40718c:	ds sahf 
  40718e:	jle    0x40711d
  407190:	inc    eax
  407191:	out    dx,al
  407192:	lock push ebx
  407194:	fwait
  407195:	jbe    0x40716d
  407197:	dec    eax
  407198:	mov    es,WORD PTR [ebx-0x219ca8af]
  40719e:	aad    0x91
  4071a0:	pop    edi
  4071a1:	ins    BYTE PTR es:[edi],dx
  4071a2:	push   esp
  4071a3:	mov    ah,0x5f
  4071a5:	ds repz fcomp st(3)
  4071a9:	bnd je 0x407139
  4071ac:	hlt    
  4071ad:	pop    eax
  4071ae:	pop    ss
  4071af:	jb     0x40722f
  4071b1:	out    dx,eax
  4071b2:	ins    DWORD PTR es:[edi],dx
  4071b3:	sahf   
  4071b4:	js     0x4071b5
  4071b6:	movsx  esi,si
  4071b9:	inc    eax
  4071ba:	test   eax,0x5feb6131
  4071bf:	push   edi
  4071c0:	and    BYTE PTR [edi+0x3b],ah
  4071c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071c4:	or     bl,al
  4071c6:	add    al,0x6d
  4071c8:	lock out dx,al
  4071ca:	xor    eax,0x7e1b4877
  4071cf:	mov    cl,0x15
  4071d1:	mov    edi,0x104da608
  4071d6:	fwait
  4071d7:	mov    al,0x92
  4071d9:	dec    edx
  4071da:	adc    dh,BYTE PTR [ebx]
  4071dc:	test   DWORD PTR [ecx],ebp
  4071de:	lods   al,BYTE PTR ds:[esi]
  4071df:	jecxz  0x4071b3
  4071e1:	fdiv   DWORD PTR [ebx-0x3088de1e]
  4071e7:	cs and al,0x6d
  4071ea:	push   cs
  4071eb:	pop    edi
  4071ec:	fdivrp st(6),st
  4071ee:	push   0x258c8847
  4071f3:	pusha  
  4071f4:	dec    edi
  4071f5:	add    dh,BYTE PTR [ebx+0x7d]
  4071f8:	xchg   ebp,eax
  4071f9:	and    ecx,DWORD PTR [esi+0x22]
  4071fc:	pusha  
  4071fd:	push   0xd
  4071ff:	dec    ecx
  407200:	fild   DWORD PTR [ecx]
  407202:	adc    edi,ebp
  407204:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407205:	(bad)  
  407206:	out    dx,eax
  407207:	pop    edi
  407208:	inc    esi
  407209:	fistp  WORD PTR [eax-0x18]
  40720c:	stos   BYTE PTR es:[edi],al
  40720d:	out    dx,eax
  40720e:	dec    esp
  40720f:	or     DWORD PTR [ecx+0x61],0x62cf451e
  407216:	adc    bh,BYTE PTR [eax]
  407218:	mov    DWORD PTR [edi+0x5d],edx
  40721b:	cld    
  40721c:	mov    dh,0x4d
  40721e:	cli    
  40721f:	inc    edi
  407220:	add    al,0x17
  407222:	or     BYTE PTR [edx],al
  407224:	in     eax,0xb2
  407226:	loop   0x407235
  407228:	imul   ebx,ecx,0x2144dadb
  40722e:	sbb    BYTE PTR [ecx-0x15626a2e],0xe6
  407235:	add    eax,0x50ef87d5
  40723a:	jmp    0x1f363745
  40723f:	inc    edx
  407240:	das    
  407241:	mov    al,ds:0xb7633117
  407246:	call   0xa643:0x1c5fe7b
  40724d:	add    al,0x4b
  40724f:	xor    DWORD PTR ds:0x85dfa6aa,0x4d
  407256:	and    al,0x3
  407258:	xchg   esi,eax
  407259:	mov    esp,?
  40725b:	mov    dh,0x8e
  40725d:	lods   eax,DWORD PTR ds:[esi]
  40725e:	sub    cl,BYTE PTR [esi+ebx*2]
  407261:	test   DWORD PTR [ebx+0x2df84277],ecx
  407267:	adc    DWORD PTR [ebp+0x7c98d11a],0x49
  40726e:	cmp    esi,ebp
  407270:	fdivrp st(6),st
  407272:	loope  0x4072da
  407274:	mov    cl,0xea
  407276:	sar    al,cl
  407278:	inc    edi
  407279:	push   cs
  40727a:	sbb    ch,BYTE PTR [ebx-0x5a]
  40727d:	mov    bh,0x9a
  40727f:	adc    edx,DWORD PTR [edx+eax*2+0x30860929]
  407286:	fcmovu st,st(3)
  407288:	into   
  407289:	mov    bl,0xf0
  40728b:	mov    ebx,0x9e8d974d
  407290:	add    eax,0x1fc14b3f
  407295:	test   eax,0x62e8b78c
  40729a:	or     eax,0x5709d2f1
  40729f:	and    cl,BYTE PTR [ebx+0x3d]
  4072a2:	fsubrp st(5),st
  4072a4:	lahf   
  4072a5:	xor    eax,0x494d37b
  4072aa:	call   0xac42:0x7be8dad3
  4072b1:	push   esp
  4072b2:	lods   eax,DWORD PTR ds:[esi]
  4072b3:	popf   
  4072b4:	pusha  
  4072b5:	div    ecx
  4072b7:	add    ebp,esi
  4072b9:	dec    ecx
  4072ba:	sbb    BYTE PTR [esi],al
  4072bc:	pusha  
  4072bd:	outs   dx,BYTE PTR ds:[esi]
  4072be:	jmp    0xa7b1336
  4072c3:	push   ebp
  4072c4:	inc    edx
  4072c5:	call   0x96b9:0x15ce5c75
  4072cc:	mov    esi,0xf1dbdbae
  4072d1:	loope  0x4072e3
  4072d3:	cmc    
  4072d4:	sar    ebp,cl
  4072d6:	ds cmp al,0x78
  4072d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072da:	fs repz pop edx
  4072dd:	adc    BYTE PTR [ebp-0x62],ch
  4072e0:	dec    eax
  4072e1:	or     edx,DWORD PTR [ebp+eax*4+0x4f0d849a]
  4072e8:	scas   eax,DWORD PTR es:[edi]
  4072e9:	retf   
  4072ea:	sbb    ecx,DWORD PTR [eax-0x43]
  4072ed:	jmp    0x37d2:0xc1b2d788
  4072f4:	mov    ds:0xe41be438,al
  4072f9:	shr    dl,1
  4072fb:	ja     0x40736c
  4072fd:	mov    dl,0xec
  4072ff:	inc    edi
  407300:	pusha  
  407301:	pusha  
  407302:	shr    ebp,1
  407304:	pop    esp
  407305:	cmc    
  407306:	fxam   
  407308:	mov    bl,0xb4
  40730a:	std    
  40730b:	cmc    
  40730c:	add    eax,0xc71f6b1d
  407311:	xlat   BYTE PTR ds:[ebx]
  407312:	cdq    
  407313:	push   ecx
  407314:	inc    DWORD PTR [edx+0x27669461]
  40731a:	mov    ecx,ecx
  40731c:	pop    ecx
  40731d:	scas   al,BYTE PTR es:[edi]
  40731e:	mov    cl,0xd8
  407320:	test   BYTE PTR [eax-0x79f239fb],bl
  407326:	in     al,0x2e
  407328:	jae    0x407352
  40732a:	mov    dl,0x61
  40732c:	xor    DWORD PTR [edx],ecx
  40732e:	jg     0x4072c7
  407330:	pusha  
  407331:	rcr    BYTE PTR [edx-0x7dc3f89f],cl
  407337:	dec    ebp
  407338:	push   ebx
  407339:	(bad)
  40733d:	cs popa 
  40733f:	push   ds
  407340:	sub    eax,0x8fbce559
  407345:	(bad)  
  407346:	popf   
  407347:	xlat   BYTE PTR ds:[ebx]
  407348:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407349:	mov    ds:0xfef4d6ed,eax
  40734e:	xchg   ebp,eax
  40734f:	pop    esi
  407350:	xlat   BYTE PTR ds:[ebx]
  407351:	cmp    al,0x3d
  407353:	pop    ebp
  407354:	addr16 retf 
  407356:	mov    cl,0x24
  407358:	ds scas al,BYTE PTR es:[edi]
  40735a:	test   DWORD PTR [esi-0x659ec449],eax
  407360:	mov    edx,0x66d3606b
  407365:	push   ebx
  407366:	ins    BYTE PTR es:[edi],dx
  407367:	cmp    DWORD PTR [ebp+0x2d597f83],ecx
  40736d:	outs   dx,DWORD PTR ds:[esi]
  40736e:	outs   dx,DWORD PTR ds:[esi]
  40736f:	sar    DWORD PTR [edx-0x4882b884],cl
  407375:	push   0x34923c35
  40737a:	sbb    ah,ah
  40737c:	mov    eax,ds:0x3b4c7d07
  407381:	jo     0x407335
  407383:	xor    BYTE PTR [eax-0x78d0428f],dl
  407389:	sbb    ebp,DWORD PTR [esp+ecx*2+0x31409c7a]
  407390:	out    dx,eax
  407391:	mov    DWORD PTR ds:0xf7ce05a3,ebp
  407397:	sub    BYTE PTR [eax+0x7d],ch
  40739a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40739b:	xor    esp,ecx
  40739d:	xor    edi,edi
  40739f:	mov    bh,ch
  4073a1:	iret   
  4073a2:	sub    DWORD PTR [ebx],ebx
  4073a4:	retf   0x9bc4
  4073a7:	adc    bl,BYTE PTR [ebx-0x4711cfe7]
  4073ad:	cmp    ecx,edi
  4073af:	(bad)  
  4073b0:	or     al,0x21
  4073b2:	sub    BYTE PTR [edi],bl
  4073b4:	fst    DWORD PTR [edi-0x22cdf78]
  4073ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073bb:	sub    eax,0x758987ed
  4073c0:	ins    DWORD PTR es:[edi],dx
  4073c1:	pop    ss
  4073c2:	xchg   esp,eax
  4073c3:	xchg   ebp,eax
  4073c4:	add    dl,BYTE PTR [ebx+eax*4]
  4073c7:	sub    DWORD PTR [esi],0xffffffec
  4073ca:	mov    al,ds:0x88d124af
  4073cf:	fcom   DWORD PTR [edi-0x258ccf85]
  4073d5:	xchg   ecx,eax
  4073d6:	mov    bh,0xfa
  4073d8:	mov    dl,0xaf
  4073db:	xor    BYTE PTR [edx],bl
  4073dd:	lods   al,BYTE PTR ds:[esi]
  4073de:	and    DWORD PTR [ecx+0x5c5e21a5],ecx
  4073e4:	pop    ebx
  4073e5:	lock pop ecx
  4073e7:	add    esi,DWORD PTR [edx]
  4073e9:	mov    ebx,0xf52a1b51
  4073ee:	adc    bl,cl
  4073f0:	inc    esi
  4073f1:	add    bh,BYTE PTR [ecx-0x59]
  4073f4:	(bad)  
  4073f5:	mov    esp,0xff964aef
  4073fa:	jbe    0x407393
  4073fc:	cmp    dh,BYTE PTR [edx-0x4636dc2c]
  407402:	dec    ecx
  407403:	lods   eax,DWORD PTR ds:[esi]
  407404:	sbb    al,0x80
  407406:	mov    BYTE PTR [eax+0x45],dl
  407409:	rcr    bh,0x60
  40740c:	push   0x7062eed9
  407411:	in     eax,0x87
  407413:	jmp    0x880511e3
  407418:	sbb    al,0xbe
  40741a:	call   0x1f12e5e3
  40741f:	jo     0x4073c1
  407421:	jp     0x407432
  407423:	stos   DWORD PTR es:[edi],eax
  407424:	test   DWORD PTR [edi],edi
  407426:	push   esi
  407427:	inc    esp
  407428:	(bad)
  40742b:	push   ebx
  40742c:	loope  0x407488
  40742e:	fild   QWORD PTR [edx]
  407430:	jo     0x4073d6
  407432:	mov    ebx,ebx
  407434:	mov    ah,0x8e
  407436:	es hlt 
  407438:	xor    ch,BYTE PTR [edi-0x3c1da116]
  40743e:	mov    esp,0x74a99c54
  407443:	(bad)  
  407444:	dec    esp
  407445:	xchg   DWORD PTR [ebx+0x13],esp
  407448:	int    0xca
  40744a:	pop    esi
  40744b:	inc    eax
  40744c:	sbb    eax,0x4b939a3b
  407451:	mov    ebx,0x6ec098ec
  407456:	das    
  407457:	lea    edi,[ebx]
  407459:	push   0xffffffc4
  40745b:	daa    
  40745c:	mov    ds:0x6a5d848b,al
  407461:	gs fs sub al,0x87
  407465:	push   ecx
  407466:	xor    BYTE PTR [ecx],dl
  407468:	in     eax,0x91
  40746a:	xor    cl,BYTE PTR [esi]
  40746c:	xchg   edi,eax
  40746e:	aaa    
  40746f:	popf   
  407470:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407471:	sti    
  407472:	pop    esp
  407473:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407474:	fdiv   QWORD PTR [eax]
  407476:	jge    0x407479
  407478:	fld    QWORD PTR [ebx-0x21]
  40747b:	std    
  40747c:	jmp    0x9f7c:0xec88311
  407483:	push   esp
  407484:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407485:	dec    eax
  407486:	mov    BYTE PTR [ebx-0x7b],al
  407489:	in     eax,0xd5
  40748b:	loop   0x4074cd
  40748d:	frstor [ebp+edx*8-0x5536c5ec]
  407494:	mov    edx,0x8a090b60
  407499:	jmp    DWORD PTR [edi+0x2c]
  40749c:	clc    
  40749d:	adc    DWORD PTR [eax+0x57],esp
  4074a0:	mul    edx
  4074a2:	pusha  
  4074a3:	fistp  QWORD PTR [ebp-0x2fe04bae]
  4074a9:	or     eax,0x62e634cb
  4074ae:	sahf   
  4074af:	lds    esp,FWORD PTR [edi]
  4074b1:	loope  0x40746e
  4074b3:	pop    ebx
  4074b4:	jae    0x4074a5
  4074b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074b7:	mov    edx,0x3b3f406e
  4074bc:	lods   al,BYTE PTR ds:[esi]
  4074bd:	push   0xffffffd1
  4074bf:	adc    eax,0xed6ac359
  4074c4:	arpl   WORD PTR [edi+0x44],di
  4074c7:	lods   al,BYTE PTR ds:[esi]
  4074c8:	mov    eax,ds:0xa907a096
  4074cd:	sub    DWORD PTR [ebx+eax*8-0x55],eax
  4074d1:	(bad)  
  4074d3:	(bad)  
  4074d4:	jp     0x4074e1
  4074d6:	lds    esi,FWORD PTR [esi+0x70d3d774]
  4074dc:	mov    WORD PTR [edi+0x33afe698],ds
  4074e2:	push   es
  4074e3:	push   DWORD PTR [ecx]
  4074e5:	jmp    0x4074bb
  4074e7:	std    
  4074e8:	inc    eax
  4074e9:	bound  ebx,QWORD PTR [edx-0x26]
  4074ec:	adc    edx,esp
  4074ee:	mov    dh,0x55
  4074f0:	mov    WORD PTR [ebx+0x504727e1],cs
  4074f6:	dec    ch
  4074f8:	xchg   ebx,eax
  4074f9:	in     al,0x53
  4074fb:	mov    esp,0x98414d4d
  407500:	or     ebp,DWORD PTR [ecx+0x4d]
  407503:	dec    ebp
  407504:	inc    esi
  407505:	arpl   si,sp
  407507:	std    
  407508:	dec    edx
  407509:	or     eax,0xcc29a79d
  40750e:	add    al,0x86
  407510:	in     eax,0xf7
  407512:	out    dx,eax
  407513:	call   0xd97e:0xf60a8f2
  40751a:	dec    ebp
  40751b:	xchg   BYTE PTR [edi-0x43f5aa33],bh
  407521:	xchg   ebx,eax
  407522:	push   esi
  407523:	nop
  407524:	inc    ecx
  407525:	mov    edi,0x48d2d8e
  40752a:	adc    BYTE PTR [edi],0xe5
  40752d:	cmove  esp,DWORD PTR [ebx]
  407530:	fldcw  WORD PTR [eax-0x67]
  407533:	ret    
  407534:	js     0x40754e
  407536:	jnp    0x4075ac
  407538:	push   0x5542706
  40753d:	neg    dh
  40753f:	scas   eax,DWORD PTR es:[edi]
  407540:	xor    ecx,edi
  407542:	test   al,0x5b
  407544:	mov    esi,0x470f81d4
  407549:	or     al,0x72
  40754b:	pusha  
  40754c:	xchg   esi,eax
  40754d:	xchg   edi,eax
  40754e:	jg     0x407550
  407550:	add    dl,BYTE PTR [ecx+0x13]
  407553:	dec    ebp
  407554:	pop    ecx
  407555:	sar    DWORD PTR [esi+0x254bec9e],1
  40755b:	lds    edx,FWORD PTR [edi-0x1d]
  40755e:	add    al,0xa5
  407560:	les    ecx,FWORD PTR [esi-0x97e3288]
  407566:	or     DWORD PTR [eax-0x3e],esp
  407569:	mov    ch,0x67
  40756b:	sbb    BYTE PTR [eax+0x7f4df37d],dh
  407571:	push   ecx
  407572:	ffree  st(7)
  407574:	in     eax,dx
  407575:	nop
  407576:	mov    bh,dh
  407578:	scas   eax,DWORD PTR es:[edi]
  407579:	sbb    eax,0x5d315f39
  40757e:	push   eax
  40757f:	sti    
  407580:	and    BYTE PTR [esi-0x4c],dl
  407583:	jp     0x40758b
  407585:	out    0x2c,al
  407587:	loopne 0x407542
  407589:	test   eax,0xa521fd0f
  40758e:	test   DWORD PTR [eax],esp
  407590:	cmp    DWORD PTR [ecx+0x1590fc89],ecx
  407596:	add    eax,0xe0653301
  40759b:	push   esi
  40759c:	das    
  40759d:	add    al,0xa6
  40759f:	mov    edi,0x4af8cd51
  4075a4:	jecxz  0x407615
  4075a6:	and    bh,ch
  4075a8:	cmpxchg DWORD PTR [ecx],edi
  4075ab:	and    cl,BYTE PTR [eax]
  4075ad:	xchg   ebx,eax
  4075ae:	pusha  
  4075af:	inc    DWORD PTR [edx-0x6911758f]
  4075b5:	xchg   BYTE PTR [esi],ch
  4075b7:	fistp  DWORD PTR [ebx+0x6]
  4075ba:	adc    esi,ebp
  4075bc:	xchg   BYTE PTR [edi-0x54],cl
  4075bf:	cld    
  4075c0:	fdivr  DWORD PTR [edi]
  4075c2:	or     al,0x8c
  4075c4:	dec    edi
  4075c5:	into   
  4075c6:	rol    BYTE PTR [ebx+0x3821256b],0xc7
  4075cd:	jnp    0x4075ec
  4075cf:	or     eax,0x62ffac36
  4075d4:	lock adc eax,0xc31f0311
  4075da:	push   edx
  4075db:	xchg   ebx,eax
  4075dc:	push   ss
  4075dd:	mov    dh,0x18
  4075df:	les    ecx,FWORD PTR [esi+0x9]
  4075e2:	lahf   
  4075e3:	pop    es
  4075e4:	push   cs
  4075e5:	inc    edx
  4075e6:	jmp    0xc2cb:0x34cc05c7
  4075ed:	pop    ebp
  4075ee:	mov    cl,0x88
  4075f0:	xchg   ebp,eax
  4075f1:	inc    edi
  4075f2:	ins    BYTE PTR es:[edi],dx
  4075f3:	test   eax,0x4de59728
  4075f8:	xor    BYTE PTR [edi-0x45],bh
  4075fb:	nop
  4075fc:	jns    0x40759c
  4075fe:	xchg   esi,eax
  4075ff:	adc    eax,0x497eee7d
  407604:	int3   
  407605:	adc    BYTE PTR [eax-0x1e],bl
  407608:	adc    DWORD PTR [ecx+edi*2+0x19836a89],ebp
  40760f:	push   es
  407610:	sub    BYTE PTR [edi-0x35],al
  407613:	(bad)  
  407614:	sti    
  407615:	xchg   esi,eax
  407616:	test   BYTE PTR [ecx+0x69],cl
  407619:	pop    ecx
  40761a:	or     al,0x54
  40761c:	inc    esp
  40761d:	sub    esi,ebp
  40761f:	aam    0xa8
  407621:	mov    ax,ds:0x35db256f
  407627:	jge    0x4076a1
  407629:	xlat   BYTE PTR ds:[ebx]
  40762a:	fimul  WORD PTR [ebp+0x7a8dd67c]
  407630:	dec    eax
  407631:	mov    bl,0x76
  407633:	cmp    ebx,DWORD PTR [ecx+0x2e]
  407636:	cmp    al,0x1d
  407638:	int    0x98
  40763a:	hlt    
  40763b:	enter  0x9983,0xba
  40763f:	and    edi,DWORD PTR [eax-0x7cacc205]
  407645:	(bad)  
  407646:	cmp    al,0x18
  407648:	inc    ebp
  407649:	push   ebx
  40764a:	pop    ecx
  40764b:	mov    edx,0x842f35e0
  407650:	jl     0x40760d
  407652:	int    0x15
  407654:	pop    edi
  407655:	mov    cl,0x0
  407657:	jmp    0xe62:0x7f91499b
  40765e:	popf   
  40765f:	xor    al,0x29
  407661:	mov    bh,0x47
  407663:	or     BYTE PTR [esi],bh
  407665:	add    DWORD PTR ds:[esi+0x71],eax
  407669:	mov    cl,0x3a
  40766b:	cmc    
  40766c:	inc    edi
  40766d:	mov    edi,0xd5f99692
  407672:	sbb    DWORD PTR [eax],edx
  407674:	mov    cl,0xbd
  407676:	sub    BYTE PTR [ecx],dh
  407678:	dec    ecx
  407679:	push   ebx
  40767a:	loopne 0x407671
  40767c:	aas    
  40767d:	shl    esp,cl
  40767f:	ds daa 
  407681:	dec    edx
  407682:	lds    ecx,FWORD PTR [edi-0x2b]
  407685:	dec    eax
  407686:	push   esp
  407687:	jle    0x407668
  407689:	test   BYTE PTR [ebp+0x503ed673],ch
  40768f:	fwait
  407690:	(bad)  
  407691:	jne    0x4076e0
  407693:	push   ebx
  407694:	in     eax,dx
  407695:	inc    esi
  407696:	int    0x57
  407698:	push   edi
  407699:	mov    BYTE PTR [ebx],al
  40769b:	push   eax
  40769c:	mov    dl,0x28
  40769e:	xlat   BYTE PTR ds:[ebx]
  40769f:	out    0xcd,eax
  4076a1:	adc    edi,DWORD PTR [ebp+esi*1-0x356eba59]
  4076a8:	push   ecx
  4076a9:	push   ebp
  4076aa:	sub    BYTE PTR [eax+eiz*1-0x3b3a5cb],ah
  4076b1:	xchg   DWORD PTR [ebx],edi
  4076b3:	jae    0x4076fb
  4076b5:	xor    esp,ecx
  4076b7:	mov    bl,0xee
  4076b9:	test   BYTE PTR [ebp-0x78],dh
  4076bc:	inc    esi
  4076bd:	mov    dl,0xe1
  4076bf:	fiadd  DWORD PTR [ebx-0x53]
  4076c2:	mov    bl,0x8c
  4076c4:	jge    0x40773a
  4076c6:	data16 mov bl,0xc4
  4076c9:	mov    esi,0xfdb0cd16
  4076ce:	push   ecx
  4076cf:	sbb    ebx,DWORD PTR [edx]
  4076d1:	loope  0x4076da
  4076d3:	lods   eax,DWORD PTR ds:[esi]
  4076d4:	ret    0x7654
  4076d7:	mov    ebp,0x9a177084
  4076dc:	fdivr  QWORD PTR [edx]
  4076de:	jmp    0x407719
  4076e0:	adc    esi,DWORD PTR [ebx]
  4076e2:	imul   esi,DWORD PTR [ebp-0x9],0xffffffc9
  4076e6:	(bad)  
  4076e8:	pusha  
  4076e9:	repnz and eax,0xe150c6d4
  4076ef:	retf   
  4076f0:	xor    BYTE PTR [ebx],dh
  4076f2:	loopne 0x40771b
  4076f4:	and    bh,BYTE PTR [edi-0x70]
  4076f7:	push   0xffffffd6
  4076f9:	xor    BYTE PTR [eax+eax*8+0xaaef923],dh
  407700:	mov    ecx,0x729f5785
  407705:	stc    
  407706:	outs   dx,DWORD PTR ds:[esi]
  407707:	out    0xa4,eax
  407709:	ins    BYTE PTR es:[edi],dx
  40770a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40770b:	or     ebp,DWORD PTR [ebp-0xc]
  40770e:	xchg   ebx,eax
  40770f:	lds    ebx,FWORD PTR [ebp+0x6a352832]
  407715:	jmp    0xb7697d4
  40771a:	sub    ch,BYTE PTR [esi]
  40771c:	mov    al,0x34
  40771e:	ss add esp,ebp
  407721:	jp     0x4076cc
  407723:	fwait
  407724:	pushf  
  407725:	inc    DWORD PTR [ebp+0x40a5bbdb]
  40772b:	push   edi
  40772c:	fidiv  WORD PTR [ecx+edx*8]
  40772f:	xchg   ebp,esp
  407731:	or     BYTE PTR [ecx],dl
  407733:	jmp    0xb16b:0xdbc26a89
  40773a:	inc    eax
  40773b:	adc    DWORD PTR [edi-0x703465d5],edx
  407741:	xchg   edx,eax
  407742:	into   
  407743:	int    0x1
  407745:	rcl    DWORD PTR [ebp+0x9449f2d],cl
  40774b:	arpl   WORD PTR [esi],ax
  40774d:	stos   DWORD PTR es:[edi],eax
  40774e:	push   esp
  40774f:	mov    ecx,0xe1ad8a84
  407754:	pusha  
  407755:	scas   eax,DWORD PTR es:[edi]
  407756:	and    al,0xc5
  407758:	call   0xaa74a6ac
  40775d:	mov    ebx,es
  40775f:	and    ecx,esp
  407761:	pop    esi
  407762:	fisub  WORD PTR [ebp+0x163924d7]
  407768:	xlat   BYTE PTR ds:[ebx]
  407769:	xchg   edx,eax
  40776a:	repnz mov ebx,0xeab44488
  407770:	jmp    DWORD PTR [ebx]
  407772:	mov    edi,DWORD PTR [edx-0x32bd4]
  407778:	xchg   ecx,eax
  407779:	jmp    0xc4afb1b
  40777e:	sbb    al,0xc
  407780:	dec    esi
  407781:	adc    al,0x54
  407783:	inc    ecx
  407784:	push   es
  407785:	xchg   BYTE PTR [ecx+0x5b],cl
  407788:	cmp    DWORD PTR [eax+edi*2],0xd68be60a
  40778f:	pusha  
  407790:	fidiv  DWORD PTR [esp+eax*2]
  407793:	xchg   DWORD PTR [ebp+ebx*8-0x15],edx
  407797:	push   edx
  407798:	mov    ah,0x6f
  40779a:	mov    eax,0xb42034aa
  40779f:	pop    edi
  4077a0:	cwde   
  4077a1:	or     dl,BYTE PTR [edx]
  4077a3:	mov    al,0x15
  4077a5:	inc    eax
  4077a6:	sbb    BYTE PTR [ebx-0x4a],dh
  4077a9:	test   DWORD PTR [ebx+ebx*4],edx
  4077ac:	ins    DWORD PTR es:[edi],dx
  4077ad:	adc    eax,0x82ff7ea0
  4077b2:	adc    eax,0x70888c43
  4077b7:	mov    ds:0x979a349,eax
  4077bc:	(bad)  
  4077bd:	sbb    dl,ah
  4077bf:	sbb    BYTE PTR [edx-0x51],ch
  4077c2:	dec    ax
  4077c4:	mov    ebp,ebp
  4077c6:	push   esi
  4077c7:	pop    edx
  4077c8:	inc    ecx
  4077c9:	outs   dx,BYTE PTR ds:[esi]
  4077ca:	(bad)  
  4077cb:	mov    ch,0x81
  4077cd:	aaa    
  4077ce:	data16 mov BYTE PTR [ecx],0xee
  4077d2:	xchg   ecx,eax
  4077d3:	jnp    0x4077bc
  4077d5:	push   ebp
  4077d6:	scas   al,BYTE PTR es:[edi]
  4077d7:	int3   
  4077d8:	adc    ch,BYTE PTR [eax]
  4077da:	or     edi,DWORD PTR [edi-0xd]
  4077dd:	mov    eax,ds:0xb793fd66
  4077e2:	test   BYTE PTR [edi+edx*1-0x6b],bl
  4077e6:	or     edx,DWORD PTR [edi+0x2321da1a]
  4077ec:	mov    esi,0xabde3c42
  4077f1:	pop    edx
  4077f2:	enter  0xd566,0x0
  4077f6:	inc    edi
  4077f7:	stos   DWORD PTR es:[edi],eax
  4077f8:	mov    eax,0x49c179b8
  4077fd:	or     al,0x87
  4077ff:	mov    ch,0xcc
  407801:	inc    ebx
  407802:	push   0x6af1f40a
  407807:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407808:	mov    ds:0xe03d5abf,eax
  40780d:	loope  0x40779e
  40780f:	xor    eax,0x347253e1
  407814:	jecxz  0x40785c
  407816:	(bad)  
  407817:	ret    
  407818:	call   0xf2e6f07
  40781d:	je     0x407870
  40781f:	jge    0x407800
  407821:	fld    QWORD PTR [edi]
  407823:	cmp    BYTE PTR [edi+0x71],bh
  407826:	mov    edx,0xa9f30a09
  40782b:	jge    0x407823
  40782d:	out    0xd5,eax
  40782f:	iret   
  407830:	test   dl,0xa8
  407833:	test   al,0x72
  407835:	jb     0x40780d
  407837:	add    cl,bl
  407839:	pop    edi
  40783a:	and    ecx,DWORD PTR [ebp+0x262d4a20]
  407840:	add    ch,BYTE PTR [edx+0x15]
  407843:	inc    ecx
  407844:	ret    
  407845:	xchg   esi,eax
  407846:	cmp    DWORD PTR [edi+eiz*1-0x57],esi
  40784a:	loop   0x4077e7
  40784c:	int3   
  40784d:	gs das 
  40784f:	ficomp DWORD PTR [ebp-0x34d3c1a5]
  407855:	xor    BYTE PTR [edi],al
  407857:	mov    esi,0xec998f06
  40785c:	popf   
  40785d:	nop
  40785e:	mov    DWORD PTR [ebp-0x1211703],edx
  407864:	sti    
  407865:	and    eax,esp
  407867:	cmp    BYTE PTR [eax],dl
  407869:	inc    esi
  40786a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40786b:	sbb    bl,BYTE PTR [edi]
  40786d:	loopne 0x40785a
  40786f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407870:	sbb    BYTE PTR [edx],dh
  407872:	jecxz  0x40785c
  407874:	jo     0x4077fc
  407876:	bnd jo 0x4078aa
  407879:	icebp  
  40787a:	adc    eax,0x1ee32f84
  40787f:	pusha  
  407880:	shl    BYTE PTR [eax-0x24a270a5],1
  407886:	in     al,0x27
  407888:	xchg   ebx,eax
  407889:	jb     0x407894
  40788b:	mov    bl,0xfc
  40788d:	outs   dx,DWORD PTR ds:[esi]
  40788e:	jg     0x40786c
  407890:	rcr    BYTE PTR [edi],0x35
  407893:	outs   dx,DWORD PTR ds:[esi]
  407894:	dec    esp
  407895:	ret    
  407896:	mov    esi,0x1ee660dc
  40789b:	sub    ebx,esi
  40789d:	inc    esp
  40789e:	mov    ebx,0x4e2c53c2
  4078a3:	fwait
  4078a4:	sti    
  4078a5:	dec    edi
  4078a6:	xchg   edx,eax
  4078a7:	loop   0x4078ee
  4078a9:	push   edi
  4078aa:	pushf  
  4078ab:	dec    ecx
  4078ac:	cmp    esi,edx
  4078ae:	cmp    dh,BYTE PTR [edx]
  4078b0:	ret    
  4078b1:	add    ecx,DWORD PTR [ebx-0x11]
  4078b4:	outs   dx,DWORD PTR ds:[esi]
  4078b5:	inc    esi
  4078b6:	xchg   esi,eax
  4078b7:	mov    ecx,0x690906a4
  4078bc:	shr    DWORD PTR [ebx],cl
  4078be:	push   cs
  4078bf:	jl     0x407853
  4078c1:	mov    WORD PTR [esi],es
  4078c3:	jo     0x407923
  4078c5:	clc    
  4078c6:	push   cs
  4078c7:	(bad)  
  4078c8:	xor    ebp,DWORD PTR [eax-0x35948cc2]
  4078ce:	mov    cl,BYTE PTR [ecx]
  4078d0:	aad    0x64
  4078d2:	adc    edi,DWORD PTR [ebp-0x3d]
  4078d5:	add    bl,BYTE PTR [ebx+0x55]
  4078d8:	mov    cl,0x4e
  4078da:	xchg   edi,eax
  4078db:	mov    edi,edi
  4078dd:	add    ebp,esp
  4078df:	lods   al,BYTE PTR ds:[esi]
  4078e0:	(bad)  
  4078e1:	dec    dh
  4078e3:	ins    BYTE PTR es:[edi],dx
  4078e4:	je     0x40794a
  4078e6:	cmp    al,0x5a
  4078e8:	ins    DWORD PTR es:[edi],dx
  4078e9:	outs   dx,BYTE PTR ds:[esi]
  4078ea:	rcl    DWORD PTR [esp+edi*1],cl
  4078ed:	mov    ds:0xbc942c51,al
  4078f2:	pop    ds
  4078f3:	sbb    eax,0xa362ea9a
  4078f8:	clc    
  4078f9:	shl    BYTE PTR [edx+0x13fe7dd9],0xba
  407900:	add    BYTE PTR [eax+0x4fedb2b6],0x6f
  407907:	mov    cs,WORD PTR [eax]
  407909:	lds    ebx,FWORD PTR [ecx-0xf]
  40790c:	and    eax,0x85a8ea90
  407911:	ret    0x4403
  407914:	xchg   edi,eax
  407915:	cli    
  407916:	push   ebp
  407917:	je     0x4078c7
  407919:	cld    
  40791a:	jmp    0xabd5:0x4b314277
  407921:	jo     0x40791a
  407923:	xor    eax,0xd9834a6a
  407928:	lods   al,BYTE PTR ds:[esi]
  407929:	sbb    eax,0x7b831abf
  40792e:	(bad)  
  40792f:	retf   
  407930:	mov    edi,0x85404a7e
  407935:	push   0x4238b802
  40793a:	lds    ebp,FWORD PTR [ebp+0x4a]
  40793d:	mov    eax,ds:0x8644ab44
  407942:	push   ebx
  407943:	retf   
  407944:	ins    BYTE PTR es:[edi],dx
  407945:	loop   0x4079bf
  407947:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407949:	inc    esi
  40794a:	and    edx,DWORD PTR ds:[ecx]
  40794d:	mov    ecx,0xca124039
  407952:	in     eax,dx
  407953:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407954:	push   eax
  407955:	les    ebp,FWORD PTR [ebp+0x52781147]
  40795b:	sar    BYTE PTR [esi],1
  40795d:	jno    0x407941
  40795f:	outs   dx,BYTE PTR ds:[esi]
  407960:	sbb    ch,BYTE PTR [esi]
  407962:	aam    0xa4
  407964:	dec    ecx
  407965:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407966:	retf   0xb092
  407969:	sar    DWORD PTR [edi+0x64],1
  40796c:	in     al,0xd
  40796e:	lods   al,BYTE PTR ds:[esi]
  40796f:	scas   eax,DWORD PTR es:[edi]
  407970:	data16 fisubr DWORD PTR fs:0x55698324
  407978:	jmp    0xb192:0x8951b53
  40797f:	nop
  407980:	pop    ecx
  407981:	dec    ebp
  407982:	cwde   
  407983:	fincstp 
  407985:	cs pop ds
  407987:	jp     0x407949
  407989:	xchg   ebp,eax
  40798a:	gs lock push edi
  40798d:	mov    cl,0x0
  40798f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407990:	sbb    DWORD PTR ds:0x43d10a73,0xf
  407997:	retf   0xe18
  40799a:	outs   dx,DWORD PTR ds:[esi]
  40799b:	test   dl,0x65
  40799e:	jbe    0x407a1f
  4079a0:	daa    
  4079a1:	fisub  WORD PTR [esi-0x3ec1951d]
  4079a7:	imul   esp,DWORD PTR [ebp-0x66],0xc2c42bf
  4079ae:	pop    eax
  4079af:	mov    edi,0xcdf9524d
  4079b4:	add    BYTE PTR cs:0x2e27062f,cl
  4079bb:	adc    eax,DWORD PTR [ecx+eiz*4-0x7f]
  4079bf:	gs in  eax,0x8a
  4079c2:	adc    edx,DWORD PTR [edi+0xd]
  4079c5:	cmc    
  4079c6:	das    
  4079c7:	into   
  4079c8:	xor    edx,DWORD PTR [esi]
  4079ca:	mov    al,0xa4
  4079cc:	jns    0x40795b
  4079ce:	lgdtd  [eax]
  4079d1:	out    dx,al
  4079d2:	mov    cl,0x1c
  4079d4:	mov    esi,0x43030228
  4079d9:	or     BYTE PTR [ebp+0x64],dh
  4079dc:	mov    ds:0x9c645285,al
  4079e1:	aam    0x4a
  4079e3:	rcr    DWORD PTR [ebx-0x13289abd],1
  4079e9:	shl    BYTE PTR [edi+0x18],0x5b
  4079ed:	aas    
  4079ee:	jns    0x407a66
  4079f0:	mov    eax,DWORD PTR [eax]
  4079f2:	sub    bl,BYTE PTR [esi-0x528e9d2c]
  4079f8:	jecxz  0x407983
  4079fa:	das    
  4079fb:	pop    edi
  4079fc:	jle    0x407991
  4079fe:	cmp    eax,0x1f3543f0
  407a03:	add    eax,0x6b8091c1
  407a08:	push   es
  407a09:	out    0x5e,al
  407a0b:	loopne 0x4079a7
  407a0d:	(bad)  
  407a0e:	in     eax,0x81
  407a10:	mov    al,ds:0x240c2bd
  407a15:	ja     0x407a2b
  407a17:	pop    eax
  407a18:	nop
  407a19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a1a:	fdivr  QWORD PTR [ecx+0x1f]
  407a1d:	ss retf 
  407a1f:	push   ecx
  407a20:	jmp    DWORD PTR [esi-0x71]
  407a23:	mov    al,0xba
  407a25:	pop    eax
  407a26:	cmp    edi,edi
  407a28:	cmp    eax,0xf1779a8a
  407a2d:	ror    BYTE PTR [edx],0x8c
  407a30:	sub    eax,DWORD PTR [ebx]
  407a32:	aad    0x97
  407a34:	mov    dh,0xac
  407a36:	ss pop ebx
  407a38:	push   ebp
  407a39:	jbe    0x407a1b
  407a3b:	pop    esi
  407a3c:	mov    edi,0x7872b124
  407a41:	cmp    bh,bl
  407a43:	outs   dx,DWORD PTR cs:[esi]
  407a45:	aam    0x7c
  407a47:	leave  
  407a48:	mov    cl,0x68
  407a4a:	mov    BYTE PTR [edi-0x1002c068],al
  407a50:	into   
  407a51:	in     al,0xc1
  407a53:	mov    ds:0xa9b650a8,eax
  407a58:	nop
  407a59:	pop    es
  407a5a:	cmp    DWORD PTR [ebp-0x5495e159],ebx
  407a60:	jb     0x407ad2
  407a62:	adc    eax,0x47f065d3
  407a67:	jp     0x4079fd
  407a69:	inc    ecx
  407a6a:	das    
  407a6b:	in     al,dx
  407a6c:	fstp   TBYTE PTR [ebx+0x78443a9f]
  407a72:	das    
  407a73:	push   dx
  407a75:	cli    
  407a76:	xchg   edi,eax
  407a77:	lock rcr DWORD PTR [ecx+0x41],0x8c
  407a7c:	mov    bh,0x19
  407a7e:	loopne 0x407a23
  407a80:	pop    edx
  407a81:	pop    ds
  407a82:	in     al,dx
  407a83:	ficomp DWORD PTR [edx+0xa]
  407a86:	mov    ebx,0xadd799e5
  407a8b:	mov    edx,0x67afd41e
  407a90:	mov    DWORD PTR [esi],ebx
  407a92:	sub    ch,BYTE PTR [edi+0x28cc7d7e]
  407a98:	test   al,0x89
  407a9a:	aas    
  407a9b:	sar    BYTE PTR [ebx],cl
  407a9d:	jbe    0x407add
  407a9f:	stos   BYTE PTR es:[edi],al
  407aa0:	and    al,0x7f
  407aa2:	dec    BYTE PTR [ecx+edi*8]
  407aa5:	jg     0x407ab1
  407aa7:	pop    edx
  407aa8:	mov    ecx,0xebdd9c75
  407aad:	mov    ds:0x620925da,eax
  407ab2:	imul   esp,esi,0x1ef1aede
  407ab8:	mov    dh,0x7
  407aba:	ins    DWORD PTR es:[edi],dx
  407abb:	mov    esi,0xe901c635
  407ac0:	fsubr  QWORD PTR [ecx]
  407ac2:	mov    bl,0x6d
  407ac4:	sub    ebx,edx
  407ac6:	addr16 xchg ecx,eax
  407ac8:	pop    es
  407ac9:	and    cl,bh
  407acb:	xlat   BYTE PTR ds:[ebx]
  407acc:	out    dx,eax
  407acd:	xor    BYTE PTR [edx+edx*8-0x49fd4025],al
  407ad4:	sahf   
  407ad5:	jae    0x407b2d
  407ad7:	sub    ebp,ebp
  407ad9:	pop    esi
  407ada:	out    0x2f,al
  407adc:	mov    esp,DWORD PTR [eax+0x22]
  407adf:	addr16 mov al,0x49
  407ae2:	jmp    0xa86291ad
  407ae7:	xchg   ebx,eax
  407ae8:	(bad)  [edx+0xba51b09]
  407aee:	or     DWORD PTR [eax+0x4e],ebx
  407af1:	mov    ds:0xbdf7e433,eax
  407af6:	div    DWORD PTR [eax+0x27f04a5f]
  407afc:	idiv   DWORD PTR [esp+ecx*4+0x79]
  407b00:	or     edi,edx
  407b02:	fs ins BYTE PTR es:[edi],dx
  407b04:	or     BYTE PTR [ebx],ch
  407b06:	into   
  407b07:	push   ss
  407b08:	pusha  
  407b09:	and    DWORD PTR [esi+eiz*8-0x649844dd],ebp
  407b10:	mov    ch,0x14
  407b12:	inc    esi
  407b13:	mov    ah,0x29
  407b15:	icebp  
  407b16:	dec    ebp
  407b17:	inc    ebx
  407b18:	jl     0x407af9
  407b1a:	pusha  
  407b1b:	ins    DWORD PTR es:[edi],dx
  407b1c:	xor    al,0x43
  407b1e:	dec    ebx
  407b1f:	in     eax,dx
  407b20:	pop    ss
  407b21:	popw   es
  407b23:	shl    ebp,cl
  407b25:	xchg   ebx,eax
  407b26:	stc    
  407b27:	std    
  407b28:	sub    bl,BYTE PTR [edx-0x5faac04d]
  407b2e:	js     0x407b4b
  407b30:	jge    0x407b22
  407b32:	sub    DWORD PTR [ebp+0x7b],edx
  407b35:	sub    ebp,DWORD PTR [ecx-0x76]
  407b38:	shl    DWORD PTR ds:0x975ef87,0x81
  407b3f:	(bad)  
  407b40:	jne    0x407b50
  407b42:	sar    DWORD PTR [ecx+0x39],1
  407b45:	(bad)  
  407b46:	mov    eax,0x150ebc3
  407b4b:	adc    BYTE PTR [eax+0x7b],ah
  407b4e:	retf   
  407b4f:	in     eax,0x37
  407b51:	jnp    0x407b4c
  407b53:	mov    ds:0x860a3206,al
  407b58:	test   BYTE PTR [edi+0x53],dl
  407b5b:	fcomp  st(1)
  407b5d:	aam    0xd5
  407b5f:	loope  0x407b45
  407b61:	or     al,0xed
  407b63:	add    DWORD PTR [esi-0x16d70d28],esi
  407b69:	push   eax
  407b6a:	push   ecx
  407b6b:	lahf   
  407b6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b6d:	rol    BYTE PTR [ecx],1
  407b6f:	inc    ebp
  407b70:	aad    0xd
  407b72:	jmp    0x2b36:0xbb3a7321
  407b79:	mov    eax,0x357840a8
  407b7e:	jo     0x407b86
  407b80:	cwde   
  407b81:	dec    eax
  407b82:	loope  0x407b1c
  407b84:	push   ss
  407b85:	out    0x43,eax
  407b87:	mov    ebp,0x8640e9d5
  407b8c:	xchg   edi,eax
  407b8d:	mov    bl,BYTE PTR [eax-0x1c]
  407b90:	sub    esi,DWORD PTR [eax]
  407b92:	push   esi
  407b93:	into   
  407b94:	pusha  
  407b95:	fimul  WORD PTR [edx+0x57]
  407b98:	jno    0x407c0a
  407b9a:	xchg   edi,eax
  407b9b:	outs   dx,BYTE PTR ds:[esi]
  407b9c:	data16 add al,0xa9
  407b9f:	ret    0x4d99
  407ba2:	xchg   DWORD PTR [ecx-0x3ea5f38],ebp
  407ba8:	and    edi,DWORD PTR [edi+0x1b]
  407bab:	dec    edi
  407bac:	jne    0x407ba4
  407bae:	xchg   DWORD PTR [edx],eax
  407bb0:	jbe    0x407be0
  407bb2:	xchg   edi,eax
  407bb3:	push   esi
  407bb4:	call   0xa6c8:0xd259bf3
  407bbb:	test   al,0x89
  407bbd:	xchg   bl,ah
  407bbf:	lea    edi,[edi+0x65ff1a61]
  407bc5:	push   cs
  407bc6:	popf   
  407bc7:	adc    al,0xb1
  407bc9:	xor    eax,0x7e4bd12b
  407bce:	push   ss
  407bcf:	xchg   BYTE PTR [ebp-0x2e],ch
  407bd2:	(bad)  [eax-0x3807ec93]
  407bd8:	sub    BYTE PTR [edi-0x3e],cl
  407bdb:	xchg   esp,eax
  407bdc:	pusha  
  407bdd:	cmp    ch,dh
  407bdf:	ror    DWORD PTR [ecx],1
  407be1:	bound  ecx,QWORD PTR [eax+ebp*8+0x16]
  407be5:	cli    
  407be6:	jg     0x407bfd
  407be8:	add    BYTE PTR [ebp-0x47],ah
  407beb:	mov    esp,0x72edee87
  407bf0:	or     al,bl
  407bf2:	outs   dx,BYTE PTR ds:[esi]
  407bf3:	and    esp,DWORD PTR [ecx-0x6934dd95]
  407bf9:	std    
  407bfa:	pop    ss
  407bfb:	mov    WORD PTR [esp-0xe],?
  407bff:	and    esp,DWORD PTR [edi+edi*4+0x66]
  407c03:	adc    eax,0x7146b97c
  407c08:	cli    
  407c09:	jbe    0x407c5f
  407c0b:	dec    edx
  407c0c:	stos   DWORD PTR es:[edi],eax
  407c0d:	aam    0x95
  407c0f:	add    BYTE PTR [ecx-0x6e42236f],ch
  407c15:	sub    al,0x99
  407c17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c18:	repnz test eax,0x16a2fbf6
  407c1e:	ins    DWORD PTR es:[edi],dx
  407c1f:	daa    
  407c20:	pop    edi
  407c21:	or     DWORD PTR [esi-0x16],ebp
  407c24:	js     0x407c2b
  407c26:	mov    DWORD PTR [edi+ebp*1-0x54f991b1],ebp
  407c2d:	cmp    BYTE PTR [ebx+0x52213c42],ah
  407c33:	push   edi
  407c34:	sbb    al,0x67
  407c36:	xlat   BYTE PTR ds:[ebx]
  407c37:	ret    
  407c38:	xor    BYTE PTR es:[edi-0x1d0ae18e],cl
  407c3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c40:	pop    ebp
  407c41:	add    al,0xe3
  407c43:	sub    al,0xc7
  407c45:	adc    edi,ebx
  407c47:	mov    dl,0xc5
  407c49:	xor    dh,BYTE PTR [eax]
  407c4b:	aam    0xa3
  407c4d:	add    eax,0xc3dd6012
  407c52:	jmp    0xfac:0x7a96661f
  407c59:	cmp    al,0xbe
  407c5b:	sbb    eax,0xddc579bc
  407c60:	mov    esp,0xe70f49aa
  407c65:	leave  
  407c66:	push   eax
  407c67:	dec    esi
  407c68:	lods   eax,DWORD PTR ds:[esi]
  407c69:	outs   dx,BYTE PTR ds:[esi]
  407c6a:	call   esi
  407c6c:	imul   ebp,DWORD PTR [edx-0x1eeb72d4],0x21b48bda
  407c76:	add    eax,0x806712a3
  407c7b:	and    ecx,DWORD PTR [ebx]
  407c7d:	call   0x9403:0x211c612a
  407c84:	xchg   DWORD PTR [edi+esi*2-0x72],ebp
  407c88:	cdq    
  407c89:	ss aaa 
  407c8b:	adc    eax,0x8a351d5e
  407c90:	or     DWORD PTR [esi],0x40
  407c93:	fucomp st(4)
  407c95:	inc    eax
  407c96:	loopne 0x407c3c
  407c98:	jns    0x407c61
  407c9a:	repnz dec esp
  407c9c:	or     BYTE PTR [edi+0x6d],ah
  407c9f:	gs popf 
  407ca1:	or     bl,BYTE PTR [esi]
  407ca3:	sub    bh,ah
  407ca5:	cmp    esi,DWORD PTR [ebp-0x7d]
  407ca8:	lods   eax,DWORD PTR ds:[esi]
  407ca9:	scas   al,BYTE PTR es:[edi]
  407caa:	pop    ds
  407cab:	push   es
  407cac:	and    BYTE PTR [ebx+0x3cc0ce62],bh
  407cb2:	push   0xffffffcd
  407cb4:	inc    esi
  407cb5:	(bad)  
  407cb6:	jge    0x407d30
  407cb8:	jo     0x407c93
  407cba:	inc    ebp
  407cbb:	adc    DWORD PTR [ecx+0x39],esp
  407cbe:	nop
  407cbf:	push   edx
  407cc0:	mov    ebp,0xbb6648e1
  407cc5:	mov    bl,0x5
  407cc7:	sti    
  407cc8:	arpl   WORD PTR [ebx+0x1c],di
  407ccb:	bound  edx,QWORD PTR [eax+0x45]
  407cce:	push   ebx
  407ccf:	cmp    al,0x48
  407cd1:	loop   0x407ccc
  407cd3:	aad    0x42
  407cd5:	push   eax
  407cd6:	push   ss
  407cd7:	test   DWORD PTR [ebx],ebx
  407cd9:	xor    edi,DWORD PTR [ecx]
  407cdb:	cvttps2pi mm3,QWORD PTR [esi+0x123bd3b0]
  407ce2:	jnp    0x407d3b
  407ce4:	sub    ecx,DWORD PTR [edx]
  407ce6:	mov    edi,0xd7c92cbd
  407ceb:	test   eax,0x68507abb
  407cf0:	shl    DWORD PTR [edx-0x34],1
  407cf3:	xor    eax,0x258860ae
  407cf8:	fidiv  DWORD PTR [edx+0x79c81af]
  407cfe:	das    
  407cff:	pop    edi
  407d00:	clc    
  407d01:	mov    al,ds:0x6aa91a2e
  407d06:	test   DWORD PTR [ebx],edi
  407d08:	hlt    
  407d09:	add    eax,0xe30a8ef4
  407d0e:	(bad)  
  407d0f:	das    
  407d10:	sbb    ah,BYTE PTR ds:0x9f6a51cc
  407d16:	cdq    
  407d17:	inc    edi
  407d18:	push   ebx
  407d19:	mov    esi,0x4970ae91
  407d1e:	ja     0x407cae
  407d20:	je     0x407cd3
  407d22:	outs   dx,BYTE PTR ds:[esi]
  407d23:	xchg   edi,eax
  407d24:	xor    esp,esi
  407d26:	pusha  
  407d27:	stc    
  407d28:	and    cl,dh
  407d2a:	push   ebp
  407d2b:	push   ecx
  407d2c:	push   ds
  407d2d:	stos   DWORD PTR es:[edi],eax
  407d2e:	xor    eax,0x7dcecc01
  407d33:	hlt    
  407d34:	ret    
  407d35:	mov    ah,0x37
  407d37:	cmp    eax,0x9e2de8de
  407d3c:	int3   
  407d3d:	je     0x407d6f
  407d3f:	fs xcrypt-ofb (bad)
  407d41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d42:	imul   ecx,DWORD PTR [ecx+0x58],0xffffff9d
  407d46:	xchg   DWORD PTR [ebx-0x65],esp
  407d49:	mov    ah,BYTE PTR [eax-0x56f2daed]
  407d4f:	fstp   TBYTE PTR [esi-0x7]
  407d52:	and    al,0xa3
  407d54:	popa   
  407d55:	ret    0xaca7
  407d58:	ffree  st(1)
  407d5a:	adc    bl,BYTE PTR [edi+0x79cd745c]
  407d60:	adc    esp,DWORD PTR [ecx-0x7e]
  407d63:	loope  0x407cfc
  407d65:	in     eax,dx
  407d66:	xor    eax,0xc165cbac
  407d6b:	in     al,dx
  407d6c:	mov    ebx,0x9fa6ad7a
  407d71:	dec    edi
  407d72:	outs   dx,BYTE PTR ds:[esi]
  407d73:	les    ecx,FWORD PTR [edi]
  407d75:	ins    BYTE PTR es:[edi],dx
  407d76:	jnp    0x407d7a
  407d78:	adc    dh,BYTE PTR [ebp+0xe]
  407d7b:	dec    ebx
  407d7c:	mov    dh,0x87
  407d7e:	dec    esi
  407d7f:	jno    0x407d60
  407d81:	in     al,0x75
  407d83:	les    ebp,FWORD PTR [edi-0x71]
  407d86:	jmp    0x407d84
  407d88:	xor    DWORD PTR [esi],ecx
  407d8a:	push   esp
  407d8b:	mov    bh,0xe7
  407d8d:	add    eax,edx
  407d8f:	test   eax,0x707d722e
  407d94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d95:	dec    eax
  407d96:	mov    eax,0x71debaa7
  407d9b:	mov    ebp,0xb5293897
  407da0:	jp     0x407dcf
  407da2:	aam    0x2f
  407da4:	leave  
  407da5:	xchg   edi,eax
  407da6:	or     al,BYTE PTR [edi+eiz*8]
  407da9:	sub    eax,0xb4c7ff5a
  407dae:	push   cs
  407daf:	mov    ds:0xfd063587,al
  407db4:	push   ss
  407db5:	ins    BYTE PTR es:[edi],dx
  407db6:	test   BYTE PTR [esi],al
  407db8:	sahf   
  407db9:	sub    BYTE PTR [ecx+0x69],0x91
  407dbd:	(bad)  
  407dbe:	aas    
  407dbf:	in     eax,dx
  407dc0:	push   esi
  407dc1:	fild   QWORD PTR [ecx]
  407dc3:	xor    DWORD PTR [ebx],0xa952c83d
  407dc9:	cmp    BYTE PTR [eax-0x78],ah
  407dcc:	push   0xbf741d6c
  407dd1:	adc    esi,DWORD PTR [esp+esi*8]
  407dd4:	js     0x407d78
  407dd6:	push   ebp
  407dd7:	cmp    edx,DWORD PTR [esi+ecx*1-0x1a]
  407ddb:	fsubr  DWORD PTR [edi]
  407ddd:	pop    esi
  407dde:	push   esp
  407ddf:	ret    
  407de0:	aad    0x71
  407de2:	inc    ebx
  407de3:	in     al,dx
  407de4:	jge    0x407e5a
  407de6:	adc    dh,dl
  407de8:	mov    DWORD PTR [edx+0x38b2e03a],edx
  407dee:	enter  0x952b,0x80
  407df2:	dec    ebp
  407df3:	cwde   
  407df4:	dec    edi
  407df5:	add    bl,BYTE PTR [ebx-0x26d6023]
  407dfb:	adc    dl,bl
  407dfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407dfe:	lods   eax,DWORD PTR ds:[esi]
  407dff:	(bad)  
  407e00:	cmp    bl,BYTE PTR [eax+eiz*1+0x6f7753a4]
  407e07:	out    dx,al
  407e08:	test   eax,0x807707c3
  407e0d:	ins    DWORD PTR es:[edi],dx
  407e0e:	pushf  
  407e0f:	dec    ebp
  407e10:	jg     0x407e7b
  407e12:	mov    ebp,0x87c7c4b5
  407e17:	mov    eax,0xc66c43c8
  407e1c:	xor    eax,0xeff7feb9
  407e21:	xor    dh,ch
  407e23:	mov    ebp,DWORD PTR [esi+0x67]
  407e26:	(bad)  
  407e27:	mov    ch,0xed
  407e29:	cdq    
  407e2a:	mov    bh,0xfb
  407e2c:	sub    BYTE PTR [edx+ebp*8],bh
  407e2f:	and    dl,BYTE PTR [ebx+eax*4-0x786906f5]
  407e36:	(bad)  
  407e38:	jmp    0xf2b6:0x3a900d98
  407e3f:	sub    eax,0x64494e11
  407e44:	xor    al,0xe0
  407e46:	cmp    al,0xf6
  407e48:	inc    esi
  407e49:	pop    edx
  407e4a:	pop    ecx
  407e4b:	cmc    
  407e4c:	inc    dl
  407e4e:	or     BYTE PTR [esi-0xc],bh
  407e51:	mov    ebp,0xf8f3719d
  407e56:	and    dh,BYTE PTR [ebp+0x54]
  407e59:	mov    cl,bh
  407e5b:	ins    BYTE PTR es:[edi],dx
  407e5c:	or     al,0x6f
  407e5e:	mov    al,0x8d
  407e60:	sbb    ecx,DWORD PTR [edx+0x2342d6ca]
  407e66:	push   ebx
  407e67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e68:	sbb    al,0x3e
  407e6a:	test   al,0xfb
  407e6c:	mov    eax,edi
  407e6e:	repnz imul ecx,esp,0xffffffee
  407e72:	jns    0x407e87
  407e74:	dec    edi
  407e75:	jbe    0x407e2e
  407e77:	into   
  407e78:	cld    
  407e79:	sbb    DWORD PTR [eax+0x5b],eax
  407e7c:	and    eax,0xa9992963
  407e81:	idiv   bl
  407e83:	pop    eax
  407e84:	and    cl,BYTE PTR [edx-0xe438627]
  407e8a:	and    DWORD PTR [di+0x40],0x77
  407e8f:	test   al,0xbb
  407e91:	pushf  
  407e92:	ins    BYTE PTR es:[edi],dx
  407e93:	inc    ecx
  407e94:	sub    ecx,DWORD PTR [eax-0x6e]
  407e97:	cmp    bl,0x85
  407e9a:	xchg   edx,eax
  407e9b:	mov    ecx,DWORD PTR [edx-0x34]
  407e9e:	gs aaa 
  407ea0:	jl     0x407ed1
  407ea2:	sbb    eax,0x1e52dc83
  407ea7:	push   edi
  407ea8:	shl    DWORD PTR [ecx],0xe6
  407eab:	pop    edi
  407eac:	stc    
  407ead:	aas    
  407eae:	lahf   
  407eaf:	out    0x66,eax
  407eb1:	fiadd  WORD PTR [ecx]
  407eb3:	int    0xc5
  407eb5:	push   cs
  407eb6:	into   
  407eb7:	or     esi,edi
  407eb9:	xor    eax,0x5d554a92
  407ebe:	std    
  407ebf:	and    eax,0xb33d40bc
  407ec4:	sbb    eax,0x78df5c20
  407ec9:	call   0x800c:0x9343969b
  407ed0:	sar    dh,cl
  407ed2:	daa    
  407ed3:	lock fcmovb st,st(5)
  407ed6:	nop
  407ed7:	shl    edi,1
  407ed9:	push   edi
  407eda:	ja     0x407eb5
  407edc:	rol    dl,1
  407ede:	mov    ch,0x1f
  407ee0:	add    dl,bh
  407ee2:	mov    esp,DWORD PTR [edi]
  407ee4:	dec    esi
  407ee5:	inc    edi
  407ee6:	in     eax,0xbc
  407ee8:	add    al,0x51
  407eea:	add    al,0xb
  407eec:	push   es
  407eed:	xchg   edi,eax
  407eee:	sub    DWORD PTR [esi+0x232074a3],eax
  407ef4:	push   ss
  407ef5:	pop    ecx
  407ef6:	xchg   ecx,eax
  407ef7:	xor    eax,0xd2b7b347
  407efc:	xlat   BYTE PTR ds:[ebx]
  407efd:	jg     0x407ec8
  407eff:	retf   
  407f00:	dec    ebx
  407f01:	stos   DWORD PTR es:[edi],eax
  407f02:	sti    
  407f03:	sbb    eax,0x9c27f12
  407f08:	in     al,dx
  407f09:	mov    esp,0x46e94ff7
  407f0e:	xchg   BYTE PTR [ebx-0x5b],ch
  407f11:	xchg   BYTE PTR [edx-0x29],cl
  407f14:	nop
  407f15:	lods   al,BYTE PTR ds:[esi]
  407f16:	and    al,0x57
  407f18:	out    dx,eax
  407f19:	mov    al,0x9a
  407f1b:	les    eax,FWORD PTR [esi-0x713de713]
  407f21:	call   0x7c2c:0x13d6c487
  407f28:	dec    eax
  407f29:	xchg   edx,eax
  407f2a:	push   edx
  407f2b:	xchg   ebp,eax
  407f2c:	or     al,0xdf
  407f2e:	dec    esp
  407f2f:	mov    al,0xd9
  407f31:	(bad)  
  407f33:	sub    ecx,eax
  407f35:	int    0xb2
  407f37:	test   eax,0x6d6cf892
  407f3c:	mov    dl,0x10
  407f3e:	add    DWORD PTR [esi+ebx*2-0x50],ebx
  407f42:	sub    DWORD PTR [edx-0x74],ecx
  407f45:	mov    esi,?
  407f47:	push   es
  407f48:	mov    ds:0x992dc07d,al
  407f4d:	or     eax,0x64c21365
  407f52:	inc    ebp
  407f53:	aad    0x54
  407f55:	retf   0x847d
  407f58:	pop    ecx
  407f59:	scas   eax,DWORD PTR es:[edi]
  407f5a:	leave  
  407f5b:	sub    edi,ebp
  407f5d:	push   0x8389f00d
  407f62:	push   0x0
  407f64:	test   eax,0x6f2d3e45
  407f69:	sub    DWORD PTR [ebx+0x73],ebx
  407f6c:	in     al,dx
  407f6d:	cmc    
  407f6e:	add    ebp,0x7da1fa2
  407f74:	es mov ah,0x7c
  407f77:	mov    ebp,0x6815942
  407f7c:	cmp    BYTE PTR [esi-0x19b87b53],cl
  407f82:	mov    eax,ds:0xb03b5c7d
  407f87:	mov    ds:0x18fa5aa2,al
  407f8c:	and    BYTE PTR [eax-0x57],bl
  407f8f:	loope  0x408001
  407f91:	psllq  mm4,QWORD PTR [ebx]
  407f94:	mov    al,ds:0x1558d848
  407f99:	xchg   ecx,eax
  407f9a:	in     al,dx
  407f9b:	adc    dh,BYTE PTR [edx-0x25ed447d]
  407fa1:	bnd jo 0x407fe9
  407fa4:	push   ebp
  407fa5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407fa6:	outs   dx,BYTE PTR ds:[esi]
  407fa7:	cmp    DWORD PTR [ebp+0x30b32904],ebp
  407fad:	mov    ch,0x1c
  407faf:	loopne 0x407faf
  407fb1:	mov    al,ds:0x2ab4007a
  407fb6:	sbb    dl,dl
  407fb8:	daa    
  407fb9:	cdq    
  407fba:	and    ebx,DWORD PTR [edx]
  407fbc:	mov    edx,0x91245e69
  407fc1:	leave  
  407fc2:	mov    esp,0x958df858
  407fc7:	shr    DWORD PTR [eax],cl
  407fc9:	scas   eax,DWORD PTR es:[edi]
  407fca:	in     eax,dx
  407fcb:	or     bh,0x4b
  407fce:	call   0xac1c2904
  407fd3:	xchg   ecx,eax
  407fd4:	ja     0x407fad
  407fd6:	gs pop edx
  407fd8:	ds hlt 
  407fda:	dec    edx
  407fdb:	inc    edi
  407fdc:	xchg   ecx,eax
  407fdd:	or     cl,BYTE PTR [edx-0x66]
  407fe0:	mov    edx,0xd42b29a3
  407fe5:	loopne 0x40803c
  407fe7:	jmp    0x64331b1f
  407fec:	adc    dl,BYTE PTR [ebx+0x4e47d5a]
  407ff2:	mov    ds:0x3da8560c,al
  407ff7:	push   es
  407ff8:	lock (bad) 
  407ffa:	dec    esp
  407ffb:	ins    DWORD PTR es:[edi],dx
  407ffc:	leavew 
  407ffe:	add    ebx,0xffffffa2
  408001:	sti    
  408002:	ds dec ecx
  408004:	imul   ebx,DWORD PTR [eax],0x77
  408007:	or     eax,0xe3e8305b
  40800c:	mul    BYTE PTR [ebp-0x76aa0d8f]
  408012:	dec    ebp
  408013:	and    DWORD PTR [ecx+0x1c],ebp
  408016:	(bad)  
  408017:	xor    al,0xb4
  408019:	sub    DWORD PTR [edi],esi
  40801b:	loopne 0x408039
  40801d:	xchg   ebx,eax
  40801e:	dec    esp
  40801f:	pusha  
  408020:	pop    ebx
  408021:	pushf  
  408022:	or     esi,ebx
  408024:	jbe    0x408001
  408026:	inc    esp
  408027:	xor    esp,edx
  408029:	lea    eax,[esi+0x7715c23a]
  40802f:	mov    WORD PTR [esi+0x26],cs
  408032:	xchg   BYTE PTR [eax+0x73],bh
  408035:	add    eax,0x3a2f2ff8
  40803a:	and    ebp,DWORD PTR [esi]
  40803c:	(bad)  
  40803d:	add    ah,BYTE PTR gs:[ecx-0x5919bd45]
  408044:	int3   
  408045:	xor    BYTE PTR [edx-0x21a082ab],al
  40804b:	cwde   
  40804c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40804d:	and    al,0xb3
  40804f:	xchg   edi,eax
  408050:	pop    eax
  408051:	(bad)  
  408052:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408053:	or     BYTE PTR [ebx-0x27],bh
  408056:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408057:	scas   al,BYTE PTR es:[edi]
  408058:	mov    ecx,0xde1e7897
  40805d:	sti    
  40805e:	aaa    
  40805f:	(bad)
  408063:	imul   ebx,esp,0x27
  408066:	sahf   
  408067:	jmp    0x4a5f:0xe8328629
  40806e:	retf   
  40806f:	dec    eax
  408070:	int3   
  408071:	(bad)  
  408072:	cli    
  408073:	cmp    BYTE PTR [edx],ch
  408075:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408076:	dec    ebx
  408077:	push   esi
  408078:	(bad)
  40807b:	or     eax,0xea3fedbe
  408080:	cmp    al,BYTE PTR [ecx+0xe]
  408083:	cdq    
  408084:	out    0x22,eax
  408086:	and    dl,al
  408088:	retf   
  408089:	mov    ecx,0xc60ffc14
  40808e:	mov    gs:0x7e4894e,al
  408094:	jno    0x4080bc
  408096:	outs   dx,BYTE PTR ds:[esi]
  408097:	adc    eax,0x6baadd86
  40809c:	pop    edx
  40809d:	cmp    DWORD PTR [ebx-0x69],esp
  4080a0:	inc    ebx
  4080a1:	xchg   esi,eax
  4080a2:	cmp    al,0x53
  4080a4:	ret    
  4080a5:	outs   dx,DWORD PTR ds:[esi]
  4080a6:	cmp    eax,0xad968ed3
  4080ab:	mov    al,0x98
  4080ad:	push   ebx
  4080ae:	mov    ds:0x47c71bf9,eax
  4080b3:	pop    ss
  4080b4:	repnz cli 
  4080b6:	dec    edi
  4080b7:	push   ss
  4080b8:	jle    0x4080b0
  4080ba:	xchg   esp,eax
  4080bb:	jmp    0x8a64:0x1b0908cf
  4080c2:	fdivr  DWORD PTR [eax-0x26]
  4080c5:	retf   
  4080c6:	push   edi
  4080c7:	aad    0x47
  4080c9:	add    eax,0xe771ff17
  4080ce:	rcl    DWORD PTR [esi+0x7],1
  4080d1:	ficomp DWORD PTR [ebp-0x29]
  4080d4:	lds    ebp,FWORD PTR [esp+eax*2]
  4080d7:	neg    BYTE PTR [edi]
  4080d9:	ins    DWORD PTR es:[edi],dx
  4080da:	add    ebx,DWORD PTR [edi-0x1dbd4539]
  4080e0:	les    eax,FWORD PTR [eax+0x66]
  4080e3:	gs pop ds
  4080e5:	or     BYTE PTR [ebp+0x5b9213d8],0x29
  4080ec:	rol    eax,1
  4080ee:	inc    esp
  4080ef:	clc    
  4080f0:	imul   eax,DWORD PTR [edx-0x294e5d84],0xffffffe9
  4080f7:	imul   ebp,DWORD PTR [edx+0x74],0xb36b652e
  4080fe:	out    0xb1,al
  408100:	push   0xffffffbf
  408102:	xchg   edx,eax
  408103:	loope  0x40809d
  408105:	inc    ebx
  408106:	push   edi
  408107:	dec    edi
  408108:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408109:	sti    
  40810a:	cdq    
  40810b:	mov    BYTE PTR [edi-0xa],al
  40810e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40810f:	dec    esi
  408110:	ss sub al,0x78
  408113:	mov    ch,0x16
  408115:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408116:	ins    DWORD PTR es:[edi],dx
  408117:	aaa    
  408118:	inc    BYTE PTR [ecx]
  40811a:	jle    0x4080c0
  40811c:	pop    es
  40811d:	sub    DWORD PTR [esi-0x35566692],ebp
  408123:	xchg   BYTE PTR [eax],ah
  408125:	rol    DWORD PTR [eax-0x75],1
  408128:	icebp  
  408129:	push   ebx
  40812a:	(bad)  
  40812b:	out    0x7,eax
  40812d:	pop    ebx
  40812e:	btc    DWORD PTR [eax],esp
  408131:	cmp    BYTE PTR [ebx+0x6c3eca1],ah
  408137:	add    DWORD PTR [esi+ebx*1-0xc],ebp
  40813b:	mov    ebx,0x37a4f8d1
  408140:	xor    DWORD PTR [ecx-0x55],eax
  408143:	jne    0x408109
  408145:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408146:	(bad)  
  408147:	(bad)
  40814a:	mov    ebp,0x3b87d2f5
  40814f:	loop   0x4080f7
  408151:	inc    edi
  408152:	fwait
  408153:	xchg   esp,eax
  408154:	out    dx,al
  408155:	jb     0x40812f
  408157:	loop   0x408130
  408159:	pop    edi
  40815a:	jle    0x408169
  40815c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40815d:	pop    ebp
  40815e:	shl    DWORD PTR [ecx+0x503163d4],0x71
  408165:	jns    0x4081d7
  408167:	or     eax,0x16edc437
  40816c:	and    ah,dl
  40816e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40816f:	and    DWORD PTR [eax+0xe55b5b1],ebx
  408175:	repnz adc al,BYTE PTR [esi]
  408178:	(bad)  
  408179:	in     al,0xd5
  40817b:	mov    BYTE PTR [ebp-0x7cb67b19],ch
  408181:	mov    edi,0x18d0e51e
  408186:	and    al,0x1e
  408188:	pop    ecx
  408189:	out    0x16,eax
  40818b:	out    dx,al
  40818c:	in     eax,0xea
  40818e:	ins    DWORD PTR es:[edi],dx
  40818f:	mov    DWORD PTR [ebx+0x5d],edx
  408192:	lock add DWORD PTR [ecx-0x40259679],esi
  408199:	xor    cl,BYTE PTR [edx-0x57c3eabc]
  40819f:	mov    DWORD PTR [esi+0x30],edx
  4081a2:	outs   dx,DWORD PTR ds:[esi]
  4081a3:	cmc    
  4081a4:	mov    edi,0xb54e2797
  4081a9:	jo     0x408222
  4081ab:	lds    esp,FWORD PTR [edx]
  4081ad:	xchg   esi,eax
  4081ae:	pop    ebx
  4081af:	cmp    bh,ah
  4081b1:	ins    DWORD PTR es:[edi],dx
  4081b2:	int3   
  4081b3:	repz sbb cl,BYTE PTR ds:[ecx+0x73385e42]
  4081bb:	fild   QWORD PTR [ebx-0x2ea68770]
  4081c1:	sub    DWORD PTR [ecx+esi*1+0x6f133a2a],0xf57e410f
  4081cc:	fsub   QWORD PTR [esi-0x1bb8542d]
  4081d2:	shl    DWORD PTR [ebx+eiz*4-0x56],1
  4081d6:	fstp   DWORD PTR [ebp+0x23]
  4081d9:	pop    es
  4081da:	mov    bl,0x30
  4081dc:	xchg   esp,eax
  4081dd:	ds pop sp
  4081e0:	dec    ebp
  4081e1:	jmp    0x2580:0x1c91a0be
  4081e8:	ror    BYTE PTR [esi-0xd],0x28
  4081ec:	repnz pusha 
  4081ee:	adc    eax,0xaef3f70c
  4081f3:	and    eax,0xfe2be568
  4081f8:	or     al,BYTE PTR [ebx+ebx*4-0x6b]
  4081fc:	pop    ds
  4081fd:	push   esi
  4081fe:	cdq    
  4081ff:	ss ins DWORD PTR es:[edi],dx
  408201:	stc    
  408202:	jae    0x4081f1
  408204:	mov    ebp,0x68d8a711
  408209:	sbb    al,0xd4
  40820b:	add    BYTE PTR [ecx-0x4f],cl
  40820e:	jmp    0x40819b
  408210:	pmullw mm5,mm3
  408213:	jmp    0xe7856e8
  408218:	stos   BYTE PTR es:[edi],al
  408219:	imul   eax,DWORD PTR [eax-0x3cf707e3],0x30
  408220:	and    al,0xcd
  408222:	dec    esi
  408223:	jmp    0x108e:0x9929e2d3
  40822a:	pop    edi
  40822b:	iret   
  40822c:	invd   
  40822e:	pop    ss
  40822f:	(bad)  
  408230:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408231:	mov    al,ds:0xeb7fe03e
  408236:	sub    DWORD PTR [edi-0x3e],esp
  408239:	push   eax
  40823a:	mov    dl,0x3b
  40823c:	rol    BYTE PTR [ebp+0x2d],0x31
  408240:	inc    edi
  408241:	or     DWORD PTR [edi-0x4e69c0df],ecx
  408247:	je     0x4081fc
  408249:	pop    ecx
  40824a:	jbe    0x4081f2
  40824c:	jl     0x40824c
  40824e:	and    esp,DWORD PTR ss:[ecx]
  408251:	cld    
  408252:	daa    
  408253:	pop    ecx
  408254:	inc    ecx
  408255:	jb     0x40822f
  408257:	cwde   
  408258:	stc    
  408259:	mov    bl,0xc4
  40825b:	pop    ds
  40825c:	and    eax,DWORD PTR [ebp+ecx*8-0x1e6c2c19]
  408263:	dec    esi
  408264:	out    0xe4,al
  408266:	fwait
  408267:	iret   
  408268:	repz (bad) [eax+0x21]
  40826c:	popa   
  40826d:	inc    edi
  40826e:	retf   0xe1a2
  408271:	adc    esi,DWORD PTR [esi+0x2d]
  408274:	mov    ds:0x57c11f55,eax
  408279:	ret    0x44bf
  40827c:	xor    al,bh
  40827e:	ret    0xbec5
  408281:	leave  
  408282:	jle    0x4082e2
  408284:	mov    al,ds:0xe0fe7252
  408289:	shr    BYTE PTR [ebx+0x74],cl
  40828c:	xor    DWORD PTR [ebp+0x7fa78538],0x57
  408293:	xlat   BYTE PTR ds:[ebx]
  408294:	bound  ebp,QWORD PTR [eax*4-0x1d410a32]
  40829b:	push   ebx
  40829c:	sbb    ebx,DWORD PTR [edi-0x3d745b5d]
  4082a2:	mov    esp,0x44b1a862
  4082a7:	bound  edi,QWORD PTR [edx]
  4082a9:	push   esi
  4082aa:	fmul   st(1),st
  4082ac:	push   esp
  4082ad:	leave  
  4082ae:	lea    ebp,[ebx]
  4082b0:	retf   0x12ea
  4082b3:	outs   dx,DWORD PTR ds:[esi]
  4082b4:	gs aam 0x5
  4082b7:	ins    BYTE PTR es:[edi],dx
  4082b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082b9:	ss xchg ecx,edx
  4082bc:	(bad)  
  4082bd:	scas   al,BYTE PTR es:[edi]
  4082be:	or     bh,BYTE PTR [eax+ecx*4+0x54]
  4082c2:	inc    esi
  4082c3:	jmp    0x26d5e30f
  4082c8:	sahf   
  4082c9:	sub    dh,cl
  4082cb:	mov    esi,0xae5874cb
  4082d0:	or     al,0xb9
  4082d2:	cld    
  4082d3:	test   DWORD PTR [edx+edx*2+0x5c],ebx
  4082d7:	and    ah,BYTE PTR [edi]
  4082d9:	cs inc ecx
  4082db:	mov    cl,0x17
  4082dd:	cld    
  4082de:	push   es
  4082df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082e0:	je     0x408345
  4082e2:	(bad)  
  4082e3:	dec    ebx
  4082e4:	mov    dh,0x5f
  4082e6:	xor    eax,0x7c40670f
  4082eb:	(bad)  
  4082ec:	jmp    0x7b2f23e6
  4082f1:	push   0xffffff93
  4082f3:	xor    ebx,DWORD PTR [edx-0x63d8b7e]
  4082f9:	cmp    dl,BYTE PTR [ecx]
  4082fb:	adc    BYTE PTR [eax],bh
  4082fd:	push   0xffffff97
  4082ff:	(bad)  
  408300:	fdiv   DWORD PTR [eax+0x13]
  408303:	popa   
  408304:	push   0xe5ba4c3d
  408309:	leave  
  40830a:	jnp    0x408342
  40830c:	jmp    0x6d76:0x9c92d9a1
  408313:	lods   eax,DWORD PTR ds:[esi]
  408314:	adc    eax,0x74012a9d
  408319:	xchg   ebx,eax
  40831a:	add    DWORD PTR [edx+0x66ebd4db],esp
  408320:	leave  
  408321:	jo     0x408315
  408323:	ins    BYTE PTR es:[edi],dx
  408324:	mov    bh,0x59
  408326:	(bad)  
  408327:	xchg   ecx,eax
  408328:	imul   ecx,DWORD PTR [esi-0x16dca529],0x6b
  40832f:	sbb    al,dh
  408331:	fnstenv [ecx-0x3b99bea2]
  408337:	jl     0x4082dd
  408339:	sbb    BYTE PTR [edx+0x1],cl
  40833c:	cmp    ebx,DWORD PTR [ecx+0x7ab64e28]
  408342:	stos   DWORD PTR es:[edi],eax
  408343:	jmp    0x197660f7
  408348:	je     0x408325
  40834a:	xlat   BYTE PTR ds:[ebx]
  40834b:	push   eax
  40834c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40834d:	stos   BYTE PTR es:[edi],al
  40834e:	adc    DWORD PTR [esi+0x7e],edx
  408351:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408352:	hlt    
  408353:	daa    
  408354:	adc    ah,BYTE PTR [eax]
  408356:	adc    DWORD PTR [eax+0x4d984880],ecx
  40835c:	pop    esi
  40835d:	or     al,0xd4
  40835f:	mov    bl,cl
  408361:	imul   eax,DWORD PTR cs:[ecx+0x4800c9ce],0x62
  408369:	dec    ebx
  40836a:	xchg   ecx,ecx
  40836c:	cmc    
  40836d:	sbb    DWORD PTR [edx+ebx*1-0x2a7b17f5],ebx
  408374:	outs   dx,DWORD PTR ds:[esi]
  408375:	jge    0x4083a3
  408377:	inc    edx
  408378:	pop    edx
  408379:	stos   DWORD PTR es:[edi],eax
  40837a:	popw   ds
  40837c:	cwde   
  40837d:	jns    0x40836b
  40837f:	aad    0x29
  408381:	sub    eax,0xd3cfb5b1
  408386:	cmp    BYTE PTR [ebx-0x3e],0x5
  40838a:	(bad)  
  40838b:	and    esi,DWORD PTR [eax+0xd]
  40838e:	cmp    DWORD PTR [edx+0x66],ecx
  408391:	aad    0x13
  408393:	inc    edx
  408394:	xor    DWORD PTR [edx-0x5e],esi
  408397:	jno    0x4083e1
  408399:	neg    BYTE PTR [ebp+edi*8-0x6532ce37]
  4083a0:	stos   DWORD PTR es:[edi],eax
  4083a1:	fnstsw WORD PTR ss:[ebp-0x231e553c]
  4083a8:	aaa    
  4083a9:	popfw  
  4083ab:	push   ebp
  4083ac:	jmp    0x408407
  4083ae:	xchg   edi,eax
  4083af:	js     0x40837f
  4083b1:	or     ah,dl
  4083b3:	stc    
  4083b4:	and    ecx,eax
  4083b6:	sahf   
  4083b7:	mov    ebx,0xf943e6db
  4083bc:	stos   DWORD PTR es:[edi],eax
  4083bd:	imul   ecx,edi,0x555ffc35
  4083c3:	mov    esp,0x1765c563
  4083c8:	int    0xd1
  4083ca:	mov    esp,0xd4221778
  4083cf:	add    ch,bl
  4083d1:	jg     0x408391
  4083d3:	and    BYTE PTR [edx],0x73
  4083d6:	inc    ecx
  4083d7:	pop    esi
  4083d8:	imul   edx,DWORD PTR [esi],0xffffffd1
  4083db:	in     eax,0xf6
  4083dd:	fild   QWORD PTR [ebx-0x5b]
  4083e0:	fmul   st,st(1)
  4083e2:	or     ebx,esp
  4083e4:	and    eax,0x29881aa
  4083e9:	lahf   
  4083ea:	xor    BYTE PTR [edx+0x6e],0x0
  4083ee:	add    al,0x4d
  4083f0:	arpl   WORD PTR [edi+0x3],sp
  4083f3:	push   esi
  4083f4:	jo     0x408436
  4083f6:	xlat   BYTE PTR ds:[ebx]
  4083f7:	sbb    eax,ebx
  4083f9:	(bad)  
  4083fa:	sbb    DWORD PTR [ebp-0x57],eax
  4083fd:	add    BYTE PTR [ebp-0x45],0xd6
  408401:	dec    ebp
  408402:	mov    ch,0x7a
  408404:	bswap  edx
  408406:	xchg   esp,eax
  408407:	jp     0x4083b3
  408409:	jno    0x4083bd
  40840b:	shr    ah,cl
  40840d:	arpl   WORD PTR [esp+0x3a],dx
  408411:	loop   0x408441
  408413:	das    
  408414:	add    al,0x5b
  408416:	jne    0x408408
  408418:	or     eax,0x6f958147
  40841d:	test   DWORD PTR [ecx],ebx
  40841f:	in     al,dx
  408420:	sbb    al,0xc0
  408422:	pusha  
  408423:	pop    ebp
  408424:	jne    0x40849e
  408426:	pop    esi
  408427:	(bad)  
  408428:	lds    eax,FWORD PTR [esi]
  40842a:	bnd gs jg 0x40844b
  40842e:	add    BYTE PTR [eax],0x0
  408431:	push   eax
  408432:	push   0xfffffff1
  408434:	or     al,0xf4
  408436:	add    BYTE PTR [ebp+edi*4+0x3d],bh
  40843a:	mov    ebx,DWORD PTR [edi-0x7]
  40843d:	cmp    eax,0x9b8e2711
  408442:	mov    cl,BYTE PTR ds:0x5f9145dc
  408448:	or     al,0x8
  40844a:	mov    dh,0x91
  40844c:	push   ecx
  40844d:	leave  
  40844e:	cdq    
  40844f:	cmc    
  408450:	retf   
  408451:	jp     0x4084a9
  408453:	sahf   
  408454:	mov    edi,DWORD PTR [edx*1+0x54d9bde2]
  40845b:	(bad)  
  40845c:	mov    fs,WORD PTR [ecx]
  40845e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40845f:	inc    eax
  408460:	add    eax,DWORD PTR [edi-0x51]
  408463:	out    0x17,eax
  408465:	loop   0x408451
  408467:	cmp    BYTE PTR [ebx-0x5e525fb3],dl
  40846d:	popf   
  40846e:	fbld   TBYTE PTR [eax]
  408470:	clc    
  408471:	nop
  408472:	pop    esi
  408473:	lock rcr DWORD PTR cs:0xa606788e,cl
  40847b:	mov    DWORD PTR [ebp+0x13],edx
  40847e:	xchg   esp,eax
  40847f:	popf   
  408480:	leave  
  408481:	jl     0x408485
  408483:	call   0x7009:0xd0bb70c6
  40848a:	repnz push esi
  40848c:	add    DWORD PTR [eax+0x60],esp
  40848f:	mov    al,0xe0
  408491:	into   
  408492:	pop    ebx
  408493:	mov    dl,0xee
  408495:	mov    bl,0xc
  408497:	mov    esi,0x4719b3e2
  40849c:	mov    al,0xa0
  40849e:	fldcw  WORD PTR [esi+0x6e]
  4084a1:	push   ebp
  4084a2:	push   edi
  4084a3:	jecxz  0x40843d
  4084a5:	jecxz  0x408502
  4084a7:	jae    0x4084be
  4084a9:	cdq    
  4084aa:	test   eax,0x243aafe1
  4084af:	stos   DWORD PTR es:[edi],eax
  4084b0:	push   es
  4084b1:	jno    0x408447
  4084b3:	adc    al,0x3e
  4084b5:	sub    DWORD PTR [eax],0xffffffbd
  4084b8:	cwde   
  4084b9:	enter  0xc57,0x96
  4084bd:	dec    eax
  4084be:	mov    ecx,0xeecbcd2f
  4084c3:	add    eax,DWORD PTR [edx+0xe2d0131]
  4084c9:	mov    eax,0x8fb3403f
  4084ce:	int    0x58
  4084d0:	push   es
  4084d1:	jmp    0x4e8bffb6
  4084d6:	jo     0x408465
  4084d8:	(bad)
  4084dc:	mov    ah,0x6c
  4084de:	outs   dx,BYTE PTR ds:[esi]
  4084df:	sbb    ecx,ebp
  4084e1:	mul    DWORD PTR [ecx]
  4084e3:	ret    0x754c
  4084e6:	pusha  
  4084e7:	js     0x408534
  4084e9:	idiv   DWORD PTR [ecx]
  4084eb:	imul   edi,DWORD PTR [eax-0x3ce76b66],0x7b4c6b5
  4084f5:	mov    eax,0xcd182263
  4084fa:	cli    
  4084fb:	xrelease mov BYTE PTR [edx+ebx*1],al
  4084ff:	mov    eax,DWORD PTR [ebp-0x40]
  408502:	mov    edx,DWORD PTR [ebp-0x28]
  408505:	xor    eax,esi
  408507:	xor    edx,esi
  408509:	add    eax,edi
  40850b:	add    edx,edi
  40850d:	imul   eax,edx
  408510:	add    eax,DWORD PTR [ebp-0xc]
  408513:	mov    DWORD PTR [ebp-0xc],eax
  408516:	mov    eax,DWORD PTR [ebp-0xc]
  408519:	mov    edx,DWORD PTR [ebp-0x18]
  40851c:	cmp    edx,eax
  40851e:	jb     0x406080
  408524:	mov    eax,DWORD PTR [ebp-0x28]
  408527:	mov    edx,DWORD PTR [ebp-0x18]
  40852a:	xor    eax,esi
  40852c:	add    eax,edi
  40852e:	imul   eax,edx
  408531:	mov    edx,DWORD PTR [ebp-0x1c]
  408534:	xor    edx,esi
  408536:	add    edx,edi
  408538:	or     eax,edx
  40853a:	mov    edx,DWORD PTR [ebp-0x20]
  40853d:	xor    edx,esi
  40853f:	add    eax,edx
  408541:	mov    edx,DWORD PTR [ebp-0x20]
  408544:	xor    edx,esi
  408546:	add    eax,edx
  408548:	mov    edx,DWORD PTR [ebp-0x10]
  40854b:	lea    eax,[eax+edx*1+0x64e5e6]
  408552:	jmp    0x408566
  408557:	mov    eax,DWORD PTR [ebp-0x20]
  40855a:	mov    edx,DWORD PTR [ebp-0x10]
  40855d:	xor    eax,esi
  40855f:	lea    eax,[eax+edx*1+0x3272f3]
  408566:	mov    DWORD PTR [ebp-0x10],eax
  408569:	jmp    0x403c1c
  40856e:	mov    ebx,DWORD PTR [ebp-0x3c]
  408571:	mov    eax,DWORD PTR [ebp+0xc]
  408574:	xor    eax,esi
  408576:	lea    ecx,[ecx+eax*1+0x3272f3]
  40857d:	lea    eax,[ecx-0x3272f3]
  408583:	xor    eax,esi
  408585:	cmp    eax,0xf89c95a1
  40858a:	jne    0x403bc0
  408590:	dec    DWORD PTR [ebp-0x34]
  408593:	jne    0x403bb4
  408599:	mov    eax,DWORD PTR [ebp+0x8]
  40859c:	mov    ecx,DWORD PTR [ebp+0xc]
  40859f:	mov    edx,DWORD PTR [ebp+0x8]
  4085a2:	xor    ecx,esi
  4085a4:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f3]
  4085ab:	xor    eax,esi
  4085ad:	mov    al,BYTE PTR [eax+ebx*1+0x3272f3]
  4085b4:	xor    edx,esi
  4085b6:	mov    BYTE PTR [edx+ebx*1+0x3272f3],cl
  4085bd:	mov    ecx,DWORD PTR [ebp+0xc]
  4085c0:	xor    ecx,esi
  4085c2:	mov    BYTE PTR [ecx+ebx*1+0x3272f3],al
  4085c9:	mov    eax,DWORD PTR [ebp+0xc]
  4085cc:	xor    eax,esi
  4085ce:	add    eax,edi
  4085d0:	pop    edi
  4085d1:	pop    esi
  4085d2:	pop    ebx
  4085d3:	leave  
  4085d4:	ret    0x8
  4085d7:	xor    eax,eax
  4085d9:	and    DWORD PTR ds:0x4291db,0x42914b
  4085e3:	inc    eax
  4085e4:	ret    
  4085e5:	push   ebp
  4085e6:	mov    ebp,esp
  4085e8:	sub    esp,0x38
  4085eb:	and    DWORD PTR ds:0x429167,0x0
  4085f5:	mov    eax,ds:0x429167
  4085fa:	inc    eax
  4085fb:	mov    ds:0x429167,eax
  408600:	cmp    DWORD PTR ds:0x429167,0x23
  408607:	jle    0x408625
  40860d:	jmp    0x408618
  408612:	call   DWORD PTR ds:0x42a65b
  408618:	cmp    DWORD PTR ds:0x429167,0x1d
  40861f:	jb     0x4085f5
  408625:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  40862c:	push   ebx
  40862d:	adc    DWORD PTR ds:0x4291ef,ecx
  408633:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  40863a:	sub    DWORD PTR ds:0x429167,0x723d
  408644:	mov    eax,DWORD PTR [ebp-0x4]
  408647:	push   esi
  408648:	mov    esi,0x75108ac
  40864d:	adc    DWORD PTR ds:0x429153,0x4291d3
  408657:	xor    eax,esi
  408659:	push   edi
  40865a:	and    DWORD PTR ds:0x42915f,0x0
  408664:	jmp    0x408676
  408669:	mov    edi,DWORD PTR ds:0x42915f
  40866f:	inc    edi
  408670:	mov    DWORD PTR ds:0x42915f,edi
  408676:	cmp    DWORD PTR ds:0x42915f,0x18
  40867d:	jae    0x4086c6
  408683:	cmp    DWORD PTR ds:0x42915f,0xb
  40868a:	jg     0x4086c6
  408690:	jmp    0x4086a5
  408695:	push   0x4291bf
  40869a:	push   0x428022
  40869f:	call   DWORD PTR ds:0x42a65f
  4086a5:	cmp    DWORD PTR ds:0x42915f,0xa
  4086ac:	jne    0x4086c1
  4086b2:	xor    edi,edi
  4086b4:	or     edi,DWORD PTR ds:0x42915f
  4086ba:	inc    edi
  4086bb:	mov    DWORD PTR ds:0x42915f,edi
  4086c1:	jmp    0x408669
  4086c6:	mov    edi,0x3272f3
  4086cb:	or     DWORD PTR ds:0x429173,0x4291df
  4086d5:	add    eax,edi
  4086d7:	and    DWORD PTR ds:0x4291cb,0x4291b7
  4086e1:	mov    DWORD PTR [ebp-0x1c],eax
  4086e4:	mov    eax,DWORD PTR [ebp+0x14]
  4086e7:	add    DWORD PTR ds:0x42919b,0xffd
  4086f1:	test   eax,eax
  4086f3:	mov    DWORD PTR ds:0x4291c7,0x550e
  4086fd:	je     0x408761
  408703:	mov    DWORD PTR ds:0x4291c3,0x10
  40870d:	cmp    DWORD PTR ds:0x4291c3,0x0
  408714:	je     0x408749
  40871a:	cmp    DWORD PTR ds:0x4291c3,0x1a
  408721:	jle    0x408749
  408727:	jmp    0x408737
  40872c:	push   0x8b39
  408731:	call   DWORD PTR ds:0x42a663
  408737:	mov    ebx,DWORD PTR ds:0x4291c3
  40873d:	dec    ebx
  40873e:	mov    DWORD PTR ds:0x4291c3,ebx
  408744:	jmp    0x40870d
  408749:	mov    eax,DWORD PTR [ebp+0x14]
  40874c:	sbb    DWORD PTR ds:0x4291db,ebx
  408752:	mov    eax,DWORD PTR [eax]
  408754:	add    DWORD PTR ds:0x4291b3,0x4291cf
  40875e:	mov    DWORD PTR [ebp-0x1c],eax
  408761:	mov    eax,DWORD PTR [ebp-0x4]
  408764:	xor    eax,esi
  408766:	xor    DWORD PTR ds:0x429193,edi
  40876c:	add    eax,edi
  40876e:	and    ebx,DWORD PTR ds:0x42918b
  408774:	mov    DWORD PTR [ebp-0x8],eax
  408777:	mov    eax,DWORD PTR [ebp-0xc]
  40877a:	and    ebx,DWORD PTR ds:0x4291f3
  408780:	xor    eax,esi
  408782:	mov    ebx,DWORD PTR ds:0x429167
  408788:	and    ebx,DWORD PTR ds:0x4291b7
  40878e:	mov    DWORD PTR ds:0x429167,ebx
  408794:	add    eax,edi
  408796:	sbb    ebx,0x2c4d
  40879c:	mov    DWORD PTR [ebp-0x24],eax
  40879f:	mov    eax,DWORD PTR [ebp-0x4]
  4087a2:	xor    eax,esi
  4087a4:	mov    ebx,DWORD PTR ds:0x42919b
  4087aa:	or     ebx,DWORD PTR ds:0x429183
  4087b0:	mov    DWORD PTR ds:0x42919b,ebx
  4087b6:	add    eax,edi
  4087b8:	or     DWORD PTR ds:0x4291df,edx
  4087be:	mov    DWORD PTR [ebp-0x30],eax
  4087c1:	or     DWORD PTR ds:0x42914b,0x176b
  4087cb:	mov    ebx,DWORD PTR [ebp-0x4]
  4087ce:	xor    ebx,esi
  4087d0:	mov    eax,ds:0x429173
  4087d5:	xor    eax,DWORD PTR ds:0x42916f
  4087db:	mov    ds:0x429173,eax
  4087e0:	add    ebx,edi
  4087e2:	mov    eax,DWORD PTR [ebp-0x24]
  4087e5:	sub    eax,edi
  4087e7:	sbb    DWORD PTR ds:0x429157,0x4291c7
  4087f1:	lea    ecx,[ebx-0x3272f3]
  4087f7:	xor    eax,esi
  4087f9:	xor    DWORD PTR ds:0x4291bb,0x42917b
  408803:	xor    ecx,esi
  408805:	mov    DWORD PTR ds:0x429153,0x47e0
  40880f:	cmp    ecx,eax
  408811:	mov    DWORD PTR ds:0x429187,0x3279
  40881b:	je     0x40d27b
  408821:	xor    DWORD PTR ds:0x42915b,0x508b
  40882b:	mov    eax,DWORD PTR [ebp-0x4]
  40882e:	sub    DWORD PTR ds:0x42919b,0x58b3
  408838:	xor    eax,esi
  40883a:	adc    DWORD PTR ds:0x429173,0x4291f7
  408844:	add    eax,edi
  408846:	cmp    ebx,eax
  408848:	mov    DWORD PTR ds:0x42915f,0x75e2
  408852:	jne    0x40adc2
  408858:	push   DWORD PTR [ebp+0x8]
  40885b:	call   0x424151
  408860:	mov    DWORD PTR [ebp-0x14],eax
  408863:	not    eax
  408865:	mov    eax,DWORD PTR [ebp-0x4]
  408868:	adc    DWORD PTR ds:0x429153,0x66a3
  408872:	mov    ecx,DWORD PTR [ebp-0x14]
  408875:	add    DWORD PTR ds:0x4291af,0x7712
  40887f:	xor    eax,esi
  408881:	add    eax,edi
  408883:	mov    DWORD PTR ds:0x4291cb,0x7d26
  40888d:	cmp    ecx,eax
  40888f:	mov    DWORD PTR ds:0x42916f,0x6080
  408899:	je     0x40d2e6
  40889f:	push   DWORD PTR [ebp-0x14]
  4088a2:	sbb    DWORD PTR ds:0x4291c3,0x2326
  4088ac:	push   DWORD PTR [ebp+0x8]
  4088af:	call   0x424291
  4088b4:	mov    DWORD PTR [ebp-0x14],eax
  4088b7:	xor    DWORD PTR ds:0x42919f,edx
  4088bd:	mov    eax,DWORD PTR [ebp-0x4]
  4088c0:	xor    DWORD PTR ds:0x42918f,ecx
  4088c6:	mov    ecx,DWORD PTR [ebp-0x14]
  4088c9:	xor    eax,esi
  4088cb:	add    eax,edi
  4088cd:	mov    DWORD PTR ds:0x42917b,0x355b
  4088d7:	cmp    ecx,eax
  4088d9:	mov    DWORD PTR ds:0x429157,0x7399
  4088e3:	je     0x40d2e6
  4088e9:	mov    eax,DWORD PTR [ebp-0x14]
  4088ec:	mov    eax,DWORD PTR [eax+0x18]
  4088ef:	and    DWORD PTR ds:0x4291f3,0x0
  4088f9:	jmp    0x40890b
  4088fe:	mov    ecx,DWORD PTR ds:0x4291f3
  408904:	inc    ecx
  408905:	mov    DWORD PTR ds:0x4291f3,ecx
  40890b:	cmp    DWORD PTR ds:0x4291f3,0x1b
  408912:	jae    0x40895e
  408918:	cmp    DWORD PTR ds:0x4291f3,0xc
  40891f:	ja     0x40895e
  408925:	jmp    0x40893f
  40892a:	push   0x429197
  40892f:	push   0x429187
  408934:	push   0x5f54
  408939:	call   DWORD PTR ds:0x42a66b
  40893f:	cmp    DWORD PTR ds:0x4291f3,0xb
  408946:	jne    0x408959
  40894c:	mov    ecx,DWORD PTR ds:0x4291f3
  408952:	inc    ecx
  408953:	mov    DWORD PTR ds:0x4291f3,ecx
  408959:	jmp    0x4088fe
  40895e:	mov    DWORD PTR [ebp-0x24],eax
  408961:	xor    DWORD PTR ds:0x42916f,ebx
  408967:	mov    eax,DWORD PTR [ebp-0x14]
  40896a:	and    DWORD PTR ds:0x42916b,0x0
  408974:	jmp    0x408986
  408979:	mov    ecx,DWORD PTR ds:0x42916b
  40897f:	inc    ecx
  408980:	mov    DWORD PTR ds:0x42916b,ecx
  408986:	cmp    DWORD PTR ds:0x42916b,0x1c
  40898d:	jae    0x4089b3
  408993:	cmp    DWORD PTR ds:0x42916b,0x2a
  40899a:	jge    0x4089b3
  4089a0:	jmp    0x4089ae
  4089a5:	push   DWORD PTR [ebp-0x14]
  4089a8:	call   DWORD PTR ds:0x42a633
  4089ae:	jmp    0x408979
  4089b3:	mov    ecx,DWORD PTR [ebp+0x8]
  4089b6:	add    ecx,DWORD PTR [eax+0x20]
  4089b9:	sbb    DWORD PTR ds:0x429183,0x7fc6
  4089c3:	mov    DWORD PTR [ebp-0x2c],ecx
  4089c6:	mov    eax,DWORD PTR [ebp-0x14]
  4089c9:	mov    ecx,DWORD PTR [ebp+0x8]
  4089cc:	sbb    DWORD PTR ds:0x4291ef,0x4291eb
  4089d6:	add    ecx,DWORD PTR [eax+0x24]
  4089d9:	or     DWORD PTR ds:0x4291ef,0x4291f3
  4089e3:	mov    DWORD PTR [ebp-0x34],ecx
  4089e6:	jmp    0x40ad9a
  4089eb:	push   ecx
  4089ec:	mov    dl,BYTE PTR [ecx+esi*1]
  4089ef:	and    BYTE PTR [ecx+0x58598a50],0x67
  4089f6:	test   BYTE PTR [eax],bh
  4089f8:	xchg   esp,eax
  4089f9:	imul   ecx
  4089fb:	(bad)  
  4089fc:	adc    eax,0x5ce88383
  408a01:	add    DWORD PTR [ebx-0x2f69b675],0x29
  408a08:	rcr    BYTE PTR [edx+0x36fbd75],1
  408a0e:	mov    ch,0xfe
  408a10:	mov    ch,0x76
  408a12:	(bad)  
  408a13:	adc    edi,DWORD PTR [eax+0x66fa8ec2]
  408a19:	add    BYTE PTR [eax],0x6b
  408a1c:	call   0xcc85:0x1ae411a5
  408a23:	dec    eax
  408a24:	cmp    edx,DWORD PTR [ebp+esi*1-0x1a]
  408a28:	xchg   esi,eax
  408a29:	sub    ch,BYTE PTR [ebp-0x669fa026]
  408a2f:	and    dh,BYTE PTR [ecx+0x72035b66]
  408a35:	dec    eax
  408a36:	nop
  408a37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a38:	into   
  408a39:	jecxz  0x4089c8
  408a3b:	jmp    0xa2fa18a1
  408a40:	clc    
  408a41:	and    BYTE PTR [eax-0x25],0x42
  408a45:	push   ebp
  408a46:	out    0xb6,al
  408a48:	xchg   DWORD PTR [esi-0x27],ebx
  408a4b:	lock imul BYTE PTR ds:0xfaa4e3d7
  408a52:	mov    cl,0x4a
  408a54:	jp     0x4089e9
  408a56:	aaa    
  408a57:	loopne 0x408ace
  408a59:	mov    edx,0x6ae8b7f0
  408a5e:	jns    0x408aa7
  408a60:	add    eax,0x92123709
  408a65:	push   ecx
  408a66:	jmp    0xf65bce3b
  408a6b:	sub    eax,0x20768d72
  408a70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a71:	mov    WORD PTR [ecx-0x62],ds
  408a74:	mov    ch,0xde
  408a76:	nop
  408a77:	out    dx,eax
  408a78:	addr16 js 0x408ad1
  408a7b:	xor    bh,BYTE PTR [edx]
  408a7d:	push   es
  408a7e:	push   ss
  408a7f:	jle    0x408a7a
  408a81:	ret    
  408a82:	dec    esi
  408a83:	out    0x12,al
  408a85:	xor    eax,0x49d0c256
  408a8a:	cmc    
  408a8b:	adc    DWORD PTR [edi],esp
  408a8d:	sbb    bl,bh
  408a8f:	cmp    al,0xea
  408a91:	ficom  DWORD PTR [eax]
  408a93:	jo     0x408a53
  408a95:	and    DWORD PTR [eax],ebp
  408a97:	pusha  
  408a98:	sbb    BYTE PTR [eax+0x40],cl
  408a9b:	xchg   ecx,eax
  408a9c:	xchg   DWORD PTR [eax-0x46],ebp
  408a9f:	xchg   esi,eax
  408aa0:	dec    ecx
  408aa1:	or     esp,DWORD PTR [edx+ebp*4+0x39]
  408aa5:	cmc    
  408aa6:	jmp    0x36cc:0xd3dbf76d
  408aad:	(bad)  
  408aae:	(bad)  
  408ab0:	into   
  408ab1:	adc    DWORD PTR [ebp-0x31cc748f],edx
  408ab7:	mov    dh,0x2b
  408ab9:	pop    esp
  408aba:	pop    ebx
  408abb:	add    DWORD PTR [ecx+esi*2],esp
  408abe:	sbb    BYTE PTR [ebx+ecx*1-0x191d5395],0xb9
  408ac6:	(bad)  
  408ac7:	cwde   
  408ac8:	ds and bl,dh
  408acb:	fldcw  WORD PTR [esp+ebp*1-0x2b]
  408acf:	test   DWORD PTR [edx+0x22],ebp
  408ad2:	add    eax,0xb1b42da3
  408ad7:	xor    DWORD PTR [eax+edx*8+0x7a],ecx
  408adb:	or     al,0x8
  408add:	lds    esi,FWORD PTR [si+0x16f7]
  408ae2:	cli    
  408ae3:	loopne 0x408af4
  408ae5:	mov    eax,0x6ed85805
  408aea:	fsubr  st,st(7)
  408aec:	xor    dh,dl
  408aee:	loopne 0x408a7e
  408af0:	adc    DWORD PTR [eax-0x748689d4],eax
  408af6:	sbb    eax,0xcd0d0d10
  408afb:	sbb    dl,BYTE PTR [edx]
  408afd:	and    cl,BYTE PTR [esi]
  408aff:	ror    BYTE PTR [esi+0xa8c4925],1
  408b05:	rcl    BYTE PTR [edi+0xb],cl
  408b08:	mov    ebx,0x71f06d
  408b0d:	cwde   
  408b0e:	ret    0x65a7
  408b11:	or     al,0x4b
  408b13:	inc    esp
  408b14:	sbb    eax,ecx
  408b16:	push   ebx
  408b17:	mov    esp,0x12386330
  408b1c:	xor    BYTE PTR [edx],bl
  408b1e:	cmp    BYTE PTR [edx+0x7a],0x50
  408b22:	pop    es
  408b23:	cld    
  408b24:	add    al,0x36
  408b26:	mov    bh,0x19
  408b28:	test   eax,0xd04e427f
  408b2d:	cmc    
  408b2e:	cmp    esp,DWORD PTR [edi-0x7bfcc3fa]
  408b34:	pop    esp
  408b35:	mov    ecx,0xba08772e
  408b3a:	mov    ds:0x81a387fa,eax
  408b3f:	push   edx
  408b40:	(bad)  
  408b41:	sbb    esi,edi
  408b43:	inc    esp
  408b44:	cmp    al,BYTE PTR [edi+esi*4-0x77a96b1a]
  408b4b:	pop    edi
  408b4c:	std    
  408b4d:	add    al,BYTE PTR [edx]
  408b4f:	pop    DWORD PTR [edi+0x13]
  408b52:	loop   0x408afc
  408b54:	and    ecx,ecx
  408b56:	pop    esi
  408b57:	and    eax,0xc470edc0
  408b5c:	inc    edi
  408b5d:	push   ebx
  408b5e:	aam    0xf2
  408b60:	ds dec edx
  408b62:	inc    esp
  408b63:	mov    cl,0xc3
  408b65:	push   esi
  408b66:	dec    edx
  408b67:	cmp    ah,ch
  408b69:	rcr    BYTE PTR [edx+0x4acefb8e],1
  408b6f:	cmc    
  408b70:	dec    edi
  408b71:	jo     0x408bb2
  408b73:	xchg   BYTE PTR [eax],ah
  408b75:	in     al,dx
  408b76:	push   ebx
  408b77:	sub    BYTE PTR [edi],0xad
  408b7a:	and    al,0x19
  408b7d:	(bad)  
  408b7e:	shl    BYTE PTR [ebx+0x69],1
  408b81:	mov    ah,0xd1
  408b83:	in     eax,0x11
  408b85:	sahf   
  408b86:	dec    ecx
  408b87:	add    DWORD PTR [ebp+0x8],ecx
  408b8a:	les    esi,FWORD PTR [ebp-0x71]
  408b8d:	xlat   BYTE PTR ds:[ebx]
  408b8e:	call   0x26f3c0dc
  408b93:	push   ecx
  408b94:	xchg   BYTE PTR [ecx],al
  408b96:	loope  0x408b5d
  408b98:	sub    BYTE PTR [ebp-0x36],cl
  408b9b:	xor    BYTE PTR [ebx],0x4a
  408b9e:	cs and eax,0x50d9657d
  408ba4:	xchg   ebp,eax
  408ba5:	outs   dx,DWORD PTR ds:[esi]
  408ba6:	add    esi,DWORD PTR [esi-0x6f4e8012]
  408bac:	sub    eax,0x3f384338
  408bb1:	sbb    dl,BYTE PTR [ebp-0x51]
  408bb4:	mov    eax,ds:0xfd5b8718
  408bb9:	xlat   BYTE PTR ds:[ebx]
  408bba:	test   al,0xc0
  408bbc:	popa   
  408bbd:	sbb    edi,eax
  408bbf:	xor    DWORD PTR [ebx],ebp
  408bc1:	daa    
  408bc2:	and    DWORD PTR [ecx-0x6539f2c5],esi
  408bc8:	les    ecx,FWORD PTR ds:0x36942173
  408bce:	(bad)  
  408bcf:	xchg   ebp,eax
  408bd0:	lods   eax,DWORD PTR ds:[esi]
  408bd1:	fisttp WORD PTR [ebx+0x12]
  408bd4:	addr16 mov dh,0xb5
  408bd7:	cmc    
  408bd8:	sub    ebx,DWORD PTR [ebx+0x31]
  408bdb:	inc    esi
  408bdc:	ffree  st(6)
  408bde:	imul   edi,DWORD PTR [edi+0x39e3cc06],0x1a
  408be5:	mov    DWORD PTR [edi+0xef7bfc3],ebx
  408beb:	sbb    ecx,eax
  408bed:	cwde   
  408bee:	jb     0x408b81
  408bf0:	xchg   ebx,eax
  408bf1:	pop    eax
  408bf2:	mov    dh,0xad
  408bf4:	pop    ebp
  408bf5:	mov    bl,0x5b
  408bf7:	mov    cl,0x61
  408bf9:	mov    edx,gs
  408bfb:	shl    esi,cl
  408bfd:	xchg   esp,eax
  408bfe:	xchg   edx,eax
  408bff:	icebp  
  408c00:	mov    bl,0xaf
  408c02:	or     al,0xc0
  408c04:	dec    edx
  408c05:	sub    dl,BYTE PTR fs:[esi]
  408c08:	inc    esi
  408c09:	jbe    0x408c71
  408c0b:	mov    edx,0x49f60eb0
  408c10:	sub    bh,BYTE PTR [edi]
  408c12:	int3   
  408c13:	jecxz  0x408bb9
  408c15:	es ins DWORD PTR es:[edi],dx
  408c17:	cmp    BYTE PTR [ecx-0xdeedcde],0x81
  408c1e:	packsswb mm0,mm4
  408c21:	jmp    0x408c2f
  408c23:	shr    BYTE PTR [ebx-0x476e5e22],1
  408c29:	cwde   
  408c2a:	dec    esp
  408c2b:	lods   eax,DWORD PTR ds:[esi]
  408c2c:	repz jmp 0xb2be:0x23140e78
  408c34:	cmp    al,0x64
  408c36:	or     BYTE PTR [eax],0x8
  408c39:	mov    al,ds:0xe832934b
  408c3e:	sar    BYTE PTR [esi-0x58f7ec51],1
  408c44:	sbb    BYTE PTR [ebx-0x77],dh
  408c47:	fs mov edx,esi
  408c4a:	stos   DWORD PTR es:[edi],eax
  408c4b:	lea    ebx,[edi+0x4a]
  408c4e:	out    0xa7,al
  408c50:	xchg   edi,eax
  408c51:	mov    DWORD PTR [ebx+ecx*1-0x20],ecx
  408c55:	int3   
  408c56:	enter  0xf6f8,0x55
  408c5a:	cdq    
  408c5b:	shl    BYTE PTR [ecx+0x633d3a36],cl
  408c61:	mov    edx,0xa1570515
  408c66:	(bad)  [eax+0x7b54b5d4]
  408c6c:	mov    ds:0x5718b643,eax
  408c71:	ret    0x1ad3
  408c74:	(bad)  
  408c75:	fadd   DWORD PTR [eax+0x2]
  408c78:	sub    BYTE PTR [ebp+0x72b27e3b],ah
  408c7e:	push   ebp
  408c7f:	cmp    al,0xfe
  408c81:	inc    eax
  408c82:	pop    edx
  408c83:	pop    edi
  408c84:	mov    al,0x6
  408c86:	ja     0x408c50
  408c88:	ret    
  408c89:	sub    edx,DWORD PTR [edi+0x25]
  408c8c:	or     DWORD PTR ds:0xf87b4c8e,ebx
  408c92:	ss loop 0x408cbe
  408c95:	(bad)
  408c98:	loopne 0x408c96
  408c9a:	mov    ebp,0x60b6411c
  408c9f:	pop    ecx
  408ca0:	xlat   BYTE PTR ds:[ebx]
  408ca1:	dec    esi
  408ca2:	sbb    BYTE PTR [esi+0x84b96b5],dl
  408ca8:	and    BYTE PTR [ecx+0x1eef0cb3],bl
  408cae:	or     al,0x9a
  408cb0:	dec    esi
  408cb1:	push   esi
  408cb2:	stos   DWORD PTR es:[edi],eax
  408cb3:	dec    eax
  408cb4:	jmp    0x408d12
  408cb6:	fs sub al,0x7e
  408cb9:	or     dh,BYTE PTR [ecx+0x560bb885]
  408cbf:	push   ss
  408cc0:	cmp    BYTE PTR [ebp+0x3],0x86
  408cc4:	push   cs
  408cc5:	or     al,0xdf
  408cc7:	ficom  WORD PTR ds:0x47146abf
  408ccd:	push   ebx
  408cce:	push   eax
  408ccf:	dec    edx
  408cd0:	or     DWORD PTR ds:0x3af1cbb7,0x23b4cda2
  408cda:	bound  eax,QWORD PTR [edi+ebx*2-0x4e]
  408cde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cdf:	pusha  
  408ce0:	pop    esp
  408ce1:	sahf   
  408ce2:	fwait
  408ce3:	popf   
  408ce4:	adc    DWORD PTR [ebx],esp
  408ce6:	jl     0x408ca8
  408ce8:	mul    ebx
  408cea:	int    0xcd
  408cec:	mov    edi,0xf5fe441
  408cf1:	sub    al,BYTE PTR [esi]
  408cf3:	and    DWORD PTR [edi-0x74d314ba],0x28
  408cfa:	and    DWORD PTR [ebp+0x7319d980],eax
  408d00:	inc    edi
  408d01:	(bad)  
  408d02:	ror    BYTE PTR [ebx+0x6b],cl
  408d05:	pusha  
  408d06:	mov    eax,ds:0x83721d15
  408d0b:	rcr    BYTE PTR [ebp-0x70],cl
  408d0e:	in     eax,0xf0
  408d10:	mov    es,WORD PTR [ebx+0x4a84855]
  408d16:	aaa    
  408d17:	mov    DWORD PTR [ecx],ebp
  408d19:	pop    edx
  408d1a:	xor    ebx,DWORD PTR [edx*2-0x141b57e7]
  408d21:	inc    esi
  408d22:	je     0x408d82
  408d24:	imul   eax,esi,0xbdbabb40
  408d2a:	mov    esp,0xc9e8dd0e
  408d2f:	gs in  eax,dx
  408d31:	mov    bh,0x78
  408d33:	loope  0x408d4a
  408d35:	mov    cl,0xf8
  408d37:	push   ebp
  408d38:	std    
  408d39:	dec    esp
  408d3a:	or     al,0xc
  408d3c:	mov    al,0x0
  408d3e:	sbb    BYTE PTR [esi-0x3e],dh
  408d41:	rol    DWORD PTR ds:0x2d633562,0x73
  408d48:	in     al,dx
  408d49:	inc    edi
  408d4a:	inc    ecx
  408d4b:	fidivr WORD PTR [ebp+0x65]
  408d4e:	ret    0x27b0
  408d51:	jns    0x408d98
  408d53:	lea    ebx,[ebx+0x18dd662f]
  408d59:	in     al,dx
  408d5a:	adc    eax,0x9f89bc88
  408d5f:	int3   
  408d60:	sub    eax,0x9a476041
  408d65:	aas    
  408d66:	test   edx,ecx
  408d68:	sar    DWORD PTR [ecx-0x44b1982a],0xc7
  408d6f:	mov    ds:0x6475c19d,eax
  408d74:	xor    eax,0x6f9255a4
  408d79:	aaa    
  408d7a:	pop    ss
  408d7b:	pop    ebx
  408d7c:	cmp    al,0xd9
  408d7e:	hlt    
  408d7f:	xchg   ecx,eax
  408d80:	pop    edx
  408d81:	xchg   ebx,eax
  408d82:	xor    esp,DWORD PTR [ecx+0x16]
  408d85:	xchg   esp,eax
  408d86:	imul   edi,DWORD PTR [esi+ebp*1+0x68],0xf
  408d8b:	pop    esi
  408d8c:	dec    edx
  408d8d:	repnz cli 
  408d8f:	jns    0x408ded
  408d91:	xor    ch,BYTE PTR [ebx*2+0x611dc0b7]
  408d98:	inc    ebp
  408d99:	lds    esp,FWORD PTR [eax-0x495d1535]
  408d9f:	add    esi,edx
  408da1:	popf   
  408da2:	xchg   al,al
  408da4:	loopne 0x408d74
  408da6:	stos   DWORD PTR es:[edi],eax
  408da7:	imul   esp,DWORD PTR [eax+0x14],0xf6f65f2b
  408dae:	sti    
  408daf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408db0:	jne    0x408ded
  408db2:	fdivp  st(0),st
  408db4:	push   ss
  408db5:	jecxz  0x408dbf
  408db7:	jle    0x408db7
  408db9:	(bad)
  408dbd:	mov    edx,0x225948ed
  408dc2:	mov    esi,0x73dde16a
  408dc7:	loopne 0x408d82
  408dc9:	mov    dl,0xd1
  408dcc:	mov    edi,0x34a360a1
  408dd1:	pop    edx
  408dd2:	xchg   ebx,eax
  408dd3:	jno    0x408e3d
  408dd5:	neg    BYTE PTR [edx]
  408dd7:	mov    cl,0x8c
  408dd9:	shl    BYTE PTR [eax],0xce
  408ddc:	or     al,0xb7
  408dde:	dec    eax
  408ddf:	sar    DWORD PTR [esi-0x2aaf80bf],cl
  408de5:	imul   eax,esi,0x6a65ed27
  408deb:	and    al,0x4f
  408ded:	fsubr  DWORD PTR [edx]
  408def:	jmp    0xd64a828f
  408df4:	ret    0x848
  408df7:	std    
  408df8:	xchg   edi,eax
  408df9:	repnz pop esi
  408dfb:	mov    BYTE PTR [ecx-0xfdbfab6],cl
  408e01:	ficom  DWORD PTR [edi-0x6d]
  408e04:	inc    esp
  408e05:	fist   DWORD PTR [eax+0x6d33ece5]
  408e0b:	and    eax,DWORD PTR [edx]
  408e0d:	dec    edx
  408e0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e0f:	xor    eax,0xddf2846
  408e14:	repz sub cl,BYTE PTR [edi]
  408e17:	(bad)  
  408e19:	xor    BYTE PTR [esi+0x64d63de3],dl
  408e1f:	fnsave [ecx+esi*4+0x544ea12c]
  408e26:	call   FWORD PTR [edx+ebx*2]
  408e29:	ret    0x88e3
  408e2c:	mov    ah,0x12
  408e2e:	fsubrp st(7),st
  408e30:	sbb    cl,BYTE PTR gs:[eax+ebx*2]
  408e34:	repnz xchg edx,eax
  408e36:	mov    bh,0xa7
  408e38:	(bad)  
  408e39:	mov    ds,edi
  408e3b:	mov    BYTE PTR [esi],bh
  408e3d:	icebp  
  408e3e:	fdivr  DWORD PTR [edx]
  408e40:	lods   eax,DWORD PTR ds:[esi]
  408e41:	dec    esi
  408e42:	mov    ebp,0xea97f8cc
  408e47:	xor    esi,DWORD PTR [ebx-0xcac2b21]
  408e4d:	inc    edx
  408e4e:	cdq    
  408e4f:	mov    bl,0x77
  408e51:	cmp    dh,BYTE PTR [edi]
  408e53:	je     0x408e81
  408e55:	jg     0x408e24
  408e57:	into   
  408e58:	mov    edi,0xe04c8928
  408e5d:	std    
  408e5e:	add    BYTE PTR [esi+0x1],0x7a
  408e62:	sub    bh,bh
  408e64:	test   DWORD PTR [ebp+ebp*1+0x34626432],esi
  408e6b:	sub    BYTE PTR [esi],ch
  408e6d:	xchg   DWORD PTR [edx-0xa],ebp
  408e70:	in     eax,0xb4
  408e72:	nop
  408e73:	rcl    BYTE PTR [ecx+0x28c8814],0x3d
  408e7a:	push   esi
  408e7b:	mov    edi,0x9b31edea
  408e80:	or     eax,0x80bcee1d
  408e85:	fwait
  408e86:	xchg   edx,eax
  408e87:	xor    BYTE PTR [eax-0x770225cf],dh
  408e8d:	fimul  DWORD PTR [edi-0x4370e54]
  408e93:	xor    DWORD PTR [ebx+0xd4f239f],esp
  408e99:	pop    es
  408e9a:	jmp    0x57c8ba87
  408e9f:	mov    ebx,0xaf7d9d85
  408ea4:	dec    edx
  408ea5:	xor    eax,0xdddf361c
  408eaa:	(bad)  [ebx]
  408eac:	mov    ds:0x812714e4,eax
  408eb1:	sbb    BYTE PTR [esi],0xff
  408eb4:	gs push cs
  408eb6:	pop    ds
  408eb7:	sub    bl,al
  408eb9:	ja     0x408efa
  408ebb:	mov    ecx,0x6d5011a8
  408ec0:	cmp    al,0x81
  408ec2:	sub    bh,BYTE PTR [ebp+0x7a]
  408ec5:	aas    
  408ec6:	sbb    al,0xe7
  408ec8:	jg     0x408ef0
  408eca:	call   0x587bd413
  408ecf:	pop    esi
  408ed0:	xor    eax,0xe98b1322
  408ed5:	cmp    ebp,DWORD PTR [ecx]
  408ed7:	jae    0x408eae
  408ed9:	test   DWORD PTR [eax-0x33],ebp
  408edc:	push   ebx
  408edd:	and    ah,cl
  408edf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ee0:	cmp    esp,DWORD PTR [ecx]
  408ee2:	les    ebx,FWORD PTR [edi+esi*8-0x26bf39b4]
  408ee9:	cmp    ecx,DWORD PTR [ecx-0x2f3e8020]
  408eef:	es add ebx,0x48
  408ef3:	fst    QWORD PTR [eax-0x66fc5dea]
  408ef9:	addr16 je 0x408eba
  408efc:	cdq    
  408efd:	stc    
  408efe:	(bad)
  408f01:	push   ebp
  408f02:	idiv   BYTE PTR [ebp+0x2bb24678]
  408f08:	pop    esi
  408f09:	fcmovnbe st,st(0)
  408f0b:	mov    cl,0x30
  408f0d:	test   BYTE PTR [ebp+0x50],ah
  408f10:	inc    ebp
  408f11:	adc    ebx,DWORD PTR fs:[ebx+0x67620b29]
  408f18:	neg    bh
  408f1a:	fidivr DWORD PTR [ecx-0x1e]
  408f1d:	mov    bh,0x39
  408f1f:	inc    eax
  408f20:	sbb    edi,ecx
  408f22:	add    BYTE PTR [ebp-0x1bc4084b],al
  408f28:	jb     0x408f88
  408f2a:	mov    bh,ah
  408f2c:	pop    eax
  408f2d:	sti    
  408f2e:	popf   
  408f2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f30:	in     eax,0x8d
  408f32:	or     esp,DWORD PTR [esi+0x38]
  408f35:	fidiv  WORD PTR [ebp-0x70]
  408f38:	jp     0x408f61
  408f3a:	test   BYTE PTR [ebp+0x54],bh
  408f3d:	(bad)  
  408f3e:	aaa    
  408f3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f40:	inc    ecx
  408f41:	push   esp
  408f42:	fimul  WORD PTR [edx-0x38b143dc]
  408f48:	push   es
  408f49:	outs   dx,DWORD PTR ds:[esi]
  408f4a:	push   esp
  408f4b:	mov    bh,BYTE PTR [esp+eax*2-0x2104d0fc]
  408f52:	mov    ebx,DWORD PTR [ebx+edi*2-0x6c5c8137]
  408f59:	mov    cl,0xab
  408f5b:	imul   esi,DWORD PTR [ebx-0x1101df8a],0x78
  408f62:	mov    esp,0x1c5b2671
  408f67:	arpl   WORD PTR [edx-0x2f],dx
  408f6a:	and    DWORD PTR [edi+eax*2-0x6f],ecx
  408f6e:	xchg   edx,eax
  408f6f:	cmp    DWORD PTR [edi],ebp
  408f71:	out    0x46,eax
  408f73:	sbb    eax,0x575dbc26
  408f78:	call   0xa74:0x5cd52a1
  408f7f:	in     eax,dx
  408f80:	in     eax,dx
  408f81:	inc    eax
  408f82:	bound  esp,QWORD PTR [eax+0x4f]
  408f85:	test   DWORD PTR [ebx+0x36],esp
  408f88:	lahf   
  408f89:	int    0x82
  408f8b:	mov    gs,WORD PTR [eax-0x12]
  408f8e:	pop    ds
  408f8f:	out    dx,eax
  408f90:	sahf   
  408f91:	adc    ebp,ecx
  408f93:	or     eax,0x4f4329de
  408f99:	int3   
  408f9a:	dec    edx
  408f9b:	xor    BYTE PTR [ebp-0x7ba7a542],bl
  408fa1:	mul    DWORD PTR [ebp+0x68870364]
  408fa7:	ins    DWORD PTR es:[edi],dx
  408fa8:	push   esi
  408fa9:	call   0xe880e75b
  408fae:	jmp    0x408fca
  408fb0:	mov    ah,0x3b
  408fb2:	push   ecx
  408fb3:	mov    esi,0x162ad6ee
  408fb8:	mov    DWORD PTR [ebp-0x15],ebx
  408fbb:	push   esp
  408fbc:	ficomp WORD PTR [ebp-0x63c888d3]
  408fc2:	jg     0x408ff4
  408fc4:	inc    ebx
  408fc5:	adc    al,0xae
  408fc7:	xchg   esp,eax
  408fc8:	mov    edx,0xab98b36e
  408fcd:	cmp    eax,0x1b0533d6
  408fd2:	inc    ebx
  408fd3:	addr16 adc ebp,0x7c
  408fd7:	jno    0x408f9b
  408fd9:	mov    dl,0x57
  408fdb:	gs aam 0xb8
  408fde:	arpl   WORD PTR [ebx-0x2c],cx
  408fe1:	cmc    
  408fe2:	shl    DWORD PTR [ebx+0x6d],cl
  408fe5:	sbb    sp,WORD PTR [eax+ebp*8+0x5b1d858]
  408fed:	or     al,0xff
  408fef:	cmc    
  408ff0:	scas   eax,DWORD PTR es:[edi]
  408ff1:	jp     0x408f83
  408ff3:	popf   
  408ff4:	cmp    ebp,ebp
  408ff6:	pop    ebp
  408ff7:	mov    ebp,0x6f762635
  408ffc:	(bad)  
  408ffd:	fimul  WORD PTR [ebx+edi*4-0x1f]
  409001:	(bad)  
  409002:	mov    esp,0x853dc01d
  409007:	and    bl,0xbf
  40900a:	rol    cl,1
  40900c:	xor    al,0xa6
  40900e:	cmc    
  40900f:	inc    esp
  409010:	out    0x3c,eax
  409012:	mov    dh,0x86
  409014:	into   
  409015:	fwait
  409016:	mov    cl,0x9d
  409018:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409019:	(bad)  
  40901a:	adc    esp,DWORD PTR [eax]
  40901c:	(bad)  
  40901e:	ss pop ecx
  409020:	and    BYTE PTR [ecx],cl
  409022:	dec    esp
  409023:	inc    ebp
  409024:	idiv   DWORD PTR [edx]
  409026:	xor    BYTE PTR [ebx],bh
  409028:	mov    ecx,edi
  40902a:	cmp    DWORD PTR [esi-0x5016261b],esi
  409030:	lahf   
  409031:	ret    0x9ceb
  409034:	(bad)  
  409035:	shl    esp,1
  409037:	scas   al,BYTE PTR es:[edi]
  409038:	pop    eax
  409039:	mov    cl,0x18
  40903b:	xchg   esi,eax
  40903c:	push   eax
  40903d:	push   esi
  40903e:	jno    0x409086
  409040:	outs   dx,BYTE PTR ds:[esi]
  409041:	jmp    0x4090b3
  409043:	iret   
  409044:	xchg   esp,eax
  409045:	mov    edx,0x94ea6575
  40904a:	or     BYTE PTR [ebp-0x5c],0xc8
  40904e:	jecxz  0x409076
  409050:	jge    0x4090a5
  409052:	adc    al,BYTE PTR [ebp+0x754eb5f9]
  409058:	adc    BYTE PTR [ebx],bh
  40905a:	out    dx,al
  40905b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40905c:	adc    al,dh
  40905e:	ja     0x408ff5
  409060:	retf   0x8217
  409063:	nop
  409064:	aas    
  409065:	xor    ecx,ebp
  409067:	arpl   bp,cx
  409069:	xchg   esp,eax
  40906a:	outs   dx,BYTE PTR ds:[esi]
  40906b:	sbb    ebp,DWORD PTR [eax]
  40906d:	mov    ebx,0x7fecb5de
  409072:	gs in  al,dx
  409074:	arpl   WORD PTR [esi],dx
  409076:	sub    al,0x1
  409078:	inc    edi
  409079:	sti    
  40907a:	iret   
  40907b:	pop    eax
  40907c:	jae    0x40900e
  40907e:	retf   
  40907f:	sahf   
  409080:	mov    ebp,DWORD PTR [ebx+0x32d9335f]
  409086:	xor    dh,0x37
  409089:	push   ecx
  40908a:	cmp    ebx,edx
  40908c:	cdq    
  40908d:	mov    bl,BYTE PTR [edi+0x260f53ef]
  409093:	xor    esp,edi
  409095:	pop    esi
  409096:	push   eax
  409097:	push   esi
  409098:	mov    eax,ds:0x164ab1a6
  40909d:	aam    0x8
  40909f:	imul   esp,DWORD PTR [eax-0x3b8f9817],0x2f
  4090a6:	jns    0x4090f0
  4090a8:	and    BYTE PTR [edi-0x2a],bh
  4090ab:	mov    dl,0xfb
  4090ad:	adc    DWORD PTR [edi+0x5f],0x501124fc
  4090b4:	call   0xe89d:0x2413d1b0
  4090bb:	dec    esp
  4090bc:	add    ecx,DWORD PTR [ebx+0x40]
  4090bf:	fnstcw WORD PTR [ebx-0x42a050f4]
  4090c5:	ins    BYTE PTR es:[edi],dx
  4090c6:	int    0xe9
  4090c8:	idiv   DWORD PTR [eax-0x7c]
  4090cb:	xor    dh,BYTE PTR ds:0x599b9c44
  4090d1:	jge    0x4090a1
  4090d3:	cwde   
  4090d4:	(bad)
  4090d7:	cmp    DWORD PTR [edi+eiz*4+0x30db5594],ebx
  4090de:	unpckhps xmm2,xmm1
  4090e1:	fidivr WORD PTR [ebp-0x44]
  4090e4:	arpl   WORD PTR [ebx],di
  4090e6:	mov    BYTE PTR [edx],al
  4090e8:	adc    al,0x92
  4090ea:	jp     0x40909a
  4090ec:	and    al,0x86
  4090ee:	adc    DWORD PTR [edx+eiz*2],0xffffff9d
  4090f2:	push   cs
  4090f3:	cmp    eax,0xceb87d9a
  4090f8:	inc    esp
  4090f9:	adc    DWORD PTR [ebx+0xa67a24f],esp
  4090ff:	adc    DWORD PTR [edx+0x33],ebx
  409102:	push   ss
  409103:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409104:	lea    ebp,ss:[esi+ebx*8-0x70]
  409109:	das    
  40910a:	and    eax,0xecb5e79b
  40910f:	xchg   ebx,eax
  409110:	or     DWORD PTR [esi],esp
  409112:	cmp    al,bh
  409114:	inc    ebp
  409115:	cld    
  409116:	stos   DWORD PTR es:[edi],eax
  409117:	sub    DWORD PTR [esi-0x7b225d3],0x1b3810d6
  409121:	inc    esp
  409122:	add    DWORD PTR [ecx],ebp
  409124:	adc    esp,ebx
  409126:	(bad)  
  409127:	outs   dx,DWORD PTR ds:[esi]
  409128:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409129:	icebp  
  40912a:	adc    DWORD PTR [ecx+edx*8-0x76],0x1
  40912f:	loope  0x409170
  409131:	sar    BYTE PTR [ecx+0x10],0x24
  409135:	cdq    
  409136:	inc    edx
  409137:	arpl   WORD PTR [ecx-0x41771339],dx
  40913d:	inc    esi
  40913e:	dec    edi
  40913f:	mov    ?,WORD PTR [esi-0x5ea42d34]
  409145:	imul   edi,edx,0xffffffd0
  409148:	pop    esp
  409149:	outs   dx,BYTE PTR ds:[esi]
  40914a:	leave  
  40914b:	push   edx
  40914c:	mov    esi,0xbfc1bfc6
  409151:	int    0x91
  409153:	icebp  
  409154:	jg     0x409147
  409156:	sbb    ecx,edx
  409158:	test   eax,0xded2270e
  40915d:	icebp  
  40915e:	inc    ecx
  40915f:	clc    
  409160:	sahf   
  409161:	cdq    
  409162:	cmp    ecx,DWORD PTR [edi-0x65]
  409165:	dec    eax
  409166:	mov    ch,dl
  409168:	std    
  409169:	call   0x7f07:0x62ef23f5
  409170:	and    eax,DWORD PTR [ebp+0x6c59394c]
  409176:	jl     0x4091f1
  409178:	push   es
  409179:	and    al,0x22
  40917b:	pop    ss
  40917c:	iret   
  40917d:	aad    0x62
  40917f:	mov    cl,BYTE PTR [esi-0x56]
  409182:	mov    eax,0x7c921d3b
  409187:	lods   eax,DWORD PTR ds:[esi]
  409188:	and    eax,0x5318ec75
  40918d:	call   0x7275:0x339d7544
  409194:	loope  0x40918c
  409196:	push   edi
  409197:	stos   BYTE PTR es:[edi],al
  409198:	int3   
  409199:	jle    0x4091fe
  40919b:	dec    ebx
  40919c:	fisttp DWORD PTR [ebx+0x493a6434]
  4091a2:	dec    ebp
  4091a3:	inc    edx
  4091a4:	or     cl,BYTE PTR [eax]
  4091a6:	in     eax,dx
  4091a7:	cmp    BYTE PTR [edi],ah
  4091a9:	(bad)  
  4091aa:	retf   
  4091ab:	(bad)  
  4091ac:	aad    0xdf
  4091ae:	nop
  4091af:	scas   al,BYTE PTR es:[edi]
  4091b0:	fnsave [bx-0x51a4]
  4091b5:	xchg   ebp,eax
  4091b6:	push   0x74
  4091b8:	and    ebp,DWORD PTR [ebp-0x5c66ab32]
  4091be:	mov    ecx,0xa4e232
  4091c3:	jnp    0x409211
  4091c5:	push   ds
  4091c6:	jns    0x409157
  4091c8:	inc    edx
  4091c9:	mov    eax,ds:0xf7d25b88
  4091ce:	fldcw  WORD PTR [eax+0x62]
  4091d1:	mov    BYTE PTR [ebx+ebp*1],bl
  4091d4:	sub    ch,BYTE PTR [eax-0x68293ba5]
  4091da:	cwde   
  4091db:	imul   ebp,DWORD PTR [edi+0x6d15072b],0xffffffb2
  4091e2:	push   cs
  4091e3:	push   edx
  4091e4:	(bad)  
  4091e5:	pushf  
  4091e6:	push   ebx
  4091e7:	jne    0x409224
  4091e9:	and    edx,DWORD PTR [esi-0x5bb2989f]
  4091ef:	or     BYTE PTR [esi+0x39],0x97
  4091f3:	and    al,0xdd
  4091f5:	mov    ebp,0x772cbaed
  4091fa:	inc    esp
  4091fb:	aad    0x9d
  4091fd:	mov    dl,0x94
  4091ff:	push   ss
  409200:	mov    ss,WORD PTR ds:0x69aef4f3
  409206:	cld    
  409207:	sti    
  409208:	adc    edi,edx
  40920a:	jbe    0x4091d3
  40920c:	and    dl,bh
  40920e:	xor    al,0xc9
  409210:	mov    eax,0xd746c1e4
  409215:	cwde   
  409216:	jns    0x409229
  409218:	mov    eax,0x7a97bdb3
  40921d:	fidiv  WORD PTR [ebx-0x28]
  409220:	pop    esi
  409221:	sbb    dh,BYTE PTR [esi-0x613c6919]
  409227:	test   DWORD PTR [ecx-0x690cebaf],0xe51d4ac6
  409231:	pusha  
  409232:	dec    edi
  409233:	out    0x57,al
  409235:	cli    
  409236:	rol    edi,0x9c
  409239:	sbb    edi,DWORD PTR ds:0xfcd6ac0d
  40923f:	fiadd  WORD PTR [edx+0x47bc4e34]
  409245:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409246:	add    DWORD PTR [esi+0x29],edx
  409249:	les    edi,FWORD PTR [eax-0x36d39d4]
  40924f:	mov    cl,ah
  409251:	sar    esi,0x2a
  409254:	push   eax
  409255:	pop    edx
  409256:	les    edx,FWORD PTR [edx]
  409258:	mov    eax,DWORD PTR [eax]
  40925a:	xchg   esp,eax
  40925b:	dec    edx
  40925c:	daa    
  40925d:	pop    edi
  40925e:	push   0xe83f25ae
  409263:	and    eax,0xaf1184f0
  409268:	daa    
  409269:	std    
  40926a:	fidiv  WORD PTR ds:0xd88d644e
  409270:	inc    eax
  409271:	mov    DWORD PTR [edx],eax
  409273:	push   eax
  409274:	push   esp
  409275:	cmp    DWORD PTR [esi],0x4
  409278:	cmp    al,ch
  40927a:	mov    ebx,0xa4d1a6d7
  40927f:	push   cs
  409280:	push   0x4a
  409282:	push   ebp
  409283:	mov    dl,0xe4
  409285:	or     ch,BYTE PTR [eax]
  409287:	dec    ecx
  409288:	les    ecx,FWORD PTR [edx+0x18]
  40928b:	and    BYTE PTR [ebx],dl
  40928d:	ins    DWORD PTR es:[edi],dx
  40928e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40928f:	mov    esi,0x58bddb78
  409294:	(bad)  
  409295:	jmp    0x3565:0xa822109c
  40929c:	xor    eax,0xfafb3640
  4092a1:	(bad)  
  4092a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092a3:	inc    edx
  4092a4:	(bad)  
  4092a5:	loop   0x4092d6
  4092a7:	pusha  
  4092a8:	jecxz  0x4092e5
  4092aa:	xor    ch,0x6d
  4092ad:	out    0x85,eax
  4092af:	xor    edx,DWORD PTR [edx]
  4092b1:	mov    esi,0xb279e8ee
  4092b6:	into   
  4092b7:	faddp  st(4),st
  4092b9:	leave  
  4092ba:	mov    dl,0x35
  4092bc:	sti    
  4092bd:	mov    edx,0xbea0b8a2
  4092c2:	add    eax,0x7c843
  4092c7:	stos   DWORD PTR es:[edi],eax
  4092c8:	xchg   bh,dh
  4092ca:	ret    0x4d7
  4092cd:	push   edx
  4092ce:	mov    cl,0xbb
  4092d0:	jmp    0xb5ef212
  4092d5:	ja     0x409282
  4092d7:	mov    ds:0x27670779,al
  4092dc:	in     eax,dx
  4092dd:	int3   
  4092de:	mov    edi,0x81308b2f
  4092e3:	push   edi
  4092e4:	cwde   
  4092e5:	mov    eax,ecx
  4092e7:	mov    eax,ds:0x431222f
  4092ec:	and    dl,BYTE PTR [ebx+ebp*8+0x7845a483]
  4092f3:	pop    esp
  4092f4:	cmp    DWORD PTR ds:0xf1f3df88,eax
  4092fa:	dec    ebp
  4092fb:	inc    ecx
  4092fc:	sti    
  4092fd:	shl    DWORD PTR [ecx],cl
  4092ff:	push   ds
  409300:	ret    
  409301:	inc    ebp
  409302:	mov    cl,0x57
  409304:	pop    eax
  409305:	imul   al
  409307:	mov    cl,0xf9
  409309:	mov    DWORD PTR [ebx],ecx
  40930b:	ds addr16 call 0x8033838e
  409312:	jle    0x409296
  409314:	jge    0x40937a
  409316:	retf   
  409317:	shl    ebp,1
  409319:	mov    WORD PTR [ecx+0x112db0f0],cs
  40931f:	imul   DWORD PTR [edi+edx*2-0x4dd65305]
  409326:	xlat   BYTE PTR ds:[ebx]
  409327:	test   DWORD PTR [esi+0x75],eax
  40932a:	push   cs
  40932b:	out    dx,al
  40932c:	rcl    bl,cl
  40932e:	test   al,0x45
  409330:	push   cs
  409331:	jmp    0x7ef99b7d
  409336:	inc    esi
  409337:	das    
  409338:	sub    bh,BYTE PTR [ecx-0x73]
  40933b:	dec    ebx
  40933c:	xor    eax,0xe5c56f17
  409341:	das    
  409342:	ins    BYTE PTR es:[edi],dx
  409343:	sbb    al,0x58
  409345:	aad    0xf2
  409347:	and    DWORD PTR [eax-0x61],edx
  40934a:	mov    esi,0x68a8ce0e
  40934f:	outs   dx,DWORD PTR ds:[esi]
  409350:	mov    ds:0x7b55415d,al
  409355:	jle    0x409347
  409357:	lods   eax,DWORD PTR ds:[esi]
  409358:	pushf  
  409359:	mov    ecx,0x2aa5d54
  40935e:	aad    0x46
  409360:	(bad)  
  409361:	mov    bx,0x531
  409365:	call   FWORD PTR [ebx]
  409367:	rcr    edx,1
  409369:	jmp    0x5298:0x5fb2fb44
  409370:	scas   al,BYTE PTR es:[edi]
  409371:	jl     0x4092fe
  409373:	mov    ebx,0xfc726562
  409378:	cmp    al,0x4e
  40937a:	pop    ss
  40937b:	icebp  
  40937c:	xchg   BYTE PTR [esi],ch
  40937e:	push   ss
  40937f:	mov    eax,0x79be817a
  409384:	push   esp
  409385:	mov    ebx,0x339e29bd
  40938a:	call   0x7717940b
  40938f:	dec    esi
  409390:	add    eax,0x9ec8598e
  409395:	aam    0xfa
  409397:	lea    esp,[edx+eiz*1+0x7db35b03]
  40939e:	pop    eax
  40939f:	mov    cl,0xac
  4093a1:	or     BYTE PTR [ecx+edx*8],bh
  4093a4:	pop    esi
  4093a5:	push   ecx
  4093a6:	pop    ss
  4093a7:	sbb    ebp,DWORD PTR [ecx+0x7fe3aa12]
  4093ad:	das    
  4093ae:	jns    0x40935f
  4093b0:	and    eax,0x60fc7dd9
  4093b5:	inc    edx
  4093b6:	inc    ebp
  4093b7:	dec    edx
  4093b8:	pop    esi
  4093b9:	out    0x70,al
  4093bb:	xlat   BYTE PTR ds:[ebx]
  4093bc:	cmp    eax,0xf08f89b2
  4093c1:	gs mov edi,0xcad88f88
  4093c7:	jl     0x40935f
  4093c9:	inc    eax
  4093ca:	shl    BYTE PTR [ecx+edi*1+0x49f7fd12],cl
  4093d1:	inc    ebp
  4093d2:	xchg   ebx,eax
  4093d3:	adc    al,0x86
  4093d5:	dec    ebx
  4093d6:	adc    DWORD PTR [ebp-0x76826b92],0xffffffd1
  4093dd:	mov    dh,0x22
  4093df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093e0:	jmp    0x40939d
  4093e2:	mov    esp,0xec361ff4
  4093e7:	xor    al,0x18
  4093e9:	adc    ebx,DWORD PTR [esi+0x30]
  4093ec:	fdivr  QWORD PTR [edx]
  4093ee:	ss and al,0x24
  4093f1:	in     eax,dx
  4093f2:	loopne 0x409426
  4093f4:	call   0x6641:0xe838eb93
  4093fb:	dec    ebp
  4093fc:	mov    eax,0xecae654f
  409401:	pop    esi
  409402:	push   edx
  409403:	dec    esp
  409404:	mov    bh,0x2e
  409406:	adc    BYTE PTR [esi-0x13c274b7],al
  40940c:	xchg   esi,eax
  40940d:	jno    0x409464
  40940f:	(bad)  
  409410:	fiadd  WORD PTR [ecx+esi*1-0x1e]
  409414:	pop    edi
  409415:	add    eax,0xb7675c3d
  40941a:	jmp    0x4093c4
  40941c:	jmp    0x409410
  40941e:	mov    WORD PTR ds:0xf34f29f9,es
  409424:	sub    eax,0x4820779d
  409429:	int    0x7f
  40942b:	aas    
  40942c:	cld    
  40942d:	and    eax,0xf1b8e41d
  409432:	call   0xc19f:0x9d9e2f15
  409439:	(bad)  
  40943a:	ins    BYTE PTR es:[edi],dx
  40943b:	inc    esp
  40943c:	out    dx,eax
  40943d:	pushf  
  40943e:	dec    edi
  40943f:	mov    eax,0x65bd4ca4
  409444:	fisubr WORD PTR [ecx-0x2cedfad0]
  40944a:	(bad)  
  40944b:	bound  ebx,QWORD PTR [ebx]
  40944d:	adc    DWORD PTR [esi],0xfbe6d20f
  409453:	mov    al,ds:0xa7be36f4
  409458:	add    cl,BYTE PTR [edi+0x3]
  40945b:	stos   DWORD PTR es:[edi],eax
  40945c:	add    DWORD PTR [edi+0x6c],edx
  40945f:	arpl   WORD PTR [ecx+0x4],di
  409462:	inc    eax
  409463:	dec    edx
  409464:	pop    ebx
  409465:	(bad)  
  409467:	dec    esi
  409468:	xchg   edx,eax
  409469:	ret    
  40946a:	mov    ds:0x16ea1d37,al
  40946f:	push   esp
  409470:	and    esi,DWORD PTR [eax-0x30]
  409473:	inc    ebx
  409474:	mov    bh,0x12
  409476:	pop    esi
  409477:	dec    ebp
  409478:	add    al,0xf4
  40947a:	add    esp,DWORD PTR [ebp+0x1577c8a2]
  409480:	std    
  409481:	pop    ecx
  409482:	jmp    0x3d68:0xc2c9e822
  409489:	jno    0x4094fd
  40948b:	push   eax
  40948c:	dec    esp
  40948d:	add    eax,0xf25b8589
  409492:	(bad)  [eax+eiz*8+0x20]
  409496:	loope  0x40942e
  409498:	stos   BYTE PTR es:[edi],al
  409499:	es in  eax,0x8
  40949c:	add    eax,0x3e260bea
  4094a1:	sub    BYTE PTR [eax+edx*2-0x2cd7b4f6],ah
  4094a8:	inc    esi
  4094a9:	xchg   edi,eax
  4094aa:	jae    0x4094cd
  4094ac:	sub    BYTE PTR [ebp-0x7fcfeb90],0x49
  4094b3:	in     eax,0x1c
  4094b5:	pop    es
  4094b6:	pushf  
  4094b7:	repz retf 0xe1e2
  4094bb:	dec    ecx
  4094bc:	mov    bh,0x45
  4094be:	rol    DWORD PTR [edi+ebx*4-0x36c3bf16],cl
  4094c5:	push   ds
  4094c6:	pop    edi
  4094c7:	loope  0x40946c
  4094c9:	push   ss
  4094ca:	cwde   
  4094cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094cc:	add    eax,0xffc223fd
  4094d1:	add    eax,0xd9b66435
  4094d6:	loope  0x40947f
  4094d8:	pop    eax
  4094d9:	sub    DWORD PTR [ecx-0x4db11165],edx
  4094df:	stos   BYTE PTR es:[edi],al
  4094e0:	sub    al,0x2d
  4094e2:	icebp  
  4094e3:	out    0x17,eax
  4094e5:	mov    ebx,0xfc371a04
  4094ea:	cwde   
  4094eb:	fdiv   DWORD PTR [edx-0x46]
  4094ee:	ja     0x409517
  4094f0:	jle    0x4094fc
  4094f2:	jnp    0x4094a3
  4094f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094f5:	sbb    DWORD PTR [ebx-0x7529d5f],ebx
  4094fb:	dec    edx
  4094fc:	(bad)
  409500:	inc    edi
  409501:	push   es
  409502:	rcr    BYTE PTR [edx+0x50],cl
  409505:	aas    
  409506:	sti    
  409507:	cdq    
  409508:	fild   QWORD PTR [edi]
  40950a:	outs   dx,BYTE PTR ds:[esi]
  40950b:	pop    ds
  40950c:	lods   eax,DWORD PTR ds:[esi]
  40950d:	test   DWORD PTR [ebx],esi
  40950f:	sbb    eax,0x967e9396
  409514:	dec    ecx
  409515:	mov    ds:0x10446aec,eax
  40951a:	mov    fs,edi
  40951c:	aaa    
  40951d:	mov    cl,0xb
  40951f:	inc    edx
  409520:	and    ch,ah
  409522:	jecxz  0x409567
  409524:	cmp    BYTE PTR [esi],bh
  409526:	lahf   
  409527:	ins    DWORD PTR es:[edi],dx
  409528:	sbb    eax,0xbd39b33c
  40952d:	xor    al,0xfe
  40952f:	inc    edi
  409530:	xchg   edi,eax
  409531:	jnp    0x409504
  409533:	pmaddwd mm2,mm6
  409536:	jo     0x40958f
  409538:	out    0x55,al
  40953a:	lds    esp,FWORD PTR [edx]
  40953c:	and    al,0x37
  40953e:	js     0x40954d
  409540:	pusha  
  409541:	xchg   ecx,eax
  409542:	shl    BYTE PTR [esi+0x53],1
  409545:	lock xchg esi,eax
  409547:	fistp  QWORD PTR [ebp-0x60a56989]
  40954d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40954e:	aaa    
  40954f:	inc    esi
  409550:	cmp    DWORD PTR [ecx+edi*4+0x5],esp
  409554:	icebp  
  409555:	mov    al,ds:0x85007ebf
  40955a:	mov    BYTE PTR [edi-0x60],0x8a
  40955e:	mov    edi,0x91e8cb55
  409563:	dec    ebp
  409564:	mov    al,0x79
  409566:	call   0xaf4c935
  40956b:	xor    al,0x98
  40956d:	sbb    ebp,DWORD PTR [ebp+0x16]
  409570:	xor    esi,DWORD PTR ds:0xd113ecc8
  409576:	mov    dl,0x4f
  409578:	push   ebp
  409579:	pop    ss
  40957a:	dec    esp
  40957b:	(bad)  
  40957c:	test   BYTE PTR [ebx-0x50],0x29
  409580:	or     ebp,eax
  409582:	ror    DWORD PTR [ecx+0xe],1
  409585:	lock int3 
  409587:	inc    ebx
  409588:	push   esi
  409589:	pop    edi
  40958a:	int    0xb8
  40958c:	jbe    0x40959a
  40958e:	repz ds jnp 0x409558
  409592:	push   esi
  409593:	and    bl,BYTE PTR [edi-0x492d9555]
  409599:	sbb    eax,0x3db05755
  40959e:	push   edi
  40959f:	mov    esi,0xce621e59
  4095a4:	or     DWORD PTR [ebx+0x6a],eax
  4095a7:	out    dx,al
  4095a8:	imul   esp,DWORD PTR [edi-0x6d40bd8e],0x51
  4095af:	mov    ah,0x6d
  4095b1:	adc    BYTE PTR [esi+0x32],cl
  4095b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095b6:	mov    es,eax
  4095b8:	pop    ecx
  4095b9:	and    eax,0x3a3b41c0
  4095be:	inc    ebp
  4095bf:	mov    edx,0x23179d3
  4095c4:	fcomp  QWORD PTR [ebx-0x51]
  4095c7:	pop    ebx
  4095c8:	pop    esp
  4095c9:	sahf   
  4095ca:	das    
  4095cb:	arpl   WORD PTR ds:0xfdba4024,bp
  4095d1:	out    0x1,eax
  4095d3:	xchg   DWORD PTR [ebp+0x5aee23c2],edx
  4095d9:	add    bh,BYTE PTR [ecx]
  4095db:	aas    
  4095dc:	repz pop ebp
  4095de:	pop    DWORD PTR [eax-0x5b08916e]
  4095e4:	fwait
  4095e5:	stos   BYTE PTR es:[edi],al
  4095e6:	data16 jnp 0x40956e
  4095e9:	xchg   ebx,eax
  4095ea:	and    eax,0x792f2e4d
  4095ef:	mov    bh,0x5b
  4095f1:	xchg   ecx,eax
  4095f2:	and    al,BYTE PTR [ebp+0x5ec7bc94]
  4095f8:	fcom   QWORD PTR [ecx]
  4095fa:	xor    al,0xba
  4095fc:	fild   QWORD PTR fs:[edx-0x3]
  409600:	repz bound esi,QWORD PTR [ebx-0x6c39752e]
  409607:	(bad)  
  409608:	(bad)  
  409609:	aaa    
  40960a:	adc    eax,ebx
  40960c:	cmp    DWORD PTR [edi],edi
  40960e:	sbb    bh,BYTE PTR [ebp+0x54c181df]
  409614:	mov    ch,0xdf
  409616:	xor    cl,ah
  409618:	inc    ebp
  409619:	or     DWORD PTR [edi],0xffffffad
  40961c:	cmp    eax,0x24ea06cf
  409621:	cmp    al,0xf3
  409623:	out    dx,eax
  409624:	xchg   ecx,eax
  409625:	js     0x409685
  409627:	mov    edx,0x2a1c99a4
  40962c:	imul   edi,DWORD PTR [edx],0x7
  40962f:	nop
  409630:	imul   eax,DWORD PTR [ebp+edi*1-0x302607c7],0x9560f2a8
  40963b:	outs   dx,DWORD PTR ds:[esi]
  40963c:	in     al,0x2
  40963e:	divps  xmm0,XMMWORD PTR [eax]
  409641:	lods   al,BYTE PTR ds:[esi]
  409642:	cmp    eax,0x6c0cf9ef
  409647:	push   0xd9e1bb9e
  40964c:	mov    DWORD PTR [ebp-0x5a8cfb8c],ebp
  409652:	jmp    0x9ce7:0xc0189582
  409659:	aad    0x9c
  40965b:	lea    esp,[edx-0x642ef08b]
  409661:	cmova  edi,DWORD PTR [eax+0x664bbb1b]
  409668:	mov    cl,0x4a
  40966a:	sbb    ebx,DWORD PTR [edi-0x3e]
  40966d:	fidivr WORD PTR [ebx+ebx*8-0x4f8e3b2f]
  409674:	aaa    
  409675:	scas   al,BYTE PTR es:[edi]
  409676:	popf   
  409677:	fwait
  409678:	adc    ebx,esp
  40967a:	inc    edi
  40967b:	lods   al,BYTE PTR ds:[esi]
  40967c:	in     eax,0x86
  40967e:	pop    esi
  40967f:	ficomp DWORD PTR [ecx]
  409681:	sub    DWORD PTR [edi+0xa6d0cf9],eax
  409687:	jl     0x40962a
  409689:	scas   al,BYTE PTR es:[edi]
  40968a:	inc    ebp
  40968b:	stos   BYTE PTR es:[edi],al
  40968c:	inc    eax
  40968d:	push   edx
  40968e:	cmp    eax,0x4c38db4e
  409693:	(bad)
  409696:	cmp    bh,ah
  409698:	pop    ss
  409699:	leave  
  40969a:	pop    ss
  40969b:	mov    ebp,0x48dfed86
  4096a0:	push   esi
  4096a1:	push   ecx
  4096a2:	pop    ds
  4096a3:	leave  
  4096a4:	mov    esp,0xc80c843
  4096a9:	lea    edi,[edx+0x1f]
  4096ac:	mov    ds:0xc6f080ba,eax
  4096b1:	ins    DWORD PTR es:[edi],dx
  4096b2:	adc    eax,0x9df34dd0
  4096b7:	daa    
  4096b8:	dec    ebp
  4096b9:	(bad)  
  4096ba:	(bad)  
  4096bb:	bnd jg 0x4096e0
  4096be:	mov    dh,0xed
  4096c0:	add    eax,0x7412c956
  4096c5:	jnp    0x409735
  4096c7:	pop    ds
  4096c8:	or     ecx,edx
  4096ca:	inc    edi
  4096cb:	shl    BYTE PTR [ecx],1
  4096cd:	scas   eax,DWORD PTR es:[edi]
  4096ce:	pop    ecx
  4096cf:	and    edi,esi
  4096d1:	test   ebp,ecx
  4096d3:	pop    ecx
  4096d4:	xor    al,0x71
  4096d6:	cli    
  4096d7:	cmp    eax,0x13c937a2
  4096dc:	xchg   esp,eax
  4096dd:	or     bh,ah
  4096df:	sbb    ah,BYTE PTR [eax]
  4096e1:	test   edi,ebp
  4096e3:	rcr    edi,1
  4096e5:	mov    edi,0x89c6f168
  4096ea:	imul   ebx,esp,0x5
  4096ed:	out    0xac,eax
  4096ef:	in     al,0x2b
  4096f1:	(bad)  
  4096f2:	in     eax,dx
  4096f3:	out    0xa2,eax
  4096f5:	xchg   DWORD PTR [ecx+0x7d1e9812],ebp
  4096fb:	jge    0x4096ef
  4096fd:	xchg   esp,eax
  4096fe:	jp     0x4096de
  409700:	lea    esp,[edi-0x18653350]
  409706:	mov    ch,BYTE PTR [ebp+eax*8+0x5e]
  40970a:	sub    DWORD PTR [ecx-0x7a],ecx
  40970d:	pop    esi
  40970e:	adc    ecx,DWORD PTR [ebp+0x77]
  409711:	xchg   DWORD PTR [ebx],ecx
  409713:	add    BYTE PTR [esi],dh
  409715:	dec    edx
  409716:	and    DWORD PTR [edx-0x414e5a6c],eax
  40971c:	out    0xa9,eax
  40971e:	sub    ecx,0x7a8e7a4e
  409724:	leave  
  409725:	(bad)  
  409726:	dec    ebp
  409727:	jg     0x409710
  409729:	call   0x4026:0x1e02e289
  409730:	inc    eax
  409731:	push   0x5d2044ac
  409736:	mov    ah,0x8d
  409738:	pop    ebp
  409739:	jp     0x40971f
  40973b:	ja     0x4096cc
  40973d:	or     ebx,DWORD PTR [esi+0x65a3e5ff]
  409743:	xchg   esp,eax
  409744:	lock mov edi,edi
  409747:	cmc    
  409748:	icebp  
  409749:	sbb    ch,dh
  40974b:	(bad)  
  40974c:	fistp  WORD PTR [esi-0x41]
  40974f:	outs   dx,BYTE PTR ds:[esi]
  409750:	sub    BYTE PTR [ecx+ecx*4+0x4e93e45c],cl
  409757:	mov    ch,0x99
  409759:	clc    
  40975a:	lahf   
  40975b:	(bad)  
  40975c:	(bad)  
  40975d:	out    dx,al
  40975e:	sbb    eax,0x2e674db6
  409763:	sub    DWORD PTR [esi],esi
  409765:	mov    DWORD PTR [eax],eax
  409767:	mov    DWORD PTR [ebx+0x5a],0x9cf51f08
  40976e:	out    0xc2,al
  409770:	and    ah,ah
  409772:	shr    al,cl
  409774:	xor    eax,0xb0e7abe2
  409779:	cmp    ecx,DWORD PTR cs:[ecx+edx*1-0x70f18310]
  409781:	and    DWORD PTR [ecx+0x41],esi
  409784:	out    0x9f,al
  409786:	(bad)  
  409787:	loop   0x409758
  409789:	xchg   esp,eax
  40978a:	and    eax,0x92457a91
  40978f:	adc    DWORD PTR [edi-0x253063ab],0x34
  409796:	adc    DWORD PTR [esi+0x441e5f9e],edx
  40979c:	in     eax,dx
  40979d:	jg     0x40975b
  40979f:	rcl    DWORD PTR [edi+0x15],1
  4097a2:	fisubr WORD PTR [edx-0x3]
  4097a5:	enter  0x4e62,0x81
  4097a9:	pop    ecx
  4097aa:	fist   DWORD PTR [ecx]
  4097ac:	mov    edi,0x54dc25f6
  4097b1:	mov    esp,0xe7d97ffc
  4097b6:	popf   
  4097b7:	clc    
  4097b8:	and    BYTE PTR [ebp-0x7981d507],al
  4097be:	add    BYTE PTR ds:0x3596d8be,bh
  4097c4:	and    esp,0x6200275
  4097ca:	daa    
  4097cb:	das    
  4097cc:	push   ecx
  4097cd:	mov    DWORD PTR [ecx+0x75],eax
  4097d0:	pop    ebx
  4097d1:	fild   DWORD PTR [ebx+0x36a0803c]
  4097d7:	(bad)  
  4097d8:	fst    DWORD PTR [eax]
  4097da:	pop    esp
  4097db:	repnz adc BYTE PTR [esi-0x605d47b0],al
  4097e2:	mov    BYTE PTR [ebx],cl
  4097e4:	fsubr  QWORD PTR [ebx+0x7f]
  4097e7:	repz mov bh,0xba
  4097ea:	icebp  
  4097eb:	in     al,0xfb
  4097ed:	xchg   al,dh
  4097ef:	jb     0x4097cf
  4097f1:	sub    eax,0xbf4e0c1c
  4097f6:	mov    eax,ds:0xd876ef7
  4097fb:	retf   
  4097fc:	xchg   ebx,eax
  4097fd:	(bad)  
  4097fe:	mov    esi,0xb7f0ae8e
  409803:	mov    esp,0x719b6c8a
  409808:	xchg   BYTE PTR [eax+esi*2-0x5c10ca81],dl
  40980f:	jae    0x409836
  409811:	jns    0x4097d5
  409813:	aam    0x27
  409815:	gs in  eax,0x6f
  409818:	int    0xef
  40981a:	push   ecx
  40981b:	xor    ah,BYTE PTR [ebx+0x33118d73]
  409821:	mov    eax,DWORD PTR [ecx+esi*4-0x43]
  409825:	fsubr  DWORD PTR [ebx]
  409827:	mov    ah,0xa5
  409829:	adc    BYTE PTR [edx],bh
  40982b:	mov    bh,al
  40982d:	daa    
  40982e:	pop    es
  40982f:	sub    al,cl
  409831:	aaa    
  409832:	retf   
  409833:	in     al,0x6e
  409835:	mov    edx,0x5a313507
  40983a:	stos   DWORD PTR es:[edi],eax
  40983b:	test   DWORD PTR [edx+0x6a],ebp
  40983e:	lock fadd st,st(7)
  409841:	xchg   BYTE PTR [edi],bl
  409843:	outs   dx,DWORD PTR ds:[esi]
  409844:	pop    edx
  409845:	pop    ds
  409846:	mov    dl,0x33
  409848:	arpl   WORD PTR [edx+0x36afc16d],cx
  40984e:	fidivr WORD PTR [esi+0x37]
  409851:	mov    esi,0x8a1d220
  409856:	sti    
  409857:	cmp    BYTE PTR [ebp-0x12],bh
  40985a:	pop    eax
  40985b:	int3   
  40985c:	cli    
  40985d:	jno    0x40984b
  40985f:	sub    BYTE PTR [edi],bl
  409861:	in     al,0x4d
  409863:	mov    bh,0x8a
  409865:	mov    dl,al
  409867:	cmp    ebx,DWORD PTR ds:[eax]
  40986a:	scas   eax,DWORD PTR es:[edi]
  40986b:	pushf  
  40986c:	xor    eax,0xb0c7a0f9
  409871:	mov    bh,0x75
  409873:	in     eax,0x47
  409875:	test   eax,0x53f538b1
  40987a:	mov    ebp,0xcbeadd25
  40987f:	cmp    esi,DWORD PTR [esp+ecx*1]
  409882:	add    BYTE PTR [ecx+ebx*2],dh
  409885:	and    dl,bh
  409887:	and    BYTE PTR [ecx-0x1fef7198],cl
  40988d:	mov    esp,0x2a2dfa56
  409892:	adc    edi,eax
  409894:	int3   
  409895:	sub    ch,BYTE PTR [esi+0x0]
  409898:	sub    edi,DWORD PTR ds:[edi+0x49]
  40989c:	pushf  
  40989d:	popa   
  40989e:	popa   
  40989f:	mov    eax,eax
  4098a1:	push   0x8b64d2e6
  4098a6:	adc    al,0x3f
  4098a8:	sar    dh,1
  4098aa:	push   ebx
  4098ab:	(bad)  
  4098ac:	fsub   QWORD PTR [ecx]
  4098ae:	dec    esi
  4098af:	jns    0x409893
  4098b1:	pop    ebx
  4098b2:	cmc    
  4098b3:	push   edx
  4098b4:	xlat   BYTE PTR ds:[ebx]
  4098b5:	aam    0x16
  4098b7:	fwait
  4098b8:	or     ch,BYTE PTR [ebp+0x32c1907b]
  4098be:	ret    
  4098bf:	jb     0x409875
  4098c1:	xchg   esi,eax
  4098c2:	inc    esp
  4098c3:	lock dec esp
  4098c5:	xchg   ebx,eax
  4098c6:	xor    eax,0x68f42d77
  4098cb:	dec    ecx
  4098cc:	in     al,0xcf
  4098ce:	test   dl,bl
  4098d0:	xor    al,0xac
  4098d2:	push   0xffffffbd
  4098d4:	mov    ch,0xf6
  4098d6:	das    
  4098d7:	mov    al,0x1
  4098d9:	sti    
  4098da:	outs   dx,DWORD PTR ds:[esi]
  4098db:	pop    ebp
  4098dc:	nop
  4098dd:	shr    DWORD PTR [edi+ebp*2+0x1a],1
  4098e1:	cmp    edi,edi
  4098e3:	nop
  4098e4:	stos   DWORD PTR es:[edi],eax
  4098e5:	push   edx
  4098e6:	jp     0x4098f9
  4098e8:	sahf   
  4098e9:	mov    eax,0xadaae20f
  4098ee:	cmp    esp,DWORD PTR [ebp+ebx*8-0x65ad3e7f]
  4098f5:	adc    esi,eax
  4098f7:	pop    edi
  4098f8:	xor    BYTE PTR [esi],dl
  4098fa:	into   
  4098fb:	and    eax,0xa1007609
  409900:	lds    ebp,FWORD PTR [ecx+0x4eed6f7c]
  409906:	outs   dx,BYTE PTR ds:[esi]
  409907:	cwde   
  409908:	xchg   esi,eax
  409909:	mov    esi,0x3a44b99e
  40990e:	mov    ah,0x8a
  409910:	(bad)  
  409911:	jbe    0x4098c2
  409913:	and    BYTE PTR [ebx+0x4],dh
  409916:	ja     0x409920
  409918:	outs   dx,BYTE PTR ds:[esi]
  409919:	fstp   QWORD PTR [eax+ecx*8-0x65421241]
  409920:	xor    al,0x46
  409922:	push   edi
  409923:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409924:	repz jae 0x409914
  409927:	add    bh,BYTE PTR [ebx]
  409929:	scas   al,BYTE PTR es:[edi]
  40992a:	mov    al,ds:0x53f9fa3c
  40992f:	dec    ebx
  409930:	sti    
  409931:	mov    al,ds:0x60765e38
  409936:	in     eax,dx
  409937:	push   ecx
  409938:	mov    eax,ds:0xc2848820
  40993d:	out    dx,eax
  40993e:	fld    DWORD PTR [esi-0x5ce9f949]
  409944:	adc    BYTE PTR [edi-0x5e6d5835],bh
  40994a:	or     esi,DWORD PTR [ecx+0x4f]
  40994d:	test   DWORD PTR [edx],ecx
  40994f:	enter  0xcbe3,0xca
  409953:	and    eax,0x31d77a2c
  409958:	pop    esi
  409959:	mov    dl,0xa9
  40995b:	scas   al,BYTE PTR es:[edi]
  40995c:	bound  ecx,QWORD PTR [ebx-0x7]
  40995f:	and    DWORD PTR [ebx],esp
  409961:	jmp    0x84c1:0x8a166578
  409968:	cmc    
  409969:	aas    
  40996a:	retf   0xafb6
  40996d:	je     0x40997b
  40996f:	inc    eax
  409970:	jle    0x40997e
  409972:	xchg   esi,eax
  409973:	push   ebp
  409974:	pop    ss
  409975:	pushf  
  409976:	push   ecx
  409977:	xor    al,0x17
  409979:	sub    esp,esi
  40997b:	cmp    ecx,esi
  40997d:	pop    eax
  40997e:	call   0xfa2ad54b
  409983:	sbb    BYTE PTR [edi+0x7a],ah
  409986:	mov    BYTE PTR [esp+eax*4-0x4c],bl
  40998a:	repz test al,0x8a
  40998d:	in     eax,dx
  40998e:	fadd   st(1),st
  409990:	adc    BYTE PTR [esi],dh
  409992:	es pop ds
  409994:	arpl   WORD PTR [edi-0x57],bp
  409997:	cdq    
  409998:	loop   0x4099fa
  40999a:	cmc    
  40999b:	int    0xc9
  40999d:	push   edi
  40999e:	pop    edi
  40999f:	sbb    ebp,edx
  4099a1:	aas    
  4099a2:	pop    eax
  4099a3:	mov    dl,0x3d
  4099a5:	neg    bh
  4099a7:	xchg   edx,eax
  4099a8:	(bad)  
  4099a9:	std    
  4099aa:	and    BYTE PTR [edi],0xe0
  4099ad:	sbb    DWORD PTR [edi+0x70],esp
  4099b0:	pop    edx
  4099b1:	daa    
  4099b2:	es lock mov al,0x4f
  4099b6:	mov    ds:0xaf6c4581,eax
  4099bb:	rol    dl,1
  4099bd:	sub    edx,ecx
  4099bf:	jns    0x4099e3
  4099c1:	inc    ecx
  4099c2:	push   0xffffffdf
  4099c4:	iret   
  4099c5:	inc    ebx
  4099c6:	jge    0x4099c1
  4099c8:	jg     0x4099ef
  4099ca:	aas    
  4099cb:	mov    dh,0x93
  4099cd:	test   DWORD PTR ds:0x3fdcdefc,ecx
  4099d3:	or     DWORD PTR [ebp-0x55],0xaa7c731c
  4099da:	dec    eax
  4099db:	rcr    DWORD PTR [edi],0x39
  4099de:	or     BYTE PTR [ecx+0x5a1f264b],0x16
  4099e5:	mov    eax,ds:0xcc60ca3a
  4099ea:	xchg   ebx,eax
  4099eb:	cmp    al,0xc7
  4099ed:	dec    ebx
  4099ee:	push   edx
  4099ef:	xchg   esp,eax
  4099f0:	fs sub al,0x5
  4099f3:	adc    BYTE PTR [edx-0x7e],dl
  4099f6:	addr16 out 0xd3,eax
  4099f9:	fcomp  DWORD PTR [ebx]
  4099fb:	sbb    BYTE PTR [ebp+0x1c],bl
  4099fe:	stc    
  4099ff:	lock mov eax,ds:0xa971f1dd
  409a05:	push   edi
  409a06:	cld    
  409a07:	sbb    BYTE PTR [bp-0x6a4b],dl
  409a0c:	mov    esi,0x2c8e642c
  409a11:	mov    al,ds:0xc5f8a1af
  409a16:	int3   
  409a17:	cwde   
  409a18:	outs   dx,DWORD PTR ds:[esi]
  409a19:	cmp    al,0x35
  409a1b:	sahf   
  409a1c:	int    0x41
  409a1e:	mov    fs:0xccf31acc,eax
  409a24:	cmc    
  409a25:	xchg   eax,ebx
  409a27:	sbb    al,0xbf
  409a29:	lahf   
  409a2a:	jmp    0x8cc40455
  409a2f:	xor    BYTE PTR [ecx-0x46ae07b2],bl
  409a35:	mov    al,ds:0xa722259e
  409a3a:	adc    ebx,ecx
  409a3c:	imul   esp,DWORD PTR [ecx+0x61],0xc5d76a06
  409a43:	fisttp DWORD PTR [edx+edi*2+0x13999180]
  409a4a:	ret    0x6b37
  409a4d:	data16 js 0x4099d6
  409a50:	xor    esi,edx
  409a52:	test   DWORD PTR [edi-0x2c7c4ae3],ebx
  409a58:	xchg   BYTE PTR [edi+0x7e7d7f3a],ah
  409a5e:	xchg   ebx,eax
  409a5f:	fist   DWORD PTR [esi+0x43]
  409a62:	xor    cl,BYTE PTR [esi+0x7210afa7]
  409a68:	jnp    0x409a8a
  409a6a:	and    BYTE PTR [edi],dh
  409a6c:	mov    ah,0xbe
  409a6e:	fs arpl bx,bp
  409a71:	sbb    esp,DWORD PTR [esi-0xf0e1a98]
  409a77:	and    edx,DWORD PTR [ebp+0x33]
  409a7a:	mov    ebx,0x47507e0e
  409a7f:	jae    0x409a54
  409a81:	push   esp
  409a82:	mov    ch,0xfb
  409a84:	xor    eax,0xb58ee770
  409a89:	lods   al,BYTE PTR ds:[esi]
  409a8a:	sahf   
  409a8b:	test   eax,0x63603503
  409a90:	test   BYTE PTR fs:[edi-0x27bb70e],bh
  409a97:	cmp    DWORD PTR [ecx],edx
  409a99:	cmp    BYTE PTR [ecx-0x63e557a8],0x9a
  409aa0:	in     al,dx
  409aa1:	push   edi
  409aa2:	jne    0x409af2
  409aa4:	pop    ebx
  409aa5:	mov    edx,0x22275494
  409aaa:	mov    ds:0x63acbf53,al
  409aaf:	mov    ebx,0x3df70cd2
  409ab4:	or     ah,dl
  409ab6:	and    eax,0x9b6d95d2
  409abb:	jns    0x409b3a
  409abd:	jge    0x409a6b
  409abf:	inc    edi
  409ac0:	lea    ecx,[ebx-0x4b599c69]
  409ac6:	jno    0x409a78
  409ac8:	adc    ch,ah
  409aca:	jmp    0x409a72
  409acc:	retf   0xd1da
  409acf:	das    
  409ad0:	rep ins DWORD PTR es:[edi],dx
  409ad2:	scas   al,BYTE PTR es:[edi]
  409ad3:	in     al,dx
  409ad4:	in     eax,0x7f
  409ad6:	sub    al,0x4a
  409ad8:	outs   dx,BYTE PTR ds:[esi]
  409ad9:	dec    ebx
  409ada:	retf   
  409adb:	add    DWORD PTR [ecx-0x14],eax
  409ade:	loopne 0x409b5d
  409ae0:	mov    dh,0xe0
  409ae2:	jp     0x409a8b
  409ae4:	sub    BYTE PTR [eax+0x49],ah
  409ae7:	sbb    DWORD PTR [edx-0x15],0x57047f1c
  409aee:	jle    0x409a7b
  409af0:	push   ss
  409af1:	mov    bl,0x64
  409af3:	cmp    dh,dl
  409af5:	adc    ebp,DWORD PTR [ebx]
  409af7:	ins    BYTE PTR es:[edi],dx
  409af8:	test   eax,0xce8ef19d
  409afd:	sub    ebx,ebp
  409aff:	mov    ebx,0xf9e2fda8
  409b04:	xchg   esi,eax
  409b05:	xlat   BYTE PTR ds:[ebx]
  409b06:	cs jecxz 0x409b70
  409b09:	test   DWORD PTR [eax+0x5b],0x4f53729
  409b10:	and    al,0xc9
  409b12:	call   0x6f80:0xca46ae88
  409b19:	inc    edx
  409b1a:	push   edx
  409b1b:	add    al,0x10
  409b1d:	rol    DWORD PTR [esi+eax*2+0x75],0x4c
  409b22:	mov    esp,0x3c5aa85e
  409b27:	add    DWORD PTR [ebp-0x414412ab],edx
  409b2d:	xor    al,0x15
  409b2f:	jl     0x409b2d
  409b31:	test   al,0x16
  409b33:	mov    edx,cr7
  409b36:	test   BYTE PTR [ecx+esi*4-0x40826197],dh
  409b3d:	pop    ebp
  409b3e:	cmp    edx,ebp
  409b40:	fwait
  409b41:	shl    BYTE PTR [eax],0x8a
  409b44:	push   edi
  409b45:	test   BYTE PTR [esi-0x3825c691],bl
  409b4b:	pop    esp
  409b4c:	fisttp QWORD PTR ds:0xe0d7ced3
  409b52:	daa    
  409b53:	cli    
  409b54:	cli    
  409b55:	push   ss
  409b56:	cli    
  409b57:	call   0xc2a47c4b
  409b5c:	dec    ebp
  409b5d:	cmp    DWORD PTR [ecx],ecx
  409b5f:	enter  0x45cc,0x9a
  409b63:	ror    edx,0xf1
  409b66:	xchg   esp,eax
  409b67:	fcom   DWORD PTR [ebp+0x49]
  409b6a:	or     BYTE PTR [esi],ch
  409b6c:	cmp    eax,0xa7cf4555
  409b71:	or     DWORD PTR [edi],ecx
  409b73:	push   ss
  409b74:	fist   DWORD PTR [ecx+0x20]
  409b77:	mov    edx,0x1698cee
  409b7c:	inc    eax
  409b7d:	fcomp  DWORD PTR [ebp+0x2fc2e37f]
  409b83:	das    
  409b84:	push   edi
  409b85:	cs xor al,0xaa
  409b88:	and    ecx,DWORD PTR [edx]
  409b8a:	lahf   
  409b8b:	cmp    al,BYTE PTR [edi-0x258024a]
  409b91:	sbb    al,0xf6
  409b93:	les    ebx,FWORD PTR [eax]
  409b95:	(bad)  
  409b96:	or     bh,ah
  409b98:	push   es
  409b99:	mov    ch,0x73
  409b9b:	push   ebp
  409b9c:	in     al,dx
  409b9d:	pop    esp
  409b9e:	mov    dl,0xc2
  409ba0:	(bad)
  409ba3:	add    ch,BYTE PTR [ebx]
  409ba5:	mov    ah,0x11
  409ba7:	sbb    DWORD PTR [esi+0x1b],0x4c
  409bab:	aas    
  409bac:	aad    0xbe
  409bae:	xchg   esp,eax
  409baf:	in     al,dx
  409bb0:	jmp    0x409b63
  409bb2:	arpl   WORD PTR [edi-0x1],bp
  409bb5:	js     0x409b3d
  409bb7:	repz das 
  409bb9:	pop    edi
  409bba:	fcom   QWORD PTR [ebx-0x519ff799]
  409bc0:	jae    0x409c33
  409bc2:	(bad)  
  409bc3:	fiadd  DWORD PTR [edi]
  409bc5:	(bad)  
  409bc7:	add    bh,0x68
  409bca:	hlt    
  409bcb:	pop    eax
  409bcc:	out    0xa3,al
  409bce:	js     0x409b7e
  409bd0:	adc    al,0x4a
  409bd2:	pop    ebx
  409bd3:	mov    cx,0x77d2
  409bd7:	out    0xa6,eax
  409bd9:	sub    edi,DWORD PTR [esi]
  409bdb:	cmc    
  409bdc:	adc    eax,DWORD PTR [ecx+eax*4+0x2]
  409be0:	sbb    al,0x66
  409be2:	jbe    0x409bd9
  409be4:	xchg   DWORD PTR [edi+0x2],edx
  409be7:	lds    edi,FWORD PTR [ebx+ebx*1]
  409bea:	push   ss
  409beb:	pushf  
  409bec:	lods   al,BYTE PTR ds:[esi]
  409bed:	aad    0x2a
  409bef:	mov    cl,0x99
  409bf1:	sub    ecx,DWORD PTR [ebp+0x11064536]
  409bf7:	rol    BYTE PTR [ebp-0x5de67d17],0x1
  409bfe:	mov    ds:0xbfad4d7f,al
  409c03:	dec    edi
  409c04:	and    BYTE PTR [edx+0x6e],0x32
  409c08:	leave  
  409c09:	out    0x42,eax
  409c0b:	push   esi
  409c0c:	ins    DWORD PTR es:[edi],dx
  409c0d:	test   BYTE PTR [esi+0x2d],ch
  409c10:	xchg   esi,eax
  409c11:	add    eax,edx
  409c13:	add    edi,DWORD PTR [ecx+esi*1-0x69a36da7]
  409c1a:	dec    ebp
  409c1b:	sbb    cl,BYTE PTR [eax]
  409c1d:	and    ch,al
  409c1f:	or     DWORD PTR [edx],0x7d7f3735
  409c25:	push   eax
  409c26:	sbb    esp,ebx
  409c28:	jle    0x409c33
  409c2a:	imul   esp,DWORD PTR [esi-0x4cad158d],0xcfb2967e
  409c34:	xchg   ebp,eax
  409c35:	out    0xe1,eax
  409c37:	fisttp DWORD PTR [eax-0x281dc3f1]
  409c3d:	nop
  409c3e:	add    ah,BYTE PTR [esi+0x28]
  409c41:	fs pop ecx
  409c43:	int3   
  409c44:	out    0x15,eax
  409c46:	pop    ecx
  409c47:	aaa    
  409c48:	mov    edi,0x1a55a17f
  409c4d:	xchg   edx,eax
  409c4e:	dec    edx
  409c4f:	sahf   
  409c50:	adc    ebx,DWORD PTR [ebx+esi*8-0x553de55d]
  409c57:	arpl   WORD PTR [eax-0x588fefea],cx
  409c5d:	adc    BYTE PTR [edi],al
  409c5f:	call   0x9e0e:0x25c8e17b
  409c66:	adc    esi,ecx
  409c68:	lds    edi,FWORD PTR [ebx]
  409c6a:	xor    al,0xc3
  409c6c:	add    al,BYTE PTR [eax-0x4e]
  409c6f:	out    dx,eax
  409c70:	int3   
  409c71:	xor    edx,DWORD PTR cs:[edx]
  409c74:	push   ss
  409c75:	inc    esp
  409c76:	push   ss
  409c77:	xor    al,0x80
  409c79:	cld    
  409c7a:	in     al,dx
  409c7b:	stos   BYTE PTR es:[edi],al
  409c7c:	retf   0xe35
  409c7f:	push   0x5f
  409c81:	leave  
  409c82:	xor    BYTE PTR [edi],bh
  409c84:	test   BYTE PTR [eax+0xc51d633],ch
  409c8a:	scas   eax,DWORD PTR es:[edi]
  409c8b:	call   0x6a93d543
  409c90:	push   ebx
  409c91:	sti    
  409c92:	popa   
  409c93:	mov    al,0x45
  409c95:	fst    DWORD PTR [ebx+0x61]
  409c98:	test   al,0xb6
  409c9a:	aad    0x38
  409c9c:	imul   eax,DWORD PTR [eax],0xe279faf4
  409ca2:	in     al,dx
  409ca3:	mov    cl,ch
  409ca5:	pop    ds
  409ca6:	sbb    eax,0xcafdd30b
  409cab:	and    ah,BYTE PTR [esi-0x2c]
  409cae:	inc    esp
  409caf:	pop    eax
  409cb0:	ret    0xe299
  409cb3:	xlat   BYTE PTR ds:[ebx]
  409cb4:	cmp    BYTE PTR [ebx],bh
  409cb6:	xchg   DWORD PTR [edx],edx
  409cb8:	popa   
  409cb9:	add    dh,ch
  409cbb:	pop    ebx
  409cbc:	mov    fs,esi
  409cbe:	leave  
  409cbf:	cdq    
  409cc0:	sbb    cl,BYTE PTR [ebx+0x16bf17b2]
  409cc6:	xchg   edx,eax
  409cc7:	mov    al,0x4c
  409cc9:	test   eax,0x48fc7cbd
  409cce:	scas   al,BYTE PTR es:[edi]
  409ccf:	lods   eax,DWORD PTR ds:[esi]
  409cd0:	jns    0x409c76
  409cd2:	in     eax,0x55
  409cd4:	mov    esp,?
  409cd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cd7:	psubb  mm6,QWORD PTR [eax+0xf]
  409cdb:	arpl   bx,ax
  409cdd:	mov    ds:0x483d6739,al
  409ce2:	cmp    BYTE PTR [eax+ecx*4-0x7c1dd121],dl
  409ce9:	inc    edi
  409cea:	xchg   ebx,eax
  409ceb:	enter  0x56e9,0x2c
  409cef:	imul   DWORD PTR [eax+0x62a83c3]
  409cf5:	sub    ebp,DWORD PTR [ebx]
  409cf7:	and    eax,0x164f9f54
  409cfc:	ret    0x8e6
  409cff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d00:	pop    edi
  409d01:	lock into 
  409d03:	mov    ah,0xac
  409d05:	xor    eax,0x9a76b272
  409d0a:	out    dx,eax
  409d0b:	cmp    al,0x1b
  409d0d:	in     eax,dx
  409d0e:	cmp    al,0xc2
  409d10:	push   0x2c
  409d12:	lds    edx,FWORD PTR [eax]
  409d14:	xchg   ecx,eax
  409d15:	in     eax,dx
  409d16:	add    ebx,DWORD PTR [edx]
  409d18:	call   0x71fc45f6
  409d1d:	xlat   BYTE PTR ds:[ebx]
  409d1e:	into   
  409d1f:	(bad)
  409d22:	jns    0x409d4a
  409d24:	test   DWORD PTR [edi],edi
  409d26:	in     eax,0x39
  409d28:	sub    DWORD PTR [ecx+0x78],esp
  409d2b:	push   cs
  409d2c:	mov    dl,0x40
  409d2e:	xor    ebp,DWORD PTR [ebx-0x63085d82]
  409d34:	rcr    BYTE PTR [eax-0x416c6250],1
  409d3a:	and    DWORD PTR [eax+0x76355827],esp
  409d40:	dec    esi
  409d41:	test   eax,0x4fc1f90a
  409d46:	xor    ecx,ebp
  409d48:	mov    cl,0xd3
  409d4a:	scas   al,BYTE PTR es:[edi]
  409d4b:	push   esp
  409d4c:	ret    0x4bf8
  409d4f:	or     DWORD PTR [ebx-0x35],ecx
  409d52:	pop    ebx
  409d53:	rol    BYTE PTR [eax],0xbb
  409d56:	lds    esi,FWORD PTR [ecx+0x2c]
  409d59:	ret    0x1bf8
  409d5c:	dec    eax
  409d5d:	mov    dh,0xc0
  409d5f:	dec    ecx
  409d60:	adc    DWORD PTR [ebx-0x433fc2ed],edi
  409d66:	fld    DWORD PTR [ecx-0x6a659eb9]
  409d6c:	pop    es
  409d6d:	fisubr DWORD PTR [eax+0x5]
  409d70:	bound  esp,QWORD PTR [eax]
  409d72:	clc    
  409d73:	add    BYTE PTR [eax+0x2f],bl
  409d76:	and    ch,ch
  409d78:	xchg   ebp,ecx
  409d7a:	sahf   
  409d7b:	mov    bl,BYTE PTR [ecx]
  409d7d:	mov    ds:0xd64a2f27,al
  409d82:	inc    ecx
  409d83:	(bad)  
  409d84:	es dec esi
  409d86:	leave  
  409d87:	sub    ah,BYTE PTR [eax]
  409d89:	ficom  WORD PTR [edi]
  409d8b:	ret    
  409d8c:	ror    DWORD PTR [eax],1
  409d8e:	loop   0x409db3
  409d90:	adc    al,0x17
  409d92:	cmp    ebx,edx
  409d94:	aaa    
  409d95:	pop    ebx
  409d96:	es mov eax,0x9fc1c9d8
  409d9c:	or     eax,0x615a3bce
  409da1:	cs mov eax,ebx
  409da4:	test   BYTE PTR [ecx+0x7e],cl
  409da7:	or     BYTE PTR [esi+0x7e],bl
  409daa:	into   
  409dab:	mov    fs,WORD PTR [ebx+0x6b]
  409dae:	sub    ah,bl
  409db0:	ret    0x8f7f
  409db3:	mov    edx,0x2bd18865
  409db8:	jge    0x409e38
  409dba:	mov    ah,0xc3
  409dbc:	mov    ecx,0x5af4faad
  409dc1:	nop
  409dc2:	cmp    ebp,DWORD PTR [edx]
  409dc4:	je     0x409d7d
  409dc6:	(bad)  
  409dc7:	lods   eax,DWORD PTR ds:[esi]
  409dc8:	lock int3 
  409dca:	test   BYTE PTR [esi],dl
  409dcc:	inc    edx
  409dcd:	lea    ebx,[edi+0x572afa89]
  409dd3:	loop   0x409e04
  409dd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409dd6:	push   ecx
  409dd7:	jmp    0x409e38
  409dd9:	out    dx,eax
  409dda:	push   ecx
  409ddb:	dec    edx
  409ddc:	mov    bh,0x79
  409dde:	jg     0x409db7
  409de0:	fidivr DWORD PTR [edx+0x35]
  409de3:	jge    0x409da1
  409de5:	fstp   DWORD PTR [ebx]
  409de7:	(bad)  
  409de8:	(bad)  
  409de9:	rcl    edx,1
  409deb:	push   edi
  409dec:	(bad)  
  409ded:	mov    cl,0x4c
  409def:	and    ecx,DWORD PTR [edi+0x4350085]
  409df5:	ror    eax,0x94
  409df8:	cld    
  409df9:	jo     0x409e66
  409dfb:	mov    DWORD PTR [edx-0x1d],esi
  409dfe:	addr16 repnz inc ebp
  409e01:	pop    eax
  409e02:	call   FWORD PTR [eax-0x4bf2f52b]
  409e08:	outs   dx,BYTE PTR ds:[esi]
  409e09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e0b:	sbb    BYTE PTR [ebx+0x7d4767e4],al
  409e11:	pop    edi
  409e12:	(bad)  
  409e13:	pusha  
  409e14:	pop    ebp
  409e15:	stos   DWORD PTR es:[edi],eax
  409e16:	repz idiv DWORD PTR [eax-0x34]
  409e1a:	cmp    al,0xcb
  409e1c:	sub    cl,BYTE PTR [edi]
  409e1e:	cwde   
  409e1f:	aaa    
  409e20:	shr    BYTE PTR [eax-0x78342160],0x73
  409e27:	and    BYTE PTR ds:0xfa0e4f17,ah
  409e2d:	pop    ebx
  409e2e:	int3   
  409e2f:	loopne 0x409de0
  409e31:	aam    0xe1
  409e33:	retf   
  409e34:	adc    dl,BYTE PTR [ecx-0x21]
  409e37:	pop    esp
  409e38:	sbb    ebx,edx
  409e3a:	outs   dx,BYTE PTR ds:[esi]
  409e3b:	adc    al,0x2
  409e3d:	test   al,0x91
  409e3f:	stc    
  409e40:	aad    0x2a
  409e42:	push   ds
  409e43:	cwde   
  409e44:	rol    DWORD PTR [esp+esi*1],0xe3
  409e48:	jns    0x409e1d
  409e4a:	inc    edi
  409e4b:	xchg   ebx,eax
  409e4c:	scas   eax,DWORD PTR es:[edi]
  409e4d:	bound  eax,QWORD PTR [ebx-0x41]
  409e50:	pop    eax
  409e51:	xor    al,0xe3
  409e53:	push   edi
  409e54:	int3   
  409e55:	sub    eax,0xa47b1c0d
  409e5a:	mov    dl,0xea
  409e5c:	lds    ecx,FWORD PTR [esi]
  409e5e:	cmp    eax,0xca0c463b
  409e63:	xor    DWORD PTR [eax],esp
  409e65:	and    DWORD PTR [edi-0x292bbc53],edx
  409e6b:	add    cl,BYTE PTR [eax+0x18]
  409e6e:	es (bad) 
  409e70:	imul   edi,DWORD PTR [ebx],0xffffffee
  409e73:	adc    eax,DWORD PTR [edx]
  409e75:	and    ah,al
  409e77:	packuswb mm2,QWORD PTR [ebx+0x0]
  409e7b:	add    eax,0x3e60205b
  409e80:	jecxz  0x409e76
  409e82:	pusha  
  409e83:	push   cs
  409e84:	and    al,0xb4
  409e86:	add    dl,al
  409e88:	sbb    eax,0x65f5d0db
  409e8d:	jmp    0x409f01
  409e8f:	pop    ss
  409e90:	in     eax,0x55
  409e92:	sub    ebx,esp
  409e94:	or     eax,0x179686a0
  409e99:	repz push es
  409e9b:	adc    ah,BYTE PTR [ecx+0x72]
  409e9e:	cmc    
  409e9f:	xchg   BYTE PTR [ebx-0x78bf55b8],bl
  409ea5:	adc    DWORD PTR ds:0x28b26ae5,0xaf42109d
  409eaf:	stos   DWORD PTR es:[edi],eax
  409eb0:	pop    edi
  409eb1:	ins    DWORD PTR es:[edi],dx
  409eb2:	ins    BYTE PTR es:[edi],dx
  409eb3:	shr    DWORD PTR [edx],1
  409eb5:	fsubr  st(6),st
  409eb7:	xor    al,0xe8
  409eb9:	cdq    
  409eba:	add    ch,BYTE PTR [ebp-0x53]
  409ebd:	repnz pop edi
  409ebf:	imul   ebp,DWORD PTR [esi],0x87bee146
  409ec5:	jns    0x409e96
  409ec7:	aad    0x7e
  409ec9:	mov    dh,0x74
  409ecb:	and    BYTE PTR [ebp-0x4b50bb04],0x1c
  409ed2:	pop    ebx
  409ed3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ed4:	scas   eax,DWORD PTR es:[edi]
  409ed5:	sub    BYTE PTR gs:[ebx-0x69],ah
  409ed9:	cld    
  409eda:	mov    bl,BYTE PTR [ebx+eiz*4-0x91f1580]
  409ee1:	inc    eax
  409ee2:	inc    esi
  409ee3:	pop    edi
  409ee4:	jnp    0x409e6a
  409ee6:	inc    esi
  409ee7:	loope  0x409eef
  409ee9:	mov    edx,0x9991549d
  409eee:	or     eax,0xd16c1a60
  409ef3:	sbb    eax,0x29b2f412
  409ef8:	retf   
  409ef9:	cmp    DWORD PTR [eax+0x11],edi
  409efc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409efd:	in     al,dx
  409efe:	invd   
  409f00:	aam    0x3e
  409f02:	inc    esp
  409f03:	push   ss
  409f04:	mov    bl,0x16
  409f06:	lods   al,BYTE PTR ds:[esi]
  409f07:	arpl   WORD PTR [ebx],bp
  409f09:	and    BYTE PTR [esi+0x48],cl
  409f0c:	(bad)  
  409f0d:	ficomp WORD PTR [edx+0x2b6f2fba]
  409f13:	stos   DWORD PTR es:[edi],eax
  409f14:	jecxz  0x409f2c
  409f16:	jmp    0x409f20
  409f18:	jne    0x409ebf
  409f1a:	fsubr  DWORD PTR [ebp+0x6c0e4cf8]
  409f20:	hlt    
  409f21:	push   cs
  409f22:	arpl   WORD PTR [ebp+edi*8-0x58],si
  409f26:	test   DWORD PTR [edi-0x70],ebp
  409f29:	mov    ebp,0xae359c43
  409f2e:	xchg   ebp,eax
  409f2f:	das    
  409f30:	repnz shl DWORD PTR [ecx-0x146a2bf8],cl
  409f37:	sbb    al,0xbc
  409f39:	sbb    bl,ch
  409f3b:	and    ch,dl
  409f3d:	inc    esi
  409f3e:	pushf  
  409f3f:	in     eax,0x2b
  409f41:	(bad)  
  409f42:	mov    ds:0xf6368f5f,eax
  409f47:	push   0xffffffe4
  409f49:	cld    
  409f4a:	icebp  
  409f4b:	inc    esi
  409f4c:	cmp    BYTE PTR [edx],dh
  409f4e:	push   0x67262a60
  409f53:	or     BYTE PTR [ecx],dh
  409f55:	adc    cl,BYTE PTR [ebp-0x62]
  409f58:	sub    al,0x3
  409f5a:	outs   dx,BYTE PTR ds:[esi]
  409f5b:	mov    al,BYTE PTR [ebp+0x3d]
  409f5e:	inc    edi
  409f5f:	jno    0x409fc2
  409f61:	push   es
  409f62:	es loope 0x409fe4
  409f65:	dec    esp
  409f66:	mov    ebx,DWORD PTR [ecx+esi*1]
  409f69:	pop    eax
  409f6a:	out    dx,al
  409f6b:	jno    0x409f47
  409f6d:	push   es
  409f6e:	adc    DWORD PTR [eax+0x5a0b14b8],eax
  409f74:	ret    
  409f75:	mov    bh,0x37
  409f77:	out    dx,eax
  409f78:	mov    edi,0xc1f063e4
  409f7d:	adc    BYTE PTR [edx+ebp*4-0x78b554db],bl
  409f84:	das    
  409f85:	push   0x9eab9093
  409f8a:	xchg   ebp,eax
  409f8b:	stos   DWORD PTR es:[edi],eax
  409f8c:	and    eax,0xaa68338b
  409f91:	pop    edx
  409f92:	and    BYTE PTR [edi+eiz*1+0x2ab9d6a6],bh
  409f99:	mov    al,0x86
  409f9b:	inc    edi
  409f9c:	gs jne 0x409fcf
  409f9f:	push   ds
  409fa0:	mov    edx,0x56997b90
  409fa5:	ds std 
  409fa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fa8:	jb     0x409f7f
  409faa:	into   
  409fab:	xor    eax,0xe9e7be9
  409fb0:	(bad)  
  409fb1:	add    al,BYTE PTR [eax]
  409fb3:	mov    ebp,0xc1d34692
  409fb8:	in     eax,dx
  409fb9:	or     esi,esi
  409fbb:	sbb    al,0xc5
  409fbd:	mov    ah,0x53
  409fbf:	sbb    esi,DWORD PTR [esi+edx*2-0x3d]
  409fc3:	or     ebp,edi
  409fc5:	inc    edx
  409fc6:	mov    ch,0x5c
  409fc8:	xchg   ebx,eax
  409fc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fca:	mov    dh,0x63
  409fcc:	and    ebp,esp
  409fce:	cmovne ebx,DWORD PTR [ebx-0xa4dba8]
  409fd5:	or     BYTE PTR ds:0x4973aa39,0x54
  409fdc:	pop    eax
  409fdd:	push   0x33
  409fdf:	les    esi,FWORD PTR [ecx-0x48]
  409fe2:	mov    edi,esi
  409fe4:	xor    ch,BYTE PTR [ebx+0x60]
  409fe7:	(bad)  
  409fe9:	ficom  WORD PTR [eax-0x64]
  409fec:	adc    al,0xe5
  409fee:	shl    BYTE PTR [ecx+0x5bdd7aa4],0x32
  409ff5:	fadd   DWORD PTR [edi]
  409ff7:	ret    0xd652
  409ffa:	(bad)  
  409ffb:	leave  
  409ffc:	cmc    
  409ffd:	cmp    BYTE PTR [ebp+0x2e10da8a],0xc6
  40a004:	mov    esp,0x6f98f1f3
  40a009:	fbstp  TBYTE PTR ds:0x3a6825fd
  40a00f:	int3   
  40a010:	not    DWORD PTR [ebx]
  40a012:	push   0x14
  40a014:	imul   ebp,esi,0x5d7fb1c6
  40a01a:	ins    DWORD PTR es:[edi],dx
  40a01b:	test   al,0xfb
  40a01d:	out    0xd7,eax
  40a01f:	mov    esp,0xf8ea889a
  40a024:	adc    esi,DWORD PTR fs:[ebp+0x4c]
  40a028:	add    eax,0x80e46832
  40a02d:	jp     0x40a085
  40a02f:	sub    ebx,DWORD PTR [esi+0x286b6d90]
  40a035:	push   cs
  40a036:	sbb    BYTE PTR [edx-0x3b],ch
  40a039:	cmp    BYTE PTR [edi-0x3],bh
  40a03c:	mov    esi,0x3b7f944a
  40a041:	loopne 0x40a061
  40a043:	mov    ecx,0x9f0a13f8
  40a048:	push   ebp
  40a049:	mov    ds:0x71af09b3,eax
  40a04e:	lock fmul DWORD PTR [ebp-0x6f8ea81]
  40a055:	mov    bl,0x38
  40a057:	pop    ss
  40a058:	mov    ch,BYTE PTR [edi+0x0]
  40a05b:	dec    eax
  40a05c:	cmp    DWORD PTR [ebx+0x70d3eb50],0xb6a92e02
  40a066:	sbb    al,0x20
  40a068:	inc    ebx
  40a069:	into   
  40a06a:	test   eax,0xa2da9a30
  40a06f:	adc    ch,BYTE PTR [esi-0x80]
  40a072:	pusha  
  40a073:	lahf   
  40a074:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a075:	stos   DWORD PTR es:[edi],eax
  40a076:	fs jne 0x40a03e
  40a079:	sub    BYTE PTR [ebx],0x51
  40a07c:	push   cs
  40a07d:	enter  0xa596,0x4f
  40a081:	xchg   esp,eax
  40a082:	jle    0x40a05c
  40a084:	lahf   
  40a085:	or     al,BYTE PTR [edx-0x32]
  40a088:	inc    ecx
  40a089:	shl    ebp,0x84
  40a08c:	shl    DWORD PTR [eax],cl
  40a08e:	sub    BYTE PTR [ebx],0x37
  40a091:	push   ecx
  40a092:	jae    0x40a03e
  40a094:	pusha  
  40a095:	sub    BYTE PTR [edi-0x61],cl
  40a098:	in     al,dx
  40a099:	call   0x869a:0x84023d72
  40a0a0:	push   esp
  40a0a1:	inc    BYTE PTR [esi+edi*8+0x68]
  40a0a5:	fwait
  40a0a6:	inc    edx
  40a0a7:	mov    ds:0x6d4d8d79,eax
  40a0ac:	pop    ebx
  40a0ad:	test   DWORD PTR [esp+eax*4+0x4e],esp
  40a0b1:	mov    ecx,0xe10c9113
  40a0b6:	and    al,0xd7
  40a0b8:	dec    esp
  40a0b9:	cli    
  40a0ba:	inc    esp
  40a0bb:	xchg   DWORD PTR [eax],ebx
  40a0bd:	mov    dh,0xc5
  40a0bf:	cmc    
  40a0c0:	push   ecx
  40a0c1:	inc    ecx
  40a0c2:	jo     0x40a098
  40a0c4:	push   edx
  40a0c5:	ret    
  40a0c6:	xchg   esi,eax
  40a0c7:	and    esp,DWORD PTR [edi-0x21737709]
  40a0cd:	out    0x2c,eax
  40a0cf:	aad    0xa6
  40a0d1:	loop   0x40a0ab
  40a0d3:	xchg   BYTE PTR [eax-0x4d],al
  40a0d6:	dec    esp
  40a0d7:	cmp    DWORD PTR [edi+0x76],ecx
  40a0da:	iret   
  40a0db:	popf   
  40a0dc:	mov    bh,0x14
  40a0de:	jp     0x40a0fa
  40a0e0:	stos   DWORD PTR es:[edi],eax
  40a0e1:	sub    DWORD PTR [ebx-0x251a9693],ebp
  40a0e7:	push   0x26
  40a0e9:	(bad)  
  40a0ea:	sub    DWORD PTR [edi],ebx
  40a0ec:	test   eax,0x5e7c4814
  40a0f1:	js     0x40a11a
  40a0f3:	mov    ebx,0xac801ae3
  40a0f8:	sub    eax,ebp
  40a0fa:	mov    BYTE PTR [ebx+0x54],al
  40a0fd:	pushf  
  40a0fe:	loope  0x40a107
  40a100:	stos   BYTE PTR es:[edi],al
  40a101:	das    
  40a102:	in     eax,dx
  40a103:	ss mov cl,0x8e
  40a106:	lahf   
  40a107:	sbb    al,0xe3
  40a109:	pop    esi
  40a10a:	jmp    0x40a188
  40a10c:	std    
  40a10d:	repnz and dl,BYTE PTR [ecx+0x6505e55a]
  40a114:	int    0x3b
  40a116:	sbb    BYTE PTR [ecx+0x46],bh
  40a119:	inc    ecx
  40a11a:	fisttp DWORD PTR [ebx-0x5e]
  40a11d:	xor    dh,cl
  40a11f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a120:	int3   
  40a121:	pop    es
  40a122:	jle    0x40a0c6
  40a124:	pushf  
  40a125:	not    BYTE PTR [ecx]
  40a127:	rcr    BYTE PTR [eax+0x2698d6a7],1
  40a12d:	fiadd  DWORD PTR [ecx]
  40a12f:	stos   BYTE PTR es:[edi],al
  40a130:	jbe    0x40a159
  40a132:	int    0x36
  40a134:	ror    DWORD PTR [edx+0x3b],0x64
  40a138:	add    ebx,DWORD PTR [edi+0x389643c4]
  40a13e:	xchg   ecx,eax
  40a13f:	push   ebx
  40a141:	sub    eax,0x9f41563a
  40a146:	outs   dx,BYTE PTR ds:[esi]
  40a147:	hlt    
  40a148:	jns    0x40a168
  40a14a:	cli    
  40a14b:	rcr    DWORD PTR [eax-0x25998d41],cl
  40a151:	mov    edx,0x6f5f3302
  40a156:	rcr    BYTE PTR [ebx+ebp*8-0x4ea26fc7],0x3a
  40a15e:	push   ebx
  40a15f:	inc    edx
  40a160:	or     bh,ah
  40a162:	rcl    BYTE PTR [ebp-0x53],0x70
  40a166:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a167:	sub    BYTE PTR [esi+0x68c83f60],bh
  40a16d:	clc    
  40a16e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a16f:	sbb    BYTE PTR [eax+eiz*1-0x6b],ch
  40a173:	mov    ebp,0x24459708
  40a178:	push   eax
  40a179:	jle    0x40a13b
  40a17b:	sbb    dh,dl
  40a17d:	jmp    0x40a126
  40a17f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a180:	jo     0x40a116
  40a182:	inc    esp
  40a183:	idiv   DWORD PTR [edx-0x72]
  40a186:	jl     0x40a156
  40a188:	xchg   esi,eax
  40a189:	xor    esp,DWORD PTR [eax]
  40a18b:	icebp  
  40a18c:	dec    ebp
  40a18d:	mov    ch,0x7a
  40a18f:	es jbe 0x40a18a
  40a192:	push   eax
  40a193:	shr    DWORD PTR [esi+0x8],cl
  40a196:	push   ebp
  40a197:	aam    0x80
  40a199:	dec    esi
  40a19a:	enter  0x78db,0x22
  40a19e:	aas    
  40a19f:	jnp    0x40a1c4
  40a1a1:	ss jp  0x40a15c
  40a1a4:	fisub  DWORD PTR [edi+0x779292cb]
  40a1aa:	pop    esi
  40a1ab:	out    dx,al
  40a1ac:	push   esi
  40a1ad:	frstor [eax+0x3f]
  40a1b0:	jle    0x40a1d7
  40a1b2:	xor    al,0x52
  40a1b4:	inc    esp
  40a1b5:	push   ds
  40a1b6:	jl     0x40a164
  40a1b8:	xchg   edi,eax
  40a1b9:	push   0x18ef8c8a
  40a1be:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40a1c0:	(bad)  
  40a1c2:	(bad)  
  40a1c3:	xchg   ecx,eax
  40a1c4:	stos   DWORD PTR es:[edi],eax
  40a1c5:	out    dx,eax
  40a1c6:	and    dl,BYTE PTR [esi]
  40a1c8:	ins    BYTE PTR es:[edi],dx
  40a1c9:	mov    esp,0x3313a085
  40a1ce:	test   eax,0xdc7cb78f
  40a1d3:	pop    ebp
  40a1d4:	std    
  40a1d5:	loop   0x40a162
  40a1d7:	aaa    
  40a1d8:	push   ds
  40a1d9:	adc    eax,0x4d54eb96
  40a1de:	iret   
  40a1df:	fmul   DWORD PTR [eax+0x3f]
  40a1e2:	ja     0x40a216
  40a1e4:	xchg   esp,eax
  40a1e5:	pop    esp
  40a1e6:	fwait
  40a1e7:	cmp    al,0x6c
  40a1e9:	jne    0x40a1de
  40a1eb:	mov    bl,0x3a
  40a1ed:	sti    
  40a1ee:	pop    es
  40a1ef:	sbb    BYTE PTR [ebx+0x3a],bl
  40a1f2:	mov    esp,0xd99c4fc2
  40a1f7:	or     BYTE PTR [eax+0x664f3fad],cl
  40a1fd:	adc    eax,0xf0943ad8
  40a202:	dec    esi
  40a203:	loop   0x40a25d
  40a205:	dec    edi
  40a206:	jno    0x40a238
  40a208:	adc    ch,BYTE PTR [esi+edi*2-0x52134421]
  40a20f:	push   cs
  40a210:	push   esp
  40a211:	(bad)  
  40a212:	lahf   
  40a213:	and    BYTE PTR [edi],0x4b
  40a216:	push   ss
  40a217:	jmp    0x7a28:0x452f303e
  40a21e:	adc    DWORD PTR [esi-0x59e1c73],ebx
  40a224:	popa   
  40a225:	data16 ins BYTE PTR es:[edi],dx
  40a227:	sti    
  40a228:	imul   eax,DWORD PTR [edx+0x3b],0x62d5d118
  40a22f:	std    
  40a230:	push   eax
  40a231:	test   al,0x31
  40a233:	adc    edx,DWORD PTR [eax]
  40a235:	inc    edi
  40a236:	jge    0x40a1ca
  40a238:	int3   
  40a239:	(bad)  
  40a23a:	pop    edx
  40a23b:	sub    WORD PTR [edi+0x3dd9f2c2],ax
  40a242:	add    edx,DWORD PTR [edx]
  40a244:	call   0xf140:0xc87b9b0c
  40a24b:	inc    ebp
  40a24c:	out    dx,eax
  40a24d:	jg     0x40a2a8
  40a24f:	mov    dh,0xac
  40a251:	gs addr16 inc eax
  40a254:	outs   dx,BYTE PTR ds:[esi]
  40a255:	pop    ecx
  40a256:	jnp    0x40a20a
  40a258:	les    ebx,FWORD PTR [edi]
  40a25a:	xor    ebx,ebp
  40a25c:	dec    edx
  40a25d:	xor    ah,dh
  40a25f:	in     eax,dx
  40a260:	nop
  40a261:	pushf  
  40a262:	adc    ebx,DWORD PTR [esp+esi*2]
  40a265:	ss and eax,0xa4f1b602
  40a26b:	inc    BYTE PTR [edx+0x2e]
  40a26e:	push   es
  40a26f:	mov    ds:0x83e18674,eax
  40a274:	xchg   ebp,eax
  40a275:	mov    esp,0x395e9a78
  40a27a:	push   0xffffff89
  40a27c:	mov    ebx,0x276f0e35
  40a281:	mov    DWORD PTR [esi-0x6ef91372],esi
  40a287:	and    al,0x6c
  40a289:	popf   
  40a28a:	inc    esp
  40a28b:	sub    DWORD PTR [eax-0x47],0x3b
  40a28f:	inc    edx
  40a290:	fadd   QWORD PTR [eax]
  40a292:	mov    ?,WORD PTR [ebp+0x7be08432]
  40a298:	(bad)  
  40a299:	or     ebp,ebp
  40a29b:	(bad)  
  40a29d:	mov    esi,0xe2f71c2d
  40a2a2:	push   eax
  40a2a3:	xchg   esi,eax
  40a2a4:	shr    DWORD PTR [ebx],1
  40a2a6:	aaa    
  40a2a7:	test   bl,bl
  40a2a9:	and    cl,BYTE PTR [eax]
  40a2ab:	int3   
  40a2ac:	retf   0xaf7b
  40a2af:	sub    DWORD PTR [esi],ebp
  40a2b1:	and    DWORD PTR [edx-0x34],esi
  40a2b4:	inc    eax
  40a2b5:	push   0xffffffdf
  40a2b7:	repz fcomp st(1)
  40a2ba:	lods   eax,DWORD PTR ds:[esi]
  40a2bb:	mov    ds:0x2ef71025,al
  40a2c0:	dec    ebx
  40a2c1:	ss out 0xa9,eax
  40a2c4:	push   ecx
  40a2c5:	and    edi,DWORD PTR [eax]
  40a2c7:	and    al,0x38
  40a2c9:	and    ebp,DWORD PTR [ebp-0x1f]
  40a2cc:	jb     0x40a2a2
  40a2ce:	mov    cl,BYTE PTR [eax+0x47]
  40a2d1:	cmc    
  40a2d2:	rcr    DWORD PTR [esi-0x4b],0x1d
  40a2d6:	into   
  40a2d7:	in     al,dx
  40a2d8:	mov    BYTE PTR [esi-0x29],bl
  40a2db:	stos   DWORD PTR es:[edi],eax
  40a2dc:	add    cl,ch
  40a2de:	mov    ds:0x831c2660,al
  40a2e3:	mov    eax,ds:0x68a79436
  40a2e8:	shl    edx,1
  40a2ea:	push   edi
  40a2eb:	shr    BYTE PTR [edi-0x51ad6410],0x9b
  40a2f2:	inc    edx
  40a2f3:	push   0x76
  40a2f5:	pop    ebp
  40a2f6:	push   ds
  40a2f7:	mov    edx,0x1cfc2260
  40a2fc:	popa   
  40a2fd:	xor    ecx,ebx
  40a2ff:	fisubr DWORD PTR [ebx+0x6fb63434]
  40a305:	cmp    ch,ch
  40a307:	js     0x40a34a
  40a309:	stos   DWORD PTR es:[edi],eax
  40a30a:	mov    ebx,0x6d6b8690
  40a30f:	arpl   di,bp
  40a311:	pop    edi
  40a312:	or     ah,ah
  40a314:	xor    dh,al
  40a316:	(bad)  
  40a317:	lods   al,BYTE PTR ds:[esi]
  40a318:	adc    cl,BYTE PTR ds:0x9d2948c8
  40a31e:	xchg   ebp,eax
  40a31f:	inc    edx
  40a320:	dec    esp
  40a321:	repz pusha 
  40a323:	rcr    bh,cl
  40a325:	cli    
  40a326:	fst    DWORD PTR [ecx]
  40a328:	in     eax,dx
  40a329:	shr    esi,cl
  40a32b:	adc    eax,0xb31ff8df
  40a330:	jp     0x40a2c6
  40a332:	popa   
  40a333:	clc    
  40a334:	mov    ebx,0xdee0a42f
  40a339:	scas   al,BYTE PTR es:[edi]
  40a33a:	es xchg esi,eax
  40a33c:	mov    ebx,0x98df4a39
  40a341:	xchg   DWORD PTR [ebp+eax*4-0x57],ebx
  40a345:	(bad)  
  40a346:	sar    DWORD PTR ds:0x92e8660d,0x9d
  40a34d:	fmul   st,st(1)
  40a34f:	and    cl,BYTE PTR [edx+0x3b]
  40a352:	test   DWORD PTR [edx+0x39a9a572],ebp
  40a358:	rcl    DWORD PTR [ebp-0x15],cl
  40a35b:	dec    ebp
  40a35c:	lods   eax,DWORD PTR ds:[esi]
  40a35d:	cs cwde 
  40a35f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a360:	jp     0x40a37c
  40a362:	sar    bh,cl
  40a364:	and    DWORD PTR [edx-0x2edc749d],esp
  40a36a:	and    bl,BYTE PTR [esi-0x680be70f]
  40a370:	sbb    ch,BYTE PTR [eax]
  40a372:	mov    eax,ds:0xdc822b95
  40a377:	jo     0x40a3b0
  40a379:	inc    ecx
  40a37a:	inc    ebx
  40a37b:	repnz and BYTE PTR [eax],ch
  40a37e:	xor    al,0xc2
  40a380:	add    edi,DWORD PTR [ebp-0x6c]
  40a383:	and    eax,0xea7ad366
  40a388:	stos   DWORD PTR es:[edi],eax
  40a389:	jl     0x40a3b1
  40a38b:	push   0x2e721e56
  40a390:	add    DWORD PTR [eax+0x4f1948a3],esp
  40a396:	xchg   DWORD PTR [ecx-0x4c],eax
  40a399:	fucomip st,st(6)
  40a39b:	aam    0x90
  40a39d:	sbb    edi,edi
  40a39f:	fst    QWORD PTR [edx+eax*8+0x51cfff1e]
  40a3a6:	jecxz  0x40a383
  40a3a8:	mov    ch,0x6f
  40a3aa:	push   esp
  40a3ab:	or     cl,BYTE PTR [edi-0x60]
  40a3ae:	inc    eax
  40a3af:	xor    DWORD PTR [edx+0x1b],edx
  40a3b2:	aas    
  40a3b3:	call   0x9489a9af
  40a3b8:	mov    ah,0x75
  40a3ba:	hlt    
  40a3bb:	and    dh,BYTE PTR [edi]
  40a3bd:	(bad)  
  40a3be:	fs scas eax,DWORD PTR es:[edi]
  40a3c0:	fiadd  WORD PTR [edx]
  40a3c2:	fistp  WORD PTR [eax+0x793517a6]
  40a3c8:	sub    DWORD PTR [ecx+edx*8-0x5f],ecx
  40a3cc:	arpl   WORD PTR [eax],dx
  40a3ce:	adc    cl,bl
  40a3d0:	push   ebx
  40a3d1:	ins    BYTE PTR es:[edi],dx
  40a3d2:	adc    al,0xca
  40a3d4:	add    edi,DWORD PTR [edi+0x50]
  40a3d7:	xchg   BYTE PTR [eax],dh
  40a3d9:	lods   al,BYTE PTR ds:[esi]
  40a3da:	rcr    BYTE PTR [edi],1
  40a3dc:	mov    BYTE PTR [esi+esi*4-0x5f321f8e],dh
  40a3e3:	outs   dx,BYTE PTR ss:[esi]
  40a3e5:	ja     0x40a3e9
  40a3e7:	xchg   ebp,eax
  40a3e8:	mov    bh,0x8f
  40a3ea:	mov    DWORD PTR [eax+ecx*1],ecx
  40a3ed:	sub    DWORD PTR [esi-0x6e76b29],eax
  40a3f3:	outs   dx,BYTE PTR ds:[esi]
  40a3f4:	sub    eax,0xbd9033e4
  40a3f9:	cmp    ecx,DWORD PTR cs:[ecx+0x12]
  40a3fd:	xlat   BYTE PTR ds:[ebx]
  40a3fe:	(bad)  
  40a3ff:	rcr    BYTE PTR [ebx+ecx*1],cl
  40a402:	test   esi,edi
  40a404:	aad    0xb4
  40a406:	fsubr  DWORD PTR [eax]
  40a408:	add    al,0x76
  40a40a:	je     0x40a3eb
  40a40c:	dec    ebx
  40a40d:	(bad)  
  40a40e:	cwde   
  40a40f:	sub    eax,0x5617fd9f
  40a414:	sub    BYTE PTR [esi+ebx*8-0x330316d2],dl
  40a41b:	inc    esi
  40a41c:	jae    0x40a481
  40a41e:	mov    esp,0x3bfe20a0
  40a423:	xor    BYTE PTR [edx],bh
  40a425:	mov    WORD PTR [edi+eiz*2+0xb],es
  40a429:	push   0x13
  40a42b:	clc    
  40a42c:	mov    ch,0x9c
  40a42e:	and    eax,0x67af16a
  40a433:	mov    ebp,0xb0034313
  40a438:	int    0xfb
  40a43a:	mov    ds:0xc1336a8d,al
  40a43f:	mov    eax,ds:0xaf32f53e
  40a444:	or     al,0xba
  40a446:	test   BYTE PTR [eax-0xa],0x7c
  40a44a:	mov    ch,BYTE PTR [eax+0x37]
  40a44d:	push   edi
  40a44e:	icebp  
  40a44f:	xor    ecx,DWORD PTR [ecx+0x63690772]
  40a455:	aas    
  40a456:	mov    edx,edi
  40a458:	sbb    DWORD PTR [eax],ecx
  40a45a:	mov    WORD PTR [esp+edi*1],?
  40a45d:	ror    al,1
  40a45f:	iret   
  40a460:	sahf   
  40a461:	lds    ecx,FWORD PTR [edx-0x75]
  40a464:	pop    ecx
  40a465:	repnz inc edx
  40a467:	add    al,BYTE PTR [eax]
  40a469:	pop    ebx
  40a46a:	lea    esp,[ebx-0x7f47c67c]
  40a470:	fcom   QWORD PTR ds:[ebx-0x1973ccb8]
  40a477:	jl     0x40a499
  40a479:	push   edx
  40a47a:	(bad)  
  40a47b:	jno    0x40a455
  40a47d:	test   bl,0xee
  40a480:	inc    eax
  40a481:	js     0x40a46b
  40a483:	repnz test DWORD PTR [eax+0x20],ebx
  40a487:	fisub  WORD PTR [eax+0x34]
  40a48a:	retf   0x7a47
  40a48d:	rcr    DWORD PTR [ebx+0x61168109],0xbd
  40a494:	sbb    DWORD PTR [ebp-0xa9ffcc6],ebx
  40a49a:	xor    eax,0xdb3ef0b1
  40a49f:	mov    edx,0xeb2ebafa
  40a4a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a4a5:	std    
  40a4a6:	sub    BYTE PTR [esi-0x37dbf26e],bl
  40a4ac:	jo     0x40a4a0
  40a4ae:	into   
  40a4af:	adc    ebx,eax
  40a4b1:	(bad)  
  40a4b2:	cmp    ah,BYTE PTR [ebp+0x13535f7e]
  40a4b8:	mov    dl,0x3d
  40a4ba:	cwde   
  40a4bb:	mov    ch,0x50
  40a4bd:	push   esp
  40a4be:	push   eax
  40a4bf:	retf   
  40a4c0:	jo     0x40a46e
  40a4c2:	pushf  
  40a4c3:	lock lods al,BYTE PTR ds:[esi]
  40a4c5:	jmp    0x40a4b3
  40a4c7:	adc    cl,cl
  40a4c9:	data16 or ch,bl
  40a4cc:	push   eax
  40a4cd:	lods   al,BYTE PTR ds:[esi]
  40a4ce:	inc    ecx
  40a4cf:	mov    eax,0xc9acab41
  40a4d4:	aaa    
  40a4d5:	in     eax,0x5f
  40a4d7:	and    ecx,edx
  40a4d9:	sbb    edx,esp
  40a4db:	aad    0xc3
  40a4dd:	jb     0x40a4b4
  40a4df:	sbb    eax,0x91029b41
  40a4e4:	mov    edx,0xee099fd
  40a4e9:	int3   
  40a4ea:	pop    ecx
  40a4eb:	fidivr WORD PTR [ebx]
  40a4ed:	sub    DWORD PTR [ecx-0x2],ebx
  40a4f0:	fidivr DWORD PTR [ecx]
  40a4f2:	fsubr  DWORD PTR [edi+0x32]
  40a4f5:	mov    eax,eax
  40a4f7:	scas   al,BYTE PTR es:[edi]
  40a4f8:	out    0x7b,al
  40a4fa:	shr    ecx,cl
  40a4fc:	sbb    DWORD PTR [ebx-0x3ed5d46b],ecx
  40a502:	aaa    
  40a503:	fist   WORD PTR [ebp-0x8]
  40a506:	xor    dl,ah
  40a508:	je     0x40a530
  40a50a:	into   
  40a50b:	imul   ebx,DWORD PTR [edi],0x9a8bb25a
  40a511:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a512:	pop    ebp
  40a513:	sbb    eax,0x4d127216
  40a518:	or     esi,DWORD PTR [ecx+0x362b40af]
  40a51e:	mov    ebp,0x1d4f2eab
  40a523:	xchg   esp,eax
  40a524:	test   ebp,ebp
  40a526:	sbb    DWORD PTR [edi],edx
  40a528:	xchg   esi,eax
  40a529:	push   0xffffffa8
  40a52b:	stc    
  40a52c:	pushf  
  40a52d:	dec    ebx
  40a52e:	stos   DWORD PTR es:[edi],eax
  40a52f:	cmp    DWORD PTR [di],0x19
  40a533:	adc    dl,BYTE PTR [eax]
  40a535:	fucomi st,st(6)
  40a537:	jbe    0x40a532
  40a539:	cmp    DWORD PTR [edx+eiz*1-0xe],eax
  40a53d:	test   BYTE PTR [ebx+0x355e46ed],ch
  40a543:	scas   eax,DWORD PTR es:[edi]
  40a544:	dec    ebx
  40a545:	xchg   edx,eax
  40a546:	fild   WORD PTR [ecx+0x4bcadebb]
  40a54c:	or     eax,0x8e7006e2
  40a551:	iret   
  40a552:	mov    ecx,esp
  40a554:	(bad)  [eax+ecx*2-0x19]
  40a558:	push   es
  40a559:	dec    edx
  40a55a:	out    dx,al
  40a55b:	push   cs
  40a55c:	ins    BYTE PTR es:[edi],dx
  40a55d:	pushf  
  40a55e:	outs   dx,BYTE PTR ds:[esi]
  40a55f:	adc    BYTE PTR [edx+0x4f],cl
  40a562:	sar    BYTE PTR [esi-0x4ae12174],cl
  40a568:	pcmpgtb mm3,QWORD PTR [ebp-0xb]
  40a56c:	and    ah,dh
  40a56e:	loope  0x40a55b
  40a570:	aad    0xc3
  40a572:	inc    edx
  40a573:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a574:	js     0x40a5db
  40a576:	lea    ebp,[edi+0x745a7624]
  40a57c:	stos   BYTE PTR es:[edi],al
  40a57d:	(bad)  
  40a57e:	int    0x73
  40a580:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a581:	sub    dh,cl
  40a583:	push   esi
  40a584:	iret   
  40a585:	push   0x35
  40a587:	add    al,0x41
  40a589:	pop    ebx
  40a58a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a58b:	stc    
  40a58c:	mov    cl,0xde
  40a58e:	jmp    0xbf52fbe8
  40a593:	mov    eax,ds:0x92e95804
  40a598:	fcom   DWORD PTR [ebp-0x66]
  40a59b:	ds xchg ebp,eax
  40a59d:	sbb    al,0x54
  40a59f:	fistp  WORD PTR [ebx+eax*1-0x2e]
  40a5a3:	mov    WORD PTR [edx+0x15f9ed69],gs
  40a5a9:	pop    esi
  40a5aa:	packuswb mm0,mm0
  40a5ad:	fs cmp eax,0x9ad3e0bf
  40a5b3:	icebp  
  40a5b4:	shl    BYTE PTR [esp+edx*2+0x7b],0x86
  40a5b9:	outs   dx,BYTE PTR ds:[esi]
  40a5ba:	shl    DWORD PTR [eax+0x524c43f0],0x9e
  40a5c1:	pop    es
  40a5c2:	sbb    BYTE PTR [edx-0x3a],dl
  40a5c5:	sar    DWORD PTR [esi],cl
  40a5c7:	lods   al,BYTE PTR ds:[esi]
  40a5c8:	out    dx,eax
  40a5c9:	add    edi,ebx
  40a5cb:	stos   DWORD PTR es:[edi],eax
  40a5cc:	pop    eax
  40a5cd:	or     ecx,ecx
  40a5cf:	cmp    al,0xee
  40a5d1:	fstp   QWORD PTR [edx+0x67]
  40a5d4:	push   esi
  40a5d5:	and    edx,DWORD PTR [ebp-0x42b61db4]
  40a5db:	push   esp
  40a5dc:	(bad)  
  40a5dd:	aam    0x8e
  40a5df:	inc    edx
  40a5e0:	mov    edi,0xad114cff
  40a5e5:	mov    eax,ds:0xc85f23d4
  40a5ea:	adc    eax,0xf532ac36
  40a5ef:	int3   
  40a5f0:	and    al,0x52
  40a5f2:	pop    ecx
  40a5f3:	sub    al,0xc5
  40a5f5:	and    ah,dh
  40a5f7:	jne    0x40a5a5
  40a5f9:	in     eax,dx
  40a5fa:	pop    ebx
  40a5fb:	hlt    
  40a5fc:	add    al,bl
  40a5fe:	or     al,BYTE PTR [edx-0x2f]
  40a601:	xor    al,0x13
  40a603:	out    0x8,al
  40a605:	cmp    al,0xbc
  40a607:	and    esp,DWORD PTR [edx+0x25]
  40a60a:	ds jbe 0x40a591
  40a60d:	and    BYTE PTR [eax+0x3a16f50c],al
  40a613:	push   ds
  40a614:	cs inc ecx
  40a616:	cmp    BYTE PTR [edi],0x1b
  40a619:	cwde   
  40a61a:	fidivr DWORD PTR [esi]
  40a61c:	cwde   
  40a61d:	inc    edx
  40a61e:	pop    eax
  40a61f:	in     eax,0x75
  40a621:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a622:	push   ebx
  40a623:	cmp    eax,0xf7f0c0bd
  40a628:	or     eax,DWORD PTR [esi]
  40a62a:	sbb    al,0x18
  40a62c:	loop   0x40a693
  40a62e:	push   ebp
  40a62f:	sbb    edx,DWORD PTR [eax+0x3446eb22]
  40a635:	fnstenv [esi-0x2f]
  40a638:	daa    
  40a639:	pop    ebx
  40a63a:	out    0x26,al
  40a63c:	jg     0x40a6ba
  40a63e:	fisubr DWORD PTR [edx+0x40]
  40a641:	inc    eax
  40a642:	jno    0x40a5f8
  40a644:	arpl   WORD PTR [edx],si
  40a646:	popa   
  40a647:	sbb    bh,BYTE PTR ds:0x93f118d9
  40a64d:	push   ecx
  40a64e:	les    ecx,FWORD PTR [edi-0x19bb4cc8]
  40a654:	mov    ch,0x53
  40a656:	sbb    eax,edi
  40a658:	pusha  
  40a659:	sbb    ebp,DWORD PTR [ebp+0x40]
  40a65c:	imul   eax,DWORD PTR ds:0x42cd789f,0xffffffe7
  40a663:	xor    eax,DWORD PTR [eax+0x1a999034]
  40a669:	sahf   
  40a66a:	dec    ebp
  40a66b:	jecxz  0x40a6ad
  40a66d:	loopne 0x40a60a
  40a66f:	dec    ebp
  40a670:	frstpm(287 only) 
  40a672:	stos   BYTE PTR es:[edi],al
  40a673:	outs   dx,DWORD PTR ds:[esi]
  40a674:	xor    cl,0x91
  40a677:	dec    esp
  40a678:	push   ecx
  40a679:	icebp  
  40a67a:	(bad)  
  40a67b:	into   
  40a67c:	inc    eax
  40a67d:	out    0x43,al
  40a67f:	bound  esp,QWORD PTR [ecx+0x7d]
  40a682:	dec    ecx
  40a683:	fs cdq 
  40a685:	adc    eax,0x1d0593c7
  40a68a:	add    al,0x16
  40a68c:	shl    BYTE PTR [edx+0x79],cl
  40a68f:	dec    esi
  40a690:	push   0xffffff89
  40a692:	fst    QWORD PTR [edi-0xe]
  40a695:	cwde   
  40a696:	test   al,0x6c
  40a698:	dec    eax
  40a699:	mov    al,ds:0x77ff11df
  40a69e:	retf   
  40a69f:	xchg   DWORD PTR ds:[esi],ebx
  40a6a2:	adc    DWORD PTR [ebp-0x2a],eax
  40a6a5:	scas   al,BYTE PTR es:[edi]
  40a6a6:	fdivrp st(5),st
  40a6a8:	int3   
  40a6a9:	xchg   esi,eax
  40a6aa:	orps   xmm4,xmm0
  40a6ad:	inc    eax
  40a6ae:	out    0x3e,eax
  40a6b0:	push   eax
  40a6b1:	or     al,ah
  40a6b3:	call   0xf67c214b
  40a6b8:	inc    esp
  40a6b9:	jae    0x40a6d9
  40a6bb:	inc    esi
  40a6bd:	add    al,0x9f
  40a6bf:	call   0xc7f7:0x9193d053
  40a6c6:	ss dec eax
  40a6c8:	xchg   cl,bl
  40a6ca:	cwde   
  40a6cb:	nop
  40a6cc:	imul   ecx,edi,0x686f4641
  40a6d2:	pusha  
  40a6d3:	xchg   ebp,eax
  40a6d4:	imul   ecx,ecx,0x41a4a730
  40a6da:	mov    eax,0x577528e2
  40a6df:	out    dx,al
  40a6e0:	cwde   
  40a6e1:	mov    ch,0x6f
  40a6e3:	ror    dh,1
  40a6e5:	adc    cl,BYTE PTR [ebx+0x53]
  40a6e8:	les    ebp,FWORD PTR [ecx]
  40a6ea:	jl     0x40a6f2
  40a6ec:	ror    DWORD PTR [ebx-0x3],0x7
  40a6f0:	(bad)  
  40a6f1:	sti    
  40a6f2:	inc    ebp
  40a6f3:	xor    eax,0xee7df48f
  40a6f8:	inc    ebp
  40a6f9:	inc    ebp
  40a6fa:	inc    ebx
  40a6fb:	xchg   edi,eax
  40a6fc:	push   ecx
  40a6fd:	jbe    0x40a690
  40a6ff:	aam    0x5b
  40a701:	mov    dh,ch
  40a703:	addr16 mov esp,0x428b26c1
  40a709:	jle    0x40a757
  40a70b:	test   al,0x9f
  40a70d:	arpl   di,sp
  40a70f:	mov    esi,0xb6f2228e
  40a714:	and    BYTE PTR [ecx-0x430638f1],0x51
  40a71b:	xchg   edx,eax
  40a71c:	test   BYTE PTR [esi-0x6d],bl
  40a71f:	push   0x22
  40a721:	repnz mov dl,0xac
  40a724:	add    DWORD PTR [eax+0x12],0xffffffaf
  40a728:	push   esp
  40a729:	cmp    DWORD PTR [edx+esi*2],ebx
  40a72c:	adc    eax,0x2c1c7570
  40a731:	arpl   WORD PTR [eax-0x1f],di
  40a734:	sub    bl,BYTE PTR [eax+0x62507706]
  40a73a:	pop    es
  40a73b:	and    eax,DWORD PTR [eax]
  40a73d:	xchg   edi,eax
  40a73e:	imul   ecx,DWORD PTR [ebp-0x241a1356],0x3e
  40a745:	cmp    bl,BYTE PTR [edx+0x617b488c]
  40a74b:	and    edi,esi
  40a74d:	in     al,dx
  40a74e:	sub    eax,0x51456a5b
  40a753:	jb     0x40a7aa
  40a755:	inc    edi
  40a756:	pop    ds
  40a757:	add    eax,0x3e1a04ec
  40a75c:	repnz lea edi,[ebx]
  40a75f:	packssdw mm4,QWORD PTR [eax+0x17]
  40a763:	js     0x40a75a
  40a765:	fs in  al,dx
  40a767:	sub    ebx,DWORD PTR [ebx+ecx*1-0x79511571]
  40a76e:	arpl   WORD PTR [edx+0x60],di
  40a771:	test   cl,al
  40a773:	(bad)  
  40a774:	popf   
  40a775:	dec    ebx
  40a776:	xor    al,cl
  40a778:	ds dec edx
  40a77a:	cmc    
  40a77b:	ins    BYTE PTR es:[edi],dx
  40a77c:	or     eax,0x98a12f66
  40a781:	mov    dl,0x9
  40a783:	xchg   edi,eax
  40a784:	das    
  40a785:	ficom  WORD PTR [eax]
  40a787:	pop    eax
  40a788:	xchg   edi,eax
  40a789:	call   DWORD PTR cs:[eax-0x284a4876]
  40a790:	outs   dx,DWORD PTR ds:[esi]
  40a791:	outs   dx,DWORD PTR ds:[esi]
  40a792:	push   esp
  40a793:	cmp    BYTE PTR ds:0x5979,bl
  40a798:	mov    ds:0x8c51a885,al
  40a79d:	sti    
  40a79e:	xchg   DWORD PTR [edx+ebp*2+0x722a0f2a],eax
  40a7a5:	mov    eax,ds:0x14fe15d1
  40a7aa:	mov    ebx,0x5ff31c9b
  40a7af:	mov    ah,0xdb
  40a7b1:	jns    0x40a775
  40a7b3:	mov    eax,ds:0x5589210
  40a7b8:	hlt    
  40a7b9:	icebp  
  40a7ba:	loope  0x40a808
  40a7bc:	scas   al,BYTE PTR es:[edi]
  40a7bd:	out    dx,al
  40a7be:	jp     0x40a83c
  40a7c0:	imul   eax,DWORD PTR [eax-0x550d216e],0x3a0ae1d4
  40a7ca:	push   ss
  40a7cb:	adc    ebp,ecx
  40a7cd:	pop    ss
  40a7ce:	pop    ebp
  40a7cf:	mov    al,ds:0x4d47f3f3
  40a7d4:	sub    edi,DWORD PTR [ecx+edi*4+0x42ce1cee]
  40a7db:	retf   
  40a7dc:	sbb    eax,0xb3291f9e
  40a7e1:	adc    cl,BYTE PTR [esi+ecx*4]
  40a7e4:	dec    eax
  40a7e5:	jecxz  0x40a77c
  40a7e7:	push   0x9f5ce790
  40a7ec:	fst    DWORD PTR [ecx+0x538a032f]
  40a7f2:	pop    edx
  40a7f3:	stos   DWORD PTR es:[edi],eax
  40a7f4:	push   esi
  40a7f5:	in     al,0x70
  40a7f7:	push   edi
  40a7f8:	lahf   
  40a7f9:	mov    eax,0xa1223273
  40a7fe:	dec    edi
  40a7ff:	(bad)  
  40a800:	sub    BYTE PTR [ecx],al
  40a802:	pop    ebx
  40a803:	(bad)  
  40a804:	xor    eax,0xc4173041
  40a809:	(bad)  
  40a80b:	push   edx
  40a80c:	pop    es
  40a80d:	iret   
  40a80e:	lahf   
  40a80f:	retf   0x530d
  40a812:	mov    dl,0xa4
  40a814:	xor    al,0x2
  40a816:	push   es
  40a817:	leavew 
  40a819:	(bad)  [esi]
  40a81b:	cmp    ebx,eax
  40a81d:	loop   0x40a81e
  40a81f:	je     0x40a816
  40a821:	iret   
  40a822:	pop    edx
  40a823:	mov    dl,0x5c
  40a825:	nop
  40a826:	pop    ebx
  40a827:	fcomp  DWORD PTR [ebx+0x50]
  40a82a:	pop    esi
  40a82b:	xchg   edi,eax
  40a82c:	or     BYTE PTR [esi-0x4a],0x88
  40a830:	ins    DWORD PTR es:[edi],dx
  40a831:	pop    ss
  40a832:	mov    ?,WORD PTR [eax-0x3258b105]
  40a838:	add    dl,0xd8
  40a83b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a83c:	(bad)  
  40a83d:	cwde   
  40a83e:	sar    BYTE PTR ds:0xe8cb04ae,cl
  40a844:	std    
  40a845:	push   esi
  40a846:	aaa    
  40a847:	cmp    eax,DWORD PTR [edi+0xf475070]
  40a84d:	out    0x45,eax
  40a84f:	pop    ebp
  40a850:	or     dh,BYTE PTR [ebx+0x475aee94]
  40a856:	outs   dx,DWORD PTR ds:[esi]
  40a857:	scas   al,BYTE PTR es:[edi]
  40a858:	sbb    esi,DWORD PTR [eax]
  40a85a:	fstp   TBYTE PTR [ecx-0x79264bb4]
  40a860:	inc    eax
  40a861:	div    BYTE PTR [esi+edx*2-0x72]
  40a865:	add    BYTE PTR [edi-0x524b31c2],ch
  40a86b:	add    bh,0x1e
  40a86e:	retf   0x95d5
  40a871:	jae    0x40a8da
  40a873:	and    edi,DWORD PTR [ebx+0x71dc2aa8]
  40a879:	lods   eax,DWORD PTR ds:[esi]
  40a87a:	aas    
  40a87b:	aam    0xe3
  40a87d:	fimul  WORD PTR [edx]
  40a87f:	mov    ecx,0xbd65621b
  40a884:	sbb    edx,DWORD PTR [ebp-0x293db8b]
  40a88a:	jne    0x40a893
  40a88c:	das    
  40a88d:	adc    al,0x2
  40a88f:	or     ebp,ebp
  40a891:	fistp  QWORD PTR [ebp+0x54d6a1bc]
  40a897:	and    eax,0x36bf3236
  40a89c:	out    dx,al
  40a89d:	nop
  40a89e:	cdq    
  40a89f:	or     ch,BYTE PTR [eax]
  40a8a1:	sub    eax,0x6eaf05f4
  40a8a6:	xchg   BYTE PTR [ebx],dl
  40a8a8:	lds    edi,FWORD PTR [edx+0x4498938a]
  40a8ae:	mov    cs,WORD PTR [esi]
  40a8b0:	push   ecx
  40a8b1:	cmp    DWORD PTR [ebp+0x55],0xac9f74a7
  40a8b8:	xchg   ebx,eax
  40a8b9:	retf   0xd4ec
  40a8bc:	stos   DWORD PTR es:[edi],eax
  40a8bd:	jno    0x40a919
  40a8bf:	adc    al,0xe3
  40a8c1:	call   FWORD PTR [edi]
  40a8c3:	ret    0xb1e
  40a8c6:	dec    ecx
  40a8c7:	sub    eax,0x9c96ac75
  40a8cc:	mov    ecx,0xf93ba01f
  40a8d1:	(bad)  
  40a8d2:	jg     0x40a939
  40a8d4:	stos   DWORD PTR es:[edi],eax
  40a8d5:	popf   
  40a8d6:	sub    BYTE PTR [ebx+0x64],ch
  40a8d9:	mov    ds,ebp
  40a8db:	out    dx,eax
  40a8dc:	mov    ebx,0x35e61a89
  40a8e1:	fist   DWORD PTR [ecx]
  40a8e3:	std    
  40a8e4:	xchg   ebp,eax
  40a8e5:	and    ecx,DWORD PTR [edi-0x4961f8b9]
  40a8eb:	data16 cld 
  40a8ed:	outs   dx,DWORD PTR ds:[esi]
  40a8ee:	sti    
  40a8ef:	sub    eax,0xf54d1c02
  40a8f4:	bound  esi,QWORD PTR [edx+eiz*4+0x7a9698ad]
  40a8fb:	or     DWORD PTR [edi-0x72],0x19f586c8
  40a902:	out    0x98,eax
  40a904:	pop    es
  40a905:	fist   WORD PTR [ebx+0x40]
  40a908:	push   eax
  40a909:	sbb    eax,0xd2cca430
  40a90e:	jbe    0x40a91e
  40a910:	or     eax,0x52c7ec83
  40a915:	dec    ecx
  40a916:	xor    dh,bh
  40a918:	mov    ebx,0x22b07381
  40a91d:	in     al,dx
  40a91e:	inc    esi
  40a91f:	pop    ss
  40a920:	dec    esi
  40a921:	xchg   edi,eax
  40a922:	aas    
  40a923:	lods   al,BYTE PTR ds:[esi]
  40a924:	xchg   edx,eax
  40a925:	push   ss
  40a926:	ss scas eax,DWORD PTR es:[edi]
  40a928:	cmp    ecx,esp
  40a92a:	cs inc edi
  40a92c:	pop    eax
  40a92d:	repz in eax,dx
  40a92f:	sbb    bl,0x66
  40a932:	push   ebx
  40a933:	push   ds
  40a934:	cmp    ecx,DWORD PTR [ebx]
  40a936:	or     ecx,DWORD PTR [ecx]
  40a938:	addr16 lahf 
  40a93a:	push   cs
  40a93b:	inc    edx
  40a93c:	sub    eax,0xf649127d
  40a941:	pop    edi
  40a942:	pop    ecx
  40a943:	and    BYTE PTR [eax],al
  40a945:	hlt    
  40a946:	dec    ebp
  40a947:	cmp    al,BYTE PTR [edx]
  40a949:	cmp    ebp,eax
  40a94b:	mov    esi,0x1b94b064
  40a950:	lods   al,BYTE PTR ds:[esi]
  40a951:	dec    edx
  40a952:	xor    ebp,0xffffff91
  40a955:	ds adc al,0x90
  40a958:	mov    ecx,0xc4cae271
  40a95d:	loop   0x40a94a
  40a95f:	push   ss
  40a960:	jae    0x40a9db
  40a962:	push   es
  40a963:	leave  
  40a964:	xchg   ecx,eax
  40a965:	adc    DWORD PTR [ebx-0x68065549],ebp
  40a96b:	outs   dx,BYTE PTR ds:[esi]
  40a96c:	into   
  40a96d:	push   0xa
  40a96f:	dec    esp
  40a970:	rol    DWORD PTR [eax],cl
  40a972:	pop    ss
  40a973:	dec    esi
  40a974:	cdq    
  40a975:	test   eax,0xe4742547
  40a97a:	lods   eax,DWORD PTR ds:[esi]
  40a97b:	and    BYTE PTR [ecx+0x7f2386fd],ch
  40a981:	inc    edx
  40a982:	test   DWORD PTR ds:0x8acd9d10,ebx
  40a988:	sbb    DWORD PTR [esi],ebp
  40a98a:	jg     0x40aa00
  40a98c:	loop   0x40a917
  40a98e:	clc    
  40a98f:	or     eax,0x404fc72
  40a994:	gs loope 0x40a9e2
  40a997:	sbb    edi,0x776a3bdc
  40a99d:	scas   al,BYTE PTR es:[edi]
  40a99e:	sbb    ecx,DWORD PTR [esi]
  40a9a0:	sub    eax,0x694dec62
  40a9a5:	sti    
  40a9a6:	push   ebp
  40a9a7:	pop    ebp
  40a9a8:	inc    eax
  40a9a9:	xor    DWORD PTR [esp+ebx*8],edx
  40a9ac:	xor    BYTE PTR [esi-0x132fbc5c],dh
  40a9b2:	stos   DWORD PTR es:[edi],eax
  40a9b3:	xchg   ebp,eax
  40a9b4:	cli    
  40a9b5:	push   es
  40a9b6:	lock repnz mov ecx,0xe2ed4b21
  40a9bd:	jge    0x40a9cd
  40a9bf:	pushf  
  40a9c0:	push   ds
  40a9c1:	repz adc bl,dl
  40a9c4:	ds jbe 0x40aa2d
  40a9c7:	push   es
  40a9c8:	adc    BYTE PTR ds:0x62f47a7f,dl
  40a9ce:	fs add ebp,ecx
  40a9d1:	popf   
  40a9d2:	mov    ecx,0x3c0985b9
  40a9d7:	add    DWORD PTR [esi+0x5e45c8ff],edx
  40a9dd:	or     ch,dl
  40a9df:	mov    cl,0xff
  40a9e1:	sub    esi,ebp
  40a9e3:	js     0x40a983
  40a9e5:	out    0xd2,al
  40a9e7:	mov    cs,WORD PTR [ecx]
  40a9e9:	mov    esp,0xed6debce
  40a9ee:	and    dl,bl
  40a9f0:	(bad)  
  40a9f1:	pop    edx
  40a9f2:	jg     0x40a9ac
  40a9f4:	cmp    ah,BYTE PTR fs:[esi]
  40a9f7:	pop    es
  40a9f8:	xchg   esi,eax
  40a9f9:	dec    esp
  40a9fa:	mov    bl,0xd8
  40a9fc:	add    al,0xc9
  40a9fe:	inc    ebx
  40a9ff:	retf   0x3c7a
  40aa02:	inc    ebp
  40aa03:	sbb    bl,0xfa
  40aa06:	in     eax,dx
  40aa07:	inc    esi
  40aa08:	leave  
  40aa09:	inc    edi
  40aa0a:	cmp    edi,DWORD PTR [eax+0x42]
  40aa0d:	out    0xf8,al
  40aa0f:	or     DWORD PTR [ebp+0x72455cad],esp
  40aa15:	mov    esp,0x2e7c330e
  40aa1a:	inc    edi
  40aa1b:	or     esp,DWORD PTR [eax+eax*1+0x2d]
  40aa1f:	adc    BYTE PTR [eax],cl
  40aa21:	repnz fimul DWORD PTR [ebx]
  40aa24:	add    eax,0x7fd97b84
  40aa29:	pandn  mm0,QWORD PTR [esi]
  40aa2c:	dec    BYTE PTR [ecx+0x2c]
  40aa2f:	adc    DWORD PTR [ebx-0x5d84b254],esi
  40aa35:	xchg   edx,eax
  40aa36:	sbb    DWORD PTR [ebx],0x7e
  40aa39:	push   ds
  40aa3a:	mov    edx,0xdc3334c5
  40aa3f:	sbb    eax,DWORD PTR [edi+0x40]
  40aa42:	mov    ah,0xc6
  40aa44:	cdq    
  40aa45:	sub    eax,0x81c35f30
  40aa4a:	or     BYTE PTR [esi-0x6e],dh
  40aa4d:	push   ds
  40aa4e:	mov    cl,0x27
  40aa50:	xor    eax,0x30deec28
  40aa55:	fwait
  40aa56:	mov    dh,0xc4
  40aa58:	add    ecx,esp
  40aa5a:	leave  
  40aa5b:	in     eax,0x5c
  40aa5d:	sbb    ebx,ebx
  40aa5f:	das    
  40aa60:	pop    ebx
  40aa61:	push   ss
  40aa62:	xchg   ecx,eax
  40aa63:	push   ss
  40aa64:	sub    al,0x5f
  40aa66:	push   esi
  40aa67:	mov    dh,0x16
  40aa69:	xchg   esp,eax
  40aa6a:	aas    
  40aa6b:	icebp  
  40aa6c:	paddw  mm3,QWORD PTR [eax+0x3227f559]
  40aa73:	bound  edi,QWORD PTR [ecx+0x1e]
  40aa76:	mov    ebp,0xf99e9f56
  40aa7b:	pusha  
  40aa7c:	jecxz  0x40aa01
  40aa7e:	jb     0x40aad1
  40aa80:	dec    edi
  40aa81:	push   edx
  40aa82:	jmp    0x9e482ab7
  40aa87:	and    edi,DWORD PTR [edx]
  40aa89:	es cmp eax,0x9ab7fb6a
  40aa8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa90:	out    dx,eax
  40aa91:	stos   BYTE PTR es:[edi],al
  40aa92:	popa   
  40aa93:	mov    al,ds:0x8d1b6a09
  40aa98:	pop    edx
  40aa99:	push   ds
  40aa9a:	adc    esp,DWORD PTR [edi+0x5f]
  40aa9d:	dec    esi
  40aa9e:	sub    DWORD PTR [eax+0x5e5b809d],eax
  40aaa4:	sbb    al,0xbb
  40aaa6:	inc    edi
  40aaa7:	push   ebx
  40aaa8:	mov    esp,0x32b9e950
  40aaad:	mov    ss,WORD PTR [esi-0x40]
  40aab0:	cmp    al,0x51
  40aab2:	jg     0x40aa60
  40aab4:	loopne 0x40aa59
  40aab6:	inc    edi
  40aab7:	cli    
  40aab8:	or     DWORD PTR [edi-0x6c98609],0x3d0859a9
  40aac2:	dec    esp
  40aac3:	ins    DWORD PTR es:[edi],dx
  40aac4:	sub    BYTE PTR [edi+0x387e27f2],bh
  40aaca:	cmp    al,0xa3
  40aacc:	fild   QWORD PTR [edi]
  40aace:	adc    DWORD PTR [edx],0x59
  40aad1:	xor    BYTE PTR [esi-0x5c],0xf4
  40aad5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aad6:	out    dx,al
  40aad7:	and    eax,0x4abc314e
  40aadc:	mov    dh,bh
  40aade:	mov    cl,0x58
  40aae0:	xor    esi,DWORD PTR [ebp+0x5234b388]
  40aae6:	push   edi
  40aae7:	lahf   
  40aae8:	push   ecx
  40aae9:	aad    0x4c
  40aaeb:	test   BYTE PTR [ebp+0x6570f39b],cl
  40aaf1:	(bad)  
  40aaf2:	stc    
  40aaf3:	adc    bl,BYTE PTR [ecx]
  40aaf5:	not    DWORD PTR [esi]
  40aaf7:	outs   dx,BYTE PTR ds:[esi]
  40aaf8:	loop   0x40aa7a
  40aafa:	call   0x9ea0:0x2a277ca0
  40ab01:	ja     0x40aad5
  40ab03:	or     esi,DWORD PTR [si-0x14fd]
  40ab08:	aam    0x77
  40ab0a:	pop    ds
  40ab0b:	call   0x9ae9ee54
  40ab10:	mov    ?,WORD PTR [esi]
  40ab12:	call   0x6a14:0x49239ad9
  40ab19:	jne    0x40aacb
  40ab1b:	iret   
  40ab1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab1d:	xlat   BYTE PTR ds:[ebx]
  40ab1e:	or     BYTE PTR ds:0x6db862d9,bl
  40ab24:	jne    0x40ab97
  40ab26:	mov    al,ds:0x3bb619de
  40ab2b:	xor    al,BYTE PTR [ebx]
  40ab2d:	push   ds
  40ab2e:	(bad)  
  40ab30:	push   esi
  40ab31:	xor    edi,ebx
  40ab33:	xchg   ecx,ecx
  40ab35:	xchg   edx,eax
  40ab36:	idiv   BYTE PTR [eax+eax*1+0x57]
  40ab3a:	call   0x863b:0x2d7c1584
  40ab41:	xchg   esi,eax
  40ab42:	jns    0x40ab99
  40ab44:	mov    DWORD PTR [ebp+0x28],ebp
  40ab47:	xchg   ebx,eax
  40ab48:	push   esi
  40ab49:	jmp    0x68d3b941
  40ab4e:	adc    DWORD PTR [edx],ebp
  40ab50:	mov    edi,?
  40ab52:	in     al,0x8c
  40ab54:	add    al,0x7a
  40ab57:	push   0xffffffd1
  40ab59:	push   cs
  40ab5a:	in     al,dx
  40ab5b:	xor    edx,edi
  40ab5d:	mov    esp,DWORD PTR [ecx-0x60]
  40ab60:	lods   al,BYTE PTR ds:[esi]
  40ab61:	lods   eax,DWORD PTR ds:[esi]
  40ab62:	add    edx,DWORD PTR [eax-0x7a]
  40ab65:	lods   al,BYTE PTR ds:[esi]
  40ab66:	test   DWORD PTR [edi-0x7d0a9740],esi
  40ab6c:	cdq    
  40ab6d:	pushw  cs
  40ab6f:	shl    BYTE PTR [eax+0x7b],0x61
  40ab73:	xchg   edi,eax
  40ab74:	mov    esp,0x2b07efed
  40ab79:	ins    DWORD PTR es:[edi],dx
  40ab7a:	mov    bl,0x6f
  40ab7c:	mov    ebx,ebx
  40ab7e:	fucomip st,st(6)
  40ab80:	imul   esp,DWORD PTR [edx+edx*1-0x5e],0x48
  40ab85:	stos   BYTE PTR es:[edi],al
  40ab86:	test   eax,0xa84e0c1f
  40ab8b:	mov    ch,0xd0
  40ab8d:	pop    edx
  40ab8e:	cmc    
  40ab8f:	(bad)
  40ab92:	nop
  40ab93:	xchg   edi,eax
  40ab94:	and    eax,0x7defacff
  40ab99:	sub    esi,DWORD PTR [edx]
  40ab9b:	popa   
  40ab9c:	loopne 0x40ab8b
  40ab9e:	jg     0x40abd1
  40aba0:	adc    ebx,DWORD PTR [ebp-0x23]
  40aba3:	sub    al,0xb8
  40aba5:	sbb    cl,BYTE PTR [ebx]
  40aba7:	call   0x6276:0xac741ad8
  40abae:	jl     0x40ab44
  40abb0:	jne    0x40ab4c
  40abb2:	cdq    
  40abb3:	test   BYTE PTR [ecx],cl
  40abb5:	in     al,0x5f
  40abb7:	dec    ecx
  40abb8:	push   ds
  40abb9:	inc    eax
  40abba:	pop    esi
  40abbb:	rcr    DWORD PTR [ecx+0x68],cl
  40abbe:	jmp    0xbfc3ab16
  40abc3:	mov    edi,0xec5f181c
  40abc8:	aas    
  40abc9:	jmp    0x1a1c:0x66c46600
  40abd0:	shl    BYTE PTR [edx-0x405026a7],cl
  40abd6:	pushf  
  40abd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abd8:	or     al,0xb
  40abda:	(bad)  
  40abdb:	call   DWORD PTR [edx+edi*8]
  40abde:	mov    ch,BYTE PTR [ecx+edi*2]
  40abe1:	mov    al,ds:0x106ea266
  40abe6:	leave  
  40abe7:	cmp    BYTE PTR [eax-0x4dc2c5d6],dl
  40abed:	or     DWORD PTR [ebx+edi*4-0x38a9b0c2],ecx
  40abf4:	sbb    BYTE PTR [ecx],ah
  40abf6:	mov    esp,0xb74c12a7
  40abfb:	loope  0x40abda
  40abfd:	test   DWORD PTR [eax],esi
  40abff:	add    eax,DWORD PTR [eax]
  40ac01:	sbb    bl,BYTE PTR [ebx-0x197156b7]
  40ac07:	cmp    BYTE PTR [edx-0x6b],al
  40ac0a:	sub    esp,DWORD PTR [edi+eiz*4+0x12a54da8]
  40ac11:	ds push ds
  40ac13:	add    BYTE PTR [eax-0x6b],0xab
  40ac17:	mov    bl,0x41
  40ac19:	mov    dl,0xfe
  40ac1b:	mov    ds:0x341c5581,eax
  40ac20:	push   0x32c46054
  40ac25:	lods   eax,DWORD PTR ds:[esi]
  40ac26:	push   ecx
  40ac27:	xor    BYTE PTR [edx],cl
  40ac29:	out    0x48,al
  40ac2b:	sar    DWORD PTR [edi+0x1f787bd5],cl
  40ac31:	dec    edx
  40ac32:	xchg   ebp,eax
  40ac33:	bound  ebx,QWORD PTR [eax+0x14]
  40ac36:	jg     0x40abd0
  40ac38:	popa   
  40ac39:	loope  0x40ac88
  40ac3b:	(bad)  
  40ac3c:	jnp    0x40ac7d
  40ac3e:	push   edx
  40ac3f:	mov    ebx,esi
  40ac41:	das    
  40ac42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac43:	xchg   edx,eax
  40ac44:	mov    bl,0x9b
  40ac46:	jbe    0x40ac21
  40ac48:	or     BYTE PTR [ebp+0x707b4f8c],bh
  40ac4e:	jp     0x40abfd
  40ac50:	lods   eax,DWORD PTR ds:[esi]
  40ac51:	ret    
  40ac52:	cld    
  40ac53:	aam    0xe9
  40ac55:	stos   BYTE PTR es:[edi],al
  40ac56:	xor    ch,dh
  40ac58:	mov    eax,ds:0xd18284f7
  40ac5d:	sti    
  40ac5e:	mov    eax,0xa62e44d3
  40ac63:	jno    0x40ac49
  40ac65:	psubusb mm4,QWORD PTR [edx]
  40ac68:	pop    edi
  40ac69:	call   0x86e8ee4c
  40ac6e:	cmp    al,0xf7
  40ac70:	mov    esp,0xbdaf39c4
  40ac75:	adc    esp,esp
  40ac77:	adc    eax,0x5486bcf5
  40ac7c:	dec    edx
  40ac7d:	icebp  
  40ac7e:	popf   
  40ac7f:	es lahf 
  40ac81:	push   edi
  40ac82:	sahf   
  40ac83:	cmp    BYTE PTR [esi],ah
  40ac85:	xchg   edx,eax
  40ac86:	mov    WORD PTR [edi],fs
  40ac88:	pop    ss
  40ac89:	in     al,0x23
  40ac8b:	xchg   ecx,eax
  40ac8c:	push   edx
  40ac8d:	jmp    0x712c:0xb8790cb3
  40ac94:	adc    edi,DWORD PTR [edi]
  40ac96:	mov    BYTE PTR [ebp-0x9],cl
  40ac99:	mov    eax,esi
  40ac9b:	retf   
  40ac9c:	fcmovnbe st,st(0)
  40ac9e:	jmp    0xa0c6a7a0
  40aca3:	ins    BYTE PTR es:[edi],dx
  40aca4:	(bad)  
  40aca5:	and    eax,0x724ef0be
  40acaa:	aam    0x51
  40acac:	jecxz  0x40ac90
  40acae:	jmp    0xddfb:0xa9e25fa3
  40acb5:	mov    ch,0x81
  40acb7:	int3   
  40acb8:	jbe    0x40ac84
  40acba:	lods   al,BYTE PTR ds:[esi]
  40acbb:	(bad)  
  40acbc:	iret   
  40acbd:	mov    ds:0xd620f8ec,al
  40acc2:	and    DWORD PTR [esi+0x24044a0e],edx
  40acc8:	daa    
  40acc9:	dec    edi
  40acca:	pop    esp
  40accb:	mov    edi,0x289e01eb
  40acd0:	xchg   BYTE PTR ds:0x1b64756,bh
  40acd6:	cwde   
  40acd7:	iret   
  40acd8:	scas   al,BYTE PTR es:[edi]
  40acd9:	push   edx
  40acda:	pop    ss
  40acdb:	sti    
  40acdc:	cld    
  40acdd:	and    al,BYTE PTR [eax-0x4e7acee2]
  40ace3:	js     0x40acfb
  40ace5:	sahf   
  40ace6:	popa   
  40ace7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ace8:	(bad)  
  40ace9:	fistp  DWORD PTR [eax+0x4e4977c0]
  40acef:	int    0x13
  40acf1:	lea    eax,[esi-0x76]
  40acf4:	scas   al,BYTE PTR es:[edi]
  40acf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40acf6:	rcr    BYTE PTR [edi-0x2c9780c2],1
  40acfc:	jg     0x40ac97
  40acfe:	mov    eax,ds:0x6d1aac75
  40ad03:	stos   DWORD PTR es:[edi],eax
  40ad04:	sub    ch,dl
  40ad06:	jecxz  0x40acae
  40ad08:	mov    bl,0xc4
  40ad0a:	xor    DWORD PTR [eax],edx
  40ad0c:	loop   0x40ad11
  40ad0e:	pop    edi
  40ad0f:	mul    BYTE PTR [edi-0x38]
  40ad12:	dec    ebx
  40ad13:	mov    bl,0xfb
  40ad15:	or     dh,BYTE PTR [edx-0x6c28ee30]
  40ad1b:	push   es
  40ad1c:	mov    ch,0x57
  40ad1e:	cli    
  40ad1f:	into   
  40ad20:	jne    0x40aca6
  40ad22:	lods   al,BYTE PTR ds:[esi]
  40ad23:	js     0x40ad33
  40ad25:	mov    ss,WORD PTR [edx-0x797be325]
  40ad2b:	add    esp,ecx
  40ad2d:	test   esp,ebp
  40ad2f:	dec    esi
  40ad30:	sub    edx,DWORD PTR es:[edx]
  40ad33:	jne    0x40ada7
  40ad35:	dec    ecx
  40ad36:	call   0x78f2:0x8847f3a9
  40ad3d:	xor    BYTE PTR [ebx],cl
  40ad3f:	and    dl,BYTE PTR [eax-0x5e]
  40ad42:	out    dx,eax
  40ad43:	mov    esp,0x28e9d349
  40ad48:	call   0x3aed1eea
  40ad4d:	iret   
  40ad4e:	repnz pop es
  40ad50:	out    dx,eax
  40ad51:	loope  0x40ad00
  40ad53:	outs   dx,BYTE PTR ds:[esi]
  40ad54:	fisubr WORD PTR [edi-0x58]
  40ad57:	pop    ebx
  40ad58:	aas    
  40ad59:	and    al,0xe6
  40ad5b:	fwait
  40ad5c:	out    dx,al
  40ad5d:	xor    BYTE PTR [ebp+0xe],al
  40ad60:	sahf   
  40ad61:	ds neg edi
  40ad64:	test   ah,bl
  40ad66:	call   0x2852c2da
  40ad6b:	fnsave [ebx]
  40ad6d:	jne    0x40ad90
  40ad6f:	(bad)  
  40ad71:	fisubr DWORD PTR [edx-0x76]
  40ad74:	mov    ah,0xf0
  40ad76:	xlat   BYTE PTR ds:[ebx]
  40ad77:	cmp    eax,0xc4901b9c
  40ad7c:	fst    DWORD PTR [edx-0x6e]
  40ad7f:	or     BYTE PTR [edi+0x33],al
  40ad82:	sbb    al,al
  40ad84:	addr16 nop
  40ad86:	loopne 0x40ad47
  40ad88:	mov    edx,0x5caa8e1e
  40ad8d:	ds sti 
  40ad8f:	aas    
  40ad90:	jbe    0x40ad64
  40ad92:	data16 (bad) 
  40ad94:	pop    esp
  40ad95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad96:	aaa    
  40ad97:	jg     0x40adbe
  40ad99:	mov    dh,0x8b
  40ad9b:	inc    ebp
  40ad9c:	in     al,dx
  40ad9d:	movzx  ecx,WORD PTR ds:0x42915f
  40ada4:	or     DWORD PTR ds:0x4291e7,ecx
  40adaa:	mov    ecx,DWORD PTR [ebp+0x8]
  40adad:	add    ecx,DWORD PTR [eax+0x1c]
  40adb0:	mov    DWORD PTR [ebp-0x14],ecx
  40adb3:	mov    DWORD PTR ds:0x4291d3,0x1651
  40adbd:	jmp    0x40d2ae
  40adc2:	mov    eax,DWORD PTR [ebp-0x2c]
  40adc5:	and    DWORD PTR ds:0x4291c3,0x0
  40adcf:	jmp    0x40ade1
  40add4:	mov    ecx,DWORD PTR ds:0x4291c3
  40adda:	inc    ecx
  40addb:	mov    DWORD PTR ds:0x4291c3,ecx
  40ade1:	cmp    DWORD PTR ds:0x4291c3,0x1e
  40ade8:	jae    0x40ae37
  40adee:	cmp    DWORD PTR ds:0x4291c3,0x10
  40adf5:	jbe    0x40ae37
  40adfb:	jmp    0x40ae18
  40ae00:	push   0x54af
  40ae05:	push   0x428000
  40ae0a:	push   0x42810e
  40ae0f:	push   DWORD PTR [ebp-0x10]
  40ae12:	call   DWORD PTR ds:0x42a63b
  40ae18:	cmp    DWORD PTR ds:0x4291c3,0xf
  40ae1f:	jne    0x40ae32
  40ae25:	mov    ecx,DWORD PTR ds:0x4291c3
  40ae2b:	inc    ecx
  40ae2c:	mov    DWORD PTR ds:0x4291c3,ecx
  40ae32:	jmp    0x40add4
  40ae37:	mov    ecx,DWORD PTR [ebp+0x8]
  40ae3a:	add    ecx,DWORD PTR [eax+ebx*4]
  40ae3d:	and    DWORD PTR ds:0x4291df,0x0
  40ae47:	jmp    0x40ae57
  40ae4c:	mov    eax,ds:0x4291df
  40ae51:	inc    eax
  40ae52:	mov    ds:0x4291df,eax
  40ae57:	cmp    DWORD PTR ds:0x4291df,0x10
  40ae5e:	jae    0x40aea1
  40ae64:	cmp    DWORD PTR ds:0x4291df,0x5
  40ae6b:	jb     0x40aea1
  40ae71:	jmp    0x40ae84
  40ae76:	push   0x73ed
  40ae7b:	push   DWORD PTR [ebp-0xc]
  40ae7e:	call   DWORD PTR ds:0x42a63f
  40ae84:	cmp    DWORD PTR ds:0x4291df,0x4
  40ae8b:	jne    0x40ae9c
  40ae91:	mov    eax,ds:0x4291df
  40ae96:	inc    eax
  40ae97:	mov    ds:0x4291df,eax
  40ae9c:	jmp    0x40ae4c
  40aea1:	mov    DWORD PTR [ebp-0x28],ecx
  40aea4:	add    ecx,DWORD PTR ds:0x429183
  40aeaa:	mov    eax,DWORD PTR [ebp-0x4]
  40aead:	xor    DWORD PTR ds:0x42916b,ebx
  40aeb3:	mov    ecx,DWORD PTR [ebp-0x28]
  40aeb6:	xor    eax,esi
  40aeb8:	jmp    0x40d26c
  40aebd:	add    BYTE PTR [ecx],dh
  40aebf:	cld    
  40aec0:	sbb    esp,ecx
  40aec2:	nop
  40aec3:	and    BYTE PTR [eax],0xe5
  40aec6:	push   eax
  40aec7:	(bad)  [edi-0x4c083b5d]
  40aecd:	sub    al,0xf1
  40aecf:	add    DWORD PTR [ebx-0x7c7ca318],0xffffffee
  40aed6:	fadd   DWORD PTR [edx-0x14]
  40aed9:	scas   al,BYTE PTR es:[edi]
  40aeda:	fidivr WORD PTR [eax+0x73b68b33]
  40aee0:	imul   ebp,DWORD PTR [eax-0x198a92c8],0xce430842
  40aeea:	out    0x27,al
  40aeec:	mov    al,0x3a
  40aeee:	out    dx,eax
  40aeef:	add    BYTE PTR [ebx+0x61998e23],al
  40aef5:	jbe    0x40aeb6
  40aef7:	pop    ecx
  40aef8:	cmp    DWORD PTR [esi+0x835e894],esi
  40aefe:	mov    bl,0xbf
  40af00:	xlat   BYTE PTR ds:[ebx]
  40af01:	ror    DWORD PTR [ebx+eiz*4-0x3],0xdf
  40af06:	pop    edi
  40af07:	sbb    DWORD PTR [ebx+0x3aca30a],edx
  40af0d:	dec    eax
  40af0e:	xchg   ebp,eax
  40af0f:	sti    
  40af10:	imul   BYTE PTR [ebx]
  40af12:	test   DWORD PTR [ebx+ecx*4+0x398b84ed],ecx
  40af19:	jge    0x40af12
  40af1b:	pop    es
  40af1c:	lahf   
  40af1d:	mov    cl,0xd6
  40af1f:	dec    esi
  40af20:	call   FWORD PTR ds:0x3114f07c
  40af26:	pop    ss
  40af27:	sbb    DWORD PTR [ecx-0x32],ebp
  40af2a:	mov    ebp,0xab29e338
  40af2f:	dec    eax
  40af30:	add    edi,ebx
  40af32:	fcom   QWORD PTR [eax-0x3c768d8c]
  40af38:	mov    cs,WORD PTR [ecx]
  40af3a:	push   eax
  40af3b:	ss int3 
  40af3d:	xchg   esp,eax
  40af3e:	inc    ebx
  40af3f:	xor    esi,0xe6312ec3
  40af45:	or     DWORD PTR [edi-0x2b3afce1],ebx
  40af4b:	ss das 
  40af4d:	das    
  40af4e:	fwait
  40af4f:	jne    0x40af10
  40af51:	push   ecx
  40af52:	popf   
  40af53:	adc    DWORD PTR [edx+0x6c89066c],eax
  40af59:	lahf   
  40af5a:	mov    ebp,0xda303504
  40af5f:	sub    eax,0x7e7c5fba
  40af64:	and    eax,0x464884df
  40af69:	inc    esi
  40af6a:	stos   BYTE PTR es:[edi],al
  40af6b:	nop
  40af6c:	sbb    cl,BYTE PTR [ecx-0x6db1a3b4]
  40af72:	mov    fs,WORD PTR [edx]
  40af74:	sub    al,0xd7
  40af76:	mov    cl,0x14
  40af78:	loopne 0x40afb1
  40af7a:	xchg   ebp,eax
  40af7b:	mov    ecx,0xda5019d8
  40af80:	mov    dl,0xf4
  40af82:	cli    
  40af83:	xor    esp,0x38d50dee
  40af89:	sub    bh,bh
  40af8b:	mov    edx,0xb048a052
  40af90:	pop    edx
  40af91:	lock mov al,0xe8
  40af94:	push   esp
  40af95:	test   BYTE PTR [ecx],0xcd
  40af98:	xlat   BYTE PTR ds:[ebx]
  40af99:	jge    0x40afd1
  40af9b:	or     ax,0xd062
  40af9f:	aaa    
  40afa0:	jmp    0x40af92
  40afa2:	aam    0x6f
  40afa4:	out    0x7e,al
  40afa6:	mov    ch,0x5f
  40afa8:	inc    ebx
  40afa9:	xor    DWORD PTR [esi],ebx
  40afab:	add    bl,BYTE PTR [ebx+0x3a]
  40afae:	int    0xab
  40afb0:	enter  0xe2a7,0xb8
  40afb4:	xor    al,ah
  40afb6:	retf   0xce79
  40afb9:	mov    al,ds:0xe224e537
  40afbe:	es leave 
  40afc0:	mov    edx,0x900b11c7
  40afc5:	xchg   edx,eax
  40afc6:	xor    ch,bh
  40afc8:	push   DWORD PTR [edx-0x1bf8b233]
  40afce:	cmp    edx,0x54ef729
  40afd4:	cmp    eax,0xeac3f549
  40afd9:	sub    eax,0x96eac40d
  40afde:	pop    esp
  40afdf:	cdq    
  40afe0:	mov    esi,0x99716286
  40afe5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afe6:	stos   DWORD PTR es:[edi],eax
  40afe7:	in     eax,dx
  40afe8:	arpl   di,si
  40afea:	jecxz  0x40b003
  40afec:	mov    bl,0x73
  40afee:	push   ecx
  40afef:	rol    DWORD PTR [esi-0x26d5b77f],0xb
  40aff6:	je     0x40afa8
  40aff8:	call   0x7a24:0x8fb85f1
  40afff:	outs   dx,BYTE PTR ds:[esi]
  40b000:	mov    ebx,0x937a155f
  40b005:	js     0x40b04a
  40b007:	or     edi,edi
  40b009:	out    dx,al
  40b00a:	ins    BYTE PTR es:[edi],dx
  40b00b:	dec    eax
  40b00c:	adc    bh,BYTE PTR [ebx-0x7512891]
  40b012:	stc    
  40b013:	sbb    al,0x21
  40b015:	outs   dx,DWORD PTR ds:[esi]
  40b016:	or     eax,0x52a1c9b8
  40b01b:	aas    
  40b01c:	sbb    BYTE PTR [ecx],0xe
  40b01f:	cld    
  40b020:	cwde   
  40b021:	push   esi
  40b022:	popf   
  40b023:	dec    esp
  40b024:	cmp    eax,esp
  40b026:	cmp    ecx,DWORD PTR ds:0xdf9a8e2c
  40b02c:	cld    
  40b02d:	mov    esp,0xd6e8d92a
  40b032:	(bad)  [ebp+0x79]
  40b035:	sub    DWORD PTR [eax+0x2f],esi
  40b038:	mov    ebp,0xb73a7bb
  40b03d:	or     BYTE PTR [eax+ecx*4],bh
  40b040:	adc    eax,0xbe628632
  40b045:	add    eax,DWORD PTR [edx+edx*2-0x90c413f]
  40b04c:	xor    BYTE PTR [edx+ebx*4-0x24],bl
  40b050:	xchg   edi,eax
  40b051:	sub    ch,BYTE PTR [eax+ebx*1+0x5f9510fd]
  40b058:	push   eax
  40b059:	lahf   
  40b05a:	cld    
  40b05b:	inc    ebp
  40b05c:	es repnz mov ds,edx
  40b060:	in     eax,0x60
  40b062:	loop   0x40b036
  40b064:	mov    dh,BYTE PTR [ecx-0x7a7699ac]
  40b06a:	lea    esi,ds:0xbd48fb64
  40b070:	leave  
  40b071:	or     al,0xb1
  40b073:	iret   
  40b074:	ins    DWORD PTR es:[edi],dx
  40b075:	shl    DWORD PTR [edi+0x5979a61],0x1f
  40b07c:	cmc    
  40b07d:	call   0x33c5bb60
  40b082:	mov    edx,0xe9e55f30
  40b087:	xchg   esi,eax
  40b088:	std    
  40b089:	mov    fs,WORD PTR [esi]
  40b08b:	mov    ebx,0xa3e0e709
  40b090:	mov    cl,0x5b
  40b092:	mov    ?,edx
  40b094:	add    BYTE PTR [ebx+0x3d58171f],bh
  40b09a:	dec    esi
  40b09b:	popf   
  40b09c:	fcomp  DWORD PTR [esi+0x34]
  40b09f:	mov    edx,0xa4f4c72e
  40b0a4:	loope  0x40b0a9
  40b0a6:	mov    ds:0x3465f840,eax
  40b0ab:	inc    edi
  40b0ac:	int3   
  40b0ad:	fld    DWORD PTR [ecx+0x1e]
  40b0b0:	push   es
  40b0b1:	xor    ah,BYTE PTR [ebx-0x347673e]
  40b0b7:	xchg   ecx,eax
  40b0b8:	imul   esi,DWORD PTR [edx],0xffffffaf
  40b0bb:	je     0x40b114
  40b0bd:	cmp    al,BYTE PTR [eax]
  40b0bf:	pop    edx
  40b0c0:	scas   al,BYTE PTR es:[edi]
  40b0c1:	mov    dh,0x76
  40b0c3:	in     al,0xc6
  40b0c5:	mov    esi,0xee28c036
  40b0ca:	gs push es
  40b0cc:	or     esp,edi
  40b0ce:	and    BYTE PTR [edi-0x56],0x62
  40b0d2:	lods   eax,DWORD PTR ds:[esi]
  40b0d3:	shl    BYTE PTR [ebx-0x5c314a5a],cl
  40b0d9:	jmp    0xabaf:0x7ebc8860
  40b0e0:	fisub  DWORD PTR [ebx+0x64]
  40b0e3:	inc    ebp
  40b0e4:	and    esi,DWORD PTR [eax]
  40b0e6:	push   edi
  40b0e7:	mov    bl,0x51
  40b0e9:	mov    ebp,DWORD PTR [ebp+0x48]
  40b0ec:	xchg   ebp,eax
  40b0ed:	jns    0x40b087
  40b0ef:	push   edx
  40b0f0:	mov    ebp,0x4da5f6d3
  40b0f5:	popa   
  40b0f6:	sbb    BYTE PTR [esi+0x27],bl
  40b0f9:	cwde   
  40b0fa:	xor    BYTE PTR [eax+0x28],ah
  40b0fd:	jne    0x40b0c1
  40b0ff:	outs   dx,BYTE PTR ds:[esi]
  40b100:	xchg   edx,eax
  40b101:	push   eax
  40b102:	inc    edi
  40b103:	sbb    eax,DWORD PTR [eax+0x34]
  40b106:	pop    ss
  40b107:	das    
  40b108:	cdq    
  40b109:	pop    es
  40b10a:	cli    
  40b10b:	cwde   
  40b10c:	and    DWORD PTR [ebp+ebp*8+0x4ed56132],0xffffffb1
  40b114:	push   esi
  40b115:	icebp  
  40b116:	stc    
  40b117:	into   
  40b118:	out    dx,eax
  40b119:	icebp  
  40b11a:	mov    ebx,0xd956e2a6
  40b11f:	test   BYTE PTR [edx],bl
  40b121:	xor    eax,0xd54d7417
  40b126:	add    eax,0x3bd3785c
  40b12b:	mov    ebx,0x6de60cc7
  40b130:	add    ebp,DWORD PTR [eax+0x6e]
  40b133:	mov    ds:0x74d8e1d1,eax
  40b138:	xchg   esp,eax
  40b139:	sub    dl,bl
  40b13b:	sbb    BYTE PTR [ebp+ecx*8-0x7e],0xcf
  40b140:	outs   dx,DWORD PTR ds:[esi]
  40b141:	sub    esp,DWORD PTR [ecx+ecx*4+0x1b]
  40b145:	jle    0x40b17c
  40b147:	push   esi
  40b148:	dec    eax
  40b149:	getsec 
  40b14b:	sar    BYTE PTR [ecx+0x7],0x81
  40b14f:	adc    DWORD PTR [esi-0x62],ebp
  40b152:	loope  0x40b0ff
  40b154:	jns    0x40b187
  40b156:	ror    al,1
  40b158:	imul   ebx,DWORD PTR [ecx],0xd15ed82f
  40b15e:	xchg   ebp,eax
  40b15f:	mov    edi,esi
  40b161:	pop    esp
  40b162:	daa    
  40b163:	inc    eax
  40b164:	xor    dl,BYTE PTR [eax-0x719d7276]
  40b16a:	test   al,0xd
  40b16c:	sahf   
  40b16d:	daa    
  40b16e:	cld    
  40b16f:	(bad)  
  40b170:	scas   al,BYTE PTR es:[edi]
  40b171:	and    al,0x80
  40b173:	adc    al,0x5c
  40b175:	sub    eax,0xbc11064b
  40b17a:	fst    st(7)
  40b17c:	xchg   ecx,eax
  40b17d:	ja     0x40b1c0
  40b17f:	or     bl,bh
  40b181:	jp     0x40b118
  40b183:	xor    al,0xb0
  40b185:	push   ebx
  40b186:	(bad)  
  40b187:	jno    0x40b14b
  40b189:	repz (bad) 
  40b18b:	imul   ebp,DWORD PTR [esi-0x73186223],0xffffff99
  40b192:	xchg   ecx,eax
  40b193:	shr    DWORD PTR [ebx+0x51cf6d2a],1
  40b199:	pop    edx
  40b19a:	push   eax
  40b19b:	ins    DWORD PTR es:[edi],dx
  40b19c:	jl     0x40b195
  40b19e:	int    0x0
  40b1a0:	or     BYTE PTR [esi+0x6a],ah
  40b1a3:	sbb    eax,0x857a96a1
  40b1a8:	sbb    bh,BYTE PTR [edx+0x6b3a9fd2]
  40b1ae:	(bad)  
  40b1af:	mov    bl,0xed
  40b1b1:	imul   edi,ebx,0x11f69df8
  40b1b7:	jmp    0xc683:0xabe95152
  40b1be:	xor    esp,DWORD PTR [eax-0xc3b8c74]
  40b1c4:	sbb    DWORD PTR [edi-0x5b],edx
  40b1c7:	or     cl,0xf6
  40b1ca:	push   edx
  40b1cb:	stos   DWORD PTR es:[edi],eax
  40b1cc:	ror    DWORD PTR [ebp-0x4733249e],cl
  40b1d2:	and    al,0x39
  40b1d4:	pop    ebp
  40b1d5:	mov    ebx,0x537e5cb5
  40b1da:	and    bl,ah
  40b1dc:	shl    DWORD PTR [eax+edx*8],cl
  40b1df:	jbe    0x40b217
  40b1e1:	adc    al,0xa1
  40b1e4:	xor    eax,DWORD PTR [ebx+edx*2+0x4b]
  40b1e8:	sbb    BYTE PTR [ebp-0x5bbdf34],ah
  40b1ee:	xchg   DWORD PTR [esi+0x5b],ecx
  40b1f1:	icebp  
  40b1f2:	iret   
  40b1f3:	iret   
  40b1f4:	clc    
  40b1f5:	xchg   ebx,eax
  40b1f6:	stc    
  40b1f7:	retf   0x474e
  40b1fa:	dec    edi
  40b1fb:	adc    ebx,DWORD PTR [ebx]
  40b1fd:	sbb    ch,bh
  40b1ff:	or     eax,0xb5b1bd91
  40b204:	and    dl,BYTE PTR [ebx-0x11]
  40b207:	shl    edi,cl
  40b209:	add    BYTE PTR [ebx+0x5dd3054c],dh
  40b20f:	add    ch,BYTE PTR [ebx]
  40b211:	mov    al,0x47
  40b213:	xlat   BYTE PTR ds:[ebx]
  40b214:	js     0x40b1d4
  40b216:	ds loopne 0x40b1bf
  40b219:	and    DWORD PTR [ebx+0x5cbfbda9],ecx
  40b21f:	ins    DWORD PTR es:[edi],dx
  40b220:	cmp    DWORD PTR [ecx-0x13],esp
  40b223:	icebp  
  40b224:	xlat   BYTE PTR ds:[ebx]
  40b225:	mov    cl,0xf6
  40b227:	lods   eax,DWORD PTR ds:[esi]
  40b228:	and    ebx,DWORD PTR [esi]
  40b22a:	lea    ebx,[edi-0x3d36c038]
  40b230:	adc    dh,BYTE PTR [ebx-0x5d]
  40b233:	daa    
  40b234:	xlat   BYTE PTR ds:[ebx]
  40b235:	popa   
  40b236:	aaa    
  40b237:	iret   
  40b238:	push   edi
  40b239:	fadd   DWORD PTR [ecx+eiz*2-0x1b868314]
  40b240:	dec    ebx
  40b241:	pop    ds
  40b242:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b243:	mov    al,ds:0x3eba3f08
  40b248:	push   ds
  40b249:	(bad)  
  40b24a:	cmp    cl,dl
  40b24c:	(bad)  
  40b24e:	add    eax,edx
  40b250:	jl     0x40b1d9
  40b252:	and    dh,BYTE PTR [edx+edi*8+0x4c56a21b]
  40b259:	or     eax,0x3b12a5ef
  40b25e:	ins    BYTE PTR es:[edi],dx
  40b25f:	mov    ds:0x303ac6c3,al
  40b264:	push   es
  40b265:	pushf  
  40b266:	sahf   
  40b267:	scas   al,BYTE PTR es:[edi]
  40b268:	ins    BYTE PTR es:[edi],dx
  40b269:	aas    
  40b26a:	das    
  40b26b:	gs aad 0x5f
  40b26e:	pushf  
  40b26f:	adc    ch,BYTE PTR [esi]
  40b271:	mov    WORD PTR [esi+0x77536e6a],ss
  40b277:	mov    ebp,0xae989621
  40b27c:	push   ds
  40b27d:	lods   al,BYTE PTR ds:[esi]
  40b27e:	out    0x82,eax
  40b280:	push   es
  40b281:	adc    BYTE PTR [ecx+0x68a2ae55],0x99
  40b288:	ffreep st(4)
  40b28a:	mov    al,ds:0x4295175e
  40b28f:	pop    es
  40b290:	jbe    0x40b241
  40b292:	add    BYTE PTR [edx+0x47286b46],dh
  40b298:	nop
  40b299:	aad    0xc3
  40b29b:	xchg   esi,eax
  40b29c:	lods   al,BYTE PTR ds:[esi]
  40b29d:	int3   
  40b29e:	jmp    0xdbb1:0x2f7ecf23
  40b2a5:	push   es
  40b2a6:	add    DWORD PTR [edi+0x768d6749],ecx
  40b2ac:	loopne 0x40b263
  40b2ae:	inc    ebx
  40b2af:	inc    ebx
  40b2b0:	and    ebp,edi
  40b2b2:	pop    ebp
  40b2b3:	mov    cl,BYTE PTR [ecx+0x42]
  40b2b6:	inc    edi
  40b2b7:	cmp    al,0x7b
  40b2b9:	fucomi st,st(0)
  40b2bb:	lahf   
  40b2bc:	outs   dx,DWORD PTR ds:[esi]
  40b2bd:	fs push ebx
  40b2bf:	jmp    0x40b26f
  40b2c1:	cmp    DWORD PTR [eax+ebp*4-0x315ca645],0x8b282234
  40b2cc:	repz loop 0x40b2b8
  40b2cf:	inc    ebp
  40b2d0:	inc    esp
  40b2d1:	test   BYTE PTR ds:0xd6750c85,cl
  40b2d7:	imul   eax,DWORD PTR [esi],0xffffff83
  40b2da:	add    DWORD PTR [edi+0x17],0x852eb5f5
  40b2e1:	(bad)  
  40b2e2:	stos   DWORD PTR es:[edi],eax
  40b2e3:	pmullw mm5,QWORD PTR [edi+edi*8]
  40b2e7:	inc    ebp
  40b2e8:	push   eax
  40b2e9:	mov    ecx,0x611a0e7d
  40b2ee:	arpl   ax,dx
  40b2f0:	cmc    
  40b2f1:	xchg   ebp,eax
  40b2f2:	ret    0x90ac
  40b2f5:	ins    BYTE PTR es:[edi],dx
  40b2f6:	jp     0xc8c72f6f
  40b2fc:	je     0x40b2f6
  40b2fe:	jo     0x40b2e2
  40b300:	sbb    BYTE PTR [edx-0x73],ah
  40b303:	add    BYTE PTR [ebx+0x49fd2071],0xd6
  40b30a:	jle    0x40b2ba
  40b30c:	nop
  40b30d:	sub    al,0x2a
  40b30f:	sti    
  40b310:	(bad)  
  40b311:	rcl    DWORD PTR [esi-0x69],1
  40b314:	or     DWORD PTR [ebx-0x40],esp
  40b317:	and    al,dl
  40b319:	arpl   WORD PTR ds:0x52d21406,di
  40b31f:	cmp    eax,DWORD PTR [eax+0x288d985d]
  40b325:	or     al,0x7
  40b327:	push   ss
  40b328:	push   ecx
  40b329:	test   DWORD PTR [ecx+0x4a],0x432af2e0
  40b330:	icebp  
  40b331:	icebp  
  40b332:	xchg   esi,eax
  40b333:	dec    eax
  40b334:	push   ebp
  40b335:	test   al,0xcd
  40b337:	mov    ds:0xe4e9ab76,al
  40b33c:	in     al,dx
  40b33d:	push   0xe25c6e83
  40b342:	jb     0x40b38d
  40b344:	and    eax,0x32ebd74e
  40b349:	push   ecx
  40b34a:	out    dx,al
  40b34b:	stc    
  40b34c:	cs push ebp
  40b34e:	rol    BYTE PTR [ebp+0x65],1
  40b351:	cdq    
  40b352:	mov    ecx,0xb1b171c1
  40b357:	(bad)  
  40b358:	or     esi,DWORD PTR [edi+0x9]
  40b35b:	aas    
  40b35c:	loop   0x40b3c0
  40b35e:	jmp    0xeef7a78a
  40b363:	inc    edx
  40b364:	xchg   esp,eax
  40b365:	add    al,0x4d
  40b367:	repnz inc edi
  40b369:	in     eax,0x45
  40b36b:	imul   ebx,edi,0xca3ee3ee
  40b371:	add    eax,0x5d5481bd
  40b376:	das    
  40b377:	xchg   BYTE PTR [ebx],al
  40b379:	add    eax,0xdf3310e5
  40b37e:	jle    0x40b387
  40b380:	or     ah,BYTE PTR [edx-0x73]
  40b383:	pop    ebp
  40b384:	and    BYTE PTR [ebp+0x2],ch
  40b387:	popa   
  40b388:	xchg   DWORD PTR [edx+ecx*8-0x2293a243],esp
  40b38f:	sub    ebp,esp
  40b391:	mov    ecx,0xa9b0c357
  40b396:	jmp    0xd7e4:0x5ca5609d
  40b39d:	sbb    BYTE PTR [ebx-0x47a11934],dl
  40b3a3:	sti    
  40b3a4:	leave  
  40b3a5:	push   eax
  40b3a6:	mov    BYTE PTR [esi-0x37db02f8],al
  40b3ac:	sub    BYTE PTR ds:0x7d8c64e5,bl
  40b3b2:	test   BYTE PTR [edi+0x69],bl
  40b3b5:	xor    DWORD PTR [edi+0x2f9aa6c9],edi
  40b3bb:	fxch   st(6)
  40b3bd:	into   
  40b3be:	pop    eax
  40b3bf:	das    
  40b3c0:	nop
  40b3c1:	cld    
  40b3c2:	jno    0x40b3b3
  40b3c4:	out    dx,al
  40b3c5:	imul   ecx,DWORD PTR [ebx],0x6a85994b
  40b3cb:	adc    bl,BYTE PTR [ebx-0x28]
  40b3ce:	or     esi,DWORD PTR [ebx]
  40b3d0:	and    eax,0x8670c27f
  40b3d5:	repnz bound ebp,QWORD PTR [eax-0x58]
  40b3d9:	fistp  WORD PTR [esp+edx*1+0x233d0d0c]
  40b3e0:	loope  0x40b395
  40b3e2:	je     0x40b44e
  40b3e4:	out    0x5c,eax
  40b3e6:	jb     0xd9c7ebeb
  40b3ec:	add    BYTE PTR [eax-0x20],ah
  40b3ef:	dec    ecx
  40b3f0:	inc    ecx
  40b3f1:	pop    ds
  40b3f2:	inc    esi
  40b3f3:	outs   dx,DWORD PTR ds:[esi]
  40b3f4:	(bad)  
  40b3f5:	cmc    
  40b3f6:	cmp    ebx,DWORD PTR [edx-0x4465cb49]
  40b3fc:	test   al,0x23
  40b3fe:	mov    ecx,0x416d334c
  40b403:	outs   dx,BYTE PTR ds:[esi]
  40b404:	jge    0x40b3c4
  40b406:	fld    QWORD PTR [eax]
  40b408:	or     DWORD PTR [eax+0x1c],ecx
  40b40b:	stos   BYTE PTR es:[edi],al
  40b40c:	inc    eax
  40b40d:	pop    ebp
  40b40e:	mov    eax,0x1389a95a
  40b413:	mov    ecx,0x5ca54d55
  40b418:	jge    0x40b420
  40b41a:	inc    esi
  40b41b:	mov    bh,0x23
  40b41d:	or     DWORD PTR [ebp+0x4f119bf6],ebx
  40b423:	iret   
  40b424:	test   BYTE PTR [esi-0x13],0xad
  40b428:	dec    eax
  40b429:	fld    st(2)
  40b42b:	xchg   ebp,esp
  40b42d:	gs iret 
  40b42f:	mov    ebp,0xeb55e28
  40b434:	cdq    
  40b435:	enter  0x9329,0x4c
  40b439:	das    
  40b43a:	sub    eax,0xa98ef9b1
  40b43f:	pop    esp
  40b440:	jmp    0x312b:0x13dc3e38
  40b447:	dec    eax
  40b448:	ja     0x40b3eb
  40b44a:	nop
  40b44b:	push   ss
  40b44c:	pop    ebx
  40b44d:	inc    ebp
  40b44e:	(bad)  
  40b44f:	popf   
  40b450:	cmp    ah,BYTE PTR [esi+edx*8+0x44]
  40b454:	jmp    0x40b49b
  40b456:	or     DWORD PTR [ebp-0x2d8bdc7b],ecx
  40b45c:	jno    0x40b43d
  40b45e:	jns    0x40b435
  40b460:	loope  0x40b3fa
  40b462:	xchg   esi,eax
  40b463:	mov    ds:0x8f510093,eax
  40b468:	mov    esi,0x579c2ea3
  40b46d:	and    BYTE PTR [ebx+0x40],ch
  40b470:	outs   dx,BYTE PTR ds:[esi]
  40b471:	xchg   ebp,eax
  40b472:	mov    cl,BYTE PTR [ebp+0x2c]
  40b475:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b476:	cmp    al,0xda
  40b478:	stos   DWORD PTR es:[edi],eax
  40b479:	fnsave [eax-0x4c]
  40b47c:	rcr    esp,1
  40b47e:	mov    ebx,0xbd4b345e
  40b483:	jg     0x40b4b5
  40b485:	and    BYTE PTR [eax-0x30f9788b],dh
  40b48b:	push   ebp
  40b48c:	push   edi
  40b48d:	lods   eax,DWORD PTR ds:[esi]
  40b48e:	out    0x8c,eax
  40b490:	mov    esi,0x95cedaa4
  40b495:	nop
  40b496:	and    al,0xa8
  40b498:	jle    0x40b504
  40b49a:	mov    ebx,0x178f6308
  40b49f:	(bad)  
  40b4a0:	sub    ah,cl
  40b4a2:	add    eax,0xaf697dc5
  40b4a7:	jb     0x40b43a
  40b4a9:	xchg   ecx,eax
  40b4aa:	or     al,0x6d
  40b4ac:	sbb    eax,0xd04cfe6
  40b4b1:	jns    0x40b452
  40b4b3:	mov    dh,0xbd
  40b4b5:	ins    BYTE PTR es:[edi],dx
  40b4b6:	or     eax,0x3c471875
  40b4bb:	add    eax,0xd9932e6a
  40b4c0:	outs   dx,DWORD PTR ds:[esi]
  40b4c1:	adc    esi,edx
  40b4c3:	dec    ebx
  40b4c4:	popf   
  40b4c5:	ja     0x40b487
  40b4c7:	(bad)  
  40b4c8:	fdivr  st(3),st
  40b4ca:	mov    edi,0xfc29322d
  40b4cf:	pusha  
  40b4d0:	sahf   
  40b4d1:	rcl    ebp,cl
  40b4d3:	and    al,BYTE PTR [esi+0x37]
  40b4d6:	push   ds
  40b4d7:	push   0x42
  40b4d9:	xchg   cl,cl
  40b4db:	(bad)  
  40b4dd:	dec    esp
  40b4de:	call   DWORD PTR [eax]
  40b4e0:	add    dl,BYTE PTR [ecx-0x26]
  40b4e3:	fucomip st,st(0)
  40b4e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4e6:	xchg   esi,eax
  40b4e7:	ds inc eax
  40b4e9:	dec    ebp
  40b4ea:	retf   
  40b4eb:	pop    ebp
  40b4ec:	mov    al,0xe0
  40b4ee:	shr    edi,cl
  40b4f0:	(bad)  
  40b4f1:	push   ebx
  40b4f2:	push   0x188db698
  40b4f7:	in     al,dx
  40b4f8:	es or  al,0x8
  40b4fb:	cwde   
  40b4fc:	retf   0x25b9
  40b4ff:	imul   ebx,ebx,0x28
  40b502:	ds ins BYTE PTR es:[edi],dx
  40b504:	push   ds
  40b505:	sbb    DWORD PTR [edi*1-0x50fc9257],edi
  40b50c:	fdivr  DWORD PTR ds:0x18109007
  40b512:	mov    bh,0xf2
  40b514:	sub    DWORD PTR [esi+0x39],edi
  40b517:	stc    
  40b518:	scas   al,BYTE PTR es:[edi]
  40b519:	das    
  40b51a:	jo     0x40b50c
  40b51c:	imul   edx,DWORD PTR [ecx+0xa],0xa
  40b520:	sub    esi,ebp
  40b522:	or     al,BYTE PTR [edx-0x47]
  40b525:	(bad)  
  40b526:	out    0x12,al
  40b528:	add    ah,BYTE PTR [ebp+0x56312029]
  40b52e:	adc    BYTE PTR [ecx+esi*2-0x6ac94875],dh
  40b535:	dec    eax
  40b536:	adc    esp,eax
  40b538:	fistp  WORD PTR [edi+0x110f0a34]
  40b53e:	inc    edi
  40b53f:	mov    BYTE PTR [esp+esi*2-0xc],0x95
  40b544:	inc    edx
  40b545:	and    al,0x1a
  40b547:	lahf   
  40b548:	xchg   BYTE PTR [ecx-0x1083090a],cl
  40b54e:	leave  
  40b54f:	shl    DWORD PTR [edx-0x27a52bc6],0xe
  40b556:	inc    ecx
  40b557:	xchg   BYTE PTR [edx],dh
  40b559:	mov    dl,0x28
  40b55b:	dec    edi
  40b55c:	adc    eax,0x35e66133
  40b561:	sbb    esp,DWORD PTR [ecx+0x3f]
  40b564:	or     edx,DWORD PTR [ecx+0x9]
  40b567:	cmp    dl,BYTE PTR [edx]
  40b569:	jo     0x40b564
  40b56b:	inc    esi
  40b56c:	mov    ecx,0x5c47b904
  40b571:	push   ss
  40b572:	cmc    
  40b573:	mov    eax,ds:0x24b0eee2
  40b578:	imul   eax,edx,0xe668767c
  40b57e:	cld    
  40b57f:	sbb    DWORD PTR [edx-0x54],ebx
  40b582:	int3   
  40b583:	cmp    DWORD PTR [edx],esi
  40b585:	das    
  40b586:	cmc    
  40b587:	in     eax,0xd0
  40b589:	mov    cl,0xa0
  40b58b:	mov    ds:0xa72bed27,al
  40b590:	pop    eax
  40b591:	std    
  40b592:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b593:	lods   eax,DWORD PTR ds:[esi]
  40b594:	retf   0xb82
  40b597:	iret   
  40b598:	jl     0x40b5f7
  40b59a:	stos   BYTE PTR es:[edi],al
  40b59b:	cmc    
  40b59c:	stos   BYTE PTR es:[edi],al
  40b59d:	aaa    
  40b59e:	arpl   ax,ax
  40b5a0:	mov    WORD PTR [eax+0x76c174b4],es
  40b5a6:	ds push esi
  40b5a8:	cmp    al,0xba
  40b5aa:	(bad)  
  40b5ab:	mov    bl,0xc8
  40b5ad:	adc    BYTE PTR [ecx+eiz*4],0xcf
  40b5b1:	(bad)  
  40b5b2:	in     eax,dx
  40b5b3:	push   es
  40b5b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5b5:	mov    DWORD PTR [ecx],esp
  40b5b7:	adc    DWORD PTR [ecx+0x3ac28781],0x42c29349
  40b5c1:	jle    0x40b562
  40b5c3:	adc    dh,cl
  40b5c5:	mov    ds:0x7f465bc2,al
  40b5ca:	test   DWORD PTR [ebx],edi
  40b5cc:	cmc    
  40b5cd:	in     al,dx
  40b5ce:	mov    eax,0x52fa19e7
  40b5d3:	push   esi
  40b5d4:	push   0xb4b4b583
  40b5d9:	pushw  ss
  40b5db:	push   esp
  40b5dc:	cmp    ebx,DWORD PTR [ecx-0x64]
  40b5df:	out    dx,eax
  40b5e0:	sti    
  40b5e1:	add    esp,DWORD PTR [eax+eiz*4-0x6d]
  40b5e5:	fadd   st(2),st
  40b5e7:	push   0x64
  40b5e9:	xor    eax,0x35890d4
  40b5ee:	mov    ?,WORD PTR ds:0x5bb52fd0
  40b5f4:	stc    
  40b5f5:	dec    esi
  40b5f6:	cmp    eax,0x1787157b
  40b5fb:	cmp    ebx,edi
  40b5fd:	aaa    
  40b5fe:	cmp    eax,0x5bec53f5
  40b603:	in     al,0x65
  40b605:	mov    cl,0xd9
  40b607:	mov    eax,ds:0x16f9589d
  40b60c:	enter  0x354a,0xad
  40b610:	outs   dx,BYTE PTR ds:[esi]
  40b611:	push   ds
  40b612:	push   ecx
  40b613:	out    dx,al
  40b614:	imul   DWORD PTR [eax+0x418f4ab9]
  40b61a:	repnz stos BYTE PTR es:[edi],al
  40b61c:	addr16 ret 0x4c19
  40b620:	test   eax,0x20021867
  40b625:	adc    al,0xe2
  40b627:	lea    eax,[edx]
  40b629:	mov    al,BYTE PTR [ecx]
  40b62b:	outs   dx,BYTE PTR ds:[esi]
  40b62c:	sbb    esi,ecx
  40b62e:	inc    edi
  40b62f:	or     DWORD PTR [ebp-0x54],0x5a
  40b633:	cmp    esp,ebp
  40b635:	sub    eax,0xaac961e
  40b63a:	push   esi
  40b63b:	jae    0x40b6a3
  40b63d:	sbb    al,0xef
  40b63f:	jnp    0x40b61d
  40b641:	jbe    0x40b655
  40b643:	leave  
  40b644:	shr    DWORD PTR [esp+eax*1],1
  40b647:	push   ecx
  40b648:	cld    
  40b649:	mov    eax,ds:0xe3f691bb
  40b64e:	ret    
  40b64f:	icebp  
  40b650:	aad    0x60
  40b652:	popa   
  40b653:	mov    eax,0xd19b769e
  40b658:	mov    edx,0x49912000
  40b65d:	pop    ecx
  40b65e:	rcl    DWORD PTR [esi+0x2],1
  40b661:	or     DWORD PTR [ebx],0xffffffb1
  40b664:	bound  ebp,QWORD PTR [eax+esi*2+0x39678eb6]
  40b66b:	es xchg edx,eax
  40b66d:	push   ds
  40b66e:	push   esi
  40b66f:	inc    ebp
  40b670:	cmp    edi,DWORD PTR [ebx+0x7d]
  40b673:	pusha  
  40b674:	aas    
  40b675:	cdq    
  40b676:	mov    ds:0x1f2eae0a,al
  40b67b:	dec    eax
  40b67c:	and    DWORD PTR [ecx+0x371b06da],edi
  40b682:	(bad)  
  40b683:	shr    DWORD PTR [esi-0xb9a4829],1
  40b689:	fidiv  DWORD PTR ds:0x8255a939
  40b68f:	pop    edi
  40b690:	fwait
  40b691:	xor    bl,0x8e
  40b694:	jne    0x40b6e8
  40b696:	jl     0x40b686
  40b698:	mov    ah,0x19
  40b69a:	icebp  
  40b69b:	jp     0x40b6c1
  40b69d:	popa   
  40b69e:	stc    
  40b69f:	lods   al,BYTE PTR ds:[esi]
  40b6a0:	mov    ebp,0x1f9734c5
  40b6a5:	cwde   
  40b6a6:	pop    ebp
  40b6a7:	lds    esp,FWORD PTR ds:0xe392f70c
  40b6ad:	retf   0x9b06
  40b6b0:	popa   
  40b6b1:	add    BYTE PTR ds:0x6e3d9af3,dl
  40b6b7:	fcmovnbe st,st(7)
  40b6b9:	neg    ah
  40b6bb:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40b6bd:	out    0x91,al
  40b6bf:	cmp    DWORD PTR [ebp+0x6e1b467f],edi
  40b6c5:	(bad)  
  40b6c6:	mov    eax,0x107be65c
  40b6cb:	ret    0x2e10
  40b6ce:	fadd   QWORD PTR [edi+esi*2-0x1c66d759]
  40b6d5:	push   cs
  40b6d6:	jg     0x40b6ea
  40b6d8:	nop
  40b6d9:	cmc    
  40b6da:	pop    ds
  40b6db:	stos   BYTE PTR es:[edi],al
  40b6dc:	add    eax,0xb9596b2a
  40b6e1:	xor    ecx,DWORD PTR [esi-0x1a]
  40b6e4:	adc    eax,0x9d8efc81
  40b6e9:	xlat   BYTE PTR ds:[ebx]
  40b6ea:	xor    al,bh
  40b6ec:	cs (bad) 
  40b6ee:	sti    
  40b6ef:	cmc    
  40b6f0:	jg     0x40b70b
  40b6f2:	dec    ecx
  40b6f3:	dec    ebx
  40b6f4:	add    DWORD PTR [edx+0x74],0x6e0f59c4
  40b6fb:	enter  0x9ba8,0x6a
  40b6ff:	adc    DWORD PTR es:[edi],ebx
  40b702:	jns    0x40b74b
  40b704:	mov    ah,0xcd
  40b706:	or     al,0x6d
  40b708:	dec    edi
  40b709:	(bad)  
  40b70a:	aad    0x7c
  40b70c:	and    eax,0xaebdc568
  40b711:	aas    
  40b712:	fucompp 
  40b714:	loope  0x40b6c7
  40b716:	fst    DWORD PTR [edx-0x2727836d]
  40b71c:	sbb    ebx,DWORD PTR [esi-0x76ff847d]
  40b722:	aaa    
  40b723:	sub    al,BYTE PTR ds:0x6613d129
  40b729:	push   edx
  40b72a:	shr    DWORD PTR [esi-0x46],cl
  40b72d:	jmp    0x40b6ec
  40b72f:	sar    edi,cl
  40b731:	adc    al,0x18
  40b733:	clc    
  40b734:	push   eax
  40b735:	cmp    BYTE PTR [ebx],dl
  40b737:	lds    ebp,FWORD PTR [ebx+0x73]
  40b73a:	cmp    bh,BYTE PTR [edi-0x60]
  40b73d:	test   eax,0xe5f23da6
  40b742:	jmp    0x46375b8e
  40b747:	pop    es
  40b748:	xchg   ecx,eax
  40b749:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b74a:	mov    esp,0xd51329a4
  40b74f:	fdivr  DWORD PTR [ebx]
  40b751:	mov    edi,DWORD PTR [eax-0x51]
  40b754:	inc    ecx
  40b755:	popf   
  40b756:	xchg   DWORD PTR [edi+0x25],ebx
  40b759:	repz push 0xffffffb1
  40b75c:	xor    dh,al
  40b75e:	pop    ebp
  40b75f:	in     al,0xd6
  40b761:	test   BYTE PTR [ebp-0x16],dl
  40b764:	jg     0x40b7af
  40b766:	mov    WORD PTR ds:0xf8842fd4,cs
  40b76c:	addr16 (bad) 
  40b76e:	(bad)
  40b771:	pop    ds
  40b772:	pusha  
  40b773:	and    DWORD PTR [eax+0x508463bf],eax
  40b779:	pop    ds
  40b77a:	hlt    
  40b77b:	clc    
  40b77c:	(bad)  
  40b77d:	ficom  DWORD PTR [eax]
  40b77f:	sahf   
  40b780:	sub    eax,0xd33535eb
  40b785:	mov    ebx,?
  40b787:	outs   dx,BYTE PTR ds:[esi]
  40b788:	mov    edi,0xcd5d8e5
  40b78d:	aaa    
  40b78e:	mov    eax,ds:0x20397943
  40b793:	pop    ebp
  40b794:	pop    ds
  40b795:	inc    sp
  40b797:	pop    ebp
  40b798:	push   ecx
  40b799:	ins    BYTE PTR es:[edi],dx
  40b79a:	sbb    bl,dl
  40b79c:	pop    ebp
  40b79d:	rol    bl,1
  40b79f:	cs jge 0x40b7f6
  40b7a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7a3:	ret    0x49c2
  40b7a6:	nop
  40b7a7:	ins    DWORD PTR es:[edi],dx
  40b7a8:	punpckldq mm1,DWORD PTR [ebp+0x477bac56]
  40b7af:	push   cs
  40b7b0:	jp     0x40b7ef
  40b7b2:	mov    edi,0x504a0d58
  40b7b7:	iret   
  40b7b8:	popf   
  40b7b9:	mov    ch,0xe8
  40b7bb:	int    0x1c
  40b7bd:	jae    0x40b779
  40b7bf:	cmp    eax,0x484e2510
  40b7c4:	icebp  
  40b7c5:	retf   0xae6
  40b7c8:	addr16 dec eax
  40b7ca:	or     eax,edx
  40b7cc:	jns    0x40b7c4
  40b7ce:	pushf  
  40b7cf:	add    DWORD PTR [ebp-0x50],edi
  40b7d2:	adc    BYTE PTR [ecx+0x288c12a7],0xb3
  40b7d9:	(bad)  
  40b7db:	xchg   BYTE PTR [ebx+0x7790ea85],ah
  40b7e1:	clc    
  40b7e2:	add    ebp,ecx
  40b7e4:	jecxz  0x40b85a
  40b7e6:	icebp  
  40b7e7:	out    dx,al
  40b7e8:	inc    ebx
  40b7e9:	ins    DWORD PTR es:[edi],dx
  40b7ea:	mov    bh,0x34
  40b7ec:	int3   
  40b7ed:	call   0x3cf9:0xc624444c
  40b7f4:	es jne 0x40b7a7
  40b7f7:	outs   dx,BYTE PTR ds:[esi]
  40b7f8:	rep ins DWORD PTR es:[edi],dx
  40b7fa:	cmp    DWORD PTR [edx+0x4ac77b85],ebp
  40b800:	mov    ds:0xd2d45302,eax
  40b805:	in     al,dx
  40b806:	jl     0x40b7fd
  40b808:	call   0x14a4:0x613d90fb
  40b80f:	xor    eax,0x6b4f80b9
  40b814:	ja     0x40b87a
  40b816:	mov    eax,ds:0x9aabb820
  40b81b:	jb     0x40b7ed
  40b81d:	scas   al,BYTE PTR es:[edi]
  40b81e:	adc    DWORD PTR ds:0xeca0ea96,edi
  40b824:	cwde   
  40b825:	bound  edx,QWORD PTR [eax-0x2707a180]
  40b82b:	mov    fs,WORD PTR [ecx+ebp*1-0x5b43d122]
  40b832:	ins    DWORD PTR es:[edi],dx
  40b833:	(bad)  [ebx-0x6b]
  40b836:	inc    edx
  40b837:	jae    0x40b826
  40b839:	cmp    DWORD PTR [eax-0x741a1133],ecx
  40b83f:	jmp    0xdc44:0x760537fa
  40b846:	js     0x40b7d6
  40b848:	mov    ah,0x3d
  40b84a:	scas   eax,DWORD PTR es:[edi]
  40b84b:	push   edi
  40b84c:	sahf   
  40b84d:	jno    0x40b859
  40b84f:	pop    ebp
  40b850:	test   DWORD PTR [esi+0xe6bb9b9],0x2da45448
  40b85a:	or     DWORD PTR [ebx-0x5d357be8],ecx
  40b860:	mov    esp,0xff877390
  40b865:	push   eax
  40b866:	jle    0x40b814
  40b868:	push   cs
  40b869:	in     al,dx
  40b86a:	sti    
  40b86b:	jp     0x40b8e7
  40b86d:	loopne 0x40b8da
  40b86f:	pop    ebp
  40b870:	adc    ecx,ebx
  40b872:	mov    ebx,0x342c433f
  40b877:	in     eax,0x78
  40b879:	xchg   BYTE PTR [edx+0x4f],cl
  40b87c:	lods   eax,DWORD PTR ds:[esi]
  40b87d:	sbb    BYTE PTR [edx],al
  40b87f:	repnz sub eax,DWORD PTR [ebp+edx*4+0x5d]
  40b884:	xchg   DWORD PTR [esi+0x39],esp
  40b887:	in     eax,0x26
  40b889:	or     DWORD PTR [ebx-0x32845c4e],ebx
  40b88f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b890:	sahf   
  40b891:	iret   
  40b892:	mov    dh,0xa8
  40b894:	jle    0x40b901
  40b896:	icebp  
  40b897:	adc    eax,0x6bb1012c
  40b89c:	retf   
  40b89d:	xor    DWORD PTR [ebx-0x18],edi
  40b8a0:	jae    0x40b884
  40b8a2:	aas    
  40b8a3:	pop    es
  40b8a4:	pop    ebp
  40b8a5:	inc    esp
  40b8a6:	add    eax,0x62b506b1
  40b8ab:	pushf  
  40b8ac:	xchg   edx,eax
  40b8ad:	sub    al,0xb5
  40b8af:	scas   eax,DWORD PTR es:[edi]
  40b8b0:	lds    ebx,FWORD PTR [ebx]
  40b8b2:	js     0x40b899
  40b8b4:	jmp    0xc366:0x43dd503b
  40b8bb:	test   eax,0x370fe9c6
  40b8c0:	cli    
  40b8c1:	jge    0x40b8bb
  40b8c3:	imul   esi,DWORD PTR [esi-0x3f],0xad429500
  40b8ca:	push   eax
  40b8cb:	loop   0x40b8dd
  40b8cd:	call   0x785f6842
  40b8d2:	mov    ecx,0x2e486357
  40b8d7:	mov    al,BYTE PTR [edx]
  40b8d9:	in     eax,0x30
  40b8db:	int    0xe2
  40b8dd:	sar    BYTE PTR [esp+esi*2-0x7081309f],1
  40b8e4:	bound  edi,QWORD PTR [eax]
  40b8e6:	sbb    ch,BYTE PTR [eax+0x65]
  40b8e9:	mov    edi,0xbc3dba2c
  40b8ee:	fcomi  st,st(5)
  40b8f0:	aas    
  40b8f1:	xchg   edx,eax
  40b8f2:	jle    0x40b919
  40b8f4:	inc    esi
  40b8f5:	add    BYTE PTR [edi+0x71],cl
  40b8f8:	xchg   edi,eax
  40b8f9:	sbb    eax,0x43cf99f2
  40b8fe:	mov    ds,WORD PTR [eax-0x4c]
  40b901:	inc    esp
  40b902:	jo     0x40b8a6
  40b904:	xchg   ebp,eax
  40b905:	sub    BYTE PTR [esi-0x61],bh
  40b908:	scas   eax,DWORD PTR es:[edi]
  40b909:	xor    BYTE PTR [edi+0x3],al
  40b90c:	rcl    DWORD PTR ds:0xb0ad655e,cl
  40b912:	adc    dh,BYTE PTR [esi-0x57]
  40b915:	or     ecx,DWORD PTR [eax-0x3bbcfd01]
  40b91b:	mov    dh,0x52
  40b91d:	mul    DWORD PTR [ecx+0x41784b76]
  40b923:	out    0xd5,eax
  40b925:	loopne 0x40b8e6
  40b927:	xor    bh,BYTE PTR [eax+eax*1-0xb8828b5]
  40b92e:	daa    
  40b92f:	mov    ah,0xbb
  40b931:	dec    ebx
  40b932:	adc    edx,DWORD PTR [ebx]
  40b934:	lods   al,BYTE PTR ds:[esi]
  40b935:	addr16 and al,0x92
  40b938:	mov    BYTE PTR [ebx-0x61a62322],bh
  40b93e:	mov    BYTE PTR [eax],cl
  40b940:	lock and BYTE PTR [esi],ch
  40b943:	push   0x4f22f605
  40b948:	xlat   BYTE PTR ds:[ebx]
  40b949:	sub    edi,DWORD PTR [ecx-0x43341724]
  40b94f:	sbb    bh,BYTE PTR [edx+0x4fff0001]
  40b955:	cmc    
  40b956:	xor    ebx,DWORD PTR [edi]
  40b958:	push   ss
  40b959:	lea    edx,[edi+0x4b]
  40b95c:	(bad)  
  40b95d:	or     DWORD PTR [edx-0x6],edi
  40b960:	cs dec esp
  40b962:	xor    ecx,DWORD PTR [ebp-0x45fa881]
  40b968:	fwait
  40b969:	push   esi
  40b96a:	adc    bl,BYTE PTR [eax-0x3e]
  40b96d:	scas   al,BYTE PTR es:[edi]
  40b96e:	jmp    0xb4162c7a
  40b973:	jle    0x40b945
  40b975:	push   edx
  40b976:	ficom  DWORD PTR [edx-0x61885236]
  40b97c:	and    al,0xfe
  40b97e:	pop    ebp
  40b97f:	test   al,0x8d
  40b981:	mov    DWORD PTR [esp+ebx*1+0x9],edx
  40b985:	or     al,0xde
  40b987:	xor    DWORD PTR [ecx+0x38],edx
  40b98a:	sub    cl,BYTE PTR [eax]
  40b98c:	nop
  40b98d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b98e:	bound  esp,QWORD PTR ss:[edx+eax*2]
  40b992:	push   ecx
  40b993:	data16 arpl WORD PTR [edx],di
  40b996:	aad    0xd1
  40b998:	retf   0x76e8
  40b99b:	sti    
  40b99c:	mov    bh,0x3f
  40b99e:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40b9a0:	jmp    0x3ff340df
  40b9a5:	scas   eax,DWORD PTR es:[edi]
  40b9a6:	xor    dl,BYTE PTR [ebx-0x78]
  40b9a9:	lods   eax,DWORD PTR ds:[esi]
  40b9aa:	add    BYTE PTR [eax+0x31],al
  40b9ad:	or     ah,BYTE PTR [edi-0x22bcd14d]
  40b9b3:	adc    BYTE PTR [ebp+esi*2-0x361c4692],cl
  40b9ba:	cdq    
  40b9bb:	mov    al,BYTE PTR [ebp-0x671ee590]
  40b9c1:	xor    eax,0xb503d5c
  40b9c6:	or     BYTE PTR [edi],al
  40b9c8:	inc    esp
  40b9c9:	dec    ebp
  40b9ca:	mov    edx,0x301f50f5
  40b9cf:	cli    
  40b9d0:	xchg   ebx,eax
  40b9d1:	jne    0x40b9fd
  40b9d3:	cmp    ebx,DWORD PTR [edi-0x53]
  40b9d6:	sub    BYTE PTR [ecx+ebx*4+0x72457fae],0x18
  40b9de:	sbb    al,0xa4
  40b9e0:	jo     0x40b9d9
  40b9e2:	ins    DWORD PTR es:[edi],dx
  40b9e3:	or     eax,0x9596ed00
  40b9e8:	mov    al,ds:0x20c8b8ec
  40b9ed:	es push eax
  40b9ef:	scas   eax,DWORD PTR es:[edi]
  40b9f0:	in     al,0x70
  40b9f2:	ins    DWORD PTR es:[edi],dx
  40b9f3:	std    
  40b9f4:	sti    
  40b9f5:	mov    DWORD PTR [ebx+0x1c],ebp
  40b9f8:	sub    bh,BYTE PTR [ecx]
  40b9fa:	shr    BYTE PTR [ebp-0x53],1
  40b9fd:	pop    es
  40b9fe:	jns    0x40ba7d
  40ba00:	call   0x25c4:0xdf52fc9c
  40ba07:	nop
  40ba08:	adc    ebp,DWORD PTR [ecx+0x25]
  40ba0b:	adc    BYTE PTR [edi-0x23],0x6b
  40ba0f:	adc    DWORD PTR [ebp+0x1d],eax
  40ba12:	sbb    al,0xbc
  40ba14:	xchg   ebp,eax
  40ba15:	push   esp
  40ba16:	or     eax,0x2518b5ea
  40ba1b:	fstp   st(0)
  40ba1d:	jne    0x40ba4d
  40ba1f:	sub    eax,0x158d7b00
  40ba24:	push   es
  40ba25:	cs jge 0x40ba15
  40ba28:	gs adc al,0xff
  40ba2b:	popa   
  40ba2c:	jb     0x40ba1d
  40ba2e:	(bad)  
  40ba30:	js     0x40ba46
  40ba32:	retf   
  40ba33:	repz and BYTE PTR [ebx+0x1f1db936],bl
  40ba3a:	(bad)  
  40ba3b:	sti    
  40ba3c:	imul   ecx,DWORD PTR [edi],0xffffffa0
  40ba3f:	popf   
  40ba40:	in     eax,0x80
  40ba42:	inc    esi
  40ba43:	inc    ebx
  40ba44:	into   
  40ba45:	jmp    0x994ea378
  40ba4a:	or     al,BYTE PTR [ecx]
  40ba4c:	pop    edi
  40ba4d:	push   ebp
  40ba4e:	mov    ebp,0x6fd15660
  40ba53:	out    0x97,eax
  40ba55:	cmc    
  40ba56:	jmp    0xd6b9:0x22fa81cd
  40ba5d:	push   esp
  40ba5e:	out    dx,eax
  40ba5f:	imul   edx,esi,0xd9c8fcd2
  40ba65:	and    DWORD PTR [ebp-0x6e],eax
  40ba68:	mov    bl,0x64
  40ba6a:	mov    WORD PTR [esi],es
  40ba6c:	mov    ebp,0x686e8f4e
  40ba71:	dec    edi
  40ba72:	push   esi
  40ba73:	mov    al,ds:0x3ec651ed
  40ba78:	adc    bl,dh
  40ba7a:	sbb    eax,0xd13728da
  40ba7f:	mov    al,ds:0xb5ff3452
  40ba84:	(bad)  
  40ba85:	ja     0x40ba6f
  40ba87:	push   edi
  40ba88:	cmc    
  40ba89:	shr    BYTE PTR [eax-0x12628865],1
  40ba8f:	mov    ds:0x4947cdf6,eax
  40ba94:	and    BYTE PTR [edi+0x46],0x5e
  40ba98:	mov    cl,BYTE PTR [ecx]
  40ba9a:	imul   esi,DWORD PTR [eax+0x68061e5f],0xe0011a68
  40baa4:	mov    eax,?
  40baa6:	xor    dl,BYTE PTR [edx]
  40baa8:	rcl    BYTE PTR [ecx-0x2212c86e],0x3d
  40baaf:	std    
  40bab0:	mov    ebx,0xd075934f
  40bab5:	iret   
  40bab6:	mov    dh,0x54
  40bab8:	cmc    
  40bab9:	sub    al,0x81
  40babb:	enter  0x2720,0x9e
  40babf:	loope  0x40bb34
  40bac1:	inc    ebp
  40bac2:	add    DWORD PTR [ebx+ecx*8-0x2e],ecx
  40bac6:	dec    ebx
  40bac7:	sbb    BYTE PTR [esi-0x44b2afe],0x29
  40bace:	jmp    0xee5b5fd0
  40bad3:	xchg   ebp,eax
  40bad4:	cli    
  40bad5:	mov    eax,ds:0xd20f5f18
  40bada:	inc    edi
  40badb:	mov    eax,ds:0x789b169e
  40bae0:	(bad)  
  40bae1:	sbb    BYTE PTR [edx-0x60],bh
  40bae4:	fldcw  WORD PTR [eax]
  40bae6:	and    al,0xa2
  40bae8:	pop    esi
  40bae9:	mov    BYTE PTR [eax+0x5186ea07],dl
  40baef:	mov    ebp,0x29c26b9d
  40baf4:	retf   0x855e
  40baf7:	xchg   ecx,eax
  40baf8:	jecxz  0x40bb23
  40bafa:	push   0xfffffff1
  40bafc:	xor    al,0xc2
  40bafe:	rcr    DWORD PTR [ebp+0x3fdd9a5e],cl
  40bb04:	hlt    
  40bb05:	dec    ebp
  40bb06:	dec    ebx
  40bb07:	xor    bh,BYTE PTR [ecx-0x7577588b]
  40bb0d:	fs jl  0x40bb01
  40bb10:	xlat   BYTE PTR ds:[bx]
  40bb12:	test   BYTE PTR [eax+edi*1+0x50],dh
  40bb16:	jge    0x40bb63
  40bb18:	cli    
  40bb19:	push   cs
  40bb1a:	fsubr  st,st(4)
  40bb1c:	mul    BYTE PTR [ebp+0x17757983]
  40bb22:	outs   dx,DWORD PTR ds:[esi]
  40bb23:	inc    esi
  40bb24:	mov    al,ds:0x2ec210fc
  40bb29:	aas    
  40bb2a:	push   ecx
  40bb2b:	fwait
  40bb2c:	jp     0x40baf5
  40bb2e:	dec    ebx
  40bb2f:	adc    al,0x6d
  40bb31:	cmp    BYTE PTR [eiz*4-0x419b1f7b],cl
  40bb38:	and    eax,DWORD PTR [edi]
  40bb3a:	sbb    bh,BYTE PTR [ebx]
  40bb3c:	popa   
  40bb3d:	push   ebx
  40bb3e:	pop    ebx
  40bb3f:	push   0x55
  40bb41:	jmp    0xa8e8:0x7966bfe9
  40bb48:	repz and ebp,DWORD PTR [ebp+0x6433d709]
  40bb4f:	cli    
  40bb50:	pop    edx
  40bb51:	nop
  40bb52:	jae    0x40bbc0
  40bb54:	push   esp
  40bb55:	pop    esi
  40bb56:	jns    0x40bb06
  40bb58:	repnz leave 
  40bb5a:	imul   BYTE PTR cs:[ebp-0x3c]
  40bb5e:	inc    edx
  40bb5f:	pop    eax
  40bb60:	or     DWORD PTR [edi-0x66],edi
  40bb63:	or     eax,edi
  40bb65:	inc    ebp
  40bb66:	sbb    edx,DWORD PTR ds:[ecx]
  40bb69:	scas   eax,DWORD PTR es:[edi]
  40bb6a:	test   eax,0x24dfac26
  40bb6f:	les    eax,FWORD PTR [ebx-0x7bf88496]
  40bb75:	(bad)
  40bb79:	leave  
  40bb7a:	pop    ds
  40bb7b:	push   eax
  40bb7c:	fnstsw WORD PTR ds:0xbfaf3809
  40bb82:	xchg   ebx,ecx
  40bb84:	mov    cl,0xb1
  40bb86:	outs   dx,DWORD PTR ds:[esi]
  40bb87:	pop    esi
  40bb88:	(bad)  
  40bb89:	in     eax,0x9f
  40bb8b:	and    al,0x4e
  40bb8d:	fs in  eax,0xcb
  40bb90:	leave  
  40bb91:	xchg   BYTE PTR [esi-0x30],ah
  40bb94:	imul   eax,DWORD PTR [ecx+0xad7c772],0x52d6157a
  40bb9e:	mov    ch,0xcd
  40bba0:	(bad)
  40bba5:	ja     0x40bbb0
  40bba7:	jge    0x40bb80
  40bba9:	aaa    
  40bbaa:	(bad)  
  40bbab:	ficom  DWORD PTR [esp+edi*4]
  40bbae:	cmp    al,0xc9
  40bbb0:	cmp    eax,0xafe329cc
  40bbb5:	(bad)  
  40bbb6:	fwait
  40bbb7:	mov    DWORD PTR [edx+eax*4+0x3d7daaad],edx
  40bbbe:	sbb    al,0x34
  40bbc0:	mov    WORD PTR [ebx-0x7f],ss
  40bbc3:	mov    edi,0xc3332cb1
  40bbc8:	test   BYTE PTR [ebx],bl
  40bbca:	popa   
  40bbcb:	jae    0x40bbdb
  40bbcd:	push   edi
  40bbce:	scas   eax,DWORD PTR es:[edi]
  40bbcf:	adc    al,0x91
  40bbd1:	retf   0x59c3
  40bbd4:	leave  
  40bbd5:	in     al,0xdf
  40bbd7:	jle    0x40bc1e
  40bbd9:	inc    eax
  40bbda:	cmp    edi,ebp
  40bbdc:	in     al,dx
  40bbdd:	out    dx,al
  40bbde:	inc    ecx
  40bbdf:	push   edi
  40bbe0:	push   0xffffffe6
  40bbe2:	cmp    al,0x4d
  40bbe4:	push   0xffffffe7
  40bbe6:	leave  
  40bbe7:	loopne 0x40bc23
  40bbe9:	adc    bl,BYTE PTR ds:0xe472d925
  40bbef:	fidiv  WORD PTR [ebp+0x2226d4a2]
  40bbf5:	mov    dh,0xca
  40bbf7:	pushf  
  40bbf8:	fsub   DWORD PTR [edx]
  40bbfa:	mov    DWORD PTR [ecx-0x7e],0x80a0051d
  40bc01:	mov    BYTE PTR [eax+0x2c3a7787],dl
  40bc07:	fisttp DWORD PTR [esi-0x73cb78fd]
  40bc0d:	popa   
  40bc0e:	jne    0x40bc1e
  40bc10:	stc    
  40bc11:	imul   edi,DWORD PTR [ebp-0x203b8a84],0x23
  40bc18:	inc    eax
  40bc19:	jmp    0x6b9e:0x39d43f72
  40bc20:	dec    esp
  40bc21:	(bad)  
  40bc22:	push   ecx
  40bc23:	leave  
  40bc24:	push   0x6e
  40bc26:	mov    edx,DWORD PTR [ebx+eiz*1-0x2f]
  40bc2a:	dec    esi
  40bc2b:	push   ecx
  40bc2c:	ret    0x2fc5
  40bc2f:	jns    0x40bbd7
  40bc31:	xchg   ebp,eax
  40bc32:	mov    bh,0xbf
  40bc34:	cmp    DWORD PTR [eax+0x14],ebx
  40bc37:	or     dl,BYTE PTR [esi+edx*8-0x2c]
  40bc3b:	out    0x1c,al
  40bc3d:	in     al,0x8e
  40bc3f:	xor    DWORD PTR [eax+0x6c],esi
  40bc42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc43:	(bad)  
  40bc44:	lods   eax,DWORD PTR ds:[esi]
  40bc45:	cmp    ah,BYTE PTR [ecx+0x4d]
  40bc48:	mov    BYTE PTR [ebp-0x6e],bh
  40bc4b:	push   es
  40bc4c:	xchg   ecx,eax
  40bc4d:	push   eax
  40bc4e:	in     eax,dx
  40bc4f:	dec    ebx
  40bc50:	je     0x40bc8c
  40bc52:	xchg   esi,eax
  40bc53:	jmp    0x40bc73
  40bc55:	xchg   ebp,eax
  40bc56:	push   ecx
  40bc57:	sub    dl,ch
  40bc59:	adc    al,0x69
  40bc5b:	or     al,0xb6
  40bc5d:	pop    ebx
  40bc5e:	or     DWORD PTR [ecx+0x72de1f66],0x36
  40bc65:	and    al,BYTE PTR [eax+0xc2fac0c]
  40bc6b:	stos   DWORD PTR es:[edi],eax
  40bc6c:	xor    bh,BYTE PTR [edx+0x6e055f51]
  40bc72:	jge    0x40bc4f
  40bc74:	shr    BYTE PTR ds:0x65861854,cl
  40bc7a:	ins    DWORD PTR es:[edi],dx
  40bc7b:	addr16 push eax
  40bc7d:	and    al,0x9e
  40bc7f:	(bad)  
  40bc82:	aas    
  40bc83:	arpl   WORD PTR [esi-0x38d3dd97],bx
  40bc89:	xchg   ebp,eax
  40bc8a:	adc    BYTE PTR [ebp+eiz*8-0x257823fc],0xd6
  40bc92:	lds    esp,FWORD PTR [ecx+0x2e]
  40bc95:	pop    es
  40bc96:	cmc    
  40bc97:	and    dh,BYTE PTR [esi-0x741de955]
  40bc9d:	or     al,0x6e
  40bc9f:	mov    esi,0x6bd7402c
  40bca4:	sbb    al,0xf7
  40bca6:	pushf  
  40bca7:	test   al,0xd6
  40bca9:	jns    0x40bc7b
  40bcab:	retf   
  40bcac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcad:	fmul   DWORD PTR [esi-0x6e]
  40bcb0:	dec    ebp
  40bcb1:	gs aad 0xf0
  40bcb4:	push   esi
  40bcb5:	mov    bl,0x9
  40bcb7:	aaa    
  40bcb8:	rcr    ebp,0xc4
  40bcbb:	test   BYTE PTR [ebx-0x6b76afdb],dl
  40bcc1:	rcr    BYTE PTR [edi-0x6d772790],cl
  40bcc7:	push   esi
  40bcc8:	sbb    BYTE PTR ds:0xf4081d46,cl
  40bcce:	xor    BYTE PTR [esi-0x69],bh
  40bcd1:	fidiv  WORD PTR [esp+eax*2-0x3b]
  40bcd5:	mov    al,0x34
  40bcd7:	pop    eax
  40bcd8:	ins    BYTE PTR es:[edi],dx
  40bcd9:	arpl   WORD PTR [eax-0x448242d4],cx
  40bcdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bce0:	pop    edi
  40bce1:	aaa    
  40bce2:	xchg   ebx,eax
  40bce3:	scas   al,BYTE PTR es:[edi]
  40bce4:	out    0x2f,eax
  40bce6:	lods   al,BYTE PTR ds:[esi]
  40bce7:	mov    esi,edi
  40bce9:	js     0x40bc86
  40bceb:	cs popa 
  40bced:	rol    edx,1
  40bcef:	jb     0x40bc75
  40bcf1:	lods   al,BYTE PTR ds:[esi]
  40bcf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcf3:	(bad)  
  40bcf5:	push   ebp
  40bcf6:	fist   DWORD PTR [ebp+0x67]
  40bcf9:	out    0xcd,eax
  40bcfb:	cmp    DWORD PTR [esi+esi*1+0x67],ebx
  40bcff:	retf   
  40bd00:	enter  0x2a7,0x25
  40bd04:	jmp    0x40bd54
  40bd06:	pusha  
  40bd07:	jne    0x40bd1c
  40bd09:	aam    0x4d
  40bd0b:	pop    ds
  40bd0c:	or     eax,0x38d2ef11
  40bd11:	inc    edi
  40bd12:	xchg   ebp,eax
  40bd13:	pushf  
  40bd14:	loope  0x40bd41
  40bd16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd17:	mov    DWORD PTR [eax],0x3420815c
  40bd1d:	cli    
  40bd1e:	ror    dl,0x70
  40bd21:	rol    ecx,cl
  40bd23:	xchg   DWORD PTR [eax],ebx
  40bd25:	jl     0x40bcfa
  40bd27:	mov    esp,0xbf19b763
  40bd2c:	sbb    al,dl
  40bd2e:	aad    0x96
  40bd30:	sub    BYTE PTR [ecx+0x4eb276af],ch
  40bd36:	dec    esp
  40bd37:	cld    
  40bd38:	mov    ds:0x727c484,eax
  40bd3d:	push   ebp
  40bd3e:	out    dx,eax
  40bd3f:	and    eax,0x9060ed2a
  40bd44:	test   BYTE PTR [ecx],0x9e
  40bd47:	mov    ds:0x1a473fcd,eax
  40bd4c:	or     eax,0x8526ccb9
  40bd51:	sub    BYTE PTR [edi-0x77],ah
  40bd54:	sub    al,0x34
  40bd56:	stos   DWORD PTR es:[edi],eax
  40bd57:	lods   al,BYTE PTR ds:[esi]
  40bd58:	xor    al,BYTE PTR [ebp+0x10f7fccf]
  40bd5e:	mov    edx,0x3f488e5a
  40bd63:	push   cs
  40bd64:	bound  ecx,QWORD PTR [eax-0x56]
  40bd67:	lahf   
  40bd68:	sbb    esi,DWORD PTR [edi-0x758043e3]
  40bd6e:	dec    BYTE PTR [ebx-0x15405b6f]
  40bd74:	das    
  40bd75:	jmp    0x40bdb5
  40bd77:	fild   WORD PTR [ebx-0x15efa4e1]
  40bd7d:	push   ds
  40bd7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd7f:	sub    DWORD PTR [eax+0x5f],edi
  40bd82:	cmp    al,0x95
  40bd84:	xchg   ebx,eax
  40bd85:	mov    ebp,0xb84f5c4f
  40bd8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd8b:	or     eax,0x4d76ce16
  40bd90:	push   esi
  40bd91:	stos   DWORD PTR es:[edi],eax
  40bd92:	mov    ah,0xb6
  40bd94:	test   DWORD PTR [edx+0x7f06ca77],0x26e70c5d
  40bd9e:	push   edi
  40bd9f:	mov    ds:0x3bf05f57,al
  40bda4:	shr    BYTE PTR [ecx+0x5f],0x7a
  40bda8:	stc    
  40bda9:	mov    ah,0x67
  40bdab:	stos   BYTE PTR es:[edi],al
  40bdac:	idiv   bh
  40bdae:	sub    edx,DWORD PTR [eax+0x1b8a70be]
  40bdb4:	call   0x8312:0x7e800a90
  40bdbb:	mov    edx,ecx
  40bdbd:	or     BYTE PTR [esi-0x50d1d76f],ah
  40bdc3:	sti    
  40bdc4:	xor    ebp,DWORD PTR [ecx-0x60015c2]
  40bdca:	in     al,0x45
  40bdcc:	jnp    0x40bd71
  40bdce:	or     al,0xc4
  40bdd0:	or     ah,BYTE PTR [edx]
  40bdd2:	call   0x2720:0xe0905a48
  40bdd9:	(bad)  
  40bdda:	pop    eax
  40bddb:	mov    ebx,0xabd490d4
  40bde0:	call   0x3b27:0x21f3a638
  40bde7:	inc    ecx
  40bde8:	sbb    eax,0xcbab17b3
  40bded:	pushf  
  40bdee:	add    eax,0xffb1e53a
  40bdf3:	ret    0xdf51
  40bdf6:	mov    bh,0x3a
  40bdf8:	jl     0x40bdff
  40bdfa:	xor    al,0xa9
  40bdfc:	xor    cl,0x67
  40bdff:	jmp    0xf118:0x3fbeeb36
  40be06:	dec    edx
  40be07:	xor    al,0x59
  40be09:	mov    esi,0xd37f6138
  40be0e:	xchg   ecx,eax
  40be0f:	dec    esp
  40be10:	inc    ebp
  40be11:	arpl   cx,bx
  40be13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be14:	xlat   BYTE PTR ds:[ebx]
  40be15:	aas    
  40be16:	jnp    0x40be90
  40be18:	dec    edx
  40be19:	jmp    0xf68:0x7505ebaf
  40be20:	nop
  40be21:	int3   
  40be22:	stos   BYTE PTR es:[edi],al
  40be23:	jl     0x40be52
  40be25:	ins    DWORD PTR es:[edi],dx
  40be26:	pushf  
  40be27:	and    BYTE PTR [edi+0x4d],ah
  40be2a:	lds    esi,FWORD PTR [ecx]
  40be2c:	pusha  
  40be2d:	or     BYTE PTR [edi-0x11a63366],dh
  40be33:	and    ebx,0x85000205
  40be39:	stos   DWORD PTR es:[edi],eax
  40be3a:	inc    ebx
  40be3b:	cli    
  40be3c:	sub    cl,cl
  40be3e:	sub    al,0xa0
  40be40:	sahf   
  40be41:	pop    esi
  40be42:	and    dh,bh
  40be44:	mov    al,BYTE PTR [si+0x6a]
  40be48:	cmp    eax,DWORD PTR [ecx-0x5f]
  40be4b:	imul   esp,DWORD PTR [esi+0x4f9b0010],0x2787c046
  40be55:	jp     0x40be8b
  40be57:	pop    ss
  40be58:	jl     0x40bdff
  40be5a:	adc    eax,0xecfc2a13
  40be5f:	lds    ebp,FWORD PTR [ebx+0x61d9a42a]
  40be65:	jbe    0x40be40
  40be67:	xor    cl,BYTE PTR ds:0x41426ed6
  40be6d:	add    al,0x5a
  40be6f:	fwait
  40be70:	push   0xffffffec
  40be72:	jecxz  0x40beee
  40be74:	jge    0x40bea6
  40be76:	fisttp DWORD PTR [edx-0x6]
  40be79:	out    0xcf,eax
  40be7b:	loope  0x40bef7
  40be7d:	jmp    FWORD PTR [eax+0x22]
  40be80:	sbb    al,0x33
  40be82:	imul   eax,DWORD PTR [esi+0x75],0x762fc13e
  40be89:	xchg   esi,eax
  40be8a:	call   FWORD PTR [edi-0x5]
  40be8d:	hlt    
  40be8e:	inc    edi
  40be8f:	mov    BYTE PTR [ebp+0x69],ch
  40be92:	jno    0x40beb4
  40be94:	mov    edi,0x16840756
  40be99:	jmp    0xa3852a9e
  40be9e:	jmp    0xd9235375
  40bea3:	lock xor eax,0x17985341
  40bea9:	jle    0x40be73
  40beab:	xchg   DWORD PTR [ecx+0x83aaa20],eax
  40beb1:	mov    BYTE PTR [esi-0x12],dh
  40beb4:	cli    
  40beb5:	sbb    eax,0xe79e8bdb
  40beba:	xchg   BYTE PTR [eax+0x5b],bh
  40bebd:	aam    0x9b
  40bebf:	ja     0x40beaa
  40bec1:	in     al,0x11
  40bec3:	mov    al,0xee
  40bec5:	push   ds
  40bec6:	sub    eax,DWORD PTR [esi-0x4a]
  40bec9:	jmp    0x3dc2:0x66a22bb2
  40bed0:	ds aam 0x57
  40bed3:	not    edx
  40bed5:	shl    BYTE PTR [eax+0x15e1abdf],cl
  40bedb:	int3   
  40bedc:	fidiv  DWORD PTR [edx]
  40bede:	ret    
  40bedf:	cmp    al,BYTE PTR [ebx+0x4f]
  40bee2:	jp     0x40be97
  40bee4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bee5:	ds (bad) 
  40bee7:	xchg   esi,eax
  40bee8:	cs mov ch,0xc9
  40beeb:	pop    ss
  40beec:	lock push edx
  40beee:	ja     0x40be7f
  40bef0:	jb     0x40bf5a
  40bef2:	pop    edx
  40bef3:	cdq    
  40bef4:	fwait
  40bef5:	pop    edi
  40bef6:	add    eax,0xb905631f
  40befb:	(bad)  
  40befc:	inc    esp
  40befd:	pop    ebp
  40befe:	(bad)  
  40beff:	add    DWORD PTR [esi-0x453e5919],edi
  40bf05:	add    ah,BYTE PTR [edi-0x56]
  40bf08:	xlat   BYTE PTR ds:[ebx]
  40bf09:	dec    eax
  40bf0a:	xor    BYTE PTR [ecx+eax*2],bh
  40bf0d:	scas   al,BYTE PTR es:[edi]
  40bf0e:	sub    cl,BYTE PTR [edx+0x229373eb]
  40bf14:	pop    ds
  40bf15:	push   eax
  40bf16:	add    ebp,DWORD PTR [ebp+0x3704f385]
  40bf1c:	dec    edx
  40bf1d:	test   eax,0xb6e4ae0
  40bf22:	out    0xbb,eax
  40bf24:	jnp    0x40bec9
  40bf26:	sub    dl,dl
  40bf28:	daa    
  40bf29:	add    eax,eax
  40bf2b:	ins    BYTE PTR es:[edi],dx
  40bf2c:	mov    edx,0xea9985dd
  40bf31:	pop    ss
  40bf32:	sbb    eax,0xd976ef6
  40bf37:	(bad)  
  40bf38:	lods   eax,DWORD PTR ds:[esi]
  40bf39:	(bad)  
  40bf3b:	lock dec ecx
  40bf3d:	or     ebx,DWORD PTR [esi-0x39]
  40bf40:	cmp    eax,DWORD PTR [ebp-0x42]
  40bf43:	mov    dh,0xc3
  40bf45:	addr16 xchg esi,eax
  40bf47:	mov    ebp,0x71e912a5
  40bf4c:	inc    eax
  40bf4d:	xchg   esp,eax
  40bf4e:	push   0x75cd2ad9
  40bf53:	xor    DWORD PTR [esi-0x9],0x783b3e3d
  40bf5a:	or     eax,0x6db9dc01
  40bf5f:	ins    DWORD PTR es:[edi],dx
  40bf60:	sub    DWORD PTR [edi+0x2a],0x3c
  40bf64:	rol    BYTE PTR [ebp-0x61],cl
  40bf67:	add    dh,BYTE PTR [ecx]
  40bf69:	cmp    DWORD PTR [ebp-0x454cf777],edx
  40bf6f:	cld    
  40bf70:	pop    ebx
  40bf71:	int    0x78
  40bf73:	xchg   edi,eax
  40bf74:	pop    edx
  40bf75:	xchg   edx,eax
  40bf76:	push   edi
  40bf77:	mov    cl,0x7b
  40bf79:	jo     0x40bf54
  40bf7b:	pop    ss
  40bf7c:	and    ah,dl
  40bf7e:	inc    ebp
  40bf7f:	shl    DWORD PTR [esi+ebx*4],0x59
  40bf83:	lea    esi,[edx+0x6f]
  40bf86:	sbb    esi,esp
  40bf88:	mov    esi,0xa62b32dc
  40bf8d:	in     al,dx
  40bf8e:	stc    
  40bf8f:	sub    DWORD PTR [esp+ebp*2],ebp
  40bf92:	fs mov cl,0x3
  40bf95:	outs   dx,BYTE PTR ds:[esi]
  40bf96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf97:	cli    
  40bf98:	inc    esi
  40bf99:	mov    edx,?
  40bf9b:	(bad)  
  40bf9c:	push   edi
  40bf9d:	and    al,0xe4
  40bf9f:	jb     0x40bf69
  40bfa1:	mov    edx,0xc1935e43
  40bfa6:	mov    eax,ds:0x77976ea4
  40bfab:	mov    cl,0x2c
  40bfad:	aad    0xe2
  40bfaf:	cmp    ah,BYTE PTR [esi]
  40bfb1:	ds and al,0xf0
  40bfb4:	fbld   TBYTE PTR [eax+0x323ad362]
  40bfba:	imul   ebp,ebp,0xed3263b3
  40bfc0:	shl    bh,0x52
  40bfc3:	sub    eax,DWORD PTR [edi+0x8]
  40bfc6:	retf   
  40bfc7:	das    
  40bfc8:	push   ss
  40bfc9:	sbb    ebp,DWORD PTR [edi]
  40bfcb:	jl     0x40bfc2
  40bfcd:	test   BYTE PTR [eax+edx*8-0x5e192713],dh
  40bfd4:	or     DWORD PTR [edx-0x45],eax
  40bfd7:	sbb    al,0x65
  40bfd9:	fdiv   QWORD PTR [ecx-0xc]
  40bfdc:	lock inc ebx
  40bfde:	mov    ah,0xe0
  40bfe0:	cdq    
  40bfe1:	ror    DWORD PTR [ecx-0x32],0x7
  40bfe5:	nop
  40bfe6:	retf   
  40bfe7:	mov    esi,0xbec92189
  40bfec:	adc    dh,ah
  40bfee:	int3   
  40bfef:	clc    
  40bff0:	scas   eax,DWORD PTR es:[edi]
  40bff1:	neg    DWORD PTR [ecx-0xcddde46]
  40bff7:	std    
  40bff8:	call   ecx
  40bffa:	jg     0x40c000
  40bffc:	shr    DWORD PTR [edx],0x58
  40bfff:	mov    ecx,0xfcf70646
  40c004:	mov    ds:0x58ebe818,al
  40c009:	(bad)  
  40c00a:	mov    dl,BYTE PTR [ebx+ecx*2]
  40c00d:	xchg   edi,eax
  40c00e:	xchg   edx,eax
  40c00f:	adc    BYTE PTR [esp+eax*1],ch
  40c012:	inc    edi
  40c013:	repz in eax,dx
  40c015:	(bad)  
  40c016:	shr    DWORD PTR [ebx+0x3d5dd25],cl
  40c01c:	mov    ah,0x0
  40c01e:	add    bh,dl
  40c020:	call   0x98c1c893
  40c025:	fdivr  QWORD PTR [edx]
  40c027:	or     bh,BYTE PTR [ebp+ecx*1-0x4b29d017]
  40c02e:	xchg   ebp,eax
  40c02f:	add    eax,0x9258913b
  40c034:	add    DWORD PTR [ebx-0x2a],0x23accdb5
  40c03b:	int    0xbe
  40c03d:	jnp    0x40c04b
  40c03f:	jnp    0x40c06e
  40c041:	jbe    0x40c0b5
  40c043:	and    DWORD PTR [ecx+0x3bb789d4],0x808af1bd
  40c04d:	cwde   
  40c04e:	inc    esp
  40c04f:	test   cl,dh
  40c051:	sbb    al,0x71
  40c053:	pop    ds
  40c054:	fst    st(6)
  40c056:	test   BYTE PTR [eax],0xac
  40c059:	jge    0x40c076
  40c05b:	inc    eax
  40c05c:	idiv   BYTE PTR [edi+0x26]
  40c05f:	fld    DWORD PTR [ebx+0x55]
  40c062:	mov    cl,0xc0
  40c064:	inc    ebx
  40c065:	xchg   ecx,eax
  40c066:	jnp    0x40bff2
  40c068:	mov    al,es:0x38a11757
  40c06e:	sub    eax,0x5ffd5f48
  40c073:	push   0x5b315857
  40c078:	push   esi
  40c079:	bound  ebp,QWORD PTR [edx]
  40c07b:	ins    DWORD PTR es:[edi],dx
  40c07c:	pop    ecx
  40c07d:	and    bl,ah
  40c07f:	es xchg ecx,eax
  40c081:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c082:	inc    esp
  40c083:	(bad)  
  40c084:	xor    al,0x6e
  40c086:	wbinvd 
  40c088:	inc    edx
  40c089:	aaa    
  40c08a:	dec    esi
  40c08b:	jle    0x40c0a3
  40c08d:	lock js 0x40c080
  40c090:	fist   WORD PTR [ebp+0x588051f2]
  40c096:	in     al,dx
  40c097:	not    DWORD PTR [edx+0x403e3569]
  40c09d:	dec    ebx
  40c09e:	sub    DWORD PTR [ebx-0x19],edx
  40c0a1:	push   eax
  40c0a2:	and    bh,BYTE PTR [eax-0x58346019]
  40c0a8:	(bad)  
  40c0a9:	lahf   
  40c0aa:	ins    BYTE PTR es:[edi],dx
  40c0ab:	dec    esp
  40c0ac:	xchg   dh,bh
  40c0ae:	dec    eax
  40c0af:	fwait
  40c0b0:	imul   ebp,DWORD PTR [ecx-0x4f],0x7a9e0b7d
  40c0b7:	and    eax,0x33a4d05e
  40c0bc:	cmpxchg BYTE PTR [ecx-0x3e],al
  40c0c0:	lahf   
  40c0c1:	inc    ecx
  40c0c2:	daa    
  40c0c3:	push   cs
  40c0c4:	fstp   QWORD PTR [edx]
  40c0c6:	in     eax,dx
  40c0c7:	add    edx,ebp
  40c0c9:	pop    ebp
  40c0ca:	loope  0x40c13f
  40c0cc:	aas    
  40c0cd:	mov    esi,0x8032cfaa
  40c0d2:	lea    edx,[esi]
  40c0d4:	mov    BYTE PTR [eax-0x6f],bl
  40c0d7:	adc    ecx,DWORD PTR [edx]
  40c0d9:	icebp  
  40c0da:	xchg   edi,eax
  40c0db:	pop    ecx
  40c0dc:	pop    ebx
  40c0dd:	add    al,BYTE PTR [ebx+ebx*2]
  40c0e0:	mov    ds:0xf1d9cdde,al
  40c0e5:	shl    BYTE PTR [edx+0x5fd8736c],0xab
  40c0ec:	(bad)  
  40c0ed:	sub    DWORD PTR ds:0x7fd36232,edi
  40c0f3:	ficom  DWORD PTR fs:[ecx]
  40c0f6:	std    
  40c0f7:	out    0xe9,eax
  40c0f9:	sub    edi,ebp
  40c0fb:	mov    ecx,esp
  40c0fd:	xor    eax,0x6e98edf1
  40c102:	rol    BYTE PTR [esi-0x18],0xc1
  40c106:	jnp    0x40c155
  40c108:	ss es das 
  40c10b:	fbstp  TBYTE PTR [edi]
  40c10d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c10e:	xchg   DWORD PTR [eax+0x17f3d54d],esp
  40c114:	sub    DWORD PTR [ecx],eax
  40c116:	aad    0xdc
  40c118:	ins    BYTE PTR es:[edi],dx
  40c119:	add    BYTE PTR [eax],bl
  40c11b:	xchg   ebp,eax
  40c11c:	jp     0x40c163
  40c11e:	bound  eax,QWORD PTR [eax+0x5d2c94d8]
  40c124:	and    cl,0x53
  40c127:	add    BYTE PTR [edi-0x1b],ch
  40c12a:	jo     0x40c0d4
  40c12c:	ss pop esi
  40c12e:	push   esp
  40c12f:	sbb    edx,DWORD PTR [esi]
  40c131:	int3   
  40c132:	int3   
  40c133:	dec    esp
  40c134:	es sti 
  40c136:	adc    bh,BYTE PTR [ebx+0x789181a4]
  40c13c:	mov    dh,0xa8
  40c13e:	bound  edi,QWORD PTR [esi+0x44]
  40c141:	mov    ah,0xc9
  40c143:	adc    eax,0xffdc7642
  40c148:	or     eax,0xe84356dd
  40c14d:	xor    esp,ebx
  40c14f:	inc    ecx
  40c150:	xlat   BYTE PTR ds:[ebx]
  40c151:	fisubr WORD PTR [edi+0x48db69d5]
  40c157:	cmp    esi,DWORD PTR [edx+0x32b10f95]
  40c15d:	sub    edi,0x14
  40c160:	aaa    
  40c161:	pusha  
  40c162:	loop   0x40c126
  40c164:	retf   
  40c165:	mov    al,ds:0x67c4e065
  40c16a:	xchg   ecx,eax
  40c16b:	pop    es
  40c16c:	sti    
  40c16d:	repz (bad) 
  40c16f:	pop    edi
  40c170:	and    eax,0xbb7203ec
  40c175:	repz sbb ecx,DWORD PTR [ebx-0x46ab33ae]
  40c17c:	mov    eax,ds:0x118136e0
  40c181:	imul   edx,DWORD PTR [eax+0x60],0xddb9e80c
  40c188:	es pop ebx
  40c18a:	imul   DWORD PTR [ebx-0x3dd2bfe8]
  40c190:	mov    bl,0xff
  40c192:	mov    cl,0x9a
  40c194:	jge    0x40c173
  40c196:	rcr    ebp,cl
  40c198:	add    BYTE PTR [ecx+0x75],0x71
  40c19c:	mov    eax,ds:0x17996f62
  40c1a1:	stos   BYTE PTR es:[edi],al
  40c1a2:	outs   dx,BYTE PTR ds:[esi]
  40c1a3:	out    dx,al
  40c1a4:	aaa    
  40c1a5:	pop    ebp
  40c1a6:	sub    eax,DWORD PTR [eax]
  40c1a8:	jns    0x40c17c
  40c1aa:	imul   DWORD PTR [eax-0x64e7c3d8]
  40c1b0:	mov    al,0x40
  40c1b2:	push   ss
  40c1b3:	push   ss
  40c1b4:	dec    edi
  40c1b5:	mov    cl,0x5
  40c1b7:	sub    eax,0x7d7156e5
  40c1bc:	add    eax,0xc95690c9
  40c1c1:	mov    ecx,0x6dc800e2
  40c1c6:	jo     0x40c165
  40c1c8:	dec    DWORD PTR [ecx+esi*4+0x5a4f2903]
  40c1cf:	push   ebp
  40c1d0:	jbe    0x40c213
  40c1d2:	mov    ds:0x4a9f0479,eax
  40c1d7:	push   ebx
  40c1d8:	push   eax
  40c1d9:	adc    esi,edx
  40c1db:	scas   eax,DWORD PTR es:[edi]
  40c1dc:	rcr    DWORD PTR [edi],0xca
  40c1df:	jo     0x40c1bc
  40c1e1:	adc    ch,ch
  40c1e3:	inc    eax
  40c1e4:	popa   
  40c1e5:	push   0x204c961
  40c1ea:	js     0x40c1f5
  40c1ec:	ins    BYTE PTR es:[edi],dx
  40c1ed:	lods   eax,DWORD PTR ds:[esi]
  40c1ee:	fs sahf 
  40c1f0:	(bad)  
  40c1f2:	jge    0x40c21f
  40c1f4:	mov    ebp,0x9d3e6356
  40c1f9:	or     edi,DWORD PTR [eax]
  40c1fb:	mov    ebp,0x817ce2ee
  40c200:	cmp    sp,WORD PTR [edi+0x4329f50b]
  40c207:	sbb    BYTE PTR ds:0x165b70e7,bh
  40c20d:	pop    es
  40c20e:	mov    ah,0xf3
  40c210:	popf   
  40c211:	pop    gs
  40c213:	dec    ebx
  40c214:	add    al,0x8c
  40c216:	push   ebx
  40c217:	leave  
  40c218:	xchg   ecx,eax
  40c219:	xchg   ecx,eax
  40c21a:	cld    
  40c21b:	mov    ds:0x9fba632c,eax
  40c220:	pop    esi
  40c221:	sbb    esp,edx
  40c223:	(bad)  
  40c224:	mov    ah,0x4d
  40c226:	jae    0x40c28a
  40c228:	in     eax,0x8f
  40c22a:	out    dx,eax
  40c22b:	imul   esp,ebx,0x63d174c8
  40c231:	int3   
  40c232:	cdq    
  40c233:	adc    DWORD PTR [ebx+ebp*1],0xffffffbb
  40c237:	mov    ch,0x21
  40c239:	sub    al,0x1e
  40c23b:	cli    
  40c23c:	enter  0x3bb9,0x3
  40c240:	je     0x40c231
  40c242:	xor    BYTE PTR [esi+0x5d9f8f2f],dh
  40c248:	xchg   edi,eax
  40c249:	inc    edi
  40c24a:	clc    
  40c24b:	xchg   BYTE PTR [edi+0x3c685295],ch
  40c251:	imul   edx
  40c253:	xchg   edx,eax
  40c254:	add    edi,DWORD PTR [ecx-0x3236d7b9]
  40c25a:	dec    esp
  40c25b:	(bad)  
  40c25d:	push   0x6147309d
  40c262:	imul   ebx,ecx,0xffffff8e
  40c265:	into   
  40c266:	add    eax,0x8a107624
  40c26b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c26c:	push   ss
  40c26d:	adc    al,0xfd
  40c26f:	cli    
  40c270:	mov    edx,0x24e4973b
  40c275:	int    0x8c
  40c277:	es or  edi,ebp
  40c27a:	sbb    BYTE PTR [edi],dh
  40c27c:	repnz cmc 
  40c27e:	out    dx,eax
  40c27f:	ins    BYTE PTR es:[edi],dx
  40c280:	in     al,0x27
  40c282:	sub    DWORD PTR [edi+0x74],esi
  40c285:	xor    al,0x5
  40c287:	idiv   DWORD PTR [ebp+0x7]
  40c28a:	cwde   
  40c28b:	fcmovnb st,st(4)
  40c28d:	sbb    DWORD PTR [ebp-0x1a71ced3],0x2543249a
  40c297:	or     edi,DWORD PTR [ebx]
  40c299:	dec    ebp
  40c29a:	lea    ecx,[edi]
  40c29c:	sub    BYTE PTR [edi+edx*1],bl
  40c29f:	sub    al,0xfb
  40c2a1:	int    0x5b
  40c2a3:	jmp    0xb50e:0x32a0987a
  40c2aa:	pop    ss
  40c2ab:	adc    al,0x38
  40c2ad:	cmp    esp,DWORD PTR [ebx+0x20]
  40c2b0:	adc    ebp,DWORD PTR [ecx]
  40c2b2:	mov    ah,0x28
  40c2b4:	mov    ds:0xeccf3404,al
  40c2b9:	aad    0x97
  40c2bb:	xchg   esi,eax
  40c2bc:	(bad)  [edx+0x52]
  40c2bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2c0:	stc    
  40c2c1:	jo     0x40c287
  40c2c3:	xor    ch,BYTE PTR [edi-0x2a]
  40c2c6:	jmp    0x40c2de
  40c2c8:	in     al,dx
  40c2c9:	ss cld 
  40c2cb:	in     eax,dx
  40c2cc:	cmp    ah,BYTE PTR [edx-0x2ab80c18]
  40c2d2:	and    edx,eax
  40c2d4:	es std 
  40c2d6:	cdq    
  40c2d7:	pop    ecx
  40c2d8:	stos   BYTE PTR es:[edi],al
  40c2d9:	mov    bl,0xf5
  40c2db:	push   cs
  40c2dc:	fiadd  DWORD PTR [ebx]
  40c2de:	add    BYTE PTR [ecx],cl
  40c2e0:	pusha  
  40c2e1:	iret   
  40c2e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2e3:	mov    DWORD PTR [ebx],edi
  40c2e5:	leave  
  40c2e6:	std    
  40c2e7:	sub    DWORD PTR ds:0xeccde65f,ecx
  40c2ed:	in     al,0xc9
  40c2ef:	inc    ebp
  40c2f0:	aad    0xe4
  40c2f2:	jnp    0x40c2f9
  40c2f4:	push   ebx
  40c2f5:	js     0x40c2ce
  40c2f7:	xor    bl,BYTE PTR [edi-0x49]
  40c2fa:	cs mov edi,0xb341a384
  40c300:	int3   
  40c301:	pop    ss
  40c302:	dec    ecx
  40c303:	in     al,dx
  40c304:	out    dx,eax
  40c305:	cmp    DWORD PTR [ecx-0x5e],ebx
  40c308:	mov    ebx,0x222e7043
  40c30d:	dec    esi
  40c30e:	sbb    ah,BYTE PTR [esi-0x5f924721]
  40c314:	(bad)  
  40c316:	and    bh,BYTE PTR [edi-0x3f]
  40c319:	push   ss
  40c31a:	cmp    DWORD PTR [esi+eax*1],0x74
  40c31e:	aam    0x80
  40c320:	mov    ch,0xc6
  40c322:	cwde   
  40c323:	jmp    0xae7b:0x69eca036
  40c32a:	push   ds
  40c32b:	jp     0x40c358
  40c32d:	adc    BYTE PTR [ecx+0xa35f6a],bl
  40c333:	loop   0x40c300
  40c335:	cwde   
  40c336:	or     BYTE PTR [ebp+0xcb6bd4c],dh
  40c33c:	mov    edx,0xea4c7e2e
  40c341:	lahf   
  40c342:	push   ebx
  40c343:	pop    edx
  40c344:	aaa    
  40c345:	loope  0x40c3b6
  40c347:	ds push es
  40c349:	enter  0x49b6,0x3e
  40c34d:	and    ebp,edi
  40c34f:	fild   DWORD PTR [edx]
  40c351:	call   0x9e3b:0x21b317df
  40c358:	jecxz  0x40c314
  40c35a:	xor    DWORD PTR [esi+0x7],ecx
  40c35d:	ins    BYTE PTR es:[edi],dx
  40c35e:	inc    edx
  40c35f:	es test al,0xcf
  40c362:	or     eax,0x9f5f198b
  40c367:	cmp    edx,ebx
  40c369:	(bad)
  40c36c:	mov    ah,0xdf
  40c36e:	nop
  40c36f:	or     al,0x7d
  40c371:	dec    edx
  40c372:	dec    edi
  40c373:	fwait
  40c374:	dec    esp
  40c375:	out    0xf6,al
  40c377:	jb     0x40c396
  40c379:	aad    0x56
  40c37b:	sti    
  40c37c:	ins    BYTE PTR es:[edi],dx
  40c37d:	lock js 0x40c36c
  40c380:	call   0x77d2c71c
  40c385:	push   0x28
  40c387:	es aad 0xce
  40c38a:	test   BYTE PTR [ebx+0x29e6c6e],al
  40c390:	push   0x78
  40c392:	test   eax,0xde163109
  40c397:	xor    DWORD PTR [eax],ecx
  40c399:	sbb    eax,0xdbca5256
  40c39e:	arpl   WORD PTR [eax+0x6d2d2fe7],dx
  40c3a4:	inc    ebp
  40c3a5:	xor    BYTE PTR [edx],0xd5
  40c3a8:	inc    edi
  40c3a9:	xor    DWORD PTR [edx-0x1690d033],ebp
  40c3af:	stos   BYTE PTR es:[edi],al
  40c3b0:	sbb    DWORD PTR [edx+eiz*2+0x2f],0xffffffd9
  40c3b5:	cmp    ebx,DWORD PTR [edx+0x3f58d8a4]
  40c3bb:	and    ecx,DWORD PTR [ebp+0x32]
  40c3be:	js     0x40c368
  40c3c0:	sub    eax,0x5021be3a
  40c3c5:	or     BYTE PTR [ebp-0x45],dl
  40c3c8:	cdq    
  40c3c9:	into   
  40c3ca:	xor    esp,DWORD PTR [esi-0x1113b456]
  40c3d0:	jo     0x40c3d0
  40c3d2:	mov    al,ds:0x36298618
  40c3d7:	dec    ebx
  40c3d8:	repnz es mov eax,0xdf01101b
  40c3df:	push   edx
  40c3e0:	mov    ah,0xcb
  40c3e2:	pop    esp
  40c3e3:	xor    eax,0x20b7155f
  40c3e8:	fnstsw WORD PTR [ecx+0x3a]
  40c3eb:	call   0xe3ed9dfb
  40c3f0:	out    dx,eax
  40c3f1:	dec    esi
  40c3f2:	test   edx,edx
  40c3f4:	pop    esi
  40c3f5:	popa   
  40c3f6:	mov    al,ds:0x1daff32e
  40c3fb:	xchg   DWORD PTR [edi+0x56],ebp
  40c3fe:	sti    
  40c3ff:	or     al,0x96
  40c401:	pop    esp
  40c402:	xchg   dl,ch
  40c404:	aad    0x2b
  40c406:	add    ecx,DWORD PTR [ebx+0x3982b153]
  40c40c:	ja     0x40c3a6
  40c40e:	popf   
  40c40f:	gs push cs
  40c411:	arpl   WORD PTR [ecx-0x183a3ad8],cx
  40c417:	inc    eax
  40c418:	les    esp,FWORD PTR [eax+0x1ce9d4ae]
  40c41e:	fisttp QWORD PTR [ecx]
  40c420:	xchg   ebp,eax
  40c421:	mov    ds:0x7093bb6e,al
  40c426:	or     ecx,DWORD PTR [esi+0x20b57ec2]
  40c42c:	xchg   esi,eax
  40c42d:	pop    ebx
  40c42e:	sahf   
  40c42f:	aaa    
  40c430:	(bad)  
  40c431:	dec    edi
  40c432:	sahf   
  40c433:	fld    DWORD PTR [eax-0x608d0a91]
  40c439:	push   cs
  40c43a:	xchg   esp,eax
  40c43b:	cld    
  40c43c:	pop    edx
  40c43d:	xor    BYTE PTR [esi],bl
  40c43f:	xor    al,0xd0
  40c441:	add    eax,0x572cfec4
  40c446:	clc    
  40c447:	cs or  BYTE PTR es:[ebp-0x70],0x9d
  40c44d:	jnp    0x40c484
  40c44f:	sbb    edi,0x791a819c
  40c455:	ss push eax
  40c457:	jge    0x40c4b8
  40c459:	daa    
  40c45a:	inc    ebx
  40c45b:	jns    0x40c452
  40c45d:	fstp   QWORD PTR [eax+0x48]
  40c460:	push   ebx
  40c461:	add    ebp,ebx
  40c463:	xchg   esi,eax
  40c464:	hlt    
  40c465:	jnp    0x40c48d
  40c467:	mov    ah,0xb7
  40c469:	lods   eax,DWORD PTR ds:[esi]
  40c46a:	mov    eax,0x73d15aa6
  40c46f:	pop    es
  40c470:	jp     0x40c45c
  40c472:	les    ebx,FWORD PTR [edx+eiz*1+0xc594b56]
  40c479:	in     ax,dx
  40c47b:	push   ebp
  40c47c:	xchg   esp,eax
  40c47d:	cdq    
  40c47e:	into   
  40c47f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c480:	fadd   QWORD PTR [ecx+0x4a4e44d9]
  40c486:	call   0xbe2f7c0e
  40c48b:	ror    BYTE PTR [edx+ecx*8-0x65],0xc7
  40c490:	imul   edx,esi,0x7437cee3
  40c496:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c497:	mov    ah,0xef
  40c499:	pop    ebx
  40c49a:	ficomp WORD PTR [eax+0x58]
  40c49d:	fwait
  40c49e:	shr    al,0x15
  40c4a1:	mov    edi,0x359f4b91
  40c4a6:	mov    ah,0x7b
  40c4a8:	cmp    BYTE PTR ds:[edx],bl
  40c4ab:	inc    esp
  40c4ac:	cmp    eax,0xf515e9d8
  40c4b1:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40c4b3:	pop    ebp
  40c4b4:	pushf  
  40c4b5:	mov    edi,0x13698302
  40c4ba:	lods   eax,DWORD PTR ds:[esi]
  40c4bb:	adc    dl,BYTE PTR [esi-0x5e356720]
  40c4c1:	jmp    0x40c4c2
  40c4c3:	loop   0x40c4d1
  40c4c5:	dec    esp
  40c4c6:	mov    al,BYTE PTR [edi+0x53]
  40c4c9:	xchg   ebp,eax
  40c4ca:	in     al,0x7
  40c4cc:	inc    ebp
  40c4cd:	popa   
  40c4ce:	add    dh,BYTE PTR [ebx]
  40c4d0:	xor    BYTE PTR [ecx],0x42
  40c4d3:	inc    ebx
  40c4d4:	cli    
  40c4d5:	fstp   DWORD PTR [edi+ebp*4+0x4a]
  40c4d9:	lea    esp,[eax]
  40c4db:	xchg   esp,eax
  40c4dc:	out    dx,al
  40c4dd:	xor    ecx,DWORD PTR [esi-0x19f593b4]
  40c4e3:	fcomi  st,st(0)
  40c4e5:	test   eax,0xd0322e3b
  40c4ea:	(bad)  
  40c4eb:	clc    
  40c4ec:	mov    ebx,0xcb8d71b3
  40c4f1:	adc    DWORD PTR [edi-0x7c497b01],edx
  40c4f7:	loop   0x40c4b1
  40c4f9:	pop    ax
  40c4fb:	xor    al,0xa4
  40c4fd:	punpckhwd mm7,QWORD PTR [ebx]
  40c500:	icebp  
  40c501:	pop    edi
  40c502:	mov    dh,0x69
  40c504:	xchg   al,ah
  40c506:	push   esi
  40c507:	sub    eax,0xce24d330
  40c50c:	xor    al,0x23
  40c50e:	stos   DWORD PTR es:[edi],eax
  40c50f:	push   edi
  40c510:	cmc    
  40c511:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c512:	sbb    ch,BYTE PTR [ebp-0x640f0b52]
  40c518:	xorps  xmm1,XMMWORD PTR [edi+eax*2]
  40c51c:	sub    ch,bl
  40c51e:	pop    edi
  40c51f:	add    ch,cl
  40c521:	repz loope 0x40c4ad
  40c524:	daa    
  40c525:	hlt    
  40c526:	rcl    DWORD PTR [ebx-0x6e1806cc],cl
  40c52c:	jbe    0x40c525
  40c52e:	es inc ebx
  40c530:	cmp    eax,0xb388b5a4
  40c535:	inc    edx
  40c536:	push   edi
  40c537:	jmp    0x1371:0x4a4f01c4
  40c53e:	in     eax,0xef
  40c540:	inc    edi
  40c541:	xlat   BYTE PTR ds:[ebx]
  40c542:	iret   
  40c543:	sti    
  40c544:	retf   
  40c545:	pop    di
  40c547:	or     eax,0x32bd699
  40c54c:	sar    BYTE PTR [ecx+0x7c6c5360],cl
  40c552:	aas    
  40c553:	sub    eax,edi
  40c555:	je     0x40c526
  40c557:	push   ebx
  40c558:	cmp    BYTE PTR [ecx],cl
  40c55a:	sbb    DWORD PTR [eax-0x45],0x7a
  40c55e:	xor    eax,0x6213ecc8
  40c563:	sub    al,0xb1
  40c565:	stos   DWORD PTR es:[edi],eax
  40c566:	test   BYTE PTR [ebx+edi*4-0xb],cl
  40c56a:	test   eax,0xa35723ac
  40c56f:	cwde   
  40c570:	jno    0x40c5b2
  40c572:	icebp  
  40c573:	xchg   eax,edi
  40c575:	sar    BYTE PTR [ecx-0x40],cl
  40c578:	ins    DWORD PTR es:[edi],dx
  40c579:	add    eax,0x39e2f414
  40c57e:	stos   DWORD PTR es:[edi],eax
  40c57f:	shl    eax,0xc4
  40c582:	xchg   edi,eax
  40c583:	add    dl,BYTE PTR [eax-0x67323a08]
  40c589:	mov    ecx,esp
  40c58b:	aam    0xcd
  40c58d:	inc    esp
  40c58e:	lock out 0xcc,al
  40c591:	(bad)  
  40c592:	xchg   ebx,eax
  40c593:	cmp    eax,0xc152fd2b
  40c599:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c59a:	adc    al,0x6e
  40c59c:	mov    dl,0x88
  40c59e:	sub    al,0xfe
  40c5a0:	sbb    ebp,ecx
  40c5a2:	sbb    ecx,DWORD PTR [ecx+0x3bd632f7]
  40c5a8:	jno    0x40c593
  40c5aa:	dec    ecx
  40c5ab:	mov    esi,DWORD PTR [ebx-0x75aaf97c]
  40c5b1:	(bad)  [ebx+eax*1+0x1a]
  40c5b5:	pop    edi
  40c5b6:	das    
  40c5b7:	test   al,0x39
  40c5b9:	sub    eax,0x408b312e
  40c5be:	mov    edi,DWORD PTR [ebp+0x1a]
  40c5c1:	sub    eax,0xa214ee0e
  40c5c6:	mov    ch,BYTE PTR ds:0x96ff61bf
  40c5cc:	inc    esp
  40c5cd:	sub    eax,0x444de6fd
  40c5d2:	fistp  DWORD PTR [ebx-0xd]
  40c5d5:	pushf  
  40c5d6:	push   ds
  40c5d7:	outs   dx,DWORD PTR ds:[esi]
  40c5d8:	es jae 0x40c5ca
  40c5db:	out    0xc9,eax
  40c5dd:	ret    0x233e
  40c5e0:	lea    edx,[eax]
  40c5e2:	call   0xd450214d
  40c5e7:	dec    edi
  40c5e8:	sub    eax,0xc6e02eab
  40c5ed:	je     0x40c575
  40c5ef:	dec    esi
  40c5f0:	mov    cl,0x54
  40c5f2:	inc    eax
  40c5f3:	jno    0x40c601
  40c5f5:	stos   BYTE PTR es:[edi],al
  40c5f6:	aaa    
  40c5f7:	jmp    0x40c5b1
  40c5f9:	and    eax,0x3d942eb1
  40c5fe:	xor    ebx,DWORD PTR [edx+edi*1-0x2e4ba733]
  40c605:	or     DWORD PTR [eax],ebp
  40c607:	xor    cl,ch
  40c609:	shl    BYTE PTR ds:0xfb3a5d7d,0x53
  40c610:	or     BYTE PTR [esi+0x725aa4ea],ah
  40c616:	adc    eax,0xa408b045
  40c61b:	pop    edx
  40c61c:	stc    
  40c61d:	test   BYTE PTR [edi+0x402547f9],dh
  40c623:	nop
  40c624:	outs   dx,DWORD PTR ds:[esi]
  40c625:	pop    edx
  40c626:	loope  0x40c5ee
  40c628:	mov    bl,BYTE PTR [edi]
  40c62a:	clc    
  40c62b:	cmp    BYTE PTR [esi-0x38dd5885],0x3
  40c632:	mov    dl,0xdb
  40c634:	cmp    DWORD PTR [ecx],ebx
  40c636:	fwait
  40c637:	das    
  40c638:	sar    BYTE PTR [eax-0x3b],1
  40c63b:	and    BYTE PTR [edx+edi*4-0x7640c3b2],dh
  40c642:	(bad)  
  40c643:	or     eax,0xa1ba59c6
  40c648:	test   BYTE PTR [eax],cl
  40c64a:	mov    ebx,0x53d1d7ad
  40c64f:	cmc    
  40c650:	or     al,0x8e
  40c652:	cs mov bh,0xd2
  40c655:	inc    edi
  40c656:	xchg   ecx,eax
  40c657:	inc    eax
  40c658:	sbb    BYTE PTR [edi+0x23a66d7c],0xaf
  40c65f:	mov    dl,BYTE PTR [ebx+ecx*4+0x49]
  40c663:	bnd ret 
  40c665:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c666:	test   DWORD PTR [esi-0x1],esi
  40c669:	test   BYTE PTR [ebx+0x12cbcedf],ch
  40c66f:	mov    dl,0x8
  40c671:	jecxz  0x40c6ac
  40c673:	inc    ebx
  40c674:	int    0xad
  40c676:	add    DWORD PTR [ecx-0x52],edx
  40c679:	lahf   
  40c67a:	shl    DWORD PTR [eax-0x3a],cl
  40c67d:	(bad)  
  40c67e:	and    ecx,DWORD PTR [eax]
  40c680:	push   ecx
  40c681:	or     eax,0xaca47f6d
  40c686:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c687:	iret   
  40c688:	loopne 0x40c64a
  40c68a:	(bad)  
  40c68c:	sbb    eax,0x2f8ac9a
  40c691:	xor    eax,0x5a453347
  40c696:	rcl    esp,cl
  40c698:	mov    DWORD PTR [ebp-0x15878002],edi
  40c69e:	xchg   ebx,eax
  40c69f:	call   FWORD PTR [esi-0x5e44419c]
  40c6a5:	or     BYTE PTR [eax+0x64],0x21
  40c6a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6aa:	xchg   ebp,eax
  40c6ab:	cs test dl,ah
  40c6ae:	or     BYTE PTR [esi+0x3f],bh
  40c6b1:	out    0xab,eax
  40c6b3:	mov    eax,DWORD PTR [eax]
  40c6b5:	outs   dx,BYTE PTR ds:[esi]
  40c6b6:	test   eax,0x9ac48184
  40c6bb:	nop
  40c6bc:	lahf   
  40c6bd:	inc    eax
  40c6be:	and    BYTE PTR [edx+0x270f9b02],0x46
  40c6c5:	push   ds
  40c6c6:	pop    ss
  40c6c7:	or     ebp,0xdcbdb43d
  40c6cd:	inc    ebp
  40c6ce:	cmp    cl,BYTE PTR [ebx+0x5a]
  40c6d1:	ret    0xc27e
  40c6d4:	add    al,BYTE PTR [edx+ebp*8+0x26]
  40c6d8:	sub    eax,0x99d10bc1
  40c6dd:	sub    al,0xd0
  40c6df:	ret    
  40c6e0:	(bad)  
  40c6e1:	(bad)  ds:0x93cc650d
  40c6e7:	fwait
  40c6e8:	add    esp,DWORD PTR [eax+0x483a2871]
  40c6ee:	(bad)  
  40c6ef:	cdq    
  40c6f0:	and    ebx,edx
  40c6f2:	xor    ah,dh
  40c6f4:	add    eax,0x6cf6171d
  40c6f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6fa:	push   0xe0f82a0d
  40c6ff:	push   esp
  40c700:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c701:	mov    edx,0xddcb5b22
  40c706:	retf   0x9003
  40c709:	dec    edx
  40c70a:	or     BYTE PTR [ebx],bl
  40c70c:	xchg   esi,eax
  40c70d:	push   edi
  40c70e:	les    edi,FWORD PTR [ebp+0x434b15fe]
  40c714:	std    
  40c715:	out    dx,al
  40c716:	add    DWORD PTR [edx],edx
  40c718:	and    al,BYTE PTR [edx+0x1e]
  40c71b:	sbb    al,0xd
  40c71d:	loop   0x40c701
  40c71f:	ret    0xdc0c
  40c722:	cld    
  40c723:	inc    esp
  40c724:	inc    edx
  40c725:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c726:	and    DWORD PTR [esi+0x1b14f77c],ebx
  40c72c:	cmp    BYTE PTR [ebx],ah
  40c72e:	xor    DWORD PTR [eax-0x6b6825e5],edi
  40c734:	xor    DWORD PTR [esi],edi
  40c736:	jle    0x40c79a
  40c738:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c739:	lea    ebp,ds:0xd807a3bd
  40c73f:	jg     0x40c7bb
  40c741:	jge    0x40c6cb
  40c743:	je     0x40c73a
  40c745:	out    dx,al
  40c746:	sbb    esp,ebp
  40c748:	jmp    0x40c7a5
  40c74a:	sbb    ebp,DWORD PTR [edi]
  40c74c:	repnz shl DWORD PTR [edi],0xa3
  40c750:	gs ja  0x40c7d0
  40c753:	jno    0x40c74f
  40c755:	mov    BYTE PTR [ebx+0x579a42ad],0xcf
  40c75c:	idiv   DWORD PTR ds:0xbb0fcd51
  40c762:	jge    0x40c762
  40c764:	mov    al,0xd7
  40c766:	push   ss
  40c767:	icebp  
  40c768:	jle    0x40c6f7
  40c76a:	xor    al,0x48
  40c76c:	cmp    BYTE PTR [edi],al
  40c76e:	and    al,0x8a
  40c770:	retf   
  40c771:	cmp    esp,DWORD PTR [esi+ebp*8-0x43]
  40c775:	lds    eax,FWORD PTR [eax+0x290bf246]
  40c77b:	sub    ch,bl
  40c77d:	je     0x40c768
  40c77f:	and    eax,0x1f955482
  40c784:	les    ecx,FWORD PTR [esi+0xbf4ad70]
  40c78a:	dec    esi
  40c78b:	fwait
  40c78c:	xchg   esi,eax
  40c78d:	lods   eax,DWORD PTR ds:[esi]
  40c78e:	jp     0x40c78e
  40c790:	arpl   WORD PTR [eax*2+0x1de74a8f],si
  40c797:	(bad)  
  40c798:	cmp    edx,DWORD PTR [esi-0xb]
  40c79b:	sar    BYTE PTR ds:0xc0cb057b,0xd3
  40c7a2:	aas    
  40c7a3:	fnstsw WORD PTR [ecx-0x7bd9c6f8]
  40c7a9:	pop    esi
  40c7aa:	call   0xf119:0x1c818493
  40c7b1:	iret   
  40c7b2:	cmp    eax,0x9985dbed
  40c7b7:	test   DWORD PTR [esi-0x64d1857c],ecx
  40c7bd:	mov    ebx,0xbf01e0d1
  40c7c2:	mov    al,0xb8
  40c7c4:	out    0x23,eax
  40c7c6:	dec    eax
  40c7c7:	add    DWORD PTR [esi],edi
  40c7c9:	lock dec ecx
  40c7cb:	jle    0x40c810
  40c7cd:	mov    es,WORD PTR [ecx+edx*2]
  40c7d0:	jle    0x40c765
  40c7d2:	push   eax
  40c7d3:	das    
  40c7d4:	bound  esi,QWORD PTR [esi+0x57]
  40c7d7:	mov    eax,0x6af39b61
  40c7dc:	sub    edx,DWORD PTR [edi+0x6f]
  40c7df:	cmp    al,BYTE PTR [edi-0x3]
  40c7e2:	cmp    al,0xc3
  40c7e4:	repz xor BYTE PTR [edi-0x60d44521],0x62
  40c7ec:	mul    DWORD PTR [ecx]
  40c7ee:	mov    ecx,0x843b27ba
  40c7f3:	lock adc DWORD PTR [esp+ebx*4-0x7578e69d],ebx
  40c7fb:	mov    dh,BYTE PTR [ecx]
  40c7fd:	leave  
  40c7fe:	hlt    
  40c7ff:	add    ch,BYTE PTR [ebx]
  40c801:	test   eax,0xc863a11d
  40c806:	icebp  
  40c807:	push   ds
  40c808:	mov    eax,ds:0x74b5fc4
  40c80d:	outs   dx,DWORD PTR ds:[esi]
  40c80e:	fstp   QWORD PTR [edi+esi*1+0x6]
  40c812:	sub    ecx,ecx
  40c814:	dec    ecx
  40c816:	std    
  40c817:	outs   dx,DWORD PTR ds:[esi]
  40c818:	add    eax,0xd7971e24
  40c81d:	cmp    esi,DWORD PTR [ebp+edx*8+0x7f]
  40c821:	mov    esi,cs
  40c823:	jl     0x40c7a5
  40c825:	xor    al,0x4e
  40c827:	and    edi,edx
  40c829:	repz push es
  40c82b:	test   eax,0x5a6d2cfe
  40c830:	adc    dl,cl
  40c832:	jge    0x40c8b1
  40c834:	shl    DWORD PTR [ecx-0x74],cl
  40c837:	sbb    ah,BYTE PTR [edx+0x2a00518a]
  40c83d:	mov    al,ds:0xd4143d0c
  40c842:	mov    ds,WORD PTR [ebx-0x4cd1e2ac]
  40c848:	dec    ebp
  40c849:	dec    esp
  40c84a:	fadd   QWORD PTR [esi]
  40c84c:	aad    0x67
  40c84e:	add    DWORD PTR [ecx-0x62],0x6f
  40c852:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c853:	shr    DWORD PTR [edx-0x37],cl
  40c856:	dec    ebp
  40c857:	mov    ecx,0x1642fb2a
  40c85c:	out    dx,eax
  40c85d:	pop    edi
  40c85e:	add    BYTE PTR [eax+edi*2-0x46],al
  40c862:	(bad)  
  40c863:	test   DWORD PTR [esi+ebp*2],ebp
  40c866:	sub    edx,DWORD PTR [eax-0x5c4aa68c]
  40c86c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c86d:	add    al,0x96
  40c86f:	xchg   esp,eax
  40c870:	lea    eax,[edi+0x2bb2575]
  40c876:	lds    ecx,FWORD PTR [edi-0x3b]
  40c879:	sub    BYTE PTR [ebp-0xa],al
  40c87c:	xchg   ebx,eax
  40c87d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c87e:	and    eax,0x54823724
  40c883:	xchg   edx,eax
  40c884:	xchg   DWORD PTR [ecx+0x5b],esi
  40c887:	push   ecx
  40c888:	jl     0x40c868
  40c88a:	aam    0xd7
  40c88c:	retf   0xc1b1
  40c88f:	dec    ecx
  40c890:	xchg   ecx,eax
  40c891:	popa   
  40c892:	addr16 inc eax
  40c894:	mov    edi,0x26443e29
  40c899:	push   ebx
  40c89a:	sbb    eax,esi
  40c89c:	pop    ecx
  40c89d:	gs fwait
  40c89f:	xchg   esp,eax
  40c8a0:	ins    DWORD PTR es:[edi],dx
  40c8a1:	jp     0x40c84a
  40c8a3:	in     al,0xe8
  40c8a5:	loop   0x40c873
  40c8a7:	cmp    edx,esi
  40c8a9:	stc    
  40c8aa:	adc    al,BYTE PTR [edx-0x7e]
  40c8ad:	cs jg  0x40c890
  40c8b0:	clc    
  40c8b1:	pcmpgtw mm3,mm7
  40c8b4:	lahf   
  40c8b5:	test   DWORD PTR [ecx],0xf9e366cd
  40c8bb:	dec    edi
  40c8bc:	fdiv   QWORD PTR [eax]
  40c8be:	popf   
  40c8bf:	and    eax,0x7e2e7ce2
  40c8c4:	cmp    edi,DWORD PTR [ecx]
  40c8c6:	pop    ecx
  40c8c7:	int    0xfc
  40c8c9:	cs (bad) 
  40c8cc:	inc    edx
  40c8cd:	inc    edi
  40c8ce:	pop    ebx
  40c8cf:	cli    
  40c8d0:	jo     0x40c8ad
  40c8d2:	rcr    DWORD PTR [eax+ebx*8],1
  40c8d5:	rol    DWORD PTR [ebx-0x34],0x12
  40c8d9:	(bad)  
  40c8da:	rcl    DWORD PTR [ebx],1
  40c8dc:	xchg   edx,eax
  40c8dd:	das    
  40c8de:	sub    eax,0xc0cd4268
  40c8e3:	and    al,bl
  40c8e5:	or     BYTE PTR [ebx],cl
  40c8e7:	fnsave [ebp+0x428ee1ec]
  40c8ed:	cwde   
  40c8ee:	sub    al,0xd6
  40c8f0:	dec    ecx
  40c8f1:	add    bl,BYTE PTR gs:[ecx]
  40c8f4:	bound  esi,QWORD PTR ds:0x93a8e11a
  40c8fa:	mov    ebp,ebx
  40c8fc:	outs   dx,BYTE PTR ds:[esi]
  40c8fd:	cmp    ebp,DWORD PTR [ebx+0x22c43fcc]
  40c903:	push   cs
  40c904:	bound  edx,QWORD PTR [ebp-0xc]
  40c907:	out    0xb9,al
  40c909:	cmp    DWORD PTR [edi-0x3a3e4fed],eax
  40c90f:	aad    0xf7
  40c911:	enter  0xa960,0x97
  40c915:	and    esp,ebx
  40c917:	or     eax,0x8f3d6e32
  40c91c:	pop    edi
  40c91d:	test   al,0x3a
  40c91f:	(bad)  
  40c920:	adc    al,0xbe
  40c922:	pop    edx
  40c923:	push   0x512bbe00
  40c928:	out    0xb5,eax
  40c92a:	jns    0x40c936
  40c92c:	in     al,0x8
  40c92e:	push   ecx
  40c92f:	cdq    
  40c930:	ds (bad) 
  40c932:	(bad)  
  40c934:	and    edi,DWORD PTR [edi]
  40c936:	int    0xe9
  40c938:	test   ebp,esp
  40c93a:	sbb    DWORD PTR [ecx+0x4b],esi
  40c93d:	cmp    eax,DWORD PTR [edi-0x39]
  40c940:	cmp    eax,0xc45a7f62
  40c945:	pop    esp
  40c946:	mov    edi,0x9e1e345
  40c94b:	pop    esp
  40c94c:	out    0xa9,al
  40c94e:	jle    0x40c9a9
  40c950:	sti    
  40c951:	test   DWORD PTR [ecx-0xf9b880d],edi
  40c957:	(bad)  
  40c958:	mov    eax,ebx
  40c95a:	loope  0x40c8e2
  40c95c:	retf   
  40c95d:	push   esi
  40c95e:	call   0x43d30dbd
  40c963:	(bad)  
  40c964:	cld    
  40c965:	jge    0x40c9e4
  40c967:	ja     0x40c9aa
  40c969:	ss push esp
  40c96b:	rcl    eax,cl
  40c96d:	ins    DWORD PTR es:[edi],dx
  40c96e:	inc    esp
  40c96f:	scas   eax,DWORD PTR es:[edi]
  40c970:	in     al,0xb8
  40c972:	outs   dx,DWORD PTR ds:[esi]
  40c973:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c974:	test   ch,al
  40c976:	sti    
  40c977:	mov    ds:0x11cf7e90,eax
  40c97c:	add    al,ch
  40c97e:	test   BYTE PTR [ebx],dh
  40c980:	daa    
  40c981:	add    BYTE PTR cs:0xf34c6890,0xf4
  40c989:	adc    BYTE PTR [ebp-0x3d],al
  40c98c:	bound  esp,QWORD PTR [ecx+0x5f]
  40c98f:	dec    ebp
  40c990:	in     eax,0xdf
  40c992:	dec    edi
  40c993:	adc    ecx,esp
  40c995:	shr    DWORD PTR [ebx+edx*1-0x564f61a4],1
  40c99c:	test   BYTE PTR [ebp-0x453970b1],al
  40c9a2:	in     eax,0x6f
  40c9a4:	pusha  
  40c9a5:	arpl   WORD PTR es:[esi+edx*2],bp
  40c9a9:	lahf   
  40c9aa:	mov    ch,ch
  40c9ac:	add    edx,0xffffffce
  40c9af:	dec    edx
  40c9b0:	push   edx
  40c9b1:	stos   BYTE PTR es:[edi],al
  40c9b2:	fstp   QWORD PTR [eax+0x3d]
  40c9b5:	cmp    edi,DWORD PTR [esi+ecx*4-0x67]
  40c9b9:	mov    DWORD PTR [edx],edx
  40c9bb:	loopne 0x40c9a1
  40c9bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9be:	dec    ecx
  40c9bf:	pop    edi
  40c9c0:	iret   
  40c9c1:	nop
  40c9c2:	push   ds
  40c9c3:	clc    
  40c9c4:	pop    ecx
  40c9c5:	hlt    
  40c9c6:	sub    edx,ecx
  40c9c8:	xchg   ebp,eax
  40c9c9:	clc    
  40c9ca:	(bad)  
  40c9cc:	push   DWORD PTR [ebx-0x1e]
  40c9cf:	jp     0x40c962
  40c9d1:	cdq    
  40c9d2:	adc    bh,bh
  40c9d4:	and    esp,DWORD PTR [ebx+edx*2-0x623b31d]
  40c9db:	jecxz  0x40c991
  40c9dd:	mov    edx,0xcf978eeb
  40c9e2:	adc    DWORD PTR ds:0xd50720c,0x5ec21390
  40c9ec:	jo     0x40ca33
  40c9ee:	mov    edx,DWORD PTR [esi]
  40c9f0:	cmp    al,BYTE PTR [ebx]
  40c9f2:	xchg   ebx,eax
  40c9f3:	arpl   ax,bx
  40c9f5:	or     al,0x0
  40c9f7:	mov    cl,BYTE PTR [eax-0x38]
  40c9fa:	fcomp  st(6)
  40c9fc:	mov    ecx,0xaae39293
  40ca01:	ret    0x9727
  40ca04:	bound  ebx,QWORD PTR ds:0xf860396d
  40ca0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca0b:	call   0x65e6fa3f
  40ca10:	ss js  0x40ca6f
  40ca13:	pushf  
  40ca14:	dec    edx
  40ca15:	pop    esi
  40ca16:	test   BYTE PTR cs:[esi-0x4b42fe6a],dh
  40ca1d:	ss daa 
  40ca1f:	inc    edi
  40ca20:	imul   edi,DWORD PTR [esi-0x7ddacb5e],0x5
  40ca27:	and    eax,esp
  40ca29:	ja     0x40c9fd
  40ca2b:	cmp    al,0x68
  40ca2e:	stc    
  40ca2f:	outs   dx,BYTE PTR ds:[esi]
  40ca30:	stc    
  40ca31:	push   edx
  40ca32:	dec    esi
  40ca33:	push   esi
  40ca34:	and    eax,0x9b98c671
  40ca39:	call   0x6edaf2e1
  40ca3e:	mov    eax,0x53aa1ead
  40ca43:	ficom  DWORD PTR [esi+esi*2-0x2e3d3a76]
  40ca4a:	fistp  DWORD PTR [ecx+esi*1+0x55]
  40ca4e:	jecxz  0x40cabd
  40ca50:	mov    bh,0x7d
  40ca52:	jl     0x40ca5a
  40ca54:	dec    esi
  40ca55:	std    
  40ca56:	cmp    al,0xe
  40ca58:	rcr    dh,cl
  40ca5a:	dec    ecx
  40ca5b:	mov    WORD PTR [edi],?
  40ca5d:	dec    ebp
  40ca5e:	jl     0x40cac9
  40ca60:	je     0x40cab6
  40ca62:	xor    BYTE PTR [ebp+0x32],dh
  40ca65:	jmp    0x33a66020
  40ca6a:	lock add esp,eax
  40ca6d:	(bad)  
  40ca6e:	in     al,dx
  40ca6f:	outs   dx,BYTE PTR ds:[esi]
  40ca70:	mov    dl,0xc3
  40ca72:	lea    esi,[eax]
  40ca74:	push   esi
  40ca75:	cmp    bh,BYTE PTR [edx+0x55]
  40ca78:	pslld  mm6,QWORD PTR [esp+eax*4]
  40ca7c:	leave  
  40ca7d:	sahf   
  40ca7e:	add    eax,DWORD PTR [ebp-0x38]
  40ca81:	sahf   
  40ca82:	rcr    DWORD PTR [esp+esi*1],cl
  40ca85:	mov    eax,0x263a170
  40ca8a:	or     esp,ecx
  40ca8c:	mov    ch,0xc6
  40ca8e:	sub    eax,0x2bc176a6
  40ca93:	test   eax,0xed38fe52
  40ca98:	lock in eax,0x7
  40ca9b:	adc    DWORD PTR [eax+0x1d],ebx
  40ca9e:	mov    ebx,0xe369ae4
  40caa3:	jno    0x40ca56
  40caa5:	xor    eax,0xc16f2e57
  40caaa:	mov    edi,0x52a87ce4
  40caaf:	neg    eax
  40cab1:	pusha  
  40cab2:	mov    DWORD PTR ss:[esi],esi
  40cab5:	arpl   bp,si
  40cab7:	bound  ebx,QWORD PTR ds:0x3543de99
  40cabd:	ja     0x40ca58
  40cabf:	outs   dx,DWORD PTR ds:[esi]
  40cac0:	je     0x40ca5b
  40cac2:	and    eax,0x26f06c91
  40cac7:	mov    cl,0xbf
  40cac9:	(bad)  
  40cacb:	inc    edi
  40cacc:	jne    0x40cacc
  40cace:	in     al,0x46
  40cad0:	stos   DWORD PTR es:[edi],eax
  40cad1:	fcom   QWORD PTR [edi-0x183bb205]
  40cad7:	gs sbb esi,ebp
  40cada:	lea    eax,[esi]
  40cadc:	push   ebx
  40cadd:	out    dx,al
  40cade:	iret   
  40cadf:	pop    ecx
  40cae0:	popf   
  40cae1:	sub    al,0xe0
  40cae3:	inc    ebp
  40cae4:	jecxz  0x40cb25
  40cae6:	inc    edx
  40cae7:	mov    esp,0x6afbb89a
  40caec:	adc    ebp,ebp
  40caee:	in     al,dx
  40caef:	mov    ds:0x3be9c527,eax
  40caf4:	hlt    
  40caf5:	sahf   
  40caf6:	jmp    0x9cb577f6
  40cafb:	and    eax,0x62677802
  40cb00:	mov    DWORD PTR [ebp-0xe],edx
  40cb03:	inc    esi
  40cb04:	jno    0x40cac1
  40cb06:	or     al,0xc6
  40cb08:	addr16 fsubr st,st(2)
  40cb0b:	pop    ds
  40cb0c:	in     al,0xab
  40cb0e:	loopne 0x40cabe
  40cb10:	dec    edx
  40cb11:	jns    0x40cb88
  40cb13:	mov    WORD PTR [edi],ss
  40cb15:	sub    al,0x3f
  40cb17:	imul   ebp,DWORD PTR [ecx],0x681d82ab
  40cb1d:	lods   al,BYTE PTR ds:[esi]
  40cb1e:	and    esi,DWORD PTR [eax+ecx*8]
  40cb21:	mov    edx,0xfea6ac6a
  40cb26:	(bad)  
  40cb27:	test   al,0xe6
  40cb29:	adc    al,0x45
  40cb2b:	inc    edx
  40cb2c:	loop   0x40caf7
  40cb2e:	imul   ebp,DWORD PTR [ebx+0x75eaf41f],0xffffffbd
  40cb35:	aaa    
  40cb36:	cmp    ecx,edi
  40cb38:	inc    edi
  40cb39:	daa    
  40cb3a:	and    eax,0xec4a4f9e
  40cb3f:	pop    ebp
  40cb40:	imul   ebp,esi,0xc3df39be
  40cb46:	nop
  40cb47:	popf   
  40cb48:	mov    ebx,0x629b9c68
  40cb4d:	das    
  40cb4e:	pop    esi
  40cb4f:	jle    0x40cb51
  40cb51:	fdiv   QWORD PTR [ecx-0x28]
  40cb54:	dec    esi
  40cb55:	or     ch,dl
  40cb57:	xor    al,0x69
  40cb59:	mov    eax,ds:0xbb64cde3
  40cb5e:	ins    BYTE PTR es:[edi],dx
  40cb5f:	xlat   BYTE PTR ds:[ebx]
  40cb60:	fst    DWORD PTR [eax]
  40cb62:	data16 jp 0x40cbc8
  40cb65:	das    
  40cb66:	nop
  40cb67:	enter  0x9f1d,0x6d
  40cb6b:	lock out dx,al
  40cb6d:	cmp    dh,BYTE PTR [ecx-0x5a]
  40cb70:	jp     0x40cbac
  40cb72:	pop    esp
  40cb73:	inc    ecx
  40cb74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb75:	test   eax,0xd1053666
  40cb7a:	(bad)  
  40cb7c:	out    dx,eax
  40cb7d:	xor    edx,DWORD PTR [esi-0x224b07b3]
  40cb83:	mov    ebp,0x13349274
  40cb88:	mov    ebx,0xe8c18bc7
  40cb8d:	fld    QWORD PTR [esi+0x78]
  40cb90:	xchg   ebp,eax
  40cb91:	mov    eax,ds:0xa4cbcd11
  40cb96:	in     al,0x3e
  40cb98:	cli    
  40cb99:	out    0x9e,eax
  40cb9b:	xchg   esi,eax
  40cb9c:	mov    bh,0xa0
  40cb9e:	lahf   
  40cb9f:	loop   0x40cb3c
  40cba1:	jmp    0xc789:0x967e1437
  40cba8:	sbb    eax,0x803c69f7
  40cbad:	or     BYTE PTR [ecx],al
  40cbaf:	cmp    al,0xb1
  40cbb1:	int    0xbc
  40cbb3:	push   esi
  40cbb4:	jmp    0x782f:0xc63088bc
  40cbbb:	in     eax,0xb3
  40cbbd:	or     DWORD PTR [eax],ebx
  40cbbf:	(bad)  
  40cbc0:	cmp    dh,al
  40cbc2:	and    ebx,0xe748ccd6
  40cbc8:	das    
  40cbc9:	inc    edi
  40cbca:	sub    eax,0x85845d31
  40cbcf:	pop    ebx
  40cbd0:	gs aad 0x6e
  40cbd3:	push   edi
  40cbd4:	xchg   cl,ch
  40cbd6:	sbb    ch,BYTE PTR [eax*2-0x65a63812]
  40cbdd:	xor    esp,0x3902ebee
  40cbe3:	push   ds
  40cbe4:	pop    ebp
  40cbe5:	inc    edx
  40cbe6:	lods   eax,DWORD PTR ds:[esi]
  40cbe7:	add    BYTE PTR [ecx-0x4],bl
  40cbea:	mov    dl,BYTE PTR ss:[eax]
  40cbed:	mov    al,0xde
  40cbef:	xchg   BYTE PTR [eax-0x23],bl
  40cbf2:	test   edi,edi
  40cbf4:	ret    
  40cbf5:	jbe    0x40cc44
  40cbf7:	sbb    DWORD PTR [edx-0x65],0xa6409767
  40cbfe:	daa    
  40cbff:	xchg   ebp,eax
  40cc00:	and    al,0x9c
  40cc02:	adc    al,0x32
  40cc04:	mov    cl,0xe6
  40cc06:	or     BYTE PTR [ebx],dl
  40cc08:	sub    eax,0x99a398cf
  40cc0d:	fisubr WORD PTR [eax+0x42805e37]
  40cc13:	xchg   ebp,eax
  40cc14:	mov    ebp,0xb51ad0e
  40cc19:	lods   al,BYTE PTR ds:[esi]
  40cc1a:	mov    ebx,DWORD PTR [edi]
  40cc1c:	dec    ebx
  40cc1d:	sub    BYTE PTR [ebx-0x42f81014],ch
  40cc23:	jns    0x40cc99
  40cc25:	fsubr  st(5),st
  40cc27:	jge    0x40cbc4
  40cc29:	mov    ds:0x150c3ec6,al
  40cc2e:	pop    ecx
  40cc2f:	daa    
  40cc30:	mov    edx,0x71a5edbb
  40cc35:	adc    al,0x41
  40cc37:	mov    cl,BYTE PTR [eax]
  40cc39:	push   edx
  40cc3a:	mov    BYTE PTR [ebx],dl
  40cc3c:	sub    al,0xb1
  40cc3e:	xchg   ebx,eax
  40cc3f:	in     al,0x2e
  40cc41:	das    
  40cc42:	sti    
  40cc43:	outs   dx,DWORD PTR ds:[esi]
  40cc44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc45:	sbb    DWORD PTR [ebx-0x45],edi
  40cc48:	mov    ebp,0x9ec9060a
  40cc4d:	repnz cmc 
  40cc4f:	xor    al,0xef
  40cc51:	xor    al,cl
  40cc53:	or     edi,DWORD PTR [ebp+0x1f]
  40cc56:	jp     0x40cbde
  40cc58:	push   esp
  40cc59:	push   ds
  40cc5a:	out    0x3a,al
  40cc5c:	(bad)  
  40cc5d:	hlt    
  40cc5e:	call   FWORD PTR [ecx+0x59]
  40cc61:	out    dx,eax
  40cc62:	add    cl,cl
  40cc64:	cmp    bh,BYTE PTR [edx]
  40cc66:	pop    esi
  40cc67:	fbstp  TBYTE PTR [esi-0x71dd4c12]
  40cc6d:	dec    ecx
  40cc6e:	enter  0xeb21,0x64
  40cc72:	imul   ebx,DWORD PTR [ebx-0x5c],0xffffffa7
  40cc76:	add    ch,bl
  40cc78:	std    
  40cc79:	adc    eax,0xe0555731
  40cc7e:	mov    bl,dh
  40cc80:	call   0xc8192f70
  40cc85:	sbb    dl,BYTE PTR [edi+0x8]
  40cc88:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40cc8a:	and    DWORD PTR [edx+edx*8+0x7e],esi
  40cc8e:	cmp    BYTE PTR [ebx],0xfc
  40cc91:	mov    edi,0x2090f99e
  40cc96:	adc    al,BYTE PTR [ecx]
  40cc98:	shl    BYTE PTR [ebp+0x4b],1
  40cc9b:	js     0x40cc81
  40cc9d:	fwait
  40cc9e:	pop    ebp
  40cc9f:	jns    0x40cc48
  40cca1:	lock stc 
  40cca3:	popf   
  40cca4:	sub    eax,0x4df2ae00
  40cca9:	xor    ebp,ecx
  40ccab:	cld    
  40ccac:	into   
  40ccad:	clc    
  40ccae:	push   edi
  40ccaf:	pop    ecx
  40ccb0:	xchg   ebp,eax
  40ccb1:	pop    eax
  40ccb2:	inc    eax
  40ccb3:	cmp    ebp,esi
  40ccb5:	js     0x40cc70
  40ccb7:	shld   DWORD PTR [ecx],esi,0xe8
  40ccbb:	mov    bl,0x30
  40ccbd:	pop    edi
  40ccbe:	cwde   
  40ccbf:	retf   
  40ccc0:	scas   al,BYTE PTR es:[edi]
  40ccc1:	push   0xffffff84
  40ccc3:	xlat   BYTE PTR ds:[ebx]
  40ccc4:	scas   eax,DWORD PTR es:[edi]
  40ccc5:	pop    ebx
  40ccc6:	es jo  0x40cd1b
  40ccc9:	dec    ecx
  40ccca:	jbe    0x40cc7d
  40cccc:	paddusb mm6,QWORD PTR [ebp+0x79a72da9]
  40ccd3:	mov    dl,BYTE PTR [eax+0x27604d53]
  40ccd9:	(bad)  
  40ccda:	aaa    
  40ccdb:	loope  0x40cc88
  40ccdd:	aaa    
  40ccde:	test   BYTE PTR [edx],bh
  40cce0:	call   0x3a050bb1
  40cce5:	pop    ebx
  40cce6:	call   0x9c72:0x33c6cb5c
  40cced:	push   esp
  40ccee:	loope  0x40cc92
  40ccf0:	mov    edx,0x3f9ce576
  40ccf5:	mov    WORD PTR [edx],ss
  40ccf7:	pop    ss
  40ccf8:	call   0xb41f2804
  40ccfd:	mov    cl,0x51
  40ccff:	icebp  
  40cd00:	add    al,0x35
  40cd02:	xchg   edx,eax
  40cd03:	ins    DWORD PTR es:[edi],dx
  40cd04:	mov    edx,0xe9cc452b
  40cd09:	xlat   BYTE PTR ds:[ebx]
  40cd0a:	sbb    al,0xa1
  40cd0c:	test   ebp,0xd66dcc7c
  40cd12:	loop   0x40ccc6
  40cd14:	jg     0x40cd20
  40cd16:	gs xor edx,0x2179abc4
  40cd1d:	lds    esp,FWORD PTR [eax]
  40cd1f:	fistp  WORD PTR [ebp-0x757b58c1]
  40cd25:	sub    DWORD PTR [ecx+0xb],edx
  40cd28:	pop    es
  40cd29:	mov    edx,0xeb375072
  40cd2e:	scas   eax,DWORD PTR es:[edi]
  40cd2f:	xor    ch,cl
  40cd31:	int    0x42
  40cd33:	adc    al,0x64
  40cd35:	xor    al,0xf1
  40cd37:	sti    
  40cd38:	mov    esi,0xc41f7383
  40cd3d:	add    ecx,DWORD PTR [edi]
  40cd3f:	push   ds
  40cd40:	inc    edi
  40cd41:	add    DWORD PTR [esi+0x1c],esp
  40cd44:	sub    al,0x44
  40cd46:	jp     0x40cd04
  40cd48:	sahf   
  40cd49:	sub    eax,0xe0fbcb86
  40cd4e:	aaa    
  40cd4f:	fstp   QWORD PTR [edx+0x8]
  40cd52:	inc    eax
  40cd53:	ror    DWORD PTR [ecx],1
  40cd55:	sub    al,0x8d
  40cd57:	shr    BYTE PTR [edx-0x28d37865],cl
  40cd5d:	jo     0x40cd6b
  40cd5f:	dec    ecx
  40cd60:	leave  
  40cd61:	push   ecx
  40cd62:	(bad)  
  40cd63:	outs   dx,BYTE PTR ds:[esi]
  40cd64:	fsub   QWORD PTR ds:0xa9a542e
  40cd6a:	pop    ebx
  40cd6b:	lea    edx,[edi]
  40cd6d:	cmp    al,bl
  40cd6f:	fst    DWORD PTR [eax]
  40cd71:	(bad)  
  40cd73:	push   ds
  40cd74:	cdq    
  40cd75:	loopne 0x40cdbd
  40cd77:	mov    dl,0xf2
  40cd79:	adc    DWORD PTR [esi-0x56ecf040],esi
  40cd7f:	or     al,0xf2
  40cd81:	iret   
  40cd82:	inc    ebp
  40cd83:	out    dx,eax
  40cd84:	xor    BYTE PTR [eax+0x3],0x9f
  40cd88:	dec    ebx
  40cd89:	imul   ecx,esp,0xffffff84
  40cd8c:	sub    BYTE PTR [ebp+0x73f8ff7a],al
  40cd92:	and    eax,0x6b4b82e5
  40cd97:	and    DWORD PTR [esi+0x69],esp
  40cd9a:	fnstsw WORD PTR [esi]
  40cd9c:	addr16 loopne 0x40cd70
  40cd9f:	pop    ebx
  40cda0:	sbb    al,0x87
  40cda2:	xor    DWORD PTR [ebx+0x28f7c76d],ebx
  40cda8:	mov    ds:0x2881120b,eax
  40cdad:	push   0xffffffcd
  40cdaf:	adc    ah,BYTE PTR [edi+0x74]
  40cdb2:	xor    ah,BYTE PTR [ecx]
  40cdb4:	or     al,0x39
  40cdb6:	cld    
  40cdb7:	imul   esi,edi,0x12
  40cdba:	inc    esp
  40cdbb:	jmp    0x40ce0c
  40cdbd:	xor    cl,BYTE PTR [edx+0x6fdae6a3]
  40cdc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cdc4:	sub    ecx,ebp
  40cdc6:	add    DWORD PTR [edx-0x47063b89],ecx
  40cdcc:	enter  0xd7f7,0x68
  40cdd0:	cld    
  40cdd1:	xchg   eax,ebx
  40cdd3:	sub    bh,cl
  40cdd5:	pop    edx
  40cdd6:	xchg   ebp,eax
  40cdd7:	mov    WORD PTR [esi+eiz*2+0x46a958ca],fs
  40cdde:	(bad)  [edx-0x66eb4785]
  40cde4:	shl    DWORD PTR [eax+0x15],1
  40cde7:	xor    ebx,ebp
  40cde9:	scas   eax,DWORD PTR es:[edi]
  40cdea:	sbb    BYTE PTR [edx],0x3f
  40cded:	out    0xc3,al
  40cdef:	out    dx,al
  40cdf0:	mov    ds,WORD PTR [ecx+0x16]
  40cdf3:	jl     0x40cdbf
  40cdf5:	dec    edx
  40cdf6:	push   0x54942505
  40cdfb:	mov    al,ds:0x10dcbed6
  40ce00:	in     al,dx
  40ce01:	jl     0x40cde1
  40ce03:	pop    ss
  40ce04:	scas   eax,DWORD PTR es:[edi]
  40ce05:	pop    ebp
  40ce06:	push   ecx
  40ce07:	fdiv   DWORD PTR [eax]
  40ce09:	adc    ebp,esi
  40ce0b:	ss mov edx,DWORD PTR fs:[esi+0x47]
  40ce10:	pop    edx
  40ce11:	sbb    ch,dh
  40ce13:	push   edx
  40ce14:	popa   
  40ce15:	add    eax,0x8ff0e0a5
  40ce1a:	xchg   ah,bl
  40ce1c:	imul   edi
  40ce1e:	inc    edi
  40ce1f:	pop    DWORD PTR [ebx-0x69187fe4]
  40ce25:	rcl    ch,1
  40ce27:	mov    ds:0xba46dfe4,al
  40ce2c:	lods   al,BYTE PTR ds:[esi]
  40ce2d:	aaa    
  40ce2e:	push   0xb4fb6bab
  40ce33:	ins    BYTE PTR es:[edi],dx
  40ce34:	rol    ah,0xdf
  40ce37:	aas    
  40ce38:	lahf   
  40ce39:	stc    
  40ce3a:	loop   0x40ce5f
  40ce3c:	xor    DWORD PTR [ebp-0x28971cdd],edx
  40ce42:	rcl    DWORD PTR [edx-0xf],0x43
  40ce46:	mov    al,0xa
  40ce48:	push   cs
  40ce49:	pop    eax
  40ce4a:	addr16 xor edx,edi
  40ce4d:	add    ebp,ecx
  40ce4f:	(bad)  
  40ce50:	mov    ch,0xa4
  40ce52:	popf   
  40ce53:	loopne 0x40ce56
  40ce55:	pop    ebp
  40ce56:	shr    BYTE PTR [ebp+0x1a],1
  40ce59:	and    al,0xad
  40ce5b:	inc    esp
  40ce5c:	pushf  
  40ce5d:	xor    ecx,DWORD PTR [ebx*1+0x7bc9cb38]
  40ce64:	dec    edi
  40ce65:	mov    cl,0x9a
  40ce67:	xor    al,0x21
  40ce69:	pop    edi
  40ce6a:	and    eax,0xba9ee433
  40ce6f:	adc    bh,BYTE PTR [ebx-0x4c]
  40ce72:	sbb    DWORD PTR [edi+0x6],ecx
  40ce75:	in     eax,dx
  40ce76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce77:	aam    0x9a
  40ce79:	mov    dl,0x7e
  40ce7b:	imul   DWORD PTR [ebp+0x78]
  40ce7e:	sub    BYTE PTR [ebx+0x3d],ah
  40ce81:	or     bh,bl
  40ce83:	stc    
  40ce84:	inc    esi
  40ce85:	mov    ah,bh
  40ce87:	mov    cl,0x4
  40ce89:	lds    ebx,FWORD PTR [ecx+esi*4+0x49ad1920]
  40ce90:	lods   al,BYTE PTR ds:[esi]
  40ce91:	jmp    0xd0b3acfd
  40ce96:	sahf   
  40ce97:	jmp    0x40ce45
  40ce99:	push   ebx
  40ce9a:	sbb    BYTE PTR [eax+0x7a],dh
  40ce9d:	out    0xe0,al
  40ce9f:	retf   
  40cea0:	cwde   
  40cea1:	mov    ch,al
  40cea3:	mov    cl,BYTE PTR [eax+0x45]
  40cea6:	jb     0x40cece
  40cea8:	jp     0x40cec1
  40ceaa:	outs   dx,DWORD PTR ds:[esi]
  40ceab:	ret    0xbbbf
  40ceae:	outs   dx,DWORD PTR ds:[esi]
  40ceaf:	mov    eax,0x95055f2a
  40ceb4:	sub    BYTE PTR [ecx],0x4d
  40ceb7:	loop   0x40cf1e
  40ceb9:	inc    esp
  40ceba:	in     al,dx
  40cebb:	shl    bh,0x95
  40cebe:	ja     0x40cea6
  40cec0:	fwait
  40cec1:	mov    ecx,DWORD PTR [esi+0x23e5005e]
  40cec7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cec8:	xchg   ebx,eax
  40cec9:	dec    esi
  40ceca:	xchg   esi,eax
  40cecb:	jb     0x40ced1
  40cecd:	xchg   DWORD PTR [ecx+0x1c18d3fb],ebx
  40ced3:	push   esp
  40ced4:	call   0xc04010d7
  40ced9:	mov    esp,0x9e89e982
  40cede:	test   dl,bh
  40cee0:	jp     0x40cebd
  40cee2:	and    edx,ecx
  40cee4:	mov    al,0x8b
  40cee6:	out    dx,al
  40cee7:	cmp    ah,dl
  40cee9:	stos   BYTE PTR es:[edi],al
  40ceea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ceeb:	add    dl,BYTE PTR [ecx]
  40ceed:	fsubr  st,st(0)
  40ceef:	mov    ebx,0xc9ddb821
  40cef4:	add    al,BYTE PTR [esp+ebp*2+0x6e]
  40cef8:	lds    ecx,FWORD PTR [ebx+0x51a75ff9]
  40cefe:	lods   al,BYTE PTR ds:[esi]
  40ceff:	cmp    dh,cl
  40cf01:	jl     0x40cf80
  40cf03:	int3   
  40cf04:	mov    eax,0x24f690fd
  40cf09:	xor    al,0x1b
  40cf0b:	mov    esi,0x3349114a
  40cf10:	mov    DWORD PTR [eax],edx
  40cf12:	hlt    
  40cf13:	popf   
  40cf14:	jne    0x40cf45
  40cf16:	xchg   esi,eax
  40cf17:	enter  0x27f4,0xba
  40cf1b:	mov    edx,0x6e56589c
  40cf20:	out    dx,al
  40cf21:	inc    esp
  40cf22:	retf   
  40cf23:	inc    edx
  40cf24:	inc    edi
  40cf25:	gs push 0x2c
  40cf28:	les    edi,FWORD PTR [esi]
  40cf2a:	jl     0x40cf66
  40cf2c:	outs   dx,DWORD PTR ds:[esi]
  40cf2d:	jl     0x40cf29
  40cf2f:	inc    eax
  40cf30:	push   edx
  40cf31:	xor    eax,0x19d3019
  40cf36:	mov    edx,0x127d0e58
  40cf3b:	push   ecx
  40cf3c:	out    0x2d,al
  40cf3e:	arpl   ax,cx
  40cf40:	push   0xf5090cf7
  40cf45:	stos   DWORD PTR es:[edi],eax
  40cf46:	in     eax,dx
  40cf47:	dec    eax
  40cf48:	icebp  
  40cf49:	cld    
  40cf4a:	dec    esp
  40cf4b:	cld    
  40cf4c:	push   0xffffffe0
  40cf4e:	jnp    0x40cf1e
  40cf50:	fwait
  40cf51:	mov    BYTE PTR [edx],bl
  40cf53:	fnstenv [ecx+0x26e2e9a4]
  40cf59:	cs or  al,0xae
  40cf5c:	jae    0x40cf95
  40cf5e:	out    dx,al
  40cf5f:	mov    dh,0x81
  40cf61:	mov    ch,0xb7
  40cf63:	dec    ebx
  40cf64:	jne    0x40cf35
  40cf66:	or     ch,BYTE PTR [ecx+esi*1-0x3011ad9c]
  40cf6d:	imul   esi,esp,0x4a5ec0b4
  40cf73:	sbb    BYTE PTR [ecx],ah
  40cf75:	jno    0x40cf02
  40cf77:	(bad)
  40cf7a:	retf   0x4e0
  40cf7d:	test   DWORD PTR [esi-0x4648d8df],0x2bd6eecb
  40cf87:	fstp   TBYTE PTR [eax+0x14786b6b]
  40cf8d:	ss cmp eax,0xba95115b
  40cf93:	in     eax,dx
  40cf94:	(bad)  
  40cf95:	retf   
  40cf96:	adc    bh,ah
  40cf98:	inc    ecx
  40cf99:	cmp    edx,DWORD PTR [esi+0x232225af]
  40cf9f:	jo     0x40cf84
  40cfa1:	mov    bh,BYTE PTR [esi+0x43]
  40cfa4:	pop    esp
  40cfa5:	data16 fs fs int3 
  40cfa9:	test   BYTE PTR [edi],ch
  40cfab:	not    DWORD PTR [esi+0x28fb79b]
  40cfb1:	xlat   BYTE PTR ds:[ebx]
  40cfb2:	jecxz  0x40cf8b
  40cfb4:	rcl    BYTE PTR [ebp-0x25bdea2d],cl
  40cfba:	iret   
  40cfbb:	sub    edx,DWORD PTR [edi-0x12b70224]
  40cfc1:	cmp    DWORD PTR [ecx+0x68],esi
  40cfc4:	in     eax,dx
  40cfc5:	cmp    eax,0x89bcf57d
  40cfca:	outs   dx,BYTE PTR ds:[esi]
  40cfcb:	pop    ebx
  40cfcc:	out    0xdf,al
  40cfce:	cmp    BYTE PTR [ebp+0x6],0xb8
  40cfd2:	in     al,dx
  40cfd3:	mov    dh,0xea
  40cfd5:	jb     0x40cfc1
  40cfd7:	enter  0x4986,0xbf
  40cfdb:	in     eax,dx
  40cfdc:	cdq    
  40cfdd:	pop    ecx
  40cfde:	enter  0xdf1d,0x8f
  40cfe2:	enter  0x6a51,0x5f
  40cfe6:	xchg   ebx,eax
  40cfe7:	rcl    BYTE PTR [ecx],cl
  40cfe9:	je     0x40cfd7
  40cfeb:	jle    0x40cfa0
  40cfed:	test   eax,0x776c5d8b
  40cff2:	jecxz  0x40cf83
  40cff4:	hlt    
  40cff5:	(bad)  
  40cff6:	iret   
  40cff7:	mov    ebx,ss
  40cff9:	adc    BYTE PTR [esi+esi*1-0x47],cl
  40cffd:	xchg   ebx,eax
  40cffe:	xor    eax,0xb07c824
  40d003:	mov    WORD PTR [edx-0xc],fs
  40d006:	dec    esi
  40d007:	arpl   WORD PTR [eax-0x70],sp
  40d00a:	mov    bl,0x32
  40d00c:	(bad)  [ecx+0x711f226f]
  40d012:	(bad)  
  40d013:	(bad)  
  40d014:	iret   
  40d015:	imul   eax,DWORD PTR [esp+edi*4-0xb67f656],0xfffffffd
  40d01d:	inc    ebp
  40d01e:	pusha  
  40d01f:	inc    ebx
  40d020:	sar    DWORD PTR [edi],0xa7
  40d023:	pushf  
  40d024:	xchg   edi,eax
  40d025:	inc    eax
  40d026:	xchg   edi,eax
  40d027:	or     ah,BYTE PTR [edi+0x39572bd2]
  40d02d:	aam    0x7d
  40d02f:	popa   
  40d030:	js     0x40d06f
  40d032:	pop    ds
  40d033:	test   al,0x33
  40d035:	scas   eax,DWORD PTR es:[edi]
  40d036:	out    dx,eax
  40d037:	inc    ebp
  40d038:	mov    eax,DWORD PTR ds:0x77a9822b
  40d03e:	push   0xffffff9a
  40d040:	ficomp WORD PTR [ebp-0x7ea0a9fc]
  40d046:	xchg   ebp,eax
  40d047:	inc    ebp
  40d048:	cmp    ebx,DWORD PTR [ecx]
  40d04a:	cmp    ch,dl
  40d04c:	fsub   DWORD PTR [edx-0x63d135f4]
  40d052:	in     al,dx
  40d053:	mov    WORD PTR [edx-0xd8d419a],?
  40d059:	mov    edi,0x9a6bbda9
  40d05e:	add    DWORD PTR [ecx+0x3e6e486],esp
  40d064:	sub    cl,bl
  40d066:	retf   
  40d067:	fsubr  st,st(2)
  40d069:	xor    bl,BYTE PTR ds:[edx-0x65302125]
  40d070:	not    ah
  40d072:	shl    esp,0x6c
  40d075:	or     eax,0x67dd2d33
  40d07a:	rcr    bx,1
  40d07d:	fcomp  st(1)
  40d07f:	jnp    0x40d026
  40d081:	mov    bh,0x7b
  40d083:	jae    0x40d0f5
  40d085:	lods   eax,DWORD PTR ds:[esi]
  40d086:	or     BYTE PTR [ebp+ebx*8+0x77],bl
  40d08a:	adc    ch,BYTE PTR [edx-0x52]
  40d08d:	or     edi,DWORD PTR [edx]
  40d08f:	(bad)  
  40d090:	and    eax,DWORD PTR [eax]
  40d092:	push   ebp
  40d093:	jmp    0x5af:0x7e0f51de
  40d09a:	rcr    DWORD PTR [ecx],1
  40d09c:	pop    edi
  40d09d:	sbb    DWORD PTR [esi-0x6a],eax
  40d0a0:	leave  
  40d0a1:	mov    edi,0x27fe4949
  40d0a6:	(bad)  
  40d0a7:	call   esp
  40d0a9:	pushf  
  40d0aa:	jle    0x40d039
  40d0ac:	fisub  DWORD PTR [edi+0x53]
  40d0af:	mov    edx,0xeac3c775
  40d0b4:	add    eax,0xcdd64976
  40d0b9:	cmp    ebx,DWORD PTR [esi+0x250cb5d5]
  40d0bf:	mov    bh,BYTE PTR [esi]
  40d0c1:	fdivr  st,st(6)
  40d0c3:	lods   eax,DWORD PTR ds:[esi]
  40d0c4:	xor    DWORD PTR [eax+0x27],esp
  40d0c7:	or     DWORD PTR [ebx+0x5f904556],eax
  40d0cd:	fwait
  40d0ce:	jne    0x40d090
  40d0d0:	test   BYTE PTR [ebx],bl
  40d0d2:	jle    0x40d074
  40d0d4:	pushf  
  40d0d5:	xchg   ecx,eax
  40d0d7:	int3   
  40d0d8:	xor    esp,eax
  40d0da:	fwait
  40d0db:	test   BYTE PTR [edi],dh
  40d0dd:	sub    edi,0xcc1c4b
  40d0e3:	xchg   ebx,eax
  40d0e4:	push   0xb78f42ca
  40d0e9:	hlt    
  40d0ea:	pop    es
  40d0eb:	ret    0x40f4
  40d0ee:	(bad)  
  40d0ef:	call   0xb492:0x98d4ffd8
  40d0f6:	pop    es
  40d0f7:	pop    eax
  40d0f8:	or     DWORD PTR [ecx],edx
  40d0fa:	push   eax
  40d0fb:	nop
  40d0fc:	je     0x40d129
  40d0fe:	ins    BYTE PTR es:[edi],dx
  40d0ff:	sbb    DWORD PTR [esp+ecx*1],edx
  40d102:	inc    ebp
  40d103:	ret    0x4bc5
  40d106:	(bad)  
  40d107:	or     esp,DWORD PTR [ebp+0x45320ec]
  40d10d:	xchg   ebp,eax
  40d10e:	mov    bl,0xfd
  40d110:	xchg   esi,eax
  40d111:	ds and al,0xd5
  40d114:	ret    
  40d115:	out    0x1d,eax
  40d117:	aad    0x21
  40d119:	pop    ss
  40d11a:	pop    edi
  40d11b:	pop    eax
  40d11c:	inc    ecx
  40d11d:	sahf   
  40d11e:	push   cs
  40d11f:	stos   BYTE PTR es:[edi],al
  40d120:	inc    ebx
  40d121:	repnz sbb DWORD PTR [edi],ebx
  40d124:	lods   al,BYTE PTR ds:[esi]
  40d125:	out    dx,eax
  40d126:	popa   
  40d127:	inc    esp
  40d128:	mov    fs,WORD PTR [edi-0x352768dc]
  40d12e:	fimul  WORD PTR [eax+0x4d]
  40d131:	ror    DWORD PTR [edx+0x10121b44],cl
  40d137:	adc    al,0xbd
  40d139:	mov    esi,0xef7b5b25
  40d13e:	in     eax,dx
  40d13f:	test   al,0x6e
  40d141:	jmp    0x654927f9
  40d146:	lock pop ebp
  40d148:	mov    ebp,DWORD PTR [ecx]
  40d14a:	pop    ds
  40d14b:	pop    eax
  40d14c:	repz rol DWORD PTR [ecx],1
  40d14f:	sbb    ebp,ebx
  40d151:	pushf  
  40d152:	add    al,0x82
  40d154:	add    ecx,DWORD PTR [edi+eax*2+0x57ba5e81]
  40d15b:	add    eax,0xe74441c0
  40d160:	dec    ebx
  40d161:	dec    ecx
  40d162:	xor    esi,ebp
  40d164:	repnz xchg esi,eax
  40d166:	sub    ah,BYTE PTR [esp+esi*4]
  40d169:	inc    ebx
  40d16a:	adc    bl,BYTE PTR [eax-0x59a473a8]
  40d170:	push   0xd4085a84
  40d175:	inc    esp
  40d176:	imul   esi,DWORD PTR ds:0xf41247a4,0x33385d51
  40d180:	mov    ah,0x7c
  40d182:	stos   DWORD PTR es:[edi],eax
  40d183:	add    al,0x92
  40d185:	rcr    BYTE PTR [edx+ebp*2-0x112b331c],1
  40d18c:	xor    al,0x48
  40d18e:	out    dx,eax
  40d18f:	(bad)  
  40d190:	hlt    
  40d191:	fdiv   DWORD PTR cs:[ecx+0x14]
  40d195:	fs push 0x31
  40d198:	pop    eax
  40d199:	pop    ds
  40d19a:	jno    0x40d15b
  40d19c:	ret    
  40d19d:	mov    fs,WORD PTR [edx+ecx*8]
  40d1a0:	push   eax
  40d1a1:	sub    al,0x6d
  40d1a3:	cdq    
  40d1a4:	cmp    ah,bh
  40d1a6:	add    DWORD PTR ds:0x6fa5ab31,ebp
  40d1ac:	push   esi
  40d1ad:	leave  
  40d1ae:	jb     0x40d1a5
  40d1b0:	cld    
  40d1b1:	pop    esi
  40d1b2:	and    bh,BYTE PTR [esi-0x761bbb23]
  40d1b8:	jmp    0x40d1ab
  40d1ba:	repz neg BYTE PTR [eax]
  40d1bd:	(bad)  
  40d1be:	(bad)  
  40d1bf:	and    BYTE PTR [ebp+0x35],bl
  40d1c2:	xchg   esi,eax
  40d1c3:	inc    eax
  40d1c4:	jb     0x40d1e6
  40d1c6:	sub    al,0x2b
  40d1c8:	inc    edi
  40d1c9:	outs   dx,BYTE PTR ds:[esi]
  40d1ca:	add    eax,0x4b4ba7f
  40d1cf:	xchg   BYTE PTR [edx+0x7cd59c64],dl
  40d1d5:	inc    ebx
  40d1d6:	and    ecx,esi
  40d1d8:	jno    0x40d21a
  40d1da:	mov    dl,0x94
  40d1dc:	retf   
  40d1dd:	fld    TBYTE PTR [ebx-0x7b]
  40d1e0:	sub    esi,DWORD PTR [esi-0x5b]
  40d1e3:	mov    ch,0x9b
  40d1e5:	push   esi
  40d1e6:	popa   
  40d1e7:	imul   BYTE PTR [edi*8-0x36696055]
  40d1ee:	shl    edx,cl
  40d1f0:	mov    eax,ds:0x63b205e4
  40d1f5:	lock fld QWORD PTR [edx]
  40d1f8:	adc    dh,BYTE PTR [esi+0x21335d4f]
  40d1fe:	inc    edi
  40d1ff:	ret    
  40d200:	fmul   DWORD PTR [eax-0x1590094b]
  40d206:	ficom  DWORD PTR [edi+0x37191f7]
  40d20c:	push   cs
  40d20d:	jl     0x40d1da
  40d20f:	cli    
  40d210:	stc    
  40d211:	mov    cl,0x8b
  40d213:	fsub   DWORD PTR [ecx+0x72ae7ad]
  40d219:	inc    edx
  40d21a:	inc    edi
  40d21b:	enter  0xa0c1,0x91
  40d21f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d220:	jo     0x40d248
  40d222:	pop    edi
  40d223:	mov    ebp,ebx
  40d225:	pop    es
  40d226:	imul   esi,DWORD PTR ds:[edx-0x9],0x5a398fbb
  40d22e:	dec    ebp
  40d22f:	cld    
  40d230:	in     al,dx
  40d231:	in     eax,dx
  40d232:	icebp  
  40d233:	push   esi
  40d234:	xlat   BYTE PTR ds:[ebx]
  40d235:	sbb    DWORD PTR [ebp+0x4c],ebx
  40d238:	xchg   DWORD PTR [edx],ebx
  40d23a:	xor    bl,BYTE PTR [edi-0x78]
  40d23d:	jge    0x40d2b4
  40d23f:	rcr    DWORD PTR [edi],0x90
  40d242:	ds cmp al,0x8c
  40d245:	stos   DWORD PTR es:[edi],eax
  40d246:	push   0x73
  40d248:	adc    eax,0x1c3598df
  40d24d:	adc    eax,DWORD PTR [esi+eax*4-0x45]
  40d251:	jge    0x40d271
  40d253:	sub    BYTE PTR [edi+0x4371ebcd],dl
  40d259:	xchg   edi,eax
  40d25a:	mov    ah,0x61
  40d25c:	js     0x40d2bb
  40d25e:	cmp    dh,bh
  40d260:	mov    ds:0x5dc2e23b,al
  40d265:	out    dx,al
  40d266:	shl    DWORD PTR [edx-0x1120f3b1],1
  40d26c:	add    eax,edi
  40d26e:	cmp    ecx,eax
  40d270:	je     0x40d2ae
  40d276:	jmp    0x40d29f
  40d27b:	mov    eax,DWORD PTR [ebp-0x4]
  40d27e:	mov    ecx,DWORD PTR [ebp-0x8]
  40d281:	xor    eax,esi
  40d283:	add    eax,edi
  40d285:	cmp    ecx,eax
  40d287:	mov    eax,DWORD PTR [ebp-0x4]
  40d28a:	je     0x40d2e9
  40d290:	mov    ecx,DWORD PTR [ebp-0x30]
  40d293:	xor    eax,esi
  40d295:	add    eax,edi
  40d297:	cmp    ecx,eax
  40d299:	je     0x40f6a6
  40d29f:	lea    eax,[ebp-0x8]
  40d2a2:	push   eax
  40d2a3:	push   DWORD PTR [ebp-0x28]
  40d2a6:	push   DWORD PTR [ebp+0xc]
  40d2a9:	call   0x411c5a
  40d2ae:	mov    eax,DWORD PTR [ebp-0x4]
  40d2b1:	mov    ecx,DWORD PTR [ebp-0x8]
  40d2b4:	xor    eax,esi
  40d2b6:	add    eax,edi
  40d2b8:	cmp    ecx,eax
  40d2ba:	je     0x40d2d5
  40d2c0:	mov    eax,DWORD PTR [ebp-0x34]
  40d2c3:	movzx  eax,WORD PTR [eax+ebx*2]
  40d2c7:	mov    ecx,DWORD PTR [ebp-0x14]
  40d2ca:	mov    eax,DWORD PTR [ecx+eax*4]
  40d2cd:	mov    DWORD PTR [ebp-0x38],eax
  40d2d0:	jmp    0x40d27b
  40d2d5:	mov    eax,DWORD PTR [ebp-0xc]
  40d2d8:	xor    eax,esi
  40d2da:	lea    ebx,[ebx+eax*1+0x3272f3]
  40d2e1:	jmp    0x4087e2
  40d2e6:	mov    eax,DWORD PTR [ebp-0x4]
  40d2e9:	xor    eax,esi
  40d2eb:	jmp    0x40f69f
  40d2f0:	add    BYTE PTR [esi],cl
  40d2f2:	mov    ch,BYTE PTR [esp+eax*4+0x5e8600a0]
  40d2f9:	hlt    
  40d2fa:	aas    
  40d2fb:	push   eax
  40d2fc:	sub    esp,DWORD PTR [ebp-0x2d6a781d]
  40d302:	add    DWORD PTR [ebx-0x7c7ca318],0x18
  40d309:	div    DWORD PTR [edi-0x7e]
  40d30c:	dec    ecx
  40d30d:	in     al,dx
  40d30e:	in     al,dx
  40d30f:	ss mov ebx,0x8ef6e68b
  40d315:	mov    al,0xde
  40d317:	push   ss
  40d318:	xor    dl,BYTE PTR [ecx]
  40d31a:	(bad)  
  40d31b:	mul    BYTE PTR [esi+ebp*1+0x6a60b758]
  40d322:	push   ss
  40d323:	loopne 0x40d2f5
  40d325:	pop    ds
  40d326:	stc    
  40d327:	int    0xc0
  40d329:	shl    DWORD PTR [esi-0x1c08991b],0x79
  40d330:	sbb    bl,BYTE PTR [eax]
  40d332:	out    dx,eax
  40d333:	xor    DWORD PTR [eax+0x12e16677],ebp
  40d339:	(bad)  
  40d33a:	mov    ch,0xf6
  40d33c:	cmp    cl,BYTE PTR ds:0x395e3deb
  40d342:	ins    DWORD PTR es:[edi],dx
  40d343:	mov    ebp,0xb88317e0
  40d348:	sahf   
  40d349:	dec    ebx
  40d34a:	stc    
  40d34b:	xchg   ecx,eax
  40d34c:	inc    esp
  40d34d:	push   ebp
  40d34e:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40d350:	test   al,0x43
  40d352:	mov    ebp,0x2abfa481
  40d357:	or     al,dh
  40d359:	out    dx,al
  40d35a:	adc    al,0x59
  40d35c:	lods   eax,DWORD PTR ds:[esi]
  40d35d:	xchg   edi,eax
  40d35e:	in     al,0xf0
  40d360:	push   ds
  40d361:	aad    0x11
  40d363:	cli    
  40d364:	mov    cs,edx
  40d366:	add    al,0xe6
  40d368:	cmp    BYTE PTR [ebx],ah
  40d36a:	ins    DWORD PTR es:[edi],dx
  40d36b:	mov    BYTE PTR [edx-0x65719e6b],bl
  40d371:	mov    edx,0xd13f758
  40d376:	sahf   
  40d377:	sub    al,0x47
  40d379:	xor    eax,0xf69fdb5b
  40d37e:	aaa    
  40d37f:	sbb    eax,0x79034ef9
  40d384:	in     al,dx
  40d385:	or     al,0xe6
  40d387:	or     eax,0x842a3f19
  40d38c:	hlt    
  40d38d:	mov    dl,0xfc
  40d38f:	mov    cl,0x43
  40d391:	xor    dl,dh
  40d393:	cmp    DWORD PTR [ecx+0x5e],edx
  40d396:	sbb    al,0x3
  40d398:	test   eax,0xec07e5b
  40d39d:	dec    esi
  40d39e:	fwait
  40d39f:	sahf   
  40d3a0:	cdq    
  40d3a1:	mov    bl,BYTE PTR [esi-0x1c7658e]
  40d3a7:	outs   dx,DWORD PTR ds:[esi]
  40d3a8:	xchg   edi,eax
  40d3a9:	push   eax
  40d3aa:	retf   
  40d3ab:	not    dl
  40d3ad:	test   DWORD PTR [ebx+0x293ecfaf],ecx
  40d3b3:	or     BYTE PTR [ebx-0x41fdf65],0xaa
  40d3ba:	sub    eax,0x8644759a
  40d3bf:	test   BYTE PTR [edx],cl
  40d3c1:	dec    edi
  40d3c2:	mov    ah,0x41
  40d3c4:	(bad)  
  40d3c5:	(bad)
  40d3c8:	adc    esp,ebx
  40d3ca:	in     eax,dx
  40d3cb:	aaa    
  40d3cc:	scas   al,BYTE PTR es:[edi]
  40d3cd:	punpckhwd mm7,QWORD PTR [edx-0x77613b18]
  40d3d4:	daa    
  40d3d5:	and    ch,BYTE PTR [ecx+esi*1]
  40d3d8:	loopne 0x40d3ee
  40d3da:	frstpm(287 only) 
  40d3dc:	lahf   
  40d3dd:	mov    fs,esp
  40d3df:	js     0x40d44e
  40d3e1:	adc    eax,0x68fc71c2
  40d3e6:	sub    bh,BYTE PTR [eax+0x6a]
  40d3e9:	cmp    DWORD PTR [edx],0x36b8f740
  40d3ef:	or     DWORD PTR fs:[esi],esi
  40d3f2:	cwde   
  40d3f3:	in     eax,dx
  40d3f4:	push   ebp
  40d3f5:	cli    
  40d3f6:	xlat   BYTE PTR ds:[ebx]
  40d3f7:	pushf  
  40d3f8:	pop    ebp
  40d3f9:	stos   BYTE PTR es:[edi],al
  40d3fa:	jmp    0x40d432
  40d3fc:	sub    dh,BYTE PTR [eax-0x1f]
  40d3ff:	mov    esi,0x1bea2a48
  40d404:	xlat   BYTE PTR ds:[ebx]
  40d405:	xor    edx,DWORD PTR [ebx-0x24]
  40d408:	fsubr  QWORD PTR [edx]
  40d40a:	xor    edx,edx
  40d40c:	push   0xa3a1b832
  40d411:	mov    bl,0xbd
  40d413:	sbb    BYTE PTR [ecx+0x44679e4c],dh
  40d419:	jb     0x40d422
  40d41b:	add    ah,al
  40d41d:	jmp    0x69a84c62
  40d422:	or     DWORD PTR [edx-0x5f],0xaaa8c16
  40d429:	and    ch,bl
  40d42b:	cmp    BYTE PTR [edx+0x8433799],dh
  40d431:	imul   esi,DWORD PTR [ebx-0x76f75971],0xe
  40d438:	push   edx
  40d439:	inc    ecx
  40d43a:	dec    edi
  40d43b:	test   eax,0x5c9c7090
  40d440:	sbb    esp,DWORD PTR [ecx-0x5889ad6b]
  40d446:	in     al,0x1b
  40d448:	dec    ecx
  40d449:	shr    BYTE PTR [edi+ebx*8-0x5a020cae],1
  40d450:	adc    eax,0xe4b561d8
  40d455:	dec    edi
  40d456:	jecxz  0x40d427
  40d458:	dec    ebp
  40d459:	pusha  
  40d45a:	sbb    BYTE PTR [ebx],dl
  40d45c:	rcl    DWORD PTR [edx+0xc9089f],1
  40d462:	icebp  
  40d463:	mov    bh,0x20
  40d465:	pop    ds
  40d466:	mov    dl,0xf3
  40d468:	dec    edx
  40d469:	jmp    0x45e7:0x2a701a35
  40d470:	xor    al,0x93
  40d472:	mov    cs,WORD PTR [ecx-0x76c7835b]
  40d478:	pop    esp
  40d479:	jmp    0x7c72:0x366f8897
  40d480:	inc    ch
  40d482:	lods   al,BYTE PTR ds:[esi]
  40d483:	rol    DWORD PTR [esi],0x90
  40d486:	out    0x60,eax
  40d488:	in     eax,dx
  40d489:	pushf  
  40d48a:	out    dx,eax
  40d48b:	xchg   BYTE PTR [edx-0x11],dh
  40d48e:	and    eax,0xbd765b02
  40d493:	jae    0x40d417
  40d495:	ins    DWORD PTR es:[edi],dx
  40d496:	sbb    edx,DWORD PTR [eax-0x37fd791d]
  40d49c:	push   cs
  40d49d:	fldcw  WORD PTR [eax+esi*8-0x43b42193]
  40d4a4:	push   ss
  40d4a5:	xor    al,BYTE PTR [ecx]
  40d4a7:	jne    0x40d4a3
  40d4a9:	test   BYTE PTR [ebx+ebp*4+0x1bdd1561],0x33
  40d4b1:	stos   BYTE PTR es:[edi],al
  40d4b2:	clc    
  40d4b3:	adc    ah,BYTE PTR [ebx+eax*1-0x13a820ab]
  40d4ba:	imul   ecx,DWORD PTR [ebp+0x492205b7],0xa2f8333f
  40d4c4:	leave  
  40d4c5:	in     eax,dx
  40d4c6:	shl    BYTE PTR [edx],cl
  40d4c8:	popa   
  40d4c9:	imul   DWORD PTR [ebx-0x3e]
  40d4cc:	call   0x64d2344b
  40d4d1:	and    al,0x6b
  40d4d3:	and    DWORD PTR [edi-0x69],ebx
  40d4d6:	fdiv   DWORD PTR [ebp+0x62]
  40d4d9:	loop   0x40d508
  40d4db:	lods   al,BYTE PTR ds:[esi]
  40d4dc:	lea    esi,es:[edi]
  40d4df:	popa   
  40d4e0:	sub    eax,0x8a939d90
  40d4e5:	sbb    DWORD PTR [edi-0x32],edi
  40d4e8:	mov    ebx,gs
  40d4ea:	add    BYTE PTR [edi-0x61],al
  40d4ed:	and    al,0x1a
  40d4ef:	sbb    dh,BYTE PTR [edx+0x152982f8]
  40d4f5:	jnp    0x40d553
  40d4f7:	mov    cl,0xca
  40d4f9:	or     ebp,DWORD PTR [eax+0x38]
  40d4fc:	popa   
  40d4fd:	pop    edx
  40d4fe:	xlat   BYTE PTR ds:[ebx]
  40d4ff:	add    BYTE PTR [edx],0x9a
  40d502:	pop    ds
  40d503:	xor    BYTE PTR [ecx+0xdc4e6ff],ch
  40d509:	sbb    bl,BYTE PTR [eax]
  40d50b:	push   edx
  40d50c:	dec    ecx
  40d50d:	shl    BYTE PTR [ebx+0x71fb239a],cl
  40d513:	jmp    0x1f8f:0x93b23ca3
  40d51a:	lods   al,BYTE PTR ds:[esi]
  40d51b:	cmc    
  40d51c:	pusha  
  40d51d:	shr    esi,0x4f
  40d520:	(bad)  [eax]
  40d522:	mov    bl,0xd
  40d524:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d525:	cmp    BYTE PTR [ecx+0x63d93336],ah
  40d52b:	das    
  40d52c:	dec    eax
  40d52d:	js     0x40d53e
  40d52f:	or     eax,0xcf227593
  40d534:	jg     0x40d4d0
  40d536:	inc    edx
  40d537:	out    0xd0,eax
  40d539:	mov    esi,0x1447bebd
  40d53e:	jmp    0x40d4cc
  40d540:	outs   dx,DWORD PTR ds:[esi]
  40d541:	cmp    esp,DWORD PTR [esi+edx*1+0x2b8c179]
  40d548:	dec    ebp
  40d549:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d54a:	ins    BYTE PTR es:[edi],dx
  40d54b:	lea    ebx,[edi]
  40d54d:	xchg   ebx,eax
  40d54e:	push   ebx
  40d54f:	pusha  
  40d550:	xchg   dl,dl
  40d552:	jno    0x40d577
  40d554:	inc    esp
  40d555:	fild   QWORD PTR [ebx]
  40d557:	rcr    eax,1
  40d559:	sub    BYTE PTR [esi-0x6c],0xdd
  40d55d:	out    0x32,eax
  40d55f:	sbb    eax,0x4fb57a9b
  40d564:	sbb    eax,0x78d0c2fe
  40d569:	scas   eax,DWORD PTR es:[edi]
  40d56a:	sbb    eax,0xb03576f8
  40d56f:	mov    edx,0x35d49f96
  40d574:	pushf  
  40d575:	out    0xa8,al
  40d577:	lods   eax,DWORD PTR ds:[esi]
  40d578:	or     al,0xb2
  40d57a:	cdq    
  40d57b:	rcr    ecx,0x2e
  40d57e:	cmp    DWORD PTR [eax],esi
  40d580:	scas   eax,DWORD PTR es:[edi]
  40d581:	mov    cl,0xe3
  40d583:	imul   esi,edx,0x79f53ad
  40d589:	adc    edx,DWORD PTR [ecx+eax*2]
  40d58c:	leave  
  40d58d:	aad    0x95
  40d58f:	fs sti 
  40d591:	cli    
  40d592:	test   BYTE PTR [esi],bl
  40d594:	cdq    
  40d595:	call   0x9efe:0xd16c61f1
  40d59c:	retf   
  40d59d:	leave  
  40d59e:	aad    0x65
  40d5a0:	imul   esp,DWORD PTR [ecx-0x19667bc1],0x66
  40d5a7:	xor    eax,0x92714acc
  40d5ac:	inc    edx
  40d5ad:	fsubr  DWORD PTR [eax]
  40d5af:	inc    ebp
  40d5b0:	mov    eax,0x78d80869
  40d5b5:	aaa    
  40d5b6:	xor    dl,ah
  40d5b8:	in     al,0xa4
  40d5ba:	(bad)  
  40d5bb:	mov    ebx,0x4aa09717
  40d5c0:	mov    ecx,0x6360dcc5
  40d5c5:	bound  ebp,QWORD PTR gs:0xf7d91843
  40d5cc:	aam    0xd5
  40d5ce:	jg     0x40d62c
  40d5d0:	fyl2x  
  40d5d2:	cmp    BYTE PTR [ecx+0x5a],0x5f
  40d5d6:	imul   ecx,DWORD PTR [ebp+0x18],0x5d2b3f5c
  40d5dd:	sub    eax,0xbd83f9c1
  40d5e2:	push   edi
  40d5e3:	out    dx,al
  40d5e4:	sub    BYTE PTR [esi],ch
  40d5e6:	sar    al,0xa6
  40d5e9:	fwait
  40d5ea:	icebp  
  40d5eb:	outs   dx,BYTE PTR ds:[esi]
  40d5ec:	or     edi,ebp
  40d5ee:	push   edx
  40d5ef:	sub    BYTE PTR [ebp+0x2ba3fa2],bl
  40d5f5:	out    dx,al
  40d5f6:	inc    esp
  40d5f7:	rcr    BYTE PTR [ebx-0x2],1
  40d5fa:	add    BYTE PTR [esi-0x69],0xf5
  40d5fe:	push   es
  40d5ff:	sbb    bh,ch
  40d601:	lods   al,BYTE PTR ds:[esi]
  40d602:	xchg   ebx,eax
  40d603:	add    al,0xde
  40d605:	jb     0x40d61c
  40d607:	xchg   ebp,eax
  40d608:	bound  ebp,QWORD PTR [ecx-0x48]
  40d60b:	cli    
  40d60c:	cmc    
  40d60d:	inc    ecx
  40d60e:	outs   dx,BYTE PTR ds:[esi]
  40d60f:	add    BYTE PTR [ecx-0xf44a5aa],ah
  40d615:	inc    esp
  40d616:	add    eax,0x1ebe5d58
  40d61b:	cmp    ch,ah
  40d61d:	mov    esi,0x397cb5e3
  40d622:	js     0x40d697
  40d624:	push   esp
  40d625:	arpl   WORD PTR [edx-0x48],sp
  40d628:	(bad)  
  40d62a:	add    BYTE PTR [ebp-0x7a9201a6],0x21
  40d631:	cmc    
  40d632:	inc    esi
  40d633:	pushf  
  40d634:	scas   eax,DWORD PTR es:[edi]
  40d635:	iret   
  40d636:	idiv   BYTE PTR [ebx+0xb]
  40d639:	push   ss
  40d63a:	in     eax,0xa1
  40d63c:	loop   0x40d5ee
  40d63e:	inc    ecx
  40d63f:	daa    
  40d640:	cs stos DWORD PTR es:[edi],eax
  40d642:	ucomiss xmm4,DWORD PTR [edi]
  40d645:	jnp    0x40d5f9
  40d647:	xlat   BYTE PTR ds:[ebx]
  40d648:	jns    0x40d5ca
  40d64a:	or     bl,0x93
  40d64d:	mov    edi,0x7ce6cd15
  40d652:	fistp  DWORD PTR [ecx-0x16]
  40d655:	je     0x40d5e1
  40d657:	push   edi
  40d658:	ins    BYTE PTR es:[edi],dx
  40d659:	fld    QWORD PTR [eax]
  40d65b:	loopne 0x40d659
  40d65d:	gs mov bl,0x56
  40d660:	xchg   esi,eax
  40d661:	imul   edi,edi,0x4e72bbbd
  40d667:	jg     0x40d6b6
  40d669:	xlat   BYTE PTR ds:[ebx]
  40d66a:	jmp    0xd4f99fa1
  40d66f:	imul   edx,DWORD PTR [esi-0x24de6a16],0x46
  40d676:	sbb    BYTE PTR [ecx-0x37],ch
  40d679:	pop    edx
  40d67a:	mov    eax,0xc516ff50
  40d67f:	jmp    0x40d680
  40d681:	inc    DWORD PTR [edx+0xb]
  40d684:	cmp    BYTE PTR [ebp-0x564bcc66],ch
  40d68a:	jnp    0x40d675
  40d68c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d68d:	sbb    al,0x71
  40d68f:	and    dl,BYTE PTR [ebx+eiz*2+0x7c0bdf70]
  40d696:	mov    ah,0xaa
  40d698:	pop    ds
  40d699:	sti    
  40d69a:	sub    edx,DWORD PTR [ebx-0x63d90bd3]
  40d6a0:	fmul   QWORD PTR [edx]
  40d6a2:	mov    cl,0x4c
  40d6a4:	ret    
  40d6a5:	jne    0x40d673
  40d6a7:	push   esp
  40d6a8:	aaa    
  40d6a9:	push   ecx
  40d6aa:	cwde   
  40d6ab:	add    eax,0xe74ea90a
  40d6b0:	aas    
  40d6b1:	push   esi
  40d6b2:	retf   0x6432
  40d6b5:	mov    dh,0x72
  40d6b7:	test   eax,0xd23ae312
  40d6bc:	fist   WORD PTR [edx]
  40d6be:	sti    
  40d6bf:	in     eax,0xcb
  40d6c1:	in     al,dx
  40d6c2:	shr    ebx,0x5a
  40d6c5:	mov    dl,0xe
  40d6c7:	push   ds
  40d6c8:	sub    BYTE PTR [ecx+0x2f],0x85
  40d6cc:	adc    eax,0x189e28e1
  40d6d1:	inc    ebp
  40d6d2:	test   al,0x6
  40d6d4:	adc    edi,DWORD PTR [edi]
  40d6d6:	push   edx
  40d6d7:	out    dx,al
  40d6d8:	and    al,0x53
  40d6da:	je     0x40d6db
  40d6dc:	mov    ds,WORD PTR [esi-0x1497fdb6]
  40d6e2:	mov    BYTE PTR [esi+0x5b],cl
  40d6e5:	scas   eax,DWORD PTR es:[edi]
  40d6e6:	add    edx,DWORD PTR [ebp+0x7b]
  40d6e9:	sub    al,al
  40d6eb:	xchg   edx,eax
  40d6ec:	in     eax,0xfc
  40d6ee:	dec    edi
  40d6ef:	dec    eax
  40d6f0:	std    
  40d6f1:	loopne 0x40d67c
  40d6f3:	fs mov cl,0xe6
  40d6f6:	sbb    bh,0xbb
  40d6f9:	jnp    0x40d6bb
  40d6fb:	mov    WORD PTR [esp+ebp*1],es
  40d6fe:	push   esp
  40d6ff:	fstp   DWORD PTR [edi+0x75cabe42]
  40d705:	push   esi
  40d706:	(bad)  
  40d708:	icebp  
  40d709:	scas   eax,DWORD PTR es:[edi]
  40d70a:	adc    eax,0x4d4dbf7b
  40d70f:	mov    gs,eax
  40d711:	add    bl,bh
  40d713:	xlat   BYTE PTR ds:[ebx]
  40d714:	pusha  
  40d715:	ds jg  0x40d772
  40d718:	ficom  WORD PTR [edx]
  40d71a:	fcomp  QWORD PTR [ebp+eax*8-0x22]
  40d71e:	stc    
  40d71f:	jle    0x40d6c4
  40d721:	outs   dx,BYTE PTR ds:[esi]
  40d722:	inc    ebx
  40d723:	stc    
  40d724:	(bad)  
  40d725:	das    
  40d726:	jp     0x40d71f
  40d728:	ret    
  40d729:	imul   ecx,ebp,0x90e6098d
  40d72f:	dec    edi
  40d730:	call   DWORD PTR [ebx-0x66251a3e]
  40d736:	int3   
  40d737:	mov    BYTE PTR [ecx-0x7890d169],bh
  40d73d:	add    eax,DWORD PTR [edx-0xf7a7fa9]
  40d743:	es xchg ebx,eax
  40d745:	jmp    0x9586:0x21f8da6a
  40d74c:	jmp    0x40d744
  40d74e:	sti    
  40d74f:	rcr    DWORD PTR [edx+0x2718d65c],1
  40d755:	lock sbb BYTE PTR [edi],bl
  40d758:	ret    
  40d759:	shl    DWORD PTR [edx],0xa3
  40d75c:	mov    ecx,0x52827d77
  40d761:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d762:	lds    esp,FWORD PTR [ecx-0x391b909c]
  40d768:	int3   
  40d769:	push   edx
  40d76a:	cli    
  40d76b:	or     BYTE PTR [edi-0x3eaf350e],cl
  40d771:	enter  0x1bdb,0x50
  40d775:	push   edx
  40d776:	mov    ah,0x2
  40d778:	outs   dx,BYTE PTR ds:[esi]
  40d779:	xchg   ebx,eax
  40d77a:	fwait
  40d77b:	mov    ebp,0x8d3a3daf
  40d780:	mov    eax,ds:0x667c32e4
  40d785:	aad    0x37
  40d787:	and    DWORD PTR [edi],0x311f2221
  40d78d:	mov    cl,0xc5
  40d78f:	push   cs
  40d790:	push   ecx
  40d791:	xchg   edi,eax
  40d792:	fsub   st(6),st
  40d794:	pop    edx
  40d795:	inc    ebp
  40d796:	mov    esi,0x2e0494f1
  40d79b:	lods   al,BYTE PTR ds:[esi]
  40d79c:	jno    0x40d748
  40d79e:	push   0x85b4cc09
  40d7a3:	dec    edx
  40d7a4:	fbld   TBYTE PTR [ecx-0x4c15bd98]
  40d7aa:	pop    esp
  40d7ab:	xchg   BYTE PTR [esi],dh
  40d7ad:	jne    0x40d7c5
  40d7af:	mov    edi,0xc1db24ec
  40d7b4:	xchg   edi,eax
  40d7b5:	mov    bl,0x7f
  40d7b7:	not    DWORD PTR [ebx+0x3d]
  40d7ba:	outs   dx,BYTE PTR ds:[esi]
  40d7bb:	xor    ch,dl
  40d7bd:	xchg   ebx,eax
  40d7be:	fisttp WORD PTR [ebx]
  40d7c0:	arpl   WORD PTR [esi+ebx*2-0x2add68fa],ax
  40d7c7:	es push esp
  40d7c9:	sbb    ah,BYTE PTR [eax+0x7]
  40d7cc:	push   ecx
  40d7cd:	gs pop esp
  40d7cf:	mov    edx,es
  40d7d1:	aas    
  40d7d2:	out    0xc0,eax
  40d7d4:	mov    ah,0xbd
  40d7d6:	call   0xab3fab71
  40d7db:	inc    ecx
  40d7dc:	(bad)  [esi+0x1ec66cc9]
  40d7e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7e3:	xchg   ebx,eax
  40d7e4:	pop    ebp
  40d7e5:	dec    eax
  40d7e6:	lahf   
  40d7e7:	pop    edi
  40d7e8:	or     ecx,DWORD PTR [ecx-0x4e]
  40d7eb:	jmp    0xeafeef0d
  40d7f0:	and    BYTE PTR ds:0xdc63e1f1,cl
  40d7f6:	xchg   BYTE PTR [ebx-0x595bf210],al
  40d7fc:	add    DWORD PTR [ebx+0x35],ecx
  40d7ff:	xchg   edx,eax
  40d800:	jae    0x40d7ba
  40d802:	xchg   esi,esp
  40d804:	push   ss
  40d805:	inc    esp
  40d806:	in     al,dx
  40d807:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d808:	lods   eax,DWORD PTR ds:[esi]
  40d809:	cdq    
  40d80a:	adc    al,al
  40d80c:	adc    eax,0xb50548f9
  40d811:	mov    ebx,0x5a52c82f
  40d816:	push   esi
  40d817:	dec    esi
  40d818:	aaa    
  40d819:	ja     0x40d835
  40d81b:	adc    ebp,esp
  40d81d:	arpl   WORD PTR [eax+0x7c],di
  40d820:	or     esi,ebp
  40d822:	or     eax,0x10fc9dc2
  40d827:	stos   BYTE PTR es:[edi],al
  40d828:	sbb    al,0x7a
  40d82a:	fist   WORD PTR [esi-0x1]
  40d82d:	stos   BYTE PTR es:[edi],al
  40d82e:	(bad)  
  40d82f:	fsubr  QWORD PTR [ebx]
  40d831:	ror    esi,cl
  40d833:	mov    eax,ds:0x41f144f1
  40d839:	xor    BYTE PTR [ebx],0x4d
  40d83c:	push   ebx
  40d83d:	test   BYTE PTR [ebp+0x7c946a5c],cl
  40d843:	test   DWORD PTR [esi+0x5567624e],esi
  40d849:	mov    cl,0x98
  40d84b:	add    al,BYTE PTR [esi-0x504e74c8]
  40d851:	xor    ebx,DWORD PTR [esp+esi*1]
  40d854:	add    DWORD PTR [bx+di-0x71],ebx
  40d858:	sahf   
  40d859:	jmp    0x3562:0xa44e4239
  40d860:	jns    0x40d823
  40d862:	loop   0x40d8e2
  40d864:	sub    ebp,DWORD PTR [ebx+eax*1+0x34]
  40d868:	sar    ch,cl
  40d86a:	pusha  
  40d86b:	cmp    al,0xcb
  40d86d:	sbb    ecx,DWORD PTR [edi+0x1eb00b24]
  40d873:	jecxz  0x40d876
  40d875:	mov    ?,ecx
  40d877:	or     dh,ch
  40d879:	ins    BYTE PTR es:[edi],dx
  40d87a:	xchg   edi,eax
  40d87b:	fild   DWORD PTR [eax+0x4f]
  40d87e:	ins    DWORD PTR es:[edi],dx
  40d87f:	jbe    0x40d8dc
  40d881:	call   0xfe65d3ea
  40d886:	pushf  
  40d887:	or     al,0xb0
  40d889:	ds (bad) 
  40d88b:	mov    esp,DWORD PTR [eax]
  40d88d:	and    cl,BYTE PTR [edi]
  40d88f:	sbb    al,0xba
  40d891:	push   ecx
  40d892:	out    dx,al
  40d893:	int    0xb8
  40d895:	pop    ecx
  40d896:	in     eax,dx
  40d897:	dec    ebp
  40d898:	loope  0x40d8d4
  40d89a:	ja     0x40d8a6
  40d89c:	stos   BYTE PTR es:[edi],al
  40d89d:	hlt    
  40d89e:	call   0xfaf:0xf787b35d
  40d8a5:	mov    dl,0x53
  40d8a7:	pop    ebp
  40d8a8:	xor    eax,0x264bb2d6
  40d8ad:	into   
  40d8ae:	adc    BYTE PTR [edx+ebx*2-0x22],ch
  40d8b2:	out    0x62,eax
  40d8b4:	or     BYTE PTR [ebx-0x3e90737f],ch
  40d8ba:	iret   
  40d8bb:	bound  ebx,QWORD PTR [ebp+0x2079f1c6]
  40d8c1:	jno    0x40d8ff
  40d8c3:	clc    
  40d8c4:	fimul  DWORD PTR [ecx]
  40d8c6:	out    0x4f,al
  40d8c8:	mov    cl,0x69
  40d8ca:	xor    BYTE PTR [esi-0x1e],0xe
  40d8ce:	mov    bh,0xbb
  40d8d0:	xlat   BYTE PTR ds:[ebx]
  40d8d1:	scas   eax,DWORD PTR es:[edi]
  40d8d2:	lods   eax,DWORD PTR ds:[esi]
  40d8d3:	cld    
  40d8d4:	mov    edi,0xd983652a
  40d8d9:	leave  
  40d8da:	add    eax,0x3aabc0ea
  40d8df:	popf   
  40d8e0:	jg     0x40d90a
  40d8e2:	or     al,BYTE PTR [edx+edi*2]
  40d8e5:	cmp    bl,BYTE PTR [ebp-0x5b]
  40d8e8:	or     dl,BYTE PTR [ecx-0x28fbcdfa]
  40d8ee:	mov    eax,ds:0x1a5bdd8b
  40d8f3:	test   esp,ecx
  40d8f5:	popf   
  40d8f6:	fucom  st(1)
  40d8f8:	mov    bl,0xdc
  40d8fa:	mov    dh,0xac
  40d8fc:	or     cl,BYTE PTR [edx]
  40d8fe:	lock ds push es
  40d901:	loop   0x40d897
  40d903:	pop    esi
  40d904:	(bad)  
  40d905:	mov    bl,BYTE PTR [ebp+0x3c]
  40d908:	cmp    dh,BYTE PTR [si-0x64]
  40d90c:	push   0xffffffde
  40d90e:	sbb    BYTE PTR [ebx+eax*4-0x6862d00f],ah
  40d915:	push   ebp
  40d916:	mov    ebx,0x808be2dc
  40d91b:	add    al,BYTE PTR [eax]
  40d91d:	xchg   ebx,eax
  40d91e:	pop    ecx
  40d91f:	fisubr WORD PTR [ebp+0x1d]
  40d922:	out    dx,al
  40d923:	inc    edx
  40d924:	push   eax
  40d925:	mov    al,ds:0x1f14d13e
  40d92a:	leave  
  40d92b:	fst    DWORD PTR [eax+0x5e]
  40d92e:	mov    edi,0x41d12a4f
  40d933:	pop    eax
  40d934:	gs into 
  40d936:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d937:	ins    BYTE PTR es:[edi],dx
  40d938:	ret    
  40d939:	jl     0x40d907
  40d93b:	cmp    eax,0x698fc276
  40d940:	mov    ds:0xba85530,eax
  40d945:	je     0x40d922
  40d947:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d948:	push   cs
  40d949:	jae    0x40d8cb
  40d94b:	addr16 ret 
  40d94d:	or     edx,DWORD PTR gs:[ecx-0x71]
  40d951:	pop    ebp
  40d952:	inc    esi
  40d953:	cmp    dh,BYTE PTR [ebp-0x67e41cc7]
  40d959:	or     eax,0x70f4231e
  40d95e:	retf   
  40d95f:	xchg   BYTE PTR fs:0x14d27fde,cl
  40d966:	mov    bh,BYTE PTR [edx+0x406c46eb]
  40d96c:	lea    edi,[ebp+0x5c85f8a4]
  40d972:	jne    0x40d9dd
  40d974:	lahf   
  40d975:	cmp    al,0xf7
  40d977:	lea    esp,[ecx+0x1f56e459]
  40d97d:	jb     0x40d922
  40d97f:	xor    al,0xc2
  40d981:	mov    eax,edx
  40d983:	mov    ah,0xef
  40d985:	cmp    DWORD PTR [esi-0x62],edx
  40d988:	mov    ah,0xd7
  40d98a:	and    DWORD PTR [edx],esi
  40d98c:	mov    BYTE PTR [edx-0x6b],ah
  40d98f:	push   eax
  40d990:	pop    eax
  40d991:	mov    BYTE PTR [ebx-0x5cd56d2f],ah
  40d997:	pop    ebx
  40d998:	inc    eax
  40d999:	test   al,0x59
  40d99b:	adc    DWORD PTR [ebp-0x69],esi
  40d99e:	neg    DWORD PTR [eax]
  40d9a0:	mov    ds:0xa9710e4e,al
  40d9a5:	cmp    al,0x92
  40d9a7:	and    DWORD PTR [ecx],ecx
  40d9a9:	in     eax,0x53
  40d9ab:	or     eax,0x30ef757e
  40d9b0:	sub    al,0x38
  40d9b2:	xor    DWORD PTR [edx+esi*2],ebp
  40d9b5:	mov    DWORD PTR [ecx+0x43],edi
  40d9b8:	sbb    eax,0x5ff50709
  40d9bd:	fucomp st(7)
  40d9bf:	inc    edi
  40d9c0:	(bad)  
  40d9c1:	dec    eax
  40d9c3:	jle    0x40d998
  40d9c5:	les    edi,FWORD PTR [ecx+0x18]
  40d9c8:	xor    al,0xc2
  40d9ca:	retf   0x41c2
  40d9cd:	js     0x40d950
  40d9cf:	adc    al,dl
  40d9d1:	jmp    DWORD PTR [ebp-0xb1e955b]
  40d9d7:	xor    DWORD PTR [edi],ebp
  40d9d9:	bound  esi,QWORD PTR ds:0x63d0ad36
  40d9df:	mov    ecx,0x94dca285
  40d9e4:	div    BYTE PTR gs:[edx]
  40d9e7:	fs mov ecx,0xc7a70d0e
  40d9ed:	mov    bh,0xe4
  40d9ef:	dec    eax
  40d9f0:	les    ecx,FWORD PTR [eax-0x7c]
  40d9f3:	jb     0x40d9c4
  40d9f5:	adc    eax,edi
  40d9f7:	pop    ebp
  40d9f8:	xlat   BYTE PTR ds:[ebx]
  40d9f9:	cmp    al,0xec
  40d9fb:	sub    eax,0x70763895
  40da00:	out    0xa5,eax
  40da02:	inc    esp
  40da03:	xor    DWORD PTR [esi],ebp
  40da05:	gs in  al,0xbf
  40da08:	call   0xe3a4:0xcfd3af8f
  40da0f:	pop    eax
  40da10:	sbb    eax,0x134eddc4
  40da15:	call   0x7662:0xdacdfd0e
  40da1c:	arpl   dx,cx
  40da1e:	sbb    eax,0x71f40c71
  40da23:	test   esp,edi
  40da25:	mov    ds:0xb734eeaf,eax
  40da2a:	jmp    0x9267940b
  40da2f:	loopne 0x40d9f8
  40da31:	adc    DWORD PTR [ecx],0x1dc67555
  40da37:	jne    0x40d9d5
  40da39:	mov    al,ds:0x89e0a4b8
  40da3e:	test   al,0x81
  40da40:	sbb    BYTE PTR [ebp-0x29c70efb],0xe
  40da47:	push   ebx
  40da48:	xchg   esp,eax
  40da49:	xor    al,0xc9
  40da4b:	out    0xdf,eax
  40da4d:	sub    eax,0x67db0b27
  40da52:	test   BYTE PTR [edx-0x24],0xa7
  40da56:	sub    al,0xcb
  40da58:	mov    dh,0x7c
  40da5a:	add    ecx,DWORD PTR [edx]
  40da5c:	int3   
  40da5d:	inc    ebp
  40da5e:	imul   esp,DWORD PTR [esi+0x47],0xfffffff2
  40da62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da63:	jb     0x40daac
  40da65:	xrelease xchg BYTE PTR [ebx+edx*8+0xc071d3d],dl
  40da6d:	sbb    DWORD PTR [ecx+eiz*4+0x78a1a2cb],esi
  40da74:	jp     0x40da81
  40da76:	pop    ebp
  40da77:	pop    esp
  40da78:	cmp    al,BYTE PTR [edx]
  40da7a:	cmp    al,0xf9
  40da7c:	xor    esp,esi
  40da7e:	pop    ebp
  40da7f:	push   cs
  40da80:	lds    ebp,FWORD PTR [edx+0x5b5cd85b]
  40da86:	fidiv  WORD PTR [edx+0x3]
  40da89:	retf   
  40da8a:	addr16 ror ebx,0x3c
  40da8e:	mov    edi,0x973502da
  40da93:	ins    DWORD PTR es:[edi],dx
  40da94:	cld    
  40da95:	sti    
  40da96:	mov    cl,BYTE PTR [edi+0x154f154d]
  40da9c:	dec    ebx
  40da9d:	jbe    0x40daf3
  40da9f:	pop    ebp
  40daa0:	popf   
  40daa1:	arpl   WORD PTR [eax+0x47],dx
  40daa4:	or     BYTE PTR [edx-0x69cf5438],dl
  40daaa:	cmp    al,0x1f
  40daac:	jmp    0x40dad7
  40daae:	ror    ebx,1
  40dab0:	mov    ebx,0xcc6b1313
  40dab5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dab6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dab7:	or     ah,BYTE PTR cs:[esi]
  40daba:	xor    bh,0x3a
  40dabd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dabe:	xchg   esp,eax
  40dabf:	dec    esp
  40dac0:	cwde   
  40dac1:	cmc    
  40dac2:	pop    eax
  40dac3:	mov    bl,0xb1
  40dac5:	sub    BYTE PTR [ecx],cl
  40dac7:	bnd jmp 0x40dafd
  40daca:	aam    0x20
  40dacc:	gs inc ebx
  40dace:	xor    dl,0x75
  40dad1:	add    BYTE PTR [ebp+ebx*8+0x5f774c75],dl
  40dad8:	pop    ebx
  40dad9:	sbb    esi,DWORD PTR [ebx-0x50]
  40dadc:	inc    esp
  40dadd:	jno    0x40db5b
  40dadf:	stc    
  40dae0:	in     eax,dx
  40dae1:	add    eax,0x3feff8e4
  40dae6:	mov    edx,0x9ab9ee55
  40daeb:	mov    edi,0xc83fed28
  40daf0:	adc    edi,DWORD PTR [edi]
  40daf2:	outs   dx,BYTE PTR fs:[esi]
  40daf4:	xchg   edi,eax
  40daf5:	cmp    eax,0xf4ffcad0
  40dafa:	mov    eax,ds:0x5f2d1704
  40daff:	xor    eax,0x4a7557df
  40db04:	xchg   edx,eax
  40db05:	and    dl,cl
  40db07:	in     eax,0x4c
  40db09:	jge    0x40db0b
  40db0b:	js     0x40db28
  40db0d:	and    eax,0x10c63b97
  40db12:	jae    0x40db1b
  40db14:	enter  0x85fa,0xed
  40db18:	mov    ah,0xd5
  40db1a:	dec    ecx
  40db1b:	cli    
  40db1c:	adc    edi,DWORD PTR [ecx+ebx*1-0x73e2003]
  40db23:	sub    eax,0x2c875b8a
  40db28:	pop    eax
  40db29:	mov    eax,ds:0x15efac59
  40db2e:	sbb    edx,DWORD PTR [ebx]
  40db30:	jne    0x40dae5
  40db32:	clc    
  40db33:	lock lock push ds
  40db36:	cmp    al,0x1e
  40db38:	jno    0x40dba2
  40db3a:	mov    BYTE PTR [ebx],al
  40db3c:	out    dx,al
  40db3d:	loop   0x40daef
  40db3f:	push   ds
  40db40:	stos   BYTE PTR es:[edi],al
  40db41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db42:	neg    edi
  40db44:	gs in  eax,0x55
  40db47:	(bad)  [ecx+0x39d77559]
  40db4d:	add    al,0x21
  40db4f:	gs jecxz 0x40db63
  40db52:	mov    ah,0xd5
  40db54:	aam    0xb9
  40db56:	inc    edi
  40db57:	jmp    0x40db28
  40db59:	xor    BYTE PTR [ebx+0x3a21cac],0xb
  40db60:	out    0x5c,al
  40db62:	mov    eax,ds:0x48d7ec49
  40db67:	sbb    al,bl
  40db69:	pop    ebp
  40db6a:	pop    esp
  40db6b:	cmp    BYTE PTR [ebx-0x2e],cl
  40db6e:	arpl   WORD PTR [ecx-0x40],cx
  40db71:	xchg   edi,eax
  40db72:	outs   dx,BYTE PTR ds:[esi]
  40db73:	shl    BYTE PTR [edi-0x10e7e217],cl
  40db79:	shl    ebp,1
  40db7b:	lods   al,BYTE PTR ds:[esi]
  40db7c:	cmc    
  40db7d:	lods   eax,DWORD PTR ds:[esi]
  40db7e:	push   ds
  40db7f:	sbb    al,BYTE PTR [eax]
  40db81:	sub    eax,0xa0e03997
  40db86:	xor    al,0x85
  40db88:	leave  
  40db89:	ja     0x40dbcb
  40db8b:	aam    0x94
  40db8d:	mov    edi,DWORD PTR [ecx+0x4e0cfc7a]
  40db93:	fimul  DWORD PTR [edi-0x38]
  40db96:	mov    edx,0xd03e5e8e
  40db9b:	push   ebx
  40db9c:	jne    0x40dc0b
  40db9e:	pusha  
  40db9f:	jb     0x40db7f
  40dba1:	xlat   BYTE PTR ds:[ebx]
  40dba2:	and    al,0x75
  40dba4:	test   DWORD PTR [ebx+ecx*1+0x5d],0x757dd38d
  40dbac:	jmp    0x40db4c
  40dbae:	dec    edi
  40dbaf:	bound  ecx,QWORD PTR [ebx]
  40dbb1:	pop    esp
  40dbb2:	ins    DWORD PTR es:[edi],dx
  40dbb3:	pop    edi
  40dbb4:	loopne 0x40dc1b
  40dbb6:	dec    ebp
  40dbb7:	jno    0x40dc16
  40dbb9:	mov    edi,0xbab4d3b3
  40dbbe:	add    BYTE PTR [eax],al
  40dbc0:	scas   eax,DWORD PTR es:[edi]
  40dbc1:	or     DWORD PTR [esp+edi*1+0x7f5b92d3],ebp
  40dbc8:	arpl   WORD PTR [edx],si
  40dbca:	fxch   st(7)
  40dbcc:	and    DWORD PTR [ebx+0x63e795ef],0xe480e83e
  40dbd6:	dec    eax
  40dbd7:	(bad)  
  40dbd9:	sbb    BYTE PTR [ebx-0x4c],al
  40dbdc:	push   0xcb923925
  40dbe1:	into   
  40dbe2:	sub    BYTE PTR [ebx+0x54],0xac
  40dbe6:	jmp    0x40dbdb
  40dbe8:	mov    al,ds:0xdbd8f1d5
  40dbed:	inc    ecx
  40dbee:	jle    0x40dc5e
  40dbf0:	dec    eax
  40dbf1:	xchg   edi,eax
  40dbf2:	cmp    al,0xa1
  40dbf4:	adc    cl,BYTE PTR [esi-0x52]
  40dbf7:	xchg   esp,eax
  40dbf8:	(bad)  
  40dbf9:	outs   dx,DWORD PTR ds:[esi]
  40dbfa:	icebp  
  40dbfb:	push   edx
  40dbfc:	or     eax,0x570dec8d
  40dc01:	cmp    DWORD PTR [esi],ebp
  40dc03:	inc    eax
  40dc04:	mov    BYTE PTR [ebx],0xda
  40dc07:	pop    esp
  40dc08:	xlat   BYTE PTR ds:[ebx]
  40dc09:	hlt    
  40dc0a:	pop    ecx
  40dc0b:	mov    edi,DWORD PTR [ebp-0x56]
  40dc0e:	cmp    eax,0xd4c0c615
  40dc13:	mov    DWORD PTR [edx-0x57],ebx
  40dc16:	mov    ds:0xaf51c2bf,eax
  40dc1b:	(bad)  
  40dc1c:	out    dx,al
  40dc1d:	mov    al,0x2e
  40dc1f:	and    BYTE PTR [ebp+0x3f],ch
  40dc22:	mov    cs,WORD PTR [ecx-0x3985b2d3]
  40dc28:	xchg   DWORD PTR [edx+0x3a],edi
  40dc2b:	lock clc 
  40dc2d:	loope  0x40dc1a
  40dc2f:	arpl   WORD PTR [esi+0x2],si
  40dc32:	loope  0x40dc78
  40dc34:	adc    eax,DWORD PTR fs:[edi+0x73]
  40dc38:	adc    al,0x4c
  40dc3a:	retf   
  40dc3b:	jl     0x40dc21
  40dc3d:	dec    eax
  40dc3e:	shl    BYTE PTR [eax],0xea
  40dc41:	pop    esi
  40dc42:	mov    ds:0x6b0f3376,al
  40dc47:	js     0x40dc1d
  40dc49:	popf   
  40dc4a:	popa   
  40dc4b:	outs   dx,BYTE PTR ds:[esi]
  40dc4c:	(bad)  
  40dc4d:	aas    
  40dc4e:	out    dx,al
  40dc4f:	xchg   ebx,eax
  40dc50:	cdq    
  40dc51:	mov    ds,WORD PTR [ebx+0x2a]
  40dc54:	push   cs
  40dc55:	pop    ecx
  40dc56:	or     BYTE PTR [ecx],0xf4
  40dc59:	retf   0xbed1
  40dc5c:	hlt    
  40dc5d:	xchg   DWORD PTR ds:0x3ddcc60a,ebp
  40dc63:	sub    al,0xc6
  40dc65:	sbb    eax,0x421e0754
  40dc6a:	pusha  
  40dc6b:	sub    ecx,esi
  40dc6d:	push   esp
  40dc6e:	outs   dx,DWORD PTR ds:[esi]
  40dc6f:	add    ah,BYTE PTR [ebx]
  40dc71:	pop    edi
  40dc72:	jge    0x40dc69
  40dc74:	push   ds
  40dc75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc76:	mov    eax,gs:0xf41ed260
  40dc7c:	repz push es
  40dc7e:	mov    dh,0xf1
  40dc80:	or     BYTE PTR [edx+edx*2+0x6e],dl
  40dc84:	stos   BYTE PTR es:[edi],al
  40dc85:	mov    edi,0xbbf2bf39
  40dc8a:	fisttp WORD PTR [ebp-0x4a]
  40dc8d:	ret    0xd960
  40dc90:	data16 sub al,0xe5
  40dc93:	mov    esp,0x4b858a39
  40dc98:	test   dh,bl
  40dc9a:	loop   0x40dd04
  40dc9c:	adc    BYTE PTR [edx+esi*1-0x2b6098ff],0x64
  40dca4:	das    
  40dca5:	pusha  
  40dca6:	pop    edx
  40dca7:	add    eax,0xa65cefc9
  40dcac:	call   0xca3d3382
  40dcb1:	jnp    0x40dc63
  40dcb3:	arpl   WORD PTR [eax],si
  40dcb5:	or     eax,0x1cbeaf4b
  40dcba:	xor    DWORD PTR [edx],0x11
  40dcbd:	mov    ds:0xcb981465,eax
  40dcc2:	adc    edx,DWORD PTR [ebx+0x14]
  40dcc5:	xchg   ebx,eax
  40dcc6:	call   0xe34af982
  40dccb:	sbb    eax,0x6b6412d7
  40dcd0:	cdq    
  40dcd1:	icebp  
  40dcd2:	(bad)  
  40dcd3:	std    
  40dcd4:	je     0x40dc9c
  40dcd6:	out    dx,al
  40dcd7:	lea    eax,[ecx-0x452fdc4b]
  40dcdd:	je     0x40dd25
  40dcdf:	xchg   edx,eax
  40dce0:	dec    eax
  40dce1:	mov    ds:0x618478a7,eax
  40dce6:	jg     0x40dd23
  40dce8:	fst    DWORD PTR [ebx]
  40dcea:	sbb    al,0xef
  40dcec:	xor    eax,0xaa2f9ebd
  40dcf1:	sahf   
  40dcf2:	(bad)  
  40dcf4:	sub    BYTE PTR [esi+0x51e26ec5],0xac
  40dcfb:	es daa 
  40dcfd:	pusha  
  40dcfe:	das    
  40dcff:	fdiv   DWORD PTR [eax+0x37]
  40dd02:	int    0x56
  40dd04:	or     ch,BYTE PTR [ebx+0x24]
  40dd07:	push   esi
  40dd08:	mov    ecx,es
  40dd0a:	fcomip st,st(3)
  40dd0c:	pop    ds
  40dd0d:	xchg   ebx,eax
  40dd0e:	dec    edx
  40dd0f:	rcl    eax,0xee
  40dd12:	shr    BYTE PTR [ebp-0x65859368],0x1a
  40dd19:	cmc    
  40dd1a:	xor    dl,cl
  40dd1c:	aad    0x83
  40dd1e:	int3   
  40dd1f:	mov    esp,0xcbb82a0a
  40dd24:	or     DWORD PTR [eax+0x5d],0x706fa659
  40dd2b:	cmp    BYTE PTR [ecx+0x79],ch
  40dd2e:	clc    
  40dd2f:	push   0xffffffc4
  40dd31:	pop    es
  40dd32:	xchg   DWORD PTR [ecx-0x6dbc426],ecx
  40dd38:	ja     0x40dcf3
  40dd3a:	popw   es
  40dd3c:	js     0x40dd8d
  40dd3e:	lods   eax,DWORD PTR ds:[esi]
  40dd3f:	(bad)  
  40dd40:	in     al,dx
  40dd41:	popf   
  40dd42:	arpl   WORD PTR [ecx-0x2ed1a499],ax
  40dd48:	pop    edi
  40dd49:	fs cmp al,0xc6
  40dd4c:	mov    ds:0x24333cce,eax
  40dd51:	ret    
  40dd52:	jo     0x40dd98
  40dd54:	lds    eax,FWORD PTR [edi+edi*4]
  40dd57:	inc    ebp
  40dd58:	xor    BYTE PTR [edi+esi*8],cl
  40dd5b:	add    DWORD PTR [esi],edi
  40dd5d:	mov    dl,0x25
  40dd5f:	popf   
  40dd60:	aas    
  40dd61:	cmp    DWORD PTR [esi],ebx
  40dd63:	aad    0x8
  40dd65:	push   ebp
  40dd66:	clc    
  40dd67:	ds pop esi
  40dd69:	inc    edx
  40dd6a:	cwde   
  40dd6b:	lock scas eax,DWORD PTR es:[edi]
  40dd6d:	aad    0x52
  40dd6f:	fdivr  st,st(0)
  40dd71:	aam    0x43
  40dd73:	ficomp DWORD PTR [ecx]
  40dd75:	in     eax,0x11
  40dd77:	jo     0x40ddb6
  40dd79:	sbb    eax,0x1d700287
  40dd7e:	lods   al,BYTE PTR ds:[esi]
  40dd7f:	dec    ecx
  40dd80:	int    0xbb
  40dd82:	neg    DWORD PTR [ecx-0x30b0ceb8]
  40dd88:	in     eax,dx
  40dd89:	cmp    eax,0x43e07318
  40dd8e:	dec    edx
  40dd8f:	in     al,dx
  40dd90:	rcl    BYTE PTR [ebx+0x6b47319f],0x53
  40dd97:	jecxz  0x40dda8
  40dd99:	mov    al,ds:0xff5caff6
  40dd9e:	jbe    0x40ddb4
  40dda0:	cmc    
  40dda1:	and    esi,DWORD PTR [ecx-0x7e]
  40dda4:	sbb    al,0x2b
  40dda6:	jge    0x40ddb0
  40dda8:	pop    esp
  40dda9:	xor    BYTE PTR [esi],0xce
  40ddac:	push   0x7c
  40ddae:	xchg   ebx,eax
  40ddaf:	call   0xbefc1849
  40ddb4:	mov    eax,0xff929444
  40ddb9:	pop    ebx
  40ddba:	or     al,0x31
  40ddbc:	(bad)  
  40ddbd:	jno    0x40ddfc
  40ddbf:	or     ah,BYTE PTR [eax-0x20c58318]
  40ddc5:	mov    DWORD PTR [ecx],ecx
  40ddc7:	enter  0xeef6,0x7b
  40ddcb:	or     cl,ch
  40ddcd:	les    edi,FWORD PTR [ecx+eiz*4]
  40ddd0:	cmc    
  40ddd1:	(bad)  
  40ddd3:	lock mov eax,0x749549be
  40ddd9:	ret    
  40ddda:	lock push eax
  40dddc:	call   0x8962161d
  40dde1:	inc    ecx
  40dde2:	cld    
  40dde3:	jae    0x40dd76
  40dde5:	jg     0x40ddf4
  40dde7:	push   esi
  40dde8:	mov    BYTE PTR [eax],al
  40ddea:	cmp    BYTE PTR [edx],bl
  40ddec:	fimul  WORD PTR [ecx]
  40ddee:	xor    esp,DWORD PTR [eax+eax*4]
  40ddf1:	adc    eax,0x415e508b
  40ddf6:	pop    ebx
  40ddf7:	push   ds
  40ddf8:	sub    bh,dh
  40ddfa:	push   ecx
  40ddfb:	ret    0x2ca3
  40ddfe:	repnz aaa 
  40de00:	popf   
  40de01:	xor    al,dh
  40de03:	jne    0x40dda1
  40de05:	or     ebx,DWORD PTR [eax]
  40de07:	sbb    DWORD PTR [esi],ebp
  40de09:	sub    esi,DWORD PTR [esi+0x15ae0ca8]
  40de0f:	inc    eax
  40de10:	mov    WORD PTR [ecx+ebp*2],ds
  40de13:	push   0x2e
  40de15:	sbb    ah,BYTE PTR [esi-0x5bc9625e]
  40de1b:	and    esi,ebp
  40de1d:	jmp    0xeba2bdcb
  40de22:	mov    dl,0x47
  40de24:	outs   dx,BYTE PTR ds:[esi]
  40de25:	cli    
  40de26:	sbb    eax,0xfb8ccc80
  40de2b:	add    BYTE PTR [ebp-0x3e612455],cl
  40de31:	push   ecx
  40de32:	retf   0x43cd
  40de35:	std    
  40de36:	jnp    0x40de12
  40de38:	clc    
  40de39:	inc    ebx
  40de3a:	dec    esi
  40de3b:	mov    esp,0x32201b2a
  40de40:	aaa    
  40de41:	outs   dx,BYTE PTR ds:[esi]
  40de42:	jl     0x40de90
  40de44:	call   0x6925:0xed35705e
  40de4b:	dec    edx
  40de4c:	cs call 0x6751:0xf201d76f
  40de54:	sti    
  40de55:	xlat   BYTE PTR ds:[ebx]
  40de56:	nop
  40de57:	push   ebp
  40de58:	mov    eax,ds:0x910237b0
  40de5d:	mov    ebp,0xddf38f05
  40de62:	or     esi,DWORD PTR [ecx+0x78c755cc]
  40de68:	das    
  40de69:	sbb    dh,0x10
  40de6c:	adc    BYTE PTR [ebp-0x2ef1623d],0x4a
  40de73:	out    0xeb,al
  40de75:	dec    eax
  40de76:	rol    BYTE PTR [ecx+0x4f],1
  40de79:	std    
  40de7a:	icebp  
  40de7b:	scas   eax,DWORD PTR es:[edi]
  40de7c:	lods   eax,DWORD PTR ds:[esi]
  40de7d:	dec    esi
  40de7e:	mov    esp,0x5ba63804
  40de83:	pop    ss
  40de84:	pop    ecx
  40de85:	jle    0x40de72
  40de87:	repz cmp BYTE PTR [ebx+0x90ee33b],bh
  40de8e:	outs   dx,BYTE PTR ds:[esi]
  40de8f:	fcomp  QWORD PTR [ebx+esi*1]
  40de92:	mov    ah,0x37
  40de94:	sub    eax,0x722a3a7a
  40de99:	sahf   
  40de9a:	je     0x40def2
  40de9c:	test   BYTE PTR [edx-0x5914954f],ch
  40dea2:	imul   ecx,DWORD PTR [eax+ecx*2-0x34],0x32757fc6
  40deaa:	ud0    edi,DWORD PTR [esi-0x16]
  40deae:	(bad)  
  40deaf:	daa    
  40deb0:	lds    ebp,FWORD PTR [esi+0x7d5f3772]
  40deb6:	bound  esi,QWORD PTR [edx-0x32f27a63]
  40debc:	dec    edx
  40debe:	mov    edx,0xadbeabc2
  40dec3:	mov    DWORD PTR [edi],ebp
  40dec5:	mov    dh,0x0
  40dec7:	mov    ds:0xcaf99ae1,eax
  40decc:	push   ss
  40decd:	add    al,0xb2
  40decf:	push   0x54cc81f3
  40ded4:	pop    esi
  40ded5:	lea    edi,[eax+0x77]
  40ded8:	mov    DWORD PTR [esp+edx*8],esi
  40dedb:	mov    edx,0xc5c81634
  40dee0:	pop    edi
  40dee1:	loope  0x40df1b
  40dee3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dee4:	outs   dx,DWORD PTR ds:[esi]
  40dee5:	into   
  40dee6:	xor    BYTE PTR [edx],0x5c
  40dee9:	adc    eax,0x5ae15d53
  40deee:	pop    edx
  40deef:	sub    eax,0x1ba1bfb4
  40def4:	cwde   
  40def5:	jmp    0x40df5c
  40def7:	xchg   esp,eax
  40def8:	jo     0x40dea5
  40defa:	in     eax,dx
  40defb:	push   ebp
  40defc:	jmp    0x40df35
  40defe:	add    esp,0x54444867
  40df04:	xchg   BYTE PTR [ebx],dl
  40df06:	fdivr  st,st(5)
  40df08:	imul   edx,DWORD PTR [ebx-0x5c6ad8ec],0x9be35aff
  40df12:	jns    0x40dee6
  40df14:	mov    al,0xda
  40df16:	pop    ss
  40df17:	mov    edi,0xd89cc2c0
  40df1c:	(bad)  
  40df1d:	pop    ecx
  40df1e:	jbe    0x40df12
  40df20:	or     edx,edx
  40df22:	mov    edx,0xbd0e6e2e
  40df27:	dec    eax
  40df28:	loop   0x40df59
  40df2a:	stos   DWORD PTR es:[edi],eax
  40df2b:	jbe    0x40df70
  40df2d:	aaa    
  40df2e:	sub    eax,0x8b13d5fa
  40df33:	jge    0x40df72
  40df35:	jge    0x40df85
  40df37:	cld    
  40df38:	push   ebp
  40df39:	in     al,0xf6
  40df3b:	sub    cl,BYTE PTR [edx-0x38]
  40df3e:	dec    esp
  40df3f:	test   BYTE PTR [esi*2-0x25b93d7f],0xfc
  40df47:	jb     0x40df08
  40df49:	shl    BYTE PTR [edx],cl
  40df4b:	push   0x30815ed
  40df50:	inc    esi
  40df51:	test   al,0x7f
  40df53:	or     BYTE PTR [ecx+0x57f4bf21],0x1f
  40df5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df5b:	dec    ebp
  40df5c:	xchg   esp,eax
  40df5d:	imul   edi,DWORD PTR [ebp+0x20bd5265],0xdc776eca
  40df67:	sub    DWORD PTR [esi],edi
  40df69:	push   ebx
  40df6a:	inc    ebp
  40df6b:	and    BYTE PTR [ecx],cl
  40df6d:	fld    TBYTE PTR [edx-0x6c]
  40df70:	dec    esi
  40df71:	ja     0x40df2a
  40df73:	out    dx,al
  40df74:	xor    BYTE PTR [eax-0x3058da92],bl
  40df7a:	(bad)  
  40df7b:	std    
  40df7c:	cld    
  40df7d:	lods   al,BYTE PTR ds:[esi]
  40df7e:	xchg   ecx,eax
  40df7f:	imul   eax,edx,0x2c
  40df82:	adc    BYTE PTR [ecx],al
  40df84:	xchg   edx,eax
  40df85:	push   ebp
  40df86:	(bad)
  40df89:	sub    eax,0x29b776cf
  40df8e:	je     0x40dfc2
  40df90:	jg     0x40df97
  40df92:	cld    
  40df93:	and    dl,al
  40df95:	imul   esp,DWORD PTR [ecx-0x794f9853],0xffffffa1
  40df9c:	mov    dh,0x16
  40df9e:	pop    ecx
  40df9f:	pop    edi
  40dfa0:	mov    ebx,0x79b2fb87
  40dfa5:	jo     0x40dfd2
  40dfa7:	or     ebp,DWORD PTR [edi]
  40dfa9:	out    dx,al
  40dfaa:	mov    DWORD PTR [esi-0x70],eax
  40dfad:	adc    BYTE PTR [edi+0x5921136d],ah
  40dfb3:	aaa    
  40dfb4:	adc    al,ch
  40dfb6:	popa   
  40dfb7:	or     DWORD PTR ds:0x32fdb6af,eax
  40dfbd:	clc    
  40dfbe:	ret    0xf31e
  40dfc1:	inc    ebp
  40dfc2:	ins    DWORD PTR es:[edi],dx
  40dfc3:	cld    
  40dfc4:	aaa    
  40dfc5:	cli    
  40dfc6:	fs mov edx,0x7b7d3dce
  40dfcc:	clc    
  40dfcd:	in     al,dx
  40dfce:	xchg   ebx,eax
  40dfcf:	mov    ch,0x57
  40dfd1:	in     eax,0xc0
  40dfd3:	and    al,0x95
  40dfd5:	jno    0x40dfb4
  40dfd7:	pop    edx
  40dfd8:	and    al,0x4b
  40dfda:	(bad)  
  40dfdb:	or     BYTE PTR [edx+0x585fa1c],al
  40dfe1:	rcr    BYTE PTR [esi+0x2c12442f],cl
  40dfe7:	fcmovnbe st,st(5)
  40dfe9:	lahf   
  40dfea:	ins    BYTE PTR es:[edi],dx
  40dfeb:	or     ebx,DWORD PTR [edx+0x51]
  40dfee:	lods   eax,DWORD PTR gs:[esi]
  40dff0:	push   cs
  40dff1:	mov    ecx,gs
  40dff3:	xlat   BYTE PTR ds:[ebx]
  40dff4:	jmp    0xde71c37a
  40dff9:	jg     0x40df82
  40dffb:	xlat   BYTE PTR ds:[ebx]
  40dffc:	add    BYTE PTR [ebp-0x458b5844],al
  40e002:	fsubrp st(0),st
  40e004:	lods   eax,DWORD PTR ds:[esi]
  40e005:	std    
  40e006:	push   edi
  40e007:	adc    BYTE PTR [ebp+0x54],bh
  40e00a:	aam    0xb3
  40e00c:	(bad)  
  40e00d:	mov    dh,0xf2
  40e00f:	stos   DWORD PTR es:[edi],eax
  40e010:	popf   
  40e011:	mov    edx,DWORD PTR [ebx-0x72990920]
  40e017:	sti    
  40e018:	push   eax
  40e019:	test   BYTE PTR [edx+0x6b],cl
  40e01c:	push   ecx
  40e01d:	pusha  
  40e01e:	sbb    dh,BYTE PTR [eax]
  40e020:	xchg   dl,dh
  40e022:	lods   al,BYTE PTR ds:[esi]
  40e023:	in     al,0xba
  40e025:	jmp    0xd520:0x10db331c
  40e02c:	sub    cl,BYTE PTR [edi+0x3045841f]
  40e032:	push   esi
  40e033:	and    eax,0xf22f8f5d
  40e038:	or     al,0x19
  40e03a:	dec    esp
  40e03b:	and    eax,0x5f7c56c5
  40e040:	and    al,al
  40e042:	and    ebp,DWORD PTR [ebp+0x1a]
  40e045:	bound  ecx,QWORD PTR [eax+0x1]
  40e048:	jae    0x40e0a1
  40e04a:	inc    esi
  40e04b:	adc    DWORD PTR fs:[ebp+ebp*2+0x72],edx
  40e050:	(bad)  
  40e051:	in     al,0xae
  40e053:	add    al,0xc4
  40e055:	xor    al,BYTE PTR [eax+0x45e3a3e8]
  40e05b:	jns    0x40e088
  40e05d:	sahf   
  40e05e:	jp     0x40e06c
  40e060:	mov    al,0x45
  40e062:	ss (bad) 
  40e065:	mov    ds:0x372b6905,eax
  40e06a:	push   edi
  40e06b:	xchg   edx,eax
  40e06c:	rol    edi,cl
  40e06e:	retf   0x7546
  40e071:	jb     0x40e0d0
  40e073:	push   ebp
  40e074:	js     0x40e0c3
  40e076:	cs out dx,al
  40e078:	stc    
  40e079:	cmp    DWORD PTR [esi],esp
  40e07b:	xchg   ebp,eax
  40e07c:	fnsave [esi+0x3ddbd277]
  40e082:	cwde   
  40e083:	dec    ecx
  40e084:	sti    
  40e085:	push   cs
  40e086:	test   BYTE PTR [esi-0x25ce2022],al
  40e08c:	scas   al,BYTE PTR es:[edi]
  40e08d:	push   es
  40e08e:	pusha  
  40e08f:	dec    edx
  40e090:	lahf   
  40e091:	mov    ebp,DWORD PTR [edx-0x6e]
  40e094:	in     al,dx
  40e095:	es jnp 0x40e0c9
  40e098:	jl     0x40e0b6
  40e09a:	mov    dl,0x43
  40e09c:	fs iret 
  40e09e:	sub    edi,DWORD PTR [edx]
  40e0a0:	jl     0x40e0f1
  40e0a2:	aad    0xea
  40e0a4:	mov    ecx,0x77791bcf
  40e0a9:	test   eax,0x97e3e7df
  40e0ae:	mov    ah,0xf9
  40e0b0:	cmp    DWORD PTR [eax-0x71],ebp
  40e0b3:	jo     0x40e133
  40e0b5:	jl     0x40e073
  40e0b7:	xchg   ebx,eax
  40e0b8:	mov    ecx,ebx
  40e0ba:	or     DWORD PTR [eax-0x42],edx
  40e0bd:	ins    DWORD PTR es:[edi],dx
  40e0be:	out    0xd7,al
  40e0c0:	add    bl,ch
  40e0c2:	ins    DWORD PTR es:[edi],dx
  40e0c3:	test   eax,0x4d7677d5
  40e0c8:	and    eax,0xaec85d89
  40e0cd:	test   BYTE PTR [ecx-0x11],dh
  40e0d0:	jp     0x40e0e9
  40e0d2:	mov    al,BYTE PTR [eax+0x12d4ef26]
  40e0d8:	cld    
  40e0d9:	push   ebx
  40e0da:	addr16 and al,0x87
  40e0dd:	(bad)  
  40e0de:	out    dx,eax
  40e0df:	test   al,0x4b
  40e0e1:	cld    
  40e0e2:	jae    0x40e15a
  40e0e4:	les    esi,FWORD PTR [ecx]
  40e0e6:	xchg   esi,eax
  40e0e7:	fisubr WORD PTR [ebx+0x4ace93cf]
  40e0ed:	cld    
  40e0ee:	cmp    BYTE PTR [edx-0x6bace10a],0x4f
  40e0f5:	je     0x40e14a
  40e0f7:	fnstenv [edi+0x5318ef7d]
  40e0fd:	cdq    
  40e0fe:	dec    ecx
  40e0ff:	mov    ecx,0x8209b435
  40e104:	push   es
  40e105:	dec    eax
  40e106:	jo     0x40e127
  40e108:	fbld   TBYTE PTR ds:0xc19e25a5
  40e10e:	frstor ds:0x66251840
  40e114:	push   esp
  40e115:	popa   
  40e116:	cmp    BYTE PTR [esi],bl
  40e118:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e119:	mov    dl,0x9d
  40e11b:	mov    al,ds:0x6143e80f
  40e120:	lods   al,BYTE PTR ds:[esi]
  40e121:	push   ebx
  40e122:	sti    
  40e123:	dec    esp
  40e124:	lods   eax,DWORD PTR ds:[esi]
  40e125:	lds    esp,FWORD PTR [ecx+esi*2+0x53077e2e]
  40e12c:	mov    ah,0x54
  40e12e:	or     edx,DWORD PTR [eax+0x5a]
  40e131:	lahf   
  40e132:	aam    0x5f
  40e134:	test   DWORD PTR [ecx-0x55],edx
  40e137:	or     al,0x26
  40e139:	xchg   edx,eax
  40e13a:	mov    esi,0x2c219c98
  40e13f:	mov    cl,0xbe
  40e141:	in     eax,dx
  40e142:	aam    0xcf
  40e144:	fbstp  TBYTE PTR [edi-0xac37bfd]
  40e14a:	sbb    al,0xa3
  40e14c:	hlt    
  40e14d:	retf   0x8942
  40e150:	sbb    al,BYTE PTR [ebx-0x6f7a4dcf]
  40e156:	loop   0x40e0f3
  40e158:	lock sbb ch,BYTE PTR ds:0xa0bcfc7e
  40e15f:	xchg   ebx,eax
  40e160:	mov    ah,0xc7
  40e162:	mov    ch,0x78
  40e164:	sbb    edx,DWORD PTR [edi+0x11]
  40e167:	ins    DWORD PTR es:[edi],dx
  40e168:	or     eax,0xf1a3e2e6
  40e16d:	pop    ebp
  40e16e:	mov    eax,ds:0x4a8415be
  40e173:	xor    ah,ah
  40e175:	iret   
  40e176:	shr    BYTE PTR [ecx+0x17970fc2],cl
  40e17c:	mov    al,bl
  40e17e:	out    dx,al
  40e17f:	call   0xbb66946a
  40e184:	repz aas 
  40e186:	test   al,0xea
  40e188:	repz (bad) 
  40e18a:	mov    ebx,0x7048547a
  40e18f:	popa   
  40e190:	jg     0x40e1f0
  40e192:	push   edx
  40e193:	xchg   DWORD PTR [edx-0x22737ac5],edi
  40e199:	xor    ebx,DWORD PTR [eax]
  40e19b:	add    al,BYTE PTR [esi]
  40e19d:	jae    0x40e1ab
  40e19f:	adc    DWORD PTR [eax+0x75],esp
  40e1a2:	aaa    
  40e1a3:	out    0x92,al
  40e1a5:	cli    
  40e1a6:	cwde   
  40e1a7:	dec    esi
  40e1a8:	mov    ebx,DWORD PTR [ebx+0x56]
  40e1ab:	push   ebp
  40e1ac:	gs inc eax
  40e1ae:	inc    ecx
  40e1af:	stos   BYTE PTR es:[edi],al
  40e1b0:	push   ecx
  40e1b1:	mov    ds:0xa9f06bf3,al
  40e1b6:	out    0xfa,al
  40e1b8:	fwait
  40e1b9:	aad    0x19
  40e1bb:	out    0xe3,al
  40e1bd:	cmp    eax,ebx
  40e1bf:	loop   0x40e18e
  40e1c1:	imul   ebx,DWORD PTR [eax],0x7498547c
  40e1c7:	retf   
  40e1c8:	xor    al,cl
  40e1ca:	inc    ebp
  40e1cb:	retf   0x619
  40e1ce:	mov    esp,0xc3f0a892
  40e1d3:	mov    ds:0x1d0b919,eax
  40e1d8:	jl     0x40e164
  40e1da:	sbb    bl,BYTE PTR [edx]
  40e1dc:	out    dx,eax
  40e1dd:	xor    dh,al
  40e1df:	push   ss
  40e1e0:	ins    DWORD PTR es:[edi],dx
  40e1e1:	sti    
  40e1e2:	add    ecx,DWORD PTR [esi+0x6452fc47]
  40e1e8:	pop    edi
  40e1e9:	or     ebp,eax
  40e1eb:	pop    eax
  40e1ec:	inc    edi
  40e1ed:	jecxz  0x40e258
  40e1ef:	and    bh,BYTE PTR [ecx]
  40e1f1:	enter  0xe825,0xbd
  40e1f5:	mov    edi,0xe1c74f5c
  40e1fa:	dec    ebx
  40e1fb:	jp     0x40e1a7
  40e1fd:	das    
  40e1fe:	xchg   DWORD PTR [esi+0x1c],ebp
  40e201:	aam    0x4e
  40e203:	sbb    al,0xd5
  40e205:	ja     0x40e21b
  40e207:	xchg   ebp,eax
  40e208:	pop    esi
  40e209:	popa   
  40e20a:	in     eax,0xa0
  40e20c:	call   FWORD PTR [ebp+0x6b]
  40e20f:	in     al,0x40
  40e211:	sub    BYTE PTR [edx+eax*8-0x4d],al
  40e215:	push   0xffffffd1
  40e217:	aad    0x62
  40e219:	mov    bl,0x1d
  40e21c:	xor    eax,0x6f84b837
  40e221:	mov    eax,0xe40297b4
  40e226:	sbb    bl,BYTE PTR [edi-0x22]
  40e229:	dec    ecx
  40e22a:	lods   al,BYTE PTR ds:[esi]
  40e22b:	mov    dh,0x4a
  40e22d:	mov    DWORD PTR [esp+eax*4-0x73],edi
  40e231:	push   ebp
  40e232:	or     al,0x4c
  40e234:	fiadd  WORD PTR [edx-0x78d7b052]
  40e23a:	dec    edi
  40e23b:	add    BYTE PTR [eax-0x4],dl
  40e23e:	out    dx,al
  40e23f:	scas   al,BYTE PTR es:[edi]
  40e240:	retf   0xd726
  40e243:	shl    ebp,1
  40e245:	aam    0x6a
  40e247:	cdq    
  40e248:	scas   al,BYTE PTR es:[edi]
  40e249:	or     al,0xa8
  40e24b:	xchg   esp,eax
  40e24c:	into   
  40e24d:	fst    QWORD PTR gs:[edi+0x71b97ea6]
  40e254:	push   ebx
  40e255:	mov    dl,bh
  40e257:	in     eax,0x3f
  40e259:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e25a:	cmp    edx,DWORD PTR [edx-0x24]
  40e25d:	sbb    BYTE PTR [ebp-0x76],dh
  40e260:	mov    bl,0xbf
  40e262:	iret   
  40e263:	adc    BYTE PTR [ecx+0x10],0x33
  40e267:	mov    edi,0x9fd27116
  40e26c:	int3   
  40e26d:	jmp    0x40e272
  40e26f:	push   ss
  40e270:	pop    ecx
  40e271:	fcom   DWORD PTR [eax-0x7139745f]
  40e277:	xchg   ebp,eax
  40e278:	(bad)  
  40e279:	out    dx,al
  40e27a:	inc    ecx
  40e27b:	ror    BYTE PTR gs:[edx+0x2c],1
  40e27f:	mov    bl,BYTE PTR [esi+0x45]
  40e282:	cdq    
  40e283:	mov    bh,0x21
  40e285:	inc    ecx
  40e287:	mov    edi,0x4df46943
  40e28c:	inc    esp
  40e28d:	xor    esp,edi
  40e28f:	cmc    
  40e290:	sahf   
  40e291:	push   ebx
  40e292:	sbb    ah,BYTE PTR [ebp+0x138acc2f]
  40e298:	repnz pop ebp
  40e29a:	test   eax,0x31dd656e
  40e29f:	test   BYTE PTR [eax-0x26],0x69
  40e2a3:	shl    BYTE PTR [eax],cl
  40e2a5:	dec    ebx
  40e2a6:	test   BYTE PTR [eax],dh
  40e2a8:	push   esp
  40e2a9:	xchg   edx,eax
  40e2aa:	sti    
  40e2ab:	or     al,0x67
  40e2ad:	jge    0x40e2b9
  40e2af:	jp     0x40e279
  40e2b1:	cli    
  40e2b2:	xchg   edi,eax
  40e2b3:	int    0x49
  40e2b5:	test   eax,0xb2f1dae7
  40e2ba:	cmp    eax,0x2f29079c
  40e2bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2c0:	adc    DWORD PTR [eax+0x33],ebx
  40e2c3:	sub    DWORD PTR ds:0x63c8b50a,ebx
  40e2c9:	xchg   ebp,eax
  40e2ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2cb:	pop    esi
  40e2cc:	adc    bl,BYTE PTR [esi]
  40e2ce:	inc    eax
  40e2cf:	cmp    ch,BYTE PTR [edi-0x47b7ee55]
  40e2d5:	xchg   esp,eax
  40e2d6:	aaa    
  40e2d7:	cmp    BYTE PTR [edi+0x2a0ab714],al
  40e2dd:	arpl   WORD PTR [ebx-0x35],cx
  40e2e0:	dec    esi
  40e2e1:	daa    
  40e2e2:	xchg   edi,eax
  40e2e3:	icebp  
  40e2e4:	inc    eax
  40e2e5:	push   DWORD PTR [esi+ebp*1-0x6b5ad32]
  40e2ec:	test   eax,0xd81ff5a5
  40e2f1:	inc    ecx
  40e2f2:	and    DWORD PTR [ebx+0x62],0xc4e5bf51
  40e2f9:	jae    0x40e376
  40e2fb:	scas   eax,DWORD PTR es:[edi]
  40e2fc:	ds in  al,dx
  40e2fe:	or     dl,0x69
  40e301:	repz mov ecx,0xf9bc1695
  40e307:	lds    ecx,FWORD PTR [ebp+0x3e]
  40e30a:	mov    cl,BYTE PTR [esi+0x7d201c5b]
  40e310:	hlt    
  40e311:	js     0x40e2ea
  40e313:	push   cs
  40e314:	repz xor BYTE PTR [edx+0x206628d2],bl
  40e31b:	and    DWORD PTR [edx-0x5],edx
  40e31e:	sar    DWORD PTR [eax-0x1858f23e],1
  40e324:	mov    al,0x2e
  40e326:	leave  
  40e327:	or     edi,DWORD PTR [eax]
  40e329:	push   0xfcf10427
  40e32e:	pop    ebp
  40e32f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e330:	pop    ebx
  40e331:	js     0x40e390
  40e333:	sbb    DWORD PTR [ecx],edi
  40e335:	popf   
  40e336:	in     al,0xf1
  40e338:	iret   
  40e339:	sbb    BYTE PTR [esi+0x2981fd92],ch
  40e33f:	adc    dl,bh
  40e341:	fmul   QWORD PTR [esp+ebx*4-0xaba119b]
  40e348:	rcl    BYTE PTR [esi-0xb],0x1d
  40e34c:	push   cs
  40e34d:	shl    BYTE PTR [esp+ebp*1],cl
  40e350:	jmp    0x40e2ec
  40e352:	dec    ecx
  40e353:	adc    al,0xa3
  40e355:	sti    
  40e356:	mov    ecx,0xed7d04d4
  40e35b:	sub    al,0x98
  40e35d:	fdivr  st,st(4)
  40e35f:	cmp    eax,0x9414b7dd
  40e364:	jbe    0x40e3a0
  40e366:	test   al,0xb3
  40e368:	dec    esp
  40e369:	repz xor esp,DWORD PTR [ecx-0x39]
  40e36d:	(bad)  
  40e36e:	push   ebp
  40e36f:	sub    ebp,esp
  40e371:	lods   eax,DWORD PTR ds:[esi]
  40e372:	jecxz  0x40e319
  40e374:	push   ebp
  40e375:	mov    edx,0xe7225014
  40e37a:	sub    BYTE PTR [edx+0x31],dh
  40e37d:	push   edx
  40e37e:	sub    DWORD PTR [ebx+0x67],edx
  40e381:	jmp    0xb3cb:0x7bd9e577
  40e388:	add    DWORD PTR [edx],0xe79039b4
  40e38e:	sub    al,0xc9
  40e390:	cmp    DWORD PTR [eax-0xd],ebx
  40e393:	cdq    
  40e394:	cwde   
  40e395:	jg     0x40e324
  40e397:	cmp    DWORD PTR [esi-0x5e],esp
  40e39a:	mov    ebx,0x5bff69b6
  40e39f:	and    bl,BYTE PTR [ebx+0x1ba15a40]
  40e3a5:	enter  0x31ae,0xbc
  40e3a9:	jge    0x40e3ca
  40e3ab:	dec    ebp
  40e3ac:	add    al,0xe5
  40e3ae:	cli    
  40e3af:	arpl   WORD PTR [ebx],sp
  40e3b1:	add    BYTE PTR [esi+0x78680569],0xd0
  40e3b8:	adc    esi,eax
  40e3ba:	xchg   ecx,eax
  40e3bb:	and    eax,ebx
  40e3bd:	xor    al,0xfb
  40e3bf:	fist   DWORD PTR [eax-0x7f]
  40e3c2:	enter  0xd70,0x68
  40e3c6:	loop   0x40e348
  40e3c8:	into   
  40e3c9:	mov    edx,?
  40e3cb:	out    0x34,al
  40e3cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3ce:	int3   
  40e3cf:	inc    ecx
  40e3d0:	loope  0x40e400
  40e3d2:	lahf   
  40e3d3:	lods   al,BYTE PTR ds:[esi]
  40e3d4:	repz jne 0x40e3e9
  40e3d7:	inc    edx
  40e3d8:	into   
  40e3d9:	jne    0x40e383
  40e3db:	jecxz  0x40e454
  40e3dd:	sbb    ebp,DWORD PTR [ebx+0xd00b67b]
  40e3e3:	sub    al,0xee
  40e3e5:	push   ecx
  40e3e6:	aam    0xd2
  40e3e8:	sub    eax,0x18de62d8
  40e3ed:	sub    DWORD PTR [edi],esp
  40e3ef:	in     eax,0xe5
  40e3f1:	lods   eax,DWORD PTR ds:[esi]
  40e3f2:	xlat   BYTE PTR ds:[ebx]
  40e3f3:	sub    edx,DWORD PTR [eax+edi*2-0x5]
  40e3f7:	arpl   bx,bp
  40e3f9:	mov    cl,0xa2
  40e3fb:	call   0xad98c50d
  40e400:	mov    ebp,0xf2b83a8b
  40e405:	call   FWORD PTR [esi]
  40e407:	ins    DWORD PTR es:[edi],dx
  40e408:	inc    edx
  40e409:	icebp  
  40e40a:	imul   ebx,DWORD PTR [ebp+0x6dc1d4ee],0x37
  40e411:	stc    
  40e412:	mov    ebx,DWORD PTR [edi+0x5a]
  40e415:	dec    ebx
  40e416:	adc    DWORD PTR [eax+eax*4+0x6795f208],ecx
  40e41d:	add    al,0x93
  40e41f:	ror    BYTE PTR [ecx],1
  40e421:	add    BYTE PTR [edx+0x16],ch
  40e424:	leave  
  40e425:	sbb    eax,0xdb5dfa7a
  40e42a:	jle    0x40e3dc
  40e42c:	sub    dl,BYTE PTR [ecx]
  40e42e:	cmp    dl,bl
  40e430:	jecxz  0x40e450
  40e432:	push   esp
  40e433:	je     0x40e48d
  40e435:	in     eax,0x40
  40e437:	gs jg  0x40e41a
  40e43a:	je     0x40e41e
  40e43c:	ja     0x40e422
  40e43e:	fild   DWORD PTR [ebx-0x3b54b016]
  40e444:	dec    ecx
  40e445:	inc    ebp
  40e446:	pop    eax
  40e447:	mov    edi,es
  40e449:	push   ss
  40e44a:	stos   BYTE PTR es:[edi],al
  40e44b:	out    dx,eax
  40e44c:	pop    edx
  40e44d:	mov    edx,0xfd817781
  40e452:	sbb    dl,BYTE PTR [edi-0x49]
  40e455:	je     0x40e43e
  40e457:	fisubr WORD PTR [esi+0x697d7a8f]
  40e45d:	bnd jbe 0x40e409
  40e460:	push   0x3aebc4c1
  40e465:	out    dx,al
  40e466:	sub    ecx,ebx
  40e468:	in     al,dx
  40e469:	mov    bh,0x68
  40e46b:	mov    edx,0x2d633ed1
  40e470:	jno    0x40e4a3
  40e472:	add    esi,DWORD PTR [ecx+ecx*8]
  40e475:	mov    al,0x0
  40e477:	(bad)  
  40e479:	aaa    
  40e47a:	jne    0x40e444
  40e47c:	inc    eax
  40e47d:	push   eax
  40e47e:	fmul   QWORD PTR [ebx*2-0x43246be6]
  40e485:	arpl   WORD PTR [esi+0x1c],si
  40e488:	cld    
  40e489:	pusha  
  40e48a:	ins    DWORD PTR es:[edi],dx
  40e48b:	lahf   
  40e48c:	pop    esp
  40e48d:	iret   
  40e48e:	jmp    0x7aa3:0x37a11e2b
  40e495:	das    
  40e496:	and    DWORD PTR [ebx],ebp
  40e498:	pop    ds
  40e499:	cmc    
  40e49a:	xchg   esi,eax
  40e49b:	mov    edx,0x62c21603
  40e4a0:	mov    al,0x62
  40e4a2:	lods   eax,DWORD PTR ds:[esi]
  40e4a3:	out    0xec,eax
  40e4a5:	adc    ebx,DWORD PTR [eax]
  40e4a7:	adc    DWORD PTR [edx+0x571ff786],edx
  40e4ad:	lahf   
  40e4ae:	(bad)  
  40e4af:	push   ecx
  40e4b0:	push   ds
  40e4b1:	(bad)  
  40e4b3:	pop    ebx
  40e4b4:	jne    0x40e468
  40e4b6:	jnp    0x40e501
  40e4b8:	sub    al,0x48
  40e4ba:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40e4bc:	and    ebx,DWORD PTR [eax-0x28]
  40e4bf:	loopne 0x40e4d6
  40e4c1:	je     0x40e4dd
  40e4c3:	inc    eax
  40e4c4:	add    eax,0xa95ba378
  40e4c9:	clc    
  40e4ca:	dec    esp
  40e4cb:	add    eax,0xe313e39c
  40e4d0:	gs pop sp
  40e4d3:	cmp    BYTE PTR [edx-0x42df9805],bh
  40e4d9:	sub    BYTE PTR [esi-0x163c78c6],0x4b
  40e4e0:	sbb    DWORD PTR [esi+eax*8-0x32b17e6a],ecx
  40e4e7:	inc    ebx
  40e4e8:	jp     0x40e511
  40e4ea:	repz cmp ebx,DWORD PTR [ebp-0x51adeafa]
  40e4f1:	gs xor eax,0xe9a3f183
  40e4f7:	into   
  40e4f8:	jle    0x40e4de
  40e4fa:	mov    ebx,0x9bbf6854
  40e4ff:	adc    bh,BYTE PTR [eax+0x7218ad8e]
  40e505:	out    dx,al
  40e506:	scas   eax,DWORD PTR es:[edi]
  40e507:	lea    edi,[edi+0x4]
  40e50a:	mov    ds:0xd1e10f35,al
  40e50f:	sahf   
  40e510:	mov    ecx,0x2ef006ce
  40e515:	jbe    0x40e514
  40e517:	jecxz  0x40e533
  40e519:	and    eax,0x7d94e24c
  40e51e:	jmp    0x6f65c05
  40e523:	inc    eax
  40e524:	mov    bl,0xb6
  40e526:	int3   
  40e527:	test   al,0xfe
  40e529:	mov    WORD PTR [ebx],fs
  40e52b:	push   esi
  40e52c:	mov    ebx,0x2723d1c4
  40e531:	jl     0x40e54f
  40e533:	push   cs
  40e534:	sti    
  40e535:	adc    ebp,DWORD PTR [eax]
  40e537:	ds fs data16 daa 
  40e53b:	mov    al,ds:0xccf37b6b
  40e540:	pop    edx
  40e541:	adc    DWORD PTR [eax-0x56],esp
  40e544:	jmp    0x5edb:0xaf8c0721
  40e54b:	dec    ebx
  40e54c:	(bad)  
  40e54d:	jmp    0x8f020204
  40e552:	clc    
  40e553:	das    
  40e554:	test   DWORD PTR [edi+0x24a31e0f],ecx
  40e55a:	(bad)  
  40e55b:	sub    ecx,ebp
  40e55d:	adc    BYTE PTR [edx],bh
  40e55f:	cmp    eax,DWORD PTR [ebp+0x34]
  40e562:	pop    edx
  40e563:	les    ecx,FWORD PTR [ebp+0x4a]
  40e566:	sub    al,0x9f
  40e568:	fs scas al,BYTE PTR es:[edi]
  40e56a:	jp     0x40e52b
  40e56c:	shl    BYTE PTR ds:0x45a46600,cl
  40e572:	out    dx,al
  40e573:	inc    ebp
  40e574:	lods   eax,DWORD PTR ds:[esi]
  40e575:	push   eax
  40e576:	push   esi
  40e577:	inc    esi
  40e578:	outs   dx,BYTE PTR ds:[esi]
  40e579:	push   esp
  40e57a:	call   0x844c:0x442bc31a
  40e581:	test   al,0xd
  40e583:	pop    es
  40e584:	adc    esi,DWORD PTR [esi-0x45]
  40e587:	int    0x29
  40e589:	pop    esp
  40e58a:	aaa    
  40e58b:	mov    al,ds:0xf8730c70
  40e590:	or     BYTE PTR [edx-0x7e319d0b],al
  40e596:	add    al,bl
  40e598:	push   0x56
  40e59a:	outs   dx,DWORD PTR ds:[esi]
  40e59b:	jg     0x40e5e0
  40e59d:	mov    ?,WORD PTR [edi]
  40e59f:	arpl   WORD PTR [ebx+0x12],dx
  40e5a2:	ret    
  40e5a3:	dec    eax
  40e5a4:	add    cl,BYTE PTR [ecx-0x64773275]
  40e5aa:	or     ch,dh
  40e5ac:	stc    
  40e5ad:	cmp    ch,BYTE PTR [ebx+0x2c]
  40e5b0:	lock ror DWORD PTR [ebx+0x7],1
  40e5b4:	test   ebp,0xb1ba7b67
  40e5ba:	adc    eax,0xd81120c0
  40e5bf:	jne    0x40e613
  40e5c1:	int    0x70
  40e5c3:	xchg   esi,eax
  40e5c4:	pop    es
  40e5c5:	push   es
  40e5c6:	cmp    BYTE PTR [ecx+ecx*2+0x38],al
  40e5ca:	pop    ebx
  40e5cb:	add    esi,esp
  40e5cd:	dec    edi
  40e5ce:	sub    dh,BYTE PTR [eax]
  40e5d0:	jne    0x40e598
  40e5d2:	stos   DWORD PTR es:[edi],eax
  40e5d3:	xor    eax,0xa72563de
  40e5d8:	mov    ch,BYTE PTR [eax]
  40e5da:	arpl   WORD PTR [ecx-0x361414e4],dx
  40e5e0:	xchg   ebx,eax
  40e5e1:	les    ecx,FWORD PTR [edi-0x7527f407]
  40e5e7:	mov    al,ds:0x170f299e
  40e5ec:	dec    edx
  40e5ed:	add    al,0x71
  40e5ef:	jecxz  0x40e632
  40e5f1:	cmp    dl,BYTE PTR [edi+0x16091ac4]
  40e5f7:	mov    dl,0x4b
  40e5f9:	mov    ebp,0xb367cffa
  40e5fe:	cmc    
  40e5ff:	outs   dx,BYTE PTR ds:[esi]
  40e600:	push   ebp
  40e601:	bound  ebp,QWORD PTR [edi+0x33]
  40e604:	les    edx,FWORD PTR [ebp+0x45495aeb]
  40e60a:	out    dx,al
  40e60b:	enter  0x8e10,0xcc
  40e60f:	pop    edx
  40e610:	inc    edi
  40e611:	jp     0x40e64e
  40e613:	mov    dh,0x46
  40e615:	cmp    al,0xb6
  40e617:	xchg   DWORD PTR [ebp+0x687ed4f2],eax
  40e61d:	loopne 0x40e652
  40e61f:	mov    WORD PTR [edi-0x26],ds
  40e622:	iret   
  40e623:	cdq    
  40e624:	jo     0x40e62c
  40e626:	sbb    al,0xe8
  40e628:	sbb    ah,bh
  40e62a:	jb     0x40e65e
  40e62c:	xor    edi,DWORD PTR [ebx]
  40e62e:	lods   al,BYTE PTR ds:[esi]
  40e62f:	imul   eax,DWORD PTR [eax],0xfffffff1
  40e632:	adc    esi,DWORD PTR [ecx-0x3b]
  40e635:	dec    edi
  40e636:	(bad)  
  40e637:	and    al,0x2b
  40e639:	jmp    0xcd2b:0x5cc757fd
  40e640:	in     eax,0x8b
  40e642:	lahf   
  40e643:	cmp    bl,BYTE PTR [edx+0x2e]
  40e646:	mov    eax,0x334a1a3c
  40e64b:	ds out dx,eax
  40e64d:	mov    bh,0xe
  40e64f:	push   0x37ee343e
  40e654:	(bad)  
  40e655:	sbb    DWORD PTR [ecx+0x473b4284],esi
  40e65b:	(bad)  
  40e65c:	push   ebx
  40e65d:	std    
  40e65e:	add    eax,0x71f107f7
  40e663:	inc    ecx
  40e664:	or     al,0xff
  40e666:	(bad)  
  40e667:	ins    BYTE PTR es:[edi],dx
  40e668:	(bad)  [edi]
  40e66a:	stc    
  40e66b:	int3   
  40e66c:	leave  
  40e66d:	jbe    0x40e688
  40e66f:	xor    BYTE PTR [eax-0x28],dh
  40e672:	adc    ch,BYTE PTR [eax+0x68]
  40e675:	sbb    al,0x6f
  40e677:	shr    DWORD PTR [edx],1
  40e679:	push   0x2ca520f
  40e67e:	xor    eax,0xea31845
  40e683:	xchg   ebx,eax
  40e684:	dec    ecx
  40e685:	mov    ds:0x8bc0378e,eax
  40e68a:	idiv   BYTE PTR [ecx-0x3771c2a4]
  40e690:	mov    DWORD PTR [ecx],edx
  40e692:	inc    esp
  40e693:	push   ds
  40e694:	cmp    ebp,ebp
  40e696:	push   0xa8e71605
  40e69b:	cmc    
  40e69c:	test   BYTE PTR [eax+ebp*2-0x47f9aafc],ah
  40e6a3:	fidiv  WORD PTR [ebx-0x38]
  40e6a6:	adc    ch,BYTE PTR [ebx]
  40e6a8:	jbe    0x40e64f
  40e6aa:	sub    eax,ebp
  40e6ac:	ja     0x40e679
  40e6ae:	jne    0x40e69f
  40e6b0:	push   esi
  40e6b1:	or     al,0xf4
  40e6b3:	or     eax,0x262f98bb
  40e6b8:	adc    eax,DWORD PTR ds:[ecx-0x3ad89fc4]
  40e6bf:	jge    0x40e739
  40e6c1:	sbb    dl,ah
  40e6c3:	jl     0x40e717
  40e6c5:	pop    esp
  40e6c6:	out    dx,eax
  40e6c7:	test   DWORD PTR [edx],ebx
  40e6c9:	pusha  
  40e6ca:	mov    ch,0x54
  40e6cc:	jo     0x40e6e5
  40e6ce:	lock inc eax
  40e6d0:	ret    0x22a6
  40e6d3:	and    ebp,DWORD PTR [edx]
  40e6d5:	or     BYTE PTR [ebx+0x38790c5b],ch
  40e6db:	adc    DWORD PTR [edi],ebx
  40e6dd:	mov    ds:0x17d481a9,eax
  40e6e2:	call   0x40cf:0x88b2a411
  40e6e9:	dec    edx
  40e6ea:	xchg   BYTE PTR [ecx],bh
  40e6ec:	or     DWORD PTR ds:0x92a6d9bc,esp
  40e6f2:	fisttp QWORD PTR [ebx]
  40e6f4:	and    DWORD PTR [edi+0x4c21e397],edx
  40e6fa:	add    edx,DWORD PTR [edi]
  40e6fc:	and    eax,0x40892f41
  40e701:	or     al,0x71
  40e703:	add    BYTE PTR ds:0x42d50005,al
  40e709:	sbb    eax,DWORD PTR [eax]
  40e70b:	dec    eax
  40e70c:	(bad)  
  40e70d:	cli    
  40e70e:	clc    
  40e70f:	in     al,0xb9
  40e711:	jae    0x40e701
  40e713:	sub    BYTE PTR [ebx-0x5d9923f6],bl
  40e719:	ins    DWORD PTR es:[edi],dx
  40e71a:	cmc    
  40e71b:	pop    esi
  40e71c:	enter  0x2acd,0xaa
  40e720:	lods   eax,DWORD PTR ds:[esi]
  40e721:	mov    ebp,0xbf5136d
  40e726:	adc    BYTE PTR [ebx-0x4f3e8be0],ah
  40e72c:	in     eax,dx
  40e72d:	fst    QWORD PTR [ebx+ecx*2]
  40e730:	or     eax,0xb5ee44cf
  40e735:	push   ecx
  40e736:	das    
  40e737:	xor    DWORD PTR [ebx],edi
  40e739:	popf   
  40e73a:	daa    
  40e73b:	mov    dh,0xa5
  40e73d:	sti    
  40e73e:	mov    eax,0xb65c4e55
  40e743:	xchg   ebx,eax
  40e744:	mov    BYTE PTR [esi+ecx*4+0x3d7b3e8],0x12
  40e74c:	out    dx,eax
  40e74d:	add    al,0xeb
  40e750:	push   0x6c0692a
  40e755:	shl    BYTE PTR [ecx+0x11b75075],cl
  40e75b:	lahf   
  40e75c:	adc    DWORD PTR [ebp+0x622bb270],ecx
  40e762:	sub    ch,ch
  40e764:	push   ecx
  40e765:	xchg   esp,eax
  40e766:	dec    eax
  40e767:	lods   al,BYTE PTR ds:[esi]
  40e768:	sti    
  40e769:	pop    ebp
  40e76a:	fnop   
  40e76c:	pop    edi
  40e76d:	xchg   esi,eax
  40e76e:	jp     0x40e740
  40e770:	xor    eax,0x7987346
  40e775:	pop    ebp
  40e776:	shr    BYTE PTR [eax+0x6cb80a54],cl
  40e77c:	out    dx,eax
  40e77d:	mov    esi,0x1a38e1c7
  40e782:	in     al,0xfc
  40e784:	loopne 0x40e780
  40e786:	inc    ebp
  40e787:	gs sbb ebx,edi
  40e78a:	push   0x3fad8600
  40e78f:	mov    edx,0xe86cc30e
  40e794:	imul   eax,DWORD PTR [edx+0x1b],0x6e
  40e798:	or     BYTE PTR [edx-0x4a590629],ch
  40e79e:	data16 jg 0x40e792
  40e7a1:	les    ebp,FWORD PTR [ebx]
  40e7a3:	imul   eax,esp,0xffffffbb
  40e7a6:	(bad)  
  40e7a7:	cli    
  40e7a8:	int    0xa0
  40e7aa:	shr    eax,cl
  40e7ac:	push   0xd0b83e92
  40e7b1:	sbb    al,0x69
  40e7b3:	daa    
  40e7b4:	cmp    ecx,ecx
  40e7b6:	sbb    DWORD PTR [ecx],ebx
  40e7b8:	arpl   di,cx
  40e7ba:	add    BYTE PTR [ebp+0x2bdde7e2],0xdd
  40e7c1:	adc    al,0x90
  40e7c3:	aam    0xde
  40e7c5:	outs   dx,DWORD PTR ds:[esi]
  40e7c6:	jecxz  0x40e829
  40e7c8:	loope  0x40e782
  40e7ca:	sub    al,0xbc
  40e7cc:	sub    eax,0xc64ea71d
  40e7d1:	shl    cl,1
  40e7d3:	xchg   esi,edx
  40e7d5:	outs   dx,DWORD PTR ds:[esi]
  40e7d6:	sbb    al,0xee
  40e7d8:	mov    esp,0x317399b4
  40e7dd:	lahf   
  40e7de:	and    ecx,DWORD PTR [ecx-0x6]
  40e7e1:	push   eax
  40e7e2:	in     eax,dx
  40e7e3:	mov    esi,eax
  40e7e5:	dec    ecx
  40e7e6:	cdq    
  40e7e7:	mov    al,0xe0
  40e7e9:	mov    bl,0x84
  40e7eb:	(bad)  
  40e7ed:	icebp  
  40e7ee:	rcr    edi,cl
  40e7f0:	pop    ebp
  40e7f1:	out    dx,al
  40e7f2:	dec    esi
  40e7f3:	mov    ch,BYTE PTR [ebp-0x6da1eabe]
  40e7f9:	popa   
  40e7fa:	or     eax,0x193261b7
  40e7ff:	aam    0x7f
  40e801:	fucomp st(0)
  40e803:	xor    eax,edx
  40e805:	adc    al,0x33
  40e807:	xlat   BYTE PTR ds:[ebx]
  40e808:	jne    0x40e82e
  40e80a:	lods   al,BYTE PTR ds:[esi]
  40e80b:	or     BYTE PTR [ebp+0x5c],dh
  40e80e:	inc    ebp
  40e80f:	mov    ch,0xe6
  40e811:	xchg   esp,eax
  40e812:	sub    ebx,DWORD PTR [bx+di]
  40e815:	lahf   
  40e816:	pop    ss
  40e817:	sub    eax,0x1536340d
  40e81c:	es iret 
  40e81e:	sub    al,0xec
  40e820:	call   DWORD PTR [ecx+edx*8+0x37]
  40e824:	mov    ecx,0x2d02279
  40e829:	jno    0x40e7f8
  40e82b:	leave  
  40e82c:	pop    eax
  40e82d:	mov    ecx,0xa6869e4e
  40e832:	and    al,0xd4
  40e834:	or     al,BYTE PTR [edx+0x6577b4e2]
  40e83a:	bound  ebx,QWORD PTR [ecx]
  40e83c:	std    
  40e83d:	jns    0x40e824
  40e83f:	and    al,cl
  40e841:	mov    esi,0x5c649d08
  40e846:	or     eax,0x7226dfd6
  40e84b:	or     dh,BYTE PTR [ecx]
  40e84d:	xchg   esi,eax
  40e84e:	int3   
  40e84f:	ins    DWORD PTR es:[edi],dx
  40e850:	les    edi,FWORD PTR [ecx-0x54]
  40e853:	xor    DWORD PTR [ebx-0x1e],esp
  40e856:	push   ss
  40e857:	xor    eax,0x14f5978b
  40e85c:	imul   eax,ecx,0xffffff89
  40e85f:	xor    cl,BYTE PTR [eax-0x5c]
  40e862:	mov    BYTE PTR [edi+0x6184382e],dl
  40e868:	dec    eax
  40e869:	adc    DWORD PTR [edx+0x470ad555],ebx
  40e86f:	shl    DWORD PTR [edx-0x2e],1
  40e872:	aad    0x8b
  40e874:	cld    
  40e875:	xchg   esi,eax
  40e876:	inc    ebx
  40e877:	out    dx,al
  40e878:	or     ebx,DWORD PTR [ebp-0x5ce49993]
  40e87e:	jecxz  0x40e824
  40e880:	xchg   edx,eax
  40e881:	je     0x40e8d7
  40e883:	rol    DWORD PTR [ebx],cl
  40e885:	xchg   esp,eax
  40e886:	fidiv  WORD PTR [ebx]
  40e888:	add    eax,0xf4b97484
  40e88d:	cld    
  40e88e:	sbb    DWORD PTR [ecx+0x32990814],edx
  40e894:	xchg   BYTE PTR [ebp-0x76],bl
  40e897:	ret    
  40e898:	dec    edx
  40e899:	jle    0x40e8f4
  40e89b:	int    0x1
  40e89d:	pop    ebp
  40e89e:	inc    ebx
  40e89f:	test   eax,0x1b917bc7
  40e8a4:	xchg   esp,eax
  40e8a5:	ss xchg ecx,eax
  40e8a7:	mov    ds:0x1f5899a2,eax
  40e8ac:	popa   
  40e8ad:	dec    ebx
  40e8ae:	jp     0x40e871
  40e8b0:	(bad)  
  40e8b1:	mov    ah,0xff
  40e8b3:	jge    0x40e8d4
  40e8b5:	adc    al,BYTE PTR [ecx+0x15]
  40e8b8:	push   0x1fa8ccda
  40e8bd:	mov    BYTE PTR [edi-0x74],bh
  40e8c0:	sbb    al,0x6e
  40e8c2:	or     BYTE PTR [ecx+eax*2],bl
  40e8c5:	push   0x363814ae
  40e8ca:	sbb    BYTE PTR [edx],cl
  40e8cc:	int3   
  40e8cd:	loop   0x40e889
  40e8cf:	loop   0x40e8a7
  40e8d1:	sub    DWORD PTR [eax+edx*4+0x33],ecx
  40e8d5:	aaa    
  40e8d6:	push   es
  40e8d7:	inc    esp
  40e8d8:	xchg   DWORD PTR [edi+eax*2-0x6f],esp
  40e8dc:	mov    al,ds:0x6613cf35
  40e8e1:	add    ebx,DWORD PTR [edi+edx*2]
  40e8e4:	and    ch,BYTE PTR [eax-0xb2d9cd1]
  40e8ea:	ins    DWORD PTR es:[edi],dx
  40e8eb:	in     al,dx
  40e8ec:	sub    esi,ebx
  40e8ee:	call   DWORD PTR [edi]
  40e8f0:	ret    
  40e8f1:	loopne 0x40e95f
  40e8f3:	xchg   al,ch
  40e8f5:	inc    ebp
  40e8f6:	cmc    
  40e8f7:	sbb    al,0x46
  40e8f9:	stos   BYTE PTR es:[edi],al
  40e8fa:	sub    cl,BYTE PTR [edi+0x6b]
  40e8fd:	push   edi
  40e8fe:	jmp    FWORD PTR [edi-0x1b]
  40e901:	aad    0xa5
  40e903:	push   ds
  40e904:	sar    DWORD PTR [edi],cl
  40e906:	xor    eax,0x143608e0
  40e90b:	sub    al,0xc3
  40e90d:	push   0x22
  40e90f:	loope  0x40e917
  40e911:	xchg   ebx,eax
  40e912:	adc    DWORD PTR [esi-0x34],edi
  40e915:	outs   dx,BYTE PTR ds:[esi]
  40e916:	cwde   
  40e917:	xchg   esi,eax
  40e918:	and    esi,edi
  40e91a:	jb     0x40e981
  40e91c:	pop    es
  40e91d:	je     0x40e959
  40e91f:	in     al,dx
  40e920:	ds and eax,edi
  40e923:	ss push 0x3a2fd3fc
  40e929:	leave  
  40e92a:	sbb    esi,DWORD PTR [ebx+0x4ddf9ed3]
  40e930:	jne    0x40e92e
  40e932:	rcr    BYTE PTR [ecx],cl
  40e934:	outs   dx,BYTE PTR ds:[esi]
  40e935:	pop    ebp
  40e936:	adc    BYTE PTR [eax+0xb],ah
  40e939:	sbb    ecx,DWORD PTR [ecx+0x63b26fd1]
  40e93f:	mov    cl,0xea
  40e941:	loope  0x40e95b
  40e943:	dec    esi
  40e944:	add    ah,cl
  40e946:	ret    0x314b
  40e949:	inc    ecx
  40e94a:	dec    ebx
  40e94b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e94c:	add    BYTE PTR [eax-0x5b],al
  40e94f:	ins    BYTE PTR es:[edi],dx
  40e950:	into   
  40e951:	dec    edx
  40e952:	jmp    0x40e965
  40e954:	push   ecx
  40e955:	push   cs
  40e956:	in     eax,0x88
  40e958:	push   eax
  40e959:	lods   al,BYTE PTR ds:[esi]
  40e95a:	cmp    BYTE PTR [esp+edi*2+0x47ea10c4],bl
  40e961:	sahf   
  40e962:	imul   ebx,ebp,0x88addb9
  40e968:	dec    ebp
  40e969:	sbb    ah,BYTE PTR [ecx]
  40e96b:	inc    edi
  40e96c:	jmp    0x40e909
  40e96e:	pop    ss
  40e96f:	mul    DWORD PTR ds:0xf0806348
  40e975:	jbe    0x40e9c0
  40e977:	inc    eax
  40e978:	(bad)  
  40e979:	ja     0x40e98a
  40e97b:	ret    
  40e97c:	gs stos DWORD PTR es:[edi],eax
  40e97e:	cmp    al,0x0
  40e980:	mov    bl,0xe2
  40e982:	dec    ebx
  40e983:	js     0x40e9a8
  40e985:	xchg   ebp,eax
  40e986:	xchg   esi,eax
  40e987:	pop    ebp
  40e988:	xlat   BYTE PTR ds:[ebx]
  40e989:	xchg   ebp,ecx
  40e98b:	jnp    0x40e927
  40e98d:	mov    esi,0x6229b974
  40e992:	push   esp
  40e993:	test   DWORD PTR [edx-0x67eb9813],eax
  40e999:	adc    al,0x64
  40e99b:	mov    DWORD PTR [esp+esi*4],ebp
  40e99e:	fs pop es
  40e9a0:	mov    ds:0xcf6fa45a,eax
  40e9a5:	push   ds
  40e9a6:	js     0x40ea20
  40e9a8:	sahf   
  40e9a9:	pop    edi
  40e9aa:	adc    dl,BYTE PTR [eax+0xe27663d]
  40e9b0:	pop    edx
  40e9b1:	dec    edi
  40e9b2:	out    dx,eax
  40e9b3:	and    ebp,edx
  40e9b5:	xchg   edx,eax
  40e9b6:	stos   BYTE PTR es:[edi],al
  40e9b7:	int3   
  40e9b8:	dec    ecx
  40e9b9:	stos   DWORD PTR es:[edi],eax
  40e9ba:	ins    DWORD PTR es:[edi],dx
  40e9bb:	xchg   ebp,eax
  40e9bc:	inc    ebp
  40e9bd:	(bad)  
  40e9be:	mov    DWORD PTR [edx+0x31],ecx
  40e9c1:	std    
  40e9c2:	pusha  
  40e9c3:	or     DWORD PTR [edi],0x7ebf7d19
  40e9c9:	test   BYTE PTR [edx+ebx*2-0x4dae4515],cl
  40e9d0:	daa    
  40e9d1:	inc    ebx
  40e9d2:	lods   eax,DWORD PTR ds:[esi]
  40e9d3:	scas   al,BYTE PTR es:[edi]
  40e9d4:	repz jno 0x40ea3b
  40e9d7:	or     DWORD PTR [ebp+0x7fe157b1],0xffffffa4
  40e9de:	xor    dh,ah
  40e9e0:	(bad)  
  40e9e1:	fmulp  st(2),st
  40e9e3:	mov    eax,DWORD PTR [ecx+0x4e]
  40e9e6:	mov    eax,0x3304d750
  40e9eb:	rcl    BYTE PTR [edi-0x57],1
  40e9ee:	pop    ebx
  40e9ef:	sub    bl,BYTE PTR [ebx-0x5eedba99]
  40e9f5:	pop    eax
  40e9f6:	or     BYTE PTR es:[ebx-0x129fbf90],cl
  40e9fd:	add    BYTE PTR [ebx+0x5d],al
  40ea00:	(bad)  
  40ea02:	jmp    DWORD PTR [esi]
  40ea04:	sbb    DWORD PTR [eax-0x51034596],esp
  40ea0a:	cmp    DWORD PTR [esp+eiz*2+0x22a89933],ebp
  40ea11:	cmp    DWORD PTR [esi+0x5a],eax
  40ea14:	and    BYTE PTR [edi],dh
  40ea16:	in     al,dx
  40ea17:	div    BYTE PTR ds:0x1216740
  40ea1d:	cld    
  40ea1e:	add    eax,0x58888b96
  40ea23:	nop
  40ea24:	add    DWORD PTR ds:0x5c7c813e,edi
  40ea2a:	test   al,0x9a
  40ea2c:	xchg   edi,eax
  40ea2d:	lods   eax,DWORD PTR ds:[esi]
  40ea2e:	outs   dx,BYTE PTR ds:[esi]
  40ea2f:	mov    bh,BYTE PTR [esp+edx*2-0x749eaa8]
  40ea36:	mov    edi,0x73f8d883
  40ea3b:	loopne 0x40e9ec
  40ea3d:	neg    BYTE PTR [esi+0x6771cda7]
  40ea43:	fdiv   QWORD PTR ds:0xb251d51f
  40ea49:	add    edi,DWORD PTR [ebx]
  40ea4b:	les    edx,FWORD PTR [edi+eax*1+0x63]
  40ea4f:	cmc    
  40ea50:	ret    
  40ea51:	dec    esi
  40ea52:	stos   BYTE PTR es:[edi],al
  40ea53:	ss stc 
  40ea55:	jb     0x40ea9b
  40ea57:	loope  0x40e9da
  40ea59:	sbb    ebx,DWORD PTR [ebx+0x417fa179]
  40ea5f:	add    DWORD PTR [ebp-0x1],esi
  40ea62:	xchg   esi,eax
  40ea63:	xlat   BYTE PTR ds:[ebx]
  40ea64:	out    dx,al
  40ea65:	adc    al,0x74
  40ea67:	jge    0x40ead3
  40ea69:	jecxz  0x40ea6e
  40ea6b:	dec    eax
  40ea6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea6d:	fstp   TBYTE PTR ds:0xdc373064
  40ea73:	jns    0x40eac8
  40ea75:	call   0x4b58d201
  40ea7a:	and    eax,ecx
  40ea7c:	or     eax,0xd16e36c6
  40ea81:	add    al,0xa9
  40ea83:	pop    es
  40ea84:	xchg   BYTE PTR [esp+edi*2],dl
  40ea87:	mov    dl,0xa
  40ea89:	jns    0x40eb00
  40ea8b:	outs   dx,BYTE PTR ds:[esi]
  40ea8c:	push   ss
  40ea8d:	out    dx,al
  40ea8e:	clc    
  40ea8f:	sbb    ebp,DWORD PTR [esi]
  40ea91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea92:	call   FWORD PTR [ebx+eax*4]
  40ea95:	pop    esi
  40ea96:	xchg   dl,dl
  40ea98:	inc    ecx
  40ea99:	enter  0x13e8,0xe1
  40ea9d:	xchg   ebp,eax
  40ea9e:	cwde   
  40ea9f:	jmp    0xff19e7fa
  40eaa4:	push   ebp
  40eaa5:	dec    esp
  40eaa6:	mov    ch,0x28
  40eaa8:	adc    DWORD PTR [ebx+0x2f],0x9a69ec36
  40eaaf:	jmp    0x989efa31
  40eab4:	mov    ds:0x5c71c498,al
  40eab9:	and    BYTE PTR [esi],dl
  40eabb:	pop    ss
  40eabc:	xchg   edi,eax
  40eabd:	add    al,0x49
  40eabf:	les    ebx,FWORD PTR [esi]
  40eac1:	dec    edi
  40eac2:	loop   0x40eabc
  40eac4:	mov    ch,0xca
  40eac6:	jl     0x40eb26
  40eac8:	push   edx
  40eac9:	test   eax,0x5d285a2a
  40eace:	mov    al,0x31
  40ead0:	sub    ebp,DWORD PTR [edi]
  40ead2:	les    ebp,FWORD PTR gs:[ebp-0x62]
  40ead6:	sub    dl,bh
  40ead8:	or     eax,0x85a35e24
  40eadd:	cmc    
  40eade:	repnz pop ecx
  40eae0:	retf   0x2ac6
  40eae3:	add    eax,0x657ff075
  40eae8:	mov    bl,0x55
  40eaea:	pop    es
  40eaeb:	mov    edi,0xa0c9e441
  40eaf0:	aas    
  40eaf1:	or     eax,0xb6c9f791
  40eaf6:	or     esi,DWORD PTR [ecx+0x67]
  40eaf9:	repz jae 0x40eb0f
  40eafc:	dec    esp
  40eafd:	popf   
  40eafe:	pop    ds
  40eaff:	in     eax,0xd
  40eb01:	(bad)  
  40eb02:	fbstp  TBYTE PTR es:[edx]
  40eb05:	adc    esi,DWORD PTR [edx]
  40eb07:	out    dx,eax
  40eb08:	xchg   ebx,eax
  40eb09:	ja     0x40eab7
  40eb0b:	aaa    
  40eb0c:	call   0x1f3e64b1
  40eb11:	push   eax
  40eb12:	(bad)  
  40eb13:	xor    ah,ch
  40eb15:	mov    dh,0x6c
  40eb17:	mov    ebp,0xea31509e
  40eb1c:	xchg   ebp,eax
  40eb1d:	mov    dl,0x90
  40eb1f:	xchg   BYTE PTR [esi+ebp*4],bl
  40eb22:	dec    esp
  40eb23:	ins    DWORD PTR es:[edi],dx
  40eb24:	mov    ch,0x87
  40eb26:	ror    DWORD PTR [esi],1
  40eb28:	jns    0x40eb32
  40eb2a:	jae    0x40eb4b
  40eb2c:	in     eax,dx
  40eb2d:	mov    bl,0x97
  40eb2f:	pusha  
  40eb30:	popw   ss
  40eb32:	je     0x40eb85
  40eb34:	icebp  
  40eb35:	mov    bl,0xee
  40eb37:	jns    0x40eae0
  40eb39:	ss out 0xc1,al
  40eb3c:	mov    cs,ecx
  40eb3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb3f:	inc    esi
  40eb40:	lea    ebx,ds:0x9f63217d
  40eb46:	(bad)  
  40eb47:	sbb    DWORD PTR [esi+ecx*4-0x6d8312c8],esi
  40eb4e:	inc    edi
  40eb4f:	pop    edi
  40eb50:	jp     0x40eaf9
  40eb52:	test   BYTE PTR [esi-0x383ad42],ah
  40eb58:	push   eax
  40eb59:	out    dx,al
  40eb5a:	and    eax,0xba0c3e95
  40eb5f:	out    0x43,al
  40eb61:	jae    0x40eb3c
  40eb63:	test   BYTE PTR [eax-0x79103848],0x53
  40eb6a:	jg     0x40eb9d
  40eb6c:	fxch   st(7)
  40eb6e:	not    DWORD PTR [ebx-0x14]
  40eb71:	inc    ebx
  40eb72:	cmp    eax,0x78fd33a6
  40eb77:	push   eax
  40eb78:	popf   
  40eb79:	lods   eax,DWORD PTR ds:[esi]
  40eb7a:	sbb    DWORD PTR ds:0xee43adda,esi
  40eb80:	lea    edi,[ecx-0x16f69ea1]
  40eb86:	fdiv   QWORD PTR [eax+edi*4-0x6]
  40eb8a:	gs and ecx,edi
  40eb8d:	adc    al,0x8a
  40eb8f:	pop    edi
  40eb90:	aas    
  40eb91:	(bad)  
  40eb92:	and    ebx,ebx
  40eb94:	ror    DWORD PTR [esi],1
  40eb96:	fisttp WORD PTR [esi+0x3f]
  40eb99:	xor    eax,0xb4155e8e
  40eb9e:	jo     0x40ec10
  40eba0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eba1:	sub    BYTE PTR [eax],ch
  40eba3:	inc    esi
  40eba4:	frstor [ecx+edi*8-0x5c21fe58]
  40ebab:	xor    al,0x16
  40ebad:	imul   ebx,DWORD PTR [esi-0x2f],0xf2b35cdb
  40ebb4:	imul   ecx,DWORD PTR [ecx+0x32918831],0x979064ca
  40ebbe:	int3   
  40ebbf:	mov    dl,0x8d
  40ebc1:	icebp  
  40ebc2:	xchg   edi,eax
  40ebc3:	inc    ebx
  40ebc4:	and    bl,BYTE PTR [ebx+0x1b]
  40ebc7:	gs ds clc 
  40ebca:	jmp    0x24c4:0xf9ccb95d
  40ebd1:	xchg   edx,eax
  40ebd2:	call   0x12a4c7f1
  40ebd7:	jle    0x40eb7f
  40ebd9:	mov    ecx,0xb1668b1b
  40ebde:	std    
  40ebdf:	sahf   
  40ebe0:	push   ds
  40ebe1:	sub    al,BYTE PTR [edi-0x1fb64127]
  40ebe7:	mov    edx,edi
  40ebe9:	sbb    BYTE PTR ds:[ebx],0x9c
  40ebed:	std    
  40ebee:	ror    BYTE PTR [ebp+0x3e],1
  40ebf1:	adc    ebp,DWORD PTR [edi+0x14]
  40ebf4:	pop    esp
  40ebf5:	sbb    al,0x14
  40ebf7:	rol    edi,0xa2
  40ebfa:	pop    ebp
  40ebfb:	dec    eax
  40ebfc:	outs   dx,DWORD PTR ds:[esi]
  40ebfd:	out    dx,eax
  40ebfe:	mov    esi,0x80895866
  40ec03:	mov    esi,0x7cdcfafa
  40ec08:	jmp    0x40ec79
  40ec0a:	or     ebx,DWORD PTR [edx+0x6c740ee1]
  40ec10:	in     al,dx
  40ec11:	inc    ecx
  40ec12:	push   ebx
  40ec13:	inc    ebp
  40ec14:	mov    eax,0xc1c78d7f
  40ec19:	and    DWORD PTR [eax+0x5d],edx
  40ec1c:	sahf   
  40ec1d:	aas    
  40ec1e:	iret   
  40ec1f:	ret    0x938b
  40ec22:	popa   
  40ec23:	cmp    ebx,ecx
  40ec25:	cmc    
  40ec26:	test   DWORD PTR [ebx-0x37],edi
  40ec29:	je     0x40ecaa
  40ec2b:	popf   
  40ec2c:	cmp    al,0xe6
  40ec2e:	fwait
  40ec2f:	mov    ds:0xc5f57bf7,al
  40ec34:	jnp    0x40ebd0
  40ec36:	dec    eax
  40ec37:	mov    edi,0xe41dec51
  40ec3c:	scas   al,BYTE PTR es:[edi]
  40ec3d:	inc    esp
  40ec3e:	pop    ebp
  40ec3f:	ins    DWORD PTR es:[edi],dx
  40ec40:	int    0x50
  40ec42:	shl    BYTE PTR [ecx-0x23],cl
  40ec45:	push   esi
  40ec46:	dec    esp
  40ec47:	or     eax,0xf15dab5e
  40ec4c:	popf   
  40ec4d:	loope  0x40ec70
  40ec4f:	xor    DWORD PTR [ebx],edx
  40ec51:	cdq    
  40ec52:	cdq    
  40ec53:	pop    ss
  40ec54:	bound  esp,QWORD PTR [edx+0x72]
  40ec57:	fdivr  QWORD PTR [esp+ebp*2+0x7b]
  40ec5b:	xchg   edi,eax
  40ec5c:	es aaa 
  40ec5e:	dec    edx
  40ec5f:	mov    bl,0x6c
  40ec61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec62:	hlt    
  40ec63:	(bad)  
  40ec64:	sub    eax,0x16ac1da7
  40ec69:	iret   
  40ec6a:	jno    0x40ecb1
  40ec6c:	or     BYTE PTR [eax+esi*2],al
  40ec6f:	pop    eax
  40ec71:	cli    
  40ec72:	out    dx,eax
  40ec73:	xchg   ebx,eax
  40ec74:	cmp    al,0x1e
  40ec76:	inc    esp
  40ec77:	mov    cl,0x54
  40ec79:	sets   ch
  40ec7c:	retf   
  40ec7d:	mov    dh,0x79
  40ec7f:	sbb    DWORD PTR [esi+0x22],ebp
  40ec82:	adc    DWORD PTR [edx-0x2d],0x281e32a7
  40ec89:	pop    esi
  40ec8a:	pop    edx
  40ec8b:	adc    DWORD PTR [edi+0x3a],ebx
  40ec8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec8f:	mov    bh,0xa6
  40ec91:	and    DWORD PTR [ecx+0x3344155d],eax
  40ec97:	stos   DWORD PTR es:[edi],eax
  40ec98:	fcmovu st,st(7)
  40ec9a:	mov    bl,0x2a
  40ec9c:	adc    eax,0xfa46cba1
  40eca1:	push   0xa946b638
  40eca6:	jmp    0x5c62a228
  40ecab:	ins    DWORD PTR es:[edi],dx
  40ecac:	fs inc esi
  40ecae:	outs   dx,BYTE PTR ds:[esi]
  40ecaf:	or     esp,edi
  40ecb1:	test   DWORD PTR [eax-0x60],0x291c5f5e
  40ecb8:	fs xchg ecx,eax
  40ecba:	addr16 inc ebx
  40ecbc:	ret    0x9cf5
  40ecbf:	push   ebx
  40ecc0:	cmc    
  40ecc1:	pop    ss
  40ecc2:	aaa    
  40ecc3:	mov    dh,0xc5
  40ecc5:	dec    eax
  40ecc6:	scas   al,BYTE PTR es:[edi]
  40ecc7:	loop   0x40ec63
  40ecc9:	cmp    cl,BYTE PTR [edx]
  40eccb:	sbb    ebp,ebx
  40eccd:	mov    esp,0x775a2806
  40ecd2:	mov    ebp,0xf0cc801
  40ecd7:	push   edx
  40ecd8:	push   esp
  40ecd9:	sbb    al,0x64
  40ecdb:	scas   al,BYTE PTR es:[edi]
  40ecdc:	or     esp,ebp
  40ecde:	dec    edx
  40ecdf:	cmp    eax,0x8ac6805d
  40ece4:	(bad)  [ecx]
  40ece6:	fnstcw WORD PTR [ebx]
  40ece8:	add    al,0xa9
  40ecea:	addr16 cmp ebx,esp
  40eced:	and    BYTE PTR [ebp-0x6a],al
  40ecf0:	xchg   esp,eax
  40ecf1:	mov    cl,0xc0
  40ecf3:	call   0x3b2b8fa8
  40ecf8:	mov    ebx,0xe41eada7
  40ecfd:	push   cs
  40ecfe:	xor    eax,0x49a45de4
  40ed03:	les    ebx,FWORD PTR [ebx+esi*1]
  40ed06:	jle    0x40ecbc
  40ed08:	fnstcw WORD PTR [ebp-0x19]
  40ed0b:	popa   
  40ed0c:	and    eax,0x91422ede
  40ed11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed12:	xchg   ebp,eax
  40ed13:	inc    ebx
  40ed14:	mov    ebp,0x1d5bcf8f
  40ed19:	cmp    BYTE PTR [ebp-0x57ebb1bc],al
  40ed1f:	js     0x40ed70
  40ed21:	inc    ebp
  40ed22:	xor    al,0xa8
  40ed24:	xlat   BYTE PTR ds:[ebx]
  40ed25:	rol    DWORD PTR [edi],0x1
  40ed28:	or     DWORD PTR [esi+0x5e],esp
  40ed2b:	fld    QWORD PTR [eax]
  40ed2d:	and    ah,ch
  40ed2f:	mov    ?,ebx
  40ed31:	clc    
  40ed32:	jle    0x40ecbf
  40ed34:	(bad)  
  40ed35:	hlt    
  40ed36:	mul    DWORD PTR [edx-0x1e]
  40ed39:	or     edx,DWORD PTR [ecx]
  40ed3b:	in     al,0x5e
  40ed3d:	clc    
  40ed3e:	jge    0x40ed26
  40ed40:	test   esp,ebx
  40ed42:	shl    ch,0xa0
  40ed45:	xor    bl,BYTE PTR [edi-0x65]
  40ed48:	push   edi
  40ed49:	sub    eax,0xa12390ff
  40ed4e:	push   0x9fb47560
  40ed53:	jae    0x40edac
  40ed55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed56:	in     al,0xd4
  40ed58:	jmp    0x4027:0x550263a8
  40ed5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed60:	fwait
  40ed61:	adc    ah,BYTE PTR [edx+0xa26edc8]
  40ed67:	push   ss
  40ed68:	stos   BYTE PTR es:[edi],al
  40ed69:	sbb    bl,dl
  40ed6b:	pop    ebx
  40ed6c:	out    0x39,eax
  40ed6e:	fwait
  40ed6f:	jbe    0x40ed60
  40ed71:	imul   edx,edi,0xffffffd1
  40ed74:	xor    al,BYTE PTR [ecx-0x5]
  40ed77:	loopne 0x40ed91
  40ed79:	inc    esi
  40ed7a:	jbe    0x40edb8
  40ed7c:	push   ebx
  40ed7d:	dec    esp
  40ed7e:	mov    ds:0x79234764,eax
  40ed83:	scas   eax,DWORD PTR es:[edi]
  40ed84:	pop    ss
  40ed85:	fld    DWORD PTR [eax-0x14]
  40ed88:	lahf   
  40ed89:	retf   
  40ed8a:	ss dec eax
  40ed8c:	cmp    BYTE PTR [ebx+0x72b4443d],bh
  40ed92:	and    bl,BYTE PTR ds:0x1bec8d7c
  40ed98:	dec    eax
  40ed99:	scas   eax,DWORD PTR es:[edi]
  40ed9a:	jmp    0x40ed6e
  40ed9c:	xor    BYTE PTR [eax],dh
  40ed9e:	shr    BYTE PTR [ebx],0xfa
  40eda1:	imul   edx,ebp,0xffffffb3
  40eda4:	pop    esi
  40eda5:	or     dh,BYTE PTR [edx+0x73e16696]
  40edab:	mov    ch,0x34
  40edad:	dec    edi
  40edae:	stos   DWORD PTR es:[edi],eax
  40edaf:	ins    BYTE PTR es:[edi],dx
  40edb0:	mov    WORD PTR [esi-0x69159210],?
  40edb6:	loope  0x40ed3c
  40edb8:	outs   dx,BYTE PTR ds:[esi]
  40edb9:	js     0x40ee24
  40edbb:	into   
  40edbc:	aad    0xc2
  40edbe:	loope  0x40edb2
  40edc0:	enter  0x88df,0xd3
  40edc4:	pop    es
  40edc5:	fistp  QWORD PTR [edi]
  40edc7:	dec    edx
  40edc8:	cwde   
  40edc9:	mov    ds:0x8549947c,al
  40edce:	mov    ecx,0xe53c115f
  40edd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40edd4:	(bad)  
  40edd5:	shl    DWORD PTR [edx+edx*2],cl
  40edd8:	lock addr16 mov ch,0x46
  40eddc:	gs int 0xb6
  40eddf:	and    al,0x34
  40ede1:	xor    eax,0xd7b176
  40ede6:	(bad)  
  40ede7:	mov    al,0xd
  40ede9:	repz or DWORD PTR [ebx+0x795a559c],eax
  40edf0:	dec    ebp
  40edf1:	mov    eax,esp
  40edf3:	aas    
  40edf4:	pop    es
  40edf5:	out    dx,al
  40edf6:	(bad)  
  40edf7:	mov    esi,DWORD PTR [edx]
  40edf9:	or     esp,DWORD PTR es:[edi+0x343eb617]
  40ee00:	pushf  
  40ee01:	mov    dh,0x49
  40ee03:	pushf  
  40ee04:	lea    esi,[edi-0x3f]
  40ee07:	ficomp WORD PTR [eax-0x5b]
  40ee0a:	xchg   DWORD PTR [edx+0x5b],ecx
  40ee0d:	mov    ebx,0xa206101e
  40ee12:	cmp    ecx,0xffffffab
  40ee15:	and    DWORD PTR [edi+0x3b],ecx
  40ee18:	repz mov fs,WORD PTR [ebx+0x5c]
  40ee1c:	stc    
  40ee1d:	ds (bad) 
  40ee1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee20:	jne    0x40ee1e
  40ee22:	or     DWORD PTR [ebp-0x5a1401e2],ebp
  40ee28:	adc    edx,DWORD PTR ds:0x300f39cf
  40ee2e:	cmp    BYTE PTR [edi+0x7f],al
  40ee31:	call   0x5ffc:0x697fb39d
  40ee38:	daa    
  40ee39:	enter  0x4cde,0x66
  40ee3d:	inc    edx
  40ee3e:	fdivr  QWORD PTR [esi]
  40ee40:	daa    
  40ee41:	repnz add al,0x84
  40ee44:	pushf  
  40ee45:	xor    dl,BYTE PTR [ecx+0x4d2cdec2]
  40ee4b:	jne    0x40edcf
  40ee4d:	fs jge 0x40edf7
  40ee50:	mov    ebp,0xee230b6f
  40ee55:	xor    DWORD PTR [ebx],eax
  40ee57:	or     al,0x8
  40ee59:	aas    
  40ee5a:	fwait
  40ee5b:	push   cs
  40ee5c:	inc    esp
  40ee5d:	pop    eax
  40ee5e:	retf   0x936a
  40ee61:	fwait
  40ee62:	push   ecx
  40ee63:	dec    ebx
  40ee64:	xor    BYTE PTR [edx+0x567dae15],cl
  40ee6a:	xchg   ecx,eax
  40ee6b:	je     0x40eee1
  40ee6d:	lahf   
  40ee6e:	dec    eax
  40ee6f:	shr    DWORD PTR [esi+0x29d5b301],0x8e
  40ee76:	jb     0x40ee6f
  40ee78:	mov    edx,0x89da463b
  40ee7d:	fs repnz push 0x27603d12
  40ee84:	add    BYTE PTR [eax+ecx*4-0x1b],al
  40ee88:	aad    0x14
  40ee8a:	mov    ds:0x686286cf,al
  40ee8f:	dec    edx
  40ee90:	(bad)  
  40ee91:	ror    DWORD PTR ds:[ebx],cl
  40ee94:	adc    DWORD PTR [ebp+0xc],eax
  40ee97:	je     0x40ef08
  40ee99:	or     DWORD PTR [ebx],esp
  40ee9b:	mov    edx,0xa2866e60
  40eea0:	sbb    ecx,DWORD PTR ds:0xf3f891f0
  40eea6:	push   edi
  40eea7:	sub    ecx,DWORD PTR [edi+0x44]
  40eeaa:	rcr    BYTE PTR [eax-0x458298ce],cl
  40eeb0:	jae    0x40eeaf
  40eeb2:	jbe    0x40eec8
  40eeb4:	(bad)  
  40eeb5:	sub    DWORD PTR fs:[eax-0xc534eaf],ebx
  40eebc:	mov    WORD PTR [eax],?
  40eebe:	test   al,0x6d
  40eec0:	sbb    eax,0xc1fd7ca7
  40eec5:	add    DWORD PTR [edi],esp
  40eec7:	int    0xc2
  40eec9:	int3   
  40eeca:	inc    esi
  40eecb:	mov    esp,0x87eb476e
  40eed0:	pop    esp
  40eed1:	das    
  40eed2:	fsubr  DWORD PTR [ebx]
  40eed4:	adc    BYTE PTR [esi-0x6f6dbafd],ch
  40eeda:	sub    ebp,DWORD PTR [edx-0x54]
  40eedd:	imul   DWORD PTR [edi+0x382d92a8]
  40eee3:	push   ds
  40eee4:	adc    DWORD PTR [esi-0x4d],ecx
  40eee7:	andnps xmm7,XMMWORD PTR [ecx+eiz*8-0x7]
  40eeec:	push   edx
  40eeed:	jno    0x40ee84
  40eeef:	sahf   
  40eef0:	mov    dl,0x91
  40eef2:	mov    dh,0x8b
  40eef5:	sub    DWORD PTR [ebp+0x69],esp
  40eef8:	sbb    dh,BYTE PTR ds:0x9c019469
  40eefe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eeff:	aas    
  40ef00:	push   eax
  40ef01:	xor    DWORD PTR [edi+0x72],edi
  40ef04:	push   DWORD PTR [edx]
  40ef06:	push   ebp
  40ef07:	data16 fsincos 
  40ef0a:	clc    
  40ef0b:	ja     0x40ef49
  40ef0d:	push   esi
  40ef0e:	jecxz  0x40eeed
  40ef10:	mov    ecx,0xeb8fc3de
  40ef15:	pop    eax
  40ef16:	test   DWORD PTR [eax-0x55527934],edi
  40ef1c:	jmp    FWORD PTR [eax]
  40ef1e:	push   cs
  40ef1f:	(bad)  
  40ef20:	sbb    eax,0xe35fbc47
  40ef25:	gs call 0x322:0x4b52d518
  40ef2d:	hlt    
  40ef2e:	cmp    BYTE PTR [ecx+0x1],bh
  40ef31:	(bad)  
  40ef32:	fadd   QWORD PTR [esi-0x2c]
  40ef35:	or     al,0x84
  40ef37:	icebp  
  40ef38:	push   ss
  40ef39:	mov    ds:0x1057cb1,al
  40ef3e:	push   edi
  40ef3f:	ja     0x40ef3d
  40ef41:	xor    DWORD PTR [ebp+0x3211f2e8],esi
  40ef47:	popa   
  40ef48:	pop    eax
  40ef49:	push   cs
  40ef4a:	test   al,0xcc
  40ef4c:	in     al,dx
  40ef4d:	enter  0x61c0,0x6a
  40ef51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef52:	mov    cl,BYTE PTR [eax]
  40ef54:	loope  0x40ef87
  40ef56:	cmp    BYTE PTR [ebx+0x42],bh
  40ef59:	fidivr DWORD PTR [ebx+ebp*2]
  40ef5c:	call   0xa01004b6
  40ef61:	dec    esi
  40ef62:	push   ebx
  40ef63:	lods   al,BYTE PTR ds:[esi]
  40ef64:	cwde   
  40ef65:	(bad)
  40ef68:	mov    edx,0xeafbcdab
  40ef6d:	sub    eax,0x288f0f8e
  40ef72:	pop    edx
  40ef73:	inc    edx
  40ef74:	push   eax
  40ef75:	push   ecx
  40ef76:	jle    0x40ef8f
  40ef78:	sbb    BYTE PTR [ebx],bh
  40ef7a:	mov    ds:0x8d7e9b2e,al
  40ef7f:	jg     0x40efd3
  40ef81:	stos   DWORD PTR es:[edi],eax
  40ef82:	stc    
  40ef83:	mov    ds:0x5c5891bf,eax
  40ef88:	das    
  40ef89:	dec    edx
  40ef8a:	cmp    eax,0x116baf4b
  40ef8f:	cdq    
  40ef90:	pop    ds
  40ef91:	push   ecx
  40ef92:	xor    DWORD PTR [ecx+0x11],ebp
  40ef95:	mul    cl
  40ef97:	loopne 0x40ef95
  40ef99:	adc    ah,bl
  40ef9b:	add    al,0x2e
  40ef9d:	(bad)  
  40ef9e:	stos   BYTE PTR es:[edi],al
  40ef9f:	mov    esp,0xa7deaf47
  40efa4:	adc    ch,dl
  40efa6:	pop    eax
  40efa7:	inc    edx
  40efa8:	loop   0x40ef76
  40efaa:	int    0x77
  40efac:	ror    BYTE PTR [edx-0x5],cl
  40efaf:	sahf   
  40efb0:	xchg   ebp,eax
  40efb1:	ja     0x40efe1
  40efb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efb4:	fist   DWORD PTR [ebp+0x69]
  40efb7:	cs xchg edi,eax
  40efb9:	lahf   
  40efba:	cmp    eax,0x8b9a12fa
  40efbf:	xchg   ecx,eax
  40efc0:	call   0x16b6:0xeb0541bc
  40efc7:	pop    es
  40efc8:	push   ebx
  40efc9:	aaa    
  40efca:	mov    ds:0x4da215fc,al
  40efcf:	inc    edi
  40efd0:	and    al,0x29
  40efd2:	repz or ebp,0x18
  40efd6:	jno    0x40f026
  40efd8:	stos   DWORD PTR es:[edi],eax
  40efd9:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40efdb:	xor    DWORD PTR [edi+edi*2-0x44],0x6f
  40efe0:	or     eax,0xf8f910c9
  40efe5:	mov    edi,0xbe99bd72
  40efea:	ret    0x9550
  40efed:	fwait
  40efee:	out    0xae,al
  40eff0:	sti    
  40eff1:	mov    es,WORD PTR [ebp-0x4b]
  40eff4:	push   cs
  40eff5:	mov    edx,0xe09203e1
  40effa:	in     al,dx
  40effb:	jae    0x40f038
  40effd:	xor    al,0xc0
  40efff:	xchg   ecx,eax
  40f000:	dec    ebp
  40f001:	ret    
  40f002:	cmp    ebp,0xffffff9d
  40f005:	pop    ds
  40f006:	push   edi
  40f007:	or     bh,BYTE PTR [esi-0x7c]
  40f00a:	std    
  40f00b:	mov    dl,al
  40f00d:	jge    0x40efc6
  40f00f:	sub    BYTE PTR [ebp+0x11],0x12
  40f013:	call   0x2f3f:0x19c7f23a
  40f01a:	mov    BYTE PTR [edi+0x4b5dec8a],bl
  40f020:	clc    
  40f021:	add    esp,DWORD PTR [esi]
  40f023:	xchg   edi,eax
  40f024:	repnz push ss
  40f026:	fisubr DWORD PTR [edi-0x8]
  40f029:	stos   BYTE PTR es:[edi],al
  40f02a:	mov    bh,0xba
  40f02c:	inc    edx
  40f02d:	inc    edi
  40f02e:	ret    
  40f02f:	iret   
  40f030:	mov    dl,0xe2
  40f032:	jns    0x40efc0
  40f034:	inc    esp
  40f035:	xor    al,0x73
  40f037:	and    edx,DWORD PTR [ebx+0x7caf9878]
  40f03d:	jl     0x40f053
  40f03f:	add    al,0x91
  40f041:	stc    
  40f042:	lods   eax,DWORD PTR ds:[esi]
  40f043:	fcomp  DWORD PTR [eax+0x21182587]
  40f049:	mov    cl,0xb9
  40f04b:	push   0xffffffe3
  40f04d:	mov    al,ds:0x641c0300
  40f052:	push   ebp
  40f053:	popf   
  40f054:	aas    
  40f055:	fsub   st(0),st
  40f057:	rol    DWORD PTR [ecx+ebp*2],cl
  40f05a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f05b:	ins    BYTE PTR es:[edi],dx
  40f05c:	jo     0x40eff5
  40f05e:	mov    ch,bl
  40f060:	mov    al,ds:0xa5eac6b5
  40f065:	jae    0x40f069
  40f067:	hlt    
  40f068:	sbb    ch,BYTE PTR [ecx+0x3c]
  40f06b:	mov    ?,edi
  40f06d:	fst    DWORD PTR [ecx-0x52]
  40f070:	pop    es
  40f071:	mov    al,0x7d
  40f073:	scas   eax,DWORD PTR es:[edi]
  40f074:	sub    eax,0x57d9d299
  40f079:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f07a:	lea    ebx,[ebp-0x109cf88c]
  40f080:	call   0x15fac9b9
  40f085:	fs inc edi
  40f087:	fisttp WORD PTR [esi+eiz*2]
  40f08a:	cld    
  40f08b:	repz mov cl,0xb8
  40f08e:	sbb    DWORD PTR [ecx+edi*2+0x54],esp
  40f092:	mov    eax,ds:0xd482208e
  40f097:	(bad)  
  40f098:	jbe    0x40f111
  40f09a:	push   edi
  40f09b:	mov    edi,0xe914a08e
  40f0a0:	xchg   edx,eax
  40f0a1:	mov    esp,0xd6faedeb
  40f0a6:	sahf   
  40f0a7:	mov    edx,0xa24de040
  40f0ac:	jmp    0x40f0ac
  40f0ae:	dec    esi
  40f0af:	es int 0xf8
  40f0b2:	dec    ecx
  40f0b3:	stos   BYTE PTR es:[edi],al
  40f0b4:	xor    ecx,ebx
  40f0b6:	rcr    DWORD PTR [ebx+esi*1+0x13],0x7c
  40f0bb:	xor    DWORD PTR [edi+edi*4],ebx
  40f0be:	jns    0x40f0ec
  40f0c0:	cmp    bh,bl
  40f0c2:	adc    eax,0xab69bddf
  40f0c7:	add    eax,0x18a23fda
  40f0cc:	jne    0x40f0be
  40f0ce:	pop    esp
  40f0cf:	sbb    ah,BYTE PTR [ebx]
  40f0d1:	lods   al,BYTE PTR ds:[esi]
  40f0d2:	sbb    al,0x85
  40f0d4:	sub    dl,BYTE PTR [edi]
  40f0d6:	mov    esp,0x9375bd8
  40f0db:	add    edi,ebp
  40f0dd:	rcl    BYTE PTR [ebx+0x32cb6637],0xc1
  40f0e4:	(bad)  
  40f0e5:	and    eax,0x9de2d17b
  40f0ea:	(bad)  
  40f0eb:	or     eax,0x6d3a52fd
  40f0f0:	add    cl,dh
  40f0f2:	push   cs
  40f0f3:	dec    ebx
  40f0f4:	arpl   WORD PTR [bx+si+0x6c0],dx
  40f0f9:	imul   edi,DWORD PTR [edx],0x5c
  40f0fc:	(bad)  
  40f0fe:	neg    BYTE PTR [edi+0x4e92b899]
  40f104:	pop    esp
  40f105:	mov    cl,0x33
  40f107:	cs retf 0xe5e1
  40f10b:	pop    es
  40f10c:	add    esp,DWORD PTR [esi+ebx*4-0x7fad7d5e]
  40f113:	jg     0x40f0e1
  40f115:	cmp    al,0xaa
  40f117:	adc    dh,BYTE PTR [ebx+0x4f70175a]
  40f11d:	xor    ebx,edx
  40f11f:	aas    
  40f120:	push   edi
  40f121:	cld    
  40f122:	fdivr  DWORD PTR [esi]
  40f124:	push   0x61
  40f126:	pop    ds
  40f127:	gs enter 0xebcf,0xb1
  40f12c:	pop    ebx
  40f12d:	pop    edi
  40f12e:	dec    ebp
  40f12f:	jl     0x40f1a0
  40f131:	dec    eax
  40f132:	pusha  
  40f133:	sub    ebp,DWORD PTR [edi-0x6b]
  40f136:	or     bh,al
  40f138:	hlt    
  40f139:	sub    al,0xa7
  40f13b:	aas    
  40f13c:	repz das 
  40f13e:	xor    eax,0xe888223d
  40f143:	mov    BYTE PTR ds:0xd7e96e78,dh
  40f149:	(bad)  
  40f14b:	xchg   esi,eax
  40f14c:	push   ebp
  40f14d:	and    BYTE PTR [ecx-0x3309498f],ah
  40f153:	push   edx
  40f154:	jo     0x40f180
  40f156:	test   DWORD PTR [edx+0x4c],esp
  40f159:	fdiv   st(5),st
  40f15b:	fcom   DWORD PTR [edx+eax*1]
  40f15e:	jo     0x40f1c7
  40f160:	repnz ficom WORD PTR [esi]
  40f163:	mov    ebp,0x31658273
  40f168:	mov    ds:0xd46b9bac,al
  40f16d:	aad    0xb4
  40f16f:	xchg   esp,eax
  40f170:	scas   al,BYTE PTR es:[edi]
  40f171:	sbb    ch,al
  40f173:	inc    eax
  40f174:	loop   0x40f1f3
  40f176:	mov    DWORD PTR [eax],edi
  40f178:	scas   eax,DWORD PTR es:[edi]
  40f179:	cmp    cl,bh
  40f17b:	aam    0x14
  40f17d:	pop    esi
  40f17e:	leave  
  40f17f:	daa    
  40f180:	dec    edi
  40f181:	push   0xe5188f90
  40f186:	mov    ecx,0x96b8c00d
  40f18b:	scas   eax,DWORD PTR es:[edi]
  40f18c:	inc    edi
  40f18d:	push   eax
  40f18e:	jecxz  0x40f182
  40f190:	mov    dl,0x4b
  40f192:	push   ss
  40f193:	mov    ch,0xd7
  40f195:	add    al,0xe8
  40f197:	aaa    
  40f198:	inc    ebx
  40f199:	xlat   BYTE PTR ds:[ebx]
  40f19a:	push   esp
  40f19b:	loope  0x40f17a
  40f19d:	cld    
  40f19e:	icebp  
  40f19f:	inc    esi
  40f1a0:	dec    edi
  40f1a1:	adc    BYTE PTR [edx+0x36],dl
  40f1a4:	scas   eax,DWORD PTR es:[edi]
  40f1a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1a6:	pop    eax
  40f1a7:	add    BYTE PTR [eax+0x61d1ca7b],dh
  40f1ad:	jne    0x40f135
  40f1af:	fsub   DWORD PTR [edx]
  40f1b1:	ret    
  40f1b2:	dec    edi
  40f1b3:	sub    bl,BYTE PTR [ecx+0xc]
  40f1b6:	imul   esi,DWORD PTR [ebx*8+0x19e6a21b],0xffffffee
  40f1be:	jne    0x40f14b
  40f1c0:	fnstsw WORD PTR [ebx+edi*4+0x43]
  40f1c4:	jecxz  0x40f17d
  40f1c6:	aas    
  40f1c7:	mov    ecx,0x5b32a76b
  40f1cc:	imul   eax,esp,0xa5d2f3d8
  40f1d2:	xchg   esi,eax
  40f1d3:	pop    ebx
  40f1d4:	ret    0x1cd7
  40f1d7:	mov    ah,BYTE PTR [esi]
  40f1d9:	add    eax,0x535926a8
  40f1de:	leave  
  40f1df:	rol    DWORD PTR [edx-0x68ef5e0b],cl
  40f1e5:	add    DWORD PTR [esi-0x4d8c5158],edx
  40f1eb:	ror    BYTE PTR [edi+0x35],cl
  40f1ee:	sub    eax,0xd6174273
  40f1f3:	das    
  40f1f4:	push   ds
  40f1f5:	cmp    esi,DWORD PTR ss:[ebx-0x2e247f0a]
  40f1fc:	aaa    
  40f1fd:	leave  
  40f1fe:	inc    eax
  40f1ff:	add    eax,0x22254d28
  40f204:	and    eax,0x48adc6c9
  40f209:	sub    eax,0x591480f7
  40f20e:	mov    ecx,0xb9a7bf67
  40f213:	iret   
  40f214:	dec    ecx
  40f215:	mov    WORD PTR [edi],es
  40f217:	scas   eax,DWORD PTR es:[edi]
  40f218:	(bad)  
  40f219:	aaa    
  40f21a:	xchg   edi,eax
  40f21b:	outs   dx,BYTE PTR ds:[esi]
  40f21c:	adc    ch,cl
  40f21e:	test   al,dl
  40f220:	mov    bh,0x71
  40f222:	imul   edi,DWORD PTR [eax+0x641fdf9d],0x706f6e63
  40f22c:	xchg   ebx,eax
  40f22d:	or     dl,BYTE PTR [ebx+0x5270b764]
  40f233:	dec    ebp
  40f234:	ins    DWORD PTR es:[edi],dx
  40f235:	xor    al,cl
  40f237:	or     DWORD PTR [esi-0x6f1e93fb],ebp
  40f23d:	outs   dx,DWORD PTR ds:[esi]
  40f23e:	push   es
  40f23f:	xor    DWORD PTR [esi],ecx
  40f241:	xor    eax,0x483e0e5a
  40f246:	clc    
  40f247:	popf   
  40f248:	xchg   esi,eax
  40f249:	add    BYTE PTR [ebx+0x46],bl
  40f24c:	mov    ebp,DWORD PTR [esi+0x6b97799e]
  40f252:	je     0x40f256
  40f254:	sub    bl,BYTE PTR ds:0x16b3a522
  40f25a:	push   ecx
  40f25b:	ret    
  40f25c:	popf   
  40f25d:	adc    DWORD PTR [esi+0x7ab40971],esi
  40f263:	hlt    
  40f264:	or     ecx,eax
  40f266:	popa   
  40f267:	pop    ebx
  40f268:	mov    ecx,0x64412b75
  40f26d:	jne    0x40f2ce
  40f26f:	add    al,BYTE PTR [ebx+0x21a92c04]
  40f275:	push   es
  40f276:	mov    ds:0x95c0f022,eax
  40f27b:	gs test BYTE PTR ds:[ecx+0x4e],dl
  40f280:	nop
  40f281:	outs   dx,DWORD PTR ds:[esi]
  40f282:	sub    edx,DWORD PTR ds:0xe8136212
  40f288:	xchg   edi,eax
  40f289:	dec    ebp
  40f28a:	sub    al,0x9
  40f28c:	retf   0xd3f5
  40f28f:	jmp    0x522b192e
  40f294:	aad    0x18
  40f296:	mov    ds:0x16f78a6c,al
  40f29b:	and    edi,eax
  40f29d:	push   ds
  40f29e:	xlat   BYTE PTR ds:[ebx]
  40f29f:	test   DWORD PTR [eax],ebp
  40f2a1:	not    BYTE PTR [eax]
  40f2a3:	test   DWORD PTR [ebx-0x453c9190],esi
  40f2a9:	loop   0x40f2a8
  40f2ab:	pop    edi
  40f2ac:	test   al,0x5b
  40f2ae:	mov    WORD PTR [ebp+0x60],?
  40f2b1:	and    BYTE PTR [esi-0x35],bl
  40f2b4:	jo     0x40f30f
  40f2b6:	sti    
  40f2b7:	test   ecx,edx
  40f2b9:	div    DWORD PTR [eax-0x20fb7f75]
  40f2bf:	ret    
  40f2c0:	pop    ss
  40f2c1:	mov    ebx,DWORD PTR [esi*4+0x2847a4b3]
  40f2c8:	mov    esi,0x1849d4d4
  40f2cd:	enter  0x4484,0xea
  40f2d1:	ins    BYTE PTR es:[edi],dx
  40f2d2:	in     al,dx
  40f2d3:	pop    eax
  40f2d4:	loopne 0x40f346
  40f2d6:	push   esp
  40f2d7:	pusha  
  40f2d8:	test   edi,esp
  40f2da:	mov    eax,ds:0x146ed1ae
  40f2df:	adc    dh,0xa7
  40f2e2:	jg     0x40f346
  40f2e4:	mov    al,0x9a
  40f2e6:	xor    DWORD PTR [edx],esi
  40f2e8:	sar    DWORD PTR [ebx-0x7e],cl
  40f2eb:	mov    ds:0x62a6bbca,eax
  40f2f0:	outs   dx,BYTE PTR ds:[esi]
  40f2f1:	adc    edx,DWORD PTR [eax+0x3052e45b]
  40f2f7:	dec    edx
  40f2f8:	jae    0x40f2cd
  40f2fa:	jl     0x40f33d
  40f2fc:	(bad)  
  40f2fd:	xor    al,0xc2
  40f2ff:	or     bl,BYTE PTR [ecx+0x6f]
  40f302:	sub    al,0x3
  40f304:	mov    ds:0x18b218a6,eax
  40f309:	push   ebx
  40f30a:	imul   esi,DWORD PTR [edx-0x3],0xb1d2bd03
  40f311:	pop    edx
  40f312:	retf   
  40f313:	pop    bp
  40f315:	or     al,0xe8
  40f317:	bound  esp,QWORD PTR [ecx]
  40f319:	sbb    DWORD PTR [ebx],edx
  40f31b:	in     al,0x36
  40f31d:	mov    esp,0xfca6bf78
  40f322:	mov    edx,0xc739de03
  40f327:	mov    bl,0x5b
  40f329:	mov    DWORD PTR [edi],esp
  40f32b:	call   0x9fba:0x5d10c748
  40f332:	cli    
  40f333:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f334:	mov    esp,0xe071fab4
  40f339:	scas   eax,DWORD PTR es:[edi]
  40f33a:	repnz retf 
  40f33c:	leave  
  40f33d:	in     al,0x7f
  40f33f:	aaa    
  40f340:	push   ds
  40f341:	ret    
  40f342:	sub    al,0xbe
  40f344:	in     eax,0x3b
  40f346:	ret    
  40f347:	(bad)  
  40f348:	fistp  QWORD PTR [eax]
  40f34a:	jnp    0x40f318
  40f34c:	(bad)  
  40f34d:	jae    0x40f2d1
  40f34f:	movzx  esi,BYTE PTR [ecx]
  40f352:	sub    esp,DWORD PTR [eax-0x44f627c9]
  40f358:	in     eax,dx
  40f359:	jl     0x40f352
  40f35b:	inc    ebx
  40f35c:	mov    al,BYTE PTR [eax+0x191693df]
  40f362:	pop    es
  40f363:	mov    al,ds:0xf9a5ff87
  40f368:	je     0x40f353
  40f36a:	(bad)  
  40f36b:	fiadd  WORD PTR [ebp-0x58]
  40f36e:	sti    
  40f36f:	into   
  40f370:	outs   dx,DWORD PTR ds:[esi]
  40f371:	hlt    
  40f372:	dec    esi
  40f373:	and    BYTE PTR [ebx-0x4a],0x90
  40f377:	jmp    0xab1d:0x4f200538
  40f37e:	icebp  
  40f37f:	and    al,0x62
  40f381:	es mov eax,0xdaf13196
  40f387:	out    dx,eax
  40f388:	sbb    BYTE PTR [edi-0x6c],dl
  40f38b:	xchg   BYTE PTR [edx],ch
  40f38d:	pop    edi
  40f38e:	fild   WORD PTR [edi]
  40f390:	retf   
  40f391:	or     esi,DWORD PTR [esi]
  40f393:	jecxz  0x40f40a
  40f395:	das    
  40f396:	push   esi
  40f397:	push   0xc93cd8ad
  40f39c:	mov    DWORD PTR [ebp+0x5f],ebp
  40f39f:	out    0x5c,eax
  40f3a1:	inc    ebp
  40f3a2:	xor    esi,eax
  40f3a4:	outs   dx,BYTE PTR ds:[esi]
  40f3a5:	mov    ebp,0x9347739f
  40f3aa:	jnp    0x40f360
  40f3ac:	ins    BYTE PTR es:[edi],dx
  40f3ad:	dec    edi
  40f3ae:	adc    edi,edi
  40f3b0:	adc    edi,DWORD PTR [ecx+0x2b8f181d]
  40f3b6:	adc    edx,DWORD PTR [eax-0x7c92ad3b]
  40f3bc:	retf   
  40f3bd:	xchg   edi,eax
  40f3be:	inc    eax
  40f3bf:	mov    eax,ds:0x165b1fe8
  40f3c4:	or     al,0xda
  40f3c6:	cli    
  40f3c7:	xor    DWORD PTR [edx-0x108bcea2],eax
  40f3cd:	and    bl,dl
  40f3cf:	adc    al,0x99
  40f3d1:	daa    
  40f3d2:	sub    BYTE PTR ds:0xd56f58ad,cl
  40f3d8:	fs daa 
  40f3da:	out    dx,al
  40f3db:	fist   WORD PTR cs:0xf9c4d62b
  40f3e2:	cmp    ebx,DWORD PTR [ecx]
  40f3e4:	inc    BYTE PTR [ecx]
  40f3e6:	nop
  40f3e7:	adc    BYTE PTR [edi],ah
  40f3e9:	add    eax,0x17548349
  40f3ee:	mov    eax,ds:0x8aeea94c
  40f3f3:	or     al,0x5b
  40f3f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3f6:	shr    DWORD PTR [ebx-0xf7ae6c8],cl
  40f3fc:	pop    esi
  40f3fd:	or     dl,BYTE PTR [ebx]
  40f3ff:	sub    DWORD PTR [edi+0x7c3b65ca],edi
  40f405:	cli    
  40f406:	mov    DWORD PTR [ebx-0x1f],0xb6e2e5db
  40f40d:	jl     0x40f3b5
  40f40f:	inc    esi
  40f410:	mov    bh,0x54
  40f412:	cmp    edi,DWORD PTR [ecx-0x5eb946a6]
  40f418:	loope  0x40f493
  40f41a:	sbb    bh,0x10
  40f41d:	add    eax,0x1e8d75f3
  40f422:	or     al,0xda
  40f424:	mov    DWORD PTR [edi],esp
  40f426:	ja     0x40f451
  40f428:	in     eax,dx
  40f429:	mov    cl,0xea
  40f42c:	ds sub eax,0xa0957a6d
  40f432:	pop    ebx
  40f433:	inc    edi
  40f434:	scas   al,BYTE PTR es:[edi]
  40f435:	daa    
  40f436:	loope  0x40f3c7
  40f438:	push   ebx
  40f439:	and    DWORD PTR [esi+eax*8],0xffffff95
  40f43d:	es (bad) 
  40f43f:	cmp    edi,ebx
  40f441:	out    0x1d,eax
  40f443:	(bad)  
  40f444:	jmp    0x83a6:0x775ef763
  40f44b:	xor    DWORD PTR [eax],ebx
  40f44d:	cld    
  40f44e:	mov    eax,ds:0x9a34f2f3
  40f453:	fdiv   QWORD PTR [eax+0x18]
  40f456:	xchg   BYTE PTR [ebx],dh
  40f458:	jle    0x40f431
  40f45a:	repnz popf 
  40f45c:	xchg   ebx,eax
  40f45d:	xor    ebp,DWORD PTR [edx+edi*8]
  40f460:	jp     0x40f4a0
  40f462:	xor    eax,0xe63dbe35
  40f467:	pop    DWORD PTR [edi+ecx*2]
  40f46a:	popf   
  40f46b:	(bad)  
  40f46c:	and    dh,al
  40f46e:	aam    0xb5
  40f470:	cmp    DWORD PTR [ecx],ecx
  40f472:	out    dx,eax
  40f473:	outs   dx,DWORD PTR ds:[esi]
  40f474:	xchg   esi,eax
  40f475:	mov    ebx,0xe6171c91
  40f47a:	dec    BYTE PTR ds:[esi-0x32fadd3e]
  40f481:	pusha  
  40f482:	mov    edx,0xe4bf58e9
  40f487:	jl     0x40f4c1
  40f489:	inc    esi
  40f48a:	jo     0x40f493
  40f48c:	push   ds
  40f48d:	mov    al,0xee
  40f48f:	mov    ds:0x8c8b5908,al
  40f494:	hlt    
  40f495:	outs   dx,DWORD PTR ds:[esi]
  40f496:	sub    DWORD PTR [ecx+esi*8],ecx
  40f499:	pop    edx
  40f49a:	push   ds
  40f49b:	lock jecxz 0x40f502
  40f49e:	ror    cl,cl
  40f4a0:	or     ebx,DWORD PTR [eax]
  40f4a2:	cli    
  40f4a3:	sbb    DWORD PTR [edi+0x16],ecx
  40f4a6:	mov    al,ds:0xb711dd9
  40f4ab:	fdiv   DWORD PTR [esi]
  40f4ad:	retf   
  40f4ae:	pop    es
  40f4af:	or     eax,esp
  40f4b1:	popa   
  40f4b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4b3:	push   cs
  40f4b4:	fiadd  WORD PTR [ebp+0x52]
  40f4b7:	les    esi,FWORD PTR [eax+edi*8-0xbcc23d4]
  40f4be:	dec    eax
  40f4bf:	rol    BYTE PTR [eax+0x368f8224],cl
  40f4c5:	xlat   BYTE PTR ds:[ebx]
  40f4c6:	push   ss
  40f4c7:	and    BYTE PTR [esi+eiz*2+0x2d],al
  40f4cb:	sbb    BYTE PTR ds:0x2415632,ah
  40f4d1:	xchg   ebp,eax
  40f4d2:	inc    edx
  40f4d3:	addr16 mov esi,0xa64cb4e7
  40f4d9:	test   DWORD PTR [edx+0x67],ebp
  40f4dc:	xchg   DWORD PTR [esi+0x70],edi
  40f4df:	and    al,0x8
  40f4e1:	inc    ebp
  40f4e2:	lahf   
  40f4e3:	out    dx,al
  40f4e4:	dec    esp
  40f4e5:	out    dx,al
  40f4e6:	fild   QWORD PTR [ecx+0xf]
  40f4e9:	repnz int 0xf1
  40f4ec:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40f4ee:	jno    0x40f54c
  40f4f0:	sbb    ebp,DWORD PTR [ecx+0x7cb8ef7f]
  40f4f6:	mov    DWORD PTR [esi],ecx
  40f4f8:	sub    BYTE PTR [edx],al
  40f4fa:	mov    eax,ds:0x3ad1c94a
  40f4ff:	mov    ch,0x2a
  40f501:	dec    eax
  40f502:	pop    es
  40f503:	jo     0x40f4db
  40f505:	dec    edi
  40f506:	sbb    al,0xb8
  40f508:	xor    al,0x62
  40f50a:	cmp    DWORD PTR [esi],esi
  40f50c:	inc    ebx
  40f50d:	cmp    bh,BYTE PTR [eax]
  40f50f:	les    ecx,FWORD PTR [ebp-0x63]
  40f512:	lods   al,BYTE PTR ds:[esi]
  40f513:	pop    esi
  40f514:	cmp    ah,0xaa
  40f517:	jmp    0x2eea7e
  40f51c:	repz sbb DWORD PTR [esi+0x7a],edx
  40f520:	mov    ebp,0x50dbb4bd
  40f525:	cdq    
  40f526:	jmp    0x40f5a4
  40f528:	in     eax,dx
  40f529:	mov    dl,ch
  40f52b:	aam    0x5
  40f52d:	imul   ebx,DWORD PTR [ebp-0x6740e5a0],0xffffff92
  40f534:	fwait
  40f535:	ja     0x40f54f
  40f537:	adc    BYTE PTR [esi-0x24ea36da],0x29
  40f53e:	fisub  DWORD PTR [ebp-0x762098d6]
  40f544:	clc    
  40f545:	push   edi
  40f546:	addps  xmm1,XMMWORD PTR [eax+ebp*1]
  40f54a:	xchg   edi,eax
  40f54b:	mov    esp,ebp
  40f54d:	jb     0x40f5bf
  40f54f:	push   ecx
  40f550:	cmp    eax,0x54a93476
  40f555:	mov    dl,0xd1
  40f557:	(bad)  
  40f558:	xor    al,0x93
  40f55a:	cmp    dl,BYTE PTR [ecx-0x1f64431e]
  40f560:	bnd jb 0x40f556
  40f563:	pop    esp
  40f564:	inc    ecx
  40f565:	add    ebp,DWORD PTR [ecx+0x1d]
  40f568:	sbb    al,0xf8
  40f56a:	mov    dl,0xea
  40f56c:	sub    ch,BYTE PTR [edi]
  40f56e:	sbb    BYTE PTR [ebx-0x4e9c5819],dh
  40f574:	push   ds
  40f575:	shl    ah,1
  40f577:	jbe    0x40f5eb
  40f579:	or     eax,0xbe0f37af
  40f57e:	lock out 0xeb,eax
  40f581:	in     eax,dx
  40f582:	add    dl,bl
  40f584:	(bad)  
  40f586:	pop    ebp
  40f587:	sti    
  40f588:	sbb    DWORD PTR [eax+esi*1],ebp
  40f58b:	repnz xor edi,ebp
  40f58e:	mov    ds:0x3cd02880,al
  40f593:	lock xlat BYTE PTR ds:[ebx]
  40f595:	stc    
  40f596:	sbb    ebp,eax
  40f598:	dec    ebx
  40f599:	and    BYTE PTR [eax],bl
  40f59b:	mov    al,0x6e
  40f59d:	pushf  
  40f59e:	icebp  
  40f59f:	cmc    
  40f5a0:	mov    bh,0x73
  40f5a2:	jno    0x40f615
  40f5a4:	loopne 0x40f5a4
  40f5a6:	mov    ebp,0x64821da4
  40f5ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5ac:	jmp    0x40f5d3
  40f5ae:	or     DWORD PTR [edi],ebx
  40f5b0:	ss sbb al,0x82
  40f5b3:	cli    
  40f5b4:	(bad)  
  40f5b6:	inc    ebp
  40f5b7:	push   eax
  40f5b8:	jo     0x40f590
  40f5ba:	mov    ds:0x96a02ef0,al
  40f5bf:	leave  
  40f5c0:	sti    
  40f5c1:	sub    eax,0x8b8b98ef
  40f5c6:	xor    edx,esp
  40f5c8:	jmp    FWORD PTR [edx+0x7]
  40f5cb:	mov    eax,esp
  40f5cd:	pop    ds
  40f5ce:	outs   dx,DWORD PTR ds:[esi]
  40f5cf:	xchg   DWORD PTR [edi-0x3e],edi
  40f5d2:	push   esp
  40f5d3:	popa   
  40f5d4:	add    al,0x5d
  40f5d6:	shl    DWORD PTR [esi-0x3154ac93],1
  40f5dc:	inc    ebx
  40f5dd:	push   esp
  40f5de:	add    DWORD PTR [eax],0xa3338f76
  40f5e4:	std    
  40f5e5:	aas    
  40f5e6:	pop    ecx
  40f5e7:	mov    eax,0xf646ab4c
  40f5ec:	or     eax,0xa2fc4484
  40f5f1:	and    al,0x81
  40f5f3:	into   
  40f5f4:	adc    eax,0x2b3ae5d8
  40f5f9:	push   edx
  40f5fa:	lahf   
  40f5fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5fc:	xor    al,0xa1
  40f5fe:	nop
  40f5ff:	xor    al,0x2c
  40f601:	xor    ebp,DWORD PTR [ecx+esi*2]
  40f604:	mov    ch,0x4a
  40f606:	cld    
  40f607:	sub    al,0x34
  40f609:	shr    DWORD PTR [ebp+0x7040cce1],0x2e
  40f610:	xchg   DWORD PTR [edx],ebx
  40f612:	cmp    ch,bl
  40f614:	inc    ecx
  40f615:	push   ds
  40f616:	test   eax,0xdc9cb85c
  40f61b:	mov    ebx,fs
  40f61d:	je     0x40f671
  40f61f:	call   0xd259:0x1596dfea
  40f626:	les    edx,FWORD PTR [ecx-0x2a]
  40f629:	pop    ecx
  40f62a:	out    dx,eax
  40f62b:	mov    bl,BYTE PTR [eax]
  40f62d:	in     al,dx
  40f62e:	fcomip st,st(3)
  40f630:	hlt    
  40f631:	and    ebp,DWORD PTR [ebp+edi*1-0x6e88fc76]
  40f638:	(bad)  
  40f639:	hlt    
  40f63a:	cdq    
  40f63b:	scas   eax,DWORD PTR es:[edi]
  40f63c:	xor    al,0x42
  40f63e:	rcr    DWORD PTR [edi],cl
  40f640:	jmp    0x5e37:0x5a318c39
  40f647:	sar    DWORD PTR [edi-0xa23125c],1
  40f64d:	or     al,0x6b
  40f64f:	sti    
  40f650:	mov    eax,0xc55717bb
  40f655:	fstp   TBYTE PTR [ebx-0x1a]
  40f658:	lods   eax,DWORD PTR ds:[esi]
  40f659:	div    DWORD PTR [ecx-0x19496d57]
  40f65f:	cmp    DWORD PTR [edi-0x66f2879e],edx
  40f665:	mov    ebp,0xdf880280
  40f66a:	mov    eax,ds:0x8a172bde
  40f66f:	stc    
  40f670:	loope  0x40f6a3
  40f672:	mov    DWORD PTR ds:0x34e4058c,eax
  40f678:	nop
  40f679:	ins    DWORD PTR es:[edi],dx
  40f67a:	mov    eax,ds:0xb409513
  40f67f:	ja     0x40f612
  40f681:	adc    edx,edi
  40f683:	mov    edi,0x4421a900
  40f688:	outs   dx,DWORD PTR ds:[esi]
  40f689:	or     al,0xeb
  40f68b:	jae    0x40f65e
  40f68d:	rcr    BYTE PTR [edi],0xc0
  40f690:	shl    DWORD PTR [esi],0x41
  40f693:	add    eax,0xf8eb583e
  40f698:	cmp    ecx,DWORD PTR [edi+0x6e605149]
  40f69e:	das    
  40f69f:	add    eax,edi
  40f6a1:	jmp    0x411b79
  40f6a6:	mov    eax,DWORD PTR [ebp-0x38]
  40f6a9:	add    eax,DWORD PTR [ebp+0x8]
  40f6ac:	mov    DWORD PTR [ebp-0x18],eax
  40f6af:	mov    eax,DWORD PTR [ebp-0x1c]
  40f6b2:	test   eax,eax
  40f6b4:	je     0x411b02
  40f6ba:	mov    DWORD PTR [ebp-0x20],0x0
  40f6c1:	push   0x3
  40f6c3:	xor    edx,edx
  40f6c5:	pop    edx
  40f6c6:	add    edx,0x8
  40f6c9:	push   edx
  40f6ca:	pop    ecx
  40f6cb:	push   0x6
  40f6cd:	dec    ecx
  40f6ce:	pop    ebx
  40f6cf:	dec    ebx
  40f6d0:	xchg   ebx,ecx
  40f6d2:	sub    ebx,ecx
  40f6d4:	xchg   ebx,ecx
  40f6d6:	dec    ecx
  40f6d7:	mov    eax,DWORD PTR [ebp-0x1c]
  40f6da:	imul   eax,ecx
  40f6dd:	sub    esp,eax
  40f6df:	mov    DWORD PTR [ebp-0x20],esp
  40f6e2:	mov    eax,DWORD PTR [ebp-0x4]
  40f6e5:	xor    eax,esi
  40f6e7:	add    eax,edi
  40f6e9:	jmp    0x411adb
  40f6ee:	mov    ecx,DWORD PTR [ebp-0xc]
  40f6f1:	mov    eax,DWORD PTR [ebp+0x8]
  40f6f4:	mov    edx,DWORD PTR [ebp+0x14]
  40f6f7:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40f6fb:	xor    ecx,esi
  40f6fd:	add    ecx,edi
  40f6ff:	xor    edx,edx
  40f701:	div    ecx
  40f703:	mov    ecx,DWORD PTR [ebp-0x4]
  40f706:	jmp    0x411aba
  40f70b:	outs   dx,BYTE PTR ds:[esi]
  40f70c:	lods   al,BYTE PTR ds:[esi]
  40f70d:	or     ch,al
  40f70f:	mov    cl,al
  40f711:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f712:	or     ah,0x7d
  40f715:	push   0x9399dcf0
  40f71a:	jecxz  0x40f71e
  40f71c:	scas   al,BYTE PTR es:[edi]
  40f71d:	add    DWORD PTR [ebx-0x7c7ca318],0xffffffc3
  40f724:	fwait
  40f725:	cmp    ch,cl
  40f727:	xchg   esp,eax
  40f728:	push   ecx
  40f729:	retf   
  40f72a:	fistp  QWORD PTR [esi+0x79f29902]
  40f730:	sbb    dl,dl
  40f732:	sbb    DWORD PTR [edi+edi*8+0x3511662d],edi
  40f739:	inc    esp
  40f73a:	iret   
  40f73b:	aad    0x1a
  40f73d:	ret    
  40f73e:	jmp    0x40f76e
  40f740:	aaa    
  40f741:	or     eax,DWORD PTR [ecx]
  40f743:	sbb    bh,BYTE PTR [ebx-0x9]
  40f746:	or     BYTE PTR [esp+ecx*4-0x1b],cl
  40f74a:	xlat   BYTE PTR ds:[ebx]
  40f74b:	sub    BYTE PTR [ebx-0x60],0x17
  40f74f:	dec    ebp
  40f750:	inc    ebp
  40f751:	hlt    
  40f752:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f753:	jge    0x40f776
  40f755:	ins    DWORD PTR es:[edi],dx
  40f756:	sti    
  40f757:	cld    
  40f758:	cli    
  40f759:	mov    esi,0xdb81bdfd
  40f75e:	sub    eax,0xbe674a24
  40f763:	inc    ecx
  40f764:	in     al,dx
  40f765:	and    ch,al
  40f767:	and    ah,BYTE PTR [edx]
  40f769:	jbe    0x40f7da
  40f76b:	jg     0x40f73d
  40f76d:	xchg   ebp,eax
  40f76e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f76f:	pop    esp
  40f770:	mov    ds:0xb64ac1d4,eax
  40f775:	jl     0x40f786
  40f777:	int3   
  40f778:	jb     0x40f766
  40f77a:	outs   dx,DWORD PTR ds:[esi]
  40f77b:	scas   eax,DWORD PTR es:[edi]
  40f77c:	sbb    DWORD PTR [edx+eax*1+0x7125f9e2],0x9ca4d4ae
  40f787:	push   edi
  40f788:	jb     0x40f7ce
  40f78a:	fwait
  40f78b:	cmp    BYTE PTR [eax-0x62],ah
  40f78e:	stos   BYTE PTR es:[edi],al
  40f78f:	xchg   ebx,eax
  40f790:	(bad)  
  40f791:	jne    0x40f7e6
  40f793:	das    
  40f794:	pop    ebx
  40f795:	mov    esp,0xc042911e
  40f79a:	and    eax,DWORD PTR [eax-0x564d6078]
  40f7a0:	in     eax,0xb3
  40f7a2:	inc    esp
  40f7a3:	push   esi
  40f7a4:	repz inc edi
  40f7a6:	push   ds
  40f7a7:	push   esi
  40f7a8:	pop    ss
  40f7a9:	popf   
  40f7aa:	shl    DWORD PTR [eax],1
  40f7ac:	ins    BYTE PTR es:[edi],dx
  40f7ad:	test   al,0xbe
  40f7af:	gs ins BYTE PTR es:[edi],dx
  40f7b1:	xchg   edx,eax
  40f7b2:	scas   al,BYTE PTR es:[edi]
  40f7b3:	push   ecx
  40f7b4:	dec    ebx
  40f7b5:	out    dx,eax
  40f7b6:	sbb    ebp,DWORD PTR [ecx+ebp*2]
  40f7b9:	or     BYTE PTR [edi],0x3c
  40f7bc:	data16 je 0x40f821
  40f7bf:	pop    ebx
  40f7c0:	dec    esp
  40f7c1:	cmp    eax,0xa8c3b855
  40f7c6:	sub    DWORD PTR [esp+esi*8-0x5],eax
  40f7ca:	jns    0x40f794
  40f7cc:	popa   
  40f7cd:	shr    eax,1
  40f7cf:	test   edx,esp
  40f7d1:	(bad)  
  40f7d3:	adc    BYTE PTR [edx+0x14],ch
  40f7d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7d7:	rcl    BYTE PTR [esi],cl
  40f7d9:	jg     0x40f7f8
  40f7db:	repz xor cl,dl
  40f7de:	out    dx,al
  40f7df:	test   BYTE PTR [edi+0x55],ah
  40f7e2:	rcr    eax,1
  40f7e4:	dec    eax
  40f7e5:	xor    DWORD PTR ds:0x4497fee3,edx
  40f7eb:	fstp   TBYTE PTR [edx+0x7e1a348d]
  40f7f1:	sub    ebx,esp
  40f7f3:	cmp    al,0x34
  40f7f5:	adc    ch,bh
  40f7f7:	sbb    eax,0xb20e30d2
  40f7fc:	test   BYTE PTR [ebx],al
  40f7fe:	jnp    0x40f7bb
  40f800:	mov    esp,0x49681c90
  40f805:	dec    ecx
  40f806:	int3   
  40f807:	mov    cl,0x5
  40f809:	dec    esp
  40f80a:	push   edi
  40f80b:	ret    0x78d9
  40f80e:	scas   eax,DWORD PTR es:[edi]
  40f80f:	pop    eax
  40f810:	rcl    BYTE PTR [ebx+0x7100fc5d],cl
  40f816:	push   0xffffffea
  40f818:	dec    ecx
  40f819:	test   esi,esi
  40f81b:	mov    edx,0x2d224203
  40f820:	aas    
  40f821:	fimul  WORD PTR [ecx+0x5]
  40f824:	and    edx,DWORD PTR gs:[ecx+0x3a]
  40f828:	std    
  40f829:	(bad)  
  40f82a:	retf   0x4301
  40f82d:	sbb    edi,DWORD PTR [edi]
  40f82f:	iret   
  40f830:	aas    
  40f831:	maxps  xmm1,XMMWORD PTR [ecx-0x1e3f2041]
  40f838:	into   
  40f839:	aad    0xda
  40f83b:	or     al,BYTE PTR [edi-0x21ad0296]
  40f841:	jle    0x40f7cd
  40f843:	ficomp WORD PTR [ecx+0x73]
  40f846:	adc    al,0x1c
  40f848:	adc    bl,BYTE PTR [edi-0x64]
  40f84b:	dec    edi
  40f84c:	xor    al,0xc2
  40f84e:	int3   
  40f84f:	ins    BYTE PTR es:[edi],dx
  40f850:	rcl    dl,0x4
  40f853:	inc    ebp
  40f854:	adc    dh,ch
  40f856:	sub    BYTE PTR [ebp-0x5c],ah
  40f859:	mov    al,0x4d
  40f85b:	out    dx,al
  40f85c:	in     al,0x54
  40f85e:	rcl    BYTE PTR [ebp+ebp*4+0x17],1
  40f862:	lds    ebx,FWORD PTR [eax]
  40f864:	push   esi
  40f865:	lods   al,BYTE PTR ds:[esi]
  40f866:	fcmovnu st,st(1)
  40f868:	cmp    eax,0xef35be46
  40f86d:	push   cs
  40f86e:	jnp    0x40f85a
  40f870:	jb     0x40f84a
  40f872:	jp     0x40f86f
  40f874:	push   edi
  40f875:	mov    DWORD PTR [edx+0x308d3d05],ebx
  40f87b:	mov    eax,ds:0x95628042
  40f880:	mov    eax,0x20795c6d
  40f885:	in     eax,dx
  40f886:	dec    ebx
  40f887:	mov    dh,BYTE PTR [eax]
  40f889:	fstp   QWORD PTR [edi-0x7c5196ef]
  40f88f:	js     0x40f908
  40f891:	gs mov al,0xaa
  40f894:	(bad)  
  40f895:	sti    
  40f896:	in     eax,dx
  40f897:	std    
  40f898:	shl    BYTE PTR [esi+0x60b7a76f],cl
  40f89e:	inc    ecx
  40f89f:	sbb    ch,bl
  40f8a1:	push   es
  40f8a2:	rcr    BYTE PTR ss:0x14674959,cl
  40f8a9:	imul   edx,DWORD PTR [ecx],0xfffffff4
  40f8ac:	sub    ch,dh
  40f8ae:	sub    BYTE PTR [edx-0x8c582c4],bh
  40f8b4:	hlt    
  40f8b5:	popa   
  40f8b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8b7:	lods   eax,DWORD PTR ds:[esi]
  40f8b8:	dec    ebp
  40f8b9:	fcom   DWORD PTR [ebp-0x1]
  40f8bc:	or     eax,0x4d6d4058
  40f8c1:	push   0x2d
  40f8c3:	xor    eax,0x8686d4c0
  40f8c8:	mov    ebx,0x5666255a
  40f8cd:	sub    DWORD PTR [eax-0x26],esp
  40f8d0:	mov    ecx,0x27f2c374
  40f8d5:	jg     0x40f913
  40f8d7:	loope  0x40f93e
  40f8d9:	sub    al,0x3b
  40f8db:	data16 fwait
  40f8dd:	push   es
  40f8de:	or     BYTE PTR [ebx-0x5c],0xec
  40f8e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8e3:	or     DWORD PTR [esi+ecx*1+0x5d17f858],ebp
  40f8ea:	mov    ebp,0xc4ffa0a8
  40f8ef:	jmp    0x9264:0x53026c70
  40f8f6:	test   al,0x44
  40f8f8:	or     al,0x99
  40f8fa:	or     BYTE PTR [ecx+0x25],dh
  40f8fd:	mov    esp,0xd2b40794
  40f902:	inc    ebx
  40f903:	push   eax
  40f904:	pushf  
  40f905:	clc    
  40f906:	inc    ebx
  40f907:	mov    ebp,0x651a55f5
  40f90c:	out    dx,eax
  40f90d:	dec    eax
  40f90e:	add    BYTE PTR [edx],al
  40f910:	lods   eax,DWORD PTR ds:[esi]
  40f911:	adc    eax,0x7196f8c
  40f916:	mov    DWORD PTR [esi+ecx*1+0x46],ebx
  40f91a:	mov    bl,0xbd
  40f91c:	sbb    dl,BYTE PTR [ebp-0x6c561d45]
  40f922:	or     al,0x4f
  40f924:	pop    ds
  40f925:	shl    BYTE PTR [ebp-0x1f],cl
  40f928:	(bad)  
  40f929:	(bad)  
  40f92a:	sub    DWORD PTR [edi+edi*8+0x405d301b],edi
  40f931:	ret    0xd224
  40f934:	pop    edi
  40f935:	adc    esp,edx
  40f937:	add    al,0xd8
  40f939:	pop    es
  40f93a:	pop    edx
  40f93b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f93c:	cmp    edi,DWORD PTR [ebx+ebp*4-0x47]
  40f940:	jecxz  0x40f8fd
  40f942:	sub    BYTE PTR [ecx-0x54],ch
  40f945:	imul   ebp,DWORD PTR [edi+0x52],0xa169088
  40f94c:	or     eax,0x16468072
  40f951:	xchg   DWORD PTR [ecx-0xb217fd5],esp
  40f957:	add    eax,0x857203dc
  40f95c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f95d:	xchg   edi,eax
  40f95e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f95f:	data16 jbe 0x40f95d
  40f962:	out    0x97,al
  40f964:	out    dx,al
  40f965:	(bad)  
  40f966:	mov    eax,DWORD PTR [eax+0x18]
  40f969:	ret    
  40f96a:	jbe    0x40f932
  40f96c:	popf   
  40f96d:	mov    ds:0x7fcb3e68,al
  40f972:	jmp    0x58a56f50
  40f977:	std    
  40f978:	pop    ebp
  40f979:	sbb    al,BYTE PTR [edi-0x57]
  40f97c:	xor    BYTE PTR [ecx],ch
  40f97e:	ins    BYTE PTR es:[edi],dx
  40f97f:	push   es
  40f980:	inc    esp
  40f981:	jne    0x40f938
  40f983:	aam    0xa3
  40f985:	test   BYTE PTR [ebp-0x119e5df5],bl
  40f98b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f98c:	(bad)  
  40f98d:	sbb    esi,DWORD PTR [esi+0xb]
  40f990:	lock dec edi
  40f992:	test   al,0x8b
  40f994:	test   DWORD PTR [ebx+eiz*2],ebx
  40f997:	add    DWORD PTR [ecx-0x6e],ebp
  40f99a:	sti    
  40f99b:	sbb    eax,ecx
  40f99d:	or     eax,0x67b066fc
  40f9a2:	fmul   QWORD PTR ds:0x9102f9c3
  40f9a8:	jecxz  0x40fa22
  40f9aa:	cdq    
  40f9ab:	pop    esp
  40f9ac:	(bad)  
  40f9ad:	lock std 
  40f9af:	daa    
  40f9b0:	psllw  mm5,QWORD PTR [ebx+0x57dd447a]
  40f9b7:	ss ret 0x5201
  40f9bb:	loopne 0x40fa2d
  40f9bd:	jo     0x40f9e5
  40f9bf:	and    eax,0x8ead4a08
  40f9c4:	ficomp DWORD PTR [eax+0x28]
  40f9c7:	mov    ah,0x78
  40f9c9:	cwde   
  40f9ca:	ret    
  40f9cb:	lds    ecx,FWORD PTR [eax+0x69976166]
  40f9d1:	dec    edi
  40f9d2:	dec    edi
  40f9d3:	in     eax,dx
  40f9d4:	pop    ds
  40f9d5:	or     al,0x9e
  40f9d7:	cli    
  40f9d8:	ins    DWORD PTR es:[edi],dx
  40f9d9:	pop    ecx
  40f9da:	mov    bl,0x40
  40f9dc:	(bad)  
  40f9dd:	sub    al,0xa0
  40f9df:	ja     0x40fa08
  40f9e1:	sti    
  40f9e2:	push   eax
  40f9e3:	adc    DWORD PTR [ebx+0x2c],esi
  40f9e6:	aas    
  40f9e7:	imul   BYTE PTR [ebp+0x46]
  40f9ea:	xrelease xchg DWORD PTR [edx],ebx
  40f9ed:	adc    al,cl
  40f9ef:	sbb    eax,0x7aafed0f
  40f9f4:	sbb    BYTE PTR [esi],0xd0
  40f9f7:	pop    ebp
  40f9f8:	add    dl,dl
  40f9fa:	fucomi st,st(3)
  40f9fc:	jmp    0x40f985
  40f9fe:	dec    edx
  40f9ff:	mov    WORD PTR [ecx],?
  40fa01:	lods   al,BYTE PTR ds:[esi]
  40fa02:	pop    esi
  40fa03:	add    esp,ebx
  40fa05:	xor    edi,DWORD PTR [ebx]
  40fa07:	popa   
  40fa08:	mov    edi,0xe0032eaf
  40fa0d:	inc    esi
  40fa0e:	imul   ecx,edx,0x6d
  40fa11:	sub    BYTE PTR [eax],0x53
  40fa14:	cmp    eax,0x1af7b116
  40fa19:	jl     0x40fa0d
  40fa1b:	xor    al,0xa8
  40fa1d:	es push es
  40fa1f:	mov    ecx,DWORD PTR [edx]
  40fa21:	adc    BYTE PTR [esi-0x48],cl
  40fa24:	adc    DWORD PTR [ecx+0x4b49ebf3],ebx
  40fa2a:	jge    0x40fa69
  40fa2c:	sbb    edx,eax
  40fa2e:	test   eax,0x607a4e06
  40fa33:	mov    bl,0x2a
  40fa35:	popa   
  40fa36:	cmp    eax,0x2f664153
  40fa3b:	jmp    0xabdf:0xfbadfcb
  40fa42:	inc    DWORD PTR [edx]
  40fa44:	mov    edx,0x48ce20ba
  40fa49:	pop    ebx
  40fa4a:	sbb    al,BYTE PTR [eax-0x61]
  40fa4d:	xor    ebp,DWORD PTR ds:0xbaf6da40
  40fa53:	mov    al,0x1d
  40fa55:	mov    WORD PTR [ebp-0x7b839e4d],gs
  40fa5b:	mov    al,0x77
  40fa5d:	xchg   edi,eax
  40fa5e:	inc    edi
  40fa5f:	jns    0x40fa8d
  40fa61:	out    dx,al
  40fa62:	fadd   QWORD PTR [ecx+0xad9156a]
  40fa68:	std    
  40fa69:	xor    BYTE PTR cs:[edi],bh
  40fa6c:	mov    esp,0x7a43ef10
  40fa71:	daa    
  40fa72:	cld    
  40fa73:	pop    ebp
  40fa74:	fs aaa 
  40fa76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa77:	call   0x3546:0xc70f3d0c
  40fa7e:	adc    edx,DWORD PTR [edi+0x52e495db]
  40fa84:	ficomp DWORD PTR es:[esi]
  40fa87:	cs repz cs mov ebp,0xd3b3b4cf
  40fa8f:	fild   QWORD PTR [ecx+0xd2ad713]
  40fa95:	dec    edx
  40fa96:	cdq    
  40fa97:	jge    0x40fa38
  40fa99:	push   ebp
  40fa9a:	xchg   ecx,eax
  40fa9b:	jle    0x40fb0e
  40fa9d:	push   ds
  40fa9e:	inc    ecx
  40fa9f:	push   ds
  40faa0:	cmp    cl,BYTE PTR [edi-0x5d]
  40faa3:	hlt    
  40faa4:	setae  dh
  40faa7:	and    eax,0xc4b7e64e
  40faac:	nop
  40faad:	mov    dl,0xe4
  40faaf:	and    BYTE PTR [eax],cl
  40fab1:	push   esp
  40fab2:	(bad)
  40fab6:	pop    es
  40fab7:	xor    esp,edi
  40fab9:	jmp    0x7eef:0x222390cf
  40fac0:	mov    esi,0x607ba94d
  40fac5:	adc    al,0x7c
  40fac7:	aas    
  40fac8:	bnd jnp 0x40faa7
  40facb:	in     al,0xe0
  40facd:	popf   
  40face:	jl     0x40fad8
  40fad0:	push   eax
  40fad1:	neg    BYTE PTR [esi]
  40fad3:	mov    esp,0xe86c6963
  40fad8:	dec    esi
  40fad9:	inc    ebx
  40fada:	pop    ecx
  40fadb:	retf   
  40fadc:	out    dx,eax
  40fadd:	imul   eax,ecx,0x62489d92
  40fae3:	mov    ebp,0xb7878f86
  40fae8:	mov    esi,0x3b0fca95
  40faed:	test   DWORD PTR [esi+0x59],esi
  40faf0:	ds (bad) 
  40faf2:	sub    eax,0x759b0157
  40faf7:	rcr    BYTE PTR [eax-0x3a],1
  40fafa:	cmp    BYTE PTR [eax-0x75f0d4e5],bh
  40fb00:	push   0x77
  40fb02:	dec    esp
  40fb03:	(bad)  
  40fb04:	retf   0xe0bb
  40fb07:	inc    esp
  40fb08:	fisub  DWORD PTR ds:0x2dd0ae6b
  40fb0e:	in     al,dx
  40fb0f:	inc    eax
  40fb10:	fld    QWORD PTR [esi-0x35]
  40fb13:	inc    ebx
  40fb14:	pushf  
  40fb15:	xlat   BYTE PTR ds:[ebx]
  40fb16:	pop    ds
  40fb17:	hlt    
  40fb18:	jmp    0x40fb39
  40fb1a:	mov    BYTE PTR [eax],ah
  40fb1c:	xor    al,0xaa
  40fb1e:	shr    DWORD PTR [esi+0x4],0x9e
  40fb22:	cmp    eax,0x6f3ef504
  40fb27:	fs cmc 
  40fb29:	xlat   BYTE PTR ds:[ebx]
  40fb2a:	aaa    
  40fb2b:	enter  0x1f11,0x7
  40fb2f:	mov    al,ds:0xa2c0cef1
  40fb34:	xchg   ecx,eax
  40fb35:	jnp    0x40fb90
  40fb37:	dec    ebp
  40fb38:	adc    cl,BYTE PTR [ecx-0x4247e764]
  40fb3e:	mov    ebp,DWORD PTR [ebx-0x41]
  40fb41:	inc    ecx
  40fb42:	dec    ebp
  40fb43:	loop   0x40fb11
  40fb45:	cli    
  40fb46:	call   0xb1c5:0x16e3bb70
  40fb4d:	jmp    0xea62:0x3aa4ab9c
  40fb54:	addr16 test eax,0x466592a2
  40fb5a:	test   DWORD PTR [ebp+0x11],0x683772d3
  40fb61:	loope  0x40fbbe
  40fb63:	xchg   edi,eax
  40fb64:	push   cs
  40fb65:	jmp    0x40fb6e
  40fb67:	mov    ds:0x6f87b67d,al
  40fb6c:	(bad)  
  40fb6d:	xor    dl,dh
  40fb6f:	sub    BYTE PTR [edi+edx*2+0x1],bh
  40fb73:	or     edx,DWORD PTR [ebp-0x16]
  40fb76:	xor    ebp,DWORD PTR [ecx]
  40fb78:	sbb    al,BYTE PTR ds:0xff31b6e7
  40fb7e:	loop   0x40fba4
  40fb80:	clc    
  40fb81:	push   cs
  40fb82:	loope  0x40fbef
  40fb84:	push   esp
  40fb85:	pop    ecx
  40fb86:	mul    BYTE PTR [edx-0x3ab984d9]
  40fb8c:	dec    edx
  40fb8d:	popf   
  40fb8e:	push   es
  40fb8f:	mov    edi,0xc32262b1
  40fb94:	jbe    0x40fb91
  40fb96:	or     al,0xa5
  40fb98:	sbb    eax,0xdfd6817d
  40fb9d:	adc    DWORD PTR [edx+0x1b1f2e6b],edx
  40fba3:	dec    esi
  40fba4:	dec    esi
  40fba5:	iret   
  40fba6:	cdq    
  40fba7:	je     0x40fb48
  40fba9:	(bad)  
  40fbab:	jg     0x40fc03
  40fbad:	adc    DWORD PTR [edi],esp
  40fbaf:	in     eax,0x51
  40fbb1:	test   eax,0x7e1b3136
  40fbb6:	retf   0x8b65
  40fbb9:	xchg   ebp,eax
  40fbba:	adc    al,0xfc
  40fbbc:	and    ecx,ebx
  40fbbe:	aas    
  40fbbf:	mov    edx,0x1abebd4f
  40fbc4:	icebp  
  40fbc5:	jl     0x40fbaf
  40fbc7:	stc    
  40fbc8:	fs dec esp
  40fbca:	(bad)  
  40fbcb:	in     eax,dx
  40fbcc:	mov    esp,0x6de66aa9
  40fbd1:	fimul  DWORD PTR [eax-0x14]
  40fbd4:	jo     0x40fbfd
  40fbd6:	xor    DWORD PTR [ecx+esi*4-0x2b],ebp
  40fbda:	push   cs
  40fbdb:	push   edx
  40fbdc:	xor    eax,esi
  40fbde:	int    0xaf
  40fbe0:	pop    edi
  40fbe1:	aam    0x72
  40fbe3:	sti    
  40fbe4:	add    al,0xf4
  40fbe6:	jmp    0x97386a25
  40fbeb:	and    dh,bh
  40fbed:	(bad)  
  40fbee:	adc    eax,0x39ca4aff
  40fbf3:	aaa    
  40fbf4:	mov    BYTE PTR [edx+0x57400c1],0x55
  40fbfb:	hlt    
  40fbfc:	cdq    
  40fbfd:	aas    
  40fbfe:	stos   DWORD PTR es:[edi],eax
  40fbff:	jp     0x40fc06
  40fc01:	sub    DWORD PTR [ebp-0x427094e3],eax
  40fc07:	mov    bl,0xc8
  40fc09:	mov    esi,0xb92b0236
  40fc0e:	fadd   st,st(4)
  40fc10:	lock cmp al,0x41
  40fc13:	ins    BYTE PTR es:[edi],dx
  40fc14:	test   eax,0x7d6ef40d
  40fc19:	dec    esp
  40fc1a:	out    dx,eax
  40fc1b:	sbb    cl,bh
  40fc1d:	adc    eax,0xc93c06be
  40fc22:	jno    0x40fbb0
  40fc24:	test   al,0x69
  40fc26:	mov    dh,0x42
  40fc28:	jg     0x40fc03
  40fc2a:	out    dx,al
  40fc2b:	mov    ebp,0xebe1d595
  40fc30:	adc    dh,BYTE PTR [eax]
  40fc32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc33:	jae    0x40fbf7
  40fc35:	popf   
  40fc36:	sub    ebx,DWORD PTR [eax]
  40fc38:	sbb    bl,al
  40fc3a:	and    eax,0xd13c8af0
  40fc3f:	rol    al,cl
  40fc41:	push   0xffffffb0
  40fc43:	mov    ebx,0x2a8f587f
  40fc48:	dec    ebp
  40fc49:	mov    cl,0x14
  40fc4b:	sub    BYTE PTR [edi-0x2d],dh
  40fc4e:	data16 cs popw ds
  40fc52:	and    al,0x81
  40fc54:	hlt    
  40fc55:	dec    ebp
  40fc56:	in     al,0xa0
  40fc58:	scas   al,BYTE PTR es:[edi]
  40fc59:	std    
  40fc5a:	outs   dx,BYTE PTR ds:[esi]
  40fc5b:	pop    edx
  40fc5c:	dec    ebp
  40fc5d:	test   DWORD PTR [edi],edi
  40fc5f:	sysenter 
  40fc61:	mov    cl,0x4e
  40fc63:	mov    ah,0x5c
  40fc65:	xchg   esp,eax
  40fc66:	pop    ecx
  40fc67:	mov    cl,0x87
  40fc69:	mov    ah,0x39
  40fc6b:	inc    esi
  40fc6c:	inc    ebp
  40fc6d:	(bad)  
  40fc6e:	pop    esp
  40fc6f:	jns    0x40fcbb
  40fc71:	cmp    bh,dh
  40fc73:	mov    dl,0x80
  40fc75:	inc    ecx
  40fc76:	sub    dl,BYTE PTR [ebp-0x13d21251]
  40fc7c:	sbb    eax,0x9b5c7bb9
  40fc81:	push   edx
  40fc82:	xor    eax,0xbda2f6af
  40fc87:	mov    ds:0x40dcd2dc,al
  40fc8c:	cmp    edi,eax
  40fc8e:	or     eax,0x4d513cac
  40fc93:	fcomp  QWORD PTR [edx+0x62729286]
  40fc99:	inc    ebx
  40fc9a:	sbb    al,0x37
  40fc9c:	data16 aaa 
  40fc9e:	push   ecx
  40fc9f:	rcl    BYTE PTR [edx-0x7235a94c],cl
  40fca5:	or     cl,BYTE PTR [eax+edx*8+0x255792c6]
  40fcac:	(bad)  
  40fcad:	or     al,0x2e
  40fcaf:	adc    eax,0x9d00680e
  40fcb4:	inc    ebp
  40fcb5:	sbb    esp,DWORD PTR [ecx]
  40fcb7:	test   DWORD PTR [edi+0x3c],0x850b303a
  40fcbe:	add    al,BYTE PTR [eax+0xf]
  40fcc1:	mov    edx,DWORD PTR ss:[ebp-0x5816c9ed]
  40fcc8:	cdq    
  40fcc9:	pop    esi
  40fcca:	(bad)  
  40fccb:	dec    esi
  40fccc:	imul   ebx,DWORD PTR [edi],0xb7319787
  40fcd2:	pop    edx
  40fcd3:	enter  0xf86a,0xc4
  40fcd7:	mov    esp,0x1eb0541a
  40fcdc:	sbb    esi,DWORD PTR [ebx]
  40fcde:	test   ah,ch
  40fce0:	jnp    0x40fc8b
  40fce2:	in     al,0x67
  40fce4:	and    BYTE PTR [edx-0x218495a9],ah
  40fcea:	lods   eax,DWORD PTR ds:[esi]
  40fceb:	cmp    esi,DWORD PTR [edx]
  40fced:	in     al,0x8a
  40fcef:	xor    esp,DWORD PTR fs:[di+0x5c4a]
  40fcf5:	mov    edx,0x9519ff89
  40fcfa:	mov    ebp,0x96f78ae7
  40fcff:	pop    ss
  40fd00:	icebp  
  40fd01:	push   0x8579bdea
  40fd06:	mov    ds:0xac79c489,eax
  40fd0b:	fist   WORD PTR [esp+ebp*1+0x14]
  40fd0f:	push   esp
  40fd10:	stc    
  40fd11:	adc    al,0x45
  40fd13:	add    DWORD PTR [ebp-0x4620a613],esp
  40fd19:	pop    ecx
  40fd1a:	stos   BYTE PTR es:[edi],al
  40fd1b:	xlat   BYTE PTR ds:[ebx]
  40fd1c:	cmp    al,0x21
  40fd1e:	mov    ebx,0xe9241fb4
  40fd23:	mov    bh,BYTE PTR [eax]
  40fd25:	xor    eax,0xdc04dd22
  40fd2a:	sbb    cl,dl
  40fd2c:	inc    ebp
  40fd2d:	pop    ebp
  40fd2e:	or     eax,0x199cb91
  40fd33:	mov    DWORD PTR [edi],ecx
  40fd35:	jg     0x40fced
  40fd37:	repz mov ch,0xb4
  40fd3a:	pop    esp
  40fd3b:	mov    al,ds:0x594de79
  40fd40:	add    BYTE PTR [edi+0x150471e5],dh
  40fd46:	mov    bl,0x23
  40fd48:	add    BYTE PTR [ecx],0xf
  40fd4b:	add    DWORD PTR [eax],esp
  40fd4d:	ja     0x40fd15
  40fd4f:	inc    ebx
  40fd50:	into   
  40fd51:	ins    BYTE PTR es:[edi],dx
  40fd52:	pusha  
  40fd53:	popf   
  40fd54:	cmc    
  40fd55:	out    dx,al
  40fd56:	stc    
  40fd57:	fcomp  st(4)
  40fd59:	push   ds
  40fd5a:	test   cl,ah
  40fd5c:	lock add cl,BYTE PTR [eax]
  40fd5f:	cmp    al,0x3a
  40fd61:	call   0xd982:0xf4f6547b
  40fd68:	and    eax,DWORD PTR ds:0xef1b14a7
  40fd6e:	jnp    0x40fd14
  40fd70:	(bad)  
  40fd72:	push   ss
  40fd73:	xchg   ebp,eax
  40fd74:	push   esp
  40fd75:	add    ebx,DWORD PTR [edi+0x39]
  40fd78:	loope  0x40fd8c
  40fd7a:	shl    DWORD PTR [ebp+0x3e4dd993],cl
  40fd80:	push   0x35da3702
  40fd85:	xor    BYTE PTR [ebx+0x29],bh
  40fd88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd89:	pusha  
  40fd8a:	addr16 mov bl,0xd8
  40fd8d:	pop    esp
  40fd8e:	lea    ebp,[esi-0x28]
  40fd91:	ins    DWORD PTR es:[edi],dx
  40fd92:	pop    esp
  40fd93:	popa   
  40fd94:	and    DWORD PTR [edx+edi*1],ebp
  40fd97:	jmp    FWORD PTR [ecx-0x61]
  40fd9a:	and    eax,0x6b34bc40
  40fd9f:	push   esi
  40fda0:	nop
  40fda1:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40fda3:	leave  
  40fda4:	std    
  40fda5:	add    esp,esp
  40fda7:	jnp    0x40fd43
  40fda9:	mov    ecx,0xf9d570aa
  40fdae:	dec    esp
  40fdaf:	lock or al,0xb
  40fdb2:	adc    al,0x1f
  40fdb4:	jo     0x40fdd3
  40fdb6:	stos   BYTE PTR es:[edi],al
  40fdb7:	pop    ebx
  40fdb8:	rol    DWORD PTR [edi+edi*4-0x4c],0xdf
  40fdbd:	adc    al,0x9
  40fdbf:	sbb    eax,edx
  40fdc1:	pop    ebx
  40fdc2:	lea    esp,[edx+0x1e2861fe]
  40fdc8:	fucomp st(1)
  40fdca:	sub    al,0x54
  40fdcc:	pop    esi
  40fdcd:	mov    ds:0x91868b7a,al
  40fdd2:	sbb    ebx,edi
  40fdd4:	push   0xffffffb4
  40fdd6:	test   BYTE PTR [edi],bh
  40fdd8:	mov    ebx,0xe219b743
  40fddd:	inc    ecx
  40fdde:	add    edx,DWORD PTR [eiz*8+0x6a4ec01f]
  40fde5:	add    DWORD PTR [ebx+eiz*1-0x10],edx
  40fde9:	jns    0x40fe41
  40fdeb:	inc    BYTE PTR [ebx-0x10]
  40fdee:	mov    dh,BYTE PTR [esi]
  40fdf0:	leave  
  40fdf1:	mov    WORD PTR [edi-0x3a],es
  40fdf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fdf5:	fld    DWORD PTR [edx]
  40fdf7:	popa   
  40fdf8:	dec    edx
  40fdf9:	mov    ebx,DWORD PTR [edx+0x21]
  40fdfc:	cmp    al,0x52
  40fdfe:	xchg   esp,eax
  40fdff:	ins    DWORD PTR es:[edi],dx
  40fe00:	xchg   BYTE PTR [edx],dl
  40fe02:	push   ss
  40fe03:	not    BYTE PTR [esi-0x3a]
  40fe06:	es pusha 
  40fe08:	popa   
  40fe09:	xlat   BYTE PTR ds:[ebx]
  40fe0a:	retf   
  40fe0b:	rcr    BYTE PTR [edx],cl
  40fe0d:	test   al,0x3
  40fe0f:	out    0xd7,eax
  40fe11:	dec    eax
  40fe12:	cld    
  40fe13:	pop    ebx
  40fe14:	mov    BYTE PTR [edx+eax*1-0x7],cl
  40fe18:	(bad)  
  40fe19:	aad    0xa0
  40fe1b:	ret    0x4b44
  40fe1e:	scas   eax,DWORD PTR es:[edi]
  40fe1f:	jmp    0xa212:0xaa48dabf
  40fe26:	sti    
  40fe27:	rol    DWORD PTR [edi+0xd],cl
  40fe2a:	jb     0x40fdf1
  40fe2c:	jge    0x40fe9e
  40fe2e:	dec    ecx
  40fe2f:	pop    ebx
  40fe30:	sbb    DWORD PTR [edi+eiz*2-0x54a65f71],0xe0c78719
  40fe3b:	xchg   BYTE PTR [esi-0x1edddd1f],dh
  40fe41:	sbb    DWORD PTR [edi],0xffffff94
  40fe44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe45:	sub    DWORD PTR [edx-0x20198fac],0xffffffaf
  40fe4c:	iret   
  40fe4d:	mov    esi,0x574e7319
  40fe52:	pop    esp
  40fe53:	push   eax
  40fe54:	xchg   ebp,eax
  40fe55:	jne    0x40fe60
  40fe57:	sbb    al,0x1f
  40fe59:	cld    
  40fe5a:	mov    esi,0x280da57e
  40fe5f:	dec    esp
  40fe60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe61:	cdq    
  40fe62:	pushf  
  40fe63:	in     al,dx
  40fe64:	int3   
  40fe65:	sar    DWORD PTR [esi],0x5f
  40fe68:	push   eax
  40fe69:	in     al,0x1e
  40fe6b:	fld    DWORD PTR [edx+0x1e]
  40fe6e:	int3   
  40fe6f:	jecxz  0x40fe34
  40fe71:	push   0xffffff9e
  40fe73:	add    al,0x33
  40fe75:	or     BYTE PTR [esp+0xcb5dc8e],0x18
  40fe7d:	mov    bh,0xf
  40fe7f:	rcl    DWORD PTR [edx],cl
  40fe81:	or     al,0x70
  40fe83:	jae    0x40fe30
  40fe85:	jne    0x40fe5d
  40fe87:	add    ah,BYTE PTR [ebx+edi*4]
  40fe8a:	imul   DWORD PTR [edi+0x69d4d1]
  40fe90:	pop    edi
  40fe91:	repnz inc eax
  40fe93:	pop    es
  40fe94:	and    bh,BYTE PTR [edi]
  40fe96:	push   cs
  40fe97:	lock jl 0x40fe20
  40fe9a:	ret    0xf9ed
  40fe9d:	mov    al,0x59
  40fe9f:	push   ds
  40fea0:	pop    eax
  40fea1:	mov    al,0x9
  40fea3:	xor    al,BYTE PTR [edi+0x35ea7f53]
  40fea9:	pop    ebx
  40feaa:	sbb    al,0xdd
  40feac:	(bad)  
  40fead:	cmp    ah,BYTE PTR [ebp+0x7a9326c9]
  40feb3:	xchg   edx,eax
  40feb4:	xlat   BYTE PTR ds:[ebx]
  40feb5:	sbb    DWORD PTR [edx-0x1a9770da],ebp
  40febb:	lea    eax,[ecx+0x2c7513b4]
  40fec1:	pop    es
  40fec2:	enter  0xb82a,0xd2
  40fec6:	push   ecx
  40fec7:	adc    al,0xfa
  40fec9:	or     eax,0x1aecb9d3
  40fece:	sub    al,bh
  40fed0:	pop    ss
  40fed1:	push   esi
  40fed2:	mov    ds:0x2875ce8d,eax
  40fed7:	outs   dx,BYTE PTR ds:[esi]
  40fed8:	ja     0x40fe9e
  40feda:	lahf   
  40fedb:	add    DWORD PTR [ecx-0x42],edi
  40fede:	in     al,dx
  40fedf:	mov    ch,0x9
  40fee1:	ins    BYTE PTR es:[edi],dx
  40fee2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fee3:	xchg   ebp,eax
  40fee4:	call   0x4edb912f
  40fee9:	xor    al,dl
  40feeb:	push   esp
  40feec:	mov    dh,0xa0
  40feee:	test   eax,0xae645586
  40fef3:	repz ret 0x968a
  40fef7:	dec    eax
  40fef8:	fs and esp,esi
  40fefb:	mov    ebx,0x20d7fa47
  40ff00:	dec    ecx
  40ff01:	xchg   edx,eax
  40ff02:	or     al,0x37
  40ff04:	and    BYTE PTR [eax+0x7b],dl
  40ff07:	sar    BYTE PTR [esp+ebp*4-0x268dbb79],1
  40ff0e:	push   cs
  40ff0f:	mov    BYTE PTR [esi-0x4d],al
  40ff12:	mov    eax,0x65141854
  40ff17:	push   esi
  40ff18:	xchg   ebp,eax
  40ff19:	sbb    al,BYTE PTR [eax]
  40ff1b:	ror    BYTE PTR [ecx],0xd7
  40ff1e:	icebp  
  40ff1f:	pop    ss
  40ff20:	retf   0x95a6
  40ff23:	out    0x1,eax
  40ff25:	add    DWORD PTR [ecx],ebp
  40ff27:	icebp  
  40ff28:	push   es
  40ff29:	sbb    al,0xa4
  40ff2b:	lods   al,BYTE PTR ds:[esi]
  40ff2c:	dec    edx
  40ff2d:	ja     0x40ff15
  40ff2f:	or     al,0xeb
  40ff31:	jg     0x40ff8e
  40ff33:	retf   0x78e1
  40ff36:	dec    esp
  40ff37:	out    0xc8,al
  40ff39:	xlat   BYTE PTR ds:[ebx]
  40ff3a:	imul   eax,eax,0x31146815
  40ff40:	int    0x47
  40ff42:	aad    0xa7
  40ff44:	pop    eax
  40ff45:	xchg   esp,eax
  40ff46:	test   dh,bh
  40ff48:	idiv   ecx
  40ff4a:	shl    BYTE PTR [eax-0x34f251d8],0x7c
  40ff51:	mov    DWORD PTR [esi-0x23],0x7aa0a5ed
  40ff58:	mov    cs,ebp
  40ff5a:	xchg   esp,eax
  40ff5b:	jmp    0x1a72:0xe7d228c9
  40ff62:	push   eax
  40ff63:	adc    DWORD PTR ds:0x78b56b89,ebp
  40ff69:	jg     0x40ff98
  40ff6b:	add    eax,0x82aeadbd
  40ff70:	push   ebp
  40ff71:	hlt    
  40ff72:	fld    TBYTE PTR [ecx+0x4c]
  40ff75:	out    dx,al
  40ff76:	dec    edi
  40ff77:	jne    0x40ff3e
  40ff79:	ds shr edi,1
  40ff7c:	mov    eax,0x894228ed
  40ff81:	cwde   
  40ff82:	pusha  
  40ff83:	push   ecx
  40ff84:	fwait
  40ff85:	pop    ebp
  40ff86:	in     al,0x6c
  40ff88:	cld    
  40ff89:	push   ds
  40ff8a:	mov    ah,BYTE PTR [eax-0x3c1f715a]
  40ff90:	jb     0x40ff38
  40ff92:	xchg   edi,eax
  40ff93:	retf   
  40ff94:	mov    edx,0x5e3c4397
  40ff9a:	(bad)  
  40ff9b:	iret   
  40ff9c:	push   0x81375ea4
  40ffa1:	scas   al,BYTE PTR es:[edi]
  40ffa2:	or     DWORD PTR [esi-0x36],edx
  40ffa5:	jl     0x40ff43
  40ffa7:	dec    edi
  40ffa8:	mov    esi,0xc620a2ab
  40ffad:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffaf:	dec    edi
  40ffb0:	mov    ss,esi
  40ffb2:	test   eax,0xb3ea4ae0
  40ffb7:	mov    edx,0x893a3286
  40ffbc:	mov    edi,0xd5fba9f4
  40ffc1:	push   ds
  40ffc2:	aas    
  40ffc3:	sub    eax,0x59aa4e6b
  40ffc8:	stos   BYTE PTR es:[edi],al
  40ffc9:	xchg   DWORD PTR [edx],ebx
  40ffcb:	mov    ch,BYTE PTR [eax]
  40ffcd:	jmp    0xf545:0x22b70f76
  40ffd4:	ret    0xc124
  40ffd7:	sbb    eax,0x26838698
  40ffdc:	repnz scas eax,DWORD PTR es:[edi]
  40ffde:	je     0x40ffce
  40ffe0:	je     0x40ff87
  40ffe2:	mov    edi,0x598de54e
  40ffe7:	mov    eax,0xb7870482
  40ffec:	sti    
  40ffed:	pushf  
  40ffee:	mov    ebx,0x886a83cc
  40fff3:	sbb    ah,dl
  40fff5:	sbb    al,0xcf
  40fff7:	inc    edx
  40fff8:	and    eax,0xe5d103e4
  40fffd:	sub    cl,BYTE PTR [edx+0x46c6f7e4]
  410003:	test   al,0xa4
  410005:	inc    edi
  410006:	sbb    ebx,ebx
  410008:	push   es
  410009:	inc    BYTE PTR ds:0xb0c2380c
  41000f:	sub    eax,0x47cc941b
  410014:	adc    eax,0xe29bd247
  410019:	(bad)  
  41001a:	in     al,dx
  41001b:	scas   al,BYTE PTR es:[edi]
  41001c:	push   ss
  41001d:	les    eax,FWORD PTR ds:0x6a7dbe28
  410023:	sahf   
  410024:	sub    eax,0xfc289f25
  410029:	ror    DWORD PTR [ebx-0x9],0x38
  41002d:	int3   
  41002e:	and    bh,BYTE PTR [ecx]
  410030:	scas   eax,DWORD PTR es:[edi]
  410031:	dec    ebp
  410032:	mov    DWORD PTR [ecx],edx
  410034:	cmp    al,0xbc
  410036:	rcl    DWORD PTR [ebp-0x21ed7b3b],0xee
  41003d:	loopne 0x410044
  41003f:	or     ebp,DWORD PTR [ebx-0x24]
  410042:	mov    ax,0xcc53
  410047:	jbe    0x41003f
  410049:	jbe    0x41005c
  41004b:	stos   BYTE PTR es:[edi],al
  41004c:	scas   al,BYTE PTR es:[edi]
  41004d:	mov    DWORD PTR fs:[eax],eax
  410050:	rol    DWORD PTR [edi-0x4c416f0c],cl
  410056:	loop   0x410001
  410058:	sub    ah,BYTE PTR [ecx-0x5ad4d9d2]
  41005e:	sub    DWORD PTR [esi],ecx
  410060:	ret    0x2bb3
  410063:	sbb    al,0xbc
  410065:	rcl    al,1
  410067:	cmp    eax,0x749663e3
  41006d:	repz icebp 
  41006f:	mov    ecx,0xaa65bdae
  410074:	mul    esi
  410076:	mov    DWORD PTR [eax+0x58b944e5],ebp
  41007c:	pushf  
  41007d:	jmp    0x410056
  41007f:	dec    esp
  410080:	mov    ebp,0x9c4749d3
  410085:	and    DWORD PTR [ebx-0x19a3e7a3],0x2f
  41008c:	lds    esp,FWORD PTR [ebp+0x6f]
  41008f:	cmp    DWORD PTR [esi],ecx
  410091:	adc    eax,0x5df0a23
  410096:	push   ebx
  410097:	pop    ebx
  410098:	jge    0x41001a
  41009a:	mov    edi,DWORD PTR es:[edi-0x59]
  41009e:	sbb    ah,dl
  4100a0:	test   al,0x9d
  4100a2:	pop    esp
  4100a3:	in     eax,0x1a
  4100a5:	xlat   BYTE PTR ds:[ebx]
  4100a6:	sbb    eax,0x617d52ca
  4100ab:	mov    dl,0xe1
  4100ad:	or     ecx,DWORD PTR [eax+0x50636801]
  4100b3:	int3   
  4100b4:	and    al,BYTE PTR [edx+0x3986c7c6]
  4100ba:	sbb    BYTE PTR ds:0xae096c10,0xa9
  4100c1:	lahf   
  4100c2:	popa   
  4100c3:	inc    edi
  4100c4:	rcl    BYTE PTR [esi+0x77],cl
  4100c7:	rcl    DWORD PTR [ebp-0x12a98a22],cl
  4100cd:	push   0xf7cb3113
  4100d2:	std    
  4100d3:	mov    eax,0xb5564ee3
  4100d8:	rcl    BYTE PTR [eax],cl
  4100da:	aaa    
  4100db:	mov    ebp,0x7b629dd9
  4100e0:	inc    esp
  4100e1:	and    bl,al
  4100e3:	nop
  4100e4:	mov    ebp,esi
  4100e6:	sar    ah,0xdd
  4100e9:	mov    BYTE PTR [ecx+eax*2-0x55],ch
  4100ed:	mul    DWORD PTR [ebx]
  4100ef:	mov    ebp,DWORD PTR [ecx+0x5f]
  4100f2:	nop
  4100f3:	stc    
  4100f4:	or     al,0x35
  4100f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100f7:	inc    edx
  4100f8:	sub    DWORD PTR ds:0x850f9fd3,edx
  4100fe:	dec    edx
  4100ff:	xchg   ecx,eax
  410100:	fwait
  410101:	hlt    
  410102:	jecxz  0x410128
  410104:	fisttp DWORD PTR [eax-0x68acca4f]
  41010a:	inc    esi
  41010b:	daa    
  41010c:	aaa    
  41010d:	mov    ds:0x3df936b2,eax
  410112:	es stc 
  410114:	loope  0x410106
  410116:	jmp    0x4100d8
  410118:	mov    bl,0x1b
  41011a:	in     al,0xcc
  41011c:	inc    esp
  41011d:	test   DWORD PTR [ecx-0x3472b614],0x10cc6d95
  410127:	mov    esp,0x323e3762
  41012c:	lods   eax,DWORD PTR ds:[esi]
  41012d:	in     eax,dx
  41012e:	push   ss
  41012f:	rcr    DWORD PTR [edx-0x23],0x6b
  410133:	sub    BYTE PTR [edi+0x167237a2],dh
  410139:	mov    ds:0x11f4bd03,eax
  41013e:	mov    ah,0x22
  410140:	xchg   ecx,eax
  410141:	(bad)  
  410143:	mov    esp,0xa879a979
  410148:	pop    ds
  410149:	and    ecx,DWORD PTR [eax-0x21601b75]
  41014f:	xchg   esi,eax
  410150:	ins    BYTE PTR es:[edi],dx
  410151:	ss std 
  410153:	in     eax,dx
  410154:	jl     0x410185
  410156:	add    bl,cl
  410158:	push   esp
  410159:	inc    esp
  41015a:	ss jl  0x4100ed
  41015d:	mov    BYTE PTR [edx+0x162f5c7c],al
  410163:	xor    al,ch
  410165:	push   esp
  410166:	hlt    
  410167:	or     eax,0x28a5ac92
  41016c:	xchg   edi,eax
  41016d:	xor    edi,DWORD PTR [edi+0x5a7701ee]
  410173:	neg    ah
  410175:	fidivr WORD PTR [edi+ebp*2+0x461417e]
  41017c:	stc    
  41017d:	ret    
  41017e:	enter  0x7874,0xaf
  410182:	jae    0x4101f8
  410184:	pop    esi
  410185:	jnp    0x41010e
  410187:	cmp    eax,0x2de25055
  41018c:	stos   BYTE PTR es:[edi],al
  41018d:	xor    BYTE PTR [ecx+0x4a],0x23
  410191:	inc    ebp
  410192:	sbb    edi,edx
  410194:	jmp    DWORD PTR [edx+0x12]
  410197:	jmp    DWORD PTR [edx-0x7cd1d3f8]
  41019d:	xchg   ebx,eax
  41019e:	iret   
  41019f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101a0:	fcomp  QWORD PTR [ecx]
  4101a2:	enter  0x2d4d,0xef
  4101a6:	hlt    
  4101a7:	add    al,0xdb
  4101a9:	sbb    eax,0x79443797
  4101ae:	lods   eax,DWORD PTR ds:[esi]
  4101af:	inc    edi
  4101b0:	xchg   ebp,eax
  4101b1:	xchg   esp,eax
  4101b2:	sub    esp,0x28
  4101b5:	xchg   ecx,eax
  4101b6:	cwde   
  4101b7:	add    eax,DWORD PTR [esi-0x79881bc5]
  4101bd:	out    dx,eax
  4101be:	cmp    eax,0xa8859216
  4101c3:	xor    ah,BYTE PTR ds:0xa1064c6e
  4101c9:	jmp    0xed0e:0xfe6a1117
  4101d0:	or     DWORD PTR [esi+0x16],0x30b173bf
  4101d7:	(bad)
  4101da:	aas    
  4101db:	fcomp  DWORD PTR [edx+0x1a7d6bf5]
  4101e1:	shr    DWORD PTR [eax-0x6f],cl
  4101e4:	fcomp  DWORD PTR [esi]
  4101e6:	(bad)  
  4101e7:	enter  0x14ce,0x19
  4101eb:	scas   eax,DWORD PTR es:[edi]
  4101ec:	(bad)  
  4101ed:	aam    0xbc
  4101ef:	xor    ecx,edi
  4101f1:	push   ebx
  4101f2:	sub    esi,0xffffff84
  4101f5:	add    al,0xca
  4101f7:	enter  0xf6d9,0x58
  4101fb:	pusha  
  4101fc:	mov    dh,0x66
  4101fe:	imul   esp,edx,0xffffff81
  410201:	inc    esi
  410202:	pop    ss
  410203:	pop    ebx
  410204:	pop    ecx
  410205:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410206:	in     al,dx
  410207:	dec    ebx
  410208:	jne    0x4101ad
  41020a:	fadd   DWORD PTR [edx]
  41020c:	cmp    edi,eax
  41020e:	int3   
  41020f:	inc    ebx
  410210:	fdiv   st,st(1)
  410212:	je     0x4101af
  410214:	push   cs
  410215:	xchg   ebx,eax
  410216:	test   BYTE PTR [ebx+eiz*1],bh
  410219:	stos   DWORD PTR es:[edi],eax
  41021a:	inc    DWORD PTR [eax+0x2fa28836]
  410220:	test   al,0x9e
  410222:	ins    DWORD PTR es:[edi],dx
  410223:	xchg   ecx,eax
  410224:	popf   
  410225:	pushf  
  410226:	pop    esp
  410227:	retf   
  410228:	leave  
  410229:	daa    
  41022a:	imul   eax,DWORD PTR [edi+eiz*2+0x5a],0x1274ed3b
  410232:	jmp    0x2746:0xdd0ca6a4
  410239:	push   edi
  41023a:	not    DWORD PTR [edx+edi*4]
  41023d:	pushf  
  41023e:	loope  0x4101f9
  410240:	shl    BYTE PTR [esi+edx*1],1
  410243:	ss (bad) 
  410245:	shl    ebp,cl
  410247:	(bad)
  41024a:	fwait
  41024b:	scas   al,BYTE PTR es:[edi]
  41024c:	push   ds
  41024d:	push   eax
  41024e:	mov    ah,0x8d
  410250:	dec    eax
  410251:	add    BYTE PTR [ecx+0x5],0xd4
  410255:	fwait
  410256:	sub    BYTE PTR [edi-0x38ec225d],al
  41025c:	sbb    DWORD PTR [ecx-0xd],ebp
  41025f:	push   es
  410260:	js     0x4102c2
  410262:	pop    es
  410263:	add    dh,dl
  410265:	stos   DWORD PTR es:[edi],eax
  410266:	out    0x63,eax
  410268:	or     BYTE PTR [ecx+ecx*8+0x22351ac7],dl
  41026f:	sub    edi,DWORD PTR [ecx+0x6ec41c65]
  410275:	cmp    eax,0x2d3cbabc
  41027a:	rcl    BYTE PTR [esi-0x77],1
  41027d:	loope  0x4102df
  41027f:	stc    
  410280:	jne    0x410232
  410282:	sbb    DWORD PTR [ecx+0xa],edx
  410285:	loopne 0x4102a1
  410287:	cmp    eax,0x90afe82f
  41028c:	xlat   BYTE PTR ds:[ebx]
  41028d:	add    ebp,ebx
  41028f:	in     al,0xa2
  410291:	push   ebp
  410292:	or     bl,BYTE PTR [esi-0x7005ec6c]
  410298:	pop    edx
  410299:	fdiv   QWORD PTR ds:0x466bbafd
  41029f:	or     edx,edi
  4102a1:	add    BYTE PTR [ecx-0x3],ch
  4102a4:	jmp    0x4f09:0x930677ce
  4102ab:	pop    edx
  4102ac:	dec    ebx
  4102ad:	dec    edi
  4102ae:	pop    ebp
  4102af:	mov    esi,0x2b6bc0b4
  4102b4:	(bad)  
  4102b6:	js     0x410276
  4102b8:	dec    edx
  4102b9:	xchg   esp,eax
  4102ba:	int    0xe6
  4102bc:	jo     0x41025b
  4102be:	jno    0x4102c8
  4102c0:	xchg   edx,eax
  4102c1:	mov    bh,0xa8
  4102c3:	dec    esi
  4102c4:	jg     0x41032a
  4102c6:	push   esi
  4102c7:	scas   al,BYTE PTR es:[edi]
  4102c8:	repz push 0x26442c6d
  4102ce:	out    dx,al
  4102cf:	xor    edx,DWORD PTR [ecx]
  4102d1:	stos   BYTE PTR es:[edi],al
  4102d2:	rcr    esi,0xe9
  4102d5:	jno    0x410295
  4102d7:	inc    esp
  4102d8:	call   FWORD PTR [edx-0x49]
  4102db:	aas    
  4102dc:	imul   edx,DWORD PTR [ebx]
  4102df:	pop    ss
  4102e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102e1:	int3   
  4102e2:	push   edx
  4102e3:	out    dx,al
  4102e4:	push   ebp
  4102e5:	hlt    
  4102e6:	or     al,0xab
  4102e8:	test   eax,0x54f0983e
  4102ed:	dec    esi
  4102ee:	cmp    eax,0xe506defc
  4102f3:	or     ecx,DWORD PTR [ebp+0x47]
  4102f6:	cmp    eax,0xe54de37e
  4102fb:	xchg   cl,al
  4102fd:	out    0x44,al
  4102ff:	sbb    edi,DWORD PTR [edi+0x5a88cd53]
  410305:	test   DWORD PTR ds:0x3875eda0,0xc1baa00f
  41030f:	clc    
  410310:	and    al,0x6b
  410312:	dec    ebp
  410313:	les    edi,FWORD PTR [esp+eax*2]
  410316:	sbb    eax,0x1fecbe1c
  41031b:	push   eax
  41031c:	repnz pop es
  41031e:	push   0x3576d64d
  410323:	stc    
  410324:	push   eax
  410325:	inc    ebx
  410326:	push   ebx
  410327:	xchg   ebp,eax
  410328:	mov    ebx,0x152a9301
  41032d:	jg     0x4103ab
  41032f:	sar    DWORD PTR ss:[ebp+0x2a87ac17],1
  410336:	retf   0xb6d
  410339:	jb     0x410321
  41033b:	in     al,dx
  41033c:	jecxz  0x41032f
  41033e:	pop    edi
  41033f:	fistp  QWORD PTR [ecx-0x406687d8]
  410345:	aas    
  410346:	scas   eax,DWORD PTR es:[edi]
  410347:	sub    al,0x6
  410349:	cmp    bh,BYTE PTR [edi+0x78]
  41034c:	jmp    0xdaf4:0x93f190c6
  410353:	dec    ebp
  410354:	xchg   esp,eax
  410355:	fcomp  QWORD PTR [edi+eiz*1-0x4083beee]
  41035c:	mov    ecx,0x35ad3b29
  410361:	mov    al,ds:0xb5225414
  410366:	xor    ebp,esp
  410368:	mov    ah,0x89
  41036a:	out    0x58,al
  41036c:	push   ecx
  41036d:	es sub ecx,esp
  410370:	adc    BYTE PTR [edi],0x68
  410373:	pop    ebx
  410374:	cwde   
  410375:	xchg   esp,eax
  410376:	gs dec ebx
  410378:	mov    bh,0x13
  41037a:	ds test ax,0xbdfc
  41037f:	(bad)  
  410380:	sub    DWORD PTR [esi-0x5c],0xffffffc6
  410384:	xor    bl,BYTE PTR [ebx]
  410386:	movsx  esp,BYTE PTR [esi+0x6]
  41038a:	sub    BYTE PTR [ecx+0x3cda8f2e],al
  410390:	jg     0x410343
  410392:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410393:	push   cs
  410394:	icebp  
  410395:	push   ebx
  410396:	mov    ebx,0x127e1d14
  41039b:	fild   WORD PTR [eax-0x13]
  41039e:	xchg   BYTE PTR [ecx-0x3d],dh
  4103a1:	sbb    esp,DWORD PTR [ebx]
  4103a3:	and    edi,DWORD PTR [edi]
  4103a5:	ds push edi
  4103a7:	and    edi,DWORD PTR [ebx]
  4103a9:	gs in  al,0x98
  4103ac:	xchg   edi,eax
  4103ad:	shr    DWORD PTR [ebp+0x6e],0xb0
  4103b1:	sbb    BYTE PTR [esp+edi*2],bl
  4103b4:	in     eax,dx
  4103b5:	and    cl,ch
  4103b7:	push   ebx
  4103b8:	sti    
  4103b9:	sbb    ebx,eax
  4103bb:	cld    
  4103bc:	xchg   ecx,eax
  4103bd:	push   0xffffffbb
  4103bf:	test   ah,bl
  4103c1:	addr16 pop ss
  4103c3:	jp     0x410415
  4103c5:	cwde   
  4103c6:	dec    ebp
  4103c7:	sbb    ecx,ebp
  4103c9:	pop    edx
  4103ca:	cmc    
  4103cb:	inc    eax
  4103cc:	push   es
  4103cd:	cmp    BYTE PTR [eax+0x34c0f7a5],dl
  4103d3:	adc    ah,BYTE PTR [eax+0x24]
  4103d6:	stos   BYTE PTR es:[edi],al
  4103d7:	pop    eax
  4103d8:	fadd   QWORD PTR [eax]
  4103da:	mov    ebx,ecx
  4103dc:	or     dh,dh
  4103de:	xchg   esp,eax
  4103df:	mov    edi,0x2488a123
  4103e4:	fs jb  0x410392
  4103e7:	std    
  4103e8:	jbe    0x4103ea
  4103ea:	dec    esi
  4103eb:	shufps xmm6,XMMWORD PTR [ebp+0x63],0x4f
  4103f0:	adc    edx,DWORD PTR [ebp-0x5b]
  4103f3:	or     esp,ebx
  4103f5:	mov    al,ds:0x1c658dea
  4103fa:	cld    
  4103fb:	int3   
  4103fc:	dec    esp
  4103fd:	std    
  4103fe:	mov    eax,ds:0xf0a9e7e8
  410403:	fcom   QWORD PTR [edi+0x16b9e4c7]
  410409:	pop    esi
  41040a:	pop    ss
  41040b:	mov    BYTE PTR [ecx+ebp*8-0x2],bh
  41040f:	into   
  410410:	js     0x410489
  410412:	mov    DWORD PTR [edx-0x288e8442],esp
  410418:	daa    
  410419:	(bad)  
  41041b:	fld    st(5)
  41041d:	ins    BYTE PTR es:[edi],dx
  41041e:	xchg   edi,eax
  41041f:	pusha  
  410420:	cwde   
  410421:	jle    0x410455
  410423:	mov    esp,0x6a43cde
  410428:	shr    DWORD PTR [edx-0xecca49f],1
  41042e:	push   esi
  41042f:	popa   
  410430:	pop    es
  410431:	(bad)  
  410432:	cmp    eax,0x3c79ed83
  410437:	pop    ds
  410438:	fcmove st,st(2)
  41043a:	mov    ecx,0xa5b69a82
  41043f:	(bad)  
  410440:	fsubr  st,st(1)
  410442:	test   edx,0x6b6f4361
  410448:	pop    edi
  410449:	push   0xffffffc2
  41044b:	fwait
  41044c:	cmp    eax,esp
  41044e:	and    esi,DWORD PTR [ebx-0x15369c02]
  410454:	stos   BYTE PTR es:[edi],al
  410455:	pop    ds
  410456:	add    BYTE PTR [eax],dh
  410458:	out    dx,al
  410459:	adc    al,0x97
  41045b:	in     al,dx
  41045c:	xchg   ebx,eax
  41045d:	shl    eax,cl
  41045f:	pop    es
  410460:	(bad)  
  410461:	push   ss
  410462:	jno    0x4104d9
  410464:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410466:	jle    0x4104dd
  410468:	jle    0x41049a
  41046a:	and    eax,0xbd42d683
  41046f:	dec    ebp
  410470:	or     ebx,eax
  410472:	xor    eax,0x1bde0691
  410477:	ret    0xccf1
  41047a:	(bad)  
  41047c:	sti    
  41047d:	cdq    
  41047e:	sub    DWORD PTR [eax+0x57],edx
  410481:	and    ah,al
  410483:	adc    ebp,DWORD PTR [eax-0x51efee82]
  410489:	jl     0x41046f
  41048b:	sbb    eax,0xb704e07d
  410490:	push   es
  410491:	test   al,0x5a
  410493:	outs   dx,BYTE PTR ds:[esi]
  410494:	sub    dh,dl
  410496:	outs   dx,BYTE PTR ds:[esi]
  410497:	push   edi
  410498:	mov    eax,ds:0xf4de9c08
  41049d:	fld    TBYTE PTR [esi]
  41049f:	cs sahf 
  4104a1:	adc    al,0xba
  4104a3:	inc    esp
  4104a4:	mov    al,ds:0x972a69aa
  4104a9:	(bad)  
  4104aa:	xor    ah,BYTE PTR [esp+ebx*8+0x34]
  4104ae:	push   0x6d56d53a
  4104b3:	mov    eax,ds:0x44da4471
  4104b8:	cmp    al,0x9d
  4104ba:	xor    BYTE PTR [ecx+0x41],ah
  4104bd:	lahf   
  4104be:	xchg   BYTE PTR [edx-0x5a],al
  4104c1:	jmp    0x89a4:0xcda4aeea
  4104c8:	sbb    eax,0x35822310
  4104cd:	add    al,0xc1
  4104cf:	xchg   esp,eax
  4104d0:	loop   0x4104bf
  4104d2:	popa   
  4104d3:	mov    ecx,0x609a2d83
  4104d8:	sub    eax,0x2a0c915b
  4104dd:	xchg   esp,eax
  4104de:	jp     0x410465
  4104e0:	cdq    
  4104e1:	bound  ebp,QWORD PTR ds:0xad5424cf
  4104e7:	push   cs
  4104e8:	fwait
  4104e9:	call   0xa8f:0x2ba9fd3
  4104f0:	call   0xf7ba:0x2487f124
  4104f7:	xor    BYTE PTR [edx],bl
  4104f9:	sar    BYTE PTR [ecx+0x5f],1
  4104fc:	xchg   ebp,eax
  4104fd:	jnp    0x410533
  4104ff:	fisubr WORD PTR [esi+0x2e]
  410502:	inc    eax
  410503:	into   
  410504:	and    al,BYTE PTR [ecx]
  410506:	inc    edx
  410507:	(bad)  
  410508:	out    0x6f,eax
  41050a:	mov    cl,0x30
  41050c:	popf   
  41050d:	lods   eax,DWORD PTR ds:[esi]
  41050e:	mov    cl,0x9c
  410510:	fimul  DWORD PTR [esi-0x54]
  410513:	xchg   esp,eax
  410514:	jl     0x4104f9
  410516:	xchg   esi,eax
  410517:	or     eax,DWORD PTR [edi+0x66cd7826]
  41051d:	test   BYTE PTR [ecx-0x5d],ch
  410520:	push   ebx
  410521:	jp     0x4104e6
  410523:	sub    eax,0xcec33ece
  410528:	nop
  410529:	stos   DWORD PTR es:[edi],eax
  41052a:	fiadd  WORD PTR ds:0x358e83b1
  410530:	and    eax,0x9dd85a2e
  410535:	pop    ecx
  410536:	ss mov cl,0xce
  410539:	xchg   ebx,eax
  41053a:	adc    BYTE PTR [edx],0x81
  41053d:	mov    WORD PTR [edi-0x52],ss
  410540:	push   ebp
  410541:	rol    DWORD PTR [ecx+0x4c99e791],1
  410547:	imul   DWORD PTR fs:[edx+0x76c56401]
  41054e:	or     BYTE PTR [ebx+0x79b48a59],ah
  410554:	dec    esp
  410555:	push   ecx
  410556:	jb     0x41056b
  410558:	shl    dh,0x5c
  41055b:	outs   dx,BYTE PTR cs:[esi]
  41055d:	aad    0x5b
  41055f:	cmp    al,0xf
  410561:	imul   edx,esi,0xffffffc6
  410564:	and    dh,BYTE PTR [esi]
  410566:	cmp    bl,BYTE PTR [ecx-0x13]
  410569:	loopne 0x410505
  41056b:	sar    BYTE PTR ds:0xd0231bd4,1
  410571:	jbe    0x41053f
  410573:	dec    esi
  410574:	sub    cl,BYTE PTR fs:[edx+0x368db2c4]
  41057b:	(bad)  
  41057c:	jmp    0x4105b0
  41057e:	xchg   ebp,eax
  41057f:	std    
  410580:	scas   al,BYTE PTR es:[edi]
  410581:	jbe    0x4105d5
  410583:	int    0xf
  410585:	in     al,dx
  410586:	pop    eax
  410587:	lds    ecx,FWORD PTR [ecx+edx*1]
  41058a:	aad    0xe1
  41058c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41058d:	jle    0x410518
  41058f:	mov    al,ds:0xc482f07f
  410594:	dec    edi
  410595:	cmp    eax,0x127ea40f
  41059a:	js     0x410523
  41059c:	in     al,dx
  41059d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41059e:	cmp    cl,BYTE PTR [ecx]
  4105a0:	adc    al,0x9a
  4105a2:	aaa    
  4105a3:	sti    
  4105a4:	loopne 0x4105cf
  4105a6:	cmp    DWORD PTR [eax],eax
  4105a8:	cli    
  4105a9:	lock stc 
  4105ab:	dec    esp
  4105ac:	jg     0x410534
  4105ae:	xor    bl,BYTE PTR [ebx-0x5932ca87]
  4105b4:	sbb    eax,0xbb5e289f
  4105b9:	inc    edx
  4105ba:	xor    DWORD PTR es:[ecx-0x727b3034],0x7b
  4105c2:	fnsave [edx]
  4105c4:	dec    ebp
  4105c5:	mov    esp,0x3bbb0f59
  4105ca:	add    ecx,DWORD PTR [ecx-0xf]
  4105cd:	cmc    
  4105ce:	xor    ecx,ebp
  4105d0:	inc    esp
  4105d1:	das    
  4105d2:	add    edx,DWORD PTR [edx-0x3add1e49]
  4105d8:	dec    ebp
  4105d9:	pop    edi
  4105da:	fist   DWORD PTR [ecx]
  4105dc:	dec    esp
  4105dd:	push   0x74587b1
  4105e2:	fwait
  4105e3:	fwait
  4105e4:	jno    0x410576
  4105e6:	inc    edx
  4105e7:	mov    BYTE PTR [edi-0x70df91d9],ah
  4105ed:	add    eax,0xedf9bc6c
  4105f2:	and    eax,0xa007c2
  4105f7:	retf   0x9ee0
  4105fa:	into   
  4105fb:	xchg   bh,ch
  4105fd:	rcl    DWORD PTR [ecx+0x17dda4b9],cl
  410603:	bnd jg 0x41066e
  410606:	pop    es
  410607:	retf   
  410608:	dec    ebx
  410609:	mov    dh,0xe1
  41060b:	add    bh,bh
  41060d:	cmc    
  41060e:	iret   
  41060f:	and    al,0x35
  410611:	(bad)  
  410612:	loopne 0x4105b5
  410614:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410615:	stos   DWORD PTR es:[edi],eax
  410616:	std    
  410617:	add    BYTE PTR [edi],bl
  410619:	lea    ebp,[ebx-0x71]
  41061c:	adc    ah,bl
  41061e:	(bad)  
  41061f:	aad    0x5
  410621:	jne    0x4105f5
  410623:	inc    esp
  410624:	add    dh,ah
  410626:	cdq    
  410627:	mov    cl,0x66
  410629:	mov    edx,0x9c1f3f3d
  41062e:	lods   eax,DWORD PTR ds:[esi]
  41062f:	jecxz  0x4105e3
  410631:	pop    ecx
  410632:	or     al,0x86
  410634:	and    BYTE PTR [ecx],bl
  410636:	std    
  410637:	cmp    DWORD PTR [eax+0x3e364515],eax
  41063d:	cli    
  41063e:	add    eax,0x20ff0ed9
  410643:	mov    dh,0x91
  410645:	std    
  410646:	or     al,0x9b
  410648:	(bad)  
  410649:	out    0xbd,al
  41064b:	jmp    0x51e67541
  410650:	inc    esi
  410651:	pop    edi
  410652:	pop    ebp
  410653:	sub    eax,0xfa475212
  410658:	adc    ecx,edx
  41065a:	out    0xb4,eax
  41065c:	dec    esi
  41065d:	jo     0x410643
  41065f:	cmp    DWORD PTR [edx],esp
  410661:	pop    ebp
  410662:	fisubr WORD PTR [ebx-0x5004bc72]
  410668:	dec    esi
  410669:	add    eax,0xf3c7a6dc
  41066e:	mov    ebp,ebp
  410670:	pop    esp
  410671:	pop    ss
  410672:	xchg   esp,eax
  410673:	sub    dh,ch
  410675:	push   ecx
  410676:	sbb    BYTE PTR [edx],dh
  410678:	ss arpl sp,si
  41067b:	imul   esi,DWORD PTR [edx+0x59],0xccb60a71
  410682:	(bad)  
  410683:	mov    dh,0xfe
  410685:	sub    DWORD PTR [ebx],edx
  410687:	dec    esi
  410688:	loop   0x410656
  41068a:	out    dx,al
  41068b:	mov    WORD PTR [ebx+edx*1],fs
  41068e:	mov    DWORD PTR [ebx+0x0],0x2b26cd33
  410695:	push   eax
  410696:	xchg   ebp,eax
  410697:	mov    ebp,0x1d1d2edb
  41069c:	repnz imul ebp,DWORD PTR [ebp-0x62],0x68
  4106a1:	jnp    0x4106cd
  4106a3:	sub    bh,BYTE PTR [ecx]
  4106a5:	stc    
  4106a6:	mov    ah,0xd3
  4106a8:	cmp    al,0x4f
  4106aa:	cmp    eax,DWORD PTR [esi-0x5b4d3356]
  4106b0:	arpl   WORD PTR [ebx+eiz*8+0x7c78bd14],di
  4106b7:	shl    al,0x3
  4106ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106bb:	mov    ds:0x9cdab248,al
  4106c0:	push   edx
  4106c1:	scas   eax,DWORD PTR es:[edi]
  4106c2:	xor    al,0x79
  4106c4:	repnz cmp cl,BYTE PTR [ebx+0x51f87c4a]
  4106cb:	pop    edi
  4106cc:	aas    
  4106cd:	(bad)  
  4106ce:	mov    al,BYTE PTR [edx+0x43574a6a]
  4106d4:	mov    ecx,0x4a379d3d
  4106d9:	mov    esp,0x73c1ade7
  4106de:	fwait
  4106df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106e0:	cmc    
  4106e1:	pop    esi
  4106e2:	xor    BYTE PTR [ecx],0x3c
  4106e5:	daa    
  4106e6:	pop    ebp
  4106e7:	or     BYTE PTR [edx],ch
  4106e9:	retf   0xf6c0
  4106ec:	jle    0x410737
  4106ee:	test   DWORD PTR [eax-0x66e2ffab],ebx
  4106f4:	sbb    BYTE PTR [edx+0x52],cl
  4106f7:	int    0x1e
  4106f9:	xchg   esi,eax
  4106fa:	nop
  4106fb:	mov    bh,0x2e
  4106fd:	pop    ecx
  4106fe:	inc    ebx
  4106ff:	xor    cl,0x88
  410702:	push   ss
  410703:	mov    bh,0x4b
  410705:	jmp    0x1d38:0x5f391870
  41070c:	lods   eax,DWORD PTR ds:[esi]
  41070d:	sub    eax,0x3031eaf2
  410713:	out    dx,eax
  410714:	(bad)  
  410715:	jmp    0x4106ce
  410717:	daa    
  410718:	xchg   edx,eax
  410719:	std    
  41071a:	sbb    edx,DWORD PTR [esi+edi*1+0x2539a40]
  410721:	in     al,0x37
  410723:	rol    DWORD PTR [ebx-0x14],1
  410726:	aaa    
  410727:	sub    BYTE PTR [ebp+edx*8-0x3],cl
  41072b:	les    ecx,FWORD PTR [ebp-0x4fd405c2]
  410731:	push   cs
  410732:	(bad)  
  410733:	mov    dl,0x82
  410735:	loop   0x410757
  410737:	ficomp WORD PTR [ebx]
  410739:	fnstcw WORD PTR [esp+edx*2+0x61]
  41073d:	cmp    al,al
  41073f:	call   0xbc9094ba
  410744:	arpl   WORD PTR [ebx+0x7a],cx
  410747:	test   eax,0xbb8110e8
  41074c:	dec    ebx
  41074d:	cli    
  41074e:	and    DWORD PTR [eax-0x22],ebp
  410751:	push   eax
  410752:	mov    ds:0xf94d651d,al
  410757:	and    al,0x9
  410759:	sub    al,0x16
  41075b:	and    al,0x42
  41075d:	dec    ebp
  41075e:	and    bl,BYTE PTR [edx-0x1f9256c4]
  410764:	inc    ecx
  410765:	sbb    BYTE PTR [edi-0x2d],0x43
  410769:	(bad)  
  41076a:	stc    
  41076b:	pop    ebx
  41076c:	sbb    DWORD PTR ds:0xbe902b28,esp
  410772:	mov    dl,0x2a
  410774:	sti    
  410775:	mov    esi,0xd9c875fb
  41077a:	inc    ebp
  41077b:	clc    
  41077c:	fs addr16 and eax,edi
  410780:	dec    esi
  410781:	mov    al,0xa0
  410783:	cmp    esp,DWORD PTR [esi+0x27bf43c0]
  410789:	stos   BYTE PTR es:[edi],al
  41078a:	inc    edx
  41078b:	test   DWORD PTR [edx-0x28],ecx
  41078e:	adc    dh,BYTE PTR [ebp+edi*1-0x49]
  410792:	mov    esi,0xcd42067a
  410797:	jge    0x41079c
  410799:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41079a:	push   esi
  41079b:	call   0xfe21:0x811b9e83
  4107a2:	mov    ebx,0x91281461
  4107a7:	call   0x4a32:0x8840d672
  4107ae:	xor    cl,BYTE PTR [edx+0x3]
  4107b1:	and    bl,ah
  4107b3:	mov    eax,ds:0xdd24670f
  4107b8:	pop    ebp
  4107b9:	jecxz  0x4107f2
  4107bb:	push   ds
  4107bc:	mov    dl,0x1a
  4107be:	jl     0x410828
  4107c0:	or     DWORD PTR [edx+0xa],esi
  4107c3:	out    dx,eax
  4107c4:	repz and ecx,DWORD PTR [ebx+0x48]
  4107c8:	(bad)  
  4107c9:	fwait
  4107ca:	adc    DWORD PTR ds:0xba17804d,esi
  4107d0:	lock inc edx
  4107d2:	jmp    0x4107bc
  4107d4:	xor    al,0x40
  4107d6:	arpl   bx,cx
  4107d8:	adc    BYTE PTR [edx],dl
  4107da:	and    esi,ebp
  4107dc:	mov    bl,0xad
  4107de:	repz sbb bl,BYTE PTR ds:0x6f991472
  4107e5:	leave  
  4107e6:	sub    eax,0xf5620688
  4107eb:	cmp    al,al
  4107ed:	inc    ebp
  4107ee:	mov    ecx,0x3b38bbd8
  4107f3:	sbb    eax,0x3ff6cb81
  4107f8:	test   BYTE PTR [edi-0x10b78833],al
  4107fe:	repz aad 0x5f
  410801:	push   esi
  410802:	repz pushf 
  410804:	ret    
  410805:	add    BYTE PTR [ecx-0x7d7d1394],bl
  41080b:	cmp    al,0x77
  41080d:	adc    BYTE PTR [ebx+0x5d419246],al
  410813:	pushw  ss
  410815:	pop    ds
  410816:	not    BYTE PTR [ebx-0x5b]
  410819:	push   ecx
  41081a:	scas   al,BYTE PTR es:[edi]
  41081b:	mov    BYTE PTR [eax+0x1e],0xe7
  41081f:	lahf   
  410820:	cmp    DWORD PTR [ecx],esi
  410822:	inc    edi
  410823:	jle    0x4107dd
  410825:	in     al,dx
  410826:	push   0xad40bf80
  41082b:	add    edi,ebx
  41082d:	push   edx
  41082e:	fwait
  41082f:	cmp    DWORD PTR [eax],eax
  410831:	push   es
  410832:	addr16 jmp 0x497d290d
  410838:	test   DWORD PTR [ebp+ecx*8-0x28],ebx
  41083c:	adc    DWORD PTR [ecx-0x4ab6e528],ecx
  410842:	xor    eax,0x5e134d11
  410847:	(bad)  
  410848:	jg     0x4108a0
  41084a:	in     al,dx
  41084b:	stc    
  41084c:	push   cs
  41084d:	aas    
  41084e:	jnp    0x4108ae
  410850:	inc    eax
  410851:	or     bl,ch
  410853:	in     eax,0x5f
  410855:	pop    esp
  410856:	sbb    BYTE PTR [eax-0x4],al
  410859:	ror    DWORD PTR [edx],cl
  41085b:	addr16 mov esp,0x4a136b3f
  410861:	or     esp,DWORD PTR [esp+ebx*2+0x2e5cf764]
  410868:	test   al,0x53
  41086a:	fs cwde 
  41086c:	loop   0x410864
  41086e:	mov    eax,ds:0x47818db
  410873:	or     DWORD PTR [ebx-0x273e2d39],esp
  410879:	sub    esi,ecx
  41087b:	xchg   edi,eax
  41087c:	test   DWORD PTR [ecx+eiz*8-0x553908f2],ebx
  410883:	mov    ebx,0xa0636c07
  410888:	add    BYTE PTR [edi-0x3925d049],bl
  41088e:	inc    DWORD PTR [ecx+ebx*2-0x2c]
  410892:	aad    0x3f
  410894:	jnp    0x41085b
  410896:	xor    DWORD PTR [ecx],ebp
  410898:	xor    edx,esi
  41089a:	jecxz  0x41083d
  41089c:	sub    al,0x91
  41089e:	mov    ds:0x22286701,al
  4108a3:	pop    esi
  4108a4:	push   ecx
  4108a5:	mov    cl,dl
  4108a7:	mov    bl,0x3e
  4108a9:	jbe    0x410843
  4108ab:	repnz sti 
  4108ad:	and    al,0xe1
  4108af:	xchg   edx,eax
  4108b0:	out    dx,eax
  4108b1:	jg     0x4108f0
  4108b3:	add    ch,bh
  4108b5:	mov    eax,es
  4108b7:	call   0xeebfbe3f
  4108bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108bd:	push   ebx
  4108be:	cmp    bl,dl
  4108c0:	pop    ebx
  4108c1:	dec    edi
  4108c2:	iret   
  4108c3:	iret   
  4108c4:	jnp    0x410939
  4108c6:	in     al,dx
  4108c7:	bound  esp,QWORD PTR [edi+0x2b33148a]
  4108cd:	push   ecx
  4108ce:	push   es
  4108cf:	xchg   edi,eax
  4108d0:	lock sbb edx,DWORD PTR ds:0x3197b14b
  4108d7:	ins    DWORD PTR es:[edi],dx
  4108d8:	push   0x2b3d29dd
  4108dd:	cmp    DWORD PTR [edx],0xcc164d61
  4108e3:	int3   
  4108e4:	push   ss
  4108e5:	fisttp QWORD PTR [eax+0x54]
  4108e8:	fiadd  DWORD PTR [edi+0x25778d05]
  4108ee:	push   ds
  4108ef:	shr    DWORD PTR [ebp+0x1005d340],1
  4108f5:	daa    
  4108f6:	push   ds
  4108f7:	mov    ebp,0x5b221dfb
  4108fc:	retf   0x6c54
  4108ff:	ins    DWORD PTR es:[edi],dx
  410900:	pop    eax
  410901:	xor    eax,0x43e3fdc2
  410906:	pop    ecx
  410907:	imul   esi,ebx,0xffffffe2
  41090a:	shr    BYTE PTR [esi],0x92
  41090d:	ret    0xafa8
  410910:	xor    esi,DWORD PTR [ebx-0x67441230]
  410916:	outs   dx,BYTE PTR ds:[esi]
  410917:	fisubr DWORD PTR [ebx-0x27]
  41091a:	(bad)  
  41091b:	lods   eax,DWORD PTR ds:[esi]
  41091c:	test   eax,0x23b80b42
  410921:	xor    DWORD PTR [edi+0x570b0dee],edi
  410927:	test   al,0x80
  410929:	push   es
  41092a:	jp     0x4108fa
  41092c:	mov    edx,0x58a492ce
  410931:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410932:	sub    ah,BYTE PTR [ebx+0x28fb75e6]
  410938:	mov    ecx,0x228a7e36
  41093d:	ja     0x41094b
  41093f:	xchg   edi,eax
  410940:	cld    
  410941:	xor    ch,BYTE PTR [ecx]
  410943:	push   edx
  410944:	cwde   
  410945:	jnp    0x410944
  410947:	lds    ebp,FWORD PTR [ebp+eiz*4+0x511bea02]
  41094e:	sub    al,0x6e
  410950:	ret    0xa8d4
  410953:	xchg   edx,eax
  410954:	(bad)  
  410955:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410956:	or     ah,bh
  410958:	push   esi
  410959:	sti    
  41095a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41095b:	sbb    al,0xb9
  41095d:	dec    ecx
  41095e:	stc    
  41095f:	lds    esp,FWORD PTR [edi]
  410961:	(bad)  
  410962:	fwait
  410963:	jp     0x41090a
  410965:	sub    esi,DWORD PTR [ebx+0x55]
  410968:	xchg   ecx,eax
  410969:	pop    ss
  41096a:	mov    al,0x51
  41096c:	mov    al,BYTE PTR [esi]
  41096e:	add    ch,BYTE PTR [esi+0x28148e3]
  410974:	ror    BYTE PTR [ebx],cl
  410976:	sbb    BYTE PTR [eax+0x54116574],bh
  41097c:	xor    BYTE PTR [edi+0x28],dl
  41097f:	xchg   eax,esp
  410981:	dec    esi
  410982:	bound  edx,QWORD PTR [edx+0x16c719c2]
  410988:	test   eax,0xb29f9317
  41098d:	shl    BYTE PTR [ebp-0x5f723c35],1
  410993:	sub    bh,dl
  410995:	push   ecx
  410996:	sbb    BYTE PTR [edi+edx*2],bh
  410999:	gs add ecx,esp
  41099c:	inc    ebp
  41099d:	dec    BYTE PTR ds:0xc8b2134
  4109a3:	scas   al,BYTE PTR es:[edi]
  4109a4:	out    dx,eax
  4109a5:	inc    ecx
  4109a6:	adc    ebx,eax
  4109a8:	aaa    
  4109a9:	(bad)  
  4109aa:	lods   eax,DWORD PTR ds:[esi]
  4109ab:	lods   eax,DWORD PTR ds:[esi]
  4109ac:	mov    eax,ds:0xe2e602a0
  4109b1:	sub    edi,edx
  4109b3:	dec    ecx
  4109b4:	sub    eax,0x90049bc9
  4109b9:	push   ds
  4109ba:	jge    0x410970
  4109bc:	jmp    0x410952
  4109be:	enter  0x1c0,0xc4
  4109c2:	sub    BYTE PTR [esi-0x28],al
  4109c5:	mov    dh,0xac
  4109c7:	mov    ds:0x9c5ff56b,al
  4109cc:	scas   al,BYTE PTR es:[edi]
  4109cd:	mov    DWORD PTR ss:[ecx],ecx
  4109d0:	loopne 0x4109f6
  4109d2:	mov    bh,0xa0
  4109d4:	bound  esp,QWORD PTR [ebx*1-0x2057f72e]
  4109db:	mov    ch,0x2d
  4109dd:	shl    cl,1
  4109df:	pop    DWORD PTR [esi-0x2f]
  4109e2:	fst    DWORD PTR [edi]
  4109e4:	jbe    0x410a42
  4109e6:	mov    esi,0x68adf556
  4109eb:	retf   0xa792
  4109ee:	call   0x1860625b
  4109f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109f4:	xor    BYTE PTR [edx+0x17496928],bl
  4109fa:	and    DWORD PTR [ecx],ecx
  4109fc:	push   0xfffffffb
  4109fe:	icebp  
  4109ff:	fld    DWORD PTR [ebp+0x647356d]
  410a05:	neg    BYTE PTR ds:0x770a41f9
  410a0b:	mov    ds:0xa1162678,al
  410a10:	ja     0x410a2d
  410a12:	inc    ebx
  410a13:	fnstenv [edi]
  410a15:	mov    esp,0xa25d00aa
  410a1a:	std    
  410a1b:	jo     0x410a7f
  410a1d:	sub    al,BYTE PTR [edi+0x0]
  410a20:	ds push ebx
  410a22:	(bad)
  410a26:	push   esi
  410a27:	cwde   
  410a28:	dec    esp
  410a29:	mov    ebp,0xb87fabaa
  410a2e:	dec    edx
  410a2f:	scas   eax,DWORD PTR es:[edi]
  410a30:	fisub  WORD PTR [ecx+0x4b3dbcdc]
  410a36:	mov    edi,0x7f105936
  410a3b:	out    dx,al
  410a3c:	nop
  410a3d:	outs   dx,DWORD PTR ds:[esi]
  410a3e:	test   BYTE PTR [ebp-0x65],dl
  410a41:	inc    ecx
  410a42:	sbb    cl,BYTE PTR [esi+0x19]
  410a45:	xor    edi,ebp
  410a47:	iret   
  410a48:	out    dx,eax
  410a49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a4a:	enter  0xbb18,0xb0
  410a4e:	adc    ebx,eax
  410a50:	mov    cl,0xdd
  410a52:	dec    eax
  410a53:	inc    esi
  410a54:	jg     0x410a2c
  410a56:	sbb    al,ch
  410a58:	or     DWORD PTR [esi],ecx
  410a5a:	xchg   edi,eax
  410a5b:	fcomp  QWORD PTR ds:[edx+0x3]
  410a5f:	fst    QWORD PTR [ecx]
  410a61:	ficom  DWORD PTR ds:0x381e72b4
  410a67:	xchg   esp,eax
  410a68:	jno    0x410a6c
  410a6a:	nop
  410a6b:	adc    BYTE PTR [ecx],0x57
  410a6e:	add    eax,0x6c9d925c
  410a73:	loopne 0x410a2d
  410a75:	mov    edx,0x10337ca
  410a7a:	mov    ebp,0x25af18ef
  410a7f:	in     al,0x91
  410a81:	mov    ebp,0x6dd67cfc
  410a86:	push   esp
  410a87:	sbb    esi,DWORD PTR es:[ebp-0x61d0c037]
  410a8e:	mov    DWORD PTR [ebp+0x5247506a],esp
  410a94:	loope  0x410a80
  410a96:	xor    al,0x6f
  410a98:	aas    
  410a99:	imul   ebx,DWORD PTR [eax],0xffffffc0
  410a9c:	jno    0x410a6e
  410a9e:	stos   BYTE PTR es:[edi],al
  410a9f:	out    dx,eax
  410aa0:	cwde   
  410aa1:	or     BYTE PTR [edi+ecx*2],dh
  410aa4:	lock and BYTE PTR [ebx-0x13ec96a7],dh
  410aab:	loope  0x410a81
  410aad:	pop    edx
  410aae:	mov    dl,0xfb
  410ab0:	cwde   
  410ab1:	repnz mov cl,0xcf
  410ab4:	ficomp WORD PTR [edi+0x21639a62]
  410aba:	sbb    eax,0xc368d430
  410abf:	retf   0xd7e0
  410ac2:	pop    ebp
  410ac3:	icebp  
  410ac4:	jg     0x410adf
  410ac6:	fiadd  WORD PTR [edi+0x32b6a458]
  410acc:	and    al,BYTE PTR [eax-0x121f024e]
  410ad2:	das    
  410ad3:	ror    BYTE PTR [edx],1
  410ad5:	cmp    dl,BYTE PTR [edx]
  410ad7:	(bad)  
  410ad8:	sub    DWORD PTR [eax+ebx*8-0x5c026f52],eax
  410adf:	pop    esp
  410ae0:	loopne 0x410aa0
  410ae2:	jge    0x410a93
  410ae4:	xor    eax,0x5f114268
  410ae9:	nop
  410aea:	imul   esp,eax,0xffffffe8
  410aed:	push   edx
  410aee:	fild   WORD PTR [edi]
  410af0:	sub    BYTE PTR [eiz*2+0x3c706ae],al
  410af7:	ret    
  410af8:	mov    dh,0xc
  410afa:	div    bh
  410afc:	or     ebx,DWORD PTR [ecx-0x323e712a]
  410b02:	xchg   edi,eax
  410b03:	stc    
  410b04:	pop    ebp
  410b05:	push   edi
  410b06:	or     eax,0x41d5f87e
  410b0b:	pop    es
  410b0c:	cld    
  410b0d:	loop   0x410aee
  410b0f:	lock sub al,0x62
  410b12:	outs   dx,DWORD PTR ds:[esi]
  410b13:	in     eax,dx
  410b14:	jecxz  0x410b2b
  410b16:	xchg   esi,eax
  410b17:	aaa    
  410b18:	std    
  410b19:	into   
  410b1a:	inc    edi
  410b1b:	add    edx,DWORD PTR [esi+0x6ae66641]
  410b21:	lds    edi,FWORD PTR [eax-0x6a]
  410b24:	or     eax,DWORD PTR [eax+eax*2+0x7e]
  410b28:	(bad)  
  410b29:	in     al,dx
  410b2a:	sbb    eax,0x7ce329e2
  410b2f:	push   ebp
  410b30:	pop    es
  410b31:	or     edi,eax
  410b33:	dec    edx
  410b34:	add    ecx,DWORD PTR [ebx+0x7f31cc47]
  410b3a:	xor    eax,0x17
  410b3d:	mov    cl,0xd5
  410b3f:	xchg   BYTE PTR [eax-0x768d6d63],al
  410b45:	in     al,dx
  410b46:	(bad)  
  410b47:	ja     0x410ae9
  410b49:	mov    ebx,0x4021ac58
  410b4e:	jnp    0x410bbe
  410b50:	inc    ecx
  410b51:	push   esi
  410b52:	sbb    DWORD PTR [edi],edx
  410b54:	push   esp
  410b55:	pop    eax
  410b56:	sbb    DWORD PTR [ecx+edi*8-0xd],esp
  410b5a:	mov    ds:0x59f130c1,al
  410b5f:	jle    0x410b42
  410b61:	pop    ebx
  410b62:	shr    DWORD PTR [esi-0x24],0xa7
  410b66:	int    0xe7
  410b68:	jbe    0x410b71
  410b6a:	or     edx,DWORD PTR [edi-0x33d6d41]
  410b70:	div    dl
  410b72:	(bad)  
  410b73:	ror    edx,cl
  410b75:	sbb    BYTE PTR [ecx],cl
  410b77:	jg     0x410b54
  410b79:	ins    BYTE PTR es:[edi],dx
  410b7a:	xor    DWORD PTR [edx+ebx*8+0x68],eax
  410b7e:	aas    
  410b7f:	sbb    esi,edx
  410b81:	push   eax
  410b82:	mov    WORD PTR [ebp+0x47],cs
  410b85:	or     al,0x18
  410b87:	enter  0x5127,0xc6
  410b8b:	int    0x52
  410b8d:	mov    dl,0x8f
  410b8f:	in     al,dx
  410b90:	inc    ebx
  410b91:	cmp    BYTE PTR [esp+edx*1-0x67],0x91
  410b96:	mov    bh,0x1e
  410b98:	or     al,0xb6
  410b9a:	fdivrp st(6),st
  410b9c:	sub    ah,dl
  410b9e:	(bad)  
  410b9f:	(bad)  [esp+ebx*2]
  410ba2:	repnz ins DWORD PTR es:[edi],dx
  410ba4:	push   ebp
  410ba5:	xor    ah,BYTE PTR [edi-0x1edbe663]
  410bab:	mov    cl,0xf0
  410bad:	inc    edi
  410bae:	idiv   BYTE PTR [ebp+0x21f9e273]
  410bb4:	xchg   edx,eax
  410bb5:	mov    esp,0xc81a0a76
  410bba:	pop    es
  410bbb:	jge    0x410bca
  410bbd:	cmp    BYTE PTR [esi-0x8],bl
  410bc0:	ret    0xe1f
  410bc3:	pop    ds
  410bc4:	shr    BYTE PTR [eax-0x4dd33ff7],0x5a
  410bcb:	rcl    DWORD PTR [ecx+0x4735aa63],cl
  410bd1:	adc    ebp,eax
  410bd3:	and    BYTE PTR [esi-0xe],dl
  410bd6:	mov    eax,0xc868c258
  410bdb:	leave  
  410bdc:	retf   
  410bdd:	cdq    
  410bde:	in     eax,dx
  410bdf:	(bad)  
  410be0:	add    BYTE PTR [eax+ebp*1-0xe],dh
  410be4:	and    edx,edx
  410be6:	or     al,0x14
  410be8:	add    al,0xa2
  410bea:	fadd   QWORD PTR [eax]
  410bec:	mov    esp,0xbbeee82b
  410bf1:	push   ecx
  410bf2:	pop    ecx
  410bf3:	cdq    
  410bf4:	ror    al,cl
  410bf6:	stc    
  410bf7:	test   eax,0xaa3fadfd
  410bfc:	enter  0xb897,0xcb
  410c00:	in     eax,0x2d
  410c02:	push   eax
  410c03:	jmp    0x4001:0xc396801e
  410c0a:	mov    al,ds:0xf018161d
  410c0f:	les    edx,FWORD PTR [esi]
  410c11:	in     eax,dx
  410c12:	mov    BYTE PTR ss:[ebx+0x6c122983],ah
  410c19:	dec    esi
  410c1a:	xor    BYTE PTR [eax+0x25],ah
  410c1d:	mov    ecx,0x1d5b59b0
  410c22:	aas    
  410c23:	sub    DWORD PTR [esi-0x27f91b44],eax
  410c29:	or     al,ch
  410c2b:	cli    
  410c2c:	sbb    DWORD PTR [esi+0x2ac30763],eax
  410c32:	push   edi
  410c33:	and    al,0x76
  410c35:	sbb    eax,0xe4904f42
  410c3a:	mov    ds:0x2e1f4cee,al
  410c3f:	push   ss
  410c40:	aaa    
  410c41:	pusha  
  410c42:	das    
  410c43:	je     0x410c87
  410c45:	add    ch,BYTE PTR gs:[esi]
  410c48:	inc    ebp
  410c49:	mov    ebx,0x258083d2
  410c4e:	or     eax,0x1a8ab349
  410c53:	jle    0x410bec
  410c55:	clc    
  410c56:	aad    0x4b
  410c58:	ds into 
  410c5a:	xor    eax,0x4fb7a5a
  410c5f:	xchg   ebp,eax
  410c60:	sub    dl,0x3e
  410c63:	add    BYTE PTR [ebp+0x71],al
  410c66:	retf   0x312c
  410c69:	test   BYTE PTR [ebp+0x5d],ah
  410c6c:	call   0x4c2d6063
  410c71:	stos   DWORD PTR es:[edi],eax
  410c72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c73:	(bad)  
  410c74:	loop   0x410ce8
  410c76:	push   edx
  410c77:	inc    ebp
  410c78:	test   BYTE PTR [esp+edi*1],0x8d
  410c7c:	test   eax,0xaadf62b0
  410c81:	repnz mov al,0xe7
  410c84:	adc    cl,BYTE PTR [edx-0x7ce220c3]
  410c8a:	mov    esi,0x151c9465
  410c8f:	push   ebx
  410c90:	dec    ebx
  410c91:	xchg   BYTE PTR [ebx],ch
  410c93:	sub    DWORD PTR [ebp+0x3b100943],ecx
  410c99:	div    ebp
  410c9b:	data16 js 0x410cbe
  410c9e:	cld    
  410c9f:	push   cs
  410ca0:	sbb    DWORD PTR [edi+ebp*2+0x7f],esp
  410ca4:	jne    0x410cc2
  410ca6:	or     BYTE PTR ds:0x3f1c8715,ch
  410cac:	mov    edx,0x6316fe4b
  410cb1:	inc    ebx
  410cb2:	aas    
  410cb3:	jge    0x410cbe
  410cb5:	add    bl,BYTE PTR [ecx]
  410cb7:	jp     0x410c85
  410cb9:	add    DWORD PTR [esi+ebp*8-0x3d9d0f45],ecx
  410cc0:	xchg   ecx,eax
  410cc1:	hlt    
  410cc2:	cmp    eax,0xa90a9824
  410cc7:	pop    ss
  410cc8:	xchg   edi,eax
  410cc9:	adc    dl,BYTE PTR [edi]
  410ccb:	cmp    ah,BYTE PTR [edx+0xefc4d07]
  410cd1:	cld    
  410cd2:	and    ebp,DWORD PTR [ebp+0x4379be1b]
  410cd8:	enter  0x5ad4,0x1b
  410cdc:	xor    al,0x27
  410cde:	dec    edi
  410cdf:	or     eax,0xd1a6b3b5
  410ce4:	jno    0x410cd8
  410ce6:	imul   esi,DWORD PTR [ecx-0x15e5d05b],0xffffffbd
  410ced:	int    0xba
  410cef:	xchg   esi,eax
  410cf0:	mov    bp,WORD PTR [bp+si-0x315f]
  410cf6:	adc    eax,0xc7c73658
  410cfb:	outs   dx,BYTE PTR ds:[esi]
  410cfc:	outs   dx,BYTE PTR ds:[esi]
  410cfd:	push   esi
  410cfe:	dec    esp
  410cff:	fdiv   DWORD PTR [ebp-0x6e]
  410d02:	cmp    dh,ch
  410d04:	nop
  410d05:	push   eax
  410d06:	xor    eax,0xea55cd59
  410d0b:	inc    ebp
  410d0c:	jb     0x410ca3
  410d0e:	mov    al,0xf5
  410d10:	jl     0x410caa
  410d12:	push   edx
  410d13:	xchg   ebx,eax
  410d14:	cli    
  410d15:	and    DWORD PTR [ecx+0x1ef42260],0x75
  410d1c:	cs sub al,ah
  410d1f:	fdiv   QWORD PTR [edi]
  410d21:	dec    ebp
  410d22:	aad    0xaf
  410d24:	xchg   esp,eax
  410d25:	lds    eax,FWORD PTR [ebx-0x52056852]
  410d2b:	sub    edx,DWORD PTR [eax+0x38]
  410d2e:	xor    eax,0x4edcaf6c
  410d33:	pop    ebp
  410d34:	addr16 (bad) 
  410d36:	shl    BYTE PTR [ecx],0x38
  410d39:	mov    esi,0x8b2a4d1f
  410d3e:	cmp    ebp,esi
  410d40:	push   0x23
  410d42:	sub    eax,0x97ac191c
  410d47:	ss xchg al,bh
  410d4a:	fisubr DWORD PTR [edi-0x28]
  410d4d:	mov    eax,0x9ccd9572
  410d52:	and    BYTE PTR ds:0x7592fff1,dh
  410d58:	xchg   ebp,eax
  410d59:	ins    DWORD PTR es:[edi],dx
  410d5a:	mov    BYTE PTR [edx],bh
  410d5c:	out    0x9c,al
  410d5e:	leave  
  410d5f:	rol    DWORD PTR [ecx],cl
  410d61:	cmp    al,al
  410d63:	fisttp QWORD PTR [eax-0x31fc4d13]
  410d69:	inc    ecx
  410d6a:	sub    al,0xac
  410d6c:	xor    cl,BYTE PTR [ecx+0x4aec704d]
  410d72:	jg     0x410d47
  410d74:	push   ecx
  410d75:	mov    esi,0x47b4e972
  410d7a:	mov    edx,0x83f504c1
  410d7f:	or     DWORD PTR [edx],edx
  410d81:	dec    esp
  410d82:	fdiv   DWORD PTR [ebx]
  410d84:	cli    
  410d85:	adc    DWORD PTR [esi+0x7b],esi
  410d88:	add    bh,BYTE PTR [ecx+0x35]
  410d8b:	mov    esp,?
  410d8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d8e:	mov    ecx,0xd7d5cf47
  410d93:	cmp    edx,DWORD PTR fs:0x81accb65
  410d9a:	dec    esi
  410d9b:	xor    eax,0xe378a862
  410da0:	pop    edx
  410da1:	mov    bh,0x25
  410da3:	and    eax,0xfbbc6e80
  410da8:	push   edx
  410da9:	imul   esp,DWORD PTR ds:0xd7f5406b,0x66
  410db0:	jp     0x410dec
  410db2:	ss call 0xe9ee:0x72b94f1a
  410dba:	gs (bad) 
  410dbc:	sbb    ebx,DWORD PTR [ebx]
  410dbe:	loopne 0x410d5f
  410dc0:	jbe    0x410deb
  410dc2:	imul   ebx,DWORD PTR [esi+0x1dd13c3b],0xffffff8c
  410dc9:	lahf   
  410dca:	and    DWORD PTR [eax],0x797e1ff1
  410dd0:	dec    ebx
  410dd1:	lods   al,BYTE PTR ds:[esi]
  410dd2:	dec    esp
  410dd3:	test   DWORD PTR es:0x95c9f9c9,esi
  410dda:	sahf   
  410ddb:	inc    ebx
  410ddd:	arpl   WORD PTR [edi+0x4f],ax
  410de0:	jno    0x410d7e
  410de2:	sub    ah,BYTE PTR [edi-0x6c243108]
  410de8:	sbb    al,BYTE PTR [ecx+0x1f]
  410deb:	and    cl,BYTE PTR [esp+ecx*8-0x7b]
  410def:	sahf   
  410df0:	pop    edi
  410df1:	call   0x4ec3:0xdcaa5d1e
  410df8:	dec    edx
  410df9:	adc    al,0xa7
  410dfb:	fnsetpm(287 only) 
  410dfd:	sar    DWORD PTR [esi-0x42],1
  410e00:	xchg   esp,eax
  410e01:	retf   0x817a
  410e04:	shl    DWORD PTR [ebx+0x57],0x87
  410e08:	xchg   ebp,eax
  410e09:	fld    TBYTE PTR ds:0xed8e5b5
  410e0f:	adc    bl,BYTE PTR [ecx]
  410e11:	shr    DWORD PTR [ecx+edx*8],0x8e
  410e15:	or     eax,0xb48a806
  410e1a:	xlat   BYTE PTR ds:[ebx]
  410e1b:	xlat   BYTE PTR ds:[ebx]
  410e1c:	ret    0x3db5
  410e1f:	sub    eax,0xe6c808a
  410e24:	pop    edi
  410e25:	add    al,0xee
  410e27:	adc    edx,ebx
  410e29:	pop    ebp
  410e2a:	or     bh,BYTE PTR [edx-0x64]
  410e2d:	push   ecx
  410e2e:	jb     0x410dd6
  410e30:	rol    BYTE PTR [ebp+ecx*2-0x2d],cl
  410e34:	push   ebp
  410e35:	and    BYTE PTR [eax],dl
  410e37:	pop    eax
  410e38:	fadd   QWORD PTR [ecx]
  410e3a:	test   al,0x0
  410e3c:	mov    eax,0xf9166f00
  410e41:	sbb    dh,BYTE PTR [ecx-0x47]
  410e44:	fcom   DWORD PTR [ebp-0x19]
  410e47:	xor    eax,0x4de6215e
  410e4c:	lds    ebp,FWORD PTR [esi]
  410e4e:	xlat   BYTE PTR ds:[ebx]
  410e4f:	inc    ecx
  410e50:	push   esi
  410e51:	dec    ebp
  410e52:	or     cl,BYTE PTR [edx+eax*4-0x41]
  410e56:	mov    dh,0xb1
  410e58:	sub    BYTE PTR [ebp-0x794a7c12],dh
  410e5e:	mov    ecx,0x6a027480
  410e63:	mov    ch,0xc3
  410e65:	mov    eax,0x95f3f736
  410e6a:	fs pushf 
  410e6c:	shr    DWORD PTR [edi],cl
  410e6e:	aas    
  410e6f:	cmc    
  410e70:	push   0xffffffb9
  410e72:	and    dh,BYTE PTR [eax-0x54]
  410e75:	sub    eax,0x6d328302
  410e7a:	push   ebx
  410e7b:	mov    dh,0xc3
  410e7d:	push   0xffffffce
  410e7f:	jp     0x410e7e
  410e81:	test   eax,0x54168325
  410e86:	sub    DWORD PTR [esp+edx*1-0x1],ecx
  410e8a:	outs   dx,BYTE PTR ds:[esi]
  410e8b:	mov    ebx,0xba05cbe6
  410e90:	ja     0x410e39
  410e92:	cmp    al,0x14
  410e94:	(bad)  [eax+eax*1+0x17e1880a]
  410e9b:	mov    ch,0xe0
  410e9d:	pushf  
  410e9e:	sub    edi,DWORD PTR [edi]
  410ea0:	xchg   edx,eax
  410ea1:	in     al,0x3d
  410ea3:	hlt    
  410ea4:	out    0x5a,eax
  410ea6:	xor    eax,DWORD PTR [edi-0x66]
  410ea9:	and    eax,0x42f23ee3
  410eae:	add    edx,edx
  410eb0:	xor    BYTE PTR [ebx],dh
  410eb2:	jge    0x410ed0
  410eb4:	pop    edx
  410eb5:	xor    eax,0x931c3285
  410eba:	mov    ds:0xf2f74d84,al
  410ebf:	into   
  410ec0:	jo     0x410e9e
  410ec2:	xchg   ebx,eax
  410ec3:	mov    edi,0x6f81acd2
  410ec8:	loope  0x410e7e
  410eca:	pusha  
  410ecb:	jb     0x410ead
  410ecd:	mov    esp,0x6a7eb1e9
  410ed2:	int3   
  410ed3:	mov    ah,0x7b
  410ed5:	inc    esi
  410ed6:	push   esi
  410ed7:	leave  
  410ed8:	xchg   ebx,eax
  410ed9:	dec    eax
  410eda:	ret    0xdbb4
  410edd:	popa   
  410ede:	pop    ecx
  410edf:	cmp    al,0xf3
  410ee1:	dec    ebp
  410ee2:	hlt    
  410ee3:	xchg   esp,eax
  410ee4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ee5:	sar    cl,1
  410ee7:	mov    al,ds:0xf9990ba2
  410eec:	inc    esp
  410eed:	push   ebp
  410eee:	lds    ecx,FWORD PTR [edi]
  410ef0:	xchg   edi,eax
  410ef1:	loop   0x410f09
  410ef3:	and    ecx,0x1e
  410ef6:	mov    ah,0x7d
  410ef8:	xor    esp,DWORD PTR [ebp+0x7adaba0f]
  410efe:	mov    esp,0x15ae4f75
  410f03:	(bad)  
  410f04:	and    esi,DWORD PTR [ecx-0x24b53f48]
  410f0a:	push   cs
  410f0b:	sbb    ch,0xfe
  410f0e:	test   al,0x91
  410f10:	push   edx
  410f11:	cdq    
  410f12:	sti    
  410f13:	mov    ebx,0x2dc1032e
  410f18:	sbb    al,0x50
  410f1a:	out    dx,al
  410f1b:	xchg   esi,eax
  410f1c:	xor    edx,DWORD PTR [edi+0x3b]
  410f1f:	jg     0x410f72
  410f21:	cwde   
  410f22:	retf   0x2b78
  410f25:	sbb    eax,0x9e12f389
  410f2a:	fnstcw WORD PTR [esi]
  410f2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f2d:	aas    
  410f2e:	push   ecx
  410f2f:	loope  0x410f06
  410f31:	int    0xcc
  410f33:	inc    edi
  410f34:	loopne 0x410efd
  410f36:	mov    ebx,0xcfaa879e
  410f3b:	push   es
  410f3c:	cs xchg esp,eax
  410f3e:	jecxz  0x410f7e
  410f40:	popa   
  410f41:	(bad)
  410f45:	fisttp QWORD PTR [esi+edx*4+0x14f9a7b8]
  410f4c:	add    DWORD PTR ds:0x946c7bdd,edi
  410f52:	add    al,0x2e
  410f54:	jmp    DWORD PTR [edi+0x2d]
  410f57:	shrd   esp,eax,cl
  410f5a:	in     eax,dx
  410f5b:	sbb    BYTE PTR [ecx-0x66375fa2],cl
  410f61:	aam    0x7f
  410f63:	mov    edi,0x1397c015
  410f68:	cli    
  410f69:	xor    dh,0xd5
  410f6c:	sbb    eax,0x1131772f
  410f71:	jmp    0x4cf402c0
  410f76:	jnp    0x410f4b
  410f78:	std    
  410f79:	jne    0x410f24
  410f7b:	mov    DWORD PTR [edx-0xb],0xfcb11f7b
  410f82:	fisub  DWORD PTR [eax-0x5]
  410f85:	or     dl,BYTE PTR [esi-0x53e4e8d]
  410f8b:	inc    edi
  410f8c:	mov    eax,0xa32479d4
  410f91:	push   ss
  410f92:	sbb    BYTE PTR [edx-0x4555eb19],dl
  410f98:	xor    al,0x44
  410f9a:	inc    esp
  410f9b:	mov    ebx,0x7009dd17
  410fa0:	enter  0x574e,0xf7
  410fa4:	repnz pop DWORD PTR [edx-0x7dfbd5b9]
  410fab:	inc    ebp
  410fac:	sub    BYTE PTR [eax-0x2158d85b],al
  410fb2:	out    dx,al
  410fb3:	fldcw  WORD PTR [ebx+0x3dad897b]
  410fb9:	pusha  
  410fba:	int3   
  410fbb:	add    eax,0xafd56292
  410fc0:	mov    ds:0x6aed3bf6,eax
  410fc5:	push   es
  410fc6:	ja     0x411036
  410fc8:	lahf   
  410fc9:	dec    ecx
  410fca:	dec    ecx
  410fcb:	dec    ebp
  410fcc:	push   ecx
  410fcd:	jle    0x410fb2
  410fcf:	dec    edi
  410fd0:	pusha  
  410fd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410fd2:	pop    ebx
  410fd3:	xchg   ebp,eax
  410fd4:	test   al,0x6c
  410fd6:	aad    0x24
  410fd8:	ret    0xcae7
  410fdb:	xor    ecx,edi
  410fdd:	adc    dh,dl
  410fdf:	shl    BYTE PTR [edi-0x507b4152],1
  410fe5:	xlat   BYTE PTR ds:[ebx]
  410fe6:	jbe    0x411009
  410fe8:	inc    esp
  410fe9:	fucomi st,st(0)
  410feb:	enter  0x4273,0x4c
  410fef:	dec    ecx
  410ff0:	ret    
  410ff1:	lahf   
  410ff2:	jl     0x41106b
  410ff4:	add    bh,BYTE PTR [ebx+ebx*2+0x24]
  410ff8:	jecxz  0x410fdb
  410ffa:	pop    eax
  410ffb:	fcom   DWORD PTR [edx+esi*8-0xfc45566]
  411002:	in     al,0x81
  411004:	mov    eax,ds:0x46640e05
  411009:	retf   0xd5ae
  41100c:	jl     0x411079
  41100e:	sahf   
  41100f:	lock sub al,0x85
  411012:	das    
  411013:	cmp    esp,eax
  411015:	daa    
  411016:	test   al,0x74
  411018:	dec    eax
  411019:	add    cl,dl
  41101b:	enter  0xc1cf,0x1c
  41101f:	mov    dh,0xc1
  411021:	aad    0x75
  411023:	hlt    
  411024:	or     eax,0x8f1d3cc0
  411029:	dec    edx
  41102a:	jmp    0x253:0x8bd700e2
  411031:	(bad)  [ebp-0x1ddd7253]
  411037:	jmp    0x70c7:0x67fd1a51
  41103e:	fs mov al,0xb7
  411041:	inc    edi
  411042:	mov    al,0x8
  411044:	and    eax,0xff3db1c9
  411049:	jne    0x411046
  41104b:	jg     0x411062
  41104d:	sbb    BYTE PTR [eax],al
  41104f:	scas   eax,DWORD PTR es:[edi]
  411050:	call   0xf23deecc
  411055:	mov    edx,ebp
  411057:	inc    ebx
  411058:	fstp   DWORD PTR [edi+0x7f]
  41105b:	dec    eax
  41105c:	stc    
  41105d:	js     0x41101c
  41105f:	inc    ebp
  411060:	xlat   BYTE PTR ds:[ebx]
  411061:	pop    ecx
  411062:	and    al,0x7e
  411064:	or     BYTE PTR [ebp+esi*8-0x9],bl
  411068:	push   eax
  411069:	and    eax,0x8cd61af7
  41106e:	call   FWORD PTR ds:0xdf494040
  411074:	mov    edi,?
  411076:	cmp    eax,0xcdf0d989
  41107b:	mov    DWORD PTR ds:0x32d637a,ecx
  411081:	push   edx
  411082:	js     0x4110e2
  411084:	sub    dh,dl
  411086:	xchg   esp,eax
  411087:	add    BYTE PTR [ebx],bh
  411089:	add    al,ah
  41108b:	not    edx
  41108d:	test   al,0x33
  41108f:	(bad)  
  411090:	xor    dl,BYTE PTR [ebp+0x180354b]
  411096:	js     0x411096
  411098:	lahf   
  411099:	int    0x6d
  41109b:	mov    ecx,fs
  41109d:	jle    0x4110ff
  41109f:	jp     0x411064
  4110a1:	leave  
  4110a2:	ja     0x41103d
  4110a4:	cli    
  4110a5:	xlat   BYTE PTR ds:[ebx]
  4110a6:	shl    BYTE PTR [ebx],0x7c
  4110a9:	aad    0xd5
  4110ab:	aam    0x3
  4110ad:	mov    ecx,0xe9cb9206
  4110b2:	in     eax,dx
  4110b3:	mov    bl,0xd4
  4110b5:	ffreep st(5)
  4110b7:	mov    ch,0xf4
  4110b9:	nop
  4110ba:	push   eax
  4110bb:	xor    eax,ebp
  4110bd:	mov    edx,0xf4d4ecbf
  4110c2:	mov    edi,0xa2150dea
  4110c7:	test   DWORD PTR [edx+0x3],ebp
  4110ca:	push   edi
  4110cb:	adc    DWORD PTR [ecx*8+0x2c24d516],esp
  4110d2:	xor    dl,BYTE PTR [eax*1+0x10f7cf40]
  4110d9:	scas   al,BYTE PTR es:[edi]
  4110da:	mov    ch,ah
  4110dc:	(bad)
  4110df:	les    ebp,FWORD PTR [eax*4-0x6402e255]
  4110e6:	push   esi
  4110e7:	ret    
  4110e8:	cmp    ebx,DWORD PTR [eax+0x66]
  4110eb:	sbb    BYTE PTR [edi],0x8c
  4110ee:	fs or  al,cl
  4110f1:	es jmp 0x411086
  4110f4:	xchg   esi,eax
  4110f5:	in     al,0x81
  4110f7:	retf   0x452e
  4110fa:	idiv   DWORD PTR [edx+edi*8+0x58f01b88]
  411101:	xchg   DWORD PTR [esi+0x1a],ebx
  411104:	dec    ebp
  411105:	(bad)  
  411106:	mov    ecx,0x78a21324
  41110b:	outs   dx,BYTE PTR ds:[esi]
  41110c:	inc    esp
  41110d:	inc    ecx
  41110e:	mov    esp,0xaf11538f
  411113:	paddusw mm1,mm7
  411116:	div    BYTE PTR [esi]
  411118:	es pop ecx
  41111a:	jle    0x4110dd
  41111c:	xchg   BYTE PTR [edi],ch
  41111e:	call   0xe708abe
  411123:	aas    
  411124:	fiadd  WORD PTR [ecx]
  411126:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411127:	test   al,0xed
  411129:	xchg   edi,edi
  41112b:	jg     0x41113a
  41112d:	and    eax,0x4a66ffee
  411132:	inc    edi
  411133:	lods   eax,DWORD PTR es:[esi]
  411135:	pop    ecx
  411136:	and    bl,cl
  411138:	add    ch,BYTE PTR [edi]
  41113a:	dec    edi
  41113b:	sub    DWORD PTR [eax-0x5],esi
  41113e:	leave  
  41113f:	test   DWORD PTR [ecx+0x31],esi
  411142:	lea    esp,ds:0x875b9c1
  411148:	jb     0x411189
  41114a:	out    0xb5,al
  41114c:	jnp    0x4111c1
  41114e:	popf   
  41114f:	mov    cl,0xed
  411151:	xchg   ebx,eax
  411152:	sar    BYTE PTR [ecx],cl
  411154:	iret   
  411155:	idiv   ch
  411157:	retf   
  411158:	adc    al,0x97
  41115a:	hlt    
  41115b:	cwde   
  41115c:	jmp    0x98ed:0x6369ab6d
  411163:	sbb    cl,dl
  411165:	retf   
  411166:	inc    eax
  411167:	(bad)  
  411168:	mov    al,0x3b
  41116a:	fistp  WORD PTR [ecx-0x1023038]
  411170:	xor    dh,ah
  411172:	jecxz  0x411190
  411174:	cmp    al,0xfd
  411176:	mov    ds:0x2a9ba0d1,al
  41117b:	mov    ecx,0xcd82160
  411180:	sahf   
  411181:	in     eax,dx
  411182:	loop   0x411152
  411184:	inc    edx
  411185:	imul   eax,DWORD PTR [esi+0x43],0xa2a99a34
  41118c:	and    eax,0xce5ba46
  411191:	loop   0x411130
  411193:	(bad)  
  411194:	out    0xe4,eax
  411196:	xchg   cl,cl
  411198:	cli    
  411199:	mov    eax,0x9abe14e1
  41119e:	(bad)  
  41119f:	loopne 0x4111a6
  4111a1:	shl    DWORD PTR [esp+ebp*2-0x58cbd504],cl
  4111a8:	jb     0x4111f0
  4111aa:	sahf   
  4111ab:	vpandn xmm1,xmm6,XMMWORD PTR [ecx-0xa18f103]
  4111b3:	outs   dx,BYTE PTR ds:[esi]
  4111b4:	inc    ebp
  4111b5:	call   0x4a4ceac6
  4111ba:	sti    
  4111bb:	jae    0x4111f7
  4111bd:	arpl   WORD PTR [edi-0x1a],si
  4111c0:	mov    esp,0x9674be5d
  4111c5:	jno    0x411159
  4111c7:	(bad)  
  4111c8:	jno    0x4111bf
  4111ca:	and    eax,esi
  4111cc:	(bad)  
  4111ce:	or     eax,DWORD PTR [esp+esi*4]
  4111d1:	cs xchg ebp,eax
  4111d3:	fnstenv [ebp+0x14aff1c4]
  4111d9:	pop    edx
  4111da:	lahf   
  4111db:	loopne 0x411219
  4111dd:	push   0xb63bae7
  4111e2:	cmp    BYTE PTR [edx+0x7f],0x60
  4111e6:	test   DWORD PTR [edi-0x50a59c5c],ebx
  4111ec:	(bad)  
  4111ed:	pop    ecx
  4111ee:	xlat   BYTE PTR ds:[ebx]
  4111ef:	or     eax,0xa340967a
  4111f4:	in     eax,0xec
  4111f6:	pushf  
  4111f7:	mov    edi,0x73b086b3
  4111fc:	aad    0x8b
  4111fe:	pop    es
  4111ff:	jmp    0xa72d:0xacefaee4
  411206:	xor    eax,0x5fa7a373
  41120b:	push   esi
  41120c:	enter  0x61d,0x8d
  411210:	dec    edi
  411211:	inc    edi
  411212:	fnsave [ebx+0x48]
  411215:	aam    0xd0
  411217:	cld    
  411218:	in     eax,dx
  411219:	push   0x38
  41121b:	repz mov edi,0x8431942f
  411221:	aam    0x34
  411223:	jnp    0x41123f
  411225:	push   0x8592c76b
  41122a:	pop    ebp
  41122b:	aam    0xba
  41122d:	and    BYTE PTR [esi*8+0x2768b44f],0x8d
  411235:	int3   
  411236:	daa    
  411237:	add    BYTE PTR [ebx+0x67c2265c],ah
  41123d:	retf   
  41123e:	xchg   ah,ch
  411240:	xor    eax,0x41
  411243:	lahf   
  411244:	cmc    
  411245:	sar    DWORD PTR [esp+ebx*8+0x530ff745],1
  41124c:	loopne 0x41125b
  41124e:	ds (bad) 
  411250:	ret    
  411251:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411252:	pusha  
  411253:	mov    ah,bh
  411255:	cwde   
  411256:	icebp  
  411257:	xchg   ecx,eax
  411258:	or     DWORD PTR [ecx],0xc55086c7
  41125e:	push   ecx
  41125f:	xchg   edx,eax
  411260:	dec    esp
  411261:	test   DWORD PTR [esi],0x86808ce2
  411267:	arpl   WORD PTR [esi],cx
  411269:	pop    ecx
  41126a:	xchg   esi,eax
  41126b:	int3   
  41126c:	push   edx
  41126d:	mov    ds:0x3e4e74e2,al
  411272:	ficomp DWORD PTR [ebx+esi*4]
  411275:	adc    ebp,edi
  411277:	push   edi
  411278:	(bad)  
  411279:	mov    cl,0xb0
  41127b:	cmp    eax,0xe3d5297a
  411280:	jmp    0x4112a4
  411282:	push   ds
  411283:	xchg   esi,eax
  411284:	adc    dh,al
  411286:	pop    esi
  411287:	pop    es
  411288:	jg     0x411262
  41128a:	cmp    al,0xb6
  41128c:	push   ss
  41128d:	mov    eax,0x51d25111
  411292:	xor    ebp,eax
  411294:	push   cs
  411295:	ds push edi
  411297:	cmp    ebp,ebx
  411299:	jg     0x41123c
  41129b:	call   0xeb3c:0x9ab5561c
  4112a2:	mov    ecx,DWORD PTR [esi]
  4112a4:	add    eax,0xfea52a59
  4112a9:	scas   al,BYTE PTR es:[edi]
  4112aa:	mov    gs,WORD PTR [ebp-0x1d]
  4112ad:	jbe    0x411251
  4112af:	mov    ah,0xa3
  4112b1:	lock std 
  4112b3:	jecxz  0x4112a8
  4112b5:	mov    cl,0x71
  4112b7:	mov    ah,0x2c
  4112b9:	xchg   edi,eax
  4112ba:	pop    ds
  4112bb:	mov    cl,0xc4
  4112be:	mov    bl,0x5b
  4112c0:	mov    dh,0x1d
  4112c2:	jnp    0x4112ff
  4112c4:	(bad)  [edi+edx*4-0x39099234]
  4112cb:	pop    edi
  4112cc:	adc    ecx,DWORD PTR [ecx-0x38569337]
  4112d2:	mov    ah,BYTE PTR [esi]
  4112d4:	or     DWORD PTR [ebp-0x7fade5a1],0xffffff93
  4112db:	cmp    esp,DWORD PTR [edi+0x17]
  4112de:	pop    edx
  4112df:	push   eax
  4112e0:	inc    eax
  4112e1:	loope  0x41126e
  4112e3:	inc    esi
  4112e4:	dec    esp
  4112e5:	pop    ds
  4112e6:	push   cs
  4112e7:	xor    DWORD PTR [esi],ebx
  4112e9:	bound  esi,QWORD PTR [ebp+0x63ca6b7]
  4112ef:	pop    esp
  4112f0:	mov    edi,0x569c882
  4112f5:	dec    eax
  4112f6:	aam    0xca
  4112f8:	ret    0x1276
  4112fb:	fisttp WORD PTR [edx]
  4112fd:	in     eax,0x6b
  4112ff:	push   0xa52bed16
  411304:	aam    0xde
  411306:	ins    BYTE PTR es:[edi],dx
  411307:	aas    
  411308:	loop   0x411353
  41130a:	inc    ecx
  41130b:	jns    0x4112e4
  41130d:	xchg   ecx,eax
  41130e:	rcr    esp,cl
  411310:	or     DWORD PTR [ecx+ebp*1+0x5a8359e4],eax
  411317:	and    DWORD PTR [esi+0x21],eax
  41131a:	rcr    DWORD PTR ss:[eax],1
  41131d:	lock not BYTE PTR [edx-0x261663b4]
  411324:	dec    edi
  411325:	test   BYTE PTR [ebx-0x15],ch
  411328:	sub    al,0xc8
  41132a:	in     al,0x91
  41132c:	xchg   esp,eax
  41132d:	add    dl,BYTE PTR [edi]
  41132f:	(bad)  
  411330:	sar    BYTE PTR [ebx],0x29
  411333:	fidiv  DWORD PTR [ebx+0x1ddde12d]
  411339:	push   edi
  41133a:	test   DWORD PTR [edi],ecx
  41133c:	scas   al,BYTE PTR es:[edi]
  41133d:	push   esp
  41133e:	fsubr  QWORD PTR [eax-0x759bda39]
  411344:	pushf  
  411345:	pop    edx
  411346:	mov    edi,0xc7c37ce1
  41134b:	rcl    DWORD PTR [eax],1
  41134d:	ss pop edi
  41134f:	(bad)  
  411350:	mov    al,ds:0xc800e723
  411355:	mov    eax,0xdee77a6a
  41135a:	cli    
  41135b:	(bad)  
  41135c:	cmp    dl,BYTE PTR [edi]
  41135e:	sbb    BYTE PTR [ebp+0x49523f0e],0x2f
  411365:	ret    
  411366:	loop   0x4113df
  411368:	fist   WORD PTR [ecx+ebx*4-0x11e9a13a]
  41136f:	(bad)  
  411370:	in     eax,dx
  411371:	dec    edx
  411372:	js     0x411333
  411374:	jo     0x41131b
  411376:	mov    edx,0x94fd460a
  41137b:	adc    BYTE PTR [edi+0x74],bl
  41137e:	xor    al,0xc0
  411380:	sbb    al,BYTE PTR [eax+0x7c2fe3a4]
  411386:	paddsb mm1,QWORD PTR [ebp+eiz*8-0x5d]
  41138b:	dec    esi
  41138c:	in     eax,0xec
  41138e:	fwait
  41138f:	mov    BYTE PTR [ebp+0x3b92fd1d],0x17
  411396:	aas    
  411397:	jns    0x41136a
  411399:	cmp    eax,0x2ae1e107
  41139e:	retf   0x3657
  4113a1:	add    cl,al
  4113a3:	scas   eax,DWORD PTR es:[edi]
  4113a4:	xor    al,0x58
  4113a6:	mov    bl,0xaf
  4113a8:	sub    BYTE PTR [ecx],0x11
  4113ab:	mov    ch,0x92
  4113ad:	and    ch,BYTE PTR [eax+eiz*2+0xab4e936]
  4113b4:	leave  
  4113b5:	leave  
  4113b6:	sbb    BYTE PTR [ebp+0x42881290],bh
  4113bc:	mov    ah,0x63
  4113be:	jbe    0x4113be
  4113c0:	and    BYTE PTR [ecx],cl
  4113c2:	mov    eax,0x5a83c9fc
  4113c7:	loopne 0x411385
  4113c9:	pop    eax
  4113ca:	sbb    cl,ch
  4113cc:	lock push edi
  4113ce:	sub    BYTE PTR [eax],dh
  4113d0:	adc    BYTE PTR [esi+0x0],cl
  4113d3:	push   ecx
  4113d4:	cs scas al,BYTE PTR es:[edi]
  4113d6:	sbb    ecx,DWORD PTR [ebp-0x4b]
  4113d9:	shl    BYTE PTR [edi+0x4a],1
  4113dc:	dec    esi
  4113dd:	jno    0x411408
  4113df:	sar    dl,0x1f
  4113e2:	clc    
  4113e3:	mov    eax,ds:0x895aa0cc
  4113e8:	(bad)  [eax-0x1e2a1f04]
  4113ee:	in     al,0xf4
  4113f0:	cmp    ecx,ebx
  4113f2:	leave  
  4113f3:	mov    cl,0xf8
  4113f5:	fild   QWORD PTR [eax-0x56]
  4113f8:	jg     0x4113c4
  4113fa:	xor    BYTE PTR [ebp+0x24],0x35
  4113fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113ff:	fnstcw WORD PTR [ecx]
  411401:	push   esp
  411402:	cld    
  411403:	dec    ecx
  411404:	pusha  
  411405:	lea    edx,[ecx]
  411407:	push   cs
  411408:	imul   eax,DWORD PTR [ebp+ebp*8+0x26838526],0xffffffd7
  411410:	daa    
  411411:	inc    edx
  411412:	sub    BYTE PTR [ebp-0x3dd9ce70],bl
  411418:	adc    al,0xd9
  41141a:	sub    cl,BYTE PTR [ebp-0x4521025e]
  411420:	add    eax,ebp
  411422:	retf   0x4a9c
  411425:	push   esi
  411426:	push   edx
  411427:	mov    edx,0x20335d2e
  41142d:	aas    
  41142e:	push   edx
  41142f:	inc    esi
  411430:	mov    BYTE PTR [esi+0x5ebe13ec],dl
  411436:	mov    eax,ds:0x211b0267
  41143b:	mov    ecx,0xfa72166f
  411440:	das    
  411441:	mov    cl,0x88
  411443:	mov    esp,0x8cf9e1d5
  411448:	add    dl,al
  41144a:	loopne 0x4113f5
  41144c:	add    ebp,edi
  41144e:	mov    edx,DWORD PTR [ebp-0x3fcda20b]
  411454:	add    eax,0x8a714aed
  411459:	sub    ebp,DWORD PTR [edx+0x5552acfc]
  41145f:	fcmovu st,st(6)
  411461:	push   eax
  411462:	inc    esp
  411463:	fnstenv [esi-0x1e572c80]
  411469:	adc    eax,0x243da8ea
  41146e:	add    eax,DWORD PTR [eax]
  411470:	jns    0x4113fb
  411472:	rcl    BYTE PTR [esi+0x55],cl
  411475:	jle    0x4114e2
  411477:	xchg   esp,eax
  411478:	jns    0x411436
  41147a:	mov    cl,0x83
  41147c:	pushf  
  41147d:	icebp  
  41147e:	xchg   ebp,eax
  41147f:	lds    esi,FWORD PTR [eax+0x605ae6e1]
  411485:	mov    DWORD PTR [edx+0x69],edx
  411488:	arpl   WORD PTR [ecx],dx
  41148a:	add    edi,0x9b91552c
  411490:	in     eax,0xe
  411492:	jae    0x4114b6
  411494:	xchg   edi,eax
  411495:	sti    
  411496:	mov    esi,DWORD PTR [eax]
  411498:	retf   
  411499:	mov    ebp,0x799a9e38
  41149e:	(bad)  
  41149f:	popa   
  4114a0:	jge    0x4114d1
  4114a2:	lods   eax,DWORD PTR ds:[esi]
  4114a3:	dec    ecx
  4114a4:	inc    eax
  4114a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114a6:	retf   
  4114a7:	ret    0x74d5
  4114aa:	fbld   TBYTE PTR [ecx+eax*4-0x4c]
  4114ae:	cmp    al,BYTE PTR [ebx+0x397fd858]
  4114b4:	stos   BYTE PTR es:[edi],al
  4114b5:	cmp    DWORD PTR [edi],edx
  4114b7:	leave  
  4114b8:	adc    BYTE PTR [edx+edx*1-0x78],0xe2
  4114bd:	add    al,0x9f
  4114bf:	(bad)  
  4114c1:	repz out dx,eax
  4114c3:	jo     0x411477
  4114c5:	(bad)  
  4114c6:	in     al,dx
  4114c7:	inc    ebx
  4114c8:	or     BYTE PTR [edi-0x3cfc5b8e],bl
  4114ce:	lea    ebx,[esi-0x40dc921a]
  4114d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114d5:	xlat   BYTE PTR ds:[ebx]
  4114d6:	sbb    ebx,DWORD PTR [ecx-0x7b53bf08]
  4114dc:	leave  
  4114dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114de:	hlt    
  4114df:	ins    DWORD PTR es:[edi],dx
  4114e0:	(bad)  
  4114e1:	nop
  4114e2:	mov    ecx,0x2466ef51
  4114e7:	arpl   WORD PTR [eax],bp
  4114e9:	in     al,dx
  4114ea:	pop    ds
  4114eb:	xchg   DWORD PTR [eax-0x76],esi
  4114ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114ef:	sbb    dl,BYTE PTR [edx-0x652d0ace]
  4114f5:	lods   al,BYTE PTR ds:[esi]
  4114f6:	mov    eax,ds:0x4aa63ef2
  4114fb:	jae    0x411569
  4114fd:	shl    BYTE PTR ds:0xaa35aab4,0xf3
  411504:	mov    bh,BYTE PTR [edi]
  411506:	(bad)  
  411507:	fstp   DWORD PTR [ebx-0x1f247770]
  41150d:	xor    cl,BYTE PTR [eax-0x5273b46e]
  411513:	stos   BYTE PTR es:[edi],al
  411514:	out    dx,al
  411515:	inc    ebp
  411516:	and    bh,dh
  411518:	xchg   esp,eax
  411519:	pop    ebp
  41151a:	mov    cl,0xd
  41151c:	push   ecx
  41151d:	aas    
  41151e:	out    0x86,eax
  411520:	sbb    ebp,DWORD PTR [edx-0x40]
  411523:	bound  esi,QWORD PTR [esi-0x5c]
  411526:	shr    DWORD PTR [ebx],1
  411528:	mov    ebx,0x49c90373
  41152d:	daa    
  41152e:	jge    0x4114b3
  411530:	dec    ebp
  411531:	pop    eax
  411532:	adc    eax,0xc933cedb
  411537:	jg     0x4114f2
  411539:	nop
  41153a:	test   al,0xb8
  41153c:	fisub  DWORD PTR ds:0x6acea487
  411542:	mov    eax,0x7749add9
  411547:	cwde   
  411548:	shl    DWORD PTR [ebp-0x61aeae33],cl
  41154e:	call   0xa432:0x63f121bb
  411555:	cmp    al,0x76
  411557:	pop    ebp
  411558:	aas    
  411559:	sub    esi,edi
  41155b:	fdivr  st(6),st
  41155d:	mov    ds:0x1f859a4e,al
  411562:	mov    dl,0x7b
  411564:	ret    
  411565:	ficom  WORD PTR [edx+0x57]
  411568:	inc    esp
  411569:	sbb    dh,BYTE PTR [ebp+0x4f]
  41156c:	dec    eax
  41156d:	pop    esi
  41156e:	retf   
  41156f:	addr16 jno 0x4115bb
  411572:	push   0x2e
  411574:	sahf   
  411575:	mov    cl,0xa2
  411577:	mov    BYTE PTR [edx],dl
  411579:	ss pop esi
  41157b:	mov    edx,DWORD PTR [eax]
  41157d:	jg     0x4115a0
  41157f:	lods   eax,DWORD PTR ds:[esi]
  411580:	push   ebx
  411581:	lock in eax,dx
  411583:	out    dx,al
  411584:	jecxz  0x41151f
  411586:	mov    ah,0xd9
  411588:	inc    ecx
  411589:	adc    edi,DWORD PTR es:[edx]
  41158c:	sahf   
  41158d:	aad    0x94
  41158f:	in     al,0xe7
  411591:	adc    edx,ebx
  411593:	cli    
  411594:	call   0x4bd0:0xd4e756be
  41159b:	lock das 
  41159d:	sbb    ch,BYTE PTR [esi+edi*1-0x493826cb]
  4115a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115a5:	xor    BYTE PTR ds:0x1212ad9d,dh
  4115ab:	cmp    ecx,edi
  4115ad:	sub    DWORD PTR [ebx+0x5b],esp
  4115b0:	mov    ds:0xc38430a5,eax
  4115b5:	fcom   QWORD PTR cs:[edx-0x14]
  4115b9:	adc    bl,BYTE PTR [edi]
  4115bb:	jmp    0x7a18:0x9697778a
  4115c2:	push   ebx
  4115c3:	inc    edi
  4115c4:	xlat   BYTE PTR ds:[ebx]
  4115c5:	add    BYTE PTR [esi],ch
  4115c7:	xor    BYTE PTR [edi+0x55],dh
  4115ca:	outs   dx,BYTE PTR ds:[esi]
  4115cb:	retf   
  4115cc:	inc    esi
  4115cd:	std    
  4115ce:	pop    ebx
  4115cf:	add    DWORD PTR [ebp-0x26],eax
  4115d2:	mov    esp,0x8ea17702
  4115d7:	pop    ebp
  4115d8:	test   eax,0x21c99eb1
  4115dd:	pop    edx
  4115de:	pop    es
  4115df:	inc    ecx
  4115e0:	and    al,0x7b
  4115e2:	ret    
  4115e3:	cs cmp al,0x8b
  4115e6:	into   
  4115e7:	dec    edx
  4115e8:	push   eax
  4115e9:	xchg   BYTE PTR [ecx],ah
  4115eb:	or     BYTE PTR [esi+0x52],al
  4115ee:	imul   ecx,DWORD PTR [edi-0x61],0xffffff89
  4115f2:	ds int 0x7d
  4115f5:	inc    edx
  4115f6:	mov    esp,0xd0e5be6d
  4115fb:	sar    BYTE PTR [ecx+0x98d6f14],0xef
  411602:	mov    edx,0x9557dc8e
  411607:	nop
  411608:	sar    edx,1
  41160a:	or     esp,DWORD PTR [ebx]
  41160c:	loopne 0x411593
  41160e:	add    BYTE PTR [edx-0x14],ah
  411611:	or     ecx,edx
  411613:	ss dec edi
  411615:	add    al,0x54
  411617:	jle    0x4115bb
  411619:	push   es
  41161a:	sbb    al,0x9b
  41161c:	cmp    eax,0x4653c485
  411621:	cmp    ah,BYTE PTR [esi+esi*4]
  411624:	xchg   edi,eax
  411625:	popa   
  411626:	cmp    DWORD PTR ss:[ebx-0x1d5cb9bf],ebp
  41162d:	inc    ebp
  41162e:	pop    es
  41162f:	jge    0x41163e
  411631:	sbb    dl,dl
  411633:	retf   
  411634:	popf   
  411635:	cmp    eax,0x751aa625
  41163a:	add    BYTE PTR [esi-0x9],dh
  41163d:	imul   edx,DWORD PTR ds:0x3894e96d,0x867e8477
  411647:	sahf   
  411648:	pushf  
  411649:	dec    eax
  41164a:	push   0x30cdee04
  41164f:	jno    0x4116aa
  411651:	(bad)  
  411652:	hlt    
  411653:	out    0x64,al
  411655:	enter  0x706a,0x7d
  411659:	stc    
  41165a:	dec    edi
  41165b:	ss mov ebx,0x50f372b9
  411661:	repz inc eax
  411663:	fisubr WORD PTR [edx-0x62]
  411666:	inc    ecx
  411667:	idiv   edi
  411669:	addr16 inc eax
  41166b:	icebp  
  41166c:	jbe    0x41162c
  41166e:	ds push esp
  411670:	cmp    al,0x6
  411672:	fbld   TBYTE PTR [ecx-0x5793bfc9]
  411678:	push   cs
  411679:	scas   eax,DWORD PTR es:[edi]
  41167a:	shr    ch,cl
  41167c:	hlt    
  41167d:	mov    dh,0x7d
  41167f:	repz ret 0xb045
  411683:	js     0x4116d6
  411685:	test   BYTE PTR [edi],dl
  411687:	adc    BYTE PTR [ebp+0x58],0x2d
  41168b:	mov    ebx,0x13ceae08
  411690:	mov    bh,0xad
  411692:	and    edi,eax
  411694:	jne    0x411698
  411696:	dec    eax
  411697:	jmp    0x41166c
  411699:	test   DWORD PTR [ecx],0xc02fc91c
  41169f:	stos   DWORD PTR es:[edi],eax
  4116a0:	lock push ebx
  4116a2:	mov    eax,ds:0xad3097c1
  4116a7:	das    
  4116a8:	mov    cl,ah
  4116aa:	jns    0x41169e
  4116ac:	je     0x41163b
  4116ae:	inc    ebx
  4116af:	pop    ebp
  4116b0:	cmp    DWORD PTR [ebx+0x6c1af5d3],ebp
  4116b6:	fcmovnbe st,st(0)
  4116b8:	push   0xffffffdd
  4116ba:	lea    ecx,[ecx-0x76dccaec]
  4116c0:	leave  
  4116c1:	repnz dec esp
  4116c3:	lea    edx,[ebx+esi*8+0x254febc7]
  4116ca:	xlat   BYTE PTR ds:[ebx]
  4116cb:	fcmovb st,st(5)
  4116cd:	lods   eax,DWORD PTR ds:[esi]
  4116ce:	fld    TBYTE PTR [ebp+ebx*8-0x346be67a]
  4116d5:	jg     0x41167e
  4116d7:	add    eax,0x328e59fe
  4116dc:	test   al,0x9d
  4116de:	inc    esp
  4116df:	fxch   st(4)
  4116e1:	jg     0x4116a1
  4116e3:	sub    DWORD PTR [edi+0x3c],esp
  4116e6:	sti    
  4116e7:	mov    ecx,DWORD PTR [eax+0x75e48b0b]
  4116ed:	xchg   BYTE PTR [edi+0x2],al
  4116f0:	fiadd  WORD PTR [ecx+0x6d]
  4116f3:	fld    QWORD PTR [edi-0x73]
  4116f6:	jg     0x41175f
  4116f8:	leave  
  4116f9:	test   al,0xc7
  4116fb:	in     eax,dx
  4116fc:	lods   eax,DWORD PTR ds:[esi]
  4116fd:	mov    edi,0xe54d566f
  411702:	out    dx,al
  411703:	and    BYTE PTR [ebx-0x80],dh
  411706:	inc    BYTE PTR [eax-0x34]
  411709:	inc    si
  41170b:	xor    BYTE PTR [eax+0x297e86b5],0xc5
  411712:	xchg   esi,eax
  411713:	in     eax,0x2d
  411715:	loopne 0x4116f1
  411717:	call   0x727f:0x785bd653
  41171e:	xchg   ebx,eax
  41171f:	mov    ah,0xf5
  411721:	push   edi
  411722:	dec    ebp
  411723:	mov    dh,ch
  411725:	in     al,0x51
  411727:	(bad)  
  411728:	das    
  411729:	sahf   
  41172a:	push   DWORD PTR [ecx-0xa]
  41172d:	or     al,0x10
  41172f:	stc    
  411730:	xor    edx,esp
  411732:	jp     0x4116e1
  411734:	mov    esp,0x6dd23f59
  411739:	gs in  eax,0x77
  41173c:	(bad)  [ebx+0x4e]
  41173f:	cmp    al,cl
  411741:	mov    al,0x8c
  411743:	sbb    DWORD PTR [ebx],ecx
  411745:	xor    BYTE PTR [ecx-0x3f1679f7],al
  41174b:	in     al,0x71
  41174d:	sub    DWORD PTR [eax],0x92a4b704
  411753:	(bad)  [esi+0x76]
  411756:	fstp   QWORD PTR [esi+0x11]
  411759:	retf   
  41175a:	or     BYTE PTR [eax],bh
  41175c:	push   di
  41175e:	stos   BYTE PTR es:[edi],al
  41175f:	inc    ecx
  411760:	mov    edi,DWORD PTR ds:0xf2fd13cc
  411766:	adc    ebx,ecx
  411768:	outs   dx,DWORD PTR ds:[esi]
  411769:	sub    eax,0xb07c18fe
  41176e:	hlt    
  41176f:	push   esp
  411770:	sub    DWORD PTR [eax],ecx
  411772:	pusha  
  411773:	jne    0x41174d
  411775:	repnz xlat BYTE PTR ds:[ebx]
  411777:	mov    ch,0xdc
  411779:	addr16 mov dh,0x95
  41177c:	mov    eax,DWORD PTR ds:0x11aa4b91
  411782:	shr    BYTE PTR [ebp+0x1c],1
  411785:	push   es
  411786:	repz int3 
  411788:	xchg   edi,eax
  411789:	jbe    0x411739
  41178b:	imul   ecx,DWORD PTR [eax],0x2d
  41178e:	inc    edi
  41178f:	in     al,dx
  411790:	fistp  QWORD PTR [ebp+edi*2+0x70]
  411794:	ins    DWORD PTR es:[edi],dx
  411795:	lea    edx,[esp+ebp*2-0x2bdff2d2]
  41179c:	lods   al,BYTE PTR ds:[esi]
  41179d:	and    ecx,eax
  41179f:	int    0x6d
  4117a1:	or     eax,0x9395100c
  4117a6:	in     eax,dx
  4117a7:	repz (bad) [ebx+0xc614984]
  4117ae:	xor    DWORD PTR [edi],eax
  4117b0:	jbe    0x411732
  4117b2:	mov    cl,0xc1
  4117b4:	jae    0x41176e
  4117b6:	sub    DWORD PTR [ebx+0x20],ebp
  4117b9:	push   esp
  4117ba:	mov    WORD PTR [edx+eiz*2],ds
  4117bd:	pop    ebx
  4117be:	jg     0x411809
  4117c0:	mov    edx,0x12febaab
  4117c5:	cmp    BYTE PTR [edi-0x2e949071],bh
  4117cb:	ins    DWORD PTR es:[edi],dx
  4117cc:	xchg   ebp,eax
  4117cd:	aam    0xc
  4117cf:	inc    esi
  4117d0:	mov    bh,0x78
  4117d2:	lods   eax,DWORD PTR ds:[esi]
  4117d3:	xchg   edx,eax
  4117d4:	rcr    DWORD PTR [esi+0x600980a4],0xd1
  4117db:	adc    ebx,DWORD PTR [edx+0x971c028]
  4117e1:	jge    0x41181a
  4117e3:	(bad)  
  4117e4:	rcr    bh,cl
  4117e6:	pop    edi
  4117e7:	inc    ebx
  4117e8:	adc    bh,BYTE PTR [ebx]
  4117ea:	xchg   BYTE PTR [eax+ecx*1+0x78],al
  4117ee:	dec    ebx
  4117ef:	call   DWORD PTR [edi-0x43]
  4117f2:	stc    
  4117f3:	lock mov esp,0x60856c54
  4117f9:	test   al,0xaf
  4117fb:	sar    ch,0xa6
  4117fe:	and    eax,ebp
  411800:	xchg   ebx,eax
  411801:	mov    eax,ds:0x6a7536f
  411806:	push   eax
  411807:	jl     0x411843
  411809:	aaa    
  41180a:	loopne 0x4117cc
  41180c:	outs   dx,DWORD PTR ds:[esi]
  41180d:	add    al,ah
  41180f:	sub    ah,BYTE PTR [edi]
  411811:	into   
  411812:	xor    DWORD PTR ds:0xd4a09cce,eax
  411818:	inc    ebx
  411819:	dec    ebp
  41181a:	aaa    
  41181b:	fwait
  41181c:	mov    al,0x93
  41181e:	or     ebp,eax
  411820:	pop    ebx
  411821:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411822:	in     eax,0xd8
  411824:	cmp    BYTE PTR [eax+0x44],ch
  411827:	jne    0x41180d
  411829:	fisttp QWORD PTR [ebx]
  41182b:	ins    BYTE PTR es:[edi],dx
  41182c:	jg     0x4117eb
  41182e:	in     al,0xdc
  411830:	repz fsub st(1),st
  411833:	ror    DWORD PTR [edi*4+0x4e606c48],cl
  41183a:	dec    ecx
  41183b:	xchg   edx,eax
  41183c:	xor    eax,0x23cdf60c
  411841:	fs jge 0x411815
  411844:	push   esp
  411845:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411847:	cli    
  411848:	scas   eax,DWORD PTR es:[edi]
  411849:	loope  0x411859
  41184b:	js     0x41187a
  41184d:	inc    ebp
  41184e:	dec    esp
  41184f:	mov    ch,0x99
  411851:	jmp    0x411817
  411853:	ins    BYTE PTR es:[edi],dx
  411854:	xchg   edx,eax
  411855:	push   edx
  411856:	jge    0x4118cb
  411858:	addr16 inc ebx
  41185a:	add    BYTE PTR [ebx+ebx*1+0x64],bl
  41185e:	xchg   ebx,eax
  41185f:	mov    edx,es
  411861:	xchg   esi,eax
  411862:	test   BYTE PTR [edi],dl
  411864:	pop    es
  411865:	push   es
  411866:	cwde   
  411867:	sbb    ecx,DWORD PTR [edx+0x420bc42c]
  41186d:	and    dl,bl
  41186f:	xor    BYTE PTR [ecx],ah
  411871:	jae    0x4118e4
  411873:	das    
  411874:	mov    ch,0xed
  411876:	pop    ecx
  411877:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  411879:	push   0x104d907f
  41187e:	mov    ebp,0x6bd37732
  411883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411884:	pop    eax
  411885:	push   es
  411886:	mov    esp,0xcd8062d1
  41188b:	mov    cl,0x76
  41188d:	push   cs
  41188e:	in     al,dx
  41188f:	jno    0x41184d
  411891:	inc    ebx
  411892:	inc    edx
  411893:	adc    BYTE PTR [ebp-0x3b],dh
  411896:	mov    ch,0x2d
  411898:	icebp  
  411899:	cmp    DWORD PTR [esi],0x9fa3fd5d
  41189f:	addr16 pop esi
  4118a1:	push   DWORD PTR [eax-0x32]
  4118a4:	mov    al,ds:0xe7bd3f23
  4118a9:	sub    ebp,DWORD PTR [ecx+0x62]
  4118ac:	pop    ss
  4118ad:	jb     0x411833
  4118af:	arpl   WORD PTR [ecx+0x64],bp
  4118b2:	repz push eax
  4118b4:	lea    ebp,ss:[eax]
  4118b7:	stos   DWORD PTR es:[edi],eax
  4118b8:	ins    DWORD PTR es:[edi],dx
  4118b9:	aas    
  4118ba:	loop   0x411894
  4118bc:	xchg   BYTE PTR [ebp-0x30],ch
  4118bf:	mov    WORD PTR [ebx-0x1352e2db],cs
  4118c5:	std    
  4118c6:	imul   esi,DWORD PTR [ebx+0x547ccf9b],0x7e
  4118cd:	je     0x41190d
  4118cf:	cmp    eax,0x450cc490
  4118d4:	inc    eax
  4118d5:	mov    ch,0x41
  4118d7:	ret    
  4118d8:	mov    bl,BYTE PTR [ecx-0x3f93bb4]
  4118de:	mov    ecx,0x5ba5951b
  4118e3:	outs   dx,BYTE PTR ds:[esi]
  4118e4:	cdq    
  4118e5:	and    ch,BYTE PTR [edi-0x4e]
  4118e8:	or     BYTE PTR [edi],bl
  4118ea:	ins    BYTE PTR es:[edi],dx
  4118eb:	pop    eax
  4118ec:	(bad)  
  4118ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118ee:	sti    
  4118ef:	sbb    eax,0x2c6157f5
  4118f4:	add    eax,0x75519050
  4118f9:	push   ebx
  4118fa:	shr    BYTE PTR [esp+ebx*8-0x1984f511],1
  411901:	jb     0x411941
  411903:	lea    esi,[esi-0x4cfc5172]
  411909:	fcomp  QWORD PTR [ebp-0x530f7543]
  41190f:	jmp    0xdd54:0xb02e33ee
  411916:	sub    BYTE PTR [edi+0x58],cl
  411919:	mov    ebp,eax
  41191b:	cdq    
  41191c:	out    0x1e,al
  41191e:	jle    0x4118be
  411920:	cli    
  411921:	add    DWORD PTR [esi-0x7e],esp
  411924:	cmp    al,0xd6
  411926:	das    
  411927:	(bad)  
  411928:	sub    eax,0x53b84907
  41192d:	adc    al,0x6e
  41192f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411930:	ss dec ebp
  411932:	scas   eax,DWORD PTR es:[edi]
  411933:	dec    edx
  411934:	cdq    
  411935:	xor    DWORD PTR [edi+esi*8-0x67],0xffffffa5
  41193a:	leave  
  41193b:	loopne 0x41197e
  41193d:	sbb    al,0xaa
  41193f:	ins    DWORD PTR es:[edi],dx
  411940:	mov    cs,WORD PTR [edi]
  411942:	test   al,0x5c
  411944:	sub    bl,dh
  411946:	dec    eax
  411947:	jmp    0x7450b671
  41194c:	js     0x411921
  41194e:	jmp    0x4118fc
  411950:	das    
  411951:	or     eax,0x213b6ec6
  411956:	adc    DWORD PTR [edx],edx
  411958:	pcmpeqw mm4,QWORD PTR [edx+0x5ca59a0b]
  41195f:	and    BYTE PTR ds:0xf8c39567,0x4
  411966:	mov    edx,0x8b619cb8
  41196b:	and    edi,ebp
  41196d:	and    eax,0xe60402fe
  411972:	mov    al,ds:0x15e3b033
  411977:	jl     0x4119da
  411979:	pusha  
  41197a:	jecxz  0x4119ad
  41197c:	and    DWORD PTR [ecx+0x6],esp
  41197f:	xlat   BYTE PTR ds:[ebx]
  411980:	or     BYTE PTR [ecx-0x60],ah
  411983:	sub    DWORD PTR [ebp-0x1c],eax
  411986:	adc    dl,bh
  411988:	cmp    dl,cl
  41198a:	enter  0xc5d2,0xcd
  41198e:	fcmovnu st,st(6)
  411990:	xchg   esi,eax
  411991:	test   al,0x78
  411993:	mov    ds:0x9e2b5436,al
  411998:	add    ch,BYTE PTR [eax]
  41199a:	mov    cr1,eax
  41199d:	and    dl,BYTE PTR [edi]
  41199f:	and    DWORD PTR [esp+ecx*8+0x1679828a],eax
  4119a6:	mov    ah,0xd6
  4119a8:	les    eax,FWORD PTR [ebp+0x17]
  4119ab:	pop    ebx
  4119ac:	pop    ebx
  4119ad:	je     0x411945
  4119af:	clc    
  4119b0:	jo     0x411975
  4119b2:	dec    ecx
  4119b3:	sti    
  4119b4:	inc    ebx
  4119b5:	sub    BYTE PTR [ebp-0x20],cl
  4119b8:	fist   DWORD PTR [ebx-0x31]
  4119bb:	fcom   st(4)
  4119bd:	repnz and ah,BYTE PTR [eax]
  4119c0:	push   es
  4119c1:	dec    ecx
  4119c2:	(bad)  
  4119c3:	sbb    al,0x8
  4119c5:	pop    es
  4119c6:	cmp    DWORD PTR [eax+eax*1],ecx
  4119c9:	dec    esp
  4119ca:	ret    0x611f
  4119cd:	mov    esi,0xea02f927
  4119d2:	jp     0x4119be
  4119d4:	push   cs
  4119d5:	aam    0x1c
  4119d7:	xchg   esi,eax
  4119d8:	icebp  
  4119d9:	pop    esi
  4119da:	pop    ecx
  4119db:	and    bh,BYTE PTR [esi+0x421bc7d0]
  4119e1:	xor    BYTE PTR [ebx-0x401eb336],0x9
  4119e8:	mov    al,ds:0x92ba2681
  4119ed:	lahf   
  4119ee:	inc    ebp
  4119ef:	es call 0x39f5e921
  4119f5:	fcomp  st(5)
  4119f7:	icebp  
  4119f8:	mov    DWORD PTR [ebp-0x59],ebp
  4119fb:	popf   
  4119fc:	fidiv  DWORD PTR gs:[eax-0x57]
  411a00:	fnsave [ebx]
  411a02:	outs   dx,DWORD PTR ds:[esi]
  411a03:	call   0x6012a987
  411a08:	repz sbb ebp,edi
  411a0b:	and    al,0xda
  411a0d:	cmc    
  411a0e:	inc    edx
  411a0f:	in     al,0xbc
  411a11:	add    al,0x28
  411a13:	std    
  411a14:	xor    esp,eax
  411a16:	out    0xe7,al
  411a18:	(bad)  
  411a19:	sar    cl,1
  411a1b:	push   ss
  411a1c:	std    
  411a1d:	stos   DWORD PTR es:[edi],eax
  411a1e:	je     0x411a6f
  411a20:	pop    edi
  411a21:	call   0x58e110b2
  411a26:	int    0xac
  411a28:	scas   al,BYTE PTR es:[edi]
  411a29:	icebp  
  411a2a:	popa   
  411a2b:	aaa    
  411a2c:	fwait
  411a2d:	pop    eax
  411a2e:	scas   al,BYTE PTR es:[edi]
  411a2f:	xchg   DWORD PTR [ebp+0x33ee5f50],eax
  411a35:	or     al,0x1f
  411a37:	test   BYTE PTR [ecx+0x53f59da3],bl
  411a3d:	adc    al,BYTE PTR [edi-0x59]
  411a40:	jp     0x411a90
  411a42:	cmc    
  411a43:	in     al,dx
  411a44:	mov    bh,0xeb
  411a46:	repnz sbb BYTE PTR [edi-0x11],bl
  411a4a:	bound  esi,QWORD PTR [ebx-0x70]
  411a4d:	cdq    
  411a4e:	sbb    al,0x7a
  411a50:	and    ebp,DWORD PTR [eax-0x34]
  411a53:	sbb    eax,0x5f03165d
  411a58:	fdiv   QWORD PTR [ebp+0x790884ed]
  411a5e:	fs push ebx
  411a60:	inc    ebp
  411a61:	mov    esp,0xd8ff3d17
  411a66:	in     eax,dx
  411a67:	lods   al,BYTE PTR ds:[esi]
  411a68:	adc    DWORD PTR [esi],eax
  411a6a:	(bad)  
  411a6b:	mov    eax,0x84c79342
  411a70:	sahf   
  411a71:	mov    ds:0x5c35f744,al
  411a76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a77:	mov    bh,BYTE PTR [edx+0x4]
  411a7a:	adc    eax,0x3a04a131
  411a7f:	jmp    0x5492:0x5e023f8
  411a86:	pop    ds
  411a87:	sbb    ebx,DWORD PTR [edx+0x7b3c38ca]
  411a8d:	dec    ebp
  411a8e:	cmc    
  411a8f:	push   eax
  411a90:	stos   DWORD PTR es:[edi],eax
  411a91:	test   eax,0x5947be65
  411a96:	popf   
  411a97:	int    0x16
  411a99:	sub    BYTE PTR [eax-0x6fdb4921],bh
  411a9f:	or     al,BYTE PTR [edx-0x3f]
  411aa2:	int    0x88
  411aa4:	mov    bl,0x7a
  411aa6:	xchg   edi,eax
  411aa7:	mov    ds:0xa72b0d03,al
  411aac:	xchg   ebp,eax
  411aad:	cld    
  411aae:	pop    ss
  411aaf:	cmp    BYTE PTR [edx-0x4c5d171f],dh
  411ab5:	cdq    
  411ab6:	mov    al,0x6f
  411ab8:	inc    esp
  411ab9:	fdiv   QWORD PTR [ebx]
  411abb:	into   
  411abc:	lea    eax,[ecx+eax*1+0x3272f3]
  411ac3:	mov    ecx,DWORD PTR [ebp+0x8]
  411ac6:	mov    edx,DWORD PTR [ebp-0x20]
  411ac9:	mov    DWORD PTR [edx+ecx*4],eax
  411acc:	mov    eax,DWORD PTR [ebp-0xc]
  411acf:	mov    ecx,DWORD PTR [ebp+0x8]
  411ad2:	xor    eax,esi
  411ad4:	lea    eax,[eax+ecx*1+0x3272f3]
  411adb:	mov    DWORD PTR [ebp+0x8],eax
  411ade:	mov    eax,DWORD PTR [ebp-0xc]
  411ae1:	mov    ecx,DWORD PTR [ebp+0x14]
  411ae4:	xor    eax,esi
  411ae6:	add    eax,edi
  411ae8:	imul   eax,DWORD PTR [ecx]
  411aeb:	mov    ecx,DWORD PTR [ebp-0x4]
  411aee:	mov    edx,DWORD PTR [ebp+0x8]
  411af1:	xor    ecx,esi
  411af3:	lea    ecx,[ecx+edx*1+0x3272f3]
  411afa:	cmp    ecx,eax
  411afc:	jne    0x40f6ee
  411b02:	mov    eax,DWORD PTR [ebp-0x4]
  411b05:	xor    eax,esi
  411b07:	add    eax,edi
  411b09:	mov    DWORD PTR [ebp-0x10],eax
  411b0c:	mov    ebx,0x65655
  411b11:	add    ebx,0x3234
  411b17:	xchg   ebx,esi
  411b19:	xor    ebx,ebx
  411b1b:	push   esi
  411b1c:	mov    esi,ebx
  411b1e:	pop    ebx
  411b1f:	mov    edx,esi
  411b21:	add    ebx,0x1002
  411b27:	lea    eax,[ebp-0x18]
  411b2a:	add    edx,eax
  411b2c:	add    edx,0x5
  411b2f:	push   edx
  411b30:	inc    esi
  411b31:	pop    ecx
  411b32:	dec    ecx
  411b33:	xchg   ecx,eax
  411b34:	dec    eax
  411b35:	xchg   ecx,eax
  411b36:	dec    ecx
  411b37:	xchg   ecx,edx
  411b39:	dec    edx
  411b3a:	push   edx
  411b3b:	mov    edx,ebx
  411b3d:	pop    ebx
  411b3e:	dec    ebx
  411b3f:	call   DWORD PTR [ebx]
  411b41:	cmp    DWORD PTR [ebp+0x10],esi
  411b44:	je     0x411b65
  411b4a:	xchg   edx,eax
  411b4b:	push   0xc
  411b4d:	pop    ecx
  411b4e:	dec    ecx
  411b4f:	push   0x3
  411b51:	pop    ebx
  411b52:	inc    ebx
  411b53:	xchg   ebx,ecx
  411b55:	inc    ecx
  411b56:	sub    ebx,ecx
  411b58:	xchg   ebx,ecx
  411b5a:	dec    ecx
  411b5b:	dec    ecx
  411b5c:	mov    eax,DWORD PTR [ebp-0x1c]
  411b5f:	imul   eax,ecx
  411b62:	add    esp,eax
  411b64:	xchg   edx,eax
  411b65:	push   eax
  411b66:	xor    ebx,ebx
  411b68:	mov    edx,esp
  411b6a:	dec    edx
  411b6b:	inc    ebx
  411b6c:	add    ebx,DWORD PTR [edx+ebx*1]
  411b6f:	dec    ebx
  411b70:	xor    edx,edx
  411b72:	add    DWORD PTR [ebp-0x10],ebx
  411b75:	pop    ebx
  411b76:	mov    eax,DWORD PTR [ebp-0x10]
  411b79:	pop    edi
  411b7a:	pop    esi
  411b7b:	pop    ebx
  411b7c:	leave  
  411b7d:	ret    0x10
  411b80:	push   ebp
  411b81:	mov    ebp,esp
  411b83:	push   ecx
  411b84:	and    DWORD PTR ds:0x4291db,ecx
  411b8a:	mov    DWORD PTR [ebp-0x4],0xf89c85bd
  411b91:	and    DWORD PTR ds:0x4291cb,0x0
  411b9b:	mov    ecx,DWORD PTR ds:0x4291cb
  411ba1:	inc    ecx
  411ba2:	mov    DWORD PTR ds:0x4291cb,ecx
  411ba8:	cmp    DWORD PTR ds:0x4291cb,0x20
  411baf:	jbe    0x411bd2
  411bb5:	jmp    0x411bc5
  411bba:	push   0x4291cf
  411bbf:	call   DWORD PTR ds:0x42a643
  411bc5:	cmp    DWORD PTR ds:0x4291cb,0x1c
  411bcc:	jb     0x411b9b
  411bd2:	mov    eax,DWORD PTR [ebp-0x4]
  411bd5:	xor    DWORD PTR ds:0x4291d7,0x42915f
  411bdf:	mov    edx,DWORD PTR [ebp+0x10]
  411be2:	mov    ecx,0x75108ac
  411be7:	sbb    DWORD PTR ds:0x42919f,0x2976
  411bf1:	xor    eax,ecx
  411bf3:	xor    DWORD PTR ds:0x429167,0x4291ab
  411bfd:	add    eax,0x3272f3
  411c02:	mov    DWORD PTR [edx],eax
  411c04:	and    eax,DWORD PTR ds:0x4291e7
  411c0a:	mov    eax,DWORD PTR [ebp+0xc]
  411c0d:	and    DWORD PTR ds:0x4291d3,edi
  411c13:	xor    eax,ecx
  411c15:	xor    DWORD PTR ds:0x429187,0x6377
  411c1f:	push   esi
  411c20:	xor    edx,DWORD PTR ds:0x42915b
  411c26:	mov    esi,DWORD PTR [ebp+0x10]
  411c29:	mov    edx,0x3272f3
  411c2e:	add    eax,edx
  411c30:	mov    DWORD PTR [esi+0x4],eax
  411c33:	mov    eax,DWORD PTR [ebp+0x14]
  411c36:	mov    esi,DWORD PTR [ebp+0x10]
  411c39:	mov    DWORD PTR [esi+0x8],eax
  411c3c:	mov    eax,DWORD PTR [ebp+0x18]
  411c3f:	mov    esi,DWORD PTR [ebp+0x10]
  411c42:	mov    DWORD PTR [esi+0xc],eax
  411c45:	mov    eax,DWORD PTR [ebp+0x1c]
  411c48:	mov    esi,DWORD PTR [ebp+0x10]
  411c4b:	mov    DWORD PTR [esi+0x10],eax
  411c4e:	mov    eax,DWORD PTR [ebp+0x8]
  411c51:	xor    eax,ecx
  411c53:	add    eax,edx
  411c55:	pop    esi
  411c56:	leave  
  411c57:	ret    0x18
  411c5a:	push   ebp
  411c5b:	mov    ebp,esp
  411c5d:	sub    esp,0x9c
  411c63:	movzx  ecx,BYTE PTR ds:0x429187
  411c6a:	or     DWORD PTR ds:0x4291f3,ecx
  411c70:	mov    ecx,DWORD PTR [ebp+0x8]
  411c73:	mov    eax,0x8a99
  411c78:	sub    DWORD PTR ds:0x4291a7,0x19e0
  411c82:	xor    ax,WORD PTR [ecx+0x20]
  411c86:	mov    ecx,0x3b5b
  411c8b:	add    ax,cx
  411c8e:	and    DWORD PTR ds:0x4291f7,0x0
  411c98:	mov    ecx,DWORD PTR ds:0x4291f7
  411c9e:	inc    ecx
  411c9f:	mov    DWORD PTR ds:0x4291f7,ecx
  411ca5:	cmp    DWORD PTR ds:0x4291f7,0x11
  411cac:	jl     0x411cec
  411cb2:	jmp    0x411cc5
  411cb7:	push   DWORD PTR [ebp-0x28]
  411cba:	push   0x42806d
  411cbf:	call   DWORD PTR ds:0x42a647
  411cc5:	cmp    DWORD PTR ds:0x4291f7,0x10
  411ccc:	jne    0x411cdf
  411cd2:	mov    ecx,DWORD PTR ds:0x4291f7
  411cd8:	inc    ecx
  411cd9:	mov    DWORD PTR ds:0x4291f7,ecx
  411cdf:	cmp    DWORD PTR ds:0x4291f7,0x1c
  411ce6:	jb     0x411c98
  411cec:	movzx  eax,ax
  411cef:	mov    DWORD PTR [ebp-0x10],eax
  411cf2:	mov    BYTE PTR [ebp-0x1],0x82
  411cf6:	and    DWORD PTR ds:0x4291df,0x0
  411d00:	jmp    0x411d14
  411d05:	xor    ecx,ecx
  411d07:	add    ecx,DWORD PTR ds:0x4291df
  411d0d:	inc    ecx
  411d0e:	mov    DWORD PTR ds:0x4291df,ecx
  411d14:	cmp    DWORD PTR ds:0x4291df,0x1b
  411d1b:	jae    0x411d48
  411d21:	cmp    DWORD PTR ds:0x4291df,0x22
  411d28:	jge    0x411d48
  411d2e:	jmp    0x411d43
  411d33:	push   0x4280f2
  411d38:	push   0x0
  411d3a:	push   DWORD PTR [ebp-0x1c]
  411d3d:	call   DWORD PTR ds:0x42a64f
  411d43:	jmp    0x411d05
  411d48:	lea    eax,[ebp-0x1]
  411d4b:	inc    DWORD PTR ds:0x42919b
  411d51:	mov    DWORD PTR [ebp-0xc],eax
  411d54:	mov    al,BYTE PTR [ebp-0x1]
  411d57:	and    DWORD PTR ds:0x4291af,0x0
  411d61:	mov    ecx,DWORD PTR ds:0x4291af
  411d67:	inc    ecx
  411d68:	mov    DWORD PTR ds:0x4291af,ecx
  411d6e:	cmp    DWORD PTR ds:0x4291af,0x19
  411d75:	jbe    0x411d96
  411d7b:	jmp    0x411d89
  411d80:	push   DWORD PTR [ebp-0x20]
  411d83:	call   DWORD PTR ds:0x42a653
  411d89:	cmp    DWORD PTR ds:0x4291af,0x10
  411d90:	jb     0x411d61
  411d96:	mov    ecx,DWORD PTR [ebp-0xc]
  411d99:	xor    al,0x7d
  411d9b:	mov    DWORD PTR ds:0x4291bb,0x2666
  411da5:	add    al,0x2
  411da7:	and    DWORD PTR ds:0x4291c3,0x42917f
  411db1:	mov    BYTE PTR [ecx],al
  411db3:	sbb    DWORD PTR ds:0x4291eb,0x5717
  411dbd:	mov    DWORD PTR [ebp-0x18],0xf89c85a1
  411dc4:	push   ebx
  411dc5:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  411dcc:	mov    DWORD PTR ds:0x4291eb,0x16
  411dd6:	cmp    DWORD PTR ds:0x4291eb,0x0
  411ddd:	je     0x411e17
  411de3:	cmp    DWORD PTR ds:0x4291eb,0x1e
  411dea:	jl     0x411e17
  411df0:	jmp    0x411e07
  411df5:	push   0x428010
  411dfa:	push   0x0
  411dfc:	push   0x6e74
  411e01:	call   DWORD PTR ds:0x42a657
  411e07:	mov    eax,ds:0x4291eb
  411e0c:	dec    eax
  411e0d:	mov    ds:0x4291eb,eax
  411e12:	jmp    0x411dd6
  411e17:	mov    ecx,DWORD PTR [ebp-0x18]
  411e1a:	or     DWORD PTR ds:0x429153,ebx
  411e20:	push   esi
  411e21:	mov    eax,0x75108ac
  411e26:	xor    esi,esi
  411e28:	xor    esi,DWORD PTR ds:0x4291b7
  411e2e:	or     DWORD PTR ds:0x42915b,esi
  411e34:	xor    ecx,eax
  411e36:	mov    esi,DWORD PTR ds:0x4291a3
  411e3c:	sbb    esi,DWORD PTR ds:0x42914f
  411e42:	mov    DWORD PTR ds:0x4291a3,esi
  411e48:	mov    esi,0x3272f3
  411e4d:	push   edi
  411e4e:	add    ecx,esi
  411e50:	jmp    0x411e66
  411e55:	inc    DWORD PTR ds:0x429163
  411e5b:	mov    dl,BYTE PTR [ebp-0x1]
  411e5e:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  411e65:	inc    ecx
  411e66:	mov    DWORD PTR ds:0x42917b,0x7bd4
  411e70:	cmp    ecx,0x40
  411e73:	jb     0x411e55
  411e79:	not    edx
  411e7b:	mov    edx,DWORD PTR [ebp-0x18]
  411e7e:	xor    edx,eax
  411e80:	mov    DWORD PTR ds:0x4291f7,0x3db0
  411e8a:	add    edx,esi
  411e8c:	jmp    0x411f80
  411e91:	movzx  edi,WORD PTR ds:0x42918b
  411e98:	or     DWORD PTR ds:0x429157,edi
  411e9e:	mov    edi,DWORD PTR [ebp+0x8]
  411ea1:	adc    DWORD PTR ds:0x42917b,edx
  411ea7:	mov    ecx,0x8a99
  411eac:	adc    DWORD PTR ds:0x4291f3,0x3816
  411eb6:	xor    cx,WORD PTR [edi+edx*4+0x2]
  411ebb:	and    DWORD PTR ds:0x4291a3,0x0
  411ec5:	jmp    0x411ed7
  411eca:	mov    edi,DWORD PTR ds:0x4291a3
  411ed0:	inc    edi
  411ed1:	mov    DWORD PTR ds:0x4291a3,edi
  411ed7:	cmp    DWORD PTR ds:0x4291a3,0x1f
  411ede:	jae    0x411f1d
  411ee4:	cmp    DWORD PTR ds:0x4291a3,0xa
  411eeb:	jl     0x411f1d
  411ef1:	jmp    0x411efc
  411ef6:	call   DWORD PTR ds:0x42a65b
  411efc:	cmp    DWORD PTR ds:0x4291a3,0x9
  411f03:	jne    0x411f18
  411f09:	xor    edi,edi
  411f0b:	xor    edi,DWORD PTR ds:0x4291a3
  411f11:	inc    edi
  411f12:	mov    DWORD PTR ds:0x4291a3,edi
  411f18:	jmp    0x411eca
  411f1d:	mov    edi,0x3b5b
  411f22:	add    cx,di
  411f25:	add    DWORD PTR ds:0x4291ef,0x4291b7
  411f2f:	movzx  ecx,cx
  411f32:	sbb    DWORD PTR ds:0x42914b,0x16d8
  411f3c:	mov    DWORD PTR [ebp-0xc],ecx
  411f3f:	movzx  ecx,WORD PTR ds:0x42918f
  411f46:	and    DWORD PTR ds:0x429197,ecx
  411f4c:	mov    ecx,DWORD PTR [ebp+0x8]
  411f4f:	sbb    DWORD PTR ds:0x42915b,0x631a
  411f59:	movzx  ecx,WORD PTR [ecx+edx*4]
  411f5d:	xor    ecx,0x8a99
  411f63:	add    ecx,edi
  411f65:	mov    edi,DWORD PTR [ebp-0xc]
  411f68:	mov    DWORD PTR ds:0x4291f7,0x4ad9
  411f72:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  411f79:	mov    DWORD PTR ds:0x4291e7,ecx
  411f7f:	inc    edx
  411f80:	not    ecx
  411f82:	mov    ecx,DWORD PTR [ebp-0x10]
  411f85:	mov    DWORD PTR ds:0x42914f,0x2d30
  411f8f:	cmp    edx,ecx
  411f91:	jne    0x411e91
  411f97:	and    edx,edx
  411f99:	mov    ecx,DWORD PTR [ebp-0x18]
  411f9c:	sub    edi,DWORD PTR ds:0x42914f
  411fa2:	mov    edx,DWORD PTR [ebp+0x10]
  411fa5:	xor    DWORD PTR ds:0x4291bf,0xf9d
  411faf:	xor    ecx,eax
  411fb1:	and    DWORD PTR ds:0x4291b7,ebx
  411fb7:	add    ecx,esi
  411fb9:	mov    DWORD PTR [edx],ecx
  411fbb:	mov    ecx,DWORD PTR [ebp-0x18]
  411fbe:	sbb    DWORD PTR ds:0x42919f,0x1e81
  411fc8:	xor    ecx,eax
  411fca:	add    ecx,esi
  411fcc:	adc    DWORD PTR ds:0x4291e3,edi
  411fd2:	mov    DWORD PTR [ebp-0xc],ecx
  411fd5:	add    DWORD PTR ds:0x42914f,0x6cdc
  411fdf:	mov    DWORD PTR [ebp+0x8],0xf89c85a1
  411fe6:	mov    DWORD PTR ds:0x4291bf,0x1d36
  411ff0:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  411ff7:	mov    DWORD PTR [ebp-0x10],0xf89c95a1
  411ffe:	mov    ecx,DWORD PTR [ebp-0x14]
  412001:	mov    DWORD PTR ds:0x4291e3,0x1b
  41200b:	cmp    DWORD PTR ds:0x4291e3,0x0
  412012:	je     0x41204c
  412018:	cmp    DWORD PTR ds:0x4291e3,0x1c
  41201f:	jb     0x41204c
  412025:	jmp    0x41203a
  41202a:	push   0x42915f
  41202f:	push   0x428022
  412034:	call   DWORD PTR ds:0x42a65f
  41203a:	mov    edi,DWORD PTR ds:0x4291e3
  412040:	dec    edi
  412041:	mov    DWORD PTR ds:0x4291e3,edi
  412047:	jmp    0x41200b
  41204c:	mov    DWORD PTR [ebp+0x8],ecx
  41204f:	mov    ecx,DWORD PTR [ebp+0x8]
  412052:	xor    ecx,eax
  412054:	add    ecx,esi
  412056:	movzx  ecx,WORD PTR ds:0x4291b3
  41205d:	mov    ecx,0x242ebcd
  412062:	mov    edi,0xf641bcc
  412067:	je     0x414acc
  41206d:	mov    edx,DWORD PTR [ebp+0x8]
  412070:	sub    DWORD PTR ds:0x42917b,0x1976
  41207a:	mov    ebx,DWORD PTR [ebp-0x8]
  41207d:	xor    edx,eax
  41207f:	xor    ebx,eax
  412081:	not    DWORD PTR ds:0x4291d3
  412087:	sub    edx,ebx
  412089:	not    DWORD PTR ds:0x42918f
  41208f:	sub    edx,esi
  412091:	xor    edx,eax
  412093:	and    DWORD PTR ds:0x4291cb,0x0
  41209d:	jmp    0x4120af
  4120a2:	mov    ebx,DWORD PTR ds:0x4291cb
  4120a8:	inc    ebx
  4120a9:	mov    DWORD PTR ds:0x4291cb,ebx
  4120af:	cmp    DWORD PTR ds:0x4291cb,0x18
  4120b6:	jae    0x4120f8
  4120bc:	cmp    DWORD PTR ds:0x4291cb,0xa
  4120c3:	ja     0x4120f8
  4120c9:	jmp    0x4120d9
  4120ce:	push   0x4a1a
  4120d3:	call   DWORD PTR ds:0x42a663
  4120d9:	cmp    DWORD PTR ds:0x4291cb,0x9
  4120e0:	jne    0x4120f3
  4120e6:	mov    ebx,DWORD PTR ds:0x4291cb
  4120ec:	inc    ebx
  4120ed:	mov    DWORD PTR ds:0x4291cb,ebx
  4120f3:	jmp    0x4120a2
  4120f8:	mov    DWORD PTR [ebp+0x8],edx
  4120fb:	sub    DWORD PTR ds:0x4291e3,0x2e82
  412105:	mov    edx,DWORD PTR [ebp+0x8]
  412108:	mov    ebx,DWORD PTR [ebp-0x58]
  41210b:	mov    DWORD PTR ds:0x42919b,0x1dc1
  412115:	add    edx,0x5708e2
  41211b:	and    DWORD PTR ds:0x4291e7,0x42919f
  412125:	imul   edx,ebx
  412128:	mov    DWORD PTR [ebp-0x58],edx
  41212b:	xor    edx,0x49c6
  412131:	mov    edx,DWORD PTR [ebp+0x8]
  412134:	mov    ebx,DWORD PTR ds:0x42914b
  41213a:	add    DWORD PTR ds:0x4291e3,ebx
  412140:	mov    ebx,DWORD PTR [ebp-0x54]
  412143:	add    edx,0x64f89c
  412149:	inc    DWORD PTR ds:0x42917f
  41214f:	or     edx,ebx
  412151:	mov    DWORD PTR [ebp-0x54],edx
  412154:	mov    edx,DWORD PTR [ebp+0x8]
  412157:	mov    ebx,DWORD PTR [ebp-0x50]
  41215a:	sbb    DWORD PTR ds:0x429183,0x4291b7
  412164:	add    edx,ecx
  412166:	xor    edx,ebx
  412168:	mov    DWORD PTR [ebp-0x50],edx
  41216b:	dec    ebx
  41216c:	mov    edx,DWORD PTR [ebp+0x8]
  41216f:	add    ebx,0x68ce
  412175:	mov    ebx,DWORD PTR [ebp-0x4c]
  412178:	add    edx,edi
  41217a:	and    edx,ebx
  41217c:	and    ebx,0x35bf
  412182:	mov    DWORD PTR [ebp-0x4c],edx
  412185:	xor    DWORD PTR ds:0x4291d3,ebx
  41218b:	mov    edx,DWORD PTR [ebp+0x8]
  41218e:	sub    DWORD PTR ds:0x4291cf,0x55b5
  412198:	mov    ebx,DWORD PTR [ebp-0x48]
  41219b:	lea    edx,[ebx+edx*1+0x241fcdf]
  4121a2:	mov    DWORD PTR [ebp-0x48],edx
  4121a5:	and    DWORD PTR ds:0x429173,0x0
  4121af:	mov    ebx,DWORD PTR ds:0x429173
  4121b5:	inc    ebx
  4121b6:	mov    DWORD PTR ds:0x429173,ebx
  4121bc:	cmp    DWORD PTR ds:0x429173,0x19
  4121c3:	jge    0x4121ee
  4121c9:	jmp    0x4121e1
  4121ce:	push   0x4291f7
  4121d3:	push   0x429187
  4121d8:	push   DWORD PTR [ebp-0x10]
  4121db:	call   DWORD PTR ds:0x42a66b
  4121e1:	cmp    DWORD PTR ds:0x429173,0x12
  4121e8:	jb     0x4121af
  4121ee:	mov    edx,DWORD PTR [ebp+0x8]
  4121f1:	or     DWORD PTR ds:0x4291df,ebx
  4121f7:	mov    ebx,0xfa5e1528
  4121fc:	sub    ebx,edx
  4121fe:	movzx  edx,WORD PTR ds:0x4291c7
  412205:	and    DWORD PTR ds:0x4291f7,edx
  41220b:	add    ebx,DWORD PTR [ebp-0x44]
  41220e:	mov    DWORD PTR [ebp-0x44],ebx
  412211:	and    DWORD PTR ds:0x4291db,0x4291bf
  41221b:	mov    edx,DWORD PTR [ebp+0x8]
  41221e:	xor    edx,eax
  412220:	adc    DWORD PTR ds:0x429153,0x429187
  41222a:	add    edx,esi
  41222c:	mov    DWORD PTR ds:0x42915b,0x2aa5
  412236:	jne    0x41206d
  41223c:	mov    DWORD PTR ds:0x4291af,0x939
  412246:	jmp    0x414acc
  41224b:	xor    DWORD PTR ds:0x4291cb,0x4110
  412255:	mov    edx,DWORD PTR [ebp-0xc]
  412258:	sub    DWORD PTR ds:0x42918b,0x429163
  412262:	sub    edx,esi
  412264:	xor    edx,eax
  412266:	mov    DWORD PTR ds:0x4291b7,0x1c
  412270:	cmp    DWORD PTR ds:0x4291b7,0x0
  412277:	je     0x4122ae
  41227d:	cmp    DWORD PTR ds:0x4291b7,0x21
  412284:	jbe    0x4122ae
  41228a:	jmp    0x41229a
  41228f:	push   0x337f
  412294:	call   DWORD PTR ds:0x42a633
  41229a:	xor    ebx,ebx
  41229c:	or     ebx,DWORD PTR ds:0x4291b7
  4122a2:	dec    ebx
  4122a3:	mov    DWORD PTR ds:0x4291b7,ebx
  4122a9:	jmp    0x412270
  4122ae:	mov    DWORD PTR [ebp-0x5c],edx
  4122b1:	sub    DWORD PTR ds:0x429173,0x5ea2
  4122bb:	mov    edx,DWORD PTR [ebp-0x10]
  4122be:	mov    ebx,DWORD PTR [ebp-0x8]
  4122c1:	xor    edx,eax
  4122c3:	dec    DWORD PTR ds:0x4291b7
  4122c9:	xor    ebx,eax
  4122cb:	adc    DWORD PTR ds:0x429197,0x42917b
  4122d5:	sub    edx,ebx
  4122d7:	sub    edx,esi
  4122d9:	xor    edx,eax
  4122db:	mov    DWORD PTR [ebp-0x10],edx
  4122de:	mov    edx,DWORD PTR [ebp-0x14]
  4122e1:	mov    DWORD PTR [ebp+0x8],edx
  4122e4:	jmp    0x412527
  4122e9:	mov    edx,DWORD PTR [ebp+0x8]
  4122ec:	mov    DWORD PTR ds:0x429157,0x1c
  4122f6:	cmp    DWORD PTR ds:0x429157,0x0
  4122fd:	je     0x412341
  412303:	cmp    DWORD PTR ds:0x429157,0x21
  41230a:	jl     0x412341
  412310:	jmp    0x41232f
  412315:	push   0x4cc6
  41231a:	push   0x428152
  41231f:	push   0x428140
  412324:	push   0x400000
  412329:	call   DWORD PTR ds:0x42a63b
  41232f:	mov    ebx,DWORD PTR ds:0x429157
  412335:	dec    ebx
  412336:	mov    DWORD PTR ds:0x429157,ebx
  41233c:	jmp    0x4122f6
  412341:	mov    ebx,DWORD PTR [ebp-0x8]
  412344:	xor    edx,eax
  412346:	xor    ebx,eax
  412348:	sub    edx,ebx
  41234a:	sub    edx,esi
  41234c:	xor    edx,eax
  41234e:	mov    DWORD PTR [ebp+0x8],edx
  412351:	mov    edx,DWORD PTR [ebp+0x8]
  412354:	mov    ebx,DWORD PTR [ebp-0x58]
  412357:	add    edx,0x5708e2
  41235d:	add    DWORD PTR ds:0x42918f,0x4291b7
  412367:	imul   edx,ebx
  41236a:	mov    DWORD PTR [ebp-0x58],edx
  41236d:	and    DWORD PTR ds:0x4291df,0x0
  412377:	mov    edx,DWORD PTR ds:0x4291df
  41237d:	inc    edx
  41237e:	mov    DWORD PTR ds:0x4291df,edx
  412384:	cmp    DWORD PTR ds:0x4291df,0x9
  41238b:	jb     0x4123cb
  412391:	jmp    0x4123a4
  412396:	push   DWORD PTR [ebp-0x24]
  412399:	push   0x400000
  41239e:	call   DWORD PTR ds:0x42a63f
  4123a4:	cmp    DWORD PTR ds:0x4291df,0x8
  4123ab:	jne    0x4123be
  4123b1:	mov    edx,DWORD PTR ds:0x4291df
  4123b7:	inc    edx
  4123b8:	mov    DWORD PTR ds:0x4291df,edx
  4123be:	cmp    DWORD PTR ds:0x4291df,0x10
  4123c5:	jb     0x412377
  4123cb:	mov    edx,DWORD PTR [ebp+0x8]
  4123ce:	adc    ebx,DWORD PTR ds:0x429183
  4123d4:	mov    ebx,DWORD PTR [ebp-0x54]
  4123d7:	add    DWORD PTR ds:0x4291ef,0x468d
  4123e1:	add    edx,0x64f89c
  4123e7:	or     edx,ebx
  4123e9:	mov    DWORD PTR [ebp-0x54],edx
  4123ec:	and    DWORD PTR ds:0x429187,0x0
  4123f6:	jmp    0x412408
  4123fb:	mov    ebx,DWORD PTR ds:0x429187
  412401:	inc    ebx
  412402:	mov    DWORD PTR ds:0x429187,ebx
  412408:	cmp    DWORD PTR ds:0x429187,0x1d
  41240f:	jae    0x412437
  412415:	cmp    DWORD PTR ds:0x429187,0x1e
  41241c:	jg     0x412437
  412422:	jmp    0x412432
  412427:	push   0x4291cf
  41242c:	call   DWORD PTR ds:0x42a643
  412432:	jmp    0x4123fb
  412437:	mov    edx,DWORD PTR [ebp+0x8]
  41243a:	mov    ebx,DWORD PTR [ebp-0x50]
  41243d:	and    DWORD PTR ds:0x4291db,0x4291cf
  412447:	add    edx,ecx
  412449:	mov    DWORD PTR ds:0x42919b,0x55c4
  412453:	xor    edx,ebx
  412455:	mov    DWORD PTR [ebp-0x50],edx
  412458:	sub    DWORD PTR ds:0x42915f,0x3296
  412462:	mov    edx,DWORD PTR [ebp+0x8]
  412465:	mov    ebx,DWORD PTR [ebp-0x4c]
  412468:	xor    DWORD PTR ds:0x4291a7,0x42916b
  412472:	add    edx,edi
  412474:	xor    DWORD PTR ds:0x4291e7,0x4291af
  41247e:	and    edx,ebx
  412480:	or     DWORD PTR ds:0x42915f,edx
  412486:	mov    DWORD PTR [ebp-0x4c],edx
  412489:	mov    ebx,DWORD PTR ds:0x42918b
  41248f:	sbb    DWORD PTR ds:0x429157,ebx
  412495:	mov    edx,DWORD PTR [ebp+0x8]
  412498:	xor    DWORD PTR ds:0x429157,0x429153
  4124a2:	mov    ebx,DWORD PTR [ebp-0x48]
  4124a5:	lea    edx,[ebx+edx*1+0x241fcdf]
  4124ac:	mov    DWORD PTR [ebp-0x48],edx
  4124af:	and    DWORD PTR ds:0x429173,0x0
  4124b9:	jmp    0x4124cb
  4124be:	mov    edx,DWORD PTR ds:0x429173
  4124c4:	inc    edx
  4124c5:	mov    DWORD PTR ds:0x429173,edx
  4124cb:	cmp    DWORD PTR ds:0x429173,0x15
  4124d2:	jae    0x412517
  4124d8:	cmp    DWORD PTR ds:0x429173,0x5
  4124df:	jle    0x412517
  4124e5:	jmp    0x4124f8
  4124ea:	push   DWORD PTR [ebp-0x18]
  4124ed:	push   0x42808a
  4124f2:	call   DWORD PTR ds:0x42a647
  4124f8:	cmp    DWORD PTR ds:0x429173,0x4
  4124ff:	jne    0x412512
  412505:	mov    edx,DWORD PTR ds:0x429173
  41250b:	inc    edx
  41250c:	mov    DWORD PTR ds:0x429173,edx
  412512:	jmp    0x4124be
  412517:	mov    edx,DWORD PTR [ebp+0x8]
  41251a:	mov    ebx,0xfa5e1528
  41251f:	sub    ebx,edx
  412521:	add    ebx,DWORD PTR [ebp-0x44]
  412524:	mov    DWORD PTR [ebp-0x44],ebx
  412527:	mov    edx,DWORD PTR [ebp+0x8]
  41252a:	xor    edx,eax
  41252c:	add    edx,esi
  41252e:	jne    0x4122e9
  412534:	mov    edx,DWORD PTR [ebp-0xc]
  412537:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41253e:	mov    bl,BYTE PTR [ebp-0x1]
  412541:	cmp    dl,bl
  412543:	je     0x412621
  412549:	mov    ecx,DWORD PTR [ebp-0x5c]
  41254c:	mov    edx,DWORD PTR [ebp-0xc]
  41254f:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  412556:	mov    ebx,DWORD PTR [ebp+0xc]
  412559:	xor    ecx,eax
  41255b:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f3]
  412562:	jne    0x414ade
  412568:	mov    ecx,DWORD PTR [ebp-0x5c]
  41256b:	mov    edx,DWORD PTR [ebp+0xc]
  41256e:	xor    ecx,eax
  412570:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f3]
  412578:	mov    edx,DWORD PTR [ebp-0x18]
  41257b:	xor    edx,eax
  41257d:	add    edx,esi
  41257f:	cmp    ecx,edx
  412581:	mov    ecx,DWORD PTR [ebp-0x14]
  412584:	mov    DWORD PTR [ebp+0x8],ecx
  412587:	mov    ecx,DWORD PTR [ebp+0x8]
  41258a:	je     0x41b681
  412590:	xor    ecx,eax
  412592:	add    ecx,esi
  412594:	mov    ecx,0x242ebcd
  412599:	je     0x414a32
  41259f:	mov    edx,DWORD PTR [ebp+0x8]
  4125a2:	mov    ebx,DWORD PTR [ebp-0x8]
  4125a5:	xor    edx,eax
  4125a7:	xor    ebx,eax
  4125a9:	sub    edx,ebx
  4125ab:	sub    edx,esi
  4125ad:	xor    edx,eax
  4125af:	mov    DWORD PTR [ebp+0x8],edx
  4125b2:	mov    edx,DWORD PTR [ebp+0x8]
  4125b5:	mov    ebx,DWORD PTR [ebp-0x58]
  4125b8:	add    edx,0x5708e2
  4125be:	imul   edx,ebx
  4125c1:	mov    DWORD PTR [ebp-0x58],edx
  4125c4:	mov    edx,DWORD PTR [ebp+0x8]
  4125c7:	mov    ebx,DWORD PTR [ebp-0x54]
  4125ca:	add    edx,0x64f89c
  4125d0:	or     edx,ebx
  4125d2:	mov    DWORD PTR [ebp-0x54],edx
  4125d5:	mov    edx,DWORD PTR [ebp+0x8]
  4125d8:	mov    ebx,DWORD PTR [ebp-0x50]
  4125db:	add    edx,ecx
  4125dd:	xor    edx,ebx
  4125df:	mov    DWORD PTR [ebp-0x50],edx
  4125e2:	mov    edx,DWORD PTR [ebp+0x8]
  4125e5:	mov    ebx,DWORD PTR [ebp-0x4c]
  4125e8:	add    edx,edi
  4125ea:	and    edx,ebx
  4125ec:	mov    DWORD PTR [ebp-0x4c],edx
  4125ef:	mov    edx,DWORD PTR [ebp+0x8]
  4125f2:	mov    ebx,DWORD PTR [ebp-0x48]
  4125f5:	lea    edx,[ebx+edx*1+0x241fcdf]
  4125fc:	mov    DWORD PTR [ebp-0x48],edx
  4125ff:	mov    edx,DWORD PTR [ebp+0x8]
  412602:	mov    ebx,0xfa5e1528
  412607:	sub    ebx,edx
  412609:	add    ebx,DWORD PTR [ebp-0x44]
  41260c:	mov    DWORD PTR [ebp-0x44],ebx
  41260f:	mov    edx,DWORD PTR [ebp+0x8]
  412612:	xor    edx,eax
  412614:	add    edx,esi
  412616:	jne    0x41259f
  41261c:	jmp    0x414a32
  412621:	mov    edx,DWORD PTR [ebp-0x14]
  412624:	jmp    0x4149ad
  412629:	rcr    ah,1
  41262b:	sbb    eax,DWORD PTR [edx+0x17]
  41262e:	mov    ah,0xd0
  412630:	nop
  412631:	cs aam 0x99
  412634:	or     BYTE PTR [eax],cl
  412636:	pushf  
  412637:	dec    ebp
  412638:	xchg   edi,eax
  412639:	imul   ecx,DWORD PTR [edx+0x5c178383],0xffffff83
  412640:	and    DWORD PTR [eax-0x59950724],0xffffffe6
  412647:	inc    ecx
  412648:	jg     0x41263f
  41264a:	shl    ebp,1
  41264c:	aam    0xf7
  41264e:	fstp   DWORD PTR [ebp-0x2]
  412651:	mov    ds:0x53ef6828,eax
  412656:	xchg   esp,eax
  412657:	mov    cl,0x4c
  412659:	cli    
  41265a:	cmp    cl,BYTE PTR [eax]
  41265c:	outs   dx,DWORD PTR es:[esi]
  41265e:	mov    edi,0xfd1e6d37
  412663:	rol    DWORD PTR [ecx-0x19c4ecf4],cl
  412669:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41266a:	div    bh
  41266c:	jb     0x4126a0
  41266e:	inc    edx
  41266f:	jno    0x412668
  412671:	dec    ecx
  412672:	add    BYTE PTR [edi],al
  412674:	jp     0x412646
  412676:	push   edx
  412677:	div    DWORD PTR [ebp+0x7fa780eb]
  41267d:	fdivr  DWORD PTR [eax-0xe]
  412680:	les    eax,FWORD PTR [ecx+0x7a]
  412683:	dec    esi
  412684:	shr    ch,0x69
  412687:	xor    DWORD PTR [eax],ecx
  412689:	pop    esp
  41268a:	dec    eax
  41268b:	repz jo 0x4126b4
  41268e:	cli    
  41268f:	ja     0x412636
  412691:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412692:	sub    edi,DWORD PTR [esi]
  412694:	test   DWORD PTR [edi+0x50],ebx
  412697:	mov    esp,0x73d9264e
  41269c:	ins    DWORD PTR es:[edi],dx
  41269d:	jb     0x41268e
  41269f:	lods   eax,DWORD PTR ds:[esi]
  4126a0:	push   es
  4126a1:	push   es
  4126a2:	(bad)  
  4126a3:	mov    ds:0x79de729e,eax
  4126a8:	scas   eax,DWORD PTR es:[edi]
  4126a9:	in     eax,dx
  4126aa:	iret   
  4126ab:	gs cs out 0xb5,al
  4126af:	inc    esi
  4126b0:	xor    BYTE PTR [ecx+0x11a94a83],al
  4126b6:	push   ds
  4126b7:	pushf  
  4126b8:	adc    DWORD PTR [ebx+esi*1-0x4a936ba2],0xffffffc1
  4126c0:	inc    esi
  4126c1:	xchg   esp,eax
  4126c2:	call   0xb3931d00
  4126c7:	push   ebp
  4126c8:	loopne 0x412693
  4126ca:	jbe    0x4126b8
  4126cc:	mov    dl,0x39
  4126ce:	out    dx,al
  4126cf:	mov    ebp,0xe4e93b77
  4126d4:	mov    dh,0x6c
  4126d6:	pop    eax
  4126d7:	mov    BYTE PTR [ebx],al
  4126d9:	adc    DWORD PTR [ebp+0x22],esp
  4126dc:	js     0x4126f9
  4126de:	nop
  4126df:	mov    dh,0x39
  4126e1:	aam    0x9d
  4126e3:	dec    ecx
  4126e4:	inc    esp
  4126e5:	icebp  
  4126e6:	cmp    ecx,DWORD PTR [eax]
  4126e8:	mov    ebp,gs
  4126ea:	push   esp
  4126eb:	mov    cs,WORD PTR [ecx]
  4126ed:	js     0x41276b
  4126ef:	lock frstor [ecx]
  4126f2:	(bad)  
  4126f3:	xlat   BYTE PTR ds:[ebx]
  4126f4:	mov    ?,WORD PTR [ebx]
  4126f6:	test   esp,ebx
  4126f8:	mov    ebx,0x873248bf
  4126fd:	adc    ch,BYTE PTR [edi+0x50]
  412700:	xor    esp,eax
  412702:	cmc    
  412703:	push   esi
  412704:	adc    ah,BYTE PTR [edx+0x5c811ba3]
  41270a:	(bad)  
  41270b:	jbe    0x4126e0
  41270d:	mov    ebp,0xb2d332bb
  412712:	pop    esi
  412713:	pop    edx
  412714:	or     al,0x6f
  412716:	push   esi
  412717:	add    BYTE PTR [esi],cl
  412719:	ds in  eax,dx
  41271b:	or     dh,cl
  41271d:	dec    ecx
  41271e:	lea    ebp,[ecx-0x5d5b73f0]
  412724:	aam    0x8f
  412726:	fwait
  412727:	sub    edi,ebx
  412729:	pop    esi
  41272a:	dec    ebx
  41272b:	jecxz  0x412753
  41272d:	pop    es
  41272e:	dec    ebp
  41272f:	mov    BYTE PTR [ecx-0x42],ah
  412732:	rol    ch,0x1e
  412735:	push   edx
  412736:	jecxz  0x412768
  412738:	ins    BYTE PTR es:[edi],dx
  412739:	popa   
  41273a:	mov    ebx,0x123164df
  41273f:	push   cs
  412740:	adc    al,0xc2
  412742:	lds    ecx,FWORD PTR [edx-0x615e681a]
  412748:	test   DWORD PTR [esi-0x130932c3],edi
  41274e:	pusha  
  41274f:	hlt    
  412750:	jecxz  0x412737
  412752:	jmp    0x412758
  412754:	and    bl,ch
  412756:	sub    BYTE PTR [ebp-0x3c766521],0x8d
  41275d:	ret    0xe698
  412760:	shl    ecx,1
  412762:	jb     0x41277d
  412764:	push   ss
  412765:	outs   dx,BYTE PTR ds:[esi]
  412766:	or     DWORD PTR [eax+0x12613811],eax
  41276c:	mov    al,ds:0xc6dd1cff
  412771:	ret    
  412772:	dec    eax
  412773:	dec    ebx
  412774:	mov    esp,0xd54c20fc
  412779:	repz ss jno 0x4127e0
  41277d:	pop    edx
  41277e:	xchg   ecx,eax
  41277f:	mov    WORD PTR [esi-0x77328707],ss
  412785:	inc    eax
  412786:	repz rcr BYTE PTR ds:0xb6a76767,0xbe
  41278e:	mov    edx,0xddd6f6b1
  412793:	cmp    eax,0x6e861ea8
  412798:	sub    BYTE PTR [eax],cl
  41279a:	mov    dl,0x35
  41279c:	xchg   ebp,eax
  41279d:	mov    bl,0x5e
  41279f:	fcomp  st(6)
  4127a1:	stos   DWORD PTR es:[edi],eax
  4127a2:	call   0xce68:0x1bce3980
  4127a9:	push   cs
  4127aa:	(bad)  
  4127ab:	in     eax,0x6b
  4127ad:	push   es
  4127ae:	and    al,0x76
  4127b0:	popa   
  4127b1:	js     0x41277a
  4127b3:	fstp   DWORD PTR [esi-0x1e2b9307]
  4127b9:	ret    
  4127ba:	ins    BYTE PTR es:[edi],dx
  4127bb:	cli    
  4127bc:	ins    DWORD PTR es:[edi],dx
  4127bd:	pop    esp
  4127be:	cli    
  4127bf:	pop    eax
  4127c0:	fnstcw WORD PTR [ebp-0x77d07ca0]
  4127c6:	repz inc esi
  4127c8:	push   ss
  4127c9:	icebp  
  4127ca:	in     al,dx
  4127cb:	push   cs
  4127cc:	pushf  
  4127cd:	sub    eax,0xffffffc6
  4127d0:	sub    ah,BYTE PTR [esi-0x438f8c03]
  4127d6:	leave  
  4127d7:	mov    WORD PTR [eax+0x13],es
  4127da:	push   0xf67af0
  4127df:	rcl    esp,1
  4127e1:	fiadd  WORD PTR [edx+ebp*1]
  4127e4:	mov    BYTE PTR [edx+0x7f],0x40
  4127e8:	into   
  4127e9:	shr    DWORD PTR [eax+0xdffaa21],0x13
  4127f0:	in     eax,0xa
  4127f2:	cmp    al,BYTE PTR [ebx-0x47]
  4127f5:	sub    DWORD PTR [ebp+0x2d],edx
  4127f8:	(bad)  ds:0x9144fb7c
  4127fe:	xor    ecx,DWORD PTR [esi-0x27c5457]
  412804:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412805:	xchg   esi,eax
  412806:	add    ebx,ebx
  412808:	ret    
  412809:	mov    DWORD PTR [ebx-0x4b],edi
  41280c:	add    ah,BYTE PTR [ebx+edx*1+0x45307c69]
  412813:	and    edi,DWORD PTR [edx+0x49]
  412816:	shr    DWORD PTR [eax+0x70e0bdb5],cl
  41281c:	mov    ah,ch
  41281e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41281f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412820:	fstp   DWORD PTR [esi-0x25f15ef8]
  412826:	add    ch,BYTE PTR [ecx]
  412828:	mov    ebp,0x214e6b8
  41282d:	dec    ebp
  41282e:	jnp    0x41288e
  412830:	ret    
  412831:	data16 mov ch,0x52
  412834:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412835:	push   ecx
  412836:	push   ecx
  412837:	adc    BYTE PTR [ecx-0x1a],dl
  41283a:	fidivr DWORD PTR [eax+0x33]
  41283d:	jl     0x4128a9
  41283f:	xor    al,0x77
  412841:	pop    edx
  412842:	scas   al,BYTE PTR es:[edi]
  412843:	xor    al,0x24
  412845:	fnstsw WORD PTR [eax]
  412847:	cmp    DWORD PTR [ebx+eiz*8+0x7a3bb96e],ecx
  41284e:	jmp    0x9ee8c65e
  412853:	add    ch,bl
  412855:	fidivr DWORD PTR ds:[edx+0x5ecd9a9c]
  41285d:	mov    ch,0xce
  41285f:	pop    esi
  412860:	push   cs
  412861:	push   0xf8456754
  412866:	push   ds
  412867:	jp     0x41288d
  412869:	add    bl,BYTE PTR [edx+0x7a]
  41286c:	sar    BYTE PTR [esi-0x1dcbaabf],0x71
  412873:	es inc eax
  412875:	repz mov esi,eax
  412878:	pop    edi
  412879:	jo     0x41283b
  41287b:	daa    
  41287c:	cmp    BYTE PTR [ecx+edx*1-0x7bf1c67e],dh
  412883:	idiv   ah
  412885:	adc    DWORD PTR [esi-0x453ca15b],ebp
  41288b:	pushf  
  41288c:	cwde   
  41288d:	stos   BYTE PTR es:[edi],al
  41288e:	shl    DWORD PTR [edi-0x66168aaf],cl
  412894:	orps   xmm1,XMMWORD PTR [ebx-0x168051af]
  41289b:	sbb    esp,edi
  41289d:	jmp    0xfeab:0xf417227b
  4128a4:	in     eax,dx
  4128a5:	xor    edx,DWORD PTR [edx+0xbc23844]
  4128ab:	stc    
  4128ac:	sbb    eax,0x5985799e
  4128b1:	or     edi,ecx
  4128b3:	std    
  4128b4:	mov    al,0xe3
  4128b6:	ss cli 
  4128b8:	fstp   TBYTE PTR [esi-0x5f]
  4128bb:	and    ebp,edx
  4128bd:	push   ebx
  4128be:	or     esp,esp
  4128c0:	adc    al,0x42
  4128c2:	hlt    
  4128c3:	mov    ds:0x9dced177,eax
  4128c8:	lds    eax,FWORD PTR [edi-0x4788449b]
  4128ce:	jmp    0x7510c9d5
  4128d3:	inc    esi
  4128d4:	jmp    0x5c50e1d3
  4128d9:	jecxz  0x4128e0
  4128db:	test   edx,0xa8ce7aa6
  4128e1:	mov    edi,0xce79218b
  4128e6:	push   es
  4128e7:	ret    
  4128e8:	adc    eax,0x4ca29571
  4128ed:	mov    ds:0x6db06d7,al
  4128f2:	jb     0x4128a5
  4128f4:	retf   0xa016
  4128f7:	cmp    edx,ecx
  4128f9:	scas   eax,DWORD PTR es:[edi]
  4128fa:	js     0x412968
  4128fc:	xor    DWORD PTR [ecx+0x2e],edi
  4128ff:	int3   
  412900:	popf   
  412901:	mov    edi,DWORD PTR ds:0x478e7d7
  412907:	mov    al,ds:0xc377cc4
  41290c:	not    DWORD PTR [ecx+0x58]
  41290f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412910:	rol    BYTE PTR [edx],0xfe
  412913:	sbb    ebx,DWORD PTR ds:0x3a08f1be
  412919:	sbb    DWORD PTR es:[ecx+0x1d],0x1c72f1ba
  412921:	mov    esp,0xae5b71cb
  412926:	or     BYTE PTR [edi-0x6a7f121],al
  41292c:	mov    cl,BYTE PTR [esi+0x46be98f2]
  412932:	cmp    eax,0xe07236c5
  412937:	mov    al,0x15
  412939:	pop    edi
  41293a:	aaa    
  41293b:	push   esp
  41293c:	or     eax,0x2f740750
  412941:	jbe    0x4128c9
  412943:	or     al,0x90
  412945:	pop    ebx
  412946:	scas   eax,DWORD PTR es:[edi]
  412947:	outs   dx,DWORD PTR ds:[esi]
  412948:	jnp    0x4129a0
  41294a:	lock fisttp DWORD PTR [ebp+0x56b3fb97]
  412951:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412952:	push   edx
  412953:	scas   eax,DWORD PTR es:[edi]
  412954:	lahf   
  412955:	cmp    eax,0x738eff5a
  41295a:	lods   al,BYTE PTR ds:[esi]
  41295b:	clc    
  41295c:	xchg   ebp,eax
  41295d:	in     eax,dx
  41295e:	cmp    al,bh
  412960:	out    dx,al
  412961:	test   dl,al
  412963:	cmp    ebx,DWORD PTR [edx-0x2d]
  412966:	inc    esi
  412967:	xor    BYTE PTR [ebx-0x74a3ddbb],ch
  41296d:	dec    ebp
  41296e:	inc    ebx
  41296f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412970:	lock shr BYTE PTR [edx-0x17],1
  412974:	fiadd  WORD PTR [ecx-0xc]
  412977:	nop
  412978:	add    edx,edi
  41297a:	xchg   esp,eax
  41297b:	sub    al,0xe5
  41297d:	bound  eax,QWORD PTR [edx]
  41297f:	out    0xe2,al
  412981:	sahf   
  412982:	fcomp  QWORD PTR [ecx+0x15]
  412985:	push   0x4c
  412987:	xchg   ecx,eax
  412988:	dec    eax
  412989:	xchg   edx,eax
  41298a:	addr16 jns 0x41297e
  41298d:	in     eax,0xf2
  41298f:	nop
  412990:	ja     0x412924
  412992:	jns    0x412953
  412994:	je     0x412a0b
  412996:	push   ebx
  412997:	add    al,0xd6
  412999:	xchg   edx,eax
  41299a:	cmp    eax,0x61f0070
  41299f:	jno    0x412956
  4129a1:	jmp    0x4129d6
  4129a3:	adc    BYTE PTR [esp+eiz*8-0x4d6bc9b2],0x98
  4129ab:	fild   QWORD PTR [esi+eiz*2+0x13]
  4129af:	adc    DWORD PTR [edi-0x520b1640],edx
  4129b5:	(bad)  
  4129b6:	xchg   ebx,eax
  4129b7:	xor    eax,0x5b0fde99
  4129bc:	add    BYTE PTR [ecx-0x68],ch
  4129bf:	push   cs
  4129c0:	icebp  
  4129c1:	jge    0x412a05
  4129c3:	ja     0x4129bb
  4129c5:	mov    bl,0x17
  4129c7:	mov    al,ds:0x124c9617
  4129cc:	in     al,0xaa
  4129ce:	mov    ch,0x3a
  4129d0:	call   0x969a192b
  4129d5:	pop    esi
  4129d6:	cmc    
  4129d7:	or     al,0x5a
  4129d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129da:	mov    edx,0x538e0b9
  4129df:	and    al,0xc8
  4129e1:	sbb    eax,0x5370ba0c
  4129e6:	outs   dx,BYTE PTR ds:[esi]
  4129e7:	pushf  
  4129e8:	mov    al,ds:0x1d5ab330
  4129ed:	js     0x412a51
  4129ef:	xchg   edx,eax
  4129f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129f1:	push   esi
  4129f2:	imul   edi,DWORD PTR [ebx+0x2b],0x6d8a2c5b
  4129f9:	rol    DWORD PTR [ecx+0x6e219399],0x81
  412a00:	inc    ecx
  412a01:	stos   DWORD PTR es:[edi],eax
  412a02:	in     al,dx
  412a03:	nop
  412a04:	xor    ch,al
  412a06:	inc    edi
  412a07:	out    0x9,eax
  412a09:	lods   eax,DWORD PTR ds:[esi]
  412a0a:	mov    esp,0x828af7fc
  412a0f:	ds sbb al,0x7f
  412a12:	pop    es
  412a13:	xor    eax,0x498500bd
  412a18:	pop    ebp
  412a19:	setno  BYTE PTR [edx-0x1b]
  412a1d:	fisttp QWORD PTR [edi]
  412a1f:	sub    esi,DWORD PTR [edx]
  412a21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a22:	or     BYTE PTR [ecx-0x22],dl
  412a25:	ret    
  412a26:	jle    0x412a93
  412a28:	push   es
  412a29:	xchg   ebp,eax
  412a2a:	dec    esi
  412a2b:	repz adc BYTE PTR [bx],dh
  412a2f:	jle    0x4129f8
  412a31:	xchg   edx,eax
  412a32:	mov    ebx,DWORD PTR [ebx]
  412a34:	pop    ecx
  412a35:	cli    
  412a36:	sub    DWORD PTR [eax-0x1a334c18],edx
  412a3c:	in     eax,0x76
  412a3e:	mov    ebx,0xd9e464bb
  412a43:	arpl   WORD PTR [edi-0x4d1e4255],ax
  412a49:	add    eax,0xfdb83bf1
  412a4e:	jne    0x412a34
  412a50:	fld    QWORD PTR [eax+edx*8]
  412a53:	daa    
  412a54:	adc    bh,al
  412a56:	xchg   edx,eax
  412a57:	lock jo 0x4129e2
  412a5a:	cwde   
  412a5b:	je     0x412ac5
  412a5d:	shl    ebx,0xa
  412a60:	js     0x412aab
  412a62:	clc    
  412a63:	mov    bh,BYTE PTR [ebp-0x33c80008]
  412a69:	retf   
  412a6a:	and    eax,0xe7345b30
  412a6f:	sbb    eax,eax
  412a71:	mov    cl,BYTE PTR ds:0x179d39c4
  412a77:	cdq    
  412a78:	mov    ch,0xe0
  412a7a:	fldenv [esi+0x4a]
  412a7d:	in     eax,dx
  412a7e:	mov    ebx,0xa2aa25a8
  412a83:	push   ss
  412a84:	jae    0x412a21
  412a86:	into   
  412a87:	in     eax,dx
  412a88:	xchg   edx,eax
  412a89:	mov    ecx,0xb43f608c
  412a8e:	imul   esi,DWORD PTR [eax],0x978db7bf
  412a94:	(bad)  
  412a95:	retf   
  412a96:	jecxz  0x412b17
  412a98:	mov    ds:0x3052ccf4,eax
  412a9d:	lods   al,BYTE PTR gs:[esi]
  412a9f:	xchg   DWORD PTR [eax+ebx*1],ecx
  412aa2:	in     eax,0x9e
  412aa4:	jmp    0xae20:0xba7c728f
  412aab:	mov    ch,0xcb
  412aad:	pusha  
  412aae:	jg     0x412a74
  412ab0:	pop    eax
  412ab1:	(bad)  
  412ab2:	in     eax,0xca
  412ab4:	push   eax
  412ab5:	jl     0x412b25
  412ab7:	or     DWORD PTR [ecx+0x24],ecx
  412aba:	sub    eax,0xb2357d02
  412abf:	in     eax,0xd5
  412ac1:	sti    
  412ac2:	mov    ch,0xc9
  412ac4:	dec    edx
  412ac5:	dec    edi
  412ac6:	mov    ebp,0xf22f2418
  412acb:	adc    al,0xaf
  412acd:	jb     0x412af9
  412acf:	loope  0x412af6
  412ad1:	cmp    BYTE PTR [ecx-0x5d],0x8e
  412ad5:	loopne 0x412aaf
  412ad7:	mov    ds:0xf55955fc,eax
  412adc:	rcl    DWORD PTR [eax-0x1],0x51
  412ae0:	jae    0x412a9a
  412ae2:	cmp    al,0xe9
  412ae4:	inc    ebx
  412ae5:	sub    al,0x45
  412ae7:	loop   0x412b5f
  412ae9:	fs (bad) 
  412aeb:	or     BYTE PTR [edx-0x530d5091],dl
  412af1:	xor    al,0xd5
  412af3:	cli    
  412af4:	imul   esi,ecx
  412af7:	clc    
  412af8:	pop    edi
  412af9:	add    BYTE PTR [esi-0x47627b55],bl
  412aff:	out    dx,eax
  412b00:	std    
  412b01:	xchg   ebp,eax
  412b02:	or     al,0x71
  412b04:	dec    eax
  412b05:	setg   BYTE PTR [ebx-0x51]
  412b09:	fiadd  DWORD PTR [edi+edi*1]
  412b0c:	mov    esi,0xebbfcaf6
  412b11:	(bad)  
  412b12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b13:	faddp  st(4),st
  412b15:	or     DWORD PTR [eax],ebp
  412b17:	imul   ebx,DWORD PTR [eax+0x28],0x2e
  412b1b:	dec    eax
  412b1c:	cli    
  412b1d:	mov    eax,ds:0xca2a4df0
  412b22:	test   eax,0x98790026
  412b27:	push   esi
  412b28:	test   al,0x84
  412b2a:	xor    esp,esi
  412b2c:	gs call 0x1d2a:0xb0388b9f
  412b34:	xchg   ebx,eax
  412b35:	xchg   ebp,eax
  412b36:	neg    BYTE PTR [eax]
  412b38:	mov    cl,0xa1
  412b3a:	pop    edi
  412b3b:	jecxz  0x412ba0
  412b3d:	mov    ch,0x0
  412b3f:	jns    0x412b58
  412b41:	dec    ecx
  412b42:	xchg   esp,eax
  412b43:	lock pop ds
  412b45:	sub    eax,0xe9bd75fa
  412b4a:	das    
  412b4b:	inc    edi
  412b4c:	jp     0x412b25
  412b4e:	ins    BYTE PTR es:[edi],dx
  412b4f:	inc    edi
  412b50:	and    WORD PTR [edx+0x6da04386],cx
  412b57:	pusha  
  412b58:	rol    BYTE PTR [bp+di],cl
  412b5b:	shr    ch,1
  412b5d:	xor    edx,DWORD PTR [ebx+0x7a94f513]
  412b63:	clc    
  412b64:	mov    eax,0xe9672def
  412b69:	mov    edi,0x7e2b4b83
  412b6e:	jmp    0x85f17b28
  412b73:	out    0x75,al
  412b75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b76:	adc    esi,DWORD PTR [ebp-0x6efc709]
  412b7c:	hlt    
  412b7d:	cmp    al,0x8c
  412b7f:	jge    0x412ba5
  412b81:	jno    0x412bc2
  412b83:	ins    BYTE PTR es:[edi],dx
  412b84:	aaa    
  412b85:	xchg   BYTE PTR [ebx],bl
  412b87:	mov    dh,0x41
  412b89:	mov    ebp,0xc05f32f9
  412b8e:	mov    ecx,0x94dc7782
  412b93:	fisubr WORD PTR [ebx-0x430030a7]
  412b99:	mov    edx,0x8e7318bc
  412b9e:	fwait
  412b9f:	mov    esp,0x5e0dc46a
  412ba4:	int    0x85
  412ba6:	jle    0x412b8e
  412ba8:	ret    
  412ba9:	out    dx,al
  412baa:	push   ecx
  412bab:	iret   
  412bac:	into   
  412bad:	mov    edi,cs
  412baf:	in     eax,0xf
  412bb1:	cwde   
  412bb2:	sub    eax,0xcd0e72d1
  412bb7:	shl    DWORD PTR [ebx+ebx*2-0x5a],0x99
  412bbc:	(bad)  
  412bbd:	xchg   ecx,eax
  412bbe:	sete   BYTE PTR [ebx-0x67]
  412bc2:	pusha  
  412bc3:	mov    al,0x52
  412bc5:	stos   DWORD PTR es:[edi],eax
  412bc6:	jecxz  0x412b64
  412bc8:	jns    0x412c3c
  412bca:	or     dh,bh
  412bcc:	dec    edx
  412bcd:	neg    edi
  412bcf:	sub    esi,DWORD PTR [esi]
  412bd1:	les    ebp,FWORD PTR [ebp+0x6eece127]
  412bd7:	fwait
  412bd8:	ja     0x412c49
  412bda:	adc    ah,ch
  412bdc:	pop    eax
  412bdd:	cli    
  412bde:	in     al,dx
  412bdf:	sbb    eax,DWORD PTR [edx-0x32]
  412be2:	jae    0x412bab
  412be4:	imul   edx,DWORD PTR [bx-0x67],0x7a015d52
  412bec:	into   
  412bed:	pop    ebp
  412bee:	cs hlt 
  412bf0:	sbb    ah,dh
  412bf2:	pop    ebx
  412bf3:	test   BYTE PTR [esi],dh
  412bf5:	hlt    
  412bf6:	gs adc al,0xa0
  412bf9:	xor    eax,0x791612f5
  412bfe:	mov    ah,0x5e
  412c00:	mov    WORD PTR [esi],?
  412c02:	and    ch,BYTE PTR [eax+0x2]
  412c05:	mov    esi,0xc038f2e6
  412c0a:	add    DWORD PTR [ebx+0x69],ecx
  412c0d:	jne    0x412c33
  412c0f:	cmp    ecx,0x3bad7cb4
  412c15:	jmp    0x5a8f:0xb0a94b49
  412c1c:	xchg   BYTE PTR [edx-0xa],ah
  412c1f:	jb     0x412bfb
  412c21:	hlt    
  412c22:	ficom  WORD PTR [eax]
  412c24:	repnz push esi
  412c26:	repz jae 0x412c6a
  412c29:	mov    dh,0x10
  412c2b:	pop    esp
  412c2c:	fsub   st,st(6)
  412c2e:	daa    
  412c2f:	imul   edi,DWORD PTR [esp+eax*8+0x7a],0x7af34450
  412c37:	inc    ecx
  412c38:	mov    ebx,0x83292ec
  412c3d:	add    BYTE PTR [ebp+0x245fd702],dl
  412c43:	or     BYTE PTR [ebp-0x298cd661],ah
  412c49:	and    BYTE PTR [ebx-0x46],dh
  412c4c:	sti    
  412c4d:	inc    edx
  412c4e:	pusha  
  412c4f:	dec    ecx
  412c50:	ins    BYTE PTR es:[edi],dx
  412c51:	mov    al,0xc
  412c53:	sub    edx,edx
  412c55:	pushf  
  412c56:	stos   BYTE PTR es:[edi],al
  412c57:	shr    bl,cl
  412c59:	push   eax
  412c5a:	push   edx
  412c5b:	or     ch,BYTE PTR [ecx+edx*8]
  412c5e:	adc    al,0xe5
  412c60:	jo     0x412cc2
  412c62:	fwait
  412c63:	pop    ebp
  412c64:	mov    ds:0xdbceb44,eax
  412c69:	dec    ecx
  412c6a:	fdivr  DWORD PTR [edi+0x48]
  412c6d:	imul   ecx,DWORD PTR [edi+0x5c],0xfffffff6
  412c71:	xchg   edx,eax
  412c72:	nop
  412c73:	add    BYTE PTR [edi-0x53092e2],dl
  412c79:	add    ecx,DWORD PTR [ebx-0x3b]
  412c7c:	lds    edx,FWORD PTR [ebx]
  412c7e:	sbb    BYTE PTR [edx],ah
  412c80:	paddq  mm2,QWORD PTR [ecx+ebx*4-0x7c9734c7]
  412c88:	leave  
  412c89:	cmovns eax,DWORD PTR [edx+0x7]
  412c8d:	mov    ch,0xe7
  412c8f:	sar    DWORD PTR [esi+0x479244c2],cl
  412c95:	add    cl,BYTE PTR [eax+ecx*8-0x31386d9e]
  412c9c:	pop    edi
  412c9d:	outs   dx,BYTE PTR ds:[esi]
  412c9e:	sub    ecx,ebp
  412ca0:	mov    dh,0x14
  412ca2:	mov    edx,DWORD PTR [ecx]
  412ca4:	dec    esp
  412ca5:	pop    edx
  412ca6:	dec    ecx
  412ca7:	and    DWORD PTR [ecx+0x55],0x570ef068
  412cae:	ret    0xc134
  412cb1:	ror    DWORD PTR [edx-0x5c],cl
  412cb4:	(bad)  
  412cb5:	cmp    eax,0x914f84dd
  412cba:	mov    DWORD PTR [eax],ebp
  412cbc:	xor    BYTE PTR [esi+0x40bea28],bl
  412cc2:	sbb    dl,BYTE PTR [eax]
  412cc4:	mov    ah,BYTE PTR [esi+0x6a]
  412cc7:	sub    ecx,DWORD PTR [esi-0x11]
  412cca:	aad    0xe4
  412ccc:	bound  ebp,QWORD PTR [ecx+0x5d]
  412ccf:	lea    ecx,[ebp+0x49]
  412cd2:	mov    ebp,fs
  412cd4:	aam    0x26
  412cd6:	jns    0x412c82
  412cd8:	(bad)  
  412cda:	add    BYTE PTR [eax+eax*2-0x171e5cb],cl
  412ce1:	mov    ds:0x947077be,al
  412ce6:	bound  esp,QWORD PTR [edi]
  412ce8:	dec    edi
  412ce9:	repnz mul BYTE PTR [ecx+0x34]
  412ced:	pop    edx
  412cee:	or     eax,0x63d71344
  412cf3:	fadd   QWORD PTR [ecx]
  412cf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cf6:	pop    edx
  412cf7:	mov    ecx,0x7c087653
  412cfc:	mov    cl,0x58
  412cfe:	adc    eax,0x748e4c29
  412d03:	fst    DWORD PTR [ebx]
  412d05:	xor    eax,0x628df6c6
  412d0a:	adc    al,0xcd
  412d0c:	dec    ecx
  412d0d:	sar    BYTE PTR [esi+0xf],1
  412d10:	loope  0x412ca7
  412d12:	jg     0x412d3c
  412d14:	or     esi,DWORD PTR [ecx-0x1a]
  412d17:	test   DWORD PTR ds:[esp+ebp*2],ebx
  412d1b:	jecxz  0x412cd0
  412d1d:	repz mov cl,0xd4
  412d20:	imul   DWORD PTR [edi+0x39]
  412d23:	(bad)  
  412d24:	sub    BYTE PTR [edx+0x5f],cl
  412d27:	fnstsw WORD PTR [esi+0x22e69592]
  412d2d:	es jns 0x412cc8
  412d30:	bound  edx,QWORD PTR [esi-0x7a]
  412d33:	arpl   WORD PTR [edi],bp
  412d35:	mov    al,ds:0x4ea23b96
  412d3a:	or     DWORD PTR [ebx-0x12],esi
  412d3d:	inc    ebp
  412d3e:	mov    ebx,0x3411affb
  412d43:	int    0x2f
  412d45:	and    eax,0x50ddb6af
  412d4a:	les    ecx,FWORD PTR cs:[edx-0x5826012b]
  412d51:	fbstp  TBYTE PTR [eax-0x61b9233]
  412d57:	push   eax
  412d58:	xchg   BYTE PTR [edx-0x73e60a4e],dl
  412d5e:	mov    ch,0x75
  412d60:	ror    BYTE PTR [ebx+ebx*2-0x5d47222c],1
  412d67:	sbb    ch,cl
  412d69:	retf   
  412d6a:	xchg   DWORD PTR [eax],ebx
  412d6c:	hlt    
  412d6d:	gs int3 
  412d6f:	cmp    al,BYTE PTR [eax+eiz*2+0x76]
  412d73:	enter  0x3afe,0xe9
  412d77:	fstp   DWORD PTR [eax-0x65919846]
  412d7d:	out    dx,al
  412d7e:	xor    bl,BYTE PTR [ecx+0x77]
  412d81:	retf   0x19ab
  412d84:	jmp    0x412d6b
  412d86:	mov    esp,DWORD PTR [esi+eiz*2-0x2b]
  412d8a:	test   al,0x25
  412d8c:	add    DWORD PTR [esi-0x13ef4c4a],eax
  412d92:	jmp    0x65d:0xcaa82753
  412d99:	mov    ch,0x47
  412d9b:	pusha  
  412d9c:	inc    eax
  412d9d:	ds sti 
  412d9f:	ret    
  412da0:	pop    ss
  412da1:	loop   0x412dda
  412da3:	scas   eax,DWORD PTR es:[edi]
  412da4:	test   BYTE PTR [esp+eax*4+0x25],0x85
  412da9:	repz add ebx,DWORD PTR [esi]
  412dac:	mov    edi,DWORD PTR [esi+0x420adcc2]
  412db2:	ret    0x7769
  412db5:	out    0xa2,eax
  412db7:	mov    esp,0x677cd29c
  412dbc:	add    eax,0x9298a4e6
  412dc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412dc2:	pop    ebx
  412dc3:	jnp    0x412e0a
  412dc5:	xchg   BYTE PTR [esi+0x54],bl
  412dc8:	xor    BYTE PTR [ecx],bl
  412dca:	fs and DWORD PTR ds:[eax+0x6d4fbee1],0xffffffc9
  412dd3:	sbb    ebx,DWORD PTR [esi-0x558a0e81]
  412dd9:	fwait
  412dda:	in     al,dx
  412ddb:	sub    BYTE PTR [edx],0x23
  412dde:	nop
  412ddf:	jge    0x412e54
  412de1:	inc    DWORD PTR [edx+esi*1]
  412de4:	ds sub al,0x8f
  412de7:	push   ebx
  412de8:	shl    DWORD PTR [edx],1
  412dea:	pushf  
  412deb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412dec:	(bad)  [ebx-0x3d178832]
  412df2:	jp     0x412d8b
  412df4:	add    dl,BYTE PTR [eax+0x24]
  412df7:	adc    esp,DWORD PTR [ecx+esi*8+0x55c6e108]
  412dfe:	sbb    al,0x6b
  412e00:	into   
  412e01:	sbb    BYTE PTR [ebx+0x5742f594],0xc3
  412e08:	or     al,0xb8
  412e0a:	nop
  412e0b:	jae    0x412de8
  412e0d:	in     al,0xea
  412e0f:	(bad)  
  412e10:	jbe    0x412dde
  412e12:	add    al,0x2a
  412e14:	arpl   WORD PTR [ecx-0xdb18e2],cx
  412e1a:	into   
  412e1b:	mov    ch,0xb5
  412e1d:	test   DWORD PTR [ebx-0x6c585fa8],ecx
  412e23:	mov    ds:0xef623d25,al
  412e28:	addr16 sbb eax,0x17aaf7ae
  412e2e:	inc    eax
  412e2f:	and    eax,0xf95bf55b
  412e34:	setnp  BYTE PTR [edx-0x16f86c15]
  412e3b:	add    bl,bh
  412e3d:	xchg   ebx,eax
  412e3e:	inc    ebx
  412e3f:	push   ss
  412e40:	aam    0x34
  412e42:	in     eax,dx
  412e43:	sub    ah,BYTE PTR [ebp+0xdc6ca43]
  412e49:	mov    eax,ds:0xb3f3f8d1
  412e4e:	pop    esp
  412e4f:	xchg   DWORD PTR [edi+0x5c5e9552],esi
  412e55:	push   ebx
  412e56:	into   
  412e57:	add    al,0xf5
  412e59:	pop    ebx
  412e5a:	pusha  
  412e5b:	bound  ebp,QWORD PTR [ebp+0x65c15ef1]
  412e61:	or     eax,0x699a8ca0
  412e66:	jge    0x412e5b
  412e68:	test   al,0x1e
  412e6a:	(bad)  
  412e6b:	and    esp,DWORD PTR [esi+0x4]
  412e6e:	mov    eax,0xe4277481
  412e73:	adc    DWORD PTR [esi-0x73],edi
  412e76:	stc    
  412e77:	push   0xb1d53efc
  412e7c:	retf   0xf209
  412e7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e80:	pop    ss
  412e81:	scas   eax,DWORD PTR es:[edi]
  412e82:	test   ah,ch
  412e84:	or     BYTE PTR [ebp-0x12],dl
  412e87:	mov    dh,0x94
  412e89:	fwait
  412e8a:	xor    DWORD PTR [esi],esi
  412e8c:	mov    dl,0x74
  412e8e:	mov    ch,BYTE PTR [esi-0x3c]
  412e91:	stos   BYTE PTR es:[edi],al
  412e92:	pop    esp
  412e93:	dec    eax
  412e94:	div    DWORD PTR es:[eax+0x58]
  412e98:	sbb    DWORD PTR [ebp+0x16069b6f],edx
  412e9e:	loope  0x412ecf
  412ea0:	jg     0x412ef1
  412ea2:	(bad)  
  412ea3:	in     eax,dx
  412ea4:	das    
  412ea5:	mov    DWORD PTR [ecx],edx
  412ea7:	jmp    0x412e85
  412ea9:	iret   
  412eaa:	pop    ebx
  412eab:	push   edi
  412eac:	push   ecx
  412ead:	mov    ebp,0x600cd3c7
  412eb2:	mov    ds:0x2ec44f9b,al
  412eb7:	or     edi,DWORD PTR [edi+ecx*4+0x25]
  412ebb:	cmp    al,BYTE PTR [eax+0x6b80383e]
  412ec1:	adc    BYTE PTR [edx-0x4f000a8c],0x74
  412ec8:	or     BYTE PTR [esi+ebx*4+0x37],0xf0
  412ecd:	pop    esi
  412ece:	and    DWORD PTR [ebx-0x34c0a227],esp
  412ed4:	mov    dl,0xde
  412ed6:	rcr    BYTE PTR [edx-0x2f],0x47
  412eda:	int3   
  412edb:	lea    ebp,ds:0x6ac14ae7
  412ee1:	mov    esi,0x111fcf2b
  412ee6:	jle    0x412ea3
  412ee8:	cmp    eax,0x65eb9d3c
  412eed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412eee:	mov    esi,0x341d3933
  412ef3:	mov    edi,0xcb3cb978
  412ef8:	rcr    ecx,0x50
  412efb:	imul   edi,edx,0x38
  412efe:	leave  
  412eff:	enter  0xe51c,0xc2
  412f03:	fadd   DWORD PTR [edx]
  412f05:	adc    al,0x15
  412f07:	mov    edx,0xa197a51a
  412f0c:	cmc    
  412f0d:	(bad)  
  412f0e:	sbb    al,0x2c
  412f10:	cs jge 0x412f3e
  412f13:	out    0x46,eax
  412f15:	imul   esi,ebp,0x4073b2bf
  412f1b:	cs popf 
  412f1d:	dec    ebp
  412f1e:	mov    al,ds:0x1a6637f9
  412f23:	sbb    eax,0x293e4e7
  412f28:	sub    DWORD PTR [ecx+0x1e4e0334],0xffffff9d
  412f2f:	mov    WORD PTR [ecx-0x7253bc10],fs
  412f35:	mov    eax,ds:0x7f5172f8
  412f3a:	push   edx
  412f3b:	sahf   
  412f3c:	jge    0x412edc
  412f3e:	jmp    0x45b3:0x846814af
  412f45:	add    DWORD PTR [ebp-0x63eaf7ca],esp
  412f4b:	rcl    DWORD PTR [ebp-0x41a13771],1
  412f51:	scas   eax,DWORD PTR es:[edi]
  412f52:	loopne 0x412ee2
  412f54:	xor    BYTE PTR [eax+0x5f],0x52
  412f58:	retf   0xffcc
  412f5b:	add    DWORD PTR [ebx+eax*8+0x7340531f],eax
  412f62:	psrlq  mm1,QWORD PTR cs:[edx+0x4cc9ced9]
  412f6a:	repz push esi
  412f6c:	inc    edi
  412f6d:	jmp    0x4981:0xe5f368d6
  412f74:	sbb    dh,BYTE PTR [ebx+0x68e2e384]
  412f7a:	ltr    WORD PTR [edi+0x69]
  412f7e:	dec    ebx
  412f7f:	dec    edi
  412f80:	sub    BYTE PTR ss:[ebp+0x2c],al
  412f84:	loope  0x412f48
  412f86:	xor    eax,0x4b43bcd6
  412f8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f8c:	xchg   ebp,eax
  412f8d:	je     0x413003
  412f8f:	les    edx,FWORD PTR [ebp+0x68]
  412f92:	cli    
  412f93:	pop    edi
  412f94:	mov    bh,0x40
  412f96:	lods   eax,DWORD PTR ds:[esi]
  412f97:	jmp    0x2c27:0x710c7c68
  412f9e:	fcmovne st,st(3)
  412fa0:	dec    esi
  412fa1:	or     edi,esp
  412fa3:	in     eax,dx
  412fa4:	ficom  WORD PTR [esi-0x4f]
  412fa7:	or     esp,DWORD PTR [esi+0x55]
  412faa:	out    0x4e,al
  412fac:	dec    esi
  412fad:	gs and al,0x87
  412fb0:	aaa    
  412fb1:	inc    ebx
  412fb2:	xor    BYTE PTR [esi+0x65],dl
  412fb5:	fadd   DWORD PTR [ebp-0x66]
  412fb8:	aaa    
  412fb9:	aaa    
  412fba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fbb:	lock xchg edx,eax
  412fbd:	fld    DWORD PTR [esi+ebp*2-0x2a]
  412fc1:	jae    0x412f6a
  412fc3:	dec    esp
  412fc4:	mov    bl,0x88
  412fc6:	jle    0x41300c
  412fc8:	clc    
  412fc9:	and    eax,DWORD PTR [eax+0x7944a68f]
  412fcf:	sub    edx,DWORD PTR [edi-0x1121393e]
  412fd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fd6:	jno    0x412f6f
  412fd8:	push   cs
  412fd9:	lods   eax,DWORD PTR ds:[esi]
  412fda:	adc    al,0x7
  412fdc:	push   eax
  412fdd:	pop    ds
  412fde:	jbe    0x412fab
  412fe0:	cdq    
  412fe1:	mov    cl,BYTE PTR es:[edx-0x2c]
  412fe5:	xchg   esi,eax
  412fe6:	or     dl,BYTE PTR [ebx-0xf]
  412fe9:	loopne 0x412fb4
  412feb:	int3   
  412fec:	adc    al,0x4f
  412fee:	dec    edx
  412fef:	mov    bl,0xb
  412ff1:	(bad)  [eax]
  412ff3:	cmp    BYTE PTR [ecx+0x760e532f],dl
  412ff9:	xchg   ebp,eax
  412ffa:	repz imul esp,DWORD PTR [edx-0x7b8fda1f],0xffffffac
  413002:	inc    ecx
  413003:	push   esi
  413004:	inc    esp
  413005:	out    0x6a,al
  413007:	aaa    
  413008:	mov    bl,0x25
  41300b:	adc    DWORD PTR [esi-0x368b34db],ebx
  413011:	js     0x41306e
  413013:	repnz popa 
  413015:	mov    cl,0x37
  413017:	sbb    al,0x16
  413019:	in     eax,dx
  41301a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41301b:	sub    eax,0x2e7dd2a0
  413020:	cmp    al,0x2b
  413022:	cmp    DWORD PTR [ebx],edx
  413024:	mov    eax,0xa7884fa3
  413029:	jno    0x4130a1
  41302b:	stc    
  41302c:	xor    BYTE PTR [eax+eax*2-0x1bd1a513],dh
  413033:	(bad)  
  413034:	ins    DWORD PTR es:[edi],dx
  413035:	fld    QWORD PTR [ecx]
  413037:	adc    DWORD PTR [ebp-0x742bb0ed],0xffffffa9
  41303e:	test   al,0xf4
  413040:	dec    esi
  413041:	imul   esi,DWORD PTR [eax-0x6bd957a4],0x84181060
  41304b:	xchg   esp,eax
  41304c:	addr16 or eax,0xae569916
  413052:	out    0x25,eax
  413054:	mov    ds:0xc62f839f,al
  413059:	jg     0x413004
  41305b:	sub    BYTE PTR [edi],0x6
  41305e:	push   0xffffffdb
  413060:	nop
  413061:	xchg   esp,eax
  413062:	ret    
  413063:	xchg   ebp,ebx
  413065:	add    BYTE PTR [ebx-0x23],bl
  413068:	inc    ecx
  413069:	sahf   
  41306a:	dec    esp
  41306b:	sub    BYTE PTR [edi+0x5d],bl
  41306e:	sar    DWORD PTR [ebx-0xd],cl
  413071:	ds (bad) 
  413073:	fsubr  QWORD PTR [edi-0x52b75522]
  413079:	inc    eax
  41307a:	sub    esi,DWORD PTR [ebp+0x52]
  41307d:	xchg   ecx,eax
  41307e:	cli    
  41307f:	test   al,0x7a
  413081:	aaa    
  413082:	cs test al,0x14
  413085:	mov    eax,0xa7e0a831
  41308a:	int    0x53
  41308c:	int    0x23
  41308e:	pusha  
  41308f:	push   0xffffffca
  413091:	sahf   
  413092:	rol    BYTE PTR [edi+0x1cefc99b],cl
  413098:	fadd   DWORD PTR [ebx+edi*2+0x3cac19b4]
  41309f:	push   esp
  4130a0:	fisubr DWORD PTR [edi+0x192ea373]
  4130a6:	pop    ebx
  4130a7:	and    ecx,ebx
  4130a9:	sahf   
  4130aa:	addr16 repz icebp 
  4130ad:	dec    ebx
  4130ae:	rcr    edx,1
  4130b0:	cmp    DWORD PTR [ebp+0x20],edi
  4130b3:	mov    esi,0x1c230dd0
  4130b8:	cld    
  4130b9:	mov    bl,0xa5
  4130bb:	jae    0x41305c
  4130bd:	and    bl,BYTE PTR [ecx-0x25]
  4130c0:	sbb    eax,DWORD PTR [ebp+0x6b]
  4130c3:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130c5:	pop    edi
  4130c6:	(bad)  
  4130c7:	xor    DWORD PTR [edx+0x5958aec],edi
  4130cd:	call   0x9f0e7ea9
  4130d2:	in     al,0xfe
  4130d4:	add    edx,DWORD PTR [edi+eiz*2+0x61067db8]
  4130db:	lea    esi,[ebx+0x5c]
  4130de:	sahf   
  4130df:	mov    dh,dl
  4130e1:	or     eax,0xf85178aa
  4130e6:	mov    ecx,0x7bd6cbef
  4130eb:	imul   ebp,DWORD PTR [edi],0x9d1f1a53
  4130f1:	dec    ecx
  4130f2:	inc    eax
  4130f3:	test   DWORD PTR ds:0x604d513c,edi
  4130f9:	(bad)  
  4130fa:	lock jne 0x41314e
  4130fd:	push   cs
  4130fe:	cmp    edi,DWORD PTR [edx+0x5b1a6828]
  413104:	and    DWORD PTR [edi-0x27],esi
  413107:	sbb    ch,BYTE PTR [ecx]
  413109:	ins    WORD PTR es:[edi],dx
  41310b:	mov    dh,0x72
  41310d:	mov    cl,0x90
  41310f:	ins    BYTE PTR es:[edi],dx
  413110:	repnz inc edx
  413112:	fwait
  413113:	xchg   esi,eax
  413114:	pop    ebx
  413115:	cmp    eax,0x84aa0e1f
  41311a:	xchg   edi,eax
  41311b:	std    
  41311c:	icebp  
  41311d:	ja     0x413151
  41311f:	or     DWORD PTR [ebp+0x22],edx
  413122:	aas    
  413123:	popf   
  413124:	fmul   DWORD PTR [ebx+ebx*4-0x32513ce8]
  41312b:	mov    al,0x43
  41312d:	xlat   BYTE PTR ds:[ebx]
  41312e:	rcl    BYTE PTR [edx+0x35bbe4fd],cl
  413134:	jb     0x4130b9
  413136:	sub    al,0xec
  413138:	imul   ebx,DWORD PTR [ebx+0x30],0xe76e2ffe
  41313f:	or     eax,0x95db8e75
  413144:	(bad)
  413147:	mov    al,ds:0xf05de946
  41314c:	cmp    ebx,eax
  41314e:	test   esi,esi
  413150:	or     DWORD PTR [ebp-0x79],eax
  413153:	enter  0x5afd,0x3b
  413157:	sbb    ebp,esp
  413159:	daa    
  41315a:	data16 fcomp DWORD PTR [ebx]
  41315d:	push   esp
  41315e:	xor    eax,DWORD PTR [edx-0x4c39cd00]
  413164:	mov    ecx,0x91bc3ab3
  413169:	(bad)  
  41316a:	jle    0x41311c
  41316c:	loopne 0x4130f5
  41316e:	retf   0xba60
  413171:	sbb    DWORD PTR [eax],0xffffffe1
  413174:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413175:	lods   eax,DWORD PTR ds:[esi]
  413176:	cmp    bl,BYTE PTR [ebp-0x266c590f]
  41317c:	xor    DWORD PTR [esi-0x3490fca0],edi
  413182:	sbb    ebx,ebp
  413184:	dec    edx
  413185:	iret   
  413186:	adc    al,0x2a
  413188:	adc    edx,esp
  41318a:	dec    edi
  41318b:	mov    ecx,0x37a8548b
  413190:	sti    
  413191:	adc    edi,DWORD PTR [eax-0x154ca662]
  413197:	sti    
  413198:	sbb    DWORD PTR [ecx+0x74],edx
  41319b:	(bad)
  41319e:	cs std 
  4131a0:	xchg   edx,eax
  4131a1:	push   0x6c
  4131a3:	outs   dx,DWORD PTR ds:[esi]
  4131a4:	iret   
  4131a5:	test   BYTE PTR [ebp-0x3c56f877],bh
  4131ab:	mov    ebp,0x38b5e238
  4131b0:	jbe    0x413149
  4131b2:	(bad)  
  4131b4:	into   
  4131b5:	pop    esi
  4131b6:	aam    0x9c
  4131b8:	and    eax,0x753c63b8
  4131bd:	ja     0x413175
  4131bf:	jae    0x413212
  4131c1:	jbe    0x413176
  4131c3:	in     al,dx
  4131c4:	push   0xfffffff9
  4131c6:	push   edx
  4131c7:	jo     0x4131a0
  4131c9:	cdq    
  4131ca:	jg     0x4131e1
  4131cc:	scas   al,BYTE PTR es:[edi]
  4131cd:	xor    eax,0x6c3ca652
  4131d2:	(bad)  
  4131d3:	mov    edx,0x73f25b2f
  4131d8:	sub    ebx,DWORD PTR [ecx-0xc59492]
  4131de:	jae    0x4131f8
  4131e0:	or     BYTE PTR [edx+0x6e],0x23
  4131e4:	cld    
  4131e5:	jae    0x413214
  4131e7:	ins    BYTE PTR es:[edi],dx
  4131e8:	add    ch,BYTE PTR [edx]
  4131ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131eb:	outs   dx,DWORD PTR ds:[esi]
  4131ec:	and    al,0xf3
  4131ee:	(bad)  
  4131ef:	stc    
  4131f0:	mov    edi,ebp
  4131f2:	xor    BYTE PTR [ebp+0x5fdbff7e],dl
  4131f8:	xchg   esi,eax
  4131f9:	mov    ah,BYTE PTR [eax+0x5fe39a4c]
  4131ff:	pop    ebp
  413200:	cli    
  413201:	jae    0x4131c0
  413203:	iret   
  413204:	in     eax,0xc3
  413206:	mov    cl,ch
  413208:	jmp    0x1f66:0x1e150f31
  41320f:	mov    ebx,0x5d7e592c
  413214:	rcl    DWORD PTR [edi-0x79a8ed96],cl
  41321a:	out    dx,eax
  41321b:	sar    ah,1
  41321d:	leave  
  41321e:	in     eax,0x3
  413220:	xor    BYTE PTR [esi],bl
  413222:	ins    DWORD PTR es:[edi],dx
  413223:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413224:	cmp    DWORD PTR [edx-0x86c04f1],eax
  41322a:	js     0x41324b
  41322c:	jbe    0x4131b7
  41322e:	mov    esp,0xf9753c25
  413233:	aam    0xe5
  413235:	add    BYTE PTR [ebx+0x2efe990],ch
  41323b:	dec    esp
  41323c:	iret   
  41323d:	pop    es
  41323e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41323f:	xchg   esp,eax
  413240:	je     0x4131dd
  413242:	out    0x31,al
  413244:	jno    0x413247
  413246:	push   0xc28b4afe
  41324b:	mov    ch,0x86
  41324d:	dec    ebx
  41324e:	jge    0x41326d
  413250:	push   esp
  413251:	xchg   ebp,eax
  413252:	ror    dh,0xc8
  413255:	in     eax,0x1a
  413257:	push   es
  413258:	and    dl,BYTE PTR [edx-0x47]
  41325b:	or     al,0xe4
  41325d:	dec    esi
  41325e:	adc    al,0x13
  413260:	lods   al,BYTE PTR ds:[esi]
  413261:	dec    eax
  413262:	popa   
  413263:	fwait
  413264:	cmp    dh,BYTE PTR [edi+0x68bbace9]
  41326a:	push   0xffffff93
  41326c:	xchg   dh,dh
  41326e:	pop    ss
  41326f:	mov    bl,0x6a
  413271:	xor    al,0xcb
  413273:	lods   al,BYTE PTR ds:[esi]
  413274:	push   0xc
  413276:	je     0x41322c
  413278:	mov    bh,0x40
  41327a:	imul   esi,DWORD PTR [ebp-0x649d18aa],0x5dc62645
  413284:	inc    esi
  413285:	pushf  
  413286:	cdq    
  413287:	xor    edi,esi
  413289:	ins    DWORD PTR es:[edi],dx
  41328a:	scas   al,BYTE PTR es:[edi]
  41328b:	jne    0x41327e
  41328d:	jnp    0x413261
  41328f:	in     al,dx
  413290:	mov    edi,0xd7893d5f
  413295:	mov    al,ds:0xd246dfed
  41329a:	and    eax,0xde85fdb0
  41329f:	clc    
  4132a0:	lds    edx,FWORD PTR [eax+0x45ab310a]
  4132a6:	jb     0x4132bc
  4132a8:	hlt    
  4132a9:	pop    esi
  4132aa:	ja     0x413263
  4132ac:	out    0x75,eax
  4132ae:	dec    eax
  4132af:	in     eax,0xcd
  4132b1:	xchg   edx,ebp
  4132b3:	jnp    0x41324d
  4132b5:	jns    0x413303
  4132b7:	push   ss
  4132b8:	(bad)  
  4132b9:	jmp    0x4132e6
  4132bb:	in     eax,0xa
  4132bd:	dec    DWORD PTR [esp+esi*8+0x26]
  4132c1:	fcom   DWORD PTR [ebx+0x3e]
  4132c4:	push   ebx
  4132c5:	pop    ecx
  4132c6:	and    bl,ch
  4132c8:	(bad)  
  4132c9:	shr    DWORD PTR [ebp-0x31289df4],cl
  4132cf:	icebp  
  4132d0:	or     bl,BYTE PTR [eax]
  4132d2:	icebp  
  4132d3:	fild   WORD PTR ds:0x8b87aa6d
  4132d9:	clc    
  4132da:	cli    
  4132db:	or     al,dl
  4132dd:	cmp    esi,edx
  4132df:	push   DWORD PTR [edx-0x2464b533]
  4132e5:	mov    ebp,DWORD PTR [ebp-0x2e]
  4132e8:	mov    cl,0x1
  4132ea:	mov    bh,0xda
  4132ec:	push   ebp
  4132ed:	jl     0x4132f1
  4132ef:	sub    al,0x5f
  4132f1:	pushf  
  4132f2:	mov    WORD PTR [ebx],gs
  4132f4:	jnp    0x413296
  4132f6:	loop   0x413283
  4132f8:	outs   dx,BYTE PTR ds:[esi]
  4132f9:	loope  0x4132d6
  4132fb:	cmc    
  4132fc:	rcl    BYTE PTR [ecx+0x0],1
  4132ff:	xor    BYTE PTR [eax+ebx*1+0x76],bl
  413303:	mov    bh,0x58
  413305:	loop   0x413290
  413307:	mov    eax,0x7e430a49
  41330c:	sub    dl,BYTE PTR [esi+edi*2+0x5886225c]
  413313:	xchg   al,dl
  413315:	data16 mov dh,0x7e
  413318:	or     eax,0xb877893c
  41331d:	pop    ecx
  41331e:	out    0x56,eax
  413320:	xchg   DWORD PTR [esi],esp
  413322:	stos   DWORD PTR es:[edi],eax
  413323:	out    0x55,eax
  413325:	push   cs
  413326:	mov    ds:0x74af1f93,al
  41332b:	pop    edx
  41332c:	jl     0x4132f7
  41332e:	shl    DWORD PTR [edi+ebp*8+0x43343a0],1
  413335:	push   esp
  413336:	push   esi
  413337:	mov    al,0xc9
  413339:	xor    DWORD PTR [edx-0x3fd0198b],edi
  41333f:	mov    DWORD PTR [eax+0x18ebe548],ebp
  413345:	call   0x9621:0x5be8f39b
  41334c:	pop    ecx
  41334d:	shl    BYTE PTR [ecx-0x5],1
  413350:	pop    ecx
  413351:	adc    eax,DWORD PTR [eax-0x7c126f3b]
  413357:	in     al,0x56
  413359:	jmp    0xabe0:0x13ab9f35
  413360:	xchg   esp,eax
  413361:	in     eax,0x29
  413363:	sbb    esi,eax
  413365:	dec    edx
  413366:	in     eax,0x66
  413368:	sbb    bl,BYTE PTR [esi+0x11cbccd4]
  41336e:	and    edi,esi
  413370:	and    BYTE PTR [ebx],0xba
  413373:	mul    BYTE PTR [esi-0x6e80dda1]
  413379:	in     al,0x5
  41337b:	loopne 0x413308
  41337d:	mov    DWORD PTR [esi+0x65204323],edx
  413383:	fmul   DWORD PTR [edx+0x54ed1134]
  413389:	sbb    DWORD PTR [eax],edi
  41338b:	lods   eax,DWORD PTR ds:[esi]
  41338c:	and    esi,DWORD PTR [eax+0x3f]
  41338f:	push   ebx
  413390:	inc    edx
  413391:	add    BYTE PTR [esi+edi*8],al
  413394:	rcl    BYTE PTR [ebx+0x61],0xd9
  413398:	call   0xd86d:0xa5dbd27a
  41339f:	arpl   WORD PTR [edx],sp
  4133a1:	push   ebp
  4133a2:	cdq    
  4133a3:	ret    0x432f
  4133a6:	ins    DWORD PTR es:[edi],dx
  4133a7:	push   edx
  4133a8:	sbb    DWORD PTR [edx-0xaac3005],eax
  4133ae:	push   cs
  4133af:	jo     0x413337
  4133b1:	mov    al,0x37
  4133b3:	cmp    bh,bh
  4133b5:	pop    edi
  4133b6:	pushf  
  4133b7:	(bad)  
  4133b8:	xchg   ebp,eax
  4133b9:	ds jecxz 0x41336c
  4133bc:	inc    ebp
  4133bd:	adc    eax,0x218b0cb3
  4133c2:	cs into 
  4133c4:	call   0xa944d9d9
  4133c9:	mov    bh,BYTE PTR [edx+edx*4+0x6af1dd76]
  4133d0:	xor    al,0x8f
  4133d2:	sbb    eax,0x6efa9c48
  4133d7:	xchg   edi,eax
  4133d8:	test   BYTE PTR [edi],0x52
  4133db:	ret    0x9fb6
  4133de:	imul   edi,DWORD PTR [ebp*8-0x43f59563],0xc
  4133e6:	jmp    0x65b1:0x97ccf294
  4133ed:	xchg   DWORD PTR [esi+ebx*2],ebp
  4133f0:	mov    bh,0xc0
  4133f2:	or     DWORD PTR [edx+0x7],ebx
  4133f5:	(bad)  
  4133f6:	add    edi,0x10
  4133f9:	cwde   
  4133fa:	scas   eax,DWORD PTR es:[edi]
  4133fb:	loop   0x41345d
  4133fd:	adc    DWORD PTR [ebx-0x44],0x10
  413401:	dec    esp
  413402:	sbb    eax,0x451cba4f
  413407:	into   
  413408:	xlat   BYTE PTR ss:[ebx]
  41340a:	ins    BYTE PTR es:[edi],dx
  41340b:	sub    DWORD PTR [esi],0xffffffea
  41340e:	inc    edx
  41340f:	pop    esp
  413410:	mov    ebp,DWORD PTR [ecx+0x14]
  413413:	mov    ch,ch
  413415:	cs push ebp
  413417:	inc    ebx
  413418:	pop    esi
  413419:	fistp  DWORD PTR [edx+0x46]
  41341c:	mov    ?,edi
  41341e:	imul   esp,DWORD PTR [edi+esi*4-0x469bbdc4],0x9948ff49
  413429:	pop    edx
  41342a:	test   DWORD PTR [ebp+0x21],ebp
  41342d:	xor    al,0xeb
  41342f:	fmul   QWORD PTR ds:0xd4b6d231
  413435:	jnp    0x4133db
  413437:	(bad)  
  413438:	and    ecx,DWORD PTR [ecx+0x54]
  41343b:	jmp    0xc961:0xc87174d3
  413442:	push   ebp
  413443:	imul   ecx,ebp,0xb65a7a39
  413449:	adc    eax,DWORD PTR ds:[ecx+ebx*4]
  41344d:	pop    esi
  41344e:	dec    esp
  41344f:	out    dx,eax
  413450:	pop    esp
  413451:	sub    DWORD PTR ds:0x662fecf2,ecx
  413457:	(bad)  
  413458:	dec    ebx
  413459:	cmc    
  41345a:	sub    BYTE PTR [eax],al
  41345c:	loop   0x41345f
  41345e:	push   ebp
  41345f:	mov    WORD PTR [esi-0x3e],cs
  413462:	cs adc al,0xcc
  413465:	fild   QWORD PTR [edx-0x5c1598f7]
  41346b:	scas   al,BYTE PTR es:[edi]
  41346c:	xchg   esp,eax
  41346d:	mov    edx,0xa0359aae
  413472:	(bad)  
  413473:	cmp    bl,cl
  413475:	add    eax,0x3db0bc2b
  41347a:	add    eax,0x7c5c606f
  41347f:	or     ebp,DWORD PTR [edx]
  413481:	sbb    DWORD PTR [edx-0xa130b29],esp
  413487:	das    
  413488:	lock jae 0x4134d8
  41348b:	(bad)  
  41348c:	sub    ecx,DWORD PTR [esi]
  41348e:	xor    DWORD PTR [esi+0x19ff312e],0xc175af2
  413498:	mov    dl,0xdd
  41349a:	lds    ebp,FWORD PTR [ecx]
  41349c:	push   edx
  41349d:	retf   0xb0d6
  4134a0:	call   0xbdfb:0x3f6c386d
  4134a7:	or     ah,dh
  4134a9:	xchg   edx,eax
  4134aa:	arpl   dx,sp
  4134ac:	loope  0x413483
  4134ae:	jo     0x413488
  4134b0:	and    DWORD PTR [ecx],esp
  4134b2:	fstp   TBYTE PTR [edi+0x3af0bbd1]
  4134b8:	out    0xcc,al
  4134ba:	pop    ebx
  4134bb:	mov    dh,0x32
  4134bd:	scas   al,BYTE PTR es:[edi]
  4134be:	fcmovb st,st(2)
  4134c0:	xchg   ecx,eax
  4134c1:	out    dx,eax
  4134c2:	rcr    ecx,1
  4134c4:	and    al,0xf3
  4134c6:	push   ebp
  4134c7:	xor    eax,0x1c2ed593
  4134cc:	test   al,0xc4
  4134ce:	mov    ds:0xe1f58436,al
  4134d3:	shr    BYTE PTR [eax+ebp*8],0xd3
  4134d7:	mov    ecx,0x27073d5
  4134dc:	ins    BYTE PTR es:[edi],dx
  4134dd:	not    DWORD PTR [ebp+0xd]
  4134e0:	shr    DWORD PTR [ebp+0x46220ad],cl
  4134e6:	xchg   edi,eax
  4134e7:	(bad)  
  4134e8:	inc    di
  4134ea:	adc    eax,0xe1d0de24
  4134ef:	jp     0x41349e
  4134f1:	(bad)  
  4134f2:	setbe  BYTE PTR [edx]
  4134f5:	xor    esp,DWORD PTR ds:0x9e24e451
  4134fb:	xor    BYTE PTR [esp+eax*8],cl
  4134fe:	bound  ebp,QWORD PTR [ecx]
  413500:	jne    0x41356e
  413502:	div    bh
  413504:	cdq    
  413505:	push   ecx
  413506:	jle    0x41353b
  413508:	loop   0x41355d
  41350a:	jae    0x413508
  41350c:	je     0x4134cb
  41350e:	rcr    BYTE PTR [edi-0x7ff9fe49],cl
  413514:	cmp    al,0xe1
  413516:	pop    es
  413517:	push   ds
  413518:	in     eax,dx
  413519:	push   0x70
  41351b:	shr    dh,1
  41351d:	cmp    DWORD PTR [eax],ecx
  41351f:	adc    edx,DWORD PTR [ecx]
  413521:	jns    0x413523
  413523:	sbb    DWORD PTR [ebx-0x3299aac2],edi
  413529:	cld    
  41352a:	fmul   DWORD PTR [ecx-0x43]
  41352d:	mov    edi,0xd693c915
  413532:	aas    
  413533:	daa    
  413534:	hlt    
  413535:	(bad)  
  413536:	arpl   WORD PTR [eax-0x7f],di
  413539:	out    dx,eax
  41353a:	inc    ecx
  41353b:	outs   dx,BYTE PTR ds:[esi]
  41353c:	xchg   BYTE PTR [edi],dh
  41353e:	sbb    BYTE PTR [eax],dl
  413540:	jg     0x413566
  413542:	mov    esi,0xd8e1716f
  413547:	nop    DWORD PTR [eax]
  41354a:	xchg   ebx,eax
  41354b:	and    DWORD PTR [ebx+0x4d3bcd34],esp
  413551:	loopne 0x413597
  413553:	rcr    dh,1
  413555:	jae    0x4135b5
  413557:	std    
  413558:	and    al,0xfc
  41355a:	div    DWORD PTR [ecx-0x1863d926]
  413560:	push   ss
  413561:	push   eax
  413562:	adc    al,0x43
  413564:	in     al,dx
  413565:	adc    al,0xb7
  413567:	rcl    BYTE PTR [edx-0x55486ff9],1
  41356d:	push   esp
  41356e:	sbb    BYTE PTR [ecx],ah
  413570:	cli    
  413571:	fisub  DWORD PTR [ebx-0x2faf5962]
  413577:	adc    DWORD PTR [edi+0x112f0b22],0x14195ff5
  413581:	adc    DWORD PTR [ebx-0x61497ffb],0xe
  413588:	test   BYTE PTR [ebp+0x361712c],ch
  41358e:	in     al,0x16
  413590:	fisubr WORD PTR [ecx+ebp*2+0xd0d506f]
  413597:	sbb    DWORD PTR [eax+0x16],eax
  41359a:	fidivr WORD PTR [eax-0x706d5fe6]
  4135a0:	inc    edi
  4135a1:	sti    
  4135a2:	bnd call 0xb6b39949
  4135a8:	ja     0x413550
  4135aa:	add    edx,DWORD PTR [eax]
  4135ac:	fadd   st,st(6)
  4135ae:	sbb    DWORD PTR [ebx],ecx
  4135b0:	xor    eax,esi
  4135b2:	lock mov eax,0xfac9fdde
  4135b8:	jg     0x413542
  4135ba:	xlat   BYTE PTR ds:[ebx]
  4135bb:	mov    al,ds:0xaa70cac4
  4135c0:	cmp    DWORD PTR [ebx+0x76],esi
  4135c3:	mov    eax,0xe1c0d9d8
  4135c8:	repz aaa 
  4135ca:	inc    esi
  4135cb:	leave  
  4135cc:	sub    bl,BYTE PTR cs:[edx+0x5]
  4135d0:	inc    ecx
  4135d1:	xor    eax,0xea8369c3
  4135d6:	xchg   edx,eax
  4135d7:	pop    esi
  4135d8:	lods   al,BYTE PTR ds:[esi]
  4135d9:	fld    QWORD PTR [eax+0x2d]
  4135dc:	in     eax,0x49
  4135de:	call   0x3e43:0x22e76b97
  4135e5:	leave  
  4135e6:	push   ebp
  4135e7:	dec    ecx
  4135e8:	and    al,0x39
  4135ea:	leave  
  4135eb:	jns    0x41356f
  4135ed:	js     0x413612
  4135ef:	(bad)  
  4135f0:	fadd   QWORD PTR [edx]
  4135f2:	int    0x83
  4135f4:	mov    ebx,0x95eb8983
  4135f9:	jb     0x4135f0
  4135fb:	in     eax,0x6
  4135fd:	xchg   esi,eax
  4135fe:	xor    eax,0xff136279
  413603:	fdivr  QWORD PTR [edi-0x7ed46371]
  413609:	and    al,0x9d
  41360b:	frstpm(287 only) 
  41360d:	das    
  41360e:	mov    cl,0x79
  413610:	sbb    edi,DWORD PTR [esi]
  413612:	dec    ecx
  413613:	test   BYTE PTR [ecx-0x7b],dh
  413616:	dec    edi
  413617:	xchg   edx,eax
  413618:	dec    edx
  413619:	jae    0x41367a
  41361b:	mov    edx,0x5937efc9
  413620:	je     0x41364e
  413622:	add    DWORD PTR [eax],0x7634558a
  413628:	in     eax,0x29
  41362a:	add    al,BYTE PTR [esi]
  41362c:	cwde   
  41362d:	test   BYTE PTR [esi],ah
  41362f:	in     al,dx
  413630:	das    
  413631:	xlat   BYTE PTR ds:[ebx]
  413632:	dec    edx
  413633:	mov    ecx,0xa1b9b6c7
  413638:	and    dl,BYTE PTR [edi]
  41363a:	sub    DWORD PTR [ecx-0x3c8457fc],edx
  413640:	and    DWORD PTR [esi+0x54055f02],0xffffffaf
  413647:	dec    edx
  413648:	mov    ebx,0x1ddd0f0f
  41364d:	ins    BYTE PTR es:[edi],dx
  41364e:	cmp    eax,0x44e4a123
  413653:	scas   al,BYTE PTR es:[edi]
  413654:	pop    edi
  413655:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413656:	mov    edi,0x7e5c46b9
  41365b:	loope  0x413679
  41365d:	pop    eax
  41365e:	adc    BYTE PTR [ebp-0x55ca08ce],cl
  413664:	xchg   edi,eax
  413665:	cmp    BYTE PTR [eax+0x50955458],bh
  41366b:	shr    BYTE PTR [ebp+0x79c2ea98],0xd3
  413672:	pushf  
  413673:	pop    ss
  413674:	shl    BYTE PTR [esi+0x4e],0x98
  413678:	ffreep st(6)
  41367a:	out    0xc9,eax
  41367c:	mov    esp,0x3c8f4fa
  413681:	or     cl,bl
  413683:	bound  esp,QWORD PTR [esi+0x28cacd1d]
  413689:	dec    ecx
  41368a:	and    al,0x90
  41368c:	add    al,0x59
  41368e:	jmp    0x4999:0x2440d37f
  413695:	shl    DWORD PTR [esi+0x459cbc64],cl
  41369b:	mov    dh,0x5c
  41369d:	mov    bl,0x17
  41369f:	jecxz  0x413684
  4136a1:	mov    ds:0x35a68db1,eax
  4136a6:	mov    edi,0x5be2c4b0
  4136ab:	rcr    BYTE PTR [esi+0x13],0x8d
  4136af:	aaa    
  4136b0:	sar    DWORD PTR [edi+0x1f],0x3e
  4136b4:	pushf  
  4136b5:	adc    eax,0xad3c04db
  4136ba:	mov    cs:0xa191bef2,al
  4136c0:	inc    ebx
  4136c1:	arpl   WORD PTR [ecx],dx
  4136c3:	arpl   WORD PTR gs:[ebx-0xc05ce3],bp
  4136ca:	adc    eax,edx
  4136cc:	out    dx,eax
  4136cd:	in     eax,dx
  4136ce:	sbb    BYTE PTR [ebp-0x2],dl
  4136d1:	sbb    al,0x6d
  4136d3:	inc    ebx
  4136d4:	ins    BYTE PTR es:[edi],dx
  4136d5:	pop    ss
  4136d6:	sti    
  4136d7:	push   es
  4136d8:	out    dx,al
  4136d9:	out    dx,al
  4136da:	or     BYTE PTR [ecx-0x13],0x60
  4136de:	jge    0x41367c
  4136e0:	stc    
  4136e1:	lods   eax,DWORD PTR ds:[esi]
  4136e2:	mov    esi,0xd4bfede
  4136e7:	std    
  4136e8:	mov    eax,0x1ef8badb
  4136ed:	ror    BYTE PTR [esi+0x636e5b75],cl
  4136f3:	sbb    bl,BYTE PTR [esi]
  4136f5:	and    edi,esi
  4136f7:	pushf  
  4136f8:	sbb    ebp,edx
  4136fa:	and    bl,dl
  4136fc:	lock pop eax
  4136fe:	mov    eax,0xa6af997a
  413703:	and    ebx,DWORD PTR [ecx]
  413705:	or     al,BYTE PTR [ecx+0x72]
  413708:	push   ebp
  413709:	sbb    BYTE PTR [ebp+0x17ed563],dl
  41370f:	sbb    bl,BYTE PTR [eax]
  413711:	ret    
  413712:	xor    ah,dl
  413714:	loop   0x4136c1
  413716:	js     0x4136b5
  413718:	push   esp
  413719:	jae    0x4136ec
  41371b:	fdivr  QWORD PTR [edx+0x6aba2ba9]
  413721:	dec    eax
  413722:	jmp    0x47d6:0x798aea1c
  413729:	adc    DWORD PTR [ebp-0x74],esi
  41372c:	repz sbb eax,0xbb1f6cb4
  413732:	xchg   BYTE PTR [ecx-0x77],cl
  413735:	or     al,0xeb
  413737:	fwait
  413738:	cmp    BYTE PTR [edi+0x2f],al
  41373b:	dec    DWORD PTR [edi+0x17]
  41373e:	mul    BYTE PTR [eax]
  413740:	mov    esi,0xc107c1b9
  413745:	out    0x1,eax
  413747:	or     ah,BYTE PTR [edx-0xd]
  41374a:	adc    eax,0x50fa12d6
  41374f:	pop    esp
  413750:	xor    BYTE PTR [ecx],cl
  413752:	daa    
  413753:	or     al,0x70
  413755:	cmp    al,0xf6
  413757:	xor    al,0x85
  413759:	out    dx,al
  41375a:	sti    
  41375b:	jg     0x4136e5
  41375d:	shl    BYTE PTR [esi+0x2d],0x23
  413761:	sub    al,0xd2
  413763:	mov    esp,0xaf70a848
  413768:	repz in eax,0x62
  41376b:	xchg   edi,eax
  41376c:	into   
  41376d:	cwde   
  41376e:	aam    0x57
  413770:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413771:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413772:	sbb    bh,BYTE PTR [esi]
  413774:	retf   
  413775:	mov    ecx,0xd91e9edb
  41377a:	sysenter 
  41377c:	mov    dl,BYTE PTR [eax+0x1a33408f]
  413782:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413783:	call   0x8b5f:0x603d1c4b
  41378a:	jg     0x413711
  41378c:	cld    
  41378d:	hlt    
  41378e:	shl    BYTE PTR [edx+ebp*2-0x26b0927c],1
  413795:	in     al,0x32
  413797:	loop   0x41373c
  413799:	leave  
  41379a:	dec    eax
  41379b:	loop   0x4137f0
  41379d:	or     eax,0x4fa68ea6
  4137a2:	and    ebx,DWORD PTR [ebx+0x48]
  4137a5:	or     edi,DWORD PTR [edi]
  4137a7:	in     eax,dx
  4137a8:	add    BYTE PTR [esi-0x4],0xd6
  4137ac:	jle    0x4137db
  4137ae:	adc    dh,bh
  4137b0:	adc    al,0x33
  4137b2:	jmp    0x55a5:0xca313015
  4137b9:	cwde   
  4137ba:	out    dx,eax
  4137bb:	fst    DWORD PTR [ecx]
  4137bd:	mov    ah,0xc9
  4137bf:	inc    ecx
  4137c0:	or     ebx,DWORD PTR [eax+esi*8+0x6]
  4137c4:	mov    es,WORD PTR [ebx-0x28]
  4137c7:	cmp    BYTE PTR [eax+0x5f45b4e],bh
  4137cd:	ficom  DWORD PTR [esi]
  4137cf:	(bad)  
  4137d0:	imul   eax,DWORD PTR [edi-0x16],0x2c9c078
  4137d7:	add    dl,dh
  4137d9:	test   DWORD PTR [ebx+0x6e],ebx
  4137dc:	mov    al,ds:0xb2828864
  4137e1:	out    dx,eax
  4137e2:	cmp    BYTE PTR [esi+0x4a],bl
  4137e5:	xchg   esi,eax
  4137e6:	mov    dl,0xb4
  4137e8:	(bad)
  4137eb:	dec    ecx
  4137ec:	scas   al,BYTE PTR es:[edi]
  4137ed:	mov    ecx,0xbb33fc6b
  4137f2:	sub    eax,eax
  4137f4:	mov    eax,esi
  4137f6:	dec    esp
  4137f7:	sar    DWORD PTR [edx],0xb5
  4137fa:	add    eax,0xd93ba0e8
  4137ff:	xchg   esp,eax
  413800:	stos   BYTE PTR es:[edi],al
  413801:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413802:	pop    esi
  413803:	pop    ecx
  413804:	retf   0xae4d
  413807:	lds    ebp,FWORD PTR [eax]
  413809:	pop    esi
  41380a:	imul   eax,DWORD PTR [ebp-0x59],0xabe039a5
  413811:	repz fiadd WORD PTR [esi]
  413814:	xchg   ebp,eax
  413815:	cli    
  413816:	retf   0x7379
  413819:	ds ins DWORD PTR es:[edi],dx
  41381b:	mov    ds:0x73a5b116,al
  413820:	push   ss
  413821:	jno    0x41380d
  413823:	mov    esp,0x7c4e6043
  413828:	cmp    eax,0xfd9205e1
  41382d:	aaa    
  41382e:	test   DWORD PTR [ecx-0x1f613767],eax
  413834:	(bad)  
  413835:	ffree  st(2)
  413837:	jae    0x4137f4
  413839:	and    DWORD PTR [eax],0x2d
  41383c:	retf   0x16c1
  41383f:	fcmovu st,st(7)
  413841:	mov    al,0x50
  413843:	lock mov bl,0x1e
  413846:	xlat   BYTE PTR ds:[ebx]
  413847:	jle    0x41385d
  413849:	push   edi
  41384a:	pop    es
  41384b:	adc    ecx,DWORD PTR [eiz*2+0x2e37b76b]
  413852:	sub    al,0x3d
  413854:	adc    cl,al
  413856:	mov    DWORD PTR [esi],ecx
  413858:	dec    esp
  413859:	fcmovnb st,st(5)
  41385b:	xor    dl,BYTE PTR [ebx]
  41385d:	push   ebx
  41385e:	ss loopne 0x413840
  413861:	(bad)  
  413862:	push   eax
  413863:	inc    ecx
  413864:	pop    ss
  413865:	xor    eax,0xbead12d3
  41386a:	inc    edx
  41386b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41386c:	xlat   BYTE PTR ds:[ebx]
  41386d:	mov    al,ds:0x3d98bcc
  413872:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413873:	mov    eax,ds:0x3565f7
  413878:	and    edx,0x7b
  41387b:	call   0x965637eb
  413880:	ins    BYTE PTR es:[edi],dx
  413881:	les    edx,FWORD PTR [eax]
  413883:	fnsave [esi]
  413885:	int3   
  413886:	(bad)  
  413887:	jl     0x41384a
  413889:	pop    edi
  41388a:	xor    BYTE PTR [eax+0x75],ch
  41388d:	inc    esp
  41388e:	or     esi,DWORD PTR [esi-0x30]
  413891:	jmp    0x4dfeada6
  413896:	mov    edx,0xb51faeea
  41389b:	push   ecx
  41389c:	mov    dh,0x27
  41389e:	and    cl,0x58
  4138a1:	stos   DWORD PTR es:[edi],eax
  4138a2:	pop    esi
  4138a3:	xchg   ebx,eax
  4138a4:	xchg   ebp,eax
  4138a5:	idiv   BYTE PTR [edi-0x14364e8b]
  4138ab:	js     0x4138cc
  4138ad:	xor    BYTE PTR ds:0x3a0926b6,dh
  4138b3:	add    ah,ch
  4138b5:	nop
  4138b6:	jecxz  0x413899
  4138b8:	popa   
  4138b9:	int    0xce
  4138bb:	xor    BYTE PTR [esi-0x7c1487cf],dl
  4138c1:	dec    esp
  4138c2:	mov    ebx,0xd8bf0fea
  4138c7:	inc    ecx
  4138c8:	xor    ecx,DWORD PTR [edx+0x5c]
  4138cb:	mov    al,ds:0xd239f7b9
  4138d0:	repz cmp DWORD PTR [ebx+0x2b3c3bc7],esi
  4138d7:	push   ds
  4138d8:	ss mov ah,0xb3
  4138db:	dec    esi
  4138dc:	dec    ebx
  4138dd:	mov    ebx,0xdf91da78
  4138e2:	(bad)  
  4138e3:	lahf   
  4138e4:	(bad)  
  4138e5:	ficom  DWORD PTR [ebp+0x394bb5f3]
  4138eb:	es (bad) 
  4138ee:	fst    DWORD PTR [ecx+0x5f4675e9]
  4138f4:	cmp    DWORD PTR [ebx],ecx
  4138f6:	dec    ecx
  4138f7:	xor    DWORD PTR [ebx+0x3825b91],0xffffffe4
  4138fe:	mov    ebp,0x7c38205
  413903:	out    0x7c,eax
  413905:	push   ds
  413906:	out    0xef,eax
  413908:	cdq    
  413909:	pop    es
  41390a:	pushf  
  41390b:	sahf   
  41390c:	(bad)
  41390f:	mov    bl,0xb1
  413911:	call   0xed9cb15c
  413916:	push   esp
  413917:	adc    al,BYTE PTR [ebx-0x55]
  41391a:	push   ds
  41391b:	fdiv   DWORD PTR [ebp+0x39581da3]
  413921:	or     DWORD PTR [eax+edx*4-0x5f],ebx
  413925:	inc    esi
  413926:	mov    esi,0x379102af
  41392b:	dec    edi
  41392c:	lods   eax,DWORD PTR ds:[esi]
  41392d:	mov    esi,0xf94512a0
  413932:	xchg   edx,eax
  413933:	sbb    BYTE PTR es:[edx],0x70
  413937:	dec    ebp
  413938:	fist   DWORD PTR [ebx+0x21643049]
  41393e:	sbb    al,bl
  413940:	repz and eax,0x66c58de7
  413946:	outs   dx,DWORD PTR ds:[esi]
  413947:	inc    esp
  413948:	loop   0x4138cd
  41394a:	mov    eax,ds:0x37c8aba2
  41394f:	adc    BYTE PTR [esi+eiz*2],al
  413952:	ins    DWORD PTR es:[edi],dx
  413953:	call   0x684f:0x1e6b9e2
  41395a:	rcl    BYTE PTR [esi-0xfa64048],cl
  413960:	int3   
  413961:	ret    0x8702
  413964:	ja     0x413965
  413966:	push   esi
  413967:	or     al,0xcd
  413969:	cmp    al,0x51
  41396b:	cmp    DWORD PTR [ebx+ecx*4-0x1862a5b7],ebx
  413972:	fimul  WORD PTR [eax-0x7e]
  413975:	mov    bl,0xc6
  413977:	cmp    bh,BYTE PTR [ebx+edi*2-0x33]
  41397b:	and    eax,0x1a57595e
  413980:	jl     0x41392f
  413982:	push   0x2b
  413984:	in     al,dx
  413985:	hlt    
  413986:	jg     0x413a05
  413988:	pop    es
  413989:	test   BYTE PTR [esi],ch
  41398b:	lods   al,BYTE PTR ds:[esi]
  41398c:	dec    edx
  41398d:	xor    eax,0x3afaadb0
  413992:	cmp    BYTE PTR ds:0x99dd301d,ah
  413998:	icebp  
  413999:	jecxz  0x41396c
  41399b:	cs retf 
  41399d:	inc    eax
  41399e:	popf   
  41399f:	mov    ebx,0xaec17924
  4139a4:	clc    
  4139a5:	add    BYTE PTR [ebx-0x2ce61208],0x1c
  4139ac:	xchg   BYTE PTR [ecx+0x630e155a],al
  4139b2:	vpshaq xmm5,[edx-0x5279733f],xmm7
  4139bb:	sbb    al,BYTE PTR ds:0xa0746afb
  4139c1:	imul   ebx,eax,0xffffffec
  4139c4:	sub    BYTE PTR [edi+eiz*4+0x17391dbc],ah
  4139cb:	pusha  
  4139cc:	aad    0xc0
  4139ce:	add    bh,ch
  4139d0:	mov    WORD PTR [esi-0x44],ss
  4139d3:	jle    0x413a28
  4139d5:	ds dec esi
  4139d7:	icebp  
  4139d8:	pop    eax
  4139d9:	or     dl,BYTE PTR [ecx+0x2dec8798]
  4139df:	and    edx,DWORD PTR ds:0xe429286f
  4139e5:	pop    ebp
  4139e6:	cmp    eax,DWORD PTR ds:0x3c13977
  4139ec:	stc    
  4139ed:	enter  0xcb6c,0xfd
  4139f1:	sub    bh,BYTE PTR [edi]
  4139f3:	ret    0xf3f1
  4139f6:	dec    ebp
  4139f7:	imul   ebp,DWORD PTR [ebx+0x3460b85d],0xfc728a4
  413a01:	mov    WORD PTR [ebp-0x79],es
  413a04:	sti    
  413a05:	in     eax,dx
  413a06:	xchg   DWORD PTR [ebx+0x58bb7c6a],edi
  413a0c:	xlat   BYTE PTR ds:[ebx]
  413a0d:	inc    esi
  413a0e:	jae    0x4139ca
  413a10:	sub    ecx,DWORD PTR [ecx]
  413a12:	xor    eax,0xe08d83fd
  413a17:	stc    
  413a18:	cmp    BYTE PTR [eax+esi*1-0x1f69685a],ah
  413a1f:	fbstp  TBYTE PTR [edx+0x1d32f41]
  413a25:	and    al,0xe9
  413a27:	push   ds
  413a28:	inc    edx
  413a29:	out    dx,al
  413a2a:	sub    DWORD PTR [edi-0x35bf27ab],edx
  413a30:	fidivr WORD PTR [eax]
  413a32:	pop    ecx
  413a33:	xchg   esp,eax
  413a34:	and    edx,DWORD PTR [ebx+0x44]
  413a37:	(bad)  
  413a38:	sar    DWORD PTR [edi-0x427e2f86],1
  413a3e:	ins    DWORD PTR es:[edi],dx
  413a3f:	js     0x413a2b
  413a41:	and    al,BYTE PTR [edi]
  413a43:	or     eax,DWORD PTR [ecx+0x68]
  413a46:	add    DWORD PTR [esi-0x6f80c084],ebx
  413a4c:	lods   eax,DWORD PTR ds:[esi]
  413a4d:	xor    BYTE PTR [ecx+edx*4-0x5b],dh
  413a51:	xor    esi,DWORD PTR [edi+0x1c]
  413a54:	and    eax,0x6b10bd55
  413a59:	cmp    DWORD PTR [edx-0x1b],edx
  413a5c:	scas   al,BYTE PTR es:[edi]
  413a5d:	in     eax,dx
  413a5e:	cld    
  413a5f:	mov    esi,0xc70a184
  413a64:	pop    es
  413a65:	in     eax,dx
  413a66:	adc    edi,DWORD PTR [edi]
  413a68:	inc    esi
  413a69:	cmp    DWORD PTR [eax-0x38],0xfffffff0
  413a6d:	jl     0x413aaa
  413a6f:	shl    DWORD PTR [bp+si],cl
  413a72:	test   edx,ebx
  413a74:	lahf   
  413a75:	add    bl,al
  413a77:	pop    eax
  413a78:	ins    DWORD PTR es:[edi],dx
  413a79:	and    dl,dl
  413a7b:	loope  0x413af5
  413a7d:	push   esi
  413a7e:	add    BYTE PTR [ecx+eiz*8-0x2b],al
  413a82:	leave  
  413a83:	pushf  
  413a84:	xchg   ecx,eax
  413a85:	xchg   edi,eax
  413a86:	jno    0x413a14
  413a88:	or     al,0x25
  413a8a:	pop    ecx
  413a8b:	pop    ecx
  413a8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a8d:	(bad)  
  413a8e:	mov    edi,0x264742fd
  413a93:	loop   0x413a47
  413a95:	(bad)  
  413a96:	mov    edx,DWORD PTR [ebp+0x3a19d243]
  413a9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a9d:	aad    0x66
  413a9f:	xchg   ebp,eax
  413aa0:	(bad)  
  413aa1:	mov    ebx,0xc7035c84
  413aa6:	shr    BYTE PTR [eax-0x4fc0d27e],1
  413aac:	ins    DWORD PTR es:[edi],dx
  413aad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413aae:	xor    edx,ebp
  413ab0:	nop
  413ab1:	jno    0x413a9f
  413ab3:	call   0xe05b59ae
  413ab8:	pop    ss
  413ab9:	imul   edx,DWORD PTR [ebp-0x14],0x41
  413abd:	or     DWORD PTR [ebx+0x15],esp
  413ac0:	mov    dl,0xe3
  413ac2:	xor    eax,0x7e926c9f
  413ac7:	es sti 
  413ac9:	rcr    BYTE PTR [ebx-0x13],1
  413acc:	sub    DWORD PTR [esi+0x17],esp
  413acf:	aam    0xd3
  413ad1:	sbb    DWORD PTR [ebp+eiz*1-0x5c465aa5],ecx
  413ad8:	in     eax,0x30
  413ada:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413adb:	xchg   esp,eax
  413adc:	repnz inc ecx
  413ade:	inc    edi
  413adf:	xor    ah,BYTE PTR [edx+0x2b494c34]
  413ae5:	out    0x52,eax
  413ae7:	ja     0x413b35
  413ae9:	xchg   ebx,eax
  413aea:	imul   ebp,DWORD PTR [eax],0x14d4e5c1
  413af0:	jmp    0xb8b4:0xa67b609d
  413af7:	sbb    eax,0x94bb0256
  413afc:	pop    edi
  413afd:	push   0xffffff93
  413aff:	shr    BYTE PTR [esi+eax*8],1
  413b02:	mov    ch,0x8f
  413b04:	retf   0x5693
  413b07:	rol    ah,1
  413b09:	mov    edi,0x548173e5
  413b0e:	out    dx,eax
  413b0f:	into   
  413b10:	cdq    
  413b11:	push   edi
  413b12:	push   eax
  413b13:	ss pop ds
  413b15:	jne    0x413b50
  413b17:	or     ebp,DWORD PTR [ebx]
  413b19:	ins    DWORD PTR es:[edi],dx
  413b1a:	mov    bl,0xc7
  413b1c:	dec    esi
  413b1d:	xchg   ecx,eax
  413b1e:	leave  
  413b1f:	sub    dh,BYTE PTR ds:0x67ed4804
  413b25:	pop    ss
  413b26:	test   ebp,ecx
  413b28:	shr    DWORD PTR [ecx-0x4698e34a],cl
  413b2e:	fcom   DWORD PTR [ebx+0x34]
  413b31:	mov    dl,0x44
  413b33:	paddb  mm6,mm7
  413b36:	shl    BYTE PTR [eax],cl
  413b38:	push   es
  413b39:	sbb    edi,DWORD PTR [edi]
  413b3b:	jns    0x413aed
  413b3d:	pop    esi
  413b3e:	push   esp
  413b3f:	xor    BYTE PTR [edx],ch
  413b41:	jl     0x413ae0
  413b43:	loopne 0x413b3b
  413b45:	mov    al,0x17
  413b47:	add    DWORD PTR [edx],0x9
  413b4a:	push   0x48
  413b4c:	push   eax
  413b4d:	pop    es
  413b4e:	jl     0x413b34
  413b50:	rol    DWORD PTR [eax],0x2f
  413b53:	call   0xc71d87a9
  413b58:	mov    ecx,0x978a1e4
  413b5d:	into   
  413b5e:	sub    al,0xb3
  413b60:	adc    BYTE PTR [edi-0x53d2f402],cl
  413b66:	jno    0x413b4e
  413b68:	popf   
  413b69:	push   ebx
  413b6a:	push   es
  413b6b:	repz xlat BYTE PTR gs:[ebx]
  413b6e:	pop    es
  413b6f:	mov    BYTE PTR [esi+0x2f],dh
  413b72:	sub    dh,BYTE PTR [ecx+0x5a]
  413b75:	sub    BYTE PTR [eax-0x383c504a],bh
  413b7b:	int    0xfe
  413b7d:	stos   DWORD PTR es:[edi],eax
  413b7e:	jne    0x413ba2
  413b80:	add    DWORD PTR [ebp-0x3e],edi
  413b83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b84:	xchg   BYTE PTR [eax],dh
  413b86:	addr16 push ss
  413b88:	das    
  413b89:	dec    eax
  413b8a:	pop    ebx
  413b8b:	pop    edi
  413b8c:	adc    al,0xb1
  413b8e:	test   BYTE PTR [edx+0x711ffc64],bl
  413b94:	inc    edi
  413b95:	into   
  413b96:	aam    0x61
  413b98:	test   eax,0x4465024d
  413b9d:	add    cl,BYTE PTR [ecx+0x28687400]
  413ba3:	dec    edi
  413ba4:	inc    esp
  413ba5:	sahf   
  413ba6:	test   BYTE PTR [eax-0x46a32a06],dl
  413bac:	xchg   esi,eax
  413bad:	or     BYTE PTR [ebp-0x7d8b7329],al
  413bb3:	popa   
  413bb4:	ja     0x413c12
  413bb6:	es (bad) 
  413bb9:	les    eax,FWORD PTR [ecx-0x38]
  413bbc:	push   eax
  413bbd:	xchg   esp,eax
  413bbe:	push   edi
  413bbf:	dec    eax
  413bc0:	sahf   
  413bc1:	jg     0x413b5a
  413bc3:	cmp    ch,BYTE PTR [ebp-0x3f2a9e6c]
  413bc9:	jp     0x413c22
  413bcb:	pushf  
  413bcc:	push   cs
  413bcd:	mov    dl,BYTE PTR [ecx+0x771189f7]
  413bd3:	or     dh,bl
  413bd5:	loope  0x413bf1
  413bd7:	mov    al,ds:0xf01f7ee1
  413bdc:	outs   dx,DWORD PTR ds:[esi]
  413bdd:	les    edx,FWORD PTR [edi-0x1c93d58d]
  413be3:	xchg   al,dh
  413be5:	push   0xaa0e5b24
  413bea:	fcomi  st,st(5)
  413bec:	sahf   
  413bed:	dec    edx
  413bee:	nop    DWORD PTR [ebx]
  413bf1:	ins    DWORD PTR es:[edi],dx
  413bf2:	xchg   ebx,eax
  413bf3:	xchg   esi,eax
  413bf4:	and    al,0xca
  413bf6:	xchg   esi,eax
  413bf7:	pushf  
  413bf8:	cmp    DWORD PTR [ecx+0x60],ebp
  413bfb:	ror    BYTE PTR [esi+0x626d220c],cl
  413c01:	imul   eax,DWORD PTR [esi-0x12e0c086],0xdcfce2a6
  413c0b:	cdq    
  413c0c:	lods   eax,DWORD PTR ds:[esi]
  413c0d:	push   cs
  413c0e:	lock mov al,cs:0x5bfab5b
  413c15:	sub    BYTE PTR [edx-0x72ab8fbf],bl
  413c1b:	bnd jmp 0x413ba5
  413c1e:	cmp    ecx,DWORD PTR [esi+0x34e62483]
  413c24:	jo     0x413be4
  413c26:	mov    edi,0x1d455323
  413c2b:	loop   0x413c4d
  413c2d:	pop    ebp
  413c2e:	push   es
  413c2f:	(bad)  
  413c30:	or     BYTE PTR [ecx-0x300661c8],dh
  413c36:	retf   
  413c37:	push   ebx
  413c38:	add    ebx,DWORD PTR [ebp+0x6cd29fe2]
  413c3e:	ret    
  413c3f:	aam    0xea
  413c41:	das    
  413c42:	adc    BYTE PTR [ebp-0x59e421a0],0x12
  413c49:	sahf   
  413c4a:	call   0x9d6b:0x5a3eb091
  413c51:	out    0xba,al
  413c53:	mul    DWORD PTR [ebp-0x7b742372]
  413c59:	dec    esp
  413c5a:	xchg   BYTE PTR [edi+0x688d2f4f],bh
  413c60:	scas   eax,DWORD PTR es:[edi]
  413c61:	icebp  
  413c62:	(bad)  
  413c63:	scas   eax,DWORD PTR es:[edi]
  413c64:	stos   BYTE PTR es:[edi],al
  413c65:	and    BYTE PTR [eax],ch
  413c67:	adc    ebx,DWORD PTR [edx]
  413c69:	popf   
  413c6a:	xchg   esp,eax
  413c6b:	scas   al,BYTE PTR es:[edi]
  413c6c:	ja     0x413c15
  413c6e:	aad    0x6f
  413c70:	xchg   ebx,eax
  413c71:	cs xor eax,0x6373308c
  413c77:	addr16 push 0x1ff41318
  413c7d:	(bad)  
  413c7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c7f:	xor    BYTE PTR [ecx-0x3],0xdc
  413c83:	jge    0x413cd7
  413c85:	imul   eax,DWORD PTR [edi],0x200a89bb
  413c8b:	mov    ?,WORD PTR [esp+edx*1]
  413c8e:	pop    edi
  413c8f:	push   edi
  413c90:	sbb    bh,BYTE PTR [ebx]
  413c92:	and    dl,BYTE PTR [edi+0x8]
  413c95:	sbb    eax,0xce083063
  413c9a:	call   0x678627b5
  413c9f:	cmp    BYTE PTR [ebx],bh
  413ca1:	jns    0x413d21
  413ca3:	enter  0xf3e0,0xd0
  413ca7:	jecxz  0x413c6b
  413ca9:	dec    ebx
  413caa:	add    eax,0x76f65d69
  413caf:	aaa    
  413cb0:	sbb    DWORD PTR ds:0x5b92986,0xffffffa4
  413cb7:	and    eax,DWORD PTR [esi+0x18]
  413cba:	lahf   
  413cbb:	and    esi,esi
  413cbd:	(bad)  
  413cbe:	cwde   
  413cbf:	fist   DWORD PTR [edi-0x77]
  413cc2:	cmp    DWORD PTR [eax+esi*2-0x72],esi
  413cc6:	ror    ebp,1
  413cc8:	test   al,0x3
  413cca:	xchg   ebx,eax
  413ccb:	and    al,0xf1
  413ccd:	mov    ebp,0xb17cb73c
  413cd2:	aam    0x29
  413cd4:	or     eax,0xd25821bf
  413cd9:	or     BYTE PTR [ebp+0x7],bh
  413cdc:	loop   0x413d22
  413cde:	mov    bh,0xf5
  413ce0:	jmp    0x21f7d247
  413ce5:	ins    BYTE PTR es:[edi],dx
  413ce6:	fsubr  DWORD PTR [ebp+0x46]
  413ce9:	call   0x7edf9851
  413cee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cef:	icebp  
  413cf0:	shl    DWORD PTR [ebx],0x1a
  413cf3:	loopne 0x413cd9
  413cf5:	sbb    bl,BYTE PTR [edx-0x7d6efa17]
  413cfb:	mov    ecx,0xe2ef3cd0
  413d00:	call   0x519:0xdd10d775
  413d07:	call   0x6aba:0x2a5b53ab
  413d0e:	jae    0x413d2c
  413d10:	adc    DWORD PTR [ecx-0x45],0xd635234
  413d17:	sub    al,0xe6
  413d19:	stos   DWORD PTR es:[edi],eax
  413d1a:	(bad)  
  413d1b:	sub    al,0x41
  413d1d:	jg     0x413d49
  413d1f:	push   ds
  413d20:	mov    esp,0xfa39e6de
  413d25:	imul   esi,DWORD PTR [eax-0xc],0xffffffe4
  413d29:	mov    eax,0x9d5e7ede
  413d2e:	inc    ebp
  413d2f:	(bad)  
  413d30:	fidiv  WORD PTR [edx]
  413d32:	push   eax
  413d33:	add    al,0x1a
  413d35:	xchg   ebx,eax
  413d36:	cli    
  413d37:	mov    ebp,0xcd7412fe
  413d3c:	bound  ebx,QWORD PTR [edx+eax*8-0x48abd403]
  413d43:	(bad)  
  413d44:	push   0x40
  413d46:	in     al,dx
  413d47:	int3   
  413d48:	aas    
  413d49:	ret    0x1e58
  413d4c:	sahf   
  413d4d:	mov    edi,0x8372a319
  413d52:	mov    ds:0x39c42d38,al
  413d57:	inc    edi
  413d58:	enter  0xe862,0x8a
  413d5c:	mov    cl,0x19
  413d5e:	cli    
  413d5f:	das    
  413d60:	dec    esp
  413d61:	lds    edx,FWORD PTR [ebx+ebp*4-0x67]
  413d65:	popf   
  413d66:	stos   DWORD PTR es:[edi],eax
  413d67:	xchg   esi,eax
  413d68:	mov    dh,0xdb
  413d6a:	or     BYTE PTR [edi],bh
  413d6c:	ss sbb al,0x11
  413d6f:	xchg   edx,eax
  413d70:	and    DWORD PTR [esi+0x7d],esi
  413d73:	jne    0x413d1b
  413d75:	daa    
  413d76:	in     eax,dx
  413d77:	aad    0x25
  413d79:	push   esp
  413d7a:	dec    ecx
  413d7b:	in     al,0xf
  413d7d:	jmp    0xdec5ed29
  413d82:	sub    BYTE PTR [edi+0x1b],0x40
  413d86:	or     esp,DWORD PTR [esp+esi*2-0x54]
  413d8a:	mov    ah,bh
  413d8c:	aas    
  413d8d:	xchg   edx,eax
  413d8e:	push   ds
  413d8f:	(bad)  
  413d90:	jne    0x413e09
  413d92:	mov    ebx,0xc8798d89
  413d97:	aaa    
  413d98:	cmp    al,0x98
  413d9a:	cmp    BYTE PTR [edi-0xbef6182],0xfb
  413da1:	push   eax
  413da2:	lock loop 0x413dd7
  413da5:	je     0x413d6c
  413da7:	pop    esp
  413da8:	rol    DWORD PTR [ebp-0x587bb16f],0xf8
  413daf:	stc    
  413db0:	jl     0x413dd1
  413db2:	adc    eax,0x59fb4bd2
  413db7:	in     eax,dx
  413db8:	mov    ch,0x49
  413dba:	mov    bh,BYTE PTR [ebx-0x49]
  413dbd:	hlt    
  413dbe:	add    ebx,DWORD PTR ss:[edx+0x12b1c34e]
  413dc5:	shl    DWORD PTR [esp+edx*8+0x55],cl
  413dc9:	mov    WORD PTR [eax],es
  413dcb:	ltr    WORD PTR [ebp-0xfb3f56f]
  413dd2:	(bad)  
  413dd3:	mov    eax,ds:0xbd0c350f
  413dd8:	cld    
  413dd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413dda:	adc    edi,edi
  413ddc:	and    DWORD PTR [edx-0x499aea81],0x49
  413de3:	add    esi,DWORD PTR [edi]
  413de5:	dec    ebx
  413de6:	popa   
  413de7:	jle    0x413dc5
  413de9:	push   0x6d7e2689
  413dee:	aas    
  413def:	aam    0x58
  413df1:	xchg   ebx,eax
  413df2:	xchg   DWORD PTR [ecx+0x62],ebx
  413df5:	jbe    0x413de9
  413df7:	retf   
  413df8:	cmp    BYTE PTR [ebx+0x50],bl
  413dfb:	pop    ebx
  413dfc:	lea    ebp,[esi-0x14]
  413dff:	popf   
  413e00:	inc    edx
  413e01:	das    
  413e02:	sbb    eax,0x102e51e3
  413e07:	dec    edx
  413e08:	or     eax,DWORD PTR [edx-0x6ae1672]
  413e0e:	(bad)  
  413e0f:	iret   
  413e10:	jae    0x413dd2
  413e12:	push   eax
  413e13:	daa    
  413e14:	inc    ebp
  413e15:	(bad)  
  413e16:	cmp    BYTE PTR [edx-0x9],bl
  413e19:	inc    ecx
  413e1a:	ror    DWORD PTR [ebp+0x6d336b64],0x79
  413e21:	out    dx,eax
  413e22:	push   ebx
  413e23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e24:	cld    
  413e25:	loop   0x413da9
  413e27:	(bad)  
  413e28:	loopne 0x413ea4
  413e2a:	jns    0x413dcb
  413e2c:	sub    BYTE PTR [esi+0x7344960f],dl
  413e32:	inc    esp
  413e33:	(bad)  
  413e34:	push   0x56
  413e36:	xchg   ebp,eax
  413e37:	loopne 0x413e51
  413e39:	and    ebp,ecx
  413e3b:	jbe    0x413ea1
  413e3d:	mov    al,0x84
  413e3f:	cwde   
  413e40:	pop    esi
  413e41:	fs push es
  413e43:	inc    ebp
  413e44:	jg     0x413df8
  413e46:	adc    al,0x63
  413e48:	rcl    DWORD PTR [edi],0x45
  413e4b:	and    ecx,0xffffff82
  413e4e:	push   esp
  413e4f:	xchg   edi,eax
  413e50:	adc    al,cl
  413e52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e53:	adc    DWORD PTR [eax],0x5978ab71
  413e59:	mov    al,0xad
  413e5b:	jns    0x413e21
  413e5d:	jbe    0x413e1b
  413e5f:	aas    
  413e60:	xor    eax,0xb6932559
  413e65:	aad    0x39
  413e67:	inc    ebx
  413e68:	push   ds
  413e69:	dec    eax
  413e6a:	push   0x5d
  413e6c:	sar    DWORD PTR [eax+0x54657741],cl
  413e72:	xor    eax,0xdfccd33b
  413e77:	scas   al,BYTE PTR es:[edi]
  413e78:	mov    al,ds:0xcbee2acd
  413e7d:	mov    dh,0x18
  413e7f:	pop    edx
  413e80:	xor    eax,0x45b4a64f
  413e85:	or     ebp,DWORD PTR [edx-0x601be7d0]
  413e8b:	push   ebp
  413e8c:	mov    eax,ds:0x4928ce42
  413e91:	(bad)  
  413e92:	ds pop eax
  413e94:	xor    edx,esp
  413e96:	adc    esp,eax
  413e98:	push   0x56
  413e9a:	push   edi
  413e9b:	mov    ebx,0xdd20bb6f
  413ea0:	sar    BYTE PTR [edi+edi*8],cl
  413ea3:	paddd  mm3,mm0
  413ea6:	and    BYTE PTR [ebx+esi*4-0x1159234],al
  413ead:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413eae:	mov    dl,0x63
  413eb0:	pop    ebx
  413eb1:	mov    ebx,0xccb9ff3c
  413eb6:	sbb    ebx,DWORD PTR [ebx+0x59]
  413eb9:	pop    esp
  413eba:	mov    ebp,0xec9898b0
  413ebf:	and    ch,BYTE PTR [ebp+0xa4b3bb6]
  413ec5:	inc    edx
  413ec6:	ficomp WORD PTR [edx+0x20efacc4]
  413ecc:	sub    eax,0xc4ff6e14
  413ed1:	nop
  413ed2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ed3:	(bad)  
  413ed4:	push   cs
  413ed5:	sbb    ecx,DWORD PTR [edi]
  413ed7:	pusha  
  413ed8:	inc    eax
  413ed9:	stos   DWORD PTR es:[edi],eax
  413eda:	ins    BYTE PTR es:[edi],dx
  413edb:	mov    bh,0xd1
  413edd:	cld    
  413ede:	ja     0x413ed7
  413ee0:	lock fldz 
  413ee3:	(bad)  
  413ee4:	and    DWORD PTR [ebx-0x30],eax
  413ee7:	cwde   
  413ee8:	bound  esp,QWORD PTR [ecx-0x7da7efbe]
  413eee:	call   0x27b6:0x39ba2930
  413ef5:	xor    al,0xb9
  413ef7:	fst    QWORD PTR [edx]
  413ef9:	push   eax
  413efa:	nop
  413efb:	push   cs
  413efc:	test   DWORD PTR [ebx-0x3f],0x6de7dcd8
  413f03:	icebp  
  413f04:	sub    eax,DWORD PTR [eax+0x7d1199fd]
  413f0a:	imul   ecx,DWORD PTR [ebx+eax*8],0xffffff87
  413f0e:	jp     0x413f43
  413f10:	dec    eax
  413f11:	add    al,ah
  413f13:	rcr    BYTE PTR [ebp-0x2f],0x5f
  413f17:	push   edx
  413f18:	(bad)  
  413f19:	pop    ebp
  413f1a:	push   es
  413f1b:	jp     0x413efe
  413f1d:	pop    eax
  413f1e:	jnp    0x413f42
  413f20:	ror    al,1
  413f22:	pop    ecx
  413f23:	test   BYTE PTR [ebx],ah
  413f25:	rep repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f28:	mov    BYTE PTR [ecx-0xd],0xfe
  413f2c:	scas   eax,DWORD PTR es:[edi]
  413f2d:	arpl   WORD PTR [ebp+0x4a],di
  413f30:	int3   
  413f31:	inc    ecx
  413f32:	(bad)  
  413f33:	int3   
  413f34:	(bad)  
  413f35:	push   ebx
  413f36:	inc    edi
  413f37:	pop    ecx
  413f38:	dec    esp
  413f39:	out    dx,eax
  413f3a:	in     al,0xdf
  413f3c:	call   0x90f4cc26
  413f41:	pop    esi
  413f42:	shld   DWORD PTR [ebp+0x6cc85503],edi,cl
  413f49:	pop    ds
  413f4a:	pop    edi
  413f4b:	repnz mov esi,0xa58d43f6
  413f51:	pop    esi
  413f52:	xchg   ebx,eax
  413f53:	inc    edx
  413f54:	popf   
  413f55:	jg     0x413f33
  413f57:	ins    DWORD PTR es:[edi],dx
  413f58:	sahf   
  413f59:	and    bl,bh
  413f5b:	mov    bl,0xb3
  413f5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f5e:	pusha  
  413f5f:	cdq    
  413f60:	push   eax
  413f61:	shl    BYTE PTR [ebx],0x7b
  413f64:	test   al,0xf3
  413f66:	pushf  
  413f67:	(bad)  
  413f68:	rcl    BYTE PTR [edx+0x5220a34e],0xa4
  413f6f:	fist   WORD PTR [eax]
  413f71:	cdq    
  413f72:	cdq    
  413f73:	xchg   ebx,eax
  413f74:	mov    WORD PTR [edi-0x4950d521],?
  413f7a:	mov    ds:0x676f9944,al
  413f7f:	iret   
  413f80:	popa   
  413f81:	mov    ds:0x60c59c1b,eax
  413f86:	es dec edi
  413f88:	adc    al,0xe1
  413f8a:	call   0x595b:0x64f98690
  413f91:	push   ss
  413f92:	inc    esi
  413f93:	scas   eax,DWORD PTR es:[edi]
  413f94:	pop    edx
  413f95:	and    al,0x69
  413f97:	dec    eax
  413f98:	mov    bh,dh
  413f9a:	loop   0x413fdd
  413f9c:	popf   
  413f9d:	in     eax,0xa2
  413f9f:	mov    ds:0xf700c575,eax
  413fa4:	scas   al,BYTE PTR es:[edi]
  413fa5:	xor    al,ah
  413fa7:	mov    al,ds:0x96271850
  413fac:	xchg   ecx,edi
  413fae:	add    DWORD PTR [eax-0x17],ebp
  413fb1:	jnp    0x413f9c
  413fb3:	arpl   bp,di
  413fb5:	loope  0x413f69
  413fb7:	add    BYTE PTR [edi+0x19],al
  413fba:	inc    ebp
  413fbb:	shl    DWORD PTR [edi],1
  413fbd:	daa    
  413fbe:	and    esp,ecx
  413fc0:	test   edx,eax
  413fc2:	sub    ebx,DWORD PTR [ebx-0x4b9b2a5]
  413fc8:	inc    eax
  413fc9:	sub    BYTE PTR [eax-0x5b8f241f],bh
  413fcf:	jb     0x413fc2
  413fd1:	out    0x8,eax
  413fd3:	mov    edi,0xefe7b99d
  413fd8:	jl     0x413fd0
  413fda:	out    0x2e,al
  413fdc:	pop    es
  413fdd:	or     ch,BYTE PTR [edx-0x37]
  413fe0:	inc    ebx
  413fe1:	or     DWORD PTR [ebx-0x7e],edi
  413fe4:	aaa    
  413fe5:	cli    
  413fe6:	xor    DWORD PTR [ecx+eax*4-0x32],ecx
  413fea:	sub    eax,ebx
  413fec:	out    0x83,al
  413fee:	xchg   edi,eax
  413fef:	jnp    0x413f7e
  413ff1:	scas   eax,DWORD PTR es:[edi]
  413ff2:	mov    cl,BYTE PTR [eax+esi*1+0x4f]
  413ff6:	jae    0x413fff
  413ff8:	bound  ecx,QWORD PTR [ebp+0x45ccc110]
  413ffe:	sbb    DWORD PTR [ecx-0xba7314e],esi
  414004:	retf   
  414005:	aad    0xa4
  414007:	test   BYTE PTR [edi-0x79556f41],cl
  41400d:	aas    
  41400e:	retf   0xbd2e
  414011:	je     0x41407c
  414013:	pop    ss
  414014:	adc    esi,DWORD PTR [ecx]
  414016:	ret    
  414017:	ins    BYTE PTR es:[edi],dx
  414018:	sub    eax,0x4ab3b355
  41401d:	add    ch,0x1
  414020:	inc    esp
  414021:	sbb    BYTE PTR [esi],al
  414023:	aad    0x40
  414025:	(bad)
  414029:	fidiv  DWORD PTR [ecx]
  41402b:	data16 sahf 
  41402d:	mul    DWORD PTR [edi]
  41402f:	fucomip st,st(4)
  414031:	shr    BYTE PTR [ebp+0x58],cl
  414034:	pop    es
  414035:	push   esi
  414036:	loopne 0x41408f
  414038:	iret   
  414039:	add    BYTE PTR [ebx-0x31],al
  41403c:	xchg   ebx,eax
  41403d:	adc    cl,BYTE PTR ds:0x53c883b8
  414043:	push   0xa9960953
  414048:	pop    edi
  414049:	add    DWORD PTR [esi-0x2c090871],ebx
  41404f:	dec    eax
  414050:	fs xchg esp,eax
  414052:	inc    eax
  414053:	mov    al,0x8
  414055:	pop    ds
  414056:	jno    0x41408a
  414058:	adc    esp,DWORD PTR [edx-0x1e]
  41405b:	mov    al,ds:0xa5d6be63
  414060:	push   0xfe777979
  414065:	or     DWORD PTR [ebp+ebp*1-0x3bb681f1],esi
  41406c:	mov    ah,bh
  41406e:	das    
  41406f:	clc    
  414070:	inc    ebp
  414071:	xor    eax,0x43a5dfa6
  414076:	iret   
  414077:	pop    edx
  414078:	sub    BYTE PTR [ebp-0x1530f58f],al
  41407e:	push   esi
  41407f:	cmp    edx,eax
  414081:	pop    edx
  414082:	std    
  414083:	push   edx
  414084:	pop    ebp
  414085:	mov    edi,0xd0d7417b
  41408a:	push   eax
  41408b:	jp     0x4140d4
  41408d:	std    
  41408e:	iret   
  41408f:	cdq    
  414090:	add    al,ah
  414092:	das    
  414093:	add    cl,BYTE PTR [esi-0x71]
  414096:	cmp    eax,0xeb7d0233
  41409b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41409c:	call   0x19836674
  4140a1:	adc    DWORD PTR [edi+0x77],esp
  4140a4:	test   al,0x6c
  4140a6:	dec    ecx
  4140a7:	ins    BYTE PTR es:[edi],dx
  4140a8:	dec    esp
  4140a9:	lods   al,BYTE PTR ds:[esi]
  4140aa:	mov    eax,0x927fb9aa
  4140af:	(bad)  
  4140b0:	jmp    ebx
  4140b2:	ret    
  4140b3:	int3   
  4140b4:	retf   
  4140b5:	fucomip st,st(4)
  4140b7:	clc    
  4140b8:	retf   
  4140b9:	mov    ch,0xd6
  4140bb:	jnp    0x41411e
  4140bd:	mov    esp,0xc1114204
  4140c2:	int3   
  4140c3:	sbb    ch,BYTE PTR [esi-0x42a256d0]
  4140c9:	pop    eax
  4140ca:	or     BYTE PTR [ebp+0x2eae3b55],ah
  4140d0:	xor    al,0x7a
  4140d2:	xchg   edi,eax
  4140d3:	rcr    esp,0x21
  4140d6:	sub    ah,BYTE PTR [ebp+0x1061c630]
  4140dc:	(bad)  
  4140dd:	out    0x33,eax
  4140df:	scas   eax,DWORD PTR es:[edi]
  4140e0:	pop    edi
  4140e1:	popa   
  4140e2:	mov    esi,0xc57d6fd9
  4140e7:	lods   al,BYTE PTR ds:[esi]
  4140e8:	sub    BYTE PTR [esi],0xb0
  4140eb:	int    0x36
  4140ed:	sbb    al,0xe8
  4140ef:	mov    ecx,0x2a210f9c
  4140f4:	jo     0x414094
  4140f6:	or     ecx,DWORD PTR [eax]
  4140f8:	js     0x41411d
  4140fa:	popa   
  4140fb:	(bad)  
  4140fc:	pusha  
  4140fd:	push   ebp
  4140fe:	ins    DWORD PTR es:[edi],dx
  4140ff:	xchg   ebx,eax
  414100:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414101:	add    al,0x4c
  414103:	imul   esp,DWORD PTR [eax],0x39caeb4a
  414109:	xchg   edx,eax
  41410a:	stos   DWORD PTR es:[edi],eax
  41410b:	adc    eax,0x1dd43160
  414110:	sbb    BYTE PTR [edx],al
  414112:	loop   0x41410a
  414114:	nop
  414115:	inc    esp
  414116:	cs or  bl,bh
  414119:	hlt    
  41411a:	cmp    BYTE PTR [esi+0x3f566e69],ah
  414120:	jmp    0x41417a
  414122:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414123:	pop    esp
  414124:	and    esi,DWORD PTR [eax+0x69791e4d]
  41412a:	or     ch,BYTE PTR [edx]
  41412c:	mov    ebx,0x8da8fa88
  414131:	call   0xcd7953ae
  414136:	in     eax,0xe
  414138:	jmp    0x414104
  41413a:	outs   dx,BYTE PTR ds:[esi]
  41413c:	mov    ch,0x61
  41413e:	out    0xb1,eax
  414140:	test   al,0x8c
  414142:	imul   edx,DWORD PTR [ecx+0x1],0x36962945
  414149:	adc    BYTE PTR [edx],bl
  41414b:	pop    ebx
  41414c:	and    BYTE PTR [edi+0x47f78a08],bl
  414152:	iret   
  414153:	fwait
  414154:	mov    bh,0x3a
  414156:	xchg   DWORD PTR [esi],edx
  414158:	(bad)  
  414159:	pop    esi
  41415a:	push   ebp
  41415b:	lods   al,BYTE PTR ds:[esi]
  41415c:	in     al,dx
  41415d:	and    DWORD PTR [ecx+0x7a],ecx
  414160:	sbb    esi,DWORD PTR [eax+0x20b9100b]
  414166:	in     al,dx
  414167:	inc    edi
  414168:	and    DWORD PTR [ebx+0x3ccf1fcf],0x4c
  41416f:	mov    ecx,0xa16274f5
  414174:	test   eax,0xc8e158ae
  414179:	sar    BYTE PTR [ebx+eiz*1-0xb4c2d98],1
  414180:	xor    BYTE PTR [ebx+0x54],bl
  414183:	fld    TBYTE PTR [ecx-0x4de44c4a]
  414189:	add    al,0x9b
  41418b:	ficom  WORD PTR [ebp-0x6bf07915]
  414191:	xchg   ebp,eax
  414192:	or     ecx,DWORD PTR [ebp-0x2d92c4e8]
  414198:	iret   
  414199:	in     eax,0xda
  41419b:	ret    
  41419c:	dec    bh
  41419e:	fsubr  QWORD PTR [esi-0x53]
  4141a1:	xchg   edx,eax
  4141a2:	cdq    
  4141a3:	xchg   ebp,eax
  4141a4:	sub    eax,0xd0fd93fa
  4141a9:	push   ecx
  4141aa:	cld    
  4141ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141ac:	icebp  
  4141ad:	jne    0x4141b4
  4141af:	or     al,0xe6
  4141b1:	mov    ss:0xe606ab5a,eax
  4141b7:	sbb    BYTE PTR [edx],cl
  4141b9:	lods   al,BYTE PTR ds:[esi]
  4141ba:	dec    ebp
  4141bb:	sub    bl,BYTE PTR [esp+eiz*4+0x60]
  4141bf:	pushf  
  4141c0:	mov    ch,0xdc
  4141c2:	pop    ebx
  4141c3:	xchg   esp,eax
  4141c4:	sub    BYTE PTR [edi-0x67],bh
  4141c7:	dec    DWORD PTR [eax]
  4141c9:	outs   dx,BYTE PTR ds:[esi]
  4141ca:	pop    edi
  4141cb:	mov    edi,0xfa3065df
  4141d0:	loopne 0x4141e3
  4141d2:	in     al,0x86
  4141d4:	and    edi,esp
  4141d6:	mov    esi,0xcb3bea24
  4141db:	mov    al,0xff
  4141dd:	outs   dx,DWORD PTR ds:[esi]
  4141de:	jbe    0x4141f3
  4141e0:	popa   
  4141e1:	push   0x77
  4141e3:	or     ebx,edx
  4141e5:	jno    0x414252
  4141e7:	jns    0x4141f6
  4141e9:	jmp    0xe967a889
  4141ee:	xchg   ecx,eax
  4141ef:	cmp    al,0xc4
  4141f1:	and    ah,dl
  4141f3:	pop    eax
  4141f4:	leave  
  4141f5:	mov    ds:0x7b4b3a0b,al
  4141fa:	jg     0x41426b
  4141fc:	sub    ch,dh
  4141fe:	fidivr WORD PTR [edi+edx*4-0x3a]
  414202:	shl    edi,0xf9
  414205:	ins    DWORD PTR es:[edi],dx
  414206:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414208:	adc    al,0x2f
  41420a:	or     ebp,DWORD PTR fs:[esi+ecx*2-0x3b95c754]
  414212:	cmp    DWORD PTR [edx+0x47e22a4d],esi
  414218:	pop    esi
  414219:	fisub  DWORD PTR [esi]
  41421b:	ret    0x479d
  41421e:	lock call 0x3f2fc6ad
  414224:	mov    bl,0xe
  414226:	cmp    eax,0x14e30023
  41422b:	mov    bh,0x8c
  41422d:	fs addr16 shr ecx,0x28
  414232:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414233:	and    eax,0x237655b7
  414238:	or     DWORD PTR [edi-0x62],eax
  41423b:	push   ss
  41423c:	ror    BYTE PTR [ebx+0x6bb5935b],0x4a
  414243:	lods   eax,DWORD PTR ds:[esi]
  414244:	inc    ecx
  414245:	sub    DWORD PTR [ecx+0x46],edi
  414248:	xor    esp,ecx
  41424a:	xchg   BYTE PTR [ebx+edx*8],ah
  41424d:	jp     0x414202
  41424f:	or     eax,0x929b2578
  414254:	jmp    0x7dbb7840
  414259:	xchg   bh,bl
  41425b:	in     eax,0xc6
  41425d:	mov    bh,0xba
  41425f:	fiadd  WORD PTR [ecx+0x74]
  414262:	js     0x414257
  414264:	and    edx,DWORD PTR [ecx-0x18]
  414267:	shl    BYTE PTR [ebx*1+0x773acc81],cl
  41426e:	out    dx,eax
  41426f:	sbb    edi,0x62
  414272:	push   esi
  414273:	std    
  414274:	or     al,BYTE PTR [ecx]
  414276:	pusha  
  414277:	popf   
  414278:	and    dl,cl
  41427a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41427b:	jbe    0x414216
  41427d:	fcomp  QWORD PTR [ebp-0xd]
  414280:	xchg   edi,eax
  414281:	outs   dx,DWORD PTR ds:[esi]
  414282:	adc    esi,edx
  414284:	imul   esp,DWORD PTR [edx],0xffffffa2
  414287:	sbb    DWORD PTR [ebx],esp
  414289:	or     cl,bl
  41428b:	mov    cl,0x2e
  41428d:	xchg   edx,eax
  41428e:	ja     0x4142d7
  414290:	fmul   QWORD PTR [esi+0x5e]
  414293:	cmp    eax,0x483eec9c
  414298:	mov    ebx,0x7f564f5e
  41429d:	and    cl,BYTE PTR [ebx-0x7fc9292]
  4142a3:	fimul  WORD PTR [ebx]
  4142a5:	in     al,0x45
  4142a7:	fnstcw WORD PTR [ebx+0x1481b529]
  4142ad:	inc    edx
  4142ae:	adc    ch,cl
  4142b0:	mov    esp,0xdf28e93b
  4142b5:	call   0x15eda33a
  4142ba:	add    eax,0x61588a93
  4142bf:	cs dec eax
  4142c1:	mov    edx,0xb21ad20f
  4142c6:	dec    ebp
  4142c7:	div    BYTE PTR [eax]
  4142c9:	jne    0x41431e
  4142cb:	std    
  4142cc:	(bad)  
  4142cd:	leave  
  4142ce:	xor    DWORD PTR [esi+edx*4-0x7a],eax
  4142d2:	int3   
  4142d3:	jns    0x41425d
  4142d5:	js     0x414257
  4142d7:	and    ah,BYTE PTR [edi-0x1a]
  4142da:	mov    ds:0xc417c335,eax
  4142df:	popa   
  4142e0:	mov    DWORD PTR [ebx],ebp
  4142e2:	push   ds
  4142e3:	inc    esp
  4142e4:	inc    ecx
  4142e5:	mov    esp,0x8f15d69b
  4142ea:	rcr    BYTE PTR [esi-0x4b],1
  4142ed:	and    edi,esp
  4142ef:	pushf  
  4142f0:	in     al,dx
  4142f1:	dec    ebp
  4142f2:	iret   
  4142f3:	mov    ecx,0x419671aa
  4142f8:	mov    ebx,0xc9d66fc2
  4142fd:	push   eax
  4142fe:	outs   dx,DWORD PTR ds:[esi]
  4142ff:	lahf   
  414300:	aad    0xc8
  414302:	inc    esp
  414303:	test   al,0x19
  414305:	pop    ebx
  414306:	inc    ebx
  414307:	imul   edi,DWORD PTR [ecx-0x36a96f75],0xffffffd1
  41430e:	outs   dx,BYTE PTR ds:[esi]
  41430f:	sbb    BYTE PTR [ebx+0x43],cl
  414312:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414313:	dec    edx
  414314:	jae    0x41435a
  414316:	inc    eax
  414317:	ret    0xfcb3
  41431a:	sub    bl,BYTE PTR [esp+esi*4+0xbcec360]
  414321:	inc    edx
  414322:	and    al,0xaa
  414324:	fwait
  414325:	hlt    
  414326:	mov    al,0xdd
  414328:	mov    edi,0xd3402623
  41432d:	in     eax,0x10
  41432f:	fwait
  414330:	ret    0xcaae
  414333:	js     0x41435f
  414335:	stc    
  414336:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414337:	jb     0x41436f
  414339:	pushf  
  41433a:	rcr    edi,0xba
  41433d:	mov    edi,0x995c80b4
  414342:	mov    bh,0x46
  414344:	mov    cs,WORD PTR [ebx+0x6b20aeb7]
  41434a:	cld    
  41434b:	xor    eax,0xa76e0c73
  414350:	xchg   ecx,eax
  414351:	pop    esp
  414352:	or     eax,0x4032b25e
  414357:	inc    esi
  414358:	ds leave 
  41435a:	aad    0x9
  41435c:	fidivr DWORD PTR [esi+ecx*2+0x53]
  414360:	xor    BYTE PTR [esi-0x1ab19081],al
  414366:	pop    es
  414367:	in     eax,dx
  414368:	mov    gs,WORD PTR [edx+0x53]
  41436b:	jg     0x414397
  41436d:	fwait
  41436e:	xor    al,0xe6
  414370:	fnstcw WORD PTR [eax-0x6e]
  414373:	jg     0x414345
  414375:	inc    eax
  414376:	jne    0x41439c
  414378:	mov    esp,0x12aa60a3
  41437d:	mov    eax,ds:0x4002a8ba
  414382:	out    dx,al
  414383:	rol    DWORD PTR [esi+0x37],1
  414386:	in     eax,dx
  414387:	dec    BYTE PTR [eax-0x2d49ebc7]
  41438d:	dec    edx
  41438e:	repnz loop 0x4143c4
  414391:	jbe    0x41434e
  414393:	and    BYTE PTR [edx-0xd98cce3],0x7b
  41439a:	cmp    DWORD PTR [eax-0x26],edi
  41439d:	rcr    BYTE PTR [edx-0x71],1
  4143a0:	jo     0x4143fc
  4143a2:	adc    ch,BYTE PTR [esi-0x1f]
  4143a5:	lds    edx,FWORD PTR cs:[ecx-0x68]
  4143a9:	ins    BYTE PTR es:[edi],dx
  4143aa:	fldenv [esi+0x34]
  4143ad:	cwde   
  4143ae:	inc    edx
  4143af:	xchg   ecx,eax
  4143b0:	mov    bl,0xb8
  4143b2:	aaa    
  4143b3:	stos   BYTE PTR es:[edi],al
  4143b4:	lods   al,BYTE PTR ds:[esi]
  4143b5:	out    dx,eax
  4143b6:	dec    ebp
  4143b7:	jmp    ebp
  4143b9:	push   ebx
  4143ba:	xchg   BYTE PTR [edx],dl
  4143bc:	ss and al,0xa9
  4143bf:	mov    al,0xb0
  4143c1:	stos   DWORD PTR es:[edi],eax
  4143c2:	fist   WORD PTR [ebp-0x53a23607]
  4143c8:	js     0x4143f6
  4143ca:	dec    ebx
  4143cb:	pushf  
  4143cc:	inc    esp
  4143cd:	repnz mov gs,ebp
  4143d0:	push   ebx
  4143d1:	mov    edx,0xc308f2f3
  4143d6:	out    0x85,eax
  4143d8:	mov    al,0xe9
  4143da:	push   ds
  4143db:	mov    DWORD PTR [edi],esi
  4143dd:	shr    al,1
  4143df:	test   al,0x34
  4143e1:	rcl    DWORD PTR [eax],1
  4143e3:	fbstp  TBYTE PTR [esi+0x17]
  4143e6:	push   edi
  4143e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143e8:	inc    esi
  4143e9:	mov    dh,0xa0
  4143eb:	sub    eax,0x15360d5a
  4143f0:	mov    ds:0xa2002b7b,al
  4143f5:	repnz nop
  4143f7:	jle    0x414439
  4143f9:	aam    0x67
  4143fb:	dec    edi
  4143fc:	xor    al,0xb4
  4143fe:	jnp    0x41441b
  414400:	push   eax
  414401:	sub    al,bl
  414403:	popa   
  414404:	mov    esi,0x451239fc
  414409:	mov    dh,0x19
  41440b:	shr    DWORD PTR [esi],1
  41440d:	push   0xffffffdb
  41440f:	xchg   ebx,eax
  414410:	lahf   
  414411:	inc    edi
  414412:	and    eax,0xc10cd02c
  414418:	imul   eax,DWORD PTR [edx+0x55],0xa91b16ea
  41441f:	and    al,0xab
  414421:	mov    al,ds:0xceec6d84
  414426:	jne    0x41440d
  414428:	jne    0x41445f
  41442a:	pop    es
  41442b:	pusha  
  41442c:	cld    
  41442d:	mov    ebp,0xc0cd7d38
  414432:	dec    esp
  414433:	ret    
  414434:	jae    0x4143fe
  414436:	lds    eax,FWORD PTR [eax+eiz*4-0x221f51de]
  41443d:	inc    edx
  41443e:	push   ecx
  41443f:	and    BYTE PTR [esp+ecx*8-0x2d],bh
  414443:	add    eax,0xe9ca75e7
  414448:	inc    esp
  414449:	jg     0x414498
  41444b:	xchg   ecx,eax
  41444c:	jns    0x4143d9
  41444e:	es inc eax
  414450:	inc    esi
  414451:	pop    edx
  414452:	push   ecx
  414453:	mov    dl,BYTE PTR [ecx+0x5ef64b9b]
  414459:	xor    ebx,DWORD PTR [esi-0x54832f9b]
  41445f:	int3   
  414460:	sub    BYTE PTR [edi+0x51],0x14
  414464:	cmp    dl,al
  414466:	fnsave [edx-0x2]
  414469:	stc    
  41446a:	and    ebp,DWORD PTR [edx+ebx*4]
  41446d:	sti    
  41446e:	adc    edi,0x6
  414471:	das    
  414472:	sub    bl,bl
  414474:	(bad)  
  414475:	xchg   edi,eax
  414476:	mov    dl,0xa1
  414478:	xchg   ecx,eax
  414479:	cmp    al,0xe9
  41447b:	sub    ebx,DWORD PTR [ebx+ecx*2]
  41447e:	dec    eax
  41447f:	loopne 0x414497
  414481:	leave  
  414482:	adc    eax,0x35f9a2c0
  414487:	icebp  
  414488:	and    cl,ch
  41448a:	sbb    eax,0x82b3596b
  41448f:	xlat   BYTE PTR ds:[ebx]
  414490:	pusha  
  414491:	call   DWORD PTR [edx+ebx*2-0x63bbded3]
  414498:	sbb    DWORD PTR ds:0x17bbdce1,ebp
  41449e:	mov    edi,0x564aa0d0
  4144a3:	sar    DWORD PTR [esi+0x13],0xc6
  4144a7:	and    ah,BYTE PTR [eax-0x767fdf9e]
  4144ad:	and    BYTE PTR [ecx],dl
  4144af:	push   ss
  4144b0:	mov    dh,0x72
  4144b2:	bound  ebp,QWORD PTR [eax+0x7cf2bb79]
  4144b8:	(bad)  
  4144b9:	int3   
  4144ba:	test   eax,0xaf5fdd61
  4144bf:	adc    BYTE PTR [ebx],al
  4144c1:	dec    ebx
  4144c2:	sbb    esi,edi
  4144c4:	stos   BYTE PTR es:[edi],al
  4144c5:	jbe    0x414467
  4144c7:	imul   ebx,DWORD PTR [eax+0x58ed402c],0x13d6407c
  4144d1:	iret   
  4144d2:	and    eax,0x98a9018b
  4144d7:	inc    ebx
  4144d8:	mov    esp,0x8e276691
  4144dd:	mov    edx,0x1085b0c7
  4144e2:	cmp    BYTE PTR [esi+0x43],bh
  4144e5:	in     eax,0xd3
  4144e7:	mov    eax,ds:0x9ac038f7
  4144ec:	rcr    BYTE PTR [ebx-0x3cca2fe],0x46
  4144f3:	cmp    al,0x45
  4144f5:	dec    ecx
  4144f6:	clc    
  4144f7:	and    eax,edi
  4144f9:	fwait
  4144fa:	adc    eax,0xae899f71
  4144ff:	or     DWORD PTR [esi],eax
  414501:	fwait
  414502:	cmp    DWORD PTR [edi+eax*1-0x41],esi
  414506:	lods   al,BYTE PTR ds:[esi]
  414507:	fidivr DWORD PTR [ecx-0x6db16e99]
  41450d:	cmp    bl,BYTE PTR [esi]
  41450f:	repz pop eax
  414511:	or     eax,0x313c13f8
  414516:	adc    al,0x74
  414518:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414519:	sub    ch,BYTE PTR [ebx+esi*8]
  41451c:	add    DWORD PTR [edx-0x6a9958a9],0x8660f8e
  414526:	pop    eax
  414527:	xchg   esp,eax
  414528:	xor    al,0x97
  41452a:	jns    0x4144e8
  41452c:	inc    edx
  41452d:	loopne 0x41456d
  41452f:	sti    
  414530:	aaa    
  414531:	cmp    ecx,DWORD PTR [ecx+0x123a5733]
  414537:	enter  0xb137,0x1c
  41453b:	mov    esp,0x85d74c33
  414540:	stos   BYTE PTR es:[edi],al
  414541:	cs xchg edi,eax
  414543:	xchg   edx,eax
  414544:	loope  0x4145ba
  414546:	cmp    cl,0xdf
  414549:	(bad)  [ebx-0x55f8933d]
  41454f:	sub    edx,DWORD PTR [eax]
  414551:	jge    0x4145b8
  414553:	popf   
  414554:	mov    bh,0x40
  414556:	push   esi
  414557:	loopne 0x4144f7
  414559:	xor    al,dh
  41455b:	sub    BYTE PTR [ebp-0xd6c095a],al
  414561:	dec    ecx
  414562:	xchg   BYTE PTR [edx+0x1b5e6523],bl
  414568:	push   0x77
  41456a:	inc    ebp
  41456b:	mov    bh,0x98
  41456d:	movzx  ecx,si
  414570:	sub    ah,BYTE PTR [eax+0x73]
  414573:	push   edi
  414574:	ss jge 0x414501
  414577:	lds    eax,FWORD PTR [ebx]
  414579:	xchg   ebx,eax
  41457a:	shl    ah,0xde
  41457d:	mov    al,ds:0x4f19ed74
  414582:	mov    ds:0x72f32d11,eax
  414587:	test   ebp,ebp
  414589:	data16 fdivr st(0),st
  41458c:	xor    DWORD PTR [edi],esp
  41458e:	pop    es
  41458f:	outs   dx,DWORD PTR ds:[esi]
  414590:	mov    esi,DWORD PTR [eax+0x35]
  414593:	mov    fs,ecx
  414595:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414596:	cmp    BYTE PTR ds:0x83e473e5,ah
  41459c:	popa   
  41459d:	rol    dl,cl
  41459f:	aaa    
  4145a0:	adc    al,0x30
  4145a2:	(bad)  
  4145a3:	mov    bh,0x94
  4145a5:	sti    
  4145a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145a7:	les    ebp,FWORD PTR [esi-0xa9ffc9]
  4145ad:	or     esp,DWORD PTR [ecx-0x10b08a90]
  4145b3:	fcmovbe st,st(4)
  4145b5:	lds    ebp,FWORD PTR [esi]
  4145b7:	mov    cl,0x51
  4145b9:	cwde   
  4145ba:	ror    ah,1
  4145bc:	je     0x4145ad
  4145be:	push   edi
  4145bf:	push   esp
  4145c0:	mov    dh,BYTE PTR [eax-0x67e3f154]
  4145c6:	sub    BYTE PTR [eax-0x1d],0x5c
  4145ca:	fs stos BYTE PTR es:[edi],al
  4145cc:	cmp    esi,DWORD PTR [eax+0x1cbd1ac6]
  4145d2:	clc    
  4145d3:	mov    eax,0xe0a3fd35
  4145d8:	jns    0x41458d
  4145da:	push   es
  4145db:	or     edx,ecx
  4145dd:	test   BYTE PTR [esi+0x5a],ah
  4145e0:	mov    ah,ch
  4145e2:	cmp    DWORD PTR [edx-0x5b],ecx
  4145e5:	fimul  DWORD PTR [esi+ebp*4+0x2c]
  4145e9:	sahf   
  4145ea:	push   ebx
  4145eb:	scas   al,BYTE PTR es:[edi]
  4145ec:	xchg   ebx,eax
  4145ed:	mov    dl,0xf0
  4145ef:	xchg   ecx,eax
  4145f0:	ins    BYTE PTR es:[edi],dx
  4145f1:	neg    edi
  4145f3:	(bad)
  4145f7:	sbb    DWORD PTR [edx-0x1a07700e],0x51
  4145fe:	jmp    0x84e1086b
  414603:	push   edi
  414604:	jg     0x4145aa
  414606:	xor    DWORD PTR [eax],ecx
  414608:	pusha  
  414609:	(bad)  
  41460a:	imul   ebp,DWORD PTR [edx+0x7da1ebdd],0x22
  414611:	std    
  414612:	(bad)  
  414613:	(bad)  
  414614:	jbe    0x4145d7
  414616:	sub    eax,0x970ed53c
  41461b:	int3   
  41461c:	dec    ebp
  41461d:	jmp    0x76c6:0xcd357dd6
  414624:	aaa    
  414625:	dec    esi
  414626:	into   
  414627:	push   0xfffffffb
  414629:	pop    ebp
  41462a:	jmp    0xd48c:0x1e35b940
  414631:	cmp    DWORD PTR [esi-0x58d513d],esp
  414637:	mov    al,ds:0xa2c81cda
  41463c:	sub    ecx,DWORD PTR [edi]
  41463e:	mov    DWORD PTR [esi],esp
  414640:	sub    esp,DWORD PTR [ebx]
  414642:	sub    DWORD PTR [esi+0xb],eax
  414645:	add    BYTE PTR [ebx+0x5],0x6c
  414649:	push   ebp
  41464a:	fwait
  41464b:	enter  0x2a5a,0x16
  41464f:	push   eax
  414650:	stc    
  414651:	clc    
  414652:	loop   0x414639
  414654:	lds    edx,FWORD PTR [ecx+0x52]
  414657:	adc    ebx,edx
  414659:	out    0xe4,eax
  41465b:	dec    ebp
  41465c:	pop    ds
  41465d:	rcl    DWORD PTR [esi+0x6d4377e4],1
  414663:	pop    ebx
  414664:	inc    esi
  414665:	fstp   DWORD PTR cs:[eax]
  414668:	jb     0x4145ec
  41466a:	out    0x73,al
  41466c:	jmp    0x414668
  41466e:	pop    edi
  41466f:	shr    DWORD PTR [esi-0x2fdf447a],0x71
  414676:	add    BYTE PTR [edi],dh
  414678:	sub    eax,0xda2855cd
  41467d:	mov    esi,ebx
  41467f:	dec    esp
  414680:	cli    
  414681:	sbb    ah,0xc3
  414684:	xor    ebx,DWORD PTR ds:[ecx]
  414687:	mov    ebp,0x68d9925
  41468c:	cmp    edx,ebp
  41468e:	pop    ebp
  41468f:	adc    al,0x33
  414691:	dec    edx
  414692:	mov    al,ch
  414694:	cmp    dl,BYTE PTR [edx+0x24]
  414697:	jecxz  0x41461c
  414699:	jmp    0xecf3:0x53c1e7d6
  4146a0:	(bad)  
  4146a1:	xor    edx,edx
  4146a3:	xlat   BYTE PTR ds:[ebx]
  4146a4:	sbb    bh,BYTE PTR [edi]
  4146a6:	out    dx,al
  4146a7:	jl     0x4146b6
  4146a9:	ret    0xcfdd
  4146ac:	adc    DWORD PTR ds:0x5a5b11a6,esp
  4146b2:	pusha  
  4146b3:	les    ebp,FWORD PTR [ebp+0x12433638]
  4146b9:	cmp    ecx,DWORD PTR [edi+0x3201045f]
  4146bf:	shr    DWORD PTR [edi-0x21],cl
  4146c2:	add    eax,0x8f3ccfa1
  4146c7:	std    
  4146c8:	jnp    0x4146ca
  4146ca:	cmp    eax,DWORD PTR [ebp-0x258c4a28]
  4146d0:	(bad)  
  4146d1:	sahf   
  4146d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146d3:	sub    BYTE PTR [esi],0xac
  4146d6:	ror    BYTE PTR [esi+0x3b],0xca
  4146da:	push   ebp
  4146db:	cmp    ecx,DWORD PTR [edi-0x6d]
  4146de:	js     0x4146af
  4146e0:	js     0x4146f5
  4146e2:	js     0x4146cb
  4146e4:	jne    0x4146d5
  4146e6:	icebp  
  4146e7:	dec    ecx
  4146e8:	fimul  DWORD PTR [edi]
  4146ea:	sub    al,0x46
  4146ec:	jge    0x414697
  4146ee:	cmp    ebp,DWORD PTR [ebx+eiz*1-0x108e9886]
  4146f5:	fstp   QWORD PTR [edx+0x77]
  4146f8:	xchg   esp,eax
  4146f9:	sbb    BYTE PTR [edi],ch
  4146fb:	add    esp,DWORD PTR [ecx]
  4146fd:	call   DWORD PTR [ebx-0x3dee8a39]
  414703:	xor    eax,DWORD PTR [eax+0x7d]
  414706:	push   ebp
  414707:	stc    
  414708:	sub    DWORD PTR [ebp-0x1478974d],eax
  41470e:	mov    edi,0xbda995c
  414713:	mov    ds:0xe2a6b183,al
  414718:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414719:	cmp    BYTE PTR [ecx+0x564750e2],bh
  41471f:	daa    
  414720:	push   es
  414721:	add    edi,DWORD PTR [eax-0xa]
  414724:	gs es jp 0x4146f2
  414728:	(bad)  
  414729:	fsubr  DWORD PTR [esi-0x568551df]
  41472f:	fst    QWORD PTR [edx+esi*2+0x18]
  414733:	popa   
  414734:	out    dx,al
  414735:	icebp  
  414736:	pop    ds
  414737:	in     eax,dx
  414738:	bound  ebp,QWORD PTR [esi]
  41473a:	add    eax,0x592a8233
  41473f:	mov    bl,0x92
  414741:	mov    ecx,0x11cc7820
  414746:	mov    ds:0x203c1fda,eax
  41474b:	fs mov ecx,ecx
  41474e:	xlat   BYTE PTR ds:[ebx]
  41474f:	inc    ecx
  414750:	mov    edx,0x5b0cc479
  414755:	cli    
  414756:	mov    ch,0x26
  414758:	inc    ebx
  414759:	nop
  41475a:	shr    DWORD PTR [ecx+0x2f],0x48
  41475e:	mov    bh,BYTE PTR [ebp-0x9]
  414761:	shl    edx,1
  414763:	iret   
  414764:	(bad)  
  414765:	outs   dx,DWORD PTR ds:[esi]
  414766:	jge    0x41473f
  414768:	mov    dh,0x83
  41476a:	mov    cl,0x7c
  41476c:	mov    bl,0xde
  41476e:	jle    0x41470f
  414770:	daa    
  414771:	(bad)  
  414772:	lock bound esi,QWORD PTR [ecx+edx*2]
  414776:	mov    eax,DWORD PTR [esi]
  414778:	cld    
  414779:	cmp    BYTE PTR [eax+0x76edfc42],bl
  41477f:	addr16 pop esp
  414781:	lods   al,BYTE PTR ds:[esi]
  414782:	sbb    eax,0xc650ee
  414787:	mov    al,ds:0xbaaaa018
  41478c:	xchg   esp,eax
  41478d:	dec    edi
  41478e:	aad    0xe7
  414790:	xchg   esp,eax
  414791:	rcr    DWORD PTR [esi+0xd80b76e],cl
  414797:	retf   
  414798:	or     BYTE PTR [edx-0x7c0e7207],dl
  41479e:	jecxz  0x4147db
  4147a0:	push   0xffffffd2
  4147a2:	inc    ebp
  4147a3:	leave  
  4147a4:	jl     0x414806
  4147a6:	xchg   ebx,eax
  4147a7:	imul   ebp,edi,0xffffffcc
  4147aa:	iret   
  4147ab:	inc    esp
  4147ac:	pop    ecx
  4147ad:	shl    BYTE PTR [edx],cl
  4147af:	sub    ch,BYTE PTR [edx]
  4147b1:	cli    
  4147b2:	loope  0x414789
  4147b4:	sbb    dl,BYTE PTR [edx+esi*2]
  4147b7:	js     0x4147ff
  4147b9:	add    eax,0xb9c592fd
  4147be:	xlat   BYTE PTR ds:[ebx]
  4147bf:	ror    DWORD PTR [ebx-0x44],1
  4147c2:	jecxz  0x41479b
  4147c4:	cs dec esp
  4147c6:	stos   BYTE PTR es:[edi],al
  4147c7:	xchg   DWORD PTR [edx-0x5b46ce90],edi
  4147cd:	bound  ebx,QWORD PTR ds:0x6311ccf
  4147d3:	(bad)  
  4147d4:	aad    0xa
  4147d6:	inc    esp
  4147d7:	xchg   ebp,eax
  4147d8:	pushf  
  4147d9:	shl    esi,0xa9
  4147dc:	or     al,0x13
  4147de:	xor    DWORD PTR [edi-0x12],ecx
  4147e1:	leave  
  4147e2:	inc    edi
  4147e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147e4:	push   eax
  4147e5:	rcl    BYTE PTR [esp+eax*8],cl
  4147e8:	rcr    BYTE PTR [edi-0x4faf0021],cl
  4147ee:	ret    
  4147ef:	repz sar DWORD PTR [eax+0x50],0xb8
  4147f4:	inc    esp
  4147f5:	mov    al,ds:0x90fef871
  4147fa:	xchg   ebx,eax
  4147fb:	sub    eax,0x95e789d8
  414800:	ins    DWORD PTR es:[edi],dx
  414801:	push   eax
  414802:	jnp    0x4147d7
  414804:	jae    0x4147b8
  414806:	push   esi
  414807:	stos   BYTE PTR es:[edi],al
  414808:	inc    DWORD PTR [esi-0x61bf0fcb]
  41480e:	fisttp QWORD PTR [ecx]
  414810:	mov    dl,0x8b
  414812:	jmp    0x4da99f3e
  414817:	mov    edi,0x97b26008
  41481c:	xchg   ebp,eax
  41481d:	(bad)  
  41481e:	fwait
  41481f:	pop    esi
  414820:	and    ax,WORD PTR ss:[ebp+0x18b53a9f]
  414828:	ds pop edx
  41482a:	mov    dl,0x72
  41482c:	nop
  41482d:	nop
  41482e:	cs dec edi
  414830:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414831:	sbb    eax,0x70661c6b
  414836:	dec    edi
  414837:	inc    ecx
  414838:	xchg   esp,eax
  414839:	fistp  QWORD PTR [edx+0x3a]
  41483c:	and    al,0x8c
  41483e:	lahf   
  41483f:	cmp    ch,BYTE PTR [edi]
  414841:	popa   
  414842:	repz and DWORD PTR [edi+0x1cd98655],esp
  414849:	in     al,0x13
  41484b:	addr16 imul ebx,ebx,0x92bbf6b6
  414852:	dec    edx
  414853:	and    eax,eax
  414855:	(bad)  
  414856:	cld    
  414857:	add    al,0x26
  414859:	add    dl,bh
  41485b:	jge    0x4147fd
  41485d:	outs   dx,DWORD PTR ds:[esi]
  41485e:	or     eax,0x470dff58
  414863:	xchg   cx,ax
  414865:	popa   
  414866:	int    0xed
  414868:	leave  
  414869:	xor    cl,BYTE PTR [edi+0x6d]
  41486c:	ret    
  41486d:	jb     0x41489e
  41486f:	outs   dx,DWORD PTR ds:[esi]
  414870:	jp     0x414858
  414872:	dec    edi
  414873:	test   BYTE PTR [ecx-0x2a933c10],0xb3
  41487a:	mov    ah,0x2e
  41487c:	push   ds
  41487d:	lahf   
  41487e:	push   esp
  41487f:	repz mov bh,0x7a
  414882:	aas    
  414883:	lds    sp,DWORD PTR [edi+0x3a]
  414887:	jnp    0x41481d
  414889:	loopne 0x41483b
  41488b:	add    BYTE PTR [ecx-0x29],bh
  41488e:	fdiv   DWORD PTR [ebp+eax*1-0x2eb16716]
  414895:	pop    ds
  414896:	scas   eax,DWORD PTR es:[edi]
  414897:	retf   
  414898:	lea    ecx,[ebx+0x74717377]
  41489e:	aas    
  41489f:	outs   dx,BYTE PTR ds:[esi]
  4148a0:	or     al,0x4b
  4148a2:	pop    edx
  4148a3:	ins    DWORD PTR es:[edi],dx
  4148a4:	inc    ebx
  4148a5:	stc    
  4148a6:	pop    esp
  4148a7:	aam    0x76
  4148a9:	aad    0xd1
  4148ab:	nop
  4148ac:	sbb    DWORD PTR [edx+0x8],ebp
  4148af:	xor    eax,0x44c9e0b
  4148b4:	fs icebp 
  4148b6:	bound  eax,QWORD PTR [esi-0x3e]
  4148b9:	mov    ds:0x45ea7274,eax
  4148be:	popf   
  4148bf:	inc    ebx
  4148c0:	shl    esp,1
  4148c2:	xchg   esi,eax
  4148c3:	cwde   
  4148c4:	test   al,0xc7
  4148c6:	inc    esp
  4148c7:	or     bh,BYTE PTR [edx+0x79d38c63]
  4148cd:	xor    dh,BYTE PTR [edi+ebp*2-0x745137ef]
  4148d4:	adc    eax,DWORD PTR [esi-0xcd69693]
  4148da:	outs   dx,DWORD PTR ds:[esi]
  4148db:	loope  0x4148a3
  4148dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148de:	mov    al,BYTE PTR ds:0x1c8032e1
  4148e4:	inc    eax
  4148e5:	cmc    
  4148e6:	xor    dl,BYTE PTR [ebp+0x327511c2]
  4148ec:	aaa    
  4148ed:	jo     0x41494a
  4148ef:	jnp    0x41489e
  4148f1:	push   esi
  4148f2:	test   eax,0x44064210
  4148f7:	jg     0x414951
  4148f9:	or     DWORD PTR [ecx],ebx
  4148fb:	dec    ebx
  4148fc:	mov    ecx,0xbda0e575
  414901:	mov    esi,0x46a8aa21
  414906:	imul   sp,WORD PTR [edx-0x77681fa8],0xe997
  41490f:	in     eax,0x4f
  414911:	out    0x60,eax
  414913:	cmp    dh,BYTE PTR [esp+eax*2+0x51645b8c]
  41491a:	sub    eax,0xfde28ae0
  41491f:	inc    ebp
  414920:	inc    eax
  414921:	je     0x414928
  414923:	mov    esi,0x54de788e
  414928:	into   
  414929:	lahf   
  41492a:	adc    DWORD PTR [esp+eiz*2+0x43],ebx
  41492e:	mov    ds:0x603d0030,al
  414933:	pop    ebp
  414934:	(bad)  
  414935:	mov    sp,WORD PTR [esi]
  414938:	aas    
  414939:	and    DWORD PTR [eax+edi*4-0x7b903210],ebx
  414940:	or     eax,0x469a60cf
  414945:	retf   0x5bc1
  414948:	out    dx,eax
  414949:	cmp    dh,BYTE PTR [edx+ebp*8-0x66]
  41494d:	out    dx,al
  41494e:	popf   
  41494f:	or     esp,DWORD PTR [ecx+0x6998e2a7]
  414955:	clc    
  414956:	jg     0x41495d
  414958:	pushf  
  414959:	fs inc ecx
  41495b:	adc    dl,bl
  41495d:	fstp   QWORD PTR [edx]
  41495f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414960:	retf   0x3af5
  414963:	dec    eax
  414964:	or     bl,BYTE PTR [edi-0x13]
  414967:	lea    eax,[edx+0x4c45cf8e]
  41496d:	rol    DWORD PTR [esi+0x47e74a97],cl
  414973:	test   eax,0xa0b2f0dd
  414978:	je     0x414939
  41497a:	and    dh,BYTE PTR [ecx+esi*1-0x43]
  41497e:	push   edi
  41497f:	add    BYTE PTR [ecx],dh
  414981:	out    0x76,al
  414983:	sub    BYTE PTR [ebp+0x3859008b],ah
  414989:	enter  0x6cd1,0x3
  41498d:	pop    eax
  41498e:	and    esp,DWORD PTR [edx-0x4c]
  414991:	mov    ebp,0x419eba23
  414996:	add    edx,0x49f58c4b
  41499c:	sbb    DWORD PTR [edx+0x21],eax
  41499f:	inc    edi
  4149a0:	pop    esp
  4149a1:	jmp    0x8af7490a
  4149a6:	adc    BYTE PTR [ecx+0x66802a09],ch
  4149ac:	mov    ds:0xe9085589,al
  4149b1:	jo     0x4149b3
  4149b3:	add    BYTE PTR [eax],al
  4149b5:	mov    edx,DWORD PTR [ebp+0x8]
  4149b8:	mov    ebx,DWORD PTR [ebp-0x8]
  4149bb:	xor    edx,eax
  4149bd:	xor    ebx,eax
  4149bf:	sub    edx,ebx
  4149c1:	sub    edx,esi
  4149c3:	xor    edx,eax
  4149c5:	mov    DWORD PTR [ebp+0x8],edx
  4149c8:	mov    edx,DWORD PTR [ebp+0x8]
  4149cb:	mov    ebx,DWORD PTR [ebp-0x58]
  4149ce:	add    edx,0x5708e2
  4149d4:	imul   edx,ebx
  4149d7:	mov    DWORD PTR [ebp-0x58],edx
  4149da:	mov    edx,DWORD PTR [ebp+0x8]
  4149dd:	mov    ebx,DWORD PTR [ebp-0x54]
  4149e0:	add    edx,0x64f89c
  4149e6:	or     edx,ebx
  4149e8:	mov    DWORD PTR [ebp-0x54],edx
  4149eb:	mov    edx,DWORD PTR [ebp+0x8]
  4149ee:	mov    ebx,DWORD PTR [ebp-0x50]
  4149f1:	add    edx,ecx
  4149f3:	xor    edx,ebx
  4149f5:	mov    DWORD PTR [ebp-0x50],edx
  4149f8:	mov    edx,DWORD PTR [ebp+0x8]
  4149fb:	mov    ebx,DWORD PTR [ebp-0x4c]
  4149fe:	add    edx,edi
  414a00:	and    edx,ebx
  414a02:	mov    DWORD PTR [ebp-0x4c],edx
  414a05:	mov    edx,DWORD PTR [ebp+0x8]
  414a08:	mov    ebx,DWORD PTR [ebp-0x48]
  414a0b:	lea    edx,[ebx+edx*1+0x241fcdf]
  414a12:	mov    DWORD PTR [ebp-0x48],edx
  414a15:	mov    edx,DWORD PTR [ebp+0x8]
  414a18:	mov    ebx,0xfa5e1528
  414a1d:	sub    ebx,edx
  414a1f:	add    ebx,DWORD PTR [ebp-0x44]
  414a22:	mov    DWORD PTR [ebp-0x44],ebx
  414a25:	mov    edx,DWORD PTR [ebp+0x8]
  414a28:	xor    edx,eax
  414a2a:	add    edx,esi
  414a2c:	jne    0x4149b5
  414a32:	mov    edx,DWORD PTR [ebp-0x14]
  414a35:	mov    DWORD PTR [ebp+0x8],edx
  414a38:	jmp    0x414aad
  414a3d:	mov    edx,DWORD PTR [ebp+0x8]
  414a40:	mov    ebx,DWORD PTR [ebp-0x8]
  414a43:	xor    edx,eax
  414a45:	xor    ebx,eax
  414a47:	sub    edx,ebx
  414a49:	sub    edx,esi
  414a4b:	xor    edx,eax
  414a4d:	mov    DWORD PTR [ebp+0x8],edx
  414a50:	mov    edx,DWORD PTR [ebp+0x8]
  414a53:	mov    ebx,DWORD PTR [ebp-0x58]
  414a56:	add    edx,0x5708e2
  414a5c:	imul   edx,ebx
  414a5f:	mov    DWORD PTR [ebp-0x58],edx
  414a62:	mov    edx,DWORD PTR [ebp+0x8]
  414a65:	mov    ebx,DWORD PTR [ebp-0x54]
  414a68:	add    edx,0x64f89c
  414a6e:	or     edx,ebx
  414a70:	mov    DWORD PTR [ebp-0x54],edx
  414a73:	mov    edx,DWORD PTR [ebp+0x8]
  414a76:	mov    ebx,DWORD PTR [ebp-0x50]
  414a79:	add    edx,ecx
  414a7b:	xor    edx,ebx
  414a7d:	mov    DWORD PTR [ebp-0x50],edx
  414a80:	mov    edx,DWORD PTR [ebp+0x8]
  414a83:	mov    ebx,DWORD PTR [ebp-0x4c]
  414a86:	add    edx,edi
  414a88:	and    edx,ebx
  414a8a:	mov    DWORD PTR [ebp-0x4c],edx
  414a8d:	mov    edx,DWORD PTR [ebp+0x8]
  414a90:	mov    ebx,DWORD PTR [ebp-0x48]
  414a93:	lea    edx,[ebx+edx*1+0x241fcdf]
  414a9a:	mov    DWORD PTR [ebp-0x48],edx
  414a9d:	mov    edx,DWORD PTR [ebp+0x8]
  414aa0:	mov    ebx,0xfa5e1528
  414aa5:	sub    ebx,edx
  414aa7:	add    ebx,DWORD PTR [ebp-0x44]
  414aaa:	mov    DWORD PTR [ebp-0x44],ebx
  414aad:	mov    edx,DWORD PTR [ebp+0x8]
  414ab0:	xor    edx,eax
  414ab2:	add    edx,esi
  414ab4:	jne    0x414a3d
  414aba:	mov    edx,DWORD PTR [ebp-0x8]
  414abd:	mov    ebx,DWORD PTR [ebp-0xc]
  414ac0:	xor    edx,eax
  414ac2:	lea    edx,[edx+ebx*1+0x3272f3]
  414ac9:	mov    DWORD PTR [ebp-0xc],edx
  414acc:	mov    edx,DWORD PTR [ebp-0x10]
  414acf:	xor    edx,eax
  414ad1:	add    edx,esi
  414ad3:	jne    0x41224b
  414ad9:	jmp    0x41b68b
  414ade:	mov    ecx,DWORD PTR [ebp-0x14]
  414ae1:	mov    DWORD PTR [ebp+0x8],ecx
  414ae4:	jmp    0x414b5d
  414ae9:	mov    ecx,DWORD PTR [ebp+0x8]
  414aec:	mov    edx,DWORD PTR [ebp-0x8]
  414aef:	xor    ecx,eax
  414af1:	xor    edx,eax
  414af3:	sub    ecx,edx
  414af5:	sub    ecx,esi
  414af7:	xor    ecx,eax
  414af9:	mov    DWORD PTR [ebp+0x8],ecx
  414afc:	mov    ecx,DWORD PTR [ebp+0x8]
  414aff:	mov    edx,DWORD PTR [ebp-0x58]
  414b02:	add    ecx,0x5708e2
  414b08:	imul   ecx,edx
  414b0b:	mov    DWORD PTR [ebp-0x58],ecx
  414b0e:	mov    ecx,DWORD PTR [ebp+0x8]
  414b11:	mov    edx,DWORD PTR [ebp-0x54]
  414b14:	add    ecx,0x64f89c
  414b1a:	or     ecx,edx
  414b1c:	mov    DWORD PTR [ebp-0x54],ecx
  414b1f:	mov    ecx,DWORD PTR [ebp+0x8]
  414b22:	mov    edx,DWORD PTR [ebp-0x50]
  414b25:	add    ecx,0x242ebcd
  414b2b:	xor    ecx,edx
  414b2d:	mov    DWORD PTR [ebp-0x50],ecx
  414b30:	mov    ecx,DWORD PTR [ebp+0x8]
  414b33:	mov    edx,DWORD PTR [ebp-0x4c]
  414b36:	add    ecx,edi
  414b38:	and    ecx,edx
  414b3a:	mov    DWORD PTR [ebp-0x4c],ecx
  414b3d:	mov    ecx,DWORD PTR [ebp+0x8]
  414b40:	mov    edx,DWORD PTR [ebp-0x48]
  414b43:	lea    ecx,[edx+ecx*1+0x241fcdf]
  414b4a:	mov    DWORD PTR [ebp-0x48],ecx
  414b4d:	mov    ecx,DWORD PTR [ebp+0x8]
  414b50:	mov    edx,0xfa5e1528
  414b55:	sub    edx,ecx
  414b57:	add    edx,DWORD PTR [ebp-0x44]
  414b5a:	mov    DWORD PTR [ebp-0x44],edx
  414b5d:	mov    ecx,DWORD PTR [ebp+0x8]
  414b60:	xor    ecx,eax
  414b62:	add    ecx,esi
  414b64:	jne    0x414ae9
  414b6a:	jmp    0x41b697
  414b6f:	mov    ecx,DWORD PTR [ebp+0x8]
  414b72:	mov    edx,DWORD PTR [ebp-0x8]
  414b75:	xor    ecx,eax
  414b77:	jmp    0x416f00
  414b7c:	repnz mov esi,esp
  414b7f:	repz add BYTE PTR [esi+eiz*8-0x19361778],0xd3
  414b88:	addr16 stc 
  414b8a:	jno    0x414bd9
  414b8c:	jmp    DWORD PTR [edi-0x7e]
  414b8f:	adc    DWORD PTR [edi],0x5c
  414b92:	add    DWORD PTR [ebx-0x4a9c59b5],0xffffffef
  414b99:	aaa    
  414b9a:	sub    al,0x17
  414b9c:	cmp    BYTE PTR [esi-0x24],ch
  414b9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ba0:	out    0xbf,eax
  414ba2:	push   eax
  414ba3:	xchg   edi,eax
  414ba4:	sbb    DWORD PTR [esi],eax
  414ba6:	lock push edi
  414ba8:	lock lock sbb eax,0x5368d914
  414baf:	psubw  mm2,QWORD PTR [ecx+0x25]
  414bb3:	jg     0x414bc0
  414bb5:	or     DWORD PTR [ebx+0x72aa0d3f],ebp
  414bbb:	arpl   bp,cx
  414bbd:	loopne 0x414bf9
  414bbf:	aam    0x5d
  414bc1:	(bad)  
  414bc3:	pop    es
  414bc4:	cmp    cl,dh
  414bc6:	repnz ins DWORD PTR es:[edi],dx
  414bc8:	pop    ebx
  414bc9:	add    DWORD PTR ds:0xdeee6ad0,eax
  414bcf:	not    bl
  414bd1:	pop    ss
  414bd2:	fcomp  DWORD PTR [edx]
  414bd4:	mov    edi,0x8ed084e
  414bd9:	sahf   
  414bda:	stos   DWORD PTR es:[edi],eax
  414bdb:	lahf   
  414bdc:	or     DWORD PTR [ebp-0x35],edi
  414bdf:	xchg   ebx,eax
  414be0:	ret    0x7554
  414be3:	xchg   dh,bh
  414be5:	and    eax,0x2b1f98ef
  414bea:	sbb    al,0x38
  414bec:	push   edx
  414bed:	push   edx
  414bee:	xor    BYTE PTR ds:0x5f1baa2c,bh
  414bf4:	jmp    0x36236150
  414bf9:	dec    ebp
  414bfa:	retf   
  414bfb:	in     eax,dx
  414bfc:	jnp    0x414baf
  414bfe:	sbb    edx,DWORD PTR [edi+0x30175166]
  414c04:	inc    esi
  414c05:	and    BYTE PTR [ebx],0x66
  414c08:	jbe    0x414ba5
  414c0a:	push   ds
  414c0b:	lock call 0x50d7dec1
  414c11:	and    eax,DWORD PTR [edi-0x3f]
  414c14:	mov    esp,0x96532d64
  414c19:	xchg   DWORD PTR [edx],edi
  414c1b:	xor    bl,dh
  414c1d:	xor    DWORD PTR [esi+edx*1-0x346f1b38],0xfffffff0
  414c25:	pop    esp
  414c26:	icebp  
  414c27:	push   ebx
  414c28:	mov    al,BYTE PTR [ebx]
  414c2a:	pop    edx
  414c2b:	mov    ch,0xf9
  414c2d:	in     al,dx
  414c2e:	ins    DWORD PTR es:[edi],dx
  414c2f:	(bad)  
  414c30:	out    dx,eax
  414c31:	push   0xfffffffc
  414c33:	add    eax,0xf6ddb7d1
  414c38:	add    BYTE PTR [edx-0x25],dl
  414c3b:	sbb    eax,0x6bceeae3
  414c40:	in     al,dx
  414c41:	scas   eax,DWORD PTR es:[edi]
  414c42:	cs lahf 
  414c44:	ss mov al,0x5d
  414c47:	push   cs
  414c48:	mov    ds:0xb3ae278b,eax
  414c4d:	lea    ebp,[esp+ebx*2+0x71]
  414c51:	pop    edx
  414c52:	imul   ecx,DWORD PTR [esi-0x45],0x17
  414c56:	xchg   edx,eax
  414c57:	xor    eax,0xb0173907
  414c5c:	xchg   BYTE PTR [esi+edx*8+0x201153ef],ch
  414c63:	jb     0x414cbc
  414c65:	pop    ecx
  414c66:	jmp    0xa845f4b5
  414c6b:	sub    eax,0xffd4fe6c
  414c70:	fsub   DWORD PTR [ebp+0x23]
  414c73:	push   esp
  414c74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c75:	adc    eax,0x9ec116a9
  414c7a:	add    BYTE PTR [edi+0x1d],al
  414c7d:	mov    ah,0xe3
  414c7f:	pop    ds
  414c80:	pushf  
  414c81:	rol    BYTE PTR [esi],1
  414c83:	(bad)  
  414c84:	(bad)
  414c88:	scas   al,BYTE PTR es:[di]
  414c8a:	mov    ebp,0xdf200bce
  414c8f:	jae    0x414cb1
  414c91:	mov    ds:0xd5f1893d,al
  414c96:	iret   
  414c97:	cmp    BYTE PTR [edi+0x1823521d],cl
  414c9d:	js     0x414c30
  414c9f:	xor    bl,dl
  414ca1:	sbb    edx,DWORD PTR [edi+0x4897472b]
  414ca7:	in     al,dx
  414ca8:	add    al,0x68
  414caa:	bound  eax,QWORD PTR gs:[esi]
  414cad:	mov    ss,WORD PTR [edx-0x3ef77f00]
  414cb3:	out    0x83,eax
  414cb5:	and    bl,ch
  414cb7:	and    al,0x1b
  414cb9:	ror    DWORD PTR [ecx+0x2c1bfbe],cl
  414cbf:	or     DWORD PTR [ebp+0x5eab4a03],ebx
  414cc5:	xchg   edi,eax
  414cc6:	stc    
  414cc7:	loopne 0x414ca6
  414cc9:	inc    edi
  414cca:	mov    ds:0xfa66dc1d,al
  414ccf:	and    DWORD PTR ds:0x91362c1c,ebp
  414cd5:	add    DWORD PTR [edx-0x61b050db],edx
  414cdb:	inc    esp
  414cdc:	push   ebx
  414cdd:	mov    dl,0x1c
  414cdf:	out    0xb0,al
  414ce1:	mov    dl,0xe1
  414ce3:	push   0x66b078d2
  414ce8:	and    cl,BYTE PTR ds:0x623fc42a
  414cee:	aam    0x6d
  414cf0:	push   esp
  414cf1:	ret    
  414cf2:	es call 0x38e4c6b4
  414cf8:	fdivr  QWORD PTR ds:[ebx-0x6e3d4b49]
  414cff:	add    al,0x2c
  414d01:	ror    BYTE PTR [esi],cl
  414d03:	push   esp
  414d04:	call   0x27ac4719
  414d09:	push   ds
  414d0a:	sbb    eax,0xaec23ce3
  414d0f:	stc    
  414d10:	shl    DWORD PTR [eax],0xa0
  414d13:	ret    
  414d14:	add    ch,BYTE PTR [ecx-0x25]
  414d17:	cmc    
  414d18:	test   BYTE PTR [edi],dh
  414d1a:	int3   
  414d1b:	and    DWORD PTR [ebx-0xe],esp
  414d1e:	ins    BYTE PTR es:[edi],dx
  414d1f:	xchg   edx,eax
  414d20:	test   DWORD PTR [ebx-0x19],eax
  414d23:	(bad)  [eax+0x25f7371]
  414d29:	push   esi
  414d2a:	(bad)  
  414d2b:	repz (bad) 
  414d2d:	repnz in eax,dx
  414d2f:	push   esp
  414d30:	xlat   BYTE PTR ds:[bx]
  414d32:	ret    0xdf67
  414d35:	push   es
  414d36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d37:	ja     0x414d13
  414d39:	mov    esi,DWORD PTR [ecx]
  414d3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d3c:	jbe    0x414cec
  414d3e:	stos   BYTE PTR es:[edi],al
  414d3f:	xchg   ecx,eax
  414d40:	ds sbb ebp,edx
  414d43:	pop    eax
  414d44:	fprem  
  414d46:	imul   esi,DWORD PTR ds:0x3c7a22aa,0xffffffc2
  414d4d:	sub    eax,0x828a610d
  414d52:	cdq    
  414d53:	xor    BYTE PTR [esi+0x2f2b460b],bh
  414d59:	aas    
  414d5a:	pop    ebp
  414d5b:	cmp    al,0x5b
  414d5d:	je     0x414dbb
  414d5f:	sub    al,0x69
  414d61:	imul   esp,DWORD PTR [edx-0x51],0xf5a8deee
  414d68:	adc    al,0xea
  414d6a:	leave  
  414d6b:	push   cs
  414d6c:	test   BYTE PTR [edx-0x31],ah
  414d6f:	cld    
  414d70:	dec    ebp
  414d71:	(bad)  
  414d72:	std    
  414d73:	fadd   QWORD PTR [ecx+ebx*1-0x11]
  414d77:	das    
  414d78:	or     eax,ebp
  414d7a:	mov    DWORD PTR [esi+esi*2+0x4413fd8],0x45360f60
  414d85:	lds    ecx,FWORD PTR fs:[ebx-0x7500a7aa]
  414d8c:	int3   
  414d8d:	mov    dh,0x9b
  414d8f:	clc    
  414d90:	cmp    ah,BYTE PTR [ebx+ebp*1-0x4172c423]
  414d97:	lock sub DWORD PTR [eax],ebx
  414d9a:	xchg   dh,bl
  414d9c:	std    
  414d9d:	sbb    ah,bh
  414d9f:	ds into 
  414da1:	retf   0x764
  414da4:	push   esp
  414da5:	jns    0x414db3
  414da7:	div    BYTE PTR [edi]
  414da9:	pop    es
  414daa:	inc    edx
  414dab:	ss retf 
  414dad:	xchg   ecx,eax
  414dae:	test   DWORD PTR [edi],0x1ad68a81
  414db4:	xchg   edx,eax
  414db5:	jl     0x414d52
  414db7:	or     ebx,edx
  414db9:	loope  0x414da1
  414dbb:	xchg   esi,eax
  414dbc:	stos   DWORD PTR es:[edi],eax
  414dbd:	jo     0x414d5f
  414dbf:	push   esp
  414dc0:	add    DWORD PTR [esi-0x4c46c246],0x74
  414dc7:	int    0x94
  414dc9:	nop
  414dca:	jbe    0x414d5e
  414dcc:	xchg   ebx,eax
  414dcd:	es mov ecx,0x6b1f0b35
  414dd3:	pop    edi
  414dd4:	pop    ebx
  414dd5:	repnz push ecx
  414dd7:	stc    
  414dd8:	sbb    DWORD PTR [ecx-0x107cd10c],esp
  414dde:	cmp    BYTE PTR [esi+0x3d8688f],bh
  414de4:	inc    edi
  414de5:	imul   esi,ecx,0x787e80e2
  414deb:	or     al,0xd2
  414ded:	xchg   ebp,eax
  414dee:	rol    DWORD PTR [ecx-0x2c89fd6e],0xf4
  414df5:	loope  0x414daa
  414df7:	stos   BYTE PTR es:[edi],al
  414df8:	push   ds
  414df9:	(bad)  
  414dfa:	lds    esp,FWORD PTR [ebx]
  414dfc:	xchg   BYTE PTR [esi+0x19],dl
  414dff:	lock push edx
  414e01:	leave  
  414e02:	bound  esp,QWORD PTR [ecx+0x4208963a]
  414e08:	jp     0x414e88
  414e0a:	sub    BYTE PTR [eax+edi*2],ch
  414e0d:	imul   ebp,DWORD PTR [edx+0x37],0xffffff8d
  414e11:	out    0xd4,al
  414e13:	pop    esp
  414e14:	in     eax,dx
  414e15:	das    
  414e16:	xchg   ecx,eax
  414e17:	pop    edx
  414e18:	mov    edx,0xb4cf3669
  414e1d:	xchg   ebx,eax
  414e1e:	inc    ebp
  414e1f:	cmp    cl,BYTE PTR [ecx+0x2c]
  414e22:	xchg   edx,eax
  414e23:	mov    ds:0xab4bb98e,eax
  414e28:	lods   eax,DWORD PTR ds:[esi]
  414e29:	mov    al,0x8b
  414e2b:	popf   
  414e2c:	jmp    0x45a0fd34
  414e31:	test   al,0x3a
  414e33:	aaa    
  414e34:	stos   BYTE PTR es:[edi],al
  414e35:	in     eax,dx
  414e36:	cmp    eax,0x9058acb7
  414e3b:	ins    BYTE PTR es:[edi],dx
  414e3c:	icebp  
  414e3d:	pop    esi
  414e3e:	aaa    
  414e3f:	push   ebp
  414e40:	in     eax,0x17
  414e42:	mov    bl,0x5
  414e44:	cmc    
  414e45:	and    edi,DWORD PTR [eax]
  414e47:	inc    edi
  414e48:	xchg   esi,eax
  414e49:	inc    ecx
  414e4a:	sar    DWORD PTR [esi],cl
  414e4c:	mov    ds:0x3b11a5ef,eax
  414e51:	ret    0x3efd
  414e54:	sbb    bl,BYTE PTR [ecx-0x407c6eea]
  414e5a:	(bad)  
  414e5b:	jl     0x414e39
  414e5d:	in     eax,0x40
  414e5f:	inc    eax
  414e60:	jnp    0x414eb0
  414e62:	jmp    0x414e8a
  414e64:	pop    ebp
  414e65:	dec    ebp
  414e66:	js     0x414ee4
  414e68:	fcmove st,st(0)
  414e6a:	sbb    edi,0x9a08cc69
  414e70:	pop    edx
  414e71:	mov    esi,0x53d36bb8
  414e76:	test   DWORD PTR [esi],0x5dc14dd
  414e7c:	sti    
  414e7d:	cmc    
  414e7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e7f:	pop    ecx
  414e80:	pop    eax
  414e81:	push   esi
  414e82:	popa   
  414e83:	push   0x49
  414e85:	aad    0x0
  414e87:	xor    eax,ebx
  414e89:	addr16 push ecx
  414e8b:	les    edi,FWORD PTR [edi]
  414e8d:	push   ebp
  414e8e:	lods   al,BYTE PTR ds:[esi]
  414e8f:	jne    0x414e4a
  414e91:	dec    esi
  414e92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e93:	fild   DWORD PTR [ebx-0x291a90cd]
  414e99:	adc    edi,DWORD PTR [ebx+eax*8-0x33e14cd6]
  414ea0:	imul   esi,DWORD PTR [edx],0x7bd96877
  414ea6:	sbb    eax,0xcf35ca78
  414eab:	xchg   ebx,eax
  414eac:	in     al,0x3b
  414eae:	mov    ch,0x4a
  414eb0:	dec    edx
  414eb1:	out    dx,al
  414eb2:	rcl    BYTE PTR [esp+eax*8],1
  414eb5:	(bad)  
  414eb6:	(bad)
  414ebb:	std    
  414ebc:	pcmpeqb mm1,QWORD PTR [ecx+0x21]
  414ec0:	and    edi,DWORD PTR [edi+0x2ca2b1a4]
  414ec6:	xchg   esi,eax
  414ec7:	mov    bh,0xc7
  414ec9:	inc    ebx
  414eca:	not    DWORD PTR [edx-0x58]
  414ecd:	lahf   
  414ece:	or     eax,0xdba449aa
  414ed3:	jbe    0x414ebd
  414ed5:	sbb    eax,0x69924845
  414eda:	mov    dh,0x3
  414edc:	adc    bl,ch
  414ede:	xchg   esi,eax
  414edf:	mov    edi,0xddf6e682
  414ee4:	(bad)  
  414ee5:	mov    ecx,0x8fcbf0c9
  414eea:	xor    BYTE PTR ds:0x8b572af2,dh
  414ef0:	sub    al,0x4b
  414ef2:	in     eax,dx
  414ef3:	je     0x414e75
  414ef5:	mov    WORD PTR [edx-0x31],fs
  414ef8:	int    0x72
  414efa:	xchg   ebp,eax
  414efb:	fldenv [esi]
  414efd:	ins    BYTE PTR es:[edi],dx
  414efe:	dec    esi
  414eff:	in     al,0x80
  414f01:	mov    dh,0xee
  414f03:	add    esp,DWORD PTR [eax+0x75e20164]
  414f09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f0a:	xchg   BYTE PTR [edi+0x6c8a1492],bl
  414f10:	or     DWORD PTR [edi],esp
  414f12:	sbb    edi,DWORD PTR [ebx+0x52]
  414f15:	jne    0x414f28
  414f17:	push   0xffffffd8
  414f19:	jmp    0x414efe
  414f1b:	xchg   edx,eax
  414f1c:	xor    ch,dh
  414f1e:	push   eax
  414f1f:	out    dx,eax
  414f20:	mov    edx,ebp
  414f22:	enter  0xfbef,0x2c
  414f26:	sbb    BYTE PTR [edi],bl
  414f28:	mov    bl,0x78
  414f2a:	xor    DWORD PTR [ebx+0x26e5f30f],ecx
  414f30:	push   eax
  414f31:	push   esp
  414f32:	mov    bl,0xd
  414f34:	js     0x414ec3
  414f36:	sbb    al,0xce
  414f38:	lods   al,BYTE PTR ds:[esi]
  414f39:	je     0x414f1b
  414f3b:	nop
  414f3c:	xor    DWORD PTR [edi-0x3c],ecx
  414f3f:	cmc    
  414f40:	fstp   TBYTE PTR [esi+0x5a]
  414f43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f44:	gs mov cl,0xa9
  414f48:	push   edx
  414f49:	js     0x414ecd
  414f4b:	pop    ss
  414f4c:	xchg   ebx,eax
  414f4d:	xor    DWORD PTR [esi+0x49b6d27c],esp
  414f53:	pop    ebx
  414f54:	mov    eax,ebx
  414f56:	loop   0x414f41
  414f58:	push   cs
  414f59:	add    eax,DWORD PTR ds:0x1357333f
  414f5f:	mov    DWORD PTR [ebx+0x38],ebp
  414f62:	lahf   
  414f63:	dec    edi
  414f65:	loope  0x414f6b
  414f67:	out    dx,eax
  414f68:	or     al,0xcb
  414f6a:	sub    edi,edi
  414f6c:	inc    ebp
  414f6d:	inc    esp
  414f6e:	or     al,0xbc
  414f70:	mov    bl,0x11
  414f72:	push   esp
  414f73:	sub    DWORD PTR [eax],ebp
  414f75:	jae    0x414f42
  414f77:	push   ebx
  414f78:	aas    
  414f79:	inc    ebp
  414f7a:	and    BYTE PTR [ebp+0x131d2241],cl
  414f80:	xchg   esp,eax
  414f81:	hlt    
  414f82:	dec    esp
  414f83:	stos   DWORD PTR es:[edi],eax
  414f84:	sub    edx,ecx
  414f86:	inc    ecx
  414f87:	in     eax,dx
  414f88:	cs push eax
  414f8a:	ret    
  414f8b:	mov    cl,0x4a
  414f8d:	jge    0x414f2d
  414f8f:	ja     0x414f5f
  414f91:	fidiv  WORD PTR ds:0x14bcd73b
  414f97:	test   al,0x4e
  414f99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f9a:	xor    DWORD PTR [eax+0x11],edx
  414f9d:	int    0x97
  414f9f:	faddp  st(7),st
  414fa1:	add    eax,0x3f018a4b
  414fa6:	sbb    DWORD PTR [edx],ecx
  414fa8:	mov    dh,0x65
  414faa:	push   0x5e8ee9f
  414faf:	adc    BYTE PTR [edx-0x3d772a7b],0x8b
  414fb6:	das    
  414fb7:	test   eax,0xd5b42b8c
  414fbc:	test   eax,0xb9e84c1f
  414fc1:	je     0x415001
  414fc3:	sbb    edi,DWORD PTR [esi+0x6871cbad]
  414fc9:	nop
  414fca:	aaa    
  414fcb:	xor    eax,0xd51182d4
  414fd0:	mov    ebp,0x9c60712d
  414fd5:	out    dx,eax
  414fd6:	mov    cl,0x37
  414fd8:	jmp    0xe66d4cb3
  414fdd:	enter  0x268b,0xf4
  414fe1:	popa   
  414fe2:	push   edi
  414fe3:	add    cl,dl
  414fe5:	push   edi
  414fe6:	nop    DWORD PTR [eax]
  414fe9:	leave  
  414fea:	jnp    0x415049
  414fec:	sbb    eax,0xf3c4e5e7
  414ff1:	push   cs
  414ff2:	sub    bh,ah
  414ff4:	(bad)  
  414ff5:	jmp    0x4b777686
  414ffa:	jae    0x41507a
  414ffc:	or     DWORD PTR [ecx+edx*4-0x36d691fd],ebp
  415003:	pop    ss
  415004:	add    al,0x5c
  415006:	dec    eax
  415007:	jmp    0x818508f0
  41500c:	sub    BYTE PTR [eax-0x6e],dh
  41500f:	pop    esi
  415010:	test   eax,0xfd6cc4c6
  415015:	jge    0x414fea
  415017:	es dec edi
  415019:	cs stos BYTE PTR es:[edi],al
  41501b:	jecxz  0x41507a
  41501d:	loopne 0x415064
  41501f:	fisttp WORD PTR [esi+0x55729185]
  415025:	lahf   
  415026:	je     0x415074
  415028:	pop    ebx
  415029:	enter  0x22d0,0xfa
  41502d:	std    
  41502e:	sub    al,0x9d
  415030:	sub    eax,0x5bb919a2
  415035:	pop    ebp
  415036:	mov    edx,0xc88a8882
  41503b:	push   ebx
  41503c:	cs pop es
  41503e:	or     BYTE PTR [esi],bl
  415040:	(bad)  
  415041:	jb     0x415007
  415043:	cli    
  415044:	psubsw mm7,QWORD PTR [ebx+0x1d]
  415048:	outs   dx,BYTE PTR ds:[esi]
  415049:	js     0x415071
  41504b:	dec    edi
  41504c:	dec    eax
  41504d:	push   0xdfc14418
  415052:	pushf  
  415053:	dec    ebx
  415054:	ret    
  415055:	pop    edi
  415056:	pusha  
  415057:	in     al,dx
  415058:	pop    eax
  415059:	adc    BYTE PTR [edi+0xb146f0b],ah
  41505f:	loope  0x414fe8
  415061:	sub    esp,DWORD PTR [edi+0x6de683f3]
  415067:	xchg   ecx,eax
  415068:	xchg   esp,eax
  415069:	les    ebx,FWORD PTR [ebx-0x59ab19e5]
  41506f:	shl    bl,1
  415071:	dec    esp
  415072:	add    esi,esp
  415074:	sar    BYTE PTR [eax-0x6c],0x6c
  415078:	inc    esi
  415079:	bound  eax,QWORD PTR [ecx]
  41507b:	arpl   WORD PTR [esi-0x358e07de],di
  415081:	cmc    
  415082:	les    edx,FWORD PTR [ebx+0x51c8f3f5]
  415088:	xchg   edx,eax
  415089:	mov    dl,0x27
  41508b:	mov    gs,WORD PTR [ecx]
  41508d:	aad    0x5f
  41508f:	int3   
  415090:	stc    
  415091:	jb     0x41504a
  415093:	fist   WORD PTR [edi+0x73d44d6]
  415099:	pop    es
  41509a:	xor    DWORD PTR [eax+0x4],esp
  41509d:	dec    esi
  41509e:	ja     0x41505d
  4150a0:	loop   0x41506d
  4150a2:	mov    es,WORD PTR [edi-0x8]
  4150a5:	aas    
  4150a6:	push   edx
  4150a7:	sbb    DWORD PTR [esi-0x7e7e9320],eax
  4150ad:	test   al,0x1e
  4150af:	lods   eax,DWORD PTR ds:[esi]
  4150b0:	mov    eax,ds:0x11b94e76
  4150b5:	lods   eax,DWORD PTR ds:[esi]
  4150b6:	lahf   
  4150b7:	cmp    BYTE PTR [edx+edx*8-0xcaad5e5],cl
  4150be:	cmp    al,0x41
  4150c0:	fnstsw WORD PTR [ebp-0x2af5d002]
  4150c6:	(bad)  
  4150c8:	xchg   DWORD PTR [edx],esi
  4150ca:	mov    edi,0xb70bcc43
  4150cf:	mov    DWORD PTR [ebx],esp
  4150d1:	scas   eax,DWORD PTR es:[edi]
  4150d2:	inc    esp
  4150d3:	(bad)  
  4150d4:	and    edx,eax
  4150d6:	jns    0x4150f8
  4150d8:	inc    eax
  4150d9:	dec    esp
  4150da:	ror    DWORD PTR [edx-0x7c11ac6d],1
  4150e0:	jle    0x4150df
  4150e2:	dec    ebp
  4150e3:	imul   edx,DWORD PTR [edx],0xe8239111
  4150e9:	mov    ds:0x3314ac76,eax
  4150ee:	ds out dx,eax
  4150f0:	in     eax,0x15
  4150f2:	loop   0x415116
  4150f4:	(bad)  
  4150f5:	push   ecx
  4150f6:	xchg   BYTE PTR [ecx+0x70],al
  4150f9:	push   ss
  4150fa:	adc    al,0xf6
  4150fc:	adc    DWORD PTR [ecx],esp
  4150fe:	loopne 0x4150e6
  415100:	push   esp
  415101:	fstp   QWORD PTR [esi+0x5b]
  415104:	and    BYTE PTR [ecx],al
  415106:	push   ss
  415107:	fistp  DWORD PTR [esi+0x5d3d2025]
  41510d:	rol    esi,1
  41510f:	sar    DWORD PTR [esi],0xce
  415112:	js     0x4150da
  415114:	out    dx,eax
  415115:	sbb    BYTE PTR [esi],ah
  415117:	daa    
  415118:	mov    eax,0x3ccd4e78
  41511d:	pop    eax
  41511e:	cli    
  41511f:	lea    edi,[ebx]
  415121:	push   esi
  415122:	mov    ch,0xe6
  415124:	cmp    al,0x64
  415126:	xchg   BYTE PTR [eax+0x3e],bl
  415129:	cdq    
  41512a:	loop   0x41510a
  41512c:	sbb    cl,BYTE PTR [edi-0x1617a306]
  415132:	ins    BYTE PTR es:[edi],dx
  415133:	(bad)  [esi+0x63]
  415136:	inc    eax
  415137:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415138:	adc    esi,esp
  41513a:	sub    DWORD PTR [edi],ebp
  41513c:	adc    DWORD PTR [ecx+0x74],esi
  41513f:	nop
  415140:	fsubr  st(7),st
  415142:	mov    edi,0x4604c13a
  415147:	daa    
  415148:	jnp    0x41511a
  41514a:	fucomip st,st(3)
  41514c:	lahf   
  41514d:	or     eax,0x847bb377
  415152:	fnsave [esi]
  415154:	add    esp,0x69
  415157:	out    dx,eax
  415158:	push   edi
  415159:	sub    eax,0x9d9a569b
  41515e:	push   0xffffffa0
  415160:	push   esi
  415161:	repnz icebp 
  415163:	dec    ebx
  415164:	loopne 0x41517b
  415166:	and    dl,BYTE PTR [edi+0x41e3655d]
  41516c:	add    DWORD PTR [esi+esi*4-0x22],ecx
  415170:	mov    ebp,0xa4185e9c
  415175:	fwait
  415176:	dec    esi
  415177:	fstp   DWORD PTR [eax+0x73]
  41517a:	cs pop esi
  41517c:	int    0xd4
  41517e:	fwait
  41517f:	add    al,0xa0
  415181:	test   eax,0x5df3b018
  415186:	push   0xa6584498
  41518b:	arpl   WORD PTR [esi],si
  41518d:	icebp  
  41518e:	ret    0x8b1d
  415191:	sbb    DWORD PTR [ebp+0x68],ecx
  415194:	into   
  415195:	jge    0x415152
  415197:	scas   eax,DWORD PTR es:[edi]
  415198:	arpl   si,bx
  41519a:	(bad)  
  41519b:	dec    ecx
  41519c:	mov    edx,0x2936cd1c
  4151a1:	mov    ah,0x8a
  4151a3:	adc    esi,edi
  4151a5:	xor    al,0xba
  4151a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151a8:	sub    eax,0x92d8dea9
  4151ad:	jg     0x4151c6
  4151af:	adc    eax,0x10bf27d3
  4151b4:	paddsw mm4,mm1
  4151b7:	mov    BYTE PTR [ebx+0x23],bl
  4151ba:	fwait
  4151bb:	test   eax,0xaa76bb23
  4151c0:	xchg   edx,eax
  4151c1:	in     al,0x6d
  4151c3:	das    
  4151c4:	jne    0x415218
  4151c6:	mov    ds:0xec18db39,al
  4151cb:	xor    DWORD PTR [eax+0x7c36363d],0xd9c68890
  4151d5:	in     al,dx
  4151d6:	aad    0x12
  4151d8:	sub    esi,0xffffffb4
  4151db:	add    dl,dl
  4151dd:	mov    cl,0x47
  4151df:	stos   DWORD PTR es:[edi],eax
  4151e0:	sbb    cl,BYTE PTR [ecx+eax*4+0x5cc7379e]
  4151e7:	jmp    0x182c986d
  4151ec:	into   
  4151ed:	sub    dh,bl
  4151ef:	jns    0x415257
  4151f1:	scas   eax,DWORD PTR es:[edi]
  4151f2:	(bad)  
  4151f3:	rcr    DWORD PTR [edx-0x6],cl
  4151f6:	or     BYTE PTR [edx-0x33],bl
  4151f9:	outs   dx,DWORD PTR ds:[esi]
  4151fa:	sub    ah,BYTE PTR [ebp+0x6e4ea2a0]
  415200:	pop    ss
  415201:	sbb    cl,al
  415203:	in     al,dx
  415204:	enter  0xca40,0xcf
  415208:	dec    esi
  415209:	add    al,0xb1
  41520b:	xchg   ebx,eax
  41520c:	iret   
  41520d:	sub    BYTE PTR ss:[edx],dh
  415210:	adc    ebp,edx
  415212:	aad    0x34
  415214:	rcr    BYTE PTR [edx],1
  415216:	mov    edx,0x2929fc3c
  41521b:	js     0x4151c0
  41521d:	pop    ebx
  41521e:	sbb    ebp,edi
  415220:	mov    ds:0x8e548ba2,eax
  415225:	or     DWORD PTR [ebx],edx
  415227:	test   DWORD PTR [esi],0xc4d78dac
  41522d:	cdq    
  41522e:	dec    eax
  41522f:	(bad)  
  415230:	ja     0x41523c
  415232:	mov    eax,0x6225f352
  415237:	fild   WORD PTR ds:0xa82ac1c2
  41523d:	lahf   
  41523e:	int    0x88
  415240:	inc    ebp
  415241:	jmp    0xabc2:0x9a0bd48
  415248:	imul   BYTE PTR [esi+esi*2]
  41524b:	aaa    
  41524c:	cmc    
  41524d:	(bad)  
  41524f:	pop    ebx
  415250:	inc    ecx
  415251:	sub    BYTE PTR [esi],al
  415253:	pop    eax
  415254:	call   0xbf14:0x879e0d98
  41525b:	or     dl,BYTE PTR [esi+0x113ea0a6]
  415261:	push   esp
  415262:	or     al,0xb9
  415264:	nop
  415265:	jmp    0xaeaeee70
  41526a:	jmp    DWORD PTR [ebx]
  41526c:	fs pop ds
  41526e:	inc    esi
  41526f:	aas    
  415270:	rol    dl,cl
  415272:	into   
  415273:	les    eax,FWORD PTR [eax]
  415275:	cmp    ebx,0xaaada442
  41527b:	push   ebx
  41527c:	out    0x74,al
  41527e:	sub    dh,ah
  415280:	loope  0x4152bd
  415282:	scas   al,BYTE PTR es:[edi]
  415283:	or     ebx,DWORD PTR [ebp+0x4803a326]
  415289:	or     al,0x1b
  41528b:	dec    esp
  41528c:	or     DWORD PTR [eax+0xb],ebp
  41528f:	cmp    al,0x1e
  415291:	and    dl,BYTE PTR [eax+0x1fe6785]
  415297:	shr    DWORD PTR [esi-0x11dbd32f],0xe1
  41529e:	and    al,0x78
  4152a0:	stos   DWORD PTR es:[edi],eax
  4152a1:	xor    edi,DWORD PTR [ecx-0xf8c53ec]
  4152a7:	arpl   WORD PTR [esi-0x23],di
  4152aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152ab:	(bad)  
  4152ad:	loopne 0x41531f
  4152af:	mov    ebp,ebx
  4152b1:	std    
  4152b2:	or     eax,0xca98a8f3
  4152b7:	sbb    eax,0xe1be35bc
  4152bc:	mov    ebx,0x6d97c805
  4152c1:	mov    ah,0x5e
  4152c3:	(bad)  
  4152c4:	cld    
  4152c5:	lods   eax,DWORD PTR ds:[esi]
  4152c6:	jmp    0x41531b
  4152c8:	aas    
  4152c9:	in     al,0x13
  4152cb:	int3   
  4152cc:	sub    al,0x70
  4152cf:	popa   
  4152d0:	addr16 (bad) 
  4152d2:	bound  ebp,QWORD PTR [eax+ebx*2-0x14860fba]
  4152d9:	and    cl,dh
  4152db:	ins    BYTE PTR es:[edi],dx
  4152dc:	gs xchg sp,ax
  4152df:	cmp    bh,BYTE PTR [eax+0x591b5168]
  4152e5:	fsub   st(3),st
  4152e7:	push   ss
  4152e8:	jbe    0x41533d
  4152ea:	sti    
  4152eb:	push   ebx
  4152ec:	(bad)  
  4152ed:	repnz icebp 
  4152ef:	call   0xbd66:0xe389c6eb
  4152f6:	mov    BYTE PTR [ecx-0x3e],al
  4152f9:	mov    eax,ss:0x1df73493
  4152ff:	pop    ebp
  415300:	xchg   ebx,ebx
  415302:	xchg   esi,eax
  415303:	xlat   BYTE PTR ds:[ebx]
  415304:	rcr    BYTE PTR [edi+ebx*8-0x17],0x31
  415309:	or     dl,BYTE PTR [ebp+0x20a33056]
  41530f:	outs   dx,BYTE PTR es:[esi]
  415311:	call   DWORD PTR [edi-0x65]
  415314:	scas   eax,DWORD PTR es:[edi]
  415315:	or     al,BYTE PTR [edi]
  415317:	jbe    0x4152ff
  415319:	xor    BYTE PTR [ecx],0xde
  41531c:	adc    esi,DWORD PTR [eax-0x72]
  41531f:	adc    eax,0x43872e1c
  415324:	xor    BYTE PTR [ebx],bl
  415326:	mov    bl,0x76
  415328:	dec    ecx
  415329:	cmp    cl,dl
  41532b:	lods   eax,DWORD PTR ds:[esi]
  41532c:	cld    
  41532d:	scas   eax,DWORD PTR es:[edi]
  41532e:	out    0xc6,al
  415330:	add    eax,0xc7a5bac0
  415335:	dec    edx
  415336:	mov    esi,0x9190346c
  41533b:	loop   0x415380
  41533d:	mov    eax,0xc6617bb9
  415342:	scas   al,BYTE PTR es:[edi]
  415343:	add    dl,BYTE PTR [eax-0x3f]
  415346:	repz jo 0x415389
  415349:	mov    ebp,0x2263514
  41534e:	pop    ss
  41534f:	push   es
  415350:	into   
  415351:	je     0x4153c8
  415353:	mov    ebx,0xf70d40d0
  415358:	dec    ebx
  415359:	fidivr DWORD PTR [ebp+0x3f]
  41535c:	lods   al,BYTE PTR ds:[esi]
  41535d:	xor    ecx,DWORD PTR [edi-0x7c879073]
  415363:	adc    dh,BYTE PTR [ebp+0x78]
  415366:	pop    ds
  415367:	call   0x3869850d
  41536c:	mov    ah,0xa8
  41536e:	xor    DWORD PTR [esi],esp
  415370:	inc    ebx
  415371:	push   edx
  415372:	push   0xffffffd0
  415374:	sbb    bh,BYTE PTR [eax+0x60b2aebe]
  41537a:	sub    al,0x6f
  41537c:	frndint 
  41537e:	adc    DWORD PTR ss:[esi-0x14],ebp
  415382:	(bad)  
  415384:	mov    edi,0x3089009d
  415389:	sbb    eax,0xb1fa1b5d
  41538e:	mov    esi,edx
  415390:	inc    eax
  415391:	pop    ds
  415392:	add    eax,edi
  415394:	int3   
  415395:	nop
  415396:	repnz mov ds:0xc02d96a,eax
  41539c:	add    ch,BYTE PTR [eax+eax*2-0x22]
  4153a0:	or     ebp,DWORD PTR [esi-0x32daa959]
  4153a6:	fild   WORD PTR [ebx]
  4153a8:	in     eax,dx
  4153a9:	into   
  4153aa:	stc    
  4153ab:	ins    BYTE PTR es:[edi],dx
  4153ac:	jb     0x4153a7
  4153ae:	cmp    al,0xcf
  4153b0:	(bad)  
  4153b1:	mov    ecx,0x5d89d92
  4153b6:	cmp    edi,DWORD PTR ds:0xb0c3dd99
  4153bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153bd:	ss jne 0x41537a
  4153c0:	stos   BYTE PTR es:[edi],al
  4153c1:	sti    
  4153c2:	cmp    BYTE PTR [edx+0x117a78ba],bl
  4153c8:	loope  0x41536c
  4153ca:	int    0x92
  4153cc:	aam    0xda
  4153ce:	adc    BYTE PTR [ebx-0x1f7c6bc2],0xeb
  4153d5:	and    eax,0x72e5f69b
  4153da:	dec    edi
  4153db:	inc    dx
  4153dd:	cmp    DWORD PTR [ecx],0x1a
  4153e0:	icebp  
  4153e1:	out    dx,eax
  4153e2:	and    al,0xb1
  4153e4:	sub    DWORD PTR [eax+0x6cbdf640],edi
  4153ea:	push   ss
  4153eb:	comiss xmm4,DWORD PTR [edi+0x37dfec85]
  4153f2:	xchg   ebp,eax
  4153f3:	push   0xffffffca
  4153f5:	lea    esp,[eax-0x33]
  4153f8:	jmp    0x415437
  4153fa:	ins    BYTE PTR es:[edi],dx
  4153fb:	sbb    al,dh
  4153fd:	idiv   DWORD PTR [edi+0x76]
  415400:	pop    es
  415401:	enter  0x6a71,0x3c
  415405:	sahf   
  415406:	push   edx
  415407:	or     ch,BYTE PTR [edi+edx*1]
  41540a:	ds xor eax,0x78133d81
  415410:	or     al,0xc2
  415412:	mov    ?,eax
  415414:	push   edi
  415415:	jbe    0x4153eb
  415417:	cmp    dl,dl
  415419:	mov    cl,0x98
  41541b:	jmp    ebp
  41541d:	clc    
  41541e:	xchg   BYTE PTR [esi-0x50],bh
  415421:	mov    cl,BYTE PTR [ecx]
  415423:	(bad)  
  415424:	mov    cl,0x33
  415426:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415427:	out    dx,al
  415428:	(bad)  
  415429:	psrld  mm7,mm5
  41542c:	push   edx
  41542d:	arpl   WORD PTR [ebx-0x12f7702d],sp
  415433:	ins    DWORD PTR es:[di],dx
  415435:	addr16 lahf 
  415437:	sahf   
  415438:	cmp    al,0x8b
  41543a:	push   edi
  41543b:	sub    al,0xb8
  41543d:	or     bh,BYTE PTR [esi]
  41543f:	paddsb mm7,mm7
  415442:	pusha  
  415443:	aaa    
  415444:	jae    0x4153f2
  415446:	xchg   edi,eax
  415447:	mov    ebx,tr7
  41544a:	xor    BYTE PTR [ecx],ch
  41544c:	daa    
  41544d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41544e:	xor    ecx,edx
  415450:	inc    ebp
  415451:	fsubp  st(2),st
  415453:	in     eax,0x93
  415455:	push   es
  415456:	enter  0x7baa,0xa8
  41545a:	fdiv   QWORD PTR [ebp+0x7b28d915]
  415460:	sbb    eax,0x88be6db2
  415465:	and    al,0xa6
  415467:	dec    edx
  415468:	(bad)  
  415469:	sbb    dh,cl
  41546b:	lds    eax,FWORD PTR [edi+0x4d]
  41546e:	fisubr WORD PTR [ecx]
  415470:	js     0x4154a8
  415472:	adc    DWORD PTR [ecx],edi
  415474:	or     DWORD PTR [ecx+0x1bd478e6],0x1b1b7c0f
  41547e:	fs call 0x91ac:0x71366b32
  415486:	in     eax,dx
  415487:	add    ebx,0x103a763d
  41548d:	mov    dl,0x9d
  41548f:	clc    
  415490:	loope  0x415448
  415492:	call   0x24b88442
  415497:	stos   BYTE PTR es:[edi],al
  415498:	mov    ds:0x1fe60d22,al
  41549d:	inc    edi
  41549e:	adc    edx,DWORD PTR [ebx-0x3cd93305]
  4154a4:	mov    ecx,0x12f7ad48
  4154a9:	pop    edx
  4154aa:	pop    ebx
  4154ab:	mov    edx,0x26abdc7e
  4154b0:	jne    0x415530
  4154b2:	nop
  4154b3:	psubsw mm4,QWORD PTR [esi+0x6ad64ca0]
  4154ba:	test   eax,0x7a558fe
  4154bf:	hlt    
  4154c0:	(bad)  
  4154c1:	jge    0x4154b6
  4154c3:	jecxz  0x415485
  4154c5:	shl    DWORD PTR [esi],1
  4154c7:	dec    ecx
  4154c8:	jb     0x4154be
  4154ca:	dec    edx
  4154cb:	adc    eax,DWORD PTR [edx-0x30]
  4154ce:	or     bl,BYTE PTR [eax+0x7bf5952]
  4154d4:	dec    ecx
  4154d5:	dec    ebx
  4154d6:	aam    0xbe
  4154d8:	(bad)  
  4154d9:	push   esp
  4154da:	xchg   BYTE PTR [esi-0x6bbc7060],al
  4154e0:	lds    esi,FWORD PTR [ebx+0x33]
  4154e3:	and    BYTE PTR [edx],bl
  4154e5:	xchg   BYTE PTR [ebx-0xe],bh
  4154e8:	iret   
  4154e9:	and    al,BYTE PTR [eax-0x5f]
  4154ec:	(bad)  [esp+edi*2]
  4154ef:	popf   
  4154f0:	fld    DWORD PTR [esi+eax*2+0x44]
  4154f4:	popa   
  4154f5:	inc    eax
  4154f6:	(bad)  
  4154f7:	daa    
  4154f8:	mov    es,ebx
  4154fa:	aas    
  4154fb:	push   esp
  4154fc:	xchg   ebp,edi
  4154fe:	hlt    
  4154ff:	xor    bl,0x31
  415502:	lods   eax,DWORD PTR ds:[esi]
  415503:	xor    DWORD PTR [eax+0xcb6cccc],eax
  415509:	call   0x2459:0xdba95d59
  415510:	repz lea eax,[edi-0x5d]
  415514:	mov    eax,ds:0xebbec3bc
  415519:	out    dx,al
  41551a:	push   ebp
  41551b:	or     eax,0x29caa763
  415520:	add    DWORD PTR [ecx+eiz*4],0x55
  415524:	je     0x4154d8
  415526:	sub    bh,al
  415528:	aas    
  415529:	cwde   
  41552a:	push   esi
  41552b:	xchg   ebx,eax
  41552c:	sar    BYTE PTR [edx-0x73],0xf6
  415530:	sbb    eax,DWORD PTR [eax+0x68a055f5]
  415536:	inc    eax
  415537:	(bad)  
  415539:	ja     0x4154c3
  41553b:	sbb    DWORD PTR [ebx+ebx*4-0x53d1d190],ebp
  415542:	sti    
  415543:	std    
  415544:	lahf   
  415545:	test   eax,edi
  415547:	mov    al,0xc3
  415549:	pop    ebp
  41554a:	cmc    
  41554b:	sub    DWORD PTR [ebp-0x1a176fa3],edx
  415551:	fdivr  QWORD PTR [ebx+0xd]
  415554:	ins    BYTE PTR es:[edi],dx
  415555:	add    al,0xcc
  415557:	xor    BYTE PTR [edi+0x34],ch
  41555a:	sbb    ch,BYTE PTR [ebx+0x5b8a258d]
  415560:	lods   al,BYTE PTR ds:[esi]
  415561:	add    esp,ecx
  415563:	fstp   QWORD PTR [ecx]
  415565:	mov    esp,0xe5626b93
  41556a:	push   eax
  41556b:	pop    edx
  41556c:	mov    eax,ds:0x25393f4b
  415571:	stos   BYTE PTR es:[edi],al
  415572:	clc    
  415573:	test   al,0x3a
  415575:	into   
  415576:	xchg   ebp,esi
  415578:	shr    BYTE PTR [esi],1
  41557a:	icebp  
  41557b:	shr    DWORD PTR [ebx],cl
  41557d:	fwait
  41557e:	push   0x4a
  415580:	mov    ah,0x41
  415582:	cli    
  415583:	xchg   esi,eax
  415584:	or     eax,ecx
  415586:	push   esp
  415587:	(bad)  
  415588:	pop    esi
  415589:	cmp    DWORD PTR cs:[edi+0x46adc037],ebp
  415590:	int3   
  415591:	in     al,dx
  415592:	in     al,0x21
  415594:	cmp    al,0x12
  415596:	xchg   esp,eax
  415597:	adc    cl,ch
  415599:	dec    ebp
  41559a:	mov    ebp,DWORD PTR [ebx-0x27]
  41559d:	cdq    
  41559e:	ds daa 
  4155a0:	push   cs
  4155a1:	xor    ebp,DWORD PTR [esi]
  4155a3:	in     al,dx
  4155a4:	addr16 loopne 0x415619
  4155a7:	imul   esp,DWORD PTR [ebx+0x5d],0x7ee906f5
  4155ae:	retf   0xdb07
  4155b1:	add    eax,0x619e7518
  4155b6:	xor    esp,DWORD PTR [ebx-0x53d015fe]
  4155bc:	psrad  mm3,QWORD PTR [edx+0xc]
  4155c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155c1:	cmc    
  4155c2:	mov    eax,0xf8f848e9
  4155c7:	jl     0x4155a1
  4155c9:	and    al,0x35
  4155cb:	or     DWORD PTR [ecx],esp
  4155cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155ce:	and    DWORD PTR [ecx-0x48576cf7],ecx
  4155d4:	repnz adc BYTE PTR [ecx],dh
  4155d7:	fisttp WORD PTR [edi+0x23]
  4155da:	(bad)  
  4155dc:	sub    edi,DWORD PTR [ebp-0x57]
  4155df:	xor    bh,BYTE PTR [edx-0x74bd8f4a]
  4155e5:	enter  0x9624,0x9e
  4155e9:	das    
  4155ea:	push   ebp
  4155eb:	pop    ebx
  4155ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155ed:	adc    ebp,DWORD PTR [ebx-0x45]
  4155f0:	test   DWORD PTR [ecx-0x405cb4e0],ebp
  4155f6:	test   eax,eax
  4155f8:	dec    edx
  4155f9:	dec    ebp
  4155fa:	push   ebp
  4155fb:	push   eax
  4155fc:	sbb    BYTE PTR [edx],bl
  4155fe:	cmp    BYTE PTR [edx+0x20],cl
  415601:	test   eax,0xeaba7ba4
  415606:	pop    ss
  415607:	jp     0x415668
  415609:	jno    0x415635
  41560b:	jmp    0x8125e5c9
  415610:	(bad)  
  415611:	jle    0x4155a1
  415613:	fwait
  415614:	leave  
  415615:	jg     0x41567d
  415617:	add    edi,DWORD PTR [ecx+0x11]
  41561a:	jne    0x4155b6
  41561c:	or     al,0x36
  41561e:	xor    eax,0x29c048b3
  415623:	andnps xmm7,XMMWORD PTR [eax+0x136cb77e]
  41562a:	cs stc 
  41562c:	push   0x24
  41562e:	in     eax,dx
  41562f:	stc    
  415630:	aaa    
  415631:	sub    dh,BYTE PTR [ecx-0x73]
  415634:	scas   al,BYTE PTR es:[edi]
  415635:	lods   eax,DWORD PTR ds:[esi]
  415636:	sub    eax,0x71
  415639:	call   0xfe6ba797
  41563e:	ins    DWORD PTR es:[edi],dx
  41563f:	int    0x2
  415641:	ja     0x415622
  415643:	in     al,0x41
  415645:	pop    esi
  415646:	inc    ebx
  415647:	das    
  415648:	ror    DWORD PTR [eax+0x40],0x27
  41564c:	pop    eax
  41564d:	xchg   esp,eax
  41564e:	dec    esi
  41564f:	or     bl,BYTE PTR [eax+edx*2]
  415652:	mov    bh,0x3e
  415654:	adc    al,0xfc
  415656:	jecxz  0x4156d6
  415658:	les    edi,FWORD PTR [esi-0x7b]
  41565b:	mov    bh,0x44
  41565d:	das    
  41565e:	fdivr  st(5),st
  415660:	outs   dx,DWORD PTR ds:[esi]
  415661:	icebp  
  415662:	sbb    ecx,esp
  415664:	xchg   BYTE PTR [ecx-0x47470616],bh
  41566a:	cmp    BYTE PTR [esi+0x1f],ah
  41566d:	cmp    al,0xe2
  41566f:	(bad)  
  415670:	int3   
  415671:	xchg   esi,eax
  415672:	add    al,0xa8
  415674:	fild   WORD PTR [edi+0x372b214a]
  41567a:	pop    ebx
  41567b:	add    eax,0x34dce0b8
  415680:	jmp    0x23d6:0xba91056a
  415687:	retf   0x6257
  41568a:	(bad)  
  41568b:	jmp    0xd1e34d5d
  415690:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415691:	xchg   edx,eax
  415692:	mov    ecx,0x5168b04b
  415697:	iret   
  415698:	ins    BYTE PTR es:[edi],dx
  415699:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41569a:	sysexit 
  41569c:	mov    dl,0x8a
  41569e:	stos   BYTE PTR es:[edi],al
  41569f:	and    BYTE PTR [ebx],dh
  4156a1:	sub    eax,DWORD PTR [ebx-0x23]
  4156a4:	or     eax,0xbc73c295
  4156a9:	in     al,dx
  4156aa:	mov    eax,?
  4156ac:	into   
  4156ad:	aam    0xc3
  4156af:	inc    eax
  4156b0:	sbb    al,0x82
  4156b2:	and    al,0x3e
  4156b4:	lds    ecx,FWORD PTR [ebp-0x3715d5df]
  4156ba:	mov    ebx,0x4091b803
  4156bf:	add    DWORD PTR [edx],ebp
  4156c1:	xchg   DWORD PTR [ebx],esi
  4156c3:	into   
  4156c4:	jb     0x41564e
  4156c6:	mov    WORD PTR [eax],ss
  4156c8:	out    0x43,eax
  4156ca:	push   ebp
  4156cb:	jb     0x415717
  4156cd:	inc    ecx
  4156ce:	in     eax,dx
  4156cf:	jmp    0x26921e44
  4156d4:	jnp    0x4156c7
  4156d6:	jp     0x415752
  4156d8:	fbstp  TBYTE PTR [ecx+0x1c46e84b]
  4156de:	sbb    eax,0xde42c0b2
  4156e3:	ror    DWORD PTR [ebp+0x6a5d4196],0xbd
  4156ea:	fldcw  WORD PTR [ecx-0x26]
  4156ed:	sahf   
  4156ee:	mov    eax,ds:0x2ac5da3f
  4156f3:	inc    edx
  4156f4:	or     eax,0xe9f375a9
  4156f9:	pop    eax
  4156fa:	ret    0x1143
  4156fd:	pop    esp
  4156fe:	jnp    0x41573c
  415700:	pop    edx
  415701:	rol    DWORD PTR [edx],1
  415703:	(bad)  
  415704:	psubd  mm5,QWORD PTR [eax-0x21963ba4]
  41570b:	(bad)  
  41570c:	push   0xffffffde
  41570e:	pop    ebx
  41570f:	(bad)  
  415710:	jle    0x4156ba
  415712:	cwde   
  415713:	inc    esi
  415714:	scas   eax,DWORD PTR es:[edi]
  415715:	jb     0x415709
  415717:	lods   eax,DWORD PTR ds:[esi]
  415718:	xchg   ecx,eax
  415719:	xor    al,0x53
  41571b:	dec    ecx
  41571c:	jns    0x4156b7
  41571e:	cmp    al,0xd4
  415720:	push   0xf329ea29
  415725:	sub    edi,DWORD PTR [ebx-0x2a]
  415728:	jae    0x415722
  41572a:	mov    ebp,0xd2d01e8
  41572f:	push   edi
  415730:	pop    eax
  415731:	add    BYTE PTR [esi+0x2b87dd3a],0x49
  415738:	loopne 0x415711
  41573a:	(bad)  
  41573b:	in     al,0x77
  41573d:	sub    ebx,ebp
  41573f:	int3   
  415740:	jmp    0xda7c85e3
  415745:	out    dx,al
  415746:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415747:	int    0xcb
  415749:	cli    
  41574a:	lods   eax,DWORD PTR ds:[esi]
  41574b:	pop    edx
  41574c:	sub    eax,0xd2c86694
  415751:	stc    
  415752:	leave  
  415753:	mov    eax,0x46cdbd05
  415758:	in     eax,0x54
  41575a:	adc    al,0xfd
  41575c:	(bad)  [ecx+0x53f8514d]
  415762:	cs dec edx
  415764:	push   ecx
  415765:	fcmovne st,st(3)
  415767:	adc    eax,0xeb33095e
  41576c:	adc    eax,0x8ff8ad15
  415771:	mov    eax,0x4030b5ff
  415776:	pop    ecx
  415777:	xchg   ebx,eax
  415778:	and    cl,BYTE PTR [edx+0x40]
  41577b:	pop    ebp
  41577c:	in     eax,dx
  41577d:	in     al,0x6
  41577f:	adc    eax,0xeda5c24
  415784:	xchg   ecx,eax
  415785:	mov    dh,BYTE PTR [edi-0x31a18b79]
  41578b:	jbe    0x415774
  41578d:	rcl    BYTE PTR [ecx+0x40],1
  415790:	xchg   ebx,eax
  415791:	call   0xe1bb:0xa63e628b
  415798:	inc    BYTE PTR [edx+ebx*4-0xdb71b01]
  41579f:	cli    
  4157a0:	retf   0xc488
  4157a3:	mov    bl,BYTE PTR [ecx-0x67c1eb89]
  4157a9:	xor    eax,0xcedd6555
  4157ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157af:	retf   0xe9ae
  4157b2:	xchg   esi,eax
  4157b3:	sahf   
  4157b4:	sbb    eax,0xd2216178
  4157b9:	or     bl,BYTE PTR [ebx+0xeec0d00]
  4157bf:	pop    ds
  4157c0:	xchg   edi,eax
  4157c1:	xor    edx,edx
  4157c3:	in     eax,dx
  4157c4:	imul   esi,DWORD PTR [ecx],0xf08b46aa
  4157ca:	repz shl BYTE PTR [edi+0x3d],1
  4157ce:	jbe    0x415761
  4157d0:	add    ebp,esi
  4157d2:	retf   
  4157d3:	pop    edi
  4157d4:	fstp   TBYTE PTR [edi+0x4c]
  4157d7:	jns    0x41581a
  4157d9:	mov    al,0x0
  4157db:	sub    al,0x9f
  4157dd:	stos   DWORD PTR es:[edi],eax
  4157de:	test   al,0xb4
  4157e0:	aas    
  4157e1:	jo     0x415862
  4157e3:	adc    eax,0x3a56095c
  4157e8:	test   al,0x6b
  4157ea:	scas   eax,DWORD PTR es:[edi]
  4157eb:	xacquire xchg DWORD PTR [esi],edi
  4157ee:	pop    ebp
  4157ef:	mov    ecx,cs
  4157f1:	xor    cl,BYTE PTR [edx-0x51]
  4157f4:	call   0x570d:0x72d3796d
  4157fb:	xor    eax,DWORD PTR [esi+0x48]
  4157fe:	mov    bl,0x57
  415800:	push   esi
  415801:	mov    WORD PTR [esi+0x7f],cs
  415804:	adc    DWORD PTR [edx-0x108837d1],ebx
  41580a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41580b:	rol    DWORD PTR [ecx],1
  41580d:	imul   edi,ebp,0xffffffb3
  415810:	adc    ecx,DWORD PTR [eax]
  415812:	or     BYTE PTR [ebx-0x29],0xaa
  415816:	loop   0x4157be
  415818:	jns    0x41581a
  41581a:	cmc    
  41581b:	mov    esp,0xa8626bff
  415820:	stos   DWORD PTR es:[edi],eax
  415821:	add    eax,0x84e2a127
  415826:	(bad)  
  415827:	mov    al,BYTE PTR [esi+0x2e]
  41582a:	jmp    0x2f8e:0x29bddf0a
  415831:	cmp    DWORD PTR ds:0xbbf1718a,esi
  415837:	cmp    al,0x9
  415839:	in     al,dx
  41583a:	in     al,0x8d
  41583c:	jmp    0xc44ac764
  415841:	push   es
  415842:	mov    ecx,0x7ca7e956
  415847:	sub    esp,ebp
  415849:	cmp    BYTE PTR [ecx+ecx*2+0x5f609ffa],cl
  415850:	stos   BYTE PTR es:[edi],al
  415851:	mov    ?,WORD PTR [edx+eax*4-0x54]
  415855:	enter  0xb81c,0x3e
  415859:	dec    ecx
  41585a:	lods   eax,DWORD PTR ds:[esi]
  41585b:	mov    ecx,0x2cd4e925
  415860:	inc    edi
  415861:	ret    
  415862:	xchg   ecx,eax
  415863:	dec    edi
  415864:	sbb    DWORD PTR [esi+0x47],ebx
  415867:	hlt    
  415868:	xchg   edx,eax
  415869:	cmp    dh,BYTE PTR ds:0x9662920d
  41586f:	ja     0x4158c3
  415871:	(bad)  
  415872:	push   ecx
  415873:	adc    dh,BYTE PTR [esi+0x5a2c06ba]
  415879:	adc    eax,ebp
  41587b:	adc    BYTE PTR [ebx+0x47c12c18],ch
  415881:	(bad)  
  415882:	int    0x7f
  415884:	push   ss
  415885:	sub    DWORD PTR [edx+ebx*1-0x16],edi
  415889:	xlat   BYTE PTR ds:[ebx]
  41588a:	fnstenv [ebp+0x6eb64a30]
  415890:	inc    esi
  415891:	fisubr WORD PTR [ebp+0x35]
  415894:	adc    bh,BYTE PTR [eax+0x488871b6]
  41589a:	xlat   BYTE PTR ds:[ebx]
  41589b:	std    
  41589c:	xchg   BYTE PTR [eax],ah
  41589e:	push   ecx
  41589f:	adc    esp,esp
  4158a1:	jp     0x415904
  4158a3:	push   edx
  4158a4:	jl     0x415923
  4158a6:	test   DWORD PTR [edx+ebp*8],ebx
  4158a9:	mov    cl,BYTE PTR [edx+0x75503bbe]
  4158af:	jae    0x41583d
  4158b1:	cmp    al,0x19
  4158b3:	xor    BYTE PTR [eax-0x1493a27b],0x32
  4158ba:	loope  0x4158d5
  4158bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158bd:	adc    DWORD PTR [ebx+esi*2-0x37c2c0f2],0xffffffde
  4158c5:	out    0xbb,al
  4158c7:	ja     0x415908
  4158c9:	adc    al,0x45
  4158cb:	xchg   BYTE PTR [eax-0x3c2e0915],dl
  4158d1:	pop    ds
  4158d2:	loopne 0x415925
  4158d4:	ret    
  4158d5:	out    dx,al
  4158d6:	int    0x20
  4158d8:	sti    
  4158d9:	maxps  xmm2,XMMWORD PTR [edi]
  4158dc:	and    cl,BYTE PTR [edi+0x44]
  4158df:	push   esi
  4158e0:	std    
  4158e1:	mov    cl,0x96
  4158e3:	push   es
  4158e4:	mov    eax,0xf31ee2c0
  4158e9:	fidivr WORD PTR [esi+0x10]
  4158ec:	xchg   ebp,eax
  4158ed:	mov    dh,0xc5
  4158ef:	adc    bl,BYTE PTR [edi]
  4158f1:	mov    bl,0xf1
  4158f3:	loopne 0x4158cd
  4158f5:	xlat   BYTE PTR ds:[ebx]
  4158f6:	dec    esi
  4158f7:	stc    
  4158f8:	mov    dl,0xdc
  4158fa:	or     BYTE PTR [edi],cl
  4158fc:	push   edi
  4158fd:	repnz dec edi
  4158ff:	add    BYTE PTR ds:0xc0ac876e,0xc6
  415906:	sbb    ebx,DWORD PTR [eax+0x55]
  415909:	xor    al,0x6b
  41590b:	push   ss
  41590c:	int3   
  41590d:	jns    0x415960
  41590f:	pop    ebx
  415910:	repnz pop edi
  415912:	add    ah,BYTE PTR [eax-0x1]
  415915:	push   edi
  415916:	iret   
  415917:	push   ss
  415918:	xchg   ebp,eax
  415919:	jmp    0x415909
  41591b:	and    DWORD PTR [ebp+0x6e7dad08],edi
  415921:	pushf  
  415922:	in     eax,dx
  415923:	(bad)  
  415924:	xor    al,0xab
  415926:	fstp   QWORD PTR [ebp-0x4c]
  415929:	call   edx
  41592b:	pop    es
  41592c:	pop    es
  41592d:	pusha  
  41592e:	enter  0x726d,0xf2
  415932:	lea    edx,[ebp+0x56092ac1]
  415938:	sbb    eax,0x89dd5188
  41593d:	sub    dh,BYTE PTR [esi]
  41593f:	test   eax,0x868bb274
  415944:	sbb    al,0x6a
  415946:	sub    BYTE PTR [ebx+0x1880c0da],dl
  41594c:	iret   
  41594d:	jno    0x4159b2
  41594f:	in     al,dx
  415950:	mov    cs,WORD PTR [eax]
  415952:	jno    0x415943
  415954:	push   ebx
  415955:	sub    esi,DWORD PTR gs:[ebx+eiz*1-0x4cd1b019]
  41595d:	jp     0x4159de
  41595f:	pop    eax
  415960:	xor    edi,DWORD PTR [eax+0x7e]
  415963:	xchg   ebx,eax
  415964:	fnclex 
  415966:	enter  0xdbc9,0xba
  41596a:	mov    ebp,0x57426e88
  41596f:	xchg   esi,eax
  415970:	adc    al,0x4d
  415972:	or     BYTE PTR [edi+esi*8],bh
  415975:	jl     0x415994
  415977:	jecxz  0x415947
  415979:	jb     0x41595e
  41597b:	mov    eax,0x7274e97f
  415980:	or     dh,dh
  415982:	mov    es,WORD PTR [eax]
  415984:	inc    edx
  415985:	adc    edi,DWORD PTR [edi+0x1f]
  415988:	(bad)  
  415989:	vpmacsdql xmm2,xmm6,xmm4,XMMWORD PTR [eax+edx*1]
  415990:	jecxz  0x415920
  415992:	xchg   BYTE PTR [ecx-0x5064ddd8],bh
  415998:	stos   BYTE PTR es:[edi],al
  415999:	or     ebp,esp
  41599b:	es jae 0x4159b2
  41599e:	(bad)  
  41599f:	mov    ebx,0x327c436f
  4159a4:	fdiv   DWORD PTR [ebp+edx*2+0x5a58e1da]
  4159ab:	dec    ebx
  4159ac:	add    BYTE PTR [ecx],cl
  4159ae:	mov    dh,0xd
  4159b0:	ret    
  4159b1:	outs   dx,DWORD PTR ds:[esi]
  4159b2:	mov    ebx,0xc734bde4
  4159b7:	xchg   ebx,eax
  4159b8:	sti    
  4159b9:	dec    esp
  4159ba:	sbb    ah,dh
  4159bc:	inc    ebp
  4159bd:	test   BYTE PTR [esi-0x28be3f97],cl
  4159c3:	fsubr  st(0),st
  4159c5:	adc    eax,0x82df4c52
  4159ca:	xchg   BYTE PTR [edx+0x18],al
  4159cd:	push   cs
  4159ce:	cmp    BYTE PTR [esi],cl
  4159d0:	xor    cl,cl
  4159d2:	push   es
  4159d3:	lahf   
  4159d4:	fdivr  DWORD PTR [eax+0x14]
  4159d7:	xlat   BYTE PTR ds:[ebx]
  4159d8:	jns    0x415990
  4159da:	out    dx,eax
  4159db:	mov    WORD PTR [ecx-0x4371b640],ds
  4159e1:	xlat   BYTE PTR ds:[ebx]
  4159e2:	xchg   esi,eax
  4159e3:	adc    ebp,esp
  4159e5:	rcr    BYTE PTR [esi+0x48c9c6d7],0xf3
  4159ec:	xchg   esp,eax
  4159ed:	cdq    
  4159ee:	fdiv   DWORD PTR [edi-0x3e]
  4159f1:	jmp    0xc0c:0x40f876d8
  4159f8:	push   edx
  4159f9:	adc    al,0x15
  4159fb:	loope  0x415a2d
  4159fd:	mov    dh,0x76
  4159ff:	pop    ds
  415a00:	or     eax,0xd6504e1d
  415a05:	loop   0x415a47
  415a07:	and    al,0x70
  415a09:	sti    
  415a0a:	aad    0xe
  415a0c:	inc    esi
  415a0d:	pop    ebx
  415a0e:	lea    esp,[edi-0x57]
  415a11:	scas   eax,DWORD PTR es:[edi]
  415a12:	sbb    eax,0xd399ebe0
  415a17:	adc    esp,DWORD PTR [ecx]
  415a19:	ficom  DWORD PTR [edx-0x7a60c990]
  415a1f:	mov    edx,ebx
  415a21:	or     bh,dh
  415a23:	xcrypt-ecb (bad)
  415a24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a25:	dec    eax
  415a26:	inc    ebx
  415a27:	push   edx
  415a28:	jmp    0x5fdd:0x8d035305
  415a2f:	ja     0x415a0d
  415a31:	(bad)  
  415a32:	xlat   BYTE PTR ds:[ebx]
  415a33:	xchg   edx,eax
  415a34:	inc    edx
  415a35:	ss jmp 0x415a62
  415a38:	adc    al,0xe5
  415a3a:	fs inc edx
  415a3c:	mul    eax
  415a3e:	sbb    ebp,ecx
  415a40:	pop    esp
  415a41:	stos   BYTE PTR es:[edi],al
  415a42:	and    ah,dl
  415a44:	mov    DWORD PTR [edx],0xf0c5ebb5
  415a4a:	lds    esi,FWORD PTR [eax+0x2c]
  415a4d:	add    eax,0x605cbb2b
  415a52:	cmc    
  415a53:	fldpi  
  415a55:	or     al,0x54
  415a57:	lahf   
  415a58:	cmp    esi,DWORD PTR [edx-0x6d79cf6]
  415a5e:	fld    TBYTE PTR [ebp+0x1c]
  415a61:	int    0x5e
  415a63:	sub    eax,0x9c405451
  415a68:	lahf   
  415a69:	lds    ebx,FWORD PTR [esi+0x72d0356]
  415a6f:	push   ebp
  415a70:	adc    ecx,DWORD PTR [esi]
  415a72:	jns    0x415a3f
  415a74:	lods   eax,DWORD PTR ds:[esi]
  415a75:	and    BYTE PTR [ebx+ecx*2-0x21],0x89
  415a7a:	jno    0x415a4b
  415a7c:	add    eax,0x14042428
  415a81:	push   ebx
  415a82:	jge    0x415a53
  415a84:	push   ebx
  415a85:	and    eax,DWORD PTR [ebx]
  415a87:	or     eax,DWORD PTR [edx+0x2b]
  415a8a:	and    al,0xb0
  415a8c:	cs sbb al,0xcc
  415a8f:	scas   al,BYTE PTR es:[edi]
  415a90:	repnz mov esp,0x243c337f
  415a96:	nop
  415a97:	inc    eax
  415a98:	sbb    edi,DWORD PTR [edx+0x22]
  415a9b:	xchg   ebp,eax
  415a9c:	sbb    al,0xcb
  415a9e:	inc    esp
  415a9f:	sub    BYTE PTR [edx+0x75],bh
  415aa2:	stc    
  415aa3:	pop    ebp
  415aa4:	rcl    DWORD PTR [ebx+0x48],cl
  415aa7:	mov    al,ds:0x5c8aba7d
  415aac:	or     DWORD PTR [edx+edi*4],ebx
  415aaf:	pop    esp
  415ab0:	inc    eax
  415ab1:	iret   
  415ab2:	sub    ebp,ecx
  415ab4:	pop    ebp
  415ab5:	enter  0x4a34,0xeb
  415ab9:	(bad)  
  415aba:	into   
  415abb:	mov    ?,WORD PTR [edi-0x7d]
  415abe:	adc    al,0x59
  415ac0:	sbb    BYTE PTR [esi],cl
  415ac2:	pushf  
  415ac3:	xor    dl,0xc6
  415ac6:	mov    ds:0xdf6eeb3a,al
  415acb:	push   esp
  415acc:	mov    ds:0x2f99a89d,al
  415ad1:	and    eax,0x89d5be81
  415ad6:	gs inc esi
  415ad8:	and    cl,ch
  415ada:	jnp    0x415b3a
  415adc:	mov    bl,0x7e
  415ade:	xchg   ecx,eax
  415adf:	dec    ecx
  415ae0:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  415ae2:	lods   al,BYTE PTR ds:[esi]
  415ae3:	mov    bh,0x49
  415ae5:	nop
  415ae6:	xor    al,0xff
  415ae8:	adc    BYTE PTR [esp+ebp*8-0x3f],dh
  415aec:	jp     0x415a94
  415aee:	mov    edx,0xff731072
  415af3:	xor    dl,BYTE PTR [ebp-0x1e9ac43e]
  415af9:	xor    DWORD PTR [esi],0x20
  415afc:	mov    dh,0x91
  415afe:	into   
  415aff:	(bad)  
  415b01:	push   ebp
  415b02:	push   es
  415b03:	push   ds
  415b04:	add    ebx,DWORD PTR [esi]
  415b06:	and    DWORD PTR [ebx-0x140dce3a],edi
  415b0c:	iret   
  415b0d:	mov    cl,0xba
  415b0f:	popf   
  415b10:	test   ah,bl
  415b12:	xchg   ebp,eax
  415b13:	fwait
  415b14:	mov    DWORD PTR [ecx],eax
  415b16:	jl     0x415aa3
  415b18:	or     esi,eax
  415b1a:	test   eax,0x45f30df
  415b1f:	or     BYTE PTR [edi],dl
  415b21:	rcr    BYTE PTR [ecx+0x4d8dbb0b],cl
  415b27:	test   BYTE PTR [edi-0x17],bl
  415b2a:	sbb    bl,ah
  415b2c:	lods   eax,DWORD PTR ds:[esi]
  415b2d:	xor    eax,0xba00e014
  415b32:	dec    edi
  415b33:	add    DWORD PTR [ebp+0x5da27efb],edx
  415b39:	xchg   ebp,eax
  415b3a:	mov    bl,0x70
  415b3c:	popf   
  415b3d:	push   ebx
  415b3e:	pop    eax
  415b3f:	hlt    
  415b40:	add    eax,DWORD PTR [edx]
  415b42:	sub    DWORD PTR [ebx-0xd5f7b94],edi
  415b48:	inc    eax
  415b49:	imul   ebp,DWORD PTR [ebx-0x69],0x372227a9
  415b50:	dec    esi
  415b51:	scas   al,BYTE PTR es:[edi]
  415b52:	enter  0xfc30,0xb6
  415b56:	jae    0x415ae8
  415b58:	mov    WORD PTR [eax],gs
  415b5a:	nop
  415b5b:	cmp    al,0xa2
  415b5d:	push   0x80e043d
  415b62:	inc    ecx
  415b63:	mov    ds:0x4f51376d,eax
  415b68:	cmp    eax,0x8481f41a
  415b6d:	cmp    eax,DWORD PTR [ecx+0x4d]
  415b70:	sar    BYTE PTR [edi-0x3f2454e9],0xfe
  415b77:	sub    eax,DWORD PTR [edi-0x39ae82ff]
  415b7d:	fistp  WORD PTR [edx+eiz*2]
  415b80:	ja     0x415bea
  415b82:	mov    al,ds:0xc4a3fe6d
  415b87:	rol    bh,1
  415b89:	and    BYTE PTR [edx-0x23],bl
  415b8c:	mov    esp,0xf6f838ce
  415b91:	not    BYTE PTR [ebp-0x7ea2875d]
  415b97:	adc    al,0x43
  415b99:	sbb    ch,ch
  415b9b:	popf   
  415b9c:	pop    esp
  415b9d:	not    BYTE PTR [ecx+0x7a]
  415ba0:	cmp    dl,BYTE PTR [ebp-0x3feab3dd]
  415ba6:	clc    
  415ba7:	and    al,0x22
  415ba9:	mov    ebx,0x791fbae3
  415bae:	sub    DWORD PTR [edx+0x6e],ecx
  415bb1:	sbb    edi,edx
  415bb3:	loopne 0x415bf9
  415bb5:	jge    0x415b95
  415bb7:	mov    ebp,0xc7678b93
  415bbc:	or     eax,0xcbdf8ab6
  415bc1:	or     DWORD PTR [eax],esp
  415bc3:	sti    
  415bc4:	xchg   cl,al
  415bc6:	loop   0x415ba1
  415bc8:	jl     0x415c3d
  415bca:	fist   DWORD PTR [esi]
  415bcc:	push   ss
  415bcd:	gs push eax
  415bcf:	iret   
  415bd0:	push   0x51
  415bd2:	mov    cl,0x7b
  415bd4:	aam    0x86
  415bd6:	xchg   edx,eax
  415bd7:	or     al,0x5b
  415bd9:	inc    ebx
  415bda:	xchg   ecx,eax
  415bdb:	aaa    
  415bdc:	xor    dl,BYTE PTR [eax-0x2dab2c0e]
  415be2:	sahf   
  415be3:	(bad)  
  415be4:	cmp    bh,BYTE PTR [ebx]
  415be6:	and    al,0x9b
  415be8:	test   al,0xa0
  415bea:	repz sahf 
  415bec:	pop    edx
  415bed:	or     al,0x92
  415bef:	pop    ds
  415bf0:	lock mov dh,0xd8
  415bf3:	and    cl,BYTE PTR [esi-0x443d4efb]
  415bf9:	cli    
  415bfa:	fnstsw WORD PTR [ebp-0x4ebe9720]
  415c00:	pop    edi
  415c01:	mov    edx,0xa1c7207e
  415c06:	retf   0xf31d
  415c09:	int    0x79
  415c0b:	stos   BYTE PTR es:[edi],al
  415c0c:	mov    al,ds:0x87462e4c
  415c11:	(bad)  
  415c12:	nop
  415c13:	ret    0x3f0d
  415c16:	data16 cmp ah,BYTE PTR [ecx-0x4b2baa94]
  415c1d:	lahf   
  415c1e:	mov    dh,0xdd
  415c20:	jbe    0x415ba2
  415c22:	cld    
  415c23:	sub    BYTE PTR [ecx],ch
  415c25:	es adc al,0xc4
  415c28:	aas    
  415c29:	out    dx,eax
  415c2a:	mov    ds:0x79f7b55,al
  415c2f:	mov    ch,0x39
  415c31:	ja     0x415c6a
  415c33:	nop
  415c34:	cdq    
  415c35:	addr16 push esp
  415c37:	push   es
  415c38:	sub    DWORD PTR [eax-0x45ae237c],ebp
  415c3e:	dec    ebp
  415c3f:	cmc    
  415c40:	out    0x72,al
  415c42:	fild   QWORD PTR [ebp-0x17]
  415c45:	and    dl,BYTE PTR [edx]
  415c47:	jecxz  0x415c8b
  415c49:	mov    al,ds:0x7d053c01
  415c4e:	mov    al,0x62
  415c50:	fisttp WORD PTR [edi-0xbc8bc20]
  415c56:	imul   DWORD PTR [eax+ecx*2+0x21]
  415c5a:	dec    ecx
  415c5b:	and    edi,DWORD PTR [edx+0x9]
  415c5e:	xchg   esp,eax
  415c5f:	sahf   
  415c60:	ficom  WORD PTR [edx+ebp*4]
  415c63:	xchg   ebx,eax
  415c64:	scas   eax,DWORD PTR es:[edi]
  415c65:	pop    esp
  415c66:	shl    DWORD PTR [edx-0x31],0xd1
  415c6a:	cmpxchg BYTE PTR [esi+0x23],dl
  415c6e:	xchg   edx,eax
  415c6f:	jg     0x415c8f
  415c71:	mov    esp,0x9a3aaa58
  415c76:	push   ss
  415c77:	or     dh,bh
  415c79:	xlat   BYTE PTR ds:[ebx]
  415c7a:	or     esi,DWORD PTR [esi+0x57]
  415c7d:	mov    eax,ds:0x3942317d
  415c82:	shl    BYTE PTR [ebx-0x4c],0xa3
  415c86:	mov    ebp,DWORD PTR [edi+edi*1]
  415c89:	mov    eax,0xfaaac9b5
  415c8e:	sahf   
  415c8f:	xor    DWORD PTR ds:0xc06ae5c5,eax
  415c95:	xor    bl,al
  415c97:	and    BYTE PTR [eax+eax*1],al
  415c9a:	outs   dx,DWORD PTR ds:[esi]
  415c9b:	repnz hlt 
  415c9d:	iret   
  415c9e:	sbb    dl,BYTE PTR [ecx-0x73a1b230]
  415ca4:	leave  
  415ca5:	dec    edi
  415ca6:	jle    0x415c8e
  415ca8:	ficomp WORD PTR [ecx+0x1babe86d]
  415cae:	push   edi
  415caf:	inc    BYTE PTR [ebp+0x2a]
  415cb2:	inc    eax
  415cb3:	xlat   BYTE PTR ds:[ebx]
  415cb4:	sub    al,0xee
  415cb6:	adc    eax,0xe2df5456
  415cbb:	push   ebp
  415cbc:	fwait
  415cbd:	retf   
  415cbe:	pop    es
  415cbf:	popf   
  415cc0:	jae    0x415c7f
  415cc2:	jb     0x415cca
  415cc4:	or     esi,0x91110460
  415cca:	gs repz jge 0x415d1e
  415cce:	push   edx
  415ccf:	repz and eax,0x178446d1
  415cd5:	sub    DWORD PTR [esi+0x6c],ebx
  415cd8:	mov    ebx,0xfc4b6f63
  415cdd:	(bad)  
  415cdf:	in     eax,dx
  415ce0:	ror    cl,0xa8
  415ce3:	addr16 mov edx,0xb458d82e
  415ce9:	mov    dh,0xba
  415ceb:	mov    ebp,0x2853653c
  415cf0:	pusha  
  415cf1:	in     eax,dx
  415cf2:	dec    ebp
  415cf3:	loop   0x415d50
  415cf5:	push   0x5
  415cf7:	adc    dh,BYTE PTR [bx+si]
  415cfa:	or     eax,0xe998a1ef
  415cff:	loope  0x415d3b
  415d01:	ss add eax,0xb3e79e08
  415d07:	xchg   ecx,eax
  415d08:	out    0x28,al
  415d0a:	lods   al,BYTE PTR ds:[esi]
  415d0b:	fistp  QWORD PTR [eax-0x66]
  415d0e:	adc    bh,BYTE PTR [ebp+0x7ca8eff3]
  415d14:	pop    edx
  415d15:	sbb    eax,DWORD PTR [edx+0x4f]
  415d18:	cmp    BYTE PTR [edx+eiz*4-0x9],dl
  415d1c:	mov    ebx,0xb5a6c07c
  415d21:	inc    ebp
  415d22:	add    DWORD PTR [edi+0x2f],eax
  415d25:	pop    esp
  415d26:	pop    ebp
  415d27:	test   bl,dh
  415d29:	test   BYTE PTR [ecx-0x43],dl
  415d2c:	or     BYTE PTR [ebp-0x60],al
  415d2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d30:	(bad)  
  415d31:	jmp    0x609f:0xa19de1d1
  415d38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d39:	xchg   ecx,eax
  415d3a:	pop    ds
  415d3b:	pop    ebp
  415d3d:	inc    edi
  415d3e:	cmp    BYTE PTR [ebp-0x4],bh
  415d41:	(bad)  
  415d42:	pop    edi
  415d43:	dec    eax
  415d44:	icebp  
  415d45:	sub    al,0xf9
  415d47:	out    dx,eax
  415d48:	mov    bh,0x5d
  415d4a:	in     al,dx
  415d4b:	sbb    DWORD PTR [eax-0x6aa8e3ad],ecx
  415d51:	std    
  415d52:	cwde   
  415d53:	ret    0x59f3
  415d56:	out    dx,al
  415d57:	test   DWORD PTR [ebx+0xd8e565d],edx
  415d5d:	fwait
  415d5e:	cwde   
  415d5f:	imul   BYTE PTR [edi]
  415d61:	fmul   DWORD PTR [edx]
  415d63:	fiadd  DWORD PTR [edx+esi*4]
  415d66:	das    
  415d67:	je     0x415d9b
  415d69:	jb     0xb29be92d
  415d6f:	ss xchg ebp,eax
  415d71:	push   edx
  415d72:	outs   dx,BYTE PTR ds:[esi]
  415d73:	lods   eax,DWORD PTR ds:[esi]
  415d74:	call   0xec5c432f
  415d79:	test   al,0xc7
  415d7b:	pop    edi
  415d7c:	out    dx,al
  415d7d:	cli    
  415d7e:	ficomp WORD PTR [eax-0x27b46767]
  415d84:	cmp    DWORD PTR [ecx+0x5c],0x752eca3b
  415d8b:	out    0x60,eax
  415d8d:	jp     0x415deb
  415d8f:	call   0xd898a765
  415d94:	stos   DWORD PTR es:[edi],eax
  415d95:	jl     0x415d85
  415d97:	mov    ds:0x4847e9c6,eax
  415d9c:	xor    DWORD PTR [edx-0x66],eax
  415d9f:	and    al,0x30
  415da1:	call   0x96d3:0xbe622e2f
  415da8:	fld    TBYTE PTR [ecx]
  415daa:	(bad)  
  415dab:	(bad)  
  415dac:	xchg   edx,eax
  415dad:	cmc    
  415dae:	js     0x415d68
  415db0:	ja     0x415d43
  415db2:	ss out 0x6,al
  415db5:	call   0x1b196228
  415dba:	push   ebx
  415dbb:	mov    ds:0xe4d2b836,eax
  415dc0:	neg    BYTE PTR [eax]
  415dc2:	out    0x81,al
  415dc4:	xor    eax,0x2ca8661e
  415dc9:	jb     0x415ddd
  415dcb:	dec    eax
  415dcc:	push   esp
  415dcd:	cwd    
  415dcf:	sub    DWORD PTR [eax-0x2c2762de],0x2921b7cf
  415dd9:	aad    0xaa
  415ddb:	pop    ds
  415ddc:	ss dec ebp
  415dde:	sub    eax,0x541515bb
  415de3:	into   
  415de4:	js     0x415d72
  415de6:	test   al,0x5d
  415de8:	(bad)
  415deb:	aad    0x6a
  415ded:	jne    0x415e20
  415def:	outs   dx,DWORD PTR ds:[esi]
  415df0:	cld    
  415df1:	jmp    0x415ddc
  415df3:	push   esp
  415df4:	pop    ds
  415df5:	add    al,0xe5
  415df7:	xor    DWORD PTR [edi+0x2e],edi
  415dfa:	pop    ds
  415dfb:	lods   al,BYTE PTR ds:[esi]
  415dfc:	pop    edx
  415dfd:	fdivr  QWORD PTR [ebx-0x63]
  415e00:	push   0x40
  415e02:	mov    eax,ds:0x7f6340fe
  415e07:	add    eax,0xc9aca76b
  415e0c:	jmp    0xc93cd08a
  415e11:	fmul   QWORD PTR [edx-0x64]
  415e14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e15:	push   0x59
  415e17:	shr    BYTE PTR [ebx+esi*4-0x5],0x44
  415e1c:	jb     0x415d9f
  415e1e:	add    ah,BYTE PTR [edi]
  415e20:	retf   0xa750
  415e23:	pop    es
  415e24:	push   eax
  415e26:	lahf   
  415e27:	std    
  415e28:	and    BYTE PTR ds:0x8ba11e58,0xbf
  415e2f:	mov    al,0xda
  415e31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e32:	leave  
  415e33:	in     al,dx
  415e34:	fnstcw WORD PTR [esi+0x32307cc2]
  415e3a:	out    0x2e,al
  415e3c:	jge    0x415e20
  415e3e:	xchg   edi,eax
  415e3f:	pop    esp
  415e40:	fisttp QWORD PTR ds:0x69bff500
  415e46:	mov    dh,0x2a
  415e48:	test   al,0x3
  415e4a:	or     esi,DWORD PTR [ebx-0x2479042]
  415e50:	xbegin 0x2ae64d7f
  415e56:	ret    
  415e57:	sbb    DWORD PTR [edx-0x6a],esp
  415e5a:	xor    BYTE PTR [edx-0x65e764a9],ch
  415e60:	mov    BYTE PTR [eax+0x56],al
  415e63:	mov    cl,0x6f
  415e65:	adc    eax,0xbe70bc4b
  415e6a:	(bad)  
  415e6b:	or     dl,cl
  415e6d:	jge    0x415ea4
  415e6f:	fwait
  415e70:	xchg   ebp,eax
  415e71:	sub    BYTE PTR [eax+0x37],dl
  415e74:	push   es
  415e75:	sbb    BYTE PTR [ebp+0x31],al
  415e78:	sbb    DWORD PTR [ebx],esp
  415e7a:	fmul   QWORD PTR [edx]
  415e7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e7d:	jmp    0x6806:0xa98905fc
  415e84:	(bad)  [edx-0x6c]
  415e87:	mov    esp,0xbb797c11
  415e8c:	enter  0xf09e,0xb6
  415e90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e91:	push   esi
  415e92:	inc    ebx
  415e93:	leave  
  415e94:	push   0xffffffd8
  415e96:	pop    edx
  415e97:	push   esi
  415e98:	loopne 0x415e5e
  415e9a:	out    dx,al
  415e9b:	fmul   QWORD PTR [edi-0x2e]
  415e9e:	and    esp,DWORD PTR [esi+0x7c]
  415ea1:	adc    DWORD PTR [ecx],edi
  415ea3:	dec    ecx
  415ea4:	fcom   QWORD PTR [ecx+0x6eb06ea4]
  415eaa:	pop    ebx
  415eab:	dec    esi
  415eac:	xchg   esp,eax
  415ead:	jecxz  0x415e93
  415eaf:	(bad)
  415eb2:	mov    dh,0x2e
  415eb4:	xchg   edi,eax
  415eb5:	leave  
  415eb6:	jbe    0x415ea6
  415eb8:	out    0xeb,eax
  415eba:	hlt    
  415ebb:	hlt    
  415ebc:	test   BYTE PTR [esi+0x4bf3ea09],cl
  415ec2:	push   edx
  415ec3:	hlt    
  415ec4:	ficom  WORD PTR [ecx-0x71]
  415ec7:	rcr    BYTE PTR [eax+0xe],0x88
  415ecb:	fdivr  st(4),st
  415ecd:	push   edi
  415ece:	outs   dx,DWORD PTR ds:[esi]
  415ecf:	stos   BYTE PTR es:[edi],al
  415ed0:	mov    esi,0xa11a1498
  415ed5:	xchg   esp,eax
  415ed6:	je     0x415e75
  415ed8:	jg     0x415f2e
  415eda:	pop    esi
  415edb:	cdq    
  415edc:	pushf  
  415edd:	and    ah,bh
  415edf:	in     eax,dx
  415ee0:	rol    DWORD PTR [eax+0x24],cl
  415ee3:	int    0x91
  415ee5:	sahf   
  415ee6:	pop    ss
  415ee7:	das    
  415ee8:	pushf  
  415ee9:	mov    DWORD PTR [ebx],esi
  415eeb:	rcl    BYTE PTR [ebx+0x9ffd6cb],0x95
  415ef2:	xchg   edi,eax
  415ef3:	ffreep st(0)
  415ef5:	stc    
  415ef6:	sbb    bl,BYTE PTR [ecx+eiz*4]
  415ef9:	out    0x55,eax
  415efb:	xchg   ebx,eax
  415efc:	test   eax,0x5483d917
  415f01:	aas    
  415f02:	ins    DWORD PTR es:[edi],dx
  415f03:	pop    ecx
  415f04:	inc    ebp
  415f05:	cmp    eax,0xc8a48285
  415f0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f0b:	mov    al,ds:0x7ccd3f57
  415f10:	pop    esp
  415f11:	(bad)  
  415f12:	pop    esp
  415f13:	inc    esi
  415f14:	jo     0x415f53
  415f16:	icebp  
  415f17:	jne    0x415f28
  415f19:	mov    eax,ds:0xadd66ebb
  415f1e:	out    dx,al
  415f1f:	les    ecx,FWORD PTR [esi*4-0xca36922]
  415f26:	scas   al,BYTE PTR es:[edi]
  415f27:	mov    BYTE PTR [edx+0x154333c1],ch
  415f2d:	jmp    0x4e2a:0x9014183c
  415f34:	cmp    ebp,DWORD PTR [esi+0x7e]
  415f37:	cmp    al,0x60
  415f39:	fs jl  0x415f02
  415f3c:	xchg   DWORD PTR [ebx-0x2be514cb],eax
  415f42:	mov    ah,0xb8
  415f44:	ret    
  415f45:	push   ss
  415f46:	stos   DWORD PTR es:[edi],eax
  415f47:	inc    ebx
  415f48:	xchg   esi,eax
  415f49:	(bad)  
  415f4a:	cmp    al,0x26
  415f4c:	idiv   edx
  415f4e:	xchg   edi,eax
  415f4f:	sbb    eax,DWORD PTR [ebp-0x38d60837]
  415f55:	(bad)  
  415f56:	push   0x5d
  415f58:	xchg   ebx,eax
  415f59:	pop    ebx
  415f5a:	mov    al,0x7b
  415f5c:	cli    
  415f5d:	out    dx,al
  415f5e:	pop    ebp
  415f5f:	in     al,dx
  415f60:	add    dl,bh
  415f62:	in     eax,dx
  415f63:	add    BYTE PTR [edi-0x3a494f93],ah
  415f69:	push   ds
  415f6a:	scas   eax,DWORD PTR es:[edi]
  415f6b:	mov    al,ds:0x5308c969
  415f70:	push   eax
  415f71:	cmp    DWORD PTR [ebx+0x63],edi
  415f74:	sbb    eax,0x3cffcce
  415f79:	lods   eax,DWORD PTR ds:[esi]
  415f7a:	sub    al,0xe2
  415f7c:	ret    
  415f7d:	xchg   edi,eax
  415f7e:	or     dl,BYTE PTR [edi]
  415f80:	loope  0x415fc9
  415f82:	pop    esp
  415f83:	rol    BYTE PTR [esi],1
  415f85:	dec    ebx
  415f86:	mov    esp,0xcd7d989a
  415f8b:	add    BYTE PTR ds:0xed3465e6,al
  415f91:	or     ch,BYTE PTR [ebx-0x77]
  415f94:	ret    0x6b96
  415f97:	loop   0x415f26
  415f99:	outs   dx,DWORD PTR ds:[esi]
  415f9a:	into   
  415f9b:	mov    ebp,0x187125d3
  415fa0:	pop    sp
  415fa2:	push   ebp
  415fa3:	scas   al,BYTE PTR es:[edi]
  415fa4:	push   ss
  415fa5:	dec    esp
  415fa6:	shr    cl,cl
  415fa8:	sahf   
  415fa9:	adc    DWORD PTR [eax+0x418fff03],0xffffffc0
  415fb0:	mov    ds:0x19ba43b3,eax
  415fb5:	shl    DWORD PTR [edi],cl
  415fb7:	and    DWORD PTR [ebx-0x2df96a54],ebp
  415fbd:	sub    al,0xaf
  415fbf:	adc    BYTE PTR [esi+0x34],bh
  415fc2:	in     eax,dx
  415fc3:	call   0xd120:0x4172898b
  415fca:	cdq    
  415fcb:	sbb    cl,ch
  415fcd:	jmp    0x7491e9ec
  415fd2:	or     DWORD PTR [eax+eax*1+0x51edd571],ecx
  415fd9:	das    
  415fda:	enter  0xab58,0x1f
  415fde:	fiadd  WORD PTR [ecx-0x5cf1b91c]
  415fe4:	sbb    al,0xc8
  415fe6:	add    BYTE PTR [edx-0x1f],dl
  415fe9:	(bad)  
  415fea:	(bad)  
  415feb:	in     al,dx
  415fec:	gs aas 
  415fee:	repnz loopne 0x415f8a
  415ff1:	call   0x517b4284
  415ff6:	dec    edx
  415ff7:	xor    eax,eax
  415ff9:	adc    BYTE PTR [ecx-0x1a],ah
  415ffc:	dec    edx
  415ffd:	jmp    0xa32a:0x65d31374
  416004:	lea    ecx,[edx+0x2b5e2f52]
  41600a:	and    edx,ebp
  41600c:	shl    BYTE PTR [esi+0x7fc45372],0xa
  416013:	shr    DWORD PTR [eax+0x7e],cl
  416016:	das    
  416017:	cmp    dl,BYTE PTR [ecx]
  416019:	mov    dl,0x7
  41601b:	sub    DWORD PTR [ebx+edi*4],edi
  41601e:	push   0x12
  416020:	mov    cs,WORD PTR [edi+edi*4]
  416023:	aad    0x60
  416025:	(bad)
  416028:	lahf   
  416029:	(bad)  
  41602a:	jg     0x416070
  41602c:	sbb    eax,0xc67fbeff
  416031:	inc    eax
  416032:	xchg   ebx,eax
  416033:	add    BYTE PTR [edx],0x64
  416036:	xor    DWORD PTR [ecx+0x9],eax
  416039:	inc    ecx
  41603a:	mov    ds:0xdbf9c9b8,al
  41603f:	xchg   BYTE PTR [eax],ch
  416041:	retf   
  416042:	enter  0x3c73,0xe8
  416046:	(bad)  
  416048:	or     BYTE PTR [ecx+ecx*4-0x4],ah
  41604c:	push   ds
  41604d:	mov    ss,WORD PTR [edx+0x63d1e98c]
  416053:	mov    dh,0xcd
  416055:	into   
  416056:	in     al,0x64
  416058:	loop   0x416043
  41605a:	mov    ah,0x86
  41605c:	xchg   DWORD PTR [edi+0x6efdd202],ebx
  416062:	mov    dl,0xc3
  416064:	clc    
  416065:	or     BYTE PTR ds:0x7b68fdfa,al
  41606b:	pusha  
  41606c:	xor    al,0x1e
  41606e:	fnsave ds:0x6d530fe5
  416074:	mov    bl,0x61
  416076:	add    esp,DWORD PTR [ecx+0x71ce2220]
  41607c:	(bad)  
  41607d:	fiadd  WORD PTR [eax-0x5af61136]
  416083:	jecxz  0x4160e8
  416085:	cmc    
  416086:	pop    ss
  416087:	and    esi,DWORD PTR [ecx+esi*1]
  41608a:	jmp    0x4c5cc911
  41608f:	xchg   ebx,eax
  416090:	imul   esi,DWORD PTR [edx-0x160d287b],0x61efeb45
  41609a:	xchg   edx,eax
  41609b:	xchg   DWORD PTR [ebx],ecx
  41609d:	jae    0x416030
  41609f:	push   0x4a
  4160a1:	adc    cl,bh
  4160a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160a4:	(bad)  
  4160a6:	shr    BYTE PTR [ebx+0x3b],1
  4160a9:	push   esp
  4160aa:	test   DWORD PTR [ecx],0xd34a71c6
  4160b0:	fcomp  DWORD PTR [ebx]
  4160b2:	jnp    0x4160d4
  4160b4:	adc    BYTE PTR [ebx-0x8],0xe0
  4160b8:	popa   
  4160b9:	lock inc edx
  4160bb:	cli    
  4160bc:	sub    eax,0x43794573
  4160c1:	or     eax,0xffffffd8
  4160c4:	loopne 0x416091
  4160c6:	xchg   esi,eax
  4160c7:	ins    BYTE PTR es:[edi],dx
  4160c8:	add    al,0xbd
  4160ca:	fist   WORD PTR [ebx]
  4160cc:	stos   BYTE PTR es:[edi],al
  4160cd:	into   
  4160ce:	inc    ecx
  4160cf:	mov    edx,esi
  4160d1:	loope  0x4160f4
  4160d3:	in     eax,dx
  4160d4:	and    BYTE PTR ss:[ecx+esi*1],bh
  4160d8:	mov    eax,0x8d8c8ca
  4160dd:	pusha  
  4160de:	addr16 pop esi
  4160e0:	or     ebp,esi
  4160e2:	push   ecx
  4160e3:	bound  edx,QWORD PTR [eax]
  4160e5:	adc    edi,DWORD PTR [edx+eax*4-0x11532f73]
  4160ec:	fwait
  4160ed:	mov    WORD PTR [ecx],?
  4160ef:	pop    ds
  4160f0:	retf   0x7fbe
  4160f3:	cmp    DWORD PTR [ebx],esi
  4160f5:	push   eax
  4160f6:	hlt    
  4160f7:	sub    DWORD PTR [edx+0x3728ff1b],ebx
  4160fd:	inc    ebp
  4160fe:	pop    esi
  4160ff:	(bad)  
  416100:	stc    
  416101:	outs   dx,DWORD PTR ds:[esi]
  416102:	mul    DWORD PTR [edx+0x48]
  416105:	into   
  416106:	cmp    ebp,DWORD PTR [ebx-0x42]
  416109:	sub    eax,0xe637340f
  41610e:	push   ebx
  41610f:	inc    ebp
  416110:	shl    BYTE PTR [ecx+0x309d1db1],0xd2
  416117:	xchg   ecx,eax
  416118:	pop    ebx
  416119:	mov    al,0x17
  41611b:	loop   0x4160e0
  41611d:	mov    ecx,0x2926cd88
  416122:	mov    WORD PTR [ecx-0x54],ss
  416125:	rol    ebp,0x5d
  416128:	mov    edi,0xd16f7ab3
  41612d:	int    0xf2
  41612f:	adc    esp,DWORD PTR [ecx]
  416131:	(bad)  
  416132:	sub    ebp,eax
  416134:	add    BYTE PTR [ebp-0x4b52fd9],dh
  41613a:	xchg   edx,eax
  41613b:	sbb    cl,0x63
  41613e:	icebp  
  41613f:	mov    cs,WORD PTR [eax]
  416141:	in     al,dx
  416142:	or     ebp,DWORD PTR [edx]
  416144:	test   bl,cl
  416146:	or     DWORD PTR [esi],ebp
  416148:	mov    ch,0x47
  41614a:	shl    DWORD PTR [ebp-0x3a],1
  41614d:	push   edi
  41614e:	mov    dh,0xb4
  416150:	mov    edi,0x43c31a5d
  416155:	xor    eax,0x8c59344
  41615a:	addr16 mov ah,0x54
  41615d:	lea    eax,[esi+0x78d2490b]
  416163:	call   0xdac0:0xfb382c44
  41616a:	gs aas 
  41616c:	pushf  
  41616d:	push   ebx
  41616e:	xor    dh,bh
  416170:	test   eax,0xea7137c3
  416175:	dec    eax
  416176:	in     eax,0xf
  416178:	xchg   esi,eax
  416179:	push   esi
  41617a:	sbb    eax,0x81de2d73
  41617f:	in     eax,0x18
  416181:	cs ins BYTE PTR es:[edi],dx
  416183:	test   DWORD PTR [esi],ecx
  416185:	jno    0x416206
  416187:	dec    eax
  416188:	cwde   
  416189:	xchg   ebp,eax
  41618a:	ret    
  41618b:	int3   
  41618c:	inc    edi
  41618d:	inc    ebp
  41618e:	inc    edi
  41618f:	pop    eax
  416190:	in     eax,dx
  416191:	call   0xca0a:0xe670d9d6
  416198:	(bad)  
  416199:	lods   al,BYTE PTR ds:[esi]
  41619a:	mov    cl,0x17
  41619c:	fdivr  DWORD PTR ds:0x74ef5047
  4161a2:	and    DWORD PTR [edx+esi*2],esp
  4161a5:	mov    ch,BYTE PTR [edx]
  4161a7:	ins    BYTE PTR es:[edi],dx
  4161a8:	aas    
  4161a9:	test   ebx,eax
  4161ab:	(bad)  
  4161ac:	sbb    al,0x4e
  4161ae:	pop    ebp
  4161af:	pop    ebp
  4161b0:	jp     0x416187
  4161b2:	dec    dx
  4161b4:	mov    bl,BYTE PTR [esi-0x7a111eac]
  4161ba:	lods   eax,DWORD PTR ds:[esi]
  4161bb:	in     al,0xbc
  4161bd:	out    dx,al
  4161be:	push   ebp
  4161bf:	push   ds
  4161c0:	gs nop
  4161c2:	jnp    0x41620c
  4161c4:	sbb    eax,0x5a34f374
  4161c9:	jmp    0x7332a386
  4161ce:	push   ebp
  4161cf:	and    ah,al
  4161d1:	cdq    
  4161d2:	fnstsw WORD PTR [ebp+0x2f078173]
  4161d8:	mov    ch,dl
  4161da:	aas    
  4161db:	or     edi,DWORD PTR [ebx]
  4161dd:	sbb    eax,DWORD PTR [esi-0x65a4b7c9]
  4161e3:	jp     0x4161e9
  4161e5:	pop    edi
  4161e6:	inc    edx
  4161e7:	lock xor al,0xa0
  4161ea:	jnp    0x4161b9
  4161ec:	adc    bh,0x15
  4161ef:	sbb    DWORD PTR ds:0xbef977c8,ebx
  4161f5:	push   cs
  4161f6:	dec    edi
  4161f7:	jg     0x416277
  4161f9:	sbb    al,dl
  4161fb:	xor    eax,0x2b1bc1b3
  416200:	push   ds
  416201:	das    
  416202:	jae    0x416191
  416204:	xchg   DWORD PTR [esi],esp
  416206:	cwde   
  416207:	(bad)  
  416208:	push   esi
  416209:	mov    al,0xcc
  41620b:	mov    bl,0x4a
  41620d:	mov    dl,0x84
  41620f:	lea    edx,[esi-0x6661e321]
  416215:	mov    ah,0x58
  416217:	cdq    
  416218:	cmc    
  416219:	jo     0x41620f
  41621b:	stos   DWORD PTR es:[edi],eax
  41621c:	sub    ebp,DWORD PTR [eax]
  41621e:	xchg   DWORD PTR [esi+eiz*2+0x6a8f481a],esp
  416225:	xchg   edx,eax
  416226:	int    0x9a
  416228:	jp     0x41622c
  41622a:	enter  0x7287,0xd8
  41622e:	or     ah,BYTE PTR [edi+0xe36b590]
  416234:	ret    
  416235:	in     al,dx
  416236:	sub    DWORD PTR [edi-0x6469c676],ecx
  41623c:	retf   
  41623d:	xchg   ebp,eax
  41623e:	(bad)  
  416240:	sub    ch,ah
  416242:	fistp  QWORD PTR [edx-0x239f3337]
  416248:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416249:	cld    
  41624a:	cdq    
  41624b:	cdq    
  41624c:	rcr    eax,cl
  41624e:	push   0x58
  416250:	in     al,dx
  416251:	sbb    al,0x84
  416253:	xchg   ecx,eax
  416254:	push   ss
  416255:	mov    ds:0x3c6a621b,eax
  41625a:	sub    al,0x2e
  41625c:	sti    
  41625d:	leave  
  41625e:	and    eax,0x4f515f95
  416263:	xchg   edi,eax
  416264:	fwait
  416265:	je     0x4161e7
  416267:	test   eax,0x2288ef84
  41626c:	call   0x472c:0xcf41b710
  416273:	not    BYTE PTR [eax]
  416275:	cld    
  416276:	mov    eax,ds:0x5d804bd
  41627b:	div    BYTE PTR [ecx+0x2c]
  41627e:	addr16 in al,0x59
  416281:	xor    BYTE PTR [eax-0x48c87245],al
  416287:	test   DWORD PTR [edi+0x5a],esp
  41628a:	aam    0x62
  41628c:	neg    al
  41628e:	lds    edi,FWORD PTR [edx+0x353ae10]
  416294:	ss ds inc esp
  416297:	adc    DWORD PTR [esi],ebp
  416299:	test   BYTE PTR [edx+ecx*2+0x3bd1614b],0xb5
  4162a1:	ss xchg esp,eax
  4162a3:	and    esp,DWORD PTR [ecx]
  4162a5:	adc    al,0xb4
  4162a7:	ds in  al,dx
  4162a9:	xchg   edi,eax
  4162aa:	mov    al,0xce
  4162ac:	mov    esi,ss
  4162ae:	rol    BYTE PTR [esi-0x43],cl
  4162b1:	dec    eax
  4162b2:	xchg   esi,eax
  4162b3:	test   DWORD PTR [eiz*1-0x36ccdd7],edi
  4162ba:	inc    esp
  4162bb:	mov    cl,0x2
  4162bd:	mov    ch,0xaa
  4162bf:	sub    edx,DWORD PTR [ecx-0x43a768e2]
  4162c5:	lea    edx,[edx+0x65629a7b]
  4162cb:	inc    DWORD PTR [edx+0x37]
  4162ce:	into   
  4162cf:	rcl    BYTE PTR [ebx+0x3b],0x47
  4162d3:	stos   BYTE PTR es:[edi],al
  4162d4:	int3   
  4162d5:	das    
  4162d6:	mov    edi,0x76d22606
  4162db:	inc    esp
  4162dc:	or     BYTE PTR [edx-0x4a],dh
  4162df:	dec    edi
  4162e0:	pop    edx
  4162e1:	jo     0x4162f2
  4162e3:	xor    dh,bl
  4162e5:	inc    ebx
  4162e6:	sti    
  4162e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162e8:	mov    dh,bl
  4162ea:	inc    ecx
  4162eb:	add    BYTE PTR [edx+0x3b],dh
  4162ee:	sar    DWORD PTR [ebp-0x6bbc5bf5],0xa1
  4162f5:	fisub  WORD PTR [ebp-0x45]
  4162f8:	jl     0x41632e
  4162fa:	arpl   cx,bx
  4162fc:	outs   dx,DWORD PTR ds:[esi]
  4162fd:	push   edx
  4162fe:	mov    esp,0xa6dfa827
  416303:	push   cs
  416304:	outs   dx,DWORD PTR ds:[esi]
  416305:	outs   dx,DWORD PTR ds:[esi]
  416306:	rol    DWORD PTR [ebp-0x29],0xc2
  41630a:	inc    eax
  41630b:	lods   eax,DWORD PTR ds:[esi]
  41630c:	and    al,0xcc
  41630e:	fs jge 0x416305
  416311:	push   ds
  416312:	xor    ebp,0x180daf22
  416318:	mov    ecx,0x8948dd98
  41631d:	jp     0x41632f
  41631f:	imul   eax,DWORD PTR [eax+0x48b6dd8d],0x1f978a88
  416329:	ss mov al,0xf5
  41632c:	bound  ebx,QWORD PTR [ebx]
  41632e:	push   0xebc94b22
  416333:	adc    ah,cl
  416335:	(bad)  
  416336:	pop    esi
  416337:	or     al,0x2b
  416339:	mov    ebx,0x48b3d5cf
  41633e:	sub    al,0x71
  416340:	ja     0x416319
  416342:	call   0x139c:0xd615dbd8
  416349:	shr    DWORD PTR [edx-0x62f3e051],cl
  41634f:	add    eax,0x747e5ffb
  416354:	aad    0x86
  416356:	sbb    ch,BYTE PTR [ebp+0x7]
  416359:	mov    eax,0x5adad99a
  41635e:	hlt    
  41635f:	jmp    0x41632a
  416361:	inc    ebx
  416362:	mov    ebx,0x36ce4902
  416367:	mov    bh,0x5b
  416369:	jg     0x41632d
  41636b:	sub    dl,bh
  41636d:	inc    esi
  41636e:	(bad)  
  41636f:	icebp  
  416370:	mov    ecx,eax
  416372:	push   ss
  416373:	rol    DWORD PTR [eax],0x5d
  416376:	push   ebp
  416377:	clc    
  416378:	fcomp  DWORD PTR [edx]
  41637a:	xchg   ebp,eax
  41637b:	push   fs
  41637d:	mov    edx,edi
  41637f:	stc    
  416380:	cwde   
  416381:	sub    bl,dh
  416383:	cmp    edi,DWORD PTR [edx]
  416385:	dec    ebp
  416386:	jecxz  0x416396
  416388:	jecxz  0x4163e2
  41638a:	ja     0x4163e0
  41638c:	jno    0x41634c
  41638e:	or     BYTE PTR [eax+0x2f64101b],bh
  416394:	sub    DWORD PTR [eax-0x10],edi
  416397:	shr    eax,cl
  416399:	enter  0x2bd9,0x6c
  41639d:	adc    ebp,ebp
  41639f:	test   DWORD PTR [eax+0xe],0x72506a36
  4163a6:	in     al,dx
  4163a7:	sub    dh,0x76
  4163aa:	xchg   ebx,eax
  4163ab:	mov    al,0x87
  4163ad:	xchg   ebx,eax
  4163ae:	repnz pop edi
  4163b0:	(bad)  [edi+0x32]
  4163b3:	jo     0x416418
  4163b5:	aas    
  4163b6:	stc    
  4163b7:	test   DWORD PTR [ebx-0x34cadca2],ebx
  4163bd:	xchg   DWORD PTR [esi+eax*4],eax
  4163c0:	jmp    0x8ccc:0x9f1b4547
  4163c7:	aad    0x8a
  4163c9:	cmp    eax,0xde241a4
  4163ce:	xor    eax,0x1ff692e5
  4163d3:	mov    eax,ds:0xb75b7550
  4163d8:	aad    0xe1
  4163da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163dc:	repnz cmp bl,al
  4163df:	xchg   ebp,eax
  4163e0:	mov    DWORD PTR [esi],edx
  4163e2:	mov    ds:0x7b3ce009,al
  4163e7:	inc    ebp
  4163e8:	cmp    dh,bh
  4163ea:	mov    edx,0x1ece4cf4
  4163ef:	lahf   
  4163f0:	push   eax
  4163f1:	sbb    eax,ebp
  4163f3:	dec    ecx
  4163f4:	loop   0x41643f
  4163f6:	add    ebp,esi
  4163f8:	mov    ds:0x3528ee4a,al
  4163fd:	cmp    ebx,edx
  4163ff:	fwait
  416400:	jno    0x416479
  416402:	cmp    ecx,DWORD PTR [ebx]
  416404:	cmp    eax,0xbc2f0c57
  416409:	fwait
  41640a:	or     DWORD PTR [edi+edx*4],0x430e3735
  416411:	js     0x41639e
  416413:	fist   DWORD PTR [ebx]
  416415:	jns    0x416485
  416417:	jmp    0xa0b0:0x900067
  41641e:	and    ebp,edi
  416420:	jbe    0x416488
  416422:	outs   dx,DWORD PTR ds:[esi]
  416423:	in     al,0xc0
  416425:	inc    ebp
  416426:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416427:	arpl   bx,dx
  416429:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41642a:	jl     0x4163c1
  41642c:	mov    ds:0x8887370c,eax
  416431:	ins    DWORD PTR es:[edi],dx
  416432:	mov    esp,0x608b1c59
  416437:	inc    esi
  416438:	shl    BYTE PTR [eax+0x64991e64],cl
  41643e:	ins    DWORD PTR es:[edi],dx
  41643f:	xor    bh,ah
  416441:	mov    al,ds:0xfee18ecb
  416446:	xor    DWORD PTR [eax-0x29],esp
  416449:	loope  0x416470
  41644b:	mov    al,dl
  41644d:	in     al,dx
  41644e:	loopne 0x416448
  416450:	loope  0x4163f9
  416452:	xchg   dh,bh
  416454:	add    bl,BYTE PTR [ecx-0x6437bebf]
  41645a:	dec    ebx
  41645b:	mov    al,0xbc
  41645d:	outs   dx,DWORD PTR ds:[esi]
  41645e:	fnstenv [edx-0x5f9dc249]
  416464:	sahf   
  416465:	js     0x416418
  416467:	leave  
  416468:	loop   0x416497
  41646a:	daa    
  41646b:	add    esi,DWORD PTR [esi+0x53062819]
  416471:	inc    ebx
  416472:	inc    ebx
  416473:	push   ds
  416474:	mov    bl,0xc7
  416476:	pop    ebp
  416477:	cmp    ah,BYTE PTR [ecx+0x8d01a21]
  41647d:	and    al,0x8e
  41647f:	jle    0x4164c2
  416481:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416482:	sub    DWORD PTR [ebp-0x1e],ecx
  416485:	or     DWORD PTR [ecx-0x7f],esp
  416488:	into   
  416489:	rcl    cl,1
  41648b:	jmp    0x8583:0x17a0930e
  416492:	test   DWORD PTR [ebp-0x6fcdcad5],esp
  416498:	(bad)  [ebp-0x1d]
  41649c:	stos   BYTE PTR es:[edi],al
  41649d:	pop    edx
  41649e:	mov    edi,0xb299d6aa
  4164a3:	hlt    
  4164a4:	add    eax,0x3dc0c0c7
  4164a9:	aas    
  4164aa:	dec    esp
  4164ab:	pop    esp
  4164ac:	and    ebp,DWORD PTR ds:0xf87849e9
  4164b2:	inc    esp
  4164b3:	cli    
  4164b4:	loopne 0x41652d
  4164b6:	fmul   QWORD PTR [eax]
  4164b8:	and    dl,BYTE PTR [edx-0x4254f624]
  4164be:	aad    0xdf
  4164c0:	or     BYTE PTR [ecx+0x13e35cec],bh
  4164c6:	lahf   
  4164c7:	popf   
  4164c8:	rcr    DWORD PTR [edi-0x6a],cl
  4164cb:	jb     0x4164ee
  4164cd:	dec    ecx
  4164ce:	repnz outs dx,DWORD PTR ds:[esi]
  4164d0:	sbb    dh,BYTE PTR [edi-0x55a4ee9]
  4164d6:	popa   
  4164d7:	mov    BYTE PTR [eax],dh
  4164d9:	(bad)  
  4164da:	fcomp  DWORD PTR [esi+0x22]
  4164dd:	sbb    esp,DWORD PTR [edi+0x28]
  4164e0:	ret    
  4164e1:	shr    BYTE PTR [eax+0x5753ebc4],0x2b
  4164e8:	out    dx,eax
  4164e9:	popf   
  4164ea:	jne    0x41652c
  4164ec:	fsubr  DWORD PTR [ebp-0x13643c86]
  4164f2:	test   al,0xc2
  4164f4:	fsub   DWORD PTR ss:[ebp+0x61]
  4164f8:	push   0x1d
  4164fa:	or     DWORD PTR ss:[ecx+eiz*8],0x8650f08b
  416502:	add    BYTE PTR [edx],0x7e
  416505:	xchg   ebp,eax
  416506:	neg    DWORD PTR [edi+0xc438ec5]
  41650c:	cli    
  41650d:	sub    al,0x38
  41650f:	aad    0x40
  416511:	pop    es
  416512:	xor    al,0xf8
  416514:	xor    DWORD PTR [eax-0x4f],ebx
  416517:	das    
  416518:	ins    DWORD PTR es:[edi],dx
  416519:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41651a:	or     al,0x52
  41651c:	cwde   
  41651d:	pop    ds
  41651e:	scas   al,BYTE PTR es:[edi]
  41651f:	cmp    BYTE PTR [ecx],0x15
  416522:	mov    BYTE PTR [edx+0x3c],0x6e
  416526:	pop    ss
  416527:	aaa    
  416528:	adc    DWORD PTR [eax-0x5ffc157d],ebp
  41652e:	pushf  
  41652f:	mov    esi,0x3bf2b0db
  416534:	xor    edx,eax
  416536:	mov    eax,0x20c6e2c3
  41653b:	loopne 0x41658e
  41653d:	hlt    
  41653e:	stos   DWORD PTR es:[edi],eax
  41653f:	pop    edx
  416540:	mov    ah,0x57
  416542:	in     eax,dx
  416543:	mov    edx,0x5683e420
  416548:	inc    ecx
  416549:	mov    ch,0xf2
  41654b:	(bad)  
  41654c:	pop    esi
  41654d:	pop    esi
  41654e:	or     DWORD PTR [ecx+0x3fa295f7],0xffffffe0
  416555:	clc    
  416556:	sbb    BYTE PTR [edx+edi*1+0x1101d722],bh
  41655d:	xchg   edi,eax
  41655e:	pop    ecx
  41655f:	or     al,0xca
  416561:	jl     0x41653c
  416563:	loop   0x416595
  416565:	in     al,0x7
  416567:	ja     0x416564
  416569:	xchg   esp,eax
  41656a:	mov    ebp,0xaed3e9e
  41656f:	call   0xb3a740cc
  416574:	stc    
  416575:	dec    ebp
  416576:	jp     0x416532
  416578:	adc    bl,dh
  41657a:	mov    esi,0x2fee9bd7
  41657f:	adc    al,0x8f
  416581:	rcl    BYTE PTR [esi],0xb9
  416584:	inc    edx
  416585:	add    ah,BYTE PTR [ebx+eiz*1-0x30ac45b8]
  41658c:	icebp  
  41658d:	sbb    al,0xf2
  41658f:	test   DWORD PTR [edi-0x41],eax
  416592:	cmp    al,0x5
  416594:	mov    edi,eax
  416596:	dec    esi
  416597:	mov    edx,0xf192dc81
  41659c:	xchg   bl,ch
  41659e:	or     DWORD PTR [eax-0x1c],0x69
  4165a2:	inc    ecx
  4165a3:	and    eax,0x7135412e
  4165a8:	(bad)  
  4165aa:	push   esi
  4165ab:	pop    edi
  4165ac:	pop    ebx
  4165ad:	mov    WORD PTR [edi],cs
  4165af:	cmc    
  4165b0:	cmp    eax,0x37a3e29
  4165b5:	ret    0x74d5
  4165b8:	xor    dl,BYTE PTR [edi-0x594ffb3b]
  4165be:	aaa    
  4165bf:	adc    dl,ch
  4165c1:	jno    0x4165d3
  4165c3:	mov    ds:0x96d01846,al
  4165c8:	xor    BYTE PTR [edx-0x54],ah
  4165cb:	push   cs
  4165cc:	and    BYTE PTR [ebp+0x2f],dl
  4165cf:	icebp  
  4165d0:	rol    DWORD PTR es:[ecx+esi*2+0x3d],cl
  4165d5:	pusha  
  4165d6:	fldcw  WORD PTR [eax+edx*1-0x3f7aa594]
  4165dd:	mov    al,ds:0x1d5ce8ef
  4165e2:	mov    ds:0x9dc3e34e,eax
  4165e7:	retf   0x40f1
  4165ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165eb:	and    BYTE PTR [ebp+0x2c],ch
  4165ee:	dec    ebx
  4165ef:	dec    ebx
  4165f0:	ret    0xfeaf
  4165f3:	inc    ebx
  4165f4:	adc    cl,BYTE PTR [edi+eiz*4+0x66]
  4165f8:	popa   
  4165f9:	lds    esi,FWORD PTR [ecx]
  4165fb:	xchg   ecx,eax
  4165fc:	or     BYTE PTR [eax+0x41],0x7d
  416600:	jle    0x416657
  416602:	and    al,0xe4
  416604:	rcr    DWORD PTR [esi+0x596d55cd],0x59
  41660b:	sbb    al,0xf1
  41660d:	and    ch,dh
  41660f:	push   edx
  416610:	inc    esi
  416611:	and    DWORD PTR [edx+0x2ffb3b86],esi
  416617:	pop    edx
  416618:	fsubr  DWORD PTR [edi+0x7f]
  41661b:	cmp    edi,DWORD PTR [ecx-0x6d]
  41661e:	sbb    al,0x76
  416620:	out    dx,al
  416621:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416622:	(bad)  
  416623:	loope  0x41667d
  416625:	or     eax,0xe3c4edd4
  41662a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41662b:	pusha  
  41662c:	xor    eax,0x946f17a5
  416631:	imul   ecx,edx,0xa528acf4
  416637:	xor    al,0x45
  416639:	icebp  
  41663a:	scas   al,BYTE PTR es:[edi]
  41663b:	and    ah,BYTE PTR ds:0x9e758330
  416641:	mov    ah,0x1b
  416643:	push   cs
  416644:	daa    
  416645:	popf   
  416646:	arpl   WORD PTR [edi+0x7],bp
  416649:	jl     0x416620
  41664b:	add    edi,DWORD PTR [esi]
  41664d:	les    ebx,FWORD PTR [edi]
  41664f:	xchg   DWORD PTR [esi-0xd],esi
  416652:	sbb    BYTE PTR [eax+0xf],0x1d
  416656:	dec    eax
  416657:	mov    BYTE PTR [eax],al
  416659:	imul   DWORD PTR [ebx]
  41665b:	jp     0x41663a
  41665d:	push   ebx
  41665e:	jnp    0x416673
  416660:	stos   DWORD PTR es:[edi],eax
  416661:	pushf  
  416662:	sub    dh,BYTE PTR [ebx-0x3fc9081a]
  416668:	and    eax,0x428469b3
  41666d:	add    bl,BYTE PTR [edi+0x6e2b7622]
  416673:	inc    esp
  416674:	retf   0x21c1
  416677:	dec    esi
  416678:	js     0x416635
  41667a:	rcr    DWORD PTR [edi-0x60684b27],0x6b
  416681:	fisubr DWORD PTR [ecx+0x1eb2fcae]
  416687:	inc    ecx
  416688:	and    al,0x68
  41668a:	cs inc eax
  41668c:	fmul   st(3),st
  41668e:	jo     0x4166ef
  416690:	out    dx,eax
  416691:	and    al,0x18
  416693:	cmp    ebx,edx
  416695:	jb     0x416665
  416697:	xchg   edx,eax
  416698:	in     al,0x1e
  41669a:	sti    
  41669b:	lds    esi,FWORD PTR [eax-0x52]
  41669e:	mov    cl,0x59
  4166a0:	bound  esp,QWORD PTR [eax+0x1c]
  4166a3:	ret    
  4166a4:	push   esp
  4166a5:	mov    ?,esp
  4166a7:	and    bh,BYTE PTR ds:0x538cc396
  4166ad:	mov    esp,0xe028ff04
  4166b2:	jo     0x416661
  4166b4:	shl    dh,cl
  4166b6:	imul   ecx,DWORD PTR ds:[edx],0x6555f143
  4166bd:	mov    ebp,DWORD PTR fs:[edx+esi*8-0x5f760cee]
  4166c5:	popa   
  4166c6:	jb     0x41669c
  4166c8:	mov    eax,DWORD PTR [edi]
  4166ca:	mov    eax,ds:0x95c9343
  4166cf:	pop    es
  4166d0:	jne    0x416721
  4166d2:	xlat   BYTE PTR ds:[ebx]
  4166d3:	leave  
  4166d4:	sbb    BYTE PTR [ebp+0x3e],cl
  4166d7:	mov    al,0x5e
  4166d9:	xor    eax,0xaec7a764
  4166de:	push   esi
  4166df:	call   0xc91e48d0
  4166e4:	jne    0x4166fa
  4166e6:	inc    ecx
  4166e7:	mov    ebx,0xc74184ce
  4166ec:	out    0x74,al
  4166ee:	adc    eax,0xdb1e57a4
  4166f3:	(bad)  
  4166f4:	data16 jno 0x41668d
  4166f7:	pop    ss
  4166f8:	jl     0x41670c
  4166fa:	shr    BYTE PTR [ebx+0x54b35e9e],cl
  416700:	xchg   ebp,eax
  416701:	push   ds
  416702:	mov    ebx,0x26123196
  416707:	(bad)  
  416708:	shl    ch,1
  41670a:	mov    edi,gs
  41670c:	pop    ss
  41670d:	scas   al,BYTE PTR es:[edi]
  41670e:	sub    eax,0xaf29be72
  416713:	fsub   DWORD PTR [ebp-0x25]
  416716:	sbb    eax,0x270ce850
  41671b:	sbb    DWORD PTR [esi],ebp
  41671d:	stos   DWORD PTR es:[edi],eax
  41671e:	rol    BYTE PTR [edx+edx*8],1
  416721:	inc    esp
  416722:	je     0x416765
  416724:	mov    bl,0x83
  416726:	mov    al,ds:0x5d02509c
  41672b:	es adc edx,esp
  41672e:	cmp    ah,BYTE PTR [esi-0x51]
  416731:	lahf   
  416732:	mov    dh,0x5d
  416734:	sbb    BYTE PTR ds:0xe19ba09a,cl
  41673a:	cld    
  41673b:	(bad)  
  41673c:	lods   al,BYTE PTR ds:[esi]
  41673d:	das    
  41673e:	push   eax
  41673f:	adc    eax,0x28b05e53
  416744:	sub    dl,bh
  416746:	dec    edx
  416747:	das    
  416748:	pop    ecx
  416749:	mov    eax,0xf66f6bd
  41674e:	and    ch,dl
  416750:	test   al,0xe1
  416752:	sub    edi,edi
  416754:	sub    al,0x11
  416756:	pop    esp
  416757:	xor    edi,DWORD PTR [edx]
  416759:	lahf   
  41675a:	inc    ecx
  41675b:	lahf   
  41675c:	push   es
  41675d:	sbb    esi,edx
  41675f:	imul   eax,DWORD PTR [eax],0xd114651a
  416765:	retf   
  416766:	outs   dx,DWORD PTR ds:[esi]
  416767:	sbb    eax,0x7483fe1
  41676c:	hlt    
  41676d:	pop    es
  41676e:	sahf   
  41676f:	jp     0x416793
  416771:	lods   al,BYTE PTR ds:[esi]
  416772:	lods   eax,DWORD PTR ds:[esi]
  416773:	es or  eax,0x294db76f
  416779:	and    BYTE PTR [edx+edx*8-0x6],0x73
  41677e:	outs   dx,DWORD PTR ds:[esi]
  41677f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416780:	imul   eax,DWORD PTR [esi+0x22e3fe5c],0xa3debaf0
  41678a:	or     eax,0x3d0aaf7c
  41678f:	aas    
  416790:	xchg   ebp,eax
  416791:	jo     0x416746
  416793:	fld    QWORD PTR [ebx-0x13]
  416796:	pop    esp
  416798:	jbe    0x41673e
  41679a:	dec    ecx
  41679b:	retf   0x403
  41679e:	xor    ecx,DWORD PTR fs:[ebx]
  4167a1:	mov    al,ds:0x33fc9275
  4167a6:	jns    0x41672d
  4167a8:	pop    ss
  4167a9:	xchg   BYTE PTR [esi-0x521bc5ce],bl
  4167af:	ret    0x59fd
  4167b2:	push   0xb17f55c1
  4167b7:	rcr    DWORD PTR [esp+eax*8-0x57],0x58
  4167bc:	(bad)  
  4167be:	sbb    BYTE PTR [esp+ecx*8-0x16fc896f],cl
  4167c5:	cwde   
  4167c6:	or     al,0x7d
  4167c8:	jmp    0x41680e
  4167ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167cb:	adc    eax,0x80c974b4
  4167d0:	hlt    
  4167d1:	mov    edi,0x2b4955c
  4167d6:	adc    eax,edi
  4167d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167d9:	or     DWORD PTR [ebp+ebp*1-0x2c],ebp
  4167dd:	fucomip st,st(3)
  4167df:	fiadd  DWORD PTR [edx]
  4167e1:	sti    
  4167e2:	jmp    0x4167e9
  4167e4:	sbb    ch,BYTE PTR [ecx+ebp*8-0x1fdea460]
  4167eb:	jo     0x41677c
  4167ed:	inc    ebp
  4167ee:	int3   
  4167ef:	outs   dx,BYTE PTR ds:[esi]
  4167f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167f1:	sti    
  4167f2:	mov    esi,0x640d8db0
  4167f7:	mov    cl,0x40
  4167f9:	pop    ss
  4167fa:	pop    ebx
  4167fb:	stc    
  4167fc:	pushf  
  4167fd:	es xchg ebx,eax
  4167ff:	xchg   ebp,eax
  416800:	xor    DWORD PTR fs:[ecx],edi
  416803:	mov    dh,0x22
  416805:	pushf  
  416806:	clc    
  416807:	test   edi,0x9d0d35df
  41680d:	retf   0xc401
  416810:	xchg   ebp,eax
  416811:	mov    esp,0x6caec08
  416816:	das    
  416817:	push   edi
  416818:	pop    es
  416819:	arpl   WORD PTR [edx-0x45],dx
  41681c:	outs   dx,DWORD PTR ds:[esi]
  41681d:	mov    ebp,0x550c0d74
  416822:	retf   0xc12c
  416825:	mov    ah,0x8d
  416827:	ins    DWORD PTR es:[edi],dx
  416828:	pop    eax
  416829:	pop    es
  41682a:	mov    bl,0x86
  41682c:	sbb    dh,BYTE PTR [edi-0x72]
  41682f:	bound  ebp,QWORD PTR [edx-0x72]
  416832:	pop    ebx
  416833:	xchg   ebx,eax
  416834:	out    0xc,al
  416836:	mov    fs,edx
  416838:	sbb    eax,ebp
  41683a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41683b:	mov    ?,WORD PTR [esi-0x3414feed]
  416841:	dec    al
  416843:	mov    bl,0xed
  416845:	push   0xffffffe9
  416847:	mov    esp,0x4f250a73
  41684c:	mov    BYTE PTR [ebx],bh
  41684e:	aas    
  41684f:	int3   
  416850:	adc    ecx,ebp
  416852:	xor    BYTE PTR [ebx],al
  416854:	out    0x8f,eax
  416856:	jl     0x41687e
  416858:	imul   BYTE PTR [ebp+ebx*2+0x6f]
  41685c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41685d:	call   0xdc92:0x893c5e73
  416864:	pop    ds
  416865:	dec    esi
  416866:	repz jecxz 0x4167fe
  416869:	mov    ch,0x71
  41686b:	xor    edx,ecx
  41686d:	sub    al,0xf2
  41686f:	inc    ebx
  416870:	cli    
  416871:	mov    eax,0x18684261
  416876:	scas   eax,DWORD PTR es:[edi]
  416877:	pop    esp
  416878:	sahf   
  416879:	aam    0x4a
  41687b:	imul   esi,edx,0x104a24fd
  416881:	lods   al,BYTE PTR ds:[esi]
  416882:	pop    ebp
  416883:	jg     0x416835
  416885:	aad    0xee
  416887:	daa    
  416888:	iret   
  416889:	jno    0x41687d
  41688b:	mov    al,0x7
  41688d:	js     0x416846
  41688f:	call   0xc77a4be
  416894:	ins    DWORD PTR es:[edi],dx
  416895:	mov    ebx,0xd7578e40
  41689a:	mov    bh,0xde
  41689c:	adc    DWORD PTR [edi],ebx
  41689e:	inc    edi
  41689f:	and    cl,dh
  4168a1:	or     BYTE PTR [edi],0x4f
  4168a4:	xchg   DWORD PTR [esi+ecx*1],eax
  4168a7:	mov    esp,0x5d5fa646
  4168ac:	jmp    0x416847
  4168ae:	jle    0x4168f8
  4168b0:	mov    ah,0x86
  4168b2:	call   0xc7ea:0x3acec8bf
  4168b9:	sti    
  4168ba:	ret    0x4476
  4168bd:	mov    eax,0xde13b28f
  4168c2:	out    0x1,al
  4168c4:	adc    DWORD PTR [ebx],0xaa7a0913
  4168ca:	sahf   
  4168cb:	fnsave [ecx+eax*4-0x3ff36dc9]
  4168d2:	xor    BYTE PTR [ebx],ch
  4168d4:	push   edx
  4168d5:	clc    
  4168d6:	pushf  
  4168d7:	add    eax,0xccd785cf
  4168dc:	test   eax,0x37cfd0a9
  4168e1:	and    ecx,DWORD PTR [ebp-0x59]
  4168e4:	je     0x41687e
  4168e6:	xchg   esi,eax
  4168e7:	push   0xe50fcf8b
  4168ec:	pusha  
  4168ed:	sub    dl,al
  4168ef:	adc    eax,0x58103d19
  4168f4:	cmp    eax,DWORD PTR [edi]
  4168f6:	mov    ch,BYTE PTR [edx+ecx*1]
  4168f9:	add    bh,BYTE PTR [edi]
  4168fb:	pop    es
  4168fc:	sub    edi,esp
  4168fe:	inc    DWORD PTR [edi-0x16]
  416901:	mov    ebp,0x1c1475b6
  416906:	loope  0x4168f4
  416908:	sbb    ah,BYTE PTR [ecx+0x2c6345cf]
  41690e:	test   BYTE PTR [esi+ebp*2],dl
  416911:	pushf  
  416912:	outs   dx,DWORD PTR ds:[esi]
  416913:	mov    esi,0xbb9f7802
  416918:	das    
  416919:	int    0xa7
  41691b:	sbb    edi,DWORD PTR [esi]
  41691d:	cmp    DWORD PTR [ebx-0x67101d7b],ebx
  416923:	mov    ecx,0x72ddb7ad
  416928:	cwde   
  416929:	bound  ebp,QWORD PTR [ebp-0x28]
  41692c:	cdq    
  41692d:	imul   ebp,DWORD PTR [ebx],0x7b075f53
  416933:	out    dx,eax
  416934:	out    0xa0,eax
  416936:	cld    
  416937:	pushf  
  416938:	jp     0x4168c5
  41693a:	sub    al,0x17
  41693c:	adc    al,0x31
  41693e:	loopne 0x4169b3
  416940:	in     al,dx
  416941:	xor    ebx,DWORD PTR [ebx]
  416943:	or     al,al
  416945:	loop   0x41692d
  416947:	push   edi
  416948:	jp     0x416961
  41694a:	xor    ebx,DWORD PTR [edx-0x1a]
  41694d:	ins    DWORD PTR es:[edi],dx
  41694e:	enter  0xf58f,0x3c
  416952:	sub    DWORD PTR [eax-0x2bdd5d2],0xffffffae
  416959:	or     eax,eax
  41695b:	(bad)  
  41695c:	mov    al,ds:0xa976a2f5
  416961:	test   esp,0xdaa1a6b3
  416967:	push   ss
  416968:	mov    cr3,esp
  41696b:	pop    ss
  41696c:	retf   0x6ce0
  41696f:	hlt    
  416970:	push   ebp
  416971:	sti    
  416972:	not    DWORD PTR [esp+edi*1]
  416975:	es xchg edx,eax
  416977:	or     DWORD PTR [ecx-0x32620d5b],ecx
  41697d:	mov    ds:0xaf31bb53,eax
  416982:	test   eax,eax
  416984:	mov    bh,0xd0
  416986:	call   0x7e404520
  41698b:	fs ds xchg esi,eax
  41698e:	sub    cl,BYTE PTR [eax+0x4e]
  416991:	or     eax,0xa960e346
  416996:	sbb    al,0xb9
  416998:	cs or  al,0x28
  41699b:	dec    ebp
  41699c:	mov    esi,0x3f30cc95
  4169a1:	fmul   st(5),st
  4169a3:	inc    eax
  4169a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169a5:	pop    eax
  4169a6:	pusha  
  4169a7:	hlt    
  4169a8:	jecxz  0x41695c
  4169aa:	sbb    eax,0xb703b842
  4169af:	scas   al,BYTE PTR es:[edi]
  4169b0:	adc    BYTE PTR [edx+ecx*8-0x6a09228d],ch
  4169b7:	dec    ebx
  4169b8:	rol    DWORD PTR [esi+0x341afa4a],0x56
  4169bf:	push   ds
  4169c0:	adc    BYTE PTR [edx+0x2a74880c],0x34
  4169c7:	movups XMMWORD PTR [esp+eax*8-0x1],xmm3
  4169cc:	xor    al,0xa0
  4169ce:	add    al,0x66
  4169d0:	nop
  4169d1:	mov    eax,ds:0xeb8cad81
  4169d6:	sbb    BYTE PTR [eax-0x49064d2a],0x4e
  4169dd:	inc    edi
  4169de:	pop    esi
  4169df:	pop    ebx
  4169e0:	mov    DWORD PTR [eax+0x2d4b9d56],edx
  4169e6:	js     0x4169fc
  4169e8:	rcl    cl,0x49
  4169eb:	scas   eax,DWORD PTR es:[edi]
  4169ec:	jp     0x416a28
  4169ee:	inc    esp
  4169ef:	das    
  4169f0:	and    al,0x98
  4169f2:	clc    
  4169f3:	mov    al,ah
  4169f5:	pop    ebx
  4169f6:	sbb    al,bl
  4169f8:	push   edi
  4169f9:	push   ss
  4169fa:	jmp    0x416a1b
  4169fc:	or     ecx,DWORD PTR ds:0x6ee4618b
  416a02:	sbb    bh,BYTE PTR [edx]
  416a04:	jmp    FWORD PTR [esi+ecx*4]
  416a07:	xchg   ebp,eax
  416a08:	loopne 0x4169a5
  416a0a:	dec    esp
  416a0b:	pop    edi
  416a0c:	cmp    al,0x39
  416a0e:	mov    ds:0xcbde80ce,al
  416a13:	daa    
  416a14:	sahf   
  416a15:	fcom   DWORD PTR [esi*8-0x429fefc4]
  416a1c:	leave  
  416a1d:	ror    BYTE PTR [edi],0x1f
  416a20:	loop   0x4169f8
  416a22:	or     eax,0x6fd78a18
  416a27:	and    ebp,DWORD PTR [esi-0x25]
  416a2a:	popf   
  416a2b:	xchg   edx,eax
  416a2c:	cwde   
  416a2d:	mov    eax,0xc7622ed4
  416a32:	fnstenv [esi+edi*2-0x6b0bd5c0]
  416a39:	bound  ebx,QWORD PTR [edi-0x65cc739e]
  416a3f:	push   cs
  416a40:	sbb    al,0x38
  416a42:	or     DWORD PTR [ebp-0x5a],ecx
  416a45:	push   0xbaa4fa1
  416a4a:	xor    dl,cl
  416a4c:	dec    esi
  416a4d:	pop    ss
  416a4e:	add    BYTE PTR [ebx-0x7e],al
  416a51:	cmc    
  416a52:	pop    esi
  416a53:	pop    esi
  416a54:	ds pop ecx
  416a56:	out    dx,al
  416a57:	adc    DWORD PTR [esp+ebx*4-0x2e],ecx
  416a5b:	mov    ?,WORD PTR [ecx+edi*2]
  416a5e:	clc    
  416a5f:	fidiv  DWORD PTR [eax]
  416a61:	jle    0x416a20
  416a63:	in     al,dx
  416a64:	cdq    
  416a65:	jge    0x416a48
  416a67:	cld    
  416a68:	push   esp
  416a69:	loope  0x416a1e
  416a6b:	enter  0xf2bf,0x3b
  416a6f:	jle    0x416a74
  416a71:	enter  0x2120,0x23
  416a75:	push   edx
  416a76:	fstp   TBYTE PTR [edx+0x3a]
  416a79:	jp     0x416a67
  416a7b:	jp     0x416ac9
  416a7d:	(bad)  
  416a7e:	retf   0x987a
  416a81:	lea    esi,[esi-0x3bc0a67c]
  416a87:	stos   DWORD PTR es:[edi],eax
  416a88:	jp     0x416a36
  416a8a:	xor    ch,ah
  416a8c:	mov    eax,DWORD PTR [esi-0x80]
  416a8f:	xchg   edi,eax
  416a90:	push   0x3213ac4
  416a95:	or     al,0x5c
  416a97:	test   BYTE PTR [eax+0x76c28970],bl
  416a9d:	dec    ebx
  416a9e:	js     0x416a91
  416aa0:	shl    DWORD PTR [ebp+0x648b0e61],0x8f
  416aa7:	add    eax,0xa2482859
  416aac:	clc    
  416aad:	das    
  416aae:	popa   
  416aaf:	inc    edi
  416ab0:	inc    edx
  416ab1:	sbb    eax,0x80acb34c
  416ab6:	xor    BYTE PTR [edi],ah
  416ab8:	shr    BYTE PTR [esi-0x78cf3d74],1
  416abe:	cli    
  416abf:	cli    
  416ac0:	fcmovnbe st,st(0)
  416ac2:	mov    ebx,0x762d241a
  416ac7:	(bad)  
  416ac8:	sahf   
  416ac9:	nop
  416aca:	mov    esi,0x378ce5ce
  416acf:	push   0xffffff94
  416ad1:	in     eax,dx
  416ad2:	outs   dx,DWORD PTR ds:[esi]
  416ad3:	sub    DWORD PTR [edx+0x600c5fd1],esp
  416ad9:	fucom  st(4)
  416adb:	aad    0x1d
  416add:	xor    ebx,DWORD PTR [edx+eiz*8]
  416ae0:	push   ss
  416ae1:	xor    esp,DWORD PTR [edi-0x4115c7fe]
  416ae7:	push   edi
  416ae8:	add    al,0x83
  416aea:	lea    edi,[ebx]
  416aec:	mov    BYTE PTR [ecx-0x21],0x67
  416af0:	sbb    dl,BYTE PTR [ebx+edx*8-0x6d1d8427]
  416af7:	sbb    ah,cl
  416af9:	cmp    eax,0xb75baecb
  416afe:	mov    bh,0x6d
  416b00:	lahf   
  416b01:	sbb    DWORD PTR [edx+0x6],ecx
  416b04:	mov    ds:0xc5b127d4,al
  416b09:	sbb    al,0x8d
  416b0b:	sar    BYTE PTR [eax+0x9],0x9b
  416b0f:	scas   eax,DWORD PTR es:[edi]
  416b10:	dec    esp
  416b11:	cdq    
  416b12:	or     eax,0xcab3dc63
  416b17:	mov    dh,0x9
  416b19:	mov    bl,0xc5
  416b1b:	mov    bh,0xd2
  416b1d:	imul   eax,DWORD PTR [ecx],0x70
  416b20:	lahf   
  416b21:	pop    edx
  416b22:	lds    edi,FWORD PTR [edi+0x1d558b36]
  416b28:	pushf  
  416b29:	jns    0x416af6
  416b2b:	mov    esp,0xf35eb830
  416b30:	ja     0x416b00
  416b32:	xchg   BYTE PTR [ecx+0x76],al
  416b35:	leave  
  416b36:	mov    edi,0x3e8acbb9
  416b3b:	inc    ebx
  416b3c:	jge    0x416b8b
  416b3e:	xor    eax,0xdf4a9f55
  416b43:	aam    0x9f
  416b45:	loop   0x416bbd
  416b47:	mov    bl,0xd8
  416b49:	stos   DWORD PTR es:[edi],eax
  416b4a:	push   0xffffffa5
  416b4c:	mov    dh,0x18
  416b4e:	xor    eax,0x61f7a953
  416b53:	repz cdq 
  416b55:	mov    ds:0x1ba16cfd,eax
  416b5a:	push   cs
  416b5b:	stos   DWORD PTR es:[edi],eax
  416b5c:	inc    edx
  416b5d:	adc    eax,0xbdf8229c
  416b62:	jns    0x416bda
  416b64:	push   ebp
  416b65:	mov    al,0x8a
  416b67:	inc    eax
  416b68:	outs   dx,DWORD PTR ds:[esi]
  416b69:	inc    ecx
  416b6a:	xor    al,0x7e
  416b6c:	and    ah,ch
  416b6e:	stos   DWORD PTR es:[edi],eax
  416b6f:	stos   DWORD PTR es:[edi],eax
  416b70:	mov    ds:0x5da5d875,eax
  416b75:	loope  0x416b44
  416b77:	stos   BYTE PTR es:[edi],al
  416b78:	xor    eax,0xc9cbcacb
  416b7d:	fwait
  416b7e:	and    ch,BYTE PTR [edi+0x5f]
  416b81:	cmp    ch,BYTE PTR [ebp+esi*2-0xf]
  416b85:	pop    eax
  416b86:	cli    
  416b87:	mov    al,0x99
  416b89:	cmc    
  416b8a:	or     BYTE PTR [ecx+0x52d3734],bh
  416b90:	call   0x9138:0xc05f8bf9
  416b97:	lock push 0x2429a862
  416b9d:	call   0xbe9f:0x65002e66
  416ba4:	(bad)  
  416ba5:	gs sahf 
  416ba7:	(bad)  
  416ba8:	jmp    0x416b7e
  416baa:	ja     0x416c0a
  416bac:	bound  eax,QWORD PTR [ecx+0x3b]
  416baf:	adc    edi,DWORD PTR [ecx+0x1c]
  416bb2:	push   ds
  416bb3:	inc    edx
  416bb4:	loopne 0x416b60
  416bb6:	das    
  416bb7:	cmp    DWORD PTR [edx],ecx
  416bb9:	cmc    
  416bba:	or     al,0x88
  416bbc:	jbe    0x416b5a
  416bbe:	lahf   
  416bbf:	sti    
  416bc0:	mov    cl,0x6d
  416bc2:	cmp    BYTE PTR [eax+0x1b],ah
  416bc5:	mov    edx,0xeb75b661
  416bca:	jbe    0x416c13
  416bcc:	ins    DWORD PTR es:[edi],dx
  416bcd:	or     ebp,ebp
  416bcf:	neg    BYTE PTR [esi-0x1a8d68e9]
  416bd5:	stc    
  416bd6:	or     bl,BYTE PTR [edx-0x609f9e19]
  416bdc:	js     0x416bf4
  416bde:	pop    eax
  416bdf:	mov    ch,0x86
  416be1:	cmp    bh,BYTE PTR [ebx+0x24]
  416be4:	jle    0x416bdc
  416be6:	popf   
  416be7:	add    eax,DWORD PTR [edi]
  416be9:	mov    ds:0x9ce6bc92,eax
  416bee:	push   esp
  416bef:	xchg   edi,eax
  416bf0:	popf   
  416bf1:	iret   
  416bf2:	es sbb al,0x41
  416bf5:	adc    al,0xa4
  416bf7:	inc    edx
  416bf8:	jmp    0x416bb8
  416bfa:	mov    eax,0xcbaaf4b2
  416bff:	adc    ebx,DWORD PTR [ecx]
  416c01:	pop    ss
  416c02:	clc    
  416c03:	div    bh
  416c05:	jo     0x416c15
  416c07:	retf   0xe913
  416c0a:	push   ds
  416c0b:	fnstenv [eax+0x6bbe6fbe]
  416c11:	dec    esp
  416c12:	adc    DWORD PTR [ebp+0x76c6b5f3],edx
  416c18:	into   
  416c19:	inc    ebx
  416c1a:	and    al,0x1d
  416c1c:	(bad)  
  416c1d:	ss push ecx
  416c1f:	rol    BYTE PTR [edx+0x15],0x3c
  416c23:	jbe    0x416bd1
  416c25:	mov    eax,0x4338bb5a
  416c2a:	ss or  bl,dh
  416c2d:	sub    al,0xa9
  416c2f:	shr    DWORD PTR [esi-0x5374a151],cl
  416c35:	jp     0x416c96
  416c37:	retf   0xfd2c
  416c3a:	jge    0x416c86
  416c3c:	adc    eax,0xc8462957
  416c41:	inc    esp
  416c42:	sub    eax,0x789a76b2
  416c47:	enter  0x5f87,0xa
  416c4b:	out    0x13,eax
  416c4d:	xchg   BYTE PTR [esi+esi*8+0x16],dl
  416c51:	or     eax,0x81854c22
  416c56:	jecxz  0x416beb
  416c58:	adc    DWORD PTR [ecx+0x536b4d2d],edx
  416c5e:	ins    BYTE PTR es:[edi],dx
  416c5f:	mov    dh,0x1c
  416c61:	into   
  416c62:	pop    ebx
  416c63:	inc    esi
  416c64:	enter  0x7a72,0x91
  416c68:	js     0x416c57
  416c6a:	aam    0xd7
  416c6c:	xchg   DWORD PTR [ecx+0x6a],ebx
  416c6f:	inc    esp
  416c70:	push   edi
  416c71:	or     BYTE PTR [edi],0xb9
  416c74:	xchg   edi,eax
  416c75:	add    BYTE PTR [eax+0x9],dl
  416c78:	pushf  
  416c79:	bound  edi,QWORD PTR [eax]
  416c7b:	les    edx,FWORD PTR [edx+ebp*2-0x2e30512a]
  416c82:	jbe    0x416c22
  416c84:	ss pop edx
  416c86:	pop    eax
  416c87:	xchg   esp,eax
  416c88:	sbb    al,0x98
  416c8a:	or     al,0x9b
  416c8c:	jg     0x416cb4
  416c8e:	cmp    eax,0xacc7da10
  416c93:	add    bh,BYTE PTR [esi]
  416c95:	sub    al,0xd5
  416c97:	ret    
  416c98:	inc    ebp
  416c99:	add    ah,0x67
  416c9c:	retf   0x3cf9
  416c9f:	pop    ebx
  416ca0:	lock test DWORD PTR fs:[eax+0x31],esi
  416ca5:	mov    dl,0x8c
  416ca7:	xchg   ebx,eax
  416ca8:	(bad)  
  416ca9:	das    
  416caa:	push   esi
  416cab:	cli    
  416cac:	jp     0x416c68
  416cae:	test   BYTE PTR [eax+edi*4-0xac77a34],dl
  416cb5:	sub    ebp,DWORD PTR [ebp+0x530eb09e]
  416cbb:	push   0x28
  416cbd:	loopne 0x416cfa
  416cbf:	test   ecx,0xef1a4221
  416cc5:	sbb    edi,DWORD PTR [esi-0x47]
  416cc8:	and    al,0x66
  416cca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ccb:	adc    cl,0x1a
  416cce:	jno    0x416cc9
  416cd0:	pop    cx
  416cd2:	pop    ds
  416cd3:	xchg   ecx,eax
  416cd4:	inc    ebp
  416cd5:	mov    al,0x75
  416cd7:	cmp    esi,DWORD PTR [edi+ebp*4-0x39]
  416cdb:	xchg   BYTE PTR ds:0x684223d5,ch
  416ce1:	test   DWORD PTR [ebx-0x7f],edi
  416ce4:	mov    ebx,esi
  416ce6:	arpl   WORD PTR [edi+0xe],sp
  416ce9:	fdivr  DWORD PTR [ecx-0x4f]
  416cec:	cwde   
  416ced:	stos   BYTE PTR es:[edi],al
  416cee:	mov    dh,0x12
  416cf0:	sbb    dl,BYTE PTR [eax+0x51]
  416cf3:	sbb    ebx,edi
  416cf5:	pop    ss
  416cf6:	pop    esp
  416cf7:	pop    ebp
  416cf8:	(bad)  
  416cf9:	jle    0x416cad
  416cfb:	inc    ebp
  416cfc:	sbb    dl,BYTE PTR [ebp-0x5688eca6]
  416d02:	jecxz  0x416cb9
  416d04:	push   es
  416d05:	jmp    FWORD PTR [edx+eax*8+0x78cefc6c]
  416d0c:	std    
  416d0d:	push   0xfde44881
  416d12:	lock inc edx
  416d14:	pop    esp
  416d15:	mov    dh,0xa2
  416d17:	pop    edx
  416d18:	repnz xchg ecx,eax
  416d1a:	jnp    0x416d98
  416d1c:	cld    
  416d1d:	popf   
  416d1e:	cmp    bh,BYTE PTR [edi+0x7c894e28]
  416d24:	sbb    ah,BYTE PTR [edx-0x50]
  416d27:	ja     0x416d44
  416d29:	push   ds
  416d2a:	cmp    ch,BYTE PTR [ecx]
  416d2c:	sub    ch,BYTE PTR ds:0x703b8b9d
  416d32:	fcomp  st(0)
  416d34:	sub    eax,0x9be9089c
  416d39:	fmul   QWORD PTR [ecx-0x4ef62f14]
  416d3f:	retw   
  416d41:	sub    BYTE PTR [ebp-0x6f],dh
  416d44:	or     DWORD PTR [eax-0x7a],0x6a
  416d48:	or     eax,0x7fda059b
  416d4d:	pusha  
  416d4e:	stos   BYTE PTR es:[edi],al
  416d4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d50:	add    al,0x34
  416d52:	and    DWORD PTR [si+0x55],edx
  416d56:	sub    DWORD PTR [esi+0x5ff03e8e],0x25897719
  416d60:	test   BYTE PTR [esi+0x66],0xb5
  416d64:	dec    edi
  416d65:	int3   
  416d66:	repz mov dh,0xf6
  416d69:	shr    DWORD PTR [esi-0x7e],1
  416d6c:	shl    bh,cl
  416d6e:	js     0x416d6c
  416d70:	cmp    al,0x78
  416d72:	xor    BYTE PTR [ebx-0x58],cl
  416d75:	int3   
  416d76:	cs and ebx,ebx
  416d79:	mov    ebx,0xd4666990
  416d7e:	fisttp DWORD PTR [eax+edx*2+0x54560267]
  416d85:	fisttp WORD PTR [ebx-0x76]
  416d88:	cmp    BYTE PTR [eax],dl
  416d8a:	(bad)  
  416d8b:	das    
  416d8c:	pusha  
  416d8d:	imul   ecx,DWORD PTR [edi],0xb25dfe3d
  416d93:	sbb    BYTE PTR [edi],ah
  416d95:	scas   al,BYTE PTR es:[edi]
  416d96:	sbb    BYTE PTR [edi],bl
  416d98:	adc    esi,0x48
  416d9b:	xor    al,0xb8
  416d9d:	test   al,0xf7
  416d9f:	ins    DWORD PTR es:[edi],dx
  416da0:	test   BYTE PTR [ebx+0x1eed2a11],ah
  416da6:	(bad)  
  416da7:	xlat   BYTE PTR ds:[ebx]
  416da8:	fnstcw WORD PTR [ecx+ebp*8-0x79]
  416dac:	and    al,0x50
  416dae:	jmp    0x416e17
  416db0:	jns    0x416e22
  416db2:	jmp    0x3db0:0x9825bfb7
  416db9:	out    0xdc,eax
  416dbb:	sbb    ah,BYTE PTR [edx+0x12]
  416dbe:	jmp    DWORD PTR [ebx-0x12]
  416dc1:	and    al,0xf2
  416dc3:	into   
  416dc4:	push   cs
  416dc5:	popa   
  416dc6:	scas   al,BYTE PTR es:[edi]
  416dc7:	ins    DWORD PTR es:[edi],dx
  416dc8:	sbb    BYTE PTR [eax-0x30],0xe8
  416dcc:	pop    edx
  416dcd:	jne    0x416d4f
  416dcf:	sub    al,0x4c
  416dd1:	cdq    
  416dd2:	mov    ebp,0xfeb3dcac
  416dd7:	adc    al,dh
  416dd9:	xor    ebx,ebx
  416ddb:	in     eax,dx
  416ddc:	sbb    eax,0x966f453a
  416de1:	mov    bh,0xf0
  416de3:	mov    ebx,0x6f0dd5ac
  416de8:	cmp    DWORD PTR [eax],ebx
  416dea:	lds    eax,FWORD PTR [esi]
  416dec:	jnp    0x416df2
  416dee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416def:	push   eax
  416df0:	test   WORD PTR [ebp-0x45866f59],cx
  416df7:	popa   
  416df8:	mov    al,ds:0xbf34a6e2
  416dfd:	mov    esi,0xed9ccf88
  416e02:	push   ds
  416e03:	cmp    eax,0x6d859da2
  416e08:	and    DWORD PTR [eax-0x16],ecx
  416e0b:	jge    0x416e1f
  416e0d:	imul   ecx,esp,0x2d
  416e10:	daa    
  416e11:	xor    al,0xb0
  416e13:	sub    al,0x64
  416e15:	and    eax,0xe869f46a
  416e1a:	test   BYTE PTR [edi+eiz*2+0x6194cd2e],dl
  416e21:	(bad)  
  416e22:	retf   0x9a14
  416e25:	push   ecx
  416e26:	int3   
  416e27:	jg     0x416dde
  416e29:	adc    eax,0x7b05223b
  416e2e:	dec    eax
  416e2f:	fdiv   st,st(7)
  416e31:	jl     0x416dd7
  416e33:	pop    esi
  416e34:	ins    BYTE PTR es:[edi],dx
  416e35:	add    al,0x99
  416e37:	or     al,0xf8
  416e39:	hlt    
  416e3a:	push   es
  416e3b:	jns    0x416dc8
  416e3d:	repz push ss
  416e3f:	fcmovbe st,st(1)
  416e41:	call   0x25db:0x2a64e1d4
  416e48:	or     bh,BYTE PTR [ecx-0x244d6d4b]
  416e4e:	mov    al,bl
  416e50:	(bad)  
  416e51:	mov    bh,0xdd
  416e53:	arpl   WORD PTR [ecx],cx
  416e55:	adc    ecx,DWORD PTR [ecx+0x3a]
  416e58:	lea    ebx,[eax+0x65307b28]
  416e5e:	loop   0x416e4c
  416e60:	pop    ecx
  416e61:	lods   al,BYTE PTR ds:[esi]
  416e62:	loope  0x416e43
  416e64:	popa   
  416e65:	cld    
  416e66:	in     eax,dx
  416e67:	sub    eax,0xc4b1e5e1
  416e6c:	dec    esp
  416e6d:	pop    ds
  416e6e:	xchg   ecx,eax
  416e6f:	jge    0x416eaf
  416e71:	outs   dx,DWORD PTR ds:[esi]
  416e72:	je     0x416ed6
  416e74:	adc    BYTE PTR [edi-0x4bbf63eb],al
  416e7a:	ffreep st(4)
  416e7c:	out    dx,al
  416e7d:	mov    esi,0x6a42d78c
  416e82:	push   ebp
  416e83:	test   al,0xdd
  416e85:	call   0xf76f:0x25f4702d
  416e8c:	pop    esp
  416e8d:	sub    dh,BYTE PTR [ecx]
  416e8f:	and    dh,bh
  416e91:	mov    bl,0x63
  416e93:	mov    esp,0x2c3480ff
  416e98:	(bad)  
  416e99:	and    esi,DWORD PTR [edi-0x46dac8d]
  416e9f:	in     eax,dx
  416ea0:	push   es
  416ea1:	cs out 0xdc,al
  416ea4:	xchg   edx,eax
  416ea5:	jbe    0x416f20
  416ea7:	sub    ebp,edx
  416ea9:	and    BYTE PTR [edx*4-0x4f4e2ec2],ah
  416eb0:	stos   DWORD PTR es:[edi],eax
  416eb1:	imul   eax,DWORD PTR [ebx-0x70d50c32],0xea23282b
  416ebb:	xor    al,0x3
  416ebd:	fwait
  416ebe:	mov    ebx,0x2c46d57c
  416ec3:	imul   esp,ebx,0x46063551
  416ec9:	ficomp WORD PTR [ecx+0x20]
  416ecc:	mov    dl,0x68
  416ece:	lock and al,0xca
  416ed1:	jge    0x416e95
  416ed3:	xlat   BYTE PTR ds:[ebx]
  416ed4:	jl     0x416f18
  416ed6:	mov    ss,ebx
  416ed8:	adc    BYTE PTR [edx+0x77],al
  416edb:	mov    ebx,0x57979df2
  416ee0:	push   ds
  416ee1:	popf   
  416ee2:	dec    edi
  416ee3:	stos   BYTE PTR es:[edi],al
  416ee4:	jecxz  0x416f4f
  416ee6:	(bad)  
  416ee7:	inc    ebx
  416ee8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ee9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416eea:	inc    eax
  416eeb:	ja     0x416f33
  416eed:	push   ecx
  416eee:	imul   ecx,DWORD PTR [ebx-0x42516e7b],0xffffffc2
  416ef5:	pop    es
  416ef6:	lds    eax,FWORD PTR [esi+0x65f85378]
  416efc:	or     DWORD PTR [eax+0x37],esp
  416eff:	fdiv   QWORD PTR [ebx]
  416f01:	shr    BYTE PTR [ebx],1
  416f03:	retf   0xce2b
  416f06:	jmp    0x41928f
  416f0b:	adc    ah,BYTE PTR [edx+0xe708f7]
  416f11:	test   BYTE PTR [eax+0x9a72d6],bl
  416f17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f18:	xor    ebx,DWORD PTR [eax]
  416f1a:	sub    DWORD PTR [ebx+0x17838240],edx
  416f20:	pop    esp
  416f21:	add    DWORD PTR [ebx+0x11bce857],0x3e
  416f28:	mov    ch,0x43
  416f2a:	adc    al,0xc1
  416f2c:	pop    ecx
  416f2d:	cmp    eax,0xb5a5d361
  416f32:	pop    edx
  416f33:	mul    DWORD PTR [ecx-0x54]
  416f36:	push   cs
  416f37:	push   ebp
  416f38:	jmp    0x9b95ea28
  416f3d:	inc    ebx
  416f3e:	lds    esp,FWORD PTR [edi]
  416f40:	popf   
  416f41:	(bad)  
  416f42:	sub    BYTE PTR [ecx],ch
  416f44:	mov    eax,ds:0xae0b764a
  416f49:	inc    edx
  416f4a:	jle    0x416f09
  416f4c:	int3   
  416f4d:	cmp    DWORD PTR [edi],ecx
  416f4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f50:	xchg   esi,eax
  416f51:	scas   al,BYTE PTR es:[edi]
  416f52:	scas   eax,DWORD PTR es:[edi]
  416f53:	retf   0xeb87
  416f56:	push   cs
  416f57:	xchg   edi,eax
  416f58:	jbe    0x416fab
  416f5a:	pop    es
  416f5b:	fwait
  416f5c:	jmp    0x859a56cf
  416f61:	or     bl,BYTE PTR [ebp-0x7b0bd3ff]
  416f67:	lds    edi,FWORD PTR [edi+0x60]
  416f6a:	xchg   esp,eax
  416f6b:	push   cs
  416f6c:	das    
  416f6d:	test   eax,0xc01663e9
  416f72:	sub    BYTE PTR [esi-0x62],ch
  416f75:	cmp    al,bh
  416f77:	cli    
  416f78:	or     BYTE PTR [ebx-0x6a],bh
  416f7b:	inc    edi
  416f7c:	dec    ebp
  416f7d:	loop   0x416f6a
  416f7f:	imul   eax,DWORD PTR [ebx+esi*2-0x2d08a8c3],0xffffffb8
  416f87:	sub    bh,dl
  416f89:	xchg   ebp,eax
  416f8a:	scas   al,BYTE PTR es:[edi]
  416f8b:	push   edi
  416f8c:	lods   eax,DWORD PTR ds:[esi]
  416f8d:	mov    eax,ds:0x24a7c48
  416f92:	xor    bl,BYTE PTR [ebx-0x700437a4]
  416f98:	push   esp
  416f99:	ins    DWORD PTR es:[edi],dx
  416f9a:	xchg   BYTE PTR [ebx],ch
  416f9c:	push   ebp
  416f9d:	lods   eax,DWORD PTR ds:[esi]
  416f9e:	mov    ah,0x8f
  416fa0:	add    edx,0xffffff9b
  416fa3:	aaa    
  416fa4:	mov    ds:0x84f2c79e,eax
  416fa9:	clc    
  416faa:	ror    ah,0x2
  416fad:	push   ss
  416fae:	mov    bh,0x7a
  416fb0:	test   al,0xc7
  416fb2:	mov    BYTE PTR [edi],al
  416fb4:	in     al,dx
  416fb5:	sbb    ecx,edi
  416fb7:	xor    ch,dh
  416fb9:	jne    0x416fdc
  416fbb:	dec    ebx
  416fbc:	xor    al,0x63
  416fbe:	sub    eax,0x746c3b1d
  416fc3:	xchg   edi,eax
  416fc4:	(bad)  
  416fc5:	inc    edi
  416fc6:	adc    al,0x1b
  416fc8:	add    dl,BYTE PTR [esi-0x5b]
  416fcb:	mov    ch,0xe7
  416fcd:	xchg   DWORD PTR [ecx],ecx
  416fcf:	add    ecx,DWORD PTR ds:0x551b344d
  416fd5:	(bad)  
  416fd6:	fcomip st,st(4)
  416fd8:	adc    dl,bh
  416fda:	out    0x45,al
  416fdc:	test   al,0xc2
  416fde:	(bad)  
  416fdf:	(bad)  
  416fe0:	xor    ah,0x16
  416fe3:	pop    ebp
  416fe4:	inc    eax
  416fe5:	mov    eax,0x1a85c71f
  416fea:	imul   esi,ebp,0xb0b19ccf
  416ff0:	pop    ds
  416ff1:	dec    ecx
  416ff2:	cmc    
  416ff3:	clc    
  416ff4:	sub    eax,0x97a58669
  416ff9:	jg     0x416fa6
  416ffb:	and    al,0x65
  416ffd:	gs test dh,cl
  417000:	cmp    edx,esi
  417002:	xchg   esp,eax
  417003:	int    0xcb
  417005:	sti    
  417006:	adc    eax,0x3b5dc994
  41700b:	mov    dl,0x66
  41700d:	pop    esi
  41700e:	sbb    ah,BYTE PTR [eax-0x7d]
  417011:	shl    edi,cl
  417013:	gs addr16 cdq 
  417016:	fld    TBYTE PTR cs:[eax-0x1a785058]
  41701d:	outs   dx,DWORD PTR ds:[esi]
  41701e:	add    eax,DWORD PTR [edi]
  417020:	mov    ebx,0x18d7f815
  417025:	lds    ebx,FWORD PTR [edx*4-0x3ee1fbaa]
  41702c:	mov    bh,0x2a
  41702e:	popa   
  41702f:	jbe    0x41701f
  417031:	xor    ecx,DWORD PTR [ecx+0x5]
  417034:	imul   esi,ebx,0x46
  417037:	push   ebp
  417038:	int3   
  417039:	mov    eax,0x3cb77848
  41703e:	mov    bl,0x3e
  417040:	jg     0x41700a
  417042:	cs ins BYTE PTR es:[edi],dx
  417044:	clc    
  417045:	xor    dh,BYTE PTR [esi-0x49ff199b]
  41704b:	mov    ebp,0x871ce00a
  417050:	hlt    
  417051:	ins    DWORD PTR es:[edi],dx
  417052:	or     al,0xe4
  417054:	outs   dx,DWORD PTR ds:[esi]
  417055:	(bad)  
  417056:	cwde   
  417057:	mov    esp,0x741f91e8
  41705c:	fsub   QWORD PTR [edx+0x4cfca8b]
  417062:	adc    DWORD PTR [ebx-0x5f],ebp
  417065:	push   ds
  417066:	and    BYTE PTR [esp+esi*1+0x4237b0be],ch
  41706d:	xor    DWORD PTR [ebp+0x704520ca],0x4f
  417074:	daa    
  417075:	and    eax,0xcc4ade7a
  41707a:	repz data16 sbb al,0x76
  41707e:	and    DWORD PTR [eax-0x5e],edi
  417081:	or     esp,DWORD PTR [edi+0x5c]
  417084:	add    dh,BYTE PTR [edi-0x4b]
  417087:	ja     0x4170e4
  417089:	or     ch,ch
  41708b:	iret   
  41708c:	es (bad) 
  41708e:	pop    esi
  41708f:	adc    DWORD PTR [edi],ecx
  417091:	jmp    FWORD PTR [ecx-0x5f2b929f]
  417097:	sar    DWORD PTR [ecx],0xac
  41709a:	nop
  41709b:	cs mov eax,0x2597b6c8
  4170a1:	sub    eax,0xd2631b4e
  4170a6:	loopne 0x4170e3
  4170a8:	mov    al,0x3f
  4170aa:	loope  0x41707d
  4170ac:	push   0xffffffb5
  4170ae:	sahf   
  4170af:	loope  0x4170be
  4170b1:	push   cs
  4170b2:	and    eax,0x2cbc18c4
  4170b7:	push   0x17b00577
  4170bc:	dec    eax
  4170bd:	inc    edi
  4170be:	lods   al,BYTE PTR ds:[esi]
  4170bf:	mov    al,0x3
  4170c1:	cmp    dh,dh
  4170c3:	lock pop edx
  4170c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170c6:	jmp    0x51b4be90
  4170cb:	lahf   
  4170cc:	cmp    al,0xdf
  4170ce:	gs xchg edi,eax
  4170d0:	outs   dx,DWORD PTR ds:[esi]
  4170d1:	sbb    eax,0x687a39be
  4170d6:	(bad)  
  4170d8:	mov    ecx,0xdd7617ca
  4170dd:	add    eax,0xc368172
  4170e2:	add    eax,0xf75b4d74
  4170e7:	lods   eax,DWORD PTR ds:[esi]
  4170e8:	ja     0x417152
  4170ea:	cld    
  4170eb:	addr16 xchg esp,eax
  4170ed:	inc    ebx
  4170ee:	fsub   QWORD PTR [ecx]
  4170f0:	cwde   
  4170f1:	ret    
  4170f2:	div    ecx
  4170f4:	data16 add dh,cl
  4170f7:	cmp    dh,ah
  4170f9:	adc    BYTE PTR [ebx-0x2736d067],bl
  4170ff:	jl     0x41714c
  417101:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417102:	ret    0xdc17
  417105:	jmp    0xf116:0xc77d8fb4
  41710c:	mov    ds:0xa16778e8,eax
  417111:	jg     0x41713d
  417113:	mov    DWORD PTR [edi],edi
  417115:	sbb    DWORD PTR [eax+0x4f],edi
  417118:	xor    eax,DWORD PTR [esi-0x79]
  41711b:	pushf  
  41711c:	test   al,0xfa
  41711e:	lahf   
  41711f:	cdq    
  417120:	jns    0x417186
  417122:	fild   QWORD PTR [esi]
  417124:	inc    ebp
  417125:	mov    al,0x97
  417127:	aaa    
  417128:	jns    0x41716b
  41712a:	cmp    bl,BYTE PTR [edi-0x42]
  41712d:	hlt    
  41712e:	addr16 mov bl,0xe2
  417131:	push   0x28
  417133:	dec    ebp
  417134:	in     al,dx
  417135:	cli    
  417136:	xor    eax,0xe8bfdcac
  41713b:	aad    0xb7
  41713d:	dec    edx
  41713e:	jns    0x417141
  417140:	mov    dl,0x22
  417142:	into   
  417143:	pushf  
  417144:	pop    eax
  417145:	lahf   
  417146:	mov    esi,0xcfb0469
  41714b:	xchg   DWORD PTR [ecx+0x7e],edx
  41714e:	inc    ebx
  41714f:	jmp    0x827d2524
  417154:	fldpi  
  417156:	dec    edx
  417157:	sub    al,0xd7
  417159:	mov    dh,0x2f
  41715b:	cmp    bh,al
  41715d:	leave  
  41715e:	loop   0x4171d0
  417160:	imul   DWORD PTR [eiz*4+0x33793e5d]
  417167:	lods   eax,DWORD PTR cs:[esi]
  417169:	in     al,dx
  41716a:	xor    esi,edx
  41716c:	adc    ebx,edi
  41716e:	bound  eax,QWORD PTR [ebx-0x33]
  417171:	ins    BYTE PTR es:[edi],dx
  417172:	xor    eax,0xccb46b86
  417177:	(bad)  
  417178:	mov    dh,0xc9
  41717a:	sar    DWORD PTR [edi+ebx*1],0xc0
  41717e:	or     BYTE PTR [edi],bl
  417180:	pop    edi
  417181:	mov    ch,BYTE PTR [edi]
  417183:	lea    esi,[esi]
  417185:	xor    al,0x51
  417187:	pop    esp
  417188:	inc    edx
  417189:	dec    DWORD PTR [esi]
  41718b:	outs   dx,BYTE PTR ds:[esi]
  41718c:	dec    ecx
  41718d:	dec    edi
  41718e:	pop    ecx
  41718f:	iret   
  417190:	mov    ebx,0x15430043
  417195:	pushf  
  417196:	aaa    
  417197:	test   BYTE PTR [ebx-0x7880d9f0],cl
  41719d:	mov    DWORD PTR [eax+eax*8+0x67],edx
  4171a1:	dec    edi
  4171a2:	ficomp DWORD PTR [ecx-0x5b]
  4171a5:	jnp    0x41719a
  4171a7:	nop
  4171a8:	mov    ch,0x76
  4171aa:	mov    esp,0x2b825314
  4171af:	clc    
  4171b0:	dec    esi
  4171b1:	addr16 xchg ecx,eax
  4171b3:	(bad)  
  4171b4:	cmc    
  4171b5:	call   0x757c658b
  4171ba:	xchg   ebx,eax
  4171bb:	inc    eax
  4171bc:	push   es
  4171bd:	cmp    DWORD PTR [esi+0x47],ecx
  4171c0:	push   ds
  4171c1:	inc    eax
  4171c2:	setl   BYTE PTR [ebx+0x7681bd2f]
  4171c9:	lahf   
  4171ca:	inc    edx
  4171cb:	repz xlat BYTE PTR ds:[ebx]
  4171cd:	jbe    0x41721f
  4171cf:	(bad)  
  4171d1:	mov    bh,bh
  4171d3:	pop    esi
  4171d4:	jns    0x417207
  4171d6:	sahf   
  4171d7:	faddp  st(0),st
  4171d9:	or     ah,BYTE PTR [eax+eiz*2-0x22]
  4171dd:	out    0x6e,al
  4171df:	adc    ebp,ecx
  4171e1:	pop    ecx
  4171e2:	mov    al,0x9
  4171e4:	pop    esi
  4171e5:	fisttp DWORD PTR [eax]
  4171e7:	(bad)  
  4171e8:	adc    DWORD PTR [eax-0x60],edi
  4171eb:	adc    eax,0x504912df
  4171f0:	sbb    edi,DWORD PTR [eax-0x5c]
  4171f3:	jmp    0x4171e3
  4171f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171f6:	push   0xffffffc9
  4171f8:	fcom   st(7)
  4171fa:	pop    esi
  4171fb:	inc    edi
  4171fc:	fmul   st,st(3)
  4171fe:	int3   
  4171ff:	ins    DWORD PTR es:[edi],dx
  417200:	dec    esi
  417201:	adc    dl,BYTE PTR [edi-0x2680d541]
  417207:	test   bh,dh
  417209:	push   ss
  41720a:	test   DWORD PTR [edi+0x1ed85b1],edx
  417210:	test   al,0xc2
  417212:	xor    al,0xd8
  417214:	dec    edi
  417215:	cli    
  417216:	jbe    0x4171b3
  417218:	aas    
  417219:	ficom  DWORD PTR [ecx-0x779830d8]
  41721f:	imul   esp,DWORD PTR [ebp+0x3a],0x3301c4c9
  417226:	or     DWORD PTR [bx+0x69d7],edi
  41722b:	mov    edx,0x5196f602
  417230:	pop    esp
  417231:	stos   DWORD PTR es:[edi],eax
  417232:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417233:	mov    dl,0x94
  417235:	adc    eax,0xfaaabe2f
  41723a:	inc    esi
  41723b:	jg     0x4171d6
  41723d:	mov    dl,0xa7
  41723f:	mov    al,0xa8
  417241:	ins    BYTE PTR es:[edi],dx
  417242:	ins    BYTE PTR es:[edi],dx
  417243:	aad    0xa2
  417245:	sbb    cl,0xa2
  417248:	fldcw  WORD PTR [ebp-0x80]
  41724b:	jmp    0x804c:0x474793fe
  417252:	pop    esp
  417253:	repnz push 0x71a22043
  417259:	add    ebx,esp
  41725b:	(bad)  
  41725c:	fisub  WORD PTR [ebx+0x77]
  41725f:	cli    
  417260:	hlt    
  417261:	xor    DWORD PTR [edx],esi
  417263:	mov    WORD PTR [esi-0x743831ca],gs
  417269:	stos   DWORD PTR es:[edi],eax
  41726a:	adc    dl,BYTE PTR [edx+0x32]
  41726d:	icebp  
  41726e:	dec    eax
  41726f:	mov    ds:0x97402515,eax
  417274:	inc    edx
  417275:	xor    eax,0x57683ea7
  41727a:	stc    
  41727b:	(bad)  
  41727c:	fldln2 
  41727e:	adc    BYTE PTR [ebx+0x32],cl
  417281:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417282:	dec    edi
  417283:	adc    ecx,DWORD PTR [ebx+edi*1-0x311572ac]
  41728a:	and    al,0x4d
  41728c:	xlat   BYTE PTR ds:[ebx]
  41728d:	mul    BYTE PTR [ebx-0x4b]
  417290:	add    DWORD PTR ds:0xe2f1fcae,edi
  417296:	mov    ebx,0x882073ed
  41729b:	fs pop ecx
  41729d:	test   eax,0x10f5f824
  4172a2:	stos   DWORD PTR es:[edi],eax
  4172a3:	add    ch,al
  4172a5:	mov    al,0xb6
  4172a7:	push   ecx
  4172a8:	push   ds
  4172a9:	cmp    al,0xc9
  4172ab:	pop    ds
  4172ac:	pop    ebx
  4172ad:	loop   0x417262
  4172af:	pop    eax
  4172b0:	xor    dh,0xf7
  4172b3:	mov    ?,ecx
  4172b5:	packssdw mm2,mm0
  4172b8:	hlt    
  4172b9:	scas   eax,DWORD PTR es:[edi]
  4172ba:	aam    0xaf
  4172bc:	push   es
  4172bd:	xchg   DWORD PTR [esi+eiz*8],ecx
  4172c0:	sbb    esp,DWORD PTR [ecx]
  4172c2:	xlat   BYTE PTR ds:[ebx]
  4172c3:	adc    ah,0xc4
  4172c6:	icebp  
  4172c7:	std    
  4172c8:	inc    ecx
  4172c9:	dec    edx
  4172ca:	cli    
  4172cb:	call   0x61e0a1a
  4172d0:	xor    eax,edx
  4172d2:	test   esp,0xb04db25f
  4172d8:	jl     0x41729b
  4172da:	sti    
  4172db:	int3   
  4172dc:	dec    eax
  4172dd:	adc    BYTE PTR [edi],cl
  4172df:	fs stc 
  4172e1:	js     0x4172f2
  4172e3:	dec    eax
  4172e4:	mov    bl,0x39
  4172e6:	mov    es,ebp
  4172e8:	enter  0xfbcf,0x5
  4172ec:	jmp    0x4172aa
  4172ee:	adc    ah,BYTE PTR [ecx+0x2680800e]
  4172f4:	xchg   ecx,eax
  4172f5:	and    BYTE PTR [ecx],dl
  4172f7:	loope  0x417309
  4172f9:	cs xchg ebp,eax
  4172fb:	mov    edi,0xb2b7c8f3
  417300:	add    BYTE PTR [esi+esi*4],al
  417303:	(bad)  
  417304:	pop    esi
  417305:	hlt    
  417306:	stos   BYTE PTR es:[edi],al
  417307:	pop    ebx
  417308:	in     eax,0xa
  41730a:	js     0x4172eb
  41730c:	not    DWORD PTR [ebp+0x1c]
  41730f:	lods   eax,DWORD PTR ds:[esi]
  417310:	cmp    bh,cl
  417312:	dec    edi
  417313:	hlt    
  417314:	pop    edi
  417315:	inc    eax
  417316:	mov    dh,0xea
  417318:	mov    dh,0x97
  41731a:	pop    ss
  41731b:	jl     0x417370
  41731d:	mov    edi,0x665a9e8
  417322:	or     ah,BYTE PTR [eax-0x42347fdf]
  417328:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417329:	iret   
  41732a:	outs   dx,BYTE PTR ds:[esi]
  41732b:	loop   0x4172db
  41732d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41732e:	push   edi
  41732f:	cmp    BYTE PTR [edi-0x4],0x44
  417333:	cmp    eax,ebx
  417335:	pushf  
  417336:	rcl    BYTE PTR [ecx-0x6f],1
  417339:	mov    DWORD PTR [edx+ebx*1-0x6ba76314],ecx
  417340:	xor    eax,0x108bdf57
  417345:	push   0x1
  417347:	in     al,0x3c
  417349:	jl     0x417344
  41734b:	pusha  
  41734c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41734d:	in     eax,0x9
  41734f:	ret    0x98f4
  417352:	mov    cl,0x89
  417354:	(bad)  
  417355:	sbb    eax,0x277adbec
  41735a:	repnz iret 
  41735c:	inc    ebp
  41735d:	aaa    
  41735e:	sbb    di,WORD PTR [ebx-0x24]
  417362:	xchg   ebp,eax
  417363:	arpl   WORD PTR ds:0xebfe9d03,ax
  417369:	mov    eax,0x860468c7
  41736e:	mov    edi,0x9e8c259e
  417373:	sbb    DWORD PTR [ebx+0x1c],edx
  417376:	jno    0x4173c6
  417378:	out    dx,al
  417379:	pop    eax
  41737a:	js     0x4173f8
  41737c:	xor    bh,BYTE PTR [edi-0xff8c056]
  417382:	jb     0x41737c
  417384:	pop    ss
  417385:	push   ds
  417386:	out    dx,al
  417387:	scas   al,BYTE PTR es:[edi]
  417388:	add    DWORD PTR [ebx-0x86d117d],edi
  41738e:	push   cs
  41738f:	jnp    0x4173c8
  417391:	(bad)  
  417392:	jecxz  0x417344
  417394:	adc    BYTE PTR [eax-0x25],cl
  417397:	fbld   TBYTE PTR [ebx+0x13d7962b]
  41739d:	and    edx,DWORD PTR [edx-0x7db3c411]
  4173a3:	sub    al,0x36
  4173a5:	add    eax,0x914b5aba
  4173aa:	pop    esi
  4173ab:	mov    ds:0xe38df090,al
  4173b0:	cwde   
  4173b1:	xchg   DWORD PTR [edi-0x5c],esp
  4173b4:	cmc    
  4173b5:	inc    ecx
  4173b6:	inc    ecx
  4173b7:	aad    0x98
  4173b9:	cwde   
  4173ba:	or     al,0x20
  4173bc:	adc    DWORD PTR [esi+0x58],esp
  4173bf:	(bad)  
  4173c1:	pop    es
  4173c2:	sti    
  4173c3:	shl    BYTE PTR [edx],0x4c
  4173c6:	fwait
  4173c7:	push   ss
  4173c8:	sti    
  4173c9:	sbb    ebp,ecx
  4173cb:	in     eax,0xeb
  4173cd:	ds dec esi
  4173cf:	(bad)  
  4173d0:	test   al,0x30
  4173d2:	inc    ebp
  4173d3:	cld    
  4173d4:	sbb    al,bl
  4173d6:	mov    esp,0x40563f21
  4173db:	xor    al,0xc6
  4173dd:	mov    dh,0x11
  4173df:	sub    DWORD PTR [ebx],edx
  4173e1:	loop   0x4173b9
  4173e3:	pop    edi
  4173e4:	xchg   esp,eax
  4173e5:	or     BYTE PTR [ebx],cl
  4173e7:	imul   esp,edi,0x6e749d
  4173ed:	and    dl,al
  4173ef:	enter  0x80e4,0x2f
  4173f3:	or     al,0x9
  4173f5:	jmp    0x5eab:0x21a5796f
  4173fc:	mov    ebp,0xb18a1acd
  417401:	adc    esp,DWORD PTR ds:0x54a5ec58
  417407:	push   0x66ddb6f5
  41740c:	xchg   edx,eax
  41740d:	imul   esi,DWORD PTR [esi],0x40
  417410:	mov    cl,0xbf
  417412:	mov    eax,ds:0x6a421830
  417417:	fcomp  QWORD PTR [eax+0x59175fb8]
  41741d:	or     BYTE PTR [eax+ebx*2-0x67],bl
  417421:	outs   dx,BYTE PTR ds:[esi]
  417422:	and    DWORD PTR ds:0x732e152e,edi
  417428:	pop    esi
  417429:	sbb    BYTE PTR [ecx],0xdf
  41742c:	jb     0x417473
  41742e:	hlt    
  41742f:	add    eax,0x56b5831
  417434:	mov    ds:0x9d79bdf9,al
  417439:	pop    ss
  41743a:	xchg   edx,eax
  41743b:	push   ecx
  41743c:	jecxz  0x41748c
  41743e:	les    eax,FWORD PTR [ebp-0x524dd1ec]
  417444:	es repnz dec edx
  417447:	dec    eax
  417448:	inc    esi
  417449:	ins    DWORD PTR es:[edi],dx
  41744a:	pop    ds
  41744b:	and    eax,0xd3cd6671
  417450:	dec    DWORD PTR [ecx]
  417452:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417453:	mov    bh,0x9
  417455:	sbb    esp,eax
  417457:	dec    ebp
  417458:	jecxz  0x417417
  41745a:	and    ch,dh
  41745c:	lods   al,BYTE PTR ds:[esi]
  41745d:	mov    ebx,0xa34b458b
  417462:	hlt    
  417463:	push   ds
  417464:	xchg   esp,eax
  417465:	call   0x62c4b45c
  41746a:	mov    ch,0xce
  41746c:	outs   dx,BYTE PTR ds:[esi]
  41746d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41746e:	ret    
  41746f:	mov    dh,0x25
  417471:	retf   
  417472:	sbb    DWORD PTR [eax],esi
  417474:	(bad)  [esi]
  417476:	xor    al,0x12
  417478:	call   0x90bf128b
  41747d:	out    0xf0,al
  41747f:	or     ch,BYTE PTR [ebp+0x5a52c69d]
  417485:	repnz push cs
  417487:	nop
  417488:	mul    al
  41748a:	xchg   esi,eax
  41748b:	dec    ebx
  41748c:	mov    ebx,0x338273e1
  417491:	push   edi
  417492:	jle    0x4174c9
  417494:	add    esi,0xffffff89
  417497:	test   BYTE PTR [eax],cl
  417499:	xchg   ebx,eax
  41749a:	stos   DWORD PTR es:[edi],eax
  41749b:	push   0x89b8a67f
  4174a0:	addr16 xchg edi,eax
  4174a2:	rol    al,0xa5
  4174a5:	call   0xcd6:0x2dbd13a
  4174ac:	retf   0x87fa
  4174af:	push   eax
  4174b0:	mov    ecx,0xe4c9b278
  4174b5:	add    BYTE PTR ds:0xf80f1e7b,bl
  4174bb:	xchg   ebx,eax
  4174bc:	pop    es
  4174bd:	xor    al,0xac
  4174bf:	mov    ds:0x909d580d,eax
  4174c4:	dec    edx
  4174c5:	jg     0x4174ae
  4174c7:	das    
  4174c8:	jnp    0x417468
  4174ca:	lods   al,BYTE PTR cs:[esi]
  4174cc:	shr    BYTE PTR [edx-0x5b],1
  4174cf:	gs add al,0xcb
  4174d2:	mov    DWORD PTR [eax+0x10],edi
  4174d5:	cld    
  4174d6:	sub    eax,DWORD PTR ds:0xd7323efe
  4174dc:	in     al,0x69
  4174de:	clc    
  4174df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174e0:	add    DWORD PTR [ecx-0x59],0x71
  4174e4:	enter  0xfd50,0xb6
  4174e8:	ret    
  4174e9:	ror    BYTE PTR [edx+0x43],0x22
  4174ed:	sub    eax,0xf228433f
  4174f2:	retf   0xccba
  4174f5:	lock test eax,0x2194c366
  4174fb:	sar    ebp,cl
  4174fd:	push   edi
  4174fe:	into   
  4174ff:	pop    esi
  417500:	cmp    dl,dl
  417502:	mov    esp,0x2be067b4
  417507:	stos   DWORD PTR es:[edi],eax
  417508:	pop    es
  417509:	adc    eax,0x847e3ba1
  41750e:	pop    edi
  41750f:	sub    DWORD PTR [edi-0x20ba7c93],edi
  417515:	sub    DWORD PTR [ecx],esp
  417517:	rcl    DWORD PTR ds:0x6dd5477d,cl
  41751d:	sbb    al,0x5
  41751f:	(bad)  
  417520:	jmp    0x41752d
  417522:	adc    eax,0xe1981feb
  417527:	ret    0x1a68
  41752a:	sar    DWORD PTR [eax+eax*8],cl
  41752d:	mov    BYTE PTR [ebx+esi*4],dl
  417530:	xchg   esp,eax
  417531:	xlat   BYTE PTR ds:[ebx]
  417532:	aad    0xd
  417534:	push   esp
  417535:	xchg   ebx,eax
  417536:	push   edx
  417537:	inc    esi
  417538:	out    dx,al
  417539:	add    BYTE PTR [eax+0x13],cl
  41753c:	and    eax,0x1d1ef6a1
  417541:	mov    ebp,0x7b9b6b36
  417546:	add    BYTE PTR [edx+0x4e08600],dh
  41754c:	or     DWORD PTR [ebp+edx*8+0x7f03f14e],0xc3f8672
  417557:	and    al,0xe
  417559:	dec    edx
  41755a:	cld    
  41755b:	mov    dh,0xcf
  41755d:	or     al,0xce
  41755f:	test   BYTE PTR [edx-0x287763ec],ch
  417565:	(bad)  
  417566:	sbb    dh,BYTE PTR [esi-0x1f21d75]
  41756c:	cld    
  41756d:	lods   al,BYTE PTR ds:[esi]
  41756e:	clc    
  41756f:	pop    ebp
  417570:	js     0x4175c1
  417572:	cmp    DWORD PTR [eax-0x2d],esi
  417575:	xchg   al,cl
  417577:	rcr    ebx,cl
  417579:	mov    ds:0x842fd75e,eax
  41757e:	cmc    
  41757f:	pushf  
  417580:	scas   al,BYTE PTR es:[edi]
  417581:	push   es
  417582:	pop    ebx
  417583:	lods   eax,DWORD PTR ds:[esi]
  417584:	loope  0x41757a
  417586:	mov    esp,0xe46b68e9
  41758b:	pop    ebp
  41758c:	fidiv  WORD PTR [edi+0x4a82c6d6]
  417592:	mov    dl,0x71
  417594:	add    al,bl
  417596:	es sbb eax,0xe2ecdfb5
  41759c:	pop    ds
  41759d:	inc    edx
  41759e:	mov    edi,0x103be94a
  4175a3:	(bad)  
  4175a4:	retf   
  4175a5:	pop    es
  4175a6:	push   ds
  4175a7:	int    0xa5
  4175a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175aa:	xlat   BYTE PTR ds:[ebx]
  4175ab:	sbb    eax,0x5b4e5c7a
  4175b0:	aaa    
  4175b1:	pushf  
  4175b2:	push   0xffffffdf
  4175b4:	inc    ecx
  4175b5:	push   0x5d
  4175b7:	pop    es
  4175b8:	pop    ss
  4175b9:	popa   
  4175ba:	cmc    
  4175bb:	int3   
  4175bc:	out    0xc9,eax
  4175be:	ret    0x7a95
  4175c1:	daa    
  4175c2:	enter  0xc75,0x18
  4175c6:	jge    0x4175a6
  4175c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175c9:	outs   dx,BYTE PTR ds:[esi]
  4175ca:	pop    ds
  4175cb:	or     eax,0x68fde013
  4175d0:	mov    eax,ds:0x71ae3942
  4175d5:	cmp    ah,cl
  4175d7:	mov    al,0xb4
  4175d9:	mov    dh,0xe5
  4175db:	fs dec edx
  4175dd:	mov    BYTE PTR [edx+esi*4+0x3e3c9033],dh
  4175e4:	sub    ebx,DWORD PTR [edx+edx*1+0x468aeeca]
  4175eb:	mov    esi,0xabc6309f
  4175f0:	aad    0xdd
  4175f2:	fs or  al,0xf1
  4175f5:	leave  
  4175f6:	(bad)  
  4175f8:	mov    al,0xce
  4175fa:	mov    DWORD PTR [edx+ebp*4],edi
  4175fd:	frstpm(287 only) 
  4175ff:	lods   al,BYTE PTR ds:[esi]
  417600:	fwait
  417601:	hlt    
  417602:	leave  
  417603:	dec    eax
  417604:	ret    0xbb26
  417607:	mov    ah,0xcf
  417609:	setno  al
  41760c:	dec    ebp
  41760d:	adc    bh,BYTE PTR ss:[edx+0x4f2f7b10]
  417614:	nop
  417615:	sbb    al,BYTE PTR [ecx-0x70c8a421]
  41761b:	ins    DWORD PTR es:[edi],dx
  41761c:	and    bh,bl
  41761e:	dec    ebx
  41761f:	imul   esi,DWORD PTR [eiz*4-0x227bc9e1],0xffffffbb
  417627:	cmc    
  417628:	push   ebx
  417629:	lods   al,BYTE PTR ds:[esi]
  41762a:	sbb    eax,0xa76b86ce
  41762f:	pop    edi
  417630:	fs lock xchg edx,eax
  417633:	pop    eax
  417634:	mov    cl,0x7d
  417636:	push   ebp
  417637:	adc    al,0x81
  417639:	xchg   BYTE PTR [esi+0x57],ah
  41763c:	pop    ss
  41763d:	xchg   edx,eax
  41763e:	xor    BYTE PTR [ebp-0x76916032],al
  417644:	mov    al,0x73
  417646:	imul   eax,esp,0xffffffb5
  417649:	stos   DWORD PTR es:[edi],eax
  41764a:	(bad)  
  41764c:	sbb    eax,0x96202744
  417651:	sub    al,0xb9
  417653:	jg     0x41764b
  417655:	mov    esi,0xa0b61e0
  41765a:	fs test esi,edi
  41765d:	xchg   esi,eax
  41765e:	fst    QWORD PTR [ecx-0x505caa03]
  417664:	rcr    ecx,1
  417666:	adc    eax,DWORD PTR [eax+edx*4+0xf2ba85e]
  41766d:	mov    bl,cl
  41766f:	ins    DWORD PTR es:[edi],dx
  417670:	pushf  
  417671:	div    DWORD PTR [edi-0x72745e9e]
  417677:	je     0x4176a0
  417679:	mov    dh,0x95
  41767b:	shr    DWORD PTR [eax],1
  41767d:	xchg   ebx,eax
  41767e:	adc    al,BYTE PTR [edi-0x45]
  417681:	ins    DWORD PTR es:[edi],dx
  417682:	mov    WORD PTR ds:0xa1bd2c45,gs
  417688:	ds jae 0x4176c7
  41768b:	stc    
  41768c:	adc    ah,BYTE PTR [esi]
  41768e:	sbb    DWORD PTR [edi],esi
  417690:	dec    ebp
  417691:	inc    eax
  417692:	mov    al,ds:0x91aba52b
  417697:	xor    eax,DWORD PTR [ebp+ebp*2+0x25]
  41769b:	sbb    DWORD PTR [edi+0x43],esp
  41769e:	fwait
  41769f:	rcr    ah,1
  4176a1:	cmp    BYTE PTR [edx+0x15],0x71
  4176a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176a6:	mov    eax,edi
  4176a8:	icebp  
  4176a9:	scas   al,BYTE PTR es:[edi]
  4176aa:	fwait
  4176ab:	outs   dx,BYTE PTR ds:[esi]
  4176ac:	fs and ecx,esi
  4176af:	lock dec ecx
  4176b1:	leave  
  4176b2:	lahf   
  4176b3:	jg     0x417686
  4176b5:	scas   al,BYTE PTR es:[edi]
  4176b6:	mov    eax,0x308a6f35
  4176bb:	jge    0x41772a
  4176bd:	pop    edi
  4176be:	mov    ebp,0xd4b8c9ff
  4176c3:	adc    eax,0x559723c4
  4176c8:	pushf  
  4176c9:	pop    ds
  4176ca:	stos   BYTE PTR es:[edi],al
  4176cb:	sbb    al,0x6
  4176cd:	(bad)  
  4176ce:	cli    
  4176cf:	mov    bl,0x57
  4176d1:	scas   eax,DWORD PTR es:[edi]
  4176d2:	lds    ebp,FWORD PTR [ebp+0x3d8008c0]
  4176d8:	xchg   edx,eax
  4176d9:	enter  0xbec3,0x77
  4176dd:	push   0x66
  4176df:	pop    ss
  4176e0:	lods   al,BYTE PTR ds:[esi]
  4176e1:	sub    al,0x4
  4176e3:	sub    eax,DWORD PTR [edi]
  4176e5:	je     0x4176d9
  4176e7:	rcl    BYTE PTR [edx+0x11],0x8b
  4176eb:	xlat   BYTE PTR ds:[ebx]
  4176ec:	fcmovnbe st,st(2)
  4176ee:	jb     0x417702
  4176f0:	add    BYTE PTR [edx-0x79],ch
  4176f3:	es and al,0x1c
  4176f6:	ror    BYTE PTR [eax+0x1d42318a],cl
  4176fc:	inc    eax
  4176fd:	mov    dl,0xf0
  4176ff:	data16 (bad) 
  417701:	es mov dl,0x16
  417704:	bnd jae 0x4176c7
  417707:	mov    ds:0xe93da642,al
  41770c:	popf   
  41770d:	inc    esp
  41770e:	jo     0x41777d
  417710:	sbb    BYTE PTR [edx-0x5ae19da],al
  417716:	push   ecx
  417717:	inc    ebp
  417718:	icebp  
  417719:	mov    ch,0xa4
  41771b:	and    dh,bl
  41771d:	dec    edi
  41771e:	and    BYTE PTR [esi],ch
  417720:	std    
  417721:	iret   
  417722:	mov    cs,ebp
  417724:	adc    BYTE PTR [ecx-0x7a6763ff],0xb9
  41772b:	push   esi
  41772c:	jb     0x417751
  41772e:	stos   DWORD PTR es:[edi],eax
  41772f:	aad    0xd4
  417731:	jno    0x417714
  417733:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417734:	not    BYTE PTR [eax]
  417736:	enter  0xbb21,0x75
  41773a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41773b:	sbb    al,0x9c
  41773d:	dec    edi
  41773e:	cdq    
  41773f:	aaa    
  417740:	lods   al,BYTE PTR ds:[esi]
  417741:	out    0x5a,eax
  417743:	(bad)  
  417744:	pop    edx
  417745:	popa   
  417746:	adc    BYTE PTR [eax-0xbe24b92],bl
  41774c:	enter  0x998,0x33
  417750:	dec    ebx
  417751:	test   BYTE PTR [ecx-0x228e9b16],ah
  417757:	jmp    0x417785
  417759:	mov    bl,0x2f
  41775b:	xchg   edi,eax
  41775c:	cdq    
  41775d:	jmp    0x346f5f21
  417762:	out    dx,al
  417763:	jge    0x41772c
  417765:	dec    eax
  417766:	ret    
  417767:	fld    TBYTE PTR [esp+eax*1+0x49b491b3]
  41776e:	push   esi
  41776f:	or     bl,BYTE PTR [ebx]
  417771:	mov    ds:0x6c601925,al
  417776:	mov    ecx,0x9652c0cc
  41777b:	gs je  0x4177bb
  41777e:	add    esi,DWORD PTR [ebx-0x7a07caed]
  417784:	lods   al,BYTE PTR ds:[esi]
  417785:	mov    bh,0xc
  417787:	jae    0x4177b3
  417789:	inc    ebp
  41778a:	xor    ebp,edi
  41778c:	in     eax,0x2d
  41778e:	(bad)  
  41778f:	xor    BYTE PTR [ebp-0xc616447],bh
  417795:	ret    0x4301
  417798:	push   ecx
  417799:	ins    DWORD PTR es:[edi],dx
  41779a:	je     0x417763
  41779c:	out    0x5b,al
  41779e:	mul    eax
  4177a0:	clc    
  4177a1:	adc    al,0x5
  4177a3:	push   ds
  4177a4:	test   al,0x48
  4177a6:	je     0x417801
  4177a8:	cld    
  4177a9:	adc    al,0xee
  4177ab:	inc    edx
  4177ac:	inc    edi
  4177ad:	dec    ebp
  4177ae:	xchg   BYTE PTR [ebx+0x7b],al
  4177b1:	lock and DWORD PTR fs:[edi-0x37],ebp
  4177b6:	or     al,dh
  4177b8:	jno    0x417832
  4177ba:	popa   
  4177bb:	(bad)  
  4177bc:	sti    
  4177bd:	jbe    0x417835
  4177bf:	or     dh,BYTE PTR ds:0x9a723268
  4177c5:	cld    
  4177c6:	jne    0x4177a0
  4177c8:	jae    0x417832
  4177ca:	lods   al,BYTE PTR ds:[esi]
  4177cb:	mov    dl,0xcf
  4177cd:	inc    ebp
  4177ce:	sub    BYTE PTR [esi+0x47],bh
  4177d1:	ja     0x4177d3
  4177d3:	mov    ds:0x1c766882,al
  4177d8:	stos   BYTE PTR es:[edi],al
  4177d9:	push   es
  4177da:	adc    al,0xd
  4177dc:	stos   BYTE PTR es:[edi],al
  4177dd:	cs test dl,dl
  4177e0:	and    DWORD PTR [edi+eax*4],ecx
  4177e3:	int    0x91
  4177e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177e6:	ret    
  4177e7:	adc    DWORD PTR [ebx+0x69],0xc20f273f
  4177ee:	sahf   
  4177ef:	jge    0x417834
  4177f1:	xchg   ebp,eax
  4177f2:	test   eax,0x994072dc
  4177f7:	sub    eax,0x895c4fde
  4177fc:	cmp    ah,ch
  4177fe:	sub    BYTE PTR [esi-0x4fb8ecbc],0x5c
  417805:	pop    esi
  417806:	popa   
  417807:	xlat   BYTE PTR ds:[ebx]
  417808:	scas   al,BYTE PTR es:[edi]
  417809:	pop    es
  41780a:	hlt    
  41780b:	mov    ebp,0x7c489598
  417810:	pop    ebp
  417811:	inc    esi
  417812:	loope  0x4177ad
  417814:	jae    0x4177ec
  417816:	fs stc 
  417818:	and    DWORD PTR [ebp+0x7a4b9b92],esi
  41781e:	stos   BYTE PTR es:[edi],al
  41781f:	add    DWORD PTR [ebx],0x4c
  417822:	adc    BYTE PTR [ebx],ch
  417824:	jmp    0x6e846628
  417829:	or     DWORD PTR [esi],edi
  41782b:	lods   eax,DWORD PTR ds:[esi]
  41782c:	rol    DWORD PTR [edi-0x33857cac],0xdd
  417833:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417834:	aad    0x11
  417836:	sub    bl,BYTE PTR [edx]
  417838:	ja     0x4177d1
  41783a:	(bad)  
  41783b:	cli    
  41783c:	mov    eax,0xd8a25ce3
  417841:	push   ebx
  417842:	pop    edi
  417843:	mov    ss:0x40e64459,al
  417849:	(bad)  
  41784a:	cmp    edx,DWORD PTR [edx-0x64dcc061]
  417850:	cdq    
  417851:	sbb    BYTE PTR [esi-0x6c19e586],0xff
  417858:	sar    ecx,1
  41785a:	iret   
  41785b:	scas   eax,DWORD PTR es:[edi]
  41785c:	mov    dl,BYTE PTR [edi+esi*8-0x77]
  417860:	inc    esp
  417861:	lods   eax,DWORD PTR ds:[esi]
  417862:	cmp    ch,BYTE PTR [esp+edi*1]
  417865:	in     eax,dx
  417866:	mov    ebx,0xace13cd6
  41786b:	(bad)  
  41786c:	fcmovne st,st(3)
  41786e:	div    DWORD PTR [ebp+0x19]
  417871:	stc    
  417872:	dec    ebx
  417873:	mov    esp,DWORD PTR [edi]
  417875:	das    
  417876:	and    eax,esp
  417878:	jecxz  0x41781e
  41787a:	adc    esi,DWORD PTR [esp-0x1f1f5267]
  417881:	ficom  DWORD PTR [edi]
  417883:	inc    esi
  417884:	aam    0x55
  417886:	mov    eax,ds:0xc610ecd9
  41788b:	int    0x64
  41788d:	loopne 0x4178f7
  41788f:	adc    ebx,DWORD PTR [edi]
  417891:	mov    bl,0xa8
  417893:	cmp    al,0x31
  417895:	js     0x41781d
  417897:	(bad)  
  417898:	jno    0x41782f
  41789a:	sub    al,0xab
  41789c:	fs jns 0x417892
  41789f:	mov    eax,0xeaa259b4
  4178a4:	xchg   esp,eax
  4178a5:	hlt    
  4178a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178a7:	sub    al,0x19
  4178a9:	cmc    
  4178aa:	jnp    0x4178f8
  4178ac:	pusha  
  4178ad:	mov    WORD PTR [edx+0x30d062be],fs
  4178b3:	push   ebp
  4178b4:	and    al,0xdf
  4178b6:	adc    BYTE PTR [edi],dh
  4178b8:	and    DWORD PTR [ebx-0x60f4eb75],ebx
  4178be:	inc    esp
  4178bf:	xchg   ebp,eax
  4178c0:	call   0xf135a1ab
  4178c5:	inc    ecx
  4178c6:	push   0xa70ad68a
  4178cb:	mov    ds:0x6d794fad,al
  4178d0:	xchg   esi,eax
  4178d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178d2:	inc    edx
  4178d3:	sbb    eax,0x6e181729
  4178d8:	mov    bl,0xd7
  4178da:	arpl   WORD PTR [ebp-0x5],ax
  4178dd:	pop    ds
  4178de:	in     eax,dx
  4178df:	mov    WORD PTR [edx-0x5f13e5d7],es
  4178e5:	and    al,0xab
  4178e7:	pusha  
  4178e8:	rol    DWORD PTR [ecx+0x36],0xc
  4178ec:	or     al,0xef
  4178ee:	or     eax,0x9160c79a
  4178f3:	sub    DWORD PTR [eax+0x69],ebp
  4178f6:	gs ja  0x417968
  4178f9:	sbb    BYTE PTR [ebx+ebp*8+0x2ee76679],0x96
  417901:	mov    ch,0xb
  417903:	pushf  
  417904:	loope  0x417971
  417906:	xor    al,0x92
  417908:	fisttp DWORD PTR [esi-0x2f9d098e]
  41790e:	shr    BYTE PTR [ebx],0xe2
  417911:	mov    esi,edi
  417913:	jb     0x417916
  417915:	(bad)  
  417916:	adc    eax,0x46a81c3b
  41791b:	mov    dh,0xb8
  41791d:	lods   al,BYTE PTR ds:[esi]
  41791e:	jmp    0x417962
  417920:	std    
  417921:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417922:	add    al,0xae
  417925:	int3   
  417926:	or     ch,ch
  417928:	call   0x3ec6:0x167fa9a0
  41792f:	les    edi,FWORD PTR [edi+esi*2]
  417932:	inc    edx
  417933:	cdq    
  417934:	jmp    0x41792f
  417936:	add    bh,0x2d
  417939:	dec    esp
  41793a:	lods   al,BYTE PTR ds:[esi]
  41793b:	cli    
  41793c:	clc    
  41793d:	leave  
  41793e:	jbe    0x4178e2
  417940:	push   ebp
  417941:	xchg   edx,eax
  417942:	ins    DWORD PTR es:[edi],dx
  417943:	add    DWORD PTR [edx+0xc],esp
  417946:	mov    esp,esi
  417948:	push   ss
  417949:	inc    ecx
  41794a:	arpl   WORD PTR [ebx-0x2875c209],ax
  417950:	jb     0x4179cb
  417952:	nop
  417953:	fdivr  QWORD PTR [esi+0x36]
  417956:	addr16 xchg ebx,eax
  417958:	dec    ecx
  417959:	adc    ebx,eax
  41795b:	xchg   esp,eax
  41795c:	fwait
  41795d:	add    al,0xf
  41795f:	(bad)  
  417960:	cs push ds
  417962:	aaa    
  417963:	mov    ebp,0x44c183a3
  417968:	bound  edx,QWORD PTR [edx-0x113d8ca0]
  41796e:	mov    ebp,0x14b53b7e
  417973:	xor    al,ah
  417975:	scas   eax,DWORD PTR es:[edi]
  417976:	fwait
  417977:	imul   ebp,DWORD PTR [edx-0x35],0x9
  41797b:	not    BYTE PTR [ebx-0x3c801790]
  417981:	mov    esp,0x85ff853a
  417986:	xchg   BYTE PTR [edx],bl
  417988:	imul   esi,DWORD PTR [ecx+ecx*8-0x3b],0x4ef0b4fd
  417990:	mov    esp,DWORD PTR [ebx+ebx*2-0x3d335195]
  417997:	jecxz  0x4179f8
  417999:	in     al,0x52
  41799b:	adc    dl,BYTE PTR [ebx]
  41799d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41799e:	out    0xc5,al
  4179a0:	cmp    al,0xdc
  4179a2:	inc    edi
  4179a3:	icebp  
  4179a4:	jmp    FWORD PTR [esi-0x4fedca49]
  4179aa:	mov    eax,ds:0x7b301439
  4179b0:	add    eax,esp
  4179b2:	fisttp DWORD PTR [eax-0x36]
  4179b5:	cs jge 0x4179ba
  4179b8:	mov    esi,0x752c9f5a
  4179bd:	adc    BYTE PTR [eax+0x4f0d5905],0x11
  4179c4:	jo     0x4179b8
  4179c6:	mov    bh,0xaf
  4179c8:	stos   BYTE PTR es:[edi],al
  4179c9:	shr    esi,0x9d
  4179cc:	inc    ebx
  4179cd:	fist   DWORD PTR [ebx]
  4179cf:	jle    0x417a0f
  4179d1:	dec    ecx
  4179d2:	int    0xe5
  4179d4:	jo     0x417957
  4179d6:	mov    ds:0x5c1bf225,al
  4179db:	fcom   DWORD PTR [esi+ecx*4]
  4179de:	mov    bl,0xa7
  4179e0:	sub    eax,DWORD PTR [ecx-0x23]
  4179e3:	mov    bh,0xa5
  4179e5:	dec    esi
  4179e6:	dec    esp
  4179e7:	xor    eax,0xf30d8d1a
  4179ec:	adc    DWORD PTR [edx],0x4e
  4179ef:	ror    eax,0xa8
  4179f2:	(bad)  
  4179f3:	jp     0x41797f
  4179f5:	mov    BYTE PTR [esi],ch
  4179f7:	pusha  
  4179f8:	dec    esp
  4179f9:	sub    edx,ecx
  4179fb:	jno    0x417a75
  4179fd:	(bad)
  417a00:	inc    edi
  417a01:	enter  0x4a54,0x80
  417a05:	pop    ds
  417a06:	dec    edi
  417a07:	jns    0x4179e5
  417a09:	cmp    eax,0x32e0dd33
  417a0e:	xor    edx,DWORD PTR [edi]
  417a10:	and    eax,0xd4b913d6
  417a15:	sar    BYTE PTR [ebx-0x39],0x62
  417a19:	cdq    
  417a1a:	rol    DWORD PTR [edi+esi*8-0x594e6bff],1
  417a21:	cmp    cl,ch
  417a23:	icebp  
  417a24:	loop   0x417a16
  417a26:	pop    ebp
  417a27:	sub    ecx,edi
  417a29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a2a:	inc    ecx
  417a2b:	sbb    edi,DWORD PTR [esi+0x7c]
  417a2e:	push   edi
  417a2f:	or     BYTE PTR [ecx],0xbd
  417a32:	cs xor cl,bl
  417a35:	mov    dl,0x35
  417a37:	pop    ds
  417a38:	mov    ebp,0xeb278617
  417a3d:	jg     0x417a65
  417a3f:	dec    esi
  417a40:	push   ebx
  417a41:	push   es
  417a42:	mov    eax,0x18e7fb6f
  417a47:	xchg   ebp,eax
  417a48:	shr    DWORD PTR gs:[ebx-0x78],cl
  417a4c:	mov    ebx,0x3354e2f
  417a51:	cwde   
  417a52:	inc    eax
  417a53:	pop    ds
  417a54:	shr    DWORD PTR [edx],cl
  417a56:	rol    bh,0x73
  417a59:	or     edx,DWORD PTR [edx]
  417a5b:	cmp    al,bl
  417a5d:	and    eax,0xa9dc22ec
  417a62:	in     al,dx
  417a63:	sbb    dh,BYTE PTR [ecx-0x53]
  417a66:	mov    ah,bh
  417a68:	fs inc ecx
  417a6a:	mov    esi,DWORD PTR [ebx]
  417a6c:	retf   0xd3a2
  417a6f:	jmp    0x417a3f
  417a71:	cmp    cl,ch
  417a73:	inc    edi
  417a74:	sbb    ch,BYTE PTR [ebp+0x6e]
  417a77:	lock test BYTE PTR [ecx+0x5c],dh
  417a7b:	mov    dh,0x54
  417a7d:	jne    0x417a36
  417a7f:	test   al,0xba
  417a81:	and    dl,BYTE PTR [eax+0x5609906c]
  417a87:	in     al,0x3e
  417a89:	es mov bh,0x64
  417a8c:	test   DWORD PTR [edx-0x71],esi
  417a8f:	mov    edi,0xdba373e8
  417a94:	push   0xffffffca
  417a96:	jbe    0x417a45
  417a98:	std    
  417a99:	xor    eax,edi
  417a9b:	imul   edx,DWORD PTR ds:0x442141df,0xffffffd7
  417aa2:	xchg   ebx,eax
  417aa3:	mov    ebx,0x2e80cd4a
  417aa8:	sbb    ecx,DWORD PTR [eax+0x44]
  417aab:	fidivr DWORD PTR [esi-0x50]
  417aae:	or     DWORD PTR [edi+0x2],0x58ab646f
  417ab5:	pop    edx
  417ab6:	outs   dx,DWORD PTR ds:[esi]
  417ab7:	inc    ecx
  417ab8:	mov    dl,0xec
  417aba:	test   eax,esi
  417abc:	xchg   ebp,eax
  417abd:	fcmove st,st(7)
  417abf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ac0:	in     al,0x2a
  417ac2:	add    al,0xdb
  417ac4:	das    
  417ac5:	aas    
  417ac6:	scas   al,BYTE PTR es:[edi]
  417ac7:	aaa    
  417ac8:	adc    eax,0x7ee3797d
  417acd:	fstp   st(4)
  417acf:	add    edx,DWORD PTR [ebx+0x55]
  417ad2:	in     al,0xcf
  417ad4:	jle    0x417ae9
  417ad6:	dec    edx
  417ad7:	lds    ebx,FWORD PTR [eax+0x72511b7b]
  417add:	pop    ecx
  417ade:	pop    ebx
  417adf:	inc    eax
  417ae0:	dec    ecx
  417ae1:	add    al,dh
  417ae3:	rcl    DWORD PTR [ebp-0x16],1
  417ae6:	add    DWORD PTR [ebp+0x34],edi
  417ae9:	cli    
  417aea:	jo     0x417ae7
  417aec:	push   edx
  417aed:	fidivr DWORD PTR [edi+ecx*8]
  417af0:	mov    bl,0x6b
  417af2:	shl    DWORD PTR [esi-0x66103ebe],cl
  417af8:	cmc    
  417af9:	jb     0x417b02
  417afb:	out    0x40,eax
  417afd:	outs   dx,DWORD PTR ds:[esi]
  417afe:	mov    al,0xcd
  417b00:	add    DWORD PTR [ebp+0x7caf3ecf],edx
  417b06:	mov    edi,0xa15b37fd
  417b0b:	pop    esp
  417b0c:	push   0xfffffff8
  417b0e:	xor    eax,0x8be29daf
  417b13:	sbb    DWORD PTR [edi+0x92ce6cb],eax
  417b19:	in     eax,0x16
  417b1b:	inc    ebp
  417b1c:	or     al,0x8
  417b1e:	cmp    DWORD PTR [esp+ecx*8-0x263c91bb],esi
  417b25:	add    ch,BYTE PTR [ecx+0x79]
  417b28:	add    dh,cl
  417b2a:	sbb    al,0x1b
  417b2c:	js     0x417ac3
  417b2e:	push   eax
  417b2f:	mov    eax,ds:0x7a4e080d
  417b34:	pop    es
  417b35:	inc    BYTE PTR [edi+ebx*4]
  417b38:	inc    ebx
  417b39:	push   esp
  417b3a:	lds    ecx,FWORD PTR [ecx-0x21d0695d]
  417b40:	out    0xe1,al
  417b42:	xchg   ecx,eax
  417b43:	ins    BYTE PTR es:[edi],dx
  417b44:	and    eax,0x8f766d23
  417b49:	sbb    bl,BYTE PTR [edi+0x7b]
  417b4c:	ins    BYTE PTR es:[edi],dx
  417b4d:	push   esp
  417b4e:	rol    edi,1
  417b50:	sub    eax,0xe9c7671c
  417b55:	xor    DWORD PTR [ebp+0x7],edx
  417b58:	and    DWORD PTR [esp+eax*2-0x20f0ae8],esp
  417b5f:	inc    ebp
  417b60:	pusha  
  417b61:	sbb    dl,0xb4
  417b64:	cli    
  417b65:	push   edi
  417b66:	aas    
  417b67:	bound  edi,QWORD PTR [edx+ebp*8+0x456ea5aa]
  417b6e:	call   0xa11dc3f0
  417b73:	ror    dh,1
  417b75:	xor    eax,0x758858ca
  417b7a:	sub    ebp,DWORD PTR [edi+0x34]
  417b7d:	xor    dh,BYTE PTR [edx-0x59]
  417b80:	shl    BYTE PTR [esi-0x78],cl
  417b83:	pop    ebp
  417b84:	sub    al,dl
  417b86:	xchg   edx,eax
  417b87:	push   eax
  417b88:	mov    ch,0xb6
  417b8a:	mov    WORD PTR [ebp+esi*1-0x10],gs
  417b8e:	in     eax,dx
  417b8f:	mov    al,ds:0x70a65c28
  417b94:	fcomp  DWORD PTR [ecx-0x531ddb60]
  417b9a:	mov    ss,ebx
  417b9c:	pop    ecx
  417b9d:	inc    ecx
  417b9e:	xchg   ecx,eax
  417b9f:	adc    dl,BYTE PTR [edx-0x47]
  417ba2:	add    DWORD PTR ds:0x787d8d1f,ecx
  417ba8:	or     eax,0x23a8b8e6
  417bad:	push   edi
  417bae:	push   ebp
  417baf:	jno    0x417b94
  417bb1:	mov    ecx,ebx
  417bb3:	pop    ss
  417bb4:	test   ecx,ebp
  417bb6:	add    cl,BYTE PTR [edi]
  417bb8:	push   eax
  417bb9:	lods   al,BYTE PTR ds:[esi]
  417bba:	add    al,0xb4
  417bbc:	hlt    
  417bbd:	rcl    DWORD PTR ds:0xd194e768,1
  417bc4:	push   es
  417bc5:	dec    edi
  417bc6:	add    eax,0xab675f33
  417bcb:	sbb    ecx,edx
  417bcd:	lea    eax,[edi]
  417bcf:	push   eax
  417bd0:	lods   al,BYTE PTR ds:[esi]
  417bd1:	cmp    al,al
  417bd3:	or     al,0x63
  417bd5:	dec    ebx
  417bd6:	ins    DWORD PTR es:[edi],dx
  417bd7:	or     DWORD PTR [ebx],edi
  417bd9:	hlt    
  417bda:	hlt    
  417bdb:	shl    ah,cl
  417bdd:	jg     0x417c29
  417bdf:	mov    ?,WORD PTR [ecx-0x7d]
  417be2:	retf   0xbf4
  417be5:	pop    ecx
  417be6:	push   0x1e
  417be8:	ss xchg edi,eax
  417bea:	or     BYTE PTR [si],0x8
  417bee:	sbb    al,0x5e
  417bf0:	add    esp,DWORD PTR [edx]
  417bf2:	and    ecx,eax
  417bf4:	mov    dh,0x63
  417bf6:	mov    eax,es:0x9d4d02fe
  417bfc:	push   ss
  417bfd:	adc    ch,BYTE PTR [ebp-0x49]
  417c00:	repnz retf 
  417c02:	push   ebp
  417c03:	xchg   ebp,eax
  417c04:	jno    0x417c0b
  417c06:	xor    eax,0x31900a1d
  417c0b:	iret   
  417c0c:	imul   edx,DWORD PTR [ecx+0x1b],0x2e813f58
  417c13:	sbb    DWORD PTR cs:[eax],esi
  417c16:	into   
  417c17:	(bad)  
  417c18:	call   0x3032dfef
  417c1d:	aas    
  417c1e:	push   esp
  417c1f:	xchg   edi,eax
  417c20:	out    0xcb,al
  417c22:	shl    BYTE PTR [ebx-0x4a7d6e3],1
  417c28:	xchg   ebp,eax
  417c29:	call   DWORD PTR [ebx+0x46]
  417c2c:	adc    al,0x68
  417c2e:	aam    0x7
  417c30:	ss pop ds
  417c32:	stc    
  417c33:	mov    dl,0x20
  417c35:	mov    ah,0x66
  417c37:	mov    esp,0xd41710be
  417c3c:	push   0x224d7ef7
  417c41:	retf   
  417c42:	mov    BYTE PTR ds:0x4ea2af38,bl
  417c48:	pop    eax
  417c49:	fwait
  417c4a:	lds    eax,FWORD PTR [eax-0x70]
  417c4d:	jnp    0x417be4
  417c4f:	stos   DWORD PTR es:[edi],eax
  417c50:	adc    DWORD PTR [edx+0x1b],edi
  417c53:	in     eax,0xe3
  417c55:	ja     0x417c38
  417c57:	jmp    0x417c32
  417c59:	dec    esi
  417c5a:	push   ecx
  417c5b:	enter  0x9d2,0x49
  417c5f:	aam    0xdc
  417c61:	jmp    0x417bf3
  417c63:	push   ebp
  417c64:	push   0x60
  417c66:	arpl   WORD PTR [edx+0x64],ax
  417c69:	push   0xffffff8d
  417c6b:	ins    DWORD PTR es:[edi],dx
  417c6c:	jbe    0x417c3d
  417c6e:	retf   0x82c2
  417c71:	mov    ch,0xfb
  417c73:	sub    al,0x1a
  417c75:	fadd   QWORD PTR [esi]
  417c77:	xchg   edx,eax
  417c78:	sbb    DWORD PTR [ebx+0x30d1c9eb],eax
  417c7e:	sub    eax,0x9cd17ab1
  417c83:	(bad)  
  417c84:	push   0x75c4fa5c
  417c89:	std    
  417c8a:	call   0x2c24:0x4910b617
  417c91:	ret    0xc82
  417c94:	mov    cl,BYTE PTR [ecx+0x2a0a3843]
  417c9a:	stos   BYTE PTR es:[edi],al
  417c9b:	pop    edx
  417c9c:	dec    ebp
  417c9d:	xchg   BYTE PTR [eax+0xe],bh
  417ca0:	add    DWORD PTR [edi-0x62b6d78d],edi
  417ca6:	lea    ecx,[eax+0x4ed4ea00]
  417cac:	aad    0xc6
  417cae:	mov    esp,0xfe23d7a3
  417cb3:	and    ecx,DWORD PTR [ebx+edi*8-0x180df13]
  417cba:	mov    ebp,0x827451e5
  417cbf:	outs   dx,BYTE PTR ds:[esi]
  417cc0:	into   
  417cc1:	pop    ebp
  417cc2:	pop    ecx
  417cc3:	ret    0x2b1d
  417cc6:	sbb    DWORD PTR [esi],edi
  417cc8:	push   ebp
  417cc9:	or     ebx,ecx
  417ccb:	lahf   
  417ccc:	out    0x22,eax
  417cce:	rcl    ch,0xe2
  417cd1:	mov    al,0x57
  417cd3:	mov    ah,0xf5
  417cd5:	outs   dx,DWORD PTR ds:[esi]
  417cd6:	cli    
  417cd7:	aam    0x14
  417cd9:	(bad)  
  417cda:	out    0x2e,al
  417cdc:	jae    0x417ccb
  417cde:	pop    esi
  417cdf:	icebp  
  417ce0:	push   esi
  417ce1:	inc    ecx
  417ce2:	xchg   ebx,eax
  417ce3:	dec    ah
  417ce5:	pop    esp
  417ce6:	scas   al,BYTE PTR es:[edi]
  417ce7:	xor    DWORD PTR [edx+0x72d137b3],ebx
  417ced:	pop    esp
  417cee:	push   ebp
  417cef:	and    DWORD PTR [ebp+0x4d],esi
  417cf2:	test   al,0xe4
  417cf4:	xor    cl,BYTE PTR [ebp-0x66]
  417cf7:	push   ebx
  417cf8:	adc    esi,edx
  417cfa:	jo     0x417cca
  417cfc:	(bad)  
  417cfd:	fidiv  DWORD PTR [ecx]
  417cff:	loope  0x417c99
  417d01:	sbb    al,0x48
  417d03:	sub    ah,BYTE PTR [edx]
  417d05:	dec    ecx
  417d06:	jnp    0x417d19
  417d08:	aad    0x40
  417d0a:	push   0xad9bea10
  417d0f:	mov    edx,0x46d7ea
  417d14:	xchg   ebp,eax
  417d15:	jmp    0xe1a2:0x56c04dfd
  417d1c:	and    al,BYTE PTR [eax+ecx*8+0x19]
  417d20:	pop    ss
  417d21:	xchg   ebx,eax
  417d22:	rcl    BYTE PTR [ecx+eax*8],cl
  417d25:	xchg   ecx,eax
  417d26:	js     0x417d60
  417d28:	cmp    edx,edi
  417d2a:	sub    BYTE PTR [ebp+0xc],bl
  417d2d:	popf   
  417d2e:	int    0x7e
  417d30:	pop    ecx
  417d31:	cld    
  417d32:	or     al,0xf5
  417d34:	mov    ebp,DWORD PTR [esi-0x69]
  417d37:	repnz rol BYTE PTR [esp+ecx*4-0x7e],0xab
  417d3d:	idiv   ebx
  417d3f:	pop    es
  417d40:	(bad)
  417d45:	cmp    BYTE PTR [edx+ecx*2-0x2f3bb1f7],dh
  417d4c:	mov    BYTE PTR [ebp+0x63],cl
  417d4f:	inc    ebp
  417d50:	adc    BYTE PTR [edx+0x2c29e66e],bl
  417d56:	and    al,0x77
  417d58:	mov    esp,0xe9108b8b
  417d5d:	repz xchg esi,eax
  417d5f:	jl     0x417dbb
  417d61:	hlt    
  417d62:	mov    ebx,ebp
  417d64:	xchg   dh,al
  417d66:	cmp    BYTE PTR [edx-0x7949839c],dh
  417d6c:	sar    BYTE PTR ds:0xe3594f59,0xab
  417d73:	jle    0x417d3e
  417d75:	ss adc ecx,DWORD PTR cs:[ebp+0x3dfc219c]
  417d7d:	mov    edx,0x392ea549
  417d82:	adc    al,0xf5
  417d84:	adc    BYTE PTR [ecx],0x9f
  417d87:	lods   eax,DWORD PTR ds:[esi]
  417d88:	pushf  
  417d89:	push   edx
  417d8a:	ins    BYTE PTR es:[edi],dx
  417d8b:	mov    eax,0x160c196c
  417d90:	jno    0x417d9d
  417d92:	dec    BYTE PTR [edi+ebx*4+0x31602fd6]
  417d99:	popa   
  417d9a:	jl     0x417d35
  417d9c:	sbb    al,0xc7
  417d9e:	std    
  417d9f:	clc    
  417da0:	into   
  417da1:	test   BYTE PTR [eax-0x4e74c280],bl
  417da7:	aas    
  417da8:	fisubr WORD PTR [ebp+0x40]
  417dab:	mov    eax,ds:0xa90bc48a
  417db0:	out    dx,eax
  417db1:	dec    ecx
  417db2:	dec    eax
  417db3:	mov    dl,0xc0
  417db5:	out    dx,al
  417db6:	(bad)  
  417db7:	dec    DWORD PTR [ecx+0x38]
  417dba:	pop    ebp
  417dbb:	mov    ecx,0x55ff20ac
  417dc0:	adc    dh,BYTE PTR es:[ebx-0x40]
  417dc4:	nop
  417dc5:	or     eax,0xc463d6d7
  417dca:	inc    eax
  417dcb:	pop    es
  417dcc:	bts    DWORD PTR [edi+0xf32e78],0xb4
  417dd4:	xchg   ebp,eax
  417dd5:	les    eax,FWORD PTR [ebp-0x36]
  417dd8:	in     al,0x19
  417dda:	xchg   edx,eax
  417ddb:	push   ecx
  417ddc:	fld    DWORD PTR [ebx]
  417dde:	jno    0x417e09
  417de0:	pop    ss
  417de1:	or     esp,ebp
  417de3:	das    
  417de4:	xchg   ebp,eax
  417de5:	aas    
  417de6:	mov    eax,0x65b49039
  417deb:	lock mov ebp,0xf30cb8ff
  417df1:	aam    0x64
  417df3:	pop    es
  417df4:	jge    0x417dc9
  417df6:	and    al,0x9f
  417df8:	call   0x2f3a36db
  417dfd:	lea    edx,ds:0x6f311d8
  417e03:	xchg   edi,eax
  417e04:	aaa    
  417e05:	dec    edx
  417e06:	aad    0xc1
  417e08:	ret    
  417e09:	xor    dl,ah
  417e0b:	pop    ds
  417e0c:	ss mov ebp,0xbe9c7bc8
  417e12:	ret    
  417e13:	push   ebp
  417e14:	or     eax,0x2dbc8726
  417e19:	jecxz  0x417e65
  417e1b:	jns    0x417dfa
  417e1d:	or     DWORD PTR [edx+0x23],0x9e6b2b05
  417e24:	sub    ecx,DWORD PTR [edx+0x672b69f1]
  417e2a:	sub    DWORD PTR ds:0x4a50b27b,ecx
  417e30:	daa    
  417e31:	sub    DWORD PTR [edx],esi
  417e33:	and    ebp,ecx
  417e35:	ss loope 0x417e95
  417e38:	or     BYTE PTR [ecx],ch
  417e3a:	jmp    0xc378:0xbc1e8728
  417e41:	sbb    BYTE PTR [ecx-0x47e0791b],0xaa
  417e48:	pusha  
  417e49:	pop    edx
  417e4a:	pop    ebp
  417e4b:	xchg   eax,edi
  417e4d:	js     0x417ea8
  417e4f:	jecxz  0x417e91
  417e51:	jae    0x417ec5
  417e53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e54:	or     eax,0x7e0b49f6
  417e59:	aam    0x14
  417e5b:	imul   ecx,DWORD PTR [eax],0x2f
  417e5e:	sub    esi,DWORD PTR [edx+eax*2-0x58]
  417e62:	xor    eax,0x2c7eae28
  417e67:	retf   0x21e3
  417e6a:	test   al,0x59
  417e6c:	fisub  WORD PTR [edi]
  417e6e:	sub    BYTE PTR [eax+0x75],al
  417e71:	mov    bh,0xa1
  417e73:	and    DWORD PTR [ebp+0x5eb69676],eax
  417e79:	or     al,BYTE PTR [bp+di-0x34]
  417e7d:	(bad)  
  417e7f:	pop    es
  417e80:	add    edx,DWORD PTR [ebx]
  417e82:	dec    edi
  417e83:	xchg   ebp,eax
  417e84:	jns    0x417e6a
  417e86:	cmc    
  417e87:	mov    DWORD PTR [edi-0x60],ebx
  417e8a:	mov    esi,0x260633ba
  417e8f:	out    dx,al
  417e90:	xor    BYTE PTR [ecx+edi*2],al
  417e93:	daa    
  417e94:	dec    edi
  417e95:	sbb    DWORD PTR [esi+0x76],ebp
  417e98:	cmp    eax,0xc7e3c668
  417e9d:	sbb    DWORD PTR [ebx-0x63],esi
  417ea0:	jle    0x417ef0
  417ea2:	xor    al,0x50
  417ea4:	inc    ebx
  417ea5:	aad    0xc0
  417ea7:	out    dx,al
  417ea8:	ins    BYTE PTR es:[edi],dx
  417ea9:	out    dx,al
  417eaa:	push   cs
  417eab:	sbb    al,0xe2
  417ead:	enter  0x180f,0x12
  417eb1:	fs and al,0xde
  417eb4:	rcl    BYTE PTR [ebx],0x77
  417eb7:	stos   BYTE PTR es:[edi],al
  417eb8:	add    BYTE PTR [eax-0x624ae50d],ah
  417ebe:	loope  0x417f18
  417ec0:	lds    ebp,FWORD PTR [ebp-0x43c7f61]
  417ec6:	ret    
  417ec7:	add    al,0xe3
  417ec9:	popf   
  417eca:	and    al,0x8b
  417ecc:	jmp    0xda79723d
  417ed1:	mov    al,0xc
  417ed3:	out    dx,eax
  417ed4:	adc    dh,BYTE PTR [ebp+0x624c2537]
  417eda:	mov    eax,ds:0x6279677a
  417edf:	shl    BYTE PTR [edi],cl
  417ee1:	sar    bh,cl
  417ee3:	jnp    0x417f31
  417ee5:	int3   
  417ee6:	mov    esp,0x6c584497
  417eeb:	xchg   BYTE PTR [ebp+0x48cd9a9],dh
  417ef1:	int3   
  417ef2:	js     0x417e9d
  417ef4:	scas   eax,DWORD PTR es:[edi]
  417ef5:	inc    edi
  417ef6:	xchg   BYTE PTR [ebx+0x46],ch
  417ef9:	cmp    BYTE PTR [ecx],0xca
  417efc:	gs (bad) 
  417efe:	lods   eax,DWORD PTR ds:[esi]
  417eff:	pop    ebp
  417f00:	sub    eax,0x2818f9b2
  417f05:	fcomp  DWORD PTR [esi]
  417f07:	push   cs
  417f08:	push   ebp
  417f09:	mov    ch,0x72
  417f0b:	shl    DWORD PTR [edx+0x84659fd],cl
  417f11:	sti    
  417f12:	inc    esi
  417f13:	and    al,0x72
  417f15:	fs mov al,0x4d
  417f18:	inc    edi
  417f19:	js     0x417ef5
  417f1b:	mov    ds:0x65e17ae6,eax
  417f20:	sub    DWORD PTR [ebp+ebx*8+0x7d],ecx
  417f24:	fmul   DWORD PTR [esi-0x6b4a4f03]
  417f2a:	retf   0xdeae
  417f2d:	mov    edi,0xc5a4135d
  417f32:	sahf   
  417f33:	jle    0x417f2f
  417f35:	mov    esi,0xc7bde93d
  417f3a:	inc    ecx
  417f3b:	test   BYTE PTR [edx+ecx*1],bh
  417f3e:	xchg   edx,eax
  417f3f:	cld    
  417f40:	or     eax,0x181e33a9
  417f45:	retf   
  417f46:	or     esi,edi
  417f48:	inc    bx
  417f4a:	jns    0x417f58
  417f4c:	lahf   
  417f4d:	jbe    0x417f47
  417f4f:	(bad)  
  417f50:	xchg   edi,eax
  417f51:	sbb    eax,0x40580aed
  417f56:	push   0x50
  417f58:	xchg   ecx,eax
  417f59:	xchg   ecx,eax
  417f5a:	ret    0x922f
  417f5d:	cli    
  417f5e:	lsl    ecx,WORD PTR [ebx+ebx*1-0x692cc798]
  417f66:	addr16 xchg esp,eax
  417f68:	fs jnp 0x417f57
  417f6b:	lds    ecx,FWORD PTR [esi+0x36]
  417f6e:	jge    0x417f11
  417f70:	sbb    eax,DWORD PTR [edx]
  417f72:	mov    DWORD PTR [edx+edx*8+0x31],edi
  417f76:	into   
  417f77:	in     al,dx
  417f78:	loop   0x417f44
  417f7a:	dec    ebp
  417f7b:	or     al,0x2f
  417f7d:	imul   ecx,DWORD PTR [ecx-0x2cdd8645],0x1a
  417f84:	and    DWORD PTR [eax+eiz*1+0x64],edi
  417f88:	xor    eax,0xb67e9151
  417f8d:	pop    es
  417f8e:	pop    edi
  417f8f:	inc    edx
  417f90:	mov    bl,0xb3
  417f92:	mov    ecx,0x81dfe3b9
  417f97:	scas   eax,DWORD PTR es:[edi]
  417f98:	outs   dx,DWORD PTR ds:[esi]
  417f99:	mov    dh,0x35
  417f9b:	stc    
  417f9c:	cmp    al,0xa4
  417f9e:	push   esi
  417f9f:	mov    bh,BYTE PTR [esi+0x72]
  417fa2:	ja     0x417f8e
  417fa4:	lods   al,BYTE PTR ds:[esi]
  417fa5:	add    edx,DWORD PTR [edi-0x650b39ff]
  417fab:	fbld   TBYTE PTR [eax-0x13]
  417fae:	mov    bl,0x6
  417fb0:	call   FWORD PTR [edi]
  417fb2:	jno    0x418004
  417fb4:	test   DWORD PTR [ebp-0x5de486a7],0x610d25e4
  417fbe:	in     al,0xde
  417fc0:	inc    eax
  417fc1:	jp     0x417f8f
  417fc3:	sbb    al,0x4b
  417fc5:	mov    esi,0x6ecdf7dc
  417fca:	data16 stc 
  417fcc:	cmp    BYTE PTR [eax],ch
  417fce:	mov    ebp,0x52f0ac67
  417fd3:	inc    esp
  417fd4:	push   ss
  417fd5:	dec    ecx
  417fd6:	rcr    DWORD PTR [ebx],cl
  417fd8:	sbb    DWORD PTR [ecx+edi*8-0x79],edi
  417fdc:	scas   eax,DWORD PTR es:[edi]
  417fdd:	rcl    BYTE PTR ds:0x5ff32353,cl
  417fe3:	jecxz  0x417f98
  417fe5:	push   edx
  417fe6:	push   ds
  417fe7:	je     0x417fc8
  417fe9:	mov    WORD PTR [ebp-0x26],cs
  417fec:	outs   dx,BYTE PTR ds:[esi]
  417fed:	test   DWORD PTR [edx+esi*4],0x27838b15
  417ff4:	jmp    0x6558c01d
  417ff9:	inc    edx
  417ffa:	into   
  417ffb:	cld    
  417ffc:	dec    edx
  417ffd:	add    al,0x29
  417fff:	mov    esp,0xcebff1f1
  418004:	dec    edi
  418005:	cs mov ah,0xe6
  418008:	(bad)  [ebp+0x67dfffa4]
  41800e:	das    
  41800f:	lods   al,BYTE PTR ds:[esi]
  418010:	jo     0x417fec
  418012:	shl    BYTE PTR [edx],1
  418014:	jmp    0x6754a0fd
  418019:	cmp    BYTE PTR [edi+0x2465f789],cl
  41801f:	inc    ebx
  418020:	sub    al,0x4a
  418022:	add    al,0xf1
  418024:	dec    ecx
  418025:	aam    0xa0
  418027:	cmp    al,0xc
  418029:	mov    al,ds:0xfad61a66
  41802e:	or     bp,WORD PTR [edx]
  418031:	mov    bl,0xe1
  418033:	(bad)  
  418034:	shl    BYTE PTR [esi-0x27b7f908],1
  41803a:	mov    ds:0x252515d3,al
  41803f:	dec    esp
  418040:	mov    bh,0xe0
  418042:	push   eax
  418043:	xchg   eax,eax
  418045:	adc    al,0xc4
  418047:	ins    BYTE PTR es:[edi],dx
  418048:	mov    ecx,0xf2a040f7
  41804d:	arpl   WORD PTR [esp+ebp*8-0x48],bp
  418051:	pushf  
  418052:	add    eax,0x3f5ca4ab
  418057:	icebp  
  418058:	xchg   ebx,eax
  418059:	pop    esi
  41805a:	adc    DWORD PTR [ebx-0x7d5500aa],ecx
  418060:	adc    esi,DWORD PTR [ebx]
  418062:	shl    DWORD PTR [ecx+0x4e],0x3e
  418066:	pop    edi
  418067:	call   0x9119959b
  41806c:	and    al,0xf6
  41806e:	mov    WORD PTR [edi-0x4c],ss
  418071:	pop    esp
  418072:	aaa    
  418073:	push   0xf69ae08e
  418078:	imul   ebp,edi,0x93fce131
  41807e:	fidivr WORD PTR [ebp-0x29]
  418081:	dec    edx
  418082:	mov    ds:0x9e2e231d,eax
  418087:	mov    ch,BYTE PTR [eax-0x916bde4]
  41808d:	out    dx,al
  41808e:	dec    ebx
  41808f:	pop    ebx
  418090:	out    0x7f,al
  418092:	or     DWORD PTR [ecx+0x3b],0xffffff82
  418096:	inc    edx
  418097:	loope  0x418114
  418099:	add    ah,dl
  41809b:	jae    0x4180eb
  41809d:	test   BYTE PTR [ecx+0x55],0xc4
  4180a1:	and    DWORD PTR [ebx+eiz*2+0x31],edi
  4180a5:	mov    al,0xa9
  4180a7:	mov    ebx,0x46bb4282
  4180ac:	sub    DWORD PTR [ebx-0x59],esi
  4180af:	push   ss
  4180b0:	loope  0x41807c
  4180b2:	or     BYTE PTR [esi+0x559e4004],cl
  4180b8:	outs   dx,BYTE PTR ds:[esi]
  4180b9:	jge    0x418122
  4180bb:	mov    eax,ds:0x8beb60c1
  4180c0:	jmp    0x4cbb:0xe4dc09ee
  4180c7:	mov    eax,ds:0xe45a0913
  4180cc:	mov    edi,0x480dc6c9
  4180d1:	outs   dx,DWORD PTR ds:[esi]
  4180d2:	sub    edx,DWORD PTR [esi+0x5f73fc1f]
  4180d8:	aaa    
  4180d9:	dec    ebp
  4180da:	imul   edx,edi,0xd6b5077e
  4180e0:	push   ss
  4180e1:	or     bl,BYTE PTR [eax-0x2aa6130d]
  4180e7:	mov    ebp,0x9e551dfb
  4180ec:	adc    eax,0x4dc9c3c2
  4180f1:	ja     0x4180a2
  4180f3:	and    al,0x9f
  4180f5:	sub    eax,0x305a4597
  4180fa:	mov    DWORD PTR [ebp+ecx*1-0x3b],esp
  4180fe:	out    dx,al
  4180ff:	out    0x10,al
  418101:	test   eax,0xbeebee73
  418106:	fimul  WORD PTR [ebx+0x3f]
  418109:	mov    ds:0x59dda8c3,al
  41810e:	das    
  41810f:	jne    0x4180b6
  418111:	pop    esi
  418112:	or     al,0xaf
  418114:	pop    edx
  418115:	mov    al,0x53
  418117:	sub    eax,0xa1c9d65c
  41811c:	cmp    dh,cl
  41811e:	fst    DWORD PTR [ecx-0x284c224d]
  418124:	fmul   st,st(7)
  418126:	pop    edi
  418127:	mov    bh,BYTE PTR [ebp-0x57ec965c]
  41812d:	adc    eax,0xeb69f14a
  418132:	sub    eax,DWORD PTR [ebx+0x70]
  418135:	or     DWORD PTR [edi-0x19],0xfccbd006
  41813c:	sti    
  41813d:	lahf   
  41813e:	daa    
  41813f:	pop    ds
  418140:	mov    eax,ds:0xd88fce14
  418145:	xchg   esi,eax
  418146:	xor    esp,ebp
  418148:	sub    al,0x8a
  41814a:	aad    0xa0
  41814c:	pop    ds
  41814d:	ins    BYTE PTR es:[edi],dx
  41814e:	jbe    0x4181bd
  418150:	test   eax,edi
  418152:	xor    BYTE PTR [edi+eax*8],al
  418155:	or     DWORD PTR [edx+0xc5c25c4],edi
  41815b:	clc    
  41815c:	(bad)  
  41815d:	outs   dx,BYTE PTR ds:[esi]
  41815e:	ror    BYTE PTR [eax+0x31],cl
  418161:	jno    0x41811f
  418163:	leave  
  418164:	adc    bl,dh
  418166:	out    dx,al
  418167:	(bad)  
  418168:	dec    ecx
  418169:	or     al,0x3b
  41816b:	push   eax
  41816c:	lods   eax,DWORD PTR ds:[esi]
  41816d:	add    ebx,DWORD PTR [edi+edx*2-0x47]
  418171:	popa   
  418172:	fdivr  DWORD PTR [esi]
  418174:	(bad)  
  418175:	fiadd  DWORD PTR [eax+ecx*8-0x1e]
  418179:	sbb    DWORD PTR [ecx],0x5bdd1c1d
  41817f:	sub    al,BYTE PTR [ebp+0x14]
  418182:	fild   QWORD PTR [ecx-0x166037eb]
  418188:	stos   BYTE PTR es:[edi],al
  418189:	xlat   BYTE PTR ds:[ebx]
  41818b:	jmp    0x124a75bf
  418190:	sbb    edx,DWORD PTR [ebx+0x23]
  418193:	cld    
  418194:	jbe    0x418200
  418196:	outs   dx,DWORD PTR ds:[esi]
  418197:	retf   
  418198:	into   
  418199:	pop    ss
  41819a:	or     bl,BYTE PTR [edi+0xf36a1cd]
  4181a0:	adc    ah,BYTE PTR es:[ecx]
  4181a3:	std    
  4181a4:	adc    al,0xa6
  4181a6:	sub    BYTE PTR [ebx-0x29],dh
  4181a9:	hlt    
  4181aa:	out    dx,al
  4181ab:	jmp    0x8a:0xe821773b
  4181b2:	call   0x30a8:0x599687de
  4181b9:	stos   BYTE PTR es:[edi],al
  4181ba:	out    dx,al
  4181bb:	ret    0xf52a
  4181be:	ja     0x4181d1
  4181c0:	es jmp 0xb39f3af2
  4181c6:	nop
  4181c7:	push   0x6ff58cc3
  4181cc:	adc    esi,esi
  4181ce:	mov    esi,0x8138401d
  4181d3:	mov    eax,0xbe317a22
  4181d8:	sar    BYTE PTR [ebx+0x6031168a],0xc7
  4181df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181e0:	and    eax,0x2eb1e4ba
  4181e5:	scas   eax,DWORD PTR es:[edi]
  4181e6:	pop    es
  4181e7:	out    0xfa,eax
  4181e9:	inc    ecx
  4181ea:	mov    edx,0x5e824533
  4181ef:	jae    0x41821f
  4181f1:	call   0x59da22a9
  4181f6:	idiv   ebx
  4181f8:	jp     0x418222
  4181fa:	sbb    DWORD PTR [eax],eax
  4181fc:	push   cs
  4181fd:	fucomi st,st(0)
  4181ff:	sub    BYTE PTR [eax-0x2b6a5922],dh
  418205:	cmp    ecx,0xd8478048
  41820b:	dec    esi
  41820c:	mov    edx,0x5ed885bf
  418211:	sti    
  418212:	push   ebx
  418213:	sti    
  418214:	pop    esi
  418215:	inc    eax
  418216:	xchg   esp,eax
  418217:	push   esp
  418218:	cli    
  418219:	mov    eax,0x8ae54790
  41821e:	in     al,dx
  41821f:	retf   0x1f68
  418222:	cmp    eax,DWORD PTR ds:0x1611578
  418228:	inc    edx
  418229:	in     al,0x81
  41822b:	xor    bh,bh
  41822d:	rcl    BYTE PTR [eax-0x6c22bd3e],1
  418233:	(bad)  
  418234:	fcomp  QWORD PTR [eax-0x7a8014ff]
  41823a:	and    al,0x98
  41823c:	int    0x16
  41823e:	mov    ecx,0x3bf66c37
  418243:	sahf   
  418244:	push   0xffffff91
  418246:	fs scas al,BYTE PTR es:[edi]
  418248:	push   esi
  418249:	or     BYTE PTR cs:[edi+0x3a1a1c11],al
  418250:	adc    eax,DWORD PTR [esi]
  418252:	ror    DWORD PTR [edi-0x1c369e70],1
  418258:	mov    al,ds:0x64e555c0
  41825d:	jb     0x41823b
  41825f:	out    0x79,eax
  418261:	jb     0x4182b7
  418263:	out    0xcd,eax
  418265:	jno    0x418246
  418267:	push   ebp
  418268:	jno    0x418201
  41826a:	and    ecx,eax
  41826c:	dec    esp
  41826d:	repz jp 0x418266
  418270:	jmp    0xcadc5f15
  418275:	xchg   ebx,eax
  418276:	add    DWORD PTR [ecx],ebx
  418278:	sub    ebx,DWORD PTR [ecx]
  41827a:	(bad)  
  41827b:	icebp  
  41827c:	push   ss
  41827d:	pop    ecx
  41827e:	add    BYTE PTR [ebp+0x588c5664],0xfc
  418285:	mov    BYTE PTR [edi],dh
  418287:	jne    0x4182ef
  418289:	cmp    al,ch
  41828b:	xchg   esp,eax
  41828c:	fdivr  st,st(2)
  41828e:	in     eax,dx
  41828f:	mov    dh,0xf2
  418291:	inc    edi
  418292:	jmp    0xee1cdf71
  418297:	sti    
  418298:	test   eax,0x8d8c314e
  41829d:	nop
  41829e:	pop    ebx
  41829f:	mov    ecx,0xa759eeee
  4182a4:	loopne 0x4182a3
  4182a6:	in     al,dx
  4182a7:	cmp    DWORD PTR [eax+0x18a1c290],0x2f82c911
  4182b1:	sahf   
  4182b2:	rcl    BYTE PTR [ebx-0x76],cl
  4182b5:	xchg   edi,eax
  4182b6:	(bad)  
  4182b7:	mov    edx,0x7b886714
  4182bc:	hlt    
  4182bd:	aas    
  4182be:	cmp    eax,0x95678293
  4182c3:	sub    al,0xe1
  4182c5:	fist   DWORD PTR [edi+0x4b]
  4182c8:	inc    ebp
  4182c9:	and    eax,DWORD PTR [edi+0x7b09eaad]
  4182cf:	add    DWORD PTR [eax-0x71],ecx
  4182d2:	in     al,0xaa
  4182d4:	les    esp,FWORD PTR [eax+0x63eb985b]
  4182da:	or     bh,BYTE PTR [esi+ecx*4-0x190a2b29]
  4182e1:	mov    ebx,DWORD PTR ds:0xe8a6fb85
  4182e7:	ja     0x418335
  4182e9:	push   es
  4182ea:	mov    ebp,0x41394c83
  4182ef:	loope  0x418315
  4182f1:	stc    
  4182f2:	sbb    DWORD PTR [ebx],ecx
  4182f4:	push   esi
  4182f5:	jmp    0x418350
  4182f7:	and    dl,BYTE PTR [eax+0x32]
  4182fa:	lods   al,BYTE PTR ds:[esi]
  4182fb:	call   0x36000d39
  418300:	mov    edx,0x9be6886e
  418305:	mov    bl,0xf1
  418307:	das    
  418308:	out    0xac,al
  41830a:	and    eax,0x5b706e55
  41830f:	push   esi
  418310:	aad    0xfa
  418312:	pop    esi
  418313:	sub    DWORD PTR [edi],edi
  418315:	mov    edx,DWORD PTR [eax+0x16]
  418318:	aas    
  418319:	mov    ecx,0xe5e5d3b7
  41831e:	(bad)  
  41831f:	out    0x87,al
  418321:	xor    dl,BYTE PTR [esi-0x3f]
  418324:	or     BYTE PTR [edx+esi*4],dh
  418327:	push   ss
  418328:	sbb    BYTE PTR [edi-0x16410b3b],ch
  41832e:	std    
  41832f:	out    dx,al
  418330:	mov    bl,0xc8
  418332:	jns    0x41830b
  418334:	push   0x74
  418336:	sub    eax,0x5310e9f8
  41833b:	out    dx,al
  41833c:	fild   QWORD PTR [esi-0x7dd107f4]
  418342:	mov    edi,0x669abaef
  418347:	mov    ds:0x8378a1c9,eax
  41834c:	retf   0x280d
  41834f:	xor    DWORD PTR [esi-0x31],edx
  418352:	mov    dl,0xd4
  418354:	push   esi
  418355:	mov    ebx,0x42e616db
  41835a:	sahf   
  41835b:	cmc    
  41835c:	jmp    0x3b04a73
  418361:	fadd   QWORD PTR [esi]
  418363:	in     al,0x7a
  418365:	sbb    BYTE PTR ds:0xa0b964c2,dl
  41836b:	dec    ecx
  41836c:	and    al,0xda
  41836e:	xor    ebp,edi
  418370:	pop    ebp
  418371:	inc    edi
  418372:	lea    ebp,[eax-0x26]
  418375:	out    dx,al
  418376:	jb     0x4183b9
  418378:	cmovno esp,DWORD PTR [ebx-0x55]
  41837c:	rol    ebp,0x7
  41837f:	dec    ebp
  418380:	adc    BYTE PTR [esi-0x3526b807],ch
  418386:	test   eax,0xcc0d2f56
  41838b:	xor    al,0x2f
  41838d:	pop    eax
  41838e:	dec    edx
  41838f:	pop    ss
  418390:	mov    eax,ds:0x840a496e
  418395:	inc    ecx
  418396:	jl     0x4183eb
  418398:	test   ecx,edi
  41839a:	push   ebx
  41839b:	ret    0xe94d
  41839e:	nop
  41839f:	push   ebx
  4183a0:	xor    BYTE PTR [edx+0x43],ah
  4183a3:	test   DWORD PTR [ecx],eax
  4183a5:	in     eax,0x37
  4183a7:	das    
  4183a8:	push   es
  4183a9:	pop    edx
  4183aa:	push   esi
  4183ab:	loopne 0x418366
  4183ad:	push   esp
  4183ae:	cmp    al,0xaa
  4183b0:	mov    dl,BYTE PTR [edi+0x16]
  4183b3:	mov    db5,esp
  4183b6:	xchg   ebx,eax
  4183b7:	ds mov cl,0xf0
  4183ba:	ficomp WORD PTR ds:0x696c8811
  4183c0:	ds into 
  4183c2:	mov    DWORD PTR [edx+0x18],ebp
  4183c5:	clc    
  4183c6:	dec    edx
  4183c7:	popf   
  4183c8:	out    dx,al
  4183c9:	adc    ecx,esp
  4183cb:	div    eax
  4183cd:	xchg   DWORD PTR [ebp+0x39],esp
  4183d0:	or     DWORD PTR [edx-0x508a81],ebx
  4183d6:	retf   
  4183d7:	stc    
  4183d8:	jg     0x418454
  4183da:	dec    ebp
  4183db:	retf   0xc434
  4183de:	iret   
  4183df:	mov    al,ds:0x6ea29a12
  4183e4:	xchg   esi,eax
  4183e5:	shl    BYTE PTR [ecx],cl
  4183e7:	and    al,0x87
  4183e9:	xor    BYTE PTR [ebx],ah
  4183eb:	loop   0x41837e
  4183ed:	xchg   BYTE PTR [ebp+0x61],dh
  4183f0:	push   esi
  4183f1:	mov    BYTE PTR [edi],ch
  4183f3:	call   0x33acb23c
  4183f8:	in     al,dx
  4183f9:	pop    ds
  4183fa:	xchg   edx,esp
  4183fc:	lock cli 
  4183fe:	arpl   cx,bp
  418400:	or     DWORD PTR ds:0x76f6e617,eax
  418406:	xchg   edi,eax
  418407:	push   edx
  418408:	jmp    0x110e:0xf344c3e2
  41840f:	add    eax,0xc1e35b1
  418414:	fcomp  QWORD PTR [edx-0x3312607f]
  41841a:	xor    DWORD PTR [eax+0x1806bc6f],ebx
  418420:	cmp    DWORD PTR [edi-0x164bba90],eax
  418426:	cmp    cl,BYTE PTR [ebx]
  418428:	jns    0x4183ed
  41842a:	mov    ebp,0x4f7ec328
  41842f:	jmp    0xa1bb30b7
  418434:	xchg   ebx,eax
  418435:	or     esp,0x6f6221b2
  41843b:	adc    DWORD PTR [esi-0x70],0xfee62f51
  418442:	mov    al,ds:0x12c34b59
  418447:	stos   BYTE PTR es:[edi],al
  418448:	push   ds
  418449:	int    0x1f
  41844b:	enter  0xafdd,0xcb
  41844f:	fimul  DWORD PTR [eax]
  418451:	jbe    0x4183e4
  418453:	fist   DWORD PTR [ebx]
  418455:	in     eax,dx
  418456:	mov    al,ds:0xb2c0e1b8
  41845b:	dec    ebx
  41845c:	mov    ebp,0xd2b0d61e
  418461:	(bad)  
  418462:	jo     0x418455
  418464:	jne    0x418466
  418466:	stos   BYTE PTR es:[edi],al
  418467:	aam    0xe0
  418469:	xchg   esp,eax
  41846a:	iret   
  41846b:	push   ebx
  41846c:	jmp    0x2b0b1df3
  418471:	ret    0xb59f
  418474:	loopne 0x41849f
  418476:	inc    esi
  418477:	cmp    DWORD PTR [ecx-0x54],edi
  41847a:	adc    ah,al
  41847c:	cmp    bl,BYTE PTR [edx]
  41847e:	scas   eax,DWORD PTR es:[edi]
  41847f:	pcmpeqw mm4,mm7
  418482:	and    al,0xc5
  418484:	sbb    dl,BYTE PTR [edi]
  418486:	leave  
  418487:	imul   DWORD PTR [edi+0x75269eb5]
  41848d:	(bad)  
  41848e:	out    0xbd,al
  418490:	xor    DWORD PTR [edi-0x66df381d],esp
  418496:	dec    ecx
  418497:	js     0x418489
  418499:	xor    ebp,DWORD PTR [esi+0x78]
  41849c:	imul   eax,DWORD PTR [edi],0xde03e7dc
  4184a2:	jl     0x4184a7
  4184a4:	fdiv   DWORD PTR [eax]
  4184a6:	scas   al,BYTE PTR es:[edi]
  4184a7:	fwait
  4184a8:	cmp    dl,BYTE PTR [eax-0xd115e94]
  4184ae:	(bad)  
  4184af:	rol    DWORD PTR [ecx+0x61],1
  4184b2:	push   esp
  4184b3:	imul   edi
  4184b5:	retf   0xf3b3
  4184b8:	adc    dl,cl
  4184ba:	ins    BYTE PTR es:[edi],dx
  4184bb:	fsub   DWORD PTR [edx+edx*1]
  4184be:	jbe    0x41852c
  4184c0:	shr    BYTE PTR [edi+0x2183d6e5],cl
  4184c6:	and    bl,BYTE PTR [eax-0x19]
  4184c9:	mov    bl,0x88
  4184cb:	pop    ebx
  4184cc:	and    eax,0x309d27ba
  4184d1:	lahf   
  4184d2:	mov    cl,0x6f
  4184d4:	(bad)  
  4184d5:	jmp    0xce3a:0x5c1d1017
  4184dc:	or     eax,0x882b34d0
  4184e1:	sti    
  4184e2:	sub    al,0xd
  4184e4:	(bad)  
  4184e5:	push   cs
  4184e6:	enter  0xd3a4,0xd0
  4184ea:	inc    edi
  4184eb:	hlt    
  4184ec:	xor    esp,0xe71ca488
  4184f2:	mov    bh,0x99
  4184f4:	add    bh,BYTE PTR [eax]
  4184f6:	pop    edi
  4184f7:	jg     0x41854b
  4184f9:	lahf   
  4184fa:	mov    edi,0x36af90ff
  4184ff:	pushf  
  418500:	stos   BYTE PTR es:[edi],al
  418501:	cmp    ebp,DWORD PTR [edi+ebx*1]
  418504:	xchg   edi,eax
  418505:	iret   
  418506:	inc    edi
  418507:	int3   
  418508:	aad    0x4d
  41850a:	iret   
  41850b:	shl    BYTE PTR [ebp-0x6877e046],0xaa
  418512:	fcmovnu st,st(4)
  418514:	(bad)  
  418515:	gs mov ebp,0x97842989
  41851b:	clc    
  41851c:	fcomp  DWORD PTR [edi+0x4a]
  41851f:	ret    0x5570
  418522:	mov    bl,0xe0
  418524:	adc    ah,BYTE PTR [edi-0x405d0e11]
  41852a:	jae    0x41853b
  41852c:	push   eax
  41852d:	cwde   
  41852e:	mov    bl,0xb9
  418530:	repz ret 
  418532:	and    ebx,esp
  418534:	je     0x418505
  418536:	cmp    BYTE PTR [edi-0x13],bl
  418539:	js     0x418524
  41853b:	pushf  
  41853c:	or     eax,ecx
  41853e:	dec    esi
  41853f:	enter  0x75ad,0x44
  418543:	cmp    ah,0x69
  418546:	fwait
  418547:	inc    esp
  418548:	addps  xmm0,XMMWORD PTR [ebp-0x2b33d9f1]
  41854f:	call   0xee47:0xca7cb86
  418556:	pushf  
  418557:	or     eax,0x53f95927
  41855c:	mov    bl,0x8c
  41855e:	jp     0x418509
  418560:	or     esp,DWORD PTR [ebx-0x3207face]
  418566:	and    bh,cl
  418568:	das    
  418569:	lock mov bl,0xe8
  41856c:	arpl   WORD PTR [eax],sp
  41856e:	popf   
  41856f:	add    al,0x29
  418571:	push   ss
  418572:	xor    eax,0xb01264a5
  418577:	and    BYTE PTR [esi],dh
  418579:	fwait
  41857a:	xchg   DWORD PTR ds:0xd0c8d471,esi
  418580:	(bad)  
  418581:	cwde   
  418582:	mov    ecx,0xfb4e896b
  418587:	stc    
  418588:	je     0x418511
  41858a:	xchg   esi,eax
  41858b:	icebp  
  41858c:	and    esi,esp
  41858e:	xlat   BYTE PTR ds:[ebx]
  41858f:	xor    DWORD PTR [eax+0x527348a9],ebx
  418595:	push   ebx
  418596:	pop    es
  418597:	retf   
  418598:	mov    esp,0x4aa3ce72
  41859d:	lods   al,BYTE PTR ds:[esi]
  41859e:	clc    
  41859f:	push   esp
  4185a0:	loopne 0x41857c
  4185a2:	mov    eax,0x24a82bfc
  4185a7:	adc    eax,0x84487f1f
  4185ac:	push   edx
  4185ad:	pop    esp
  4185ae:	pop    es
  4185af:	or     ah,BYTE PTR [ebx]
  4185b1:	repz rcl BYTE PTR [ecx+0x23a3ba06],cl
  4185b8:	cli    
  4185b9:	ja     0x4185cc
  4185bb:	sbb    esp,DWORD PTR [eax-0x67]
  4185be:	push   eax
  4185bf:	mov    edi,0xaeb0394b
  4185c4:	and    eax,0x8fc74f75
  4185c9:	push   eax
  4185ca:	adc    bh,ah
  4185cc:	(bad)  
  4185cd:	aad    0x3e
  4185cf:	sbb    eax,DWORD PTR [edi-0x64db788e]
  4185d5:	push   ebx
  4185d6:	sub    al,al
  4185d8:	push   edi
  4185d9:	lods   eax,DWORD PTR ds:[esi]
  4185da:	pop    edx
  4185db:	mov    al,BYTE PTR [ecx-0x39e07095]
  4185e1:	jg     0x418646
  4185e3:	in     eax,dx
  4185e4:	push   edi
  4185e5:	push   eax
  4185e6:	pop    ss
  4185e7:	mov    edi,0xa3d3007
  4185ec:	add    DWORD PTR [edi+ebp*4-0x60178577],0xe86d5cb2
  4185f7:	cmp    BYTE PTR [ecx+ecx*1],ah
  4185fa:	pop    ebp
  4185fb:	adc    eax,0xdb78b377
  418600:	loope  0x418670
  418602:	xlat   BYTE PTR ds:[ebx]
  418603:	pop    ebp
  418604:	xor    esp,DWORD PTR [edx]
  418606:	jg     0x4185a4
  418608:	mov    al,0x5b
  41860a:	or     al,BYTE PTR [edx]
  41860c:	mov    ah,BYTE PTR [esi+esi*8]
  41860f:	cmp    al,0x33
  418611:	adc    DWORD PTR [edx-0x2f9e885e],ebx
  418617:	mov    ds:0x91ce3da3,eax
  41861c:	inc    ebx
  41861d:	inc    ecx
  41861e:	jl     0x418633
  418620:	mov    dl,0xd3
  418622:	hlt    
  418623:	test   eax,0xda418522
  418628:	loop   0x418659
  41862a:	ror    BYTE PTR [esi+eax*4+0x567622e4],1
  418631:	sahf   
  418632:	inc    edi
  418633:	sub    bh,BYTE PTR [esi-0x6]
  418636:	xchg   esi,eax
  418637:	dec    ecx
  418638:	push   edx
  418639:	pop    ecx
  41863a:	pop    esp
  41863b:	fadd   DWORD PTR [ecx+0x4cfe37be]
  418641:	dec    ebp
  418642:	loopne 0x41869a
  418644:	loope  0x4185fd
  418646:	xlat   BYTE PTR ds:[ebx]
  418647:	jae    0x4185e1
  418649:	test   esp,0x9d7464b2
  41864f:	dec    edx
  418650:	shr    BYTE PTR [ecx+0x62],0x18
  418654:	and    edx,edi
  418656:	ret    0x4177
  418659:	cdq    
  41865a:	mov    bl,0xb
  41865c:	mov    eax,0x3e2f8c89
  418661:	in     al,0x13
  418663:	push   ebp
  418664:	stos   DWORD PTR es:[edi],eax
  418665:	mov    ecx,eax
  418667:	or     esi,DWORD PTR [ebx-0x11]
  41866a:	jmp    0x418682
  41866c:	imul   BYTE PTR [ebp+0x60]
  41866f:	mov    ch,0xd8
  418671:	cli    
  418672:	add    eax,edx
  418674:	lock add DWORD PTR [ecx],0x2
  418678:	in     eax,dx
  418679:	in     eax,dx
  41867a:	push   cs
  41867b:	aam    0x31
  41867d:	add    ebx,DWORD PTR [esi]
  41867f:	cmp    esp,eax
  418681:	outs   dx,DWORD PTR ds:[esi]
  418682:	imul   DWORD PTR [ebx+0x7be2800]
  418688:	push   eax
  418689:	mov    ah,0x19
  41868b:	jmp    FWORD PTR [esi+0x62]
  41868e:	xchg   ebx,eax
  41868f:	sub    eax,0x3d0c4a73
  418694:	sub    cl,ah
  418696:	mov    BYTE PTR [edx-0x720bc081],ah
  41869c:	push   eax
  41869d:	inc    ebp
  41869e:	mov    bh,0xfa
  4186a0:	je     0x418687
  4186a2:	jmp    0x63945f8
  4186a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186a8:	clc    
  4186a9:	test   eax,0xfb74a837
  4186ae:	arpl   WORD PTR [ecx-0x729a5f3a],ax
  4186b4:	sti    
  4186b5:	jp     0x418695
  4186b7:	aad    0xf1
  4186b9:	retf   0x8ee9
  4186bc:	mov    al,0x4c
  4186be:	sbb    al,0x5f
  4186c0:	into   
  4186c1:	lock dec eax
  4186c3:	pop    esp
  4186c4:	ror    DWORD PTR [edx+0x71],cl
  4186c7:	and    bl,BYTE PTR fs:[ebx+0x55]
  4186cb:	mov    edx,0xac21375c
  4186d0:	ins    DWORD PTR es:[edi],dx
  4186d1:	mov    ecx,0xcebe6658
  4186d6:	dec    edi
  4186d7:	rcl    DWORD PTR [ecx+0x208798eb],1
  4186dd:	ret    
  4186de:	int    0x48
  4186e0:	pusha  
  4186e1:	repnz mov DWORD PTR [edi],0xf5587e08
  4186e8:	adc    al,0xdc
  4186ea:	adc    DWORD PTR ds:[esp+edi*2],0x9c66f54e
  4186f2:	inc    ebp
  4186f3:	lods   al,BYTE PTR ds:[esi]
  4186f4:	mov    al,0x9b
  4186f6:	xlat   BYTE PTR ds:[ebx]
  4186f7:	fs out 0x90,al
  4186fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186fb:	xchg   ecx,eax
  4186fc:	(bad)  
  4186fd:	mov    ds:0x334906be,eax
  418702:	sub    al,0xa2
  418704:	inc    eax
  418705:	add    BYTE PTR [ebp-0x77],cl
  418708:	inc    esi
  418709:	stos   DWORD PTR es:[edi],eax
  41870a:	das    
  41870b:	xor    BYTE PTR ds:0x80db1471,dl
  418711:	lds    ecx,FWORD PTR [eax-0x5ce70b59]
  418717:	push   ebp
  418718:	mov    ebx,0xb87de1e7
  41871d:	push   es
  41871e:	gs mov esi,0x42aabda7
  418724:	cs jecxz 0x4186dc
  418727:	paddsw mm1,QWORD PTR [edx-0x73]
  41872b:	(bad)  
  41872d:	pop    eax
  41872e:	hlt    
  41872f:	ins    BYTE PTR es:[edi],dx
  418730:	cwde   
  418731:	cmp    dl,BYTE PTR [eax-0x50]
  418734:	retf   
  418735:	retf   0xf48d
  418738:	fcom   QWORD PTR [ecx-0x759e45e2]
  41873e:	fcom   QWORD PTR [ebp+0x10e4dc2d]
  418744:	sbb    edx,DWORD PTR [ecx+ecx*2-0x72a4e26b]
  41874b:	jmp    0x15296a28
  418750:	sbb    eax,edi
  418752:	dec    ebx
  418753:	lock adc al,0xb0
  418756:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  418758:	jnp    0x41874f
  41875a:	xchg   ecx,eax
  41875b:	add    eax,0x81d690c4
  418760:	mov    ebp,0x40d19555
  418765:	xchg   edi,eax
  418766:	cld    
  418767:	les    eax,FWORD PTR [ebp-0x11]
  41876a:	cmp    edi,edx
  41876c:	out    dx,eax
  41876d:	jg     0x4187bf
  41876f:	add    eax,0xfeeec7a0
  418774:	arpl   cx,dx
  418776:	les    esi,FWORD PTR [esp+ebp*2]
  418779:	test   eax,0xe577d7
  41877e:	mov    eax,0x835463bf
  418783:	xchg   BYTE PTR [eax+0x37],ah
  418786:	rcl    BYTE PTR [ebp+0x4],0x52
  41878a:	xchg   BYTE PTR [esi],ah
  41878c:	aaa    
  41878d:	or     eax,0xb7c0a0db
  418792:	dec    ebp
  418793:	ds cli 
  418795:	out    dx,eax
  418796:	enter  0x60a7,0xdf
  41879a:	xacquire xchg DWORD PTR [esi+eax*4],eax
  41879e:	mov    ecx,0x9685585e
  4187a3:	mov    ds:0x3ec9688c,eax
  4187a8:	jae    0x4187c2
  4187aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187ab:	div    BYTE PTR [edx+0x6f]
  4187ae:	xor    ch,BYTE PTR [ebp-0x28c46925]
  4187b4:	cmp    DWORD PTR [esi+0x5f],edx
  4187b7:	jle    0x88f4e848
  4187bd:	cmp    al,BYTE PTR [esi+0x59]
  4187c0:	mov    ah,0x4f
  4187c2:	lds    edi,FWORD PTR [esi+0x4f]
  4187c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187c6:	push   eax
  4187c7:	mov    WORD PTR [ebp+0x1df79541],ss
  4187cd:	aad    0xbf
  4187cf:	adc    DWORD PTR [ecx],0xffffffaa
  4187d2:	sbb    BYTE PTR [esi],cl
  4187d4:	std    
  4187d5:	leave  
  4187d6:	pop    ss
  4187d7:	mov    WORD PTR [eax+0x604baea1],?
  4187dd:	mov    bl,0xc
  4187df:	cld    
  4187e0:	test   BYTE PTR [ebx],ch
  4187e2:	add    ebp,edi
  4187e4:	and    BYTE PTR [ecx+0x18],cl
  4187e7:	cmp    al,0xbc
  4187e9:	or     eax,0xa68dda5b
  4187ee:	mov    al,ds:0xb7917a90
  4187f3:	mov    ds:0x62b96afa,eax
  4187f8:	dec    ebp
  4187f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187fa:	pop    ecx
  4187fb:	cmp    BYTE PTR [esi],0xd6
  4187fe:	ss popf 
  418800:	jmp    0x63531f3c
  418805:	std    
  418806:	test   eax,0xbaceb164
  41880b:	adc    dl,BYTE PTR [eax-0x1ea49507]
  418811:	mov    bl,0x8a
  418813:	inc    eax
  418814:	rol    cl,1
  418816:	sti    
  418817:	pop    ecx
  418818:	push   eax
  418819:	mov    ecx,0xdbf90e26
  41881e:	mov    DWORD PTR [ecx-0x48],esp
  418821:	call   0x1f20:0x579b498e
  418828:	cmp    eax,0x811fd218
  41882d:	jmp    0x481:0xd0b63412
  418834:	dec    esp
  418835:	jmp    0xcb77:0x57ca5ab5
  41883c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41883d:	cs push edx
  41883f:	pusha  
  418840:	xlat   BYTE PTR ds:[ebx]
  418841:	and    cl,BYTE PTR [edx-0x4f27622a]
  418847:	addr16 cmp al,0xc0
  41884a:	or     DWORD PTR [edi-0x2d],ebx
  41884d:	sbb    ecx,edx
  41884f:	ins    BYTE PTR es:[edi],dx
  418850:	and    BYTE PTR [edx+ecx*4-0x25],cl
  418854:	sbb    ecx,DWORD PTR ds:0xab12c5db
  41885a:	daa    
  41885b:	mov    al,0x62
  41885d:	pop    ecx
  41885e:	ss push eax
  418860:	ins    DWORD PTR es:[edi],dx
  418861:	icebp  
  418862:	and    DWORD PTR [eax-0x70],0x63
  418866:	mov    BYTE PTR [edi],al
  418868:	cmp    DWORD PTR [eax+eiz*4],ebp
  41886b:	pop    esp
  41886c:	test   eax,0x6d3152f1
  418871:	addr16 f2xm1 
  418874:	cmp    ebp,DWORD PTR ds:[bx+si]
  418878:	sub    eax,0xc02cb3a3
  41887d:	je     0x4188d9
  41887f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418880:	add    BYTE PTR [edi],ah
  418882:	in     al,0x80
  418884:	loop   0x418830
  418886:	mov    WORD PTR [edi+0x31],?
  418889:	inc    edx
  41888a:	adc    al,BYTE PTR [ebp+0x3474e3be]
  418890:	xor    BYTE PTR [ecx],dh
  418892:	ins    BYTE PTR es:[edi],dx
  418893:	repz sub eax,0x76ae3c65
  418899:	or     BYTE PTR [ecx-0x6a],0xb9
  41889d:	in     eax,dx
  41889e:	mov    eax,0x3244879
  4188a3:	dec    esp
  4188a4:	sti    
  4188a5:	fs sbb al,0x5
  4188a8:	inc    edx
  4188a9:	push   esi
  4188aa:	mov    WORD PTR ds:[ecx+ebp*4-0x4e507000],cs
  4188b2:	stc    
  4188b3:	gs jnp 0x4188d9
  4188b6:	loopne 0x4188e4
  4188b8:	ret    0xfd0d
  4188bb:	das    
  4188bc:	adc    BYTE PTR [esi+0x7b],dh
  4188bf:	jbe    0x41891f
  4188c1:	ror    ecx,1
  4188c3:	sbb    edi,esp
  4188c5:	xchg   BYTE PTR [edi],dl
  4188c7:	out    0xe3,al
  4188c9:	and    BYTE PTR [eax+0x4c3751f8],bh
  4188cf:	scas   al,BYTE PTR es:[edi]
  4188d0:	popa   
  4188d1:	lods   eax,DWORD PTR ds:[esi]
  4188d2:	daa    
  4188d3:	or     al,0x69
  4188d5:	mov    ebx,0xda5abf3c
  4188da:	aam    0x10
  4188dc:	das    
  4188dd:	jge    0x4188f1
  4188df:	and    al,BYTE PTR [esi]
  4188e1:	pop    eax
  4188e2:	add    DWORD PTR [eax+0x30],ebp
  4188e5:	sbb    eax,0x1443f9dd
  4188ea:	in     al,dx
  4188eb:	je     0x418902
  4188ed:	dec    eax
  4188ee:	sbb    al,0xc
  4188f0:	std    
  4188f1:	mov    ah,0x90
  4188f3:	cmc    
  4188f4:	(bad)  
  4188f5:	mov    esp,?
  4188f7:	mov    al,0x5b
  4188f9:	jmp    0x3eb8:0x1f90035b
  418900:	mov    BYTE PTR [ebx-0x368dce6c],ah
  418906:	or     ch,BYTE PTR [ebp+0xd]
  418909:	addr16 inc esi
  41890b:	(bad)  
  41890c:	mov    bl,0x54
  41890e:	inc    ecx
  41890f:	pushf  
  418910:	inc    edi
  418911:	cmc    
  418912:	mov    ecx,0xbb547141
  418917:	es xchg ecx,eax
  418919:	cmp    eax,0xda636f7a
  41891e:	xchg   esp,eax
  41891f:	mov    ecx,0x45a2cfc9
  418924:	shl    edx,0x9
  418927:	fwait
  418928:	ja     0x41891a
  41892a:	xor    al,0x79
  41892c:	imul   DWORD PTR [edi-0xf170cae]
  418932:	sahf   
  418933:	xor    DWORD PTR [esp+edx*1],ecx
  418936:	dec    ecx
  418937:	xchg   ebp,eax
  418938:	aas    
  418939:	daa    
  41893a:	call   0xe8c803ec
  41893f:	loop   0x418994
  418941:	dec    ebx
  418942:	push   edi
  418943:	pop    esi
  418944:	mov    al,ds:0xe3272907
  418949:	xlat   BYTE PTR ds:[ebx]
  41894a:	add    eax,0x39c383cd
  41894f:	jb     0x418954
  418951:	sti    
  418952:	cmc    
  418953:	js     0x4188f2
  418955:	add    DWORD PTR [esp+ecx*1+0x1ad141b9],esi
  41895c:	nop
  41895d:	sbb    eax,0x833e7f8d
  418962:	xchg   ebx,eax
  418963:	pop    ebp
  418964:	sbb    eax,0x7b970d8a
  418969:	nop
  41896a:	mov    ebp,0xf763b845
  41896f:	mul    bh
  418971:	in     eax,0xeb
  418973:	je     0x418922
  418975:	xchg   esp,eax
  418976:	shr    BYTE PTR [esi],1
  418978:	mov    ds:0xe4283786,eax
  41897d:	fcomp  DWORD PTR [ecx]
  41897f:	loop   0x41890e
  418981:	(bad)  
  418982:	ret    
  418983:	mov    esi,0xd28dbcbe
  418988:	loop   0x418926
  41898a:	in     eax,0x92
  41898c:	mov    DWORD PTR [esi],ebp
  41898e:	mov    edi,0x650365d9
  418993:	dec    ebp
  418994:	scas   al,BYTE PTR es:[edi]
  418995:	out    0x7,al
  418997:	xor    ecx,DWORD PTR [eax+ebp*2-0x2]
  41899b:	jae    0x4189f3
  41899d:	pusha  
  41899e:	xchg   edx,eax
  41899f:	in     al,dx
  4189a0:	sbb    eax,DWORD PTR [edx]
  4189a2:	fsub   DWORD PTR [esi-0xb93db3d]
  4189a8:	cwde   
  4189a9:	sub    cl,0x7f
  4189ac:	mov    al,ds:0xd5e075a2
  4189b1:	int    0xde
  4189b3:	adc    BYTE PTR [edi-0x7f],bl
  4189b6:	push   ds
  4189b7:	mov    cl,0x98
  4189b9:	cld    
  4189ba:	inc    edi
  4189bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189bc:	push   edx
  4189bd:	sbb    esi,DWORD PTR [edi]
  4189bf:	and    eax,0x59f80953
  4189c4:	(bad)  
  4189c5:	xlat   BYTE PTR ds:[ebx]
  4189c6:	dec    esi
  4189c7:	adc    ch,bh
  4189c9:	loope  0x418a02
  4189cb:	jae    0x4189f2
  4189cd:	in     al,0xd3
  4189cf:	add    DWORD PTR [edx],ebp
  4189d1:	mov    esp,0x8206a6d7
  4189d6:	inc    edi
  4189d7:	pop    es
  4189d8:	clc    
  4189d9:	dec    eax
  4189da:	aam    0xb6
  4189dc:	imul   edi,DWORD PTR [ecx+edi*8-0x32],0x5f771a26
  4189e4:	jecxz  0x418a62
  4189e6:	aas    
  4189e7:	stc    
  4189e8:	push   0x532894b9
  4189ed:	call   0x1178:0x7403b89
  4189f4:	lahf   
  4189f5:	mov    cl,0x13
  4189f7:	ja     0x41899d
  4189f9:	push   ebp
  4189fa:	and    BYTE PTR [edx-0x3f],dh
  4189fd:	es mov ch,0xdc
  418a00:	cld    
  418a01:	cmp    al,0xd9
  418a03:	jge    0x418a6a
  418a05:	pop    ebx
  418a06:	leave  
  418a07:	out    0xec,eax
  418a09:	hlt    
  418a0a:	lea    edi,[esi+0x606941d4]
  418a10:	mov    bh,0x32
  418a12:	(bad)  
  418a13:	int    0x75
  418a15:	in     eax,dx
  418a16:	cmovle edx,DWORD PTR [edx+ebx*1-0x75]
  418a1b:	pop    es
  418a1c:	(bad)  
  418a1d:	hlt    
  418a1e:	fidiv  WORD PTR [ecx]
  418a20:	icebp  
  418a21:	and    bh,BYTE PTR [ebx]
  418a23:	fcmovb st,st(1)
  418a25:	jne    0x418a06
  418a27:	mov    BYTE PTR [eax],cl
  418a29:	inc    ebx
  418a2a:	push   ss
  418a2b:	xor    ebp,edi
  418a2d:	dec    ecx
  418a2e:	push   ebx
  418a2f:	fisttp QWORD PTR [edi]
  418a31:	pop    esi
  418a32:	xor    al,0xeb
  418a34:	shr    DWORD PTR [esi+0x70df1ea5],1
  418a3a:	popf   
  418a3b:	gs fwait
  418a3d:	mov    ch,0x25
  418a3f:	push   ebx
  418a40:	mov    gs,esp
  418a42:	loop   0x4189d2
  418a44:	mov    al,ds:0xd02fcaaa
  418a49:	jne    0x418a46
  418a4b:	push   0x8522c79d
  418a50:	push   eax
  418a51:	stos   DWORD PTR es:[edi],eax
  418a52:	dec    ecx
  418a53:	jg     0x418a9c
  418a55:	adc    edi,DWORD PTR [esi+0x7e]
  418a58:	fsub   DWORD PTR [esi-0x3e]
  418a5b:	push   esp
  418a5c:	push   DWORD PTR [edx-0x6f]
  418a5f:	xchg   ecx,eax
  418a60:	dec    ebp
  418a61:	xor    BYTE PTR [ebp+0x3739d19],ah
  418a67:	sbb    ebp,esi
  418a69:	sub    DWORD PTR [edi],esi
  418a6b:	(bad)  
  418a6d:	cmc    
  418a6e:	cmp    cl,dh
  418a70:	xchg   cl,dl
  418a72:	push   ss
  418a73:	dec    edx
  418a74:	sti    
  418a75:	rcl    DWORD PTR [ebp+0x4acef6bd],1
  418a7b:	jmp    0x418af3
  418a7d:	js     0x418ae1
  418a7f:	jns    0x418ad0
  418a81:	and    dh,BYTE PTR [edx-0x7e9c5a0d]
  418a87:	cmp    BYTE PTR [ebp+0x674ed0de],cl
  418a8d:	shl    BYTE PTR [ebx],1
  418a8f:	loope  0x418afb
  418a91:	test   DWORD PTR ds:0xbd3f8063,ebx
  418a97:	pop    ecx
  418a98:	dec    eax
  418a99:	enter  0x27e9,0x3d
  418a9d:	adc    bl,BYTE PTR [ebp+0x11]
  418aa0:	and    bh,BYTE PTR [ebx-0x4078e86e]
  418aa6:	lods   al,BYTE PTR ds:[esi]
  418aa7:	je     0x418ac3
  418aa9:	lods   al,BYTE PTR ds:[esi]
  418aaa:	call   0x4e90:0x6084812e
  418ab1:	sub    dh,BYTE PTR [edi-0x64]
  418ab4:	mov    bh,0xf3
  418ab6:	xor    eax,esi
  418ab8:	mov    al,ah
  418aba:	sbb    BYTE PTR [eax+0x317ba926],bl
  418ac0:	sub    DWORD PTR [esp+ebx*4-0x7d],edx
  418ac4:	dec    DWORD PTR ds:[edx-0x5]
  418ac8:	mov    al,ds:0xf96f9a0
  418acd:	fucomip st,st(1)
  418acf:	(bad)
  418ad3:	(bad)  
  418ad4:	mov    ?,WORD PTR [ebp+eiz*4+0x2b9f4517]
  418adb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418adc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418add:	fild   QWORD PTR [ebp-0x44973f40]
  418ae3:	cmp    eax,0x605a30de
  418ae8:	popa   
  418ae9:	fnstenv [eax]
  418aeb:	inc    ebp
  418aec:	fidiv  WORD PTR [edx+0x56adbc9f]
  418af2:	rol    DWORD PTR [edx],1
  418af4:	rol    bh,cl
  418af6:	shl    BYTE PTR ds:0x83ae58d0,cl
  418afc:	jge    0x418b06
  418afe:	data16 clc 
  418b00:	and    BYTE PTR [ebx],dl
  418b02:	repnz outs dx,DWORD PTR ds:[esi]
  418b04:	pop    ebp
  418b05:	fwait
  418b06:	mov    eax,ds:0xc88d2807
  418b0b:	inc    ebp
  418b0c:	out    dx,eax
  418b0d:	adc    DWORD PTR [esi],esi
  418b0f:	inc    edx
  418b10:	ficom  DWORD PTR [ebp+0x5]
  418b13:	je     0x418b17
  418b15:	and    al,0x54
  418b17:	pushf  
  418b18:	sar    ebp,1
  418b1a:	ds and eax,0xe87780bb
  418b20:	stos   BYTE PTR es:[edi],al
  418b21:	shl    BYTE PTR [ebp-0x4f],cl
  418b24:	push   esi
  418b25:	and    esp,DWORD PTR [ebp-0x74]
  418b28:	aas    
  418b29:	loope  0x418b33
  418b2b:	(bad)  
  418b2c:	jmp    0xd2b7:0x90a4b8f5
  418b33:	add    DWORD PTR [eax],eax
  418b35:	aad    0xa5
  418b37:	je     0x418b5e
  418b39:	adc    DWORD PTR [esi+0x7b8bede1],ecx
  418b3f:	call   0x2832:0xdac4ecf7
  418b46:	popa   
  418b47:	lods   eax,DWORD PTR ds:[esi]
  418b48:	push   ds
  418b49:	test   DWORD PTR [ebx],0x95c708a
  418b4f:	cwde   
  418b50:	mov    ah,0x11
  418b52:	push   esp
  418b53:	dec    eax
  418b54:	inc    edi
  418b55:	inc    esp
  418b56:	xor    eax,0x677a4ae
  418b5b:	loope  0x418b5a
  418b5d:	sbb    ch,BYTE PTR [ebx+0x6d044300]
  418b63:	out    0x5a,al
  418b65:	pop    es
  418b66:	test   DWORD PTR ds:0xd1f985a2,ebx
  418b6c:	jae    0x418b4a
  418b6e:	add    cl,BYTE PTR [ecx+0x45]
  418b71:	leave  
  418b72:	jae    0x418bbb
  418b74:	cmc    
  418b75:	sub    BYTE PTR [esi-0x23f518bf],dh
  418b7b:	mov    ah,0xa6
  418b7d:	(bad)  
  418b7e:	dec    edi
  418b7f:	push   edi
  418b80:	(bad)  
  418b81:	jle    0x418b3d
  418b83:	arpl   WORD PTR [edi],si
  418b85:	jl     0x418b9f
  418b87:	aam    0x4b
  418b89:	push   cs
  418b8a:	xor    dh,BYTE PTR [ecx]
  418b8c:	outs   dx,DWORD PTR ds:[esi]
  418b8d:	jl     0x418b43
  418b8f:	fcmovnu st,st(1)
  418b91:	jmp    0x57909147
  418b96:	outs   dx,BYTE PTR ds:[esi]
  418b97:	mov    ah,0x33
  418b99:	mov    esp,0xc5c557fe
  418b9e:	jno    0x418b71
  418ba0:	fldpi  
  418ba2:	and    edx,ebx
  418ba4:	inc    ebp
  418ba5:	loop   0x418b5e
  418ba7:	(bad)  
  418ba8:	mov    dh,0x67
  418baa:	es jnp 0x418bb2
  418bad:	inc    edi
  418bae:	pop    edx
  418baf:	clc    
  418bb0:	xor    BYTE PTR [ecx+0x6529e553],0xce
  418bb7:	pop    ebp
  418bb8:	cmc    
  418bb9:	push   ds
  418bba:	mov    cl,0xc7
  418bbc:	stos   DWORD PTR es:[edi],eax
  418bbd:	jno    0x418c24
  418bbf:	ret    
  418bc0:	ins    DWORD PTR es:[edi],dx
  418bc1:	and    dh,dl
  418bc3:	jmp    0x77b5c220
  418bc8:	and    BYTE PTR [ecx],al
  418bca:	jp     0x418c40
  418bcc:	les    ecx,FWORD PTR [edx]
  418bce:	xchg   edx,eax
  418bcf:	icebp  
  418bd0:	aad    0xd3
  418bd2:	adc    bh,BYTE PTR ds:0x8da889d0
  418bd8:	inc    edx
  418bd9:	adc    DWORD PTR [ebp-0x22],edx
  418bdc:	or     al,0x98
  418bde:	aad    0x5c
  418be0:	jnp    0x418c34
  418be2:	mov    DWORD PTR [edi+ebx*4],0xfa1cc723
  418be9:	popf   
  418bea:	jb     0x418bc3
  418bec:	test   eax,0x5b3ce48e
  418bf1:	js     0x418be9
  418bf3:	int    0xd8
  418bf5:	scas   eax,DWORD PTR es:[edi]
  418bf6:	scas   eax,DWORD PTR es:[edi]
  418bf7:	bound  edi,QWORD PTR [ebp+0x6d1e69c8]
  418bfd:	xchg   edx,eax
  418bfe:	sahf   
  418bff:	pusha  
  418c00:	sub    eax,0xf4876d9c
  418c05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c06:	mov    bl,0x44
  418c08:	(bad)  
  418c0a:	dec    ebp
  418c0b:	imul   ebx,DWORD PTR [edx],0x6
  418c0e:	stc    
  418c0f:	mov    al,ds:0x23a7579f
  418c14:	inc    ecx
  418c15:	mov    ds:0x2b70e99b,al
  418c1a:	es add al,0xb2
  418c1d:	or     BYTE PTR [edx-0x25],bl
  418c20:	dec    ebp
  418c21:	retf   0xbd66
  418c24:	push   0xeb76fc8d
  418c29:	pushf  
  418c2a:	loope  0x418bc6
  418c2c:	stos   DWORD PTR es:[edi],eax
  418c2d:	ror    BYTE PTR [edi],cl
  418c2f:	mov    al,0xed
  418c31:	fwait
  418c32:	cwde   
  418c33:	mov    cs,WORD PTR [ebp-0x5f]
  418c36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c37:	je     0x418c18
  418c39:	call   0x63b6c778
  418c3e:	test   eax,0x2cd7d40f
  418c43:	das    
  418c44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c45:	add    esi,esp
  418c47:	lds    ecx,FWORD PTR [esi-0x50]
  418c4a:	fisttp DWORD PTR [edi+ecx*4]
  418c4d:	pop    ebx
  418c4e:	add    bh,BYTE PTR [esi]
  418c50:	bound  esi,QWORD PTR [esi]
  418c52:	cmc    
  418c53:	scas   eax,DWORD PTR es:[edi]
  418c54:	scas   eax,DWORD PTR es:[edi]
  418c55:	shl    DWORD PTR [esi+0x6b],0x19
  418c59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c5a:	cli    
  418c5b:	shr    DWORD PTR [eax+0x7a],1
  418c5e:	into   
  418c5f:	xchg   DWORD PTR [esi],esi
  418c61:	fs daa 
  418c63:	call   0x5e26:0xadbb271e
  418c6a:	inc    ebx
  418c6b:	inc    edi
  418c6c:	add    ecx,esp
  418c6e:	add    dh,bl
  418c70:	fxch   st(7)
  418c72:	dec    ecx
  418c73:	pop    ebp
  418c74:	cmp    BYTE PTR [ebx+eiz*4],cl
  418c77:	shl    DWORD PTR [eax],0x60
  418c7a:	test   BYTE PTR [ebp-0x2c],ch
  418c7d:	dec    edx
  418c7e:	xor    eax,0xfb43185b
  418c83:	adc    ebp,DWORD PTR [edi-0x70]
  418c86:	shl    BYTE PTR [esi+0x23],0x9e
  418c8a:	mov    DWORD PTR [ebx],0x9c874bbc
  418c90:	mov    dh,0xc3
  418c92:	outs   dx,BYTE PTR ds:[esi]
  418c93:	and    DWORD PTR [eax+0x30],edi
  418c96:	iret   
  418c97:	stos   BYTE PTR es:[edi],al
  418c98:	popf   
  418c99:	push   ds
  418c9a:	out    dx,al
  418c9b:	inc    esp
  418c9c:	and    DWORD PTR ds:0x687735df,ebp
  418ca2:	inc    ecx
  418ca3:	popf   
  418ca4:	out    dx,al
  418ca5:	push   eax
  418ca6:	dec    eax
  418ca7:	cmc    
  418ca8:	mov    dl,0x87
  418caa:	pop    esp
  418cab:	adc    DWORD PTR [edi-0x37],edi
  418cae:	dec    ecx
  418caf:	jnp    0x418d10
  418cb1:	xchg   ecx,eax
  418cb2:	add    al,BYTE PTR [eax]
  418cb4:	jg     0x418cbc
  418cb6:	popf   
  418cb7:	push   esp
  418cb8:	scas   al,BYTE PTR es:[edi]
  418cb9:	adc    al,0xf2
  418cbb:	aas    
  418cbc:	mov    eax,ds:0x1293f43a
  418cc1:	cmp    al,0x3d
  418cc3:	scas   eax,DWORD PTR es:[edi]
  418cc4:	out    dx,al
  418cc5:	xchg   ebp,eax
  418cc6:	mov    dh,0xae
  418cc8:	nop
  418cc9:	cmp    al,0xc5
  418ccb:	xchg   edx,eax
  418ccc:	rcl    DWORD PTR [ebx-0x182b8776],cl
  418cd2:	mov    ds:0xabd5134c,eax
  418cd7:	xor    ecx,esi
  418cd9:	mov    fs,WORD PTR [eax+0x6b40d3ad]
  418cdf:	cwde   
  418ce0:	pop    edx
  418ce1:	test   DWORD PTR [esi+0x36],ecx
  418ce4:	jb     0x418c9b
  418ce6:	std    
  418ce7:	out    dx,al
  418ce8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ce9:	mov    edi,DWORD PTR [ecx+ebx*2-0x53]
  418ced:	aas    
  418cee:	(bad)  
  418cef:	mov    ebx,0x60c8ab28
  418cf4:	or     eax,0xecfec1a1
  418cf9:	cmc    
  418cfa:	sub    edx,DWORD PTR [ebp+0x1f]
  418cfd:	push   es
  418cfe:	pop    esi
  418cff:	lea    esi,[eax-0x3925c23b]
  418d05:	cmp    edi,DWORD PTR ds:0x83246e10
  418d0b:	sti    
  418d0c:	adc    DWORD PTR [esi+0x1c],esp
  418d0f:	arpl   ax,cx
  418d11:	jecxz  0x418d21
  418d13:	stos   BYTE PTR es:[edi],al
  418d14:	ror    BYTE PTR [ebp+eax*4+0x29],1
  418d18:	in     al,dx
  418d19:	or     edi,DWORD PTR [ebx+0x39836542]
  418d1f:	out    0x40,al
  418d21:	add    eax,0x3d83c9de
  418d26:	pop    ds
  418d27:	xchg   esi,eax
  418d28:	jns    0x418d6c
  418d2a:	leave  
  418d2b:	call   0xc99b:0x96d421c0
  418d32:	cmp    eax,0x1a3eed4
  418d37:	sbb    ah,al
  418d39:	outs   dx,DWORD PTR ds:[esi]
  418d3a:	out    0x33,al
  418d3c:	dec    ebp
  418d3d:	add    eax,0xe096b162
  418d42:	test   eax,0xae261fab
  418d47:	lods   al,BYTE PTR ds:[esi]
  418d48:	and    DWORD PTR [ebx+ebp*4],0x1f9e1973
  418d4f:	xor    ah,BYTE PTR gs:[esi-0x563f8116]
  418d56:	mov    BYTE PTR [eax],ah
  418d58:	dec    DWORD PTR [edi+0x6]
  418d5b:	scas   al,BYTE PTR es:[edi]
  418d5c:	push   es
  418d5d:	xchg   ecx,eax
  418d5e:	jo     0x418d9d
  418d60:	imul   eax,DWORD PTR ds:0x1f481e53,0xfffffffd
  418d67:	imul   esp,DWORD PTR [eax],0xf82bf31d
  418d6d:	xor    DWORD PTR ds:0xb6b0952d,eax
  418d73:	xlat   BYTE PTR ds:[ebx]
  418d74:	dec    ecx
  418d75:	sbb    eax,DWORD PTR [edx]
  418d77:	repnz or edi,DWORD PTR [eax]
  418d7a:	mov    fs:0xb4d87443,eax
  418d80:	into   
  418d81:	imul   DWORD PTR [eax-0x1979c38c]
  418d87:	xchg   esi,eax
  418d88:	ja     0x418d97
  418d8a:	daa    
  418d8b:	jmp    DWORD PTR [esi]
  418d8d:	sub    al,0xd7
  418d8f:	xchg   ebx,eax
  418d90:	push   ebx
  418d91:	mov    bh,0xa5
  418d93:	shl    DWORD PTR [edi-0x1df54143],cl
  418d99:	mov    ds:0xfebd62f9,al
  418d9e:	xchg   ah,bl
  418da0:	call   0xad7c:0x5ab1264c
  418da7:	loope  0x418e15
  418da9:	outs   dx,BYTE PTR ds:[esi]
  418daa:	jne    0x418de0
  418dac:	xchg   ebp,eax
  418dad:	pop    esi
  418dae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418daf:	xrelease xchg BYTE PTR ds:0x365f0bd1,dh
  418db6:	in     eax,0x61
  418db8:	sbb    edi,DWORD PTR [edi+0x21ffdb66]
  418dbe:	mov    ebx,0x98fcf81
  418dc3:	imul   DWORD PTR [eax-0x142367b4]
  418dc9:	mov    eax,0xe629d2b2
  418dce:	inc    edi
  418dcf:	call   0x940c036b
  418dd4:	dec    eax
  418dd5:	in     al,dx
  418dd6:	push   edx
  418dd7:	pop    ebp
  418dd8:	dec    esp
  418dd9:	dec    edx
  418dda:	pop    ecx
  418ddb:	ret    
  418ddc:	or     eax,0x4dff09e4
  418de1:	ror    BYTE PTR [ebx-0x67aeb43c],cl
  418de7:	out    0x50,eax
  418de9:	sbb    esi,DWORD PTR [ecx-0x77c74621]
  418def:	hlt    
  418df0:	enter  0x4283,0x1b
  418df4:	dec    ecx
  418df5:	mov    ds:0x5f13f257,al
  418dfa:	inc    edi
  418dfb:	and    al,0xe2
  418dfd:	repnz sbb al,BYTE PTR [eax-0x1c447198]
  418e04:	sar    dl,cl
  418e06:	mov    ebx,0xcd8c0a09
  418e0b:	ret    0xcd7c
  418e0e:	push   esp
  418e0f:	jno    0x418e06
  418e11:	sub    eax,0x618dc9
  418e16:	daa    
  418e17:	pand   mm7,QWORD PTR [esi]
  418e1a:	jmp    0x1a01:0x3ec14545
  418e21:	inc    edi
  418e22:	add    dl,bl
  418e24:	push   0x6e
  418e26:	ins    BYTE PTR es:[edi],dx
  418e27:	test   BYTE PTR [esi+0x5b57630],dl
  418e2d:	pusha  
  418e2e:	arpl   bx,dx
  418e30:	pop    edi
  418e31:	add    DWORD PTR [esi],esp
  418e33:	xlat   BYTE PTR ds:[ebx]
  418e34:	cmp    bl,ah
  418e36:	cmp    BYTE PTR [esi+0x71],dl
  418e39:	and    bh,BYTE PTR ds:0x72a3541c
  418e3f:	xlat   BYTE PTR ds:[ebx]
  418e40:	or     al,0xc9
  418e42:	pop    ss
  418e43:	xor    BYTE PTR [ebp+0x43a8cb02],ch
  418e49:	sbb    DWORD PTR [ecx+0x62],esi
  418e4c:	pop    es
  418e4d:	mov    cl,0x90
  418e4f:	retf   
  418e50:	add    al,0xfe
  418e52:	sbb    DWORD PTR [edx+0xf],ebp
  418e55:	mov    BYTE PTR [eax-0x74db6b2d],bh
  418e5b:	pop    ebx
  418e5c:	xchg   ecx,eax
  418e5d:	stos   DWORD PTR es:[edi],eax
  418e5e:	retf   
  418e5f:	push   edx
  418e60:	mov    ah,0x8c
  418e62:	jg     0x418e88
  418e64:	mov    ebx,DWORD PTR [ecx-0x11dc6d4c]
  418e6a:	popa   
  418e6b:	hlt    
  418e6c:	and    ebx,DWORD PTR [ebx-0x63135b82]
  418e72:	lea    ebx,[ecx]
  418e74:	into   
  418e75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e76:	cmc    
  418e77:	cli    
  418e78:	adc    ebp,DWORD PTR [bp+si-0x55]
  418e7c:	cmp    al,0x6b
  418e7e:	push   0x37282429
  418e83:	out    0xda,al
  418e85:	jbe    0x418ea0
  418e87:	and    eax,0xa9bdc865
  418e8c:	ds hlt 
  418e8e:	cdq    
  418e8f:	and    esp,DWORD PTR [ebp+0x57]
  418e92:	xchg   esp,eax
  418e93:	push   esi
  418e94:	sbb    eax,0x90b35516
  418e99:	xchg   ecx,eax
  418e9a:	loop   0x418ee0
  418e9c:	call   0x9b31bef4
  418ea1:	in     eax,dx
  418ea2:	ins    DWORD PTR es:[edi],dx
  418ea3:	mov    ebx,0xecc1ffc7
  418ea8:	sub    bl,BYTE PTR [ebp-0x41]
  418eab:	lock jo 0x418e9c
  418eae:	mov    edx,0x80986f00
  418eb3:	es push ecx
  418eb5:	leave  
  418eb6:	cmp    eax,0x1a7772d6
  418ebb:	xchg   ecx,eax
  418ebc:	push   cs
  418ebd:	test   al,0x9d
  418ebf:	fcomip st,st(5)
  418ec1:	or     al,0xc
  418ec3:	pop    eax
  418ec4:	(bad)  
  418ec5:	pop    esp
  418ec6:	pusha  
  418ec7:	adc    eax,0xe8f60f77
  418ecc:	aam    0x31
  418ece:	std    
  418ecf:	mov    cl,0xa0
  418ed1:	mov    eax,ds:0x1fcfe118
  418ed6:	mov    esi,esp
  418ed8:	add    BYTE PTR [ebp-0x38642855],ch
  418ede:	push   eax
  418edf:	enter  0x9d3,0x37
  418ee3:	(bad)  
  418ee4:	xor    DWORD PTR [ebx],ebp
  418ee6:	push   esi
  418ee7:	(bad)  
  418ee8:	out    0x4d,eax
  418eea:	xchg   ecx,eax
  418eeb:	scas   eax,DWORD PTR es:[edi]
  418eec:	jp     0x418f49
  418eee:	xor    edi,eax
  418ef0:	ds add eax,0x436a945b
  418ef6:	inc    DWORD PTR [ecx-0x6a430586]
  418efc:	inc    esi
  418efd:	or     cl,BYTE PTR [ecx-0x6cacd3fb]
  418f03:	outs   dx,DWORD PTR ds:[esi]
  418f04:	cdq    
  418f05:	call   DWORD PTR [esi]
  418f07:	ret    0xaf6d
  418f0a:	enter  0xf95b,0x57
  418f0e:	mov    ch,0x9c
  418f10:	cmp    ecx,DWORD PTR [eax-0x48010842]
  418f16:	jno    0x418ec8
  418f18:	xlat   BYTE PTR ds:[ebx]
  418f19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f1a:	cs mov ebx,0x6b4f3009
  418f20:	aas    
  418f21:	dec    esp
  418f22:	fidiv  WORD PTR ds:0xc25568e5
  418f28:	cli    
  418f29:	xchg   ebx,eax
  418f2a:	fnstsw WORD PTR [esi+0x294cd6d7]
  418f30:	jnp    0x418f1f
  418f32:	ror    BYTE PTR [edi+0x6ec36f64],cl
  418f38:	pmaxsw mm1,QWORD PTR [esi+0x8abc807]
  418f3f:	inc    edi
  418f40:	jns    0x418f7c
  418f42:	sub    ch,BYTE PTR [esi+0x5e]
  418f45:	mov    ecx,0x388a6899
  418f4a:	push   ebp
  418f4b:	jg     0x418f94
  418f4d:	icebp  
  418f4e:	fcomp  QWORD PTR [ebx-0x27]
  418f51:	add    eax,0xa166aa62
  418f56:	adc    DWORD PTR [ecx-0x6aaee30f],ebx
  418f5c:	call   0xb85b:0x6c4e9a7e
  418f63:	push   eax
  418f64:	mov    ecx,0x8689b910
  418f69:	push   cs
  418f6a:	cli    
  418f6b:	bnd js 0x418efb
  418f6e:	fistp  WORD PTR [ebp-0x24]
  418f71:	(bad)  
  418f72:	pop    edx
  418f73:	sub    BYTE PTR [ebx-0x7ea1ba0f],0x93
  418f7a:	leave  
  418f7b:	inc    esi
  418f7c:	dec    eax
  418f7d:	and    al,0xfb
  418f7f:	bound  ebp,QWORD PTR [edx+0x11]
  418f82:	mov    al,ds:0x11e04019
  418f87:	or     eax,DWORD PTR [edx]
  418f89:	(bad)  
  418f8a:	jo     0x418fee
  418f8c:	iret   
  418f8d:	add    al,0x59
  418f8f:	sub    BYTE PTR [ecx],al
  418f91:	retf   0x5527
  418f94:	xchg   esi,eax
  418f95:	sub    BYTE PTR [eax+0xc],ch
  418f98:	sub    ecx,eax
  418f9a:	lea    ebp,[edi+eiz*1+0x67]
  418f9e:	jp     0x419005
  418fa0:	xchg   edi,eax
  418fa1:	jne    0x418f75
  418fa3:	xchg   ecx,eax
  418fa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418fa5:	jmp    0x418f82
  418fa7:	mov    ch,0x22
  418fa9:	and    eax,0xa32f8e75
  418fae:	cmp    ebx,ecx
  418fb0:	nop
  418fb1:	imul   esp,DWORD PTR [esi-0x35],0x43
  418fb5:	aad    0xe2
  418fb7:	cwde   
  418fb8:	xchg   ecx,eax
  418fb9:	fisttp DWORD PTR [ecx+0x5f]
  418fbc:	pop    ebp
  418fbd:	mov    dh,0x56
  418fbf:	push   esp
  418fc0:	and    eax,0x70255cb2
  418fc5:	hlt    
  418fc6:	test   DWORD PTR ds:0x1b0e0fa6,0x510c18af
  418fd0:	xchg   ebp,eax
  418fd1:	xor    BYTE PTR [esp+esi*8+0x7bbef17d],dh
  418fd8:	pop    ss
  418fd9:	xchg   edi,eax
  418fda:	inc    esp
  418fdb:	cwde   
  418fdc:	retf   
  418fdd:	std    
  418fde:	jb     0x419050
  418fe0:	push   eax
  418fe1:	mov    edx,0xd38ac78a
  418fe6:	mov    dl,0x39
  418fe8:	or     eax,0xf987ac40
  418fed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fee:	and    edx,DWORD PTR [ebp+0xe]
  418ff1:	test   eax,0x8425941d
  418ff6:	jmp    0x6daf:0xa19fa095
  418ffd:	stc    
  418ffe:	or     esp,DWORD PTR [eax]
  419000:	daa    
  419001:	jl     0x41903a
  419003:	jmp    0x71da:0x825ac603
  41900a:	mov    eax,0x13aa94c2
  41900f:	xchg   edi,eax
  419010:	out    dx,al
  419011:	jbe    0x419083
  419013:	pop    ds
  419014:	dec    edx
  419015:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419016:	jmp    0x419062
  419018:	mov    edx,0x9fd6b184
  41901d:	jo     0x41905e
  41901f:	sbb    BYTE PTR [esp+eax*4-0x3b],ah
  419023:	inc    ebx
  419024:	push   edx
  419025:	pop    ecx
  419026:	cmp    eax,0xb7a6ae3
  41902b:	inc    ecx
  41902c:	out    dx,eax
  41902d:	adc    DWORD PTR [edi],0x439e20bc
  419033:	(bad)  
  419034:	push   ebx
  419035:	xchg   ebp,eax
  419036:	mov    edi,0xf05753c6
  41903b:	jmp    0x419066
  41903d:	inc    eax
  41903e:	xor    eax,0xc3cb7e11
  419043:	lock in eax,0xaf
  419046:	mov    ebx,?
  419048:	sbb    ecx,DWORD PTR [ebx-0x2058db47]
  41904e:	aas    
  41904f:	mov    bh,0x95
  419051:	xor    DWORD PTR [ecx-0x56],esi
  419054:	and    eax,0x4b433f09
  419059:	or     DWORD PTR [esi],ebp
  41905b:	xor    eax,0xa99f767b
  419060:	rol    edi,cl
  419062:	add    ah,BYTE PTR [esi-0x79]
  419065:	arpl   di,bx
  419067:	sub    al,0x6c
  419069:	cmp    DWORD PTR [ecx+eax*1],edx
  41906c:	sahf   
  41906d:	lods   eax,DWORD PTR ds:[esi]
  41906e:	sub    ch,BYTE PTR [ecx+0x7e]
  419071:	scas   eax,DWORD PTR es:[edi]
  419072:	add    DWORD PTR [ebx-0x7b59c174],0x2f
  419079:	sti    
  41907a:	sbb    edx,DWORD PTR [esi-0x2f]
  41907d:	and    al,0x73
  41907f:	pop    ebp
  419080:	add    al,0xbe
  419082:	cmp    ch,BYTE PTR [ecx]
  419084:	dec    eax
  419085:	and    ebp,DWORD PTR [edx]
  419087:	aaa    
  419088:	dec    esp
  419089:	mov    esi,0xf796a64f
  41908e:	and    eax,0x22588aa0
  419093:	sbb    BYTE PTR [edi+0x1a],ah
  419096:	ficom  WORD PTR [ebx]
  419098:	sbb    dh,al
  41909a:	mov    ecx,0x9423a778
  41909f:	shl    DWORD PTR [edi-0x4d84ad3e],cl
  4190a5:	mov    ch,0x9e
  4190a7:	jg     0x4190ce
  4190a9:	shl    DWORD PTR [ebx+0x75],cl
  4190ac:	mov    esp,0xa21e75f
  4190b1:	inc    ebx
  4190b2:	into   
  4190b3:	int3   
  4190b4:	xor    BYTE PTR [ebp+0x571abc3e],dl
  4190ba:	mov    edx,0x31b3418c
  4190bf:	outs   dx,DWORD PTR ds:[esi]
  4190c0:	in     al,0x4f
  4190c2:	gs jl  0x4190f4
  4190c5:	jo     0x4190ec
  4190c7:	in     eax,0xe9
  4190c9:	stos   DWORD PTR es:[edi],eax
  4190ca:	mov    esi,0xd01f39b7
  4190cf:	push   ds
  4190d0:	inc    ecx
  4190d1:	pop    ebp
  4190d2:	xor    BYTE PTR [esi-0x6aaaca54],dh
  4190d8:	call   0x1539:0x511340f2
  4190df:	pop    ss
  4190e0:	arpl   WORD PTR [ebx+eiz*8+0x685915f5],bx
  4190e7:	cmc    
  4190e8:	nop
  4190e9:	mov    DWORD PTR [ecx-0x4a],ebp
  4190ec:	mov    al,ds:0xd27df43e
  4190f1:	js     0x419117
  4190f3:	and    al,0xfa
  4190f5:	out    0x3b,al
  4190f7:	add    DWORD PTR [esi-0x1c],esi
  4190fa:	int3   
  4190fb:	push   0xffffffc6
  4190fd:	inc    esi
  4190fe:	xor    al,0x4
  419100:	adc    al,BYTE PTR [esi]
  419102:	sahf   
  419103:	fbstp  TBYTE PTR [edi]
  419105:	hlt    
  419106:	pushf  
  419107:	and    eax,0x867ec03e
  41910c:	cmc    
  41910d:	add    BYTE PTR [esi+0x3d],0xe
  419111:	pop    ebx
  419112:	fwait
  419113:	call   0xcd03:0x4128f2d
  41911a:	ja     0x419123
  41911c:	sub    eax,0x13e7d5f0
  419121:	xchg   DWORD PTR [edx],ebp
  419123:	int3   
  419124:	int3   
  419125:	seto   ch
  419128:	jmp    0x9250:0x7d87055
  41912f:	repz rcl DWORD PTR [edx-0x2f119b06],1
  419136:	add    ebx,ebx
  419138:	sbb    dl,dl
  41913a:	xor    al,0x7d
  41913c:	enter  0x59b4,0x76
  419140:	adc    DWORD PTR [ebx],ecx
  419142:	pop    es
  419143:	rol    DWORD PTR [edx-0x1f],cl
  419146:	je     0x41915c
  419148:	jmp    0xf2e1:0xa2646bbb
  41914f:	in     al,0x7b
  419151:	pop    eax
  419152:	pop    ss
  419153:	fbstp  TBYTE PTR [esi]
  419155:	xchg   edx,eax
  419156:	and    esi,DWORD PTR [edx+0xe]
  419159:	ret    
  41915a:	add    eax,0x7744d214
  41915f:	mov    ds:0xc91297df,eax
  419164:	push   ebp
  419165:	add    ebx,ebx
  419167:	hlt    
  419168:	jb     0x419125
  41916a:	xchg   edx,eax
  41916b:	adc    eax,edx
  41916d:	in     eax,0x87
  41916f:	xor    BYTE PTR [ebp+0x3cc91de],ch
  419175:	not    dl
  419177:	(bad)  
  419178:	jo     0x419170
  41917a:	sbb    ah,BYTE PTR [ebx-0x71]
  41917d:	inc    edi
  41917e:	bound  esi,QWORD PTR [edi+0x27bb41df]
  419184:	cmp    bl,ah
  419186:	add    BYTE PTR [ecx],cl
  419188:	dec    ebx
  419189:	loop   0x4191a1
  41918b:	pop    eax
  41918c:	ins    DWORD PTR es:[edi],dx
  41918d:	push   0x65
  41918f:	dec    ebx
  419190:	fsub   QWORD PTR [eax+edx*2+0x3530038b]
  419197:	adc    BYTE PTR [ebx],cl
  419199:	ret    0xbcd6
  41919c:	push   ds
  41919d:	jmp    0xf595:0xfc179414
  4191a4:	sahf   
  4191a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191a6:	mov    bh,0x26
  4191a8:	test   al,0xd4
  4191aa:	ja     0x419216
  4191ac:	je     0x419151
  4191ae:	lock pop ds
  4191b0:	mov    eax,0x54a934e2
  4191b5:	sbb    edx,DWORD PTR [esi+0x3]
  4191b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191b9:	fnsave [ebx-0x5a89f3]
  4191bf:	xor    edx,DWORD PTR [esi]
  4191c1:	or     al,0xee
  4191c3:	ds xchg ebp,eax
  4191c5:	adc    al,BYTE PTR [edx*4+0x51d0bd37]
  4191cc:	pop    edx
  4191cd:	xchg   ecx,eax
  4191ce:	into   
  4191cf:	stos   BYTE PTR es:[edi],al
  4191d0:	sahf   
  4191d1:	sub    al,0xcf
  4191d3:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4191d5:	sub    eax,0x829ce349
  4191da:	inc    esp
  4191db:	jg     0x4191da
  4191dd:	outs   dx,DWORD PTR ds:[esi]
  4191de:	test   al,0xfd
  4191e0:	mov    eax,0x5a3c49f9
  4191e5:	out    dx,eax
  4191e6:	mov    ds:0xf3d22e57,eax
  4191eb:	mov    al,ds:0xba5bbcd
  4191f0:	dec    eax
  4191f1:	sti    
  4191f2:	icebp  
  4191f3:	jl     0x4191d7
  4191f5:	mov    dl,BYTE PTR [esi-0x4e]
  4191f8:	lock call 0x54c5:0x4925fb30
  419200:	xchg   esi,eax
  419201:	daa    
  419202:	mov    cl,0x74
  419204:	or     DWORD PTR [edx],esp
  419206:	cmp    BYTE PTR [edi+eiz*4],bl
  419209:	mov    dh,0xd9
  41920b:	dec    esi
  41920c:	and    dh,BYTE PTR [ecx]
  41920e:	ret    
  41920f:	out    dx,al
  419210:	push   DWORD PTR [edx-0x67]
  419213:	cmp    ecx,DWORD PTR [ebx]
  419215:	pop    ebx
  419216:	mov    WORD PTR [ebp+0x645304d],?
  41921c:	inc    edx
  41921d:	clc    
  41921e:	stos   DWORD PTR es:[edi],eax
  41921f:	sbb    BYTE PTR [edx-0x60],al
  419222:	in     al,dx
  419223:	and    eax,0xe8839cba
  419228:	mov    al,ds:0x556bbe14
  41922d:	and    edx,DWORD PTR [ecx+0x5608b100]
  419233:	push   0xe1d4d336
  419238:	arpl   WORD PTR [esi],di
  41923a:	pcmpgtb mm0,QWORD PTR [ebx+0x36]
  41923e:	data16 out dx,al
  419240:	mov    edi,DWORD PTR [edi+edi*4]
  419243:	(bad)  
  419244:	xor    eax,0xc26c9f72
  419249:	add    al,0xdf
  41924b:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41924d:	aam    0xb8
  41924f:	add    eax,0x436e4032
  419254:	mov    ds:0x8b195ae7,al
  419259:	mov    esi,ecx
  41925b:	(bad)  
  41925c:	mov    eax,0xfb82cf7b
  419261:	mov    WORD PTR [eax+edx*1],fs
  419264:	jae    0x4192be
  419266:	out    0xbd,al
  419268:	cmp    dl,dl
  41926a:	and    cl,BYTE PTR [edi+0x69]
  41926d:	adc    eax,0xb5087bf7
  419272:	xlat   BYTE PTR ds:[ebx]
  419273:	in     eax,dx
  419274:	mov    ds,esp
  419276:	mov    eax,0x68900167
  41927b:	mov    eax,ds:0x48cbde6e
  419280:	(bad)  [ecx-0x7d]
  419283:	out    dx,eax
  419284:	repz mov ds:0xf0002ee7,eax
  41928a:	pusha  
  41928b:	test   BYTE PTR [esi],ch
  41928d:	push   ds
  41928e:	inc    ebx
  41928f:	xor    ecx,eax
  419291:	mov    DWORD PTR [ebp+0x8],ecx
  419294:	mov    ecx,DWORD PTR [ebp+0x8]
  419297:	mov    edx,DWORD PTR [ebp-0x58]
  41929a:	add    ecx,0x5708e2
  4192a0:	imul   ecx,edx
  4192a3:	mov    DWORD PTR [ebp-0x58],ecx
  4192a6:	mov    ecx,DWORD PTR [ebp+0x8]
  4192a9:	mov    edx,DWORD PTR [ebp-0x54]
  4192ac:	add    ecx,0x64f89c
  4192b2:	or     ecx,edx
  4192b4:	mov    DWORD PTR [ebp-0x54],ecx
  4192b7:	mov    ecx,DWORD PTR [ebp+0x8]
  4192ba:	jmp    0x41b643
  4192bf:	aad    0xa2
  4192c1:	mov    dh,0x8d
  4192c3:	mov    al,0x81
  4192c5:	ror    BYTE PTR [edx+0x26797ce2],0x9b
  4192cc:	mov    DWORD PTR [esi-0x7de3d8dc],edx
  4192d2:	adc    DWORD PTR [edi],0x5c
  4192d5:	add    DWORD PTR [ebx-0x49df8b42],0x1e
  4192dc:	dec    DWORD PTR [esi-0x37]
  4192df:	mov    edx,0xdae7e89f
  4192e4:	je     0x41926d
  4192e6:	mov    edi,0xccf84592
  4192eb:	push   esp
  4192ec:	adc    ecx,DWORD PTR [ebx+0x5977eae3]
  4192f2:	cdq    
  4192f3:	mov    edi,0x30a968cb
  4192f8:	push   edx
  4192f9:	xor    al,0x28
  4192fb:	in     al,0xf2
  4192fd:	mov    cl,0x69
  4192ff:	inc    edi
  419300:	gs jne 0x419335
  419303:	xor    DWORD PTR [esi+0x3a],edi
  419306:	sar    dh,cl
  419308:	sub    DWORD PTR [edx-0x1b],ebx
  41930b:	xor    ebx,DWORD PTR [edx]
  41930d:	push   ecx
  41930e:	jg     0x419322
  419310:	sbb    ch,BYTE PTR [edi]
  419312:	cs stos BYTE PTR es:[di],al
  419315:	mov    esi,0xfc647a76
  41931a:	pop    es
  41931b:	dec    ebp
  41931c:	xor    eax,0xcf3c1dcc
  419321:	mov    esp,0x884a5031
  419326:	pusha  
  419327:	ficom  DWORD PTR [ebx]
  419329:	mov    eax,0x8b28d130
  41932e:	sbb    bh,bh
  419330:	pop    edi
  419331:	cmc    
  419332:	idiv   edx
  419334:	add    DWORD PTR [edx-0x20],0x3735f261
  41933b:	xchg   edx,eax
  41933c:	and    eax,0xf2ebf2e2
  419341:	xchg   edi,eax
  419342:	test   DWORD PTR [edi+0x4a91ee4d],esp
  419348:	adc    cl,BYTE PTR [ebx+0x1d4b69e0]
  41934e:	xchg   ebp,eax
  41934f:	repz cs xor ch,cl
  419353:	(bad)  
  419354:	jns    0x419322
  419356:	jmp    0x419376
  419358:	aam    0xe2
  41935a:	int3   
  41935b:	popf   
  41935c:	call   0x81b5:0x53eb21ee
  419363:	leave  
  419364:	out    dx,eax
  419365:	pop    ebx
  419366:	scas   eax,DWORD PTR es:[edi]
  419367:	pop    edi
  419368:	mov    DWORD PTR [ecx],eax
  41936a:	js     0x419368
  41936c:	push   0xffdfae21
  419371:	mov    bh,0x98
  419373:	das    
  419374:	xchg   ebx,eax
  419375:	pop    ecx
  419376:	(bad)  
  419377:	sbb    BYTE PTR [edi-0x67765538],0xb6
  41937e:	adc    ecx,DWORD PTR [ebx-0x42247457]
  419384:	xor    cl,BYTE PTR [eax+eax*1]
  419387:	push   cs
  419388:	mov    ebx,eax
  41938a:	ss jecxz 0x419366
  41938d:	sub    bh,BYTE PTR [eax-0x5f]
  419390:	ret    
  419391:	sbb    ecx,eax
  419393:	and    al,0x24
  419395:	push   edx
  419396:	xor    ch,ch
  419398:	sub    al,0x87
  41939a:	out    0x90,eax
  41939c:	adc    DWORD PTR [bx],ebx
  41939f:	sub    BYTE PTR [ebp-0x1e],0xce
  4193a3:	xchg   DWORD PTR [ecx-0x16],edi
  4193a6:	out    0x28,eax
  4193a8:	push   ebx
  4193a9:	je     0x419374
  4193ab:	mov    edi,0x23711c32
  4193b0:	ins    DWORD PTR es:[edi],dx
  4193b1:	mov    cl,0x1d
  4193b3:	mov    ah,0x8d
  4193b5:	cs aad 0x6f
  4193b8:	pop    esi
  4193b9:	sub    al,0x28
  4193bb:	ss out dx,eax
  4193bd:	xor    cl,al
  4193bf:	ret    
  4193c0:	fnsave [eax-0x5b]
  4193c3:	clc    
  4193c4:	iret   
  4193c5:	daa    
  4193c6:	mov    al,0xa5
  4193c8:	lods   eax,DWORD PTR ds:[esi]
  4193c9:	push   esp
  4193ca:	inc    edi
  4193cb:	xchg   ebp,eax
  4193cc:	ins    DWORD PTR es:[edi],dx
  4193cd:	imul   edx,DWORD PTR [esp],0x5c868a71
  4193d4:	mov    edx,edi
  4193d6:	loopne 0x419412
  4193d8:	ins    DWORD PTR es:[edi],dx
  4193d9:	ror    DWORD PTR [ecx-0x2b],0x2b
  4193dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193de:	fs loopne 0x41945d
  4193e1:	sub    ebx,DWORD PTR [ebx]
  4193e3:	dec    esi
  4193e4:	add    BYTE PTR [edx-0x13bf2af6],0x79
  4193eb:	adc    esp,esi
  4193ed:	jmp    0x419441
  4193ef:	rcr    BYTE PTR [ebx-0x162f8290],cl
  4193f5:	mov    al,ds:0x96f48e05
  4193fa:	mov    ecx,DWORD PTR [edi]
  4193fc:	adc    al,0x1c
  4193fe:	lock xor DWORD PTR [edi],ebx
  419401:	cmp    eax,0xfe3f312d
  419406:	sbb    eax,0x2f4dba3f
  41940b:	aas    
  41940c:	cli    
  41940d:	mov    ds,WORD PTR [eax+eax*8-0x4f62a5c2]
  419414:	imul   esi,DWORD PTR [ecx-0x740918b6],0x7f7bdf4
  41941e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41941f:	in     al,dx
  419420:	pop    ds
  419421:	push   edx
  419422:	xor    BYTE PTR [esi+0x37a027f1],bl
  419428:	push   es
  419429:	hlt    
  41942a:	adc    bh,BYTE PTR [edi+ecx*1]
  41942d:	mov    al,ds:0x8048039b
  419432:	in     al,0x52
  419434:	sub    bl,BYTE PTR [ecx-0x22]
  419437:	sahf   
  419438:	iret   
  419439:	test   DWORD PTR [edi],edi
  41943b:	mov    al,ds:0x74de1e75
  419440:	and    bh,BYTE PTR [ebp-0x54]
  419443:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419444:	cmp    esp,DWORD PTR [edx+ecx*1-0x60]
  419448:	inc    eax
  419449:	pop    ebp
  41944a:	bound  edi,QWORD PTR [ebp-0x61]
  41944d:	sti    
  41944e:	ins    DWORD PTR es:[edi],dx
  41944f:	push   cs
  419450:	je     0x419434
  419452:	jno    0x419472
  419454:	mov    al,ds:0xefda8838
  419459:	add    BYTE PTR [ebx+0x41],bl
  41945c:	stos   BYTE PTR es:[edi],al
  41945d:	mov    edi,0x3d40cc9e
  419462:	pop    ds
  419463:	(bad)  
  419464:	pop    ds
  419465:	repz shr ebx,cl
  419468:	xchg   DWORD PTR [eax-0x55],ecx
  41946b:	test   al,0x9c
  41946d:	out    dx,eax
  41946e:	xor    al,0x98
  419470:	adc    eax,0xe9e3375e
  419475:	iret   
  419476:	out    0x93,al
  419478:	(bad)  
  419479:	fldenv [eax+0x7683fab7]
  41947f:	jle    0x41946c
  419481:	mov    ebp,0x4d5435ff
  419486:	int    0xde
  419488:	inc    ecx
  419489:	cli    
  41948a:	(bad)  [edx]
  41948c:	mov    eax,ds:0xb582ac78
  419491:	pushf  
  419492:	push   ebp
  419493:	sbb    eax,0xfb4cc22a
  419498:	hlt    
  419499:	push   ebp
  41949a:	mov    al,ds:0x855b6ef
  41949f:	into   
  4194a0:	push   ecx
  4194a1:	jmp    0x393cbd8
  4194a6:	xchg   bl,dh
  4194a8:	xchg   ebx,eax
  4194a9:	loope  0x419446
  4194ab:	sbb    DWORD PTR [edx+0x34],ecx
  4194ae:	dec    ecx
  4194af:	mov    ebx,0x7576ef73
  4194b4:	push   ds
  4194b5:	push   ss
  4194b6:	(bad)  
  4194b7:	cmp    bl,BYTE PTR [eax+0x1f]
  4194ba:	cmp    DWORD PTR [ebx-0x479bbefd],edx
  4194c0:	pop    ebp
  4194c1:	sbb    DWORD PTR [eax-0x51cfc1cd],edi
  4194c7:	es fsubrp st(1),st
  4194ca:	stc    
  4194cb:	scas   eax,DWORD PTR es:[edi]
  4194cc:	lds    esi,FWORD PTR [edx+0x6f]
  4194cf:	pop    ecx
  4194d0:	pop    edi
  4194d1:	inc    ebp
  4194d2:	pop    ebx
  4194d3:	mov    ecx,0xfdd60102
  4194d8:	cs inc ebx
  4194da:	and    cl,BYTE PTR [ebx-0x1081c3d2]
  4194e0:	fwait
  4194e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194e2:	push   esp
  4194e3:	mov    al,ds:0xa927bc08
  4194e8:	pop    esp
  4194e9:	bnd jns 0x419526
  4194ec:	mov    bh,0x6f
  4194ee:	pushf  
  4194ef:	push   es
  4194f0:	mov    eax,DWORD PTR [ebp+0x5b34929e]
  4194f6:	sbb    DWORD PTR [ebx],ecx
  4194f8:	xchg   BYTE PTR [eax+0x48407457],dh
  4194fe:	adc    al,0x39
  419500:	idiv   ebx
  419502:	and    BYTE PTR [ebp+0x1f45b1e2],0x16
  419509:	jmp    0xb1cd:0xbe474619
  419510:	gs pop es
  419512:	push   0x17eb16e8
  419517:	fwait
  419518:	adc    al,0x7f
  41951a:	cld    
  41951b:	cmp    dl,dl
  41951d:	(bad)  
  41951e:	inc    ebp
  41951f:	call   DWORD PTR [ebx-0x3b97ee77]
  419525:	inc    eax
  419526:	cmp    al,0xbf
  419528:	ins    BYTE PTR es:[edi],dx
  419529:	xor    ah,BYTE PTR [ecx+0x236e4253]
  41952f:	mov    WORD PTR [ebx-0x53],cs
  419532:	pop    ss
  419533:	fist   DWORD PTR [edx+ecx*4]
  419536:	sbb    edi,ebx
  419538:	push   ebp
  419539:	ins    DWORD PTR es:[edi],dx
  41953a:	lahf   
  41953b:	jns    0x4194f6
  41953d:	ds adc al,0xde
  419540:	add    eax,0x7e67de46
  419545:	popf   
  419546:	daa    
  419547:	jmp    0x8a64:0xeb14bad7
  41954e:	mov    bh,0x7
  419550:	fdiv   QWORD PTR [ebx-0x23]
  419553:	les    ebx,FWORD PTR [edi+edx*2]
  419556:	dec    ecx
  419557:	cs mov ebp,0xbf7dfb70
  41955d:	fistp  WORD PTR ds:0xb4204f17
  419563:	xor    esi,DWORD PTR [esi]
  419565:	add    al,0x55
  419567:	mov    eax,ds:0x6dec45ad
  41956c:	daa    
  41956d:	ror    DWORD PTR [ecx+ebx*8+0x17],cl
  419571:	sbb    eax,edi
  419573:	cld    
  419574:	shr    BYTE PTR [eax],1
  419576:	les    edx,FWORD PTR [edx-0x2d45d036]
  41957c:	pop    ds
  41957d:	aaa    
  41957e:	and    edx,DWORD PTR ds:0x42973c6f
  419584:	jno    0x4195ca
  419586:	div    BYTE PTR [eax+0x446011f]
  41958c:	aaa    
  41958d:	ret    0xd080
  419590:	xor    eax,0x10779c01
  419595:	cmp    DWORD PTR [esi+0x6e],0x68
  419599:	xchg   esp,eax
  41959a:	xlat   BYTE PTR ds:[ebx]
  41959b:	mov    ds:0xf88882f7,al
  4195a0:	sbb    BYTE PTR ds:0x16cac5b0,dh
  4195a6:	jb     0x419627
  4195a8:	jae    0x4195a6
  4195aa:	and    DWORD PTR [eax],0xfffffff0
  4195ad:	lods   al,BYTE PTR ds:[esi]
  4195ae:	dec    ebx
  4195af:	cmp    BYTE PTR [eax-0x21],bl
  4195b2:	mov    WORD PTR [edi+0x7ebe4434],ds
  4195b8:	add    edi,esi
  4195ba:	addr16 push 0xffffffff
  4195bd:	pusha  
  4195be:	lea    esi,fs:[ecx+0x29a3445f]
  4195c5:	call   0x7a7e:0xcdab1b36
  4195cc:	inc    eax
  4195cd:	in     eax,0xa4
  4195cf:	outs   dx,DWORD PTR ds:[esi]
  4195d0:	icebp  
  4195d1:	(bad)  
  4195d2:	cmp    eax,0xc706fe0d
  4195d7:	mov    ?,WORD PTR [edi]
  4195d9:	xchg   ebx,eax
  4195da:	clc    
  4195db:	adc    DWORD PTR [ebx],ebp
  4195dd:	fisttp DWORD PTR [eax-0x1e]
  4195e0:	push   esi
  4195e1:	push   esi
  4195e2:	mov    ah,0x7a
  4195e4:	icebp  
  4195e5:	hlt    
  4195e6:	je     0x4195c6
  4195e8:	inc    edi
  4195e9:	jg     0x41960d
  4195eb:	int3   
  4195ec:	mov    al,0xeb
  4195ee:	mov    bh,0x1d
  4195f0:	ins    BYTE PTR es:[edi],dx
  4195f1:	fwait
  4195f2:	jl     0x419588
  4195f4:	pop    es
  4195f5:	sbb    ch,bl
  4195f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195f8:	xchg   BYTE PTR [edx+0x33fcd1bc],al
  4195fe:	call   0x48b37d1b
  419603:	fnstcw WORD PTR [ebp-0x49]
  419606:	lea    esi,[eax]
  419608:	pop    es
  419609:	frstor [esi]
  41960b:	pop    ecx
  41960c:	repz fcmovnb st,st(6)
  41960f:	pusha  
  419610:	loop   0x419598
  419612:	pop    eax
  419613:	mov    ah,0x27
  419615:	out    0xb0,eax
  419617:	adc    bh,BYTE PTR [ebp-0x81f8e37]
  41961d:	and    ah,BYTE PTR [esi-0x6d]
  419620:	es jnp 0x4195f2
  419623:	pop    ss
  419624:	jae    0x419656
  419626:	add    DWORD PTR [eiz*4+0x19cbbd66],0xffffffc1
  41962e:	push   ebp
  41962f:	push   ebx
  419630:	popa   
  419631:	xor    DWORD PTR ds:0xecc4444f,esi
  419637:	mov    ds:0xbfc31354,al
  41963c:	cmp    al,0xab
  41963e:	fwait
  41963f:	(bad)  
  419640:	push   ebp
  419641:	inc    ebx
  419642:	scas   al,BYTE PTR es:[edi]
  419643:	and    ah,0x6
  419646:	(bad)  [ebx+0x429890e]
  41964c:	jae    0x419622
  41964e:	and    edx,DWORD PTR [eax+0x4cade2f8]
  419654:	scas   eax,DWORD PTR es:[edi]
  419655:	add    DWORD PTR [eax+0x4aea6e1d],ecx
  41965b:	jno    0x4196a7
  41965d:	loopne 0x419664
  41965f:	jbe    0x419670
  419661:	fimul  DWORD PTR [esi+edi*8-0x29]
  419665:	sbb    BYTE PTR [edi-0xe477503],bh
  41966b:	scas   eax,DWORD PTR es:[edi]
  41966c:	rol    DWORD PTR [esi-0x55],0xa4
  419670:	into   
  419671:	add    BYTE PTR [esi+esi*8+0x15],cl
  419675:	ins    BYTE PTR es:[edi],dx
  419676:	aad    0x2f
  419678:	sar    BYTE PTR [eax+0x3d],1
  41967b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41967c:	xor    bh,cl
  41967e:	dec    esp
  41967f:	pusha  
  419680:	jns    0x419652
  419682:	push   edx
  419683:	add    bh,BYTE PTR [edx+eiz*1+0x5268ce27]
  41968a:	or     al,0x13
  41968c:	loopne 0x419641
  41968e:	daa    
  41968f:	ds mov eax,0xb392cbaf
  419695:	inc    eax
  419696:	(bad)  
  419698:	xchg   edx,eax
  419699:	(bad)  
  41969b:	sbb    BYTE PTR [ebp+0x3ac92a49],ah
  4196a1:	imul   esi,DWORD PTR [edi],0x21
  4196a4:	sub    DWORD PTR [edi+0x17],esi
  4196a7:	es mov esp,ebx
  4196aa:	add    bl,BYTE PTR [ecx-0x79fd084f]
  4196b0:	test   DWORD PTR [edx+0x7e],ebx
  4196b3:	shl    BYTE PTR [eax+0x147fe4a6],1
  4196b9:	lea    edx,[eax]
  4196bb:	nop
  4196bc:	iret   
  4196bd:	ja     0x41966b
  4196bf:	sbb    BYTE PTR [edi+0x3fef07a6],al
  4196c5:	push   cs
  4196c6:	jle    0x4196b8
  4196c8:	fild   QWORD PTR [esp+ecx*8+0x32ad1586]
  4196cf:	arpl   sp,cx
  4196d1:	test   DWORD PTR [ebx-0x394a7571],ebx
  4196d7:	push   esp
  4196d8:	push   ebp
  4196d9:	fwait
  4196da:	lahf   
  4196db:	popf   
  4196dc:	push   esi
  4196dd:	xchg   BYTE PTR [edx],al
  4196df:	pop    ecx
  4196e0:	cmp    BYTE PTR ds:0xfc9c6b4a,0x15
  4196e7:	nop
  4196e8:	or     eax,0x8c3ab86b
  4196ed:	jl     0x4196de
  4196ef:	and    al,0x26
  4196f1:	xchg   DWORD PTR [ecx+0x5d],ebx
  4196f4:	xchg   ecx,eax
  4196f5:	and    ah,BYTE PTR ds:0x5bbf16f0
  4196fb:	fist   DWORD PTR ds:0xc6d1cb47
  419701:	push   esp
  419702:	pushf  
  419703:	je     0x41970b
  419705:	sub    BYTE PTR ds:[ecx],0xd7
  419709:	(bad)  
  41970b:	hlt    
  41970c:	jne    0x419712
  41970e:	jns    0x419694
  419710:	jnp    0x419778
  419712:	dec    edx
  419713:	dec    edi
  419714:	jns    0x4196e0
  419716:	jl     0x419786
  419718:	jge    0x419705
  41971a:	mov    bl,0x89
  41971c:	dec    esp
  41971d:	lea    ebx,[edi]
  41971f:	push   ebx
  419720:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419721:	and    al,0x6c
  419723:	pop    ebx
  419724:	push   esi
  419725:	xchg   ebp,eax
  419726:	mov    al,ds:0x188c5a85
  41972b:	jle    0x4196ee
  41972d:	mov    dl,0x99
  41972f:	pusha  
  419730:	ss xchg esp,eax
  419732:	jp     0x419715
  419734:	mov    esi,0x7ca358c8
  419739:	test   eax,0xe54934ba
  41973e:	dec    edi
  41973f:	ds mov cl,0x17
  419742:	add    BYTE PTR [eax+0x39],bl
  419745:	mov    WORD PTR [esi+0x355e9aea],es
  41974b:	cdq    
  41974c:	mov    ds:0xcf7bdad4,al
  419751:	inc    edi
  419752:	push   esi
  419753:	(bad)
  419758:	out    0x9e,al
  41975a:	jne    0x419782
  41975c:	xor    al,0xcd
  41975e:	dec    edx
  41975f:	jb     0x419752
  419761:	shl    BYTE PTR [edi+0x35],1
  419764:	aam    0xd8
  419766:	sbb    eax,0x100cb54
  41976b:	idiv   DWORD PTR [ebx+0x5f]
  41976e:	push   edx
  41976f:	pusha  
  419770:	ins    BYTE PTR es:[edi],dx
  419771:	aad    0xee
  419773:	sbb    DWORD PTR [edx+ebp*8-0x2460d73a],ebx
  41977a:	shl    ebp,1
  41977c:	cld    
  41977d:	out    dx,al
  41977e:	not    DWORD PTR [edi-0x4bbfb448]
  419784:	or     DWORD PTR [esi],ebx
  419786:	pop    ecx
  419787:	test   eax,0x7f2d3b
  41978c:	inc    eax
  41978d:	dec    edi
  41978e:	leave  
  41978f:	dec    esp
  419790:	loopne 0x4197e8
  419792:	mov    al,ds:0x37e13a09
  419797:	cmp    ebx,ecx
  419799:	data16 (bad) 
  41979b:	in     eax,dx
  41979c:	addr16 ret 
  41979e:	icebp  
  41979f:	(bad)  
  4197a0:	or     edi,DWORD PTR [esp+esi*8-0x6]
  4197a4:	xor    ah,BYTE PTR [edi+eax*4-0x354aa13d]
  4197ab:	cmp    DWORD PTR [edi],edi
  4197ad:	and    BYTE PTR [esi+0x39],cl
  4197b0:	mov    ds,WORD PTR [ebp-0x19]
  4197b3:	sbb    ebx,DWORD PTR [ebx]
  4197b5:	xchg   esi,eax
  4197b6:	pop    ecx
  4197b7:	xchg   edx,eax
  4197b8:	inc    ebx
  4197b9:	push   ss
  4197ba:	fwait
  4197bb:	push   edi
  4197bc:	addr16 jae 0x419826
  4197bf:	psubq  mm7,QWORD PTR [eax+0x12]
  4197c3:	cmp    BYTE PTR [edi-0x4c42d52],bl
  4197c9:	das    
  4197ca:	jle    0x41974e
  4197cc:	enter  0xe1f1,0x7c
  4197d0:	ret    0x9504
  4197d3:	outs   dx,BYTE PTR ds:[esi]
  4197d4:	lods   al,BYTE PTR ds:[esi]
  4197d5:	or     ah,BYTE PTR [ebx+edx*2]
  4197d8:	in     al,0x3f
  4197da:	(bad)  
  4197dc:	clc    
  4197dd:	mov    dl,0xe3
  4197df:	fiadd  WORD PTR [edi]
  4197e1:	xlat   BYTE PTR ds:[ebx]
  4197e2:	stos   BYTE PTR es:[edi],al
  4197e3:	fld    QWORD PTR [ecx]
  4197e5:	pop    ds
  4197e6:	out    dx,eax
  4197e7:	sub    DWORD PTR [edi+0x636bcbd4],esi
  4197ed:	jns    0x419793
  4197ef:	mov    esi,0xf5d6319e
  4197f4:	cwde   
  4197f5:	mov    esi,DWORD PTR [edi]
  4197f7:	imul   eax,ebx,0x48
  4197fa:	ins    BYTE PTR es:[edi],dx
  4197fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197fc:	add    DWORD PTR [ebx+0x15],0x9bcee187
  419803:	sbb    DWORD PTR [esi+0x30868d98],ebp
  419809:	cmp    DWORD PTR [ecx-0x333f9195],0x6e
  419810:	test   BYTE PTR [ebx+0x77c6c13e],0x52
  419817:	(bad)  
  419818:	retf   0x6f77
  41981b:	push   ebx
  41981c:	stos   BYTE PTR es:[edi],al
  41981d:	int    0x66
  41981f:	ss ins DWORD PTR es:[edi],dx
  419821:	sub    al,0x96
  419823:	mov    ebx,0xadefce8a
  419828:	jns    0x419877
  41982a:	int3   
  41982b:	push   0x4f17570
  419830:	sub    eax,0x199c9e53
  419835:	adc    ecx,DWORD PTR ds:0x833c8b33
  41983b:	push   edi
  41983c:	mov    edi,cs
  41983e:	xchg   ebp,eax
  41983f:	nop
  419840:	sub    ah,BYTE PTR [eax-0x543b5b7d]
  419846:	dec    ebp
  419847:	test   eax,0xc2e76bcf
  41984c:	xor    al,0xb
  41984e:	lahf   
  41984f:	or     ebx,0x30
  419852:	dec    ebp
  419853:	jp     0x4198a1
  419855:	sbb    ebx,DWORD PTR [esi+0x4aa1ba3f]
  41985b:	fadd   st(3),st
  41985d:	cmp    dl,BYTE PTR [ecx+0x3]
  419860:	test   BYTE PTR [ebx-0x15],ch
  419863:	out    0xef,eax
  419865:	or     al,0x24
  419867:	dec    ebp
  419868:	cmc    
  419869:	mov    edi,0x9457aae4
  41986e:	jbe    0x419836
  419870:	mov    ecx,0x74a990e2
  419875:	cwde   
  419876:	or     BYTE PTR [ebx],ah
  419878:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419879:	out    0xf5,al
  41987b:	(bad)  
  41987c:	xor    ah,bl
  41987e:	xor    ecx,DWORD PTR [edi]
  419880:	imul   eax,DWORD PTR [eax-0x17],0xc7f29418
  419887:	jecxz  0x419867
  419889:	jo     0x419823
  41988b:	fwait
  41988c:	sub    DWORD PTR [edx+0x766c5dd4],esi
  419892:	push   edi
  419893:	dec    esi
  419894:	cmp    dl,BYTE PTR [ecx-0x21]
  419897:	mov    ebx,0x53c2e233
  41989c:	fistp  QWORD PTR [eax+0x439cfec8]
  4198a2:	push   ecx
  4198a3:	mov    WORD PTR [ebp-0x14ef8911],?
  4198a9:	jo     0x41983f
  4198ab:	push   edx
  4198ac:	adc    DWORD PTR [eax-0x4e],edx
  4198af:	paddusb mm5,QWORD PTR [ebp-0x48]
  4198b3:	add    BYTE PTR [edx],bh
  4198b5:	retf   
  4198b6:	add    eax,0xce087e1
  4198bb:	cwde   
  4198bc:	jbe    0x41992f
  4198be:	out    0x3f,al
  4198c0:	mov    bh,0x3a
  4198c2:	rol    BYTE PTR [ecx],cl
  4198c4:	or     edx,ebx
  4198c6:	fst    QWORD PTR [edi]
  4198c8:	dec    ebx
  4198c9:	out    dx,al
  4198ca:	pushf  
  4198cb:	(bad)  
  4198cc:	sahf   
  4198cd:	or     eax,0x9d0d90f
  4198d2:	cmp    ebp,esp
  4198d4:	sub    BYTE PTR [eax+0x4d],dh
  4198d7:	sbb    DWORD PTR [ebx+ebp*2+0x46bc1cfc],ebx
  4198de:	pavgb  mm5,mm2
  4198e1:	xchg   esp,eax
  4198e2:	outs   dx,BYTE PTR ds:[esi]
  4198e3:	mov    cl,0x46
  4198e5:	in     eax,dx
  4198e6:	stos   DWORD PTR es:[edi],eax
  4198e7:	lods   al,BYTE PTR ds:[esi]
  4198e8:	push   edx
  4198e9:	mov    esi,0x816b69e1
  4198ee:	and    BYTE PTR [ebx+0x1d],ah
  4198f1:	adc    bh,BYTE PTR ss:[edx+0x622c7e5e]
  4198f8:	(bad)  
  4198f9:	mov    bh,0xa5
  4198fb:	jg     0x419969
  4198fd:	xchg   DWORD PTR [edi],ebx
  4198ff:	scas   eax,DWORD PTR es:[edi]
  419900:	adc    dh,BYTE PTR [ebx+0x3f06a42e]
  419906:	dec    ecx
  419907:	int    0xf6
  419909:	sti    
  41990a:	enter  0x7999,0x44
  41990e:	pusha  
  41990f:	mov    esp,gs
  419911:	dec    edx
  419912:	xchg   esi,eax
  419913:	neg    bh
  419915:	int3   
  419916:	scas   al,BYTE PTR es:[edi]
  419917:	inc    ecx
  419918:	and    eax,0x350ed963
  41991d:	mov    edx,0x9a5e3fe9
  419922:	sub    edi,esi
  419924:	mov    DWORD PTR [eax+0x6265ea60],ebx
  41992a:	fdiv   QWORD PTR [ebx+0x49]
  41992d:	adc    eax,0x6c0b8120
  419932:	xor    DWORD PTR [ebx-0x9],edx
  419935:	sub    ecx,DWORD PTR [ebx+0x59706e63]
  41993b:	cmp    BYTE PTR [edx+eax*1+0x75],0x2d
  419940:	ins    BYTE PTR es:[edi],dx
  419941:	jle    0x4198ec
  419943:	daa    
  419944:	sti    
  419945:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419946:	mov    bl,BYTE PTR [ebx+0x77]
  419949:	fidivr DWORD PTR [edi+ecx*2+0x9caed56]
  419950:	pop    ss
  419951:	jno    0x419992
  419953:	push   es
  419954:	mov    ebp,0xcf9b6243
  419959:	cmp    eax,DWORD PTR [esi-0x67]
  41995c:	pop    edi
  41995d:	fild   QWORD PTR [ebx]
  41995f:	test   al,0x65
  419961:	jmp    0x7017:0x5943478b
  419968:	fwait
  419969:	call   0x286cdc5
  41996e:	inc    edx
  41996f:	les    esp,FWORD PTR [edx]
  419971:	push   ds
  419972:	inc    ebp
  419973:	or     ah,0xf
  419976:	jecxz  0x419940
  419978:	dec    ebx
  419979:	lahf   
  41997a:	mov    ds:0x1f99927f,eax
  41997f:	out    0x85,al
  419981:	out    0x76,eax
  419983:	mul    dh
  419985:	xchg   esi,eax
  419986:	shr    DWORD PTR [ebp-0x606871d7],1
  41998c:	pop    ebp
  41998d:	mov    edi,0xd2bd4838
  419992:	aad    0xc
  419994:	test   al,0xda
  419996:	pop    edi
  419997:	cmp    eax,0xba2750e0
  41999c:	push   es
  41999d:	xor    dh,BYTE PTR [eax-0xfae2208]
  4199a3:	cli    
  4199a4:	xchg   DWORD PTR [edx],ecx
  4199a6:	xchg   al,dh
  4199a8:	rcr    BYTE PTR gs:[ebx],0x24
  4199ac:	or     BYTE PTR [ebp-0xe],ah
  4199af:	fwait
  4199b0:	aad    0x20
  4199b2:	and    bl,cl
  4199b4:	xor    edi,DWORD PTR [eax-0x51d22b06]
  4199ba:	imul   edx,DWORD PTR [eax],0x93134f4d
  4199c0:	cmp    eax,0xfbf05f26
  4199c5:	ror    DWORD PTR [ebx+ebx*2+0x54],0x75
  4199ca:	(bad)  
  4199cb:	in     al,dx
  4199cc:	sub    DWORD PTR [eax],0xfffffffb
  4199cf:	jp     0x419956
  4199d1:	cmp    al,0xb4
  4199d3:	mov    bl,0x51
  4199d5:	loope  0x419a2d
  4199d7:	(bad)  
  4199d8:	es loopne 0x4199e9
  4199db:	aad    0x63
  4199dd:	mov    ds:0x3ae3e796,eax
  4199e2:	pop    eax
  4199e3:	sub    eax,0xa522488
  4199e8:	pop    ebx
  4199e9:	jnp    0x4199c4
  4199eb:	add    eax,0x961c36b0
  4199f0:	fwait
  4199f1:	aas    
  4199f2:	inc    esp
  4199f3:	add    DWORD PTR [eax],esi
  4199f5:	hlt    
  4199f6:	sahf   
  4199f7:	xchg   esp,eax
  4199f8:	push   edi
  4199f9:	xchg   ebp,eax
  4199fa:	sti    
  4199fb:	xor    DWORD PTR ds:0x34544747,eax
  419a01:	ins    BYTE PTR es:[edi],dx
  419a02:	mov    eax,0x2177f1db
  419a07:	push   ecx
  419a08:	cmp    BYTE PTR [ebp-0x6c443d18],ch
  419a0e:	das    
  419a0f:	xor    edx,ebx
  419a11:	jl     0x419a29
  419a13:	shl    DWORD PTR [ecx-0x6b2f5c31],1
  419a19:	clc    
  419a1a:	(bad)  
  419a1b:	jae    0x4199df
  419a1d:	sub    DWORD PTR [edi+0x1ba8ef0d],esp
  419a23:	in     eax,0xac
  419a25:	mov    esp,0xd7174e34
  419a2a:	pop    ebx
  419a2b:	mov    ecx,DWORD PTR [edi+0x217c68ed]
  419a31:	jp     0x419aaf
  419a33:	push   esi
  419a34:	push   edx
  419a35:	sub    eax,0xd4af3797
  419a3a:	adc    al,0x70
  419a3c:	cmp    eax,0x849ce590
  419a41:	fidivr WORD PTR [ebx]
  419a43:	jae    0x419a22
  419a45:	sub    al,0x9b
  419a47:	repz mov ds:0xe7308b41,eax
  419a4d:	mov    eax,cr1
  419a50:	inc    edi
  419a51:	push   es
  419a52:	or     ebx,DWORD PTR [edx+0x60]
  419a55:	sub    ah,dh
  419a57:	inc    ecx
  419a58:	adc    BYTE PTR [esp],cl
  419a5b:	inc    edi
  419a5d:	sbb    al,0x84
  419a5f:	test   DWORD PTR [eax+eiz*8-0x4e364a9f],edi
  419a66:	(bad)  
  419a67:	sbb    DWORD PTR [esi-0xd],esi
  419a6a:	out    dx,al
  419a6b:	cmp    ch,bh
  419a6d:	addr16 pushf 
  419a6f:	add    dh,BYTE PTR [eax]
  419a71:	dec    eax
  419a72:	into   
  419a73:	xchg   ebx,eax
  419a74:	or     DWORD PTR [eax+eiz*4],esp
  419a77:	je     0x419ae6
  419a79:	inc    edx
  419a7a:	or     DWORD PTR [edx+edx*1],esp
  419a7d:	into   
  419a7e:	sub    edi,ebx
  419a80:	test   BYTE PTR [ecx+0x4c],al
  419a83:	ins    DWORD PTR es:[edi],dx
  419a84:	lahf   
  419a85:	mov    edx,0x4a02876f
  419a8a:	cmc    
  419a8b:	cmp    BYTE PTR [esi+0x2fc82613],0x77
  419a92:	xor    dh,bl
  419a94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a95:	mov    dh,0x34
  419a97:	jecxz  0x419a39
  419a99:	je     0x419b12
  419a9b:	mov    ch,0xb6
  419a9d:	mov    ebx,DWORD PTR [ebx+0xe4d6a10]
  419aa3:	fsub   st(3),st
  419aa5:	fadd   QWORD PTR [ecx+0x38]
  419aa8:	adc    eax,0x29d325e7
  419aad:	scas   eax,DWORD PTR es:[edi]
  419aae:	rcl    DWORD PTR [ebp-0x20eb4b7f],1
  419ab4:	mov    ds:0x69e1f8d8,al
  419ab9:	jge    0x419a94
  419abb:	popf   
  419abc:	icebp  
  419abd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419abe:	sahf   
  419abf:	cwde   
  419ac0:	pop    esp
  419ac1:	xor    eax,0x71c3adb0
  419ac6:	push   edi
  419ac7:	(bad)  
  419ac9:	loope  0x419ad1
  419acb:	mov    ds:0x76a9de6c,eax
  419ad0:	sbb    eax,0x1938847d
  419ad5:	fnstenv [ebp+0x47]
  419ad8:	cs pop ebx
  419ada:	hlt    
  419adb:	dec    esp
  419adc:	cmp    ah,dh
  419ade:	mov    esp,0xc2d9f9ab
  419ae3:	and    BYTE PTR [ebp+0x58],0x2
  419ae7:	jmp    0x42ce:0xade389ef
  419aee:	pop    edx
  419aef:	ret    
  419af0:	cmp    ecx,DWORD PTR [ebp+0x1f60d8ef]
  419af6:	xor    ebx,DWORD PTR [ebx]
  419af8:	fcomp  QWORD PTR [esi]
  419afa:	push   0x28
  419afc:	mov    al,ds:0x8cf0440f
  419b01:	pop    ss
  419b02:	or     BYTE PTR [esi+0x3d1197c8],ah
  419b08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b09:	mov    cl,0x47
  419b0b:	adc    edx,DWORD PTR [eax+0x27f49a4d]
  419b11:	inc    ebx
  419b12:	mov    WORD PTR ds:0xa9244cf5,?
  419b18:	fmul   QWORD PTR [eax]
  419b1a:	call   0x69790ea4
  419b1f:	mov    al,ds:0xe2185d43
  419b24:	mov    ds:0xe5fdd0d9,eax
  419b29:	xchg   ebx,eax
  419b2a:	dec    ebp
  419b2b:	mov    eax,ds:0x2fffd68
  419b30:	inc    edx
  419b31:	gs sbb eax,0x59f278de
  419b37:	jmp    0x419b25
  419b39:	adc    DWORD PTR [eax],ecx
  419b3b:	xchg   BYTE PTR [edi+0x715f5574],bl
  419b41:	repz ror BYTE PTR [esi-0x125e1d18],cl
  419b48:	rcr    DWORD PTR [ecx],cl
  419b4a:	ror    DWORD PTR [ecx],0xa9
  419b4d:	stc    
  419b4e:	pop    ebx
  419b4f:	add    dh,BYTE PTR [edx]
  419b51:	and    eax,DWORD PTR es:[ebp-0x1e4662b8]
  419b58:	(bad)  
  419b59:	and    al,0x9b
  419b5b:	leave  
  419b5c:	sbb    eax,0xe45ebf24
  419b61:	adc    eax,0xb6b3d49a
  419b66:	pop    edi
  419b67:	in     al,dx
  419b68:	jle    0x419b01
  419b6a:	nop
  419b6b:	xchg   ebp,eax
  419b6c:	pop    es
  419b6d:	pushf  
  419b6e:	or     BYTE PTR [ebx-0x15a179a6],ch
  419b74:	vsubpd ymm0,ymm0,YMMWORD PTR [edi+0x7]
  419b79:	repnz mov ebx,0x4dc8052e
  419b7f:	and    DWORD PTR [ecx],ecx
  419b81:	fist   DWORD PTR [ebx+0x7772df5b]
  419b87:	imul   esi,edi,0xffffffa9
  419b8a:	sbb    BYTE PTR [esi],ch
  419b8c:	out    dx,eax
  419b8d:	xor    BYTE PTR [eax-0x5271414d],bh
  419b93:	cmp    eax,0xf80b30a7
  419b98:	ins    BYTE PTR es:[edi],dx
  419b99:	and    eax,0xe650df4b
  419b9e:	ds fcmovne st,st(1)
  419ba1:	fiadd  DWORD PTR [edi-0x1c]
  419ba4:	add    al,0x66
  419ba6:	pop    ebx
  419ba7:	adc    DWORD PTR [eax-0x6f],esi
  419baa:	or     al,ah
  419bac:	(bad)  [ebx+0x22e5b3ec]
  419bb2:	sbb    esp,DWORD PTR [ecx+0x5ff52adc]
  419bb8:	push   eax
  419bb9:	popa   
  419bba:	mov    dl,0x90
  419bbc:	adc    DWORD PTR [esi+0x6ff1ece4],edx
  419bc2:	cmp    dh,BYTE PTR [edx]
  419bc4:	sahf   
  419bc5:	xor    eax,0x822df022
  419bca:	mov    ah,0xe
  419bcc:	push   0x8c2de5eb
  419bd1:	mov    bl,0xf9
  419bd3:	sbb    dl,bh
  419bd5:	and    ecx,ebx
  419bd7:	cdq    
  419bd8:	push   0x6d
  419bda:	mov    ah,0x22
  419bdc:	push   edi
  419bdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bde:	inc    edx
  419bdf:	mov    ebp,DWORD PTR [ecx]
  419be1:	sub    dl,BYTE PTR [eax]
  419be3:	xor    BYTE PTR [ebx],bh
  419be5:	xor    cl,BYTE PTR [ebp-0xff3c9df]
  419beb:	and    eax,0x5567c2dc
  419bf0:	push   ds
  419bf1:	stc    
  419bf2:	push   edx
  419bf3:	(bad)  
  419bf4:	nop    DWORD PTR ds:0x4eb57f4
  419bfb:	push   eax
  419bfc:	jecxz  0x419b8e
  419bfe:	xchg   ecx,eax
  419bff:	fisubr WORD PTR [eax+eiz*1-0x6e]
  419c03:	shl    DWORD PTR [ecx-0x3a2157c],cl
  419c09:	pop    esp
  419c0a:	shr    dl,0xcc
  419c0d:	sub    DWORD PTR [ebx-0x5e11e30d],eax
  419c13:	addr16 xchg esp,eax
  419c15:	sub    eax,0x509b628e
  419c1a:	lods   al,BYTE PTR ds:[esi]
  419c1b:	cmp    al,BYTE PTR [ebp+0x48]
  419c1e:	das    
  419c1f:	out    0xd5,eax
  419c21:	ja     0x419c37
  419c23:	xchg   ecx,eax
  419c24:	xchg   ebp,eax
  419c25:	mov    edi,0x9c981300
  419c2a:	inc    ecx
  419c2b:	adc    DWORD PTR [ebp-0x53],ebp
  419c2e:	aas    
  419c2f:	push   ebx
  419c30:	mov    DWORD PTR [eax-0x28347ae0],esp
  419c36:	mov    ds:0xfb6aa79a,eax
  419c3b:	add    BYTE PTR [esi-0x3015454b],ch
  419c41:	and    BYTE PTR [eax-0xa4b4ac],0x7f
  419c48:	adc    BYTE PTR [esi-0x715b5c59],bh
  419c4e:	repz inc edi
  419c50:	push   ss
  419c51:	jecxz  0x419c83
  419c53:	dec    edi
  419c54:	xchg   edx,eax
  419c55:	stos   DWORD PTR es:[edi],eax
  419c56:	jnp    0x419bfa
  419c58:	inc    esi
  419c59:	nop
  419c5a:	lea    edx,[edi-0x18]
  419c5d:	push   ecx
  419c5e:	sbb    DWORD PTR [esi-0x45],ebp
  419c61:	inc    ebx
  419c62:	(bad)  
  419c64:	mov    eax,0xd078e4cd
  419c69:	xchg   ecx,eax
  419c6a:	cmp    BYTE PTR [ecx],cl
  419c6c:	xchg   esp,eax
  419c6d:	mov    ebx,es
  419c6f:	pop    edx
  419c70:	mov    cl,0x73
  419c72:	test   eax,0x6a4f8667
  419c77:	sbb    BYTE PTR [ecx],al
  419c79:	sub    ebx,DWORD PTR [ebp+0x4d]
  419c7c:	imul   ecx,DWORD PTR [edx+ecx*1+0x71],0xffffffc5
  419c81:	hlt    
  419c82:	(bad)  
  419c83:	push   eax
  419c84:	pop    es
  419c85:	lock js 0x419cb8
  419c88:	(bad)  
  419c89:	popf   
  419c8a:	ficom  DWORD PTR [ebp-0x1b3ecc82]
  419c90:	shl    ecx,1
  419c92:	adc    eax,0x6e6a3de4
  419c97:	stos   DWORD PTR es:[edi],eax
  419c98:	sbb    al,0x7e
  419c9a:	lods   eax,DWORD PTR ds:[esi]
  419c9b:	cwde   
  419c9c:	mov    dh,0xde
  419c9e:	add    bl,BYTE PTR [edx+0x5b]
  419ca1:	sub    DWORD PTR [ebp-0x492e13eb],ebx
  419ca7:	mov    eax,0xd2026d94
  419cac:	(bad)  
  419cad:	std    
  419cae:	xchg   esi,eax
  419caf:	scas   al,BYTE PTR es:[edi]
  419cb0:	mov    ebp,0xf83ba4fe
  419cb5:	aam    0xbb
  419cb7:	hlt    
  419cb8:	in     al,dx
  419cb9:	adc    eax,0x4f1336ff
  419cbe:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  419cc0:	mov    edx,0x2c0cd44a
  419cc5:	fbstp  TBYTE PTR [esp+edi*2+0x78b6fe49]
  419ccc:	jecxz  0x419ccb
  419cce:	dec    dx
  419cd0:	std    
  419cd1:	std    
  419cd2:	push   ecx
  419cd3:	popa   
  419cd4:	in     al,dx
  419cd5:	adc    eax,0xa8e41b4d
  419cda:	arpl   WORD PTR [edx+0x4552b6f6],cx
  419ce0:	mov    dh,0x47
  419ce2:	scas   eax,DWORD PTR es:[edi]
  419ce3:	cs mov bl,0xb2
  419ce6:	stc    
  419ce7:	ss push edx
  419ce9:	pop    edi
  419cea:	lds    ebx,FWORD PTR [eax-0x2d]
  419ced:	femms  
  419cef:	lods   al,BYTE PTR ds:[esi]
  419cf0:	in     al,dx
  419cf1:	mov    al,ds:0x7d4dc30e
  419cf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cf7:	pop    eax
  419cf8:	(bad)  
  419cf9:	mov    ch,0xc7
  419cfb:	or     DWORD PTR [edx],esp
  419cfd:	pop    ebp
  419cfe:	es push edx
  419d00:	fnstsw WORD PTR [ebp-0x45d8b8f4]
  419d06:	cmc    
  419d07:	and    ebp,eax
  419d09:	test   DWORD PTR [edx+0xda50c31],edi
  419d0f:	test   BYTE PTR [eax],ch
  419d11:	std    
  419d12:	ds mov bl,0x8f
  419d15:	pop    edx
  419d16:	xchg   esp,eax
  419d17:	(bad)  
  419d18:	sbb    DWORD PTR [ecx-0x5a],0xc671e731
  419d1f:	mov    BYTE PTR [edx+edi*8+0x42],bh
  419d23:	sub    BYTE PTR [ebx+0x51],cl
  419d26:	cli    
  419d27:	add    al,0x57
  419d29:	js     0x419d60
  419d2b:	pusha  
  419d2c:	jmp    0x419d0c
  419d2e:	js     0x419ccf
  419d30:	sub    esp,esp
  419d32:	adc    al,bh
  419d34:	xlat   BYTE PTR ds:[ebx]
  419d35:	hlt    
  419d36:	rol    BYTE PTR [eax],1
  419d38:	js     0x419cfd
  419d3a:	inc    edx
  419d3b:	mov    ebx,0x33200b59
  419d40:	and    esi,DWORD PTR [edx+0x4c48607b]
  419d46:	test   al,0x47
  419d48:	retf   
  419d49:	jecxz  0x419cf4
  419d4b:	push   esi
  419d4c:	mov    dh,0x61
  419d4e:	enter  0x1d4e,0x9a
  419d52:	pcmpgtw mm7,mm3
  419d55:	pop    eax
  419d56:	cmp    al,0x3d
  419d58:	sbb    BYTE PTR [eax+0x25],0x88
  419d5c:	mov    al,ds:0xf7354cc7
  419d61:	rcl    BYTE PTR ds:0xda689737,1
  419d67:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  419d69:	or     ch,ah
  419d6b:	loop   0x419ced
  419d6d:	or     eax,0xa1133c3a
  419d72:	int3   
  419d73:	ja     0x419d29
  419d75:	aas    
  419d76:	adc    al,bh
  419d78:	adc    eax,DWORD PTR ds:[esi-0x18]
  419d7c:	pop    eax
  419d7d:	sbb    al,0xa5
  419d7f:	jmp    0xe2ef:0xd96e0e9a
  419d86:	jns    0x419d8d
  419d88:	mov    ebp,0xdda5c2f
  419d8d:	stc    
  419d8e:	jge    0x419dc2
  419d90:	jmp    0x419d6e
  419d92:	push   esp
  419d93:	paddsb mm5,mm1
  419d96:	out    0x12,eax
  419d98:	(bad)  
  419d9a:	out    0x87,al
  419d9c:	mov    ebp,0xa7f0bac
  419da1:	aas    
  419da2:	inc    edx
  419da3:	les    edi,FWORD PTR [eax]
  419da5:	push   esi
  419da6:	scas   al,BYTE PTR es:[edi]
  419da7:	bound  edx,QWORD PTR [ebx-0x536e17ea]
  419dad:	shl    BYTE PTR [ebx+esi*8+0x45],cl
  419db1:	mov    ecx,0x5f370222
  419db6:	out    dx,al
  419db7:	(bad)  
  419db8:	fadd   QWORD PTR [eax]
  419dba:	dec    ebp
  419dbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419dbc:	cwde   
  419dbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419dbe:	cmp    BYTE PTR [esi+eiz*8+0x3e],bh
  419dc2:	(bad)  
  419dc3:	fcmovu st,st(5)
  419dc5:	(bad)  
  419dc6:	fst    QWORD PTR [esi+edi*4-0x9018ccf]
  419dcd:	cmp    ebx,DWORD PTR [edx-0x3b]
  419dd0:	loopne 0x419da8
  419dd2:	ss pop edx
  419dd4:	push   cs
  419dd5:	ds inc eax
  419dd7:	adc    al,0xd0
  419dd9:	push   eax
  419dda:	icebp  
  419ddb:	stos   DWORD PTR es:[edi],eax
  419ddc:	add    al,BYTE PTR [esi+0x73]
  419ddf:	pop    sp
  419de1:	add    DWORD PTR [edi+0x3],eax
  419de4:	aas    
  419de5:	pop    ss
  419de6:	stc    
  419de7:	pop    ss
  419de8:	iret   
  419de9:	(bad)  
  419dea:	out    0x1b,eax
  419dec:	stos   BYTE PTR es:[edi],al
  419ded:	bound  ecx,QWORD PTR [ebx-0x4b76fa57]
  419df3:	dec    ebx
  419df4:	sub    eax,0x6c30ace9
  419df9:	int    0xeb
  419dfb:	dec    esp
  419dfc:	add    BYTE PTR [ebx-0x14d6cc50],ch
  419e02:	fmul   st,st(7)
  419e04:	lock sbb al,0x88
  419e08:	xor    ebx,DWORD PTR [edx+eiz*4-0x72f461b0]
  419e0f:	lods   al,BYTE PTR ds:[esi]
  419e10:	or     cl,BYTE PTR [esi]
  419e12:	je     0x419e32
  419e14:	repnz or al,0x76
  419e17:	(bad)  
  419e18:	shl    DWORD PTR [ecx+0x2b],1
  419e1b:	cmp    bl,BYTE PTR [edi+0x66]
  419e1e:	into   
  419e1f:	sar    BYTE PTR [esi],0x97
  419e22:	mov    ecx,0x4094e476
  419e27:	sub    eax,0xe416abe5
  419e2c:	scas   eax,DWORD PTR es:[edi]
  419e2d:	push   ebx
  419e2e:	fwait
  419e2f:	jl     0x419e35
  419e31:	cmp    eax,0xd534a17b
  419e36:	mov    bl,0xf6
  419e38:	repz dec ebp
  419e3a:	xor    BYTE PTR [eax-0x30],0x68
  419e3e:	cmc    
  419e3f:	call   0xa4e0c128
  419e44:	or     DWORD PTR [esi],ecx
  419e46:	cmp    DWORD PTR [edi],edx
  419e48:	pop    ds
  419e49:	pop    edi
  419e4a:	test   ebx,edi
  419e4c:	lock stos DWORD PTR es:[edi],eax
  419e4e:	inc    esp
  419e4f:	data16 aaa 
  419e51:	jecxz  0x419df1
  419e53:	jmp    0x419dfc
  419e55:	ret    
  419e56:	adc    eax,0x61f582fa
  419e5b:	cmp    al,dl
  419e5d:	rcl    ebp,cl
  419e5f:	xchg   ch,dh
  419e61:	out    0xa5,eax
  419e63:	pop    ds
  419e64:	lahf   
  419e65:	xchg   esp,eax
  419e66:	xchg   BYTE PTR [ebx],cl
  419e68:	jge    0x419e9e
  419e6a:	dec    esp
  419e6b:	mov    ch,0xb
  419e6d:	dec    esi
  419e6e:	imul   ebx,DWORD PTR ds:0x207dcf6e,0xffffff90
  419e75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e76:	jecxz  0x419e41
  419e78:	mov    bl,0x35
  419e7a:	lahf   
  419e7b:	mov    ch,0x83
  419e7d:	fild   DWORD PTR [ecx]
  419e7f:	cmp    al,BYTE PTR [ecx+ebx*1+0x3572f87]
  419e86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e87:	fstp   st(1)
  419e89:	sbb    DWORD PTR [eax+0x200e115a],0x3d7f55ec
  419e93:	pop    ebp
  419e94:	and    eax,0x91f0d857
  419e99:	xor    ax,0xc0a9
  419e9d:	and    eax,0x4db24efe
  419ea2:	mov    DWORD PTR [esi],edx
  419ea4:	popf   
  419ea5:	imul   ebp,esi,0xc3129ff1
  419eab:	(bad)  
  419eac:	je     0x419f15
  419eae:	outs   dx,BYTE PTR ds:[esi]
  419eaf:	sub    ebx,esp
  419eb1:	clc    
  419eb2:	mov    cs,WORD PTR [esi-0x27]
  419eb5:	or     al,0x92
  419eb7:	adc    BYTE PTR [esi],dl
  419eb9:	mov    edi,DWORD PTR [edi-0x4]
  419ebc:	add    ebx,DWORD PTR [ebx+0x7cd29d19]
  419ec2:	xchg   esp,eax
  419ec3:	mov    eax,ds:0xfe73c437
  419ec8:	cmp    DWORD PTR [edx],edi
  419eca:	cmp    DWORD PTR [bp+si],0x69
  419ece:	es aam 0x61
  419ed1:	pop    es
  419ed2:	fucom  st(7)
  419ed4:	mov    dh,0x11
  419ed6:	pop    ebx
  419ed7:	gs mov ch,0xa8
  419eda:	or     edi,DWORD PTR [eax-0x3c]
  419edd:	pop    ebp
  419ede:	or     BYTE PTR [esi+0x23],bl
  419ee1:	retf   
  419ee2:	je     0x419f62
  419ee4:	cs push 0xffffff86
  419ee7:	jge    0x419f3e
  419ee9:	jae    0x419f50
  419eeb:	pusha  
  419eec:	push   cs
  419eed:	or     BYTE PTR [ecx-0x4e],cl
  419ef0:	jns    0x419e77
  419ef2:	arpl   si,ax
  419ef4:	test   BYTE PTR [ebx+esi*4],ah
  419ef7:	out    dx,eax
  419ef8:	test   BYTE PTR [eax+0x19],dl
  419efb:	pop    ebx
  419efc:	cmp    DWORD PTR [edi-0x259ae342],0x13
  419f03:	xchg   ecx,eax
  419f04:	imul   DWORD PTR [ebx+0x2579ae3b]
  419f0a:	cmp    BYTE PTR [eax+esi*8],bl
  419f0d:	xchg   esp,eax
  419f0e:	adc    DWORD PTR ds:0x8973ff91,ebx
  419f14:	dec    esp
  419f15:	or     BYTE PTR [ebx-0x5c6383fb],ch
  419f1b:	and    ch,BYTE PTR [esi]
  419f1d:	sbb    eax,0x90c2c0bf
  419f22:	add    DWORD PTR [esi+0x7b46d4a7],esp
  419f28:	push   ss
  419f29:	sub    al,0x8a
  419f2b:	mov    BYTE PTR [edi],dl
  419f2d:	mov    bl,0x4
  419f2f:	iret   
  419f30:	mov    esp,0x85fdda31
  419f35:	mov    BYTE PTR [esp+ebx*8+0x32715e60],dh
  419f3c:	mov    ds:0x3a138bc2,al
  419f41:	adc    al,0x77
  419f43:	pop    edx
  419f44:	enter  0x978e,0x28
  419f48:	add    ebp,edi
  419f4a:	neg    BYTE PTR [ebx+0x7ab279bf]
  419f50:	scas   eax,DWORD PTR es:[edi]
  419f51:	out    0x88,al
  419f53:	push   cs
  419f54:	or     eax,0xf28508e4
  419f59:	popa   
  419f5a:	hlt    
  419f5b:	mov    cl,0xd7
  419f5d:	mov    BYTE PTR [eax+edx*4+0x3a],dh
  419f61:	mov    dh,0xa0
  419f63:	push   edi
  419f64:	pop    esi
  419f65:	pop    es
  419f66:	xor    ebp,DWORD PTR [esi]
  419f68:	test   al,0x7
  419f6a:	mov    cl,0xfe
  419f6c:	sbb    al,0x4f
  419f6e:	mov    ebx,0x99be5605
  419f73:	je     0x419f7c
  419f75:	add    DWORD PTR [edi],ebx
  419f77:	in     eax,dx
  419f78:	xchg   ebp,eax
  419f79:	pop    esp
  419f7a:	xchg   ebp,eax
  419f7b:	push   edx
  419f7c:	adc    DWORD PTR [esi+0x6f9d1f8d],edx
  419f82:	xchg   DWORD PTR [ebx+0x36],edx
  419f85:	ins    BYTE PTR es:[edi],dx
  419f86:	push   ebp
  419f87:	push   ds
  419f88:	sub    DWORD PTR [ebp-0x7ac00c15],0xffffff90
  419f8f:	mov    al,ds:0xdf6f2b23
  419f94:	xchg   ecx,eax
  419f95:	rcr    dl,cl
  419f97:	rcl    BYTE PTR [ebp-0x2319930a],cl
  419f9d:	out    dx,al
  419f9e:	mov    ecx,DWORD PTR [ebp-0x21]
  419fa1:	jle    0x419fdb
  419fa3:	(bad)  [esi+0x55]
  419fa6:	xchg   ecx,eax
  419fa7:	jmp    0x419f71
  419fa9:	xchg   BYTE PTR [ecx],bl
  419fab:	mov    eax,ds:0x7faa393
  419fb0:	aaa    
  419fb1:	gs pop ss
  419fb3:	pushf  
  419fb4:	sbb    DWORD PTR [ecx+0x30],ebx
  419fb7:	repz jmp 0x419fb2
  419fba:	sbb    DWORD PTR [ecx],0x434008b9
  419fc0:	jno    0x419fd3
  419fc2:	iret   
  419fc3:	inc    ebx
  419fc4:	inc    eax
  419fc5:	(bad)  
  419fc6:	pushf  
  419fc7:	icebp  
  419fc8:	shr    DWORD PTR [eax-0x4d],cl
  419fcb:	dec    ebp
  419fcc:	(bad)  
  419fcd:	mov    ds:0xf4685f8,eax
  419fd2:	imul   eax,esi,0xe16da611
  419fd8:	mov    fs,WORD PTR [edi+0x7a]
  419fdb:	ss aaa 
  419fdd:	fsub   DWORD PTR [eiz*4+0x5cd1d897]
  419fe4:	sti    
  419fe5:	hlt    
  419fe6:	div    BYTE PTR [eax-0x70]
  419fe9:	inc    ebx
  419fea:	xchg   ecx,eax
  419feb:	jmp    0x41a028
  419fed:	pop    esi
  419fee:	ja     0x419ff0
  419ff0:	mov    ds:0x4a830c37,al
  419ff5:	mov    BYTE PTR [ecx],ah
  419ff7:	sub    edx,DWORD PTR [ebx+0x6c7eaee8]
  419ffd:	test   edi,ebx
  419fff:	pusha  
  41a000:	fisttp QWORD PTR [ebx+0x58]
  41a003:	dec    eax
  41a004:	pop    ss
  41a005:	mov    dh,0x1e
  41a007:	enter  0xa97a,0xda
  41a00b:	mov    BYTE PTR [ebx+0x2c],dl
  41a00e:	das    
  41a00f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a010:	xor    eax,0x5d630422
  41a015:	cld    
  41a016:	outs   dx,BYTE PTR ds:[esi]
  41a017:	cmp    DWORD PTR [eax+0x16],edx
  41a01a:	cld    
  41a01b:	and    edx,DWORD PTR [eax+0x9]
  41a01e:	or     DWORD PTR [eax-0x389719ac],esp
  41a024:	jae    0x419fb4
  41a026:	fnstsw WORD PTR [ebx-0x2b214eb0]
  41a02c:	push   eax
  41a02d:	jno    0x41a042
  41a02f:	lahf   
  41a030:	into   
  41a031:	sub    al,0x84
  41a033:	imul   ebp,DWORD PTR [ebx-0x38],0x9
  41a037:	outs   dx,DWORD PTR ds:[esi]
  41a038:	add    ebx,DWORD PTR ds:0x20c23500
  41a03e:	fwait
  41a03f:	adc    cl,BYTE PTR [eax+eax*1]
  41a042:	sbb    eax,0x60d8c3c5
  41a047:	rsm    
  41a049:	dec    esp
  41a04a:	mov    edx,?
  41a04c:	inc    ebp
  41a04d:	adc    al,0x5c
  41a04f:	das    
  41a050:	jecxz  0x419ff1
  41a052:	inc    ebx
  41a053:	sbb    BYTE PTR ss:[ebx-0x5289d6ff],ah
  41a05a:	jle    0x41a096
  41a05c:	call   0x6d27:0xf1e37fca
  41a063:	or     edx,DWORD PTR [edx]
  41a065:	inc    DWORD PTR [eax]
  41a067:	ja     0x41a06a
  41a069:	into   
  41a06a:	pop    esi
  41a06b:	in     eax,0xa8
  41a06d:	hlt    
  41a06e:	pop    eax
  41a06f:	out    0xd0,al
  41a071:	push   es
  41a072:	mov    al,ds:0xad344fd1
  41a077:	adc    BYTE PTR [edi],dh
  41a079:	repz jb 0x41a0e6
  41a07c:	pop    ss
  41a07d:	xchg   edi,eax
  41a07e:	loop   0x41a0ed
  41a080:	pop    esp
  41a081:	(bad)  [ecx+0x53]
  41a084:	iret   
  41a085:	or     al,0xd9
  41a087:	(bad)  [ecx+0x1]
  41a08a:	xor    al,0x2b
  41a08c:	dec    esp
  41a08d:	daa    
  41a08e:	ds loop 0x41a05a
  41a091:	pusha  
  41a092:	pop    ebx
  41a093:	inc    esp
  41a094:	or     eax,0x6942838f
  41a099:	outs   dx,BYTE PTR ds:[esi]
  41a09a:	mov    esi,0x957e0f12
  41a09f:	or     bl,BYTE PTR [esi+0x21fa33d0]
  41a0a5:	sbb    al,0xd0
  41a0a7:	mov    WORD PTR [eax-0x60],ds
  41a0aa:	data16 fidiv WORD PTR es:[ebx]
  41a0ae:	mov    edx,0xea198a8e
  41a0b3:	push   ss
  41a0b4:	or     edi,ecx
  41a0b6:	push   es
  41a0b7:	lods   eax,DWORD PTR ds:[esi]
  41a0b8:	aas    
  41a0b9:	int3   
  41a0ba:	and    DWORD PTR [ebp+0x58ef7f84],esp
  41a0c0:	jecxz  0x41a0a1
  41a0c2:	int3   
  41a0c3:	inc    ecx
  41a0c4:	in     al,dx
  41a0c5:	dec    eax
  41a0c6:	xchg   ebp,eax
  41a0c7:	dec    esp
  41a0c8:	lock jmp 0x41a0ca
  41a0cb:	pop    ss
  41a0cc:	jge    0x41a121
  41a0ce:	or     bl,0x18
  41a0d1:	adc    DWORD PTR [ebx-0x5a6cdc60],esp
  41a0d7:	mov    cl,0xf7
  41a0d9:	add    eax,0x5a8cdc03
  41a0de:	mov    cl,0x34
  41a0e0:	rol    DWORD PTR [esi-0x14],cl
  41a0e3:	fdivr  QWORD PTR [edx-0x428a3db1]
  41a0e9:	xor    esi,edi
  41a0eb:	push   eax
  41a0ec:	fldcw  WORD PTR [esi+ecx*4-0x3c]
  41a0f0:	inc    esi
  41a0f1:	ficom  DWORD PTR [esi+0x59]
  41a0f4:	out    dx,eax
  41a0f5:	aam    0x43
  41a0f7:	sub    BYTE PTR [ebp+0x56],ah
  41a0fa:	cli    
  41a0fb:	sbb    eax,0x66d93903
  41a100:	lock test eax,0xfed3da19
  41a106:	ret    0x3a09
  41a109:	(bad)  [esi]
  41a10b:	mov    ss,WORD PTR ds:0x679bebe4
  41a111:	inc    esi
  41a112:	mov    ds:0x749ba9ea,eax
  41a117:	mov    WORD PTR [esi],?
  41a119:	inc    edx
  41a11a:	jg     0x41a0e6
  41a11c:	dec    edi
  41a11d:	paddq  mm6,QWORD PTR [esi*1+0x5703fb03]
  41a125:	or     al,0xb4
  41a127:	outs   dx,DWORD PTR ds:[esi]
  41a128:	ds loopne 0x41a127
  41a12b:	test   BYTE PTR [eax],bh
  41a12d:	icebp  
  41a12e:	pop    es
  41a12f:	and    esp,edx
  41a131:	imul   BYTE PTR [ebx+ebp*4-0x6aa64d83]
  41a138:	lock int3 
  41a13a:	fdivrp st(4),st
  41a13c:	cdq    
  41a13d:	inc    ebx
  41a13e:	push   edi
  41a13f:	les    ebp,FWORD PTR [eax+0x73]
  41a142:	mov    eax,ds:0xf2161775
  41a147:	pop    ds
  41a148:	or     al,0x58
  41a14a:	and    DWORD PTR [ecx-0x52],ebp
  41a14d:	mov    ebp,0x9a6c7d07
  41a152:	cmc    
  41a153:	setno  BYTE PTR [edi-0x46c33e63]
  41a15a:	sub    esp,ebx
  41a15c:	push   ecx
  41a15d:	mov    ?,WORD PTR [esp+esi*4-0x72]
  41a161:	in     eax,0xdf
  41a163:	inc    ebp
  41a164:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a165:	mov    ah,0x20
  41a167:	cmp    bh,BYTE PTR [esi]
  41a169:	and    al,BYTE PTR [edi+ebx*1]
  41a16c:	mov    bl,0x46
  41a16e:	stos   BYTE PTR es:[edi],al
  41a16f:	loope  0x41a1b7
  41a171:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a172:	mov    dh,0x78
  41a174:	mov    esi,0xab420faf
  41a179:	sbb    al,0x65
  41a17b:	mov    eax,0x40b1fec9
  41a180:	push   0x7728218d
  41a185:	mov    ds:0x8f52481,al
  41a18a:	(bad)  
  41a18b:	leave  
  41a18c:	mov    bh,0x8c
  41a18e:	cmp    ebp,edx
  41a190:	sti    
  41a191:	(bad)  
  41a192:	mov    ecx,DWORD PTR [edi+ebp*2]
  41a195:	sbb    ch,BYTE PTR [eax+0x22f6c058]
  41a19b:	arpl   sp,si
  41a19d:	xchg   DWORD PTR [edx+eax*4+0x71],edx
  41a1a1:	sub    bh,BYTE PTR [ebx+0x4e953b9b]
  41a1a7:	bound  ebp,QWORD PTR [ecx-0x5b]
  41a1aa:	jno    0x41a16f
  41a1ac:	in     eax,0x1f
  41a1ae:	jecxz  0x41a153
  41a1b0:	cmp    eax,0xe8d3a423
  41a1b5:	or     ah,cl
  41a1b7:	mov    edx,0x6a857329
  41a1bc:	lods   eax,DWORD PTR ds:[esi]
  41a1bd:	jmp    0x41a156
  41a1bf:	or     BYTE PTR [ebx-0x30],0x83
  41a1c3:	sti    
  41a1c4:	out    0x4a,eax
  41a1c6:	mov    ebp,0xee143a6c
  41a1cb:	in     eax,dx
  41a1cc:	mov    ebx,0xc838fcb4
  41a1d1:	repz xor ch,BYTE PTR [ecx-0x10]
  41a1d5:	push   0x1c
  41a1d7:	mov    al,ds:0xf6082b5c
  41a1dc:	fist   WORD PTR [ecx]
  41a1de:	jne    0x41a17f
  41a1e0:	sahf   
  41a1e1:	pop    es
  41a1e2:	mov    ebx,0xd29937c6
  41a1e7:	xor    esp,edi
  41a1e9:	cmc    
  41a1ea:	or     bh,ah
  41a1ec:	pop    ds
  41a1ed:	jg     0x41a252
  41a1ef:	loope  0x41a1ee
  41a1f1:	pop    ecx
  41a1f2:	xor    dh,ah
  41a1f4:	dec    dh
  41a1f6:	fsub   QWORD PTR [eax+0x399af54b]
  41a1fc:	xchg   ecx,eax
  41a1fd:	(bad)  
  41a1fe:	jae    0x41a1bf
  41a200:	or     DWORD PTR [esi],esi
  41a202:	test   bh,al
  41a204:	sub    BYTE PTR [ebp-0x77f7e9db],dh
  41a20a:	shr    BYTE PTR [esi-0x273fd356],1
  41a210:	fidiv  DWORD PTR [ebp+0x7b]
  41a213:	pop    ds
  41a214:	lock icebp 
  41a216:	fimul  WORD PTR [ebx+0x0]
  41a219:	cwde   
  41a21a:	(bad)  
  41a21c:	sub    eax,0x246a45b1
  41a221:	ja     0x41a21c
  41a223:	into   
  41a224:	xchg   edx,eax
  41a225:	sti    
  41a226:	test   al,0x51
  41a228:	push   0x64
  41a22a:	sub    bh,BYTE PTR [eax-0x3]
  41a22d:	dec    esi
  41a22e:	retf   0xdb06
  41a231:	ret    0x4e57
  41a234:	adc    al,dh
  41a236:	in     eax,0xb9
  41a238:	jl     0x41a29e
  41a23a:	je     0x41a201
  41a23c:	mov    ds:0xb5a42f9b,eax
  41a241:	scas   eax,DWORD PTR es:[edi]
  41a242:	sti    
  41a243:	shr    esp,0x3c
  41a246:	(bad)  
  41a248:	(bad)  
  41a249:	push   eax
  41a24a:	add    al,0x9f
  41a24c:	push   edi
  41a24d:	push   ecx
  41a24e:	cmp    DWORD PTR [edx],eax
  41a250:	jnp    0x41a25c
  41a252:	ds loope 0x41a234
  41a255:	or     al,0xc5
  41a257:	popf   
  41a258:	xor    eax,DWORD PTR [edx]
  41a25a:	inc    eax
  41a25b:	outs   dx,DWORD PTR ds:[esi]
  41a25c:	mov    ebx,0xba47e15d
  41a261:	mov    ds:0xb66cdb1f,eax
  41a266:	jo     0x41a2c0
  41a268:	outs   dx,BYTE PTR ds:[esi]
  41a269:	adc    al,0xcf
  41a26b:	dec    eax
  41a26c:	sub    ebx,DWORD PTR [ebx]
  41a26e:	rcl    BYTE PTR [edx-0x41],1
  41a271:	ror    bh,0xd1
  41a274:	jae    0x41a283
  41a276:	fwait
  41a277:	scas   al,BYTE PTR es:[edi]
  41a278:	imul   edx
  41a27a:	pop    ds
  41a27b:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41a27d:	inc    ebx
  41a27e:	sub    eax,0x9e45c619
  41a283:	mov    esi,0x167c78f8
  41a288:	dec    eax
  41a289:	fdiv   st,st(6)
  41a28b:	aam    0xa2
  41a28d:	xchg   ebp,eax
  41a28e:	mov    eax,0xb38a6326
  41a293:	and    al,0x12
  41a295:	stc    
  41a296:	out    dx,al
  41a297:	inc    edx
  41a298:	jmp    0x41a24a
  41a29a:	xchg   edx,eax
  41a29b:	and    al,0x97
  41a29d:	pop    ds
  41a29e:	sahf   
  41a29f:	lds    eax,FWORD PTR [edx+0x75bc9b03]
  41a2a5:	pop    esi
  41a2a6:	mov    dh,0xd4
  41a2a8:	mov    eax,0xbf83efc0
  41a2ad:	xor    eax,0xd4ebe4ad
  41a2b2:	adc    al,0x1
  41a2b4:	imul   ebx,edx,0x8
  41a2b7:	dec    esp
  41a2b8:	sbb    esp,DWORD PTR [esi+0x3a9ac6f4]
  41a2be:	out    dx,al
  41a2bf:	pop    ebp
  41a2c0:	mov    ah,BYTE PTR [ebp+0x3cc806eb]
  41a2c6:	or     DWORD PTR [edx],eax
  41a2c8:	xor    esp,DWORD PTR [ecx-0x1cc37a06]
  41a2ce:	push   ecx
  41a2cf:	xchg   esi,eax
  41a2d0:	jo     0x41a2e5
  41a2d2:	ja     0x41a331
  41a2d4:	or     BYTE PTR [esi+0x61b911a0],0x34
  41a2db:	jns    0x41a314
  41a2dd:	add    ch,BYTE PTR [ebp-0x72]
  41a2e0:	icebp  
  41a2e1:	into   
  41a2e2:	cdq    
  41a2e3:	aaa    
  41a2e4:	add    cl,cl
  41a2e6:	(bad)  
  41a2e7:	retf   
  41a2e8:	fcmovnbe st,st(7)
  41a2ea:	out    0x79,eax
  41a2ec:	mov    bl,0xc5
  41a2ee:	push   cs
  41a2ef:	xchg   ebx,eax
  41a2f0:	int    0x34
  41a2f2:	stos   BYTE PTR es:[edi],al
  41a2f3:	push   esp
  41a2f4:	jg     0x41a288
  41a2f6:	fwait
  41a2f7:	nop
  41a2f8:	addr16 cs dec eax
  41a2fb:	inc    esi
  41a2fc:	das    
  41a2fd:	and    ch,BYTE PTR ds:0x7a43
  41a302:	xchg   edi,edx
  41a304:	jb     0x41a2ba
  41a306:	jbe    0x41a2cc
  41a308:	jne    0x41a351
  41a30a:	in     al,0x31
  41a30c:	or     al,0xc2
  41a30e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a30f:	scas   al,BYTE PTR es:[edi]
  41a310:	pop    esp
  41a311:	push   ebp
  41a312:	fisub  DWORD PTR ds:0x9ddad50e
  41a318:	retf   
  41a319:	fstp   DWORD PTR [edx+ecx*2+0x2e]
  41a31d:	pushfw 
  41a31f:	out    dx,al
  41a320:	xor    dl,bh
  41a322:	or     BYTE PTR [eax-0x2d],ah
  41a325:	retf   0x81ea
  41a328:	mov    al,0xa4
  41a32a:	push   0x1a70e6b4
  41a32f:	jmp    FWORD PTR [edi]
  41a331:	fwait
  41a332:	push   cs
  41a333:	xor    DWORD PTR [edx+eiz*2-0xd9401d7],0x2a19ea74
  41a33e:	add    dl,BYTE PTR [ebp-0x19]
  41a341:	xor    BYTE PTR [ebp-0x2d6cc0d8],bl
  41a347:	in     eax,0x6b
  41a349:	test   DWORD PTR [eax+eiz*4-0x6e],edi
  41a34d:	retf   
  41a34e:	mov    bh,BYTE PTR [edi+0xdc899f5]
  41a354:	out    dx,al
  41a355:	add    DWORD PTR [edi-0x1a],0x2d
  41a359:	sbb    DWORD PTR [edx-0x4f],ebx
  41a35c:	ja     0x41a373
  41a35e:	pusha  
  41a35f:	out    0x45,eax
  41a361:	push   eax
  41a362:	jnp    0x41a3c7
  41a364:	retf   
  41a365:	stos   DWORD PTR es:[edi],eax
  41a366:	cmp    al,BYTE PTR [ecx+0x63]
  41a369:	xchg   ebp,eax
  41a36a:	mov    ah,0xb1
  41a36c:	in     al,0xa4
  41a36e:	sbb    BYTE PTR [edx-0x4898eb1d],0x2a
  41a375:	push   ecx
  41a376:	mov    eax,0xd4c15d3e
  41a37b:	xchg   esi,eax
  41a37c:	sub    ch,ah
  41a37e:	into   
  41a37f:	popa   
  41a380:	out    dx,eax
  41a381:	mov    ebp,0x10d3a46
  41a386:	dec    ebp
  41a387:	loope  0x41a30e
  41a389:	adc    BYTE PTR ds:0x514b1a0a,0xda
  41a390:	fmul   QWORD PTR [edx]
  41a392:	or     bh,0x59
  41a395:	inc    ebp
  41a396:	loopne 0x41a395
  41a398:	in     al,dx
  41a399:	test   eax,0xb62e36ce
  41a39e:	sub    BYTE PTR [ecx+eax*4-0x57],ch
  41a3a2:	sub    eax,0xe2ccaa79
  41a3a7:	lds    esi,FWORD PTR [ebp-0x1a111991]
  41a3ad:	and    eax,0xdb6a3888
  41a3b2:	xor    al,0x11
  41a3b4:	cmp    eax,0xf847ec5b
  41a3b9:	push   ecx
  41a3ba:	js     0x41a3bd
  41a3bc:	push   edx
  41a3bd:	mov    ch,0x93
  41a3bf:	(bad)  
  41a3c0:	arpl   WORD PTR [esi+0x5f],si
  41a3c3:	mov    bl,0x53
  41a3c5:	sub    al,0x20
  41a3c7:	mov    cs,esi
  41a3c9:	(bad)  
  41a3ca:	adc    al,0xed
  41a3cc:	mov    ds:0xd57951d4,al
  41a3d1:	hlt    
  41a3d2:	jl     0x41a3c9
  41a3d4:	loope  0x41a3c4
  41a3d6:	jbe    0x41a3d4
  41a3d8:	push   es
  41a3d9:	and    eax,0x3eddf6ca
  41a3de:	mov    ds:0x2c9c90f4,al
  41a3e3:	cmc    
  41a3e4:	outs   dx,DWORD PTR ds:[esi]
  41a3e5:	inc    eax
  41a3e6:	lock sbb al,0x12
  41a3e9:	lock inc ebp
  41a3eb:	pop    edx
  41a3ec:	push   ds
  41a3ed:	jl     0x41a459
  41a3ef:	test   BYTE PTR [ebx],ah
  41a3f1:	ja     0x41a39a
  41a3f3:	cmp    DWORD PTR [edi+eiz*8+0x5],ebp
  41a3f7:	imul   esi,DWORD PTR [ecx-0x7baa1001],0xffffffdf
  41a3fe:	jmp    0x4557:0x122256a5
  41a405:	test   BYTE PTR [esi],0x89
  41a408:	mov    ds:0x5b7cdb0f,eax
  41a40e:	push   edx
  41a40f:	sub    BYTE PTR [esi],ah
  41a411:	lea    ecx,[esi-0x3d]
  41a414:	or     eax,0x8f7b1af
  41a419:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a41a:	mul    DWORD PTR [ebx+0x39]
  41a41d:	pop    edx
  41a41e:	add    DWORD PTR [edx+edx*2+0x603fd032],edi
  41a425:	(bad)  [esi+0x79695a77]
  41a42b:	inc    ecx
  41a42c:	xchg   edx,eax
  41a42d:	jle    0x41a3ea
  41a42f:	adc    DWORD PTR ds:0x27bae4a2,ebp
  41a435:	call   0x8949:0x49d94b83
  41a43c:	mov    fs,WORD PTR ds:0x36b5b7ba
  41a442:	xchg   dl,dl
  41a444:	das    
  41a445:	fld    QWORD PTR [ecx]
  41a447:	mov    ds:0xad76729c,eax
  41a44c:	mov    edi,0xfbaa56ad
  41a451:	sub    al,0x80
  41a453:	fdiv   DWORD PTR [ebp-0x8]
  41a456:	pop    ebx
  41a457:	push   eax
  41a458:	outs   dx,BYTE PTR ds:[esi]
  41a459:	push   ebp
  41a45a:	cdq    
  41a45b:	push   ds
  41a45c:	gs cmc 
  41a45e:	xchg   edx,esp
  41a460:	add    ebx,DWORD PTR [ecx]
  41a462:	je     0x41a476
  41a464:	adc    eax,0x78391aa
  41a469:	outs   dx,DWORD PTR ds:[esi]
  41a46a:	xlat   BYTE PTR ds:[ebx]
  41a46b:	gs inc eax
  41a46d:	jle    0x41a44d
  41a46f:	mov    esi,0xc226901e
  41a474:	je     0x41a417
  41a476:	push   edx
  41a477:	cld    
  41a478:	inc    ebp
  41a479:	cmp    BYTE PTR ds:0x7e43d9b0,ch
  41a47f:	aad    0x2b
  41a481:	xchg   BYTE PTR [ebp+esi*4-0x23],bh
  41a485:	les    ecx,FWORD PTR [esi]
  41a487:	xor    eax,0xa9ee0ced
  41a48c:	sbb    eax,DWORD PTR [ebx+0x53c63fef]
  41a492:	mov    ah,bh
  41a494:	sbb    DWORD PTR [ebp+0x2eaf2cd4],eax
  41a49a:	push   es
  41a49b:	mov    dh,0x7a
  41a49d:	or     DWORD PTR ds:0xf87e985b,edi
  41a4a3:	call   FWORD PTR [edi+0x3da9cfc4]
  41a4a9:	adc    edx,esp
  41a4ab:	rcl    BYTE PTR [eax],1
  41a4ad:	jmp    0x4dc9:0xed954a53
  41a4b4:	loope  0x41a4b5
  41a4b6:	fstp   QWORD PTR [ebx+0x1d]
  41a4b9:	hlt    
  41a4ba:	add    DWORD PTR [eax-0x5f],eax
  41a4bd:	push   ebx
  41a4be:	mov    WORD PTR [edi],?
  41a4c0:	sub    BYTE PTR [esi-0x40],dl
  41a4c3:	and    al,0x19
  41a4c5:	add    al,0x9f
  41a4c7:	ret    
  41a4c8:	ficomp WORD PTR [esi]
  41a4ca:	lahf   
  41a4cb:	into   
  41a4cc:	fcmove st,st(7)
  41a4ce:	arpl   WORD PTR [esi-0x6e],bp
  41a4d1:	add    DWORD PTR [edi],ecx
  41a4d3:	adc    cl,cl
  41a4d5:	pusha  
  41a4d6:	pushf  
  41a4d7:	xchg   BYTE PTR [ebx],dl
  41a4d9:	jae    0x41a4e7
  41a4db:	or     ah,dl
  41a4dd:	cmp    DWORD PTR [edx-0x4e],esi
  41a4e0:	push   ecx
  41a4e1:	add    BYTE PTR [eax],bh
  41a4e3:	xchg   ebp,eax
  41a4e4:	int    0x8c
  41a4e6:	fwait
  41a4e7:	xchg   esp,eax
  41a4e8:	xchg   ebx,eax
  41a4e9:	inc    ebx
  41a4ea:	test   BYTE PTR [edi+ebp*4+0xa],bh
  41a4ee:	or     DWORD PTR [ebx],eax
  41a4f0:	mov    DWORD PTR [si-0x4521],0xab148a1e
  41a4f9:	sub    dl,dl
  41a4fb:	and    al,0xc1
  41a4fd:	aad    0x5a
  41a4ff:	sub    esp,DWORD PTR [edx]
  41a501:	push   ecx
  41a502:	pop    ecx
  41a503:	jecxz  0x41a50c
  41a505:	out    dx,eax
  41a506:	out    dx,eax
  41a507:	shl    DWORD PTR [esi],0x6f
  41a50a:	pop    edi
  41a50b:	enter  0x1c02,0x3f
  41a50f:	dec    esi
  41a510:	mov    dh,0x43
  41a513:	nop
  41a514:	mov    edi,0xeef4b6dd
  41a519:	arpl   WORD PTR [eax+0x7c],bx
  41a51c:	sub    BYTE PTR ds:0xc491f2d6,0x50
  41a523:	out    dx,eax
  41a524:	jg     0x41a596
  41a526:	popa   
  41a527:	cmp    esp,edx
  41a529:	xchg   esp,eax
  41a52a:	mov    eax,0xd8804851
  41a52f:	xchg   esp,eax
  41a531:	sahf   
  41a532:	sbb    al,0xd8
  41a534:	(bad)  
  41a535:	in     al,dx
  41a536:	adc    ebp,esi
  41a538:	pop    ebp
  41a539:	mov    eax,ds:0xe6ea3230
  41a53e:	adc    edx,DWORD PTR [ebp+0x549a7603]
  41a544:	push   edi
  41a545:	mov    dh,0xc9
  41a547:	xlat   BYTE PTR ds:[ebx]
  41a548:	lods   al,BYTE PTR es:[esi]
  41a54a:	sub    ch,dh
  41a54c:	xor    eax,DWORD PTR [esp+edx*2]
  41a54f:	jns    0x41a592
  41a551:	mov    ebp,DWORD PTR [edi+esi*1]
  41a554:	mov    ah,0x1f
  41a556:	fsubr  QWORD PTR [edx+eax*1+0x0]
  41a55a:	mov    edi,0xe11cfc82
  41a55f:	sbb    cl,BYTE PTR [esi-0x10]
  41a562:	test   BYTE PTR [edi+edx*1-0x2a],bh
  41a566:	fnsave ds:0x4cc1b304
  41a56c:	mov    al,0x84
  41a56e:	xor    bl,ah
  41a570:	in     al,dx
  41a571:	arpl   WORD PTR [ebp+0x175d3de9],si
  41a577:	add    dl,BYTE PTR [ebp-0x66821bd5]
  41a57d:	pop    eax
  41a57e:	enter  0x6688,0x7b
  41a582:	nop
  41a583:	inc    esi
  41a584:	push   esp
  41a585:	ja     0x41a5b1
  41a587:	adc    eax,0x7d5d44e7
  41a58c:	xor    dh,BYTE PTR [ecx+edi*4-0x1d]
  41a590:	mov    al,0x17
  41a592:	dec    ebx
  41a593:	ret    
  41a594:	jne    0x41a51e
  41a596:	leave  
  41a597:	sub    eax,0xd1121da3
  41a59c:	dec    ebx
  41a59d:	xchg   esi,eax
  41a59e:	out    0xd6,eax
  41a5a0:	les    edx,FWORD PTR [eax+0x935fd5d]
  41a5a6:	xchg   BYTE PTR [edi+0x5195cab5],ah
  41a5ac:	xor    ch,BYTE PTR [edi]
  41a5ae:	pop    edx
  41a5af:	sub    esi,DWORD PTR ds:[ecx-0x129eab69]
  41a5b6:	dec    ebp
  41a5b7:	outs   dx,BYTE PTR ds:[esi]
  41a5b8:	xchg   ebx,eax
  41a5b9:	retf   
  41a5ba:	adc    ebx,esp
  41a5bc:	mov    ecx,0xa66450df
  41a5c1:	aam    0xf3
  41a5c3:	repz lds edx,FWORD PTR cs:[eax+0x6f974f93]
  41a5cb:	mov    edi,0xcbfd042a
  41a5d0:	xchg   DWORD PTR [edi],ecx
  41a5d2:	add    edx,DWORD PTR [ebx]
  41a5d4:	and    BYTE PTR [ecx-0x7c],ch
  41a5d7:	inc    ebx
  41a5d8:	jbe    0x41a5b2
  41a5da:	sub    al,BYTE PTR [eax]
  41a5dc:	ins    DWORD PTR es:[edi],dx
  41a5dd:	mov    edx,0x541b73f7
  41a5e2:	js     0x41a5a2
  41a5e4:	add    bl,dl
  41a5e6:	imul   bl
  41a5e8:	lods   al,BYTE PTR ds:[esi]
  41a5e9:	mov    bh,0xa2
  41a5eb:	in     eax,0x76
  41a5ed:	sub    al,0xb5
  41a5ef:	popf   
  41a5f0:	shr    BYTE PTR [ebx-0x7384869b],0x1b
  41a5f7:	call   0x663:0xac7d725e
  41a5fe:	nop
  41a5ff:	jp     0x41a587
  41a601:	mov    bh,0x68
  41a603:	mov    ecx,0x445eefa6
  41a608:	pop    edi
  41a609:	fld    QWORD PTR [eax+0x6c6e0174]
  41a60f:	int3   
  41a610:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a611:	adc    DWORD PTR [ecx+0x1860e7d0],esp
  41a617:	pop    esi
  41a618:	add    al,0xcd
  41a61a:	or     bl,BYTE PTR [edx-0x1ee5d775]
  41a620:	retf   
  41a621:	mov    ss,WORD PTR [ecx+0x33]
  41a624:	xchg   ebp,eax
  41a625:	push   0x52
  41a627:	jae    0x41a638
  41a629:	sub    al,0x1
  41a62b:	test   esp,0x2f853338
  41a631:	mov    eax,0x4c0fe98d
  41a636:	test   DWORD PTR [ebx+edx*8+0x1569ee7e],ebp
  41a63d:	sub    esp,eax
  41a63f:	lock and DWORD PTR [edx+ebp*2-0x775fbf7c],esi
  41a647:	stos   BYTE PTR es:[edi],al
  41a648:	jo     0x41a6a9
  41a64a:	jne    0x41a675
  41a64c:	push   eax
  41a64d:	fisubr DWORD PTR [ecx+0x13db5257]
  41a653:	sub    BYTE PTR [ecx*1+0x702f1752],cl
  41a65a:	int    0x53
  41a65c:	fsub   DWORD PTR [ecx-0x6b]
  41a65f:	mov    ebx,0xeb250eeb
  41a664:	mov    bl,0xaa
  41a666:	add    ebp,edi
  41a668:	loop   0x41a6b3
  41a66a:	add    eax,DWORD PTR [edx]
  41a66c:	inc    ebp
  41a66d:	icebp  
  41a66e:	mov    dl,0x15
  41a670:	jecxz  0x41a68c
  41a672:	or     ah,bl
  41a674:	xor    DWORD PTR [ebx+0x7f],edx
  41a677:	ret    
  41a678:	jae    0x41a66c
  41a67a:	or     ebx,DWORD PTR ds:0xb4331050
  41a680:	out    0x15,al
  41a682:	push   edi
  41a683:	sub    ah,bl
  41a685:	bound  eax,QWORD PTR ds:0xe5f77908
  41a68b:	and    dh,bh
  41a68d:	jmp    0x831f:0x99b6f045
  41a694:	xor    DWORD PTR [ecx+0x6c612ef6],edi
  41a69a:	ja     0x41a6c1
  41a69c:	clc    
  41a69d:	cmp    ah,cl
  41a69f:	push   esp
  41a6a0:	jns    0x41a6a8
  41a6a2:	pop    ebp
  41a6a3:	fs xor al,0x78
  41a6a6:	sub    eax,0xd5b8ea3
  41a6ab:	sub    DWORD PTR [eax+ebp*1-0x6af6637c],eax
  41a6b2:	aad    0x3
  41a6b4:	xchg   DWORD PTR [edx-0x6a],eax
  41a6b7:	inc    ecx
  41a6b8:	sub    edx,DWORD PTR [esi-0x7f]
  41a6bb:	jmp    0x5656:0x2d8f978d
  41a6c2:	xchg   esp,eax
  41a6c3:	movzx  ecx,BYTE PTR [ecx+eiz*4-0x12]
  41a6c8:	mov    esp,0xb8062711
  41a6cd:	je     0x4636e8ea
  41a6d3:	mov    dh,0x64
  41a6d5:	adc    eax,0x2b7de443
  41a6da:	repz dec esp
  41a6dc:	mov    edx,0x5be60d33
  41a6e1:	sub    eax,0x8a9bf263
  41a6e6:	iret   
  41a6e7:	retf   
  41a6e8:	fst    DWORD PTR [eax]
  41a6ea:	pop    edi
  41a6eb:	ret    0xbb2f
  41a6ee:	outs   dx,DWORD PTR ds:[esi]
  41a6ef:	aaa    
  41a6f0:	sub    edi,DWORD PTR [ebx]
  41a6f2:	adc    al,0xc8
  41a6f4:	sbb    ebx,DWORD PTR [edx+0x3939d760]
  41a6fa:	hlt    
  41a6fb:	xor    ecx,DWORD PTR [edi-0x6a1116b2]
  41a701:	mov    bl,dl
  41a703:	xlat   BYTE PTR ds:[ebx]
  41a704:	pop    esp
  41a705:	aam    0xd
  41a707:	fst    DWORD PTR [esi]
  41a709:	test   al,0xd7
  41a70b:	shr    DWORD PTR [ebx+0x33],cl
  41a70e:	dec    esi
  41a70f:	call   0xf784f3be
  41a714:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a715:	mov    WORD PTR [ecx-0x3f3f6508],gs
  41a71b:	out    dx,eax
  41a71c:	or     eax,0xb3d599c8
  41a721:	pop    ebx
  41a722:	jne    0x41a6f0
  41a724:	icebp  
  41a725:	in     al,0x7d
  41a727:	mov    esp,0x834953b1
  41a72c:	inc    edx
  41a72d:	repz ja 0x41a783
  41a730:	pop    ebx
  41a731:	fbld   TBYTE PTR [esi+0x4bca0e6b]
  41a737:	outs   dx,BYTE PTR ds:[esi]
  41a738:	xchg   ebx,eax
  41a739:	in     al,dx
  41a73a:	jmp    0x804b:0xc940d24c
  41a741:	outs   dx,BYTE PTR ds:[esi]
  41a742:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a743:	push   es
  41a744:	mov    dl,0x86
  41a746:	dec    edi
  41a747:	imul   esp,DWORD PTR [ebx-0x50],0x5cdba0e2
  41a74e:	adc    dl,bh
  41a750:	neg    BYTE PTR [ecx]
  41a752:	mov    eax,DWORD PTR [ecx-0x43]
  41a755:	aad    0xcd
  41a757:	pushf  
  41a758:	adc    esi,edi
  41a75a:	stos   BYTE PTR es:[edi],al
  41a75b:	push   ebx
  41a75c:	ins    WORD PTR es:[edi],dx
  41a75e:	cmp    al,0x19
  41a760:	xor    eax,0x48335626
  41a765:	cdq    
  41a766:	xor    eax,DWORD PTR [ecx]
  41a768:	add    DWORD PTR [esi+esi*8],esi
  41a76b:	mov    cl,0xd9
  41a76d:	push   ds
  41a76e:	push   cs
  41a76f:	inc    edi
  41a770:	imul   edx,DWORD PTR [ebx+0x6f],0x2f
  41a774:	mov    ah,ah
  41a776:	sub    BYTE PTR [eax],dh
  41a778:	xor    DWORD PTR [eax],edx
  41a77a:	cdq    
  41a77b:	add    ebp,DWORD PTR [ebx]
  41a77d:	add    eax,0x5f02e786
  41a782:	icebp  
  41a783:	aas    
  41a784:	adc    DWORD PTR [eax+0x4a],eax
  41a787:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a788:	inc    esi
  41a789:	pusha  
  41a78a:	sbb    BYTE PTR [edx],dh
  41a78c:	xor    BYTE PTR ds:0x12d616f9,0x79
  41a793:	std    
  41a794:	jns    0x41a768
  41a796:	sbb    ah,BYTE PTR [edi+0x4ca20009]
  41a79c:	stos   BYTE PTR es:[edi],al
  41a79d:	sub    esi,DWORD PTR [esi+0x6430525f]
  41a7a3:	mov    eax,ds:0x45c6942f
  41a7a8:	lock fcom DWORD PTR [esi]
  41a7ab:	jae    0x41a7f3
  41a7ad:	sub    ecx,DWORD PTR [ebx]
  41a7af:	add    eax,0xec9a2e53
  41a7b5:	sbb    al,0x9a
  41a7b7:	cmp    al,0x1a
  41a7b9:	adc    BYTE PTR ds:0xc1e1fe3,ah
  41a7bf:	xor    edx,DWORD PTR ds:[ebx+esi*2-0x1207efb5]
  41a7c7:	out    0xa6,eax
  41a7c9:	cwde   
  41a7ca:	popf   
  41a7cb:	push   esp
  41a7cc:	outs   dx,BYTE PTR ds:[esi]
  41a7cd:	adc    DWORD PTR [eax+0x4e],esp
  41a7d0:	mov    ds:0x18f20a95,al
  41a7d5:	scas   eax,DWORD PTR es:[edi]
  41a7d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a7d7:	add    eax,0xed041f5b
  41a7dc:	lea    esi,ds:0x93e3063
  41a7e2:	mov    bl,BYTE PTR [ebp+0x19]
  41a7e5:	mov    dh,0x34
  41a7e7:	mov    BYTE PTR [edi+0x6d],al
  41a7ea:	enter  0xd02d,0xf8
  41a7ee:	ins    DWORD PTR es:[edi],dx
  41a7ef:	jle    0x41a862
  41a7f1:	and    eax,DWORD PTR [edx]
  41a7f3:	and    bl,BYTE PTR [ebx]
  41a7f5:	mov    esp,0x267892f0
  41a7fa:	jno    0x41a7dd
  41a7fc:	test   DWORD PTR [ebp+0x5e],edi
  41a7ff:	je     0x41a7ee
  41a801:	arpl   WORD PTR [eax],cx
  41a803:	xor    eax,0xe8b5a026
  41a808:	adc    dl,BYTE PTR [ecx-0xcf6d754]
  41a80e:	sbb    DWORD PTR [eax-0x1a801d09],0xb5c33dc2
  41a818:	mov    ch,0xd3
  41a81a:	pusha  
  41a81b:	lahf   
  41a81c:	xchg   ebx,eax
  41a81d:	rol    DWORD PTR cs:[eax],1
  41a820:	in     al,dx
  41a821:	cmc    
  41a822:	pop    eax
  41a823:	xor    BYTE PTR [edi+0x5],ah
  41a826:	data16 mov es,WORD PTR [ecx+0x66]
  41a82a:	inc    ebp
  41a82b:	mov    ds:0xd66204ed,al
  41a830:	dec    esi
  41a831:	(bad)  
  41a832:	jmp    0x282b8452
  41a837:	jl     0x41a7d5
  41a839:	ja     0x41a875
  41a83b:	add    esp,DWORD PTR [esi]
  41a83d:	ins    BYTE PTR es:[edi],dx
  41a83e:	pop    esp
  41a83f:	push   ebx
  41a840:	mov    bh,0x41
  41a842:	xchg   ebp,eax
  41a843:	push   0x4e
  41a845:	stc    
  41a846:	loope  0x41a85e
  41a848:	adc    BYTE PTR [ebx-0x769238e6],cl
  41a84e:	sbb    edi,DWORD PTR [ecx]
  41a850:	daa    
  41a851:	pop    esi
  41a852:	mov    bh,0xbb
  41a854:	call   0x93ff:0xff4a88ba
  41a85b:	es push 0xffffffde
  41a85e:	int    0xc1
  41a860:	out    dx,al
  41a861:	xor    eax,DWORD PTR [eax-0xb]
  41a864:	xchg   edi,eax
  41a865:	sub    al,0x8f
  41a867:	out    0x1f,eax
  41a869:	clc    
  41a86a:	adc    edx,eax
  41a86c:	cmp    BYTE PTR fs:[ebx-0x7b],bl
  41a870:	dec    esi
  41a871:	cwde   
  41a872:	pushf  
  41a873:	adc    BYTE PTR [edx-0x16],dl
  41a876:	adc    BYTE PTR [ecx],ah
  41a878:	ret    
  41a879:	gs aam 0xba
  41a87c:	call   0x474f208d
  41a881:	jmp    0x2908:0x842328c0
  41a888:	adc    edx,DWORD PTR [edi-0x5a9b4305]
  41a88e:	jb     0x41a825
  41a890:	and    eax,0x3be22965
  41a895:	and    DWORD PTR [ebp-0x78d4817d],edx
  41a89b:	(bad)  
  41a89c:	push   ebx
  41a89d:	outs   dx,DWORD PTR ds:[esi]
  41a89e:	mov    BYTE PTR [esi-0x1],ch
  41a8a1:	dec    edi
  41a8a3:	les    ebx,FWORD PTR [eax+0x55]
  41a8a6:	fwait
  41a8a7:	jmp    0xe916f695
  41a8ac:	cs xchg esp,eax
  41a8ae:	shl    BYTE PTR [ecx+0x41],0xa
  41a8b2:	xchg   esp,eax
  41a8b3:	mov    bh,ah
  41a8b5:	jns    0x41a929
  41a8b7:	out    dx,eax
  41a8b8:	int3   
  41a8b9:	cmp    eax,0x10823b5
  41a8be:	arpl   WORD PTR [edi+0x3e],bx
  41a8c1:	cdq    
  41a8c2:	pop    eax
  41a8c3:	(bad)  
  41a8c4:	mov    DWORD PTR ss:[ebx-0x2d],esi
  41a8c8:	dec    eax
  41a8c9:	inc    edx
  41a8ca:	out    dx,eax
  41a8cb:	clc    
  41a8cc:	pop    eax
  41a8cd:	test   al,0x86
  41a8cf:	loop   0x41a8db
  41a8d1:	mov    WORD PTR [edx+0x54],?
  41a8d4:	arpl   WORD PTR [eax+0x48ee88e4],sp
  41a8da:	pop    ecx
  41a8db:	mov    dh,0xa8
  41a8dd:	jb     0x41a860
  41a8df:	daa    
  41a8e0:	imul   edi,DWORD PTR [ebp+0x7e],0xffffffc8
  41a8e4:	ins    BYTE PTR es:[edi],dx
  41a8e5:	xchg   ecx,eax
  41a8e6:	(bad)  
  41a8e7:	xchg   edx,eax
  41a8e8:	fs in  eax,0x30
  41a8eb:	repnz push ebp
  41a8ed:	cmc    
  41a8ee:	sbb    ch,al
  41a8f0:	outs   dx,DWORD PTR ds:[esi]
  41a8f1:	and    al,0x18
  41a8f3:	ins    DWORD PTR es:[edi],dx
  41a8f4:	mov    al,ds:0x93fdae65
  41a8f9:	pushf  
  41a8fa:	pop    edx
  41a8fb:	loope  0x41a87e
  41a8fd:	ror    DWORD PTR [edi],0x2f
  41a900:	aam    0xbf
  41a902:	push   ds
  41a903:	add    BYTE PTR [ebp-0x7faa413c],dh
  41a909:	into   
  41a90a:	inc    esp
  41a90b:	or     eax,0x949a7421
  41a910:	jno    0x41a955
  41a912:	bound  esi,QWORD PTR [edx+0x4b]
  41a915:	fld    DWORD PTR [esi-0x1]
  41a918:	dec    edx
  41a919:	ror    al,0x3e
  41a91c:	push   ebx
  41a91d:	aas    
  41a91e:	jae    0x41a8ea
  41a920:	aam    0x50
  41a922:	inc    ecx
  41a923:	mov    eax,0x93150ae7
  41a928:	mov    ?,WORD PTR [esi+esi*1]
  41a92b:	leave  
  41a92c:	inc    edi
  41a92d:	push   edx
  41a92e:	in     al,dx
  41a92f:	jae    0x41a8fa
  41a931:	cli    
  41a932:	aas    
  41a933:	xchg   esi,eax
  41a934:	inc    esi
  41a935:	or     dh,BYTE PTR [esi+0x384f17ec]
  41a93b:	sbb    al,0x78
  41a93d:	inc    eax
  41a93e:	in     al,0xaf
  41a940:	and    eax,0x1ddb476c
  41a945:	rcl    DWORD PTR [edx+0x59],0xc
  41a949:	ins    DWORD PTR es:[edi],dx
  41a94a:	mov    dl,0x35
  41a94c:	jae    0x41a98f
  41a94e:	mov    bh,0x69
  41a950:	and    al,0x6b
  41a952:	dec    ebx
  41a953:	mov    bh,0xc2
  41a955:	xor    BYTE PTR ss:[ebx],dh
  41a958:	not    BYTE PTR [edx+ebx*4-0x21a8bf0f]
  41a95f:	int    0x8f
  41a961:	xchg   edi,eax
  41a962:	sti    
  41a963:	mov    cl,0x7f
  41a965:	push   edx
  41a966:	pushf  
  41a967:	sbb    al,0x34
  41a969:	mov    ebx,ebx
  41a96b:	iret   
  41a96c:	inc    esp
  41a96d:	and    ah,BYTE PTR [ebx-0x68]
  41a970:	dec    eax
  41a971:	xchg   esi,eax
  41a972:	sbb    DWORD PTR [ebp+0x1d],0xffffffc0
  41a976:	xlat   BYTE PTR ds:[ebx]
  41a977:	ffree  st(4)
  41a979:	push   0xfffffff0
  41a97b:	cli    
  41a97c:	inc    esp
  41a97d:	cmp    esp,edx
  41a97f:	stos   BYTE PTR es:[edi],al
  41a980:	ficomp DWORD PTR [ebx-0x5a9cec39]
  41a986:	fisub  DWORD PTR [eax]
  41a988:	jbe    0x41a9ef
  41a98a:	lock cmp eax,0x3ebcfb82
  41a990:	adc    eax,0xa87d4459
  41a995:	xor    BYTE PTR [bx+si+0x5c],bh
  41a999:	pusha  
  41a99a:	fcomp  DWORD PTR [ebp+0x53]
  41a99d:	or     al,0x85
  41a99f:	xchg   DWORD PTR [esi+0x34],edi
  41a9a2:	add    ecx,DWORD PTR [esi]
  41a9a4:	outs   dx,BYTE PTR ds:[esi]
  41a9a5:	pusha  
  41a9a6:	in     al,dx
  41a9a7:	mov    ecx,0xa89068c7
  41a9ac:	es jb  0x41aa16
  41a9af:	dec    esi
  41a9b0:	mov    ds:0xfc139fa,eax
  41a9b5:	dec    edx
  41a9b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9b7:	and    DWORD PTR [esi],edi
  41a9b9:	push   cs
  41a9ba:	push   cs
  41a9bb:	rol    dh,1
  41a9bd:	je     0x41a976
  41a9bf:	cdq    
  41a9c0:	idiv   BYTE PTR [esp+ecx*2-0x354f3af3]
  41a9c7:	(bad)  
  41a9c8:	push   0xffffffe5
  41a9ca:	lahf   
  41a9cb:	inc    esi
  41a9cc:	shl    dh,1
  41a9ce:	sbb    eax,0xa470115d
  41a9d3:	jbe    0x41aa01
  41a9d5:	pop    es
  41a9d6:	cmp    al,0x73
  41a9d8:	shl    DWORD PTR [ebx],cl
  41a9da:	leave  
  41a9db:	cld    
  41a9dc:	add    ecx,DWORD PTR [ebx]
  41a9de:	ror    BYTE PTR [ebp+0x49e0488b],1
  41a9e4:	xor    al,BYTE PTR ds:0x4e42c1ed
  41a9ea:	dec    ecx
  41a9eb:	or     edi,DWORD PTR [ebp+0x5d2b0489]
  41a9f1:	pushf  
  41a9f2:	inc    esp
  41a9f3:	data16 mov cl,0x34
  41a9f7:	call   0xb12b:0xc2313a4e
  41a9fe:	arpl   WORD PTR [esi+0x1b331199],dx
  41aa04:	fstp   TBYTE PTR [eax]
  41aa06:	xor    eax,0x9516a3ea
  41aa0b:	dec    ecx
  41aa0c:	or     ecx,DWORD PTR [eax+0x60]
  41aa0f:	lods   eax,DWORD PTR ds:[esi]
  41aa10:	pop    es
  41aa11:	arpl   WORD PTR [ebx+0x56],ax
  41aa14:	add    bh,cl
  41aa16:	test   DWORD PTR [esi-0x49],edx
  41aa19:	sub    DWORD PTR [eax],esi
  41aa1b:	test   ecx,ecx
  41aa1d:	push   ecx
  41aa1e:	fld    st(6)
  41aa20:	test   eax,0xba7e21a8
  41aa25:	mov    al,ds:0x45b93097
  41aa2a:	lea    edi,cs:[eax+0x6]
  41aa2e:	jae    0x41a9eb
  41aa30:	daa    
  41aa31:	fiadd  WORD PTR [ebx]
  41aa33:	icebp  
  41aa34:	mov    al,BYTE PTR [edi+edi*2+0x3fedb965]
  41aa3b:	add    ecx,DWORD PTR [eax-0x3c]
  41aa3e:	inc    DWORD PTR ds:0x9afaa131
  41aa44:	add    BYTE PTR [edx+0x30f3cb51],bh
  41aa4a:	aad    0x87
  41aa4c:	sbb    BYTE PTR [ecx],cl
  41aa4e:	inc    ebx
  41aa4f:	fwait
  41aa50:	sub    eax,0xf28fa4ef
  41aa55:	sub    edi,eax
  41aa57:	(bad)  
  41aa58:	jns    0x41a9ed
  41aa5a:	sbb    edi,DWORD PTR [edi]
  41aa5c:	fcomp  QWORD PTR [ebp-0x772c243e]
  41aa62:	sub    DWORD PTR [edx+eax*2-0xd9e9f20],edi
  41aa69:	adc    BYTE PTR [edx+eiz*4-0x7bb36e59],cl
  41aa70:	sbb    BYTE PTR [esi-0x71086a1],0xe
  41aa77:	cmp    BYTE PTR fs:[esi-0x4a8c7d0c],bl
  41aa7e:	clc    
  41aa7f:	mov    ds:0xcab64127,al
  41aa84:	pop    esp
  41aa85:	pop    es
  41aa86:	test   BYTE PTR [edx],ah
  41aa88:	fild   WORD PTR cs:[edi+0x6]
  41aa8c:	mov    eax,ds:0xd2378571
  41aa91:	and    ebx,DWORD PTR [eax+0x3a]
  41aa94:	sbb    ecx,DWORD PTR [ebp-0x26]
  41aa97:	cmp    DWORD PTR [edi-0x39bc1e9b],ecx
  41aa9d:	gs xchg ebx,eax
  41aa9f:	mov    WORD PTR ds:[esp+esi*2+0x423919a5],es
  41aaa7:	(bad)  
  41aaa8:	stc    
  41aaa9:	cmp    ah,BYTE PTR [eax-0x19]
  41aaac:	pop    edx
  41aaad:	pop    ss
  41aaae:	and    al,0xee
  41aab0:	adc    eax,0xea002c47
  41aab5:	dec    esi
  41aab6:	sbb    bh,BYTE PTR [ebx-0x678d13f4]
  41aabc:	test   eax,0x3102f018
  41aac1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aac2:	mov    eax,0xa82909b6
  41aac7:	jge    0x41aa62
  41aac9:	and    ecx,DWORD PTR ds:0xff749727
  41aacf:	sahf   
  41aad0:	stc    
  41aad1:	push   0x3e503409
  41aad6:	fxch   st(6)
  41aad8:	out    0xeb,al
  41aada:	in     al,dx
  41aadb:	daa    
  41aadc:	rol    DWORD PTR [edx],cl
  41aade:	mov    ebp,0x9d4ed816
  41aae3:	es mov cl,0xf3
  41aae6:	bound  esi,QWORD PTR [ebx-0x1c]
  41aae9:	je     0x41aaa1
  41aaeb:	xchg   ebp,eax
  41aaec:	mov    fs,WORD PTR [edx+edx*1+0x78]
  41aaf0:	mov    al,ds:0xec7f5ba8
  41aaf5:	cli    
  41aaf6:	stos   BYTE PTR es:[edi],al
  41aaf7:	dec    ebx
  41aaf8:	pop    edi
  41aaf9:	mov    ecx,0x7ec3f4bb
  41aafe:	add    BYTE PTR [eax+0xc],ah
  41ab01:	test   bl,bh
  41ab03:	xor    ebx,DWORD PTR [ecx]
  41ab05:	xor    BYTE PTR [ebx+0x6e],0x59
  41ab09:	out    dx,al
  41ab0a:	mov    ds,esp
  41ab0c:	push   esi
  41ab0d:	pop    eax
  41ab0e:	fadd   QWORD PTR [ebx+ebx*8+0x6f]
  41ab12:	jbe    0x41ab22
  41ab14:	sbb    BYTE PTR [eax-0x49ba63e5],cl
  41ab1a:	in     eax,dx
  41ab1b:	aaa    
  41ab1c:	xor    BYTE PTR [esi],bh
  41ab1e:	mov    ah,dl
  41ab20:	xor    BYTE PTR [esi],ch
  41ab22:	(bad)  
  41ab23:	jmp    0x14b5:0x1b1655ea
  41ab2a:	push   ds
  41ab2b:	retf   0xc155
  41ab2e:	es int3 
  41ab30:	fdivrp st(5),st
  41ab32:	add    ebp,DWORD PTR [edx+edi*8+0x1468e94d]
  41ab39:	pop    ds
  41ab3a:	pop    eax
  41ab3b:	pop    ebp
  41ab3c:	push   ecx
  41ab3d:	out    dx,al
  41ab3e:	lods   eax,DWORD PTR ds:[esi]
  41ab3f:	clc    
  41ab40:	ret    0xf066
  41ab43:	retf   
  41ab44:	add    al,BYTE PTR [eax]
  41ab46:	dec    edx
  41ab47:	(bad)  
  41ab48:	mov    edi,0x1d018068
  41ab4d:	pop    ecx
  41ab4e:	xlat   BYTE PTR ds:[ebx]
  41ab4f:	cmp    al,0x1a
  41ab51:	rcr    BYTE PTR [edi-0x5475dc37],1
  41ab57:	aaa    
  41ab58:	mov    bl,0x99
  41ab5a:	lea    ebp,[edi-0x56fd141a]
  41ab60:	gs fs adc ebx,ebx
  41ab64:	push   0xffffff93
  41ab66:	aad    0xec
  41ab68:	pop    edx
  41ab69:	daa    
  41ab6a:	mov    dh,0x3f
  41ab6c:	in     eax,dx
  41ab6d:	(bad)  
  41ab6e:	mov    ch,0xa
  41ab70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab71:	dec    edx
  41ab72:	xchg   esi,eax
  41ab73:	add    eax,0x4b154d17
  41ab78:	ret    
  41ab79:	jo     0x41aba8
  41ab7b:	or     edx,DWORD PTR [ebx-0x79f6763b]
  41ab81:	test   BYTE PTR [ebx+0x3],ch
  41ab84:	cld    
  41ab85:	xchg   ecx,eax
  41ab86:	sub    esi,DWORD PTR [edi+0x1c]
  41ab89:	aad    0x4f
  41ab8b:	pop    eax
  41ab8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab8d:	jmp    0xf0c0b43e
  41ab92:	add    DWORD PTR [ebx-0x27],0x7d
  41ab96:	out    0x5c,al
  41ab98:	stc    
  41ab99:	add    BYTE PTR [esi-0x4d],al
  41ab9c:	xor    al,0xaf
  41ab9e:	inc    ebx
  41ab9f:	sub    dl,bh
  41aba1:	mov    esp,0x328a688d
  41aba6:	mov    cl,0x3e
  41aba8:	cs mov eax,0xb9cdcd6f
  41abae:	xor    BYTE PTR ss:[edx-0x3f],dl
  41abb2:	dec    edx
  41abb3:	loope  0x41ac13
  41abb5:	dec    edx
  41abb6:	and    BYTE PTR [ecx+eax*4],ah
  41abb9:	pop    ebp
  41abba:	ret    0x1f39
  41abbd:	lods   eax,DWORD PTR ds:[esi]
  41abbe:	es loop 0x41ac13
  41abc1:	inc    esp
  41abc2:	xor    al,0x3a
  41abc4:	clc    
  41abc5:	adc    eax,0xd89f818a
  41abca:	enter  0xa94b,0xac
  41abce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abcf:	clc    
  41abd0:	sar    BYTE PTR [eax],0x47
  41abd3:	xchg   esp,eax
  41abd4:	mov    bl,0xb4
  41abd6:	xchg   edx,eax
  41abd7:	mov    edi,DWORD PTR es:[ecx-0x69e15ef1]
  41abde:	jns    0x41abed
  41abe0:	out    dx,eax
  41abe1:	aaa    
  41abe2:	in     eax,dx
  41abe3:	dec    ebx
  41abe4:	ret    0xb95f
  41abe7:	js     0x41abfb
  41abe9:	sub    dl,BYTE PTR [edx-0x6d17497c]
  41abef:	or     bl,BYTE PTR [ecx-0x4b]
  41abf2:	sahf   
  41abf3:	and    cl,ch
  41abf5:	xchg   esi,eax
  41abf6:	test   al,0x3b
  41abf8:	mov    al,0x8e
  41abfa:	cdq    
  41abfb:	(bad)  
  41abfc:	outs   dx,BYTE PTR ds:[esi]
  41abfd:	mov    ah,0x82
  41abff:	out    dx,eax
  41ac00:	sbb    eax,0xff4135bf
  41ac05:	int    0x39
  41ac07:	mov    ch,0x56
  41ac09:	ja     0x41ac3d
  41ac0b:	jno    0x41ab9e
  41ac0d:	sbb    eax,0xfca6a49e
  41ac12:	cs out 0xa6,al
  41ac15:	inc    edi
  41ac16:	dec    eax
  41ac17:	sub    eax,0xbaa6a06b
  41ac1c:	sub    eax,0xb841bdcc
  41ac21:	xor    eax,0x5555a6f5
  41ac26:	lods   eax,DWORD PTR ds:[esi]
  41ac27:	xor    BYTE PTR [esp+ebp*4],cl
  41ac2a:	int3   
  41ac2b:	mov    ?,WORD PTR [edi-0x25e4babb]
  41ac31:	inc    edi
  41ac32:	jb     0x41ac79
  41ac34:	test   DWORD PTR [ebp+eiz*1+0x5e],ebp
  41ac38:	loop   0x41acb9
  41ac3a:	pop    eax
  41ac3b:	cs (bad) 
  41ac3d:	xor    ebx,DWORD PTR [esi+0x8]
  41ac40:	jl     0x41ac9d
  41ac42:	(bad)  
  41ac43:	pop    ss
  41ac44:	test   DWORD PTR gs:[esi+0x19],edx
  41ac48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac49:	retf   
  41ac4a:	push   0xffffffe5
  41ac4c:	pop    ss
  41ac4d:	scas   al,BYTE PTR es:[edi]
  41ac4e:	fmul   DWORD PTR [ebx+0x28]
  41ac51:	pop    es
  41ac52:	mov    BYTE PTR [edi],cl
  41ac54:	out    dx,eax
  41ac55:	jp     0x41ac3a
  41ac57:	mov    al,ds:0x4caa5a08
  41ac5c:	sub    esi,ecx
  41ac5e:	fdivr  QWORD PTR [edx]
  41ac60:	arpl   WORD PTR [esi-0x7bb73699],di
  41ac66:	and    al,0x61
  41ac68:	ror    DWORD PTR [ecx+0x0],1
  41ac6b:	xor    BYTE PTR [ebx-0x6357ec0],ch
  41ac71:	cmp    DWORD PTR [ebx+0x3a61ab2e],0xffffff8f
  41ac78:	aas    
  41ac79:	sbb    al,0x68
  41ac7b:	adc    bl,BYTE PTR ds:0x270af78c
  41ac81:	mov    ch,BYTE PTR [ebp-0xb996521]
  41ac87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac88:	add    eax,0x3130cbfb
  41ac8d:	fcomi  st,st(0)
  41ac8f:	jnp    0x41acc8
  41ac91:	add    eax,0xc0e2e359
  41ac96:	xor    cl,BYTE PTR [bp+0x5376]
  41ac9b:	jl     0x41ac7c
  41ac9d:	add    BYTE PTR [esi-0x51a4b8e8],al
  41aca3:	cmp    ecx,0x12655c7e
  41aca9:	inc    edi
  41acaa:	loopne 0x41ad01
  41acac:	loop   0x41ad09
  41acae:	test   al,0x91
  41acb0:	sbb    al,0x5b
  41acb2:	fs pop esp
  41acb4:	jnp    0x41ac72
  41acb6:	(bad)  
  41acb8:	mov    bl,0x41
  41acba:	dec    ebp
  41acbb:	sub    eax,0x14d812d4
  41acc0:	js     0x41ad38
  41acc2:	xchg   BYTE PTR [esi-0x7ea28a8],al
  41acc8:	test   BYTE PTR [eax+ecx*4+0x11],0x17
  41accd:	adc    ah,BYTE PTR [eax-0x6]
  41acd0:	dec    esp
  41acd1:	lock (bad) 
  41acd3:	fdivr  QWORD PTR [ebp-0x5198d6bb]
  41acd9:	dec    esi
  41acda:	pop    es
  41acdb:	stos   DWORD PTR es:[edi],eax
  41acdc:	pop    edx
  41acdd:	(bad)  
  41acde:	mov    cl,0x7b
  41ace0:	pop    esp
  41ace1:	and    ebx,DWORD PTR [ecx-0x76941b99]
  41ace7:	push   0xc808cd56
  41acec:	dec    edi
  41aced:	sub    esi,DWORD PTR [ebp-0x1b0f9afb]
  41acf3:	daa    
  41acf4:	push   edi
  41acf5:	or     esi,DWORD PTR [edi-0x49]
  41acf8:	jne    0x41acdd
  41acfa:	mul    DWORD PTR [ecx+0xb93c423]
  41ad00:	push   ecx
  41ad01:	xor    BYTE PTR [ecx-0x34],dh
  41ad04:	enter  0x6c5d,0x35
  41ad08:	xor    eax,0x14022035
  41ad0d:	jg     0x41acdd
  41ad0f:	mov    bl,0x5c
  41ad11:	jmp    0x4c26:0xed8582de
  41ad18:	aaa    
  41ad19:	shl    DWORD PTR [eax+0x1c98c365],cl
  41ad1f:	scas   al,BYTE PTR es:[edi]
  41ad20:	cmp    ecx,DWORD PTR [eax-0x40a9a34]
  41ad26:	pushf  
  41ad27:	ja     0x41ad78
  41ad29:	add    eax,0x2644424a
  41ad2e:	sub    al,0x39
  41ad30:	jp     0x41acc1
  41ad32:	fistp  DWORD PTR [ebx-0x5b4afc5c]
  41ad38:	mov    ch,0x95
  41ad3a:	int    0x85
  41ad3c:	xor    ecx,DWORD PTR [ebx-0x1c728150]
  41ad42:	scas   eax,DWORD PTR es:[edi]
  41ad43:	cmc    
  41ad44:	in     eax,dx
  41ad45:	add    ch,BYTE PTR [esi]
  41ad47:	pop    ebp
  41ad48:	add    al,0xcb
  41ad4a:	fsub   QWORD PTR [edi+0x6ed3267a]
  41ad50:	out    dx,al
  41ad51:	paddq  mm0,QWORD PTR [ebp-0x516c1f54]
  41ad58:	imul   esp,DWORD PTR [edi+0x1e394d7e],0xffffff89
  41ad5f:	lock shr DWORD PTR [ecx-0x7],0x8c
  41ad64:	sub    cl,BYTE PTR [ecx+0x41]
  41ad67:	push   esi
  41ad68:	(bad)  
  41ad69:	pushf  
  41ad6a:	nop
  41ad6b:	mov    BYTE PTR [eax-0x9],al
  41ad6e:	scas   eax,DWORD PTR es:[edi]
  41ad6f:	mov    DWORD PTR [edi+0x1bc352a6],0x84bb759d
  41ad79:	js     0x41ad64
  41ad7b:	cmp    al,0x3b
  41ad7d:	ja     0x41ad96
  41ad7f:	lods   eax,DWORD PTR ds:[esi]
  41ad80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad81:	mov    bh,0x63
  41ad83:	enter  0x63ec,0x5d
  41ad87:	mov    bh,0xf5
  41ad89:	sbb    eax,0x690da5dc
  41ad8e:	add    edi,eax
  41ad90:	pop    ecx
  41ad91:	xor    BYTE PTR [eax-0x6da409e],dh
  41ad97:	repnz xchg edi,eax
  41ad99:	add    ah,dl
  41ad9b:	add    BYTE PTR [ebx],al
  41ad9d:	stos   BYTE PTR es:[edi],al
  41ad9e:	mov    esi,0x888b1e93
  41ada3:	mov    dl,0x71
  41ada5:	bound  edx,QWORD PTR [eax+eax*8-0x493ebcea]
  41adac:	popf   
  41adad:	fist   DWORD PTR [esi-0x4180bee2]
  41adb3:	fstp   TBYTE PTR [eax+ecx*4-0x19]
  41adb7:	push   cs
  41adb8:	dec    ebx
  41adb9:	dec    eax
  41adba:	pop    edx
  41adbb:	push   edi
  41adbc:	in     eax,dx
  41adbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41adbe:	xlat   BYTE PTR ds:[ebx]
  41adbf:	stc    
  41adc0:	rcr    DWORD PTR [ebp+0x66],cl
  41adc3:	adc    eax,0xb8423da1
  41adc8:	mov    eax,0xc563232a
  41adcd:	stc    
  41adce:	sub    al,0x13
  41add0:	push   esi
  41add1:	out    0x4b,al
  41add3:	call   0xf328c996
  41add8:	test   dl,dh
  41adda:	ror    BYTE PTR [ebx+edx*2+0x5c],cl
  41adde:	bound  ebp,QWORD PTR [ebx+eiz*8]
  41ade1:	pop    eax
  41ade2:	in     eax,0x8f
  41ade4:	neg    BYTE PTR [ebx-0x43635f7f]
  41adea:	mov    bh,BYTE PTR [eax-0x5b]
  41aded:	ins    DWORD PTR es:[edi],dx
  41adee:	dec    edi
  41adef:	cvtdq2ps xmm1,xmm3
  41adf2:	mov    ebp,ebp
  41adf4:	js     0x41add7
  41adf6:	aas    
  41adf7:	aad    0x65
  41adf9:	pop    ds
  41adfa:	fdivr  DWORD PTR [ecx+0x21]
  41adfd:	std    
  41adfe:	mov    ds:0x45766479,al
  41ae03:	dec    edx
  41ae04:	lahf   
  41ae05:	push   eax
  41ae06:	ror    DWORD PTR [edx-0x6],1
  41ae09:	arpl   si,bp
  41ae0b:	jbe    0x41ae09
  41ae0d:	retf   0x620d
  41ae10:	pushf  
  41ae11:	cwde   
  41ae12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae13:	mov    cl,0xce
  41ae15:	mov    dl,BYTE PTR cs:[edi+0x2f]
  41ae19:	cmp    al,ch
  41ae1b:	sbb    ah,BYTE PTR [esi-0x592191bb]
  41ae21:	sub    eax,0x43f3905e
  41ae26:	lahf   
  41ae27:	sbb    BYTE PTR [edi+eiz*1+0xa27926e],dh
  41ae2e:	jb     0x41ae1a
  41ae30:	out    dx,al
  41ae31:	sbb    ecx,DWORD PTR [ebp-0x6]
  41ae34:	cdq    
  41ae35:	cdq    
  41ae36:	scas   eax,DWORD PTR es:[edi]
  41ae37:	pop    esi
  41ae38:	pusha  
  41ae39:	fwait
  41ae3a:	pushf  
  41ae3b:	push   cs
  41ae3c:	mov    BYTE PTR [esi-0x22],bh
  41ae3f:	xchg   esi,eax
  41ae40:	xchg   ebp,eax
  41ae41:	add    al,0xe3
  41ae43:	adc    ah,ch
  41ae45:	xchg   ebx,eax
  41ae46:	dec    esp
  41ae47:	jp     0x41adf7
  41ae49:	cld    
  41ae4a:	jecxz  0x41add4
  41ae4c:	sti    
  41ae4d:	add    ebp,DWORD PTR [edx]
  41ae4f:	cmp    eax,0xb34553ef
  41ae54:	or     eax,0x1f214f0d
  41ae59:	into   
  41ae5a:	inc    esp
  41ae5b:	js     0x41ae0d
  41ae5d:	inc    edx
  41ae5e:	ins    BYTE PTR es:[edi],dx
  41ae5f:	sti    
  41ae60:	dec    ebx
  41ae61:	in     eax,dx
  41ae62:	dec    ebx
  41ae63:	add    edi,eax
  41ae65:	or     edx,esi
  41ae67:	and    eax,0x991ff5e9
  41ae6c:	loop   0x41ae0a
  41ae6e:	fs popf 
  41ae70:	idiv   ch
  41ae72:	xor    edi,ecx
  41ae74:	and    BYTE PTR [ebp-0x4b334de1],ah
  41ae7a:	ins    BYTE PTR es:[edi],dx
  41ae7b:	(bad)  
  41ae7c:	xor    dh,BYTE PTR [eax-0x37]
  41ae7f:	lahf   
  41ae80:	int3   
  41ae81:	mov    bl,0xfb
  41ae83:	mov    es,WORD PTR [eax+0x3c]
  41ae86:	adc    ecx,DWORD PTR [esi]
  41ae88:	jl     0x41ae13
  41ae8a:	out    0x1e,eax
  41ae8c:	mov    bl,0x36
  41ae8e:	xchg   ebx,edx
  41ae90:	push   ebx
  41ae91:	xchg   ebx,ecx
  41ae93:	aaa    
  41ae94:	adc    dh,bl
  41ae96:	fmul   DWORD PTR [eax+0x5e05c26e]
  41ae9c:	sti    
  41ae9d:	add    DWORD PTR [eax],ebp
  41ae9f:	cmp    DWORD PTR [esi-0x26],0xffffffe1
  41aea3:	inc    ebp
  41aea4:	add    al,0xc0
  41aea6:	aam    0x93
  41aea8:	jnp    0x41af14
  41aeaa:	and    BYTE PTR [ebx+0x75],bl
  41aead:	jns    0x41ae32
  41aeaf:	ret    0x6c83
  41aeb2:	popf   
  41aeb3:	or     ch,bh
  41aeb5:	repnz inc ecx
  41aeb7:	mov    bh,0xf9
  41aeb9:	inc    esi
  41aeba:	dec    edi
  41aebb:	pop    ebp
  41aebc:	cli    
  41aebd:	(bad)  
  41aebe:	pop    edx
  41aebf:	add    dh,BYTE PTR [esi-0x64]
  41aec2:	ss jmp 0xdfd4e20c
  41aec8:	shl    DWORD PTR [edi],0xb1
  41aecb:	cdq    
  41aecc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aecd:	jae    0x41af49
  41aecf:	into   
  41aed0:	jne    0x41ae5f
  41aed2:	pop    ebx
  41aed3:	in     al,dx
  41aed4:	into   
  41aed5:	out    dx,eax
  41aed6:	and    DWORD PTR [esi+0x7b91ab0],eax
  41aedc:	in     eax,0x1f
  41aede:	lock xor DWORD PTR [edx-0x1baea24e],eax
  41aee5:	cmc    
  41aee6:	mov    al,ds:0x5abe0324
  41aeeb:	repnz int3 
  41aeed:	or     DWORD PTR [ebp+0x1c],ebx
  41aef0:	sub    al,0x1
  41aef2:	or     eax,0xaa3cabbb
  41aef7:	sub    DWORD PTR [edx-0x4adeb5c0],edx
  41aefd:	sbb    DWORD PTR [ecx-0xdf2f240],ebp
  41af03:	ret    
  41af04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af05:	ficomp DWORD PTR [ecx+0x4c]
  41af08:	and    DWORD PTR [ebx-0x78],0xffffffec
  41af0c:	dec    edx
  41af0d:	xor    edx,DWORD PTR [edx+0x15]
  41af10:	ficomp DWORD PTR [edi-0x593fbcdd]
  41af16:	pop    ebp
  41af17:	inc    esp
  41af18:	mov    al,ds:0x632c233d
  41af1d:	out    0xb1,eax
  41af1f:	inc    DWORD PTR ds:0x9ed66b66
  41af25:	inc    ecx
  41af26:	cmp    bl,BYTE PTR [esi+0x734675cb]
  41af2c:	jbe    0x41aebf
  41af2e:	in     al,dx
  41af2f:	sahf   
  41af30:	lahf   
  41af31:	push   ds
  41af32:	stos   BYTE PTR es:[edi],al
  41af33:	adc    ch,cl
  41af35:	dec    esp
  41af36:	dec    ebp
  41af37:	pop    esi
  41af38:	jo     0x41aebc
  41af3a:	out    dx,al
  41af3b:	test   al,0x23
  41af3d:	lahf   
  41af3e:	and    DWORD PTR [edi+0x342598a],ebp
  41af44:	xchg   ebx,eax
  41af45:	leave  
  41af46:	es pop ecx
  41af48:	aad    0x5f
  41af4a:	add    BYTE PTR [ecx],ch
  41af4c:	sbb    al,0x57
  41af4e:	push   ss
  41af4f:	je     0x41aed4
  41af51:	jns    0x41af80
  41af53:	inc    esp
  41af54:	into   
  41af55:	int    0x4a
  41af57:	sbb    dl,BYTE PTR [ecx-0x710568c4]
  41af5d:	pop    ebx
  41af5e:	iret   
  41af5f:	neg    BYTE PTR [edi]
  41af61:	popa   
  41af62:	sbb    BYTE PTR [edx-0x63f1ba32],dl
  41af68:	push   cs
  41af69:	sbb    eax,0x45c99b87
  41af6e:	sbb    esi,DWORD PTR [esi+0x53e8f63b]
  41af74:	les    esp,FWORD PTR [esi-0x3215943d]
  41af7a:	cmp    DWORD PTR [ebp-0x26],esp
  41af7d:	lea    edx,[edi+0xc]
  41af80:	sbb    al,0xb7
  41af82:	ret    0xc51e
  41af85:	pop    ebp
  41af86:	xor    BYTE PTR [ebx+edx*4+0x1138bdfb],ch
  41af8d:	std    
  41af8e:	int    0xc9
  41af90:	shl    BYTE PTR es:[esp+esi*1-0x32],0x6e
  41af96:	xor    DWORD PTR [esi+0x64fa74db],eax
  41af9c:	xchg   edx,eax
  41af9d:	cmp    bl,bh
  41af9f:	call   0xb977:0x6350ac7e
  41afa6:	pusha  
  41afa7:	cmc    
  41afa8:	test   eax,0xb1f31ec8
  41afad:	inc    ecx
  41afae:	test   BYTE PTR [ecx-0x4a0274ce],0x6d
  41afb5:	add    dl,BYTE PTR [ecx+ecx*4-0x26]
  41afb9:	inc    edx
  41afba:	and    bl,dh
  41afbc:	mov    edx,ss
  41afbe:	and    ecx,esp
  41afc0:	sbb    eax,0x61a8f63a
  41afc5:	inc    eax
  41afc6:	mov    dh,0xff
  41afc8:	mov    edi,0x82f4bf3
  41afce:	mov    ecx,0x951e33d2
  41afd3:	sub    edi,DWORD PTR [ecx+ecx*8+0x52]
  41afd7:	cmc    
  41afd8:	fadd   QWORD PTR es:[eax+0xb48811e]
  41afdf:	sbb    eax,0x74c69657
  41afe4:	sub    ecx,DWORD PTR [edx+0x42458c80]
  41afea:	es scas al,BYTE PTR es:[edi]
  41afec:	push   ds
  41afed:	mov    WORD PTR [ebp-0xc],cs
  41aff0:	add    eax,0x8e92662
  41aff5:	cdq    
  41aff6:	les    esp,FWORD PTR [eax]
  41aff8:	shl    BYTE PTR [eax+eiz*8],1
  41affb:	mov    al,ds:0xdaceda86
  41b000:	imul   esi,DWORD PTR [eax],0xe8dfccbf
  41b006:	shl    ebx,cl
  41b008:	loop   0x41afe4
  41b00a:	push   ss
  41b00b:	inc    edi
  41b00c:	sbb    eax,0x92302c26
  41b011:	loopne 0x41b002
  41b013:	das    
  41b014:	repnz adc ebp,eax
  41b017:	pushf  
  41b018:	in     al,0xdb
  41b01a:	jmp    0xd8f3:0x28e41ec4
  41b021:	push   ecx
  41b022:	(bad)  
  41b023:	adc    eax,esi
  41b025:	arpl   WORD PTR [ebx+0x106a7b5],bp
  41b02b:	xchg   edx,eax
  41b02c:	or     ah,BYTE PTR [ebp-0x2a]
  41b02f:	mov    ds:0x4d9bec75,al
  41b034:	add    cl,cl
  41b036:	in     al,dx
  41b037:	xchg   edi,eax
  41b038:	shl    DWORD PTR [ebp-0x34],cl
  41b03b:	data16 ss jno 0x41b02c
  41b03f:	or     ch,bl
  41b041:	push   0x8ce49c5b
  41b046:	scas   al,BYTE PTR es:[edi]
  41b047:	mov    bh,0xf1
  41b049:	jmp    0xdff23eed
  41b04e:	dec    esp
  41b04f:	pop    esp
  41b050:	dec    ecx
  41b051:	repz cs jg 0x41b02d
  41b055:	out    dx,eax
  41b056:	imul   ebp,DWORD PTR [eax],0xe
  41b059:	or     ah,BYTE PTR [eax-0x4e]
  41b05c:	lea    eax,[edx]
  41b05e:	idiv   DWORD PTR [ecx]
  41b060:	cmp    eax,0xb2026c51
  41b065:	lock scas al,BYTE PTR es:[edi]
  41b067:	les    eax,FWORD PTR [ecx+eiz*8]
  41b06a:	xor    ecx,ecx
  41b06c:	stc    
  41b06d:	adc    cl,BYTE PTR [esi]
  41b06f:	mov    ch,0x34
  41b071:	retf   0x653
  41b074:	and    edi,eax
  41b076:	xor    DWORD PTR [ecx],ecx
  41b078:	adc    DWORD PTR [edi],ebx
  41b07a:	adc    al,dh
  41b07c:	push   ds
  41b07d:	arpl   cx,ax
  41b07f:	aas    
  41b080:	lods   eax,DWORD PTR ds:[esi]
  41b081:	pop    ds
  41b082:	daa    
  41b083:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b084:	clc    
  41b085:	and    edi,DWORD PTR [ecx+edi*1-0x5b5d6857]
  41b08c:	xchg   edx,eax
  41b08d:	mov    ah,0xbc
  41b08f:	out    dx,eax
  41b090:	leave  
  41b091:	loope  0x41b02d
  41b093:	pop    esp
  41b094:	or     eax,0x77edcf11
  41b099:	mov    BYTE PTR [bx],0x73
  41b09d:	or     ebx,DWORD PTR [eax+edx*8-0x55]
  41b0a1:	or     eax,0x1969d6d
  41b0a6:	nop
  41b0a7:	cmc    
  41b0a8:	adc    edx,DWORD PTR [eax+eiz*8+0x59]
  41b0ac:	push   edx
  41b0ad:	test   eax,0xcf6dd83
  41b0b2:	stos   BYTE PTR es:[edi],al
  41b0b3:	mov    al,ds:0xd4b9701c
  41b0b8:	test   DWORD PTR [ebx+0x168e7943],esi
  41b0be:	dec    DWORD PTR [edi+0x3a]
  41b0c1:	rcr    al,1
  41b0c3:	pop    ebx
  41b0c4:	xchg   ebx,eax
  41b0c5:	xor    al,0x73
  41b0c7:	lea    ecx,[ecx]
  41b0c9:	ds push es
  41b0cb:	fbld   TBYTE PTR [edx-0x2e02d41f]
  41b0d1:	xchg   edi,eax
  41b0d2:	outs   dx,DWORD PTR ds:[esi]
  41b0d3:	adc    BYTE PTR [ebx+ebp*1+0x1d806c8f],dl
  41b0da:	rol    edi,0xe5
  41b0dd:	xchg   esi,eax
  41b0de:	fiadd  WORD PTR ds:0xbe877f48
  41b0e4:	retf   0x16ce
  41b0e7:	ds push ecx
  41b0e9:	mov    bh,0x87
  41b0eb:	stos   BYTE PTR es:[edi],al
  41b0ec:	jmp    0x3edad178
  41b0f1:	mov    esi,0xf5b1f4b4
  41b0f6:	sub    eax,DWORD PTR [esp+eax*2-0x4e907605]
  41b0fd:	fadd   DWORD PTR [eax]
  41b0ff:	test   BYTE PTR [ebx+0x53],bl
  41b102:	and    BYTE PTR [eax],bl
  41b104:	sbb    eax,0x40824373
  41b109:	ins    DWORD PTR es:[edi],dx
  41b10a:	pop    ebx
  41b10b:	push   0x7f2894fb
  41b110:	sub    al,0xf1
  41b112:	loop   0x41b174
  41b114:	sub    eax,0xe543630
  41b119:	mov    ecx,0xeda0408a
  41b11e:	mov    dh,0x4f
  41b120:	loopne 0x41b157
  41b122:	sti    
  41b123:	jecxz  0x41b166
  41b125:	jns    0x41b0b8
  41b127:	cmp    eax,0x9fb18147
  41b12c:	pusha  
  41b12d:	xchg   ebp,eax
  41b12e:	fimul  WORD PTR [ebx]
  41b130:	aad    0xba
  41b132:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b133:	repz call 0x38726316
  41b139:	jne    0x41b0df
  41b13b:	add    al,0x23
  41b13d:	or     ebx,DWORD PTR [eax-0x1840b65a]
  41b143:	mov    eax,0xd09092eb
  41b148:	cmp    eax,0xc21c9eb9
  41b14d:	fnstcw WORD PTR ds:0x135fc4e8
  41b153:	test   eax,0x92338873
  41b158:	sbb    DWORD PTR [eax+eiz*2+0xdf17785],ecx
  41b15f:	shr    DWORD PTR [ecx-0x831ebb6],cl
  41b165:	call   0xa6b83223
  41b16a:	jno    0x41b1ea
  41b16c:	dec    edx
  41b16d:	test   eax,0x89ff0a40
  41b172:	cwde   
  41b173:	xor    ecx,ebx
  41b175:	adc    ebx,DWORD PTR [edi+edi*4-0x4408aad0]
  41b17c:	sbb    BYTE PTR [ecx],0xc9
  41b17f:	(bad)  
  41b180:	and    bh,BYTE PTR [ebp-0x115260b8]
  41b186:	mov    dh,BYTE PTR [eax]
  41b188:	test   eax,0x5b606571
  41b18d:	mov    edx,DWORD PTR [ebp-0x44]
  41b190:	les    ebx,FWORD PTR ds:0x8bb40c75
  41b196:	mov    ebp,0x6680fb1
  41b19b:	leave  
  41b19c:	fstp   DWORD PTR [ecx-0x1bb094f3]
  41b1a2:	mov    edx,DWORD PTR [esi+0x6c71dc95]
  41b1a8:	jl     0x41b1ac
  41b1aa:	popa   
  41b1ab:	adc    ch,ch
  41b1ad:	shr    DWORD PTR [edx],1
  41b1af:	out    dx,eax
  41b1b0:	aam    0x8b
  41b1b2:	add    al,0xec
  41b1b4:	pop    edi
  41b1b5:	mov    dl,0x49
  41b1b7:	test   esi,edi
  41b1b9:	lock xor bl,cl
  41b1bc:	std    
  41b1bd:	inc    esi
  41b1be:	add    BYTE PTR [ecx],ah
  41b1c0:	into   
  41b1c1:	dec    eax
  41b1c2:	xor    BYTE PTR [esi],ah
  41b1c4:	push   esi
  41b1c5:	outs   dx,BYTE PTR ds:[esi]
  41b1c6:	into   
  41b1c7:	mov    ah,0x48
  41b1c9:	jmp    0xa674:0xf5f0d979
  41b1d0:	add    dh,BYTE PTR [ecx+0x54702079]
  41b1d6:	adc    BYTE PTR [edi+0x22efc76a],0xdb
  41b1dd:	out    dx,eax
  41b1de:	leave  
  41b1df:	popa   
  41b1e0:	lock or ecx,DWORD PTR [eax]
  41b1e3:	xchg   edx,eax
  41b1e4:	leave  
  41b1e5:	rcr    BYTE PTR [ecx+0x35],0xa
  41b1e9:	adc    eax,0xbc5385a4
  41b1ee:	adc    al,0xe0
  41b1f0:	(bad)  
  41b1f1:	mov    al,0xb8
  41b1f3:	neg    BYTE PTR [edx+0x78ee26d7]
  41b1f9:	into   
  41b1fa:	push   cs
  41b1fb:	jle    0x41b1ca
  41b1fd:	xlat   BYTE PTR ds:[ebx]
  41b1fe:	and    edx,DWORD PTR [eax]
  41b200:	lahf   
  41b201:	fucomi st,st(2)
  41b203:	aas    
  41b204:	fwait
  41b205:	loope  0x41b27e
  41b207:	lock das 
  41b209:	pop    ebp
  41b20a:	mov    cl,0xc7
  41b20c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b20d:	gs jl  0x41b194
  41b210:	mov    bl,BYTE PTR ds:0xd85c62e3
  41b216:	mov    ebp,0xccec84e
  41b21b:	imul   eax,ecx,0xdd46667d
  41b221:	mov    eax,0x98feba18
  41b226:	cmp    DWORD PTR [edi-0xe],ecx
  41b229:	mov    DWORD PTR [ebx+0x6b5e3f63],edi
  41b22f:	inc    edi
  41b230:	push   es
  41b231:	xor    ch,dl
  41b233:	mov    eax,ds:0x74fbed81
  41b238:	std    
  41b239:	out    0xee,al
  41b23b:	in     al,0x72
  41b23d:	mov    esp,0xfb24c421
  41b242:	xor    BYTE PTR [eax+0x4883f3e9],ch
  41b248:	push   edx
  41b249:	pop    edi
  41b24a:	std    
  41b24b:	adc    al,0x43
  41b24d:	mov    al,ds:0x74965032
  41b252:	shl    dl,0x30
  41b255:	rol    bh,1
  41b257:	sbb    al,0x66
  41b259:	cmp    ecx,edx
  41b25b:	leave  
  41b25c:	mov    ebx,0x73d8bbb5
  41b261:	adc    BYTE PTR [ecx-0x22],ah
  41b264:	ins    BYTE PTR es:[edi],dx
  41b265:	lea    eax,[ebx+edx*8-0x428bc135]
  41b26c:	pop    edx
  41b26d:	loope  0x41b2d9
  41b26f:	in     al,dx
  41b270:	leave  
  41b271:	sub    eax,0x5691cea5
  41b276:	mov    cl,0xe8
  41b278:	mov    ebx,0xd06fa453
  41b27d:	mov    bl,0x24
  41b27f:	xor    eax,0xe32f933d
  41b284:	push   eax
  41b285:	addr16 stc 
  41b287:	call   0xe189:0xbf345a70
  41b28e:	jb     0x41b280
  41b290:	(bad)  
  41b291:	dec    edi
  41b292:	lea    ebp,[ebx]
  41b294:	lods   eax,DWORD PTR ds:[esi]
  41b295:	lods   eax,DWORD PTR ds:[esi]
  41b296:	outs   dx,BYTE PTR ds:[esi]
  41b297:	iret   
  41b298:	rol    DWORD PTR [edi],0x3e
  41b29b:	xchg   esp,eax
  41b29c:	iret   
  41b29d:	fsub   QWORD PTR gs:[ebx+0x92b49dc]
  41b2a4:	outs   dx,BYTE PTR ds:[esi]
  41b2a5:	mov    eax,ds:0x971e78e4
  41b2aa:	jns    0x41b2e1
  41b2ac:	loope  0x41b2fe
  41b2ae:	push   cs
  41b2af:	lods   eax,DWORD PTR ds:[esi]
  41b2b0:	mov    eax,ss
  41b2b2:	sub    ecx,0x30
  41b2b5:	pushf  
  41b2b6:	dec    eax
  41b2b7:	sti    
  41b2b8:	lahf   
  41b2b9:	xor    cl,ch
  41b2bb:	xchg   edx,eax
  41b2bc:	call   0x90f4d453
  41b2c1:	ret    0xe598
  41b2c4:	xchg   esi,eax
  41b2c5:	mov    ah,0xe0
  41b2c7:	lahf   
  41b2c8:	cvtps2pd xmm4,xmm5
  41b2cb:	sahf   
  41b2cc:	cmp    esp,esi
  41b2ce:	cdq    
  41b2cf:	inc    esi
  41b2d0:	ja     0x41b25d
  41b2d2:	xor    BYTE PTR [ecx+0x50],al
  41b2d5:	data16 fsub st(7),st
  41b2d8:	mov    cl,BYTE PTR [eax-0x75]
  41b2db:	sub    cl,bl
  41b2dd:	pop    ecx
  41b2de:	outs   dx,BYTE PTR ds:[esi]
  41b2df:	dec    ebp
  41b2e0:	mov    dl,ah
  41b2e2:	sbb    ebp,DWORD PTR [esi+0x39]
  41b2e5:	lods   eax,DWORD PTR ds:[esi]
  41b2e6:	lds    ebx,FWORD PTR [ecx-0x51]
  41b2e9:	int3   
  41b2ea:	dec    ebx
  41b2eb:	fadd   DWORD PTR [edi-0x3bee430e]
  41b2f1:	pop    edx
  41b2f2:	jnp    0x41b2a0
  41b2f4:	aam    0x2b
  41b2f6:	mov    BYTE PTR [eax+0x96e7980],dl
  41b2fc:	cwde   
  41b2fd:	push   es
  41b2fe:	sub    eax,0x7895a8ec
  41b303:	xchg   esi,eax
  41b304:	cmp    ecx,DWORD PTR [ebx]
  41b306:	inc    eax
  41b307:	js     0x41b28e
  41b309:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b30a:	sahf   
  41b30b:	mov    cl,0x15
  41b30d:	out    0x5e,al
  41b30f:	or     DWORD PTR [ecx+0x3b7f54bf],ebx
  41b315:	dec    edi
  41b316:	mov    al,ds:0x9cf041bb
  41b31b:	jg     0x41b334
  41b31d:	and    esi,DWORD PTR [edx-0x65]
  41b320:	pop    esp
  41b321:	fwait
  41b322:	push   es
  41b323:	sbb    DWORD PTR [ecx+0x71],esp
  41b326:	sar    BYTE PTR [esi-0x73cac950],0x55
  41b32d:	not    BYTE PTR [eax+eiz*2-0x2e786fac]
  41b334:	or     bl,BYTE PTR [edx+0x3f]
  41b337:	aas    
  41b338:	and    eax,DWORD PTR [edi]
  41b33a:	(bad)  
  41b33b:	push   esp
  41b33c:	xlat   BYTE PTR ds:[ebx]
  41b33d:	loop   0x41b2d0
  41b33f:	gs ins BYTE PTR es:[edi],dx
  41b341:	mov    ds,WORD PTR [eax]
  41b343:	les    eax,FWORD PTR [edi+0x1da9d4a8]
  41b349:	call   0x56244c8c
  41b34e:	or     al,0xb4
  41b350:	imul   edi,DWORD PTR [ebp+0x70],0xffffffd5
  41b354:	pop    es
  41b355:	sar    DWORD PTR [edx],cl
  41b357:	push   ss
  41b358:	lods   al,BYTE PTR ds:[esi]
  41b359:	sub    al,0xe1
  41b35b:	hlt    
  41b35c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b35d:	and    edx,DWORD PTR ds:0xb2b7c3aa
  41b363:	jb     0x41b3af
  41b365:	cs bnd jle 0x41b3b3
  41b369:	or     al,0x19
  41b36b:	jb     0x41b32c
  41b36d:	dec    eax
  41b36e:	sub    DWORD PTR [edi],ebp
  41b370:	js     0x41b3a0
  41b372:	adc    esi,esi
  41b374:	outs   dx,BYTE PTR ds:[esi]
  41b375:	mov    ah,BYTE PTR [ecx+0x7c]
  41b378:	shl    ecx,cl
  41b37a:	mov    bl,0x1e
  41b37c:	test   al,0xf
  41b37e:	add    esp,DWORD PTR [eax-0x8]
  41b381:	inc    eax
  41b382:	fwait
  41b383:	sub    cl,ch
  41b385:	sahf   
  41b386:	call   0xebe0:0xc4948b8a
  41b38d:	mov    dh,0xde
  41b38f:	icebp  
  41b390:	adc    eax,0x67f73722
  41b395:	(bad)  
  41b396:	(bad)  
  41b397:	repnz push 0x7
  41b39a:	shl    bh,cl
  41b39c:	fidivr WORD PTR [esi+0x6fd495e]
  41b3a2:	jno    0x41b37e
  41b3a4:	cdq    
  41b3a5:	dec    esp
  41b3a6:	push   es
  41b3a7:	cld    
  41b3a8:	fwait
  41b3a9:	cdq    
  41b3aa:	add    al,0x5f
  41b3ac:	jnp    0x41b38d
  41b3ae:	daa    
  41b3af:	adc    edi,DWORD PTR [eax]
  41b3b1:	rol    BYTE PTR [ebp+0x2],1
  41b3b4:	mov    ebp,0xa4522479
  41b3b9:	gs lahf 
  41b3bb:	and    esp,DWORD PTR [eax+0x35d1bac6]
  41b3c1:	push   0xffffffb1
  41b3c3:	mov    edi,0x8a68be4d
  41b3c8:	adc    al,0xed
  41b3ca:	add    ah,cl
  41b3cc:	sub    BYTE PTR [edx+0x7f],ah
  41b3cf:	ret    0x45bf
  41b3d2:	mov    ?,WORD PTR [ecx+0x5ae0e17d]
  41b3d8:	cmp    DWORD PTR [esi-0x5a72c4db],ebx
  41b3de:	pop    ds
  41b3df:	js     0x41b3cb
  41b3e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3e2:	dec    edi
  41b3e3:	scas   eax,DWORD PTR es:[edi]
  41b3e4:	pop    es
  41b3e5:	or     eax,0x13817847
  41b3ea:	or     bh,BYTE PTR [ebx+0x64bd4f5b]
  41b3f0:	imul   esp,DWORD PTR [esi],0xffffff93
  41b3f3:	call   0x76ca:0x24d8d5e4
  41b3fa:	cmp    eax,0x33e948d
  41b3ff:	cld    
  41b400:	dec    edi
  41b401:	icebp  
  41b402:	push   0xffffffaf
  41b404:	jle    0x41b479
  41b406:	mov    bl,0x40
  41b408:	push   ecx
  41b409:	or     BYTE PTR [edx-0x5efcfc23],ah
  41b40f:	adc    eax,0xf15dc623
  41b414:	dec    esp
  41b415:	sbb    ch,bl
  41b417:	pop    es
  41b418:	in     eax,dx
  41b419:	sub    dh,0xb2
  41b41c:	fwait
  41b41d:	push   ecx
  41b41e:	dec    ecx
  41b41f:	pusha  
  41b420:	fisub  WORD PTR [ebx]
  41b422:	mov    ds:0x7235280f,eax
  41b427:	cmp    BYTE PTR [ebp+0x32b49a8c],bh
  41b42d:	fstp   st(0)
  41b42f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b430:	push   edi
  41b431:	repnz mov dh,0xb6
  41b434:	and    DWORD PTR [eax],edi
  41b436:	call   0x96426c35
  41b43b:	inc    eax
  41b43c:	test   BYTE PTR [edx],0xfa
  41b43f:	inc    eax
  41b440:	push   ss
  41b441:	out    0x3e,al
  41b443:	inc    edi
  41b444:	adc    dl,BYTE PTR [eax+eiz*2]
  41b447:	and    dh,BYTE PTR [edx-0x6e]
  41b44a:	ficom  WORD PTR [ecx+ecx*2-0x32239c08]
  41b451:	hlt    
  41b452:	fcmovne st,st(5)
  41b454:	mov    al,ds:0xc15dab5e
  41b459:	inc    eax
  41b45a:	aaa    
  41b45b:	cmp    BYTE PTR [ebx+0x54],cl
  41b45e:	pop    esi
  41b45f:	cdq    
  41b460:	or     al,0x61
  41b462:	xchg   ecx,eax
  41b463:	pop    edx
  41b464:	dec    esi
  41b465:	xor    bh,BYTE PTR [edx]
  41b467:	out    0x56,al
  41b469:	pop    esi
  41b46a:	add    ecx,DWORD PTR [esi]
  41b46c:	(bad)
  41b46f:	(bad)  
  41b471:	repnz mov cl,0xc7
  41b474:	mov    dh,0x53
  41b476:	add    BYTE PTR gs:[edi],cl
  41b479:	and    DWORD PTR [edi],edi
  41b47b:	pop    ss
  41b47c:	fisubr DWORD PTR [ebp+0x40]
  41b47f:	iret   
  41b480:	out    0x2f,eax
  41b482:	cwde   
  41b483:	aaa    
  41b484:	jbe    0x41b42f
  41b486:	fidivr DWORD PTR [ecx+eiz*2+0x32d0c83c]
  41b48d:	cmc    
  41b48e:	lds    eax,FWORD PTR [edi+0x25a12916]
  41b494:	call   0xe0706aa9
  41b499:	mov    ch,0x4e
  41b49b:	in     al,dx
  41b49c:	loope  0x41b49a
  41b49e:	xchg   esp,eax
  41b49f:	mov    DWORD PTR [eax],0xff27ca26
  41b4a5:	jp     0x41b500
  41b4a7:	jae    0x41b49f
  41b4a9:	gs inc esi
  41b4ab:	and    al,0x95
  41b4ad:	mov    cs,WORD PTR [edi]
  41b4af:	std    
  41b4b0:	jae    0x41b454
  41b4b2:	mov    al,0x6d
  41b4b4:	add    eax,0x62d0b177
  41b4b9:	test   cl,dl
  41b4bb:	mov    esi,0x8b343641
  41b4c0:	push   edx
  41b4c1:	int3   
  41b4c2:	fldenv [esi+0x5378685d]
  41b4c8:	cmp    eax,0xc805788e
  41b4cd:	mov    esp,0xc8d80a72
  41b4d2:	(bad)  
  41b4d3:	inc    BYTE PTR [ecx-0x65]
  41b4d6:	sbb    edi,DWORD PTR [eax]
  41b4d8:	aad    0x44
  41b4da:	lahf   
  41b4db:	xor    bl,dl
  41b4dd:	cmp    al,BYTE PTR ds:0x7e00aa75
  41b4e3:	sbb    al,0xea
  41b4e5:	aas    
  41b4e6:	ins    BYTE PTR es:[edi],dx
  41b4e7:	xchg   esi,eax
  41b4e8:	arpl   WORD PTR [ecx+0x52],dx
  41b4eb:	outs   dx,DWORD PTR ds:[esi]
  41b4ec:	adc    ch,dh
  41b4ee:	shr    BYTE PTR [edi],0x7b
  41b4f1:	mov    WORD PTR [ebx+ebx*1],ss
  41b4f4:	mov    al,ds:0xf6610ccb
  41b4f9:	not    DWORD PTR [eax-0x66]
  41b4fc:	fnstcw WORD PTR [ecx+0x76002d69]
  41b502:	jmp    0x38c9:0x6802ba89
  41b509:	setb   BYTE PTR [ecx-0x4c]
  41b50d:	mov    ds:0xf600002b,eax
  41b512:	inc    esi
  41b513:	lahf   
  41b514:	jg     0x41b4f0
  41b516:	xchg   edx,eax
  41b517:	adc    edi,DWORD PTR [ebp+0x17]
  41b51a:	cli    
  41b51b:	aad    0x48
  41b51d:	inc    eax
  41b51e:	arpl   WORD PTR [ebx],di
  41b520:	jg     0x41b4a3
  41b522:	mov    WORD PTR [ebp+0x42],cs
  41b525:	daa    
  41b526:	sti    
  41b527:	dec    esp
  41b528:	popa   
  41b529:	mov    eax,0x5d93fdef
  41b52e:	jg     0x41b515
  41b530:	aaa    
  41b531:	test   al,0xf1
  41b533:	mov    dl,0x38
  41b535:	out    dx,al
  41b536:	or     DWORD PTR [edi+0x6b],edx
  41b539:	icebp  
  41b53a:	inc    ebp
  41b53b:	gs jg  0x41b52c
  41b53e:	div    ah
  41b540:	lods   eax,DWORD PTR ds:[esi]
  41b541:	jo     0x41b4cd
  41b543:	dec    edi
  41b544:	mov    eax,ds:0xe462d118
  41b549:	ret    
  41b54a:	mov    al,0x25
  41b54c:	xchg   ebx,eax
  41b54d:	xlat   BYTE PTR ds:[ebx]
  41b54e:	ja     0x41b5cc
  41b550:	mov    DWORD PTR [ebx+0x62e3a219],esi
  41b556:	push   ebp
  41b557:	out    dx,eax
  41b558:	adc    cl,BYTE PTR [eax+0x10]
  41b55b:	mov    ah,dh
  41b55d:	mov    cl,0xf4
  41b55f:	hlt    
  41b560:	mul    BYTE PTR [esi+0x4190a729]
  41b566:	retf   
  41b567:	jge    0x41b5d5
  41b569:	icebp  
  41b56a:	sti    
  41b56b:	lods   al,BYTE PTR ds:[esi]
  41b56c:	xor    ecx,DWORD PTR [eax+esi*8]
  41b56f:	xchg   esi,eax
  41b570:	adc    DWORD PTR [ebp+0x16],0x465e25d9
  41b577:	aad    0x2f
  41b579:	add    al,0x16
  41b57b:	retf   
  41b57c:	scas   eax,DWORD PTR es:[edi]
  41b57d:	or     ch,bh
  41b57f:	xchg   edi,eax
  41b580:	cli    
  41b581:	and    al,0xcc
  41b583:	into   
  41b584:	rcr    BYTE PTR [ebx-0x22],0xda
  41b588:	jne    0x41b595
  41b58a:	(bad)  
  41b58c:	repnz xchg esi,eax
  41b58e:	(bad)  
  41b58f:	je     0x41b5bc
  41b591:	(bad)
  41b594:	cdq    
  41b595:	mov    esp,0x83974543
  41b59a:	xor    DWORD PTR [edi-0x5e],0x18
  41b59e:	push   esi
  41b59f:	mov    bl,BYTE PTR [edx-0x7754f31b]
  41b5a5:	add    al,BYTE PTR [eax+edx*4-0x207f3053]
  41b5ac:	(bad)  [ebx-0x3c]
  41b5af:	hlt    
  41b5b0:	nop
  41b5b1:	ins    BYTE PTR es:[edi],dx
  41b5b2:	xor    al,0x99
  41b5b4:	add    BYTE PTR [eax+0x790a02fe],bl
  41b5ba:	stc    
  41b5bb:	test   al,0x7c
  41b5bd:	xlat   BYTE PTR ds:[ebx]
  41b5be:	jno    0x41b5bd
  41b5c0:	push   edx
  41b5c1:	sbb    esi,eax
  41b5c3:	fdiv   QWORD PTR [ebp-0x8f11a06]
  41b5c9:	pop    es
  41b5ca:	repnz leave 
  41b5cc:	sub    cl,cl
  41b5ce:	mov    dl,0xa6
  41b5d0:	mov    ch,0x5b
  41b5d2:	mov    esi,0xa078e849
  41b5d7:	push   0xf8628383
  41b5dc:	hlt    
  41b5dd:	sbb    DWORD PTR [esi-0x24],ecx
  41b5e0:	mov    ds:0x3ef506bd,eax
  41b5e5:	out    0x71,eax
  41b5e7:	sbb    eax,0x8e028158
  41b5ec:	(bad)  [esi+0x5a]
  41b5ef:	dec    edi
  41b5f0:	fwait
  41b5f1:	mov    cs,WORD PTR ds:0x57c4c209
  41b5f7:	adc    eax,0xd0aef21e
  41b5fc:	fsubr  DWORD PTR [eax-0x12]
  41b5ff:	ret    0x37ac
  41b602:	inc    esi
  41b603:	mov    bl,BYTE PTR [eax]
  41b605:	cdq    
  41b606:	xor    DWORD PTR [ebx],edi
  41b608:	jecxz  0x41b598
  41b60a:	cmp    BYTE PTR [esp+esi*8+0x73],al
  41b60e:	xor    eax,0xa6325304
  41b613:	aad    0x2a
  41b615:	or     edx,DWORD PTR [edx+eax*1]
  41b618:	(bad)  
  41b619:	and    DWORD PTR [edx+0x3171d64],0x11
  41b620:	and    dh,BYTE PTR [esi+ebx*8+0x9561320]
  41b627:	sub    edx,DWORD PTR [ebp-0x79]
  41b62a:	(bad)  
  41b62b:	jl     0x41b5e1
  41b62d:	leave  
  41b62e:	push   ss
  41b62f:	or     BYTE PTR [ecx-0x45908c19],cl
  41b635:	push   ecx
  41b636:	xor    DWORD PTR [ecx+0x19],0x19
  41b63a:	xor    eax,0x2755e96d
  41b63f:	cdq    
  41b640:	and    eax,esp
  41b642:	cmp    al,0x8b
  41b644:	push   ebp
  41b645:	mov    al,0x81
  41b647:	ror    ebp,0xeb
  41b64a:	inc    edx
  41b64b:	add    dh,BYTE PTR [ebx]
  41b64d:	retf   0x4d89
  41b650:	mov    al,0x8b
  41b652:	dec    ebp
  41b653:	or     BYTE PTR [ebx-0x30fc4bab],cl
  41b659:	and    ecx,edx
  41b65b:	mov    DWORD PTR [ebp-0x4c],ecx
  41b65e:	mov    ecx,DWORD PTR [ebp+0x8]
  41b661:	mov    edx,DWORD PTR [ebp-0x48]
  41b664:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41b66b:	mov    DWORD PTR [ebp-0x48],ecx
  41b66e:	mov    ecx,DWORD PTR [ebp+0x8]
  41b671:	mov    edx,0xfa5e1528
  41b676:	sub    edx,ecx
  41b678:	add    edx,DWORD PTR [ebp-0x44]
  41b67b:	mov    DWORD PTR [ebp-0x44],edx
  41b67e:	mov    ecx,DWORD PTR [ebp+0x8]
  41b681:	xor    ecx,eax
  41b683:	add    ecx,esi
  41b685:	jne    0x414b6f
  41b68b:	mov    ecx,DWORD PTR [ebp-0x8]
  41b68e:	xor    ecx,eax
  41b690:	mov    eax,DWORD PTR [ebp+0x10]
  41b693:	add    ecx,esi
  41b695:	mov    DWORD PTR [eax],ecx
  41b697:	pop    edi
  41b698:	pop    esi
  41b699:	pop    ebx
  41b69a:	leave  
  41b69b:	ret    0xc
  41b69e:	push   ebp
  41b69f:	mov    ebp,esp
  41b6a1:	sub    esp,0x78
  41b6a4:	not    DWORD PTR ds:0x4291f7
  41b6aa:	push   esi
  41b6ab:	sub    eax,ecx
  41b6ad:	push   edi
  41b6ae:	sub    eax,esi
  41b6b0:	mov    eax,ds:0x42830b
  41b6b5:	mov    DWORD PTR [ebp-0x24],eax
  41b6b8:	mov    eax,ds:0x42842b
  41b6bd:	inc    ecx
  41b6be:	mov    DWORD PTR [ebp-0x30],eax
  41b6c1:	or     DWORD PTR ds:0x42919f,edi
  41b6c7:	mov    DWORD PTR [ebp-0x2c],0xf89c85a1
  41b6ce:	movzx  edi,BYTE PTR ds:0x42918f
  41b6d5:	adc    DWORD PTR ds:0x42914b,edi
  41b6db:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  41b6e2:	adc    DWORD PTR ds:0x42918f,edx
  41b6e8:	mov    eax,DWORD PTR [ebp-0x10]
  41b6eb:	add    DWORD PTR ds:0x4291f3,ecx
  41b6f1:	mov    ecx,DWORD PTR [ebp-0x10]
  41b6f4:	adc    DWORD PTR ds:0x42915f,0x287e
  41b6fe:	sub    eax,ecx
  41b700:	adc    esi,esi
  41b702:	mov    DWORD PTR [ebp-0x10],eax
  41b705:	xor    DWORD PTR [ebp-0x10],0xf89cb5a1
  41b70c:	xor    DWORD PTR ds:0x4291ab,0x51ed
  41b716:	mov    eax,DWORD PTR [ebp-0x18]
  41b719:	and    DWORD PTR ds:0x4291a3,0x0
  41b723:	mov    edi,DWORD PTR ds:0x4291a3
  41b729:	inc    edi
  41b72a:	mov    DWORD PTR ds:0x4291a3,edi
  41b730:	cmp    DWORD PTR ds:0x4291a3,0x1b
  41b737:	jle    0x41b760
  41b73d:	jmp    0x41b753
  41b742:	push   0x4280d6
  41b747:	push   DWORD PTR [ebp-0x18]
  41b74a:	push   DWORD PTR [ebp-0x14]
  41b74d:	call   DWORD PTR ds:0x42a64f
  41b753:	cmp    DWORD PTR ds:0x4291a3,0x12
  41b75a:	jb     0x41b723
  41b760:	mov    ecx,DWORD PTR [ebp-0x18]
  41b763:	sub    eax,ecx
  41b765:	mov    DWORD PTR [ebp-0x18],eax
  41b768:	or     DWORD PTR [ebp-0x18],0xf89f05a1
  41b76f:	mov    eax,DWORD PTR [ebp-0xc]
  41b772:	and    DWORD PTR ds:0x42919f,0x1b88
  41b77c:	mov    ecx,DWORD PTR [ebp-0xc]
  41b77f:	sub    eax,ecx
  41b781:	and    DWORD PTR ds:0x429173,0x0
  41b78b:	mov    ecx,DWORD PTR ds:0x429173
  41b791:	inc    ecx
  41b792:	mov    DWORD PTR ds:0x429173,ecx
  41b798:	cmp    DWORD PTR ds:0x429173,0x1b
  41b79f:	jg     0x41b7c2
  41b7a5:	jmp    0x41b7b5
  41b7aa:	push   0x3a78
  41b7af:	call   DWORD PTR ds:0x42a653
  41b7b5:	cmp    DWORD PTR ds:0x429173,0x15
  41b7bc:	jb     0x41b78b
  41b7c2:	mov    DWORD PTR [ebp-0xc],eax
  41b7c5:	xor    DWORD PTR ds:0x4291a7,0x3902
  41b7cf:	or     DWORD PTR [ebp-0xc],0xf89c85e1
  41b7d6:	mov    eax,DWORD PTR [ebp-0x1c]
  41b7d9:	and    DWORD PTR ds:0x4291f7,0x5581
  41b7e3:	mov    ecx,DWORD PTR [ebp-0x1c]
  41b7e6:	and    DWORD PTR ds:0x42914b,0x0
  41b7f0:	mov    esi,DWORD PTR ds:0x42914b
  41b7f6:	inc    esi
  41b7f7:	mov    DWORD PTR ds:0x42914b,esi
  41b7fd:	cmp    DWORD PTR ds:0x42914b,0xc
  41b804:	jg     0x41b848
  41b80a:	jmp    0x41b821
  41b80f:	push   0x428010
  41b814:	push   0x0
  41b816:	push   0x6059
  41b81b:	call   DWORD PTR ds:0x42a657
  41b821:	cmp    DWORD PTR ds:0x42914b,0xb
  41b828:	jne    0x41b83b
  41b82e:	mov    esi,DWORD PTR ds:0x42914b
  41b834:	inc    esi
  41b835:	mov    DWORD PTR ds:0x42914b,esi
  41b83b:	cmp    DWORD PTR ds:0x42914b,0x13
  41b842:	jb     0x41b7f0
  41b848:	sub    eax,ecx
  41b84a:	mov    DWORD PTR ds:0x4291e7,0x17
  41b854:	cmp    DWORD PTR ds:0x4291e7,0x0
  41b85b:	je     0x41b88b
  41b861:	cmp    DWORD PTR ds:0x4291e7,0x22
  41b868:	jbe    0x41b88b
  41b86e:	jmp    0x41b879
  41b873:	call   DWORD PTR ds:0x42a65b
  41b879:	mov    edi,DWORD PTR ds:0x4291e7
  41b87f:	dec    edi
  41b880:	mov    DWORD PTR ds:0x4291e7,edi
  41b886:	jmp    0x41b854
  41b88b:	mov    DWORD PTR [ebp-0x1c],eax
  41b88e:	or     DWORD PTR [ebp-0x1c],0xf89c8581
  41b895:	add    eax,eax
  41b897:	mov    eax,DWORD PTR [ebp-0x20]
  41b89a:	mov    ecx,DWORD PTR [ebp-0x20]
  41b89d:	sub    eax,ecx
  41b89f:	and    DWORD PTR ds:0x4291b3,0x0
  41b8a9:	jmp    0x41b8bb
  41b8ae:	mov    esi,DWORD PTR ds:0x4291b3
  41b8b4:	inc    esi
  41b8b5:	mov    DWORD PTR ds:0x4291b3,esi
  41b8bb:	cmp    DWORD PTR ds:0x4291b3,0x1e
  41b8c2:	jae    0x41b8ef
  41b8c8:	cmp    DWORD PTR ds:0x4291b3,0x28
  41b8cf:	jle    0x41b8ef
  41b8d5:	jmp    0x41b8ea
  41b8da:	push   0x4291c7
  41b8df:	push   0x428047
  41b8e4:	call   DWORD PTR ds:0x42a65f
  41b8ea:	jmp    0x41b8ae
  41b8ef:	mov    DWORD PTR [ebp-0x20],eax
  41b8f2:	mov    eax,DWORD PTR [ebp-0x2c]
  41b8f5:	mov    ecx,DWORD PTR [ebp-0x20]
  41b8f8:	neg    edi
  41b8fa:	mov    esi,0x75108ac
  41b8ff:	xor    eax,esi
  41b901:	mov    edi,0x3272f3
  41b906:	add    eax,edi
  41b908:	or     eax,ecx
  41b90a:	mov    DWORD PTR [ebp-0x20],eax
  41b90d:	mov    eax,DWORD PTR [ebp-0x4]
  41b910:	mov    ecx,DWORD PTR [ebp-0x4]
  41b913:	sub    eax,ecx
  41b915:	mov    DWORD PTR [ebp-0x4],eax
  41b918:	or     DWORD PTR [ebp-0x4],0xf89c85be
  41b91f:	mov    eax,DWORD PTR [ebp-0xc]
  41b922:	xor    eax,esi
  41b924:	add    eax,edi
  41b926:	push   eax
  41b927:	mov    eax,DWORD PTR [ebp-0x10]
  41b92a:	xor    eax,esi
  41b92c:	add    eax,edi
  41b92e:	push   eax
  41b92f:	mov    eax,DWORD PTR [ebp-0x4]
  41b932:	xor    eax,esi
  41b934:	add    eax,edi
  41b936:	push   eax
  41b937:	lea    eax,[ebp-0x78]
  41b93a:	push   eax
  41b93b:	push   DWORD PTR [ebp-0x2c]
  41b93e:	push   DWORD PTR [ebp-0x28]
  41b941:	call   0x411b80
  41b946:	test   eax,eax
  41b948:	je     0x41b976
  41b94e:	lea    eax,[ebp-0x78]
  41b951:	push   eax
  41b952:	mov    eax,DWORD PTR [ebp-0x28]
  41b955:	xor    eax,esi
  41b957:	add    eax,edi
  41b959:	push   eax
  41b95a:	mov    eax,DWORD PTR [ebp-0x24]
  41b95d:	add    eax,0xaa
  41b962:	push   eax
  41b963:	mov    eax,DWORD PTR [ebp-0x24]
  41b966:	mov    eax,DWORD PTR [eax+0x198]
  41b96c:	push   DWORD PTR [eax]
  41b96e:	call   0x4085e5
  41b973:	mov    DWORD PTR [ebp-0x14],eax
  41b976:	mov    ecx,DWORD PTR ds:0x428403
  41b97c:	lea    eax,[ebp+0x4]
  41b97f:	mov    DWORD PTR [ecx*4+0x4283fb],eax
  41b986:	inc    DWORD PTR ds:0x428403
  41b98c:	mov    eax,DWORD PTR [ebp-0x14]
  41b98f:	test   eax,eax
  41b991:	je     0x41b9f9
  41b997:	lea    eax,[ebp-0x8]
  41b99a:	mov    DWORD PTR [ebp-0x34],eax
  41b99d:	mov    eax,DWORD PTR [ebp-0x30]
  41b9a0:	mov    DWORD PTR [ebp-0x8],eax
  41b9a3:	mov    eax,DWORD PTR [ebp-0x8]
  41b9a6:	mov    ecx,DWORD PTR [ebp-0x14]
  41b9a9:	sub    eax,ecx
  41b9ab:	mov    DWORD PTR [ebp-0x8],eax
  41b9ae:	mov    ecx,DWORD PTR [ebp-0x4]
  41b9b1:	xor    ecx,esi
  41b9b3:	mov    eax,0xffcd8d0d
  41b9b8:	sub    eax,ecx
  41b9ba:	add    DWORD PTR [ebp-0x8],eax
  41b9bd:	mov    eax,DWORD PTR [ebp-0x8]
  41b9c0:	mov    ecx,DWORD PTR [ebp-0x14]
  41b9c3:	mov    DWORD PTR [ecx+0x1],eax
  41b9c6:	mov    eax,DWORD PTR [ebp-0x14]
  41b9c9:	push   DWORD PTR [ebp-0x24]
  41b9cc:	mov    BYTE PTR [eax],0xe9
  41b9cf:	mov    eax,ds:0x428187
  41b9d4:	push   DWORD PTR [eax]
  41b9d6:	push   DWORD PTR ds:0x4283eb
  41b9dc:	push   DWORD PTR ds:0x42818f
  41b9e2:	push   DWORD PTR ds:0x4283cb
  41b9e8:	push   DWORD PTR ds:0x428f4f
  41b9ee:	push   DWORD PTR [ebp-0x28]
  41b9f1:	push   DWORD PTR [ebp-0x2c]
  41b9f4:	mov    eax,DWORD PTR [ebp-0x14]
  41b9f7:	call   eax
  41b9f9:	pop    edi
  41b9fa:	pop    esi
  41b9fb:	leave  
  41b9fc:	ret    
  41b9fd:	push   ebp
  41b9fe:	mov    ebp,esp
  41ba00:	sub    esp,0x1c
  41ba03:	adc    DWORD PTR ds:0x4291bf,0x12a2
  41ba0d:	mov    DWORD PTR [ebp-0x10],0xf89f85a1
  41ba14:	sub    DWORD PTR ds:0x4291b3,0x1e28
  41ba1e:	lea    eax,[ebp+0x14]
  41ba21:	movzx  edx,BYTE PTR ds:0x4291c7
  41ba28:	sbb    edx,DWORD PTR ds:0x4291ef
  41ba2e:	mov    DWORD PTR ds:0x4291c7,edx
  41ba34:	mov    DWORD PTR [ebp-0x4],eax
  41ba37:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  41ba3e:	and    DWORD PTR ds:0x4291a3,0x0
  41ba48:	jmp    0x41ba5a
  41ba4d:	mov    edx,DWORD PTR ds:0x4291a3
  41ba53:	inc    edx
  41ba54:	mov    DWORD PTR ds:0x4291a3,edx
  41ba5a:	cmp    DWORD PTR ds:0x4291a3,0x1c
  41ba61:	jae    0x41ba87
  41ba67:	cmp    DWORD PTR ds:0x4291a3,0x2a
  41ba6e:	jb     0x41ba87
  41ba74:	jmp    0x41ba82
  41ba79:	push   DWORD PTR [ebp-0x10]
  41ba7c:	call   DWORD PTR ds:0x42a663
  41ba82:	jmp    0x41ba4d
  41ba87:	lea    eax,[ebp-0xc]
  41ba8a:	add    DWORD PTR ds:0x4291d7,ecx
  41ba90:	mov    DWORD PTR [ebp-0x14],eax
  41ba93:	xor    ecx,eax
  41ba95:	mov    eax,DWORD PTR [ebp-0xc]
  41ba98:	mov    ecx,DWORD PTR ds:0x42921f
  41ba9e:	mov    edx,DWORD PTR ds:0x42984b
  41baa4:	sub    edx,ecx
  41baa6:	xor    ecx,DWORD PTR [ecx+edx*1]
  41baa9:	mov    edx,DWORD PTR [ebp-0x14]
  41baac:	adc    ecx,0x3c0d
  41bab2:	mov    ecx,0x75108ac
  41bab7:	adc    DWORD PTR ds:0x4291eb,0xbc
  41bac1:	xor    eax,ecx
  41bac3:	or     DWORD PTR ds:0x4291eb,0x4291d3
  41bacd:	add    eax,0x3272f3
  41bad2:	xor    DWORD PTR ds:0x4291db,0x429193
  41badc:	mov    DWORD PTR [edx],eax
  41bade:	and    DWORD PTR ds:0x429157,0x0
  41bae8:	xor    edx,edx
  41baea:	add    edx,DWORD PTR ds:0x429157
  41baf0:	inc    edx
  41baf1:	mov    DWORD PTR ds:0x429157,edx
  41baf7:	cmp    DWORD PTR ds:0x429157,0x2c
  41bafe:	jge    0x41bb29
  41bb04:	jmp    0x41bb1c
  41bb09:	push   0x4291c7
  41bb0e:	push   0x4291db
  41bb13:	push   DWORD PTR [ebp-0x20]
  41bb16:	call   DWORD PTR ds:0x42a66b
  41bb1c:	cmp    DWORD PTR ds:0x429157,0x1d
  41bb23:	jb     0x41bae8
  41bb29:	mov    eax,ds:0x428183
  41bb2e:	mov    edx,DWORD PTR [ebp-0x4]
  41bb31:	mov    eax,DWORD PTR [eax]
  41bb33:	add    eax,DWORD PTR [edx]
  41bb35:	mov    DWORD PTR ds:0x4291e7,0x17
  41bb3f:	cmp    DWORD PTR ds:0x4291e7,0x0
  41bb46:	je     0x41bb7d
  41bb4c:	cmp    DWORD PTR ds:0x4291e7,0x22
  41bb53:	ja     0x41bb7d
  41bb59:	jmp    0x41bb69
  41bb5e:	push   0x40e7
  41bb63:	call   DWORD PTR ds:0x42a633
  41bb69:	xor    edx,edx
  41bb6b:	or     edx,DWORD PTR ds:0x4291e7
  41bb71:	dec    edx
  41bb72:	mov    DWORD PTR ds:0x4291e7,edx
  41bb78:	jmp    0x41bb3f
  41bb7d:	push   esi
  41bb7e:	sub    edx,0x5425
  41bb84:	mov    DWORD PTR [ebp-0x8],eax
  41bb87:	mov    edx,DWORD PTR [ebp+0x8]
  41bb8a:	mov    eax,ds:0x42830b
  41bb8f:	mov    esi,DWORD PTR ds:0x429bcf
  41bb95:	mov    esi,DWORD PTR [esi]
  41bb97:	adc    DWORD PTR ds:0x42919f,esi
  41bb9d:	mov    eax,DWORD PTR [eax+0x198]
  41bba3:	xor    edx,ecx
  41bba5:	and    DWORD PTR ds:0x4291cf,ecx
  41bbab:	mov    esi,0x3272f3
  41bbb0:	add    edx,esi
  41bbb2:	mov    DWORD PTR ds:0x4291c7,0x7ba3
  41bbbc:	cmp    DWORD PTR [eax],edx
  41bbbe:	mov    DWORD PTR ds:0x4291df,0x7d4d
  41bbc8:	je     0x41bbdb
  41bbce:	not    DWORD PTR ds:0x42917b
  41bbd4:	mov    eax,DWORD PTR [eax]
  41bbd6:	jmp    0x4207f9
  41bbdb:	mov    eax,DWORD PTR [ebp+0x18]
  41bbde:	xor    DWORD PTR ds:0x429183,0x42919f
  41bbe8:	xor    eax,ecx
  41bbea:	push   ebx
  41bbeb:	add    eax,esi
  41bbed:	xor    DWORD PTR ds:0x429197,edi
  41bbf3:	xor    edx,edx
  41bbf5:	sub    DWORD PTR ds:0x4291e3,edi
  41bbfb:	mov    ebx,0xfabdbed6
  41bc00:	add    eax,ebx
  41bc02:	mov    DWORD PTR ds:0x4291cb,0x2663
  41bc0c:	push   edi
  41bc0d:	adc    edx,0xffffffff
  41bc10:	and    DWORD PTR ds:0x4291a3,0x0
  41bc1a:	jmp    0x41bc2e
  41bc1f:	xor    edi,edi
  41bc21:	xor    edi,DWORD PTR ds:0x4291a3
  41bc27:	inc    edi
  41bc28:	mov    DWORD PTR ds:0x4291a3,edi
  41bc2e:	cmp    DWORD PTR ds:0x4291a3,0x1f
  41bc35:	jae    0x41bc68
  41bc3b:	cmp    DWORD PTR ds:0x4291a3,0x22
  41bc42:	jl     0x41bc68
  41bc48:	jmp    0x41bc63
  41bc4d:	push   DWORD PTR [ebp-0x24]
  41bc50:	push   0x42810e
  41bc55:	push   0x42812a
  41bc5a:	push   DWORD PTR [ebp-0x1c]
  41bc5d:	call   DWORD PTR ds:0x42a63b
  41bc63:	jmp    0x41bc1f
  41bc68:	mov    edi,0x8a29a13f
  41bc6d:	xor    eax,edi
  41bc6f:	sub    DWORD PTR ds:0x429197,0x48a0
  41bc79:	xor    edx,0x0
  41bc7c:	mov    DWORD PTR ds:0x42919f,0x3301
  41bc86:	cmp    eax,0x70941fe9
  41bc8b:	mov    DWORD PTR ds:0x429167,0x2e01
  41bc95:	jne    0x41bcc2
  41bc9b:	mov    DWORD PTR ds:0x4291a3,0x73ae
  41bca5:	cmp    edx,0xffffffff
  41bca8:	jne    0x41bcc2
  41bcae:	push   0xf89c85a2
  41bcb3:	mov    DWORD PTR ds:0x4291af,0x3feb
  41bcbd:	jmp    0x4207e6
  41bcc2:	mov    eax,DWORD PTR [ebp+0x18]
  41bcc5:	xor    eax,ecx
  41bcc7:	adc    DWORD PTR ds:0x42916b,0x4291af
  41bcd1:	add    eax,esi
  41bcd3:	sub    DWORD PTR ds:0x429163,0x429173
  41bcdd:	xor    edx,edx
  41bcdf:	add    eax,ebx
  41bce1:	mov    DWORD PTR ds:0x429163,0x4b51
  41bceb:	adc    edx,0xffffffff
  41bcee:	sub    DWORD PTR ds:0x4291af,0x6866
  41bcf8:	xor    eax,edi
  41bcfa:	or     DWORD PTR ds:0x42914f,0x4291db
  41bd04:	xor    edx,0x0
  41bd07:	mov    DWORD PTR ds:0x4291eb,0x1dc4
  41bd11:	cmp    eax,0x70941fe7
  41bd16:	mov    DWORD PTR ds:0x429153,0x3724
  41bd20:	jne    0x4207d3
  41bd26:	cmp    edx,0xffffffff
  41bd29:	mov    DWORD PTR ds:0x4291ef,0x5140
  41bd33:	jne    0x4207d3
  41bd39:	add    DWORD PTR ds:0x429193,0x7d28
  41bd43:	mov    eax,DWORD PTR [ebp+0x10]
  41bd46:	mov    DWORD PTR ds:0x42916b,0x1b
  41bd50:	cmp    DWORD PTR ds:0x42916b,0x0
  41bd57:	je     0x41bd93
  41bd5d:	cmp    DWORD PTR ds:0x42916b,0x1d
  41bd64:	jl     0x41bd93
  41bd6a:	jmp    0x41bd7f
  41bd6f:	push   0x2cfc
  41bd74:	push   0x400000
  41bd79:	call   DWORD PTR ds:0x42a63f
  41bd7f:	xor    edx,edx
  41bd81:	xor    edx,DWORD PTR ds:0x42916b
  41bd87:	dec    edx
  41bd88:	mov    DWORD PTR ds:0x42916b,edx
  41bd8e:	jmp    0x41bd50
  41bd93:	xor    eax,ecx
  41bd95:	add    eax,esi
  41bd97:	mov    DWORD PTR [ebp-0x18],eax
  41bd9a:	sub    DWORD PTR ds:0x42918f,0x3e4b
  41bda4:	mov    eax,DWORD PTR [ebp+0xc]
  41bda7:	and    DWORD PTR ds:0x429183,0x0
  41bdb1:	jmp    0x41bdc5
  41bdb6:	xor    edx,edx
  41bdb8:	add    edx,DWORD PTR ds:0x429183
  41bdbe:	inc    edx
  41bdbf:	mov    DWORD PTR ds:0x429183,edx
  41bdc5:	cmp    DWORD PTR ds:0x429183,0x19
  41bdcc:	jae    0x41bdf4
  41bdd2:	cmp    DWORD PTR ds:0x429183,0x28
  41bdd9:	jbe    0x41bdf4
  41bddf:	jmp    0x41bdef
  41bde4:	push   0x429193
  41bde9:	call   DWORD PTR ds:0x42a643
  41bdef:	jmp    0x41bdb6
  41bdf4:	mov    edx,DWORD PTR [ebp-0x8]
  41bdf7:	mov    DWORD PTR ds:0x4291ab,0x2654
  41be01:	xor    eax,ecx
  41be03:	add    eax,esi
  41be05:	adc    DWORD PTR ds:0x4291e7,0x4291db
  41be0f:	imul   eax,DWORD PTR [edx]
  41be12:	mov    edx,DWORD PTR [ebp+0x8]
  41be15:	or     DWORD PTR ds:0x42914b,0x4291d3
  41be1f:	xor    edx,ecx
  41be21:	add    edx,esi
  41be23:	mov    DWORD PTR ds:0x4291e7,0x151c
  41be2d:	cmp    edx,eax
  41be2f:	mov    eax,DWORD PTR [ebp-0x4]
  41be32:	je     0x41beca
  41be38:	mov    DWORD PTR ds:0x429163,0x16
  41be42:	cmp    DWORD PTR ds:0x429163,0x0
  41be49:	je     0x41be83
  41be4f:	cmp    DWORD PTR ds:0x429163,0x1a
  41be56:	ja     0x41be83
  41be5c:	jmp    0x41be71
  41be61:	push   0x4e27
  41be66:	push   0x4280a5
  41be6b:	call   DWORD PTR ds:0x42a647
  41be71:	mov    edx,DWORD PTR ds:0x429163
  41be77:	dec    edx
  41be78:	mov    DWORD PTR ds:0x429163,edx
  41be7e:	jmp    0x41be42
  41be83:	mov    edx,DWORD PTR [ebp-0x18]
  41be86:	or     DWORD PTR ds:0x42917f,0x4f4
  41be90:	add    DWORD PTR [eax],edx
  41be92:	and    eax,0x7343
  41be97:	mov    eax,DWORD PTR [ebp-0x4]
  41be9a:	mov    edx,DWORD PTR [ebp+0xc]
  41be9d:	xor    edx,ecx
  41be9f:	add    edx,esi
  41bea1:	imul   edx,DWORD PTR [eax]
  41bea4:	sbb    DWORD PTR ds:0x429183,0x4291b3
  41beae:	mov    DWORD PTR [eax],edx
  41beb0:	mov    eax,DWORD PTR [ebp-0x4]
  41beb3:	mov    DWORD PTR [ebp-0x1c],eax
  41beb6:	mov    eax,DWORD PTR [ebp+0x10]
  41beb9:	xor    eax,ecx
  41bebb:	mov    edx,0xffcd8d0d
  41bec0:	sub    edx,eax
  41bec2:	mov    eax,DWORD PTR [ebp-0x1c]
  41bec5:	jmp    0x41bee4
  41beca:	mov    edx,DWORD PTR [ebp+0x14]
  41becd:	xor    DWORD PTR [eax],edx
  41becf:	mov    eax,DWORD PTR [ebp-0x4]
  41bed2:	mov    DWORD PTR [ebp-0x1c],eax
  41bed5:	mov    eax,DWORD PTR [ebp+0x10]
  41bed8:	xor    eax,ecx
  41beda:	mov    edx,0xffcd8d0d
  41bedf:	sub    edx,eax
  41bee1:	mov    eax,DWORD PTR [ebp-0x1c]
  41bee4:	add    DWORD PTR [eax],edx
  41bee6:	mov    eax,DWORD PTR [ebp-0x4]
  41bee9:	mov    edx,DWORD PTR [ebp-0x8]
  41beec:	add    edx,DWORD PTR [eax]
  41beee:	mov    DWORD PTR [ebp-0x8],edx
  41bef1:	mov    eax,DWORD PTR [ebp+0xc]
  41bef4:	mov    edx,DWORD PTR [ebp+0xc]
  41bef7:	xor    edx,ecx
  41bef9:	xor    eax,ecx
  41befb:	lea    eax,[eax+edx*1+0x64e5e6]
  41bf02:	mov    edx,DWORD PTR [ebp+0xc]
  41bf05:	xor    edx,ecx
  41bf07:	add    edx,esi
  41bf09:	imul   eax,edx
  41bf0c:	mov    edx,DWORD PTR [ebp+0xc]
  41bf0f:	xor    edx,ecx
  41bf11:	sub    edx,eax
  41bf13:	mov    eax,DWORD PTR [ebp-0x4]
  41bf16:	add    edx,esi
  41bf18:	cmp    DWORD PTR [eax],edx
  41bf1a:	mov    eax,DWORD PTR [ebp-0x4]
  41bf1d:	jg     0x41bf3a
  41bf23:	mov    DWORD PTR [ebp-0x1c],eax
  41bf26:	mov    eax,DWORD PTR [ebp+0x10]
  41bf29:	xor    eax,ecx
  41bf2b:	mov    edx,0xffcd8d0d
  41bf30:	sub    edx,eax
  41bf32:	mov    eax,DWORD PTR [ebp-0x1c]
  41bf35:	jmp    0x41bf41
  41bf3a:	mov    edx,DWORD PTR [ebp+0x10]
  41bf3d:	xor    edx,ecx
  41bf3f:	add    edx,esi
  41bf41:	add    DWORD PTR [eax],edx
  41bf43:	mov    eax,DWORD PTR [ebp-0x8]
  41bf46:	mov    edx,DWORD PTR [ebp-0x10]
  41bf49:	mov    eax,DWORD PTR [eax]
  41bf4b:	xor    edx,ecx
  41bf4d:	add    edx,0x3272f2
  41bf53:	not    edx
  41bf55:	and    eax,edx
  41bf57:	mov    DWORD PTR [ebp-0x4],eax
  41bf5a:	movsx  eax,BYTE PTR [eax+0x1]
  41bf5e:	cdq    
  41bf5f:	add    eax,ebx
  41bf61:	adc    edx,0xffffffff
  41bf64:	jmp    0x41e327
  41bf69:	pop    esi
  41bf6a:	push   0x85807d90
  41bf6f:	xchg   esi,eax
  41bf70:	dec    eax
  41bf71:	add    cl,BYTE PTR [ebx+0x3]
  41bf74:	shl    DWORD PTR [edi-0x44ac94e8],cl
  41bf7a:	stc    
  41bf7b:	add    BYTE PTR [ebx-0x7c7ca327],0x74
  41bf82:	cmp    edx,DWORD PTR [ebx]
  41bf84:	pushf  
  41bf85:	aaa    
  41bf86:	es dec ecx
  41bf88:	adc    bh,0x48
  41bf8b:	push   ebx
  41bf8c:	xor    al,BYTE PTR [ebx]
  41bf8e:	and    BYTE PTR [edi+0x6c],ch
  41bf91:	mov    cl,0x5b
  41bf93:	pop    esi
  41bf94:	data16 cmp bl,BYTE PTR ss:[esi-0x15]
  41bf99:	xor    ch,BYTE PTR [ebx]
  41bf9b:	jl     0x41bf78
  41bf9d:	sub    esi,DWORD PTR [edx+0xc]
  41bfa0:	(bad)  
  41bfa1:	xchg   ebp,eax
  41bfa2:	cmp    ah,BYTE PTR [eax]
  41bfa4:	add    ebx,DWORD PTR [edi-0x5c]
  41bfa7:	daa    
  41bfa8:	fs stc 
  41bfaa:	mov    BYTE PTR [ecx],al
  41bfac:	dec    BYTE PTR [eax-0x3fb5eacf]
  41bfb2:	int3   
  41bfb3:	loopne 0x41bf91
  41bfb5:	(bad)  
  41bfb6:	sbb    cl,al
  41bfb8:	icebp  
  41bfb9:	frstor [ecx*1-0x68feabb7]
  41bfc0:	js     0x41c01a
  41bfc2:	mov    esp,0xf88b6ae2
  41bfc7:	add    bh,BYTE PTR ss:[ebp-0x3af58dc5]
  41bfce:	dec    edx
  41bfcf:	in     al,dx
  41bfd0:	lods   eax,DWORD PTR ds:[esi]
  41bfd1:	das    
  41bfd2:	test   eax,0x96456784
  41bfd7:	mov    DWORD PTR [ebx+0x1c],ebx
  41bfda:	xchg   ecx,eax
  41bfdb:	stos   DWORD PTR es:[edi],eax
  41bfdc:	xchg   edi,eax
  41bfdd:	ds ret 
  41bfdf:	ss cdq 
  41bfe1:	lds    ebp,FWORD PTR [edi-0x7]
  41bfe4:	lock lds esp,FWORD PTR [edi]
  41bfe7:	rol    DWORD PTR [edx-0x15],0x3a
  41bfeb:	pop    ebp
  41bfec:	loope  0x41bfe8
  41bfee:	cdq    
  41bfef:	pop    edi
  41bff0:	pop    ebp
  41bff1:	mov    edi,0x914b55ea
  41bff6:	(bad)  
  41bff7:	fnstsw WORD PTR [eax-0x15]
  41bffa:	out    0x18,eax
  41bffc:	push   0xc986b681
  41c001:	pop    edi
  41c002:	test   al,0xec
  41c004:	sub    DWORD PTR [ebx+0x12],0x657393a1
  41c00b:	js     0x41bfc7
  41c00d:	cmp    al,0x3b
  41c00f:	xchg   edi,eax
  41c010:	fild   QWORD PTR [edx]
  41c012:	xor    eax,0xf107c782
  41c017:	or     al,0x3
  41c019:	add    DWORD PTR [edi+0x68],eax
  41c01c:	mov    dh,dh
  41c01e:	mov    edx,0xbe207a01
  41c023:	sar    DWORD PTR [esi],cl
  41c025:	lds    edi,FWORD PTR [eax]
  41c027:	out    0x9f,eax
  41c029:	mov    edi,0x7395ef3a
  41c02e:	push   0x1f9d6cb1
  41c033:	out    dx,al
  41c034:	(bad)  
  41c036:	idiv   BYTE PTR [eax+edi*1+0x6a]
  41c03a:	jmp    0x41bfc6
  41c03c:	pop    edi
  41c03d:	pop    ss
  41c03e:	bound  eax,QWORD PTR [edx+0x61fd6885]
  41c044:	mov    bl,0x1
  41c046:	or     BYTE PTR [ecx+0x23],0x9c
  41c04a:	xchg   DWORD PTR [edx+0x1abfbf60],ebx
  41c050:	xor    eax,0x16b32ea6
  41c055:	mov    ds:0xd8b5a0e3,eax
  41c05a:	cld    
  41c05b:	xchg   esi,eax
  41c05c:	cmp    esi,DWORD PTR [edi+0x388f14f]
  41c062:	push   esi
  41c063:	mov    edi,0xfa389a2e
  41c068:	mov    al,ds:0x72e9621e
  41c06d:	xor    DWORD PTR [eax-0x18],ebx
  41c070:	add    ebp,edi
  41c072:	outs   dx,BYTE PTR ds:[esi]
  41c073:	mov    ds:0x472befc3,al
  41c078:	push   ebx
  41c079:	in     eax,dx
  41c07a:	imul   ebx,DWORD PTR [eax],0x5681448e
  41c080:	fwait
  41c081:	mov    bl,0xd0
  41c083:	imul   ebp,edx,0xffffff93
  41c086:	mov    ecx,0x3a120db9
  41c08b:	adc    eax,0xbbe09fe2
  41c090:	add    edx,DWORD PTR [eax-0x32883bad]
  41c096:	int    0x9d
  41c098:	cmp    al,BYTE PTR [edi]
  41c09a:	jne    0x41c07d
  41c09c:	adc    al,0xfe
  41c09e:	inc    esi
  41c09f:	adc    ecx,DWORD PTR [esi+0x1f]
  41c0a2:	ss fwait
  41c0a4:	jp     0x41c0d6
  41c0a6:	fdivr  QWORD PTR [edi-0x42]
  41c0a9:	rcl    DWORD PTR [esi],0xca
  41c0ac:	fiadd  DWORD PTR [edi-0x699f0552]
  41c0b2:	arpl   si,dx
  41c0b4:	shl    DWORD PTR [edx],0xa1
  41c0b7:	xor    DWORD PTR [edx+edx*1],edi
  41c0ba:	ins    BYTE PTR es:[edi],dx
  41c0bb:	test   dl,0x18
  41c0be:	addr16 in al,dx
  41c0c0:	xor    BYTE PTR [edi+0x2e],0xd8
  41c0c4:	jne    0x41c0ad
  41c0c6:	sub    eax,0x409f726e
  41c0cb:	rcr    DWORD PTR [edi+eax*1-0x52],1
  41c0cf:	int3   
  41c0d0:	inc    eax
  41c0d1:	inc    edi
  41c0d2:	push   ds
  41c0d3:	scas   eax,DWORD PTR es:[edi]
  41c0d4:	(bad)  
  41c0d6:	cmp    eax,0x30abc533
  41c0db:	in     al,0xd3
  41c0dd:	dec    esi
  41c0de:	dec    esp
  41c0df:	pop    esp
  41c0e0:	ret    0xd63
  41c0e3:	inc    eax
  41c0e4:	sbb    ebx,DWORD PTR [esi]
  41c0e6:	and    bh,dh
  41c0e8:	pop    edx
  41c0e9:	jg     0x41c106
  41c0eb:	neg    DWORD PTR [ecx-0x633e902a]
  41c0f1:	inc    ebx
  41c0f2:	pop    esi
  41c0f3:	push   esp
  41c0f4:	jge    0x41c169
  41c0f6:	push   ebx
  41c0f7:	(bad)  
  41c0f8:	fnstsw WORD PTR [edx+0x1ed734b2]
  41c0fe:	rcl    DWORD PTR [ecx-0x34],0xed
  41c102:	ins    BYTE PTR es:[edi],dx
  41c103:	cmp    ch,BYTE PTR [eax]
  41c105:	push   ebp
  41c106:	loop   0x41c158
  41c108:	xchg   edx,eax
  41c109:	push   esp
  41c10a:	mov    ebp,0x1e266cb4
  41c10f:	femms  
  41c111:	mov    cl,0xd8
  41c113:	es pop es
  41c115:	popa   
  41c116:	sub    eax,0x220028a4
  41c11b:	mul    ah
  41c11d:	xchg   ebx,eax
  41c11e:	out    0x2e,al
  41c120:	dec    BYTE PTR [eax]
  41c122:	xchg   BYTE PTR [edx-0x29436cd3],dh
  41c128:	xchg   esp,eax
  41c129:	pop    ebx
  41c12a:	sub    BYTE PTR [ecx-0x40],0xea
  41c12e:	out    dx,al
  41c12f:	call   0x7fee:0x524ce599
  41c136:	mov    ss,WORD PTR [eax-0x3d]
  41c139:	call   FWORD PTR [edx+0x6a2dfa6a]
  41c13f:	lods   eax,DWORD PTR ds:[esi]
  41c140:	(bad)  
  41c141:	xor    eax,0x6ea92964
  41c146:	mov    dl,0x88
  41c148:	mov    esp,0xa6bfec21
  41c14d:	and    DWORD PTR [eax-0x1d6623e4],eax
  41c153:	fidivr WORD PTR [eax-0x5c93257f]
  41c159:	add    eax,0x5124891
  41c15e:	test   BYTE PTR [edi+0x1c],dh
  41c161:	add    ebx,esi
  41c163:	pop    ebp
  41c164:	push   ebp
  41c165:	dec    ebp
  41c166:	jne    0x41c1c4
  41c168:	jne    0x41c10b
  41c16a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c16b:	out    dx,al
  41c16c:	enter  0xa31f,0x86
  41c170:	cli    
  41c171:	sub    esp,DWORD PTR [eax]
  41c173:	xchg   DWORD PTR [ebx],eax
  41c175:	dec    esp
  41c176:	je     0x41c126
  41c178:	out    0x7e,eax
  41c17a:	push   es
  41c17b:	inc    ch
  41c17d:	jl     0x41c1e2
  41c17f:	push   ds
  41c180:	addr16 ret 0xd262
  41c184:	push   edx
  41c185:	fild   QWORD PTR fs:[ecx+ebx*4+0x1c]
  41c18a:	pop    ecx
  41c18b:	push   ebx
  41c18c:	pushf  
  41c18d:	and    DWORD PTR [ecx+0xd],ebx
  41c190:	(bad)  
  41c191:	aad    0xb3
  41c193:	(bad)
  41c196:	mov    DWORD PTR ds:0x68c854af,edi
  41c19c:	mov    ds:0xdb1507b5,eax
  41c1a1:	dec    ecx
  41c1a2:	and    al,0xd8
  41c1a4:	inc    eax
  41c1a5:	inc    esi
  41c1a6:	ins    BYTE PTR es:[edi],dx
  41c1a7:	mov    bh,0x1b
  41c1a9:	dec    di
  41c1ab:	and    ah,bh
  41c1ad:	jle    0x41c1e4
  41c1af:	sbb    edx,DWORD PTR [edi]
  41c1b1:	fnstenv [edx+ebp*8-0x20645af6]
  41c1b8:	fs ins DWORD PTR es:[edi],dx
  41c1ba:	mov    ds:0x33f03a6e,eax
  41c1bf:	ins    DWORD PTR es:[edi],dx
  41c1c0:	dec    esi
  41c1c1:	mov    bh,BYTE PTR [eax]
  41c1c3:	adc    al,dh
  41c1c5:	mov    BYTE PTR [eax+eax*4-0x36],bh
  41c1c9:	mov    esi,ebp
  41c1cb:	out    dx,eax
  41c1cc:	mov    DWORD PTR [ebx],eax
  41c1ce:	add    cl,BYTE PTR [eax+0xa]
  41c1d1:	test   DWORD PTR [eax],ebp
  41c1d3:	push   ecx
  41c1d4:	xlat   BYTE PTR ds:[ebx]
  41c1d5:	cmp    edi,DWORD PTR [eax+edx*2+0x30]
  41c1d9:	push   DWORD PTR [edx+0x45]
  41c1dc:	adc    BYTE PTR [ebp+0x2183d855],dl
  41c1e2:	jno    0x41c259
  41c1e4:	and    ebp,edi
  41c1e6:	mov    dl,0xa7
  41c1e8:	fldcw  WORD PTR [ebx+0x77]
  41c1eb:	push   ebp
  41c1ec:	repz sbb DWORD PTR fs:[ebx+ebp*2+0x59573226],ebp
  41c1f5:	mov    cl,0x39
  41c1f7:	jl     0x41c185
  41c1f9:	add    eax,0x6090f82d
  41c1fe:	and    eax,ebx
  41c200:	cmp    eax,0x3ec8fc89
  41c205:	test   DWORD PTR [edx+ebp*4+0x2a],0xb7679e62
  41c20d:	hlt    
  41c20e:	mov    ch,0x62
  41c210:	cmp    eax,0xacd807bb
  41c215:	mov    ebp,0x3d086545
  41c21a:	and    DWORD PTR gs:[ebx],ecx
  41c21d:	out    0x1d,eax
  41c21f:	ins    BYTE PTR es:[edi],dx
  41c220:	repz aas 
  41c222:	jns    0x41c22d
  41c224:	and    ch,BYTE PTR ds:0xe075f835
  41c22a:	ins    BYTE PTR es:[edi],dx
  41c22b:	dec    edx
  41c22c:	jmp    0x41c1e1
  41c22e:	out    0xb8,al
  41c230:	outs   dx,DWORD PTR ds:[esi]
  41c231:	mov    ch,0xf2
  41c233:	cmp    ebp,DWORD PTR [eax+0x30701994]
  41c239:	retf   
  41c23a:	loop   0x41c1d6
  41c23c:	sub    DWORD PTR [ecx+0x5a],ebx
  41c23f:	or     esi,eax
  41c241:	inc    esi
  41c242:	in     eax,dx
  41c243:	into   
  41c244:	xchg   DWORD PTR [ecx+0x5f06e345],ebp
  41c24a:	fwait
  41c24b:	pusha  
  41c24c:	push   es
  41c24d:	push   ecx
  41c24e:	mov    esp,0x33f7dbbf
  41c253:	cmp    edi,DWORD PTR [ebx+0xc]
  41c256:	daa    
  41c257:	xchg   BYTE PTR [edi+0x236e9e23],bh
  41c25d:	inc    ebx
  41c25e:	test   ebx,edx
  41c260:	and    BYTE PTR [ebx-0x60],cl
  41c263:	in     eax,dx
  41c264:	and    DWORD PTR [edi],ebx
  41c266:	int    0x9c
  41c268:	outs   dx,DWORD PTR ds:[esi]
  41c269:	sbb    al,0xfa
  41c26b:	std    
  41c26c:	jge    0x41c264
  41c26e:	stc    
  41c26f:	test   al,0xf4
  41c271:	dec    edi
  41c272:	hlt    
  41c273:	cwde   
  41c274:	adc    DWORD PTR [esi+esi*1+0x61d838b4],edi
  41c27b:	cdq    
  41c27c:	push   ebp
  41c27d:	cmc    
  41c27e:	clc    
  41c27f:	dec    eax
  41c280:	sbb    cl,BYTE PTR [ebx+0x22]
  41c283:	cmp    DWORD PTR [edi+edi*8+0x3b2c56de],edi
  41c28a:	icebp  
  41c28b:	mov    ds:0xcf43e619,eax
  41c290:	cmp    eax,0xf07242b4
  41c295:	push   edi
  41c296:	les    ebp,FWORD PTR [ecx]
  41c298:	jmp    0x56754cf5
  41c29d:	loop   0x41c31d
  41c29f:	ret    
  41c2a0:	add    BYTE PTR [eax],bl
  41c2a2:	or     ebx,DWORD PTR [ebp+0x75]
  41c2a5:	dec    eax
  41c2a6:	push   esp
  41c2a7:	aam    0x10
  41c2a9:	repz xlat BYTE PTR ds:[ebx]
  41c2ab:	jecxz  0x41c283
  41c2ad:	cdq    
  41c2ae:	rcr    edi,cl
  41c2b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2b2:	adc    edx,DWORD PTR [edi+0x37]
  41c2b5:	xor    al,0x50
  41c2b7:	shl    ah,0x70
  41c2ba:	cs add eax,0xf09dff0c
  41c2c0:	jg     0x41c268
  41c2c2:	iret   
  41c2c3:	dec    esp
  41c2c4:	mov    es,WORD PTR [ebp+eiz*2-0x39d8a08d]
  41c2cb:	pop    ss
  41c2cc:	or     edx,eax
  41c2ce:	mov    cl,0xa3
  41c2d0:	sti    
  41c2d1:	mov    esi,0x3574643e
  41c2d6:	jle    0x41c2dd
  41c2d8:	std    
  41c2d9:	mov    ecx,0xef904fc8
  41c2de:	mov    cs,edx
  41c2e0:	js     0x41c266
  41c2e2:	paddusb mm3,QWORD PTR [esi]
  41c2e5:	push   ecx
  41c2e6:	lds    ecx,FWORD PTR [edx]
  41c2e8:	inc    ebp
  41c2e9:	cld    
  41c2ea:	retf   
  41c2eb:	sti    
  41c2ec:	push   es
  41c2ed:	adc    BYTE PTR [eax-0x59],ah
  41c2f0:	xor    BYTE PTR [ebx],al
  41c2f2:	ret    
  41c2f3:	push   ebx
  41c2f4:	pop    es
  41c2f5:	mov    esp,0x95f6a6f6
  41c2fa:	xchg   ecx,eax
  41c2fb:	pop    eax
  41c2fc:	out    dx,al
  41c2fd:	sti    
  41c2fe:	jecxz  0x41c36d
  41c300:	mov    cl,0x6c
  41c302:	sbb    ecx,DWORD PTR [eax]
  41c304:	jle    0x41c385
  41c306:	sub    ebp,DWORD PTR [ecx+0x636932ec]
  41c30c:	stos   DWORD PTR es:[edi],eax
  41c30d:	xor    al,0x15
  41c30f:	in     eax,dx
  41c310:	stc    
  41c311:	mov    WORD PTR [ebx-0x3b03982c],?
  41c317:	jle    0x41c2f5
  41c319:	and    ch,BYTE PTR [eax]
  41c31b:	repnz xor eax,0x99d4b9f1
  41c321:	xchg   ebx,eax
  41c322:	push   eax
  41c323:	xlat   BYTE PTR ds:[ebx]
  41c324:	aam    0xd2
  41c326:	xchg   ebp,eax
  41c327:	dec    esi
  41c328:	dec    esp
  41c329:	inc    esi
  41c32a:	dec    esp
  41c32b:	jp     0x41c36f
  41c32d:	pop    eax
  41c32e:	repz cli 
  41c330:	jne    0x41c30e
  41c332:	jl     0x41c302
  41c334:	dec    BYTE PTR ds:0x6b18fcf8
  41c33a:	repz loopne 0x41c30f
  41c33d:	or     al,0x52
  41c33f:	mov    esp,0xced4c499
  41c344:	mov    edx,0xc44c1344
  41c349:	inc    edx
  41c34a:	ja     0x41c2e7
  41c34c:	mov    cl,0x42
  41c34e:	sub    edx,edi
  41c350:	jmp    0x41c3af
  41c352:	call   0x6573bed6
  41c357:	push   eax
  41c358:	in     al,dx
  41c359:	punpcklwd mm1,mm7
  41c35c:	call   DWORD PTR [ebp+0x45]
  41c35f:	in     eax,dx
  41c360:	and    eax,DWORD PTR [esi-0x3426d1aa]
  41c366:	or     BYTE PTR [esi],cl
  41c368:	daa    
  41c369:	push   ds
  41c36a:	iret   
  41c36b:	pusha  
  41c36c:	repz neg DWORD PTR [ebp+esi*8+0x1251da2c]
  41c374:	sar    esi,1
  41c376:	out    dx,eax
  41c377:	pop    ebp
  41c378:	xchg   DWORD PTR [ecx+0x0],ebx
  41c37b:	ds sahf 
  41c37d:	cwde   
  41c37e:	push   esi
  41c37f:	aaa    
  41c380:	and    BYTE PTR [ebx],0xd7
  41c383:	push   ebp
  41c384:	std    
  41c385:	mov    dh,0x7d
  41c387:	dec    ecx
  41c388:	add    edi,DWORD PTR [ecx+eax*4+0x67]
  41c38c:	lahf   
  41c38d:	(bad)  
  41c38f:	and    edx,esi
  41c391:	scas   al,BYTE PTR es:[edi]
  41c392:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c393:	stos   BYTE PTR es:[edi],al
  41c394:	mov    al,0x1d
  41c396:	pop    eax
  41c397:	sub    BYTE PTR [eax+ebx*8],bl
  41c39a:	add    dl,ch
  41c39c:	imul   DWORD PTR [esi+0x76]
  41c39f:	data16 mov al,ds:0x8a89d6b9
  41c3a5:	inc    edi
  41c3a6:	add    BYTE PTR [ebp+0x0],ah
  41c3a9:	pop    ebp
  41c3aa:	scas   al,BYTE PTR es:[edi]
  41c3ab:	test   bh,0xdc
  41c3ae:	repnz mov al,ds:0xb2c7ca10
  41c3b4:	(bad)  
  41c3b5:	and    eax,0x1f7d501b
  41c3ba:	js     0x41c3e3
  41c3bc:	outs   dx,BYTE PTR ds:[esi]
  41c3bd:	jb     0x41c419
  41c3bf:	sub    eax,0xe0f98afa
  41c3c4:	mov    BYTE PTR [edx-0x4e637a1d],dh
  41c3ca:	add    DWORD PTR [edi],ebp
  41c3cc:	gs dec edx
  41c3ce:	adc    al,0xc3
  41c3d0:	int3   
  41c3d1:	cmp    al,0x7
  41c3d3:	into   
  41c3d4:	lods   eax,DWORD PTR ds:[esi]
  41c3d5:	pop    ds
  41c3d6:	push   0xe3944846
  41c3db:	add    edi,DWORD PTR [esi-0x27e55551]
  41c3e1:	int3   
  41c3e2:	push   ebp
  41c3e3:	fstp   QWORD PTR [edx+0x8]
  41c3e6:	es dec ebp
  41c3e8:	xor    dl,BYTE PTR [edx+0x11]
  41c3eb:	les    esi,FWORD PTR [edi+0x28052eb]
  41c3f1:	pop    edx
  41c3f2:	repnz push ecx
  41c3f4:	xor    esp,DWORD PTR [ecx-0xd264ecb]
  41c3fa:	loop   0x41c415
  41c3fc:	xchg   dl,ch
  41c3fe:	nop
  41c3ff:	dec    edi
  41c400:	aaa    
  41c401:	je     0x41c45c
  41c403:	dec    ebp
  41c404:	fcmovnbe st,st(3)
  41c406:	jg     0x41c434
  41c408:	test   al,0xe3
  41c40a:	inc    ecx
  41c40b:	in     al,0x7a
  41c40d:	cmp    ebx,esp
  41c40f:	sahf   
  41c410:	sti    
  41c411:	jle    0x41c3f3
  41c413:	jb     0x41c422
  41c415:	cmc    
  41c416:	dec    edi
  41c417:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c418:	jmp    0x1485094
  41c41d:	jne    0x41c3c3
  41c41f:	adc    eax,0x8aece44f
  41c424:	stc    
  41c425:	call   0x1b488718
  41c42a:	xor    al,dl
  41c42c:	xchg   esi,eax
  41c42d:	jno    0x41c4a8
  41c42f:	jecxz  0x41c444
  41c431:	aam    0x20
  41c433:	stos   DWORD PTR es:[edi],eax
  41c434:	push   esp
  41c435:	mov    ds,WORD PTR [eax+0x1c9325bc]
  41c43b:	hlt    
  41c43c:	(bad)  
  41c43e:	inc    BYTE PTR ds:0x2fc62564
  41c444:	aas    
  41c445:	push   eax
  41c446:	dec    ebp
  41c447:	loope  0x41c49a
  41c449:	pop    esi
  41c44a:	xchg   BYTE PTR [ebp+0x35fa01c9],ch
  41c450:	pop    ss
  41c451:	rol    BYTE PTR [edx-0x2d],cl
  41c454:	push   ebp
  41c455:	cmp    DWORD PTR [ebx],0x11
  41c458:	push   cs
  41c459:	test   al,0xdf
  41c45b:	cmp    dh,BYTE PTR [ebx]
  41c45d:	cmp    al,0x74
  41c45f:	dec    ebx
  41c460:	jg     0x41c4d8
  41c462:	mov    eax,eax
  41c464:	inc    edx
  41c465:	dec    edi
  41c466:	and    eax,0x635d797d
  41c46b:	fdiv   st(2),st
  41c46d:	xor    esp,DWORD PTR [ebx-0x47]
  41c470:	jecxz  0x41c413
  41c472:	in     al,dx
  41c473:	(bad)  
  41c474:	ds ss dec eax
  41c477:	add    dl,ch
  41c479:	push   es
  41c47a:	adc    ch,BYTE PTR [edx-0x42f7167a]
  41c480:	(bad)  
  41c481:	lea    eax,[edi]
  41c483:	adc    DWORD PTR [edi+0x661c6de],eax
  41c489:	aaa    
  41c48a:	mov    eax,0xb4f7b90b
  41c48f:	(bad)  
  41c490:	jmp    0xe793:0x6da6eaad
  41c497:	dec    ebx
  41c498:	in     al,dx
  41c499:	lods   al,BYTE PTR ds:[esi]
  41c49a:	xor    DWORD PTR [ebp-0x40],eax
  41c49d:	das    
  41c49e:	pop    eax
  41c4a0:	fadd   DWORD PTR [ecx+0x3c]
  41c4a3:	(bad)  
  41c4a4:	pop    eax
  41c4a5:	mov    ebp,0xcc518cff
  41c4aa:	inc    eax
  41c4ab:	call   0xd447:0x3fb762d5
  41c4b2:	or     ah,BYTE PTR [esi+0x27]
  41c4b5:	push   esp
  41c4b6:	cmp    DWORD PTR [esi+edx*4],esi
  41c4b9:	ds inc esi
  41c4bb:	daa    
  41c4bc:	ret    0xf410
  41c4bf:	out    dx,al
  41c4c0:	in     al,dx
  41c4c1:	jp     0x41c469
  41c4c3:	ins    BYTE PTR es:[edi],dx
  41c4c4:	mov    cl,BYTE PTR [edx-0x7b]
  41c4c7:	test   ah,ch
  41c4c9:	add    esp,DWORD PTR [edx+0x1b]
  41c4cc:	je     0x41c4ab
  41c4ce:	(bad)  
  41c4cf:	and    eax,0xcf0c923f
  41c4d4:	inc    ebp
  41c4d5:	int3   
  41c4d6:	inc    esp
  41c4d7:	pusha  
  41c4d8:	enter  0x9bda,0x83
  41c4dc:	int    0x3a
  41c4de:	mov    esp,0x8f3ae517
  41c4e3:	in     al,dx
  41c4e4:	cmp    dl,BYTE PTR [edi+edx*8-0x54]
  41c4e8:	xchg   ebx,eax
  41c4e9:	push   ds
  41c4ea:	nop
  41c4eb:	data16 adc BYTE PTR [esi-0x725a694e],dl
  41c4f2:	enter  0x7a21,0xf8
  41c4f6:	mov    dh,0xf9
  41c4f8:	neg    ecx
  41c4fa:	ins    BYTE PTR es:[edi],dx
  41c4fb:	scas   al,BYTE PTR es:[edi]
  41c4fc:	sub    esi,eax
  41c4fe:	imul   ebx,esp,0xb22b36f2
  41c504:	pushf  
  41c505:	dec    esi
  41c506:	mov    ds:0x8f085e22,eax
  41c50b:	or     edi,esp
  41c50d:	xchg   BYTE PTR [eax-0x6787839e],dh
  41c513:	mov    dl,BYTE PTR [ebx]
  41c515:	in     eax,0x3f
  41c517:	test   BYTE PTR [edx-0x92fb41e],ch
  41c51d:	das    
  41c51e:	dec    ecx
  41c51f:	jle    0x41c532
  41c521:	sahf   
  41c522:	(bad)  
  41c524:	xchg   ebp,eax
  41c525:	(bad)  
  41c526:	sbb    DWORD PTR [esi],edx
  41c528:	fwait
  41c529:	lock mov edx,0x12aed205
  41c52f:	lahf   
  41c530:	popf   
  41c531:	mov    ds,WORD PTR [eax]
  41c533:	test   eax,0x237c56d1
  41c538:	jmp    0x41c535
  41c53a:	lahf   
  41c53b:	xor    ch,BYTE PTR ds:0xe258eb4e
  41c541:	inc    edi
  41c542:	push   eax
  41c543:	ds dec ebx
  41c545:	int3   
  41c546:	ficom  WORD PTR [ebp+0x3b]
  41c549:	js     0x41c55e
  41c54b:	push   0x9
  41c54d:	das    
  41c54e:	repz leave 
  41c550:	mov    al,0x7b
  41c552:	int3   
  41c553:	ds ds xchg esi,eax
  41c556:	sbb    al,dl
  41c558:	mov    edi,0x24727ff7
  41c55d:	jb     0x41c4eb
  41c55f:	iret   
  41c560:	cmp    DWORD PTR gs:[esi-0x4fb59c31],edx
  41c567:	out    0x22,al
  41c569:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c56a:	pop    ecx
  41c56b:	cld    
  41c56c:	mov    ?,WORD PTR [ebx]
  41c56e:	sub    bh,0x6c
  41c571:	outs   dx,DWORD PTR ds:[esi]
  41c572:	call   0xc78:0x102eaea
  41c579:	daa    
  41c57a:	mov    dh,0x1f
  41c57c:	xor    edx,DWORD PTR [eax]
  41c57e:	or     DWORD PTR [edi+esi*2+0xf],ebx
  41c582:	or     edx,eax
  41c584:	in     al,0x97
  41c586:	mov    bh,0x70
  41c588:	adc    al,0x51
  41c58b:	push   esp
  41c58c:	psllq  mm1,QWORD PTR [ebp+0x22]
  41c590:	mov    cl,0x5d
  41c592:	jns    0x41c5b0
  41c594:	popf   
  41c595:	test   eax,0xede553d5
  41c59a:	or     BYTE PTR [ebx],dl
  41c59c:	or     dh,BYTE PTR [ebp-0x1]
  41c59f:	mov    ?,WORD PTR [esi-0x1]
  41c5a2:	cli    
  41c5a3:	imul   edx,DWORD PTR [edx],0xffffff97
  41c5a6:	ds dec edx
  41c5a8:	mov    DWORD PTR [ebx],esp
  41c5aa:	mov    cl,0x48
  41c5ac:	popf   
  41c5ad:	in     eax,dx
  41c5ae:	sbb    BYTE PTR [edx],ah
  41c5b0:	xlat   BYTE PTR ds:[ebx]
  41c5b1:	sgdtd  [eax-0x2e]
  41c5b5:	xor    BYTE PTR [ebx],ch
  41c5b7:	push   ecx
  41c5b8:	sub    al,0x61
  41c5ba:	in     al,dx
  41c5bb:	add    edi,edx
  41c5bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c5be:	xor    DWORD PTR [edx+0x2ab52244],ebp
  41c5c4:	in     al,0x7e
  41c5c6:	mov    bl,0x9f
  41c5c8:	ret    
  41c5c9:	mov    ds:0x5d347d72,al
  41c5ce:	mov    eax,ds:0x5d52ad57
  41c5d3:	add    BYTE PTR [ecx],dl
  41c5d5:	jmp    0x56110137
  41c5da:	xchg   edi,eax
  41c5db:	pop    esp
  41c5dc:	arpl   si,sp
  41c5de:	in     eax,0x26
  41c5e0:	or     WORD PTR ds:0xc9b5df53,ax
  41c5e7:	rcl    DWORD PTR [edx+0x10],cl
  41c5ea:	push   esi
  41c5eb:	mov    dh,0xed
  41c5ed:	aas    
  41c5ee:	dec    esi
  41c5ef:	xchg   BYTE PTR [ebx],bh
  41c5f1:	xchg   ecx,eax
  41c5f2:	cwde   
  41c5f3:	imul   edi,esi,0xffffff9f
  41c5f6:	stos   BYTE PTR es:[edi],al
  41c5f7:	and    BYTE PTR [eax+0x2f],0x3d
  41c5fb:	pop    esi
  41c5fc:	sub    DWORD PTR [edx+0x4b],edx
  41c5ff:	push   cs
  41c600:	inc    eax
  41c601:	ret    0xc9fd
  41c604:	mov    al,ds:0x8e4a8ccc
  41c609:	sub    al,0x4a
  41c60b:	outs   dx,DWORD PTR ds:[esi]
  41c60c:	pushf  
  41c60d:	xchg   edx,eax
  41c60e:	mov    edx,0x1bfb9fbe
  41c613:	leave  
  41c614:	xor    BYTE PTR [edx+ecx*4],bl
  41c617:	sub    eax,0xe60ecf42
  41c61c:	test   al,0x2
  41c61e:	popf   
  41c61f:	sub    eax,0x348c16aa
  41c624:	into   
  41c625:	add    ebx,DWORD PTR [ebp+0x695b7e66]
  41c62b:	dec    esi
  41c62c:	and    bh,BYTE PTR [ebx+edx*8-0x28]
  41c630:	xor    bl,BYTE PTR [edi-0x1ebac71d]
  41c636:	and    esi,DWORD PTR [eax]
  41c638:	imul   DWORD PTR [ecx+esi*4]
  41c63b:	dec    ebx
  41c63c:	retf   0x9bc0
  41c63f:	(bad)  [esi]
  41c641:	pop    esp
  41c642:	cmp    al,0x8c
  41c644:	test   al,0x2b
  41c646:	adc    al,0xf1
  41c648:	sbb    al,BYTE PTR [eax]
  41c64a:	test   eax,0xe27eaede
  41c64f:	lock test ch,al
  41c652:	repnz adc al,BYTE PTR [eax]
  41c655:	dec    eax
  41c656:	cmp    ecx,edi
  41c658:	lahf   
  41c659:	jl     0x41c6b2
  41c65b:	sbb    BYTE PTR [ecx],ch
  41c65d:	or     esi,edx
  41c65f:	jbe    0x41c670
  41c661:	mov    al,0xda
  41c663:	xlat   BYTE PTR ds:[ebx]
  41c664:	cmp    DWORD PTR [esi+0x62],esi
  41c667:	add    bl,bl
  41c669:	stc    
  41c66a:	in     eax,0x67
  41c66c:	push   ebx
  41c66d:	jae    0x41c6d0
  41c66f:	inc    ebx
  41c670:	fwait
  41c671:	cli    
  41c672:	(bad)  
  41c673:	(bad)  
  41c674:	mov    edi,0xddbee8db
  41c679:	push   ss
  41c67a:	mov    bl,0x13
  41c67c:	inc    ebp
  41c67d:	test   BYTE PTR [edx-0x7f66eac3],al
  41c683:	mov    bl,0xf7
  41c685:	xchg   esp,eax
  41c686:	inc    esi
  41c687:	and    al,BYTE PTR [ebx*1-0x1a94698a]
  41c68e:	mov    bh,0x71
  41c690:	lock out 0xb6,eax
  41c693:	or     BYTE PTR [edx+0x75ae7f3f],0x48
  41c69a:	and    cl,al
  41c69c:	adc    ch,ah
  41c69e:	(bad)  
  41c69f:	xchg   esp,eax
  41c6a0:	add    dh,BYTE PTR [edx]
  41c6a2:	lahf   
  41c6a3:	cli    
  41c6a4:	scas   al,BYTE PTR es:[edi]
  41c6a5:	mov    eax,0x6edb24d9
  41c6aa:	inc    ebx
  41c6ab:	add    DWORD PTR [ebx-0x62379596],0xffffffd7
  41c6b2:	popa   
  41c6b3:	test   al,0x2b
  41c6b5:	or     DWORD PTR [ebp+0x31],edi
  41c6b8:	mov    BYTE PTR [edx],dl
  41c6ba:	ds lahf 
  41c6bc:	xor    dh,BYTE PTR [eax+0x919dc0f]
  41c6c2:	adc    eax,0xcb61bbad
  41c6c7:	clc    
  41c6c8:	or     al,0xa5
  41c6ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6cb:	mov    cl,0x23
  41c6cd:	(bad)  
  41c6ce:	dec    edx
  41c6cf:	xlat   BYTE PTR ds:[ebx]
  41c6d0:	mov    ah,0x29
  41c6d2:	xchg   ebp,eax
  41c6d3:	add    dh,bl
  41c6d5:	out    dx,eax
  41c6d6:	adc    eax,0xa84db7e7
  41c6db:	imul   edi,DWORD PTR [ebx],0x671b729f
  41c6e1:	std    
  41c6e2:	mov    eax,ds:0xbf0b8137
  41c6e7:	cmp    DWORD PTR [ebx+eax*1+0x3cca39b8],ebp
  41c6ee:	or     BYTE PTR [ecx+0x6a4b93eb],0xff
  41c6f5:	sub    dl,BYTE PTR [edx+0x2]
  41c6f8:	cmp    ah,BYTE PTR [ecx]
  41c6fa:	inc    esi
  41c6fb:	mov    cl,0x2
  41c6fd:	enter  0x351e,0x15
  41c701:	in     eax,0xde
  41c703:	mov    bl,BYTE PTR [esp+edx*1-0x71]
  41c707:	call   0xd759:0xf8631162
  41c70e:	mov    ah,0x60
  41c710:	push   ebx
  41c711:	xchg   ebp,eax
  41c712:	test   DWORD PTR [ebp+eiz*4+0x79],ebx
  41c716:	and    al,0x95
  41c718:	ret    
  41c719:	pop    esp
  41c71a:	and    ebp,DWORD PTR [edx-0x15]
  41c71d:	mov    ebp,0x560455e7
  41c722:	mov    bl,0xd2
  41c724:	push   ds
  41c725:	das    
  41c726:	mov    eax,ds:0x3c4b3faa
  41c72b:	fnstcw WORD PTR [ecx+0x16]
  41c72e:	loop   0x41c759
  41c730:	pop    ecx
  41c731:	mov    ch,BYTE PTR [ecx-0x4ef60a14]
  41c737:	scas   al,BYTE PTR es:[edi]
  41c738:	ror    BYTE PTR [esi],0x42
  41c73b:	push   cs
  41c73c:	ja     0x41c756
  41c73e:	push   ecx
  41c73f:	into   
  41c740:	les    edx,FWORD PTR [esp+eiz*4]
  41c743:	jb     0x41c747
  41c745:	push   edi
  41c746:	dec    esi
  41c747:	pop    esp
  41c748:	pop    eax
  41c749:	scas   al,BYTE PTR es:[edi]
  41c74a:	mov    cl,0xfd
  41c74c:	push   0x4489d798
  41c751:	stc    
  41c752:	call   0xd4f17f89
  41c757:	out    0x78,eax
  41c759:	cmp    eax,0xc4c78bda
  41c75e:	ja     0x41c732
  41c760:	outs   dx,BYTE PTR ds:[esi]
  41c761:	and    al,0xbe
  41c763:	shl    DWORD PTR [eax],1
  41c765:	or     BYTE PTR [edx+0x346a93b4],dh
  41c76b:	xor    esi,0x7f26b2e7
  41c771:	mov    dl,0x9e
  41c773:	icebp  
  41c774:	mov    ebp,0x3346f1d4
  41c779:	int    0x89
  41c77b:	shl    DWORD PTR [edx-0x59],cl
  41c77e:	pop    edi
  41c77f:	out    0xe9,al
  41c781:	gs ds xchg ecx,eax
  41c784:	push   0x48e7ee9f
  41c789:	push   ebp
  41c78a:	mov    WORD PTR [ebp-0x49],?
  41c78d:	scas   eax,DWORD PTR es:[edi]
  41c78e:	loop   0x41c7bd
  41c790:	mov    BYTE PTR [ecx],dh
  41c792:	hlt    
  41c793:	in     al,0x2d
  41c795:	(bad)  
  41c796:	lds    edi,FWORD PTR [ecx-0x16ad8ea6]
  41c79c:	mov    DWORD PTR [eax],ecx
  41c79e:	dec    edi
  41c79f:	into   
  41c7a0:	retf   
  41c7a1:	scas   eax,DWORD PTR es:[edi]
  41c7a2:	lock and DWORD PTR cs:[ebx+0x62],eax
  41c7a7:	xor    DWORD PTR [edi+0x1e2d8d95],ecx
  41c7ad:	repnz inc ebp
  41c7af:	push   cs
  41c7b0:	jg     0x41c797
  41c7b2:	push   ebx
  41c7b3:	push   edi
  41c7b4:	cmp    al,0xbf
  41c7b6:	add    esi,DWORD PTR [ebx-0xf]
  41c7b9:	inc    ebp
  41c7ba:	fwait
  41c7bb:	mov    edi,0x4fc2acaa
  41c7c0:	pop    ds
  41c7c1:	or     eax,0xcc5e5b4e
  41c7c6:	int3   
  41c7c7:	stc    
  41c7c8:	mov    esp,0x7a2f4282
  41c7cd:	or     ah,BYTE PTR [ebp-0x41]
  41c7d0:	aas    
  41c7d1:	(bad)  
  41c7d2:	pop    edx
  41c7d3:	lds    esp,FWORD PTR [ebx]
  41c7d5:	sub    al,dl
  41c7d7:	pop    ebx
  41c7d8:	mul    DWORD PTR [esi]
  41c7da:	or     BYTE PTR [esi+ecx*4+0x55],0x70
  41c7df:	pop    ebx
  41c7e0:	mov    ah,0xdc
  41c7e2:	mov    WORD PTR [eax+0x3c452ecf],cs
  41c7e8:	dec    esp
  41c7e9:	clc    
  41c7ea:	clc    
  41c7eb:	push   ds
  41c7ec:	ins    BYTE PTR es:[edi],dx
  41c7ed:	stc    
  41c7ee:	dec    eax
  41c7ef:	sub    BYTE PTR [ebp+0xb],al
  41c7f2:	push   es
  41c7f3:	sub    DWORD PTR [ebx],ebx
  41c7f5:	repz or dl,al
  41c7f8:	fs dec ecx
  41c7fa:	in     eax,dx
  41c7fb:	mov    edi,0xcc75d172
  41c800:	outs   dx,DWORD PTR ds:[esi]
  41c801:	xchg   edi,eax
  41c802:	shr    BYTE PTR [eax+0x40994d0],1
  41c808:	jnp    0x41c7ce
  41c80a:	sbb    al,0x7a
  41c80c:	xor    eax,DWORD PTR [edx+0x486d21bb]
  41c812:	mov    edi,0x12f60327
  41c817:	jmp    0x55209b40
  41c81c:	jecxz  0x41c896
  41c81e:	(bad)  
  41c81f:	out    dx,eax
  41c820:	add    dl,0xa6
  41c823:	xor    BYTE PTR [ebx+0x169a37d4],dh
  41c829:	hlt    
  41c82a:	leave  
  41c82b:	aam    0x85
  41c82d:	std    
  41c82e:	out    dx,eax
  41c82f:	mov    bh,0xc2
  41c831:	std    
  41c832:	inc    eax
  41c833:	ss int 0x31
  41c836:	and    DWORD PTR [edi+0x2369f3ba],esi
  41c83c:	outs   dx,DWORD PTR ds:[esi]
  41c83d:	xchg   esp,eax
  41c83e:	aas    
  41c83f:	loop   0x41c82a
  41c841:	mov    eax,0xc2cdb1ce
  41c846:	popa   
  41c847:	cli    
  41c848:	adc    DWORD PTR [ebx-0x67],ebx
  41c84b:	mov    edi,0xd7a2d1e5
  41c850:	sub    eax,0x12ed330e
  41c855:	adc    bl,BYTE PTR [edi]
  41c857:	jg     0x41c818
  41c859:	in     al,dx
  41c85a:	sar    BYTE PTR [esi],1
  41c85c:	xor    bl,BYTE PTR [esi-0x51]
  41c85f:	inc    ebx
  41c860:	mov    ah,0x76
  41c862:	mov    al,0xb3
  41c864:	leave  
  41c865:	inc    edx
  41c866:	stos   DWORD PTR es:[edi],eax
  41c867:	clc    
  41c868:	sbb    BYTE PTR [edx],dl
  41c86a:	adc    esp,DWORD PTR [edx-0x2f]
  41c86d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c86e:	adc    al,0xb3
  41c870:	fbstp  TBYTE PTR [edx-0x9]
  41c873:	xchg   esp,eax
  41c874:	ss fabs 
  41c877:	pusha  
  41c878:	xor    BYTE PTR [eax],dh
  41c87a:	inc    esp
  41c87b:	cmp    ebp,esp
  41c87d:	lock inc eax
  41c87f:	sbb    bh,BYTE PTR [ecx]
  41c881:	xor    al,0x3d
  41c883:	hlt    
  41c884:	cld    
  41c885:	out    0xed,al
  41c887:	mov    eax,ds:0xb04a5a87
  41c88c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c88d:	dec    esi
  41c88e:	dec    ecx
  41c88f:	daa    
  41c890:	daa    
  41c891:	mov    edx,0x9137173e
  41c896:	add    eax,0xab46ee28
  41c89b:	pop    es
  41c89c:	in     eax,dx
  41c89d:	ror    DWORD PTR [ebx+edx*1],1
  41c8a0:	lods   eax,DWORD PTR ds:[esi]
  41c8a1:	xchg   edx,eax
  41c8a2:	std    
  41c8a3:	out    0x46,al
  41c8a5:	pop    esi
  41c8a6:	xchg   ecx,eax
  41c8a7:	jns    0x41c8f3
  41c8a9:	test   al,0xb7
  41c8ab:	xchg   bh,ah
  41c8ad:	inc    esi
  41c8ae:	pop    ds
  41c8af:	pop    edx
  41c8b0:	xor    DWORD PTR [eax-0x4b],edx
  41c8b3:	rol    BYTE PTR [eax-0x13],0x8
  41c8b7:	fsub   QWORD PTR [eax]
  41c8b9:	cwde   
  41c8ba:	cmc    
  41c8bb:	in     al,dx
  41c8bc:	adc    BYTE PTR [ecx+0x34],ch
  41c8bf:	mov    edi,0xf9384e37
  41c8c4:	adc    ah,BYTE PTR [esi+0x45c8f05f]
  41c8ca:	fpatan 
  41c8cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8cd:	adc    ebp,ecx
  41c8cf:	cmp    dh,dl
  41c8d1:	sbb    DWORD PTR [ecx+0x7],edi
  41c8d4:	push   cs
  41c8d5:	mov    ah,0xd1
  41c8d7:	cdq    
  41c8d8:	enter  0x6cd7,0xa4
  41c8dc:	out    0x51,al
  41c8de:	lock in eax,0x49
  41c8e1:	push   ebp
  41c8e2:	adc    eax,0x95b06f31
  41c8e7:	in     al,0x41
  41c8e9:	ins    DWORD PTR es:[edi],dx
  41c8ea:	lods   al,BYTE PTR ds:[esi]
  41c8eb:	and    BYTE PTR [esi],dl
  41c8ed:	add    al,0x7d
  41c8ef:	cmp    ch,BYTE PTR [eax]
  41c8f1:	lea    edi,[ecx-0x55]
  41c8f4:	ds out dx,eax
  41c8f6:	xlat   BYTE PTR ds:[ebx]
  41c8f7:	jle    0x41c8bf
  41c8f9:	add    BYTE PTR [ebp+0xdeabbed],bh
  41c8ff:	mov    bl,0xf0
  41c901:	repz cmp bh,bh
  41c904:	icebp  
  41c905:	bound  esp,QWORD PTR [ecx]
  41c907:	pop    ecx
  41c909:	xchg   DWORD PTR [ebx+0x6e],esp
  41c90c:	bound  edx,QWORD PTR [ebp-0x3827f38a]
  41c912:	sub    DWORD PTR [ecx],eax
  41c914:	rol    BYTE PTR [ecx+ecx*8+0x4e],1
  41c918:	and    BYTE PTR [eax-0x595c949e],cl
  41c91e:	fwait
  41c91f:	test   eax,0x5b855ae1
  41c924:	(bad)  
  41c925:	ja     0x41c8c5
  41c927:	out    dx,al
  41c928:	jae    0x41c8d2
  41c92a:	mov    DWORD PTR [esi+0x6be00bfe],0xb97a9c22
  41c934:	in     eax,0xb8
  41c936:	gs aaa 
  41c938:	(bad)  
  41c939:	push   ds
  41c93a:	sbb    al,BYTE PTR [esi]
  41c93c:	xchg   edx,eax
  41c93d:	loope  0x41c901
  41c93f:	in     eax,dx
  41c940:	out    dx,al
  41c941:	stos   DWORD PTR es:[edi],eax
  41c942:	push   esi
  41c943:	int3   
  41c944:	lahf   
  41c945:	sub    eax,DWORD PTR es:[edi+0x43]
  41c949:	dec    ebp
  41c94a:	mov    ebp,0x9cf06bfa
  41c94f:	xchg   BYTE PTR [ebx+eiz*2+0x65],ah
  41c953:	je     0x41c93e
  41c955:	push   0xffffffb0
  41c957:	sti    
  41c958:	ror    DWORD PTR [ebp+0x3d1310c3],0x1c
  41c95f:	in     eax,0xbc
  41c961:	dec    ecx
  41c962:	jmp    0x80c6:0x96cfcbc6
  41c969:	shl    BYTE PTR [ebx-0x7],1
  41c96c:	(bad)  
  41c96d:	mov    edx,0xe7ac6a0c
  41c972:	jb     0x41c93f
  41c974:	mov    WORD PTR [ebp+0x6e28e14c],?
  41c97a:	out    0x31,al
  41c97c:	je     0x41c966
  41c97e:	das    
  41c97f:	jno    0x41c99f
  41c981:	pop    eax
  41c982:	test   DWORD PTR [edi+0x13ce82d4],0xa2a47912
  41c98c:	dec    eax
  41c98d:	or     BYTE PTR ds:0xd14adabc,bh
  41c993:	add    eax,DWORD PTR [ebx-0x56]
  41c996:	pop    eax
  41c997:	adc    BYTE PTR [edx+0x49083157],ch
  41c99d:	ds es cmp ch,bh
  41c9a1:	jge    0x41c979
  41c9a3:	imul   esp,DWORD PTR [edx-0x6c2ee399],0x45
  41c9aa:	jne    0x41ca28
  41c9ac:	arpl   WORD PTR [ebx],cx
  41c9ae:	bsr    ebx,DWORD PTR [ebx+0x65c584e0]
  41c9b5:	adc    BYTE PTR [edi-0x7a],0xcd
  41c9b9:	fsubr  QWORD PTR [edx+ebx*4-0x49f2f4c6]
  41c9c0:	jl     0x41ca2e
  41c9c2:	push   0x4a
  41c9c4:	jg     0x41c99a
  41c9c6:	test   BYTE PTR [eax],dh
  41c9c8:	adc    ah,BYTE PTR [ebx-0x69ddcbf4]
  41c9ce:	aaa    
  41c9cf:	push   edx
  41c9d0:	dec    edx
  41c9d1:	and    ah,BYTE PTR [ebp+0x6c]
  41c9d4:	in     al,dx
  41c9d5:	dec    edi
  41c9d6:	test   al,0x58
  41c9d8:	loopne 0x41ca54
  41c9da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9db:	aas    
  41c9dc:	mov    edi,0x1f60ec4d
  41c9e1:	mov    ebp,0x8798f5ae
  41c9e6:	and    BYTE PTR [ecx],cl
  41c9e8:	ror    DWORD PTR [ebx],cl
  41c9ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9eb:	or     edx,0xc21f6c9d
  41c9f1:	or     BYTE PTR [ebp+0x4d],al
  41c9f4:	jecxz  0x41c9d1
  41c9f6:	lahf   
  41c9f7:	loope  0x41c99b
  41c9f9:	test   bl,bh
  41c9fb:	pop    es
  41c9fc:	loop   0x41ca1f
  41c9fe:	outs   dx,DWORD PTR ds:[esi]
  41c9ff:	imul   ebp,DWORD PTR [ebp+0x7dd48743],0x5
  41ca06:	adc    ch,bh
  41ca08:	mov    al,0x39
  41ca0a:	mov    ds:0x4e4f1b08,eax
  41ca0f:	mov    bl,0x12
  41ca11:	add    DWORD PTR [esi+0x5b],esp
  41ca14:	jecxz  0x41ca34
  41ca16:	xor    bh,al
  41ca18:	inc    edi
  41ca19:	or     al,ah
  41ca1b:	pop    edx
  41ca1c:	scas   al,BYTE PTR es:[edi]
  41ca1d:	inc    ebp
  41ca1e:	sub    DWORD PTR [ebp-0x58],esi
  41ca21:	lods   eax,DWORD PTR ds:[esi]
  41ca22:	pop    ebp
  41ca23:	sbb    eax,0x4561573a
  41ca28:	inc    DWORD PTR [esi-0x2c155cf2]
  41ca2e:	dec    ecx
  41ca2f:	(bad)  
  41ca30:	jnp    0x41ca3b
  41ca32:	lock shl BYTE PTR [ebx],cl
  41ca35:	inc    edx
  41ca36:	lods   al,BYTE PTR ds:[esi]
  41ca37:	and    bl,BYTE PTR [ecx]
  41ca39:	pop    ds
  41ca3a:	imul   edx,DWORD PTR [ecx+0x427a0900],0x23
  41ca41:	sub    eax,0x7f3db1b8
  41ca46:	pop    edx
  41ca47:	xchg   ebx,eax
  41ca48:	jp     0x41ca0b
  41ca4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca4b:	mov    esi,0x280083ee
  41ca50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca51:	sub    ch,cl
  41ca53:	adc    al,0x55
  41ca55:	fld    QWORD PTR [ecx-0x7f7303f3]
  41ca5b:	lods   eax,DWORD PTR ds:[esi]
  41ca5c:	dec    ebx
  41ca5d:	out    0xdb,al
  41ca5f:	lds    esi,FWORD PTR [edi+0x51]
  41ca62:	ja     0x41ca34
  41ca64:	dec    edi
  41ca65:	push   ecx
  41ca66:	add    eax,0x9c3cee37
  41ca6b:	add    al,0x9a
  41ca6d:	in     al,0xfd
  41ca6f:	(bad)  
  41ca70:	add    al,0x7b
  41ca72:	repnz rcl BYTE PTR [ebp+0x42b84da4],0x89
  41ca7a:	push   es
  41ca7b:	shl    BYTE PTR [esi-0x2f],cl
  41ca7e:	xor    al,BYTE PTR [ecx-0x667e308e]
  41ca84:	pusha  
  41ca85:	int    0x79
  41ca87:	push   ss
  41ca88:	inc    ebx
  41ca89:	scas   al,BYTE PTR es:[edi]
  41ca8a:	cmp    edi,DWORD PTR [eax+esi*2-0x2]
  41ca8e:	jb     0x41cb03
  41ca90:	(bad)  
  41ca92:	shr    DWORD PTR [edi+eiz*1],1
  41ca95:	scas   al,BYTE PTR es:[edi]
  41ca96:	clc    
  41ca97:	loopne 0x41caaa
  41ca99:	shl    cl,cl
  41ca9b:	pop    esp
  41ca9c:	aad    0x5c
  41ca9e:	jns    0x41ca30
  41caa0:	cwde   
  41caa1:	mov    bh,0x4f
  41caa3:	push   0xfffffff4
  41caa5:	cli    
  41caa6:	mov    ah,0xde
  41caa8:	test   al,0x81
  41caaa:	adc    al,0xd5
  41caac:	pop    ds
  41caad:	mov    ebx,0xcc99a0b
  41cab2:	inc    ebp
  41cab3:	add    dl,BYTE PTR [ecx+0x11]
  41cab6:	lahf   
  41cab7:	sbb    al,0xfa
  41cab9:	cwde   
  41caba:	cmp    edx,DWORD PTR [esi+0x34]
  41cabd:	popa   
  41cabe:	sbb    cl,BYTE PTR [edx+eax*8-0x4c04ced9]
  41cac5:	or     al,BYTE PTR [eax-0x6dbdb5ac]
  41cacb:	into   
  41cacc:	mul    ch
  41cace:	fwait
  41cacf:	ins    DWORD PTR es:[edi],dx
  41cad0:	dec    ebx
  41cad1:	rcr    BYTE PTR [edx-0x618eb35c],cl
  41cad7:	xchg   edi,eax
  41cad8:	icebp  
  41cad9:	aad    0x91
  41cadb:	xor    edi,ecx
  41cadd:	int    0xcb
  41cadf:	mov    esp,0xda6c5a1d
  41cae4:	add    esp,DWORD PTR [eax]
  41cae6:	ds mov esp,0x82136260
  41caec:	or     eax,0xc7749426
  41caf1:	int    0x5b
  41caf3:	ret    
  41caf4:	xchg   esp,eax
  41caf5:	sub    BYTE PTR [ecx],dh
  41caf7:	pop    esi
  41caf8:	pushf  
  41caf9:	in     eax,0x59
  41cafb:	dec    DWORD PTR [eax-0x5ad7e4a6]
  41cb01:	fstp   DWORD PTR [eax]
  41cb03:	out    dx,eax
  41cb04:	mov    edx,0xd39dd4e3
  41cb09:	and    ebp,DWORD PTR [ebx]
  41cb0b:	mov    dh,0x5f
  41cb0d:	std    
  41cb0e:	dec    eax
  41cb0f:	adc    DWORD PTR [edx+0x27],ebx
  41cb12:	adc    ch,dl
  41cb14:	mov    ds:0xf9bfc4a,al
  41cb19:	test   DWORD PTR [edi+0x6d],esi
  41cb1c:	xor    al,0xe5
  41cb1e:	mov    WORD PTR [eax-0x2124fac1],gs
  41cb24:	in     al,0x39
  41cb26:	and    ebx,DWORD PTR [ebx+0x13]
  41cb29:	push   esi
  41cb2a:	pop    es
  41cb2b:	fs mov bl,0xb9
  41cb2e:	out    dx,eax
  41cb2f:	jb     0x41cb4f
  41cb31:	pop    ds
  41cb32:	outs   dx,BYTE PTR ss:[esi]
  41cb34:	out    0xe8,al
  41cb36:	inc    ebp
  41cb37:	mov    ch,0xd6
  41cb39:	and    BYTE PTR [ebp+0x44e90c99],ch
  41cb3f:	mov    dl,0x3
  41cb41:	shl    BYTE PTR [ebx-0x7d],cl
  41cb44:	scas   eax,DWORD PTR es:[edi]
  41cb45:	shl    BYTE PTR [eax+ecx*2+0x7673c288],1
  41cb4c:	push   esi
  41cb4d:	pop    eax
  41cb4e:	push   0x36e8194e
  41cb53:	sub    ebx,DWORD PTR [edi-0x2]
  41cb56:	gs cmp eax,0xf3fb2ba5
  41cb5c:	fsub   DWORD PTR [eax-0xc]
  41cb5f:	adc    al,0x69
  41cb61:	sbb    al,0xa3
  41cb63:	adc    bl,BYTE PTR [edi-0x2d]
  41cb66:	pop    edx
  41cb67:	imul   DWORD PTR [eax]
  41cb69:	pop    eax
  41cb6a:	out    0xbf,eax
  41cb6c:	aaa    
  41cb6d:	adc    al,0x77
  41cb6f:	xor    edx,DWORD PTR [ebx+0x2c]
  41cb72:	inc    BYTE PTR [edi+0x66]
  41cb75:	cmp    DWORD PTR [esi+0x38],ebx
  41cb78:	xchg   edx,eax
  41cb79:	clc    
  41cb7a:	and    bh,al
  41cb7c:	xchg   ecx,eax
  41cb7d:	or     BYTE PTR [eax+0x1f93484b],dh
  41cb83:	or     al,0x7e
  41cb85:	xchg   edx,eax
  41cb86:	std    
  41cb87:	addr16 nop
  41cb89:	pop    edi
  41cb8a:	add    ah,ah
  41cb8c:	mov    ds:0xc7867fc2,eax
  41cb91:	ds leave 
  41cb93:	mov    ds:0x539552e,al
  41cb98:	pop    esp
  41cb99:	push   ss
  41cb9a:	ins    BYTE PTR es:[edi],dx
  41cb9b:	test   eax,0x5879b297
  41cba0:	ror    edi,0xac
  41cba3:	in     al,0x75
  41cba5:	rcr    BYTE PTR [esi-0x6d],0xae
  41cba9:	push   edx
  41cbaa:	push   esi
  41cbab:	cmp    bl,BYTE PTR [esp+ebp*4+0x1e]
  41cbaf:	in     al,dx
  41cbb0:	mov    edi,0x2a579717
  41cbb5:	inc    ebx
  41cbb6:	dec    edi
  41cbb7:	add    al,0xe8
  41cbb9:	pop    ds
  41cbba:	ss call 0x771a:0xd9632a6d
  41cbc2:	test   eax,0x7b066765
  41cbc7:	stos   DWORD PTR es:[edi],eax
  41cbc8:	xor    ecx,edi
  41cbca:	dec    eax
  41cbcb:	mov    bh,0xba
  41cbcd:	jle    0x41cbbb
  41cbcf:	pop    edx
  41cbd0:	xor    esi,ecx
  41cbd2:	pop    esi
  41cbd3:	outs   dx,DWORD PTR ds:[esi]
  41cbd4:	loope  0x41cbe9
  41cbd6:	push   ebp
  41cbd7:	aam    0xfa
  41cbd9:	xlat   BYTE PTR ds:[ebx]
  41cbda:	fsubr  QWORD PTR [esi-0xd7f3105]
  41cbe0:	aad    0x31
  41cbe2:	mov    ds:0xdb2c7d1e,al
  41cbe7:	push   esp
  41cbe8:	loopne 0x41cba3
  41cbea:	xchg   esi,eax
  41cbeb:	std    
  41cbec:	sbb    ebx,DWORD PTR [edi-0xa3f0875]
  41cbf2:	outs   dx,DWORD PTR ds:[esi]
  41cbf3:	push   ss
  41cbf4:	pop    ebp
  41cbf5:	cmp    DWORD PTR gs:[eax+0x8],esp
  41cbf9:	mov    ds:0xab3a60a,eax
  41cbfe:	inc    ecx
  41cbff:	shr    DWORD PTR [ecx+0x6db54658],0xb0
  41cc06:	test   eax,0xd718c633
  41cc0b:	das    
  41cc0c:	fbstp  TBYTE PTR [esp+ecx*1]
  41cc0f:	fiadd  WORD PTR [eax+ecx*8-0x7547758a]
  41cc16:	jo     0x41cbdf
  41cc18:	mov    dl,0xfe
  41cc1a:	xchg   edi,eax
  41cc1b:	idiv   ah
  41cc1d:	mov    al,0x40
  41cc1f:	cs popa 
  41cc21:	call   0xa0d1:0xe82dda7c
  41cc28:	in     eax,dx
  41cc29:	cdq    
  41cc2a:	xor    DWORD PTR [edi-0x74275091],edi
  41cc30:	pop    esp
  41cc31:	jp     0x41cc65
  41cc33:	fidiv  DWORD PTR [edi+0x5ed06250]
  41cc39:	add    esi,ecx
  41cc3b:	inc    esp
  41cc3c:	jnp    0x41cc6d
  41cc3e:	pop    edi
  41cc3f:	and    bl,BYTE PTR [ebp+0x5da8cd63]
  41cc45:	retf   
  41cc46:	pop    edx
  41cc47:	pop    edi
  41cc48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc49:	add    eax,esi
  41cc4b:	pusha  
  41cc4c:	test   BYTE PTR [ebx-0x67],dl
  41cc4f:	mov    eax,0xc633a3b
  41cc54:	out    dx,al
  41cc55:	pushf  
  41cc56:	cld    
  41cc57:	sub    cl,BYTE PTR [eax-0x5dd7629]
  41cc5d:	inc    esi
  41cc5e:	mov    esi,0x3ca9ba9f
  41cc63:	(bad)  
  41cc64:	aas    
  41cc65:	push   ebp
  41cc66:	xor    bh,cl
  41cc68:	pop    esp
  41cc69:	mul    BYTE PTR [edi-0x76]
  41cc6c:	fadd   QWORD PTR [edi+eiz*2]
  41cc6f:	pop    edx
  41cc70:	sbb    BYTE PTR [ecx+0x7c06227c],bl
  41cc76:	inc    esp
  41cc77:	pushf  
  41cc78:	mov    bh,0xc4
  41cc7a:	cmp    al,0x62
  41cc7c:	vpmaddwd xmm3,xmm1,XMMWORD PTR [ecx]
  41cc80:	mov    ah,0x1
  41cc82:	out    dx,eax
  41cc83:	in     al,dx
  41cc84:	adc    DWORD PTR [edx-0x562116b3],edi
  41cc8a:	inc    ecx
  41cc8b:	into   
  41cc8c:	in     al,dx
  41cc8d:	xor    al,BYTE PTR [ebp+esi*4+0x7b2afc26]
  41cc94:	dec    edi
  41cc95:	mov    bh,0x97
  41cc97:	dec    esp
  41cc98:	lahf   
  41cc99:	push   cs
  41cc9a:	int    0x9
  41cc9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc9d:	and    ax,0x7132
  41cca1:	fimul  WORD PTR [ecx+eiz*4]
  41cca4:	scas   al,BYTE PTR es:[edi]
  41cca5:	mov    ebx,ecx
  41cca7:	test   ah,ch
  41cca9:	lods   eax,DWORD PTR ds:[esi]
  41ccaa:	push   0x24aba3a9
  41ccaf:	jmp    0xb041d9ee
  41ccb4:	aad    0x4a
  41ccb6:	stc    
  41ccb7:	push   ebx
  41ccb8:	push   esi
  41ccb9:	mov    ah,0xc1
  41ccbb:	cmp    DWORD PTR [edi],ebp
  41ccbd:	call   0xb16a:0x8c19fd2
  41ccc4:	loopne 0x41cd06
  41ccc6:	xchg   BYTE PTR [eax-0xc846519],ch
  41cccc:	ja     0x41cc92
  41ccce:	(bad)  
  41cccf:	rol    DWORD PTR ds:0xa8f6d801,cl
  41ccd5:	lods   eax,DWORD PTR ds:[esi]
  41ccd6:	test   DWORD PTR [ecx+0xe],0x98d91174
  41ccdd:	add    ah,al
  41ccdf:	cdq    
  41cce0:	in     al,0xe6
  41cce2:	repnz ins DWORD PTR es:[edi],dx
  41cce4:	jle    0x41cc6c
  41cce6:	cdq    
  41cce7:	retf   
  41cce8:	(bad)  
  41cce9:	pop    eax
  41ccea:	add    DWORD PTR [ecx+0x147f2c51],0xd3a4675d
  41ccf4:	cmp    DWORD PTR [ebp-0x1b],edi
  41ccf7:	dec    edx
  41ccf8:	sbb    BYTE PTR [ecx],al
  41ccfa:	out    dx,al
  41ccfb:	push   es
  41ccfc:	ret    0x1c0b
  41ccff:	adc    DWORD PTR [edx],edi
  41cd01:	ret    0xc0f4
  41cd04:	stos   BYTE PTR es:[edi],al
  41cd05:	lods   eax,DWORD PTR ds:[esi]
  41cd06:	icebp  
  41cd07:	or     DWORD PTR [edx-0x4a],eax
  41cd0a:	movlps QWORD PTR [ecx+0x1855e7fc],xmm5
  41cd11:	jge    0x41ccf3
  41cd13:	or     ecx,DWORD PTR [ebx-0x6384fa1e]
  41cd19:	push   ecx
  41cd1a:	push   cs
  41cd1b:	jmp    0x1e2a442
  41cd20:	cmp    bl,BYTE PTR [edx+0x1c]
  41cd23:	arpl   WORD PTR [ecx+0x45],ax
  41cd26:	ins    DWORD PTR es:[edi],dx
  41cd27:	adc    esi,eax
  41cd29:	icebp  
  41cd2a:	mov    esi,0x99c1a90f
  41cd2f:	push   es
  41cd30:	dec    esi
  41cd31:	xchg   esp,eax
  41cd32:	mov    cs,WORD PTR [eax+0x72476725]
  41cd38:	fimul  WORD PTR [ebx]
  41cd3a:	imul   ebp,ebx,0xed9d3e09
  41cd40:	dec    eax
  41cd41:	mov    cl,0xe5
  41cd43:	mov    eax,ds:0xcdfa239e
  41cd48:	sub    BYTE PTR [ebx],0x9c
  41cd4b:	xor    esp,ebx
  41cd4d:	mov    bh,0x5d
  41cd4f:	test   ebx,edi
  41cd51:	push   ss
  41cd52:	or     BYTE PTR [ebp-0x62ef1524],0x1e
  41cd59:	dec    edx
  41cd5a:	and    DWORD PTR [edx-0x73d9e859],ebp
  41cd60:	xchg   edi,eax
  41cd61:	dec    ecx
  41cd62:	jb     0x41cd09
  41cd64:	test   al,0x6e
  41cd66:	push   edx
  41cd67:	test   esi,eax
  41cd69:	add    BYTE PTR [eax+esi*2+0x3],dh
  41cd6d:	retf   0xfaa
  41cd70:	push   eax
  41cd71:	xchg   BYTE PTR [edi],dl
  41cd73:	cmp    dh,BYTE PTR [edx]
  41cd75:	xchg   esi,eax
  41cd76:	dec    ebx
  41cd77:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41cd79:	js     0x41cdeb
  41cd7b:	bound  esi,QWORD PTR [ecx]
  41cd7d:	ret    
  41cd7e:	pop    ebx
  41cd7f:	mov    ebx,0xd43e857e
  41cd84:	ret    0xda38
  41cd87:	mov    BYTE PTR [edx-0x6],0xdb
  41cd8b:	xor    eax,0x8dd47d21
  41cd90:	jle    0x41cda3
  41cd92:	mov    cl,BYTE PTR [ebx-0x7f]
  41cd95:	xor    eax,0xe99ec46e
  41cd9a:	mov    bh,0x2a
  41cd9c:	mov    ch,0x4a
  41cd9e:	jnp    0x41cd6d
  41cda0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cda1:	xchg   esp,eax
  41cda2:	outs   dx,BYTE PTR ds:[esi]
  41cda3:	dec    edx
  41cda4:	ret    0xfe8c
  41cda7:	pop    eax
  41cda8:	fimul  DWORD PTR ds:0x8c9985ad
  41cdae:	dec    edx
  41cdaf:	sti    
  41cdb0:	xchg   esp,eax
  41cdb1:	(bad)  
  41cdb2:	call   0x3e6b010
  41cdb7:	mov    al,0x53
  41cdb9:	in     al,0x59
  41cdbb:	inc    esi
  41cdbc:	inc    eax
  41cdbd:	loopne 0x41cdda
  41cdbf:	mov    ebx,0xf1123faf
  41cdc4:	jp     0x41cdf4
  41cdc6:	test   al,dh
  41cdc8:	cdq    
  41cdc9:	stos   BYTE PTR es:[edi],al
  41cdca:	and    DWORD PTR [ebp+edi*1+0x371571d5],ebp
  41cdd1:	and    al,0x32
  41cdd3:	pop    ds
  41cdd4:	scas   al,BYTE PTR es:[edi]
  41cdd5:	iret   
  41cdd6:	lea    edx,ds:0x547b28fd
  41cddc:	mov    bh,0xf8
  41cdde:	mov    al,0x92
  41cde0:	sub    al,0x72
  41cde2:	std    
  41cde3:	xchg   DWORD PTR [ebx],ecx
  41cde5:	pop    ecx
  41cde6:	jmp    0x41cdd1
  41cde8:	xor    al,0x6b
  41cdea:	jl     0x41cdce
  41cdec:	repz enter 0x1346,0x51
  41cdf1:	mov    gs,WORD PTR [ebp+ecx*8-0x4e]
  41cdf5:	mov    esi,0x17e39e43
  41cdfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdfb:	in     al,dx
  41cdfc:	dec    eax
  41cdfd:	push   edx
  41cdfe:	in     eax,dx
  41cdff:	pop    eax
  41ce00:	xchg   DWORD PTR [esi-0x20370d0f],edi
  41ce06:	xchg   ebx,eax
  41ce07:	sub    esp,DWORD PTR [ecx-0x6e]
  41ce0a:	dec    ebp
  41ce0b:	xchg   edi,eax
  41ce0c:	aam    0xd4
  41ce0e:	sub    eax,0x9ce6d803
  41ce13:	shl    BYTE PTR [edi],1
  41ce15:	push   0xfffffff5
  41ce17:	stc    
  41ce18:	add    ch,BYTE PTR ds:0xc6c8c5da
  41ce1e:	lea    esi,[edi+ebx*8]
  41ce21:	jle    0x41ce92
  41ce23:	shl    bh,cl
  41ce25:	jno    0x41ce07
  41ce27:	iret   
  41ce28:	shl    esi,0xf5
  41ce2b:	iret   
  41ce2c:	les    esi,FWORD PTR [ebx+0x434cbeaa]
  41ce32:	add    al,BYTE PTR [ebx+edx*2+0x76]
  41ce36:	mov    bl,0xcb
  41ce38:	cmp    edi,DWORD PTR [esi+0x1a]
  41ce3b:	push   esp
  41ce3c:	ret    0xdafd
  41ce3f:	lock xchg edx,eax
  41ce41:	cmp    al,cl
  41ce43:	mov    edi,0xf0e14924
  41ce48:	loope  0x41ce8d
  41ce4a:	mov    DWORD PTR [edi+0x25],edx
  41ce4d:	cmc    
  41ce4e:	or     cx,WORD PTR ds:0x796ae23f
  41ce55:	pop    ecx
  41ce56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce57:	or     eax,0xcadb566d
  41ce5c:	das    
  41ce5d:	mov    dh,0xf4
  41ce5f:	in     eax,0xbf
  41ce61:	cdq    
  41ce62:	loope  0x41cea8
  41ce64:	call   0xc218:0x19f7ce0c
  41ce6b:	fistp  DWORD PTR [ebp-0x519045af]
  41ce71:	jne    0x41ce4f
  41ce73:	fisub  WORD PTR [eax]
  41ce75:	xor    ebp,ecx
  41ce77:	bound  ecx,QWORD PTR [ebp-0x10]
  41ce7a:	dec    ecx
  41ce7c:	out    dx,al
  41ce7d:	test   BYTE PTR [edx+0x70],0xc3
  41ce81:	shl    DWORD PTR [edx-0x843a55d],0x69
  41ce88:	jl     0x41ce12
  41ce8a:	jo     0x41ceac
  41ce8c:	pop    ebx
  41ce8d:	mov    WORD PTR [eax+0x607c8aaa],gs
  41ce93:	push   eax
  41ce94:	pxor   mm5,QWORD PTR [ebx+ebp*4+0x732bfe16]
  41ce9c:	mov    WORD PTR [ecx-0x6e22edc4],ss
  41cea2:	ja     0x41ceb7
  41cea4:	and    eax,0x165c67b3
  41cea9:	nop
  41ceaa:	js     0x41ce52
  41ceac:	or     DWORD PTR gs:[ebx+0x77],esp
  41ceb0:	stc    
  41ceb1:	fimul  DWORD PTR ds:0x783c729d
  41ceb7:	pop    edi
  41ceb8:	rcl    DWORD PTR ss:[edx],0x1c
  41cebc:	pop    es
  41cebd:	xor    BYTE PTR [ebp+0x7f],ah
  41cec0:	mov    edi,0xafa095c5
  41cec5:	jmp    0x2885:0xeb12c2bd
  41cecc:	push   eax
  41cecd:	sub    al,BYTE PTR [edx+0x2c]
  41ced0:	push   ecx
  41ced1:	jg     0x41cf19
  41ced3:	sbb    bh,bl
  41ced5:	int3   
  41ced6:	aam    0x8a
  41ced8:	and    bh,BYTE PTR [ecx+edx*1]
  41cedb:	pop    ss
  41cedc:	push   es
  41cedd:	dec    esi
  41cede:	xchg   ebp,eax
  41cedf:	in     eax,dx
  41cee0:	(bad)  [ebp-0x5d]
  41cee3:	mov    ebx,0xe50cb673
  41cee8:	xchg   esp,eax
  41cee9:	jge    0x41cf4c
  41ceeb:	mov    cl,0x14
  41ceed:	fadd   QWORD PTR [esi+0x5cdfe2ec]
  41cef3:	jne    0x41ce7a
  41cef5:	nop
  41cef6:	test   BYTE PTR [ecx-0x45],dh
  41cef9:	stos   DWORD PTR es:[edi],eax
  41cefa:	mov    al,0x6f
  41cefc:	or     DWORD PTR [esi-0x77],esp
  41ceff:	rcl    DWORD PTR [edx-0x1c4f43aa],1
  41cf05:	mov    edx,0x14137a21
  41cf0a:	jmp    0x41cf62
  41cf0c:	add    esp,0x8c29d3c3
  41cf12:	clc    
  41cf13:	pop    ebp
  41cf14:	(bad)  
  41cf15:	jae    0x41cf10
  41cf17:	mov    al,0x33
  41cf19:	add    dl,BYTE PTR [ecx-0x13883240]
  41cf1f:	jmp    0xc1c2b138
  41cf24:	pop    ds
  41cf25:	stc    
  41cf26:	mov    eax,0x4a3432d4
  41cf2b:	adc    ebp,DWORD PTR [edi+0x136e27ff]
  41cf31:	outs   dx,DWORD PTR ds:[esi]
  41cf32:	fmul   st,st(3)
  41cf34:	xchg   ebp,eax
  41cf35:	mov    WORD PTR [edx-0x29],fs
  41cf38:	sub    BYTE PTR [esp+edi*8-0x6],ch
  41cf3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf3d:	fs repnz icebp 
  41cf40:	mov    ecx,0x131dfb68
  41cf45:	cwde   
  41cf46:	xchg   BYTE PTR [esp+ebp*2-0x451b35a2],bl
  41cf4d:	int    0x84
  41cf4f:	sub    al,0x51
  41cf51:	sahf   
  41cf52:	test   eax,0xfa0c1082
  41cf57:	leave  
  41cf58:	inc    edx
  41cf59:	jle    0x41cfc6
  41cf5b:	inc    edx
  41cf5c:	mov    al,0x7b
  41cf5e:	sub    edi,DWORD PTR [esi-0x3d89ac54]
  41cf64:	mov    al,ds:0x7dce7c4a
  41cf69:	add    esi,esp
  41cf6b:	sbb    eax,0xa25f1002
  41cf70:	mov    esi,0x9689c88
  41cf75:	and    al,0x13
  41cf77:	push   0x44
  41cf79:	dec    eax
  41cf7a:	sbb    ah,0xd7
  41cf7d:	icebp  
  41cf7e:	or     bh,BYTE PTR [edx]
  41cf80:	cmp    DWORD PTR [ebx-0x29],esp
  41cf83:	push   ebx
  41cf84:	out    dx,al
  41cf85:	ret    0x10c4
  41cf88:	sbb    DWORD PTR [ecx+0x4ca0f5d3],esi
  41cf8e:	jl     0x41cf6c
  41cf90:	inc    esp
  41cf91:	xor    dl,ah
  41cf93:	call   0x3a530ebf
  41cf98:	das    
  41cf99:	push   0xffffff95
  41cf9b:	push   ebx
  41cf9c:	fistp  QWORD PTR [esi+0x7a]
  41cf9f:	outs   dx,DWORD PTR ds:[esi]
  41cfa0:	sub    bl,BYTE PTR [esi]
  41cfa2:	add    al,bh
  41cfa4:	fisub  WORD PTR [ebx-0x18ba5bf2]
  41cfaa:	sysenter 
  41cfac:	sbb    al,0x1a
  41cfae:	xchg   ebp,eax
  41cfaf:	out    dx,al
  41cfb0:	arpl   WORD PTR ds:0xc0a09929,bp
  41cfb6:	into   
  41cfb7:	mov    ds:0xec9b72c6,al
  41cfbc:	cmp    BYTE PTR [eax+0x72],dh
  41cfbf:	stos   DWORD PTR es:[edi],eax
  41cfc0:	out    0x90,eax
  41cfc2:	dec    esp
  41cfc3:	imul   DWORD PTR [ecx-0x3d901721]
  41cfc9:	pop    eax
  41cfca:	xchg   esp,eax
  41cfcb:	inc    eax
  41cfcc:	xor    BYTE PTR [edi],dl
  41cfce:	push   ds
  41cfcf:	pop    ebx
  41cfd0:	sub    eax,0xe3ca0d3e
  41cfd5:	loopne 0x41cfae
  41cfd7:	lods   al,BYTE PTR ds:[esi]
  41cfd8:	icebp  
  41cfd9:	push   es
  41cfda:	sub    al,0xc7
  41cfdc:	inc    eax
  41cfdd:	and    eax,0x9b103833
  41cfe2:	sub    esp,DWORD PTR [ebx+0x7a]
  41cfe5:	or     edi,DWORD PTR [esi+0x75]
  41cfe8:	dec    edi
  41cfe9:	jnp    0x41cf98
  41cfeb:	push   ebp
  41cfec:	pop    ss
  41cfed:	mov    ss:0x235fa383,al
  41cff3:	xchg   edx,eax
  41cff4:	add    ebx,DWORD PTR [edi-0x7c262236]
  41cffa:	outs   dx,DWORD PTR ds:[esi]
  41cffb:	xchg   edx,eax
  41cffc:	fimul  DWORD PTR [ebx]
  41cffe:	adc    BYTE PTR [esp+eiz*2],0xc0
  41d002:	jp     0x41cf85
  41d004:	pop    esp
  41d005:	xlat   BYTE PTR ds:[ebx]
  41d006:	add    eax,DWORD PTR [esp+ebx*1-0x5b]
  41d00a:	ficom  DWORD PTR [edi]
  41d00c:	loop   0x41cf9d
  41d00e:	imul   esi,DWORD PTR [ebx],0xb11cce5d
  41d014:	pop    eax
  41d015:	or     bh,BYTE PTR [edi+0x3a]
  41d018:	fucomp st(4)
  41d01a:	xor    eax,0x8d954f24
  41d01f:	mov    dl,0x49
  41d021:	xchg   ecx,eax
  41d022:	mov    eax,ds:0xfe4b90a5
  41d027:	push   0xffffff91
  41d029:	popa   
  41d02a:	aas    
  41d02b:	or     DWORD PTR [edx],0xfffffff7
  41d02e:	rol    DWORD PTR [ebp-0x21f4238d],cl
  41d034:	out    dx,al
  41d035:	adc    eax,0x76e9820b
  41d03a:	jb     0x41d014
  41d03c:	mov    eax,0x501206d2
  41d041:	dec    esi
  41d042:	mov    esi,0x58875090
  41d047:	push   ebx
  41d048:	mov    esi,0xe82ca06e
  41d04d:	jne    0x41d053
  41d04f:	and    al,0xbe
  41d051:	cmp    DWORD PTR [edi-0x68cb4c2d],esi
  41d057:	sbb    esi,esi
  41d059:	lock imul esi,DWORD PTR ds:0xfc900e49,0xffffffea
  41d061:	inc    ebx
  41d062:	adc    BYTE PTR ds:0x7f34a9d7,dh
  41d068:	cld    
  41d069:	jmp    0x53dd8376
  41d06e:	inc    edi
  41d06f:	scas   al,BYTE PTR es:[edi]
  41d070:	out    dx,al
  41d071:	adc    DWORD PTR [eax],edx
  41d073:	pop    es
  41d074:	add    esi,ecx
  41d076:	std    
  41d077:	jb     0x41d004
  41d079:	add    al,ah
  41d07b:	jmp    0xbfbf2c08
  41d080:	ud0    ecx,DWORD PTR [ecx-0x67]
  41d084:	ins    BYTE PTR es:[edi],dx
  41d085:	xchg   esi,eax
  41d086:	adc    BYTE PTR [edx],cl
  41d088:	ret    0xb3ef
  41d08b:	and    ch,ah
  41d08d:	outs   dx,BYTE PTR ds:[esi]
  41d08e:	mov    ah,al
  41d090:	and    al,0xdc
  41d092:	cmp    DWORD PTR [eax-0x35],0xf91e38a9
  41d099:	push   ss
  41d09a:	dec    ebp
  41d09b:	jecxz  0x41d047
  41d09d:	rol    BYTE PTR [ecx+0x29e36a20],0x43
  41d0a4:	stc    
  41d0a5:	pushf  
  41d0a6:	outs   dx,BYTE PTR ds:[esi]
  41d0a7:	jnp    0x41d07d
  41d0a9:	dec    eax
  41d0aa:	mov    esp,0x2a93ef3f
  41d0af:	and    BYTE PTR [edi],0xa5
  41d0b2:	adc    DWORD PTR [esi],ebp
  41d0b4:	xor    ebx,esi
  41d0b6:	xchg   esi,eax
  41d0b7:	fsub   DWORD PTR [edx+edi*1+0x4a]
  41d0bb:	shl    BYTE PTR [esi+0x6370aec0],0xb7
  41d0c2:	es mov ch,0xf9
  41d0c5:	push   ss
  41d0c6:	or     BYTE PTR [ebp+0x1f],0xcf
  41d0ca:	rcr    DWORD PTR [ecx],1
  41d0cc:	loopne 0x41d076
  41d0ce:	dec    ebp
  41d0cf:	push   ebp
  41d0d0:	loope  0x41d123
  41d0d2:	mov    eax,0xfbc6bcde
  41d0d7:	inc    edx
  41d0d8:	ins    DWORD PTR es:[edi],dx
  41d0d9:	in     eax,dx
  41d0da:	arpl   dx,sp
  41d0dc:	in     al,dx
  41d0dd:	(bad)  
  41d0de:	jb     0x41d14d
  41d0e0:	cld    
  41d0e1:	out    0xe9,eax
  41d0e3:	cmp    eax,0x5ad44035
  41d0e8:	aam    0x16
  41d0ea:	pop    es
  41d0eb:	jmp    0x553e:0x61d9523
  41d0f2:	add    al,0xaa
  41d0f4:	pusha  
  41d0f5:	pusha  
  41d0f6:	popa   
  41d0f7:	xchg   ecx,eax
  41d0f8:	out    dx,al
  41d0f9:	je     0x41d142
  41d0fb:	mov    WORD PTR [ebx+0x48],gs
  41d0fe:	loop   0x41d0af
  41d100:	jns    0x41d174
  41d102:	cmp    al,0xc3
  41d104:	aam    0xe0
  41d106:	or     esi,ebp
  41d108:	popf   
  41d109:	mov    edx,0xdc0b1c5c
  41d10e:	js     0x41d0ab
  41d110:	add    BYTE PTR [eax-0x6b825617],dh
  41d116:	sbb    edi,DWORD PTR [ebx+0x78]
  41d119:	daa    
  41d11a:	xor    al,0xbc
  41d11c:	xchg   ebx,eax
  41d11d:	inc    edi
  41d11e:	iret   
  41d11f:	sub    eax,0x1d897128
  41d124:	cmc    
  41d125:	and    ebp,DWORD PTR [edx+0x6f0af6bf]
  41d12b:	imul   ebp,DWORD PTR [esi-0x1],0xffffffb9
  41d12f:	adc    al,0xe3
  41d131:	xchg   ebp,eax
  41d132:	(bad)  
  41d133:	pop    ss
  41d134:	stos   BYTE PTR es:[edi],al
  41d135:	or     DWORD PTR ds:0x1433fbaa,eax
  41d13b:	aaa    
  41d13c:	fisubr DWORD PTR [edx-0x63f19ceb]
  41d142:	push   cs
  41d143:	add    eax,0xc56c71ed
  41d148:	retf   0x927d
  41d14b:	pop    ecx
  41d14c:	pop    ebp
  41d14d:	imul   ebp,DWORD PTR [esi+0x2c],0x26
  41d151:	int3   
  41d152:	test   al,0x38
  41d154:	pop    esp
  41d155:	aam    0xde
  41d157:	ja     0x41d1d8
  41d159:	adc    DWORD PTR [ecx-0x20e1107e],ecx
  41d15f:	pop    ss
  41d160:	xchg   dl,ah
  41d162:	mov    ds:0xa4875249,eax
  41d167:	icebp  
  41d168:	xchg   esi,eax
  41d169:	push   esi
  41d16a:	aas    
  41d16b:	cwde   
  41d16c:	inc    ebp
  41d16d:	outs   dx,DWORD PTR ds:[esi]
  41d16e:	sub    ecx,DWORD PTR [ebx]
  41d170:	sbb    bh,ah
  41d172:	fstp   TBYTE PTR [ecx+edi*4]
  41d175:	mov    ds:0x2262a1a2,eax
  41d17a:	cmp    DWORD PTR [edi-0x3b],esi
  41d17d:	pop    edi
  41d17e:	retf   0xe00d
  41d181:	xor    BYTE PTR [ebx+ebx*8-0x7f],bl
  41d185:	data16 mov al,ds:0x392a5d71
  41d18b:	cmp    al,0xb6
  41d18d:	pop    esp
  41d18e:	inc    DWORD PTR [ebx+0x714829c2]
  41d194:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d195:	sub    ah,BYTE PTR [esi-0x43]
  41d198:	mov    ebp,0x3141d11
  41d19d:	pushf  
  41d19e:	fs jns 0x41d153
  41d1a1:	cmp    DWORD PTR [edx],ecx
  41d1a3:	and    DWORD PTR ds:[esi-0x7],eax
  41d1a7:	sar    BYTE PTR [edx],cl
  41d1a9:	sti    
  41d1aa:	mov    ?,WORD PTR [ebx]
  41d1ac:	sahf   
  41d1ad:	out    0x36,al
  41d1af:	xchg   edi,eax
  41d1b0:	mov    eax,ds:0x80436df1
  41d1b5:	mov    ebp,0xb824ffa6
  41d1ba:	adc    eax,0xff5777e0
  41d1bf:	sub    BYTE PTR [ecx],al
  41d1c1:	cld    
  41d1c2:	adc    al,0x3f
  41d1c4:	push   cs
  41d1c5:	pop    eax
  41d1c6:	xor    DWORD PTR [eax+edi*1+0x1b],0x12302da2
  41d1ce:	cld    
  41d1cf:	jmp    0x807d:0x55547501
  41d1d6:	push   edx
  41d1d7:	pop    eax
  41d1d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d1d9:	pop    ss
  41d1da:	sbb    ebp,DWORD PTR [esi+esi*1-0x5b6a8188]
  41d1e1:	inc    ebp
  41d1e2:	loope  0x41d262
  41d1e4:	repnz ins DWORD PTR es:[edi],dx
  41d1e6:	push   edx
  41d1e7:	repnz xchg esi,eax
  41d1e9:	je     0x41d1ba
  41d1eb:	(bad)  
  41d1ec:	std    
  41d1ed:	adc    eax,0x92095ab8
  41d1f2:	ins    BYTE PTR es:[edi],dx
  41d1f3:	jmp    0x5719fa27
  41d1f8:	ins    DWORD PTR es:[edi],dx
  41d1f9:	fsub   DWORD PTR [esi+ebp*4-0x1b]
  41d1fd:	push   ss
  41d1fe:	lds    edx,FWORD PTR ds:0x5e0d3003
  41d204:	ss (bad) 
  41d206:	pusha  
  41d207:	test   al,0x9d
  41d209:	das    
  41d20a:	pop    ebx
  41d20b:	mov    eax,0x57ef08c0
  41d210:	ja     0x41d247
  41d212:	gs and eax,0xa6cc91a2
  41d218:	test   eax,0x4e3483b
  41d21d:	nop
  41d21e:	out    0x4e,al
  41d220:	xor    BYTE PTR [edx],dl
  41d222:	aam    0xe5
  41d224:	mov    ebx,0xd125b9b2
  41d229:	dec    eax
  41d22a:	cld    
  41d22b:	push   0x5a
  41d22d:	sbb    BYTE PTR [ebx-0xf],ch
  41d230:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d231:	xor    al,0x87
  41d233:	outs   dx,DWORD PTR ds:[esi]
  41d234:	es push es
  41d236:	rcl    BYTE PTR [ebx],cl
  41d238:	addr16 push eax
  41d23a:	call   0xed4fc24
  41d23f:	(bad)  
  41d240:	xchg   edi,eax
  41d241:	xor    BYTE PTR [ebx+0x1a],al
  41d244:	pop    esi
  41d245:	push   ebp
  41d246:	or     BYTE PTR [eax+0x7c3269e1],0xa3
  41d24d:	lods   eax,DWORD PTR ds:[esi]
  41d24e:	sub    dh,0x54
  41d251:	mov    bl,0x77
  41d253:	ja     0x41d2af
  41d255:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d256:	add    BYTE PTR [ecx-0x31],ch
  41d259:	add    eax,DWORD PTR [edi]
  41d25b:	out    0xf6,al
  41d25d:	sti    
  41d25e:	jle    0x41d212
  41d260:	sub    al,BYTE PTR [esi]
  41d262:	ss nop
  41d264:	jno    0x41d2ac
  41d266:	fldenv ds:0xc7bcb99d
  41d26c:	mov    ch,0x5
  41d26e:	mov    esp,DWORD PTR [ecx+0x64d1431c]
  41d274:	jp     0x41d226
  41d276:	fwait
  41d277:	dec    ebp
  41d278:	bts    DWORD PTR [edx+0x4b],edx
  41d27c:	mov    esp,0x70164ec8
  41d281:	xchg   esp,eax
  41d282:	sub    eax,0x318b86f4
  41d287:	idiv   BYTE PTR [ebp+0x1b9bd133]
  41d28d:	xor    ch,BYTE PTR [edi-0x7a695ba7]
  41d293:	jmp    0x41d2be
  41d295:	aas    
  41d296:	or     al,0xd8
  41d298:	push   eax
  41d299:	cld    
  41d29a:	loopne 0x41d29f
  41d29c:	fmul   st,st(4)
  41d29e:	fild   QWORD PTR [eax-0x44fc1969]
  41d2a4:	sbb    edx,DWORD PTR [ebp-0x4]
  41d2a7:	cmp    bl,dl
  41d2a9:	or     eax,0x7da03cec
  41d2ae:	sub    bl,dl
  41d2b0:	mov    ebp,es
  41d2b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2b3:	ret    
  41d2b4:	jmp    0x66f4:0xf9475eee
  41d2bb:	sar    BYTE PTR [ebp+0x52ee3b71],1
  41d2c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2c2:	jno    0x41d2fa
  41d2c4:	in     al,0x55
  41d2c6:	mov    edx,0x4c4ee89b
  41d2cb:	mov    ah,0xb5
  41d2cd:	mov    eax,ds:0x211ebe82
  41d2d2:	stc    
  41d2d3:	mov    BYTE PTR [edx+0x2c],ch
  41d2d6:	sub    DWORD PTR [ebp-0x58c8dbb2],0xf4e2b8ca
  41d2e0:	xlat   BYTE PTR ds:[ebx]
  41d2e1:	mov    dl,BYTE PTR [ebx-0x72005f74]
  41d2e7:	inc    ebp
  41d2e8:	test   DWORD PTR [edi+edx*4],ebp
  41d2eb:	cmp    DWORD PTR [si-0x1ba9],esp
  41d2f0:	lea    ebp,[eax+0x11]
  41d2f3:	and    edx,DWORD PTR [ecx-0xd5f2231]
  41d2f9:	add    al,0x58
  41d2fb:	fcomip st,st(4)
  41d2fd:	stos   BYTE PTR es:[edi],al
  41d2fe:	fst    QWORD PTR [esi+edx*1-0x73]
  41d302:	push   ecx
  41d303:	and    ebx,DWORD PTR [ebp+0x357ac95c]
  41d309:	push   edi
  41d30a:	mov    ds:0x7c5c5c57,eax
  41d30f:	pop    ecx
  41d310:	aad    0x29
  41d312:	xchg   edi,eax
  41d313:	cwde   
  41d314:	inc    esi
  41d315:	(bad)  
  41d316:	fimul  DWORD PTR ds:0x2817047d
  41d31c:	out    dx,eax
  41d31d:	xchg   ebx,eax
  41d31e:	mov    eax,ds:0xe5016bd
  41d323:	xlat   BYTE PTR ds:[ebx]
  41d324:	fadd   QWORD PTR [ebx]
  41d326:	adc    ebx,ebx
  41d328:	in     eax,0x8d
  41d32a:	mov    ebx,DWORD PTR [ebp-0x3a48c905]
  41d330:	enter  0x5a89,0x77
  41d334:	cmp    al,0x17
  41d336:	sbb    DWORD PTR [ecx],eax
  41d338:	retf   0x3d03
  41d33b:	inc    edx
  41d33c:	in     eax,0x6d
  41d33e:	in     eax,dx
  41d33f:	rcr    BYTE PTR [edx],cl
  41d341:	xchg   edi,eax
  41d342:	pop    ebp
  41d343:	repnz sbb al,0xb1
  41d346:	clc    
  41d347:	cmp    BYTE PTR ss:[edi+0xc94407d],ch
  41d34e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d34f:	jg     0x41d34c
  41d351:	rcr    DWORD PTR [ebx],0x85
  41d354:	pop    edx
  41d355:	adc    bh,BYTE PTR [edx-0x7f]
  41d358:	mov    edi,0xa09652c0
  41d35d:	dec    esi
  41d35e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d35f:	sub    esp,DWORD PTR [edx+0x13]
  41d362:	not    BYTE PTR [edi+0x41851413]
  41d368:	div    bh
  41d36a:	leave  
  41d36b:	fcomp  DWORD PTR [esi+0x57]
  41d36e:	add    eax,0xf2fc463
  41d373:	outs   dx,DWORD PTR ds:[esi]
  41d374:	mov    bh,0xfe
  41d376:	in     eax,0xc7
  41d378:	aam    0x2c
  41d37a:	cmc    
  41d37b:	cs cwde 
  41d37d:	(bad)  
  41d37e:	imul   esp,DWORD PTR [eax-0x1e64f934],0xddcc2f06
  41d388:	data16 jle 0x41d3a8
  41d38b:	xlat   BYTE PTR ds:[ebx]
  41d38c:	push   ecx
  41d38d:	pop    es
  41d38e:	popf   
  41d38f:	sti    
  41d390:	mov    al,0x4f
  41d392:	fidiv  DWORD PTR ds:0x35e99e71
  41d398:	jnp    0x41d33e
  41d39a:	test   eax,0x118cfd1b
  41d39f:	mov    eax,0xb02f44f0
  41d3a4:	jecxz  0x41d353
  41d3a6:	dec    ecx
  41d3a7:	popf   
  41d3a8:	dec    ecx
  41d3a9:	adc    edx,DWORD PTR [edx-0x9]
  41d3ac:	sub    DWORD PTR [esi-0x2563d5bf],0x6f9c1282
  41d3b6:	cmp    BYTE PTR [eax],dh
  41d3b8:	jmp    0x41d39d
  41d3ba:	test   DWORD PTR [ebx+0x6],ebp
  41d3bd:	aas    
  41d3be:	xor    DWORD PTR [esi-0x21],edi
  41d3c1:	push   0x6243a8dc
  41d3c6:	add    al,0x19
  41d3c8:	mov    ch,0xc7
  41d3ca:	fwait
  41d3cb:	pop    esi
  41d3cc:	repnz cwde 
  41d3ce:	sub    bh,ch
  41d3d0:	out    0x57,eax
  41d3d2:	stos   DWORD PTR es:[edi],eax
  41d3d3:	pop    edi
  41d3d4:	imul   ecx,DWORD PTR [ebx+0x5],0x6b
  41d3d8:	sbb    al,0x8b
  41d3da:	mov    ebp,0x803a727d
  41d3df:	aad    0xf1
  41d3e1:	push   0x61
  41d3e3:	dec    edx
  41d3e4:	ins    BYTE PTR es:[edi],dx
  41d3e5:	test   eax,0x984ef43
  41d3ea:	cmc    
  41d3eb:	or     BYTE PTR [edx+0x359c7ef4],ch
  41d3f1:	cmp    DWORD PTR [ebx],edi
  41d3f3:	(bad)  
  41d3f4:	std    
  41d3f5:	push   ebp
  41d3f6:	out    dx,eax
  41d3f7:	data16 jmp 0x41d395
  41d3fa:	pop    ecx
  41d3fb:	inc    edi
  41d3fc:	sub    al,BYTE PTR ds:0xf62986d8
  41d402:	inc    esp
  41d403:	inc    di
  41d405:	mov    ebx,0x2fd6741a
  41d40a:	cld    
  41d40b:	mov    ecx,0x5f8de3a0
  41d410:	jno    0x41d409
  41d412:	or     esi,ecx
  41d414:	push   0x6
  41d416:	jmp    0x82ab:0x71a93d90
  41d41d:	fisub  WORD PTR [ebp+ecx*2-0x239e3716]
  41d424:	repz (bad) 
  41d426:	sbb    eax,0xaecebf57
  41d42b:	cmp    eax,0x59584aa1
  41d430:	jl     0x41d3c7
  41d432:	or     DWORD PTR [ebx+ebp*2-0x1eb6a13f],edi
  41d439:	lods   eax,DWORD PTR ds:[esi]
  41d43a:	push   ebp
  41d43b:	xor    DWORD PTR [esi],ecx
  41d43d:	dec    BYTE PTR [eax]
  41d43f:	mov    BYTE PTR [eax-0x5a],ah
  41d442:	xlat   BYTE PTR ds:[ebx]
  41d443:	sar    DWORD PTR [edi+0x2c],0x40
  41d447:	jle    0x41d480
  41d449:	clc    
  41d44a:	pop    esp
  41d44b:	xchg   ebx,eax
  41d44c:	out    dx,al
  41d44d:	add    al,0xc9
  41d450:	mov    ecx,0x568ee9b4
  41d455:	hlt    
  41d456:	jae    0x41d4d5
  41d458:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d459:	mov    bl,0xdf
  41d45b:	lods   al,BYTE PTR ds:[esi]
  41d45c:	jns    0x41d3de
  41d45e:	cs inc ebx
  41d460:	push   ds
  41d461:	test   BYTE PTR [edx-0x70b21b75],dl
  41d467:	push   ss
  41d468:	mov    esp,0xb3b2d1d6
  41d46d:	mov    esi,0xe9badfe4
  41d472:	adc    ecx,0x1f1f3cad
  41d478:	fld    TBYTE PTR [ebp+0x12]
  41d47b:	mov    ch,BYTE PTR [ecx]
  41d47d:	jle    0x41d405
  41d47f:	in     eax,0x6c
  41d481:	xchg   edx,eax
  41d482:	dec    ebx
  41d483:	and    esp,eax
  41d485:	push   eax
  41d486:	xor    al,BYTE PTR [edx+0x7087de28]
  41d48c:	pop    ebx
  41d48d:	push   esi
  41d48e:	dec    eax
  41d48f:	ins    DWORD PTR es:[edi],dx
  41d490:	add    al,0x3a
  41d492:	test   BYTE PTR [esi],bl
  41d494:	jl     0x41d47e
  41d496:	jno    0x41d4ed
  41d498:	mov    edi,DWORD PTR [eax-0x34bc2752]
  41d49e:	sub    DWORD PTR [edx-0x4f],edi
  41d4a1:	push   cs
  41d4a2:	pop    ecx
  41d4a3:	inc    eax
  41d4a4:	iret   
  41d4a5:	outs   dx,DWORD PTR cs:[esi]
  41d4a7:	retf   
  41d4a8:	fs out 0x5e,al
  41d4ab:	jl     0x41d470
  41d4ad:	push   ebp
  41d4ae:	xor    al,0xef
  41d4b0:	adc    eax,ebp
  41d4b2:	(bad)  
  41d4b3:	pop    edi
  41d4b4:	sub    al,0x6a
  41d4b6:	jl     0x41d47a
  41d4b8:	jge    0x41d46f
  41d4ba:	push   esi
  41d4bb:	and    eax,0x5e117732
  41d4c0:	sbb    BYTE PTR [esi+ecx*8-0x17],0xf3
  41d4c5:	inc    ecx
  41d4c6:	test   DWORD PTR [esi+0x9],ebp
  41d4c9:	fdivr  DWORD PTR ds:0xcd6b271f
  41d4cf:	or     BYTE PTR [esi+eiz*8+0x314df6a6],cl
  41d4d6:	int    0x79
  41d4d8:	adc    esi,DWORD PTR [esi+0x45ddabc4]
  41d4de:	fwait
  41d4df:	adc    eax,0x2612fb2c
  41d4e4:	pop    edx
  41d4e5:	outs   dx,BYTE PTR ds:[esi]
  41d4e6:	mov    BYTE PTR [edi],ah
  41d4e8:	xor    al,BYTE PTR [edi+0x3a]
  41d4eb:	jg     0x139efee6
  41d4f1:	inc    edx
  41d4f2:	add    eax,DWORD PTR [edi]
  41d4f4:	dec    ebp
  41d4f5:	add    BYTE PTR [edi-0x6f],0x1a
  41d4f9:	pop    ss
  41d4fa:	rcr    BYTE PTR [ebx+ebx*4-0x75],1
  41d4fe:	or     al,0x71
  41d500:	mov    edx,eax
  41d502:	test   al,0xcb
  41d504:	test   BYTE PTR [eax-0x1d],bl
  41d507:	js     0x41d4ac
  41d509:	jl     0x41d4c9
  41d50b:	jle    0x41d4d2
  41d50d:	xchg   BYTE PTR [edx+eiz*2],dh
  41d510:	nop
  41d511:	adc    al,0x58
  41d513:	shr    dl,1
  41d515:	cmp    al,0x88
  41d517:	dec    esp
  41d518:	pop    ecx
  41d519:	mov    esp,0x93819be9
  41d51e:	fidiv  DWORD PTR [edi]
  41d520:	test   ch,cl
  41d522:	retf   
  41d523:	inc    ecx
  41d524:	test   eax,0x1c40f769
  41d529:	jecxz  0x41d572
  41d52b:	rcl    DWORD PTR [ebx-0x1df5e5fd],0x95
  41d532:	into   
  41d533:	pop    ecx
  41d534:	bound  esi,QWORD PTR [ebx+0x444e1f95]
  41d53a:	and    esi,DWORD PTR [eax]
  41d53c:	mov    ebx,0xbff90a88
  41d541:	aad    0x85
  41d543:	cmp    DWORD PTR [eax],edi
  41d545:	test   BYTE PTR [edi+0x1b],al
  41d548:	adc    al,ch
  41d54a:	dec    edi
  41d54b:	fmul   DWORD PTR [ebx-0x3c]
  41d54e:	xor    dl,0xf8
  41d551:	popa   
  41d552:	xchg   BYTE PTR [ebp-0x30f0af6d],bl
  41d558:	aam    0x11
  41d55a:	or     DWORD PTR [ebp-0x1f82c69f],esp
  41d560:	test   dl,0x56
  41d563:	shl    edx,0x2e
  41d566:	fcmove st,st(5)
  41d568:	push   ecx
  41d569:	test   DWORD PTR [edx-0x10353faa],edi
  41d56f:	retf   
  41d570:	(bad)  
  41d571:	repz mov gs,eax
  41d574:	jmp    0x41d501
  41d576:	cmp    ecx,DWORD PTR [ebx-0x69]
  41d579:	cwde   
  41d57a:	call   0xb345:0x2c5dc0bb
  41d581:	fld    DWORD PTR [ebp+0x229b6490]
  41d587:	nop
  41d588:	mov    eax,0xcebccae3
  41d58d:	push   esp
  41d58e:	pop    gs
  41d590:	retf   0x52fb
  41d593:	jae    0x41d5d4
  41d595:	jne    0x41d578
  41d597:	sub    DWORD PTR [ecx+0x1b861337],edi
  41d59d:	(bad)  
  41d59e:	push   edi
  41d59f:	test   BYTE PTR [edx+ecx*2-0x3b],dl
  41d5a3:	(bad)  
  41d5a4:	(bad)  
  41d5a5:	and    ecx,ecx
  41d5a7:	add    bh,cl
  41d5a9:	mov    ss,WORD PTR [edx]
  41d5ab:	sbb    BYTE PTR [ebx],bl
  41d5ad:	cmp    esi,esi
  41d5af:	adc    DWORD PTR [esi+0x6873a741],0xef769529
  41d5b9:	mov    al,ds:0xe5f59612
  41d5be:	sub    eax,0xdd29f455
  41d5c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5c4:	and    al,0x6c
  41d5c6:	aad    0x5f
  41d5c8:	ja     0x41d63d
  41d5ca:	fisub  DWORD PTR [edx]
  41d5cc:	not    BYTE PTR [esi-0x2d]
  41d5cf:	add    DWORD PTR [eax+eiz*4-0x645aba12],esp
  41d5d6:	mov    ds:0xcdb4628c,al
  41d5db:	mov    ah,BYTE PTR [esi]
  41d5dd:	dec    ecx
  41d5de:	dec    ebx
  41d5df:	push   esi
  41d5e0:	sbb    al,0xb1
  41d5e2:	jmp    0x41d5ec
  41d5e4:	dec    esp
  41d5e5:	mov    ebx,0xc023ad88
  41d5ea:	jno    0x41d65e
  41d5ec:	repz pusha 
  41d5ee:	fwait
  41d5ef:	mov    ss,WORD PTR [edx]
  41d5f1:	arpl   di,si
  41d5f3:	sahf   
  41d5f4:	cli    
  41d5f5:	leave  
  41d5f6:	push   eax
  41d5f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5f8:	lds    ecx,FWORD PTR [eax-0x7ca3293d]
  41d5fe:	cmova  ecx,DWORD PTR [eax+0x7a129d98]
  41d605:	inc    edi
  41d606:	mov    edi,0xe3e8b87a
  41d60b:	lock (bad) 
  41d60d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d60e:	mov    dh,0x5c
  41d610:	fst    QWORD PTR [eax-0x330825f9]
  41d616:	push   ecx
  41d617:	push   es
  41d618:	es leave 
  41d61a:	shl    BYTE PTR [ecx-0x36],0x35
  41d61e:	mov    ecx,ebp
  41d620:	jbe    0x41d698
  41d622:	xchg   ecx,eax
  41d623:	stos   BYTE PTR es:[edi],al
  41d624:	mov    ebx,0xe7f4a49b
  41d629:	ins    BYTE PTR es:[edi],dx
  41d62a:	mov    ds:0xa727a64d,al
  41d62f:	jle    0x41d5f7
  41d631:	mov    ebp,0xfabe068e
  41d636:	dec    si
  41d638:	sbb    eax,0x99c0723b
  41d63d:	push   esi
  41d63e:	lock cmc 
  41d640:	sbb    bh,BYTE PTR [ebp+0x7b95eeb]
  41d646:	jg     0x41d67a
  41d648:	or     al,0x63
  41d64a:	lahf   
  41d64b:	adc    ebp,DWORD PTR [ecx-0x481b0c7c]
  41d651:	(bad)  
  41d652:	push   esp
  41d653:	xor    al,0xf6
  41d655:	push   esi
  41d656:	or     eax,0x10ec7aa1
  41d65b:	das    
  41d65c:	xor    eax,0x675098d1
  41d661:	imul   edx,esi,0x37
  41d664:	rcl    dh,0x6f
  41d667:	shl    ah,0xbe
  41d66a:	fld    QWORD PTR [eax+0x3e1c7c4]
  41d670:	daa    
  41d671:	imul   eax,esi,0x72b83e90
  41d677:	out    dx,eax
  41d678:	jne    0x41d670
  41d67a:	sub    BYTE PTR [edx-0x74],ch
  41d67d:	pop    ss
  41d67e:	pop    eax
  41d67f:	xlat   BYTE PTR ds:[ebx]
  41d680:	fisub  WORD PTR [esp+ecx*2]
  41d683:	loopne 0x41d61d
  41d685:	pushf  
  41d686:	bound  esi,QWORD PTR [edi]
  41d688:	in     al,dx
  41d689:	imul   edi,ecx,0x11ce59ba
  41d68f:	xchg   edx,eax
  41d690:	(bad)  
  41d691:	enter  0xa47d,0x39
  41d695:	lahf   
  41d696:	push   0x49
  41d698:	imul   ebp,DWORD PTR [ecx],0x4b941b37
  41d69e:	sub    BYTE PTR [eax],cl
  41d6a0:	xor    bh,BYTE PTR [eax-0x2ac36289]
  41d6a6:	sahf   
  41d6a7:	push   ecx
  41d6a8:	pushf  
  41d6a9:	add    eax,0x8d2a47c6
  41d6ae:	int3   
  41d6af:	adc    al,BYTE PTR [ebx+0x40ef0cc1]
  41d6b5:	ins    BYTE PTR es:[edi],dx
  41d6b6:	push   0xa0743b4
  41d6bb:	popa   
  41d6bc:	pop    ecx
  41d6bd:	mov    cl,0x98
  41d6bf:	push   cs
  41d6c0:	arpl   WORD PTR [edi],dx
  41d6c2:	outs   dx,BYTE PTR ds:[esi]
  41d6c3:	test   al,0x52
  41d6c5:	rcl    DWORD PTR [ecx],0x4f
  41d6c8:	arpl   WORD PTR [ebx],di
  41d6ca:	sbb    eax,0xd050d645
  41d6cf:	inc    ebp
  41d6d0:	mov    al,ds:0xab81467a
  41d6d5:	sbb    eax,ebp
  41d6d7:	push   eax
  41d6d8:	mov    bh,0x72
  41d6da:	mov    bl,BYTE PTR [ebx+0x62663e90]
  41d6e0:	pop    esi
  41d6e1:	mov    dh,0x6f
  41d6e3:	pushf  
  41d6e4:	loop   0x41d69a
  41d6e6:	or     eax,0x4d8b1a0b
  41d6eb:	inc    esp
  41d6ec:	retf   
  41d6ed:	in     eax,0x52
  41d6ef:	inc    edx
  41d6f0:	dec    esp
  41d6f1:	gs pop edx
  41d6f3:	call   0x3874:0xb30de0ec
  41d6fa:	es pop esp
  41d6fc:	jp     0x41d73e
  41d6fe:	test   DWORD PTR [ebx+ecx*8+0x76],esi
  41d702:	pushf  
  41d703:	mov    al,dh
  41d705:	jmp    0xb13eb0b3
  41d70a:	push   ss
  41d70b:	mov    ebx,0x7e3604b9
  41d710:	push   0x43
  41d712:	or     DWORD PTR [esi],ecx
  41d714:	(bad)  
  41d715:	sub    dh,BYTE PTR [ebx-0x71]
  41d718:	sbb    esp,edx
  41d71a:	daa    
  41d71b:	cmp    ch,dl
  41d71d:	icebp  
  41d71e:	mov    ch,al
  41d720:	fidivr WORD PTR [esi]
  41d722:	adc    edx,DWORD PTR [ebx+ecx*1]
  41d725:	mov    ah,BYTE PTR [edx-0x6d]
  41d728:	pushf  
  41d729:	sbb    bh,BYTE PTR [ecx+0x34]
  41d72c:	mov    ebx,0x3252732a
  41d731:	out    0x94,al
  41d733:	pop    ds
  41d734:	sub    ecx,DWORD PTR [edx-0xd]
  41d737:	call   0xf90b:0xa8e98b4c
  41d73e:	rcl    DWORD PTR [edi-0x22a6b8d3],0xe7
  41d745:	ins    DWORD PTR es:[edi],dx
  41d746:	stos   BYTE PTR es:[edi],al
  41d747:	popa   
  41d748:	adc    bh,bl
  41d74a:	dec    ebp
  41d74b:	out    dx,al
  41d74c:	cwde   
  41d74d:	add    al,0xfd
  41d74f:	fnsave [edx-0xc86aec7]
  41d755:	retf   
  41d756:	dec    edi
  41d757:	mov    bh,0xc1
  41d759:	ja     0x41d72c
  41d75b:	push   es
  41d75c:	mov    edx,0xab2984f
  41d761:	pop    ecx
  41d762:	hlt    
  41d763:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d764:	inc    edx
  41d765:	imul   esp,DWORD PTR [edx],0x3c
  41d768:	jmp    0xb3aacc9b
  41d76d:	lods   al,BYTE PTR ds:[esi]
  41d76e:	inc    edx
  41d76f:	jg     0x41d712
  41d771:	mov    al,0x50
  41d773:	call   DWORD PTR [esi+0x5a]
  41d776:	dec    eax
  41d777:	iret   
  41d778:	xchg   ecx,eax
  41d779:	nop
  41d77a:	dec    esp
  41d77b:	xchg   DWORD PTR [ecx-0x12be0fd5],esi
  41d781:	jle    0x41d74c
  41d783:	(bad)  
  41d784:	jmp    0xa00a:0xc67df6e8
  41d78b:	sub    cl,al
  41d78d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d78e:	xor    bh,BYTE PTR [edi+0x32]
  41d791:	cs aad 0xcf
  41d794:	sub    al,0x6f
  41d796:	cmp    BYTE PTR ds:0xfc7e4acc,bl
  41d79c:	sti    
  41d79d:	inc    esi
  41d79e:	mov    ds:0x3f5d278c,eax
  41d7a3:	adc    DWORD PTR [edx+0x7f71460c],ebp
  41d7a9:	jl     0x41d817
  41d7ab:	push   ebp
  41d7ac:	sbb    bl,ah
  41d7ae:	add    BYTE PTR [ecx+0x63],bh
  41d7b1:	mov    al,0xc4
  41d7b3:	or     ebx,eax
  41d7b5:	mov    cl,0x75
  41d7b7:	out    dx,eax
  41d7b8:	sub    BYTE PTR [eax+0x6c],dh
  41d7bb:	fidivr DWORD PTR [ebx]
  41d7bd:	pop    ebp
  41d7be:	test   eax,0x3d79ebba
  41d7c3:	outs   dx,DWORD PTR ds:[esi]
  41d7c4:	loopne 0x41d7fa
  41d7c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7c7:	push   0xfe693112
  41d7cc:	xlat   BYTE PTR ds:[ebx]
  41d7cd:	out    0x41,al
  41d7cf:	cwde   
  41d7d0:	or     dl,BYTE PTR [esi-0x5c]
  41d7d3:	dec    BYTE PTR [eax-0x2746c569]
  41d7d9:	push   edx
  41d7da:	mov    esp,0x2b41c815
  41d7df:	xlat   BYTE PTR ds:[ebx]
  41d7e0:	cmp    dh,BYTE PTR [edx]
  41d7e2:	add    DWORD PTR [ecx-0x136f25a9],edi
  41d7e8:	leave  
  41d7e9:	(bad)  
  41d7eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7ec:	jnp    0x41d816
  41d7ee:	fadd   DWORD PTR [esp+edx*2+0x714c3d71]
  41d7f5:	outs   dx,BYTE PTR ds:[esi]
  41d7f6:	xchg   esi,eax
  41d7f7:	xor    BYTE PTR [bp+di+0x5238],al
  41d7fc:	repnz fbld TBYTE PTR [ebx+ecx*1-0x58]
  41d801:	iret   
  41d802:	in     al,dx
  41d803:	test   al,0x3c
  41d805:	jle    0x41d789
  41d807:	je     0x41d7e9
  41d809:	repnz dec edi
  41d80b:	out    0xce,eax
  41d80d:	mov    ds:0x111aa30,al
  41d812:	push   es
  41d813:	mov    eax,0xc32b02f2
  41d818:	int    0x94
  41d81a:	pop    DWORD PTR [ecx+0x17]
  41d81d:	xchg   esp,eax
  41d81e:	or     BYTE PTR [eax],al
  41d820:	xor    DWORD PTR [ebx+0x5d],edx
  41d823:	sbb    al,0x1f
  41d825:	popa   
  41d826:	lods   al,BYTE PTR ds:[esi]
  41d827:	push   ebp
  41d828:	xlat   BYTE PTR ds:[ebx]
  41d829:	push   ebx
  41d82a:	lods   al,BYTE PTR ds:[esi]
  41d82b:	cwde   
  41d82c:	retf   
  41d82d:	push   ebx
  41d82e:	(bad)  
  41d82f:	cmp    al,0xc6
  41d831:	push   esi
  41d832:	push   ecx
  41d833:	xor    al,0xfa
  41d835:	je     0x41d7c0
  41d837:	or     ch,cl
  41d839:	inc    edx
  41d83a:	mov    ah,0x7d
  41d83c:	sbb    cl,BYTE PTR [esi+0x44b639b3]
  41d842:	ret    
  41d843:	mov    edx,0x5f99faaa
  41d848:	sbb    al,0xbc
  41d84a:	push   ebp
  41d84b:	xchg   esi,eax
  41d84c:	jno    0x41d859
  41d84e:	ror    BYTE PTR [edi],1
  41d850:	pusha  
  41d851:	jb     0x41d83b
  41d853:	rcr    DWORD PTR [edi-0x63871561],0x78
  41d85a:	xchg   ebx,eax
  41d85b:	mov    eax,ds:0xd374587b
  41d860:	cmp    eax,0x38f6f471
  41d865:	xor    cl,ch
  41d867:	or     dl,BYTE PTR [edx-0x70ec3b38]
  41d86d:	push   ecx
  41d86e:	in     al,dx
  41d86f:	frstor [esi-0x745b824a]
  41d875:	mov    DWORD PTR [ebx-0x7046d13e],0xa94d44e1
  41d87f:	lahf   
  41d880:	pop    ebp
  41d881:	std    
  41d882:	lahf   
  41d883:	or     eax,0x2d650240
  41d888:	jecxz  0x41d87a
  41d88a:	leave  
  41d88b:	(bad)  
  41d88c:	cwde   
  41d88d:	popa   
  41d88e:	iret   
  41d88f:	popa   
  41d890:	sub    BYTE PTR [edx],bh
  41d892:	in     eax,0x46
  41d894:	add    eax,0x704e3c1f
  41d899:	stos   BYTE PTR es:[edi],al
  41d89a:	dec    esp
  41d89b:	jne    0x41d865
  41d89d:	push   edx
  41d89e:	dec    edi
  41d89f:	addr16 dec edx
  41d8a1:	fild   WORD PTR [ebp+0x676cf4e6]
  41d8a7:	inc    ecx
  41d8a8:	dec    edx
  41d8a9:	lahf   
  41d8aa:	sbb    esi,ebp
  41d8ac:	jl     0x41d928
  41d8ae:	data16 loope 0x41d8d8
  41d8b1:	push   edx
  41d8b2:	out    0x2a,eax
  41d8b4:	or     al,0x3b
  41d8b6:	pop    eax
  41d8b7:	cwde   
  41d8b8:	loope  0x41d8e7
  41d8ba:	sbb    al,0x3b
  41d8bc:	out    dx,al
  41d8bd:	mov    ds:0x35f92e78,eax
  41d8c2:	mov    dh,dh
  41d8c4:	add    eax,0x25c977c6
  41d8c9:	mov    eax,ds:0x1c3153a2
  41d8ce:	sub    bh,dl
  41d8d0:	daa    
  41d8d1:	xchg   ecx,eax
  41d8d2:	bound  edi,QWORD PTR [esi+0x6]
  41d8d5:	sub    BYTE PTR ds:0x26abc21c,bl
  41d8db:	xchg   esp,eax
  41d8dc:	sbb    eax,0x24aa002a
  41d8e1:	pushf  
  41d8e2:	ror    BYTE PTR [eax+0xb],1
  41d8e5:	scas   eax,DWORD PTR es:[edi]
  41d8e6:	lock jbe 0x41d8c9
  41d8e9:	dec    bx
  41d8eb:	and    bh,dh
  41d8ed:	mov    ah,0x46
  41d8ef:	mov    ebx,0xc934f66e
  41d8f4:	jnp    0x41d8b5
  41d8f6:	inc    esi
  41d8f7:	jmp    0x3b68168e
  41d8fc:	cmc    
  41d8fd:	mov    ah,0x2c
  41d8ff:	dec    esi
  41d900:	aam    0xda
  41d902:	out    dx,al
  41d903:	mov    dh,BYTE PTR [esi]
  41d905:	faddp  st(3),st
  41d907:	mov    bl,0xe
  41d909:	test   al,0x21
  41d90b:	cmp    dh,BYTE PTR gs:[edx-0x656022d6]
  41d912:	imul   edx,DWORD PTR [ecx+0x3c],0x8594e369
  41d919:	pop    ecx
  41d91a:	mov    ds,WORD PTR [ebx+0x27f5de81]
  41d920:	scas   eax,DWORD PTR es:[edi]
  41d921:	mov    dh,BYTE PTR [ebx-0x2]
  41d924:	pop    es
  41d925:	in     al,0xf1
  41d927:	jmp    0x41d95d
  41d929:	add    eax,DWORD PTR [ebx]
  41d92b:	div    ebx
  41d92d:	xor    BYTE PTR [edx-0x5c755977],0x71
  41d934:	rol    DWORD PTR [edx],cl
  41d936:	cmp    DWORD PTR [esi+0x3cebdb47],eax
  41d93c:	rol    edx,cl
  41d93e:	xor    dh,al
  41d940:	lods   al,BYTE PTR ds:[esi]
  41d941:	inc    ebx
  41d942:	sbb    edx,eax
  41d944:	jnp    0x41d91c
  41d946:	enter  0xe63f,0x4f
  41d94a:	add    eax,0x19603620
  41d94f:	xchg   edi,eax
  41d950:	and    eax,0x35f471a9
  41d955:	test   BYTE PTR [ecx],dl
  41d957:	sub    eax,0xa4c2b122
  41d95c:	mov    ah,0xa1
  41d95e:	fistp  WORD PTR [esi+eiz*2-0x43]
  41d962:	inc    edi
  41d963:	and    DWORD PTR [edx+0x1656b831],ebp
  41d969:	retf   0xaa30
  41d96c:	xor    ebx,ebp
  41d96e:	push   edx
  41d96f:	clc    
  41d970:	or     BYTE PTR [esi-0x4e3d5fdf],ch
  41d976:	mov    es,WORD PTR gs:[esi-0x50]
  41d97a:	sbb    eax,0xdfa5ee41
  41d97f:	xor    al,BYTE PTR [ebx]
  41d981:	push   esi
  41d982:	mov    al,0xb1
  41d984:	adc    BYTE PTR [edi+ebx*8+0xb],0x62
  41d989:	daa    
  41d98a:	push   esp
  41d98b:	scas   al,BYTE PTR es:[edi]
  41d98c:	dec    ebx
  41d98d:	in     al,0x58
  41d98f:	pop    ebx
  41d990:	pop    ecx
  41d992:	dec    ecx
  41d993:	pop    edx
  41d994:	sahf   
  41d995:	push   esp
  41d996:	or     esi,ecx
  41d998:	inc    edx
  41d999:	inc    ecx
  41d99a:	data16 jge 0x41d978
  41d99d:	cmp    eax,0xd69b7756
  41d9a2:	scas   eax,DWORD PTR es:[edi]
  41d9a3:	and    BYTE PTR [edi+0x2],ch
  41d9a6:	fs scas al,BYTE PTR es:[edi]
  41d9a8:	sbb    bh,BYTE PTR [ecx-0x4b607e47]
  41d9ae:	fs dec eax
  41d9b0:	xor    eax,0xc404129c
  41d9b5:	jl     0x41d9af
  41d9b7:	push   eax
  41d9b8:	mov    dl,0xc
  41d9bb:	mov    esi,0x23da1335
  41d9c0:	pop    ecx
  41d9c1:	test   al,0x53
  41d9c3:	das    
  41d9c4:	push   esi
  41d9c5:	jge    0x41d9b6
  41d9c7:	adc    BYTE PTR [ebp-0xaafe130],bl
  41d9cd:	jnp    0x41d993
  41d9cf:	outs   dx,DWORD PTR ds:[esi]
  41d9d0:	loop   0x41d9f1
  41d9d2:	ror    BYTE PTR [eax+ebp*1],1
  41d9d5:	lods   al,BYTE PTR ds:[esi]
  41d9d6:	fbld   TBYTE PTR [eax+ebp*2-0x3f]
  41d9da:	lds    ecx,FWORD PTR [ebp-0x24df153d]
  41d9e0:	ficomp WORD PTR [ebx-0x2a]
  41d9e3:	daa    
  41d9e4:	std    
  41d9e5:	push   esp
  41d9e6:	xchg   BYTE PTR [ebp-0x2c],cl
  41d9e9:	stos   DWORD PTR es:[edi],eax
  41d9ea:	mov    bh,BYTE PTR [edx+0x43ffbdb7]
  41d9f0:	jp     0x41da39
  41d9f2:	int    0x81
  41d9f4:	mov    eax,0x2c55a7dc
  41d9f9:	sbb    edi,ebp
  41d9fb:	loope  0x41da26
  41d9fd:	lock loope 0x41d9cf
  41da00:	xchg   DWORD PTR [ecx],esp
  41da02:	aas    
  41da03:	adc    edx,DWORD PTR ss:[edi+0x23]
  41da07:	out    0x59,al
  41da09:	popf   
  41da0a:	shl    BYTE PTR [ecx-0x4d],cl
  41da0d:	fcom   QWORD PTR [esi+ebx*8]
  41da10:	fdiv   QWORD PTR [esi]
  41da12:	jb     0x41d9e4
  41da14:	ins    DWORD PTR es:[edi],dx
  41da15:	and    ebp,ebx
  41da17:	xor    cl,dl
  41da19:	stos   DWORD PTR es:[edi],eax
  41da1a:	ss fs sub eax,0xd2617127
  41da21:	sub    ebp,DWORD PTR [eax+0x21368fe8]
  41da27:	push   ss
  41da28:	cmp    eax,0x23162438
  41da2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da2e:	ret    
  41da2f:	or     DWORD PTR [ecx-0x46],edx
  41da32:	int3   
  41da33:	ins    DWORD PTR es:[edi],dx
  41da34:	xchg   BYTE PTR ds:0xf112d220,ah
  41da3a:	leave  
  41da3b:	gs pop ecx
  41da3d:	jnp    0x41da16
  41da3f:	mov    esi,0x8b1bb9a4
  41da44:	clc    
  41da45:	imul   edi,DWORD PTR [esi-0x2f],0xffffffc0
  41da49:	shl    BYTE PTR [esi+0x2a],1
  41da4c:	repz fs pop edi
  41da4f:	cmc    
  41da50:	call   FWORD PTR [ebp-0x62131f49]
  41da56:	stc    
  41da57:	fistp  WORD PTR [esp+edi*2+0x2d]
  41da5b:	mov    WORD PTR ds:0xf611aa53,?
  41da61:	call   0x1658:0x1e0e64d0
  41da68:	cmp    al,0x7f
  41da6a:	jnp    0x41da68
  41da6c:	push   ss
  41da6d:	imul   edx,DWORD PTR [edx+0x2a93eeba],0xffffffe4
  41da74:	cmp    ah,BYTE PTR [ecx]
  41da76:	jbe    0x41da50
  41da78:	mov    al,0xca
  41da7a:	rol    BYTE PTR ds:0xa9003c48,1
  41da80:	retf   
  41da81:	lods   eax,DWORD PTR ds:[esi]
  41da82:	in     eax,0xaf
  41da84:	xchg   esi,eax
  41da85:	shl    BYTE PTR [edx+ebx*2],1
  41da88:	repnz xchg esp,eax
  41da8a:	dec    ecx
  41da8b:	push   ebp
  41da8c:	stos   BYTE PTR es:[edi],al
  41da8d:	mov    al,0xa3
  41da8f:	push   esi
  41da90:	test   ebx,ebp
  41da92:	ror    ah,1
  41da94:	shr    BYTE PTR [ebx],cl
  41da96:	pop    ebx
  41da97:	call   0x5a6f:0x39570e33
  41da9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da9f:	xchg   ecx,eax
  41daa0:	std    
  41daa1:	cdq    
  41daa2:	pop    ebx
  41daa3:	test   bh,ch
  41daa5:	cli    
  41daa6:	pushf  
  41daa7:	jno    0x41da77
  41daa9:	mov    ecx,edx
  41daab:	jmp    0x6bd5:0x7f8f760c
  41dab2:	pop    ecx
  41dab3:	addr16 sbb al,0xc1
  41dab6:	test   DWORD PTR [ecx+eax*2],ebp
  41dab9:	xor    dl,0xbd
  41dabc:	fldcw  WORD PTR [esi+edx*1-0x54]
  41dac0:	call   0xe59a:0xe0d8c16d
  41dac7:	mov    WORD PTR [ecx-0x40],?
  41daca:	mov    edx,0xa5f2acd6
  41dacf:	and    BYTE PTR [edi+0xc],bh
  41dad2:	cmp    al,0x32
  41dad4:	mov    ebp,0x269db5e1
  41dad9:	sti    
  41dada:	cmp    edx,DWORD PTR [ebx+0x43c83fad]
  41dae0:	arpl   WORD PTR [ecx+0x44],sp
  41dae3:	jle    0x41daf1
  41dae5:	mov    ds:0xfa9c4f38,eax
  41daea:	sbb    ebp,DWORD PTR [edx-0x1f0002ab]
  41daf0:	jmp    0x38e:0xb0e9cfa6
  41daf7:	pop    edx
  41daf8:	xor    BYTE PTR [edx-0x2c],dl
  41dafb:	cld    
  41dafc:	add    ah,0xab
  41daff:	bound  esp,QWORD PTR [edx+0x41f0f470]
  41db05:	push   edi
  41db06:	icebp  
  41db07:	add    DWORD PTR [ebx-0x3a],eax
  41db0a:	jg     0x41dabf
  41db0c:	jnp    0x41db16
  41db0e:	(bad)  
  41db0f:	jmp    0x73509781
  41db14:	push   ds
  41db15:	or     BYTE PTR [edx-0x2d],dl
  41db18:	jge    0x41daec
  41db1a:	xchg   esp,eax
  41db1b:	sbb    ebp,DWORD PTR ds:0x1dc3c340
  41db21:	pop    DWORD PTR [eax*2-0x66393c81]
  41db28:	adc    BYTE PTR es:[ebp-0x74],dh
  41db2c:	inc    eax
  41db2d:	icebp  
  41db2e:	or     ebx,edx
  41db30:	pop    esi
  41db31:	sbb    DWORD PTR [eax],ecx
  41db33:	out    0x93,eax
  41db35:	cld    
  41db36:	sbb    eax,0xaa185948
  41db3b:	fidiv  DWORD PTR [edi+0x42]
  41db3e:	adc    al,0xd1
  41db40:	lock mov ah,0xff
  41db43:	or     al,0xdf
  41db45:	out    0xf5,eax
  41db47:	xchg   esi,eax
  41db48:	cmp    ecx,ebx
  41db4a:	sub    al,0x60
  41db4c:	in     al,0xa0
  41db4e:	cmp    eax,0xa7c8914c
  41db53:	out    dx,eax
  41db54:	popa   
  41db55:	xor    al,0x97
  41db57:	pop    ecx
  41db58:	(bad)  
  41db59:	or     ebx,esp
  41db5b:	vpcmov ymm2,ymm1,ymm3,YMMWORD PTR [ecx+0x25b975eb]
  41db65:	and    BYTE PTR [edx+0x67d05ce6],ah
  41db6b:	dec    edi
  41db6c:	mov    ebp,0x6a3523e
  41db71:	mov    WORD PTR [ebp-0x54acffd8],ds
  41db77:	jmp    0xe26e42dd
  41db7c:	cmp    eax,0xb72e7c7f
  41db81:	xor    eax,0x87882244
  41db86:	test   DWORD PTR [edx+ebx*2-0x79ce30aa],0x68140e88
  41db91:	in     eax,0x87
  41db93:	rcr    BYTE PTR [edx],0xd8
  41db96:	mov    eax,0x49bbf1d0
  41db9b:	out    dx,al
  41db9c:	fisub  DWORD PTR [edx+0x261993aa]
  41dba2:	add    ecx,ebx
  41dba4:	and    al,0xf8
  41dba6:	pop    ebp
  41dba7:	adc    al,0xf0
  41dba9:	popf   
  41dbaa:	mov    ds:0x59d36ae4,eax
  41dbaf:	pop    ss
  41dbb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbb1:	sbb    DWORD PTR [ecx+0x58116ced],ebp
  41dbb7:	mov    bh,0xa4
  41dbb9:	clc    
  41dbba:	push   cs
  41dbbb:	imul   dl
  41dbbd:	push   edx
  41dbbe:	loop   0x41dbf2
  41dbc0:	pop    ecx
  41dbc1:	sbb    DWORD PTR [edi-0x235eb568],esi
  41dbc7:	out    dx,eax
  41dbc8:	dec    edx
  41dbc9:	or     al,0xee
  41dbcb:	hlt    
  41dbcc:	mov    dh,0x19
  41dbce:	pop    ss
  41dbcf:	lods   al,BYTE PTR ds:[esi]
  41dbd0:	fiadd  WORD PTR [esi-0x429bc39f]
  41dbd6:	sub    edi,DWORD PTR [edi]
  41dbd8:	xchg   edx,eax
  41dbd9:	das    
  41dbda:	mov    BYTE PTR ds:0x6d073234,ah
  41dbe0:	mov    esi,0x59a37146
  41dbe5:	inc    edx
  41dbe6:	leavew 
  41dbe8:	scas   al,BYTE PTR es:[edi]
  41dbe9:	or     cl,BYTE PTR [edx-0x7e]
  41dbec:	sub    DWORD PTR [ebx-0x40ede1a9],edx
  41dbf2:	fimul  DWORD PTR [edx-0x715c0c6a]
  41dbf8:	add    al,0xa4
  41dbfa:	retf   0x358a
  41dbfd:	popa   
  41dbfe:	cmp    eax,0x61d01e45
  41dc03:	retf   
  41dc04:	arpl   WORD PTR [edx+ebp*2+0x3490f0b5],dx
  41dc0b:	cmp    ebp,edx
  41dc0d:	out    dx,al
  41dc0e:	shl    BYTE PTR [edx+0x70],0xd7
  41dc12:	cdq    
  41dc13:	and    DWORD PTR [ebp-0x1c3dd2ae],eax
  41dc19:	and    ch,dl
  41dc1b:	sbb    al,0x62
  41dc1d:	pop    edi
  41dc1e:	popa   
  41dc1f:	loop   0x41dc53
  41dc21:	lea    edi,[ebp+0x516ab9d]
  41dc27:	(bad)  
  41dc28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc29:	sub    cl,0xa6
  41dc2c:	aas    
  41dc2d:	add    al,0x31
  41dc2f:	add    BYTE PTR [eax],ah
  41dc31:	aaa    
  41dc32:	shl    BYTE PTR [ebx],cl
  41dc34:	out    0x36,eax
  41dc36:	cmp    BYTE PTR [edx-0x4f],ch
  41dc39:	outs   dx,BYTE PTR ds:[esi]
  41dc3a:	pop    eax
  41dc3b:	jae    0x41dcbb
  41dc3d:	mov    WORD PTR [ebx+esi*1-0x59e5bc71],ds
  41dc44:	test   DWORD PTR ds:0xfeefe29a,ebp
  41dc4a:	pushf  
  41dc4b:	stc    
  41dc4c:	jecxz  0x41dc60
  41dc4e:	repz cdq 
  41dc50:	mov    esi,0x532bfaea
  41dc55:	fldcw  WORD PTR [edi+0x6f533552]
  41dc5b:	and    eax,0x52c6c362
  41dc60:	pop    ecx
  41dc61:	pop    edi
  41dc62:	inc    ebp
  41dc63:	aad    0x33
  41dc65:	push   cs
  41dc66:	fwait
  41dc67:	ins    BYTE PTR es:[edi],dx
  41dc68:	jecxz  0x41dc44
  41dc6a:	jmp    0x188edfa9
  41dc6f:	stos   DWORD PTR es:[edi],eax
  41dc70:	outs   dx,BYTE PTR ds:[esi]
  41dc71:	adc    edx,DWORD PTR [ebx]
  41dc73:	inc    esp
  41dc74:	or     eax,DWORD PTR [esi-0x2d]
  41dc77:	mov    ds:0xebc83fee,eax
  41dc7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc7d:	rcl    bl,0x79
  41dc80:	fst    QWORD PTR [edx-0x31]
  41dc83:	int    0xc9
  41dc85:	pop    edx
  41dc86:	sub    bh,cl
  41dc88:	idiv   BYTE PTR [eax+0x2e258150]
  41dc8e:	fdiv   st,st(6)
  41dc90:	aam    0xaf
  41dc92:	push   ebp
  41dc93:	daa    
  41dc94:	aam    0xbc
  41dc96:	bound  ebp,QWORD PTR [ebp-0x24e8f80d]
  41dc9c:	add    dl,al
  41dc9e:	and    al,0xec
  41dca0:	or     eax,0x91878706
  41dca5:	ds xchg esp,eax
  41dca7:	mov    ebp,0x72164c75
  41dcac:	xlat   BYTE PTR ds:[ebx]
  41dcad:	xor    BYTE PTR [ebp+0xcffaf91],0x30
  41dcb4:	clc    
  41dcb5:	les    esp,FWORD PTR [esi]
  41dcb7:	mov    esi,0x2e27da30
  41dcbc:	mov    bh,0xe2
  41dcbe:	(bad)  
  41dcbf:	retf   0x8dc9
  41dcc2:	pop    ds
  41dcc3:	lahf   
  41dcc4:	(bad)  
  41dcc5:	mov    cl,0xd6
  41dcc7:	mov    esp,0xde7cddd8
  41dccc:	sbb    bl,bl
  41dcce:	fldcw  WORD PTR [eax+0x53]
  41dcd1:	lods   al,BYTE PTR ds:[esi]
  41dcd2:	stos   BYTE PTR es:[edi],al
  41dcd3:	jp     0x41dd0c
  41dcd5:	jecxz  0x41dc92
  41dcd7:	mov    dl,0xc4
  41dcd9:	fstp   QWORD PTR [ecx*1+0x5d97bdf6]
  41dce0:	jo     0x41dca5
  41dce2:	fiadd  WORD PTR [ebx-0x26]
  41dce5:	pop    ebx
  41dce6:	scas   ax,WORD PTR es:[edi]
  41dce8:	sbb    al,bh
  41dcea:	popf   
  41dceb:	stc    
  41dcec:	inc    edi
  41dced:	dec    esp
  41dcee:	stc    
  41dcef:	jb     0x41dcd2
  41dcf1:	aas    
  41dcf2:	adc    DWORD PTR [eax],ebp
  41dcf4:	int    0xca
  41dcf6:	outs   dx,BYTE PTR fs:[esi]
  41dcf8:	jmp    0x4782066c
  41dcfd:	pusha  
  41dcfe:	sbb    esi,DWORD PTR [edi+0x4f]
  41dd01:	lock mov dl,0x56
  41dd04:	retf   0x7f50
  41dd07:	dec    esi
  41dd08:	inc    esi
  41dd09:	sbb    BYTE PTR [ebp+0x46a05837],dl
  41dd0f:	xchg   ebx,eax
  41dd10:	and    al,dl
  41dd12:	fs cmp al,0x22
  41dd15:	sub    al,0xf3
  41dd17:	or     eax,0x1ed8fff1
  41dd1c:	(bad)  
  41dd1e:	into   
  41dd1f:	(bad)
  41dd22:	cmp    al,0x78
  41dd24:	xor    eax,0x8ba2883f
  41dd29:	icebp  
  41dd2a:	icebp  
  41dd2b:	jne    0x41dcc8
  41dd2d:	xchg   esi,eax
  41dd2e:	sbb    BYTE PTR [ebp-0x4b],ch
  41dd31:	call   0xc930ea14
  41dd36:	inc    edi
  41dd37:	scas   eax,DWORD PTR es:[edi]
  41dd38:	and    DWORD PTR [esi],ecx
  41dd3a:	pop    edx
  41dd3b:	and    DWORD PTR [esp+eax*8+0x6c],esi
  41dd3f:	shld   DWORD PTR [ebp+0x65],ebp,0x69
  41dd44:	retf   
  41dd45:	jg     0x41dd40
  41dd47:	mov    eax,ds:0x42cb1fef
  41dd4c:	mov    ah,0xa1
  41dd4e:	and    eax,0xcd3c4a2d
  41dd53:	push   cs
  41dd54:	(bad)  
  41dd56:	dec    ecx
  41dd57:	add    al,0x4b
  41dd59:	int3   
  41dd5a:	jl     0x41dd97
  41dd5c:	iret   
  41dd5d:	nop
  41dd5e:	dec    esp
  41dd5f:	(bad)  
  41dd60:	out    dx,eax
  41dd61:	jl     0x41ddcd
  41dd63:	popa   
  41dd64:	push   edi
  41dd65:	mov    al,ds:0x7373feed
  41dd6a:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd6c:	repnz scas eax,DWORD PTR es:[edi]
  41dd6e:	cmp    al,0x8a
  41dd70:	in     al,dx
  41dd71:	jae    0x41dd0f
  41dd73:	xchg   ecx,eax
  41dd74:	ret    0x2152
  41dd77:	sar    BYTE PTR [edx],1
  41dd79:	jl     0x41ddc3
  41dd7b:	sub    ebx,ebx
  41dd7d:	inc    ebx
  41dd7e:	and    eax,0xeee2c8b3
  41dd83:	cld    
  41dd84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd85:	sub    DWORD PTR [ecx+0x742fbda],esp
  41dd8b:	std    
  41dd8c:	inc    eax
  41dd8d:	pop    ebp
  41dd8e:	push   edi
  41dd8f:	xor    eax,0xa263f3c3
  41dd94:	fidivr WORD PTR [edx]
  41dd96:	xchg   esi,eax
  41dd97:	mov    dl,0x69
  41dd99:	aaa    
  41dd9a:	and    al,0xb5
  41dd9c:	and    al,0x29
  41dd9e:	fdiv   st,st(1)
  41dda0:	dec    ebx
  41dda1:	hlt    
  41dda2:	ss aaa 
  41dda4:	fs or  eax,0x67c228b9
  41ddaa:	mov    cl,0xb4
  41ddac:	cdq    
  41ddad:	fstp   TBYTE PTR [esi-0x7f84ebdd]
  41ddb3:	mov    eax,esp
  41ddb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ddb6:	mov    ebx,0x9c8f181
  41ddbb:	dec    esi
  41ddbc:	adc    BYTE PTR [ecx-0xe039a90],al
  41ddc2:	sub    al,0xfc
  41ddc4:	cmp    eax,0x6aa20a19
  41ddc9:	cmp    al,0x7
  41ddcb:	test   BYTE PTR [ebx+edi*8+0xa],0xa0
  41ddd0:	add    eax,0x605435fa
  41ddd5:	and    BYTE PTR cs:[ecx-0x536b70a2],cl
  41dddc:	cmp    DWORD PTR [eax],esi
  41ddde:	mov    esi,0x648c4fa0
  41dde3:	(bad)  
  41dde4:	push   cs
  41dde5:	fsub   DWORD PTR [eax-0x4686f695]
  41ddeb:	leave  
  41ddec:	test   al,0xff
  41ddee:	pop    ebp
  41ddef:	aam    0x4
  41ddf1:	xchg   edi,eax
  41ddf2:	mov    ?,WORD PTR [ebx]
  41ddf4:	ins    BYTE PTR es:[edi],dx
  41ddf5:	sbb    bl,al
  41ddf7:	pop    esi
  41ddf8:	add    ebx,DWORD PTR [esi-0x2d]
  41ddfb:	pop    ebx
  41ddfc:	jbe    0x41ddc1
  41ddfe:	jbe    0x41ddfd
  41de00:	outs   dx,BYTE PTR ds:[esi]
  41de01:	scas   eax,DWORD PTR es:[edi]
  41de02:	call   0x9f7d:0x5dbde115
  41de09:	and    BYTE PTR [edx],0xd4
  41de0c:	nop
  41de0d:	xor    DWORD PTR [ecx+0x694f3601],ecx
  41de13:	xchg   ebx,eax
  41de14:	clc    
  41de15:	or     BYTE PTR [edx+0x39630303],al
  41de1b:	das    
  41de1c:	mov    ah,0xf6
  41de1e:	call   0xd2df398a
  41de23:	or     bl,BYTE PTR [ecx+0x38]
  41de26:	xchg   bl,bl
  41de28:	and    eax,0xbdbe7c4b
  41de2d:	jge    0x41dea9
  41de2f:	nop
  41de30:	jns    0x41de46
  41de32:	inc    eax
  41de33:	(bad)  
  41de35:	fcmove st,st(5)
  41de37:	clc    
  41de38:	test   DWORD PTR [edi],0xd138ec8a
  41de3e:	nop
  41de3f:	push   eax
  41de40:	pop    es
  41de41:	adc    ah,BYTE PTR [ecx]
  41de43:	xor    ch,BYTE PTR [edx+0x3d]
  41de46:	test   eax,0xbf888fc1
  41de4b:	jl     0x41deb0
  41de4d:	lods   al,BYTE PTR ds:[esi]
  41de4e:	push   0x4d
  41de50:	push   cs
  41de51:	mov    edi,0xf147a452
  41de56:	sub    eax,0x58127de7
  41de5b:	push   0xfffffffb
  41de5d:	aad    0x30
  41de5f:	rcl    DWORD PTR [ecx-0x20],0x53
  41de63:	arpl   WORD PTR [ebx],ax
  41de65:	xor    dh,BYTE PTR [edi+0x6d]
  41de68:	sahf   
  41de69:	sub    dh,BYTE PTR [eax+0x4c]
  41de6c:	cmp    al,0xc3
  41de6e:	mov    esi,DWORD PTR [esi-0x637bf5df]
  41de74:	mov    eax,ds:0xe6065a14
  41de79:	repnz mov edx,0xc5450221
  41de7f:	shl    ah,0x22
  41de82:	fsubr  QWORD PTR [edx+0x11]
  41de85:	loop   0x41dec5
  41de87:	sbb    DWORD PTR [esi+0x8c2c17e],eax
  41de8d:	xchg   DWORD PTR [esi+ebx*1+0x11a83086],eax
  41de94:	fbld   TBYTE PTR [esi]
  41de96:	jnp    0x41dec2
  41de98:	and    al,0x9d
  41de9a:	lods   al,BYTE PTR ds:[esi]
  41de9b:	push   ebp
  41de9c:	int    0xd9
  41de9e:	sbb    DWORD PTR [ecx+edx*8],ebp
  41dea1:	add    dh,al
  41dea3:	mov    eax,ds:0xa5753e43
  41dea8:	mov    dl,0x58
  41deaa:	ficom  DWORD PTR [ebp-0x5c]
  41dead:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41deae:	lahf   
  41deaf:	std    
  41deb0:	xchg   ecx,eax
  41deb1:	popf   
  41deb2:	pop    ecx
  41deb3:	test   BYTE PTR [ecx],al
  41deb5:	fsubr  QWORD PTR [esi-0x2c]
  41deb8:	or     BYTE PTR [edx+edx*4+0x36a8bd9],ch
  41debf:	out    dx,eax
  41dec0:	(bad)  
  41dec2:	es sub al,0x3a
  41dec5:	mov    ah,dh
  41dec7:	mov    ecx,ebx
  41dec9:	pop    ss
  41deca:	test   al,0x1b
  41decc:	test   DWORD PTR [ebx],ebp
  41dece:	push   eax
  41decf:	dec    ecx
  41ded0:	out    dx,al
  41ded1:	and    DWORD PTR [ecx+0x56],edx
  41ded4:	popf   
  41ded5:	push   ss
  41ded6:	sub    BYTE PTR [edx],ah
  41ded8:	mov    edi,0x8eac3aac
  41dedd:	je     0x41def4
  41dedf:	dec    edx
  41dee0:	lea    esp,[ebx-0x3e]
  41dee3:	(bad)  
  41dee4:	adc    eax,0x9d1f4db2
  41dee9:	jmp    0x48e01d5b
  41deee:	repnz in eax,0xa2
  41def1:	or     eax,0x984fd3d9
  41def6:	test   esi,ecx
  41def8:	(bad)  
  41def9:	rcl    DWORD PTR [edx+ebx*4-0x7f],cl
  41defd:	popa   
  41defe:	pushf  
  41deff:	neg    DWORD PTR [ebp+0x20]
  41df02:	inc    edi
  41df03:	and    al,0x74
  41df05:	adc    eax,DWORD PTR [edi+0xe9ee30d]
  41df0b:	inc    ebx
  41df0c:	mov    ebx,0x600ce3f0
  41df11:	fdivr  QWORD PTR [edx+ecx*1+0x47]
  41df15:	dec    ebp
  41df16:	pushf  
  41df17:	mov    dl,0xc6
  41df19:	jnp    0x41df73
  41df1b:	pop    esi
  41df1c:	sbb    DWORD PTR [ebx+0x33],edx
  41df1f:	push   ebx
  41df20:	out    dx,eax
  41df21:	lahf   
  41df22:	mov    bl,0x23
  41df24:	and    eax,0xf7732fb8
  41df29:	xchg   ecx,eax
  41df2a:	popa   
  41df2b:	jp     0x41df6c
  41df2d:	pushaw 
  41df2f:	inc    ecx
  41df30:	test   al,0xb9
  41df32:	jno    0x41df2b
  41df34:	cmp    bh,BYTE PTR [eax-0x7e]
  41df37:	xor    DWORD PTR [esi+0x385d4ad4],edi
  41df3d:	mov    dh,0xf6
  41df3f:	fisub  DWORD PTR fs:[esi-0x20]
  41df43:	mov    bl,0xf8
  41df45:	mov    al,ds:0x402d7caf
  41df4a:	pop    edx
  41df4b:	xchg   DWORD PTR [edi-0x12],esp
  41df4e:	(bad)  
  41df4f:	out    0x2c,eax
  41df51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df52:	sub    DWORD PTR [esi+0x4fe369b8],esi
  41df58:	xchg   edx,eax
  41df59:	mov    cl,0x23
  41df5b:	test   eax,0x5ab7b88a
  41df60:	(bad)  
  41df61:	das    
  41df62:	mov    ebx,0x91b77fb4
  41df67:	arpl   WORD PTR [edi+0x0],sp
  41df6a:	fsubr  QWORD PTR [edx+0x59]
  41df6d:	sbb    ch,dh
  41df6f:	jp     0x41dfe5
  41df71:	mov    al,0x3c
  41df73:	dec    ebp
  41df74:	cdq    
  41df75:	sub    eax,0xa8fc27e2
  41df7a:	stc    
  41df7b:	fidiv  DWORD PTR [ebx+0x2f839fc0]
  41df81:	loope  0x41df0e
  41df83:	mov    al,0x40
  41df85:	aas    
  41df86:	popa   
  41df87:	(bad)
  41df8b:	sub    edi,edx
  41df8d:	xor    eax,0xc89cb059
  41df92:	push   edi
  41df93:	add    esp,DWORD PTR cs:[esi+eax*8+0x55]
  41df98:	sbb    al,0x9c
  41df9a:	ins    DWORD PTR es:[edi],dx
  41df9b:	test   al,0xf0
  41df9d:	test   BYTE PTR [ebp-0x1e],cl
  41dfa0:	pusha  
  41dfa1:	push   esi
  41dfa2:	and    bh,0x10
  41dfa5:	or     eax,0xc0eb31e4
  41dfaa:	fs hlt 
  41dfac:	jne    0x41df85
  41dfae:	mov    ds:0x8283cb08,eax
  41dfb3:	xor    DWORD PTR [esi],0x7f4a6be6
  41dfb9:	fincstp 
  41dfbb:	xchg   BYTE PTR ds:[ebx-0x7b],dh
  41dfbf:	fisttp WORD PTR [eax+edi*4+0x1a]
  41dfc3:	in     al,dx
  41dfc4:	jmp    0xb6e8b772
  41dfc9:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41dfcb:	inc    BYTE PTR [eax-0x42]
  41dfce:	add    eax,0x176365c
  41dfd3:	mov    bl,0xe7
  41dfd5:	and    BYTE PTR [ebx+edi*4+0x22],al
  41dfd9:	test   cl,ah
  41dfdb:	xchg   esp,eax
  41dfdc:	stos   DWORD PTR es:[edi],eax
  41dfdd:	mov    ebp,eax
  41dfdf:	cld    
  41dfe0:	neg    DWORD PTR [edx]
  41dfe2:	xchg   ecx,eax
  41dfe3:	fisttp WORD PTR [ecx+0x6d]
  41dfe6:	push   ds
  41dfe7:	jle    0x41dfab
  41dfe9:	rcl    BYTE PTR [esp+edx*4-0x60044c75],cl
  41dff0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dff1:	sub    al,0x5
  41dff3:	das    
  41dff4:	cmp    al,0x1e
  41dff6:	mov    eax,DWORD PTR [edi+edx*1+0x591bd4ac]
  41dffd:	fistp  QWORD PTR [ebx+0xbc42a93]
  41e003:	xor    eax,0xd8a95450
  41e008:	rcr    DWORD PTR [ecx-0x3f1c4c04],cl
  41e00e:	dec    ebx
  41e00f:	aas    
  41e010:	out    dx,eax
  41e011:	mov    al,0x24
  41e013:	or     eax,0x2c5183b3
  41e018:	push   ebp
  41e019:	adc    eax,DWORD PTR ss:[edx-0x7e049210]
  41e020:	shl    BYTE PTR [esi+0x43],cl
  41e023:	pop    edi
  41e024:	inc    ebx
  41e025:	and    al,0x5e
  41e027:	imul   edi,DWORD PTR [edi+0x7866fc38],0x4e
  41e02e:	stc    
  41e02f:	sub    DWORD PTR [edi-0x6e8d4475],edx
  41e035:	mov    esp,0xe37a61a5
  41e03a:	popf   
  41e03b:	jg     0x41e09d
  41e03d:	jle    0x41dff7
  41e03f:	cld    
  41e040:	add    BYTE PTR [eax-0x74865aee],dl
  41e046:	or     ebx,DWORD PTR [edi]
  41e048:	and    eax,0xd4342395
  41e04d:	adc    dh,BYTE PTR [edi+0x5d1ee8e0]
  41e053:	cdq    
  41e054:	jno    0x41e02c
  41e056:	mov    ecx,0x95db3910
  41e05b:	pop    edx
  41e05c:	push   edx
  41e05d:	data16 clc 
  41e05f:	pop    ebp
  41e060:	ret    
  41e061:	in     eax,0xd4
  41e063:	outs   dx,DWORD PTR ds:[esi]
  41e064:	adc    BYTE PTR [ecx],cl
  41e066:	loopne 0x41e02b
  41e068:	test   edx,esi
  41e06a:	dec    edi
  41e06b:	pop    ds
  41e06c:	stos   BYTE PTR es:[edi],al
  41e06d:	push   edx
  41e06e:	fdivr  st(6),st
  41e070:	xchg   ebp,eax
  41e071:	jb     0x41e09e
  41e073:	aam    0x4d
  41e075:	jmp    0x41e03e
  41e077:	xchg   ebp,eax
  41e078:	adc    al,0xf4
  41e07a:	imul   BYTE PTR [ecx+eiz*1-0x69]
  41e07e:	enter  0x4d0c,0x42
  41e082:	mov    ds:0x7e084ff6,eax
  41e087:	repz sbb al,0xd6
  41e08a:	xchg   esp,eax
  41e08b:	and    eax,DWORD PTR [ebx]
  41e08d:	xor    BYTE PTR [ebx-0x3933ddcf],cl
  41e093:	sub    DWORD PTR [ebp-0x19],ecx
  41e096:	js     0x41e0d2
  41e098:	and    BYTE PTR [eax+0x3a5aac9e],dl
  41e09e:	cmp    ecx,DWORD PTR [esi-0x1a1348ff]
  41e0a4:	retf   0x5253
  41e0a7:	add    al,0x66
  41e0a9:	popf   
  41e0aa:	out    0x9,eax
  41e0ac:	leave  
  41e0ad:	inc    ecx
  41e0ae:	jmp    0x41e069
  41e0b0:	(bad)  
  41e0b1:	icebp  
  41e0b2:	push   0xd40879f2
  41e0b7:	(bad)  
  41e0b8:	pop    eax
  41e0b9:	inc    edx
  41e0ba:	scas   eax,DWORD PTR es:[edi]
  41e0bb:	std    
  41e0bc:	mov    ds:0x4e4a20f7,al
  41e0c1:	icebp  
  41e0c2:	por    mm2,QWORD PTR [ebx]
  41e0c5:	xor    cl,BYTE PTR [edx-0x2]
  41e0c8:	cld    
  41e0c9:	adc    dl,ah
  41e0cb:	cmc    
  41e0cc:	and    eax,0x46f8d8b
  41e0d1:	xchg   esp,eax
  41e0d2:	lahf   
  41e0d3:	sar    BYTE PTR [eax-0x5309c52e],1
  41e0d9:	out    dx,al
  41e0da:	sub    DWORD PTR [ebx],ebp
  41e0dc:	adc    al,0xad
  41e0de:	dec    edx
  41e0df:	push   ds
  41e0e0:	imul   esi,DWORD PTR [eax],0x4eab18ca
  41e0e6:	out    dx,eax
  41e0e7:	ds dec esi
  41e0e9:	aam    0x8e
  41e0eb:	out    0xf9,eax
  41e0ed:	mov    WORD PTR [ebx+0x5d],gs
  41e0f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0f1:	mov    ?,WORD PTR [ebx-0x36007a4a]
  41e0f7:	pop    es
  41e0f8:	sbb    eax,0xb24ccb50
  41e0fd:	and    DWORD PTR [ebp-0x5fc08ce1],esp
  41e103:	shl    ebp,0xa6
  41e106:	xchg   esp,eax
  41e107:	aad    0xc8
  41e109:	add    al,0xad
  41e10b:	repz test DWORD PTR [ecx+0x5da22688],esp
  41e112:	pop    edx
  41e113:	or     al,0x4e
  41e115:	out    0xc9,al
  41e117:	pushf  
  41e118:	push   es
  41e119:	addr16 retf 
  41e11b:	daa    
  41e11c:	push   esi
  41e11d:	jp     0x41e15f
  41e11f:	cmc    
  41e120:	sub    eax,DWORD PTR [eax+ecx*4-0x7]
  41e124:	xchg   esp,eax
  41e125:	(bad)  
  41e127:	ja     0x41e126
  41e129:	mov    esi,DWORD PTR [ebx-0x57]
  41e12c:	ficom  DWORD PTR [ecx-0x250ef4eb]
  41e132:	dec    ebx
  41e133:	in     al,dx
  41e134:	sbb    eax,0x17992d52
  41e139:	dec    ecx
  41e13a:	pushf  
  41e13b:	xor    eax,0xb16fe79b
  41e140:	xor    eax,0xc68f9d79
  41e145:	(bad)  
  41e146:	enter  0xa98,0x82
  41e14a:	xlat   BYTE PTR ds:[ebx]
  41e14b:	mov    eax,ds:0xbb159511
  41e150:	mov    eax,ds:0x7315c191
  41e155:	lock addr16 aad 0xcf
  41e159:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e15a:	das    
  41e15b:	mov    ah,bl
  41e15d:	cwde   
  41e15e:	mov    edi,DWORD PTR [ecx]
  41e160:	lds    ecx,FWORD PTR es:[edi]
  41e163:	jp     0x41e0f1
  41e165:	ret    0xe75f
  41e168:	or     BYTE PTR [ebx],ch
  41e16a:	std    
  41e16b:	mov    esp,ecx
  41e16d:	out    0x4,al
  41e16f:	cdq    
  41e170:	sbb    al,0xae
  41e172:	jg     0x41e12b
  41e174:	lods   al,BYTE PTR ds:[esi]
  41e175:	adc    esi,0xca104be6
  41e17b:	add    cl,BYTE PTR [ebx]
  41e17d:	push   es
  41e17e:	cmc    
  41e17f:	jno    0x41e146
  41e181:	mov    al,ds:0xe247d35b
  41e186:	mov    edx,0x9cc0c65d
  41e18b:	pusha  
  41e18c:	sbb    al,0x95
  41e18e:	scas   eax,DWORD PTR es:[edi]
  41e18f:	sbb    eax,0x4cb700d0
  41e194:	ja     0x41e120
  41e196:	sbb    edi,DWORD PTR [ebx+0x72]
  41e199:	scas   al,BYTE PTR es:[edi]
  41e19a:	dec    edi
  41e19b:	daa    
  41e19c:	xchg   BYTE PTR [edx+edi*2-0x56],bh
  41e1a0:	mov    eax,0xbc959b3b
  41e1a5:	jnp    0x41e171
  41e1a7:	adc    al,0x8f
  41e1a9:	inc    ecx
  41e1aa:	retf   0xe266
  41e1ad:	ret    
  41e1ae:	jmp    0xfcdc:0x81c60fbe
  41e1b5:	mov    dl,0x8e
  41e1b7:	push   es
  41e1b8:	fsubr  DWORD PTR [ebx+0x4ec1df17]
  41e1be:	cmp    bl,0x44
  41e1c1:	fldcw  WORD PTR [esi+0x57]
  41e1c4:	enter  0x7be1,0xf0
  41e1c8:	scas   eax,DWORD PTR es:[edi]
  41e1c9:	jmp    0x5236837e
  41e1ce:	xlat   BYTE PTR ds:[ebx]
  41e1cf:	outs   dx,DWORD PTR ds:[esi]
  41e1d0:	fstp   QWORD PTR [ebp-0x65]
  41e1d3:	out    dx,eax
  41e1d4:	cs mov dh,0x62
  41e1d7:	push   ebp
  41e1d8:	adc    esp,ebx
  41e1da:	add    bl,BYTE PTR [ecx]
  41e1dc:	add    al,0x99
  41e1de:	push   es
  41e1df:	jg     0x41e241
  41e1e1:	or     eax,0x2861466c
  41e1e6:	rcr    BYTE PTR [eax],0x89
  41e1e9:	mov    ebx,0xcb818038
  41e1ee:	shl    BYTE PTR [esi],0x2e
  41e1f1:	cmp    bl,bh
  41e1f3:	jg     0x41e1a6
  41e1f5:	lahf   
  41e1f6:	mov    ah,0xf2
  41e1f8:	cwde   
  41e1f9:	shr    edi,cl
  41e1fb:	dec    ebp
  41e1fc:	fiadd  DWORD PTR [eax+0x5d]
  41e1ff:	or     eax,0x824f6ccd
  41e204:	shr    DWORD PTR [eax],1
  41e206:	mov    esi,0x9da61305
  41e20b:	jp     0x41e1e6
  41e20d:	dec    esi
  41e20e:	icebp  
  41e20f:	pop    ecx
  41e210:	int    0xec
  41e212:	scas   eax,DWORD PTR es:[edi]
  41e213:	inc    esp
  41e214:	jg     0x41e247
  41e216:	js     0x41e1be
  41e218:	jae    0x41e272
  41e21a:	jbe    0x41e24c
  41e21c:	out    dx,eax
  41e21d:	jo     0x41e290
  41e21f:	add    DWORD PTR [ecx-0x5f524bd3],0x251abcac
  41e229:	int    0xd9
  41e22b:	aad    0x81
  41e22d:	jns    0x41e1b0
  41e22f:	fidivr DWORD PTR [ebx+ebx*8-0x69]
  41e233:	test   al,0x92
  41e235:	and    al,0xb5
  41e237:	jge    0x41e21f
  41e239:	cmp    BYTE PTR [esi],ch
  41e23b:	sub    edx,DWORD PTR [esi+ebx*1]
  41e23e:	popf   
  41e23f:	sbb    eax,eax
  41e241:	mov    ebp,DWORD PTR [eax]
  41e243:	rol    DWORD PTR [edx],1
  41e245:	cmc    
  41e246:	out    0x9f,al
  41e248:	pop    esi
  41e249:	and    DWORD PTR ds:0xe8353708,edi
  41e24f:	mov    ah,0xbd
  41e251:	test   BYTE PTR [esi+0x6a],0x24
  41e255:	mov    cl,0x82
  41e257:	ins    DWORD PTR es:[edi],dx
  41e258:	xchg   edx,eax
  41e259:	mov    ebx,0x32ce1022
  41e25e:	or     eax,0x7fb5e541
  41e263:	jmp    0x6d9e:0x5c08ebbc
  41e26a:	adc    DWORD PTR [eax-0x59],0x6f7d19e5
  41e271:	stos   DWORD PTR es:[edi],eax
  41e272:	out    dx,eax
  41e273:	and    BYTE PTR [ebx+0x77],dl
  41e276:	ret    
  41e277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e278:	popf   
  41e279:	add    ah,ah
  41e27b:	mov    edx,0x23c8e19d
  41e280:	jb     0x41e215
  41e282:	popa   
  41e283:	mov    ds:0xd43211a5,eax
  41e288:	retf   0x33ef
  41e28b:	jnp    0x41e261
  41e28d:	int    0xfe
  41e28f:	or     cl,BYTE PTR [edi+0x1f8efeb7]
  41e295:	push   ss
  41e296:	test   eax,0xc54d78e5
  41e29b:	xchg   cl,ah
  41e29d:	pop    ds
  41e29e:	loope  0x41e25c
  41e2a0:	loop   0x41e230
  41e2a2:	cdq    
  41e2a3:	das    
  41e2a4:	fs jp  0x41e2cc
  41e2a7:	xor    bl,dl
  41e2a9:	loopne 0x41e2a0
  41e2ab:	push   0x78d85852
  41e2b0:	test   eax,0x88838aee
  41e2b5:	push   ecx
  41e2b6:	jle    0x41e324
  41e2b8:	jge    0x41e252
  41e2ba:	cmp    eax,0xe4c33521
  41e2bf:	mov    ch,bh
  41e2c1:	dec    edx
  41e2c2:	inc    esp
  41e2c3:	gs xchg eax,ebx
  41e2c6:	test   ch,0xb0
  41e2c9:	shl    DWORD PTR [ebp-0x1d66614f],0x3b
  41e2d0:	add    al,0xff
  41e2d2:	(bad)  
  41e2d3:	xor    DWORD PTR [edi+0x77],ebx
  41e2d6:	imul   esi,DWORD PTR [ebx-0x25],0xffffffd8
  41e2da:	clc    
  41e2db:	push   0x8be10396
  41e2e0:	out    0x1c,eax
  41e2e2:	arpl   WORD PTR [esi],bx
  41e2e4:	test   eax,0xba0f2fb0
  41e2e9:	fstp   DWORD PTR [esi-0x6a]
  41e2ec:	mov    ebp,0xa2eb7f81
  41e2f1:	dec    edx
  41e2f2:	ds jnp 0x41e29f
  41e2f5:	or     esp,ebp
  41e2f7:	dec    ecx
  41e2f8:	jmp    0x6123091f
  41e2fd:	ror    BYTE PTR [ebp+0x75d04632],cl
  41e303:	adc    al,0xd5
  41e305:	xor    dh,BYTE PTR [ecx-0x59]
  41e308:	mov    edi,DWORD PTR [eax-0x2e1d0a94]
  41e30e:	pop    esp
  41e30f:	dec    ecx
  41e310:	add    eax,0x4f57b144
  41e315:	std    
  41e316:	bound  ecx,QWORD PTR [eax-0x9]
  41e319:	cmc    
  41e31a:	test   BYTE PTR [edi+0x757a9db5],dl
  41e320:	shl    edi,1
  41e322:	(bad)  
  41e324:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e325:	add    ah,BYTE PTR [ecx+0x33]
  41e328:	mov    DWORD PTR [ebx+0xf3d00f2],0xf70941e
  41e332:	test   DWORD PTR [esi],ebp
  41e334:	add    BYTE PTR [eax],al
  41e336:	add    BYTE PTR [ebx-0x7af00006],al
  41e33c:	and    eax,0x8b000000
  41e341:	inc    ebp
  41e342:	cld    
  41e343:	movsx  eax,BYTE PTR [eax]
  41e346:	cdq    
  41e347:	add    eax,ebx
  41e349:	adc    edx,0xffffffff
  41e34c:	xor    eax,edi
  41e34e:	xor    edx,0x0
  41e351:	cmp    eax,0x70941e1c
  41e356:	jne    0x41e365
  41e35c:	cmp    edx,0xffffffff
  41e35f:	je     0x41e37c
  41e365:	mov    eax,DWORD PTR [ebp-0x10]
  41e368:	xor    eax,ecx
  41e36a:	mov    edx,0xffcd8d0d
  41e36f:	sub    edx,eax
  41e371:	add    DWORD PTR [ebp-0x4],edx
  41e374:	mov    eax,DWORD PTR [ebp-0x4]
  41e377:	jmp    0x41bf5a
  41e37c:	mov    eax,DWORD PTR [ebp-0x14]
  41e37f:	mov    eax,DWORD PTR [eax]
  41e381:	mov    edx,DWORD PTR [ebp-0x4]
  41e384:	mov    edx,DWORD PTR [edx+0x3c]
  41e387:	lea    eax,[edx+eax*8+0x78]
  41e38b:	mov    edx,DWORD PTR [ebp-0x4]
  41e38e:	mov    eax,DWORD PTR [eax+edx*1]
  41e391:	mov    DWORD PTR [ebp-0x8],eax
  41e394:	mov    eax,DWORD PTR [ebp+0x8]
  41e397:	xor    eax,ecx
  41e399:	add    eax,esi
  41e39b:	mov    DWORD PTR [ebp-0x14],eax
  41e39e:	mov    eax,DWORD PTR [ebp+0x8]
  41e3a1:	mov    edx,DWORD PTR [ebp-0x8]
  41e3a4:	xor    eax,ecx
  41e3a6:	add    eax,esi
  41e3a8:	cmp    edx,eax
  41e3aa:	jne    0x41e3c8
  41e3b0:	mov    eax,DWORD PTR [ebp+0xc]
  41e3b3:	xor    eax,ecx
  41e3b5:	mov    ecx,DWORD PTR [ebp-0x8]
  41e3b8:	add    eax,esi
  41e3ba:	imul   eax,ecx
  41e3bd:	mov    DWORD PTR [ebp-0x8],eax
  41e3c0:	push   DWORD PTR [ebp+0x18]
  41e3c3:	jmp    0x4207e6
  41e3c8:	mov    eax,DWORD PTR [ebp-0x8]
  41e3cb:	mov    ecx,DWORD PTR [ebp-0x4]
  41e3ce:	jmp    0x420791
  41e3d3:	test   BYTE PTR [eax+0x3d],cl
  41e3d6:	lock mov cl,0x80
  41e3d9:	or     BYTE PTR [eax],0x6f
  41e3dc:	enter  0xd93f,0x1e
  41e3e0:	sbb    eax,0xd5116cdb
  41e3e5:	add    BYTE PTR [ebx-0x7c7ca327],0x6e
  41e3ec:	lea    edx,[edx]
  41e3ee:	ins    DWORD PTR es:[edi],dx
  41e3ef:	scas   eax,DWORD PTR es:[edi]
  41e3f0:	call   0xf3a0:0x27be9b06
  41e3f7:	adc    al,0x13
  41e3f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e3fa:	jmp    0xc8ba7783
  41e3ff:	mov    dl,0x85
  41e401:	pop    esi
  41e402:	cld    
  41e403:	sbb    DWORD PTR [eax-0x74],0xffffffa5
  41e407:	mov    ecx,0x40ad2719
  41e40c:	call   0x1d5b4ee7
  41e411:	out    dx,eax
  41e412:	shr    DWORD PTR [ecx+0xb],cl
  41e415:	aas    
  41e416:	scas   al,BYTE PTR es:[edi]
  41e417:	cld    
  41e418:	jmp    FWORD PTR [eax-0xa3d4a90]
  41e41e:	cmp    al,0x7f
  41e420:	repz xchg ebp,eax
  41e422:	dec    ebp
  41e423:	aam    0xf6
  41e425:	push   es
  41e426:	sub    ebx,eax
  41e428:	jge    0x41e437
  41e42a:	ret    0xc806
  41e42d:	jb     0x41e482
  41e42f:	clc    
  41e430:	hlt    
  41e431:	rcr    dl,0xd
  41e434:	je     0x41e465
  41e436:	inc    ecx
  41e437:	mov    ss,ebx
  41e439:	cmp    BYTE PTR [edx-0x438144c7],al
  41e43f:	push   cs
  41e440:	adc    esi,DWORD PTR [eax-0x719f7c33]
  41e446:	repz add al,0xed
  41e449:	xchg   esi,eax
  41e44a:	sahf   
  41e44b:	stos   DWORD PTR es:[edi],eax
  41e44c:	daa    
  41e44d:	retf   
  41e44e:	mov    bl,0x53
  41e450:	arpl   WORD PTR [ebx+0x42],si
  41e453:	loop   0x41e437
  41e455:	sub    al,BYTE PTR [edx]
  41e457:	mov    esi,0x2b6ec9d1
  41e45c:	jg     0x41e403
  41e45e:	push   0xc260bf17
  41e463:	mov    al,0x22
  41e465:	loope  0x41e4c4
  41e467:	jge    0x41e472
  41e469:	mov    eax,ds:0x921c37f2
  41e46e:	gs push 0xffffffd1
  41e471:	xchg   edx,eax
  41e472:	repnz test al,0x35
  41e475:	ss fs add ebx,esp
  41e479:	pop    DWORD PTR [esi+eax*1+0x170f56d6]
  41e480:	inc    esp
  41e481:	les    esp,FWORD PTR [edi]
  41e483:	fcmovu st,st(2)
  41e485:	lock int 0xdb
  41e488:	in     al,dx
  41e489:	inc    esp
  41e48a:	inc    edi
  41e48b:	cld    
  41e48c:	mov    al,0x8f
  41e48e:	adc    ebp,ecx
  41e490:	jp     0x41e450
  41e492:	shr    BYTE PTR [edx-0x4c],1
  41e495:	pop    ds
  41e496:	in     al,dx
  41e497:	pop    ecx
  41e498:	test   BYTE PTR [ebp+ebp*2+0xcc607a7],al
  41e49f:	xchg   ecx,eax
  41e4a0:	mov    WORD PTR [edx-0x54],?
  41e4a3:	int    0x7f
  41e4a5:	jb     0x41e516
  41e4a7:	loope  0x41e4fd
  41e4a9:	adc    eax,0x3178edb
  41e4ae:	aas    
  41e4af:	jle    0x41e442
  41e4b1:	lock aas 
  41e4b3:	add    eax,0xee6d6212
  41e4b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4b9:	in     eax,0x76
  41e4bb:	or     ah,al
  41e4bd:	les    edi,FWORD PTR [esi-0x24289afb]
  41e4c3:	sub    DWORD PTR [edx],edx
  41e4c5:	cli    
  41e4c6:	and    ecx,DWORD PTR [ecx]
  41e4c8:	es adc ebx,edi
  41e4cb:	pusha  
  41e4cc:	and    al,0xbc
  41e4ce:	xchg   edi,eax
  41e4cf:	add    al,0x42
  41e4d1:	jo     0x41e474
  41e4d3:	add    eax,0xe2ab3617
  41e4d8:	pop    es
  41e4d9:	and    BYTE PTR [eax+0x20b2b98b],0xee
  41e4e0:	loop   0x41e4af
  41e4e2:	cld    
  41e4e3:	adc    bh,BYTE PTR [edi-0x785bb247]
  41e4e9:	jns    0x41e50a
  41e4eb:	mov    eax,0xa9d251b8
  41e4f0:	scas   al,BYTE PTR es:[edi]
  41e4f1:	adc    DWORD PTR [ecx],edi
  41e4f3:	pop    esi
  41e4f4:	jno    0x41e4cf
  41e4f6:	jge    0x41e518
  41e4f8:	je     0x41e556
  41e4fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4fb:	test   ecx,ebx
  41e4fd:	mov    bh,0x1c
  41e4ff:	fdivr  QWORD PTR [edx+0x5018c57e]
  41e505:	add    dh,bl
  41e507:	aam    0xfa
  41e509:	pop    ecx
  41e50a:	adc    ebp,esp
  41e50c:	mov    dl,0xa1
  41e50e:	(bad)  
  41e50f:	call   0x849b36a6
  41e514:	sbb    al,0x27
  41e516:	fild   WORD PTR [ecx+0x23d46a2c]
  41e51c:	add    eax,0x2604d47c
  41e521:	pop    edi
  41e522:	ret    0x9a5a
  41e525:	jmp    0x41e4d3
  41e527:	xor    ah,BYTE PTR [ebx+ebp*2]
  41e52a:	les    eax,FWORD PTR [ebp+ebx*4-0x7a]
  41e52e:	iret   
  41e52f:	nop
  41e530:	add    BYTE PTR [ecx-0x63],0xcd
  41e534:	out    dx,eax
  41e535:	mov    eax,ds:0xd1d19b23
  41e53a:	mov    ecx,0xf021a5ef
  41e53f:	rcr    DWORD PTR [esi+0x24],1
  41e542:	jmp    0x1a68:0xadd0ff83
  41e549:	daa    
  41e54a:	nop
  41e54b:	pop    ss
  41e54c:	std    
  41e54d:	or     esp,DWORD PTR [edx]
  41e54f:	dec    ebx
  41e550:	repz jg 0x41e5a3
  41e553:	rol    DWORD PTR [ecx],0xc2
  41e556:	repz int 0x9
  41e559:	fwait
  41e55a:	imul   edi,DWORD PTR [edx-0x38329ef7],0x1e
  41e561:	lds    ebp,FWORD PTR ds:[eax+0x1f1e665e]
  41e568:	in     al,dx
  41e569:	mov    al,ds:0x11efdcb4
  41e56e:	cld    
  41e56f:	test   DWORD PTR [ecx-0x27],0xa6e3b9ec
  41e576:	fdiv   QWORD PTR [ebx]
  41e578:	shl    ebx,1
  41e57a:	jne    0x41e528
  41e57c:	inc    esi
  41e57d:	sub    BYTE PTR [edx],dl
  41e57f:	inc    edi
  41e580:	sub    eax,DWORD PTR [edx-0x929996d]
  41e586:	outs   dx,DWORD PTR ds:[esi]
  41e587:	test   ax,0x6e5b
  41e58b:	repz inc eax
  41e58d:	adc    eax,0xb713382e
  41e592:	rol    BYTE PTR [edx+edi*1-0xe],cl
  41e596:	add    al,0xd7
  41e598:	in     al,0x8d
  41e59a:	adc    dh,BYTE PTR [esi-0x44]
  41e59d:	push   ss
  41e59e:	dec    ebx
  41e59f:	cmc    
  41e5a0:	mov    DWORD PTR [ebx-0x6c],esp
  41e5a3:	mov    WORD PTR [edi],?
  41e5a5:	jbe    0x41e5a0
  41e5a7:	dec    ecx
  41e5a8:	mov    eax,ds:0x75148b86
  41e5ad:	xchg   edi,eax
  41e5ae:	out    dx,eax
  41e5af:	scas   eax,DWORD PTR es:[edi]
  41e5b0:	fdiv   QWORD PTR [ebx+ecx*1]
  41e5b3:	js     0x41e5d7
  41e5b5:	adc    al,0xd0
  41e5b7:	test   DWORD PTR [edx],0x534c7f58
  41e5bd:	inc    eax
  41e5be:	mov    ch,0xbe
  41e5c0:	sub    ebp,ebp
  41e5c2:	push   edi
  41e5c3:	dec    ebx
  41e5c4:	(bad)  
  41e5c5:	jle    0x41e56e
  41e5c7:	pushf  
  41e5c8:	jg     0x41e5d0
  41e5ca:	int3   
  41e5cb:	add    dh,BYTE PTR [edx]
  41e5cd:	fwait
  41e5ce:	ret    0x2921
  41e5d1:	loope  0x41e603
  41e5d3:	(bad)  
  41e5d4:	inc    DWORD PTR [edx+0xb85df4b]
  41e5da:	mov    es,esi
  41e5dc:	cdq    
  41e5dd:	dec    ecx
  41e5de:	lds    ebp,FWORD PTR [edx+0x30979963]
  41e5e4:	jno    0x41e5c2
  41e5e6:	dec    eax
  41e5e7:	add    BYTE PTR [ebx-0x172df4c5],bh
  41e5ed:	push   ebx
  41e5ee:	push   ecx
  41e5ef:	lds    eax,FWORD PTR [ebp+0x78]
  41e5f2:	or     eax,0x1a9ad5a4
  41e5f7:	adc    ecx,DWORD PTR [esi+eiz*8-0x1de5e2aa]
  41e5fe:	mov    bh,0x25
  41e600:	sbb    eax,0x4851df7b
  41e605:	ss pop edx
  41e607:	call   DWORD PTR ss:[ecx-0x15]
  41e60b:	jb     0x41e64e
  41e60d:	pop    esi
  41e60e:	in     al,0x46
  41e610:	sub    eax,0x9de788c0
  41e615:	sti    
  41e616:	call   0x9ffe:0xa70cebbe
  41e61d:	mov    BYTE PTR [edx],ch
  41e61f:	cmc    
  41e620:	pop    esp
  41e621:	fsub   QWORD PTR [edx+0x2205b5c]
  41e627:	dec    ebx
  41e628:	mov    al,0xcf
  41e62a:	push   0xeab3cee1
  41e62f:	mov    edi,0x143395b7
  41e634:	mov    esp,0x72e75fb8
  41e639:	push   ebx
  41e63a:	(bad)  
  41e63b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e63c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e63d:	adc    ebx,DWORD PTR [ebx+0x28]
  41e640:	les    eax,FWORD PTR [edx+0x5a035311]
  41e646:	pop    eax
  41e647:	arpl   WORD PTR [ecx],bp
  41e649:	rol    dh,1
  41e64b:	dec    DWORD PTR [ecx-0x3a616a80]
  41e651:	icebp  
  41e652:	iret   
  41e653:	sbb    al,0x9f
  41e655:	or     dh,bl
  41e657:	jecxz  0x41e6a8
  41e659:	scas   eax,DWORD PTR es:[edi]
  41e65a:	cld    
  41e65b:	xor    DWORD PTR [esi-0x73],ebx
  41e65e:	add    al,0x9e
  41e660:	or     ecx,eax
  41e662:	push   es
  41e663:	mov    dh,0xbd
  41e665:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e666:	call   FWORD PTR [esi]
  41e668:	cdq    
  41e669:	mov    ?,WORD PTR [ebp-0x5cf34d56]
  41e66f:	lea    eax,[edx+0x67c1f548]
  41e675:	or     al,0x2a
  41e677:	test   BYTE PTR [edx-0x7997d2de],ah
  41e67d:	sbb    DWORD PTR [esi-0x27cc0f26],0xffffff83
  41e684:	imul   ebp,DWORD PTR [eax+eax*1+0x47],0xfb331df6
  41e68c:	cwde   
  41e68d:	xchg   edi,eax
  41e68e:	loopne 0x41e6fc
  41e690:	jecxz  0x41e6af
  41e692:	aas    
  41e693:	add    edi,eax
  41e695:	inc    edx
  41e696:	stos   BYTE PTR es:[edi],al
  41e697:	xor    BYTE PTR [edx],cl
  41e699:	out    0x22,eax
  41e69b:	jno    0x41e6fd
  41e69d:	int    0x8f
  41e69f:	int3   
  41e6a0:	jbe    0x41e71c
  41e6a2:	mov    esp,0xa5a6b7d0
  41e6a7:	fwait
  41e6a8:	push   ebx
  41e6a9:	dec    ecx
  41e6aa:	jle    0x41e655
  41e6ac:	mov    ebx,0x6d246bd1
  41e6b1:	mov    BYTE PTR [ecx],dl
  41e6b3:	cmp    eax,DWORD PTR [ebp+0x73acaaf]
  41e6b9:	ins    DWORD PTR es:[edi],dx
  41e6ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6bb:	mov    eax,ds:0x26fa25bd
  41e6c0:	sbb    eax,DWORD PTR [edi-0x77]
  41e6c3:	daa    
  41e6c4:	push   ebx
  41e6c5:	pop    ecx
  41e6c6:	and    BYTE PTR ds:0x90d37971,0x9c
  41e6cd:	push   cs
  41e6ce:	shl    BYTE PTR [esi],0x31
  41e6d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6d2:	scas   al,BYTE PTR es:[edi]
  41e6d3:	in     eax,0x5d
  41e6d5:	scas   al,BYTE PTR es:[edi]
  41e6d6:	loope  0x41e71e
  41e6d8:	fidivr DWORD PTR [ecx-0x77428d52]
  41e6de:	adc    eax,0xd620d99b
  41e6e3:	or     ch,BYTE PTR [edx+0x3fbbd94e]
  41e6e9:	shld   DWORD PTR [edx-0x880912b],ebp,cl
  41e6f0:	rcr    BYTE PTR es:[ecx+0x13],cl
  41e6f4:	lods   eax,DWORD PTR ds:[esi]
  41e6f5:	cmp    ah,bh
  41e6f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6f8:	stos   BYTE PTR es:[edi],al
  41e6f9:	add    esp,DWORD PTR [eax+0x386f7412]
  41e6ff:	add    eax,0xcb111de9
  41e704:	daa    
  41e705:	sub    al,0x22
  41e707:	ins    BYTE PTR es:[edi],dx
  41e708:	xor    dl,BYTE PTR [eax+0x1e]
  41e70b:	push   ecx
  41e70c:	mov    esi,0xbdc970b3
  41e711:	sti    
  41e712:	and    edi,DWORD PTR [edi]
  41e714:	or     DWORD PTR [edi-0x59],esp
  41e717:	(bad)  
  41e718:	fistp  DWORD PTR [edx+0x2fb6e1cc]
  41e71e:	mov    ah,0x36
  41e720:	xchg   ebx,eax
  41e721:	hlt    
  41e722:	mov    ds:0x5734ab2f,al
  41e727:	call   0xe6ad:0x84c35083
  41e72e:	xchg   ebx,eax
  41e72f:	sub    BYTE PTR [esi+0x2],0xc9
  41e733:	xchg   esp,eax
  41e734:	pop    es
  41e735:	rol    DWORD PTR [esp+ebp*2-0x1149dfec],0x4f
  41e73d:	or     eax,0xe183b49a
  41e742:	mov    ebx,DWORD PTR [ebp-0x29]
  41e745:	jmp    FWORD PTR [ecx-0x699583e0]
  41e74b:	mov    eax,ds:0x6246232c
  41e750:	(bad)  
  41e751:	mov    eax,0x69d95123
  41e756:	pcmpgtw mm4,QWORD PTR [ecx]
  41e759:	mov    BYTE PTR [eax-0x7],dl
  41e75c:	retf   0xd018
  41e75f:	xchg   ebp,eax
  41e760:	outs   dx,BYTE PTR ds:[esi]
  41e761:	lock call 0x751fac6b
  41e767:	retf   
  41e768:	jle    0x41e760
  41e76a:	cmp    ecx,ebx
  41e76c:	jp     0x41e733
  41e76e:	jae    0x41e748
  41e770:	neg    BYTE PTR [ecx+edi*1+0x31]
  41e774:	fpatan 
  41e776:	scas   eax,DWORD PTR es:[edi]
  41e777:	adc    al,BYTE PTR [eax]
  41e779:	hlt    
  41e77a:	pop    esi
  41e77b:	int    0x41
  41e77d:	and    eax,0xe669d3f2
  41e782:	xchg   edi,eax
  41e783:	xchg   ecx,eax
  41e784:	loope  0x41e7e5
  41e786:	mov    ch,0x5e
  41e788:	inc    esp
  41e789:	nop
  41e78a:	bound  edx,QWORD PTR [ecx]
  41e78c:	scas   al,BYTE PTR es:[edi]
  41e78d:	sbb    DWORD PTR [ecx-0x5c8156f2],esp
  41e793:	loopne 0x41e7d5
  41e795:	ror    BYTE PTR [ebx-0x79519afc],cl
  41e79b:	xor    DWORD PTR [edi+0x16ce88c9],esp
  41e7a1:	sar    DWORD PTR [esp+ebx*4],1
  41e7a4:	lods   eax,DWORD PTR ds:[esi]
  41e7a5:	xchg   ecx,eax
  41e7a6:	sar    BYTE PTR [eax-0x7b1cc4fa],cl
  41e7ac:	outs   dx,BYTE PTR ds:[esi]
  41e7ad:	and    eax,0x31805106
  41e7b2:	jbe    0x41e7b3
  41e7b4:	mov    cl,0xb2
  41e7b6:	ror    DWORD PTR [ebx+edx*1-0x5d2715b7],0xf4
  41e7be:	dec    edi
  41e7bf:	inc    ecx
  41e7c0:	test   eax,0x5aaa79c6
  41e7c5:	sti    
  41e7c6:	lahf   
  41e7c7:	mov    cl,0xd4
  41e7c9:	mov    bh,0x6e
  41e7cb:	jno    0x41e7cf
  41e7cd:	cmp    al,0x11
  41e7cf:	mov    al,ds:0xe1edb92b
  41e7d4:	mov    eax,ds:0x6b76c0a3
  41e7d9:	cdq    
  41e7da:	add    BYTE PTR [ebx+edx*1],al
  41e7dd:	pop    es
  41e7de:	sbb    eax,0xa4b2db4d
  41e7e3:	out    0xbc,eax
  41e7e5:	cmp    DWORD PTR [edx],esp
  41e7e7:	mov    al,ds:0xe1b5562a
  41e7ec:	cmp    bl,BYTE PTR [esi+0xbb8baec]
  41e7f2:	in     al,0x6c
  41e7f4:	mov    ebx,0x3a8e2f8f
  41e7f9:	xor    DWORD PTR [ebx-0x5d],ebx
  41e7fc:	xchg   edi,eax
  41e7fd:	inc    ecx
  41e7fe:	int    0xf4
  41e800:	das    
  41e801:	pop    esp
  41e802:	je     0x41e857
  41e804:	pop    ds
  41e805:	je     0x41e7b4
  41e807:	jnp    0x41e805
  41e809:	rol    BYTE PTR [ebx+0x16150bcb],0xf9
  41e810:	ja     0x41e846
  41e812:	xchg   esi,eax
  41e813:	outs   dx,BYTE PTR ds:[esi]
  41e814:	xor    bh,BYTE PTR [edx]
  41e816:	shl    DWORD PTR [ecx+ecx*2],0xc1
  41e81a:	fstp   DWORD PTR [edx-0x39]
  41e81d:	leave  
  41e81e:	push   es
  41e81f:	imul   eax,DWORD PTR [ecx-0x7e],0xffffffb6
  41e823:	arpl   bx,cx
  41e825:	dec    esi
  41e826:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e827:	jp     0x41e868
  41e829:	or     dh,BYTE PTR [ecx-0x8bb5788]
  41e82f:	sahf   
  41e830:	or     al,0x5a
  41e832:	in     eax,0x47
  41e834:	enter  0x7e4b,0x5f
  41e838:	lock lds edx,FWORD PTR [edx-0xfbd4e1d]
  41e83f:	loopne 0x41e87b
  41e841:	mov    ecx,0x8f885c36
  41e846:	jp     0x41e814
  41e848:	cmp    DWORD PTR ds:0x8eebcc51,ebx
  41e84e:	js     0x41e87f
  41e850:	stc    
  41e851:	aaa    
  41e852:	in     al,dx
  41e853:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e854:	ror    ebp,1
  41e856:	pop    edx
  41e857:	scas   al,BYTE PTR es:[edi]
  41e858:	out    dx,al
  41e859:	mov    dh,0x87
  41e85b:	icebp  
  41e85c:	mov    ch,BYTE PTR [ebp+0x7f]
  41e85f:	mov    edx,0x4c12b236
  41e864:	dec    ecx
  41e865:	add    BYTE PTR [esi-0x497e3c5f],0x59
  41e86c:	mov    dh,0x37
  41e86e:	add    DWORD PTR [ebx],ecx
  41e870:	scas   eax,DWORD PTR es:[edi]
  41e871:	lods   eax,DWORD PTR ds:[esi]
  41e872:	jno    0x41e8f1
  41e874:	jmp    0x41e8d2
  41e876:	clc    
  41e877:	int3   
  41e878:	stos   BYTE PTR es:[edi],al
  41e879:	fs es pusha 
  41e87c:	daa    
  41e87d:	mov    bl,0xa1
  41e87f:	jl     0x41e849
  41e881:	lods   al,BYTE PTR ds:[esi]
  41e882:	popa   
  41e883:	aas    
  41e884:	jg     0x41e858
  41e886:	mov    eax,fs
  41e888:	inc    edi
  41e889:	fdiv   QWORD PTR [edi-0x23]
  41e88c:	adc    esp,edi
  41e88e:	dec    eax
  41e88f:	adc    BYTE PTR [esp+ecx*2+0x76],al
  41e893:	jmp    0x744a:0x867e1214
  41e89a:	mov    gs,WORD PTR [edx-0x155ead73]
  41e8a0:	push   esi
  41e8a1:	and    ecx,DWORD PTR [edx+eiz*8-0x11]
  41e8a5:	retf   
  41e8a6:	inc    esi
  41e8a7:	dec    ecx
  41e8a8:	repnz repnz fs inc ebp
  41e8ac:	adc    DWORD PTR [edi+eiz*4+0x374428ad],esi
  41e8b3:	jmp    0xf707:0x9a28282f
  41e8ba:	and    eax,0xe7f42517
  41e8bf:	xchg   edx,eax
  41e8c0:	popf   
  41e8c1:	inc    ecx
  41e8c2:	loope  0x41e8a6
  41e8c4:	inc    ecx
  41e8c5:	bswap  ebx
  41e8c7:	lds    edi,FWORD PTR [ebx]
  41e8c9:	sub    BYTE PTR fs:[ebx-0x73],0xe1
  41e8ce:	lods   al,BYTE PTR ds:[esi]
  41e8cf:	aam    0xef
  41e8d1:	xchg   BYTE PTR [ebp+0x304e1570],ch
  41e8d7:	cld    
  41e8d8:	or     DWORD PTR ds:0x69b3a242,0x97a1762d
  41e8e2:	in     al,dx
  41e8e3:	ret    0xd6bf
  41e8e6:	cdq    
  41e8e7:	sahf   
  41e8e8:	and    ebp,ecx
  41e8ea:	outs   dx,BYTE PTR ds:[esi]
  41e8eb:	sbb    esp,DWORD PTR [edx-0x1c]
  41e8ee:	mov    ecx,0x44e38b66
  41e8f3:	mov    edi,edi
  41e8f5:	dec    ebp
  41e8f6:	mov    BYTE PTR [edx+0x1aca4207],0x85
  41e8fd:	retf   0xc5fa
  41e900:	loop   0x41e8f0
  41e902:	mov    dh,0x4f
  41e904:	rcl    DWORD PTR [edx],0xbd
  41e907:	xchg   ecx,eax
  41e908:	xchg   ebp,eax
  41e909:	mov    ecx,0x9803bfff
  41e90e:	jae    0x41e92a
  41e910:	mov    ah,0x0
  41e912:	mov    ah,0xca
  41e914:	sti    
  41e915:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e916:	sbb    BYTE PTR [esi],0x39
  41e919:	push   ds
  41e91a:	cmovp  ecx,DWORD PTR [edi-0x60281661]
  41e921:	inc    edi
  41e922:	mov    eax,ds:0x4e9884be
  41e927:	imul   ebp,DWORD PTR [edx],0x5b
  41e92a:	mov    al,0x94
  41e92c:	imul   esp,DWORD PTR [esi],0xf2e3e2d2
  41e932:	jp     0x41e8d4
  41e934:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e935:	sahf   
  41e936:	mov    ?,WORD PTR [ecx+eiz*2+0x5]
  41e93a:	call   0xf70a:0xa130a428
  41e941:	jle    0x41e8df
  41e943:	dec    edi
  41e944:	mov    bh,0x33
  41e946:	jo     0x41e8f3
  41e948:	xchg   esp,eax
  41e949:	mov    eax,0x2ed87c4e
  41e94e:	bound  ebp,QWORD PTR [edx+0x4741ea5a]
  41e954:	test   al,0x91
  41e956:	out    0x40,al
  41e958:	xor    eax,0x4c04971
  41e95d:	add    bh,BYTE PTR es:[ecx+0x6a7a278c]
  41e964:	aas    
  41e965:	test   eax,0x27cc0486
  41e96a:	xor    BYTE PTR [ebx+0x72d6b4b3],bl
  41e970:	call   0x3046:0xb323ef60
  41e977:	dec    edx
  41e978:	jns    0x41e954
  41e97a:	retf   
  41e97b:	(bad)  
  41e97c:	popf   
  41e97d:	add    BYTE PTR [esi],cl
  41e97f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e980:	data16 outs dx,BYTE PTR ds:[esi]
  41e982:	push   cs
  41e983:	pop    DWORD PTR [ebx+ebp*1-0x4d]
  41e987:	pop    edx
  41e988:	mov    bh,0x6b
  41e98a:	ins    BYTE PTR es:[edi],dx
  41e98b:	inc    ebp
  41e98c:	push   0xffffffef
  41e98e:	cwde   
  41e98f:	daa    
  41e990:	fdiv   st,st(0)
  41e992:	push   cs
  41e993:	mov    eax,ds:0xf89e88e0
  41e998:	cmp    al,0x4d
  41e99a:	xchg   ecx,eax
  41e99b:	into   
  41e99c:	imul   edx,DWORD PTR [eax-0x8],0xffffff9b
  41e9a0:	imul   ebp,DWORD PTR [ebx-0x31],0x9759b197
  41e9a7:	inc    esi
  41e9a8:	xor    al,0xa1
  41e9aa:	mov    ah,0x29
  41e9ac:	stos   DWORD PTR es:[edi],eax
  41e9ad:	fsubrp st(0),st
  41e9af:	lods   eax,DWORD PTR ds:[esi]
  41e9b0:	stos   DWORD PTR es:[edi],eax
  41e9b1:	mov    esi,0x38f36031
  41e9b6:	mov    edi,0xa440ea91
  41e9bb:	mov    al,ds:0x3b5a99a1
  41e9c0:	mov    edi,0xfc56f977
  41e9c5:	jmp    0x41e958
  41e9c7:	cmp    BYTE PTR [ecx+0x2e146dc1],cl
  41e9cd:	ins    BYTE PTR es:[edi],dx
  41e9ce:	or     DWORD PTR [esi+0x25],ecx
  41e9d1:	out    0xa0,eax
  41e9d3:	fild   QWORD PTR [eax+0x6f8750a7]
  41e9d9:	fimul  WORD PTR [edx]
  41e9db:	fcomp  QWORD PTR [edi+0x3ed20848]
  41e9e1:	in     eax,0x14
  41e9e3:	test   DWORD PTR [ecx+esi*2+0x285d5c88],esi
  41e9ea:	xchg   esp,eax
  41e9eb:	and    eax,0x2be870b6
  41e9f0:	dec    ebp
  41e9f1:	and    DWORD PTR [ebp-0xd],0x75
  41e9f5:	int    0xdc
  41e9f7:	ret    
  41e9f8:	jge    0x41e985
  41e9fa:	cs popa 
  41e9fc:	xchg   ecx,eax
  41e9fd:	enter  0x9fc4,0x3f
  41ea01:	aaa    
  41ea02:	mov    edx,0x9a9771b7
  41ea07:	test   DWORD PTR [esi],eax
  41ea09:	push   ebp
  41ea0a:	lea    ecx,[edx-0x222273b2]
  41ea10:	sub    ebp,DWORD PTR [edx-0x5d380f9c]
  41ea16:	push   ebp
  41ea17:	imul   esi,esi,0xddf0c7ff
  41ea1d:	adc    BYTE PTR [esi+0x117f5493],al
  41ea23:	ins    DWORD PTR es:[edi],dx
  41ea24:	mov    ecx,0x6ab4eccb
  41ea29:	sub    ah,al
  41ea2b:	lods   eax,DWORD PTR ds:[esi]
  41ea2c:	sbb    DWORD PTR [ebx+esi*2-0x56],edx
  41ea30:	es dec esp
  41ea32:	inc    ecx
  41ea33:	loopne 0x41ea70
  41ea35:	fistp  QWORD PTR [ebx]
  41ea37:	repnz aaa 
  41ea39:	xor    al,0x3d
  41ea3b:	clc    
  41ea3c:	mov    eax,0x8bcb22a1
  41ea41:	jg     0x41ea87
  41ea43:	dec    ebp
  41ea44:	mov    bl,0x3b
  41ea46:	jo     0x41e9ff
  41ea48:	test   BYTE PTR [edi],bh
  41ea4a:	pop    ss
  41ea4b:	cmp    BYTE PTR [esi+ebx*2+0x77f32718],ch
  41ea52:	hlt    
  41ea53:	sbb    ch,ah
  41ea55:	aad    0xd8
  41ea57:	xchg   edi,eax
  41ea58:	jbe    0x41ea89
  41ea5a:	ss stos DWORD PTR es:[edi],eax
  41ea5c:	pop    eax
  41ea5d:	pop    ss
  41ea5e:	ret    0xd60f
  41ea61:	add    BYTE PTR [ecx-0x5dc0139c],ah
  41ea67:	outs   dx,DWORD PTR ds:[esi]
  41ea68:	push   edi
  41ea69:	fsub   QWORD PTR [esi]
  41ea6b:	test   al,0x8e
  41ea6d:	sub    eax,0x9a869824
  41ea72:	and    al,0xb2
  41ea74:	push   esi
  41ea75:	pop    edi
  41ea76:	pop    edi
  41ea77:	lahf   
  41ea78:	loopne 0x41ea1b
  41ea7a:	xchg   edi,eax
  41ea7b:	push   edi
  41ea7c:	fadd   DWORD PTR [eax-0x19]
  41ea7f:	sar    DWORD PTR [edi-0x699a1c14],1
  41ea85:	jp     0x41ea65
  41ea87:	inc    ecx
  41ea88:	cmp    eax,0xee3f5858
  41ea8d:	push   ebx
  41ea8e:	call   FWORD PTR ds:0x5c7dd976
  41ea95:	mov    esi,0x2ef1476c
  41ea9a:	ja     0x41ea83
  41ea9c:	push   ebx
  41ea9d:	rcr    BYTE PTR [edi+0x3d],cl
  41eaa0:	and    eax,0x6d38d0fe
  41eaa5:	jo     0x41ea36
  41eaa7:	sbb    BYTE PTR [ebx-0x62b764f3],cl
  41eaad:	pushf  
  41eaae:	mov    ebx,0x4cb0012a
  41eab3:	push   ebp
  41eab4:	rol    edx,0x8e
  41eab7:	push   ss
  41eab8:	cmp    dh,BYTE PTR [esi+0x696b0edb]
  41eabe:	jecxz  0x41eb3d
  41eac0:	add    BYTE PTR [edi-0x5f64ae31],0x98
  41eac7:	xchg   edi,eax
  41eac8:	mov    edx,0xce69a7fd
  41eacd:	mov    ch,0x13
  41eacf:	out    dx,al
  41ead0:	mov    ds:0xda232a0c,eax
  41ead5:	or     cl,bl
  41ead7:	fcom   QWORD PTR [esi]
  41ead9:	add    eax,0xf4635cf3
  41eade:	inc    ebx
  41eadf:	ja     0x41eb35
  41eae1:	pop    ebx
  41eae2:	pop    es
  41eae3:	xchg   esp,eax
  41eae4:	stos   DWORD PTR es:[edi],eax
  41eae5:	mov    ebx,0x42e83319
  41eaea:	push   ebp
  41eaeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eaec:	stc    
  41eaed:	cld    
  41eaee:	dec    ecx
  41eaef:	jge    0x41eb64
  41eaf1:	push   ss
  41eaf2:	dec    ebp
  41eaf3:	sub    al,0x60
  41eaf5:	dec    edx
  41eaf6:	int3   
  41eaf7:	in     eax,0x7d
  41eaf9:	jb     0x41eae5
  41eafb:	mov    ecx,0xcc7d0e3a
  41eb00:	jg     0x41eb6d
  41eb02:	adc    BYTE PTR [edx+0x1f0461c],0x3d
  41eb09:	add    edi,ebx
  41eb0b:	loopne 0x41eb10
  41eb0d:	les    edx,FWORD PTR [ebx]
  41eb0f:	push   ss
  41eb10:	cdq    
  41eb11:	(bad)  
  41eb12:	xor    al,0x2
  41eb14:	aaa    
  41eb15:	cmp    BYTE PTR [ecx-0x44],0xf8
  41eb19:	jae    0x41eaaf
  41eb1b:	dec    eax
  41eb1c:	aad    0xc9
  41eb1e:	imul   ebp,DWORD PTR [ecx-0x7d],0x5d
  41eb22:	call   0x3f6e80d9
  41eb27:	pop    esi
  41eb28:	das    
  41eb29:	mov    esi,DWORD PTR ds:0xc49700f8
  41eb2f:	mov    edi,0xeecfb24d
  41eb34:	mov    bl,0xa6
  41eb36:	pop    esi
  41eb37:	mov    ebx,0x481efd62
  41eb3c:	xchg   ebx,eax
  41eb3d:	dec    eax
  41eb3e:	std    
  41eb3f:	daa    
  41eb40:	fild   WORD PTR [ebx-0x7d8fc9b6]
  41eb46:	xor    eax,0x491a281b
  41eb4b:	jb     0x41ebbc
  41eb4d:	cdq    
  41eb4e:	cmc    
  41eb4f:	sahf   
  41eb50:	mov    ds:0xa7cb21ac,al
  41eb55:	inc    esp
  41eb56:	dec    ebp
  41eb57:	xchg   ebp,eax
  41eb58:	nop
  41eb59:	xchg   esi,eax
  41eb5a:	jns    0x41eb53
  41eb5c:	into   
  41eb5d:	sub    ah,BYTE PTR [esi-0x3e]
  41eb60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb61:	je     0x41eb35
  41eb63:	xchg   ecx,eax
  41eb64:	mov    esp,0xe43bdc6e
  41eb69:	or     DWORD PTR [edi+0x3a865555],0x9
  41eb70:	xchg   ecx,eax
  41eb71:	push   0x975f05ef
  41eb76:	xchg   DWORD PTR [edi],ebp
  41eb78:	jle    0x41eb71
  41eb7a:	mov    esi,0x1fd37791
  41eb7f:	or     bl,BYTE PTR [ecx+0x72]
  41eb82:	cmp    bh,BYTE PTR [ebx]
  41eb84:	test   eax,0x96c427bd
  41eb89:	mov    cl,0xfe
  41eb8b:	mov    ds:0x2ee8e2ae,eax
  41eb90:	mov    dh,dl
  41eb92:	cmp    dl,BYTE PTR ds:0xdd6179f2
  41eb98:	cld    
  41eb99:	iret   
  41eb9a:	inc    edi
  41eb9b:	dec    ebx
  41eb9c:	cli    
  41eb9d:	arpl   WORD PTR [edi-0x29303b3a],ax
  41eba3:	pop    esp
  41eba4:	scas   eax,DWORD PTR es:[edi]
  41eba5:	sbb    eax,0x27884457
  41ebaa:	push   ebx
  41ebab:	shl    DWORD PTR [esi],cl
  41ebad:	ds xchg ebp,eax
  41ebaf:	out    dx,al
  41ebb0:	stos   BYTE PTR es:[edi],al
  41ebb1:	data16 rcl BYTE PTR [ecx-0x3a],1
  41ebb5:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebb7:	loop   0x41ebad
  41ebb9:	adc    al,0x5d
  41ebbb:	loopne 0x41eb87
  41ebbd:	mov    ds:0xd38ba7e0,eax
  41ebc2:	mov    ecx,0xaa8fe4f4
  41ebc7:	mov    dh,0x8c
  41ebc9:	cdq    
  41ebca:	mov    edx,0x20ef3445
  41ebcf:	sbb    al,0x80
  41ebd1:	xchg   edx,eax
  41ebd2:	mov    gs,edi
  41ebd4:	pop    esi
  41ebd5:	add    BYTE PTR fs:[esi+0x39],bh
  41ebd9:	out    dx,eax
  41ebda:	push   ecx
  41ebdb:	pop    eax
  41ebdc:	xchg   edx,eax
  41ebdd:	sar    esp,0x18
  41ebe0:	jo     0x41ebb8
  41ebe2:	ins    BYTE PTR es:[edi],dx
  41ebe3:	and    edi,edx
  41ebe5:	jl     0x41ec2e
  41ebe7:	cmp    bh,dh
  41ebe9:	ins    DWORD PTR es:[edi],dx
  41ebea:	add    eax,0x5c02672b
  41ebef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebf0:	scas   al,BYTE PTR es:[edi]
  41ebf1:	ret    0xa2db
  41ebf4:	(bad)  
  41ebf5:	dec    edi
  41ebf6:	pop    ecx
  41ebf7:	sbb    eax,0xdfffbc06
  41ebfc:	push   esp
  41ebfd:	aaa    
  41ebfe:	pop    ebx
  41ebff:	nop
  41ec00:	shr    DWORD PTR [eax-0x1c],1
  41ec03:	test   BYTE PTR [ebx],dh
  41ec05:	ror    BYTE PTR [di],1
  41ec08:	dec    ecx
  41ec09:	int3   
  41ec0a:	inc    esi
  41ec0b:	and    eax,DWORD PTR es:[edi+0x490a3d71]
  41ec12:	repnz loopne 0x41ebd0
  41ec15:	xchg   ebp,eax
  41ec16:	stc    
  41ec17:	jo     0x41ec78
  41ec19:	ret    
  41ec1a:	ss adc bh,bh
  41ec1d:	adc    al,0x6a
  41ec1f:	cmp    al,0x87
  41ec21:	push   0xffffffb0
  41ec23:	repz jg 0x41ec7a
  41ec26:	jmp    0x41eca5
  41ec28:	popa   
  41ec29:	jmp    0xc97a:0x5ac52a8d
  41ec30:	cdq    
  41ec31:	cs scas eax,DWORD PTR es:[edi]
  41ec33:	out    0xe,al
  41ec35:	xor    BYTE PTR [ebx],dh
  41ec37:	push   es
  41ec38:	or     DWORD PTR [esp+esi*1],esp
  41ec3b:	popa   
  41ec3c:	es xchg esi,eax
  41ec3e:	mov    ebx,0xc17d371
  41ec43:	js     0x41ec85
  41ec45:	mov    BYTE PTR [edi],cl
  41ec47:	pusha  
  41ec48:	mov    eax,ds:0x76ada016
  41ec4d:	jne    0x41ebf3
  41ec4f:	(bad)  
  41ec50:	mov    edx,0x6cd67487
  41ec55:	fstp   DWORD PTR [ecx+0x946d228]
  41ec5b:	sub    DWORD PTR [edi-0x28996958],ebp
  41ec61:	mov    ecx,0xe47bb403
  41ec66:	dec    ebp
  41ec67:	or     al,0xae
  41ec69:	outs   dx,BYTE PTR ds:[esi]
  41ec6a:	mov    ah,0xb8
  41ec6c:	add    al,0x20
  41ec6e:	rcr    BYTE PTR [eax+0x1],cl
  41ec71:	cwde   
  41ec72:	imul   ebp,DWORD PTR [ebp-0x26],0xf94276a1
  41ec79:	jae    0x41ec26
  41ec7b:	(bad)  
  41ec7c:	fwait
  41ec7d:	jb     0x41ec92
  41ec7f:	popf   
  41ec80:	push   0xffffffd8
  41ec82:	repnz adc DWORD PTR [ecx],ecx
  41ec85:	in     eax,dx
  41ec86:	mov    ds:0x774c8f4c,al
  41ec8b:	ins    BYTE PTR es:[edi],dx
  41ec8c:	jmp    0x66f960c9
  41ec91:	sub    DWORD PTR [esi],esp
  41ec93:	lea    edx,[edi-0x67]
  41ec96:	daa    
  41ec97:	ret    
  41ec98:	dec    BYTE PTR [edx-0x4f15af35]
  41ec9e:	push   ss
  41ec9f:	dec    esi
  41eca0:	(bad)  
  41eca1:	cld    
  41eca2:	loop   0x41ed09
  41eca4:	ins    BYTE PTR es:[edi],dx
  41eca5:	loopne 0x41ec7b
  41eca7:	out    dx,al
  41eca8:	sbb    BYTE PTR [ebp-0x613cb811],bh
  41ecae:	shl    BYTE PTR [edx-0x60d4c0ef],cl
  41ecb4:	xchg   edi,eax
  41ecb5:	shl    DWORD PTR [edx-0x23],cl
  41ecb8:	std    
  41ecb9:	sub    esp,DWORD PTR [ebx]
  41ecbb:	pop    edi
  41ecbc:	pop    edi
  41ecbd:	retf   
  41ecbe:	inc    ebx
  41ecbf:	sbb    BYTE PTR [esi],ch
  41ecc1:	lea    edi,ds:0xb73bc0ee
  41ecc7:	push   esi
  41ecc8:	inc    edi
  41ecc9:	adc    BYTE PTR ds:[esi-0x64],dh
  41eccd:	enter  0xedd7,0xea
  41ecd1:	lock xchg edx,edi
  41ecd4:	inc    ebp
  41ecd5:	(bad)  
  41ecd6:	bnd jle 0x41ece0
  41ecd9:	mov    ch,0x72
  41ecdb:	rcl    edi,0x4b
  41ecde:	sub    eax,DWORD PTR [edi+edi*8]
  41ece1:	js     0x41ed0b
  41ece3:	add    eax,0x46a6051f
  41ece8:	loopne 0x41ec7b
  41ecea:	arpl   WORD PTR [ebp+0x1e],si
  41eced:	out    dx,al
  41ecee:	cmp    eax,0xae5bc1aa
  41ecf3:	not    dh
  41ecf5:	jmp    0x8dabf6ac
  41ecfa:	int    0x9d
  41ecfc:	mov    cl,0x59
  41ecfe:	pusha  
  41ecff:	and    dl,BYTE PTR [ebx-0x6d]
  41ed02:	mov    esp,ebx
  41ed04:	cmp    cl,BYTE PTR [ebx-0x20de627e]
  41ed0a:	mov    edi,esp
  41ed0c:	lock outs dx,BYTE PTR ds:[esi]
  41ed0e:	xor    DWORD PTR [ebp-0x75568125],ebx
  41ed14:	scas   eax,DWORD PTR es:[edi]
  41ed15:	call   0xa38:0x41b09a20
  41ed1c:	out    dx,al
  41ed1d:	sbb    ebx,DWORD PTR [ebp-0x611b8529]
  41ed23:	pop    ss
  41ed24:	ins    DWORD PTR es:[edi],dx
  41ed25:	dec    ebx
  41ed26:	gs and eax,0x35b91996
  41ed2c:	add    ecx,esi
  41ed2e:	push   ecx
  41ed2f:	mov    ch,0x50
  41ed31:	lods   al,BYTE PTR ds:[esi]
  41ed32:	mov    BYTE PTR [edx-0x2e],al
  41ed35:	(bad)  
  41ed36:	cmovle ebp,DWORD PTR [ebx-0x4]
  41ed3a:	lods   eax,DWORD PTR ds:[esi]
  41ed3b:	push   eax
  41ed3c:	sbb    BYTE PTR [eax-0x2d],dl
  41ed3f:	(bad)  
  41ed40:	cdq    
  41ed41:	rol    bh,cl
  41ed43:	outs   dx,BYTE PTR ds:[esi]
  41ed44:	inc    esi
  41ed45:	rcl    al,cl
  41ed47:	out    0x10,al
  41ed49:	outs   dx,DWORD PTR ds:[esi]
  41ed4a:	and    edx,eax
  41ed4c:	dec    ecx
  41ed4d:	rcl    bh,1
  41ed4f:	pop    ss
  41ed50:	push   0x667eca95
  41ed55:	shl    ch,0x4e
  41ed58:	cmp    al,0x89
  41ed5a:	loop   0x41ed01
  41ed5c:	and    DWORD PTR [esi+0x30a1d824],esp
  41ed62:	push   edi
  41ed63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed64:	hlt    
  41ed65:	ret    
  41ed66:	addr16 dec edx
  41ed68:	dec    edi
  41ed69:	stc    
  41ed6a:	sub    eax,0x615547b9
  41ed6f:	fs in  eax,0xb9
  41ed72:	xchg   ecx,eax
  41ed73:	push   es
  41ed74:	clc    
  41ed75:	xor    BYTE PTR [ecx+0x44],dh
  41ed78:	jnp    0x41ed6d
  41ed7a:	scas   al,BYTE PTR es:[edi]
  41ed7b:	inc    esp
  41ed7c:	add    esi,ebp
  41ed7e:	retf   
  41ed7f:	lods   al,BYTE PTR ds:[esi]
  41ed80:	shr    ebp,1
  41ed82:	js     0x41edae
  41ed84:	inc    eax
  41ed85:	test   al,0x67
  41ed87:	add    dl,BYTE PTR [ecx-0x6b539aeb]
  41ed8d:	fwait
  41ed8e:	or     ebx,edi
  41ed90:	cmp    al,0x19
  41ed92:	mov    edx,0xcb39afcd
  41ed97:	pop    edx
  41ed98:	ficomp WORD PTR [eax+0x73]
  41ed9b:	and    bl,ah
  41ed9d:	mov    fs,WORD PTR [edi-0x186ec89d]
  41eda3:	sbb    ebp,esi
  41eda5:	xor    dh,dl
  41eda7:	add    DWORD PTR [edi-0x5b],edx
  41edaa:	aam    0x81
  41edac:	dec    eax
  41edad:	mov    ds:0x3066ecce,al
  41edb2:	adc    al,0x10
  41edb4:	mov    edi,0xa3106044
  41edb9:	xor    dh,bl
  41edbb:	inc    esp
  41edbc:	and    DWORD PTR [ebp+0x5c693ccb],ecx
  41edc2:	add    eax,0x5a4ee04
  41edc7:	lods   eax,DWORD PTR ds:[esi]
  41edc8:	in     eax,0x35
  41edca:	imul   edx,DWORD PTR fs:[eax],0xffffffba
  41edce:	xchg   esp,eax
  41edcf:	scas   al,BYTE PTR es:[edi]
  41edd0:	sbb    BYTE PTR [ebp+0x5575eb59],dh
  41edd6:	out    0x35,al
  41edd8:	retf   
  41edd9:	and    eax,0xe10b475e
  41edde:	sub    eax,0xf38504a7
  41ede3:	stos   BYTE PTR es:[edi],al
  41ede4:	cmp    edx,DWORD PTR [edx]
  41ede6:	cmp    ch,cl
  41ede8:	jg     0x41ed71
  41edea:	icebp  
  41edeb:	sbb    ecx,DWORD PTR [ecx]
  41eded:	dec    eax
  41edee:	lds    edi,FWORD PTR [edx]
  41edf0:	les    esp,FWORD PTR [ebx-0x18683d55]
  41edf6:	inc    edx
  41edf7:	or     dl,bh
  41edf9:	inc    esi
  41edfa:	mov    edx,0x371f41c6
  41edff:	inc    eax
  41ee00:	xlat   BYTE PTR ds:[ebx]
  41ee01:	add    eax,0x16021caf
  41ee06:	xor    eax,0xf45d6ec2
  41ee0b:	sub    DWORD PTR ds:0x1cf6da38,edx
  41ee11:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41ee13:	popf   
  41ee14:	mov    ah,0x18
  41ee16:	leave  
  41ee17:	xchg   esi,eax
  41ee18:	adc    BYTE PTR [ebp+0x49],bl
  41ee1b:	push   esi
  41ee1c:	or     BYTE PTR [eax+0x5c],cl
  41ee1f:	jns    0x41edf0
  41ee21:	xchg   ecx,eax
  41ee22:	or     BYTE PTR [edi+0x19],0xb5
  41ee26:	xchg   edx,eax
  41ee27:	xchg   edi,eax
  41ee28:	push   cs
  41ee29:	loope  0x41ee18
  41ee2b:	leave  
  41ee2c:	sub    al,0x42
  41ee2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee2f:	push   ecx
  41ee30:	cmp    BYTE PTR [esp+esi*4],ch
  41ee33:	outs   dx,BYTE PTR ds:[esi]
  41ee34:	xlat   BYTE PTR ds:[ebx]
  41ee35:	xchg   ebx,eax
  41ee36:	add    DWORD PTR [eax],eax
  41ee38:	sbb    al,0x5c
  41ee3a:	test   BYTE PTR [esi+ebx*2],al
  41ee3d:	push   0xffffffc7
  41ee3f:	dec    esi
  41ee40:	xor    cl,bl
  41ee42:	push   ds
  41ee43:	mov    bh,0x38
  41ee45:	jmp    0x2ea7:0x18e2db0d
  41ee4c:	mov    cl,0x89
  41ee4e:	sub    bl,BYTE PTR [eax]
  41ee50:	or     dl,BYTE PTR [ebp-0x14]
  41ee53:	mov    esi,0xee86e577
  41ee58:	adc    al,BYTE PTR ds:0x3cf27e99
  41ee5e:	cmp    DWORD PTR [esi],edx
  41ee60:	adc    DWORD PTR [ecx+0x4e7b08d2],esp
  41ee66:	fstp   DWORD PTR [ebx+0x23]
  41ee69:	lds    edx,FWORD PTR [ecx+0x46]
  41ee6c:	cmc    
  41ee6d:	into   
  41ee6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee6f:	icebp  
  41ee70:	ja     0x41eec0
  41ee72:	aaa    
  41ee73:	imul   esp,DWORD PTR [ecx+0x30],0xffffffeb
  41ee77:	sub    eax,0xd6a09927
  41ee7c:	push   0x211af21d
  41ee81:	arpl   ax,di
  41ee83:	adc    bh,BYTE PTR [eax+edx*2]
  41ee86:	pop    edx
  41ee87:	lahf   
  41ee88:	mul    DWORD PTR ds:0xb49442fb
  41ee8e:	push   ebp
  41ee8f:	xor    BYTE PTR [ebx],0xd7
  41ee92:	imul   edx,ebx,0x30
  41ee95:	(bad)  
  41ee97:	pop    edx
  41ee98:	pop    esi
  41ee99:	es (bad) 
  41ee9b:	shl    BYTE PTR ds:0xd9187791,cl
  41eea1:	xlat   BYTE PTR ds:[ebx]
  41eea2:	jmp    0x4fbbdf71
  41eea7:	das    
  41eea8:	mov    dh,0x8b
  41eeaa:	add    ebx,DWORD PTR [edi-0x670f45fe]
  41eeb0:	pop    esp
  41eeb1:	jbe    0x41eeb6
  41eeb3:	pop    ebp
  41eeb4:	push   ds
  41eeb5:	pop    ecx
  41eeb6:	cmc    
  41eeb7:	sbb    eax,0xcd763fb5
  41eebc:	mov    eax,ds:0x6e586ab4
  41eec1:	add    al,0x71
  41eec3:	push   ss
  41eec4:	pop    ss
  41eec5:	outs   dx,BYTE PTR ds:[esi]
  41eec6:	push   es
  41eec7:	mov    edi,0x19c359ec
  41eecc:	cld    
  41eecd:	std    
  41eece:	cmp    eax,DWORD PTR [eax]
  41eed0:	and    DWORD PTR [edi+0x408dfe31],ebx
  41eed6:	push   esi
  41eed7:	fld    QWORD PTR [eax+0x39]
  41eeda:	sbb    BYTE PTR [edx+0x3df60462],bl
  41eee0:	ja     0x41eeb9
  41eee2:	lods   al,BYTE PTR ds:[esi]
  41eee3:	dec    esi
  41eee4:	daa    
  41eee5:	xchg   ebx,eax
  41eee6:	sbb    ecx,DWORD PTR [esi+0x34]
  41eee9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eeeb:	cmp    eax,0xeead8c0a
  41eef0:	test   DWORD PTR [ebp-0x3ade701c],eax
  41eef6:	add    eax,0x4f633cc9
  41eefb:	fisttp DWORD PTR [eax+0x7b]
  41eefe:	loopne 0x41eeaa
  41ef00:	fld    QWORD PTR [esi-0x3]
  41ef03:	(bad)  
  41ef04:	jecxz  0x41ee9f
  41ef06:	sub    ebx,DWORD PTR [edx]
  41ef08:	adc    al,0xe3
  41ef0a:	jge    0x41ef7c
  41ef0c:	(bad)  
  41ef0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef0e:	daa    
  41ef0f:	push   edi
  41ef10:	stc    
  41ef11:	leave  
  41ef12:	ins    BYTE PTR es:[edi],dx
  41ef13:	std    
  41ef14:	icebp  
  41ef15:	imul   edx,DWORD PTR [edi],0x5e
  41ef18:	pop    es
  41ef19:	xchg   DWORD PTR [esi],esi
  41ef1b:	sbb    esi,0xea69c3ec
  41ef21:	cmp    al,0x75
  41ef23:	aas    
  41ef24:	mov    dl,BYTE PTR [edx]
  41ef26:	imul   ebp,DWORD PTR [ebx-0x56],0x1a
  41ef2a:	push   0xfffffff5
  41ef2c:	repnz int 0xb7
  41ef2f:	ins    BYTE PTR es:[edi],dx
  41ef30:	cwde   
  41ef31:	jnp    0x41ef95
  41ef33:	pop    edx
  41ef34:	sti    
  41ef35:	es gs jmp 0xd8b5:0xacbae9e2
  41ef3e:	aas    
  41ef3f:	xchg   esp,eax
  41ef40:	pop    edx
  41ef41:	mov    gs,WORD PTR [edi+0x10c65ae0]
  41ef47:	cmp    al,0x3a
  41ef49:	(bad)  
  41ef4a:	jo     0x41eeec
  41ef4c:	mov    eax,0xd239445a
  41ef51:	inc    esi
  41ef52:	and    al,0xa9
  41ef54:	sub    esp,DWORD PTR [ecx-0x4ef8c6ee]
  41ef5a:	push   cs
  41ef5b:	in     al,dx
  41ef5c:	jl     0x41ef46
  41ef5e:	pop    ebp
  41ef5f:	add    dh,BYTE PTR [ebp+ebp*1-0x1d]
  41ef63:	mov    eax,0x7efa331e
  41ef68:	push   eax
  41ef69:	cmp    dh,BYTE PTR [ecx+0x4e]
  41ef6c:	sbb    al,0xf
  41ef6e:	scas   eax,DWORD PTR es:[edi]
  41ef6f:	test   eax,0xf8756dfc
  41ef74:	inc    ebp
  41ef75:	std    
  41ef76:	loopne 0x41ef15
  41ef78:	out    0xea,al
  41ef7a:	pushf  
  41ef7b:	pop    ss
  41ef7c:	jbe    0x41ef3c
  41ef7e:	jg     0x41ef19
  41ef80:	cld    
  41ef81:	jg     0x41ef83
  41ef83:	in     al,0x18
  41ef85:	mov    al,ds:0x49f63c9b
  41ef8a:	fxam   
  41ef8c:	sub    dl,BYTE PTR [ebx-0x14]
  41ef8f:	mov    al,0x36
  41ef91:	pushf  
  41ef92:	icebp  
  41ef93:	ins    DWORD PTR es:[edi],dx
  41ef94:	dec    ebx
  41ef95:	in     al,0x93
  41ef97:	test   al,0x5a
  41ef99:	mov    dh,0x57
  41ef9b:	and    esi,edx
  41ef9d:	cli    
  41ef9e:	dec    edx
  41ef9f:	xchg   esp,eax
  41efa0:	cwde   
  41efa1:	jp     0x41ef78
  41efa3:	add    ah,BYTE PTR [ecx+0x13]
  41efa6:	mov    eax,0x101ddd7f
  41efab:	inc    edi
  41efac:	call   0x534d:0x952b12a6
  41efb3:	sbb    BYTE PTR [edx-0x48c254a6],cl
  41efb9:	jmp    0x2559:0xc25fe3b1
  41efc0:	push   ebp
  41efc1:	and    al,0x23
  41efc3:	outs   dx,DWORD PTR ds:[esi]
  41efc4:	pop    edx
  41efc5:	fild   QWORD PTR [ebp-0x1f]
  41efc8:	and    DWORD PTR [ecx],ecx
  41efca:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41efcc:	push   esi
  41efcd:	xchg   dl,ah
  41efcf:	aaa    
  41efd0:	jb     0x41f046
  41efd2:	jo     0x41efeb
  41efd4:	add    edx,ebp
  41efd6:	mov    ebx,0xc32e30e2
  41efdb:	cmovl  ecx,esi
  41efde:	xchg   DWORD PTR ds:0xe69e5bb1,ebp
  41efe4:	inc    esp
  41efe5:	sbb    bl,ch
  41efe7:	pop    di
  41efe9:	retf   0x9a6b
  41efec:	sub    al,0xb3
  41efee:	popa   
  41efef:	sub    bh,dl
  41eff1:	fidivr DWORD PTR [edi+0x58]
  41eff4:	test   eax,0x42dba5cd
  41eff9:	(bad)  
  41effa:	rcr    DWORD PTR [edi-0x48],1
  41effd:	lock mov edx,0xcfa2e395
  41f003:	into   
  41f004:	aam    0xa2
  41f006:	mov    ds:0x75b82524,eax
  41f00b:	in     eax,0xbf
  41f00d:	fild   QWORD PTR [edi-0x48e949e2]
  41f013:	in     al,0x74
  41f015:	sbb    eax,edi
  41f017:	jno    0x41efb1
  41f019:	cmp    eax,0xea0a89b8
  41f01e:	lds    edi,FWORD PTR [ebx+esi*1-0x11e2ba3b]
  41f025:	jno    0x41f09b
  41f027:	cwde   
  41f028:	iret   
  41f029:	stos   BYTE PTR es:[edi],al
  41f02a:	cdq    
  41f02b:	aam    0xe3
  41f02d:	mov    bl,0xef
  41f02f:	or     cl,al
  41f031:	sub    eax,0x53a5ae45
  41f036:	iret   
  41f037:	test   DWORD PTR [ebx],edi
  41f039:	sub    al,0xb2
  41f03b:	and    eax,DWORD PTR ss:[ecx]
  41f03e:	into   
  41f03f:	cmp    DWORD PTR [ebp-0x42dc866a],0x56
  41f046:	sbb    al,0xb2
  41f048:	(bad)  
  41f049:	in     eax,dx
  41f04a:	xor    eax,0x3e7bf399
  41f04f:	pusha  
  41f050:	(bad)  
  41f051:	(bad)  
  41f052:	out    0x41,eax
  41f054:	or     al,0x89
  41f056:	xor    ch,BYTE PTR [edi+0x175373bf]
  41f05c:	and    ebp,DWORD PTR [eax]
  41f05e:	mov    edi,0x48030c88
  41f063:	mov    esp,0xdcbad17b
  41f068:	in     eax,dx
  41f069:	inc    edi
  41f06a:	fdivr  QWORD PTR ds:0xceef5257
  41f070:	outs   dx,DWORD PTR ds:[esi]
  41f071:	xor    al,0xc9
  41f073:	jl     0x41f038
  41f075:	adc    BYTE PTR [edx],al
  41f077:	push   0xffffffc4
  41f079:	fs inc ebx
  41f07b:	or     cl,0xb7
  41f07e:	push   es
  41f07f:	cdq    
  41f080:	mov    edi,0xd0e649b0
  41f085:	dec    edi
  41f086:	(bad)  [edi]
  41f088:	jns    0x41f0fe
  41f08a:	mov    ch,0x18
  41f08c:	push   es
  41f08d:	xchg   esi,eax
  41f08e:	jnp    0x41f085
  41f090:	sti    
  41f091:	mov    dh,0xf7
  41f093:	xor    al,0xd8
  41f095:	stos   DWORD PTR es:[edi],eax
  41f096:	mov    ah,0x47
  41f098:	cli    
  41f099:	dec    esi
  41f09a:	xchg   edx,eax
  41f09b:	jne    0x41f061
  41f09d:	jmp    0x41f107
  41f09f:	sbb    dl,BYTE PTR [ebx+0x4aa0937b]
  41f0a5:	add    eax,0x86e7bb7c
  41f0aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0ab:	mov    cl,0x4e
  41f0ad:	xchg   BYTE PTR [esi-0x52],cl
  41f0b0:	push   esi
  41f0b1:	or     eax,0x84a5f9a8
  41f0b6:	xchg   DWORD PTR [ebp+0x22],esp
  41f0b9:	pop    esi
  41f0ba:	leave  
  41f0bb:	hlt    
  41f0bc:	ins    DWORD PTR es:[edi],dx
  41f0bd:	lds    esp,FWORD PTR [edx+ebp*4+0xdcc0612]
  41f0c4:	xchg   edi,eax
  41f0c5:	sbb    cl,BYTE PTR ds:0xbb484d0e
  41f0cb:	xor    al,0x95
  41f0cd:	out    0xf9,eax
  41f0cf:	nop
  41f0d0:	pop    ds
  41f0d1:	nop
  41f0d2:	xchg   edi,eax
  41f0d3:	dec    esp
  41f0d4:	xor    BYTE PTR [edx-0x5d7ed298],cl
  41f0da:	sbb    esp,ebx
  41f0dc:	mov    esi,0xa215aa21
  41f0e1:	out    0xc1,eax
  41f0e3:	adc    edi,DWORD PTR [edx+0x65dc4a5f]
  41f0e9:	ror    ecx,1
  41f0eb:	lds    edx,FWORD PTR [eax+0x52]
  41f0ee:	ins    BYTE PTR es:[edi],dx
  41f0ef:	cdq    
  41f0f0:	or     al,0x66
  41f0f2:	nop
  41f0f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0f4:	inc    ecx
  41f0f5:	pop    ebp
  41f0f6:	repz fisttp QWORD PTR fs:[bx+0x68]
  41f0fc:	sub    al,dh
  41f0fe:	dec    ebx
  41f0ff:	xchg   edx,eax
  41f100:	push   edx
  41f101:	push   ebx
  41f102:	lock sbb BYTE PTR [edx+edi*4],cl
  41f106:	dec    ebp
  41f107:	jnp    0x41f0c3
  41f109:	retf   
  41f10a:	pop    es
  41f10b:	leave  
  41f10c:	dec    esi
  41f10d:	push   0xfffffff8
  41f10f:	or     eax,0x54b9eda3
  41f114:	xchg   ebp,eax
  41f115:	xchg   edi,eax
  41f116:	in     al,dx
  41f117:	sub    DWORD PTR [eax+0x78896633],0xc
  41f11e:	cld    
  41f11f:	popa   
  41f120:	sbb    BYTE PTR [edi],ch
  41f122:	adc    cl,BYTE PTR [eax-0x21]
  41f125:	shr    dh,1
  41f127:	adc    eax,0xb7aa243a
  41f12c:	pop    esp
  41f12d:	arpl   dx,di
  41f12f:	and    al,0x91
  41f131:	(bad)  
  41f133:	xchg   BYTE PTR [ecx+0x729c71f0],ch
  41f139:	(bad)  
  41f13b:	push   ss
  41f13c:	cs xchg esi,eax
  41f13e:	fdivrp st(7),st
  41f140:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f141:	mov    ecx,0xec9b31bf
  41f146:	push   0x3ee5fadf
  41f14b:	ins    BYTE PTR es:[edi],dx
  41f14c:	jbe    0x41f19b
  41f14e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f14f:	push   ecx
  41f150:	std    
  41f151:	dec    edx
  41f152:	xchg   edx,eax
  41f153:	inc    ebp
  41f154:	xchg   ecx,eax
  41f155:	retf   
  41f156:	adc    DWORD PTR [ebp+ebx*1+0x6bd9e278],ecx
  41f15d:	pop    ds
  41f15e:	call   0x2081a3c3
  41f163:	cs daa 
  41f165:	ja     0x41f19e
  41f167:	xchg   esi,eax
  41f168:	mov    ebp,DWORD PTR [ecx+0x5f]
  41f16b:	jbe    0x41f102
  41f16d:	mov    dh,0x6a
  41f16f:	add    al,0x93
  41f171:	lahf   
  41f172:	stc    
  41f173:	fsub   st(0),st
  41f175:	outs   dx,DWORD PTR ds:[esi]
  41f176:	dec    ebx
  41f177:	jmp    0xeeef:0x988caebe
  41f17e:	push   cs
  41f17f:	stc    
  41f180:	mov    edx,DWORD PTR [ebx]
  41f182:	scas   al,BYTE PTR es:[edi]
  41f183:	aaa    
  41f184:	test   al,0x7e
  41f186:	mov    esp,0xb501ac7f
  41f18b:	hlt    
  41f18c:	cwde   
  41f18d:	add    al,0x4e
  41f18f:	(bad)  [ebp+0x673c266f]
  41f195:	sti    
  41f196:	out    dx,eax
  41f197:	in     al,dx
  41f198:	out    dx,al
  41f199:	addr16 xchg edx,eax
  41f19b:	push   edi
  41f19c:	cmp    al,0x33
  41f19e:	xor    ebp,DWORD PTR [edx+0x64abf857]
  41f1a4:	popf   
  41f1a5:	adc    al,0x73
  41f1a7:	in     eax,0xa0
  41f1a9:	push   cs
  41f1aa:	fmul   QWORD PTR [esi+0x7]
  41f1ad:	arpl   WORD PTR [ecx],bx
  41f1af:	out    0x8b,al
  41f1b1:	cmp    edi,DWORD PTR [edx+0x26]
  41f1b4:	(bad)  
  41f1b5:	sahf   
  41f1b6:	sub    al,ah
  41f1b8:	lods   al,BYTE PTR ds:[esi]
  41f1b9:	dec    ecx
  41f1ba:	ja     0x41f1b4
  41f1bc:	pusha  
  41f1bd:	ins    DWORD PTR es:[edi],dx
  41f1be:	inc    esi
  41f1bf:	std    
  41f1c0:	out    0x22,al
  41f1c2:	in     eax,dx
  41f1c3:	inc    ecx
  41f1c4:	jb     0x41f1a5
  41f1c6:	or     ecx,edi
  41f1c8:	dec    ebx
  41f1c9:	fs pop esi
  41f1cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1cc:	arpl   WORD PTR [ebx-0x48],ax
  41f1cf:	into   
  41f1d0:	inc    edx
  41f1d1:	cwde   
  41f1d2:	add    bh,BYTE PTR [esi+ecx*4]
  41f1d5:	lods   eax,DWORD PTR ds:[esi]
  41f1d6:	enter  0xf40,0x80
  41f1da:	jns    0x41f1ce
  41f1dc:	(bad)  
  41f1dd:	adc    eax,0xef7f9237
  41f1e2:	sub    bl,cl
  41f1e4:	(bad)  
  41f1e5:	mov    eax,ds:0x92ce571f
  41f1ea:	cdq    
  41f1eb:	push   esp
  41f1ec:	outs   dx,DWORD PTR ds:[esi]
  41f1ed:	sub    DWORD PTR [ecx+0x7f],ebx
  41f1f0:	add    eax,0x91c733af
  41f1f5:	xchg   edx,eax
  41f1f6:	mov    bh,0xa6
  41f1f8:	push   ebp
  41f1f9:	ror    DWORD PTR [ebx+0x72],0xd7
  41f1fd:	sti    
  41f1fe:	xchg   ch,ah
  41f200:	add    al,0x4d
  41f202:	ins    DWORD PTR es:[edi],dx
  41f203:	test   BYTE PTR [ebx+0x3db87bb2],bh
  41f209:	xchg   ebx,eax
  41f20a:	repnz push edi
  41f20c:	sahf   
  41f20d:	cmova  ebx,DWORD PTR [edx+esi*4+0x25]
  41f212:	pushf  
  41f213:	inc    edx
  41f214:	jo     0x41f26d
  41f216:	jp     0x41f212
  41f218:	jb     0x41f1e6
  41f21a:	sahf   
  41f21b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f21c:	ds cwde 
  41f21e:	and    BYTE PTR [ebx-0x709a71c9],dh
  41f224:	(bad)  
  41f225:	push   esp
  41f226:	es aaa 
  41f228:	(bad)  [edx]
  41f22a:	ret    0x9604
  41f22d:	cs jecxz 0x41f286
  41f230:	stos   DWORD PTR es:[edi],eax
  41f231:	lods   al,BYTE PTR ds:[esi]
  41f232:	in     al,0x3e
  41f234:	(bad)  
  41f235:	or     eax,0x166f5a0
  41f23a:	in     al,dx
  41f23b:	and    al,0x35
  41f23d:	jl     0x41f235
  41f23f:	sub    esi,DWORD PTR [esi-0x72]
  41f242:	iret   
  41f243:	inc    eax
  41f244:	pop    edx
  41f245:	cmp    dl,BYTE PTR [edi-0x79b7c3d9]
  41f24b:	dec    esi
  41f24c:	in     eax,dx
  41f24d:	mov    dh,0xff
  41f24f:	pop    esp
  41f250:	cmp    eax,0xff57efbd
  41f255:	xor    BYTE PTR [esi+0x410fee82],ch
  41f25b:	pop    esp
  41f25c:	and    BYTE PTR [edx-0x145f9ad8],dh
  41f262:	retf   0x3065
  41f265:	bound  esp,QWORD PTR [esi-0x7381d23f]
  41f26b:	je     0x41f23b
  41f26d:	push   ecx
  41f26e:	leave  
  41f26f:	test   DWORD PTR [edx-0x6d0b3a63],esi
  41f275:	pushf  
  41f276:	push   ds
  41f277:	test   BYTE PTR [ecx],bl
  41f279:	push   0x329d8333
  41f27e:	push   edi
  41f27f:	ss inc edi
  41f281:	test   eax,0xd2bac417
  41f286:	addr16 jl 0x41f29a
  41f289:	and    al,0x7b
  41f28b:	mov    esi,0x1324cb63
  41f290:	add    al,0x61
  41f292:	popf   
  41f293:	clc    
  41f294:	(bad)  
  41f295:	mov    al,0x4d
  41f297:	xchg   esi,eax
  41f298:	fmulp  st(6),st
  41f29a:	dec    edx
  41f29b:	push   esi
  41f29c:	loop   0x41f260
  41f29e:	mov    dl,0xa6
  41f2a0:	and    edi,DWORD PTR ds:0xaea8eec3
  41f2a6:	fcmovnu st,st(0)
  41f2a8:	mov    ecx,0x5d5b22e2
  41f2ad:	dec    ecx
  41f2ae:	mov    ebx,0x1d14fcee
  41f2b3:	push   0x5b
  41f2b5:	faddp  st(1),st
  41f2b7:	clc    
  41f2b8:	retf   0xb899
  41f2bb:	sub    esp,ebp
  41f2bd:	xor    al,0x6f
  41f2bf:	dec    edi
  41f2c0:	xor    ch,BYTE PTR [ebp+0x3]
  41f2c3:	jle    0x41f2cf
  41f2c5:	jmp    0x41f260
  41f2c7:	sub    DWORD PTR [edi+eiz*4+0x3535941b],ebx
  41f2ce:	and    al,0x64
  41f2d0:	(bad)
  41f2d3:	adc    DWORD PTR [esi],eax
  41f2d5:	xlat   BYTE PTR ds:[ebx]
  41f2d6:	cmp    BYTE PTR [esi-0x5422bb7f],bh
  41f2dc:	(bad)  
  41f2dd:	ins    BYTE PTR es:[edi],dx
  41f2de:	add    DWORD PTR [ebx+0x19aa7793],edx
  41f2e4:	push   esi
  41f2e5:	jge    0x41f271
  41f2e7:	addr16 push ss
  41f2e9:	lds    esi,FWORD PTR ds:0xe0dd7de8
  41f2ef:	out    dx,al
  41f2f0:	push   esp
  41f2f1:	add    al,0x4a
  41f2f3:	mov    ds:0x8a1b10c3,eax
  41f2f8:	jns    0x41f2d3
  41f2fa:	loopne 0x41f379
  41f2fc:	lahf   
  41f2fd:	cmp    eax,0x59fc73db
  41f302:	rol    DWORD PTR [eax-0x74],0x82
  41f306:	stos   DWORD PTR es:[edi],eax
  41f307:	sti    
  41f308:	cmp    BYTE PTR [edx],ah
  41f30a:	jo     0x41f364
  41f30c:	mov    WORD PTR ds:0xe3e3c4c9,ds
  41f312:	pop    edx
  41f313:	fyl2x  
  41f315:	sar    BYTE PTR [edi+0x1a3a40f2],0xed
  41f31c:	mov    bh,0xa9
  41f31e:	and    DWORD PTR [edx+0x71fed5c3],esi
  41f324:	jmp    0x41f335
  41f326:	(bad)  
  41f327:	jnp    0x41f2c7
  41f329:	test   eax,0x9da1f2cb
  41f32e:	and    BYTE PTR [edi-0x5b5c8104],0x66
  41f335:	add    al,0xff
  41f337:	cmp    DWORD PTR [esi-0x69],edx
  41f33a:	pop    esi
  41f33b:	pop    ebp
  41f33c:	jmp    edi
  41f33e:	fist   DWORD PTR [edi+ebx*4]
  41f341:	pop    esp
  41f342:	mov    BYTE PTR fs:0xf5fd5d38,bl
  41f349:	cmp    DWORD PTR [eax+ebp*2+0x5b],ecx
  41f34d:	inc    edx
  41f34e:	jae    0x41f3c8
  41f350:	mov    dl,0x96
  41f352:	scas   eax,DWORD PTR es:[edi]
  41f353:	sbb    BYTE PTR [ebx],bh
  41f355:	test   bl,ah
  41f357:	ror    BYTE PTR ds:0xeef0a69d,0xe4
  41f35e:	pop    ecx
  41f35f:	(bad)  
  41f360:	stc    
  41f361:	jnp    0x41f3d0
  41f363:	mov    esp,0x150d7f9b
  41f368:	and    DWORD PTR [ecx-0x6be1cc79],eax
  41f36e:	pusha  
  41f36f:	adc    ch,ch
  41f371:	jne    0x41f395
  41f373:	call   0xa951343b
  41f378:	jae    0x41f340
  41f37a:	shl    DWORD PTR [esp+edx*2],cl
  41f37d:	jnp    0x41f326
  41f37f:	shr    DWORD PTR [eax-0x26],1
  41f382:	ins    BYTE PTR es:[edi],dx
  41f383:	test   DWORD PTR [edi+0x75e9acfd],esp
  41f389:	inc    ebx
  41f38a:	mov    WORD PTR [ecx],?
  41f38c:	shl    BYTE PTR [edi],cl
  41f38e:	pop    esi
  41f38f:	ret    0x6c10
  41f392:	dec    DWORD PTR [ebx-0x52b4578c]
  41f398:	neg    DWORD PTR ds:0xe9cef70e
  41f39e:	jmp    0xb6e2:0xe4f784a6
  41f3a5:	mov    ebx,0x65d212d1
  41f3aa:	cmp    DWORD PTR [edx+0x4c],0xfc91747
  41f3b1:	(bad)  
  41f3b3:	stos   BYTE PTR es:[edi],al
  41f3b4:	icebp  
  41f3b5:	jmp    0x85d2d15e
  41f3ba:	sbb    al,BYTE PTR [edx]
  41f3bc:	dec    esi
  41f3bd:	jbe    0x41f3c2
  41f3bf:	and    cl,0x1
  41f3c2:	test   esp,esi
  41f3c4:	jo     0x41f37d
  41f3c6:	and    eax,0xa74c308c
  41f3cb:	jcxz   0x41f39b
  41f3ce:	cwde   
  41f3cf:	sbb    esi,DWORD PTR [ebp-0x6b]
  41f3d2:	repnz test bl,0x17
  41f3d6:	repz xor ecx,edi
  41f3d9:	cmp    eax,0x32c8b0d2
  41f3de:	cld    
  41f3df:	xchg   ebx,eax
  41f3e0:	fadd   DWORD PTR [ebx+edi*4+0x706adc59]
  41f3e7:	mov    eax,ds:0xec71e21c
  41f3ec:	jge    0x41f392
  41f3ee:	xor    ecx,esi
  41f3f0:	popf   
  41f3f1:	sti    
  41f3f2:	and    ebp,DWORD PTR [ebx-0x26]
  41f3f5:	lea    esp,[ebx-0x1a]
  41f3f8:	xchg   edx,eax
  41f3f9:	jg     0x41f39e
  41f3fb:	loop   0x41f41c
  41f3fd:	std    
  41f3fe:	mov    bh,0xe6
  41f400:	clc    
  41f401:	dec    esi
  41f402:	lahf   
  41f403:	adc    bl,BYTE PTR [edi+0xc]
  41f406:	pushw  ss
  41f408:	inc    edx
  41f409:	xor    ebp,DWORD PTR [esi+0x3356e39a]
  41f40f:	or     al,0x1a
  41f411:	jno    0x41f400
  41f413:	and    ah,0x55
  41f416:	nop
  41f417:	les    esp,FWORD PTR [edi-0x25e86cbe]
  41f41d:	xchg   BYTE PTR [eax+0x70683000],cl
  41f423:	retf   0xb957
  41f426:	dec    edx
  41f427:	jbe    0x41f413
  41f429:	dec    ebx
  41f42a:	mov    ebx,fs
  41f42c:	inc    esp
  41f42d:	push   ecx
  41f42e:	and    al,BYTE PTR [esi-0x24]
  41f431:	lea    edx,[edx-0x4e4d38e9]
  41f437:	mov    ebx,0x6493b4a9
  41f43c:	adc    DWORD PTR [ebx+0x7b7a6fac],edx
  41f442:	gs loopne 0x41f490
  41f445:	mov    ebx,DWORD PTR [ecx-0x9e7737]
  41f44b:	mov    bh,0xb7
  41f44d:	clc    
  41f44e:	mov    ch,0xd
  41f450:	or     cl,BYTE PTR [ebp-0x26]
  41f453:	and    ecx,DWORD PTR [ecx]
  41f455:	loop   0x41f432
  41f457:	pop    es
  41f458:	out    dx,al
  41f459:	xchg   BYTE PTR [ebp-0x2d],dl
  41f45c:	jnp    0x41f484
  41f45e:	jl     0x41f43d
  41f460:	sahf   
  41f461:	hlt    
  41f462:	in     eax,0x28
  41f464:	add    esp,DWORD PTR [eax-0x1c]
  41f467:	cmp    DWORD PTR [edx-0x191e4dfe],eax
  41f46d:	(bad)  
  41f46e:	dec    edx
  41f46f:	and    bl,BYTE PTR [edx-0x1a3c531c]
  41f475:	pop    sp
  41f477:	fwait
  41f478:	mov    esp,0x8a88c8f6
  41f47d:	imul   eax,DWORD PTR fs:[edi-0x3a],0x3f0b74f1
  41f485:	das    
  41f486:	enter  0xe5c4,0xbd
  41f48a:	imul   ebp,DWORD PTR [eax],0xa0d8ac60
  41f490:	leave  
  41f491:	iret   
  41f492:	mov    edx,0x98403563
  41f497:	idiv   DWORD PTR [ebx-0x5a1768d6]
  41f49d:	pop    eax
  41f49e:	pop    esp
  41f49f:	call   0x83eef42c
  41f4a4:	jns    0x41f4b7
  41f4a6:	mov    edx,0xc1a48b39
  41f4ab:	(bad)  
  41f4ac:	dec    edi
  41f4ad:	push   edi
  41f4ae:	pusha  
  41f4af:	dec    esi
  41f4b0:	call   0x667ffb91
  41f4b5:	xchg   edi,eax
  41f4b6:	mov    edx,0x28c1a13c
  41f4bb:	and    eax,0x3c4e468a
  41f4c0:	call   0x451e01cb
  41f4c5:	ja     0x41f519
  41f4c7:	loope  0x41f508
  41f4c9:	std    
  41f4ca:	arpl   WORD PTR [edi+0x7c],ax
  41f4cd:	jb     0x41f4e9
  41f4cf:	xor    ah,dh
  41f4d1:	mov    ebx,0x1a95790b
  41f4d6:	xchg   edx,eax
  41f4d7:	sub    eax,DWORD PTR [eax+0x7f028111]
  41f4dd:	jae    0x41f536
  41f4df:	lods   eax,DWORD PTR ds:[esi]
  41f4e0:	jle    0x41f512
  41f4e2:	stos   BYTE PTR es:[edi],al
  41f4e3:	jne    0x41f554
  41f4e5:	xor    ebx,DWORD PTR [eax+0x11]
  41f4e8:	leave  
  41f4e9:	in     eax,dx
  41f4ea:	ins    DWORD PTR es:[edi],dx
  41f4eb:	mov    ch,0xa3
  41f4ed:	out    0xfa,eax
  41f4ef:	xor    BYTE PTR [edi+ecx*2+0x37d7c6b],al
  41f4f6:	leave  
  41f4f7:	cmp    DWORD PTR [ebx+0xdff36a9],eax
  41f4fd:	push   edi
  41f4fe:	mov    bh,0x39
  41f500:	sbb    al,0x4d
  41f502:	ret    0x2984
  41f505:	pop    ebx
  41f506:	dec    edx
  41f507:	push   edx
  41f508:	aaa    
  41f509:	fcomp  DWORD PTR [esi]
  41f50b:	std    
  41f50c:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41f50e:	data16 js 0x41f51a
  41f511:	or     DWORD PTR [edx],ebx
  41f513:	adc    edx,DWORD PTR [eax]
  41f515:	and    al,0x27
  41f517:	cmp    ah,dh
  41f519:	imul   ebx,DWORD PTR [ebx-0x1a],0x6bcb5b23
  41f520:	mov    dl,0x27
  41f522:	loopne 0x41f4bd
  41f524:	jge    0x41f59d
  41f526:	sub    esp,ebp
  41f528:	and    BYTE PTR [edx+edi*1],dl
  41f52b:	lock (bad) 
  41f52d:	jne    0x41f4c7
  41f52f:	int    0xd1
  41f531:	and    eax,0x99b15eb8
  41f536:	call   0xa653a583
  41f53b:	rol    BYTE PTR [esi+0x3a],cl
  41f53e:	push   ebp
  41f53f:	mov    al,ds:0x250b76c7
  41f544:	mov    ds:0x21b90b82,eax
  41f549:	in     al,0x8e
  41f54b:	add    BYTE PTR [ecx*1-0x7eaad290],dh
  41f552:	fdivr  DWORD PTR [ebx-0x4f450282]
  41f558:	in     eax,0x77
  41f55a:	mov    dl,0x75
  41f55c:	std    
  41f55d:	or     al,0x26
  41f55f:	les    esi,FWORD PTR [edi-0x6fe65315]
  41f565:	adc    DWORD PTR [ebx-0xa14f1e5],ebx
  41f56b:	into   
  41f56c:	pop    ds
  41f56d:	sub    al,0xdf
  41f56f:	aam    0xb1
  41f571:	repz push edx
  41f573:	jge    0x41f5d7
  41f575:	test   BYTE PTR ds:0x4a792810,0x1
  41f57c:	and    DWORD PTR [ebp+edx*2-0x41],0x1f235466
  41f584:	(bad)  
  41f585:	pusha  
  41f586:	popa   
  41f587:	xchg   ebx,eax
  41f588:	fmul   st(5),st
  41f58a:	xchg   DWORD PTR [edx-0x71c998ab],ecx
  41f590:	retf   0xf0fe
  41f593:	je     0x41f595
  41f595:	enter  0xe506,0x9c
  41f599:	xchg   edx,eax
  41f59a:	mov    esp,0xdf4fea87
  41f59f:	and    eax,0xe6597342
  41f5a4:	js     0x41f5e9
  41f5a6:	ret    
  41f5a7:	test   al,0x7f
  41f5a9:	mov    esp,0xecf95bfe
  41f5ae:	add    eax,0xa80c7c13
  41f5b3:	enter  0x98be,0x80
  41f5b7:	sbb    eax,0xc63c6449
  41f5bc:	pop    ds
  41f5bd:	jo     0x41f594
  41f5bf:	add    ecx,ebx
  41f5c1:	pop    ds
  41f5c2:	sti    
  41f5c3:	mov    ecx,0x90eb5539
  41f5c8:	xor    DWORD PTR [eax+esi*1-0xe],ebp
  41f5cc:	lods   eax,DWORD PTR ds:[esi]
  41f5cd:	push   cs
  41f5ce:	clc    
  41f5cf:	imul   ebp,DWORD PTR [edx+0x2016f7ec],0xd1b7dcd2
  41f5d9:	lds    edi,FWORD PTR [edi-0x20ef35f4]
  41f5df:	mov    ds:0x40426058,al
  41f5e4:	dec    ebp
  41f5e5:	cdq    
  41f5e6:	daa    
  41f5e7:	cwde   
  41f5e8:	pop    edx
  41f5e9:	adc    al,0x37
  41f5eb:	out    0xe4,al
  41f5ed:	sbb    eax,0xae73a7d2
  41f5f2:	xchg   esp,eax
  41f5f3:	call   0xe80f:0x6cda04c7
  41f5fa:	mov    ebp,0xdd16d40
  41f5ff:	sti    
  41f600:	lock nop
  41f602:	sub    BYTE PTR [ebp-0x39],dh
  41f605:	mov    eax,ds:0x1761ac4b
  41f60a:	das    
  41f60b:	inc    ecx
  41f60c:	inc    esp
  41f60d:	xchg   ebp,eax
  41f60e:	inc    ecx
  41f60f:	push   ebp
  41f610:	nop
  41f611:	mov    dh,BYTE PTR [esp-0x3912ca01]
  41f618:	adc    dl,ch
  41f61a:	jae    0x41f60a
  41f61c:	sub    DWORD PTR [ecx+eax*8],ebp
  41f61f:	xor    eax,0x4b6240c8
  41f624:	stc    
  41f625:	inc    ebx
  41f626:	mov    WORD PTR [ecx-0x28],gs
  41f629:	adc    eax,0x195219cf
  41f62e:	push   eax
  41f62f:	pop    ebx
  41f630:	mov    eax,fs:0xb1145edc
  41f636:	(bad)  
  41f637:	sub    DWORD PTR [esi],ebp
  41f639:	push   edx
  41f63a:	aaa    
  41f63b:	jg     0x41f5df
  41f63d:	es je  0x41f663
  41f640:	out    0x73,eax
  41f642:	pop    ecx
  41f643:	aaa    
  41f644:	dec    ebx
  41f645:	test   bl,ah
  41f647:	dec    ebp
  41f648:	loop   0x41f6a1
  41f64a:	pop    esp
  41f64b:	inc    esi
  41f64c:	mov    eax,0x6a64136a
  41f651:	out    0x6a,eax
  41f653:	add    BYTE PTR [ebx+ecx*2+0x0],0xdc
  41f658:	call   0xd2511407
  41f65d:	stc    
  41f65e:	pop    esi
  41f65f:	sbb    BYTE PTR [esi-0x4d611c2e],dl
  41f665:	sar    BYTE PTR [edx+0x5],1
  41f668:	mov    ds:0xf775f3ff,al
  41f66d:	and    DWORD PTR [edx],esp
  41f66f:	sar    DWORD PTR [edx+0xd],0x6d
  41f673:	iret   
  41f674:	xor    BYTE PTR [ebx],ah
  41f676:	gs jmp 0x41f6dc
  41f679:	pop    ecx
  41f67a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f67b:	fs and eax,0xc1697b6d
  41f681:	mov    WORD PTR [ecx-0x4f1c192a],es
  41f687:	and    BYTE PTR [esi+0x41fc7065],bl
  41f68d:	pop    edi
  41f68e:	push   ss
  41f68f:	xor    al,0x3f
  41f691:	and    esi,eax
  41f693:	imul   esi,DWORD PTR [bx+di],0xffffffe1
  41f697:	call   0x4c4101da
  41f69c:	push   cs
  41f69d:	pop    ebp
  41f69e:	add    al,0x73
  41f6a0:	cmp    eax,0xf3b5cc6
  41f6a5:	inc    ebp
  41f6a6:	cmp    eax,0xdbb777fd
  41f6ab:	jno    0x41f669
  41f6ad:	retf   
  41f6ae:	add    edx,DWORD PTR [edi+0x6c527719]
  41f6b4:	pop    ebx
  41f6b5:	(bad)  
  41f6b6:	repnz (bad) 
  41f6b8:	call   0x698a66ec
  41f6bd:	cmp    eax,0xef6a1c5b
  41f6c2:	jmp    0x41f6b7
  41f6c4:	jg     0x41f716
  41f6c6:	sub    ecx,DWORD PTR [edx+0x50]
  41f6c9:	sahf   
  41f6ca:	pop    ds
  41f6cb:	ret    0x89d3
  41f6ce:	ja     0x41f686
  41f6d0:	jecxz  0x41f73d
  41f6d2:	xor    bh,bl
  41f6d4:	dec    ebx
  41f6d5:	in     eax,dx
  41f6d6:	add    eax,0x28f34ce4
  41f6db:	lds    ecx,FWORD PTR [eax-0x60]
  41f6de:	bound  eax,QWORD PTR [ecx]
  41f6e0:	pop    edx
  41f6e1:	adc    edi,ecx
  41f6e3:	sub    esi,DWORD PTR [edx-0x3cff5932]
  41f6e9:	pop    ebp
  41f6ea:	cdq    
  41f6eb:	arpl   bx,dx
  41f6ed:	jb     0x41f730
  41f6ef:	mov    esi,0x33741e4f
  41f6f4:	inc    edi
  41f6f5:	pop    ebx
  41f6f6:	xchg   esp,eax
  41f6f7:	pop    esi
  41f6f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6f9:	ins    BYTE PTR es:[edi],dx
  41f6fa:	push   ds
  41f6fb:	ss enter 0x1b81,0x25
  41f700:	(bad)  
  41f701:	sbb    DWORD PTR [esi+0x36],edi
  41f704:	or     eax,ebx
  41f706:	jg     0x41f73f
  41f708:	in     al,0x64
  41f70a:	jae    0x41f75a
  41f70c:	jno    0x41f6f6
  41f70e:	repnz fadd st(1),st
  41f711:	iret   
  41f712:	stc    
  41f713:	adc    bh,dh
  41f715:	loop   0x41f709
  41f717:	rcl    BYTE PTR [ecx+0x6c],1
  41f71a:	bound  esp,QWORD PTR [edi+0x40070125]
  41f720:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f721:	icebp  
  41f722:	adc    bl,BYTE PTR [eax+0x1b]
  41f725:	mov    esp,esi
  41f727:	out    dx,al
  41f728:	sbb    edi,0x5
  41f72b:	sahf   
  41f72c:	test   eax,0xf29d8f0e
  41f731:	inc    ebp
  41f732:	(bad)  
  41f734:	int3   
  41f735:	sti    
  41f736:	sbb    al,0xad
  41f738:	or     esp,esi
  41f73a:	jl     0x41f6ff
  41f73c:	jl     0x41f715
  41f73e:	add    esi,DWORD PTR [eax-0x4d4455a5]
  41f744:	mov    esp,0xd1a45a2
  41f749:	ss jmp 0x9800b946
  41f74f:	es jns 0x41f783
  41f752:	outs   dx,DWORD PTR ds:[esi]
  41f753:	xchg   edx,eax
  41f754:	jge    0x41f702
  41f756:	push   ds
  41f757:	es jns 0x41f6e0
  41f75a:	ret    0xa9b2
  41f75d:	loopne 0x41f7c9
  41f75f:	outs   dx,BYTE PTR ds:[esi]
  41f760:	jne    0x41f75b
  41f762:	inc    ebp
  41f763:	lds    eax,FWORD PTR [edx+0x73]
  41f766:	imul   edx,DWORD PTR [ebx+0x11],0x3b
  41f76a:	pop    esp
  41f76b:	adc    esi,DWORD PTR [edi+0x20d20d6a]
  41f771:	in     eax,0xa7
  41f773:	in     al,dx
  41f774:	scas   al,BYTE PTR es:[edi]
  41f775:	or     eax,0xf8556547
  41f77a:	mov    cl,BYTE PTR [edi+ebp*1+0x6e67558e]
  41f781:	imul   eax,DWORD PTR [eax-0x3e0e4aa2],0xc392986
  41f78b:	int3   
  41f78c:	mov    edx,0xb99c051
  41f791:	fiadd  DWORD PTR [ecx-0x6a]
  41f794:	or     eax,0x7d1b52f5
  41f799:	and    al,0xb
  41f79b:	xor    eax,DWORD PTR [ecx]
  41f79d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f79e:	add    BYTE PTR [ecx],ch
  41f7a0:	rcl    ebx,1
  41f7a2:	or     eax,0xf246d1f5
  41f7a7:	inc    edi
  41f7a8:	icebp  
  41f7a9:	xchg   DWORD PTR [edi-0x26],ebx
  41f7ac:	ficomp WORD PTR [edx+0x411653c8]
  41f7b2:	pop    esi
  41f7b3:	xchg   BYTE PTR cs:[edi],dl
  41f7b6:	mov    al,0x7a
  41f7b8:	rol    DWORD PTR [eax+0x29f828f4],1
  41f7be:	dec    ecx
  41f7bf:	cmp    esp,DWORD PTR [edx+0x3c83cb7]
  41f7c5:	imul   esp,DWORD PTR [ebx-0x25],0x1ef46943
  41f7cc:	mov    ebx,0x49e83d05
  41f7d1:	add    al,0x92
  41f7d3:	hlt    
  41f7d4:	lahf   
  41f7d5:	add    eax,0xb9d1254f
  41f7da:	imul   esi,DWORD PTR [ecx-0x77ef52e4],0x84ebef7f
  41f7e4:	lods   al,BYTE PTR ds:[esi]
  41f7e5:	pusha  
  41f7e6:	pop    edx
  41f7e7:	mov    bh,0x9
  41f7e9:	xchg   esi,eax
  41f7ea:	pop    es
  41f7eb:	inc    ebp
  41f7ec:	dec    ebx
  41f7ed:	into   
  41f7ee:	add    edi,ebx
  41f7f0:	call   0xe8eed4da
  41f7f5:	or     dh,cl
  41f7f7:	das    
  41f7f8:	out    0xf3,eax
  41f7fa:	fwait
  41f7fb:	data16 mov ch,0xb2
  41f7fe:	pop    edi
  41f7ff:	jns    0x41f7dc
  41f801:	sti    
  41f802:	fwait
  41f803:	test   eax,0xf96451c8
  41f808:	push   cs
  41f809:	mov    ebx,0xed861c8b
  41f80e:	sub    eax,0x343b85d3
  41f813:	loope  0x41f808
  41f815:	dec    ebx
  41f816:	hlt    
  41f817:	sbb    edx,ebx
  41f819:	sub    DWORD PTR [edi],0x4f
  41f81c:	pop    edx
  41f81d:	lahf   
  41f81e:	ss pop ds
  41f820:	adc    BYTE PTR [ebx-0x59],dh
  41f823:	dec    edi
  41f824:	out    0xcc,al
  41f826:	lds    ecx,FWORD PTR [eax-0x4b]
  41f829:	xor    al,0x2f
  41f82b:	stos   DWORD PTR es:[edi],eax
  41f82c:	ret    0xe08e
  41f82f:	xlat   BYTE PTR ds:[ebx]
  41f830:	dec    BYTE PTR [edx-0x78]
  41f833:	sub    al,0xbf
  41f835:	(bad)  
  41f836:	fnstenv [ebx+0x3f]
  41f839:	scas   eax,DWORD PTR es:[edi]
  41f83a:	jnp    0x41f858
  41f83c:	mov    ebx,0x75920e34
  41f841:	call   0x98cad2b1
  41f846:	out    dx,eax
  41f847:	mov    ecx,0x97c46d2b
  41f84c:	bound  esp,QWORD PTR [edi]
  41f84e:	mov    eax,0xbcf32268
  41f853:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f854:	retf   
  41f855:	lods   al,BYTE PTR ds:[esi]
  41f856:	xchg   esi,eax
  41f857:	pusha  
  41f858:	sub    eax,0x680774d1
  41f85d:	xor    ah,BYTE PTR [ecx+0x39]
  41f860:	ja     0x41f88f
  41f862:	icebp  
  41f863:	dec    ebp
  41f864:	mov    DWORD PTR [eax-0x76],ebp
  41f867:	dec    ecx
  41f868:	out    dx,al
  41f869:	mov    dh,0x9
  41f86b:	cmovl  eax,DWORD PTR [ecx-0x73]
  41f86f:	imul   esi,eax,0x78
  41f872:	icebp  
  41f873:	jl     0x41f8ec
  41f875:	mov    ah,0xda
  41f877:	pop    ebp
  41f878:	jl     0x41f898
  41f87a:	lock adc bh,BYTE PTR [edx+0x165b9cb7]
  41f881:	enter  0xb08a,0xf
  41f885:	add    eax,0xe7a638ce
  41f88a:	dec    esi
  41f88b:	mov    dl,0xc1
  41f88d:	daa    
  41f88e:	mov    ebp,gs
  41f890:	ins    DWORD PTR es:[edi],dx
  41f891:	in     al,dx
  41f892:	xor    DWORD PTR [ebx+0x25],edx
  41f895:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f896:	mov    dl,0x5c
  41f898:	fucom  st(1)
  41f89a:	fdiv   st(2),st
  41f89c:	js     0x41f86f
  41f89e:	pop    edx
  41f89f:	push   edx
  41f8a0:	sub    eax,0xa882a3bb
  41f8a5:	sub    BYTE PTR [eax],bl
  41f8a7:	arpl   sp,cx
  41f8a9:	add    DWORD PTR es:[edi],0x1c558eb7
  41f8b0:	pop    ebp
  41f8b1:	add    bh,cl
  41f8b3:	inc    ebp
  41f8b4:	lods   eax,DWORD PTR ds:[esi]
  41f8b5:	push   edi
  41f8b6:	inc    edi
  41f8b7:	in     eax,0xb2
  41f8b9:	cs or  al,0x38
  41f8bc:	imul   ebp,DWORD PTR cs:[eax-0x6a],0x97db6579
  41f8c4:	mov    bh,0x80
  41f8c6:	retf   0xc2f9
  41f8c9:	xor    al,0x15
  41f8cb:	or     esi,esi
  41f8cd:	gs ret 
  41f8cf:	mov    edi,0x3eb78897
  41f8d4:	and    ch,al
  41f8d6:	push   ss
  41f8d7:	sbb    BYTE PTR [ecx+0x67],ah
  41f8da:	mov    dh,BYTE PTR [ecx]
  41f8dc:	push   ebx
  41f8dd:	(bad)  
  41f8de:	sbb    eax,0x1f512a65
  41f8e3:	push   es
  41f8e4:	ror    BYTE PTR [esi],1
  41f8e6:	ja     0x41f93d
  41f8e8:	add    esp,esp
  41f8ea:	and    BYTE PTR [ebp-0x13],dl
  41f8ed:	(bad)  
  41f8ee:	call   0xba3f8689
  41f8f3:	mov    ds:0x8eebe9b9,eax
  41f8f8:	(bad)  
  41f8f9:	adc    eax,0x3d56f61d
  41f8fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8ff:	or     esp,DWORD PTR [ecx+esi*1]
  41f902:	retf   0x9781
  41f905:	push   ds
  41f906:	and    bl,bl
  41f908:	push   ebp
  41f909:	retf   0x7349
  41f90c:	loop   0x41f8d1
  41f90e:	mov    dl,0x8c
  41f910:	jge    0x41f972
  41f912:	mov    ds:0x561b2253,al
  41f917:	sub    eax,0x36cfe997
  41f91c:	add    ebx,DWORD PTR [ebx]
  41f91e:	add    dh,dh
  41f920:	jg     0x41f8fe
  41f922:	retf   
  41f923:	(bad)  
  41f924:	cmp    BYTE PTR [eax+0x292e8aa5],al
  41f92a:	and    BYTE PTR [esi+0x56],ah
  41f92d:	addr16 push ebx
  41f92f:	push   eax
  41f930:	jb     0x41f8e9
  41f932:	sbb    eax,0x8d96fc25
  41f937:	imul   eax,DWORD PTR [esi+0x2c9243c6],0xfffffff2
  41f93e:	jae    0x41f91c
  41f940:	enter  0x81d3,0x5c
  41f944:	dec    ebx
  41f945:	inc    esp
  41f946:	cmp    ch,BYTE PTR [ebx-0x66]
  41f949:	pushf  
  41f94a:	add    ebx,DWORD PTR [ebx-0x1645730e]
  41f950:	xchg   edi,eax
  41f951:	out    dx,eax
  41f952:	mov    al,ds:0xb8253c4
  41f957:	pop    esi
  41f958:	pop    edx
  41f959:	pop    es
  41f95a:	fwait
  41f95b:	(bad)  
  41f95c:	aam    0x88
  41f95e:	nop
  41f95f:	sbb    al,bl
  41f961:	dec    esp
  41f962:	in     al,0x9f
  41f964:	lahf   
  41f965:	push   ss
  41f966:	sahf   
  41f967:	jne    0x41f9db
  41f969:	xor    al,0xc6
  41f96b:	mov    ebx,0x83317af4
  41f970:	rcl    BYTE PTR [esi+0x39],cl
  41f973:	ret    0xb85d
  41f976:	jge    0x41f911
  41f978:	into   
  41f979:	sbb    esi,DWORD PTR [eax-0x65]
  41f97c:	push   ebp
  41f97d:	or     BYTE PTR [ebx-0x52a5c9e7],0x32
  41f984:	ret    
  41f985:	cmp    DWORD PTR [edi],eax
  41f987:	cld    
  41f988:	mov    ds:0xa09a7bff,eax
  41f98d:	retf   0x6962
  41f990:	out    0x47,eax
  41f992:	call   0xeeba:0x3738bc02
  41f999:	jle    0x41f988
  41f99b:	add    BYTE PTR ds:[edx+ebx*2],cl
  41f99f:	sar    BYTE PTR [esi+eax*4],0x35
  41f9a3:	jl     0x41f9ea
  41f9a5:	jmp    0x41f9a7
  41f9a7:	(bad)  
  41f9a8:	mov    WORD PTR [ecx+0x4cecd3bf],ss
  41f9ae:	or     al,BYTE PTR [esi-0x58ac7899]
  41f9b4:	jae    0x41f96e
  41f9b6:	xor    eax,ebp
  41f9b8:	mov    dl,0x11
  41f9ba:	mov    ebx,0xf4e83edd
  41f9bf:	xor    esp,DWORD PTR [edx]
  41f9c1:	into   
  41f9c2:	pop    edi
  41f9c3:	inc    ebx
  41f9c4:	and    al,0xcb
  41f9c6:	mov    al,ds:0x234efc78
  41f9cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f9cc:	mov    bl,0x1c
  41f9ce:	and    edi,eax
  41f9d0:	cmp    BYTE PTR [edi],dl
  41f9d2:	test   BYTE PTR [edx],bh
  41f9d4:	or     DWORD PTR [eax-0x62],esp
  41f9d7:	sbb    DWORD PTR [ebx],ecx
  41f9d9:	jecxz  0x41f980
  41f9db:	in     al,0x4f
  41f9dd:	adc    esp,DWORD PTR [eax]
  41f9df:	add    esp,DWORD PTR [eax]
  41f9e1:	or     bh,bh
  41f9e3:	call   0x4770:0xabf933fa
  41f9ea:	mov    ds:0x756472e0,al
  41f9ef:	ret    
  41f9f0:	out    dx,eax
  41f9f1:	rcr    eax,cl
  41f9f3:	(bad)
  41f9f9:	in     eax,dx
  41f9fa:	fs push cs
  41f9fc:	cli    
  41f9fd:	mov    cl,0xa8
  41f9ff:	inc    ebp
  41fa00:	push   ecx
  41fa01:	mov    esp,0xe9a745a7
  41fa06:	call   0xe9ac:0xf4479d6d
  41fa0d:	sbb    edi,esp
  41fa0f:	push   0x7581140f
  41fa14:	or     eax,0x5efe3b4c
  41fa19:	dec    ebp
  41fa1a:	xor    edi,DWORD PTR [edx]
  41fa1c:	inc    edx
  41fa1d:	add    dl,bh
  41fa1f:	test   DWORD PTR [edi],edi
  41fa21:	fdivr  QWORD PTR [ebp-0x70]
  41fa24:	inc    ebx
  41fa25:	(bad)  
  41fa26:	les    ecx,FWORD PTR [edi-0x21]
  41fa29:	(bad)  
  41fa2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa2c:	test   BYTE PTR [ecx],0xa8
  41fa2f:	cdq    
  41fa30:	mov    ds:0xe4127405,eax
  41fa35:	stc    
  41fa36:	retf   0x7fd
  41fa39:	pop    esi
  41fa3a:	icebp  
  41fa3b:	mov    al,0xa2
  41fa3d:	pop    ss
  41fa3e:	and    cl,BYTE PTR [ebx]
  41fa40:	or     BYTE PTR [edx-0x4462e690],bl
  41fa46:	les    eax,FWORD PTR [ebp-0x70f6ad08]
  41fa4c:	aam    0xb1
  41fa4e:	test   BYTE PTR [esi+0x76],bh
  41fa51:	rol    DWORD PTR [edx],0x54
  41fa54:	lds    esi,FWORD PTR fs:[edx]
  41fa57:	fimul  DWORD PTR [eax-0x1c07fa4]
  41fa5d:	fmulp  st(4),st
  41fa5f:	clc    
  41fa60:	dec    ebx
  41fa61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa62:	xor    BYTE PTR [esp+eax*1+0xee8e4cc],ch
  41fa69:	xor    al,0xde
  41fa6b:	sar    BYTE PTR [edi-0x7a5b7a56],1
  41fa71:	std    
  41fa72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa73:	(bad)  
  41fa74:	jo     0x41fa10
  41fa76:	sub    edx,DWORD PTR [ecx]
  41fa78:	int    0x22
  41fa7a:	cwde   
  41fa7b:	loope  0x41fa3a
  41fa7d:	adc    bh,dl
  41fa7f:	call   0x1031e608
  41fa84:	outs   dx,DWORD PTR ds:[esi]
  41fa85:	fst    DWORD PTR [edi+0x276a4136]
  41fa8b:	mov    al,0x2c
  41fa8d:	and    ebx,DWORD PTR [edx+edi*8]
  41fa90:	mov    ch,0x4e
  41fa92:	pop    ecx
  41fa93:	fwait
  41fa94:	and    DWORD PTR [eax-0x53],0xffffffa5
  41fa98:	mov    edx,0x38198d61
  41fa9d:	pop    ebp
  41fa9e:	test   bh,bl
  41faa0:	stc    
  41faa1:	mov    ebp,0x9bc47328
  41faa6:	and    ecx,DWORD PTR [ebx]
  41faa8:	mov    edi,0xace10f3e
  41faad:	pop    ecx
  41faae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41faaf:	inc    esp
  41fab0:	adc    eax,ebx
  41fab2:	jmp    0x41fab9
  41fab4:	arpl   WORD PTR [eax+0x5af67ed2],dx
  41faba:	pop    edx
  41fabb:	(bad)  [ebp+0x27]
  41fabe:	(bad)  
  41fabf:	ffreep st(6)
  41fac1:	xchg   esi,eax
  41fac2:	mov    esp,0x6e98cf29
  41fac7:	xor    eax,0xbf98589d
  41facc:	cmp    BYTE PTR ds:0x13a4bee7,dh
  41fad2:	cmp    DWORD PTR [esi-0x3c],ebx
  41fad5:	xor    eax,0x45526f60
  41fada:	cld    
  41fadb:	pop    esi
  41fadc:	pop    edi
  41fadd:	int3   
  41fade:	sbb    BYTE PTR ss:[edi+0x3755afbb],dh
  41fae5:	aas    
  41fae6:	push   eax
  41fae7:	and    al,0xb7
  41fae9:	bound  ebp,QWORD PTR [ecx+ebp*4-0x2abe5524]
  41faf0:	mov    ebx,0xf3ae6349
  41faf5:	add    eax,0xc57ddfc9
  41fafa:	lods   al,BYTE PTR ds:[esi]
  41fafb:	pop    ecx
  41fafc:	(bad)  
  41fafd:	in     eax,0x7e
  41faff:	sub    edi,ecx
  41fb01:	adc    eax,ebp
  41fb03:	and    DWORD PTR [eax+ebp*1-0x4e4f99c9],edx
  41fb0a:	div    ebp
  41fb0c:	or     DWORD PTR [ecx+0x4d4227e0],0xffffff82
  41fb13:	retf   
  41fb14:	mov    ebx,0xa0cc86e9
  41fb19:	sub    al,0xd4
  41fb1b:	mov    ebp,0x53d5595f
  41fb20:	mov    WORD PTR [ebp-0x5ea3186e],es
  41fb26:	jo     0x41fb61
  41fb28:	push   es
  41fb29:	in     eax,0x96
  41fb2b:	(bad)  
  41fb2c:	es inc edx
  41fb2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb2f:	jp     0x41fb50
  41fb31:	dec    edi
  41fb32:	fadd   st(5),st
  41fb34:	inc    edx
  41fb35:	clc    
  41fb36:	dec    eax
  41fb37:	repz lds esi,FWORD PTR [edi+0x6d]
  41fb3b:	or     eax,0xa51a2844
  41fb40:	push   edx
  41fb41:	mov    ds:0xb23dd082,al
  41fb46:	cld    
  41fb47:	vpcomuw xmm0,xmm7,XMMWORD PTR [ecx+0x6f73e589],0x35
  41fb51:	push   edi
  41fb52:	xchg   ecx,eax
  41fb53:	xor    BYTE PTR [ecx+0x5efd0b89],dh
  41fb59:	mov    ?,WORD PTR ds:0x7d9dc8d3
  41fb5f:	adc    BYTE PTR [ebx+eiz*2+0x2f],ch
  41fb63:	(bad)  
  41fb65:	pop    ebx
  41fb66:	call   0x5ae5a87d
  41fb6b:	enter  0x10ed,0xe7
  41fb6f:	add    eax,eax
  41fb71:	push   edi
  41fb72:	dec    eax
  41fb73:	lods   al,BYTE PTR ds:[esi]
  41fb74:	loope  0x41fb0d
  41fb76:	dec    esi
  41fb77:	arpl   sp,cx
  41fb79:	mov    eax,ds:0xe81d8946
  41fb7e:	add    DWORD PTR [ecx-0x35],edx
  41fb81:	scas   eax,DWORD PTR es:[edi]
  41fb82:	push   ebx
  41fb83:	adc    eax,0x84a98cfa
  41fb88:	test   DWORD PTR [esi+0x26],0xe85649cc
  41fb8f:	adc    al,bh
  41fb91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb92:	ret    
  41fb93:	jg     0x41fb31
  41fb95:	lods   al,BYTE PTR fs:[esi]
  41fb97:	es nop
  41fb99:	out    dx,eax
  41fb9a:	inc    eax
  41fb9b:	pop    edx
  41fb9c:	js     0x41fbf2
  41fb9e:	inc    ebp
  41fb9f:	jae    0x41fb5a
  41fba1:	pop    ebx
  41fba2:	sub    al,0x15
  41fba4:	outs   dx,BYTE PTR ds:[esi]
  41fba5:	bound  ebp,QWORD PTR [eax-0x1fe5d9e3]
  41fbab:	jge    0x41fb62
  41fbad:	pop    eax
  41fbae:	mov    ch,0x6c
  41fbb0:	sub    dh,cl
  41fbb2:	mov    ds:0xb4f29401,eax
  41fbb7:	jmp    0x4b40c03a
  41fbbc:	loop   0x41fba3
  41fbbe:	push   ss
  41fbbf:	pop    edi
  41fbc0:	jmp    0xfb295d62
  41fbc5:	add    al,0xb3
  41fbc7:	outs   dx,BYTE PTR ds:[esi]
  41fbc8:	push   cs
  41fbc9:	or     esp,DWORD PTR [ecx+0xc]
  41fbcc:	enter  0x406b,0xa1
  41fbd0:	sbb    al,0x35
  41fbd2:	jmp    0x41fc3f
  41fbd4:	and    edi,DWORD PTR [esi+0x430b34bd]
  41fbda:	shr    BYTE PTR [eax],0xa1
  41fbdd:	lahf   
  41fbde:	popa   
  41fbdf:	orps   xmm3,XMMWORD PTR [esi]
  41fbe2:	sbb    BYTE PTR [ebx+edi*2+0xde4762b],dh
  41fbe9:	mov    ds:0x719f01ad,eax
  41fbee:	mov    ch,0xbd
  41fbf0:	mov    al,ds:0xce7c7fa1
  41fbf5:	mul    DWORD PTR [ebx+0x640f7b94]
  41fbfb:	rol    BYTE PTR [edx+ecx*2],1
  41fbfe:	std    
  41fbff:	ins    BYTE PTR es:[edi],dx
  41fc00:	sbb    edx,ecx
  41fc02:	shl    DWORD PTR [eax+0x5d],0x8d
  41fc06:	push   cs
  41fc07:	pusha  
  41fc08:	pop    ebp
  41fc09:	jl     0x41fc1d
  41fc0b:	out    0xbe,al
  41fc0d:	call   0xb464:0x920dd61b
  41fc14:	pusha  
  41fc15:	leave  
  41fc16:	daa    
  41fc17:	mov    eax,0x3417171d
  41fc1c:	inc    ebp
  41fc1d:	jns    0x41fc9c
  41fc1f:	sahf   
  41fc20:	dec    ebx
  41fc22:	push   cs
  41fc23:	push   esp
  41fc24:	dec    ebp
  41fc25:	sahf   
  41fc26:	mov    ch,BYTE PTR [edx-0x52]
  41fc29:	push   ds
  41fc2a:	xor    al,0xb8
  41fc2c:	icebp  
  41fc2d:	test   DWORD PTR [eax],ecx
  41fc2f:	push   ebx
  41fc30:	lea    esi,[ecx]
  41fc32:	or     BYTE PTR [ebx-0x1cf8708b],bh
  41fc38:	jmp    0x41fc1c
  41fc3a:	call   0x58eb:0x9e9c77de
  41fc41:	push   ebx
  41fc42:	fwait
  41fc43:	pop    edx
  41fc44:	xor    eax,0x532e153a
  41fc49:	rol    BYTE PTR [ebp+0x77],cl
  41fc4c:	xor    al,0x63
  41fc4e:	nop
  41fc4f:	loopne 0x41fc6e
  41fc51:	aaa    
  41fc52:	adc    eax,0xfa91f572
  41fc57:	mov    gs,WORD PTR [edi-0x3b56c8a7]
  41fc5d:	adc    bh,BYTE PTR [esp+esi*2-0x41]
  41fc61:	aad    0xb7
  41fc63:	mov    ds:0x60545171,al
  41fc68:	and    bl,al
  41fc6a:	cs adc dh,0x98
  41fc6e:	fld    DWORD PTR [ebx-0x4f]
  41fc71:	pop    esp
  41fc72:	fist   DWORD PTR [ecx+ebx*8]
  41fc75:	mov    ebx,0x219180f3
  41fc7a:	hlt    
  41fc7b:	cmp    DWORD PTR [ecx+0xd],ebx
  41fc7e:	sbb    DWORD PTR ds:0x8c7c0d4f,ebp
  41fc84:	icebp  
  41fc85:	xor    dh,BYTE PTR [eax-0x520a782e]
  41fc8b:	add    dl,BYTE PTR [ebx]
  41fc8d:	cmp    al,0x93
  41fc8f:	ror    BYTE PTR [eax-0x46c3c061],1
  41fc95:	push   cs
  41fc96:	(bad)  
  41fc97:	cmp    al,BYTE PTR [ebx-0x579f5ea3]
  41fc9d:	(bad)  
  41fc9e:	dec    DWORD PTR [ebp+0x6f9b976]
  41fca4:	and    al,0x90
  41fca6:	aas    
  41fca7:	fwait
  41fca8:	mov    dh,0xdd
  41fcaa:	cli    
  41fcab:	ffree  st(1)
  41fcad:	or     BYTE PTR [edi-0x24db6086],dl
  41fcb3:	sbb    eax,ebx
  41fcb5:	jbe    0x41fd06
  41fcb7:	mov    bl,0x3c
  41fcb9:	gs int3 
  41fcbb:	xchg   esp,eax
  41fcbc:	popa   
  41fcbd:	scas   eax,DWORD PTR es:[edi]
  41fcbe:	cmp    edi,ebp
  41fcc0:	test   DWORD PTR [ebp+0x5ad5163c],ebx
  41fcc6:	mov    ebx,0x5130b70c
  41fccb:	imul   esi,ebp,0x1981c215
  41fcd1:	dec    esp
  41fcd2:	(bad)  
  41fcd3:	fst    QWORD PTR [bp+di-0xb]
  41fcd7:	jno    0x41fd18
  41fcd9:	scas   al,BYTE PTR es:[edi]
  41fcda:	jl     0x41fcf9
  41fcdc:	sahf   
  41fcdd:	loop   0x41fca9
  41fcdf:	mov    al,ds:0x9873ee21
  41fce4:	test   bl,al
  41fce6:	leave  
  41fce7:	ins    DWORD PTR es:[edi],dx
  41fce8:	stc    
  41fce9:	in     eax,0xc1
  41fceb:	sahf   
  41fcec:	call   0x9d4c95bd
  41fcf1:	loop   0x41fcb1
  41fcf3:	in     al,dx
  41fcf4:	sti    
  41fcf5:	(bad)  
  41fcf6:	jae    0x41fce3
  41fcf8:	dec    eax
  41fcf9:	xchg   ecx,eax
  41fcfa:	jne    0x41fcdf
  41fcfc:	jmp    0xfed14bb0
  41fd01:	adc    esi,0x44
  41fd04:	cld    
  41fd05:	or     eax,ecx
  41fd07:	out    dx,eax
  41fd08:	in     al,0xe2
  41fd0a:	fwait
  41fd0b:	mov    eax,0x109ae2a1
  41fd10:	inc    edx
  41fd11:	or     ah,0x81
  41fd14:	jo     0x41fd7e
  41fd16:	shl    DWORD PTR gs:0x8c60ce52,0x82
  41fd1e:	inc    edx
  41fd1f:	rcl    BYTE PTR [ecx-0x2b],0xc5
  41fd23:	pop    eax
  41fd24:	test   BYTE PTR [edi+0x46ed46aa],dl
  41fd2a:	and    ah,BYTE PTR [ecx+eiz*1+0x331ef155]
  41fd31:	dec    edx
  41fd32:	inc    ebp
  41fd33:	jmp    0x41fd75
  41fd35:	pop    edi
  41fd36:	sub    eax,0x5435e197
  41fd3b:	sbb    DWORD PTR [edx+ecx*2-0x39],esi
  41fd3f:	into   
  41fd40:	loope  0x41fd3e
  41fd42:	ins    DWORD PTR es:[edi],dx
  41fd43:	pop    esi
  41fd44:	and    al,0xca
  41fd46:	cli    
  41fd47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd48:	outs   dx,BYTE PTR cs:[esi]
  41fd4a:	cmp    bl,BYTE PTR [esi+0x7]
  41fd4d:	sub    ch,bh
  41fd4f:	xchg   al,al
  41fd51:	jg     0x41fd5c
  41fd53:	jmp    0x19c7:0x14faed8b
  41fd5a:	xchg   ebp,eax
  41fd5b:	sub    dh,BYTE PTR [ebx]
  41fd5d:	adc    DWORD PTR [edi+0x6bc6ac53],edi
  41fd63:	jbe    0x41fd75
  41fd65:	jb     0x41fdd4
  41fd67:	imul   esi,DWORD PTR [ebx],0x33f0b05d
  41fd6d:	scas   al,BYTE PTR es:[edi]
  41fd6e:	mov    ds:0x377cb01d,al
  41fd73:	jge    0x41fd96
  41fd75:	jo     0x41fddc
  41fd77:	repnz xor DWORD PTR [ebx-0x8b470fd],ebp
  41fd7e:	push   ds
  41fd7f:	jl     0x41fda5
  41fd81:	add    esp,DWORD PTR [ecx+0x4e]
  41fd84:	push   ebx
  41fd85:	xlat   BYTE PTR ds:[ebx]
  41fd86:	test   DWORD PTR [edi],ecx
  41fd88:	jle    0x41fdd7
  41fd8a:	xchg   esi,eax
  41fd8b:	mov    bh,0x3f
  41fd8d:	push   0x31
  41fd8f:	adc    eax,0xdd6ac27d
  41fd94:	and    BYTE PTR [ebx],0xea
  41fd97:	and    eax,0x50424a48
  41fd9c:	pop    esi
  41fd9d:	jp     0x41fd4e
  41fd9f:	or     esp,ebp
  41fda1:	ins    BYTE PTR es:[edi],dx
  41fda2:	jle    0x41fdb7
  41fda4:	and    DWORD PTR [edx],eax
  41fda6:	loopne 0x41fdd6
  41fda8:	xchg   BYTE PTR [ecx+ecx*8],bl
  41fdab:	(bad)  
  41fdac:	adc    eax,0x99713b01
  41fdb1:	into   
  41fdb2:	add    eax,0x5eb2b0f0
  41fdb7:	push   ebx
  41fdb8:	enter  0xf5a7,0x9
  41fdbc:	xor    cl,BYTE PTR [esi+0x27]
  41fdbf:	out    dx,eax
  41fdc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdc1:	mov    DWORD PTR [edi+0x75d35dcf],edx
  41fdc7:	mov    eax,0x5c08b64e
  41fdcc:	push   esi
  41fdcd:	cmp    BYTE PTR [eax+0x1d],al
  41fdd0:	jb     0x41fe43
  41fdd2:	iret   
  41fdd3:	cld    
  41fdd4:	fst    QWORD PTR [edx+0x1c]
  41fdd7:	push   esi
  41fdd8:	dec    bl
  41fdda:	mov    ds:0xb1ca2fb6,eax
  41fddf:	ins    BYTE PTR es:[edi],dx
  41fde0:	clc    
  41fde1:	add    eax,0x13e95e13
  41fde6:	sub    ch,BYTE PTR [ebx-0x748edc0c]
  41fdec:	ret    0x5c26
  41fdef:	mov    bh,0x28
  41fdf1:	xchg   ebp,eax
  41fdf2:	leave  
  41fdf3:	loope  0x41fe6b
  41fdf5:	inc    edi
  41fdf6:	jne    0x41fe13
  41fdf8:	mov    al,0x4
  41fdfa:	cmp    al,0xb7
  41fdfc:	sbb    eax,0xcc2af96e
  41fe01:	mov    ds:0x96d1748b,al
  41fe06:	inc    edi
  41fe07:	sub    DWORD PTR [eax+edi*8+0x2],eax
  41fe0b:	stos   BYTE PTR es:[edi],al
  41fe0c:	popa   
  41fe0d:	dec    eax
  41fe0e:	repnz int 0xce
  41fe11:	sub    dl,BYTE PTR [eax-0x2ae5dfc6]
  41fe17:	jmp    0xd64e67db
  41fe1c:	leave  
  41fe1d:	push   0x28
  41fe1f:	push   0x77fe51e4
  41fe24:	mov    edx,0xce16aea
  41fe29:	cs das 
  41fe2b:	pushf  
  41fe2c:	mov    ds:0xf0e7df7b,al
  41fe31:	inc    eax
  41fe32:	enter  0xb17c,0x42
  41fe36:	(bad)  
  41fe37:	outs   dx,DWORD PTR ds:[esi]
  41fe38:	inc    esi
  41fe39:	mov    cl,0x7f
  41fe3b:	call   0xc818:0xbd1f074a
  41fe42:	sub    cl,BYTE PTR [esi+eiz*4+0x224a3a2f]
  41fe49:	or     eax,0x1c1e73c
  41fe4e:	dec    esp
  41fe4f:	cmp    edi,ecx
  41fe51:	retf   
  41fe52:	push   eax
  41fe53:	fidiv  DWORD PTR [eax+0x3d3becbf]
  41fe59:	in     eax,0xae
  41fe5b:	loopne 0x41fe2e
  41fe5d:	stos   DWORD PTR es:[edi],eax
  41fe5e:	call   0xa1de:0x27fbbaf1
  41fe65:	or     al,0x63
  41fe67:	pop    ds
  41fe68:	mov    es,WORD PTR [esi-0x39]
  41fe6b:	hlt    
  41fe6c:	rcl    DWORD PTR [edx],0xae
  41fe6f:	lock adc DWORD PTR [eax],esp
  41fe72:	test   eax,0xbee5b4ff
  41fe77:	fnstenv [esi-0xe3a260b]
  41fe7d:	rcl    DWORD PTR [ebp+0x1],cl
  41fe80:	sub    DWORD PTR [edx],ebp
  41fe82:	jecxz  0x41fed3
  41fe84:	popf   
  41fe85:	jge    0x41fe6b
  41fe87:	inc    ebp
  41fe88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe89:	pop    es
  41fe8a:	sahf   
  41fe8b:	icebp  
  41fe8c:	aam    0x22
  41fe8e:	lods   eax,DWORD PTR ds:[esi]
  41fe8f:	jmp    0x70c6:0x2c355724
  41fe96:	ficom  WORD PTR [ecx]
  41fe98:	es int3 
  41fe9a:	push   0x129663ca
  41fe9f:	das    
  41fea0:	inc    edx
  41fea1:	ins    DWORD PTR es:[edi],dx
  41fea2:	dec    edi
  41fea3:	mov    dh,0xb7
  41fea5:	aaa    
  41fea6:	add    BYTE PTR [edi+0x38],cl
  41fea9:	add    DWORD PTR [eiz*1-0x5cc0f630],ecx
  41feb0:	xchg   ebx,eax
  41feb1:	sbb    esi,DWORD PTR [ebx-0x6571ea0c]
  41feb7:	imul   ebx,ecx,0xb376fb22
  41febd:	push   edi
  41febe:	sahf   
  41febf:	jle    0x41fe72
  41fec1:	outs   dx,BYTE PTR ds:[esi]
  41fec2:	outs   dx,BYTE PTR ds:[esi]
  41fec3:	ss test al,0x7c
  41fec6:	mov    dl,0xb1
  41fec8:	add    BYTE PTR [eax-0x7a304a7a],bh
  41fece:	inc    edx
  41fecf:	inc    ecx
  41fed0:	mov    cs,ecx
  41fed2:	and    eax,0xb5550a66
  41fed7:	and    dl,ch
  41fed9:	mov    ds:0x6e36198,al
  41fede:	rcr    dh,cl
  41fee0:	popa   
  41fee1:	in     eax,dx
  41fee2:	push   0x56
  41fee4:	jecxz  0x41ff04
  41fee6:	ins    DWORD PTR es:[edi],dx
  41fee7:	out    dx,al
  41fee8:	(bad)  [ecx-0x2e]
  41feeb:	test   DWORD PTR es:[eax-0x6a551341],ecx
  41fef2:	push   esp
  41fef3:	(bad)  
  41fef4:	jge    0x41ff07
  41fef6:	jnp    0x41ff01
  41fef8:	cmp    DWORD PTR ds:0xfbf99c8b,edi
  41fefe:	jmp    0x94a42229
  41ff03:	js     0x41ff15
  41ff05:	enter  0xde3a,0xec
  41ff09:	xchg   edi,eax
  41ff0a:	adc    cl,al
  41ff0c:	out    dx,al
  41ff0d:	xchg   edi,esi
  41ff0f:	mov    dh,0xc0
  41ff11:	sbb    DWORD PTR [eax],esi
  41ff13:	test   DWORD PTR [esi+0x4a748800],ebp
  41ff19:	retf   
  41ff1a:	popf   
  41ff1b:	stos   BYTE PTR es:[edi],al
  41ff1c:	mul    DWORD PTR [eax]
  41ff1e:	sub    dl,BYTE PTR [ecx-0x4e]
  41ff21:	mov    ch,0xd3
  41ff23:	sbb    DWORD PTR [ecx-0x6b],0xb10c589
  41ff2a:	es std 
  41ff2c:	ins    BYTE PTR es:[edi],dx
  41ff2d:	jge    0x41ff0b
  41ff2f:	in     al,0xa7
  41ff31:	aad    0x66
  41ff33:	je     0x41fee7
  41ff35:	push   0x7b
  41ff37:	adc    al,BYTE PTR ss:[ecx+0x4af954a4]
  41ff3e:	test   edi,ebp
  41ff40:	cli    
  41ff41:	ins    DWORD PTR es:[edi],dx
  41ff42:	das    
  41ff43:	inc    eax
  41ff44:	into   
  41ff45:	cmp    ecx,DWORD PTR [edx]
  41ff47:	jmp    0xb401a9f2
  41ff4c:	xchg   edi,eax
  41ff4d:	in     eax,0x7c
  41ff4f:	into   
  41ff50:	xchg   ebx,eax
  41ff51:	jb     0x41ff86
  41ff53:	mov    WORD PTR [edi-0x44],gs
  41ff56:	cmp    al,0x14
  41ff58:	in     eax,0x38
  41ff5a:	pop    ss
  41ff5b:	aam    0xe7
  41ff5d:	mov    bh,dl
  41ff5f:	mov    eax,0x26d146ae
  41ff64:	idiv   BYTE PTR [ecx+eiz*2-0x6f5e2c44]
  41ff6b:	adc    DWORD PTR ds:[ebx+0x38ae60bc],eax
  41ff72:	addr16 std 
  41ff74:	inc    esp
  41ff75:	(bad)
  41ff78:	jnp    0x41ff92
  41ff7a:	dec    ecx
  41ff7b:	fmul   QWORD PTR [ebp+0x59]
  41ff7e:	push   esi
  41ff7f:	sub    bh,BYTE PTR [eax-0x3e897f8e]
  41ff85:	mov    esi,0xac6c9564
  41ff8a:	sub    eax,0x155ec5e
  41ff8f:	mov    dl,0xcd
  41ff91:	iret   
  41ff92:	ficom  DWORD PTR ds:0xcba06726
  41ff98:	ror    BYTE PTR [edx+0x6b],1
  41ff9b:	imul   ecx,ebx,0xa01e9483
  41ffa1:	jnp    0x41ffa1
  41ffa3:	push   edi
  41ffa4:	ja     0x41ff3f
  41ffa6:	add    eax,0x6df09fa5
  41ffab:	retf   
  41ffac:	sahf   
  41ffad:	mov    dl,0x5f
  41ffaf:	daa    
  41ffb0:	loopne 0x420029
  41ffb2:	push   esp
  41ffb3:	inc    edx
  41ffb4:	fs push ebp
  41ffb6:	mov    ds:0xd70853f5,eax
  41ffbb:	loop   0x420026
  41ffbd:	retf   0x41d9
  41ffc0:	test   al,0x26
  41ffc2:	jmp    0xd923:0xb96a2638
  41ffc9:	fidiv  WORD PTR [ebx-0x7cfadceb]
  41ffcf:	out    dx,al
  41ffd0:	sbb    al,0xa0
  41ffd2:	xchg   esi,eax
  41ffd3:	shl    DWORD PTR [esi],1
  41ffd5:	push   edx
  41ffd6:	mov    ds:0x587591dd,al
  41ffdb:	stos   DWORD PTR es:[edi],eax
  41ffdc:	add    cl,BYTE PTR [ebx-0x10cc463]
  41ffe2:	jg     0x41fff7
  41ffe4:	pop    ecx
  41ffe5:	mov    edi,0x67107b32
  41ffea:	jnp    0x41fffe
  41ffec:	retf   0x1d
  41ffef:	repz mov ecx,0x30b1db16
  41fff5:	xor    ah,BYTE PTR [esi-0x4b]
  41fff8:	sti    
  41fff9:	xchg   ebx,eax
  41fffa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fffb:	jg     0x41ffab
  41fffd:	adc    DWORD PTR [edx+0x4c2ee0b7],ebp
  420003:	or     edx,DWORD PTR [ecx+ecx*8]
  420006:	and    al,0xd6
  420008:	fdivr  QWORD PTR [edx+0x2a]
  42000b:	inc    edx
  42000c:	adc    edi,ecx
  42000e:	in     eax,0x24
  420010:	and    DWORD PTR [eax],0x26
  420013:	(bad)  [ecx-0x37]
  420016:	xchg   DWORD PTR [esi],ecx
  420018:	mov    cl,0x6e
  42001a:	jno    0x41ffdb
  42001c:	push   ebp
  42001d:	popa   
  42001e:	xchg   ebx,eax
  42001f:	push   esp
  420020:	int    0xc4
  420022:	jno    0x420001
  420024:	lods   al,BYTE PTR ds:[esi]
  420025:	dec    esi
  420026:	push   0x6d5971fa
  42002b:	ins    BYTE PTR es:[edi],dx
  42002c:	mov    eax,ds:0xcc37d889
  420031:	scas   eax,DWORD PTR es:[edi]
  420032:	inc    ebp
  420033:	in     al,0xbd
  420035:	jno    0x420092
  420037:	lea    edx,[esi]
  420039:	xor    edx,DWORD PTR [ecx+0x3f]
  42003c:	and    DWORD PTR [eax],ebp
  42003e:	leave  
  42003f:	adc    al,0x0
  420041:	lahf   
  420042:	sbb    DWORD PTR [edx],esp
  420044:	mov    esi,0x1891df4c
  420049:	adc    DWORD PTR ds:0x1fc59375,0xafe2b0a5
  420053:	cmc    
  420054:	cmp    BYTE PTR [edx+0x9a5ab2c],al
  42005a:	xor    al,0x68
  42005c:	or     edx,DWORD PTR [edx+0x5ce84e8a]
  420062:	mov    eax,ds:0xafa3d9cd
  420067:	mov    edi,0xafca11d6
  42006c:	xor    bl,ah
  42006e:	stos   DWORD PTR es:[edi],eax
  42006f:	sbb    DWORD PTR ds:0x267c7b97,0x5ab96c9
  420079:	cwde   
  42007a:	push   ecx
  42007b:	lods   eax,DWORD PTR ds:[esi]
  42007c:	(bad)  
  42007d:	adc    eax,0xed7c131f
  420082:	in     eax,0xde
  420084:	imul   edx,DWORD PTR [edi+0x7a],0x91c3a9e4
  42008b:	push   esi
  42008c:	lahf   
  42008d:	fstp   DWORD PTR [ebp+0x6332fa18]
  420093:	test   al,0x30
  420095:	and    DWORD PTR [edx+0x5b],ebx
  420098:	cmp    ebx,eax
  42009a:	inc    eax
  42009b:	outs   dx,BYTE PTR ds:[esi]
  42009c:	aad    0x75
  42009e:	jl     0x420065
  4200a0:	xchg   ebx,eax
  4200a1:	push   esp
  4200a2:	mov    eax,ds:0xefd3ab04
  4200a7:	adc    BYTE PTR [esi-0x75],dh
  4200aa:	cmc    
  4200ab:	cli    
  4200ac:	mov    WORD PTR [esi+0x32],gs
  4200af:	cwde   
  4200b0:	xchg   ebx,eax
  4200b1:	mov    dh,0xc7
  4200b3:	popf   
  4200b4:	outs   dx,BYTE PTR ds:[esi]
  4200b5:	push   ebx
  4200b6:	sub    DWORD PTR cs:[edi],edi
  4200b9:	jmp    0xaf04:0x778b250e
  4200c0:	fs sbb al,0x60
  4200c3:	jnp    0x420046
  4200c5:	mov    esp,0xd2a59aa2
  4200ca:	stos   BYTE PTR es:[edi],al
  4200cb:	(bad)  
  4200cc:	sbb    al,0x9f
  4200ce:	test   al,0x7f
  4200d0:	sahf   
  4200d1:	sub    DWORD PTR [ecx-0x54712b78],esi
  4200d7:	(bad)  
  4200d8:	inc    ecx
  4200d9:	leave  
  4200da:	adc    edx,ebx
  4200dc:	sbb    cl,ch
  4200de:	cwde   
  4200df:	or     DWORD PTR [ebx+0x20],ecx
  4200e2:	adc    DWORD PTR [ecx-0x6ae427c9],edi
  4200e8:	and    eax,0x3a5e6281
  4200ed:	out    0x92,al
  4200ef:	adc    dl,dl
  4200f1:	mov    ds:0x1928ab4e,al
  4200f6:	icebp  
  4200f7:	add    ch,cl
  4200f9:	sub    BYTE PTR [ebp-0x42ae8270],0x27
  420100:	xor    bh,BYTE PTR [edx]
  420102:	xchg   edx,eax
  420103:	mov    ah,0xe1
  420105:	pop    ebx
  420106:	sbb    dl,BYTE PTR [edx-0x64c10e8c]
  42010c:	or     ebx,DWORD PTR [edi-0x30]
  42010f:	leave  
  420110:	call   0x6f6752bb
  420115:	(bad)  
  420116:	inc    eax
  420117:	imul   ebp,DWORD PTR [esi+edi*8],0xe3c407d
  42011e:	clc    
  42011f:	and    DWORD PTR [edx-0x6ed84c68],esp
  420125:	pop    eax
  420126:	call   0x309c21bb
  42012b:	test   al,0xda
  42012d:	std    
  42012e:	scas   eax,DWORD PTR es:[edi]
  42012f:	dec    ebp
  420130:	rcl    BYTE PTR [eax-0x79fbb4c3],cl
  420136:	adc    esi,DWORD PTR [esi+ecx*8-0x6e]
  42013a:	jmp    0xc773:0x5aae9af7
  420141:	xchg   edx,eax
  420142:	sub    DWORD PTR [esi+eax*4+0x6c],esp
  420146:	jecxz  0x4200da
  420148:	push   0xd430c0ee
  42014d:	imul   ebx,DWORD PTR [edx+0x7e],0x58
  420151:	jo     0x420102
  420153:	and    bl,ch
  420155:	test   BYTE PTR [edx-0x24ab834c],bl
  42015b:	xchg   ebx,eax
  42015c:	mov    ds:0x66be4b8a,al
  420161:	fld    TBYTE PTR [edx]
  420163:	ins    DWORD PTR es:[edi],dx
  420164:	sbb    DWORD PTR [edx+0x5c83376f],edx
  42016a:	popa   
  42016b:	push   eax
  42016c:	xor    al,BYTE PTR [ebx+edx*8-0x27]
  420170:	push   esp
  420171:	mov    bh,0x3a
  420173:	fdivr  DWORD PTR [ecx+0x5c]
  420176:	cwde   
  420177:	cld    
  420178:	cwde   
  420179:	or     DWORD PTR [esi-0x1bba3a71],esi
  42017f:	push   ebx
  420180:	js     0x4201a4
  420182:	sti    
  420183:	push   ds
  420184:	sahf   
  420185:	adc    eax,DWORD PTR [eax]
  420187:	push   esi
  420188:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420189:	jecxz  0x42018e
  42018b:	mov    al,ds:0x29f7d41a
  420190:	push   ebp
  420191:	adc    eax,0xda3ef91d
  420196:	xor    edi,DWORD PTR [eax+0xa]
  420199:	clc    
  42019a:	mov    BYTE PTR [ebp+0x435c0e6b],cl
  4201a0:	cmp    al,0xcf
  4201a2:	push   ebp
  4201a3:	fstp   DWORD PTR [edi-0x3a]
  4201a6:	enter  0x963f,0x2d
  4201aa:	push   0xb872bbe9
  4201af:	or     eax,0x821056fd
  4201b4:	sbb    edx,DWORD PTR [ecx+edi*8]
  4201b7:	jnp    0x420217
  4201b9:	cli    
  4201ba:	pop    edi
  4201bb:	popa   
  4201bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201bd:	call   0x35c4:0x7e28b9e3
  4201c4:	adc    esi,ebx
  4201c6:	dec    esp
  4201c7:	inc    ebp
  4201c8:	scas   eax,DWORD PTR es:[edi]
  4201c9:	mov    bl,0x94
  4201cb:	push   es
  4201cc:	fdivr  QWORD PTR [eax]
  4201ce:	xchg   edi,eax
  4201cf:	sbb    edi,DWORD PTR [eax-0x27f02736]
  4201d5:	adc    al,0x93
  4201d7:	and    eax,0x718f1abf
  4201dc:	lods   al,BYTE PTR ds:[esi]
  4201dd:	in     eax,0xb0
  4201df:	mov    ah,0xd2
  4201e1:	sti    
  4201e2:	push   edi
  4201e3:	cmp    dh,BYTE PTR [ebx-0x28]
  4201e6:	fwait
  4201e7:	jg     0x4201c7
  4201e9:	pop    esp
  4201ea:	pushf  
  4201eb:	mov    ds:0xd7270c5c,al
  4201f0:	int    0x5d
  4201f2:	push   0xffffffc5
  4201f4:	jo     0x4201bb
  4201f6:	repz mov edx,0xbd0212da
  4201fc:	popa   
  4201fd:	and    eax,0x87b6226c
  420202:	inc    esi
  420203:	or     esp,edi
  420205:	push   edi
  420206:	jne    0x420197
  420208:	das    
  420209:	repz fsubr st,st(6)
  42020c:	out    dx,eax
  42020d:	cmp    cl,cl
  42020f:	js     0x42023c
  420211:	stos   DWORD PTR es:[edi],eax
  420212:	lods   eax,DWORD PTR ds:[esi]
  420213:	pop    ds
  420214:	and    ah,bh
  420216:	sahf   
  420217:	mov    ah,0x11
  420219:	pop    ebx
  42021a:	jecxz  0x420227
  42021c:	fwait
  42021d:	pop    eax
  42021e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42021f:	scas   eax,DWORD PTR es:[edi]
  420220:	sbb    esp,DWORD PTR [edi-0x7f933912]
  420226:	loope  0x4201ac
  420228:	mov    ds:0xfce1c2de,al
  42022d:	push   esi
  42022e:	and    al,0xf3
  420230:	dec    esi
  420231:	test   al,0x9c
  420233:	sbb    DWORD PTR [edi-0x4365bbc9],ebx
  420239:	xchg   ebp,eax
  42023a:	push   ss
  42023b:	cld    
  42023c:	mov    ah,0xa8
  42023e:	or     dh,dl
  420240:	xchg   ebp,eax
  420241:	and    DWORD PTR [ebp-0x36],0x4a4f1436
  420248:	fdivr  DWORD PTR [eax+esi*4+0x37]
  42024c:	rol    ah,cl
  42024e:	loope  0x4202c8
  420250:	jge    0x4202a1
  420252:	pop    ebp
  420253:	push   ss
  420254:	dec    esi
  420255:	fist   WORD PTR [esi-0x3883cba1]
  42025b:	sar    BYTE PTR [esi],0x7
  42025e:	mov    bh,0xa9
  420260:	repz retf 
  420262:	aam    0xa7
  420264:	(bad)  
  420265:	call   0x4dc3:0xb446c757
  42026c:	push   cs
  42026d:	int    0xad
  42026f:	test   eax,0x627d2036
  420274:	jmp    0x42022d
  420276:	ja     0x4202b3
  420278:	add    al,0xa5
  42027a:	sbb    DWORD PTR [ecx+eax*2],0x22ad1aac
  420281:	es outs dx,DWORD PTR es:[esi]
  420284:	and    bh,BYTE PTR [esi-0x1b]
  420287:	or     bh,BYTE PTR [edx]
  420289:	call   FWORD PTR [ecx-0x57]
  42028c:	sahf   
  42028d:	push   0xc1762e30
  420292:	xchg   BYTE PTR [edi-0x5d],ch
  420295:	mov    ?,WORD PTR [edx]
  420297:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420298:	ret    
  420299:	add    esi,ebp
  42029b:	cmp    al,0xd3
  42029d:	pop    ecx
  42029e:	ss cmp bh,bl
  4202a1:	jmp    0xdd25:0x762e214d
  4202a8:	cmp    dh,BYTE PTR [ecx+0x55]
  4202ab:	call   0xf5038c0d
  4202b0:	inc    ebp
  4202b1:	mov    esp,0x3cc3d87
  4202b6:	iret   
  4202b7:	outs   dx,DWORD PTR ds:[esi]
  4202b8:	cld    
  4202b9:	out    0x3,al
  4202bb:	sub    ch,bh
  4202bd:	dec    ebx
  4202be:	inc    eax
  4202bf:	test   bh,cl
  4202c1:	lea    eax,[eax]
  4202c3:	enter  0xc53d,0xd5
  4202c7:	jo     0x42031c
  4202c9:	mov    DWORD PTR [ebx-0x58],ebx
  4202cc:	inc    esi
  4202cd:	dec    ebx
  4202ce:	fxam   
  4202d0:	lock jbe 0x42025b
  4202d3:	xchg   ebx,eax
  4202d4:	inc    esp
  4202d5:	fdiv   QWORD PTR ds:0x55277ed7
  4202db:	enter  0xb8fa,0x36
  4202df:	daa    
  4202e0:	mov    bl,0x1
  4202e2:	cmp    BYTE PTR [ecx+0x39fb65f2],0x5b
  4202e9:	jmp    0x420331
  4202eb:	jb     0x420362
  4202ed:	hlt    
  4202ee:	shl    DWORD PTR [eax],1
  4202f0:	nop
  4202f1:	jl     0x4202d9
  4202f3:	outs   dx,DWORD PTR ds:[esi]
  4202f4:	popa   
  4202f5:	inc    ebx
  4202f6:	xor    bh,al
  4202f8:	ss jo  0x4202bd
  4202fb:	or     eax,0x7921c8dd
  420300:	(bad)  
  420301:	in     eax,0xce
  420303:	repnz popf 
  420305:	fadd   st,st(3)
  420307:	fisttp WORD PTR [ebx]
  420309:	xchg   DWORD PTR [ebx+ebp*1],ebp
  42030c:	lds    edi,FWORD PTR [ebp+0x7615d482]
  420312:	push   0x25
  420314:	cwde   
  420315:	aas    
  420316:	mov    BYTE PTR [ebx],dl
  420318:	pop    edi
  420319:	xchg   ebp,eax
  42031a:	cmp    bl,cl
  42031c:	xor    BYTE PTR [esp+ecx*2],al
  42031f:	mov    edi,0xe234c2f5
  420324:	ficomp WORD PTR [edi]
  420326:	leave  
  420327:	xchg   ebx,eax
  420328:	fld    QWORD PTR [esp+eax*1]
  42032b:	xor    al,0x63
  42032d:	adc    dl,BYTE PTR [edx+0x22]
  420330:	(bad)  [esi+eiz*8]
  420333:	mov    ch,0xf5
  420335:	jle    0x4203a1
  420337:	mov    ds:0x6188bd6a,eax
  42033c:	or     esp,DWORD PTR [ebp+0x14dba939]
  420342:	lods   al,BYTE PTR ds:[esi]
  420343:	cmc    
  420344:	js     0x420342
  420346:	loope  0x420324
  420348:	cmp    al,0xaf
  42034a:	ins    BYTE PTR es:[edi],dx
  42034b:	pop    ebp
  42034c:	(bad)  
  42034d:	popf   
  42034e:	xchg   BYTE PTR [ebp+0x34dcfb4a],al
  420354:	xor    esp,DWORD PTR [esi]
  420356:	mov    ebp,edi
  420358:	sbb    DWORD PTR [eax-0x2a],ecx
  42035b:	push   ecx
  42035c:	test   eax,0x6aaed55
  420361:	or     bh,ah
  420363:	mov    dh,0xc6
  420365:	or     dh,BYTE PTR [ebx+edi*4-0x6c]
  420369:	aam    0x2f
  42036b:	ja     0x4203ba
  42036d:	mov    ecx,0xe633326d
  420372:	mov    eax,ds:0xb2a937d1
  420377:	cli    
  420378:	add    ch,ah
  42037a:	sbb    ecx,DWORD PTR [esi+0x74]
  42037d:	pop    ebp
  42037e:	adc    al,0xf
  420380:	(bad)  
  420381:	push   edx
  420382:	dec    esp
  420383:	pop    edi
  420384:	dec    ebx
  420385:	sti    
  420386:	pop    ds
  420387:	daa    
  420388:	inc    edi
  420389:	sbb    dl,cl
  42038b:	fstp   DWORD PTR [edx+0x2d]
  42038e:	sbb    eax,0xf5fdb0e8
  420393:	pop    edx
  420394:	jnp    0x420365
  420396:	out    dx,al
  420397:	ffree  st(2)
  420399:	ja     0x4203c5
  42039b:	mov    al,BYTE PTR [ebp-0x11]
  42039e:	or     edi,edx
  4203a0:	push   ebx
  4203a1:	icebp  
  4203a2:	mov    eax,ds:0x2e8d7c18
  4203a7:	pop    ss
  4203a8:	bound  edi,QWORD PTR [edi+eax*2-0x7]
  4203ac:	cmp    DWORD PTR [esi+0x2d],esp
  4203af:	adc    DWORD PTR [ecx-0x3c],0x6f
  4203b3:	icebp  
  4203b4:	fadd   st(1),st
  4203b6:	xor    DWORD PTR [ecx+0x2983d526],ebx
  4203bc:	shl    dl,1
  4203be:	test   ebp,edi
  4203c0:	neg    ebp
  4203c2:	das    
  4203c3:	les    edx,FWORD PTR [edx+0x34]
  4203c6:	inc    ecx
  4203c7:	adc    edx,DWORD PTR [eax]
  4203c9:	mov    BYTE PTR [ecx],cl
  4203cb:	test   eax,0x8bd0a67f
  4203d0:	cs retf 
  4203d2:	cs pop ss
  4203d4:	scas   al,BYTE PTR es:[edi]
  4203d5:	dec    edi
  4203d6:	push   cs
  4203d7:	shr    BYTE PTR ds:0x95a3e57c,1
  4203dd:	rcl    ah,1
  4203df:	inc    esi
  4203e0:	inc    ecx
  4203e1:	shr    ecx,0x8c
  4203e4:	test   al,0x74
  4203e6:	loopne 0x4203a4
  4203e8:	outs   dx,DWORD PTR ds:[esi]
  4203e9:	jecxz  0x42040e
  4203eb:	mov    ds:0x6a4c91f,eax
  4203f0:	das    
  4203f1:	outs   dx,DWORD PTR ds:[esi]
  4203f2:	xor    esi,DWORD PTR [edi+0x55]
  4203f5:	xchg   esp,eax
  4203f6:	mov    esp,0xe3ff300
  4203fb:	add    dl,0x7b
  4203fe:	add    al,0xf6
  420400:	push   0x52
  420402:	mov    ds:0xed9c4e45,eax
  420407:	out    dx,al
  420408:	inc    eax
  420409:	lock ja 0x4203f2
  42040c:	into   
  42040d:	cmp    BYTE PTR [esi+0x69],0x31
  420411:	enter  0x39ba,0x50
  420415:	sub    ebx,edx
  420417:	mov    edi,0x719cec74
  42041c:	dec    edi
  42041d:	xchg   esp,eax
  42041e:	and    DWORD PTR [edx+edx*1-0x68],eax
  420422:	sahf   
  420423:	es mov bh,0xba
  420426:	pop    ecx
  420427:	mov    DWORD PTR [eax+0x7f],edi
  42042a:	inc    eax
  42042b:	ins    DWORD PTR es:[edi],dx
  42042c:	shl    BYTE PTR [edx+0x4e],1
  42042f:	int3   
  420430:	loope  0x4203d3
  420432:	mov    ebp,0x3d111273
  420437:	fistp  DWORD PTR [ecx+0x41461462]
  42043d:	stos   BYTE PTR es:[edi],al
  42043e:	imul   ecx,DWORD PTR [ebp-0x52e409bc],0x4a
  420445:	mov    cs,edx
  420447:	imul   ecx,DWORD PTR [edi],0x54aaa1b2
  42044d:	jno    0x4204a8
  42044f:	cli    
  420450:	shr    BYTE PTR ds:0x2d727794,cl
  420456:	popf   
  420457:	mov    ch,0xec
  420459:	push   0x804adc02
  42045e:	aaa    
  42045f:	dec    esp
  420460:	(bad)  
  420462:	sbb    DWORD PTR [eax+0x693bbbd],0x7d
  420469:	jmp    0x420418
  42046b:	jle    0x420482
  42046d:	ja     0x4204ce
  42046f:	or     BYTE PTR [ecx+0x6e9a6193],0xdf
  420476:	mov    fs,WORD PTR [esi]
  420478:	in     al,dx
  420479:	outs   dx,BYTE PTR ds:[esi]
  42047a:	xchg   edx,eax
  42047b:	les    edi,FWORD PTR [edx+eax*1-0x9]
  42047f:	retf   0x7abc
  420482:	mov    ds:0xd5dd5a86,eax
  420487:	call   0xbbd93bfa
  42048c:	sbb    BYTE PTR [esp+edi*8-0x78c5b225],0x24
  420494:	sbb    dh,bh
  420496:	icebp  
  420497:	cld    
  420498:	xlat   BYTE PTR ds:[ebx]
  420499:	scas   al,BYTE PTR es:[edi]
  42049a:	cmc    
  42049b:	pop    ebp
  42049c:	jb     0x4204f1
  42049e:	pop    ds
  42049f:	jmp    0x420451
  4204a1:	xor    dh,bl
  4204a3:	push   cs
  4204a4:	fldcw  WORD PTR cs:[eax-0x3f517137]
  4204ab:	lds    edx,FWORD PTR [eax+0x2d]
  4204ae:	jmp    0x5626:0x855dffc5
  4204b5:	xor    eax,0xbca549f7
  4204ba:	jae    0x4204fd
  4204bc:	pushf  
  4204bd:	mov    ebp,DWORD PTR [esi]
  4204bf:	gs pop ss
  4204c1:	stc    
  4204c2:	lods   eax,DWORD PTR ds:[esi]
  4204c3:	mov    al,0xc3
  4204c5:	mov    edi,0x93129a00
  4204ca:	push   edi
  4204cb:	xor    al,0x76
  4204cd:	and    ecx,DWORD PTR [ebx+eax*2-0x2956c910]
  4204d4:	les    ebp,FWORD PTR ds:0xfa4a8cc9
  4204da:	pop    esp
  4204db:	mov    dl,0x5a
  4204dd:	mov    eax,ds:0x2798bf2
  4204e2:	jno    0x4204e6
  4204e4:	ret    
  4204e5:	es and al,0x26
  4204e8:	rcl    eax,0xb8
  4204eb:	aad    0xe
  4204ed:	xor    al,0x3c
  4204ef:	ret    0xe54f
  4204f2:	jmp    0x42048c
  4204f4:	mov    ebx,0xf149dcaa
  4204f9:	and    eax,0x11ac01ef
  4204fe:	push   edx
  4204ff:	jnp    0x420563
  420501:	dec    eax
  420502:	leave  
  420503:	jp     0x420501
  420505:	push   cs
  420506:	add    BYTE PTR [edi],ah
  420508:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420509:	mov    eax,ds:0x4124a2de
  42050e:	fisttp QWORD PTR [eax]
  420510:	out    dx,eax
  420511:	adc    eax,0xdf8d9459
  420516:	mov    dh,BYTE PTR [edi+0x6d7ec873]
  42051c:	fisttp DWORD PTR [edi]
  42051e:	jle    0x4204d9
  420520:	xchg   esi,eax
  420521:	rcr    BYTE PTR [esi+0x4e878812],1
  420527:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420528:	pop    ds
  420529:	or     eax,DWORD PTR [esi+0x663d9143]
  42052f:	xor    al,0x47
  420532:	jns    0x4205a8
  420534:	pop    ebp
  420535:	lods   eax,DWORD PTR ds:[esi]
  420536:	mov    dh,0x5d
  420538:	push   ecx
  420539:	out    0xb8,al
  42053b:	inc    eax
  42053c:	dec    esp
  42053d:	shr    DWORD PTR [ecx],cl
  42053f:	ins    BYTE PTR es:[edi],dx
  420540:	in     al,dx
  420541:	mov    ebp,0xe374663d
  420546:	push   ecx
  420547:	fistp  DWORD PTR [edx-0x4abb8077]
  42054d:	sahf   
  42054e:	ins    DWORD PTR es:[edi],dx
  42054f:	and    al,0x33
  420551:	(bad)  
  420552:	mov    ch,0xa7
  420554:	dec    eax
  420555:	jg     0x4205d0
  420557:	jns    0x4204df
  420559:	dec    ebp
  42055a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42055b:	adc    ebx,DWORD PTR [ebx+0x34]
  42055e:	mov    ebp,0xb3d03610
  420563:	xchg   ebx,eax
  420564:	mov    ch,0xb1
  420566:	aas    
  420567:	outs   dx,DWORD PTR ds:[esi]
  420568:	pop    esi
  420569:	rcr    DWORD PTR ds:0x4f2184c3,1
  42056f:	xchg   ebx,eax
  420570:	leave  
  420571:	xor    eax,0xc4d14209
  420576:	and    DWORD PTR [ecx],edx
  420578:	retf   
  420579:	aam    0x85
  42057b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42057c:	jne    0x420589
  42057e:	mov    ebp,0xb4ad8e32
  420583:	shl    DWORD PTR [edi],cl
  420585:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420586:	(bad)  
  420587:	jae    0x420564
  420589:	in     eax,dx
  42058a:	xor    al,0x76
  42058c:	aaa    
  42058d:	sbb    BYTE PTR [edi+0x12],bl
  420590:	cmp    bl,BYTE PTR [ebp+0x20]
  420593:	or     bl,BYTE PTR [edi-0x6b3aec1b]
  420599:	push   ecx
  42059a:	dec    edx
  42059b:	or     ebx,DWORD PTR [ebx+0x5f]
  42059e:	lock sbb ch,dh
  4205a1:	sbb    eax,0x820cb0dd
  4205a6:	jo     0x4205aa
  4205a8:	xor    ch,bl
  4205aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205ab:	or     DWORD PTR [edi+esi*2+0x76],esi
  4205af:	pop    edi
  4205b0:	lods   eax,DWORD PTR ds:[esi]
  4205b1:	(bad)  
  4205b2:	sti    
  4205b3:	ins    BYTE PTR es:[edi],dx
  4205b4:	jns    0x4205d9
  4205b6:	and    bl,ch
  4205b8:	jnp    0x420636
  4205ba:	jnp    0x42059b
  4205bc:	pusha  
  4205bd:	add    al,0x51
  4205bf:	(bad)  
  4205c0:	test   BYTE PTR [ebp+0x20113c8e],0xa9
  4205c7:	mov    bh,0x39
  4205c9:	cmp    esp,esp
  4205cb:	mov    esp,0x23994a4f
  4205d0:	in     eax,dx
  4205d1:	sub    DWORD PTR [esi],ebp
  4205d3:	push   edi
  4205d4:	xor    eax,0x53078d60
  4205d9:	jge    0x4205e4
  4205db:	dec    eax
  4205dc:	in     eax,dx
  4205dd:	sub    cl,al
  4205df:	add    esi,DWORD PTR [ecx]
  4205e1:	mov    al,0xeb
  4205e3:	dec    ecx
  4205e4:	imul   edi,DWORD PTR [esi+0x4],0xb2c7522
  4205eb:	popa   
  4205ec:	outs   dx,BYTE PTR ds:[esi]
  4205ed:	jo     0x4205a0
  4205ef:	xor    eax,0xaabdd13
  4205f4:	in     eax,0x64
  4205f6:	sahf   
  4205f7:	adc    DWORD PTR [ecx],edx
  4205f9:	add    al,0xd8
  4205fb:	movntq QWORD PTR [ebp+0x45],mm6
  4205ff:	xchg   edi,eax
  420600:	dec    esp
  420601:	nop
  420602:	fld    st(6)
  420604:	sub    eax,0x2829a1cf
  420609:	pop    ss
  42060a:	stos   DWORD PTR es:[edi],eax
  42060b:	or     edi,ebp
  42060d:	adc    DWORD PTR [edx-0x40],esi
  420610:	out    0x44,eax
  420612:	dec    edx
  420613:	add    dh,bh
  420615:	scas   al,BYTE PTR es:[di]
  420617:	(bad)  
  420619:	pop    ds
  42061a:	inc    ecx
  42061b:	hlt    
  42061c:	jl     0x420620
  42061e:	mov    ebp,0x8061d1fd
  420623:	pop    ds
  420624:	adc    BYTE PTR [ebx+0x79f296fb],0xca
  42062b:	jbe    0x4205c2
  42062d:	mov    al,ds:0x4cc04c20
  420632:	adc    BYTE PTR es:[ebp-0x7c],bh
  420636:	adc    ah,BYTE PTR [edi]
  420638:	push   esi
  420639:	pop    ebx
  42063a:	call   0x7068:0xf095ab83
  420641:	mov    ebx,0x782a7979
  420646:	pop    esp
  420647:	ds dec ecx
  420649:	test   eax,0xefaf08cf
  42064e:	add    eax,0xce19ca79
  420653:	xchg   ebx,eax
  420654:	push   ss
  420655:	int3   
  420656:	jge    0x420610
  420658:	retf   0x3139
  42065b:	mov    al,ds:0x647dbe36
  420660:	dec    ecx
  420661:	add    BYTE PTR cs:[ebp-0x66],ch
  420665:	data16 fsub QWORD PTR [edi-0x46]
  420669:	mov    ah,0x1b
  42066b:	mov    eax,0xb496c125
  420670:	lods   al,BYTE PTR ds:[esi]
  420671:	leave  
  420672:	leave  
  420673:	cmp    BYTE PTR ds:0x104e4c6,ah
  420679:	mov    ecx,0xe1c09e2c
  42067e:	ror    DWORD PTR [ecx+0x10925c27],1
  420684:	xchg   esp,eax
  420685:	call   0x5a4f:0x2da28e8
  42068c:	mov    eax,0x4d582e75
  420691:	jg     0x420637
  420693:	dec    esi
  420694:	mov    dh,0x5e
  420696:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420697:	(bad)  
  420698:	mov    edi,esp
  42069a:	add    esi,DWORD PTR [ebx+0x4d7a931a]
  4206a0:	xchg   BYTE PTR ds:0xe66f1f2b,dh
  4206a6:	cmp    DWORD PTR [edx+0x1ab21eec],ebx
  4206ac:	sbb    DWORD PTR [ecx-0x75],0x32
  4206b0:	jne    0x42070f
  4206b2:	loope  0x4206a5
  4206b4:	gs dec edx
  4206b6:	inc    ebx
  4206b7:	pusha  
  4206b8:	outs   dx,DWORD PTR ds:[esi]
  4206b9:	aam    0xd8
  4206bb:	push   edx
  4206bc:	jne    0x420708
  4206be:	or     eax,0xb37fb5ff
  4206c3:	jecxz  0x42069f
  4206c5:	frstor [ecx+0x13]
  4206c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206c9:	sbb    al,0x9e
  4206cb:	mov    DWORD PTR [edi+0x5],eax
  4206ce:	in     al,0xa6
  4206d0:	fcmovnu st,st(3)
  4206d2:	cdq    
  4206d3:	cmp    eax,0x1abd3d29
  4206d8:	sbb    DWORD PTR [ebp-0x54],esp
  4206db:	aad    0x5b
  4206dd:	pop    ss
  4206de:	add    DWORD PTR [edi-0x22966180],ecx
  4206e4:	enter  0x118c,0x54
  4206e8:	ret    0x6b7d
  4206eb:	jecxz  0x4206e7
  4206ed:	xor    DWORD PTR [eax-0x341951a7],edi
  4206f3:	sub    al,0xb5
  4206f5:	es daa 
  4206f7:	(bad)  
  4206f8:	sub    DWORD PTR [edi+0x62e0d4f2],esi
  4206fe:	leave  
  4206ff:	mov    bl,0x74
  420701:	pop    es
  420702:	pop    ss
  420703:	pop    edx
  420704:	dec    DWORD PTR [ebx]
  420706:	pop    edx
  420707:	pop    eax
  420708:	pop    ebx
  420709:	aad    0x4c
  42070b:	stc    
  42070c:	add    eax,0x5d856cfd
  420711:	sbb    edx,DWORD PTR [eax+0x28e360ea]
  420717:	imul   ecx,DWORD PTR [edi],0x42
  42071a:	mov    ebx,gs
  42071c:	mov    ah,0x73
  42071e:	aaa    
  42071f:	dec    edx
  420720:	mov    DWORD PTR [ecx+0x76e6d461],0xf9d93fee
  42072a:	lahf   
  42072b:	add    al,0x48
  42072d:	or     esi,DWORD PTR [edx-0x2d]
  420730:	cs adc bh,dh
  420733:	iret   
  420734:	ins    DWORD PTR es:[edi],dx
  420735:	(bad)  
  420736:	(bad)  
  420737:	jle    0x4206e1
  420739:	sbb    ebp,DWORD PTR [ebx+0x1a228104]
  42073f:	lea    edx,[edx+eiz*2]
  420742:	dec    edi
  420743:	jns    0x420734
  420745:	cmp    al,0xb8
  420747:	push   esi
  420748:	pusha  
  420749:	mov    al,0x63
  42074b:	sub    esp,DWORD PTR [esi]
  42074d:	xor    DWORD PTR [ecx],0xffffffb7
  420750:	clc    
  420751:	popa   
  420752:	(bad)  
  420753:	cmp    DWORD PTR [ebx+0x45458808],eax
  420759:	pusha  
  42075a:	pop    es
  42075b:	in     al,0x31
  42075d:	popa   
  42075e:	and    eax,DWORD PTR [ecx-0xf557856]
  420764:	jl     0x4207cc
  420766:	aam    0xe2
  420768:	in     eax,dx
  420769:	xchg   esi,eax
  42076a:	mov    ebx,0x88a3bfc9
  42076f:	daa    
  420770:	adc    eax,0xbeb89dda
  420775:	jnp    0x4207db
  420777:	mov    ds:0xa30bd41f,eax
  42077c:	in     eax,dx
  42077d:	aad    0x2d
  42077f:	pop    ds
  420780:	sub    BYTE PTR [edi],al
  420782:	fsubr  st,st(3)
  420784:	cmp    cl,ah
  420786:	mov    BYTE PTR ds:[eax],bl
  420789:	ds jg  0x420716
  42078c:	push   cs
  42078d:	out    0x82,eax
  42078f:	retf   
  420790:	dec    eax
  420791:	add    eax,ecx
  420793:	mov    DWORD PTR [ebp-0x14],eax
  420796:	mov    eax,DWORD PTR [ebp-0x14]
  420799:	mov    eax,DWORD PTR [eax+0xc]
  42079c:	movsx  eax,BYTE PTR [eax+ecx*1]
  4207a0:	cdq    
  4207a1:	add    eax,ebx
  4207a3:	adc    edx,0xffffffff
  4207a6:	xor    eax,edi
  4207a8:	xor    edx,0x0
  4207ab:	cmp    eax,0x70941e1e
  4207b0:	jne    0x41e3c0
  4207b6:	cmp    edx,0xffffffff
  4207b9:	jne    0x41e3c0
  4207bf:	mov    eax,ds:0x42830b
  4207c4:	mov    eax,DWORD PTR [eax+0x198]
  4207ca:	mov    DWORD PTR [eax],ecx
  4207cc:	mov    eax,ecx
  4207ce:	jmp    0x4207f7
  4207d3:	mov    eax,DWORD PTR [ebp+0x18]
  4207d6:	cmp    eax,0xf89c85a2
  4207db:	jne    0x4207f7
  4207e1:	push   0xf89c85a3
  4207e6:	push   DWORD PTR [ebp+0x14]
  4207e9:	push   DWORD PTR [ebp+0x10]
  4207ec:	push   DWORD PTR [ebp+0xc]
  4207ef:	push   DWORD PTR [ebp+0x8]
  4207f2:	call   0x41b9fd
  4207f7:	pop    edi
  4207f8:	pop    ebx
  4207f9:	pop    esi
  4207fa:	leave  
  4207fb:	ret    0x14
  4207fe:	push   ebp
  4207ff:	mov    ebp,esp
  420801:	and    esp,0xfffffff8
  420804:	or     DWORD PTR ds:0x42918f,0x225c
  42080e:	sub    esp,0x3fc
  420814:	sbb    DWORD PTR ds:0x4291a7,0x4291f3
  42081e:	push   ebx
  42081f:	push   esi
  420820:	push   edi
  420821:	and    DWORD PTR ds:0x42915f,0x397e
  42082b:	push   0x42842f
  420830:	or     DWORD PTR ds:0x4291af,0x2ff8
  42083a:	push   0x7876867
  42083f:	or     DWORD PTR ds:0x4291b7,0x20a1
  420849:	call   DWORD PTR ds:0x42a62b
  42084f:	sub    DWORD PTR ds:0x42915f,0x5681
  420859:	mov    DWORD PTR [esp+0x30],eax
  42085d:	lea    eax,[esp+0x78]
  420861:	push   eax
  420862:	sub    DWORD PTR ds:0x42919b,0x4291d3
  42086c:	push   0x428447
  420871:	mov    DWORD PTR ds:0x4291e3,0x3a46
  42087b:	call   DWORD PTR ds:0x42a64b
  420881:	cmp    eax,0xffffffff
  420884:	je     0x42089b
  42088a:	xor    DWORD PTR ds:0x42915f,0x150a
  420894:	xor    eax,eax
  420896:	jmp    0x421b36
  42089b:	mov    esi,DWORD PTR ds:0x42a667
  4208a1:	xor    DWORD PTR ds:0x4291d3,0x3930
  4208ab:	push   0xf
  4208ad:	lea    eax,[esp+0x44]
  4208b1:	push   eax
  4208b2:	push   0x42845b
  4208b7:	push   0x42846f
  4208bc:	sub    DWORD PTR ds:0x42915f,0x4291d7
  4208c6:	push   0x42848f
  4208cb:	adc    DWORD PTR ds:0x429183,0x3c8a
  4208d5:	call   esi
  4208d7:	imul   eax,eax,0x300000
  4208dd:	cmp    eax,0x1b00000
  4208e2:	mov    DWORD PTR ds:0x4291bf,0x78b4
  4208ec:	jne    0x42088a
  4208f2:	or     DWORD PTR ds:0x4291b3,0x42915b
  4208fc:	lea    eax,[esp+0x1b8]
  420903:	and    DWORD PTR ds:0x42919f,0x5d3c
  42090d:	push   eax
  42090e:	add    DWORD PTR ds:0x4291e3,0x4291af
  420918:	push   0x4284cb
  42091d:	and    DWORD PTR ds:0x429153,0x42915b
  420927:	call   DWORD PTR ds:0x42a637
  42092d:	cmp    eax,0xffffffff
  420930:	jne    0x42088a
  420936:	add    DWORD PTR ds:0x42914b,0x6e9d
  420940:	mov    DWORD PTR [esp+0x30],0x0
  420948:	or     ecx,ecx
  42094a:	mov    ecx,0xf89c85a1
  42094f:	mov    DWORD PTR ds:0x4291af,0x17
  420959:	cmp    DWORD PTR ds:0x4291af,0x0
  420960:	je     0x4209b6
  420966:	cmp    DWORD PTR ds:0x4291af,0x4
  42096d:	jge    0x4209b6
  420973:	jmp    0x420988
  420978:	push   0x4280d6
  42097d:	push   0x1
  42097f:	push   DWORD PTR [ebp-0x24]
  420982:	call   DWORD PTR ds:0x42a64f
  420988:	cmp    DWORD PTR ds:0x4291af,0x5
  42098f:	jne    0x4209a2
  420995:	mov    ebx,DWORD PTR ds:0x4291af
  42099b:	dec    ebx
  42099c:	mov    DWORD PTR ds:0x4291af,ebx
  4209a2:	xor    ebx,ebx
  4209a4:	xor    ebx,DWORD PTR ds:0x4291af
  4209aa:	dec    ebx
  4209ab:	mov    DWORD PTR ds:0x4291af,ebx
  4209b1:	jmp    0x420959
  4209b6:	mov    DWORD PTR [esp+0x18],ecx
  4209ba:	add    DWORD PTR ds:0x429167,0x3918
  4209c4:	mov    DWORD PTR [esp+0xc],0xf89c85a2
  4209cc:	mov    edx,DWORD PTR ds:0x4291af
  4209d2:	or     DWORD PTR ds:0x429163,edx
  4209d8:	lea    eax,[esp+0x3c]
  4209dc:	mov    DWORD PTR [esp+0x30],eax
  4209e0:	xor    edi,edx
  4209e2:	lea    eax,[esp+0x38]
  4209e6:	sbb    edx,DWORD PTR ds:0x4291c3
  4209ec:	mov    DWORD PTR [esp+0x20],eax
  4209f0:	or     edi,0x5972
  4209f6:	mov    eax,ds:0x42830b
  4209fb:	mov    DWORD PTR ds:0x42917f,0x17
  420a05:	cmp    DWORD PTR ds:0x42917f,0x0
  420a0c:	je     0x420a43
  420a12:	cmp    DWORD PTR ds:0x42917f,0x21
  420a19:	jl     0x420a43
  420a1f:	jmp    0x420a2f
  420a24:	push   0x3972
  420a29:	call   DWORD PTR ds:0x42a653
  420a2f:	xor    edi,edi
  420a31:	add    edi,DWORD PTR ds:0x42917f
  420a37:	dec    edi
  420a38:	mov    DWORD PTR ds:0x42917f,edi
  420a3e:	jmp    0x420a05
  420a43:	mov    eax,DWORD PTR [eax+0x1c8]
  420a49:	mov    eax,DWORD PTR [eax]
  420a4b:	mov    edx,DWORD PTR [esp+0x20]
  420a4f:	mov    edi,0x75108ac
  420a54:	mov    ebx,DWORD PTR ds:0x4291db
  420a5a:	sbb    DWORD PTR ds:0x429153,ebx
  420a60:	xor    eax,edi
  420a62:	adc    DWORD PTR ds:0x4291f3,0x37f0
  420a6c:	mov    ebx,0x3272f3
  420a71:	add    DWORD PTR ds:0x4291a3,0x4291a7
  420a7b:	add    eax,ebx
  420a7d:	not    DWORD PTR ds:0x4291a3
  420a83:	mov    DWORD PTR [edx],eax
  420a85:	mov    DWORD PTR ds:0x4291cb,0x5252
  420a8f:	mov    eax,ds:0x42901f
  420a94:	cmp    eax,0x445cecf9
  420a99:	mov    DWORD PTR ds:0x4291bb,0x4b3f
  420aa3:	jne    0x420b94
  420aa9:	mov    eax,DWORD PTR [esp+0x18]
  420aad:	and    DWORD PTR ds:0x4291ab,0x0
  420ab7:	jmp    0x420acb
  420abc:	xor    edx,edx
  420abe:	add    edx,DWORD PTR ds:0x4291ab
  420ac4:	inc    edx
  420ac5:	mov    DWORD PTR ds:0x4291ab,edx
  420acb:	cmp    DWORD PTR ds:0x4291ab,0x1e
  420ad2:	jae    0x420b1c
  420ad8:	cmp    DWORD PTR ds:0x4291ab,0xe
  420adf:	jl     0x420b1c
  420ae5:	jmp    0x420afd
  420aea:	push   0x4280a5
  420aef:	push   DWORD PTR [ebp-0x1c]
  420af2:	push   0x3b7d
  420af7:	call   DWORD PTR ds:0x42a657
  420afd:	cmp    DWORD PTR ds:0x4291ab,0xd
  420b04:	jne    0x420b17
  420b0a:	mov    edx,DWORD PTR ds:0x4291ab
  420b10:	inc    edx
  420b11:	mov    DWORD PTR ds:0x4291ab,edx
  420b17:	jmp    0x420abc
  420b1c:	mov    edx,DWORD PTR ds:0x42830b
  420b22:	adc    DWORD PTR ds:0x4291b3,0x4291a7
  420b2c:	mov    edx,DWORD PTR [edx+0x198]
  420b32:	adc    DWORD PTR ds:0x4291a3,0x42918f
  420b3c:	xor    eax,edi
  420b3e:	sub    DWORD PTR ds:0x42916f,0x429197
  420b48:	add    eax,ebx
  420b4a:	add    DWORD PTR ds:0x42915f,0x42915b
  420b54:	mov    DWORD PTR [edx],eax
  420b56:	mov    eax,DWORD PTR [esp+0x18]
  420b5a:	xor    eax,edi
  420b5c:	not    DWORD PTR ds:0x4291b3
  420b62:	add    eax,ebx
  420b64:	sbb    DWORD PTR ds:0x4291eb,0x4291d3
  420b6e:	mov    ds:0x42901f,eax
  420b73:	mov    eax,DWORD PTR [esp+0x18]
  420b77:	sbb    DWORD PTR ds:0x42917b,0x42915f
  420b81:	xor    eax,edi
  420b83:	sub    DWORD PTR ds:0x429167,0x5dcc
  420b8d:	add    eax,ebx
  420b8f:	mov    ds:0x428403,eax
  420b94:	and    DWORD PTR ds:0x4291c3,0x0
  420b9e:	xor    eax,eax
  420ba0:	xor    eax,DWORD PTR ds:0x4291c3
  420ba6:	inc    eax
  420ba7:	mov    ds:0x4291c3,eax
  420bac:	cmp    DWORD PTR ds:0x4291c3,0x10
  420bb3:	jb     0x420be9
  420bb9:	jmp    0x420bc4
  420bbe:	call   DWORD PTR ds:0x42a65b
  420bc4:	cmp    DWORD PTR ds:0x4291c3,0xf
  420bcb:	jne    0x420bdc
  420bd1:	mov    eax,ds:0x4291c3
  420bd6:	inc    eax
  420bd7:	mov    ds:0x4291c3,eax
  420bdc:	cmp    DWORD PTR ds:0x4291c3,0x1a
  420be3:	jb     0x420b9e
  420be9:	mov    eax,ds:0x42830b
  420bee:	xor    DWORD PTR ds:0x4291bb,0x4291bf
  420bf8:	mov    eax,DWORD PTR [eax+0x18c]
  420bfe:	add    DWORD PTR ds:0x4291e7,0x4bf9
  420c08:	mov    eax,DWORD PTR [eax]
  420c0a:	mov    DWORD PTR [esp+0x60],eax
  420c0e:	mov    eax,0xf89c85bd
  420c13:	mov    DWORD PTR [esp+0x10],eax
  420c17:	add    DWORD PTR ds:0x429193,0x4291c7
  420c21:	mov    DWORD PTR [esp+0x10],eax
  420c25:	or     DWORD PTR ds:0x42917f,0x429187
  420c2f:	mov    DWORD PTR [esp+0x10],eax
  420c33:	mov    DWORD PTR [esp+0x10],ecx
  420c37:	dec    DWORD PTR ds:0x429167
  420c3d:	mov    DWORD PTR [esp+0x20],eax
  420c41:	and    DWORD PTR ds:0x4291d7,0x0
  420c4b:	xor    eax,eax
  420c4d:	add    eax,DWORD PTR ds:0x4291d7
  420c53:	inc    eax
  420c54:	mov    ds:0x4291d7,eax
  420c59:	cmp    DWORD PTR ds:0x4291d7,0xc
  420c60:	jge    0x420ca3
  420c66:	jmp    0x420c7b
  420c6b:	push   0x4291a7
  420c70:	push   0x4280a5
  420c75:	call   DWORD PTR ds:0x42a65f
  420c7b:	cmp    DWORD PTR ds:0x4291d7,0xb
  420c82:	jne    0x420c96
  420c88:	xor    eax,eax
  420c8a:	xor    eax,DWORD PTR ds:0x4291d7
  420c90:	inc    eax
  420c91:	mov    ds:0x4291d7,eax
  420c96:	cmp    DWORD PTR ds:0x4291d7,0x18
  420c9d:	jb     0x420c4b
  420ca3:	mov    DWORD PTR [esp+0x20],0xf89c85b9
  420cab:	sbb    eax,0x733e
  420cb0:	mov    eax,DWORD PTR [esp+0x18]
  420cb4:	xor    eax,edi
  420cb6:	xor    DWORD PTR ds:0x429167,0x2364
  420cc0:	add    eax,ebx
  420cc2:	jmp    0x420ea1
  420cc7:	lea    eax,[esp+0x78]
  420ccb:	sub    DWORD PTR ds:0x42918f,0x2bd1
  420cd5:	push   eax
  420cd6:	add    DWORD PTR ds:0x4291af,0x4291bb
  420ce0:	push   0x4284b7
  420ce5:	add    DWORD PTR ds:0x42916f,0x62a2
  420cef:	call   DWORD PTR ds:0x42a64b
  420cf5:	mov    DWORD PTR ds:0x4291ef,0x479f
  420cff:	cmp    eax,0xffffffff
  420d02:	jne    0x42088a
  420d08:	push   0xf
  420d0a:	lea    eax,[esp+0x44]
  420d0e:	add    DWORD PTR ds:0x42918f,0x71aa
  420d18:	push   eax
  420d19:	adc    DWORD PTR ds:0x4291bb,0x429187
  420d23:	push   0x42850b
  420d28:	push   0x42851f
  420d2d:	or     DWORD PTR ds:0x4291ef,0x259a
  420d37:	push   0x42853f
  420d3c:	call   esi
  420d3e:	imul   eax,eax,0x300000
  420d44:	mov    DWORD PTR ds:0x42914f,0x7610
  420d4e:	cmp    eax,0x1b00000
  420d53:	mov    DWORD PTR ds:0x429157,0x1024
  420d5d:	jne    0x42088a
  420d63:	sbb    DWORD PTR ds:0x4291c3,0x4291d7
  420d6d:	lea    eax,[esp+0x1b8]
  420d74:	push   eax
  420d75:	push   0x42857b
  420d7a:	sbb    DWORD PTR ds:0x42918f,0x1a84
  420d84:	call   DWORD PTR ds:0x42a637
  420d8a:	mov    DWORD PTR ds:0x4291b3,0x1d41
  420d94:	cmp    eax,0xffffffff
  420d97:	jne    0x42088a
  420d9d:	mov    eax,DWORD PTR [esp+0xc]
  420da1:	xor    ecx,DWORD PTR ds:0x42914f
  420da7:	mov    ecx,DWORD PTR [esp+0x20]
  420dab:	sbb    DWORD PTR ds:0x429197,0x5641
  420db5:	xor    eax,edi
  420db7:	sbb    DWORD PTR ds:0x4291ef,0x4291eb
  420dc1:	lea    eax,[eax+ecx*1+0x3272f3]
  420dc8:	inc    DWORD PTR ds:0x4291e7
  420dce:	push   eax
  420dcf:	add    DWORD PTR ds:0x4291b3,ebx
  420dd5:	mov    eax,DWORD PTR [esp+0x14]
  420dd9:	xor    eax,edi
  420ddb:	lea    eax,[ebp+eax*1+0x3272fb]
  420de2:	xor    DWORD PTR ds:0x429197,0x3901
  420dec:	push   eax
  420ded:	mov    DWORD PTR ds:0x429153,0x5a0a
  420df7:	mov    eax,ds:0x42830b
  420dfc:	xor    DWORD PTR ds:0x4291c3,0x2a62
  420e06:	push   DWORD PTR [eax+0x1bc]
  420e0c:	adc    DWORD PTR ds:0x429153,0x42915f
  420e16:	call   0x421b3f
  420e1b:	and    DWORD PTR ds:0x4291af,0x0
  420e25:	jmp    0x420e37
  420e2a:	mov    edx,DWORD PTR ds:0x4291af
  420e30:	inc    edx
  420e31:	mov    DWORD PTR ds:0x4291af,edx
  420e37:	cmp    DWORD PTR ds:0x4291af,0x15
  420e3e:	jae    0x420e7e
  420e44:	cmp    DWORD PTR ds:0x4291af,0xd
  420e4b:	jl     0x420e7e
  420e51:	jmp    0x420e5f
  420e56:	push   DWORD PTR [ebp-0x1c]
  420e59:	call   DWORD PTR ds:0x42a663
  420e5f:	cmp    DWORD PTR ds:0x4291af,0xc
  420e66:	jne    0x420e79
  420e6c:	mov    edx,DWORD PTR ds:0x4291af
  420e72:	inc    edx
  420e73:	mov    DWORD PTR ds:0x4291af,edx
  420e79:	jmp    0x420e2a
  420e7e:	mov    eax,DWORD PTR [esp+0xc]
  420e82:	mov    ecx,DWORD PTR [esp+0x20]
  420e86:	mov    edx,DWORD PTR ds:0x429167
  420e8c:	adc    DWORD PTR ds:0x4291b3,edx
  420e92:	xor    eax,edi
  420e94:	and    edx,DWORD PTR ds:0x4291b3
  420e9a:	lea    eax,[ecx+eax*1+0x3272f3]
  420ea1:	mov    ecx,DWORD PTR [esp+0xc]
  420ea5:	neg    edx
  420ea7:	mov    edx,DWORD PTR [esp+0xc]
  420eab:	or     DWORD PTR ds:0x42917b,0x429157
  420eb5:	xor    edx,edi
  420eb7:	or     DWORD PTR ds:0x4291c7,0x1707
  420ec1:	xor    ecx,edi
  420ec3:	xor    DWORD PTR ds:0x42916f,0x6f67
  420ecd:	add    ecx,edx
  420ecf:	mov    edx,DWORD PTR [esp+0xc]
  420ed3:	add    DWORD PTR ds:0x429193,0xde7
  420edd:	xor    edx,edi
  420edf:	mov    DWORD PTR ds:0x429197,0x79ec
  420ee9:	lea    ecx,[ecx+edx*1+0x9758d9]
  420ef0:	mov    DWORD PTR ds:0x42917b,0x463d
  420efa:	mov    DWORD PTR [esp+0x20],eax
  420efe:	cmp    eax,ecx
  420f00:	jbe    0x420cc7
  420f06:	xor    ecx,ecx
  420f08:	or     ecx,DWORD PTR ds:0x4291a3
  420f0e:	or     DWORD PTR ds:0x4291b3,ecx
  420f14:	mov    eax,DWORD PTR [ebp+0xc]
  420f17:	and    DWORD PTR ds:0x4291e3,0x0
  420f21:	mov    ecx,DWORD PTR ds:0x4291e3
  420f27:	inc    ecx
  420f28:	mov    DWORD PTR ds:0x4291e3,ecx
  420f2e:	cmp    DWORD PTR ds:0x4291e3,0x18
  420f35:	jge    0x420f62
  420f3b:	jmp    0x420f55
  420f40:	push   0x4291ab
  420f45:	push   0x4291db
  420f4a:	push   0x4566
  420f4f:	call   DWORD PTR ds:0x42a66b
  420f55:	cmp    DWORD PTR ds:0x4291e3,0x17
  420f5c:	jb     0x420f21
  420f62:	mov    ds:0x42818f,eax
  420f67:	mov    eax,DWORD PTR [ebp+0x10]
  420f6a:	mov    ds:0x4283eb,eax
  420f6f:	mov    DWORD PTR ds:0x4291af,0x18
  420f79:	cmp    DWORD PTR ds:0x4291af,0x0
  420f80:	je     0x420fd1
  420f86:	cmp    DWORD PTR ds:0x4291af,0x4
  420f8d:	ja     0x420fd1
  420f93:	jmp    0x420fa3
  420f98:	push   0x82c1
  420f9d:	call   DWORD PTR ds:0x42a633
  420fa3:	cmp    DWORD PTR ds:0x4291af,0x5
  420faa:	jne    0x420fbf
  420fb0:	xor    ecx,ecx
  420fb2:	or     ecx,DWORD PTR ds:0x4291af
  420fb8:	dec    ecx
  420fb9:	mov    DWORD PTR ds:0x4291af,ecx
  420fbf:	mov    ecx,DWORD PTR ds:0x4291af
  420fc5:	dec    ecx
  420fc6:	mov    DWORD PTR ds:0x4291af,ecx
  420fcc:	jmp    0x420f79
  420fd1:	mov    eax,ds:0x42818f
  420fd6:	movzx  ecx,BYTE PTR ds:0x429183
  420fdd:	adc    DWORD PTR ds:0x4291d7,ecx
  420fe3:	mov    ecx,DWORD PTR [esp+0x30]
  420fe7:	sub    DWORD PTR ds:0x4291ab,0x2768
  420ff1:	sub    eax,ebx
  420ff3:	and    DWORD PTR ds:0x42919f,0x51d9
  420ffd:	xor    eax,edi
  420fff:	mov    DWORD PTR [ecx],eax
  421001:	lea    eax,[esp+0x2c]
  421005:	mov    DWORD PTR [esp+0x6c],eax
  421009:	xor    DWORD PTR ds:0x4291cf,0x6aa
  421013:	lea    eax,[ebp+0x4]
  421016:	sub    DWORD PTR ds:0x42915b,0x4291af
  421020:	mov    DWORD PTR [esp+0x2c],eax
  421024:	lea    eax,[esp+0x78]
  421028:	sub    DWORD PTR ds:0x429153,0x6538
  421032:	push   eax
  421033:	add    DWORD PTR ds:0x4291a3,0x4291f3
  42103d:	push   0x428567
  421042:	call   DWORD PTR ds:0x42a64b
  421048:	mov    DWORD PTR ds:0x4291e3,0x1cd6
  421052:	cmp    eax,0xffffffff
  421055:	mov    DWORD PTR ds:0x4291b7,0x32c8
  42105f:	jne    0x42088a
  421065:	push   0xf
  421067:	lea    eax,[esp+0x44]
  42106b:	xor    DWORD PTR ds:0x429193,0x42919b
  421075:	push   eax
  421076:	push   0x4285bb
  42107b:	adc    DWORD PTR ds:0x429193,0x7895
  421085:	push   0x4285cf
  42108a:	push   0x4285ef
  42108f:	call   esi
  421091:	imul   eax,eax,0x300000
  421097:	cmp    eax,0x1b00000
  42109c:	jne    0x42088a
  4210a2:	lea    eax,[esp+0x1b8]
  4210a9:	push   eax
  4210aa:	push   0x42862b
  4210af:	sub    DWORD PTR ds:0x4291bf,0x42918b
  4210b9:	call   DWORD PTR ds:0x42a637
  4210bf:	mov    DWORD PTR ds:0x429187,0x3d95
  4210c9:	cmp    eax,0xffffffff
  4210cc:	mov    DWORD PTR ds:0x42917f,0x79ad
  4210d6:	jne    0x42088a
  4210dc:	lea    eax,[esp+0x78]
  4210e0:	add    DWORD PTR ds:0x42914f,0x6022
  4210ea:	push   eax
  4210eb:	neg    DWORD PTR ds:0x42917f
  4210f1:	push   0x428617
  4210f6:	add    DWORD PTR ds:0x42917b,0x4291e7
  421100:	call   DWORD PTR ds:0x42a64b
  421106:	mov    DWORD PTR ds:0x42916f,0x4f36
  421110:	cmp    eax,0xffffffff
  421113:	mov    DWORD PTR ds:0x429197,0x71f8
  42111d:	jne    0x42088a
  421123:	xor    DWORD PTR ds:0x4291b7,0x540c
  42112d:	push   0xf
  42112f:	or     DWORD PTR ds:0x42914b,0x42916b
  421139:	lea    eax,[esp+0x44]
  42113d:	and    DWORD PTR ds:0x4291ab,0x3361
  421147:	push   eax
  421148:	sub    DWORD PTR ds:0x4291bb,0x5c7b
  421152:	push   0x42866b
  421157:	adc    DWORD PTR ds:0x4291ab,0x4291cf
  421161:	push   0x42867f
  421166:	xor    DWORD PTR ds:0x429183,0x4291b7
  421170:	push   0x42869f
  421175:	or     DWORD PTR ds:0x4291af,0x4291cf
  42117f:	call   esi
  421181:	imul   eax,eax,0x300000
  421187:	mov    DWORD PTR ds:0x429157,0x112c
  421191:	cmp    eax,0x1b00000
  421196:	jne    0x42088a
  42119c:	or     DWORD PTR ds:0x42914f,0x1a1c
  4211a6:	lea    eax,[esp+0x1b8]
  4211ad:	push   eax
  4211ae:	sub    DWORD PTR ds:0x4291eb,0xb4e
  4211b8:	push   0x4286db
  4211bd:	not    DWORD PTR ds:0x429153
  4211c3:	call   DWORD PTR ds:0x42a637
  4211c9:	mov    DWORD PTR ds:0x4291d7,0x34b9
  4211d3:	cmp    eax,0xffffffff
  4211d6:	mov    DWORD PTR ds:0x4291bb,0x68d6
  4211e0:	jne    0x42088a
  4211e6:	lea    eax,[esp+0x78]
  4211ea:	push   eax
  4211eb:	sub    DWORD PTR ds:0x4291a7,0x429183
  4211f5:	push   0x4286c7
  4211fa:	sub    DWORD PTR ds:0x42919f,0xfe
  421204:	call   DWORD PTR ds:0x42a64b
  42120a:	mov    DWORD PTR ds:0x4291a3,0x162e
  421214:	cmp    eax,0xffffffff
  421217:	jne    0x42088a
  42121d:	add    DWORD PTR ds:0x42918f,0x39d
  421227:	push   0xf
  421229:	lea    eax,[esp+0x44]
  42122d:	push   eax
  42122e:	sbb    DWORD PTR ds:0x4291df,0x4c8c
  421238:	push   0x42871b
  42123d:	push   0x42872f
  421242:	push   0x42874f
  421247:	call   esi
  421249:	sub    DWORD PTR ds:0x42914f,0x429163
  421253:	imul   eax,eax,0x300000
  421259:	mov    DWORD PTR ds:0x42918b,0x5962
  421263:	cmp    eax,0x1b00000
  421268:	jne    0x42088a
  42126e:	add    DWORD PTR ds:0x4291a3,0x4291cb
  421278:	lea    eax,[esp+0x1b8]
  42127f:	or     DWORD PTR ds:0x4291ab,0x4619
  421289:	push   eax
  42128a:	push   0x42878b
  42128f:	and    DWORD PTR ds:0x42916f,0x4291ef
  421299:	call   DWORD PTR ds:0x42a637
  42129f:	mov    DWORD PTR ds:0x4291ef,0x2004
  4212a9:	cmp    eax,0xffffffff
  4212ac:	mov    DWORD PTR ds:0x42918b,0x62c6
  4212b6:	jne    0x42088a
  4212bc:	and    DWORD PTR ds:0x4291d3,0x5eb4
  4212c6:	lea    eax,[esp+0x78]
  4212ca:	adc    DWORD PTR ds:0x42917f,0x4918
  4212d4:	push   eax
  4212d5:	or     DWORD PTR ds:0x42919b,0x429153
  4212df:	push   0x428777
  4212e4:	sbb    DWORD PTR ds:0x429197,0x429157
  4212ee:	call   DWORD PTR ds:0x42a64b
  4212f4:	mov    DWORD PTR ds:0x42914f,0x13e7
  4212fe:	cmp    eax,0xffffffff
  421301:	mov    DWORD PTR ds:0x4291cf,0xa62
  42130b:	jne    0x42088a
  421311:	xor    DWORD PTR ds:0x42915b,0x4291bb
  42131b:	push   0xf
  42131d:	lea    eax,[esp+0x44]
  421321:	or     DWORD PTR ds:0x4291b3,0x2cef
  42132b:	push   eax
  42132c:	push   0x4287cb
  421331:	push   0x4287df
  421336:	sub    DWORD PTR ds:0x4291a3,0x42918f
  421340:	push   0x4287ff
  421345:	call   esi
  421347:	imul   eax,eax,0x300000
  42134d:	mov    DWORD PTR ds:0x429193,0x43ec
  421357:	cmp    eax,0x1b00000
  42135c:	mov    DWORD PTR ds:0x4291c7,0x18cb
  421366:	jne    0x42088a
  42136c:	add    DWORD PTR ds:0x4291af,0x5057
  421376:	lea    eax,[esp+0x1b8]
  42137d:	or     DWORD PTR ds:0x4291c3,0x48df
  421387:	push   eax
  421388:	and    DWORD PTR ds:0x4291e3,0x7c0c
  421392:	push   0x42883b
  421397:	and    DWORD PTR ds:0x4291f7,0x4291d7
  4213a1:	call   DWORD PTR ds:0x42a637
  4213a7:	cmp    eax,0xffffffff
  4213aa:	jne    0x42088a
  4213b0:	or     DWORD PTR ds:0x4291cb,0x5541
  4213ba:	lea    eax,[esp+0x78]
  4213be:	sub    DWORD PTR ds:0x4291f7,0x686a
  4213c8:	push   eax
  4213c9:	xor    DWORD PTR ds:0x4291ef,0x4291eb
  4213d3:	push   0x428827
  4213d8:	add    DWORD PTR ds:0x4291bb,0x4894
  4213e2:	call   DWORD PTR ds:0x42a64b
  4213e8:	mov    DWORD PTR ds:0x42914b,0x5d36
  4213f2:	cmp    eax,0xffffffff
  4213f5:	mov    DWORD PTR ds:0x42918b,0x63d2
  4213ff:	jne    0x42088a
  421405:	adc    DWORD PTR ds:0x4291d3,0x6d
  42140f:	push   0xf
  421411:	xor    DWORD PTR ds:0x4291df,0x4291b3
  42141b:	lea    eax,[esp+0x44]
  42141f:	xor    DWORD PTR ds:0x42914f,0x245a
  421429:	push   eax
  42142a:	adc    DWORD PTR ds:0x42915f,0x29d1
  421434:	push   0x42887b
  421439:	push   0x42888f
  42143e:	sbb    DWORD PTR ds:0x42914f,0x429163
  421448:	push   0x4288af
  42144d:	adc    DWORD PTR ds:0x42917f,0x4291a3
  421457:	call   esi
  421459:	imul   eax,eax,0x300000
  42145f:	cmp    eax,0x1b00000
  421464:	jne    0x42088a
  42146a:	mov    DWORD PTR ds:0x4291cf,0x5dc8
  421474:	lea    eax,[esp+0x1b8]
  42147b:	add    DWORD PTR ds:0x42919b,0x4291ab
  421485:	push   eax
  421486:	not    DWORD PTR ds:0x429153
  42148c:	push   0x4288eb
  421491:	call   DWORD PTR ds:0x42a637
  421497:	mov    DWORD PTR ds:0x4291e7,0x183e
  4214a1:	cmp    eax,0xffffffff
  4214a4:	jne    0x42088a
  4214aa:	lea    eax,[esp+0x78]
  4214ae:	xor    DWORD PTR ds:0x4291d7,0x57b8
  4214b8:	push   eax
  4214b9:	push   0x4288d7
  4214be:	add    DWORD PTR ds:0x4291af,0x1e81
  4214c8:	call   DWORD PTR ds:0x42a64b
  4214ce:	mov    DWORD PTR ds:0x4291c3,0x328a
  4214d8:	cmp    eax,0xffffffff
  4214db:	mov    DWORD PTR ds:0x4291f7,0x13f0
  4214e5:	jne    0x42088a
  4214eb:	push   0xf
  4214ed:	lea    eax,[esp+0x44]
  4214f1:	adc    DWORD PTR ds:0x4291c3,0x429173
  4214fb:	push   eax
  4214fc:	xor    DWORD PTR ds:0x4291cf,0x725b
  421506:	push   0x42892b
  42150b:	adc    DWORD PTR ds:0x4291bb,0x39d7
  421515:	push   0x42893f
  42151a:	xor    DWORD PTR ds:0x42918b,0x4291a7
  421524:	push   0x42895f
  421529:	call   esi
  42152b:	adc    DWORD PTR ds:0x4291ab,0x4291f7
  421535:	imul   eax,eax,0x300000
  42153b:	mov    DWORD PTR ds:0x4291cf,0x3d0e
  421545:	cmp    eax,0x1b00000
  42154a:	jne    0x42088a
  421550:	lea    eax,[esp+0x1b8]
  421557:	xor    DWORD PTR ds:0x429197,0x42919f
  421561:	push   eax
  421562:	push   0x42899b
  421567:	or     DWORD PTR ds:0x42915b,0x3d87
  421571:	call   DWORD PTR ds:0x42a637
  421577:	mov    DWORD PTR ds:0x4291bf,0x3132
  421581:	cmp    eax,0xffffffff
  421584:	jne    0x42088a
  42158a:	add    DWORD PTR ds:0x4291df,0x6129
  421594:	lea    eax,[esp+0x78]
  421598:	mov    DWORD PTR ds:0x42915b,0x7683
  4215a2:	push   eax
  4215a3:	push   0x428987
  4215a8:	adc    DWORD PTR ds:0x4291d3,0x4f30
  4215b2:	call   DWORD PTR ds:0x42a64b
  4215b8:	mov    DWORD PTR ds:0x42918f,0x2474
  4215c2:	cmp    eax,0xffffffff
  4215c5:	jne    0x42088a
  4215cb:	and    DWORD PTR ds:0x4291c3,0x7c44
  4215d5:	push   0xf
  4215d7:	lea    eax,[esp+0x44]
  4215db:	push   eax
  4215dc:	push   0x4289db
  4215e1:	sub    DWORD PTR ds:0x42914f,0x6ca1
  4215eb:	push   0x4289ef
  4215f0:	sbb    DWORD PTR ds:0x42916f,0x4291cf
  4215fa:	push   0x428a0f
  4215ff:	call   esi
  421601:	xor    DWORD PTR ds:0x4291eb,0x4291a3
  42160b:	imul   eax,eax,0x300000
  421611:	mov    DWORD PTR ds:0x4291a7,0x6fd3
  42161b:	cmp    eax,0x1b00000
  421620:	mov    DWORD PTR ds:0x4291f7,0x26fc
  42162a:	jne    0x42088a
  421630:	lea    eax,[esp+0x1b8]
  421637:	push   eax
  421638:	push   0x428a4b
  42163d:	call   DWORD PTR ds:0x42a637
  421643:	cmp    eax,0xffffffff
  421646:	jne    0x42088a
  42164c:	lea    eax,[esp+0x78]
  421650:	push   eax
  421651:	push   0x428a37
  421656:	call   DWORD PTR ds:0x42a64b
  42165c:	cmp    eax,0xffffffff
  42165f:	jne    0x42088a
  421665:	push   0xf
  421667:	lea    eax,[esp+0x44]
  42166b:	push   eax
  42166c:	push   0x428a8b
  421671:	push   0x428a9f
  421676:	push   0x428abf
  42167b:	call   esi
  42167d:	imul   eax,eax,0x300000
  421683:	cmp    eax,0x1b00000
  421688:	jne    0x42088a
  42168e:	lea    eax,[esp+0x1b8]
  421695:	push   eax
  421696:	push   0x428afb
  42169b:	call   DWORD PTR ds:0x42a637
  4216a1:	cmp    eax,0xffffffff
  4216a4:	jne    0x42088a
  4216aa:	lea    eax,[esp+0x78]
  4216ae:	push   eax
  4216af:	push   0x428ae7
  4216b4:	call   DWORD PTR ds:0x42a64b
  4216ba:	cmp    eax,0xffffffff
  4216bd:	jne    0x42088a
  4216c3:	push   0xf
  4216c5:	lea    eax,[esp+0x44]
  4216c9:	push   eax
  4216ca:	push   0x428b3b
  4216cf:	push   0x428b4f
  4216d4:	push   0x428b6f
  4216d9:	call   esi
  4216db:	imul   eax,eax,0x300000
  4216e1:	cmp    eax,0x1b00000
  4216e6:	jne    0x42088a
  4216ec:	lea    eax,[esp+0x1b8]
  4216f3:	push   eax
  4216f4:	push   0x428bab
  4216f9:	call   DWORD PTR ds:0x42a637
  4216ff:	cmp    eax,0xffffffff
  421702:	jne    0x42088a
  421708:	lea    eax,[esp+0x78]
  42170c:	push   eax
  42170d:	push   0x428b97
  421712:	call   DWORD PTR ds:0x42a64b
  421718:	cmp    eax,0xffffffff
  42171b:	jne    0x42088a
  421721:	push   0xf
  421723:	lea    eax,[esp+0x44]
  421727:	push   eax
  421728:	push   0x428beb
  42172d:	push   0x428bff
  421732:	push   0x428c1f
  421737:	call   esi
  421739:	imul   eax,eax,0x300000
  42173f:	cmp    eax,0x1b00000
  421744:	jne    0x42088a
  42174a:	lea    eax,[esp+0x1b8]
  421751:	push   eax
  421752:	push   0x428c5b
  421757:	call   DWORD PTR ds:0x42a637
  42175d:	cmp    eax,0xffffffff
  421760:	jne    0x42088a
  421766:	lea    eax,[esp+0x78]
  42176a:	push   eax
  42176b:	push   0x428c47
  421770:	call   DWORD PTR ds:0x42a64b
  421776:	cmp    eax,0xffffffff
  421779:	jne    0x42088a
  42177f:	push   0xf
  421781:	lea    eax,[esp+0x44]
  421785:	push   eax
  421786:	push   0x428c9b
  42178b:	push   0x428caf
  421790:	push   0x428ccf
  421795:	call   esi
  421797:	imul   eax,eax,0x300000
  42179d:	cmp    eax,0x1b00000
  4217a2:	jne    0x42088a
  4217a8:	lea    eax,[esp+0x1b8]
  4217af:	push   eax
  4217b0:	push   0x428d0b
  4217b5:	call   DWORD PTR ds:0x42a637
  4217bb:	cmp    eax,0xffffffff
  4217be:	jne    0x42088a
  4217c4:	lea    eax,[esp+0x78]
  4217c8:	push   eax
  4217c9:	push   0x428cf7
  4217ce:	call   DWORD PTR ds:0x42a64b
  4217d4:	cmp    eax,0xffffffff
  4217d7:	jne    0x42088a
  4217dd:	push   0xf
  4217df:	lea    eax,[esp+0x44]
  4217e3:	push   eax
  4217e4:	push   0x428d4b
  4217e9:	push   0x428d5f
  4217ee:	push   0x428d7f
  4217f3:	call   esi
  4217f5:	imul   eax,eax,0x300000
  4217fb:	cmp    eax,0x1b00000
  421800:	jne    0x42088a
  421806:	lea    eax,[esp+0x1b8]
  42180d:	push   eax
  42180e:	push   0x428dbb
  421813:	call   DWORD PTR ds:0x42a637
  421819:	cmp    eax,0xffffffff
  42181c:	jne    0x42088a
  421822:	mov    eax,DWORD PTR [esp+0x3c]
  421826:	cmp    eax,0xf89c85a2
  42182b:	je     0x42188a
  421831:	mov    eax,DWORD PTR [esp+0x18]
  421835:	mov    ecx,DWORD PTR [esp+0x38]
  421839:	xor    eax,edi
  42183b:	add    eax,ebx
  42183d:	cmp    eax,ecx
  42183f:	je     0x42188a
  421845:	mov    eax,ds:0x42830b
  42184a:	mov    eax,DWORD PTR [eax+0x194]
  421850:	mov    ecx,DWORD PTR [eax]
  421852:	mov    eax,DWORD PTR [ecx+0x3c]
  421855:	push   DWORD PTR ds:0x4283eb
  42185b:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  42185f:	push   DWORD PTR ds:0x42818f
  421865:	add    eax,ecx
  421867:	mov    ecx,DWORD PTR ds:0x42830b
  42186d:	mov    ecx,DWORD PTR [ecx+0x194]
  421873:	push   DWORD PTR [ecx]
  421875:	call   eax
  421877:	mov    ecx,DWORD PTR ds:0x42830b
  42187d:	mov    ecx,DWORD PTR [ecx+0x1cc]
  421883:	mov    DWORD PTR [ecx],eax
  421885:	jmp    0x421ab7
  42188a:	mov    eax,DWORD PTR [esp+0x18]
  42188e:	mov    ecx,DWORD PTR [esp+0x60]
  421892:	xor    eax,edi
  421894:	add    eax,ebx
  421896:	cmp    eax,ecx
  421898:	jne    0x421901
  42189e:	mov    eax,DWORD PTR [esp+0x18]
  4218a2:	mov    ecx,DWORD PTR ds:0x42830b
  4218a8:	mov    ecx,DWORD PTR [ecx+0x198]
  4218ae:	xor    eax,edi
  4218b0:	add    eax,ebx
  4218b2:	cmp    eax,DWORD PTR [ecx]
  4218b4:	jne    0x4218da
  4218ba:	mov    eax,DWORD PTR [esp+0x18]
  4218be:	push   0xf89c85a1
  4218c3:	xor    eax,edi
  4218c5:	add    eax,ebx
  4218c7:	push   eax
  4218c8:	push   0xf89c85bd
  4218cd:	push   DWORD PTR [esp+0x18]
  4218d1:	push   DWORD PTR [esp+0x28]
  4218d5:	call   0x41b9fd
  4218da:	push   DWORD PTR [esp+0xc]
  4218de:	push   DWORD PTR [esp+0x1c]
  4218e2:	call   0x401000
  4218e7:	mov    eax,DWORD PTR [esp+0x18]
  4218eb:	xor    eax,edi
  4218ed:	add    eax,ebx
  4218ef:	mov    ds:0x428397,eax
  4218f4:	mov    eax,DWORD PTR [esp+0x18]
  4218f8:	xor    eax,edi
  4218fa:	add    eax,ebx
  4218fc:	mov    ds:0x42838f,eax
  421901:	mov    eax,DWORD PTR [esp+0x2c]
  421905:	test   eax,eax
  421907:	je     0x421ab7
  42190d:	lea    eax,[esp+0x78]
  421911:	mov    DWORD PTR [esp+0x64],0xf152c3a
  421919:	push   eax
  42191a:	mov    DWORD PTR [esp+0x78],0x712ed2f
  421922:	mov    DWORD PTR [esp+0x74],0x373fc09
  42192a:	push   0x428da7
  42192f:	mov    DWORD PTR [esp+0x70],0x72670ad9
  421937:	call   DWORD PTR ds:0x42a64b
  42193d:	cmp    eax,0xffffffff
  421940:	jne    0x42088a
  421946:	push   0xf
  421948:	lea    eax,[esp+0x44]
  42194c:	push   eax
  42194d:	push   0x428dfb
  421952:	push   0x428e0f
  421957:	push   0x428e2f
  42195c:	call   esi
  42195e:	imul   eax,eax,0x300000
  421964:	cmp    eax,0x1b00000
  421969:	jne    0x42088a
  42196f:	lea    eax,[esp+0x1b8]
  421976:	push   eax
  421977:	push   0x428e6b
  42197c:	call   DWORD PTR ds:0x42a637
  421982:	cmp    eax,0xffffffff
  421985:	jne    0x42088a
  42198b:	call   0x41b69e
  421990:	mov    eax,DWORD PTR [esp+0x34]
  421994:	mov    eax,DWORD PTR [esp+0xc]
  421998:	mov    DWORD PTR [esp+0x30],eax
  42199c:	mov    eax,DWORD PTR [esp+0x18]
  4219a0:	mov    DWORD PTR [esp+0xc],eax
  4219a4:	mov    eax,eax
  4219a6:	mov    eax,ds:0x42830b
  4219ab:	mov    ecx,DWORD PTR [eax+0x1c0]
  4219b1:	mov    edx,DWORD PTR [ecx]
  4219b3:	and    DWORD PTR [esp+0x14],0x0
  4219b8:	mov    esi,0xfabdbed6
  4219bd:	add    edx,esi
  4219bf:	adc    DWORD PTR [esp+0x14],0xffffffff
  4219c4:	mov    ecx,0x8a29a13f
  4219c9:	xor    edx,ecx
  4219cb:	mov    DWORD PTR [esp+0x20],edx
  4219cf:	mov    edx,DWORD PTR [esp+0x14]
  4219d3:	xor    edx,0x0
  4219d6:	cmp    DWORD PTR [esp+0x20],0x70941fe8
  4219de:	mov    DWORD PTR [esp+0x24],edx
  4219e2:	jne    0x4219f1
  4219e8:	cmp    edx,0xffffffff
  4219eb:	je     0x421a5a
  4219f1:	mov    eax,DWORD PTR [eax+0x1c8]
  4219f7:	mov    eax,DWORD PTR [eax]
  4219f9:	cdq    
  4219fa:	add    eax,esi
  4219fc:	adc    edx,0xffffffff
  4219ff:	and    DWORD PTR [esp+0x14],0x0
  421a04:	xor    edx,0x0
  421a07:	mov    DWORD PTR [esp+0x1c],edx
  421a0b:	mov    edx,DWORD PTR [esp+0xc]
  421a0f:	mov    DWORD PTR [esp+0x10],edx
  421a13:	xor    eax,ecx
  421a15:	add    DWORD PTR [esp+0x10],esi
  421a19:	mov    edx,DWORD PTR [esp+0x10]
  421a1d:	adc    DWORD PTR [esp+0x14],0xffffffff
  421a22:	xor    edx,ecx
  421a24:	mov    DWORD PTR [esp+0x20],edx
  421a28:	mov    edx,DWORD PTR [esp+0x14]
  421a2c:	xor    edx,0x0
  421a2f:	mov    DWORD PTR [esp+0x24],edx
  421a33:	cmp    DWORD PTR [esp+0x20],eax
  421a37:	jne    0x421a49
  421a3d:	mov    eax,DWORD PTR [esp+0x1c]
  421a41:	cmp    edx,eax
  421a43:	je     0x421a5a
  421a49:	mov    eax,DWORD PTR [esp+0xc]
  421a4d:	add    eax,DWORD PTR [esp+0x30]
  421a51:	mov    DWORD PTR [esp+0xc],eax
  421a55:	jmp    0x421ab7
  421a5a:	mov    eax,ds:0x42838f
  421a5f:	mov    edx,DWORD PTR ds:0x428397
  421a65:	xor    eax,edx
  421a67:	mov    ds:0x42838f,eax
  421a6c:	mov    edx,DWORD PTR ds:0x42838f
  421a72:	mov    eax,DWORD PTR [esp+0x2c]
  421a76:	add    DWORD PTR [eax],edx
  421a78:	mov    edx,DWORD PTR [esp+0xc]
  421a7c:	mov    eax,ds:0x42838f
  421a81:	xor    edx,edi
  421a83:	add    edx,ebx
  421a85:	xor    ebx,ebx
  421a87:	add    edx,esi
  421a89:	adc    ebx,0xffffffff
  421a8c:	xor    edi,edi
  421a8e:	xor    edx,ecx
  421a90:	xor    ebx,0x0
  421a93:	add    eax,esi
  421a95:	adc    edi,0xffffffff
  421a98:	xor    eax,ecx
  421a9a:	xor    edi,0x0
  421a9d:	cmp    eax,edx
  421a9f:	jne    0x421ab7
  421aa5:	cmp    edi,ebx
  421aa7:	jne    0x421ab7
  421aad:	mov    eax,ds:0x42838f
  421ab2:	mov    ds:0x428397,eax
  421ab7:	lea    eax,[esp+0x78]
  421abb:	push   eax
  421abc:	push   0x428e57
  421ac1:	call   DWORD PTR ds:0x42a64b
  421ac7:	cmp    eax,0xffffffff
  421aca:	jne    0x42088a
  421ad0:	push   0xf
  421ad2:	lea    eax,[esp+0x44]
  421ad6:	push   eax
  421ad7:	push   0x428eab
  421adc:	push   0x428ebf
  421ae1:	push   0x428edf
  421ae6:	call   DWORD PTR ds:0x42a667
  421aec:	imul   eax,eax,0x300000
  421af2:	cmp    eax,0x1b00000
  421af7:	jne    0x42088a
  421afd:	lea    eax,[esp+0x1b8]
  421b04:	push   eax
  421b05:	push   0x428f0b
  421b0a:	call   DWORD PTR ds:0x42a637
  421b10:	cmp    eax,0xffffffff
  421b13:	jne    0x42088a
  421b19:	mov    eax,ds:0x42830b
  421b1e:	push   0x4
  421b20:	add    eax,0x1cc
  421b25:	push   eax
  421b26:	lea    eax,[esp+0x3c]
  421b2a:	push   eax
  421b2b:	call   0x421b3f
  421b30:	mov    eax,DWORD PTR [esp+0x34]
  421b34:	mov    eax,DWORD PTR [eax]
  421b36:	pop    edi
  421b37:	pop    esi
  421b38:	pop    ebx
  421b39:	mov    esp,ebp
  421b3b:	pop    ebp
  421b3c:	ret    0xc
  421b3f:	push   ebp
  421b40:	mov    ebp,esp
  421b42:	sub    esp,0x10
  421b45:	sub    DWORD PTR ds:0x429153,ebx
  421b4b:	mov    eax,0xf89c85a1
  421b50:	and    ecx,DWORD PTR ds:0x42914b
  421b56:	mov    DWORD PTR [ebp-0x4],eax
  421b59:	and    DWORD PTR ds:0x429167,0x0
  421b63:	jmp    0x421b75
  421b68:	mov    edx,DWORD PTR ds:0x429167
  421b6e:	inc    edx
  421b6f:	mov    DWORD PTR ds:0x429167,edx
  421b75:	cmp    DWORD PTR ds:0x429167,0x1c
  421b7c:	jae    0x421bcb
  421b82:	cmp    DWORD PTR ds:0x429167,0xc
  421b89:	jge    0x421bcb
  421b8f:	jmp    0x421bac
  421b94:	push   DWORD PTR [ebp-0x28]
  421b97:	push   0x428152
  421b9c:	push   0x42810e
  421ba1:	push   0x400000
  421ba6:	call   DWORD PTR ds:0x42a63b
  421bac:	cmp    DWORD PTR ds:0x429167,0xb
  421bb3:	jne    0x421bc6
  421bb9:	mov    edx,DWORD PTR ds:0x429167
  421bbf:	inc    edx
  421bc0:	mov    DWORD PTR ds:0x429167,edx
  421bc6:	jmp    0x421b68
  421bcb:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  421bd2:	or     edx,0x5b7d
  421bd8:	mov    ecx,DWORD PTR [ebp-0x4]
  421bdb:	push   esi
  421bdc:	mov    DWORD PTR ds:0x42918b,0x1a
  421be6:	cmp    DWORD PTR ds:0x42918b,0x0
  421bed:	je     0x421c25
  421bf3:	cmp    DWORD PTR ds:0x42918b,0x26
  421bfa:	ja     0x421c25
  421c00:	jmp    0x421c13
  421c05:	push   0x4386
  421c0a:	push   DWORD PTR [ebp-0x14]
  421c0d:	call   DWORD PTR ds:0x42a63f
  421c13:	mov    edx,DWORD PTR ds:0x42918b
  421c19:	dec    edx
  421c1a:	mov    DWORD PTR ds:0x42918b,edx
  421c20:	jmp    0x421be6
  421c25:	mov    edx,0x75108ac
  421c2a:	xor    ecx,edx
  421c2c:	mov    esi,0x3272f3
  421c31:	push   edi
  421c32:	mov    edi,DWORD PTR [ebp+0x10]
  421c35:	add    ecx,esi
  421c37:	cmp    ecx,edi
  421c39:	mov    DWORD PTR ds:0x42916f,0x60ec
  421c43:	je     0x42414b
  421c49:	movzx  ecx,WORD PTR ds:0x4291f7
  421c50:	adc    DWORD PTR ds:0x4291cf,ecx
  421c56:	mov    ecx,DWORD PTR [ebp-0x4]
  421c59:	mov    edi,DWORD PTR [ebp+0x10]
  421c5c:	inc    DWORD PTR ds:0x4291d3
  421c62:	xor    eax,eax
  421c64:	and    DWORD PTR ds:0x4291b7,0x2b27
  421c6e:	xor    ecx,edx
  421c70:	add    ecx,esi
  421c72:	add    DWORD PTR ds:0x42914b,0x714
  421c7c:	add    edi,0xfabdbed6
  421c82:	mov    DWORD PTR ds:0x429173,0x79de
  421c8c:	adc    eax,0xffffffff
  421c8f:	or     DWORD PTR ds:0x4291b3,0x42917f
  421c99:	xor    eax,0x0
  421c9c:	adc    DWORD PTR ds:0x4291e7,0x4ab7
  421ca6:	mov    DWORD PTR [ebp-0xc],eax
  421ca9:	mov    DWORD PTR ds:0x42914b,0x1e
  421cb3:	cmp    DWORD PTR ds:0x42914b,0x0
  421cba:	je     0x421d0b
  421cc0:	cmp    DWORD PTR ds:0x42914b,0x8
  421cc7:	jge    0x421d0b
  421ccd:	jmp    0x421cdd
  421cd2:	push   0x4291eb
  421cd7:	call   DWORD PTR ds:0x42a643
  421cdd:	cmp    DWORD PTR ds:0x42914b,0x9
  421ce4:	jne    0x421cf8
  421cea:	xor    eax,eax
  421cec:	add    eax,DWORD PTR ds:0x42914b
  421cf2:	dec    eax
  421cf3:	mov    ds:0x42914b,eax
  421cf8:	xor    eax,eax
  421cfa:	xor    eax,DWORD PTR ds:0x42914b
  421d00:	dec    eax
  421d01:	mov    ds:0x42914b,eax
  421d06:	jmp    0x421cb3
  421d0b:	push   ebx
  421d0c:	xor    ebx,ebx
  421d0e:	xor    edi,0x8a29a13f
  421d14:	mov    eax,ecx
  421d16:	add    eax,0xfabdbed6
  421d1b:	adc    ebx,0xffffffff
  421d1e:	xor    eax,0x8a29a13f
  421d23:	xor    ebx,0x0
  421d26:	cmp    eax,edi
  421d28:	jne    0x421d41
  421d2e:	cmp    ebx,DWORD PTR [ebp-0xc]
  421d31:	je     0x424145
  421d37:	jmp    0x421d41
  421d3c:	mov    esi,0x3272f3
  421d41:	mov    eax,DWORD PTR [ebp-0x4]
  421d44:	mov    edi,DWORD PTR [ebp-0x8]
  421d47:	xor    edi,edx
  421d49:	add    edi,esi
  421d4b:	mov    esi,DWORD PTR [ebp+0x8]
  421d4e:	imul   edi,ecx
  421d51:	mov    ebx,DWORD PTR [ebp+0xc]
  421d54:	xor    eax,edx
  421d56:	add    eax,ecx
  421d58:	mov    al,BYTE PTR [ebx+eax*1+0x3272f3]
  421d5f:	mov    BYTE PTR [edi+esi*1],al
  421d62:	mov    eax,DWORD PTR [ebp-0x8]
  421d65:	mov    esi,DWORD PTR [ebp+0x10]
  421d68:	xor    eax,edx
  421d6a:	xor    ebx,ebx
  421d6c:	add    esi,0xfabdbed6
  421d72:	adc    ebx,0xffffffff
  421d75:	lea    ecx,[ecx+eax*1+0x3272f3]
  421d7c:	xor    edi,edi
  421d7e:	xor    esi,0x8a29a13f
  421d84:	xor    ebx,0x0
  421d87:	mov    eax,ecx
  421d89:	add    eax,0xfabdbed6
  421d8e:	adc    edi,0xffffffff
  421d91:	xor    eax,0x8a29a13f
  421d96:	xor    edi,0x0
  421d99:	cmp    eax,esi
  421d9b:	jne    0x421d3c
  421da1:	cmp    edi,ebx
  421da3:	jne    0x421d3c
  421da9:	jmp    0x424145
  421dae:	sbb    ah,bl
  421db0:	cmp    ch,BYTE PTR [edi-0x46]
  421db3:	xchg   BYTE PTR [esi],al
  421db5:	xchg   BYTE PTR [edx-0x68],bl
  421db8:	dec    esi
  421db9:	push   esp
  421dba:	(bad)
  421dbd:	adc    eax,0x8382b16f
  421dc2:	add    BYTE PTR [ebx+eax*4-0x7d],bl
  421dc6:	sbb    DWORD PTR [ebx-0x55f68f0d],0xffffffee
  421dcd:	je     0x421e3c
  421dcf:	jns    0x421e0e
  421dd1:	jmp    0x421d69
  421dd3:	nop
  421dd4:	into   
  421dd5:	scas   al,BYTE PTR es:[edi]
  421dd6:	ds ss in al,dx
  421dd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421dda:	cmp    DWORD PTR [edi],0xebf0aa13
  421de0:	push   cs
  421de1:	mov    al,0x8f
  421de3:	test   al,0xc6
  421de5:	sbb    dh,BYTE PTR [esi-0x5a4adc0e]
  421deb:	clc    
  421dec:	arpl   WORD PTR ds:0xb0cbe0db,bp
  421df2:	les    ebx,FWORD PTR [ebx+0x57]
  421df5:	stos   DWORD PTR es:[edi],eax
  421df6:	popa   
  421df7:	jmp    0x554d:0xd3d8428f
  421dfe:	lods   al,BYTE PTR ds:[esi]
  421dff:	rcl    DWORD PTR [eax-0x24416bf5],cl
  421e05:	xchg   ebp,eax
  421e06:	leave  
  421e07:	and    DWORD PTR [ebp-0xa],eax
  421e0a:	mul    DWORD PTR [eax-0x32]
  421e0d:	push   eax
  421e0e:	sub    BYTE PTR [eax+0x56877447],ah
  421e14:	xchg   edi,eax
  421e15:	push   ss
  421e16:	(bad)
  421e1c:	and    dh,BYTE PTR [edi-0x779f381f]
  421e22:	stos   DWORD PTR es:[edi],eax
  421e23:	cwde   
  421e24:	pop    ss
  421e25:	mov    eax,ds:0xbcb1d464
  421e2a:	pusha  
  421e2b:	push   es
  421e2c:	jecxz  0x421dff
  421e2e:	in     al,0xed
  421e30:	adc    eax,0x906db5a3
  421e35:	mov    esp,0xf31c155
  421e3a:	xchg   ecx,eax
  421e3b:	mov    ebx,0x60eb4ebd
  421e40:	pop    eax
  421e41:	sub    al,BYTE PTR [ecx-0x7b997b0b]
  421e47:	adc    DWORD PTR [edi+0x6f],esp
  421e4a:	xchg   esp,eax
  421e4b:	add    eax,0x30af773a
  421e50:	inc    ebx
  421e51:	inc    edx
  421e52:	test   BYTE PTR [edi],dl
  421e54:	jmp    0x421ea2
  421e56:	je     0x421ddd
  421e58:	dec    edx
  421e59:	(bad)  
  421e5b:	sbb    bh,ah
  421e5d:	ror    DWORD PTR [edi+ebp*4+0x49],1
  421e61:	jne    0x421ec6
  421e63:	add    eax,0xd185b8ad
  421e68:	jnp    0x421e3e
  421e6a:	enter  0x9593,0x19
  421e6e:	pop    edi
  421e6f:	mov    edi,0xa406d4de
  421e74:	ror    edx,0x87
  421e77:	push   es
  421e78:	mov    cl,0x3d
  421e7a:	(bad)  
  421e7b:	out    dx,eax
  421e7c:	int    0x98
  421e7e:	icebp  
  421e7f:	rol    esi,0x3f
  421e82:	inc    ecx
  421e83:	sbb    esp,DWORD PTR [ebp-0x75a1432]
  421e89:	sub    BYTE PTR [edx],dh
  421e8b:	loopne 0x421e70
  421e8d:	xchg   esp,eax
  421e8e:	dec    edi
  421e8f:	iret   
  421e90:	mov    WORD PTR [edi-0x35d1fd44],?
  421e96:	cmp    ebx,DWORD PTR [ebx+0x63b743d4]
  421e9c:	(bad)  
  421e9d:	mov    al,0x91
  421e9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ea0:	push   ecx
  421ea1:	sbb    eax,0x7e13cea6
  421ea6:	mov    esp,0x38ac0226
  421eab:	jp     0x421e7d
  421ead:	pop    edx
  421eae:	arpl   WORD PTR [edi],bp
  421eb0:	mov    ebx,0xb22cb8fe
  421eb5:	test   eax,0x760ad219
  421eba:	pop    edi
  421ebb:	lods   eax,DWORD PTR ds:[esi]
  421ebc:	test   BYTE PTR [ecx+0x69],bl
  421ebf:	cmp    DWORD PTR [ebp+0x2a],edx
  421ec2:	iret   
  421ec3:	cmp    al,0x9b
  421ec5:	aas    
  421ec6:	inc    esi
  421ec7:	push   ds
  421ec8:	push   eax
  421ec9:	outs   dx,DWORD PTR ds:[esi]
  421eca:	mov    edi,0x93f9a448
  421ecf:	jno    0x421ecb
  421ed1:	jnp    0x421ee2
  421ed3:	and    eax,0x9316338c
  421ed8:	addr16 lock mov esi,0xd86e5b87
  421edf:	push   ecx
  421ee0:	jo     0x421f4c
  421ee2:	inc    ebx
  421ee3:	dec    edx
  421ee4:	mov    esi,0x13f634f7
  421ee9:	fdivr  DWORD PTR [ecx]
  421eeb:	mov    edx,0x284a8805
  421ef0:	mov    WORD PTR [edx+ecx*2+0x64b55812],?
  421ef7:	jns    0x421f0e
  421ef9:	push   ebx
  421efa:	xchg   ecx,eax
  421efb:	xchg   DWORD PTR [eax-0x56],ebp
  421efe:	jae    0x244403d1
  421f04:	cmp    BYTE PTR ss:[esi+eax*8],dh
  421f08:	das    
  421f09:	pop    ds
  421f0a:	lahf   
  421f0b:	mov    al,ds:0xfc03e17c
  421f10:	cwde   
  421f11:	icebp  
  421f12:	gs loop 0x421f5f
  421f15:	adc    edi,esp
  421f17:	cs mov al,0xd8
  421f1a:	retf   0xeb3c
  421f1d:	arpl   WORD PTR [esi+0x5192d734],dx
  421f23:	iret   
  421f24:	stos   DWORD PTR es:[edi],eax
  421f25:	sub    eax,0xb0086943
  421f2a:	cmp    eax,0x89f84b3d
  421f2f:	les    ecx,FWORD PTR [edx-0x77]
  421f32:	mov    bh,0x33
  421f34:	add    ebp,DWORD PTR [esi]
  421f36:	and    al,0xb2
  421f38:	jns    0x421f6b
  421f3a:	ret    0x56bb
  421f3d:	dec    esi
  421f3e:	sbb    al,BYTE PTR [ebx+0x699a605b]
  421f44:	or     edx,esp
  421f46:	aas    
  421f47:	cmp    edx,ecx
  421f49:	xchg   DWORD PTR [ebp+edx*8-0x79],esi
  421f4d:	icebp  
  421f4e:	dec    edx
  421f4f:	retf   0x255b
  421f52:	call   0x4d72b19a
  421f57:	aaa    
  421f58:	js     0x421f5a
  421f5a:	xor    ecx,DWORD PTR [eax]
  421f5c:	add    esi,0x63
  421f5f:	jne    0x421fda
  421f61:	icebp  
  421f62:	pop    edx
  421f63:	inc    edx
  421f64:	jge    0x421f22
  421f66:	(bad)  
  421f67:	mov    cl,0x7
  421f69:	aad    0x2
  421f6b:	test   al,0x67
  421f6d:	arpl   bp,si
  421f6f:	repnz arpl WORD PTR [esi-0x52],dx
  421f73:	mov    eax,0x1062e95e
  421f78:	sbb    esi,esi
  421f7a:	pop    eax
  421f7b:	sbb    BYTE PTR [ecx-0x3cadfa83],bl
  421f81:	mov    ebp,0xd45e3f4a
  421f86:	stc    
  421f87:	fidiv  DWORD PTR [ebp-0x6d]
  421f8a:	enter  0xcb0a,0xcb
  421f8e:	sub    dl,BYTE PTR ds:0x4bb0f99e
  421f94:	jmp    0x421fbf
  421f96:	ror    bh,1
  421f98:	and    cl,BYTE PTR [ecx]
  421f9a:	sbb    eax,0xe9d41161
  421f9f:	jne    0x421fa8
  421fa1:	pop    ss
  421fa2:	push   eax
  421fa3:	loopne 0x421f68
  421fa5:	int    0x17
  421fa7:	adc    ecx,DWORD PTR [edx-0x76830adb]
  421fad:	fwait
  421fae:	aaa    
  421faf:	adc    eax,0xadc5810e
  421fb4:	mov    esi,0x2a6ad868
  421fb9:	push   0xc73b378d
  421fbe:	pop    ebp
  421fbf:	icebp  
  421fc0:	and    al,0xba
  421fc2:	dec    ebx
  421fc3:	inc    ecx
  421fc4:	push   es
  421fc5:	jecxz  0x421fad
  421fc7:	and    DWORD PTR [ecx],ebp
  421fc9:	stos   DWORD PTR es:[edi],eax
  421fca:	test   DWORD PTR [eax],esp
  421fcc:	adc    al,0x1d
  421fce:	jo     0x42201e
  421fd0:	push   ecx
  421fd1:	mov    ax,0xbf4b
  421fd5:	pop    ebx
  421fd6:	dec    ebx
  421fd7:	jno    0x421f88
  421fd9:	push   ecx
  421fda:	xchg   edi,eax
  421fdb:	or     ebx,DWORD PTR [esp+eax*1+0x51ef4ddd]
  421fe2:	push   es
  421fe3:	int3   
  421fe4:	add    BYTE PTR [edx+0x564de92e],0x8d
  421feb:	add    eax,0x284421e
  421ff0:	clc    
  421ff1:	loope  0x421fb5
  421ff3:	fs fs adc al,0x35
  421ff7:	shl    DWORD PTR [ecx+0x58bc5aec],0x16
  421ffe:	jne    0x421f91
  422000:	inc    eax
  422001:	sub    bl,ch
  422003:	mov    ss,eax
  422005:	inc    ecx
  422006:	mov    eax,0x7c1e9f92
  42200b:	stc    
  42200c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42200d:	repnz test BYTE PTR ds:0x5621a985,ah
  422014:	or     BYTE PTR [edi-0x62],dl
  422017:	mov    ?,WORD PTR [ebp+0x34]
  42201a:	shl    BYTE PTR [ebp-0x1f39605d],0xb8
  422021:	jae    0x422053
  422023:	inc    edi
  422024:	pop    ecx
  422025:	clc    
  422026:	(bad)  
  422027:	call   0xf770:0x767cdf17
  42202e:	pop    ebx
  42202f:	in     eax,dx
  422030:	mov    al,ds:0x6571de43
  422035:	ret    
  422036:	aas    
  422037:	test   esp,esp
  422039:	out    0xb3,eax
  42203b:	and    eax,0x5d097350
  422040:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422041:	xor    dh,BYTE PTR [eax]
  422043:	(bad)  
  422044:	pusha  
  422045:	mov    al,ds:0xdb098df6
  42204a:	pop    ds
  42204b:	inc    ecx
  42204c:	popa   
  42204d:	dec    ebp
  42204e:	xchg   edi,eax
  42204f:	loop   0x421fde
  422051:	cmp    DWORD PTR [eax+0x6f14102a],esi
  422057:	push   eax
  422058:	xor    DWORD PTR [ebx],ebp
  42205a:	aam    0xf
  42205c:	lods   al,BYTE PTR ds:[esi]
  42205d:	test   eax,0x4ddc2493
  422062:	pusha  
  422063:	les    ecx,FWORD PTR [ebp+0x6d]
  422066:	xor    bh,ch
  422068:	vaddpd xmm1,xmm5,XMMWORD PTR [ecx]
  42206c:	leave  
  42206d:	add    al,0x1c
  42206f:	repnz pop es
  422071:	repz mov ch,0x6d
  422074:	arpl   WORD PTR [ecx],bx
  422076:	icebp  
  422077:	fnsave [ebx-0x2852736d]
  42207d:	fdiv   DWORD PTR [esi+0x1b78ab2f]
  422083:	aaa    
  422084:	mov    ah,0xad
  422086:	(bad)  
  422087:	mov    ds:0xb9ae160f,eax
  42208c:	sahf   
  42208d:	cmp    BYTE PTR [ecx+esi*8],ah
  422090:	pusha  
  422091:	cld    
  422092:	inc    esi
  422093:	int3   
  422094:	jp     0x42207c
  422096:	inc    esi
  422097:	push   ss
  422098:	jne    0x42203d
  42209a:	pusha  
  42209b:	lock jmp DWORD PTR [esi+ecx*1]
  42209f:	mov    ebp,DWORD PTR [edi-0x64]
  4220a2:	push   ss
  4220a3:	fwait
  4220a4:	out    dx,al
  4220a5:	addr16 jmp 0x528e379f
  4220ab:	jae    0x4220de
  4220ad:	adc    eax,0xa80f1746
  4220b2:	inc    ebx
  4220b3:	addr16 pop esi
  4220b5:	xchg   DWORD PTR [ebx],edx
  4220b7:	push   edi
  4220b8:	ret    
  4220b9:	popf   
  4220ba:	mov    al,ds:0x35fb99d7
  4220bf:	out    dx,eax
  4220c0:	shr    DWORD PTR [edx-0x6e],1
  4220c3:	imul   esp,DWORD PTR ds:0xda35eb2f,0xffffffe8
  4220ca:	cld    
  4220cb:	dec    DWORD PTR [edi]
  4220cd:	lock (bad) 
  4220cf:	xor    dl,BYTE PTR [edx-0x64]
  4220d2:	jmp    0xcc2765a0
  4220d7:	sbb    ecx,DWORD PTR ds:[edi-0x3d977bc9]
  4220de:	adc    edi,0xffffff9b
  4220e1:	inc    edi
  4220e2:	or     BYTE PTR [ecx],al
  4220e4:	add    eax,0x1f16782a
  4220e9:	stc    
  4220ea:	pop    eax
  4220eb:	std    
  4220ec:	int3   
  4220ed:	fbstp  TBYTE PTR [ecx]
  4220ef:	push   ds
  4220f0:	rcr    BYTE PTR [esp+eax*8+0xe119eb8],cl
  4220f7:	xchg   edi,eax
  4220f8:	test   cl,0x33
  4220fb:	mov    DWORD PTR [ecx+0x1d81b956],0x810442fc
  422105:	loopne 0x42212f
  422107:	push   esi
  422108:	hlt    
  422109:	xchg   ecx,eax
  42210a:	mov    ecx,0x6796895b
  42210f:	jmp    0x422118
  422111:	cmp    edx,DWORD PTR [ebp+0x1f8e19f8]
  422117:	pop    edx
  422118:	and    eax,0xc475d035
  42211d:	xchg   esp,eax
  42211e:	add    DWORD PTR [ecx-0x2f],ebp
  422121:	push   es
  422122:	shl    DWORD PTR [ecx-0x7f],1
  422125:	pop    eax
  422126:	aas    
  422127:	shl    DWORD PTR [ebp-0x3ae3072d],1
  42212d:	jo     0x4220cc
  42212f:	mov    ds:0x42a431ae,al
  422134:	popa   
  422135:	fsub   DWORD PTR [edi+0x65ee6407]
  42213b:	int3   
  42213c:	or     DWORD PTR [esi-0x5c],esp
  42213f:	ror    BYTE PTR [ebp-0x51ac14a6],0x72
  422146:	cld    
  422147:	sbb    ecx,DWORD PTR [edx-0x9]
  42214a:	fidivr DWORD PTR [edx+0x42]
  42214d:	fwait
  42214e:	mov    bl,BYTE PTR [ebx-0x39147e8e]
  422154:	lods   eax,DWORD PTR ds:[esi]
  422155:	mov    WORD PTR [ecx],?
  422157:	xchg   ebx,eax
  422158:	xchg   BYTE PTR [ecx-0x59],dl
  42215b:	cmp    bl,bh
  42215d:	dec    ebp
  42215e:	stos   BYTE PTR es:[edi],al
  42215f:	cli    
  422160:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422161:	int    0xc1
  422163:	loopne 0x4221bc
  422165:	leave  
  422166:	jmp    0x584213e2
  42216b:	jmp    0x998c:0x3b25149d
  422172:	aam    0x4e
  422174:	not    BYTE PTR [ebx-0x20]
  422177:	or     DWORD PTR [eax+0x7a11daaf],ecx
  42217d:	xchg   edx,eax
  42217e:	xor    dh,ch
  422180:	pusha  
  422181:	sub    cl,BYTE PTR [ebp-0x6f36c8a1]
  422187:	mov    ss,WORD PTR [eax-0x233697be]
  42218d:	fild   DWORD PTR [ebp-0x7b]
  422190:	fadd   st(7),st
  422192:	mov    ch,0xef
  422194:	or     al,0xfb
  422196:	mov    edi,0x5f8d7514
  42219b:	add    ah,BYTE PTR [ebx-0x56]
  42219e:	mov    DWORD PTR [ebx-0x3],esi
  4221a1:	push   ss
  4221a2:	pop    eax
  4221a3:	pop    es
  4221a4:	adc    al,0xa0
  4221a6:	sbb    eax,0xae98caed
  4221ab:	sub    eax,DWORD PTR [ecx-0x43]
  4221ae:	sub    dl,BYTE PTR [eax-0xc]
  4221b1:	cld    
  4221b2:	mov    dl,cl
  4221b4:	loope  0x422141
  4221b6:	or     esi,esi
  4221b8:	pop    ecx
  4221b9:	stos   BYTE PTR es:[edi],al
  4221ba:	lods   eax,DWORD PTR ds:[esi]
  4221bb:	sar    ch,0x7
  4221be:	xchg   esp,eax
  4221bf:	adc    eax,0xe7d1d3c
  4221c4:	std    
  4221c5:	js     0x422157
  4221c7:	rcl    BYTE PTR ds:[ecx-0xf],0xed
  4221cc:	fsub   QWORD PTR [esi-0x17cfee5a]
  4221d2:	gs or  eax,0xd73a4c05
  4221d8:	cwde   
  4221d9:	jae    0x422214
  4221db:	(bad)  
  4221dd:	jmp    0xff5b:0xca137ebb
  4221e4:	ins    BYTE PTR es:[edi],dx
  4221e5:	ret    0xb378
  4221e8:	scas   eax,DWORD PTR es:[edi]
  4221e9:	xchg   esp,eax
  4221ea:	adc    al,0x58
  4221ec:	mov    dh,0x1
  4221ee:	inc    ecx
  4221ef:	inc    esi
  4221f0:	xlat   BYTE PTR ds:[ebx]
  4221f1:	sbb    eax,0x6d1985c9
  4221f6:	dec    esp
  4221f7:	imul   eax,DWORD PTR [ecx+0x3b],0xc
  4221fb:	jns    0x422264
  4221fd:	int    0xd8
  4221ff:	daa    
  422200:	sub    BYTE PTR [ebp-0x3f],0x15
  422204:	cld    
  422205:	or     al,0xb2
  422207:	cdq    
  422208:	inc    esp
  422209:	ret    0xccfc
  42220c:	xchg   esi,eax
  42220d:	stc    
  42220e:	mov    esi,?
  422210:	xchg   esp,eax
  422211:	(bad)  
  422212:	xor    eax,0xaa29b9a7
  422217:	dec    ecx
  422218:	int    0x5d
  42221a:	in     eax,0x18
  42221c:	test   bl,bl
  42221e:	pop    esp
  42221f:	and    eax,0xef9cfb0f
  422224:	xchg   edx,eax
  422225:	fidiv  DWORD PTR [ecx+0x1b]
  422228:	or     bh,BYTE PTR [edx+eax*1-0x24]
  42222c:	xchg   edx,eax
  42222d:	ss nop
  42222f:	fisttp WORD PTR [ecx-0x4b52d29e]
  422235:	push   es
  422236:	inc    esi
  422237:	sbb    esp,DWORD PTR [ebp-0x4cefd61d]
  42223d:	xchg   edi,eax
  42223e:	sub    ebp,0x4a
  422241:	dec    eax
  422242:	cld    
  422243:	and    esp,DWORD PTR [edx+0x77a66575]
  422249:	es mov edi,0xc1a7f542
  42224f:	aam    0x7c
  422251:	cmp    eax,0x999cd6d9
  422256:	cmp    eax,DWORD PTR [eax]
  422258:	pop    ecx
  422259:	push   cs
  42225a:	cs or  eax,0x74957cb6
  422260:	lods   eax,DWORD PTR ds:[esi]
  422261:	ins    DWORD PTR es:[edi],dx
  422262:	aad    0x4b
  422264:	sbb    BYTE PTR [esi-0xa],al
  422267:	xchg   ebp,eax
  422268:	mov    esp,0x6213e327
  42226d:	jmp    0x422214
  42226f:	dec    eax
  422270:	jl     0x4222cf
  422272:	mov    eax,0x61baef20
  422277:	imul   esi,esi,0xd5d4cfe3
  42227d:	iret   
  42227e:	fldenv [ecx-0x47]
  422281:	jno    0x42221e
  422283:	mov    edi,0x94ee363a
  422288:	inc    esi
  422289:	xlat   BYTE PTR ds:[ebx]
  42228a:	adc    esp,DWORD PTR [eax+edx*2]
  42228d:	jbe    0x422212
  42228f:	arpl   WORD PTR [ecx-0x19],dx
  422292:	mov    dh,BYTE PTR [eax+eiz*8]
  422295:	or     eax,0xa19f71c5
  42229a:	mov    ecx,0xad4588b3
  42229f:	add    DWORD PTR [edx-0x11275fde],esp
  4222a5:	js     0x422239
  4222a7:	jl     0x4222f0
  4222a9:	ins    BYTE PTR es:[edi],dx
  4222aa:	(bad)  
  4222ac:	or     dh,cl
  4222ae:	test   BYTE PTR [eax-0x45ccb17d],dh
  4222b4:	fst    DWORD PTR [edi]
  4222b6:	or     esp,esi
  4222b8:	out    0xec,eax
  4222ba:	test   eax,0xefabdba7
  4222bf:	and    ebp,DWORD PTR [ebp-0x14498bfb]
  4222c5:	xchg   DWORD PTR [ecx-0x427e4e0e],ebp
  4222cb:	les    ebp,FWORD PTR es:[eax+0x71]
  4222cf:	add    edi,DWORD PTR [eax-0x16804285]
  4222d5:	nop
  4222d6:	inc    ebp
  4222d7:	adc    DWORD PTR [ecx+edx*2+0x25f44fdb],0x96fc6809
  4222e2:	push   edx
  4222e3:	jne    0x42232f
  4222e5:	xor    esp,eax
  4222e7:	xchg   edx,eax
  4222e8:	mov    ebp,0x2a450ef0
  4222ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4222ee:	sub    eax,0x84471495
  4222f3:	rsqrtps xmm4,XMMWORD PTR [edi-0x20f3f0b7]
  4222fa:	mov    ebp,0xaf8ffe95
  4222ff:	add    ecx,ebp
  422301:	daa    
  422302:	(bad)  
  422303:	push   edi
  422304:	fwait
  422305:	hlt    
  422306:	div    DWORD PTR [ebx+0x4f]
  422309:	cmp    edi,DWORD PTR [edi-0x6d]
  42230c:	dec    ecx
  42230d:	mov    ebp,0x897fa15e
  422312:	pop    esi
  422313:	and    DWORD PTR [ecx],ebx
  422315:	lods   al,BYTE PTR ds:[esi]
  422316:	shr    BYTE PTR [eax],cl
  422318:	add    bh,BYTE PTR [edx]
  42231a:	les    ebp,FWORD PTR [eax]
  42231c:	div    esi
  42231e:	sbb    eax,0x2985038c
  422323:	outs   dx,BYTE PTR ds:[esi]
  422324:	sub    eax,0xa0c3215f
  422329:	mov    ecx,DWORD PTR [esi]
  42232b:	pop    esi
  42232c:	imul   esp,eax,0x1a
  42232f:	and    eax,0x302ece91
  422334:	mov    esp,0xb993220f
  422339:	dec    ecx
  42233a:	pop    esp
  42233b:	(bad)
  42233f:	call   DWORD PTR [ecx-0x17]
  422342:	push   es
  422343:	inc    esp
  422344:	mov    edx,0xb337a0ad
  422349:	(bad)  
  42234a:	call   0xb400147e
  42234f:	jno    0x4223af
  422351:	sbb    ecx,DWORD PTR [edi+0x35e201c6]
  422357:	and    DWORD PTR [edx+0xddc2358],edx
  42235d:	out    0xb0,al
  42235f:	jo     0x4223c5
  422361:	jle    0x4223c0
  422363:	push   0x9eea6135
  422368:	xchg   ecx,eax
  422369:	xchg   ebx,ebx
  42236b:	(bad)  
  42236c:	mov    bl,0x12
  42236e:	mov    cl,0xaf
  422370:	jmp    0x4223dd
  422372:	xchg   edx,eax
  422373:	lods   eax,DWORD PTR ds:[esi]
  422374:	dec    ebx
  422375:	clc    
  422376:	mov    esi,0x1580f065
  42237b:	push   eax
  42237c:	add    DWORD PTR [edi-0x38],esi
  42237f:	stos   BYTE PTR es:[edi],al
  422380:	imul   edx,DWORD PTR [edi-0x46],0xffffff9d
  422384:	adc    ebp,DWORD PTR [esi]
  422386:	sbb    bh,BYTE PTR ds:0x48e0c5d5
  42238c:	sbb    al,0x49
  42238e:	xchg   ebp,eax
  42238f:	or     DWORD PTR [edx-0x54cd1d56],0xfeea6c1e
  422399:	stos   BYTE PTR es:[edi],al
  42239a:	les    ebx,FWORD PTR [eax]
  42239c:	jo     0x4223ef
  42239e:	in     eax,0x94
  4223a0:	mov    cl,0x3b
  4223a2:	rcr    BYTE PTR [eax+0x49],0x27
  4223a6:	adc    eax,0x876e9dd9
  4223ab:	and    al,0xfd
  4223ad:	retf   
  4223ae:	xor    BYTE PTR ds:0x8f5ac8dc,al
  4223b4:	je     0x4223b6
  4223b6:	js     0x4223b4
  4223b8:	push   eax
  4223b9:	jmp    0x4223e1
  4223bb:	iret   
  4223bc:	jne    0x42239e
  4223be:	pop    ebp
  4223bf:	mov    ebx,0xe0a7520
  4223c4:	dec    ebp
  4223c5:	shr    DWORD PTR [edx+0x56],0x40
  4223c9:	mov    esi,0x93479487
  4223ce:	bound  esp,QWORD PTR [ecx+0x77]
  4223d1:	pop    ds
  4223d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223d3:	test   ebp,0x938dad3d
  4223d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4223da:	cmp    bh,BYTE PTR [ecx]
  4223dc:	and    BYTE PTR [esi],bl
  4223de:	stos   DWORD PTR es:[edi],eax
  4223df:	cmp    al,0xa2
  4223e1:	sub    al,0xf0
  4223e3:	xor    DWORD PTR [ecx+eax*4+0x18],ecx
  4223e7:	push   ss
  4223e8:	xor    BYTE PTR [edi+0x1e20cd28],cl
  4223ee:	mov    ecx,0x38815dfb
  4223f3:	mov    esp,ebx
  4223f5:	mov    ds:0x85c57c40,al
  4223fa:	add    DWORD PTR [ebp+0x71cb15e3],esi
  422400:	adc    DWORD PTR [esp+eiz*2-0x5e8064c6],ecx
  422407:	adc    eax,0x7d104aa9
  42240c:	pop    ebp
  42240d:	and    DWORD PTR [ebx+edx*4],0x1e915f38
  422414:	dec    edx
  422415:	sahf   
  422416:	sub    al,0x6a
  422418:	lods   al,BYTE PTR ds:[esi]
  422419:	inc    eax
  42241a:	ror    DWORD PTR [esi],cl
  42241c:	lahf   
  42241d:	dec    eax
  42241e:	pop    eax
  42241f:	cmp    eax,0xe5bcc0f3
  422424:	dec    ebp
  422425:	aaa    
  422426:	sub    eax,0xa94e3c9
  42242b:	(bad)
  42242e:	mov    eax,0x892f5b8e
  422433:	leave  
  422434:	aas    
  422435:	daa    
  422436:	daa    
  422437:	stc    
  422438:	inc    edi
  422439:	fchs   
  42243b:	push   esp
  42243c:	mov    al,ds:0xede7ebcf
  422441:	shl    DWORD PTR [ebx],cl
  422443:	push   ebx
  422444:	(bad)  
  422445:	jp     0x4223d1
  422447:	iret   
  422448:	and    BYTE PTR [ebx],ah
  42244a:	or     DWORD PTR [eax+0x5d],esi
  42244d:	dec    edi
  42244e:	mov    esp,0xe0b4cbe
  422453:	dec    edi
  422454:	sub    cl,BYTE PTR [ebp+0x2a880d8e]
  42245a:	mov    eax,ds:0x7e486c9f
  42245f:	push   ebx
  422460:	out    dx,eax
  422461:	sbb    DWORD PTR [esi],esi
  422463:	sahf   
  422464:	sbb    eax,DWORD PTR [edx+esi*1]
  422467:	push   ebx
  422468:	pop    esp
  422469:	out    0x67,al
  42246b:	shr    BYTE PTR [edi-0x21],0x63
  42246f:	out    0x62,al
  422471:	mov    ecx,0x1478cb0e
  422476:	add    eax,0x29025b55
  42247b:	and    DWORD PTR [ebx],eax
  42247d:	xchg   ebp,eax
  42247e:	sub    al,0x9e
  422480:	retf   
  422481:	sbb    eax,0x356a5f9c
  422486:	scas   eax,DWORD PTR es:[edi]
  422487:	mov    ebx,0xe4bc0195
  42248c:	fs adc eax,0xcb5bbe47
  422492:	sub    al,0xf6
  422494:	fcmovnb st,st(0)
  422496:	(bad)  [edx+ebp*8]
  422499:	inc    ecx
  42249a:	jns    0x422460
  42249c:	in     eax,0x4a
  42249e:	jmp    0x54ce082e
  4224a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4224a5:	test   DWORD PTR [eax+ebx*2],edi
  4224a8:	test   eax,0xea71d5c8
  4224ad:	cs test dh,0xe3
  4224b1:	(bad)  
  4224b2:	arpl   WORD PTR [edx-0x4e361a37],ax
  4224b8:	xor    al,0x7c
  4224ba:	aaa    
  4224bb:	adc    DWORD PTR [ecx+0x45],ebp
  4224be:	daa    
  4224bf:	pop    ebp
  4224c0:	push   eax
  4224c1:	outs   dx,BYTE PTR ds:[esi]
  4224c2:	retf   
  4224c3:	push   cs
  4224c4:	dec    esp
  4224c5:	scas   al,BYTE PTR es:[edi]
  4224c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4224c7:	pop    ebx
  4224c8:	retf   
  4224c9:	lds    esi,FWORD PTR [edi]
  4224cb:	pop    edx
  4224cc:	(bad)  
  4224cd:	ss push ss
  4224cf:	xor    DWORD PTR [edi+0x6e],esp
  4224d2:	mov    ds:0xb0ba1ffd,eax
  4224d7:	and    edi,DWORD PTR [eax+ebp*1]
  4224da:	repnz sub al,0xe0
  4224dd:	adc    eax,0x48e324d3
  4224e2:	aas    
  4224e3:	mov    edx,0xfe3d8035
  4224e8:	test   eax,0x82694c74
  4224ed:	jmp    0x4224e4
  4224ef:	out    dx,al
  4224f0:	sbb    eax,0x8bf30655
  4224f5:	mov    ah,0xf3
  4224f7:	fs sub al,0x70
  4224fa:	ins    BYTE PTR es:[edi],dx
  4224fb:	(bad)  
  4224fd:	cmp    ebp,edx
  4224ff:	mov    dh,0x81
  422501:	mov    ds:0xcca5daf8,eax
  422506:	mov    dh,bh
  422508:	adc    ebp,DWORD PTR [ebx+0x6bee23b]
  42250e:	clc    
  42250f:	sub    dh,BYTE PTR [edi+ebx*1+0x1a]
  422513:	adc    BYTE PTR [edx+edx*1],0x4d
  422517:	adc    BYTE PTR [edi+0x6d499570],bl
  42251d:	or     eax,0x95d72399
  422522:	ins    DWORD PTR es:[edi],dx
  422523:	out    dx,eax
  422524:	ins    DWORD PTR es:[edi],dx
  422525:	repnz and al,0xa4
  422528:	push   ss
  422529:	jmp    0x422550
  42252b:	ja     0x4224c9
  42252d:	mov    bh,0xae
  42252f:	and    BYTE PTR [ebx+0x44],ch
  422532:	sahf   
  422533:	pusha  
  422534:	mov    eax,edx
  422536:	aad    0xe7
  422538:	sbb    eax,edi
  42253a:	lods   eax,DWORD PTR ds:[esi]
  42253b:	loope  0x4225ad
  42253d:	pop    ebx
  42253e:	ret    0x333e
  422541:	xchg   ebx,eax
  422542:	mov    cs:0xbbc7c80c,eax
  422548:	adc    ecx,DWORD PTR [ecx-0x76]
  42254b:	dec    ecx
  42254c:	fcmove st,st(6)
  42254e:	es pop eax
  422550:	xchg   esp,eax
  422551:	test   eax,0x7d378c0a
  422556:	xlat   BYTE PTR ds:[ebx]
  422557:	sbb    al,0xee
  422559:	cwde   
  42255a:	test   DWORD PTR [esi],0x1d90f6c6
  422560:	mov    esp,0xd6408645
  422565:	mov    WORD PTR [ebp+0x4c6808cb],ss
  42256b:	leave  
  42256c:	rol    dl,0xaa
  42256f:	test   BYTE PTR [edx],bl
  422571:	ins    BYTE PTR es:[edi],dx
  422572:	mov    ah,0x9b
  422574:	imul   edi,esi,0x3034c148
  42257a:	adc    al,0x9a
  42257c:	outs   dx,BYTE PTR ds:[esi]
  42257d:	or     cl,BYTE PTR [edi]
  42257f:	sub    al,0xbc
  422581:	mov    dh,0x38
  422583:	adc    BYTE PTR [ebx+0x6b],0xf8
  422587:	jno    0x422527
  422589:	out    0x62,eax
  42258b:	sbb    al,0x88
  42258d:	outs   dx,BYTE PTR ds:[esi]
  42258e:	xor    ebx,DWORD PTR [edx+0x32]
  422591:	(bad)  
  422592:	push   ss
  422593:	out    dx,al
  422594:	fstp   QWORD PTR [esi]
  422596:	rcl    BYTE PTR [eax+0x5f],1
  422599:	fsubr  DWORD PTR [eax+0x4a8f896c]
  42259f:	gs out 0x1f,al
  4225a2:	fs dec edi
  4225a4:	mov    ecx,0xfccf2761
  4225a9:	clc    
  4225aa:	mov    edi,0xea385c3c
  4225af:	cwde   
  4225b0:	pop    esp
  4225b1:	mov    ds:0xfe60c07c,eax
  4225b6:	shl    esi,cl
  4225b8:	sub    eax,0x6838749e
  4225bd:	adc    edx,DWORD PTR [ecx]
  4225bf:	cs mov ebx,0x7238128a
  4225c5:	fwait
  4225c6:	sub    dl,BYTE PTR [ecx+0x15a190bf]
  4225cc:	lds    edx,FWORD PTR [edx+0x1]
  4225cf:	fdivrp st(5),st
  4225d1:	cmp    al,BYTE PTR [eax]
  4225d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225d4:	sbb    DWORD PTR [ecx-0x68],eax
  4225d7:	xchg   edi,eax
  4225d8:	jae    0x422573
  4225da:	inc    eax
  4225db:	into   
  4225dc:	ffreep st(1)
  4225de:	sbb    ah,BYTE PTR [edi+0x71c4e417]
  4225e4:	push   esi
  4225e5:	in     eax,dx
  4225e6:	test   ah,dh
  4225e8:	jno    0x4225ab
  4225ea:	fsubr  st(3),st
  4225ec:	loopne 0x4225a7
  4225ee:	sub    al,0x7d
  4225f0:	add    DWORD PTR ss:0xd7714479,0xfffffff2
  4225f8:	ja     0x4225ab
  4225fa:	jbe    0x42262e
  4225fc:	fnstenv [eax+ebx*8-0x18]
  422600:	xchg   ecx,eax
  422601:	mov    edx,0x70c7ddcd
  422606:	cli    
  422607:	add    BYTE PTR [ebx+0x7f],ah
  42260a:	push   es
  42260b:	push   eax
  42260c:	xor    BYTE PTR ds:0xecb62a2d,ch
  422612:	imul   ebx,DWORD PTR [esi+0x234f016b],0x667f3150
  42261c:	xchg   cl,ah
  42261e:	sub    eax,esp
  422620:	add    dh,ch
  422622:	into   
  422623:	jp     0x422628
  422625:	mov    ch,0xb3
  422627:	mov    BYTE PTR [esi-0x61],0x1a
  42262b:	inc    esp
  42262c:	jno    0x4225f3
  42262e:	(bad)  
  42262f:	into   
  422630:	in     eax,0xe7
  422632:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422633:	dec    ecx
  422634:	jg     0x4225b6
  422636:	mov    esp,0xc444a41e
  42263b:	lea    ebx,[edx+ebp*4+0x24451ac0]
  422642:	dec    ebp
  422644:	and    eax,0x485523ac
  422649:	ror    DWORD PTR [edx+0x1d3b1454],cl
  42264f:	pushf  
  422650:	int    0x88
  422652:	dec    ecx
  422653:	push   ecx
  422654:	lea    ecx,[esi]
  422656:	jp     0x4226a7
  422658:	sbb    edx,DWORD PTR [eax]
  42265a:	pop    ss
  42265b:	fild   QWORD PTR [edx+0x5]
  42265e:	arpl   WORD PTR [ecx+0x5870717a],ax
  422664:	cld    
  422665:	stc    
  422666:	jmp    0xe880cb86
  42266b:	stos   BYTE PTR es:[edi],al
  42266c:	in     al,dx
  42266d:	fs or  ah,dh
  422670:	or     ch,BYTE PTR [edi+0x21]
  422673:	cmp    bl,BYTE PTR [eax+eax*2]
  422676:	aaa    
  422677:	retf   0x2769
  42267a:	push   eax
  42267b:	inc    ebx
  42267c:	pop    es
  42267d:	mov    DWORD PTR [ebx-0x6ddd8622],eax
  422683:	pop    ds
  422684:	pop    ds
  422685:	ficomp DWORD PTR [edi]
  422687:	ret    
  422688:	addr16 daa 
  42268a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42268b:	fcomp  DWORD PTR [esp+edi*2-0x523c674f]
  422692:	push   0xffffffa6
  422694:	cmp    ebp,DWORD PTR [bx+di]
  422697:	push   ebp
  422698:	sub    dl,BYTE PTR ds:0xb88af84
  42269e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42269f:	cmp    eax,0x7242ea88
  4226a4:	mov    edi,0xa53faf7e
  4226a9:	gs jmp 0x4226b0
  4226ac:	pop    esp
  4226ad:	fcmovne st,st(2)
  4226af:	xor    esi,DWORD PTR [ecx+0x3eac9954]
  4226b5:	mov    ebp,esp
  4226b7:	mov    WORD PTR [ebx-0x678715fe],ss
  4226bd:	jmp    0x4226ce
  4226bf:	iret   
  4226c0:	mov    ecx,0x4a99014e
  4226c5:	dec    esi
  4226c6:	pop    edi
  4226c7:	sub    DWORD PTR [ecx],ebp
  4226c9:	jo     0x4226f5
  4226cb:	inc    edx
  4226cc:	cmp    al,0x46
  4226ce:	add    eax,0xc36952e1
  4226d3:	ret    
  4226d4:	pushf  
  4226d5:	mov    bl,0xb8
  4226d7:	xchg   ecx,eax
  4226d8:	push   esi
  4226d9:	retf   0xe570
  4226dc:	cwde   
  4226dd:	test   DWORD PTR [esi+edi*4],0xcafe3987
  4226e4:	int    0xe0
  4226e6:	push   cs
  4226e7:	or     eax,0x1414f7c2
  4226ec:	xchg   DWORD PTR [edx-0x447a8534],esi
  4226f2:	je     0x4226ba
  4226f4:	aam    0x7c
  4226f6:	cld    
  4226f7:	mov    edi,0x25d8268b
  4226fc:	mov    bl,0xe4
  4226fe:	es push 0x8aab96d2
  422704:	inc    edi
  422705:	pop    ebx
  422706:	loop   0x422755
  422708:	mov    ds:0x6d40fdc9,eax
  42270d:	iret   
  42270e:	jmp    0xc412a44a
  422713:	adc    eax,0xb8b23395
  422718:	in     al,dx
  422719:	xchg   edx,eax
  42271a:	dec    ebp
  42271b:	pop    ecx
  42271c:	mov    ah,0xa
  42271e:	(bad)  
  42271f:	adc    ebx,DWORD PTR [ebx-0x16]
  422722:	call   0x9db3:0x58e12450
  422729:	jo     0x422706
  42272b:	and    BYTE PTR [edx],al
  42272d:	xor    eax,0x5591c447
  422732:	jg     0x4226d7
  422734:	xchg   ebp,eax
  422735:	jbe    0x4226e2
  422737:	sahf   
  422738:	inc    esi
  422739:	cs lahf 
  42273b:	dec    eax
  42273c:	ficomp DWORD PTR gs:[ebp-0x120a32c2]
  422743:	inc    edx
  422744:	jp     0x42270d
  422746:	xor    al,0x12
  422748:	dec    ebx
  422749:	mov    al,0x58
  42274b:	test   al,0xdd
  42274d:	jmp    0x7dec07a3
  422752:	mov    bh,BYTE PTR [ebp+0xe6f80e0]
  422758:	retf   
  422759:	sbb    DWORD PTR [edx+0x30da3955],0xffffffc4
  422760:	xchg   edx,eax
  422761:	adc    al,0x70
  422763:	sub    ebx,DWORD PTR [edx+0x14]
  422766:	or     DWORD PTR [esi+0x2a533a6],esi
  42276c:	jecxz  0x4227b4
  42276e:	mov    ebp,0x318a73aa
  422773:	sbb    eax,0xe25c473d
  422778:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422779:	leave  
  42277a:	test   al,0x96
  42277c:	mov    esi,DWORD PTR [ebx-0x3d7586d3]
  422782:	push   edx
  422783:	mov    DWORD PTR [eax+0xf],ecx
  422786:	xor    ecx,DWORD PTR [esi]
  422788:	sahf   
  422789:	dec    ebx
  42278a:	in     al,dx
  42278b:	xchg   edi,eax
  42278c:	fbld   TBYTE PTR [ebp-0x7155b24a]
  422792:	push   0x3
  422794:	ins    BYTE PTR es:[edi],dx
  422795:	xor    al,0xfa
  422797:	xchg   DWORD PTR [esi],ebp
  422799:	mov    WORD PTR [ebp-0x80],?
  42279c:	pop    esp
  42279d:	lock outs dx,BYTE PTR ds:[esi]
  42279f:	push   0xf9a0e35b
  4227a4:	cli    
  4227a5:	pop    es
  4227a6:	xlat   BYTE PTR ds:[ebx]
  4227a7:	aam    0x1e
  4227a9:	or     al,0xfb
  4227ab:	sbb    eax,0x353f5a3b
  4227b0:	enter  0x330a,0x39
  4227b4:	adc    al,0xa6
  4227b6:	sbb    bl,BYTE PTR [ebp-0x2d]
  4227b9:	jbe    0x4227ad
  4227bb:	jo     0x42279f
  4227bd:	lods   eax,DWORD PTR ds:[esi]
  4227be:	xor    al,BYTE PTR [esi]
  4227c0:	push   esp
  4227c1:	mov    eax,ds:0x716efc48
  4227c6:	lea    esp,[ecx-0x763a5484]
  4227cc:	sub    al,0xf6
  4227ce:	ds in  eax,dx
  4227d0:	mov    ds:0x3e820469,al
  4227d5:	xor    esi,DWORD PTR [ebx]
  4227d7:	xor    DWORD PTR ds:0x520d89dc,esi
  4227dd:	pop    edi
  4227de:	cmp    esi,DWORD PTR [ebp+0x23749ac5]
  4227e4:	dec    edx
  4227e5:	inc    esi
  4227e6:	(bad)  
  4227e7:	lods   eax,DWORD PTR ds:[esi]
  4227e8:	add    DWORD PTR [ebp+0x33],ebp
  4227eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227ec:	push   es
  4227ed:	xchg   DWORD PTR [edx+0x14752a8],esi
  4227f3:	out    dx,al
  4227f4:	and    eax,0x45e726c1
  4227f9:	cmp    dl,BYTE PTR [ebp-0x45]
  4227fc:	call   0x5c3b:0x2f5da8a9
  422803:	leave  
  422804:	call   0xb50d7e30
  422809:	mov    edx,0x32c0a2a
  42280e:	mov    edi,0x1f04ba16
  422813:	cmp    eax,0xf499c59d
  422819:	test   al,0x66
  42281b:	dec    ebx
  42281c:	ror    DWORD PTR [ecx],0x70
  42281f:	adc    eax,0x1b81080a
  422824:	dec    edi
  422825:	out    0x24,al
  422827:	push   ss
  422828:	and    DWORD PTR ds:0x4fd71719,eax
  42282e:	mov    eax,DWORD PTR [esi]
  422830:	adc    edx,edx
  422832:	cmp    dl,BYTE PTR [edi-0x742c9e5d]
  422838:	cmp    BYTE PTR [esi],ch
  42283a:	sbb    DWORD PTR [eax+edx*2-0x7d],esi
  42283e:	(bad)  
  42283f:	retf   
  422840:	sbb    ebp,DWORD PTR [ecx-0x345309e8]
  422846:	and    al,0xdf
  422848:	jp     0x4227f5
  42284a:	or     ah,BYTE PTR [edi-0x36208792]
  422850:	int3   
  422851:	sar    ah,1
  422853:	dec    edi
  422854:	lea    esi,[esi-0x29b1af1a]
  42285a:	ret    
  42285b:	cdq    
  42285c:	(bad)  
  42285d:	or     eax,0x50a5f31f
  422862:	dec    esp
  422863:	dec    esi
  422864:	sub    DWORD PTR [ebx-0x34ae4b4a],edx
  42286a:	les    ecx,FWORD PTR [edx-0x2]
  42286d:	shl    esi,0xa5
  422870:	int    0xdc
  422872:	arpl   WORD PTR [edx-0x7],ax
  422875:	mov    ds:0xaf10e152,al
  42287a:	sti    
  42287b:	jmp    0xadb5:0xed76f7ce
  422882:	adc    DWORD PTR [ebp+0x36],edx
  422885:	data16 int 0x2d
  422888:	call   0x87497f7b
  42288d:	sbb    ecx,ecx
  42288f:	int    0xe9
  422891:	cmp    DWORD PTR [eax],0xffffffa9
  422894:	sbb    ecx,esp
  422896:	xchg   edi,eax
  422897:	and    al,0x89
  422899:	call   0x1b51:0x1e7498c2
  4228a0:	loop   0x4228e5
  4228a2:	xor    bh,BYTE PTR [edi]
  4228a4:	and    dh,BYTE PTR [ecx+0x2b96395]
  4228aa:	test   eax,0xa406a395
  4228af:	js     0x4228b6
  4228b1:	or     DWORD PTR [edi-0x4b47012a],eax
  4228b7:	jle    0x422915
  4228b9:	push   ecx
  4228ba:	xor    BYTE PTR [ebx-0x87c3650],al
  4228c0:	mov    al,ds:0x9c1cdf41
  4228c5:	shl    BYTE PTR [ebx-0x658eb09a],cl
  4228cb:	jns    0x42289b
  4228cd:	mov    bh,0x1c
  4228cf:	inc    edx
  4228d0:	inc    ebx
  4228d1:	jmp    0xfe32da8
  4228d6:	cmp    dh,cl
  4228d8:	retf   0x7e0f
  4228db:	xchg   esp,eax
  4228dc:	js     0x42289e
  4228de:	(bad)  
  4228df:	das    
  4228e0:	fist   DWORD PTR [esi]
  4228e2:	std    
  4228e3:	cwde   
  4228e4:	arpl   WORD PTR [ebx],di
  4228e6:	es sahf 
  4228e8:	clc    
  4228e9:	fist   WORD PTR [esi]
  4228eb:	enter  0x39aa,0x9d
  4228ef:	and    edi,DWORD PTR [ebx+0x7e]
  4228f2:	cwde   
  4228f3:	ss sbb al,0xee
  4228f6:	fisttp DWORD PTR [edx]
  4228f8:	sar    al,cl
  4228fa:	imul   BYTE PTR [esp+eax*4-0x304b8798]
  422901:	push   0x75dea05
  422906:	adc    DWORD PTR [esi-0x34],edx
  422909:	in     eax,0x9e
  42290b:	pop    ebx
  42290c:	arpl   WORD PTR [ebx+esi*4],bp
  42290f:	les    esi,FWORD PTR [esi-0x7d06aaeb]
  422915:	imul   ebx,DWORD PTR [edx-0x14620a1c],0x42
  42291c:	and    eax,0xa5373726
  422921:	push   eax
  422922:	pop    ds
  422923:	inc    edx
  422924:	pop    ecx
  422925:	loopne 0x422933
  422927:	inc    esi
  422928:	mov    esi,0xa72200c4
  42292d:	xor    eax,0x29c3c8e4
  422932:	inc    DWORD PTR [ecx]
  422934:	lea    ebx,[ecx+0x24cfc7c6]
  42293a:	xor    DWORD PTR [esi-0x6b],ecx
  42293d:	dec    ebp
  42293e:	mov    al,ds:0x8124b472
  422943:	xor    al,0x21
  422945:	xor    DWORD PTR ds:0x2133d1d3,edi
  42294b:	scas   eax,DWORD PTR es:[edi]
  42294c:	mov    cl,BYTE PTR [eax-0x19]
  42294f:	leave  
  422950:	cmp    eax,0x7ecfc952
  422955:	sub    al,0x8b
  422957:	cmp    ah,BYTE PTR [eax+0x2a17b2da]
  42295d:	jno    0x422914
  42295f:	(bad)  [ebx+0x1436edb8]
  422965:	xor    al,0x15
  422967:	adc    al,0xa8
  422969:	cld    
  42296a:	pop    esi
  42296b:	jge    0x4229c7
  42296d:	push   cs
  42296e:	fistp  DWORD PTR [edx-0x6e9d8a3b]
  422974:	mov    ecx,0x21ddd9aa
  422979:	out    dx,eax
  42297a:	ds and al,0x2e
  42297d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42297e:	dec    esi
  42297f:	ds sahf 
  422981:	inc    eax
  422982:	mov    DWORD PTR ds:0xdd1df398,esi
  422988:	mov    esp,0x552f2939
  42298d:	add    BYTE PTR [ebx+0x7b],bl
  422990:	repz add al,0x53
  422993:	fldcw  WORD PTR [edi-0x69]
  422996:	icebp  
  422997:	xor    DWORD PTR [esi],ebp
  422999:	das    
  42299a:	fdiv   QWORD PTR [edi+ebp*4-0x59]
  42299e:	popa   
  42299f:	or     DWORD PTR [ecx+0x2cc5f9bb],ebp
  4229a5:	cdq    
  4229a6:	mov    eax,ds:0x7c1ebaa
  4229ab:	sbb    bh,bl
  4229ad:	test   DWORD PTR [eax],ecx
  4229af:	sub    eax,0xc77148a3
  4229b4:	mov    eax,ds:0x7f285aca
  4229b9:	mov    esi,0x31d839f3
  4229be:	jnp    0x4229aa
  4229c0:	push   eax
  4229c1:	fnsetpm(287 only) 
  4229c3:	jge    0x4229fd
  4229c5:	in     al,0x2
  4229c7:	fnstsw WORD PTR [ecx+0x5f]
  4229ca:	nop
  4229cb:	mov    DWORD PTR [ecx],edx
  4229cd:	xor    DWORD PTR [ebp-0x401ab02f],esp
  4229d3:	sar    BYTE PTR [esi+0xe],cl
  4229d6:	push   ds
  4229d7:	mov    al,0xcb
  4229d9:	sbb    DWORD PTR [eax],ecx
  4229db:	dec    edx
  4229dc:	cmp    eax,0x80887ecc
  4229e1:	pusha  
  4229e2:	inc    ebp
  4229e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229e4:	pop    es
  4229e5:	dec    esp
  4229e6:	test   DWORD PTR [ebx],0xadbfe830
  4229ec:	fidiv  WORD PTR [ecx+0x955c63]
  4229f2:	mov    cl,0xaa
  4229f4:	xor    BYTE PTR [edi-0x5c],bh
  4229f7:	fdivrp st(0),st
  4229f9:	xor    dl,BYTE PTR [eax]
  4229fb:	mov    cl,0xd2
  4229fd:	sub    ah,BYTE PTR [eax-0x1585ba6e]
  422a03:	sar    ebx,cl
  422a05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a06:	push   ecx
  422a07:	lock int 0xac
  422a0a:	push   edx
  422a0b:	push   ds
  422a0c:	cmp    edx,ecx
  422a0e:	test   eax,0x7900ca84
  422a13:	cdq    
  422a14:	je     0x422a68
  422a16:	imul   esp,esp,0x58
  422a19:	test   bl,0xdd
  422a1c:	and    BYTE PTR [ecx-0x5d10479d],dh
  422a22:	aad    0x34
  422a24:	pop    edi
  422a25:	mov    dl,0x30
  422a27:	loop   0x422a39
  422a29:	jecxz  0x4229c2
  422a2b:	xor    edx,DWORD PTR [eax-0x49]
  422a2e:	pop    esp
  422a2f:	dec    DWORD PTR [esi-0xa128496]
  422a35:	ret    0xa6ed
  422a38:	push   ds
  422a39:	cdq    
  422a3a:	pop    ebp
  422a3b:	xor    ah,0xf6
  422a3e:	pop    eax
  422a3f:	das    
  422a40:	dec    ebx
  422a41:	outs   dx,BYTE PTR ds:[esi]
  422a42:	cs xchg ebp,eax
  422a44:	mov    ebp,0xaca247a1
  422a49:	lods   eax,DWORD PTR ds:[esi]
  422a4a:	jmp    0x9983:0x4545abe0
  422a51:	out    0xe5,eax
  422a53:	test   DWORD PTR [eax],ebx
  422a55:	xchg   esp,eax
  422a56:	xor    eax,0xdca11f23
  422a5b:	mov    WORD PTR [ebx+0x360ba99f],cs
  422a61:	rcl    BYTE PTR [edx+0x1181ef9a],cl
  422a67:	push   es
  422a68:	lods   al,BYTE PTR ds:[esi]
  422a69:	lahf   
  422a6a:	mov    fs,WORD PTR [ecx]
  422a6c:	cdq    
  422a6d:	jge    0x422adc
  422a6f:	call   0x603:0xc30e67df
  422a76:	jp     0x422a00
  422a78:	xchg   ecx,eax
  422a79:	pop    ebx
  422a7a:	jg     0x422a0f
  422a7c:	xchg   ebx,eax
  422a7d:	cmp    al,0x9
  422a7f:	cmp    al,0x64
  422a81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a82:	mov    ds:0x31c83cc0,al
  422a87:	lea    ebp,[ebp+0x34]
  422a8a:	sub    bh,BYTE PTR [esp+edx*8+0x11544344]
  422a91:	push   es
  422a92:	inc    ecx
  422a93:	mov    cl,0xdb
  422a95:	js     0x422ae2
  422a97:	xor    ch,BYTE PTR [ecx-0x2c660080]
  422a9d:	xchg   edx,eax
  422a9e:	js     0x422a93
  422aa0:	ret    
  422aa1:	push   ebx
  422aa2:	stos   BYTE PTR es:[edi],al
  422aa3:	pop    esi
  422aa4:	arpl   WORD PTR [eax],cx
  422aa6:	in     al,dx
  422aa7:	sub    eax,0x254041fe
  422aac:	cmp    al,0xf8
  422aae:	jb     0x422a44
  422ab0:	jmp    0xf001:0x5e086fc7
  422ab7:	pop    edi
  422ab8:	sar    al,0x6b
  422abb:	push   ss
  422abc:	dec    edi
  422abd:	or     BYTE PTR [edi-0x43daefeb],ah
  422ac3:	mov    dl,0xf5
  422ac5:	int    0x43
  422ac7:	test   BYTE PTR [eax+0x1b],dl
  422aca:	xchg   edi,eax
  422acb:	or     BYTE PTR [ebp-0x6d],dl
  422ace:	pusha  
  422acf:	mov    eax,ds:0xc2ba01c
  422ad4:	jmp    0x422a6b
  422ad6:	xor    al,0xb2
  422ad8:	pop    ebx
  422ad9:	pop    ebp
  422ada:	inc    ecx
  422adb:	icebp  
  422adc:	xor    eax,0x2bb5f32b
  422ae1:	call   0x5f36:0xe0349565
  422ae8:	outs   dx,BYTE PTR ds:[esi]
  422ae9:	mov    dh,0x7d
  422aeb:	adc    BYTE PTR [ebp+0x37],dl
  422aee:	push   esp
  422aef:	fwait
  422af0:	mov    ds:0xea069fed,eax
  422af5:	retf   0x83ff
  422af8:	jl     0x422b2b
  422afa:	push   ebp
  422afb:	jg     0x422ab2
  422afd:	push   edi
  422afe:	cmp    ebx,DWORD PTR [edx]
  422b00:	retf   
  422b01:	in     al,dx
  422b02:	in     eax,dx
  422b03:	cmp    BYTE PTR [ebp-0x23],0x40
  422b07:	add    BYTE PTR [ebx+eax*1+0x447175a2],al
  422b0e:	add    al,0x2a
  422b10:	hlt    
  422b11:	jecxz  0x422b2f
  422b13:	adc    eax,0xd86ff5e3
  422b18:	ret    0x2aa2
  422b1b:	pop    ss
  422b1c:	xor    DWORD PTR [ecx+ebp*4],eax
  422b1f:	sbb    esp,esp
  422b21:	in     eax,dx
  422b22:	jns    0x422ad9
  422b24:	pop    ebx
  422b25:	pop    edx
  422b26:	inc    ecx
  422b27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b28:	adc    eax,0xc1d0077e
  422b2d:	or     al,0x58
  422b2f:	test   eax,0x34f5e35
  422b34:	loop   0x422b2c
  422b36:	jmp    0x422b88
  422b38:	sbb    eax,esp
  422b3a:	mov    ds:0x26567e07,eax
  422b3f:	imul   ebx,DWORD PTR [edi-0x71],0x3f
  422b43:	cmp    DWORD PTR [esp+ecx*2+0x59],esi
  422b47:	dec    ebp
  422b48:	adc    edi,DWORD PTR [ebx-0x1f]
  422b4b:	pop    ecx
  422b4c:	rcr    DWORD PTR [eax-0x11e6bfc8],1
  422b52:	xchg   ebx,eax
  422b53:	pop    edx
  422b54:	(bad)  
  422b55:	mov    dl,0xec
  422b57:	jbe    0x422b0b
  422b59:	stos   BYTE PTR es:[edi],al
  422b5a:	mov    al,ds:0x3c568126
  422b5f:	ss aas 
  422b61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b62:	in     eax,0xd
  422b64:	inc    esi
  422b65:	or     ah,BYTE PTR [ebp-0x15]
  422b68:	fsubr  st(3),st
  422b6a:	sbb    DWORD PTR [ebx+0x22],edx
  422b6d:	dec    DWORD PTR [eax+0x50b9d5e2]
  422b73:	js     0x422b46
  422b75:	dec    ecx
  422b76:	aad    0xbe
  422b78:	sub    ch,bl
  422b7a:	pop    es
  422b7b:	sbb    ah,bh
  422b7d:	or     al,0xe1
  422b7f:	push   edi
  422b80:	std    
  422b81:	mov    bh,0x99
  422b83:	fld    TBYTE PTR gs:[edi]
  422b86:	in     eax,0x48
  422b88:	push   esp
  422b89:	mov    dh,0xd5
  422b8b:	jecxz  0x422b5e
  422b8d:	mov    esi,0x4ba4f534
  422b92:	mov    ebp,0x84afbceb
  422b97:	cli    
  422b98:	pop    ds
  422b99:	(bad)  
  422b9b:	mov    BYTE PTR [edx],al
  422b9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b9e:	sbb    ah,BYTE PTR [edx+esi*4+0x4a]
  422ba2:	mov    DWORD PTR [esi-0x611d8830],ebp
  422ba8:	fidiv  DWORD PTR [edx+0x62]
  422bab:	sti    
  422bac:	xchg   esp,eax
  422bad:	cmp    DWORD PTR [ecx+0x1fb93226],eax
  422bb3:	shl    DWORD PTR [ebx],1
  422bb5:	cli    
  422bb6:	test   BYTE PTR [ebx],dl
  422bb8:	xchg   BYTE PTR [esp+edx*1+0x28],bl
  422bbc:	sbb    dh,bl
  422bbe:	or     esp,DWORD PTR [ebx-0x4e]
  422bc1:	xlat   BYTE PTR ds:[ebx]
  422bc2:	mov    ch,0x5e
  422bc4:	cmp    ebp,DWORD PTR [ebx-0x7]
  422bc7:	(bad)  
  422bc8:	jbe    0x422b6c
  422bca:	(bad)  
  422bcb:	mov    cl,0xaa
  422bcd:	ret    0x2273
  422bd0:	adc    esi,DWORD PTR [edi-0x3f687427]
  422bd6:	fwait
  422bd7:	push   esp
  422bd8:	mov    ebp,DWORD PTR [eax+0x4513a931]
  422bde:	fnstsw WORD PTR [ecx+0x3f14fb72]
  422be4:	mov    eax,ds:0x70f17ba0
  422be9:	fdiv   QWORD PTR [esi+0x75]
  422bec:	cmc    
  422bed:	xchg   BYTE PTR [ecx-0x21],al
  422bf0:	test   DWORD PTR [edx+0x48],ebp
  422bf3:	retf   0xbe8
  422bf6:	in     al,dx
  422bf7:	retf   
  422bf8:	test   DWORD PTR [eax+ecx*4-0x1197b91c],edi
  422bff:	jge    0x422c7b
  422c01:	jo     0x422c7e
  422c03:	jae    0x422c04
  422c05:	js     0x422bba
  422c07:	cmp    BYTE PTR [edi+eiz*1+0x40],bl
  422c0b:	(bad)  
  422c0c:	and    al,0x85
  422c0e:	clc    
  422c0f:	inc    eax
  422c10:	push   ecx
  422c11:	retf   
  422c12:	aaa    
  422c13:	sub    eax,0x45bf06ea
  422c18:	test   cl,0xeb
  422c1b:	stos   BYTE PTR es:[edi],al
  422c1c:	mov    cl,0x3c
  422c1e:	cli    
  422c1f:	or     DWORD PTR [ebp-0x2a6274fc],esp
  422c25:	jb     0x422c39
  422c27:	mov    ah,dh
  422c29:	cli    
  422c2a:	or     ebx,DWORD PTR [ecx+0x4b]
  422c2d:	ins    DWORD PTR es:[edi],dx
  422c2e:	js     0x422bf2
  422c30:	adc    al,0x93
  422c32:	or     edx,DWORD PTR [edi]
  422c34:	adc    eax,0xc8c71e42
  422c39:	test   DWORD PTR [esi],0x87182d3
  422c3f:	fstp   DWORD PTR [esi]
  422c41:	fidiv  WORD PTR [esi+0x57]
  422c44:	pop    edx
  422c45:	push   ss
  422c46:	xchg   ecx,eax
  422c47:	and    BYTE PTR [edx-0x46],cl
  422c4a:	ror    DWORD PTR [eax+0x4a0f5f75],cl
  422c50:	lds    ebx,FWORD PTR [edi+esi*2]
  422c53:	pop    ebp
  422c54:	fwait
  422c55:	cli    
  422c56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c57:	scas   al,BYTE PTR es:[edi]
  422c58:	and    DWORD PTR [ecx-0x3c200585],ecx
  422c5e:	jg     0x422bf6
  422c60:	jbe    0x422c25
  422c62:	inc    edi
  422c63:	inc    esi
  422c64:	jnp    0x422c76
  422c66:	mov    ch,0xd4
  422c68:	push   0xfffffff1
  422c6a:	jge    0x422c0a
  422c6c:	xchg   edi,eax
  422c6d:	ret    
  422c6e:	mov    dl,0x8e
  422c70:	mov    eax,edi
  422c72:	inc    edi
  422c73:	push   ebp
  422c74:	cmp    al,0x2a
  422c76:	out    0xdd,eax
  422c78:	mov    ch,dl
  422c7a:	imul   ecx,DWORD PTR [edi],0x2dc3648b
  422c80:	xor    DWORD PTR [ebx+0x6176aaf4],0xffffff98
  422c87:	int    0x74
  422c89:	mov    WORD PTR [eax-0x59],gs
  422c8c:	pop    esi
  422c8d:	xchg   BYTE PTR [ebp+0x5b],bh
  422c90:	add    al,0xff
  422c92:	mov    ah,0x3c
  422c94:	popa   
  422c95:	int    0x45
  422c97:	inc    ecx
  422c98:	rcl    BYTE PTR [ebp-0x11],0xfa
  422c9c:	pop    edi
  422c9d:	icebp  
  422c9e:	xchg   edi,eax
  422c9f:	xchg   BYTE PTR [edi+0x3d2486fd],dl
  422ca5:	adc    al,0x67
  422ca7:	out    dx,eax
  422ca8:	sahf   
  422ca9:	out    dx,al
  422caa:	sub    BYTE PTR [ebp-0xf],bh
  422cad:	xchg   ecx,eax
  422cae:	inc    esp
  422caf:	enter  0x5c50,0x66
  422cb3:	iret   
  422cb4:	fwait
  422cb5:	dec    ecx
  422cb6:	fwait
  422cb7:	loopne 0x422d30
  422cb9:	push   ebx
  422cba:	jb     0x422ce8
  422cbc:	cdq    
  422cbd:	dec    ecx
  422cbe:	ret    
  422cbf:	mov    al,ds:0x8c1cd2ef
  422cc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422cc5:	adc    al,0x76
  422cc7:	pop    es
  422cc8:	inc    esp
  422cc9:	ja     0x422d26
  422ccb:	div    DWORD PTR [edi+0x32]
  422cce:	adc    ch,BYTE PTR [ebx+esi*2+0x2f]
  422cd2:	jo     0x422cda
  422cd4:	push   eax
  422cd5:	cwde   
  422cd6:	sbb    al,BYTE PTR [eax+ebx*2+0x22d138ad]
  422cdd:	sub    eax,0x16baee89
  422ce2:	pop    es
  422ce3:	into   
  422ce4:	das    
  422ce5:	cmp    ebx,esi
  422ce7:	sbb    BYTE PTR ds:0x8afc7049,dl
  422ced:	add    dh,BYTE PTR [ebp-0x3b8c3369]
  422cf3:	std    
  422cf4:	imul   esp,DWORD PTR [edi],0x5c
  422cf7:	dec    esi
  422cf8:	adc    al,ah
  422cfa:	fwait
  422cfb:	push   ecx
  422cfc:	xchg   ebx,eax
  422cfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422cfe:	(bad)  
  422cff:	push   0xe9c821b2
  422d04:	or     eax,0x7cc4a01b
  422d09:	icebp  
  422d0a:	inc    ebp
  422d0b:	jae    0x422d2f
  422d0d:	and    al,0x57
  422d0f:	xor    eax,0x3904cce8
  422d14:	loopne 0x422d01
  422d16:	push   cs
  422d17:	pop    ecx
  422d18:	jb     0x422d04
  422d1a:	push   edx
  422d1b:	jns    0x422ce9
  422d1d:	ds add eax,0xd5261d07
  422d23:	mov    ecx,DWORD PTR [esp+eiz*2+0xa]
  422d27:	repz imul ebx,DWORD PTR [ecx+eax*8-0x4c971580],0x83926e5b
  422d33:	add    eax,0xb0fe06f0
  422d38:	shr    BYTE PTR [ecx-0x664d36b6],0x72
  422d3f:	test   al,0x60
  422d41:	xchg   esi,eax
  422d42:	and    BYTE PTR [edi-0x5],bl
  422d45:	retf   0x4866
  422d48:	stc    
  422d49:	sti    
  422d4a:	cli    
  422d4b:	fwait
  422d4c:	add    BYTE PTR [eax-0x50],dh
  422d4f:	mov    bh,0xb0
  422d51:	jmp    0x422d8a
  422d53:	sbb    ebp,ebx
  422d55:	arpl   WORD PTR [eax-0x4867b95b],cx
  422d5b:	popf   
  422d5c:	or     dh,dh
  422d5e:	pop    ebx
  422d5f:	add    esp,DWORD PTR [ecx-0x5c]
  422d62:	out    dx,al
  422d63:	nop
  422d64:	jge    0x422d86
  422d66:	xchg   ebx,eax
  422d67:	mov    ebp,0xaa31ef25
  422d6c:	mov    bh,0x6e
  422d6e:	jno    0x422d2e
  422d70:	fbstp  TBYTE PTR [edx-0x3f]
  422d73:	push   ss
  422d74:	add    edi,0x54
  422d77:	test   ch,0x18
  422d7a:	mov    ebx,0x4ea52020
  422d7f:	es in  al,dx
  422d81:	fdivrp st(3),st
  422d83:	jbe    0x422dcf
  422d85:	mov    cl,BYTE PTR [ebx]
  422d87:	sahf   
  422d88:	add    al,0x9c
  422d8a:	test   BYTE PTR [edx],bl
  422d8c:	call   0x266b0c23
  422d91:	cmp    edi,edx
  422d93:	jl     0x422dba
  422d95:	mov    eax,0x16118d59
  422d9a:	lds    eax,FWORD PTR [edx+0x3c]
  422d9d:	frstpm(287 only) 
  422d9f:	mov    bl,0xbf
  422da1:	dec    edi
  422da2:	mov    esp,edx
  422da4:	jnp    0x422d4c
  422da6:	fbld   TBYTE PTR [esi-0x684374bd]
  422dac:	int3   
  422dad:	push   cs
  422dae:	xchg   BYTE PTR [edx*2+0x249a7cbc],bl
  422db5:	push   esp
  422db6:	adc    BYTE PTR [ebx+eiz*8+0x1bc703a],0xce
  422dbe:	cmp    DWORD PTR [esi],0x6cd98ea7
  422dc4:	pop    edx
  422dc5:	mov    ds:0xa9b7ac9,eax
  422dca:	das    
  422dcb:	stc    
  422dcc:	stc    
  422dcd:	int    0x7c
  422dcf:	pop    ss
  422dd0:	test   al,bl
  422dd2:	add    eax,0x85c2d293
  422dd7:	push   ecx
  422dd8:	ja     0x422dfc
  422dda:	pop    ebp
  422ddb:	fild   DWORD PTR [ebp+0x4c]
  422dde:	int    0x19
  422de0:	push   edx
  422de1:	xlat   BYTE PTR ss:[ebx]
  422de3:	std    
  422de4:	dec    eax
  422de5:	push   0x5890092
  422dea:	(bad)  
  422deb:	xchg   edx,eax
  422dec:	popa   
  422ded:	jnp    0x422dc3
  422def:	adc    esp,DWORD PTR [ebx+0x28]
  422df2:	and    cl,0x85
  422df5:	fwait
  422df6:	pop    edx
  422df7:	sbb    al,0xbf
  422df9:	imul   esp,esi,0xfffffff1
  422dfc:	jge    0x422e46
  422dfe:	add    edx,DWORD PTR [edi+0x2df64e35]
  422e04:	leave  
  422e05:	mov    ds:0x5f5808e1,al
  422e0a:	es cmp bl,dh
  422e0d:	outs   dx,DWORD PTR ds:[esi]
  422e0e:	rol    edx,0x6c
  422e11:	add    dh,BYTE PTR [esi]
  422e13:	(bad)  
  422e14:	push   0x15
  422e16:	xchg   edi,eax
  422e17:	das    
  422e18:	js     0x422e4f
  422e1a:	jmp    0x422e2d
  422e1c:	xchg   ecx,eax
  422e1d:	jl     0x422e1a
  422e1f:	in     al,0x22
  422e21:	es push ebp
  422e23:	adc    BYTE PTR [ebx+0x1d976eb8],0x20
  422e2a:	gs inc edx
  422e2c:	cmp    ah,BYTE PTR [esi+0x7d2da8a6]
  422e32:	mov    ch,0x2b
  422e34:	ins    DWORD PTR es:[edi],dx
  422e35:	stos   DWORD PTR es:[edi],eax
  422e36:	lea    ebp,[ecx+0x4deef9d2]
  422e3c:	pop    ebx
  422e3d:	test   BYTE PTR [esi-0x5b],bl
  422e40:	les    ebx,FWORD PTR [eax-0x20]
  422e43:	mov    ds:0xe2f9220d,eax
  422e48:	cli    
  422e49:	scas   al,BYTE PTR es:[edi]
  422e4a:	ja     0x422ded
  422e4c:	inc    edi
  422e4d:	jp     0x422e7b
  422e4f:	mov    DWORD PTR [edx],esi
  422e51:	scas   al,BYTE PTR es:[edi]
  422e52:	fdivr  QWORD PTR [ebx]
  422e54:	sbb    al,0x2e
  422e56:	lods   eax,DWORD PTR ds:[esi]
  422e57:	push   esi
  422e58:	and    BYTE PTR [ecx-0x7ed2a76d],0xb1
  422e5f:	jge    0x422e42
  422e61:	cmp    BYTE PTR [edi+esi*4-0xeb2a757],dl
  422e68:	pop    es
  422e69:	jle    0x422ebf
  422e6b:	inc    edi
  422e6c:	add    esp,ebx
  422e6e:	dec    esi
  422e6f:	ins    BYTE PTR es:[edi],dx
  422e70:	das    
  422e71:	mov    bl,0x52
  422e73:	xchg   ecx,eax
  422e74:	push   ecx
  422e75:	cmp    DWORD PTR [eax+0x0],eax
  422e78:	imul   ebx,esp,0x5808f624
  422e7e:	test   eax,0x93d630dc
  422e83:	adc    DWORD PTR [esi-0x1e0a460],ebx
  422e89:	(bad)  
  422e8a:	jmp    DWORD PTR [edi-0x656fb294]
  422e90:	gs test esp,0x27c6ab0f
  422e97:	sbb    esi,esi
  422e99:	(bad)  
  422e9a:	shl    DWORD PTR [eax-0x394bcc27],0x14
  422ea1:	pop    ds
  422ea2:	loop   0x422f1e
  422ea4:	and    BYTE PTR [esi+0x50],0xc7
  422ea8:	popf   
  422ea9:	repz xor al,0x66
  422eac:	jle    0x422eb2
  422eae:	xor    eax,DWORD PTR [ebx]
  422eb0:	and    al,0x8e
  422eb2:	iret   
  422eb3:	mov    al,0x69
  422eb5:	or     ah,BYTE PTR [esi-0x4eed806d]
  422ebb:	mov    ah,0xdc
  422ebd:	add    al,0x25
  422ebf:	xchg   ecx,eax
  422ec0:	push   ebx
  422ec1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ec2:	outs   dx,BYTE PTR ds:[esi]
  422ec3:	loop   0x422e82
  422ec5:	clc    
  422ec6:	mov    ebp,0x6e2c4ca0
  422ecb:	sti    
  422ecc:	sub    eax,0x48c0013e
  422ed1:	(bad)  
  422ed2:	out    0xb9,eax
  422ed4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ed5:	sbb    ebp,DWORD PTR [ebp-0x60]
  422ed8:	outs   dx,DWORD PTR ds:[esi]
  422ed9:	loopne 0x422e6d
  422edb:	sbb    ah,BYTE PTR [ebx-0x115aa8b6]
  422ee1:	rcl    ch,0x4d
  422ee4:	cmp    dl,ch
  422ee6:	xchg   DWORD PTR [ebp+esi*8+0x37],esi
  422eea:	loopne 0x422ee3
  422eec:	imul   edx,DWORD PTR [edx-0x46cc3f6],0xfa40ec56
  422ef6:	ret    
  422ef7:	sub    ebx,DWORD PTR [eax-0x14]
  422efa:	push   ebx
  422efb:	push   0x36
  422efd:	lock dec ebx
  422eff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f00:	repz mov dl,0x71
  422f03:	and    ch,0xc6
  422f06:	mov    ds:0x38da9574,eax
  422f0b:	rcr    DWORD PTR [esi+0x3eda496c],cl
  422f11:	in     al,0xfa
  422f13:	push   ecx
  422f14:	cmp    ch,bh
  422f16:	or     esp,ebp
  422f18:	das    
  422f19:	and    DWORD PTR [ecx-0x7547828e],eax
  422f1f:	mov    BYTE PTR [edi-0x1d],0x1e
  422f23:	xchg   esp,eax
  422f24:	xor    eax,0x1c64279f
  422f29:	addr16 imul ebp,ebx,0xa0f2254e
  422f30:	fstp   DWORD PTR [eax-0x42]
  422f33:	ja     0x422eb6
  422f35:	in     al,dx
  422f36:	cmp    al,BYTE PTR gs:[ecx]
  422f39:	loopne 0x422ee8
  422f3b:	out    dx,eax
  422f3c:	pusha  
  422f3d:	fidiv  WORD PTR [ebx]
  422f3f:	imul   esi,DWORD PTR [esi-0x67822998],0x24
  422f46:	daa    
  422f47:	in     al,dx
  422f48:	aaa    
  422f49:	jle    0x422eec
  422f4b:	fwait
  422f4c:	cmc    
  422f4d:	rol    BYTE PTR [ecx+0x4cc9a222],1
  422f53:	mov    al,ds:0xf53fa08e
  422f58:	mov    dl,0xca
  422f5a:	outs   dx,BYTE PTR ds:[esi]
  422f5b:	xchg   ebx,eax
  422f5c:	inc    esi
  422f5d:	in     eax,dx
  422f5e:	mov    ecx,0xc36e4cbd
  422f63:	pop    ds
  422f64:	xchg   DWORD PTR [ebp+0x1d],ebx
  422f67:	mov    dl,0x49
  422f69:	pop    esp
  422f6a:	xchg   edi,eax
  422f6b:	mov    eax,ds:0xfc4f91c
  422f70:	jp     0x422fa6
  422f72:	popf   
  422f73:	mov    al,0xd9
  422f75:	push   ebx
  422f76:	cmp    BYTE PTR [ebx+0x7f],ah
  422f79:	dec    edx
  422f7a:	retf   0xd4e6
  422f7d:	xlat   BYTE PTR ds:[ebx]
  422f7e:	cld    
  422f7f:	cwde   
  422f80:	cli    
  422f81:	ins    DWORD PTR es:[edi],dx
  422f82:	dec    ebx
  422f83:	shl    BYTE PTR [ebp-0x39],cl
  422f86:	jns    0x422fc3
  422f88:	clc    
  422f89:	adc    esi,DWORD PTR [ebx]
  422f8b:	mov    BYTE PTR [eax+0x18b12f75],bh
  422f91:	je     0x422f51
  422f93:	scas   eax,DWORD PTR es:[edi]
  422f94:	inc    edi
  422f95:	sub    ebx,DWORD PTR [ebx-0x4097e33b]
  422f9b:	jnp    0x422fd5
  422f9d:	jp     0x422ffa
  422f9f:	xchg   ebx,eax
  422fa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422fa1:	call   FWORD PTR [edx+eiz*1+0x687105de]
  422fa8:	les    esp,FWORD PTR [eax-0x55e9d7a3]
  422fae:	inc    ecx
  422faf:	push   edx
  422fb0:	sbb    ch,BYTE PTR ds:0x8a8fe6b0
  422fb6:	hlt    
  422fb7:	push   ss
  422fb8:	out    dx,al
  422fb9:	cli    
  422fba:	lds    ebp,FWORD PTR [ebx]
  422fbc:	test   bl,0xe5
  422fbf:	and    eax,0x197d9f51
  422fc4:	ret    
  422fc5:	scas   eax,DWORD PTR es:[edi]
  422fc6:	sub    ebp,DWORD PTR ds:0xd147357e
  422fcc:	(bad)  
  422fcd:	mov    esi,0xd2984498
  422fd2:	mov    eax,0x6631f32
  422fd7:	pushf  
  422fd8:	adc    BYTE PTR [esi+0x62a810c3],dh
  422fde:	fsub   DWORD PTR [esi-0x71]
  422fe1:	outs   dx,DWORD PTR ds:[esi]
  422fe2:	mov    cl,0xc9
  422fe4:	fnstcw WORD PTR [edx+0x62]
  422fe7:	call   0x68b13707
  422fec:	mov    WORD PTR [esi-0x4a306348],gs
  422ff2:	xchg   edx,eax
  422ff3:	sub    esi,ebx
  422ff5:	and    al,0x83
  422ff7:	rcl    BYTE PTR [ecx+0x126f8011],1
  422ffd:	xor    bh,BYTE PTR [edi+0x7b2add38]
  423003:	push   es
  423004:	or     bl,BYTE PTR [eax]
  423006:	stos   DWORD PTR es:[edi],eax
  423007:	not    ecx
  423009:	(bad)  
  42300a:	test   eax,0xda4b23b9
  42300f:	call   0x63aa8f47
  423014:	repnz sbb al,0x13
  423017:	sub    ch,BYTE PTR [edx+0x156320db]
  42301d:	fmul   st,st(6)
  42301f:	rol    DWORD PTR [edi+0x4b728968],cl
  423025:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423026:	push   esp
  423027:	and    esp,edi
  423029:	jne    0x423033
  42302b:	mov    ch,0xd4
  42302d:	push   ds
  42302e:	xchg   edi,eax
  42302f:	data16 outs dx,BYTE PTR ds:[esi]
  423031:	fwait
  423032:	mov    eax,ds:0xe4e4897d
  423037:	pop    edx
  423038:	mov    BYTE PTR [esi-0x42bdd7b5],bl
  42303e:	das    
  42303f:	inc    esi
  423040:	fisttp QWORD PTR [esi]
  423042:	pop    eax
  423043:	les    eax,FWORD PTR [ebx-0x328d8912]
  423049:	in     al,0xa2
  42304b:	sar    BYTE PTR [esi-0x13],0xf4
  42304f:	mov    cl,0xf7
  423051:	or     eax,0x619cfad6
  423056:	adc    BYTE PTR [ecx+0x7f7390f4],bl
  42305c:	fld    st(3)
  42305e:	pop    es
  42305f:	scas   al,BYTE PTR es:[edi]
  423060:	dec    eax
  423061:	adc    eax,0x9bcc8b87
  423066:	xor    bl,al
  423068:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423069:	adc    DWORD PTR [edx],esp
  42306b:	call   0xacfe9cf8
  423070:	(bad)  
  423071:	adc    BYTE PTR [eax+0x7],bl
  423074:	mov    DWORD PTR [ebp-0x63],0x3e32d14e
  42307b:	rol    BYTE PTR [esp+edi*1-0x30],0x8d
  423080:	inc    ebp
  423081:	dec    ebx
  423082:	push   ebx
  423083:	retf   
  423084:	inc    ecx
  423085:	lods   al,BYTE PTR ds:[esi]
  423086:	rcl    BYTE PTR [ebx+0x5d7c01ad],1
  42308c:	das    
  42308d:	ror    DWORD PTR ds:[ecx],1
  423090:	(bad)  [ebx]
  423092:	cmc    
  423093:	cmp    bl,bl
  423095:	call   0x336f:0x5ff3bdc6
  42309c:	cmp    ah,BYTE PTR [eax]
  42309e:	fld    TBYTE PTR [eax+0x3c]
  4230a1:	sbb    bl,BYTE PTR [edi+0x22aa24b8]
  4230a7:	out    dx,al
  4230a8:	aam    0x8
  4230aa:	jmp    0x4230b3
  4230ac:	out    dx,eax
  4230ad:	in     eax,dx
  4230ae:	fdiv   QWORD PTR [edx-0x35927b92]
  4230b4:	imul   DWORD PTR [ebp-0x35]
  4230b7:	xor    eax,0x336a3116
  4230bc:	stos   DWORD PTR es:[edi],eax
  4230bd:	out    0x66,al
  4230bf:	arpl   WORD PTR [ecx-0x24],bx
  4230c2:	jae    0x4230c1
  4230c4:	push   eax
  4230c5:	fwait
  4230c6:	pop    ds
  4230c7:	xor    BYTE PTR ds:[esi],cl
  4230ca:	xlat   BYTE PTR ds:[ebx]
  4230cb:	(bad)  
  4230cc:	arpl   WORD PTR [edi-0x338c3b31],cx
  4230d2:	push   ds
  4230d3:	xchg   ebp,eax
  4230d4:	ret    
  4230d5:	mov    bl,0xb9
  4230d7:	dec    edi
  4230d8:	dec    ecx
  4230d9:	mov    ebp,0x1b01367c
  4230de:	aad    0x22
  4230e0:	loope  0x42307a
  4230e2:	add    BYTE PTR [ebx+0x66],dh
  4230e5:	lods   al,BYTE PTR ds:[esi]
  4230e6:	mov    WORD PTR [eax],es
  4230e8:	cmp    ebx,ebx
  4230ea:	aaa    
  4230eb:	ror    DWORD PTR [esi-0x29036ac6],0x72
  4230f2:	sahf   
  4230f3:	lods   al,BYTE PTR es:[esi]
  4230f5:	push   ebp
  4230f6:	adc    DWORD PTR [ebx],edi
  4230f8:	xor    ch,ch
  4230fa:	mov    ah,BYTE PTR [esi]
  4230fc:	pop    ss
  4230fd:	push   eax
  4230fe:	div    DWORD PTR [edi]
  423100:	dec    edx
  423101:	adc    DWORD PTR [edx-0x4e],ebx
  423104:	fcom   QWORD PTR [edi+0x8f0df91]
  42310a:	mov    edi,0xecd1ddde
  42310f:	add    cl,BYTE PTR [edi]
  423111:	outs   dx,BYTE PTR ds:[esi]
  423112:	jno    0x42316f
  423114:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423116:	push   ebx
  423117:	call   0x2823:0x16bf34fe
  42311e:	aad    0xa3
  423120:	out    dx,eax
  423121:	cmp    esi,DWORD PTR [esi+ecx*8-0x5f]
  423125:	cli    
  423126:	fbld   TBYTE PTR [eax+0x18]
  423129:	dec    eax
  42312a:	(bad)  
  42312c:	fwait
  42312d:	outs   dx,BYTE PTR ds:[esi]
  42312e:	std    
  42312f:	inc    esp
  423130:	call   0x616:0x902e4379
  423137:	cdq    
  423138:	mov    dh,0xb0
  42313a:	push   esp
  42313b:	jp     0x4230f1
  42313d:	xor    eax,0x48a3d5b7
  423142:	adc    al,0x3b
  423144:	cwde   
  423145:	popa   
  423146:	inc    eax
  423147:	pop    esp
  423148:	jmp    0x4230f3
  42314a:	stos   DWORD PTR es:[edi],eax
  42314b:	arpl   di,sp
  42314d:	xchg   BYTE PTR [ebx-0x60],ch
  423150:	jnp    0x423126
  423152:	or     ebx,DWORD PTR [ebp-0x74]
  423155:	xor    ebp,DWORD PTR [eax-0x6c3e2db2]
  42315b:	push   es
  42315c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42315d:	push   esi
  42315e:	add    al,0xad
  423160:	loopne 0x423182
  423162:	sti    
  423163:	stos   BYTE PTR es:[edi],al
  423164:	out    dx,al
  423165:	or     al,0x9d
  423167:	mov    edi,0x9f4e76ba
  42316c:	mov    bh,0xc
  42316e:	cmp    BYTE PTR [esi],al
  423170:	cmp    edx,eax
  423172:	adc    eax,0xb270fa36
  423177:	add    al,0x69
  423179:	adc    dl,bh
  42317b:	adc    ebp,ecx
  42317d:	pop    ss
  42317e:	xlat   BYTE PTR ds:[ebx]
  42317f:	dec    ebx
  423180:	and    eax,0xc7e4e401
  423185:	jmp    0x423179
  423187:	cdq    
  423188:	sub    bl,al
  42318a:	fs mov esp,0xa96abcca
  423190:	stos   DWORD PTR es:[edi],eax
  423191:	mul    DWORD PTR [ebx-0x2a14978d]
  423197:	nop
  423198:	lds    esp,FWORD PTR fs:[ecx]
  42319b:	push   0xd2a6e3d2
  4231a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4231a1:	sub    edx,DWORD PTR [eax+0x24874d1c]
  4231a7:	in     al,dx
  4231a8:	fs icebp 
  4231aa:	test   al,0xd7
  4231ac:	jmp    0x2e259299
  4231b1:	jmp    FWORD PTR [edx+0x68]
  4231b4:	adc    bl,0xc5
  4231b7:	clc    
  4231b8:	stos   DWORD PTR es:[edi],eax
  4231b9:	call   0xcab5:0xb2c40f1c
  4231c0:	mov    bl,0x2
  4231c2:	shr    edx,cl
  4231c4:	xor    al,0x23
  4231c6:	ds pop ds
  4231c8:	ror    BYTE PTR [ebp+0x42],1
  4231cb:	jg     0x423177
  4231cd:	sbb    al,0xc9
  4231cf:	mov    al,0xa2
  4231d1:	into   
  4231d2:	ins    BYTE PTR es:[edi],dx
  4231d3:	fnsave [eax+0x8]
  4231d6:	rcr    bl,cl
  4231d8:	sbb    al,0x44
  4231da:	cli    
  4231db:	mov    ecx,0xc92f78b5
  4231e0:	and    ah,BYTE PTR [esp+edx*4+0x2e4b7d00]
  4231e7:	mov    ds:0x6b4af18a,eax
  4231ec:	rcl    edx,0x10
  4231ef:	cli    
  4231f0:	sbb    BYTE PTR [edi],0x95
  4231f3:	call   0x7ba6:0xe0666ed6
  4231fa:	rol    DWORD PTR [esi],1
  4231fc:	fdivrp st(5),st
  4231fe:	pop    eax
  4231ff:	(bad)  
  423201:	xchg   edi,eax
  423202:	jecxz  0x4231c8
  423204:	jle    0x4231c1
  423206:	outs   dx,DWORD PTR ds:[esi]
  423207:	inc    eax
  423208:	adc    DWORD PTR [esi*1+0x67f43c1c],esi
  42320f:	mov    dh,0xfa
  423211:	(bad)  
  423212:	scas   eax,DWORD PTR es:[edi]
  423213:	dec    esp
  423214:	mov    eax,ds:0x4bc22d86
  423219:	test   BYTE PTR [ebp-0x2fced667],ah
  42321f:	xchg   esp,eax
  423220:	sbb    DWORD PTR [eax+0x5f],esp
  423223:	into   
  423224:	mov    dl,BYTE PTR [ebp-0x5b]
  423227:	inc    eax
  423228:	pop    ecx
  423229:	lea    esi,[edx+0x78]
  42322c:	push   es
  42322d:	in     eax,dx
  42322e:	ss ins DWORD PTR es:[edi],dx
  423230:	stos   DWORD PTR es:[edi],eax
  423231:	pop    edi
  423232:	rcl    DWORD PTR [ecx],1
  423234:	xor    bl,BYTE PTR [eax+ebp*4-0x1dd20280]
  42323b:	mov    DWORD PTR [edi],esi
  42323d:	fisttp WORD PTR [edi-0x54]
  423240:	push   0xffffffe0
  423242:	cld    
  423243:	mov    edi,0xbeb0f582
  423248:	mov    dh,bl
  42324a:	and    eax,ebp
  42324c:	inc    edx
  42324d:	stos   BYTE PTR es:[edi],al
  42324e:	mov    bh,0xbd
  423250:	sti    
  423251:	sti    
  423252:	jbe    0x423248
  423254:	pop    esi
  423255:	push   0x6d1b2ff6
  42325a:	mov    DWORD PTR [ebp-0x30114483],ebp
  423260:	ficomp WORD PTR [edi+0x6a3361ce]
  423266:	fisub  DWORD PTR ds:0x11fb6e1
  42326c:	inc    eax
  42326d:	push   0x3a
  42326f:	push   ebx
  423270:	(bad)  
  423271:	clc    
  423272:	dec    edi
  423273:	(bad)  
  423274:	std    
  423275:	scas   eax,DWORD PTR es:[edi]
  423276:	ds in  al,dx
  423278:	and    eax,DWORD PTR [edx]
  42327a:	(bad)  
  42327b:	in     al,dx
  42327c:	dec    ebx
  42327d:	out    dx,eax
  42327e:	jno    0x42326e
  423280:	les    edx,FWORD PTR [ecx+0x6]
  423283:	in     al,0x9d
  423285:	test   al,0x87
  423287:	or     ah,BYTE PTR [esi-0x2ac4d58b]
  42328d:	cld    
  42328e:	push   edi
  42328f:	in     al,dx
  423290:	mov    ah,0xe9
  423292:	pop    ss
  423293:	pusha  
  423294:	cdq    
  423295:	adc    al,0xf8
  423297:	inc    esp
  423298:	(bad)  
  423299:	sbb    al,0xb6
  42329b:	push   0xe222f0a3
  4232a0:	mov    edi,0xd09739a3
  4232a5:	cld    
  4232a6:	push   esp
  4232a7:	push   ds
  4232a8:	jmp    0x58cfd330
  4232ad:	jmp    0x42328b
  4232af:	add    al,0xb0
  4232b1:	inc    esp
  4232b2:	push   ebx
  4232b3:	jmp    0x9927:0x6466d648
  4232ba:	pop    edx
  4232bb:	lods   eax,DWORD PTR ds:[esi]
  4232bc:	jne    0x42327f
  4232be:	and    eax,0xad8771fd
  4232c3:	mov    ebp,0xdf88c0f5
  4232c8:	aam    0x3
  4232ca:	pop    ecx
  4232cb:	push   cs
  4232cc:	mov    es,WORD PTR [eax]
  4232ce:	sti    
  4232cf:	out    dx,eax
  4232d0:	mov    ebx,0x68dabc58
  4232d5:	push   cs
  4232d6:	jo     0x4232b7
  4232d8:	adc    al,0x0
  4232da:	mov    gs,WORD PTR [ebx+ebp*1+0x43fe0735]
  4232e1:	jne    0x423326
  4232e3:	jo     0x4232f6
  4232e5:	lods   al,BYTE PTR ds:[esi]
  4232e6:	dec    ebp
  4232e7:	nop
  4232e8:	xchg   ebx,eax
  4232e9:	add    ch,BYTE PTR [ecx]
  4232eb:	outs   dx,BYTE PTR ds:[esi]
  4232ec:	into   
  4232ed:	mov    ds:0x4a646592,al
  4232f2:	aaa    
  4232f3:	mov    ch,0xca
  4232f5:	pop    es
  4232f6:	pop    ds
  4232f7:	(bad)  
  4232f9:	scas   eax,DWORD PTR es:[edi]
  4232fa:	loop   0x4232b5
  4232fc:	and    dl,al
  4232fe:	lods   al,BYTE PTR ds:[esi]
  4232ff:	cmp    al,0x80
  423301:	mov    esp,0x5bdfc15a
  423306:	push   cs
  423307:	add    eax,0xd4d13b19
  42330c:	test   DWORD PTR [eax+0x551d98f6],edi
  423312:	aam    0x30
  423314:	enter  0x9648,0x45
  423318:	int3   
  423319:	dec    esi
  42331a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42331b:	and    ah,BYTE PTR [edi+0x6b24c56f]
  423321:	cmp    DWORD PTR [ecx],ecx
  423323:	xchg   esp,eax
  423324:	sbb    esi,edx
  423326:	pop    eax
  423327:	xchg   ecx,eax
  423328:	mov    dh,BYTE PTR [esi+0x31]
  42332b:	sub    eax,DWORD PTR [edi+0x69a8b78d]
  423331:	push   0xffffffbe
  423333:	mov    bh,BYTE PTR [esi+0x2ba01574]
  423339:	sub    DWORD PTR [esi+0x7c],edi
  42333c:	ins    BYTE PTR es:[edi],dx
  42333d:	push   ds
  42333e:	lds    ecx,FWORD PTR [edi]
  423340:	dec    ecx
  423341:	test   al,0xaf
  423343:	inc    eax
  423344:	test   BYTE PTR [eax-0x6c],0x19
  423348:	imul   esi,ecx,0xffffff80
  42334b:	ror    DWORD PTR [eax],0x74
  42334e:	arpl   WORD PTR [ebx-0x249bb531],di
  423354:	into   
  423355:	mov    ecx,0xb1d49c09
  42335a:	repnz cmp esi,DWORD PTR [ebp+0x4e]
  42335e:	in     al,dx
  42335f:	fnstenv [ebp+0x8]
  423362:	ja     0x4232fe
  423364:	mov    edx,DWORD PTR [ebx-0xaf900bc]
  42336a:	into   
  42336b:	or     eax,0xee1fc537
  423370:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423371:	jge    0x423303
  423373:	call   0x73f6ce37
  423378:	test   eax,0xd8580e12
  42337d:	push   esi
  42337e:	cmp    eax,0xfa0a853b
  423383:	(bad)  
  423384:	push   esi
  423385:	pmulhuw mm3,QWORD PTR [edi-0x430397a1]
  42338c:	xlat   BYTE PTR ds:[ebx]
  42338d:	test   al,0x58
  42338f:	xor    BYTE PTR [esi],dh
  423391:	push   eax
  423392:	jae    0x4233c0
  423394:	leave  
  423395:	rol    DWORD PTR [edi-0x19ce3824],cl
  42339b:	scas   eax,DWORD PTR es:[edi]
  42339c:	inc    esi
  42339d:	mov    BYTE PTR [ecx+0xf],dh
  4233a0:	cli    
  4233a1:	ins    BYTE PTR es:[edi],dx
  4233a2:	(bad)  
  4233a3:	push   0xffffffeb
  4233a5:	add    ebp,DWORD PTR [eax+0x1b570]
  4233ab:	pop    edi
  4233ac:	mov    ds,ebp
  4233ae:	or     DWORD PTR [eax],0xf4b9c623
  4233b4:	pop    ebp
  4233b5:	mov    ecx,0x572b7687
  4233ba:	mov    bl,0x1a
  4233bc:	das    
  4233bd:	ins    DWORD PTR es:[edi],dx
  4233be:	rcr    ch,1
  4233c0:	xchg   esp,eax
  4233c1:	add    ecx,ecx
  4233c3:	iret   
  4233c4:	mov    bh,BYTE PTR [ebx-0x12]
  4233c7:	jae    0x423439
  4233c9:	aaa    
  4233ca:	jo     0x4233fa
  4233cc:	pop    eax
  4233cd:	cld    
  4233ce:	imul   BYTE PTR [ecx+0x1c]
  4233d1:	call   0xe8ea022
  4233d6:	mov    edx,0x5e6e05a3
  4233db:	add    DWORD PTR [edx+0x7996ef82],0x59536cd3
  4233e5:	pop    ss
  4233e6:	mov    eax,esp
  4233e8:	xor    al,0x17
  4233ea:	pop    eax
  4233eb:	xchg   ebp,eax
  4233ec:	mov    edx,0xbbd2c3c7
  4233f1:	fwait
  4233f2:	arpl   dx,di
  4233f4:	and    BYTE PTR [edx],al
  4233f6:	mov    ds:0x20af865,al
  4233fb:	mov    bh,0xbc
  4233fd:	and    DWORD PTR [edi-0x5a1ad3cc],ebx
  423403:	sbb    dl,BYTE PTR [edx]
  423405:	pop    es
  423406:	imul   ecx,DWORD PTR [eax+0xf],0xffffffdc
  42340a:	sbb    eax,0x81ade420
  42340f:	mov    al,0x97
  423411:	mov    ebp,0xc61dce67
  423416:	xchg   BYTE PTR [eax-0x1982b03b],bl
  42341c:	add    DWORD PTR [ecx-0x7495c042],esp
  423422:	cs loope 0x4233f3
  423425:	xor    dl,BYTE PTR [ebx-0x68e1cef1]
  42342b:	dec    ebp
  42342c:	in     al,0x31
  42342e:	push   edx
  42342f:	(bad)  
  423430:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423431:	ins    DWORD PTR es:[edi],dx
  423432:	test   BYTE PTR [ecx+0x6d9b1c4f],cl
  423438:	dec    esi
  423439:	dec    esp
  42343a:	jg     0x423431
  42343c:	add    eax,0x72f50900
  423441:	cld    
  423442:	mov    ebp,0x61a98ab4
  423447:	sub    al,0xba
  423449:	call   0x6919:0x744b0bc1
  423450:	shl    BYTE PTR [ecx+0x4a],1
  423453:	out    dx,al
  423454:	int3   
  423455:	xchg   BYTE PTR [ebp-0x3c7cf976],dh
  42345b:	sbb    dh,ah
  42345d:	fs dec ebx
  42345f:	push   es
  423460:	mov    ebx,?
  423462:	jecxz  0x423442
  423464:	jo     0x42346a
  423466:	in     al,0xa3
  423468:	inc    esp
  423469:	ds jnp 0x4234ac
  42346c:	mov    edx,DWORD PTR [edx]
  42346e:	sub    al,0x45
  423470:	jns    0x423473
  423472:	loop   0x4234b2
  423474:	pop    ds
  423475:	fld    QWORD PTR [esi+0x3c12c0f9]
  42347b:	bound  ecx,QWORD PTR [ebx]
  42347d:	dec    edi
  42347e:	shl    ch,1
  423480:	popf   
  423481:	dec    ebp
  423482:	mov    ebx,0xd41ebefc
  423487:	retf   
  423488:	fst    st(6)
  42348a:	repnz es es dec eax
  42348e:	nop
  42348f:	xor    eax,0xb7f8f475
  423494:	push   esi
  423495:	xor    esi,eax
  423497:	shr    bl,cl
  423499:	shr    BYTE PTR [ebp+0x4b],1
  42349c:	fwait
  42349d:	mov    edi,0x5d85d731
  4234a2:	repnz cmp BYTE PTR [edi-0x21a5c7e8],dl
  4234a9:	sub    BYTE PTR [ebx+0x10],al
  4234ac:	mul    DWORD PTR [ecx]
  4234ae:	ret    0x7dd
  4234b1:	push   edx
  4234b2:	xchg   ebx,eax
  4234b3:	cmp    eax,0x69057999
  4234b8:	in     eax,dx
  4234b9:	imul   DWORD PTR [edi-0x5b]
  4234bc:	mov    edi,0x5d8a3020
  4234c1:	je     0x4234b3
  4234c3:	fidiv  WORD PTR [ebp+0x46]
  4234c6:	idiv   BYTE PTR [ecx-0x6675aca2]
  4234cc:	adc    eax,0x67f2b187
  4234d1:	popa   
  4234d2:	dec    ebp
  4234d3:	ret    
  4234d4:	mov    BYTE PTR [ebp+0x58fb201e],cl
  4234da:	sti    
  4234db:	adc    al,0xef
  4234dd:	retf   
  4234de:	jns    0x423522
  4234e0:	xchg   DWORD PTR [edi-0x4e],ebx
  4234e3:	pop    ss
  4234e4:	pop    ebp
  4234e5:	out    0x98,al
  4234e7:	and    eax,0x75dadfdf
  4234ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4234ed:	push   ss
  4234ee:	imul   edi,DWORD PTR [edi],0xa698bfbf
  4234f4:	popa   
  4234f5:	popa   
  4234f6:	jge    0x423511
  4234f8:	pop    eax
  4234f9:	mov    bh,0xa2
  4234fb:	cli    
  4234fc:	shr    dh,0x63
  4234ff:	and    dl,bh
  423501:	cwde   
  423502:	bt     DWORD PTR [esi+0x6c71e4d],ecx
  423509:	jb     0x423502
  42350b:	mov    cl,bh
  42350d:	xchg   DWORD PTR [esi+0x1b],edi
  423510:	jnp    0x4234b5
  423512:	leave  
  423513:	repz xor edx,edi
  423516:	idiv   BYTE PTR [ebx-0x1173c83d]
  42351c:	loope  0x423577
  42351e:	in     eax,0xfd
  423520:	cwde   
  423521:	mov    ch,0x52
  423523:	sbb    BYTE PTR [eax-0x49],ah
  423526:	push   ebx
  423527:	int    0xd4
  423529:	aaa    
  42352a:	popf   
  42352b:	jb     0x423510
  42352d:	and    dh,BYTE PTR [edx]
  42352f:	fld    QWORD PTR [ecx+0x35]
  423532:	arpl   WORD PTR [edi-0x66],si
  423535:	(bad)  
  423536:	repnz push ebx
  423538:	fcomp  QWORD PTR [eax+ebx*8-0xb9e6b85]
  42353f:	sub    eax,0x7630b487
  423544:	loope  0x42355f
  423546:	adc    BYTE PTR [edi+0x5a],0x91
  42354a:	hlt    
  42354b:	pop    ecx
  42354c:	je     0x423558
  42354e:	call   0x9c451faa
  423553:	mov    ds:0xf0eeab05,al
  423558:	mov    eax,0x5fc012f2
  42355d:	sbb    bh,BYTE PTR [ebp+0x65b269b3]
  423563:	inc    eax
  423564:	sbb    al,0xf3
  423566:	les    eax,FWORD PTR [ebx]
  423568:	or     esp,esp
  42356a:	jne    0x423529
  42356c:	cmp    al,0xd1
  42356e:	adc    ah,BYTE PTR [edx+ecx*1]
  423571:	xchg   BYTE PTR [edi-0x77],dl
  423574:	ins    DWORD PTR es:[edi],dx
  423575:	stc    
  423576:	xor    ah,dh
  423578:	repz dec ebx
  42357a:	imul   ebp,DWORD PTR [edx+0x11],0xffffffa3
  42357e:	retf   
  42357f:	popa   
  423580:	jmp    0xaaaa1f61
  423585:	adc    al,0x28
  423587:	jne    0x42356c
  423589:	push   eax
  42358a:	leave  
  42358b:	or     eax,0x12204708
  423590:	pop    ebx
  423591:	addr16 pop esp
  423593:	cmp    dh,0x87
  423596:	push   es
  423597:	sti    
  423598:	push   esi
  423599:	and    edi,edi
  42359b:	cli    
  42359c:	xchg   ebx,eax
  42359d:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  42359f:	mov    ds:0xe26ce5b2,al
  4235a4:	xor    DWORD PTR [ebx-0x77],0x47b5ee02
  4235ab:	xchg   BYTE PTR [ebp-0x53b176dc],ah
  4235b1:	popa   
  4235b2:	pushf  
  4235b3:	inc    eax
  4235b4:	ret    
  4235b5:	leave  
  4235b6:	fsubp  st(3),st
  4235b8:	mov    BYTE PTR [esi],ch
  4235ba:	dec    esp
  4235bb:	or     ch,cl
  4235bd:	ss pop ss
  4235bf:	aam    0x8a
  4235c1:	sub    edi,DWORD PTR [ebx-0xf674928]
  4235c7:	sub    dl,bh
  4235c9:	adc    ch,BYTE PTR ds:0xbd20a0e9
  4235cf:	add    eax,esi
  4235d1:	in     al,0xc2
  4235d3:	sbb    BYTE PTR [edi+0x5ae15231],dh
  4235d9:	ss push es
  4235db:	repz push ebp
  4235dd:	jle    0x42361a
  4235df:	inc    edi
  4235e0:	add    BYTE PTR [ecx],bh
  4235e2:	jbe    0x42358f
  4235e4:	addr16 mov ebp,0xdca1ccb6
  4235ea:	or     al,0x81
  4235ec:	push   es
  4235ed:	sub    DWORD PTR [edi+0x2f],ebp
  4235f0:	adc    esi,edx
  4235f2:	sub    DWORD PTR [edx],esi
  4235f4:	pop    ebp
  4235f5:	sbb    al,0xf6
  4235f7:	das    
  4235f8:	es push 0x1aeed51a
  4235fe:	or     bl,BYTE PTR [ebx-0x55b404f9]
  423604:	ret    0x18f1
  423607:	mov    ah,0x6d
  423609:	nop
  42360a:	mov    eax,0xcc3623e4
  42360f:	adc    BYTE PTR [esp+ebp*8+0x2b],0x68
  423614:	mov    edi,DWORD PTR [ebx+0x3f]
  423617:	or     bl,bl
  423619:	ret    0x1469
  42361c:	(bad)  
  42361d:	mov    dh,ch
  42361f:	xor    DWORD PTR [ebp+ebp*4+0x36],0x3a
  423624:	int3   
  423625:	or     al,0x55
  423627:	jg     0x42361f
  423629:	mov    al,BYTE PTR [ebx]
  42362b:	mov    ds:0x52f98b56,al
  423630:	push   ebx
  423631:	jmp    0x11b16db
  423636:	push   ebx
  423637:	pop    eax
  423638:	xlat   BYTE PTR ds:[ebx]
  423639:	imul   ecx,DWORD PTR [ebx+esi*2-0x52],0xffffffde
  42363e:	unpckhps xmm1,XMMWORD PTR [edi]
  423641:	aas    
  423642:	push   ecx
  423643:	(bad)  
  423644:	add    BYTE PTR [ebx-0x7c],bl
  423647:	pop    ecx
  423648:	xchg   dl,bh
  42364a:	sbb    edx,DWORD PTR [ebp-0x8]
  42364d:	ret    
  42364e:	pop    eax
  42364f:	test   BYTE PTR [ebx-0x3a],0x5f
  423653:	test   eax,0x532700ee
  423658:	les    ebp,FWORD PTR [esi-0x6206b2c5]
  42365e:	fnsave [esi+0x4f]
  423661:	jae    0x42367f
  423663:	cmp    eax,0x630ac920
  423668:	cmp    BYTE PTR [eax+0x465baf41],cl
  42366e:	(bad)  [edi]
  423670:	lods   eax,DWORD PTR ds:[esi]
  423671:	nop
  423672:	outs   dx,BYTE PTR ds:[esi]
  423673:	xor    BYTE PTR [eax],0xc5
  423676:	cli    
  423677:	icebp  
  423678:	bound  ebp,QWORD PTR [eax-0x5b]
  42367b:	xchg   esi,eax
  42367c:	inc    esi
  42367d:	imul   ebx,DWORD PTR [ebp+edi*1+0x8],0x65679414
  423685:	and    DWORD PTR [edx-0x62],0x7
  423689:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42368a:	push   ss
  42368b:	inc    ebx
  42368c:	aas    
  42368d:	stos   DWORD PTR es:[edi],eax
  42368e:	fnstsw WORD PTR ds:0xe4ff224
  423694:	test   DWORD PTR ds:0xa6e73cce,0xff7fdb9c
  42369e:	scas   eax,DWORD PTR es:[edi]
  42369f:	mov    al,0xa7
  4236a1:	call   0xc9e522fb
  4236a6:	xchg   esp,eax
  4236a7:	or     al,0x3b
  4236a9:	sar    DWORD PTR [ecx],cl
  4236ab:	xchg   ebx,eax
  4236ac:	sub    DWORD PTR [edx-0x1b],edx
  4236af:	cmp    DWORD PTR [ebx-0x80],esi
  4236b2:	out    0x23,al
  4236b4:	push   edx
  4236b5:	ss in  al,dx
  4236b7:	cli    
  4236b8:	mov    eax,ds:0x4fa37f17
  4236bd:	adc    esi,DWORD PTR [edx]
  4236bf:	xchg   BYTE PTR [eax-0x786cbdeb],dh
  4236c5:	les    edx,FWORD PTR [esi+0x75]
  4236c8:	mov    bl,0xaf
  4236ca:	call   0x9abd:0x564ffb20
  4236d1:	int    0x84
  4236d3:	and    al,0xed
  4236d5:	inc    esi
  4236d6:	outs   dx,DWORD PTR gs:[esi]
  4236d8:	sbb    bl,dh
  4236da:	leave  
  4236db:	loopne 0x4236a4
  4236dd:	jae    0x42368d
  4236df:	add    BYTE PTR [edi+eiz*2+0x25],ch
  4236e3:	setp   BYTE PTR [edi]
  4236e6:	fstp   QWORD PTR [edi+0x1a]
  4236e9:	cmp    dh,dl
  4236eb:	or     DWORD PTR [esi+0x41],esp
  4236ee:	ins    BYTE PTR es:[edi],dx
  4236ef:	test   cl,cl
  4236f1:	arpl   WORD PTR [edi],dx
  4236f3:	imul   ebx,DWORD PTR [esi],0xffffffa6
  4236f6:	arpl   dx,si
  4236f8:	mov    ds:0x3d9be497,al
  4236fd:	iret   
  4236fe:	pop    esi
  4236ff:	inc    ebx
  423700:	bound  eax,QWORD PTR [edi]
  423702:	add    eax,0x14ec6122
  423707:	stos   DWORD PTR es:[edi],eax
  423708:	lock mov ch,0xb2
  42370b:	dec    eax
  42370c:	loop   0x4236ff
  42370e:	adc    bh,ah
  423710:	push   edx
  423711:	xchg   esi,eax
  423712:	jge    0x4236a2
  423714:	mov    ch,0x9a
  423716:	dec    edx
  423717:	es lahf 
  423719:	fst    DWORD PTR [ebx-0x20af423]
  42371f:	ror    BYTE PTR [edi+0x1e8b42d4],cl
  423725:	pop    eax
  423726:	ret    0xe7f6
  423729:	dec    ebx
  42372a:	test   edi,esp
  42372c:	push   edx
  42372d:	adc    al,dh
  42372f:	push   0xf02cf09b
  423734:	cmp    DWORD PTR [eax-0xe0ba125],eax
  42373a:	mov    dh,0x45
  42373c:	aaa    
  42373d:	xor    al,0x85
  42373f:	fwait
  423740:	lods   al,BYTE PTR ds:[esi]
  423741:	pop    ebx
  423742:	ja     0x42379f
  423744:	mov    ebx,0x1794a2fe
  423749:	dec    esp
  42374a:	cmc    
  42374b:	dec    esi
  42374c:	fcom   QWORD PTR ds:0x2b1a6892
  423752:	nop
  423753:	jecxz  0x4237d4
  423755:	xchg   ebx,eax
  423756:	and    bh,cl
  423758:	cs mov dh,al
  42375b:	sub    BYTE PTR [edx+0x66],al
  42375e:	enter  0xda18,0x5f
  423762:	sti    
  423763:	fisubr DWORD PTR [ebx+0x68b8580b]
  423769:	or     al,0xca
  42376b:	(bad)  
  42376c:	add    ebx,DWORD PTR [edx]
  42376e:	mov    edx,DWORD PTR [ebp+0x693141a4]
  423774:	repnz push ds
  423776:	add    eax,0xcd8efc32
  42377b:	adc    esi,DWORD PTR [edi]
  42377d:	aas    
  42377e:	aad    0xbe
  423780:	(bad)  
  423781:	mov    ds:0x8738faf0,eax
  423786:	push   ecx
  423787:	test   al,0xd4
  423789:	jns    0x4237cd
  42378b:	jp     0x423799
  42378d:	cdq    
  42378e:	xchg   BYTE PTR [esi+0x61029e25],ch
  423794:	add    DWORD PTR [edi+0x3f4cf1d1],edi
  42379a:	popa   
  42379b:	pop    eax
  42379c:	xchg   esp,eax
  42379d:	cwde   
  42379e:	lods   eax,DWORD PTR ds:[esi]
  42379f:	jo     0x4237e2
  4237a1:	ja     0x42377c
  4237a3:	lock mov cl,0x25
  4237a6:	popa   
  4237a7:	add    al,0xde
  4237a9:	push   ds
  4237aa:	push   eax
  4237ab:	mov    edi,0x5d77866d
  4237b0:	inc    esp
  4237b1:	cld    
  4237b2:	bound  ebx,QWORD PTR [ebp+0x42837004]
  4237b8:	dec    ecx
  4237b9:	add    edx,esp
  4237bb:	dec    eax
  4237bc:	adc    al,0x15
  4237bf:	dec    ecx
  4237c0:	adc    DWORD PTR [edi+0x6e],esi
  4237c3:	aaa    
  4237c4:	ret    
  4237c5:	fwait
  4237c6:	mov    bh,0x48
  4237c8:	push   esi
  4237c9:	popf   
  4237ca:	clc    
  4237cb:	fdiv   DWORD PTR [ecx+ebp*2-0x35adc0c7]
  4237d2:	(bad)  
  4237d4:	add    DWORD PTR [edx-0x22d8b8ff],esi
  4237da:	mov    dh,0x4c
  4237dc:	dec    ebp
  4237dd:	out    dx,eax
  4237de:	sbb    dh,BYTE PTR [esi+eiz*4+0x3c1d9c6a]
  4237e5:	sbb    eax,0x3bd7b7cf
  4237ea:	lahf   
  4237eb:	(bad)
  4237ee:	jb     0x42379e
  4237f0:	nop
  4237f1:	push   0x1f
  4237f3:	mov    ?,WORD PTR [edx+0x432bb8d6]
  4237f9:	push   es
  4237fa:	fstp   DWORD PTR [eax-0x57cf50c3]
  423800:	mov    ds:0x8a300e92,eax
  423805:	pop    esi
  423806:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423807:	pop    es
  423808:	dec    ebx
  423809:	int3   
  42380a:	xchg   dh,dl
  42380c:	inc    edi
  42380d:	inc    ecx
  42380e:	push   esp
  42380f:	jle    0x423885
  423811:	mov    edx,0x6ee0c6d5
  423816:	push   esp
  423817:	pushf  
  423818:	adc    DWORD PTR [edi-0x67c087cf],ebx
  42381e:	imul   ecx,DWORD PTR ds:0xc4ee108a,0xd445fde2
  423828:	mov    ds:0x8396949a,eax
  42382d:	clc    
  42382e:	and    eax,0x5b9da5b0
  423833:	(bad)  [ebx+0x3f134586]
  423839:	pop    edi
  42383a:	mov    ebp,0xd3b4e2fa
  42383f:	push   es
  423840:	jecxz  0x423862
  423842:	imul   BYTE PTR [ebp+0x3460d334]
  423848:	mov    bh,0x70
  42384a:	cmc    
  42384b:	test   al,0x5d
  42384d:	ins    BYTE PTR es:[edi],dx
  42384e:	enter  0xea0a,0x4b
  423852:	es mov esp,0x27d6fcfa
  423858:	jge    0x423860
  42385a:	inc    edx
  42385b:	pop    es
  42385c:	mov    ebx,0x4bbaf16b
  423861:	or     DWORD PTR [ebx-0x68],ecx
  423864:	add    ebp,esp
  423866:	adc    al,0xfc
  423868:	ss daa 
  42386a:	int    0xbf
  42386c:	inc    ebx
  42386d:	fadd   st,st(3)
  42386f:	xchg   edi,eax
  423870:	lea    esi,[ebx]
  423872:	xor    BYTE PTR [edi],al
  423874:	les    ecx,FWORD PTR [ecx+0x2c9a84f6]
  42387a:	pushf  
  42387b:	push   esi
  42387c:	dec    ecx
  42387d:	jg     0x42387e
  42387f:	scas   al,BYTE PTR es:[edi]
  423880:	ror    DWORD PTR [ebx-0x68],0x57
  423884:	fnstcw WORD PTR [ebp+0x5c]
  423887:	mov    eax,ds:0x25873da0
  42388c:	(bad)  
  42388d:	in     eax,0xca
  42388f:	dec    esi
  423890:	sbb    esp,ebx
  423892:	repz fisubr WORD PTR [eax]
  423895:	sub    ah,0xa8
  423898:	add    edi,DWORD PTR [eax-0x15]
  42389b:	jnp    0x4238e0
  42389d:	fmul   QWORD PTR [esi-0x20254b3d]
  4238a3:	je     0x42389a
  4238a5:	shr    BYTE PTR [edx-0x8],1
  4238a8:	cmp    BYTE PTR [eax],0xea
  4238ab:	loop   0x4238c5
  4238ad:	or     al,0x5c
  4238af:	out    dx,eax
  4238b0:	cmp    al,0x96
  4238b2:	stos   BYTE PTR es:[edi],al
  4238b3:	aaa    
  4238b4:	retf   
  4238b5:	data16 jle 0x4238cd
  4238b8:	jo     0x423904
  4238ba:	mov    dl,0x9e
  4238bc:	mov    bh,0x15
  4238be:	push   0xa3ac335b
  4238c3:	jb     0x4238da
  4238c5:	cmp    DWORD PTR [edi+0x79d3b837],0xdf84b7b5
  4238cf:	arpl   WORD PTR [ebp-0xd4e159d],bp
  4238d5:	in     al,0x52
  4238d7:	in     eax,0xf8
  4238d9:	mov    eax,ds:0x8ca40b62
  4238de:	push   edx
  4238df:	sub    bl,bl
  4238e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4238e2:	fimul  DWORD PTR [ecx+eiz*4]
  4238e5:	into   
  4238e6:	stos   DWORD PTR es:[edi],eax
  4238e7:	imul   ebx,ebp,0x6
  4238ea:	add    BYTE PTR [eax+edi*1],dl
  4238ed:	lods   eax,DWORD PTR ds:[esi]
  4238ee:	push   ds
  4238ef:	(bad)  
  4238f1:	mov    bl,0x74
  4238f3:	ficom  WORD PTR [edi-0x35ffb183]
  4238f9:	dec    esi
  4238fa:	stc    
  4238fb:	xor    al,0x95
  4238fd:	push   0xa098f364
  423902:	and    ch,BYTE PTR [edx-0x2c4a3316]
  423908:	fld    DWORD PTR [edi]
  42390a:	push   0xd7874404
  42390f:	cmc    
  423910:	mov    bh,0x22
  423912:	sub    ecx,DWORD PTR [ecx+0x0]
  423915:	jo     0x4238df
  423917:	iret   
  423918:	scas   eax,DWORD PTR es:[edi]
  423919:	xchg   edx,eax
  42391a:	add    dl,BYTE PTR [eax+0x534ebf8]
  423920:	or     esp,DWORD PTR [eax]
  423922:	mov    eax,ds:0xd3d2674
  423927:	stos   BYTE PTR es:[edi],al
  423928:	neg    DWORD PTR [ecx]
  42392a:	cli    
  42392b:	xor    ch,BYTE PTR [edi+0x753c0cad]
  423931:	sub    ebp,edi
  423933:	adc    DWORD PTR [ecx+0x1f],ebx
  423936:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423937:	pop    esi
  423938:	add    DWORD PTR [ebx+eax*4],edx
  42393b:	dec    ebp
  42393c:	sbb    esp,DWORD PTR [edx]
  42393e:	test   BYTE PTR [esi-0x9],ah
  423941:	les    esi,FWORD PTR [eax+0x1df9902d]
  423947:	or     al,BYTE PTR [ebx]
  423949:	mov    esp,0x8c00eb78
  42394e:	nop
  42394f:	inc    ebx
  423950:	pop    ecx
  423951:	(bad)  
  423953:	fstp   DWORD PTR [esp+esi*8-0x63]
  423957:	xor    al,0x66
  423959:	scas   al,BYTE PTR es:[edi]
  42395a:	sti    
  42395b:	sbb    al,0xe0
  42395d:	jno    0x4238f3
  42395f:	dec    eax
  423960:	mov    ebx,0x23487eb9
  423965:	jb     0x4239b4
  423967:	xor    ebx,DWORD PTR fs:[edi]
  42396a:	or     BYTE PTR [esi],dl
  42396c:	add    BYTE PTR [esi],bh
  42396e:	xchg   ebp,eax
  42396f:	ss jg  0x42396e
  423972:	jle    0x423907
  423974:	xor    BYTE PTR [ecx+ecx*4-0x51],bl
  423978:	dec    esi
  423979:	and    dl,dl
  42397b:	stc    
  42397c:	loopne 0x4239fc
  42397e:	xchg   esp,eax
  42397f:	(bad)  
  423982:	repz sbb esp,esp
  423985:	mov    edx,0x8b37385c
  42398a:	imul   ebx,DWORD PTR [ebx+0x1f],0x18c4dca7
  423991:	cmp    eax,0xd3ed0718
  423996:	std    
  423997:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423998:	retf   
  423999:	es push ds
  42399b:	or     eax,0x3accc0b2
  4239a0:	or     bh,bl
  4239a2:	test   eax,0xd958e0af
  4239a7:	das    
  4239a8:	lea    bp,[ecx+edx*8]
  4239ac:	push   ebx
  4239ad:	cmp    eax,0x780a636a
  4239b2:	fsubr  QWORD PTR [edx]
  4239b4:	out    dx,al
  4239b5:	shr    eax,0xfc
  4239b8:	jae    0x423a18
  4239ba:	adc    ch,al
  4239bc:	push   ds
  4239bd:	xchg   esi,eax
  4239be:	std    
  4239bf:	sahf   
  4239c0:	leave  
  4239c1:	rcpps  xmm6,xmm5
  4239c4:	test   al,0x53
  4239c6:	mov    edi,0xe5aca5d6
  4239cb:	push   ebp
  4239cc:	or     DWORD PTR [ecx],esi
  4239ce:	sub    al,0x6b
  4239d0:	mov    cl,0xc5
  4239d2:	mov    BYTE PTR [ecx+0x35],bl
  4239d5:	out    dx,eax
  4239d6:	pop    ebx
  4239d7:	iret   
  4239d8:	push   ds
  4239d9:	xchg   edx,eax
  4239da:	mov    al,ds:0x5e09362f
  4239df:	cdq    
  4239e0:	cmp    eax,DWORD PTR [esi]
  4239e2:	fild   DWORD PTR [edi-0x52]
  4239e5:	cmp    ah,BYTE PTR [ebx-0x538a1888]
  4239eb:	jbe    0x4239ba
  4239ed:	xor    dh,dl
  4239ef:	jnp    0x4239e3
  4239f1:	rcl    BYTE PTR [eax],cl
  4239f3:	arpl   cx,dx
  4239f5:	in     eax,dx
  4239f6:	xor    eax,0x46cebda1
  4239fb:	push   0x69a836b0
  423a00:	xor    eax,0x755deabc
  423a05:	sbb    ebx,edi
  423a07:	ds and al,0xfb
  423a0a:	mov    eax,ds:0x3f2619cb
  423a0f:	cwde   
  423a10:	imul   ecx,DWORD PTR [bp+si+0x1fe8],0x73d94da2
  423a19:	xor    ah,BYTE PTR [ecx]
  423a1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a1c:	ja     0x423a97
  423a1e:	pand   mm0,QWORD PTR [ecx+edi*4-0x36]
  423a23:	mov    ch,0x88
  423a25:	or     BYTE PTR [eax-0x48],0xcb
  423a29:	dec    ebx
  423a2a:	add    al,BYTE PTR [ecx+ebp*4-0x67186ee7]
  423a31:	jmp    0x5af49fe5
  423a36:	or     DWORD PTR es:[eax+0xd],edi
  423a3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a3b:	sbb    edi,DWORD PTR [esi+0x30]
  423a3e:	jae    0x423a23
  423a40:	xchg   edi,eax
  423a41:	jg     0x4239c9
  423a43:	jge    0x423a66
  423a45:	adc    al,0xdc
  423a47:	mov    fs:0x5277b39a,eax
  423a4d:	test   BYTE PTR [ecx],0x5
  423a50:	cmp    BYTE PTR ds:0xbd48ae0a,bh
  423a56:	add    BYTE PTR [eax],dl
  423a58:	std    
  423a59:	pusha  
  423a5a:	call   0xa144:0x4f6a357c
  423a61:	loop   0x423a35
  423a63:	cs sub al,0xca
  423a66:	push   es
  423a67:	mov    ds:0xda3d067d,al
  423a6c:	scas   al,BYTE PTR es:[edi]
  423a6d:	cld    
  423a6e:	xor    al,0xcf
  423a70:	into   
  423a71:	hlt    
  423a72:	test   al,0x70
  423a74:	dec    esi
  423a75:	cmc    
  423a76:	aad    0xd5
  423a78:	xlat   BYTE PTR ds:[ebx]
  423a79:	loope  0x423a95
  423a7b:	add    DWORD PTR [eax+eax*8+0x5c566f23],0x56
  423a83:	pop    ebx
  423a84:	outs   dx,DWORD PTR ds:[esi]
  423a85:	pop    esi
  423a86:	inc    edi
  423a87:	stos   BYTE PTR es:[edi],al
  423a88:	push   edx
  423a89:	push   ebp
  423a8a:	mov    eax,DWORD PTR [ebx+ebp*2-0x6e]
  423a8e:	mov    eax,0x91abf82a
  423a93:	dec    esi
  423a94:	(bad)  
  423a95:	rol    BYTE PTR [eax-0x5363e6da],1
  423a9b:	into   
  423a9c:	jmp    0x82542153
  423aa1:	adc    esi,DWORD PTR [edx-0x24]
  423aa4:	add    DWORD PTR es:[ebx],edx
  423aa7:	mov    dl,0x44
  423aa9:	cmp    DWORD PTR [edi+eiz*8-0x5bf1ab43],0xfffffff9
  423ab1:	dec    eax
  423ab2:	adc    BYTE PTR [edi+ebp*8+0x39],0x2
  423ab7:	jg     0x423a7b
  423ab9:	xor    eax,eax
  423abb:	ds popf 
  423abd:	cs push cs
  423abf:	(bad)  
  423ac0:	adc    BYTE PTR [edi+eiz*2+0x46b1ea8f],ah
  423ac7:	popf   
  423ac8:	test   edx,edx
  423aca:	cmp    BYTE PTR [ebx-0x522e8fa1],ah
  423ad0:	loop   0x423aac
  423ad2:	jmp    0x966bb81e
  423ad7:	sar    DWORD PTR [edx-0x55],0xbf
  423adb:	retf   0xafbf
  423ade:	dec    eax
  423adf:	aas    
  423ae0:	lock popf 
  423ae2:	iret   
  423ae3:	shl    DWORD PTR [esi+ebx*1-0x34],cl
  423ae7:	std    
  423ae8:	cli    
  423ae9:	jge    0x423b3a
  423aeb:	retf   0xb817
  423aee:	cmp    al,BYTE PTR [ecx-0x10d49db8]
  423af4:	xor    dh,0x3b
  423af7:	ds pusha 
  423af9:	add    al,ch
  423afb:	(bad)  
  423afc:	aas    
  423afd:	and    eax,0x31eaf4cc
  423b02:	repz push cs
  423b04:	out    dx,eax
  423b05:	in     al,dx
  423b06:	pop    ecx
  423b07:	push   ss
  423b08:	sub    cl,ah
  423b0a:	(bad)  
  423b0c:	mov    bh,0x87
  423b0e:	aad    0x92
  423b10:	dec    esp
  423b11:	adc    ebp,DWORD PTR [esi]
  423b13:	mov    eax,ds:0xdfe0518
  423b18:	sti    
  423b19:	mov    ch,0x46
  423b1b:	xor    esi,edi
  423b1d:	retf   0x4b5d
  423b20:	push   ebx
  423b22:	retf   0xbb2
  423b25:	xor    eax,0xd73b2e77
  423b2a:	inc    esp
  423b2b:	xor    esp,0x767ad4cd
  423b31:	mov    bh,0x1b
  423b33:	addr16 test eax,0xb46745c0
  423b39:	repnz xchg esi,eax
  423b3b:	jge    0x423b01
  423b3d:	jmp    0x5d5cf131
  423b42:	push   ecx
  423b43:	mov    al,ds:0x67a5ef02
  423b48:	and    ebp,DWORD PTR [edx+0x2aa06661]
  423b4e:	mov    dl,0xf5
  423b50:	imul   ebp,DWORD PTR [ecx-0x38],0xfffffff4
  423b54:	repz adc ch,BYTE PTR [edx]
  423b57:	shl    BYTE PTR [ecx+0x16],cl
  423b5a:	fwait
  423b5b:	mov    ch,0xc8
  423b5d:	xor    dh,BYTE PTR [ebx+edx*4-0x58c9c16]
  423b64:	data16 shr BYTE PTR [ecx-0x868afa8],1
  423b6b:	jecxz  0x423b17
  423b6d:	jbe    0x423b1d
  423b6f:	push   0x72
  423b71:	inc    edx
  423b72:	mov    ebp,0x6772ee03
  423b77:	push   esp
  423b78:	loopne 0x423bed
  423b7a:	inc    BYTE PTR [esi-0x38]
  423b7d:	out    0x92,al
  423b7f:	or     eax,0x1bff623c
  423b84:	sbb    DWORD PTR [edi],0xffffffc0
  423b87:	popf   
  423b88:	xchg   DWORD PTR [ebx-0x9b558c6],ebp
  423b8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423b8f:	fwait
  423b90:	jmp    0xe3216904
  423b95:	push   esi
  423b96:	jecxz  0x423bd8
  423b98:	mov    ecx,0x1e6c2b5d
  423b9e:	or     BYTE PTR [esi+eax*8+0x400c6ab1],dh
  423ba5:	addr16 ret 0x9c7
  423ba9:	scas   al,BYTE PTR es:[edi]
  423baa:	xor    DWORD PTR [esi-0x1b76b536],ebx
  423bb0:	add    ah,ah
  423bb2:	data16 sub al,bl
  423bb5:	xchg   BYTE PTR [ebp+0x51],dh
  423bb8:	imul   edx,DWORD PTR [ecx+0x7d],0xb8ba89fe
  423bbf:	adc    al,0x4d
  423bc1:	in     eax,dx
  423bc2:	pusha  
  423bc3:	sub    eax,0x6624be1
  423bc8:	mov    ah,0xf
  423bca:	xlat   BYTE PTR ds:[ebx]
  423bcb:	outs   dx,DWORD PTR ds:[esi]
  423bcc:	icebp  
  423bcd:	sub    al,0xfa
  423bcf:	sub    al,0xdc
  423bd1:	xchg   ecx,eax
  423bd2:	pushf  
  423bd3:	outs   dx,BYTE PTR ds:[esi]
  423bd4:	pushf  
  423bd5:	(bad)  
  423bd6:	mov    bl,0x1e
  423bd8:	icebp  
  423bd9:	xchg   edx,eax
  423bda:	inc    ebp
  423bdb:	pop    esp
  423bdc:	sar    BYTE PTR [eax],cl
  423bde:	or     al,0xd3
  423be0:	jecxz  0x423b6d
  423be2:	call   0x4643:0x98457374
  423be9:	mov    eax,ds:0x90b9d42f
  423bee:	add    BYTE PTR [edi+ecx*2],dl
  423bf1:	jg     0x423b75
  423bf3:	sub    dh,BYTE PTR [ebp+0x52dda5c0]
  423bf9:	sar    BYTE PTR ds:0x6690f688,1
  423bff:	pop    ebx
  423c00:	call   0xcd8a9900
  423c05:	pop    eax
  423c06:	cli    
  423c07:	push   edi
  423c08:	mov    ah,0x61
  423c0a:	data16 mov bh,0x44
  423c0d:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c0f:	xchg   esi,eax
  423c10:	jg     0x423c07
  423c12:	pop    eax
  423c13:	sub    al,0x28
  423c15:	popf   
  423c16:	sbb    esp,DWORD PTR [ecx+0x43]
  423c19:	dec    edi
  423c1a:	adc    ch,cl
  423c1c:	dec    esp
  423c1d:	cs and eax,ebx
  423c20:	adc    BYTE PTR [eax+0x78],bl
  423c23:	test   BYTE PTR [edx+0x126a4718],dl
  423c29:	cld    
  423c2a:	jns    0x423bc3
  423c2c:	adc    BYTE PTR [ebx],dh
  423c2e:	in     al,dx
  423c2f:	nop
  423c30:	das    
  423c31:	call   0xa86045d
  423c36:	xchg   ecx,eax
  423c37:	dec    edx
  423c38:	jp     0x423bf6
  423c3a:	(bad)  
  423c3b:	jb     0x423c2a
  423c3d:	add    al,0xf7
  423c3f:	xchg   BYTE PTR [ecx],dh
  423c41:	test   eax,0xdd2304f
  423c46:	jnp    0x423c87
  423c48:	test   BYTE PTR [esi+0x76],0x57
  423c4c:	retf   
  423c4d:	dec    edx
  423c4e:	mov    dh,0xf5
  423c50:	xlat   BYTE PTR ds:[ebx]
  423c51:	add    DWORD PTR [edi+0x76fcd47a],edi
  423c57:	mov    cl,0x5f
  423c59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c5a:	fidiv  WORD PTR [edi]
  423c5c:	stos   BYTE PTR es:[edi],al
  423c5d:	dec    esp
  423c5e:	mov    ds:0xea2df483,al
  423c63:	test   al,0x72
  423c65:	jne    0x423cd3
  423c67:	jp     0x423c27
  423c69:	aaa    
  423c6a:	test   BYTE PTR [ecx],dl
  423c6c:	dec    ebp
  423c6d:	jnp    0x423c16
  423c6f:	cmp    al,BYTE PTR [edi]
  423c71:	mov    edi,0x26f9b1e9
  423c76:	mov    edx,0x988cd3dd
  423c7b:	les    eax,FWORD PTR [esp+ebp*1-0x19]
  423c7f:	js     0x423c73
  423c81:	xchg   ebx,eax
  423c82:	pop    ecx
  423c83:	dec    ebx
  423c84:	sub    edx,ecx
  423c86:	adc    al,0xbf
  423c88:	inc    edx
  423c89:	nop
  423c8a:	in     eax,0x26
  423c8c:	mov    edx,0x3968ee6f
  423c91:	inc    ebx
  423c92:	jle    0x423ca8
  423c94:	ins    DWORD PTR es:[edi],dx
  423c95:	mov    ds:0x82369aac,eax
  423c9a:	add    eax,DWORD PTR [ebx+0xbde3128]
  423ca0:	push   0x74970383
  423ca5:	dec    esp
  423ca6:	push   ecx
  423ca7:	sbb    eax,0x5843f5f6
  423cac:	jle    0x423cfb
  423cae:	iret   
  423caf:	add    al,0x2f
  423cb1:	xchg   esp,eax
  423cb2:	or     eax,0xb4ef91a6
  423cb7:	push   es
  423cb8:	pop    ss
  423cb9:	dec    eax
  423cba:	out    dx,eax
  423cbb:	pop    ebp
  423cbc:	test   al,0xd3
  423cbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423cbf:	pop    esp
  423cc0:	retf   0xf034
  423cc3:	test   BYTE PTR [ecx+0x6aa6b2b],dl
  423cc9:	int3   
  423cca:	pop    es
  423ccb:	retf   0x7b26
  423cce:	nop
  423ccf:	gs jb  0x423cba
  423cd2:	pusha  
  423cd3:	mov    ebp,0xf9092476
  423cd8:	cmp    al,0x16
  423cda:	adc    DWORD PTR [esi-0x5],esi
  423cdd:	xor    esp,DWORD PTR [edi]
  423cdf:	vmptrst QWORD PTR [esi+0x57f67e17]
  423ce6:	xchg   dl,dh
  423ce8:	and    eax,DWORD PTR [esi+eiz*8-0xc7e7452]
  423cef:	jo     0x423d04
  423cf1:	je     0x423d3a
  423cf3:	test   BYTE PTR [esi+ebx*1-0x50],ch
  423cf7:	sub    DWORD PTR [edx],eax
  423cf9:	lea    esi,[eax-0x52]
  423cfc:	xlat   BYTE PTR ds:[ebx]
  423cfd:	rol    BYTE PTR [edx+edx*1-0x6f],0xc4
  423d02:	add    eax,0x4ded0a50
  423d07:	cmp    eax,0xcfbe1ce5
  423d0c:	icebp  
  423d0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d0e:	invd   
  423d10:	xor    dh,cl
  423d12:	imul   edi,DWORD PTR [ebx-0x48],0xdeb6109c
  423d19:	or     edx,DWORD PTR [edx]
  423d1b:	push   edi
  423d1c:	dec    edx
  423d1d:	(bad)  
  423d1e:	pop    eax
  423d1f:	jnp    0x423cca
  423d21:	ds add dh,0x48
  423d25:	test   ebp,eax
  423d27:	test   BYTE PTR [edi+0x4fe52253],ch
  423d2d:	imul   esi,DWORD PTR [ecx+0x76],0xffffffa2
  423d31:	popf   
  423d32:	xchg   edx,eax
  423d33:	push   0x4a810739
  423d38:	in     al,dx
  423d39:	leave  
  423d3a:	dec    esp
  423d3b:	inc    edx
  423d3c:	sub    al,0x94
  423d3e:	add    BYTE PTR [esi-0x75],bl
  423d41:	push   cs
  423d42:	(bad)  
  423d43:	test   eax,0x56444441
  423d48:	mov    bh,0xa5
  423d4a:	fist   WORD PTR [edx+0x4c]
  423d4d:	lods   eax,DWORD PTR ds:[esi]
  423d4e:	popa   
  423d4f:	dec    esp
  423d50:	(bad)  
  423d51:	mov    dh,0xaf
  423d53:	addr16 in eax,0xb0
  423d56:	pop    es
  423d57:	in     eax,0x30
  423d59:	popa   
  423d5a:	ror    DWORD PTR [esi+0x3fb018b6],0x49
  423d61:	popf   
  423d62:	pop    eax
  423d63:	clc    
  423d64:	cld    
  423d65:	outs   dx,DWORD PTR ds:[esi]
  423d66:	jnp    0x423d0d
  423d68:	mov    ecx,0x2c5e2869
  423d6d:	mov    al,0xbf
  423d6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d70:	xor    DWORD PTR [ebp-0x7f],ecx
  423d73:	cdq    
  423d74:	repnz xor DWORD PTR [ecx+0x20],ecx
  423d78:	(bad)  
  423d79:	lods   eax,DWORD PTR ds:[esi]
  423d7a:	adc    al,0x39
  423d7c:	rcr    DWORD PTR [ecx],0x6e
  423d7f:	mov    eax,0x1ab3369b
  423d84:	xchg   ecx,eax
  423d85:	xlat   BYTE PTR ds:[ebx]
  423d86:	aas    
  423d87:	int3   
  423d88:	sub    DWORD PTR [esi],ebx
  423d8a:	fidivr DWORD PTR [eax-0x87c1071]
  423d90:	std    
  423d91:	into   
  423d92:	rol    ah,0x4f
  423d95:	inc    ebx
  423d96:	out    0xab,al
  423d98:	jnp    0x423de2
  423d9a:	lea    esp,[ecx+0x387b1940]
  423da0:	inc    edx
  423da1:	push   0x1d239e82
  423da6:	add    esp,DWORD PTR [edi+0x45]
  423da9:	sar    BYTE PTR [eax],cl
  423dab:	imul   edi,DWORD PTR [eax+0x1ae04ab4],0x26
  423db2:	dec    edi
  423db3:	cmc    
  423db4:	add    BYTE PTR [esi],0x5d
  423db7:	xor    dl,al
  423db9:	add    eax,0x4237fc74
  423dbe:	shl    BYTE PTR [ecx-0x117028b0],cl
  423dc4:	sti    
  423dc5:	inc    esp
  423dc6:	pop    esp
  423dc7:	stos   BYTE PTR es:[edi],al
  423dc8:	ficomp DWORD PTR [ebp-0x187ba8f0]
  423dce:	cwde   
  423dcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423dd0:	ins    DWORD PTR es:[edi],dx
  423dd1:	mov    esp,0x7ff8e3c7
  423dd6:	adc    ebp,DWORD PTR [edi]
  423dd8:	jno    0x423da4
  423dda:	adc    al,0x9
  423ddc:	leave  
  423ddd:	js     0x423de9
  423ddf:	rcr    DWORD PTR [ebx+0x2cdc946b],cl
  423de5:	jns    0x423dda
  423de7:	and    BYTE PTR [ebx+0x57dff35b],0x9f
  423dee:	outs   dx,BYTE PTR ds:[esi]
  423def:	dec    esi
  423df0:	lods   eax,DWORD PTR ds:[esi]
  423df1:	hlt    
  423df2:	xor    cl,al
  423df4:	dec    ecx
  423df5:	addr16 push 0xeb1bb5d7
  423dfb:	shr    BYTE PTR [ebx+0x1b29b91d],1
  423e01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e02:	pshufw mm0,QWORD PTR [ebp-0x3004a894],0x19
  423e0a:	adc    eax,0x1fc33063
  423e0f:	xor    al,0x84
  423e11:	push   ebx
  423e12:	les    esi,FWORD PTR [esi-0x3683e51a]
  423e18:	pop    esi
  423e19:	mov    bl,0x7f
  423e1b:	inc    ecx
  423e1c:	aas    
  423e1d:	rcr    BYTE PTR [ebx],1
  423e1f:	int    0x8f
  423e21:	cmc    
  423e22:	in     al,dx
  423e23:	mov    DWORD PTR [ecx+0x53],ecx
  423e26:	or     BYTE PTR [edi],dh
  423e28:	mov    al,0x22
  423e2a:	push   ss
  423e2b:	ds dec edi
  423e2d:	imul   esp,DWORD PTR [edx],0xffffffb1
  423e30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e31:	or     DWORD PTR [eax+0x75],ecx
  423e34:	pop    ebp
  423e35:	adc    BYTE PTR [eax+0x26],ch
  423e38:	inc    esi
  423e39:	cli    
  423e3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e3b:	arpl   cx,sp
  423e3d:	(bad)  
  423e3e:	mov    bl,al
  423e40:	fmul   QWORD PTR [esi-0x5c]
  423e43:	push   esi
  423e44:	enter  0xab6c,0x4
  423e48:	aam    0xf2
  423e4a:	enter  0xe92b,0x13
  423e4e:	ficomp DWORD PTR [ebx-0x3d421a01]
  423e54:	jns    0x423ec0
  423e56:	enter  0x7cb5,0x74
  423e5a:	hlt    
  423e5b:	cli    
  423e5c:	sub    ecx,DWORD PTR [eax-0x45100c8b]
  423e62:	sti    
  423e63:	sbb    DWORD PTR [esi+0x1651999f],ebx
  423e69:	and    cl,ch
  423e6b:	stos   DWORD PTR es:[edi],eax
  423e6c:	mov    dl,0x9f
  423e6e:	scas   eax,DWORD PTR es:[edi]
  423e6f:	nop
  423e70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e71:	mov    edx,0xb2631989
  423e76:	scas   al,BYTE PTR es:[edi]
  423e77:	outs   dx,BYTE PTR ds:[esi]
  423e78:	add    BYTE PTR ss:0x7cdbf291,dh
  423e7f:	sahf   
  423e80:	push   esp
  423e81:	mov    cl,al
  423e83:	push   edi
  423e84:	jmp    0x423e6c
  423e86:	xchg   DWORD PTR [ebp-0x41],esi
  423e89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e8a:	mov    ds:0x4e53f733,al
  423e8f:	nop
  423e90:	and    dh,bh
  423e92:	adc    al,0x90
  423e94:	sub    eax,0xc97eaef1
  423e99:	(bad)  
  423e9a:	mov    eax,ds:0x4daa5d0
  423e9f:	or     DWORD PTR [ebx-0x14],ebp
  423ea2:	cmp    edx,DWORD PTR [esi]
  423ea4:	std    
  423ea5:	ins    DWORD PTR es:[edi],dx
  423ea6:	ins    BYTE PTR es:[edi],dx
  423ea7:	jge    0x423e99
  423ea9:	xchg   BYTE PTR [ecx-0x27],ch
  423eac:	into   
  423ead:	pop    esi
  423eae:	cdq    
  423eaf:	mov    eax,0x9fb25cc6
  423eb4:	adc    al,0xd1
  423eb6:	sub    esi,DWORD PTR ds:0x960a9982
  423ebc:	arpl   bp,sp
  423ebe:	cmp    ah,BYTE PTR [edi-0x5f]
  423ec1:	stc    
  423ec2:	mov    al,ds:0xbad07313
  423ec7:	fstp   QWORD PTR [ebx-0x12]
  423eca:	jmp    0x951b0d6a
  423ecf:	mov    ebp,0x8b83aaf3
  423ed4:	imul   edi,DWORD PTR [ebp+0x77],0x25
  423ed8:	rcl    BYTE PTR [esi-0x3d],0xbf
  423edc:	xchg   ecx,eax
  423edd:	mov    ah,0xdb
  423edf:	sbb    edi,DWORD PTR [ecx-0x67602f8c]
  423ee5:	in     eax,dx
  423ee6:	mov    eax,0x6c36fcdb
  423eeb:	out    0xf0,eax
  423eed:	std    
  423eee:	xor    edi,DWORD PTR [ebx+ecx*8+0x4e]
  423ef2:	sbb    bh,bl
  423ef4:	sbb    al,0x9d
  423ef6:	loope  0x423e9c
  423ef8:	(bad)  
  423ef9:	cmp    dl,al
  423efb:	inc    ebp
  423efc:	nop
  423efd:	jecxz  0x423e90
  423eff:	and    cl,BYTE PTR [ebx-0x13]
  423f02:	ret    
  423f03:	xchg   DWORD PTR [esi],eax
  423f05:	mov    bh,BYTE PTR [ebp+0x36]
  423f08:	sahf   
  423f09:	js     0x423f5f
  423f0b:	inc    eax
  423f0c:	cmp    eax,0xbc8fd9ca
  423f11:	inc    esi
  423f12:	pop    ds
  423f13:	sub    eax,0xbc19682d
  423f18:	call   0xff746496
  423f1d:	pop    edi
  423f1e:	adc    ebp,DWORD PTR [ebx+0x25b2662b]
  423f24:	jo     0x423f46
  423f26:	or     al,0x8b
  423f28:	test   al,0x92
  423f2a:	add    ch,BYTE PTR [esi+0x1b]
  423f2d:	pop    ds
  423f2e:	loop   0x423f21
  423f30:	sub    BYTE PTR [ecx-0x51],bl
  423f33:	inc    ecx
  423f34:	shl    BYTE PTR [esi-0x1f75d71e],cl
  423f3a:	dec    ebp
  423f3b:	or     cl,ah
  423f3d:	xchg   edx,eax
  423f3e:	aam    0x21
  423f40:	dec    ebx
  423f41:	mov    cl,0xae
  423f43:	xchg   BYTE PTR [edi+0x29],dl
  423f46:	fistp  DWORD PTR [esi]
  423f48:	stos   BYTE PTR es:[edi],al
  423f49:	dec    esi
  423f4a:	jmp    0x423fbd
  423f4c:	jbe    0x423f92
  423f4e:	mov    bl,0x8f
  423f50:	dec    esp
  423f51:	daa    
  423f52:	xchg   edi,eax
  423f53:	jmp    0xf888:0x5bf46f57
  423f5a:	scas   al,BYTE PTR es:[edi]
  423f5b:	sbb    al,0x96
  423f5d:	imul   esi,eax,0x57
  423f60:	sub    eax,0x287727a
  423f65:	xchg   ebp,eax
  423f66:	and    DWORD PTR [ebx],esp
  423f68:	sbb    edx,edx
  423f6a:	jo     0x423fd3
  423f6c:	inc    eax
  423f6d:	je     0x423f13
  423f6f:	or     esi,DWORD PTR [ebp+0x7f]
  423f72:	jle    0x423f54
  423f74:	sbb    ecx,DWORD PTR [esi]
  423f76:	in     eax,0x37
  423f78:	aam    0x1
  423f7a:	adc    al,0x76
  423f7c:	mov    ebp,0xe40a4cad
  423f81:	mov    ecx,0x580009a9
  423f86:	sbb    BYTE PTR [ebp+0x12],0x8d
  423f8a:	adc    al,0x7c
  423f8c:	call   0xa1923b32
  423f91:	mov    al,0x24
  423f93:	pop    esi
  423f94:	pop    ebx
  423f95:	(bad)  
  423f96:	icebp  
  423f97:	hlt    
  423f98:	outs   dx,BYTE PTR ds:[esi]
  423f99:	dec    eax
  423f9a:	lods   eax,DWORD PTR ds:[esi]
  423f9b:	or     eax,0x398fa690
  423fa0:	mov    ebx,0xacda2ad0
  423fa5:	push   edi
  423fa6:	push   ebp
  423fa7:	out    dx,al
  423fa8:	inc    esi
  423fa9:	bound  esp,QWORD PTR [ebp-0x7a]
  423fac:	ror    DWORD PTR [edi-0x73],1
  423faf:	add    cl,BYTE PTR [ebp+ebp*2+0xec8e66d]
  423fb6:	cmp    DWORD PTR [ebp+0x6],ebp
  423fb9:	mov    ebp,0xc03802d5
  423fbe:	and    ah,BYTE PTR [ebx-0x15]
  423fc1:	jg     0x424013
  423fc3:	repnz push esp
  423fc5:	sub    esi,edi
  423fc7:	in     al,dx
  423fc8:	mov    al,0x20
  423fca:	adc    al,0xee
  423fcc:	jbe    0x423fe1
  423fce:	gs pop ebp
  423fd0:	int3   
  423fd1:	outs   dx,DWORD PTR ds:[esi]
  423fd2:	push   edx
  423fd3:	jl     0x424041
  423fd5:	aam    0xb4
  423fd7:	push   edx
  423fd8:	es mov cl,0x4d
  423fdb:	nop
  423fdc:	int3   
  423fdd:	push   edx
  423fde:	push   ss
  423fdf:	xchg   edx,eax
  423fe0:	stos   BYTE PTR es:[edi],al
  423fe1:	xchg   edi,eax
  423fe2:	push   es
  423fe3:	xchg   esp,eax
  423fe4:	mov    esi,0x6a7cfcd2
  423fe9:	xchg   ecx,eax
  423fea:	bound  edi,QWORD PTR [ecx]
  423fec:	mov    bh,0xe5
  423fee:	push   cs
  423fef:	div    DWORD PTR [ebp+0x51]
  423ff2:	xchg   DWORD PTR [ebx+0x4b3d936f],ebp
  423ff8:	not    eax
  423ffa:	ins    DWORD PTR es:[edi],dx
  423ffb:	(bad)  
  423ffc:	fstp   DWORD PTR [edi+0x562bba68]
  424002:	fidiv  DWORD PTR [edi+0x6e44cefc]
  424008:	jns    0x42403b
  42400a:	dec    eax
  42400b:	push   esi
  42400c:	jb     0x423fec
  42400e:	xor    cl,ah
  424010:	sub    eax,0xffc3dd2f
  424015:	dec    edi
  424016:	mov    ebp,0x512269f1
  42401b:	in     eax,0x24
  42401d:	test   dl,bl
  42401f:	xor    al,0x5f
  424021:	xor    ebp,DWORD PTR [ebx]
  424023:	icebp  
  424024:	out    0xdf,eax
  424026:	push   0xfffffff8
  424028:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424029:	xchg   edx,eax
  42402a:	repnz cmp al,0x32
  42402d:	mov    dl,0xd6
  42402f:	(bad)  
  424030:	xor    dl,BYTE PTR ds:0x5ce197ff
  424036:	mov    bl,0xf9
  424038:	mov    ebp,0xe76b19e4
  42403d:	fdivr  QWORD PTR [ebx+0x8c38a45]
  424043:	jl     0x424066
  424045:	push   ebp
  424046:	clc    
  424047:	pop    ds
  424048:	cmp    cl,al
  42404a:	fwait
  42404b:	mov    ds:0x3c695fc8,al
  424050:	jge    0x423fdc
  424052:	jo     0x42402c
  424054:	inc    ebx
  424055:	pop    ss
  424056:	aaa    
  424057:	sub    bl,0xf3
  42405a:	bound  edi,QWORD PTR [ebx+0x5e4b22d2]
  424060:	pop    ebx
  424061:	push   eax
  424062:	jp     0x424017
  424064:	jmp    0x424048
  424066:	add    dl,bh
  424068:	rcr    BYTE PTR [edi+0x15da233e],cl
  42406e:	adc    eax,0x78d7e10a
  424073:	jbe    0x42405e
  424075:	adc    al,0x0
  424077:	dec    eax
  424078:	test   DWORD PTR [ebp+0x87df499],ecx
  42407e:	xchg   ecx,eax
  42407f:	fwait
  424080:	rcl    DWORD PTR [edx],0x65
  424083:	adc    esi,DWORD PTR [edi+0x471e3603]
  424089:	mov    al,0xcf
  42408b:	push   0xffffff8a
  42408d:	jne    0x42404d
  42408f:	cld    
  424090:	pushf  
  424091:	mov    eax,ds:0x15234cc6
  424096:	xor    DWORD PTR [eax],ecx
  424098:	outs   dx,BYTE PTR ds:[esi]
  424099:	dec    esp
  42409a:	lahf   
  42409b:	or     al,0x1a
  42409d:	gs in  eax,0x47
  4240a0:	mov    edx,0xf6fa313b
  4240a5:	and    cl,BYTE PTR [edx-0x14]
  4240a8:	pop    ecx
  4240aa:	xor    eax,0xcbff265c
  4240af:	neg    eax
  4240b1:	pop    ds
  4240b2:	push   ss
  4240b3:	push   edx
  4240b4:	cmp    DWORD PTR ds:0x9260930b,edx
  4240ba:	(bad)  
  4240bb:	fs cld 
  4240bd:	ret    0x167f
  4240c0:	xor    dh,BYTE PTR [edx+0x56a7403d]
  4240c6:	fcom   DWORD PTR [ebx-0x1b]
  4240c9:	xchg   esi,eax
  4240ca:	push   eax
  4240cb:	repz ret 
  4240cd:	clc    
  4240ce:	adc    al,0x39
  4240d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4240d1:	out    dx,eax
  4240d2:	xchg   ebp,eax
  4240d3:	lock xor cl,ch
  4240d6:	int3   
  4240d7:	pop    ecx
  4240d8:	mov    cl,0x5a
  4240da:	es jge 0x4240bd
  4240dd:	idiv   BYTE PTR ds:0xf9fb753f
  4240e3:	push   ds
  4240e4:	push   es
  4240e5:	cmp    al,0xf2
  4240e7:	data16 arpl WORD PTR [ecx+0x74],sp
  4240eb:	enter  0x66f4,0x41
  4240ef:	push   ebp
  4240f0:	gs cwde 
  4240f2:	imul   ecx,DWORD PTR [esp+esi*4+0x1bb7266d],0x121d49a
  4240fd:	imul   esp
  4240ff:	jge    0x42411b
  424101:	sbb    DWORD PTR [ebx+0x189815b7],esi
  424107:	push   ds
  424108:	pop    es
  424109:	popf   
  42410a:	xchg   ebp,esp
  42410c:	xor    al,0x1e
  42410e:	les    edx,FWORD PTR [edx]
  424110:	push   cs
  424111:	fst    DWORD PTR [ebx+ebx*4]
  424114:	shr    ecx,cl
  424116:	xlat   BYTE PTR ds:[ebx]
  424117:	xchg   DWORD PTR [ebx-0x6d7a9057],ecx
  42411d:	imul   ecx,DWORD PTR ds:0x72766f2c,0xffffffd8
  424124:	push   eax
  424125:	or     edi,DWORD PTR [ecx+ebp*4+0x33]
  424129:	xchg   ecx,eax
  42412a:	call   0xd81033d2
  42412f:	mov    ?,WORD PTR [edi-0x7dacfa98]
  424135:	add    ebx,esi
  424137:	xor    bl,BYTE PTR [esi+0x3e]
  42413a:	shr    BYTE PTR [ebx],1
  42413c:	test   DWORD PTR [esi-0x33],ebp
  42413f:	(bad)  
  424140:	stc    
  424141:	test   ch,dl
  424143:	test   al,0x83
  424145:	mov    eax,0xf89c85a2
  42414a:	pop    ebx
  42414b:	pop    edi
  42414c:	pop    esi
  42414d:	leave  
  42414e:	ret    0xc
  424151:	push   ebp
  424152:	mov    ebp,esp
  424154:	push   ecx
  424155:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  42415c:	mov    DWORD PTR ds:0x4291bb,0x19
  424166:	cmp    DWORD PTR ds:0x4291bb,0x0
  42416d:	je     0x4241c3
  424173:	cmp    DWORD PTR ds:0x4291bb,0x5
  42417a:	jb     0x4241c3
  424180:	jmp    0x424195
  424185:	push   0x6cdd
  42418a:	push   0x428019
  42418f:	call   DWORD PTR ds:0x42a647
  424195:	cmp    DWORD PTR ds:0x4291bb,0x6
  42419c:	jne    0x4241b1
  4241a2:	xor    ecx,ecx
  4241a4:	xor    ecx,DWORD PTR ds:0x4291bb
  4241aa:	dec    ecx
  4241ab:	mov    DWORD PTR ds:0x4291bb,ecx
  4241b1:	mov    ecx,DWORD PTR ds:0x4291bb
  4241b7:	dec    ecx
  4241b8:	mov    DWORD PTR ds:0x4291bb,ecx
  4241be:	jmp    0x424166
  4241c3:	mov    eax,DWORD PTR [ebp+0x8]
  4241c6:	or     ecx,ecx
  4241c8:	movsx  eax,BYTE PTR [eax]
  4241cb:	or     ecx,0x305b
  4241d1:	mov    edx,0x3272f3
  4241d6:	add    DWORD PTR ds:0x4291c7,0x4291f7
  4241e0:	sub    eax,edx
  4241e2:	mov    DWORD PTR ds:0x4291a7,0x1e
  4241ec:	cmp    DWORD PTR ds:0x4291a7,0x0
  4241f3:	je     0x42424b
  4241f9:	cmp    DWORD PTR ds:0x4291a7,0x6
  424200:	jl     0x42424b
  424206:	jmp    0x42421d
  42420b:	push   0x4280f2
  424210:	push   0x1
  424212:	push   0x8730
  424217:	call   DWORD PTR ds:0x42a64f
  42421d:	cmp    DWORD PTR ds:0x4291a7,0x7
  424224:	jne    0x424237
  42422a:	mov    ecx,DWORD PTR ds:0x4291a7
  424230:	dec    ecx
  424231:	mov    DWORD PTR ds:0x4291a7,ecx
  424237:	xor    ecx,ecx
  424239:	add    ecx,DWORD PTR ds:0x4291a7
  42423f:	dec    ecx
  424240:	mov    DWORD PTR ds:0x4291a7,ecx
  424246:	jmp    0x4241ec
  42424b:	mov    ecx,0x75108ac
  424250:	xor    eax,ecx
  424252:	cmp    eax,0xf89c85f6
  424257:	jne    0x424286
  42425d:	mov    eax,DWORD PTR [ebp+0x8]
  424260:	push   esi
  424261:	mov    esi,DWORD PTR [ebp+0x8]
  424264:	add    esi,DWORD PTR [eax+0x3c]
  424267:	mov    DWORD PTR [ebp+0x8],esi
  42426a:	mov    eax,DWORD PTR [ebp-0x4]
  42426d:	mov    esi,DWORD PTR [ebp+0x8]
  424270:	xor    eax,ecx
  424272:	add    eax,edx
  424274:	cmp    DWORD PTR [esi+0x54],eax
  424277:	pop    esi
  424278:	je     0x424286
  42427e:	mov    eax,DWORD PTR [ebp+0x8]
  424281:	jmp    0x42428d
  424286:	mov    eax,DWORD PTR [ebp-0x4]
  424289:	xor    eax,ecx
  42428b:	add    eax,edx
  42428d:	leave  
  42428e:	ret    0x4
  424291:	push   ebp
  424292:	mov    ebp,esp
  424294:	sub    esp,0xc
  424297:	and    DWORD PTR ds:0x429157,0x0
  4242a1:	mov    edx,DWORD PTR ds:0x429157
  4242a7:	inc    edx
  4242a8:	mov    DWORD PTR ds:0x429157,edx
  4242ae:	cmp    DWORD PTR ds:0x429157,0x16
  4242b5:	jl     0x4242d6
  4242bb:	jmp    0x4242c9
  4242c0:	push   DWORD PTR [ebp-0x14]
  4242c3:	call   DWORD PTR ds:0x42a653
  4242c9:	cmp    DWORD PTR ds:0x429157,0x13
  4242d0:	jb     0x4242a1
  4242d6:	push   esi
  4242d7:	mov    esi,0xf89c85a1
  4242dc:	mov    edx,DWORD PTR ds:0x429f5f
  4242e2:	mov    ecx,DWORD PTR ds:0x429f67
  4242e8:	sub    edx,ecx
  4242ea:	sub    edx,DWORD PTR [edx+ecx*1]
  4242ed:	mov    DWORD PTR [ebp-0x8],esi
  4242f0:	and    DWORD PTR ds:0x4291bf,0x59ca
  4242fa:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  424301:	sub    edx,DWORD PTR ds:0x4291df
  424307:	push   edi
  424308:	and    DWORD PTR ds:0x4291c7,0x0
  424312:	jmp    0x424326
  424317:	xor    ecx,ecx
  424319:	or     ecx,DWORD PTR ds:0x4291c7
  42431f:	inc    ecx
  424320:	mov    DWORD PTR ds:0x4291c7,ecx
  424326:	cmp    DWORD PTR ds:0x4291c7,0x1f
  42432d:	jae    0x42435b
  424333:	cmp    DWORD PTR ds:0x4291c7,0x20
  42433a:	jbe    0x42435b
  424340:	jmp    0x424356
  424345:	push   0x42803d
  42434a:	push   DWORD PTR [ebp-0x20]
  42434d:	push   DWORD PTR [ebp-0x24]
  424350:	call   DWORD PTR ds:0x42a657
  424356:	jmp    0x424317
  42435b:	mov    eax,eax
  42435d:	and    DWORD PTR ds:0x42919b,0x3c1b
  424367:	mov    eax,DWORD PTR [ebp-0x4]
  42436a:	add    DWORD PTR ds:0x4291df,0x7092
  424374:	mov    edi,DWORD PTR [ebp-0x8]
  424377:	adc    DWORD PTR ds:0x429193,edx
  42437d:	mov    ecx,0x75108ac
  424382:	mov    edx,DWORD PTR ds:0x42917b
  424388:	and    DWORD PTR ds:0x4291e7,edx
  42438e:	xor    eax,ecx
  424390:	add    DWORD PTR ds:0x4291df,0x314e
  42439a:	xor    edi,ecx
  42439c:	mov    edx,DWORD PTR ds:0x429f4b
  4243a2:	mov    edx,DWORD PTR [edx]
  4243a4:	adc    DWORD PTR ds:0x4291ab,edx
  4243aa:	mov    edx,0x3272f3
  4243af:	add    edi,edx
  4243b1:	add    eax,edx
  4243b3:	imul   eax,edi
  4243b6:	mov    edi,DWORD PTR [ebp+0xc]
  4243b9:	cmp    edi,eax
  4243bb:	je     0x424410
  4243c1:	mov    DWORD PTR [ebp-0xc],esi
  4243c4:	mov    eax,DWORD PTR [ebp-0xc]
  4243c7:	mov    esi,DWORD PTR [ebp+0xc]
  4243ca:	xor    eax,ecx
  4243cc:	lea    eax,[eax*8+0x1939810]
  4243d3:	mov    eax,DWORD PTR [esi+eax*1]
  4243d6:	mov    DWORD PTR [ebp+0xc],eax
  4243d9:	mov    eax,DWORD PTR [ebp-0x4]
  4243dc:	mov    esi,DWORD PTR [ebp-0x8]
  4243df:	xor    eax,ecx
  4243e1:	xor    esi,ecx
  4243e3:	add    esi,edx
  4243e5:	add    eax,edx
  4243e7:	imul   eax,esi
  4243ea:	mov    esi,DWORD PTR [ebp+0xc]
  4243ed:	cmp    esi,eax
  4243ef:	je     0x424410
  4243f5:	mov    eax,DWORD PTR [ebp-0x4]
  4243f8:	xor    eax,ecx
  4243fa:	mov    ecx,DWORD PTR [ebp+0xc]
  4243fd:	add    eax,edx
  4243ff:	imul   eax,ecx
  424402:	add    eax,DWORD PTR [ebp+0x8]
  424405:	mov    DWORD PTR [ebp+0xc],eax
  424408:	mov    eax,DWORD PTR [ebp+0xc]
  42440b:	jmp    0x424421
  424410:	mov    eax,DWORD PTR [ebp-0x4]
  424413:	mov    esi,DWORD PTR [ebp-0x8]
  424416:	xor    esi,ecx
  424418:	xor    eax,ecx
  42441a:	add    esi,edx
  42441c:	add    eax,edx
  42441e:	imul   eax,esi
  424421:	pop    edi
  424422:	pop    esi
  424423:	leave  
  424424:	ret    0x8
	...
  424433:	add    BYTE PTR [ebx],dl
  424435:	push   esp
  424436:	test   BYTE PTR [ebp+0x0],cl
  424439:	add    BYTE PTR [eax],al
  42443b:	add    BYTE PTR [edx],al
  42443d:	add    BYTE PTR [eax],al
  42443f:	add    BYTE PTR [eax],dh
  424441:	add    BYTE PTR [eax],al
  424443:	add    BYTE PTR [eax+0x44],dl
  424446:	add    al,BYTE PTR [eax]
  424448:	push   eax
  424449:	cmp    BYTE PTR [edx],al
  42444b:	add    BYTE PTR [eax],al
  42444d:	add    BYTE PTR [eax],al
  42444f:	add    BYTE PTR [edx+0x53],dl
  424452:	inc    esp
  424453:	push   ebx
  424454:	dec    eax
  424455:	mov    bh,0xe
  424457:	js     0x424410
  424459:	les    esp,FWORD PTR [edx-0x609a59bc]
  42445f:	mov    WORD PTR [esi],ss
  424461:	dec    edx
  424462:	ss mov ch,0x1
  424465:	add    BYTE PTR [eax],al
  424467:	add    BYTE PTR [esi+0x3a],al
  42446a:	pop    esp
  42446b:	push   edi
  42446c:	imul   ebp,DWORD PTR [esi+0x64],0x2073776f
  424473:	inc    esp
  424474:	imul   esi,DWORD PTR [edx+0x5c],0x656c6946
  42447b:	inc    ebp
  42447c:	js     0x4244e3
  42447e:	arpl   WORD PTR [eax],ax
  424480:	mov    edx,DWORD PTR [ebp-0x14]
  424483:	sub    esp,0x108
  424489:	push   ebx
  42448a:	mov    eax,ebx
  42448c:	xchg   ecx,eax
  42448d:	mov    eax,DWORD PTR [ebp+0x8]
  424490:	cmp    eax,0xf89c85a1
  424495:	jne    0x424952
  42449b:	mov    eax,DWORD PTR [ebp+0xc]
  42449e:	cmp    eax,0xf89c85a2
  4244a3:	jne    0x424952
  4244a9:	mov    eax,DWORD PTR [ebp+0x24]
  4244ac:	mov    DWORD PTR [ebp-0x4],eax
  4244af:	mov    eax,DWORD PTR [ebp-0x4]
  4244b2:	mov    eax,DWORD PTR [eax+0x1d8]
  4244b8:	mov    eax,DWORD PTR [eax]
  4244ba:	mov    eax,DWORD PTR [eax]
  4244bc:	mov    DWORD PTR [ebp-0x8],eax
  4244bf:	mov    BYTE PTR [ebp-0x18],0x18
  4244c3:	mov    BYTE PTR [ebp-0x17],0x1f
  4244c7:	mov    BYTE PTR [ebp-0x16],0x1a
  4244cb:	mov    BYTE PTR [ebp-0x15],0x4c
  4244cf:	mov    BYTE PTR [ebp-0x14],0x4d
  4244d3:	mov    BYTE PTR [ebp-0x13],0x83
  4244d7:	mov    BYTE PTR [ebp-0x20],0xe
  4244db:	mov    BYTE PTR [ebp-0x1f],0xc
  4244df:	mov    BYTE PTR [ebp-0x1e],0x1e
  4244e3:	mov    BYTE PTR [ebp-0x1d],0xd
  4244e7:	mov    BYTE PTR [ebp-0x1c],0x4c
  4244eb:	mov    BYTE PTR [ebp-0x1b],0x4d
  4244ef:	mov    BYTE PTR [ebp-0x1a],0x83
  4244f3:	mov    BYTE PTR [ebp-0x28],0xc
  4244f7:	mov    BYTE PTR [ebp-0x27],0x1b
  4244fb:	mov    BYTE PTR [ebp-0x26],0x17
  4244ff:	mov    BYTE PTR [ebp-0x25],0x8
  424503:	mov    BYTE PTR [ebp-0x24],0x22
  424507:	mov    BYTE PTR [ebp-0x23],0x13
  42450b:	mov    BYTE PTR [ebp-0x22],0x1a
  42450f:	mov    BYTE PTR [ebp-0x21],0x83
  424513:	xor    ecx,ecx
  424515:	lea    eax,[ebp+ecx*1-0x18]
  424519:	movzx  edx,BYTE PTR [eax]
  42451c:	xor    edx,0x7d
  42451f:	add    edx,0x2
  424522:	inc    ecx
  424523:	mov    BYTE PTR [eax],dl
  424525:	cmp    ecx,0x6
  424528:	jb     0x424515
  42452a:	xor    ecx,ecx
  42452c:	lea    eax,[ebp+ecx*1-0x20]
  424530:	movzx  edx,BYTE PTR [eax]
  424533:	xor    edx,0x7d
  424536:	add    edx,0x2
  424539:	inc    ecx
  42453a:	mov    BYTE PTR [eax],dl
  42453c:	cmp    ecx,0x7
  42453f:	jb     0x42452c
  424541:	xor    ecx,ecx
  424543:	lea    eax,[ebp+ecx*1-0x28]
  424547:	movzx  edx,BYTE PTR [eax]
  42454a:	xor    edx,0x7d
  42454d:	add    edx,0x2
  424550:	inc    ecx
  424551:	mov    BYTE PTR [eax],dl
  424553:	cmp    ecx,0x8
  424556:	jb     0x424543
  424558:	lea    eax,[ebp-0x2c]
  42455b:	mov    DWORD PTR [ebp-0x8],eax
  42455e:	mov    ecx,DWORD PTR [ebp-0x8]
  424561:	mov    eax,0x7113fccf
  424566:	mov    DWORD PTR [ecx],eax
  424568:	mov    ecx,DWORD PTR [ebp-0x2c]
  42456b:	push   esi
  42456c:	push   edi
  42456d:	mov    esi,0x4e3c
  424572:	mov    ebx,0x3272f3
  424577:	cmp    ecx,eax
  424579:	jne    0x424644
  42457f:	lea    eax,[esi+0x3b]
  424582:	mov    WORD PTR [ebp-0x78],ax
  424586:	mov    eax,esi
  424588:	mov    WORD PTR [ebp-0x76],ax
  42458c:	add    eax,0x35
  42458f:	mov    WORD PTR [ebp-0x74],ax
  424593:	lea    eax,[esi+0x2]
  424596:	mov    WORD PTR [ebp-0x72],ax
  42459a:	add    eax,0x41
  42459d:	mov    ecx,eax
  42459f:	lea    eax,[esi-0x13]
  4245a2:	mov    WORD PTR [ebp-0x66],ax
  4245a6:	mov    eax,esi
  4245a8:	mov    WORD PTR [ebp-0x64],ax
  4245ac:	add    eax,0xffffffec
  4245af:	mov    WORD PTR [ebp-0x62],ax
  4245b3:	mov    eax,0x443
  4245b8:	mov    WORD PTR [ebp-0x60],ax
  4245bc:	mov    eax,0x5672
  4245c1:	mov    WORD PTR [ebp-0x5e],ax
  4245c5:	mov    eax,0x6112
  4245ca:	mov    WORD PTR [ebp-0x5c],ax
  4245ce:	lea    eax,[ebp-0xe0]
  4245d4:	push   eax
  4245d5:	mov    eax,DWORD PTR [ebp+0xc]
  4245d8:	mov    edi,0x75108ac
  4245dd:	xor    eax,edi
  4245df:	add    eax,ebx
  4245e1:	push   eax
  4245e2:	mov    WORD PTR [ebp-0x70],cx
  4245e6:	lea    ecx,[esi-0xa]
  4245e9:	mov    edx,ecx
  4245eb:	lea    eax,[ebp-0x78]
  4245ee:	push   eax
  4245ef:	mov    eax,DWORD PTR [ebp-0x4]
  4245f2:	mov    eax,DWORD PTR [eax+0x198]
  4245f8:	mov    WORD PTR [ebp-0x6e],dx
  4245fc:	mov    edx,0x4f88
  424601:	mov    WORD PTR [ebp-0x6c],dx
  424605:	mov    DWORD PTR [ebp-0x6a],0x4e7f4e35
  42460c:	mov    DWORD PTR [ebp-0x5a],0x4e32f1e4
  424613:	mov    DWORD PTR [ebp-0xe0],0x1
  42461d:	mov    DWORD PTR [ebp-0xdc],0x255
  424627:	push   DWORD PTR [eax]
  424629:	mov    eax,DWORD PTR [ebp+0x10]
  42462c:	call   eax
  42462e:	mov    DWORD PTR [ebp-0x8],eax
  424631:	mov    eax,DWORD PTR [ebp-0x8]
  424634:	test   eax,eax
  424636:	je     0x424649
  424638:	xor    DWORD PTR ds:0x76586876,0x87687666
  424642:	jmp    0x424649
  424644:	mov    edi,0x75108ac
  424649:	mov    eax,DWORD PTR [ebp-0x4]
  42464c:	mov    ecx,DWORD PTR [eax+0x18c]
  424652:	xor    eax,eax
  424654:	cmp    DWORD PTR [ecx],eax
  424656:	jne    0x4248c5
  42465c:	mov    ecx,DWORD PTR [ebp-0x4]
  42465f:	mov    ecx,DWORD PTR [ecx+0x17c]
  424665:	mov    DWORD PTR [ecx],eax
  424667:	mov    ecx,DWORD PTR [ebp-0x4]
  42466a:	mov    ecx,DWORD PTR [ecx+0x180]
  424670:	mov    DWORD PTR [ecx],eax
  424672:	mov    eax,0x4e61
  424677:	mov    WORD PTR [ebp-0x9c],ax
  42467e:	mov    eax,esi
  424680:	mov    WORD PTR [ebp-0x9a],ax
  424687:	mov    eax,0x4e71
  42468c:	mov    WORD PTR [ebp-0x98],ax
  424693:	add    eax,0xffffffc0
  424696:	mov    WORD PTR [ebp-0x96],ax
  42469d:	mov    eax,0x4f8c
  4246a2:	mov    WORD PTR [ebp-0x94],ax
  4246a9:	mov    eax,0x4e30
  4246ae:	mov    WORD PTR [ebp-0x92],ax
  4246b5:	add    eax,0x4f
  4246b8:	mov    WORD PTR [ebp-0x90],ax
  4246bf:	mov    eax,0x4e32
  4246c4:	mov    WORD PTR [ebp-0x8e],ax
  4246cb:	mov    eax,esi
  4246cd:	mov    WORD PTR [ebp-0x8c],ax
  4246d4:	mov    eax,0x4e35
  4246d9:	mov    WORD PTR [ebp-0x8a],ax
  4246e0:	mov    eax,0x99f1
  4246e5:	mov    WORD PTR [ebp-0x88],ax
  4246ec:	mov    eax,0x8d60
  4246f1:	mov    WORD PTR [ebp-0x86],ax
  4246f8:	mov    eax,0xd66f
  4246fd:	mov    WORD PTR [ebp-0x84],ax
  424704:	mov    eax,0xd783
  424709:	mov    WORD PTR [ebp-0x82],ax
  424710:	mov    eax,0x2782
  424715:	mov    WORD PTR [ebp-0x80],ax
  424719:	mov    eax,0x4782
  42471e:	mov    WORD PTR [ebp-0x7e],ax
  424722:	mov    eax,0x4e33
  424727:	push   0x8
  424729:	mov    WORD PTR [ebp-0x7c],ax
  42472d:	mov    DWORD PTR [ebp-0x10],0x8171b0c
  424734:	mov    DWORD PTR [ebp-0xc],0x831a1322
  42473b:	lea    eax,[ebp-0x10]
  42473e:	pop    ecx
  42473f:	mov    dl,BYTE PTR [eax]
  424741:	xor    dl,0x7d
  424744:	add    dl,0x2
  424747:	mov    BYTE PTR [eax],dl
  424749:	inc    eax
  42474a:	dec    ecx
  42474b:	jne    0x42473f
  42474d:	lea    eax,[ebp-0x10]
  424750:	mov    DWORD PTR [ebp-0xdc],eax
  424756:	lea    eax,[ebp-0xe0]
  42475c:	push   eax
  42475d:	mov    eax,DWORD PTR [ebp+0xc]
  424760:	xor    eax,edi
  424762:	add    eax,ebx
  424764:	push   eax
  424765:	mov    eax,DWORD PTR [ebp-0x4]
  424768:	add    eax,0x66
  42476b:	push   eax
  42476c:	mov    eax,DWORD PTR [ebp-0x4]
  42476f:	mov    eax,DWORD PTR [eax+0x198]
  424775:	mov    DWORD PTR [ebp-0xe0],0x1
  42477f:	push   DWORD PTR [eax]
  424781:	mov    eax,DWORD PTR [ebp+0x10]
  424784:	call   eax
  424786:	mov    ecx,DWORD PTR [ebp+0x8]
  424789:	xor    ecx,edi
  42478b:	add    ecx,ebx
  42478d:	mov    DWORD PTR [ebp-0x8],eax
  424790:	cmp    eax,ecx
  424792:	jne    0x4247ad
  424794:	mov    eax,ds:0x33730bc8
  424799:	or     eax,0x22150bcf
  42479e:	mov    ds:0x33730bc8,eax
  4247a3:	add    eax,0x3372e92f
  4247a8:	mov    ds:0x33730bc8,eax
  4247ad:	mov    ecx,0x4e64
  4247b2:	mov    eax,ecx
  4247b4:	mov    WORD PTR [ebp-0x40],ax
  4247b8:	add    eax,0x7
  4247bb:	mov    edx,eax
  4247bd:	mov    WORD PTR [ebp-0x3e],dx
  4247c1:	mov    edx,0x4f93
  4247c6:	mov    WORD PTR [ebp-0x3c],dx
  4247ca:	add    edx,0xfffffff8
  4247cd:	mov    WORD PTR [ebp-0x3a],dx
  4247d1:	mov    edx,0x4f8d
  4247d6:	mov    WORD PTR [ebp-0x38],dx
  4247da:	inc    edx
  4247db:	mov    WORD PTR [ebp-0x36],dx
  4247df:	mov    edx,0x4f87
  4247e4:	mov    WORD PTR [ebp-0x34],dx
  4247e8:	mov    WORD PTR [ebp-0x32],cx
  4247ec:	mov    ecx,esi
  4247ee:	mov    WORD PTR [ebp-0x30],cx
  4247f2:	lea    ecx,[edx-0x3]
  4247f5:	mov    edx,ecx
  4247f7:	mov    WORD PTR [ebp-0x54],dx
  4247fb:	mov    edx,eax
  4247fd:	mov    WORD PTR [ebp-0x52],dx
  424801:	mov    edx,0x4e73
  424806:	mov    WORD PTR [ebp-0x50],dx
  42480a:	mov    WORD PTR [ebp-0x4e],ax
  42480e:	lea    eax,[edx-0x6]
  424811:	mov    WORD PTR [ebp-0x4c],ax
  424815:	inc    eax
  424816:	mov    WORD PTR [ebp-0x4a],ax
  42481a:	lea    eax,[edx-0xc]
  42481d:	mov    WORD PTR [ebp-0x48],ax
  424821:	mov    WORD PTR [ebp-0x46],cx
  424825:	mov    WORD PTR [ebp-0x44],si
  424829:	mov    eax,DWORD PTR [ebp+0x8]
  42482c:	movzx  ecx,WORD PTR [ebp-0x54]
  424830:	xor    eax,edi
  424832:	add    eax,ebx
  424834:	xor    eax,ecx
  424836:	mov    WORD PTR [ebp-0x54],ax
  42483a:	mov    eax,DWORD PTR [ebp+0x8]
  42483d:	movzx  ecx,WORD PTR [ebp-0x40]
  424841:	xor    eax,edi
  424843:	add    eax,ebx
  424845:	xor    eax,ecx
  424847:	mov    WORD PTR [ebp-0x40],ax
  42484b:	xor    eax,eax
  42484d:	mov    WORD PTR [ebp-0xf4],ax
  424854:	mov    WORD PTR [ebp-0x108],ax
  42485b:	mov    edi,DWORD PTR [ebp+0x24]
  42485e:	lea    eax,[ebp-0xf4]
  424864:	lea    edx,[ebp-0x54]
  424867:	mov    DWORD PTR [ebp-0xe0],0x2
  424871:	mov    DWORD PTR [ebp-0xdc],eax
  424877:	call   0x4272b1
  42487c:	mov    DWORD PTR [ebp-0xd8],eax
  424882:	lea    eax,[ebp-0xe0]
  424888:	push   eax
  424889:	mov    eax,DWORD PTR [ebp+0xc]
  42488c:	xor    eax,0x75108ac
  424891:	add    eax,ebx
  424893:	push   eax
  424894:	lea    eax,[ebp-0x9c]
  42489a:	push   eax
  42489b:	push   DWORD PTR [ebp-0x8]
  42489e:	mov    eax,DWORD PTR [ebp+0x10]
  4248a1:	call   eax
  4248a3:	mov    edi,DWORD PTR [ebp+0x24]
  4248a6:	lea    eax,[ebp-0x108]
  4248ac:	lea    edx,[ebp-0x40]
  4248af:	mov    DWORD PTR [ebp-0xdc],eax
  4248b5:	call   0x4272b1
  4248ba:	mov    DWORD PTR [ebp-0xd8],eax
  4248c0:	mov    edi,0x75108ac
  4248c5:	mov    eax,DWORD PTR [ebp+0x14]
  4248c8:	push   DWORD PTR [ebp-0x4]
  4248cb:	push   DWORD PTR [ebp+0x20]
  4248ce:	push   DWORD PTR [ebp+0x1c]
  4248d1:	push   DWORD PTR [ebp+0x18]
  4248d4:	push   DWORD PTR [ebp+0x10]
  4248d7:	push   DWORD PTR [ebp+0x8]
  4248da:	push   DWORD PTR [ebp+0xc]
  4248dd:	call   0x425b50
  4248e2:	test   eax,eax
  4248e4:	je     0x424928
  4248e6:	add    DWORD PTR [ebp-0x4],eax
  4248e9:	push   DWORD PTR [ebp-0x4]
  4248ec:	lea    esi,[ebp+0x4]
  4248ef:	call   0x424d40
  4248f4:	mov    eax,DWORD PTR [ebp-0x4]
  4248f7:	mov    eax,DWORD PTR [eax+0x1c8]
  4248fd:	mov    eax,DWORD PTR [eax]
  4248ff:	xor    eax,edi
  424901:	add    eax,ebx
  424903:	mov    eax,DWORD PTR [ebp-0x4]
  424906:	jne    0x42491e
  424908:	mov    ecx,DWORD PTR [ebp-0x4]
  42490b:	mov    ecx,DWORD PTR [ecx+0x1cc]
  424911:	push   DWORD PTR [ecx]
  424913:	mov    eax,DWORD PTR [eax+0x1e0]
  424919:	call   DWORD PTR [eax+0x28]
  42491c:	jmp    0x424928
  42491e:	mov    eax,DWORD PTR [eax+0x17c]
  424924:	mov    eax,DWORD PTR [eax]
  424926:	add    DWORD PTR [esi],eax
  424928:	mov    eax,DWORD PTR [ebp-0x4]
  42492b:	mov    eax,DWORD PTR [eax+0x1dc]
  424931:	dec    DWORD PTR [eax]
  424933:	mov    ecx,DWORD PTR [ebp-0x4]
  424936:	mov    ecx,DWORD PTR [ecx+0x1d8]
  42493c:	mov    eax,DWORD PTR [eax]
  42493e:	lea    eax,[ecx+eax*4]
  424941:	mov    ecx,DWORD PTR [ebp-0x4]
  424944:	mov    ecx,DWORD PTR [ecx+0x17c]
  42494a:	mov    eax,DWORD PTR [eax]
  42494c:	mov    ecx,DWORD PTR [ecx]
  42494e:	add    DWORD PTR [eax],ecx
  424950:	pop    edi
  424951:	pop    esi
  424952:	pop    ebx
  424953:	leave  
  424954:	ret    0x20
  424957:	push   edi
  424958:	push   esi
  424959:	push   ebx
  42495a:	push   ebp
  42495b:	mov    ebp,esp
  42495d:	mov    eax,DWORD PTR [ebp+0x24]
  424960:	add    DWORD PTR [ebp+0x28],eax
  424963:	push   eax
  424964:	cld    
  424965:	mov    esi,DWORD PTR [ebp+0x18]
  424968:	add    DWORD PTR [ebp+0x1c],esi
  42496b:	push   esi
  42496c:	mov    esi,DWORD PTR [ebp+0x14]
  42496f:	lods   eax,DWORD PTR ds:[esi]
  424970:	xchg   edx,eax
  424971:	push   edx
  424972:	mov    cl,BYTE PTR [esi-0x2]
  424975:	or     eax,0xffffffff
  424978:	shl    eax,cl
  42497a:	not    eax
  42497c:	push   eax
  42497d:	mov    cl,dh
  42497f:	or     eax,0xffffffff
  424982:	shl    eax,cl
  424984:	not    eax
  424986:	push   eax
  424987:	add    cl,dl
  424989:	mov    edi,esi
  42498b:	sub    esp,0xc
  42498e:	sub    eax,eax
  424990:	inc    eax
  424991:	push   eax
  424992:	push   eax
  424993:	push   eax
  424994:	push   eax
  424995:	push   eax
  424996:	push   edi
  424997:	sub    esi,esi
  424999:	push   esi
  42499a:	or     ebx,0xffffffff
  42499d:	mov    eax,0x300
  4249a2:	shl    eax,cl
  4249a4:	lea    ecx,[eax+0x736]
  4249aa:	mov    eax,0x4000400
  4249af:	shr    ecx,1
  4249b1:	rep stos DWORD PTR es:[edi],eax
  4249b3:	push   0x5
  4249b5:	pop    ecx
  4249b6:	call   0x424ca1
  4249bb:	loop   0x4249b6
  4249bd:	lea    esi,[esi]
  4249bf:	lea    edi,[edi]
  4249c1:	mov    edi,DWORD PTR [ebp-0x4]
  4249c4:	mov    eax,DWORD PTR [ebp-0x10]
  4249c7:	sub    edi,DWORD PTR [ebp+0x24]
  4249ca:	and    eax,edi
  4249cc:	mov    DWORD PTR [ebp-0x18],eax
  4249cf:	mov    al,0x0
  4249d1:	call   0x424cb9
  4249d6:	jne    0x424a71
  4249dc:	mov    cl,BYTE PTR [ebp-0xc]
  4249df:	and    edi,DWORD PTR [ebp-0x14]
  4249e2:	shl    edi,cl
  4249e4:	sub    cl,0x8
  4249e7:	neg    cl
  4249e9:	shr    esi,cl
  4249eb:	pop    eax
  4249ec:	add    edi,esi
  4249ee:	pop    esi
  4249ef:	lea    edi,[edi+edi*2]
  4249f2:	shl    edi,0x8
  4249f5:	cmp    al,0x7
  4249f7:	pop    edx
  4249f8:	lea    ecx,[esi+edi*2+0xe6c]
  4249ff:	push   ecx
  424a00:	push   esi
  424a01:	mov    esi,0x100
  424a06:	push   eax
  424a07:	mov    al,0x1
  424a09:	jb     0x424a3f
  424a0b:	mov    edi,DWORD PTR [ebp-0x4]
  424a0e:	sub    edi,DWORD PTR [ebp-0x24]
  424a11:	movzx  edi,BYTE PTR [edi]
  424a14:	mov    ebp,DWORD PTR [ebp-0x34]
  424a17:	shl    edi,1
  424a19:	mov    ecx,esi
  424a1b:	and    esi,edi
  424a1d:	add    ecx,esi
  424a1f:	lea    ebp,[ebp+ecx*2+0x0]
  424a23:	call   0x424cd8
  424a28:	mov    ecx,eax
  424a2a:	shr    esi,0x8
  424a2d:	and    ecx,0x1
  424a30:	cmp    esi,ecx
  424a32:	mov    esi,0x100
  424a37:	jne    0x424a47
  424a39:	cmp    eax,esi
  424a3b:	jb     0x424a14
  424a3d:	jmp    0x424a53
  424a3f:	mov    ebp,DWORD PTR [ebp-0x34]
  424a42:	call   0x424cd8
  424a47:	inc    eax
  424a48:	inc    esi
  424a49:	sub    eax,0x1
  424a4c:	sub    esi,0x1
  424a4f:	cmp    eax,esi
  424a51:	jb     0x424a3f
  424a53:	pop    edx
  424a54:	inc    edx
  424a55:	cmp    edx,0x5
  424a58:	dec    edx
  424a59:	mov    ecx,edx
  424a5b:	jb     0x424a6c
  424a5d:	inc    edx
  424a5e:	cmp    edx,0xb
  424a61:	dec    edx
  424a62:	mov    cl,0x4
  424a64:	dec    cl
  424a66:	jb     0x424a6c
  424a68:	mov    cl,0x7
  424a6a:	dec    cl
  424a6c:	sub    edx,ecx
  424a6e:	push   edx
  424a6f:	jmp    0x424ac0
  424a71:	mov    al,0xc1
  424a73:	dec    al
  424a75:	call   0x424cc9
  424a7a:	jne    0x424a90
  424a7c:	pop    eax
  424a7d:	pop    edi
  424a7e:	pop    edx
  424a7f:	pop    ecx
  424a80:	pop    edx
  424a81:	pop    ecx
  424a82:	push   DWORD PTR [esp]
  424a85:	push   ecx
  424a86:	push   edx
  424a87:	mov    edx,0x664
  424a8c:	mov    cl,0x0
  424a8e:	jmp    0x424b03
  424a90:	mov    al,0xcd
  424a92:	dec    al
  424a94:	call   0x424cc9
  424a99:	jne    0x424ac9
  424a9b:	mov    al,0xf1
  424a9d:	dec    al
  424a9f:	call   0x424cb9
  424aa4:	jne    0x424af9
  424aa6:	pop    eax
  424aa7:	cmp    al,0x7
  424aa9:	mov    al,0x9
  424aab:	jb     0x424aaf
  424aad:	mov    al,0xb
  424aaf:	push   eax
  424ab0:	mov    esi,DWORD PTR [ebp-0x4]
  424ab3:	sub    esi,DWORD PTR [ebp-0x24]
  424ab6:	cmp    esi,DWORD PTR [ebp+0x24]
  424ab9:	jb     0x424c90
  424abf:	lods   al,BYTE PTR ds:[esi]
  424ac0:	mov    edi,DWORD PTR [ebp-0x4]
  424ac3:	stos   BYTE PTR es:[edi],al
  424ac4:	jmp    0x424c57
  424ac9:	mov    al,0xd8
  424acb:	call   0x424cc9
  424ad0:	mov    esi,DWORD PTR [ebp-0x28]
  424ad3:	je     0x424af0
  424ad5:	mov    al,0xe4
  424ad7:	call   0x424cc9
  424adc:	mov    esi,DWORD PTR [ebp-0x2c]
  424adf:	je     0x424aea
  424ae1:	mov    esi,DWORD PTR [ebp-0x30]
  424ae4:	mov    ecx,DWORD PTR [ebp-0x2c]
  424ae7:	mov    DWORD PTR [ebp-0x30],ecx
  424aea:	mov    ecx,DWORD PTR [ebp-0x28]
  424aed:	mov    DWORD PTR [ebp-0x2c],ecx
  424af0:	mov    ecx,DWORD PTR [ebp-0x24]
  424af3:	mov    DWORD PTR [ebp-0x28],ecx
  424af6:	mov    DWORD PTR [ebp-0x24],esi
  424af9:	pop    eax
  424afa:	pop    edi
  424afb:	pop    ecx
  424afc:	mov    edx,0xa68
  424b01:	mov    cl,0x8
  424b03:	add    edx,edi
  424b05:	push   edx
  424b06:	push   edi
  424b07:	cmp    al,0x7
  424b09:	mov    al,cl
  424b0b:	jb     0x424b0f
  424b0d:	add    al,0x3
  424b0f:	push   eax
  424b10:	mov    ebp,DWORD PTR [ebp-0x34]
  424b13:	call   0x424cd6
  424b18:	jne    0x424b2e
  424b1a:	mov    eax,DWORD PTR [ebp-0x18]
  424b1d:	mov    edi,DWORD PTR [ebp-0x34]
  424b20:	shl    eax,0x3
  424b23:	sub    ecx,ecx
  424b25:	push   0x8
  424b27:	pop    esi
  424b28:	lea    edi,[edi+eax*2+0x4]
  424b2c:	jmp    0x424b63
  424b2e:	mov    ebp,DWORD PTR [ebp-0x34]
  424b31:	add    ebp,0x2
  424b34:	call   0x424cd6
  424b39:	jne    0x424b53
  424b3b:	mov    eax,DWORD PTR [ebp-0x18]
  424b3e:	mov    edi,DWORD PTR [ebp-0x34]
  424b41:	shl    eax,0x3
  424b44:	push   0x8
  424b46:	pop    ecx
  424b47:	push   0x8
  424b49:	pop    esi
  424b4a:	lea    edi,[edi+eax*2+0x104]
  424b51:	jmp    0x424b63
  424b53:	mov    edi,0x204
  424b58:	add    edi,DWORD PTR [ebp-0x34]
  424b5b:	push   0x10
  424b5d:	pop    ecx
  424b5e:	mov    esi,0x100
  424b63:	mov    DWORD PTR [ebp-0x1c],ecx
  424b66:	sub    eax,eax
  424b68:	inc    eax
  424b69:	mov    ebp,edi
  424b6b:	call   0x424cd8
  424b70:	mov    ecx,eax
  424b72:	sub    ecx,esi
  424b74:	jb     0x424b69
  424b76:	add    DWORD PTR [ebp-0x1c],ecx
  424b79:	cmp    DWORD PTR [ebp-0x3c],0x4
  424b7d:	jae    0x424c33
  424b83:	add    DWORD PTR [ebp-0x3c],0x7
  424b87:	mov    ecx,DWORD PTR [ebp-0x1c]
  424b8a:	cmp    ecx,0x4
  424b8d:	jb     0x424b92
  424b8f:	push   0x3
  424b91:	pop    ecx
  424b92:	mov    edi,DWORD PTR [ebp-0x38]
  424b95:	shl    ecx,0x6
  424b98:	sub    eax,eax
  424b9a:	inc    eax
  424b9b:	push   0x40
  424b9d:	pop    esi
  424b9e:	lea    edi,[edi+ecx*2+0x360]
  424ba5:	mov    ebp,edi
  424ba7:	call   0x424cd8
  424bac:	mov    ecx,eax
  424bae:	sub    ecx,esi
  424bb0:	jb     0x424ba5
  424bb2:	mov    DWORD PTR [ebp-0x18],ecx
  424bb5:	mov    DWORD PTR [ebp-0x24],ecx
  424bb8:	cmp    ecx,0x4
  424bbb:	jb     0x424c30
  424bbd:	mov    esi,ecx
  424bbf:	and    DWORD PTR [ebp-0x24],0x1
  424bc3:	shr    esi,1
  424bc5:	or     DWORD PTR [ebp-0x24],0x2
  424bc9:	dec    esi
  424bca:	cmp    ecx,0xe
  424bcd:	jae    0x424be8
  424bcf:	mov    eax,0x2af
  424bd4:	sub    eax,ecx
  424bd6:	mov    ecx,esi
  424bd8:	shl    BYTE PTR [ebp-0x24],cl
  424bdb:	add    eax,DWORD PTR [ebp-0x24]
  424bde:	shl    eax,1
  424be0:	add    eax,DWORD PTR [ebp-0x38]
  424be3:	mov    DWORD PTR [ebp-0x34],eax
  424be6:	jmp    0x424c15
  424be8:	sub    esi,0x4
  424beb:	call   0x424c95
  424bf0:	shr    ebx,1
  424bf2:	shl    DWORD PTR [ebp-0x24],1
  424bf5:	cmp    DWORD PTR [ebp-0x20],ebx
  424bf8:	jb     0x424c00
  424bfa:	inc    DWORD PTR [ebp-0x24]
  424bfd:	sub    DWORD PTR [ebp-0x20],ebx
  424c00:	dec    esi
  424c01:	jne    0x424beb
  424c03:	mov    eax,0x644
  424c08:	add    eax,DWORD PTR [ebp-0x38]
  424c0b:	mov    DWORD PTR [ebp-0x34],eax
  424c0e:	shl    DWORD PTR [ebp-0x24],0x4
  424c12:	push   0x4
  424c14:	pop    esi
  424c15:	sub    edi,edi
  424c17:	inc    edi
  424c18:	mov    eax,edi
  424c1a:	mov    ebp,DWORD PTR [ebp-0x34]
  424c1d:	call   0x424cd8
  424c22:	test   al,0x1
  424c24:	je     0x424c29
  424c26:	or     DWORD PTR [ebp-0x24],edi
  424c29:	shl    edi,1
  424c2b:	dec    esi
  424c2c:	jne    0x424c1a
  424c2e:	jmp    0x424c30
  424c30:	inc    DWORD PTR [ebp-0x24]
  424c33:	mov    ecx,DWORD PTR [ebp-0x1c]
  424c36:	add    ecx,0x2
  424c39:	mov    edi,DWORD PTR [ebp-0x4]
  424c3c:	mov    eax,edi
  424c3e:	sub    eax,DWORD PTR [ebp+0x24]
  424c41:	cmp    DWORD PTR [ebp-0x24],eax
  424c44:	ja     0x424c90
  424c46:	mov    esi,edi
  424c48:	sub    esi,DWORD PTR [ebp-0x24]
  424c4b:	mov    edx,DWORD PTR [ebp+0x28]
  424c4e:	lods   al,BYTE PTR ds:[esi]
  424c4f:	stos   BYTE PTR es:[edi],al
  424c50:	cmp    edi,edx
  424c52:	jae    0x424c57
  424c54:	dec    ecx
  424c55:	jne    0x424c4e
  424c57:	mov    DWORD PTR [ebp-0x4],edi
  424c5a:	movzx  esi,al
  424c5d:	cmp    edi,DWORD PTR [ebp+0x28]
  424c60:	jb     0x4249c1
  424c66:	call   0x424c95
  424c6b:	sub    eax,eax
  424c6d:	lea    ebp,[esp+0x3c]
  424c71:	mov    edx,DWORD PTR [ebp+0x20]
  424c74:	mov    esi,DWORD PTR [ebp-0x8]
  424c77:	sub    esi,DWORD PTR [ebp+0x18]
  424c7a:	mov    DWORD PTR [edx],esi
  424c7c:	mov    edx,DWORD PTR [ebp+0x2c]
  424c7f:	mov    edi,DWORD PTR [edx+edi*2+0x33]
  424c83:	jl     0x424c9c
  424c85:	lods   eax,DWORD PTR ds:[esi]
  424c86:	outs   dx,DWORD PTR ds:[esi]
  424c87:	scas   al,BYTE PTR es:[edi]
  424c88:	hlt    
  424c89:	add    BYTE PTR [edx+edx*4],al
  424c8c:	test   DWORD PTR [edi-0x75cc1800],0x8dea3688
  424c96:	jbe    0x424c1f
  424c98:	xchg   DWORD PTR [edi-0x6974af75],eax
  424c9e:	mov    ss,WORD PTR [esi]
  424ca0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ca1:	loopne 0x424c58
  424ca3:	pop    esp
  424ca4:	push   0x73
  424ca6:	pop    esp
  424ca7:	not    DWORD PTR [edx+ebx*1-0x4b]
  424cab:	pushf  
  424cac:	or     cl,BYTE PTR [esi-0x52c658f6]
  424cb2:	pushf  
  424cb3:	or     ch,BYTE PTR [ebp-0x69ff95a4]
  424cb9:	mov    ch,0xbc
  424cbb:	call   0x970e:0x8e8a61c3
  424cc2:	xchg   ebx,eax
  424cc3:	pushf  
  424cc4:	sub    dl,BYTE PTR [ebx-0x3c60c972]
  424cca:	popa   
  424ccb:	mov    dl,BYTE PTR [ebx+0x3cb59a9c]
  424cd1:	stos   BYTE PTR es:[edi],al
  424cd2:	mov    ebp,0x33879c38
  424cd7:	mov    bh,BYTE PTR [ebp-0x727863c8]
  424cdd:	jbe    0x424c66
  424cdf:	xchg   DWORD PTR [edi-0x4a08ab75],eax
  424ce5:	mov    eax,0x188e6717
  424cea:	pop    ss
  424ceb:	pop    es
  424cec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ced:	jae    0x424ca7
  424cef:	pop    ss
  424cf0:	clc    
  424cf1:	push   esp
  424cf2:	stc    
  424cf3:	mov    cl,0xcb
  424cf5:	xchg   BYTE PTR [eax+0x168e6717],bl
  424cfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424cfc:	test   eax,0x8b0717d8
  424d01:	retf   
  424d02:	movzx  edx,WORD PTR [ebp+0x0]
  424d06:	shr    ecx,0xb
  424d09:	imul   ecx,edx
  424d0c:	cmp    DWORD PTR [esp+0x20],ecx
  424d10:	jae    0x424d29
  424d12:	mov    ebx,ecx
  424d14:	mov    ecx,0x800
  424d19:	sub    ecx,edx
  424d1b:	shr    ecx,0x5
  424d1e:	add    WORD PTR [ebp+0x0],cx
  424d22:	add    eax,eax
  424d24:	lea    ebp,[esp+0x40]
  424d28:	ret    
  424d29:	shr    edx,0x5
  424d2c:	sub    DWORD PTR [esp+0x20],ecx
  424d30:	sub    ebx,ecx
  424d32:	sub    WORD PTR [ebp+0x0],dx
  424d36:	add    eax,eax
  424d38:	add    eax,0x1
  424d3b:	lea    ebp,[esp+0x40]
  424d3f:	ret    
  424d40:	push   ebp
  424d41:	mov    ebp,esp
  424d43:	sub    esp,0x12c
  424d49:	push   ebx
  424d4a:	push   esi
  424d4b:	push   edi
  424d4c:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  424d53:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  424d5a:	mov    eax,DWORD PTR [ebp+0x8]
  424d5d:	mov    DWORD PTR [ebp+0x8],eax
  424d60:	mov    ecx,DWORD PTR [ebp-0x10]
  424d63:	mov    ebx,0x75108ac
  424d68:	xor    ecx,ebx
  424d6a:	mov    eax,0x3272f3
  424d6f:	add    ecx,eax
  424d71:	mov    DWORD PTR [ebp-0x24],ecx
  424d74:	mov    ecx,DWORD PTR [ebp-0x10]
  424d77:	xor    ecx,ebx
  424d79:	add    ecx,eax
  424d7b:	mov    DWORD PTR [ebp-0x40],ecx
  424d7e:	mov    ecx,DWORD PTR [ebp-0x10]
  424d81:	xor    ecx,ebx
  424d83:	add    ecx,eax
  424d85:	mov    DWORD PTR [ebp-0x3c],ecx
  424d88:	mov    ecx,DWORD PTR [ebp-0x10]
  424d8b:	xor    ecx,ebx
  424d8d:	add    ecx,eax
  424d8f:	mov    DWORD PTR [ebp-0xd8],ecx
  424d95:	mov    DWORD PTR [ebp-0x50],0xf89f05a1
  424d9c:	mov    DWORD PTR [ebp-0x3c],0xf89cb5a1
  424da3:	mov    DWORD PTR [ebp-0x54],0xf89c85bd
  424daa:	push   0x25
  424dac:	pop    ecx
  424dad:	mov    DWORD PTR [ebp-0x30],ecx
  424db0:	mov    DWORD PTR [ebp-0x30],ecx
  424db3:	push   0x65
  424db5:	pop    ecx
  424db6:	mov    DWORD PTR [ebp-0x30],ecx
  424db9:	mov    DWORD PTR [ebp-0x30],ecx
  424dbc:	mov    DWORD PTR [ebp-0x30],0x4d
  424dc3:	mov    DWORD PTR [ebp-0x30],0x43
  424dca:	mov    ecx,DWORD PTR [ebp-0x10]
  424dcd:	xor    ecx,ebx
  424dcf:	add    ecx,eax
  424dd1:	mov    DWORD PTR [ebp-0x30],ecx
  424dd4:	mov    ecx,DWORD PTR [ebp-0x10]
  424dd7:	xor    ecx,ebx
  424dd9:	add    ecx,eax
  424ddb:	mov    DWORD PTR [ebp-0x30],ecx
  424dde:	mov    DWORD PTR [ebp-0x28],0x258
  424de5:	mov    DWORD PTR [ebp-0x34],0x36
  424dec:	mov    DWORD PTR [ebp-0x14],0x7a
  424df3:	lea    edi,[ebp-0x10c]
  424df9:	lea    esi,[ebp-0x12c]
  424dff:	call   0x425abf
  424e04:	dec    DWORD PTR [ebp-0x14]
  424e07:	jne    0x424df3
  424e09:	dec    DWORD PTR [ebp-0x34]
  424e0c:	jne    0x424dec
  424e0e:	dec    DWORD PTR [ebp-0x28]
  424e11:	jne    0x424de5
  424e13:	mov    DWORD PTR [ebp-0x28],0x400e
  424e1a:	mov    eax,DWORD PTR [ebp-0x10]
  424e1d:	xor    eax,ebx
  424e1f:	mov    esi,0x3272f3
  424e24:	add    eax,esi
  424e26:	mov    DWORD PTR [ebp-0x1c],eax
  424e29:	mov    eax,DWORD PTR [ebp-0x10]
  424e2c:	and    DWORD PTR [ebp-0x94],0x0
  424e33:	xor    eax,ebx
  424e35:	add    eax,esi
  424e37:	mov    DWORD PTR [ebp-0x38],eax
  424e3a:	mov    eax,fs:0x18
  424e40:	mov    DWORD PTR [ebp-0x94],eax
  424e46:	mov    eax,DWORD PTR [eax+0x30]
  424e49:	mov    DWORD PTR [ebp-0xcc],eax
  424e4f:	mov    eax,DWORD PTR [eax+0xc]
  424e52:	mov    DWORD PTR [ebp-0xc0],eax
  424e58:	mov    eax,DWORD PTR [ebp+0x8]
  424e5b:	lea    ecx,[ebp-0x94]
  424e61:	mov    DWORD PTR [eax+0x1a0],ecx
  424e67:	mov    eax,DWORD PTR [ebp+0x8]
  424e6a:	lea    ecx,[ebp-0xcc]
  424e70:	mov    DWORD PTR [eax+0x1a4],ecx
  424e76:	mov    eax,DWORD PTR [ebp+0x8]
  424e79:	push   DWORD PTR [ebp+0x8]
  424e7c:	lea    ecx,[ebp-0xc0]
  424e82:	mov    DWORD PTR [eax+0x1a8],ecx
  424e88:	call   0x427282
  424e8d:	mov    ecx,DWORD PTR [ebp-0x10]
  424e90:	xor    ecx,ebx
  424e92:	add    ecx,esi
  424e94:	cmp    ecx,eax
  424e96:	je     0x425219
  424e9c:	mov    eax,DWORD PTR [ebp+0x8]
  424e9f:	mov    eax,DWORD PTR [eax+0x194]
  424ea5:	mov    ecx,DWORD PTR [eax]
  424ea7:	mov    eax,DWORD PTR [ebp+0x8]
  424eaa:	mov    eax,DWORD PTR [eax+0x194]
  424eb0:	mov    eax,DWORD PTR [eax]
  424eb2:	add    eax,DWORD PTR [ecx+0x3c]
  424eb5:	mov    ecx,DWORD PTR [ebp+0x8]
  424eb8:	mov    ecx,DWORD PTR [ecx+0x1e0]
  424ebe:	lea    edx,[ebp-0xec]
  424ec4:	push   edx
  424ec5:	mov    edx,DWORD PTR [ebp+0x8]
  424ec8:	mov    edx,DWORD PTR [edx+0x18c]
  424ece:	mov    edx,DWORD PTR [edx]
  424ed0:	add    edx,DWORD PTR [eax+0x88]
  424ed6:	push   0x4
  424ed8:	push   DWORD PTR [eax+0x8c]
  424ede:	push   edx
  424edf:	call   DWORD PTR [ecx+0x1c]
  424ee2:	push   DWORD PTR [ebp+0x8]
  424ee5:	xor    eax,eax
  424ee7:	mov    DWORD PTR [ebp-0xa8],0x1b3c0c3a
  424ef1:	mov    DWORD PTR [ebp-0xa4],0x10370d22
  424efb:	mov    DWORD PTR [ebp-0xa0],0x420d1e08
  424f05:	mov    BYTE PTR [ebp-0x9c],0x83
  424f0c:	lea    edi,[ebp-0x9b]
  424f12:	stos   DWORD PTR es:[edi],eax
  424f13:	stos   WORD PTR es:[edi],ax
  424f15:	stos   BYTE PTR es:[edi],al
  424f16:	xor    eax,eax
  424f18:	mov    DWORD PTR [ebp-0xbc],0x1b3c0c3a
  424f22:	mov    DWORD PTR [ebp-0xb8],0x10370d22
  424f2c:	mov    DWORD PTR [ebp-0xb4],0x280d1e08
  424f36:	mov    BYTE PTR [ebp-0xb0],0x83
  424f3d:	lea    edi,[ebp-0xaf]
  424f43:	stos   DWORD PTR es:[edi],eax
  424f44:	stos   WORD PTR es:[edi],ax
  424f46:	stos   BYTE PTR es:[edi],al
  424f47:	mov    edi,DWORD PTR [ebp+0x8]
  424f4a:	mov    eax,DWORD PTR [ebp+0x8]
  424f4d:	mov    edx,DWORD PTR [eax+0x1b8]
  424f53:	mov    DWORD PTR [ebp-0x68],0xd0f0c17
  424f5a:	mov    DWORD PTR [ebp-0x64],0x1a13161c
  424f61:	mov    WORD PTR [ebp-0x60],0x8342
  424f67:	mov    DWORD PTR [ebp-0x90],0x1b3c0c3a
  424f71:	mov    DWORD PTR [ebp-0x8c],0x17420d22
  424f7b:	mov    DWORD PTR [ebp-0x88],0x31221b13
  424f85:	mov    DWORD PTR [ebp-0x84],0xd1e160e
  424f8f:	mov    DWORD PTR [ebp-0x80],0x83421c1a
  424f96:	mov    DWORD PTR [ebp-0x7c],0x1b3c0c3a
  424f9d:	mov    DWORD PTR [ebp-0x78],0x17420d22
  424fa4:	mov    DWORD PTR [ebp-0x74],0x31221b13
  424fab:	mov    DWORD PTR [ebp-0x70],0xd1e160e
  424fb2:	mov    DWORD PTR [ebp-0x6c],0x83281c1a
  424fb9:	call   0x4272b1
  424fbe:	push   eax
  424fbf:	mov    eax,DWORD PTR [ebp+0x8]
  424fc2:	mov    eax,DWORD PTR [eax+0x1a8]
  424fc8:	push   DWORD PTR [eax]
  424fca:	call   0x426f52
  424fcf:	test   eax,eax
  424fd1:	jne    0x425023
  424fd3:	mov    eax,DWORD PTR [ebp+0x8]
  424fd6:	mov    eax,DWORD PTR [eax+0x1e0]
  424fdc:	mov    edi,DWORD PTR [ebp+0x8]
  424fdf:	add    eax,0x4
  424fe2:	mov    DWORD PTR [ebp-0x20],eax
  424fe5:	mov    eax,DWORD PTR [ebp+0x8]
  424fe8:	mov    edx,DWORD PTR [eax+0x1b8]
  424fee:	call   0x4272b1
  424ff3:	push   eax
  424ff4:	mov    eax,DWORD PTR [ebp-0x20]
  424ff7:	call   DWORD PTR [eax]
  424ff9:	test   eax,eax
  424ffb:	jne    0x425023
  424ffd:	mov    eax,DWORD PTR [ebp+0x8]
  425000:	mov    eax,DWORD PTR [eax+0x1e0]
  425006:	mov    edi,DWORD PTR [ebp+0x8]
  425009:	add    eax,0x10
  42500c:	mov    DWORD PTR [ebp-0x20],eax
  42500f:	mov    eax,DWORD PTR [ebp+0x8]
  425012:	mov    edx,DWORD PTR [eax+0x1b8]
  425018:	call   0x4272b1
  42501d:	push   eax
  42501e:	mov    eax,DWORD PTR [ebp-0x20]
  425021:	call   DWORD PTR [eax]
  425023:	mov    eax,DWORD PTR [ebp-0x10]
  425026:	mov    ecx,DWORD PTR [ebp-0x28]
  425029:	xor    eax,ebx
  42502b:	add    eax,esi
  42502d:	cmp    eax,ecx
  42502f:	je     0x4251f2
  425035:	mov    eax,DWORD PTR [ebp-0x18]
  425038:	xor    eax,ebx
  42503a:	mov    ecx,0xffcd8d0d
  42503f:	sub    ecx,eax
  425041:	add    ecx,DWORD PTR [ebp-0x28]
  425044:	mov    eax,DWORD PTR [ebp-0x1c]
  425047:	cmp    eax,ecx
  425049:	ja     0x4251f2
  42504f:	mov    DWORD PTR [ebp-0x34],0x0
  425056:	push   DWORD PTR [ebp+0x8]
  425059:	mov    edi,DWORD PTR [ebp+0x8]
  42505c:	mov    eax,DWORD PTR [ebp+0x8]
  42505f:	mov    edx,DWORD PTR [eax+0x1b4]
  425065:	call   0x4272b1
  42506a:	push   eax
  42506b:	mov    eax,DWORD PTR [ebp+0x8]
  42506e:	mov    eax,DWORD PTR [eax+0x1a8]
  425074:	push   DWORD PTR [eax]
  425076:	call   0x426f52
  42507b:	mov    ecx,DWORD PTR [ebp+0x8]
  42507e:	mov    ecx,DWORD PTR [ecx+0x19c]
  425084:	mov    DWORD PTR [ecx],eax
  425086:	mov    eax,DWORD PTR [ebp+0x8]
  425089:	mov    edi,DWORD PTR [eax+0x1e0]
  42508f:	mov    esi,DWORD PTR [ebp+0x8]
  425092:	xor    eax,eax
  425094:	lea    edx,[ebp-0x7c]
  425097:	call   0x4272e7
  42509c:	push   eax
  42509d:	mov    eax,DWORD PTR [ebp+0x8]
  4250a0:	mov    eax,DWORD PTR [eax+0x19c]
  4250a6:	push   DWORD PTR [eax]
  4250a8:	call   DWORD PTR [edi+0x8]
  4250ab:	mov    DWORD PTR [ebp-0x20],eax
  4250ae:	mov    eax,DWORD PTR [ebp+0x8]
  4250b1:	mov    edi,DWORD PTR [eax+0x1e0]
  4250b7:	mov    esi,DWORD PTR [ebp+0x8]
  4250ba:	xor    eax,eax
  4250bc:	lea    edx,[ebp-0x90]
  4250c2:	call   0x4272e7
  4250c7:	push   eax
  4250c8:	mov    eax,DWORD PTR [ebp+0x8]
  4250cb:	mov    eax,DWORD PTR [eax+0x19c]
  4250d1:	push   DWORD PTR [eax]
  4250d3:	call   DWORD PTR [edi+0x8]
  4250d6:	mov    eax,DWORD PTR [ebp+0x8]
  4250d9:	mov    edi,DWORD PTR [eax+0x1e0]
  4250df:	mov    esi,DWORD PTR [ebp+0x8]
  4250e2:	xor    eax,eax
  4250e4:	lea    edx,[ebp-0xa8]
  4250ea:	call   0x4272e7
  4250ef:	push   eax
  4250f0:	mov    eax,DWORD PTR [ebp+0x8]
  4250f3:	mov    eax,DWORD PTR [eax+0x19c]
  4250f9:	push   DWORD PTR [eax]
  4250fb:	call   DWORD PTR [edi+0x8]
  4250fe:	and    DWORD PTR [ebp-0x8],0x0
  425102:	mov    DWORD PTR [ebp-0x48],eax
  425105:	mov    eax,DWORD PTR [ebp-0x8]
  425108:	and    eax,0x7
  42510b:	add    eax,0x31
  42510e:	push   eax
  42510f:	call   DWORD PTR [ebp-0x20]
  425112:	test   eax,eax
  425114:	je     0x425158
  425116:	mov    eax,DWORD PTR [ebp-0x8]
  425119:	push   0x19
  42511b:	xor    edx,edx
  42511d:	pop    ecx
  42511e:	div    ecx
  425120:	add    dl,0x41
  425123:	movzx  eax,dl
  425126:	push   eax
  425127:	call   DWORD PTR [ebp-0x48]
  42512a:	test   eax,eax
  42512c:	jne    0x425158
  42512e:	mov    eax,DWORD PTR [ebp+0x8]
  425131:	mov    edi,DWORD PTR [eax+0x1e0]
  425137:	mov    esi,DWORD PTR [ebp+0x8]
  42513a:	xor    eax,eax
  42513c:	lea    edx,[ebp-0x68]
  42513f:	call   0x4272e7
  425144:	push   eax
  425145:	mov    eax,DWORD PTR [ebp+0x8]
  425148:	mov    eax,DWORD PTR [eax+0x198]
  42514e:	push   DWORD PTR [eax]
  425150:	call   DWORD PTR [edi+0x8]
  425153:	mov    DWORD PTR [ebp-0x14],eax
  425156:	jmp    0x42515c
  425158:	and    DWORD PTR [ebp-0x14],0x0
  42515c:	inc    DWORD PTR [ebp-0x8]
  42515f:	cmp    DWORD PTR [ebp-0x8],0x10
  425163:	jb     0x425105
  425165:	mov    eax,DWORD PTR [ebp-0x18]
  425168:	mov    esi,DWORD PTR [ebp+0x8]
  42516b:	xor    eax,ebx
  42516d:	mov    edi,0x3272f3
  425172:	add    eax,edi
  425174:	lea    edx,[ebp-0x10c]
  42517a:	call   0x4272e7
  42517f:	push   eax
  425180:	mov    eax,DWORD PTR [ebp-0x10]
  425183:	mov    esi,DWORD PTR [ebp+0x8]
  425186:	xor    eax,ebx
  425188:	add    eax,edi
  42518a:	lea    edx,[ebp-0x12c]
  425190:	call   0x4272e7
  425195:	push   eax
  425196:	call   DWORD PTR [ebp-0x14]
  425199:	mov    ecx,DWORD PTR [ebp-0x10]
  42519c:	xor    ecx,ebx
  42519e:	add    ecx,edi
  4251a0:	cmp    ecx,eax
  4251a2:	jne    0x4251ab
  4251a4:	mov    DWORD PTR [ebp-0x34],0x1
  4251ab:	mov    eax,DWORD PTR [ebp-0x18]
  4251ae:	mov    ecx,DWORD PTR [ebp-0x1c]
  4251b1:	xor    eax,ebx
  4251b3:	lea    eax,[eax+ecx*1+0x3272f3]
  4251ba:	mov    DWORD PTR [ebp-0x1c],eax
  4251bd:	mov    eax,DWORD PTR [ebp-0x34]
  4251c0:	test   eax,eax
  4251c2:	je     0x4251d6
  4251c4:	mov    eax,DWORD PTR [ebp-0x18]
  4251c7:	mov    ecx,DWORD PTR [ebp-0x38]
  4251ca:	xor    eax,ebx
  4251cc:	lea    eax,[eax+ecx*1+0x3272f3]
  4251d3:	mov    DWORD PTR [ebp-0x38],eax
  4251d6:	mov    eax,DWORD PTR [ebp-0x18]
  4251d9:	xor    eax,ebx
  4251db:	mov    ecx,0xffcd8d0d
  4251e0:	sub    ecx,eax
  4251e2:	add    ecx,DWORD PTR [ebp-0x28]
  4251e5:	mov    eax,DWORD PTR [ebp-0x1c]
  4251e8:	cmp    eax,ecx
  4251ea:	jbe    0x42504f
  4251f0:	mov    esi,edi
  4251f2:	mov    eax,DWORD PTR [ebp-0x38]
  4251f5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4251f8:	cmp    ecx,eax
  4251fa:	jne    0x42520d
  4251fc:	push   DWORD PTR [ebp+0x8]
  4251ff:	lea    eax,[ebp-0x40]
  425202:	push   eax
  425203:	call   0x427d56
  425208:	mov    DWORD PTR [ebp-0x24],eax
  42520b:	jmp    0x425219
  42520d:	mov    eax,DWORD PTR [ebp-0x24]
  425210:	mov    ecx,DWORD PTR [ebp-0x18]
  425213:	xor    ecx,ebx
  425215:	add    ecx,esi
  425217:	xor    DWORD PTR [eax],ecx
  425219:	mov    eax,DWORD PTR [ebp-0x10]
  42521c:	mov    ecx,DWORD PTR [ebp-0x24]
  42521f:	xor    eax,ebx
  425221:	add    eax,esi
  425223:	cmp    eax,ecx
  425225:	je     0x42599d
  42522b:	mov    eax,DWORD PTR [ebp-0x10]
  42522e:	mov    ecx,DWORD PTR [ebp-0x40]
  425231:	xor    eax,ebx
  425233:	add    eax,esi
  425235:	cmp    eax,ecx
  425237:	je     0x42599d
  42523d:	mov    eax,DWORD PTR [ebp-0x10]
  425240:	xor    eax,ebx
  425242:	add    eax,esi
  425244:	jmp    0x425262
  425246:	mov    edi,DWORD PTR [ebp-0x24]
  425249:	mov    cl,al
  42524b:	and    cl,0x1f
  42524e:	or     dl,0xff
  425251:	sub    dl,cl
  425253:	add    BYTE PTR [edi+eax*1],dl
  425256:	mov    ecx,DWORD PTR [ebp-0x18]
  425259:	xor    ecx,ebx
  42525b:	lea    eax,[eax+ecx*1+0x3272f3]
  425262:	mov    ecx,DWORD PTR [ebp-0x40]
  425265:	cmp    eax,ecx
  425267:	jb     0x425246
  425269:	mov    eax,DWORD PTR [ebp-0x40]
  42526c:	mov    DWORD PTR [ebp-0x28],eax
  42526f:	mov    eax,DWORD PTR [ebp-0x24]
  425272:	mov    DWORD PTR [ebp-0x38],0xf89c85a1
  425279:	mov    DWORD PTR [ebp-0xd4],eax
  42527f:	mov    edi,0xf89c85a2
  425284:	mov    DWORD PTR [ebp-0x2c],edi
  425287:	mov    eax,DWORD PTR [ebp-0x38]
  42528a:	xor    eax,ebx
  42528c:	add    eax,esi
  42528e:	mov    DWORD PTR [ebp-0xc],eax
  425291:	mov    eax,DWORD PTR [ebp-0x38]
  425294:	xor    eax,ebx
  425296:	add    eax,esi
  425298:	mov    DWORD PTR [ebp-0x8],eax
  42529b:	mov    DWORD PTR [ebp-0x48],0xf89c8581
  4252a2:	mov    DWORD PTR [ebp-0x4c],0xf89c85b8
  4252a9:	mov    eax,DWORD PTR [ebp-0x38]
  4252ac:	mov    ecx,DWORD PTR [ebp-0x28]
  4252af:	xor    eax,ebx
  4252b1:	add    eax,esi
  4252b3:	cmp    ecx,eax
  4252b5:	je     0x4254b4
  4252bb:	jmp    0x425490
  4252c0:	mov    ecx,DWORD PTR [ebp-0xc]
  4252c3:	mov    eax,DWORD PTR [ebp-0x28]
  4252c6:	sub    eax,ecx
  4252c8:	mov    ecx,DWORD PTR [ebp-0x48]
  4252cb:	xor    ecx,ebx
  4252cd:	add    ecx,esi
  4252cf:	xor    edx,edx
  4252d1:	div    ecx
  4252d3:	mov    DWORD PTR [ebp-0x8],eax
  4252d6:	mov    eax,DWORD PTR [ebp-0x4c]
  4252d9:	mov    ecx,DWORD PTR [ebp-0x8]
  4252dc:	xor    eax,ebx
  4252de:	add    eax,esi
  4252e0:	cmp    ecx,eax
  4252e2:	jbe    0x4252ee
  4252e4:	mov    eax,DWORD PTR [ebp-0x4c]
  4252e7:	xor    eax,ebx
  4252e9:	add    eax,esi
  4252eb:	mov    DWORD PTR [ebp-0x8],eax
  4252ee:	mov    eax,DWORD PTR [ebp-0x48]
  4252f1:	mov    ecx,DWORD PTR [ebp-0x8]
  4252f4:	xor    eax,ebx
  4252f6:	add    eax,esi
  4252f8:	imul   eax,ecx
  4252fb:	mov    DWORD PTR [ebp-0x8],eax
  4252fe:	mov    eax,DWORD PTR [ebp-0x38]
  425301:	mov    ecx,DWORD PTR [ebp-0x8]
  425304:	xor    eax,ebx
  425306:	add    eax,esi
  425308:	cmp    ecx,eax
  42530a:	je     0x42547e
  425310:	mov    eax,DWORD PTR [ebp-0x8]
  425313:	mov    DWORD PTR [ebp-0x14],eax
  425316:	mov    eax,DWORD PTR [ebp-0xc]
  425319:	add    eax,DWORD PTR [ebp-0xd4]
  42531f:	mov    DWORD PTR [ebp-0x20],0xf89c85a1
  425326:	mov    DWORD PTR [ebp-0x34],edi
  425329:	mov    DWORD PTR [ebp-0xe8],0xf89c85a3
  425333:	mov    DWORD PTR [ebp-0x8],eax
  425336:	mov    DWORD PTR [ebp-0x30],0xf89c85bc
  42533d:	mov    DWORD PTR [ebp-0x1c],edi
  425340:	mov    eax,DWORD PTR [ebp-0x20]
  425343:	xor    eax,ebx
  425345:	add    eax,esi
  425347:	jmp    0x42543d
  42534c:	mov    DWORD PTR [ebp-0xe0],0xf89c85b4
  425356:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  425360:	mov    eax,DWORD PTR [ebp-0x1c]
  425363:	mov    ecx,DWORD PTR [ebp-0x44]
  425366:	xor    eax,ebx
  425368:	add    eax,esi
  42536a:	imul   eax,ecx
  42536d:	mov    ecx,DWORD PTR [ebp-0x8]
  425370:	mov    al,BYTE PTR [eax+ecx*1]
  425373:	mov    BYTE PTR [ebp-0x2],al
  425376:	mov    eax,DWORD PTR [ebp-0x1c]
  425379:	mov    ecx,DWORD PTR [ebp-0x44]
  42537c:	xor    eax,ebx
  42537e:	add    eax,esi
  425380:	imul   eax,ecx
  425383:	mov    ecx,DWORD PTR [ebp-0xe8]
  425389:	xor    ecx,ebx
  42538b:	add    eax,ecx
  42538d:	mov    ecx,DWORD PTR [ebp-0x8]
  425390:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  425398:	mov    ecx,DWORD PTR [ebp-0xe0]
  42539e:	xor    ecx,ebx
  4253a0:	lea    eax,[ecx+eax*1+0x3272f3]
  4253a7:	movzx  ecx,BYTE PTR [ebp-0x2]
  4253ab:	xor    ecx,eax
  4253ad:	mov    BYTE PTR [ebp-0x2],cl
  4253b0:	mov    al,BYTE PTR [ebp-0x2]
  4253b3:	mov    ecx,DWORD PTR [ebp-0x1c]
  4253b6:	mov    edx,DWORD PTR [ebp-0x44]
  4253b9:	xor    ecx,ebx
  4253bb:	add    ecx,esi
  4253bd:	imul   ecx,edx
  4253c0:	mov    edx,DWORD PTR [ebp-0x8]
  4253c3:	mov    BYTE PTR [ecx+edx*1],al
  4253c6:	mov    eax,DWORD PTR [ebp-0x1c]
  4253c9:	mov    ecx,DWORD PTR [ebp-0x44]
  4253cc:	xor    eax,ebx
  4253ce:	add    eax,esi
  4253d0:	imul   eax,ecx
  4253d3:	mov    ecx,DWORD PTR [ebp-0x8]
  4253d6:	mov    al,BYTE PTR [eax+ecx*1]
  4253d9:	mov    BYTE PTR [ebp-0x2],al
  4253dc:	mov    eax,DWORD PTR [ebp-0x1c]
  4253df:	mov    ecx,DWORD PTR [ebp-0x44]
  4253e2:	xor    eax,ebx
  4253e4:	add    eax,esi
  4253e6:	imul   eax,ecx
  4253e9:	mov    ecx,DWORD PTR [ebp-0x34]
  4253ec:	xor    ecx,ebx
  4253ee:	add    eax,ecx
  4253f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4253f3:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  4253fb:	mov    ecx,DWORD PTR [ebp-0xc4]
  425401:	xor    ecx,ebx
  425403:	lea    eax,[ecx+eax*1+0x3272f3]
  42540a:	movzx  ecx,BYTE PTR [ebp-0x2]
  42540e:	xor    ecx,eax
  425410:	mov    BYTE PTR [ebp-0x2],cl
  425413:	mov    al,BYTE PTR [ebp-0x2]
  425416:	mov    ecx,DWORD PTR [ebp-0x1c]
  425419:	mov    edx,DWORD PTR [ebp-0x44]
  42541c:	xor    ecx,ebx
  42541e:	add    ecx,esi
  425420:	imul   ecx,edx
  425423:	mov    edx,DWORD PTR [ebp-0x8]
  425426:	mov    BYTE PTR [ecx+edx*1],al
  425429:	mov    eax,DWORD PTR [ebp-0x30]
  42542c:	mov    ecx,DWORD PTR [ebp-0x34]
  42542f:	xor    eax,ebx
  425431:	xor    ecx,ebx
  425433:	add    eax,esi
  425435:	add    ecx,esi
  425437:	imul   eax,ecx
  42543a:	add    eax,DWORD PTR [ebp-0x44]
  42543d:	mov    DWORD PTR [ebp-0x44],eax
  425440:	mov    eax,DWORD PTR [ebp-0x44]
  425443:	mov    ecx,DWORD PTR [ebp-0x14]
  425446:	cmp    ecx,eax
  425448:	jb     0x42534c
  42544e:	mov    eax,DWORD PTR [ebp-0x34]
  425451:	mov    ecx,DWORD PTR [ebp-0x14]
  425454:	xor    eax,ebx
  425456:	add    eax,esi
  425458:	imul   eax,ecx
  42545b:	mov    ecx,DWORD PTR [ebp-0x20]
  42545e:	xor    ecx,ebx
  425460:	add    ecx,esi
  425462:	or     eax,ecx
  425464:	mov    ecx,DWORD PTR [ebp-0x2c]
  425467:	xor    ecx,ebx
  425469:	add    eax,ecx
  42546b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42546e:	xor    ecx,ebx
  425470:	add    eax,ecx
  425472:	mov    ecx,DWORD PTR [ebp-0xc]
  425475:	lea    eax,[eax+ecx*1+0x64e5e6]
  42547c:	jmp    0x42548d
  42547e:	mov    eax,DWORD PTR [ebp-0x2c]
  425481:	mov    ecx,DWORD PTR [ebp-0xc]
  425484:	xor    eax,ebx
  425486:	lea    eax,[eax+ecx*1+0x3272f3]
  42548d:	mov    DWORD PTR [ebp-0xc],eax
  425490:	mov    eax,DWORD PTR [ebp-0x2c]
  425493:	xor    eax,ebx
  425495:	mov    ecx,0xffcd8d0d
  42549a:	sub    ecx,eax
  42549c:	add    ecx,DWORD PTR [ebp-0x28]
  42549f:	mov    eax,DWORD PTR [ebp-0x2c]
  4254a2:	mov    edx,DWORD PTR [ebp-0xc]
  4254a5:	xor    eax,ebx
  4254a7:	add    eax,esi
  4254a9:	imul   eax,edx
  4254ac:	cmp    eax,ecx
  4254ae:	jbe    0x4252c0
  4254b4:	mov    eax,DWORD PTR [ebp-0x10]
  4254b7:	mov    ecx,DWORD PTR [ebp-0x40]
  4254ba:	mov    eax,DWORD PTR [ebp+0x8]
  4254bd:	mov    edx,DWORD PTR [ebp-0x54]
  4254c0:	mov    eax,DWORD PTR [eax+0x1e0]
  4254c6:	xor    edx,ebx
  4254c8:	add    edx,esi
  4254ca:	push   edx
  4254cb:	mov    edx,DWORD PTR [ebp-0x3c]
  4254ce:	xor    edx,ebx
  4254d0:	add    edx,esi
  4254d2:	push   edx
  4254d3:	push   ecx
  4254d4:	mov    DWORD PTR [ebp-0x30],ecx
  4254d7:	mov    ecx,DWORD PTR [ebp-0x10]
  4254da:	xor    ecx,ebx
  4254dc:	add    ecx,esi
  4254de:	push   ecx
  4254df:	call   DWORD PTR [eax+0x14]
  4254e2:	mov    edi,eax
  4254e4:	mov    eax,DWORD PTR [ebp-0x10]
  4254e7:	xor    eax,ebx
  4254e9:	add    eax,esi
  4254eb:	cmp    eax,edi
  4254ed:	je     0x425548
  4254ef:	mov    eax,DWORD PTR [ebp-0x10]
  4254f2:	jmp    0x425515
  4254f4:	mov    ecx,DWORD PTR [ebp-0x24]
  4254f7:	xor    eax,ebx
  4254f9:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f3]
  425500:	mov    BYTE PTR [eax+edi*1+0x3272f3],cl
  425507:	mov    ecx,DWORD PTR [ebp-0x18]
  42550a:	xor    ecx,ebx
  42550c:	lea    eax,[ecx+eax*1+0x3272f3]
  425513:	xor    eax,ebx
  425515:	mov    ecx,DWORD PTR [ebp-0x40]
  425518:	sub    ecx,esi
  42551a:	xor    ecx,ebx
  42551c:	cmp    eax,ecx
  42551e:	jne    0x4254f4
  425520:	mov    eax,DWORD PTR [ebp+0x8]
  425523:	mov    ecx,DWORD PTR [ebp-0x50]
  425526:	mov    eax,DWORD PTR [eax+0x1e0]
  42552c:	xor    ecx,ebx
  42552e:	add    ecx,esi
  425530:	push   ecx
  425531:	mov    ecx,DWORD PTR [ebp-0x10]
  425534:	xor    ecx,ebx
  425536:	add    ecx,esi
  425538:	push   ecx
  425539:	push   DWORD PTR [ebp-0x24]
  42553c:	call   DWORD PTR [eax+0x18]
  42553f:	mov    eax,DWORD PTR [ebp-0x30]
  425542:	mov    DWORD PTR [ebp-0x24],edi
  425545:	mov    DWORD PTR [ebp-0x40],eax
  425548:	mov    edi,DWORD PTR [ebp-0x24]
  42554b:	mov    eax,DWORD PTR [ebp-0x18]
  42554e:	mov    ecx,DWORD PTR [ebp-0x10]
  425551:	xor    eax,ebx
  425553:	mov    DWORD PTR [ebp-0x30],edi
  425556:	add    eax,esi
  425558:	mov    DWORD PTR [ebp-0x5c],0x422b332b
  42555f:	mov    DWORD PTR [ebp-0x58],0x342b3c2b
  425566:	jmp    0x42559a
  425568:	xor    ecx,ebx
  42556a:	mov    dl,BYTE PTR [ebp+ecx*1+0x327297]
  425571:	xor    dl,0x7d
  425574:	add    dl,0x2
  425577:	mov    DWORD PTR [ebp-0x3c],ecx
  42557a:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272f3]
  425582:	movzx  edx,dl
  425585:	cmp    ecx,edx
  425587:	jne    0x4255a4
  425589:	mov    ecx,DWORD PTR [ebp-0x18]
  42558c:	mov    edx,DWORD PTR [ebp-0x3c]
  42558f:	xor    ecx,ebx
  425591:	lea    ecx,[ecx+edx*1+0x3272f3]
  425598:	xor    ecx,ebx
  42559a:	cmp    ecx,0xf89c85b9
  4255a0:	jne    0x425568
  4255a2:	jmp    0x4255ab
  4255a4:	mov    eax,DWORD PTR [ebp-0x10]
  4255a7:	xor    eax,ebx
  4255a9:	add    eax,esi
  4255ab:	mov    ecx,DWORD PTR [ebp-0x10]
  4255ae:	xor    ecx,ebx
  4255b0:	add    ecx,esi
  4255b2:	cmp    ecx,eax
  4255b4:	je     0x425727
  4255ba:	mov    eax,DWORD PTR [edi+0x8]
  4255bd:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  4255c4:	mov    DWORD PTR [ebp-0x3c],0xf89cc3d0
  4255cb:	mov    DWORD PTR [ebp-0x48],0xf89cb5a1
  4255d2:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  4255d9:	mov    DWORD PTR [ebp-0x14],eax
  4255dc:	mov    eax,DWORD PTR [ebp+0x8]
  4255df:	mov    ecx,DWORD PTR [ebp-0x20]
  4255e2:	xor    ecx,ebx
  4255e4:	add    ecx,esi
  4255e6:	push   ecx
  4255e7:	mov    ecx,DWORD PTR [ebp-0x48]
  4255ea:	mov    eax,DWORD PTR [eax+0x1e0]
  4255f0:	xor    ecx,ebx
  4255f2:	add    ecx,esi
  4255f4:	push   ecx
  4255f5:	mov    ecx,DWORD PTR [ebp-0x3c]
  4255f8:	xor    ecx,ebx
  4255fa:	add    ecx,esi
  4255fc:	push   ecx
  4255fd:	mov    ecx,DWORD PTR [ebp-0xc]
  425600:	xor    ecx,ebx
  425602:	add    ecx,esi
  425604:	push   ecx
  425605:	call   DWORD PTR [eax+0x14]
  425608:	mov    edi,eax
  42560a:	mov    eax,DWORD PTR [ebp+0x8]
  42560d:	mov    ecx,DWORD PTR [ebp-0x20]
  425610:	mov    eax,DWORD PTR [eax+0x1e0]
  425616:	xor    ecx,ebx
  425618:	add    ecx,esi
  42561a:	push   ecx
  42561b:	mov    ecx,DWORD PTR [ebp-0x48]
  42561e:	xor    ecx,ebx
  425620:	add    ecx,esi
  425622:	push   ecx
  425623:	mov    ecx,DWORD PTR [ebp-0xc]
  425626:	push   DWORD PTR [ebp-0x14]
  425629:	xor    ecx,ebx
  42562b:	add    ecx,esi
  42562d:	push   ecx
  42562e:	call   DWORD PTR [eax+0x14]
  425631:	mov    ecx,DWORD PTR [ebp-0xc]
  425634:	xor    ecx,ebx
  425636:	add    ecx,esi
  425638:	mov    DWORD PTR [ebp-0x20],eax
  42563b:	cmp    ecx,edi
  42563d:	je     0x4259ca
  425643:	mov    ecx,DWORD PTR [ebp-0xc]
  425646:	xor    ecx,ebx
  425648:	add    ecx,esi
  42564a:	cmp    ecx,eax
  42564c:	je     0x4259ca
  425652:	mov    DWORD PTR [ebp-0x3c],0xf89c85bc
  425659:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  425660:	mov    ecx,DWORD PTR [ebp-0x3c]
  425663:	xor    cl,0xac
  425666:	sub    cl,0xd
  425669:	mov    BYTE PTR [edi],cl
  42566b:	mov    ecx,DWORD PTR [ebp-0xc]
  42566e:	xor    cl,0xac
  425671:	sub    cl,0xd
  425674:	mov    BYTE PTR [edi+0x1],cl
  425677:	mov    ecx,DWORD PTR [ebp-0x54]
  42567a:	xor    cl,0xac
  42567d:	sub    cl,0xd
  425680:	mov    BYTE PTR [edi+0x2],cl
  425683:	and    DWORD PTR [ebp-0xc8],0x0
  42568a:	and    DWORD PTR [ebp-0xdc],0x0
  425691:	lea    ecx,[ebp-0xdc]
  425697:	push   ecx
  425698:	push   DWORD PTR [ebp-0x14]
  42569b:	push   eax
  42569c:	lea    eax,[ebp-0xc8]
  4256a2:	push   eax
  4256a3:	mov    eax,DWORD PTR [ebp-0x30]
  4256a6:	push   DWORD PTR [eax+0xc]
  4256a9:	mov    eax,DWORD PTR [ebp-0x24]
  4256ac:	add    eax,0x10
  4256af:	push   eax
  4256b0:	push   edi
  4256b1:	call   0x424957
  4256b6:	mov    DWORD PTR [ebp-0x3c],eax
  4256b9:	mov    eax,DWORD PTR [ebp+0x8]
  4256bc:	mov    ecx,DWORD PTR [ebp-0x50]
  4256bf:	mov    eax,DWORD PTR [eax+0x1e0]
  4256c5:	xor    ecx,ebx
  4256c7:	add    ecx,esi
  4256c9:	push   ecx
  4256ca:	mov    ecx,DWORD PTR [ebp-0xc]
  4256cd:	xor    ecx,ebx
  4256cf:	add    ecx,esi
  4256d1:	push   ecx
  4256d2:	push   edi
  4256d3:	call   DWORD PTR [eax+0x18]
  4256d6:	mov    eax,DWORD PTR [ebp-0x3c]
  4256d9:	add    eax,0xffcd8d0d
  4256de:	xor    eax,ebx
  4256e0:	cmp    eax,0xf89c85a1
  4256e5:	mov    eax,DWORD PTR [ebp+0x8]
  4256e8:	mov    eax,DWORD PTR [eax+0x1e0]
  4256ee:	mov    ecx,DWORD PTR [ebp-0x50]
  4256f1:	jne    0x425714
  4256f3:	xor    ecx,ebx
  4256f5:	add    ecx,esi
  4256f7:	push   ecx
  4256f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4256fb:	xor    ecx,ebx
  4256fd:	add    ecx,esi
  4256ff:	push   ecx
  425700:	push   DWORD PTR [ebp-0x24]
  425703:	call   DWORD PTR [eax+0x18]
  425706:	mov    eax,DWORD PTR [ebp-0x20]
  425709:	mov    DWORD PTR [ebp-0x24],eax
  42570c:	mov    eax,DWORD PTR [ebp-0x14]
  42570f:	mov    DWORD PTR [ebp-0x40],eax
  425712:	jmp    0x425727
  425714:	xor    ecx,ebx
  425716:	add    ecx,esi
  425718:	push   ecx
  425719:	mov    ecx,DWORD PTR [ebp-0xc]
  42571c:	xor    ecx,ebx
  42571e:	add    ecx,esi
  425720:	push   ecx
  425721:	push   DWORD PTR [ebp-0x20]
  425724:	call   DWORD PTR [eax+0x18]
  425727:	mov    eax,DWORD PTR [ebp-0x40]
  42572a:	mov    DWORD PTR [ebp-0x38],eax
  42572d:	mov    eax,DWORD PTR [ebp-0x24]
  425730:	mov    DWORD PTR [ebp-0x28],0xf89c85a1
  425737:	mov    DWORD PTR [ebp-0x3c],eax
  42573a:	mov    edi,0xf89c85a2
  42573f:	mov    DWORD PTR [ebp-0x2c],edi
  425742:	mov    eax,DWORD PTR [ebp-0x28]
  425745:	xor    eax,ebx
  425747:	add    eax,esi
  425749:	mov    DWORD PTR [ebp-0xc],eax
  42574c:	mov    eax,DWORD PTR [ebp-0x28]
  42574f:	xor    eax,ebx
  425751:	add    eax,esi
  425753:	mov    DWORD PTR [ebp-0x14],eax
  425756:	mov    DWORD PTR [ebp-0x48],0xf89c8581
  42575d:	mov    DWORD PTR [ebp-0x20],0xf89c85b8
  425764:	mov    eax,DWORD PTR [ebp-0x28]
  425767:	mov    ecx,DWORD PTR [ebp-0x38]
  42576a:	xor    eax,ebx
  42576c:	add    eax,esi
  42576e:	cmp    ecx,eax
  425770:	je     0x425966
  425776:	jmp    0x425942
  42577b:	mov    ecx,DWORD PTR [ebp-0xc]
  42577e:	mov    eax,DWORD PTR [ebp-0x38]
  425781:	sub    eax,ecx
  425783:	mov    ecx,DWORD PTR [ebp-0x48]
  425786:	xor    ecx,ebx
  425788:	add    ecx,esi
  42578a:	xor    edx,edx
  42578c:	div    ecx
  42578e:	mov    DWORD PTR [ebp-0x14],eax
  425791:	mov    eax,DWORD PTR [ebp-0x20]
  425794:	mov    ecx,DWORD PTR [ebp-0x14]
  425797:	xor    eax,ebx
  425799:	add    eax,esi
  42579b:	cmp    ecx,eax
  42579d:	jbe    0x4257a9
  42579f:	mov    eax,DWORD PTR [ebp-0x20]
  4257a2:	xor    eax,ebx
  4257a4:	add    eax,esi
  4257a6:	mov    DWORD PTR [ebp-0x14],eax
  4257a9:	mov    eax,DWORD PTR [ebp-0x48]
  4257ac:	mov    ecx,DWORD PTR [ebp-0x14]
  4257af:	xor    eax,ebx
  4257b1:	add    eax,esi
  4257b3:	imul   eax,ecx
  4257b6:	mov    DWORD PTR [ebp-0x14],eax
  4257b9:	mov    eax,DWORD PTR [ebp-0x28]
  4257bc:	mov    ecx,DWORD PTR [ebp-0x14]
  4257bf:	xor    eax,ebx
  4257c1:	add    eax,esi
  4257c3:	cmp    ecx,eax
  4257c5:	je     0x425930
  4257cb:	mov    eax,DWORD PTR [ebp-0x14]
  4257ce:	mov    DWORD PTR [ebp-0x34],eax
  4257d1:	mov    eax,DWORD PTR [ebp-0xc]
  4257d4:	add    eax,DWORD PTR [ebp-0x3c]
  4257d7:	mov    DWORD PTR [ebp-0x4c],0xf89c85a1
  4257de:	mov    DWORD PTR [ebp-0x14],edi
  4257e1:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  4257e8:	mov    DWORD PTR [ebp-0x1c],eax
  4257eb:	mov    DWORD PTR [ebp-0x30],0xf89c85bc
  4257f2:	mov    DWORD PTR [ebp-0x8],edi
  4257f5:	mov    eax,DWORD PTR [ebp-0x4c]
  4257f8:	xor    eax,ebx
  4257fa:	add    eax,esi
  4257fc:	jmp    0x4258ef
  425801:	mov    DWORD PTR [ebp-0xe4],0xf89c85b4
  42580b:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  425815:	mov    eax,DWORD PTR [ebp-0x8]
  425818:	mov    ecx,DWORD PTR [ebp-0x18]
  42581b:	xor    eax,ebx
  42581d:	add    eax,esi
  42581f:	imul   eax,ecx
  425822:	mov    ecx,DWORD PTR [ebp-0x1c]
  425825:	mov    al,BYTE PTR [eax+ecx*1]
  425828:	mov    BYTE PTR [ebp-0x1],al
  42582b:	mov    eax,DWORD PTR [ebp-0x8]
  42582e:	mov    ecx,DWORD PTR [ebp-0x18]
  425831:	xor    eax,ebx
  425833:	add    eax,esi
  425835:	imul   eax,ecx
  425838:	mov    ecx,DWORD PTR [ebp-0x54]
  42583b:	xor    ecx,ebx
  42583d:	add    eax,ecx
  42583f:	mov    ecx,DWORD PTR [ebp-0x1c]
  425842:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  42584a:	mov    ecx,DWORD PTR [ebp-0xe4]
  425850:	xor    ecx,ebx
  425852:	lea    eax,[ecx+eax*1+0x3272f3]
  425859:	movzx  ecx,BYTE PTR [ebp-0x1]
  42585d:	xor    ecx,eax
  42585f:	mov    BYTE PTR [ebp-0x1],cl
  425862:	mov    al,BYTE PTR [ebp-0x1]
  425865:	mov    ecx,DWORD PTR [ebp-0x8]
  425868:	mov    edx,DWORD PTR [ebp-0x18]
  42586b:	xor    ecx,ebx
  42586d:	add    ecx,esi
  42586f:	imul   ecx,edx
  425872:	mov    edx,DWORD PTR [ebp-0x1c]
  425875:	mov    BYTE PTR [ecx+edx*1],al
  425878:	mov    eax,DWORD PTR [ebp-0x8]
  42587b:	mov    ecx,DWORD PTR [ebp-0x18]
  42587e:	xor    eax,ebx
  425880:	add    eax,esi
  425882:	imul   eax,ecx
  425885:	mov    ecx,DWORD PTR [ebp-0x1c]
  425888:	mov    al,BYTE PTR [eax+ecx*1]
  42588b:	mov    BYTE PTR [ebp-0x1],al
  42588e:	mov    eax,DWORD PTR [ebp-0x8]
  425891:	mov    ecx,DWORD PTR [ebp-0x18]
  425894:	xor    eax,ebx
  425896:	add    eax,esi
  425898:	imul   eax,ecx
  42589b:	mov    ecx,DWORD PTR [ebp-0x14]
  42589e:	xor    ecx,ebx
  4258a0:	add    eax,ecx
  4258a2:	mov    ecx,DWORD PTR [ebp-0x1c]
  4258a5:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  4258ad:	mov    ecx,DWORD PTR [ebp-0xd0]
  4258b3:	xor    ecx,ebx
  4258b5:	lea    eax,[ecx+eax*1+0x3272f3]
  4258bc:	movzx  ecx,BYTE PTR [ebp-0x1]
  4258c0:	xor    ecx,eax
  4258c2:	mov    BYTE PTR [ebp-0x1],cl
  4258c5:	mov    al,BYTE PTR [ebp-0x1]
  4258c8:	mov    ecx,DWORD PTR [ebp-0x8]
  4258cb:	mov    edx,DWORD PTR [ebp-0x18]
  4258ce:	xor    ecx,ebx
  4258d0:	add    ecx,esi
  4258d2:	imul   ecx,edx
  4258d5:	mov    edx,DWORD PTR [ebp-0x1c]
  4258d8:	mov    BYTE PTR [ecx+edx*1],al
  4258db:	mov    eax,DWORD PTR [ebp-0x30]
  4258de:	mov    ecx,DWORD PTR [ebp-0x14]
  4258e1:	xor    eax,ebx
  4258e3:	xor    ecx,ebx
  4258e5:	add    eax,esi
  4258e7:	add    ecx,esi
  4258e9:	imul   eax,ecx
  4258ec:	add    eax,DWORD PTR [ebp-0x18]
  4258ef:	mov    DWORD PTR [ebp-0x18],eax
  4258f2:	mov    eax,DWORD PTR [ebp-0x18]
  4258f5:	mov    ecx,DWORD PTR [ebp-0x34]
  4258f8:	cmp    ecx,eax
  4258fa:	jb     0x425801
  425900:	mov    eax,DWORD PTR [ebp-0x14]
  425903:	mov    ecx,DWORD PTR [ebp-0x34]
  425906:	xor    eax,ebx
  425908:	add    eax,esi
  42590a:	imul   eax,ecx
  42590d:	mov    ecx,DWORD PTR [ebp-0x4c]
  425910:	xor    ecx,ebx
  425912:	add    ecx,esi
  425914:	or     eax,ecx
  425916:	mov    ecx,DWORD PTR [ebp-0x2c]
  425919:	xor    ecx,ebx
  42591b:	add    eax,ecx
  42591d:	mov    ecx,DWORD PTR [ebp-0x2c]
  425920:	xor    ecx,ebx
  425922:	add    eax,ecx
  425924:	mov    ecx,DWORD PTR [ebp-0xc]
  425927:	lea    eax,[eax+ecx*1+0x64e5e6]
  42592e:	jmp    0x42593f
  425930:	mov    eax,DWORD PTR [ebp-0x2c]
  425933:	mov    ecx,DWORD PTR [ebp-0xc]
  425936:	xor    eax,ebx
  425938:	lea    eax,[eax+ecx*1+0x3272f3]
  42593f:	mov    DWORD PTR [ebp-0xc],eax
  425942:	mov    eax,DWORD PTR [ebp-0x2c]
  425945:	xor    eax,ebx
  425947:	mov    ecx,0xffcd8d0d
  42594c:	sub    ecx,eax
  42594e:	add    ecx,DWORD PTR [ebp-0x38]
  425951:	mov    eax,DWORD PTR [ebp-0x2c]
  425954:	mov    edx,DWORD PTR [ebp-0xc]
  425957:	xor    eax,ebx
  425959:	add    eax,esi
  42595b:	imul   eax,edx
  42595e:	cmp    eax,ecx
  425960:	jbe    0x42577b
  425966:	push   DWORD PTR [ebp+0x8]
  425969:	mov    eax,DWORD PTR [ebp+0x8]
  42596c:	push   DWORD PTR [eax+0x1cc]
  425972:	lea    eax,[ebp-0xd8]
  425978:	push   eax
  425979:	mov    eax,DWORD PTR [ebp+0x8]
  42597c:	mov    eax,DWORD PTR [eax+0x1c4]
  425982:	push   DWORD PTR [eax]
  425984:	mov    eax,DWORD PTR [ebp+0x8]
  425987:	mov    eax,DWORD PTR [eax+0x1c0]
  42598d:	push   DWORD PTR [eax]
  42598f:	push   DWORD PTR [ebp-0x40]
  425992:	push   DWORD PTR [ebp-0x24]
  425995:	call   0x42642c
  42599a:	mov    DWORD PTR [ebp-0x3c],eax
  42599d:	mov    eax,DWORD PTR [ebp-0x10]
  4259a0:	mov    ecx,DWORD PTR [ebp-0x24]
  4259a3:	xor    eax,ebx
  4259a5:	add    eax,esi
  4259a7:	cmp    eax,ecx
  4259a9:	je     0x4259ca
  4259ab:	mov    eax,DWORD PTR [ebp+0x8]
  4259ae:	mov    ecx,DWORD PTR [ebp-0x50]
  4259b1:	mov    eax,DWORD PTR [eax+0x1e0]
  4259b7:	xor    ecx,ebx
  4259b9:	add    ecx,esi
  4259bb:	push   ecx
  4259bc:	mov    ecx,DWORD PTR [ebp-0x10]
  4259bf:	xor    ecx,ebx
  4259c1:	add    ecx,esi
  4259c3:	push   ecx
  4259c4:	push   DWORD PTR [ebp-0x24]
  4259c7:	call   DWORD PTR [eax+0x18]
  4259ca:	pop    edi
  4259cb:	pop    esi
  4259cc:	pop    ebx
  4259cd:	leave  
  4259ce:	ret    0x4
  4259d1:	push   ebp
  4259d2:	mov    ebp,esp
  4259d4:	push   ecx
  4259d5:	push   ecx
  4259d6:	lea    eax,[ebp-0x8]
  4259d9:	mov    DWORD PTR [ebp-0x4],eax
  4259dc:	push   esi
  4259dd:	mov    esi,DWORD PTR [ebp-0x4]
  4259e0:	mov    eax,0xf881ba2f
  4259e5:	mov    DWORD PTR [esi],eax
  4259e7:	mov    esi,DWORD PTR [ebp-0x8]
  4259ea:	cmp    esi,eax
  4259ec:	pop    esi
  4259ed:	jne    0x4259f7
  4259ef:	mov    BYTE PTR [ecx+0xa],0x83
  4259f3:	mov    BYTE PTR [edx+0x8],0x2c
  4259f7:	mov    BYTE PTR [edx+0xa],0x83
  4259fb:	mov    BYTE PTR [ecx+0x2],0x11
  4259ff:	leave  
  425a00:	ret    
  425a01:	push   ebp
  425a02:	mov    ebp,esp
  425a04:	push   ecx
  425a05:	push   ecx
  425a06:	lea    eax,[ebp-0x8]
  425a09:	mov    DWORD PTR [ebp-0x4],eax
  425a0c:	mov    edx,DWORD PTR [ebp-0x4]
  425a0f:	mov    eax,0xf88b0bcb
  425a14:	mov    DWORD PTR [edx],eax
  425a16:	mov    edx,DWORD PTR [ebp-0x8]
  425a19:	cmp    edx,eax
  425a1b:	jne    0x425a2c
  425a1d:	mov    eax,DWORD PTR [ebp+0x8]
  425a20:	mov    BYTE PTR [ecx+0x9],0xf
  425a24:	mov    BYTE PTR [eax+0x7],0x54
  425a28:	mov    BYTE PTR [ecx+0x6],0xc
  425a2c:	mov    BYTE PTR [ecx+0x3],0x1f
  425a30:	leave  
  425a31:	ret    0x4
  425a34:	push   ebp
  425a35:	mov    ebp,esp
  425a37:	push   ecx
  425a38:	push   ecx
  425a39:	lea    eax,[ebp-0x8]
  425a3c:	mov    DWORD PTR [ebp-0x4],eax
  425a3f:	mov    edx,DWORD PTR [ebp-0x4]
  425a42:	mov    eax,0x7e0da2f
  425a47:	mov    DWORD PTR [edx],eax
  425a49:	mov    edx,DWORD PTR [ebp-0x8]
  425a4c:	cmp    edx,eax
  425a4e:	jne    0x425a54
  425a50:	mov    BYTE PTR [ecx+0x7],0x54
  425a54:	mov    eax,DWORD PTR [ebp+0x8]
  425a57:	mov    BYTE PTR [ecx+0x1],0x1a
  425a5b:	mov    BYTE PTR [eax+0x9],0x2f
  425a5f:	leave  
  425a60:	ret    0x4
  425a63:	push   ebp
  425a64:	mov    ebp,esp
  425a66:	push   ecx
  425a67:	push   ecx
  425a68:	lea    eax,[ebp-0x8]
  425a6b:	mov    DWORD PTR [ebp-0x4],eax
  425a6e:	push   esi
  425a6f:	mov    esi,DWORD PTR [ebp-0x4]
  425a72:	mov    eax,0x7060e38
  425a77:	mov    DWORD PTR [esi],eax
  425a79:	mov    esi,DWORD PTR [ebp-0x8]
  425a7c:	cmp    esi,eax
  425a7e:	pop    esi
  425a7f:	jne    0x425a8b
  425a81:	mov    BYTE PTR [edx+0x4],0x10
  425a85:	mov    WORD PTR [ecx+0x3],0x101f
  425a8b:	mov    BYTE PTR [edx],0x3c
  425a8e:	leave  
  425a8f:	ret    
  425a90:	push   ebp
  425a91:	mov    ebp,esp
  425a93:	push   ecx
  425a94:	push   ecx
  425a95:	lea    eax,[ebp-0x8]
  425a98:	mov    DWORD PTR [ebp-0x4],eax
  425a9b:	mov    edx,DWORD PTR [ebp-0x4]
  425a9e:	mov    eax,0xf8870b3f
  425aa3:	mov    DWORD PTR [edx],eax
  425aa5:	mov    edx,DWORD PTR [ebp-0x8]
  425aa8:	cmp    edx,eax
  425aaa:	jne    0x425ab7
  425aac:	mov    eax,DWORD PTR [ebp+0x8]
  425aaf:	mov    BYTE PTR [ecx+0x8],0xc
  425ab3:	mov    BYTE PTR [eax+0x1],0x1a
  425ab7:	mov    BYTE PTR [ecx+0x5],0x8
  425abb:	leave  
  425abc:	ret    0x4
  425abf:	push   esi
  425ac0:	mov    ecx,edi
  425ac2:	call   0x425a90
  425ac7:	mov    edx,edi
  425ac9:	mov    ecx,esi
  425acb:	mov    BYTE PTR [esi],0x1c
  425ace:	call   0x425a63
  425ad3:	push   esi
  425ad4:	mov    ecx,edi
  425ad6:	mov    BYTE PTR [esi+0x5],0x8
  425ada:	call   0x425a34
  425adf:	push   esi
  425ae0:	mov    BYTE PTR [esi+0x6],0xc
  425ae4:	call   0x425a01
  425ae9:	mov    BYTE PTR [esi+0x2],0x11
  425aed:	mov    edx,esi
  425aef:	jmp    0x4259d1
  425af4:	push   ebp
  425af5:	mov    ebp,esp
  425af7:	push   ecx
  425af8:	mov    ecx,DWORD PTR [edx+0x194]
  425afe:	push   esi
  425aff:	mov    esi,DWORD PTR [ebp+0x8]
  425b02:	mov    esi,DWORD PTR [esi]
  425b04:	mov    DWORD PTR [ecx],esi
  425b06:	mov    ecx,DWORD PTR [edx+0x194]
  425b0c:	mov    ecx,DWORD PTR [ecx]
  425b0e:	mov    esi,DWORD PTR [edx+0x190]
  425b14:	mov    DWORD PTR [esi],ecx
  425b16:	mov    eax,DWORD PTR [edx+0x194]
  425b1c:	mov    ecx,DWORD PTR [eax]
  425b1e:	mov    ecx,DWORD PTR [ecx+0x3c]
  425b21:	add    ecx,DWORD PTR [eax]
  425b23:	mov    DWORD PTR [ebp-0x4],0xf89ca5a1
  425b2a:	mov    eax,DWORD PTR [ebp-0x4]
  425b2d:	movzx  ecx,WORD PTR [ecx+0x16]
  425b31:	xor    eax,0x75108ac
  425b36:	add    eax,0x3272f3
  425b3b:	pop    esi
  425b3c:	test   ecx,eax
  425b3e:	je     0x425b4c
  425b40:	mov    eax,DWORD PTR [edx+0x1c8]
  425b46:	mov    DWORD PTR [eax],0xf89c85a2
  425b4c:	leave  
  425b4d:	ret    0x4
  425b50:	push   ebp
  425b51:	mov    ebp,esp
  425b53:	sub    esp,0x70
  425b56:	and    DWORD PTR [ebp-0x20],0x0
  425b5a:	mov    DWORD PTR [ebp-0x18],0xf89cb5a1
  425b61:	mov    DWORD PTR [ebp-0x1c],0xf89c85e1
  425b68:	mov    DWORD PTR [ebp-0x2c],0xf89c85bd
  425b6f:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  425b76:	mov    DWORD PTR [ebp-0x2c],0xf89f05a1
  425b7d:	mov    eax,DWORD PTR [ebp+0x20]
  425b80:	mov    eax,DWORD PTR [eax+0x194]
  425b86:	mov    DWORD PTR [ebp-0xc],eax
  425b89:	mov    eax,DWORD PTR [ebp+0x20]
  425b8c:	push   ebx
  425b8d:	push   esi
  425b8e:	mov    esi,DWORD PTR [eax+0x190]
  425b94:	mov    eax,DWORD PTR [ebp+0x20]
  425b97:	mov    eax,DWORD PTR [eax+0x18c]
  425b9d:	mov    DWORD PTR [ebp-0x8],eax
  425ba0:	mov    eax,DWORD PTR [eax]
  425ba2:	push   edi
  425ba3:	mov    DWORD PTR [ebp-0x4],esi
  425ba6:	test   eax,eax
  425ba8:	jne    0x425bb5
  425baa:	push   DWORD PTR [ebp+0x1c]
  425bad:	mov    edx,DWORD PTR [ebp+0x20]
  425bb0:	call   0x425af4
  425bb5:	mov    eax,DWORD PTR [esi]
  425bb7:	mov    ebx,DWORD PTR [esi]
  425bb9:	add    ebx,DWORD PTR [eax+0x3c]
  425bbc:	mov    eax,DWORD PTR [ebp+0xc]
  425bbf:	mov    ecx,DWORD PTR [ebp-0x8]
  425bc2:	mov    ecx,DWORD PTR [ecx]
  425bc4:	mov    esi,0x75108ac
  425bc9:	xor    eax,esi
  425bcb:	mov    edi,0x3272f3
  425bd0:	add    eax,edi
  425bd2:	cmp    eax,ecx
  425bd4:	jne    0x425e0c
  425bda:	mov    eax,DWORD PTR [ebp-0xc]
  425bdd:	mov    eax,DWORD PTR [eax]
  425bdf:	mov    DWORD PTR [ebp-0x10],eax
  425be2:	mov    eax,DWORD PTR [ebx+0x50]
  425be5:	mov    DWORD PTR [ebp-0x68],eax
  425be8:	mov    eax,DWORD PTR [ebp-0x18]
  425beb:	xor    eax,esi
  425bed:	add    eax,edi
  425bef:	mov    DWORD PTR [ebp-0x64],eax
  425bf2:	mov    eax,DWORD PTR [ebp-0x14]
  425bf5:	and    DWORD PTR [ebp-0x6c],0x0
  425bf9:	xor    eax,esi
  425bfb:	add    eax,edi
  425bfd:	mov    DWORD PTR [ebp-0x60],eax
  425c00:	lea    eax,[ebp-0x70]
  425c03:	push   eax
  425c04:	mov    eax,DWORD PTR [ebp+0x8]
  425c07:	xor    eax,esi
  425c09:	add    eax,edi
  425c0b:	push   eax
  425c0c:	mov    eax,DWORD PTR [ebp+0x20]
  425c0f:	add    eax,0xaa
  425c14:	push   eax
  425c15:	mov    eax,DWORD PTR [ebp+0x20]
  425c18:	mov    eax,DWORD PTR [eax+0x198]
  425c1e:	mov    DWORD PTR [ebp-0x70],0x4
  425c25:	push   DWORD PTR [eax]
  425c27:	mov    eax,DWORD PTR [ebp+0x10]
  425c2a:	call   eax
  425c2c:	mov    ecx,DWORD PTR [ebp-0xc]
  425c2f:	mov    ecx,DWORD PTR [ecx]
  425c31:	mov    edx,DWORD PTR [ebp-0x8]
  425c34:	mov    DWORD PTR [ebp-0x6c],eax
  425c37:	mov    DWORD PTR [ebp+0x1c],eax
  425c3a:	mov    DWORD PTR [edx],ecx
  425c3c:	mov    ecx,DWORD PTR [ebp-0x4]
  425c3f:	mov    DWORD PTR [ecx],eax
  425c41:	mov    eax,DWORD PTR [ebx+0x50]
  425c44:	mov    DWORD PTR [ebp-0x68],eax
  425c47:	mov    eax,DWORD PTR [ebp-0x1c]
  425c4a:	xor    eax,esi
  425c4c:	add    eax,edi
  425c4e:	mov    DWORD PTR [ebp-0x64],eax
  425c51:	lea    eax,[ebp-0x20]
  425c54:	mov    DWORD PTR [ebp-0x60],eax
  425c57:	lea    eax,[ebp-0x70]
  425c5a:	push   eax
  425c5b:	mov    eax,DWORD PTR [ebp+0x8]
  425c5e:	xor    eax,esi
  425c60:	add    eax,edi
  425c62:	push   eax
  425c63:	mov    eax,DWORD PTR [ebp+0x20]
  425c66:	add    eax,0xee
  425c6b:	push   eax
  425c6c:	mov    eax,DWORD PTR [ebp+0x20]
  425c6f:	mov    eax,DWORD PTR [eax+0x198]
  425c75:	mov    DWORD PTR [ebp-0x70],0x4
  425c7c:	push   DWORD PTR [eax]
  425c7e:	mov    eax,DWORD PTR [ebp+0x10]
  425c81:	call   eax
  425c83:	test   eax,eax
  425c85:	je     0x425caa
  425c87:	and    DWORD PTR [ebp+0xc],0x0
  425c8b:	cmp    DWORD PTR [ebx+0x50],0x0
  425c8f:	jbe    0x425caa
  425c91:	mov    eax,DWORD PTR [ebp+0x1c]
  425c94:	mov    ecx,DWORD PTR [ebp-0x10]
  425c97:	sub    ecx,eax
  425c99:	mov    dl,BYTE PTR [ecx+eax*1]
  425c9c:	inc    DWORD PTR [ebp+0xc]
  425c9f:	mov    BYTE PTR [eax],dl
  425ca1:	mov    edx,DWORD PTR [ebp+0xc]
  425ca4:	inc    eax
  425ca5:	cmp    edx,DWORD PTR [ebx+0x50]
  425ca8:	jb     0x425c99
  425caa:	mov    edx,DWORD PTR [ebp+0x1c]
  425cad:	mov    ecx,DWORD PTR [edx+0x3c]
  425cb0:	add    ecx,edx
  425cb2:	mov    eax,DWORD PTR [ecx+0xa0]
  425cb8:	mov    ebx,DWORD PTR [ecx+0x28]
  425cbb:	add    eax,edx
  425cbd:	sub    edx,DWORD PTR [ebp-0x10]
  425cc0:	add    ebx,DWORD PTR [ebp+0x1c]
  425cc3:	mov    DWORD PTR [ebp+0xc],edx
  425cc6:	mov    DWORD PTR [ebp-0x2c],ecx
  425cc9:	mov    DWORD PTR [ebp-0x14],ebx
  425ccc:	mov    DWORD PTR [ebp-0x8],0x0
  425cd3:	jmp    0x425d4f
  425cd5:	add    edx,0xfffffff8
  425cd8:	shr    edx,1
  425cda:	mov    DWORD PTR [ebp-0x18],edx
  425cdd:	je     0x425d3b
  425cdf:	lea    edx,[eax+0x8]
  425ce2:	mov    DWORD PTR [ebp-0x4],edx
  425ce5:	mov    edx,DWORD PTR [ebp-0x18]
  425ce8:	mov    DWORD PTR [ebp-0x18],edx
  425ceb:	mov    edx,DWORD PTR [ebp-0x4]
  425cee:	movzx  edx,WORD PTR [edx]
  425cf1:	mov    DWORD PTR [ebp-0x24],edx
  425cf4:	and    edx,0xfff
  425cfa:	mov    DWORD PTR [ebp-0x28],edx
  425cfd:	mov    edx,DWORD PTR [ebp-0x24]
  425d00:	shr    edx,0xc
  425d03:	add    edx,0xffcd8d0d
  425d09:	xor    edx,esi
  425d0b:	cmp    edx,0xf89c85bc
  425d11:	jne    0x425d32
  425d13:	mov    edx,DWORD PTR [ebp-0x28]
  425d16:	add    edx,DWORD PTR [ebp+0x1c]
  425d19:	mov    ebx,DWORD PTR [eax]
  425d1b:	cmp    DWORD PTR [ebx+edx*1],0x0
  425d1f:	je     0x425d2f
  425d21:	mov    ecx,DWORD PTR [ebp+0xc]
  425d24:	add    ecx,DWORD PTR [ebx+edx*1]
  425d27:	mov    ebx,DWORD PTR [eax]
  425d29:	mov    DWORD PTR [edx+ebx*1],ecx
  425d2c:	mov    ecx,DWORD PTR [ebp-0x2c]
  425d2f:	mov    ebx,DWORD PTR [ebp-0x14]
  425d32:	add    DWORD PTR [ebp-0x4],0x2
  425d36:	dec    DWORD PTR [ebp-0x18]
  425d39:	jne    0x425ceb
  425d3b:	mov    edx,DWORD PTR [ebp-0xc]
  425d3e:	add    DWORD PTR [ebp-0x8],edx
  425d41:	mov    edx,DWORD PTR [ebp-0x8]
  425d44:	cmp    edx,DWORD PTR [ecx+0xa4]
  425d4a:	jae    0x425d5d
  425d4c:	add    eax,DWORD PTR [ebp-0xc]
  425d4f:	mov    edx,DWORD PTR [eax+0x4]
  425d52:	mov    DWORD PTR [ebp-0xc],edx
  425d55:	test   edx,edx
  425d57:	jne    0x425cd5
  425d5d:	mov    eax,DWORD PTR [ebp-0x10]
  425d60:	mov    DWORD PTR [ebp-0x6c],eax
  425d63:	mov    DWORD PTR [ebp-0x70],0x4
  425d6a:	mov    eax,DWORD PTR [ecx+0x50]
  425d6d:	mov    DWORD PTR [ebp-0x68],eax
  425d70:	mov    eax,DWORD PTR [ebp-0x1c]
  425d73:	xor    eax,esi
  425d75:	add    eax,edi
  425d77:	mov    DWORD PTR [ebp-0x64],eax
  425d7a:	lea    eax,[ebp-0x20]
  425d7d:	mov    DWORD PTR [ebp-0x60],eax
  425d80:	lea    eax,[ebp-0x70]
  425d83:	push   eax
  425d84:	mov    eax,DWORD PTR [ebp+0x8]
  425d87:	xor    eax,esi
  425d89:	add    eax,edi
  425d8b:	push   eax
  425d8c:	mov    eax,DWORD PTR [ebp+0x20]
  425d8f:	add    eax,0xee
  425d94:	push   eax
  425d95:	mov    eax,DWORD PTR [ebp+0x20]
  425d98:	mov    eax,DWORD PTR [eax+0x198]
  425d9e:	push   DWORD PTR [eax]
  425da0:	mov    eax,DWORD PTR [ebp+0x10]
  425da3:	call   eax
  425da5:	mov    eax,DWORD PTR [ebp+0x20]
  425da8:	mov    eax,DWORD PTR [eax+0x180]
  425dae:	add    eax,DWORD PTR [ebp+0xc]
  425db1:	mov    ecx,DWORD PTR [ebp+0xc]
  425db4:	push   DWORD PTR [ebp+0x18]
  425db7:	mov    DWORD PTR [eax],ecx
  425db9:	push   DWORD PTR [ebp+0x14]
  425dbc:	push   DWORD PTR [ebp+0x1c]
  425dbf:	call   ebx
  425dc1:	mov    ecx,DWORD PTR [ebp+0xc]
  425dc4:	add    ecx,DWORD PTR [ebp+0x20]
  425dc7:	lea    eax,[ebp+0x4]
  425dca:	mov    DWORD PTR [ebp+0x20],ecx
  425dcd:	mov    ecx,DWORD PTR [ebp+0x20]
  425dd0:	mov    ecx,DWORD PTR [ebp+0x20]
  425dd3:	mov    edx,DWORD PTR [ecx+0x190]
  425dd9:	mov    ecx,DWORD PTR [ebp+0x20]
  425ddc:	mov    ecx,DWORD PTR [ecx+0x18c]
  425de2:	mov    esi,DWORD PTR [ecx]
  425de4:	cmp    DWORD PTR [eax],esi
  425de6:	jb     0x425e07
  425de8:	mov    esi,DWORD PTR [edx]
  425dea:	mov    edi,DWORD PTR [edx]
  425dec:	mov    esi,DWORD PTR [esi+0x3c]
  425def:	lea    esi,[edi+esi*1+0x50]
  425df3:	mov    edi,DWORD PTR [ecx]
  425df5:	add    edi,DWORD PTR [esi]
  425df7:	cmp    DWORD PTR [eax],edi
  425df9:	jae    0x425e07
  425dfb:	mov    esi,DWORD PTR [ecx]
  425dfd:	mov    ecx,DWORD PTR [eax]
  425dff:	mov    edx,DWORD PTR [edx]
  425e01:	sub    ecx,esi
  425e03:	add    edx,ecx
  425e05:	mov    DWORD PTR [eax],edx
  425e07:	mov    eax,DWORD PTR [ebp+0xc]
  425e0a:	jmp    0x425e0e
  425e0c:	xor    eax,eax
  425e0e:	pop    edi
  425e0f:	pop    esi
  425e10:	pop    ebx
  425e11:	leave  
  425e12:	ret    0x1c
  425e15:	push   ebp
  425e16:	mov    ebp,esp
  425e18:	sub    esp,0x1c
  425e1b:	push   esi
  425e1c:	mov    esi,eax
  425e1e:	mov    eax,DWORD PTR [ecx+0x190]
  425e24:	cmp    DWORD PTR [eax],0x0
  425e27:	je     0x425f37
  425e2d:	test   edx,edx
  425e2f:	je     0x425f37
  425e35:	test   esi,esi
  425e37:	je     0x425f37
  425e3d:	mov    eax,DWORD PTR [esi+0x88]
  425e43:	test   eax,eax
  425e45:	je     0x425f32
  425e4b:	cmp    DWORD PTR [esi+0x8c],0x10
  425e52:	je     0x425f32
  425e58:	cmp    DWORD PTR [esi+0x34],edx
  425e5b:	je     0x425f32
  425e61:	mov    esi,DWORD PTR [ecx+0x18c]
  425e67:	and    DWORD PTR [ebp-0x10],0x0
  425e6b:	mov    ecx,edx
  425e6d:	sub    ecx,DWORD PTR [esi]
  425e6f:	add    eax,edx
  425e71:	movzx  edx,WORD PTR [eax+0xc]
  425e75:	mov    DWORD PTR [ebp-0x1c],ecx
  425e78:	movzx  ecx,WORD PTR [eax+0xe]
  425e7c:	add    ecx,edx
  425e7e:	je     0x425f32
  425e84:	lea    ecx,[eax+0x14]
  425e87:	push   ebx
  425e88:	mov    DWORD PTR [ebp-0x18],ecx
  425e8b:	mov    esi,0x7fffffff
  425e90:	push   edi
  425e91:	test   DWORD PTR [ecx],esi
  425e93:	je     0x425f14
  425e95:	mov    edx,DWORD PTR [ecx]
  425e97:	and    DWORD PTR [ebp-0xc],0x0
  425e9b:	and    edx,esi
  425e9d:	add    edx,eax
  425e9f:	movzx  edi,WORD PTR [edx+0xe]
  425ea3:	movzx  ebx,WORD PTR [edx+0xc]
  425ea7:	add    edi,ebx
  425ea9:	je     0x425f14
  425eab:	lea    ecx,[edx+0x14]
  425eae:	mov    DWORD PTR [ebp-0x14],ecx
  425eb1:	test   DWORD PTR [ecx],esi
  425eb3:	je     0x425ef6
  425eb5:	mov    ecx,DWORD PTR [ecx]
  425eb7:	and    DWORD PTR [ebp-0x8],0x0
  425ebb:	and    ecx,esi
  425ebd:	add    ecx,eax
  425ebf:	movzx  edi,WORD PTR [ecx+0xe]
  425ec3:	movzx  ebx,WORD PTR [ecx+0xc]
  425ec7:	add    edi,ebx
  425ec9:	je     0x425ef6
  425ecb:	lea    edi,[ecx+0x14]
  425ece:	mov    DWORD PTR [ebp-0x4],edi
  425ed1:	mov    edi,DWORD PTR [ebp-0x4]
  425ed4:	mov    edi,DWORD PTR [edi]
  425ed6:	test   edi,edi
  425ed8:	je     0x425ee0
  425eda:	mov    ebx,DWORD PTR [ebp-0x1c]
  425edd:	add    DWORD PTR [edi+eax*1],ebx
  425ee0:	movzx  edi,WORD PTR [ecx+0xe]
  425ee4:	movzx  ebx,WORD PTR [ecx+0xc]
  425ee8:	inc    DWORD PTR [ebp-0x8]
  425eeb:	add    DWORD PTR [ebp-0x4],0x8
  425eef:	add    edi,ebx
  425ef1:	cmp    DWORD PTR [ebp-0x8],edi
  425ef4:	jb     0x425ed1
  425ef6:	movzx  edi,WORD PTR [edx+0xe]
  425efa:	movzx  ebx,WORD PTR [edx+0xc]
  425efe:	mov    ecx,DWORD PTR [ebp-0x14]
  425f01:	inc    DWORD PTR [ebp-0xc]
  425f04:	add    ecx,0x8
  425f07:	add    edi,ebx
  425f09:	mov    DWORD PTR [ebp-0x14],ecx
  425f0c:	cmp    DWORD PTR [ebp-0xc],edi
  425f0f:	jb     0x425eb1
  425f11:	mov    ecx,DWORD PTR [ebp-0x18]
  425f14:	movzx  edx,WORD PTR [eax+0xe]
  425f18:	movzx  edi,WORD PTR [eax+0xc]
  425f1c:	inc    DWORD PTR [ebp-0x10]
  425f1f:	add    ecx,0x8
  425f22:	add    edx,edi
  425f24:	mov    DWORD PTR [ebp-0x18],ecx
  425f27:	cmp    DWORD PTR [ebp-0x10],edx
  425f2a:	jb     0x425e91
  425f30:	pop    edi
  425f31:	pop    ebx
  425f32:	xor    eax,eax
  425f34:	inc    eax
  425f35:	jmp    0x425f39
  425f37:	xor    eax,eax
  425f39:	pop    esi
  425f3a:	leave  
  425f3b:	ret    
  425f3c:	push   ebp
  425f3d:	mov    ebp,esp
  425f3f:	mov    ecx,DWORD PTR [ecx+0x190]
  425f45:	mov    eax,DWORD PTR [ebp+0xc]
  425f48:	sub    esp,0x10
  425f4b:	push   ebx
  425f4c:	xor    ebx,ebx
  425f4e:	push   esi
  425f4f:	push   edi
  425f50:	cmp    DWORD PTR [ecx],ebx
  425f52:	je     0x425fda
  425f58:	cmp    eax,ebx
  425f5a:	je     0x425fda
  425f5c:	cmp    DWORD PTR [eax+0x78],ebx
  425f5f:	jne    0x425f66
  425f61:	xor    eax,eax
  425f63:	inc    eax
  425f64:	jmp    0x425fdc
  425f66:	mov    eax,DWORD PTR [eax+0x78]
  425f69:	add    eax,DWORD PTR [ebp+0x8]
  425f6c:	mov    ecx,DWORD PTR [eax+0x1c]
  425f6f:	mov    edx,DWORD PTR [eax+0x24]
  425f72:	mov    esi,DWORD PTR [eax+0x14]
  425f75:	mov    edi,DWORD PTR [eax+0x18]
  425f78:	add    ecx,DWORD PTR [ebp+0x8]
  425f7b:	add    edx,DWORD PTR [ebp+0x8]
  425f7e:	mov    DWORD PTR [ebp-0x4],esi
  425f81:	cmp    esi,edi
  425f83:	ja     0x425f88
  425f85:	mov    DWORD PTR [ebp-0x4],edi
  425f88:	mov    DWORD PTR [ebp-0x8],ebx
  425f8b:	cmp    DWORD PTR [ebp-0x4],ebx
  425f8e:	jbe    0x425f61
  425f90:	cmp    ebx,DWORD PTR [eax+0x14]
  425f93:	jae    0x425f9b
  425f95:	movzx  esi,WORD PTR [edx+ebx*2]
  425f99:	jmp    0x425f9d
  425f9b:	mov    esi,ebx
  425f9d:	lea    esi,[ecx+esi*4]
  425fa0:	mov    edi,DWORD PTR [esi]
  425fa2:	test   edi,edi
  425fa4:	je     0x425fcf
  425fa6:	add    edi,DWORD PTR [ebp+0x8]
  425fa9:	mov    DWORD PTR [ebp-0x10],edi
  425fac:	cmp    edi,eax
  425fae:	jbe    0x425fc0
  425fb0:	mov    ebx,DWORD PTR [ebp+0xc]
  425fb3:	mov    ebx,DWORD PTR [ebx+0x7c]
  425fb6:	add    ebx,eax
  425fb8:	cmp    edi,ebx
  425fba:	jae    0x425fc0
  425fbc:	mov    esi,DWORD PTR [esi]
  425fbe:	jmp    0x425fc8
  425fc0:	sub    edi,DWORD PTR [ebp+0x8]
  425fc3:	mov    DWORD PTR [esi],edi
  425fc5:	mov    esi,DWORD PTR [ebp-0x10]
  425fc8:	test   esi,esi
  425fca:	je     0x425fda
  425fcc:	mov    ebx,DWORD PTR [ebp-0x8]
  425fcf:	inc    ebx
  425fd0:	mov    DWORD PTR [ebp-0x8],ebx
  425fd3:	cmp    ebx,DWORD PTR [ebp-0x4]
  425fd6:	jb     0x425f90
  425fd8:	jmp    0x425f61
  425fda:	xor    eax,eax
  425fdc:	pop    edi
  425fdd:	pop    esi
  425fde:	pop    ebx
  425fdf:	leave  
  425fe0:	ret    0x8
  425fe3:	push   ebp
  425fe4:	mov    ebp,esp
  425fe6:	sub    esp,0x2c
  425fe9:	mov    edx,0xf89c85a1
  425fee:	mov    DWORD PTR [ebp-0x4],edx
  425ff1:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  425ff8:	mov    eax,DWORD PTR [ebp-0x4]
  425ffb:	mov    ecx,DWORD PTR [ebp-0x4]
  425ffe:	mov    ecx,DWORD PTR [ebp-0x4]
  426001:	mov    ecx,DWORD PTR [ebp-0x4]
  426004:	mov    ecx,DWORD PTR [ebp-0x4]
  426007:	mov    ecx,DWORD PTR [ebp-0x4]
  42600a:	push   ebx
  42600b:	mov    ebx,DWORD PTR [ebp+0x10]
  42600e:	push   esi
  42600f:	mov    esi,0x75108ac
  426014:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  42601b:	mov    ecx,DWORD PTR [ebp-0x4]
  42601e:	mov    ebx,DWORD PTR [ebx+0x190]
  426024:	push   edi
  426025:	mov    edi,0x3272f3
  42602a:	xor    ecx,esi
  42602c:	xor    eax,esi
  42602e:	add    eax,edi
  426030:	add    ecx,edi
  426032:	mov    DWORD PTR [ebp-0x18],eax
  426035:	cmp    ecx,DWORD PTR [ebx]
  426037:	je     0x4262b8
  42603d:	mov    ebx,DWORD PTR [ebp-0x4]
  426040:	mov    ecx,DWORD PTR [ebp+0xc]
  426043:	xor    ebx,esi
  426045:	add    ebx,edi
  426047:	cmp    ebx,ecx
  426049:	je     0x4262b8
  42604f:	mov    ebx,DWORD PTR [ebp-0x4]
  426052:	mov    ecx,DWORD PTR [ecx+0x80]
  426058:	xor    ebx,esi
  42605a:	add    ebx,edi
  42605c:	cmp    ecx,ebx
  42605e:	je     0x4262b3
  426064:	add    ecx,DWORD PTR [ebp+0x8]
  426067:	mov    DWORD PTR [ebp-0x2c],ecx
  42606a:	mov    ebx,edx
  42606c:	xor    ebx,esi
  42606e:	add    ebx,edi
  426070:	mov    DWORD PTR [ebp-0x10],ebx
  426073:	mov    ebx,DWORD PTR [ebp-0x10]
  426076:	cmp    ebx,edx
  426078:	je     0x42608c
  42607a:	mov    edx,DWORD PTR [ebp-0x10]
  42607d:	mov    ebx,DWORD PTR [ebp-0x4]
  426080:	imul   edx,edx,0x14
  426083:	xor    ebx,esi
  426085:	add    ebx,edi
  426087:	cmp    DWORD PTR [edx+ecx*1],ebx
  42608a:	jne    0x4260a3
  42608c:	mov    edx,DWORD PTR [ebp-0x10]
  42608f:	mov    ebx,DWORD PTR [ebp-0x4]
  426092:	imul   edx,edx,0x14
  426095:	xor    ebx,esi
  426097:	add    ebx,edi
  426099:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  42609d:	je     0x4262a5
  4260a3:	mov    eax,DWORD PTR [ebp-0x4]
  4260a6:	mov    ebx,DWORD PTR [ebp-0x4]
  4260a9:	mov    eax,DWORD PTR [ebp-0x10]
  4260ac:	imul   eax,eax,0x14
  4260af:	add    eax,ecx
  4260b1:	mov    ecx,DWORD PTR [eax+0x10]
  4260b4:	add    ecx,DWORD PTR [ebp+0x8]
  4260b7:	xor    ebx,esi
  4260b9:	mov    DWORD PTR [ebp-0x1c],ecx
  4260bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4260bf:	mov    edx,DWORD PTR [ebp-0x4]
  4260c2:	xor    ecx,esi
  4260c4:	add    ecx,edi
  4260c6:	xor    edx,esi
  4260c8:	mov    DWORD PTR [ebp-0x24],ecx
  4260cb:	mov    ecx,DWORD PTR [eax]
  4260cd:	add    edx,edi
  4260cf:	add    ebx,edi
  4260d1:	cmp    ecx,edx
  4260d3:	je     0x4260db
  4260d5:	add    ecx,DWORD PTR [ebp+0x8]
  4260d8:	mov    DWORD PTR [ebp-0x24],ecx
  4260db:	mov    ecx,DWORD PTR [ebp-0x4]
  4260de:	xor    ecx,esi
  4260e0:	add    ecx,DWORD PTR [eax+0xc]
  4260e3:	mov    eax,DWORD PTR [ebp+0x8]
  4260e6:	lea    eax,[ecx+eax*1+0x3272f3]
  4260ed:	mov    DWORD PTR [ebp+0xc],eax
  4260f0:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  4260f7:	mov    eax,DWORD PTR [ebp+0x10]
  4260fa:	push   DWORD PTR [ebp+0xc]
  4260fd:	mov    eax,DWORD PTR [eax+0x1e0]
  426103:	call   DWORD PTR [eax]
  426105:	mov    ecx,DWORD PTR [ebp-0x4]
  426108:	xor    ecx,esi
  42610a:	add    ecx,edi
  42610c:	mov    DWORD PTR [ebp-0xc],eax
  42610f:	cmp    ecx,eax
  426111:	jne    0x426125
  426113:	mov    eax,DWORD PTR [ebp+0x10]
  426116:	push   DWORD PTR [ebp+0xc]
  426119:	mov    eax,DWORD PTR [eax+0x1e0]
  42611f:	call   DWORD PTR [eax+0xc]
  426122:	mov    DWORD PTR [ebp-0xc],eax
  426125:	mov    DWORD PTR [ebp-0x20],0x7f661b2a
  42612c:	mov    DWORD PTR [ebp-0x20],0xf89c985a
  426133:	mov    eax,DWORD PTR [ebp-0x4]
  426136:	xor    eax,esi
  426138:	add    eax,edi
  42613a:	cmp    eax,DWORD PTR [ebp-0xc]
  42613d:	jne    0x426162
  42613f:	mov    eax,DWORD PTR [ebp-0x8]
  426142:	mov    ecx,DWORD PTR [ebp-0x20]
  426145:	xor    eax,esi
  426147:	xor    ecx,esi
  426149:	lea    ebx,[ebx+eax*1+0x3272f3]
  426150:	mov    eax,DWORD PTR [ebp+0x10]
  426153:	mov    eax,DWORD PTR [eax+0x1e0]
  426159:	add    ecx,edi
  42615b:	imul   ecx,ebx
  42615e:	push   ecx
  42615f:	call   DWORD PTR [eax+0x24]
  426162:	mov    eax,DWORD PTR [ebp-0x4]
  426165:	xor    eax,esi
  426167:	add    eax,edi
  426169:	cmp    eax,DWORD PTR [ebp-0xc]
  42616c:	jne    0x42617d
  42616e:	mov    eax,DWORD PTR [ebp-0x28]
  426171:	xor    eax,esi
  426173:	add    eax,edi
  426175:	cmp    ebx,eax
  426177:	jbe    0x4260f7
  42617d:	mov    eax,DWORD PTR [ebp-0x4]
  426180:	xor    eax,esi
  426182:	add    eax,edi
  426184:	cmp    eax,DWORD PTR [ebp-0xc]
  426187:	jne    0x4261a0
  426189:	mov    eax,DWORD PTR [ebp-0x8]
  42618c:	mov    ecx,DWORD PTR [ebp-0x18]
  42618f:	xor    eax,esi
  426191:	lea    eax,[ecx+eax*1+0x3272f3]
  426198:	mov    DWORD PTR [ebp-0x18],eax
  42619b:	jmp    0x42628f
  4261a0:	mov    DWORD PTR [ebp-0x14],0x1121b29
  4261a7:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  4261ae:	mov    ebx,DWORD PTR [ebp-0x4]
  4261b1:	xor    ebx,esi
  4261b3:	add    ebx,edi
  4261b5:	jmp    0x42627c
  4261ba:	mov    eax,DWORD PTR [ebp-0x4]
  4261bd:	xor    eax,esi
  4261bf:	add    eax,edi
  4261c1:	mov    DWORD PTR [ebp-0x14],eax
  4261c4:	mov    eax,DWORD PTR [ebp-0x4]
  4261c7:	xor    eax,esi
  4261c9:	add    eax,edi
  4261cb:	mov    DWORD PTR [ebp+0xc],eax
  4261ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4261d1:	mov    eax,DWORD PTR [ebp-0x24]
  4261d4:	xor    ecx,esi
  4261d6:	add    ecx,edi
  4261d8:	cmp    ecx,eax
  4261da:	je     0x4261e2
  4261dc:	mov    eax,DWORD PTR [eax+ebx*4]
  4261df:	mov    DWORD PTR [ebp-0x14],eax
  4261e2:	mov    eax,DWORD PTR [ebp-0x1c]
  4261e5:	mov    eax,DWORD PTR [eax+ebx*4]
  4261e8:	mov    DWORD PTR [ebp+0xc],eax
  4261eb:	mov    eax,DWORD PTR [ebp-0x4]
  4261ee:	mov    ecx,DWORD PTR [ebp-0x14]
  4261f1:	xor    eax,esi
  4261f3:	add    eax,edi
  4261f5:	cmp    eax,ecx
  4261f7:	je     0x426222
  4261f9:	mov    eax,DWORD PTR [ebp-0x4]
  4261fc:	mov    ecx,DWORD PTR [ebp-0x14]
  4261ff:	xor    eax,esi
  426201:	add    eax,edi
  426203:	shr    ecx,0x1f
  426206:	cmp    eax,ecx
  426208:	je     0x426222
  42620a:	mov    ecx,DWORD PTR [ebp-0x14]
  42620d:	mov    eax,DWORD PTR [ebp+0x10]
  426210:	mov    eax,DWORD PTR [eax+0x1e0]
  426216:	movzx  ecx,cx
  426219:	push   ecx
  42621a:	push   DWORD PTR [ebp-0xc]
  42621d:	call   DWORD PTR [eax+0x8]
  426220:	jmp    0x42623b
  426222:	mov    eax,DWORD PTR [ebp+0xc]
  426225:	add    eax,DWORD PTR [ebp+0x8]
  426228:	mov    ecx,DWORD PTR [ebp+0x10]
  42622b:	mov    ecx,DWORD PTR [ecx+0x1e0]
  426231:	add    eax,0x2
  426234:	push   eax
  426235:	push   DWORD PTR [ebp-0xc]
  426238:	call   DWORD PTR [ecx+0x8]
  42623b:	mov    DWORD PTR [ebp+0xc],eax
  42623e:	mov    eax,DWORD PTR [ebp-0x4]
  426241:	mov    ecx,DWORD PTR [ebp+0xc]
  426244:	xor    eax,esi
  426246:	add    eax,edi
  426248:	cmp    eax,ecx
  42624a:	mov    eax,DWORD PTR [ebp-0x8]
  42624d:	jne    0x426260
  42624f:	mov    ecx,DWORD PTR [ebp-0x18]
  426252:	xor    eax,esi
  426254:	lea    eax,[ecx+eax*1+0x3272f3]
  42625b:	mov    DWORD PTR [ebp-0x18],eax
  42625e:	jmp    0x426270
  426260:	mov    ecx,DWORD PTR [ebp+0xc]
  426263:	xor    eax,esi
  426265:	add    eax,edi
  426267:	imul   eax,ecx
  42626a:	mov    ecx,DWORD PTR [ebp-0x1c]
  42626d:	mov    DWORD PTR [ecx+ebx*4],eax
  426270:	mov    eax,DWORD PTR [ebp-0x8]
  426273:	xor    eax,esi
  426275:	lea    ebx,[ebx+eax*1+0x3272f3]
  42627c:	mov    eax,DWORD PTR [ebp-0x4]
  42627f:	mov    ecx,DWORD PTR [ebp-0x1c]
  426282:	xor    eax,esi
  426284:	add    eax,edi
  426286:	cmp    DWORD PTR [ecx+ebx*4],eax
  426289:	jne    0x4261ba
  42628f:	mov    edx,DWORD PTR [ebp-0x10]
  426292:	mov    eax,DWORD PTR [ebp-0x18]
  426295:	mov    ecx,DWORD PTR [ebp-0x2c]
  426298:	sub    edx,0x3272f2
  42629e:	xor    edx,esi
  4262a0:	jmp    0x42606a
  4262a5:	mov    ecx,DWORD PTR [ebp-0x4]
  4262a8:	xor    ecx,esi
  4262aa:	add    ecx,edi
  4262ac:	cmp    eax,ecx
  4262ae:	mov    eax,DWORD PTR [ebp-0x4]
  4262b1:	jne    0x4262bb
  4262b3:	mov    eax,DWORD PTR [ebp-0x8]
  4262b6:	jmp    0x4262bb
  4262b8:	mov    eax,DWORD PTR [ebp-0x4]
  4262bb:	xor    eax,esi
  4262bd:	add    eax,edi
  4262bf:	pop    edi
  4262c0:	pop    esi
  4262c1:	pop    ebx
  4262c2:	leave  
  4262c3:	ret    0xc
  4262c6:	push   ebp
  4262c7:	mov    ebp,esp
  4262c9:	sub    esp,0x28
  4262cc:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  4262d3:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  4262da:	mov    eax,DWORD PTR [ebp+0xc]
  4262dd:	mov    DWORD PTR [ebp+0xc],eax
  4262e0:	push   esi
  4262e1:	mov    eax,eax
  4262e3:	mov    eax,DWORD PTR [ebp-0x4]
  4262e6:	mov    esi,DWORD PTR [ebp+0x8]
  4262e9:	mov    ecx,0x75108ac
  4262ee:	xor    eax,ecx
  4262f0:	mov    edx,0x3272f3
  4262f5:	add    eax,edx
  4262f7:	cmp    esi,eax
  4262f9:	je     0x426420
  4262ff:	mov    eax,DWORD PTR [ebp+0x8]
  426302:	mov    esi,DWORD PTR [ebp+0x8]
  426305:	add    esi,DWORD PTR [eax+0x3c]
  426308:	push   edi
  426309:	mov    DWORD PTR [ebp+0xc],esi
  42630c:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  426313:	mov    eax,DWORD PTR [ebp-0x1c]
  426316:	mov    esi,DWORD PTR [ebp-0x4]
  426319:	mov    edi,DWORD PTR [ebp+0xc]
  42631c:	xor    esi,ecx
  42631e:	xor    eax,ecx
  426320:	add    esi,edx
  426322:	cmp    DWORD PTR [edi+eax*8+0x1939810],esi
  426329:	je     0x42641a
  42632f:	mov    esi,DWORD PTR [ebp+0xc]
  426332:	mov    eax,DWORD PTR [ebp+0x8]
  426335:	add    eax,DWORD PTR [esi+0xa0]
  42633b:	mov    esi,DWORD PTR [ebp+0x8]
  42633e:	mov    edi,DWORD PTR [ebp+0xc]
  426341:	sub    esi,DWORD PTR [edi+0x34]
  426344:	mov    edi,DWORD PTR [ebp-0x4]
  426347:	xor    edi,ecx
  426349:	add    edi,edx
  42634b:	mov    DWORD PTR [ebp-0x24],esi
  42634e:	cmp    esi,edi
  426350:	je     0x42641a
  426356:	mov    esi,DWORD PTR [ebp-0x4]
  426359:	xor    esi,ecx
  42635b:	add    esi,edx
  42635d:	mov    DWORD PTR [ebp-0x8],esi
  426360:	push   ebx
  426361:	mov    DWORD PTR [ebp-0x10],0xf89c85bc
  426368:	jmp    0x426404
  42636d:	mov    esi,DWORD PTR [ebp-0x4]
  426370:	xor    esi,ecx
  426372:	lea    edi,[ebx-0x8]
  426375:	add    esi,edx
  426377:	shr    edi,1
  426379:	cmp    esi,edi
  42637b:	jae    0x4263ea
  42637d:	sub    edi,esi
  42637f:	lea    ebx,[eax+esi*2+0x8]
  426383:	mov    DWORD PTR [ebp-0x18],edi
  426386:	movzx  esi,WORD PTR [ebx]
  426389:	and    esi,0xfff
  42638f:	mov    DWORD PTR [ebp-0x14],esi
  426392:	mov    edi,DWORD PTR [ebp-0x14]
  426395:	mov    esi,DWORD PTR [eax]
  426397:	sub    esi,edx
  426399:	add    edi,esi
  42639b:	movzx  esi,WORD PTR [ebx]
  42639e:	shr    esi,0xc
  4263a1:	xor    edi,ecx
  4263a3:	mov    DWORD PTR [ebp-0x20],edi
  4263a6:	mov    DWORD PTR [ebp-0x14],esi
  4263a9:	mov    esi,DWORD PTR [ebp-0x20]
  4263ac:	mov    edi,DWORD PTR [ebp+0x8]
  4263af:	xor    esi,ecx
  4263b1:	lea    esi,[esi+edi*1+0x3272f3]
  4263b8:	mov    DWORD PTR [ebp-0x20],esi
  4263bb:	mov    esi,DWORD PTR [ebp-0x10]
  4263be:	mov    edi,DWORD PTR [ebp-0x14]
  4263c1:	xor    esi,ecx
  4263c3:	add    esi,edx
  4263c5:	cmp    edi,esi
  4263c7:	jne    0x4263df
  4263c9:	mov    esi,DWORD PTR [ebp-0x10]
  4263cc:	mov    edi,DWORD PTR [ebp-0x14]
  4263cf:	xor    esi,ecx
  4263d1:	add    esi,edx
  4263d3:	cmp    edi,esi
  4263d5:	jne    0x4263df
  4263d7:	mov    esi,DWORD PTR [ebp-0x20]
  4263da:	mov    edi,DWORD PTR [ebp-0x24]
  4263dd:	add    DWORD PTR [esi],edi
  4263df:	add    ebx,0x2
  4263e2:	dec    DWORD PTR [ebp-0x18]
  4263e5:	jne    0x426386
  4263e7:	mov    ebx,DWORD PTR [ebp-0xc]
  4263ea:	add    DWORD PTR [ebp-0x8],ebx
  4263ed:	mov    esi,DWORD PTR [ebp-0x1c]
  4263f0:	mov    edi,DWORD PTR [ebp-0x8]
  4263f3:	mov    ebx,DWORD PTR [ebp+0xc]
  4263f6:	xor    esi,ecx
  4263f8:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939814]
  4263ff:	jae    0x426419
  426401:	add    eax,DWORD PTR [ebp-0xc]
  426404:	mov    esi,DWORD PTR [ebp-0x4]
  426407:	mov    ebx,DWORD PTR [eax+0x4]
  42640a:	xor    esi,ecx
  42640c:	add    esi,edx
  42640e:	mov    DWORD PTR [ebp-0xc],ebx
  426411:	cmp    ebx,esi
  426413:	jne    0x42636d
  426419:	pop    ebx
  42641a:	mov    eax,DWORD PTR [ebp-0x28]
  42641d:	pop    edi
  42641e:	jmp    0x426423
  426420:	mov    eax,DWORD PTR [ebp-0x4]
  426423:	xor    eax,ecx
  426425:	add    eax,edx
  426427:	pop    esi
  426428:	leave  
  426429:	ret    0x8
  42642c:	push   ebp
  42642d:	mov    ebp,esp
  42642f:	sub    esp,0xd8
  426435:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  42643c:	mov    DWORD PTR [ebp-0x24],0xf89c85a2
  426443:	mov    eax,DWORD PTR [ebp-0x4]
  426446:	push   ebx
  426447:	push   esi
  426448:	mov    esi,0x75108ac
  42644d:	xor    eax,esi
  42644f:	push   edi
  426450:	mov    edi,0x3272f3
  426455:	add    eax,edi
  426457:	mov    DWORD PTR [ebp-0x18],eax
  42645a:	mov    eax,DWORD PTR [ebp-0x4]
  42645d:	xor    eax,esi
  42645f:	add    eax,edi
  426461:	mov    DWORD PTR [ebp-0x8],eax
  426464:	mov    ebx,DWORD PTR [ebp+0x20]
  426467:	mov    eax,DWORD PTR [ebp-0x1c]
  42646a:	mov    ecx,DWORD PTR [ebp-0x1c]
  42646d:	xor    eax,ecx
  42646f:	mov    DWORD PTR [ebp-0x1c],eax
  426472:	add    DWORD PTR [ebp-0x1c],0xf89cb5a1
  426479:	mov    eax,DWORD PTR [ebp-0xc]
  42647c:	mov    ecx,DWORD PTR [ebp-0xc]
  42647f:	xor    eax,ecx
  426481:	mov    DWORD PTR [ebp-0xc],eax
  426484:	add    DWORD PTR [ebp-0xc],0xf89c85e1
  42648b:	mov    eax,DWORD PTR [ebp-0x10]
  42648e:	mov    ecx,DWORD PTR [ebp-0x10]
  426491:	xor    eax,ecx
  426493:	mov    DWORD PTR [ebp-0x10],eax
  426496:	add    DWORD PTR [ebp-0x10],0xf89c85bd
  42649d:	mov    eax,DWORD PTR [ebp-0x28]
  4264a0:	mov    ecx,DWORD PTR [ebp-0x28]
  4264a3:	xor    eax,ecx
  4264a5:	mov    DWORD PTR [ebp-0x28],eax
  4264a8:	add    DWORD PTR [ebp-0x28],0xf89f05a1
  4264af:	mov    DWORD PTR [ebp+0x20],0xf89ceff6
  4264b6:	mov    eax,DWORD PTR [ebp+0x8]
  4264b9:	test   eax,eax
  4264bb:	je     0x426944
  4264c1:	mov    eax,DWORD PTR [ebp+0xc]
  4264c4:	test   eax,eax
  4264c6:	je     0x426944
  4264cc:	mov    eax,DWORD PTR [ebp+0x18]
  4264cf:	test   eax,eax
  4264d1:	je     0x426944
  4264d7:	mov    eax,DWORD PTR [ebp+0x20]
  4264da:	mov    ecx,DWORD PTR [ebp+0x8]
  4264dd:	xor    eax,0x8ac
  4264e2:	add    eax,0x72f3
  4264e7:	cmp    WORD PTR [ecx],ax
  4264ea:	jne    0x426944
  4264f0:	mov    eax,DWORD PTR [ebp-0x4]
  4264f3:	xor    eax,esi
  4264f5:	add    eax,edi
  4264f7:	mov    DWORD PTR [ebp-0x30],eax
  4264fa:	mov    eax,DWORD PTR [ebp-0x4]
  4264fd:	mov    ecx,DWORD PTR [ebp+0x8]
  426500:	mov    eax,DWORD PTR [ebp+0x8]
  426503:	add    eax,DWORD PTR [ecx+0x3c]
  426506:	mov    DWORD PTR [ebp+0xc],eax
  426509:	mov    eax,DWORD PTR [eax+0x50]
  42650c:	test   eax,eax
  42650e:	je     0x426944
  426514:	mov    DWORD PTR [ebp-0x2c],0xf88c85a1
  42651b:	mov    eax,DWORD PTR [ebp-0x2c]
  42651e:	xor    eax,esi
  426520:	add    eax,edi
  426522:	mov    DWORD PTR [ebp-0x2c],eax
  426525:	mov    eax,DWORD PTR [ebp-0x4]
  426528:	mov    eax,DWORD PTR [ebx+0x190]
  42652e:	mov    ecx,DWORD PTR [eax]
  426530:	mov    ecx,DWORD PTR [ecx+0x3c]
  426533:	add    ecx,DWORD PTR [eax]
  426535:	mov    eax,DWORD PTR [ebp-0x4]
  426538:	mov    eax,DWORD PTR [ebx+0x18c]
  42653e:	mov    edx,DWORD PTR [eax]
  426540:	mov    DWORD PTR [ebp-0x20],ecx
  426543:	mov    DWORD PTR [ebp+0x20],edx
  426546:	cmp    edx,edx
  426548:	jne    0x42657c
  42654a:	mov    eax,DWORD PTR [ebx+0x1e0]
  426550:	lea    edx,[ebp-0x18]
  426553:	push   edx
  426554:	mov    edx,DWORD PTR [ebp-0xc]
  426557:	xor    edx,esi
  426559:	add    edx,edi
  42655b:	push   edx
  42655c:	push   DWORD PTR [ecx+0x50]
  42655f:	push   DWORD PTR [ebp+0x20]
  426562:	call   DWORD PTR [eax+0x1c]
  426565:	mov    eax,DWORD PTR [ebp-0x20]
  426568:	mov    ecx,DWORD PTR [eax+0x54]
  42656b:	mov    eax,DWORD PTR [eax+0x50]
  42656e:	sub    eax,ecx
  426570:	add    ecx,DWORD PTR [ebp+0x20]
  426573:	push   ecx
  426574:	call   0x426ee1
  426579:	mov    edx,DWORD PTR [ebp+0x20]
  42657c:	mov    eax,DWORD PTR [ebx+0x194]
  426582:	mov    DWORD PTR [eax],edx
  426584:	mov    eax,DWORD PTR [ebp+0xc]
  426587:	push   DWORD PTR [eax+0x54]
  42658a:	push   DWORD PTR [ebp+0x8]
  42658d:	push   edx
  42658e:	call   0x426dd7
  426593:	mov    ecx,DWORD PTR [ebp+0x20]
  426596:	mov    eax,DWORD PTR [ecx+0x3c]
  426599:	add    eax,ecx
  42659b:	movzx  ecx,WORD PTR [eax+0x14]
  42659f:	lea    ecx,[ecx+eax*1+0x18]
  4265a3:	mov    DWORD PTR [ebp+0x18],ecx
  4265a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4265a9:	movzx  edx,WORD PTR [eax+0x6]
  4265ad:	xor    ecx,esi
  4265af:	add    ecx,edi
  4265b1:	mov    DWORD PTR [ebp+0xc],eax
  4265b4:	cmp    edx,ecx
  4265b6:	je     0x426663
  4265bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4265bf:	xor    ecx,esi
  4265c1:	add    ecx,edi
  4265c3:	mov    DWORD PTR [ebp-0x8],ecx
  4265c6:	mov    ecx,DWORD PTR [ebp-0x24]
  4265c9:	movzx  edx,WORD PTR [eax+0x6]
  4265cd:	xor    ecx,esi
  4265cf:	sub    edx,ecx
  4265d1:	sub    edx,edi
  4265d3:	cmp    DWORD PTR [ebp-0x8],edx
  4265d6:	ja     0x426663
  4265dc:	mov    edx,DWORD PTR [ebp+0x18]
  4265df:	add    edx,0x8
  4265e2:	mov    DWORD PTR [ebp+0x18],edx
  4265e5:	jmp    0x4265ea
  4265e7:	mov    edx,DWORD PTR [ebp+0x18]
  4265ea:	mov    eax,DWORD PTR [eax+0x38]
  4265ed:	lea    ecx,[eax-0x1]
  4265f0:	mov    DWORD PTR [ebp-0x38],eax
  4265f3:	mov    eax,DWORD PTR [edx]
  4265f5:	test   eax,ecx
  4265f7:	je     0x426600
  4265f9:	not    ecx
  4265fb:	and    eax,ecx
  4265fd:	add    eax,DWORD PTR [ebp-0x38]
  426600:	mov    ecx,DWORD PTR [edx+0x4]
  426603:	add    ecx,DWORD PTR [ebp+0x20]
  426606:	push   ecx
  426607:	call   0x426ee1
  42660c:	mov    edx,DWORD PTR [ebp-0x4]
  42660f:	mov    eax,DWORD PTR [ebp+0x18]
  426612:	mov    ecx,DWORD PTR [eax+0x8]
  426615:	xor    edx,esi
  426617:	add    edx,edi
  426619:	cmp    ecx,edx
  42661b:	je     0x426634
  42661d:	push   ecx
  42661e:	mov    ecx,DWORD PTR [ebp+0x8]
  426621:	add    ecx,DWORD PTR [eax+0xc]
  426624:	mov    eax,DWORD PTR [eax+0x4]
  426627:	add    eax,DWORD PTR [ebp+0x20]
  42662a:	push   ecx
  42662b:	push   eax
  42662c:	call   0x426dd7
  426631:	mov    eax,DWORD PTR [ebp+0x18]
  426634:	mov    ecx,DWORD PTR [ebp-0x24]
  426637:	mov    edx,DWORD PTR [ebp-0x8]
  42663a:	add    eax,0x28
  42663d:	xor    ecx,esi
  42663f:	lea    ecx,[edx+ecx*1+0x3272f3]
  426646:	mov    edx,DWORD PTR [ebp+0xc]
  426649:	mov    DWORD PTR [ebp+0x18],eax
  42664c:	mov    eax,DWORD PTR [ebp-0x24]
  42664f:	movzx  edx,WORD PTR [edx+0x6]
  426653:	xor    eax,esi
  426655:	sub    edx,eax
  426657:	mov    eax,DWORD PTR [ebp+0xc]
  42665a:	sub    edx,edi
  42665c:	mov    DWORD PTR [ebp-0x8],ecx
  42665f:	cmp    ecx,edx
  426661:	jbe    0x4265e7
  426663:	mov    edx,DWORD PTR [ebx+0x18c]
  426669:	mov    ecx,DWORD PTR [ebp+0x20]
  42666c:	cmp    ecx,DWORD PTR [edx]
  42666e:	jne    0x426697
  426670:	mov    eax,DWORD PTR [ebx+0x1e0]
  426676:	lea    edx,[ebp-0x18]
  426679:	push   edx
  42667a:	mov    edx,DWORD PTR [ebp-0x10]
  42667d:	xor    edx,esi
  42667f:	add    edx,edi
  426681:	push   edx
  426682:	mov    edx,DWORD PTR [ebp-0x20]
  426685:	push   DWORD PTR [edx+0x54]
  426688:	push   ecx
  426689:	call   DWORD PTR [eax+0x1c]
  42668c:	test   eax,eax
  42668e:	je     0x426935
  426694:	mov    eax,DWORD PTR [ebp+0xc]
  426697:	mov    ecx,DWORD PTR [ebx+0x1c8]
  42669d:	mov    ecx,DWORD PTR [ecx]
  42669f:	xor    ecx,esi
  4266a1:	add    ecx,edi
  4266a3:	je     0x426860
  4266a9:	mov    eax,DWORD PTR [ebp-0x4]
  4266ac:	xor    eax,esi
  4266ae:	add    eax,edi
  4266b0:	and    DWORD PTR [ebp+0x8],0x0
  4266b4:	mov    DWORD PTR [ebp-0x14],eax
  4266b7:	mov    eax,0xf89c85dd
  4266bc:	lea    ecx,[eax-0x8]
  4266bf:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  4266c6:	mov    DWORD PTR [ebp-0x54],0xf89c852d
  4266cd:	mov    DWORD PTR [ebp-0x50],eax
  4266d0:	mov    DWORD PTR [ebp-0x4c],ecx
  4266d3:	mov    DWORD PTR [ebp-0x48],ecx
  4266d6:	mov    DWORD PTR [ebp-0x44],0xf89c85a1
  4266dd:	mov    edx,DWORD PTR [ebp+0x8]
  4266e0:	mov    ecx,0x8ac
  4266e5:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  4266ea:	mov    edx,0x72f3
  4266ef:	add    cx,dx
  4266f2:	mov    edx,DWORD PTR [ebp+0x8]
  4266f5:	inc    DWORD PTR [ebp+0x8]
  4266f8:	cmp    DWORD PTR [ebp+0x8],0x6
  4266fc:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  426704:	jb     0x4266dd
  426706:	mov    ecx,0xf89c85d3
  42670b:	mov    DWORD PTR [ebp-0xb0],eax
  426711:	mov    DWORD PTR [ebp-0x9c],eax
  426717:	mov    DWORD PTR [ebp-0x74],eax
  42671a:	mov    DWORD PTR [ebp-0x70],eax
  42671d:	mov    eax,0xf89c852c
  426722:	lea    edx,[ecx+0x2c]
  426725:	mov    DWORD PTR [ebp-0x64],eax
  426728:	mov    DWORD PTR [ebp-0x60],eax
  42672b:	mov    DWORD PTR [ebp-0xb4],0xf89c85f5
  426735:	mov    DWORD PTR [ebp-0xac],ecx
  42673b:	mov    DWORD PTR [ebp-0xa8],edx
  426741:	mov    DWORD PTR [ebp-0xa4],0xf89c85da
  42674b:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  426755:	mov    DWORD PTR [ebp-0x98],0xf89c85fe
  42675f:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  426769:	mov    DWORD PTR [ebp-0x90],0xf89c852d
  426773:	mov    DWORD PTR [ebp-0x8c],ecx
  426779:	mov    DWORD PTR [ebp-0x88],0xf89c852a
  426783:	mov    DWORD PTR [ebp-0x84],edx
  426789:	mov    DWORD PTR [ebp-0x80],0xf89c85d0
  426790:	mov    DWORD PTR [ebp-0x7c],ecx
  426793:	mov    DWORD PTR [ebp-0x78],0xf89c85e2
  42679a:	mov    DWORD PTR [ebp-0x6c],ecx
  42679d:	mov    DWORD PTR [ebp-0x68],0xf89c85de
  4267a4:	mov    DWORD PTR [ebp-0x5c],0xf89c85a1
  4267ab:	xor    eax,eax
  4267ad:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  4267b4:	xor    cl,0xac
  4267b7:	sub    cl,0xd
  4267ba:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  4267c1:	inc    eax
  4267c2:	cmp    eax,0x17
  4267c5:	jb     0x4267ad
  4267c7:	mov    eax,DWORD PTR [ebx+0x1e0]
  4267cd:	lea    ecx,[ebp-0xc0]
  4267d3:	push   ecx
  4267d4:	call   DWORD PTR [eax+0x4]
  4267d7:	mov    ecx,DWORD PTR [ebx+0x1e0]
  4267dd:	lea    edx,[ebp-0xd8]
  4267e3:	push   edx
  4267e4:	push   eax
  4267e5:	call   DWORD PTR [ecx+0x8]
  4267e8:	mov    DWORD PTR [ebp-0x40],eax
  4267eb:	lea    eax,[ebp-0x14]
  4267ee:	push   eax
  4267ef:	mov    eax,DWORD PTR [ebx+0x18c]
  4267f5:	push   DWORD PTR [eax]
  4267f7:	mov    eax,DWORD PTR [ebp-0x40]
  4267fa:	call   eax
  4267fc:	mov    eax,DWORD PTR [ebp-0x4]
  4267ff:	xor    eax,esi
  426801:	add    eax,edi
  426803:	mov    DWORD PTR [ebp-0x34],eax
  426806:	mov    ecx,DWORD PTR [ebp-0x4]
  426809:	mov    eax,DWORD PTR [ebp-0x14]
  42680c:	xor    ecx,esi
  42680e:	add    ecx,edi
  426810:	cmp    eax,ecx
  426812:	je     0x42685d
  426814:	mov    DWORD PTR [ebp-0x3c],eax
  426817:	jmp    0x426828
  426819:	mov    eax,DWORD PTR [eax]
  42681b:	mov    ecx,DWORD PTR [ebp-0x3c]
  42681e:	mov    DWORD PTR [ebp-0x14],eax
  426821:	mov    eax,DWORD PTR [ebp-0x14]
  426824:	cmp    eax,ecx
  426826:	je     0x426835
  426828:	mov    edx,DWORD PTR [eax+0x18]
  42682b:	mov    ecx,DWORD PTR [ebx+0x18c]
  426831:	cmp    edx,DWORD PTR [ecx]
  426833:	jne    0x426819
  426835:	mov    ecx,DWORD PTR [ebx+0x18c]
  42683b:	mov    edx,DWORD PTR [eax+0x18]
  42683e:	cmp    edx,DWORD PTR [ecx]
  426840:	jne    0x42685d
  426842:	mov    ecx,DWORD PTR [ebx+0x190]
  426848:	mov    edx,DWORD PTR [ebp-0x20]
  42684b:	mov    edx,DWORD PTR [edx+0x28]
  42684e:	add    edx,DWORD PTR [ecx]
  426850:	mov    DWORD PTR [eax+0x1c],edx
  426853:	mov    eax,DWORD PTR [ebp-0x24]
  426856:	xor    eax,esi
  426858:	add    eax,edi
  42685a:	mov    DWORD PTR [ebp-0x34],eax
  42685d:	mov    eax,DWORD PTR [ebp+0xc]
  426860:	push   ebx
  426861:	push   eax
  426862:	push   DWORD PTR [ebp+0x20]
  426865:	call   0x425fe3
  42686a:	test   eax,eax
  42686c:	je     0x426935
  426872:	push   DWORD PTR [ebp+0xc]
  426875:	mov    ecx,ebx
  426877:	push   DWORD PTR [ebp+0x20]
  42687a:	call   0x425f3c
  42687f:	test   eax,eax
  426881:	je     0x426935
  426887:	mov    eax,DWORD PTR [ebp+0xc]
  42688a:	mov    edx,DWORD PTR [ebp+0x20]
  42688d:	mov    ecx,ebx
  42688f:	call   0x425e15
  426894:	test   eax,eax
  426896:	je     0x426935
  42689c:	push   ebx
  42689d:	push   DWORD PTR [ebp+0x20]
  4268a0:	call   0x4262c6
  4268a5:	test   eax,eax
  4268a7:	je     0x426935
  4268ad:	mov    eax,DWORD PTR [ebx+0x18c]
  4268b3:	mov    edx,DWORD PTR [ebp+0x20]
  4268b6:	cmp    edx,DWORD PTR [eax]
  4268b8:	jne    0x4268d4
  4268ba:	mov    eax,DWORD PTR [ebx+0x1e0]
  4268c0:	lea    ecx,[ebp-0x18]
  4268c3:	push   ecx
  4268c4:	push   DWORD PTR [ebp-0x18]
  4268c7:	mov    ecx,DWORD PTR [ebp-0x20]
  4268ca:	push   DWORD PTR [ecx+0x54]
  4268cd:	push   edx
  4268ce:	call   DWORD PTR [eax+0x1c]
  4268d1:	mov    edx,DWORD PTR [ebp+0x20]
  4268d4:	mov    eax,DWORD PTR [ebx+0x1c8]
  4268da:	mov    eax,DWORD PTR [eax]
  4268dc:	xor    eax,esi
  4268de:	add    eax,edi
  4268e0:	je     0x426919
  4268e2:	mov    ecx,DWORD PTR [ebp+0xc]
  4268e5:	mov    eax,DWORD PTR [ecx+0x28]
  4268e8:	mov    DWORD PTR [ebp+0x8],0xf89ca5a1
  4268ef:	mov    esi,DWORD PTR [ebp+0x8]
  4268f2:	push   DWORD PTR [ebp+0x14]
  4268f5:	xor    esi,0x8ac
  4268fb:	push   DWORD PTR [ebp+0x10]
  4268fe:	add    esi,0x72f3
  426904:	or     WORD PTR [ecx+0x16],si
  426908:	add    eax,edx
  42690a:	push   edx
  42690b:	call   eax
  42690d:	mov    DWORD PTR [ebx+0x1d0],0xf89c85a2
  426917:	jmp    0x426923
  426919:	mov    eax,DWORD PTR [ebp+0xc]
  42691c:	mov    eax,DWORD PTR [eax+0x28]
  42691f:	add    eax,edx
  426921:	call   eax
  426923:	mov    DWORD PTR [ebp-0x8],eax
  426926:	mov    eax,DWORD PTR [ebp-0x8]
  426929:	mov    ecx,DWORD PTR [ebp+0x1c]
  42692c:	mov    DWORD PTR [ecx],eax
  42692e:	mov    DWORD PTR [ebp-0x30],0x1
  426935:	cmp    DWORD PTR [ebp-0x30],0x0
  426939:	jne    0x42693f
  42693b:	and    DWORD PTR [ebp+0x20],0x0
  42693f:	mov    eax,DWORD PTR [ebp+0x20]
  426942:	jmp    0x426946
  426944:	xor    eax,eax
  426946:	pop    edi
  426947:	pop    esi
  426948:	pop    ebx
  426949:	leave  
  42694a:	ret    0x1c
  42694d:	push   ebp
  42694e:	mov    ebp,esp
  426950:	movzx  edx,WORD PTR [ecx+0x6]
  426954:	movzx  eax,WORD PTR [ecx+0x14]
  426958:	push   ebx
  426959:	push   edi
  42695a:	xor    edi,edi
  42695c:	lea    eax,[eax+ecx*1+0x18]
  426960:	test   edx,edx
  426962:	je     0x426983
  426964:	mov    ecx,DWORD PTR [eax+0xc]
  426967:	lea    ebx,[ecx+esi*1]
  42696a:	cmp    DWORD PTR [ebp+0x8],ebx
  42696d:	jb     0x42697b
  42696f:	mov    ebx,DWORD PTR [eax+0x8]
  426972:	add    ebx,ecx
  426974:	add    ebx,esi
  426976:	cmp    DWORD PTR [ebp+0x8],ebx
  426979:	jb     0x426985
  42697b:	add    eax,0x28
  42697e:	inc    edi
  42697f:	cmp    edi,edx
  426981:	jb     0x426964
  426983:	xor    eax,eax
  426985:	pop    edi
  426986:	pop    ebx
  426987:	pop    ebp
  426988:	ret    0x4
  42698b:	push   ebp
  42698c:	mov    ebp,esp
  42698e:	sub    esp,0x34
  426991:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  426998:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  42699f:	mov    DWORD PTR [ebp-0x1c],0xf89c85a3
  4269a6:	mov    DWORD PTR [ebp-0x8],0xf89c85c2
  4269ad:	mov    DWORD PTR [ebp-0x20],0xf89c85e2
  4269b4:	mov    DWORD PTR [ebp-0x2c],0xf89c852b
  4269bb:	mov    DWORD PTR [ebp-0x2c],0xf89c85cb
  4269c2:	mov    DWORD PTR [ebp-0x10],eax
  4269c5:	mov    eax,DWORD PTR [ebp+0x8]
  4269c8:	mov    DWORD PTR [ebp-0x14],eax
  4269cb:	mov    eax,DWORD PTR [ebp-0xc]
  4269ce:	push   ebx
  4269cf:	mov    ecx,0x75108ac
  4269d4:	xor    eax,ecx
  4269d6:	push   esi
  4269d7:	mov    esi,DWORD PTR [ebp-0x10]
  4269da:	mov    edx,0x3272f3
  4269df:	add    eax,edx
  4269e1:	push   edi
  4269e2:	cmp    esi,eax
  4269e4:	je     0x426bc3
  4269ea:	mov    eax,DWORD PTR [ebp-0xc]
  4269ed:	mov    esi,DWORD PTR [ebp-0x14]
  4269f0:	xor    eax,ecx
  4269f2:	add    eax,edx
  4269f4:	cmp    esi,eax
  4269f6:	je     0x426bc3
  4269fc:	mov    eax,DWORD PTR [ebp-0xc]
  4269ff:	xor    eax,ecx
  426a01:	add    eax,edx
  426a03:	mov    DWORD PTR [ebp-0x24],eax
  426a06:	mov    eax,DWORD PTR [ebp-0xc]
  426a09:	xor    eax,ecx
  426a0b:	add    eax,edx
  426a0d:	mov    DWORD PTR [ebp-0x28],eax
  426a10:	mov    edi,DWORD PTR [ebp-0x20]
  426a13:	mov    ebx,DWORD PTR [ebp-0x8]
  426a16:	mov    esi,0x8ac
  426a1b:	xor    edi,esi
  426a1d:	mov    eax,0x72f3
  426a22:	xor    ebx,esi
  426a24:	add    edi,eax
  426a26:	add    ebx,eax
  426a28:	sub    ebx,edi
  426a2a:	mov    WORD PTR [ebp-0x8],bx
  426a2e:	jmp    0x426af3
  426a33:	mov    edi,DWORD PTR [ebp-0xc]
  426a36:	mov    bx,WORD PTR [ebp-0x4]
  426a3a:	xor    edi,esi
  426a3c:	add    edi,eax
  426a3e:	cmp    bx,di
  426a41:	je     0x426b35
  426a47:	mov    edi,DWORD PTR [ebp-0xc]
  426a4a:	mov    ebx,DWORD PTR [ebp+0xc]
  426a4d:	xor    edi,ecx
  426a4f:	add    edi,edx
  426a51:	cmp    ebx,edi
  426a53:	mov    di,WORD PTR [ebp-0x4]
  426a57:	mov    bx,WORD PTR [ebp+0x8]
  426a5b:	je     0x426ac6
  426a5d:	cmp    bx,di
  426a60:	je     0x426acf
  426a62:	mov    edi,DWORD PTR [ebp-0x20]
  426a65:	mov    bx,WORD PTR [ebp+0x8]
  426a69:	xor    edi,esi
  426a6b:	add    edi,eax
  426a6d:	cmp    bx,di
  426a70:	jb     0x426a90
  426a72:	mov    edi,DWORD PTR [ebp-0x2c]
  426a75:	mov    bx,WORD PTR [ebp+0x8]
  426a79:	xor    edi,esi
  426a7b:	add    edi,eax
  426a7d:	cmp    bx,di
  426a80:	ja     0x426a90
  426a82:	movzx  edi,WORD PTR [ebp+0x8]
  426a86:	movzx  ebx,WORD PTR [ebp-0x8]
  426a8a:	add    edi,ebx
  426a8c:	mov    WORD PTR [ebp+0x8],di
  426a90:	mov    edi,DWORD PTR [ebp-0x20]
  426a93:	mov    bx,WORD PTR [ebp-0x4]
  426a97:	xor    edi,esi
  426a99:	add    edi,eax
  426a9b:	cmp    bx,di
  426a9e:	jb     0x426abe
  426aa0:	mov    edi,DWORD PTR [ebp-0x2c]
  426aa3:	mov    bx,WORD PTR [ebp-0x4]
  426aa7:	xor    edi,esi
  426aa9:	add    edi,eax
  426aab:	cmp    bx,di
  426aae:	ja     0x426abe
  426ab0:	movzx  edi,WORD PTR [ebp-0x4]
  426ab4:	movzx  ebx,WORD PTR [ebp-0x8]
  426ab8:	add    edi,ebx
  426aba:	mov    WORD PTR [ebp-0x4],di
  426abe:	mov    di,WORD PTR [ebp-0x4]
  426ac2:	mov    bx,WORD PTR [ebp+0x8]
  426ac6:	cmp    bx,di
  426ac9:	jne    0x426bc3
  426acf:	mov    edi,DWORD PTR [ebp-0x1c]
  426ad2:	mov    ebx,DWORD PTR [ebp-0x10]
  426ad5:	xor    edi,ecx
  426ad7:	lea    edi,[edi+ebx*1+0x3272f3]
  426ade:	mov    DWORD PTR [ebp-0x10],edi
  426ae1:	mov    edi,DWORD PTR [ebp-0x1c]
  426ae4:	mov    ebx,DWORD PTR [ebp-0x14]
  426ae7:	xor    edi,ecx
  426ae9:	lea    edi,[edi+ebx*1+0x3272f3]
  426af0:	mov    DWORD PTR [ebp-0x14],edi
  426af3:	mov    edi,DWORD PTR [ebp-0x24]
  426af6:	mov    ebx,DWORD PTR [ebp-0x10]
  426af9:	mov    di,WORD PTR [ebx+edi*2]
  426afd:	mov    WORD PTR [ebp+0x8],di
  426b01:	mov    edi,DWORD PTR [ebp-0x28]
  426b04:	mov    ebx,DWORD PTR [ebp-0x14]
  426b07:	mov    di,WORD PTR [ebx+edi*2]
  426b0b:	mov    WORD PTR [ebp-0x4],di
  426b0f:	mov    edi,DWORD PTR [ebp-0xc]
  426b12:	mov    bx,WORD PTR [ebp+0x8]
  426b16:	xor    edi,esi
  426b18:	add    edi,eax
  426b1a:	cmp    bx,di
  426b1d:	jne    0x426a33
  426b23:	mov    eax,DWORD PTR [ebp-0x18]
  426b26:	mov    esi,DWORD PTR [ebp-0xc]
  426b29:	xor    eax,ecx
  426b2b:	add    eax,edx
  426b2d:	imul   eax,esi
  426b30:	mov    DWORD PTR [ebp-0xc],eax
  426b33:	jmp    0x426b47
  426b35:	mov    eax,DWORD PTR [ebp-0xc]
  426b38:	mov    esi,DWORD PTR [ebp-0x18]
  426b3b:	xor    eax,ecx
  426b3d:	lea    eax,[eax+esi*1+0x3272f3]
  426b44:	mov    DWORD PTR [ebp-0x18],eax
  426b47:	mov    eax,DWORD PTR [ebp-0x24]
  426b4a:	sub    eax,edx
  426b4c:	xor    eax,ecx
  426b4e:	mov    DWORD PTR [ebp-0x30],eax
  426b51:	mov    eax,DWORD PTR [ebp-0x28]
  426b54:	sub    eax,edx
  426b56:	xor    eax,ecx
  426b58:	mov    DWORD PTR [ebp-0x34],eax
  426b5b:	mov    eax,DWORD PTR [ebp-0x34]
  426b5e:	mov    esi,DWORD PTR [ebp-0x1c]
  426b61:	xor    esi,ecx
  426b63:	add    esi,edx
  426b65:	xor    eax,ecx
  426b67:	add    eax,0x3272f3
  426b6c:	imul   esi,eax
  426b6f:	mov    eax,DWORD PTR [ebp-0x14]
  426b72:	movzx  eax,WORD PTR [esi+eax*1]
  426b76:	mov    esi,DWORD PTR [ebp-0x30]
  426b79:	mov    edi,DWORD PTR [ebp-0x1c]
  426b7c:	xor    esi,ecx
  426b7e:	add    esi,edx
  426b80:	xor    edi,ecx
  426b82:	add    edi,edx
  426b84:	imul   edi,esi
  426b87:	mov    esi,DWORD PTR [ebp-0x10]
  426b8a:	movzx  esi,WORD PTR [edi+esi*1]
  426b8e:	sub    eax,edx
  426b90:	sub    esi,edx
  426b92:	xor    eax,ecx
  426b94:	xor    esi,ecx
  426b96:	cmp    esi,eax
  426b98:	jne    0x426bc3
  426b9a:	mov    eax,DWORD PTR [ebp-0x30]
  426b9d:	mov    esi,DWORD PTR [ebp-0x1c]
  426ba0:	xor    eax,ecx
  426ba2:	add    eax,0x3272f3
  426ba7:	xor    esi,ecx
  426ba9:	add    esi,edx
  426bab:	imul   esi,eax
  426bae:	mov    eax,DWORD PTR [ebp-0x10]
  426bb1:	movzx  eax,WORD PTR [esi+eax*1]
  426bb5:	mov    esi,DWORD PTR [ebp-0xc]
  426bb8:	sub    eax,edx
  426bba:	xor    eax,ecx
  426bbc:	cmp    eax,esi
  426bbe:	mov    eax,DWORD PTR [ebp-0xc]
  426bc1:	je     0x426bc6
  426bc3:	mov    eax,DWORD PTR [ebp-0x18]
  426bc6:	pop    edi
  426bc7:	xor    eax,ecx
  426bc9:	pop    esi
  426bca:	add    eax,edx
  426bcc:	pop    ebx
  426bcd:	leave  
  426bce:	ret    0x8
  426bd1:	push   ebp
  426bd2:	mov    ebp,esp
  426bd4:	push   ecx
  426bd5:	mov    cx,WORD PTR [eax]
  426bd8:	push   esi
  426bd9:	mov    esi,0x3b5b
  426bde:	sub    cx,si
  426be1:	mov    esi,0x8a99
  426be6:	xor    cx,si
  426be9:	mov    esi,0x4e3c
  426bee:	mov    DWORD PTR [ebp-0x4],0xf89c85a0
  426bf5:	mov    edx,0xf89c85a1
  426bfa:	cmp    cx,si
  426bfd:	je     0x426c5c
  426bff:	push   ebx
  426c00:	push   edi
  426c01:	movzx  ecx,cx
  426c04:	mov    edi,0xffcd8d0d
  426c09:	mov    esi,0x75108ac
  426c0e:	mov    ebx,0x4f98
  426c13:	cmp    cx,bx
  426c16:	jne    0x426c1b
  426c18:	mov    DWORD PTR [ebp-0x4],edx
  426c1b:	lea    edx,[edi+0x1]
  426c1e:	xor    edx,esi
  426c20:	mov    edi,edx
  426c22:	xor    edi,esi
  426c24:	mov    cx,WORD PTR [eax+edi*2+0x64e5e6]
  426c2c:	mov    ebx,0x3b5b
  426c31:	sub    cx,bx
  426c34:	mov    ebx,0x8a99
  426c39:	xor    cx,bx
  426c3c:	mov    ebx,0x4e3c
  426c41:	cmp    cx,bx
  426c44:	jne    0x426c0e
  426c46:	mov    ecx,DWORD PTR [ebp-0x4]
  426c49:	pop    edi
  426c4a:	pop    ebx
  426c4b:	cmp    ecx,0xf89c85a0
  426c51:	je     0x426c5c
  426c53:	xor    ecx,esi
  426c55:	lea    eax,[eax+ecx*2+0x64e5e8]
  426c5c:	pop    esi
  426c5d:	leave  
  426c5e:	ret    
  426c5f:	push   ebp
  426c60:	mov    ebp,esp
  426c62:	push   ecx
  426c63:	push   esi
  426c64:	push   edi
  426c65:	mov    DWORD PTR [ebp-0x4],0xf89c85a0
  426c6c:	mov    esi,0xf89c85a1
  426c71:	call   0x426bd1
  426c76:	mov    edi,eax
  426c78:	mov    al,BYTE PTR [edi]
  426c7a:	sub    al,0x2
  426c7c:	xor    al,0x7d
  426c7e:	cmp    al,0x83
  426c80:	je     0x426ce3
  426c82:	mov    eax,edi
  426c84:	mov    edx,0xffcd8d0d
  426c89:	mov    ecx,0x75108ac
  426c8e:	push   ebx
  426c8f:	mov    ax,WORD PTR [eax]
  426c92:	mov    ebx,0x3b5b
  426c97:	sub    ax,bx
  426c9a:	mov    ebx,0x8a99
  426c9f:	xor    ax,bx
  426ca2:	mov    ebx,0x4e4a
  426ca7:	cmp    ax,bx
  426caa:	jne    0x426caf
  426cac:	mov    DWORD PTR [ebp-0x4],esi
  426caf:	lea    esi,[edx+0x1]
  426cb2:	xor    esi,ecx
  426cb4:	mov    edx,esi
  426cb6:	xor    edx,ecx
  426cb8:	lea    eax,[edi+edx*2+0x64e5e6]
  426cbf:	mov    bl,BYTE PTR [eax]
  426cc1:	sub    bl,0x2
  426cc4:	xor    bl,0x7d
  426cc7:	cmp    bl,0x83
  426cca:	jne    0x426c8f
  426ccc:	mov    eax,DWORD PTR [ebp-0x4]
  426ccf:	pop    ebx
  426cd0:	cmp    eax,0xf89c85a0
  426cd5:	je     0x426ce3
  426cd7:	xor    eax,ecx
  426cd9:	xor    ecx,ecx
  426cdb:	mov    WORD PTR [edi+eax*2+0x64e5e6],cx
  426ce3:	mov    eax,edi
  426ce5:	pop    edi
  426ce6:	pop    esi
  426ce7:	leave  
  426ce8:	ret    
  426ce9:	push   ebp
  426cea:	mov    ebp,esp
  426cec:	push   ecx
  426ced:	push   esi
  426cee:	mov    DWORD PTR [ebp-0x4],0xf89c85a0
  426cf5:	mov    esi,0xf89c85a1
  426cfa:	call   0x426bd1
  426cff:	mov    cx,WORD PTR [eax]
  426d02:	mov    edx,0x3b5b
  426d07:	sub    cx,dx
  426d0a:	mov    edx,0x8a99
  426d0f:	xor    cx,dx
  426d12:	mov    edx,0x4e3c
  426d17:	cmp    cx,dx
  426d1a:	je     0x426d73
  426d1c:	push   ebx
  426d1d:	push   edi
  426d1e:	movzx  ecx,cx
  426d21:	mov    edx,0xffcd8d0d
  426d26:	mov    edi,0x75108ac
  426d2b:	mov    ebx,0x4e4a
  426d30:	cmp    cx,bx
  426d33:	jne    0x426d38
  426d35:	mov    DWORD PTR [ebp-0x4],esi
  426d38:	lea    esi,[edx+0x1]
  426d3b:	xor    esi,edi
  426d3d:	mov    edx,esi
  426d3f:	xor    edx,edi
  426d41:	mov    cx,WORD PTR [eax+edx*2+0x64e5e6]
  426d49:	mov    ebx,0x3b5b
  426d4e:	sub    cx,bx
  426d51:	mov    ebx,0x8a99
  426d56:	xor    cx,bx
  426d59:	mov    ebx,0x4e3c
  426d5e:	cmp    cx,bx
  426d61:	jne    0x426d2b
  426d63:	cmp    DWORD PTR [ebp-0x4],0xf89c85a0
  426d6a:	pop    edi
  426d6b:	pop    ebx
  426d6c:	je     0x426d73
  426d6e:	xor    eax,eax
  426d70:	inc    eax
  426d71:	jmp    0x426d75
  426d73:	xor    eax,eax
  426d75:	pop    esi
  426d76:	leave  
  426d77:	ret    
  426d78:	push   ebp
  426d79:	mov    ebp,esp
  426d7b:	push   ecx
  426d7c:	mov    eax,DWORD PTR [ebp+0x8]
  426d7f:	movzx  ecx,WORD PTR [eax]
  426d82:	push   esi
  426d83:	lea    eax,[ecx-0x3b5b]
  426d89:	mov    esi,0x8a99
  426d8e:	push   edi
  426d8f:	xor    eax,esi
  426d91:	mov    edi,0x4e3c
  426d96:	mov    DWORD PTR [ebp-0x4],edx
  426d99:	cmp    ax,di
  426d9c:	je     0x426dc9
  426d9e:	mov    eax,DWORD PTR [ebp+0x8]
  426da1:	sub    eax,edx
  426da3:	mov    DWORD PTR [ebp+0x8],eax
  426da6:	jmp    0x426dab
  426da8:	mov    eax,DWORD PTR [ebp+0x8]
  426dab:	mov    WORD PTR [edx],cx
  426dae:	add    edx,0x2
  426db1:	movzx  edi,WORD PTR [eax+edx*1]
  426db5:	mov    ecx,edi
  426db7:	add    edi,0xffffc4a5
  426dbd:	xor    edi,esi
  426dbf:	mov    eax,0x4e3c
  426dc4:	cmp    di,ax
  426dc7:	jne    0x426da8
  426dc9:	xor    eax,eax
  426dcb:	pop    edi
  426dcc:	mov    WORD PTR [edx],ax
  426dcf:	mov    eax,DWORD PTR [ebp-0x4]
  426dd2:	pop    esi
  426dd3:	leave  
  426dd4:	ret    0x4
  426dd7:	push   ebp
  426dd8:	mov    ebp,esp
  426dda:	sub    esp,0x18
  426ddd:	mov    DWORD PTR [ebp-0x8],0xf89c85a1
  426de4:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  426deb:	mov    ecx,DWORD PTR [ebp-0x8]
  426dee:	push   esi
  426def:	mov    eax,0x75108ac
  426df4:	xor    ecx,eax
  426df6:	mov    esi,0x3272f3
  426dfb:	add    ecx,esi
  426dfd:	mov    DWORD PTR [ebp-0x4],ecx
  426e00:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  426e07:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  426e0e:	push   edi
  426e0f:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  426e16:	jmp    0x426eb7
  426e1b:	mov    ecx,DWORD PTR [ebp-0x4]
  426e1e:	mov    edx,DWORD PTR [ebp+0x10]
  426e21:	sub    edx,ecx
  426e23:	mov    ecx,DWORD PTR [ebp-0xc]
  426e26:	xor    ecx,eax
  426e28:	add    ecx,esi
  426e2a:	cmp    edx,ecx
  426e2c:	jbe    0x426e49
  426e2e:	mov    edx,DWORD PTR [ebp-0x4]
  426e31:	add    edx,DWORD PTR [ebp+0x8]
  426e34:	mov    ecx,DWORD PTR [ebp-0x4]
  426e37:	add    ecx,DWORD PTR [ebp+0xc]
  426e3a:	mov    edi,DWORD PTR [ecx]
  426e3c:	mov    DWORD PTR [edx],edi
  426e3e:	mov    ecx,DWORD PTR [ecx+0x4]
  426e41:	mov    DWORD PTR [edx+0x4],ecx
  426e44:	mov    ecx,DWORD PTR [ebp-0xc]
  426e47:	jmp    0x426e96
  426e49:	mov    ecx,DWORD PTR [ebp-0x4]
  426e4c:	mov    edx,DWORD PTR [ebp+0x10]
  426e4f:	sub    edx,ecx
  426e51:	mov    ecx,DWORD PTR [ebp-0x10]
  426e54:	xor    ecx,eax
  426e56:	add    ecx,esi
  426e58:	cmp    edx,ecx
  426e5a:	mov    ecx,DWORD PTR [ebp-0x4]
  426e5d:	jbe    0x426e71
  426e5f:	add    ecx,DWORD PTR [ebp+0x8]
  426e62:	mov    edx,DWORD PTR [ebp-0x4]
  426e65:	add    edx,DWORD PTR [ebp+0xc]
  426e68:	mov    edx,DWORD PTR [edx]
  426e6a:	mov    DWORD PTR [ecx],edx
  426e6c:	mov    ecx,DWORD PTR [ebp-0x10]
  426e6f:	jmp    0x426e96
  426e71:	mov    edx,DWORD PTR [ebp+0x10]
  426e74:	sub    edx,ecx
  426e76:	mov    ecx,DWORD PTR [ebp-0x14]
  426e79:	xor    ecx,eax
  426e7b:	add    ecx,esi
  426e7d:	cmp    edx,ecx
  426e7f:	mov    ecx,DWORD PTR [ebp-0x4]
  426e82:	jbe    0x426ea7
  426e84:	add    ecx,DWORD PTR [ebp+0x8]
  426e87:	mov    edx,DWORD PTR [ebp-0x4]
  426e8a:	add    edx,DWORD PTR [ebp+0xc]
  426e8d:	mov    dx,WORD PTR [edx]
  426e90:	mov    WORD PTR [ecx],dx
  426e93:	mov    ecx,DWORD PTR [ebp-0x14]
  426e96:	mov    edx,DWORD PTR [ebp-0x4]
  426e99:	xor    ecx,eax
  426e9b:	lea    ecx,[ecx+edx*1+0x3272f3]
  426ea2:	mov    DWORD PTR [ebp-0x4],ecx
  426ea5:	jmp    0x426eb7
  426ea7:	add    ecx,DWORD PTR [ebp+0x8]
  426eaa:	mov    edx,DWORD PTR [ebp-0x4]
  426ead:	add    edx,DWORD PTR [ebp+0xc]
  426eb0:	mov    dl,BYTE PTR [edx]
  426eb2:	mov    BYTE PTR [ecx],dl
  426eb4:	inc    DWORD PTR [ebp-0x4]
  426eb7:	mov    ecx,DWORD PTR [ebp-0x18]
  426eba:	mov    edx,DWORD PTR [ebp+0x10]
  426ebd:	xor    ecx,eax
  426ebf:	add    ecx,esi
  426ec1:	imul   ecx,edx
  426ec4:	mov    edx,DWORD PTR [ebp-0x8]
  426ec7:	mov    edi,DWORD PTR [ebp-0x4]
  426eca:	xor    edx,eax
  426ecc:	lea    edx,[edx+edi*1+0x3272f3]
  426ed3:	cmp    edx,ecx
  426ed5:	jb     0x426e1b
  426edb:	pop    edi
  426edc:	pop    esi
  426edd:	leave  
  426ede:	ret    0xc
  426ee1:	push   ebp
  426ee2:	mov    ebp,esp
  426ee4:	sub    esp,0xc
  426ee7:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  426eee:	push   esi
  426eef:	mov    esi,eax
  426ef1:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  426ef8:	mov    edx,DWORD PTR [ebp-0x4]
  426efb:	mov    eax,0x75108ac
  426f00:	xor    edx,eax
  426f02:	mov    ecx,0x3272f3
  426f07:	add    edx,ecx
  426f09:	cmp    esi,edx
  426f0b:	je     0x426f4d
  426f0d:	push   ebx
  426f0e:	push   edi
  426f0f:	mov    edx,DWORD PTR [ebp-0x8]
  426f12:	mov    ebx,DWORD PTR [ebp+0x8]
  426f15:	xor    edx,eax
  426f17:	mov    edi,0xffcd8d0d
  426f1c:	sub    edi,edx
  426f1e:	add    esi,edi
  426f20:	lea    edx,[esi-0x3272f3]
  426f26:	xor    edx,eax
  426f28:	mov    DWORD PTR [ebp-0xc],edx
  426f2b:	mov    edx,DWORD PTR [ebp-0x4]
  426f2e:	mov    edi,DWORD PTR [ebp-0xc]
  426f31:	xor    dl,0xac
  426f34:	sub    dl,0xd
  426f37:	xor    edi,eax
  426f39:	mov    BYTE PTR [edi+ebx*1+0x3272f3],dl
  426f40:	mov    edx,DWORD PTR [ebp-0x4]
  426f43:	xor    edx,eax
  426f45:	add    edx,ecx
  426f47:	cmp    esi,edx
  426f49:	jne    0x426f0f
  426f4b:	pop    edi
  426f4c:	pop    ebx
  426f4d:	pop    esi
  426f4e:	leave  
  426f4f:	ret    0x4
  426f52:	push   ebp
  426f53:	mov    ebp,esp
  426f55:	sub    esp,0x21c
  426f5b:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  426f62:	mov    DWORD PTR [ebp-0x14],0xf89c85a2
  426f69:	mov    eax,DWORD PTR [ebp+0x10]
  426f6c:	mov    eax,DWORD PTR [ebp-0x4]
  426f6f:	mov    ecx,DWORD PTR [ebp+0x8]
  426f72:	push   esi
  426f73:	push   edi
  426f74:	mov    edi,0x75108ac
  426f79:	xor    eax,edi
  426f7b:	mov    esi,0x3272f3
  426f80:	add    eax,esi
  426f82:	cmp    eax,ecx
  426f84:	mov    eax,DWORD PTR [ebp-0x4]
  426f87:	jne    0x426f92
  426f89:	xor    eax,edi
  426f8b:	add    eax,esi
  426f8d:	jmp    0x42703e
  426f92:	mov    ecx,DWORD PTR [ebp+0xc]
  426f95:	xor    eax,edi
  426f97:	add    eax,esi
  426f99:	cmp    eax,ecx
  426f9b:	jne    0x426fa2
  426f9d:	mov    eax,DWORD PTR [ebp-0x4]
  426fa0:	jmp    0x426f89
  426fa2:	lea    eax,[ebp-0x21c]
  426fa8:	mov    DWORD PTR [ebp-0x8],eax
  426fab:	mov    eax,DWORD PTR [ebp+0xc]
  426fae:	mov    DWORD PTR [ebp-0x10],eax
  426fb1:	mov    eax,DWORD PTR [ebp-0x4]
  426fb4:	xor    eax,edi
  426fb6:	add    eax,esi
  426fb8:	mov    DWORD PTR [ebp+0x10],eax
  426fbb:	mov    eax,DWORD PTR [ebp+0xc]
  426fbe:	push   ebx
  426fbf:	call   0x426ce9
  426fc4:	mov    ebx,eax
  426fc6:	mov    eax,DWORD PTR [ebp+0x8]
  426fc9:	mov    eax,DWORD PTR [eax+0x14]
  426fcc:	jmp    0x427026
  426fce:	mov    eax,DWORD PTR [ebp+0xc]
  426fd1:	sub    eax,0x8
  426fd4:	mov    DWORD PTR [ebp-0xc],eax
  426fd7:	mov    eax,DWORD PTR [ebp-0xc]
  426fda:	mov    eax,DWORD PTR [eax+0x28]
  426fdd:	call   0x426bd1
  426fe2:	mov    DWORD PTR [ebp+0x10],eax
  426fe5:	push   DWORD PTR [ebp+0x10]
  426fe8:	mov    edx,DWORD PTR [ebp-0x8]
  426feb:	call   0x426d78
  426ff0:	mov    eax,DWORD PTR [ebp-0x4]
  426ff3:	xor    eax,edi
  426ff5:	add    eax,esi
  426ff7:	cmp    eax,ebx
  426ff9:	jne    0x427003
  426ffb:	mov    eax,DWORD PTR [ebp-0x8]
  426ffe:	call   0x426c5f
  427003:	mov    eax,DWORD PTR [ebp-0x14]
  427006:	xor    eax,edi
  427008:	add    eax,esi
  42700a:	push   eax
  42700b:	push   DWORD PTR [ebp-0x10]
  42700e:	mov    eax,DWORD PTR [ebp-0x8]
  427011:	call   0x42698b
  427016:	mov    ecx,DWORD PTR [ebp-0x4]
  427019:	xor    ecx,edi
  42701b:	add    ecx,esi
  42701d:	cmp    eax,ecx
  42701f:	je     0x427044
  427021:	mov    eax,DWORD PTR [ebp+0xc]
  427024:	mov    eax,DWORD PTR [eax]
  427026:	mov    DWORD PTR [ebp+0xc],eax
  427029:	mov    eax,DWORD PTR [ebp+0x8]
  42702c:	mov    ecx,DWORD PTR [ebp+0xc]
  42702f:	add    eax,0x14
  427032:	cmp    ecx,eax
  427034:	jne    0x426fce
  427036:	mov    eax,DWORD PTR [ebp-0x4]
  427039:	xor    eax,edi
  42703b:	add    eax,esi
  42703d:	pop    ebx
  42703e:	pop    edi
  42703f:	pop    esi
  427040:	leave  
  427041:	ret    0xc
  427044:	mov    eax,DWORD PTR [ebp-0xc]
  427047:	mov    eax,DWORD PTR [eax+0x18]
  42704a:	jmp    0x42703d
  42704c:	push   ebp
  42704d:	mov    ebp,esp
  42704f:	mov    eax,DWORD PTR [ebp+0xc]
  427052:	sub    esp,0x10
  427055:	cmp    DWORD PTR [ebp+0x8],0x0
  427059:	push   ebx
  42705a:	push   esi
  42705b:	push   edi
  42705c:	je     0x427111
  427062:	test   eax,eax
  427064:	je     0x427111
  42706a:	movzx  eax,WORD PTR [eax+0x20]
  42706e:	mov    ecx,eax
  427070:	mov    DWORD PTR [ebp-0x10],eax
  427073:	xor    edx,edx
  427075:	and    DWORD PTR [ebp-0x8],edx
  427078:	mov    eax,0x8a99
  42707d:	xor    ecx,eax
  42707f:	add    ecx,0x3b5b
  427085:	mov    DWORD PTR [ebp-0xc],ecx
  427088:	and    DWORD PTR [ebp-0x4],0x0
  42708c:	xor    ecx,ecx
  42708e:	push   0x7d
  427090:	pop    edi
  427091:	cmp    cx,WORD PTR [ebp-0xc]
  427095:	jae    0x4270fb
  427097:	lea    esi,[edx-0x3b5b]
  42709d:	xor    esi,eax
  42709f:	movzx  ecx,WORD PTR [ebp-0x4]
  4270a3:	mov    ebx,DWORD PTR [ebp+0xc]
  4270a6:	lea    ecx,[ebx+ecx*4]
  4270a9:	cmp    WORD PTR [ecx+0x2],si
  4270ad:	jne    0x4270e6
  4270af:	movzx  ecx,WORD PTR [ecx]
  4270b2:	mov    edi,0x4e3c
  4270b7:	cmp    cx,di
  4270ba:	jne    0x4270c8
  4270bc:	mov    ebx,DWORD PTR [ebp+0x8]
  4270bf:	movzx  edi,dx
  4270c2:	cmp    BYTE PTR [edi+ebx*1],0x0
  4270c6:	je     0x4270f5
  4270c8:	mov    ebx,DWORD PTR [ebp+0x8]
  4270cb:	movzx  edi,dx
  4270ce:	movsx  di,BYTE PTR [edi+ebx*1]
  4270d3:	mov    ebx,0x3b5b
  4270d8:	sub    di,bx
  4270db:	xor    di,ax
  4270de:	cmp    cx,di
  4270e1:	je     0x4270f5
  4270e3:	push   0xffffff83
  4270e5:	pop    edi
  4270e6:	inc    DWORD PTR [ebp-0x4]
  4270e9:	mov    cx,WORD PTR [ebp-0xc]
  4270ed:	cmp    WORD PTR [ebp-0x4],cx
  4270f1:	jb     0x42709f
  4270f3:	jmp    0x4270fb
  4270f5:	inc    DWORD PTR [ebp-0x8]
  4270f8:	push   0xffffff82
  4270fa:	pop    edi
  4270fb:	mov    esi,DWORD PTR [ebp+0x8]
  4270fe:	movzx  ecx,dx
  427101:	cmp    BYTE PTR [ecx+esi*1],0x0
  427105:	je     0x42711a
  427107:	inc    edx
  427108:	cmp    edi,0xffffff83
  42710b:	jne    0x427088
  427111:	xor    eax,eax
  427113:	pop    edi
  427114:	pop    esi
  427115:	pop    ebx
  427116:	leave  
  427117:	ret    0x8
  42711a:	mov    ecx,DWORD PTR [ebp-0x8]
  42711d:	add    ecx,0xffffc4a5
  427123:	xor    cx,ax
  427126:	xor    eax,eax
  427128:	cmp    cx,WORD PTR [ebp-0x10]
  42712c:	sete   al
  42712f:	jmp    0x427113
  427131:	push   ebp
  427132:	mov    ebp,esp
  427134:	sub    esp,0x50
  427137:	push   edi
  427138:	mov    edi,eax
  42713a:	mov    eax,DWORD PTR [edi+0x1a8]
  427140:	cmp    DWORD PTR [eax],0x0
  427143:	jne    0x42714c
  427145:	xor    eax,eax
  427147:	jmp    0x42727d
  42714c:	push   DWORD PTR [ebp+0x8]
  42714f:	push   0x2c
  427151:	pop    eax
  427152:	call   0x426ee1
  427157:	mov    edx,DWORD PTR [edi+0x1ac]
  42715d:	lea    eax,[edi+0x22]
  427160:	mov    DWORD PTR [ebp-0x4c],eax
  427163:	lea    eax,[edi+0x44]
  427166:	mov    DWORD PTR [ebp-0x48],eax
  427169:	lea    eax,[edi+0x66]
  42716c:	mov    DWORD PTR [ebp-0x44],eax
  42716f:	lea    eax,[edi+0x88]
  427175:	mov    DWORD PTR [ebp-0x40],eax
  427178:	lea    eax,[edi+0xaa]
  42717e:	mov    DWORD PTR [ebp-0x3c],eax
  427181:	lea    eax,[edi+0xcc]
  427187:	mov    DWORD PTR [ebp-0x38],eax
  42718a:	lea    eax,[edi+0xee]
  427190:	mov    DWORD PTR [ebp-0x34],eax
  427193:	lea    eax,[edi+0x110]
  427199:	mov    DWORD PTR [ebp-0x30],eax
  42719c:	lea    eax,[edi+0x132]
  4271a2:	mov    DWORD PTR [ebp-0x2c],eax
  4271a5:	lea    eax,[edi+0x154]
  4271ab:	push   edi
  4271ac:	mov    DWORD PTR [ebp-0x50],edi
  4271af:	mov    DWORD PTR [ebp-0x28],eax
  4271b2:	call   0x4272b1
  4271b7:	push   eax
  4271b8:	mov    eax,DWORD PTR [edi+0x1a8]
  4271be:	push   DWORD PTR [eax]
  4271c0:	call   0x426f52
  4271c5:	mov    DWORD PTR [ebp-0x10],eax
  4271c8:	test   eax,eax
  4271ca:	je     0x42727d
  4271d0:	mov    ecx,DWORD PTR [eax+0x3c]
  4271d3:	push   ebx
  4271d4:	push   esi
  4271d5:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  4271d9:	add    esi,eax
  4271db:	mov    edi,DWORD PTR [esi+0x24]
  4271de:	mov    ecx,DWORD PTR [esi+0x1c]
  4271e1:	mov    edx,DWORD PTR [esi+0x20]
  4271e4:	mov    ebx,DWORD PTR [esi+0x18]
  4271e7:	add    edi,eax
  4271e9:	mov    DWORD PTR [ebp-0x20],edi
  4271ec:	mov    edi,DWORD PTR [esi+0x14]
  4271ef:	add    ecx,eax
  4271f1:	add    edx,eax
  4271f3:	mov    DWORD PTR [ebp-0xc],ecx
  4271f6:	mov    DWORD PTR [ebp-0x1c],edx
  4271f9:	mov    DWORD PTR [ebp-0x8],edi
  4271fc:	cmp    edi,ebx
  4271fe:	ja     0x427203
  427200:	mov    DWORD PTR [ebp-0x8],ebx
  427203:	xor    ebx,ebx
  427205:	mov    DWORD PTR [ebp-0x18],ebx
  427208:	cmp    DWORD PTR [ebp-0x8],ebx
  42720b:	jbe    0x42727b
  42720d:	jmp    0x427212
  42720f:	mov    edx,DWORD PTR [ebp-0x1c]
  427212:	mov    edi,DWORD PTR [ebp-0x20]
  427215:	movzx  edi,WORD PTR [edi+ebx*2]
  427219:	cmp    ebx,DWORD PTR [esi+0x18]
  42721c:	jae    0x42727b
  42721e:	cmp    edi,DWORD PTR [esi+0x14]
  427221:	jae    0x42727b
  427223:	mov    ebx,DWORD PTR [edx+ebx*4]
  427226:	mov    edx,DWORD PTR [ebp+0x8]
  427229:	mov    edi,DWORD PTR [ecx+edi*4]
  42722c:	mov    DWORD PTR [ebp-0x4],edx
  42722f:	lea    edx,[ebp-0x50]
  427232:	add    ebx,eax
  427234:	add    edi,eax
  427236:	sub    edx,DWORD PTR [ebp+0x8]
  427239:	mov    DWORD PTR [ebp-0x14],0xb
  427240:	mov    DWORD PTR [ebp-0x24],edx
  427243:	mov    edx,DWORD PTR [ebp-0x4]
  427246:	cmp    DWORD PTR [edx],0x0
  427249:	jne    0x427266
  42724b:	mov    eax,DWORD PTR [ebp-0x24]
  42724e:	push   DWORD PTR [eax+edx*1]
  427251:	push   ebx
  427252:	call   0x42704c
  427257:	mov    ecx,DWORD PTR [ebp-0xc]
  42725a:	test   eax,eax
  42725c:	je     0x427263
  42725e:	mov    eax,DWORD PTR [ebp-0x4]
  427261:	mov    DWORD PTR [eax],edi
  427263:	mov    eax,DWORD PTR [ebp-0x10]
  427266:	add    DWORD PTR [ebp-0x4],0x4
  42726a:	dec    DWORD PTR [ebp-0x14]
  42726d:	jne    0x427243
  42726f:	mov    ebx,DWORD PTR [ebp-0x18]
  427272:	inc    ebx
  427273:	mov    DWORD PTR [ebp-0x18],ebx
  427276:	cmp    ebx,DWORD PTR [ebp-0x8]
  427279:	jb     0x42720f
  42727b:	pop    esi
  42727c:	pop    ebx
  42727d:	pop    edi
  42727e:	leave  
  42727f:	ret    0x4
  427282:	push   ebp
  427283:	mov    ebp,esp
  427285:	mov    eax,DWORD PTR [ebp+0x8]
  427288:	push   esi
  427289:	push   DWORD PTR [eax+0x1e0]
  42728f:	lea    esi,[eax+0x198]
  427295:	mov    eax,DWORD PTR [ebp+0x8]
  427298:	call   0x427131
  42729d:	mov    ecx,DWORD PTR [esi]
  42729f:	mov    DWORD PTR [ecx],eax
  4272a1:	mov    eax,DWORD PTR [esi]
  4272a3:	xor    ecx,ecx
  4272a5:	cmp    DWORD PTR [eax],ecx
  4272a7:	pop    esi
  4272a8:	setne  cl
  4272ab:	mov    eax,ecx
  4272ad:	pop    ebp
  4272ae:	ret    0x4
  4272b1:	mov    ecx,DWORD PTR [edi+0x188]
  4272b7:	push   ebx
  4272b8:	jmp    0x4272cd
  4272ba:	xor    eax,0x8a99
  4272bf:	add    eax,0x3b5b
  4272c4:	mov    WORD PTR [ecx],ax
  4272c7:	add    ecx,0x2
  4272ca:	add    edx,0x2
  4272cd:	movzx  eax,WORD PTR [edx]
  4272d0:	mov    ebx,0x4e3c
  4272d5:	cmp    ax,bx
  4272d8:	jne    0x4272ba
  4272da:	xor    eax,eax
  4272dc:	mov    WORD PTR [ecx],ax
  4272df:	mov    eax,DWORD PTR [edi+0x188]
  4272e5:	pop    ebx
  4272e6:	ret    
  4272e7:	push   edi
  4272e8:	mov    edi,eax
  4272ea:	mov    eax,DWORD PTR [esi+0x188]
  4272f0:	shl    edi,0x6
  4272f3:	add    eax,edi
  4272f5:	jmp    0x427301
  4272f7:	xor    cl,0x7d
  4272fa:	add    cl,0x2
  4272fd:	mov    BYTE PTR [eax],cl
  4272ff:	inc    eax
  427300:	inc    edx
  427301:	mov    cl,BYTE PTR [edx]
  427303:	cmp    cl,0x83
  427306:	jne    0x4272f7
  427308:	mov    BYTE PTR [eax],0x0
  42730b:	mov    eax,DWORD PTR [esi+0x188]
  427311:	add    eax,edi
  427313:	pop    edi
  427314:	ret    
  427315:	push   ebp
  427316:	mov    ebp,esp
  427318:	sub    esp,0x14
  42731b:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  427322:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  427329:	mov    eax,DWORD PTR [ebx]
  42732b:	mov    DWORD PTR [ebp-0x8],eax
  42732e:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  427335:	push   esi
  427336:	push   edi
  427337:	mov    DWORD PTR [ebp-0x14],0xead71881
  42733e:	mov    edi,DWORD PTR [ebp-0x4]
  427341:	mov    ecx,DWORD PTR [ebp-0x10]
  427344:	mov    eax,0x75108ac
  427349:	xor    edi,eax
  42734b:	mov    edx,0x3272f3
  427350:	xor    ecx,eax
  427352:	add    edi,edx
  427354:	add    ecx,edx
  427356:	imul   edi,ecx
  427359:	jmp    0x4273a1
  42735b:	mov    ecx,DWORD PTR [ebp-0x8]
  42735e:	mov    esi,DWORD PTR [ebp-0x4]
  427361:	xor    ecx,eax
  427363:	xor    esi,eax
  427365:	add    ecx,edx
  427367:	add    esi,edx
  427369:	test   esi,ecx
  42736b:	mov    esi,DWORD PTR [ebp-0x8]
  42736e:	mov    ecx,DWORD PTR [ebp-0x4]
  427371:	je     0x427388
  427373:	xor    ecx,eax
  427375:	xor    esi,eax
  427377:	add    ecx,edx
  427379:	add    esi,edx
  42737b:	shr    esi,cl
  42737d:	mov    ecx,DWORD PTR [ebp-0x14]
  427380:	xor    ecx,eax
  427382:	add    ecx,edx
  427384:	xor    esi,ecx
  427386:	jmp    0x427392
  427388:	xor    esi,eax
  42738a:	xor    ecx,eax
  42738c:	add    esi,edx
  42738e:	add    ecx,edx
  427390:	shr    esi,cl
  427392:	mov    DWORD PTR [ebp-0x8],esi
  427395:	mov    ecx,DWORD PTR [ebp-0x4]
  427398:	xor    ecx,eax
  42739a:	lea    edi,[edi+ecx*1+0x3272f3]
  4273a1:	mov    ecx,DWORD PTR [ebp-0xc]
  4273a4:	mov    esi,DWORD PTR [ebp-0x4]
  4273a7:	xor    esi,eax
  4273a9:	xor    ecx,eax
  4273ab:	sub    ecx,esi
  4273ad:	cmp    edi,ecx
  4273af:	jbe    0x42735b
  4273b1:	mov    eax,DWORD PTR [ebp-0x8]
  4273b4:	pop    edi
  4273b5:	mov    DWORD PTR [ebx],eax
  4273b7:	mov    eax,DWORD PTR [ebp-0x8]
  4273ba:	pop    esi
  4273bb:	leave  
  4273bc:	ret    
  4273bd:	push   ebp
  4273be:	mov    ebp,esp
  4273c0:	sub    esp,0x38
  4273c3:	push   ebx
  4273c4:	mov    ebx,0xf89c85a1
  4273c9:	mov    DWORD PTR [ebp-0x4],ebx
  4273cc:	lea    ecx,[ebx+0x1]
  4273cf:	mov    DWORD PTR [ebp-0x24],ecx
  4273d2:	mov    eax,DWORD PTR [ebp-0x4]
  4273d5:	mov    edx,DWORD PTR [ebp+0x8]
  4273d8:	push   esi
  4273d9:	mov    esi,0x75108ac
  4273de:	xor    eax,esi
  4273e0:	push   edi
  4273e1:	mov    edi,0x3272f3
  4273e6:	add    eax,edi
  4273e8:	cmp    edx,eax
  4273ea:	mov    eax,DWORD PTR [ebp-0x4]
  4273ed:	je     0x427552
  4273f3:	mov    edx,DWORD PTR [ebp+0xc]
  4273f6:	xor    eax,esi
  4273f8:	add    eax,edi
  4273fa:	cmp    edx,eax
  4273fc:	je     0x42754f
  427402:	mov    eax,DWORD PTR [ebp+0x10]
  427405:	mov    edx,DWORD PTR [ebp+0xc]
  427408:	mov    DWORD PTR [ebp-0x14],eax
  42740b:	mov    eax,DWORD PTR [ebp+0x8]
  42740e:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  427415:	mov    DWORD PTR [ebp-0xc],eax
  427418:	lea    eax,[ebx+0x2]
  42741b:	mov    DWORD PTR [ebp-0x1c],eax
  42741e:	mov    DWORD PTR [ebp-0x10],ebx
  427421:	mov    DWORD PTR [ebp+0xc],ecx
  427424:	mov    DWORD PTR [ebp+0x10],eax
  427427:	mov    eax,DWORD PTR [ebp+0xc]
  42742a:	xor    eax,esi
  42742c:	mov    DWORD PTR [ebp-0x20],edx
  42742f:	sub    edx,eax
  427431:	sub    edx,edi
  427433:	mov    DWORD PTR [ebp+0x8],edx
  427436:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  42743d:	jmp    0x42753f
  427442:	mov    eax,DWORD PTR [ebp+0xc]
  427445:	mov    ecx,DWORD PTR [ebp+0xc]
  427448:	xor    eax,esi
  42744a:	xor    ecx,esi
  42744c:	lea    ecx,[eax+ecx*1+0x64e5e6]
  427453:	mov    eax,DWORD PTR [ebp+0x8]
  427456:	xor    edx,edx
  427458:	div    ecx
  42745a:	mov    eax,DWORD PTR [ebp+0x10]
  42745d:	mov    ecx,DWORD PTR [ebp+0xc]
  427460:	xor    eax,esi
  427462:	xor    ecx,esi
  427464:	sub    eax,ecx
  427466:	cmp    edx,eax
  427468:	jne    0x4274fe
  42746e:	mov    eax,DWORD PTR [ebp+0x8]
  427471:	mov    ecx,DWORD PTR [ebp-0xc]
  427474:	mov    dl,BYTE PTR [eax+ecx*1]
  427477:	mov    eax,DWORD PTR [ebp-0x10]
  42747a:	mov    ecx,DWORD PTR [ebp-0x8]
  42747d:	xor    eax,esi
  42747f:	xor    ecx,esi
  427481:	add    eax,edi
  427483:	add    ecx,edi
  427485:	cmp    eax,ecx
  427487:	jae    0x4274cf
  427489:	lea    ecx,[eax-0x3272f3]
  42748f:	mov    DWORD PTR [ebp-0x4],ecx
  427492:	mov    ebx,DWORD PTR [ebp-0x4]
  427495:	xor    ebx,esi
  427497:	add    ebx,0x7f55d8e3
  42749d:	lea    ecx,[ebp+eax*4-0x38]
  4274a1:	mov    DWORD PTR [ecx],ebx
  4274a3:	mov    ebx,DWORD PTR [ecx]
  4274a5:	cmp    ebx,0x244ecb9c
  4274ab:	jbe    0x4274b5
  4274ad:	add    DWORD PTR [ecx],0x405fcdd
  4274b3:	jmp    0x4274bb
  4274b5:	add    DWORD PTR [ecx],0xfdaf4323
  4274bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4274be:	xor    ecx,esi
  4274c0:	inc    eax
  4274c1:	inc    DWORD PTR [ebp-0x4]
  4274c4:	add    ecx,edi
  4274c6:	cmp    eax,ecx
  4274c8:	jb     0x427492
  4274ca:	mov    ebx,0xf89c85a1
  4274cf:	cmp    DWORD PTR [ebp-0x14],0x0
  4274d3:	jne    0x4274dd
  4274d5:	xor    dl,0x7d
  4274d8:	add    dl,0x2
  4274db:	jmp    0x4274f3
  4274dd:	mov    eax,DWORD PTR [ebp-0x18]
  4274e0:	xor    al,0xac
  4274e2:	mov    cl,0xd
  4274e4:	sub    cl,al
  4274e6:	add    dl,cl
  4274e8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4274eb:	xor    cl,0xac
  4274ee:	sub    cl,0xd
  4274f1:	ror    dl,cl
  4274f3:	xor    eax,eax
  4274f5:	mov    eax,DWORD PTR [ebp+0x8]
  4274f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4274fb:	mov    BYTE PTR [eax+ecx*1],dl
  4274fe:	mov    eax,DWORD PTR [ebp+0x8]
  427501:	mov    ecx,DWORD PTR [ebp-0x10]
  427504:	sub    eax,edi
  427506:	xor    eax,esi
  427508:	cmp    eax,ecx
  42750a:	jne    0x42752d
  42750c:	mov    eax,DWORD PTR [ebp+0x10]
  42750f:	mov    ecx,DWORD PTR [ebp+0xc]
  427512:	xor    eax,esi
  427514:	xor    ecx,esi
  427516:	sub    eax,ecx
  427518:	mov    ecx,DWORD PTR [ebp-0x20]
  42751b:	sub    eax,edi
  42751d:	xor    eax,esi
  42751f:	mov    DWORD PTR [ebp+0x10],eax
  427522:	mov    eax,DWORD PTR [ebp+0xc]
  427525:	xor    eax,esi
  427527:	sub    ecx,eax
  427529:	sub    ecx,edi
  42752b:	jmp    0x42753c
  42752d:	mov    eax,DWORD PTR [ebp+0xc]
  427530:	xor    eax,esi
  427532:	mov    ecx,0xffcd8d0d
  427537:	sub    ecx,eax
  427539:	add    ecx,DWORD PTR [ebp+0x8]
  42753c:	mov    DWORD PTR [ebp+0x8],ecx
  42753f:	mov    eax,DWORD PTR [ebp+0x10]
  427542:	cmp    eax,ebx
  427544:	jne    0x427442
  42754a:	mov    eax,DWORD PTR [ebp-0x24]
  42754d:	jmp    0x427552
  42754f:	mov    eax,DWORD PTR [ebp-0x4]
  427552:	xor    eax,esi
  427554:	add    eax,edi
  427556:	pop    edi
  427557:	pop    esi
  427558:	pop    ebx
  427559:	leave  
  42755a:	ret    0xc
  42755d:	push   ebp
  42755e:	mov    ebp,esp
  427560:	sub    esp,0x420
  427566:	mov    DWORD PTR [ebp-0x14],0xf89c85a1
  42756d:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  427574:	mov    DWORD PTR [ebp-0x18],0xf89c86a1
  42757b:	push   ebx
  42757c:	mov    DWORD PTR [ebp-0x1c],0xf89c85a0
  427583:	mov    eax,DWORD PTR [ebp-0x14]
  427586:	push   esi
  427587:	mov    esi,0x75108ac
  42758c:	push   edi
  42758d:	xor    eax,esi
  42758f:	mov    edi,0x3272f3
  427594:	add    eax,edi
  427596:	mov    DWORD PTR [ebp-0x8],eax
  427599:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  4275a0:	mov    DWORD PTR [ebp-0x4],0xead71881
  4275a7:	mov    DWORD PTR [ebp-0x10],0x8
  4275ae:	mov    ecx,ecx
  4275b0:	mov    eax,DWORD PTR [ebp-0xc]
  4275b3:	mov    ecx,DWORD PTR [ebp-0x14]
  4275b6:	xor    eax,esi
  4275b8:	xor    ecx,esi
  4275ba:	add    eax,edi
  4275bc:	add    ecx,edi
  4275be:	imul   eax,ecx
  4275c1:	jmp    0x4275f4
  4275c3:	mov    eax,DWORD PTR [ebp-0x4]
  4275c6:	sub    eax,edi
  4275c8:	xor    eax,esi
  4275ca:	mov    DWORD PTR [ebp-0x8],eax
  4275cd:	lea    ebx,[ebp-0x8]
  4275d0:	call   0x427315
  4275d5:	mov    DWORD PTR [ebp-0x8],eax
  4275d8:	mov    eax,DWORD PTR [ebp-0x8]
  4275db:	mov    ecx,DWORD PTR [ebp-0x4]
  4275de:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  4275e5:	mov    eax,DWORD PTR [ebp-0xc]
  4275e8:	mov    ecx,DWORD PTR [ebp-0x4]
  4275eb:	xor    eax,esi
  4275ed:	lea    eax,[eax+ecx*1+0x3272f3]
  4275f4:	mov    DWORD PTR [ebp-0x4],eax
  4275f7:	mov    eax,DWORD PTR [ebp-0x18]
  4275fa:	mov    ecx,DWORD PTR [ebp-0xc]
  4275fd:	xor    ecx,esi
  4275ff:	xor    eax,esi
  427601:	sub    eax,ecx
  427603:	mov    ecx,DWORD PTR [ebp-0x4]
  427606:	cmp    ecx,eax
  427608:	jbe    0x4275c3
  42760a:	mov    eax,DWORD PTR [ebp-0x1c]
  42760d:	xor    eax,esi
  42760f:	add    eax,edi
  427611:	mov    DWORD PTR [ebp-0x8],eax
  427614:	mov    DWORD PTR [ebp-0x18],0xf89c86a0
  42761b:	mov    ebx,ebx
  42761d:	jmp    0x427680
  42761f:	mov    ecx,DWORD PTR [ebp-0x20]
  427622:	mov    eax,DWORD PTR [ebp-0x8]
  427625:	xor    ecx,esi
  427627:	add    ecx,edi
  427629:	shr    eax,cl
  42762b:	mov    DWORD PTR [ebp-0x4],eax
  42762e:	mov    eax,DWORD PTR [ebp+0x8]
  427631:	mov    cl,BYTE PTR [eax]
  427633:	mov    BYTE PTR [ebp+0xb],cl
  427636:	mov    cl,BYTE PTR [ebp+0xb]
  427639:	mov    edx,DWORD PTR [ebp-0x8]
  42763c:	movzx  ecx,cl
  42763f:	xor    ecx,edx
  427641:	mov    DWORD PTR [ebp+0x8],ecx
  427644:	mov    ecx,DWORD PTR [ebp-0x18]
  427647:	mov    edx,DWORD PTR [ebp+0x8]
  42764a:	xor    ecx,esi
  42764c:	add    ecx,edi
  42764e:	and    ecx,edx
  427650:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  427657:	mov    edx,DWORD PTR [ebp-0x4]
  42765a:	xor    ecx,edx
  42765c:	mov    DWORD PTR [ebp-0x8],ecx
  42765f:	mov    ecx,DWORD PTR [ebp-0xc]
  427662:	xor    ecx,esi
  427664:	lea    eax,[eax+ecx*1+0x3272f3]
  42766b:	mov    DWORD PTR [ebp+0x8],eax
  42766e:	mov    eax,DWORD PTR [ebp-0xc]
  427671:	xor    eax,esi
  427673:	mov    ecx,0xffcd8d0d
  427678:	sub    ecx,eax
  42767a:	add    ecx,DWORD PTR [ebp-0x10]
  42767d:	mov    DWORD PTR [ebp-0x10],ecx
  427680:	mov    eax,DWORD PTR [ebp-0x14]
  427683:	mov    ecx,DWORD PTR [ebp-0x10]
  427686:	xor    eax,esi
  427688:	add    eax,edi
  42768a:	cmp    ecx,eax
  42768c:	jne    0x42761f
  42768e:	mov    eax,DWORD PTR [ebp-0x1c]
  427691:	mov    ecx,DWORD PTR [ebp-0x8]
  427694:	xor    eax,esi
  427696:	add    eax,edi
  427698:	pop    edi
  427699:	pop    esi
  42769a:	xor    eax,ecx
  42769c:	pop    ebx
  42769d:	leave  
  42769e:	ret    0x4
  4276a1:	push   ebp
  4276a2:	mov    ebp,esp
  4276a4:	mov    eax,DWORD PTR [ebp+0x1c]
  4276a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4276aa:	mov    edx,DWORD PTR [ebp+0x10]
  4276ad:	mov    eax,DWORD PTR [eax+0x190]
  4276b3:	mov    eax,DWORD PTR [eax]
  4276b5:	sub    esp,0x64
  4276b8:	push   ebx
  4276b9:	push   esi
  4276ba:	push   edi
  4276bb:	mov    edi,0x75108ac
  4276c0:	xor    ecx,edi
  4276c2:	mov    ebx,0x3272f3
  4276c7:	add    ecx,ebx
  4276c9:	cmp    ecx,edx
  4276cb:	jne    0x4276dc
  4276cd:	or     DWORD PTR ds:0x3750c3f,0x4263eb28
  4276d7:	jmp    0x427bd8
  4276dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4276df:	mov    esi,DWORD PTR [ebp+0x14]
  4276e2:	mov    edx,DWORD PTR [esi]
  4276e4:	xor    ecx,edi
  4276e6:	add    ecx,ebx
  4276e8:	cmp    edx,ecx
  4276ea:	je     0x427b93
  4276f0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4276f3:	mov    DWORD PTR [ebp-0x1c],eax
  4276f6:	mov    DWORD PTR [ebp+0x1c],ecx
  4276f9:	mov    ecx,DWORD PTR [ebp+0x18]
  4276fc:	mov    eax,DWORD PTR [esi]
  4276fe:	mov    DWORD PTR [ebp-0x20],eax
  427701:	mov    DWORD PTR [ebp+0x8],0xf89c85a1
  427708:	mov    edx,0xf89c85a2
  42770d:	mov    DWORD PTR [ebp-0x8],edx
  427710:	mov    eax,DWORD PTR [ebp+0x1c]
  427713:	mov    DWORD PTR [ebp+0x1c],eax
  427716:	mov    eax,DWORD PTR [ebp+0x1c]
  427719:	mov    eax,DWORD PTR [eax+0x190]
  42771f:	mov    eax,DWORD PTR [eax]
  427721:	mov    DWORD PTR [ebp-0x24],ecx
  427724:	mov    ecx,DWORD PTR [ebp+0x1c]
  427727:	mov    ecx,DWORD PTR [ecx+0x190]
  42772d:	mov    ecx,DWORD PTR [ecx]
  42772f:	add    ecx,DWORD PTR [eax+0x3c]
  427732:	mov    DWORD PTR [ebp+0x10],ecx
  427735:	mov    eax,DWORD PTR [ebp+0x8]
  427738:	xor    eax,edi
  42773a:	add    eax,ebx
  42773c:	mov    DWORD PTR [ebp-0x4],eax
  42773f:	mov    eax,DWORD PTR [ebp+0x8]
  427742:	xor    eax,edi
  427744:	add    eax,ebx
  427746:	mov    DWORD PTR [ebp+0x18],eax
  427749:	mov    eax,DWORD PTR [ebp+0x10]
  42774c:	mov    eax,DWORD PTR [eax+0x50]
  42774f:	sub    eax,0xc
  427752:	mov    DWORD PTR [ebp-0x28],eax
  427755:	mov    eax,DWORD PTR [ebp+0x10]
  427758:	mov    eax,DWORD PTR [eax+0x38]
  42775b:	mov    ecx,DWORD PTR [ebp+0x10]
  42775e:	dec    eax
  42775f:	test   DWORD PTR [ecx+0x54],eax
  427762:	mov    eax,DWORD PTR [ebp+0x10]
  427765:	je     0x42777f
  427767:	mov    eax,DWORD PTR [eax+0x38]
  42776a:	mov    ecx,DWORD PTR [ebp+0x10]
  42776d:	mov    ecx,DWORD PTR [ecx+0x54]
  427770:	dec    eax
  427771:	not    eax
  427773:	and    ecx,eax
  427775:	mov    eax,DWORD PTR [ebp+0x10]
  427778:	mov    eax,DWORD PTR [eax+0x38]
  42777b:	add    eax,ecx
  42777d:	jmp    0x427782
  42777f:	mov    eax,DWORD PTR [eax+0x54]
  427782:	mov    DWORD PTR [ebp+0x1c],eax
  427785:	mov    eax,DWORD PTR [ebp+0x8]
  427788:	xor    eax,edi
  42778a:	add    eax,ebx
  42778c:	mov    DWORD PTR [ebp+0x18],eax
  42778f:	mov    eax,DWORD PTR [ebp+0x8]
  427792:	xor    eax,edi
  427794:	add    eax,ebx
  427796:	mov    DWORD PTR [ebp+0x18],eax
  427799:	mov    eax,DWORD PTR [ebp+0x8]
  42779c:	mov    ecx,DWORD PTR [ebp-0x24]
  42779f:	xor    eax,edi
  4277a1:	add    eax,ebx
  4277a3:	mov    DWORD PTR [ecx],eax
  4277a5:	mov    DWORD PTR [ebp+0x18],edx
  4277a8:	mov    DWORD PTR [ebp+0x18],0xf89c85a3
  4277af:	mov    DWORD PTR [ebp+0x18],0xf89c85bc
  4277b6:	mov    DWORD PTR [ebp+0x18],0xf89c85bd
  4277bd:	mov    eax,DWORD PTR [ebp-0x8]
  4277c0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4277c3:	xor    eax,edi
  4277c5:	add    eax,ebx
  4277c7:	imul   eax,ecx
  4277ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4277cd:	mov    edx,DWORD PTR [ebp-0x28]
  4277d0:	xor    ecx,edi
  4277d2:	lea    ecx,[ecx+edx*1+0x3272f3]
  4277d9:	cmp    eax,ecx
  4277db:	jae    0x427b8c
  4277e1:	mov    eax,DWORD PTR [ebp+0x8]
  4277e4:	xor    eax,edi
  4277e6:	add    eax,ebx
  4277e8:	mov    DWORD PTR [ebp+0x18],eax
  4277eb:	mov    eax,DWORD PTR [ebp+0x1c]
  4277ee:	add    eax,DWORD PTR [ebp-0x1c]
  4277f1:	mov    DWORD PTR [ebp-0x4],eax
  4277f4:	push   DWORD PTR [ebp-0x4]
  4277f7:	mov    esi,DWORD PTR [ebp-0x1c]
  4277fa:	mov    ecx,DWORD PTR [ebp+0x10]
  4277fd:	call   0x42694d
  427802:	mov    DWORD PTR [ebp+0xc],eax
  427805:	mov    DWORD PTR [ebp-0x18],0xf89c85b9
  42780c:	mov    eax,DWORD PTR [ebp-0x18]
  42780f:	xor    eax,edi
  427811:	lea    ecx,[ebp-0x40]
  427814:	add    eax,ebx
  427816:	push   ecx
  427817:	call   0x426ee1
  42781c:	mov    eax,DWORD PTR [ebp+0xc]
  42781f:	test   eax,eax
  427821:	je     0x427871
  427823:	mov    eax,DWORD PTR [ebp-0x18]
  427826:	xor    eax,edi
  427828:	add    eax,ebx
  42782a:	push   eax
  42782b:	push   DWORD PTR [ebp+0xc]
  42782e:	lea    eax,[ebp-0x40]
  427831:	push   eax
  427832:	call   0x426dd7
  427837:	mov    eax,DWORD PTR [ebp-0x4]
  42783a:	mov    DWORD PTR [ebp-0x18],eax
  42783d:	mov    eax,DWORD PTR [ebp-0x18]
  427840:	mov    ecx,DWORD PTR [ebp-0x1c]
  427843:	sub    eax,ecx
  427845:	mov    DWORD PTR [ebp-0x18],eax
  427848:	mov    eax,DWORD PTR [ebp+0xc]
  42784b:	mov    ecx,DWORD PTR [ebp+0xc]
  42784e:	mov    eax,DWORD PTR [eax+0x10]
  427851:	add    eax,DWORD PTR [ecx+0xc]
  427854:	mov    ecx,DWORD PTR [ebp-0x18]
  427857:	cmp    ecx,eax
  427859:	jb     0x427871
  42785b:	mov    eax,DWORD PTR [ebp+0xc]
  42785e:	mov    eax,DWORD PTR [eax+0xc]
  427861:	mov    ecx,DWORD PTR [ebp+0xc]
  427864:	add    eax,DWORD PTR [ecx+0x8]
  427867:	mov    ecx,DWORD PTR [ebp-0x18]
  42786a:	sub    eax,ecx
  42786c:	jmp    0x427b5f
  427871:	push   0xc
  427873:	push   DWORD PTR [ebp-0x4]
  427876:	lea    eax,[ebp-0x4c]
  427879:	push   eax
  42787a:	call   0x426dd7
  42787f:	mov    eax,0xf89c85a1
  427884:	mov    DWORD PTR [ebp-0x2c],eax
  427887:	mov    DWORD PTR [ebp-0x30],0xf89c85a2
  42788e:	mov    DWORD PTR [ebp-0x34],0xf89c85a3
  427895:	mov    DWORD PTR [ebp-0x38],0xf89c85bc
  42789c:	lea    ecx,[ebp-0x2c]
  42789f:	mov    DWORD PTR [ebp-0xc],ecx
  4278a2:	lea    ecx,[ebp-0x30]
  4278a5:	mov    DWORD PTR [ebp-0x10],ecx
  4278a8:	lea    ecx,[ebp-0x34]
  4278ab:	mov    DWORD PTR [ebp+0xc],ecx
  4278ae:	lea    ecx,[ebp-0x38]
  4278b1:	mov    DWORD PTR [ebp-0x14],ecx
  4278b4:	mov    ecx,DWORD PTR [ebp+0x8]
  4278b7:	xor    ecx,edi
  4278b9:	add    ecx,ebx
  4278bb:	mov    DWORD PTR [ebp-0x18],ecx
  4278be:	jmp    0x427aba
  4278c3:	cmp    eax,0xf89c85a3
  4278c8:	je     0x427acc
  4278ce:	mov    ecx,DWORD PTR [ebp-0x8]
  4278d1:	xor    ecx,edi
  4278d3:	mov    esi,eax
  4278d5:	add    ecx,ebx
  4278d7:	mov    DWORD PTR [ebp+0x18],ecx
  4278da:	mov    eax,DWORD PTR [ebp-0x18]
  4278dd:	xor    esi,edi
  4278df:	lea    eax,[eax+esi*1+0x3272f3]
  4278e6:	mov    DWORD PTR [ebp-0x18],eax
  4278e9:	mov    eax,DWORD PTR [ebp-0x8]
  4278ec:	mov    ecx,DWORD PTR [ebp-0x18]
  4278ef:	xor    eax,edi
  4278f1:	add    eax,ebx
  4278f3:	cmp    ecx,eax
  4278f5:	jne    0x42790a
  4278f7:	mov    eax,DWORD PTR [ebp+0x8]
  4278fa:	xor    eax,edi
  4278fc:	add    eax,ebx
  4278fe:	push   eax
  4278ff:	push   0xc
  427901:	lea    eax,[ebp-0x4c]
  427904:	push   eax
  427905:	call   0x4273bd
  42790a:	mov    eax,DWORD PTR [ebp-0xc]
  42790d:	mov    eax,DWORD PTR [eax]
  42790f:	xor    eax,edi
  427911:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427918:	mov    ecx,DWORD PTR [ebp+0x8]
  42791b:	xor    ecx,edi
  42791d:	movzx  eax,al
  427920:	add    ecx,ebx
  427922:	cmp    eax,ecx
  427924:	je     0x427aa2
  42792a:	mov    eax,DWORD PTR [ebp-0x10]
  42792d:	mov    eax,DWORD PTR [eax]
  42792f:	xor    eax,edi
  427931:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427938:	mov    ecx,DWORD PTR [ebp+0x8]
  42793b:	xor    ecx,edi
  42793d:	movzx  eax,al
  427940:	add    ecx,ebx
  427942:	cmp    eax,ecx
  427944:	je     0x427aa2
  42794a:	mov    eax,DWORD PTR [ebp+0xc]
  42794d:	mov    eax,DWORD PTR [eax]
  42794f:	xor    eax,edi
  427951:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427958:	mov    ecx,DWORD PTR [ebp+0x8]
  42795b:	xor    ecx,edi
  42795d:	movzx  eax,al
  427960:	add    ecx,ebx
  427962:	cmp    eax,ecx
  427964:	je     0x427aa2
  42796a:	mov    eax,DWORD PTR [ebp-0x14]
  42796d:	mov    eax,DWORD PTR [eax]
  42796f:	xor    eax,edi
  427971:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427978:	mov    ecx,DWORD PTR [ebp+0x8]
  42797b:	xor    ecx,edi
  42797d:	movzx  eax,al
  427980:	add    ecx,ebx
  427982:	cmp    eax,ecx
  427984:	je     0x427aa2
  42798a:	mov    eax,DWORD PTR [ebp-0x10]
  42798d:	mov    eax,DWORD PTR [eax]
  42798f:	xor    eax,edi
  427991:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427998:	mov    ecx,DWORD PTR [ebp-0xc]
  42799b:	mov    ecx,DWORD PTR [ecx]
  42799d:	xor    ecx,edi
  42799f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279a6:	xor    al,cl
  4279a8:	mov    ecx,DWORD PTR [ebp+0xc]
  4279ab:	mov    ecx,DWORD PTR [ecx]
  4279ad:	xor    ecx,edi
  4279af:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279b6:	or     al,cl
  4279b8:	mov    ecx,DWORD PTR [ebp-0xc]
  4279bb:	mov    ecx,DWORD PTR [ecx]
  4279bd:	xor    ecx,edi
  4279bf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  4279c6:	cmp    cl,al
  4279c8:	jne    0x427aa2
  4279ce:	mov    eax,DWORD PTR [ebp+0xc]
  4279d1:	mov    eax,DWORD PTR [eax]
  4279d3:	xor    eax,edi
  4279d5:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  4279dc:	mov    ecx,DWORD PTR [ebp-0x10]
  4279df:	mov    ecx,DWORD PTR [ecx]
  4279e1:	xor    ecx,edi
  4279e3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279ea:	xor    al,cl
  4279ec:	mov    ecx,DWORD PTR [ebp-0x14]
  4279ef:	mov    ecx,DWORD PTR [ecx]
  4279f1:	xor    ecx,edi
  4279f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279fa:	or     al,cl
  4279fc:	mov    ecx,DWORD PTR [ebp-0x10]
  4279ff:	mov    ecx,DWORD PTR [ecx]
  427a01:	xor    ecx,edi
  427a03:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  427a0a:	cmp    cl,al
  427a0c:	jne    0x427aa2
  427a12:	mov    eax,DWORD PTR [ebp-0x14]
  427a15:	mov    eax,DWORD PTR [eax]
  427a17:	xor    eax,edi
  427a19:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427a20:	mov    ecx,DWORD PTR [ebp+0xc]
  427a23:	mov    ecx,DWORD PTR [ecx]
  427a25:	xor    ecx,edi
  427a27:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a2e:	xor    al,cl
  427a30:	mov    ecx,DWORD PTR [ebp-0xc]
  427a33:	mov    ecx,DWORD PTR [ecx]
  427a35:	xor    ecx,edi
  427a37:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a3e:	or     al,cl
  427a40:	mov    ecx,DWORD PTR [ebp+0xc]
  427a43:	mov    ecx,DWORD PTR [ecx]
  427a45:	xor    ecx,edi
  427a47:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  427a4e:	cmp    cl,al
  427a50:	jne    0x427aa2
  427a52:	mov    eax,DWORD PTR [ebp-0x14]
  427a55:	mov    eax,DWORD PTR [eax]
  427a57:	xor    eax,edi
  427a59:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427a60:	mov    ecx,DWORD PTR [ebp-0xc]
  427a63:	mov    ecx,DWORD PTR [ecx]
  427a65:	xor    ecx,edi
  427a67:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a6e:	xor    al,cl
  427a70:	mov    ecx,DWORD PTR [ebp-0x10]
  427a73:	mov    ecx,DWORD PTR [ecx]
  427a75:	xor    ecx,edi
  427a77:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a7e:	or     al,cl
  427a80:	mov    ecx,DWORD PTR [ebp-0x14]
  427a83:	mov    ecx,DWORD PTR [ecx]
  427a85:	xor    ecx,edi
  427a87:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  427a8e:	cmp    cl,al
  427a90:	jne    0x427aa2
  427a92:	lea    eax,[ebp-0x4c]
  427a95:	push   eax
  427a96:	call   0x42755d
  427a9b:	mov    ecx,DWORD PTR [ebp-0x44]
  427a9e:	cmp    eax,ecx
  427aa0:	je     0x427aac
  427aa2:	mov    eax,DWORD PTR [ebp+0x8]
  427aa5:	xor    eax,edi
  427aa7:	add    eax,ebx
  427aa9:	mov    DWORD PTR [ebp+0x18],eax
  427aac:	mov    eax,DWORD PTR [ebp-0x8]
  427aaf:	xor    eax,edi
  427ab1:	lea    eax,[eax+esi*1+0x3272f3]
  427ab8:	xor    eax,edi
  427aba:	mov    ecx,DWORD PTR [ebp+0x8]
  427abd:	mov    edx,DWORD PTR [ebp+0x18]
  427ac0:	xor    ecx,edi
  427ac2:	add    ecx,ebx
  427ac4:	cmp    edx,ecx
  427ac6:	je     0x4278c3
  427acc:	mov    eax,DWORD PTR [ebp+0x8]
  427acf:	mov    ecx,DWORD PTR [ebp+0x18]
  427ad2:	xor    eax,edi
  427ad4:	add    eax,ebx
  427ad6:	cmp    ecx,eax
  427ad8:	jne    0x427aeb
  427ada:	mov    eax,DWORD PTR [ebp-0x8]
  427add:	mov    ecx,DWORD PTR [ebp+0x1c]
  427ae0:	xor    eax,edi
  427ae2:	lea    eax,[eax+ecx*1+0x3272f3]
  427ae9:	jmp    0x427b62
  427aeb:	push   0x18
  427aed:	push   DWORD PTR [ebp-0x4]
  427af0:	lea    eax,[ebp-0x64]
  427af3:	push   eax
  427af4:	call   0x426dd7
  427af9:	mov    eax,DWORD PTR [ebp+0x8]
  427afc:	mov    ecx,DWORD PTR [ebp-0x18]
  427aff:	xor    eax,edi
  427b01:	add    eax,ebx
  427b03:	cmp    eax,ecx
  427b05:	je     0x427b1a
  427b07:	mov    eax,DWORD PTR [ebp+0x8]
  427b0a:	xor    eax,edi
  427b0c:	add    eax,ebx
  427b0e:	push   eax
  427b0f:	push   0x18
  427b11:	lea    eax,[ebp-0x64]
  427b14:	push   eax
  427b15:	call   0x4273bd
  427b1a:	mov    eax,DWORD PTR [ebp-0x4]
  427b1d:	add    eax,0x18
  427b20:	mov    DWORD PTR [ebp+0x18],eax
  427b23:	push   DWORD PTR [ebp-0x50]
  427b26:	push   DWORD PTR [ebp+0x18]
  427b29:	mov    eax,DWORD PTR [ebp-0x54]
  427b2c:	add    eax,DWORD PTR [ebp-0x20]
  427b2f:	push   eax
  427b30:	call   0x426dd7
  427b35:	mov    eax,DWORD PTR [ebp+0x8]
  427b38:	mov    ecx,DWORD PTR [ebp-0x18]
  427b3b:	xor    eax,edi
  427b3d:	add    eax,ebx
  427b3f:	cmp    eax,ecx
  427b41:	je     0x427b54
  427b43:	push   0x0
  427b45:	push   DWORD PTR [ebp-0x50]
  427b48:	mov    eax,DWORD PTR [ebp-0x54]
  427b4b:	add    eax,DWORD PTR [ebp-0x20]
  427b4e:	push   eax
  427b4f:	call   0x4273bd
  427b54:	mov    eax,DWORD PTR [ebp-0x24]
  427b57:	mov    ecx,DWORD PTR [ebp-0x50]
  427b5a:	add    DWORD PTR [eax],ecx
  427b5c:	mov    eax,DWORD PTR [ebp-0x50]
  427b5f:	add    eax,DWORD PTR [ebp+0x1c]
  427b62:	mov    DWORD PTR [ebp+0x1c],eax
  427b65:	mov    eax,DWORD PTR [ebp-0x8]
  427b68:	mov    ecx,DWORD PTR [ebp+0x1c]
  427b6b:	xor    eax,edi
  427b6d:	add    eax,ebx
  427b6f:	imul   eax,ecx
  427b72:	mov    ecx,DWORD PTR [ebp+0x8]
  427b75:	mov    edx,DWORD PTR [ebp-0x28]
  427b78:	xor    ecx,edi
  427b7a:	lea    ecx,[ecx+edx*1+0x3272f3]
  427b81:	cmp    eax,ecx
  427b83:	jb     0x4277e1
  427b89:	mov    esi,DWORD PTR [ebp+0x14]
  427b8c:	mov    eax,DWORD PTR [ebp-0x20]
  427b8f:	mov    DWORD PTR [esi],eax
  427b91:	jmp    0x427bd8
  427b93:	mov    ecx,DWORD PTR [ebp+0x8]
  427b96:	mov    edx,DWORD PTR [ebp+0xc]
  427b99:	xor    ecx,edi
  427b9b:	xor    edx,edi
  427b9d:	add    ecx,ebx
  427b9f:	add    edx,ebx
  427ba1:	cmp    ecx,edx
  427ba3:	jne    0x427bb7
  427ba5:	mov    eax,ds:0x7f642dd8
  427baa:	imul   eax,eax,0x9f15fccf
  427bb0:	mov    ds:0x7f642dd8,eax
  427bb5:	jmp    0x427bd8
  427bb7:	mov    ecx,DWORD PTR [ebp+0x8]
  427bba:	xor    ecx,edi
  427bbc:	add    ecx,ebx
  427bbe:	cmp    eax,ecx
  427bc0:	je     0x427bce
  427bc2:	sub    DWORD PTR ds:0xf861e38,0x709beac8
  427bcc:	jmp    0x427bd8
  427bce:	and    DWORD PTR ds:0x3343fad8,0x5265ec3f
  427bd8:	pop    edi
  427bd9:	pop    esi
  427bda:	pop    ebx
  427bdb:	leave  
  427bdc:	ret    0x18
  427bdf:	push   ebp
  427be0:	mov    ebp,esp
  427be2:	and    esp,0xfffffff8
  427be5:	mov    eax,DWORD PTR [ebp+0x20]
  427be8:	sub    esp,0x14
  427beb:	push   ebx
  427bec:	mov    ebx,DWORD PTR [ebp+0x14]
  427bef:	push   esi
  427bf0:	push   edi
  427bf1:	cmp    eax,0xf89c85a1
  427bf6:	jne    0x427c02
  427bf8:	push   0xf89c85a2
  427bfd:	jmp    0x427d34
  427c02:	mov    eax,DWORD PTR [ebp+0x20]
  427c05:	cmp    eax,0xf89c85a2
  427c0a:	jne    0x427c16
  427c0c:	push   0xf89c85a3
  427c11:	jmp    0x427d34
  427c16:	mov    eax,DWORD PTR [ebp+0x20]
  427c19:	cmp    eax,0xf89c85a3
  427c1e:	jne    0x427c2a
  427c20:	push   0xf89c85bc
  427c25:	jmp    0x427d34
  427c2a:	mov    eax,DWORD PTR [ebp+0x20]
  427c2d:	cmp    eax,0xf89c85bc
  427c32:	jne    0x427c3e
  427c34:	push   0xf89c85bd
  427c39:	jmp    0x427d34
  427c3e:	mov    ecx,DWORD PTR [ebp+0x20]
  427c41:	mov    eax,0xf89c85b8
  427c46:	cmp    ecx,eax
  427c48:	jne    0x427d04
  427c4e:	mov    eax,DWORD PTR [ebp+0x10]
  427c51:	mov    DWORD PTR [esp+0xc],eax
  427c55:	mov    eax,DWORD PTR [ebp+0x18]
  427c58:	mov    DWORD PTR [esp+0x14],eax
  427c5c:	mov    eax,DWORD PTR [ebp+0xc]
  427c5f:	mov    DWORD PTR [esp+0x18],eax
  427c63:	mov    eax,DWORD PTR [ebp+0x8]
  427c66:	mov    DWORD PTR [esp+0x10],eax
  427c6a:	mov    eax,DWORD PTR [esp+0x10]
  427c6e:	mov    ecx,DWORD PTR [esp+0x14]
  427c72:	mov    edi,0x75108ac
  427c77:	xor    eax,edi
  427c79:	mov    esi,0x3272f3
  427c7e:	add    eax,esi
  427c80:	mov    DWORD PTR [ecx],eax
  427c82:	mov    eax,DWORD PTR [esp+0xc]
  427c86:	mov    eax,DWORD PTR [eax+0x194]
  427c8c:	mov    ecx,DWORD PTR [eax]
  427c8e:	mov    eax,DWORD PTR [esp+0xc]
  427c92:	mov    eax,DWORD PTR [eax+0x194]
  427c98:	mov    eax,DWORD PTR [eax]
  427c9a:	add    eax,DWORD PTR [ecx+0x3c]
  427c9d:	mov    ecx,DWORD PTR [esp+0xc]
  427ca1:	mov    ecx,DWORD PTR [ecx+0x1e0]
  427ca7:	mov    ecx,DWORD PTR [ecx+0x14]
  427caa:	push   0x4
  427cac:	push   0x3000
  427cb1:	push   DWORD PTR [eax+0x50]
  427cb4:	push   0x0
  427cb6:	call   ecx
  427cb8:	mov    DWORD PTR [ebx],eax
  427cba:	mov    eax,DWORD PTR [esp+0x10]
  427cbe:	push   DWORD PTR [esp+0xc]
  427cc2:	xor    eax,edi
  427cc4:	add    eax,esi
  427cc6:	mov    DWORD PTR [esp+0x20],eax
  427cca:	lea    eax,[esp+0x20]
  427cce:	push   eax
  427ccf:	push   ebx
  427cd0:	push   DWORD PTR [esp+0x20]
  427cd4:	push   DWORD PTR [esp+0x28]
  427cd8:	push   DWORD PTR [esp+0x24]
  427cdc:	call   0x4276a1
  427ce1:	mov    eax,DWORD PTR [esp+0x10]
  427ce5:	mov    ecx,DWORD PTR [ebx]
  427ce7:	xor    eax,edi
  427ce9:	add    eax,esi
  427ceb:	cmp    ecx,eax
  427ced:	je     0x427d4b
  427cef:	mov    eax,DWORD PTR [esp+0x18]
  427cf3:	mov    ecx,DWORD PTR [esp+0x14]
  427cf7:	xor    eax,edi
  427cf9:	add    eax,esi
  427cfb:	imul   eax,DWORD PTR [esp+0x1c]
  427d00:	mov    DWORD PTR [ecx],eax
  427d02:	jmp    0x427d4b
  427d04:	mov    ecx,DWORD PTR [ebp+0x20]
  427d07:	cmp    ecx,0xf89c85bd
  427d0d:	jne    0x427d16
  427d0f:	push   0xf89c85be
  427d14:	jmp    0x427d34
  427d16:	mov    ecx,DWORD PTR [ebp+0x20]
  427d19:	cmp    ecx,0xf89c85be
  427d1f:	jne    0x427d28
  427d21:	push   0xf89c85bf
  427d26:	jmp    0x427d34
  427d28:	mov    ecx,DWORD PTR [ebp+0x20]
  427d2b:	cmp    ecx,0xf89c85bf
  427d31:	jne    0x427d4b
  427d33:	push   eax
  427d34:	push   DWORD PTR [ebp+0x1c]
  427d37:	push   DWORD PTR [ebp+0x18]
  427d3a:	push   ebx
  427d3b:	push   DWORD PTR [ebp+0x10]
  427d3e:	push   DWORD PTR [ebp+0xc]
  427d41:	push   DWORD PTR [ebp+0x8]
  427d44:	call   0x427bdf
  427d49:	mov    DWORD PTR [ebx],eax
  427d4b:	mov    eax,DWORD PTR [ebx]
  427d4d:	pop    edi
  427d4e:	pop    esi
  427d4f:	pop    ebx
  427d50:	mov    esp,ebp
  427d52:	pop    ebp
  427d53:	ret    0x1c
  427d56:	push   ebp
  427d57:	mov    ebp,esp
  427d59:	sub    esp,0xc
  427d5c:	mov    eax,0xf89c85a1
  427d61:	mov    DWORD PTR [ebp-0x8],eax
  427d64:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  427d6b:	mov    ecx,DWORD PTR [ebp-0x8]
  427d6e:	xor    ecx,0x75108ac
  427d74:	add    ecx,0x3272f3
  427d7a:	mov    DWORD PTR [ebp-0x4],ecx
  427d7d:	mov    ecx,DWORD PTR [ebp+0xc]
  427d80:	push   eax
  427d81:	mov    DWORD PTR [ebp+0xc],ecx
  427d84:	push   DWORD PTR [ebp+0xc]
  427d87:	lea    eax,[ebp-0x4]
  427d8a:	push   DWORD PTR [ebp+0x8]
  427d8d:	push   eax
  427d8e:	push   DWORD PTR [ebp+0xc]
  427d91:	push   DWORD PTR [ebp-0xc]
  427d94:	push   DWORD PTR [ebp-0x8]
  427d97:	call   0x427bdf
  427d9c:	mov    DWORD PTR [ebp-0x4],eax
  427d9f:	mov    eax,DWORD PTR [ebp-0x4]
  427da2:	leave  
  427da3:	ret    0x8
